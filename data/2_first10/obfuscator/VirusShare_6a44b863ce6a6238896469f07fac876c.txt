mov
in
call
in
movl
mov
sahf
lret
and
adc
add
int3
add
inc
or
add
push
filds
mov
mov
mov
push
jle
mov
and
call
add
pop
repnz
repz
cmpsb
div
lock
leave
test
push
bound
out
jl
gs
push
jb
pop
sub
lret
xchg
mov
xchg
pop
enter
adc
in
dec
cli
sub
mov
lods
dec
test
dec
les
cs
leave
dec
lods
ret
push
adc
dec
push
dec
jo
mov
mov
push
sub
sub
jl
push
cwtl
scas
push
push
push
dec
cs
rorb
cwtl
sub
dec
push
test
das
add
movsb
mulb
inc
test
push
or
push
cs
leave
push
mov
push
dec
jae,pn
pop
and
xchg
inc
or
mov
and
inc
leave
test
loopne
xor
pop
dec
cs
rclb
or
jb
xor
insl
mov
enter
xor
xlat
jo
inc
ds
pop
xor
pop
repnz
lods
int
mov
push
cld
out
cmp
test
imul
cmp
in
or
loopne
cs
jb
pop
nop
rolb
xchg
ljmp
pop
enter
lock
sbb
repnz
fdivs
pop
fs
xor
sub
mov
in
leave
xchg
and
mulb
and
dec
test
mov
push
push
call
pop
enter
push
push
push
in
ds
clc
mov
repnz
loop
or
sub
nop
add
mov
inc
in
leave
test
sbb
outsl
ficoms
mov
jo
cmp
xchg
jno
jo
movsb
jb
inc
ds
shl
jbe
and
fcmovnu
jne
sub
scas
or
jl
push
mov
jbe
pop
dec
cs
test
ja
xlat
lret
push
jb
js
fs
add
xchg
sub
inc
ds
pop
jp
incl
push
mov
movsl
in
and
mov
movl
or
dec
cld
push
call
fists
pop
add
cmp
je
mov
jp
mov
jge
inc
jl
jmp
jnp
div
jmp
jmp
push
add
jbe
push
cmp
add
outsb
lods
popa
mov
mov
inc
adc
push
into
clc
mov
add
outsl
sti
out
mov
hlt
and
push
lcall
or
add
mov
clc
clc
clc
clc
in
dec
add
mov
cli
jmp
mov
adc
shrb
add
add
adc
push
ficompl
add
xor
push
sar
in
lock
loop
push
call
push
js
imul
inc
clc
jmp
sbb
mov
jo
cltd
dec
cmp
dec
fsts
movsb
mov
jl
add
out
clc
push
jnp
sbb
insl
pop
je
adc
push
adc
sub
sbb
push
or
lock
imul
lock
lock
shl
jne
cmp
jae
pop
scas
mov
scas
jo
push
or
fisttps
jmp
dec
sti
xor
ret
clc
cld
push
or
jle
or
add
hlt
adc
pop
pop
or
push
sbb
loop
fdivr
decl
sbbl
mov
add
push
lea
and
cmp
fmuls
js
cmp
dec
push
mov
aaa
incl
jmp
sub
loope
xor
int
push
cmpsl
cmp
push
fbld
push
mov
sbb
sub
fsubl
or
jg
insb
imul
xor
adc
aaa
xchg
jge
or
out
lods
push
gs
cmp
or
push
cli
adc
cwtl
push
sbb
push
enter
fs
push
push
test
adc
mov
xchg
jo
test
pop
push
fldcw
mov
add
fs
rcr
add
call
push
test
push
xchg
in
push
in
incl
push
sbbl
test
in
fs
jnp
jmp
loopne
out
and
fwait
cmp
jg
pushf
mov
lea
cwtl
push
cmp
pop
sbb
pop
mov
xchg
test
mov
ret
pop
add
hlt
adc
shr
imulb
or
es
cld
dec
xchg
mov
loopne
or
pop
push
inc
mov
xchg
and
cld
pop
sbb
cltd
outsb
fnstenv
adc
gs
add
ret
lret
daa
ss
sub
gs
dec
shlb
sbb
push
pop
mov
jg
rorl
push
add
aad
rcl
mov
or
adc
fst
push
push
inc
data16
cmp
repnz
pusha
cmpsb
add
push
xor
clc
loop
xchg
xor
jns
and
jg
adc
or
dec
mov
sub
sub
aas
xor
imul
bound
jge,pn
in
inc
cmp
ret
sub
nop
subl
and
scas
push
xor
ljmp
mov
inc
fmuls
push
cmc
inc
shll
mov
int
call
fstps
iret
in
subb
mov
jge,pn
fdivl
clc
mov
xor
pop
push
lea
push
mov
or
push
push
mov
lds
xchg
lea
mov
pushf
mov
clc
mov
cld
roll
sbb
or
sbb
push
loope
push
push
int3
cld
stc
imul
cmp
ss
mov
or
dec
pushf
std
push
jae
repnz
inc
sub
push
aad
ret
inc
aaa
xchg
and
cli
aam
inc
push
push
loop
or
xor
cmp
push
pop
push
xchg
jp
hlt
xchg
loopne
fnstenv
scas
adc
idivb
push
pop
add
fs
inc
popf
push
sysret
mov
fs
pusha
jb
push
inc
cli
ljmp
push
push
jno
sbb
cmp
jno
pop
cwtl
push
out
push
push
jno
sbb
jo
xabort
movsl
in
sbb
inc
orps
rcll
jae
jnp
decb
mov
push
cmp
das
inc
xor
push
push
rorb
inc
adc
push
stc
jecxz
push
pop
xchg
dec
adc
sbb
andb
cmp
add
push
mov
cli
add
aam
nopl
shl
sbb
imul
push
insb
arpl
ljmp
pop
je
mov
cmp
cmc
rcrl
mov
loopne
sub
push
dec
sbb
mov
adcb
cmp
cld
test
cmpl
adc
xchg
jmp
or
or
inc
pop
xchg
rorl
mov
addl
lret
sbb
adc
pop
test
or
mov
jge
sbb
push
and
aad
std
jno
lods
lea
out
daa
rol
daa
loopne
cmp
inc
push
or
inc
call
xchg
push
mov
cvttps2pi
pop
jl
dec
or
shrb
sub
ss
loopne
mov
sti
lods
add
cmp
mov
push
test
jb
negl
insb
into
jo
rcrl
xor
subl
sbb
or
js
mov
push
mov
mov
mov
fcmovne
add
dec
daa
jmp
popf
test
push
inc
jp
rcll
pop
jne
mov
divl
in
fists
xor
push
or
mov
pop
lea
xchg
inc
mov
mov
pusha
xor
cld
jecxz
fnsave
lock
loopne
dec
add
subb
mov
push
cld
or
in
loopne
sti
adc
pop
or
fimull
push
or
daa
mov
jbe
loope
mov
adc
cmpsb
adc
lfs
fidivl
mov
mov
adc
into
pop
sbb
scas
sbb
aaa
mov
add
pop
push
lds
sbb
fistpll
imul
push
dec
call
push
stos
inc
aaa
ljmp
push
and
repnz
adc
fwait
lods
and
xor
add
and
xchg
pop
movsb
cs
movl
pop
or
mov
mov
jge
lods
adc
mov
call
lcall
js
xchg
pushl
les
js
or
sbb
hlt
pushl
leave
push
mov
mov
jmp
movl
in
les
jge
jge
xor
daa
xchg
ret
add
les
mov
mulps
sbb
popf
ret
add
loop
jb
cmp
jge
cld
packuswb
cmpsl
js
mov
jmp
or
iret
inc
jo
dec
or
sub
mov
adcb
jge
stos
fldcw
pop
sbb
or
or
sub
jle
out
cltd
mov
arpl
decb
mov
cmp
mov
prefetch
lret
call
adc
mov
mov
clc
or
int
mov
xchg
out
xor
out
imul
jmp
in
push
mov
mov
shl
mov
inc
adc
ljmp
lret
push
js
addb
inc
roll
sbb
xchg
xchg
insb
test
int
dec
test
insb
inc
adc
popf
or
adc
dec
add
mov
xchg
adcl
or
xor
add
push
cmp
add
add
adc
loope
jp
shll
rcrb
test
mov
pop
xor
add
sbb
pop
and
ja
sub
add
jmp
xor
sarb
xor
test
sub
shl
jmp
loope
shll
loope
outsb
std
and
xor
loop
or
xor
pop
mov
es
loope
mov
fnstsw
mov
jo
inc
adc
fs
push
lcall
mov
xor
mov
insb
mov
in
lock
in
hlt
cltd
cmpsb
cltd
dec
adc
dec
call
test
xchg
and
add
dec
adc
lock
xchg
mov
xchg
inc
and
xor
and
lahf
add
sbbl
dec
and
add
jb
adc
add
add
add
mov
mov
or
add
add
add
add
stos
add
push
inc
add
hlt
shl
cmp
jmp
lret
inc
inc
es
loop
and
ret
sbb
lock
popa
inc
sub
cld
and
lcall
adc
stos
jg
inc
sbb
pop
filds
pop
push
inc
inc
jbe
je
mov
jmp
inc
mov
dec
cmpsl
mov
xor
mov
adc
add
in
fwait
pop
pop
push
lret
inc
adc
in
pop
add
or
movsbl
sar
and
or
jmp
add
cmp
cmp
loope
adc
jo
cld
test
shrl
decb
hlt
shll
jo
in
inc
push
push
mov
xor
ret
jae
push
push
adc
sbb
mov
std
dec
jnp
inc
pop
sub
push
adc
lock
lret
fistpll
mov
jge
sub
hlt
aas
adc
add
push
sub
mov
clc
shll
adc
shl
cwtl
call
add
push
mov
pop
das
andb
mov
mov
js
sub
aas
fmull
xor
ds
adc
adc
shll
sub
add
outsl
pusha
pop
fbld
mov
mov
jnp
rorb
push
adc
or
sub
fdivrl
nop
add
push
push
mov
adc
cmp
subl
aam
cs
adc
cmp
cmp
xor
daa
inc
push
lock
push
dec
add
cmp
lret
pop
and
add
jmp
sbb
jg
push
xchg
push
stc
out
xorb
ljmp
pop
divl
in
fsubl
aaa
clc
imul
mov
mov
loopne
inc
sub
jp
hlt
filds
aas
dec
clc
add
enter
aad
loope
cwtl
and
pop
imul
cmp
jo
mov
or
lea
out
cwtl
xor
push
ss
daa
sub
jl
in
shll
mov
pop
or
jmp
shrl
iret
pop
lahf
cmp
push
fwait
push
xlat
cltd
xlat
and
lcall
xchg
and
lret
mov
clc
rolb
orl
sub
shr
or
mov
imul
inc
lods
ds
loop
add
xchg
xor
adcb
and
rolb
mov
fwait
lret
enter
jge
scas
loopne
push
pop
je
adc
xchg
or
push
mov
jg
enter
shlb
pusha
cmp
or
mov
scas
mov
xor
cli
mov
lods
dec
lcall
test
cmpb
add
sti
pusha
push
or
pushf
xor
or
jnp
mov
es
sub
or
sbb
push
mov
jge
ret
or
cmp
jbe
cmp
andb
mov
clc
pop
cmpl
pop
and
and
cli
mov
jne
push
pop
or
leave
test
mov
outsl
push
cmp
jb
rep
jmp
mov
mov
or
add
enter
inc
lea
push
enter
sbb
and
mov
mov
mov
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
cmp
jnp
orb
jo
pusha
out
dec
pop
mov
mov
call
sahf
in
in
lock
hlt
sub
cld
cld
rorb
dec
add
add
or
call
inc
mov
ret
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
or
pop
lods
jl
inc
inc
neg
fimuls
enter
sub
popf
divl
nop
push
push
js
mov
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
ljmp
mov
push
cld
push
out
sahf
out
inc
or
sbb
jns
out
aaa
inc
aaa
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
push
or
push
inc
sub
push
add
or
mov
cmp
mov
adc
xor
scas
shlb
xor
jmp
cmp
jne
aas
or
in
cmpb
pop
mov
push
add
mov
jmp
ds
xchg
fdivrs
xor
and
add
loopne
das
adc
jmp
sbb
and
in
sarl
push
mov
push
popf
and
shr
icebp
jmp
scas
pop
pop
pop
filds
dec
and
push
push
push
mov
mov
test
je
mov
test
je
cmp
popf
mov
inc
cmp
je
test
je
fmul
or
repz
pop
pop
push
and
dec
decl
add
les
mov
push
mov
mov
mov
and
stos
bound
add
aas
inc
lea
sbb
or
mov
loopne
push
and
repnz
imul
cmp
push
cmp
test
jg
inc
push
push
mov
cmp
xor
pop
je
sub
push
test
jne
mov
mov
or
fsincos
call
push
rep
mov
dec
or
in
xchg
ljmp
and
add
repnz
xchg
inc
inc
inc
inc
inc
jb
xor
inc
cmp
enter
inc
inc
repnz
repz
inc
inc
inc
inc
out
sbb
inc
inc
inc
xchg
add
inc
inc
dec
xchg
xchg
sub
dec
dec
enter
dec
dec
dec
enter
dec
dec
iret
repz
dec
dec
dec
dec
dec
dec
sbb
repnz
dec
dec
inc
sahf
out
dec
dec
dec
dec
push
cltd
dec
addl
dec
inc
adc
jg
inc
adc
inc
mov
pop
mov
ja
push
push
push
push
in
testb
decb
nop
sub
pop
mov
mov
in
mov
cmp
jge
cmpl
cmp
mov
je
push
jbe
xor
cmp
ret
aaa
data16
add
int
pop
stc
mov
push
push
cmp
and
push
lret
cld
xor
sbb
or
pop
pusha
pop
sub
pop
hlt
pop
mov
aas
mov
test
mov
dec
or
out
pop
pop
loopne
std
pop
cmp
je
push
inc
inc
lods
test
push
movzwl
or
push
pop
push
push
push
add
outsb
mov
inc
loopne
pop
jne
pop
inc
rorb
cld
push
cs
aam
xor
sahf
fcoml
scas
insl
xor
jle
dec
into
gs
xor
ret
in
jge
add
int
sar
imul
or
jmp
xor
inc
push
and
adc
or
jmp
loope
sub
into
push
clc
cmp
pop
sbb
cmpb
pop
jmp
lea
mov
push
dec
adc
push
and
jg
out
push
dec
and
push
jg
outsl
inc
or
lahf
out
jge
jbe
jle
xor
jg
jg
mov
jg
lea
dec
jne
imul
mov
pop
mov
or
mov
test
xor
sub
adc
sub
xor
sub
sub
jne
test
jg
sub
into
jg,pt
call
sub
push
push
push
popf
sbbb
cmp
sub
ja
xchg
push
adc
add
sub
mov
lock
in
lock
rep
push
jmp
cmp
jne
lock
jo
in
fldl
jnp
in
inc
mov
in
push
push
ret
leave
jmp
insl
subl
mov
repz
cld
mov
push
in
push
mov
rol
pop
mov
and
and
add
cmp
inc
test
or
sbbl
sub
mov
xchg
test
aad
sbb
in
rcl
jo
push
pushf
pop
push
fistpl
popf
pushf
pop
fidivl
popf
ds
cmp
jnp
adc
push
add
test
pop
add
mov
scas
shl
in
add
pop
cwtl
and
cld
mov
mov
fdiv
sbb
add
ja
in
aad
lds
cmpsb
mov
dec
lea
sub
mov
jns
sub
xor
jbe
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
dec
add
shll
sbb
enter
dec
push
adc
pop
add
sbb
sbb
pop
sub
je
out
cmp
loop
inc
fadds
xor
jno
push
scas
jae
xor
out
pop
jo
push
outsb
pop
push
add
inc
cmp
int
cmp
jl
pushf
and
xor
das
test
les
pop
jmp
jge
cmp
add
int
int3
sbb
inc
cmp
jb
lea
push
adc
push
pop
out
push
insb
cmpsl
ss
adc
mov
sub
shlb
stos
and
push
fs
sti
push
mov
es
insb
stos
decl
lea
pop
insb
jo
push
adc
ret
hlt
daa
dec
je
mov
enter
iret
test
push
sub
or
push
and
jecxz
push
adc
sbb
jle
divl
lret
mov
dec
jecxz
pushf
lock
iret
xor
push
xchg
out
pop
dec
add
xorl
add
aas
and
pop
pop
xchg
inc
cld
cmp
je
testl
jecxz
daa
mov
shr
and
sti
jns
adc
xchg
pop
movsb
push
bound
or
jns
outsl
add
or
pop
mov
jmp
rcll
inc
adc
and
inc
or
sub
rcl
loop
add
adc
adc
and
test
adc
lock
je
and
mov
insb
jne
sub
jmp
cmpsb
xchg
dec
idivl
cs
add
lock
jnp
cli
push
add
sub
pop
adc
dec
out
inc
push
sbb
das
xor
loopne
sub
mov
ja
incb
cmp
bound
and
cmp
sbbb
jb
jo
push
in
loop
mov
call
fsubr
rcll
cmp
sub
jmp
test
cmp
ficomps
mov
rcl
mov
adc
push
push
dec
fistpll
push
iret
mov
mov
rclb
inc
mov
inc
call
xchg
pop
dec
pop
ret
adc
pop
sti
mov
cli
mov
addb
movb
subl
lock
sbb
dec
orl
mov
jb
sbb
mov
push
or
adc
mov
push
out
add
sti
pop
pop
inc
push
cmpl
movsl
mov
and
mov
fisubrs
pop
je
push
fmull
sub
adc
push
inc
sub
cmp
lds
ficomps
sbb
mov
ss
int3
test
ljmp
je
jnp
lahf
movsb
sub
jne
cs
loopne
out
add
in
std
mov
push
xor
in
sbb
ss
jp
imul
mov
call
test
sbb
cmp
cmpsb
cmpsb
faddl
ret
mov
lahf
push
ror
sbb
clc
and
and
adc
inc
jno
stos
test
jo
mov
movsl
sub
sub
mov
cmp
inc
sub
cmpsl
lret
add
clc
push
inc
movsb
mov
xor
push
pop
sbb
push
divps
or
cs
pop
or
cmp
or
pop
inc
dec
push
mov
push
and
aas
inc
mov
push
push
push
mov
push
push
xor
xor
fistpll
sbb
fdivrs
je
inc
sbb
or
sbb
fadds
int3
bound
pop
stos
mov
push
shll
xchg
cld
push
pop
insl
jbe
inc
clc
test
mov
adc
sbb
push
addr16
cwtl
stos
or
leave
add
jp
add
mov
hlt
adcb
add
dec
jl
cmp
push
xor
sbbl
mov
xchg
popa
jo
test
inc
inc
cmp
cmp
jl
add
popf
fucomp
pop
push
mov
mov
enter
in
pop
push
and
dec
lods
xorl
mov
push
pusha
js
push
xor
dec
push
test
imul
divb
push
aas
mov
fdivrs
fidivs
sti
out
addr16
push
in
pop
fcomp
lea
inc
stos
push
push
dec
add
and
pop
pop
push
mov
push
push
andl
push
fs
sub
add
pop
mov
sub
std
outsb
lret
cmp
and
fldt
adc
sbb
fidivrl
lret
in
push
out
jne
xor
add
sarl
pop
or
add
push
in
imul
inc
test
add
sub
xor
fildl
fiadds
dec
pusha
mov
lcall
ss
cmp
lock
or
xlat
jge
push
mov
andl
rcll
add
and
sarl
daa
ficomps
cmp
movl
daa
les
pop
orl
and
sub
sbbb
popl
push
cmp
mov
insl
dec
jbe
xchg
call
pop
mov
jmp
leave
push
loop
adc
test
inc
pusha
or
pop
mov
adc
cmp
jp
inc
push
mov
pop
mov
cli
push
cmp
ja
je
cli
fcomi
add
and
and
xor
adc
xchg
rorl
sbb
jl
arpl
add
jmp
push
pop
inc
pop
aad
bound
inc
xorl
push
mov
loopne
sbb
mov
or
loop
sarb
add
clc
testl
out
imul
or
in
outsb
dec
adcl
popa
scas
jmp
adc
pop
je
into
push
pop
cwtl
fidivrs
js
pop
sbb
iret
js
in
cmpsl
add
add
jo
mov
jne
cmp
daa
mov
inc
push
outsb
pop
add
ret
dec
in
in
js
pop
sub
cmp
push
dec
push
out
mov
int
mov
and
add
scas
or
orl
mov
or
mov
or
dec
cs
mov
jbe
inc
and
mov
incl
or
pusha
jo
mov
sahf
ret
push
inc
mov
sbb
incl
mov
rcr
jne
cmp
cmpsb
fucomip
and
or
xchg
add
inc
jbe
pushf
mov
jmp
lods
sub
cmp
ss
jmp
xor
loopne
add
adc
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
aaa
std
push
outsl
pop
es
inc
int3
je
out
cmp
rol
dec
nop
lock
push
mov
xchg
jmp
add
pop
push
pop
pop
sbb
icebp
xchg
xchg
icebp
cmpsb
int
or
je
ljmp
add
leave
int
rclb
mov
ja
sub
inc
add
xor
inc
cmp
mov
pop
add
adc
adc
push
andl
add
in
or
fstpt
adcl
in
mov
dec
addl
cld
mov
cmp
ret
sbb
dec
filds
rcll
jge
outsb
ret
mov
movsb
aas
jae
incl
push
je
pushl
dec
shl
lea
cmp
jb
mov
imul
cmp
je
jge
push
jmp
dec
mov
nop
push
jne
xchg
dec
push
xorl
jg
push
pop
add
jne
call
sarb
sti
and
leave
mov
andb
incl
push
pop
mov
add
mov
jne
jne
sbb
mov
cmp
je
inc
inc
or
jne
repnz
outsl
dec
pusha
push
add
push
sar
inc
push
push
adc
data16
je
das
mov
pusha
jnp
pop
sbb
and
pushl
push
hlt
ds
in
dec
inc
push
push
cld
dec
pop
unpcklps
pop
pop
fiaddl
pop
adc
inc
addb
push
lock
out
mov
inc
aam
or
sub
out
orps
int
pop
or
bound
out
shll
ficomps
xor
pop
lcall
pushf
fidivrl
inc
push
pop
push
dec
cmp
cld
adc
imul
mov
or
jmp
add
jo
decl
or
push
and
cmp
fwait
xor
inc
mov
in
scas
cmpsl
shlb
js
into
mov
subb
mov
cmp
in
push
jl
mov
sbb
insl
pop
scas
sbb
rorb
lea
pop
cwtl
rcrb
and
jns
sub
std
xchg
pop
and
adc
cmp
jb
jp
mov
jl
jmp
adc
or
jle
dec
mov
mov
fimull
je
mov
test
ss
jne
mov
and
jne
mov
sar
adc
out
shl
add
cmp
dec
mov
push
or
js
js
aas
push
mov
or
inc
adc
mov
loopne
xchg
fs
xorl
push
add
or
add
jmp
xchg
inc
scas
inc
adcl
jmp
inc
dec
lcall
push
roll
sub
pop
inc
in
push
aaa
xor
ds
mov
add
jmp
adc
jne
mov
test
aaa
and
movl
jl
cmc
imul
pop
arpl
subb
or
jae
mov
jmp
or
test
mov
sub
jb
dec
data16
lret
mov
mov
push
cmp
test
push
aas
xor
mov
push
lea
push
or
push
addl
scas
shlb
pop
cwtl
sbb
mov
sbb
out
shrb
push
push
cld
je
and
jo
jl
push
fwait
mov
hlt
out
in
js
xorl
in
push
inc
and
sbb
sub
inc
ficoml
push
push
inc
cwtl
or
xlat
mov
outsb
aas
push
incb
push
jmp
sbb
shrb
pop
sbb
movl
sbb
adc
and
push
scas
sbb
sbb
sti
lret
ret
add
push
jo
xchg
in
insb
pop
lock
or
add
jge
push
or
in
mov
shll
jb
sub
jge
mov
inc
insb
lret
fucomp
fisubrl
insb
cmp
pop
arpl
fisubs
add
mov
mov
ret
pop
sub
or
adc
loopne
ret
dec
push
jmp
divb
push
jmp
pop
shlb
push
sbb
mov
mov
xchg
xor
rorb
lock
dec
mov
push
insb
push
sbb
repz
push
pop
inc
and
pop
push
add
nop
xchg
cltd
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
pop
lds
out
xchg
fsubp
xchg
mov
xchg
jno
fsub
push
inc
dec
push
adc
loop
out
mov
outsb
add
cmp
pop
je
jle
fmull
aas
add
insb
sub
mov
add
adc
or
xorl
mov
inc
cwtl
mov
roll
cwtl
xor
sub
push
jle
mov
cmpb
inc
cltd
leave
test
adcl
cmp
fisubs
popf
sbb
mov
jno
lcall
ja
mov
out
orl
mov
popf
je
xor
inc
mov
es
pop
cmc
adcb
iret
mov
push
sti
popa
push
xor
sub
dec
mov
inc
add
imul
add
add
adc
repnz
inc
in
or
pop
cmp
stos
push
aaa
mov
push
ficompl
inc
and
mov
sub
cmp
add
and
lds
mov
data16
sub
mov
mov
ljmp
pop
xchg
push
aas
sarb
or
mov
xor
aaa
jmp
movb
dec
lea
das
clc
test
lods
or
xor
mov
aam
leave
sbb
or
add
testb
jne
int3
or
push
pop
mov
fldl
es
sbbb
cmc
and
addb
xchg
negl
add
rclb
mov
call
add
inc
jg
sbb
jne
or
or
cmpb
push
add
push
cmp
lret
ret
cmp
ja
cmp
push
lods
sub
add
and
adc
inc
or
loopne
cwtl
xor
and
iret
lock
sbb
mov
pop
or
adc
rorl
je
push
mov
and
dec
or
shrl
movsb
push
adc
loop
jmp
mov
mov
aam
mov
push
hlt
insl
cmp
fs
faddl
push
lock
icebp
jmp
push
bnd
mov
rcrb
jne
adc
test
lock
jb
push
nop
movsb
dec
lock
dec
pop
and
ffreep
dec
pop
mov
test
adc
mov
adc
mov
not
push
shll
mov
pop
out
andl
xor
dec
repz
pop
jnp
sbb
sahf
jg
cwtl
push
fisttpll
add
test
push
jge
jecxz
jno
mov
pop
mov
movsl
inc
idivb
cld
aad
mov
dec
cmc
clc
adc
and
sbb
or
cmp
jl
les
andl
icebp
add
ds
out
mov
mov
mov
add
jo
roll
cmp
jge
andl
add
sbb
jl
push
pop
xlat
or
add
aas
out
xor
cmpsb
pop
nop
mov
mov
mov
jge
jo
popf
jne
push
push
pop
incl
inc
push
jp
popa
cmp
je
mov
jmp
test
cmp
push
out
paddb
lods
or
mov
ret
xchg
fcompl
sub
push
adc
pop
push
jne
imul
call
ds
pop
inc
clc
rorb
mov
and
nop
mov
or
cmp
add
mov
add
mov
ja
jl
cltd
push
cld
pop
mov
subb
addb
fidivs
fisttps
jb
daa
jge
dec
push
or
clc
jae
mov
add
pop
call
movmskps
imul
lods
aas
nop
notl
lea
sub
xor
sti
add
ret
cwtl
xchg
cmp
pushf
fildl
loop
pop
add
xor
imul
lret
inc
xchg
lods
dec
bound
and
loop
mov
cli
pop
shrl
inc
int3
mov
inc
dec
ret
int3
mov
das
mov
imul
dec
pop
sbb
call
sbb
sub
xor
stos
rcrb
xor
decl
cmpl
jo
decl
ret
and
xchg
dec
enter
adc
lock
push
jo
jno
push
lea
loopne
sbb
subb
cmp
jb
jbe
jb
cmp
add
cmp
sbb
pushf
lahf
repz
pop
push
push
add
pop
inc
push
pushf
xor
adc
or
das
adc
pop
in
icebp
push
jae
movsl
jo
sub
adc
pop
dec
or
cwtl
and
call
sbbl
jo
leave
inc
add
dec
adcb
pusha
jbe
fwait
dec
movsl
mov
movsb
or
push
in
or
mov
rclb
icebp
imul
add
sbb
jb
or
pop
je
dec
pop
cmp
jae
cmp
dec
out
cli
andb
and
cmc
imul
jg
cmp
aaa
xchg
push
add
shll
fs
add
fdivs
fcmovnb
jne
pop
sbbl
addr16
inc
mov
cmp
or
pushl
mov
push
push
jmp
xchg
sub
je
or
je
mov
cmc
sub
sbb
push
adc
jmp
mov
in
ja
mov
mov
dec
sub
push
xchg
pop
xchg
shll
out
shl
jne
mov
dec
mov
sahf
pop
and
mov
std
hlt
sti
or
or
jne
dec
aaa
in
jnp
mov
jne,pn
sbb
inc
ret
frstor
and
mov
and
les
decb
mov
lret
jge
mov
enter
inc
adc
xor
int3
fsubr
fldt
ss
pop
jnp
push
inc
or
push
dec
jmp
mov
mov
sbb
adc
xor
xchg
mov
adc
fs
mov
mov
sbb
in
lret
mov
stos
aaa
xor
adc
or
in
das
lahf
or
pop
std
test
leave
cmp
roll
push
mov
pop
mov
lcall
pop
ficompl
dec
mov
adc
xor
imul
mov
mov
jecxz
xchg
mov
push
cmp
inc
out
jecxz
out
sub
rol
aam
out
add
stc
fcompl
dec
adc
in
cmpsb
mov
jmp
stos
mov
je
push
mov
ds
add
je
add
push
adc
ja
es
xor
add
mov
and
idivb
jne
orl
imul
cmp
pop
and
data16
adc
aam
adc
imul
int3
loopne
lods
mov
and
je
aas
out
or
cmp
ja
or
aad
push
add
cld
ljmp
push
adc
repz
mov
jmp
mov
cmp
je
inc
dec
jne
ret
mov
or
loopne
aam
cltd
imul
xchg
xor
or
jecxz
jbe
mov
adc
adc
or
adc
call
aad
or
jmp
jmp
rcll
data16
pushl
mov
mov
inc
inc
push
push
stos
sbb
or
dec
outsb
out
jns
xor
sbb
bound
add
push
mov
pop
pop
popa
or
sbb
pop
add
roll
mov
sbb
inc
js
insb
dec
and
or
clc
sub
and
add
test
push
mov
movsl
call
mov
jb
inc
and
insb
fsubrs
push
mov
ljmp
lret
sub
adc
dec
xor
in
cld
jge
or
xchg
pushf
lret
xor
xchg
mov
rolb
ret
ja
push
fs
iret
push
xor
pop
mov
push
cmp
jle
or
jne
mov
inc
idivb
mov
sub
inc
mov
xlat
cmp
movb
or
jecxz
arpl
mov
insb
mov
or
loopne
jg
mov
mov
cmp
stos
enter
dec
jo
imulb
mov
mov
das
faddl
cmp
test
mov
js
outsb
add
pusha
jo
repnz
enter
out
imul
inc
add
in
cmpsb
roll
cmp
lcall
hlt
push
aas
ljmp
adc
push
add
pop
or
dec
pushl
inc
and
jne
cs
pop
sub
mov
leave
out
push
add
jno
sub
fdivrp
je
sub
je
or
mov
test
adc
or
pushf
bound
loop
pushf
and
inc
sbb
cmc
popa
fisubrl
mov
add
mov
mov
add
xchg
push
mov
adc
rorl
cmp
je
and
mov
or
testl
iret
or
jmp
sbb
push
push
push
inc
jbe,pt
call
nop
mov
mov
fmull
mov
or
mov
test
push
movb
out
das
cli
jo
xchg
add
cmp
ja
cmp
lea
aas
push
xchg
inc
mov
inc
popf
mulb
jbe
fdivr
ljmp
push
push
repz
mov
push
cs
push
cmp
push
push
push
inc
sub
inc
cld
call
lret
imul
xor
dec
push
sbb
lods
jmp
and
je
add
cmpsl
push
and
outsb
lock
or
test
add
mov
sbb
movl
fidivrl
test
cmp
cmp
ja
lret
xchg
idivb
add
jmp
cmp
push
and
and
mov
add
push
inc
cmp
jb
cld
pop
pop
lea
adc
push
sbb
clc
mov
sbb
jmp
mov
andl
jne
fiaddl
xor
push
fucom
xor
mov
push
mov
js
inc
push
pop
fwait
inc
sub
mov
ds
pop
fcoml
mov
mov
movl
cmp
je
cmp
jne
mov
push
rcl
sub
popf
cmpsb
jp
cmpsb
cmp
jmp
or
rcr
ja
mov
shrb
and
shll
sbb
push
pop
data16
push
dec
and
cmp
rcrb
or
mov
addr16
mov
nop
xchg
repz
in
shlb
lock
mov
lock
or
insb
cmc
rclb
jmp
push
jb
imul
and
push
std
aad
xor
inc
sbb
inc
sar
stos
pop
adc
jnp
jae
cmp
jbe
xchg
dec
out
movsb
iret
sbb
hlt
fsin
jne
mov
test
mov
pop
leave
iret
pop
imul
mov
imul
enter
adc
sub
adc
xchg
cmp
sub
test
ret
jg
loopne
subb
cmp
clc
jbe
sub
test
shrl
xor
or
faddl
jg
jb
mov
xor
inc
or
cmp
fdivrp
fsubrl
mov
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
jp
loope
mov
xchg
addr16
jl
sbb
fwait
adc
jbe
mov
lcall
idivb
jo
mov
inc
dec
jne
mov
test
movsb
mov
pusha
lock
and
gs
jnp
test
add
lds
xor
addr16
xor
adc
dec
sbb
dec
loopne
adc
bound
pop
push
pop
test
push
and
mov
test
jecxz
test
fstpt
cmc
ja
mov
rep
andl
pop
jno
and
pop
sbb
mov
pusha
jne
hlt
inc
filds
sub
rorl
cmp
jo
insb
ljmp
xor
or
xchg
std
and
lock
push
or
mov
xchg
jge
enter
or
out
addr16
inc
jmp
xor
dec
sbb
add
xor
add
sub
push
inc
jo
add
adc
fcompl
push
jmp
in
sbb
and
sti
imul
add
in
sbb
lret
stos
jle
sub
push
and
pop
pop
dec
adc
add
cld
add
jne
in
add
push
jmp
shlb
push
int3
outsl
push
cmpsl
push
aas
sbb
outsl
sbbl
jp
getsec
pop
jmp
jae
addl
rorl
push
mov
lahf
rorb
mov
pop
jmp
add
test
and
daa
cmp
push
enter
arpl
adc
fmuls
pushf
daa
lret
dec
jnp
pop
mov
or
or
xchg
sub
in
idivb
inc
or
fwait
rcrl
popf
jg
xchg
sub
out
mov
ficoms
pop
mov
adc
pop
adc
movsb
or
ja
mov
adc
data16
mov
pushf
cltd
sub
sbb
in
mov
jmp
pop
xchg
int3
mov
insb
add
sub
and
outsb
inc
nop
rorb
aam
pop
sub
adc
push
push
jne
mov
aaa
out
jle
push
or
push
cmpl
push
in
adc
icebp
cmp
mov
inc
add
add
dec
or
notl
je
lods
push
xor
push
sub
push
sbb
mov
inc
jo
pop
sub
aaa
sbb
ljmp
pop
ret
xorb
jo
sbb
or
pushf
push
xor
push
subb
xor
clc
pop
mov
xor
divl
mov
xorb
push
shll
or
fcoml
push
outsb
cwtl
mov
mov
inc
jo
and
jle
sub
add
fs
inc
insb
mov
jmp
jmp
mov
hlt
int
cmp
mov
adc
enter
sub
or
cs
or
jecxz
hlt
enter
inc
adc
sub
add
shr
mov
imul
dec
js
mov
inc
movsb
es
dec
jg
inc
sub
push
lea
sbb
adc
cld
push
aad
mov
test
jne
sar
dec
cmp
mov
sbb
popa
inc
push
dec
sub
lret
insb
sub
jg
je
jae
sub
dec
add
shll
pop
mov
and
std
pop
add
sbb
sbb
dec
loopne
pushf
mov
jns
push
pop
add
push
dec
imul
dec
pop
adc
add
pop
and
xchg
dec
clc
or
hlt
and
jmp
mov
pop
pop
push
inc
sti
insl
push
push
popl
jne
and
sti
add
mov
xchg
sbb
fidivs
mov
into
imul
fistpll
and
cmp
test
scas
jno
clc
outsl
cs
jno
mov
shr
not
and
cmpl
dec
add
sbb
shll
cmp
push
jle
pop
data16
dec
add
mov
les
cld
jmp
xchg
jge
in
outsl
cmpsl
enter
pop
lock
mov
int3
jnp
dec
pop
or
or
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
cmpb
push
xchg
lods
push
roll
mov
jmp
dec
in
adc
cmpb
lea
loop
jp
mov
jle
jne
fwait
repz
lock
je
sub
or
stos
pop
negb
add
scas
jp
push
or
out
fstpt
gs
push
or
jnp
mov
dec
sub
dec
inc
adc
dec
adc
pusha
add
and
push
bound
or
mov
pop
or
pop
int
mov
mov
adc
push
lea
push
mov
std
in
nop
outsb
les
lods
jne
fnstsw
or
mov
cwtl
xor
das
mov
adc
outsb
orb
adc
jne
jae
cmpsb
dec
data16
lret
jp
mov
stos
stc
xor
fisttpll
addl
or
push
imul
sbb
je
popfw
andb
and
cmpb
or
adc
jbe
push
fucomi
fwait
pop
mov
fildl
adc
add
mov
pop
mov
mov
pop
inc
ja
je
fcmovnb
add
inc
mov
xchg
repnz
rorb
pop
mov
pop
jo
roll
int3
dec
jne
or
test
or
sbb
add
dec
out
js
ljmp
ja
sub
shr
cld
sub
dec
clc
incl
idivl
lea
push
out
inc
inc
cld
mov
sbb
call
dec
jne
rcr
orb
add
or
jo
adcl
mov
jo
sub
fs
inc
fnstsw
pop
mov
mov
lock
push
mov
jne
or
icebp
stos
popl
and
pusha
dec
lods
xchg
les
stc
adc
jne
xlat
sub
movsb
stc
add
push
dec
incl
jb
cld
and
dec
cmp
mov
shlb
and
inc
jle
push
adc
int3
inc
flds
cmp
ljmp
dec
adc
int3
push
pop
lock
aam
xor
mov
push
cs
add
pop
add
cmp
nop
or
or
push
jns
push
pop
inc
cs
add
or
adc
in
incl
mov
jb
testb
sbb
add
adc
scas
data16
mov
pop
push
jns
cmpsb
pop
push
pop
adc
add
adc
scas
mov
pop
js
and
and
js
cmp
sub
push
and
xor
add
cld
mov
outsl
adc
lock
hlt
shlb
ja
jge
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
imul
addb
cld
pop
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
jo
dec
ficoms
add
mov
loope
loope
push
dec
lea
mov
adc
jl
sarb
jo
push
lods
push
cmp
lods
xchg
lret
bswap
mov
insl
jo
rdmsr
cmp
test
test
add
cld
ljmp
sbb
mov
lods
pop
and
call
dec
push
push
push
jge
or
shr
subl
jg
jmp
in
or
xor
stos
dec
add
out
fldcw
push
nop
cmp
and
push
or
pop
xor
idivb
fdivs
push
jne
mov
mov
fnstenv
jmp
jnp
add
xor
je
daa
or
arpl
adc
sub
mov
and
push
push
sub
pop
lcall
jle
lods
cmp
je
mov
jle
push
push
add
and
mov
push
sbb
sub
cmp
cmp
incl
inc
mov
jbe
mov
dec
mov
and
push
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
and
and
test
add
mov
pop
xchg
sbb
push
test
cmp
xchg
testl
mov
decb
jne
ds
popf
pop
add
sub
dec
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
xor
xorb
push
or
das
pop
pusha
mov
sub
jge
rorl
mov
or
ret
out
or
dec
mov
or
inc
or
inc
or
push
mov
mov
aaa
sub
or
or
adc
lock
lcall
sbb
mov
lea
xchg
scas
xor
sbb
sbb
adcb
pop
add
shlb
dec
xor
leave
add
and
in
push
push
mov
inc
cld
push
push
push
push
add
hlt
les
mov
ds
xor
ljmp
pusha
mov
xchg
adc
mov
fists
jbe
lea
shlb
sbb
add
btc
cli
lea
mov
mov
push
sbb
pop
jnp
les
es
testl
push
aaa
je
hlt
sub
push
push
xor
test
sbbb
add
adc
pop
out
sub
jp
inc
mov
ret
lcall
pushl
add
sub
cs
xor
push
mov
and
jge
xor
inc
call
pop
jmp
ljmp
cmp
xor
push
add
call
cmpl
outsb
arpl
mov
add
cmp
xchg
sub
loope
xor
gs
insb
sub
adc
mull
xor
mov
out
in
sbb
adc
xchg
pop
and
cmp
loop
add
movl
cmp
sub
sub
sub
nop
mov
mov
xcrypt-ofb
cmpsl
lods
lahf
push
or
in
push
clc
mov
xchg
mov
cmp
mov
or
cmp
pop
inc
in
testb
test
hlt
or
inc
mov
pop
inc
mov
out
lock
add
hlt
fnstcw
call
push
xor
and
and
lea
mov
imul
adc
cmp
push
int3
and
int3
xchg
arpl
and
test
in
xor
call
adc
cmp
cwtl
pop
lods
add
stos
pop
outsb
push
fneni(8087
shl
das
add
jae
sub
mov
jne
push
sub
and
jne
push
xchg
sub
and
fsubr
dec
mov
pusha
sbb
add
push
inc
xchg
cmpb
cmpl
or
mov
push
push
inc
push
sbb
mov
js
push
push
mov
loopne
push
jmp
call
xor
dec
adc
popf
sub
and
dec
pusha
jbe
cmpsb
push
or
sub
sbb
cmp
jne
or
adc
rcrl
int
dec
cmp
jge
inc
mov
fnstcw
in
test
lds
sarb
nop
and
add
inc
and
loope
push
ljmp
add
xchg
std
imul
jle
push
xor
jg
pop
div
mov
aas
or
std
pusha
ja
clc
mov
cli
sbb
pop
outsl
pop
lods
int3
push
jmp
push
pop
pop
and
hlt
add
pusha
inc
jnp
cmp
hlt
hlt
mov
cwtl
cmp
call
push
iret
test
jecxz
daa
and
or
lret
push
std
or
sub
call
lods
mov
fcomi
je
xchg
sbb
dec
adc
cmpsl
pop
sbb
sbb
dec
mov
lret
jb
inc
jge
cmp
hlt
cmp
je
movl
sub
subl
in
push
inc
or
xchg
shlw
cwtl
or
push
adc
fs
adcl
pusha
popa
push
sbb
idiv
xor
jbe
int3
movsb
test
out
cmp
or
adc
pusha
adc
push
int3
sbb
iret
mov
xor
cmp
fisttpl
cmp
push
cwtl
outsl
pop
pop
pop
cmp
jle
adc
mov
lds
in
lret
push
mov
les
test
stc
jbe
sub
cmp
je
movl
xbegin
outsb
inc
xor
in
sbb
bound
mov
and
mov
ds
inc
and
movsb
movsl
pusha
in
push
lock
pusha
sbb
sbb
and
xchg
stos
popa
clc
push
jecxz
arpl
adc
jp
cwtl
mov
xor
inc
sbb
lea
sub
dec
and
imul
or
fisttpl
mov
sub
repz
push
xor
jmp
hlt
aad
xor
cmp
stos
sbb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
inc
cmc
cmp
jg
xor
and
je
mov
push
lods
into
or
in
jnp
push
or
ror
shr
and
jns
or
lret
jmp
sbb
jo
xchg
mov
inc
mov
inc
cmp
insl
test
inc
shll
inc
add
nop
and
les
cmp
dec
jae
cld
push
in
xor
sub
and
cmpb
and
addb
mov
xor
pop
push
ja
repz
pop
es
xchg
roll
imul
xchg
xchg
daa
dec
jno
pop
add
cmp
xor
hlt
mov
push
jmp
fcompl
cmp
movsl
add
movzbl
dec
rcr
xlat
stos
jne
pushf
jmp
or
out
je
leave
pop
out
ja
inc
inc
and
andb
mov
or
jmp
push
dec
or
adc
or
es
mov
push
or
sahf
or
and
insl
jne
movsl
xchg
imul
pop
icebp
mov
divl
jle
adc
jo
xor
fisttpll
ret
mov
xchg
out
add
jmp
dec
mov
mov
fimull
push
test
jne
jle
shrl
cmp
and
sarl
xor
or
cld
test
or
push
adc
test
pop
or
and
mov
inc
rorl
test
cmp
push
pop
fdivl
fimull
or
shl
xor
std
lock
movsb
adc
and
sbb
cmp
inc
pop
dec
mov
mov
lret
cld
daa
mov
dec
sub
js
cltd
xor
jae
imul
shrb
dec
test
into
push
hlt
pop
add
cmpsl
and
push
adc
cltd
adc
xchg
push
shlb
test
clc
int
push
xchg
les
cmp
xor
add
test
push
sub
mov
xchg
into
insb
addr16
cmp
push
dec
jmp
ja
dec
je
push
rol
push
jmp
adc
outsb
ljmp
je
add
mov
sbb
sbb
xorl
and
cmpl
push
inc
sbb
in
ret
rorb
push
or
outsb
and
daa
adc
ss
fmull
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
ret
jb
jl
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
outsb
sarb
aam
sub
ficompl
sbb
sub
or
and
mov
inc
mov
or
xor
adc
adc
cmp
xor
int
sbb
test
push
sbb
or
int
dec
loopne
sbb
push
lds
ss
pop
pop
pop
push
add
jae
lock
jbe
add
stos
add
jmp
fs
mov
mov
xor
lea
out
mov
push
pop
leave
aas
aam
dec
pop
add
in
fistpll
cmp
add
add
push
and
data16
sbb
adc
jne
cmp
jne
push
or
sbb
shl
push
ret
xchg
inc
rclb
sbb
push
mov
mov
push
mov
mov
into
mov
dec
add
mov
andl
pop
icebp
lea
mov
push
push
lahf
movb
test
add
aam
pop
dec
cld
daa
adc
fldt
push
push
and
call
mov
push
push
jg
push
adc
mov
add
cmpsl
into
enter
mov
je
cmpl
dec
insl
outsb
or
cmp
mov
or
mov
or
jl
mov
cmp
mov
cmp
insl
cltd
mov
dec
mov
cmpl
int
push
or
push
or
push
or
mov
add
mul
push
mov
adc
aas
adc
add
imul
pop
pop
mov
shl
dec
test
lods
xor
or
mov
lea
stos
xchg
aad
ja
call
js
lock
jmp
adc
jge
or
xchg
addr16
test
lret
nop
xor
ja
decl
stc
movb
pop
jmp
xor
push
clc
stc
add
xchg
test
add
int3
mov
aam
mov
aam
and
popf
cmp
lock
in
push
mov
dec
cld
and
cmpb
lock
sub
push
add
sbb
or
clc
nop
mov
pop
sbb
adc
add
push
push
sbb
faddl
mov
sarl
pop
adc
push
enter
inc
push
sub
or
or
sub
push
hlt
mov
jge
add
nop
je
mov
in
xor
aaa
rcrl
call
mov
and
inc
sahf
icebp
mov
repnz
outsl
cld
aas
mov
cmp
jle
cmp
jns
lea
je
sub
mov
je
mov
dec
add
test
mov
in
je
lea
loopne
pop
sbb
std
push
push
popf
pop
jg
scas
adc
rcrl
inc
sahf
hlt
adc
cmp
data16
int3
add
cmpsb
aam
or
pusha
in
add
je
push
imul
sub
ret
add
popa
and
loopne
test
or
mov
or
paddusw
sbb
add
xor
lea
push
lea
jns
inc
pusha
dec
addl
push
sarb
or
push
sbb
sbb
loopne
adc
enter
push
shrb
xchg
adc
ret
sub
jbe
add
lds
shl
movsl
decb
enter
push
shll
add
lock
shll
jo
and
mov
outsb
xchg
loop
adc
sub
or
add
and
pop
lods
push
mov
sbb
jle
cmpl
mov
adcb
int
push
cmp
ljmp
aas
jmp
hlt
inc
and
add
movl
sbbl
sub
xchg
sbb
inc
inc
jnp
call
and
cmp
push
xor
decl
dec
or
mov
cmp
je
cmp
and
push
and
adc
insb
adc
pop
push
cmpsl
xchg
dec
add
add
lds
movsl
mov
ljmp
xor
or
test
je
movsbl
sub
jmp
idiv
jg
jo
je
mov
sub
cmp
ja,pn
xor
add
cmp
jae
push
ror
outsl
movsb
cmp
jbe
sbb
and
sbb
and
add
mov
adc
flds
cmc
mov
push
in
cmp
lds
clc
icebp
sbb
ja
lret
jne
jbe
inc
ret
add
and
sar
and
pop
xchg
add
and
ret
cmpsb
cmp
in
rolb
jmp
inc
xor
jno
adc
cmp
fadds
or
adc
push
nop
mov
loop
lock
bound
dec
clc
or
adc
leave
je
push
aam
inc
ret
lock
mov
mov
or
out
daa
mov
and
jb
cmp
or
out
ja
add
cmp
adc
cmp
jne
insb
push
pusha
aas
out
xor
adc
mov
add
and
pop
sahf
xor
inc
aas
push
jl
push
add
sbb
mov
loope
bound
jnp
lcall
lsl
jmp
push
pop
push
pop
lock
int3
push
inc
shr
rcr
shr
rcr
pop
jne
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
jns
div
or
cmp
or
xor
and
xor
adc
and
cmp
neg
neg
sbb
push
inc
call
pop
rorl
leave
xor
or
add
loope
push
or
add
loope
rcrl
jmp
rolb
pop
fisubrl
bound
add
movsl
jp
push
incl
add
push
popa
imul
insb
gs
bound
idivb
jmp
add
jb
gs
xor
cs
insb
inc
insb
outsl
jae
dec
popa
outsb
sbb
jg
gs
inc
gs
je
jb
jne
dec
outsb
outsw
inc
push
jb
mov
je
push
jb
arpl
jae
push
imul
arpl
pop
and
fidivs
cmp
jns
sarl
insl
insl
rorb
fs
mov
mov
outsb
je
sbb
xchg
subl
insl
add
arpl
jb
add
add
push
jne
jmp
and
push
dec
dec
jg
ja
push
push
and
inc
add
inc
mov
data16
push
xor
xor
inc
outsb
and
jo
imul
mov
jae
pop
fs
je,pn
dec
lock
mov
je
and
es
push
fadds
mull
cmp
and
arpl
or
xorb
fidivl
aaa
and
popa
arpl
jo
mov
sbb
xor
and
and
imul
push
xchg
sub
and
jne
dec
pop
rol
mov
rolb
les
das
fmul
stos
out
insl
bound
and
fisubs
adc
idivl
dec
mov
sbb
jp
or
pop
es
jne
in
add
outsl
je
and
sbb
loopne
jae,pt
sub
mov
add
insb
and
mov
shl
push
daa
sub
sbb
dec
sub
arpl
cmp
roll
arpl
jge
xor
add
inc
in
subl
pusha
insl
outsb
outsl
int3
or
push
sbb
icebp
rcrb
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
popa
xor
and
sahf
dec
mov
sbbb
and
outsl
outsl
adcl
xor
dec
inc
stos
jbe
inc
xchg
push
stos
sbb
pop
push
gs
shl
cmp
mov
mov
inc
lock
out
outsl
jo
xlat
outsl
xchg
imul
or
arpl
xchg
ret
jecxz
lcall
cs
inc
aaa
insl
in
sarb
mov
or
or
xchg
imul
pop
or
jne
ljmp
leave
js
cmp
shrb
call
cmp
cmpl
in
xor
subl
mov
cmp
or
addr16
jae
xor
add
xor
pusha
sbb
je
sbb
mov
loopne
dec
jb
push
sub
adc
sbb
inc
sub
pop
dec
jmp
dec
or
add
cmp
pop
sub
imul
inc
adc
lods
mov
and
dec
cmp
aas
leave
jae
cmpsb
or
sbb
leave
xchg
lea
mov
nop
xchg
mov
jb
xchg
xchg
add
int3
pop
sbb
xor
push
mov
frstor
out
or
push
je
xor
inc
adc
gs
icebp
or
jae
jle
rcpps
push
pushf
mov
imul
inc
daa
mov
xchg
push
in
sub
xor
mov
fnstenv
lcall
fst
mov
inc
xor
in
bound
sub
inc
mov
outsl
js
mov
outsl
bound
inc
push
lcall
incl
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
outsl
cli
jmp
and
es
sub
sub
sub
cs
jo
xor
cmp
cmp
xor
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
shlb
mov
imul
jno
pop
jne
ja
jns
or
cld
jnp
jge
jg
cmp
sbb
pusha
add
add
leave
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
push
fisubl
add
addb
xchg
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
add
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
push
inc
add
xor
ret
or
or
mov
xor
lcall
pop
add
cmp
cmp
dec
fs
dec
and
jns
add
das
push
ffreep
xor
inc
and
push
call
sbb
dec
outsl
jbe
jp
clc
mov
adc
sub
addr16
push
dec
scas
insb
out
dec
jne
xchg
outsb
gs
jo
imul
dec
popa
jb
push
jne
inc
popa
cmp
fdivrl
scas
cmpsl
xchg
out
jnp
popl
ja
addr16
push
xor
xor
outsl
in
push
push
gs
sbb
out
sti
cmp
push
jne
xchg
mov
dec
inc
ds
adc
roll
pop
pop
add
or
adcl
cs
shll
pop
data16
inc
jb
push
nop
arpl
movb
stos
jo
js
fs
push
push
lods
mov
frstor
pop
and
lcall
pop
jmp
mov
pop
xor
int
jmp
pop
xor
bsf
mov
and
mov
mov
push
popa
negl
fmuls
enter
arpl
arpl
fisubrs
imul
mov
pop
insb
mov
or
out
xchg
rcrb
sahf
jbe
pop
enter
insb
jp
mov
inc
cmp
jnp
dec
jg
and
xchg
pop
mov
sub
xchg
rcll
jae
call
cmp
sub
sbb
or
cmp
sub
sbb
or
ds
pushl
cs
push
push
push
inc
cmp
sub
sbb
or
xor
and
adc
add
xor
and
adc
add
xor
or
daa
pop
pop
sysret
sub
xor
cmp
inc
and
pop
das
getsec
pop
aas
pop
es
incl
cs
ss
ds
and
adc
sub
xor
cmp
and
sub
xor
cmp
and
incl
sub
xor
cmp
and
sub
xor
cmp
mov
and
pop
lcall
test
add
or
or
movups
idiv
call
adc
push
adc
sbb
add
adc
sbb
adc
sbb
ljmp
xor
and
xor
daa
cmp
xor
sbb
test
neg
in
decl
or
or
or
or
pop
add
add
add
sbb
or
or
push
or
or
pop
inc
stc
incl
dec
pop
add
add
or
push
xor
fistps
add
pop
lar
push
test
in
or
pusha
push
pop
or
movb
or
pop
add
mov
or
sbbl
dec
data16
movsb
or
cmp
mov
sub
or
add
or
mov
popf
insl
jbe
and
push
add
and
pusha
or
mov
test
ror
cltd
ss
mov
xchg
xor
cwtl
pop
pop
pushf
aam
pop
dec
or
ds
pop
inc
aam
pop
or
xorl
jp
mov
push
or
pop
add
add
int
xchg
into
cli
add
jle
xor
cld
dec
inc
push
push
xor
mov
add
xor
add
or
bound
or
push
push
in
or
cld
or
pop
add
add
cmp
mov
in
push
add
add
inc
push
add
popf
loopne
mov
jb
imul
add
inc
or
loopne
out
movb
pop
or
inc
sub
xor
or
or
add
ret
pop
add
or
adc
pushf
add
xor
cmpsb
js
cmp
mov
cmovs
adc
sbb
lock
pop
sbb
push
and
repnz
out
adc
sbb
inc
push
and
sub
testl
mov
pop
add
push
pop
pop
add
cmp
fisttpl
sbb
push
movsb
fwait
cmp
or
or
or
aaa
or
in
outsb
scas
adc
adc
adc
and
outsb
daa
xor
in
jbe
frstor
das
push
xorps
xchg
insb
das
insl
daa
jo
sbb
add
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
pop
sbb
addr16
out
jle
mov
push
or
repz
fdivs
adc
mov
rclb
jns
out
sbb
sbb
cmp
repz
mov
les
iret
repz
push
jl
sbb
loopne
sarl
and
mov
dec
js
iret
repz
jns
jp
push
iret
cld
adc
add
fbld
stc
fnsave
jg
add
xor
fildll
aas
out
mov
mov
das
or
pop
pop
stos
and
mov
add
and
inc
jb
push
inc
bound
aas
dec
xchg
add
inc
incl
adc
shlb
jns
in
or
andb
fbld
popl
orb
pop
shll
mov
lgs
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
rolb
mov
inc
movl
pop
arpl
or
push
ljmp
mov
rol
sti
adc
pop
push
xlat
mov
es
xchg
mov
sahf
out
aam
int3
out
sahf
out
sarb
sahf
cwtl
nop
pop
test
iret
repz
insb
push
iret
pusha
pop
pop
push
dec
inc
sahf
ja
cmp
xor
push
and
cmp
out
or
clc
shr
clc
cmp
repz
les
push
sub
mov
push
and
mov
mov
jg
push
xchg
xchg
cmpsl
jb
addr16
xorb
icebp
mov
push
jle
adc
push
nop
outsb
rolb
mov
and
iret
repz
pop
js
mov
repz
imul
insl
add
repz
cmp
pop
ja
mov
lahf
cmpsl
stc
cmp
adc
das
dec
insb
add
add
add
fs
inc
nop
dec
sub
adc
stc
sub
stos
inc
inc
dec
push
and
cld
repz
push
ss
sub
add
add
add
pushl
testl
psraw
lahf
jmp
ret
jecxz
dec
fwait
dec
sahf
lds
ja
sub
outsl
jle
fsts
add
aaa
cltd
sar
jp
dec
xchg
push
mov
and
mov
push
add
movsl
ud0
jmp
daa
shll
flds
je
imul
pop
xchg
sarb
cmp
cmp
insb
sub
test
cmp
pop
ret
jp
push
pushl
nop
int
jb
pop
or
mov
shrl
mov
icebp
enter
push
in
jne
jecxz
enter
and
fwait
movsb
ljmp
fwait
outsb
sti
ret
call
outsb
xchg
inc
adc
or
cmp
sub
jno
call
mov
lcall
in
mov
and
scas
and
in
cli
addb
sub
jmp
call
arpl
dec
dec
adc
aam
xchg
jg
xchg
push
or
sbb
ljmp
dec
lcall
mov
adc
mov
lcall
pop
orb
idiv
rorb
lods
call
mov
sbb
insb
push
fisubrs
arpl
adc
in
sub
das
mov
das
jp
and
inc
jb
bound
adc
decl
inc
aas
shlb
into
ljmp
frstor
je
inc
lahf
cltd
jmp
jnp
push
outsl
out
jno
jns
ss
mov
loopne
lahf
adc
pop
lods
test
sbb
loope
adc
aaa
pop
xchg
lds
sub
aas
and
out
ficoms
jl
jecxz
mov
incl
sbb
pop
mov
scas
lock
cs
test
incl
lods
cs
das
cmp
ja
test
mov
inc
incl
icebp
sbb
stc
cmp
mov
test
dec
or
sbb
jmp
pop
sub
jae
add
cmp
hlt
xchg
out
dec
push
in
push
sub
push
dec
iret
in
aas
les
xor
push
rorb
xchg
jae
xor
and
push
dec
push
xor
test
sahf
decl
hlt
xlat
or
testl
dec
loopne
mov
push
les
and
xorl
call
lds
sub
add
cmp
addr16
mov
test
clc
mov
sbb
dec
pushl
pop
sub
rorb
sti
dec
or
dec
mov
cwtl
mov
sub
ljmp
mov
repz
push
jnp
jecxz
jle
bound
loope
dec
es
xchg
pop
jp
jnp
xor
lret
fwait
or
push
je
mov
repnz
les
xchg
call
cld
lods
pop
test
push
dec
add
pop
jmp
rorl
aam
sub
push
testl
arpl
jno
mov
mov
cltd
mov
incl
xor
inc
icebp
dec
lods
push
add
pushl
add
mov
ret
sbb
add
jb
cmp
mov
fs
push
xlat
and
lret
push
adc
cmp
push
mov
out
jb
mov
aad
lcall
fbld
mov
push
lcall
ljmp
andl
push
pop
test
cmp
outsb
movsl
and
xor
lcall
das
sub
fldt
inc
ret
cwtl
repz
push
sub
dec
nop
decl
test
or
stc
test
dec
gs
repz
lock
push
sub
dec
push
cmp
popa
js
jmp
js
mov
or
jnp
ret
into
in
lods
mov
mov
ret
cltd
xchg
mov
dec
sbb
decl
incb
pop
add
lock
sub
mov
sar
mov
int
mov
bound
insb
mov
fstpl
jns
or
add
push
cmp
jge
or
mov
pop
jmp
or
mov
not
xchg
dec
test
cli
dec
xchg
add
push
xor
gs
pop
sarl
mov
aaa
mov
inc
jge
jns
imul
add
repnz
divb
cmp
jle
in
imull
cmp
aaa
xor
sbb
call
adc
or
pop
pop
inc
push
dec
lahf
and
sub
adc
add
adcl
fidivrl
lcall
lret
outsb
aam
push
mov
jg
loope
call
adcl
xlat
adc
lcall
in
cmp
or
nop
incl
js
gs
inc
bound
inc
mov
bound
leave
push
nop
mov
lds
aam
mov
popf
ficoml
push
lcall
cmp
mov
aas
xchg
xchg
fidivrl
jno
sub
insl
in
xor
test
insb
test
xchg
and
lcall
push
cld
sub
inc
in
lcall
xchg
xchg
in
jo
or
bound
stc
pop
jb
adc
pop
xor
dec
cli
fwait
adc
sar
jg
decl
fcmovnu
inc
or
pop
insl
xor
sub
nop
jo
mov
scas
into
jnp
fmul
or
push
xorl
fnsave
xchg
mov
scas
repnz
mov
sub
xor
sbb
aas
cltd
ja
cmpl
ja
mov
icebp
pushf
mov
fwait
mov
rcl
pop
jne
mov
push
adc
sub
pop
dec
dec
mov
addb
ljmp
flds
imull
movsl
cs
daa
scas
leave
mov
dec
aaa
aam
pusha
cmp
push
rcrl
cmpsl
or
and
jno
mov
cmp
mov
ss
jae
pushl
incl
js
adc
push
mov
jecxz
jecxz
mov
cmp
shlb
loope
sbb
sub
scas
test
mov
pop
mov
inc
js
pop
sarb
cmpsb
shrb
cltd
ljmp
decl
je
out
pop
iret
or
mov
into
lcall
sbb
idivl
stos
jecxz
loopne
xchg
dec
shrb
jae
fistpl
in
stos
decl
sti
sub
loopne
jmp
sbb
stc
movb
pushl
xor
pop
rorb
push
stos
fadds
jno
xchg
scas
cmp
fwait
ljmp
lcall
dec
mov
outsl
push
aam
icebp
pop
sti
notb
jecxz
aaa
cmpsl
xchg
mov
adc
negb
mov
movsl
aad
push
and
jecxz
mov
lcall
or
adc
in
push
je
mov
or
in
mov
adc
and
sbb
imul
push
lock
fxch
jne
add
xor
jmp
adcb
in
mov
pop
jl
data16
lahf
leave
xchg
data16
ljmp
lods
jg
adc
pop
repnz
and
jns
lea
hlt
loopne
mov
dec
incl
mov
dec
sub
xchg
fiaddl
lcall
and
pop
xchg
cwtl
jmp
lock
mov
add
push
dec
repnz
pushl
push
dec
lds
je
or
adcb
add
inc
stos
fistl
push
outsb
cwtl
sbb
pushf
adc
or
lods
aaa
fidivrs
xchg
add
dec
lods
push
incl
xor
lods
pop
dec
pop
dec
je
mov
xchg
cld
jecxz
mov
or
call
adc
inc
sub
inc
xchg
inc
xchg
adc
push
popa
mov
push
sub
cmp
lods
ljmp
lock
mov
jmp
mov
ret
imulb
xorl
arpl
ljmp
and
ret
and
je
jmp
xor
adcb
pop
mov
and
sbb
push
decl
add
ljmp
pop
jbe
scas
in
enter
jno
pop
lcall
call
sbb
jne
int3
lods
push
ret
test
cmp
dec
ja
adc
mov
sar
out
out
call
mov
mov
daa
sbb
inc
push
into
push
test
mov
in
out
test
jmp
andl
xorb
fstpt
add
adc
jmp
mov
loopne
sbb
xchg
push
cmp
dec
and
cmpsl
mov
pop
lods
cmpsb
jle
jae
shrl
ss
inc
and
jle
popa
sub
ds
lock
lds
dec
jg
mov
mov
hlt
or
imul
fdivrp
jmp
dec
cmp
sub
mov
sbb
add
fstps
mov
lods
mov
std
arpl
stos
inc
sub
gs
ret
flds
push
lcall
jg
cld
fdivl
cmp
addr16
mov
xchg
mov
jg
mov
or
cmc
xlat
out
xchg
hlt
sbb
loop
push
jae
pop
mov
rorl
jmp
movsb
xchg
or
or
roll
std
mov
mov
aas
or
pushl
scas
ret
dec
xor
or
pop
stos
jne
dec
sahf
jne
sub
and
pusha
das
decl
jb
xchg
int
ret
inc
or
inc
xchg
les
xchg
add
jmp
adc
sti
inc
mov
in
mov
sbb
mov
ds
je
add
jnp
push
in
loope
lret
pop
je
es
shl
pop
mov
aas
inc
add
lret
fdivrl
jge
cmp
incl
fs
ljmp
test
stos
pop
xor
jle
decl
daa
jbe
mov
pop
push
ljmp
xchg
or
dec
jo
cmp
mov
sbb
xchg
mov
gs
cmpsb
idiv
jb
inc
pusha
out
fs
lcall
filds
dec
jns
dec
pop
fwait
adc
pop
dec
add
add
pop
dec
pushf
push
jmp
sahf
add
jb
add
mov
xor
xchg
cmp
mov
idivb
in
call
push
scas
cs
dec
cltd
jae
jecxz
or
or
decl
or
insb
icebp
cmpsb
xor
cmp
repz
and
pop
inc
movsl
mov
incl
pop
pushf
or
repz
push
mov
sarl
out
cmpsb
and
imul
mov
in
js
pop
and
add
jg
mov
inc
es
or
test
out
cwtl
aas
test
call
std
ljmp
enter
bound
ficompl
mov
adcb
gs
cwtl
test
mov
in
or
dec
inc
mov
xchg
pusha
hlt
pusha
dec
das
push
mov
repnz
call
lret
cs
xor
fnstenv
into
mov
or
inc
and
out
sar
decl
and
cltd
jp
insl
adc
fldenv
sub
ljmp
xor
scas
inc
stos
shll
push
xchg
std
sar
or
int3
into
int3
scas
mov
incl
rolb
inc
fwait
pop
jae
push
movsl
mov
imul
sub
pop
inc
lods
push
stos
cli
push
jb
xchg
jecxz
sub
call
push
mov
adc
outsl
fdivrs
out
add
adc
cmp
mov
decb
imul
fnstsw
lret
enter
fsubr
and
sub
mov
jnp
into
inc
sahf
add
mov
cltd
sbb
mov
mov
shll
into
sbb
call
jp
or
pop
int3
jo
jmp
xchg
sub
loopne
js
andb
jmp
mov
in
lcall
add
fisubrs
ret
and
mov
cltd
dec
clc
sbb
insb
sub
decl
cmp
clc
addr16
cmp
or
mov
adc
mov
and
shrl
jge
insb
test
sbb
aam
cmp
sbb
jnp
and
mov
pushf
pop
sub
sti
sub
pop
jmp
jg
jmp
pop
pop
out
dec
daa
pop
and
and
int
push
ss
push
dec
je
inc
aas
out
add
and
inc
imulb
sbb
ja
inc
inc
pop
loop
test
cmp
mov
push
push
jne
cmpsb
sbb
sbb
aas
js
out
jle
and
push
cmpsb
mov
into
adc
sbb
aas
out
jno
mov
inc
fadds
xlat
pop
icebp
jmp
pop
pop
and
dec
inc
mov
mov
mov
lds
xchg
adc
adc
mov
addb
xor
xchg
ror
sbb
sub
rol
cmpb
incl
bound
xchg
stc
add
loop
sbb
scas
lcall
jp
mov
push
mov
int3
repnz
fiadds
dec
loop
jne
idiv
push
cld
leave
or
mov
add
out
loopne
sarb
cwtl
mov
mov
sbbb
jg
stos
lcall
sub
jb
jg
dec
cli
inc
das
es
rorl
push
xor
mov
stos
fsubrl
subl
ror
outsl
push
outsb
int3
imull
jmp
inc
push
sub
mov
push
push
mov
or
jmp
sub
xabort
ljmp
dec
popa
jo
gs
sbb
mov
sub
mov
mov
ljmp
sti
push
shll
mov
mov
push
in
push
scas
mov
les
fnstenv
dec
inc
xchg
in
push
ret
pop
jo
popf
lods
xchg
or
out
int
xchg
loop
dec
je
aam
pushl
jmp
and
fistpll
arpl
out
loop
push
cmp
lcall
fwait
ja
or
aam
or
cltd
aas
fdivl
push
in
and
lds
pushl
mov
rcrl
jg
mov
xchg
cmc
fdivs
mov
pushl
fidivl
into
ret
outsl
xchg
inc
out
pop
inc
lds
popa
sahf
rcll
jnp
ret
dec
inc
imul
outsl
jmp
leave
fists
negb
mov
dec
mov
push
push
inc
or
mov
ror
inc
lret
pushl
movsl
les
jmp
pop
push
cmp
jbe
ljmp
cmc
mov
testb
mov
fildl
sbb
or
repnz
sbb
dec
lods
mov
xchg
popa
fldt
lahf
out
andl
cmc
cltd
fistl
in
push
mov
mov
loope
mov
jne
pushl
push
decl
outsl
jb
fwait
mov
cwtl
mov
mov
inc
xor
push
fisttps
xchg
call
ljmp
add
scas
nop
jnp
scas
iret
ja
cmp
add
jg
decl
fstl
lock
inc
push
inc
lahf
jecxz
ficompl
enter
cld
jmp
pop
adc
jnp
and
test
lret
sub
fsubs
and
subb
or
cmp
orb
sbb
cmp
popa
scas
cld
cmp
sub
cmp
addr16
aam
mov
pushl
adc
jmp
imul
jnp
out
decl
or
push
or
xor
jns
into
cmp
or
repz
jg
jmp
sbb
test
xor
xor
ljmp
ss
ja
mov
insb
out
pop
popl
inc
lods
mov
imul
push
dec
imul
dec
shr
adc
push
sub
xor
std
xchg
mov
ret
pop
leave
xchg
dec
push
sti
and
insl
cmpl
push
mov
mov
icebp
cmc
mov
ror
adc
js
je
scas
rorb
loopne
jmp
lret
insl
daa
clc
sbb
xorl
cld
xchg
std
or
cltd
scas
pop
jle
jl
lret
rep
in
cmpsl
xchg
mov
cmc
fnsave
add
mov
adc
test
call
dec
pop
fisubrs
or
inc
sbb
xor
outsl
repz
lea
sub
sarb
jle
adc
ds
adc
loope
leave
xchg
xchg
test
lcall
pop
out
cmp
subl
pop
inc
loop,pt
pop
gs
push
xlat
mov
xchg
neg
jg
arpl
push
lds
mov
jns
test
out
popf
jnp
pop
call
mov
push
or
mov
add
rcl
sub
and
push
sub
mov
pushl
push
nop
lret
xchg
dec
add
daa
loopne
push
pop
sub
cmp
lret
lret
imul
jmp
inc
lret
pushf
loope
ja
test
push
sub
icebp
adc
sbb
jmp
int
ds
push
mov
scas
inc
in
mov
or
fidivs
add
jg
adcl
pop
jmp
negl
or
sub
push
stos
inc
ret
sub
lret
cwtl
fstpt
lds
es
inc
or
movsl
stc
sti
push
cld
pushl
mov
mov
jo
pusha
jle
les
cmp
mov
call
adc
cmp
sti
dec
outsl
xchg
pop
mov
push
mov
decl
scas
fistpl
incl
or
jbe
test
stc
test
mov
movsb
or
lcall
xor
sub
popf
iret
shll
mov
cs
andl
xor
xchg
pop
dec
in
adc
pop
jb
inc
fstpt
mov
mov
mov
in
mov
mov
xor
lret
mov
out
in
mov
fld
idivl
mov
movsl
dec
xchg
mov
mov
scas
mov
cli
xor
pusha
das
lahf
in
xchg
idiv
leave
in
rorb
fbld
jmp
lds
jmp
scas
add
dec
cs
lahf
test
ret
bound
out
add
lea
imul
idiv
decl
mov
cmpsb
setg
and
mov
jge
clc
repnz
outsl
call
mov
dec
mov
xchg
dec
aaa
ds
pop
xchg
ljmp
mov
leave
fiadds
jecxz
loop
cmp
orb
inc
repz
ljmp
leave
fdivr
aas
enter
xchg
mov
pop
lcall
or
jmp
ljmp
xor
dec
xor
pusha
or
mov
inc
das
or
call
cmp
dec
inc
outsb
adc
xchg
sbb
int
sahf
pop
push
pop
xor
xchg
sti
xor
cmp
decl
dec
imul
cmp
fs
or
mov
decl
sub
mov
rol
and
dec
data16
arpl
mov
sbb
sub
incl
jnp
shl
out
int
enter
mov
and
adc
pop
cs
leave
jp
jo
jle
ljmp
inc
jge
jnp
ja
ljmp
das
imul
decl
pop
hlt
or
xchg
inc
dec
jmp
or
enter
mov
es
subb
jge
mov
mov
mov
jmp
inc
lcall
mov
jle
inc
push
mov
add
cmp
decl
pushf
jge
cld
addr16
and
insb
push
xor
mov
or
decl
xchg
leave
or
jb
rolb
outsb
jp
dec
jo
and
iret
ja
mov
mov
fisttpll
mov
push
or
dec
and
push
mov
mov
scas
cli
lock
mov
je
pusha
jo
popl
inc
cmpsl
in
popf
rol
popf
mov
pushl
mov
sbb
xor
insl
jecxz
add
xchg
adc
cmp
and
mov
push
add
jne
sbb
int3
or
jo
cmp
out
rcr
mov
out
faddl
dec
data16
adc
dec
ds
testb
mov
std
out
loope
inc
sar
inc
push
mov
xor
outsl
js
ljmp
xchg
out
mov
mov
stc
lcall
pushl
inc
aam
cmpsl
jo
inc
and
fucomp
sbb
cmpsb
test
pop
repz
ret
int
call
add
rorb
jbe
cld
jae
notl
inc
mov
mov
call
mov
or
ja
push
xchg
in
adcb
daa
add
jle
push
or
pushl
subb
stos
pop
xor
xchg
push
in
sub
scas
jnp
test
test
cmp
inc
idiv
mov
ss
xor
incl
xchg
mov
mov
clc
mov
mov
movsl
not
loop
push
rorl
jg
js
add
and
pop
hlt
and
movsl
cs
jge
cld
cmp
lret
incl
loopne
dec
jo
fadd
jne
lcall
arpl
add
pop
ret
daa
and
mov
jle
inc
pop
adc
mov
fsts
and
cmp
xor
std
sahf
inc
sbb
push
sbb
mov
or
int3
repnz
jo
movsb
cmp
int
mov
aad
sub
or
fs
mov
xchg
or
shlb
icebp
mov
jmp
sbb
mov
insl
lea
mov
ret
push
jnp
pop
iret
fadd
xor
call
and
mov
sub
mov
outsl
outsb
push
mov
sahf
xor
push
call
loopne
fmull
mov
jns
fisttpll
jnp
sbb
popa
ds
stc
mov
sbb
pushl
test
mov
sbb
sar
push
mov
shrb
out
mov
ja
fiadds
push
adc
ljmp
xchg
int3
mov
cmpsl
cmp
ds
dec
jb
xor
mov
lods
push
loop
decb
pop
lret
int
call
test
not
mov
in
lock
mov
loope
mov
gs
mov
cwtl
js
je
sub
push
sbb
mov
lret
jno
add
lahf
and
das
jo
mov
jmp
and
gs
lret
mov
aaa
and
inc
sub
movsl
andl
mov
arpl
call
pop
add
mov
rcl
cmpsb
dec
out
lds
push
cmpsl
sub
mov
jmp
insl
dec
mov
mov
outsl
test
jmp
pop
scas
mov
pushl
cmp
out
mov
sub
mov
xor
sbb
stc
movsb
dec
dec
mov
fdivrl
dec
pushl
les
jmp
dec
shl
jg
fldt
dec
cmp
call
loopne
jmp
add
aas
lods
ret
loope
fmuls
sbb
incl
jnp
aaa
jecxz
cmpb
aam
ret
jo
jmp
mov
hlt
ljmp
int
sbb
mov
sbb
leave
sbb
lock
jne
int3
xchg
ljmp
decl
aad
add
mov
je
xchg
ljmp
push
orl
push
cld
pusha
rcll
sarl
ret
xchg
mov
mov
mov
push
jmp
stos
push
fst
mov
stos
sub
or
into
ret
je
push
pop
mov
or
lcall
jl
cmp
push
adc
shrd
dec
aaa
stc
xor
out
fwait
in
decl
lcall
out
js
mov
add
in
mov
int3
addr16
fcomip
and
inc
mov
pause
out
sbb
arpl
push
inc
mov
pushl
sub
dec
out
cmp
sub
sahf
std
unpckhps
bound
lock
call
pop
scas
mov
xchg
sbb
adc
testb
stos
incl
loope
dec
mov
xor
dec
pop
out
std
adc
and
or
mov
loope
add
cmp
mov
and
stos
std
inc
cmc
out
dec
cs
scas
test
xor
ljmp
adcl
lret
cmc
ret
dec
push
mov
jl
jae
mov
scas
in
mov
int3
jae
xchg
cmp
sbb
lods
jns
imul
decl
jbe
inc
jg
or
jge
or
fs
push
test
aaa
or
xor
decl
arpl
jge
stos
clc
into
jecxz
or
pushf
fisubrl
lret
popf
cmp
lcall
vpcmov
mov
mov
cmp
arpl
pop
push
lds
pushl
push
xor
pop
xchg
mov
test
pop
cli
decl
adc
push
mov
ss
repnz
ret
mov
and
adc
xchg
loopne
ljmp
mov
jns
mov
push
ss
les
or
jmp
jne
xorb
sbb
xor
je
int
jmp
jg
cltd
mov
mov
dec
in
sub
adc
cmp
inc
cmp
add
pushl
jle
movsl
movsl
xor
mov
inc
and
xor
cmp
rcrl
mov
sbb
and
ret
jl
arpl
and
jb
xchg
movsb
jno
in
cwtl
push
and
cld
decl
rorb
cmp
add
loope
loopne
mov
out
andl
pop
adc
or
jge
js
ja
bound
clc
decl
jnp
fstps
fs
jmp
inc
insl
and
test
lock
pop
enter
popf
push
mov
push
push
ljmp
cld
loopne
rorl
mov
dec
pop
or
jne
cmp
push
inc
je
call
adc
sbb
cmpsl
inc
and
stc
push
negl
das
outsl
incl
notl
jg
and
in
psllq
popa
jle
cs
and
lahf
jne
xor
out
jnp
mov
leave
ljmp
pushf
cmp
loopne
mov
fstps
adc
lcall
and
push
int3
inc
ljmp
in
lds
mov
add
ret
ljmp
int
mov
movsb
jge
mov
pop
mov
jb
mov
imul
inc
imul
in
les
xchg
jle
cmp
jp
adc
add
jp
mov
jmp
adc
xchg
dec
addr16
sub
sub
push
mov
jne
jg
ss
xchg
jmp
aad
ljmp
stos
xchg
cmp
pop
ret
lahf
mov
cli
sbb
xchg
pushf
push
jg
push
popa
icebp
inc
sub
cmc
sbb
sbb
insl
popa
packuswb
movsb
xor
push
call
iret
outsb
into
addr16
sub
cmp
clc
bound
cld
inc
shll
jge
inc
arpl
das
xor
sti
push
cmp
das
popf
das
popl
fs
test
add
incl
orb
jno
add
push
out
ret
lcall
mov
pop
fidivrl
fsubl
adc
sbb
mov
cmp
cld
lcall
pusha
sub
stos
sub
mov
pop
add
cli
cmp
dec
xchg
orl
xorb
imul
aam
rolb
xor
pop
mov
pushl
das
mov
xor
jne
leave
out
mov
cmp
int
jg
stos
push
call
cld
push
loop
mov
addr16
jge
dec
or
jo
xchg
jg
jmp
inc
pop
lcall
jge
dec
nop
mov
andl
sub
pop
pop
sti
incl
fbstp
divb
add
adc
lds
or
aad
lahf
js
loop
fistps
jg
sbb
add
mov
push
rolb
push
sar
cmp
lcall
xchg
add
sbb
sbb
cmp
and
xchg
fisttpl
and
jge
add
dec
lcall
dec
lods
popf
mov
repnz
imul
cmpl
add
or
aad
cmp
hlt
popf
mov
dec
out
out
add
mov
iret
adc
out
ds
cmc
outsb
ljmp
mov
mov
imul
bound
sub
jnp
aas
jge
ljmp
inc
lds
inc
fimull
fmull
xchg
adcb
cmpsb
mov
and
inc
sar
fcomip
dec
es
jo
mov
fsubrs
arpl
insb
outsb
mov
sti
daa
addr16
jmp
jmp
sbb
and
loopne
aas
add
jbe
pop
dec
or
decl
inc
test
add
pop
push
and
cmp
xchg
xchg
call
and
pop
cmp
dec
pop
aam
or
and
call
in
lea
sub
cmp
inc
ljmp
call
aam
or
ljmp
into
enter
cmp
jnp
mov
cmp
pushl
filds
les
cmp
shrl
aas
cli
outsb
cmp
in
dec
test
or
fidivrs
push
jle
mov
sahf
mov
jmp
dec
mov
xor
or
cmp
into
shll
pushf
adc
inc
out
test
sub
scas
or
xchg
insb
mov
mov
lcall
lock
lea
ljmp
push
mov
decl
fwait
stc
xchg
leave
out
add
dec
cld
mov
mov
mov
rcrl
push
out
repnz
out
ljmp
sar
mov
xchg
fwait
mov
test
sbb
and
lcall
or
lock
lret
and
lahf
mov
repnz
pushl
mov
cmp
rolb
mov
ljmp
dec
and
jns
in
jp
cmp
mov
jns
sub
dec
push
mov
push
mov
lahf
cmp
call
imul
jmp
cmc
sub
add
jmp
adc
jo
ljmp
mov
pop
pop
shrb
mov
movsl
loop
mov
pop
scas
xlat
pop
mov
out
dec
or
sbb
fstpl
jge
test
pop
es
inc
mov
incl
fistpll
inc
icebp
sti
cltd
dec
cmp
dec
nop
mull
mov
scas
xchg
cli
pop
out
xchg
xor
push
add
jmp
scas
mov
ret
ja
jle
out
add
mov
or
jg
pushl
push
outsl
std
lods
mov
les
cmpl
mov
xlat
ret
pslld
push
decl
call
fadd
lock
enter
and
mov
add
clc
decl
jmp
scas
cmp
pop
in
cmp
lods
sarb
pop
pop
mov
decl
add
sbb
xchg
jecxz
subb
mov
outsb
jecxz
mov
sbb
stos
cmp
pop
cmpsl
pop
pop
into
jne
incl
xor
nop
pop
lahf
ljmp
push
leave
ljmp
cmp
jb
mov
popa
arpl
iret
fsubrs
push
mov
xor
je
andl
jmp
sbb
adc
sub
adc
sbb
pop
cmp
popf
test
lock
std
jg
pushl
leave
push
or
cmp
cmc
push
fnsave
fmulp
repnz
mov
or
mov
jmp
cmp
outsl
daa
and
popa
sub
ja
dec
mov
pop
loope
mov
push
incl
adc
cwtl
movsl
xchg
cmc
mov
xor
aad
jle
ret
sub
jg
stc
jmp
pop
insb
data16
dec
mov
inc
stc
and
xchg
mov
in
jle
loopne,pt
data16
cs
shrl
es
sbb
and
cld
push
out
pop
cltd
pushl
adc
xchg
movsb
sbb
adc
cmp
movsb
pop
push
in
lea
pop
pusha
int
push
incl
inc
dec
jmp
je
sub
rcr
push
cmc
ljmp
incl
mov
adc
add
sbbl
mov
push
ss
out
call
push
and
jecxz
mov
out
in
inc
xor
pop
pop
adc
rcll
loop
cmc
mov
jmp
aam
popa
fimull
into
ja
fstl
sarb
xchg
shlb
jg
test
lcall
ss
push
jne
inc
cmc
bound
std
sbb
dec
lret
jl
aaa
mov
gs
call
test
pop
sub
fldt
jne
or
or
fs
filds
inc
cmp
fs
mov
aaa
xchg
add
insl
and
imul
sub
add
out
cmp
lcall
aas
ja
pop
lret
lret
icebp
movsl
jbe
sbb
push
jl
popa
mov
jno
mov
jo
mov
leave
call
fisubs
sbb
scas
repz
in
pushl
stos
xchg
add
adcl
aam
sub
pop
ret
mov
xor
iret
lcall
out
jno
icebp
cmp
cwtl
dec
or
mov
or
pop
sub
dec
jg
cmpsb
push
gs
call
scas
push
jle
dec
rorb
fstps
dec
stos
dec
movsl
adc
push
and
imul
call
jne
jge
fcmovne
push
imul
xchg
pop
jo
call
mov
mov
sub
lods
rcrl
pop
adc
dec
aam
adc
jns
decl
sbb
and
mov
fbstp
enter
push
sbb
sub
jo
mov
jmp
test
mov
sbb
push
or
pushf
fstl
notb
add
xor
call
call
andl
aad
jge
jne
jo
outsb
mov
mov
lea
or
sbb
insb
cmp
dec
cmp
mov
jmp
cmp
dec
sti
jae
add
pop
sar
gs
cld
outsl
mov
fwait
dec
jbe
aas
rol
movb
or
stos
mov
jo
and
insl
or
jmp
jbe
jge
stc
std
jae
push
pop
or
add
movsb
test
jmp
insl
push
mov
lcall
push
mov
mov
cwtl
pop
inc
xchg
xchg
or
dec
push
adc
leave
movsb
jae
mov
push
enter
cmpsb
cmp
push
inc
push
sti
sar
push
aas
push
push
imul
incl
inc
mov
mov
insb
sbb
sbb
sar
icebp
mov
sub
fisubs
lcall
add
mov
adc
xlat
data16
cmc
pushl
add
pop
ror
test
jle
cmpsb
fdivs
and
ret
out
clc
pushl
ficoms
sarb
lret
adc
stc
popf
jbe
pushl
xor
sahf
repnz
test
inc
outsb
test
idiv
test
push
and
loope
jbe
mov
dec
out
testl
dec
xchg
pop
mov
xchg
gs
decl
cli
popf
adc
dec
je
iret
push
movsl
iret
jbe
aam
jbe
xor
fs
popf
lcall
xchg
mov
leave
fnstenv
ds
xchg
inc
cmpsb
imul
fs
incl
lea
xchg
bound
push
sub
mov
push
popa
js
xchg
test
or
popa
sub
loop
imul
aad
jmp
or
or
sti
movsb
push
cmp
jecxz
cmp
inc
dec
jl
test
in
inc
jmp
test
dec
cmp
jnp
jb
js
add
cmpsb
notb
pop
jae
je
scas
xchg
xor
and
cld
addb
outsl
add
popa
mov
fsubs
jno
jmp
or
fmuls
xchg
xchg
lahf
mov
xchg
xorb
pop
es
scas
gs
xchg
mov
fmuls
cwtl
cmp
xchg
inc
sub
mov
outsb
bound
xchg
aad
cmpsl
pop
or
mov
stos
and
addr16
mov
cmp
add
inc
add
dec
inc
cmc
shl
xchg
aam
inc
cmp
insb
push
push
incb
and
fldt
decl
cmpsl
ret
jmp
mov
idivl
je
mov
fsts
popf
daa
decl
cmp
js
mov
pushf
je
mov
adc
cmpsl
push
mov
dec
jns
lcall
add
push
mov
cmp
mov
inc
cs
sbb
mov
ljmp
bound
adc
rorl
fimuls
add
pop
fildl
push
cmp
call
fldt
add
int
cwtl
sbbb
test
jl
push
stos
in
aas
sar
fcoms
cmpsb
mov
mov
mov
out
push
or
jns
into
insl
inc
repnz
pop
clc
in
into
lcall
push
add
mov
jo
cmp
lock
lock
inc
jp
pop
cmp
push
push
nop
sbb
lcall
shl
out
lods
aad
mov
pop
outsl
repnz
jb
mov
scas
mov
xchg
sbb
lcall
scas
fdivr
pusha
call
adc
frstor
shlb
ds
fs
push
mov
mov
xchg
cs
gs
inc
lret
add
push
call
sbb
loop
sbbl
dec
xchg
sbb
lock
punpckhdq
push
xchg
sub
inc
aas
cmp
push
xchg
jl
add
jge
cwtl
pushf
add
xor
dec
push
call
pop
pusha
popf
lret
nop
xchg
cmovne
jl
mov
inc
in
push
gs
pop
pop
mov
or
fs
scas
mov
jb
sub
jge
and
jae
add
dec
shll
dec
mov
cli
dec
dec
js
mov
ljmp
addb
sbb
lock
rcll
std
leave
outsl
in
push
fdivrp
out
icebp
sahf
je
out
cli
and
sub
xor
jne
dec
repnz
jecxz
cmp
in
push
jg
mov
pop
push
out
pop
std
testb
enter
push
or
call
sahf
push
or
cmp
or
mov
mov
shl
mov
incl
jbe
pop
xor
ret
jo
push
cmpsb
inc
sbb
cmp
mov
or
mov
jg
push
adcb
mov
push
adc
xchg
push
push
xchg
loop
pop
loope
lcall
int
incl
adc
scas
outsb
aad
andb
push
les
sarl
das
ljmp
inc
shll
out
in
mov
adc
mov
lods
fwait
inc
lret
dec
pusha
push
xor
jb
call
stos
loopne
lcall
pop
rcll
jp
clc
mov
mov
bound
out
fdiv
cmp
jp
push
xor
pushf
mov
cwtl
lea
outsb
adc
adcb
movsb
lcall
jns
and
add
jne
fcomps
push
out
cli
mov
adc
subw
mov
mov
sub
and
mov
into
inc
or
or
mov
jmp
sbb
nop
jbe
xchg
inc
xor
sub
outsb
sub
insb
push
sub
sub
aas
ds
inc
adc
push
adc
xorl
int
test
cwtl
fwait
imul
mov
dec
sub
test
add
movsb
xchg
sub
in
pop
loopne
mov
inc
shl
add
pop
adc
dec
sub
dec
rclb
pop
iret
xor
rcl
incl
mov
cwtl
adc
dec
mov
jnp
mov
and
jg
mov
mov
xchg
pop
lcall
rcr
decl
dec
push
aad
push
nop
nop
es
lret
xor
mov
fst
dec
lods
mov
cmp
dec
push
sub
push
mov
add
cwtl
ss
sbb
pop
mov
lcall
xor
jg
fstpl
mull
sbbl
xchg
cmpsl
test
mov
jns
jae
fstp
push
adc
mov
xor
data16
cmpsb
or
cmp
aad
incl
sub
mov
sbb
clc
std
popf
ret
enter
sub
insb
ljmp
out
out
popa
dec
jmp
fistps
xor
xchg
aas
dec
arpl
or
incl
mov
jne
pop
xor
test
pop
mov
jge
ror
out
ljmp
jecxz
test
push
movsl
xchg
mov
xor
stos
cld
mov
push
out
mov
adc
cwtl
out
fistps
ss
xchg
incl
or
mov
push
or
andb
out
mov
fldenv
repz
clc
fcmovu
es
cmpsl
pop
jae
mov
push
lret
cmp
adcb
jg
cmp
pop
out
out
js
addr16
push
sub
mov
dec
add
out
and
or
popf
add
test
dec
sahf
pushf
aam
mov
cmp
movsl
sbb
xchg
jb
add
cmp
ljmp
adc
xchg
lods
mov
push
or
sub
stc
cmc
jo
ljmp
add
bound
pop
sbb
test
jmp
cs
out
xchg
inc
fwait
add
jp
mov
pop
push
add
rorl
push
xchg
adc
adc
mov
and
ljmp
out
add
ret
pop
mov
lahf
daa
cmp
nop
xor
mov
jg
fbld
sahf
cwtl
leave
dec
rorb
mov
or
cs
decb
xor
and
mov
sbbb
xchg
push
imul
icebp
push
insb
fiaddl
mov
icebp
shlb
xchg
in
adc
mov
in
shll
je
or
cmc
and
or
jmp
cmpsb
bound
dec
stos
into
test
cmpsl
cmc
scas
pop
data16
jne
ljmp
mov
sti
test
jp,pt
sub
mov
dec
adc
mov
movsl
xor
fstps
sahf
dec
add
daa
jl
stos
mov
ljmp
arpl
adc
sub
adc
adc
in
inc
push
cmp
jnp
neg
call
cld
inc
push
repz
mov
xor
loopne
sti
mov
cmp
mov
mov
data16
lock
or
daa
xor
add
std
add
mov
add
ret
add
out
push
mov
cwtl
or
cmp
incl
dec
dec
jge
pop
adc
aaa
popa
cld
xchg
dec
cmpsb
xor
loope
add
sarb
jg
cmpsl
jmp
xorb
dec
jecxz
mov
mov
add
dec
aad
daa
ljmp
movsb
adc
push
mov
scas
mov
add
call
dec
dec
sbb
shlb
jmp
fisubs
push
fcmovu
pop
mov
jmp
adc
cli
push
add
stos
pusha
frstor
popa
insl
mov
mov
scas
lret
xor
mov
ljmp
jmp
mov
jp
cltd
repz
and
pop
jge
ss
jmp
dec
pop
inc
mov
sbbl
jle
jecxz
inc
mov
lahf
mov
cmpsl
cmp
in
fists
mov
loop
sbb
xchg
xlat
test
mov
add
jg
cmpl
pop
movl
aam
scas
mov
imul
inc
xchg
fwait
cmp
jb
sub
rolb
mov
rol
pop
int3
jns
pop
adc
and
mov
decl
lods
scas
adc
outsb
cli
orb
sbb
negl
ret
or
ljmp
shlb
shll
and
cwtl
ret
cmp
insl
mov
jmp
mov
jmp
push
pushf
lods
rcll
stos
push
xor
js
fisubs
lret
mov
bound
popl
and
dec
cltd
push
test
daa
jg
fbstp
cwtl
imul
outsl
sub
outsb
sbb
in
call
mov
sub
lahf
push
loopne
sub
mov
lcall
das
cli
pop
xchg
stos
jecxz
and
scas
out
inc
lods
mov
mov
or
and
mov
pop
aas
push
push
push
cwtl
sub
push
push
jecxz
jns
decb
mov
ja
inc
into
dec
cmp
cmc
push
leave
cmp
nop
stos
popf
and
push
xchg
pop
inc
inc
xor
lcall
loop
aaa
inc
call
mov
mov
aaa
leave
lret
jno
and
clc
mov
xor
add
jno
popa
cwtl
dec
cmp
loope
jge
call
loopne
popf
inc
cwtl
sub
add
orb
and
std
xchg
jmp
rcl
gs
cmp
in
das
std
dec
ja
sahf
xor
push
aaa
std
incl
rcr
hlt
jmp
pop
mov
mov
sub
test
push
idiv
call
push
aam
push
sub
outsb
jge
pop
xor
adc
jg
test
cmp
in
xchg
jae
call
addr16
movsb
and
dec
loop
negb
sub
pop
test
xchg
pusha
add
cmp
lss
push
mov
ret
lock
jp
xchg
inc
xor
mov
and
jle
mov
test
jne
addr16
jl
lret
loope
cli
xchg
loopne
add
aad
cli
inc
movsb
add
jbe
inc
arpl
pop
pop
add
arpl
fdiv
xorb
ljmp
mov
fxch
pushf
cmp
out
and
pop
mov
int3
inc
xchg
sub
cld
pushl
subb
lea
addr16
fistps
add
ds
push
mov
xchg
pushl
mov
inc
add
mov
cmp
clc
ds
sub
sub
jne
outsl
sar
jmp
adc
rclb
dec
cmp
or
scas
adc
jl
add
popf
or
call
pop
insl
data16
ljmp
push
fildll
es
mov
lcall
jbe
repnz
pusha
cmpb
mov
dec
mov
rcrl
mov
mov
jg
decl
cmpsb
and
cs
mov
xorl
jno
cmp
popa
sbb
mov
lock
dec
loope
into
mov
fwait
cmp
ljmp
das
scas
and
scas
mov
test
iret
mov
mov
dec
push
loop
popf
stc
dec
mov
jecxz
das
clc
lcall
xor
test
fistps
insl
aas
mov
stc
scas
jno
and
lcall
dec
mov
out
push
sub
movsl
int3
pop
mov
sbb
pop
cmc
jmp
inc
int3
addb
cmp
xor
icebp
nop
out
jg
add
test
jns
mov
mov
decl
lock
dec
arpl
stc
pop
dec
into
shrb
les
insb
imul
cmovo
mov
add
jne
sti
pop
or
or
and
xchg
jg
or
jb
adc
insl
testb
ss
cmp
es
fmul
mov
xchg
push
add
mov
inc
ret
arpl
adc
out
cli
aam
jns
cmp
pop
pop
push
add
out
addl
mov
add
inc
pushf
subl
mov
loope
scas
mov
aaa
fstpt
fs
adc
ss
adc
mov
jno
pushf
test
mov
in
mov
jmp
jae
or
add
sub
jb
push
push
lods
inc
imul
inc
adc
or
xorl
imul
lcall
cmp
push
lea
xor
lods
mov
cmpsb
in
pushw
cs
out
inc
pushf
cmpb
jecxz
xchg
imul
fcomip
mov
ret
xchg
xor
out
sbb
loopne
sahf
push
add
jmp
xor
pop
push
adc
sbb
mov
or
popa
ror
or
aad
add
mov
push
cmp
jmp
call
inc
or
mov
fucomip
addb
cmp
addr16
out
cli
jmp
arpl
es
fbld
push
pop
cmp
rclb
add
sub
push
std
add
mov
addr16
sub
jl
scas
aas
dec
and
das
add
enter
jae
sbb
mov
pop
cmp
cmp
xor
xor
xchg
xchg
push
dec
mov
pop
movsl
call
loope
cmpsl
mov
mov
push
xchg
loope
xor
mov
test
out
clc
neg
xor
mov
xorl
pop
xor
ffreep
mov
fstps
cmp
add
dec
push
jge
in
pop
sbb
ljmp
xchg
clc
je
mov
fcmovnu
push
mov
lods
movsb
xchg
inc
clc
lods
in
ds
ljmp
cmp
repnz
push
pop
lods
int3
movsb
outsb
aas
sbb
or
in
push
int
test
cmp
pushl
sub
cmp
and
lock
cmp
pusha
and
inc
add
fsub
xor
insb
andl
pop
scas
sahf
addr16
sarl
xchg
push
add
incl
inc
jo
clc
push
mov
scas
call
call
leave
mull
dec
outsb
sbb
call
mov
jns
push
inc
lret
popa
test
sbbl
int3
lret
fistps
mov
rclb
call
add
inc
mov
pop
jo
repz
adc
ss
xchg
mov
test
add
fcomip
mov
cmp
loop
ds
ljmp
in
pushl
cmp
outsb
push
ds
push
int3
inc
das
iret
ret
scas
leave
add
ljmp
aas
inc
fimull
loop
hlt
stos
lret
stos
das
pushf
repz
data16
adc
ljmp
ss
push
xor
pop
pop
dec
xor
std
int
jg
cmp
mov
mov
or
jne
cmp
xchg
out
jl
dec
adc
fidivl
lcall
push
sbb
xchg
frstor
xor
adc
xor
inc
int
push
shlb
dec
mov
mov
adc
push
int3
cs
push
jo
dec
add
addr16
inc
out
xchg
xor
loopne
iret
adc
pop
out
or
mov
xor
testl
incl
ljmp
lahf
or
or
jb
shll
test
decl
push
imul
or
ja
or
addr16
fs
push
sti
clc
push
sub
jb
adc
in
jo
xor
mov
scas
push
jae
negl
pushl
rcrl
icebp
test
icebp
loop
or
outsl
scas
cmp
mov
pop
push
clc
ficomps
push
enter
mov
out
rclb
and
mov
push
pusha
fs
mov
in
idiv
decl
sub
sub
mov
inc
fwait
sbb
cmp
sub
pop
xchg
pop
cltd
add
lcall
or
stos
inc
pop
cmp
mov
shrb
or
add
jnp
int
cmp
idivl
jmp
inc
int
testb
dec
cmp
xchg
jnp
pop
out
adc
mov
loopne
mov
mov
and
cwtl
cmc
fadds
sbbl
add
mov
jo
dec
loopne
out
sub
fsub
filds
dec
pop
aam
mov
ffree
mov
mov
sti
ret
pop
add
clc
cmp
mov
pop
loop
inc
in
mov
sub
pop
icebp
lcall
sub
push
sbb
and
xor
mov
adc
mov
icebp
ljmp
xlat
and
je
dec
shrb
mov
sub
call
push
test
jns
int
jle
mov
loopne
lods
inc
es
decl
xor
pop
insl
mov
shr
jo
mov
sbb
mov
std
lcall
jg
fldcw
stc
stc
cmp
dec
dec
fwait
out
iret
cmpsb
lcall
cmp
jns
mov
int
sbbb
xchg
out
fidivl
js
scas
fwait
or
adc
decb
stos
sub
aad
dec
dec
daa
lock
lods
aas
inc
xor
sbb
mov
jg
decl
inc
sub
dec
popf
push
lea
lods
orl
js
pusha
loopne
jg
sbb
or
pop
loope
or
inc
or
mov
push
xchg
and
jg
mov
jne
mov
push
bound
dec
in
aas
mov
push
cmp
insl
decl
int3
stos
outsb
addr16
shrl
mov
cmp
jns
jnp
xchg
push
outsb
lret
hlt
jmp
pushf
jecxz
insl
lds
jns
cmp
lcall
push
lahf
call
xchg
stos
inc
jge
scas
clc
dec
mov
loop
out
ret
xchg
jecxz
dec
fdivl
add
xchg
ja
mov
cmp
add
out
dec
setb
pop
jne
shll
jmp
sbb
sti
sub
dec
jp
and
sbb
lods
push
mov
ljmp
pop
mov
cmp
test
cmp
into
leave
jmp
es
fdivr
call
lds
inc
pop
hlt
cmp
hlt
cli
testl
pop
pop
dec
sub
decl
ret
mov
cltd
push
mov
addr16
cmpsl
jnp
or
or
pop
push
icebp
scas
outsl
cli
incl
dec
cs
gs
or
jae
xchg
mov
xchg
jo
arpl
sub
sub
add
push
ss
xchg
bound
into
jmp
shlb
jmp
cmp
mov
push
das
or
pop
pusha
push
pop
xlat
sbb
mov
loop
cld
aas
jmp
out
int3
jo
mov
sub
gs
add
push
adc
jns
hlt
arpl
sarb
or
mov
scas
es
jne
push
pop
cmp
fistpl
lods
cld
xor
push
or
mov
insb
popf
lods
call
fildl
push
mov
mov
in
popl
decl
arpl
insl
push
aam
pop
les
add
jge
movsb
lock
jbe
call
cmpsb
outsb
cmpsb
dec
pop
mov
cli
sub
and
mov
mov
xchg
sub
decl
arpl
pop
mov
aad
push
inc
xor
add
cli
jmp
cmpsl
mov
ret
inc
pop
dec
jg
and
lret
and
test
push
dec
repz
call
fistps
pop
jge
je
out
jp
cmpsl
sbb
mov
jno
data16
outsb
mov
pop
cmp
jno
in
add
xchg
imul
daa
pop
pushf
sbb
sub
sbb
mov
iret
loope
lea
xor
pushl
jg
subb
dec
jmp
or
stc
test
pop
repz
fbstp
ret
lea
jle
push
cmp
inc
dec
repnz
into
cmp
fistpl
xor
pusha
mov
push
jae
pushf
out
aaa
add
dec
dec
pop
mov
xlat
push
test
pushf
sbb
pop
mov
repnz
xor
mov
push
lret
push
iret
xchg
call
sub
fldenv
gs
arpl
cmp
inc
out
or
and
lcall
xchg
repz
dec
in
daa
rorb
jmp
pop
mov
pushl
rol
xor
scas
mov
lcall
add
repz
push
imul
incl
push
mov
push
sbb
jge
les
xchg
push
adc
adc
sub
ficomps
sub
fcomip
movb
inc
inc
cli
dec
pop
in
dec
aas
mov
inc
inc
sahf
mov
pop
add
jmp
pushf
cmp
inc
lods
out
pop
or
mov
jle
leave
sub
fsubp
js
imul
and
lods
sub
and
jl
mov
ljmp
jne
incb
insb
xchg
ljmp
sbbl
xchg
xor
jmp
js
int
rcrl
cmpsl
ret
jmp
cmp
xchg
subb
adc
jp
lcall
decl
sbb
cwtl
in
sub
or
popa
lret
cld
out
push
dec
pop
cli
and
nop
and
rolb
adc
decl
mov
cmc
dec
mov
or
mov
dec
pusha
sahf
mov
lcall
ds
cld
outsb
sbb
enter
mov
ljmp
pop
jno
loopne
xchg
xchg
stos
jg
pushl
adc
or
mov
sub
gs
lods
pusha
or
cmp
hlt
xlat
adc
or
sub
sub
imul
xor
lcall
lock
insb
inc
push
mov
push
in
adc
jno
cmp
cltd
je
jmp
pop
addb
xchg
lahf
mov
lods
into
push
daa
push
and
add
jecxz
mov
int
aam
mul
and
xor
inc
push
aaa
arpl
jo
push
mov
int
fld1
push
xchg
insl
jne
add
hlt
nop
fnsave
cld
std
jle
pop
orb
lahf
xlat
push
insl
cmp
sub
decl
jo
inc
mov
xchg
nop
mov
stos
test
nop
arpl
fisttps
or
lcall
mov
xchg
lahf
decb
pop
push
sub
jno
in
dec
lods
mov
pop
cmpb
xlat
jmp
ss
pop
ljmp
outsl
dec
jge
add
or
mov
popa
sub
mov
push
adc
adc
adcl
fnstcw
mov
hlt
add
push
jno
jmp
push
mov
in
rolb
push
popa
mov
popa
lods
jmp
icebp
add
arpl
decl
sti
jno
aaa
mov
jb
test
xor
lcall
cwtl
mov
jns
subl
popf
cmp
inc
arpl
xchg
movsb
push
scas
fiadds
pop
and
adc
inc
mulb
adc
sbb
jg
sub
or
mov
pop
xchg
data16
dec
push
jno
fisubs
cmpsl
pop
jl
outsl
cmpsb
hlt
jp
int
and
or
lcall
aam
jnp
mov
scas
jae
jg
jp
loopne
je
sbb
dec
fnsave
mov
cmp
cli
and
call
lds
adc
mov
sbb
pop
aam
test
into
ja
out
clc
mov
mov
aam
filds
mov
cmpsl
mov
mov
loop
jp
call
adc
cld
add
jecxz
dec
cmp
cvttps2pi
mov
jne
cmpsb
incl
lds
sbbl
push
sub
jmp
and
ljmp
xchg
xchg
dec
in
test
int3
imull
out
scas
cltd
sub
mov
icebp
sub
cld
call
das
xchg
movb
inc
mov
decl
adc
dec
cmpsb
mov
jl
xchg
stos
xchg
jbe
movsb
lods
imul
in
inc
ja
mov
sbb
dec
pushl
std
ljmp
and
rolb
jne
push
dec
inc
xchg
into
ret
pushf
loopne
push
je
push
pusha
repz
push
mov
fmull
nop
mov
lahf
rcr
popa
xchg
hlt
lods
dec
std
ret
ljmp
lock
scas
adc
push
mov
pushf
dec
pop
inc
repnz
ljmp
xchg
or
les
pop
mov
mov
inc
enter
lock
lcall
in
push
dec
sub
sbb
rorl
incl
inc
out
mov
adc
adc
inc
xchg
pop
into
jl
and
adc
mov
mov
adc
ss
and
call
pop
push
daa
rol
jmp
jl
inc
scas
xor
subl
pop
push
scas
sub
xchg
lahf
add
rcll
fnsave
call
mov
dec
pop
jge
shl
mov
test
movd
addr16
mov
jmp
push
mov
xor
lods
sbb
and
fnstenv
cs
mov
mov
aas
pop
out
pop
cmp
xchg
cmp
xor
addr16
jmp
xchg
xor
out
pushl
push
jle
lea
sub
lcall
repnz
jne
push
lret
dec
scas
inc
pop
sub
decl
setno
std
test
das
jge
in
mov
movsb
pop
fsts
incl
jne
fbstp
add
enter
test
inc
data16
jl
jno
dec
imul
ljmp
ficoml
lret
add
dec
and
lods
jp
pop
dec
add
lock
in
sbb
mov
jmp
add
gs
or
fcoms
sub
aas
out
xlat
fdiv
dec
mov
push
testl
xchg
ss
cld
push
in
scas
outsl
rorb
lods
adc
push
les
xor
ljmp
mov
cs
jmp
push
inc
mov
mov
lcall
push
mov
inc
lea
push
cmp
pushf
cld
fidivl
xorb
jge
stc
xor
ljmp
adc
daa
add
test
stos
push
mov
jnp
and
or
je
lods
es
data16
inc
mov
add
jl
inc
inc
lds
jo
lret
test
notl
scas
dec
pop
rclb
fcomip
push
jmp
sub
fmulp
push
push
mov
or
imul
ljmp
jge
push
aas
gs
stos
xchg
adc
test
push
pop
and
jg
decl
nop
jecxz
adc
dec
inc
mov
lret
push
push
xor
es
sub
cmp
incl
std
iret
lds
mov
push
loop
fwait
push
lds
inc
cmpl
orl
dec
loop
adc
in
pusha
out
mov
divb
adc
out
imul
out
push
xor
ja
scas
lods
stos
jle
add
pop
repz
and
adc
push
or
mov
pushf
movsb
movsb
jge
scas
jecxz
cmp
dec
insb
mov
aad
or
ljmp
xor
cmpsl
or
ror
push
f2xm1
jns
int
fs
je
adc
pushl
push
aam
or
jmp
or
inc
sarl
jg
into
mov
xor
jg
ds
mov
push
ja
xor
rcl
repnz
minss
jo
inc
std
xchg
lds
ljmp
jns
rcll
add
stos
jb
and
loopne
sub
xor
inc
test
ljmp
cli
and
test
sbb
fidivrl
and
mov
add
mov
icebp
jecxz
arpl
mov
inc
push
outsl
cmp
add
pop
jmp
inc
jg
jns
xor
mov
add
mov
sahf
fistpl
mov
incl
std
out
push
pushf
push
test
lcall
or
fdiv
pop
arpl
lea
xlat
ss
ss
adc
and
mov
pushl
fsubs
sbb
inc
pop
in
aad
and
sub
fdiv
dec
sbb
jnp
fisubl
pusha
mov
mov
mov
adc
sbb
sti
ljmp
leave
sub
fmuls
ds
scas
mov
leave
mov
xchg
pop
jg
sub
div
inc
clc
jmp
mov
xor
inc
idivl
ffree
in
mov
push
lea
sahf
inc
rorl
add
decl
sbb
mov
push
and
mov
aad
and
add
dec
push
sub
movsl
js
mov
sbb
mov
ljmp
test
insb
cwtl
cmp
cmp
icebp
insb
and
and
loope
ret
jecxz
call
nop
pop
ss
repnz
mov
mov
mov
shr
inc
xchg
scas
pmulhuw
adc
decl
les
push
mov
out
adc
xor
inc
clc
in
mov
ljmp
cli
jns
xchg
aad
insb
mov
mov
pop
hlt
sub
lcall
lcall
or
and
incb
xorl
in
jecxz
js
imull
and
fst
and
xchg
add
mov
or
and
jne,pt
cmp
pushl
xchg
sbb
test
push
arpl
pushf
aam
xchg
dec
push
inc
test
jg
push
sub
les
pushl
pop
cld
sti
cld
jmp
hlt
jp
push
in
dec
daa
dec
notb
pop
push
loopne
pushl
or
sbbl
in
rcll
push
mov
pop
xchg
leave
fists
pop
stos
dec
out
call
cld
addb
cmpsl
les
pop
loope
pusha
mov
add
lods
ljmp
push
dec
pop
jmp
mov
push
sbb
and
std
jbe
insb
sbb
inc
dec
sub
ja
lret
or
cli
incb
out
cld
add
or
mov
jnp
xchg
mov
jle
jns
shrb
pushf
rep
xor
addr16
pop
mov
sahf
xchg
and
lcall
pop
lahf
int3
ret
mov
xor
movsb
jmp
int
lds
push
divb
mov
lret
test
repnz
or
mov
incl
test
sbb
push
adc
mov
stc
dec
sti
sub
sbb
adc
mov
incl
sbb
aas
mov
pop
iret
repz
xor
cmp
xor
out
in
adc
imul
pop
fistl
cmp
fmul
sub
cmp
mov
push
addb
ljmp
aam
in
outsb
into
jbe
lds
outsl
loopne
sahf
ret
pop
mov
mov
lcall
pop
push
pop
push
sbb
clc
stos
pop
or
loope
push
arpl
mov
dec
mov
pop
xchg
das
daa
test
in
add
icebp
in
lods
and
push
lods
xor
outsl
cli
ljmp
jbe
mov
sbb
mov
sar
aas
loop
lret
adc
xchg
into
sbb
rolb
mov
push
cmpsb
iret
mov
out
xor
clc
adc
incl
cwtl
inc
xchg
lret
add
rorb
repnz
cwtl
ss
out
jnp
xor
call
ror
inc
cmp
movsb
xor
add
lea
pop
inc
pop
push
jmp
push
cmpl
mov
test
xlat
xor
pop
add
test
in
inc
push
scas
ficomps
ljmp
and
fcoml
mov
nop
inc
ficompl
xchg
and
in
cld
or
or
adc
cmp
mov
add
ja
out
dec
or
nop
adc
test
aaa
test
lcall
lahf
mov
jne
sbb
cmp
aaa
into
incl
jmp
jge
jle
popf
add
mov
push
adc
fimuls
ss
jmp
inc
sti
scas
mov
dec
xor
push
fcoml
aam
sub
jae
mov
das
xchg
push
cltd
stos
push
mov
dec
icebp
cwtl
jns
dec
dec
add
adc
pop
es
fcomip
mov
xchg
out
sub
jns
movsb
outsl
and
rcr
or
pop
ljmp
add
gs
add
xchg
in
das
cmp
movq
jg
call
lret
je
jg
fdivr
and
add
sub
incl
enter
in
add
jnp
stos
negl
push
pop
test
lea
jmp
pushl
xchg
mov
xor
setp
jl
enter
out
jmp
ljmp
mov
inc
fs
int
pop
movsb
pushf
mov
cmp
inc
push
dec
ud0
dec
loop
enter
mov
mov
in
fcoms
in
inc
jbe
add
lds
adc
add
lcall
push
inc
lea
shr
mov
test
ja
rolb
pop
clc
std
mov
mov
cwtl
test
pushf
js
jmp
inc
mov
lcall
adc
jmp
or
sar
xlat
adc
mov
sbb
pop
pop
loop
out
lods
push
call
stc
mov
repnz
inc
in
mov
xor
out
dec
xor
dec
push
mov
push
cmp
outsl
das
xchg
jecxz
mov
sub
jge
in
hlt
add
cmp
sti
call
enter
roll
ss
aas
mov
daa
repz
mov
mov
fcmovb
out
mov
cld
outsl
adcb
pop
and
mov
call
loopne
orb
test
mov
push
in
insb
mov
addr16
ljmp
push
dec
jl
call
lret
mov
sbb
or
mov
jb
decl
mov
mov
cmc
insb
mov
or
aam
mov
and
pop
cld
pushl
or
or
pop
mov
shrb
inc
cmp
lock
incl
std
aaa
out
inc
add
loopne
lret
xchg
jae
sbb
xchg
pop
push
fistl
icebp
sti
int
inc
call
hlt
push
cltd
sub
pop
ret
lahf
cmpsl
mov
mov
adcb
popa
in
mov
xchg
call
insb
les
orl
dec
pop
mov
mov
cmp
outsb
jo
out
idivl
pushl
in
lock
dec
loope
mov
clc
aaa
or
addb
lret
rclb
les
incl
mov
addb
inc
cwtl
pop
rolb
lock
outsb
bnd
decl
mov
rorb
xlat
mov
mov
addl
js
sbb
test
cmpsb
daa
call
rorl
notl
cmp
inc
test
outsb
clc
inc
adc
decl
pop
clc
rolb
es
sarl
and
pop
dec
es
leave
popf
mov
add
pushl
mov
or
push
push
cmp
pop
or
mov
cld
cmpsl
inc
mov
incl
call
test
push
jmp
xchg
jp
or
lea
jmp
bound
out
lock
inc
jle
mov
mov
add
sub
pop
lahf
jmp
mov
sbb
leave
movsb
inc
imul
add
fbstp
das
arpl
ljmp
mov
test
pop
loop
cmp
dec
xlat
push
fwait
add
aaa
lcall
mov
mov
inc
shlb
inc
mov
pop
shl
gs
incl
aaa
insb
cltd
int3
or
add
imul
mov
fists
xor
xchg
fs
or
fwait
cmp
call
and
push
std
es
js
mov
test
ret
mov
cmp
ljmp
jne
add
lret
adc
sbb
shr
cmp
sub
das
sbb
jmp
fisttpll
andb
jle
push
fldt
xor
pop
inc
mov
xchg
add
shll
mov
cmp
mov
mov
in
mov
in
xor
comiss
loop
mov
jg
bound
xchg
xchg
dec
pop
stos
lods
xor
xchg
mov
push
dec
hlt
mov
inc
aam
mov
movsl
incl
mov
fadd
aad
in
adc
into
outsb
test
lds
scas
sar
decl
loope
sbb
enter
sub
push
jbe
mov
lcall
jg
jnp
ficompl
dec
testl
push
xchg
lods
shlb
mov
jmp
lret
inc
mov
shll
nop
jmp
loopne
les
add
incl
fcomps
push
fisttpl
lock
outsb
mov
lret
fdiv
fwait
cmp
out
cmp
inc
ljmp
mov
ret
popl
std
pop
pushl
jmp
cmp
loop
pop
test
sub
add
and
mov
incl
xchg
push
pop
jb
inc
add
shlb
mov
out
push
sub
imul
lcall
mov
fmul
inc
push
and
ljmp
popa
mov
jmp
enter
das
sub
cmp
mov
stc
jnp
or
xchg
lea
fcomip
xor
stos
loop
pusha
inc
pushf
es
mov
rorl
mov
jg
inc
cltd
pushf
add
sub
faddl
push
sub
clc
add
call
mov
mov
jne
adcl
or
jg
jb
push
cmp
mov
add
clc
pop
test
lds
incl
or
mov
sub
pop
cs
sub
test
mov
outsb
mov
and
cwtl
jmp
ss
jg
stos
xorl
repz
cmc
cmp
inc
gs
into
cli
dec
int
decl
ret
mov
pop
pop
mov
dec
mov
xlat
jg
mov
fcos
lcall
mov
xchg
lds
dec
nop
jne
sub
jecxz
pop
pop
jmp
mov
mov
pushf
push
adc
adc
frndint
movsb
xor
clc
sbb
pop
xorb
incb
pop
fildll
adc
outsl
cmp
movsl
adc
scas
pop
out
or
adc
fsub
popl
repz
cld
sub
out
jmp
in
push
mov
hlt
call
mov
xchg
bound
call
pop
jge
sub
lcall
out
outsb
rcrl
aam
pop
jl
insb
or
rcrb
xchg
fwait
xor
cli
call
shlb
or
arpl
jne
test
xor
mov
xchg
lahf
ljmp
xchg
scas
cmp
xchg
xor
repnz
push
sub
jp
push
sub
jmp
dec
mov
rcrl
ljmp
mov
inc
mov
xor
call
mov
xchg
add
lcall
sub
lods
fwait
loope
cs
data16
clc
mov
incl
movsl
xor
and
sarb
add
push
ja
imul
fildl
push
inc
sub
std
push
xor
add
cmc
sbb
inc
xchg
jle
jne
sbb
push
push
cmp
hlt
sub
xchg
lret
test
mov
enter
icebp
pushl
dec
cld
stos
lods
jge
lret
mov
or
lds
xor
loop
addb
fists
call
ja
jbe
repnz
outsl
shl
aam
xchg
rorb
das
push
negb
cmp
mov
cwtl
fldcw
outsb
xchg
fcomi
test
loopne
paddd
icebp
xchg
incl
or
out
mov
push
sub
cwtl
out
lcall
dec
mov
jo
sub
repz
movsl
and
mov
mov
mov
jb
pop
out
lcall
stos
test
movsb
lock
iret
mov
pop
or
imul
pop
sahf
sarl
in
lods
hlt
xchg
incl
and
loope
call
out
pusha
pop
sub
jb
push
fs
cmc
cltd
cltd
call
aaa
lret
mov
inc
fmull
inc
and
psrlq
sub
lds
incl
pop
std
lcall
fdivr
or
push
cmc
in
xor
ss
leave
rol
shlb
dec
and
mov
cwtl
mov
dec
loop
insl
jg
sub
sti
jmp
dec
mov
test
or
lret
mov
call
jl
lds
cs
lcall
push
rcll
jo
fucomip
sub
inc
sub
in
and
out
add
add
movsb
jp
sub
mov
inc
pop
mov
cmp
cli
mov
jl
scas
xchg
cmpsl
sub
adc
pushf
sub
or
or
pusha
fsubl
ljmp
das
push
addr16
in
xchg
jb
mov
push
cmpsb
lds
dec
xchg
inc
pop
js
fcomip
outsl
rcrl
mov
es
fs
jo
shrb
pop
lcall
jmp
dec
mov
sbbl
dec
arpl
jb
aaa
pop
lret
lret
hlt
jmp
addr16
lea
lea
sbb
or
test
ljmp
rol
iret
sub
push
je
fnsave
notb
cltd
lea
ljmp
pop
sarb
xchg
sbb
int
pop
call
out
popa
adc
inc
dec
jno
popaw
adc
cmp
pop
lcall
insb
jmp
cmp
cmp
js
pop
cld
mov
dec
ds
pop
xor
call
out
cmpsb
push
fsubr
cltd
sbb
gs
dec
pop
ds
aas
jle
pop
decl
push
sbb
call
add
inc
cld
xchg
push
and
sub
in
stc
jb
inc
test
jg
xor
jge
out
mov
jmp
pop
xor
inc
inc
cmp
add
cli
lcall
addr16
push
push
mov
lods
call
inc
arpl
into
xlat
xor
incl
stc
pop
mov
jbe
iret
jmp
call
enter
lret
jo
push
repnz
or
mov
and
jg
rorb
adc
lahf
push
jge
push
shll
mov
cli
adcb
out
adc
jg
mov
fidivrs
jb
mov
inc
lods
push
push
sar
ljmp
jle
fucom
dec
mov
xor
sbb
lahf
je
xchg
or
xor
call
outsl
sahf
push
icebp
or
out
and
std
ret
adc
cmp
add
ja
inc
fmul
add
lds
in
add
pop
lds
mov
sbb
arpl
cwtl
jmp
movsl
std
sarb
push
repnz
push
shlb
and
mov
mov
add
jns
cmpsb
ds
negb
or
pop
leave
inc
lret
mov
jl
cmp
lods
imul
xor
sub
and
ljmp
call
push
scas
add
cmc
cmp
lcall
adc
pop
and
andb
outsb
enter
or
add
shll
dec
fwait
test
or
cmc
imul
mov
pop
ss
sbb
jp
jno
jecxz
shlb
aaa
push
ljmp
test
ret
lods
push
pop
cmp
loope
cmp
lahf
xchg
call
inc
adc
movsb
repnz
stos
inc
add
lcall
cmp
push
push
lods
cli
into
lods
cmp
ja
push
xor
jmp
test
popa
rclb
mov
mov
cmpsl
pop
dec
mov
cmp
in
leave
mov
out
jg
xor
jge
clc
or
ja
add
test
lcall
mov
or
mov
lcall
dec
ljmp
inc
add
mov
je
jecxz
shl
es
call
bnd
decb
push
sahf
xchg
xchg
cld
incl
and
test
nop
fdiv
mov
shll
mov
mov
mov
add
add
ljmp
cltd
into
add
push
pop
scas
cld
mov
jnp
lock
repnz
leave
jg
jo
cmp
fildll
and
nop
cs
sub
xchg
push
push
scas
mov
int
mov
scas
sub
decl
aaa
mov
cmp
mov
shlb
das
inc
mov
jmp
inc
lret
push
jb
idivb
add
sbb
dec
xchg
xchg
pop
nop
call
ss
rcl
or
bound
out
mov
incl
lret
lods
ss
cmp
daa
or
dec
fisubs
add
pop
mov
mov
lcall
mov
add
enter
and
rcrb
fs
lods
rcrl
fucomip
adc
push
mov
pop
arpl
inc
movsl
test
dec
mov
mov
scas
jmp
nop
jmp
loope
pop
popa
adc
xor
mov
ljmpw
in
push
pop
addr16
call
pop
inc
cmp
mov
std
push
sbb
outsl
sbb
mov
movsl
or
jmp
insb
lcall
dec
incb
fs
fwait
out
inc
xor
push
lods
xor
call
sbb
leave
cmpsb
call
mov
jg
in
jp
adcb
iret
js
dec
leave
popa
int3
mov
xchg
incl
loope
jbe
je
gs
mov
or
cmp
jno
xchg
mov
je
scas
dec
mov
add
and
or
mov
test
push
mov
hlt
and
mov
nop
push
insl
xchg
pop
and
adc
push
outsb
mov
icebp
aas
add
ja
sahf
mov
mov
inc
outsb
pop
and
mov
lcall
es
inc
test
jbe
test
jo
adc
loope
or
call
mov
out
inc
in
out
mov
imul
inc
jns
cmp
idivb
xchg
aas
jmp
arpl
mov
test
push
sbb
gs
and
inc
js
test
dec
adc
push
inc
sbb
lods
popf
andb
inc
or
sti
jnp
and
lcall
sbb
mov
dec
pusha
popa
xchg
xchg
ss
lcall
pushl
and
xor
and
push
ljmp
icebp
lea
into
nop
mov
std
or
and
mov
cmp
pop
pop
scas
insb
push
je
and
xchg
out
dec
dec
mov
decl
sbb
in
jo
dec
jne
dec
mov
imul
pop
insb
lret
std
jo
add
cltd
inc
icebp
imul
pslld
xchg
fucom
popf
pop
aam
lret
leave
push
inc
mov
inc
incb
jne
inc
insl
in
icebp
cmp
mov
popa
in
mov
and
sbb
sbb
decl
shr
unpcklps
pop
ret
cmp
sahf
xchg
int
xchg
popf
xchg
xor
ljmp
pop
pop
and
jge
add
fs
test
mov
xchg
mov
decl
adc
dec
pop
js
lods
roll
sub
je
imul
cltd
mov
out
clc
cld
jae
icebp
jmp
jge
mov
inc
push
add
aad
movsb
faddl
incl
mov
cmp
sbb
popa
mov
sbb
sbb
adc
pop
sar
lcall
jmp
arpl
mov
in
dec
rolb
lock
or
pop
mov
and
sarl
jmp
pop
outsb
push
adc
sahf
cli
pushf
mov
and
fcomip
lcall
imul
jns
in
fisttpl
out
jno
cli
incl
ds
in
insl
adc
nop
int
mov
ljmp
dec
cmp
outsb
add
lds
fwait
popa
lea
sbb
push
adc
leave
fs
dec
ljmp
inc
gs
mov
iret
cmp
adc
flds
pop
lods
lcall
fwait
mov
mov
inc
and
pusha
xchg
popf
hlt
jnp
out
decl
andb
ret
mov
push
les
outsl
pop
adc
and
hlt
jmp
data16
notb
mov
sbb
stos
enter
arpl
pop
jo
insl
sbb
mov
jb
lock
bound
clc
push
inc
jne
jmp
fwait
pop
lock
mov
mov
ljmp
mov
call
loop
xchg
mov
popa
in
dec
add
push
cld
push
add
push
xor
adc
cmp
rolb
into
sbb
mov
adc
rcr
push
sub
mov
data16
mov
call
sub
and
push
sub
mov
out
fistps
ljmp
sub
mov
xor
in
push
test
icebp
mov
call
inc
in
mov
xor
adc
insl
jns
and
scas
fsubs
xor
adc
sub
push
sub
jg
lcall
ret
jge
rolb
xchg
jo
ljmp
fbld
in
fcomip
pop
inc
jo
call
lahf
and
arpl
pushf
jae
push
add
mov
scas
out
push
out
mov
jp
cmp
lret
aas
push
mov
mov
fidivl
or
push
ljmp
adc
andl
cmp
pop
mov
cwtl
mov
adc
inc
sbb
arpl
inc
gs
dec
or
sub
adc
sub
stc
push
lods
push
sbb
aas
or
cmc
dec
jne
jmp
loope
inc
mov
pop
aaa
push
mov
iret
into
and
mov
daa
js
aaa
sbb
push
call
call
xor
mov
add
jo
fdivs
pop
cli
dec
andb
cld
push
loop
push
pop
push
mov
sete
mov
inc
mov
or
sbb
add
stc
out
data16
pop
add
sbbb
add
inc
filds
push
jmp
pushl
cmc
jecxz
jge
sub
icebp
sub
xor
inc
inc
insl
push
ds
add
imul
ljmp
inc
pop
push
mov
insl
gs
cmpsl
mov
cmp
sbb
and
mov
stc
mov
push
mov
movsl
mov
mov
pop
add
or
cmc
roll
les
pop
add
insb
into
sahf
decl
out
sbb
movsl
dec
xchg
flds
loop
es
mov
fadds
cmp
bound
jno
sti
lret
push
and
rolb
push
or
ljmp
cmp
cmc
cmpb
hlt
mov
cmpsb
or
sarl
xor
cmp
jg
fisttps
lcall
inc
fmull
in
fs
lcall
inc
adc
push
jl
pop
pushf
fstps
mov
je
pop
out
mov
and
mov
das
and
in
or
xchg
mov
jnp
cmp
or
fisttps
pushl
daa
or
cmpsl
scas
pushf
xchg
sub
lahf
xorb
jl
dec
inc
aaa
scas
cwtl
mov
inc
into
ret
xlat
clc
sbb
das
jno
xchg
scas
add
xchg
lcall
pop
lods
inc
cmpsl
cli
dec
clc
out
jle
jae
lahf
outsl
jge
fisttpll
push
rclb
jmp
mov
stc
mov
xchg
fdivl
ja
sub
repz
jbe
and
std
jmp
ja
xchg
adc
push
add
cmp
jb
loopne
aaa
push
mov
mov
sbb
and
xor
inc
mov
ds
add
orb
xchg
ljmp
xor
int3
push
pusha
cmpsl
clc
jecxz
xchg
imul
mov
mov
sub
fidivrs
push
orl
imul
add
cld
lcall
data16
push
push
xlat
rcll
das
mov
aad
sub
lahf
popa
cmpsb
mov
inc
ljmp
sbb
mov
mov
inc
inc
pop
push
in
inc
pushf
mov
stos
decb
mov
ljmp
sarl
loop
mov
mov
decl
cmp
in
sub
xorl
xor
leave
hlt
or
lcall
stos
bound
pop
aaa
rolb
push
ret
add
jo
push
out
sbb
push
xlat
repz
jle
xor
enter
jecxz
decl
dec
mov
stos
leave
and
mov
aam
push
ficomps
nop
pop
inc
adc
fimuls
lods
fnstsw
ds
daa
push
pop
push
addr16
daa
jo
push
or
les
pushl
into
es
scas
std
jmp
push
mov
jle
mov
ret
test
jmp
push
sub
mov
incl
sub
data16
stos
stc
movsl
pushf
movsb
jo
mov
fiaddl
sbb
xchg
addr16
xor
cmpsb
in
mov
dec
push
dec
jmp
sbb
jbe
push
pop
ljmp
mov
lcall
outsl
push
push
dec
mov
jno
mov
movsl
push
pushf
cmpsb
xchg
fldcw
clc
call
and
lock
ja
inc
mov
jg
push
inc
sub
mov
pop
cltd
xor
add
push
push
lods
fs
cld
push
mov
sarb
inc
jl
adc
insb
jg
mov
out
clc
fidivrl
xchg
mov
adc
sub
mov
push
into
sub
call
xchg
scas
mov
dec
je
hlt
sub
int
nop
lcall
fdiv
mov
lock
add
in
add
jb,pt
mov
push
into
scas
sbb
jne
nop
cld
test
jnp
test
pop
repnz
fcompl
inc
push
popa
dec
daa
das
rcrb
pop
icebp
je
cmp
dec
ljmp
sbb
data16
mov
or
repz
mov
inc
lcall
xchg
leave
sbb
dec
pushfw
add
xchg
dec
data16
inc
lahf
faddl
push
mov
les
jge
xor
call
mov
push
or
adc
and
pop
inc
or
fucomp
push
pop
add
paddb
cmpsl
aam
scas
sub
cmpsl
and
stos
jae
bound
pop
pop
mov
inc
add
rclb
pop
inc
or
cmp
xchg
add
shrb
push
int
jne
xor
mov
dec
cli
mov
imul
inc
dec
jae
cwtl
xchg
lds
lods
ja
mov
testl
aad
insb
in
insb
insb
je
out
jmp
push
js
pop
je
es
mov
or
xor
sub
jecxz
sub
int3
mov
aad
mov
mov
es
inc
into
dec
pop
xchg
cmpsl
xlat
js
lock
shll
sbb
sub
cmp
fs
cmp
pusha
fcmovnb
insb
js
test
or
sbb
cs
inc
xchg
les
pop
dec
test
mov
fs
mov
cmp
mov
mov
pushl
clc
nop
imul
clc
sbb
mov
das
ljmp
fiadds
lea
ret
fcoms
xor
sahf
cmpl
cmp
and
mov
xchg
cmpb
fdivp
test
add
loopne
xchg
push
addl
cmp
push
stos
incl
push
mov
mov
dec
adc
adc
fsubrs
out
popf
mov
les
ljmp
xchg
cmpsl
adc
lret
filds
inc
push
mov
decl
sub
ljmp
sbb
cmp
push
or
jle
xchg
inc
xchg
lcall
lcall
jne
jae
fidivs
inc
pushf
xchg
cld
fdivr
add
sbb
pop
cltd
scas
sub
mov
and
inc
dec
push
push
and
mov
xchg
nop
mov
add
aas
je
pop
movsl
dec
mov
call
inc
imul
cld
and
lret
and
movsl
push
arpl
xchg
fidivrl
fwait
jns
addr16
jmp
les
aas
mov
cmpsl
in
adc
cmp
fldt
test
mov
sahf
mov
sub
rorb
into
xchg
pop
xchg
movsl
sub
aaa
inc
and
lcall
inc
add
xchg
sbb
xchg
cmp
fwait
ds
add
or
jecxz
dec
dec
inc
ds
jle
es
inc
mov
lods
inc
rcl
mov
xor
adc
lahf
or
incl
inc
aam
icebp
leave
sub
mov
jbe
mov
jge
cmpl
pushl
scas
scas
fistps
push
mov
push
dec
or
cwtl
pushl
xor
pushl
xchg
mov
cld
mov
imul
push
adc
adc
in
pushl
subb
mov
out
hlt
jecxz
jle
jmp
iret
push
dec
mov
inc
jmp
or
mov
dec
lret
cmp
inc
popa
loop
lcall
repnz
fmuls
fisttps
xchg
in
xlat
decl
push
pop
or
daa
aad
decl
loope
insb
xchg
jg
daa
add
cli
or
mov
jle
aam
std
xlat
popf
cmp
cmp
ror
sbb
in
xor
and
jecxz
mov
ja
dec
lds
clc
or
mov
leave
cld
xorb
dec
jp
cmpsb
in
decl
mov
popa
jge
cmpsl
das
pop
cmp
xchg
sbb
fsub
lret
loope
cmp
outsl
iret
or
fsubs
fbstp
sub
jo
movsb
mov
imul
out
scas
loop
xlat
push
out
mov
clc
pusha
stc
daa
repnz
sti
out
mov
pop
cli
mov
inc
xchg
jnp
ljmp
push
add
fimuls
pop
cmp
scas
lret
sti
inc
cmpl
lea
lcall
or
pushf
mov
fmul
dec
test
lret
repnz
xor
scas
rcrl
fldenv
or
xlat
fldt
pop
jae
push
sbb
scas
inc
mov
lds
subb
popf
lcall
shrl
sti
daa
xlat
rcrl
mov
lret
mov
jle
pushl
cmp
or
aas
adc
or
cltd
movsl
lret
pop
add
mov
ljmp
adc
in
mov
das
adc
daa
mov
mov
cld
in
aad
aaa
fimull
fcoms
adc
testb
adc
push
ffreep
js
xchg
pushl
push
inc
pop
adc
add
jg
add
in
mov
addr16
call
pop
xchg
cmc
fwait
pop
mov
dec
or
sub
sub
sub
test
jl
sbb
repz
aad
xchg
add
and
pop
push
das
pushf
xor
jmp
jl
cwtl
sub
stos
inc
or
data16
out
jg
out
fcompl
mov
loopne
pop
mov
pop
push
xchg
jae
lahf
adc
xor
ljmp
and
scas
pushf
adc
jbe
enter
es
popl
arpl
jbe
dec
mov
add
jbe
mov
outsl
mov
jl
pop
push
dec
xor
test
fcmove
lods
jne
call
fists
xchg
fs
in
mov
loopne
and
lcall
cmp
pop
pop
into
jg
jmp
mov
xor
popa
xchg
push
push
aaa
adc
sar
aaa
jge
mov
push
adc
bswap
div
neg
sbb
into
sbb
outsb
inc
cmp
jmp
push
adcb
jmp
mov
mov
ljmp
mov
xor
push
outsl
cli
call
js
adc
or
popa
pop
lds
movsb
test
outsl
cli
decl
enter
or
lret
xor
adc
int3
aad
or
pop
jne
add
dec
mov
decl
mov
rep
mov
imul
call
and
mov
xor
fcoml
or
dec
sub
andl
xchg
dec
pop
inc
ds
xor
scas
fisubrs
divb
mov
push
or
fistpll
in
popa
sbb
push
jmp
loop
xlat
mov
cs
inc
inc
movsb
lret
push
loop
decl
pcmpeqd
xchg
mov
leave
out
push
lock
fldl
or
mov
enter
std
ret
ja
push
lds
xchg
loope
std
ljmp
adc
incl
int3
mov
push
rcpps
jb
fimull
in
movl
pushl
lea
std
or
push
or
xchg
adc
jecxz
xor
sbb
ljmp
sbb
dec
mov
repz
nop
push
adc
insb
pop
sub
repz
mov
incl
adc
xchg
scas
inc
cmpsb
cmpsl
mov
fs
and
jg
popa
xor
jo
sub
xor
ljmp
and
mov
xor
popf
out
rclb
shl
idivl
stos
stc
movsb
in
outsl
test
sub
mov
mov
add
adc
call
repz
xchg
xor
int
pop
arpl
jg
ret
mov
mov
mov
cmpsl
clc
ljmp
test
sbb
xchg
cmp
mov
xlat
jg
in
fildll
inc
adc
add
hlt
push
flds
xchg
dec
outsb
into
filds
in
push
mov
xchg
pmulhw
or
and
imul
ret
call
dec
xor
adc
push
out
ja
int3
mov
sbb
les
jne
sbb
into
lcall
call
ret
dec
and
xchg
sbb
imul
pushf
imul
aad
mov
call
push
adc
sbb
pop
mov
push
jg
gs
mov
push
insl
xor
pusha
pushl
cmp
or
push
dec
push
cmp
aas
cld
mov
mov
xor
xor
xor
in
push
jne
lret
cmp
insb
push
imul
dec
add
sub
pop
push
in
sbb
std
jns
icebp
out
jl
js
mov
dec
add
jbe
lods
push
imul
call
sbb
hlt
scas
jbe
aaa
pop
push
stos
call
or
xchg
pusha
daa
aas
pop
pop
cld
mov
shll
jns
pop
inc
jp
in
mov
fisttps
nop
jg
call
xchg
mov
xor
xor
imul
lret
daa
daa
pushl
loopne
adc
js
pop
cltd
fmuls
data16
mov
decl
mov
pop
mov
xchg
cmp
arpl
add
xchg
jecxz
decl
lock
les
inc
ret
out
and
repz
fs
sub
lcall
jb
in
aam
inc
xchg
fstpt
stc
cmp
xchg
leave
subb
jno
das
call
jge
stc
xchg
mov
inc
xor
loope
inc
fildl
loope
dec
into
call
data16
jecxz
movsl
mov
sti
xchg
clc
cmp
mov
jle
lods
adc
dec
xchg
imul
mov
in
cli
jl
loop
incl
fmull
sbb
inc
mov
frstor
mov
jg
dec
sub
std
push
xchg
cs
pusha
add
imul
jle
sub
xchg
mov
leave
mov
mov
fdivr
inc
mov
icebp
mov
and
dec
sub
aaa
lds
xor
cmp
jl
fisubl
into
jne
leave
xor
mov
lahf
enter
fstpl
bound
decl
sti
xchg
mov
stos
lret
add
cmp
lret
xchg
inc
enter
ljmp
in
xor
jp
mov
cmp
push
adc
lods
jo
je
push
scas
int3
dec
pop
mov
mov
xacquire
mov
cld
dec
insb
inc
push
xor
les
push
cmp
rol
push
imul
aaa
pop
push
jg
jns
mov
xor
decl
adc
mov
sbb
repz
mov
fs
cmc
xor
mov
sahf
mov
jmp
cltd
ja
test
cmpsb
dec
mov
loop
cwtl
pop
ja
sub
jg
cmpsl
test
scas
in
xchg
push
push
cld
mov
mov
mov
repz
jmp
adc
xor
push
add
jo
xchg
dec
imul
inc
xchg
push
incl
loopne
xchg
inc
mov
inc
mov
std
push
push
decl
and
mov
mov
stos
adc
movsb
aam
loop
std
pop
dec
in
jmp
push
jg
addr16
jae
jge
mov
mov
hlt
inc
daa
dec
jl
cli
mov
ret
scas
fsubl
xchg
push
out
cmpsl
xor
out
xchg
fs
xchg
adc
jmp
sub
or
inc
out
bound
dec
hlt
ss
mov
dec
inc
cwtl
push
into
pop
xchg
dec
adc
adc
out
jle
sbb
fcmove
test
jmp
test
shlb
pop
inc
test
adc
leave
pop
loopne
addr16
fwait
add
dec
sahf
sbb
mov
push
or
or
outsb
inc
sub
repnz
std
xchg
fnstcw
incl
cld
or
idivb
aam
adc
out
and
data16
ljmp
jbe
in
and
int
mov
pinsrw
arpl
ret
jg
ljmp
mov
xchg
out
sti
or
stos
cmpsl
adc
out
shrl
jmp
inc
jo
push
cmp
mov
jbe
lds
push
ret
addr16
sbb
cmp
push
push
or
bound
stos
mov
mov
cmp
xorb
push
push
cmp
ljmp
or
lret
int3
and
enter
mov
test
mov
js
fisubrs
icebp
fistl
cld
gs
loop
push
loop
xchg
mov
ss
jbe
add
or
mov
cwtl
rorb
cmp
adc
xchg
jmp
ss
mov
jmp
out
daa
mov
pop
rcrl
pop
test
fsts
roll
insb
mov
dec
mov
add
dec
scas
jmp
mov
sub
test
push
and
lea
jmp
int3
in
xlat
call
movsb
and
cmpsl
repnz
dec
in
pop
and
sbb
cmp
shl
dec
xchg
ret
mov
xchg
out
imul
mov
xor
lret
pop
mov
loope
lcall
jmp
cmp
sub
and
lahf
xchg
add
call
imul
xorl
mov
sbb
and
in
dec
ljmp
inc
jb
enter
cmp
popf
clc
and
push
idivb
fdivr
pushl
loopne
cmpsl
jecxz
fstp
push
in
gs
mov
pop
pop
xchg
xchg
addr16
pop
filds
xchg
fsubs
push
imul
pop
pop
outsb
mov
add
and
sub
popa
insb
sbb
cld
mov
mov
mov
aaa
cmp
adc
adc
ljmp
int
sub
and
dec
clc
jl
xlat
js
test
rorl
mov
jge
clc
fildll
xor
add
xor
add
mov
and
rcrb
aas
and
movsl
aam
and
pushf
push
jmp
jp
sbb
fdivrs
fcoms
adc
dec
mov
push
xor
jmp
and
or
xchg
sbb
adc
push
mov
arpl
jae
mov
lcall
jbe
pop
dec
dec
push
ss
pop
out
mov
sub
mov
xchg
dec
sub
decl
je
rcrb
fdivl
xchg
test
cld
repz
pop
aad
inc
cltd
fwait
cmp
xchg
lcall
mov
ret
jl
sub
lahf
sarb
iret
test
xor
and
mov
iret
in
fsubrl
popa
pop
jg
popf
sbb
aam
decl
lock
push
or
into
mov
pop
sti
mov
lds
call
xlat
adc
jns,pn
ret
add
add
loopne
xor
sub
dec
sbb
test
out
mov
out
fmuls
sbb
jl
testb
lods
cmp
icebp
jmp
cmpsb
mov
jp
and
push
nop
xor
xor
jno
xor
mov
or
jmp
fwait
adc
pop
dec
add
pusha
ss
mov
inc
int
mov
nop
pushl
subb
push
fldt
xlat
mov
sbb
pop
ljmp
int3
and
push
scas
lods
pop
movl
add
cli
fucomp
insb
out
mull
leave
inc
fcompl
data16
mov
test
movsb
mov
ja
popa
ret
cltd
insl
jmp
mov
insb
jp
cmp
dec
or
fidivrl
std
jg
mov
imul
lret
ds
call
sub
call
test
imul
xchg
mov
cmc
or
aaa
das
mov
xchg
filds
pushl
rol
xchg
loopne
cmp
jle
xor
xor
xor
out
xchg
push
lcall
adc
mov
loopne,pt
cli
cmpsb
test
push
fdivl
jb
pop
or
inc
cmpsb
decl
pushf
shlb
aas
xchg
jno
push
mov
dec
lds
test
push
push
iret
jecxz
jmp
movsb
ja
adc
dec
xchg
mov
inc
pop
lcall
in
mov
dec
or
mov
mov
cmove
jae
jae
aaa
shll
pop
jl
lcall
jbe
scas
cmp
mov
sub
decl
cld
fdivl
insl
push
mov
push
mov
fnstcw
aas
sub
mov
cmc
pop
hlt
bswap
xchg
pop
icebp
sbb
mov
call
push
xchg
jp
mov
mov
mov
popa
in
fs
pop
cmp
jae
outsb
loopne
sti
add
xor
pop
loop
neg
cmc
out
pop
push
movsb
inc
add
mov
incl
das
dec
pop
push
xor
faddp
inc
and
mov
jl
sbb
test
jmp
mov
push
push
call
es
cmp
loope
fcmovbe
cmp
or
adcb
jle
in
add
leave
insl
or
jge
xor
jg
or
jecxz
aas
lods
pop
dec
cmp
cmpsb
fmull
inc
fmull
negl
es
jmp
cltd
scas
cmp
mov
mov
arpl
ds
pop
lret
fiaddl
adc
lret
jp
mov
lcall
or
lret
mov
ljmp
xchg
leave
push
push
sbb
xchg
aas
popa
sbb
in
cld
pop
into
leave
and
cmpsb
pop
dec
inc
stos
jmp
divl
ja
and
stc
push
fimuls
ljmp
or
jns
inc
shl
loopne
or
mov
out
mov
pop
jg
fmull
fstpt
lods
je
pushl
jo
aam
pmulhw
push
sbb
pushf
jnp
adc
fidivrs
mov
mov
pushl
dec
jne
push
and
xchg
ja
into
cmpsl
movsl
scas
add
push
sbb
adc
test
fidivl
cld
jmp
loop
push
dec
inc
insl
xchg
cwtl
mov
push
call
xor
mov
jmp
xor
cli
movsl
cli
cld
mov
push
cmc
sub
stc
cmp
jmp
push
mov
pop
leave
mov
std
xchg
mov
dec
jp
xor
pop
dec
lods
std
mov
loopne
das
mov
aad
repnz
divw
arpl
push
ret
incl
shlb
push
icebp
adc
xor
or
and
jg
ficomps
clc
orl
lock
inc
stos
pusha
mov
sub
cmp
lods
in
push
clc
xchg
sub
fcomip
dec
cwtl
jns
stc
xchg
cmpps
mov
adc
jg
lcall
rorb
fcmovu
adc
test
mov
push
ljmp
dec
xchg
xchg
pushf
mov
mov
inc
imul
mov
mov
das
xlat
xor
mov
xchg
mov
popf
inc
adc
shll
sub
movsb
adc
imul
mov
std
mov
pushf
sbb
mov
int
std
mov
cmp
sarl
shll
jmp
jle
cltd
icebp
mov
cmp
idivb
in
lret
pop
push
shlb
imul
ljmp
push
repnz
popa
lahf
gs
xchg
push
and
std
iret
bound
jmp
push
fsts
bound
pop
mov
fwait
mov
jno
fadds
jmp
lods
jp
rcrl
cmp
ss
push
inc
sub
inc
test
sbb
hlt
inc
or
inc
jmp
push
ljmp
mov
shll
pop
rol
aas
popl
int
int3
add
in
sub
pop
rcll
mov
mov
loop
sub
pop
xchg
cli
and
incl
stc
into
pop
pop
nop
xor
pusha
xor
jne
mov
xchg
mov
ds
lret
push
mov
stos
call
push
dec
cld
sub
jae
inc
jae
mov
icebp
or
decl
sahf
ljmp
pop
in
and
xlat
dec
jo
loop
out
mov
gs
loope
ljmp
sbb
inc
add
scas
mov
out
cmp
push
in
cmpsl
mov
loopne
mov
mov
cs
xchg
mov
ljmp
pop
repz
mov
inc
adc
test
jb
xchg
decl
jg
or
lahf
xor
flds
mov
scas
ret
push
cmp
outsl
xchg
mov
imul
jmp
fnstenv
mov
jmp
pop
aam
fildl
or
mov
bound
sub
cli
mov
imul
hlt
xor
jmp
cmp
cmc
in
flds
dec
cs
or
repz
mov
xchg
loope
pop
dec
cmp
or
cli
leave
cmpsl
jno
ss
ret
dec
scas
das
mov
aad
lahf
popf
xlat
testl
fisttpl
jl
push
xchg
jnp
xlat
jge
dec
add
cltd
sub
cli
dec
repnz
les
cmp
cmp
cltd
loop
jecxz
dec
push
or
or
cmp
imul
shll
cmp
mov
cmpl
es
loopne
pop
fiaddl
mov
lock
mov
cmp
outsl
adc
inc
fstpl
pop
data16
xor
cmp
dec
add
out
jg
jnp
jmp
cwtl
jae
pusha
lahf
or
jmp
fidivrl
rorl
pushf
stos
mov
mov
cmp
cmpsb
jle
and
and
cmpsl
sub
popa
popa
jp
cmpsb
push
into
out
push
rcr
push
jns
lcall
add
incl
mov
cmp
loopne
sub
daa
aad
jb
push
iret
xlat
fwait
test
dec
clc
stos
fcmovb
call
cmp
inc
dec
in
sbb
mov
mov
pop
dec
inc
push
inc
mov
arpl
clc
sub
ret
xchg
fisttpl
inc
ljmp
mov
ffreep
adc
lea
jecxz
push
mov
lea
addr16
inc
out
sbb
decl
mul
add
inc
rolb
xchg
push
in
mov
and
cmp
sub
cmc
push
out
or
mov
jmp
outsl
mov
or
outsl
js
fnsave
sti
ljmp
sbb
inc
xor
lock
jne
sbb
push
mov
ljmp
decl
shrl
data16
insb
ret
int
cmpl
aam
in
sbb
incl
xor
sub
sbb
pop
mov
dec
mov
jmp
push
mov
mov
mov
shlb
ljmp
pop
test
push
mov
nop
cmp
lcall
pusha
fstl
popa
adc
sub
int
ljmp
sub
or
add
push
movsb
ljmp
jg
dec
adc
test
jo
push
sbb
or
pop
ss
aad
dec
js
inc
dec
dec
push
mov
mov
and
jecxz
bound
popf
fdivr
jg
push
mov
push
add
rorb
cmpsb
inc
sub
loopne
inc
and
test
daa
pop
inc
divl
jnp
call
dec
mov
int3
jo
call
sbb
stos
push
jne
sub
jns
jae
and
inc
bound
pop
xchg
add
jne
out
ds
cmc
xor
ljmp
stos
fisubs
shl
jns
addr16
inc
rorb
aam
sbb
insl
mov
pushl
iret
adcb
out
int
xchg
cmp
inc
or
insb
jnp
mov
mov
loope
leave
adc
decb
jge
push
cmc
sub
inc
faddp
ja
cmp
stos
fstl
push
daa
fisubs
push
insb
jae
sub
jmp
dec
lds
in
dec
in
hlt
fbld
adc
ja
repz
scas
inc
jmp
in
call
sbb
push
mov
imulb
das
push
sbb
out
lods
dec
addr16
ljmp
sub
jo
mov
or
dec
fimull
push
iret
aas
xchg
je
pop
addr16
sbb
cld
out
clc
add
sti
loop
push
pop
add
xchg
lods
inc
cmp
adc
scas
push
push
enter
fisttpl
iret
pop
bound
rcrl
rclb
test
lcall
or
sub
cmp
pop
or
dec
inc
xlat
push
jae
std
xchg
ret
addr16
push
pop
les
xlat
ret
call
adc
outsb
add
pop
and
iret
aam
or
jmp
jecxz
mov
aas
pop
xchg
mov
sbb
outsb
call
mov
in
mov
push
mov
push
popa
mov
fwait
xor
movsl
cmp
push
outsl
clc
jg
xchg
cltd
ret
cld
int3
dec
push
pop
inc
push
repz
inc
jnp
aam
out
jno
xlat
ds
pop
pop
sti
xor
stos
push
inc
push
repz
popa
push
jo
cltd
jne
pop
out
pushf
jg
xchg
gs
fstpl
add
clc
das
mov
inc
pop
sbb
push
jo
xchg
sbb
ljmp
test
fnstenv
repz
mov
stos
les
std
lea
repnz
cltd
and
dec
sub
xor
pushf
mov
incl
mov
cmc
sbb
mov
xchg
cltd
xchg
pop
idivb
jmp
inc
fcomip
in
cmp
stc
adc
imul
cmp
nop
push
and
and
ljmp
adc
push
btr
dec
or
je
shll
popa
sub
cmp
jg
mov
jmp
stos
cli
sahf
jbe
add
lods
cs
ljmp
lcall
das
out
xchg
inc
in
mov
mov
pop
inc
push
bound
cld
inc
xchg
insb
fsubrs
in
or
mov
iret
inc
mov
push
pop
adc
jg
call
adc
fidivrs
push
test
inc
sbb
addr16
test
pushl
xchg
adc
push
sub
lahf
mov
popf
mov
lahf
xchg
mov
mov
idivb
outsl
sub
cmpsb
pop
inc
lahf
push
jg
loop
cmp
push
push
shll
scas
jmp
jp
dec
pop
imul
scas
inc
xor
mov
ret
and
push
dec
add
call
pusha
imul
pop
xchg
jmp
cld
mov
pushf
iret
push
inc
mov
xor
xchg
lock
push
sub
sbb
push
mov
sbb
fistpl
mov
pop
cmpsb
xor
xor
pop
pop
lahf
mov
xor
outsb
cmpsl
jmp
sub
call
mov
test
mov
ds
ret
sbb
lods
mull
decl
mov
leave
shr
mov
or
push
addb
cwtl
mov
stos
xchg
addr16
pop
jle
int
mov
shll
xlat
pop
mov
int
test
pushl
mov
mov
sbb
xor
mov
sarl
cs
ss
inc
ja
mov
mov
sar
mov
pushl
inc
xor
lea
aam
imul
add
mov
jle
fwait
and
and
incl
mov
scas
inc
jb
cld
insl
dec
inc
sbb
lcall
aas
cwtl
jne
dec
outsl
and
cltd
data16
inc
cltd
mov
clc
fdivr
aaa
std
ljmp
flds
cmc
mov
out
aaa
cltd
add
dec
adc
fnstsw
stos
or
cltd
out
cltd
out
cmpsb
sbb
dec
mov
pushl
out
jle
fnstsw
sub
popa
hlt
mov
rep
jg
adc
ret
jmp
xchg
insb
or
cmp
popf
popl
lock
mov
or
jg
les
mov
push
lret
js
lds
pop
popf
jge
out
aam
aam
decl
inc
and
icebp
mov
xchg
push
fcomip
pop
pop
scas
stc
rcll
call
addb
pushf
loopne
mov
shl
enter
cmp
cmc
dec
cmp
mov
scas
jne
shlb
xchg
adc
mov
cmp
test
out
add
mov
ljmp
jno
das
sti
mov
push
or
call
pop
xchg
add
pop
sub
sbb
cmpsl
in
adc
call
dec
push
or
fisubs
push
dec
aam
jecxz
sbb
arpl
dec
gs
lret
negl
ljmp
sub
cmp
pusha
xchg
xchg
fwait
jbe
je
xor
cwtl
push
and
in
pop
mov
incl
jmp
xor
dec
shr
cmp
rcl
imul
movsl
outsl
fisubl
sub
sub
inc
pushl
shlb
or
cmp
stc
leave
xor
fsub
lahf
ret
pushl
mov
pop
mov
pushl
jmp
xor
mov
xchg
xchg
dec
aad
fldt
dec
rcr
add
sahf
insb
sti
loop
insb
jp
les
xchg
jg
shl
adc
andl
jecxz
icebp
mov
ja
sbb
push
mov
int3
decl
mov
call
scas
jl
mov
xchg
xor
daa
pushl
iret
cmp
call
out
or
add
aas
jmp
xchg
adc
test
lcall
pushl
ds
ret
aaa
xor
jo
dec
addl
cmp
jmp
iret
cltd
dec
xlat
mov
add
loopne
or
jmp
or
mov
push
or
pushl
sub
into
dec
sub
mov
pop
jl
decl
push
loopne
popf
popf
cmp
add
xor
xor
adc
scas
sbb
add
outsl
aad
rcrl
incb
xor
inc
inc
jbe
call
stos
clc
xor
aam
jo
lock
jnp
push
in
je
xchg
movsb
ja
add
mov
mov
sub
adc
insl
jmp
ljmp
outsl
icebp
lcall
jmp
xlat
jmp
call
xchg
mov
jbe
mov
sbbb
pop
lcall
cmp
rol
push
inc
or
aam
mov
iret
or
lods
loope
jmp
mov
movsl
test
in
mov
ljmp
popf
dec
enter
xor
add
sbb
jns
mov
js
enter
inc
shrb
ljmp
sub
fldcw
adc
call
call
mov
sub
dec
mov
push
icebp
loopne
sub
outsb
inc
les
pop
push
xchg
xchg
cltd
test
sub
xchg
sar
ljmp
aad
mov
push
repz
dec
fmull
lods
imul
mov
insb
mov
jg
icebp
test
lods
out
jae
ja
mov
sub
out
add
and
add
popa
fidivl
decl
adc
mov
sbb
sbb
and
aaa
add
fbld
mov
repnz
xchg
xchg
fcomps
mov
scas
xchg
jge
cs
orb
add
cmp
lods
lods
sbb
incl
inc
push
mov
fcompl
xchg
nop
mov
sarb
sar
mov
shlb
add
push
jb
adc
mov
rcrb
lret
lock
sbb
mov
lds
mov
adc
jl
hlt
pusha
inc
ret
xor
add
pop
xor
decl
int3
xchg
push
xchg
xor
jns
jge
adc
dec
sbb
scas
out
nop
mov
les
jno
mov
pusha
add
fidivrl
cltd
lea
rorl
ljmp
fsubs
orb
jmp
aad
inc
ja
loopne
push
push
enter
ljmp
pushl
fmul
std
xlat
lea
daa
jmp
push
cmp
cmp
push
inc
add
sbb
mull
idiv
jmp
cs
mov
fucomip
push
sub
pusha
sbb
adc
out
dec
jg
xor
clc
decl
lock
mov
fnstsw
push
cmp
popa
xchg
ljmp
outsb
loop
stos
test
mov
sahf
jno
mov
mov
push
dec
ljmp
push
xor
cmp
pop
mov
inc
fcomip
incl
test
adc
fwait
outsb
cmp
testb
adc
bound
inc
ffreep
xor
fwait
sahf
aam
cmp
shrl
or
xlat
fcomip
out
out
mov
sub
lret
fsubr
stos
jo
insl
pop
ljmp
jmp
movaps
and
movsl
adc
or
movsb
mov
adcb
sbb
cmpsb
lock
repz
mov
lods
in
add
cli
mov
sar
addr16
mov
mov
jb
pop
lods
or
es
out
test
mov
mov
das
dec
push
cmp
cmp
cld
jns
test
fcoml
cmpsb
or
xor
sbb
mov
xlat
add
call
punpcklbw
in
inc
stc
dec
leave
and
repnz
addl
xor
jmp
cmpsb
out
or
lods
fwait
aas
incl
sub
fimuls
sbb
sbb
popa
adc
or
mov
in
cmp
loope
mov
aaa
xchg
jno
js
xorl
cmc
sbb
and
fnsave
sub
aaa
ja
or
or
enter
movsl
jne
scas
sahf
in
call
mov
mov
lret
loopne
pop
lock
or
push
imul
add
sbb
test
dec
cli
push
pop
ja
push
ficompl
cmp
and
pop
cs
movsl
incl
clc
sti
adc
push
stos
pop
mov
lcall
icebp
pop
or
fwait
psrld
fstpl
or
cs
mov
ds
or
lds
mov
lcall
sarl
std
pop
into
mov
jecxz
push
fwait
mov
fisttpll
or
decl
mov
jle
cmp
out
jnp
or
or
clc
pusha
and
incl
imul
dec
jne
ds
inc
pushf
mov
pop
imul
pusha
ret
xchg
xchg
loopne
std
cld
lcall
push
push
idivb
in
push
cmp
inc
lret
mov
shll
test
scas
cli
sbb
call
shlb
push
jbe
lcall
js
insl
aad
xchg
movl
dec
neg
fistpl
incl
inc
cmpsb
call
dec
adc
or
jl
xchg
pusha
mov
lods
cmp
dec
int3
daa
jns
lcall
fisubrs
repz
test
and
adc
adc
mov
jl
hlt
mov
decl
sub
insb
shrl
rcrl
xor
xor
jp
pushf
push
pushl
int
mov
call
in
mov
push
or
jg
aad
sbb
into
jl
mov
jo
stc
pop
inc
ljmp
fnstcw
scas
decl
aas
pop
es
mov
pushf
jecxz
add
call
sahf
cwtl
cmc
push
sbb
lcall
sti
pop
mov
jnp
inc
mov
fdivrs
shll
xchg
push
std
pushl
push
mov
mov
push
sub
cmp
lods
and
lcall
push
mov
or
dec
inc
dec
jbe
jmp
insb
xor
and
decl
ja
out
or
mov
push
lea
fcmovnbe
lock
call
rorb
repnz
aaa
xchg
push
imul
dec
loopne
mov
fcmovnu
jg
mov
cmp
cld
or
aas
cmpsl
mov
lret
add
lds
imul
mov
adc
xlat
inc
cli
mov
ljmp
daa
scas
adc
pushf
adc
popa
repz
mov
cli
push
int3
and
mov
sub
lcall
sbb
adc
hlt
or
mov
rcll
mov
sti
decl
push
inc
jl
mov
dec
jns
jns
fisubrs
js
xchg
decl
mov
mov
sub
inc
icebp
fsubrl
lods
pop
ljmp
add
jp
push
scas
jne
aam
push
sub
iret
xchg
cmp
jmp
ljmp
stc
or
xchg
lret
sub
cli
jmp
xor
xchg
incl
inc
cmpb
leave
aas
dec
rorb
imul
jbe
pop
push
ljmp
jge
call
and
push
cld
sarl
jne
iret
imul
push
popa
incl
pushl
dec
push
test
sbb
int
mov
push
stos
cltd
fcoml
add
inc
sbb
fdivs
addr16
pop
push
mov
mov
fwait
addr16
out
pop
lock
ficoml
sbbl
xchg
nop
add
dec
mov
lcall
int
in
lods
xor
outsb
in
imul
fs
incl
imul
mov
shl
cs
pop
sti
test
loope
cmp
dec
xchg
sar
lcall
aam
dec
rcrl
adc
addl
scas
js
out
nop
mov
cmp
mov
or
dec
je
ret
js
call
std
sub
scas
fadds
cwtl
stc
cmpsb
sub
xor
sbb
mov
mov
jmp
cmp
mov
into
ds
inc
insb
cmp
xchg
jno
ljmp
mov
pushf
sub
std
icebp
cmpsl
in
stos
or
stos
pushf
jmp
mov
fs
out
mov
sbb
movsb
dec
jne
pop
outsb
jle
icebp
pop
ds
xchg
fnstcw
mov
movsb
ljmp
jno
xchg
mov
xor
sarl
pop
adcl
ljmp
lcall
in
jge
test
nop
dec
repnz
iret
js
pushl
stos
rcrl
push
mov
stc
shlb
lahf
and
jle
mov
ljmp
mov
es
test
sbb
pusha
insb
sar
mov
add
int3
popf
pop
lcall
ret
rcrb
pop
lahf
mov
and
cmp
nop
outsb
push
jns
popa
rclb
inc
mov
inc
or
xchg
cmp
push
incl
sbb
xchg
cwtl
inc
xor
xor
add
mov
imull
sbbb
arpl
out
dec
stc
jae
cmp
dec
rol
jle
insb
jl
sub
les
pop
add
scas
cli
incl
or
ss
fstpt
cld
inc
pop
jp
sub
cmc
ljmp
fs
rclb
maxps
aad
adc
mov
ret
push
ss
inc
loop
jg
popf
lds
std
testl
lcall
cmp
jns
and
or
aad
mov
mov
rcl
xchg
cmc
push
sbb
aas
push
lods
add
pop
cmp
je
sti
enter
fs
lcall
xor
aad
pop
fdivl
dec
jp
xor
push
and
xor
aam
rcr
incl
mov
or
add
shlb
shrb
inc
mov
ljmp
jge
movsl
and
cli
xchg
je
nop
pop
mov
clc
pop
clc
imul
cwtl
jp
sub
and
lcall
pushl
fcmove
push
push
mov
and
xchg
mov
pop
dec
mov
call
aaa
pop
aaa
popa
call
jo
xchg
dec
outsb
pushf
jge
inc
cmc
xor
bnd
or
icebp
call
test
out
cmc
xchg
cs
cmp
fistpl
pusha
dec
movsb
ret
fwait
pop
sbb
nop
xlat
lret
je
scas
sub
sbbb
jmp
adc
loope
sahf
dec
stos
pop
es
iret
daa
push
jp
or
sub
mov
cld
lcall
mov
push
pop
xor
rcrb
push
adc
mov
outsl
clc
call
and
jno
add
sbb
leave
stos
xor
adc
fldl2t
xchg
jl
inc
xchg
or
xlat
ficoml
cmp
xor
jmp
xor
clc
add
adcb
inc
or
sub
cmp
jle
ds
and
mov
imul
mov
jp
push
ret
cmp
in
movsb
and
sub
jno
call
inc
sub
jb
xchg
jmp
clc
dec
jle
push
out
iret
xor
leave
cwtl
loopne
test
inc
dec
adc
jbe
mov
or
adc
movsl
cmpsl
and
push
pop
popf
imul
xor
fldt
lods
cmpsl
das
ljmp
sbb
sub
cmpsl
xlat
test
testb
lcall
in
addl
dec
pop
cli
iret
adcl
pushf
pop
pop
ficoml
mov
lcall
or
jae
pop
sbb
xchg
push
jmp
cmc
fwait
decb
sub
push
jae
js
js
push
and
xchg
popa
lods
imul
call
and
sub
dec
sbb
ja
jo
sbb
enter
decb
cld
cmp
pop
or
negl
jae
xchg
popa
inc
cmpsl
jae
aaa
imul
in
loopne
cwtl
rolb
xor
cld
lcall
shll
cmpb
mov
mov
ret
mov
jl
cmp
cmp
xlat
out
xchg
adc
mov
hlt
mov
mov
jmp
cmp
scas
sbb
adc
mov
pop
adc
fs
mov
cmp
ja
inc
nop
dec
lcall
xor
movsb
xchg
mov
repnz
repz
mov
fwait
cs
popf
xor
mov
sahf
clc
push
lea
scas
call
mov
pop
clc
in
syscall
lcall
xchg
push
dec
and
xchg
mov
jns
xor
ret
pushl
mov
push
addr16
sbb
xchg
stos
pop
xlat
imul
mov
adc
incl
sub
in
pop
adc
or
loope
int3
cmp
inc
shl
sbb
cmpsb
call
fldenv
xor
cld
fwait
push
mov
cmp
std
or
add
repnz
ss
shll
lods
and
mov
incl
adc
cs
mov
pop
and
mov
add
and
push
jp
xchg
xchg
clc
add
mov
dec
or
das
aam
adc
push
cmp
popf
jge
cmp
arpl
loope
stos
decb
testl
outsb
pminsw
cmpsb
adc
push
fnstenv
std
incl
movsl
sub
js
jns
lahf
out
stos
scas
loopne
jno
int
inc
cld
jl
dec
icebp
or
dec
pop
test
cmp
mov
push
jns
jae
push
push
call
popa
stos
clc
or
data16
sbb
mov
pop
mov
cmp
nop
adc
addl
andb
mov
push
stc
mov
lret
sbb
in
negl
adc
ljmp
cmp
push
adc
push
xchg
and
push
lea
repz
call
test
lret
inc
roll
mov
dec
outsl
jmp
insb
xor
add
shlb
lcall
movsl
fisttpll
push
push
add
jno,pn
fisubrl
sbb
addr16
fsubrs
int
daa
js
sbb
fimuls
in
jp
xor
xchg
lock
pop
das
ret
mov
add
dec
mov
iret
ss
push
lret
mov
rorb
mov
orb
xchg
icebp
incl
cmc
push
fcoml
jp
mov
cmp
stc
dec
xchg
xor
sbb
dec
in
mov
add
je
scas
cmp
mov
pusha
int
out
xor
imul
inc
std
ljmp
fdivr
clc
add
in
sahf
pushf
sbb
pushl
adc
xchg
aas
out
dec
arpl
rclb
lret
mov
xor
jp
repnz
jle
cmp
adc
stc
fnstsw
shr
pop
mov
push
dec
inc
bound
cwtl
lcall
jp
mov
add
mov
sub
ror
xor
mov
call
and
mov
cmp
add
mov
clc
push
lock
dec
into
mov
mov
ret
push
or
daa
outsb
xchg
xchg
hlt
adc
pop
hlt
jl
lret
decl
scas
insb
add
or
push
or
cltd
scas
pop
inc
xchg
fucomip
daa
out
push
mov
jmp
mov
daa
push
xchg
stos
pop
sbbb
or
inc
fwait
xchg
push
push
mov
out
out
movsb
ljmp
mov
cmpsl
fisttpl
cmp
push
pop
rolb
hlt
lcall
jne
notl
mov
je
xchg
imul
loopne
in
jl
cwtl
sar
pushf
mov
shl
fcoms
ds
jl
push
flds
mov
xor
dec
and
dec
sub
mov
notb
adc
push
sbb
sub
es
inc
dec
mov
jmp
ljmp
stc
mov
ss
sub
fs
push
cmpsb
sti
scas
mov
ja
cmp
add
aaa
push
lods
mov
fsubrl
mov
notb
aaa
jns
push
lcall
leave
push
in
js
adc
popa
pop
dec
lcall
out
xchg
incl
rorb
insb
mov
fwait
inc
out
push
or
mov
data16
std
mov
icebp
inc
jno
fs
cs
in
test
jo
cs
sbb
push
pop
lock
xchg
inc
in
dec
mov
out
dec
movsl
fidivrs
call
xor
outsl
ss
cmp
mov
mov
in
lea
push
jmp
adc
sub
push
pop
in
mov
mov
mov
les
in
jne
call
adc
fidivs
out
fnstsw
lahf
aas
mov
jg
push
xchg
push
and
pop
mov
incl
mov
dec
mov
cmp
adc
push
stos
movsb
sar
jp
out
mov
xchg
dec
and
pop
xor
in
test
jecxz
orl
iret
int
xchg
inc
out
or
xchg
add
jecxz
mov
pop
incl
sub
xchg
pusha
lret
in
jae
cmp
cmp
fwait
jg
outsl
or
sub
push
mov
push
lcall
cli
fildll
jg
addl
xlat
ljmp
fdivrs
dec
jmp
pop
push
jp
mov
stos
inc
and
stos
pop
mov
int3
fldcw
or
jmp
push
loop
scas
test
sbb
bound
insb
mov
pop
jb
push
addr16
jmp
or
adc
mov
loope
sbb
loop
in
xor
cmc
mov
mov
enter
jnp
jnp
cmp
xor
jp
outsl
cmp
jnp
inc
stos
stos
jle
adc
mov
xor
in
xchg
xor
push
std
pushl
enter
jnp
sbb
sahf
or
push
sub
mov
das
incl
sarb
sub
xchg
out
movsb
insl
sbb
outsb
push
test
ss
xchg
push
ljmp
bound
pop
push
or
or
jno
dec
insb
push
imul
shl
pusha
lcall
or
adc
jnp
adcb
and
or
or
pushl
sarl
cmp
push
hlt
aam
sub
inc
out
or
mov
lahf
jecxz
pop
mov
jg
incl
or
push
sbb
add
xchg
mov
xor
decb
fs
jp
jl
std
dec
and
add
dec
mov
lahf
out
sti
pusha
sbb
push
mov
pop
shlb
cwtl
es
mov
mov
test
lcall
push
mov
sbb
mov
outsb
pop
jp
cs
jns
mov
mov
add
and
dec
ss
xor
ja
sbb
aam
js
fidivs
jne
jg
jg
call
add
aaa
dec
adc
sub
jg
mov
mov
jecxz
aas
andb
int3
jbe
push
aas
sbb
call
xchg
int3
icebp
lcall
sub
add
pop
pushl
pop
mov
jne
add
mov
outsl
cmpsb
xchg
cmp
data16
movq
scas
inc
sub
mov
mov
inc
cmp
sahf
mov
adc
push
mov
incl
cld
dec
pop
push
nop
push
js
push
xchg
cmp
mov
ret
pop
iret
push
scas
cli
aas
int
sbb
jbe
cmpxchg
hlt
add
mov
sub
inc
pop
ljmp
push
mov
test
mov
fbld
std
lcall
insb
int3
cmp
int
push
xchg
aam
ret
inc
pushl
mov
pop
inc
int3
pmulhuw
mov
push
push
pop
and
subb
push
jg
imul
je
jb
ror
and
call
xchg
adc
sub
jle
ret
sbb
pop
push
in
clc
sub
and
push
xor
push
dec
cmc
mov
mov
outsb
in
jae
incl
or
cmp
stos
lahf
push
pushf
mov
movsb
outsl
adc
pop
in
daa
xor
call
fidivl
lods
je
repz
test
sbb
or
pop
cmp
cs
lcall
mov
mov
dec
push
mov
repnz
jle
mov
ljmp
lret
fsubr
inc
ret
out
mov
btr
clc
add
in
mov
push
ror
scas
mov
xchg
stc
fcmove
adc
sub
pushl
xor
sbb
imul
push
push
sub
lea
pop
mov
out
or
fwait
call
cld
mov
fwait
push
pushl
jbe
dec
and
fldcw
loopne
sbb
jne
or
jp
inc
cli
jo
test
xor
lock
fs
sar
and
push
push
outsb
mov
xchg
mov
std
sbb
call
xchg
lock
push
add
mov
lcall
push
fcmovu
in
push
aaa
addr16
push
cld
addr16
sub
sarb
ljmp
jl
inc
orb
call
test
shrb
rorb
adc
add
cmpsl
test
clc
inc
nop
ret
testb
lock
xchg
xchg
jecxz
in
mov
mov
pop
jmp
mov
push
mov
add
lret
lods
sbb
xchg
testl
sub
and
adc
inc
lock
fcoms
push
fwait
das
xor
push
arpl
dec
add
jg
cmc
fs
pop
stc
insl
test
or
fwait
cmpl
cmpb
movsb
xchg
scas
xchg
xor
mov
into
mov
jne
push
rorb
inc
and
call
sti
ret
lods
loopne
adc
sbb
jge
and
iret
incl
clc
cld
stc
xor
mov
decl
sbb
lcall
cltd
mov
or
cmp
add
mov
js
jo
and
pushl
inc
fstpt
sbb
fdivs
jo
add
ret
xchg
outsl
cltd
outsl
pop
or
jge
mov
xchg
pusha
clc
push
or
mov
pop
cld
cmpsb
call
push
dec
sub
mov
cmp
pop
fildl
popf
xchg
call
daa
imul
call
ds
ljmp
xor
cli
fs
and
mov
in
sbb
add
call
pusha
sbb
jb
adc
lods
pushf
cs
mov
sub
or
hlt
call
nop
ret
push
mov
mov
and
adc
pop
push
iret
cmc
xchg
mov
pop
mov
ficoml
and
lds
xchg
mov
mov
jmp
cltd
mov
sbb
mov
sbb
dec
mov
iret
cmp
jmp
mov
sbb
mov
stos
adc
sti
sub
mov
call
ss
cltd
push
call
std
outsb
and
shrb
mov
shl
jbe
dec
sbb
jg
sub
scas
cmp
mov
mov
fsubrp
cmp
xchg
sbb
adc
sub
ficompl
test
jmp
cs
lea
gs
jge
push
shrl
add
mov
daa
xor
test
and
dec
or
ljmp
xchg
mov
xor
push
mov
sbb
enter
dec
mov
ja
jne
mov
mov
out
shl
cld
mov
test
mov
cmp
test
leave
repz
mov
sbb
orb
xchg
adc
mov
test
dec
mov
bound
mov
movsb
sub
jg
imul
addl
jp
rclb
cltd
leave
add
mov
cmp
mov
jl
adc
adc
movsb
add
imul
jg
ljmp
les
sub
pop
cld
jle
add
mov
or
fcomps
hlt
push
push
lcall
popf
fucomip
stos
in
fbstp
push
inc
mov
fwait
jmp
incl
fs
shl
cmpsl
insl
adc
imul
andb
jg
test
add
fstl
popf
in
mov
xchg
ljmp
add
adc
mov
call
out
inc
cmpsl
mov
add
sbb
test
mov
stos
jae
jo
add
movsb
call
pushl
stos
mov
fsubs
outsl
sarl
fisttpll
dec
pop
inc
lds
sub
ret
mov
mov
cs
add
push
cmp
negl
sar
call
ror
mov
fsubs
cmp
repnz
enter
push
jp
cs
xchg
lock
addr16
sbb
push
movsl
in
xor
sub
popa
pushf
ljmp
cmp
mov
das
dec
adc
mov
push
jno
mov
stos
xor
lret
or
or
cltd
or
pop
jo
sbb
inc
fisttps
cmp
jg
call
fisubs
dec
sbb
add
xchg
lret
jp
xor
std
push
int3
push
jecxz
inc
jnp
lds
lret
push
fimuls
lods
inc
popa
popf
pop
sbb
push
aad
lcall
pop
fs
pop
mov
fsqrt
aaa
push
xchg
enter
mov
fwait
dec
addr16
insb
call
pushl
mov
repz
pop
cmpsb
pop
and
lret
adc
xor
out
push
push
aaa
clc
pop
pushf
std
inc
mov
xor
or
sub
dec
aaa
or
jmp
sbb
ljmp
aaa
call
push
xchg
sahf
loop
mov
ds
fiadds
cmp
std
incl
mov
dec
mov
hlt
jne
or
sbb
pop
sbb
and
mov
and
add
or
cmp
lahf
enter
fcom
mov
lret
sti
mov
and
ljmp
jge
mov
fldenv
scas
ljmp
pop
pusha
pop
jb
pushaw
mov
mov
test
mov
cltd
xor
sbb
fwait
incl
pop
jecxz
lea
dec
adc
js
fdivs
mull
xor
incl
into
gs
mov
pop
adc
stc
jge
xchg
iret
or
lock
pop
jo
mov
clc
cmp
or
loopne
fwait
mov
or
pop
adc
pop
mov
imul
adc
push
std
out
and
leave
jecxz
add
push
xchg
adc
sub
stos
xor
push
cmpsb
ljmp
dec
movb
in
jg
iret
pop
shr
adc
stc
jecxz
jle
popa
stos
cltd
mov
decl
jns
jg
cmc
add
aad
xchg
push
inc
pop
xchg
mov
xor
mov
call
arpl
in
icebp
mov
jae
sbb
in
sub
jecxz
xor
jbe
rcll
add
jmp
push
ss
pop
pop
cmp
aas
xor
pop
sub
in
lods
mov
aas
lret
jmp
jb
loope
je
outsl
mov
jmp
sbb
bound
mov
call
ss
test
jnp
repnz
movsl
mov
fisttpll
loope
mov
lcall
dec
sbb
jecxz
xlat
cld
push
adc
mov
jmp
out
add
mov
fisubs
sbb
pop
inc
cwtl
sahf
pop
test
cmpsl
sahf
popf
and
insl
in
mov
or
jnp
call
mov
insl
movsl
lcall
cld
cmpsl
ljmp
out
loopne
push
push
vucomisd
aaa
and
sarb
inc
sbb
jno
movsl
imulb
scas
inc
push
decl
inc
sub
lcall
fs
sahf
inc
push
mov
loope
inc
mov
lcall
mov
clc
dec
mov
enter
ljmp
and
or
leave
pop
rcr
dec
stos
sbb
push
dec
push
dec
incl
or
aaa
and
cmc
lret
push
and
gs
loop
add
xchg
pop
loope
xchg
push
mov
lcall
pop
pop
push
sarb
out
cmp
jge
push
das
std
push
fildl
and
jne
es
sub
leave
cld
push
jl
mov
dec
imul
rorb
out
fnstsw
fcomi
test
add
call
pop
test
lods
addl
and
mov
dec
sbb
pushf
cmpsl
jg
cld
pop
dec
and
iret
adc
xor
loope
or
sub
or
pop
insb
cmp
bound
cmpb
int3
cltd
in
add
filds
arpl
bound
jns
mov
xor
test
out
mov
movsl
int
mov
out
add
incl
leave
xlat
faddp
xlat
loop
jecxz
pop
clc
inc
shll
stos
mov
mov
xchg
add
dec
jb
inc
mov
pop
and
lcall
int3
bound
dec
ljmp
sbb
inc
popf
js
loopne
mov
decl
sub
insb
jns
cmp
jne
pop
dec
push
orl
add
loope
enter
clc
out
push
arpl
dec
cmc
adc
jbe
dec
mov
sub
jg
popf
adc
sub
sbb
push
xchg
mov
adc
and
jo
filds
sbb
lcall
sbb
add
jp
pushl
divb
push
mov
test
mov
pop
movsb
cmp
mov
and
stos
in
repz
jne
data16
aaa
imul
mov
jle
lret
adc
pop
rcll
std
sbb
int
test
mulb
fsubrl
mov
jmp
sbb
shlb
add
jecxz
inc
in
pop
mov
jmp
jb
pop
lods
ja
std
cli
aas
js
arpl
push
stc
dec
sarb
call
mov
xchg
pop
mov
pop
out
jmp
ret
jne
mov
fiaddl
pop
test
cmp
mov
dec
pop
hlt
ljmp
andl
push
mov
mov
outsb
enter
push
jge
jmp
loopne
lock
leave
nop
mov
push
add
jb
xor
mov
cltd
pushl
jge
mov
enter
stos
mov
adc
lea
or
jg
jmp
dec
ss
mov
xor
sub
sub
cmc
jne
push
xchg
sub
sub
or
mov
xchg
lods
aaa
add
lcall
les
scas
mov
stos
movsb
mov
pop
xor
sbb
adc
sub
cmc
lcall
shrb
pop
pop
mov
fdivrp
push
sub
mov
or
add
bnd
lret
stos
adc
pop
xchg
add
add
stos
push
add
js
incl
iret
jmp
rorb
jecxz
cli
ds
push
inc
cmp
or
sbb
xor
lret
sbb
scas
fisubs
mov
dec
and
xor
je
call
cld
pushl
cmpsb
aam
push
sub
repz
mov
popa
stos
sbb
adc
pop
mov
decl
add
addr16
vpsubw
pop
sbb
insl
int
add
stos
cmpsl
cmpsb
mov
decb
pop
jb
lcall
test
std
test
pop
pop
lret
add
push
mov
push
incl
lods
call
aam
aas
andnps
cmc
gs
sbb
dec
mov
xor
jmp
dec
xchg
outsl
jno
jne
push
inc
div
inc
sbb
popa
sti
jnp
out
je
leave
bound
clc
dec
mov
std
fmull
cwtl
js
test
xor
xchg
test
aam
into
cmpsl
jb
dec
lcall
call
mov
pop
sub
cmp
stos
add
imul
repnz
dec
fisubrs
sub
jl
sbb
stos
xor
pushf
mov
pop
hlt
pop
mov
lcall
mov
push
mov
test
sub
pop
mov
in
xchg
cmp
dec
mov
cmp
in
stos
pop
sti
arpl
xlat
jno
cld
jo
nop
pop
insl
jno
subl
push
sub
aam
adc
sbb
xor
pop
ss
sbb
xor
enter
or
jg
and
call
repz
jg
fistpll
pop
jl
hlt
inc
sub
push
faddp
jle
xchg
cs
mov
leave
mov
xchg
call
aad
sub
imul
or
mov
cmc
cmp
fldl
push
ja
jmp
pop
icebp
daa
adc
mov
sti
push
stos
shl
pop
sbb
mov
fimull
adc
adc
iret
nop
add
icebp
push
call
pushf
cltd
xchg
mov
xchg
xchg
pushf
pop
lret
xor
sbb
cs
jp
or
mov
or
sbb
pop
imull
stos
pop
lods
xor
mov
mov
scas
scas
mov
add
decl
adc
lahf
xchg
push
fildl
bnd
inc
out
jp
fistps
inc
and
add
jmp
xchg
stos
dec
outsl
sbb
inc
jmp
lcall
mov
mov
jmp
ficompl
xchg
cmp
add
push
test
insl
or
adc
xchg
lcall
or
stos
pop
mov
popf
std
dec
rol
movb
loopne
fisubrl
sub
add
push
arpl
add
popf
xor
decl
pusha
add
loope
test
aad
cmp
pushl
xor
dec
sbb
mov
jl
pop
mov
sub
cmp
lcall
mov
mov
test
xchg
fstpt
jg
mov
pop
adc
mov
pushf
jmp
icebp
pop
in
pop
insl
ret
out
dec
fistps
insl
mov
adc
adc
pop
outsl
dec
cmpsl
push
dec
dec
jae
adc
bound
add
mov
xlat
leave
push
mov
dec
repnz
push
ds
lret
lea
ds
mov
ljmp
cli
jns
jge
scas
dec
sub
push
pushl
lods
sbb
rcll
clc
outsb
inc
jo
out
mov
sti
cmp
popa
inc
rorl
mov
xchg
mov
mov
jmp
inc
in
test
mov
mov
jecxz
jge
jge
dec
test
cmp
fs
outsl
and
call
loopne
fdivr
js
pop
xlat
jns
jbe
mov
xchg
cli
and
dec
in
into
fldenv
repnz
in
es
adc
das
mov
ljmp
mov
repnz
and
sub
ret
std
decb
enter
mov
cld
out
mov
jl
inc
add
scas
stos
fistpll
or
inc
and
push
test
inc
push
lcall
xchg
lods
int3
mov
cltd
and
cmp
fistpl
add
add
mov
fdivrl
cmpsl
dec
push
call
pop
add
mov
pop
das
xchg
xor
sub
pop
sbb
jg
mov
add
and
push
cltd
and
cmp
mov
movsl
and
xor
decl
push
movsb
inc
outsb
stos
xor
adc
xorl
in
js
adc
mov
ljmp
and
pop
inc
shll
add
es
xchg
jg
dec
sar
jmp
xor
sbb
cmp
int3
jmp
lret
sbb
pop
in
jle
xor
cmc
mov
inc
mov
mov
stc
bswap
ljmp
cmp
push
sbb
jb
pop
repnz
pushl
pop
lods
cmp
pop
in
mov
xchg
jb
xchg
xchg
inc
mov
decl
jbe
xor
jne
and
or
es
inc
nop
jb
adc
or
fdiv
aaa
cld
cli
incl
dec
xor
mov
lods
inc
cmp
sub
negl
inc
cmp
aam
pushf
iret
hlt
dec
jb
pop
xchg
sahf
sub
sarb
sub
pop
lods
cmp
jmp
pop
cmpsl
push
inc
lds
dec
inc
jmp
in
sub
inc
xlat
das
cmp
fistps
lcall
add
cli
test
add
inc
or
add
clc
ljmp
jo
mov
mov
ljmp
data16
popf
outsb
add
int
cmp
pushf
les
push
xor
push
cli
gs
mov
cmp
sub
xor
cmp
cmp
push
jae
jge
mov
inc
adc
sarl
insb
and
push
dec
shrl
insb
pop
xchg
outsl
cli
lcall
push
test
fcompl
adc
test
in
add
and
ficoml
rcrb
movsl
dec
mov
fs
xchg
into
cmp
mov
mov
sub
je
xchg
aas
or
arpl
pop
mov
sub
pushl
add
push
ss
in
inc
lods
inc
add
mov
cwtl
fadd
data16
jecxz
mov
test
or
shl
fwait
ret
in
sub
inc
incb
xchg
scas
jnp
and
repnz
imul
lret
ss
sti
dec
dec
daa
inc
arpl
fdivp
clc
push
cmp
ja
scas
incl
jg
sarb
in
dec
push
scas
incb
sub
jg
decl
test
cmpsb
aad
xchg
pop
jmp
push
mov
outsb
jne
insl
arpl
leave
decl
mov
add
std
push
les
and
cmp
loopne
dec
fisubl
mov
call
or
cmpsb
add
dec
jl
add
jg
decl
repz
sub
push
cli
and
cltd
mov
scas
cmp
lret
push
call
mov
lods
fs
mov
mov
fildll
cmp
sub
lret
sub
push
rorb
lcall
add
cmp
xor
or
lahf
xor
cld
add
clc
pop
dec
and
jae
cmp
jns
mov
cmp
repnz
jmp
mov
movsb
negl
das
clc
xor
pop
data16
lods
shrl
out
in
or
fnsave
ds
jne
push
dec
dec
in
dec
fnstcw
xlat
add
push
mov
mov
pop
inc
pushl
sti
pop
adc
lods
icebp
insb
cmp
and
mov
scas
push
cmpsb
test
call
in
mov
rep
push
gs
add
pushf
add
fdivrl
push
and
mov
das
add
fistpll
fisubrs
aas
xor
insb
mov
repz
inc
push
pop
mov
pop
jo
xlat
add
rclb
ljmp
and
inc
into
push
lea
jecxz
lcall
mov
dec
mov
inc
pop
push
push
repnz
loope
mov
cld
sbb
decl
dec
pmulhw
psrad
mov
cmp
mov
add
fpatan
or
sub
push
fimuls
xor
cmp
divb
push
mov
test
jmp
movsl
sahf
pop
xchg
cld
cltd
in
jmp
icebp
ljmp
repz
xchg
pushf
ficompl
incl
dec
test
jbe
pop
sub
incb
inc
mov
call
sti
mov
das
imul
jbe
and
dec
and
mov
mov
mov
int3
xor
sbb
jno
mov
insl
jl
xchg
call
std
es
xor
in
ss
sbb
adc
mov
repz
pop
mov
sub
lcall
xchg
jg
or
shll
cmpsl
adc
jo
sbb
sub
pushl
lock
pushf
sbbl
mov
jns
outsl
in
repnz
sub
ret
div
stos
pushl
cmp
pop
out
cs
cmc
popa
jns
inc
stos
or
test
push
cs
incl
xor
mov
fwait
sub
xchg
shrb
out
idiv
mov
dec
fdivr
push
stc
inc
bound
lcall
rcll
insb
mov
scas
mov
scas
aas
enter
xchg
xor
and
xor
scas
int3
lcall
push
inc
aaa
outsb
sbb
insb
dec
ja
dec
sub
lcall
ret
ss
inc
dec
subl
enter
lods
jnp
jecxz
ljmp
mov
mov
jg
lods
mov
jge
out
jle
ljmp
cmp
mov
loop
mov
cld
mov
pusha
jbe
pop
fisubl
stos
jg
lret
repnz
loopne
decl
lcall
mov
xor
mov
sub
movsb
call
mov
push
xor
cmp
xchg
mov
pop
lcall
mov
arpl
sbb
mov
xlat
dec
inc
lret
jl
cld
mov
mov
fs
pushl
out
arpl
add
cmpb
std
xor
mov
mov
pusha
xchg
jmp
push
mov
out
adc
and
mov
sbb
mov
pushl
stos
movsb
lret
ffreep
push
jo
xchg
push
xor
push
sub
fdivs
movsb
outsl
incl
sbb
mov
lock
sarl
arpl
ljmp
lret
out
stos
mov
xor
call
or
sub
push
cmp
pop
mov
jb
mov
in
add
add
ss
jmp
mov
int3
cs
xlat
ss
xchg
mov
mov
das
clc
decl
pop
pop
in
sbb
jmp
sahf
fdivrl
sbb
lods
iret
incl
aam
push
jg
std
stos
test
pop
xchg
insl
in
dec
aam
mov
aas
mov
pop
sbb
test
mov
mov
loopne
xchg
pop
inc
mov
decl
clc
mov
int3
fildl
lock
bound
movsl
leave
hlt
sub
pop
adc
imul
jl
xor
rorl
push
or
dec
push
int
push
sahf
xchg
pushf
xchg
movsl
mov
mov
xchg
lds
xor
xor
lds
lcall
test
sarl
ljmp
mov
lds
dec
mov
lea
std
loop
sbb
sbb
mov
push
loope
add
push
sub
xchg
movsb
push
and
ljmp
sbb
popf
jae
xor
sbb
push
sub
ja
fwait
inc
imul
ljmp
scas
in
pop
sbbb
mov
fcoml
sub
incb
adc
lock
pushl
enter
arpl
outsl
imul
pop
jb
test
pop
lea
or
mov
jl
cmp
ljmp
outsl
mov
psubw
call
std
dec
lcall
jecxz
sbb
dec
test
xorl
das
clc
push
or
add
push
orl
cmc
insl
pushl
insb
in
aaa
cmp
arpl
push
icebp
outsb
pop
jle
or
rorb
fwait
out
inc
in
fs
out
lock
ljmp
fldcw
pop
mov
xchg
das
jmp
lea
pushl
mov
out
mov
insl
push
lcall
jg
out
lcall
shrb
hlt
adc
decl
std
inc
push
dec
add
pop
inc
aaa
adc
pop
notl
pop
or
cmp
mov
cmp
rclb
lcall
ret
push
into
mov
out
xchg
push
call
or
inc
mov
and
lock
decl
jg
adc
sti
call
push
repz
gs
mov
rcr
enter
ret
xor
mov
jbe
enter
mov
sbb
add
into
nop
in
xor
lea
stc
mov
aam
fwait
adc
dec
lcall
push
mov
call
add
and
push
aaa
stc
in
xchg
in
fwait
mov
in
inc
icebp
dec
shr
pop
lds
or
inc
mov
mov
cmp
imul
and
cs
loop
xlat
stc
mov
cmp
invd
addb
jle
mov
lcall
or
sbb
adc
insb
add
inc
cmp
testl
lock
cmpb
gs
loop
jmp
or
pop
add
fnsave
fisubs
add
sbbl
out
add
into
cmc
mov
push
test
xor
aas
adc
fcomip
les
fsubrs
pop
xchg
aas
inc
icebp
pop
jg
into
andb
jne
das
cmp
jmp
push
aam
and
add
stc
cmp
and
inc
lods
ja
xchg
pop
pop
out
aam
sti
sub
push
mov
pop
add
pop
mov
and
imul
andb
cmp
pop
cmp
jg
sbb
dec
popa
adc
movsb
cmp
mov
stc
movups
add
inc
decl
in
inc
cmp
in
and
subl
and
push
pop
xchg
push
pop
cmp
incl
int3
and
das
shlb
sbb
cwtl
shlb
push
sbb
pop
and
test
inc
mov
cli
scas
repz
cmp
sub
popa
ljmp
test
jl
and
push
push
out
pop
xchg
jg
mov
divb
jne
insb
lahf
imul
jmp
xorl
fcmovnu
les
ret
fists
push
dec
stc
test
inc
das
mov
and
push
cmp
mov
test
add
pop
loope
or
mov
test
sub
sbb
lea
jge
or
jg
stc
adc
jb
cmc
push
out
mov
mov
and
jns
cld
out
sbb
jp
mov
es
sub
xchg
leave
sbb
xchg
in
out
inc
fnclex
xchg
mov
jp
xor
jne
sar
loop
decl
les
xor
push
mov
popa
adc
cmp
insb
jmp
clc
incl
cli
mov
mov
repnz
ret
and
call
sbb
fiadds
mov
pop
out
and
loopne
pushl
inc
xorl
out
cmp
outsl
fsubrs
repz
cmp
mov
into
test
outsb
in
xchg
inc
pop
mov
and
incl
test
jns
add
test
cmp
jg
scas
pop
xorb
mov
imul
pop
inc
stc
cltd
add
incl
lahf
flds
mov
sbbb
sti
push
mov
in
enter
leave
xchg
jp
push
mov
cmpsb
aaa
in
in
adcb
sub
lcall
mov
ljmp
cmpsb
idivl
mul
add
mov
decl
repnz
and
cmp
dec
cli
cmpb
addr16
hlt
decl
aas
cmc
aam
pop
fnstenv
mov
lahf
add
loope
test
and
pop
xor
push
push
inc
fnstsw
aad
sbb
mov
push
cmp
outsl
cmp
fisttpll
sub
add
lcall
rcrl
aaa
out
mov
test
arpl
adc
aad
hlt
sbb
mov
ljmp
clc
call
ja
lret
xchg
xchg
and
ret
mov
sarb
jo
push
repnz
nop
std
push
into
dec
stos
sub
clc
push
pushf
cmpsb
imul
jnp
pop
mov
jmp
xchg
xor
add
aam
jle
push
mov
ficoml
orl
mov
pushl
outsb
push
xchg
lret
arpl
je
lahf
push
lcall
and
cmp
aaa
jmp
inc
lds
pop
push
push
inc
mov
negl
fimull
mov
push
sahf
mov
aam
jmp
pop
and
leave
jmp
xor
insl
rcrb
adc
adc
stos
sub
xlat
test
orl
arpl
mov
push
sbb
out
bound
fsubs
cmpsl
mov
cmp
mov
inc
je
adc
jmp
sahf
or
out
push
test
mov
inc
cmpsl
fcomi
inc
dec
sub
pop
cli
out
out
loop
sub
and
or
jp
sti
out
stos
fildll
sti
sahf
rcl
jl
lcall
add
mov
mov
call
inc
dec
mov
jne
lcall
popf
xor
out
mov
loop
push
or
call
and
pop
add
out
dec
sbb
scas
call
sub
inc
lcall
push
mov
inc
ds
jecxz,pt
lods
fwait
ret
cli
lock
pop
push
xchg
mov
cld
jmp
dec
or
jns
jnp
fnstcw
sahf
lret
aad
jg
xor
and
mov
dec
mov
cmp
lret
insl
push
pop
lods
cmp
subl
dec
inc
add
sub
xor
mov
jle
pop
sub
adc
decl
xor
inc
jmp
xlat
lahf
loop
popa
loopne
sbb
and
in
scas
int3
pop
pop
in
dec
das
mov
jno
call
stos
test
xor
dec
inc
imul
lods
aas
adc
decl
es
test
pop
jnp
or
push
fsub
mov
sbb
jg
iret
lods
xor
int
les
leave
push
mov
jne
push
cmp
aas
enter
lahf
mov
cmpsb
adc
xchg
bound
xchg
out
stos
mov
sub
xor
xchg
mov
notb
stos
test
cmp
cmp
sbb
sar
ljmp
xor
and
popa
cmp
mov
and
xchg
push
pop
int
mov
ja
cld
decl
ss
sbbl
and
adc
aad
xor
sub
daa
mov
out
imul
aas
mov
and
imul
mov
decl
sbb
inc
mov
cmp
jg
sbb
movsl
sub
clc
jae
pushl
bound
orb
in
lock
clc
daa
pop
sbb
scas
xor
decl
or
mov
mov
sbb
cmp
dec
lea
nop
test
pushf
inc
jmp
or
out
sarb
in
jmp
push
and
lock
mov
jg
loope
push
mov
and
mov
inc
aas
notb
lcall
fistl
fbld
dec
in
cmp
lcall
repz
out
out
and
dec
lret
popa
sub
lret
push
lahf
insb
outsb
cmp
jno
cmp
push
push
sbb
ljmp
adc
outsb
or
aas
pop
jmp
xchg
in
inc
push
xorb
inc
movsl
data16
pop
pop
jecxz
rcr
icebp
cmp
inc
or
fs
and
cli
jg
adc
cli
fnstcw
mov
sbb
jecxz
sbb
jo
dec
movsl
jl
mov
test
aad
pop
pusha
pop
cmc
mov
stos
jne
push
add
adc
jmp
or
jnp
aas
fidivrs
dec
das
or
jecxz
jmp
jno
or
add
lret
xchg
fdivr
jg
ljmp
pop
cld
cmp
adc
pop
fisubrl
push
push
cmp
push
and
decb
pop
adc
xor
call
mov
sahf
fbld
jge
mov
push
pop
cmp
orb
add
icebp
pop
cld
sub
xchg
ds
cmpsl
mov
push
in
les
decl
mov
cs
es
xor
data16
test
push
decl
cmc
sbb
mov
das
mov
bndstx
adc
lret
fs
jmp
sub
incb
stos
cmp
out
inc
lds
inc
imul
nop
fdivs
pop
xor
mov
cli
jmp
in
in
mov
rcl
call
jg
push
fs
ret
adc
cli
in
or
adc
inc
push
cltd
dec
aad
repnz
add
test
jne
roll
popf
mov
ljmp
push
in
out
adc
jnp
inc
xor
xchg
in
popa
scas
lcall
nop
mov
pop
lods
sbb
cmp
inc
xor
adc
cmp
sbb
ljmp
mov
lock
xchg
mov
das
sub
jo
lds
enter
cld
sub
sub
popa
in
sbb
add
test
incl
mov
imull
xchg
mov
xor
mov
push
mov
popf
or
inc
es
enter
cld
jne
pusha
scas
push
xlat
lds
sbb
pop
mov
clc
clc
jl
add
sbb
jecxz
jp
decl
dec
sahf
gs
movsb
scas
rolb
leave
icebp
dec
and
insl
dec
push
mov
sbb
incl
lds
imul
mov
inc
addr16
xor
dec
mov
stc
loopne
or
jmp
mov
dec
adc
xchg
jno
jg
fdiv
mov
sub
xchg
adc
jb
push
call
decl
jo
xor
cmp
insl
or
cmp
clc
ds
or
adc
inc
jp
push
pop
insl
scas
pusha
mov
ret
movsb
jno
aam
decl
xor
pop
ljmp
and
inc
push
mov
cmc
std
test
jg
push
sbb
test
sub
jecxz
test
inc
inc
jbe
fucomip
mov
call
mov
or
fildl
fdivs
xchg
push
std
jmp
jmp
pusha
xlat
fs
push
lea
jbe
xchg
jmp
btr
and
push
lahf
and
lcall
cmp
xchg
jecxz
mov
inc
cmp
dec
rorl
adc
ja
jb
lcall
cmp
pop
popf
repz
lret
testl
sub
js
xor
call
pop
jmp
daa
mov
add
sahf
ror
ret
and
xlat
or
mov
rcrl
dec
stc
dec
loop
pusha
nop
mov
das
and
jl
pusha
sub
inc
outsl
ds
or
pop
movsb
cltd
decl
icebp
push
ljmp
das
pushw
pop
cmpsb
inc
mov
in
mov
ljmp
and
push
lods
jb
dec
cltd
inc
sbb
rorl
cmp
lcall
call
out
lock
mov
mov
mov
data16
movsl
pop
pop
dec
pop
outsl
pop
out
jb
in
jp
mov
sbb
frstor
popa
ja
jbe
xor
push
jb
imulb
xchg
push
add
repnz
in
jbe,pt
mov
leave
jae
adc
mov
fisttps
add
sub
dec
jmp
ret
mov
jno
cli
les
in
jae
push
out
pushf
out
bound
pop
es
jmp
sub
mov
js
std
mov
add
dec
sarl
cwtl
cli
call
sbb
xchg
lret
push
ljmp
shl
dec
decl
lods
pop
cli
or
dec
inc
mov
ljmp
xlat
add
cwtl
cmpsb
inc
pop
push
pop
lods
xor
push
lods
int
pop
inc
jmp
test
inc
or
cmp
add
insb
lret
or
ljmp
sub
imul
scas
add
push
out
mov
decl
jae
sar
int3
sbb
call
lcall
xchg
jg
sub
sbb
lcall
mov
sbb
aaa
or
mov
add
add
cmp
pop
add
jp
inc
xchg
std
arpl
or
test
cmpsb
adc
mov
lret
cmp
call
testb
sbb
scas
lods
jp
fimull
movsl
popa
mov
push
ds
callw
les
push
gs
cmp
mov
scas
enter
lret
test
sub
test
in
mov
sti
cli
and
lcall
push
add
fisubl
dec
sub
lods
mov
dec
jne
dec
mov
outsl
mov
sbb
fcomip
ljmp
ret
xchg
outsb
push
scas
adc
xchg
push
sub
cmp
jl
jle
sti
jmp
push
pop
jo
pop
jle
push
inc
xor
mov
push
imul
in
shlb
lcall
adc
sahf
jge
ret
push
mov
arpl
cmp
add
or
cmp
push
cld
add
inc
inc
jo
xor
inc
and
movb
mov
mov
cwtl
iret
cmp
fidivrl
jne
stos
ljmp
fidivs
or
dec
mov
int
les
aas
adc
mov
xchg
arpl
fwait
divl
or
or
or
push
in
xor
cs
mov
loop
aas
add
hlt
rcrb
pusha
js
es
pop
fidivrl
lock
sub
jg
xchg
ljmp
cmp
inc
test
mov
lahf
pushf
lods
dec
int3
cltd
inc
sbb
adc
in
push
and
inc
decl
testb
mov
aam
mov
stc
mov
jg
add
cli
std
pop
fdivl
orl
lcall
and
or
cmp
or
xor
adc
cmpsb
pop
xlat
dec
push
xor
pushl
jne,pt
imul
shlb
repnz
sarb
inc
xchg
inc
or
dec
mov
sbb
bound
cmp
cltd
dec
cli
pushf
mov
int3
add
jne
jg
mov
ljmp
mov
icebp
fincstp
fildll
or
pop
sub
xchg
bound
lds
decl
jbe
popa
jle
jne
inc
xchg
test
mov
sar
aad
mov
insb
and
add
push
enter
pop
xchg
push
sub
ljmp
xchg
cmp
test
xor
cmpsl
lds
xchg
jl
ss
js
repnz
push
outsl
xor
push
mov
jmp
jo
arpl
mov
mov
das
and
push
add
jl
aad
jmp
mov
call
aam
or
jg
std
es
repz
pop
jge
add
addr16
pusha
jmp
inc
hlt
pop
mov
sub
push
sub
or
mov
cwtl
jmp
repnz
inc
sub
popl
inc
pop
mov
aaa
popa
pop
jo
adc
dec
fisttps
pop
sarl
dec
scas
push
pop
pop
clc
js
cmp
aad
pop
mov
stos
call
jg
mov
stos
add
js
rcrl
dec
cmp
int3
inc
pop
cli
or
nop
pushf
inc
or
dec
sarl
outsl
fiadds
cmpl
hlt
xchg
dec
mov
inc
mov
mov
cmp
cmp
sbb
cmp
ljmp
add
popa
jecxz
pop
pushl
shlb
xchg
mov
xchg
aas
gs
mov
lret
in
mov
xor
lcall
hlt
call
cmp
aad
mov
fs
adc
ja
push
lcall
movsb
ret
shr
mov
int3
and
icebp
addr16
inc
icebp
mov
mov
ljmp
adc
sbb
out
nop
xor
insb
scas
leave
mov
lcall
adc
jnp
in
adc
or
xlat
push
in
cmc
bound
sbb
scas
arpl
rorl
cmp
gs
and
vmovd
stc
jmp
stos
jne
xchg
repnz
int3
imul
dec
push
xchg
lahf
dec
arpl
test
jno
idiv
incl
and
add
lea
pop
outsl
addb
ss
inc
inc
in
and
push
cmp
add
mov
loop
mov
jbe
call
cmp
add
ret
xchg
lret
push
sbb
xlat
cld
mov
jle
mov
push
xchg
nop
mov
xor
andb
mov
mov
into
es
adc
cs
dec
fldt
insl
cmp
xchg
jb
mov
out
inc
sbb
call
and
addr16
fisubrl
pushf
pushf
lea
movl
stc
out
dec
push
pop
ret
inc
das
and
pop
out
lret
or
cmp
mov
adc
xlat
dec
mov
push
pop
loope
inc
push
pop
jl
mov
pushl
mov
inc
dec
mov
std
jno
push
sbb
or
icebp
push
std
pushl
pop
mov
pmaxub
inc
outsb
add
in
cmpsl
add
add
fldt
jo
jb
aas
sbbb
mov
and
jecxz
aaa
adc
call
int
gs
mov
in
das
rcrb
lods
stos
jns
lods
jns
jg
pop
popa
fildl
cld
mov
lcall
mov
int
shrb
aaa
pop
lock
pushl
jp
sbb
inc
out
mov
mov
leave
in
cmpsb
pop
cmp
incl
jmp
repz
add
push
insl
sub
or
enter
decl
clc
lcall
mov
pop
pop
insb
push
roll
mov
decl
xor
aam
push
cmp
in
mov
sbb
inc
pop
inc
inc
fcomi
pop
cmp
sti
lock
jecxz
xor
clc
jmp
inc
pop
test
ja
call
adc
and
repnz
cmp
mov
add
inc
sarb
xor
sub
jb
popa
idivb
int3
into
pushl
adc
jmp
mov
dec
inc
int
mov
sbb
jmp
inc
mov
jle
mov
xor
mov
ficoms
lock
imul
sbb
lcall
pusha
nop
sti
ljmp
testl
subl
call
in
push
push
or
fistps
jo
test
les
or
adc
mov
out
add
stos
mov
cmp
xlat
arpl
call
addr16
pop
jl
incl
in
mov
pop
cwtl
stos
or
test
inc
pop
ljmp
inc
std
call
jmp
insl
pop
mov
arpl
mov
in
and
fisttps
pop
in
out
stc
sbb
clc
movsl
adc
daa
call
pop
pop
mov
mov
lahf
dec
insb
sbb
add
or
incl
pop
or
adc
mov
es
jle
outsl
movsb
mov
dec
call
lret
push
push
ds
mov
and
mov
mov
cwtl
dec
fsubl
popf
xor
je
jns
movl
fwait
cld
adc
inc
ret
jmp
mov
lcall
hlt
repnz
or
pop
jl
std
popa
adc
ret
daa
xchg
pop
vpcmpeqb
lea
fidivrl
fbstp
enter
out
ret
and
cltd
or
xchg
dec
bound
push
test
ljmp
in
insb
inc
movb
bound
xchg
mov
cli
call
xchg
dec
leave
roll
ret
mov
add
cmp
push
scas
mov
ljmp
pop
and
push
sbb
decl
cwtl
es
inc
fnsave
mov
fcmove
popa
mov
inc
inc
pop
lea
mov
dec
out
mov
and
icebp
jl
cmc
fsubr
shll
pushf
rcll
add
call
pushf
fcmovne
sbb
add
xchg
test
decl
xor
in
pushf
pop
iret
or
dec
sti
mov
pop
jbe
push
push
cwtl
rcl
pop
inc
jecxz
pushl
int3
int
adc
stos
mov
enter
adc
lcall
cwtl
pop
adc
add
frstor
and
xor
test
mov
mov
pop
aad
jmp
mov
pop
add
repz
mov
mov
popa
hlt
outsl
push
ret
out
pusha
inc
pop
inc
mov
stc
or
fwait
lods
decl
dec
dec
notb
pop
pop
rcll
adc
mov
iret
push
mov
lods
cmc
inc
into
adc
push
jnp
inc
hlt
andb
or
ljmp
fwait
sub
sbb
pop
nop
or
aad
pushf
lcall
ds
cmp
cmpsb
inc
scas
jae,pt
xor
cmc
lret
lods
dec
cmp
pop
icebp
ljmp
fimuls
jae
cltd
sbb
shl
dec
cwtl
xchg
imul
aad
mov
mov
cmp
push
cld
test
arpl
icebp
sub
cmc
out
add
adc
movsl
lret
mov
mov
jmp
or
cld
es
xchg
insb
dec
pop
inc
xor
push
imul
mov
xor
lahf
pop
jbe
pop
cmp
mov
dec
cltd
ss
rcl
pop
in
and
call
gs
jmp
in
mov
mov
and
cmp
aaa
jmp
movsl
out
or
gs
inc
fsubr
jo
push
mov
addr16
mov
pop
dec
sbb
lcall
mov
jb
stos
mov
xor
pop
addb
xchg
pop
iret
ljmp
xlat
inc
ret
sbb
pop
sti
pop
fstpt
sahf
out
xor
in
dec
cmp
jmp
pop
popa
pop
ss
xor
jo
mov
or
test
inc
pushf
add
arpl
xchg
decl
ficoml
pop
and
lret
push
negb
int3
cmpsl
fadds
std
inc
pop
xchg
push
aas
lcall
jge
cmpsb
sbb
ret
sbb
jge
mov
push
inc
and
call
test
sub
scas
xor
aad
adc
pop
adc
jbe
mov
and
pop
cmp
cmpsb
pushl
cmp
stc
scas
and
pop
push
sahf
xchg
mov
incl
or
cwtl
test
mov
daa
lcall
mov
jmp
xor
mov
inc
dec
mov
xchg
arpl
mov
ljmp
mov
or
les
pop
scas
lret
sbb
inc
xlat
push
adc
push
mov
jmp
lcall
pushf
addr16
ss
pop
fs
lahf
inc
mov
incl
jle
cltd
mov
add
roll
pushf
daa
sub
mov
mov
idiv
mov
cmp
xor
fcmovne
dec
into
das
mov
pop
shrl
lock
push
push
dec
pop
sbb
dec
decb
cwtl
jmp
cmp
jae
xchg
inc
pop
movsb
pop
and
mov
popa
nop
cltd
inc
enter
idivl
jae
ljmp
mov
iret
mov
out
outsl
aam
jo
call
sub
cli
decl
mov
pop
into
add
aaa
mov
inc
xchg
jge
cwtl
mov
popl
aad
sbb
xchg
mov
js
mov
and
sub
call
fldpi
fwait
dec
cmp
mov
pop
jo
sahf
cmp
lds
imulb
push
add
test
mov
call
pop
mov
adc
pushf
imul
popf
sti
nop
loope
lcall
sub
call
cld
incl
int
cli
inc
xlat
les
lds
enter
cmpsb
jmp
mov
and
insl
adc
stos
and
aas
lods
mov
pop
jl
jg
add
dec
fmul
loopne
dec
adc
aam
adc
ret
mov
shlb
call
fildl
ret
sub
shlb
push
jb
aaa
sub
mov
xor
jno
pushl
and
sti
sahf
ret
fisttpl
cmpsl
imul
jmp
or
cwtl
push
sub
mov
mov
add
or
test
fisubrl
shr
mov
inc
push
adc
andps
push
sub
pop
test
xchg
movsl
je
clc
sbb
cmc
lcall
ret
aas
das
xor
push
or
xchg
push
cwtl
movsl
mov
rorb
leave
sar
ljmp
add
or
cmpsb
aam
jo
lret
movsl
out
dec
fstps
jno
mov
lret
sbb
jmp
stos
popf
or
fdivrl
add
in
sub
push
mov
mov
xor
dec
stc
sub
test
mov
cs
filds
pop
mov
ret
sahf
sub
mov
addr16
cld
lcall
push
arpl
xchg
pop
jg
xor
mov
sbb
lea
or
push
es
jge
xchg
loope
sub
push
mov
lods
and
rcrb
dec
mov
sub
push
jg
lcall
adc
out
jg
jmp
pop
and
pop
les
fbld
inc
lahf
mov
pop
xor
sub
and
lret
les
loopne
loope
leave
cmpsl
jl
adc
ljmp
mov
and
push
pusha
cmpsb
iret
in
mov
shrl
inc
orl
and
adc
mov
xlat
fcomip
pop
in
jle
das
fcmovu
rsqrtps
add
mov
or
pop
lret
mov
dec
mov
cmp
je
mov
push
stc
enter
mov
push
aad
inc
roll
push
mov
dec
jno
adc
fcomip
call
add
hlt
addr16
ja
loopne
xchg
sub
iret
faddl
mov
add
and
xor
lock
sub
ljmp
add
and
add
out
hlt
test
xor
or
into
ljmp
sti
or
push
outsb
stc
jle
in
mov
incl
gs
mov
adc
mov
stc
push
mov
ret
xchg
push
pinsrw
cmp
and
negb
dec
sbb
mov
imul
repnz
mov
ljmp
test
cmpsb
and
xchg
test
mov
sub
jno
pop
pop
out
and
std
jle
into
sbb
mov
jl
out
or
mov
dec
push
fcomip
jmp
mov
push
jne
mov
jecxz
adc
nop
outsl
sbb
push
idiv
andb
pop
icebp
decl
dec
aam
mov
ss
mov
cld
incl
push
test
fwait
push
pop
jo
mov
loope
jg
fwait
ror
pop
xchg
ja
cmc
sub
mov
jns
pushf
inc
push
fisttpll
fs
sub
xor
mov
in
cmp
dec
mov
test
out
cld
aam
mov
call
daa
lret
inc
inc
xlat
sbb
sahf
cmp
sbb
cmp
cli
dec
sahf
cld
dec
pushf
sbb
push
decl
cmp
ds
stos
outsl
stc
aam
or
ss
data16
inc
aaa
lock
mov
loopne
arpl
pop
cwtl
lea
orl
call
lods
in
call
cmc
push
or
push
pop
add
inc
inc
mov
stos
lret
mov
std
cmp
inc
sub
push
xor
inc
mov
rclb
fmuls
out
ljmp
ficomps
ret
jp
xchg
sub
movsl
inc
push
into
inc
lcall
inc
mov
add
fcmove
stos
xor
je
std
xor
outsl
add
mov
pop
add
repnz
mov
pushf
pop
pusha
xlat
xchg
ret
mov
stos
repz
jno
push
ljmp
push
push
lret
sbb
or
or
stc
shrb
pushl
out
fimull
mov
push
ficoms
mov
inc
iret
ficoml
call
xchg
mov
ljmp
lret
pop
mov
and
and
jg
inc
mov
arpl
pop
subl
sbb
test
ja
lea
ljmp
das
cmp
push
mov
mov
in
cmp
bswap
and
cmc
pop
lcall
dec
stos
jmp
pop
mov
pop
daa
popa
mov
test
mov
jo
std
sbb
les
mov
mov
cmp
add
mov
fmull
jge
push
sub
aas
fcomps
lcall
push
mov
decb
mov
paddd
pop
push
popf
negb
jbe
fcomip
loope
negl
rorl
loop
jns
and
adc
cmpsb
push
bound
xchg
dec
sub
fidivrs
shr
and
shl
addr16
scas
fistps
jmp
dec
decl
mov
mov
xchg
mov
pop
jb
jmp
push
and
call
pop
adc
cmp
mov
adcl
daa
xchg
cli
jae
les
xchg
in
jae
mov
mov
outsl
mov
fisttps
cmc
fsubr
fiaddl
jg
sbb
jno
xchg
jp
sbb
sarb
add
pushl
adc
jmp
rolb
aad
pop
mov
jmp
repz
cld
test
push
inc
push
icebp
notl
cmpsb
lcall
jmp
and
std
push
pop
dec
stos
fmulp
mov
fdivr
fcomip
nop
jecxz
ja
push
int
add
dec
fcoms
cmp
add
int3
or
inc
ljmp
xchg
ds
mov
clc
gs
popf
adc
adc
lcall
fidivs
lock
lea
xlat
imul
add
jp
or
sbb
mov
cli
push
cmp
sbb
or
pop
xor
mov
or
outsb
jnp
movsl
adc
and
call
or
mov
outsb
mov
xchg
jp
cmpb
scas
outsl
fcom
add
inc
xor
jne
aad
sti
add
in
stos
stos
jle
mov
cmp
incl
mov
mov
test
mov
xchg
sbb
out
cmpsl
popf
fidivs
fcomip
fisubs
test
andb
jg
and
fistpll
inc
ret
or
rolb
add
add
push
xor
pop
dec
ljmp
dec
ja
cltd
mov
int3
in
xor
inc
and
xor
scas
jg
cmc
xlat
aas
repz
int3
lock
mov
daa
inc
sahf
jmp
in
add
outsb
js
cltd
and
incl
sub
cmp
out
sbbb
adc
inc
out
out
add
pushl
rcll
mov
xor
inc
xchg
push
jmp
ja
or
cs
sbbl
push
pushl
ljmp
sbb
jp
adc
pop
dec
adcl
insb
pushf
inc
jae
pop
cmc
inc
lahf
pop
insl
clc
decl
shl
test
dec
mov
xchg
cli
and
das
lret
inc
cmpsl
dec
ljmp
dec
sub
or
stc
ret
xor
call
dec
clc
cmp
stos
xchg
int3
jmp
sarl
ljmp
xor
decl
sbbl
rorl
jnp
jge
in
jo
outsl
sbbl
aad
fidivs
fdivs
inc
lret
mov
outsl
cwtl
sub
jns
mov
insb
pop
jp
jbe
sub
add
pop
xchg
mov
jmp
mov
or
inc
push
repz
bound
in
rol
inc
jae
mov
or
ljmp
sub
push
daa
cmpl
lcall
pop
push
push
test
mov
push
mov
inc
mov
adc
ljmp
sub
add
clc
lcall
xor
rcrb
popf
orb
xchg
jno
mov
out
inc
decl
les
dec
xchg
xchg
pop
lods
cli
inc
lds
lds
std
pushf
mov
call
je
xchg
in
sub
in
in
xchg
push
mov
cwtl
cmp
aaa
std
clc
push
test
dec
xchg
lret
adc
sbb
add
cmp
mov
jmp
mov
andb
test
mov
jge,pn
aam
dec
and
mov
in
inc
out
jmp
push
mov
je
jge
xchg
pop
es
pop
and
mov
sub
push
mov
cs
outsb
lcall
pop
inc
es
loope
xchg
outsl
addr16
jge
mov
aad
test
mov
out
int3
loope
pop
daa
ficoml
call
into
adc
mov
xchg
test
lock
xchg
movsl
push
jecxz
cmp
jg
inc
je
xchg
in
repnz
push
mov
push
andl
scas
movsl
daa
iret
inc
push
xchg
mov
or
setno
fnsave
inc
mov
jg
das
arpl
cltd
add
mov
int3
xchg
ficomps
mov
sub
fdivr
push
cld
pushl
data16
scas
outsl
jecxz
loope
mov
mov
enter
and
ljmp
incl
push
repnz
or
add
cmpsl
cmp
psubusw
dec
or
cmpb
fidivl
push
rcrb
clc
cld
mov
rcrb
mov
insb
or
push
add
sbb
mov
lcall
or
outsl
mov
jge
mov
out
or
lock
xchg
sub
cmp
mov
into
ret
adc
lea
jmp
fisttpl
and
decl
lods
cld
xchg
imul
sbb
xchg
pop
dec
movsl
jp
jle
and
adc
js
stc
or
inc
jbe
into
sub
xlat
pushf
out
xlat
and
xchg
mov
push
pushl
jbe
ficoms
xor
xor
leave
cmp
mov
daa
test
inc
aas
jmp
lds
jg
jo
mov
je
notb
adcb
push
clc
subl
sub
shl
fnstcw
mov
stos
es
jl
xor
push
cmp
cmp
pushl
scas
inc
xchg
xchg
mov
or
clc
std
add
and
mov
and
lcall
out
jle
and
cvtdq2ps
fmull
out
inc
pop
xor
addr16
jo
cmp
mov
xorl
xor
fistpl
icebp
push
adc
lcall
and
inc
insb
pop
loopne
pop
cmp
sub
dec
arpl
sub
jecxz
adc
decl
sti
icebp
roll
push
push
mov
movsb
nop
ss
repnz
in
mov
icebp
andl
mov
or
call
xchg
dec
es
mov
cwtl
js
lahf
dec
aad
mov
incl
mov
dec
sub
dec
xchg
xchg
cs
push
and
jg
lds
inc
mov
ret
mov
sub
fbstp
enter
out
cmc
sub
lahf
mov
and
call
add
cmpsl
sar
cmp
xchg
inc
fcom
ss
out
pop
cmpsb
push
and
les
pop
ficoml
adc
nop
jp
rorl
push
xchg
cld
push
stos
outsl
scas
data16
jmp
and
adc
mov
inc
and
sbb
incl
mov
inc
lahf
insb
mov
jno
int3
leave
mov
push
scas
xchg
pop
call
jmp
pop
shrl
call
ss
dec
ljmp
cmp
sbb
lods
fmull
shlb
inc
or
xchg
mov
inc
clc
xor
ljmp
jbe
sarb
pop
adc
sahf
les
cli
ret
push
mov
das
or
dec
pop
pop
cmp
jmp
stos
and
lods
into
xor
leave
nop
push
sbb
mov
ss
inc
jmp
loope
cmp
pop
mov
scas
push
call
cmp
push
dec
out
rclb
jmp
ss
lret
dec
jmp
ret
in
sbb
inc
cmpsb
adc
inc
popl
mov
cli
jnp
incl
xchg
es
mov
fistpl
outsl
mov
lahf
jp
jp
rol
jg
enter
cmpsl
mov
fbld
std
je
jmp
fwait
jp
mov
mov
add
jne
push
push
bound
fldl
xor
xor
mov
incl
jge
in
mov
daa
push
sbb
mov
cmp
fisubrl
ss
or
cli
xchg
or
lods
jge
clc
push
pushf
inc
xchg
cwtl
and
insb
fcom
sub
jno
pop
decl
dec
sbb
flds
ud2
in
cwtl
jmp
movsb
dec
sub
sub
xchg
or
pop
xchg
push
in
dec
loope
incl
mov
add
ret
stos
leave
xlat
dec
xchg
jo
into
jns
lcall
aam
movsb
mov
pop
xor
data16
xchg
sub
add
add
cmp
fnsave
and
xchg
data16
out
mov
aam
sbb
xchg
and
or
ud0
aas
in
sbb
adc
sti
or
les
cmp
pop
push
jecxz
dec
pop
decb
xchg
add
lahf
call
mov
pop
jmp
dec
jns
jge
mov
jne
jno
into
ss
ljmp
push
fs
dec
cmp
lds
add
jge
lods
repnz
sub
stc
and
jmp
loopne
jns
faddl
jecxz
and
xor
push
aam
sub
fcompl
call
scas
push
pop
enter
dec
jae
icebp
sbbb
mov
jg
add
call
mov
sub
or
icebp
insl
jecxz
insb
and
das
imul
in
cltd
aaa
and
or
dec
cmpsl
pop
fbstp
out
sarb
stc
test
arpl
scas
xor
loop
scas
mov
sub
out
ficompl
mov
pop
push
xchg
ljmp
xchg
ss
out
or
jae
subb
and
push
ljmp
cs
xor
arpl
es
mov
sahf
mov
fs
das
add
es
pushl
testl
jbe
adc
sbbb
push
adc
fmull
push
add
jo
xor
xchg
mov
into
and
push
adc
in
rcrl
repnz
lcall
mov
in
je
or
cmc
into
mov
sti
jmp
xchg
pop
mov
cli
mov
decl
jge
pop
inc
ret
in
lods
sti
loopne
push
insb
and
push
shrl
stos
es
out
clc
jmp
and
mov
mov
mov
mov
add
out
or
decl
loope
jns
imul
pop
and
lds
jnp
fisubrl
xchg
xlat
mov
incl
cmp
fstl
jge
ljmp
jne
jle
jnp
out
pushl
cmc
aad
dec
sbb
xchg
in
popl
or
in
ds
movsl
insl
ret
test
mov
in
push
pop
inc
movsl
sarl
shll
je
lcall
jns
inc
inc
jp
sahf
adc
xorl
daa
test
add
loope
mov
xchg
mov
dec
push
into
arpl
and
sub
mov
adc
divl
jmp
xor
push
or
sahf
inc
fsubrl
push
cmp
mov
push
fistl
clc
lcall
in
push
loop
call
ds
inc
ss
hlt
decl
iret
cmp
cli
or
push
pushf
lock
ds
insb
ffreep
popf
ljmp
jmp
ret
push
ljmp
test
dec
sub
loop
ficomps
test
ret
pop
loop
fcos
jmp
dec
jo
loop
jp
lret
and
aad
loopne
pcmpeqb
jo
ret
lcall
out
daa
push
sbb
nop
nop
fsubrs
dec
push
mov
mov
ds
jg
jmp
mov
outsl
pop
andb
and
insb
sahf
idivb
incl
in
ja
adc
imul
mov
sbb
fidivrs
jbe
mov
incl
xchg
out
mov
sahf
sbb
decl
push
inc
test
lds
imul
out
xchg
push
xchg
push
pop
lcall
push
or
hlt
loopne
jmp
dec
loopne
mov
cmp
shll
jmp
add
inc
jo
aad
call
cmp
ljmp
ret
das
jl
shl
std
call
add
insb
jg
lds
jnp
iret
fnstcw
mov
pop
stc
lock
jp
xchg
or
mov
in
sbb
push
and
push
decl
pop
sub
out
mov
ret
cmp
mov
out
fcomip
mov
mov
or
mov
std
sbb
sub
add
enter
stos
pop
icebp
ljmp
adc
fs
fsubl
push
xlat
rolb
scas
out
loopne
jmp
test
std
jecxz
lock
jle
inc
pop
pop
inc
repz
lcall
mov
hlt
xchg
push
mov
pop
push
sbbl
sub
xor
outsb
lods
and
mov
decl
sarl
jecxz
fstpl
inc
stos
sbb
pop
inc
add
push
decl
sub
or
push
insb
or
xorb
cmpsl
xor
fs
bound
bound
jge
sbb
arpl
movsl
popf
icebp
push
fwait
and
adc
sub
mov
ljmp
rclb
xlat
scas
es
push
xor
mov
mov
xchg
cmp
push
int3
pushf
shll
push
mov
jge
fstpl
inc
pop
and
pop
negl
push
pop
mov
addl
out
mov
or
loope
decl
pushf
adc
xorb
repnz
decl
cld
iret
divb
data16
fsubl
mov
daa
sbb
ljmp
mov
sbb
std
rorb
sbbb
push
imul
enter
mov
and
inc
lods
push
xor
or
gs
or
jp
push
decl
outsb
ret
mov
test
ss
mov
ja
call
mov
jmp
into
outsl
xor
add
jge
jmp
outsl
mov
sti
shl
sub
ljmp
push
jne
int
int3
pop
dec
rcrl
or
cmc
and
or
std
ljmp
adc
or
dec
mov
out
sub
add
push
aas
lcall
decb
out
mov
int
lock
sti
sub
inc
lret
jge
jno
cmpb
pop
push
add
jp
js
adc
imul
jno
lcall
inc
mov
ss
xor
bound
add
mov
xlat
jae
call
adc
and
shrb
push
pusha
mov
inc
jecxz
mov
nop
jne
xor
fmull
mov
xchg
in
gs
test
jecxz
xchg
cmp
mov
int3
sbb
jmp
pop
pop
jnp
inc
dec
xchg
in
sub
fiadds
cmp
jnp
sub
mov
jb,pn
aam
pop
ret
sub
cmp
lahf
push
divb
clc
push
repnz
repnz
dec
out
dec
jg
repnz
cli
pushl
cmp
sbb
repz
das
mov
pop
pop
xor
push
clc
stos
push
pop
decl
leave
mov
cwtl
and
sub
pop
inc
clc
add
cmpsl
lods
fwait
scas
xchg
xchg
sub
popa
mov
ror
das
dec
xchg
pop
jnp
jns
sub
flds
aas
dec
mov
inc
sbb
mov
jmp
jmp
jle
sbb
jne
cmp
lds
inc
inc
mov
stc
das
and
push
ret
scas
push
pop
jmp
stc
xchg
add
mov
rcll
mov
push
mov
or
jmp
scas
push
or
lret
incl
fsubs
cs
mov
and
leave
data16
and
mov
jg
add
sti
pop
xor
add
and
decl
mov
cld
mov
stos
popa
mov
push
push
ljmp
mov
jmp
pop
ljmp
pop
jnp
lods
in
jmp
cmp
popa
xor
pop
rep
call
aaa
xchg
loope
add
hlt
call
test
push
rcrb
fsubr
lods
out
mov
xchg
dec
sub
mov
enter
adc
roll
xchg
sbb
idivb
repnz
inc
sub
mov
clc
or
in
cld
xchg
in
insb
push
dec
mov
push
adc
jmp
in
test
mov
sbb
mov
fnstsw
cmp
push
std
pop
fldt
lahf
mov
enter
fdivl
arpl
repnz
inc
sub
mov
inc
je
or
adc
mov
pop
outsb
scas
shlb
aas
test
adc
vmovhps
shlb
and
and
adc
sub
xchg
push
xor
test
call
shr
ret
lock
inc
add
mov
mov
sti
push
nop
call
repnz
inc
repz
je
cmc
aas
test
xchg
jns
mov
addr16
and
fwait
aad
inc
decl
push
mov
jg
stc
ud0
shll
insb
add
jg
inc
incb
imul
call
repnz
adc
shlb
sub
jmp
xchg
mov
xor
ljmp
aas
inc
xlat
mov
ja
mov
or
stc
mov
push
aad
fsin
inc
enter
xor
push
sbbl
pop
inc
call
push
mov
xchg
add
push
cmpsl
cwtl
mov
pop
in
mov
test
sub
pop
mov
mov
or
loopne
loop
add
test
inc
nop
inc
enter
stos
inc
add
push
mov
mov
pop
inc
jne
sub
mov
push
lea
in
decl
adc
dec
and
imull
hlt
dec
jle
or
fsts
adc
adc
cmc
inc
sub
orb
jno
dec
jne
sbb
incl
cld
out
jnp
xor
pop
bound
mov
push
cmp
jmp
add
fsubs
ja
cmp
cwtl
hlt
into
insl
outsl
jmp
lods
mov
insb
inc
icebp
mov
das
int
incl
lods
xchg
jl
sbb
outsl
xlat
loope
adc
jle
lcall
jne
int
repz
xchg
pushf
mov
jl
les
filds
outsl
sbb
jle
mov
pop
dec
sti
fst
cltd
pop
mov
or
mov
jns
out
add
cmpl
mov
or
stos
out
pop
rep
cmpb
ljmp
jo
outsl
rorl
fdivs
sbb
push
mov
fwait
pop
xlat
in
push
adc
in
fwait
jmp
jne
ret
nop
data16
xchg
jl
ds
mov
out
cltd
cld
bnd
and
and
ljmp
xchg
repz
test
jnp
mov
pop
out
or
jmp
cli
scas
xchg
mov
call
push
mov
xchg
pop
pop
divb
push
jo
mov
test
outsl
outsb
out
push
inc
cltd
lcall
or
xor
xchg
stc
dec
hlt
imul
insl
mov
push
clc
inc
sti
cmp
inc
or
shll
mov
cld
call
inc
pop
pop
sti
adc
mov
ljmp
mov
xchg
ja
mull
xor
cmp
fisttps
loope
lods
cmpsb
jmp
and
and
jecxz
hlt
push
into
scas
mov
lcall
mov
les
pop
xor
inc
test
cmp
jmp
add
jmp
fbstp
mov
lcall
inc
pop
lods
push
dec
les
add
and
add
cmpps
insb
sbb
js
cltd
jne
push
push
jmp
in
mov
pusha
es
fs
icebp
cs
mov
add
cmp
call
nop
sub
push
xchg
add
aas
jno
outsb
mov
lcall
jae
adc
sarb
test
push
addr16
or
mov
outsb
xchg
xchg
call
sub
or
lret
mov
and
jbe
pop
sbb
outsl
jno
adc
inc
xchg
das
xchg
popa
movl
push
loope
cmp
pop
xor
mov
ljmp
push
push
cmp
sbb
push
stos
jl
add
decl
mov
xchg
lcall
push
imul
bswap
lcall
stos
ja
cmp
mov
adc
mov
fwait
mov
lea
mov
sti
mov
rcl
fs
lahf
fwait
stos
cmpl
adc
fidivl
jg
call
cmpsb
mov
insl
insb
push
fdivrl
push
repz
scas
push
outsl
xchg
xor
pop
add
mov
aas
mov
add
jno
popa
push
inc
lret
dec
fcmovne
jmp
mov
jmp
dec
out
xchg
push
push
bound
adc
arpl
push
decl
hlt
push
pop
shrl
pusha
orl
jb
or
mov
pop
ret
xchg
aad
lcall
imul
adc
jmp
adc
cmp
pop
sub
jae
cmpb
pop
lock
lcall
es
xchg
iret
ljmp
mov
cmpb
mov
mov
fcomip
xchg
mov
add
out
pop
shrb
dec
popf
dec
add
or
aad
ljmp
loopne
push
mov
push
arpl
imul
nop
push
jl
aam
decl
pop
xchg
int3
push
pushf
loope
or
cmovae
mov
or
aas
push
mov
add
ljmp
jns
pop
inc
or
out
mov
hlt
push
adc
out
and
lock
xor
inc
or
int3
aad
test
jg
mov
andb
mov
cmp
aas
mov
push
aam
inc
xchg
sarl
rorb
in
mov
mov
incl
xlat
ret
cmp
mov
and
fistpll
call
add
sti
out
push
scas
mov
ficomps
into
jp
mov
in
aas
enter
xlat
inc
push
div
mov
subl
pop
insb
cmp
es
jp
decl
mov
loope
sti
pop
stc
pslld
add
lods
inc
adc
and
and
adc
dec
jge
sbb
mov
iret
ud0
jg
sub
mov
ror
rolb
mov
cmp
fcomip
fsubr
inc
fstps
cs
mov
loope
icebp
add
jge
pop
jnp
clc
pushl
mov
insl
ror
insl
popf
mov
icebp
mov
jmp
cmc
hlt
loop
ret
test
and
popf
fld
mov
int
rcrb
call
sub
cmp
xor
scas
notb
pusha
mov
dec
loop
pushf
fwait
ljmp
in
mov
lods
mov
jae
into
dec
inc
rol
adc
push
shrl
fistpll
cltd
xchg
ljmp
add
jg
fldenv
push
sub
fldenv
xor
dec
cmp
cld
mov
lret
dec
jno
jge
inc
xorl
call
mov
cli
imul
dec
mov
mov
sbb
add
jp
jns
incl
scas
mov
scas
cmpsl
xor
add
pop
cmp
adc
or
in
out
jg
call
inc
andl
vxorps
push
or
jl
sub
pop
cmp
xor
pushl
das
cmpsb
xchg
testl
dec
sti
push
xchg
or
test
xchg
pop
leave
lock
adc
lea
dec
enter
xchg
sbb
sub
mov
mov
aas
mov
add
jmp
ss
outsb
out
mov
push
xchg
dec
add
push
fbstp
xor
cmp
or
mov
lret
cmp
cli
push
dec
push
ds
fwait
ljmp
fwait
xchg
popa
mov
add
push
push
pop
cli
js
jg
out
pop
push
adc
ss
or
call
inc
scas
cmp
sbbb
jg
aaa
repnz
and
dec
in
daa
adc
jmp
jle
and
mov
xor
add
ret
sbb
xor
xchg
stc
jo
lods
cmpsl
idiv
push
push
jg
xlat
jne
mov
inc
and
adc
xor
mov
sahf
xor
in
ljmp
sbb
lret
jle
into
or
es
cli
adc
incl
movsl
testb
pushf
ss
cltd
adc
movsl
mov
fwait
xchg
inc
xchg
jg
sbb
add
pop
pushl
sti
jg
adc
daa
rorl
mov
test
ja
lea
incl
js
scas
pop
or
roll
lret
mov
add
jns
or
movsb
mov
ljmp
cmp
sti
mov
icebp
xor
adc
repnz
fstpt
mov
adcb
call
repnz
jbe
test
mov
inc
jecxz
mov
sbb
add
mov
adc
xchg
std
add
jne
cmovl
cwtl
adc
mov
pop
cwtl
out
scas
xchg
xchg
outsl
cli
mov
pop
inc
test
cmp
and
sbb
cmp
aas
out
or
in
jbe
inc
shlb
cmpl
in
es
je
sub
adc
sub
mov
xor
mov
add
adc
cmc
call
insb
js
pop
in
je
xchg
ds
jne
movsb
aam
gs
mov
enter
incl
mov
testb
pop
jmp
dec
jnp
inc
lret
sub
sti
jl
rclb
pushl
cltd
jne
xchg
rcrl
dec
test
xor
xorl
pop
orl
cmpsb
decl
push
adc
std
and
cmp
add
fsubrp
cltd
xlat
add
cltd
lds
das
call
aaa
sbb
mov
sbb
out
clc
jg
inc
or
dec
sbb
and
mov
sub
loope
shll
xchg
push
xor
scas
stc
push
inc
push
dec
rcll
aas
jmp
lods
incb
pop
lea
incl
ss
push
mov
cmc
add
subb
loopne
aaa
jb
loope
pop
movsb
push
ljmp
popa
orl
xchg
push
aaa
and
pushf
test
dec
jge
ljmp
push
jnp
enter
or
jnp
out
ret
aad
scas
mov
inc
cmp
mov
inc
aas
xor
call
pushl
aad
js
mov
mov
mov
lcall
orb
jg
mov
jne
loopne
jecxz
in
repz
mov
fsincos
out
imul
sbb
mov
mov
ds
rorb
mov
sub
add
pop
cmovae
cmp
sub
fadds
jmp
ret
test
sub
gs
mov
jmp
scas
push
jbe
decl
gs
int
iret
or
mov
dec
mov
inc
jns
insb
sbb
leave
data16
push
ss
push
jle
sub
mov
in
push
in
ja
mov
mov
sub
inc
ja
pushl
push
sub
jno
fwait
mov
out
std
daa
cmc
cwtl
divb
adc
out
decb
add
push
incl
dec
adc
in
xor
inc
lcall
mov
sti
fs
pop
xor
ja
inc
popa
repnz
sub
cld
aad
or
cmp
insb
pushf
push
xor
jmp
mov
addr16
aas
inc
cmpsl
cli
movsb
push
pop
adc
add
out
push
into
movl
das
icebp
leave
mov
loopne
rclb
rcr
add
enter
shr
icebp
pop
cmp
jg
data16
fcmovnb
daa
push
inc
loop
xor
out
or
sbb
in
incl
stos
cmpsb
jno
sub
lahf
xor
mov
scas
je
pop
insb
jno
add
push
pushf
clc
daa
mov
fildl
in
or
jge
cltd
test
dec
les
cli
inc
push
out
inc
nop
shrb
jmp
jne
mull
and
pop
out
lahf
mov
jg
xchg
jo
in
shrl
adc
cmpsl
lods
cmc
jmp
imul
sbb
aam
out
lock
fs
sahf
push
mov
push
popl
adc
sub
xchg
cmp
and
cs
lock
insb
mov
cmc
dec
idiv
push
cld
call
ret
dec
pop
push
cmpsb
repnz
sahf
cs
push
enter
jecxz
ljmp
cmp
sbb
mov
in
jmp
in
dec
into
cmpsl
xorb
divl
aaa
mov
mov
sub
jmp
lcall
xchg
hlt
movsb
inc
mov
ds
mov
cltd
jo
push
pushf
add
andb
adc
out
pop
adc
adc
js
adc
jl
pop
aaa
std
aas
and
popf
jg
push
into
jo
aam
push
dec
add
lock
fldenv
ficoms
pop
ret
adcb
icebp
ret
dec
dec
and
decl
repnz
nop
cs
popf
adc
repz
shll
cmpb
imul
mov
push
sub
movsb
xchg
mov
xor
mov
sbb
ljmp
adc
out
xor
pushl
and
les
or
lcall
adc
daa
dec
fcompl
in
and
dec
sbb
push
sbb
push
in
and
jne
jmp
int3
cld
mov
ljmp
cmp
inc
lock
cmpsb
rorl
testl
fcomip
push
push
inc
bound
cmp
sub
xor
mov
rclb
sahf
call
insl
adc
lcall
mov
push
out
in
add
aad
aas
call
adc
cmpsb
push
cmp
into
leave
add
bound
xchg
jecxz
pop
push
testb
mov
leave
test
cmp
fcmovnu
in
icebp
mov
cmc
adc
aaa
mov
fsubrs
inc
dec
pop
ljmp
imul
fwait
and
divb
xor
push
popf
push
jmp
inc
cld
incl
les
push
insb
push
pop
fistps
push
sub
mov
ret
test
xchg
out
jb
dec
sub
jg
jp
mov
push
pop
pusha
adc
xchg
mov
push
jg
jg
push
dec
fmuls
notb
or
jo
mov
mov
pop
pop
rclb
enter
arpl
movsl
mov
lahf
pop
pop
shll
stos
add
aam
incl
cmp
call
in
pushl
inc
mov
hlt
loopne
ret
andb
enter
inc
jg
stc
call
mov
fdivl
dec
je
or
jbe
inc
enter
lret
xor
nopl
pop
int3
mov
decb
mov
adc
lds
mov
les
testl
repnz
std
sub
andl
and
rorl
xorb
lcall
xchg
pusha
adc
mov
sbb
inc
lea
lret
daa
sbb
decl
cld
mov
pop
shl
push
int3
jae
sub
pop
icebp
xchg
and
mov
and
pushf
push
decl
adc
std
adc
sbb
xchg
mov
stc
decl
dec
inc
pop
add
std
jg
lds
fdivr
jg
aad
jmp
gs
cld
int
jae
loop
dec
test
incl
into
mov
cmp
sahf
mov
mov
in
aas
clc
enter
sahf
xor
imulb
jg
cld
pushl
imul
ljmp
mov
int
jns
notl
fildl
xor
push
mov
in
lcall
inc
dec
dec
sbb
adc
test
and
mov
add
repz
decl
repnz
cmc
daa
scas
je
push
shrl
dec
push
cwtl
cmpsl
xchg
data16
push
mov
jns
test
xchg
xor
popf
rorb
test
and
mov
out
dec
dec
xchg
movsl
into
aas
cltd
jno
in
andl
pusha
ja
fsubl
lret
incl
movsl
arpl
push
sbb
lds
ret
push
mov
dec
rorb
mov
push
mov
pop
pop
adc
mov
fst
pop
shll
inc
add
lret
inc
inc
dec
shlb
in
dec
xchg
out
and
test
mov
int
es
push
push
out
or
je
push
fbld
outsl
or
decl
movsb
sti
fadd
popw
mov
inc
and
mov
les
inc
shl
fbld
pop
sub
insl
cmc
xchg
lds
mov
inc
aas
mov
mov
mov
adc
jbe
dec
out
scas
pushf
and
imul
push
decl
adc
fldz
fs
dec
mov
out
lret
mov
xchg
sub
fldt
dec
jmp
das
inc
and
lods
jmp
lcall
jbe
xchg
adc
xor
pushl
mov
sbb
cli
popa
xchg
push
mov
stc
push
stos
fisttpl
int3
int3
andnps
incl
xor
inc
lods
pushf
cld
xchg
pushf
cmp
mov
pop
sub
aad
xchg
cmp
shlb
adc
pushl
outsb
add
xchg
mov
bound
repz
pop
or
repnz
pop
outsb
int3
imulb
pop
mov
ficompl
dec
hlt
pop
adc
jo
outsb
filds
add
ret
ret
xchg
sysexit
decl
sub
lock
mov
push
jno
mov
pop
sub
ljmp
leave
shrb
stos
or
stc
shlb
sub
push
pop
aaa
pop
sbb
pop
xlat
mov
in
aad
mov
add
jmp
push
setp
pop
adc
mov
adc
push
daa
loopne
inc
out
fcomps
orb
add
in
je
inc
pushf
push
jecxz
in
inc
jecxz
loop
test
mov
pop
pop
loope
cmpb
dec
sub
jp
ja
sahf
xchg
mov
outsl
pop
and
dec
or
push
push
incl
xor
mov
icebp
pop
xor
out
pusha
xchg
cld
ljmp
jmp
cmp
add
push
push
push
inc
jbe
je
shll
mov
pushl
lcall
mov
sub
aas
cmpsl
inc
mov
rolb
and
and
sbb
ljmp
lahf
jp
popf
adc
xchg
mov
jae
xchg
ficoml
popa
mov
jmp
in
lea
mov
mov
leave
pavgw
sahf
rorb
add
ljmp
mov
sbb
add
xchg
mov
jbe
ljmp
xchg
vprotd
add
aam
sarl
loopne
lcall
pop
inc
or
add
xor
xchg
frstor
ljmp
sbb
mov
pop
out
xchg
pop
insl
sbb
fsubs
es
movsb
or
and
push
sbbl
aaa
cld
mov
cmp
movsl
and
js
and
jecxz
mov
inc
add
decl
bound
add
sbb
popa
loope
inc
shlb
lcall
cltd
test
push
mov
decb
xor
sub
pop
shl
push
dec
jle
jecxz
int3
ret
mov
int3
mov
cmp
pop
pop
mov
dec
call
lret
dec
int
fldenv
push
lcall
cmp
add
std
add
push
out
inc
out
cmc
scas
icebp
test
mov
jmp
lock
subl
aam
mov
inc
and
xchg
jg
call
xchg
aas
movsl
xchg
les
sub
mov
pusha
push
idiv
call
pop
sbb
lcall
cmp
mov
sahf
sar
incl
out
lods
push
sbb
lock
in
faddl
and
icebp
outsl
add
out
inc
test
stos
andb
push
or
lcall
jmp
mov
and
mul
adc
in
pop
cli
je
and
sbb
mov
subl
pop
xor
jmp
out
lcall
push
out
or
in
dec
pop
xchg
sbb
mov
jo
or
or
inc
call
fistpll
fidivrs
jg
xchg
xor
xchg
testl
out
lret
aaa
inc
roll
call
mov
js,pt
dec
adc
imull
xchg
ljmp
pop
popa
ds
xor
xor
popfw
add
cmp
jp
xchg
stc
xchg
push
and
shll
loop
sub
xor
cmp
loopne
dec
daa
cwtl
add
push
aaa
and
cs
call
adc
movsl
dec
push
sbbl
lods
mov
aas
jno
sbb
pop
ror
jecxz
ret
ficoml
mov
rcll
dec
int3
adc
fimull
addl
mov
push
mov
cmc
js
or
inc
sbb
lock
pop
shll
insb
jo
aam
xchg
xorb
repnz
push
scas
test
testl
inc
pop
gs
cmp
ss
icebp
xor
inc
test
ja
test
pushl
sub
lods
jle
sub
inc
stc
jb
cli
pop
mov
dec
mov
cmp
xor
data16
dec
dec
add
sqrtps
cltd
adc
out
movsl
scas
dec
jmp
scas
pop
test
int
shll
and
xor
testl
jb
adc
mov
enter
sbb
sbb
flds
xchg
sub
jmp
xorb
sub
xchg
pop
stc
ror
test
pushf
xchg
inc
xchg
push
sub
lret
stc
lcall
out
mov
int
mov
or
addr16
xchg
in
dec
mov
push
dec
push
cld
xchg
sbb
or
inc
lods
adcb
jmp
inc
pop
dec
gs
fdivs
push
jne
jb
loopne
sbb
arpl
lret
insb
in
add
loope
cli
sub
pop
das
addr16
jbe
or
decl
in
or
push
pop
sti
cli
repz
xor
call
cmp
bound
sahf
jb
jnp
ret
repz
lret
or
xchg
or
sbb
xchg
das
mov
cmpsb
mov
aam
scas
in
inc
inc
pop
idivl
xor
int3
std
jmp
je
js
les
and
inc
jbe
pop
mov
decl
subb
out
rorl
sti
sbb
adc
clc
cmp
sbb
sub
ret
jp
mov
push
test
jmp
subl
inc
addr16
call
xchg
int
or
xchg
ja
aam
fstl
mov
aas
xor
dec
std
hlt
ja
mov
push
mov
xchg
push
and
mov
push
jmp
sbb
sbb
loope
xor
add
loope,pt
daa
fidivl
jp
int
lods
jnp
jmp
dec
rcrb
test
add
pop
mov
cltd
les
mov
cmp
ljmp
adc
insb
mov
frstor
adc
pop
inc
adc
dec
cmpl
gs
jl
cmp
lods
in
iret
pushf
or
fsubrp
or
cmp
push
lcall
ljmp
jl
fadd
punpcklbw
fildll
add
aaa
int3
push
in
xlat
out
jg
or
imul
push
xchg
insl
sub
mov
pushf
and
push
scas
js
xchg
lods
push
leave
push
sar
lcall
lcall
loopne
mov
dec
sub
stos
add
inc
or
jo
insl
mov
mov
stos
sti
sbb
psubusb
cld
lock
iret
inc
lahf
push
fdivr
push
lahf
imul
shlb
xor
insl
into
xchg
push
xor
repnz
pmullw
movsl
mov
lods
pop
xchg
fidivl
fisubs
insl
aam
ret
scas
dec
or
stc
rclb
xor
fcomp
imul
pop
dec
les
xchg
jmp
push
jns
jp
sarl
mov
xor
ljmp
decl
shl
insl
jg
popf
insb
inc
or
push
pop
sahf
pushf
mov
outsl
and
cli
jle
fnstcw
ret
daa
lret
clc
sbb
test
jae
aad
xor
jns
add
jmp
das
scas
adc
mov
mov
mov
mov
lods
imul
push
jne
pop
popf
pop
mov
incl
mov
fildl
test
enter
jge
arpl
aaa
xchg
decb
adc
cs
rolb
ljmp
pop
aas
jl
mov
lret
out
or
clc
push
adc
and
nop
dec
incl
sub
and
cmp
ja
jge
lock
movsb
xlat
mov
mov
dec
push
call
pop
in
out
push
dec
in
ds
enter
fs
pop
icebp
pushl
jb
jg
pushf
push
mov
je
ret
pop
mov
sti
ds
jmp
clc
sarb
iret
popf
inc
lods
sahf
daa
jle
cmpsl
dec
clc
sub
fldcw
mov
add
sahf
adc
xchg
mov
push
jne
jmp
inc
push
jle
fisubl
clc
push
std
lcall
ja
xor
movsb
popf
mov
jl
ret
js
adc
and
pop
and
and
shlb
incl
pop
jge
jg
into
clc
and
xchg
jmp
sub
inc
stc
jne
jl
scas
cmpb
jmp
decl
ljmp
sbb
ljmp
pop
mov
ror
imul
stos
inc
xor
mov
rclb
and
adc
push
loop
mov
das
stos
pop
fisttpl
pushl
enter
insl
fldl
fwait
push
and
cmp
and
ljmp
stc
jae
clc
shll
pop
ss
jecxz
out
outsb
int3
ret
cmc
push
push
inc
rcrl
adc
decl
pop
xchg
subl
dec
pushf
mov
dec
popf
in
xacquire
les
jg
inc
negb
cli
inc
cltd
xchg
jae
push
aam
nop
or
mov
fcos
pushl
andl
push
stos
dec
add
jo
xor
daa
jmp
sub
aas
sub
push
pushl
or
sub
in
insl
adc
dec
ja
sub
repz
sub
jle
xchg
fsub
xchg
incl
test
pop
movsb
imulb
sub
add
adc
sti
dec
jmp
leave
lock
std
sub
fildll
add
negl
add
scas
push
add
pop
sbb
jns
or
jg
and
scas
mov
add
push
sub
arpl
ret
rclb
sbb
mov
pop
dec
dec
lea
jmp
shlb
repz
mov
sub
ljmp
jb
outsb
movsl
jae
dec
jo
add
addb
add
jbe
out
add
push
aad
imul
call
pop
xchg
xchg
stos
push
cmpsb
xor
push
pop
mov
sbb
rcrb
jmp
mov
add
adc
push
loope
jmp
nop
filds
inc
jge
xor
sbb
xchg
lahf
lcall
or
daa
daa
inc
ret
inc
outsl
dec
push
subl
in
jmp
arpl
mov
cmp
test
sub
je
js
mov
lds
add
mov
enter
xchg
bswap
cmc
mov
push
pusha
xchg
cmp
ficompl
or
decl
bnd
notrack
and
mov
es
add
stc
pushl
xor
insb
ljmp
pop
mov
or
cmp
dec
call
inc
pop
out
mov
and
jmp
lds
jns
je
sub
pop
push
sarl
sahf
push
jmp
ss
push
popf
int3
in
lods
mov
mov
js
js
push
lds
out
sahf
push
sbb
lods
add
push
pusha
sub
or
pop
movsl
fiadds
pop
in
call
fwait
jp
pop
pop
mov
in
mov
ja
cmp
push
addr16
push
pop
cmp
pushf
ret
leave
pop
stos
jo
shr
cmp
ljmp
call
insb
and
lahf
xchg
loop
pushl
and
inc
aad
xor
lods
ret
js
stos
fildll
inc
loope
pushw
pop
sbb
fldenv
mov
lcall
add
aad
add
jle
imul
push
stos
ds
mov
jl
lods
decl
xchg
mov
mov
sub
into
enter
add
cs
incl
roll
call
push
push
fisubrs
xor
out
mov
adc
ffree
jbe
ljmp
push
jae
dec
push
inc
outsb
sahf
iret
mov
imul
dec
fbstp
int
jl
dec
push
or
cld
add
adc
aas
add
cld
dec
cmp
pop
stc
cmp
dec
or
push
fbld
jl
fisttpll
fcoml
xchg
jno
push
add
cmp
add
notb
pop
repnz
xorb
pop
out
add
mov
inc
incb
push
filds
aas
xchg
xlat
int
xor
mov
mov
insl
xor
nop
inc
push
inc
mov
lcall
mov
mov
and
rolb
ficoms
loopne
fimull
add
mov
scas
loopne
std
incl
loop
dec
iret
js
jl
rclb
mov
cmpl
mov
cld
incl
mov
push
lea
adc
popf
pop
pusha
jg
push
addb
sub
pop
lahf
lcall
cmp
rolb
mov
cmp
outsl
mov
add
pop
mov
ljmp
mov
or
add
adc
mov
pop
test
add
push
mov
lcall
cld
adc
mov
pop
xchg
xchg
adc
fistps
nop
adc
lcall
inc
mov
and
sub
jae
jmp
lcall
xchg
jmp
jns
les
xchg
pop
pop
or
mov
jmp
jg
test
pop
cld
add
and
fiaddl
adc
cmp
fstpl
iret
movsb
dec
sbb
stos
and
jg
std
pop
lahf
fnsave
mov
inc
adc
and
aas
test
jno
lret
shrl
jne
jmp
sbb
outsb
jae
loop
rcrl
cmp
inc
mov
pop
mov
incl
pop
sti
sbb
call
insl
sub
xor
mov
mov
leave
pusha
pop
sbb
inc
loopne
test
sbb
mov
incl
xchg
test
shrb
inc
mov
add
lods
mov
inc
inc
ret
call
pop
loopne
call
push
popf
push
or
jp
adc
sarb
in
adc
std
call
or
imul
jnp
and
fistps
jmp
or
jnp
mov
xchg
stc
add
clc
int
rorl
mov
xchg
jge
push
cmp
adc
cld
cwtl
cmp
xor
push
add
mov
sbb
sti
daa
jne
lock
imul
call
sbb
cmp
mov
insb
cmp
and
sub
sbbb
aaa
lcall
mov
jbe
sub
insl
cmp
divl
fists
dec
mov
push
cmp
ljmp
fsubrs
imul
out
test
lea
lret
xchg
xchg
decl
clc
sub
cmpsb
or
adc
sbb
mul
aas
test
xchg
rcrl
stc
decl
push
jno
mov
and
add
add
dec
roll
jmp
stc
mov
jnp
add
das
call
repnz
movsb
and
xlat
mov
aam
jne
sub
jge
mov
push
movsb
fwait
stc
mov
roll
push
lahf
sub
andnps
ss
add
jg
inc
push
push
lcall
ja
sub
mov
dec
mov
fildll
push
stos
inc
and
lahf
jg
lcall
lods
adc
iret
add
xlat
in
ret
pusha
js
int
xchg
or
pushl
xchg
sub
ja
pop
pushf
aas
lea
daa
clc
and
decl
jns
adc
cltd
push
sub
jns
push
out
dec
gs
add
movsl
lret
lret
into
repnz
cmpsb
mov
aas
lahf
sub
push
pop
cmp
stc
jg
call
std
xor
stos
icebp
cmpsb
push
pop
xchg
cmp
leave
add
js
cs
jae
and
nop
and
cmp
repnz
mov
out
add
imull
lcall
or
jae
jg
xorl
inc
imul
mov
arpl
pop
mov
pushw
jg
push
xchg
sub
adc
sub
decl
pop
insl
decb
arpl
test
out
gs
and
cmp
call
shlb
inc
pusha
jecxz
out
scas
cmpsb
and
fwait
test
lret
lret
or
lods
shlb
jg
jmp
sub
adc
cwtl
xor
mov
inc
mov
pop
fldt
into
pop
incl
xchg
dec
into
inc
xor
movsl
fwait
dec
lret
mov
sahf
stos
pop
test
inc
mov
test
loopne
les
les
mov
dec
call
xor
sti
mov
gs
pop
negb
inc
test
pushf
andl
decl
dec
data16
pop
mov
and
xchg
push
cltd
int3
lret
xchg
mov
fs
test
andl
mov
mov
sbb
daa
decl
inc
lods
sub
int
jnp
jb
and
jno
add
dec
hlt
xor
cmp
mov
push
jl
jmp
xor
or
inc
mov
xchg
cmc
cmpb
dec
jmp
es
js
sbbb
push
ja
loope
mov
bound
out
sbb
decl
lods
bound
ret
add
fisubrs
call
aam
sub
push
add
call
pushf
or
out
sbb
das
inc
lock
rcrl
push
xor
push
push
dec
aas
push
fcmovu
ja
inc
mov
faddl
bound
jnp
orl
mov
jmp
insl
xchg
clc
pop
into
push
rorb
mov
inc
sub
and
jbe
dec
or
decl
inc
adc
xor
loope
or
adc
and
pop
sbb
pop
call
jl
jne
int
int
scas
dec
push
fcoms
pop
cmpsl
or
out
or
call
out
int3
aad
les
sub
pop
xor
cld
jbe
sbb
cmp
dec
incb
pop
inc
xchg
es
mov
cmovae
add
inc
in
xchg
pmuludq
jg
jae
call
jl
scas
fbld
lidtl
testb
jno
nop
stc
repz
incl
jg
lods
lods
adc
cmp
xchg
mov
mov
int3
jmp
insl
xor
inc
mov
push
sbb
inc
test
inc
add
loop
sub
shlb
mov
add
jnp
mov
cli
jp
incl
and
push
popf
ja
jbe
std
or
mov
xchg
pop
sarl
sub
sti
xchg
adc
addr16
fs
scas
lcall
sarl
hlt
lahf
int3
fcomps
dec
incl
fdivl
addl
xor
in
das
xchg
mov
xchg
movsb
xor
jecxz
lods
inc
lock
mov
ljmp
call
sti
clc
cmpb
cmpsb
ret
mov
lods
lds
push
dec
test
call
call
or
mov
popa
loop
lret
stos
ljmp
jg
and
inc
loope
inc
cld
in
fisttpll
mov
lea
out
fistl
jg
shll
and
adc
jmp
call
arpl
outsl
gs
or
and
mov
stos
and
jecxz
xchg
fisubrs
call
cld
scas
test
iret
xor
sbb
enter
in
cmc
cmp
imulb
clc
push
lods
insb
jae
incl
and
mov
adc
cmp
sub
jb
std
xchg
inc
imul
jnp
cmpsl
mov
insl
pop
inc
insl
out
repz
xchg
pop
scas
dec
cmp
cwtl
faddl
lahf
sub
shll
cli
push
xchg
es
cmp
ds
xchg
push
adc
pusha
adc
jmp
sub
repnz
rolb
mov
sahf
ret
sahf
popf
xchg
mov
jmp
call
divl
sub
inc
cli
cmpsb
cld
cmp
dec
in
ficomps
stc
xchg
das
jg
js
jae
imul
stos
add
inc
xchg
sub
hlt
jae
sub
cmp
mov
ljmp
jmp
dec
popf
add
jmp
bound
mov
in
cmp
pushl
mov
adc
add
inc
and
rcrl
jmp
lods
fwait
decl
add
rcpps
adc
xchg
decl
mov
cld
sbb
ret
les
fs
adc
cs
jmp
insl
jb
push
cs
adc
xchg
pop
call
pop
ljmp
jl
cmp
test
xchg
mov
repz
gs
sub
push
incl
dec
je
mov
pop
outsb
aam
and
mul
add
sti
mov
call
mov
cs
pop
fwait
dec
imul
xchg
xchg
mov
and
ljmp
push
push
xchg
push
adc
and
xor
sahf
fadds
xor
out
add
clc
addr16
lcall
int
lock
inc
jnp
mov
push
insb
add
repz
data16
call
shrb
or
dec
xchg
sub
leave
fildll
rcrb
lea
pop
sbb
mov
out
xor
lcall
sbb
sub
mul
xor
push
pop
or
icebp
jl
inc
ficoms
jle
ja
dec
pushl
lods
and
ljmp
mov
imul
add
icebp
push
jg
test
cmpb
aad
jp
sti
stos
pushl
pop
clc
cltd
mov
push
add
cmp
inc
cmpb
push
mov
cmp
dec
push
and
out
push
mov
pop
int
clc
call
mov
lahf
mov
jl
add
push
ljmp
das
sahf
mov
mov
scas
pop
daa
cmc
ja
inc
test
xor
add
lahf
jbe
adc
loopne
push
fsts
jbe
push
sti
les
popa
xchg
nop
idiv
fistps
xchg
repnz
mov
aaa
or
stos
iret
xchg
push
in
js
cld
jno
insb
sbb
mov
cltd
and
xchg
in
call
sbb
bound
jo
jo
and
pop
pop
cmp
push
icebp
sbb
mov
add
movsb
mov
out
inc
sub
pop
loop
mov
and
lds
sarb
mov
loop
incl
sub
mov
inc
push
iret
push
bound
lcall
iret
xchg
xor
das
jo
es
push
sub
or
fsubs
mov
call
cld
xor
push
int
mov
sbb
jp
sarb
mov
in
call
jnp
push
push
add
sub
fiaddl
pop
jo
sub
in
xor
pushl
movsl
sti
jnp
leave
push
imul
repz
mov
xchg
or
jp
into
xchg
dec
ljmp
push
pop
xlat
mov
dec
push
pop
adc
and
into
pop
xchg
or
push
sub
clc
inc
sbb
es
in
repnz
push
loopne
or
adc
pop
ljmp
aaa
loop
lock
sub
dec
stos
lods
mov
sbb
incl
lods
sbbb
inc
push
movsb
jnp
pshufw
test
lcall
and
neg
xor
pop
adc
jg
in
inc
lahf
test
mov
jmp
dec
jnp
mov
and
incl
das
fldl2e
int3
dec
pop
mov
xchg
inc
push
and
mov
std
push
lods
ljmp
or
jl
sbb
jno
loope
adc
sbb
sbb
shlb
leave
decl
cld
jo
push
jbe
jg
dec
push
xlat
cld
dec
popl
ficomps
jbe
repz
mov
pop
aas
mov
pop
pop
jle
pop
cmp
add
jg
xchg
lea
adc
js
jmp
lcall
lret
cld
ljmp
aad
or
pusha
inc
stos
sub
into
mov
repz
adc
mov
fisubl
ljmp
dec
dec
xor
call
jno
inc
and
jae
roll
cs
jmp
outsb
push
pop
xchg
pushf
jmp
xchg
xchg
rcll
sbb
inc
add
fs
ret
ljmp
push
out
add
lods
lcall
incb
pusha
fstpt
test
and
sbb
jmp
scas
cmpsb
out
xchg
into
sbb
dec
nop
cmpsb
xor
rorb
cmc
adcb
ljmp
xchg
pop
imul
xchg
lcall
lret
inc
mov
mov
mov
lcall
out
pop
in
mov
rcl
mov
mov
lock
test
add
inc
or
in
call
pop
repz
lret
fs
mov
xchg
nop
dec
or
cli
pop
and
aaa
test
aas
scas
mov
cmp
push
push
xor
pushf
sbb
inc
pop
out
inc
mov
movsl
fdivrl
pushl
test
push
into
movsb
jl
fisttps
mov
dec
std
add
mov
pop
leave
frstor
filds
ss
inc
jle
jmp
jg
lcall
clc
pop
call
and
dec
mov
les
fwait
adc
dec
or
repz
popf
pop
inc
lods
lea
incl
in
daa
cmp
movsb
js
add
add
sbb
ret
add
pop
or
mov
andl
das
data16
scas
mov
sbb
mov
incl
cld
xchg
jmp
call
dec
fdivrp
pop
test
lods
mov
fcomps
jmp
jecxz
in
pop
cmp
inc
sahf
mov
adc
call
inc
ret
or
clc
lcall
jg
bound
sbb
jle
sbb
cmc
das
je
cs
decl
movsl
loopne
sbb
out
mov
add
jmp
or
imul
inc
sti
fistps
lcall
fists
sub
cmp
fwait
cmpsl
lret
imul
shll
clc
mov
and
xchg
mov
cltd
dec
jnp
and
incb
movsl
loope
ja
fs
lcall
js
jbe
mov
sar
add
push
loopne
fcoml
clc
mov
lea
cmp
test
push
or
scas
outsl
adc
scas
or
inc
test
sti
test
lds
stc
xadd
aas
and
mov
jg
jg
jge
rolb
cwtl
cltd
inc
mov
les
jno
adc
incl
add
mov
jle
or
xchg
call
lods
mov
jae
jmp
bound
fidivl
lahf
jle
cs
inc
hlt
jmp
mov
sub
aas
inc
inc
inc
cmc
mov
mov
pop
pop
mov
aad
jl
mov
mov
sbbb
pushf
dec
pop
adc
sub
pushf
adc
adc
clc
mov
jmp
xchg
adc
sbb
std
cld
jae
sbb
aad
pop
sbb
cmp
outsl
fisubl
cmp
ficompl
inc
call
jmp
push
aas
cmp
das
hlt
xchg
shll
cli
std
inc
ljmp
out
fsubrp
enter
xorl
mov
pop
stos
hlt
test
call
movsb
pushf
mov
aad
scas
sarb
dec
mov
adc
push
adc
push
lcall
int
cmp
ss
cmpl
ljmp
arpl
in
add
out
ds
call
fidivs
jmp
fst
icebp
sbb
add
adc
je
rorb
incl
jb
sub
or
and
fmul
test
mov
ljmp
shlb
clc
mov
std
adc
adc
sbb
inc
aas
pusha
push
call
add
ljmp
enter
ljmp
dec
call
cmpsb
adc
or
fsubrl
test
jg
push
ret
and
pop
sbb
jg
icebp
dec
and
daa
inc
jbe
decl
mov
imul
test
decl
leave
sahf
fistpll
push
lret
decl
pop
xchg
cmp
mov
sub
jmp
or
or
mov
sbb
push
jle
dec
int3
sbb
xchg
ds
popf
ja
and
incb
pushf
mov
jno
aas
jg
unpckhps
xchg
sti
cmp
xor
pop
xchg
int3
pslld
mov
jmp
mov
fldcw
push
enter
jnp
je
mov
jae
push
imul
int3
mov
pushl
jmp
adc
sub
gs
in
mov
incl
xchg
imul
clc
in
cmp
cmp
or
test
test
sar
decl
xchg
mov
loopne
or
sbb
add
fstpl
in
jmp
push
lds
test
xchg
push
mov
cltd
mov
aas
add
outsb
mov
jg
or
sub
pop
scas
dec
add
fcos
mov
push
daa
mov
loopne
decl
xlat
ljmp
popf
adc
js
aas
incl
lds
mov
cmc
testl
shl
out
fisttps
inc
jmp
fldcw
mov
jecxz
stos
mov
stos
xor
idivl
cld
cmp
movsb
cmpsb
and
imul
decl
jle
icebp
pop
shrl
jl
sbb
cmpsl
cmp
ss
push
lcall
lcall
in
nop
adc
sbb
add
lret
popf
out
mov
jno
jmp
stc
mov
clc
jg
test
je
jns
aad
pop
loope
mov
in
jg
lcall
xchg
push
dec
imul
into
xchg
cmp
int3
out
dec
stc
pslld
cmpsl
pushl
dec
xchg
test
imul
nop
cld
pop
ret
loope
in
daa
push
loopne
pop
inc
lahf
fldt
nop
in
and
pop
leave
mov
xorl
cld
imul
pop
scas
pop
cwtl
insl
dec
mov
addr16
pusha
nop
mov
adc
pop
daa
js
cmpsb
ret
jmp
mov
jmp
decl
push
push
sbb
adc
outsl
fstps
addl
ret
test
dec
mov
cmp
or
push
scas
xchg
stos
push
cmpb
ja
pop
mov
dec
mov
jmp
in
cld
stc
xchg
jns
ja
jmp
adc
loopne
pusha
sbb
add
adc
mov
or
ds
leave
or
insl
mov
fnstenv
loopne
mov
sub
pop
push
xor
jmp
insl
xchg
push
xor
dec
incl
pop
xor
xor
divb
and
mov
ljmp
jmp
sub
xor
out
add
xor
cli
in
add
cmp
adc
popf
fisttps
ret
and
dec
push
or
push
inc
mulb
mov
jmp
push
lret
aad
jp
mov
adc
lods
lcall
push
add
mov
lds
movsl
stc
mov
pushl
mov
pop
dec
cmp
mov
xor
and
and
mov
jne
pushf
mov
sbb
push
xchg
push
int3
std
adc
dec
pop
pop
cmpsb
stos
lcall
mov
loope
inc
mov
or
pop
mov
pop
cli
cld
call
imul
xchg
enter
ss
jecxz
mov
jnp
hlt
or
loope
incl
fdivrl
in
xchg
cmp
dec
fiadds
popa
sub
mov
out
js
push
rcrl
jmp
fs
mov
sarb
mov
jnp
lock
mov
xchg
int
icebp
mov
inc
adc
adc
je
bnd
push
aas
cmp
adc
pop
jmp
or
jne
dec
cld
ljmp
aam
lods
test
cmpsb
sbb
imul
xchg
pusha
xchg
xor
mov
pop
or
popf
ret
push
test
outsb
outsl
mov
or
pop
xchg
fwait
lret
mov
sbb
inc
dec
out
or
push
cli
and
mov
adc
jmp
dec
call
sub
cltd
push
into
nop
pop
mov
mov
pop
mov
lcall
adc
popf
icebp
or
fisubrs
mov
jle
or
xlat
test
stc
xchg
jne
push
jbe
test
adc
decl
mov
adc
nop
shlb
roll
and
mov
fistpll
sbb
insb
jg
inc
fildll
xor
pop
test
pop
and
lcall
fmuls
mov
ljmp
pop
inc
sub
test
call
or
inc
push
jg
push
arpl
push
add
pushf
popa
adc
out
cmp
jmp
push
cli
insb
jge
sub
dec
mov
test
push
mov
movsb
add
xlat
repnz
mov
pop
mov
pop
push
pop
loope
cmpsb
mov
ljmp
lcall
jbe
jl
xchg
je
sbb
test
test
decl
les
xorb
jg
xor
call
loopne
std
mov
loop
xchg
stos
rclb
adc
sub
mov
loope
dec
jo
into
adcl
pop
int
and
jbe
add
cltd
or
jg
loope
xor
bound
pop
cmpsb
jg
jg
aas
xor
loopne
xor
and
jle
mov
incl
add
test
lcall
fidivl
cltd
scas
xchg
mov
cwtl
adc
jge
fisubrs
and
lcall
sti
pushaw
sbb
or
pop
ret
out
cmp
bound
int3
jmp
mov
sub
lods
icebp
enter
repz
or
cld
or
loopne
mov
jg
add
lcall
push
cmp
sti
xor
xchg
enter
leave
fildl
add
imul
pop
insb
ret
mov
mov
test
dec
gs
cs
insl
push
out
cli
jge
das
lahf
mov
aas
jge
cmpsb
push
jecxz
dec
xchg
cmp
dec
cld
mov
decl
add
enter
ss
xchg
leave
pushl
fsubr
pop
test
sahf
ds
pushl
shll
gs
fldt
hlt
adc
push
call
loopne
popf
mov
pop
jg
bound
adc
sub
push
jbe
test
fcoms
mov
cmp
in
sar
movsb
js
repz
das
dec
mov
and
push
and
push
lds
mov
jg
fs
into
cmp
xor
lods
cmpsl
clc
test
push
fistpll
jg
pop
pop
fs
dec
xchg
jle
iret
mov
mov
mov
ds
adc
sub
jg
and
inc
pop
incl
dec
mov
cmp
sub
jg
mov
push
sbb
roll
xlat
xchg
iret
cmpsb
in
push
loop
mov
dec
popa
mov
int3
decl
jo
sbb
es
pop
mov
xor
push
fistps
add
or
mov
in
clc
dec
test
ds
cltd
stos
push
push
push
incl
ret
sub
stos
sbb
pop
ret
bound
push
mov
inc
sub
lahf
jg
add
mov
jg
sbb
outsl
test
pop
pop
dec
dec
add
lcall
and
ja
mov
push
xchg
mov
loop
mov
cld
dec
sbb
mov
test
add
push
mov
ds
jno
int3
ja
xor
rdmsr
mov
cwtl
lock
adc
cltd
jne
mov
das
daa
mov
lea
mov
mov
aam
loopne
dec
jns
popa
cmp
jnp
mov
mov
pop
call
fdivr
mov
push
mov
jbe
idivb
mov
hlt
out
ficoml
test
roll
push
jmp
incl
xor
les
mov
jp
xor
stc
jne
decb
or
push
aas
add
cmp
jmp
dec
ja
iret
pushw
fwait
sbb
adc
in
lds
sub
lret
outsl
dec
adc
mov
les
call
lock
jecxz
fmull
sub
popf
scas
mov
sbb
sub
fwait
xchg
cwtl
jg
mov
mov
mov
adc
jmp
dec
or
mov
mov
mov
lret
pop
cli
cmp
pop
mov
outsb
jmp
mov
push
popa
int
push
pop
movsb
pusha
pop
out
push
mov
fwait
repnz
jns
bound
scas
pop
pop
scas
out
data16
jmp
jg
bound
sub
test
jne
mov
mov
or
mov
xlat
jno
mov
sbb
test
jg
incl
sbb
mov
mov
popf
add
mov
decb
rcll
jp
xchg
push
fwait
xchg
test
decl
dec
xchg
xor
push
mov
repnz
jg
das
sub
pop
lds
daa
jle
mov
jg
mov
jl
mov
icebp
sysret
mov
fstps
test
data16
inc
loopne
fists
jnp
mov
adc
sub
and
inc
push
lahf
pop
clc
mov
cltd
cmp
pop
add
dec
push
aad
in
push
decl
jmp
imul
mov
mov
test
adc
je
rcrl
lcall
mov
push
inc
mov
imul
or
mov
loopne
jmp
mov
pop
jp
leave
mov
test
inc
fidivrl
add
pushl
insb
jmp
das
leave
stc
andb
or
sahf
out
jmp
or
xchg
mov
fs
pusha
cmp
push
fwait
mov
enter
jmp
stc
push
xor
lea
or
repz
push
fucomip
xchg
mov
call
call
arpl
adc
lcall
nopl
sbb
add
dec
dec
leave
enter
das
decb
repnz
sbbb
cmpsb
fildl
fists
xchg
scas
mov
pushl
xchg
sarl
pop
jle
lcall
xchg
lds
xchg
repnz
push
xor
scas
sbb
sbb
cmp
xchg
xchg
popa
imul
std
xchg
imul
adc
jns
incl
fwait
push
mov
xchg
nop
arpl
shlb
sub
aaa
and
pop
mov
or
call
mov
or
inc
and
dec
mov
out
sub
push
andl
repz
int3
cmp
popf
test
insl
inc
lea
loope
cmp
mov
mov
mov
mov
sbb
aad
mov
mov
push
xchg
adc
mov
fidivs
add
jmp
ja
popa
xchg
and
sbb
jecxz
jg
test
add
fwait
jp
movsb
pop
cmp
call
push
inc
loop
push
das
shlb
sbb
xchg
jl
lcall
std
and
aad
pushl
pop
fs
fucomp
mov
callw
gs
sbb
mov
jge
leave
ret
out
loopne
pop
call
jecxz
push
cmpsb
jmp
inc
push
out
arpl
jns
aas
or
pusha
lcall
mov
lods
push
sbb
sahf
movsl
push
adc
mov
hlt
test
jp
jo
popa
jbe
int3
mov
sahf
mov
addr16
repz
in
ret
popa
sbb
pushl
ja
xor
ja
incl
and
xor
dec
in
repz
mov
or
ljmp
psubb
xchg
xor
jmp
jb
pop
inc
daa
decl
andl
sbb
sub
sbbb
cmp
and
inc
jne
ds
divb
ljmp
cld
scas
pop
stc
sar
aam
loopne
jg
lahf
adc
lcall
ret
xlat
cli
pop
fadd
int3
out
test
or
dec
pop
aaa
jecxz
arpl
aas
mov
cmp
pop
dec
sar
decl
jnp
sub
push
mov
aas
fsts
jge
data16
repnz
loope
mov
clc
in
add
push
jg
mov
aas
call
jg
xchg
sbb
into
adc
lods
mov
rcll
aas
dec
sar
sar
call
jb
sub
and
push
lock
ret
test
mov
aaa
call
xor
xchg
pushl
mov
test
jmp
add
push
push
orb
stos
lahf
outsl
mov
test
call
mov
jnp
pop
pop
sub
sbb
out
in
sub
xchg
xor
add
rcrb
test
filds
xor
xchg
out
xchg
movsb
repz
stos
xchg
clc
fistpll
ljmp
js
out
mov
inc
in
xor
jae
mov
mov
dec
mov
xchg
dec
and
movsb
int3
aas
nop
call
movsb
mov
mov
push
test
push
jle
rcll
jecxz
icebp
test
jns
imul
sbbb
hlt
xlat
fwait
adc
mov
lcall
cltd
pop
mov
data16
in
mov
push
jmp
sub
pop
mov
roll
jmp
jg
xorl
int3
mov
int3
adc
sub
mov
mov
in
jbe
pop
pop
fdivl
pop
gs
idivl
incl
cli
xor
add
stos
rcl
and
mov
dec
cmp
pushl
test
xor
jp
iret
lock
aam
enter
xor
jmp
test
ljmp
cmp
sub
sbb
aaa
lock
add
mov
std
mov
scas
movsb
sub
cltd
adc
stc
inc
mov
loope
pop
jle
add
mov
dec
test
sti
push
rcl
sarl
adc
sahf
lods
fdivl
and
ret
xchg
icebp
incl
ficomps
mov
daa
inc
popf
test
xor
jmp
bnd
hlt
movsl
aaa
inc
pop
pop
push
adc
dec
pop
xor
aas
enter
icebp
pop
das
testb
mov
mov
test
aas
pop
jmp
lcall
mov
mov
pop
fildll
cmp
sbbb
mov
lret
cmp
pop
rol
inc
jp
mov
mov
lock
mov
mov
push
sbb
pushl
sti
int3
divl
adc
int
jnp
add
pop
not
cmc
mov
push
and
mov
or
push
sub
scas
mov
pushf
push
inc
sub
jmp
cmp
jmp
adc
inc
pop
pop
dec
std
fmuls
add
jecxz
lock
dec
adc
xor
jmp
inc
adc
push
push
out
jg
mov
movl
mov
fmuls
or
xchg
jmp
cli
adc
repnz
js
push
in
std
pop
rorb
pop
fcmovb
sub
push
jae
push
xor
jbe
pop
rcrb
mov
mov
outsl
pop
pmulhw
in
push
arpl
sahf
jno
negb
orb
cwtl
out
push
fsubrp
pop
icebp
xorl
int3
sub
cmp
cmp
push
sub
mov
test
dec
mov
out
enter
pop
pop
out
cmc
lcall
mov
pop
cld
andl
lahf
xor
scas
aaa
sub
and
pop
outsl
cmpsb
lock
lds
cmp
mov
jg
repnz
xchg
mov
in
mov
aas
jo
in
inc
sub
push
stc
sbb
imul
jo
xor
push
pop
data16
int3
movswl
mov
das
popf
push
lret
aad
aaa
sbb
call
int3
notb
or
mov
test
orl
lahf
outsl
or
pop
and
mov
push
jg
aas
stc
call
lret
aaa
insb
test
jl
and
insl
ret
lods
ljmp
data16
aaa
test
sbb
dec
inc
cmc
cmp
cmpsb
sbb
inc
shrl
cld
mov
jo
test
jg
mov
in
sub
cli
fstpl
repz
sub
jae
xor
ja
jns
cmp
pop
cmc
cmp
cmp
xorb
stos
arpl
repnz
xor
lcall
push
addr16
xchg
xchg
out
jp
push
sub
fisubs
call
arpl
iret
call
cmp
lods
ja
push
dec
pop
imul
cmp
leave
jmp
xor
jne
sub
mov
xchg
mov
add
push
push
pop
ret
jg
clc
decl
push
inc
mov
sbb
mov
cltd
sbb
iret
or
clc
pop
dec
inc
aas
adc
int3
dec
push
pop
repnz
lock
jno
cld
dec
mov
pop
xchg
add
lret
andps
push
cltd
fs
jg
clc
int3
lret
test
test
mov
call
add
mov
or
shrb
fwait
pop
jg
test
hlt
cmp
xchg
and
adc
lock
enter
test
jg
aad
stos
mov
adc
sub
orl
push
inc
and
fdivs
test
push
sbbb
and
data16
inc
rcr
arpl
pop
in
mov
jae
jns
adc
test
jbe
pop
xchg
lret
outsb
dec
call
scas
jg
fisttps
in
push
cmp
and
test
decl
jle
stos
dec
jno
push
dec
jg
jg
sub
mov
sbb
in
les
ljmp
test
push
pop
cmp
dec
xlat
mov
pop
fnstenv
sti
jg
mov
add
imul
sbb
jg
icebp
andnps
int
jnp
rcr
sub
xchg
pop
scas
jno
cmpsl
mov
pop
das
orb
ret
out
add
das
cmp
outsl
push
or
xchg
cltd
loopne
xchg
push
js
add
mov
lcall
mov
stos
lcall
enter
decl
mov
lcall
inc
mov
sbb
mov
daa
aas
in
sar
decl
mov
cld
shl
in
sti
mov
or
and
stos
xchg
lcall
test
jne
mov
mov
pop
arpl
call
repnz
ret
mov
rorl
add
jmp
insl
pop
pop
test
mov
mov
sar
aas
and
dec
stos
pop
xchg
in
insl
leave
dec
out
cld
test
cmp
mov
push
call
call
test
and
jg
ret
ret
push
xor
incl
mov
xor
xchg
xor
mov
outsb
cmpsl
add
push
fadds
dec
mov
xchg
cmp
aas
enter
div
in
ret
lret
adc
ja
add
cmovle
cli
stc
and
faddl
or
dec
ss
jle
mov
pop
pop
addb
cmp
decl
repnz
fdiv
outsb
cmp
xor
into
nop
mov
mov
insb
dec
mov
pop
sub
adc
pusha
das
stos
mov
in
daa
xchg
mov
pop
aaa
outsb
xchg
out
pop
inc
call
pop
loopne
lahf
push
push
int3
pop
loope
jl
mov
hlt
pushl
jge
je
jmp
fwait
loop
shrl
mov
and
inc
push
loope
jle
jo
push
arpl
pop
rcrb
cmpsl
sub
dec
pop
jp
cli
cmpsb
dec
pop
mov
les
mov
mov
pop
mov
push
add
mov
cs
pop
mov
stos
inc
pop
cmpsl
pushl
stos
icebp
das
ljmp
cltd
dec
mov
or
sub
mov
stos
jle
scas
xor
pop
sbb
mov
push
loopne
and
mov
cmp
nop
xchg
aad
lods
push
fisubs
pop
dec
dec
push
sbb
xchg
ret
loopne
add
mov
or
or
fbstp
cmp
repnz
mov
flds
and
inc
sbb
aad
imul
jbe
xor
push
shll
sub
sbb
das
xor
and
out
jp
jge
and
mov
ffreep
inc
cmp
and
shlb
call
pop
push
push
sub
pusha
xchg
bound
mov
jmp
es
lahf
jnp
pop
in
dec
mov
mov
cmc
jnp
loopne
addb
arpl
jno
fs
fwait
adc
in
dec
mov
adc
addr16
lock
std
incl
nop
pop
sub
adc
sub
or
pop
adcb
pop
cmp
fistpll
sbb
lahf
cmc
divb
aas
arpl
or
pop
cmp
fists
loope
add
rcrl
inc
jne
das
sub
lods
inc
cmp
cld
pop
sti
ljmp
sub
incl
push
sbb
jmp
add
aas
outsb
pop
mov
pop
push
pop
jg
shr
andb
push
aad
movsl
cmp
lcall
repz
sbb
jg
stc
adcb
pop
ja
enter
ds
je
sti
or
fldl
cmp
nop
mov
push
mov
out
ljmp
imulb
loope
add
xorl
push
popf
lcall
test
lcall
ss
mov
bound
jg
pop
inc
cmp
cld
clc
jb
push
jecxz
mov
clc
popa
adc
incl
sbb
ljmp
sahf
daa
into
push
movsb
call
push
mov
lcall
call
cli
loope
shlb
btc
jl
or
sbbb
lcall
xchg
sbb
and
test
fwait
pop
mov
mov
sbb
sub
or
jg
stos
adc
inc
hlt
xchg
sbb
repnz
out
in
dec
sbb
sbb
clc
jmp
dec
or
out
push
lods
lret
inc
lods
fldz
idiv
ljmp
clc
pop
dec
and
mov
cmpb
bound
sbb
xor
aaa
aas
xor
push
cmp
mov
lcall
dec
in
cmp
mov
popf
inc
jp
fwait
bnd
fildll
or
arpl
jl
inc
mov
repz
rcrl
movsb
pop
inc
push
mov
orl
jmp
call
lcall
pop
test
das
cli
pop
enter
loope
jp
je
dec
fs
pushl
xchg
sbb
inc
insl
sbb
sbb
aam
mov
lcall
xor
je
test
sahf
xchg
outsb
sbb
sub
loope
fmul
lods
out
and
inc
or
outsb
jg
frstor
inc
xor
mov
data16
xor
mov
or
ds
inc
mov
cmp
aam
loop
loope
mov
decb
xlat
push
call
pop
xchg
push
cli
jmp
movsl
lcall
mov
pop
lods
ljmp
jmp
clc
int3
ret
mov
mov
rorb
add
out
test
stos
cmp
sub
std
ficomps
lcall
lea
into
arpl
dec
jmp
sbb
xlat
jp
out
into
mov
out
outsb
mov
jle
std
ljmp
call
sbb
push
pop
gs
js
cmp
add
lahf
and
push
mov
cmp
push
outsl
jg
push
aad
pop
jns
jl
add
xchg
rclb
ss
les
xor
mov
incl
jbe
xchg
aad
push
xor
cmc
sbb
call
inc
add
xor
jae
dec
cmpl
bound
pop
aas
lock
decl
fcoml
test
xorl
fimuls
pop
push
jb
or
icebp
pop
or
adc
fcmovu
lahf
mov
aaa
xchg
xchg
mov
divl
cld
movsb
fbstp
sub
test
jmp
ds
ss
imul
jmp
or
jg
adc
cmp
add
rcrl
jp
adc
jg
add
decl
mov
shl
shll
jg
pop
xor
sarl
call
mov
lret
jg
daa
call
outsl
pusha
mov
out
inc
test
xchg
cld
scas
jg
test
mov
out
xor
inc
loop
push
jmp
mov
arpl
pushl
lds
in
aas
or
mov
out
mov
enter
mov
lock
adc
jge
cmp
dec
or
add
inc
fistpll
test
sub
ljmp
jg
inc
sub
dec
cld
push
icebp
add
cmp
push
pop
outsl
mov
pop
xor
lcall
mov
aaa
bound
sbb
je
adc
jmp
lcall
sbb
push
mov
inc
jmp
pop
or
dec
pop
pushl
xchg
clc
std
xorb
xchg
inc
mov
and
pushl
sub
cltd
push
test
fwait
mov
cmpsb
or
dec
lret
push
loope
mov
in
lds
cmpb
loopne
pop
ret
pop
cld
xor
mov
inc
cmc
push
pushf
sub
inc
or
aas
cmp
mov
clc
sbb
or
sti
out
mov
xchg
dec
out
or
mov
jmp
adc
cmp
add
dec
popf
and
sub
and
pop
in
scas
dec
loop
decl
mov
mov
mov
loop
xchg
pop
lahf
in
negb
ljmp
jecxz
xor
loop
fisubrl
mov
jmp
cmpl
movsl
mov
mov
xchg
mov
push
mov
iret
cmpb
call
pop
adc
dec
pop
or
fdivl
subb
pop
aas
pop
mov
in
xchg
imul
test
and
sbb
fnstsw
cli
sbb
ljmp
xchg
pusha
insb
inc
jmp
fwait
jne
cmovne
repz
sbb
das
cs
and
cmp
jge
pop
idivb
pop
and
std
movsb
rorl
sbb
lret
sahf
xor
push
stc
in
mov
fcomip
pop
add
mov
dec
in
in
ljmp
mov
xor
call
enter
inc
and
push
fistpll
jg
mov
loope
mov
andl
or
dec
mov
dec
aaa
mov
sub
loopne
pop
aas
stc
lcall
push
jbe
stc
jb
lahf
and
imul
push
add
push
aas
push
mov
stos
ret
ret
adc
mov
dec
xchg
les
xor
xchg
jge
lcall
testb
mov
dec
cli
jge
xor
or
fprem
andnps
out
and
dec
mov
push
push
xlat
test
jecxz
test
xchg
jb
movsl
sbb
decl
clc
enter
mov
lret
pop
addb
mov
dec
outsl
fnstsw
push
ljmp
xchg
das
xchg
mov
xchg
jmp
jmp
ret
mov
add
lds
jnp
sbb
mov
test
cmovo
decl
lods
pop
pop
dec
cmp
ds
pushf
jo
push
shr
sbb
les
adc
incl
pop
repnz
ss
mov
lods
jmp
mov
and
incl
xchg
jbe
stos
cli
and
push
jb
adc
fwait
andl
int3
mov
jmp
lahf
dec
std
mov
jbe
out
add
incl
push
call
inc
push
lcall
or
fmull
pop
xchg
rcll
sub
lods
call
std
ds
cmpsb
adc
jnp
pop
shrl
pop
lock
std
sbb
jp
inc
xor
and
pop
adc
push
or
js
cmp
popa
test
and
jge
inc
jl
fbstp
push
mov
adc
jmp
xor
xor
aas
push
scas
push
dec
call
aad
pushl
stos
inc
std
jecxz
cld
mov
and
mov
fcmovbe
pop
fisttpl
xchg
cwtl
shll
ds
lods
pop
pop
int
xor
movsb
jp
pushl
push
adc
repnz
jne
cmpsb
inc
xlat
and
mov
inc
lea
lret
push
xchg
xor
dec
mov
sbb
lods
jmp
jg
mov
mov
cmpl
scas
repz
inc
or
mov
rorb
jg
mov
aam
cmp
sbb
lcall
loop
pop
push
inc
dec
mov
ja
or
and
call
pop
push
add
aam
push
xorb
mov
imul
inc
xlat
push
hlt
xor
ja
push
in
jae
pop
pop
dec
mov
nop
aam
jnp
test
inc
aas
and
xchg
jge
jge
cmp
lcall
outsl
add
sti
mov
ds
fstps
into
incb
mov
pop
mov
js
cwtl
in
cmp
sub
sahf
pusha
add
fildll
out
jg
lods
pusha
dec
dec
mov
or
and
lahf
pop
add
xchg
jne
or
decl
and
jmp
xor
xchg
and
sub
mov
imul
mov
call
daa
jmp
loopne
bound
push
shrl
mov
mov
test
inc
mov
lahf
lock
xchg
add
addr16
icebp
aas
push
mov
mov
pop
push
cld
das
sbb
lret
bound
jmp
call
mov
xor
push
dec
push
pop
sub
out
jnp
pop
sub
inc
repnz
sbb
mov
or
idiv
das
sbb
jecxz
imul
adc
fistps
dec
pusha
xchg
push
mov
inc
arpl
test
call
and
cwtl
mov
xchg
stos
sbb
mov
cmp
mov
jecxz
add
or
push
pushl
pop
in
repnz
xchg
mov
decl
stc
int
or
fs
push
push
and
push
cmp
dec
xor
js
int3
add
sbb
inc
icebp
ds
xor
pop
or
aas
cmp
lret
dec
lds
push
or
or
mov
les
loope
and
jmp
add
repnz
inc
and
mov
sbb
addr16
out
mov
incl
jns
inc
js
xor
mov
lods
sti
outsb
jp
movsl
daa
outsl
inc
sbb
pushl
orl
adc
xchg
mov
std
jmp
incl
sbb
jp
cmp
stos
fs
mov
push
in
stos
lcall
shl
jmp
sub
dec
sarl
push
sub
dec
out
xlat
pop
jmp
xor
jo
xchg
xchg
shll
mov
inc
sbb
cmpl
fldenv
lock
cmp
divl
jl
push
cmc
fdivp
and
xor
std
rclb
hlt
push
jg
sar
sub
dec
daa
outsb
or
inc
jmp
add
xchg
lock
sbb
sbb
lock
aas
and
mov
scas
inc
mov
repz
jbe
and
jg
daa
loopne
mov
pop
call
sbb
cs
inc
ret
cs
adc
cltd
add
popa
mov
aaa
in
fbld
test
outsl
jg
push
call
popa
fsubrp
ret
mov
shll
pop
imul
sar
call
cld
das
mov
shll
lcall
push
cmpsb
movsl
aam
hlt
jmp
pop
pop
mov
test
adc
jg
call
adc
jae
outsl
pop
jl
dec
lret
sub
test
fstpl
stc
pop
aaa
cli
cmp
mov
add
dec
jno
sahf
mov
push
lea
xor
decl
stc
fistpll
fmuls
jg
out
lahf
das
decl
lea
xor
mov
faddp
orb
iret
push
clc
mov
lcall
fdivr
inc
or
out
ljmp
cltd
cmp
cmpsb
and
mov
sbb
adc
add
xor
dec
es
fstl
pop
dec
add
popa
call
pop
add
push
xchg
or
mov
sub
insb
adc
adc
inc
nop
cmp
fbstp
call
shr
xchg
inc
inc
xchg
aaa
dec
mov
adc
lea
jb
mov
mov
adc
mov
push
mov
fstl
or
xchg
adcb
daa
lock
mov
sarb
vaddsubps
mov
movb
inc
jmp
jge
imul
push
sbb
repnz
cmp
add
pop
mov
mov
dec
adc
pop
mov
ljmp
xchg
rorl
mov
aaa
sahf
fsubp
push
jmp
mov
pop
pop
repz
mov
adcl
sub
dec
push
fdivrs
xor
clc
mov
in
mov
andnps
add
mov
ret
sub
jg
repz
mov
dec
decl
dec
sub
cli
xorb
insb
jnp
push
cmp
lock
shlb
mov
push
lock
jge
lods
mov
decl
rorb
mov
iret
mov
sub
add
outsb
sub
sbb
sub
cli
jmp
ficoml
insb
dec
nop
sub
sub
add
lea
mov
movsb
cmpsb
cmp
andb
jmp
xor
mov
sub
adc
inc
mov
ja
cld
mov
mov
nop
incl
data16
popa
push
in
repnz
pop
mov
aas
dec
sub
out
out
mov
jmp
add
popl
jecxz
in
inc
xchg
xchg
aad
mov
and
sbb
ret
negb
std
subl
inc
mov
fs
into
jmp
jb
mov
dec
adc
je
incl
imul
push
cli
xchg
dec
out
xchg
and
xchg
insb
test
jmp
jno
decl
sbb
stos
call
int3
pop
push
fdiv
ja
add
and
sbb
test
lahf
cld
dec
hlt
jge
add
aaa
lret
lret
push
fiadds
pop
and
or
pop
mov
pop
pop
fisttps
mov
nop
sahf
xor
loopne
decl
add
mov
push
lods
mov
xlat
nop
cmp
hlt
decl
cmpsl
fiadds
and
sbb
ljmp
loop
popf
mov
pop
out
in
mov
mov
stos
std
dec
aas
dec
inc
mov
add
xchg
cmpsb
cmp
pop
push
pop
pop
push
std
add
test
leave
gs
push
aas
pop
cmp
adc
pop
adc
jg
stc
rcpps
aas
push
les
lock
jb
mov
cmp
push
pusha
sub
mov
in
pop
xchg
jg
fwait
loope
out
sbb
or
mov
arpl
movsb
pop
xchg
mov
fwait
sub
or
jb
call
insl
stc
scas
or
ficompl
dec
sub
mov
test
push
popa
gs
cmp
or
inc
jecxz
ljmp
xchg
aam
cmp
jno
xchg
les
pop
pop
push
fdivl
test
fmul
cmp
gs
setno
mov
push
lret
and
imul
inc
sub
mov
out
js
jmp
and
mov
sbb
push
or
and
xchg
cmp
repnz
das
clc
jle
add
rorb
jno
pop
or
mov
cmp
add
fistpll
cmp
sub
dec
push
dec
inc
icebp
dec
mov
call
loopne
mov
outsl
mov
movsb
gs
adc
jl
andb
outsl
inc
ds
das
lcall
and
pushl
mov
sub
int
inc
adc
cmp
mov
inc
popf
jl
add
mov
pop
cli
mov
dec
xchg
inc
xchg
push
repnz
clc
incl
aam
outsb
inc
test
insl
lock
ja
popf
dec
sbb
add
lahf
orl
int
nop
stc
shlb
je
into
loopne
decl
cmc
es
lret
aad
mov
add
movsl
int
test
lcall
add
sahf
out
popa
test
gs
pop
push
and
push
pop
sbb
clc
jmp
lcall
leave
jae
insl
sbb
fsubrl
test
fbld
out
clc
call
cwtl
pop
shr
xor
mov
mov
xchg
and
sub
ljmp
sbb
mov
xchg
nop
lock
test
sbb
ret
adc
aaa
xor
xchg
jmp
adcl
mov
mov
dec
inc
data16
push
pop
mov
xor
xchg
cli
jle
lock
mov
addr16
pop
hlt
sub
sub
fisttpll
and
sub
fiadds
and
dec
inc
ja
stos
push
dec
jbe
pushl
imul
dec
mov
jp
arpl
daa
scas
push
cmpsl
add
xchg
xor
mov
jns
sub
cld
dec
and
lcall
addr16
and
imul
daa
push
dec
fwait
xchg
add
lods
fcmovne
gs
mov
stos
fdivrl
sahf
repz
ds
ret
mov
fsubrs
xor
and
test
mov
outsl
and
mov
pop
pop
loopne
jnp
sbb
jg
ret
dec
insb
jg
stos
pop
sti
andb
dec
call
push
jo
mov
push
std
lcall
lock
aad
jge
jecxz
test
jle
movsl
xor
ja
pop
mov
add
ljmp
add
popf
movsl
adc
scas
push
push
adc
cltd
inc
int3
add
add
jmp
fistps
leave
cmpsl
scas
ss
shlb
imul
adc
das
and
push
imul
ss
jno
push
add
fildl
sub
andl
jg
jmp
data16
xlat
mov
dec
and
and
push
mov
sti
sbb
dec
or
cmp
xlat
cmp
ja
cmpl
sbb
cmp
ljmp
lret
out
add
cmp
or
lahf
mov
dec
mov
incl
adc
es
xor
lea
dec
aaa
pop
repnz
das
adc
sbb
int
out
movb
out
ja
mov
incl
cld
std
pop
aas
jmp
pop
mov
sbb
inc
dec
and
mov
cwtl
out
fxch
js
add
std
jmp
add
repz
jg
ss
sahf
scas
out
shlb
pmulhuw
cld
cltd
js
xor
pop
pop
mov
sub
pushl
cmp
jge
cwtl
mov
popa
or
mov
sub
xor
cwtl
in
ss
dec
sub
incl
push
add
mov
pushl
cmp
aad
shll
cmp
mov
mov
mov
push
inc
lds
fistpll
mov
pop
es
pushl
xchg
mov
bound
popf
lret
enter
push
shl
pop
sbb
arpl
dec
icebp
js
jbe
push
call
loopne
daa
push
loop
or
inc
mov
in
addr16
cmp
mov
inc
pop
or
cld
call
rorl
mov
lret
mov
in
testb
jmp
mov
jge
xor
adc
mov
push
pusha
outsb
cld
das
and
pop
xor
repnz
xchg
lahf
ljmp
or
das
outsb
jmp
and
pop
sti
mov
push
jbe
xor
incl
aad
cmpb
pop
or
jmp
enter
fistpll
sbb
sbb
repnz
push
or
fisttps
out
jo
sub
jg
push
aad
mov
mov
inc
incb
cmpsl
jnp
jae
std
lea
and
aas
and
lods
push
push
aad
and
jle
clc
dec
in
xor
mov
pop
mov
jg
push
or
xchg
mov
xchg
push
dec
push
push
ret
pop
mov
in
js
es
clc
jmp
idivl
pop
jbe
pop
mov
sub
xchg
inc
aas
jnp
filds
push
push
ret
mov
mov
inc
add
jp
stc
syscall
inc
fisttps
int
cmp
loopne
fmull
xor
pop
filds
add
mov
mov
mov
jg
mov
lcall
adc
les
fwait
movsl
daa
push
sub
fld
push
inc
sbb
or
mov
test
mov
imul
add
lock
jecxz
call
cmp
adc
rcrl
scas
aas
or
and
stc
pusha
push
das
pop
and
fdivrp
xchg
push
leave
popa
aaa
xchg
sub
xchg
jno
sbbl
dec
aam
add
daa
sub
decl
inc
xor
mov
bound
insl
mov
push
data16
mov
fwait
incl
std
jae
fdivl
sbbl
imul
inc
test
shlb
mov
arpl
jne
decl
test
test
xchg
xor
jecxz
pop
xor
mov
mov
scas
pop
or
faddl
fwait
mov
fists
jg
loopne
jb
pop
xchg
dec
scas
lcall
out
mov
push
loope
xchg
cld
lcall
aad
sub
pop
add
cltd
js
mov
fs
jmp
lahf
jne
and
inc
inc
testb
aaa
inc
dec
or
call
divb
mov
push
inc
or
sbb
mov
xchg
add
inc
adc
incl
pop
push
in
push
xlat
sarl
dec
mov
pop
xchg
mov
lahf
es
and
mov
jmp
adc
in
pop
add
cwtl
insl
xchg
inc
out
adc
xchg
mov
loope
call
dec
dec
adc
sub
std
insl
pop
call
push
push
lods
icebp
loop
mov
vpmaddwd
xor
ja
jns
je
rcrl
shr
nop
push
push
jno
pushl
ja
div
push
repnz
arpl
nop
xchg
and
push
pop
sub
pop
pop
cmc
add
xchg
xlat
cli
aas
mov
movsb
test
scas
gs
mov
xchg
or
dec
shlb
xor
and
jp
stc
pop
pusha
mov
pop
iret
push
loope
jecxz
mov
decl
mov
cmp
pop
ret
popf
xchg
aad
dec
ret
adcb
jecxz
jecxz
mov
clc
jmp
dec
sbb
cmp
and
add
xchg
jge
inc
call
add
loop
test
pop
xor
mov
mov
xchg
jge
mov
insb
or
pop
ja
lods
ljmp
cli
inc
outsl
adc
pop
dec
push
ret
jmp
out
mov
mov
and
adc
cld
cmp
mov
ret
xchg
cmc
fcomps
jnp
iret
jg
push
loopne
dec
xchg
lcall
sub
ljmp
shll
mov
mov
les
icebp
lea
push
das
pop
cmc
inc
cld
incl
loop
scas
dec
inc
dec
jecxz
bound
push
lods
testl
inc
push
stc
pop
mov
mov
cld
repz
sub
cmc
cltd
ss
pop
inc
pop
jg
pushl
lret
xor
cmc
pop
push
pop
cmp
popa
enter
jbe
movsl
hlt
jmp
mov
mov
das
inc
je
mov
mov
ljmp
icebp
in
ljmp
iret
cmp
cwtl
lea
xchg
sbb
inc
mov
add
scas
push
and
pop
xchg
pop
lds
or
daa
fidivl
decl
mov
and
decl
push
ljmp
mov
mov
call
push
or
stc
loope
xor
inc
or
mov
mov
push
mov
jecxz
std
aam
call
repz
pop
dec
push
subb
gs
and
subl
subl
out
pushl
pushf
and
push
ficoml
in
mov
nop
test
cmp
es
jo
scas
in
dec
movsb
pushl
ja
cmp
mov
or
mov
mov
loop
in
icebp
stc
and
loopne
jmp
aaa
sub
pop
repnz
nop
cli
shrl
jmp
repz
and
xor
xor
in
add
jno
and
cltd
jl
sti
bound
lahf
pop
rorb
lcall
mov
or
cmp
or
or
ret
cmp
jo
decl
in
outsl
jg
add
push
push
arpl
inc
jno
or
ds
xorl
jge
add
lock
inc
je
aas
stc
pop
enter
xor
inc
icebp
js
add
jne
repnz
shll
jmp
lods
fdivrs
xchg
test
mov
xchg
arpl
adc
sbbb
call
mov
mov
aas
roll
out
call
incl
aad
pusha
jp
nop
in
sub
dec
add
mov
cli
mov
ljmp
dec
ds
pop
xor
divps
jg
pushl
ret
lahf
adc
out
mov
xor
cmp
dec
push
cmc
cmpsl
mov
add
jmp
movsl
xchg
xchg
sbb
pop
mov
incb
xchg
cmpsb
ret
adc
fldl
pushl
imul
cmp
cmp
clc
rcrl
cmpsl
or
in
jnp
out
jns
scas
incb
or
jns
pop
push
pusha
mov
pop
add
lcall
outsl
mov
mov
mov
fnstcw
jle
xchg
psubsb
inc
or
cltd
jb
xor
scas
aaa
faddp
jns
adc
pop
dec
push
rcl
sub
cmp
lock
cmp
and
mov
pop
outsl
decl
int
out
std
jno
jb
cltd
jp
cmp
pop
lods
adc
pop
and
sub
fcos
inc
mov
repnz
and
pop
and
aam
push
leave
ljmp
mov
cmp
and
movsl
push
stos
movl
xor
jmp
add
jp
or
cmc
mov
pop
js
add
pop
into
hlt
cwtl
sub
jnp
fistpll
dec
jb
hlt
mov
scas
jne
add
push
pop
and
lcall
jg
cwtl
and
adc
lcall
xchg
jae
pop
mov
jp
cmc
iret
ret
adc
jl
pop
aas
stc
pop
jge
ds
mov
cld
mov
mov
out
and
sbbl
inc
ss
xchg
into
roll
push
jno
push
shlb
jecxz
inc
imul
js
dec
xchg
cltd
lea
cmp
rcrl
mov
aaa
imul
hlt
pushl
dec
cmp
dec
xor
inc
outsl
sahf
mov
push
insb
js
bound
or
mov
push
aas
insl
pop
sub
enter
orb
mov
sub
jae
incl
and
outsl
inc
iret
fwait
pop
pop
stos
into
pop
dec
xor
add
stos
mull
pop
cli
test
inc
and
cmpsl
xchg
xor
ficoms
pusha
sbb
inc
sub
jmp
sub
out
nop
jne
std
dec
dec
sub
push
jne
loopne
xor
add
adc
cli
and
enter
decl
incl
repnz
mov
mov
push
shl
fisubl
clc
mov
inc
out
data16
jne
cld
test
mov
and
aas
fisubl
push
int
mov
inc
jno
and
pop
pop
jge
aad
call
push
xchg
in
adc
stos
push
xchg
xchg
mov
cwtl
xor
mov
movsl
dec
mov
jmp
pop
jp
dec
or
cmp
repnz
add
mulb
pop
roll
push
xor
jge
pusha
aaa
add
test
pushl
shlb
adc
push
fadds
mov
ja
add
mov
pop
outsb
and
pop
sub
xchg
cmp
dec
mov
sbb
jmp
xchg
xor
and
push
repnz
push
sub
jmp
cmc
or
inc
add
cltd
jnp
mov
xor
ljmp
ss
jg
out
repz
xchg
mov
jmp
std
mov
es
add
inc
movsl
cmp
aas
aaa
sub
fsubrl
call
xchg
lret
push
ja
xor
jle
leave
xchg
lods
mov
jno
push
jnp
cs
call
stos
xchg
push
dec
test
ud0
xchg
or
repz
dec
inc
xchg
sbb
ds
pusha
std
mov
mov
mov
pop
ss
ljmp
lcall
and
mov
push
and
jo
jle
push
fimuls
adc
mov
or
mov
mov
sub
mov
imul
lock
inc
dec
out
cmpsb
std
adc
jle
rorl
icebp
sub
jg
subb
mov
fists
repnz
sub
xchg
sub
cmp
leave
mov
popf
sbb
outsb
pop
lcall
iret
cmp
inc
push
pusha
pop
adc
inc
dec
test
jo
leave
inc
cld
mov
sub
sub
inc
lar
lds
push
jmp
adc
pop
loop
xor
dec
je
xchg
push
ret
cld
dec
sub
and
out
nop
dec
mov
xchg
push
ss
mov
insb
mov
xchg
ret
mov
sbb
ljmp
test
sahf
movsb
popf
lock
xchg
loop
mov
inc
jbe
imul
lcall
in
out
jp
inc
inc
mov
sbb
mov
adc
loop
push
pop
sbb
jmp
in
loopne
loope
daa
jae
std
in
fstpt
jno
icebp
add
aad
add
jg
xchg
xor
pop
nop
pop
inc
leave
jl
and
mov
dec
popa
rcrl
and
pushl
divl
decl
and
push
out
inc
test
mov
fsubl
iret
aam
cmpsb
hlt
sbbb
and
or
rcll
cmpsl
scas
cwtl
mov
mov
cmp
cmp
ds
andb
enter
cld
js
dec
lods
insb
xor
cmp
xor
push
nop
cld
call
in
or
jl
ficoml
lret
pop
jnp
filds
imul
lret
inc
or
sub
and
lods
test
fwait
jnp
xchg
pop
jg
mov
aad
mov
incl
adc
push
push
addb
test
dec
cli
jmp
jno
sub
lods
sar
ljmp
add
shlb
add
sub
push
filds
lea
sahf
ds
pop
hlt
orl
iret
inc
mov
inc
ljmp
push
cmp
call
xchg
xchg
sbb
xchg
jge
lods
js
sahf
jnp
jmp
loop
mov
ss
test
insl
push
daa
lahf
mov
xor
ljmp
add
inc
pop
scas
jecxz
fnsave
inc
and
imul
fnsave
xchg
adc
lcall
add
sub
jo
imul
out
aas
idivb
cmpsb
mov
rorl
and
and
cmp
cmp
dec
mov
cmpsl
mov
imul
jns
xchg
fsub
aad
iret
jmp
scas
ret
add
cmp
test
pop
inc
lahf
clc
mov
inc
dec
jno
dec
add
icebp
pop
dec
push
xchg
in
pushf
stos
fdivr
ljmp
out
loopne
stos
es
rcrl
test
dec
mov
mov
add
add
rolb
scas
dec
stc
das
mov
mov
push
sub
pop
call
lock
xchg
or
sub
xchg
incl
nop
enter
pop
pop
add
aad
push
pop
cmpsb
test
aad
or
mov
in
in
add
roll
or
xor
dec
lcall
lods
jae
mov
adcb
add
cmpsl
addr16
mov
dec
fsubl
ljmp
aad
aam
idivl
fdivr
push
fprem1
insl
xor
lcall
outsb
mov
push
ljmp
cmpsl
or
dec
sub
xor
aaa
movsb
sahf
wrmsr
inc
pop
mov
in
lcall
and
dec
pop
push
adc
loopne
cli
xor
xchg
inc
loopne
pop
bnd
mov
xor
cmp
inc
inc
das
in
inc
aas
pop
movsb
repz
inc
mov
jmp
fistl
adc
movsb
out
clc
xchg
ret
test
pop
sbb
sub
int3
adc
dec
cld
je
push
sbb
sub
xchg
mov
push
add
mov
add
and
into
add
paddusw
stos
das
sub
pop
sahf
rcr
pop
jecxz
insl
jmp
jg
fs
call
pop
inc
popa
dec
outsb
sub
loopne
dec
ljmp
and
xchg
sub
or
xor
fcoms
cmp
iret
or
cltd
jle
or
jecxz
pushl
test
insl
sbb
insl
pop
outsl
sub
cmp
leave
jne
cmp
push
push
mov
sub
or
xchg
dec
incl
enter
and
aas
pusha
call
mov
mov
pop
and
xchg
sbb
nop
mov
sub
ljmp
jbe
cs
daa
jbe
jp
mov
sbb
mov
jl
mov
incl
xchg
xbegin
pusha
dec
mov
mov
rcrb
lret
adc
jns
adc
decl
or
sub
dec
cmp
fstl
jge
test
jmp
out
and
mov
insl
jne
test
fsts
stos
addr16
ljmp
scas
cs
hlt
mov
xor
mov
aad
das
arpl
les
js
movsb
loopne
stos
mov
push
popa
stos
sbb
lret
rcrl
and
adc
imul
and
repnz
call
xor
xor
mov
lods
out
add
insb
mov
push
and
pop
testl
pop
dec
das
mov
push
cld
fistl
fiaddl
sbb
mov
dec
hlt
or
loope
mov
ret
add
mov
call
sahf
stos
data16
sbb
or
das
sbb
decb
pushf
aaa
shlb
int3
add
ljmp
imulb
cwtl
nopl
cli
dec
jno
lcall
into
iret
ljmp
ja
add
xchg
pop
mov
and
cli
mov
and
lret
add
lock
lcall
imul
mov
xchg
mov
jg
fisubl
cmp
and
sub
incl
cld
inc
mov
push
push
cmc
inc
mov
fldl
mov
fdivs
sbb
shl
or
pop
sub
shll
ret
push
in
mov
incl
push
pop
out
stos
imul
jbe
enter
mov
mov
dec
out
pop
push
dec
inc
push
cmp
cmp
sarl
and
inc
cld
lcall
jmp
sub
loopne
mov
inc
adc
jg
jno
js
jae
arpl
cwtl
cld
xchg
lcall
ja
adc
mov
cmp
add
rcr
xchg
or
fstl
fstl
mov
mov
cmp
jg
ret
arpl
test
push
and
xor
mov
pushl
ret
push
push
fmuls
into
mov
push
sar
decl
jmp
sub
or
lods
adcb
aam
add
jg
enter
inc
shll
cmp
adc
jmp
or
insl
sbbb
inc
xor
out
dec
inc
gs
insb
mov
cmp
daa
cmp
sub
jl
pop
mov
decl
jle
unpcklps
cli
or
pushf
je
pop
outsb
add
mov
incl
cmp
repz
loopne
lret
lahf
test
dec
hlt
jmp
cmpsl
lcall
dec
pop
in
ret
mov
repz
add
test
adc
dec
mov
decl
sub
in
in
pop
push
aad
pop
in
pusha
and
icebp
add
lcall
aas
inc
fwait
jns
jmp
dec
and
jle
mov
jne
mov
call
xchg
pop
out
or
mov
test
out
fistps
jnp
pop
es
mov
stos
jmp
arpl
stos
jb
jecxz
inc
adc
out
pop
push
jmp
mov
sbb
mov
out
inc
sbbb
sub
movsb
xchg
ljmp
ret
push
ljmp
dec
pop
or
sarb
mov
push
mov
add
stos
mov
or
movsb
mov
leave
cmp
inc
mov
cmpsb
cmp
daa
mov
lock
dec
ror
je
test
mov
inc
shr
and
pop
mov
dec
lret
icebp
out
lods
shr
loop
adc
inc
pop
lods
mov
sti
sub
adc
mov
pop
movsl
mov
inc
or
roll
adc
inc
test
test
mov
xchg
dec
popa
xchg
gs
inc
or
push
jp
mov
pop
gs
decl
repnz
xor
sbb
push
or
out
in
xchg
push
aaa
inc
clc
xor
dec
or
mov
and
adc
dec
fsubrl
cmpl
mov
ss
in
xchg
and
pop
rcrl
xchg
mov
js
stos
insl
pushf
clc
jmp
add
lahf
in
cmp
cmp
std
push
mov
mov
outsb
test
mov
xchg
out
add
shll
cmp
movl
or
mov
lcall
mov
cmp
push
pusha
inc
adc
dec
add
cmpsb
inc
push
loop
lds
jmp
mov
mov
iret
mov
cli
pop
push
adcb
push
mov
inc
and
iret
or
stc
bound
jg
or
test
subb
pushl
lret
loopne
cmp
mov
push
je
cmp
pop
pop
or
das
pushl
mov
hlt
mov
or
adc
mov
xrelease
not
call
adc
in
cmpsl
sbb
push
xchg
pop
cmp
jmp
sbbl
jg
loop
push
pop
cmp
pop
pop
dec
mov
lcall
stac
pop
fwait
mov
sbb
into
inc
push
in
push
cmp
push
incl
cltd
xchg
lahf
push
ljmp
dec
movb
das
cmp
and
push
adc
std
jmp
add
mov
in
mov
jne
pop
fcomip
jg
push
sbb
int3
jbe
mov
pop
mov
test
push
push
ljmp
xor
jmp
push
fistpl
divl
in
cmp
jg
ss
jle
push
gs
push
stos
dec
repnz
push
divb
xchg
hlt
js
aam
movsb
or
adc
subb
jo
jg
scas
lods
mov
add
mov
sbb
das
lret
push
and
mov
push
test
mov
test
pop
loopne
jecxz
fmull
cmp
inc
push
incl
or
stos
cmpsl
pop
jbe
push
sbb
jo
mov
pop
mov
adc
sti
add
jmp
out
jle
ret
lret
add
xor
fwait
ss
adc
dec
decl
mov
cmp
or
ja
jo
add
gs
cmpsl
pop
jb
ljmp
cmpsb
fadd
mov
ljmp
nop
mov
insb
js
les
mov
ljmp
lcall
aad
mov
lcall
or
loopne
scas
dec
pop
rorb
jle
fisubrl
incl
xchg
cmc
test
push
ss
jecxz
pusha
jl
aad
jmp
sbb
mov
nop
mov
push
xchg
outsl
jl
test
lret
aam
leave
test
inc
mov
adc
outsl
ljmp
jo
push
push
arpl
loopne
loope
mov
push
or
add
sbb
mov
adc
fmull
repnz
test
pop
outsb
sub
cmp
stos
add
ljmp
jle
mov
repnz
xchg
and
add
inc
adc
ljmp
mov
bound
cli
pop
mov
test
fidivs
xchg
out
or
scas
or
mov
or
xchg
mov
push
pop
lds
lods
jl
and
incl
jmp
adc
shlb
js
adcl
and
loope
cltd
mov
enter
mov
push
mov
shll
sub
xchg
xor
ljmp
aad
pop
push
inc
mov
fdivrp
decl
out
fdivl
xlat
shlb
popf
push
jnp
popf
test
jmp
incl
pop
lret
and
push
dec
add
push
out
or
or
adcb
and
pushl
ficoms
xchg
and
imul
sub
les
mov
inc
jae
cmp
jmp
pop
pop
push
adc
aam
jbe
xor
jno
adc
jmp
call
jg
mov
fwait
push
test
call
shl
inc
lcall
cmpsl
and
pushl
arpl
addr16
push
adc
dec
fbstp
in
xchg
jb
cmpsb
loopne
stos
pop
inc
andb
lods
mov
mov
cld
or
sub
arpl
cli
mov
inc
mov
in
xorl
mov
mov
mov
iret
clc
cmovne
mov
adc
enter
pop
into
orl
push
divps
decl
sahf
cltd
inc
or
in
outsb
icebp
mov
pop
sbb
decl
pop
push
lcall
mov
mov
mov
fmuls
inc
sub
inc
pusha
in
decl
mov
pop
out
cmp
mov
mov
fsubs
pop
mov
push
jmp
ljmp
loope
add
push
rcrb
push
adc
inc
es
dec
scas
cmc
or
cmp
incl
or
iret
mov
enter
cmp
aas
adc
and
cmc
scas
jp
cmp
adc
and
adc
cwtl
imul
cli
push
mov
scas
jp
xor
jmp
inc
mov
fs
dec
adc
mov
adc
push
mov
push
xchg
outsb
das
test
lret
jmp
std
cli
add
mov
icebp
pop
mov
push
sbb
pop
mov
shlb
lcall
outsl
clc
jmp
dec
or
pusha
shl
xor
inc
aad
mov
ljmp
pop
inc
lea
push
dec
sbb
pop
jle
mov
lcall
repz
jmp
nop
fnstenv
pop
xchg
or
ss
in
test
mov
mov
add
bound
frstor
cmp
stos
sub
inc
mov
sarb
insl
aam
inc
int
movsb
mov
inc
xchg
jns
push
cmp
jmp
rol
xchg
xchg
xor
jge
lret
push
push
subb
sbb
lods
fstp
call
aad
cli
sub
and
and
ds
imul
xor
in
sub
cmc
or
inc
in
dec
rorl
dec
jb
pop
gs
adc
das
add
mov
jecxz
xchg
leave
movsl
lret
fdivrl
push
insl
mov
lahf
movsb
jbe
xchg
pushl
jle
out
push
cmpsb
adc
sub
repz
mov
out
pop
mov
out
or
ljmp
outsl
jne
std
or
out
cmp
addb
pop
stc
mov
mov
das
lods
sub
xchg
imul
pop
cmp
ficomps
cmp
into
pop
cmp
pushl
push
cld
pop
pop
add
mov
testb
mov
sub
lock
mov
lcall
pop
jge
mov
jmp
pop
jns
es
mov
testb
bnd
subb
jnp
out
subb
inc
stc
dec
rorl
pop
rorb
push
add
bound
dec
sub
std
mov
and
cmpsb
mov
sub
jg
inc
aam
sbb
xchg
xchg
popf
and
mov
sub
push
inc
add
cmp
test
shrb
adc
jae
pop
jecxz
push
ljmp
jb
call
call
int
shlb
mov
pop
xor
fadds
scas
loope
mov
scas
mov
in
sbb
pusha
mov
pop
call
rcr
push
inc
subb
jb
push
outsl
pushl
pop
aad
scas
mov
push
jae
stc
cld
dec
adc
repz
lock
inc
fisubs
es
mov
cvtdq2ps
jle
shrb
out
popf
xchg
lcall
enter
shll
mov
or
jns
adc
cwtl
adc
or
stos
lds
cmpsl
xor
es
sbb
ret
mov
mov
dec
shrl
jl
lret
dec
test
mov
sbb
imul
call
test
xor
mov
push
lcall
mov
push
outsb
pushl
xor
in
cmp
fstps
sub
mov
insb
mov
pop
pop
stc
xor
or
loope
jmp
jecxz
pop
sbb
rcll
ljmp
call
sti
arpl
mov
jb
cli
jbe
cli
mov
adc
lods
push
icebp
push
mov
ljmp
inc
incb
push
jmp
jp
in
ds
xchg
inc
push
and
cwtl
outsb
mov
ja
sub
das
gs
xchg
xor
stos
data16
leave
les
jbe,pt
sbb
mov
xor
iret
into
in
lods
fmull
jg
lods
negb
fdivl
adc
cmp
shl
add
jmp
mov
lahf
push
cmpsl
and
and
xchg
adc
out
dec
imul
lea
jg
decl
mov
addr16
sti
inc
inc
cmp
add
pop
out
pop
loop
icebp
dec
roll
fdivs
lret
stc
lods
dec
jns
call
test
pop
cmp
jns
sub
test
sbb
lods
orl
sbb
jo
fistpll
adc
test
jb
sbb
adc
pop
scas
add
fbstp
and
mov
adc
movb
mov
xchg
arpl
out
jo
in
fdivr
ficompl
pop
clc
push
pop
fidivrl
outsb
xor
in
call
and
out
and
cmp
jecxz
and
xor
xor
movsl
mov
xor
jmp
mov
mov
jmp
or
pop
mov
in
sub
stos
je
js
and
lcall
out
stos
xchg
pop
mov
rcl
sbb
dec
mov
sahf
mov
mov
sbb
jp
cs
inc
xor
mov
ja
and
cmp
cs
in
jns
xor
or
rcrb
int3
or
mov
cli
push
into
addb
jmp
ds
je
cmp
sbb
sbb
inc
fwait
cmp
mov
fwait
sbb
jg
cmpsl
jle
out
jle
ds
or
cmp
sbb
mov
jge
jge
mov
lcall
push
jp
sub
push
and
cltd
lret
gs
sahf
inc
fistl
in
loopne
mov
clc
ss
or
adc
lahf
xor
movsl
sbb
jmp
jmp
mov
call
and
leave
mov
ficoms
or
aad
int
pop
repz
push
in
adc
jmp
mov
testl
cmp
mov
inc
es
adc
add
or
ret
jmp
jb
xor
scas
sub
dec
rorb
les
or
xor
mov
sub
lea
fnstenv
mov
ljmp
push
xor
dec
test
lods
pop
jle
mov
mov
pushl
or
add
cmp
ljmp
mov
movsl
dec
adc
ljmp
outsl
outsl
fs
clc
dec
add
mov
lahf
std
nop
jb
call
aaa
jmp
jp
rorb
ljmp
sub
mov
inc
lods
xor
fsubr
fisttps
test
in
std
inc
ret
inc
xchg
adc
and
xlat
jge
test
jns
jbe
mov
faddp
pushl
cli
xor
lret
jge
int3
movsb
sbb
stos
pop
nop
xor
and
push
out
sar
ljmp
roll
pusha
dec
in
lea
xchg
xchg
dec
in
push
mov
and
call
hlt
push
jmp
int
ljmp
mov
jecxz
jg
jg
mov
xchg
repz
das
loope
loop
sarb
decl
fistpll
mov
repnz
or
nop
fcos
jg
or
jle
cmp
bound
pop
fisttps
dec
push
cmpsb
mov
stc
push
shrb
jmp
mov
jnp
mov
repz
xor
outsl
cmpsb
fidivl
pushl
shll
sub
and
inc
xor
enter
insb
jmp
and
scas
mov
xor
adc
aas
lahf
cld
das
cwtl
incl
and
mov
jo
mov
push
std
ljmp
shl
cs
ljmp
je
lea
xchg
loope
xor
and
xor
ud1
cmp
enter
cmp
mov
xor
aaa
filds
cld
ror
arpl
mov
outsb
arpl
sbb
jmp
mov
jo
push
sub
sub
dec
movsb
stos
adc
out
lea
add
cmpsl
cmc
incl
imul
rorl
ret
mov
sbb
push
mov
call
test
sub
lret
push
add
jmp
xchg
nop
addr16
stos
ret
jbe
add
flds
jmp
xor
sbb
repz
in
out
push
lret
adc
in
fs
pushl
jg
adc
jg
and
inc
add
and
iret
fbld
sub
and
loopne
aam
pop
imul
or
jg
lahf
int3
into
fsubrs
out
sbb
scas
ss
clc
ljmp
pop
dec
mov
fwait
sti
mov
xor
and
out
js
jmp
loop
sahf
sbb
cli
or
xchg
inc
add
xor
fisubrs
sbb
shrb
ja
mov
jg
xchg
clc
xor
cwtl
inc
xchg
pop
jge
xor
adc
jg
dec
pop
or
push
rcr
in
and
sub
push
mov
aaa
test
vmptrld
or
push
mov
repnz
test
std
ljmp
cli
nop
pop
lret
aas
and
and
pop
mov
stos
ret
mov
pusha
sub
jg
daa
xchg
js
adc
pop
out
mov
fnstsw
jnp
mov
cltd
inc
in
xchg
add
xchg
inc
add
ret
lock
jg
inc
add
gs
bound
jle
shr
push
iret
in
in
inc
ret
lcall
add
dec
out
add
adc
lcall
gs
daa
in
inc
push
push
data16
lods
cmc
lcall
mov
aas
int3
inc
pop
pop
mov
cmp
mov
mov
pop
incl
imul
xchg
imul
lds
test
mov
adc
lds
jmp
popa
cld
incl
pusha
lods
rolb
inc
insb
leave
xchg
add
jb
jg
hlt
lret
in
stc
xor
pop
mov
cs
cmp
xchg
and
jg
cmc
xor
mov
mov
push
cmpsl
add
decl
fldl
mov
xchg
aad
xchg
mov
xchg
xchg
xor
aaa
leave
mov
pop
lcall
scas
inc
cli
stos
dec
add
dec
test
or
jmp
aad
ljmp
cli
fildll
sbb
dec
mov
cs
xchg
lret
int3
cmp
ret
les
cld
inc
ljmp
js
lds
outsl
fcomps
aam
sub
add
addr16
cmc
js
mov
outsb
idiv
in
mov
inc
push
movsb
cmp
jns
gs
in
cltd
stos
xchg
aad
fmuls
sub
add
test
cmp
and
pop
pop
sahf
cli
sbb
sahf
mov
xchg
mov
lods
lcall
sbb
aam
jl
pop
subl
jg
pop
aam
into
inc
pop
mov
cmp
lret
repnz
cmpsb
pop
inc
pop
mov
pusha
xor
mov
icebp
call
mov
xchg
test
sub
ds
sbb
rcr
lock
cli
sub
xchg
ljmp
inc
es
adc
repz
mov
cmpsl
cli
repz
add
mov
enter
scas
push
aas
icebp
inc
pop
add
mov
fisubs
dec
sub
out
popf
adc
loopne
mov
lods
mov
mov
lcall
call
ljmp
insb
pop
mov
xor
pushf
pushl
std
pop
jecxz
mov
cmpsl
test
ret
clc
test
mov
decl
hlt
inc
movsl
xchg
adc
xchg
pop
lcall
test
xor
dec
scas
mov
sahf
lcall
jle
mov
dec
adc
stc
data16
add
gs
cmp
jg
addb
xor
mov
leave
or
push
xor
aam
sbb
pop
mov
xor
sub
out
insb
andb
pushl
psubw
mov
mov
ds
sti
pop
ret
or
movsl
lret
inc
mov
out
push
insl
popl
add
push
jne
pop
or
or
out
popf
fwait
aas
sbb
cmp
adc
mov
cld
das
mov
jl
sub
mov
lcall
out
sbb
sub
adc
pop
popf
in
xor
stc
inc
idivl
aam
aam
bound
lcall
cld
pop
mov
jns
lcall
add
fcomip
push
fs
and
mov
lock
mov
es
or
sahf
popf
gs
sub
call
push
mov
gs
cmp
jns
movsb
call
into
push
stc
or
adc
pop
mov
fdivl
out
mov
xchg
dec
cld
pop
test
inc
outsb
add
pop
inc
stos
repnz
xchg
jnp
leave
jo
andl
mov
movsl
movsl
xchg
push
in
mov
aam
inc
insl
pop
mov
xor
pop
cld
or
ljmp
cltd
outsl
and
pop
cmp
loop
rorb
sub
cs
fldenv
call
lahf
test
jg
dec
daa
mov
mov
jge
outsl
sub
xchg
mov
orb
fcmovnu
sub
int3
dec
jmp
xchg
xchg
push
lods
ret
xchg
lcall
out
jmp
stos
fnstcw
mov
mov
or
ljmp
sar
cli
mov
scas
xchg
mov
pavgw
aas
mov
icebp
add
adc
or
pop
clc
push
xchg
int3
inc
jns
mov
push
orb
mov
pushf
cmpsb
rcl
cmp
lds
mov
lcall
sbb
js
xor
sbb
les
xor
movsb
sbb
out
and
ss
fwait
outsl
pop
int3
xor
pop
decl
leave
jg
pop
mov
or
pop
xor
imul
mov
ss
sub
xchg
pop
ljmp
leave
jbe
mov
clc
lcall
jge
out
pop
push
daa
pop
loopne
cld
xchg
mov
outsl
pop
loopne
lock
mov
mov
incl
mov
dec
inc
shlb
mov
dec
outsb
dec
divps
mov
call
inc
pop
vandnpd
mov
ss
sub
push
lock
loopne,pt
cmpsl
pop
cmpsb
or
call
stc
lea
or
cmp
sub
mov
ljmp
out
int
push
rcll
and
xchg
jg
and
idiv
pop
movsb
mov
mov
jg
push
cld
adc
scas
jnp
xchg
sbb
push
lret
call
pop
out
pop
iret
jae
lods
cmpsb
dec
pop
xor
adc
or
lods
cmp
outsl
and
fsubrp
aas
xor
push
inc
jb
insl
negl
mov
cld
das
inc
pop
popf
push
arpl
cmovo
or
decl
push
imul
mov
mov
push
out
cmp
idivl
decl
jg
cwtl
mov
hlt
fists
jg
movsb
pop
jp
cmp
je
add
push
incl
insb
inc
cwtl
jne
stos
mov
dec
jns
inc
fwait
cld
dec
xlat
jp
jbe
sub
and
xchg
fstl
inc
lock
stos
shlb
aas
push
jle
mov
cli
shll
jb
ret
hlt
pop
sahf
xchg
push
cld
dec
daa
xor
loop
adc
xor
mov
mov
push
inc
add
xor
jg
adc
jg
xchg
test
pop
xchg
or
fxam
dec
pop
aas
jg
pop
push
sbbb
mov
leave
decl
fidivrl
inc
mov
add
mov
repz
lds
inc
fstpt
add
jmp
lds
lea
push
cmp
push
adc
push
fscale
ljmp
sub
adc
adc
push
push
insl
incl
or
jnp
mov
lcall
fcmove
push
aas
insl
addl
pop
aam
pop
adc
data16
and
sbb
call
jl
mov
les
lahf
sbb
inc
push
popa
or
push
sti
es
popa
mov
jp
xchg
jmp
shl
popa
lock
shrl
mov
jg
fwait
daa
sbb
lods
data16
adc
push
pop
pop
jmp
pop
lahf
dec
sahf
cmp
insl
and
std
arpl
jmp
and
gs
lock
push
fstpt
sub
stc
xchg
cs
cld
ja
jp
shl
je
jmp
mov
pushf
fstps
mov
fistl
test
xchg
push
psrld
movl
inc
push
es
xlat
mov
fistps
xor
dec
xchg
ljmp
flds
loop
sbb
jg
jecxz
inc
sbb
cli
iret
cwtl
hlt
add
xor
cmp
push
jl
or
push
fidivrs
out
xor
push
mov
xor
xchg
test
sub
daa
ficoms
cmp
xchg
xor
mov
push
out
int
inc
mov
mov
cld
ljmp
outsb
aas
xchg
inc
decl
inc
es
fcoml
lods
mov
xchg
mov
add
jg
movsb
mov
fs
inc
dec
xor
aam
and
pop
mov
sbb
adc
jecxz
in
xchg
test
jg
stos
call
data16
in
outsl
loopne
jmp
and
dec
sub
and
mov
mov
xor
pop
mov
lock
fwait
ret
push
pushf
std
ret
dec
loopne
pop
or
sti
std
sub
aas
cmc
popf
and
xchg
mov
cmp
ljmp
and
nop
and
icebp
in
hlt
add
or
or
aas
sbb
sahf
mov
stos
int3
or
push
mov
cmp
test
jb
outsb
cmp
and
stos
pop
call
adc
sbb
and
sysret
pop
divl
cld
dec
decb
xor
mov
sbb
mov
lahf
aas
cmc
filds
dec
mov
ud2
add
mov
test
dec
fdivr
incl
stc
hlt
push
shlb
adc
xor
xchg
xchg
nop
fcomps
adc
push
in
test
int
popf
mov
mov
out
dec
xchg
test
pushl
mov
scas
jnp
sbb
fdivp
sbb
shrb
nop
inc
test
call
cmp
inc
xor
call
pop
rcr
js
nop
outsl
cltd
stc
dec
ja
and
push
call
xchg
mov
sbb
adc
mov
mov
je
nop
pause
push
notl
and
int3
mov
inc
jbe
repnz
jmp
pop
movsl
int3
das
in
jge
out
pushf
out
add
sti
xor
insb
aam
dec
inc
test
cltd
stos
lret
das
mov
pop
cmc
jmp
inc
clc
lahf
xchg
xlat
imul
jle
pop
lcall
rorb
mov
in
ret
das
pop
clc
adc
pop
xchg
inc
mov
or
adc
cmp
xorb
std
xorl
pusha
std
ljmp
add
loopne
fldt
mov
adc
pop
mov
mov
jp
sbb
push
xchg
icebp
adc
xchg
xor
test
sbb
jns
int
pop
sub
fisttps
mov
icebp
pop
cmpsb
lret
lahf
test
fnstsw
sub
cmpsb
ja
fistps
sub
sub
cld
jo
cs
testl
add
cmp
mov
adc
adc
jg
icebp
fcmovnb
mov
cld
xchg
lcall
testb
in
mov
cmp
movsb
test
sub
dec
ljmp
jg
xchg
mov
mov
cmp
mov
pop
add
incl
xlat
dec
adc
pusha
in
sbb
addr16
cmc
lods
cmp
in
rclb
aas
sti
test
sub
jae
fnstenv
add
mov
mov
loopne
push
sub
lcall
mov
or
mov
dec
nop
leave
into
xchg
ja
add
mov
jecxz
cmp
mov
pop
testl
xchg
jl
inc
insl
loope
pusha
lock
mov
cwtl
cwtl
iret
and
daa
call
int3
call
lds
es
pop
pushf
adc
ret
rcll
sub
mov
aas
or
inc
mov
lahf
rclb
aas
incl
aad
jl
ljmp
mov
pop
cmpsl
adc
jbe
jg
gs
nop
cmp
pop
pop
pop
mov
xchg
stc
paddsw
loop
jae
in
jb
jge
and
stc
cli
inc
pop
cmpsl
dec
cmpsl
jmp
adc
mov
mov
lret
push
sbb
sub
scas
ljmp
push
jbe
inc
lcall
sbb
aas
lea
mov
incl
push
mov
aam
add
out
mov
rclb
aaa
mov
sti
enter
out
add
mov
sbb
lods
cmp
and
xor
mov
cmpsl
lcall
idiv
xor
pushf
lds
mov
add
popf
mov
stos
adc
mov
cs
icebp
cld
pop
movsl
jae
mov
dec
fsubs
sbb
icebp
call
xchg
jne
jp
ja
sbb
push
clc
call
das
xchg
lahf
ds
push
rcrb
mov
clc
andb
mov
sub
test
cli
dec
enter
je
stos
jb
jp
push
out
push
test
push
fdivrl
mov
jmp
mov
push
lret
mov
fwait
test
or
cld
das
decl
test
outsl
push
fcompl
or
mov
pop
lock
jg
ret
ljmp
lcall
and
jnp
xor
xor
call
scas
mov
aas
mov
cmp
cmc
mov
add
mov
pop
pop
lret
fsub
add
adc
ret
cmp
jne
sbb
adc
mov
lock
daa
decl
int
test
inc
mov
inc
mov
sbbb
inc
scas
mov
jecxz
incl
inc
jg
out
fidivl
leave
imulb
rcrl
insl
mov
loop
push
mov
movsl
mov
mov
jmp
or
jp
sub
lcall
flds
cs
clc
fbld
lahf
xchg
mov
packsswb
ret
les
mov
mov
and
cs
outsl
mov
fwait
ljmp
jp
shl
int
das
inc
sub
imull
pop
mov
rol
out
js
cmpsl
xchg
or
pop
pop
into
jne
insl
jne
pop
fmull
leave
les
pop
push
out
pop
fdivr
out
xchg
add
pop
or
dec
mov
dec
aas
cmp
incb
lcall
dec
sahf
sbb
xchg
pop
hlt
mov
loop
jno
or
xchg
cmp
add
incl
popl
cmc
testl
sub
incl
fiadds
push
jbe
aas
insb
repnz
or
arpl
mov
mov
call
aas
cmc
daa
lret
cli
jecxz
mov
insl
daa
aas
jg
cmp
xchg
sub
pop
sub
jmp
scas
sbb
inc
ffreep
ret
pop
cmp
inc
pop
dec
cld
das
pop
aad
icebp
stos
cli
push
inc
dec
push
pop
inc
add
mov
repnz
jle
xchg
movsl
mov
scas
fwait
xchg
push
iret
pop
mov
mov
sub
and
push
dec
inc
ret
incl
mov
push
inc
ljmp
mov
jg
pop
jecxz
lret
adc
push
sub
sar
push
sub
xor
jne
sbb
and
out
xor
incb
sbb
jb
inc
ja
loop
inc
mov
dec
sbbb
mov
mov
push
jb
fcom
daa
and
repnz
push
mov
shl
andnps
cmc
std
bound
push
xchg
call
inc
insl
and
shrb
enter
cmpl
subb
xchg
adc
in
out
pop
inc
jmp
push
mov
ret
fucomi
pop
subb
bound
dec
push
bound
arpl
pop
loopne
rcr
and
and
ljmp
test
lahf
sbb
cmc
pop
shl
inc
dec
mov
jne
je
push
inc
ljmp
sbb
mov
aad
jge
or
and
dec
push
cmp
jmp
sbb
mov
insb
jg
insb
mov
xchg
stos
jo
inc
jo
jle
cmpsl
imul
ljmp
loope
push
pushf
sub
mov
imul
sbb
mov
push
jg
loop
xchg
dec
aad
push
inc
jae
mov
clc
lcall
pop
sbb
cmp
mov
and
add
mov
pop
and
dec
mov
pop
outsl
add
movsl
test
xor
adc
das
in
lahf
add
cmp
incl
lods
xchg
ds
mov
lds
cltd
enter
icebp
adc
cs
std
out
aas
or
cmpl
sbb
jmp
push
jl
inc
repnz
sbb
cld
mov
movsb
lcall
mov
jno
and
je
mov
rclb
shrb
addl
clc
sbb
scas
xchg
repz
ret
jg
sti
mov
inc
gs
inc
fstpl
inc
and
aas
clc
pop
je
fists
cmc
lds
clc
pop
xchg
mov
cmp
dec
into
inc
push
std
rcll
stc
add
pushf
sub
and
aam
jmp
ss
idivl
aas
pop
pop
cwtl
jns
xchg
in
outsl
cmp
out
andl
cmpsb
aam
movsb
jmp
mov
xchg
dec
ljmp
les
cltd
and
add
lret
incl
aad
je
jp
xor
ss
lods
fbld
fisttps
ss
cmp
icebp
jg
and
cmp
add
shlb
inc
lods
sahf
or
dec
pop
or
lcall
jg
movsb
sub
mov
cld
sbb
push
adc
mov
jp
mov
inc
push
sahf
movsb
push
mov
loopne
je
sarl
daa
lods
and
jg
add
mov
xchg
mov
mov
je
adc
pop
insl
mov
pop
icebp
jl
and
and
movntps
add
push
sbb
and
mov
add
pushl
mov
push
adc
rorl
subb
mov
xor
fbld
adc
scas
add
jmp
cmp
int3
lcall
std
push
das
jmp
cwtl
shr
sbb
lea
dec
loope
clc
call
mov
jmp
lea
fwait
adc
xchg
cmp
jae
inc
stos
adc
ret
lock
xor
sub
or
lret
mov
xchg
lahf
mov
fisttps
add
outsb
cpuid
push
inc
push
cmp
adc
jmp
pop
cmpb
pop
stos
xchg
inc
mov
pop
sub
cmpl
scas
iret
dec
xchg
inc
xor
add
lret
mov
aas
stc
pop
xchg
jg
lcall
mov
inc
or
lcall
and
jecxz
les
jp
sub
je
push
imul
push
xchg
inc
rcrl
incl
repnz
or
std
push
or
popa
xor
popa
scas
call
pop
movsl
incl
and
xchg
xor
decl
das
jae
cld
addr16
mov
add
mov
cmpb
mov
ret
cmp
jmp
sub
push
push
xor
xchg
jp
js
mov
int3
shl
sbb
incb
decl
dec
fildl
test
dec
fisubrs
sub
outsb
jg
cld
call
and
pop
outsl
shlb
int3
push
fisubrl
xlat
in
addr16
xchg
nop
inc
xlat
sarb
call
mov
scas
dec
mov
xchg
lds
push
fldl
pop
pop
pop
dec
and
mov
cmp
jmp
das
lret
push
sbb
add
cmp
pop
add
pop
xchg
stos
mov
mov
lret
pop
adc
mov
movsb
push
int3
es
lahf
jb
cmpsl
incl
cld
lcall
pushf
sar
jmp
xchg
push
xor
mov
into
pushl
call
xchg
cltd
loope
jno
pop
sbb
or
mov
push
outsl
push
mov
sbb
ljmp
jno
cltd
lods
xchg
mov
add
push
call
clc
outsl
push
test
mov
sarb
or
pop
push
mov
xchg
jns
pushf
jp
sbb
push
or
inc
jnp
push
clc
pop
sub
xchg
inc
jnp
clc
dec
incb
adc
hlt
gs
dec
scas
sarb
filds
in
xchg
fidivrs
cld
das
push
std
xchg
dec
dec
xor
iret
pop
add
or
and
dec
pushf
add
mov
aas
add
inc
shlb
jmp
mov
lahf
and
stos
push
lahf
sbb
jmp
insl
dec
cmp
std
incl
xchg
mov
xor
xor
sahf
dec
movsl
fstpt
pop
enter
lock
loope
push
jecxz
movsl
in
cli
pushl
inc
cld
fwait
lock
or
stc
ret
popf
mov
lea
icebp
test
xchg
int
and
pop
pop
inc
clc
or
mov
rcll
xorl
or
movntq
fidivrl
sbb
mov
and
push
pop
pop
sbb
inc
data16
hlt
movsb
std
out
xchg
jg
push
lret
pslld
xchg
lock
push
sti
sbbb
mov
enter
dec
in
push
and
aas
aas
and
inc
and
hlt
lcall
sbb
xchg
mov
jbe
xchg
lret
sub
data16
loope
push
adc
ds
pop
clc
pop
and
mov
cmpsl
aaa
push
or
add
cmp
push
or
sub
pop
int
hlt
xlat
mov
pop
imul
pop
test
or
incl
inc
mov
and
sar
ljmp
xor
mov
mov
stc
fcomps
xchg
test
push
mov
pop
lahf
insl
lcall
mov
int
std
shll
fimuls
push
bound
xor
clc
lcall
les
leave
pop
xchg
in
ret
cmpsb
mov
xlat
or
orl
jne
push
xrelease
sbb
rcr
cmp
adc
xor
mov
cli
pop
and
push
and
push
sbb
or
pop
mov
mov
or
incl
adc
loope
ds
cld
jb
sar
xchg
sbb
enter
sarl
mov
mov
popa
push
pop
cmc
xlat
push
add
add
adc
mov
popf
xchg
insb
dec
stos
pop
and
fisttps
inc
adc
xchg
into
lea
call
sub
xchg
jb
pop
push
mov
jmp
mov
pop
fadds
mov
jmp
incb
pop
int3
xchg
int3
outsb
mov
mov
or
mov
mov
pop
adc
rcr
add
pop
pop
test
cld
pop
in
mov
call
mov
adc
test
icebp
call
mov
sahf
mov
cltd
dec
inc
fsubrs
xor
lcall
inc
add
adc
mov
adc
pop
xchg
fbstp
lcall
incb
out
shlb
js
lds
inc
pop
lcall
icebp
cmpsb
mov
pop
std
inc
and
cmp
lock
mov
pushl
pushf
cmpsl
jge
in
pop
ret
mov
dec
mov
repz
leave
incl
ret
push
loop
push
enter
cld
dec
inc
mov
leave
fcoml
out
mov
loop
inc
and
in
pop
xchg
jno
lahf
dec
in
jg
imul
dec
jnp
mov
mov
mov
or
push
lret
mov
icebp
mov
jne
bound
ljmp
daa
inc
push
test
dec
movsb
lods
lahf
test
stos
mov
int
leave
and
adc
lcall
decb
insb
in
jns
inc
or
and
out
mov
xchg
mov
mov
jmp
add
and
js
jne
cmp
int3
dec
add
xchg
mov
test
iret
xchg
incl
shrl
aas
pusha
add
or
mov
inc
pop
mov
jns
pop
lock
adc
push
pop
lods
pop
jnp
call
es
xchg
shlb
je
dec
mov
shr
jnp
stos
pop
and
addl
mov
lds
jmp
lea
stos
mov
aad
sbb
cmp
push
jae
mov
imul
inc
ja
jg
push
push
jbe
cmp
in
nop
mov
dec
jecxz
incl
stc
mov
filds
aaa
pop
sar
clc
dec
jecxz
jg
and
add
adcb
mov
mov
or
sub
clc
push
sbb
dec
push
sbb
std
ljmp
add
loop
rcrl
test
mov
ret
call
jmp
jae
test
mov
xchg
mov
mov
rolb
inc
stc
inc
call
mov
ljmp
mov
repz
push
scas
ss
outsb
into
pop
pushl
cmpsb
cmp
fisttpl
sub
xchg
adc
loopne
jnp
ja
mov
add
mov
aas
test
pop
aad
inc
movsl
cmp
or
lods
xchg
jae
pop
dec
jge
loope
movsl
add
cmp
lods
push
sbb
ret
mov
ffreep
pop
mov
mov
xchg
jp
mov
or
inc
leave
ljmp
push
xor
mov
pop
jns
jmp
push
or
ret
xchg
jb
scas
sahf
das
jl
test
loop
dec
jno
popw
adc
jecxz
call
pop
push
cmc
mov
shlb
pushf
mov
call
ljmp
inc
mov
movsl
sti
jno
dec
data16
stos
fwait
lods
mov
mov
test
out
dec
nop
ljmp
call
int
lock
sub
adc
mov
call
xchg
add
rcl
xor
loope
pushf
call
add
repnz
jmp
lcall
out
sbb
ret
loope
mov
cmc
out
jp
data16
jbe
add
cmp
cmp
adcl
cmp
or
push
hlt
push
int3
cwtl
mov
std
jg
icebp
movsb
out
mov
call
push
lcall
jecxz
jge
incl
xlat
mov
cs
lret
subb
call
dec
sysenter
xor
jb
mov
pop
dec
inc
iret
jno
sub
lcall
mov
in
test
jo
iret
xor
test
mov
daa
call
sbb
mov
repnz
mov
cmp
les
enter
mov
insl
stos
andl
jo
xchg
jnp
in
lret
cmp
xor
add
and
lds
fmull
rclb
cmpb
mov
jp
sub
mov
and
loop
in
repz
stc
lcall
xor
data16
cmp
dec
cmp
sub
cli
and
fchs
or
stc
jae
pushl
mov
add
or
movsb
or
mov
cli
sub
dec
test
decl
inc
cmpsl
aam
xor
cmpb
movq
dec
sbb
add
push
xor
lcall
inc
jg
call
pop
mov
fisubrl
add
jne
icebp
arpl
outsb
pushl
cltd
dec
push
out
dec
decb
adc
into
jle
lea
sub
xchg
adc
fcomip
decl
and
je
sub
cmp
test
push
fcmovnu
ja
scas
sbb
loop
in
xor
in
repz
and
popa
int3
roll
jno
push
add
dec
fcomip
jmp
pop
fwait
push
les
in
push
scas
dec
outsl
jge
pop
cmp
scas
loop
mov
jmp
mov
stos
gs
and
movsl
cmc
sub
mov
sub
mov
jmp
pop
xchg
cmp
mov
xor
inc
push
insb
dec
push
gs
push
lods
rol
pop
out
aam
ljmp
imul
test
and
aam
jno
rcrb
icebp
mov
out
decl
sti
or
jb
push
push
add
mov
mov
rcll
sahf
rol
add
cmp
call
cmp
dec
push
pop
movsb
mov
nop
in
push
add
jmp
adc
mov
jg
push
clc
call
sbb
lods
xor
inc
int
xor
cmp
call
xchg
pop
push
mov
jae
addr16
test
jbe
popa
loop
and
stos
loop
add
push
and
inc
in
in
mov
pop
push
sbb
clc
mov
mov
jbe
shl
adc
push
mov
jg
cld
cmp
inc
lea
cld
cltd
iret
aam
push
repnz
enter
xlat
inc
mov
ffree
js
and
cs
testl
jns
cmp
or
fisttps
and
aas
lcall
pop
rolb
fsubp
fsubs
lret
push
andl
fs
xchg
clc
pop
mov
jmp
pop
inc
pushl
xchg
std
dec
imul
das
cmp
or
aas
jg
lahf
push
xchg
add
loope
andl
dec
pop
xchg
mov
fdivrp
lds
jo
cmc
scas
js
jg
sbb
repnz
cmp
out
xchg
jmp
mov
pushf
xchg
or
mov
jmp
inc
sahf
adc
dec
or
xchg
jns
dec
ss
adc
mov
jg
test
or
nop
jae
cmp
jmp
jp
sub
js
addb
inc
push
ds
add
pushl
sbb
inc
fcmovnbe
andl
push
movsl
cmc
mov
xor
lahf
adc
pop
sbb
and
inc
xor
push
fistpll
pop
test
jg
or
dec
das
lods
ret
cmp
dec
fistps
clc
pop
jbe
pop
sar
call
movsb
dec
jnp
jbe
dec
test
jg
or
testl
adc
scas
iret
addr16
xor
sbb
shrl
ljmp
out
add
jecxz
cmp
incl
std
data16
xchg
ret
scas
jae
sub
ficoml
adc
adc
mov
xor
or
push
lea
fists
jmp
sarl
mov
pop
sbb
int3
in
cltd
jecxz
mov
jne
ljmp
or
test
scas
sahf
jmp
jmp
outsl
mov
mov
push
mov
addr16
push
mov
pop
push
push
daa
cmpsl
arpl
jp
mov
and
dec
ret
aam
loopne
aas
xchg
mov
ret
dec
pushf
out
sub
out
ja
insl
mov
lret
sub
ret
mov
data16
into
movsb
scas
popa
mov
out
test
in
mov
lods
in
inc
cld
data16
push
cltd
mov
jg
movsb
adc
loope
in
in
xor
call
adc
and
push
and
aad
cmpsb
mov
call
lret
leave
xchg
fs
pop
ficompl
fldl
pop
dec
cli
mov
ret
mov
sub
lea
sbb
mov
or
pusha
clc
mov
in
sbb
pop
scas
sub
pop
adc
popl
add
dec
mov
adc
incl
pop
adc
xchg
mov
cmpsl
mov
add
pop
mov
fiaddl
jge
ret
push
mov
incl
cld
dec
loope
xor
jp
xor
test
xlat
test
jae
or
call
push
incb
scas
cmp
pop
call
mov
inc
xchg
call
xor
notl
insl
fcoml
cmp
push
xchg
stc
bound
xorl
pop
movsb
decl
loopne
pop
sub
bound
jmp
jmp
mov
adc
test
bound
dec
enter
mov
ret
in
in
ljmp
pop
jno
stc
addr16
sbb
int
pop
shrl
loopne
lds
add
ljmp
mov
push
outsb
jge
outsb
lret
roll
xor
out
lcall
cli
and
int
push
std
dec
pusha
pushf
mov
aad
incl
jl
lods
in
mull
jle
xchg
xchg
mov
dec
pop
xor
jns
loopne
in
pop
loopne
jge
xor
add
and
enter
sbb
rcrl
dec
jecxz
loopne
arpl
shr
cmp
xchg
jbe
call
das
xchg
jae
mov
lock
aaa
aam
xchg
mov
sarl
ljmp
aas
pusha
mov
mul
into
mov
addr16
shlb
incl
loope
std
cmp
jp
mov
in
sbb
mov
ljmp
insl
mov
xchg
call
out
loopne
cltd
int
jno
outsl
sub
sahf
je
sbb
sbbb
jae
fdivr
das
cli
pushl
in
mov
pop
lea
stos
and
imul
dec
push
dec
ficompl
pop
mov
imul
lock
mov
or
push
out
inc
insl
repnz
and
lret
fisubrs
mov
test
lcall
aas
mov
dec
hlt
call
cli
mov
inc
enter
cmp
mov
loop
ds
add
fidivl
rep
sbb
dec
cld
incl
pop
popa
rcrl
mov
cmpsl
outsl
sbb
js
xorl
sahf
mov
mov
in
ja
lcall
pop
out
mov
jno
pop
shl
add
lret
cltd
mov
pop
cltd
inc
jp
cli
call
ds
pop
push
ja
lcall
mov
pop
pop
sub
out
outsl
cmc
orl
lods
jp
push
decl
pop
popf
mov
iret
push
xor
sarl
pop
cs
lcall
cmp
outsb
sbb
hlt
out
push
inc
jle
jae
rol
lcall
mov
cld
roll
xchg
inc
jne
data16
push
lock
inc
cmp
hlt
push
dec
inc
adc
hlt
xchg
pop
js
xchg
cmp
call
test
pusha
aas
fnstenv
pop
push
sub
mov
sar
adc
int
stc
mov
pop
pop
loope
jg
mov
cmp
inc
test
pop
cmp
ret
inc
and
adc
stc
shlb
cld
lds
dec
enter
ljmp
ljmp
clc
dec
dec
in
dec
fnstcw
cmpsl
in
sbb
pop
push
rcr
lcall
decb
xlat
mov
loope
cltd
lcall
icebp
mov
mov
dec
cmpsb
jmp
lods
sub
pop
movd
add
aad
loop
pop
pop
xor
clc
ljmp
nop
decl
pushf
pop
jnp
addb
push
lock
inc
stos
dec
fs
or
pop
push
mov
mov
test
cwtl
and
and
dec
in
mov
jmp
mov
shlb
inc
mov
imul
in
dec
cmp
sub
and
mov
pop
outsl
clc
jmp
lods
lret
pop
inc
xchg
xchg
xchg
cmp
das
dec
shrl
adc
jmp
push
clc
jge
inc
cli
test
jno
lds
rorl
inc
hlt
mov
in
sti
popf
push
inc
ljmp
dec
dec
cs
or
addb
fcmovu
ficoml
adc
js
mov
xchg
mov
lret
ds
icebp
jg
out
mov
call
and
xchg
lods
out
xchg
inc
pop
dec
pop
loop
stos
stc
lods
mov
dec
mov
std
fwait
cmp
push
sub
sbb
shl
xor
das
rorl
push
mov
sbb
neg
adc
movsb
cld
mov
xchg
adc
cmp
sub
lcall
cs
cld
int3
mov
adc
cmp
clc
into
push
sbb
sub
scas
cs
jb
fbstp
call
xlat
aad
popf
call
inc
pop
sbb
pop
mov
movsl
dec
outsb
jg
decl
insb
add
stc
fistps
dec
adc
xchg
in
rclb
repz
jo
mov
daa
dec
or
cltd
mov
imul
scas
sbb
sbb
rcr
mov
call
loopne
mov
push
mov
xchg
mov
mov
inc
dec
dec
push
mov
xor
inc
or
mov
sub
and
inc
call
test
add
daa
call
fdivrp
inc
mov
xor
test
jbe
pushl
and
adcb
mov
mov
std
sbb
jg
out
mov
cld
and
dec
rcll
fs
mov
out
xchg
inc
cmpsl
out
xchg
mov
stos
push
call
mov
incl
mov
mov
pop
stc
and
mov
mov
aaa
xchg
mov
xchg
pop
pop
jp
pop
and
cmp
mov
push
adc
pop
pushf
jmp
daa
les
and
in
pushf
les
lcall
jne
divl
repnz
push
scas
shlb
xlat
xchg
in
dec
pushf
jmp
icebp
mov
xchg
not
mov
adc
mov
jo
addr16
fsubr
mov
cmpsb
mov
cld
mov
sarl
xlat
fiadds
mov
out
push
lcall
cmc
xor
pushl
dec
pop
imul
cli
cmp
mov
aas
lret
cs
fcomps
lds
aad
mov
lods
or
icebp
clc
incl
and
mov
rcrb
pop
push
xor
pop
negl
lahf
mov
out
add
push
adc
push
cli
in
inc
jge
lods
and
arpl
inc
jmp
sbb
outsl
incl
out
shrl
add
sahf
mov
push
test
dec
mov
std
pushl
mov
faddl
xor
test
mov
cmp
dec
stos
inc
movsl
fs
cltd
int
cs
or
pushf
cmp
mov
pushf
test
sarl
sbb
pop
cmp
call
loope
mov
in
jns
scas
jmp
scas
add
enter
lahf
lret
jg
icebp
cli
mov
mov
push
pop
fsubl
sbb
mov
mov
popa
cmp
pop
icebp
lcall
test
adc
jns
inc
xor
jnp
jg
call
dec
cwtl
fdivr
lods
mov
xor
mov
push
in
sbb
inc
adc
sub
enter
lcall
int3
out
call
adc
sahf
jp
push
sbb
mov
sahf
jmp
jb
xchg
cmp
sbb
mov
sub
std
loopne
sub
inc
lds
lcall
xchg
add
lret
mov
mov
add
pusha
popa
mov
xchg
push
pop
cmc
jmp
mov
push
stos
mov
pop
pop
fcomip
hlt
movsl
add
dec
push
mov
pop
icebp
les
in
xchg
jbe
icebp
scas
dec
xor
xor
xor
decb
inc
enter
xchg
adc
xchg
pop
and
in
pop
lahf
je
sarb
jns
sub
call
mov
mov
ficoms
out
sbb
xlat
and
mov
xor
popa
aas
xor
jmp
popa
sbb
mov
aam
xchg
sub
enter
lods
inc
ret
loope
mov
sbb
repz
cmp
xchg
xlat
mov
mov
sarl
mov
in
xchg
shll
mov
incb
xlat
jns
cltd
cmp
enter
cmpsb
insl
ret
push
faddp
daa
jo
lea
repz
clc
outsl
jl
sbb
dec
dec
xchg
mull
pop
in
inc
std
lods
adcl
jmp
sbb
fimull
das
push
mov
frstor
lock
iret
push
iret
pop
arpl
imul
stos
out
mov
xor
mov
ljmp
lock
sub
cmpsb
sbb
fildll
pop
scas
add
in
jns
mov
sub
int
pop
dec
add
jg
insl
sbb
mov
jmp
cmc
mov
mov
ljmp
sub
mov
js
leave
aaa
lret
mov
outsl
or
sahf
inc
loopne
decl
jbe
xchg
je
inc
push
insl
lret
in
pop
xor
leave
cmp
mov
fisubl
ljmp
cmp
cmp
ljmp
add
xchg
aaa
jmp
movsl
mov
shrl
sub
pushl
push
xor
mov
es
mov
bound
in
mov
jle
lds
movsl
adc
pushl
scas
inc
mov
mov
shr
jg
std
and
mov
jns
lcall
movsb
mov
test
aaa
inc
xchg
push
mov
divb
fcos
mov
mov
jne
stos
add
xchg
inc
stos
divb
sti
pop
fwait
pop
cmp
add
fsubs
jecxz
xchg
cmp
dec
daa
cli
pushl
xchg
xor
mov
mov
cmpsl
push
lahf
cmp
rcrb
jo
add
call
insb
ret
and
aam
or
cmpsl
ljmp
and
jnp
test
cli
pop
or
mov
stos
fidivs
mov
mov
icebp
push
mov
icebp
adc
mov
outsl
inc
clc
pushf
and
add
scas
rolb
or
insb
sahf
xchg
lcall
pop
sub
xchg
cmc
inc
mov
stos
inc
fistl
push
xchg
lds
je
jnp
ljmp
es
in
adc
and
cmp
xchg
inc
cmpsb
jb
inc
lds
nop
popa
xchg
lods
nop
jg
loopne
fmull
cmp
lods
cwtl
jb
lcall
mov
mov
sub
dec
test
dec
ss
jle
pop
cs
cli
mov
jmp
ficoml
sub
cli
leave
dec
cmp
icebp
test
sar
ljmp
out
xor
ret
mov
out
push
jle
imul
xchg
int
repnz
out
enter
add
pushl
pop
add
test
mov
fists
adc
fwait
or
sbbb
sarl
fisubl
cmp
xor
ja
addr16
insb
cs
push
mov
push
or
dec
popf
fwait
mov
aas
sbb
rol
mov
outsb
pop
or
and
cwtl
mov
inc
pushl
dec
or
dec
adc
repz
and
es
loope
xor
out
dec
cmp
adc
pop
sbb
and
xchg
sub
cmp
enter
pop
jle
adc
dec
fstpl
xor
mov
rcll
and
call
adc
sbb
shlb
xchg
adc
in
test
dec
mov
sub
or
fmull
inc
fcomps
rolb
xchg
incl
adc
hlt
int3
add
jl
mov
sub
inc
add
lret
xchg
jmp
cmp
rcll
inc
es
dec
mov
and
daa
xchg
jge
push
in
loope
out
jne
repnz
ret
mov
aad
mov
jo
icebp
cmp
cld
std
lock
and
int
xchg
push
mov
pop
xor
cwtl
and
mov
test
into
rolb
push
fmull
lret
pop
jp
mov
mov
in
sbb
and
incl
jl
lcall
add
adc
imul
adc
xor
lcall
decl
pop
push
mov
iret
fisubrl
and
push
and
decl
test
aam
popf
adc
sub
dec
mov
jp
inc
xlat
inc
push
call
xchg
lock
les
pop
and
dec
je
stc
dec
push
pushl
mov
mov
ljmp
and
jno
sahf
jg
daa
std
sub
pop
push
push
unpcklps
cmp
dec
push
dec
data16
and
lcall
add
xor
push
movsb
dec
jmp
sub
lcall
cmp
pop
notb
in
ror
add
xchg
das
lret
dec
int
push
cs
jmp
jo
lds
aad
cmp
and
cmp
cmpsb
inc
fiadds
fcoml
jp
push
call
add
xchg
popf
cmp
mov
add
mov
js
adc
sahf
lods
jg
cmc
lcall
sub
push
shll
push
pusha
mov
test
decl
scas
dec
hlt
mov
mov
jle
stos
leave
pop
insb
inc
dec
dec
mov
dec
inc
push
add
incl
cld
or
shlb
cli
aaa
aam
or
dec
xchg
fidivrl
sub
stos
jg
jp
fcoml
lret
cmpsb
int3
repz
or
sbb
mov
inc
movsl
imul
popa
dec
clc
mov
js
ljmp
push
xchg
xor
push
cmp
cmpsl
sub
movsb
insl
push
loope
cmpsl
add
add
loopne
jl
jg
mov
ret
and
pusha
jge
adc
push
mov
xor
ret
hlt
mov
xor
incl
scas
jnp
and
jno
dec
xchg
xchg
pop
add
or
push
stos
loope
lahf
jp
push
lock
jg
scas
repz
inc
ja
test
push
xorb
in
pop
gs
sbb
sub
lcall
ret
pushf
dec
add
push
jmp
cli
push
lret
mov
int3
mov
test
idivb
stos
pop
je
or
outsl
sub
fs
ficoml
lret
in
sbb
mov
push
aam
dec
scas
mov
mov
out
lea
push
xor
and
ljmp
subl
jle
or
fldt
outsb
mov
flds
add
fs
decl
movl
sub
mov
dec
dec
call
testl
test
pop
mov
cmp
movsb
jp
mov
lcall
popf
sarl
inc
cmp
js
dec
mov
and
push
ret
push
into
ret
fiaddl
jno
decl
jbe
lahf
nop
push
dec
xor
lds
pcmpgtd
mulb
xor
jb
mov
push
pop
push
ljmp
rcr
jo
or
lret
popa
mov
pop
mov
fwait
loopne
outsb
std
call
fisubrs
dec
stos
popa
mov
jmp
mov
xchg
pop
sbb
mov
aas
xchg
or
pop
dec
dec
leave
ljmp
and
mov
mov
out
and
jp
jns
popa
inc
rorb
push
fimull
or
mov
gs
jno
cmp
scas
stos
mov
cmp
fmulp
mov
push
xlat
ja
shrb
pop
dec
adc
fistpl
lcall
mov
cmp
ds
sarb
jp
mov
adcb
int3
icebp
or
adc
stos
js
setne
in
test
xchg
and
mov
enter
int3
jg
or
jl
cmova
mov
xchg
mov
es
mul
sbbl
dec
add
out
fdivrs
xor
es
mov
mov
enter
ret
add
inc
push
mov
call
cmc
mov
jmp
push
mov
bound
xchg
mov
mov
ret
popl
inc
mov
std
sahf
mov
pop
jae
cwtl
inc
adc
outsl
pop
call
inc
inc
bound
mov
je
aaa
std
pushl
xlat
lret
mov
popa
jnp
fs
ja
jb
lret
jo
pop
jne
push
clc
mov
push
daa
add
jb
xor
inc
cmpsb
push
cmpsl
or
pop
data16
dec
insl
push
test
lock
jg
dec
xor
stc
out
int3
loope
mov
push
pop
mov
iret
lret
rorb
push
adc
push
mov
mov
icebp
pop
es
decl
negl
or
push
inc
aaa
arpl
or
shll
aas
mov
adc
and
jmp
lahf
pop
fwait
daa
pop
out
aad
mov
jns
das
data16
cwtl
cmpsl
call
cmc
dec
sub
lahf
xchg
lret
decl
std
mov
jmp
notl
sub
test
test
mov
ljmp
rcl
cs
notb
loope
cmc
push
push
mov
mov
out
nop
sti
jg
outsb
in
jl
inc
daa
loope
xor
cld
iret
inc
sbb
cmp
jmp
out
les
js
pusha
cld
mov
pop
lahf
cmp
sarl
dec
fidivrs
cmp
cmpsb
and
imul
sub
fmulp
jle
decl
adc
aam
xchg
mov
push
and
adc
in
sbb
mov
jg
pushf
inc
aas
aas
jno
xor
cmp
into
or
insb
lds
dec
lds
mov
icebp
call
cmp
xor
dec
mov
pop
mov
mov
aaa
cld
decl
jp
mov
aam
lods
pop
sbb
mov
fdivr
lcall
loopne
into
lret
xchg
clc
sbb
pop
inc
xor
out
aas
arpl
pop
inc
xlat
mov
jmp
gs
cmp
sub
mov
or
xor
subb
popf
pop
repnz
cmp
xor
mov
imul
testb
mov
push
outsl
cli
out
cli
out
push
push
mov
outsb
test
addr16
pushl
push
adc
push
add
aad
lcall
mov
sbb
js
pop
insb
push
dec
addr16
stos
pop
sub
push
jnp
rcrb
addr16
dec
cmp
sbb
and
xor
push
jb
loope
push
adc
or
jge
xchg
dec
std
jmp
fstpt
xor
pop
imul
and
xor
mov
mov
stos
and
mov
repz
rcrl
les
sub
sub
lds
mov
in
ja
jb
aam
mov
add
mov
aaa
mov
adc
inc
cmp
inc
bound
mov
int
aas
cmp
iret
push
nop
mov
test
aaa
lods
int
push
ret
mov
addr16
sbb
inc
dec
mov
pushl
cmp
aad
pop
mov
sbb
add
mov
into
push
out
data16
mov
push
sub
imul
sti
mov
orb
leave
adc
mov
popf
ret
xor
cmp
je
xor
jecxz
lcall
push
pop
pusha
aam
pop
testb
es
xchg
psllw
incl
mov
nop
dec
xchg
mov
mov
outsb
xchg
imul
lods
out
decl
fsubl
loopne
jo
scas
mov
movsb
push
cld
push
int
es
lea
pop
pushf
or
pushl
mov
aas
mov
sbb
aad
sbb
ss
pop
sar
ljmp
rorl
adc
out
jg
inc
ret
inc
push
fwait
xchg
inc
sbbb
xlat
and
sub
dec
lret
stos
arpl
inc
rorb
mov
in
test
cmp
lcall
dec
into
dec
fadd
push
sbb
aaa
xor
fbstp
repz
cmp
inc
xor
call
mov
cmp
fwait
lods
xchg
cmpsl
cld
orl
fisubl
and
pop
dec
mov
pushl
adc
ret
aas
sbb
jns
inc
in
or
inc
scas
scas
mov
push
and
push
inc
xchg
mov
clc
lcall
pop
mov
mov
test
loop
xor
aad
xor
icebp
mov
push
sbb
lahf
xlat
dec
jmp
pop
movsl
out
fidivrl
lds
cld
outsl
and
pop
push
or
out
stc
je
incl
jbe
gs
sub
mov
in
add
std
mov
xchg
jno
aad
sbb
addb
outsb
pop
sbb
loopne
jg
mov
pxor
popa
and
decl
xlat
shr
aas
test
push
xchg
push
dec
add
jle
xor
loop
aam
dec
dec
es
mov
pop
push
sar
xor
mov
dec
fbld
cltd
pop
aam
sbb
pushl
adc
push
mov
popa
in
aam
or
fsubs
fs
out
xor
aas
push
push
pop
jno
push
scas
mov
ljmp
inc
inc
push
xchg
rcrl
lds
aas
fnstsw
mov
sbb
loopne
aas
scas
mov
dec
adc
jmp
push
jge
std
scas
out
cli
scas
fsubl
add
inc
inc
adc
or
clc
sub
cmp
adc
repz
and
decl
add
mov
stc
mov
xchg
dec
mov
jns
test
sti
ja
inc
aas
cmp
cmp
xor
mov
clc
fs
call
push
aas
dec
sbb
add
leave
xchg
fisttps
lods
fucomip
loope
xchg
cmp
xchg
sbb
mov
fdivl
mov
xor
icebp
aas
clc
movnti
mov
mov
pop
nop
ljmp
std
cmp
mov
pop
lahf
jg
dec
mov
jmp
out
or
and
and
mov
imulb
jno
repnz
fstpt
or
testl
loopne
lcall
jnp
aas
adc
jl
add
mov
in
dec
cmc
dec
andb
or
lcall
pop
and
lods
dec
cmp
push
cmpsb
pop
dec
and
jg
inc
test
lds
xchg
cmp
xor
aaa
jne
mov
testb
push
adc
cmp
add
sbb
stos
bound
mov
cwtl
rcl
adc
pop
fisubl
mov
stc
mov
jg
jb
and
decb
test
xchg
cs
shl
jl
add
inc
cli
or
decl
jno
push
int3
bound
addl
push
sbb
pop
jmp
pop
inc
lahf
mov
lods
add
and
into
dec
leave
movb
std
bound
push
shrl
jnp
or
in
hlt
jg
mov
mov
jle
xor
sar
lods
jnp
insb
in
jb
fistpl
inc
jnp
mov
and
jle
ffreep
rep
int3
lret
or
mov
aas
cs
std
pop
out
cs
incl
sub
fisttps
mov
lret
lahf
mov
mov
pop
bnd
mov
xor
jo
push
mov
in
xchg
inc
lcall
out
popf
xchg
cltd
push
jb
movsl
pop
sbb
lcall
jbe
mov
mov
cmpsl
scas
xor
inc
lods
les
cld
incl
idivb
push
mov
iret
insb
jmp
call
lods
add
and
fs
pop
cmpsl
mov
aas
cmc
adc
ret
sub
push
jmp
pop
aad
cmp
dec
pop
int
xor
add
movsl
into
aam
int
lock
jle
xchg
mov
lcall
jecxz
xchg
movsl
cltd
pop
xlat
or
dec
add
or
sbb
lcall
loop
push
test
or
ljmp
push
sar
and
pop
popa
ljmp
push
mov
insb
dec
sub
mov
xchg
bound
mov
addr16
pop
add
ret
outsl
fimull
into
mov
incl
cld
lret
xor
push
mov
pop
push
xorb
pop
mov
loope
pushl
out
sub
in
stos
mov
mov
jmp
push
je
add
call
adc
mov
sti
ja
cmp
fsubl
dec
incl
sarb
push
insl
dec
in
xchg
fisubrl
sbb
das
scas
mov
mov
cmpsb
aaa
loopne
xchg
loope
sub
fadds
xor
decl
nop
push
push
dec
jmp
subb
pop
jp
mov
or
hlt
jg
xchg
dec
mov
iret
jo
mov
popa
pop
xchg
mov
incl
add
adc
popa
imul
sub
jae
notb
cmp
jmp
mov
dec
stos
jmp
mov
cmc
sti
mov
push
push
or
xchg
fwait
ljmp
mov
ss
hlt
shlw
loop
out
push
mov
std
push
jmp
mov
loop
mov
test
into
dec
cwtl
std
mov
incb
into
inc
mov
jmp
dec
jne
lahf
sub
cmp
push
inc
sub
mov
mulb
mov
adc
imul
fwait
mov
cmp
sbb
insl
pop
enter
int3
lahf
cld
add
add
incb
ja
insl
in
sub
fbld
add
sub
in
push
les
adc
jp
push
jge
inc
mov
movsb
jl
ficomps
lahf
popf
lods
adc
outsl
in
lret
push
daa
adc
sub
pusha
fldenv
fdivr
xor
mov
cmp
addr16
scas
sarl
and
and
ljmp
daa
es
lcall
call
sti
mov
rcll
outsl
push
mov
inc
dec
pushf
mov
lea
dec
push
cwtl
aad
push
aaa
jp
dec
push
xchg
in
mov
sub
add
enter
loopne
lcall
jns
or
inc
adc
fisubrs
lcall
cmpsb
mov
incl
arpl
scas
sub
std
sub
sbb
xor
or
xchg
outsb
std
dec
lahf
movsl
xchg
js
jmp
cmp
fldcw
and
test
dec
push
sti
ror
push
shlb
ljmp
lds
aam
loopne
adc
testl
imul
enter
mov
jg
cwtl
push
push
adc
pop
xchg
adc
std
cmp
iret
pop
pop
xchg
fmuls
cwtl
push
lock
push
mov
jo
cmp
nop
xchg
dec
xchg
mov
rcrl
aas
ljmp
pushf
xchg
xor
ds
jle
adc
pop
rorb
adc
nop
push
inc
or
push
push
dec
ret
in
dec
es
decl
mov
cs
dec
pop
std
push
aad
pop
clc
xor
dec
out
fildll
adc
jg
pop
data16
fsubrl
insl
or
cmc
icebp
xchg
xchg
add
je
pop
push
add
sub
mov
cmpl
movsl
push
fdivl
dec
cld
adc
sbb
into
inc
movsb
adc
aad
inc
faddp
mov
bound
inc
fdivl
mov
cmp
clc
inc
dec
push
dec
daa
mov
test
jge
mov
sbb
aad
mov
jns
mov
mov
bnd
sbb
mov
sub
incb
ja
push
cmp
push
push
pushl
mov
cmp
or
adc
push
mov
incl
lea
rcll
sbb
mov
in
cwtl
loope
mov
xor
add
clc
or
dec
arpl
jnp
cmpsb
mov
lds
es
clc
ljmp
sub
cmp
jmp
popf
jmp
fcomip
mov
out
mov
pop
mov
int3
pushf
rcll
sbb
or
xlat
mov
and
cmp
mov
shrl
xsavec
xchg
imulb
inc
call
pop
jle
arpl
nop
icebp
shrb
decl
or
push
outsl
add
jl
js
je
decl
jp
leave
adc
idiv
popf
das
xor
repnz
jmp
ja
clc
stos
cs
cmp
inc
or
jge
inc
and
xor
add
jmp
scas
cmpsl
imul
inc
loopne
iret
xchg
pushl
jb
leave
sbb
xchg
ret
bsr
out
pop
stc
push
dec
mov
add
inc
push
push
pop
mov
xor
mov
mov
push
outsl
mov
mov
and
out
orl
cli
push
push
lret
mov
mov
das
adc
ret
out
xchg
std
push
push
leave
dec
sbb
cmp
cs
addl
lahf
push
std
andl
ss
cmp
add
faddl
dec
leave
repz
scas
mov
sbb
jg
sbb
xor
adc
sbb
icebp
fdivrs
mov
in
sub
rorl
outsl
push
clc
cmovge
out
adc
mov
call
mov
push
mov
mov
sbb
dec
push
lahf
pusha
cltd
movsb
mov
mov
call
mov
pop
arpl
mov
adc
out
push
push
and
jp
sub
decl
push
insl
int3
bound
xor
mov
ja
mov
sbb
decl
lret
fwait
add
and
sti
scas
sti
int3
das
incl
add
dec
js
push
adcl
add
push
ret
cli
jmp
inc
adc
aad
ljmp
pushf
sbbb
or
gs
out
lods
nop
lret
daa
pop
and
cmp
andb
je
outsb
push
cld
incl
xor
repz
push
out
push
xchg
iret
mul
cmc
sbb
enter
incl
cwtl
dec
scas
cmpsb
test
ret
imul
adc
and
add
cmp
stos
and
jae
xor
pop
out
xor
mov
xchg
inc
add
cltd
aam
repnz
or
out
in
cmp
cltd
popf
fistl
mov
pop
dec
mov
ret
loop
sahf
push
xor
jmp
cmp
sub
inc
and
cld
insl
mov
xchg
sbb
jnp
sbb
decl
inc
std
cld
cmp
adc
push
sahf
adc
popa
das
test
or
sub
call
loop
xor
sarb
or
cmp
in
shll
or
xchg
inc
hlt
movl
jg
mov
and
push
cltd
and
dec
insl
xlat
add
idivl
push
cmp
cmpsl
gs
or
push
xchg
push
testl
jns
pop
call
cld
push
add
dec
aas
pusha
dec
add
xor
pop
lods
xor
sar
and
andb
push
decl
aaa
js
push
cmp
subb
mov
aaa
push
int3
repz
mov
daa
rcrl
pop
push
call
out
loope
dec
fs
cwtl
add
pop
fistpll
jae
mov
mov
mov
mov
clc
out
xor
cmp
clc
movsl
fnstsw
add
enter
cmpsb
mov
fisttpll
ljmp
mov
mov
mov
adc
jno
fsubrs
or
call
xchg
mov
call
ret
pushl
iret
test
les
imul
mov
push
decl
std
pop
push
sub
mov
pop
sbb
jbe
test
mov
add
sub
mov
fwait
hlt
popl
jecxz
jg
in
pop
pop
xor
inc
xchg
les
or
jg
pop
pop
xchg
push
bound
fnsave
mov
push
pop
dec
pop
adc
dec
push
push
pop
push
out
sub
addr16
pop
loopne
mov
mov
lret
aas
sbb
inc
push
das
jbe
incl
pop
push
sbb
clc
das
bound
jg
pop
or
arpl
iret
incl
inc
xor
int
add
adc
add
cld
outsb
xchg
idiv
push
mov
inc
jno
sub
inc
pop
sbb
push
je
sbb
jo
push
xor
xor
cmp
sbbl
les
sti
and
into
jg
incl
push
lock
int3
and
movsl
xchg
inc
adc
setb
notl
sub
jg
push
dec
xchg
add
lock
arpl
ds
testl
mov
call
incl
subb
jg
cmpsl
dec
enter
add
add
arpl
or
clc
inc
addr16
push
test
or
mov
aad
or
clc
call
add
test
stos
dec
xchg
sbb
adc
sar
add
out
jg
cmp
xor
jmp
shl
dec
jg
es
inc
cmpsb
dec
xchg
les
ljmp
repnz
icebp
shll
sahf
cltd
or
leave
xchg
orl
ljmp
jle
cmp
insl
lret
lret
mov
in
xchg
rcr
xchg
xor
decl
scas
add
mov
arpl
std
cmc
dec
pop
cmp
mov
je
out
cltd
add
data16
incl
cld
lcall
adc
mov
xchg
stc
aas
xor
das
cmpsb
lock
or
data16
jno
dec
push
mov
std
inc
jg
and
enter
shl
mov
sub
rcrb
decl
inc
mov
cli
mov
fabs
jg
call
xor
loop
xorb
cli
ljmp
jg,pn
xchg
jge
out
inc
cmp
rcrl
ljmp
ss
daa
mov
pop
aas
loopne
cmp
sbb
pushl
inc
aad
lahf
fwait
sar
sub
cmp
loop
dec
mov
mov
movb
sub
jg
jnp
mov
shrl
fimuls
faddl
decl
lds
pop
push
mov
lcall
aam
inc
nop
xchg
mov
push
pusha
jmp
or
inc
stc
lahf
testl
xchg
aas
push
decl
iret
and
sub
pop
jmp
pop
jae
movl
int3
hlt
adc
jg
gs
jg
movsb
mov
and
js
inc
adc
rcll
push
dec
fisubrs
pushf
pop
out
ljmp
jno
sahf
and
js
shll
mov
lods
arpl
int3
les
add
call
xchg
jl
sbb
mov
xor
in
xchg
sbb
hlt
sub
pop
and
call
push
and
pop
fisttpl
cmc
mov
sub
adc
pop
add
push
mov
push
xchg
jne
jae
dec
je
hlt
int3
fsubrl
lcall
mov
adc
cmpsl
push
enter
push
add
jns
mov
ret
mov
popf
incl
out
mov
xor
push
movsl
jnp
adc
rcr
jmp
jmp
lods
test
add
loopne
insb
xchg
ret
and
sub
loop
mov
aaa
mov
ljmp
stos
push
sub
sub
mov
inc
mov
andl
cmovs
je
adc
pop
jne
adc
and
xchg
jg
incl
xlat
fcmovu
scas
xchg
mov
xlat
xlat
das
cli
stos
ljmp
imul
and
and
or
dec
test
add
popa
pop
cmpsb
mov
push
lods
aaa
inc
lods
and
xor
push
imul
fwait
and
adc
inc
mov
insl
je
imul
cli
mov
jmp
xchg
push
jno
cmp
insl
in
and
out
cs
outsl
in
int3
addr16
sbb
out
fstpt
jnp
fs
popa
pop
frstor
test
shr
lds
xor
mov
dec
ljmp
add
xchg
dec
lret
jb
int3
mov
jns
mov
repz
jbe
jecxz
sub
xchg
lahf
cmp
rclb
lcall
test
or
cmpb
dec
stos
lret
lock
fmuls
nop
xor
jle
pop
jbe
pop
insb
cmp
push
idivl
sbb
xchg
fsubrp
inc
sbb
add
addr16
add
inc
cmpsl
pushf
mov
mov
mov
mov
add
and
mov
sbb
lods
add
cltd
int
insb
mov
leave
or
add
dec
mov
sbb
ret
jmp
push
fdivs
test
cmp
mov
cmp
daa
popl
mov
es
jns
imul
mov
xchg
pop
mov
incl
fs
dec
xor
pop
fwait
cld
dec
push
lcall
fsubrl
mov
pushl
pop
xlat
lds
js
inc
rorb
ljmp
pop
jbe
push
adc
xorl
inc
fdivrs
or
orl
arpl
xor
sub
movsb
dec
lahf
dec
jecxz
jg
into
ss
inc
lahf
scas
xchg
call
push
xor
loopne
movsl
inc
xor
sub
inc
cs
fidivrl
stos
repz
push
dec
insb
in
sub
push
fsts
jbe
in
dec
insb
das
inc
mov
mov
lahf
cld
cmp
pop
add
mov
icebp
sub
decl
mov
stos
cmc
xchg
xchg
in
adc
sub
lahf
ja
shlb
cmp
dec
mov
in
cmpsl
ficompl
inc
jnp
outsb
mov
outsl
mov
pop
clc
inc
mov
mov
cmp
lods
call
or
xchg
mov
inc
cmp
adc
into
sub
aaa
mov
jb
push
sub
mov
neg
mov
inc
pop
test
repz
shrl
mov
jo
daa
jle
scas
or
lcall
ja
decb
xor
frstor
mov
jg
mov
adc
mov
dec
jp
jae
bound
jl
pushf
decl
lock
and
hlt
add
call
adc
xchg
mov
call
clc
loope
gs
pop
cmpsl
pop
jmp
or
lcall
cmp
inc
call
es
mov
bnd
lcall
adc
mov
xor
lcall
lcall
jmp
hlt
popl
xchg
stos
or
sub
scas
clc
ljmp
add
dec
inc
adc
push
das
iret
add
aam
lock
cld
jb
incl
stc
loopne
xor
ret
push
mov
pop
dec
adc
cld
xchg
xor
loopne
xchg
mov
idivl
jno
fs
popf
pop
incl
adc
adc
jg
mov
xor
fucomi
repnz
fsubrl
test
pusha
jmp
aad
dec
lods
xor
sub
lret
and
adc
pop
sbbl
pushl
fimull
imul
bound
insl
into
sub
cmp
scas
in
aas
enter
dec
xchg
mov
xor
cmp
sub
lcall
xchg
and
jns
and
test
adc
mov
call
cmp
subb
fadds
mov
inc
push
arpl
mov
call
in
addl
lock
mov
std
jo
hlt
cmp
cld
jg
adc
fs
arpl
pop
repz
lret
lcall
icebp
adc
les
int3
pushf
xor
fists
enter
gs
push
repz
jmp
jg
jno
stos
or
mov
pop
add
ffreep
inc
test
inc
testb
inc
arpl
aaa
add
jg
sub
sub
jb
in
repnz
jge
mov
daa
scas
sub
sub
jbe
rolb
inc
shrb
loopne
pop
fildll
dec
and
lret
pop
xor
fldcw
jg
call
jg
dec
mov
lret
push
outsb
out
push
push
jl
inc
stc
incl
mov
je
hlt
rol
leave
js
or
out
out
mov
lcall
xchg
ret
xor
lret
fsubrl
das
push
lds
mov
test
test
movsb
pushl
mov
fs
call
push
mov
jmp
sub
pop
push
std
mov
jo
hlt
fadds
aas
insb
add
and
adc
and
test
jo
jmp
aam
stos
test
repz
mov
mov
pusha
or
imul
pop
add
ds
sub
fiaddl
push
data16
dec
or
mov
or
stos
pop
out
xlat
les
dec
or
add
pop
popf
xor
mov
shrb
aas
aam
rcrl
test
pop
scas
outsb
mov
loop
xchg
xor
push
scas
mov
push
stc
fistps
loope
ja
pop
push
cmp
flds
incl
fistpll
pop
inc
mov
sub
jmp
jns
fcmovnu
dec
data16
call
sbb
in
mov
cmp
daa
mov
cmpb
pushl
xor
and
lods
cmpsl
imull
movsl
mov
out
mov
call
je
aad
inc
push
jmp
jg
addr16
dec
add
pop
sahf
pushf
cltd
enter
sbb
or
mov
int
outsl
adc
add
pop
sbb
lcall
das
aad
and
lahf
or
cmovne
aas
push
hlt
mov
mov
jg
fadds
cwtl
testl
jg
ja
lea
decl
aaa
jg
jp
add
icebp
dec
das
sub
adc
loopne
adc
mov
jne
mov
lcall
mov
bound
add
and
cltd
jp
pushl
jg
lock
xor
xor
lcall
and
or
enter
push
clc
fbstp
test
mov
cmpsl
cli
lods
mov
cwtl
mov
out
aas
rorl
jg
xchg
push
das
or
add
jg
repnz
mov
lret
aaa
daa
dec
cmp
sti
xchg
in
pop
inc
pop
cli
outsb
pop
add
dec
aad
sub
xor
add
mov
push
add
jg
fildll
test
jnp
xchg
inc
push
xchg
jp
mov
or
std
jb
daa
sti
fwait
test
pop
out
stos
sbb
stos
loop
arpl
int3
push
fbstp
fldt
mov
incl
jbe
pop
cmpsb
stos
and
or
pminsw
cmp
repnz
jbe
lock
adc
mov
movb
mov
lods
mov
lahf
pusha
and
sbb
int
lock
dec
jg
scas
xchg
adc
test
pushl
pop
in
mov
enter
pop
or
lahf
aas
mov
sti
dec
dec
hlt
push
rclb
mov
leave
and
notb
les
sbb
scas
pushl
xor
bound
jecxz
xchg
loope
cmp
or
shlb
sbb
cld
cmpsb
nopl
notb
pop
imul
fstl
cmc
sub
incl
sbb
es
xchg
faddl
call
andl
cmp
sub
loope
fcomip
mov
lcall
incl
sbb
lret
int3
adc
aas
adc
jmp
xor
repz
pushl
jg
jmp
outsl
or
rclb
loop
sub
jl
inc
iret
cmp
sub
push
jle
test
mov
pop
xchg
mov
lock
outsl
jmp
ret
push
mov
test
sub
aas
pop
push
pop
decl
push
push
js
fnsave
imul
fistps
xchg
pushl
test
repz
pusha
lcall
pop
loope
push
pop
outsl
inc
imul
pop
add
rcll
mov
xchg
jmp
mov
aaa
jg
out
ret
jg
lods
out
ret
and
jmp
into
out
jne
and
jg
aas
add
lahf
xor
mov
xor
add
movsb
stc
enter
xchg
pop
data16
jmp
fnstcw
call
movsl
or
imul
ja
lret
pushf
adc
push
icebp
mov
pushl
mov
loopne
mov
cli
cmc
inc
ljmp
arpl
pushf
jg
call
sbb
or
mov
clc
decl
inc
push
cld
pop
xor
mov
sub
mov
xchg
and
jmp
cmp
stos
sbb
aas
jns
push
sbb
mov
dec
imul
jo
push
or
arpl
dec
cli
scas
cmp
dec
jo
sti
imul
repnz
add
fimuls
push
jnp
jae
push
sbb
stc
inc
cmp
out
dec
adc
pushf
xor
pop
inc
inc
rcrl
xchg
fdiv
ror
cmp
sbb
pushl
dec
call
jmp
pop
int3
dec
sbb
jmp
loopne
test
dec
mov
cmp
fstpl
and
out
inc
mov
pop
pop
cmp
out
stc
std
xchg
gs
xchg
mov
cmpsl
stos
cld
cmp
jg
cmp
movsb
subb
pop
and
insl
rcrl
imul
call
incl
mov
sti
mov
call
lcall
jecxz
mov
dec
aam
out
inc
aas
in
xchg
fcomip
cmpsb
fistpl
adc
icebp
shll
or
cmp
adc
pop
dec
mov
outsl
out
pop
les
bound
xor
or
test
insl
cmp
test
int3
jmp
add
lods
cmp
mov
jmp
icebp
mov
mov
and
inc
rcll
stos
decl
ret
push
aam
test
in
push
lock
mov
push
push
xchg
loop
out
inc
arpl
inc
mov
std
outsl
add
jne
and
sub
out
mov
mov
sbb
sub
mov
cli
pop
fisubrl
jbe
mov
in
decl
dec
ljmp
mov
aas
mov
shrb
and
pop
cltd
xor
lcall
dec
dec
sub
jno
xchg
push
adc
loope
decl
sub
popa
inc
cli
sbb
stos
in
or
mov
in
cmc
jns
mov
movsl
lock
iret
ret
lcall
cltd
sbb
or
pop
pop
mov
aad
inc
push
clc
add
data16
jge
push
push
ljmp
cld
adc
fwait
add
jg
add
push
imul
psubq
pop
push
fmull
pushf
adc
ret
insl
inc
repz
faddl
mov
ds
imul
decl
cmpsl
cmp
popf
adc
sub
inc
fcomps
aaa
stos
call
push
out
js
jp
popa
jnp
and
add
mov
ljmp
lret
xchg
xchg
outsb
lahf
jle
fsubp
adc
dec
aam
fdivs
dec
jp
sbb
stos
incl
aas
lods
xchg
pusha
sbb
push
shll
inc
call
movsl
hlt
repz
mov
ss
js
dec
push
adc
insb
sarb
pop
lods
call
inc
adcl
jnp
inc
scas
dec
stos
icebp
pop
sub
sbb
addb
jmp
pop
sti
mov
repz
call
leave
incl
clc
mov
or
jmp
jg
jmp
push
and
adc
xchg
incb
je
js
in
lea
sub
aas
test
dec
xchg
dec
xor
cli
mov
movsl
repnz
lock
imul
jb
pusha
lds
pop
cwtl
mov
fdivr
jg
adc
xchg
xchg
sbb
repnz
jle
pop
mov
ret
add
adc
clc
push
sbb
mov
sti
insl
and
stos
mov
jmp
ljmp
inc
xor
mov
cs
jg
sbb
xor
mov
sbb
and
loopne
hlt
sarl
scas
sub
cmp
dec
pushl
push
and
out
cmp
loop
jns
sti
cmp
fs
es
pop
incl
xchg
push
loopne
lret
outsl
cmp
xchg
mov
fldt
adc
ret
inc
mov
addr16
loopne
faddl
lcall
cmc
cmp
jne
mov
loopne
fcoml
inc
add
mov
sub
negb
pop
les
je
mov
jl
jmp
aaa
mov
fsub
call
aas
loope
into
and
sbb
mov
fisttpll
or
cli
inc
xor
ljmp
add
jg
add
mov
cmp
test
call
std
xchg
ds
lods
adc
scas
lahf
out
or
ret
scas
nop
sub
loop
addr16
mov
flds
rolb
jg
cmpl
push
mov
je
stos
dec
imul
ffreep
jmp
xor
adc
pop
sub
mov
das
loope
pusha
cmp
mov
sbb
mov
rorb
inc
adc
xchg
insb
mov
dec
incb
mov
loopne
cmpl
dec
pop
in
pop
pop
out
mov
cmp
mov
xchg
jmp
or
sub
orl
sbb
lahf
sbb
test
mov
cltd
das
or
pop
pop
xorb
xchg
std
incb
lahf
pop
aas
xor
xor
adc
inc
cld
outsl
jg
iret
push
into
dec
mov
hlt
fisttps
stos
lods
aas
lahf
inc
pop
and
xchg
push
insl
jg
ret
call
dec
repz
cs
fwait
daa
out
stc
rol
sbb
pushl
adc
dec
add
sbb
add
xor
nop
mov
xor
shrb
jg
subl
pushl
sbbb
outsb
in
mov
add
xor
dec
into
fwait
mov
in
mov
enter
cmp
and
out
pop
bound
cld
push
inc
bound
mov
fildll
xchg
jne
mov
scas
pop
dec
cmp
popa
mov
pop
out
loop
and
stos
jne
unpcklps
mov
lahf
cld
arpl
bound
pop
fucomp
jmp
jns
repz
pushl
or
shr
pushf
jno
insb
and
aaa
and
bound
imul
inc
jo
repz
pop
xchg
inc
xchg
hlt
xlat
ret
stos
fiaddl
sub
jns
mov
dec
aam
pusha
adc
aas
repz
mov
cld
ljmp
stos
add
xchg
stc
lcall
das
xor
icebp
fbld
sbb
and
or
loope
fildll
inc
test
lahf
and
lahf
mov
jg
mov
xchg
pop
clc
sbb
xchg
jle
fsubl
jmp
jg
inc
pop
push
or
mov
add
lcall
cmc
lock
in
out
and
test
in
sbb
rorb
jp
stos
insl
ljmp
fidivs
in
inc
cmp
inc
jbe
les
movsb
xor
sarb
jle
iret
bound
inc
aam
inc
inc
pop
mov
or
sbb
push
mov
inc
mov
test
shlb
xchg
cmpsb
mov
push
loope
cwtl
adc
push
repz
xchg
push
pop
mov
xchg
and
test
jmp
sub
xchg
lcall
jno
xchg
pop
adc
lods
pop
mov
cmp
sbbb
push
lret
out
xchg
stos
mov
fs
pop
cmp
push
pop
pop
xchg
icebp
pop
cmpsb
mov
daa
and
pop
xor
ljmp
push
clc
xchg
add
inc
jbe
sub
sub
stos
pop
test
mov
pop
mov
addr16
inc
xor
cld
cmp
cmpb
stos
subl
ret
sbb
push
pop
div
lahf
stc
scas
and
xchg
call
jb
je
inc
xchg
push
ret
insl
fnsave
lock
inc
lcall
push
xchg
xor
loope
ljmp
ss
mov
stos
icebp
mov
pop
imul
jmp
ljmp
ret
clc
pop
add
xchg
xchg
ret
jl
push
cmpl
ss
decl
push
ret
cmp
xchg
cs
cmp
sub
icebp
test
mov
lcall
mov
dec
jae
out
sub
cwtl
mov
add
in
and
rcl
mov
outsl
rol
push
sahf
mull
mov
aaa
js
lock
push
push
fs
cmp
xchg
jnp
pop
push
sbb
and
xlat
add
pop
jo
jmp
push
cwtl
mov
popa
sub
test
dec
das
add
jle
call
iret
sar
cmp
fsts
and
xor
imul
arpl
cltd
sbb
ffree
push
mov
stos
xor
es
lock
cmp
cmpl
out
nop
fists
jae
hlt
mov
mov
pop
mov
xor
pop
lods
jb
jb
mov
jb
and
mov
sub
lcall
shr
inc
arpl
dec
lods
ja
add
inc
cld
dec
data16
mov
cmpsb
test
jmp
add
in
mov
rclb
inc
adc
arpl
adc
jg
jae
bound
push
nop
jg
aam
mov
pop
in
imul
ja
icebp
cmp
leave
and
stos
pop
bnd
in
test
mov
sbb
push
mov
fwait
jle
pop
adc
ss
inc
mov
xor
or
iret
dec
pop
sbb
add
decl
and
sub
mov
sub
mov
fldl
cmp
fsts
cmp
lcall
sub
jecxz
pop
xor
push
mov
int3
enter
icebp
lcall
shll
jne
xlat
mov
inc
xlat
gs
nop
xchg
mov
or
repz
or
fmul
cs
push
sahf
hlt
xorb
jmp
mov
sub
nop
test
jl
xlat
clc
test
sub
scas
ljmp
int3
push
xchg
xchg
mov
dec
popa
orl
nop
stos
cmp
lret
cmpsl
lock
pusha
add
push
add
mov
cmp
and
pushl
mov
icebp
insl
mov
out
aas
push
jo
mov
xchg
mov
orl
inc
lcall
pop
aaa
and
push
xor
test
push
je
mov
clc
jmp
or
jbe
stos
mul
jne
std
call
cli
add
loopne
stos
add
xor
push
inc
push
std
sub
sub
mov
or
or
bound
push
or
test
mov
prefetch
or
enter
or
movsl
jg
gs
pop
push
cli
cmpsl
or
rorb
lea
jg
mov
sbb
ja
pop
cmp
aad
jne
dec
jnp
cmp
sub
inc
adc
mov
decl
call
insl
notl
cmc
or
incb
clc
stos
hlt
pop
ss
mov
ljmp
mov
aas
jne
mov
xchg
aad
or
mov
aas
mov
adc
pop
das
sub
fisttps
gs
cmp
sarb
sti
mov
mov
les
mov
hlt
insb
ffree
jmp
add
mov
jno
mov
loop
out
pop
aam
ficoml
mov
shrl
and
inc
pushl
fsubrl
addl
mov
aam
aad
les
sub
idiv
lcall
pop
push
dec
add
pop
push
pop
fcoml
jecxz
jo
stos
push
mov
js
dec
inc
lods
ret
sub
aas
mulb
xchg
xchg
mov
adc
outsb
push
mov
fwait
int
int3
sti
push
imul
and
mov
push
imul
inc
lods
data16
call
push
into
jno
mov
xor
or
and
lcall
js
and
add
dec
xor
cld
imul
mov
pop
and
ficomps
test
xor
sub
and
ljmp
ret
arpl
or
les
pushl
jmp
sub
adc
lds
add
jo
add
fwait
adcb
lcall
mov
xchg
xchg
dec
jle
aam
lcall
xor
push
test
lcall
mov
sbb
lret
fwait
jbe
out
sub
int3
jp
push
jne
adc
pushl
dec
sbb
cmc
mov
sti
in
das
cmpsl
out
adc
sti
fists
jg
dec
jg
lock
ljmp
adc
cmp
fadds
fs
mov
stos
shrl
mov
pop
out
dec
xor
add
fidivl
aam
lcall
aam
push
pop
dec
fnsave
loope
mov
cmp
fiaddl
mov
in
out
mov
inc
fstl
in
std
aam
jno
aaa
scas
inc
dec
fcom
push
push
std
lret
aad
push
or
sub
xchg
mov
inc
or
gs
and
mov
mov
ds
pusha
lcall
pop
aam
mov
repnz
fwait
sub
in
push
cmc
jbe
adc
std
mov
sub
sub
test
mov
mov
and
ljmp
subl
inc
lahf
shr
dec
cltd
jecxz
lods
mov
div
sti
jg
pop
stc
jmp
in
les
in
sub
leave
addr16
loop
cmp
lret
incl
or
ret
idivb
test
clc
lcall
movsb
lret
xor
lods
xchg
xor
dec
fwait
dec
mov
ret
pop
xor
pop
daa
push
xor
mov
pop
push
mul
in
add
in
sbb
jmp
sbb
jg
jb
addb
pop
lods
imul
adc
enter
cmpl
test
mov
fsubrl
push
xor
mov
decl
ds
shl
pop
or
pop
and
mov
outsl
jmp
jne
push
test
add
inc
notl
cmpsb
jle
cmpsl
pop
sub
loopne
stos
loope
xchg
adc
mov
stos
insb
mov
add
ljmp
push
icebp
adc
and
and
call
adc
mov
inc
clc
mov
inc
sub
mov
push
mov
mov
sti
jno
sub
cwtl
je
push
add
inc
jb
pop
inc
add
addl
test
mov
jg
push
mov
fs
loope
jg
lcall
fnstcw
sub
xchg
cld
jbe
pop
mov
cld
pushf
addr16
pusha
fisttps
push
xor
mov
cs
out
insl
sar
dec
mov
cmp
fnsave
or
mov
add
test
jbe
stos
jg
cmp
in
jns
fildl
sbbb
call
sti
lcall
aaa
mov
inc
enter
xor
mov
inc
or
fs
mov
lea
mov
pop
adc
inc
add
jmp
test
icebp
cmp
cmp
mov
pop
xor
pushl
fcomps
ret
dec
xlat
jne
mov
or
outsl
adc
mov
lcall
mov
add
scas
cmc
mov
jne
sub
or
jmp
roll
std
call
std
sbb
lods
jge
mov
inc
dec
and
push
mov
dec
inc
push
xchg
adcb
lcall
sarb
fisttpll
xor
enter
lods
incl
lcall
cmpsb
or
enter
popf
xor
sbb
adc
incl
push
popf
out
dec
mov
inc
mov
lods
dec
add
orb
cli
sbb
push
pop
mov
loopne
inc
outsb
sbb
jnp
inc
inc
mov
popf
mov
in
es
cmp
loop
fcomip
xor
xchg
js
bound
push
loop
xlat
sbb
jle
enter
mov
hlt
inc
ljmp
xchg
push
push
addl
aam
mov
loop
incl
or
ficomps
mov
repnz
ljmp
insb
sub
jne
inc
jmp
cmp
xchg
sbb
xchg
mov
pop
pop
pop
xchg
add
pop
in
leave
fdivrl
cmp
pushl
xchg
jo
jmp
ud2
outsb
sub
ja
sub
pushf
ret
mov
insl
sbb
ljmp
mov
or
inc
mov
push
inc
clc
cmpsb
incl
ds
ljmp
push
pop
fsubl
and
js
inc
decb
jge
add
out
je
sub
push
ljmp
adc
pop
mov
sbb
cmp
out
rcr
dec
in
pushl
gs
sub
daa
outsl
int3
inc
xchg
in
mov
dec
dec
dec
imul
mov
pop
adc
pushl
into
gs
es
rorb
scas
mov
scas
sbb
cmp
in
and
clc
jno
faddl
jns
push
sub
xor
and
add
scas
adc
iret
call
push
xor
in
out
mov
aam
cli
cltd
stc
insb
mov
loop
mov
scas
aaa
ljmp
cmp
mov
mov
lea
or
add
adc
pop
cmpsb
xchg
lods
xchg
sub
aad
sbb
iret
std
cmp
mov
add
mov
jmp
jmp
mov
mov
pusha
insb
pop
sub
cmc
cmp
mov
inc
loop
jne
sub
int
out
in
bound
repz
vpgatherdq
ret
int
push
dec
out
push
cmp
loopne
add
sarb
call
cli
mov
ss
int
adc
in
inc
push
push
arpl
incl
test
pop
cs
cld
push
sbb
leave
dec
mov
push
xorl
mov
sbb
scas
ffreep
lds
into
les
mov
call
pop
addr16
fsubrs
inc
es
lret
mov
lcall
stc
cmc
and
add
sahf
xor
call
ljmp
sub
inc
std
jae
mov
insl
sub
lcall
xchg
or
ds
test
mov
les
out
scas
stc
gs
fnstcw
or
sahf
clc
hlt
or
mov
fcomip
sbb
out
xchg
ss
jl
lcall
in
out
adc
and
int3
push
push
pop
outsb
xor
jle
sbb
sub
iret
decl
or
and
mov
rol
push
mov
sbb
push
nop
clc
mov
pop
mov
aaa
mov
ljmp
jnp
and
lods
clc
jl
sub
mov
decl
and
mov
or
clc
pusha
inc
aas
jp
lcall
dec
mov
clc
add
cli
jecxz
mov
push
in
call
addl
aaa
fidivrl
lock
sub
dec
stc
push
cmp
mov
decl
call
cwtl
xchg
dec
xor
adc
lret
lods
jo
fists
aad
iret
jb
into
push
leave
pushl
inc
mov
aaa
loopne
mov
int
mov
cmp
incl
out
in
int3
ret
push
xchg
cmp
stos
cmpsb
mov
icebp
dec
call
ret
dec
pop
shlb
aas
nop
fidivrs
sub
mov
jnp
lea
mov
mov
je
pushl
rcrb
add
test
std
out
pop
mov
ds
and
call
cmp
or
daa
mov
cmpsl
test
jmp
movsl
sar
cmpsl
loope
repnz
adc
lcall
imul
mov
arpl
add
jae
shl
test
pop
enter
push
or
js
lea
push
insb
cmpsl
stc
addb
fidivs
ja
aas
adc
mov
lcall
push
stos
add
mov
xchg
sahf
cmp
pushf
int3
jg
leave
sbb
add
insb
cmp
lock
loop
fs
ljmp
iret
add
ljmp
shlb
out
mov
aas
and
leave
mov
mov
jmp
je
sbb
push
mov
inc
inc
jae
jb
sub
cmp
push
cmp
pop
jns
dec
jno
mov
ljmp
movsb
inc
sub
in
out
add
fbstp
in
cli
les
add
fcompl
call
dec
mov
call
clc
out
lret
and
sbb
mov
jecxz
and
dec
mov
decl
ret
loop
scas
adc
mov
mov
insb
std
outsl
ljmp
popf
stc
fwait
dec
jne
xlat
mov
push
lret
mov
call
pop
xchg
add
rolb
push
out
dec
or
pop
movsb
enter
push
push
mov
sar
pushl
sub
je
xchg
loope
dec
push
aad
enter
dec
ss
loop
jg
inc
lcall
push
sarl
inc
cmp
sub
pop
mov
clc
mov
inc
scas
jns
fisubrl
lcall
or
adc
pop
testl
pop
popf
and
sar
xchg
cmp
lods
and
lret
jg
bound
fisttpll
jg
add
mov
call
push
shl
rcrb
in
data16
jmp
orb
adc
out
rorl
ljmp
pop
ja
les
sahf
outsl
icebp
call
test
add
or
push
xor
out
cmpsb
inc
xor
jbe
inc
dec
lcall
loope
and
pop
test
sub
cltd
scas
arpl
cmp
mov
decl
xchg
pop
cmc
sbb
aaa
std
xor
scas
adc
js
cmp
lods
jecxz
or
mov
fidivrl
dec
push
les
dec
loope
adc
aas
mov
adc
mov
sbb
test
adc
bound
dec
xor
jo
shrb
loop
jmp
stos
cwtl
pop
xlat
xchg
js
stos
or
test
inc
lcall
push
dec
push
rorl
xchg
lea
out
ljmp
push
and
or
enter
push
xchg
jle
adc
in
or
mov
jg
jg
push
mov
enter
mov
subb
sbb
mov
hlt
xlat
sub
mov
mov
mov
push
fmul
mov
lock
ficomps
add
les
pop
aas
dec
ret
push
fistps
movl
sti
call
std
pop
mov
jns
sub
loop
fs
pop
subb
mov
push
and
outsl
inc
lock
push
lahf
cld
test
clc
hlt
ljmp
or
jo
addr16
xor
sub
cli
mov
int3
jmp
inc
xor
shll
ds
jg
inc
pop
mov
mov
xchg
jnp
jmp
mov
mov
js
sub
es
mov
xchg
adc
fcomps
call
mov
mov
jg
pushl
mov
mov
mov
dec
mulb
push
jge
incl
sti
jmp
lea
sub
subb
out
inc
fistpl
cmp
je
adc
je
pop
push
adc
and
mov
call
or
imul
bswap
push
addr16
roll
jg
sub
dec
mov
dec
or
stc
stos
lcall
dec
iret
mov
jmp
pop
mov
jno
dec
xchg
aam
mov
je
pop
dec
push
fidivrl
lea
dec
popa
push
inc
pop
mov
call
lret
mov
cmp
aas
in
jg
sahf
xor
push
pop
je
adc
adc
xor
xchg
xor
mov
cmp
sahf
test
or
ljmp
mov
sbb
sub
lock
ds
jbe
add
fsubrl
dec
add
ret
maxps
decl
xor
andb
cmp
cltd
push
andb
fmull
int3
cmpsl
aam
decl
mov
jmp
stc
fcoml
inc
mov
daa
mov
das
and
pop
in
push
sub
pushl
cs
test
rolb
or
inc
mov
mov
jns
push
xor
pop
push
xchg
popl
sbb
sub
gs
push
xor
negb
ss
add
and
ret
in
call
incl
pop
xchg
cmp
mov
ficoml
adc
clc
rorb
call
out
inc
jae
and
jle
cmp
leave
adc
arpl
sub
addl
jno
mov
cmp
xlat
mov
mov
movsl
mov
inc
enter
sahf
xor
subps
jmp
mov
call
jnp
sub
adcl
inc
jne
lea
and
jmp
sbb
pop
xchg
adc
jbe
pusha
mov
aam
lcall
dec
mov
sbb
stos
ja
das
clc
incl
pop
je
test
or
mov
add
mov
shlb
mov
clc
sub
adc
or
cmc
or
lea
decl
dec
adc
hlt
xchg
mov
adc
cli
out
clc
xchg
das
adc
jb
and
pop
mov
clc
ljmp
sub
stc
sbb
push
aas
sub
out
xchg
fsubp
lods
sub
fildll
lds
rcrl
or
enter
cmpl
mov
stc
inc
cmc
jg
enter
push
jg
dec
sbb
lcall
mov
xacquire
imul
in
and
xchg
inc
adc
cwtl
je
jo
sub
lods
sbb
icebp
inc
sub
adc
addb
loopne
in
imul
jne
and
test
inc
ja
loopne
je
jb
div
fstps
out
push
mov
xor
mov
mov
mov
sbb
dec
lahf
pushl
pop
dec
lret
cmp
and
sub
testb
and
dec
sbb
mov
daa
insl
fmul
mov
xor
cltd
push
jne
dec
in
xchg
lcall
xchg
out
and
or
daa
pusha
dec
jno
call
cld
mov
notl
and
aas
ret
add
arpl
mov
fcos
stos
aaa
mov
mov
sbb
lahf
movsl
subb
stos
call
int
vunpckhpd
data16
ja
imul
sbb
out
sub
cmc
loope
cmp
ljmp
xor
ret
jecxz
push
and
ror
sub
mov
popa
cltd
aas
out
clc
incl
insb
dec
xchg
scas
shr
repnz
adc
jecxz
mov
xchg
call
cmpsb
subl
push
sub
adc
cmp
push
jp
into
push
and
xchg
insb
jg
es
lcall
js
aad
into
repz
cmpsb
push
pop
repz
call
call
pusha
add
xor
cmp
lret
sub
inc
sub
fdivl
insb
and
lods
and
push
mov
in
sub
mov
mov
sbbl
or
testl
nop
cmp
pushl
outsb
adc
inc
adc
ds
fbstp
add
test
adc
xorl
mov
xchg
and
outsl
sbb
sbb
lahf
inc
jo
imul
xor
pop
push
loopne
andl
mov
cmp
sti
inc
insb
arpl
inc
das
out
dec
nop
dec
ret
push
mov
mov
xchg
stos
shrl
lea
mov
xchg
jns
test
jg
and
jbe
xchg
scas
push
dec
adc
stos
xchg
jb
add
mov
sbb
aad
push
or
or
sahf
repnz
push
ds
les
add
fidivs
sarb
mov
addb
mov
inc
add
adc
fsubrp
xor
jg
jne
int3
and
add
xor
pop
inc
dec
sarb
sub
scas
incl
mov
pop
loop
sbb
sbb
cwtl
push
sahf
out
inc
add
divb
imul
mov
pop
dec
xor
sub
or
pop
mov
or
arpl
cld
sbb
mov
xchg
jg
adc
or
jp
adc
sbb
sub
or
pop
fsubl
repz
js
cmc
decl
dec
enter
push
rcrl
out
inc
adc
stos
lret
pop
adc
testw
into
popa
cmpsl
sub
ljmp
call
mov
mulb
xor
dec
enter
xlat
addr16
cmp
xchg
out
mov
cld
sub
and
push
cwtl
pop
cs
xor
scas
movsl
pushl
cld
sahf
sti
fistpll
popa
mov
cmp
mov
fcmovu
inc
movsb
fstps
push
lock
sub
popf
jp
pop
xchg
xor
push
das
inc
xchg
lea
sbb
lods
and
in
in
mov
imul
cld
into
loop
cmp
lret
insb
push
or
cmpsl
add
or
xor
or
mov
pop
push
mov
out
inc
mov
lods
mov
fildll
call
add
pushf
mov
pop
es
leave
cmp
shll
adc
xchg
ljmp
pop
sbb
cmc
pop
adc
insb
jle
or
in
mov
adc
outsb
ss
pusha
bound
jmp
out
pop
sub
cmp
mul
sub
scas
cli
mov
out
inc
decl
push
mov
or
jge
aaa
out
push
push
mov
and
pop
mov
aaa
iret
pop
ljmp
stos
pusha
leave
mov
pusha
cmp
pop
push
out
es
daa
ljmp
ret
outsl
lods
cmpsl
jae
stos
scas
jae
push
push
mov
in
ss
ljmp
push
dec
out
cmovo
add
lret
mov
outsl
in
add
pop
add
adc
push
mov
ja
or
popa
or
pop
lcall
sub
mov
adc
iret
out
scas
icebp
repnz
xchg
sbb
rcrl
icebp
iret
jmp
lcall
in
cmp
pop
sahf
ret
fldenv
mov
inc
cmp
xchg
xchg
lock
mov
scas
jmp
aam
and
decl
add
imul
ds
xor
fistpll
lcall
subl
loopne
inc
repz
mov
mov
sub
jbe
add
in
or
dec
jecxz
push
or
lods
pop
cltd
dec
iret
push
or
jmp
inc
daa
dec
and
into
sub
lods
cmp
ret
scas
cmp
iret
in
mov
lods
fsubr
mov
jmp
rclb
stc
xchg
subb
and
and
push
loope
ljmp
data16
cs
ret
dec
shlb
or
pop
stos
push
push
pop
sub
std
pushl
outsl
fsubs
sarl
and
or
xor
cmc
call
repz
and
or
mov
rorl
sbb
jp
mov
lock
not
jno
into
mov
inc
pop
es
push
ret
hlt
in
mov
push
fadds
pushf
imul
imul
sub
insl
dec
adc
jge
pusha
xchg
xor
mov
into
push
cli
add
inc
rolb
lds
cmp
sbb
adc
iret
mov
mov
dec
rolb
lock
mov
push
das
push
inc
cmp
outsl
jle
xor
jmp
shlb
imul
add
ljmp
outsb
push
push
or
inc
xchg
sbb
jnp
mov
jmp
sub
jl
adc
sbb
popf
out
movl
push
xchg
cmp
jg
adc
decl
xchg
and
stos
repnz
cmp
or
call
dec
in
out
mov
jmp
out
fs
push
pop
or
add
lret
xor
pop
lcall
lods
or
add
call
jle
xchg
clc
fwait
lret
push
xor
lcall
ljmp
data16
repz
jno
dec
insl
ja
jns
aam
es
lods
push
adcl
imul
inc
sbb
dec
or
ljmp
in
daa
inc
sbb
add
call
shll
cltd
stos
hlt
outsb
outsb
and
xlat
pop
sub
nop
scas
sub
dec
and
adc
decl
pop
push
cli
test
or
or
sub
mov
daa
fiadds
xchg
jbe
movsb
pop
repz
incl
je
cltd
mull
push
xor
lahf
push
push
sub
decl
mov
in
shll
inc
repz
ljmp
dec
shrl
negb
in
sti
ss
push
jno
add
outsb
or
fdivrl
scas
push
sbb
dec
jg
add
adc
ljmp
and
test
pop
shlb
repnz
decl
test
imul
ret
mov
lret
sbb
ror
stos
into
icebp
xlat
pop
jmp
jmp
lods
stos
and
sbb
inc
mov
adc
pushf
push
and
pop
mov
dec
mov
push
or
add
scas
rclb
adc
in
fimuls
add
xlat
ljmp
lea
ret
ss
pusha
dec
repz
mov
call
out
push
mov
xchg
orb
out
scas
xchg
pop
aam
add
pop
stc
psubq
int
test
pop
jg
pusha
leave
data16
xchg
dec
and
mov
add
cmpsb
xchg
ret
fidivrl
nop
xchg
and
sub
add
lcall
out
mov
lock
lcall
and
mov
or
stos
rcl
notb
dec
out
in
lods
imul
sbb
jmp
call
sub
jge
lds
mov
sbb
jecxz
popa
orb
push
loope
outsb
stos
lea
incl
in
into
inc
pop
dec
int3
int3
ja
adc
sub
dec
sub
xchg
add
frstor
pushl
ret
dec
jns
sub
lea
in
nop
sti
popa
cmpsl
je
out
arpl
out
jp
lods
sarb
xor
pop
xor
bound
cmp
sbb
xchg
sti
adc
or
pop
into
call
jbe
mov
mov
push
ret
flds
pop
sbb
inc
xchg
imul
push
dec
sub
push
sub
fbstp
push
cld
xor
mov
push
mov
outsl
sbb
mov
hlt
test
fdivrs
mov
add
and
and
or
cltd
and
mov
mov
push
inc
ficoml
mull
call
rorb
mov
xlat
nop
dec
sbb
call
jbe
and
out
jle
xor
dec
lcall
sub
mov
je
rol
xor
adc
jnp
das
mov
mov
in
incl
cmp
cmpsl
xchg
fisubrs
loop
mov
xorb
ja
decb
daa
repnz
jmp
push
or
iret
mov
mov
pop
fmull
imul
cmp
mov
out
push
jns
call
movsb
jle
mov
les
mov
cmpsl
inc
lret
sbb
push
jnp
pop
xchg
sahf
movsl
in
adc
divb
data16
inc
cli
aam
aaa
in
xchg
stos
adc
mov
movsb
cmpsl
xchg
outsl
lret
lcall
sub
push
jge
xchg
push
adc
mov
xchg
rolb
movsb
fsubrl
cmp
in
adc
insl
out
mov
and
mov
sbb
mov
in
lcall
and
sbb
pop
das
and
dec
test
outsb
jle
jp
andb
aas
in
jmp
aam
dec
js
sbb
mov
jmp
or
mov
cld
gs
int3
or
in
into
pushf
cmp
xlat
sahf
in
xor
dec
mov
push
jne
incl
mov
push
pushf
clc
rol
sub
ret
push
jb
jns
dec
push
in
lcall
outsl
xchg
pushf
and
mov
mov
scas
fiaddl
pop
lds
cmp
fsubp
jno
push
fidivrl
shlb
push
inc
pop
test
test
pop
jg
clc
das
inc
aas
shll
int
fstl
sub
jns
nop
lock
mov
outsb
stos
sub
sbbb
push
sub
mov
push
mov
cmp
xchg
jg
lea
pop
push
push
int
enter
add
shl
std
cmpsl
xchg
je
pop
cmp
adc
inc
jmp
or
fwait
jg
pushf
and
cmp
jmp
xor
mov
jg
fbld
hlt
push
shl
push
xor
scas
jae
xchg
add
jmp
mov
cmp
jecxz
std
incl
scas
pop
or
pop
adc
in
jl
cmp
xchg
shrl
mov
pop
int
les
jne
lods
or
sbb
in
mov
push
fisubrl
scas
in
insb
xor
rcl
aas
jp
jmp
jmp
mov
popf
lret
cmp
lcall
bnd
in
out
orl
cmc
mov
aam
add
sbb
xchg
test
add
push
add
cld
dec
pop
add
push
pop
xchg
lds
mov
or
lahf
stc
movsb
push
adc
outsb
cmp
and
or
in
push
dec
incl
mov
push
movsl
dec
jmp
xchg
test
iret
mov
xor
lahf
mov
inc
jmp
xchg
out
sarl
mov
push
jmp
push
aas
inc
xor
out
sbb
push
lock
or
fwait
xchg
dec
mov
nop
fidivrs
sub
shl
rorl
rorb
sahf
data16
lahf
inc
inc
jmp
pop
or
sub
loop
aas
cmp
in
call
lods
fsts
insb
fimull
ret
incl
decl
xchg
pusha
pop
in
aaa
mov
adc
cli
adc
mov
out
cmc
pop
dec
push
fstps
cmp
sbb
xor
cld
das
adc
adc
cmc
test
incl
jo
subl
iret
push
mov
pop
test
push
pop
ja
push
fildll
scas
je
test
inc
incl
dec
ror
out
out
insl
repnz
mov
inc
rcl
jg
xchg
test
pop
in
push
jp
test
decl
cmp
adc
int3
jo
add
test
sarb
cs
or
mov
mov
repz
xchg
mov
in
gs
and
cmp
rolb
cmpsl
jmp
jp
ss
sub
dec
in
jg
adc
loopne
cld
sub
es
push
cmc
mov
std
add
sbb
xor
lock
in
leave
sarb
fcmovbe
lds
pop
popf
adc
xor
jg
test
rcr
gs
cmpsb
jecxz
aam
fisttps
pop
adc
call
lahf
xor
jl
xor
mulb
call
jns
sub
popa
adc
ret
ljmp
cld
jecxz
pop
fimuls
cmpsb
inc
cmp
dec
xchg
shll
and
dec
pop
loopne
mov
hlt
sub
fcos
ljmp
inc
call
mov
jne
or
sbb
xor
loopne
inc
and
mov
sub
aas
mov
push
cmp
ss
sub
mov
aas
xor
repz
inc
pop
adc
jg
pop
dec
pop
xor
test
sub
or
jne
fs
push
nop
in
mov
jg
in
add
adc
mov
and
pop
bound
jmp
push
es
cli
rclb
mov
fstpl
jo
les
into
pop
mov
inc
xchg
adcl
addr16
mov
cmp
inc
notb
pop
lds
mov
push
or
lret
into
mov
stc
add
or
rclb
mov
cld
aam
xor
xchg
rolb
lcall
jg
adc
insl
popf
dec
nop
sub
popf
out
pop
inc
call
je
pushl
cs
jl
mov
jecxz
div
aam
xor
push
mov
jge
jg
mov
pop
outsb
insb
fnsave
sub
cmpsl
aam
jge
out
pop
xor
lock
jmp
lods
pop
sub
ret
cmc
fldl
fnstenv
or
cs
incl
pop
add
dec
xor
inc
mov
daa
inc
push
rol
cmpsl
and
test
in
std
enter
negl
mov
inc
jle
leave
xor
sbb
jl
xchg
mov
xchg
jp
pushl
cmpl
adc
ja
pop
or
lds
ja
cli
ja
daa
xor
cmp
shrb
iret
in
inc
gs
std
push
jbe
jecxz
sbb
mov
inc
add
popa
into
fwait
call
std
int3
xorl
push
xor
fiadds
clc
shrb
adc
fistl
int3
sub
cltd
iret
mov
mov
sahf
lret
loopne
inc
pop
inc
or
add
dec
popa
adc
rcll
mov
lcall
jmp
pop
jns
out
shlb
call
mov
xlat
push
mov
loope
cmp
push
push
lret
pop
jns
push
cmp
fcmovnb
dec
mov
lcall
pop
inc
lock
jl
fsubrl
shr
repnz
sbb
mov
sbb
jmp
ja
sahf
inc
sbb
rcrl
xor
cmp
jg
pop
dec
pusha
lahf
cmc
pop
lahf
add
inc
fwait
or
shr
enter
jbe
cmp
std
jb
dec
cmpsb
movsb
push
aad
rcl
jp
jb
cmp
cmpsb
ja
mov
dec
xor
mov
push
inc
inc
mov
loopne
and
jmp
fmul
sbb
jo
pop
les
push
dec
pop
inc
sbb
mull
pop
scas
pop
xchg
ds
es
mov
cmpsb
fidivrs
ljmp
jg
aas
test
popf
outsb
mov
aam
push
aaa
fnstenv
in
icebp
sbb
popa
decl
push
and
int3
clc
adc
hlt
jb
icebp
sub
jno
xor
push
pop
inc
pop
jmp
repnz
mov
jecxz
xchg
into
sub
dec
fcomps
xchg
pushf
shll
lds
push
fstp
lahf
loop
inc
add
mov
jbe
jmp
das
bound
push
mov
mov
mov
rcrl
stos
test
ficoms
add
mov
dec
sbb
shlb
mov
aas
dec
mov
cmpsl
xor
ret
das
insl
mov
inc
sbb
mov
inc
enter
or
lods
mov
ds
mov
das
lahf
aam
sbb
pop
pop
jl
jns
and
lcall
jne
scas
ss
and
testb
xor
cmp
pop
cmp
lcall
add
dec
mov
sbb
lock
xchg
insl
jl
pushf
in
inc
cmp
inc
addl
out
jge
icebp
ljmp
sbb
sbb
cmp
jmp
xor
lds
cmp
shl
enter
pushf
xchg
adc
xor
mov
imul
mov
std
and
aas
test
cmpsl
dec
lret
pop
inc
pop
sbb
pop
mov
or
jge
pop
das
jp
sub
mov
pop
mov
inc
iret
adc
mov
cmpsl
daa
pushl
incl
fldt
fildl
jae
test
ss
dec
sti
adc
jg
and
sub
mov
jae
inc
test
mov
mov
decl
pop
and
and
jmp
cmp
sub
fsubr
xlat
pop
mov
cli
cld
xor
icebp
enter
inc
mov
lahf
add
into
bound
arpl
aas
or
dec
lcall
into
cmp
mov
adc
dec
mov
dec
add
inc
add
jne
out
nop
mov
pop
test
mov
pop
push
dec
fisubrs
decb
div
xchg
adc
lds
pushf
std
push
sub
loopne
andb
in
sub
repz
mov
jmp
out
gs
ljmp
shlb
inc
push
daa
mov
sub
lock
xor
loop
lock
idivb
fnstsw
mov
jp
push
add
and
dec
outsl
clc
mov
adc
xchg
and
mov
sbb
aas
and
std
ljmp
jmp
scas
push
cmpsl
aas
out
adc
movsb
scas
or
add
decl
and
cmp
mov
idivb
lcall
cs
inc
data16
inc
jp
decl
inc
iret
or
push
or
mov
pop
cld
decl
xor
mov
dec
add
lcall
mov
jg
pop
sub
sbb
jmp
pop
xorb
sbb
adc
std
sub
jle
incl
sahf
lret
cld
loopne
add
aam
push
sub
jmp
dec
and
fcoml
stos
sub
add
fildl
in
mov
and
sub
or
gs
mov
out
out
or
stc
ret
sbb
push
dec
push
mov
outsb
into
fbld
or
and
cmp
and
outsl
std
idiv
jmp
inc
mov
add
repz
roll
ja
pop
test
aad
or
add
test
sbb
add
xor
ss
incl
es
xor
in
gs
int3
ja
nop
int3
int3
sbb
push
stc
cmpsb
cld
adc
call
jbe
subb
pop
add
jecxz
add
lea
lret
or
or
fsubrs
js
into
sub
sub
mov
lcall
loop
and
cmp
repz
out
addb
mov
xor
ret
xor
loopne
roll
fcmovbe
jp
jge
ljmp
clc
sub
cmp
inc
jle
cwtl
test
push
push
enter
subb
ret
fmull
enter
lahf
adc
mov
int3
push
push
cmp
mov
xorb
xor
sbb
dec
cltd
pop
mov
xorb
cli
dec
xchg
or
cmpxchg
clc
xor
ud0
mov
dec
iret
test
or
addl
xor
mov
lcall
incl
inc
arpl
adc
bound
out
leave
mov
and
and
xchg
pop
jp
add
jo
push
icebp
test
jb
or
nop
pop
mov
in
jne
push
and
mov
push
cmpsl
jl
and
popa
scas
cmp
and
dec
xchg
dec
loope
incl
mov
insb
std
arpl
pop
push
out
jnp
in
ja
sub
cld
pop
and
push
roll
mov
xor
ja
fcomip
pop
jmp
mov
sub
push
sub
xchg
andl
leave
lahf
xchg
adc
inc
mov
dec
enter
mov
sbb
loopne
mov
in
mov
hlt
mov
mov
sub
fwait
shl
call
div
loope
push
mov
jl
jo
aad
jg
jmp
push
lret
das
xchg
dec
mov
mov
inc
pop
xor
push
mov
gs
or
pop
push
adc
dec
decl
cmc
sarl
lcall
sbb
insl
sbb
xchg
xor
sub
pushl
adc
fcmovnbe
adc
mov
sbb
outsb
dec
sahf
lcall
and
jecxz
adc
das
add
sub
inc
mov
movsb
mov
cmp
and
decl
mov
popf
ret
push
adc
leave
mov
push
pop
sbb
pop
fwait
mov
ljmp
xchg
clc
movsl
rolb
adc
cmc
jne
jmp
call
xchg
fiadds
das
in
mov
jle
loopne
repz
gs
xor
xlat
lret
cmc
movsl
mov
in
push
lret
mov
add
jne
or
sarb
sbb
xor
inc
mov
aaa
rcr
jb
mov
xchg
out
xchg
cmp
inc
lods
rcr
lods
xor
mov
pop
negl
das
cmpsl
cmpsl
imul
mov
push
jne
ljmp
push
jmp
cmp
and
dec
cmp
inc
adc
and
push
mov
das
stos
popf
sub
mov
fwait
cmp
mov
loope
stos
shlb
mov
pop
sbb
stos
adc
loop
rol
jl,pn
cmp
xor
or
push
shlb
ljmp
add
scas
adc
insb
adc
sbb
pop
pop
out
mov
dec
fwait
aas
jno
jmp
or
xor
mov
sbb
add
call
sbb
xor
push
fisubrs
push
sbb
xchg
inc
mov
lcall
clc
pop
jno
fs
pusha
inc
push
outsl
out
ljmp
mov
imul
add
stc
add
fdivs
rclb
imul
adc
push
add
xchg
cmpsb
sub
mov
jge
mov
mov
lea
out
or
jmp
or
mov
nop
xchg
adc
add
call
push
xchg
xchg
jb
mov
dec
daa
in
inc
cli
mov
daa
push
push
adc
in
pop
pop
int
cli
push
xlat
mov
fstpt
aaa
mov
scas
inc
mov
stos
arpl
shlb
sub
repz
sbb
mov
mov
cwtl
orb
lahf
aas
aam
pop
sbb
and
mov
xor
std
pop
in
or
fimull
cmp
lahf
cmp
mov
ljmp
push
mov
gs
push
je
incl
or
rcr
mov
sti
movb
clc
call
mov
ret
cltd
jle
ret
lds
fildl
mov
incl
aaa
dec
xchg
xor
dec
clc
int
cs
incl
inc
jnp
and
ljmp
xor
int
incl
hlt
ficompl
pop
adc
sub
call
out
mov
dec
pop
or
xor
fbld
inc
int
push
in
paddw
lcall
dec
pop
aam
repz
push
add
dec
adc
ja
imull
xorb
aaa
insb
jecxz
mov
sub
pop
mov
insb
fwait
pop
testl
xchg
popa
out
rcrb
test
loope
out
fwait
and
xor
jbe
mov
or
rcl
rorl
imul
push
inc
xchg
or
jge
incl
mov
push
data16
adc
cmp
in
jmp
cmc
sub
pushl
inc
or
push
fwait
popf
jns
cmp
decl
lock
xchg
in
data16
ss
cmc
fwait
xor
dec
lds
xchg
out
and
mov
cld
icebp
jb
xchg
mov
push
adc
push
repz
inc
dec
les
push
fcmovnb
call
sbb
pushf
loop
call
xchg
lahf
jnp
sub
in
and
enter
cwtl
popa
mov
out
sti
push
movl
das
clc
pop
jmp
in
push
mov
jne
xor
incl
popf
popf
adc
cmp
lock
pop
in
pusha
inc
movsl
jecxz
sbb
ret
fcomip
push
pop
mov
jnp
sysexit
clc
sbb
push
add
inc
add
stos
pop
in
cs
push
popa
pop
mov
jle
pop
mov
lahf
mov
and
dec
pop
add
std
enter
fnstenv
incl
aam
xchg
jb
cld
in
out
lods
and
mov
js
sbb
shlb
inc
inc
mov
fs
dec
inc
mov
int3
adc
and
icebp
xchg
mov
aaa
add
mov
fs
imul
push
add
test
push
lea
sbb
gs
or
fidivrl
bound
pushl
out
and
das
int3
pop
mov
xor
jmp
iret
outsl
pop
fisubrl
push
jl
mov
mov
mull
xchg
and
in
add
addr16
xor
cltd
out
jo
outsl
clc
push
call
loop
stos
push
repz
jns
je
mov
incb
xchg
call
cli
add
ret
inc
ds
fistl
jbe
xor
sbb
jg
cmpsb
xchg
out
lret
and
jge
jl
jno
mov
in
stc
dec
leave
mov
notl
cmp
or
scas
outsb
jo
jp
pop
pusha
mov
jo
filds
shll
pop
dec
xlat
xchg
cwtl
aam
addr16
lea
popa
mov
ljmp
mov
shrl
jmp
test
push
cltd
push
jge
inc
xchg
mov
ljmp
sub
pusha
inc
and
pop
jbe
and
ror
xor
jg
sub
sbb
push
jp
and
ret
shlb
push
mov
in
lcall
jp
in
sbb
push
dec
pop
jbe
mov
cmp
xor
andb
mov
pop
stos
adc
loop
adc
pop
ss
push
jmp
lcall
or
xchg
mov
push
int3
ret
xchg
ret
mov
leave
lods
adc
repnz
mov
incl
or
mov
mov
sbb
jno
mov
pop
dec
xchg
dec
xor
cmc
pop
adc
mov
scas
clc
mov
test
aam
clc
cltd
pop
pop
into
cmp
mov
push
incl
push
mov
sar
movb
idivl
add
lock
aad
into
fdivr
cmp
add
inc
out
mov
aad
in
out
pop
je
nop
nop
sub
pop
icebp
incl
hlt
push
cwtl
pop
icebp
test
adc
jecxz
fwait
mov
popf
incl
loopne
jnp
faddl
push
lods
adcl
jne
lock
push
es
mov
cmp
jmp
or
inc
outsb
pop
pop
fsub
inc
cs
mov
dec
mov
sub
lods
ljmp
jnp
imul
cmp
dec
adc
jmp
inc
push
jg
call
leave
dec
aam
mov
mov
dec
aad
mov
push
jmp
stos
mov
mov
jo
inc
pop
cmp
les
push
pop
xlat
cmpsb
shll
xchg
hlt
call
icebp
call
inc
mov
xchg
mov
les
hlt
push
lret
mov
push
out
cli
xor
and
int
aad
xchg
out
dec
call
dec
lret
cmp
call
std
adcl
lcall
lahf
and
std
imul
call
jmp
cltd
into
or
or
push
mov
cmc
mov
sub
int
and
incl
cld
in
mov
dec
push
mov
push
popa
in
jle
jbe
out
xchg
and
lcall
cmpsb
xlat
ljmp
std
jp
dec
sbb
add
sbb
fistps
push
sub
pop
push
pop
dec
lcall
call
xor
or
push
jg
int
sub
push
push
push
mov
add
mov
adc
xor
and
decl
and
mov
dec
js
mov
pop
fsubrl
rcll
cmp
call
iret
add
inc
sbb
lods
out
jb
push
fiadds
sub
mov
test
test
mov
pop
mov
out
mov
push
xchg
sbb
rcrl
pop
and
hlt
movsb
addr16
mov
lea
outsl
push
push
test
inc
xor
jmp
or
xor
loope
mov
sub
or
pop
loope
lret
cmp
jg
out
jno
movsl
lds
popa
jmp
xrelease
push
and
cwtl
orb
lcall
or
jb
sub
les
adc
mov
enter
add
dec
in
imul
negl
jnp
pushf
addl
xor
add
lods
lock
pushl
xchg
push
mov
and
in
js
lret
je
in
pop
arpl
lcall
fimuls
out
xor
adc
into
mov
fcmovnu
lcall
pushf
out
lcall
call
pop
xchg
sbb
sbb
pop
or
jmp
xor
pcmpeqd
xchg
and
pop
add
fistpll
gs
decl
imul
fwait
pop
out
in
mov
loop
xchg
pop
push
int
mov
jmp
adc
addr16
jae
pop
inc
mov
cltd
dec
xchg
rcrl
push
or
mov
mov
mov
jae
cmp
xchg
add
das
add
push
flds
outsb
popf
xor
cmp
jle
mov
adc
in
subb
jle
int
mov
cmc
mov
cmp
sub
into
jns
or
sahf
jbe
ljmp
ss
push
inc
xchg
xchg
clc
add
jmp
sti
jo
sub
cmc
iret
xor
lret
lods
mov
stos
jg
dec
jp
jp
dec
adc
cmpb
icebp
xchg
js
and
push
fisttps
mov
jmp
xchg
in
int3
inc
call
enter
out
mov
shlb
popa
mov
mov
xchg
mov
jno
sub
hlt
jl
sar
popf
test
in
sbb
push
out
enter
pop
in
fisubrs
push
pop
into
adc
mov
xlat
pushf
lahf
in
push
push
jnp
fisttpll
in
int
cmp
jp
outsl
xor
adc
add
sbb
cli
orl
push
popa
sbb
lds
push
call
stc
push
inc
fs
dec
xorb
div
fstps
fdivr
cltd
and
lock
call
scas
lods
sti
pop
xchg
flds
nop
add
jecxz
dec
shrb
push
cmp
cmp
lea
or
lret
or
pop
or
in
out
mov
lcall
idivl
into
pop
sbb
mov
mov
imul
cli
mov
jg
fidivrl
sub
mov
test
in
add
std
mov
add
decl
stc
sbb
int
arpl
xor
mov
or
shll
mov
mov
pusha
jle
cmc
leave
pushl
inc
mov
mov
dec
inc
sub
lret
popf
inc
pop
lds
jmp
in
call
shrb
jb
lahf
dec
iret
sbb
js
faddl
xchg
mov
out
adc
xchg
mov
je
in
testl
sbb
push
je
mov
ja
inc
sub
insb
mov
mov
aaa
mov
cmp
call
mov
adc
mov
es
mov
mov
xchg
sahf
fisubl
mov
inc
sub
loopne
push
xchg
add
mov
dec
xor
iret
fnstenv
mov
xchg
cmp
cmc
inc
mov
scas
mov
or
ds
and
pushl
sub
lahf
dec
jg
and
cmc
std
xchg
aaa
cld
jge
xor
push
xchg
int3
fsubrl
jnp
mov
pushl
jp
ret
out
repnz
scas
mov
lahf
lret
or
sbb
ljmp
pop
and
divb
adc
mov
sub
cmpsl
in
std
mov
fwait
jl
clc
or
lock
xchg
icebp
jo
mov
fwait
aam
sti
and
push
push
sarb
push
gs
pop
dec
mov
movsb
mov
in
or
sahf
pushf
xor
cli
call
ret
or
scas
xchg
scas
sahf
mov
push
movsl
pushf
shll
mov
rol
mov
sbbl
test
xchg
add
aas
hlt
jo
pop
sbb
or
leave
or
inc
xlat
jo
enter
push
sub
aad
push
mov
dec
out
mov
leave
sub
test
lahf
inc
pop
cli
mov
sub
out
mov
cmp
mov
lcall
fdiv
sbb
jae
ret
jle
add
push
iret
lock
or
pop
imul
aas
dec
aad
cwtl
or
jmp
into
or
loop
adc
mov
lret
push
add
cmp
xchg
sar
fildll
mov
pushf
dec
filds
xorl
pusha
in
push
inc
cmp
dec
hlt
es
mov
push
jp
pop
lock
in
arpl
push
fbstp
lea
mov
rcl
add
ljmp
neg
and
adc
cmpb
orb
ret
out
clc
filds
outsb
add
dec
mov
cmp
mov
jne
adc
mov
mov
cmc
cs
mov
xchg
mov
push
sbb
mov
in
jns
ljmp
sbb
pop
add
inc
subl
es
test
lds
ljmp
pop
jno
idiv
pop
adc
in
inc
cmp
mov
pop
or
lret
mov
pop
mov
lea
jmp
scas
rcrb
nop
into
ret
mov
cmc
adc
or
ret
inc
jmp
xchg
add
inc
stos
sbb
cmp
or
aad
jnp
push
xchg
xchg
rcr
sbb
in
cmp
dec
test
mov
jg
sub
cli
jmp
aas
inc
in
jo
decl
jnp
orb
fisubl
test
adc
cwtl
ficoms
ss
jmp
lock
or
xchg
dec
cmp
insb
mov
xchg
les
push
sbb
add
push
std
ljmp
cs
lock
adc
inc
fdivs
pop
pop
xor
xchg
xchg
fcmovne
cli
jae
xchg
lock
ljmp
mov
les
loope
pusha
incl
inc
adc
cwtl
hlt
pushf
dec
dec
xor
andl
incl
jecxz
cmpsb
push
adc
shlb
sbb
fs
in
idivb
aaa
mov
inc
add
mov
sub
jge
mov
shr
add
sub
insb
adc
arpl
pushl
push
mov
popa
mov
cwtl
dec
incb
pusha
repz
idiv
incl
loopne
addr16
das
fucomip
jl
xchg
jp
mov
push
inc
test
decl
mulb
gs
add
push
and
outsl
call
outsl
xor
mov
std
mov
or
fcmovb
cmp
in
lods
xchg
scas
push
dec
test
jb
push
outsl
sar
push
insl
pop
pop
dec
pushf
in
or
pusha
test
mov
push
out
test
mov
shrl
jp
and
loope
jmp
sub
cmp
and
xlat
jmp
cmpsb
and
or
lret
xchg
push
sbb
ljmp
cld
pop
gs
outsb
pop
jl
and
data16
jp
pop
mov
int
cmc
xlat
pushf
mov
mov
test
xchg
sub
into
sarl
jmp
cmp
push
insb
ljmp
cld
js
inc
in
out
or
test
repnz
xchg
mov
in
and
clc
push
xor
stos
rcrl
jmp
jo
aaa
xor
test
fbld
addr16
pop
clc
push
sub
push
dec
stos
outsb
push
fdivrs
in
in
sub
pop
inc
fdivr
jg
incl
add
pop
jae
xchg
call
xor
xlat
inc
pop
fmuls
pushl
xor
push
jno
sub
les
mov
or
sub
sub
lock
incl
mov
cmpsl
in
xchg
adc
sbb
call
mov
movsl
loopne
or
in
mov
aam
jo
jo
ljmp
mov
pop
pop
push
test
lahf
roll
mov
ljmp
int3
out
repz
ret
add
lods
ljmp
or
cmpsb
dec
mov
jl
addr16
jbe
xor
push
out
out
out
push
rcrb
out
pop
or
fcomip
mov
mov
lods
adcl
imul
jl
jns
xchg
xor
push
aad
loopne
mov
jecxz
jmp
jecxz
dec
jae
mov
mov
xor
out
and
loopne
sbb
adcb
jge
decl
call
jl
je
lods
mov
into
scas
js
cmp
jbe
loopne
jle
rcl
call
or
dec
sti
ljmp
inc
sbb
or
add
notb
jg
enter
dec
and
js
mov
jmp
xor
lea
loopne
test
js
cmpsl
xor
push
testb
adc
cs
mov
jp
mov
add
std
sbb
movsb
loope
or
fstps
jnp
mov
dec
nop
mov
decl
mov
dec
push
pop
jno
repz
pop
inc
dec
xor
sub
and
or
imul
jnp
and
jmp
and
pop
stc
xchg
imul
out
pop
mov
insb
pop
dec
add
scas
ret
sbb
aaa
jge
stos
popa
pop
add
jmp
sar
mov
mov
jne
stc
dec
mov
test
loop
push
push
jp
adc
jg
popa
call
sbb
lret
das
xor
mov
aad
jp
lret
loop
lods
movsb
clc
out
clc
jmp
mov
jecxz
add
dec
cld
mov
lea
or
sbb
lcall
mov
mov
inc
daa
sarl
int
dec
call
mov
fstpt
data16
push
and
loope
mov
cmp
lcall
jle
xor
js
cwtl
dec
push
xlat
aam
push
fiadds
jp
xor
es
xchg
lcall
jno
mov
push
outsl
addr16
mov
cmp
jnp
jp
add
add
or
outsl
loop
cmp
icebp
dec
loopne
pmulhw
jbe
aas
add
shr
push
adc
stos
stos
jae
loopne
pushl
into
loop
jg
aam
push
shl
push
mov
test
xor
mov
clc
mov
mov
mov
shlb
pop
movzwl
sub
mov
das
jno
js
sub
leave
pop
inc
mov
add
ljmp
mov
enter
gs
add
out
sbbb
or
std
ljmp
xchg
shl
dec
pop
push
jns
or
out
cli
lcall
mov
incl
or
jmp
and
scas
cli
and
mov
loope
data16
scas
into
lock
jg
decl
inc
and
xchg
mov
jg
loope
inc
add
je
faddp
sbb
decl
aam
jge
cmp
add
sbb
jg
shr
fnstsw
sarb
pop
jns
in
insl
inc
sbb
bound
call
out
xchg
mov
mov
or
fcomip
xor
popf
scas
mov
filds
fnstsw
pushl
sub
pop
add
xor
pop
or
or
sub
sub
xor
sub
daa
push
es
std
and
addr16
sahf
push
addr16
popf
jge
std
sahf
xchg
in
cmp
test
push
pop
or
inc
nop
jno
mov
out
pop
and
and
mov
fcomip
adc
xor
orl
filds
adc
stos
nop
les
call
push
mulb
mul
out
rep
mov
sbb
jbe
mov
inc
dec
add
jg
sub
adc
adc
imul
in
adc
loope
sub
jbe
pop
jg
imul
jne
xor
mov
dec
fmulp
inc
mov
cltd
mov
jne
inc
cld
fldz
push
inc
ljmp
cld
add
jecxz
mov
jg
push
stos
lahf
je
ret
cmp
out
clc
jne
sar
loope
push
aad
or
and
lea
add
decl
popa
xchg
setae
mov
iret
sub
scas
mov
mov
ljmp
repnz
out
mov
nop
movsl
cmp
mov
push
mov
scas
fcompl
pushf
jbe
dec
mov
lock
xor
adc
fstpt
pop
ja
sub
jns
pop
jo
cld
testl
rcrl
loop
fstpl
cwtl
lret
cwtl
xchg
shlb
rolb
mov
nop
ja
jg
fdivrl
in
cmp
icebp
jge
andl
sbb
in
xchg
cmp
mov
cld
push
es
xchg
push
jge
daa
xlat
pop
mov
mov
mov
gs
or
inc
adc
sti
pop
cmp
push
xchg
test
movd
xchg
adc
iret
or
sarb
inc
inc
or
imul
pop
inc
stos
adc
xor
jae
xchg
popa
mov
adc
out
lret
adc
repz
aaa
sub
cli
pop
jg
fs
xor
outsb
adc
inc
ret
sub
lds
adc
or
or
lea
pop
in
cmc
cmp
lcall
sub
loopne
jne
push
nop
lods
jcxz,pt
in
out
sub
pop
and
popa
xchg
mov
sub
xchg
nop
push
or
test
mov
pop
xchg
xchg
mov
and
xchg
leave
cmovp
push
mov
sbb
sbb
adc
orb
daa
push
fcompl
xchg
scas
scas
or
dec
adc
loop
jmp
addr16
jae
mov
jmp
test
xor
lret
pop
mov
ja
or
scas
je
mov
push
loop
gs
scas
cli
lcall
jmp
mov
out
sub
stc
aam
iret
pop
out
test
mov
cmc
test
mov
loopne
repz
scas
js
adc
in
test
mov
clc
decl
jecxz
wrmsr
enter
fistl
sarb
arpl
jg
call
lods
pop
mov
add
adc
cli
adcb
mov
pop
hlt
incl
cmp
pop
cmp
leave
pusha
sbb
mov
jmp
cmp
int
test
fimuls
cli
addr16
mov
mov
decl
pop
lahf
mov
fiaddl
sbb
roll
adc
and
mov
divl
adc
dec
out
add
int
mov
loope
sbb
jbe
xchg
call
adc
je
outsl
rcll
dec
fldcw
jg
jge
push
int3
pop
xchg
inc
sub
repnz
decl
mov
jl
shll
inc
inc
in
xor
lcall
jne
cmp
wbinvd
repz
out
and
pusha
push
jmp
je
sub
jp
sub
jecxz
andb
push
jae
icebp
dec
push
cmp
jg
insl
xor
xchg
call
or
mov
outsb
cli
shl
aas
dec
jl
cmp
sub
cmp
fimull
xchg
inc
mov
lcall
call
pushf
or
mov
popf
mov
pop
add
or
lcall
pop
push
test
inc
movsb
xchg
inc
dec
jae
pop
push
sbb
inc
or
fisttpll
pushf
push
dec
sub
outsb
dec
cli
add
mov
xor
inc
jle
test
mov
into
sbb
stc
fcomip
incl
mov
cmp
add
mov
mov
int
ja
jmp
mov
xchg
xchg
push
push
adcl
and
test
and
mov
sub
scas
xchg
lock
test
or
lret
lock
decl
cmp
test
cmp
lret
lock
lcall
out
sub
scas
test
lds
mov
add
adc
imul
fcomps
scas
xor
icebp
out
jecxz
call
mov
mov
fwait
push
mov
push
or
in
add
mov
dec
pop
xorb
jg
mov
push
pop
mov
arpl
xor
mov
sbb
fidivl
adc
icebp
decl
xorl
xchg
stc
shll
inc
adc
sbb
pushl
sub
xor
dec
cmpsl
movsb
push
idivl
jne
push
push
je
fists
scas
add
fs
and
mov
stc
pushf
imulb
cmp
dec
inc
call
aaa
push
mov
lds
scas
rcrb
push
inc
inc
push
nop
decl
lret
xchg
jns
dec
into
iret
xchg
dec
ret
inc
jo
mov
fwait
aad
xor
call
jle
mov
ljmp
xchg
in
sar
je
adc
or
pushf
lods
sbb
mov
out
rcrl
loop
dec
daa
mov
iret
jno
inc
jl
jl
lcall
add
sbb
xlat
divb
addl
or
scas
adcl
scas
add
mov
ljmp
cmpb
mov
lcall
cmp
sbb
enter
lcall
inc
outsb
fwait
test
es
call
mov
jbe
fs
cmp
xor
inc
push
dec
loopne
sti
push
lods
jno
mov
imul
cs
movsl
in
pop
hlt
sbb
mov
cltd
leave
pop
test
pushf
and
cmp
test
ror
ret
jb
test
cmp
call
pushl
xor
lcall
push
scas
decl
outsb
sub
mov
jl
add
push
mov
or
repnz
sbb
pushl
insl
pop
xchg
movsl
jae
push
loope
test
mov
jl
jg
pop
cmc
daa
adc
divb
pop
mov
ret
mov
and
xlat
call
fcmovnbe
sbb
fnstenv
in
fidivl
data16
mov
or
mov
sbb
adc
shrb
nop
adc
imul
or
jle
pop
call
into
xlat
push
aam
jl
sbb
leave
pop
int3
insb
lds
ss
outsb
mov
dec
fsubrs
testb
cmpsl
popa
and
ret
sub
inc
push
fsubrl
xchg
dec
cmc
fnstcw
shrl
jbe
popw
cmpb
lret
adc
mov
add
xchg
adc
mov
adcb
pop
xchg
push
adc
inc
mov
aad
xchg
incl
fisubs
and
mov
mov
shrb
jmp
int
mov
or
mov
in
mov
mov
clc
pop
push
ljmp
notb
dec
lahf
dec
stos
push
in
jno
gs
sbb
xor
insl
call
jecxz
jp
pop
fdivl
pushf
jo
dec
xchg
cmp
pop
fistl
into
mov
in
fstpt
ljmp
jns
in
nop
mov
inc
in
outsl
xchg
ffreep
push
and
push
or
sbb
les
lret
fists
mov
mov
jns
mov
sub
mov
divb
and
and
mov
ret
sub
mov
adcb
fmuls
jno
popf
out
inc
out
enter
rcl
ret
push
fnstenv
insl
ljmp
sub
xchg
xlat
or
pop
push
dec
cmp
inc
xor
decl
xchg
add
cltd
add
imul
xor
jmp
mov
or
add
lea
add
addl
dec
sbbb
sbb
imul
leave
shlb
inc
or
sub
adc
in
outsl
call
or
pop
mov
jno
ds
enter
out
call
cli
test
mov
inc
pop
xchg
xor
lea
inc
decl
incb
icebp
inc
pop
insb
pop
xchg
or
mov
lea
jns
and
add
push
dec
or
call
fwait
dec
fs
xchg
xchg
aam
pop
cmp
pop
leave
adc
mov
cld
xchg
cmp
popf
add
pop
sar
pushl
xlat
dec
sub
les
mov
fisubrl
cmpsl
test
lds
das
in
inc
xchg
pop
adc
fcoms
adc
daa
push
push
sbb
movsb
out
faddp
dec
mov
mov
jmp
imul
sub
cmpsb
jl
pop
outsb
outsb
lock
clc
lds
jae
rorl
lcall
in
xor
outsl
mov
insb
sbb
mov
aam
stos
inc
lcall
jmp
je
mov
jecxz
nop
mov
shlb
push
pop
dec
int3
mov
jmp
push
adc
cmpsb
mov
mov
jo
rcrb
sbb
push
mov
call
lods
jae
leave
outsb
add
lret
filds
clc
mov
cmp
xchg
mov
xchg
aas
xor
hlt
dec
jo
aas
loopne
scas
ljmp
xchg
and
call
cmp
jmp
repnz
lods
enter
xchg
lcall
xchg
int3
imul
and
jg
mov
mov
mov
mov
add
mov
mov
lcall
dec
dec
mov
loopne
sub
xor
jp
pushl
sub
movsb
gs
add
ficompl
je
jl
nop
out
icebp
int
int
cmp
mov
out
and
inc
icebp
nop
inc
add
js
loop
sahf
pop
sbb
mov
xor
enter
mov
call
xchg
dec
cmp
test
lods
or
negb
movsb
les
add
mov
out
mov
cmpsb
arpl
dec
add
jne
scas
mov
nop
in
jecxz
inc
push
sub
repz
fisttps
in
int3
imul
ss
lea
sub
pushl
push
ficomps
mov
outsl
mov
mov
push
adc
sar
lcall
mov
cmp
sbb
and
outsb
push
filds
dec
into
cmpsl
xchg
ja
iret
jo
cmpsl
scas
rcrb
mov
jp
pop
push
stc
shlb
out
jo
out
cld
cli
sub
or
xor
mov
addr16
test
cld
xchg
int
push
push
sbb
inc
pop
std
lock
dec
adc
dec
incb
mov
xchg
jns
enter
jp
pushl
mov
les
push
push
xchg
mov
out
pop
lods
cmp
cmpsl
xchg
jg
mov
push
dec
mov
add
stos
repnz
fsubs
in
mov
incb
bound
mov
aas
out
sbb
cmp
out
out
adc
xchg
ret
mov
xor
jle
mov
cld
out
in
test
sub
adc
and
cmc
std
lcall
mov
enter
out
shlb
divb
or
cmp
pusha
mov
inc
inc
sti
xor
aas
add
cmp
decl
es
or
cmc
xchg
pop
fs
loope
clc
incl
test
push
loope
ss
cmpb
insl
cmp
rcll
inc
mov
ljmp
mov
leave
xchg
and
sub
xor
mov
faddl
cmp
out
mov
jge
dec
push
sub
mov
pushl
sub
mov
popa
mov
arpl
stos
pop
sbb
push
mov
push
gs
jmp
cmp
push
pushf
mov
out
test
ljmp
adc
out
mov
inc
test
push
lods
hlt
test
mov
mov
dec
inc
fistps
mov
enter
cmc
mov
push
fs
inc
xchg
outsl
lock
pushl
xchg
cltd
in
add
jecxz
in
add
xor
pop
out
int
adc
mov
mov
add
lcall
into
pop
mov
lds
pop
xor
insl
test
pusha
je
ret
xchg
add
test
cmovae
cld
cmp
xor
insb
mov
adc
mov
jmp
out
test
mov
iret
fdivr
outsl
xchg
movsb
dec
mov
es
inc
es
pop
mov
call
cmp
in
dec
xchg
arpl
cwtl
dec
stc
jb
or
ljmp
xchg
je
shll
cmp
jno
scas
orb
xor
lea
dec
out
les
push
fdivs
ljmp
pop
outsl
xchg
daa
test
mov
xor
jl
push
mov
xor
mov
mov
test
mov
mov
xchg
push
cmp
das
aas
jne
adc
inc
mov
mov
fiaddl
mov
shrb
imulb
call
fs
jno
sub
adc
stos
jmp
loope
repz
or
mov
scas
lahf
mov
cwtl
xor
std
pop
pushl
push
sarb
ds
int3
lahf
cltd
loop
orb
notl
pushl
cld
faddl
inc
push
cwtl
dec
pop
daa
mov
pop
loope
lods
and
jbe
jo
decl
fmuls
stos
or
shl
es
cmp
adc
das
pop
sahf
jecxz
loop
mov
and
xchg
out
sub
sub
mov
add
decl
shrl
mov
jg
movsb
jns
sarb
jp
lods
pop
and
xor
call
lahf
jge
dec
leave
dec
insb
fdivr
ljmp
js
mov
mov
enter
call
rcll
and
mov
ss
mov
xchg
sub
daa
add
sbb
rorl
imul
adc
movsl
lods
cmc
jge
ret
je
xchg
aas
mov
push
jp
inc
inc
mov
mov
sbb
pop
enter
negl
imul
pop
rorb
mov
jno
loopne
or
mov
sub
daa
popa
jae
movsl
mov
out
mov
mov
and
pop
sar
filds
scas
jmp
outsb
jbe
sub
jae
jnp
pop
subl
jg
xor
ficoms
push
pop
pop
adc
pop
mov
adc
jmp
ljmp
and
mov
shrb
push
sbb
sbb
out
pusha
or
jne
int3
mov
ret
pop
mov
ret
jbe
fdivrl
decl
outsb
movsb
xchg
fisttps
stos
ss
ja
jle
scas
mov
mov
gs
rcll
xlat
push
inc
sbb
cmp
movsb
mov
push
xor
mov
cltd
loopne
push
andb
lcall
cmpb
xlat
movsb
sar
fmul
adc
fdiv
mov
inc
xchg
xchg
scas
out
dec
mov
push
pop
int3
push
and
lods
add
or
idiv
decl
popa
jecxz
adc
cmc
in
mov
pop
or
jo
arpl
mov
sbb
sbb
rolb
incl
adc
aad
pop
sub
fucompp
dec
jge
das
fs
jg
pop
add
lret
mov
ret
dec
dec
sub
add
lcall
out
movsb
mov
stc
sub
cmp
arpl
les
fs
push
push
int3
cmp
push
jg
lahf
mov
inc
cmp
pop
pushl
fimull
ret
and
insb
mov
fildll
cli
add
mov
adc
pop
fidivrs
xchg
mov
add
jno
mov
inc
dec
enter
dec
push
sub
loopne
daa
mov
data16
jo
dec
pop
mov
cmpl
sub
push
push
inc
sub
push
cmp
cltd
pushl
xor
enter
lcall
mov
aaa
sbb
sahf
addr16
call
shlb
std
push
sub
scas
test
cmp
shlb
data16
cmp
insb
imul
call
jp
leave
lea
lret
dec
fs
in
inc
bound
decl
stos
es
sub
rorl
int
mov
sbb
xchg
daa
jno
mov
jle
cld
test
mov
int3
into
dec
or
pop
cs
stos
cmp
jp
mov
ljmp
inc
imul
je
icebp
sub
pushl
shll
xlat
dec
xchg
std
sbb
jae
xchg
xor
pop
js
xchg
pop
imul
dec
mov
pushl
cld
mov
cli
pop
inc
mov
jno
push
call
jmp
fsubr
jmp
push
enter
jmp
fs
pushl
enter
in
push
dec
mov
mov
or
inc
adc
mov
repnz
imul
notl
insb
mov
out
pop
dec
lods
pop
push
icebp
mov
js
dec
jb
xchg
cmc
push
rorl
inc
int
inc
mov
mov
mov
testb
and
push
jg
ljmp
rolb
inc
jle
mov
lds
inc
es
pushl
std
xor
mov
call
and
mov
push
jge
ds
or
filds
xor
in
lods
rorb
lock
dec
xor
and
decl
stos
filds
hlt
add
cmp
int
movsb
push
imul
icebp
out
pushl
inc
loopne
cwtl
jno
and
sbb
cld
cmp
xchg
inc
pop
mov
call
ja
imul
andb
bound
jmp
ljmp
dec
jp
lock
sahf
or
and
and
pop
pushf
sub
das
js
enter
jg
jbe
and
or
cmp
ss
incl
mov
loopnew
imul
push
mov
push
push
or
out
pop
das
mov
ljmp
sti
clc
test
mov
xchg
in
adc
stos
out
clc
stc
or
push
nop
pop
xor
dec
dec
out
pop
xchg
int3
movsl
jmp
or
ljmp
mov
mov
cmpsb
enter
jmp
jns
faddl
mov
xchg
lret
lds
jecxz
cmpb
cmp
push
stos
inc
and
enter
xchg
lods
stos
popf
xchg
rcll
sar
outsb
lods
sbb
decl
inc
add
sbb
cmc
lret
cmp
xchg
jge
xchg
fcmovb
lret
add
push
movsl
decl
ja
cmpsl
js
push
sbb
sti
inc
or
in
jg
mov
cmp
fdivrs
testl
mov
popa
aas
cmp
pop
in
incl
mov
mov
mov
jp
inc
and
mov
ljmp
mov
stos
push
nop
rorb
mov
cmpsb
push
imul
jns
xchg
mov
lcall
mov
enter
xchg
je,pn
enter
adc
dec
cmpsb
test
mov
stos
add
jmp
inc
add
pop
or
iret
jmp
mov
daa
testl
or
jle
push
pop
mov
in
call
ljmp
repz
scas
hlt
int3
or
xchg
nop
out
rcrl
inc
loopne
mov
cltd
jge
inc
loop
dec
clc
call
pusha
xchg
sub
imul
mov
and
incl
pop
mov
enter
and
inc
mov
pop
sbb
push
jmp
sbb
ljmp
xchg
or
arpl
push
repz
loop
sbb
fs
and
lcall
fldpi
loop
inc
adc
lods
ljmp
and
push
xlat
jle
jge
aam
insl
pop
push
inc
xchg
inc
decl
sub
cmp
scas
int
in
adc
xor
jmp
push
mov
fcomip
filds
cmp
jle
les
sbb
lahf
movsl
mov
aaa
sub
insb
mov
insb
aaa
test
stos
and
fcomip
push
jb
movsb
xorb
pop
mov
mov
jecxz
call
testb
lds
mov
push
leave
cltd
push
dec
mov
inc
movsl
add
add
adc
jmp
jo
dec
pop
adc
aaa
mov
hlt
mov
jle
cmp
out
imul
lock
dec
shlb
test
xchg
pop
sub
push
mov
mov
mov
jmp
call
pop
jg
andl
jecxz
int
and
jp
shrb
mov
pop
paddw
lods
mov
mov
or
inc
pusha
cmp
call
loop
cmp
xchg
sbb
mov
leave
sarl
sub
decl
pusha
mov
enter
fidivs
out
fisubrl
dec
or
mov
mov
cli
repnz
push
bound
enter
lods
mov
jmp
push
cmc
sbb
testl
dec
or
rcrl
stos
inc
and
ret
sti
xor
mov
pop
leave
sbb
rorl
ds
xchg
cs
mov
jmp
xlat
es
pmulhw
cwtl
xchg
push
sbb
data16
loope
adc
in
rcr
js
sbb
jns
aad
mov
inc
cli
imul
call
std
xchg
lcall
push
fcoml
sub
pop
dec
in
daa
adc
add
push
xchg
sti
in
stos
pop
push
xchg
pop
pop
push
mov
hlt
rol
ja
push
incl
adc
pop
or
push
in
into
mov
xor
push
mov
jmp
call
arpl
sahf
out
pushf
daa
mov
dec
insb
int3
pop
cmp
data16
subl
incl
push
inc
mov
into
and
mov
mov
cli
dec
add
sbb
aaa
inc
inc
pop
mov
cltd
jmp
and
in
push
insl
aad
push
pop
fcoms
mov
xlat
mov
in
lahf
es
push
mov
dec
push
jl
pop
int
mov
push
jmp
and
call
jno
adc
cwtl
jmp
adc
jo
push
pop
pop
mov
mov
call
push
and
cli
mov
outsb
or
jne
jp
mov
enter
or
es
jp
out
cmp
cli
add
inc
leave
dec
fwait
aam
xor
shrl
leave
pop
and
adc
pushl
mov
xchg
jmp
push
cmp
jo
push
aas
xchg
sbbl
lods
rcr
call
sbb
sti
divl
outsb
jbe
sub
pop
outsb
test
hlt
lret
out
enter
mov
mov
call
pop
jnp
lds
dec
inc
je
or
rclb
es
mov
jne
cld
mov
mov
dec
outsl
jmp
imul
sbb
push
push
lea
out
stos
decl
pop
scas
lret
sbbl
adc
push
cmpl
push
push
shrb
dec
pushf
ret
sub
movsb
xchg
decl
and
les
and
test
insb
inc
mov
xadd
in
les
cmp
inc
int3
lds
jno
mov
dec
dec
xchg
cmp
pop
push
les
fs
dec
js
pusha
push
add
out
cli
out
and
or
insb
orl
jmp
dec
psllq
enter
dec
adc
icebp
or
adc
testl
xlat
fadd
scas
lea
lock
fildll
and
sbb
jmp
pop
lods
add
lahf
mov
sbb
movsl
fisttpll
or
imulb
es
jo
ljmp
aas
xchg
or
lret
out
out
xor
sbb
jmp
shrl
insl
gs
movsl
sbb
sub
xor
cmp
test
scas
fwait
pusha
aam
cmpsl
call
les
mov
gs
pop
mov
jmp
leave
jmp
pop
lcall
popa
cmp
ds
cmc
cmp
das
mov
xchg
idiv
dec
dec
test
adc
xchg
or
dec
daa
mov
ss
lea
sbb
cli
lock
incl
lahf
push
pop
jnp
repnz
push
mov
push
je
cmpb
ss
mov
cmp
decl
lea
cltd
cli
jbe
iret
mov
test
lcall
pop
imul
or
fwait
loopne
lcall
dec
pop
dec
jg
roll
fcom
scas
movsb
sub
mov
js
xor
insb
sar
fbld
push
add
push
or
dec
push
and
clc
ret
mov
inc
mull
cmp
fs
mov
fistpll
andb
lret
addr16
xchg
mov
ljmp
sub
loope
sti
repnz
cmp
and
mov
pop
subb
dec
je
fwait
insb
call
adc
fdivrl
xchg
and
pushl
test
pop
int3
pop
xlat
sub
or
dec
fisubrl
test
imul
int
call
lds
mov
mov
pushl
cli
bound
xchg
adc
mov
sub
ret
adc
filds
hlt
lds
lret
mov
jecxz
repz
push
jp
xchg
push
inc
dec
xor
daa
sbb
xor
inc
and
shrl
pop
repz
inc
mov
incl
jno
les
hlt
inc
mov
fdivr
add
hlt
fdivrl
test
lcall
fs
icebp
cmp
mov
test
mov
mov
repnz
std
call
lods
movsb
mov
pcmpeqd
adc
jl
mov
lcall
outsl
clc
xchg
sbb
rol
lcall
jmp
shll
int
addr16
push
out
test
dec
je
xorb
jbe
shlb
decl
jnp
dec
insl
sbb
adc
fdivs
stos
fwait
into
and
outsl
sub
sbb
in
pop
and
sbb
ffree
dec
jl
popa
push
jmp
int3
pusha
aam
pop
add
jb
xchg
out
pop
pop
cmc
dec
add
repnz
lods
adc
jg
push
popf
lcall
pop
loopne
aad
ss
rorb
jmp
sbb
sub
cli
test
sbb
divb
mov
inc
inc
aaa
mov
xor
mov
dec
nop
xlat
out
clc
pushl
inc
inc
mov
std
loopne
and
adc
movsb
rcrl
pop
sahf
push
mov
out
mov
fcoms
push
add
ret
int
lds
lcall
outsl
das
cmp
and
hlt
sub
loope
repnz
xchg
cmp
repz
jo
inc
movsb
cmp
imul
inc
int
and
decl
xorb
arpl
xchg
inc
cmc
jbe
test
inc
xchg
loop
inc
imul
fcomp
add
jns
dec
adc
dec
lea
and
sub
jle
jg
scas
jo
and
icebp
ss
sub
jmp
rolb
dec
sub
cltd
mov
jle
pop
jl
jl
outsb
inc
push
int3
dec
adc
jecxz
out
pushf
xchg
jg
aas
shlb
addr16
clc
mov
stc
mov
sahf
inc
andl
fwait
mov
cmp
dec
dec
pop
lcall
dec
or
fdivs
xchg
dec
jae
inc
jae
xor
push
mov
mov
push
inc
ljmp
pop
dec
imul
fwait
mov
js
dec
cmp
or
call
cmpsl
clc
mov
inc
sub
sub
jbe
mov
mov
cwtl
ret
jmp
xchg
fcmovnbe
jle
pop
in
fwait
pop
lock
inc
imul
shl
in
pusha
cld
jg
fildl
ss
inc
scas
cmp
inc
test
movsl
out
decl
ja
sub
mov
scas
push
push
mov
jb
jp
incl
imul
ss
jnp
xchg
lods
mov
ljmp
adc
inc
sub
and
dec
lea
sub
cmp
imul
and
int
in
jnp
je
add
push
imul
ljmp
sbb
in
push
push
or
sbb
add
ljmp
pop
push
inc
imul
sahf
mov
and
stc
fiaddl
pop
cs
pop
ds
dec
xchg
gs
outsb
or
adc
sub
jg
decl
pop
mov
aas
fs
loope
dec
sub
mov
std
mov
lret
arpl
cmp
loop
mov
pop
int3
jge
push
mov
lret
xor
idivb
ror
out
stc
xor
inc
xchg
lods
hlt
sarl
pop
fs
scas
push
sub
xchg
imul
out
fdivr
sbb
popl
xor
lahf
mull
push
or
fwait
cmp
aas
cs
cmp
mov
test
aam
call
js
mov
cltd
jns
jmp
inc
cli
jecxz
rclb
insl
fbstp
jo
mov
pop
test
jb
mov
or
nop
inc
xchg
je
mov
pop
or
out
mov
mov
ja
and
or
incl
pushf
jge
xchg
push
daa
imul
adcb
add
imul
dec
ret
punpcklwd
fsubp
or
mov
and
fcomip
call
push
adc
dec
and
xchg
loop
inc
xor
push
pusha
push
pop
aas
shr
lods
call
mov
cmc
test
sbb
or
call
ret
sahf
adc
jecxz
icebp
cmp
push
cli
mov
mov
mov
std
cmp
inc
jg
fcmove
aas
dec
jecxz
mov
stos
adc
fisttpl
inc
xor
fucomp
lret
stc
popa
jo
mov
aaa
push
mov
or
mov
fistl
add
je
jle
and
jae
aam
and
ja
and
pop
pop
mov
jmp
or
mov
adc
fidivl
cmpsb
jg
cwtl
in
inc
push
decl
xchg
insl
sbb
shll
repnz
inc
xor
push
aas
jp
leave
stos
and
mov
cwtl
out
xor
dec
aas
xor
jmp
xor
mov
ret
jo
push
js
mov
call
adc
out
mov
cwtl
xchg
dec
push
jle
out
lahf
mov
and
xchg
jns
mov
data16
sub
and
mov
push
dec
mov
cmp
test
sbb
and
pusha
mov
scas
lahf
int
or
lcall
inc
add
popa
jno
mov
test
rorb
adc
dec
add
adc
or
inc
jg
das
lret
cmp
std
inc
in
jmp
mov
pop
test
xchg
ljmp
loop
enter
outsl
push
rol
add
ljmp
dec
and
cmp
jle
idivb
mov
popa
decl
cli
rcll
clc
push
lcall
fsubrl
addr16
xchg
jae
pushl
std
lcall
lcall
ret
sub
mov
shl
lds
lcall
add
ljmp
push
lret
addr16
fimuls
insl
aam
pop
inc
cld
mov
pop
idiv
std
fcmove
jl
inc
jbe
jns
inc
das
imul
adc
fwait
mov
incl
les
aad
and
mov
das
sub
jbe
lcall
movsl
rcl
test
sbb
adc
push
ljmp
xor
xor
mov
call
add
cmpsb
mov
rorl
insl
popa
ret
adc
aam
dec
cmp
jmp
in
jl
mov
mov
aas
es
addb
ss
pop
fidivrl
cmp
pop
ret
dec
push
in
je
inc
pushl
mov
lea
dec
lea
push
push
rcl
popf
push
iret
ss
loopne
decl
push
sub
hlt
mov
push
ljmp
pop
jae
push
xchg
lret
jg
pop
lret
fwait
push
imul
loopne
pop
xor
loop
xchg
outsb
imul
leave
or
inc
mov
or
sub
mov
jmp
popf
int
int
jge
or
movsl
cmp
pop
stc
mov
out
mov
jb
cld
incl
outsl
aam
sti
fildll
and
mov
shll
call
push
cmpsb
test
call
or
adc
xor
lret
push
mov
sbb
fdivrl
cltd
insb
in
divb
gs
push
mov
lods
and
add
jae
push
popf
mov
mov
xor
xchg
ret
inc
cmp
mov
pop
icebp
cld
mov
pop
dec
jge
and
mov
push
sbb
das
pop
dec
dec
dec
notb
fcomip
decl
push
or
lret
mov
and
pop
movsb
push
cli
or
ret
lret
pushl
iret
xor
cmp
orl
xchg
lahf
popa
cmp
xlat
jg
icebp
test
jmp
and
movsl
pop
xchg
jb
jo
jecxz
es
push
cltd
addr16
pop
inc
int
pushl
add
popa
jnp
js
fs
adc
dec
and
xadd
push
out
ljmp
xor
xor
dec
jge
movb
inc
pop
imulb
jmp
jp
pushf
push
dec
pop
xor
cmpsl
inc
jb
mov
xor
xor
inc
out
cmp
xchg
stc
mov
xlat
popa
pop
into
xchg
loop,pt
xor
adc
ljmp
or
jg
jecxz
and
cmp
outsb
inc
pop
gs
sbb
inc
fs
jmp
sbbb
jne
leave
cmpxchg
popf
stos
addr16
adc
pop
sahf
inc
fists
push
lahf
sub
das
jg
ljmp
jno
jmp
add
sbbb
iret
jb
cltd
loopne
stos
les
mov
mov
daa
dec
ret
cld
mov
dec
std
jmp
jnp
jno
lea
inc
sbb
jb
adc
mov
xor
mov
ljmp
fmull
cmpsb
and
sub
pop
les
push
inc
aas
fmuls
mov
add
mov
popa
xor
pushf
mov
call
pusha
lods
in
sbb
loope
adc
mov
fldl
sub
dec
imul
sbb
add
insl
rorl
fcmovb
rclb
or
cmp
decl
or
aaa
jne
repz
add
push
scas
outsl
stos
mov
cs
mov
dec
xchg
jmp
ljmp
call
icebp
and
es
imul
pusha
push
dec
mov
pop
pop
sbbb
add
ljmp
cmp
mov
les
mov
je
iret
out
add
lcall
mov
adc
imul
xor
decl
mov
xchg
lcall
mov
add
mov
mov
ja
repz
mov
dec
lock
add
test
testl
outsl
clc
jmp
movsb
insl
dec
lea
mov
mov
or
fsubrs
jl
pushl
subl
bnd
push
mov
insl
test
mov
ljmp
insl
push
push
sub
xchg
xchg
pushf
pusha
outsb
jg
lods
cmpsb
cli
mov
aas
push
inc
jle
cmp
ljmp
xor
cli
clc
push
in
js
outsl
dec
test
sbb
jmp
add
leave
in
sbb
out
or
sbb
and
add
jg
mul
pop
and
cltd
or
pop
jge
cmp
out
clc
incl
out
loope
fldl
addb
jae
mov
adc
sub
sbb
mov
call
xchg
notl
jl
inc
xchg
jae
jbe
adc
pop
ds
lcall
mov
dec
pop
inc
out
fsubs
xor
push
mov
popa
jecxz
fildl
lock
test
popa
or
add
fnsave
je
xor
mov
gs
xor
sub
add
gs
cli
jecxz
sbb
xchg
fcoms
incl
xor
movsb
in
and
mov
aas
xchg
insb
fnstcw
fdivr
mov
lret
adc
push
pop
cli
xchg
ss
or
jg
xchg
jge
jp
add
movb
mov
repnz
cmpsb
into
fsubp
add
or
call
out
lods
xchg
imul
sub
int
repz
fwait
lret
lret
out
call
mov
jnp
push
mov
popf
out
jo
std
push
or
push
pop
loopne
cmpsl
mov
xchg
xor
std
push
jo
loop
jg
incb
mov
dec
xorb
mov
imul
xor
xlat
sub
adc
repz
ret
xor
cmp
cmovp
pushl
push
cli
inc
mov
xchg
cmp
lods
add
ret
and
in
jno
push
mov
push
mov
ret
repnz
decl
or
or
pop
stc
or
aam
inc
and
cmpsl
mov
je
mov
mov
fistps
jp
mov
rcll
pushl
xor
aas
stos
std
std
sbb
jecxz
std
add
sub
or
adc
sbb
hlt
jno
add
mov
stos
jo
lock
or
movsb
jnp
cmc
cmp
daa
mov
incl
xchg
clc
add
call
test
jmp
mov
out
or
cli
pop
hlt
cmp
lcall
setno
decl
clc
addr16
pop
arpl
adc
mov
iret
div
sahf
mov
sub
sub
pop
addr16
sub
xor
xor
sarb
shrl
fldt
inc
out
dec
es
es
add
push
cmp
xchg
pop
lret
push
std
cmp
xor
inc
xchg
mov
and
pop
or
sarb
add
in
adc
decl
pushl
in
adc
mov
add
jmp
lea
decl
decb
pop
out
inc
inc
xlat
mov
jmp
push
arpl
add
loop
out
xchg
pop
dec
xchg
stos
sti
jl
aam
incl
inc
dec
aam
adcb
clc
jbe
aam
jg
pop
xor
lea
jg
incl
inc
pop
jmp
mov
sub
arpl
mov
ljmp
jg
mov
inc
cmpsl
cli
das
jge
jne
mov
sbb
add
xchg
jns
es
ljmp
lds
cmp
mov
dec
addl
lods
mov
xor
add
jp
cmpsb
mov
pop
cmp
push
ja
sbb
cmc
fildll
fistps
out
dec
inc
into
dec
scas
mov
or
xchg
fistps
fwait
cltd
roll
jp
pop
pop
stos
into
adc
sub
into
pop
ret
mov
sub
sub
ljmp
prefetcht0
xor
je
xchg
xchg
xchg
and
loopne
jp
mov
jge
push
clc
xor
cld
loop
inc
cwtl
scas
xor
cmp
pop
jbe
ja
mov
jne
out
es
add
cmp
dec
jecxz
imul
clc
mov
loope
test
sbb
pop
mov
jg
lcall
fcmovnb
clc
lret
xchg
jnp
xor
inc
les
roll
and
cli
std
lods
mov
sti
inc
out
addr16
ljmp
loop
adc
sub
mov
decl
fdivl
xor
out
push
mov
push
ljmp
and
clc
ljmp
out
mov
adc
lods
xchg
jle
mov
sbb
xchg
or
out
in
jbe
push
cs
adc
lahf
lods
incl
mov
mov
lods
dec
lock
int
mov
xor
repz
jp
inc
pop
lcall
lea
iret
cmp
jnp
rclb
push
sub
jg
pushl
cmp
clc
repz
mov
testb
fnsave
test
jns
jmp
movsl
and
pop
dec
out
sbb
ret
pop
pop
push
xor
ret
inc
test
pop
push
mov
mov
pushf
or
stos
sub
mov
imul
push
ljmp
adc
mov
and
lret
push
nop
push
xchg
jnp
jmp
push
pop
jns
sbb
dec
ds
stos
inc
decb
dec
call
incl
das
ljmp
nop
nop
add
and
dec
in
adc
pop
cld
mov
ss
mov
mov
dec
push
int3
push
push
mov
lcall
cmp
incl
xchg
iret
push
stos
ficompl
fcomps
stos
pop
and
or
mov
fsubp
insl
mov
inc
shl
push
and
jg
add
xlat
adc
js
fisubl
cld
insb
popa
jmp
popa
xor
and
jge
jae
fwait
loopne
mov
inc
lcall
mov
lret
cs
and
add
pop
jnp
outsb
push
in
xor
cmpsl
mov
jne
out
push
cmp
jno
out
fidivrl
add
loopne
jb
lcall
inc
mov
cmp
cli
sbb
out
bound
mov
insl
and
incl
fnsaves
or
dec
popf
lcall
xor
leave
sbb
clc
movsl
lods
adc
push
mov
xchg
ror
inc
loopne
cmp
stos
push
gs
aas
dec
or
push
xchg
rcrb
inc
adc
incl
std
lcall
ret
or
push
shlb
lahf
xor
call
xchg
xchg
or
mov
mov
stos
mov
xor
mov
pop
sub
emms
imul
pop
pop
pop
push
ret
adc
fwait
adc
jge
mov
aam
and
push
imul
or
sub
lret
push
aas
into
loopne
xor
dec
cmp
arpl
enter
ljmp
in
pop
shrb
pop
lahf
sar
jge
or
sbb
xlat
stc
mov
cmc
fcompl
xchg
jmp
xor
ds
fists
mov
cld
jmp
fdivr
adc
ss
dec
sti
cmpsb
in
mov
xchg
je
sbb
call
jb
int
and
testl
push
lcall
ss
lcall
call
push
inc
add
outsl
push
pop
cwtl
mov
and
cmp
loope
xchg
sub
sbb
ja
cmpsb
movsb
stos
dec
mov
out
pop
add
xchg
adc
mov
xchg
icebp
add
outsb
jl
arpl
push
sbb
scas
jbe
in
fldenv
cmp
dec
cs
decl
and
test
adc
arpl
adc
cmc
scas
jo
mov
cld
pop
into
icebp
cltd
in
movsb
pushl
das
int
imul
mov
ficomps
mov
imul
dec
push
push
aaa
sub
inc
imul
cld
pushl
mov
mov
inc
ret
push
or
mov
add
movups
stos
xchg
ret
cld
lret
inc
xlat
push
mov
into
orl
decl
jns
xor
bnd
dec
mov
aad
jg
mov
fisubs
xchg
test
jge
xor
or
jge
cmp
or
cmp
pushl
or
add
js
pop
dec
fscale
call
sarl
sbb
adc
mov
push
pop
fistpl
lds
push
lret
xorl
jge
push
lret
jle
adc
mov
rorl
push
daa
ret
enter
lret
rcrb
push
cltd
mov
in
pop
pop
or
enter
mov
test
adc
or
test
stos
adc
inc
mov
dec
out
pushl
xchg
outsb
popa
dec
aad
aas
mov
in
shrl
pop
add
push
into
das
mov
sub
push
mov
imull
push
aaa
pop
adc
pop
test
xorb
rcrl
lcall
repz
xchg
gs
lea
lahf
es
cmpsl
xchg
or
xor
lcall
lods
dec
mov
push
mov
mov
iret
mov
test
repnz
sbb
nop
mov
cmp
push
dec
push
pop
int3
pop
in
xchg
aaa
stos
aad
shrb
cs
pop
mov
push
dec
sub
jne
adc
incl
ficomps
cmp
or
xchg
movb
mov
xchg
push
add
pushl
incl
in
or
adc
mov
mov
fisubl
popa
mov
xchg
mov
push
mov
mov
lcall
adc
inc
xor
std
insb
push
rolb
adc
cmp
outsl
clc
and
pusha
jbe
jp
int3
mov
imul
pop
movsb
adc
jg
hlt
mov
fildll
pop
or
iret
arpl
jns
mov
test
outsb
jle
mov
js
xor
pop
push
scas
mov
ljmp
decl
mov
add
ljmp
push
out
pushf
fnstsw
add
sub
xchg
mov
dec
pop
test
das
mov
roll
mov
in
add
inc
mov
add
in
out
cld
ljmp
fnstsw
lods
xchg
inc
pusha
push
lret
arpl
incl
jo
into
lret
lock
and
push
inc
addb
sbb
jmp
mov
das
shl
sbbl
inc
ss
out
mov
ds
jae
lock
jecxz
mov
jl
pop
icebp
jb
xor
shll
add
ds
call
cld
push
adc
or
push
mov
mov
repz
xchg
inc
jp
pop
sub
out
loopne
decl
and
mov
push
rcrl
dec
pand
xchg
jbe
jg
jmp
mov
fsubrs
dec
outsl
mov
test
add
decl
out
mov
mov
push
pop
or
cmpb
inc
enter
pop
sub
add
mov
in
mov
mov
dec
xlat
mov
cmp
mov
pop
jb
mov
test
add
repz
in
dec
bound
jmp
inc
out
call
setp
and
movsb
xchg
mov
scas
popf
cmp
xchg
add
aas
outsl
xor
decl
pop
sarb
pop
or
add
dec
jbe
fidivs
cmc
ljmp
push
jg
ljmp
mov
rcll
adc
push
pop
xchg
mov
int3
sti
in
aad
mov
ljmp
shrl
xor
pop
leave
mov
push
mov
lods
pop
cmc
cmp
fistps
pop
rcrl
cmpsb
sbb
push
inc
xchg
cmp
stos
jns
mov
mov
stc
dec
cmp
cmpsb
aas
and
call
xor
testb
je
add
je
mov
xchg
dec
pop
add
pushl
sahf
mov
icebp
mov
rcll
ficoml
je
call
jb
mov
mov
pop
xor
repnz
popf
inc
aas
sub
jne
push
mov
mov
stos
mov
add
jg
and
cmovb
jmp
and
rclb
addb
call
xchg
or
inc
fidivrl
call
mov
push
inc
pop
add
mov
mov
mov
rorl
xchg
aam
mov
ret
xchg
mov
popa
hlt
mov
pop
mov
mov
xor
jp
jns
jne
popa
and
stos
xchg
mov
aas
push
cmpsb
inc
repz
mov
es
push
adc
mov
sti
dec
mov
sti
enter
xor
call
cmpsl
pop
flds
jmp
and
outsb
and
mov
jl
fwait
or
sar
pop
cld
mov
lea
mov
jmp
xchg
dec
out
mov
int3
out
or
add
dec
add
pop
inc
push
idiv
data16
ljmp
mov
inc
xor
in
pop
dec
ja
cmp
ret
jp
xchg
int3
call
pop
stos
ljmp
and
imul
mov
push
inc
dec
push
leave
push
shlb
ret
std
js
aaa
push
stc
mov
loopne
xchg
jae
out
into
jbe
mov
inc
cmpsb
cmp
pushf
pop
shrb
push
decl
and
in
sahf
test
push
cmp
call
leave
mov
ret
jecxz
dec
inc
mov
mov
push
push
push
pop
or
cmp
call
aas
push
pop
sti
stos
fwait
jb
aaa
in
repnz
add
pop
lcall
cmp
mov
push
cltd
mov
out
mov
cmp
cld
das
sub
push
pop
daa
jl
sub
pop
shlb
pop
xchg
or
pop
bnd
daa
pop
cld
add
shll
rcl
mov
inc
jmp
jecxz
jecxz
add
jmp
mov
cmp
and
dec
lcall
data16
call
nop
data16
movsl
inc
mov
mov
xchg
stos
jno
lcall
cld
mov
push
mov
mov
call
addr16
sbb
adcb
clc
insl
inc
lahf
push
shlb
imul
inc
pop
cld
ljmp
test
icebp
jecxz
push
inc
xchg
fidivrl
dec
sahf
adc
outsl
ret
add
aas
std
test
decl
mov
cld
cmpsl
sbb
push
or
jne
out
mov
loope
adc
jno
incl
ret
stos
insb
call
push
xchg
add
cmpb
sar
stos
pusha
dec
ret
aad
fsubrs
in
call
imul
fwait
add
test
fcoml
and
and
pushl
es
je
adc
loopne
lret
adc
fnsave
ljmp
jns
cwtl
sbb
push
jle
pusha
or
xor
mov
xor
xor
xchg
popf
sub
cltd
adc
shr
aaa
mov
addr16
call
adc
out
push
jg
jnp
cli
mov
mov
shll
std
into
sub
imul
mov
mov
xor
pop
mov
jmp
out
daa
cmp
xchg
mov
mov
push
arpl
jmp
je
iret
and
shlb
movsb
push
pop
mov
lahf
mov
js
mov
insl
aam
lods
inc
into
stos
fsubl
adc
sub
xchg
hlt
ljmp
add
mov
ljmp
into
cltd
rcrb
loopne
pop
imul
loop
adc
incl
sbb
mov
and
push
push
add
rorb
mov
fdivs
inc
lret
ljmp
jge
dec
mov
mov
test
in
sarl
sahf
add
xchg
mov
and
dec
sub
insl
sbb
imul
dec
arpl
mov
popf
insb
mov
lcall
pop
mov
or
int3
mov
in
mov
pushf
fwait
xchg
decl
mov
push
shlb
mov
imul
aam
pop
movsl
repz
ret
stos
add
jne
decl
loop
cmp
mov
cmp
mov
lods
shlb
mov
jo
idiv
dec
fnstsw
sub
cmp
ficoms
pop
xorl
add
das
incl
lock
out
push
sub
push
vmwrite
imul
cmp
dec
decl
out
repnz
xor
insb
stos
mov
imull
push
cmpb
inc
fdivr
aaa
in
clc
or
xor
cmp
out
mov
xor
ljmp
cmpsb
aaa
push
inc
shll
dec
and
pop
ret
decl
pop
arpl
fdivrs
xor
into
testl
inc
jae
push
test
sub
mov
sbb
in
mov
xchg
cmp
cmp
int3
ja
inc
push
inc
fisttpll
adc
lcall
outsb
loopne
in
test
mov
mov
cmp
lret
mov
rcrl
dec
shll
mov
test
stc
test
mov
sbb
shll
mov
sbb
frstor
jmp
adc
push
xor
pop
fcomip
sbb
ja
pop
or
mov
inc
jno
pop
scas
pextrw
pop
jmp
fdivl
or
mov
jmp
fs
xchg
mov
out
aaa
cld
call
sub
jle
rolb
xor
out
xor
int3
mov
loope
adc
test
es
mov
decl
ss
ret
dec
and
mov
add
hlt
push
mov
in
xchg
enter
shr
cmp
jmp
mov
add
mov
in
push
das
and
jg
dec
fsubrl
fs
sub
sub
test
jmp
jg
fstl
hlt
out
xchg
mov
pushl
loope
icebp
adcb
rclb
jbe
push
add
pop
mov
jle,pt
push
incl
push
pop
xlat
adc
lods
in
cmc
mov
jp
aad
fldt
cld
lcall
test
ret
add
or
xchg
dec
pushf
lcall
fistpl
fstps
push
adc
loopne
in
pop
mov
mov
stos
aad
xor
cmp
mov
xchg
out
jne
rorl
lret
out
and
roll
xchg
jg
hlt
pop
mov
pop
in
push
mov
push
std
push
mov
stos
daa
mov
mov
push
shl
call
pop
fisubrs
js
xchg
jnp
pop
sub
sbb
mov
mov
xchg
shlb
movsb
cmp
call
adc
fistl
bound
pop
jg
pop
pop
jbe
shll
repnz
aaa
fwait
xor
test
loope
lcall
jmp
adc
xchg
pop
mov
mov
sub
nop
pop
sub
arpl
jg
jg
xor
xchg
mov
push
push
es
in
mov
mov
call
mov
stos
ja
mov
adc
aad
jl
nop
lcall
inc
jmp
sbb
jo
xor
push
ficompl
fs
cmp
push
push
je
or
das
repnz
mov
ljmp
dec
bound
jmp
xor
notb
jmp
rcr
lods
jmp
cmp
adc
not
out
sub
push
jp
adc
mov
jmp
xchg
ja
jne
addl
pop
dec
mov
lret
push
lods
cmp
loop
jl
out
add
mov
and
aam
cli
decl
fbstp
cmp
popf
pusha
pop
shr
cli
mov
in
aam
sub
and
mov
ss
lea
inc
out
mov
lock
gs
out
xchg
adc
dec
or
pop
idivl
xor
mov
pushl
sahf
dec
mov
fiadds
nop
scas
pushl
ret
lcall
xor
mov
mov
lcall
sbb
outsb
imul
cmp
incl
sub
and
xchg
in
das
push
mov
cli
pop
popl
and
decl
and
adc
and
addb
cmp
iret
push
or
jle
lcall
jo
scas
imul
xor
dec
repz
add
ljmp
scas
outsl
int
lcall
push
cmp
ja
mov
sub
cltd
adc
lods
fcoms
jo
fisttpll
pop
and
scas
je
enter
fdivp
xlat
fstp
inc
push
fmull
ljmp
pop
and
addl
inc
and
jmp
jns
push
sbb
out
sbb
cmc
enter
sub
lcall
mov
jmp
jecxz
repnz
imul
or
lcall
in
ljmp
jae
pop
xor
push
ss
lret
mov
shlb
xlat
sbb
lea
mov
add
xchg
dec
mov
mov
stos
jmp
mov
test
cmp
scas
xor
stc
push
ljmp
nop
jno
add
call
gs
cmc
int3
pop
xlat
arpl
push
cmp
xor
push
dec
jle
fmuls
in
iret
jno
cmp
inc
pop
add
loopne
mov
hlt
push
cwtl
cmp
mov
jmp
add
or
jmp
ljmp
icebp
mov
mov
das
icebp
xchg
lret
movsb
aad
push
mov
daa
out
mov
les
pop
lret
decl
decl
enter
add
xchg
mov
test
pushw
outsl
mov
fdivr
incl
add
fidivl
test
ret
lret
imul
mov
pop
inc
je
leave
lret
mov
call
rcrl
mov
mov
dec
cmp
mov
and
fimull
rcll
push
mov
rorl
dec
inc
mov
lock
addl
outsl
cld
mov
fildll
lea
nop
jmp
jb
addr16
xchg
fldl
sub
cmc
ja
decl
or
mov
mov
aad
or
dec
jbe
cmc
jmp
clc
cmp
scas
outsb
xchg
add
push
dec
sti
stc
mov
jle
xchg
stos
push
lret
jp
test
cmp
clc
movsl
mov
xor
mov
stos
inc
adc
imul
and
test
notb
cwtl
test
ficomps
ljmp
push
cmpsb
mov
push
int
xchg
inc
idivl
aaa
sbb
fiaddl
ljmp
inc
shrl
outsb
cld
lret
pop
cmp
sbb
mulb
xchg
out
cli
cwtl
inc
xor
rclb
dec
cmpsb
jecxz
mov
out
smsw
add
int
mov
aam
xor
repnz
lret
ss
ljmp
add
push
sbb
fcomps
lcall
jns
mov
repz
push
shl
decl
add
xorb
iret
rcr
dec
inc
add
js
mov
jg
add
xchg
xor
add
xor
decl
mov
mov
jns
cmpsb
xor
addl
sbb
int
call
mov
fdivr
xchg
cmpsb
push
or
mov
jmp
lcall
dec
cmp
clc
jge
jg
jae
fcmovb
push
mov
mov
fs
and
outsl
adc
push
pop
add
js
jno
orl
cs
add
mov
mov
daa
pop
cmp
mov
leave
in
fimull
mov
sbb
insl
arpl
mov
aaa
fbstp
push
pop
dec
dec
or
jg
in
add
pop
lods
out
sbb
xor
decl
int3
mov
cmp
push
shrl
mov
or
mov
push
das
cmp
jmp
decl
push
inc
lahf
sub
imul
mov
repz
adcb
dec
outsb
cmpsl
data16
cmp
jmp
jg
pop
out
adc
and
lock
mov
push
push
ret
and
jecxz
lcall
jnp
sbb
xor
enter
mov
xchg
xor
neg
xchg
xor
mov
jg
adc
ficoms
push
pusha
call
xchg
jp
mov
sahf
and
or
pop
insb
mov
jg
push
sub
or
sbb
cld
or
out
aas
lods
fsubp
imull
push
rol
lods
sub
out
popa
jmp
fwait
jbe
lret
ljmp
pop
jle
lea
fbstp
adc
sbb
xchg
int3
add
cli
out
fwait
es
jmp
sub
or
test
rcr
outsl
or
iret
je
mov
rorb
aad
push
call
mov
fcomi
out
movsl
sarb
pushl
xor
mov
ds
mov
arpl
xchg
jge
jmp
xchg
addr16
or
cmp
stos
sbb
int3
xchg
dec
int3
sub
sbbb
clc
dec
fisubs
in
xchg
cld
cli
push
pop
mov
stc
or
lods
fnsave
pushf
xchg
mov
clc
aad
jns
pushl
xor
fisttpll
cld
xor
lcall
mov
mov
sbb
lret
test
popa
aad
rorl
push
mov
mov
mov
decl
mov
mov
push
outsb
es
or
adc
xor
cmc
sub
arpl
stos
and
mov
scas
jno
inc
incl
mov
or
in
cli
lock
sbb
aam
fcoml
and
xchg
dec
rclb
cmp
clc
jg
or
and
inc
push
dec
in
loop
call
mov
push
and
bswap
aam
xchg
fcmovbe
out
decl
fsubrl
mov
push
cmp
cmp
push
add
lahf
mov
mov
in
bound
faddl
scas
mov
sbb
leave
loop
scas
ja
push
and
rcrb
je
repnz
push
test
inc
out
std
js
dec
mov
pop
hlt
jp
iret
aad
xchg
outsb
imul
lds
pop
pushf
dec
cmp
dec
mov
mov
xor
fwait
jg
scas
out
pop
mov
popf
cs
ret
sbb
mov
mov
test
das
cmp
out
insl
out
hlt
cmp
out
mov
push
or
cltd
cmp
call
sub
in
lcall
loopne
inc
into
es
imul
jle
jne
lcall
add
mov
dec
push
sti
scas
dec
std
xchg
pop
cs
pop
xchg
rclb
shrb
roll
ljmp
dec
popa
dec
faddp
dec
notl
int
sub
jmp
lret
fiadds
and
jg
mov
sti
mov
fwait
push
ljmp
sbb
mov
test
mov
xlat
aas
ljmp
sarl
fidivl
lahf
mov
push
out
push
jmp
or
lds
in
mov
hlt
adc
cli
leave
add
int3
xchg
push
pop
test
cmpsl
std
ret
sub
and
pop
inc
push
and
clc
mov
jg
cmpsb
jp
adc
mov
imulb
push
fld
call
mov
aam
in
fiaddl
pop
mov
and
js
push
ja
xor
mov
scas
mov
ja
jle,pn
iret
lcall
aas
push
dec
mov
push
in
cmc
inc
push
adc
jnp
pop
imul
movl
cmp
ljmp
xor
pop
orb
fistl
ret
inc
jge
imul
int
inc
ss
int3
je
lods
or
call
mov
fcmovb
jecxz
sub
or
ja
imul
add
add
out
clc
pop
aaa
ljmp
clc
pushl
mov
ficoms
test
and
bound
xor
sub
xor
incl
popf
scas
cmp
mov
cltd
mov
imul
loopne
push
xor
fucom
ret
ret
jne
ljmp
jno
pop
xor
out
andb
mov
pop
mov
lret
bound
xchg
adc
pushl
scas
lret
push
mov
xor
xor
test
mov
outsl
ror
sar
fldl
mov
lods
int3
mov
adc
jle
inc
mov
ljmp
loopne
jo
xchg
inc
outsl
fwait
fs
and
cmp
fdivrs
popf
insb
adc
pushf
into
lea
mov
dec
mov
test
fnstcw
xchg
int
mov
xor
in
lcall
jbe
push
and
inc
imul
movl
aam
out
xor
insb
call
hlt
mov
or
into
add
std
inc
sub
sbb
inc
mov
pop
add
dec
and
add
ljmp
in
push
insb
or
loop
xlat
pusha
pop
in
cli
jp
or
fwait
lcall
arpl
cld
adc
sbb
rolb
sbb
sub
aam
scas
mov
stos
aam
std
jg
pushl
orl
out
int3
repz
popf
mov
popfw
add
inc
decl
jae
push
loope
scas
shlb
test
pop
out
int3
in
bound
sbb
loope
lcall
cmpsb
pushf
jae
fnstsw
adc
pushf
pop
bound
aaa
std
fcomip
mov
rclb
mov
add
subl
fldcw
cli
stos
hlt
scas
testb
sti
jl
je
int
push
jnp
lret
cmpsb
xchg
ss
std
lcall
mov
xchg
popf
aad
xchg
cmp
cmp
es
enter
jg
ljmp
jge
and
inc
jno
dec
and
roll
jmp
insb
cmp
fistpll
cmp
cmpsb
jl
addr16
dec
xor
lahf
dec
pop
stos
call
in
repnz
xor
data16
cwtl
fs
xlat
sbb
loopne
hlt
stos
jnp
shll
push
jno
inc
mov
and
add
daa
adc
adc
and
loop
test
lcall
mov
xor
pushf
push
xor
pushl
stc
stos
aas
cmc
adc
xlat
ss
cmovg
sahf
shrl
jl
xor
cmp
jecxz
adc
mov
movsb
dec
add
arpl
mov
bound
xchg
rcrl
jp
or
lcall
sub
mov
jo
mov
sub
mov
jl
ss
call
loop
or
jle
fsts
bound
js
mov
dec
das
das
lods
and
ds
es
jae
mov
pusha
cmpsl
incl
cwtl
mov
pop
xchg
js
or
push
inc
pop
test
movl
push
mov
aad
jno
filds
xorb
dec
stos
fwait
jge
test
mov
adc
test
push
aam
sub
sub
add
jge
sbb
mov
cld
mov
cmp
or
mov
ljmp
lock
mov
xor
mov
sub
mov
into
andb
adc
ds
and
dec
jb
xor
push
add
cmpsl
mov
push
lods
in
clc
mov
outsl
and
xor
gs
adc
mov
cmpsb
mov
ljmp
insl
repnz
rcll
leave
int3
mov
mov
scas
lret
mov
lods
enter
ljmp
push
cwtl
dec
or
push
jnp
jle
call
push
gs
pushf
mov
pushf
rorl
lret
xchg
in
cmp
xchg
pop
push
cld
or
pushl
push
aas
ds
stos
test
or
sahf
mov
cmpsb
ret
pop
cmc
xchg
and
xor
aas
in
mov
das
push
stc
jge
daa
sub
icebp
mov
popl
fwait
cld
xor
cmpsb
fisubrs
jnp,pn
sbb
addb
call
or
in
movl
into
std
xchg
jl
jecxz
ljmp
std
and
fnop
and
ljmp
push
cmpsb
scas
pop
dec
fs
cld
aaa
and
dec
mov
test
mov
decl
in
popf
mov
imul
repz
mov
xlat
sub
shl
jmp
fwait
outsw
ja
mov
or
cwtl
push
pop
repz
cwtl
mov
das
aam
leave
orb
pop
cli
dec
arpl
lds
or
pushl
inc
mov
pop
enter
mov
fnsave
rcl
mov
sub
sahf
push
les
jge
ficoml
inc
int
lcall
sub
jne
in
bound
push
cli
incl
mov
outsb
das
pop
divb
lds
sbb
xor
lcall
adc
pop
lcall
mov
jo
xchg
ljmp
and
fwait
mov
push
scas
repz
jg
mov
and
popf
pop
push
negl
xlat
ficoml
test
push
ret
add
sahf
aas
jg
sbb
and
ljmp
ja
lret
mov
and
jg
sbb
adc
push
addr16
mov
stos
rcr
push
pushl
mov
mov
sbb
and
mov
adc
push
xchg
fwait
ja
es
xchg
fmull
loope
add
test
pop
int
cwtl
int
pop
lret
repnz
fst
sub
lcall
jns
fnsave
lods
movsb
iret
iret
sub
jnp
data16
inc
push
sbb
pushl
add
icebp
in
mov
xor
push
xchg
push
cli
mov
add
setno
lods
popa
call
movsl
loopne
ljmp
outsl
and
mov
mov
mov
ja
jne
or
insw
pop
jnp
scas
decl
or
sbb
cli
sub
shr
je
mull
iret
dec
xor
mov
stos
rorb
imul
jno
fwait
test
les
faddl
inc
leave
inc
lret
mov
mov
jno
pop
pop
xchg
in
adc
push
lcall
push
lds
pusha
mov
sbb
mov
loop
pcmpeqd
xor
testl
lret
adc
xchg
xor
jg
sub
add
or
mov
sbb
ja
lea
push
xchg
scas
stc
sub
jmp
nop
inc
aam
imul
mov
pushf
inc
add
push
int
jg
es
ficomps
sub
sbb
mov
insl
cmpsb
jno
adc
xchg
iret
inc
mov
xchg
pop
imul
in
mov
inc
sbb
and
sub
inc
jl
int3
addr16
fs
cld
lcall
imul
or
out
fdivr
jp
rorb
cld
cwtl
or
pop
das
add
adc
sbb
mov
lcall
pushf
mov
inc
leave
and
es
push
sbb
imul
call
test
push
mov
pop
mov
sub
psadbw
sub
ljmp
sbb
aas
es
into
inc
stc
xchg
arpl
ja
push
pop
hlt
or
lds
mov
mov
cmp
jnp
inc
jg
jp
data16
lds
test
scas
mov
jg
push
fcomip
sbbb
cmp
mov
shlb
mov
aas
inc
loope
and
loope
lock
aad
jo
loopne
iret
push
jle
daa
fsubl
and
jmp
or
push
imul
roll
adc
lods
ficoms
inc
out
pop
add
cmc
or
test
dec
psubw
inc
cmp
cwtl
add
mov
fsts
ds
cmpsb
js
dec
lcall
in
push
pop
xchg
rorb
loopne
lods
js
fsubs
sub
ljmp
xchg
dec
add
add
mov
clc
push
notb
loope
push
enter
inc
sbb
cmp
push
sbb
lock
pop
in
jl
ret
ja
fidivrl
adc
adc
or
insl
cmp
cmp
dec
jno
cmp
jbe
inc
or
movsl
clc
out
jb
xchg
leave
xchg
pop
loopne
dec
enter
pushf
dec
inc
cvttps2pi
pop
pop
incl
aaa
cmp
push
inc
fcompl
xchg
repnz
and
sub
and
pop
pop
jmp
and
push
dec
mov
enter
xchg
xchg
pushf
ret
fucomi
mov
clc
jmp
imul
mov
scas
out
and
lret
cli
jl
sub
xor
push
loop
lret
add
cmp
xor
movsb
in
sbb
pop
decl
aam
shlb
mov
aas
mov
js
pop
sub
decl
sbb
cld
shlb
xchg
sbb
jge
or
and
pop
xor
shll
xor
stos
xor
add
add
pop
cld
out
jnp
xor
fldl
negl
pop
and
dec
and
cli
ljmp
mov
lret
leave
test
jns
mov
fcomip
push
jb
mov
dec
adc
push
add
in
adc
gs
inc
cli
push
ror
push
cmp
fidivl
pop
adc
inc
mov
dec
sbb
in
lcall
inc
in
int3
inc
sti
loopne
inc
inc
xlat
or
adc
aam
jo
xchg
jg
mov
cmpl
pop
dec
or
pop
into
jb
cmpsl
in
xchg
pop
movsl
dec
shlb
mov
std
rcll
lcall
sarl
fucomp
jo
pop
lret
fnsave
jo
xchg
lcall
inc
inc
dec
shl
movsl
push
or
lock
or
lret
mov
fwait
sbb
in
push
dec
decl
pop
mov
loopne
xlat
nop
xor
push
lcall
icebp
lcall
and
cmp
les
dec
test
test
std
mov
dec
shll
shr
sbb
outsb
adc
cmpsl
jmp
bound
xchg
cmpsb
cwtl
xor
addr16
mov
cmpl
lcall
add
push
cs
inc
or
mov
add
popa
std
sbb
fsubrl
jns
call
loopne
mov
dec
jecxz
jle
enter
pop
push
fisubs
pop
pop
mov
inc
add
push
fistps
repnz
sbb
cmp
dec
mov
enter
and
jmp
mov
mov
mov
aas
inc
xor
mov
std
mov
adc
adc
aam
xor
mov
push
mov
aaa
std
ja
inc
adc
js
ja
test
cmp
stos
js
mov
test
sub
repnz
es
decl
jb
sbb
iret
inc
mov
mov
popf
sar
pop
mov
out
rclb
aas
std
fdivr
inc
inc
mov
in
enter
push
cmp
pop
mov
sub
bound
stc
push
push
xor
jb
mov
stos
mov
incl
lods
roll
pop
icebp
std
cs
ret
xor
mov
jg
jecxz
push
dec
orl
pop
dec
sbb
or
xchg
sti
adc
data16
jmp
insb
cmp
inc
cmp
je
into
jmp
adc
adc
ljmp
add
jle
stos
adcl
imulb
incl
es
insb
setb
ret
mov
lods
je
add
dec
dec
and
adc
outsb
mov
mov
js
add
push
mov
push
stos
xchg
nop
jecxz
call
movsl
mov
jnp
fwait
int3
pop
pop
add
outsb
movsl
and
sbb
jnp
mov
sub
push
cmpsl
mov
pop
pop
push
dec
icebp
int3
and
outsb
ljmp
dec
sbb
pushf
cmp
pop
hlt
test
pop
or
mov
gs
jo
inc
sbb
mov
and
push
mov
mov
mov
add
sbb
and
hlt
stc
call
sti
andb
push
adc
das
call
xlat
hlt
pusha
hlt
xor
mov
lret
lods
ljmp
or
cltd
and
mov
jbe
dec
mov
imul
jbe
sub
jecxz
mov
shlb
enter
dec
idiv
lcall
lahf
mov
in
rolb
popf
push
push
cltd
or
ficomps
ret
adc
aaa
std
incl
in
insb
xchg
inc
mov
sub
hlt
pushf
test
scas
stos
mov
lea
sub
dec
sub
cmp
push
jl
imul
jg
inc
cli
jmp
movsb
and
fsubl
and
cmpsl
add
push
pop
loope
push
movl
jnp
xchg
jmp
dec
mov
adc
repz
lods
xor
aaa
xor
int3
xchg
or
xlat
out
or
call
fcoms
add
pop
or
out
fwait
adc
adc
mov
decl
pop
clc
mov
mov
in
fcmovu
int
add
lds
jbe
pop
mov
inc
daa
nop
mov
lret
xor
subl
bound
inc
sub
and
call
jmp
ljmp
and
fcmovu
into
ror
mov
call
std
pushf
xor
repz
cld
push
into
jo
sbb
fstps
push
lods
stc
loopew
rcr
dec
jns
xchg
add
je
cmpl
push
test
xor
push
push
sub
inc
rcrb
jne
mov
pushl
pop
aas
sub
lret
cmp
addb
shl
xor
dec
mov
sub
add
jg
outsl
sbb
push
call
ljmp
and
inc
ljmp
jle
inc
insb
lcall
mov
mov
and
mov
cmp
incl
int3
loope
int3
mov
adc
inc
xchg
mov
pushf
das
or
ljmp
mov
in
out
dec
and
jae
dec
xor
or
mov
cmp
outsl
shlb
cmc
neg
xchg
sahf
xchg
cli
mov
fbld
ret
lods
and
sarb
insl
and
mov
inc
pop
pop
imul
and
cmp
dec
pop
xchg
imulb
ljmp
in
sbb
mov
push
enter
mov
out
mov
or
cli
xchg
cmp
adc
xchg
pop
jnp
mov
incl
adc
inc
dec
cmp
aas
xor
hlt
pushl
adc
dec
sub
sarl
mov
push
pushl
xchg
sar
add
mov
repz
xlat
lea
mov
mov
sub
mov
sti
inc
mov
sbb
shrb
jl
in
sahf
arpl
lcall
adc
sbb
js
ljmp
inc
and
push
jnp
xor
jmp
add
ret
cmp
add
mov
sub
sbb
cmpl
pop
sub
pmulhuw
repz
mov
call
jge
sahf
mov
cmp
out
repz
popf
or
ljmp
add
call
inc
mov
repnz
les
sahf
int
add
mov
pop
fisubrs
repz
inc
cmp
xor
pusha
adc
stc
jbe
and
cmp
and
mov
in
filds
lcall
or
mov
mov
call
inc
jl
or
fwait
inc
pop
jmp
into
pop
dec
ret
mov
jecxz
jns
xchg
push
jg
or
fs
sbb
adc
fld
dec
lods
sbb
jmp
call
lret
jne
jae
lods
xchg
jns
iret
sbb
and
popa
inc
mov
ds
std
lods
xchg
cmp
es
out
mov
ficompl
xchg
pop
add
in
fisubrl
jnp
xchg
xchg
jmp
adc
pop
dec
mov
test
ljmp
jg
popf
xchg
loopne
fsubrl
mulb
xchg
std
push
xor
sahf
setbe
daa
decl
add
enter
rclb
lcall
mov
or
sbb
stc
lret
lock
pushf
outsl
cli
jg
in
cwtl
adc
pusha
sub
mov
or
xor
outsl
loop
ljmp
mov
dec
adc
fidivl
xchg
mov
add
cmpsl
pop
lock
das
cli
mov
push
add
adc
push
adc
add
scas
mov
ss
lock
nop
mov
mov
jns
lcall
repnz
inc
and
mov
push
shrl
popa
xorb
add
shll
mov
lds
mov
mov
test
icebp
lcall
xorl
jge
call
fdivrs
jecxz
jb
stos
repz
mov
lock
adc
sbb
sbb
jne
fnstenv
call
xor
xchg
push
shrb
pop
outsl
in
lcall
mov
xor
decl
dec
sbb
in
rorl
stc
outsl
js
mov
pop
xchg
arpl
lret
pop
lcall
pop
or
test
cmp
jg
xchg
fdivrs
mov
stos
scas
movsl
push
or
aad
cs
mov
stos
mov
push
mov
or
inc
and
fwait
mov
sbb
out
fstps
pop
dec
ror
jno
hlt
mov
sub
dec
cmc
mov
xor
or
dec
xchg
cmp
ljmp
or
inc
mov
movsl
rcl
outsb
or
out
shl
xor
push
pop
in
lret
insl
addr16
out
call
je
or
lods
daa
jg
mov
xor
loope
mov
cmp
decl
pop
fdiv
inc
outsb
daa
shll
outsl
ret
insl
push
add
ljmp
clc
scas
in
into
mov
icebp
lcall
stc
and
and
ljmp
dec
pop
cmp
sti
in
in
or
pop
push
jmp
inc
mov
dec
sahf
aad
stc
lcall
pop
push
lock
loop
inc
inc
or
das
hlt
lea
lcall
push
in
mov
add
mov
jmp
aam
mov
scas
js
jmp
mov
mov
and
adc
shll
rcrb
push
cmp
ljmp
push
int3
mov
xchg
aas
jae
sub
push
add
ds
xor
incl
pop
stos
adc
out
mov
jmp
push
cmp
lock
call
ljmp
mulb
xchg
sahf
ret
daa
lahf
loopne
in
adcl
movsb
adc
fs
ret
repz
inc
sarl
int
sahf
icebp
xor
dec
mov
cwtl
push
mov
fcomip
test
ss
xchg
sarl
mov
and
xchg
pop
mov
ljmp
leave
cmp
loopne
adc
nop
or
call
push
xchg
push
out
hlt
lcall
dec
push
cmp
push
nop
fldl
cmp
xchg
dec
int3
outsl
cmp
lcall
roll
jmp
js
add
nop
cmp
dec
sub
cli
push
ds
daa
pop
jl
int
adc
idivl
insb
or
push
push
aam
push
andl
lods
pop
mov
dec
inc
stos
nop
mov
je
adc
movsb
cmpsb
mov
jge
cmp
xchg
adc
bnd
inc
je
sub
lcall
fs
push
incl
loope
sbb
push
je
idivb
xchg
pop
mov
pushl
xorl
and
pop
popf
in
inc
xchg
jecxz
adc
jge
push
popa
dec
or
lock
scas
aam
pop
inc
test
push
iret
pop
cltd
mov
sub
std
lcall
xor
cmpsb
nop
bound
int3
dec
pop
popa
cmpsb
out
cmc
dec
aaa
add
inc
inc
push
add
cld
incl
ret
dec
jecxz
add
mov
das
xor
incb
sbb
cmpsl
xor
sub
daa
pop
or
les
inc
cli
mov
jg
sbb
and
mov
vsqrtsd
add
outsb
out
inc
aad
sub
in
cmp
fdivl
push
xchg
lcall
in
xchg
cmp
es
add
call
shrl
adc
dec
pop
mov
xchg
cs
jmp
test
ja
jmp
call
pop
and
scas
int
cmp
xor
sbb
and
mov
shll
clc
and
dec
sbb
mov
mov
out
mov
dec
bound
push
sbb
cltd
les
decl
lahf
ret
sbb
mov
cmp
iret
popf
cmpsl
and
int
cmp
stos
sar
jmp
xchg
cmp
loopne
inc
fdivrs
xchg
jecxz
scas
cmp
addl
das
clc
call
fistl
outsb
fwait
add
sbb
cmp
pop
cmp
and
incb
or
aaa
mov
push
scas
add
lcall
cmp
hlt
xor
cltd
lods
jbe
lea
int
and
jg
inc
cld
aad
cmpl
popa
xchg
shll
loopne
cmp
dec
fwait
loop
sahf
lcall
mov
loop
jno
cmp
movsb
mov
and
pushl
mov
test
dec
jne
or
mov
dec
or
pop
push
sbb
ret
lds
mov
ret
movsl
cltd
cltd
mov
cmp
add
or
or
cmp
jmp
rcrl
sti
xchg
ds
xchg
test
cmpsb
dec
pop
out
aas
popa
cmp
and
adc
add
fisubl
ljmp
push
imul
dec
dec
insl
int
adc
insl
or
adc
jae
adc
cld
jl
out
mov
sarb
aam
mov
cmp
dec
imul
and
and
jg
add
jge
pop
cmp
pop
std
repz
popa
incl
shrl
jmp
mov
mov
scas
adc
testb
inc
mov
adc
nop
lcall
adc
xor
lods
lcall
addr16
fimull
ljmp
ja
out
das
pop
mov
mov
sub
pop
ss
add
call
mov
add
aam
ljmp
loopne
outsl
mov
outsb
jae
out
jecxz
dec
lods
push
sbb
scas
jecxz
lcall
cmp
add
xchg
xchg
mov
ja
xor
mov
ret
mov
mov
push
enter
or
jae
in
mov
add
nop
jno
xchg
scas
sub
incl
call
ljmp
push
dec
lahf
clc
push
pop
popa
jle
xor
cmpsb
ljmp
push
fstps
loop
repz
sti
jge
adc
push
sub
lcall
pop
or
lods
in
sub
mov
sarl
ljmp
std
push
rcrb
lcall
aam
test
mov
sub
adc
loop
or
in
ljmp
enter
in
jmp
repz
jb
fcomip
jp
pushf
sbb
mov
bound
call
or
dec
jbe
xchg
decb
shrb
or
cmc
push
fistpll
lcall
mov
jg
sahf
sahf
leave
fwait
aad
mov
jno
dec
in
icebp
push
pop
jb
or
out
add
orl
in
mov
scas
dec
push
scas
ud0
lcall
mov
stos
les
aas
outsl
cmp
shr
fldl
loope
dec
ss
dec
sbb
push
out
inc
cmp
loop
sub
mov
or
pop
sbb
ret
xor
leave
sbb
jg
mov
adcb
pushl
mov
data16
ror
dec
gs
jns
mov
inc
loope
sar
lcall
mov
jo
pop
jg
and
mov
out
pushf
jle
add
xor
push
sbb
xor
lock
paddq
xor
mov
lahf
jle
lret
push
daa
cltd
dec
push
pcmpeqw
js
push
push
mov
pushf
lcall
inc
push
dec
cmc
std
sub
popa
rcll
in
fdivrl
pushl
add
les
out
cmc
xor
sbb
fbld
fldenv
decb
mov
clc
mov
adc
xchg
stos
jo
or
call
inc
leave
lods
shrl
das
ljmp
xchg
fwait
inc
mov
lds
pushf
fisubl
lds
imul
mov
fdivr
cmp
outsl
ljmp
inc
loopne
dec
or
jle
cltd
cmpsl
dec
mov
mull
lock
mov
mov
adc
ds
in
or
in
in
sbb
sub
push
adc
hlt
incl
out
cmp
rolb
or
ljmp
test
cmp
cli
cmp
mov
sub
xchg
add
push
pushf
daa
lock
adc
and
stos
clc
mov
js
dec
fs
sbb
jl,pn
jo
lret
and
aam
and
adc
mov
cwtl
or
xchg
call
mov
mov
xchg
cs
les
aaa
pop
add
mov
mov
jle
adc
repnz
mov
ss
inc
xchg
and
and
lcall
mov
call
add
adc
xchg
test
cmp
daa
fisttps
movsb
mov
sub
loop
sahf
xor
xchg
xor
out
rcl
lcall
pop
cltd
das
xor
popf
fstpt
rcrb
clc
push
jle
and
and
lock
mov
pushl
xchg
sbb
add
xlat
sbb
mov
mov
inc
push
xor
mov
test
clc
hlt
shrb
mov
call
sub
out
ljmp
sbb
clc
mov
and
es
mov
and
xchg
and
in
cmp
sarb
outsb
int3
shlb
call
jecxz
leave
sub
fsub
movsl
mov
pop
fwait
add
dec
decl
and
sbb
fwait
xlat
push
gs
xor
jo
and
pop
leave
clc
test
mov
add
mov
sub
jp
fsubrl
sbb
adc
fnsave
hlt
xor
jg
iret
sub
sarb
mov
popaw
ficomps
fstpl
jl
mov
add
sub
sbb
shll
cli
fstpl
adc
ret
int
mov
or
lds
lahf
cmp
sar
dec
shlb
pushf
insb
faddp
in
jns
bnd
jecxz
pop
outsb
dec
push
data16
das
outsb
push
les
pushf
mov
add
sti
aas
imul
ss
adc
cmp
mov
cmp
incl
insl
and
add
daa
call
cs
arpl
in
jg
out
decl
cmpb
lcall
push
call
cmpsl
dec
lcall
fs
cli
ds
jge
ret
sub
adc
sbb
loope
inc
pop
fcompl
rolb
push
out
out
and
push
mov
decl
bound
seto
bound
sbb
gs
fbstp
sti
insb
movsl
jae
mov
jecxz
inc
adc
xchg
icebp
xorb
cmpsl
pminsw
ljmp
scas
std
push
stc
scas
loope
cmp
cltd
loope
pop
lock
scas
cli
lcall
rclb
jge
or
mov
push
sbb
and
xorl
lcall
dec
outsl
int
and
mov
sbb
adc
iret
push
cmp
push
stos
sbb
jge
dec
jae
mov
xor
aad
jecxz
int
cmp
xor
mov
mov
lock
sets
insb
stos
adc
jg
mov
cld
pusha
pop
out
xor
repz
popf
fs
in
pop
insl
out
cld
ljmp
shrb
fs
mov
inc
push
inc
and
outsb
jnp
cmp
pop
js
dec
jecxz
ficompl
xchg
in
out
lahf
jg
mov
or
sbb
daa
out
cli
in
pushf
fdiv
sbb
aad
push
xchg
push
sar
cli
imul
pushf
jns
and
lahf
ljmp
pop
out
mov
sub
loop
mov
sbb
stos
mov
cmp
lea
clc
inc
xchg
ret
jb
bound
dec
and
into
insb
and
or
ss
and
popf
call
leave
fsubr
in
movsb
and
mov
pop
nop
sbb
sub
or
lea
hlt
lret
loope
and
pushl
push
xchg
push
xor
dec
movsb
fcoml
lods
lret
daa
cwtl
pop
gs
pop
jmp
cld
jg
and
push
dec
iret
dec
mov
int3
xchg
fsubrs
push
push
imul
in
adc
jg
aaa
or
enter
push
inc
push
pop
ss
fildll
ds
repz
lret
pop
cmpsb
lret
dec
or
jo
ljmp
mov
outsb
xchg
push
xchg
int3
lock
ja,pt
inc
rcrb
les
aas
das
movsl
loopne
pop
in
push
adc
incl
lock
into
leave
jge
sbb
stos
sub
out
loopne
push
push
push
divb
inc
lds
gs
push
gs
lret
mov
jae
ljmp
fs
sbb
incl
mov
fdivrl
xchg
sbb
push
pop
jbe
jne
mov
cli
and
dec
push
mov
pusha
repnz
pushf
cmpsb
mov
std
lret
gs
add
test
lcall
ljmp
in
sbb
aaa
ret
dec
sub
jge
dec
out
mov
or
scas
stc
sbb
lcall
pusha
insl
cvtpi2ps
and
pop
jb
pop
sarl
adc
movsl
inc
filds
cmc
or
xor
fdivp
sti
jge
incb
incl
xorb
xor
mov
xchg
and
sub
in
gs
incl
ret
es
adc
test
mov
sbb
jp
clc
and
pop
sar
xor
aas
cmp
mov
in
inc
lahf
call
push
jle
jno
xchg
es
add
and
hlt
mov
add
xor
sahf
incl
xor
test
adcb
nop
mov
cwtl
pop
jle
mov
jg
push
testb
imul
ret
adc
dec
inc
jg
addl
das
clc
or
roll
push
mov
add
cmp
fnstsw
pop
jle
fildl
pushl
shlb
xchg
mov
push
inc
pop
lret
cmp
insb
jmp
inc
in
cli
inc
sub
mov
scas
push
mov
roll
push
fadds
mov
fwait
leave
push
add
jp
adc
enter
inc
jp
pop
xchg
call
xor
es
bound
lcall
dec
mov
scas
cmp
pop
push
pop
data16
and
rep
loopne
jmp
or
xchg
pop
dec
mov
add
mov
xchg
outsb
js
arpl
out
push
cmp
mov
or
loop
ret
negb
inc
xchg
scas
pop
adcl
fiadds
fisubl
dec
hlt
xlat
rcrl
inc
icebp
xor
iret
pop
repz
xor
mov
adc
inc
dec
jle
push
outsl
sbb
lahf
cld
mov
sbb
lcall
push
sub
subb
cli
or
sub
lahf
push
test
cld
aaa
loope
ljmp
into
inc
les
orb
and
sub
popa
outsl
jp
testb
cmpsb
xor
popa
jne
jae
aaa
sub
dec
push
orl
jl
cwtl
test
neg
inc
jecxz
jle
inc
fstpt
in
adc
mov
sahf
sbb
push
filds
and
jmp
sub
or
add
shrl
push
pop
cmp
cli
xchg
andl
and
inc
divb
xchg
rolb
or
mov
push
push
pushl
scas
out
addb
aas
je
xor
mov
mov
jns
out
aas
pop
iret
mov
lcall
inc
int3
dec
js
mov
inc
pop
int3
gs
adc
ds
nop
int3
stos
nop
repz
inc
sub
sbb
or
push
add
mov
pop
sbb
cltd
inc
mov
rclb
loope
pop
cwtl
call
jns
xchg
pop
mov
xchg
or
loope
jbe
mov
cwtl
jbe
insb
jecxz
dec
aas
and
push
push
lahf
out
add
insl
sbbl
scas
dec
adc
ljmp
pop
out
sub
xchg
mov
mov
jle
hlt
pop
nop
fnsave
sbb
testb
xchg
lret
jnp
aam
mov
mov
cmp
aaa
and
xchg
lods
mov
pushl
movsb
and
fistpl
jnp
cmpsb
sahf
mov
sub
frstor
aad
push
lock
mov
xor
jo
cmp
add
fstpl
pop
mov
push
mov
xchg
iret
mov
jo
mov
sbb
add
mov
or
loopne
inc
into
mov
sbbb
jmp
xchg
push
sbb
xor
in
fcomip
ret
mov
ret
jo
loopne
xchg
test
xor
adc
xchg
mov
inc
fbld
enter
aad
lret
sbb
sbb
call
call
aam
jb
fstp
sahf
lcall
xchg
jmp
popa
dec
into
adc
jge
dec
mov
sub
into
lods
inc
fidivs
push
std
jmp
pushf
decb
lret
mov
fbstp
pushf
lcall
faddl
or
ljmp
mov
push
sar
xchg
lea
stos
addr16
std
rcll
add
mov
dec
aas
addb
test
clc
inc
imulb
es
ds
jbe
jmp
push
sar
or
jns
mov
test
idivl
fucomip
mov
mov
lahf
decl
cmp
ja
cld
or
stos
test
push
lods
mov
lret
mov
push
xor
cmp
cmp
cmpsl
loopne
ret
mov
xchg
cmp
cwtl
sub
jae
sub
sub
jg
dec
and
sbb
adc
call
ret
js
dec
mov
mov
ss
les
shlb
lcall
decb
movsl
xchg
pop
sbb
mov
or
loop
js
sub
xchg
dec
neg
push
xor
incl
sub
pop
ja
and
dec
fdiv
cmp
xor
adc
sub
pushl
xor
pop
mov
lahf
and
aam
inc
adc
push
cmp
mov
mov
and
adc
in
inc
sub
inc
xchg
rcrb
sub
das
je
jp
lods
jmp
iret
pop
mov
mov
rolb
mov
lods
test
cwtl
popf
je
pop
mov
inc
test
xor
ja
out
gs
jg
xchg
iret
test
lock
lcall
mov
pusha
loopne
inc
ljmp
pop
cmp
or
rcl
xor
insl
push
adcl
stos
pop
int3
or
xor
fsubrs
lods
add
add
ret
inc
in
dec
fdivl
fidivrl
ret
pushf
xchg
add
xchg
push
mov
pop
mov
addr16
jge
push
shlb
push
scas
add
adc
adc
addl
cld
fbstp
jg
sbb
aaa
mov
orl
outsl
xor
call
push
mov
mov
push
imul
das
pcmpgtb
jmp
pop
jnp
mov
xchg
lock
scas
rclb
xchg
cmp
out
xor
subb
stos
inc
mov
sti
adc
mov
adc
dec
and
mov
mov
and
outsb
mov
popf
loope
adc
sbb
mov
lcall
repz
repz
nop
xchg
adc
arpl
pop
lcall
sbb
and
daa
lods
xchg
xchg
and
push
inc
test
decl
stc
jle
int
repnz
add
jmp
jg
out
test
cli
adc
jecxz
lret
stos
aam
daa
sub
cmp
dec
das
cmc
addr16
bnd
sbb
cmp
sub
cli
sbb
dec
aas
lds
imul
mov
mov
xchg
mov
xor
gs
mov
and
mov
lcall
sub
out
mov
xlat
fwait
and
jae
inc
add
sbb
sbb
jg
push
jno
lret
test
dec
pop
adc
sahf
hlt
and
lods
mov
sbb
jno
push
fs
or
sahf
dec
xchg
clc
into
jmp
dec
les
cmp
push
sub
rcrb
mov
loop
lods
mov
or
mov
add
dec
dec
add
mulb
sar
lret
inc
mov
jmp
and
ljmp
js
adc
xchg
aaa
jnp
mov
incl
xor
sub
adc
mov
test
ljmp
pusha
out
push
mov
dec
push
mov
mov
pop
pop
inc
cmp
test
inc
repnz
shrb
inc
sahf
jnp
pop
repnz
jl
mov
push
add
jns
push
jg
and
fcomps
sbb
scas
outsb
or
popa
mov
mov
idiv
and
xor
pushf
sub
mov
cmp
jmp
minps
fwait
aas
out
cs
ds
and
sub
jecxz
sub
outsl
ss
push
retw
fnstcw
fildll
ja
movntq
aaa
fnsave
pop
cld
das
push
cmp
call
imul
or
jecxz
dec
cmpsb
mov
mov
mov
xor
lods
in
jle
jg
out
ljmp
arpl
pop
out
or
inc
int
in
jg
push
jg
jmp
pushl
inc
xor
fs
fldt
sub
jns
out
cli
cmp
mov
or
orl
fidivs
mov
dec
fildl
imul
iret
test
enter
sar
lcall
sub
sbb
fists
xchg
scas
xor
andl
cltd
adc
test
adc
je
sbb
ljmp
push
decb
and
iret
repnz
push
pusha
or
pop
xchg
lret
scas
fisubrl
orb
stos
repz
jmp
call
punpckldq
in
inc
cmp
push
subl
ds
xor
jmp
dec
add
rol
push
cs
test
fisubl
data16
adc
xor
inc
imul
in
ret
ja
enter
testb
push
mov
aad
cli
outsb
gs
outsl
clc
mov
repz
repnz
cmp
inc
fnstsw
call
call
cmp
jge
sbb
sbb
cmc
and
sub
fistpl
outsl
movsl
imul
jg
jg
mov
mov
pushl
mov
imul
xchg
xor
loope
test
adc
fldl
scas
stos
fists
jge
cli
or
decl
fwait
test
cmp
mov
hlt
ljmp
xchg
or
data16
inc
or
decl
sti
fistps
fwait
js
iret
inc
pop
push
aaa
cmpb
jmp
fisttpll
ljmp
mov
das
ret
outsl
pop
jnp
lea
iret
std
das
mov
add
clc
add
xchg
dec
das
ss
adc
lcall
int
lsl
mov
pop
mov
test
rcll
push
cld
call
sub
addl
adc
fs
popf
mov
sti
imull
mov
call
ljmp
jmp
xor
inc
cmpsb
ss
aad
shlb
je
jnp
cmp
jg
sbb
jnp
mov
ljmp
sub
cmp
pop
mov
pusha
sbb
pusha
out
insl
sbb
xchg
loop
idiv
aaa
std
dec
xor
out
idiv
out
pop
test
inc
ja
mov
xchg
imul
jae
jg
mov
into
mov
loope
mov
cli
adc
std
or
subb
push
int3
in
xor
jmp
cmpsb
xor
lea
call
xchg
pushf
lods
mov
cld
xchg
xor
cmp
mov
in
adc
cmp
lret
jns
cld
jb
fiaddl
sbb
pop
pusha
and
ss
pop
leave
cmp
ljmp
cmp
call
adc
rcll
lea
out
jle
fbstp
std
push
or
pop
or
xor
jl
mov
ljmp
std
leave
movsl
add
mov
in
imul
fidivrs
dec
mov
mull
loopne
push
inc
mov
stc
aas
data16
pushl
cli
sub
dec
add
add
lcall
scas
push
and
jmp
mov
jg
push
dec
test
adc
sub
cmpsb
mov
insb
fsubr
cld
out
add
lods
cmp
pop
cmp
pop
pushl
jl
clc
mov
xor
adc
int
outsb
es
mov
fs
incl
outsl
and
jl
leave
cmp
dec
push
mov
add
fbld
incl
or
inc
and
orb
shrb
sbb
lret
mov
jbe
pop
xchg
add
add
mov
dec
les
sub
gs
jp
add
es
mov
inc
lea
mov
pusha
mov
and
out
fwait
pop
cmp
incl
and
ljmp
out
in
in
jne
xor
cwtl
jle
incl
push
rolb
cmp
push
addl
cmc
pop
mov
imul
jl
das
sub
xchg
cmp
add
stos
je
sarl
addr16
mov
cli
aaa
repz
sub
ljmp
aam
cli
mov
cmp
jge
jbe
push
fs
shlb
mov
add
sbb
push
add
and
xchg
out
imul
stc
mov
pop
dec
rcr
pop
and
ja
inc
loopne
test
adc
pop
stc
ret
test
in
mov
imul
push
sub
mov
loopne
dec
in
jae
add
ljmp
fnstenv
dec
add
cmc
xchg
push
mov
call
call
or
jno
pusha
mov
repnz
mov
mov
aaa
lods
pushl
mov
mov
pop
in
sub
int
jg
mov
js
divb
xchg
inc
sti
sbb
shrb
jno
iret
sahf
cwtl
in
loop
enter
addb
outsl
adc
clc
test
les
call
loop
inc
inc
scas
stos
je
testl
dec
mov
or
jne
dec
mov
lock
clc
mov
cmpsl
orl
incl
cld
incl
out
adc
lea
cli
add
dec
jle
pusha
ds
mov
aas
rcll
and
jne
push
pushf
pushl
or
sbb
pop
shl
dec
xor
scas
aas
out
cs
or
aaa
gs
ljmp
decb
jns
mov
decb
cltd
sub
inc
mov
fsubl
popa
rolb
xchg
dec
mov
enter
es
cmc
into
pop
popf
lcall
call
add
shrl
xor
jne
jge
or
aam
test
inc
push
mov
rcrl
pop
push
hlt
mov
mov
pop
adc
fwait
loopne
mov
enter
push
and
in
enter
inc
leave
aam
in
incl
mov
inc
pop
mov
test
jb
cmc
repz
inc
and
jp
fwait
xchg
call
jmp
fisttpll
sbb
outsb
sbb
mov
mov
movsb
mov
jns
mov
and
aad
mov
invd
xchg
adc
lods
xchg
push
or
dec
clc
push
decl
sub
in
lods
imul
loope
dec
pop
pop
and
idiv
ljmp
cltd
dec
pop
cmp
frstor
dec
push
fstpl
jbe
sub
pop
pusha
pop
sar
push
push
int
scas
ljmp
arpl
xchg
aas
pushf
add
adc
daa
std
out
xor
movsb
mov
mov
popf
sbb
pushl
jp
sbb
dec
sbb
sbb
orb
inc
repz
push
and
inc
or
decl
add
mov
sbb
inc
mov
cmp
adc
imul
mov
cmp
sub
jmp
rorl
mov
push
pushf
sti
pop
rorl
dec
sbb
xor
imul
pushl
jg
test
jmp
lret
mov
sbb
scas
gs
popa
or
aaa
cld
sbb
dec
mov
addr16
xor
push
xor
cmp
xchg
pop
inc
pop
jno
jp
xchg
mov
in
fwait
popa
clc
aaa
pop
dec
movsb
das
xchg
call
incl
sbb
repz
xor
mov
and
or
cmp
lahf
cltd
daa
pop
lds
int3
push
aaa
mov
adc
call
mov
push
cmpsl
jne
xorl
dec
test
sbb
ja
out
test
mov
orl
add
jg
lods
ljmp
sub
xchg
and
sub
lret
sar
lcall
je
ss
andl
cmp
mov
inc
clc
pushl
aam
push
clc
xchg
notl
aam
mov
mov
enter
call
xor
lret
iret
jg
jl
repz
xchg
pop
jns
inc
adc
out
xor
cmp
cmp
clc
sbb
sub
mov
mov
shrb
mov
mov
pushf
adc
pop
sbb
pop
cmc
ljmp
push
xor
xlat
cmp
lahf
sub
fdivr
sub
pop
pop
mov
cmp
jmp
add
add
fstpl
xor
push
mov
add
dec
pop
add
mov
into
repnz
ret
int
sahf
js
sub
movsb
pop
mov
incl
mov
imul
loop
sarl
call
push
sbb
sub
push
adc
lds
mov
adc
sar
xor
xlat
and
sbb
sub
fsub
cli
mov
mov
pop
movl
sbb
shlb
jmp
pop
daa
mov
les
cltd
xor
push
xor
mov
inc
out
clc
push
push
mov
popa
lret
icebp
aad
dec
adc
out
sar
ljmp
mov
outsl
shlb
loopne
dec
cwtl
aas
sub
push
cltd
enter
cld
stos
fwait
cwtl
adc
add
shlb
xlat
arpl
decl
inc
dec
and
push
xchg
pusha
mov
mov
sub
xchg
xchg
das
sti
cld
inc
mov
popf
sub
jg
lods
aaa
push
and
dec
shr
hlt
insb
loope
notl
pushl
sub
push
push
loopne
test
jmp
mov
popf
cmc
clc
aaa
mov
nop
clc
sub
fidivrl
out
sbb
in
ss
mov
int3
jmp
out
mov
xor
cld
sub
pop
js
ja
ret
xchg
jle
jmp
ljmp
test
sub
mov
ret
add
incl
and
sbb
pop
fildll
ljmp
mov
in
stos
lock
ja
mov
jmp
cmp
js
fcomps
pushl
dec
push
icebp
divl
in
push
inc
int
shr
mov
insb
mov
outsl
cmpsb
push
pop
das
decl
ljmp
xchg
xor
lcall
mov
xor
adc
pushf
lcall
fmuls
mov
jne
incl
and
jae
in
mov
clc
dec
pop
and
push
mov
push
push
dec
fstp
lods
pushf
pop
sub
jmp
dec
or
ljmp
pop
xchg
testl
aad
xor
mov
pushl
in
cmp
dec
cltd
out
loope
push
xchg
xlat
jmp
cmpsb
mov
push
jmp
jp
hlt
lcall
xchg
or
das
cmpsb
mov
insl
sbb
or
fidivrs
push
jg
lods
test
xchg
push
cs
imul
cmp
stos
cld
jmp
inc
fimuls
js
xorl
push
mov
out
and
test
out
out
mov
push
incl
aaa
lods
push
xor
movb
jnp
mov
lcall
clc
adc
jns
inc
sub
hlt
fdivrl
push
lock
lds
cli
jnp
jl
cs
inc
adcl
and
add
jmp
ljmp
cmpsb
jg
push
in
stos
adc
pop
push
rclb
scas
or
push
lret
cli
out
stc
dec
in
mov
adc
mov
movsb
pop
jbe
dec
in
fcomp
sub
pushl
xor
inc
pop
push
push
inc
inc
lea
stos
sti
pusha
dec
jmp
mov
call
hlt
jge
imul
xchg
loop
cmp
ljmp
incl
pop
es
adc
push
xor
notb
sub
mov
push
mov
lcall
ss
fisubrl
call
incl
adc
jecxz
fldcw
adc
cmpsb
cmp
sbb
mov
fs
aas
cmp
xchg
mov
bnd
lcall
inc
xor
xor
movl
and
xchg
flds
dec
sti
lcall
ljmp
push
pushf
push
push
and
inc
and
mov
lock
data16
ljmp
pushf
arpl
dec
push
enter
sbb
pushl
insl
addr16
jp
push
pop
or
das
adc
adc
lcall
jmp
clc
jmp
ret
mov
add
xorb
lea
fistl
xchg
cs
incb
mov
imul
rcrl
loope
push
scas
mov
xchg
mov
outsl
cmp
cmpsl
cmp
roll
adc
push
jns
add
adc
decl
sbb
jb
jae
fsts
pop
in
addr16
fcmovu
xchg
add
sti
mov
test
mov
jno
sbb
or
pop
pop
push
test
mov
hlt
incl
ffree
adc
cltd
cld
in
lret
jle
iret
stos
push
adcb
xchg
xchg
out
cli
fldl
sub
sbb
mov
push
sub
ja
xchg
and
sbb
cli
push
mov
mov
dec
fiaddl
in
in
es
lods
call
loope
xor
test
pop
xor
scas
int
repz
mov
stos
cli
jg
ljmp
push
dec
jmp
push
mull
xchg
fdivr
cmp
mov
call
cmp
and
scas
hlt
push
es
sbb
pop
test
xchg
sar
cmpsb
mov
cmp
divl
add
and
pop
clc
mov
pop
pop
xor
adc
or
fmull
gs
lods
inc
and
shlb
ret
ds
dec
fcos
lcall
inc
inc
loop
sbb
xor
adc
pop
add
dec
xchg
mov
jg
aad
fwait
mov
xor
lret
or
cmc
pop
fimull
pop
xchg
mov
sti
and
mov
andb
jge
rorb
icebp
or
sub
and
push
aad
nop
dec
js
mov
jg
sub
mov
outsl
pop
push
and
sbbb
or
dec
xlat
pop
push
enter
loop
jae
test
daa
xchg
adcb
incl
popa
adc
cmpsl
ljmp
and
and
das
lahf
fsubrs
lds
jmp
cwtl
jecxz
pop
fstpt
adc
jg
pusha
cld
or
mov
add
mov
or
rorb
bound
fsubrl
xchg
ljmp
pushl
mov
mov
jns
mov
pop
sbb
or
out
ret
cwtl
ds
xor
xchg
inc
aas
cmp
pop
cmp
ljmp
pop
mov
and
xchg
insl
sub
test
xor
test
ljmp
dec
sbb
dec
pop
pop
frstor
repz
push
pop
test
and
andl
stos
xor
decl
xchg
jno
xor
daa
mov
add
jp
fs
inc
cmp
incl
add
mov
push
xchg
sub
mov
mov
xchg
xchg
sbb
dec
fmuls
scas
add
dec
mov
cld
push
pusha
sub
test
add
or
xchg
jg
jmp
cmp
fcomps
testb
into
insl
movd
incl
pushf
xlat
push
ret
pop
repz
fisubrl
lea
lock
push
fwait
xor
xor
push
xchg
jns
mov
and
ficoms
outsb
jge
cld
add
iret
cmp
aas
scas
and
call
rorl
and
aas
cmpsb
or
fwait
dec
jmp
clc
sub
pop
leave
xorl
pop
inc
sbb
adc
push
mov
mov
fdivrp
push
mov
jg
nop
or
dec
clc
sub
adc
or
sub
pop
dec
repnz
imul
push
or
fsubrl
push
js
movsl
test
lock
mov
mov
jmp
push
fistps
fnstcw
sbb
add
mov
lcall
mov
mov
pop
cmp
jp
dec
cmc
dec
mov
test
pop
push
call
add
mov
lds
lds
push
and
jmp
cltd
xchg
or
push
push
cld
jmp
cli
push
cmpsb
loopne
test
ljmp
test
in
decl
aaa
je
dec
push
imul
loope
jo
sub
push
sub
stc
dec
outsb
dec
lock
jg
or
push
ret
cmp
xor
cmp
fstl
push
call
xor
lret
insb
out
cmp
cmp
call
pop
xor
pop
xchg
popa
dec
sbb
stos
xlat
and
and
mov
imul
add
dec
mov
or
pushf
mov
cmp
fbld
or
cmp
inc
push
cld
jne
pop
xlat
pushf
hlt
data16
dec
enter
inc
push
jg
jno
js
xacquire
adc
decl
mov
mov
jns
mov
in
dec
punpckhbw
lea
xor
in
hlt
push
mov
pushf
test
add
cmp
add
push
sbb
leave
mov
imul
fcmovbe
jae
xchg
mov
lods
inc
iret
negl
and
fdivl
sbb
daa
lret
daa
test
push
mov
mov
out
jmp
push
jne
mov
jno
mov
push
xchg
dec
xchg
testb
or
loope
xlat
dec
mov
dec
aaa
sub
call
jg
xchg
sbb
cs
in
pop
arpl
cmp
imull
add
incl
out
adc
push
repnz
mov
mov
enter
mov
xchg
xchg
outsb
cmp
add
xchg
subb
lcall
or
cltd
jecxz
in
sbb
popf
insl
aaa
push
test
dec
mov
ljmp
adc
mov
mov
push
jne
pop
icebp
inc
jne
dec
out
rcl
pop
push
jno
stc
fidivs
into
mov
mov
jg
lret
dec
jbe
pusha
pop
jmp
lcall
repz
adc
es
sub
int3
outsl
jb
jmp
sbb
sub
mov
xorb
and
sarb
mov
stos
xchg
lods
loope
fldcw
daa
js
ja
call
pop
sub
push
hlt
inc
jbe
jne
mov
outsl
and
pop
stc
add
and
cmp
movsb
jmp
pop
or
outsb
xchg
jmp
pop
dec
ret
cmp
rcl
fsubs
notb
ret
aad
ljmp
and
and
dec
out
sbb
out
in
adc
or
cld
ffreep
in
psllq
pushf
addb
pushf
icebp
xchg
jmp
sbb
xchg
add
stc
ja
mov
cmpsl
sbb
adc
sbb
or
pop
cmp
popa
sbb
mov
adc
sbb
jne
enter
push
lock
dec
iret
lock
scas
in
xchg
mov
sub
pushl
jecxz
or
xor
xor
cs
mov
mov
aaa
in
pushl
or
pop
imul
inc
adc
push
or
aas
lock
cld
inc
lods
xchg
jbe
insb
cmp
sbb
loopne
fcmovnu
pop
ss
decl
sub
lcall
js
pop
push
je
push
add
jmp
add
mov
incl
pusha
loope
cmp
cmpsl
nop
sbb
jmp
out
and
aam
imul
stos
sbb
xchg
scas
cmp
push
pop
mov
sar
decl
lock
iret
adc
mov
or
push
dec
sbbb
xor
inc
jnp
cmp
mov
mov
dec
jge
hlt
mov
mov
ret
inc
out
lcall
ss
jnp
into
gs
pop
scas
sbb
dec
push
xor
mov
scas
pop
push
and
out
aas
fstl
sbb
fcoms
jmp
test
sub
scas
sahf
push
rorl
sub
arpl
fnstsw
mov
lcall
dec
xchg
pop
fwait
aas
and
inc
xchg
pushf
sahf
out
lcall
call
imul
xchg
dec
lcall
push
push
push
xor
jo
ret
or
andl
cwtl
add
push
arpl
call
mov
stos
mov
aam
ja
lahf
sbb
clc
stos
into
popf
subl
cs
jmp
mov
out
andl
and
dec
daa
loop
xchg
dec
pop
aam
in
mov
jecxz
jmp
sbb
mov
cld
negb
mov
cli
xlat
ret
lret
adc
frstor
adc
lock
dec
mov
mov
stos
fdivrp
add
mov
mov
mov
mov
adc
add
jmp
lcall
adc
dec
int3
dec
adc
insb
jl
xor
push
clc
mov
lods
fmul
shrb
jb
sbb
mov
sub
and
mov
out
popa
adc
imul
sahf
mov
sahf
xlat
adc
xor
ret
fisttpll
xchg
mov
pop
cmp
test
dec
add
into
mov
in
inc
loope
imul
arpl
lea
dec
shlb
xor
adc
mov
mov
movsb
mov
pop
mov
pop
sbb
lods
push
inc
shll
test
mov
mov
ffreep
jmp
fs
dec
sub
fbstp
jmp
inc
fwait
mov
jmp
mov
push
xchg
adc
mov
lcall
fwait
inc
loope
int
mov
xchg
ret
jecxz
mov
pop
cmp
mov
outsl
pop
clc
aas
andb
movsl
and
into
xchg
or
jl
scas
cmpl
test
or
movsb
push
inc
faddl
mov
jecxz
sti
out
call
aam
and
rorl
movsb
jbe
mov
mov
pop
mov
add
fidivs
pop
outsl
jnp
data16
pop
xchg
jno
ljmp
sbb
mov
in
or
pop
dec
fcoms
push
ss
adc
call
fistpl
data16
pop
cmp
or
or
adc
dec
into
test
jge
unpcklps
and
in
shl
add
cmp
fdivs
mov
lcall
insl
cwtl
xchg
sti
lock
cmpsl
cli
pusha
dec
add
inc
out
popf
push
mov
xchg
test
movsb
aam
jae
fwait
and
lcall
pop
xor
cmp
jl
shll
adc
das
adc
push
popf
imul
fbld
cld
xchg
imul
jne
adc
lods
popa
fwait
lcall
mov
cmc
mov
push
fiaddl
in
inc
nop
jbe
sub
sbb
cmp
cld
jne
push
pusha
mov
in
xchg
cmp
jp
imul
pushl
movsb
jne
fcompl
push
push
test
rorl
test
cltd
inc
cltd
mov
gs
pop
xchg
incl
sbb
jmp
push
aad
push
mov
lods
dec
mov
xlat
sub
lock
lcall
xor
add
movsb
xor
lcall
shrb
pop
pop
push
insl
jo
fdivp
shlb
repz
or
fwait
push
js
push
mov
and
mov
lcall
xlat
inc
sub
int3
scas
inc
imul
or
shll
add
adc
add
push
dec
push
hlt
add
jecxz
fdivs
and
jg
xor
stos
ljmp
inc
hlt
jns
movsl
add
mov
ret
cmp
xchg
pop
loope
outsb
mov
pop
add
push
fdivrl
mov
lock
sub
dec
sbb
dec
jecxz
add
in
xchg
in
into
and
inc
and
addl
ja
aas
jp
xchg
outsl
mov
adc
jg
incl
pop
addr16
xchg
ss
out
jl
call
adc
icebp
jmp
sbb
push
adc
out
lret
lret
mov
out
ret
out
mov
pop
out
adc
fsts
xor
mov
jmp
and
leave
negb
fmul
sti
inc
bound
mov
jbe
mov
cltd
push
shl
mov
adc
rclb
in
daa
adc
and
lahf
inc
in
jg
cmp
sbb
inc
cmpsb
insl
adc
lcall
into
pop
dec
test
mov
jne
inc
pop
or
js
clc
cmp
dec
cmp
and
cltd
cmp
or
shlb
dec
flds
or
stos
popf
push
mov
cmpsb
int
adc
jp
ss
out
sahf
icebp
ljmp
xor
dec
xor
lds
adc
sub
mov
inc
pop
xchg
xchg
ja
jmp
das
sbb
jmp
mov
js
es
incl
adc
stos
lahf
adc
pop
sbb
lea
das
ret
cmp
pop
sahf
call
sbb
test
cmp
out
sbb
aaa
inc
sub
fisubs
sarb
decl
sub
mov
mov
dec
mulb
and
mov
jg
mov
sub
out
test
push
xchg
push
jecxz
pop
int3
mov
dec
sub
inc
out
xchg
jb
mov
orb
and
shrl
adc
popa
inc
lahf
xchg
dec
addr16
cmp
enter
out
mov
out
jecxz
popa
nop
mov
mov
add
or
pop
and
enter
arpl
cld
ljmp
mov
hlt
dec
mov
inc
call
and
or
lret
fdivrs
in
mov
and
test
testl
sbb
std
pop
mov
jae
inc
je
pop
test
cld
jl
xor
mov
cmp
fidivl
dec
sbb
inc
inc
call
push
shrb
out
jp
fidivs
orb
and
call
int
repz
push
mov
cmp
mov
xchg
or
cmp
popf
adc
scas
mov
call
ret
leave
pop
jae
xor
fisttpl
mov
add
fdivp
in
addr16
iret
jbe
dec
cmp
fstps
push
or
in
lcall
int3
mov
sbb
sub
sub
les
fnstenv
mov
jg
sahf
test
sub
es
outsl
rcr
out
pop
imul
jl
pushf
in
fidivs
lea
bound
sahf
jle
enter
jl
inc
xchg
and
insl
scas
in
adc
fistpl
jp
cmp
cmp
incl
add
aad
in
and
xchg
ja
pop
std
incl
mov
pop
dec
mov
fists
cld
add
pop
pop
mov
stos
rolb
mull
add
dec
out
pop
adc
insb
imul
push
std
mov
lret
push
xchg
xchg
jmp
cmp
fmuls
iret
test
dec
ret
dec
dec
repnz
leave
and
or
sbb
loopne
adc
xchg
inc
enter
ljmp
mov
xchg
jg
jp
fs
adc
pop
incl
dec
pop
xor
clc
lods
int
scas
xor
jo
lret
jnp
dec
dec
pop
or
mov
or
push
push
xor
loope
test
xor
add
sub
xchg
iret
fs
dec
adc
and
int3
jp
cli
aaa
add
sti
jne
lcall
pushf
stos
decb
sahf
jp
cmp
inc
hlt
push
int
movsb
pushf
data16
out
mov
push
call
push
and
stc
cmp
jae
mov
xor
xchg
test
incl
shll
cld
movsl
ret
inc
lret
lods
pushf
xchg
iret
inc
xchg
dec
cmp
lcall
cli
fcoms
mov
xchg
addr16
and
xchg
and
inc
ret
mov
aad
dec
jmp
push
insb
sbb
xor
add
xor
lods
fcoml
pushl
xor
mov
jb
inc
or
movsb
out
push
mov
int
pop
ss
inc
jbe
push
pop
lret
andb
stc
add
cmpsb
fdivrs
pop
addl
lcall
adc
leave
enter
daa
int
fdivs
shlb
into
jmp
ret
jp
gs
push
sbb
lods
xor
out
xchg
call
loop
in
and
dec
sbb
leave
xchg
and
mov
sbb
fisttps
lock
dec
sub
movsb
jle
out
es
dec
in
mov
mov
cmp
jne
arpl
and
jp
ficompl
lcall
jb
ljmpw
addr16
pop
add
adc
mov
decl
jl
rorb
xchg
movl
mov
mov
mov
repz
push
aam
xor
pop
xor
lods
sarb
mov
xchg
sahf
pushf
pop
aaa
fadd
xchg
xchg
jb
add
xchg
sbb
sub
sub
inc
sbb
lcall
xor
mov
into
jl
cs
out
aad
and
std
cmpsl
jp
xor
in
in
sahf
push
ja
fcomip
push
dec
movswl
pop
push
pop
pushf
fcomps
add
inc
loop
inc
pop
cmpsb
mov
mov
mov
ret
out
jbe
xchg
stc
aam
les
outsb
cwtl
sub
mov
add
jmp
jmp
std
subb
scas
mov
sub
push
mov
orl
push
call
mov
stc
shlb
or
xorl
rolb
sahf
inc
jp
xchg
fidivs
aad
loopne
movsl
fsubr
mov
mov
repnz
fwait
dec
sub
sub
out
in
fmuls
xlat
cmpsb
jnp
sub
jae
mov
pushf
or
mov
push
outsb
sbb
xchg
cmp
add
mov
push
mov
in
fcomip
mov
rclb
pusha
or
in
push
inc
push
xchg
cmp
jg
sub
scas
jae
js
xor
das
cltd
xchg
or
cmpsl
nop
mov
jg
incl
push
inc
xchg
aam
movsl
push
ja
fistpll
out
jmp
mov
cmp
jb
scas
rolb
cld
in
stos
or
mov
xchg
incl
dec
inc
sub
fnstcw
dec
adc
pop
divl
bound
inc
jge
lret
lret
push
fldl
aam
mov
adc
das
jle
adc
decb
pop
mov
lock
cmpsb
lock
inc
add
call
cs
pop
outsl
pop
inc
xor
cmp
ret
ror
pop
testb
pushl
fsubrs
divl
add
inc
fcompl
sub
loope
sti
loop
cmpsl
in
incl
stos
and
inc
mov
xchg
lret
mov
int
int
and
and
stos
rclb
incl
popa
mov
outsb
gs
jmp
popa
test
pop
mov
or
jecxz
ds
int3
mov
test
inc
jbe
mov
lods
js
in
addr16
mov
lcall
int
add
shlb
in
test
loopne
cmp
call
cmp
jge
mov
incl
mov
jmp
jnp
sti
lret
std
mov
and
mov
sarl
mov
inc
scas
fdivr
pop
hlt
pushl
mov
sub
int3
mov
fisubrs
dec
dec
nop
sub
loop
jmp
aad
scas
outsl
mov
xchg
pop
cmc
jne
rsqrtps
pop
mov
call
popa
shrl
dec
push
mov
mov
push
fsubrl
fadds
in
add
xchg
adc
inc
subl
lret
pop
lods
and
mov
inc
xlat
ror
fdivrp
mov
mov
fistps
sub
mov
cli
ljmp
jne
mov
mov
and
mov
gs
mov
sbb
bound
and
inc
push
loop
incl
popf
pop
mov
xor
push
fldl
jl
lret
mov
movsb
and
and
dec
xlat
dec
and
mov
cmp
and
mov
out
jmp
jg
xor
fisubs
ret
add
fbstp
insl
mov
outsl
xor
lcall
lods
xchg
xor
shlb
lods
lcall
loope
xchg
inc
mov
add
pop
aad
fmuls
pop
mov
jle
test
das
inc
sarl
push
mov
inc
pop
push
push
or
decl
test
dec
pop
sti
incb
insl
pop
inc
leave
dec
stos
sbb
push
jns
int
dec
adc
pop
test
repz
cmpsl
rorb
sbb
jno
sarl
lods
mov
adc
je
xchg
sub
loope
test
jg
dec
lea
jae
dec
inc
fs
mov
cld
jmp
sbb
and
lcall
lock
pop
xor
loop
std
push
push
lea
incl
in
add
fisubs
es
inc
push
jmp
jl
push
adc
decl
jmp
xchg
pop
or
push
add
lahf
pusha
sbb
pusha
std
ljmp
inc
jl
and
push
cltd
mov
sbb
push
push
in
out
jle
or
nop
cmpsl
pop
fwait
repnz
xchg
jnp
and
jg
sub
sub
xchg
xchg
adc
pop
mov
sub
adcl
in
dec
adc
add
iret
fnsave
jo
repnz
ret
jg
and
notb
push
icebp
sbb
dec
insb
call
add
stos
inc
cld
mov
out
fiadds
lcall
lcall
ja
cmc
xchg
xchg
mov
cwtl
fcmovne
iret
rorl
push
rorb
cmp
decl
fisttpl
call
mov
and
fs
jmp
jle
pop
movsb
insl
call
bound
xchg
cmp
mov
fincstp
cmpsl
in
add
dec
or
jb
inc
push
jae
mov
aas
mov
xor
icebp
push
pop
loopne
pushl
cmc
pop
mov
aad
jp
mov
test
inc
sub
sets
std
add
or
dec
adc
jbe
mov
test
enter
js
sahf
ljmp
xchg
pop
daa
or
rorl
test
sbb
mov
cmpsb
adc
cmp
push
notb
ljmp
push
push
cmp
mov
lcall
mov
mov
movsb
stos
adc
decl
mov
or
ja
or
pop
ds
jg
rolb
adc
mov
jg
and
jp
push
in
add
mov
sub
decl
mov
jbe
call
lock
les
and
daa
mov
daa
cmp
cmp
push
xchg
lock
clc
mov
sub
adc
mov
dec
test
mov
scas
icebp
scas
out
or
fistps
mov
clc
mov
or
shr
mov
es
jg
decb
mov
pop
adc
dec
xchg
mov
push
int
ljmp
clc
bound
or
insl
lods
lock
mov
jge
mov
out
and
aad
jmp
mov
and
adc
daa
loop
nop
inc
js
popf
or
cmpsl
xor
or
mov
mov
sbb
dec
and
push
mov
sbb
pop
imul
xchg
call
loopne
mov
cmpsb
mov
daa
fwait
pop
ljmp
aas
fwait
out
out
icebp
mov
sti
adc
rcll
add
adc
sbb
sbb
jno
or
sbb
mov
push
inc
sbb
push
out
clc
xchg
stos
lahf
imul
add
dec
add
sti
or
pop
sub
insl
rcr
push
scas
js
dec
mov
push
jns
ljmp
pop
push
repnz
cmp
mov
inc
out
dec
aas
inc
add
dec
cld
jecxz
or
lcall
loop
xchg
jle
push
mov
jle
jmp
xor
adc
pop
stos
lods
fcmovb
rolb
xor
mov
mov
dec
mov
insl
xchg
in
dec
xor
inc
jno
push
push
jmp
mov
push
das
push
lret
mov
mov
ja
xchg
add
mov
inc
cmp
addl
icebp
dec
add
scas
xchg
stc
or
std
sbb
call
mov
jp
sbb
add
cmc
ja
les
rclb
fmull
out
andb
aam
mov
aam
xorl
mov
lcall
mov
cmp
mov
push
adc
jnp
in
imul
sbb
dec
js
sbb
int3
add
xor
and
add
adc
call
dec
xor
mov
dec
int
add
xor
jecxz
sbb
push
jp
je
pop
das
jg
test
aaa
insl
lcall
dec
inc
pop
sbb
mov
inc
mov
mov
sub
pop
cmpsl
scas
push
sbb
jecxz
mov
outsl
dec
mov
xchg
add
aad
pushf
jecxz
add
shrb
add
fs
add
lock
ljmp
scas
insb
and
adc
out
xor
inc
mov
jmp
fwait
cli
test
daa
inc
lods
ljmp
shlb
pop
xchg
pop
mov
jbe
lea
in
adc
pop
addl
insb
mov
adc
or
sub
stos
dec
or
mov
loope
decl
mov
aad
mov
jbe
jge
outsl
cli
aaa
or
xor
stos
xchg
pushf
inc
es
xchg
decl
hlt
mov
pop
addb
outsl
xlat
dec
and
jle
ficoml
inc
rorb
pushf
test
mov
mov
jg
mov
andb
and
and
xor
inc
push
notl
sar
fidivs
and
cli
pushf
daa
out
or
pushf
mov
and
pop
xor
call
loopne
cltd
jmp
mov
lods
mov
sti
test
and
paddq
nop
or
jmp
mov
sbb
imul
jge
inc
sub
mov
icebp
jg
or
pop
repnz
mov
cmp
inc
out
push
add
xor
mov
mul
loope
pop
push
iret
jmp
and
in
lahf
movsb
jbe
imul
out
testb
cmp
out
lcall
mov
cli
aas
adc
scas
cmp
dec
out
clc
scas
fdivl
mov
dec
fnsave
popf
lret
insb
dec
mov
inc
das
iret
jns
aaa
ja
ljmp
mov
cmp
outsl
fdivrl
sahf
negb
cmp
stos
leave
push
push
dec
jo
push
add
jbe
ret
sub
lcall
ss
jg
xchg
inc
incl
movsb
scas
add
xchg
inc
int3
pop
js
sti
adc
jne
movsl
imul
testl
outsb
mov
movsl
add
call
and
xchg
sbb
inc
jle
decl
jle
add
dec
push
cmp
arpl
cmp
mov
jp
lahf
pop
sub
lret
hlt
incl
inc
mov
mov
push
and
dec
das
jo
dec
xchg
push
lds
push
repz
or
pop
pop
or
sub
ljmp
int3
jbe
ljmp
lcall
xor
push
mov
sbb
push
in
xchg
movsl
xlat
int3
dec
xlat
mov
sub
xchg
xchg
push
jmp
dec
incl
ja
in
xor
insl
out
cli
inc
push
fisttpll
xchg
addr16
ss
stc
and
in
sub
mov
inc
sbb
push
and
fdiv
cmpsl
or
ds
jbe
imul
push
or
xor
call
jnp
push
sub
dec
popa
clc
psraw
imul
ljmp
cmp
cmovnp
pop
in
mov
pushl
out
ret
jle
pushl
add
xchg
out
mov
and
cmc
enter
loope
cwtl
les
add
jnp
loope
or
ljmp
push
dec
ljmp
push
cmpsl
test
jg
cmp
or
sarb
out
test
call
dec
dec
lods
pop
lock
insb
add
enter
aad
sbb
and
leave
cmp
push
loopne
push
mov
push
scas
int
outsl
jns
xor
or
push
lcall
sub
lret
xchg
aaa
adc
pop
arpl
inc
and
sub
inc
and
pop
out
mov
cli
decl
ja
xchg
movsb
ret
sub
out
inc
lcall
nop
movl
xchg
push
or
jmp
sbb
stc
or
cs
xor
mov
pushl
hlt
dec
or
jnp
mov
xchg
dec
fiaddl
and
clc
jp
imul
pushl
subl
push
jg
ficoms
pusha
lcall
and
mov
lods
cld
cmc
aam
inc
dec
hlt
jne
inc
xchg
jnp
xchg
cmpxchg
dec
cli
inc
pop
out
in
and
addl
mov
ss
ljmp
mov
enter
insl
mov
data16
pop
dec
loopne
mov
push
push
adc
es
clc
cmp
mov
jmp
rcrb
mov
jne
lds
cld
out
inc
lock
in
pushl
fldl
scas
add
cmpsl
shll
sarl
sub
fisubrl
pushl
pop
aas
mov
test
mov
pop
mov
out
arpl
mov
dec
out
sbb
call
negl
into
inc
in
loope
mov
mov
sbb
cmpsb
movsb
and
scas
mov
lcall
repz
mov
mov
jnp
and
and
or
js
dec
ljmp
popa
jmp
jl
in
es
test
ljmp
nop
jecxz
or
sarl
int3
es
dec
xor
jb
xchg
cmp
push
xchg
jg
adc
stos
test
leave
push
outsb
js
call
out
or
leave
mov
cmp
ret
pusha
sahf
movsb
jg
stos
cli
call
push
addr16
push
adc
xchg
rorl
movsb
lea
xor
pop
sbb
or
sub
inc
mov
lock
jg
jl
add
sbb
fsubrs
adc
fbld
or
mov
xor
jp
inc
xchg
stos
das
mov
sahf
je
mov
and
stos
adc
pushl
icebp
xorl
inc
xchg
arpl
cli
es
push
sub
lcall
cmpsb
sbb
cmp
movsb
cmc
filds
inc
sbb
pop
xor
lcall
ror
xchg
sub
fcompl
neg
dec
lods
mov
mov
push
jo
sbb
pop
ret
adc
and
in
jbe
out
cmp
stos
push
das
insb
dec
cmp
ret
add
sbb
jl
cmpsb
cmpb
add
mov
test
xor
cmp
data16
xchg
hlt
dec
call
cmp
sub
push
aaa
pop
mov
mov
xor
rol
fnsave
in
dec
or
mov
cli
jp
pushl
or
mov
jp
les
sbb
scas
scas
ljmp
push
and
movsl
lcall
ror
sbb
pop
sub
add
clc
jg
add
push
aad
cli
loope
inc
cmp
out
adc
daa
scas
shl
scas
repnz
ljmp
lret
push
in
ret
icebp
add
movsb
hlt
std
aaa
push
xor
lcall
js
cmp
es
rcrl
je
mov
loop
dec
or
mov
lcall
mov
enter
mov
push
cmp
insl
add
incl
testb
jnp
cmp
xchg
pop
mov
lods
movsb
decl
or
xchg
jae
fimull
lock
aas
addr16
sub
lea
push
push
dec
push
pushl
imul
and
lcall
je
inc
xchg
fcoms
rorb
mov
push
inc
addr16
push
ljmp
nop
pop
dec
sub
pop
and
fcomp
hlt
pop
mov
inc
or
adc
psrlq
cmc
pushf
pop
sbb
cs
add
adc
pop
push
sub
fldl
loope
pop
pop
push
mov
adc
lcall
pop
les
jl
dec
call
scas
fs
loope
cs
dec
xor
mov
sar
inc
movb
adc
or
push
mov
fs
jbe
test
lcall
bound
scas
jecxz
cmp
out
dec
jmp
pushl
sbb
dec
movsb
xor
out
das
adc
in
mov
jmp
fisubrs
fwait
mov
xchg
jl
xchg
cli
fnstcw
adcl
outsb
ret
fists
mov
jnp
jae
loope
dec
stc
aad
sti
inc
movsb
mov
addb
jnp
xchg
sub
dec
punpckldq
loope
pushl
jnp
dec
std
int
sub
in
sub
push
and
stos
xor
sub
test
rep
cmpsl
jbe
ffreep
jno
sub
call
loopne
popf
jo
mov
mov
inc
cmp
push
nop
jp,pn
repz
call
mov
out
aam
ret
dec
fwait
leave
cmp
in
inc
movsb
xchg
inc
shl
adc
pushf
imul
dec
fnsave
fistpll
outsl
scas
js
int
mov
or
out
dec
icebp
mov
sub
add
sub
mov
insb
loop
xor
rclb
jb
xor
xlat
cmp
movsb
popa
clc
incl
iret
hlt
dec
test
hlt
test
fldpi
and
pop
pop
pop
dec
ret
xor
add
js
lcall
loope,pt
sub
add
in
jl
scas
lahf
pop
ret
xor
cmc
cmp
mov
dec
push
adc
loopne
call
repz
add
in
mov
ljmp
int
xchg
cmp
filds
jnp
jl
jo
dec
sbb
pop
dec
add
dec
adc
pushl
test
dec
aas
faddl
popf
sahf
call
add
out
sub
inc
or
das
ret
adc
ja
lods
lock
rcr
pop
cld
decl
outsb
idiv
mov
adc
push
push
add
dec
mull
decl
in
or
push
xchg
sbb
in
icebp
jne
cwtl
adc
das
ljmp
loope
xorb
jp
jmp
lcall
cmp
add
incl
jns
cmp
mov
add
loop
or
aas
xor
inc
decl
sbb
mov
ss
add
repz
out
fstl
add
call
or
mov
pop
xor
cmpsb
mov
and
mov
mov
scas
loopne
popa
test
loope
dec
sub
mov
leave
ljmp
jle
dec
fbld
jg
push
movsl
in
das
xchg
imul
pop
outsb
out
add
lcall
inc
loopne
cmp
adc
das
cmpsb
pushf
mov
pushf
stos
mov
data16
in
insb
pop
dec
cld
ljmp
out
push
scas
cmpsl
push
sub
push
jp
outsl
daa
cmp
push
sbb
fcoms
cld
push
jmp
mov
pop
cmp
pusha
sti
mov
decl
inc
cmp
push
outsb
popf
out
ficoml
pop
clc
repz
cmp
out
and
inc
sbb
fcoms
push
sar
outsl
lgdtl
lahf
xchg
push
sbb
clc
call
fbstp
insb
and
rclb
mov
jmp
icebp
in
sbb
iret
sub
std
scas
bound
in
xchg
mov
inc
push
push
ljmp
jbe
cli
lcall
push
xlat
adc
testb
jns
xlat
pushf
test
in
cmp
pushl
loop
add
dec
aaa
or
scas
fldl
fiadds
mov
sbb
jmp
xor
fdivr
lcall
mov
dec
mov
out
insl
inc
inc
sbb
jmp
cmp
mov
call
aam
in
inc
jle
out
jns
cld
les
fld1
ficompl
stos
pop
mov
lods
push
push
dec
mov
inc
dec
jmp
test
xor
test
lods
push
push
insl
sti
rolb
mov
adc
push
decl
or
int3
adc
push
mov
xchg
mov
mov
mov
mov
mov
mov
lods
xchg
daa
sbb
xchg
aaa
pop
and
mov
jmp
pop
fisttpll
das
inc
outsb
mov
loop
pop
mov
es
adc
in
loop
incl
mov
les
or
bound
lcall
and
xor
dec
sti
negl
inc
cmp
inc
psubq
jge
pop
loop
lcall
and
push
pop
xchg
push
fcomip
cmp
incl
and
aad
mov
ret
out
sub
lcall
sarb
sub
cmp
les
push
mov
incl
mov
add
lods
dec
and
jo
xchg
outsl
cli
decl
jge
jge
iret
and
mov
push
mov
jbe
or
jmp
leave
decb
shlb
jnp
cwtl
xchg
jl
lcall
sti
clc
cmp
ljmp
icebp
push
or
pop
mov
shll
sub
data16
mov
in
mov
ss
incl
cld
in
xor
add
xor
jae
fimull
pushl
cmpsb
xchg
bound
adc
popa
fadds
rol
mov
clc
sahf
mov
sbb
movsl
xchg
pushl
push
xor
test
jns
dec
fiaddl
and
ljmp
gs
cmp
mov
call
lret
mov
fdiv
aaa
jl
out
movd
jge
jg
in
cmp
incl
iret
pop
or
cmpsb
stos
or
mov
fsubrl
dec
jno
fdivr
decl
cmp
dec
push
cmp
fimuls
mov
sub
mov
fcomip
mov
jmp
sub
cmp
stos
xor
or
add
out
inc
mov
hlt
or
adc
sub
cli
in
sbb
cwtl
jl
xlat
incl
fnstenv
addr16
lods
fimuls
xchg
jo
jg
jae
imul
out
xchg
shrb
jmp
dec
std
gs
jecxz
add
and
xchg
sbb
call
push
in
xchg
into
push
xchg
les
ljmp
push
das
cmp
xchg
inc
cs
adc
adc
leave
mov
jmp
bnd
call
jg
adc
push
in
addb
mov
jg
jns,pt
mov
jmp
adc
popf
out
dec
mov
rorb
xchg
or
inc
in
sub
push
in
sub
push
inc
cli
mov
inc
mov
mov
inc
jg
fdivp
pop
nop
add
nop
jge
jp
scas
dec
cmpb
incl
arpl
pop
sbb
xor
pop
addr16
push
and
test
add
jmp
out
in
fdivs
push
pop
int
dec
pop
sub
push
hlt
jg
icebp
stos
lock
insb
ljmp
pop
inc
mov
dec
sti
sbb
mov
loope
bound
jmp
mov
sub
pushl
decb
sbb
pmaxsw
rorb
test
and
jns
jb
leave
fadds
cwtl
sahf
push
test
cmp
or
dec
push
mov
xchg
lds
adc
fiaddl
sar
out
xor
mov
xchg
sbb
mov
push
decl
repnz
sub
pop
xchg
jle
daa
dec
roll
inc
dec
popa
push
insb
mov
cmc
cmp
xchg
fisubrl
insb
and
xor
shll
movsb
cmp
sbb
insb
mov
dec
cmp
mov
inc
cmp
pop
gs
push
enter
je
jo
mov
dec
call
pop
nop
inc
sahf
xlat
lods
rorl
dec
stos
xor
adc
decl
icebp
roll
lahf
push
in
xchg
leave
sbb
cmpsb
mov
decl
pop
arpl
in
jmp
sahf
jg
mov
and
sub
sbb
sarl
shl
push
dec
cmp
jbe
adc
mov
mov
movsb
jnp
jae
data16
mov
xchg
xchg
and
push
addr16
or
decl
clc
sahf
enter
dec
mov
ss
ljmp
jno
add
shrb
jb
lahf
cld
decl
cmpsl
imul
sbb
xor
fucomp
fcos
pushl
jl
push
inc
loope
repnz
sbb
mov
mov
xor
jg
incl
jno
and
jecxz
aaa
adc
xor
insb
out
sub
orl
out
jmp
jg
or
out
inc
sub
mov
pop
loope
popa
mov
std
add
js
lds
add
ficoms
fld
gs
lcall
cmp
fdivrl
call
push
ror
orl
xor
aas
aas
sbb
mov
cmp
xchg
xor
mov
stc
lret
pop
inc
xor
mov
xlat
push
or
lea
mov
sti
push
pushl
push
mov
adc
repnz
fsqrt
push
inc
decb
jmp
lcall
cmp
pusha
rorl
jecxz
testl
inc
rcrb
decl
out
pop
fdivl
ret
xchg
dec
lds
mov
cmp
and
aas
or
cmp
dec
xor
fucomip
shrl
subb
js
loope
sub
cmp
and
push
std
mov
mov
sub
dec
lret
std
decl
xor
xchg
rcr
jp
jecxz
cmp
cli
call
xor
out
sbb
movsl
stos
scas
ljmp
aas
add
pushl
iret
xor
les
fistpl
out
enter
fidivs
mov
insl
sbb
push
cmp
and
sub
pushl
in
fisubrl
sub
adc
clc
mov
dec
adc
lcall
and
inc
and
xchg
dec
push
std
outsl
aas
sti
pop
andb
jg
int
fmull
ret
lahf
cld
das
ret
lahf
push
loop
outsl
lahf
adc
push
outsb
fisttpl
dec
loopne
mov
cmp
mov
jg
gs
jge
int3
cmp
xchg
lods
and
jmp
outsb
dec
test
loop
mov
xchg
orb
xchg
jecxz
xchg
cmp
loop
fstpt
xor
pop
ds
incl
xor
iret
mov
mov
cmc
movsl
fbld
adc
cld
test
into
inc
call
cmp
jmp
jle
aas
cmp
loope
cs
mov
movsl
call
mov
sbb
xor
push
or
dec
ljmp
mov
lea
repnz
lods
je
sub
cmp
fcomip
and
push
inc
sbb
fmull
loop
stc
and
mov
scas
repnz
sbb
cmp
inc
data16
inc
jbe
jg
pop
xor
or
pop
mov
mov
jmp
lret
lock
ljmp
jo
jge
pushf
add
loop
pop
and
adc
out
xchg
xor
pop
decl
push
aas
adc
ds
inc
repz
sbb
lods
xchg
test
xchg
incl
bound
aas
push
or
sbb
enter
loopne
fbld
fcompp
pop
push
gs
mov
push
lods
mov
push
mov
dec
xchg
mulb
fcomip
or
sti
dec
dec
sarl
cli
sub
cmp
movsb
decl
pop
bound
mov
outsb
mov
stos
stos
rcrl
out
mov
notl
stc
add
data16
push
cmp
xchg
fildl
mov
and
outsl
filds
jg
fbld
sbb
out
push
faddl
decl
cmc
jae
sub
movsl
mov
xchg
add
rcrl
inc
add
cmp
cmp
or
inc
cmp
sarl
dec
xchg
mov
inc
xor
incl
ror
ss
into
push
sarl
push
push
test
test
incl
cmp
inc
ja
xor
bound
xor
incl
iret
push
loope
rcrb
jnp
add
out
jae
xchg
decl
in
pop
jge
jp
imul
push
movsb
sbb
mov
test
cld
out
sti
or
insl
mov
jbe
sub
push
idivb
lea
pop
sbb
sti
or
std
mov
mov
ljmp
pop
mov
mov
xchg
xchg
fincstp
stc
jnp
fistl
jno
ljmp
push
lret
inc
and
lret
mov
pushl
mov
outsl
in
cmp
or
pop
xor
lret
sbb
push
out
add
mov
call
jnp
lahf
cmp
xor
sbb
subl
ds
mov
hlt
lcall
and
test
std
push
sbb
jl
outsl
ljmp
pop
push
mov
movb
cwtl
mov
add
jb
insl
push
cmp
mov
sub
cmc
cmp
lods
out
mov
nop
push
xchg
adc
in
je
sar
decl
lock
mov
adc
jb
xchg
test
pop
mov
push
add
dec
sbb
dec
imul
lock
push
push
cld
mov
call
mov
orl
sub
pop
adc
cmpsl
lock
cmpsl
jae
push
test
push
xchg
dec
lcall
push
xor
mov
std
aaa
scas
push
stc
sbb
or
in
mov
mov
leave
and
mov
incl
sarb
cmpsb
iret
inc
test
jmp
int3
push
jno
xlat
stos
aam
inc
out
gs
int
jno
cmp
jl
imul
mov
mov
mov
xchg
add
or
or
mov
sbb
out
call
dec
adc
call
subb
xchg
iret
dec
sbb
lahf
in
mov
insb
and
or
cltd
push
sahf
sbb
dec
cld
mov
in
or
jae
sub
pop
inc
mov
xor
sub
es
lret
lret
stos
incl
xchg
cmp
push
pop
jnp
pop
sahf
cmp
push
movsl
inc
int
mov
incl
fisubs
fcoms
mov
mov
data16
lcall
push
outsl
out
adc
dec
shrl
sbb
xor
mov
mov
dec
xor
pushl
sub
lock
pop
jae
movsb
inc
mov
pop
inc
in
enter
clc
mov
push
decl
aas
dec
test
sub
mov
sbb
mov
popa
mov
decl
and
mov
cmp
jmp
fisttpll
test
ljmp
inc
int
test
jnp
jns
adc
fucomip
lods
icebp
jbe
sub
pop
pop
mov
lds
add
mov
sbb
mov
inc
and
popa
jns
inc
shr
push
stos
rorb
loopne
ljmp
inc
mov
sbb
mov
ret
cmp
pop
ljmp
push
movsl
decl
call
sahf
jge
mov
jns
sub
push
add
outsl
mov
jns
hlt
add
loope
into
addb
out
add
mov
jb
pop
mov
mov
mov
xor
fistpl
fadds
adc
jge
xchg
call
outsb
jbe
mov
push
stc
xor
jg
jecxz
das
adc
adc
popa
jle
push
aad
fcomip
sub
repz
jp
push
test
cwtl
and
cmp
ja
push
inc
clc
jg
and
cmp
xchg
cmp
aas
cs
pop
incl
dec
or
stc
cmp
dec
or
es
into
fcmovnu
movb
aaa
cld
add
bound
cmp
jnp
dec
and
sbb
sbbb
jmp
adc
inc
or
repz
js
xor
push
lock
ret
test
jp
lret
stos
lcall
mov
iret
mov
xor
cmp
repz
idiv
ljmp
cmp
xor
movsb
and
dec
xor
in
out
rcrb
pop
ror
lret
cmp
loopne
fdivr
sub
xchg
or
add
nop
push
es
inc
mov
out
dec
ret
adc
mov
les
fidivrl
fildll
insl
adc
lret
loope
fwait
xchg
lcall
or
xchg
fldl
fcompl
imul
mov
stos
jle
lfs
aad
mov
lcall
fmull
sbb
mov
test
loopne
scas
inc
jb
dec
decl
inc
jg
xlat
xchg
nop
xchg
jg
adc
mov
mov
inc
inc
or
dec
xor
jecxz
mov
roll
pop
hlt
add
outsl
pop
mov
stc
cs
in
lds
aam
psrlw
adc
test
lock
mov
dec
push
stos
addl
clc
das
sar
inc
adc
div
xchg
push
das
or
mov
push
add
fsubrp
mov
dec
movsb
or
sbb
or
movsb
cmc
adcb
adc
ljmp
push
xor
mov
jmp
inc
mov
lds
xchg
jae
cmp
pusha
lahf
jl
mov
int
decl
lock
push
pop
sub
nop
jno
rcr
add
mov
pusha
std
cmp
sbb
add
mov
jg
inc
fistps
into
or
pushl
mov
dec
jecxz
mov
test
ss
movsb
clc
add
insl
bound
dec
ljmp
mov
pop
adc
dec
push
push
add
fs
add
cmpsl
rcrl
lcall
shll
ljmp
and
dec
subl
loope
mov
jb
cli
adc
lcall
std
in
pop
cmp
jmp
test
fnstenv
xlat
dec
decl
das
xor
shll
mov
cld
pushf
add
shlb
push
pusha
popf
pop
pop
rcll
icebp
jg
mov
inc
jns
mov
add
jns
in
pop
cmp
insb
testl
push
leave
cs
sar
mov
orl
push
pop
mov
enter
mov
call
cmp
add
mov
push
pusha
mov
sahf
nop
fisubl
pusha
ja
adc
xchg
fisttps
sbb
sub
outsl
sub
sbb
imul
mov
mov
dec
cli
test
dec
lods
popf
sbb
mov
out
mov
mov
jmp
out
mov
inc
xchg
mov
pop
cwtl
add
outsl
mov
movsl
lret
cmp
sbb
fsubrs
or
mov
xchg
pop
imul
test
lcall
jmp
inc
xchg
cmp
into
xchg
jecxz
pop
dec
idiv
jmp
in
mov
fnsave
ljmp
mov
adc
aaa
aad
incl
mov
pop
xchg
loopne
push
xor
es
ljmp
sub
aaa
arpl
ret
fsubrs
cmpsl
inc
rol
ljmp
lahf
mov
push
dec
rorb
std
jge
shlb
sub
xchg
dec
push
das
mov
inc
lods
push
xor
push
and
sbb
pushf
outsb
int3
add
cmc
push
adc
mov
lcall
mov
cmp
cltd
or
icebp
mov
aam
std
std
adc
pop
mov
loope
call
in
rcr
sahf
call
out
mov
sub
aam
add
insb
dec
sahf
sbb
add
out
data16
test
adc
push
cld
cmp
nop
push
dec
movl
loop
fwait
lods
mov
in
mov
or
lret
inc
jo
pop
lahf
xchg
jb
stc
pop
mov
push
cmc
sub
add
or
jle
stc
imul
jo
jg
fdivl
add
mov
mov
call
lcall
into
inc
pusha
push
leave
rcrb
mov
inc
mov
mov
clc
fwait
xchg
ljmp
adc
movsb
daa
mov
jecxz
mov
mov
mov
lcall
add
pop
sarb
adc
pushl
pop
or
jbe
push
push
out
out
ss
or
or
jo
aaa
sbb
call
mov
dec
mov
xor
pop
xchg
sbb
or
jne
insl
ja
lahf
clc
lcall
push
add
fldenv
xor
mov
cltd
mov
js
dec
lret
outsl
add
repz
inc
iret
stos
hlt
cmpsb
cs
dec
pop
mov
call
dec
adc
jge
and
incb
lods
sub
mov
pop
inc
cmpsb
pop
clc
jge
pop
or
pop
xor
adc
call
adc
repz
sahf
and
pop
inc
leave
inc
push
jmp
xchg
sub
dec
and
das
mov
or
enter
sbb
mov
inc
or
outsl
das
mov
push
shll
dec
dec
and
inc
ret
add
mov
loopne
repnz
movsb
ret
scas
xor
jns
pusha
aam
mov
movsb
sbb
les
scas
inc
dec
repz
cmp
mov
mov
push
jb
pushf
dec
xlat
sbb
xor
pop
mov
ljmp
cmp
sbb
stos
jbe
and
xchg
add
sub
lds
es
xlat
push
jmp
scas
in
lret
sti
cld
fidivs
xlat
sbb
mov
xchg
repnz
pop
adc
das
clc
inc
cmp
push
cld
dec
xlat
cs
jl
mov
pop
mov
push
mov
xchg
push
clc
cltd
dec
mov
mov
rcrb
xor
jns
and
movsl
sbb
mov
movsb
cmpsl
in
gs
dec
lcall
and
jne
int3
jno
in
mov
jno
push
aad
addb
imul
call
cli
jno
sbb
push
lods
sar
psubw
lock
push
fmuls
pop
scas
rol
mov
pop
jecxz
shr
push
lock
sbb
lock
sbb
push
push
jg
mov
ljmp
test
mov
push
rcrb
push
inc
pop
outsb
fmull
add
mov
lock
sub
es
fisubrl
add
xchg
out
incl
iret
adc
ret
pop
push
mov
in
sbb
outsl
xchg
jp
mov
inc
hlt
push
inc
mov
incl
iret
jmp
push
in
xor
dec
cmc
das
inc
lock
orl
cmp
or
mov
mov
jmp
aad
push
adc
outsb
repnz
dec
ret
jg
or
cld
jb
mov
scas
xchg
push
incb
test
das
pushf
into
les
mov
sbb
mov
test
inc
addr16
cs
shll
sbb
leave
or
addl
ljmp
pop
jne
pop
mov
sti
push
call
xchg
dec
outsb
xchg
xor
outsb
jecxz
popf
jns
fsubrs
mov
leave
incl
and
in
mov
fldt
loop
addl
adc
jmp
iret
jp
mov
sub
ja
add
insb
mov
iret
xchg
xchg
mov
ret
cli
popa
fildll
cmp
imul
pop
fimull
mov
mov
scas
push
mov
lahf
or
stos
data16
les
scas
mov
ja
popf
lahf
loopne
bound
sub
mov
cmp
add
call
cmp
fadds
add
in
dec
leave
adc
leave
lcall
shlb
out
enter
pop
decl
and
jb
dec
out
in
das
movsb
dec
fistps
cmpsl
cmp
jb
push
push
ds
sub
mov
hlt
sbb
xchg
fcomip
icebp
incl
jg
int
push
ror
inc
dec
or
mov
outsb
sbb
mov
fists
loop
push
push
dec
pop
pop
xor
adc
jl
insb
imul
jg
out
xchg
jp
psubsw
mov
mov
cld
inc
cmp
notb
push
mov
fimull
fsubs
pop
sbb
aaa
mov
xor
push
shrb
aas
les
dec
shl
and
pop
stos
mov
incl
dec
adc
addr16
popf
pop
loop
dec
cltd
jnp
mov
jge
jo
dec
push
cwtl
clc
cmp
decl
fndisi(8087
mov
mov
push
sbb
repz
faddp
or
inc
dec
dec
loopne
jmp
adc
pop
jl
adc
adc
jecxz
or
adc
in
inc
data16
out
idiv
call
sti
dec
stos
cmp
add
push
push
pop
mov
jmp
push
lret
out
iret
xor
sbb
xchg
lcall
inc
rcr
push
pop
cltd
stos
adcl
jp
in
or
sub
push
fisubl
arpl
in
jnp
push
sub
je
fmulp
aaa
add
jnp
out
jo
cmp
or
inc
mov
mov
stos
and
stos
xor
adc
js
fbstp
dec
cmp
movsb
push
mov
xchg
mov
je
or
mov
movsb
stos
cltd
jo
rcll
sbb
jb
and
mov
fs
fmul
shlb
les
sbb
mov
test
ljmp
das
in
pop
cltd
fcompl
gs
push
cltd
push
and
pop
add
cmp
icebp
sbb
pop
and
xchg
mov
in
push
loope
xor
and
mov
sub
test
test
inc
ret
add
mov
jg
call
andl
push
mov
pop
jb
pop
jmp
sub
dec
scas
and
lds
popa
mov
out
sub
jmp
mov
jl
push
int
sbb
jmp
testl
fnstsw
jmp
mov
xor
push
pop
xor
mov
jmp
mov
jbe
fucomp
out
imul
sbb
clc
and
decl
xchg
loope
loop
jbe
insl
xchg
pop
inc
sti
dec
mov
dec
mov
jg
fcmovne
jecxz
fs
xor
ljmp
stc
in
mov
jle
lret
outsl
and
jle
jae
pmovmskb
mov
adc
mov
in
xor
or
cli
cmpsl
cmp
sub
clc
imul
shrb
xor
inc
or
clc
pushl
fsubrs
pop
call
out
stc
pop
test
test
in
inc
enter
aam
mov
add
pop
push
lds
fnsave
lahf
mov
dec
or
cmp
jmp
xchg
stc
mov
call
or
mov
cmp
cmp
movsb
jne
mov
or
decl
dec
sub
push
mov
sub
cld
or
call
mov
je,pn
pop
pop
inc
push
insl
mull
adc
mov
xor
fdivr
pop
ret
jno
pusha
pop
movsb
adc
dec
lcall
mov
sbb
xor
cmp
hlt
mov
pop
js
outsl
pop
call
cli
cmp
hlt
inc
movsb
adc
push
enter
pop
mov
and
jmp
pop
cmpsl
mov
mov
daa
jp
add
out
mov
lea
fmuls
sub
inc
hlt
cmc
fsubr
push
cli
mov
pop
arpl
in
jns
sbb
sbb
js
ljmp
mov
divb
int
ljmp
jp
mov
jecxz
and
jb
xor
adc
repz
incl
mov
in
push
adc
push
add
sbb
adc
jg
jmp
dec
out
imul
js
repz
or
jnp
repnz
mov
add
xchg
jae
divl
dec
xchg
fimull
test
nop
notl
inc
insl
out
lods
adc
xor
call
inc
jecxz
lea
sub
jnp
sub
dec
xchg
push
inc
jecxz
add
dec
xchg
leave
dec
cmp
jne
cs
mov
cmp
popl
inc
add
push
call
jg
sub
mov
repz
xchg
mov
shll
jl
ja
decl
idivb
sbb
out
clc
pop
ret
loope
inc
push
add
add
std
call
mov
cwtl
jne
rcrl
in
fsubrs
les
xchg
push
jg
lock
cmpsl
mull
adcb
mov
cli
stos
test
push
inc
ds
call
outsl
out
outsl
test
inc
push
mull
mov
call
jl
insb
or
icebp
jg
outsb
nop
incl
jg
test
xor
sbb
mov
sub
sbbl
mov
inc
out
out
lcall
cld
lock
icebp
lock
lret
add
fnsetpm(287
mov
xor
mov
pop
loop
ret
pop
imul
jbe
adc
cmp
cmc
aad
int3
push
ror
cmpsb
cltd
adc
sbb
cmp
push
jb
jmp
clc
mov
sahf
icebp
add
inc
push
mov
cli
and
pushf
cmp
decl
and
in
sahf
sub
push
mov
ret
cmp
pop
fdivs
les
lcall
ret
mov
xchg
hlt
ljmp
sbb
dec
push
mov
dec
cli
decl
rorb
daa
pop
cmpsb
fidivl
sub
outsl
mov
test
sti
pushf
push
cmp
call
icebp
fldt
mov
and
jge
into
mov
inc
fbstp
popa
clc
unpckhps
pusha
aas
cltd
jns
pop
pop
ud0
lcall
outsb
cmp
and
inc
repnz
lret
cwtl
jp
insb
outsb
repnz
addl
mov
sub
xchg
ss
mov
jnp
sub
add
cmp
jg
cmp
cmp
les
lds
and
shl
dec
or
sub
pop
movsl
and
inc
push
sub
sub
push
xor
sbb
in
insl
mov
movsl
das
clc
mov
jle
cld
int
jnp
arpl
dec
cld
in
repnz
cmp
push
bound
mov
rcll
ret
imul
push
jge
stos
push
iret
lods
mov
cmp
xor
loop
xor
adc
sbb
out
mov
mov
js
pop
fsubrs
xchg
mov
mov
pushl
pop
repnz
shlb
sub
mov
sbb
test
xchg
mov
mov
jns
shlb
push
cmp
sar
decl
imul
loop
into
mov
xchg
ja
push
sub
xchg
mov
test
jg
mov
push
and
ja
sub
insl
icebp
mov
fwait
jge
stos
or
fbld
push
shl
loop
push
xchg
mov
xchg
icebp
out
add
lahf
movsb
sbb
sbb
lcall
fsubl
lret
xor
add
dec
into
mov
rolb
mov
int3
rcll
push
ret
jle
ljmp
cmp
inc
addr16
lods
sub
inc
add
pop
jg
mov
add
in
sub
jg
jg
jle
dec
das
cmp
dec
in
ds
cmc
rclb
int3
incl
lods
or
xchg
cli
add
lcall
scas
sahf
call
push
jae
add
jle
add
adc
add
shll
and
dec
xchg
mov
leave
push
push
dec
test
adc
call
fisttpll
push
pusha
xlat
je
clc
push
jg
aad
push
pop
xorb
cmp
pop
neg
push
pop
lcall
push
idivl
pop
cli
jns
leave
es
sbb
call
add
pop
scas
mov
addr16
fwait
lret
dec
pop
call
jb
repz
push
ficoms
inc
outsl
clc
xor
push
add
ja
jle
push
mov
addr16
mov
jnp
andb
and
imul
ret
push
mov
lret
pop
push
arpl
xor
inc
aas
adc
cmp
mov
loopne
jg
inc
cld
jnp
ljmp
sub
jp
mov
pop
jmp
into
roll
outsl
cmp
in
lods
cmp
add
neg
mov
out
lcall
cmpl
and
or
and
push
dec
xchg
incb
dec
pop
ja
bound
dec
popf
decl
rcr
out
pop
jecxz
jno
jl
scas
subb
fcomip
pushl
xor
lret
add
or
aaa
cli
clc
notb
or
xor
add
call
mov
faddl
adc
inc
push
and
into
orl
loope
cmp
sbb
out
pop
out
hlt
scas
in
xor
jle
ljmp
test
adc
incl
push
lcall
lahf
mov
and
dec
clc
inc
sbb
movsl
fcmovbe
mov
outsb
arpl
xchg
jmp
xor
mov
testb
push
jecxz
push
pop
arpl
sbb
test
cli
jg
dec
adc
add
lahf
ljmp
lret
mov
movsb
inc
pop
push
shlb
mov
mov
repnz
push
popf
insl
nop
mov
adc
out
push
xchg
out
mov
push
sub
mov
sub
push
into
dec
mov
jne
fidivrs
ss
push
xchg
outsb
push
sar
clc
call
mulb
mov
loopne
sbb
iret
sub
mov
orl
out
imul
loopne
loope
jno
aas
aaa
adc
push
sbb
push
dec
xor
adc
pusha
sti
aad
fcomip
scas
jmp
xlat
roll
gs
rclb
dec
mov
mov
cmp
pop
test
and
mov
shll
insb
cmpsb
lods
mov
pusha
cmp
xchg
sahf
nop
incl
dec
adc
or
push
xchg
out
jo
cltd
enter
jecxz
push
loope
jo
dec
clc
dec
lcall
cs
out
xor
add
lcall
vrsqrtss
xor
testb
ud0
lcall
loope
ljmp
outsb
jns
in
push
xchg
mov
pop
or
mov
lock
je
aam
xchg
mov
push
les
ljmp
inc
add
sbb
push
fstp
fwait
in
je
mov
cld
call
in
mov
movsl
jle
inc
add
cwtl
rcll
mov
insb
adc
popl
scas
xchg
and
add
rorl
lret
icebp
ljmp
hlt
push
mov
test
das
push
cli
fs
scas
xor
in
iret
fldl
pop
dec
adc
incl
fwait
xchg
mov
daa
shll
cmp
xlat
repz
jecxz
test
add
enter
push
clc
fsubs
rorb
sub
decl
xor
adc
lea
js
adc
nop
hlt
inc
add
test
xchg
jno
push
push
inc
inc
mov
cmp
mov
or
lret
cmp
add
out
sbb
jge
daa
mov
cmp
sbb
pop
add
pop
dec
xor
out
xchg
xor
div
sub
movsb
or
inc
aam
jae
dec
cmc
push
pushl
std
decl
pop
or
sub
enter
cmp
or
mov
adc
incl
pop
xor
cmpsb
inc
dec
inc
mov
push
incl
mov
xchg
mov
mov
add
pop
lds
call
push
shlb
and
std
or
lret
jbe
adc
cli
imul
shll
repz
ret
and
inc
push
adc
call
or
in
in
push
cmc
mov
pop
and
das
adc
xchg
lcall
add
mov
lret
mov
mov
inc
mov
jmp
iret
in
xchg
mov
imul
xchg
mov
dec
push
push
push
jbe
or
sahf
jmp
decl
sub
add
dec
push
push
and
xchg
sbb
ret
cs
mov
xchg
ror
jbe
sbb
test
iret
lahf
mov
lcall
xor
push
jp
xchg
sub
cmp
pusha
or
data16
fildl
jmp
gs
inc
jmp
movsl
mov
je
testl
outsl
icebp
aaa
mov
outsl
loope
xchg
sub
cmp
lcall
sbb
fistpll
mov
scas
mov
push
std
lahf
inc
mov
xor
adc
andl
mov
addr16
xchg
into
sbb
mov
and
sbb
lret
in
and
sbb
sbb
jns
cmc
jmp
or
ds
add
lret
sub
adc
cltd
xor
add
lcall
jae
test
push
jo
gs
inc
decb
fcompl
mov
push
xor
dec
dec
cwtl
movsl
push
xchg
or
add
scas
js
dec
ljmp
cmpsl
sub
xlat
pushf
xchg
lret
jae
jmp
pop
or
pop
sbb
sub
add
sub
shrl
push
js
jbe
mov
hlt
fst
sbb
sbb
sbb
or
lods
jge
hlt
add
mov
call
jbe
push
push
adc
adc
in
out
test
mov
rorl
xchg
pop
loop
in
mov
jecxz
sub
testb
push
sub
push
adc
movsl
sbb
mov
push
out
jl
popf
aam
in
pop
pop
jl
jg
dec
rcr
std
js
pop
jb
xor
enter
push
call
decl
psrld
dec
dec
std
nop
push
mov
decl
cmpsb
addr16
movsl
inc
in
cmp
push
pop
xchg
popf
jl
mov
incl
cld
jmp
popl
adc
sbb
aam
fdivrl
xchg
mov
sub
inc
decl
std
mov
xchg
add
mov
lcall
add
aam
xor
call
mov
sbb
out
lahf
rolb
lods
lret
sahf
lea
or
fneni(8087
jmp
cmp
decl
lods
mov
test
cmp
ret
dec
lds
mov
add
xchg
shl
decl
iret
lock
out
mov
dec
and
push
push
pop
movsl
pop
in
cvtpi2ps
fimull
in
outsb
int3
cmp
hlt
cmp
xchg
sbb
popw
adc
adc
cli
jmp
in
xchg
ljmp
dec
in
ja
sahf
pop
shrb
cwtl
sbb
adc
out
test
cmpl
jb
push
daa
xchg
xchg
movsl
mov
mov
pop
lcall
cmp
cmc
ljmp
xor
jle
or
adcl
mov
jge
mov
xor
addl
fsubr
mov
xor
add
mov
int3
outsl
dec
jbe
mov
lret
cld
call
imul
stos
imul
jg
inc
or
in
clc
roll
sbb
cmp
mov
cmpsb
call
cmpsb
std
sbb
mov
cltd
jbe
inc
or
pop
jle
push
out
pop
icebp
ds
int
insb
hlt
test
jne
pop
dec
jl
outsl
es
lock
sub
call
push
sbb
sbb
out
imul
or
adc
pushf
fnsave
jmp
fbld
jnp
mov
xchg
arpl
mov
or
xor
pop
sub
sbb
dec
adc
xchg
and
fstl
pop
outsl
xlat
scas
sub
or
lcall
mov
cmp
loopne
push
pop
ss
mov
mov
pop
rolb
ljmp
dec
jl
pop
cld
inc
adc
lds
pop
and
addb
pop
mov
sbb
sub
jns
repz
decl
or
inc
int
ret
dec
dec
or
mov
scas
das
and
add
decb
xlat
pushl
or
inc
pop
xlat
test
imul
inc
cmpsl
and
aaa
sub
adc
mov
or
mov
xchg
push
jg
pop
call
lret
std
jl
sbb
comiss
inc
ljmp
incl
seta
and
xor
loope
test
loop
test
call
call
adc
pop
sbb
inc
inc
cmp
stos
js
movsb
insl
inc
nop
sahf
sbb
dec
loope
xor
inc
mov
inc
xchg
aam
ljmp
mov
xrelease
jecxz
mov
xlat
lods
mov
call
decl
inc
and
inc
cmc
xlat
pusha
jo
orb
decl
jecxz
push
or
jp
cltd
dec
add
leave
aam
xor
es
adc
adc
loope
idiv
dec
scas
xchg
jmp
xchg
rclb
add
mov
pop
dec
sbb
test
jb
jno
jecxz
cmp
decl
jmp
stos
insb
xor
xor
mov
icebp
push
cmp
ljmp
or
jmp
lret
stos
pop
mov
andl
mov
ljmp
fnstcw
xor
movsl
xor
pushl
insb
pop
jae
stc
sub
insl
aad
push
push
movl
dec
mov
loopne
mov
call
std
sbb
mov
lods
push
scas
or
adc
mov
pop
sbb
incl
xchg
mov
add
je
rorl
fucomip
rcll
sbb
fidivrs
adc
fmuls
cmpsl
sbb
ss
push
cmp
out
xchg
mov
inc
sub
mov
xor
daa
xor
imul
mov
imul
cmp
lods
pop
dec
cmp
push
cmpl
and
xorb
sbb
lods
outsl
in
adc
stos
mov
cmp
inc
push
stos
mov
shl
and
cmpsl
inc
cmc
mov
jl
pop
fstpt
pushf
fwait
mov
fldcw
int3
decl
inc
push
add
je
push
andl
xchg
or
call
cmp
outsl
add
pushl
into
div
xchg
aad
xchg
aas
pop
xor
in
inc
push
aaa
or
repnz
mov
jg
mov
mov
fbld
jno
setno
and
lahf
fimuls
mov
daa
and
out
adc
pop
or
subb
test
jle
cmp
mov
add
out
nop
xor
aam
fcmovnu
testb
mov
iret
in
scas
das
mov
jg
rcrb
rep
stc
scas
jno
push
xlat
mov
inc
popf
xchg
push
sbb
lcall
movsl
or
mov
adc
fwait
push
cmpb
fsub
nop
dec
sbb
mov
fisubrs
fidivl
scas
mov
fistps
int3
aam
pop
xchg
mov
adc
stos
jno
xor
decl
xor
lahf
push
jnp
loope
lcall
cmp
out
mov
scas
cli
jmp
jnp
gs
into
sbb
add
lcall
pushf
fdivrl
cmp
shlb
mov
pusha
xchg
jnp
inc
add
push
es
xlat
mov
je
push
mov
stos
cld
in
test
sti
cmp
aad
ret
pop
out
insb
out
subl
loopne
xchg
rol
in
sbb
dec
std
aam
pop
sbb
dec
xor
in
test
xor
daa
sar
ljmp
pop
cmp
push
dec
repnz
mov
xorb
xor
push
inc
mov
ret
push
inc
mov
jg
movsb
and
lods
enter
add
mov
call
and
mov
inc
loopne
test
xor
push
leave
addr16
xchg
mov
sar
jmp
sbb
pop
into
lock
mov
lea
imul
aam
cmpsl
lods
sets
enter
cli
lcall
jg
adcl
cmpsb
sti
mov
imul
mov
cmpsb
leave
aas
jecxz
mov
int
xchg
movsl
jmp
lcall
add
adc
jbe
mov
sub
dec
jmp
pop
pop
dec
iret
ljmp
ljmp
push
sub
sti
xchg
xor
mov
mov
jle
int
xchg
or
lcall
popf
les
adc
aad
dec
mov
hlt
push
addr16
mov
and
andl
push
sbb
sub
adcb
xchg
add
or
jmp
rcrl
mov
in
jg
ficompl
pop
mov
outsl
push
and
pushf
pop
outsl
jp
int3
sahf
loop
xor
jmp
xchg
das
jp
addr16
repnz
add
and
mov
jp
xor
mov
xlat
mov
mov
arpl
stos
sti
adc
test
mov
lcall
stos
cmp
inc
ret
into
dec
inc
xchg
and
mov
addb
fs
mov
lahf
cmp
lods
cmp
pop
xchg
fldl
xchg
aam
jnp
ljmp
jmp
rcll
das
cmp
adc
push
cmpsl
sub
ljmp
jmp
adc
loopne
mov
lea
and
fadd
add
sub
jb
sar
jmp
shll
andb
test
stos
imul
les
mov
mov
pushl
add
fildl
or
test
out
aad
xlat
rolb
sbb
add
pop
lret
in
sub
lcall
jle
mov
or
mov
aas
jb
sub
push
jmp
jne
dec
xchg
jae
xchg
clc
mov
in
ret
test
fwait
pop
in
push
mov
dec
jns
lds
adc
cmp
jmp
popf
call
addr16
add
aam
dec
add
inc
mov
cwtl
loop
incl
jl
jecxz
adc
push
data16
push
sti
lods
jmp
xchg
ss
cmp
clc
out
push
adc
call
mov
movsl
or
insl
sub
mov
cwtl
sarl
add
pop
stc
pop
adcb
pop
decl
inc
jbe
js
cmp
cmp
inc
lods
repnz
loope
jg
dec
inc
test
pushl
dec
out
add
adc
es
rcl
dec
pusha
jne
xchg
pop
pop
adc
in
inc
cmpsl
push
and
rorl
push
call
int
jno
cli
push
roll
mov
call
jmp
lods
in
fiadds
cmp
jg
das
cli
lahf
pop
mul
cli
jle
sub
sbb
scas
jb
cmp
jp
push
mov
repnz
adc
js
sti
mov
jmp
shrb
ret
jne
call
push
dec
mov
ret
sub
out
push
outsb
dec
mov
aam
inc
cmpsl
sub
add
orb
ror
pop
push
and
test
cmc
push
imul
pusha
adc
inc
xchg
push
leave
punpckhwd
cmp
nop
sub
pusha
push
shlb
dec
sub
sub
cmpb
adc
insb
lret
out
or
clc
or
lcall
push
xor
gs
pop
xor
add
in
mov
ljmp
popl
or
rorb
xchg
sub
xchg
pop
mov
sub
ds
stos
and
ss
push
sbb
in
add
inc
mov
out
cli
mov
pusha
cmpsl
enter
fsts
enter
jnp
sub
pop
lea
inc
dec
jmp
call
jnp,pt
pavgw
sbb
and
add
aaa
test
call
jbe
fidivl
ret
push
pop
mov
loopne
lods
cmc
daa
add
mov
adc
cwtl
std
xlat
jno
mov
push
dec
or
or
das
and
push
or
or
es
cs
repnz
mov
jecxz
jns
je
pop
dec
adc
pushf
inc
das
and
stos
aad
adc
mov
decl
jnp
cmp
mov
cmp
mov
cmp
loop
icebp
int
fisttpl
int3
sub
call
sbb
dec
mov
jge
mov
cmpsb
jle
push
call
or
addr16
or
jne
push
xor
movb
imul
inc
or
call
les
mov
hlt
adc
pop
lret
fiaddl
jmp
mov
stos
imul
leave
je
or
mov
je
sub
lcall
pushf
cmpxchg
xchg
jge
lahf
adc
ljmp
subps
aad
arpl
decl
push
jg
push
push
pushl
mov
mov
jbe
call
lds
outsl
or
out
jnp
pop
call
jns
or
in
sbb
lret
or
xlat
outsb
fiaddl
in
lds
jecxz
aad
das
rclb
icebp
mov
test
xchg
add
or
sti
lcall
dec
xchg
ljmp
incl
cmp
out
je
and
out
mov
mov
sahf
jg
lcall
adc
or
push
addr16
insb
jg
or
cwtl
int
mov
fldln2
mov
pop
fbld
call
jp
sti
jmp
jg
mov
adc
test
pop
cltd
xchg
call
push
mov
cmpsl
aam
incl
sbb
inc
pop
jle
sbb
mov
mov
mov
xlat
and
test
jo
lods
ss
xor
in
gs
sarl
push
mov
ljmp
ss
les
inc
jne
push
sbb
xchg
stos
imul
fcompl
aad
add
aam
decl
movsb
hlt
mov
push
in
divl
push
xlat
inc
lock
sbb
outsl
mov
inc
add
int
or
cmp
jmp
cmp
lds
jl
pop
or
dec
fwait
xchg
inc
mov
or
cli
mov
dec
stos
jae
scas
push
movl
jg
cmpsb
sub
xchg
jnp
mov
iret
aam
jmp
jp
cmp
or
pop
mov
arpl
mov
mov
decl
push
jns
mov
fmuls
faddl
imul
clc
jmp
jnp
inc
imul
mov
mov
adc
clc
test
ljmp
in
int
popf
jle
clc
cmpsl
ss
pop
lods
loopne
sbb
xor
mov
dec
jbe
imull
lcall
iret
jnp
or
test
mov
inc
fs
mov
outsl
cmp
jno
in
es
pushl
inc
xor
popf
add
and
and
stc
jg
inc
lret
jecxz
iret
inc
sbb
into
popf
pop
lret
leave
xchg
cwtl
jno
mov
or
adc
mov
fwait
cwtl
add
xlat
xchg
into
into
push
popa
scas
lods
add
sahf
call
addr16
dec
xchg
xchg
aam
shrb
cs
add
aad
addb
xor
lods
test
scas
mov
pop
sbb
scas
sub
rcl
rcrb
or
or
outsb
int
repnz
mov
dec
xchg
xor
imul
pop
and
jmp
in
jmp
test
pop
cmp
push
jo
test
orl
icebp
and
mov
nop
sbb
test
out
inc
mov
stc
sbb
mov
sar
xor
ret
and
sub
pushl
jg
or
xchg
pop
mov
ljmp
and
jmp
mov
sub
jg
jbe
cmpsl
mov
int3
sbb
iret
push
push
dec
repz
decl
or
inc
sub
push
push
dec
rcll
cmp
mov
sar
lcall
xor
stos
push
adc
dec
jmp
inc
stos
movsl
adc
incl
dec
call
mov
jl
in
addb
enter
push
aas
insl
les
cmpl
cwtl
fsubrs
in
mov
mov
popl
lock
shlb
push
xor
icebp
xlat
mov
jecxz
rorl
fs
cmp
sbb
stos
inc
adc
aad
clc
incl
mov
arpl
mov
push
adc
dec
repz
pushl
fnstsw
in
icebp
mov
lock
push
outsb
stos
icebp
jmp
lahf
jno
push
leave
or
adc
pop
insb
xchg
imul
imul
out
dec
mov
mov
outsl
out
cli
call
mov
cmpsb
jecxz
popa
xor
pop
pop
or
sbb
ds
fistps
nop
mov
fisttpll
add
fadd
mov
test
test
mov
mov
rolb
cld
fsubl
subl
arpl
jb
and
xchg
jne
outsl
clc
decl
mov
dec
dec
jno
adc
mov
jns
adc
add
mov
ljmp
scas
push
sbb
loope
mov
xchg
xchg
aaa
dec
pop
inc
gs
xchg
sub
sahf
lahf
add
sbb
adc
xor
and
cmp
nop
xchg
mov
mov
loope
xchg
aas
incb
enter
jne
repnz
outsl
or
movsb
aas
in
lcall
sarb
rcll
add
div
cmp
xchg
xchg
dec
cld
decl
aas
xchg
aam
push
or
push
jmp
jg
pushf
push
cmpsb
mov
dec
dec
loop
and
incl
mov
aas
pop
pop
pop
cmc
loop
push
mov
enter
into
xchg
outsb
jecxz
sbb
mov
pushl
lcall
mov
dec
add
decl
and
ret
cmpsl
insl
sbb
add
imul
mov
xchg
das
arpl
pushl
ret
mov
xlat
test
insb
clc
pop
xchg
stos
out
jg
cmp
dec
adc
push
pop
loopne
je
movsl
cmp
jno
inc
stos
xchg
and
pop
sub
enter
hlt
dec
mov
jno
popa
mov
pop
sub
dec
iret
pop
and
inc
imul
pop
rorb
fidivrl
or
dec
pop
push
aaa
mov
jge
mov
and
rolb
jl
xor
push
add
cld
pushl
mov
out
push
sub
fisttpl
push
or
ficoml
push
fcos
push
into
adc
add
cmpsl
leave
xlat
rcrb
push
mov
cmp
adc
lock
fs
clc
decl
into
or
stc
pushf
push
adc
inc
in
dec
ret
inc
pop
rorb
ljmp
xchg
mov
and
cld
scas
notb
xchg
ss
mov
cs
jg
jle
imul
nopl
inc
mov
or
movsb
pop
jg
pop
test
jb
js
xchg
sub
dec
pop
or
mov
rorl
sub
xchg
clc
dec
inc
jp
adc
in
or
inc
push
xor
rcrl
push
lahf
scas
push
push
lods
push
sbb
push
je
xchg
into
in
cmp
aaa
mov
mov
inc
sbb
insb
add
mov
nop
push
inc
pop
or
jg
mov
scas
xor
ds
mov
push
out
jp
jbe
repnz
js
mov
adc
ljmp
push
fdivrs
iret
cmp
or
push
pop
cld
incl
sarb
das
sbb
pop
jle
sub
divl
incl
stc
mov
lahf
mov
dec
std
pop
adc
call
add
add
aas
lods
push
stos
or
push
cmp
jg
adc
sbb
mov
push
test
jmp
in
pop
cld
and
call
orl
push
out
popf
in
xchg
dec
pop
test
mov
aad
mov
sahf
insl
dec
pushl
sub
call
clc
notb
xchg
lret
popf
xchg
jg
cli
movsb
in
out
lods
rolb
adc
mov
enter
sub
sub
mov
into
stc
insl
mov
cs
in
and
jbe
int
push
add
jbe
pusha
sub
ljmp
lods
ljmp
mov
insl
rolb
mov
les
js
imul
je,pn
cmp
mov
pop
cltd
nop
lock
fmuls
pop
xchg
inc
jl
mov
gs
ljmp
sbb
jl
loop
or
mov
jb
mov
aaa
and
xor
lcall
and
sub
mov
adcl
add
mov
or
ljmp
push
mov
cmc
lock
mov
xor
or
je
mov
cmpsb
or
mov
mov
movsl
xchg
shr
jp
jb
add
add
push
add
and
daa
lcall
imul
pushl
mov
and
pop
fimuls
inc
add
cmp
out
cmp
sbb
xchg
aaa
sbb
repz
call
xor
lcall
js
jb
enter
jmp
xchg
pushf
scas
push
push
fmuls
aaa
ret
into
adc
mov
xor
push
decl
mov
push
out
mov
sbb
arpl
inc
psrad
push
mov
push
mov
aaa
lret
fdivrl
sub
mov
mov
pop
hlt
mov
adc
push
cwtl
lcall
test
pop
pushl
lods
mov
sub
xor
xchg
call
sub
lds
mov
add
jnp
cli
incl
daa
add
dec
loop
mov
push
outsb
and
lcall
mov
jp
mov
mov
pop
lret
cmp
fildll
dec
cmp
sbbb
inc
cmp
push
movsl
pop
cmpsb
and
fsubs
loopne
repnz
shl
daa
imul
adc
cmp
and
sarl
add
jl
aas
jmp
lcall
jmp
mov
insl
movsl
int
xchg
pop
jne
xchg
dec
rclb
lcall
pushf
xchg
xor
pop
push
adc
mov
jb
sti
adc
decl
sbb
fsubrs
frstor
push
cmp
xchg
lcall
fnstcw
outsl
int
dec
inc
cmp
xchg
sarb
inc
mov
mov
lcall
loop
in
inc
push
mov
and
test
xlat
test
aas
mov
pusha
sbb
inc
mov
insl
jno
xchg
mov
ror
cmp
ret
jo
xor
and
mov
call
cmp
aaa
fprem
repz
push
bound
or
pop
fistl
push
xchg
add
aad
aam
fsubrs
and
test
call
jg
jne
das
push
test
out
and
shll
xor
mov
cmc
or
add
int
add
gs
mov
loop,pn
pop
inc
add
mov
inc
inc
sub
push
inc
pop
xchg
push
inc
das
std
call
push
sbb
cli
pop
pop
mov
and
pushl
das
jbe
out
repz
cli
lahf
cmp
pushf
cli
pop
icebp
mov
mov
outsl
and
pushf
lahf
xchg
mov
mov
mov
mov
jmp
jecxz
xor
dec
stc
cmp
arpl
mov
push
mov
sahf
push
pop
in
pop
inc
lcall
pop
fldt
mov
loop
sar
add
in
inc
ret
dec
clc
pop
loopne
ret
cmpsl
xchg
lds
and
pop
lret
lock
xor
lea
xor
inc
and
ljmp
cmpb
repnz
mov
in
mov
cmp
decl
dec
fcoml
lret
dec
mov
cs
in
fwait
fs
mov
je
data16
loopne
fcmovnb
mov
jge
mov
decb
sbb
aas
fwait
pop
idiv
stc
mov
sub
and
sbb
mov
inc
addr16
jg
cmp
add
push
xchg
dec
hlt
cltd
push
jg
pop
pop
mov
scas
xchg
into
xchg
push
mov
sbb
sub
aad
mov
aam
mov
fsubl
call
mov
mov
xor
sub
pop
out
mov
or
xchg
push
data16
leave
ret
decl
jo
or
into
push
out
push
addr16
inc
push
sbb
jecxz
or
and
leave
icebp
rolb
mov
jmp
dec
mov
lret
popf
sti
test
mov
dec
fisttpl
push
idivb
cld
int3
lea
pushl
mov
notl
sbb
cmpsl
ss
inc
xchg
jmp
inc
or
aas
or
rcrb
das
jae
ljmp
aaa
push
aam
dec
pop
stos
subb
aaa
adc
in
incl
dec
inc
push
rorl
mov
sbb
pop
xor
arpl
jmp
mov
std
addr16
and
shll
scas
sbb
std
in
sub
ja
mov
lock
and
fisubrs
inc
dec
imul
sbb
jg
mov
push
pop
outsl
cli
fsts
js
das
clc
decl
pusha
sbb
es
lods
shrl
jecxz
xchg
loopne
push
pop
cmp
outsl
xor
or
inc
fcmovnb
inc
loope
pop
jb
jmp
push
rorl
cwtl
mov
sub
nop
inc
cmp
aas
imul
call
bound
mov
sub
movl
xor
mov
mov
sti
jge
aam
int3
dec
jge
fwait
push
mov
stos
loop
fldt
test
jmp
or
dec
adc
fisttps
mov
pop
xlat
cmc
subl
cwtl
outsb
mov
mov
lea
filds
mov
sbb
fstpl
jmp
fildll
sbb
mov
pop
stc
push
insb
les
sar
jg
adc
out
push
jne
insl
xor
movsb
shlb
std
das
clc
add
daa
inc
arpl
icebp
data16
and
test
mov
mov
dec
mov
mov
sbb
loope
icebp
xchg
fistps
fucomi
stos
daa
sar
sbb
mov
imul
push
lahf
in
push
and
dec
in
aas
push
dec
or
outsl
xor
add
cmp
xor
out
clc
mov
xor
leave
cld
fstpl
cmpsl
leave
call
sbb
mov
pop
dec
test
fyl2xp1
inc
xchg
adc
loopne
sbb
xchg
out
add
add
movsb
jle
xchg
fmull
mov
call
or
loop
pop
adc
push
insb
out
in
mull
add
decl
stos
int
aas
hlt
les
add
rorb
test
arpl
ja
repz
test
inc
mov
daa
sti
addb
xchg
lods
jg
pop
incl
inc
mov
ret
xor
decl
push
jnp
mov
dec
mov
jl
shll
dec
push
aaa
dec
std
cltd
stos
mov
imul
mov
pop
scas
inc
std
mov
or
repnz
xor
bound
pushf
imul
arpl
lahf
loopne
fwait
jo
lcall
jmp
add
dec
dec
jo
jp
fistl
fs
sbb
xor
sahf
lahf
mov
ss
jg
cmp
cld
mov
insl
outsl
push
sub
xchg
sub
pusha
mov
add
fldenv
outsl
ss
inc
in
rcrb
mov
clc
outsl
pop
sbb
pop
pop
clc
mov
das
enter
dec
ljmp
xchg
and
ret
add
and
rcrb
push
sar
lret
cmc
bound
mov
jg
outsl
mov
enter
cli
jecxz
cli
xchg
jo
push
xchg
inc
cmpsl
mov
cmpsl
repnz
popf
clc
add
cmc
adc
add
js
jg
dec
aam
xor
mul
pop
lcall
cmpsb
push
clc
das
sub
or
mov
sbb
imulb
ss
inc
cmc
cmp
pusha
sahf
lods
mov
sti
incl
outsl
xor
mov
mov
mov
sbb
pushf
mov
and
gs
push
push
loopne
mov
inc
dec
lcall
inc
mov
cli
xor
decl
lea
bound
mov
add
int
mov
jmp
ret
push
lea
pop
jl
pop
data16
shlb
jmp
out
xor
mov
mov
cmp
lods
addb
xor
jg
xor
les
or
nop
imul
leave
mov
addl
rcrb
int
stc
mov
cmp
test
scas
push
mov
sub
push
aad
push
in
sti
cmp
jmp
addl
jl
sbb
hlt
xorl
aaa
add
fidivs
push
or
in
dec
sbb
xor
xorl
fidivs
inc
ss
or
inc
xor
jge
cmp
insl
mov
jmp
inc
mov
pop
test
sarb
insl
jno
outsb
dec
sbb
pop
insb
popf
push
add
sbb
call
xor
aad
orps
fdivp
jmp
push
clc
out
insl
ljmp
andb
sar
insl
mov
mov
xlat
sub
sub
pop
rcll
xlat
inc
xchg
gs
das
cwtl
inc
cld
cmp
sbb
or
fists
pop
out
mov
add
add
xor
bound
ss
gs
cmp
out
sub
test
insb
loope
pop
xlat
adc
or
jo
pop
cwtl
mov
and
add
pop
push
clc
jmp
nop
out
ret
jge
xchg
mov
adc
pop
cltd
rcll
dec
sbb
mov
fcoms
jno
out
xchg
add
lcall
jbe
pushf
dec
mov
pop
lahf
sti
cwtl
adc
jge
ret
jmp
mov
sbb
lea
push
sub
or
cltd
push
lods
data16
das
sbbb
and
popa
adc
jae
fs
test
push
add
pop
movsl
jge
cmp
or
push
test
and
and
pop
or
leave
inc
jmp
cmp
and
mov
lods
mov
mov
frstor
or
mov
or
jg
add
sbb
aas
pop
aad
mov
call
dec
lahf
call
mov
pushf
push
mov
or
push
repnz
cmp
xorl
sub
jmp
sub
inc
outsl
mull
fwait
loop
pusha
push
cmp
sti
xchg
inc
shll
or
vrsqrtps
lahf
jmp
inc
pop
or
inc
push
xor
nop
mov
orl
pushf
cld
imul
js
pop
mov
mov
neg
je
dec
jp
inc
cmp
jae
dec
cmp
shl
mov
xlat
scas
lcall
sbb
cmpsb
pop
test
mov
jnp
mov
das
mov
push
sbb
shlb
mov
dec
pop
scas
daa
and
stos
jecxz
pop
pop
mov
repnz
loopne
insl
mov
cltd
xor
lock
stc
pop
hlt
mov
loopne
add
mov
sub
outsb
inc
xchg
mov
mov
push
mov
addr16
pop
sahf
pop
pop
mov
pop
and
push
aas
add
test
lret
in
cmpsl
jns
data16
mov
mov
and
add
sarl
jg
jp
mov
pusha
je
jo
enter
xchg
out
data16
inc
mov
int
cmp
notb
cmp
fs
push
outsl
mov
addr16
pop
lods
jae
iret
daa
mov
fisttpl
dec
or
push
sti
fisubs
or
inc
cmpsl
fs
xchg
inc
lcall
rcrl
aad
adc
aam
adc
adc
adc
mov
cli
dec
dec
stc
push
int3
dec
dec
and
lock
mov
mov
imul
adc
in
xchg
sub
std
shrb
jnp
sbb
in
cld
das
nop
jbe
imul
out
repnz
and
fcompl
loop
in
sbb
sbb
jae
cld
std
xchg
es
and
and
pop
lods
clc
jmp
push
imul
test
inc
push
pop
shl
insb
sub
mov
pop
stos
or
lret
das
push
cmpsb
daa
jp
int
xlat
lcall
fcoms
mov
lock
shlb
dec
inc
lds
xchg
pop
rorl
stos
pop
pop
popa
movsb
lock
ret
pop
lds
rol
add
lock
pop
push
adc
out
ljmp
cli
jecxz
cmp
dec
lods
add
ret
dec
push
sub
push
daa
insl
mov
inc
fbstp
jg
jbe
xor
mov
sub
clc
rclb
mov
ret
push
mov
pop
sar
adc
mov
add
scas
sti
ljmp
fistpll
xor
test
mov
lods
or
cli
jg
cltd
scas
stos
sbb
add
outsb
sub
out
mov
out
jne
lods
ljmp
cwtl
iret
xor
stos
inc
pop
scas
int
mov
stos
mov
fwait
push
add
inc
or
inc
gs
daa
xchg
test
aaa
ret
sbb
sub
sarb
xchg
pop
mov
call
sub
and
mov
fbstp
fstp
sbb
dec
mov
push
jg
sub
loopnew
js
push
push
add
test
adc
imul
stos
incl
cld
dec
dec
push
jbe
movl
or
cwtl
fbld
mov
incl
lret
sub
xchg
push
sub
cwtl
mov
cmp
mov
mov
icebp
push
lahf
icebp
loop
out
cli
push
pop
fcomip
pushf
outsl
je
push
jmp
sub
fdivrl
mov
jmp
mov
pop
add
rol
repz
push
xor
decl
ss
in
cs
or
mov
jo
int
sub
mov
jmp
xlat
cmp
mov
in
sub
xlat
in
pop
scas
add
jmp
push
pop
ficoms
add
adc
cs
les
cmp
sbb
andl
decl
arpl
and
mov
fisttpll
jo
xor
mov
push
mov
add
push
pop
jmp
rorb
shl
insl
scas
jmp
xor
cwtl
in
sub
mov
inc
inc
jmp
pop
mov
mov
sbb
addb
enter
cli
sbb
mov
subb
push
sbb
stos
lret
mov
sub
and
adc
add
aas
dec
cmpsl
sub
ret
jo
fdivs
jg
pop
fdivp
mov
jg
sbbl
dec
push
mov
cmpsl
and
lods
iret
enter
and
jg
jmp
push
add
sbb
xchg
sbbb
xchg
lret
outsl
or
mov
and
adcb
dec
lock
dec
subb
ja
pop
jb
je
andb
and
js
ret
jno
in
add
mov
sahf
test
cmp
scas
leave
cmc
pop
push
in
outsb
addr16
fnstenv
mov
pop
add
sbb
jo
dec
pop
lcall
shr
mov
sub
inc
iret
bound
sub
mov
jle
jae
or
call
hlt
push
xor
push
lret
pusha
bound
xchg
pusha
fisttpl
insl
adc
decl
pop
adc
lods
frstor
mov
sarl
arpl
jg
pop
jo
sub
sbb
iret
xor
mov
je
fldcw
iret
in
jg
cmp
jecxz
sub
lret
fidivrl
or
xlat
lods
lret
push
mov
mov
mov
imulb
jb
xchg
mov
inc
mov
mov
or
clc
xchg
lock
jle
pop
add
ret
addr16
dec
leave
mov
sti
icebp
pop
fsubs
jecxz
cli
cmp
dec
sbbl
push
and
push
fnstsw
adc
nop
cmp
pop
and
pushl
push
call
js
movsb
in
addb
mov
pushf
test
or
ss
das
push
in
mov
popa
mov
jb
cmpsl
add
jmp
aaa
out
stc
or
push
lods
cmp
jl
sbb
push
mov
push
stos
insl
movsb
sub
add
lcall
mov
jg
mov
sbb
stos
add
adc
pop
jl
cmp
call
push
jns
pop
fwait
jle
rcrb
mov
mov
insl
sahf
mov
testl
jmp
es
and
inc
cmpsl
pop
lahf
xlat
xor
clc
dec
pop
adc
and
stos
aad
mov
or
mov
imul
adc
hlt
aaa
or
sub
or
bnd
ret
and
call
ds
pushf
mov
mov
pushl
jb
ret
add
lret
adc
xchg
je
popa
out
jg
outsl
fadd
push
xchg
xchg
xchg
push
icebp
test
mov
adcb
fmuls
lahf
cmpsb
xchg
out
add
or
mov
xchg
test
sub
out
cli
xchg
push
mov
inc
push
imul
repnz
loope
push
in
xor
decl
and
add
inc
xchg
cmp
aas
pop
das
or
jg
imul
lea
lock
decl
notb
add
test
arpl
pop
mov
movsb
push
dec
jns
dec
sbb
mov
or
fildll
xchg
out
mov
mov
push
fstps
out
add
mov
push
ja
scas
push
cmp
or
mov
es
in
or
lods
jge
and
cmp
in
xor
pop
mov
xor
lret
movsl
es
pop
adc
je
enter
insb
push
mov
ja
and
or
add
cmp
pop
cmp
cmp
xchg
xchg
icebp
call
or
ret
xchg
repnz
mov
cmc
pushl
out
call
sarl
xchg
shrb
inc
inc
decl
cs
pop
push
shrb
mov
sub
jmp
ja
outsl
xor
mov
and
pop
mov
outsl
dec
inc
sahf
or
cmp
push
sub
xor
push
repz
out
jae
mov
fcomip
add
pushl
sub
lock
adc
decb
sub
leave
sub
push
loop
stc
cmp
gs
push
ficoml
call
cmp
andl
inc
mov
cwtl
test
cmp
add
cltd
mov
icebp
shlb
outsb
sub
in
xlat
dec
mov
aam
mov
dec
sub
lcall
mov
or
popa
or
jo
mov
cmp
or
and
decl
out
pop
pop
dec
cli
neg
inc
push
int
and
xchg
stos
fwait
adcl
xor
mov
adc
fmuls
sbb
data16
add
dec
fnstenv
mov
dec
or
inc
out
or
add
cli
mov
cs
pop
cwtl
stos
push
dec
test
mov
xor
ljmp
out
enter
decl
scas
das
fstps
outsb
or
mov
dec
mov
push
pop
pop
dec
mov
in
mov
xor
push
xlat
repnz
ljmp
add
pushl
mov
mov
xchg
sub
pushf
jns
sub
and
fisubrs
scas
add
pop
xor
decl
test
lret
pop
pushf
sub
push
mov
jno
and
and
lcall
mov
push
jg
das
cmp
or
in
outsl
decl
fmul
cs
mov
mov
shrb
insb
faddl
movsb
jg
cmc
call
imul
gs
mov
push
jecxz
in
push
call
cld
out
test
adc
out
ficoms
inc
and
mov
addr16
mov
xor
sbb
and
jg
sbb
shrb
pushl
dec
inc
mov
sub
cwtl
fs
neg
xor
jmp
sbb
pop
push
sub
cmc
cmpsb
mov
jns
decl
push
addr16
gs
in
cld
hlt
pop
call
jmp
push
jp
in
lock
call
rorb
mov
mov
mov
aaa
mov
shll
mov
jnp
cli
jmp
jns
cmpsl
jns
pop
mov
insl
push
jbe
jb
xlat
xorl
pop
rcll
jmp
std
jb
dec
pop
and
mov
test
fisubl
call
jbe
ljmp
xchg
call
mov
jbe
aam
mov
sub
scas
lds
dec
cmp
mov
call
or
cltd
inc
jge
xchg
or
das
cmpsb
cmp
arpl
add
sbb
outsb
push
loopne
incl
jbe
xor
jecxz
mov
lods
cli
ljmp
inc
sbb
and
mov
inc
in
shlb
cmpsl
dec
mov
pushl
sub
dec
pop
inc
in
and
jl
xor
movsl
loope
jns
push
push
stos
dec
or
in
sar
ljmp
in
adc
jnp
cmp
rorb
mov
add
jl
push
xchg
mov
fmull
pop
iret
leave
pop
mov
xchg
enter
or
xchg
das
or
imul
adc
cmp
push
mov
mov
imul
mov
adc
jmp
repz
pushl
cwtl
iret
inc
mov
inc
jmp
push
loope
and
mov
adc
add
popf
pop
xchg
or
std
and
sti
inc
adc
dec
leave
mov
mov
ljmp
jno
jbe
lods
adc
in
movsb
lret
call
pop
add
adc
sbb
hlt
movsb
dec
push
in
mov
lods
push
dec
mov
loope
jmp
out
jbe,pt
or
in
jne
mov
fistpll
mov
movsl
out
sbb
xorl
popf
hlt
mov
repz
sub
in
and
stos
imul
decl
in
push
icebp
xchg
into
or
or
push
outsl
push
push
mov
stos
mov
cli
paddd
mov
mov
ret
jmp
dec
jno
or
lret
sahf
and
sbb
enter
jg
adc
cmpsl
push
or
loope
add
lret
push
push
and
movsb
push
nop
inc
and
jmp
in
movsb
ja
jnp
fistpll
ret
lcall
mov
fstpt
insb
aas
out
fcoms
icebp
lods
lock
ss
adc
mov
jb
icebp
push
loope
lcall
sub
jmp
jp
jo
aad
test
cmp
mov
lahf
in
movsb
sub
cmp
call
outsb
js
cmp
push
in
jge
cwtl
int
push
cld
pop
ss
mov
bound
xor
pushl
xchg
fadd
test
push
fs
xor
cmp
not
bound
ljmp
outsl
mov
outsl
leave
es
pop
cmp
ret
mov
gs
push
ljmp
jb
dec
into
ret
adc
cmp
add
idiv
mov
jg
or
xor
pushf
dec
aam
dec
xchg
cmp
pop
adc
mov
xor
lret
jnp
pop
adcb
dec
push
fistl
mov
aam
xchg
add
sbb
bound
ljmp
or
jbe
repnz
mov
nop
pusha
dec
sbb
sar
in
std
in
call
mov
in
shrl
cwtl
orl
adc
jno
ret
adc
xchg
iret
mov
in
xlat
cmp
pop
xor
arpl
and
xor
add
xorl
mov
jg
and
pop
addr16
jnp
stos
in
add
icebp
xchg
add
arpl
incb
in
or
sbb
ljmp
popf
loopne
sbb
ud0
jmp
xor
pop
push
mov
pusha
inc
test
jnp
es
bound
outsb
lret
or
and
ja
sbb
stos
das
pop
cltd
cmp
iret
roll
dec
xor
ljmp
sub
lea
call
inc
pop
pop
pop
jne
pusha
push
sub
mov
dec
iret
mov
test
or
xchg
mov
mov
mov
dec
scas
frstor
add
dec
sbb
pop
out
lcall
mov
cvtpi2ps
addl
sbb
fbld
ljmp
out
insb
jp
mov
mov
incl
xor
push
lea
mov
fwait
icebp
sbbl
adc
mov
and
jg
mov
sti
int
xlat
dec
sub
push
push
dec
loope
add
out
push
cmpsl
xor
push
icebp
or
in
or
aas
data16
xchg
cmpsb
lock
lcall
popl
lret
cmp
in
hlt
push
clc
pop
das
hlt
sbb
lcall
lcall
sti
jns
mov
hlt
lock
xchg
push
jns
test
pop
sub
mov
pop
jg
icebp
pop
sbb
sarb
imul
dec
iret
or
stos
call
fucom
test
cmp
jg
clc
cld
xchg
adc
in
mov
outsb
inc
fwait
mov
jge
mov
cmp
out
cld
jg
rorb
popf
test
inc
int3
int3
dec
fidivs
out
jg
and
push
xchg
or
test
xchg
push
push
sar
lcall
into
cmp
and
ljmp
sub
insb
mov
sbb
jg
cli
call
push
stos
inc
push
je
or
add
call
in
jae
sub
imul
aaa
lock
pop
aad
xorl
filds
sub
cltd
test
mov
pop
xchg
and
fmull
pop
mov
mov
jns
cmp
mov
das
adc
enter
int
ds
faddl
jle
incl
xchg
addr16
test
clc
lret
leave
sbb
cli
mov
iret
sbb
pop
in
clc
xchg
test
insl
pop
adc
mov
and
incl
les
xchg
pop
idiv
xor
xchg
inc
push
xchg
mov
inc
push
jg
mov
in
dec
out
and
pop
xchg
mov
inc
mov
ja
fwait
notb
xchg
pop
lahf
scas
icebp
call
mov
outsb
jae
sbb
in
mov
fstpl
lcall
mov
mov
arpl
cld
fsubl
insl
sbb
cmp
add
adc
jg
icebp
and
outsl
xor
xor
dec
jmp
ja
in
imul
rcr
stc
sbb
push
dec
ret
and
sub
jmp
bound
pop
mov
sarl
xor
fidivl
lret
jne
mov
in
dec
cmp
and
call
add
cmp
imul
int
push
imul
push
add
adc
push
inc
mov
sbb
mov
popa
out
sarl
add
inc
sbb
push
rolb
dec
inc
jmp
sub
jg
or
ljmp
jge
mov
jb
inc
in
pop
sbb
incl
cmp
lea
add
jmp
scas
cltd
lods
sbb
xor
jl
mov
ljmp
call
xchg
mov
cmc
mov
inc
das
add
enter
or
ljmp
sbb
sti
je
repz
mov
jg
scas
and
movsb
fxam
mov
scas
mov
mov
shlb
inc
dec
mov
in
xor
inc
test
hlt
adc
cld
ljmp
shlb
aad
sbbb
mov
ds
ret
clc
inc
test
xchg
subl
jmp
sti
jg
inc
jo
dec
arpl
mov
lods
fldt
not
or
int3
fwait
mov
fmull
sub
jmp
xchg
popf
call
lods
mov
mov
fstp
xchg
sub
pop
ljmp
inc
pop
neg
push
testb
mov
test
dec
jmp
mov
pop
nop
clc
psubq
jo
pop
scas
adc
add
pop
jmp
jg
das
add
xchg
add
pushl
in
int
dec
ljmp
insb
out
les
mov
aas
jl
inc
test
std
dec
pop
call
cld
and
mov
or
xchg
cmc
xchg
rcrb
loope
pop
sbb
mov
dec
ret
popf
orb
mov
aad
pop
pop
fstpt
stc
mov
xor
out
les
inc
loopne
cmpsl
pushf
inc
mov
pop
adc
pop
testb
ljmp
test
push
std
add
lcall
dec
aad
scas
xchg
xorb
jl
stc
mov
xor
aas
rclb
std
arpl
sbb
adc
pushl
dec
push
ficomps
push
xchg
out
movsb
ret
sub
fcomip
pushl
ficoml
outsl
adc
mov
sub
outsl
push
cmp
std
imul
lret
mov
imulb
addr16
mov
mov
xor
xchg
inc
or
rolb
lahf
dec
xor
adc
in
jle
xchg
imul
and
insb
lcall
aaa
test
add
mov
mov
js
ds
repnz
jne
inc
xchg
out
jo
or
and
imul
decl
sub
dec
pusha
dec
mov
mov
add
ds
cmc
jmp
enter
sbb
lods
divl
decl
cwtl
subl
pop
push
sub
cmc
outsl
mov
aaa
fidivs
stc
fwait
jg
mov
clc
insl
inc
pop
jb
leave
dec
and
xchg
sub
cmpsb
pop
pop
lock
insl
inc
in
sbb
fisubrs
jo
cmpsl
fldcw
call
mov
add
fbld
push
fdivrs
test
mov
cmp
outsl
mov
jg
imul
cmp
jo
push
mov
repnz
mov
add
push
pop
xchg
and
dec
mov
or
out
rcl
mov
outsl
cld
nop
fcom
and
mov
jle
cld
incl
jp
inc
mov
inc
es
sub
daa
popa
jmp
cmp
cmp
xchg
add
iret
call
dec
movq
jg
incl
lods
sub
jmp
cwtl
lea
fildll
sbb
popa
cmpsb
clc
fisttpll
adc
adc
mov
sub
fistps
pop
push
pop
lock
scas
pop
fwait
int
sbb
int3
pop
pop
arpl
adc
push
adc
xorb
mov
pusha
jg
mov
cltd
mov
lcall
or
jp
les
pushl
pop
ret
fcmovb
js
jnp
and
sbbl
daa
adc
and
pop
daa
std
add
dec
mov
cmc
mov
pop
pop
insl
adc
mov
incl
or
outsl
jge
icebp
sbb
push
xchg
lret
js
add
push
mov
decl
jnp
movsl
jnp
mov
jns
jns
dec
loopne
or
xchg
dec
jo
cmp
cli
incl
sbbb
lahf
or
xchg
jl
in
inc
gs
jg
aaa
adc
call
dec
jg
pop
jl
mov
sar
fiaddl
inc
pop
or
in
push
adc
mov
ljmp
pop
push
jbe
bound
jg
movsl
or
jb
jb
data16
call
loop
lock
test
push
int3
push
pop
mov
sub
jb
ljmp
push
add
push
cltd
iret
xchg
in
jbe
mov
decl
push
and
and
jnp
sbb
and
or
test
stos
into
inc
push
out
popa
or
je
jg
insl
jp
ret
dec
sbb
pop
and
dec
mov
xchg
xchg
mov
call
xchg
cmp
mov
mov
insb
ja
sar
pop
pop
mov
pusha
mov
pop
inc
push
idiv
mov
mov
ror
sbbb
fldt
aaa
popa
or
mov
ljmp
fwait
pushl
les
mov
sub
test
push
pop
xor
jg
or
mov
icebp
das
sbb
and
dec
sbbl
jge
ja
xor
scas
stos
mov
jle
cmp
xor
inc
test
loop
xchg
push
cli
pushl
data16
push
xor
bswap
or
mov
repnz
mov
out
dec
mov
pushf
adc
cmpb
sbb
dec
lods
aam
es
call
pusha
int
outsl
push
and
cs
ljmp
pop
or
mull
ljmp
fwait
imul
sub
mov
cmp
incl
mov
mov
pop
jns
push
dec
test
cmp
in
mov
adc
fbld
loopne
push
push
pop
sar
stos
or
fadd
ret
adc
hlt
dec
or
roll
mov
adc
mov
ljmp
repz
inc
dec
push
push
sarl
mov
pop
repnz
cwtl
pop
pop
xchg
jb
pushl
ret
rolb
andl
lods
leave
ds
lcall
add
fldl
mov
mov
pop
adc
idiv
sbb
dec
inc
or
outsb
or
sbb
mov
adc
mov
mov
cmpsb
jmp
shrl
fcompl
jge
adc
out
lcall
aas
mov
dec
mov
fisttps
mov
std
cmpb
jne
cmp
fdivp
call
cltd
data16
cwtl
mov
ss
int
addb
adc
loopne
cmp
ss
fbld
popf
inc
pop
cld
jg
call
or
les
inc
inc
inc
gs
lret
iret
jns
fstpt
mov
hlt
mov
popa
loop
cmp
jge
jmp
mov
cs
adcb
or
sbb
push
fdivs
cmp
pushf
movsb
push
int
in
adc
ret
jae
aad
or
xor
rolb
or
cmp
test
clc
rorb
adc
stos
cmc
lods
push
adc
jecxz
incl
xchg
cmp
dec
mov
sub
cmp
iret
mov
fisttps
repz
mov
sub
add
sub
adc
aam
incl
lret
pop
stos
js
xor
aaa
sub
insl
ret
ljmp
sbb
dec
jmp
push
sub
ja
mov
jno
pop
ja
std
incl
push
jb
cltd
pop
int
cmc
imul
jmp
adc
aaa
dec
das
cwtl
or
push
sti
inc
inc
pop
fidivrl
je
int3
xchg
push
mov
arpl
rep
scas
jmp
dec
lahf
push
sbb
aas
push
js
mov
aas
xor
jns
std
xchg
cmp
and
decl
inc
ficoml
in
cltd
fidivs
jl
cltd
mov
rcrl
inc
add
add
sub
andl
enter
cmc
repz
push
movsb
mov
rolb
xor
jnp
dec
cwtl
push
and
icebp
ret
jb
insb
std
mov
mov
lods
xor
ljmp
jns
push
out
in
xor
jle
ret
mov
cmc
sbbl
or
or
cmovns
inc
fildl
xlat
xor
lods
ja
or
incl
lahf
inc
mov
leave
or
jno
mov
mov
fdivl
push
inc
mov
sub
ljmp
mov
sbb
mov
fmulp
shll
into
and
pop
cmp
icebp
lods
hlt
std
dec
cmp
mov
mov
stos
lcall
dec
dec
into
pop
mov
lret
pop
fistpll
xchg
arpl
xchg
cmpsb
dec
mov
inc
adc
pushl
std
repnz
add
jno
inc
lret
pusha
loopne
loopne
insb
sub
jg
sahf
inc
sbb
decl
jp
pop
add
mov
jl
lcall
push
fisubrs
push
fists
leave
shlb
mov
shrl
jae
and
sub
insb
xchg
dec
std
lods
xchg
outsl
call
or
sub
pop
bound
xlat
mov
mov
sub
push
inc
popf
jb
and
fs
decl
shll
js
scas
xor
lds
es
dec
mov
mov
mov
lock
and
jne
fstpt
adc
sti
add
sarb
add
shrb
rcll
push
sbb
fisubl
mov
mov
dec
pop
add
sub
lock
out
mov
cs
fdivrp
ja
inc
inc
adc
out
push
cmp
loopne
xor
lds
insb
mov
inc
mov
mov
test
aas
sub
aam
xchg
cltd
add
mov
fldl
icebp
mov
adc
mov
cli
xchg
and
and
jno
cwtl
xor
es
pop
push
test
addl
gs
push
xchg
inc
dec
add
lcall
popf
and
out
cmp
jmp
fmull
arpl
jns
pop
sar
incl
test
pop
mov
lret
sahf
scas
js
push
or
inc
test
dec
mov
pop
jno
popl
mov
aam
movsb
push
jecxz
sahf
fstps
addr16
xchg
push
inc
aam
inc
mov
clc
sub
jmp
das
std
xor
pop
lahf
fdivl
icebp
and
test
insl
ud0
adc
sti
movsb
jbe
inc
call
mov
mov
cwtl
outsb
scas
push
xchg
pop
scas
push
jp
xchg
decl
mov
dec
scas
mov
jb
adc
aaa
ljmp
mov
dec
mov
popf
dec
gs
mov
aaa
cmp
inc
push
test
push
mov
mov
and
iret
adc
dec
mov
fisubl
add
sub
inc
xor
ds
push
out
repnz
and
sbb
repnz
adc
pushl
ljmp
subb
addr16
jnp
mov
mov
mov
cmpsl
mov
xor
xlat
in
pop
inc
and
notb
mov
xchg
inc
in
xchg
sar
decl
xchg
dec
and
mov
xchg
addr16
imul
ret
movsb
pop
in
clc
jbe
ljmp
xorl
loopne
sub
cmc
fmull
mov
rclb
xor
xor
in
sub
lcall
out
adc
lret
push
pop
adc
sahf
push
dec
in
lock
jmp
rclb
repz
add
inc
mov
inc
loopne
mov
or
std
pop
call
pop
xchg
and
out
add
push
mov
icebp
ljmp
cmc
stos
adc
mov
mov
sub
cmp
outsb
fnstcw
lock
in
sbb
decl
cmp
std
jmp
mov
xlat
mov
adc
push
imul
adc
inc
and
call
xchg
and
mov
fsubrl
xchg
scas
push
adc
sbb
sarl
cltd
mov
fists
in
mov
mov
in
adc
les
and
or
sarl
outsb
call
sbb
int
dec
xor
jmp
fildll
push
cmp
insb
push
jb
loop
lcall
loopne
arpl
ret
fldenv
mov
xchg
les
mov
inc
aas
ret
scas
mov
aam
lcall
adc
push
decl
pop
adc
test
ljmp
popa
dec
rcrb
shl
fsubl
out
ja
xor
in
jns
lcall
add
rorb
movsb
sbb
mov
cmp
inc
pusha
xchg
js
mov
and
enter
mov
sahf
cs
roll
sub
pop
push
xchg
xchg
xchg
cld
incl
dec
mov
ret
mov
jg
mov
inc
mov
lock
fwait
shll
mov
ret
leave
or
les
inc
jmp
add
mov
dec
notb
dec
sub
pusha
icebp
add
out
jp
or
sub
mov
cli
mov
jne
iret
cld
clc
or
cld
pop
inc
std
lcall
cpuid
mov
addb
mov
adc
lcall
sub
mov
into
and
mov
insl
loop
pop
ss
and
fwait
inc
outsl
sub
mov
out
rcrb
xor
rcll
add
jg
orb
stos
mov
pusha
add
push
jae
aam
cmp
in
cmp
cltd
xchg
cmpsb
in
adc
jmp
imulb
dec
mov
dec
sbb
cmp
xor
test
xchg
mov
ret
jbe
mov
pop
push
push
das
mov
popa
pop
jg
jae
xor
mov
adc
and
lcall
pop
divb
pop
or
add
jg
pop
sub
push
mov
mov
sbb
sub
xlat
inc
outsl
pop
sbb
pop
cs
inc
cmp
mov
pop
scas
out
fwait
push
mov
mov
rclb
jg
scas
outsl
addr16
xchg
cwtl
or
dec
inc
and
loope
xor
push
dec
in
mov
fstl
xchg
push
dec
in
das
mov
mov
incl
arpl
ret
fistps
sub
loope
pop
mov
mov
push
push
jnp
gs
xchg
psadbw
aam
cmp
repnz
xor
call
ret
jae
js
pop
mov
inc
sahf
add
add
aam
stc
pslld
lods
test
lock
or
jmp
movsl
outsl
mov
mov
add
ret
mov
ljmp
das
stc
andl
mov
sub
or
sbb
jns
push
pop
aas
insb
dec
int3
jmp
sar
lcall
mov
or
pop
push
or
ret
movb
loope
mov
mov
imul
push
and
movsl
cmpb
jecxz
pushl
lds
mov
add
mov
inc
cmp
mov
ljmp
pop
inc
mov
xor
outsl
push
stos
adc
das
test
loopne
mov
into
pop
jno
mov
xchg
jg
fdivrp
jmp
cmpsl
jno
sti
or
clc
xchg
inc
dec
push
xchg
roll
adc
pushf
dec
jecxz
mov
in
lods
aad
add
decl
inc
sub
iret
add
adc
repnz
hlt
pop
testb
push
mov
aad
loop
lods
call
pushf
dec
or
add
leave
enter
or
xor
mov
call
jge
or
decl
filds
shl
aas
mulb
insb
paddb
or
or
sbb
jle
add
and
dec
cli
fwait
cmp
ficoml
flds
pop
sbb
fsubr
ja
xor
dec
cmp
int
pop
mov
push
jg
jo
inc
xor
dec
jbe
out
int3
xchg
cmp
mov
aaa
mov
jae
jecxz
cli
ja
jae
aad
xchg
jns
aam
pop
je
sbb
movsl
lcall
push
or
hlt
aam
scas
iret
xlat
jle
inc
stc
repz
mov
pop
pop
ret
or
orb
cli
mov
ficoms
lahf
fisubs
movsb
mov
icebp
mov
xor
add
add
or
out
cli
incl
ljmp
wrmsr
sub
mov
call
out
sub
inc
test
add
add
sub
lret
push
lret
fsubrl
negb
lea
andps
ja
decl
or
nop
out
pop
push
sahf
cltd
adc
decl
sbb
sub
pusha
ss
imul
xchg
aaa
int3
int
sub
ja
ljmp
dec
cmpsw
in
int
stc
scas
push
rolb
icebp
push
cmp
inc
decl
pop
or
pop
and
mov
sub
test
ljmp
inc
mov
add
out
out
mov
mov
aas
popf
mov
jg
filds
sub
aas
sbb
lds
movsb
loopne
lcall
clc
mov
rcl
stos
and
xchg
outsb
cwtl
mov
cmp
dec
cmp
mov
loop
inc
or
lods
jecxz
loope
or
jmp
incl
ljmp
pop
clc
loopne
cmpsl
cmpsl
jle
test
int
xchg
jb
mov
add
xchg
adc
fucom
dec
das
jl
pop
mov
and
int
aam
mov
xchg
mov
enter
and
xor
jge
cmp
jo
mov
mov
sub
hlt
daa
cmp
add
cld
inc
subb
mov
decl
rcr
jp
test
scas
sbb
xchg
mov
fwait
cli
lcall
and
adc
mov
add
stos
fdivr
ljmp
sbb
push
lret
sub
jg
shlb
jmp
and
mov
pusha
mov
or
pusha
popf
lods
mov
testl
push
sub
sti
in
ljmp
push
mov
ljmp
sbb
mov
les
loopne
push
mov
clc
add
ljmp
and
pop
xor
fildll
int3
cmc
sbb
sub
push
adc
bound
xor
rclb
outsl
clc
das
shlb
fdivs
inc
lock
mov
insl
jl
aad
ljmp
mov
lcall
add
aas
stc
test
aam
icebp
xor
jmp
dec
sbb
notb
stos
decl
mov
sub
add
fwait
arpl
into
out
sub
sbb
mov
cmpsl
incl
and
sub
mov
ds
call
ss
adc
iret
out
inc
decl
leave
adc
mov
incl
pop
jne
and
fnsetpm(287
sub
push
inc
in
scas
and
xor
add
cltd
add
sbb
push
outsl
lock
loope
jge
dec
shr
xor
inc
pop
je
pop
pop
in
decl
mov
mov
iret
cmpsl
and
test
das
sbb
pop
inc
call
adc
xchg
mov
sub
mov
repnz
into
inc
cmp
mov
mov
scas
adc
mov
ljmp
mov
ss
in
call
bound
mov
sub
fisttps
lcall
int3
pop
mov
sub
dec
jns
mov
adc
cmp
xor
ss
mov
ds
adc
sbb
stos
jmp
or
or
cvtps2pi
fdivp
fstl
inc
lcall
lahf
addr16
and
out
dec
cmp
int3
shll
jg
sub
idiv
nop
jg
test
sbb
imul
out
adc
cwtl
mov
dec
xchg
fdivs
cmc
adc
lock
cmp
insl
outsb
jns
inc
das
push
jmp
int3
sub
sysenter
or
pop
jmp
iret
or
mov
ret
and
iret
mov
mov
push
in
in
cltd
icebp
jl
test
pusha
jnp
test
das
inc
dec
pusha
jno
out
inc
jl
cmc
lcall
ljmp
add
cmp
dec
pop
ja
cli
jmp
xor
mov
movsl
stos
pusha
and
dec
lret
hlt
decl
cltd
mov
in
sub
sbb
aam
push
movb
sub
lods
add
lahf
fld
test
jne
adc
dec
ljmp
hlt
sahf
rcl
loope
cmpsl
dec
push
pusha
jg
mov
dec
cld
mov
aad
mov
push
sub
ds
inc
jne
iret
int3
push
cli
lcall
lea
aas
neg
pop
inc
test
mov
movsb
js
or
and
lcall
loopne
adc
lea
arpl
cmp
sbbb
fs
or
push
outsb
and
jmp
jg
cmp
jmp
lret
pop
mov
cmpb
xor
xor
mov
prefetch
jecxz
ljmp
inc
scas
add
inc
ds
mov
leave
xchg
outsb
test
repnz
mov
mov
push
movsb
adc
pop
pop
fdivs
lcall
inc
dec
pop
and
addr16
xor
cwtl
mov
adc
mov
cli
xchg
jg
jmp
jnp
jl
sbb
push
inc
loopne
lahf
call
cmc
fsts
add
or
ret
cmp
mov
add
add
shrb
adcl
jg
fstl
xor
push
shll
out
lahf
mov
in
xchg
push
jl
test
aaa
std
pop
aas
nop
rclb
fsubl
cmp
ds
push
adc
incl
pop
repz
pop
mov
shl
jg
nop
cli
faddl
push
aas
lods
enter
cmp
jo
cmp
push
aad
sbb
das
fistpll
daa
push
add
xchg
xchg
jns
dec
jae
repz
pop
mov
xchg
fists
add
sub
fdivrs
int3
test
xorps
mov
insl
lret
das
outsb
push
or
decl
sbb
xchg
dec
push
data16
xorl
outsl
clc
stos
aam
pop
enter
and
add
fbld
ljmp
movsl
fwait
sub
cmpsb
orb
push
arpl
daa
ss
push
sar
decl
jno
adcb
mov
push
idiv
push
cmp
jnp
jle
xor
dec
call
loop
lret
sub
mov
or
push
xchg
cs
jmp
or
add
in
sub
mov
repnz
mov
push
sbb
ret
pop
mov
mov
popf
call
xchg
jmp
push
imul
scas
fwait
xor
mov
lods
in
pop
cmpsb
push
nop
add
std
inc
decb
or
mov
mov
sub
negb
nop
rclb
fdivl
xor
in
pop
mov
lods
stc
cmp
jp
xlat
push
mov
pushl
sahf
mov
addr16
xor
les
rorb
popf
popf
subl
rolw
leave
or
lds
cmp
xchg
dec
aad
xchg
imul
cltd
mov
and
or
incb
jo
faddp
incb
and
cmp
push
jnp
jbe
push
sub
mov
aas
enter
mov
jns
ljmp
lcall
sbb
aad
int3
pop
push
outsb
sbb
sti
inc
and
sti
push
fnsave
pushl
outsb
mov
jbe
lds
in
dec
sbb
jmp
cld
mov
pop
and
sbb
sub
push
ja
in
pushl
outsl
jle
and
and
inc
fadd
push
push
fistpll
cld
mov
xor
nop
call
and
xor
call
pop
enter
sbb
sti
pop
loopne
push
in
mov
push
bound
jno
mov
xor
cmp
cmp
cld
jmp
pop
ds
sub
pop
add
inc
or
pushf
inc
adc
dec
push
sbb
incl
cmp
fcoms
sub
inc
mov
cmp
in
jp
scas
clc
std
sub
iret
mov
hlt
in
inc
xor
and
clc
ja
idiv
lcall
pop
into
insb
and
dec
fwait
pop
daa
xchg
aaa
fdivrs
cld
xchg
outsb
ja
sbbb
jns
cld
in
test
xor
cmp
push
fdivrp
pop
lahf
inc
pop
and
dec
loopne
loopne
outsl
add
pop
xchg
cmpsb
idivl
scas
xor
dec
mov
mov
add
jle
pop
mov
inc
jge
pushf
fsubrl
push
call
mov
sbb
xor
adc
lcall
stos
ret
sbb
fs
xor
dec
cltd
popa
pop
sbb
pushl
fsubs
inc
rep
xor
push
sub
mov
inc
jb
fnstenv
xchg
dec
pcmpeqw
sub
cwtl
shl
fld
fldenv
movb
sub
pushl
icebp
mov
push
lahf
push
fwait
mov
sub
sbb
loope
xchg
rcll
pop
mov
push
push
cld
mov
lods
add
es
pop
or
cld
xchg
jge
mov
jmp
das
cmc
mov
lods
out
pop
pop
popf
xor
cld
aaa
sub
lea
cmpsl
ret
cmp
mov
out
jnp
daa
and
daa
lock
sub
popa
popf
push
mov
xchg
xchg
mov
shll
inc
filds
pop
out
lds
mov
mov
pop
loopne
cmp
and
stc
fwait
in
jmp
out
insl
dec
or
lock
jg
pushl
add
xor
fldenv
mov
rcrb
iret
pop
and
incl
icebp
add
adc
js
or
into
inc
scas
mov
out
jns
xor
pop
jl
sbb
sbb
and
xor
xchg
jns
inc
xchg
out
pushf
adc
out
movsb
test
cltd
addr16
pop
lods
xchg
or
lcall
jno
cs
into
pop
mov
xor
xchg
sbb
lods
mov
lcall
cli
jbe
cmp
pop
jecxz
jnp
push
and
xchg
dec
data16
test
mov
mov
lcall
fsubp
enter
repnz
inc
movsl
leave
xchg
xchg
std
cmpb
out
incl
mov
in
pusha
notl
mov
ljmp
fcmovu
fsts
fdivl
shrl
mov
adc
rclb
outsl
dec
int
mov
lcall
sub
xor
and
dec
jmp
out
repnz
aaa
xor
inc
xor
shll
call
push
hlt
stc
movsl
str
xchg
pop
sti
dec
test
mov
sbb
ja
push
add
cmp
push
sar
jmp
test
out
fcmovnb
pop
clc
popf
ljmp
sbb
add
cltd
mov
repz
mov
mov
adc
cli
cmp
sub
rcrl
pop
dec
jge
pushf
push
rcr
ja
cmp
push
mov
or
out
push
pop
cmpsb
jg
pop
xchg
out
test
loope
loopne
jmp
adc
adc
inc
pop
jmp
jge
xor
pop
push
lods
push
mov
mov
xchg
fadds
cld
push
and
outsb
fs
and
jge
dec
jno
dec
imul
add
aas
jge
push
mov
jg
shlb
jns
movsb
iret
sete
add
pushl
mov
sbb
push
lods
stc
cs
dec
bound
test
xchg
mov
sbb
pop
sub
cli
xchg
das
add
pop
scas
xchg
popf
mov
add
dec
testb
std
ds
js
dec
add
push
lahf
repnz
jmp
icebp
call
call
in
inc
push
loope
jo
add
push
jbe
loope
xchg
shrl
stos
ret
lahf
inc
push
fsubs
mov
sahf
push
pop
mov
jbe
or
call
cltd
mov
or
call
test
jl
inc
sbb
jns
pop
cmp
fstpt
push
mov
popa
mov
cmc
push
pop
mov
xchg
dec
pop
inc
ljmp
ja
inc
jl
loope
jns
cmp
sbb
out
mov
fnstsw
sar
fldenv
call
aaa
int3
stos
or
daa
xchg
mov
ud0
add
jmp
out
cmp
in
xchg
xchg
ret
mov
pop
outsb
std
lea
inc
loopne
decl
dec
daa
pop
ja
sbb
or
jg
aas
push
cmp
fidivrs
imul
pop
or
pushl
mov
int
pop
mov
shll
incl
daa
je
inc
aas
sub
lret
test
and
adc
push
loopne
inc
aam
xchg
xor
cli
decl
dec
data16
add
mov
jg
fisttps
test
rclb
sahf
jp
int3
fwait
je
xlat
scas
adc
jg
mov
aas
xchg
push
xlat
xor
pop
cmp
orl
fcomip
push
loopne
out
out
pop
push
fs
test
jecxz
lods
das
xchg
icebp
cmp
out
pop
rorl
mov
push
or
cmp
in
jg
mov
testl
sbb
incb
dec
arpl
rcrb
jno
rcl
dec
lahf
mov
mov
data16
out
push
rcll
subb
mov
lcall
insl
mov
scas
ja
jmp
hlt
add
jmp
dec
mov
or
icebp
dec
push
xchg
jne
lret
call
adc
mov
mov
push
xor
jmp
scas
movsl
sub
jl
rcr
inc
pop
or
push
enter
rorb
lods
test
inc
cmpb
hlt
or
aas
in
xchg
cmp
aas
inc
std
incl
int3
jnp
call
pop
loopne
xor
fldl
std
or
incl
sbb
loope
out
dec
vpcmpgtb
repz
jnp
pop
or
jge
fildl
std
ljmp
iret
pop
pop
ds
inc
mov
adc
push
sub
xor
repnz
in
and
cmp
les
cmp
fs
test
mov
xor
pop
shr
scas
mov
loop
inc
push
push
stc
cmp
imul
gs
pop
add
add
jne
adc
mov
popa
int3
mov
bound
mov
rcr
outsb
out
push
test
js
pop
icebp
clc
mov
fcmovbe
loope
insl
pop
test
add
or
sbb
mov
mov
dec
pusha
and
jo
and
mov
addr16
loopne
mov
lahf
dec
add
jg
decl
inc
sub
divl
mov
lods
mov
loope
lea
adc
ljmp
mov
add
imulb
mov
aam
ss
std
incl
jl
movsl
sub
movl
out
stos
movaps
jg
insb
jmp
ljmp
cltd
or
jb
mov
dec
int3
daa
stos
sbb
leave
push
clc
dec
hlt
cmp
loop
jle
or
mov
push
rolb
push
std
mov
mov
dec
nop
jl
mov
sub
inc
lret
xor
shll
mov
sbb
sti
dec
sbb
dec
xor
inc
mov
fsubrl
cld
mov
test
mov
ret
je
sub
mov
adc
and
or
pushw
add
je
push
rorl
repz
insl
hlt
orb
mov
leave
push
xchg
shll
ljmp
sar
fmulp
inc
cwtl
jo
add
mov
mov
in
sub
lods
pop
movsl
in
sbb
test
dec
inc
outsl
sar
incl
pop
jbe
imulb
jecxz
mov
data16
stos
shll
lods
jb
jg
add
stos
rcl
cltd
inc
xchg
mov
ljmp
jle
inc
daa
fsub
push
cmpsb
cwtl
pop
cld
mov
sbb
fists
stc
movsl
ds
dec
sbb
mov
inc
notl
outsl
mov
cs
into
notl
incl
lahf
pop
leave
sub
cmp
or
sub
ja
jne
repz
xchg
jae
fnclex
das
or
ljmp
lods
sbb
aaa
mov
cmp
les
mov
inc
dec
mov
mov
call
xchg
jg
jp
xchg
push
test
mov
or
xchg
xor
leave
cmp
jae
movsl
or
inc
cltd
add
or
hlt
xor
sub
fbstp
sub
mov
jmp
push
and
xchg
cli
push
xbegin
push
fdivl
cmp
adc
add
adc
mov
pop
pop
add
xor
add
xchg
jns
dec
decl
jno
mov
inc
and
push
mov
aad
call
jmp
cli
xchg
leave
sbb
ja
enter
push
in
and
pop
or
jo
ret
fdivrp
incl
cld
fimuls
sar
sub
add
data16
pop
jno
lcall
decl
andb
aas
inc
test
lea
xlat
xor
push
mov
pusha
jae
arpl
test
jmp
ljmp
cmp
mov
loope
fistpl
cmp
dec
push
and
jnp
xor
jecxz
xchg
sbbl
incl
or
out
fwait
mov
fs
ds
loop
into
inc
cmp
cmp
jb
ljmp
cmpsl
xchg
aaa
push
or
imul
jmp
mov
adc
jge
ss
dec
mov
inc
push
lods
lcall
cmp
in
xor
mov
xor
add
notl
pop
inc
leave
mov
ljmp
pop
cmp
add
je
pop
jbe
ret
ss
ror
mov
repz
cwtl
mov
sahf
pop
sarl
dec
xchg
pop
cmp
pop
mov
adc
mov
mov
mov
cmpsl
dec
in
es
out
ljmp
dec
cld
movsl
les
movsb
movsl
popf
rol
jg
enter
sub
decl
sub
push
fnsave
and
push
cs
gs
jo
fistps
sti
sub
push
data16
cld
das
mov
fst
mov
repz
aad
sub
xlat
sub
pop
add
stos
jecxz
ja
outsl
mov
sahf
std
ret
lcall
in
jle
mull
bound
out
rorl
rcrl
outsb
xchg
pop
and
pop
push
cmp
mov
and
xchg
xor
stos
dec
mov
lds
lcall
in
pop
pop
mov
mov
outsl
xchg
stos
and
pop
out
and
cmc
das
mov
sbb
pop
sub
fstps
out
scas
mov
lods
dec
add
aam
insl
int
sbb
incl
pop
xchg
jmp
adc
arpl
push
icebp
int
xchg
mov
add
dec
int3
lcall
movsb
je
sub
orb
jg
xchg
sbb
mov
xor
jg
outsl
and
fwait
stos
adc
addr16
and
aaa
cld
call
xor
mov
hlt
sub
scas
mov
pop
jecxz
scas
cli
ljmp
xchg
xor
insl
xchg
rol
add
loopne
imul
pushf
mov
sbb
pop
fcmovnb
pop
jmp
adc
aaa
and
clc
popf
mov
push
clc
pushf
mov
out
pop
dec
mov
call
insl
mov
rorb
cmpsb
xor
xchg
add
ret
xchg
xor
cwtl
call
decl
push
and
data16
pushf
mov
loopne
sub
or
incl
sub
dec
lods
ret
ja
rcrl
lods
imul
outsl
in
jbe
dec
xchg
sqrtps
mov
pushl
pop
push
enter
subb
jbe
in
fisubrs
stos
cmp
incl
push
cltd
dec
lret
mov
jno
popf
in
ja
mov
mov
inc
sub
pop
decb
mov
xor
mov
jmp
jmp
fwait
add
jg
and
roll
cmp
push
sbb
mov
pop
xchg
mov
and
jo
add
dec
divl
lods
mov
pop
mov
jg
pop
inc
cltd
stos
xor
aas
sub
insl
inc
out
jge
sub
pushl
sub
adc
pop
mov
pop
sub
sbb
push
sbb
xor
decl
sub
sub
out
sarb
xor
sbb
lret
ffree
sbb
and
mov
dec
push
mov
mov
das
stc
jo
icebp
inc
or
xor
jmp
mov
pop
jmp
mov
call
out
or
or
sbb
xor
out
adc
std
lea
aas
out
movb
or
dec
xor
gs
call
and
pop
pusha
cmp
cmp
and
and
xchg
iret
xchg
fadds
push
cmp
cmc
call
mov
and
push
pusha
in
mov
shll
mov
stos
stos
xchg
mov
xchg
aas
fisubrl
loopne
lcall
xlat
jmp
sub
jbe
mov
movb
xchg
iret
inc
insl
cld
and
push
dec
sti
xor
aas
dec
cmpsl
xor
adc
xor
enter
hlt
call
aad
sahf
scas
add
xchg
fs
loop
xchg
and
idivl
fstl
loop
add
dec
jg
push
inc
sbb
pop
inc
jp
sub
sbb
push
aam
adc
in
inc
adc
int3
mov
hlt
sahf
cmp
inc
fsubr
and
mov
jl
cwtl
lcall
pop
outsl
push
inc
cmpsb
imul
add
stos
and
add
sbb
decl
dec
pop
xor
xor
add
in
arpl
outsl
pop
rol
out
flds
ljmp
outsl
cld
mov
in
mov
xchg
jb
js
cmp
stos
dec
nop
xchg
mov
adc
mull
inc
das
push
push
aad
call
sub
pop
outsl
loopne
lcall
mov
cwtl
adc
push
push
clc
cmp
pop
mov
pushf
in
test
cmpsl
icebp
mov
popf
mov
adc
in
and
dec
ja
jl
leave
xlat
or
leave
or
push
pop
mov
jl
cs
push
stos
faddp
lcall
gs
xchg
push
and
ja
ljmp
xchg
pushf
or
lcall
add
sbb
xor
fwait
lock
jmp
push
lds
cld
mov
decl
lea
jae
adc
pop
std
scas
in
xchg
rolb
lcall
rol
std
sar
mov
and
and
dec
test
push
xchg
cmp
fbld
jmp
mov
ss
lods
and
cltd
cmp
cmp
jb
mov
push
xchg
cmp
and
popa
lds
ror
mov
lahf
or
jb
lods
adc
dec
sbb
add
push
xor
rcll
outsb
sahf
and
jg
inc
sub
repz
loopne
sbb
arpl
lcall
call
jl
loope
cmp
xor
xlat
pushl
and
inc
test
cld
mov
or
push
mov
cld
clc
sahf
lahf
in
push
shl
sub
mov
jno
js
and
lcall
pop
jg
idiv
xchg
into
cli
cld
inc
jg
in
mov
lcall
adc
cmp
outsl
fcomps
into
in
cmp
out
xchg
imulb
call
scas
cmpsl
stos
push
lret
sbb
mov
es
xor
int3
inc
jge
and
test
or
mov
pushl
jb
mov
ret
enter
leave
push
adcl
sbb
dec
pop
shl
in
cmpsb
cmpsl
sbb
or
shll
insb
and
push
jns
sarl
jae
xchg
inc
inc
adc
mov
jg
cld
pusha
inc
incl
mov
sbb
fwait
idiv
loopne
adc
add
repz
ret
rorl
fwait
data16
les
outsb
xchg
jmp
popa
cli
dec
and
jge
or
pushf
js
movsb
and
jmp
lods
inc
mov
ficomps
push
imul
and
sbb
ds
xchg
pop
popf
decl
insb
jg
lcall
call
dec
es
call
dec
push
into
stos
popf
cmp
pop
sub
push
push
adc
loop
inc
xlat
xor
scas
xchg
test
fcmove
pop
lods
scas
fnstsw
lcall
xrelease
sub
mov
ret
add
push
adc
test
fldenv
das
jge
insl
sbb
push
std
mov
rclb
aam
dec
xor
mov
mov
pop
sub
adc
iret
inc
repnz
xor
and
jg
jno
lret
cmp
ljmp
jg
jle
inc
rcrb
mov
xor
sarb
outsl
cli
call
add
rcrb
mov
push
scas
xor
mov
pop
call
scas
jmp
mov
mov
ret
addr16
mov
xchg
push
xchg
jae
mov
adc
adc
js
outsb
fimull
out
and
movsb
push
adc
out
out
nop
add
cmpb
jmp
sbb
pop
xchg
or
aad
sahf
push
jno
cwtl
fildll
pop
cwtl
aad
outsb
xor
pop
repnz
insb
mov
pop
clc
ljmp
dec
mov
push
loop
xchg
dec
inc
jae
lcall
jbe
inc
idivl
mov
cmp
mov
sahf
out
addr16
das
add
mov
icebp
loopne
daa
and
mov
push
pop
shrb
rclb
lret
aaa
in
ljmp
jg
lds
push
mov
or
inc
mov
mov
sub
or
xor
inc
push
xchg
decl
lods
imulb
cmp
cld
mov
jmp
aas
shll
mov
roll
ret
es
jmp
mov
push
xchg
cmp
psraw
xor
sub
cld
incl
idivb
mov
mov
sbb
sbb
ja
lahf
iret
lahf
pusha
mov
or
cltd
clc
fistps
cmp
lock
jg
push
cmp
xlat
xchg
mov
mov
sti
rolb
cmpsb
dec
shll
cmp
jmp
dec
data16
push
add
cs
ljmp
addb
arpl
sub
leave
cld
xor
or
fsubr
mov
pop
and
or
lahf
cmp
rorl
pop
in
cmp
mov
xchg
cmp
out
and
push
dec
xchg
or
jg
and
negb
mov
xor
inc
int
mov
into
xor
fcomip
jnp
loope
fsin
pop
out
push
sbb
jnp
enter
mov
mov
das
clc
inc
jmp
add
lock
in
sbb
ljmp
pushf
out
xchg
mov
lcall
aad
jo
inc
sbb
js
pop
sub
popf
scas
push
push
and
repz
out
pushl
cmp
push
out
xor
mov
inc
xor
adc
dec
das
jg
add
dec
mov
push
adc
add
outsl
cld
sub
push
and
out
loope
sbb
incl
inc
adc
push
test
or
js
sar
and
in
mov
mov
mov
xchg
push
and
sub
inc
loope
inc
jle
inc
loopne
stos
out
add
lods
ljmp
daa
push
xlat
lcall
ljmp
ret
fcmovne
pop
jecxz
jnp
adc
mov
inc
in
cmp
movsl
push
popa
rcrl
dec
mov
mov
jno
dec
xchg
scas
push
clc
incl
loop
out
pop
mov
fwait
test
test
mov
leave
cmpsb
xor
push
ljmp
mov
je
mov
icebp
jmp
and
jb
pusha
clc
addr16
pop
loopne
cmp
call
mov
pushf
std
stc
pop
dec
das
shrb
cmc
adc
xchg
or
jmp
adc
repz
jne
push
ljmp
lds
pop
arpl
mov
bound
inc
mov
stos
xor
in
test
decl
fiaddl
enter
and
ss
inc
test
push
mov
jmp
negb
add
xlat
jecxz
sbbl
push
iret
incb
pop
pop
dec
lret
sahf
xlat
mov
lods
sti
repz
enter
addb
je
cmc
inc
mov
aam
mov
xchg
mov
decl
dec
adc
movsl
lahf
inc
cmp
nop
adc
add
repnz
loopne
mov
icebp
decl
push
cld
nop
mov
je
sbb
outsl
test
pop
loopne
aas
adc
stc
cwtl
sub
mov
xor
in
inc
decl
push
pop
insb
mulb
adc
cmp
push
je
xlat
rcr
ds
adcl
inc
fistpll
mov
pop
cmp
cs
aam
add
adc
or
jne
lcall
mov
jg
pushl
add
push
mov
mov
lea
dec
xor
stos
pop
stc
mov
adc
mov
lods
xchg
pop
popf
pushl
add
mov
dec
push
mov
inc
lcall
cmpb
jmp
mov
push
into
sbb
xorb
sti
pop
int
jmp
outsb
mov
into
subps
mov
xor
cli
fiadds
jg
lods
jmp
das
adc
mov
jmp
pop
imul
xchg
xorl
xchg
sysret
loope
xchg
incl
inc
jne
adc
mov
imul
adc
jbe
mov
std
movsl
outsl
cltd
incb
push
jg
incb
aaa
add
js
mov
mov
imul
divl
jbe
iret
repz
dec
mov
adc
idivb
decl
lods
pop
mov
jl
cmp
push
mov
mov
pop
fsubl
repz
jmp
jbe
lret
xchg
cmp
ja
pop
mov
stos
pusha
daa
pop
jbe
movsl
fdivp
fcmovnu
out
pop
sbb
incl
enter
cld
mov
test
jg
decl
dec
ljmp
mov
bound
sbb
cwtl
and
push
stos
stc
arpl
out
cmpsl
cmp
ss
mov
jg
lret
jo
or
out
sub
hlt
in
jo
incb
sub
decl
xor
outsb
inc
push
sysexit
in
xlat
insl
dec
out
in
ljmp
aam
ja
pop
push
cmovnp
packsswb
mov
cmp
adc
dec
inc
icebp
inc
mov
ja
mov
rorl
daa
cmp
push
pop
sbb
mov
dec
push
lcall
loope
sbb
ss
sti
pusha
jae,pn
sub
push
or
mov
pause
aam
ljmp
xchg
leave
lret
sbb
sbb
jle
push
sbb
int
sbb
outsl
hlt
cmp
pushl
test
sbb
lds
lret
stc
pop
lods
out
jmp
pusha
and
cmp
arpl
ret
mov
cmovbe
notb
inc
scas
jmp
or
loopne
jl
subb
inc
jo
pop
mov
jle
lcall
cmpsb
jg
add
jl,pn
mov
outsl
xor
mov
in
rcll
jl
dec
std
ret
mov
aas
loope
stos
repz
jmp
mov
mov
jnp
and
std
jl
ljmp
fnstsw
jbe
mov
popa
rclb
lods
inc
pop
sub
sbb
push
jl
mov
add
and
pop
and
jno
cmp
ficoml
cmp
mov
dec
sbb
dec
push
adc
mov
pushf
sbb
xchg
adc
jecxz
sub
add
jnp
push
decl
es
xor
jne
sub
imul
mov
aaa
mov
sbb
icebp
and
mov
out
cld
mov
decl
mov
insb
mov
movsl
shrb
xor
pop
rorl
jbe
std
insb
std
mov
fstl
inc
xchg
adc
jbe
and
sbb
aam
out
jne
in
xor
push
cmc
push
push
push
clc
sub
test
decl
ljmpw
aad
pop
test
mov
cmpl
hlt
push
pop
adc
xor
pop
and
or
into
jp
je
xor
jg
out
shrb
inc
xchg
jae
ret
iret
out
pop
dec
outsl
clc
push
cld
shlb
addr16
ficoms
xchg
ja
ljmp
rolb
push
aas
sub
sbb
lods
es
jo
pop
inc
jmp
mov
incl
push
cmc
test
bound
push
mov
mov
adc
fcomps
mov
test
cli
shrl
cmp
repnz
pop
out
and
jmp
xor
pushl
cli
hlt
pop
int3
pop
jno
fidivs
hlt
call
fwait
inc
and
mov
in
insb
push
pop
loopne
cld
cmp
lcall
dec
adc
inc
jno
repnz
fildll
or
xor
test
icebp
jbe
xchg
sub
daa
jo
xchg
mov
xchg
jae
push
pop
cmpb
push
mov
insb
push
add
adc
incl
movsl
test
push
mov
pusha
pop
xor
je
add
add
or
rorl
sarb
inc
std
xchg
call
and
sub
pop
cmp
add
lret
jge
xor
clc
sbb
and
sbb
mov
ljmp
out
out
es
pop
ret
gs
dec
fstpl
add
loope
and
lcall
pop
int
popa
xchg
mov
int
sub
fists
inc
sub
sub
mov
lcall
imul
in
pop
sbbb
cmp
mov
jmp
fnsave
adc
inc
clc
ljmp
sub
xchg
jne
repnz
fisubs
in
lods
fistps
dec
fdivrp
fcomip
call
mov
xchg
out
jp
out
lcall
xchg
inc
es
orl
decl
mov
cli
in
push
adc
mov
sahf
cmpsl
cwtl
inc
and
mov
adc
loopne
imul
mov
scas
sbb
call
fwait
add
inc
add
fisubs
dec
xchg
in
mov
inc
xchg
and
idivl
lcall
pushf
xor
sahf
movsb
cli
into
hlt
jbe
push
movsb
loop
adc
inc
or
ud0
sbb
and
iret
push
call
repz
ljmp
sub
clc
cmp
add
pop
add
jo
roll
pop
enter
sbb
daa
cmp
rsqrtps
xchg
cltd
xchg
in
xchg
add
outsb
lods
dec
pop
mov
insb
incl
pop
bound
aam
repnz
add
sar
sbb
in
push
cmpsb
mov
bound
push
call
inc
nop
out
cmpsb
xchg
xchg
mov
push
ja
adc
test
mov
add
mov
test
jne
lds
test
es
cli
ljmp
pop
push
fwait
loopne
scas
shrb
fidivs
repz
jecxz
icebp
inc
fadd
call
andb
outsl
jg
cmp
mov
xchg
pushl
dec
movsb
and
mov
daa
subl
mov
mov
incl
roll
inc
inc
xchg
idivl
push
lock
popa
jb
pop
xor
inc
out
addr16
outsb
jle
or
cli
mov
inc
adc
mov
xchg
fildl
xor
dec
push
dec
cmpsl
cmpsb
push
pop
and
outsl
xorl
jg
fwait
mov
xchg
call
insb
imul
outsb
sub
nop
aaa
fiaddl
stos
jnp
enter
mov
pushl
repnz
out
fsubl
push
mov
pop
lock
adc
lcall
ret
aad
or
fwait
lahf
sti
jns
incl
xchg
mov
xchg
push
dec
jmp
test
jns
popf
push
lods
imul
sub
inc
out
sub
mov
sub
dec
pop
icebp
cmpl
sbb
mov
mov
jp
adc
xchg
mov
in
ret
mov
loope
jmp
call
cmp
sbb
ficomps
dec
pop
add
mov
fdivrl
aas
lcall
jmp
ss
leave
aaa
shll
jmp
xchg
out
sbb
pop
jle
cmp
ljmp
hlt
cmp
inc
xchg
cmpsb
adc
imulb
stos
dec
rcr
pop
pop
je
rcrl
pushl
adc
mov
loope
sahf
loopne
sti
leave
xchg
mov
sbb
xchg
out
pushl
inc
jns
lods
mov
lahf
mov
mov
cmc
mov
lods
fstpt
xchg
jmp
cs
ljmp
push
loope
xchg
sub
jge
mov
jns
sarb
jmp
jne
cmp
push
sbb
or
sarb
sbb
xchg
lcall
inc
fdivrs
fcomps
add
mov
cmp
mov
adc
jg
pusha
xchg
push
shll
out
imul
dec
inc
pop
jno
adc
es
ljmp
adc
into
push
nop
fxch
fldl
mov
inc
xchg
stc
add
movsb
cmpl
push
sub
mov
push
mov
out
mov
aad
sbb
push
imul
movb
out
mov
sbbb
in
ljmp
callw
jo
mov
rol
cli
pop
push
daa
xchg
dec
xor
rcl
daa
test
jbe
and
jmp
gs
mov
out
pop
cmp
pop
sahf
xor
jecxz
pop
std
adcl
in
inc
ret
dec
xor
push
dec
pop
call
xor
push
xchg
xor
jmp
dec
rol
aaa
loop
jg
pop
das
loope
jno
sti
cltd
cmp
sti
arpl
mov
imul
jg
cld
cmpsb
or
xor
mov
paddb
push
dec
pop
jb
add
mov
lcall
sub
loopne
cld
adc
pcmpgtw
int
dec
mov
jg
and
jmp
jae
les
push
mov
jmp
decl
push
or
sbb
insl
pop
enter
mov
cmpsl
aam
dec
bswap
jg
xchg
dec
cmp
inc
nop
sbb
pop
stc
lcall
cmc
popf
jo
lds
fadd
or
pushf
cmp
nop
cld
lcall
add
jbe
leave
push
mov
dec
cmpsl
mov
cmc
push
in
clc
call
lahf
cmp
xchg
sub
pop
xchg
pop
sbb
and
test
imul
sub
cli
decl
adc
inc
stc
mov
rcrl
dec
inc
or
cmp
sub
movsl
jnp
outsl
cli
decl
mov
insb
je
dec
cmp
dec
lahf
xchg
rorb
bound
sahf
and
loope
mov
push
pop
mov
push
cwtl
mov
ljmp
dec
test
shrb
push
stc
call
xor
pop
jg
lcall
cs
xchg
hlt
insb
mov
loopne
loopne
jp
data16
cmp
mov
incl
int
cmp
pop
jbe
std
xchg
ds
or
mov
or
out
mov
jmp
incl
xor
cld
stos
aaa
test
or
sarb
pop
arpl
icebp
iret
mov
mov
outsl
xor
lods
aam
iret
loopne
push
jp
push
dec
shll
fsubrp
int
icebp
imul
or
lahf
xor
lret
inc
subb
or
addr16
jbe
inc
ficompl
shll
dec
inc
and
out
addr16
test
mov
cmp
aam
aad
push
scas
daa
fs
ljmp
repz
push
movsb
call
fwait
stc
fcoml
loopne
cmc
ja
roll
roll
jmp
jbe
iret
push
sub
xor
out
mov
stos
adc
jmp
mov
mov
pushl
mov
adc
das
and
test
orl
mov
mov
mov
sub
adc
out
mov
fsubrs
fdivr
sub
cmp
aas
repnz
movsb
inc
ss
stc
test
push
cmp
xor
lods
fwait
mov
adc
push
ret
jo
adc
mov
adc
fists
ret
outsl
mov
or
xlat
jmp
ljmp
je
imul
and
jl
inc
push
ret
rcrb
xchg
lock
pop
scas
icebp
call
nop
lret
jecxz
cmpsl
nop
pop
inc
inc
loop
test
pop
mov
mov
call
ret
inc
lahf
mov
pop
inc
addr16
loope
push
ret
jle
pop
mulb
sub
mov
stos
or
push
xor
fs
sbb
xchg
cld
sub
mov
aas
in
movsb
pop
sub
lahf
jg
insb
cld
xor
ficoml
xor
jmp
decl
pop
xlat
dec
fnstsw
sbb
cld
dec
into
out
lret
ret
push
cmc
jg
jns
leave
ss
decl
fmull
paddq
push
jg
or
iret
shl
or
icebp
dec
xor
popa
lahf
or
les
jge
jp
bound
dec
lock
cli
sti
in
push
dec
aad
sbb
fidivrl
inc
daa
jnp
add
insb
jl
loope
fwait
jg
es
pusha
cli
mov
dec
std
xchg
cmp
push
data16
jnp
pop
or
dec
fmulp
xorb
and
push
repz
scas
push
das
dec
sti
pop
push
testb
std
dec
fimuls
jns
pop
xchg
xchg
fadd
mov
xchg
rorb
pop
xchg
repz
lcall
xchg
jl
pop
push
adc
sbb
push
or
push
outsl
pop
lock
cld
mov
pop
idivb
lcall
push
push
or
ret
popf
jae
dec
lret
mov
jg
xchg
test
insb
rorl
and
outsb
add
add
add
inc
lds
mov
push
mov
pop
cmp
insl
push
stc
loopne
popf
shr
and
push
dec
dec
lcall
jg
dec
mov
jl
loop
lret
fyl2x
mov
jp
jg
dec
cld
stos
dec
orl
and
jno
fcos
add
mov
repnz
shr
scas
lret
out
cli
mov
loope
sahf
lret
das
jg
sbb
test
jmp
jbe
ja
mov
xchg
add
mov
mov
jl
mov
dec
pop
fstl
mov
mov
mov
lcall
and
sbb
push
popa
aam
mov
call
inc
dec
cs
add
sub
inc
push
inc
faddl
call
and
adc
add
stos
int3
jbe
jo
mov
bound
sub
test
cmp
fnstsw
les
dec
scas
sbb
adc
cmp
jns
aam
scas
xchg
cmc
jae
sub
jmp
adc
adc
call
cmpsb
insb
push
xor
popa
fldcw
mov
loop
mov
pop
mov
popa
cli
dec
add
jecxz
int3
inc
loopne
mov
mov
test
ljmp
cli
jno
pushf
xor
cld
add
sarl
xor
out
cmp
insb
mov
and
mov
inc
mov
mov
mov
xchg
mov
cli
jmp
xchg
test
mov
repnz
rclb
fs
cltd
movsl
movsb
fidivs
in
inc
xchg
orb
lret
fimull
imul
test
sahf
jp
aad
ja
jno
decl
into
mov
loope
cmpsl
and
jmp
xor
pop
push
call
fnstcw
fwait
jns
jl
loope
and
push
out
jle
je
and
shll
add
pop
out
mov
mov
xchg
cmp
adc
rorb
cmp
rorb
daa
mov
call
push
outsl
lea
jno
push
into
mov
add
inc
mov
inc
adc
test
ljmp
add
or
out
popf
push
outsb
jmp
inc
xor
push
repz
mov
ret
ret
sbbb
pop
add
fcos
cmp
mov
xor
add
pop
cmp
inc
in
xor
jg
call
in
flds
sub
das
sub
insl
mov
int3
adc
dec
cmp
and
orl
dec
mov
add
lcall
daa
cmp
jmp
ja
fs
and
ret
cmpsb
lcall
scas
ss
mov
pop
bnd
sbb
das
clc
pushl
push
add
or
je
std
fdivl
repnz
lea
or
call
leave
jb
and
adc
and
push
cmpsl
add
popa
loope
pop
mov
or
mov
inc
lahf
nop
xlat
mov
jge
mov
adc
repz
sar
pushl
cmpsb
ljmp
mov
shl
push
adc
push
sub
sbb
fcoml
mov
dec
outsl
int3
lds
sbb
daa
add
dec
mov
fiaddl
mov
ret
xor
sub
adc
dec
or
mov
dec
arpl
push
faddl
iret
addr16
sub
ljmp
es
xchg
ret
cmpsl
jne
jge
test
lcall
inc
cmp
lret
out
lcall
cli
clc
adc
dec
test
data16
lea
call
or
lret
xchg
cmpsl
jb
sti
push
add
sub
mov
dec
dec
insb
rcrb
pop
scas
sub
outsl
sub
inc
movsl
jp
cmp
pushl
xchg
mov
add
mov
fcoml
repz
arpl
push
adc
clc
call
std
gs
pop
arpl
icebp
ljmp
arpl
push
mov
jo
mov
outsb
cmp
fstp
in
bound
jno
xlat
pop
clc
push
sbb
add
out
test
cmp
mov
mov
lcall
enter
out
lahf
es
inc
push
out
lds
imul
sbb
incl
sub
xchg
insl
add
fwait
and
icebp
cmp
enter
scas
mov
cmpsb
pushf
outsb
cmp
xor
stc
mov
enter
jmp
decl
cli
pushf
mov
repnz
mov
lcall
mov
jae
add
fidivl
cmc
xorb
xor
and
out
sub
clc
daa
gs
incl
cmpsl
insl
push
in
jmp
xchg
les
xchg
xor
xor
lcall
outsb
dec
jbe
hlt
mov
cmp
push
dec
ficomps
fcomp
sbb
test
add
aam
adc
bswap
fsubl
push
mov
mov
mov
clc
in
cmpsl
ds
lcall
ficoms
mov
mov
mov
jp
or
test
mov
pop
mov
incl
cld
add
sbb
ss
jo
scas
sub
sub
cmp
jg
sub
mov
sub
fsubrs
clc
pushl
movsb
xlat
mov
xchg
mov
lcall
mov
ljmp
inc
lock
in
sarb
ja
addr16
pop
push
aas
pushl
mov
fwait
les
xchg
jns
std
fwait
and
jecxz
push
scas
addb
outsl
ret
in
cltd
pop
and
and
ljmp
pusha
and
cmp
out
jne
inc
sti
push
enter
mov
pushl
jnp
call
mov
std
sarb
pop
or
jmp
mov
or
aam
sbb
fsubs
rorl
cmpsl
dec
cwtl
aas
mov
test
sub
cli
lcall
fisttpl
mov
push
or
inc
mov
ljmp
popf
pop
jle
sub
in
fdivrl
lds
rcr
lret
mov
ljmp
xlat
bound
scas
pop
call
fnsave
in
decl
push
sbb
fwait
mov
dec
push
pop
pop
pop
mov
loope
aad
bnd
loop
sub
and
pusha
popa
fnstcw
sbb
cmp
pop
cmp
jo
outsb
or
call
push
cmp
inc
imul
sub
pop
cmp
sahf
mov
aas
mov
pushl
ficoml
lahf
or
and
mov
jge
nop
jbe
imul
ret
leave
decl
pop
faddl
dec
and
jmp
sbb
jno
add
push
sbb
pop
jo
add
ljmp
stc
mov
insb
lret
inc
xchg
xor
leave
adc
inc
mov
or
sbb
sbb
enter
sbbl
fdivrs
in
ja
sub
sub
je
pop
or
aas
sub
dec
xor
jg
decl
cmp
adc
js
mov
mov
in
xchg
test
std
pushl
sbb
scas
nop
pop
popf
sbb
or
ja
adc
add
cmp
push
and
pushf
sar
xor
lcall
mov
xlat
insl
sbbl
or
jae
cld
dec
lods
insl
or
adcl
pushl
pushl
lahf
jecxz
dec
jle
test
scas
add
cltd
movb
sbb
mov
decl
das
inc
outsb
jmp
push
cmc
mov
inc
push
or
vdivsd
jp
loopne
popf
rclb
out
in
mov
int3
inc
xchg
fildl
scas
cli
inc
testb
dec
pop
add
ret
sti
mov
xor
mov
subl
outsl
inc
or
dec
fsubrs
add
sbb
mov
fstps
ret
fsubs
scas
cmp
jecxz
iret
mov
ja
fwait
stos
pop
lcall
stos
inc
jno
icebp
lcall
popa
or
out
add
clc
cmove
ljmp
out
outsb
sbb
jns
dec
xchg
nop
popf
sub
add
xchg
iret
out
pop
adc
aaa
inc
test
js
inc
sbb
sbb
int3
cmp
adc
xor
lods
pop
jle
push
pop
sub
scas
push
imul
push
and
popa
clc
shlb
in
repnz
sub
pop
in
sahf
pop
dec
std
lcall
decb
sbb
mov
pop
pop
push
xchg
mov
pushf
jg
call
aad
and
cmp
gs
inc
mov
in
sbb
jp
lock
ljmp
jno
sbb
out
pop
and
orl
daa
enter
dec
push
mov
mov
add
stc
and
lret
mov
lock
jg
mov
push
iretw
adc
pushl
sbb
inc
dec
cmp
scas
add
add
decl
movsb
xchg
inc
mov
xlat
cmp
jg
cmp
das
adc
in
test
nop
mov
incl
jmp
ljmp
cmp
out
cli
ljmp
aaa
imul
scas
leave
lods
xor
fcmovbe
lock
sbb
stc
hlt
xor
jg
inc
iret
addb
jnp
mov
add
inc
pusha
pusha
xchg
and
incl
lret
or
nop
sub
dec
jg
xchg
aam
add
mov
lock
es
fisubl
cld
xor
push
sub
je
dec
js
xor
sahf
js
std
jecxz
cmp
rorl
call
aad
fsubrl
imul
cld
lcall
das
daa
push
mov
jmp
add
test
ror
gs
pushl
or
xor
dec
mov
in
test
ret
cmp
repz
int
inc
mov
in
test
push
mov
imull
loopne
aaa
or
cs
inc
scas
outsl
pushl
sub
insl
lahf
cwtl
ja
mov
sub
jae
jbe
stos
add
fmul
fbld
pop
incl
lods
ja
pop
into
ds
jmp
jo
cli
mov
or
sbb
push
out
jns
sub
xchg
lods
and
jmp
test
mov
mov
in
cli
mov
add
cmp
jmp
test
add
mov
insl
cmp
add
inc
fstpt
jg
and
xlat
in
mov
or
adc
xchg
scas
leave
dec
or
inc
mov
ret
or
sub
and
or
push
popa
int
sarl
ljmp
cmp
sti
sub
sub
xchg
push
ret
inc
jl
cmp
sub
inc
pushl
aas
mov
push
fdivs
add
stos
sub
int
mov
in
sub
jg
icebp
mov
mov
inc
sahf
mov
jne
jg
outsl
jmp
fidivrs
aas
inc
xchg
ss
in
push
xor
stc
es
fmul
jge
fldcw
mov
es
outsl
add
enter
xor
aas
jl
fnsave
in
repz
or
push
jne
outsl
out
mov
ss
lcall
out
fmull
decl
adc
pop
std
faddl
test
sub
aas
mov
push
dec
jecxz
iretw
xchg
jmp
repz
pop
aas
cmp
out
repz
sbb
cld
jbe
xor
and
dec
inc
xor
lods
movsl
xlat
arpl
pop
je
pop
xor
sub
lea
cmp
ljmp
xor
in
adc
mov
iret
dec
sbbl
imul
ljmp
cmp
clc
cli
and
adc
repnz
mov
adc
pusha
enter
shll
call
or
jno
test
daa
out
std
add
xchg
sbb
xchg
push
iret
inc
cmp
stc
pop
loope
lods
xor
into
pop
adc
decl
icebp
call
push
xorb
test
xor
inc
sbb
xchg
lock
lcall
push
bound
sar
fadds
add
subl
ljmp
int3
xchg
pop
jp
stos
add
cld
mov
lret
sbbl
popa
cld
ret
and
mov
mov
inc
sbb
ljmp
mov
push
xor
ljmp
pop
je
lret
cmp
out
lods
imul
repz
lcall
pushf
ss
and
jle
loopne
pop
out
push
sbb
cli
das
push
pop
cmp
jmp
mov
leave
mov
je
insl
inc
lcall
clc
je
inc
xlat
cli
iret
pop
mov
mov
ss
mov
add
jl
icebp
fwait
inc
mov
pushf
loopne
test
pushl
cmp
shl
cld
scas
mov
cli
fwait
mov
mov
adc
add
jmp
fsubrs
xor
adc
jns
aad
loop
mov
test
shll
xor
call
push
mov
xchg
cmp
imul
shlb
cmpsl
push
mov
sbb
mov
mov
lods
jbe
or
xor
adc
mov
or
lcall
pop
fadds
gs
out
jno
in
pop
mov
rcr
mov
stos
or
stos
inc
pusha
jl
dec
into
jbe
cld
xchg
loope
call
jp
sbb
pop
sbb
xlat
les
xor
jg
or
ret
mov
sarb
adc
sub
jno
ljmp
sbb
out
sub
xchg
push
push
cli
in
mov
stc
popf
movsl
ja
cmpsb
xor
scas
mov
lcall
sub
insb
mov
out
jmp
mov
call
push
fidivrs
push
mov
movsb
push
out
ja
enter
mov
decl
xor
inc
int
rorb
cli
cmc
adc
xor
popf
mov
lcall
jns
xchg
or
les
xchg
sbb
sahf
fwait
push
jle
mov
sub
pushl
xor
add
aad
cs
adc
mov
fwait
adcb
call
jae
popf
inc
adc
xchg
or
call
and
or
mov
jne
mov
push
clc
ret
in
sarl
int
decl
fsubrl
inc
add
sbb
mov
cmp
int
es
jb
decl
sahf
mov
mov
insl
dec
mov
jbe
sahf
push
lds
ljmp
push
mov
out
or
push
xchg
jae
movsb
push
call
cmp
movsb
int
pop
lock
mov
js
inc
dec
mov
pop
decl
ljmp
xor
sbb
push
js
aad
rcll
bound
ja
sar
lahf
sbb
in
cmp
or
mov
cli
mov
jmp
sub
lahf
out
ret
lret
push
pop
mov
sbb
incl
mov
inc
jge
jge
aad
jbe
jnp
pop
loopne
sbb
in
pop
repnz
mov
call
sbb
mov
mov
sar
or
lea
movsb
pop
cmp
xorb
loope
jg
ss
dec
decb
roll
add
inc
adc
lcall
inc
jmp
jmp
add
xchg
xchg
mov
in
hlt
inc
inc
mull
test
inc
andl
ret
and
in
call
xor
outsb
fmull
dec
lods
mov
sub
arpl
aaa
dec
loopne
out
sti
bnd
mov
inc
add
std
add
pop
rclb
pushf
xchg
dec
dec
and
pop
scas
das
test
cwtl
dec
lcall
aam
add
pop
lret
mov
push
mov
push
insb
cmc
xor
mov
sub
out
adc
outsb
movsb
in
jnp
sub
fs
jecxz
outsb
push
cmc
je
mov
mov
std
dec
jo
add
rclb
dec
push
call
std
cmp
adc
jo
aas
mov
jmp
mov
nop
inc
dec
sbb
dec
sub
dec
iret
push
adc
pop
pop
xchg
out
fwait
ss
ljmp
mov
adc
pusha
popa
lret
jge
cmp
sub
jg
xchg
fldl2e
imul
fildl
mov
push
call
mov
and
rolb
aad
push
add
jp
fsts
xor
dec
mov
fwait
cmp
lcall
pop
push
pusha
push
mov
or
pop
lea
mov
jnp
scas
sbb
xchg
push
ljmp
js
or
lock
sahf
pushf
push
add
rol
loope
test
incl
fisubl
push
sahf
sbb
mov
sarb
popf
gs
daa
cmp
jns
icebp
mov
out
push
mov
dec
cmp
in
jg
cwtl
xlat
mov
or
js
adc
movsl
fists
jne
enter
mov
push
adc
incl
fs
dec
imul
push
stc
xor
inc
loopne
mov
xchg
inc
sub
clc
and
jp
pop
pop
ret
ficomps
and
sub
sbb
push
aam
pop
sbbb
or
push
icebp
cmc
xchg
test
inc
bound
scas
aad
data16
ja
out
jbe
in
sbbb
decl
pop
fstpl
mov
icebp
dec
enter
jg
jmp
mov
pusha
push
xor
insb
add
xor
ljmp
repnz
push
call
adc
push
sub
cvttps2pi
inc
jo
xchg
xchg
in
mov
imul
add
mov
inc
mov
movsl
outsb
pusha
ljmp
iret
add
scas
lock
adc
call
mov
and
in
add
insl
clc
mov
add
ljmp
fldcw
sub
fisubrl
cmp
cli
out
lock
sub
dec
sub
mov
fwait
not
cmp
xchg
mov
cmc
fildll
sub
popf
xor
addr16
jne
add
cmp
sub
jb
jns
aas
sbb
mov
jbe
jg
sbbl
sbb
and
cwtl
fistl
fnstcw
enter
jmp
pop
sbb
aaa
xchg
insl
scas
clc
cs
mov
pop
iret
mov
lcall
jb
xlat
imul
jg
jmp
inc
repnz
inc
push
add
jp
push
testl
stos
ja
je
dec
clc
mov
mov
int3
adc
or
push
inc
call
xchg
testb
jae
mov
call
lods
fdivs
dec
stos
mov
fdivrs
xor
mov
add
imul
lock
inc
dec
bound
pop
and
jnp
inc
scas
push
pop
icebp
les
mov
imul
dec
or
cld
daa
add
sub
movsl
movsl
imul
push
cli
call
fistpll
cmp
hlt
les
lds
mov
stc
into
sar
mov
cmp
out
push
jl
cld
push
popa
cltd
insl
lods
mov
jb
and
ds
jne
shl
mov
loopne
mov
addl
jg
incl
std
dec
lods
jae
mov
push
subb
into
rcl
ljmp
and
jmp
mov
sbb
mov
stos
jns
cmp
pop
ret
mov
je
es
pushf
xchg
jo
push
rclb
ja
decl
loop
out
pushf
adc
cmp
iret
or
ss
inc
lods
inc
sub
lcall
sub
xchg
icebp
hlt
loop
inc
repnz
popf
jmp
das
addl
pop
xor
jg
test
in
push
ret
jo
lahf
shl
sbb
pusha
es
pushl
in
shll
push
mov
adc
adc
jbe
add
jge
push
lcall
js
stos
and
jo
ret
push
aam
aas
push
mov
stos
mov
rep
push
cld
js
imul
pop
sub
imul
mov
inc
jmp
filds
adc
cmp
sti
scas
push
cli
sbb
out
jle
pop
pushl
cmp
jb
mov
sbb
sbb
loop
cmp
arpl
insl
add
inc
inc
cli
cmp
adc
rorl
cmp
outsb
ljmp
jmp
sti
repnz
ficomps
hlt
dec
and
or
mov
sub
outsb
mov
jg
dec
pop
test
cmpsb
inc
cmpsb
and
movsb
pop
push
dec
and
pop
jge
mov
loop
popa
std
cmp
sub
sub
pop
cli
sbb
dec
sbb
stc
loopne
jg
jbe
mov
ss
xchg
lahf
push
cld
adc
repz
jg
incl
rorl
sbb
push
pop
mov
outsb
pop
mov
inc
adc
lea
test
lcall
mov
nop
inc
repnz
movsl
test
lods
shll
dec
popf
sub
call
push
enter
sub
sarb
and
icebp
dec
addl
sbb
and
outsl
cmpsb
xchg
cli
loope
push
jge
cli
ja
lock
inc
mov
inc
call
dec
mov
mov
lods
lods
dec
ja
xchg
call
and
lret
inc
fcomip
cltd
xor
lods
and
dec
and
push
or
sarl
pop
cld
sti
out
pop
mov
popf
jl
mov
test
stc
gs
sbb
rcrl
sti
xchg
xlat
loopne
inc
jg
rcll
scas
mov
or
mov
lds
push
ret
inc
cmc
sbb
sbb
sahf
repnz
xchg
test
adc
dec
xchg
or
jne
xor
jg
stos
lock
js
std
jmp
mov
loope
cli
dec
jl
adc
outsl
inc
add
pop
cmc
mov
push
aas
mov
imul
or
sub
lcall
arpl
xor
out
iret
in
dec
loop
xor
sub
outsl
dec
lea
mov
testb
arpl
mov
xor
push
push
test
mov
add
aam
fwait
inc
in
dec
sar
cmp
in
int
mov
lret
cli
inc
lock
xchg
adc
mov
jg
jg
test
push
pop
cld
mov
jno
je
data16
jge
test
jl
loopne
loop
mov
xchg
cwtl
mov
fsubrl
xchg
dec
out
mov
outsl
cli
mov
cltd
jbe
pop
shlb
mov
mov
xchg
popf
hlt
out
xor
out
scas
adc
stos
rcrl
adc
xchg
arpl
pushl
repnz
xchg
icebp
fisubl
ljmp
add
mov
filds
decl
mov
test
cmp
addr16
cmpsb
out
inc
lea
decl
cwtl
jbe
arpl
sub
iret
pop
inc
xchg
sbb
lcall
hlt
fistpll
outsb
or
lahf
or
pop
push
rcl
loopne
das
xor
jecxz
lods
pop
sub
clc
inc
into
cs
pop
jbe
decb
decl
cld
mov
ljmp
imul
int3
and
jnp
and
jbe
pop
inc
add
js
outsb
or
xchg
scas
in
pop
gs
xor
add
and
std
into
add
xor
dec
test
mov
lret
int3
subb
xor
lcall
or
call
arpl
xor
fnsave
xorl
mov
jo
add
fdivrl
push
enter
mov
inc
es
call
inc
dec
jns
stos
cmp
imul
mov
test
mov
mov
sub
pop
cwtl
sbb
sub
and
push
ss
test
nop
jb
scas
clc
jg
stos
andb
int3
imul
dec
pop
push
decl
add
imul
cli
adc
push
inc
mov
jg
mov
cmc
adc
xchg
call
gs
xor
enter
inc
and
sub
mov
ret
lcall
ret
sbb
mov
pop
xlat
outsb
pop
call
testl
hlt
int
sbb
negl
idiv
mov
outsl
add
loop
call
cltd
out
ss
cs
out
xor
mov
mov
add
test
inc
clc
ljmp
sbbl
dec
loope
pop
lcall
aad
movl
cmp
adc
jns
mov
call
pop
jo
lock
add
js
adcl
leave
push
add
scas
dec
fisubs
jae
xchg
cmp
ret
sub
xchg
lret
lods
cli
adc
add
lcall
xor
neg
mov
es
jp
repz
sbb
out
mov
or
dec
push
insl
gs
insb
cmc
inc
jp
add
fmuls
mov
add
aaa
ja
mov
fistps
les
adc
decl
and
lods
inc
outsb
jae
or
dec
movl
decl
inc
bound
imul
sbb
mov
int
out
call
add
aam
mov
mov
inc
int
xor
cmpsb
gs
add
sbb
scas
sub
dec
and
mov
xchg
mov
pop
push
int3
les
cmp
ret
loopne
or
clc
ficoml
fldl
sub
cmp
mov
mov
cwtl
push
pop
jbe
pop
mov
and
sahf
stos
and
xor
jmp
xor
dec
sti
cmp
out
mov
daa
stos
leave
subl
mov
xchg
inc
int
cmpl
out
jge
loopne
adc
jg
sarl
inc
jbe
cld
jae
nop
mov
sub
pminub
push
js
adc
ljmp
add
or
sar
and
roll
xlat
incl
dec
lods
sbb
sub
mov
iret
adc
lods
andb
pushl
movsl
cwtl
fnstsw
hlt
dec
push
pushf
push
xchg
jne
push
int3
insl
pusha
shrb
mov
inc
cmp
cmp
mov
loop
in
push
call
cmp
lods
out
in
fcmovnb
mov
enter
push
out
or
pop
daa
adc
mov
dec
shl
notl
or
mov
pushl
jmp
into
and
mov
movlps
and
sbb
and
lret
call
fimuls
jno
cld
mov
xchg
mov
pop
push
xorl
scas
add
shlb
repnz
xchg
mov
decl
adc
mov
and
vpshld
dec
nop
cld
aas
add
test
push
mov
int3
push
add
mov
mov
ret
sub
cmp
faddp
inc
rolb
mov
dec
daa
shl
sti
fsubr
bnd
inc
scas
sbb
inc
pop
mov
push
push
adc
cld
imul
out
faddl
mov
xorb
ret
mov
sbb
into
sub
shlb
xlat
jge
jb
add
xorl
xchg
xchg
xchg
inc
ficoms
popl
cmp
jmp
dec
ja
mov
mov
lea
mov
call
in
sub
clc
ja
jmp
jnp
in
or
out
mov
popf
sub
inc
mov
push
ljmp
rclb
js
xor
xchg
mov
out
outsl
popa
and
loope
cmp
cli
cld
push
shll
mov
cli
or
lcall
push
call
push
scas
pop
sub
xlat
or
and
mov
imul
pushf
decl
iret
sbb
pushf
push
mov
ljmp
and
or
lcall
mov
xchg
in
push
lahf
dec
adc
inc
and
jg
rorb
adc
cli
mov
imull
addr16
stc
mov
lcall
jae
xchg
test
mov
mov
int3
inc
mov
push
icebp
lahf
pop
jb
push
mov
decl
std
ret
add
push
bound
jp
ficompl
les
adc
movsb
decl
mov
push
mov
mov
out
into
in
jb
and
pop
ds
or
jmp
into
sbb
decl
movsb
xlat
inc
sbb
mov
dec
mov
int3
pushf
das
repz
decl
call
cmc
cmp
in
les
inc
js
ljmp
xor
es
ficoms
arpl
xor
inc
pop
jbe
out
dec
pop
sbb
push
fldt
pop
incb
xlat
sbb
lcall
mov
les
mov
cmp
lock
ret
push
push
in
mov
mov
mov
inc
sbb
in
push
faddl
inc
adc
jg
and
inc
xor
repnz
pushl
loop
aam
xor
sub
mov
ja
ljmp
adc
cmp
xor
scas
pop
addr16
in
hlt
dec
scas
dec
and
call
add
aaa
es
mov
and
or
js
ds
aad
add
outsl
cmp
gs
push
mov
push
xor
mov
out
jl
jle
inc
iret
pop
xorl
cmp
es
call
call
pushf
xbegin
inc
stos
dec
ja
xor
adc
dec
push
xor
fistpl
sti
movsl
call
insl
push
and
add
mulb
sbb
das
mov
jno
push
sbb
mov
ljmp
mov
out
ret
mov
pop
pusha
cmp
out
or
test
jo
xchg
jns
or
call
xor
lea
lahf
js
dec
cld
call
jne
cmc
add
jo
adc
mov
shlb
cmp
push
cmp
mov
cmc
inc
mov
call
jae
jo
cs
rcll
ret
push
out
mov
add
outsb
call
rorb
mov
mov
jmp
aad
clc
pusha
adc
movsl
pop
push
push
cltd
and
lods
mov
ljmp
sub
and
and
cwtl
es
xor
call
lret
jecxz
loop
imul
cmp
push
jb
cmpb
lret
or
mov
mov
cmp
push
jp
cmpsb
arpl
repnz
js
mov
or
test
cmpl
xchg
aad
dec
xchg
outsl
out
xor
imul
enter
hlt
ljmp
aam
into
mov
xchg
incl
add
inc
jnp,pn
add
push
jns
shlb
adc
jmp
cmp
push
addr16
xchg
mov
icebp
ja
mov
mov
out
xchg
aam
in
stc
in
incl
roll
andb
insb
mov
je
adc
ljmp
or
cmpsb
or
or
add
jge
movsl
sarb
and
hlt
mov
or
or
ja
out
incl
cli
pop
jmp
jns
repnz
dec
jecxz
sar
outsb
sar
pop
push
ja
cld
fiadds
lock
std
mov
dec
movsb
mov
jg
jg
arpl
add
adc
mov
jmp
js
jle
outsl
daa
je
pop
xchg
dec
adc
ja
fildl
clc
mov
call
or
sbb
out
iret
popf
fucom
cmp
cmp
or
sbb
inc
int3
mov
cmc
fcomip
or
xchg
insb
js
mov
out
push
sbb
pop
enter
xchg
iret
test
sahf
jl
loop
outsl
cld
stc
push
add
leave
data16
mov
push
cmp
xchg
dec
sub
pop
or
ss
out
xor
mov
or
and
lret
cmp
pushl
push
sub
fdivr
out
mov
sbbl
test
xchg
lcall
aad
out
xor
xchg
adcl
iret
add
decl
inc
jb
and
mov
cmp
lcall
lcall
mov
cmp
inc
stc
mov
pop
add
subl
cmpsb
and
xchg
and
std
das
movsb
sbb
push
mov
lcall
dec
pop
sahf
push
add
fcomip
out
pop
or
xor
loopne
jae
call
lock
shl
ja
js
loopne
and
push
pushl
and
cli
add
fisubl
fs
adc
mov
inc
scas
pushl
pushf
shrl
int
repz
lret
or
xchg
nop
addl
jb
pushl
or
mov
testb
push
mov
popa
mov
loop
ljmp
xchg
gs
orb
push
lret
ror
inc
jmp
pushl
and
cmc
fstpt
and
sbb
test
sub
call
or
xor
aam
xorl
sub
fwait
aas
out
out
xchg
outsb
cli
jmp
lea
subb
pop
out
stos
inc
icebp
mov
outsl
and
adc
mov
push
rolb
fs
xor
sbb
ss
lcall
lds
mov
xchg
pop
sub
xlat
xchg
xor
or
js
mov
and
es
adc
pop
gs
outsb
adc
jp
lcall
fnsave
inc
nop
push
cmp
addr16
call
sar
jg
xchg
xchg
dec
je
pop
je
je
dec
adc
mov
incl
data16
jp
ret
cld
jmp
mov
popf
ja
push
and
enter
jg
add
scas
rol
pop
ljmp
ljmp
sbb
xchg
jne
imulb
fcomip
dec
mov
les
test
arpl
mov
in
sbb
sub
adc
leave
or
in
in
lock
ud0
pushl
rcr
jmp
or
cmp
out
nop
lret
shrl
sbb
rclb
jle
xor
cli
mov
xchg
popa
int3
xchg
push
pop
outsl
xchg
mov
clc
imul
pop
sahf
adc
aad
lock
stos
sub
inc
or
pop
mov
sbb
mov
cli
pop
out
jge
dec
test
xor
push
or
cli
pop
mov
int
pop
or
outsl
std
rcll
dec
and
mov
ljmp
sub
in
pop
pop
adc
xchg
imul
xchg
pop
dec
std
sbb
sub
pushf
mov
xchg
iret
push
inc
or
popl
enter
jg
iret
fisubl
jb
repnz
jmp
es
pusha
rcr
pop
sub
in
mov
insl
jg
pop
out
stc
pop
addr16
sbb
out
repz
sub
push
mov
cmpsb
aad
mov
hlt
jmp
pop
iret
call
and
ja
pop
push
cli
call
and
lds
ror
nop
das
rolb
shl
int3
ret
or
sub
fcoms
pop
shll
mov
jo
pop
pusha
loope
xchg
push
and
xor
aam
sbbb
ljmp
push
jno
int
cmp
popf
xchg
push
cmp
enter
popf
dec
ret
addl
jl
js
je
arpl
and
or
mov
add
lods
mov
ja
nop
stc
lcall
xchg
mov
pop
bound
jp
or
mov
imul
inc
sub
mov
decl
sub
pop
cmp
xchg
push
mov
xorb
cld
lcall
adc
xchg
stc
gs
mov
dec
jns
int
push
test
pushl
lods
ss
lcall
push
xor
fdivr
sbb
pop
nop
addr16
pop
loopne
pop
push
adc
es
add
pop
leave
pop
popf
cmp
adcb
popf
adc
dec
dec
push
iret
or
pushl
daa
les
inc
loop
add
lret
scas
cmp
pop
xchg
sahf
and
or
scas
push
int
pop
test
and
jae
leave
in
scas
ss
dec
mov
aas
add
cmp
fildll
sub
ret
out
jbe
fwait
js
fnstenv
loopne
imul
pushl
je
jno
pop
mov
test
mov
pop
mov
cli
incl
pop
sbb
inc
pop
popf
or
xor
cmpsb
je
outsb
mov
pop
pop
je
andb
loop
xchg
scas
mov
decl
add
les
xchg
aas
jmp
lcall
cmp
sub
push
add
and
mov
cmc
pop
add
jg
xor
js
enter
xchg
adc
lret
sbb
fstp
insl
or
incl
xchg
mov
cmp
or
repnz
test
std
std
fnstcw
mov
fcomip
jmp
fsubs
cmc
mov
icebp
sub
dec
mov
aad
call
jmp
mov
stc
sahf
adc
out
mov
in
mov
stos
sub
push
and
push
loop
outsl
rcrl
fld
cmpsb
test
push
adc
push
popf
mov
xor
inc
aaa
xchg
inc
and
and
fistl
jl
inc
sbbl
sbb
jbe
rcrb
pusha
lock
sahf
pop
es
jmp
push
mov
mov
outsb
inc
inc
fs
rol
in
out
or
scas
imul
dec
jb
and
aam
out
fdivl
or
push
sbb
inc
and
outsl
inc
ds
add
push
push
repnz
add
and
sub
or
roll
jl
inc
jns
loopne
xchg
or
ret
insl
in
xchg
lahf
in
lahf
cmp
aaa
mov
fdivrs
add
repz
scas
clc
bound
xor
cmpsb
xchg
iret
into
popa
mov
cmp
sar
fisttpll
lret
xor
adc
pop
fs
in
mov
test
lods
add
movsb
push
mov
loop
cltd
nop
sbb
call
js
push
add
fbld
fcmovnb
mov
aas
cmp
pop
pop
xchg
pusha
mov
push
add
imull
xchg
ss
pop
repz
daa
sub
incl
lods
xchg
xchg
loope
mov
inc
lods
fbld
sub
sbb
pushl
and
popf
ret
loop
movsl
in
pop
dec
out
xchg
int
cli
das
inc
fcoms
cld
cs
xchg
icebp
jae
dec
jmp
lret
cmp
jg
xor
cmp
dec
jns
stos
popf
add
call
push
clc
int3
inc
sbb
inc
aas
idivb
dec
mov
test
push
adc
mov
decl
mov
addb
fadds
jns
sbb
and
fwait
dec
fmuls
mov
xor
jne
aam
pushl
fisubrs
ret
add
dec
ds
stc
push
iret
pushf
mov
inc
sub
add
cs
test
jmp
mov
mov
rcl
push
shlb
or
ficoml
fildll
sbb
push
mov
pop
and
fisubl
shrl
out
popl
jecxz
and
filds
dec
pop
pushl
push
add
dec
dec
leave
push
adc
stos
gs
movsl
xor
imul
mov
fbld
pop
or
pop
xchg
inc
dec
jmp
rorb
movsb
loopne
mov
pop
push
daa
adc
dec
jp
mov
aaa
xchg
sar
pushl
or
inc
xchg
shlb
jne
repz
jp
call
out
pop
repz
mov
cli
pop
das
ret
cmp
dec
js
adc
sbb
and
sub
xchg
jg
sti
inc
adc
jmp
out
outsl
mov
shll
xchg
adc
lcall
dec
and
add
or
add
out
mov
lahf
cmpsb
push
movsl
orb
mov
idivl
pop
test
sbb
jg
test
mov
dec
cli
lret
and
in
xor
xlat
data16
jmp
dec
icebp
loope
aam
dec
sbbl
jae
stos
sahf
xchg
cmp
ja
cmc
in
xchg
xlat
and
ds
in
hlt
adc
or
fisttpll
js
pop
push
push
jb
jl
mov
arpl
inc
add
incl
insb
inc
inc
movsl
test
jne
mov
and
or
pop
aam
mov
inc
cmpsb
jmp
sti
pop
or
shll
mov
xchg
or
cltd
push
xor
mov
icebp
sbb
test
sar
cld
vmaxpd
cmp
nop
mov
arpl
stc
pop
xchg
stc
popa
sbb
push
lret
mov
inc
add
out
out
insl
addb
xchg
std
ds
fbld
mov
fsubp
xor
cmpsl
jb
add
xchg
mov
ljmp
cmp
fstpt
notl
sub
outsl
decl
mov
sbb
mov
scas
jo
or
loop
jae,pn
fsubrl
aaa
or
xchg
bound
cmp
int
dec
scas
cmp
or
or
sub
mov
lds
std
cmp
push
lods
and
repz
cmp
enter
dec
pop
sub
or
sbb
add
incl
ret
imulb
xor
pop
arpl
mov
and
cs
push
aas
in
faddp
ds
call
cwtl
and
cli
roll
jg
push
stc
adc
aad
js
loop
xor
adc
xchg
adc
jmp
leave
xchg
mov
mov
add
rorb
sbb
mov
and
fisttpl
pop
popa
lock
aas
mov
popa
notb
or
adc
dec
add
xchg
sbb
push
repnz
das
fnstsw
nop
inc
ja
test
in
jle
in
nop
jns
call
sbb
mov
cmp
sti
push
pushf
sub
lcall
xor
push
push
in
dec
pop
fcmovu
subb
fndisi(8087
lea
inc
or
xchg
movsl
xchg
gs
fists
imul
lock
xor
decl
add
nop
xor
in
and
test
push
push
call
decb
jnp
shr
je
dec
jl
mov
loopne
repnz
call
pop
mov
push
sub
xchg
jne
call
add
incl
pop
ljmp
outsb
and
add
icebp
shrl
mov
sbb
std
lret
cld
pop
fs
cmp
push
mov
push
inc
inc
jle
inc
fdivrs
push
out
mov
dec
lret
outsl
clc
call
inc
pop
je
shlb
sbb
mov
sbb
cmp
pushl
xchg
bsr
cmp
push
data16
leave
add
mov
mov
push
lods
fildll
idivb
repnz
inc
icebp
jg
inc
pop
int
jg
sub
xchg
mov
js
push
dec
sti
arpl
lcall
pop
cmp
pop
xor
mov
stos
out
andl
jg
incl
sbb
jp
lret
mov
sub
or
out
and
inc
divl
je
adc
int3
lret
and
loope
test
shlb
jo
lods
mov
push
and
mov
sbbl
data16
mov
decl
sbb
icebp
jb
or
leave
sbb
ljmp
pop
rcll
jmp
rcrb
pop
in
dec
in
push
cmpsb
js
mov
sub
roll
pop
and
inc
pop
mov
mov
hlt
sahf
and
push
arpl
jg
cmp
mov
dec
xor
fmul
ss
sbb
jnp
andl
enter
out
mov
inc
push
loope
std
or
ret
pusha
out
icebp
xchg
mov
xor
or
pushl
shl
and
or
mov
mov
fcomi
inc
jg
dec
xor
inc
and
icebp
mov
jmp
rol
adc
loope
adc
jo
in
rcrl
insb
lahf
add
nop
incl
jae
mov
adc
cld
pop
cld
xlat
push
mov
mov
inc
pop
aas
lahf
aas
mov
fcomps
mov
jl
xor
aaa
fildl
pop
and
test
push
and
jl
sti
add
out
jge
jne
dec
cmc
decl
loopne
dec
inc
test
mov
lock
stos
mov
inc
ret
in
lods
xchg
fs
mov
and
incl
test
pop
mov
cmc
dec
xchg
test
push
sbb
vpcmpgtw
sti
jne,pn
icebp
into
insl
lods
jns
push
jns
mov
pop
inc
xor
sub
pusha
sbb
ljmp
jl
cmp
repz
fsubrs
sbb
xor
lret
lcall
sti
ret
mov
imul
jno
into
dec
mov
cld
ljmp
sbbb
scas
inc
iret
es
push
popa
push
fildll
inc
ljmp
outsb
in
sbb
in
out
inc
aas
sub
sub
mov
mov
loope
adc
sar
push
lods
cmc
adc
pop
push
sbb
mov
aas
xchg
jle
loope
dec
sti
movnti
mov
adc
js
cmp
test
and
dec
xlat
lret
and
in
xchg
push
adc
outsb
sbb
test
sub
jle
outsl
dec
xchg
mov
call
xor
ss
nop
cmp
inc
iret
mov
xchg
jmp
mov
or
jmp
adc
cmc
xor
inc
sub
outsl
call
push
cmp
popa
cld
cld
into
sbb
into
popa
mov
imul
scas
loop
dec
cs
rol
clc
cli
jg
mov
jecxz
dec
mov
push
inc
dec
cmpsl
rcl
pop
call
sbb
lods
push
add
push
stc
popl
and
mov
inc
addr16
adc
lcall
cwtl
inc
pop
mov
jg
pushl
cmp
ds
popf
loope
popf
xor
xor
loopne
and
cmpl
xlat
jns
outsb
push
add
mov
mov
pop
test
sub
ljmp
mov
pop
dec
dec
fmuls
test
les
mov
add
imul
mov
adc
mov
add
scas
cli
inc
mov
cmp
icebp
call
nop
xor
arpl
mov
in
iret
jl
mov
push
scas
adc
jae
or
in
xchg
pop
cltd
pushl
aad
ss
incl
sub
daa
movsl
test
cmp
or
pop
mov
loop
fadds
ljmp
inc
mov
sub
imul
andps
nop
movsb
jle
das
jg
push
sub
jns
mov
add
rol
int3
fdivs
ret
push
mov
or
fcomip
or
sub
repnz
sbb
cmp
cmpsb
lea
pop
popa
jno
lcall
movsb
cld
cmp
decb
cwtl
cld
das
mov
cli
cs
stos
jg
cmp
es
xchg
sbb
insb
push
frstor
test
lock
ret
jp
xchg
adc
fbld
cld
xor
inc
dec
push
mov
mov
or
inc
adc
jle
jmp
scas
jb
pop
dec
repz
push
push
xor
int
sbb
incl
and
cmp
or
outsb
pop
xchg
out
add
xchg
sbb
fidivs
mov
fadds
inc
add
aad
cld
pop
ljmp
add
dec
sahf
push
and
mov
std
call
cmp
mov
xchg
outsb
inc
call
jg
sub
jnp
in
xor
mov
fisttps
rorb
pop
loopne
pop
lcall
adc
loope
cmpsl
fistpll
sbb
loopne
mov
cld
mov
sub
je
inc
ret
ja
sbb
cld
call
pushf
add
fisttpll
nop
mov
call
dec
loopne
pop
popa
dec
add
xlat
ds
pop
es
inc
leave
pop
loop
stos
cld
ljmp
push
dec
mov
or
xor
mov
bound
push
lret
jg
add
xchg
bound
fnstcw
adc
incl
dec
clc
xchg
mov
jg
cmpb
nop
lret
push
jmp
inc
sets
pop
mov
cmc
jp
push
or
jp
pop
jo
cmp
repz
bound
jecxz
mov
sub
insb
aad
mov
cmp
je
int3
jae
mov
mov
cmpsl
jg
lret
xchg
cmp
adc
and
xchg
mov
ljmp
test
xor
sbb
pushf
push
cmp
int3
in
mov
jmp
fdivr
pop
shrl
jns
jmp
mov
addl
std
scas
imul
sub
scas
rclb
ds
addl
mov
out
mov
ret
xchg
push
mov
mov
adc
fistpll
out
imul
jg
in
mov
mov
test
and
sbbl
mov
mov
std
std
mov
mov
sub
insl
and
cmp
stos
pusha
pushl
fwait
jb
aas
cltd
add
lds
pushl
xchg
dec
mov
xchg
pop
outsb
fstpt
mov
data16
jns
pusha
or
imul
mov
xchg
leave
in
xchg
enter
push
jnp
stos
mov
inc
stos
mov
mov
mov
rorl
ljmp
fdivr
mov
cmp
adc
jo
lods
fcoml
add
das
sbb
xchg
mov
adc
jmp
fistps
int
outsl
mov
mov
incl
cs
mov
leave
xor
or
mov
insl
inc
xor
pushf
aam
dec
lds
add
sbb
sti
fadds
lcall
out
clc
mov
ljmp
inc
lcall
imul
fildll
xchg
mov
pop
ret
stos
sbb
or
out
enter
xor
sbb
cmpsb
repnz
fs
std
incl
push
imul
or
xchg
std
cli
jae
sbb
mov
jns
lcall
scas
lods
int3
rcrb
cmpsb
dec
cmpsl
imul
repnz
fcomip
roll
cmp
lret
inc
fistpll
fistpl
push
ds
mov
lods
imul
xor
cmp
dec
sete
push
sub
xor
mov
hlt
jl
je
sbb
aam
pop
enter
mov
sub
data16
ret
cmp
xchg
mov
lcall
fsubs
cld
pop
outsb
mov
es
and
icebp
sub
cmpsb
xchg
call
loop
push
mov
aad
loopne
outsb
cmp
out
cmp
inc
insb
sub
icebp
out
clc
jae
lock
cld
mov
jg
cli
cmp
mov
sub
nop
jg
imul
push
rcr
lods
cltd
dec
je
sbb
out
stos
por
enter
cmc
aam
jno
imulb
or
adc
pushf
jecxz
jmp
into
sbb
jno
adc
pop
aam
out
pop
xor
jg
into
xchg
xlat
cmp
mov
pop
cli
add
call
test
sbbl
push
push
adc
dec
idiv
and
incl
jge
sub
mov
xorl
es
nop
mov
mov
mov
cli
mov
hlt
pop
mov
xchg
std
shll
adc
in
jecxz
insb
adc
out
cmp
xchg
out
cmp
pop
cmp
inc
cmpsb
lcall
inc
sbb
pusha
adc
sbb
cmpsb
inc
in
aam
push
xchg
lcall
adc
mov
out
cltd
out
cmpsb
xchg
and
jmp
clc
out
clc
cmpsl
cmp
cwtl
cld
jb
pop
mov
jae
add
incl
ja
in
or
sub
xchg
add
ljmp
insb
cmp
out
jg
arpl
in
adc
das
aas
sti
cs
mov
aad
push
sbb
call
stos
xchg
or
mov
adc
cmp
sbb
and
cmp
pushl
xchg
push
add
cmp
addr16
pop
pop
bound
mov
pushl
clc
pop
ds
sub
xor
jbe
add
and
xchg
sbb
mov
add
jg
incl
rol
dec
aaa
int3
mov
jmp
mov
outsl
jmp
and
mov
inc
test
adc
icebp
dec
std
mov
je
or
jl
ja
mov
jns
pushf
and
pop
mov
ret
mov
clc
mov
scas
loop
inc
jbe
inc
iret
cmc
loop
xchg
lods
pushf
outsl
sub
push
out
cli
or
mov
or
xor
in
movl
sbb
sarl
pop
jnp
inc
xchg
fs
or
popf
cmc
data16
pop
movsl
push
or
dec
ljmp
popa
call
or
lods
aam
into
movb
and
lcall
fnstenv
add
pop
sar
int3
push
rcrb
loop
cmpsb
push
mov
es
test
dec
sub
jle
jle
fmul
sub
sub
and
and
fisttpll
and
imul
daa
ret
cld
pushl
lret
test
std
add
pop
xchg
in
and
rcr
jmp
repz
mov
mov
ja
sbb
inc
pushf
ljmp
imul
mov
rclb
jg
popf
mov
loop
mov
add
adc
gs
hlt
push
xchg
mov
adc
pop
mov
data16
hlt
xor
gs
ljmp
test
cltd
xor
out
inc
test
xor
stc
mov
ljmp
fiadds
iret
pushf
fisubs
push
xor
aas
loope
cli
and
mov
mov
ret
push
repz
cs
aad
inc
or
rcrb
dec
cmp
pop
iret
and
add
mov
xchg
fcmovnu
sarb
xor
shrl
int3
xor
test
lahf
addr16
and
mov
jbe
xor
mul
insl
ja
and
call
pop
pop
fisubrs
sbb
xlat
fnstcw
jg
jb
push
packssdw
pop
lcall
jp
shll
pop
push
out
sarb
insb
into
cmp
mov
jne
dec
dec
xor
outsb
sub
cmp
or
cmp
lods
fistpll
jns
test
mov
into
outsl
les
dec
ljmp
inc
pushl
jmp
pop
and
clc
notl
jg
and
test
adc
call
call
xchg
mov
cld
xchg
sub
das
movsb
or
xlat
mov
push
jg
add
cmp
das
cld
pop
or
cmp
push
dec
adc
mov
test
xchg
and
add
imul
push
fildll
lcall
jmp
imul
xor
cld
ret
ljmp
cmp
outsl
nop
cmpsb
int
sbb
cmp
fists
pop
mov
cmc
pop
push
pusha
mov
cltd
sbb
mov
loopne
mov
and
mov
cld
push
or
scas
and
cmpl
push
sub
jg
subb
mov
mov
xor
test
sub
popf
inc
or
or
call
lahf
xor
add
xchg
pop
addr16
mov
inc
lock
pop
jmp
mov
dec
jmp
jne
iret
dec
stos
push
and
lcall
rolb
sub
sbb
mov
les
and
mov
test
test
sbb
inc
rcr
inc
mov
loopne
mov
in
sti
addr16
sub
mov
loope
push
xchg
pop
or
mov
icebp
ljmp
sbb
decl
lods
inc
adc
push
jge
or
adc
mov
cltd
add
gs
decl
sahf
pop
jge
mov
das
push
jge
add
sahf
push
push
cmp
sbb
ljmp
mov
loope
mov
pop
mov
js
js
sub
out
pop
mov
pushl
mov
adc
mov
inc
sbb
stos
dec
and
fimull
loop
jns
movsb
dec
mov
repz
call
stos
xchg
rcll
addr16
push
pop
dec
lcall
jmp
sub
add
dec
in
outsl
pop
mov
jmp
cmp
push
out
sub
add
addr16
adc
out
aaa
mov
incl
and
jecxz
pop
call
daa
mov
xor
stos
stc
cli
xor
push
test
aam
ljmp
xor
mov
or
jnp
mov
movsb
inc
inc
fst
mov
dec
mov
mov
movsl
mov
loopne
int
xchg
aam
xchg
subb
fnstcw
cmp
sar
repz
shll
mov
xchg
mov
test
mov
lock
sbb
incl
jne
imul
mov
cmp
jno
in
jl
idivl
inc
fisttpl
ss
cwtl
mov
push
lcall
mov
cs
push
int3
inc
or
xchg
xor
arpl
mov
nop
inc
xor
test
incl
sub
cwtl
dec
push
jge
jno
add
xchg
sub
sbb
incl
outsb
ss
imul
cmp
pop
cli
sbb
fwait
insl
xor
mov
jmp
mov
xor
lds
jmp
adc
into
loopne
mov
xchg
cli
in
int3
xor
call
cld
ficoms
add
inc
sub
jecxz
rcll
stos
jmp
cmp
aaa
cld
call
lods
lods
shrl
adc
mov
dec
shrb
cmpsb
fimull
jns
mov
decb
pushf
iret
int3
test
dec
mov
inc
add
sub
sbb
int3
pop
jp
inc
sub
lcall
and
jno
mov
nop
adc
pop
xchg
cltd
gs
mov
jbe
fadd
adc
inc
fs
call
lahf
aas
push
out
push
sbb
outsb
aad
dec
sbb
xlat
rcrb
add
and
and
repz
adcb
sub
xor
lcall
rcl
lods
mov
incl
lods
cltd
in
adc
rcrl
push
dec
loopne
jne
jg
decl
mov
adc
cmpsb
or
add
or
imul
imulb
incl
aad
stc
sahf
daa
sti
jno
inc
sub
popa
mov
add
pop
cltd
add
ljmp
jbe
sarl
mov
mulb
add
insb
and
jns
mov
rcl
ljmp
push
pop
xchg
xor
cld
test
push
dec
clc
inc
imul
dec
jbe
icebp
outsb
sub
pop
sub
decl
test
fcoml
push
lahf
jns
movsb
cld
dec
sub
mov
ja
inc
daa
mov
cwtl
push
add
outsl
mov
gs
xor
dec
xor
test
arpl
jns
adcl
jmp
hlt
das
and
add
lahf
xchg
outsb
call
mov
int3
pop
shll
pop
cmp
push
sbb
push
add
call
push
fdiv
xor
mov
jnp
roll
fwait
inc
stos
pop
sbb
loope
push
test
jmp
xor
adc
loopne
cmpsl
sub
xor
adc
jmp
and
insl
or
icebp
mov
lret
add
imul
pop
push
mov
popa
pop
mov
decl
inc
sbb
enter
add
dec
xchg
or
mov
nop
cmp
xor
dec
or
mov
cmp
sub
call
pop
in
xor
xor
push
loopne
ret
mov
pop
pusha
sbb
movsl
push
ret
mov
int3
inc
add
mov
fimuls
mov
mov
es
gs
fists
fdivrp
out
push
add
xor
xchg
inc
lcall
pusha
cmp
xchg
repz
clc
decl
shrb
fmuls
out
cmpsl
mov
push
dec
outsl
cli
shll
adc
dec
fsubp
mov
scas
addr16
xor
inc
cmc
in
push
cmc
fcomip
decl
cmpl
cmc
push
int3
hlt
inc
mov
lcall
lcall
cmpsb
or
pusha
inc
dec
jecxz
sbb
mov
adc
sbb
push
fadd
xlat
pop
adc
lahf
das
fidivs
pop
fstpt
and
aas
iret
pop
das
and
insb
xchg
mov
or
adc
jmp
dec
pop
mov
cmp
or
fsubs
enter
dec
shlb
in
call
mov
cmpsl
sbb
pop
lahf
or
and
pushf
fwait
sysret
inc
addr16
aas
jb
sahf
pop
mov
jg
pop
enter
add
jl
subl
cmp
inc
cwtl
mov
jg
mov
dec
adc
mov
fcomip
out
movsb
addr16
or
outsl
or
xchg
std
in
jecxz
ds
clc
sub
mov
out
ret
ja
push
sub
in
inc
jg
xchg
mov
lea
lret
cmp
call
das
cmp
ficoml
or
xor
loop
pop
and
and
pop
mov
fnstenv
mov
sbb
gs
incl
jmp
roll
rol
inc
icebp
testl
aas
pop
sbb
nop
ss
pop
add
pop
jb
in
fildll
shll
test
in
push
rolb
xor
mov
cwtl
jmp
shll
vmovdqa
clc
lds
jmp
jne
pop
push
jmp
adc
mov
jecxz
adc
fcomps
aas
push
rcrb
cltd
xor
xorl
jl
out
jno
les
push
pop
loop
ljmp
lcall
sbb
mov
and
adc
ja
sbb
jle
lcall
inc
call
cld
test
stos
out
pop
daa
add
stc
sbb
cmp
xor
test
pusha
stos
cmp
ja
movb
in
add
rcrl
orl
incl
sbb
xchg
xchg
nop
nop
mov
test
xchg
faddl
ljmp
xchg
adc
sbb
loope
mov
mov
nop
vdpps
mov
xchg
aaa
lea
sub
dec
add
mov
inc
xor
int3
push
add
cmpsb
adc
cwtl
xor
pusha
aam
imul
cli
call
aad
pop
sti
xchg
mov
fcomip
sub
add
cmpsl
loopne
mov
decl
inc
mov
fistl
dec
insl
cmpps
sbb
sbb
mov
decl
xor
subb
ss
jle
int3
xchg
popa
xchg
xchg
push
gs
loopne
inc
out
mov
jb
sbb
sub
mov
pop
call
aaa
mov
imul
out
sbb
mov
out
sbb
hlt
fsubr
sub
in
sub
mov
cmp
popl
stos
faddp
rcr
out
push
push
sbb
fwait
push
testb
fildl
cmp
aad
das
pop
lahf
addr16
lods
cli
incl
adc
movsl
insb
jecxz
out
inc
es
mov
cld
bound
cld
jmp
push
fldcw
xlat
jg
fisttpll
inc
push
or
fnsave
inc
fcompl
orl
mov
cwtl
fdivs
sub
stos
insl
jmp
jmp
test
add
cmpl
std
mov
sbbb
pushl
rolb
ljmp
xchg
insb
xlat
mov
movsbl
loopne
and
rolb
push
pushf
push
cli
mov
pop
dec
loope
stos
mov
arpl
mov
mov
dec
mov
jp
daa
jmp
gs
clc
ljmp
mov
xchg
and
mov
push
jp
add
cmp
ljmp
sar
stc
push
data16
xchg
les
ret
cwtl
rcll
ss
xchg
sub
in
pop
fisubrl
lea
mov
outsb
stc
sbbb
nop
cld
decl
xor
iret
fcompl
scas
xor
incl
ret
jb
outsl
sub
stos
push
xor
mov
jg
inc
popa
xor
push
mov
shlb
incl
push
push
add
pushf
pop
inc
inc
adc
sub
lods
in
push
jno
jecxz
insl
cld
fisttps
fs
aas
shl
stos
and
cmp
adc
sbb
popa
lds
pop
bound
out
sub
xchg
cmc
lahf
fcomip
lcall
movsl
xchg
insb
popa
sbb
dec
add
mov
or
ljmp
decb
jp
aad
pop
inc
cwtl
push
rclb
dec
shlb
ret
nop
xchg
jmp
dec
inc
fbld
call
pushf
cmpsl
mov
push
ljmp
xor
xchg
mov
inc
xor
add
pop
jp
xor
dec
dec
cmc
lds
ret
jg
nop
mov
std
add
test
into
js
movsb
mov
stos
pop
stos
inc
push
mov
hlt
sbb
mov
mov
sub
loopne
mov
xor
cmp
adc
rcrb
fisttps
fmull
mov
cmp
inc
std
cmp
lcall
test
mov
and
adc
push
cmp
mov
push
call
movl
and
ret
ljmp
es
stos
mov
adc
mov
cmp
rorb
fldl
in
xor
cmpsl
repnz
push
or
decl
sub
hlt
lcall
xor
pop
xchg
pop
js
outsb
dec
or
dec
pop
mov
mov
sbb
out
inc
stos
sub
xchg
loopne
and
mov
mov
lea
sbb
iret
jns
pop
jno
ljmp
ljmp
test
std
clc
in
and
adc
xchg
ljmp
inc
and
lcall
xor
pop
and
cmp
movsb
and
mov
mov
mov
xchg
xchg
insl
adc
or
ja
and
aam
sub
jmp
jecxz
aaa
adc
push
and
fcomps
fs
iret
push
out
ret
xchg
cmp
lret
jg
shll
cmp
inc
xchg
xchg
clc
dec
and
xchg
sahf
into
xor
jge
and
lcall
dec
push
outsl
fisttpll
push
mov
inc
popf
sub
add
sti
cld
incl
call
dec
pop
push
sub
popa
sub
mov
testl
pop
sbb
adc
int3
mov
pusha
loope
in
jns
sbb
mov
loope
push
ds
movsb
adc
pushl
cld
mov
cmp
mov
push
ret
pop
inc
mov
daa
dec
sbb
lcall
outsb
test
mov
shlb
push
das
lret
mov
sbb
add
std
fists
fsts
inc
mov
mov
mov
decl
scas
xchg
mov
dec
xor
flds
imul
lods
aaa
adc
sbb
lods
iret
stos
pushf
jnp
inc
lcall
or
jae
pop
imul
js
dec
dec
rorl
and
sbb
push
lcall
int
negl
sti
int3
jmp
cltd
cmp
insb
ss
adc
loopne
mov
cltd
xlat
inc
ljmp
sbb
sub
fwait
filds
xchg
bound
sbb
in
test
ljmp
xor
loop
es
mov
testl
inc
jbe
pop
mov
incl
pop
cli
in
popa
and
aam
mov
dec
add
sarl
repz
xor
cmc
incl
inc
mov
mov
jo
push
std
jg
add
push
stos
lods
adc
pop
jg
jno
xchg
or
aaa
inc
mov
lret
xor
loope
dec
call
mov
outsl
fildll
leave
xor
fnsave
mov
loope
inc
xchg
fidivl
ja
lea
out
stos
lcall
aaa
lock
call
mov
inc
mov
mov
scas
clc
jg
jmp
xchg
in
jns
add
jnp
sbb
cmpsb
and
jg
xchg
mov
add
xor
sub
sbb
imul
insb
mov
xchg
jg
les
insl
stos
sbb
xor
jae
and
mov
fwait
push
mov
into
xorl
dec
cli
call
cmc
scas
cmp
jbe
in
outsl
outsl
mov
cmpsb
mov
outsb
or
adc
pop
movsb
jp
paddq
jne
int
mov
pop
cmp
call
scas
sahf
inc
movsl
in
rcr
pop
and
mov
mov
inc
mov
push
std
mov
push
movsl
inc
lods
adc
jno
jge
pop
xchg
sbb
sbb
and
sbb
aad
cmc
incl
jle
lods
mov
lret
syscall
pushl
inc
push
std
rcrl
sbb
sbb
inc
addb
adc
add
out
lret
mov
jg
das
js,pt
aad
jae
push
cmp
iret
or
and
lcall
mov
scas
outsl
pop
cmp
mov
sub
movsb
outsl
out
enter
vcomisd
mov
mov
sub
cmp
clc
fucomp
call
std
xor
nop
call
mov
push
sbb
xor
mov
repnz
out
lahf
dec
pop
mov
sti
jnp
pop
pop
arpl
data16
imul
cltd
pop
and
push
adc
xchg
shlb
add
mov
mov
popw
ret
sbb
pushf
mov
and
dec
loopne
sti
imul
data16
pushl
out
int
or
xchg
int
pop
repnz
ds
mov
fcmovbe
mov
ss
pop
test
sarb
das
jns
lcall
stc
scas
mov
imul
sahf
ljmp
sub
in
es
adc
ljmp
js
fiadds
push
adc
xchg
inc
pop
mov
inc
popf
xor
arpl
mov
data16
ret
out
mov
dec
adc
pop
aaa
std
pop
or
xor
mov
dec
lret
outsl
call
into
mov
daa
jmp
xchg
and
sbb
mov
hlt
dec
ret
test
xor
daa
sub
outsl
adc
add
pop
xor
cmp
fldenv
dec
jbe
mov
in
dec
pop
test
das
cld
jg
popa
xor
ds
add
fildl
push
fidivrl
mov
daa
or
les
push
flds
loopne
adc
add
cmp
and
add
div
decl
cltd
add
sbb
lock
pop
idivb
cmp
mov
sarl
inc
ret
xchg
lods
sbb
scas
mov
cmpsl
or
xor
xchg
adc
dec
in
pop
xchg
ljmp
mov
shrb
repz
sbb
gs
shll
jecxz
mov
add
outsl
cmp
xchg
lcall
sti
mov
cmp
mov
iret
xchg
mov
cmpsb
mov
jmp
mov
in
mov
cmp
pushl
adc
pop
mov
ret
std
leave
orb
pushl
daa
or
pop
sub
mov
ret
mov
ljmp
in
cmp
nop
loope
std
jne
jae
push
sub
xor
fisttps
inc
and
dec
outsb
push
lea
testl
call
mov
pop
cmpsb
outsb
aaa
pop
lock
xchg
aas
cmp
out
sbb
cmp
ljmp
add
aaa
repz
int
mov
cs
fs
sar
loop
iret
fiadds
cmp
ds
jg
jae
jns
in
cmp
jge
inc
xchg
or
orl
push
loopne
push
add
and
ret
lds
fisttps
in
mov
pusha
insl
xchg
xchg
cmp
jecxz
inc
sbb
jle
outsl
std
incl
movsw
movsl
dec
mov
in
shrl
in
lock
or
hlt
decl
add
cmp
ret
mov
dec
inc
add
lcall
cmc
xor
inc
outsb
jns
xchg
aaa
fwait
shlb
ficomps
movsl
push
sti
lock
or
dec
lahf
test
mov
out
lahf
cmp
aaa
xchg
sarb
sbb
outsl
inc
xchg
mov
cmp
mov
push
jb
aad
imul
in
add
xchg
test
sub
in
push
je
or
into
mov
xchg
shlb
xlat
int3
sahf
push
jbe
and
pop
hlt
cld
icebp
adc
repz
stos
push
add
sub
icebp
aam
cmp
inc
into
jp
inc
fmulp
sbb
shrl
aas
ud0
das
push
mov
ds
xor
int
fwait
jne
bound
shr
std
ljmp
and
repz
xor
in
js
jmp
lods
adc
dec
scas
sarb
dec
incb
push
mov
jns
inc
pop
xchg
aaa
outsl
push
jg
cmpsl
ja
cmp
adcl
fildll
mov
jae
or
fwait
hlt
dec
mov
mov
std
pop
jo
jg
lock
mov
mov
inc
lret
sbb
ljmp
inc
test
es
outsl
popf
push
push
adc
xor
ljmp
push
mov
pushf
pop
stos
add
sub
test
icebp
decl
dec
or
into
mov
xor
inc
clc
mov
xchg
in
or
add
cwtl
dec
test
popa
in
adc
jo
jns
jmp
enter
nop
fadd
jl
add
adc
xchg
xlat
movsl
sub
std
jmp
inc
out
cmp
bound
dec
cmp
jb
std
cmp
xchg
adc
pop
jno
fdivr
ja
sbb
push
and
and
incl
jl
mov
in
stc
inc
mov
int
xchg
ljmp
cli
pushf
sbb
dec
and
or
pop
push
pop
bound
arpl
testl
jmp
mov
sbb
repz
mov
add
lods
and
pop
insl
pop
call
push
mov
call
push
aad
daa
mov
jecxz
inc
les
int
les
pop
cmp
mov
orps
mov
ja
push
jge
push
and
sub
out
mov
cmpsb
sbb
pushf
into
and
pushl
jo
fsts
js
xlat
notb
cltd
xchg
orb
sub
pushl
data16
sbb
mov
pop
fbld
std
xor
pop
call
scas
and
mov
and
fcompl
sbb
out
xor
inc
sub
or
lahf
inc
in
add
and
shl
call
stc
mov
mov
adc
xor
inc
scas
test
push
fidivs
mov
pop
add
and
jbe
jmp
call
hlt
push
adcl
push
mov
sub
or
das
mov
pop
cld
mov
dec
and
clc
decl
mov
or
repnz
sbb
filds
shll
or
cmp
pop
sub
cmc
lcall
pop
ds
jo
jmp
clc
korb
mov
addb
or
test
jns
jmp
std
inc
jne
cli
fimull
adc
int3
or
and
iret
out
in
push
and
mov
shlb
inc
adc
call
imul
test
adc
sbb
xor
jmp
arpl
inc
loop
xor
and
add
je
out
sub
sarl
loop
js
fnstenv
lds
push
or
pusha
add
jle
loop
xor
xchg
jle
push
cmpsb
mov
in
mov
scas
xchg
or
aam
cs
test
vmovups
or
xchg
xchg
in
mov
mov
stos
mov
push
out
xor
or
or
jecxz
jbe
jne
adc
jbe
cmp
ja
fcomip
jg
lret
push
dec
sarb
out
add
sub
pop
aaa
mov
push
xchg
decl
ljmp
rcrl
ljmp
and
pop
lcall
stc
addl
sbb
subb
leave
add
cld
imul
cmp
jmp
call
cmp
test
push
lcall
cmc
mov
push
mov
jg
cwtl
ljmp
push
sbb
ret
adc
fs
or
adc
sbb
inc
mov
cmp
pop
mov
jle
or
and
pusha
mov
scas
fistl
int
sbb
or
test
aaa
and
clc
mov
jmp
sbb
inc
jmp
sti
push
push
and
or
sti
xor
dec
out
hlt
xlat
fwait
or
fnstsw
in
mov
push
aaa
cltd
call
xor
in
dec
fdivs
cmp
int3
mov
fcmovbe
lock
addr16
push
mov
xlat
mov
ret
popa
xor
push
xor
pushl
in
imul
shll
shrl
mov
aas
sub
xchg
sub
mov
cmpsl
inc
cld
sub
xchg
pop
test
out
sar
jg
mov
mov
mov
adc
cli
daa
pushf
mov
mov
add
sub
je
idivb
arpl
jmp
sahf
stos
mov
adcl
adc
dec
pop
pop
insb
xchg
arpl
mov
aas
sub
xchg
pop
sbb
and
clc
jg
movsl
lahf
das
aaa
xchg
mov
jnp
test
popf
scas
out
scas
pop
stos
outsb
xchg
mov
cmp
pop
ljmp
cwtl
orb
xchg
add
in
or
in
xchg
in
add
mov
xchg
pusha
fdivs
rorl
lcall
inc
jbe
xchg
cld
dec
jl
lock
scas
or
std
std
sti
mov
ss
les
retw
ds
call
inc
popa
inc
cmpsl
iret
cli
cmpl
cltd
test
mov
xchg
inc
clc
out
clc
loopne
add
cs
fildll
loopne
adc
jmp
repnz
push
mov
fs
mov
pusha
inc
decl
jl
jb
sub
mov
add
push
mov
adc
incl
stc
xchg
xor
jb
mov
mov
and
dec
mov
mov
add
sbb
and
and
and
movsl
inc
mov
jmp
das
fwait
ss
sub
inc
ret
push
std
and
sbb
cmp
adc
mov
add
push
xchg
sub
inc
lods
cs
add
aam
or
mov
jae
mov
mov
lcall
mov
shll
test
xchg
and
std
push
lcall
sar
cmp
test
xor
mov
lcall
insl
rolb
dec
pop
lea
mov
loopne
mov
filds
aam
push
or
mov
sbb
dec
and
movsb
test
mov
jae
and
cld
fisubs
adc
pushf
push
jnp
inc
adc
push
xor
adc
xor
mov
cmp
adc
pop
jg
lds
int3
out
in
add
jb
dec
mov
sub
hlt
mov
call
jne
out
jmp
filds
xchg
and
mov
jmp
stc
xchg
mov
addr16
insb
sbb
add
mov
in
xlat
push
sarl
add
lcall
leave
and
add
nop
push
loopne
aad
mov
cwtl
ja
sub
es
fcoms
cmp
or
cmp
xchg
cli
mov
sahf
fisttpl
sub
and
std
mov
inc
lods
movsl
mov
jno
mov
testl
repnz
dec
push
rol
notb
mov
rcll
call
and
stc
into
pop
xchg
pop
cs
xchg
movsb
ljmp
out
push
ret
adc
jae
sub
imul
iret
ret
cld
jg
mov
scas
jle
sahf
sub
repz
mov
jg
xchg
jmp
jne
in
repnz
add
adc
push
mov
jno
dec
jnp
or
adc
arpl
repz
inc
push
lcall
hlt
cmp
inc
insb
jne
sbb
pop
mov
and
push
mov
jne
sub
aad
bound
mov
dec
and
call
sbbl
jg
shr
fs
repz
fistl
mov
lea
adc
jmp
push
mov
call
inc
adc
push
mov
fiadds
sub
stos
push
adc
es
fcos
cmp
imul
dec
jno
mov
mov
jg
ds
loopne
xor
nop
mov
and
lret
fs
sub
and
mov
outsb
sub
ja
push
lcall
push
ret
push
mov
sub
push
xor
cmp
jle
aaa
mov
fildll
and
rcrl
popf
pop
hlt
inc
add
jo
push
pop
dec
cmp
decl
mov
cmpsb
pop
jbe
push
addr16
pop
fadds
xchg
inc
push
fnstsw
lock
jmp
into
popa
repnz
mov
movsl
das
jns
subl
mov
loop
and
das
mov
dec
test
data16
pop
std
pushl
dec
loopne
loop
punpckldq
pushf
inc
daa
cli
dec
push
inc
cli
mov
ret
pop
mov
ljmp
repz
insb
cmp
pop
jecxz
dec
sbb
movsl
lods
cmpsl
cli
push
xchg
mov
ljmp
mov
push
mov
pop
jo
test
lods
call
xchg
jmp
dec
mov
cs
pushl
fs
cmc
sbb
or
scas
dec
es
jmp
cmp
jp
lret
pop
adc
jle
rorl
pop
push
in
mov
les
lods
add
cmp
dec
shlb
and
leave
adc
cli
mov
mov
jnp
rcr
stos
push
shr
adc
jmp
push
ljmp
xchg
pushf
int
pushl
xchg
pop
pop
imul
push
ret
dec
push
subl
sub
nop
push
divl
sbb
popf
xor
cld
sahf
test
mov
jg
jg
pop
jne
in
inc
sar
repnz
popf
push
cmp
xor
mov
out
dec
add
push
jo
fmul
in
cltd
push
je
out
jne
inc
fsubs
xor
outsl
xchg
mov
fldcw
loop
lods
adc
mov
jmp
xchg
xor
xchg
les
int3
xchg
pusha
sbb
dec
xchg
xor
xor
ljmp
or
ja
sub
and
mov
jmp
mov
mov
hlt
cli
stos
push
mov
mov
and
pop
insb
es
jnp
mov
mov
mov
testl
mov
incl
in
push
popf
ud1
dec
in
out
xchg
rcrb
mov
incl
fucomp
fwait
inc
pop
sub
dec
lock
fldln2
jne
lahf
sar
pop
jne
push
test
dec
inc
inc
push
lcall
adc
mov
pop
dec
sbbb
arpl
rorl
outsb
into
push
adc
mov
call
and
stos
repnz
mov
lcall
dec
xor
outsl
icebp
out
mov
lods
push
mov
mov
pop
call
sarb
call
push
fildl
or
ret
fisubl
out
push
push
adc
inc
pushl
xchg
ds
pop
pushl
sub
jns
and
shrl
cs
jb
fwait
call
sbb
cmp
in
push
pop
pop
mov
pop
cs
clc
dec
inc
loope
add
ljmp
cmp
add
fldl
call
bsr
outsb
add
sub
jp
xor
inc
mov
add
cwtl
or
call
std
jne
shrb
push
mov
dec
ret
sub
sarb
pop
test
clc
jmp
mov
icebp
jae
xchg
aas
std
lret
jp
mov
lcall
add
andb
jo
insb
pop
faddl
fdivrs
or
lods
lcall
mov
iret
aam
ret
cmp
dec
jle
dec
push
fistpl
dec
loope
add
push
sub
mov
ds
mov
sbb
sarb
repz
mov
cmc
mov
std
and
xchg
mov
xor
adc
mov
jb
cli
ljmp
push
cmp
mov
movsb
cmp
dec
imul
add
test
icebp
pushl
push
xor
jns
rol
pop
loopne
xchg
mov
sarb
or
pushl
shll
mov
fimuls
outsl
sub
mov
lcall
push
inc
lods
addr16
cmc
out
js
sbb
pop
loope
imul
stos
pop
dec
push
cmp
mov
xor
or
stos
sub
dec
pop
movsb
stos
stc
imul
or
push
jo
inc
jo
mov
stos
or
mov
fisubrs
mov
lret
xchg
xor
adc
cld
decl
movsl
or
sbb
das
sbb
jg
cli
outsb
lock
mov
pop
dec
addr16
jmp
jp
jp
movsl
jmp
dec
xchg
add
xchg
mov
cwtl
cli
pop
mov
ss
dec
shl
cs
push
in
jns
pop
push
dec
jg
sbb
lods
lret
ja
pusha
jbe
cmpsl
stc
jns
sub
jl
cmovne
and
cmp
aad
adc
gs
sub
pextrw
data16
add
rcr
fadd
lret
mov
sub
loope
das
arpl
decl
sahf
neg
aad
fs
inc
jecxz
mov
insb
aas
mov
jecxz
rorb
aaa
push
jae
push
stos
pop
or
lahf
outsl
or
cmc
fcomip
jmp
sarb
in
out
mov
inc
or
pop
ljmp
mov
pushl
test
sub
ljmp
push
adc
adc
leave
pop
incl
scas
loope
fcmovnb
ret
jmp
dec
mov
pop
bnd
jmp
pop
cmpsb
int
stos
dec
ja
or
sbb
xchg
shlb
sub
decl
xchg
data16
mov
nop
push
adc
or
xor
jmp
fstpt
add
or
sbb
jmp
ds
fsubs
mov
movsl
sbb
jnp
add
je
into
or
mov
mov
lcall
popa
pop
jnp
xchg
dec
jae
fidivrs
insb
inc
pop
inc
xchg
pushf
and
rol
mov
cmp
ljmp
cmpsb
popa
sbb
hlt
jns
cmp
out
cmp
in
mov
shll
and
in
xchg
jge
fstps
xchg
push
sarb
mov
les
add
cmp
jbe
lcall
das
push
pusha
lcall
int3
sarb
jg
mov
jne
arpl
test
ljmp
push
ds
cli
jno
repz
xor
popf
jo
xchg
sbb
mov
ret
pushl
cld
pop
fsubrp
lahf
mov
sub
add
xlat
pop
sbb
cmp
stc
and
je
mov
sbbb
lcall
and
aad
mov
scas
out
mov
int
mov
mov
pushl
pusha
sub
sbb
stc
arpl
mov
orb
or
out
pop
int
not
jp,pt
pusha
jecxz
xlat
push
xchg
mov
je
cwtl
pop
addr16
pop
enter
sub
jnp
lret
aas
and
outsb
inc
or
sub
pushl
lret
xchg
xlat
out
mov
and
mov
xorb
je
pushl
dec
mov
mov
push
das
mov
push
insl
lcall
fimull
inc
pop
and
pop
xadd
jmp
sar
decl
int
fucom
filds
mov
scas
repnz
sub
std
jg
nop
test
stos
adc
pusha
push
subl
incl
cld
testb
fbld
cwtl
pop
xor
repnz
adc
sbb
push
out
xchg
jl
xor
and
xor
sbb
outsl
leave
jmp
sarb
pusha
mov
push
leave
sub
mov
fs
cmp
sub
fcomps
outsb
jle
push
arpl
xchg
loop
call
push
cmp
mov
imul
add
iret
sbb
pop
mov
fsts
ljmp
dec
mov
adc
and
icebp
decl
push
dec
cmpb
adc
incl
xor
dec
push
outsl
or
es
add
mov
rcll
cltd
dec
arpl
or
incb
mov
inc
movl
dec
call
mov
jae
and
add
pop
inc
cmp
mov
fs
in
and
push
cmp
adc
call
add
rolb
mov
push
fs
push
xlat
push
pop
jns
mov
dec
stc
add
cli
pushl
daa
adc
dec
test
in
mov
decl
and
mov
sar
cs
and
clc
xor
inc
stos
outsl
mov
mov
push
imul
cmp
imul
or
jg
incl
sbb
sub
cltd
in
lods
imulb
clc
data16
push
scas
out
inc
ret
lcall
xchg
lods
fucomp
test
mov
xchg
xlat
lods
dec
int3
pop
jnp
lcall
fnstsw
andb
fnsave
inc
movsb
clc
clc
outsl
push
jmp
lods
add
add
das
inc
adc
popa
iret
ficomps
adc
mov
pop
xor
cmpsl
add
pop
test
scas
jecxz
in
pop
inc
and
inc
cli
cltd
sub
and
inc
inc
jle
es
jl
cmp
mov
popa
or
out
push
sahf
sub
std
mov
add
mov
sbb
sub
and
lret
iret
jae
loopne
push
cmp
incl
add
sbb
lret
arpl
std
push
shrb
stos
incl
orl
push
inc
ss
cli
mov
mov
jg
pop
adc
sbb
out
mov
lods
cmp
add
test
loop
pushl
loopne
push
in
movsb
sub
arpl
adc
mov
es
enter
roll
lock
adc
out
adcl
mov
adcb
ss
repnz
sub
jl
mov
sar
mov
sub
push
sub
pop
dec
negb
pushl
jle
add
inc
push
aas
in
and
mov
inc
in
jge
mov
aas
inc
fwait
sub
cmpsb
repnz
jg
sub
mov
addr16
inc
cmpsl
ret
shrb
dec
cmpsb
bound
fwait
mov
shl
scas
jg
add
je
int3
cmp
stc
ret
in
dec
andb
jecxz
mov
xor
clc
xor
inc
push
mov
cwtl
fwait
sahf
dec
cmpsb
fwait
push
push
sbb
bound
pop
decl
cmp
cmp
outsb
add
push
pop
mov
xchg
les
loop
push
bsf
lcall
sub
lock
mov
mov
lock
inc
xchg
js
mov
lcall
dec
in
popa
mov
mov
test
movsb
das
cs
or
mov
movsl
call
lcall
jmp
shll
mov
and
loopne
xchg
ljmp
push
inc
shlb
je
push
arpl
jmp
fcos
out
shl
adcb
aad
lds
in
cmc
test
rcr
arpl
mov
xchg
ljmp
or
int3
stos
jns
mov
dec
out
mov
lret
push
add
popa
daa
lods
lcall
and
jae
arpl
das
fidivs
mov
pusha
rolb
adc
pop
xor
les
mov
vmovntps
popf
ret
lcall
cmc
lret
bswap
xor
mov
popa
pushf
push
les
xchg
cmp
mov
and
sbbl
add
out
subb
in
jle
mov
fildll
call
rep
dec
jo
pop
push
lahf
push
scas
cmpsl
mov
push
mov
lcall
out
mov
fisttpl
push
inc
mov
lret
ljmp
outsl
nop
rol
jmp
gs
cmp
scas
pop
xlat
mov
cli
or
adc
addr16
leave
jne
jne
jb
add
lock
jp
stos
xorb
mov
jo
out
mov
jge
test
mov
pop
jmp
mov
ljmp
arpl
mov
pusha
add
cmp
cltd
jne
xchg
mov
decl
adc
fwait
pop
xchg
iret
lret
add
dec
cmc
mov
je
test
scas
inc
jle
movsb
or
lods
fs
xchg
pop
sub
arpl
mov
lods
mov
pop
jne
insb
loope
jmp
sub
popa
in
mov
xor
push
sub
lcall
mov
and
and
or
push
out
scas
push
xor
or
ss
std
lcall
lret
pop
es
or
pmaxub
xchg
pop
push
adc
push
call
std
push
aam
mov
daa
jno
bound
scas
pop
mov
sub
mov
pushl
rclb
inc
mov
insl
lock
jno
fisttpll
sub
jg
push
mov
xchg
add
xor
sarl
lcall
push
movsl
mov
xor
jo
cmc
xor
mov
and
sub
call
dec
inc
mov
adc
and
lahf
ret
inc
sub
mov
and
push
movsl
decl
mov
pmaxsw
jbe
call
xchg
scas
cli
outsl
xchg
or
test
inc
dec
push
jp
lods
cmp
adc
or
in
xchg
fnstsw
dec
sarl
imul
test
or
jne
pop
or
fiadds
lods
add
cmp
jmp
fidivrl
clc
popa
mov
jno
outsb
outsl
insb
imul
push
pushf
mov
jmp
dec
or
cmp
stos
jp
or
and
or
call
inc
inc
inc
cmpsl
out
arpl
imul
test
sub
adc
cmp
dec
or
inc
ffree
add
jb
fisubl
andl
lcall
mov
stos
sub
rol
xor
mov
ja
add
dec
les
out
inc
dec
in
add
mulb
sahf
mov
inc
les
mov
cli
jmp
adc
or
mov
test
ljmp
rorb
jo
jmp
dec
sbb
dec
aad
and
sub
clc
decl
je
push
daa
scas
xchg
mov
xor
rolb
dec
mov
incl
test
insb
adc
xor
and
das
int3
je
bound
pusha
pop
jg
dec
aaa
loope
push
jne
test
adc
and
lcall
sub
add
es
lcall
test
mov
and
dec
xchg
add
loope
pop
cs
jmp
ljmp
data16
call
in
adc
shrb
sub
xchg
pop
xchg
shlb
repnz
test
cli
into
dec
sbb
ljmp
ret
adc
or
into
hlt
out
add
sahf
test
test
push
mov
add
pushl
or
in
es
sbb
cs
sbb
cmp
shrl
mov
stos
mov
jb
hlt
mov
mov
movsb
cmp
call
pop
lcall
outsl
aam
cmp
jno
or
insb
mov
adc
enter
xlat
incl
jp
scas
adc
or
pop
cs
mov
ljmp
push
jmp
sbb
sbb
xor
fldl
mov
movsb
push
mov
push
ljmp
push
ffree
lret
ror
shlb
fcomps
call
mov
cmp
rcrw
cmp
stc
sub
enter
cld
ljmp
push
sub
sbbl
test
mov
scas
mov
push
clc
pop
scas
popl
add
fbld
inc
xchg
test
inc
add
jg
outsl
aas
sub
stos
push
jg
mov
leave
xchg
sbb
jmp
out
hlt
jp
inc
sub
mov
and
loopne
sbb
test
ljmp
mov
xchg
or
mov
lods
jo
fistpll
rcrl
jp
fstl
add
pop
pop
xor
bound
mov
inc
incl
jp
mov
jo
sbb
pop
fiadds
dec
shlw
daa
push
jl
xor
jecxz
das
push
push
push
out
dec
lods
gs
pop
pop
adc
push
add
xor
xor
lcall
int
cmp
mov
inc
mov
test
add
jg
call
and
jbe
xchg
iret
and
outsl
fs
mov
mov
sbb
repnz
fimuls
jns
push
lret
negb
push
jge
push
loope
arpl
loope
lea
jg,pt
movsb
jmp
cmp
pop
xor
and
mov
movsl
ss
call
popa
mov
cs
sub
pop
push
sbb
rorl
insl
arpl
jb
jo
jg
dec
fs
and
scas
mov
call
jae
mov
shrb
pushl
loope
jp
sbb
add
rcr
pop
lret
clc
aam
inc
adc
addl
mov
jns
mov
sbb
fdivp
mov
xchg
dec
cmp
test
cmp
jnp
sbb
mov
fisubs
push
jno
inc
cmp
arpl
nop
and
mov
loop
pop
lret
cmp
sbb
incl
xor
leave
ds
pop
push
and
push
adc
sbb
es
pop
mov
call
push
test
push
mov
jmp
cmp
scas
cmc
mul
jne
popa
adc
call
and
or
shll
inc
add
sub
lret
sub
fsub
xchg
stc
pop
addr16
push
ja
mov
push
xlat
aam
insb
hlt
imul
jns
jo
outsb
repz
pop
mov
call
imul
popa
or
mov
or
idiv
mov
sbb
jl
push
inc
push
sbb
push
test
cmp
data16
sub
movsl
jns
movsb
pop
decl
fisubrs
mov
cmpsb
or
jne
add
adc
mov
cmpsb
xchg
scas
mov
or
pusha
jno
cld
aas
or
data16
jmp
mov
push
call
je
lock
dec
sbb
sub
and
repnz
movsl
movsl
xor
jmp
mov
das
jle
loop
fidivs
mov
fwait
mov
jmp
pop
mov
jg
or
sti
cmpsl
jp
jmp
push
leave
xchg
mov
fimull
les
loopne
jg
sbb
insb
data16
xchg
mov
stos
add
or
lcall
dec
sub
std
jecxz
mov
loopne
daa
mov
cmp
mov
flds
mov
stos
je
test
pushl
pusha
xor
pusha
cmp
add
add
inc
test
dec
jecxz
les
iret
repz
pop
sub
push
ja
lcall
adc
punpckhwd
sti
ja
ret
lds
cltd
popa
lock
mov
jmp
xor
in
ds
or
daa
jp
ficompl
and
cmp
sub
xor
call
std
in
pop
sbbl
and
push
arpl
add
shr
ret
lcall
lock
data16
sub
xor
xor
push
int3
mov
sub
jmp
dec
jg
ja
xlat
jmp
mov
pushl
out
sti
lock
add
jg
aas
adc
inc
pop
or
xchg
int
mov
ljmp
sub
std
push
jbe
add
mov
cmpsl
lods
cltd
pushf
sahf
sti
sar
decl
add
aam
xor
jbe
add
inc
fcoms
mov
out
sbb
loopne
fists
push
out
enter
into
sbb
dec
scas
jge
aad
mov
add
cmp
add
pop
ljmp
adc
es
xchg
mov
or
decl
adc
cmp
or
lcall
lahf
sbb
ja
ret
xchg
pop
and
aas
decb
clc
pop
inc
jmp
xchg
test
jg
mov
cmp
ja
cld
lcall
and
sbb
pop
lods
insb
loope
jg,pn
nop
cmp
pop
mov
movsl
sub
xchg
mov
sar
ffreep
into
mov
out
push
ficoms
jne
jns
mov
ror
sbb
hlt
mov
lock
sub
sub
popa
movsl
lcall
mov
aas
js
movsb
pop
sub
sub
aam
decl
andb
std
inc
ss
mov
es
adc
pusha
adc
lods
insl
jnp
loopne
decl
xor
fstps
inc
test
pop
call
adc
xlat
fistps
std
ds
xor
and
neg
push
lock
les
lcall
lods
sbb
inc
sbb
mov
popl
and
push
rcrl
ljmp
iret
xor
lods
aaa
lock
mov
lods
pop
adc
ljmp
es
ret
jns
flds
rcl
inc
sahf
js
lcall
jno
test
rcr
loop
clc
nop
cmp
inc
mov
movsl
clc
out
test
cli
mov
call
sahf
int3
mov
cmp
lcall
dec
xor
out
movd
xor
sub
jb
test
roll
add
and
ss
push
mov
pushl
sti
push
ficomps
outsl
fnstsw
sub
mov
lret
xor
xor
pop
adc
pop
jmp
insl
adc
rcll
push
jmp
out
push
pop
mov
mov
cmpsb
ss
mov
fbstp
sbb
dec
imul
sbb
pop
xchg
clc
in
xchg
pop
push
daa
pop
fcoms
cmpsl
dec
loopne
pushl
add
push
faddl
insb
mov
mov
leave
out
test
sti
imul
add
icebp
xchg
clc
cmpsl
pop
nop
mov
int
or
mov
lcall
arpl
incb
adc
sub
mov
test
and
push
adc
ljmp
xor
or
mov
add
push
xor
int3
lret
decl
jle
sbb
cmp
xchg
lods
outsb
cmp
xchg
xor
ja
idiv
lcall
xor
jno
cmp
out
mov
nop
push
mov
ljmp
mov
lcall
jno
mov
or
jge
call
jns
outsl
jl
mov
nop
lock
outsl
insl
sarl
mov
xlat
xchg
jg
fbld
jle
flds
outsb
in
push
push
and
xchg
pop
enter
adc
sub
mov
cmp
or
and
xchg
sar
or
push
fnstsw
inc
push
pushf
incl
dec
add
pop
lret
sbb
nopl
stc
push
mov
pushl
loopne
mov
out
iret
cmp
sub
insb
addb
adc
movsl
out
jns
cmpsb
inc
mov
aaa
and
repnz
ja
jge
ret
xchg
mov
in
imul
push
mov
mov
mov
imul
or
gs
push
add
mov
insl
call
lcall
jmp
mov
fldt
and
sub
mov
sbbl
int
incl
inc
add
jl
pop
xchg
cwtl
cli
adc
mov
fldl
mov
jg
stc
lret
in
insl
dec
xor
fcomp
sbb
test
jg
xchg
sbb
push
lret
pop
shrb
cmpsl
pop
adc
dec
das
ljmp
mov
xchg
in
jae
adc
mov
addr16
negl
pusha
mov
pop
xor
xor
mov
js
mov
sbb
and
jg
mov
or
fs
fnstsw
inc
sti
xchg
jle
jg
sub
lret
mov
sub
pop
icebp
ljmp
pop
je
imul
je
repz
mov
mov
jp
fnsave
xchg
gs
das
shl
mov
jmp
jl
push
dec
mov
push
cs
xchg
or
pop
pop
cmc
add
popa
call
jge
mov
xor
xchg
rcr
lods
aas
cmc
insb
push
mov
jns
push
or
jmp
xchg
shll
mov
stc
je
cmpsb
jb
sub
lcall
out
xchg
shll
or
cmp
mov
mov
out
add
insb
or
rorl
or
sti
dec
push
loope
aaa
add
mov
pop
and
xchg
jg
pushl
arpl
jl
fisttpll
inc
mov
mov
mov
jmp
xor
aam
mov
xchg
fsubr
inc
xor
mov
xor
sbbb
sbb
and
push
sub
mov
repz
jg
decl
dec
fmulp
pop
test
movsb
les
push
cmp
ret
cld
pushl
lret
cmp
pop
jge
push
mov
pop
shl
pop
iret
aas
or
repnz
mov
jo
aad
js
xchg
int3
mov
lods
popf
fcompl
test
fs
jle
cmp
stos
test
aam
outsb
and
mov
sahf
or
xchg
push
fmull
or
jnp
xor
and
sahf
jnp
aas
adc
pop
dec
mov
inc
lock
mov
xor
and
cwtl
clc
mov
mov
inc
clc
lds
ds
out
stos
cli
incl
bound
adc
adc
cmpsb
jne
push
or
out
dec
enter
and
out
sub
lock
sbb
and
ret
xchg
mov
out
lahf
ljmp
rcrb
scas
xor
test
fwait
cld
shrb
dec
ret
push
mov
imul
ljmp
outsb
xor
push
inc
enter
xchg
mov
leave
lcall
push
fistl
popf
jnp
ja
notl
cmpsb
stos
ja
jge
dec
push
push
and
jns
mov
call
jne
mov
call
sahf
dec
inc
filds
outsl
dec
lahf
mov
je
stos
movsl
sahf
push
pop
jnp
sbb
xchg
xchg
mov
call
inc
daa
sub
dec
loop
fnstsw
sbb
std
in
aas
inc
repnz
mov
icebp
scas
pop
repz
icebp
lods
lods
jo
or
shlb
movsl
imul
stos
mov
add
xchg
xchg
sub
out
pop
cmpsl
ret
rorb
nop
sti
incl
sbb
fwait
xchg
xor
sbb
sub
cmpsb
inc
mov
mov
call
nop
xorb
cmp
movsb
movsb
fcomi
pop
and
mov
jns
jb
fwait
mov
lret
out
icebp
add
popf
push
in
pop
pop
inc
cmpsl
inc
xchg
cwtl
lods
cwtl
fbstp
js
mov
out
ljmp
dec
or
idivl
inc
inc
outsb
sub
aad
mov
or
jecxz
ljmp
adc
inc
fidivrl
sub
test
xchg
cmp
mov
mov
rcl
inc
iret
lock
pop
xchg
jns
in
add
mov
and
push
cmp
sub
mov
mov
ret
gs
sub
xchg
sar
add
sbb
cltd
cs
sbb
ret
lret
loopne
jecxz
or
sbb
jne
or
repz
std
fbld
xchg
push
mov
sbb
add
incl
aas
sub
adc
cmp
mov
cmp
pushl
dec
fisubs
xchg
xchg
mov
gs
jmp
lds
icebp
mov
and
scas
int
in
adc
out
jo
inc
insl
pop
out
lret
dec
mov
scas
shrb
fisttps
cld
mov
pop
mov
push
cmp
dec
into
adc
pop
inc
shll
push
clc
call
bound
mov
or
cmpsb
cmp
or
push
hlt
mov
and
pushl
subl
sub
aas
popf
and
fimuls
jecxz
jg
lock
jno
sti
sbb
dec
popa
mov
testb
dec
jae
xlat
jbe
add
jbe
cli
pop
jmp
push
jecxz
push
repnz
jg
sbb
jge
imul
mov
outsb
cmpsb
inc
cwtl
dec
lret
pop
push
lods
fstpt
clc
enter
push
jmp
pop
test
ljmp
mov
ljmp
mov
roll
mov
ljmp
pop
fiaddl
nop
jp
fadd
adc
or
dec
sbb
push
or
sbbl
dec
fldt
imul
jmp
insl
aam
lcall
sub
sbb
repnz
aas
mov
inc
mov
jg
lret
cmp
repnz
in
pushf
sahf
push
jecxz
scas
xchg
bound
jmp
pushl
pop
mov
out
adc
dec
fdivs
xor
lcall
or
pop
lcall
or
lods
es
xor
std
inc
mov
ds
mov
bound
repz
aaa
xchg
jg
sub
xor
xchg
or
test
mov
ret
movsb
outsl
inc
xchg
push
and
mov
jg
lea
push
test
lods
pusha
pop
bound
decl
ss
inc
adc
cmp
sub
dec
sub
shr
decl
cld
adc
inc
std
cld
pop
pop
test
pop
call
nop
repz
add
jno
xor
aam
inc
daa
lds
adc
nop
bound
cmpsb
mov
dec
in
daa
inc
testl
mov
imul
cmpl
paddd
jmp
xchg
lcall
sar
or
ret
or
lahf
add
rcll
xchg
sub
adc
adc
jo
mov
fildll
push
pushl
call
mov
gs
dec
or
xchg
mov
sub
mov
ds
fcomip
in
les
inc
ljmp
fs
loope
jae
test
sub
incl
sti
leave
add
dec
stos
add
scas
loop
insl
in
pop
cmc
add
inc
sbb
mov
pushl
lcall
push
loop
jnp
sti
lea
jbe
outsb
and
cmp
add
lcall
xlat
adc
je
mov
arpl
shrb
imul
or
notb
add
test
stos
dec
loopne
push
adc
outsl
xchg
cmp
lods
ja
xchg
mov
pushf
lds
mov
pushl
mov
stc
ja
push
fucomp
fstl
jnp
cli
and
bound
jmp
mov
cmp
int3
push
mov
adc
add
mov
ja
add
xor
dec
int3
jl
push
pushf
and
incl
into
or
loop
lea
jnp
gs
decl
leave
call
cmove
scas
mov
mov
rol
mov
and
ljmp
es
xor
mov
aas
fdivrs
inc
mov
jle
call
cmpsb
mov
out
sbb
pop
add
jge
push
cmpsb
mov
xchg
inc
push
pop
xor
nop
test
xor
inc
pop
icebp
sar
pop
std
cmc
and
inc
pop
lods
xlat
js
dec
aas
dec
xor
cli
pushl
add
inc
fdivrs
mov
aam
add
call
mov
mov
push
in
push
aam
movsl
fstl
pop
inc
mov
sub
jl
jns
mov
insb
int3
sbb
je
out
orb
loope
pop
fcomps
jecxz
bound
pushl
xchg
imul
lcall
sub
jg
push
sti
or
mov
sahf
dec
cmp
test
cmp
pop
hlt
clc
cltd
ret
push
mov
xchg
jnp
popa
dec
dec
stos
enter
push
mov
sub
sar
call
cmp
xchg
sub
push
cltd
cmc
jge
pop
out
scas
fs
lcall
mov
add
cmpsl
sbb
add
push
dec
divl
lahf
andb
lods
stc
jg
movsb
std
into
push
fcoml
stc
mov
adc
cmp
sub
jmp
or
subb
outsb
sar
ljmp
xchg
rcr
inc
fisubrl
xchg
icebp
adc
lds
jmp
das
push
sbb
pop
rcrb
or
stc
mov
push
jmp
jmp
aam
addl
push
mov
sbb
mov
call
dec
dec
and
adc
neg
int
mov
stos
xchg
lea
jp
aas
mov
dec
jne
pop
pop
iret
mov
aam
ss
jmp
jmp
lret
jbe
jg
cld
into
adc
cwtl
orl
out
into
and
loop
shlb
xorl
out
clc
and
jnp
into
push
mov
addr16
ret
inc
dec
dec
cltd
cmpsb
arpl
jo
pop
ljmp
je
jg
lods
mov
sahf
bswap
pop
test
mov
shlb
test
mov
dec
fstps
cld
and
inc
inc
cld
xchg
stc
insl
aas
push
repnz
loope
out
cmp
mov
xor
jo
dec
jp
out
pop
and
xchg
cmp
mov
xor
repz
and
mov
xchg
cltd
lahf
mov
popf
int
xchg
insl
pop
dec
inc
xchg
cmc
or
xchg
cmc
sbb
lock
and
call
mov
mov
xorb
cmpb
inc
jno
decl
mov
out
lods
jb
fst
bound
aad
jmp
sti
pop
pop
xchg
sti
jno
cld
mov
cmp
mov
data16
xchg
add
ret
jnp
sbb
iret
int
jns
add
xor
loop
jg
test
loopw
mov
mov
inc
cmp
incl
je
lahf
lcall
xor
xchg
or
pop
sar
mov
jp
xchg
adc
sbb
mov
incl
popa
ja
lds
adc
das
pop
sti
ss
sub
cmp
jno
addl
cld
in
scas
int
fldenv
inc
adc
pop
xchg
fisttps
dec
ljmp
jmp
outsl
cmp
mov
inc
lea
and
lods
mov
jbe
fsubrl
int
int3
test
fidivrs
xchg
aas
add
push
in
xchg
sahf
lcall
je
test
ja
fisubs
pushl
shlb
aas
sub
dec
cmp
push
mov
clc
aaa
xchg
cli
jnp
push
insb
rcr
das
sar
and
cmp
clc
lcall
push
mov
or
adc
fistps
add
xchg
add
call
jb
cmp
fistpll
add
ja
push
cmc
js
adc
in
ds
loope
jmp
xor
insl
in
decl
xchg
cltd
adc
pop
icebp
mov
fldt
hlt
jle
ja
and
je
outsb
out
ret
and
ljmp
fisubl
and
cltd
lret
ret
mov
inc
mov
aaa
push
fadds
icebp
and
pushl
cli
push
mov
sub
push
cmpsb
add
stos
decl
call
fxam
mov
jl
or
push
leave
push
push
sbb
sub
add
movsb
mov
cmp
out
lcall
jbe
fisubl
pop
xchg
mov
jne
nop
push
flds
pushf
jns
shrb
push
cmp
dec
test
push
and
out
sub
aad
incl
shlb
rcll
test
dec
lahf
and
in
lcall
pop
popf
cli
pop
xlat
jns
adc
cmpl
xlat
xchg
cli
ljmp
call
andl
mov
dec
or
sti
aaa
cli
add
out
aas
pop
cmpsl
push
pop
jecxz
rol
push
or
hlt
out
outsb
fildll
sbb
pusha
lods
fcoms
mov
xchg
ljmp
stos
xchg
mov
insl
jmp
mov
lret
int
leave
push
fstpl
or
xor
out
in
mov
mov
lret
and
jecxz
decl
push
jno
ja
push
mov
and
loope
mov
lahf
mov
mov
shrb
push
push
jp
idiv
ljmp
add
dec
test
jge
add
int3
or
dec
inc
fwait
jnp
pop
fidivrl
std
enter
call
xor
lock
xor
jmp
stos
fisttps
jmp
xchg
data16
cmpsl
fs
sbb
jl
mov
dec
sub
test
aas
call
jmp
aam
loopne
mov
faddl
and
push
sub
and
adc
add
lock
sbb
pop
sahf
mov
adc
lock
pop
shr
pop
mov
shlb
xor
cwtl
cmp
mov
out
ffreep
mov
add
pop
ljmp
call
mov
out
ss
push
and
std
call
jl
rclb
cltd
mov
jmp
or
f2xm1
decb
jg
sbb
inc
lret
dec
jl
clc
pushl
jecxz
decb
lcall
push
or
or
pushl
mov
pop
clc
push
sub
jo
das
add
adc
mov
dec
scas
enter
push
cmc
fdivl
cmp
stos
sbb
fstpt
in
adc
jg
gs
xchg
cmc
incb
sub
leave
sahf
xchg
int
shll
and
sbb
mov
mov
popf
pop
mov
mov
pop
pop
cmc
lcall
stos
movsl
or
jmp
mov
ret
mov
mov
dec
pusha
mov
jecxz
jb
call
or
push
lds
and
cmpsl
adc
sbb
xchg
test
int
ret
ljmp
cli
ljmp
pop
leave
pop
xlat
insl
mov
cmpsl
push
add
ja
sub
test
lock
incl
pop
fwait
test
push
push
out
jecxz
sub
subb
incl
lods
cmp
xchg
fiaddl
lock
outsl
add
cmp
daa
inc
mov
gs
lcall
or
cmpsb
and
call
divps
call
jae
notb
push
lods
repnz
in
jge
jg
movsb
mov
fsub
mov
cmp
rol
sub
ja
clc
in
sub
push
je
pop
inc
in
test
pushl
adc
aam
jge
push
in
cmp
leave
xor
cmp
mov
sub
jmp
fistps
push
fwait
in
inc
xchg
push
push
xorb
adc
inc
push
mov
lret
add
enter
js
nop
cmp
pop
loopne
fstl
cmpsb
push
xchg
xchg
or
imul
pop
sbb
into
cld
push
iret
insb
cld
gs
dec
out
jno
mov
popa
pop
ret
mov
jecxz
mov
dec
in
mov
sbb
push
call
mov
loop
movsb
pop
gs
sar
test
test
add
cmp
or
lcall
push
push
ret
stc
loop
xor
clc
repz
cmpb
mov
roll
pop
sbb
lods
pop
push
lcall
mov
movsb
push
int
cltd
xor
mov
fcompl
pop
out
cwtl
das
mov
inc
mov
or
iret
fstpl
dec
mov
push
push
fstl
in
or
ret
stc
mov
aam
jae
mov
pop
loopne
xor
xchg
mov
xchg
mov
adc
cmp
stc
mov
xlat
jbe
sbb
cmc
repz
outsb
xchg
roll
sub
pop
shl
cmpsl
outsl
rcrl
mov
stc
fisubl
or
mov
jle
pop
pushf
jnp
pop
lds
adc
push
cli
pop
cmp
mov
scas
sbb
mov
lds
pop
or
out
cmp
mov
inc
dec
cli
inc
or
pop
in
jp
push
push
lock
shl
push
test
decb
scas
push
mov
adc
push
in
xor
cmc
mov
pushf
or
jne
je
movsb
cmp
add
mov
mov
pushl
and
adc
ss
dec
mov
movsl
dec
sub
jo
in
pop
mov
jb
push
ljmp
hlt
js
pop
sub
cwtl
sub
faddl
mov
xor
stos
int3
icebp
mov
ljmp
sub
xor
stos
xor
sbb
sti
push
loope
aaa
jae
dec
sbb
call
xchg
lea
sti
mov
call
mov
cmpsb
mov
into
jns
sub
dec
mov
lcall
decb
mov
and
pop
pop
jbe
or
aaa
bound
mov
jmp
cmpsl
pop
fistps
inc
xchg
add
jb
leave
or
cmp
or
idiv
ja
les
fmull
cmp
inc
adc
mov
jmp
xchg
pop
enter
add
mov
mov
pop
or
bswap
xchg
js
psubq
mov
jl
xor
sub
lret
sub
movswl
das
cmp
stc
psubq
dec
js
jae
mov
cltd
adc
lcall
xchg
lods
jl
sub
or
mov
mov
mov
mov
daa
js
xor
outsl
cmp
jge
dec
decl
stos
es
xor
push
cmpsb
mov
cmpl
out
sbb
lcall
push
adc
cmp
ss
push
sahf
test
mov
inc
mov
sub
jb
ret
ds
adc
add
fmull
lea
nop
in
das
in
mov
dec
mov
and
ljmp
mov
shrb
mov
das
je
mov
sbb
inc
aad
incl
or
lods
popl
xchg
lahf
mov
shlb
clc
jg
and
jge
sbb
inc
jae
jge
pop
xor
ret
incl
adcb
mov
jl
xchg
lds
cmp
pop
movsl
call
mov
lcall
pop
loop
xchg
call
outsb
jnp
movsl
pushf
imul
stc
arpl
in
sub
call
scas
push
mov
mov
add
loope
dec
sbb
inc
push
inc
mov
or
incl
jbe
xor
lcall
mov
adc
push
addl
ljmp
push
sub
and
xor
shl
pop
jns
iret
mov
clc
shl
incl
outsl
mov
cwtl
mov
adc
clc
aas
sbb
stos
or
cmp
cmpsb
ret
lcall
nop
adc
andb
push
mov
subl
xor
addr16
xchg
jb
frstor
lret
scas
aas
insb
mov
imul
push
mov
sub
loopne
fildl
out
push
xacquire
mov
mov
mov
push
dec
sbb
jg
adc
lcall
push
faddp
icebp
cmp
lret
add
roll
outsl
mov
pushl
sti
xchg
mov
inc
jecxz
inc
scas
jg
mov
pop
jp
ret
mov
rcll
push
push
int
fstps
decl
ss
cld
jne
cmp
add
fwait
jp
sar
push
jb
outsl
pushf
pop
adc
loope
aas
adc
inc
rcl
xchg
outsl
int3
push
push
outsl
xchg
daa
cmovs
ja
xchg
not
pop
adc
pop
outsl
lcall
pop
mov
dec
out
jo
xor
std
adc
add
mov
inc
das
and
pushl
xchg
mov
add
std
jmp
bound
aas
sbb
jo
not
add
push
inc
or
xor
mov
sbb
mov
adcb
xchg
pop
xchg
aam
xor
inc
xor
cli
sbb
and
test
xchg
in
cmp
fsts
pop
sub
in
ret
add
xchg
add
ljmp
inc
lods
cmpb
cs
inc
jne
lds
fidivs
addb
cmp
push
mov
pop
and
push
bnd
outsl
loopne
cmp
push
pop
aam
mov
fstp
sbbb
jg
dec
stc
iret
cld
adc
jg
add
push
jecxz
xchg
nop
mov
xchg
incl
icebp
pop
jb
mov
xchg
es
sar
shl
xchg
xchg
mov
call
push
bound
and
subb
and
cmpl
addr16
inc
mov
mov
sub
pushf
mov
or
imul
adc
outsl
dec
mov
pop
test
rcr
nop
stc
inc
pushl
fs
int3
lea
push
mov
loope
jne
test
pop
push
sub
jle
out
pop
pop
addb
int
lret
aaa
out
or
inc
add
xchg
adc
movsb
lahf
and
rcl
lcall
jl
lret
roll
jo
jnp
lcall
mov
push
lcallw
rolb
cmp
and
out
ljmp
jg
sub
scas
inc
xor
adc
sbb
pop
cld
mov
xchg
call
add
pop
mov
shl
popa
mov
mov
loop
jecxz
loope
mov
mov
pop
pushl
inc
pop
int
add
rcrb
ficoml
pop
rol
daa
cld
dec
out
inc
mov
xchg
ljmp
fimuls
out
out
scas
shlb
jmp
jb
movsb
and
int3
xor
lods
adc
push
push
or
sahf
and
pop
sub
adc
push
stos
cmpsl
mov
push
xor
and
sub
xchg
fcoml
inc
sahf
xchg
jb
push
cld
dec
in
dec
int
pushl
cld
and
cmpsl
and
ficoms
mov
pop
xor
ja
lea
decl
mov
cmp
inc
shl
shlb
or
xor
push
xor
jge
inc
ljmp
jne
lret
pop
mov
lcall
jge
fsubrs
pop
and
jae
jae
pushf
dec
aam
notb
and
jg
icebp
xor
repz
lea
push
subb
insb
out
xor
sbb
inc
incl
jb
sbb
lods
divl
cmp
cmp
repnz
sbb
stc
lahf
xchg
adc
filds
in
mov
mov
call
mov
pop
rorb
jno
xor
movsb
pop
push
push
pushl
enter
and
pop
inc
inc
fs
fisttpl
and
adc
lahf
cmp
outsl
cmpsb
or
je
test
lods
lret
jge
jae
pop
jns
mov
fbld
cmpsl
rcr
cmp
fisttps
xchg
xchg
jle
fimull
into
add
pushl
mov
push
and
ss
jecxz
pushl
xor
pop
and
xchg
daa
test
push
cmp
cs
xor
pop
enter
jmp
xchg
in
mov
lods
xchg
fcomps
jbe
sti
push
ljmp
or
repnz
jle
enter
mov
inc
mov
push
dec
cmpb
ljmp
bound
int
lret
jae
lcall
mov
nop
cmp
sbb
pop
sub
cmpl
movsb
test
incl
mov
or
xor
jmp
call
shlb
arpl
jmp
fadds
mov
testb
xchg
dec
and
iret
out
aas
mov
cld
fnsave
jnp
in
sbb
pop
sub
jnp
ljmp
add
mov
lret
cld
int
aaa
jbe
out
mov
in
sub
je
mov
popa
push
das
incl
dec
das
jns
xchg
test
mov
lahf
imul
loop
js
sub
push
enter
and
sub
sub
cwtl
xchg
xchg
mov
ret
ljmp
icebp
testb
lds
pop
push
jb
test
shll
bound
gs
cmp
push
decl
repz
adc
push
in
jmp
inc
stos
inc
fprem1
test
int
sahf
js
mov
lcall
bsr
sub
sti
xor
jg
adc
sbb
decl
negl
mov
out
xchg
xchg
call
nop
add
xor
cli
cltd
mov
ljmp
xchg
std
rcll
pop
jle
pop
jb
add
dec
fmul
or
fwait
fistps
dec
rorb
xchg
ljmp
lcall
cmpsl
and
gs
aam
sbb
jge
fnstcw
or
xor
mov
sahf
mov
mov
decl
mov
lds
out
idivl
decl
xchg
push
adc
or
sbb
push
dec
jo
adc
dec
call
loopne
xlat
add
mov
jne
pop
sub
jb
adcb
cmpsl
fcomip
push
jl,pt
dec
jo
and
hlt
jl
xor
pop
arpl
test
lcall
in
out
jl
fstps
into
arpl
in
or
jmp
movsb
cli
scas
repnz
pushl
and
jmp
adc
les
lret
into
jl
test
add
sbb
xchg
jg
outsl
cli
inc
mov
mov
je
mov
cmp
xlat
xor
movsl
mov
sbb
lods
fwait
adc
fucomi
out
shr
dec
xor
push
jae
xchg
jno
cmc
cli
lcall
fdivr
int
xor
mov
inc
lcall
dec
jecxz
test
fldt
sbbb
adc
call
sbb
ficoml
inc
inc
mov
sahf
mov
test
push
inc
ret
movsl
pushl
inc
mov
mov
incl
in
sti
int3
sbb
pushl
imul
adc
jns
mov
xchg
fstpl
lods
lock
mov
ljmp
dec
adc
inc
fdiv
jge
call
fstpl
push
adc
pop
xchg
movntq
out
cs
mov
faddl
xchg
and
mov
enter
sub
call
es
mov
leave
adc
call
mov
pop
add
test
imul
jg
fsubp
adc
xor
aad
push
data16
mov
fst
push
xchg
out
cli
jg
pop
add
jl
add
mov
pop
fsubrs
and
incl
out
jns
dec
jne
adc
mov
jecxz
xor
ss
cltd
cs
cli
or
mov
in
sub
adc
jg
out
adc
loopne
sub
jb
dec
sub
or
lcall
xor
mov
ja
cwtl
addl
decl
xor
hlt
aas
mov
mov
and
std
xchg
imulb
movsb
ljmp
repz
push
add
mov
movsl
hlt
in
pop
insl
std
cmpb
mov
jg
imul
ja
pop
mov
pop
pushf
pop
jns
mov
call
and
mov
pusha
lods
inc
dec
mov
lret
push
repnz
sub
repnz
mov
insl
fcomi
adc
imul
into
cmp
sub
mov
cmp
aaa
mov
jp
adc
jns
jbe
ss
push
mov
ret
sbb
xchg
xchg
cmp
and
and
push
cmp
mov
in
jg
jg
es
inc
add
pop
ss
inc
inc
js
cmp
inc
loopne
adc
int
xchg
sub
add
cli
pop
push
ja
ljmp
cmp
cmp
fcoml
scas
test
insl
in
jmp
mov
ljmp
fisubl
jmp
mov
sbb
inc
sbb
imull
mov
rorb
mov
jmp
adc
sub
sbb
mov
decl
or
mov
orb
or
mov
adc
in
scas
inc
push
mov
cmp
add
mov
das
push
adc
test
call
xchg
jns
out
movsl
mov
adc
mov
dec
cmp
dec
mov
adc
push
push
imul
cli
out
in
outsb
push
repnz
pop
jmp
and
psraw
mov
shlb
pop
bound
mov
mov
push
sti
sti
gs
pop
sbb
test
call
je
xor
inc
enter
xchg
ficomps
and
add
stos
out
mov
iret
sub
rcrl
aas
mov
hlt
jg
pusha
ja
test
enter
and
mov
call
flds
mov
lods
out
das
sbb
ljmp
push
int
loopne
and
cli
pop
lret
mov
adc
jno
adc
out
mov
adc
add
inc
ljmp
cmc
mov
sub
cmp
cmp
dec
shl
nop
xchg
mov
xlat
mov
or
inc
sbb
and
push
fcoms
ja
push
mov
lcall
ljmp
sub
test
xchg
jno
push
into
popa
cwtl
jmp
xchg
jmp
or
and
lret
mov
jno
cmp
scas
fisubs
adc
mov
sbb
rclb
adc
scas
ret
and
add
scas
loop
jo
push
add
aaa
adc
adc
test
jmp
fs
cli
and
scas
cmp
cwtl
sbb
sub
std
decl
sbb
pop
mov
setno
jecxz
add
mov
and
sub
mov
nop
aad
push
jg
stos
pop
repnz
and
fistl
mov
lahf
inc
xchg
pop
outsl
loopne
aaa
test
in
out
jl
jl
sbb
and
outsb
xor
or
jno
mov
out
pop
jb
xchg
ret
mov
test
sub
sar
ljmp
or
mov
xchg
shl
jo
jne
inc
out
sbb
mov
push
sub
lock
call
lcall
sub
aam
mov
push
iret
xchg
xchg
or
add
and
jge
leave
push
xchg
adc
aaa
jbe
push
loope
jg
jmp
inc
out
pop
sub
push
neg
dec
xor
or
sub
fildl
mov
sti
les
mov
pop
xchg
jae
outsl
and
cmp
mov
clc
imul
xchg
adc
fucomp
int3
scas
adcb
sarl
cmp
insb
pushl
int
shlb
fwait
mov
outsb
mov
xor
add
pop
adc
or
jne
mov
incl
int
pop
xchg
push
or
pusha
jno
pop
in
inc
jno
sbb
dec
cli
in
cmp
notb
shlb
ss
inc
test
jb
int
sub
inc
inc
out
add
xchg
pop
xor
sti
btr
jo
shl
push
outsl
out
sub
sub
sbb
mov
js
ja
aaa
xchg
cli
incl
leave
repnz
lds
in
ds
jno
decl
or
push
leave
mov
dec
pop
xchg
sub
mov
pop
or
xor
mov
pop
xchg
int3
enter
icebp
call
jb
or
push
and
mov
jb
js
mov
xchg
mov
cmp
pop
dec
mov
or
and
rcrb
clc
ljmp
pushl
dec
mov
and
push
insl
data16
js
lods
and
clc
ret
push
cmp
push
je
repz
pop
fdiv
test
insl
aas
xchg
std
mov
cmp
std
xchg
push
stc
pop
inc
adc
push
insb
pop
cwtl
mov
fwait
sub
dec
mov
lcall
pop
pop
andl
rorl
sub
test
inc
incl
add
fsubrp
push
gs
mov
inc
sub
out
dec
das
sti
popf
mov
ss
jbe
lock
incl
mov
cwtl
cmp
push
add
mov
mov
xchg
dec
cmp
pop
sub
enter
imul
inc
lock
arpl
xchg
lea
test
add
jg
retw
inc
sbb
sub
cs
dec
and
icebp
cwtl
inc
xchg
or
jl
push
jae
mov
lahf
push
add
lahf
dec
call
add
sbb
xor
decl
rorb
sbbb
cmp
cld
not
cmp
rcrl
scas
xchg
decl
inc
push
or
push
mov
mov
jg
lret
pop
in
rcll
add
leave
enter
mov
fdivrp
mov
std
js
pop
test
cmc
pushl
inc
pop
cltd
mov
pop
inc
ret
xchg
inc
insb
and
adc
mov
jns
push
inc
imul
pusha
outsl
or
lock
jmp
int3
pushf
cmp
test
xor
gs
mov
cs
xchg
xchg
mov
jge
test
dec
xchg
ss
mov
into
xchg
mov
push
adc
and
imul
and
cmpsl
pusha
js
dec
push
repnz
xchg
add
adc
mov
orl
enter
push
imul
hlt
jno
insb
pop
add
and
jmp
fs
js
cltd
out
fstps
sub
pusha
jge
or
mov
lcall
adc
loope
fildll
movsb
bound
comiss
into
adc
push
outsl
cltd
xchg
sub
in
jae
mov
repnz
xchg
cmp
sub
pop
xchg
jnp
and
sahf
dec
dec
shll
or
into
fmulp
bound
inc
dec
mov
or
jb
mov
jns
repz
incl
dec
fldcw
adc
xchg
ljmp
push
mov
dec
mov
jle
incl
cld
inc
inc
mov
adc
xchg
sahf
cltd
cld
addr16
jg
sub
or
mov
mov
sbb
sbb
fisttpll
das
or
lock
stc
gs
pop
xor
cli
sbb
cli
jnp
std
push
mov
xchg
mov
sub
add
pop
fsubp
dec
jns
divl
stos
or
mov
xchg
add
add
and
sub
pushl
out
out
fdivs
daa
push
cmp
sbb
cld
mov
ficompl
loopne
gs
out
mov
pop
ficoms
decl
addr16
rcrl
clc
hlt
cmpsb
movsb
loop
push
addr16
jbe
aas
cmp
mov
aam
mov
inc
pop
sub
sbb
pop
xchg
imul
inc
xchg
data16
insl
jge
push
lds
clc
mov
jl
cmpb
push
mov
xchg
orb
inc
in
and
mov
jmp
pop
dec
push
mov
cmpsl
aaa
iret
out
movsl
mov
mov
xchg
mov
cmpsl
inc
popa
fsts
out
lods
xor
daa
call
jb
test
jg
push
cmp
out
daa
scas
pop
pop
push
sub
insb
fldl
js
mov
and
xor
sar
mov
cs
push
rcll
push
in
pushl
cltd
in
ljmpw
mov
mov
pop
lcall
mov
dec
mov
jg
jle
mov
dec
dec
filds
fbld
adc
mov
fsubrs
fs
cltd
push
decl
cwtl
mov
sbb
test
inc
jae
dec
and
clc
dec
or
stc
fwait
pushf
mov
cli
push
xor
cmpsb
popa
clc
dec
push
nop
cli
mov
cmp
cmc
dec
cli
jmp
push
xchg
lea
dec
loop
imul
xchg
push
mov
lcall
outsl
in
shr
ljmp
je
repnz
jg
stos
aaa
mov
pushl
mov
lods
jp
int
imul
sub
jb
into
and
aaa
std
pop
dec
inc
cmp
push
mov
sub
std
lahf
xor
es
sub
andl
jge
fadd
mov
pop
cmpsl
lea
inc
xor
pop
ss
or
dec
mov
insb
ja
mov
insb
je
out
ret
xor
icebp
cmp
adc
xor
dec
sbb
or
cltd
adc
loope
mov
sahf
xor
adc
bound
xchg
in
das
test
jae
out
sub
in
hlt
push
popf
and
call
ret
jmp
aam
xor
jle
inc
fidivrs
pop
xorl
stos
mov
add
sbb
scas
test
fcomip
cmp
dec
mov
and
js
fistpl
inc
in
push
inc
fimuls
nop
call
add
je
push
mov
sub
dec
mov
pop
in
pop
inc
in
adc
popa
fdivr
ljmp
ret
sar
icebp
xor
pushf
add
cwtl
jp
aas
pop
sar
mov
hlt
push
jae
and
enter
ljmp
xchg
mov
mov
xor
xor
xor
mov
push
push
hlt
xor
jns
push
sub
lcall
cmp
adc
bound
xor
jp
leave
pop
jbe
lcall
push
or
repz
popa
add
rol
imul
scas
pusha
movsl
movsb
call
jnp
and
bound
mov
push
decl
pop
lods
mov
add
fdivl
imul
scas
clc
fildl
jo
add
mov
pusha
add
pop
push
mov
jle
les
sbb
out
mov
cmp
icebp
stc
adc
mov
out
mov
in
ret
cmpl
jns
mov
rclb
inc
negb
mov
iret
or
pushf
lcall
dec
jb
sub
movsb
repnz
cmp
inc
movsl
int3
mov
decl
ja
fimuls
movsl
pop
pop
inc
pop
cltd
inc
and
notl
hlt
aad
clc
push
cli
xchg
test
rcrl
ror
mov
ljmp
lret
jl
pop
cwtl
out
cli
mov
mov
out
jl
and
repnz
daa
movsb
mov
pop
dec
fbstp
adc
sbb
stos
inc
mov
rol
mov
gs
lcall
adc
push
mov
andb
fwait
lcall
mov
push
insl
das
stos
mov
adc
sar
out
insb
lea
call
insb
aas
jns
mov
repz
sub
mov
add
pop
loopne
sbb
shll
cmp
jp
fdivs
mov
in
out
push
xlat
imul
fs
adc
lock
add
adc
jmp
ficompl
mov
push
dec
fucomp
inc
jmp
movsl
stos
mov
dec
dec
mov
in
leave
sub
loop
inc
fninit
cmp
mov
movsl
dec
sub
popf
jne
inc
jecxz
or
lods
jno
test
decl
lcall
test
xor
popf
les
fiaddl
dec
test
roll
in
push
ret
inc
mov
inc
fisubrl
dec
pop
icebp
sub
or
push
push
push
inc
movsl
xchg
sbb
sub
mov
jbe
call
incl
nop
xor
sti
sahf
push
adc
bound
inc
mov
imulb
or
xor
ljmp
icebp
pop
cli
cmp
dec
jmp
and
js
addb
js
outsb
xlat
cmp
js
and
xchg
je
roll
mov
lcall
jb
mov
and
push
cmc
jl
scas
scas
lods
sub
icebp
icebp
sub
xor
daa
push
or
xchg
jmp
inc
scas
into
outsl
clc
ljmp
or
or
pop
xchg
lret
pusha
cmp
insb
and
add
pop
fistpl
aad
fisubrs
pop
insl
add
fistpl
imul
out
xchg
cld
jmp
cwtl
cmpsl
sub
movhps
cltd
dec
loopne
insb
pop
jne
jmp
outsb
pop
lahf
add
cmp
sbb
xor
test
cmp
dec
imul
out
ja
fiadds
dec
and
xbegin
fwait
movsl
nop
dec
decb
test
push
popa
call
ret
pop
dec
mov
mov
ljmp
andb
sbb
movsb
mov
jmp
out
cwtl
xchg
dec
call
test
sarb
out
push
insb
es
daa
lea
ljmp
jnp
into
dec
stos
inc
cmc
cmp
ljmp
jo
mov
add
jb
mov
sar
xchg
movsb
flds
push
movsb
jp
fdivrp
ljmp
jl
mov
movsl
rcrb
cmp
xor
and
lock
cwtl
psubb
ja
insb
lods
mov
cmp
stos
sbb
mov
adc
mov
lods
adc
mov
sbb
call
dec
in
mov
jecxz
add
sti
mov
cmc
cmp
icebp
cltd
mov
push
push
mov
int
roll
ficomps
idivb
xor
ljmp
sub
xchg
stc
pop
sbb
mov
pop
lcall
ja
stos
sbb
add
mov
stos
decl
lcall
jo
rcrb
mov
std
sub
sti
jge
dec
sbb
pop
sti
je
cltd
fildll
pop
fdivrs
xchg
pop
sbbl
ja
fcompl
lods
xor
fsubs
test
or
jmp
mov
inc
in
pop
jbe
ret
fwait
xchg
mov
push
sbb
push
and
mov
fwait
sub
mov
lock
jg
mov
push
add
lcall
hlt
fists
dec
scas
adc
cld
adc
pop
addr16
fdivs
std
cmpb
das
gs
pop
mov
jmp
add
in
sti
dec
push
loop
cmpxchg
dec
sub
push
ret
fldenv
mov
dec
es
pop
inc
insl
stos
roll
ja
rorb
loope
or
cs
ljmp
mov
in
cwtl
in
xor
jp
add
adc
enter
jne
in
cmp
int
cmp
xor
lcall
out
mov
hlt
pop
rorl
or
pushl
jb
sub
pop
cmp
cmp
nop
movsl
jbe
call
mov
sub
adc
out
dec
fidivl
mov
inc
sub
fiadds
jmp
xchg
hlt
cmpsl
mov
jmp
cmp
lcall
and
jmp
ret
jp
imul
pushl
ret
mov
or
push
loopne
clc
jns
les
fstps
add
adc
mov
stc
mov
test
mov
test
lods
jmp
xchg
cmp
and
jmp
lds
inc
mov
jle
ja
xorb
sub
pushl
mov
adc
int
xor
arpl
pop
fimull
les
cmovg
lea
int
xor
cmpsb
xchg
pop
jo
jmp
cmp
or
int3
lock
pop
adc
jl
inc
mov
inc
loope
and
mov
data16
or
push
xchg
mov
sub
aas
add
stos
fnstsw
jmp
gs
xchg
je
push
mov
fstps
mov
in
jl
sbbb
pop
cli
pop
fisubrs
vcvtps2dq
negl
ljmp
mov
mov
jecxz
aad
jecxz
mov
mov
outsl
lret
lea
push
mov
test
das
in
mov
mov
mov
or
jecxz
popf
sub
xor
dec
inc
ss
incl
mov
jge
or
cld
mov
jne
inc
add
push
insb
popf
pop
adc
incl
pusha
mov
pop
test
mov
pushf
shlb
es
lods
scas
dec
add
jl
pop
in
ds
filds
sbb
push
mov
mull
in
mov
xor
scas
pushf
ret
cwtl
add
call
mov
std
sub
inc
mov
mov
and
cmp
dec
xor
adc
hlt
jns
rolb
js
cli
xchg
in
cmc
decl
rcr
dec
leave
dec
or
add
outsl
nop
inc
test
incb
sbb
fs
jg
es
mov
jle
lret
lret
dec
jle
jns
mov
dec
mov
mov
call
in
rcll
pushl
jno
pop
adc
jle
mov
or
xchg
xchg
dec
mov
mov
hlt
rorb
into
xchg
adc
jno
arpl
xchg
mov
jg
cmp
int
sbb
mov
jb
es
leave
leave
xor
fcoms
hlt
clc
rorb
mov
cld
push
sbb
cmp
ljmp
fcmovnb
dec
movsl
popf
test
dec
pushl
daa
cltd
je
sub
pop
aam
mov
inc
or
repnz
outsb
pop
fwait
aam
lcall
inc
adc
mov
fcoml
sbb
cmp
push
loop
push
pushl
lret
loopne
sbb
out
out
aaa
minps
add
xchg
sbb
push
jp
movsl
ljmp
lret
dec
sbb
mov
ja
outsl
pusha
dec
xchg
pop
sti
xchg
sti
jne
xlat
cwtl
insb
scas
icebp
int3
or
lret
out
push
rolb
inc
in
test
push
outsl
fnstsw
mov
lret
mov
mov
loop
roll
ds
nop
xorl
pop
adc
rclb
and
ja
ljmp
sbb
movsb
sbb
mov
pop
mov
xchg
movsb
popf
mov
mov
jmp
lcall
in
leave
lret
fiaddl
or
adc
and
and
enter
push
jg
fmuls
mov
cmpb
jns
mov
ret
jecxz
pop
xchg
fcompl
shrl
push
movsb
addb
mov
cmpsl
mov
xor
les
push
decl
xor
mov
test
sub
xor
sbb
nop
out
dec
pop
or
jmp
fldcw
enter
outsl
jl
pop
dec
stc
xorb
cmp
mov
push
add
ret
or
dec
adc
aaa
stos
jp
add
js
or
jmp
in
sub
stc
mov
aad
lahf
int
outsl
adcl
push
call
sarb
add
ja
pop
mov
or
inc
mov
test
cld
pushl
shll
xchg
xor
inc
jnp
xor
addb
or
mov
mov
lcall
decl
into
out
sbb
pop
mov
movsb
pop
fcompl
sub
sub
js
lods
pop
in
dec
shll
sub
lcall
in
push
and
dec
cmpb
mov
pusha
aad
mov
push
mov
sar
ljmp
cmovo
adc
inc
push
xchg
call
dec
adc
mov
dec
add
or
not
push
cmp
or
mov
pop
or
add
pop
xor
and
cmp
mov
fiadds
sar
jmp
inc
lcall
sub
out
aam
call
shll
outsb
sbb
inc
mov
and
jmp
xor
xor
lret
cmpsb
call
mov
sub
stc
ss
in
std
pop
sub
mov
lret
mov
call
xlat
jmp
mov
fs
hlt
inc
mov
call
push
xchg
cmpl
mov
out
pop
lods
sbb
push
dec
scas
fs
lcall
cld
and
es
aas
ret
push
adc
fidivrs
pop
stos
in
jecxz
and
lcall
or
pop
nop
xor
pusha
pop
test
lods
or
push
ljmp
jbe
aam
out
adc
and
loope
adc
xlat
pop
outsl
pop
dec
lcall
std
cmp
test
pop
nop
mov
jle
sbb
mov
clc
inc
push
arpl
sbb
sti
adc
mov
pushl
fimuls
movb
dec
clc
repz
sbb
inc
imul
inc
fs
movsl
inc
clc
dec
jmp
dec
pop
or
push
iret
pop
aaa
int
in
fmul
imul
sub
into
int3
dec
rorl
notb
mov
aad
xchg
mov
in
nop
das
sub
mull
pop
js
cltd
sarl
out
mov
dec
pusha
push
pop
inc
inc
mov
push
cwtl
cmp
mov
push
out
xor
decl
rorb
push
pop
pop
mov
jbe
adc
dec
fsubrs
adc
mov
jb
push
add
pusha
bound
data16
repnz
sbb
fists
pushl
nop
mov
sbb
jp
adc
jmp
inc
popa
sbb
aam
shr
xor
adc
shrb
idivb
stc
lock
mov
je
jno
decl
pop
lahf
mov
or
shrl
lea
pop
cld
pop
nop
xor
popa
xchg
mov
inc
inc
sbb
call
mov
sub
icebp
add
cmp
jmp
call
dec
stos
push
xchg
sbb
xchg
fistps
jecxz
lcall
into
rolb
pop
xlat
mov
lahf
rcrl
fsubl
add
push
sbb
test
rcrl
push
xchg
cli
aaa
dec
les
rcrb
mov
add
popa
call
ret
cli
roll
xchg
and
jp
cmp
xor
call
into
fbld
test
jae,pt
jnp
mov
out
and
das
mov
push
inc
and
jmp
mov
xor
pop
fmuls
out
hlt
pop
pop
mov
inc
dec
push
fbld
icebp
jp
inc
int3
pop
mov
jp
sub
push
dec
jb
xor
mov
fs
int3
aam
mov
ljmp
jl
jb
test
rcll
test
cwtl
xchg
leave
call
or
bound
ljmp
cmp
jp
dec
or
and
and
in
sbb
shll
jle
mov
decl
or
jge
in
or
jg
adc
jmp
gs
dec
lret
pop
or
aam
push
mov
fists
enter
movsl
lods
icebp
lahf
push
scas
aam
call
pushl
pop
mov
icebp
and
lock
cmp
jge
mov
jmp
movsl
or
and
cmpsb
jge
jmp
xchg
adc
sbb
xor
and
dec
fistpl
cmc
scas
mov
xchg
data16
jno
jb
dec
jp
cmc
jae
or
cwtl
adcb
aad
ss
into
push
jbe
fldl
dec
scas
mov
stc
add
add
jae
frstor
cmp
pop
mov
negb
xchg
and
fstps
data16
cmp
test
fcmovb
movsl
xchg
fldcw
icebp
jnp
xchg
andl
inc
rol
dec
jno
and
lcall
push
cmp
adc
icebp
enter
inc
call
jl
lods
ret
inc
push
sbb
sbb
jecxz
insl
sarb
and
ljmp
aas
cmp
and
ret
jmp
push
movl
jecxz
cli
mov
clc
out
or
pop
into
and
leave
xor
movsl
add
add
pop
adc
mov
xor
popf
stc
addr16
xchg
and
je
inc
jg
leave
mov
sbb
fadd
mov
inc
push
pop
jno
divb
add
jmp
mov
out
sahf
fiaddl
jo
xchg
mov
jne
fwait
inc
iret
roll
or
jmp
mov
sahf
dec
scas
xor
pop
push
iret
test
pop
jns
mov
scas
clc
decl
xor
fstl
shl
lds
sbb
lcall
popf
es
fdivl
mov
bnd
insb
mov
cmp
jge
jg
sub
incl
mov
ss
dec
out
pop
loopne
jp
push
and
out
lea
mov
mov
prefetch
aas
lcall
cmp
mov
jp
insb
fistl
movsb
add
stos
sub
lcall
dec
xchg
jecxz
enter
scas
pop
or
sub
pop
sub
fsubs
xchg
sbb
mov
cmp
and
rcll
jbe
dec
xchg
insb
std
ljmp
xchg
pop
mov
popf
ret
jl
popf
xchg
repnz
push
mov
iret
call
pop
pushl
mov
pop
push
xchg
ja
lcall
data16
and
mov
call
dec
das
push
fstpt
and
lock
int3
mov
aad
call
cld
mov
int3
test
jne
mov
xchg
pop
lahf
call
out
xor
add
sub
rcrb
dec
xor
andl
ljmp
or
fldt
ficoml
adc
pop
leave
jbe
sub
and
mov
jae
cltd
adc
les
sbb
adc
mov
lods
xor
push
nop
pushf
call
in
mov
stos
mov
mov
xchg
add
popf
mov
sub
jle
jl
negb
addr16
iret
or
adc
jmp
pop
orb
xor
cmp
jle
cltd
jl
sub
xchg
stc
data16
stc
pop
add
call
adc
repz
sbb
rorl
jecxz
and
or
jg
mov
aas
loop
out
cmp
ljmp
mov
aaa
dec
mov
loopne
cmp
adc
push
add
fbld
inc
xchg
pop
repnz
mov
adc
mov
nop
jae
mov
mov
call
fiaddl
cld
or
into
insl
or
pushf
dec
out
jmp
aas
jg
sub
sbb
cld
push
xor
mov
sbb
push
lcall
cmp
cwtl
imul
cmp
je
jl
push
mov
incl
jl
dec
dec
lret
rcll
xchg
xor
pop
add
inc
hlt
mov
stos
lcall
mov
push
xchg
mov
inc
lcall
mov
icebp
inc
xor
mov
in
sti
push
push
jg
fisttps
or
scas
call
lahf
cmp
loopne
in
mov
call
inc
jb
dec
sbb
inc
add
add
pop
sub
decl
mov
fldcw
mov
ljmp
mov
mov
pop
and
lea
test
lret
fiadds
push
dec
incl
cmp
sub
mov
loop
faddl
mov
adc
jle
mov
mov
sub
data16
popf
inc
aad
test
mov
mov
call
cmp
insb
jbe
fsubl
xchg
cs
mov
test
in
inc
xchg
jge
inc
outsb
mov
ljmp
xor
popf
sbb
dec
xchg
cltd
stc
ret
ljmp
or
push
leave
loopne
out
or
mov
jnp
mov
hlt
scas
dec
jp
inc
adc
ret
mov
jge
orb
cmp
aas
std
mov
and
imul
sbb
mov
cmpsl
cmpsb
mov
sbb
pop
pushf
daa
mov
daa
lock
jg
inc
mov
dec
int3
hlt
imul
cmp
mov
inc
in
hlt
dec
jmp
jnp
xor
es
xchg
out
dec
sub
adc
pusha
pop
mov
out
inc
je
pop
cmp
loope
nop
rolb
out
xor
push
jne
insb
push
mov
cmp
jns
call
sub
cld
repz
mov
bnd
out
inc
inc
or
les
sti
xchg
out
sbb
mov
ljmp
mov
out
and
mov
test
add
and
adc
and
cmpsb
sbb
loope
testb
adc
in
ja
in
test
ja
aas
arpl
pushl
xchg
addr16
les
jl
mov
pop
cmpl
ja
call
jge
movsb
mov
shl
aam
das
pminub
push
sti
dec
insb
and
call
inc
cld
adc
inc
push
in
jp
bound
sub
call
mov
addr16
adc
xchg
add
push
adc
fisubrs
jb
mov
call
cmc
out
test
out
cmc
adc
sbbb
addr16
cmp
lods
jmp
jo
mov
xchg
or
aaa
pop
cmp
cmp
jge
es
or
jg
jmp
jno
fistpll
xor
dec
add
call
xchg
cmc
pop
les
xor
outsb
pop
jg
inc
repnz
cmpsl
pop
push
mov
adc
jmp
jbe
adc
cmp
fnsave
jl
xchg
mov
mov
pop
and
pop
jg
cmp
cmpb
or
xchg
mov
cwtl
jno
scas
mov
clc
mov
dec
adc
inc
addb
lock
shrb
inc
adc
xchg
and
das
pushl
cmp
loop
divb
pusha
daa
adc
and
loopne
add
and
mov
jne
pushl
std
push
pop
movsb
mov
mov
ret
aam
add
mov
jmp
lahf
push
pop
data16
call
ds
insl
popf
ja
jecxz
shr
scas
jmp
inc
push
and
imul
jns
mov
mov
js
int
cli
xchg
jecxz
sbb
xorl
aam
pop
hlt
cmp
mov
icebp
call
in
and
stos
xchg
int3
movsb
jb
inc
mov
sub
push
pop
out
inc
fs
aas
dec
sub
mov
shll
pop
shrb
mov
out
call
mov
adc
mov
lods
filds
fnstsw
outsl
mov
mov
enter
fs
mov
fcomip
dec
xor
jb
fiaddl
test
mov
sub
add
jmp
call
testl
sub
pop
repz
mov
sti
pop
pop
jmp
dec
sub
cmp
mov
jne
scas
adc
or
fs
mov
std
push
ljmp
loopne
sahf
sbb
imul
stos
fisubrs
stc
dec
rorl
aaa
or
inc
lods
mov
jge
or
push
add
jl
push
sbb
pushl
sbb
adc
popf
inc
inc
out
movsb
roll
cmp
inc
jae
push
dec
push
aas
addr16
xor
and
ja
in
in
cmc
aad
decl
sbb
cmp
sbb
cmc
cmp
pop
lock
cli
js
or
inc
or
mov
ljmp
sbb
jno
fistpll
xor
test
push
or
mov
cmp
xor
das
adc
jle
jo
dec
pop
loop
cld
jmp
inc
or
decl
dec
or
jp
mov
ljmp
lcall
cli
dec
mov
inc
jge
pop
adc
sahf
mov
jmp
bound
mov
jmp
jnp
test
in
je
push
push
lock
ret
sbb
add
xor
push
sti
jle
clc
rolb
jne
jne
fmul
mov
pushl
lock
enter
mov
and
mov
cld
jmp
jmp
lods
bound
jle
sub
push
sbb
fisubs
inc
jmp
sub
and
cs
lods
push
sbb
adc
or
into
sbb
jo
inc
insb
or
cmp
dec
fidivs
lock
shrb
std
mov
push
sub
push
stc
push
jns
int
mov
decl
inc
clc
nop
push
sbb
jo
loope
dec
and
fdiv
inc
and
cmpsl
inc
insb
pop
decl
xor
pop
pop
inc
pop
xor
ja
jns
push
movsb
or
fneni(8087
and
jmp
cmp
out
add
fadds
xchg
dec
fiadds
inc
cltd
cwtl
or
cmpsb
popf
data16
mov
add
incl
fs
or
faddp
xor
fidivs
jg
fdivrl
cmpsb
aaa
xchg
push
jb
jmp
jg
cmp
icebp
pushf
les
sbb
adc
loope
cli
push
push
sub
dec
mov
hlt
pushl
jae
pop
or
cmp
pop
dec
cmc
jmp
dec
inc
and
rcrb
inc
decl
es
inc
mov
idivb
dec
dec
cmp
jmp
pushl
fwait
xchg
xchg
inc
hlt
cmp
and
test
hlt
pop
fcomip
jmp
leave
cmpb
mov
insb
push
sahf
incl
mov
sar
call
push
or
fdiv
movsl
cltd
cs
leave
imul
sbb
pop
push
inc
mov
ja
mov
lods
and
xor
xchg
into
dec
das
push
adc
incl
cmp
call
test
jge
ds
jo
mov
roll
sub
out
inc
dec
decl
xor
push
jmp
xchg
lods
push
mov
ljmp
aad
cmpsb
lret
ret
nop
xchg
dec
mov
iret
pop
jmp
jg
mov
outsb
or
lods
lcall
jge
jp
enter
xchg
xchg
adc
int3
imul
stc
or
sti
xor
jmp
icebp
xchg
ja
push
sbb
in
cltd
jo
xchg
push
push
add
notb
dec
cmpsb
fdivr
fldenv
gs
adcb
aas
lock
insl
adc
incl
mulb
test
imul
xchg
movsb
and
cwtl
hlt
ljmp
pusha
cmpsb
push
lret
xchg
jnp
pusha
imul
mov
je
mov
cmp
ljmp
pop
sub
or
push
icebp
insl
or
xchg
cmp
rcll
fbld
ljmp
xchg
jge
lock
cmp
in
decl
push
push
pop
addr16
sub
bound
add
and
sar
subl
sub
cmp
loope
rol
aaa
lea
sbb
repnz
jl
imul
inc
jge
fsubrs
les
xor
dec
xor
sbb
repnz
insb
fiaddl
lea
pop
out
in
mov
pop
aam
incl
clc
aas
and
and
jge
arpl
dec
incl
cld
mov
loope
cmpsl
out
sub
mov
dec
test
sbb
push
enter
jno
xchg
xchg
mov
fs
xchg
repz
jmp
lcall
jno
cmc
inc
and
into
xchg
iret
int
pop
movsl
jno
orb
pop
add
call
mov
jo
nop
cmp
mov
test
lcall
fs
add
or
and
jmp
in
adc
lock
jmp
xchg
adc
test
movsb
push
mov
cwtl
lcall
call
pop
cmpsb
push
inc
xor
xor
and
je
iret
loop
add
loopne
imul
or
lods
das
sti
jle
pop
addb
jmp
add
pushl
xor
fs
mov
js
push
add
ret
je
das
lahf
iret
insl
lret
rorl
inc
inc
ss
mov
jge
or
cmp
jle
mov
inc
test
repnz
aam
dec
sbb
lcall
shlb
pop
mov
jnp
cmp
addb
jge
jne
cli
cmp
pushl
pop
xor
mov
insl
sti
jnp
loopne
mov
in
cmp
push
call
js
dec
mov
loopne
imul
xor
xor
fstl
adc
jmp
xchg
push
fidivs
lods
pop
jno
mov
and
cmc
mov
xor
jo
sbb
xchg
enter
pop
xchg
lds
in
es
incl
mov
movsb
shll
sbb
cmp
xchg
jge
fcompl
mov
xorl
add
test
sbb
sub
insl
lea
push
in
mov
add
mov
add
mov
repz
test
lcall
filds
mov
lret
push
sbbl
dec
xor
bswap
fsubl
push
icebp
repnz
iret
lcall
pop
lods
jo
rcr
mov
sub
sahf
ja
js
mov
int
nop
mov
mov
fnstcw
cld
jl
out
out
orb
lcall
incb
daa
mov
cltd
insl
adc
jae
stos
dec
mov
inc
into
dec
adc
pushl
imul
sbb
pushf
dec
pop
call
incl
inc
sub
mov
inc
pusha
loopne
pop
mov
sbb
and
les
mov
xor
ret
int
dec
scas
mov
scas
mov
mov
sub
in
mov
mov
ja
adc
or
sub
pop
mov
and
jmp
lcall
add
mov
je
and
push
fs
cli
xchg
inc
pop
or
out
in
lock
decl
inc
push
sub
lcall
pop
lock
pop
hlt
lcall
mov
sti
sbb
std
mov
out
mov
es
leave
nop
js
out
rorl
cmp
stos
mov
lea
je
mov
je
scas
addr16
out
mov
inc
jo
mov
and
cmp
ljmp
movsb
dec
dec
cmp
cmp
cli
xchg
iret
or
je
jne
mov
cmp
decl
jmp
sbb
mov
notl
js
mov
sbb
pusha
jle
pop
cmc
push
pop
sti
lcall
movsb
sbb
aam
push
fucomi
pushf
out
cmp
lcall
add
adc
adc
outsl
ljmp
xchg
in
test
lahf
dec
repz
sub
mov
xchg
mov
mov
les
int
mov
jl
mov
subb
xchg
mov
loop
mov
insb
pusha
test
jne
jno
sbb
ljmp
xchg
mov
es
mov
subl
ss
mov
jns
xlat
push
dec
xor
jae
scas
jge
dec
jge
shl
inc
das
xchg
cwtl
je
ljmp
mov
sbb
jecxz
add
and
in
push
sub
pushl
ud0
gs
inc
notb
xlat
mov
cmp
js
cmp
jg
inc
cld
cmpsl
mov
cmp
sbb
stc
daa
ljmp
aad
pushf
nop
out
jbe
stc
and
mov
ja
xor
cmpsb
incl
cmp
jmp
xor
push
or
dec
jo
adc
sub
mov
mov
into
aas
cli
jmp
call
jnp
int
clc
inc
popa
and
icebp
pop
inc
sbb
push
or
cli
jmp
adc
out
push
mov
mov
into
push
or
push
arpl
repnz
call
pop
ds
incl
loopne
outsl
pop
out
arpl
mov
or
sahf
mov
sub
jge
stos
mov
lea
mov
inc
hlt
stos
and
fwait
cmc
shl
xchg
popf
pop
cmc
jg
ds
adc
loopne
pop
sbb
xlat
xchg
decl
aas
or
ljmp
jl
int
push
cmp
jno
pop
cmp
jae
dec
roll
cmp
adc
xchg
push
cmp
mov
jge
pushl
push
sahf
repz
fucomp
lahf
in
add
and
loope
mov
les
pushf
sbb
jg
jmp
pushf
adc
icebp
popf
dec
jle
sbb
repnz
push
jge
dec
mov
orb
call
cmp
nop
xor
adc
mov
flds
cmp
lods
shlb
outsl
loopne
aad
call
subl
cmc
mov
mov
add
sub
cmp
insl
aas
jg
dec
sbb
shr
xchg
mov
inc
test
push
imul
lods
xchg
add
and
jmp
or
dec
sbb
stos
movsl
popf
je
inc
cmpsl
jnp
and
mov
test
into
push
filds
mov
inc
inc
xchg
aad
nop
cmpsl
push
inc
sbb
incl
mov
pop
mov
and
in
loop
cmp
dec
out
push
or
lea
push
pop
pushf
cmpsb
jne
jge
jae
cmp
repz
mov
loope
jmp
and
push
push
sbb
pop
and
clc
int3
cmp
dec
inc
push
push
clc
add
lretw
sahf
xor
xchg
mov
jmp
je
loopne
push
mov
mov
fiadds
push
popf
and
mov
decl
mov
mov
stos
or
cmpsb
push
cli
sbb
repz
add
mov
imul
fidivl
aas
incl
das
adc
inc
test
into
sub
jae
movsl
sbb
jl
lock
out
pop
cmpsb
cmp
adc
pop
js
and
sbb
jp
add
pusha
les
outsb
mov
lcall
sub
or
mov
jle
in
jecxz
decl
or
pop
testl
movsl
outsl
and
das
ds
xchg
ljmp
sbbl
xorb
cs
in
inc
in
lods
loop
mov
jmp
cld
jge
aaa
pusha
push
rolb
shrl
jl
enter
sub
inc
dec
pushl
nop
add
pop
pop
loop
add
jb
in
out
loope
or
out
sbb
inc
sub
cmp
dec
popf
gs
push
push
dec
insb
mov
stos
inc
clc
adc
cmp
sti
insl
ret
mov
lcall
pop
in
lock
and
push
testl
jo
ljmp
movsb
fwait
sahf
sbb
push
out
jo
lcall
jne,pn
adcb
lret
subl
fdivrl
shll
push
push
push
das
cli
and
sbb
shr
lret
call
das
clc
jg
pop
sti
cmp
or
fbld
pop
into
dec
cmp
jbe
mov
mov
popf
in
cmpl
sbb
adc
mov
cmp
loopne
mov
pop
aaa
vsqrtps
pop
fisubrs
inc
lcall
jns
fldl2t
shl
pop
ja
jnp
jg
mov
lret
push
test
sub
dec
sub
out
mov
jecxz
jmp
push
dec
mov
fs
xor
decl
mov
leave
xor
inc
lods
adc
cmpl
es
mov
aas
or
stos
in
icebp
lcall
xor
int3
in
pop
dec
sub
xor
push
imul
xchg
sub
or
imul
addr16
call
jbe
jge
and
jge
pop
mov
repz
outsl
pop
jecxz
cmp
adc
cmc
xchg
das
rorl
mov
push
jg
cmc
cwtl
or
push
ljmp
jne
sbb
movsb
aaa
and
out
clc
mov
and
sbbl
icebp
je
lahf
divb
inc
test
sar
call
shrl
xor
call
jge
lcall
pop
test
sbb
incl
push
pop
inc
mov
ficompl
push
xor
rorb
xor
mov
sub
cmp
test
rcll
or
das
js
add
popf
stc
inc
popf
pushf
mov
push
push
cld
and
and
adc
mov
sbb
lcall
fs
es
lret
jge
and
xchg
add
scas
cli
out
jg
jp
and
pop
lahf
sub
mov
cmp
leave
jmp
cld
pop
call
cmp
insb
inc
repz
or
mov
xchg
lock
lea
inc
shl
inc
cli
das
in
pop
cmp
lcall
gs
jecxz
sar
xor
xor
ret
daa
scas
xchg
call
ret
mov
loop
or
sti
xlat
jae
and
jmp
cmp
out
leave
dec
or
xor
xchg
pushf
insb
popa
sbb
pop
pop
decl
or
cmc
cltd
cs
in
inc
xor
scas
push
cmp
lock
inc
inc
push
pop
int
push
ljmp
mov
sub
sarl
jge
push
loopne
jns
fdivp
outsl
and
aam
stos
bound
xorl
xor
sub
test
mov
lock
rcr
adc
jnp
js
ret
dec
shrl
imul
movsl
and
pusha
inc
enter
adcb
sub
mov
or
pusha
hlt
mov
cld
int
lcall
push
push
sbb
mov
pop
xchg
dec
mov
mov
incl
cld
mov
addr16
push
jp
and
jnp,pn
pop
jle
sahf
jne
lret
add
scas
push
xchg
cwtl
pop
inc
js
cli
ss
jbe
mov
xchg
xchg
jl
xor
aas
insl
bound
sbb
jns
inc
in
dec
rcr
mov
fwait
or
shll
adc
call
fistpll
pop
mov
mov
std
xlat
bound
cmp
daa
repz
jb
ljmp
dec
repnz
add
rcrl
in
pop
imul
call
adc
sbb
adc
lcall
pop
sahf
xchg
cli
push
fsubr
ljmp
clc
sbb
fsts
inc
jg
movsl
iret
xor
fists
jle
int
mov
clc
decl
aaa
add
rcrl
sbb
xor
ja
repnz
push
mov
add
fisttpll
ret
cld
add
popf
addr16
add
sbb
fbld
decl
pusha
pop
pushf
insl
cvtdq2ps
rol
roll
les
cmpsb
lods
and
or
movsl
jmp
or
pop
xchg
sbb
push
aad
add
cli
decl
dec
fwait
js
rcrb
mov
sub
das
cltd
lret
pop
loop
lock
or
push
adc
cmp
mov
mov
jl
stos
sub
push
leave
outsb
xchg
sub
mov
inc
ss
xchg
lods
out
lcall
sub
lea
xchg
add
lods
xchg
ja
adc
push
and
rorl
movsl
ljmp
lret
mov
lods
imull
das
dec
lea
mov
int
cmc
add
dec
inc
mov
push
icebp
movsb
and
clc
scas
jmp
out
and
mov
add
cmp
lcall
jmp
mov
fwait
lcall
inc
scas
add
lock
fmuls
fsubl
pop
xlat
mov
inc
xor
mov
push
clc
lds
xchg
mov
lret
adcb
mov
out
dec
repnz
popf
sub
lcall
out
inc
add
sbb
jg
lock
test
flds
or
pushl
cmp
cmp
int3
inc
xchg
call
xchg
and
inc
mov
repz
or
rclb
movsl
inc
arpl
adc
jl
scas
ljmp
imul
cmp
adc
lahf
ret
enter
add
lds
pop
cs
jp
ljmp
cmp
sbb
adc
icebp
daa
je
icebp
mov
aam
loope
sbb
inc
push
mov
cmpsb
pop
xlat
dec
hlt
ret
mull
das
pop
xor
xchg
out
sub
cmp
clc
sti
popf
bnd
mov
dec
shrl
pushl
cli
test
stos
mov
jle
into
lods
fstl
in
mov
mov
test
aas
push
inc
stos
or
enter
icebp
ja
ja
sahf
mov
fisubs
scas
sbb
movsl
mov
stc
ja
push
fidivl
out
add
negl
mov
leave
ljmp
imul
push
loop
dec
std
ljmp
pop
add
pop
idivb
xchg
fildll
stos
adc
add
outsb
je
jge
cmpsl
inc
dec
fcomip
call
ret
jl
stc
movsl
mov
rorl
in
jno
sbb
push
pop
add
arpl
and
out
sub
outsb
lock
rcl
test
in
pop
mov
rcrl
jg
das
xchg
jnp
addr16
jg
mov
cmpb
jle
mov
shrb
jmp
loope
inc
xor
stos
jnp
xchg
mov
add
mov
lret
call
mov
scas
sbb
pop
pop
add
les
jg
xor
imul
fidivrs
insl
andl
sub
push
sti
pushl
push
cmc
mov
mov
mov
push
cs
and
xchg
xchg
incl
mov
jb
in
inc
mov
cmp
ja
ret
imul
dec
mov
adc
int
or
dec
aam
push
pop
pop
jo
pusha
sub
mov
push
adc
fdivs
in
jmp
sub
insl
jmp
pop
mov
fwait
test
cmp
mov
xor
lahf
lcall
jne
insb
jb
data16
and
shll
pushl
xor
ror
cmp
pusha
jmp
pop
adc
insb
and
jo,pn
cmpsb
cmp
scas
adc
incl
or
and
xchg
or
test
ljmp
aad
inc
out
pop
inc
inc
inc
pop
cld
sub
decl
mov
ds
adc
pusha
pop
imul
rol
stos
ss
into
mov
inc
lock
mov
and
decl
lret
out
pop
xor
aad
int
stos
popw
cmp
into
or
ficompl
push
add
notb
cld
call
push
mov
outsl
pop
jl
mov
lea
mov
das
arpl
jp
roll
inc
pop
aad
sbb
cld
cld
decl
pop
push
sub
add
pop
fdivrs
fcmovne
lea
jmp
mov
call
repnz
cmp
xchg
and
jecxz
xchg
mov
lods
push
in
ljmp
outsb
mov
adc
mov
xchg
fs
xchg
fisubl
mov
call
das
enter
mov
mov
mov
leave
push
xor
lds
xor
test
decl
cwtl
int
ja
lret
inc
mov
fdivs
jnp
xchg
mov
call
sahf
in
stc
dec
and
and
loop
inc
fsts
pusha
incl
xchg
es
je
jo
pusha
std
sbb
mov
inc
out
and
dec
out
add
jo
clc
or
lcall
pop
xchg
mov
mov
adc
orb
and
imul
lods
ljmp
add
scas
ljmp
fcmove
or
inc
xor
add
call
clc
out
fwait
adc
xchg
loopne
or
fnsave
mov
test
xchg
mov
or
and
out
jmp
std
out
decl
push
lret
xor
xchg
in
sbb
aam
repz
or
cmp
ss
out
scas
cmp
adc
mov
jae
sub
add
adc
insb
adc
test
xchg
jmp
mov
or
sbb
scas
mov
lods
sti
or
inc
add
je
loop
cmp
ds
add
out
fadds
mov
xor
push
icebp
jmp
cwtl
mov
xor
pop
mov
outsl
jg
dec
mov
cmpsb
fs
mov
fcos
ljmp
popa
lret
cld
xchg
inc
push
jo
in
fldcw
jmp
or
aas
cmp
sbb
pop
aad
lods
pop
and
in
bndldx
jmp
movsb
movsl
stc
test
sahf
push
iret
cmpsb
cli
pushf
mov
cmpb
in
and
popa
repz
add
or
stc
stos
xchg
in
push
rcrl
into
mov
ret
inc
jnp
add
call
fmull
stos
subl
mov
lea
mov
lcall
xchg
cwtl
add
out
push
sub
push
icebp
inc
dec
pop
pop
sti
movsb
push
jle
jo
mov
mov
jle
mov
mov
jmp
xchg
cwtl
xor
pop
daa
sbb
add
enter
fisubl
imul
test
xor
jmp
mov
popa
js
inc
jl
cmp
jge
lret
mov
dec
push
shll
mov
daa
cmp
shl
in
aad
icebp
pushl
jecxz
mov
sub
sbb
push
fdiv
mov
pushf
or
jle
cwtl
hlt
jmp
lds
pop
adc
andb
call
adc
cmp
out
rclb
push
mov
lcall
ja
cmpsb
xchg
dec
aad
adc
xor
mov
sub
ss
call
mov
push
inc
ljmp
cs
rclb
mov
jbe
int
imul
push
int
fidivs
mov
repz
sub
dec
cmp
rclb
inc
fstps
out
out
sub
push
sub
xor
xor
aas
mov
mov
es
mov
or
fcomps
pop
jl
gs
mov
push
decl
mov
cmpsl
xor
outsb
or
lods
cs
dec
inc
cmpsb
aas
and
mov
leave
cld
aam
jmp
dec
call
icebp
outsl
ficoml
das
sar
pop
xchg
pop
mov
mov
cmp
adc
aaa
xchg
mov
incl
or
fdivr
aaa
xchg
dec
cmp
rclb
jecxz
mov
adc
push
adc
jg
inc
test
or
in
inc
push
xchg
and
insb
pop
and
scas
push
cmp
test
aam
xor
aaa
rolb
cmp
in
rcrl
and
mov
popa
std
jmp
cltd
ja
lahf
scas
inc
mov
dec
imul
add
xchg
decl
sbb
xchg
push
xor
xorl
mov
out
or
cmp
xchg
shrb
mov
lret
pop
jbe
inc
push
mov
pushf
out
decl
mov
add
hlt
fcmovne
mov
lcall
xchg
cmp
or
leave
addr16
insb
hlt
fs
out
mov
cmp
lods
cmp
sbb
mov
mov
cltd
fsubrp
adc
aaa
test
call
hlt
and
int
adc
cmpsb
push
xor
cld
out
cli
call
loop
call
repnz
mov
jnp
and
into
imul
faddl
pushl
jp
jae
adc
jle
cli
push
pop
fstps
fldl
or
xchg
es
insl
ret
ljmp
dec
shrl
adc
dec
imul
in
sub
in
ss
mov
xor
ljmp
pop
pop
sbb
jo
nop
push
outsb
sbb
shl
jle
pop
std
repnz
ljmp
and
add
outsl
hlt
les
repz
int
cltd
outsl
cmpsb
adc
shlb
pushl
cld
mov
push
in
xchg
jl
mov
addr16
out
mov
hlt
jmp
push
xchg
adc
sub
int
out
sahf
in
data16
pop
std
popf
movsb
xchg
fistpl
xchg
das
ja
ljmp
push
pop
lret
xor
imul
jg
hlt
cmc
sahf
call
icebp
lret
mov
mov
incl
pop
pushf
jb
cmp
add
fdivrp
es
data16
sbbb
cwtl
sbb
data16
xor
jle
nop
mov
jg
test
jg
addr16
pop
lea
xor
cmp
call
mov
es
lcall
popa
sti
and
jnp
mov
rclb
cmc
test
ja
sbb
jg
xor
mov
js
xchg
sub
pop
rcll
push
adc
or
mov
pop
mov
fcomip
lcall
pop
and
or
data16
cli
lods
adc
cs
js
addr16
ss
cwtl
test
les
sub
sub
mov
nop
cmc
and
cltd
add
ret
mov
dec
mov
lcall
dec
stc
ljmp
jl
xor
cli
cmc
xchg
arpl
push
sub
cmpb
jmp
mov
imul
mov
jb
cmp
sahf
or
cmp
cli
cmpsb
enter
dec
xchg
mov
nop
ss
pop
inc
shll
mov
mov
mov
xchg
test
mov
test
xchg
dec
pushl
or
mov
dec
mov
cwtl
sar
xor
out
jp
xor
ret
pop
push
sub
cmpl
cmp
sub
loop
xor
cmpsl
push
test
shll
lret
popa
ficompl
cli
push
add
sub
lock
mov
loop
cld
mov
and
call
adc
imulb
adc
jp
scas
xlat
and
iret
in
push
lahf
dec
inc
adc
enter
ljmp
jnp
and
jl
jl
pop
loope
xchg
aam
test
cmc
mov
ja
mov
xchg
jno
aaa
add
sub
jne
sbb
rorb
pushl
adc
jg
leave
loope
icebp
adc
inc
sub
loop
sub
rep
test
ljmp
and
cmp
jno
pop
xor
dec
jmp
pop
push
pop
imul
cld
cs
mov
icebp
divl
add
mov
xlat
ljmp
ljmp
push
sub
repnz
push
mov
negl
aas
jp
stos
xchg
adc
inc
push
icebp
cmp
mov
lods
aas
mov
pop
popf
xchg
lahf
pop
loope
add
test
loop
out
adc
call
fs
jge
into
mov
adc
in
lods
xchg
rcll
lret
imul
pushl
xchg
cli
daa
add
add
leave
fidivrl
or
iret
lcall
mov
cli
jp
fstps
mov
push
pop
adc
xor
stos
or
cmpsb
fldt
mov
sbb
lret
aas
repz
jg
call
fcomi
loope
in
ja
jo
inc
pop
inc
hlt
out
test
mov
cs
lock
les
into
pop
outsb
data16
mov
and
xor
mov
fwait
pop
pop
pop
fnsave
icebp
dec
jbe
jp
sti
jmp
mov
stos
addr16
icebp
xor
in
pop
xchg
inc
pop
call
data16
pop
negb
inc
lret
push
xlat
xor
je
stc
cmp
or
pushl
push
push
jnp
dec
addr16
jl
cmp
pop
adc
imul
adc
popf
insl
xchg
xor
fnstenv
sub
bound
repz
test
xchg
cmpsb
sub
and
incl
ret
pop
scas
hlt
icebp
pop
mov
stos
mov
sbb
popf
rol
test
into
call
xchg
jle
test
dec
cmp
lcall
push
in
jb
clc
push
ret
mov
cli
incl
movsl
dec
mov
movsb
scas
call
sbb
pop
es
dec
loop
mov
pop
sar
ljmp
repnz
push
adc
push
jecxz
cmp
mov
cli
les
cmp
add
decb
sahf
mov
cmp
dec
cli
inc
outsl
inc
xor
gs
lahf
pop
mov
dec
shl
sub
mov
fbstp
popaw
xor
add
arpl
gs
pushl
adc
cmp
ret
pop
and
lock
jle
scas
mov
pop
mov
enter
cld
call
outsb
push
push
iret
loop
mov
mov
mov
inc
jb
add
push
pusha
stos
pop
lcall
add
mov
repz
test
jmp
and
adc
inc
sub
jns
pop
dec
cli
dec
mov
mov
cld
ffreep
dec
and
clc
and
icebp
xor
xchg
fimuls
decl
pop
and
mov
arpl
mov
or
js
add
push
push
movb
cld
into
out
sti
cld
and
es
mov
push
mov
xchg
adc
add
incl
loope
stos
jns
out
ljmp
dec
mov
ja
call
pop
ret
in
pusha
enter
sahf
stc
addr16
or
jns
pop
xchg
into
clc
test
out
ljmp
pushl
and
push
in
add
in
sub
push
int
dec
inc
mov
ljmp
and
adcb
les
mov
js
mov
push
scas
mov
cwtl
hlt
jle
pop
inc
jle
push
dec
adc
and
pop
jge
addr16
cmp
push
mov
decl
clc
out
dec
pop
pop
subl
scas
repz
scas
inc
jle
lahf
xchg
lock
sub
stos
inc
das
jbe
call
jo
add
cmp
and
repz
pop
push
xchg
ljmp
mov
mov
rcl
mov
sub
sbb
xchg
and
jle
adc
nop
and
decl
push
lahf
push
inc
and
mov
add
pusha
sub
andb
out
inc
push
mov
pop
lods
jb
xchg
cld
mov
inc
enter
cmpl
or
ljmp
and
addl
xchg
or
ljmp
pop
icebp
in
stc
ljmp
push
mov
sbbb
jb
mov
inc
jmp
lea
ljmp
aaa
enter
sub
pop
mov
jmp
sub
pop
push
test
stos
roll
outsl
aad
cs
or
test
call
and
aad
mov
cmp
mov
rcrb
call
shl
cmp
mov
add
ds
out
dec
ljmp
mov
add
mov
fldl
popf
cmp
jmp
push
popa
xchg
sbb
push
dec
int3
pusha
push
jb
rorl
es
ja
fwait
dec
dec
and
lock
iret
rep
mov
pop
outsb
jp
xor
xchg
iret
sbbl
jg
jge
adc
mov
jo
in
mov
into
jae
rorb
decl
psubusw
dec
mov
aas
das
cwtl
dec
mov
hlt
push
or
aas
stos
xchg
fucomp
les
jmp
sub
mov
jmp
ss
arpl
es
dec
xor
ja
sbb
cmp
cmpsb
pop
xchg
inc
mov
sub
aaa
sbb
jmp
lods
shlb
jae
or
ljmp
pop
aad
in
mov
cmpl
scas
pop
xchg
xorl
push
mov
cmpsb
jmp
or
addr16
fcomp
and
ja
mov
xor
frstor
pop
in
incb
dec
push
data16
decl
sub
insl
sarb
repz
imul
xchg
adc
ljmp
and
mov
call
mov
pop
cmp
call
ret
arpl
sar
add
pop
pop
fsubl
push
pop
into
fsubrs
cmp
cmpsl
push
in
ljmp
lcall
iret
or
decl
or
jmp
cltd
xor
pop
imul
decl
incb
les
test
add
adc
decb
sub
std
scas
lcall
bound
in
shr
jg
arpl
int
cmp
jmp
pop
pop
lcall
mov
icebp
mov
rol
xor
push
push
push
mov
pushf
imull
ljmp
add
inc
js
xor
fsubl
loope
cli
push
js
lret
jmp
in
pop
adc
and
mov
pushf
inc
mov
jno
or
das
adc
aas
xchg
jl
mov
call
icebp
mov
lods
mov
jo
cli
push
ljmp
cmp
mov
cmp
push
or
movsb
jne
sub
cli
sbb
mov
hlt
scas
xor
dec
sbbl
loop
orl
lock
jae
test
subb
insb
mov
push
test
sub
lcall
dec
cltd
xor
insl
or
push
decl
adc
das
aaa
dec
mov
dec
subb
jl
pop
shrb
xchg
aaa
test
pusha
ret
rcl
sub
pop
pop
jge
xor
lock
or
loope
mov
jmp
in
sbb
ficomps
push
pop
rolb
repz
addr16
cmp
mov
xchg
push
sbb
jg
mov
push
bound
shl
mov
test
scas
sub
pusha
inc
inc
jecxz
fldenv
call
loope
sbb
cmp
push
ret
and
mov
cs
mov
pop
lret
pushl
ret
dec
mov
inc
jle
leave
cmpsl
hlt
lcall
jl
mov
aas
and
outsb
aad
cmp
pop
roll
rcr
inc
jmp
xchg
loope
xchg
mov
mov
jge
add
loope
fiadds
dec
out
jg
xchg
ja
inc
adc
scas
sub
mov
jecxz
test
loope
stc
cmpxchg
lahf
shrb
mov
call
cld
mov
and
bound
fidivrs
subb
arpl
or
ljmp
jns
notl
fcmovnb
pop
adc
jp
inc
pop
adc
pop
mov
inc
nop
dec
nop
outsb
mov
aaa
cld
call
and
inc
clc
jb
das
lods
push
mov
outsl
call
sbb
popa
mov
mov
jae
push
jle
sub
fisttps
stos
pop
mov
or
sbb
xchg
cwtl
xorl
sbb
aam
pop
dec
dec
push
test
scas
adc
ljmp
enter
pop
div
mov
jmp
pop
dec
mov
and
int3
sbb
pop
decl
rcr
mov
jbe
pop
js
and
decl
jne
fwait
push
imul
push
test
dec
sub
ss
outsl
hlt
xor
add
scas
sar
cli
lret
jg
push
inc
push
scas
or
add
aam
adc
fstps
enter
cmp
mov
filds
pop
pop
rcrb
rcrb
rcrl
jmp
ljmp
or
or
data16
push
imul
test
jecxz
jl
cmp
sbb
je
add
bndldx
decl
in
mov
and
testl
pop
rol
inc
pop
std
ljmp
push
mov
add
sub
lea
mov
or
and
incl
mov
iret
sbb
inc
add
pop
out
jmp
push
aas
out
cli
pushl
mov
xchg
mov
xchg
mov
push
xchg
sub
mov
mov
in
sub
cld
loop
popf
add
pop
test
icebp
jmp
daa
cmp
cmp
xchg
and
push
out
pop
push
pop
jl
out
mov
in
push
repz
shll
jmp
movsl
mov
rorl
int3
jo
cli
dec
std
cld
incl
and
mov
loope
pusha
stc
add
frstor
call
les
lret
movsl
imul
outsb
scas
push
lock
push
repnz
aas
imul
xchg
jle
push
sbb
jae
pop
and
mov
jmp
xchg
mov
inc
clc
cltd
and
and
jne
lcall
and
fiadds
mov
int
stc
icebp
or
je
pop
mov
je
sbb
call
andb
clc
in
and
mov
repnz
xchg
add
adc
aaa
push
and
xor
cmp
daa
sbb
imul
sub
jo
push
xchg
add
pushl
and
cmp
add
jae
out
rolb
stos
flds
sub
rcrl
adc
pop
dec
push
es
fsubrs
push
adc
dec
loopne
jl
fwait
imul
mov
sbb
je
cmpsl
add
incl
outsb
mov
xchg
mov
dec
pushl
dec
xor
pop
hlt
mov
inc
jns
mov
inc
xchg
insb
sar
cmp
out
pushf
pop
push
pushl
adc
stos
mov
cwtl
sub
adc
dec
lcall
iret
or
ret
fists
iret
fs
ret
lcall
cs
push
mov
fistl
pushf
mov
mov
ljmp
pop
push
nop
xor
jle
push
xchg
pop
jbe
pop
mov
or
inc
je
test
sbb
mov
and
cli
outsb
dec
cmp
mov
mov
int
add
mov
pop
lcall
and
lcall
sub
leave
outsb
jbe
add
jae
pop
sarb
dec
mov
ret
stos
cmc
dec
out
xor
rcrl
call
std
repnz
aad
add
sbb
pop
pop
stos
movsb
push
mov
pushl
xchg
mov
nop
daa
addr16
jno
cmpsb
or
or
mov
repz
pushl
xor
jne
js
out
stos
outsb
mov
lods
gs
pop
cmp
int3
call
and
rcl
int
inc
cmp
dec
inc
jnp
xor
icebp
dec
jmp
lcall
movsl
dec
cli
push
movsl
push
mov
call
and
sarl
aaa
outsl
pop
lea
lret
and
ret
mov
ja
ljmp
cli
lret
mov
push
lcall
aad
sbb
xchg
pop
lock
xchg
push
xor
dec
cmp
call
scas
push
cmp
ljmp
decl
testl
push
add
jge
pop
cmpsl
cmp
lea
and
loope
call
testb
jge
lahf
stc
inc
jge
test
movsb
inc
inc
callw
mov
pop
fiadds
cmpl
xchg
and
mov
jmp
stc
xchg
test
push
jne
aam
stos
nop
testl
cld
mov
mov
push
or
out
incl
xchg
push
int3
stc
imul
call
pop
lods
test
add
cmp
incl
add
jge
mov
jl
push
xorb
in
mov
decl
fsubp
jge
mov
pushf
xchg
ljmp
jl
add
dec
and
sub
sar
jbe,pt
scas
and
lret
push
hlt
insb
sbb
int3
adc
daa
decl
clc
sbb
jae
cltd
dec
ss
enter
imul
add
sti
dec
sbb
cmpsl
xlat
pushl
xor
xchg
pop
cmp
and
jbe
add
decb
cmp
jg
orl
jnp
jle
pop
mov
xor
mov
cwtl
fidivrl
mov
je
lcall
push
inc
fcompl
jmp
cmp
lret
outsb
mov
pop
and
adc
add
fistl
rorb
mov
test
mov
fisttpl
icebp
push
orb
dec
cmp
pop
adc
lcall
lods
or
fwait
mov
sti
sub
mov
mov
aad
or
pop
fsub
pushl
ret
lcall
fldt
stos
sub
call
stc
lock
inc
sbb
aad
jmp
mov
cmp
jg
movsl
sbb
sbb
mov
es
clc
movsl
mov
mov
int
jo
mov
push
cld
decl
jmp
das
cmpsb
adc
and
add
ret
lcall
push
mov
jmp
daa
jmp
or
adc
mov
stos
ja
call
adc
jmp
sbb
pusha
clc
sbb
inc
cmpsb
cmp
mov
in
sub
xchg
xor
push
push
test
es
cmp
sbb
ljmp
popf
fildll
cmp
dec
or
mov
jl
mov
popf
add
call
push
inc
sti
shll
xor
fbstp
jns
dec
and
ds
stos
adcb
or
sub
or
jmp
testl
hlt
movb
incl
shll
pusha
push
sub
fisubs
cld
jg
das
xchg
xor
rorb
lock
loopne
fldt
jbe
push
pop
inc
mov
stc
mov
cmp
in
push
fsubrl
xchg
jg
jle
xchg
data16
push
pop
scas
hlt
pop
adc
std
mov
adc
inc
into
xor
cmpsb
pop
sbb
adc
add
bound
or
iret
das
jb
es
dec
inc
jl
subl
cli
fwait
insb
shrb
mov
decl
push
cmp
lods
xor
cwtl
mov
leave
mov
dec
aas
shll
fidivrs
call
push
clc
jp
outsl
dec
push
nop
push
jle
lret
push
insb
scas
mov
es
mov
pop
imul
inc
lds
shl
sar
jge
push
push
fs
in
adc
roll
test
pusha
stc
mov
dec
scas
daa
sbb
daa
ja
out
push
sbb
lods
mov
clc
pushl
std
cmp
out
xchg
push
inc
ljmp
sbb
and
mov
mov
xchg
and
lods
pop
hlt
in
jno
add
add
je
lcall
inc
jo
xchg
movsb
loopne
jl
sub
subl
sbbb
cmp
shlb
cld
fsubrp
jne
stc
inc
popa
add
or
dec
testl
inc
clc
or
dec
ja
sub
in
push
mov
gs
daa
arpl
ds
call
or
shll
and
dec
ds
imul
insl
in
ljmp
ret
faddl
call
nop
mov
mov
or
iret
int
cmpsl
enter
in
jae
call
loopne
call
sbb
cmpsl
mov
jmp
fadd
push
out
mov
lcall
jno
flds
push
sub
js
xorb
jns
fists
ja
cli
dec
inc
fildll
mov
jnp
sbb
sub
mov
pop
and
data16
xchg
jmp
fs
decl
pop
add
mov
pop
push
dec
data16
mov
adc
pop
lods
leave
jb
add
sbb
leave
gs
jp
lea
push
jmp
pusha
push
mov
mov
jb
lds
repz
pop
dec
dec
ljmp
push
xchg
sar
push
std
push
js
or
ret
sbb
push
adc
dec
es
stos
and
loope
sub
fdivrs
inc
or
mov
jg
stos
and
les
xchg
jge
mov
fidivs
jb
aam
cmpsb
mov
lock
dec
sub
leave
test
cmp
test
decl
or
mov
or
insb
pop
out
cmp
dec
and
insl
fisubs
jp
mov
xchg
mov
pop
ror
push
mov
loope
imul
mov
in
xchg
jmp
lcall
push
cld
fsubrp
mov
xchg
test
les
std
das
dec
jbe
jmp
movsb
ljmp
loopne
cmp
fildll
push
push
dec
and
push
out
dec
push
fwait
aas
push
cmp
or
dec
les
mov
cwtl
lcall
push
sub
push
aam
gs
pop
mov
in
mull
pusha
xchg
and
fistps
aaa
movsl
pushf
adc
aad
cmp
jg
daa
gs
jb
pop
movsb
das
and
and
orb
lret
test
and
bnd
lock
decl
negb
push
dec
cli
mov
cmp
pop
decl
pop
pop
xor
dec
ja
cmp
or
jnp
imull
lds
xchg
xor
lcall
jb
dec
adc
jp
je
sbb
or
xchg
pushf
bound
incl
fucom
repz
sbb
rorb
daa
out
pop
adc
mov
dec
scas
mov
sub
mov
loopne
imul
xchg
loop
add
ja
out
clc
xchg
sub
cli
sbb
xchg
std
out
mov
shll
stc
push
jge
cwtl
test
mov
es
jl
cmp
mov
dec
movsb
movsb
and
sbb
mov
popf
mov
mov
pop
xor
insb
pop
fs
orb
in
lcall
lock
pusha
adcb
add
adc
xchg
rcrb
mov
and
mov
xorps
xchg
js
adc
fisttps
push
pusha
cld
mov
mov
mov
decl
movsl
mov
ja
cltd
rorb
sub
xor
push
decb
clc
push
dec
sahf
xchg
mov
xchg
push
and
or
or
mov
mov
addl
add
pusha
pop
fwait
icebp
mov
fimuls
xchg
lods
pop
ljmp
scas
xchg
xchg
out
xchg
xor
sub
push
cmp
mov
jecxz
jns
in
int3
popl
push
xchg
ret
ds
fildll
sarb
jne
cmp
jmp
add
mov
xor
inc
dec
push
cld
xlat
mov
int3
ds
les
mov
jae
mov
scas
xor
jns
xchg
ja
ljmp
pop
dec
cmp
sarl
in
insb
push
mov
mov
or
sub
ljmp
stc
lahf
sbb
push
ja
test
and
push
push
out
fnstcw
jno
call
aas
or
sub
cmp
out
test
mov
fisubrs
xchg
dec
mov
add
cmpsl
lret
sbb
pop
fisubrl
pop
pop
loope
or
pop
sar
mov
fistpll
and
or
pushl
add
pop
insl
clc
loope
stos
sti
rcrb
cmp
lcall
xorl
sub
pop
andb
movsl
xchg
lods
and
cmp
aam
pop
pusha
mov
add
pop
lret
mov
cmpsl
std
testb
adc
icebp
je
movsb
jge
jns
or
in
jae
cmpsl
shl
add
inc
cld
cwtl
pop
popa
mov
arpl
pop
mov
mov
jg
sub
pop
jns
push
sbb
push
push
cmp
bound
mov
out
or
loopne
addr16
out
xor
adc
mov
lods
aas
fwait
lea
push
lcall
adc
jl
mov
or
std
mov
ljmp
imul
and
fdivs
add
or
incb
xor
repz
std
decl
sbb
mov
pop
repz
cmp
daa
jbe
pushf
loop
xchg
lret
call
scas
and
movsbl
push
rcrl
jno
xor
cmp
mov
mov
clc
lds
scas
and
sahf
aas
push
cmp
loop
cld
int
decl
sub
xor
mov
cld
and
lock
pop
aam
std
cmp
add
push
jmp
fmul
rclb
inc
test
sbb
inc
lods
imul
js
push
cld
in
xchg
je
add
std
mov
aad
and
xchg
mov
jmp
hlt
lds
jg
in
or
cs
push
cmp
cmp
pop
mov
clc
in
mov
dec
jge
xchg
pop
push
scas
addr16
decl
mov
adc
loop
jne
insb
dec
sub
xchg
cwtl
sbb
mov
or
loopne
ficomps
outsb
sbb
repnz
adc
mov
lods
imul
and
inc
inc
cld
test
out
xor
cld
xchg
adc
cltd
pop
fisubrs
sar
xchg
fldl
cmp
rorb
outsb
xor
sub
mov
insb
adc
or
push
push
mov
cli
call
lcall
push
lcall
mov
add
cmc
sahf
scas
mov
mov
mov
dec
mov
pushf
mov
adcb
push
cs
fadds
fwait
clc
mov
xchg
or
pusha
sub
lcall
scas
or
jb
jmp
inc
mov
pusha
adc
daa
jle
or
mov
xchg
pop
sub
lcall
rcll
sbb
dec
inc
cwtl
mov
enter
stos
jnp
mov
test
inc
inc
or
mov
pushf
add
ret
call
xchg
mov
and
push
imul
loope
or
sbb
mov
push
xor
ja
addb
cmp
sti
out
fisttps
lea
jnp
sub
popa
mov
inc
mov
push
ja
jg
push
pop
dec
repnz
adc
fwait
inc
aaa
xlat
scas
sub
lcall
pop
sbb
js
xor
ret
xchg
lret
mov
sub
and
lret
daa
push
ljmp
sahf
dec
bound
je
test
adc
jnp
fiadds
push
int3
add
fcompl
jmp
sbb
jge
icebp
stos
push
inc
add
mov
aad
sub
sbbl
and
xor
pop
push
incb
mov
out
or
rol
jmp
dec
sahf
shl
sub
dec
movsb
mov
mov
ja
jmp
orl
cmc
mov
movl
je
popf
cli
or
popf
mov
sub
and
stos
push
sub
out
and
sub
rcll
daa
rcl
jmp
mov
cmp
cmp
pop
adc
lock
loope
iret
ret
push
pop
pop
and
xor
fiaddl
or
scas
jbe
call
add
lcall
nop
add
mov
pop
xchg
push
mov
fisttpl
lcall
sbb
and
mov
xor
fidivrs
pusha
push
push
js
jg
pushf
andnps
imul
and
aad
outsl
cli
add
pop
imul
jo
decb
addr16
cmp
and
rcrb
mov
push
push
cmpsl
pusha
outsl
xchg
add
and
cmp
mov
ljmp
push
xor
push
in
push
inc
mov
cmp
out
clc
das
cli
lret
mov
sub
out
insb
in
test
mov
test
aaa
xor
jae
mov
out
jo
clc
cltd
pushf
out
cmc
mov
shrb
xor
push
mov
xchg
aaa
push
hlt
jb
mov
cmpsb
xor
fst
loopne
movsb
xchg
insl
int3
sub
add
xchg
jmp
sub
jp
rcll
add
out
add
or
mov
bound
aad
and
aam
and
ror
mov
pop
cltd
ss
mov
scas
lret
pop
sub
push
add
xorb
jns
inc
sub
call
insb
imul
mov
popl
and
xor
cmp
les
call
sbb
push
xchg
sub
xchg
adc
orl
mov
les
test
sbb
dec
ret
call
inc
ljmp
inc
or
dec
lahf
lock
xor
mov
out
xor
xor
add
sub
adc
lock
outsb
sbb
add
out
pop
daa
pop
add
xchg
movsb
hlt
ss
inc
mov
lds
fidivrs
cmp
xor
dec
mov
nop
push
int
sbb
movsl
xchg
addr16
and
cmc
lgdtl
mov
int
pop
xor
push
cli
lock
mov
hlt
clc
lods
dec
test
adc
call
dec
aas
jbe
mov
roll
rcrb
push
popf
lods
jge
cmpsb
dec
mov
lock
clc
cmp
jns
xchg
jne
dec
ljmp
push
sub
lret
mov
daa
push
popf
out
cld
popa
and
dec
out
ds
jmp
pop
pop
cs
push
cmpsl
int
jl
fucomp
mov
fsubp
bound
ret
and
hlt
add
dec
call
stos
cld
fimuls
lds
sti
adc
sbb
dec
in
repnz
cmp
inc
pop
jp
jb
aad
fucomp
sbbb
fistpl
push
fs
sbb
jg
call
lds
mov
dec
adc
push
add
fwait
push
fistl
dec
jo
call
mov
push
js
dec
xchg
jg
push
rorb
ja
rorl
jmp
push
je
out
sqrtps
jecxz
mov
repnz
lods
fisttpll
and
insl
ja
pusha
mov
jmp
fisttps
mov
test
push
sbb
mov
cld
pushl
adc
scas
fmulp
mov
mov
push
inc
push
sar
fs
into
fmul
jl
push
dec
inc
add
cmp
mov
inc
pushf
mov
into
icebp
out
lods
xchg
push
dec
mov
std
jmp
or
adc
clc
sub
cmovo
xchg
jg
mov
daa
or
mov
or
inc
testb
and
push
dec
jne,pt
jmp
mov
sbb
ficompl
add
dec
popa
inc
aas
sbb
adc
lcall
les
fsubs
ret
lcall
push
jns
call
inc
mov
arpl
imul
pushf
or
mov
decl
xor
sbb
mov
shlb
push
ljmp
jg
test
jg
jmp
repz
movl
in
jmp
jg
ja
lcall
jnp
sub
fs
xor
mov
ljmp
cli
jmp
lods
fmuls
test
aas
es
iret
lods
add
lea
sub
push
cli
cmp
adc
icebp
mov
jl
push
dec
push
inc
sbb
imul
clc
jnp
repz
pop
pusha
pop
cmp
push
dec
mov
push
inc
loope
mov
cmc
int
ljmp
adc
or
mov
cmp
jno
push
jecxz
sub
decl
jg
mov
fcoms
orb
push
mov
jg
jl
mov
mov
xchg
sub
fiadds
mov
sbb
push
dec
and
mov
jge
add
ljmp
mov
imul
imul
ljmp
pop
fs
inc
dec
pop
sub
test
xchg
std
dec
xlat
incl
adc
xor
data16
out
or
mov
sbb
hlt
es
sub
jge
dec
int3
cmp
push
and
pusha
in
lcall
add
sub
jg
inc
sbb
push
popl
pop
cmc
aaa
cld
mov
cli
sahf
gs
mov
les
aas
push
mov
out
jp
xchg
jbe
push
ss
int3
gs
push
jb
inc
cmp
mov
push
lods
negl
mov
pushl
daa
out
in
cmovae
movsl
out
shrl
jmp
inc
xchg
lock
mov
cmpsl
jbe
mov
and
push
cltd
jb
clc
pop
add
and
or
push
leavew
jne
sbb
add
dec
mov
pop
push
jp
es
mov
fildll
or
pop
cmpsl
daa
fmull
push
in
pushl
sub
clc
cld
imul
lret
push
jle
push
lods
mov
mov
loop
lods
sub
sti
cwtl
aaa
fxch
je
xlat
xorl
cmpb
push
xlat
push
mov
lcall
xchg
int3
shlb
sub
mov
rcr
and
ret
dec
ljmp
mov
push
push
mov
jg
test
addr16
ret
je
jnp
inc
addl
mov
cmc
xchg
cmc
in
or
repnz
in
cwtd
cmpb
jp
mov
repz
dec
shlb
dec
aas
lret
ljmp
scas
out
pop
in
xchg
or
outsl
shrl
repz
xchg
incl
jno
pop
xchg
mov
rcrb
daa
pop
xchg
jge
mov
in
jae
call
inc
adc
sbb
lds
push
iret
scas
push
jmp
incl
pop
loope
je
cmp
mov
lods
lret
mov
xlat
jnp
push
loopne
aaa
cmpl
stos
dec
aas
mov
dec
popa
lcall
stc
addr16
xchg
inc
cmc
push
pop
stos
dec
jg
cmpsl
out
cmp
subb
xlat
push
mov
daa
scas
cmp
out
inc
pop
icebp
xchg
mov
loope
clc
incl
add
add
aas
hlt
rclb
sub
sub
mov
sti
push
add
sbb
fsubp
pop
dec
push
add
or
push
in
push
aaa
cli
lcall
jne
inc
jnp
jne
jmp
mov
gs
mov
pop
or
lcall
xchg
aas
mov
sub
sbb
push
pop
sarl
sub
arpl
outsb
insb
xchg
lret
testb
inc
stos
in
aaa
cld
incl
inc
fstpl
and
sbb
cmp
sti
icebp
lcall
jo
inc
pop
fidivrl
in
in
jb
mov
mov
aad
add
or
push
sbb
bound
xchg
xor
xchg
lret
cmp
scas
or
fdivr
pop
xchg
add
lock
push
mov
popf
xor
sbb
pushl
scas
loop
cltd
cwtl
movsl
xlat
int
pop
fs
mov
lcall
idivb
stos
mov
out
jl
sbb
gs
js
ss
decl
cmpsl
nop
insl
and
mov
mov
sbb
outsl
pop
out
push
out
loope
add
sub
or
jne
pushl
mov
call
jp
adc
aaa
inc
jge
and
adc
aaa
lods
mov
das
and
shrb
mov
cmp
dec
mov
and
and
sub
in
test
leave
sub
or
and
shrl
pushl
rol
jge
test
sbb
les
add
fistpll
and
fnstenv
push
jg
int3
jbe
mov
lret
cmpsb
ud0
int3
cmc
mov
xchg
jp
into
in
outsl
xchg
mov
add
pop
inc
push
adc
cli
popa
xlat
jbe
negl
lcall
arpl
cmc
cli
pop
call
pop
push
sub
daa
loop
insb
jg
pushl
sbb
pop
aam
mov
ret
repnz
xchg
cmpsl
mov
sar
xor
leave
call
cld
mov
mov
cli
jg
dec
jb
insl
frstor
fisttps
pop
jecxz
cmp
mov
shl
pop
sbb
scas
jb
leave
sub
aam
lods
adc
adc
mov
push
jo
pushl
aaa
jecxz
outsb
pop
lcall
cmpsl
cld
insb
fcomp
pop
mov
dec
xchg
dec
mov
jg
hlt
decl
lahf
or
pop
clc
je
cwtl
jl
jle
pop
stos
sub
pushl
lods
jp
mov
cs
mov
inc
add
rcrb
push
dec
sarb
mov
lcall
lahf
cmpsb
lods
lahf
xor
mov
popf
arpl
jg
inc
hlt
scas
pusha
data16
mov
scas
aas
andb
cmp
mov
mov
adc
sbb
dec
lcall
or
jns
cltd
mov
or
adc
dec
pop
inc
ja
mov
jmp
mov
pop
sub
mov
into
inc
out
cli
inc
es
fcoml
mov
incl
roll
outsl
sub
call
dec
pop
scas
ljmp
inc
movsl
jg
sub
or
pop
bound
call
xchg
idiv
es
test
mov
cmp
divl
jecxz
incl
lock
nop
in
subl
inc
mov
fs
push
xchg
mov
das
leave
jmp
or
arpl
add
sub
pop
inc
pop
add
cwtl
movsb
lret
add
inc
and
sbb
aad
add
pop
sbb
les
decl
outsb
dec
and
mov
mov
in
cmp
cmpsl
push
xor
imull
sub
cmp
pushl
sub
insl
adc
test
jmp
jmp
pop
add
inc
cmp
jmp
mov
sbbl
or
aam
mulb
mov
jo
pop
int
stos
in
insl
sub
jb
loopne
sbb
add
call
mov
popf
sub
inc
or
jge
mov
call
pop
std
push
repz
pop
test
xor
lock
fbld
jecxz
js
notl
icebp
xchg
fucomi
jg
and
or
das
xchg
gs
mov
mov
fcomip
push
jb
mov
ss
mov
jle
pusha
sub
sti
push
sbb
push
adc
leave
inc
sahf
scas
mov
push
inc
les
lods
mov
aaa
movsb
lea
lcall
jns
push
ret
loope
xorb
andb
pop
and
inc
or
cmp
and
outsl
xchg
inc
push
retw
fstps
xchg
lret
dec
lods
lret
stos
jno
pop
mov
push
sarl
std
adc
fs
sti
push
and
add
loope
call
lods
mov
in
jns
adc
mov
insl
dec
inc
sub
into
lds
outsl
cli
push
sub
adc
loop
stc
and
cltd
fadds
push
ja
push
call
or
es
int
add
sbb
insb
push
jno
mov
push
pushl
dec
mov
cmpb
jmp
jmp
xchg
sub
mov
lret
jg
mov
stos
decl
fs
push
mov
movlps
sub
lock
mov
pop
inc
addl
xchg
dec
adc
add
pushl
setae
pop
icebp
adc
cmpsl
cltd
decl
adc
push
cli
push
pushf
add
insb
stos
and
mov
psubd
fdivs
ds
cmp
xor
push
add
cs
xchg
mov
add
push
cmpsl
xchg
adc
mov
add
sbb
lahf
jns
stos
xchg
and
mov
adc
stc
sar
jbe
lret
loope
ret
mov
push
adc
pop
mov
mov
insb
mov
stc
clc
sar
aaa
rclb
out
xor
cmp
test
mov
hlt
sbb
loopne
jg
enter
jb
adc
pushl
or
pop
scas
xor
fs
lret
jb
cmpsb
inc
dec
cs
sarl
jg
call
into
fucomi
jb
xchg
jae
sarb
mov
ja
outsb
xchg
pushl
lods
rcrb
jo
jecxz
pop
mov
mov
hlt
sar
shl
dec
jo
int
jns
jl
xor
xor
test
mov
jo
out
xchg
jbe
or
jbe,pn
jge
decl
sbb
imul
sub
xor
out
in
mov
in
sbb
in
jge
andl
ret
ja
cmp
ficomps
lods
xchg
pushl
or
lahf
inc
imul
arpl
rolb
adc
sahf
mov
adc
jg
inc
cld
cwtl
jns
or
jle
xchg
push
or
adcl
jmp
imul
sub
cmp
dec
repnz
push
ret
mov
arpl
scas
enter
add
lret
jg
daa
bound
mov
push
loope
lahf
jg
pushf
nop
cld
pop
cltd
xchg
je
jae
dec
cmp
sbb
push
pop
testl
fwait
shl
mov
lods
pop
pop
jno
xchg
lcall
cmc
sbb
pop
stc
sbb
push
mov
adc
jmp
std
popf
mov
xor
or
rclb
pop
std
pushl
mov
mov
mov
mov
sub
and
dec
subl
fdivr
push
jl
push
loop
jmp
mov
outsl
xor
mov
fsubrs
jno
ror
rolb
leave
jle
out
aaa
push
in
jg
and
adc
or
test
aas
outsb
jnp
cld
adc
lret
push
xchg
pop
leave
jno
inc
push
test
outsb
movsl
pop
dec
incl
mov
mov
xlat
cmp
out
out
fcompl
test
fwait
repz
lcall
pop
rep
inc
dec
jbe
and
shll
fcomps
jl
ja
pop
out
lock
in
fwait
xchg
push
in
out
popf
repz
xor
sbb
mov
jp
ljmp
xchg
jecxz
fcmovnu
call
mov
mov
cmp
cltd
sar
imul
push
cmpsl
pop
or
pop
jae
inc
sbb
jno
pop
ljmp
mov
or
ljmp
negl
jmp
or
btc
fcmovu
faddl
inc
pop
push
incl
call
mov
pop
inc
and
imul
jg
pushl
xchg
mov
cltd
jecxz
cmp
sub
mov
decl
inc
arpl
out
add
adc
and
mov
mov
add
mov
outsb
mov
movsb
ljmp
cs
mov
inc
jmp
lahf
xchg
stos
jae
xor
inc
dec
out
clc
das
push
cmp
mov
lds
add
adc
loop
lcall
lds
loope
fwait
inc
xchg
lea
inc
mov
or
jl
addb
sbb
xchg
adc
pop
stc
lods
pop
cmp
out
dec
int3
scas
sbb
aam
out
ja
fs
test
lock
loop
movsl
hlt
jge
or
jl
add
jo
add
pushl
test
xor
push
ldmxcsr
cmpsl
xor
call
cmpb
pop
mov
sub
into
sbb
inc
lahf
xchg
jle
ret
sub
or
insb
daa
fdivrl
xchg
incl
pop
clc
ss
sti
push
loopne
addb
or
jmp
mov
and
dec
cmp
push
sbb
xchg
jmp
cs
or
jae
movsl
ds
jmp
aam
mov
push
and
leave
jmp
notl
pushl
sbb
jl
std
std
pop
les
cmc
xchg
jmp
ret
sub
sub
int
clc
jp
sub
xor
adc
push
scas
mov
inc
das
and
call
and
stos
jne
mov
jo
scas
fdivrl
adc
adc
mov
into
stos
jmp
dec
pushl
fimuls
negb
insl
aaa
xchg
lds
dec
in
dec
mov
push
pop
int
shlb
mov
sbb
cmp
and
jecxz
cwtl
xchg
lret
shlb
lret
mov
fdivrl
mov
pop
pop
dec
xor
daa
test
add
sub
inc
xor
dec
ja
sub
mov
xchg
call
adc
lahf
lods
nop
ja
int3
cltd
xor
dec
das
scas
mov
sbb
and
imul
fildll
cs
sbb
in
fisttps
mov
scas
xlat
mov
movsl
scas
dec
negl
xlat
mov
inc
jge
imul
inc
push
dec
jo
xchg
stos
ret
mov
xchg
push
stc
cltd
jmp
mov
inc
test
inc
sahf
inc
ret
lret
imul
fisttps
mov
dec
outsl
sar
mov
xor
fsubrl
mov
call
addr16
out
clc
sub
in
jecxz
mov
mov
or
call
enter
or
cli
insb
negb
test
loopne
cmc
stos
fmull
dec
out
rol
add
std
bound
inc
cmpsb
sbb
sbb
loopne
sub
mov
mov
inc
call
das
jnp
out
add
loop
dec
lds
popa
lock
mov
dec
jecxz
xchg
jmp
sbb
in
pop
lods
and
decl
imul
push
jne
imul
push
mov
sub
out
or
dec
loope
xor
cmpsb
cmp
jae
mov
add
push
mov
lahf
mov
cld
movb
xor
and
mov
incl
aam
add
mov
mov
push
sahf
imul
push
jg
pushl
xor
sbbl
xor
or
cmpsb
cmc
xor
je
pop
lcall
mov
pop
xchg
mov
jmp
xchg
icebp
pushf
ja
fsub
mov
stos
outsb
mov
iret
pop
test
call
jmp
cmc
and
push
mov
dec
data16
aad
lcall
and
out
add
cwtl
sbb
sbb
pusha
mov
or
and
lea
lock
dec
lock
enter
jns
add
cli
xor
ljmp
or
ss
outsb
add
pop
rorb
movsb
pop
cmpsl
fcom
jno
sub
push
out
lahf
icebp
fcomip
enter
cmp
mov
cli
push
cmc
mov
adc
xchg
jne
jno
pusha
ljmp
add
out
call
decb
or
aaa
rcrl
pop
push
push
stos
rcrl
push
leave
scas
adc
ficoms
jle
fildll
ja
xchg
and
lcall
jno
xchg
sbb
imul
and
decl
or
js
fcmovnu
into
push
cmp
jl
mov
cmovnp
cmc
fwait
add
xchg
jo
xorb
mov
repz
ljmp
mov
and
hlt
test
mov
sub
out
cmp
pop
xchg
dec
jg
cmc
inc
pushf
add
fmull
inc
shll
mov
sbb
shll
incl
add
jb
xchg
in
fcoms
out
xor
inc
pusha
lret
bound
decl
lret
jg
fs
ret
daa
iret
addr16
sbb
or
pop
ljmp
int
call
mov
cmpsb
je
or
jmp
mov
andl
ds
icebp
push
testl
add
lcall
or
rclb
sahf
push
dec
insb
add
decb
add
xor
test
ljmp
decl
mov
push
push
fs
out
adc
sub
lock
imul
fildll
push
mov
pusha
pusha
push
imul
lret
ret
nop
add
stos
mov
jo
mov
popa
out
test
xchg
clc
pop
sti
iret
lock
sti
popa
pop
and
das
sar
pop
daa
fdivrs
xchg
or
loop
sub
mov
mov
sbb
divl
aam
repnz
lret
jecxz
inc
loope
mov
movsl
mov
jns
push
sub
mov
adc
mov
xor
jg
shrl
int3
int3
mov
push
dec
incl
incl
iret
mov
das
inc
imul
mov
out
cmp
test
push
rorb
scas
add
stos
shl
cmpsl
incl
or
pop
mov
repnz
jne
ret
insl
dec
shrb
outsb
shlb
call
incb
jae
cmp
jl
clc
call
jnp
lret
xchg
aad
arpl
cmpsb
adc
dec
scas
ljmp
jae
sbbb
out
mov
mov
stos
jle
inc
sbb
jmp
mov
jnp
and
inc
aaa
mov
mov
cltd
aam
or
test
shlb
enter
arpl
cmp
out
stos
sbb
jmp
js
imul
cmp
push
jle
repz
pop
dec
lret
sbb
mov
mov
ror
pop
icebp
out
add
cld
sub
jbe
xchg
dec
and
add
xor
push
into
fildll
or
and
mov
into
pop
enter
in
jl
mov
xchg
jmp
xchg
stos
sbb
inc
sbb
jns
shll
loop
outsb
aaa
stc
insb
mov
enter
shll
fs
pushl
filds
int3
mov
adc
mov
xchg
pop
sub
sbb
movsb
jns
xchg
cmp
pop
inc
or
push
sbb
ret
ror
sub
ljmp
call
fdivrs
jp
jecxz
sbb
and
and
insl
sub
int3
imul
mov
lahf
ds
xor
stos
pop
push
xchg
fimull
cmp
inc
adc
ljmp
push
sub
cmp
jns
aaa
nop
jae
mov
push
pop
imul
inc
xor
pop
andb
lea
inc
adc
mov
push
mov
inc
dec
xor
bound
push
push
sbb
or
fwait
mov
cli
insb
sub
dec
lcall
movsb
jns
pushl
or
jnp
aas
loopne
imul
lret
stc
sbb
xor
push
push
call
cmp
mov
int
mov
lds
xor
test
sub
jge
xor
ljmpw
cli
or
push
imul
jmp
incl
lds
adcl
add
cmpsb
xchg
mov
shrl
lock
mov
jbe
addr16
cmpsl
incl
add
cmc
lea
mov
imul
in
movsl
mov
adc
jnp
mov
test
xchg
inc
cmp
leave
dec
das
inc
clc
sbb
jge
jl
cmc
ljmp
cli
push
add
jns
fisubrs
aaa
push
imul
lcall
sub
lahf
in
in
ficoml
icebp
lahf
gs
or
stos
pushf
jp
push
lahf
repz
push
mov
call
ret
jb
scas
fisttps
sbb
and
imul
addr16
ror
fistps
inc
test
bound
jb
push
rorb
lcall
adc
mov
mul
std
push
xor
dec
lods
pushf
mov
mov
les
sub
test
lcall
repz
push
xchg
cltd
fstl
pop
xchg
mov
in
adc
rorl
loopne
in
in
xor
mov
add
js
xchg
or
test
out
xorb
pusha
inc
inc
fildll
push
adc
add
out
mov
jle
push
dec
adc
sahf
push
addr16
and
cld
jmp
inc
loope
mov
xchg
in
sbb
aad
adcb
sti
in
incl
push
inc
scas
out
cmc
xchg
sahf
dec
mov
insb
test
fcoms
je
popf
sar
aas
shrb
mov
ljmp
les
out
sub
lcall
xchg
imul
jno
out
stos
inc
dec
adc
popa
mov
push
daa
sub
lret
and
idivl
aas
shr
xchg
sti
gs
jg
dec
inc
scas
jg
pop
mov
fmul
incl
cld
pop
inc
pop
cmp
and
mov
xlat
push
dec
adcl
cld
xchg
sub
ljmp
sbb
adc
out
fwait
sbb
mov
xor
ds
dec
lcall
je
mov
sbb
push
add
lods
movb
pushf
repz
fildl
adc
lret
test
or
xchg
jb
gs
aad
sbb
pusha
cmpsl
fcoms
sar
mov
inc
dec
jbe
shrb
scas
cli
pop
push
lods
push
adc
jbe
jmp
jmp
add
adc
dec
pop
sbb
sahf
into
inc
cmpsl
or
arpl
jmp
enter
dec
inc
dec
shll
and
stc
inc
shlb
inc
and
inc
shlb
xor
pop
dec
or
adc
and
into
and
jo
mov
mov
in
xlat
mov
popf
jge
frstor
cmp
dec
jmp
in
fstps
fcoms
sbb
in
out
sub
out
movsl
sarb
xchg
pushl
out
cmp
sbb
in
add
lcall
mulb
es
jns
xor
jl
lods
sub
xchg
sahf
movsb
push
pop
nop
inc
scas
and
pop
and
popa
xorb
push
cmc
incl
nop
cwtl
jle
pop
adc
mov
fisubl
mov
stos
ljmp
sub
cli
jns
or
sti
adc
lock
data16
jmp
mov
movsl
ljmp
dec
repz
daa
in
xor
lret
daa
lods
iret
repz
pushl
inc
je
fsubrl
pop
or
sbb
cmpsb
jecxz
ret
jmp
in
sbb
jmp
repz
mov
pop
pushf
push
sbb
cld
mov
jnp
int3
fnsave
push
out
fisttpl
btr
outsb
or
ret
pop
cmpb
repnz
push
and
pushl
cld
in
scas
test
stos
enter
inc
call
incb
sub
sbb
arpl
sti
jmp
mov
mov
xor
dec
inc
cmovae
orl
and
mov
mov
mov
shll
mov
mov
stos
shr
mov
cld
mov
call
clc
push
push
push
sbb
mov
fldcw
cmp
addl
ja
sar
sbb
and
js
cltd
fdivrp
push
adc
pop
test
popa
hlt
or
and
popa
dec
inc
call
call
xlat
sub
cmp
imul
loop
sub
mov
sub
pop
xlat
pop
push
les
push
imul
push
ss
pop
mov
call
jecxz
mov
cmpsl
inc
mov
push
xchg
cmp
add
enter
inc
in
jl
pop
adc
jo
shr
adc
lret
push
sub
inc
out
cmp
cmpsl
push
loope
stc
jno
sti
js
int3
sbb
fcoms
push
lcall
loop
xlat
lret
jae
in
stos
in
lahf
sahf
enter
dec
pushl
xlat
loope
xchg
mov
arpl
les
scas
lods
lcall
mov
push
xor
xor
std
or
and
pop
inc
call
sbb
aaa
pop
jg
xlat
push
add
sbb
pop
and
xor
enter
jmp
dec
sbb
cmp
push
decb
mov
cld
or
popf
insb
mov
js
cmp
rcrb
lock
sarl
xchg
ljmp
sbb
or
call
sub
insb
pop
push
mov
dec
mov
mull
adc
xlat
out
dec
jbe
es
mov
stos
mov
cmpsl
addr16
dec
decb
ljmp
pushf
mov
dec
mov
incl
cvtdq2ps
xchg
fcomps
mov
mov
cmp
adc
sub
sar
outsl
nop
mov
sub
ja
mov
shll
movsb
add
aad
xor
loopne
je
stos
inc
sbb
outsl
aam
js
inc
mov
dec
int
push
mov
cld
int3
jbe
jecxz
inc
adc
ds
fs
pop
iret
sub
push
cmp
cmpsb
lcall
dec
inc
push
sti
aad
mov
add
repnz
mov
push
int
test
pop
hlt
roll
inc
outsl
sub
jmp
pop
repnz
cltd
mov
ror
mov
movsl
call
add
or
ljmp
out
lock
movsb
xchg
cmp
cwtl
or
in
hlt
out
adc
es
test
clc
lcall
mov
daa
mov
push
mov
movsb
cmp
fimuls
repz
sbb
out
or
xorb
jle
mov
mov
pop
nop
pop
call
inc
ret
sarl
or
movsb
jg
dec
mov
or
adc
insl
mov
fidivl
push
jns
jns
or
xchg
mov
negb
repz
pop
mov
hlt
mov
mov
jno
jp
and
repz
jle
lods
aaa
jp
adc
push
dec
dec
test
jbe
ljmp
mov
inc
ss
jle
and
sub
xor
sub
sar
test
cld
mov
push
dec
dec
mov
dec
cmpsb
roll
or
andb
cmp
add
lock
and
cmc
iret
and
fs
mov
pop
cld
lcall
das
inc
rcrb
test
push
dec
movsl
out
jne
ljmp
les
lcall
pop
pusha
fadd
in
nop
aad
mov
xor
mov
int
mov
fists
adc
loopne
loopne
sbb
call
repnz
lcall
jp
adc
jbe
repz
add
mov
pop
cli
inc
mov
add
xchg
cmp
es
cli
cld
cmp
fidivl
xor
out
in
or
clc
inc
inc
jbe
loop
add
mov
inc
or
aas
pop
hlt
aas
aas
xchg
out
dec
flds
jo
jp
out
sarb
mov
test
lock
xchg
or
out
mov
and
pop
cld
mov
mov
adc
inc
dec
xlat
sar
incl
mov
pop
mov
testl
leave
fstps
shrl
pop
ret
clc
inc
orb
pop
sub
cli
jmp
cmp
sar
mov
mov
xchg
test
insb
rclb
xchg
inc
sub
lods
xchg
pushf
mov
call
aas
adc
outsl
fs
add
xor
and
jle
jmp
mov
frstor
std
ja
or
mov
aas
out
leave
mov
mov
push
jle
mov
dec
clc
cmp
xchg
outsb
push
cmp
fldt
or
xor
sub
mov
jb
call
repz
or
add
mov
dec
icebp
scas
pushf
and
mov
lcall
xchg
fiadds
and
lcall
and
add
nop
sub
adc
insl
xor
jge
incl
arpl
roll
mov
add
mov
popf
add
mov
in
xlat
mov
ss
inc
push
cld
push
pop
call
mov
outsl
mov
fs
dec
cltd
test
add
clc
movsl
test
add
lds
test
fmulp
clc
call
sub
mov
scas
sub
pop
outsb
pop
add
loopne
es
stc
decl
call
or
stos
pop
clc
pushl
push
dec
pop
sbb
in
cmpsl
adc
adc
jbe
rcl
xor
incl
xchg
mov
shl
mov
xchg
subb
js
cmp
ljmp
cli
decl
popf
cwtl
lea
in
jbe
data16
or
xchg
adc
test
xlat
push
cld
sbb
ret
outsl
and
mov
sub
call
xchg
insl
push
push
loope
and
pushf
mov
jmp
jo
jae
sub
ljmp
sbb
mov
push
fnstsw
dec
push
cmp
mov
inc
xchg
pop
push
fidivrl
push
rcr
lret
inc
or
or
mov
ret
bound
iret
dec
ljmp
in
cmp
inc
mov
pop
mov
lret
mov
push
pop
add
pop
and
iret
and
ss
in
in
push
les
sbb
add
movsb
cs
sbb
loopne
sub
shrl
mov
shlb
sbb
fs
mov
imul
mov
xor
popf
or
mov
fmull
addr16
push
cmpsb
aas
add
jmp
dec
leave
jae
xor
daa
hlt
sub
repnz
fwait
or
std
pop
insb
int3
mov
inc
fimuls
lds
and
push
sar
ljmp
xchg
pop
shrl
mov
lret
in
shlb
mov
adc
inc
outsb
add
mov
lock
xchg
xchg
daa
mov
scas
dec
js
adc
lcall
push
out
push
adc
bound
mov
mov
sub
mov
incl
inc
int
cwtl
lret
pop
cmp
mov
xor
push
xchg
cmp
popf
mov
pushl
ljmp
dec
add
sub
fidivrs
mov
jl
mov
nop
inc
addr16
push
cwtl
ret
out
scas
mov
adc
cs
pop
movsl
cmc
call
pop
test
sbb
push
cmp
cld
xor
mov
inc
push
add
pop
xchg
lods
sub
test
push
mov
in
pop
xchg
incl
std
gs
cmp
adc
add
sub
jg
dec
loopne
pop
xchg
or
call
dec
inc
mov
and
cmp
jbe
shlb
jno,pt
dec
mov
adc
ss
call
dec
jg
mov
dec
sbb
dec
pop
inc
mov
mov
pop
arpl
sub
jmp
lahf
jmp
inc
mov
loop
popf
std
aaa
fbld
hlt
in
lock
mov
sbb
test
push
out
lea
inc
mov
inc
icebp
out
cwtl
insb
dec
data16
out
add
mov
fucomp
push
dec
imulb
pop
int3
cmpsl
inc
mov
pop
fnstcw
pop
pop
cmp
push
clc
pop
inc
repnz
adc
add
pop
addr16
add
jmp
xchg
pop
mov
adc
jb
mov
jae
xchg
lcall
sbb
mov
jp
and
insl
sbb
mov
loopne
xchg
add
lret
repnz
lcall
xchg
adc
cltd
pop
mov
loop
xor
fisttpll
sbb
sub
rcl
fdivs
daa
xor
push
adc
repnz
fistpll
scas
cmp
fucomi
lret
out
fsubr
mov
idiv
ljmp
push
in
jno
dec
jo
mov
in
jns
mov
ficoml
idivb
mov
out
jo
fwait
mov
sbbb
cmpsl
push
jp
mov
aam
or
sahf
inc
pop
xlat
pop
and
mov
lcall
cltd
stos
xchg
cmp
mov
ljmp
cmp
mov
cmpsl
mov
orb
sub
adc
or
cmp
pushl
xchg
mov
sbbl
andl
jo
addr16
mov
call
bound
xchg
sub
pop
push
orb
add
sbb
add
inc
shl
mov
lcall
pop
stc
in
adc
ficoms
nop
push
push
push
aas
adc
push
cli
inc
std
cmp
data16
scas
insb
xchg
aam
pusha
sbb
fsubp
sub
sub
push
push
jmp
cmp
mov
push
insb
cmp
pop
mov
lcall
or
imul
cwtl
test
in
int3
sbb
pop
icebp
ljmp
jge
mov
mov
push
in
ret
lcall
lcall
in
daa
in
jge
mov
mov
or
jmp
pop
pop
std
ljmp
je
cmpsl
push
sub
xchg
adc
arpl
call
sbb
inc
outsl
mov
adc
mov
decl
in
aaa
insl
sub
ds
mov
mov
gs
popf
add
ljmp
cmp
cmp
orl
xorl
out
scas
dec
push
jl
push
push
mov
fists
rol
scas
mov
xorb
xchg
lcall
mov
leave
mov
fistps
mov
xlat
lods
aas
lock
icebp
mov
adc
ljmp
mov
sub
mov
xchg
or
adcb
ljmp
fsubl
sbb
sub
loope
ja,pn
bound
fildll
call
ja
mov
jbe
mov
xchg
push
cmc
mov
mov
out
sahf
jb
pusha
in
adc
popa
repnz
jmp
js
jl
xor
in
test
jbe
push
hlt
fcomip
lcall
ss
and
jo
dec
add
mov
push
pop
cmp
repz
jecxz
fsubl
aaa
es
mov
pop
cmp
out
push
push
cmpsb
add
sbb
aad
add
popa
lock
loop
scas
cltd
cmp
loope
dec
repnz
xchg
sbb
jae
addr16
cwtl
cmpsb
loope
fildll
popf
cmp
movsb
fiaddl
xchg
add
dec
mov
incl
or
mov
dec
mov
ror
lods
mov
xor
int
lcall
mov
out
or
jno
loopne
mov
mov
lcall
dec
out
xchg
pop
xchg
or
push
add
cmp
push
xchg
add
jae
jg
movsb
pop
fcmovb
mov
sub
in
subb
jnp
decl
in
ljmp
add
pop
pushf
hlt
lcall
fiadds
push
dec
dec
clc
pop
dec
add
jns
cwtl
xlat
and
jge
push
out
and
adc
sahf
nop
fcomps
call
xchg
test
jnp
and
mov
rcrb
push
mov
adc
inc
iret
clc
ds
pushl
movsl
fistl
sub
arpl
lahf
mov
mov
mov
mov
fdivrl
and
push
sbb
mov
fisubrs
jmp
pusha
out
call
pop
scas
inc
inc
fdivr
int3
push
daa
xchg
fcmovb
push
push
cli
testb
iret
add
add
call
cmp
push
mov
pop
adc
jmp
aas
pop
sub
popf
push
incl
jl
movsl
sub
repnz
mov
cmc
call
ret
dec
leave
mov
cmpsl
jo
add
dec
iret
mov
adc
xchg
inc
jle
stc
adc
jp
dec
adc
in
push
add
enter
rolb
dec
jmp
jne
ficomps
incl
xor
pop
stos
xor
xchg
out
ret
call
pop
mov
pop
lods
pop
test
call
add
xchg
fnstsw
ljmp
in
gs
cmp
mov
incl
add
int3
fs
jbe
add
sbb
rcr
pop
pushl
push
adc
gs
std
sub
aaa
shrb
ja
mov
jp
jp
mov
ficompl
xor
mov
decl
cmc
incl
aas
lahf
mov
pop
fsub
movsl
jl
inc
std
add
pop
sar
roll
jbe
sub
fbld
pop
mov
pop
mov
sar
cltd
pop
cmp
push
ljmp
iret
mov
je
and
stos
sbb
mov
imul
dec
mov
dec
jl
js
and
call
push
xchg
mov
inc
pop
cmc
inc
dec
and
xor
rorl
in
stos
push
push
fs
incl
inc
addr16
cmc
dec
pop
add
dec
inc
jl
stos
add
test
xor
sbb
xchg
mov
call
push
mov
cmp
pop
add
cmp
or
dec
test
jmp
inc
jl
rclb
add
mov
and
and
push
xchg
sbb
dec
sub
stc
clc
mov
mov
lret
jg
or
jo
and
jno
jecxz
add
decl
sbb
daa
mov
aaa
loope
xor
xchg
decl
repnz
daa
lea
jp
lahf
lea
dec
pushf
and
arpl
pop
dec
addr16
mov
ljmp
div
sbb
loope
pop
mov
xchg
or
pop
je
push
inc
repnz
call
bnd
outsl
push
or
ss
sub
ss
jo
adc
out
aas
or
mov
or
xchg
lahf
xchg
stos
fdivrp
mov
je
pop
lea
inc
jb
leave
rcrb
mov
rcrb
stos
addr16
and
pushl
push
xchg
testb
or
subb
push
ljmp
push
xor
nop
aad
int
test
orl
ficoms
out
mov
or
decl
xchg
jecxz
dec
push
cmp
lea
icebp
call
adc
lea
mov
call
add
or
adc
inc
ljmp
mov
lcall
fldt
cs
inc
imul
inc
call
std
jg
ret
stos
dec
hlt
sti
pop
xorb
mov
inc
or
call
in
sahf
out
loopne
jl
dec
and
adc
call
pop
jo
push
xorb
cmp
fbstp
sub
cld
xor
cld
pushl
pop
mov
fs
dec
sub
sub
push
cwtl
popf
mov
push
movsb
adc
psubw
call
aaa
nop
fcoml
push
lods
adc
push
push
hlt
mov
cmp
pop
bound
outsl
push
pop
hlt
xchg
lcall
pop
clc
and
cmp
mov
adcl
or
add
call
mov
push
mov
mov
cmp
movsl
addb
mov
js
mov
aas
ljmp
nop
or
lcall
je
adc
xor
sbb
aas
sbb
leave
jno
or
fucomi
popa
mov
jns
movsb
push
fmull
push
loop
sub
call
xchg
aaa
sub
xchg
sub
jle
aas
cmp
mov
rol
loop
push
add
shlb
movsb
out
sbb
push
in
call
or
jmp
shlb
enter
xor
xor
imul
sub
mov
icebp
cmpl
add
stc
mov
pop
sub
loope
hlt
add
add
call
fs
jecxz
js
shlb
repz
test
sbbb
sti
lret
jg
or
div
jne
jmp
cmp
or
pop
loopne
xchg
sti
imul
js
in
mov
mov
or
mov
adc
out
jno
sbb
popa
cld
add
mov
xchg
mov
jg
push
xor
xchg
hlt
sub
fists
popf
push
das
cmp
aaa
mov
sub
push
pop
loopne
ja
mov
sub
test
or
add
or
jg
push
mov
into
leave
ret
push
mov
shlb
das
scas
psllq
in
cwtl
int
sub
decb
lret
jge
out
add
in
push
arpl
jno
dec
sbb
inc
cli
sub
lcall
clc
lret
stos
stos
mov
movsb
loop
pop
mov
js
jmp
push
ljmp
outsb
cmp
loop
pop
lahf
cmp
adc
fidivrl
out
clc
jns
std
jle
mov
inc
dec
jnp
or
xor
or
sub
push
cli
incl
add
push
jns
xor
icebp
test
ljmp
lcall
sub
call
insl
pop
sbb
rcrl
movsl
inc
inc
clc
repz
in
int
filds
xor
mov
or
inc
xor
mov
or
imul
pushl
sbb
cmp
fbstp
in
xchg
into
lock
movb
and
out
es
ret
out
lds
incl
scas
sbb
cs
pop
mov
inc
in
jnp
xchg
add
enter
jo
je
jg
ljmp
ficoms
mov
out
mov
adcl
stc
repnz
add
jg
inc
addl
movsb
in
imul
into
icebp
push
mov
push
mov
call
movsb
mov
cmp
add
cs
loopne
ds
adc
mov
mov
xor
dec
aas
incl
jmp
mov
sub
adc
in
pop
mov
arpl
mov
dec
or
sar
mov
xchg
sarb
call
mov
dec
jg
imul
out
in
fs
mov
pop
mov
int3
xchg
inc
int
mov
push
xchg
cli
xorl
and
jmp
lods
fwait
pop
outsl
mov
fldt
outsb
sbb
decl
cltd
test
pop
push
not
cmp
stc
jg
sbbb
icebp
fisubl
cli
idiv
call
push
dec
jnp
mov
hlt
dec
sub
or
aas
jl
nop
cmpsb
std
cld
imul
or
subb
imul
sbb
jg
pusha
psubb
adc
mov
push
jmp
and
inc
cmp
aam
cwtl
fwait
adc
inc
dec
dec
sbb
outsb
pop
inc
adc
mov
jmp
repz
lods
pop
shrb
in
jb
notb
pop
xor
loope
mov
cmc
incl
ret
sbb
divb
push
mov
loop
jne
loope
rcl
fistps
cs
xlat
cmpsb
mov
aam
push
in
jmp
xchg
push
adc
or
xchg
mov
jne
idivl
push
add
test
pop
cmp
or
cli
pop
xor
push
fildll
jmp
ud2
push
lret
xchg
subl
lcall
fisttpll
xchg
lcall
add
xor
jg
and
sub
sub
rep
xor
cmpsl
push
jp
decl
or
cld
lock
test
mov
jmp
mov
out
push
dec
out
movsl
incl
push
imul
loopne
xor
outsl
lahf
arpl
inc
xchg
mov
jl
pop
mov
aaa
add
fsub
inc
fwait
addr16
call
incl
je
pop
lea
in
or
mov
mov
pop
sti
push
and
les
outsb
test
jo
mov
jg
mov
or
test
xchg
jl
push
pop
pop
addr16
das
pushf
jl
or
add
stos
jmp
pop
xchg
stos
sub
mov
mov
inc
xchg
push
fcomps
pop
mov
lcall
pusha
aas
nop
mov
neg
xor
dec
pop
lds
pushl
ret
clc
sahf
aas
and
jnp
mov
push
jno
js
std
xchg
cltd
or
jg
or
imul
lahf
push
ljmp
adc
or
or
fwait
pop
xor
lcall
xorb
daa
in
mov
pop
push
aam
pop
sti
xor
imul
dec
add
rol
xchg
int3
lcall
mov
rclb
adc
movsl
mov
call
sub
pop
push
mov
rcll
cli
xor
ljmp
rclb
loopne
xchg
inc
push
cmpsb
xchg
mov
movsl
lds
dec
test
push
divl
cmc
sahf
out
adc
decl
in
inc
mov
push
addl
adc
divl
neg
sub
cli
jns
cmp
fisttpl
lds
movb
jle
xchg
cli
mov
mov
pop
mov
push
cli
and
outsl
aas
jb
mov
adc
ljmp
mov
xchg
pop
cmp
inc
push
adc
mov
lcall
test
jl
sbb
mov
jl
ljmp
insb
lret
call
pushl
pop
jb
mov
add
imul
cmpl
mov
push
pop
cli
lea
xorb
dec
call
das
incl
notb
popf
pop
jecxz
push
adc
pop
sub
testb
cld
mov
pusha
hlt
test
dec
jno
sub
adc
ds
lcall
in
negb
rorb
fisubrs
adc
xchg
inc
outsl
clc
lcall
inc
mov
movsl
cli
cmp
addr16
or
leave
std
std
or
and
sub
jg
cmp
aad
mov
fs
mov
pop
aad
imul
xchg
clc
sarb
jge
mov
ficomps
pop
in
pop
es
push
stos
mov
jmp
add
mov
pushf
xor
incl
pushf
mov
cmc
jb
scas
mov
ret
call
fldcw
nop
mov
mov
imul
and
mov
jmp
cmp
sbb
mov
dec
bound
fwait
mov
cld
pop
dec
inc
cmpsb
pop
push
pop
add
ror
inc
into
mov
pop
cld
mov
aam
dec
mov
jle
xor
cmp
rorl
stos
jmp
or
adc
dec
outsb
mov
mov
out
mov
in
or
add
push
sub
or
fwait
bound
adc
lods
push
loop
fnstsw
cmc
fdivrs
add
pop
xor
cld
jp
xchg
sub
mov
push
xor
lcall
shll
daa
add
add
push
dec
push
mov
scas
mov
mov
adc
ljmp
popa
leave
jns
pop
imul
int3
push
dec
jp
repnz
movsb
adc
add
dec
scas
mov
hlt
lcall
jl
in
add
mov
icebp
mov
lcall
xor
mov
xor
jns
mov
outsl
fimuls
mov
insl
lret
mov
mov
cmp
push
fsubrl
push
mov
imul
incl
xchg
je
insb
das
push
xchg
sahf
xchg
or
or
mov
and
fs
sbb
jecxz
adc
pop
or
or
out
pop
or
aaa
imul
or
mov
call
mov
js
ja
jp
or
out
out
jae
mov
cmp
mov
pop
pop
call
add
fildll
sub
cmpsb
das
dec
inc
xchg
dec
fmuls
icebp
cmc
lock
std
adc
jmp
out
add
aaa
cmp
scas
nop
cltd
outsb
adc
inc
pushl
lock
add
shr
or
int3
jno
ljmp
inc
sbb
andb
mov
sub
fwait
inc
fidivs
push
lret
xor
ficompl
sub
add
jmp
or
arpl
sbb
ret
jge
inc
test
pushl
sbb
rcrb
cmp
je
addr16
mov
aaa
xorl
and
rclb
fbld
or
mov
lcall
repz
mov
test
jp
add
adc
jmp
xchg
test
cmp
mov
mov
outsb
cmpsb
ljmp
push
mov
jae
aad
cltd
jns
mov
jbe
jb
add
push
push
mov
imul
std
sti
or
push
rolb
js
stos
stos
mov
jmp
add
sub
xor
imul
pop
out
stos
or
mov
decl
cmp
pop
shlb
add
jle
push
cmc
pushl
mov
fcmovnb
pop
lds
jg
int3
or
inc
inc
in
cld
decl
mov
cmp
mov
and
loopne
xlat
pop
sbb
inc
mov
mov
xor
in
jae
adc
jge
mov
jle
shll
cmp
mov
in
out
outsl
cmpsl
gs
ljmp
mov
cld
adc
test
mov
dec
dec
inc
ljmp
arpl
cmpsb
pop
hlt
movsb
iret
jb
xchg
out
out
xchg
enter
fcoml
cmp
and
fsubp
pop
outsb
sub
sub
std
call
inc
pop
mov
pushf
xchg
int
ret
shll
sbb
xchg
loop
ret
mov
in
mov
out
sbb
scas
mov
xchg
scas
push
out
orl
mov
cmp
push
scas
bound
mov
cmp
adc
mov
mov
adc
fimuls
mov
jne
test
daa
hlt
pushl
mov
and
ds
imul
fadds
mov
leave
mov
incl
xchg
mov
fsts
out
mov
jae
sbb
test
pushl
idiv
mov
popa
loop
flds
movsl
shlb
xchg
dec
mov
out
push
inc
jge
adc
sahf
or
dec
out
push
nop
xor
cli
pop
cmp
bound
mov
dec
mov
adc
pushl
adc
jl
ret
faddl
jcxz
arpl
sub
incl
dec
mov
jg
jl
mull
jle
dec
loopne
pop
in
and
insl
pop
cmpsb
jecxz
mov
mov
push
pop
aam
mov
jae
xchg
daa
fs
add
jae
rol
xchg
mov
xchg
dec
sub
mov
in
sub
pop
mov
aaa
out
movsb
push
decl
mov
inc
lret
xchg
iret
jne
inc
dec
je
cmp
xor
push
sub
out
orb
pop
jb
fwait
in
mov
push
jg
and
popf
cld
mov
xchg
call
decl
lahf
pop
loop
into
pop
add
jge
imul
ds
mov
mov
insl
lock
outsb
stos
scas
nop
pop
ss
push
xor
or
movsb
push
ret
mov
lret
mov
sub
clc
jp
jge
pop
xor
cmpsb
movsl
cmp
ljmp
or
mov
push
xchg
pusha
sbb
arpl
dec
push
sbb
jmp
cltd
test
xchg
mov
rorl
testb
mov
xchg
pop
mov
fsubrp
sarb
incl
push
leave
mov
jb
outsl
repz
push
jle
cmp
lcall
jns
jnp
repnz
add
add
imul
shl
and
addr16
mov
std
jg
xchg
incb
sub
cmp
jge
cmpsl
add
and
sbb
int3
push
into
jg
pop
sub
push
fldenv
cmp
incl
pop
xchg
sub
in
jle
call
jg
sahf
mov
xor
mov
xchg
arpl
jge
pop
dec
cs
into
out
inc
cmp
js
sub
ljmp
out
mov
and
cmpsb
jmp
sub
fbld
push
jp
adc
enter
cmp
mov
rorl
ret
add
mov
mov
add
loop
int
push
icebp
adc
jg
xchg
lock
and
mov
sarl
imul
mov
loopne
incl
scas
xchg
mov
xor
ds
pop
outsl
lahf
int
jl
loopne
xchg
pop
rorb
sub
je
lds
incl
mov
lahf
ficomps
dec
gs
mov
test
push
jno
fmul
mov
add
dec
lods
push
or
jns
adc
hlt
add
decb
mov
lcall
mov
loop
fmull
jne
int3
shlb
cmpsl
shrl
add
jmp
fildl
cmp
dec
pop
dec
ljmp
shr
and
adc
push
les
pop
and
or
xchg
dec
imul
adc
nopl
insb
call
push
bnd
dec
fistps
sub
lds
cmp
lahf
add
mov
and
decl
and
xchg
and
clc
pop
add
jmp
ret
decl
cld
sbb
cmp
ret
pop
pop
cwtl
fildll
push
push
dec
push
imull
jge
subl
ss
mov
push
sub
mov
mov
jmp
rcll
mov
pop
stc
daa
dec
jne
fs
ror
cmp
call
mov
inc
xlat
jo
or
xchg
fld
dec
andb
jg
pop
fmuls
jg
pop
sar
inc
sbb
pop
adc
xor
cmp
faddl
clc
pop
mov
aad
mov
mov
push
or
xor
xchg
or
xor
shlb
in
adc
leave
push
inc
repnz
decl
and
sub
iret
pop
adc
dec
fimull
add
rorb
sub
cmp
and
jmp
xchg
fsubs
and
mov
sbbb
push
xchg
fidivrl
out
adc
incl
xchg
inc
pop
pusha
or
sub
dec
ffree
call
adc
cmpsb
pusha
outsb
cltd
cltd
push
push
dec
loopne
xchg
cltd
das
sbb
xchg
mov
scas
cmp
jo
mov
and
testb
dec
pop
mov
arpl
xor
fisubrs
lahf
xchg
dec
jbe
test
lock
mov
xchg
sbb
and
inc
dec
das
int3
icebp
loopne
shlb
jmp
add
test
sbb
js
mov
pop
pop
lock
int
out
mov
fwait
push
mov
inc
lods
shll
in
xor
mov
ss
in
movsb
and
push
cmp
add
mov
xor
xchg
sub
fcomip
pop
mov
jnp
out
and
insl
shll
inc
inc
pop
rcrb
jmp
sub
outsl
jp
mov
movsb
popa
aam
stc
lods
in
test
dec
movsb
ret
lods
jg
lcall
mov
cli
addl
mov
push
lret
fdivs
mov
ljmp
pop
arpl
jnp
mov
ds
mov
sar
push
ljmp
loopne
push
jl
cmp
pop
xchg
stc
and
in
mov
in
jmp
cmp
lds
cwtl
imul
lret
loopne
cli
call
or
sub
inc
mov
xor
dec
into
cmpsl
adc
decl
pop
ljmp
fsubrl
mov
repz
mov
int3
jns
pop
jno
ret
pushl
add
ror
sti
mov
js
data16
sarb
xor
add
mov
jae
rorl
sub
sbb
add
aas
mov
push
daa
xchg
mov
hlt
movsb
dec
dec
cmp
pop
lret
xchg
ds
or
outsl
push
ljmp
xor
fnstsw
iret
pop
das
incl
and
popa
push
jne
mov
xor
dec
mov
push
cmp
shl
outsb
sub
lcall
sub
xchg
sbb
imul
dec
mov
cwtl
or
jb
or
ljmp
push
scas
lret
arpl
jecxz
gs
icebp
idivb
cmp
pop
dec
cmp
mov
push
cltd
inc
aad
cmp
mov
xchg
out
scas
sahf
enter
cmpsb
pop
dec
mov
xchg
mov
mov
sti
mov
imul
movsb
daa
popf
add
jl
xor
bound
dec
js
into
outsb
and
mov
call
xor
push
ja
addr16
aas
test
pop
repz
in
in
in
in
aaa
sbb
outsb
add
into
sbb
std
into
fstpl
adc
sbb
movsl
leave
mov
cmpsb
scas
add
jnp
nop
leave
adc
jmp
adc
xor
push
add
js
loopne
aas
filds
fmull
adc
lahf
inc
je
mov
incl
imul
data16
insb
mov
mov
pop
mov
push
lahf
mov
ds
incl
xchg
dec
popa
ror
mov
push
sbb
or
incl
fildl
test
sub
clc
pop
sbb
xchg
push
sub
xchg
inc
pop
fcomip
mov
add
ja
loope
or
rorl
loope
jo
pand
ret
jmp
xlat
mov
jge
aad
add
sbb
lds
mov
stos
adc
cwtl
mov
pop
les
cld
dec
ss
scas
sub
mov
pop
aas
stc
lcall
inc
sbb
inc
sbb
xor
push
xchg
and
decl
inc
stos
cmp
mov
fisubrl
mov
push
clc
mov
jne
pop
ljmp
and
or
pop
hlt
bound
and
xlat
inc
and
mov
xchg
pushf
scas
out
mov
mov
fcmovnu
jne
je
fisttps
ljmp
in
sub
lcall
incb
sbb
mov
push
mov
push
xchg
movsl
cmp
add
pop
cmpsb
dec
mov
jl
cmc
dec
jo
mov
dec
mov
decl
out
dec
adc
lock
jg
sbb
js
out
lcall
in
pusha
inc
lcall
mov
add
pop
jg
fdivr
pop
std
call
rcrl
into
cmp
push
xor
pop
lods
cli
out
shr
add
scas
sbbb
decl
sub
into
push
dec
out
mov
sar
pushl
jecxz
pop
and
daa
aaa
stos
cmp
shrb
xchg
sbbb
lret
fisttpll
call
incl
das
lret
xlat
push
rorb
jg
call
in
mov
jle
mov
add
and
ss
ret
jns
fbld
in
std
movsl
cltd
cmp
in
jge
ss
ficomps
shrl
xchg
stos
fcoml
clc
inc
sub
pop
icebp
dec
outsb
out
and
mov
sbb
sub
out
cli
ss
add
inc
jl
ret
ljmp
xor
insl
mov
xor
mov
mov
decl
or
and
cld
xchg
mov
mov
xchg
out
shlb
nop
cld
pop
jae
push
mov
cmp
decl
jb
mov
adc
xchg
sub
mov
cmp
loope
xchg
jg
jne
cli
std
xor
mov
push
dec
mov
xchg
mov
pushl
inc
inc
cltd
adc
out
dec
pop
lret
xchg
rcl
test
std
and
lock
das
sbb
cli
xchg
lret
and
xchg
je
fbld
incl
xor
lret
lods
jb
test
aaa
xchg
pop
andb
scas
ja
cmpsb
jmp
std
push
jne,pn
divl
push
jl
test
outsl
push
and
fbld
mov
cmp
out
pop
mov
lock
into
movb
pop
lock
xchg
pop
paddd
jb
fimuls
adc
mov
mov
lcall
leave
jnp
rcrb
in
mov
arpl
movsl
cli
sbb
aas
add
shll
lds
lock
je
shr
aam
stos
and
mov
out
ljmp
or
push
mov
test
rcll
filds
decl
adc
pop
fsts
lods
sub
incl
pop
dec
dec
push
fidivrl
fidivl
xchg
test
xchg
rorl
mov
jne
inc
cmp
imul
jg
mov
cld
aam
imul
popf
jb
loop
mov
mov
or
mov
imul
jne
in
out
mov
mov
outsb
mov
adc
and
test
nop
jmp
xlat
xor
fistps
pop
adc
leave
call
inc
and
std
cwtl
sti
add
cmc
aaa
cmp
and
fnstsw
jmp
decl
in
mov
rcrl
inc
out
add
mov
cmp
pop
pop
or
imul
sub
out
pop
divb
push
cltd
pop
push
inc
nop
cld
xchg
cmpsl
arpl
cltd
ljmp
fildll
cmpsb
rcll
sub
in
mov
pusha
or
call
xchg
adc
jnp
lahf
loope
dec
int
fisubrl
jg
xor
jmp
xlat
in
inc
adc
mov
nop
and
jecxz
loope
incl
dec
jmp
inc
div
pop
sbb
cmp
mov
fcompl
imul
in
add
cmovnp
push
add
or
pushl
lea
mov
in
je
lahf
mov
mov
decl
mov
out
je
mov
add
imul
mov
test
pop
push
jb
mov
cmp
repnz
ds
fnstenv
xor
adc
shlb
aam
mov
mov
dec
jns
pop
xor
add
scas
pop
out
push
fbld
jno
xorl
hlt
call
sub
xchg
sti
icebp
jo
mov
ljmp
xchg
sbb
xor
cmp
jae
ficompl
ja
and
stos
std
js
ljmp
mov
je
pop
rcll
cmp
fs
pop
outsl
lret
xchg
clc
popf
jae
lahf
dec
int3
enter
lahf
xor
jg
mov
int3
inc
jo
mov
mov
cmp
dec
les
push
sbb
cmp
pop
pushl
pop
in
adcb
cmp
sub
cmp
incl
jns
sub
faddl
push
fists
clc
mov
push
and
jbe
adc
jle
fisttps
loope
inc
dec
jg
int
adc
stc
ljmp
and
cwtl
sbb
ljmp
pop
data16
xchg
dec
sbb
movsb
push
add
incl
lock
pop
dec
test
cmc
cltd
fstl
xor
jg
sbb
fisttpll
adc
in
mov
je
add
adc
fcmovb
incl
or
jl
incb
mov
lea
pop
hlt
mov
lcall
add
cmp
jecxz
jge
in
ds
lods
lahf
fadd
mov
fiaddl
stos
jecxz
scas
aaa
push
pop
les
mov
pop
movsl
and
mov
pop
lret
aaa
pop
test
push
daa
decl
add
test
lods
adc
and
jecxz
lock
fcomip
cmpsl
out
cli
fisubrs
nop
and
or
pushf
jg
sarb
movsl
adc
push
pusha
mov
loope
jg
lcall
sub
mov
xor
mov
lods
pop
pop
enter
call
mov
mov
nop
cmp
sub
int
pop
cwtl
inc
decl
mov
orb
xchg
popf
out
mov
or
jmp
jnp
pop
mov
push
sub
push
testl
int
adc
mov
inc
fdivp
mov
mov
incl
movsl
lcall
jg
cwtl
cmp
lret
and
inc
les
push
xchg
jne
negl
test
cmpb
rcrb
sub
iret
cmpsl
ljmp
jnp
es
imul
cltd
mov
jnp
dec
ss
movsb
mov
xchg
pop
add
xchg
pop
jp
cld
inc
mov
cwtl
lea
sbb
das
jae
push
in
leave
add
and
adc
std
mov
aaa
nop
lret
xchg
cmc
and
sub
push
pop
inc
mov
in
testl
lock
adc
add
scas
sbb
inc
mov
lahf
out
dec
xlat
decl
jmp
lods
xor
jns,pt
in
in
insb
xchg
jnp
dec
adc
inc
push
push
push
cld
out
push
les
dec
nop
ljmp
mov
jge
shrb
imul
dec
jle
jbe
pop
or
cli
cmpsl
sbb
stos
mov
dec
fistpl
or
shr
xchg
and
repnz
movsb
iret
mov
jo
mov
aam
cld
dec
ret
dec
fxch
xor
ljmp
stos
stc
mov
call
mov
cmp
mov
data16
push
mov
mov
jmp
pop
mov
movsb
and
test
pop
hlt
lret
aas
dec
lods
js
sub
jmp
lret
jnp
push
divb
pop
in
lods
and
std
jmp
jb
idivb
mov
stos
mov
je
mov
stos
pop
mov
or
mov
mov
xchg
aas
lret
aam
dec
cli
push
hlt
dec
movsl
pop
mov
jle
push
out
xor
call
lahf
lret
adc
add
stos
jno
add
mov
jmp
call
sbb
hlt
jne
sbb
in
mov
mov
cvtpi2ps
mov
pop
adc
je
mov
fsts
pop
cmpsl
jns
or
ficoms
mov
inc
sti
filds
xor
movntps
pop
lcall
sub
fs
inc
ss
inc
and
jmp
addb
inc
mov
gs
ret
adc
mov
std
test
call
rolb
incl
aam
scas
lcall
mov
mov
andl
orb
aaa
std
xlat
lret
mov
es
cmp
out
mov
sub
sub
rcl
shrl
in
xchg
inc
loopne
insl
push
sbb
call
lcall
push
mov
scas
sub
sarl
bound
dec
into
mov
fsts
add
jmp
xchg
xor
mov
lcall
dec
enter
mov
idivl
out
test
lcall
mov
sub
call
scas
or
cmpl
push
xchg
mov
sub
or
pusha
into
pop
lds
xchg
sub
call
xlat
es
stc
fdivrl
adc
inc
jne
ficomps
test
aam
roll
call
test
int3
aaa
add
enter
mov
gs
fbstp
xlat
sbb
push
sar
out
pop
pop
fsts
xor
lret
inc
aad
jmp
ds
icebp
mov
idivb
ljmp
rolb
leave
sti
dec
jmp
push
mov
decl
sti
ja
or
mov
loop
ss
or
inc
sub
iret
fisubrs
add
es
incl
push
clc
pop
push
sbb
xlat
xchg
inc
cmp
pop
inc
mov
cmpsl
sub
mov
sbb
or
es
call
fs
lods
stos
push
in
cmp
pop
test
sub
ljmp
pop
outsb
push
sbb
add
fidivrs
repnz
mov
push
popf
xchg
rorb
iret
insb
gs
aas
sbb
adc
leave
dec
fsts
fwait
arpl
mov
sahf
adc
decl
iret
stos
jnp
mov
lcall
pop
out
mov
dec
push
xchg
sub
insb
aas
mov
xchg
add
repz
nop
hlt
incl
idivl
call
push
xchg
push
mov
mov
sbb
faddp
sub
xchg
jb
jmp
adc
aam
stos
out
sub
aam
leave
dec
test
ficoms
sti
lcall
and
aaa
bound
mov
xchg
sbb
pop
sub
imul
pusha
repnz
incl
add
mov
scas
outsb
xlat
aas
enter
fwait
mov
stos
insl
fwait
pop
rorl
incb
cmpsb
insb
jg
sahf
bound
dec
fxtract
sbb
decl
cmpsl
out
xchg
testl
mov
call
dec
cmpsl
loop
jne
xor
clc
and
cld
mov
outsl
ds
es
sti
outsl
push
aas
enter
mov
movsb
pop
mov
adc
mov
cmp
jbe
jo
sub
pavgb
addr16
dec
outsb
sub
ds
pop
and
pop
dec
and
inc
mov
jne
lahf
mov
nop
mov
arpl
jl
cmp
xlat
aam
mov
decl
daa
es
xchg
mov
out
pop
adc
movsl
inc
outsb
or
fwait
and
jb
pushl
incl
fisttps
push
and
data16
inc
pop
les
mov
cmp
incl
jnp
pop
jns,pn
mov
cs
arpl
arpl
pop
scas
cmc
push
inc
adc
ss
dec
xor
cltd
decb
add
inc
js
enter
push
stc
in
call
and
cmp
repnz
mov
sub
in
xor
push
movsb
ret
push
push
jmp
fsubrl
mov
mov
pop
cwtl
cmc
mov
pop
out
xor
decl
mov
adc
xchg
push
popf
shr
incl
fidivs
sti
adc
xchg
mov
sti
push
jae
or
pop
pop
cwtl
xchg
jbe
cmpsl
clc
lcall
or
les
jbe
comiss
jg
adc
bound
mov
pop
xor
cld
arpl
enter
fldcw
add
cmpsb
data16
inc
outsl
jecxz
inc
mov
data16
xor
out
test
mov
loope
fwait
or
les
push
push
xchg
dec
std
lcall
in
push
iret
jecxz
mov
roll
inc
std
fists
hlt
adc
pop
cmp
inc
outsb
push
icebp
jg
mov
push
xor
inc
or
call
mov
shlb
shll
cmp
add
lea
pop
mov
call
lret
or
clc
outsb
xchg
push
pop
insb
stc
sub
decl
inc
add
test
jg
jg
fldenv
cmc
es
les
outsb
push
daa
mov
jg
fistl
jl
dec
cmp
cmc
fwait
adc
addb
and
push
sbb
pushl
aaa
inc
add
dec
pop
dec
mov
les
jmp
jno
enter
xchg
imul
jmp
and
cltd
sbb
enter
shrb
push
lret
mov
jae
imul
decl
mov
push
xor
ror
mov
aas
pop
xchg
jp
add
push
mov
xchg
jmp
clc
inc
lahf
mov
adc
fnstsw
js
cmp
cmp
sbb
sub
bnd
adc
xor
decb
leave
jg
inc
icebp
repnz
sarb
and
popa
clc
jp
mov
aad
lcall
clc
ret
add
addr16
shl
addl
cli
pop
push
inc
pop
push
in
and
xchg
xlat
ljmp
pop
lret
add
jle
inc
ret
decl
repnz
dec
push
scas
sarl
inc
sbb
inc
popa
push
or
fdivrp
add
stos
push
int3
ret
je
pop
push
in
ja
decl
pushf
push
mov
cmpsb
shlb
dec
mov
incl
fistps
ljmp
push
cltd
sarl
adc
sub
jmp
sub
and
data16
dec
jns
inc
mov
sbb
mov
repz
fs
std
jp
pop
jge
mov
hlt
pop
add
push
jg
call
pop
dec
inc
or
xor
enter
test
movsl
pop
add
scas
and
pop
mov
bound
pop
decl
lods
mov
mov
pop
cmp
inc
jne
fwait
rol
scas
push
or
std
and
daa
call
ret
pop
push
sub
sbb
out
mov
or
sbbl
aam
cld
pushl
fisubl
jg
pop
mov
into
jo
fmull
test
das
mov
adc
cli
dec
adc
push
sub
sub
fisubrs
outsl
and
inc
rolb
push
out
push
into
inc
xor
sub
enter
hlt
and
ljmp
fs
xchg
lea
xchg
jmp
add
push
sub
push
fiadds
aas
add
movsb
dec
add
fs
shrb
aas
inc
xchg
pusha
inc
jmp
push
pop
in
push
sbb
pop
mov
inc
or
or
jb
out
call
loopne
cmp
push
mov
pop
adc
mov
dec
jne
inc
clc
ljmp
int
mov
jbe
add
clc
incl
mov
test
sbb
pop
mov
stos
out
cmc
or
movsb
stos
and
add
cmpb
jg
lods
loopne
incl
sbb
ja
xchg
ljmp
ds
int3
xor
mov
inc
sysexit
inc
mov
push
fdivr
lcall
cmpsb
out
bound
push
and
pop
jle,pt
or
sub
ficoms
scas
push
incl
mov
enter
sub
pushf
sti
mov
addl
mov
xor
rcr
dec
cmpsb
cmp
repz
test
cli
jmp
out
cld
enter
inc
movsl
loopne
add
and
incl
push
lahf
push
lods
mov
jne
cld
popa
or
sbb
dec
and
aad
mov
call
out
ja
mov
dec
jg
inc
std
push
into
cmp
inc
lock
mov
xchg
call
bound
jo
popf
jns
mov
lahf
gs
jmp
ss
out
and
shlb
cs
push
jecxz
hlt
fwait
lods
fisttps
into
addb
xlat
or
sti
sub
dec
push
fdivs
add
push
jp
aas
add
mov
bound
sub
push
jg
mov
loopne
push
add
dec
jno
das
mov
sub
mov
jg
sub
push
shrl
inc
xor
lcall
daa
xchg
cmp
xchg
jbe
push
insb
cli
imul
or
push
clc
pop
pop
inc
sub
rcr
lods
push
iret
or
xchg
sti
subb
jg
aam
add
hlt
inc
fiaddl
hlt
push
fs
push
jmp
mov
cmp
negl
and
mov
sub
outsb
adc
sub
push
mov
pop
rcrb
jg
je
mov
cmp
aas
pusha
stos
mov
lock
test
dec
divb
pop
cli
incl
dec
rorb
cwtl
test
mov
and
sahf
call
daa
adc
popf
cmp
mov
push
lahf
stos
dec
test
in
fimull
in
lods
loop
out
aad
aas
pushl
jmp
mov
psrlq
inc
lods
in
lcall
adc
mov
and
cmp
jp
iret
jbe
push
jge
cwtd
mov
mov
pushl
std
orb
xchg
int
ret
pop
lods
jo
lea
sbbb
aaa
jg
pop
rcrb
xchg
lret
lret
sbb
jo
mov
fdivs
pop
ljmp
rorb
inc
lock
test
cmp
scas
cmpsb
cmc
cld
fiadds
mov
push
insb
adc
xlat
xchg
push
pop
jg
inc
mov
daa
adcl
sub
out
ds
mov
in
mov
mov
outsl
or
ljmp
cmp
rol
cs
add
stos
bnd
out
incl
das
scas
push
repz
fcomps
jmp
adc
incl
cld
addr16
xchg
das
and
nop
mov
jl
push
xchg
data16
adc
jle
call
movl
leave
fucomi
push
aam
lods
fcmovnbe
fbld
pushl
mov
push
jge
push
mov
lahf
rdtsc
jne
mov
incl
push
jbe
ja
mov
imul
decl
test
mov
jns
jecxz
push
cwtl
xor
leave
ret
in
or
sub
add
inc
decl
test
leave
aaa
mov
push
loopne
push
repnz
insl
scas
es
jg
das
fisttpl
cmp
nop
sub
xchg
mov
jbe
outsl
xlat
cli
pushl
sbb
pusha
sub
in
pusha
pop
insl
xchg
mov
xorl
mov
dec
sti
insb
stc
sahf
adc
pop
fwait
cmp
jno
hlt
dec
cmpsb
jle
test
push
pop
jmp
fcoml
pop
into
rcl
push
jg
rcr
je
lcall
inc
jo
jg
and
fldl
fbstp
in
lds
push
rcrb
jnp
lret
decl
loope
sub
cltd
xor
out
xchg
aas
cli
mov
out
or
xchg
cmp
pushl
pop
vmread
sub
pop
fists
sub
xlat
aad
mov
std
mov
movsl
sub
inc
out
xor
xchg
xor
sahf
fnsave
add
aaa
cmc
fbld
jmp
scas
pand
aad
les
ss
mov
pop
hlt
mov
or
inc
cli
sbb
add
clc
ljmp
rorb
divb
ljmp
pshufw
incl
sbb
xchg
dec
mov
xchg
and
mov
leave
dec
outsb
out
pop
addb
popa
xor
sub
mov
fwait
pusha
scas
icebp
decl
ljmp
push
iret
pop
nop
cltd
push
xchg
out
jb
insl
out
movsb
sub
call
in
sbb
xchg
scas
sub
cmp
mov
jo
nop
mov
cmp
dec
xchg
jmp
cwtl
jle
xchg
out
adc
es
nop
xor
fs
daa
jb
ljmp
scas
push
mov
dec
leave
pop
jnp
push
jecxz
mov
icebp
push
mov
loope
rcrl
mov
das
mov
cmpsl
jle
adc
cmp
cmp
jg
fstl
aad
jne
fdivr
cs
cli
jne
aas
and
imul
jl
fiaddl
push
sbb
xchg
popa
push
out
jmp
adc
std
and
add
mov
iret
xchg
and
ja
inc
iret
lahf
in
fidivrs
cli
enter
cwtl
fsubrp
stc
pop
inc
mov
outsl
jg
icebp
push
pushl
les
mov
insb
mov
mov
stos
inc
fcmove
cmp
mov
pop
lds
hlt
mov
xor
add
lahf
pop
lds
adc
clc
sbb
and
inc
mov
push
lea
fadds
leave
insb
rcr
pop
xor
pop
jp
call
or
jae
add
push
fwait
jnp
lcall
push
loopnew
jle
cmc
inc
popa
mov
or
mov
or
inc
movsb
sub
push
shlb
rcl
add
mov
les
xor
les
lcall
sub
arpl
shrb
inc
or
mov
daa
repnz
mov
lods
push
clc
push
cld
fsubs
fiaddl
cwtl
aaa
dec
mov
dec
inc
lret
cmpsb
shl
stos
addl
ljmp
add
js
pop
ficomps
adc
mov
push
mov
push
jg
dec
sbb
pop
sbb
mov
cmc
incl
inc
adc
scas
xchg
inc
test
test
cs
outsl
cmp
lock
js
gs
jb
fistpll
jge
jp
cli
lcall
cs
sarl
icebp
xlat
sbb
xchg
mov
jb
mov
std
mov
popf
rcll
negb
frstor
std
call
es
add
inc
cltd
movsb
mov
jg
test
outsb
in
inc
push
and
leave
dec
push
aas
mov
xchg
lods
jno
outsl
push
aaa
mov
cmpsl
cltd
jno
pop
xchg
sub
dec
mov
imul
xchg
gs
andl
jmp
or
jl
cmp
rcrl
push
xor
pop
movlps
call
push
mov
stc
xlat
movsb
lock
outsl
rorb
push
sub
lret
adc
ljmp
push
cs
xor
xor
mov
xchg
or
jge
jg
jmp
or
ds
pop
mov
sbb
push
jns
xchg
jno
loopne
shlb
outsl
xor
loope
sbb
push
and
add
in
mov
cmpsl
inc
or
pop
out
mov
aam
and
adc
mov
mov
pop
div
mov
push
pop
aam
pop
shlb
das
sub
fbld
scas
inc
mov
fsubs
cmp
sub
in
mov
cmpsl
mov
test
stc
bound
lret
out
dec
ret
sub
ja
ret
jl
mov
sbb
mov
scas
mov
ljmp
cmp
xchg
mov
add
outsl
mov
add
jmp
jp
inc
lods
imul
mov
push
mov
popf
enter
or
mov
push
inc
adc
push
das
jmp
jl
arpl
in
bound
cmp
sbb
pop
movb
jmp
fisttps
push
or
scas
xlat
push
mov
sti
cmp
call
cmpsl
loop
add
pop
mov
mov
les
test
push
pop
sub
mul
jg
mov
push
push
pushl
xchg
xchg
faddl
inc
jnp
sbb
xchg
ja
add
cmpl
aam
outsl
insl
jb
mov
sbb
test
repnz
insb
repz
in
and
rcr
inc
out
andb
jo
xchg
out
mov
jno
mov
mov
or
cltd
js
mov
incl
pop
push
jo
mov
cmpl
repz
xchg
cmp
loopne
cmp
jb
cltd
adc
or
sub
push
mov
mov
mov
ljmp
jp
cmp
cmp
jmp
lcall
or
sbb
mov
mov
daa
out
rcrb
insb
add
add
lods
adc
test
imul
out
ds
leave
stos
inc
xchg
ljmp
out
rcl
sbb
mov
inc
lods
lea
sbb
repnz
es
call
arpl
aaa
rcl
les
sbb
dec
cmc
lret
pop
adc
std
pop
jae
into
loop
hlt
jmp
mov
xlat
test
xchg
jne
ret
scas
add
popa
push
jne
decl
lret
bound
int
push
cmp
adc
jmp
jle
imul
pop
fsubl
xchg
hlt
sbb
xor
jo
decl
xlat
cmp
add
test
push
jo
pushf
xchg
push
cmpl
clc
pop
in
das
xor
addr16
sbb
pop
cmp
cmp
xor
xchg
mov
mov
popf
lcall
jmp
fdivrl
or
mov
lret
sbb
ljmp
lcall
xchg
pop
jmp
outsb
xchg
scas
scas
stos
stos
adc
and
xor
incl
inc
or
stc
imul
fwait
notb
and
aas
roll
mov
mov
jb
scas
cli
push
outsb
data16
or
jbe
pop
pop
call
dec
dec
jg
lcall
inc
mov
repnz
pop
lret
inc
notl
bound
jmp
push
pop
dec
das
mov
mov
inc
test
jp
jns
jg
push
mov
mov
cwtl
inc
addb
inc
mov
inc
push
push
scas
pop
lock
jg
jge
loopne
jo
enter
test
mov
stos
jns
pop
xchg
ljmp
rsqrtps
lret
mov
les
cld
call
icebp
repz
and
es
shrl
fisttpl
cmpsl
and
das
lahf
lock
lods
rorl
sti
incl
lret
lods
cwtl
and
push
les
xor
or
imul
mov
out
repz
sub
mov
sbb
incl
jmp
cltd
cmc
out
roll
sbb
call
out
push
cmp
mov
insb
cmp
mov
ret
dec
mov
orb
push
cmpsb
ljmp
repz
pop
cmp
push
and
mov
pop
arpl
insb
cmpsb
mov
cmp
and
icebp
sbb
aam
push
ljmp
popf
addr16
or
filds
lcall
jns
out
or
aas
nop
movsl
in
pop
cmp
lcall
cli
pmaddwd
dec
sub
inc
iret
mov
out
push
cmpsl
mov
mov
imulb
or
jne
ja
clc
add
fcomip
call
lods
fdivrs
in
dec
nop
lods
iret
lret
pop
jne
jbe
mov
test
ss
pushl
mov
and
mov
bound
push
push
decl
mov
sub
test
gs
decl
xchg
sub
cmpsl
jmp
popf
inc
and
inc
shl
les
mov
sarb
cmp
stos
cmp
std
push
push
push
dec
dec
xor
add
lcall
fs
mov
popa
and
lea
bound
mov
push
insb
ss
jg
and
cmp
lcall
cmpsb
lock
inc
cwtl
or
dec
add
jecxz
cmpsb
sub
push
mov
out
aas
adcl
lock
xchg
fwait
sahf
add
repnz
ret
xchg
idiv
mov
jb
call
dec
js
test
mov
xor
leave
aaa
testl
push
aas
dec
or
iret
insl
cmc
gs
in
ja
jge
bnd
shll
outsb
push
fnstenv
xchg
sbbb
fstl
ja
cmpsb
and
and
or
add
mov
ds
fcmove
xchg
es
rorl
clc
fdiv
sub
jb
popf
pop
inc
mov
jg
daa
stos
xchg
xchg
add
sbb
mov
sti
xlat
fisttps
sub
xor
jbe
xchg
mov
ds
dec
mov
std
andb
xor
ret
fistpll
data16
decl
nop
xchg
or
and
std
mov
cmpsl
mov
and
xchg
xor
decl
inc
dec
pop
push
sub
mov
jno
push
into
mov
sbb
fsubs
sti
sahf
push
mov
scas
cmp
fs
jae
es
inc
insl
idivb
ret
or
push
pop
sbb
or
jno
mov
pop
mov
xor
jne
sbb
std
adc
leave
lock
mov
incl
cmp
arpl
push
xor
sahf
clc
push
std
dec
sbb
invd
scas
in
flds
pushl
stos
or
repnz
pop
xor
loop
test
sahf
insl
stos
push
mov
lods
and
mov
js
mov
movsb
pop
daa
push
cmp
mov
add
sbb
push
sub
mov
inc
ror
push
xchg
mov
mov
jne
decl
mov
data16
iret
imul
pop
mov
cmc
icebp
test
popf
aaa
test
pushl
scas
out
inc
jne
lcall
add
mov
sti
xchg
incl
loope
pop
mov
jle
adc
xor
je
ljmp
pusha
lret
fwait
push
iret
adc
sbb
lock
daa
sbb
icebp
call
adcl
inc
int3
add
adc
or
and
shlb
jb
xorl
movsb
dec
test
xor
mov
shll
lea
cmpsb
pop
jge
das
add
mov
xchg
cltd
lret
jge
mov
jg
add
outsl
lods
bound
jmp
ljmp
sub
nop
jle
loop
test
xchg
dec
or
inc
icebp
inc
jnp,pt
test
push
add
inc
inc
adc
stc
sbb
xor
hlt
iret
ret
cmpsb
fisubl
inc
rclb
ljmp
mov
push
and
cmc
popf
sahf
xchg
mov
pop
xchg
ja
pop
gs
fcomip
push
lods
popf
pusha
xchg
ljmp
xchg
sub
and
sar
incl
inc
aad
mov
jp
repz
adc
mov
pop
cmp
shl
jno
adc
xchg
cli
enter
cmp
xchg
hlt
inc
mov
dec
pop
in
sbb
out
js
lcall
int3
mov
rcrl
cmpsb
test
jae
mov
out
addl
mov
sbb
stos
xor
mov
lea
std
jg
mov
jp
jmp
jae
jne
cltd
adc
pop
cli
push
popa
fdivl
inc
fbld
aam
mov
std
xchg
inc
xchg
add
xorl
jmp
lahf
push
call
xlat
mov
in
sbb
dec
lds
lds
das
xchg
call
call
dec
rol
fldlg2
inc
mov
mov
movl
push
dec
les
lret
pop
je
lods
out
or
ljmp
iret
out
int3
jae
call
sbb
push
stos
sahf
xor
shll
xor
ljmp
pop
scas
in
test
test
lcall
mov
fidivrs
cld
pop
subb
jae
outsl
arpl
dec
sub
aam
inc
cmp
out
mov
into
popa
dec
jge
pop
insb
loop
lret
out
lods
and
aad
into
pop
ret
jmp
rorl
push
cld
inc
adc
sbb
xor
inc
jb
or
nop
mov
sub
xchg
sub
hlt
lcall
jnp
lcall
in
jle
pop
iret
out
add
pop
popf
push
or
pusha
mov
sbb
andl
incl
mov
add
or
mov
fisttps
or
push
aam
in
xor
in
shlb
loopne
cltd
mov
jno
ret
add
xchg
out
cltd
or
push
jno
inc
mov
lods
enter
aaa
popa
cld
inc
or
fcmovb
or
jg
test
and
adc
pop
mov
aaa
inc
add
jmp
mov
push
out
pop
cwtl
xor
aaa
cmc
sub
popa
jno
nop
test
mov
ds
mov
xor
sbb
mov
push
adc
inc
xor
stos
and
idiv
jmp
insl
push
and
lods
xor
pop
movsb
clc
dec
scas
sbb
push
jae
inc
add
je
daa
sbb
mov
push
ja
cmpl
jle
iret
insb
popf
push
pop
decl
iret
cmp
movsb
jb
and
pushf
outsl
mov
fisubl
mov
fwait
lcall
cld
icebp
sub
cmp
mov
daa
repnz
cs
in
dec
mov
mov
hlt
les
push
pop
outsl
clc
lcall
jns
stos
arpl
aam
sbb
push
mov
dec
jns
stc
sub
pushf
xchg
call
push
loopne
pop
adc
adc
mov
cli
inc
les
lock
cli
push
sbb
mov
aad
dec
add
icebp
push
xchg
mov
pop
mov
sub
incl
cld
mov
pop
cltd
xchg
cwtl
sbb
or
push
jo
push
lods
xchg
adc
pushl
insb
cli
jg
sbb
fmuls
mov
addr16
lock
leave
cli
fs
mov
adc
and
scas
adcb
mov
dec
pop
add
mov
cmp
cmp
lea
ficomps
mov
loop
pop
clc
pushl
insb
movsb
jnp
fwait
push
lock
fwait
jge
dec
push
ror
fwait
adc
dec
xchg
jg
scas
dec
adc
fists
das
loope
leave
fisubrs
sarl
lcall
scas
pop
jl
push
add
xchg
and
arpl
orb
inc
sar
mov
jns
pop
add
out
outsl
enter
jmp
pop
inc
dec
popa
cli
mov
inc
movsb
mov
incl
or
dec
dec
inc
push
mov
mov
dec
or
test
xor
jne
subb
or
sbb
faddl
test
push
mov
fwait
sub
lcall
or
arpl
mov
call
jmp
je
inc
int3
incl
shrb
dec
or
loop
mov
ret
pop
push
ljmp
call
imul
or
xchg
repnz
and
adc
push
cmpsl
test
xchg
jno
pop
rcl
lds
lcall
or
loopne
mov
sahf
push
sbb
mov
sti
test
and
xor
les
fidivrs
hlt
gs
loop
add
fs
cmp
ret
add
and
mov
fs
jmp
xor
rcrb
xorl
fbld
xchg
loop
mov
arpl
push
dec
push
iret
sbb
lret
pop
dec
cld
and
pop
pop
cmp
call
inc
stos
ss
sbb
xor
lods
loopne
jns
and
call
inc
lcall
std
pop
es
ret
iret
mov
out
and
mov
xor
mov
inc
idiv
pop
inc
jmp
subb
aaa
fcmovb
inc
push
jno
inc
add
jg
hlt
inc
jp
push
lahf
sbb
out
fs
lret
push
pop
jg
jecxz
pop
pop
pop
pop
sahf
push
iret
sbb
pusha
fcoms
ffreep
fcomip
jmp
fstps
xchg
push
sarb
inc
mov
enter
pushf
stos
cmp
call
sbb
cmp
out
ret
fstl
mov
iret
sbbb
dec
fidivs
out
mov
aam
fst
fwait
and
popa
daa
sub
das
xchg
shl
das
push
stos
xor
decl
pop
out
jg
sbb
xchg
xor
and
dec
xor
decl
jle
dec
jnp
out
sub
add
xchg
cmp
mov
dec
icebp
push
mov
pop
push
shr
inc
xor
sar
dec
cmpsb
bound
push
mov
lds
or
dec
daa
jns
repz
jmp
add
and
inc
rclb
fwait
sub
cmpsl
sbb
sbb
int
pop
mov
mov
mov
inc
call
mov
ljmp
or
mov
xor
decl
fldenv
jg
cmpl
jnp
jb
sti
test
lcall
mov
or
jne
arpl
mov
aam
cmp
jmp
and
pop
jg
cld
push
mov
sbb
dec
push
ds
aam
sub
and
push
das
or
push
repz
mov
test
flds
das
inc
cmpl
lock
aas
add
add
fsts
add
repnz
stos
aad
xchg
popf
nop
in
inc
mov
jb
jecxz
int
dec
adcl
mov
jecxz
lcall
mov
inc
mov
adc
data16
in
push
mov
mov
pop
push
fimuls
jb
and
jae
cmp
xchg
cmp
inc
mov
mov
add
xor
shlb
lcall
sbb
iret
mov
stc
adc
jb
push
lret
std
jecxz
jg
sbbl
js
xor
sub
lcall
lahf
icebp
dec
xchg
ret
fldt
imul
in
xchg
out
mov
mov
mov
sbbl
icebp
push
fwait
bound
movsb
int3
push
les
cmp
decl
or
std
pop
jl
leave
in
lcall
cmpb
jl
adc
xor
add
es
jno
lcall
aad
ljmp
dec
push
popf
test
push
mov
adc
or
add
fs
incl
jnp
jmp
mov
sarb
pop
pop
jp
incl
in
push
sub
fidivrl
pop
jnp
mov
loope
repnz
and
adc
xchg
cmpsb
push
sahf
push
lea
mov
jle,pt
push
out
mov
dec
inc
xchg
push
push
clc
xchg
mov
inc
outsl
push
fdivp
call
mov
jns
add
aas
fistps
add
add
incl
pop
jecxz
daa
dec
and
addl
jg
and
mulb
adc
daa
dec
fnsave
popf
adc
inc
mov
jbe
ja
add
jmp
jb
stos
pop
pop
test
push
ja
lcall
sub
mov
xor
js
sbbb
sub
scas
jle
pop
movsb
fxch
incl
lds
scas
pop
ret
push
movsb
jbe
into
lods
dec
cld
outsl
clc
lahf
lret
fdivs
xchg
bound
sub
lret
sbb
sub
jge
dec
cmpsl
imul
bnd
pop
and
push
cli
ljmp
mov
lds
aad
lahf
inc
xor
scas
xor
push
pushl
ljmp
mov
push
outsl
pop
sub
xchg
and
inc
inc
ss
outsl
jmp
call
inc
inc
pop
pop
push
hlt
mov
dec
movl
mov
mov
mov
mov
xlat
and
sbb
jnp
inc
xchg
mov
in
mov
mov
rcr
adc
fs
mov
test
sar
call
jecxz
lock
call
fisubrs
dec
call
jp
out
or
add
xchg
push
add
pop
push
pushf
lret
cli
lret
lock
hlt
pushl
stos
adc
je
das
inc
movsb
imul
jmp
sbb
and
outsl
cmp
jge
lock
addr16
mov
mov
jb
xor
mov
ret
rcll
mulb
test
sbb
dec
out
pusha
ret
inc
jns
adc
and
push
cltd
pushf
pop
jmp
lcall
push
out
out
sub
sbb
lea
insb
add
xor
outsl
test
arpl
aaa
xchg
mov
lcall
leave
xchg
shll
pop
mov
add
inc
xlat
jmp
pop
and
bound
pop
mov
xor
sub
push
fcmove
cs
das
inc
fists
jbe
jmp
cwtl
dec
mov
jne
lcall
fcmovb
mov
sub
pushf
leave
cmp
xchg
insb
xchg
std
cld
dec
incl
je
push
pop
ljmp
mov
cld
ljmp
outsb
loope
jl
sub
and
dec
mov
mov
mov
incl
ljmp
jge
sti
dec
movsl
adc
inc
dec
or
xchg
pop
dec
xchg
add
or
mov
xchg
pushl
test
sub
xchg
add
sbb
mov
movsb
and
dec
xor
jg
lea
pushw
cmp
jb
or
xlat
push
ret
cs
das
push
mov
cmp
jmp
pop
cmc
jg
cmp
stos
orb
inc
mov
inc
jnp
mov
pop
mov
je
sahf
sahf
cmp
or
dec
je
cmp
pop
stc
or
nop
or
scas
dec
out
pop
add
lcall
iret
mov
jbe
ret
xchg
pushf
xchg
push
mov
pop
push
or
jmp
mov
incl
push
in
jp
das
in
mov
push
jmp
mov
or
sbb
cmp
mov
cli
xor
daa
and
leave
dec
jb
xchg
mov
mov
ficoml
cltd
lea
movsl
cwtd
cmpsb
sub
call
das
add
das
xchg
sbb
adc
adc
in
mov
aas
test
decl
inc
fimuls
int
push
mov
pop
int3
mov
loope
jg
sahf
orl
mov
aam
dec
jg
sbb
add
push
mov
fst
add
jg
push
rcrb
insl
daa
adc
cs
fnstsw
int3
adcl
icebp
inc
pop
sub
stc
decl
lret
and
cmpsl
lcall
mov
cmp
idivb
jg
fadd
inc
push
test
mov
xor
idivb
pop
in
aas
adc
jmp
mov
jo
adc
lds
test
pop
clc
sub
ljmp
sti
mov
pusha
fdivrs
mov
adc
xchg
jp
push
mov
mov
aas
adc
mov
andl
push
xor
ret
jne
xchg
test
clc
stos
fiadds
mov
mov
jbe
fwait
and
daa
fmull
sub
roll
mov
sbb
std
mov
fcoms
mov
xchg
lret
xchg
scas
xchg
sub
xor
jg
into
mov
mov
int3
femms
cmp
push
and
jg
sbb
sub
adc
push
adc
paddusb
incl
movsb
gs
jno
adc
loop
ds
lcall
repz
add
jle
lock
jno
jae
cld
fmuls
xchg
leave
mov
cli
clc
inc
call
mov
xchg
scas
loop
sub
notl
push
jl
jecxz
pop
cmp
loope
fwait
mov
aad
sbb
or
out
push
std
jne
pop
nop
pushl
mov
mov
add
insl
ja
lods
lcall
or
stos
fistpl
shll
cmp
adc
leave
add
das
test
add
pusha
into
imul
outsl
lahf
in
lret
push
adc
and
aad
sbb
jo
call
mov
jp
or
bound
and
xchg
lahf
inc
or
or
sar
aad
icebp
push
cmp
pop
popf
popa
mov
pop
inc
cvtdq2ps
gs
pop
push
push
pop
clc
cmp
incl
mov
adc
enter
popf
fdiv
mov
jecxz
loope
decl
in
xchg
addr16
jne
and
clc
adc
xorb
out
cmp
add
xchg
xchg
cmp
outsb
or
sbb
in
cld
lods
iret
inc
test
adc
sub
push
inc
rcl
pop
jg
push
subb
inc
sub
clc
outsl
xchg
hlt
lods
inc
mov
sub
dec
sub
enter
scas
sbb
ds
outsb
js
cmpsb
ret
sub
imul
mov
and
ja
pop
mov
rorb
out
aaa
cld
call
mov
mov
cmp
jbe
lcall
cld
push
pop
mov
out
aad
cmp
scas
and
pushl
mov
repnz
in
pop
push
xchg
mov
xor
cld
incl
add
loopne
incl
addr16
xchg
ljmp
cmp
out
push
xchg
data16
int
pop
pop
adcb
js
fisttps
xor
jg
add
jecxz
stc
and
in
fcomi
inc
lock
add
loopne
add
jge
push
mov
popf
cmpsl
iret
mov
mov
sub
pop
jp
pusha
aas
inc
hlt
jg
mov
lahf
sbb
jne
aad
shld
mov
out
decl
or
subb
mov
push
and
dec
push
out
mov
incl
incl
cltd
lods
rorb
jle
sbbl
fcomip
cmp
xchg
lahf
pop
cmp
dec
lret
mov
pop
xor
pop
out
xor
jno
hlt
pushl
push
and
ss
outsb
and
push
outsl
test
pop
push
jmp
in
movsl
in
jb
je
xchg
ret
mov
sbb
lcall
xor
mov
sbb
repnz
sar
incl
sub
dec
cs
lahf
sub
mov
in
push
push
test
dec
pop
sbb
nop
inc
xlat
int3
cmp
mov
jmp
adc
lock
pop
adc
lds
xchg
out
not
rclb
aaa
daa
or
push
cmp
mov
lahf
lds
incl
jmp
lahf
cltd
jne
mov
call
test
out
icebp
test
cli
movsb
sub
adc
jo
pop
dec
xor
decl
pop
cmp
xchg
pop
inc
push
jg
data16
cld
push
pop
rcll
scas
mov
adc
or
pop
dec
jecxz
dec
stc
pop
cmc
incl
sub
aam
jns
or
jge,pn
inc
fiaddl
pop
pushf
inc
clc
ljmp
mov
lret
inc
das
sbb
aaa
js
shrb
sbb
fs
push
xchg
aad
and
dec
cmp
fsubrl
push
sub
enter
dec
xor
outsl
clc
jg
popl
popf
jp
push
lods
sbb
pop
xchg
mov
ficomps
xchg
cwtl
add
aam
inc
jbe
xchg
daa
jno
jg
push
mov
add
call
dec
push
xor
jo
test
add
inc
mov
cmpsb
cmpsb
cwtl
cmp
push
dec
stos
push
lods
je
push
sub
arpl
lcall
adc
xchg
gs
add
and
mov
and
mov
cmp
test
fisttpll
orl
and
xchg
rorb
jmp
mov
lods
sbb
pusha
into
add
les
cmp
nop/reserved
lcall
test
mov
inc
adc
loop
or
pop
in
les
cmp
cli
mov
push
lods
sbb
enter
pop
aaa
xchg
jbe
imul
inc
jne
lcall
lock
fdivr
pop
sub
sbb
push
clc
cmp
add
incl
mov
shlb
push
sbb
mov
push
dec
ret
sti
lods
jle
cli
cmp
stc
xchg
mov
dec
ljmp
lock
or
lcall
push
cmp
sub
xchg
mov
out
out
jbe
jg
lret
out
lcall
pop
pop
lahf
jns
addr16
movsb
imul
pop
or
and
sbb
and
inc
in
mov
lcall
or
dec
mov
icebp
sbb
sti
or
mov
mov
decl
push
in
xchg
in
mov
mov
sub
jmp
test
and
fldt
adc
pop
daa
adc
sbb
lods
hlt
add
add
decl
call
out
imul
sub
sbb
mov
inc
or
filds
adc
mov
xchg
std
cmp
cmpsb
jg
imul
fsubr
jg
dec
add
aam
cltd
imul
jp
dec
adc
mov
inc
cmpxchg
push
xchg
pop
xchg
repz
push
jmp
mov
xchg
push
gs
mov
mov
xchg
mov
mov
jno
mov
push
inc
incl
fnsave
sarb
jg
push
sbb
push
xchg
cmp
add
out
mov
repnz
iret
push
fsubp
orb
xor
sti
lahf
sbb
jp
mov
decl
loopne
push
fsubrl
push
xor
cmp
adc
decl
mov
push
loopne
andl
negl
pop
add
dec
xchg
dec
ja
gs
ljmp
inc
push
fs
mov
sbb
sbb
mov
xchg
into
mov
xchg
push
mov
inc
test
jg
jg
sbb
arpl
mov
mov
mov
cmp
pop
and
pop
outsb
test
dec
push
loope
lcall
aas
pop
sbb
sarb
shll
rcrl
lret
outsl
aaa
jg
outsl
dec
adc
push
jecxz
push
mov
push
test
mov
pop
std
add
push
sbb
icebp
sbb
cli
xchg
inc
std
popa
gs
push
mov
jge
std
mov
jg
test
ucomiss
pop
jmp
mov
loopne
pop
pop
lret
mov
call
xchg
lea
cmpsl
insl
fwait
test
dec
rcrb
or
mov
push
mov
mov
leave
fldl
mov
jbe
or
gs
mov
lahf
ljmp
shlb
test
test
pop
mov
sahf
push
insb
jne
and
mov
mov
insl
iret
jle
mov
jnp
test
sbb
cmc
xchg
fidivs
inc
jg
mov
pushf
xchg
sbb
sub
push
int3
insb
and
jno
rorl
out
pop
aad
and
push
dec
das
loop
lcall
movzbl
xchg
sarl
xchg
or
jmp
insl
pop
mov
int
cld
cmp
push
xor
xchg
ficoms
ljmp
pop
sub
jno
mov
mov
cs
or
adc
jmp
xor
lea
push
mov
dec
mov
add
shlb
and
test
or
inc
call
inc
imulb
xchg
test
pop
imul
scas
repz
pushl
into
stc
jge
mov
fmulp
fwait
in
jo
push
adc
clc
inc
lods
das
std
add
addb
call
shlb
mov
adc
xlat
xchg
cmpsl
add
pop
ret
mov
xchg
out
or
imul
test
push
rcr
repnz
mov
pop
and
js
fdivrs
push
and
sub
ljmp
cltd
stos
jae
or
pop
inc
push
cmp
mov
or
stos
insb
leave
and
xchg
pop
mov
stos
fs
decl
mov
inc
scas
sub
bound
jmp
rcll
sub
adc
jl
in
mov
xor
ret
add
xchg
loope
lds
insb
arpl
ljmp
daa
add
jg
mov
cmp
mov
xchg
cmp
clc
call
call
push
mov
ds
leave
and
add
add
pop
lods
and
aam
cmc
lcall
cli
sbbb
pop
xchg
mov
mov
adc
call
fidivs
dec
add
cltd
xchg
sub
mov
and
cmp
jb
inc
xchg
dec
mov
mov
pop
in
sbb
es
cwtl
xor
shll
ljmp
aam
into
out
xchg
dec
addr16
jno
sar
lcall
sub
push
mov
ljmp
xchg
adc
in
ljmp
push
and
inc
mov
in
pop
mov
xchg
lods
movsl
or
cmp
jmp
mov
daa
pop
xor
in
roll
lods
xchg
mov
mov
lock
cmp
xchg
cmp
sbb
and
mov
sti
push
pop
jne
das
imul
icebp
divl
or
or
or
aas
insb
call
adc
repz
adc
fstps
pop
push
xor
in
or
sbb
repz
in
xchg
xchg
dec
cwtl
cmp
jb
std
or
jbe
into
jbe
fnstenv
push
jg
ret
mov
and
call
fildl
cmp
jl
daa
jnp
inc
pushw
xchg
inc
cs
lcall
lods
pop
sub
dec
pop
cltd
pop
push
popa
fwait
xchg
push
sti
push
in
aaa
scas
int3
pushf
lret
cmpsb
xchg
pop
addr16
movsb
add
push
std
ja
adc
std
jecxz
pushl
dec
fisubrs
inc
jns
outsb
fcomps
lock
xchg
mov
add
pop
cmpsb
ljmp
pop
push
mov
notb
fcompl
insl
nop
sbb
jbe
mov
das
mov
cmp
std
aas
inc
or
xchg
push
dec
xor
jge
xchg
add
out
std
push
repnz
xchg
lock
jg
jnp
scas
or
leave
lahf
call
xor
and
stc
stc
dec
nop
int
pop
pop
ljmp
aaa
adc
fs
mov
enter
enter
hlt
cli
icebp
fisubrl
add
adc
ret
cmp
test
mov
fs
cwtl
incl
add
sbb
xchg
cmp
sub
mov
scas
clc
jle
insb
xlat
es
das
test
pop
mov
adc
insb
std
incl
inc
or
sarb
cmp
daa
sub
ror
or
or
scas
push
loopne
mov
decl
ja
fimull
icebp
cmp
or
pop
cmp
xor
insl
decl
into
iret
jno
test
ja
mov
fs
cwtl
jg
subl
repz
decl
xchg
jl
ficoms
not
jp
sub
cld
push
mov
adc
or
ljmp
and
scas
adc
dec
adc
sarb
cmpsl
aam
sbb
aad
mov
int
dec
in
inc
test
and
inc
sbb
aaa
fdivr
incl
sbb
into
lods
cmpsl
rcrl
mov
cld
jmp
aam
or
andl
fidivrs
cmp
or
mov
ret
sub
fwait
movsb
cmc
jne
call
sbb
add
mov
sbb
pop
mov
cli
int3
lock
or
stos
and
mov
mov
lods
xchg
xchg
mov
cmp
sbb
fiaddl
jo
lods
into
je
lock
cmp
adc
scas
xchg
loop
mov
dec
and
or
mov
decl
sbb
pop
sahf
sbb
pop
les
loope
mov
inc
clc
mov
cld
gs
lret
push
insb
out
fisubl
mov
fld
fst
rorl
mov
sbb
fsub
outsb
imul
call
xor
iret
mov
dec
shl
sub
ss
dec
add
les
int3
mov
popf
and
test
push
inc
mov
jmp
fistpl
inc
mov
jne
sbb
adc
mov
xor
je
add
sbb
add
cmp
xor
mov
inc
mov
fisttpl
sub
and
call
jp
call
cmp
es
int3
mov
mov
popa
call
xchg
jno
mov
mov
mov
add
std
cwtl
sbb
subl
mov
xchg
mov
es
nop
pop
dec
pop
jbe
adc
mov
faddp
leave
in
fs
xor
adc
pushw
or
call
loop
outsb
dec
jmp
imul
adc
lock
fbstp
push
sbb
imul
cwtl
jnp
inc
out
adc
xchg
lock
shlb
dec
int
add
add
popl
jmp
mov
add
cld
jb
dec
dec
jmp
add
mov
outsb
lea
int3
pop
fists
fisubs
sbb
inc
sbb
mov
decl
sub
shll
fstpt
pushf
ds
push
push
and
mov
decl
xlat
mov
test
jp
inc
leave
cmovne
cwtl
cmpsb
in
iret
pop
ficoms
xchg
jbe
xchg
inc
hlt
call
jmp
les
sub
jl
pushl
fldenv
pop
cmpsb
and
push
scas
add
jb
loope
push
and
outsl
xor
xor
mov
jnp
cld
enter
das
pushl
cld
call
xchg
xor
imul
cmc
rolb
incl
je
mov
cld
sub
inc
cmpsb
jnp
xchg
leave
lods
pop
ret
sbb
jmp
mov
and
push
ja
jbe
add
daa
iret
into
ljmp
mov
inc
mov
lods
incl
arpl
sbb
mov
jle
es
inc
lret
sti
push
in
push
fwait
sbb
lahf
push
call
loopne
pop
xchg
sub
insb
and
pop
das
mov
xchg
lods
bound
cmpsb
loopne
data16
cmp
xor
ljmp
icebp
testl
loope
lcall
xchg
filds
xchg
cmpsl
les
mov
incl
into
push
push
popa
jns
push
cmp
icebp
scas
mov
xchg
adc
jg
sub
cmpsb
pushl
mov
pop
inc
and
es
out
inc
pop
test
dec
cmp
pop
mov
outsb
mov
xchg
test
fwait
enter
call
mov
push
cwtl
fdivs
out
mov
into
adc
mov
cmp
test
jle
lcall
shll
cmp
add
push
stc
icebp
push
sub
or
jns
mov
pop
jno
aaa
mov
into
inc
decl
inc
aam
adcb
cmc
add
out
clc
jmp
push
xor
fs
sbb
jb
ret
adc
add
adc
or
push
adc
pop
push
in
outsl
lahf
outsl
inc
jae
adc
jl
push
dec
lcall
test
mov
or
dec
pop
inc
mov
jbe
xchg
sub
movsb
nop
add
incl
pop
dec
sub
dec
jno
xor
pop
sbb
stos
rcll
mov
lcall
add
cmp
aad
or
jno
das
or
pop
pusha
push
aaa
shl
dec
loop
aas
insl
cmp
and
mov
xor
mov
lock
jo
ljmp
or
int
dec
dec
xchg
nop
rcrl
mov
xchg
loopne
xchg
mov
xor
clc
fadds
insl
nop
pop
mov
and
loopne
adc
data16
pushl
dec
xor
cmp
xchg
fcoms
cltd
mov
jp
imul
mov
add
mov
and
push
inc
add
mov
inc
xchg
mov
sbb
popf
hlt
decl
mov
dec
cmpsl
push
test
xchg
and
popf
bound
sti
nop
lock
fists
lahf
xchg
popf
add
or
enter
mov
inc
cmp
jl
call
lret
xlat
pusha
dec
lods
decb
fadd
sub
xor
push
je,pt
dec
xchg
mov
mov
adc
sub
js
int3
inc
out
cli
mov
inc
loopne
mov
incl
add
mov
in
in
adc
std
xor
push
in
out
decl
loope
sub
fbld
mov
and
dec
repz
mov
sahf
jecxz
sub
jmp
data16
sbb
sub
jmp
xchg
sbb
imul
sbb
cmp
and
int
mov
or
jae
pop
xor
and
or
adc
mov
std
xchg
idiv
add
cld
mov
cmc
add
int
inc
icebp
mov
dec
xor
scas
xchg
call
jae
pop
insl
sbb
lahf
xor
dec
and
sahf
and
decl
ret
or
les
dec
fiaddl
xor
stos
sbb
cmc
out
out
negl
fldenv
or
xor
or
repz
mov
pushl
jge
dec
xchg
push
sub
mov
or
gs
test
sub
dec
rolb
in
decl
dec
ds
stc
cmpsb
inc
mov
fld
and
xchg
pop
xchg
sbb
scas
lods
fbstp
pop
push
clc
insl
mov
inc
test
mov
push
dec
clc
ficompl
fcomps
int
sbb
inc
xchg
jp
cmp
addr16
out
int3
daa
inc
sete
ljmp
nop
lods
jno
cmp
xchg
push
xchg
jle
push
mov
out
cltd
std
xchg
ja
pop
lret
dec
imul
ljmp
rcrl
roll
pushl
inc
addr16
outsb
cli
cmp
or
sbb
cmp
fildll
adc
test
lock
in
push
call
iret
cmc
jmp
stos
or
sub
loopne
pop
dec
jp
lds
or
int3
pop
dec
sarl
dec
xor
in
aad
nop
outsb
daa
in
xchg
and
in
test
std
call
mov
pop
fwait
sbb
out
mov
rcrb
test
outsl
fimull
sar
mov
ljmp
cmp
inc
daa
push
add
call
sub
dec
mov
pop
fcmove
out
dec
adc
call
mov
sbb
jno
jle
ljmp
bound
jb
and
aam
addr16
call
sub
push
add
mov
push
pop
adc
ljmp
or
push
dec
pop
pop
mov
mov
fwait
and
cmp
add
test
rcrb
mov
pop
pop
hlt
push
cmp
es
dec
sysexit
movsb
and
out
fsubl
lcall
fwait
cmp
fistps
push
mov
lds
movsl
and
call
mov
lcall
mov
mov
js
ret
add
add
sub
sarb
mov
pop
insl
xor
xor
clc
adc
bound
pop
cmp
aas
mov
testb
jmp
ljmp
add
lcall
iret
cltd
cmp
mov
in
in
mov
aad
jae
xchg
dec
loopne
daa
sbb
inc
inc
data16
test
xor
cmpsb
pop
sub
mov
inc
push
adc
pop
popa
loope
nop
inc
inc
out
mov
enter
aam
push
mov
sub
test
stos
jae
fbld
fcompl
ja
xor
les
add
or
mov
dec
pop
ret
les
inc
in
into
orb
outsl
cmp
dec
sbb
aam
cwtl
enter
sub
or
mov
sub
xor
xor
rsm
inc
std
pop
or
xorb
rorb
pop
jle
lcall
sub
xchg
out
aam
pusha
dec
in
inc
mov
push
fwait
or
fdivs
cmp
xchg
lret
popf
dec
cs
adc
lea
cli
mov
or
repnz
js
idivb
cmpsb
popa
std
adc
mov
incl
test
xchg
pop
out
fiadds
das
xchg
push
cs
inc
in
sbb
fdivl
stos
gs
dec
mov
mov
fcmovb
call
out
add
loopne
popf
ret
or
jmp
or
or
ljmp
stc
icebp
pop
mov
lcall
xlat
or
push
or
ljmp
icebp
js
sti
dec
inc
mov
ds
fwait
test
mov
mov
cwtl
inc
ljmp
call
imul
repz
ret
or
ror
or
decl
lock
loopne
lret
test
cmp
lods
dec
dec
insb
jl
push
push
jne
xorl
decl
xor
xor
mov
push
fdivl
cli
or
or
stos
mov
cmpsl
mov
ljmp
mov
jbe
jg
xor
inc
inc
push
push
mov
mov
jbe
and
mov
aas
in
out
lds
fisubrs
fwait
clc
sbb
mov
in
or
sub
mov
jno
xchg
out
or
sub
xchg
cwtl
int3
ljmp
popf
or
pop
inc
xchg
mov
jne
movsl
insb
mov
sbbl
jmp
lcall
mov
lods
sub
jmp
incl
stc
in
mov
lds
lcall
cmp
mov
lods
pop
or
mov
das
scas
cmc
cwtl
mov
call
nopl
xchg
jle
inc
mov
call
dec
push
inc
sar
adc
push
xor
leave
aaa
pop
sub
lahf
or
mov
ret
jmp
ljmp
mov
imul
sbb
imul
mov
rorb
push
jle
mov
decl
xchg
jmp
dec
je
adc
test
sub
sahf
rorb
in
sub
cmp
ljmp
fmuls
adc
fs
jnp
sbb
xchg
fld
jmp
sub
decl
pop
adc
pop
mov
repz
xchg
xchg
data16
mov
das
clc
ljmp
jbe
ja
test
outsl
repnz
add
fcom
jns
in
cmpsb
xchg
jp
test
and
adc
sbbb
inc
fbstp
test
dec
outsl
cwtl
sarb
icebp
sahf
mov
ljmp
push
andb
outsb
push
xchg
sub
inc
into
daa
pop
dec
xchg
jg
xchg
stos
xor
cmp
pusha
imulb
cld
jnp
in
push
jno
bound
xchg
pop
mov
sbb
test
adc
popa
mov
jnp
mov
nop
mov
jp
mov
cwtl
jns
in
inc
sbb
or
fisttps
adc
and
inc
aaa
sbb
je
inc
hlt
cmp
xchg
or
repnz
faddl
js
xor
imul
pop
das
ret
dec
fwait
xchg
jne
and
xor
ljmp
je
dec
xchg
int3
mov
in
dec
lret
hlt
pop
inc
lcall
mov
sbb
subl
mov
ljmp
enter
addr16
int
clc
mov
mov
add
nop
lret
test
fs
inc
call
movsl
test
mov
mov
int3
pop
jecxz
jae
xor
jmp
add
fs
test
xchg
mov
xor
jne
outsl
in
cmpb
adc
iret
xor
lock
and
into
xchg
fisttps
add
or
sub
fidivl
cmp
decl
repz
repz
test
movsl
mov
and
out
mov
movsb
movsb
frstor
cmp
filds
enter
shl
mov
jmp
decl
hlt
mov
gs
in
int
pop
scas
js
add
add
call
pop
sti
xor
insb
push
stos
xlat
mov
cs
call
push
imul
cmpl
mov
sbb
cwtl
mov
jne
dec
addr16
ss
mov
jmp
std
decb
and
rol
xchg
mov
fs
sar
decl
fsubp
lret
mov
imul
int3
add
lcall
push
lds
hlt
jle
pop
fnstenv
icebp
out
jo
shll
jl
push
jl
stos
lcall
or
push
dec
jns
push
mov
xor
push
inc
jmp
inc
sbb
ficoml
lret
pop
mov
cs
icebp
or
xor
lock
scas
es
inc
pop
mov
push
add
incl
and
out
mov
lods
push
cmp
sahf
testb
or
xchg
push
mov
inc
std
pop
jo
lock
and
icebp
jg
push
imul
sbb
bound
jne
inc
decl
test
mov
lcall
hlt
nop
dec
jge
dec
clc
decl
in
int3
adc
hlt
mov
retw
nop
pop
lcall
jg
out
push
out
fidivrl
loope
loop
push
es
and
cs
ljmp
neg
mov
jge
test
out
leave
lret
mov
call
sbb
stc
fimull
gs
push
pop
mov
xchg
jmp
pop
ret
add
ficoms
arpl
xchg
or
std
pushl
lret
fnstenv
bound
jge
cltd
xchg
xchg
pop
dec
mov
mov
sahf
les
movb
cmp
and
pushf
jmp
leave
movsb
repz
jle
dec
sub
add
subb
push
pushf
out
cmpsb
jno
xor
cmp
inc
decl
ljmp
movsb
sti
and
lock
cmp
lcall
jo
inc
cs
jmp
dec
leave
nop
lds
sahf
aaa
lods
push
mov
and
in
cld
fistps
int
in
fimull
call
xchg
les
ret
dec
scas
loop
sti
pop
pop
xor
incl
sbb
fnstsw
xchg
arpl
inc
mov
jne
daa
shrl
adc
lcall
mov
dec
insb
mov
adcb
jg
add
xchg
mov
cmovp
lock
pop
jae
push
loope
sbb
adc
jg
call
cmpsb
mov
call
sub
xchg
shl
mov
incl
lahf
mov
sub
fwait
jle
jb
ljmp
inc
dec
sbb
pop
pop
popa
ss
sar
fcomip
jg
les
jo
dec
outsl
add
mov
inc
std
mov
cmpsb
fsubs
hlt
or
loop
or
mov
and
add
decl
jno
pop
xchg
adc
sub
rolb
lock
mov
lock
test
or
inc
mov
jno
cmc
out
std
sub
adc
arpl
adc
into
scas
scas
inc
jnp
test
repnz
inc
test
sti
sub
jg
lcall
movsl
pop
subb
inc
cltd
xor
sub
lret
mov
pop
sub
sbb
push
mov
ja
ret
push
cli
jg
cs
sbb
jnp
outsb
cs
imul
loop
and
sbb
aaa
adc
scas
mov
xchg
inc
das
adc
loopne
call
pop
cmc
xchg
data16
es
es
sbb
dec
adc
jge
les
lea
mov
dec
fdiv
lcall
sbb
stc
clc
or
iret
pop
ret
incb
jecxz
xchg
pushl
cld
cwtl
ror
lahf
mov
inc
sarb
pop
test
jmp
xchg
mov
decl
scas
xor
mov
pop
sub
incl
jbe
lods
jmp
cmp
mov
push
mov
and
push
rclb
incl
cwtl
push
loop
xchg
mov
imul
or
fs
push
inc
xor
icebp
jmp
pusha
mov
mov
mov
push
cmp
mov
in
ja
cwtl
cli
push
call
push
cmc
je
rclb
fisubrs
adc
xchg
mov
js
ret
sbb
inc
push
insb
add
pop
add
out
dec
enter
jmp
hlt
inc
rorl
imul
ret
lret
inc
das
lods
add
sub
lea
lret
rol
ret
xlat
or
ljmp
pop
adc
push
jnp
cmpsl
push
cltd
loopne
add
leave
daa
mov
fildll
xchg
or
arpl
adc
ror
mov
pop
dec
idivl
xchg
add
incl
sub
clc
jmp
mov
mov
jg
cmp
repz
push
push
cli
dec
push
je
repnz
fidivrs
popf
mov
ljmp
cmp
cmpl
adc
lret
lret
out
and
popf
aas
mov
jp
fucomi
arpl
inc
mov
clc
outsb
jge
outsb
loop
push
enter
movl
pop
and
imul
push
push
or
adc
test
hlt
shlb
xchg
call
adc
cld
push
lcall
fstp
mov
add
aas
stc
push
push
xor
mov
enter
mov
pop
ret
aas
fwait
mov
je
clc
mov
lods
ds
cld
pop
cld
jge
mov
pop
ret
inc
shrb
sti
push
inc
mov
test
sahf
ret
sahf
mov
and
sbb
sar
outsl
jo
push
xchg
das
pop
sahf
bound
sub
mov
or
inc
hlt
ds
dec
mov
pushl
xchg
mov
in
out
icebp
test
inc
add
pop
enter
inc
shll
scas
ret
rolb
cmp
out
add
add
pop
pop
ret
push
fidivrl
js
fisubrl
test
ljmp
loope
pop
push
jbe
cmpsl
mov
aam
sub
sub
test
add
lock
pusha
and
or
or
sbb
out
lahf
pop
iret
int
sbb
sbb
ret
dec
jmp
loopne
xchg
dec
int
flds
cld
mov
cmp
sbbl
jnp
inc
loopne
xchg
dec
inc
es
out
cmpl
repz
xlat
lcall
inc
sbb
test
pop
popf
div
jb
inc
pop
add
mov
lcall
icebp
cmc
test
data16
xor
roll
jg
out
cmp
jecxz
jne
std
imulb
pop
arpl
push
outsb
xor
jmp
out
push
fcoml
cmp
je
mov
sbb
cld
pusha
add
std
insl
adc
xor
cmp
inc
rcrb
and
test
push
mov
cmp
adc
loopne
mov
push
dec
fcoml
inc
hlt
jne
push
lahf
jecxz
je
xlat
xlat
out
decl
mov
cwtl
ss
ss
mov
arpl
jmp
cwtl
sbb
pop
inc
ret
lock
jae
lcall
add
decl
cmp
push
sahf
push
sbb
fldt
add
jg
add
jg
frstor
fimull
or
mov
xor
mov
xor
fdivrs
jecxz
rolb
mov
mov
sahf
sti
fs
jns
add
rcr
lock
dec
or
jb
pop
je
lcall
incl
loope
cmpsb
aam
mov
or
jae
fnstcw
ret
xchg
sbb
and
aad
mov
push
hlt
lods
xlat
cmp
fcomip
mov
mov
and
cli
xor
pop
out
add
mov
loope
or
idiv
leave
in
movsl
pushf
les
and
loope
pushl
mov
ljmp
adc
lret
push
pushl
jecxz
fisttpll
jnp
je
jnp
pusha
add
pop
dec
mov
cmpsb
ljmp
or
mov
inc
insl
ficoml
stos
hlt
xchg
add
call
mov
cwtl
xor
push
or
cmc
and
rolb
pop
stos
sbb
mov
pusha
gs
call
ret
fsts
jns
or
stos
aad
mov
data16
sbb
add
pop
icebp
sbb
incb
dec
inc
jbe
aaa
ret
add
out
mov
jl
mov
adc
push
enter
mov
jbe
cwtl
push
push
lods
mov
roll
push
dec
outsl
decl
mov
add
mov
push
cli
mov
icebp
sti
mov
mov
sti
push
ficompl
clc
inc
les
mov
push
sti
std
push
loopne
mov
jg
dec
fimuls
or
push
subl
and
add
cltd
jbe
into
adc
inc
fnstsw
xor
dec
pop
std
decl
mov
lods
add
mov
xchg
lock
scas
adc
int
cmp
mov
dec
sbb
mov
sbb
imul
mov
cmc
push
push
push
pop
andb
cli
xchg
test
push
mov
movsb
pop
push
pushl
sub
mov
mov
mov
sbb
outsl
sub
mov
mov
xchg
insb
fmull
mov
fadd
push
cmp
push
mov
imul
loop
jecxz
test
jmp
push
fsubl
ds
adc
xchg
xor
cmp
enter
mov
and
xchg
cmp
mov
adc
mov
out
pop
lret
clc
cmp
daa
jp
incl
lcall
in
in
outsl
repnz
jb
push
pop
imul
mov
scas
aad
call
sti
divl
scas
push
and
jnp
movsl
repnz
das
push
movsl
inc
incl
sbb
jae
aad
loopne
outsb
fists
outsb
mov
inc
sbbl
call
into
add
outsl
mov
lods
cmp
fcmovu
sarl
je
mov
repnz
add
cwtl
add
ljmp
mov
fs
pop
mov
sti
stos
sbbb
mov
add
fsubrs
aas
sub
inc
arpl
enter
pushf
jne
mov
mov
lcall
and
popa
sarl
pushf
xor
stos
mov
inc
std
or
ljmp
aad
xor
imull
clc
xchg
or
imul
scas
cmp
in
adc
xor
aaa
jb
adc
in
ljmp
xchg
lods
insb
aas
negl
mov
mov
out
or
sar
ljmp
fsubrp
adc
mov
das
jmp
or
xor
call
jg
imul
and
in
pop
or
or
adc
fisttps
xchg
arpl
mov
push
cmp
shlb
jmp
stos
in
push
cltd
mov
push
inc
dec
and
cmpsb
mov
rcll
push
cwtl
xor
or
call
test
scas
clc
pushl
pop
xor
jp
insb
inc
test
mov
outsb
inc
sub
lcall
xlat
xchg
mov
and
inc
and
mov
mov
jmp
or
in
ja,pn
out
jp
fdivrs
mov
mov
das
mov
out
ret
mov
add
stos
fmul
or
std
push
lcall
cld
mov
dec
das
cmp
sbb
fs
data16
notb
std
jg
fidivs
in
pop
popf
xchg
cmp
xchg
jmp
add
or
push
hlt
dec
stos
into
movsl
pop
cmp
xor
and
inc
jmp
popa
in
out
clc
clc
test
ret
and
mov
fimuls
add
call
dec
dec
sahf
xor
aad
add
pushl
ljmp
mov
js
shl
sbb
arpl
jae
shll
scas
clc
jmp
xchg
ds
imul
std
cmp
mov
fwait
push
cli
decl
lock
test
stos
ret
mov
mov
mov
ja
and
lahf
es
jae
cmc
repz
jg
jo
adc
and
mov
cmp
mov
or
loop
inc
lcall
adc
das
cmp
xchg
pop
aas
xor
imul
sahf
jmp
adc
mov
add
pusha
xor
mov
pushl
sbb
inc
mov
data16
imul
mov
jno
and
std
das
cli
out
fcomi
cli
ss
imul
and
jl
and
decl
cwtl
sarb
jecxz
xchg
ret
addr16
mov
jo
sub
adc
mov
decl
les
dec
sub
jmp
push
push
xor
ret
psrlq
div
cmp
shlb
pop
arpl
mov
jg
pop
ss
je
add
mov
call
pop
push
loopne
orb
ja
mov
pop
add
sbb
stos
inc
pop
xchg
ljmp
adc
leave
popa
and
les
and
xor
in
or
push
in
mov
inc
imul
aam
lods
lcall
aam
pop
data16
add
shlb
mov
mov
icebp
out
xor
pop
mov
sub
lcall
or
call
ret
ss
loopne
cmp
xchg
mov
js
add
lcallw
adcb
das
mov
hlt
inc
add
jnp
ret
mov
jl
ficoms
jmp
outsl
sub
jbe
push
movsl
pop
jns
inc
jl
les
iret
mov
lea
or
sub
or
add
inc
or
push
mov
dec
adc
incl
iret
dec
orb
mov
push
movsb
mov
inc
insb
and
cmpsb
test
iret
sub
inc
mov
ljmp
cmp
fs
pop
push
jp
add
cmp
mov
clc
inc
sbb
cmp
rcll
jle
repz
fwait
adc
sub
cmpb
testb
ljmp
cmp
iret
xor
fcompl
stos
pusha
sahf
aam
mov
jg
fdivs
loopne
push
push
subl
insb
xor
push
loop
das
subb
std
ljmp
rolb
or
es
push
shrb
inc
mov
mov
jg
push
sbb
scas
sub
xor
pop
repnz
mov
out
xor
nop
stos
adc
sbb
add
clc
sahf
scas
xchg
jbe
ds
in
aad
adc
inc
addr16
mov
mov
add
ss
call
xchg
mov
insl
cmp
test
fmuls
mov
rol
jae
incl
sbb
push
imul
sub
in
sbb
popf
inc
shlb
mov
cmp
inc
mov
jmp
mov
cmp
mov
sub
stos
clc
je
sbb
aas
int
or
call
mov
or
xor
dec
insb
mov
popa
test
pop
jns
ds
sub
decl
add
sub
stc
inc
aaa
in
cmpsl
dec
xor
mov
jl
sub
mov
add
decl
in
sub
test
ljmp
sbb
dec
pop
movsl
mov
movl
pop
pushf
sbb
push
scas
adc
cmp
sahf
movsb
dec
fidivrs
add
dec
lock
stc
xor
or
popa
and
adc
fcos
dec
sar
xchg
outsb
dec
adc
mov
enter
outsb
adc
push
xlat
jecxz
sub
loop
mov
divb
clc
fcoms
pusha
es
repz
inc
lds
push
mov
movsb
insl
outsl
ret
or
leave
mov
sub
rep
add
mov
in
je
popa
mov
leave
in
cmp
mov
ljmp
shrb
mov
and
es
stos
ds
test
xor
stc
push
jmp
sar
dec
sub
mov
mov
fwait
es
cmp
je
sbb
sbb
ljmp
mov
cmp
mov
inc
lods
push
add
ljmp
adc
pop
xor
sbbb
icebp
hlt
sarl
fsubrs
mov
or
test
inc
pop
icebp
adc
outsb
enter
fwait
cmpsl
xchg
scas
lods
addb
ljmp
mov
insb
es
sub
inc
popa
lods
push
or
insl
subl
mov
call
jg
mov
in
xlat
sbb
jle
dec
std
jno
int3
cwtl
sbb
icebp
test
mov
or
orl
ljmp
nop
and
cmp
cmp
and
fmulp
jecxz
jmp
push
incl
or
and
sbb
outsb
pop
scas
testb
pop
mov
scas
insl
out
dec
lods
ljmp
rclb
aaa
and
aas
mov
loope
adc
fisttpl
jno
mov
mov
mov
lods
xchg
clc
decl
and
popf
icebp
push
push
jns
in
or
xor
fs
pop
cmc
jmp
sub
add
filds
shrb
mov
cwtl
aad
xchg
and
adc
adc
stos
das
mov
and
andl
ljmp
lods
iret
test
scas
test
cmp
push
ret
out
ja
cltd
shlb
push
das
clc
decl
cmpsb
add
aad
mov
xchg
dec
cmp
imul
mov
out
or
or
pushl
pusha
xlat
fdivrl
lods
sub
enter
das
sub
xor
dec
es
cltd
sub
lods
pop
jno
sub
pop
cmp
mov
ljmp
add
adc
sbb
dec
adc
jle
mov
mov
addb
mov
in
stc
int
sbbb
movsb
push
mov
lahf
lcall
inc
stos
icebp
cmpsl
mov
test
cmp
sub
sub
in
xchg
ja
je
dec
mov
int
adc
adc
pushl
mov
dec
mov
cmp
in
decl
jbe
repz
sbb
scas
outsb
push
mov
inc
push
dec
out
add
out
fwait
cwtl
and
inc
mov
add
lcall
bound
push
popa
jmp
fsubrl
outsl
pushf
mov
jg
lods
jne
stc
hlt
mov
stos
xor
add
out
and
add
out
push
bound
insl
xchg
out
xlat
push
ret
out
mov
pop
aam
pushl
sahf
fidivrl
mov
cmp
int
shl
icebp
lret
pop
aam
stos
add
and
ljmp
and
ret
fwait
adc
mov
aad
add
xchg
mov
mov
jle
js
imul
pop
lods
push
lea
sub
fcomip
stc
jno
int3
in
and
outsl
lods
imul
ret
jnp
cmpsl
movsl
cmp
int3
aaa
arpl
sahf
leave
lcall
inc
xor
call
or
mov
cli
hlt
pusha
jb
pushl
out
test
lret
lcall
scas
inc
jne
sbb
xchg
jbe
and
cld
call
fwait
fwait
dec
aas
pushf
xor
insb
imul
sbb
add
mov
lock
cmp
cmp
lret
gs
or
mov
mov
cld
inc
ljmp
cmp
popf
mov
call
push
dec
adc
mov
fstl
fcompl
lret
incl
stos
jnp
das
imul
push
add
mov
jg
mov
pusha
ljmp
ljmp
divl
fstpt
or
sub
or
and
inc
loopne
pushl
imul
or
in
add
ljmp
dec
inc
inc
mov
pushl
sub
mov
jno
adc
add
and
lods
into
mov
scas
clc
out
lods
lods
jae
rclb
pop
inc
or
test
fdivr
fsts
stos
sub
movsl
jle
sub
mov
cld
jb
gs
jecxz
ret
pop
and
out
jle
mov
or
xor
jbe
mov
iret
cmp
fwait
in
or
xchg
ljmp
xchg
push
int3
and
icebp
push
imul
xchg
arpl
adc
mov
add
xor
push
sub
call
add
adcb
outsb
lods
push
addr16
fidivs
call
andps
add
je
lds
inc
xchg
lcall
push
les
mov
xchg
mov
scas
int
mov
popf
lods
ret
xchg
xchg
mov
lret
jb
jmp
sub
pop
and
insb
mov
xchg
bound
cmp
xor
jnp
mov
sbb
sub
xlat
lcall
int
push
xlat
jg
je
jmp
xor
clc
pusha
cld
dec
out
pop
stos
fdivrp
jg
adc
cmpsb
xchg
xchg
bound
jmp
push
enter
sbb
mov
ljmp
and
xor
leave
pop
dec
mov
dec
ja
mov
sar
int3
or
push
jg
movsb
popf
push
xchg
call
les
push
shl
adc
std
popa
jno
mov
add
xor
cmpsl
xorl
sub
idivb
test
inc
xchg
lods
popa
ss
scas
mov
cwtl
push
cmp
es
lock
sbb
xor
xor
jmp
int3
push
push
mov
scas
pop
add
pop
std
sub
adcl
lcall
and
iret
imul
adc
xchg
pusha
icebp
pop
mov
lcall
ret
iret
pop
loopne
push
and
lahf
push
outsb
lret
and
loope
mov
adc
insb
mov
aaa
mov
cltd
fucom
or
test
xlat
pop
mov
push
add
lea
mov
ljmp
adc
cmc
mov
repnz
pop
xchg
xchg
mulb
jp
xor
imul
loopne
mov
mov
push
or
movsl
sub
fists
aas
mov
jmp
aas
insb
aas
sub
adc
out
mov
xchg
mov
xor
data16
ficomps
js
xchg
push
push
shrl
mov
rolb
neg
push
incl
push
mov
es
inc
mov
ss
jg
ficoml
adc
loope
fnstenv
roll
std
jle
adc
mov
out
mov
lock
call
ret
jbe
mov
frstor
lock
sti
jge
and
fs
outsb
pop
or
and
out
cli
stos
xorl
dec
sub
out
push
cmp
mov
out
pushf
filds
shll
add
xor
push
out
or
std
cmp
lods
cmp
setge
add
xchg
jmp
jno
andb
and
in
and
jns
dec
jmp
test
mov
xchg
incl
or
in
mov
mov
andl
xor
sub
shrl
scas
gs
add
cmp
call
xchg
mov
dec
dec
cmp
decl
and
push
mov
push
cmc
mov
ljmp
xchg
jg
lea
mov
inc
mov
inc
pop
fidivs
inc
inc
add
int
int
lcall
adcb
jno
aaa
shl
scas
pushf
cmc
xlat
inc
insb
loop
push
pslld
cli
jmp
or
inc
jbe
enter
xor
ret
jno
pop
inc
incl
stc
jmp
mov
mov
ljmp
iret
cli
call
mov
std
mov
out
sahf
jecxz
pushf
sbb
aas
mov
aas
pop
int
dec
fwait
jg
lea
std
scas
mov
test
es
add
fs
fistps
push
pop
xchg
jns
inc
and
lahf
add
addr16
sub
inc
or
cwtl
adc
jmp
jp
inc
outsl
sub
pop
lds
sbb
fisubrs
cwtl
inc
mov
hlt
in
adc
pop
adc
mov
sti
pusha
fimuls
push
js
jmp
cli
out
shl
das
out
ss
mov
cld
decl
push
mov
bound
rcl
inc
dec
cmp
mov
sbb
out
adc
adc
dec
xor
push
or
sbb
andb
xlat
jg
and
dec
sub
cs
push
sub
add
shll
sti
aas
aas
enter
cmp
push
imul
pop
sahf
cmc
jg
lcall
in
sub
sub
stc
inc
es
nop
fmuls
push
jb
in
inc
pushl
ret
or
push
aam
test
enter
xor
lea
insb
outsb
ljmp
lods
decl
inc
mov
push
clc
icebp
nop
div
pop
cs
jge
or
mov
sbb
decl
pusha
repz
les
mov
nop
cld
incl
cmp
push
or
fldl
cmp
pop
xchg
ljmp
movsb
or
je
inc
ficoms
lea
inc
repnz
pop
push
pop
xor
fadd
sbb
pop
movsb
rolb
jg
and
std
js
out
push
inc
jns
or
jg
decl
insb
and
shl
mov
pop
les
pop
sub
cli
dec
pop
jg
ljmp
scas
pop
jne
jl
movsb
push
xor
fwait
and
inc
decl
leave
fists
dec
outsl
pop
loopne
push
xor
rorb
sub
jmp
cli
xchg
fnstsw
pop
stos
pop
mov
rcr
sbb
inc
xchg
in
aas
and
mov
testl
leave
adc
dec
repnz
xchg
jp
xchg
dec
sub
arpl
outsl
sbb
clc
in
iret
inc
jecxz
mov
mov
nop
icebp
lret
ja
inc
sbb
jl
pop
jg
inc
mov
push
xorl
push
test
push
insl
cmc
clc
pslld
push
es
adc
out
dec
ljmp
ficoml
aad
call
mov
xchg
or
fdivr
decb
pop
scas
jmp
mov
repnz
sbb
add
sti
minps
or
jg
ret
sahf
jns
out
ret
jmp
ss
dec
add
lods
mov
out
push
and
daa
pop
adc
mov
dec
mov
xchg
aaa
push
cmp
loopne
mov
pop
push
mov
aas
lcall
out
adc
ds
decl
fldt
cs
inc
inc
aad
xor
daa
int
js
push
add
mov
push
clc
fdivrs
out
and
push
daa
iret
inc
stc
sub
decl
leave
pushl
mov
mull
or
add
pop
mov
addr16
pop
stc
repz
push
hlt
or
pop
cmp
push
push
loopne
fstpt
in
lcall
adc
adc
in
imul
icebp
mov
out
xchg
call
push
in
rolb
fildl
ss
xchg
push
popa
xchg
out
xchg
movsb
pop
push
sbb
jg
cmc
adc
pop
push
fmuls
jmp
push
mov
adc
or
inc
cmp
xor
decl
in
incl
mov
xlat
scas
adc
inc
dec
clc
aas
jno
and
cwtl
movsl
jbe
jmp
stc
inc
push
jmp
push
jnp
test
jno
push
jmp
aas
and
and
jmp
jbe
lret
mov
sahf
lods
push
jg
test
jno
mov
paddsw
loope
shrl
aad
inc
push
aas
adc
loopne
push
mov
inc
ret
and
jmp
stc
push
fs
sti
jg
repnz
xor
aam
aas
and
iret
leave
inc
or
mov
fnstenv
test
insb
incl
fidivs
stos
pop
add
aas
out
mov
inc
test
jb
call
repz
mov
loop
nop
out
mov
mov
and
add
fnstenv
scas
pop
sub
cld
pushl
mov
adc
pushf
loopne
push
dec
or
aas
mov
inc
outsb
xchg
pop
rol
nop
inc
mov
xchg
sbb
lahf
cmp
insl
data16
pop
call
pop
push
lret
xor
add
dec
test
fisttps
test
jne
or
adc
icebp
push
enter
pop
movl
cmp
shrb
mov
sahf
add
in
jns
out
mov
push
pop
ficompl
orb
das
mov
cmc
sub
aad
mov
icebp
in
inc
mov
rcrb
xor
xor
sahf
pop
outsb
cld
mov
scas
sub
and
or
aas
or
stos
lea
mov
xchg
mov
test
loop
int3
jne
dec
loopne
or
mov
repnz
mov
sti
and
lret
lock
inc
jnp
mov
inc
je
add
sti
xchg
outsb
push
das
xchg
and
enter
push
mov
mov
stos
ret
sub
sarl
cli
incl
rcll
jo
loope
je
fisubrs
dec
fs
and
sub
inc
fbld
mov
mov
cmpsb
fsubl
and
aas
and
mov
mov
imul
cld
xchg
stc
decl
in
or
aas
dec
xorw
negb
push
xchg
rol
sbb
jmp
movsl
sbb
outsb
and
daa
xchg
cmpb
in
aas
push
xchg
push
mov
push
repz
and
loope
nop
cld
call
sbb
sti
mov
xchg
scas
push
or
in
jae
mov
scas
mov
and
dec
add
cmpb
test
repnz
xor
mov
fdiv
mov
sbb
leave
jg
push
jns
repz
les
cwtl
jae
dec
and
decl
pop
and
add
mov
aas
and
jge
mov
sub
inc
mov
jnp
jno
dec
adc
xchg
incb
nop
mov
nop
sub
call
call
jp
xchg
xchg
jnp
movsb
jp
cmp
outsb
pop
sbb
pop
xchg
or
rcll
mull
xchg
ja
xchg
mov
incl
cwtl
mov
sub
sbb
xchg
push
pop
and
push
mov
incl
imul
imul
leave
pushf
cmpsl
jmp
pusha
push
mov
pushf
lahf
mov
or
xchg
mov
jge
test
dec
mov
or
aaa
ds
mov
imul
push
decl
xlat
incl
out
mov
rcl
popf
and
mov
adc
xor
inc
bound
mov
jg
xchg
ja
xchg
sbb
stc
xor
stos
mov
lock
xor
push
fidivrl
push
ds
inc
sub
fdivr
mov
gs
jle
and
outsb
inc
js
pop
bswap
stos
jns
aas
enter
and
das
cmpsl
or
or
xchg
ds
leave
pop
xor
dec
adc
call
pop
xchg
in
inc
push
aas
addr16
pop
add
jae
xchg
and
je
add
xchg
cli
ss
fs
lcall
cmpsb
mov
lods
dec
mov
xchg
test
jno
or
jg
jb
or
push
shl
add
inc
movsb
sub
inc
adc
jg
fmuls
jp
sar
sar
or
pop
inc
pushf
ficompl
mov
sbb
dec
cmp
push
bnd
test
and
mov
and
mov
pop
leave
movsl
pop
pop
lcall
negb
or
jae
incl
jnp
loopne
mov
pslld
loopne
sbb
xchg
inc
cmp
es
out
decl
fidivrs
jl
pop
mov
mov
or
jno
lret
push
loope
fdivl
call
rclb
add
add
and
decl
xor
test
pop
push
jo
leave
xchg
cli
mov
pushl
sarl
xlat
jg
icebp
enter
in
pop
sbb
insl
push
sub
loope
push
adc
das
clc
dec
xor
cmc
mov
inc
xlat
inc
fstl
lret
inc
add
mov
int3
mov
cld
decl
outsl
jmp
xor
sbb
not
mov
imul
and
pop
fdivr
call
mov
in
sbb
enter
aas
stc
lcall
xchg
mov
cli
mov
adc
fstpt
test
and
ljmp
test
sbb
loopne
inc
fadds
or
movsb
push
cld
dec
adc
jno
inc
les
stc
push
mov
push
dec
xor
cmp
mov
inc
add
mov
rcl
xchg
outsb
lds
xchg
popf
lcall
shll
enter
xlat
xor
scas
stos
push
lods
add
decl
sti
xchg
fstl
iret
and
call
jbe
xchg
stc
int
mov
aaa
pusha
int
cltd
subb
jns
pop
xor
add
mov
cmp
fcmove
gs
xchg
mov
sbb
push
adc
incl
xor
in
mov
aas
outsl
jno,pn
dec
or
pop
mov
xchg
and
mov
lret
adc
ds
incl
ss
jecxz
pop
aas
aam
shlb
das
and
flds
inc
add
jg
dec
xlat
lahf
jle
test
sub
sub
out
or
jmp
int
mov
rorb
or
incl
mov
mov
scas
aas
sbb
xor
push
cld
xchg
scas
lahf
pushf
xchg
movsl
daa
pop
mov
ljmp
sub
mov
inc
rorb
loop
fisttps
xchg
xchg
mov
hlt
lcall
add
mov
or
fwait
into
loope
lds
cmp
sub
mov
jecxz
icebp
xor
mov
ljmp
or
out
loopne
pushl
jg
pop
ds
ficoms
ljmp
stos
adc
xchg
inc
ret
dec
adc
lret
out
mov
push
dec
adc
shrb
sub
dec
mov
inc
cmp
sbb
fdivr
pushl
push
xor
or
stos
scas
xchg
adc
ljmp
adc
pop
out
arpl
daa
and
outsb
push
jmp
leave
es
jg
pop
cmp
mov
std
out
sahf
mov
xchg
or
sbb
incl
jns
xchg
add
or
mov
test
outsb
xor
sbb
std
lahf
es
push
or
cmp
jmp
push
mov
inc
xchg
push
cmp
adc
jecxz
and
mov
clc
cmp
jl
movsb
rcl
loope
incl
pop
addl
xor
mov
mov
fcoms
mov
aas
in
loopne
and
cmp
add
inc
test
inc
test
cmp
push
ret
mov
lds
nop
mov
sahf
jno
mov
inc
sub
mov
cmpb
mull
xor
sbb
test
mov
jg
mov
fbld
insb
out
aad
xchg
ja
int
rcl
inc
mov
adc
pop
mov
sbbb
inc
movsl
sub
add
cmc
inc
jmp
inc
ds
out
add
mov
dec
and
mov
cltd
jnp
xchg
inc
xor
xchg
or
and
jmp
lret
aas
cmc
dec
lahf
and
mov
test
scas
add
pop
pop
daa
dec
daa
outsb
repnz
decl
jecxz
movsb
add
dec
out
sub
pop
stc
rcr
adc
jmp
adc
int3
xchg
add
xchg
mov
xchg
js
imul
push
adc
adc
mov
push
fildl
out
lcall
shlb
insb
movsl
add
daa
rcrl
inc
mov
std
movsl
popf
int
ljmp
push
sub
fldl
lahf
adc
fcmove
mov
std
mov
cmp
mov
push
enter
xchg
jne
jne
inc
popf
jmp
in
adc
cmp
and
outsl
out
mov
arpl
sti
fcom
pop
dec
loope
lea
or
adc
mov
incl
call
ret
std
movsb
cwtl
stos
adc
pop
movsl
aas
pop
idivl
jle
call
and
iret
or
sbb
cli
lahf
push
inc
adc
fstl
andb
outsb
lcall
movsl
leave
out
xor
je
daa
xchg
inc
cmpsb
out
repnz
pop
xor
lcall
push
movsl
xchg
pop
outsl
daa
mov
xchg
mov
mov
xor
fs
cltd
addr16
adc
sbb
sub
movsb
insb
sub
xchg
imul
dec
add
push
and
roll
cmc
xchg
mov
sahf
add
push
out
jg
mov
inc
dec
pop
xor
mov
notl
and
das
and
pop
inc
xchg
std
fdivrp
decl
jno
into
push
add
out
repnz
fidivl
dec
sbb
jmp
fcmovnb
sbb
pop
mov
je
addl
lods
cmp
shll
jmp
push
mov
shrb
jmp
xorl
nop
push
jbe
cmp
sarb
addr16
shrl
movsb
dec
scas
cld
movsl
or
mov
js
xor
push
syscall
lcall
cmpsl
stc
repnz
dec
inc
ret
dec
xlat
inc
inc
incl
stc
jl
pop
inc
push
fwait
push
ja
push
pop
xchg
push
test
and
incl
pop
sbb
arpl
mov
and
fs
sub
fnstcw
insb
popa
mov
outsl
incl
nop
pop
mov
cmp
fwait
cmp
inc
sbb
aas
and
aas
hlt
jnp
pop
mov
sbb
stc
ja
addr16
push
push
scas
push
lret
inc
enter
fwait
ret
lea
movsl
aas
dec
fildll
and
and
xor
icebp
fsubr
dec
lret
data16
adc
dec
lret
mov
mov
frstor
dec
ljmp
aaa
movsb
lret
mov
fidivl
xor
stc
loop
adc
pop
in
jo
mov
push
sub
and
int
jo
stos
mov
pop
pop
jae
ljmp
and
push
repz
dec
pop
mov
push
test
jmp
jno
in
fwait
stos
data16
jmp
bound
pop
stos
stc
daa
cmp
jmp
mov
xor
and
inc
pop
cmp
pop
inc
mov
imul
pushl
push
pop
std
cmp
mov
cli
jbe
test
dec
cmp
sub
fcompl
mov
push
dec
jb
sub
daa
mov
inc
add
out
cmp
cmp
mov
aas
out
add
mov
aam
fcom
xchg
lock
lods
push
push
jle
ljmp
add
ljmp
mov
rep
hlt
ljmp
inc
repnz
aam
call
out
dec
mov
je
xor
lods
ret
xor
mov
pushl
int
loopne
fistl
jg
mov
gs
sbb
xchg
push
shlb
cmp
decb
or
ljmp
sbb
pop
dec
adc
pusha
fcmovb
jb
rcrb
xchg
scas
out
and
decl
ret
xchg
mov
jmp
repz
mov
rorl
xchg
out
xor
hlt
inc
pop
add
mov
jns
dec
push
popf
push
pop
cmp
pop
cld
dec
or
mov
into
stos
and
inc
dec
ret
fmull
stos
mov
jg
movsl
aaa
cmpsb
lret
xchg
adc
mov
push
sahf
jmp
inc
das
sti
addb
pop
scas
cmc
das
clc
jmp
aaa
fwait
cwtl
fnsave
movsb
lea
jo
imul
or
decl
jl
xchg
lock
adc
jmp
mov
decl
ds
or
xlat
jno
pop
ljmp
loopne
mov
adc
jg
mov
push
dec
and
mov
sub
jo
lret
rcrb
aad
lret
adc
sbb
or
daa
push
std
sahf
mov
arpl
stos
xor
call
jne
sbb
dec
sub
mov
imul
mov
jecxz
loopne
xlat
loopne
mov
push
into
mov
cmp
fisttps
incl
cmp
stos
push
push
shrb
fstl
mov
pushl
out
stos
dec
xchg
push
popf
aam
test
dec
jmp
cwtl
lods
fimuls
test
shlb
dec
test
jb
xchg
pop
xchg
jns
xchg
sahf
adc
mov
call
sbb
sbb
jnp
shll
mov
decl
add
mov
aaa
mov
roll
jg
mov
and
fisubs
push
in
lods
pop
call
enter
outsl
fidivs
adc
mov
mov
stos
and
sbb
imull
incl
std
das
sbb
test
xchg
lods
dec
stc
xchg
or
xchg
mov
xor
outsl
mov
test
inc
fldl
sub
or
loope
in
lcall
xchg
push
jmp
xor
fwait
adc
or
notb
into
pop
cmc
pop
mov
dec
xchg
adc
pop
and
or
inc
xchg
popf
daa
mov
or
cmc
pop
xchg
outsl
and
mov
dec
clc
scas
mov
notb
test
pop
ficompl
call
fwait
cmpl
dec
mov
push
aas
mov
data16
clc
fidivrs
sbb
pop
pop
ret
add
out
cld
incl
insl
aam
cmp
lods
les
cmp
aas
push
ljmp
int3
les
dec
testb
fwait
repz
sub
and
xchg
mov
xchg
lahf
mov
xchg
mov
test
push
arpl
dec
jg
dec
outsb
or
mov
jmp
repz
jp
xor
mov
fisttps
into
mov
in
mov
in
mov
pushf
mov
cmp
xor
cltd
and
popf
dec
dec
lret
out
daa
loopne
out
and
jb
xor
in
scas
fidivrl
or
dec
mov
pop
mov
popf
cmp
arpl
decb
jmp
pop
repnz
fs
jl
jp
xor
ret
dec
lock
loope
incl
xchg
mov
call
xchg
inc
inc
movsl
mov
orl
lcall
adc
push
cs
sub
jnp
mov
ljmp
inc
int3
inc
inc
mov
mov
push
orl
outsb
das
sar
jmp
loopne
cli
lret
rcll
jae
pop
jecxz
adc
lcall
lods
xor
mov
adc
push
jg
jg
shlb
add
xchg
mov
and
repnz
mov
ljmp
sbb
jmp
jg
call
add
idivl
into
jns
sub
mov
roll
pop
or
fmul
ret
mov
pop
inc
cmp
sar
stc
ljmp
ljmp
jp
std
jbe
push
insl
imul
xor
cmp
jmp
call
ret
out
pop
or
adc
call
out
loopne
cmp
push
dec
imul
jge
sbb
fisubs
sti
jg
push
xchg
jg
jne
popf
jns
jg
call
pop
pop
push
movsl
jle
ljmp
vmaxps
enter
mov
cmp
testb
mov
insb
adc
xor
jg
push
shrl
lahf
dec
lea
dec
inc
jmp
incl
mov
push
rcrl
lahf
pop
rcr
js
jle
and
pop
enter
xchg
das
jbe
jne
mov
mov
inc
mov
xchg
dec
and
jns
decl
stc
mov
xor
lods
mov
xchg
divb
xchg
sbb
and
mov
mov
aad
dec
fnsave
test
ljmp
cs
fisubl
or
ljmp
xchg
stc
fs
jl
imul
or
pop
pop
aaa
and
cs
jecxz
cld
ljmp
inc
fists
jmp
sub
adc
clc
test
lock
call
cld
lcall
popf
xor
jb
push
mov
inc
sar
xchg
jmp
or
and
adc
sub
cmp
dec
incl
pop
mov
mov
int3
dec
mov
mov
in
mov
xchg
jg
pop
clc
das
add
fisttps
jns
jp
clc
sbb
aas
push
les
mov
mov
outsb
shrb
pop
loop
idivb
fwait
fs
test
inc
shll
sbb
sbb
ljmp
push
adc
sti
movsl
jo
scas
scas
scas
jle
jmp
aas
pop
es
fbld
pusha
mov
stos
cmpb
in
xor
incl
es
fsubrp
fwait
shlb
push
dec
and
cmpsb
pushf
nop
xor
push
or
xchg
shlb
adc
dec
mov
sub
fdivrl
aad
call
mov
cmp
fbld
xchg
mov
cmp
adc
mov
test
ljmp
cmc
lcall
xadd
jg
fs
out
addr16
insl
sbb
call
dec
or
mov
xlat
xor
cwtl
std
dec
mov
rclb
cld
mov
jbe
inc
mov
in
pop
lahf
lock
incl
push
imul
xchg
mov
push
push
das
inc
pop
inc
pop
cs
fbld
push
movsb
push
pop
dec
xor
nop
dec
fildl
adc
ret
mov
inc
in
andb
fbstp
mov
pop
xchg
lcall
mov
call
sti
fildl
mov
movsb
add
sub
jg
mov
out
jbe
addr16
inc
jle
adc
cmp
jg
pop
and
add
nop
xchg
jne
pop
cmpsb
pop
mov
lods
mov
xchg
jmp
int
dec
xor
shll
jg
rorb
cwtl
mov
xchg
jecxz
cmp
pop
mov
call
mov
and
idivl
jg
jnp
fistpl
add
fcompl
sub
mov
nop
xor
push
call
push
test
scas
andl
xor
lea
and
mov
mov
adc
sbb
ja
dec
dec
push
add
bound
mov
mov
fidivs
sbb
add
cli
les
dec
push
or
insl
or
jmp
or
lcall
and
mov
xor
xchg
lods
push
enter
stos
adc
clc
incl
mov
stc
adc
sub
xor
incl
pusha
add
roll
sub
pop
shlb
rclb
lcall
stc
mov
call
jb
dec
mull
sahf
fwait
dec
addr16
jno
adc
lea
jl
or
stos
jo
movsl
cmp
pop
adc
scas
fsubrs
loope
jg
mov
les
jnp
xor
push
and
mov
mov
jo
mov
movsl
jno
into
cmpb
stc
out
push
rorl
fistps
sbb
data16
jl
cmc
adc
jmp
int
adc
jl
mov
xor
out
add
xor
mov
mov
mov
pop
aad
push
loop
jns
ss
stos
incb
jge
jnp,pn
dec
inc
loopne
cmp
call
inc
push
pop
push
outsl
mov
or
pop
mov
mov
ljmp
inc
jp
jl
notl
mov
int3
push
adc
sub
out
popf
cmp
stc
leave
sti
rcrl
or
fsts
inc
sbb
clc
mov
inc
cmpsb
xor
xchg
cmp
mov
cmp
sub
dec
jae
orb
pop
fdivrl
inc
leave
call
xor
sbb
lock
int3
mov
sbbl
mov
mov
cmpsb
inc
clc
jg
push
dec
mov
jmp
ss
jbe
cwtl
push
outsb
movsl
iret
test
aam
lcall
lcall
clc
xchg
popa
xlat
shld
test
lcall
pop
mov
aas
hlt
mov
ss
jge
xor
mov
incb
je
xor
aas
mov
mov
mov
xor
aad
mov
leave
fwait
inc
inc
and
bound
inc
mov
jae
insl
or
mov
jmp
add
mov
icebp
jnp
hlt
cmpl
push
imul
sahf
inc
jns
mov
pushl
stc
xchg
je
pop
xor
arpl
lret
push
std
inc
sbb
std
inc
sub
jg
dec
popw
loopne
insb
push
xchg
mov
jle
inc
rcll
inc
xchg
in
xchg
shlb
mov
push
or
push
sbbb
imul
jmp
insl
mov
aas
sub
or
mov
repz
xchg
lret
outsl
fildll
mov
jmp
imul
loope
xchg
fnstsw
aaa
iret
repnz
or
or
ljmp
and
mov
push
shr
dec
add
mov
jg
and
mov
into
lock
xor
je,pt
xchg
push
push
xchg
jbe
stos
decl
test
in
loop
push
push
movsb
loop
and
mov
pushl
repnz
sbb
stc
mov
mov
sub
sbb
lea
jle
mov
jmp
push
dec
and
aam
inc
sbb
inc
cld
fbstp
and
mov
lods
push
lahf
stos
xor
scas
ljmp
xchg
xchg
pop
push
xor
sbb
dec
push
lods
ja
inc
add
push
sub
insb
pop
xchg
jo
mov
cmp
jg
test
pop
xchg
pushf
outsl
arpl
pushf
pop
fwait
aad
insl
sbb
jge
mov
aam
out
call
jle
mov
shrb
xlat
xor
popa
aad
or
aas
jb
pop
jo
in
sbb
jmp
dec
std
into
jnp
shr
jo
or
inc
jo
xchg
or
imul
sarl
mov
movsb
adc
fidivrl
or
fcoml
decl
cmp
enter
jge
mov
jl
push
sub
and
or
call
ret
mov
jg
mov
gs
incl
xor
or
outsb
adc
iret
js
cmp
fistps
or
mov
call
enter
pop
jecxz
mov
outsb
lcall
xor
xor
iret
mov
mov
fbstp
int
popf
fsubrs
repz
xor
ljmp
add
mov
pop
lcall
cmp
insl
add
lcall
sbb
fisubrs
rolb
in
js
xchg
repnz
cli
incl
dec
mov
ja
pop
dec
sbb
push
inc
out
jecxz
xor
inc
mov
push
or
add
mov
roll
dec
test
pop
pop
or
decl
cmpsb
stos
ret
add
mov
xor
iret
jae
sbb
insl
add
loope
decl
iret
xor
lea
loopne
and
ret
js
shll
das
ret
stos
jo
sbb
inc
or
loopne
cmp
push
adc
mov
decl
lahf
dec
pop
es
lahf
mov
mov
cmp
ljmp
inc
ds
inc
ljmp
clc
in
adc
lods
fwait
cmp
movsb
out
jg
add
aaa
sub
sbb
pushf
idivl
std
pop
icebp
decl
rorl
stos
cmp
pop
pushf
cmp
stos
ja
mov
sti
scas
rcll
push
dec
cmp
cwtl
dec
inc
fs
jns
jb
outsl
cmp
inc
test
mov
mov
xorl
push
pushl
rcrl
loop
clc
and
or
shrb
push
dec
and
inc
cmpsb
lods
jns
sti
cwtl
ret
ret
fldl2t
mov
jg
ljmp
xor
pop
xchg
cmp
mov
nop
add
ret
ljmp
dec
out
cmp
jp
aad
xchg
push
mov
sub
mov
rol
jne
jg
or
mov
hlt
push
mov
mov
mov
mov
sbb
in
dec
dec
movmskps
scas
stos
enter
mov
jmp
and
js
incl
jmp
jge
pop
xor
out
jp,pn
cwtl
sarb
in
cmp
dec
push
rcr
leave
add
into
sub
fisubs
push
fcmovu
push
stos
or
loope
mov
lcall
je
sub
sbb
lahf
outsb
into
and
sbb
stos
xchg
mov
lds
dec
jo
push
dec
mov
xor
mov
out
mov
fcmovu
cmp
inc
mov
pop
shl
in
lcall
outsb
inc
and
addl
and
mov
aas
cli
xchg
inc
fs
dec
loop
out
leave
cld
inc
out
dec
enter
inc
push
popa
and
in
jg
mov
stos
aam
or
add
jmp
das
jmp
mov
call
xchg
inc
js
xchg
incl
pop
ja
cmp
jg
xchg
jmp
ljmp
mov
jge
divb
or
or
pushl
int3
popa
cmp
mov
dec
push
stos
lods
scas
iret
insl
add
cmpsl
loopne
mov
out
loop
out
xchg
and
sbb
iret
pop
mov
incb
push
pmovmskb
sub
cmp
jg
mov
test
loop
fstpt
cmp
add
int
lds
loop
mov
jp
lret
jne
scas
sti
shlb
mov
aas
arpl
cwtl
xchg
js
outsb
add
das
lods
xorb
mov
in
int3
decl
aaa
sbb
pushf
test
jb
adc
out
xchg
ljmp
xchg
dec
fnsave
fnstcw
jnp
or
fcmovbe
inc
pop
mov
lods
cmc
clc
mov
mov
iret
push
push
inc
aas
xchg
loop
cvtpd2pi
mov
inc
and
add
call
loopne
ds
lcall
lahf
jo
lea
xor
jmp
out
or
mov
jle
decl
in
call
mov
in
ds
aas
mov
xchg
xor
sbb
fcomip
and
adc
shlb
xchg
shl
pop
cmp
in
adc
and
jbe
dec
push
ficoml
cmp
jg
jmp
dec
or
sub
lods
inc
push
push
filds
hlt
sub
mov
jge
shrl
dec
insl
idivb
mov
sbbb
loop
shl
or
sahf
adc
or
mov
jo,pt
bswap
incl
mov
push
xor
pop
inc
fists
xchg
lcall
aaa
add
je
jg
aas
xor
or
cmc
lds
scas
mov
mov
fildll
icebp
ret
jnp
adc
adc
ja
mov
xor
mov
push
movups
loope
stc
lcall
fistps
jne
mov
in
add
aaa
cmp
or
fcmovnb
xor
or
sub
fsubrl
in
jg
sub
sti
mov
jns
cmp
movsb
jmp
stc
pushl
xchg
sar
int3
aam
jae
fisubrs
dec
pusha
in
unpckhps
fisttpll
mov
insb
imul
push
xchg
popf
sar
xchg
cli
incl
fcmovne
mov
test
aas
mov
call
incl
dec
pop
add
mov
ljmp
inc
movsb
call
xchg
loope
fisubrl
imul
sar
and
push
and
lcall
xchg
jp
sti
sarl
adc
cmp
jns
inc
test
rclb
decl
bnd
lret
idivl
mov
jge
ds
adc
mov
or
jmp
popa
xor
push
and
sbb
fistl
in
jg
jg
cli
lahf
push
sub
in
mov
xchg
or
cld
cltd
dec
cmp
inc
sahf
jp
rclb
gs
out
cs
mov
jmp
dec
test
push
jae
loop
pop
mov
push
test
repnz
pushf
pop
mov
or
lock
cli
mov
jmp
test
mov
adc
and
xchg
bound
addr16
mov
jne
imul
jns
fcomps
add
in
jg
test
lock
fildll
mov
sub
rclb
dec
enter
jmp
ja
push
and
icebp
mov
movb
jle
test
aas
inc
dec
fistpl
dec
sarl
xor
popf
mov
cmp
ficompl
jg
aam
aad
push
dec
mov
cwtl
mov
xor
in
call
mov
ss
data16
mov
pop
mov
lock
cmpl
les
call
mov
popa
push
sbb
and
mov
pushl
aas
push
mov
pop
cmpsb
inc
pop
and
cmp
push
mov
and
jo
pop
cmpsl
jmp
and
sub
inc
lods
addr16
pop
add
aas
js
mov
in
push
pop
mov
mov
xor
mov
clc
bound
dec
xor
dec
jecxz
lcall
movsb
fdivs
scas
and
test
js
adc
mov
cmp
popa
xchg
mov
sbb
sub
add
imul
testb
inc
std
incl
sub
test
xlat
push
mov
decl
jp
and
jns
push
out
aaa
cld
mov
mov
pop
pop
call
mov
jo
add
xor
xor
mov
cmpsb
mov
mov
shlb
hlt
sarl
loopne
fwait
xchg
fsubr
dec
adc
lea
pop
sahf
mov
xor
inc
push
pop
int3
cmp
xor
call
push
add
mov
xlat
dec
insl
insb
mov
jmp
push
inc
gs
incl
push
mov
es
push
jns
lahf
jbe
cmp
ds
xor
test
mov
and
dec
js
inc
int
int
imul
lcall
xchg
outsl
push
mov
dec
dec
aas
loop
cmp
incl
cmp
cltd
nop
fs
imul
dec
mov
lds
mov
jg
sub
jge
sbb
dec
xchg
lcall
lds
sub
incl
xorl
sub
xchg
fcoml
pop
mov
lret
mov
mov
leave
cltd
or
cmp
out
jns
sub
mov
xor
jno
cmpsl
sbb
lret
xor
hlt
sub
xchg
into
daa
fdivp
int3
call
std
scas
xchg
mov
or
outsl
pop
orb
cmp
lods
sub
incl
jg
loop
ja
or
inc
test
sar
incb
jp
and
dec
rcll
jmp
into
shr
push
sti
sub
or
insl
je
inc
lods
aas
enter
stos
cmp
sbb
sbb
jmp
xchg
icebp
fst
rolb
pop
jge
cmp
jb
cmc
lea
dec
sti
test
xor
xor
outsb
mov
push
sub
mov
add
adcl
fsts
das
push
cmc
in
mov
ja
das
pop
bound
mov
push
rcl
or
das
adc
xchg
cmpb
call
adc
pop
call
cmp
dec
ud0
cmp
in
mov
sub
aam
add
fildll
xchg
outsb
push
jb
imul
out
or
lcall
mov
push
cli
in
xchg
ficomps
push
xor
inc
loope
decl
pop
stos
xchg
jmp
dec
imull
mov
sti
inc
lds
std
adc
inc
out
test
or
test
rcrb
ljmp
adc
mov
mov
cs
mov
xchg
fcom
jmp
add
lea
jg
xchg
mov
dec
adc
mov
je
jbe
cs
mov
or
jae
inc
std
js
shlb
mov
pop
xlat
mov
xor
sub
mov
imull
mov
pushl
jl
pop
cmp
jp
enter
lds
stos
push
out
out
fstps
lcall
icebp
addr16
dec
insb
movsl
enter
sti
sbb
loope
cld
clc
pop
gs
or
sbb
adc
and
lds
xlat
mov
xlat
inc
and
and
mov
movsb
mov
cmp
jns
outsl
roll
pop
jecxz
std
xor
sahf
sub
test
iret
aas
push
icebp
pushl
pop
imul
je
pushf
jge
mov
jp
and
push
pop
pslld
pop
pop
jne
inc
mov
or
out
sbb
or
mov
mov
push
inc
inc
aas
xchg
cmc
aas
inc
incl
cmpsb
sub
inc
lret
dec
mov
mov
lret
or
stos
incb
popa
jae
imull
ds
std
push
cld
and
xor
int3
andl
push
pop
jmp
stc
out
cmp
or
subb
pop
in
aas
and
add
add
das
jns
sub
cld
incl
mov
pusha
into
xchg
in
leave
mov
loop
cmp
or
mov
int3
mov
test
inc
std
incl
cmp
xlat
popf
or
std
into
lret
in
inc
dec
sbb
pop
std
mov
cmp
xor
sbb
enter
jg
imul
addr16
and
sbb
lcall
mov
ret
xchg
jae
dec
out
aas
lcall
fstpt
lea
xlat
addb
mov
fwait
aas
nop
adc
dec
bound
gs
jmp
adc
push
xchg
mov
sar
enter
xor
or
mov
xor
mov
scas
jge
lcall
outsb
adcl
js
sub
mov
add
in
mov
cmpsl
adc
xchg
lds
cld
fiaddl
cmpsb
stc
call
lret
cld
xchg
jle
pushf
dec
pop
sub
fists
mov
cmp
loop
fwait
add
pop
js
in
imul
loope
push
cmc
out
hlt
mov
int3
mov
xchg
in
dec
inc
sarb
out
or
std
int3
nop
pop
leave
mov
scas
cli
call
aas
sarb
push
in
mov
cmp
pop
iret
mov
std
cmp
mov
hlt
lods
mov
mov
push
pushf
xor
out
sbbl
pop
pushf
adc
lods
fisttps
mov
repnz
sti
fsubrp
xchg
sti
pop
sbb
dec
incl
mov
cmp
mov
fadds
loopne
mov
push
mov
call
push
jle
push
test
xchg
mov
xor
imul
fstl
xor
cwtl
fstpt
push
bound
mov
je
dec
or
pushl
xor
mov
stos
or
daa
loope
lea
pop
fisubrs
sbb
pop
dec
loop
ljmp
sar
test
mov
addb
decl
enter
js
xchg
loopne
adc
fwait
jbe
mov
or
adc
arpl
cli
icebp
sub
scas
xchg
fildl
mov
lock
mov
jg
hlt
ljmp
add
lret
pop
cmp
mov
fldl
pop
fs
je
repnz
mov
gs
jne
cmc
incl
mov
jl
or
loop
cmp
cs
jle
push
adc
xchg
stos
stos
lock
pushf
cli
lcall
or
scas
icebp
inc
cli
pop
jl
pop
cmp
aas
xor
lcall
lret
in
popf
push
shr
fidivs
imul
mov
push
int3
mov
mov
daa
sbb
inc
xor
or
and
and
cmp
sahf
add
stc
xchg
mov
mulb
outsl
arpl
dec
pop
adc
insb
shlb
xchg
sahf
lahf
pusha
ficoml
int3
std
outsl
decl
movsl
insb
dec
test
iret
add
sub
xchg
fwait
cmp
inc
xchg
icebp
cmp
jl
dec
mov
popa
ljmp
fimull
addr16
popa
mov
xchg
push
cltd
adc
in
mov
xchg
das
xor
pop
int3
sbb
js
sub
nop
push
ss
call
push
sub
dec
arpl
lcall
test
pop
les
push
int
cmp
loopne
inc
mov
imul
insl
mov
insb
repz
inc
dec
lods
or
imul
outsl
cli
mov
push
notl
cmpsb
out
push
adc
adc
push
push
test
decl
hlt
mov
ror
pop
sbb
in
shll
dec
cmpsb
jle
jmp
jg
imul
lods
push
nop
xor
cltd
and
and
sbb
nop
in
aaa
iret
cmp
xchg
cld
cltd
lahf
jp
mov
aad
out
mov
xor
pop
jge
dec
mov
lret
pop
mov
pop
and
jle
sbb
jl
lea
decl
and
popf
aad
xchg
mov
mov
in
mov
xchg
fbstp
lock
decl
sbb
aam
mov
pop
out
lods
mov
sbb
hlt
push
shrb
ljmp
mov
and
mov
mov
mov
rep
sub
hlt
aam
shrl
in
aam
xor
daa
ret
imul
or
ror
pusha
aaa
mov
xor
cmp
into
divb
aam
js
cs
dec
jae
add
ret
ljmp
push
lds
pavgb
pop
push
stc
cli
stos
sub
cli
pushf
insb
cmp
push
dec
in
push
jns
inc
cli
push
lods
lock
iret
cmpsl
inc
add
ss
dec
in
out
xchg
cmp
fisttpll
dec
pop
xor
insb
cmp
mov
and
cmp
lcall
mov
loopne
push
push
fwait
or
cmp
pop
inc
jae
dec
dec
dec
sub
fsubl
scas
and
fwait
inc
cltd
dec
push
fnstcw
jb
das
xor
dec
dec
pop
lret
mov
pop
push
cmc
mov
int
xor
sti
movsl
stc
and
stos
cmpsb
add
cld
push
shlb
decl
enter
sub
imul
cld
loop
mov
add
dec
mov
xor
sub
pushl
jbe
or
scas
pop
imul
lcall
mov
call
adc
arpl
mov
sbb
stos
fs
mov
aam
fsubrl
imul
jg
test
nop
sub
insl
out
sbb
inc
xor
call
mov
gs
gs
sub
xor
sarl
xor
pop
loopne
enter
or
call
ds
jmp
jb
pop
aaa
orb
mov
push
jb
xchg
jge
fwait
xor
iret
push
loop
mov
fsubr
jns
outsb
xchg
subl
loopne
or
ljmp
fs
rorl
nop
nop
repnz
lahf
xor
pop
push
sub
dec
loopne
push
and
filds
aas
idiv
inc
jne
mov
mov
test
mov
inc
mov
fwait
cmp
sub
dec
negb
stc
imul
jg
decl
cs
fstpl
cltd
push
int3
test
cwtl
out
in
stos
jns
sub
mov
mov
or
push
les
ror
mov
cmp
je
mov
sub
cld
decl
andl
js
cmp
test
inc
jge
fistpl
insb
xchg
cmpsb
orb
popf
pop
jmp
adc
xchg
inc
push
loope
xchg
mov
xchg
lcall
lods
pop
sbb
push
out
call
test
in
cmp
in
cmpsl
push
pop
jle
add
jmp
int3
pop
int3
movsl
jg
in
push
stos
cmp
scas
jo
lcall
dec
adc
jb
inc
sbb
mov
jl
movsb
sub
mov
xchg
fadd
cmp
dec
mov
fwait
xor
xor
rorl
jmp
packsswb
movd
add
inc
push
and
call
sub
dec
nop
add
xor
incl
cld
jno
inc
out
xor
aaa
cmp
pop
push
call
call
imul
cli
test
inc
xchg
mov
mov
sahf
fstp
xor
incl
ret
pop
sbb
je
sub
jp
push
repz
fwait
fs
cmp
les
dec
add
xchg
decl
or
or
dec
imul
jp
lcall
mov
pop
inc
test
test
dec
cmp
sbb
call
xchg
mov
mov
xor
loope
mov
jecxz
sbb
mov
stos
and
xchg
ret
and
mov
jle
xor
and
jmp
inc
movsb
js
cmp
mov
outsb
sub
cs
ja
jns
sbb
call
add
push
pop
shl
inc
add
sbb
add
fldt
inc
sub
seta
jecxz
fcomps
xchg
stos
sub
push
mov
xor
jmp
sbb
sbb
and
jge
ja
mov
mov
mov
cbtw
xchg
mov
xlat
rorb
and
dec
dec
clc
in
fs
dec
mov
add
xchg
mov
and
adc
rorl
push
dec
mov
outsb
pop
insb
dec
sbb
decl
cmp
pop
test
inc
jns
xchg
xlat
fucomip
xor
lahf
jecxz
dec
setnp
mov
out
pop
jbe
fcomps
sbb
jg
pop
call
dec
fwait
xchg
pop
inc
imul
push
sub
sub
in
incl
ljmp
push
bound
sub
jno
popa
repnz
incl
mov
repz
cmp
fisubl
scas
dec
test
incl
shrl
mov
dec
lret
cmp
jnp
mov
ljmp
or
add
inc
negl
pop
ret
jne
int
fisubl
mov
out
arpl
mov
ret
call
fisttpll
cld
incl
movsl
dec
ret
add
and
shll
call
push
ss
mov
insb
xor
imul
in
xchg
lods
xor
adc
add
out
sub
sub
or
imul
scas
ss
ljmp
xlat
and
mov
push
arpl
and
sbb
push
icebp
and
pop
dec
mov
leave
sbb
aad
fsubr
sbb
jle
pop
in
push
dec
cmpsb
out
cmp
push
or
xor
push
fadd
scas
cli
decl
mov
cmp
mov
enter
aam
call
or
mov
sbb
lock
popf
je
push
aam
push
aas
xor
mov
lods
dec
add
test
pop
add
gs
mov
mov
or
das
ficomps
mov
inc
mov
jle
cmp
sbb
fstpt
das
jo
ret
int
decl
nop
ret
lret
push
or
cmp
push
or
fisubl
or
lock
pop
sti
sahf
shr
jle
aaa
pusha
and
mov
pushl
aad
mov
ja
addl
stos
mov
int3
sbb
stos
xor
inc
push
stc
cmp
hlt
mov
les
adc
cmp
daa
test
ljmp
mov
mov
lahf
cmp
rcr
rcr
cs
pop
xor
leave
lock
jg
mov
aad
rep
lea
inc
xchg
pop
aam
sub
xor
adc
sbb
jmp
scas
sub
pop
mov
call
std
add
cmp
xlat
lods
xor
es
fisubs
xchg
psrld
sub
xor
decl
xor
popf
mov
lret
lahf
cltd
jo
xchg
dec
cmpl
fsubs
mov
adc
xchg
repnz
orl
int3
inc
inc
or
ret
sub
jno
mov
aas
push
cld
ljmp
push
ds
out
sub
pop
in
sub
decl
repz
aaa
pop
loopne
xlat
in
push
das
push
fists
inc
sbb
outsb
fs
sbb
addr16
lret
aam
jmp
jno
scas
lock
shll
fwait
sbb
sti
pop
pusha
fildll
aaa
addb
jg
xchg
lcall
movsb
out
push
dec
test
pop
adc
jmp
sbb
minps
decl
pop
pop
in
das
mov
xchg
mov
loope
xor
andl
mov
int3
sub
popa
cmp
mov
pop
mov
loop
fcmovnb
dec
std
or
and
dec
mov
or
jae
and
ret
loopne
inc
rdseed
mov
ret
jo
cmp
or
das
scas
cmp
decl
jns
xchg
fistl
push
pop
in
iret
add
lods
mov
inc
pop
cwtl
outsl
in
cld
jns
adc
push
inc
test
add
pop
mov
inc
notb
adc
mov
mov
fwait
mov
push
cmpsb
aas
outsb
push
scas
inc
sub
lcall
mov
mov
pop
shlb
adc
mov
dec
cltd
scas
add
insb
jmp
dec
cltd
or
dec
imul
loopne
call
sub
fbstp
in
cmp
sbb
mov
add
dec
add
and
lods
add
call
cmp
test
sbbl
outsl
jmp
fidivs
inc
jb
cmp
or
sub
cmpsb
shll
in
decl
mov
mov
xor
dec
imul
inc
stos
dec
je
jg
xor
pop
add
aas
or
notb
pusha
stc
lods
lods
scas
add
add
stos
cmp
xchg
dec
mov
mov
subl
xorb
leave
ror
and
push
lcall
sub
jp
push
shl
mov
rcrb
sahf
icebp
ss
enter
decl
shrb
pop
push
mov
out
pop
dec
loopne
or
dec
sbb
loope
aas
popl
call
or
cltd
cli
outsl
pop
ret
pop
jp
or
pop
hlt
pop
cmp
cli
loop
sar
das
mov
fstl
outsl
mov
fs
xchg
jbe
inc
jmp
std
ljmp
gs
mov
pop
pop
inc
push
shll
inc
fildll
cmp
sbb
inc
jg
js
and
mov
mov
je
loopne
xor
mov
mov
popa
imul
loop
in
test
outsl
dec
int3
dec
call
cmp
sti
lock
cmp
mov
push
addr16
mov
pushf
ja
jno
mov
fbld
sbb
push
pop
xor
add
jmp
jae
lret
jae
dec
lcall
add
mov
or
jecxz
pop
sub
jg
icebp
xlat
xor
jl
jno
jo
cs
xchg
cmpsl
xchg
in
jmp
pop
mov
push
pusha
nop
mov
aas
fiadds
out
adc
loop
fldl2e
pop
cmp
xchg
int3
fdivr
mov
jne
or
cmp
in
shlb
movsl
xor
inc
faddp
dec
clc
data16
adc
cli
mov
mov
jp
or
fbld
xor
decl
stc
roll
fprem1
push
cmp
mov
inc
aaa
or
rorb
jmp
dec
push
dec
cmpsb
jp
pop
pop
and
subb
sub
pop
inc
xchg
inc
out
jb
insb
mov
jns
xchg
aaa
ja
sar
sahf
fidivrl
or
xchg
lods
or
inc
fcomip
in
ljmp
mov
pop
addr16
test
jmp
push
ret
pop
out
and
bound
push
mov
in
dec
push
scas
es
ss
pop
and
stc
inc
xor
test
mov
es
fstl
dec
imul
mov
int
mov
ret
mov
mov
shll
rclb
jns
loopne
jle
lds
xchg
and
fcomip
call
dec
adc
xchg
push
adc
xor
jns
outsb
mov
inc
addr16
push
mov
call
fistpll
lahf
jl
mov
cmc
pop
dec
outsl
clc
mov
test
xlat
push
push
arpl
insb
add
adc
insl
divl
jmp
rcr
pop
mov
pop
mov
out
jg
jge
sbb
jl
icebp
jne
xchg
pushl
cltd
lahf
mov
or
mov
cmc
stos
sub
and
xlat
notl
mov
and
leave
mov
clc
ss
adc
inc
enter
inc
pop
jbe
xlat
xchg
dec
cltd
in
shl
enter
jge
or
xchg
scas
add
call
push
or
dec
jne
mov
adc
ds
jne
push
test
pop
jbe
mov
pop
incl
mov
dec
iret
jmp
nop
mov
cmp
sbb
mov
xor
mov
push
cld
inc
iret
add
jg
cld
push
dec
add
rol
sbb
shrb
jnp
push
clc
jg
jne
cmpsb
icebp
or
inc
popa
push
addl
cmp
add
je
shrb
outsb
mov
rcrl
mov
and
lock
pop
lds
stc
test
push
int3
cmpsl
lds
outsb
inc
sbb
jne
xchg
les
or
sbb
cmp
inc
test
and
incl
ljmp
repnz
xchg
std
dec
das
idivb
xor
mov
pop
jmp
sub
repz
mov
push
das
js
add
dec
push
test
inc
inc
push
push
outsb
test
sub
ljmp
imul
jns
pop
ljmp
movsb
enter
mov
and
sbb
jb
add
insl
fadds
lcall
cmp
push
in
cmpsb
rorb
lea
jne
or
jp
movsb
pop
and
mov
inc
fsubs
jo
mulb
mov
mov
dec
ret
jns
scas
clc
in
out
out
lcall
xchg
shl
clc
int3
inc
mov
call
in
dec
sub
jecxz
imul
mull
sti
add
jl
in
push
mov
mov
jmp
cltd
rolb
pop
push
mov
adc
scas
adc
out
fildll
add
sahf
pop
outsb
rcrb
fcoms
pusha
xchg
scas
sbbl
jg
push
mov
rorb
int
or
cmp
idivb
jnp
push
hlt
cmp
sbb
decb
mov
hlt
aad
int3
mov
push
add
jo
fimuls
adc
inc
sarb
cmp
push
jmp
lahf
cmp
xchg
adc
xchg
sub
aas
pop
and
out
mulb
xchg
filds
jbe
ljmp
pop
loopne
inc
aas
in
inc
subb
xchg
shrl
and
cmpl
jge
loop
sub
out
mov
mov
decl
insb
ljmp
and
out
mov
mov
into
sbb
jbe
popa
sub
sti
lds
cmpsl
push
jge
or
adc
sub
dec
cmp
cmp
push
fbstp
call
std
ljmp
fwait
push
fucom
xchg
add
sbb
shlb
xor
outsl
ror
ss
movsl
in
pushf
in
xchg
cltd
mov
sub
out
in
call
mov
jo
in
loope
add
std
sub
add
push
inc
mov
jmp
popf
imul
stos
inc
nop/reserved
xchg
and
fwait
decl
xor
fdivp
xchg
mov
lcall
sbb
mov
jge
leave
inc
sarl
cwtl
incl
and
mov
sarl
outsl
scas
cltd
mov
lcall
jns
je
adc
iret
jl
rcrl
clc
mov
dec
stos
add
in
insb
pop
dec
jmp
mov
inc
cbtw
push
das
mov
jg
inc
xchg
pushf
adc
pop
xchg
adc
and
gs
bnd
nop
mov
sub
mov
and
and
call
rclb
out
add
adc
sub
loope
pushf
scas
and
and
xchg
leave
push
clc
fisubl
dec
xchg
scas
je
mov
mov
mov
mov
push
lds
jb
out
lahf
fsubs
dec
pop
and
in
or
fildl
mov
sahf
jecxz
add
pop
add
inc
cmpsl
or
adc
push
call
cltd
pop
jb
test
lock
lea
sbb
js
mov
sbb
clc
mov
mov
call
xchg
pop
pop
sbb
movsb
xchg
jp
sbb
scas
data16
and
push
shll
cmpsb
add
loope
mov
lock
jnp
cld
fsubp
fsubs
or
dec
fsubl
incl
add
fildl
stc
cs
mov
clc
mov
fcompl
icebp
dec
stos
cmpsl
mov
or
fwait
or
pushf
in
rcrb
insl
mov
fsubs
pop
and
hlt
pop
imull
xchg
ss
push
lods
clc
mov
outsb
in
add
aam
dec
fdivrl
incl
or
fimuls
out
add
stos
xchg
ret
push
je
xchg
adc
incl
sbb
and
std
fsts
and
or
jp
push
movsb
lock
mov
icebp
jg
add
push
xchg
pop
inc
mov
pop
fisttpll
icebp
jno
das
clc
push
inc
mov
data16
in
fiaddl
out
es
adc
xchg
fucomip
mov
loopne
sti
pushf
stos
sub
sbb
or
js
push
loope
rorl
lods
jg
call
pushf
ficoms
sbb
inc
xchg
pop
sbb
add
aam
shr
mov
fdivrl
popa
inc
stc
cmpsb
dec
nop
push
jle
outsl
scas
cmp
mov
lcall
test
cmp
inc
inc
add
into
sbb
push
outsl
clc
jmp
push
sarb
into
mov
fisubl
sbb
fsubs
incl
adc
mov
in
ljmp
or
ret
push
sub
sbb
ljmp
jg
addr16
or
lcall
mov
call
mov
dec
fmuls
aas
test
mov
in
pushf
xchg
add
jp
aas
xor
lds
lock
pushf
cltd
pavgb
orl
mov
out
mov
or
jns
sahf
pop
pop
cmp
or
xchg
enter
adc
mov
scas
sub
push
lods
les
cmp
sar
jg
cmp
xchg
xor
imul
roll
stc
push
decl
and
loopew
inc
jb
out
clc
jg
cmp
jl
dec
into
jl
xchg
pop
movsb
out
mov
adc
fs
xorb
sbb
pop
mov
aas
andb
movsl
sbb
mov
adc
pop
mov
cmc
mov
jle
push
push
jne
add
pop
cmp
mov
sub
mov
neg
cmc
and
test
push
imul
cmp
jnp
incl
aaa
or
ret
dec
xchg
and
inc
jmp
mov
push
gs
add
hlt
in
cmp
decl
sbb
jo
sti
xchg
cmpb
cli
add
mov
inc
ljmp
mov
in
loopne
sub
adc
decl
add
jge
push
jnp
ljmp
pop
fwait
jg
call
sar
push
jbe
repz
lock
into
lcall
xor
adc
jns
or
mov
push
push
clc
ljmp
enter
cmp
out
xchg
incl
cld
aam
stos
pop
xor
popf
ss
push
lock
jbe
mov
cmp
bound
sbb
sbb
mov
inc
sarb
imul
pushf
iret
incl
bound
sub
jnp
repz
out
ds
lret
fldl
test
inc
push
jo
in
xchg
fdivrl
xor
sbb
mov
gs
dec
mov
mov
fdivl
or
jg
subb
enter
add
mov
aad
movsl
bound
mov
int3
outsb
cs
clc
jl
mov
mov
negb
mov
xchg
lds
mov
cwtl
mov
inc
call
fmuls
inc
push
push
test
aad
jmp
sub
stos
jne
adc
outsb
cmc
imul
scas
cs
outsb
inc
xchg
xor
iret
addb
xorb
gs
xchg
scas
imul
in
scas
movsl
loopne
lret
and
mov
js
outsl
lcall
das
or
lods
loop
add
mov
daa
sbb
das
divb
leave
scas
jae
mov
push
push
xor
and
jns
and
fnsave
inc
inc
call
mov
push
imul
std
cmp
popa
pop
test
je
cmp
and
mov
sub
adc
iret
jo
cmpsb
call
mov
xlat
mov
xor
pop
sub
call
cld
data16
insl
repz
xor
outsb
push
and
cltd
orb
pop
test
lcall
inc
or
aas
popf
insb
pusha
outsl
jmp
call
incl
sbb
jp
popa
mov
dec
cmp
sbb
adc
jae
fisubl
xor
stc
xorb
push
cmp
aas
jb
push
mov
add
jmp
pop
lods
jae
cmpb
and
or
xor
dec
mov
lcall
clc
xchg
pop
ja
sub
mov
bound
mov
xchg
dec
mov
pop
imull
fistpll
push
push
xor
inc
mov
xor
pop
push
incl
fdivr
or
mov
gs
add
pop
fs
inc
movsb
pop
mov
mov
or
sub
mov
sub
lcall
sub
cltd
add
xchg
jle
xor
loope
xchg
cld
push
mov
js
outsl
jno
leave
jnp
jecxz
mov
push
leave
push
repnz
ret
fmul
mov
and
call
ljmp
pusha
mov
loop
add
dec
push
fildll
cmp
jle
mov
lcall
and
psrlw
cmpsb
imul
in
ret
clc
dec
or
mov
outsb
mov
stos
fisttps
les
icebp
scas
mov
sti
loope
dec
dec
lcall
outsl
xor
dec
dec
out
push
add
xor
and
adc
and
cmpsb
out
add
push
xchg
xor
mov
decl
aaa
ds
popa
cs
jb
mov
jo
int3
xor
jg
call
adcb
cmp
mov
add
mov
bound
inc
loop
sti
in
repnz
sub
jge
loopne
mov
les
decl
push
andl
les
add
pop
lock
or
dec
sub
shl
sub
and
cmc
rcrb
dec
add
pop
insb
scas
fwait
lds
cmp
mov
ljmp
xchg
outsb
inc
adcl
mov
xchg
mov
push
in
fsubrp
in
icebp
arpl
insl
rclb
jmp
lahf
loope
dec
jne
sbb
loopne
jo
fscale
xor
cmp
frstor
int3
pop
enter
cltd
leave
sub
jp
jl
in
cmp
mov
xchg
adcl
inc
inc
movsl
ret
sti
es
adc
call
mov
js
data16
push
cltd
repz
sbb
mov
insl
not
decl
or
push
sbb
mov
cld
inc
inc
insb
call
std
jg
dec
popl
ret
aaa
push
cmpsb
mov
inc
divb
aam
add
mov
inc
and
xor
mov
rcl
incl
imul
xorb
adc
lds
aas
pop
cmp
mov
and
sub
or
or
cmp
rcrl
out
outsl
xor
sub
repz
lret
sbb
jg
jmp
sbbb
outsl
shll
sbb
xor
aaa
faddl
sarl
dec
and
cmp
pushf
aas
jmp
lock
ljmp
pop
dec
gs
pop
fisubrs
mov
sub
shlb
or
lcall
mov
pop
add
xor
dec
mov
fdivr
ljmp
nop
adc
popf
cmp
sub
xor
mov
sub
jmp
push
inc
test
dec
mov
js
sub
fs
mov
loopne
call
out
insb
pop
xchg
adc
std
dec
lds
cmc
jmp
pop
xor
in
mov
mov
stos
lret
repz
adc
jl
dec
xor
les
hlt
inc
xor
or
ret
mov
call
aad
jno
cmp
sar
decl
sub
mov
push
pop
push
jno
popa
xor
mov
js
adc
mov
pop
and
bound
or
rcll
lret
dec
aad
jmp
std
add
mov
mov
xchg
cli
lret
nop
xchg
les
in
pop
push
cmc
dec
ret
jg
jle
not
xchg
rorb
and
repz
mov
outsl
cli
pop
mov
mov
push
dec
popa
mov
adc
in
mov
mov
pop
push
js
in
pop
std
sub
push
fwait
sbb
mov
add
lods
insb
push
inc
dec
andl
jnp
in
fidivrl
mov
lea
insb
dec
xchg
mov
dec
rclb
add
cwtl
jg
sub
mov
int
pushl
leave
push
ret
sbb
push
pop
lods
js
icebp
or
popf
push
pop
mov
outsb
sbb
mov
pushl
sarl
cmp
in
aas
js
cmp
xor
dec
mov
loopne
xchg
mov
cld
mov
daa
pop
in
adc
std
rcrb
jmp
mov
divl
sbb
stos
sbb
xchg
rorb
int
dec
dec
js
xchg
mov
incl
sbb
pop
add
test
push
jmp
sahf
lock
decl
scas
sar
push
lods
or
sbb
or
mov
push
mov
sar
mov
xchg
xchg
pop
or
nop
out
mov
mov
popf
mov
lods
mov
repnz
arpl
fdivr
mov
std
in
in
lcall
xor
repz
inc
aam
pop
add
scas
enter
push
dec
push
cltd
push
xchg
xchg
shl
call
or
mov
scas
andl
mov
lret
jge
xlat
adc
jmp
mov
inc
push
sti
call
lret
dec
and
pop
xor
mov
mov
xchg
cmpsl
lds
mov
pop
fcmove
mov
and
dec
xor
jmp
repz
ja
pop
jmp
test
mov
insb
leave
fs
mov
lods
xchg
mov
ret
test
es
andb
adc
je
leave
mov
dec
dec
mov
and
addb
in
call
add
sub
or
add
xlat
mov
jns
sub
adc
ljmp
pop
hlt
out
fnstenv
mov
paddq
mov
mov
ljmp
add
stos
cmp
insb
jmp
decl
lea
mov
clc
cmp
xchg
mov
add
lcall
sbb
jmp
ljmp
lea
cmp
inc
test
dec
sti
jg
fs
dec
cmp
mov
inc
icebp
pop
push
outsb
es
or
ljmp
pop
cmp
sub
jg
mov
pop
sub
lcall
movsl
fsubr
std
leave
inc
jl
lcall
lock
mov
mov
lret
dec
mov
xor
push
lret
outsb
push
lcall
inc
cld
xor
sub
stc
and
insl
xchg
mov
leave
add
rorb
cmpsb
jns
xchg
ljmp
clc
mov
pop
fcomp
scas
sti
push
xchg
in
pop
lea
es
popf
xchg
icebp
xchg
enter
hlt
out
lock
push
sbb
pop
mov
pushaw
sub
mov
flds
repz
outsl
es
push
push
call
insl
movsb
or
pop
and
out
cltd
daa
sarl
popa
mov
or
add
dec
sub
ds
dec
ret
insb
mov
xchg
sahf
dec
add
clc
push
cmpb
adcb
popa
call
fwait
scas
pushl
subb
sbb
je
loope
adc
mov
jle
and
out
in
push
mov
xchg
loopne
dec
in
icebp
jmp
popa
pop
sbb
lods
inc
sahf
mov
in
pushl
cli
mov
mov
push
stos
sbbl
add
mov
lcall
pop
dec
and
mov
into
sbb
pop
lods
or
out
jge
mov
movsl
jmp
xchg
push
cmp
scas
pop
mov
dec
mov
scas
cmpsb
ror
jbe
in
sub
in
mov
or
fldcw
fistps
mov
or
shlb
ret
outsl
clc
lcall
scas
std
xor
loope
cmp
pop
cmpsb
push
dec
xor
lock
cltd
inc
or
lahf
fldl2e
and
movsb
incl
add
jbe
and
and
xadd
pop
inc
movsl
pop
xchg
aas
lock
xor
push
add
push
call
loop
filds
or
sub
das
pop
sbb
jae
stos
mov
out
das
sar
sti
sbb
test
push
sarb
mov
outsb
jb
and
push
ljmp
jmp
and
test
ficoms
int3
xor
sub
ficoms
mov
je
mov
pushl
ljmp
fiaddl
push
cmp
and
insb
dec
inc
sub
mov
mov
jl
mov
int3
and
les
dec
mov
jo
and
in
enter
cmc
pop
push
cli
test
jno
mov
in
mov
xchg
xor
nop
lock
adc
stos
test
or
and
mov
popf
cmpsl
xor
mov
xchg
es
adc
outsl
clc
mov
or
fsubr
out
repnz
cmp
dec
xor
in
mov
incl
lods
fs
push
jns
adc
fld
aas
gs
add
push
mov
gs
ljmp
xchg
mov
repz
sub
push
inc
lret
iret
cli
push
out
xlat
pop
cltd
mov
xor
jb
push
sti
xor
call
jl
enter
xchg
adc
loope
add
pushl
rcr
ja
cs
adc
ljmp
ljmp
loop
lock
cmp
mov
mov
loope
dec
push
mov
push
dec
cmp
dec
enter
xchg
pop
je
push
mov
inc
arpl
mov
ljmp
pop
ds
out
jg
sub
sbb
loop
in
ljmp
sub
cmpb
push
sbb
xchg
incl
imul
jb
jmp
xchg
push
data16
in
xorb
stos
je
arpl
call
fstps
mov
mov
fidivs
sbb
decl
sub
fsts
ss
int3
sub
fisubrs
leave
dec
cmp
cli
pushl
js
sub
dec
pop
lods
mov
jns
cmpsb
repnz
incl
cltd
arpl
fstl
xchg
data16
pop
fs
not
or
ds
mov
jne
dec
mov
inc
and
cmpsl
insl
xchg
or
ja
jae
xchg
adc
mov
pushl
or
outsl
mov
test
lcall
testb
outsb
push
lods
scas
je
inc
sub
and
xchg
push
push
mov
jmp
xchg
xchg
lahf
inc
cs
push
dec
incl
shrb
lods
clc
sub
ret
mov
lcall
call
xor
inc
sub
daa
adc
sbb
int3
mov
mov
push
push
call
mov
dec
mov
jl
mov
iret
jp
pop
inc
xchg
mov
and
loop
movsb
sub
pushl
mov
pop
jg
and
and
sbb
fisubl
pop
inc
jg
je
xchg
fdivrl
pusha
std
jmp
and
cmp
mov
cld
jmp
cmp
in
jg
ja
push
push
jmp
in
jecxz
sarl
and
adc
repnz
fs
mov
and
mov
lcall
rcrb
push
adc
in
inc
enter
pop
dec
xor
push
cmp
cmp
ljmp
mov
lock
in
add
mov
mov
or
lcall
das
outsl
lcall
cli
inc
cmpsb
ljmp
ret
in
xchg
inc
inc
xchg
jecxz
mov
dec
inc
popl
repnz
inc
dec
jno
idiv
lcall
in
test
leave
imul
stc
mov
shll
out
fwait
stos
mov
shl
andb
ret
mov
push
popf
repnz
push
push
cmp
push
xor
daa
xlat
lcall
lods
into
js
mov
adcl
imul
jg
addl
mov
gs
decl
sbb
adc
pop
aam
xchg
xor
test
test
aad
inc
or
incl
xchg
sarl
cmp
ret
pop
push
and
mov
lcall
popa
dec
pop
dec
call
pop
xchg
push
inc
mov
lea
cli
xchg
sbb
pop
jae
call
outsb
push
out
pop
das
add
push
push
inc
add
push
ret
aas
sub
jg
incb
das
or
pusha
push
mov
stc
push
sbb
pushl
add
and
rcrb
or
mov
test
stos
cs
loopne
xor
push
stos
and
sbb
in
inc
test
lcall
lahf
repnz
arpl
bound
sbb
pop
scas
jg
or
jne
mov
jle
ret
stc
sub
ss
ljmp
sahf
mov
lock
rcrl
das
cmpsb
push
out
imul
xor
jmp
test
xchg
aad
lds
mov
roll
loop
test
xor
inc
sub
cld
enter
pushl
adc
ljmp
in
inc
pop
pmuludq
mov
sub
inc
adc
mov
mov
jmp
aad
xlat
outsl
jb
pop
fmull
iret
in
mov
loopne
mov
or
jg
stc
adc
stos
push
xor
in
out
mov
fistpll
xor
jo
or
jo
int
add
sub
and
pop
mov
cmp
cmc
vunpcklps
jge
push
pop
xchg
lcall
lret
or
xor
add
ljmp
into
outsb
pop
and
cld
xor
xchg
popa
push
or
les
xchg
adc
xor
out
cmp
pop
lcall
push
int3
sub
xor
pop
hlt
jp
cs
call
out
adc
sub
inc
mov
nop
xchg
xchg
mov
sub
in
cld
das
sub
mov
aaa
lahf
fcom
movsb
adc
mov
subb
cld
stos
dec
stos
rol
bound
pop
mov
daa
or
inc
andb
xchg
inc
js
test
xlat
push
stc
das
outsb
loopne
sbbl
adc
jle
mov
mov
xchg
mov
push
or
arpl
lcall
pop
or
mov
pop
rclb
lock
call
xchg
mov
cs
enter
and
mov
test
dec
add
jg
incl
sub
out
or
and
sub
gs
jb
lods
push
and
call
sub
mov
test
nop
dec
cwtl
pop
daa
xchg
sbb
or
dec
pop
scas
jns
xor
pop
xor
push
je
jle
add
fs
sub
jp
dec
mov
insb
xor
ljmp
fcoms
pusha
mov
movsl
das
or
andl
decl
cwtl
push
jge
mov
mov
cmc
and
pop
in
adc
flds
call
push
push
xchg
mov
popf
dec
out
hlt
inc
xchg
cltd
addr16
insb
fs
cmc
enter
cmc
decl
pop
bts
dec
jo
popa
sahf
sbb
icebp
faddl
dec
mov
push
mov
iret
jl
and
xchg
fdivs
enter
pop
mov
mov
fidivs
add
mov
lds
sar
decl
mov
add
aad
cwtl
xchg
iret
mov
sbb
roll
mov
add
mov
pop
or
lahf
adc
cmpsb
dec
mov
cmp
push
negl
dec
outsl
push
std
cmp
and
cs
je
pop
jg
adc
andb
sbb
ffreep
dec
mov
movsb
mov
testl
push
decl
adc
divl
addr16
jmp
mov
sbb
fnsave
lock
ffree
fsubrl
cld
mov
pop
or
inc
push
push
sbb
cmp
inc
loope
lock
incl
mov
pop
pop
mov
imul
cmc
lcall
cmp
stos
imull
iret
loope
ja
lds
cmp
imulb
fistps
or
incl
pop
loop
push
jp
scas
add
adc
clc
fmulp
sar
ljmp
mov
daa
inc
jns
adc
pop
or
inc
imul
push
repz
cwtl
push
test
mov
mov
push
cld
cli
lret
cmp
lds
pop
sub
sti
jecxz
dec
push
outsb
sbb
fadd
sub
push
dec
jne
xor
inc
dec
sub
xor
mov
lcall
xor
popa
and
inc
mov
std
cwtl
or
lods
aaa
mov
or
jmp
pop
adc
jl
jo
sahf
xchg
loop
dec
push
inc
mov
lcall
dec
mov
pop
mov
inc
add
test
and
sbb
out
inc
aad
lock
lea
adcl
dec
dec
nop
mov
inc
mov
push
arpl
jg
imul
fucomp
inc
mov
sub
aas
push
dec
pusha
shrb
push
out
sub
out
cmp
rcrl
and
xchg
daa
rorl
out
and
jo
loop
xor
adc
aad
sbb
cmp
pop
mov
add
mov
lcall
stos
mov
and
dec
sbb
bound
cmp
jns
push
scas
inc
int3
dec
mov
mov
jmp
xor
cmp
xor
push
jae
mov
ret
jp
adc
dec
fcomip
scas
adc
mov
xor
adc
mov
mov
push
movsb
push
cmp
cmp
and
adc
jne
dec
jle
lcall
fdivp
rcl
jmp
jns
aad
mov
adc
lcall
fwait
inc
insl
subl
in
inc
sahf
dec
inc
push
out
push
dec
pop
mov
in
dec
jecxz
fwait
mov
pop
dec
pop
fwait
aas
and
xchg
test
fidivl
stos
push
jg
clc
cmp
jmp
insl
adc
ja
inc
pop
rolb
mov
xor
mov
cwtl
cmp
lret
mov
mov
mov
cmpsb
cwtl
lret
dec
pushf
cltd
inc
xchg
addr16
jp
mov
add
xor
xchg
ja
inc
mov
popf
mov
sbb
rolb
lock
out
or
cmpsb
inc
xchg
pop
dec
pop
cmp
sbb
stos
jg
push
incl
adc
pop
push
imul
out
sbb
cmpsl
and
fidivl
nop
out
cli
call
jl
add
or
adc
sbb
mov
cmc
push
sbb
outsb
dec
mov
mov
mov
dec
add
mov
jg
mov
add
mov
sbb
add
push
or
dec
loop
jmp
out
ljmp
jmp
sub
adc
mov
pop
or
push
sub
cli
je
call
popa
adc
data16
cmp
pushfw
testb
lods
or
fwait
das
lods
loop
mov
in
mov
jae
fcomi
incl
mov
mov
push
es
bound
adc
sti
repnz
mov
add
out
out
or
mov
and
mov
and
inc
mov
mov
jg
xchg
and
push
jecxz
fstpl
ret
xchg
test
es
sub
scas
sarl
fdivl
lret
push
pop
sbbl
dec
add
mov
and
add
add
and
push
cli
pushl
mov
or
add
sub
adc
dec
cmp
decl
and
dec
and
stc
jno
sub
outsb
lods
jp
cmpsb
or
call
test
mov
push
mov
out
jbe
xlat
lret
xlat
sbb
xchg
iret
in
xchg
leave
mov
mov
loopne
jg
pop
cwtl
dec
dec
test
mov
mov
divb
aaa
lahf
nop
popa
jl
lret
cmp
stos
fwait
scas
xchg
mov
orl
push
sar
adc
push
movsb
inc
rol
xor
notb
orl
lahf
inc
inc
outsl
rcll
adc
imul
inc
hlt
call
ja
inc
rcr
adc
push
or
xor
cld
lcallw
iret
test
lds
lea
es
sub
dec
hlt
pushf
sbb
sbb
clc
mov
lret
mov
jl
cs
push
mov
aas
mov
outsl
or
and
or
ret
and
prefetchw
into
cmp
aam
push
xor
fisubrs
and
push
lea
mov
leave
jmp
icebp
stc
mov
push
leave
mov
push
jg
clc
sub
fwait
aaa
pop
popl
leave
cmovno
and
leave
ljmp
mov
mov
mov
addr16
ret
lcall
or
mov
adc
repnz
lret
fimull
mov
je
pushf
adc
fsubrs
test
leave
lods
fs
lcall
push
daa
addr16
sti
repz
div
inc
xor
incl
xor
rcll
aas
push
mov
out
xchg
adc
ljmp
push
xor
incl
loopne
mov
add
cmp
and
icebp
aaa
xchg
pop
mov
pop
jb
jg
clc
add
pop
daa
inc
mov
push
imul
fdiv
ja
push
jbe
mov
imul
or
cmc
jmp
dec
into
pushf
mov
jg
decb
es
ds
aad
decl
push
in
pusha
jo
mov
inc
or
sub
pushl
dec
inc
addl
mov
jg
sahf
inc
mov
mov
dec
add
call
sub
cld
or
mov
mov
jno
sbb
sbb
mov
popa
add
fwait
jb
mov
xor
mov
adc
out
les
xor
jecxz
mov
incl
xchg
jnp
dec
adc
insb
mov
lods
adc
xchg
iret
jo
ljmp
ret
aam
nop
cmp
sub
fs
jno
pop
xchg
jmp
std
pushl
push
push
lret
pop
cmp
iret
outsb
mov
lcall
inc
inc
ljmp
dec
push
mov
jmp
push
sar
jmp
pop
dec
mov
mov
add
imul
loop
mov
test
lahf
scas
cmp
jmp
lds
pop
lcall
scas
cli
adc
mov
es
xlat
or
lods
adc
or
xchg
call
sbb
and
push
fstl
lahf
mov
cmp
rcrb
aad
cmpsl
sub
divb
cli
fisttps
jmp
js
ljmp
decl
and
test
pushl
push
aaa
ret
pop
sbb
js
into
in
test
and
mov
loopne
test
movsb
ja
shlb
movsb
cwtl
lcall
and
mov
fnstenv
adc
mov
add
sub
cwtl
xlat
scas
pop
cmp
dec
push
rcl
icebp
xchg
scas
pushf
or
test
pop
decl
inc
lret
test
adc
lds
sbb
add
out
clc
or
push
mov
adc
lret
sub
sbb
outsb
adc
test
addr16
decl
push
xchg
sub
mov
inc
cmp
xchg
xor
xchg
fwait
shl
ss
decl
jo
movsl
xchg
mov
xchg
mov
addb
xchg
pop
xor
xchg
sti
mov
ljmp
movsb
aas
push
inc
notl
loop
mov
push
scas
pop
adc
mov
incl
dec
int3
out
sbb
sbb
out
outsl
add
leave
push
and
ljmp
cmp
dec
xor
push
scas
xchg
add
mov
pop
xchg
enter
call
jg
pop
enter
adcb
aam
mov
dec
dec
xor
xchg
js
adc
push
sub
mov
mov
inc
sbb
loopne
repz
andb
int
imul
add
pop
mov
jle
jne
loop
pop
stos
fiadds
dec
xchg
incl
scas
pop
divb
addb
pop
push
scas
imull
in
pop
mov
mov
pop
add
movl
cmp
pop
ss
mov
cmp
cld
jmp
in
into
arpl
add
loopne
aas
lret
incl
jbe
pop
fs
jns
sbb
mov
jmp
add
cmp
into
scas
rorb
and
fisttpll
data16
mov
fsqrt
xchg
ficoml
pop
jo
lds
mov
stos
scas
inc
scas
mov
push
pushl
aam
and
bnd
aad
dec
sbbb
jns
jmp
or
jg
dec
sub
je
gs
popl
adc
lcall
vmovq
sub
cmp
adc
outsb
faddl
lcall
cmpsl
hlt
and
push
dec
enter
sbb
icebp
jb
add
fists
jecxz
jge
mov
mov
leave
adc
pushl
add
mov
out
inc
xor
cmp
sarb
ret
sub
jno
lahf
into
mov
clc
mov
cwtl
jmp
ja
lds
mov
jmp
aad
out
add
sub
jg
mov
and
push
xchg
cltd
test
push
ds
aas
out
mov
lcall
sub
outsl
add
pushf
mov
inc
stos
ljmp
lods
xlat
cmp
imul
fidivrl
in
ud0
lcall
xchg
leave
and
dec
jno
out
pop
xor
loopne
mov
jb
pusha
push
mov
ljmp
mov
xchg
dec
sar
test
cmp
daa
adc
add
stos
mov
rcl
stos
outsb
lcall
sarl
pop
mov
ucomiss
add
popf
fwait
mov
push
cltd
cmpsb
icebp
add
ds
dec
cmp
mov
gs
das
aam
cmp
mov
popf
sbb
inc
cmp
sub
in
stos
jmp
mov
call
cli
pop
mov
add
xchg
cli
arpl
ss
push
sbb
xor
shll
dec
mov
adc
ljmp
js
into
aam
imul
pop
in
leave
jne
or
dec
les
push
incl
iret
pop
jnp
aas
lret
jo
mov
loope
gs
xchg
pop
ljmp
call
dec
mov
push
dec
mov
pop
test
outsl
fimull
push
add
aad
stos
clc
mov
pop
and
insb
sbb
ljmp
and
mov
cld
lock
push
push
in
xchg
cmp
mov
dec
and
sbb
inc
sbb
push
push
mov
insb
xor
add
in
jmp
adc
jmp
pop
adcl
cli
imull
jae
xor
cmp
jns
pop
loop
std
decl
sbb
and
jmp
sub
mov
repz
mov
adc
mul
ljmp
push
test
and
sbb
and
inc
push
decl
stos
xlat
xchg
cmp
dec
pop
jle,pt
pop
negb
xchg
sti
push
cmp
inc
clc
xchg
scas
stc
lret
clc
call
out
dec
loope
and
xchg
into
incl
push
adc
mov
or
xor
pop
cmp
or
jmp
fs
mov
fsubp
rcl
inc
jmp
fs
ljmp
fwait
mov
aas
mov
iret
cmp
in
gs
cld
sub
pop
cld
test
add
dec
int
cmpsl
or
pusha
sbb
arpl
jg
clc
jg
jg
rol
fsubr
mov
std
jl
jbe
in
incl
lret
jnp
pusha
mov
dec
ret
cmp
push
pop
cli
mov
movsb
and
xchg
lret
or
leave
push
punpcklwd
pop
mov
ljmp
pop
xor
gs
sub
and
cmp
mov
clc
idivb
mov
mov
dec
sahf
js
call
adc
adc
cwtl
cltd
movsl
stos
dec
cld
mov
sub
les
call
lods
dec
call
push
popa
xchg
pop
inc
mov
lret
jo
or
or
gs
mov
pop
pop
aam
sub
cltd
pusha
jl
or
rcll
push
xlat
push
data16
push
dec
inc
or
lock
cld
mov
addb
cli
in
dec
mov
mov
xor
das
jecxz
mov
jg
enter
xchg
mov
in
sahf
mov
cld
ret
mov
pop
jmp
lcall
or
call
pusha
bnd
enter
or
cmp
incl
mov
test
pop
fbstp
enter
jg
xchg
sbb
mov
pop
je
clc
call
lock
in
push
dec
mov
push
gs
push
lock
fnsave
push
arpl
sbb
pop
hlt
cmp
push
fsin
popa
ror
inc
ret
cmp
mov
mov
stc
popf
inc
pop
dec
popa
test
pop
popa
fldt
movsb
xchg
dec
jmp
inc
lret
pushf
adcl
pop
lcall
mov
mov
add
adc
imul
daa
jbe
test
test
push
fisubs
or
jg
clc
jle
jmp
adc
inc
jp
inc
dec
xchg
and
decl
push
clc
sub
push
lcall
aad
mov
sti
pop
outsl
enter
and
mov
shr
mov
mov
mov
fsubrl
mov
pop
mov
dec
jecxz
adc
pop
scas
aam
incl
and
mov
call
inc
pop
inc
or
je
aam
pop
jae
pop
adc
jmp
in
cmp
pop
outsl
jecxz
mov
add
and
inc
pop
cmc
aas
fisttpl
lea
scas
out
clc
dec
iret
pop
iret
push
ljmp
add
mov
sub
adc
ljmp
push
mov
ja
loope
pop
data16
decl
xor
adc
js
adc
xlat
xor
pop
enter
stos
daa
pop
lods
loopne
jnp
lahf
mov
lret
cli
lcall
cmp
scas
dec
mov
adc
rcrl
jbe
push
outsl
pop
adc
xchg
rolb
push
ss
mov
call
scas
fnstcw
and
mov
jns
fadds
adc
jg
mov
pop
pop
mov
shll
jge
call
repnz
sbb
cwtl
mov
and
ror
aaa
jnp
mov
das
mov
call
daa
pushl
ljmp
je
test
ljmp
leave
inc
push
cmpsl
inc
cli
cli
mov
mov
add
push
cmp
lret
fwait
push
ljmp
lcall
jbe
lret
in
scas
mov
pop
sbb
mov
mov
jg
popa
cld
jmp
jo
test
jmp
lock
mov
mov
push
stc
push
pop
scas
pop
inc
pop
sbb
push
or
div
push
push
arpl
mov
pushl
cmp
or
push
dec
jnp
add
xor
out
paddb
cli
mov
sbb
pop
push
cmp
call
cmpsb
aas
cli
sbbl
out
jae
xchg
xchg
outsl
sub
leave
pop
pusha
int
out
sbb
nop
xchg
jge
das
out
daa
mov
cmp
scas
ficoms
xchg
adc
add
sbb
mov
nop
jbe
jmp
aas
fsubl
ds
outsl
mov
pop
nop
mov
push
outsb
lods
stos
ja
js
xchg
inc
cmp
incl
cs
shr
aad
mov
ficoml
rorb
incl
jl
cmp
dec
jmp
pop
xchg
orb
imull
movsb
add
das
adc
jmp
and
neg
stos
loope
cmp
jae
cli
dec
xchg
clc
insl
cmp
nop
pop
cmp
sub
call
inc
cmp
jmp
pop
add
xor
and
negl
xchg
sbb
clc
andb
jmp
xchg
dec
out
faddl
aam
fdivr
cmpsl
adcb
mov
decl
inc
xchg
les
dec
push
call
fadds
mov
fmuls
sub
jnp
test
out
mov
pushl
pop
mov
jbe
clc
fdivs
ds
pop
nop
and
lcall
aam
lcall
xor
push
aad
in
notl
mov
incl
xchg
loop
loope
and
jl
imul
pop
lock
mov
jne
les
movsl
mov
push
mov
call
inc
xchg
aad
leave
jae
cld
loopne
xchg
pop
push
fstpt
and
pushl
subps
mov
xor
sub
negl
rorb
fmuls
add
divl
adc
cld
cmp
add
scas
lods
cmp
push
xchg
int
out
push
jle
cmpsl
xchg
in
xor
pushl
and
in
loop
xor
mov
jb
sub
push
mov
pop
pop
and
mov
or
push
rcll
fs
mov
call
addl
addr16
pusha
mov
mov
xor
cmp
mov
lock
pop
enter
adcl
cmp
cmp
xlat
xchg
inc
xor
cmc
and
lods
pop
ret
adc
bnd
mov
outsb
mov
jp
push
incl
lcall
xchg
add
sbb
aaa
pop
jg
adc
call
jmp
sbb
adc
jbe
cmpsb
dec
cmp
jmp
cmp
mov
cs
push
icebp
loop
cmc
push
mov
in
decl
outsl
push
jp
jl
icebp
and
inc
mov
decl
mov
movsb
outsl
add
jg
xor
cwtl
push
pop
cs
pop
mov
fcomip
dec
pushl
or
int
outsb
sub
fbstp
add
hlt
call
xchg
fistps
stos
jp
mov
lret
cmc
decl
imul
push
stos
outsl
int
xchg
insb
incl
sbb
mov
xor
orl
lahf
adc
fdivrs
and
add
push
push
popa
add
cmc
call
cld
sahf
adcl
lds
imul
mov
std
outsl
mov
mov
jge
fldt
sbb
add
inc
icebp
xor
outsb
incb
xor
stos
cmpsb
cmp
sub
mov
inc
fs
jp
pushf
into
push
push
mov
decl
ret
stos
sub
repz
adc
ja
sar
dec
loopne
sbb
fcom
fmull
pop
call
cs
pop
jo
lods
xchg
iret
insl
xor
fdivr
jp
fs
sti
inc
sub
gs
or
rclb
lea
imul
decl
shll
out
stos
cltd
aaa
repnz
mul
imul
mov
pop
sarl
mov
add
outsl
xor
xchg
lock
mov
dec
fcmovbe
aad
adc
pushl
aam
lret
mov
mov
jg
pop
sub
pop
push
sbb
cmpb
icebp
mov
jo
push
mov
and
inc
rcll
xchg
call
mov
ljmp
ret
imul
iret
or
cld
sbb
clc
icebp
mov
pusha
repnz
stos
js
push
and
adc
jg
cld
mov
xchg
and
pushl
sbb
mov
and
pushf
push
xor
test
ss
push
mov
lcall
cmp
stos
jl
mov
mov
lds
int
out
jl
xchg
pop
push
stc
cmc
fwait
and
dec
lods
and
ljmp
sub
sahf
stc
mov
sbb
in
add
mov
ljmp
clc
lcall
cltd
cmp
push
mov
out
popf
mov
ljmp
outsb
dec
mov
out
xor
push
dec
popf
in
push
aas
xchg
data16
add
les
xchg
mov
test
mov
es
add
decl
loope
adc
jecxz
bound
aaa
pushf
insb
test
jns
lcall
rcll
cmp
push
add
cs
inc
rorl
mov
or
pushl
inc
fcmovbe
test
fs
daa
leave
lahf
ljmp
xchg
fdivrs
in
mov
hlt
push
sar
pushl
cmp
addb
flds
cs
cmpsb
sbb
std
hlt
adc
push
push
mov
mov
cmp
cmp
movsl
adc
je
ret
mov
cli
hlt
sbb
aaa
or
xor
cli
js
fisttpl
push
or
call
jle
xor
inc
xor
lcall
jmp
fnstcw
nop
ljmp
mov
mov
adc
rol
das
cli
sub
dec
jmp
test
jmp
call
add
adc
jmp
xorb
shrb
lock
jno
loop
ljmp
jno
mov
and
add
out
pop
shlb
ljmp
sbb
xchg
xchg
push
cmp
scas
push
mov
or
inc
dec
in
xor
gs
xchg
movsb
push
jp
jae
fildll
int
sbb
sub
mov
shll
cld
insl
push
leave
xor
pop
jae
push
fldl
push
std
cmp
mov
mov
imul
mov
sub
repnz
ja
inc
add
pop
scas
sub
fs
inc
std
gs
mov
ror
mov
fstpl
mov
lcall
add
push
inc
scas
xchg
pushl
ljmp
stc
or
pusha
fs
xchg
sub
ret
icebp
xchg
and
jns
sbb
lret
inc
pop
adc
adc
movsb
daa
test
jmp
pop
loop
and
push
fidivrs
and
lods
pop
xor
sub
cmp
pushl
and
in
and
sub
mov
idivl
loopne
andl
push
adcb
sbb
cmp
push
clc
jp,pn
inc
cld
clc
rorl
and
cwtl
inc
cltd
js
jmp
incl
sahf
adc
test
mov
lea
push
mov
ret
mov
xchg
lcall
call
and
push
icebp
cwtl
jp
xchg
data16
mov
call
sbb
mov
shrd
pop
adc
in
mov
int3
mov
jbe
cmp
inc
mov
jmp
scas
mov
sbb
push
and
pop
and
into
lea
fwait
inc
call
call
call
inc
incl
sbb
push
inc
xor
adc
rclb
pop
sar
dec
fists
xchg
outsl
adc
ret
aaa
out
int
cmp
loop
mov
pop
push
fnstcw
dec
jnp
movsl
addr16
jmp
pop
adc
pop
mov
push
xchg
adcl
lcall
imul
jo
stos
fbstp
lret
incl
jmp
lods
leave
rorl
js
sub
decl
add
mov
jo
out
arpl
inc
and
aas
enter
mov
imul
pop
sbb
and
popa
enter
gs
lahf
cli
add
enter
addr16
pop
stc
and
aam
cli
mov
cs
in
mov
xchg
lock
and
xor
out
rclb
lds
sub
and
pop
xchg
xchg
aam
add
pop
cmp
jmp
pushf
sbb
bnd
adc
ficoml
mov
cmp
add
mov
lret
sbb
jns
mov
ljmp
sbb
ret
je
std
jge
rorb
lds
fs
inc
mov
stos
ljmp
push
inc
xchg
daa
gs
int
enter
jle
scas
push
int3
or
cmpsb
movsl
insb
xchg
inc
mov
push
adc
fadds
jg
fadd
scas
les
push
mov
adc
addl
inc
cmp
pop
and
lock
in
xor
incl
fdiv
in
push
call
cltd
repz
fcomps
sub
call
test
inc
pop
mov
ja
clc
ljmp
je
in
call
out
repz
sub
and
xchg
pop
sti
jg
jno
in
aas
xor
mov
and
aaa
push
nop
dec
mov
test
pop
loope
bound
mov
inc
daa
push
test
std
mov
movsb
in
ljmp
push
dec
mov
fldt
shrb
cmp
das
outsl
jns
ljmp
insb
jg
cmp
jl
test
xchg
clc
xchg
jb
cmp
pop
pop
mov
jg
data16
testb
lahf
push
lcall
mov
or
mov
ljmp
mov
and
repz
and
ficoml
lock
pusha
leave
add
cltd
xorb
icebp
addr16
call
adc
jbe
dec
jno
sbb
sub
xor
cmp
xchg
cmpb
fwait
mov
xor
xchg
push
add
jg
inc
popf
lret
add
es
je
push
imul
xchg
inc
fsubr
js
jo
mov
fwait
mov
movsl
hlt
aas
push
xchg
insb
sub
mov
incl
insb
xor
insb
sub
loop
push
decl
dec
nop
jmp
sbb
pop
jle
repnz
jl
out
dec
pusha
xchg
int3
sahf
or
push
idivl
int3
ss
decl
adc
mov
mov
std
enter
mov
pop
pop
pop
decl
fidivl
sbb
cmp
jmp
jnp
cld
pop
and
pop
mov
gs
call
rorb
mov
stc
mov
test
jecxz
loop
xlat
and
sbb
push
dec
inc
lock
mov
inc
es
pop
pop
sub
in
sub
jg
aad
pop
xchg
mov
jg
lcall
jo
jbe
pop
sar
inc
mov
sbb
out
sbb
decl
mov
in
mov
mov
fistl
imul
xorl
inc
jg
mov
and
test
push
arpl
mov
adc
jmp
xorb
pop
fcomip
sbb
fidivrs
push
jmp
sete
pop
pop
pop
sub
mov
movsl
test
ret
fiadds
xchg
fcomip
loopne
mov
cs
cmp
mov
out
mov
push
shll
sar
lcall
stc
push
xchg
sti
or
lret
and
mov
lods
mov
pushf
je
int3
lcall
pop
repnz
mov
loope
push
out
mov
psrlq
insb
ljmp
xor
cmp
cltd
int3
sub
ret
sbb
sbbl
add
jno
mov
inc
loop
sarb
jnp
roll
pop
fists
push
push
pop
cmp
inc
xchg
jmp
sbb
cmpsl
movsb
lret
das
dec
sub
lret
cs
hlt
outsb
hlt
ja
ret
rcl
pop
test
call
cmpsl
mov
cmp
sub
das
lcall
xor
sub
incl
adc
subb
lods
arpl
cmp
or
ljmp
cmp
incl
mov
mov
ljmp
loope
test
push
icebp
fsubrl
call
stos
cmc
xchg
or
mov
in
js
out
in
push
mov
mov
ds
lcall
iret
inc
jmp
mov
fwait
test
mov
sti
mov
jns
cli
pop
loopne
or
data16
adc
cmp
xor
jmp
repnz
jg
scas
repnz
ja
aam
cld
insb
aam
fsubp
add
sbb
jnp
pushf
xchg
arpl
jmp
ds
and
xchg
or
leave
xchg
cwtl
mov
sbb
adc
incb
decl
dec
jmp
mov
xorb
pop
add
xor
incl
enter
cwtl
mov
inc
ds
xchg
lds
test
ret
call
or
add
xchg
xor
and
mov
xor
sbb
jne
clc
mov
pushl
push
and
stos
push
js
das
jmp
push
lds
rorl
cld
ljmp
cmp
pop
and
lret
jmp
call
stc
xchg
or
mov
sbb
inc
mov
fcompp
sarb
xchg
and
sbb
scas
ja
fwait
popf
push
inc
mov
popf
imul
cmp
das
mov
mov
sub
frndint
call
into
push
test
out
int3
iret
xor
pushl
pusha
xchg
lret
arpl
mov
incl
faddl
sahf
fs
in
mov
adc
fdiv
cltd
xchg
dec
cwtl
xchg
fildl
repnz
test
mov
dec
adc
jno
in
pop
rcr
call
sbb
ss
in
jg
fwait
jbe
jmp
idivb
lds
add
rcr
push
and
adc
lret
fldenv
out
jae
incl
aas
je
out
inc
xlat
inc
stc
push
loop
jnp
jbe
mov
push
push
call
push
mov
sar
popa
ret
dec
test
ret
xchg
test
xlat
push
mov
pop
mov
jno
loope
stc
loope
add
das
mov
jg
movsl
push
test
jno
mov
gs
xchg
mov
imul
fnstsw
jl
movsb
lds
jge
lcall
mov
inc
cmp
inc
push
mov
xchg
js
cld
fldcw
jle
ret
fistps
lret
imul
jg
into
jno
sar
and
cmpsb
insl
mov
ljmp
les
aam
popa
enter
add
jae
lahf
mov
pop
sub
mov
inc
cmp
pop
vpunpckhdq
ret
popf
sbb
pushf
cmpsl
mov
pop
dec
mov
test
jnp
sub
push
shll
leave
aas
ret
sbb
add
test
sub
or
aas
lcall
rclb
sub
or
cwtl
enter
inc
jmp
enter
xor
shrl
loopne
addr16
out
mov
icebp
mov
dec
xchg
xchg
mov
loopne
decl
xor
mov
cmp
scas
rclb
adc
jecxz
sbb
insl
es
xor
mov
add
mov
adc
add
pop
push
mov
xor
popa
or
adc
add
sub
popa
cmp
test
inc
push
arpl
fbld
fstpt
aam
dec
xor
dec
ljmp
ss
repnz
xchg
mov
fsub
rcrb
pop
push
jno
adc
ljmp
mov
and
push
incl
je
inc
ss
lahf
ficoms
add
jg
lcall
cmp
xor
push
jecxz
mov
xor
std
decl
adc
jno
lods
jl
xor
cmc
ljmp
jp
xchg
cmc
xchg
push
pop
xor
cli
call
inc
pop
sub
rorl
pusha
lds
cli
int3
in
adc
pop
mov
cs
decl
add
mov
xchg
push
out
lcall
bound
mov
push
xor
push
adc
ret
sub
mov
fwait
frstor
cmp
xor
inc
sbb
out
out
ret
rcrb
or
ljmp
and
add
int3
out
pop
stos
pushl
and
shlb
pop
sub
jno
pop
mov
pushl
push
cmc
cmp
push
jle
imul
mov
stc
push
scas
outsb
mov
jmp
push
sub
outsb
adc
push
and
mov
aad
aas
fwait
incl
test
xor
fsubrp
scas
leave
adc
roll
mov
out
inc
repz
inc
sti
in
in
jbe
inc
push
mov
ds
add
scas
or
and
ljmp
clc
mov
stos
test
pop
cli
das
mov
lock
push
into
sbb
xor
repnz
mov
ret
and
fistps
inc
jmp
mov
jg
add
mov
mov
cwtl
inc
sub
add
ss
scas
jmp
pop
mov
jmp
outsl
les
mov
rcll
add
int
inc
mov
or
xchg
rorl
xor
sar
stc
fists
jmp
in
lcall
dec
imulb
incl
testb
imul
xlat
mov
mov
push
sub
mov
jmp
movsb
out
mov
incl
pop
fdivr
shrb
hlt
sbb
dec
adcb
call
cld
dec
mov
les
mov
ljmp
mov
mov
xchg
push
test
dec
test
cmpsb
add
mov
ljmp
out
xchg
pop
out
add
and
add
dec
stos
sub
jno
mov
pushf
incl
inc
into
inc
or
jg
pop
test
subl
inc
xor
mov
mov
movsb
imul
clc
xor
push
addr16
mov
dec
xor
aam
inc
xchg
out
mull
dec
cmc
xor
xor
jns
add
popa
mov
xchg
ror
push
add
push
notl
lcall
rorb
fnstenv
pop
addr16
adc
pop
xchg
inc
adc
cmpsl
out
rol
and
ljmp
dec
loop
fcom
mov
add
decb
cmp
adc
inc
cld
out
mov
icebp
in
jo
insb
xchg
aam
or
adc
iret
outsb
adc
mov
jg
int
inc
ds
push
movsb
icebp
fbstp
popf
mov
rcll
adc
add
inc
fsubrl
test
xchg
jge
mov
inc
pop
mov
sarb
call
fwait
or
inc
push
sub
in
add
lods
iret
jle
add
mov
sar
add
inc
loope
ficomps
cmp
or
xchg
dec
jmp
cmp
sahf
mov
jno
aam
jecxz
cmp
lcall
shl
andb
adc
cmp
nop
lahf
jns
hlt
fistpll
xor
cmp
mov
lahf
push
scas
dec
or
sub
in
out
idiv
jle
orl
cli
pop
addb
fsubrl
stc
fcompl
or
xchg
mov
dec
ret
idivb
pop
data16
mov
push
sub
incl
mov
ud0
dec
insb
xlat
lret
call
fnstenv
jne
xor
mov
fsubrl
mov
fmulp
cwtl
mov
xchg
imul
loope
dec
repnz
jmp
cmp
add
sub
inc
pop
out
aaa
push
and
add
pop
ljmp
gs
jnp
stos
ficompl
or
sti
fmul
fisttps
inc
adc
loopne
gs
cmp
incl
or
xchg
ficompl
test
dec
xchg
mov
loop
lret
mov
das
cmpsb
push
cmp
mov
sbb
out
jae
pushf
fs
xchg
je
adc
shlb
cmc
jecxz
call
movsb
icebp
stos
inc
outsb
ds
loopne
cmp
mov
aas
pop
fwait
dec
mov
or
ret
int3
add
imul
push
sub
push
das
clc
aas
or
aas
aam
lret
std
aaa
stos
mov
lds
pushl
mov
cmp
pop
pop
mov
jge
adc
je
jle
out
pop
mov
push
mov
jg
call
leave
mov
call
push
into
sahf
ret
sub
outsl
mov
pushf
movsl
jbe
stos
mul
lahf
dec
aad
lahf
pop
jmp
inc
xchg
dec
jmp
sti
sbb
mov
popa
sub
iret
loop
leave
cmp
leave
or
lret
cmp
mov
pop
icebp
dec
push
pop
movsb
lret
ficoml
dec
jmp
mov
inc
arpl
sub
notl
mov
jp
sub
aas
call
inc
xor
sub
lahf
sub
test
cwtl
jbe
jb
adc
movsb
xchg
fwait
pop
sahf
and
pop
loopne
sarb
rolb
xchg
iret
xchg
xor
jno
fnstcw
scas
sbb
jmp
inc
mov
sub
or
dec
ds
pop
stc
lods
push
arpl
inc
or
cli
int3
ret
ljmp
popf
test
js
pop
out
cmc
shll
nop
cld
xchg
testb
adc
pushl
loopne,pt
sub
mov
dec
pop
add
sti
decb
inc
std
lcall
cmp
outsl
enter
jg
mov
push
scas
xchg
inc
mov
push
xchg
iret
and
sarl
inc
mov
jge
or
imul
in
mov
lret
out
push
ficomps
pop
pop
add
inc
icebp
lcall
mov
in
adcb
test
enter
ret
sbb
ljmp
inc
mov
movsl
mov
in
mov
das
aas
mov
jp
cli
mov
shrb
stos
pushf
rorl
push
and
imul
push
and
inc
std
ja
cli
ret
push
andb
repnz
aaa
js
pop
mov
pushl
nop
or
cmp
push
adc
push
faddl
icebp
mov
jmp
and
leave
loope
fadd
out
mov
xchg
dec
mov
pop
hlt
cmp
popf
and
xor
or
adc
repz
ljmp
mov
pop
cmp
negl
cmc
push
imul
xchg
test
test
std
sahf
push
pusha
stos
inc
pop
or
call
popf
cs
fcomps
mov
lea
call
test
inc
sub
push
dec
not
dec
popa
incl
xchg
xor
fisubrs
xchg
lock
enter
dec
lds
ret
lcall
cmc
jmp
popf
out
cmp
xchg
push
lds
or
test
push
lds
ljmp
jl
cmc
pop
les
mov
xor
enter
sub
rcrl
cmp
jmp
adc
addr16
xlat
fisubrl
jle
sub
add
call
and
mov
sub
jge
xchg
stos
jbe
lds
outsl
pop
cmc
pop
push
lss
mov
loope
sbb
xorb
ljmp
in
cmpsl
sub
loop
push
pop
jg
jnp
fldln2
fdivl
rolb
cltd
adc
or
decl
fbstp
sti
adc
mov
inc
add
jns
sbb
mov
or
mov
incl
cltd
sbb
add
mov
xor
iret
repnz
mov
in
mov
das
xchg
std
push
repz
stos
popa
loope
xor
pushf
xchg
ss
addb
clc
decl
pop
inc
mov
mov
mulps
and
add
xor
push
push
mov
fwait
and
ljmp
je
dec
pop
lret
mov
sub
out
sub
sub
mov
stos
out
decl
sub
lea
leave
add
into
scas
sahf
es
lcall
add
sbbb
xor
decl
xchg
hlt
dec
cmpsb
cwtl
mov
lea
sub
fsubl
filds
inc
add
cmc
pop
jmp
idiv
pop
cmpsb
cmpsl
pop
movsb
mov
lods
icebp
repnz
cs
pop
out
cli
mov
repnz
mov
sub
stc
je
fwait
fwait
call
ss
mov
sub
jmp
xchg
mov
or
inc
sub
pop
fstpt
loopne
add
movsb
cmp
ljmp
dec
mov
push
lcall
out
arpl
pop
lods
dec
into
or
fsubl
sub
cmpsb
data16
cmp
stc
push
sub
sub
incl
cmpsl
ljmp
push
jae
adc
in
cmp
aam
jno
call
loopne
pop
ja
mov
and
push
scas
sbb
lcall
lahf
sbb
jb
shlb
insb
cli
sbbb
lcall
insb
shrl
dec
or
int
adc
fwait
or
mov
in
mov
xchg
xor
cmpsl
addl
daa
mov
mov
insl
imul
jns
je
adc
jmp
dec
adc
ficompl
pop
or
add
cld
in
outsl
lret
mov
pop
cld
push
and
jno
mov
inc
lea
jmp
jg
std
mov
cmp
xor
xchg
jbe
cltd
popa
fwait
cmp
xor
test
jae
dec
jmp
nop
or
inc
jmp
arpl
sbb
xchg
mov
sti
into
cmp
outsl
adc
lods
movsb
lret
xor
jle
pushl
sahf
enter
add
fiaddl
aaa
sti
pop
lods
jns
adc
lcall
dec
mov
incl
jg
imul
cwtl
push
int
stc
int3
mov
incb
std
mov
data16
mov
dec
jne
cmp
insb
xlat
dec
les
xchg
or
adc
and
fbld
push
push
mov
rcrl
in
xor
sbb
xor
xor
stc
sbb
or
add
cmp
das
mov
enter
lcall
dec
push
orb
and
out
incl
ffreep
xchg
aas
repnz
fsubrs
pop
ljmp
jge
rol
pop
mov
push
cmc
jns
lods
fldl2e
addr16
pop
addb
jmp
jle
mov
xchg
sub
aas
scas
andb
cmp
mov
out
mov
jg
call
mov
push
div
test
sub
jle
stc
inc
aam
pushl
inc
outsb
int
mov
clc
add
cmp
fwait
adc
or
lds
loopne
jle
jle
cmp
outsl
xchg
sbb
push
scas
sub
mov
inc
das
aaa
push
aas
mov
lcall
add
negb
scas
outsl
jecxz
cmpsl
pop
and
insl
xor
lods
or
dec
or
loope
jg
cmp
shll
and
lahf
cld
mov
push
sbb
mov
inc
repnz
dec
lock
stos
mov
outsl
fdiv
ror
adc
pop
and
lock
or
sub
stos
push
incl
mov
xchg
movsl
cmc
test
xor
sub
imul
scas
jne
shll
push
cmp
rolb
cwtl
call
ljmp
stc
dec
and
jnp
push
testb
pop
insb
lahf
shlb
in
mov
ss
or
dec
sub
push
xchg
dec
xor
mov
mov
or
sbb
cwtl
pop
jle
mov
sbb
sub
adc
pop
xchg
hlt
outsl
dec
es
mov
testl
sub
adc
lods
scas
or
jmp
xor
sti
add
inc
cmpsb
bound
loop
sbb
sbb
cmpb
dec
cmpsb
jo
jns
inc
aas
mov
cmp
fwait
xor
fcoms
fmull
ljmp
jmp
enter
jge
push
jp
xchg
xchg
mov
xor
stos
mov
xor
sbb
dec
lcall
push
into
and
cmp
xchg
clc
inc
mov
pop
cmp
inc
aaa
dec
das
xchg
pop
decl
frstor
aas
mov
cmpb
mov
and
push
push
xor
add
push
pop
push
cs
popa
ja
sub
popa
pop
mov
lret
cmp
or
jge
loopne
insl
adc
sub
cmpsl
outsb
aas
dec
stos
das
out
sub
and
sub
insl
mov
mov
dec
stos
cmpsl
xor
and
movsl
lods
ljmp
xchg
inc
nop
aaa
pop
mov
and
jb
int3
dec
ljmp
fwait
cltd
sarl
mov
negb
push
movsl
fwait
movsb
cwtl
fcoms
pop
fistl
xor
rorb
in
sarb
aas
imull
lahf
outsl
xchg
push
in
mov
imul
add
dec
ds
call
ja
sub
cmpsb
push
jle
or
das
xor
xchg
into
repz
jecxz
push
std
sbb
mov
jo
or
mov
fisubrs
aam
cld
sbb
fidivs
xchg
fildl
inc
aam
jg
outsb
mov
test
mov
and
movsl
bnd
std
lcall
sar
pusha
pusha
push
xor
and
leave
jb
xchg
lret
add
mov
or
push
call
loopne
or
sti
mov
cltd
aaa
iret
lea
push
js
mov
fdivrl
mov
push
dec
adc
ljmp
and
cli
bound
pop
and
popf
in
sar
xor
ljmp
incl
mov
add
stos
lods
adc
pop
loop
or
aaa
sbb
add
lcall
push
mov
inc
cwtl
mov
xor
aam
and
in
fidivrs
pop
sar
pushl
mov
and
arpl
xor
pushl
jmp
xchg
mov
mov
mov
sarb
add
scas
lcall
and
sub
repnz
cli
fdivl
mov
mov
pushf
js
sub
mov
sub
push
jns
stc
mov
xchg
bound
mov
cmp
sbb
ljmp
ss
add
xor
mov
cli
push
inc
or
pop
bound
pop
dec
dec
push
mov
cmp
es
ljmp
insb
insb
cld
mov
jge
mov
sub
push
out
ja
mov
dec
stos
shlb
stos
lcall
ret
and
cmpl
pop
inc
movsb
dec
jae
pop
aad
push
mov
xor
adc
pusha
outsb
pop
cmp
cmp
push
fstpl
dec
sub
push
xchg
stc
ljmp
mov
adcb
mov
test
or
dec
dec
xor
mov
lcall
sbbl
mov
ja
mov
into
add
dec
cmp
mov
rolb
and
adc
call
ljmp
stos
sub
lahf
out
push
in
dec
and
sbb
xchg
adc
fldcw
dec
adc
push
mov
data16
hlt
aas
mov
out
frstor
mov
xchg
fadds
in
mov
call
xchg
loope
or
adc
imul
jae
jmp
std
mov
inc
push
dec
insb
inc
loope
mov
mov
dec
or
add
push
jnp
int3
pop
or
adc
loope
aas
inc
sbb
lcall
outsb
add
sub
sub
fildll
je
add
pushl
and
jne
cwtl
mov
dec
pusha
sti
fmulp
gs
cwtl
mov
mov
daa
mov
dec
inc
jo
out
hlt
lods
jg
xor
fisubrs
into
clc
and
add
es
sbb
jae
xchg
pop
or
decl
mov
mov
dec
inc
xchg
psadbw
push
lret
test
xor
imul
dec
cwtl
jmp
stc
pop
out
sub
dec
jae
loope
and
jmp
stos
arpl
ljmp
and
stos
mov
sub
mov
imul
test
pushl
sub
es
xchg
aaa
xchg
inc
daa
inc
lret
clc
dec
xlat
test
fisubrs
xchg
push
leave
lcall
xchg
push
orb
xchg
pop
in
jbe
mov
pop
fildl
clc
sub
iret
push
add
jb
stc
adc
or
out
imul
pop
icebp
lcall
repnz
xchg
lods
sbb
add
cmp
scas
xor
mov
jb
sahf
add
fs
sahf
push
les
popl
mov
lcall
lret
pop
inc
ljmp
pop
popf
fcomip
jg
mov
mov
gs
inc
mov
cmp
daa
or
nop
xor
das
ret
dec
test
mov
call
icebp
sub
out
std
mov
push
ja
pop
jno
bound
xor
mov
pop
xlat
add
lods
jbe
pop
xor
push
push
insl
xchg
mov
or
cli
mov
sbb
filds
dec
aad
push
inc
aaa
dec
int
pop
imul
lods
fists
dec
mov
repz
fcomip
imul
push
ret
pop
and
add
cmp
inc
pop
fisttpll
xor
push
mov
cld
pop
stos
in
push
les
aad
sbb
lcall
sub
mov
loopne
mov
lret
mov
jg
mov
in
es
jmp
sbb
adc
test
cmp
xchg
pop
cmp
and
cmp
pop
inc
dec
and
or
push
sbb
jge
les
inc
mov
lcall
cld
mov
push
xor
leave
inc
cmp
int
or
imul
add
out
mov
push
ljmp
decl
jl
cli
pushf
imul
in
inc
loop
incl
clc
call
inc
out
ret
adc
psubq
lods
test
jns
hlt
jge
sbb
psubq
cmp
add
cld
cmp
cmp
lcall
icebp
cs
jp
sarl
les
loopne
shrb
int
insb
cwtl
cs
ds
sub
pop
je
mov
into
mov
dec
lret
imul
add
xchg
sar
and
and
inc
popa
pop
push
mov
test
xchg
xchg
sub
std
push
mov
mov
sbb
sbb
inc
push
xchg
fcoml
dec
cmp
andb
testl
popf
adc
imul
jecxz
inc
xor
loope
call
rolb
dec
call
pop
add
pusha
std
adc
ja
xor
sti
test
xor
pop
cwtl
and
incl
push
push
mov
sbb
xor
andl
mov
lcall
sub
in
inc
lret
pop
pop
inc
jl
push
mov
inc
adc
mov
jecxz
adc
outsb
inc
push
cs
enter
jg
outsl
push
jns
cmpsl
divl
and
lcall
aas
aam
push
xchg
ljmp
int3
rcl
push
xchg
cmpsb
inc
mov
jg
daa
popl
pop
loopne
jb
iret
jmp
sub
les
cmp
mov
fisttpl
mov
cmp
xchg
lcall
adc
lret
sub
outsl
incl
sbb
lea
jno
sub
inc
bound
cmpsb
out
ljmp
shll
imul
loope
test
pushl
and
aaa
pop
jno
js
adc
call
xlat
push
sar
lcall
push
mov
add
pushf
inc
lret
dec
add
nop
xchg
ss
mov
xchg
in
jle
mov
mov
bswap
outsl
test
mov
lret
jg
add
lock
ljmp
mov
jle
xchg
call
hlt
incl
aaa
mov
call
jno
push
in
sub
jp
push
ss
mov
sub
pushl
sub
mov
fdivrp
js
arpl
jmp
fmul
sub
mov
mov
pop
gs
fdivrp
fdivl
das
clc
decl
seta
lods
cld
xor
out
lahf
push
cltd
sub
mov
test
and
add
les
pop
adc
sub
loope
inc
pop
insb
jne
iret
adc
cs
mov
add
cmp
sbb
imul
cmp
adc
lods
sub
jg
jg
gs
and
mov
popf
inc
daa
jle
mov
sbb
fildl
in
xor
lds
pop
inc
inc
aaa
enter
or
pushl
in
test
scas
lret
sub
stos
xor
mov
adc
push
and
adc
adc
decl
test
add
jb
ljmp
addr16
inc
stc
jge
outsb
add
fiaddl
loop
xchg
rorb
jo
mov
addr16
cmp
mov
arpl
pop
fmull
xor
pushf
mov
pushl
enter
fiadds
inc
movsb
test
push
into
add
fmul
mov
pop
inc
rcr
in
gs
outsb
jl
add
lcall
mov
mov
jecxz
push
sub
and
or
lock
imul
repz
add
push
cld
inc
iret
loopne
inc
rcll
jg
out
bound
je
add
shll
and
sbb
pushl
lahf
sbb
push
addr16
add
mov
push
add
adc
ja
cld
les
in
lods
cmpb
xchg
jge
jl
decl
mov
pop
outsl
inc
daa
pop
dec
mov
out
pop
test
insl
sub
inc
jecxz
lcall
lods
mov
in
pop
or
jno
nop
jecxz
adc
ljmp
repnz
inc
push
xchg
cmp
pop
movsl
fsqrt
or
add
adc
push
or
psubq
lea
jae
pop
mov
or
decl
jns
jge
inc
sbb
cmpsl
arpl
ffreep
std
dec
jecxz
gs
lcall
mov
mov
mov
fwait
cmp
incl
push
add
inc
cmpsb
loop
xor
cmpsl
lahf
xchg
xorl
inc
jge
sbb
daa
sub
add
in
mov
shlb
jns
pop
addr16
jb
fwait
mov
xor
fldl
cmp
mov
ret
push
decl
int
pop
mov
lods
icebp
test
cmp
cmpsb
xchg
sub
or
in
nop
add
dec
fmul
mov
push
iret
cld
push
mov
pop
fidivl
xorb
jo
pushl
push
xor
outsb
cwtl
testb
imul
push
pushl
cld
xor
push
shll
out
jo
mov
inc
loope
arpl
add
mov
jecxz
incl
and
cmp
aaa
inc
iret
dec
inc
jmp
inc
test
iret
fldcw
insl
aaa
aam
jl
push
das
xchg
jl
daa
mov
incl
mov
sbb
xor
stos
loop
xchg
xor
nop
jmp
or
cmc
xlat
mov
mov
push
push
cmp
aad
xlat
call
dec
xor
xlat
out
lret
inc
lods
xlat
or
sub
mov
je
cmp
cmpsl
or
xchg
sub
cmp
sub
mov
cmpl
cmp
subb
mov
pusha
fcompl
icebp
lea
imul
mov
pop
push
insb
daa
jnp
or
jmp
out
scas
jl
fldl
das
es
out
stos
mov
pop
mov
cmp
adc
mov
ljmp
popa
lods
xchg
adc
arpl
pop
bound
pop
pushl
cld
xchg
adc
stos
adc
pop
mov
or
mov
lcall
dec
addr16
imul
cmc
imul
jb
out
lcall
inc
fwait
outsb
mov
and
xchg
or
incl
add
aad
mov
dec
dec
add
mov
pushl
lds
lods
gs
mov
and
and
pop
xchg
imul
call
mov
imul
cmpsb
add
jo
dec
jb
sbb
jmp
push
leave
pop
ds
in
rcll
jg
hlt
and
mov
mov
mov
and
add
jbe
inc
adc
cli
add
mov
scas
mov
adc
inc
in
aas
in
mov
int
in
test
ljmp
hlt
pop
or
adc
das
mov
dec
or
pop
lret
dec
daa
stos
orb
lahf
cmp
cmpsl
data16
inc
xor
test
incl
sbb
push
xor
sub
inc
iret
inc
and
push
int
xchg
mov
incl
lds
mov
popa
mov
adcb
push
add
push
stc
jnp
frstor
pop
dec
mov
mov
mov
mov
add
inc
pop
scas
iret
enter
into
popf
pop
xchg
mov
dec
aas
adc
popa
sub
cli
ja
mov
pop
mov
pop
fdivrl
adc
outsl
cltd
jg
mov
jl
idivb
out
sbb
jae
iret
adc
lods
outsl
sbb
decl
icebp
incl
addr16
fucomp
push
lahf
mov
test
lcall
adc
or
mov
lret
jbe
jns
xchg
xchg
ljmp
jg
cld
cltd
leave
lret
or
sti
mov
or
and
sub
sbb
sbb
mov
push
pop
or
adc
push
clc
ss
push
incl
sbb
scas
sub
sub
pop
hlt
adc
mov
cmp
pop
insb
mov
sbb
ljmp
addps
jne
gs
sub
jle
insl
mov
xchg
pop
inc
xchg
pusha
aas
cmp
aam
test
dec
incl
xor
dec
jmp
lret
adc
xlat
jo
inc
lock
jmp
mov
add
jg
jg
fdivrl
mov
dec
and
jbe
adc
repz
ljmp
fildl
sahf
adcl
inc
ja
inc
inc
pop
pop
sahf
ds
in
xchg
jmp
clc
cmp
mov
inc
xchg
mov
dec
cmp
jmp
ret
xchg
aas
lret
jg
add
pop
mov
push
xchg
push
push
test
out
sub
fimull
addr16
pop
ljmp
mov
push
filds
push
lret
push
sbb
push
scas
test
push
ficompl
arpl
loop
and
cmpsl
js
mov
enter
call
pushl
fisubl
out
mov
fldl
sub
andl
loop
lcall
jo
cmpsl
les
cmp
lcall
ljmp
pop
lea
lods
into
sbb
pop
sbb
cmpsb
jbe
ret
jbe
cld
pushl
das
fimull
sub
insl
dec
clc
mov
cld
aaa
lret
cld
out
movsb
popa
leave
cmp
or
jl
test
scas
jl
mov
adc
ljmp
mov
scas
sahf
rcll
mov
nopl
inc
sub
call
or
ljmp
pop
xchg
add
outsl
xlat
jmp
jg
cs
cwtl
jne
push
jmp
movsl
cmpl
jg
jle
jge
mov
mov
cmp
popa
repz
call
mov
cmp
mov
adc
jmp
inc
int
adc
das
in
jo
jb
mull
dec
loop
sub
sub
xchg
lds
inc
test
push
aas
aam
insl
lret
or
in
outsl
orl
dec
lret
incl
sti
inc
shrb
mov
sub
aaa
adc
pushf
in
lea
xchg
sbb
incl
lea
inc
ja
sar
mov
ffreep
lahf
pop
mov
cmp
push
dec
sbb
decl
fbld
mov
xor
rolb
dec
mov
jne
out
outsl
notb
lret
pop
pop
push
dec
test
sti
ja
mov
insl
lcall
dec
hlt
cmc
daa
mov
jg
subl
push
decb
rol
into
mov
inc
test
cmp
cmpsl
and
ret
sbb
out
test
mov
popa
pop
das
icebp
dec
xchg
and
psubq
push
pop
xchg
sbb
test
ljmp
jmp
or
loope
xchg
cltd
pop
sub
push
aam
repz
testl
sbb
adc
shl
or
xchg
adc
fisttpll
xchg
pop
rol
jbe
add
rorb
and
ss
cmpsw
adc
add
add
lcall
push
xchg
ret
sti
push
repz
out
out
lret
push
xor
lcall
inc
loopne
mov
xor
out
bound
dec
aas
decl
fmul
mov
pop
and
jge
lret
dec
push
xchg
call
push
mov
push
add
xlat
push
and
xchg
outsl
icebp
test
int
mov
stos
add
inc
mov
sbb
in
mov
sbb
nop
aad
sbb
jge
cmp
aaa
fbld
ficoml
dec
jne
lcall
push
cli
add
mov
add
pop
sbbb
cs
push
push
jecxz
mov
pop
lods
inc
inc
iret
jg
fidivl
out
adc
jp
push
nop
pop
ud0
ss
pop
movsb
mov
jne
aad
adc
xchg
add
fidivrs
pop
and
push
repnz
popa
insl
sub
xchg
test
in
repz
decl
mov
addr16
daa
pop
dec
and
loop
pushf
out
pop
cmp
cmpsl
sub
pop
std
stc
pusha
jb
sahf
push
mov
xor
in
adc
ljmp
mov
dec
popf
pop
shll
movsb
out
xlat
cmp
mov
mov
or
adc
ja
mov
cmp
outsb
imul
addr16
ja
sar
lcall
loope
sub
idivl
push
push
stos
shrl
xor
sbb
dec
and
adc
call
sub
cmp
aam
hlt
cltd
jbe
les
loope
adc
sub
out
std
decl
jno
nop
add
cwtl
fbld
addr16
and
mov
mov
or
addl
clc
xchg
dec
inc
clc
pushl
cltd
mov
push
rcrl
popf
adc
loope
fwait
out
fadd
lods
test
xor
jb
mov
adc
call
cmp
lret
aas
push
dec
xchg
or
jmp
stos
cmp
bound
jmp
scas
xchg
std
and
xor
insb
pop
sbb
mov
decl
lods
add
sar
jmp
rolb
inc
out
aam
jno
cmp
jmp
js
mov
nop
adc
lds
scas
in
pusha
push
xor
out
push
dec
shrl
add
pop
push
pop
mov
les
aas
leave
inc
mov
xor
loopne
icebp
mov
jns
xchg
and
sbb
les
inc
inc
sub
cltd
ljmp
outsl
js,pn
push
pop
testl
out
imul
cmpsb
mov
adc
mov
arpl
mov
cmp
daa
ljmp
push
cli
shlb
aas
iret
or
jg
mov
push
pop
outsb
push
sbb
sub
xchg
int
mov
lock
sar
cli
pop
jecxz
and
imul
std
pop
inc
jns
inc
push
rolb
xchg
xor
push
ja
movsb
cmp
iret
jmp
jmp
xor
xor
loop
ss
std
incl
dec
sbb
lahf
pop
in
sbb
cmp
aad
sbbb
mov
sbb
repnz
jg
ret
xchg
mov
loopne
inc
ljmp
mov
inc
lds
leave
mov
fucomp
dec
mov
rorl
xchg
sbb
xchg
std
jl
inc
add
mov
loope
or
or
in
aas
or
jnp
push
and
pop
mov
cmc
gs
int
sub
repnz
in
mov
mov
and
scas
scas
mov
jbe
mov
inc
sbb
in
jg
and
inc
sbb
les
and
inc
jmp
pop
lods
cmp
jg
out
push
cmp
imul
pop
in
ds
dec
or
xchg
incb
push
push
mov
repnz
negb
data16
cmp
shrl
outsl
sbb
psubusb
cmpsb
sbb
sub
pop
fcoml
fisttps
xchg
movq
test
mov
das
test
xlat
xor
inc
incb
and
jno
fbstp
clc
mov
lods
cmpsl
lret
pop
rcrl
jge
cmc
hlt
or
push
pslld
in
insl
addr16
add
sub
arpl
xchg
lds
scas
jl
incl
loopne
xchg
cmpsl
sbb
xor
daa
sarl
adc
pop
pop
imul
cmpsb
jnp
test
aas
xor
fsts
or
outsl
ret
jge
pop
cs
pop
stc
xcrypt-ofb
cmpsl
ljmp
cmp
sar
inc
incb
movsl
lcall
push
mov
jg
jmp
mov
hlt
imul
cmp
cld
pop
pop
in
enter
rorl
insl
push
test
pslld
in
imul
call
fisubl
mov
mov
jae
mov
nop
xchg
jne
push
push
push
mov
mov
mov
out
dec
ljmp
pusha
ljmp
ret
cmpsb
cltd
fwait
xchg
decl
or
or
inc
bound
leave
add
push
test
cli
or
inc
je
push
stc
inc
icebp
push
sahf
cltd
adc
out
pusha
ja
aas
mov
loope
icebp
mov
in
push
jo
pushl
push
aam
pop
jmp
mov
and
lcall
jb
mov
lods
leave
dec
jne
in
or
ret
mov
inc
fwait
mov
call
outsb
lods
jns
test
fs
mov
out
xchg
loop
mov
fstl
outsl
test
cld
dec
mov
loop
jno
insb
aad
aaa
mov
push
cmp
xor
pop
jb
jmp
sub
inc
icebp
icebp
pop
decl
xchg
fstp
jbe
bound
sbb
vphaddbd
dec
jmp
pushl
pop
push
xchg
xor
cli
iret
push
mov
inc
sub
insl
mov
decl
and
xchg
inc
repnz
inc
push
push
dec
and
cld
lds
mov
fadds
cmp
movsl
and
ljmp
andl
mov
sbb
mov
sahf
pop
aam
or
add
popa
jmp
push
cmp
inc
dec
pop
jle
or
daa
ficompl
jle
jmp
pushf
push
pop
into
lcall
fcmovne
lcall
jp
pop
dec
push
xchg
shll
and
or
cmpsb
mov
mov
stc
mov
fidivs
scas
add
mov
aas
aas
es
popa
call
or
and
cmp
push
rolb
add
cmc
mov
jg
out
mov
lahf
std
leave
mov
push
fistpll
ret
sbbb
fisttps
push
loope
sub
dec
int3
roll
cmpsb
lcall
jnp
out
lcall
mov
mov
jns
dec
add
inc
pop
or
lret
xchg
scas
xchg
and
inc
lock
xor
dec
pop
mov
icebp
pop
cmc
mov
and
sbb
jno
pop
call
enter
mov
outsl
sbb
insb
lret
push
pop
dec
cmp
mov
jl
push
les
or
or
filds
lahf
cwtl
xor
pop
and
xchg
xchg
cltd
vmovdqa32
pushl
mov
pop
adc
xchg
aaa
cmc
lock
cli
jecxz
jae
mov
inc
ss
cs
xorb
jo
scas
xchg
test
jge
shrl
mov
popa
lcall
push
cmpb
jbe
es
xchg
test
cmpl
xchg
pop
enter
xchg
cmp
decl
sub
or
iret
dec
mov
aas
daa
ja
leave
sbb
call
int3
sub
dec
and
adc
sub
mov
mov
call
and
and
mov
add
lcall
lret
cmovno
aas
in
cld
inc
jmp
or
jmp
aas
int3
out
enter
adc
iret
mov
call
push
aad
inc
push
fidivs
popf
push
mov
dec
inc
jnp
out
sbb
jne
mov
jb
or
dec
dec
lea
and
roll
pop
push
ljmp
shlb
pop
pop
dec
test
and
add
leave
icebp
scas
repnz
iret
dec
gs
pop
repnz
aas
jl
pop
lods
out
imul
aaa
xchg
dec
cmpsb
add
aaa
das
jne
movsb
lcall
in
aam
ljmp
adc
mov
xchg
cli
pop
retw
push
jge
jle
cmpsb
push
or
sbb
jecxz
je
jno
testl
jg
pusha
push
addr16
in
rcrl
sbb
inc
lock
mov
call
xchg
pop
hlt
or
in
mov
int3
ds
mov
sahf
out
or
jmp
mov
adc
jecxz
cmp
shll
movb
ljmp
neg
icebp
jno
jge
cltd
add
int
inc
pop
ret
sub
or
sub
stos
mov
xor
mov
fwait
xchg
hlt
aad
or
dec
push
cmp
nop
sub
jmp
mov
dec
pushf
shlb
push
imul
xor
cmpsl
test
addr16
divl
mov
popa
jmp
push
pop
xchg
cmp
mov
idivb
mov
mov
call
adcb
add
cwtl
ja
pop
xchg
push
movsb
push
cmp
pop
push
sbb
sar
ja
push
fsubrs
push
mov
push
mov
mov
fidivrl
xchg
mov
lods
test
pop
aad
subb
sarb
jle
jbe
hlt
ret
mov
jbe
hlt
xor
pop
sbb
aaa
or
inc
cmpsl
cmp
push
cmp
push
ret
push
data16
jbe
insl
or
orb
xchg
dec
pop
or
inc
loop
mov
push
pop
lods
jmp
loop
icebp
movl
out
inc
jae
scas
call
pop
or
js
into
or
jmp
iret
call
cltd
sub
jmp
push
js
fmuls
nop
jne
lahf
jmp
call
std
xchg
push
inc
sbb
aas
hlt
push
add
incl
xchg
insl
imulb
jae
out
xlat
js
push
incl
jl
dec
inc
jae
scas
mov
jb
out
push
adc
sbb
stos
cli
mov
and
dec
ret
xor
jo
cld
daa
sub
movsb
push
aad
xchg
scas
push
lds
incl
add
jb
insb
inc
aam
pop
push
lret
ds
adc
data16
push
mov
call
xchg
aad
and
loop
push
xor
xchg
jo
jg
stos
pop
jne
fmul
xchg
mov
lret
pop
sbb
in
aad
and
add
lea
cwtl
xor
jbe
ljmp
jmp
or
sbb
mov
push
ja
outsl
nop
divl
rorb
cld
jmp
pop
push
out
in
ret
jnp
inc
or
dec
adc
add
add
and
jb
mov
jg
or
out
lret
lcall
in
out
imul
mov
insb
cmpsl
and
icebp
lahf
enter
std
insl
lods
mov
incb
sub
pop
ja
test
sub
mov
rcrl
jmp
rorl
cmpb
pop
or
and
mov
cwtl
outsl
xchg
cwtl
nop
xlat
repz
ret
incl
repz
adc
mov
mov
test
inc
aas
mov
adc
add
push
lret
jmp
and
cmp
adcb
xor
loop
or
testl
repnz
pop
movsb
push
xlat
sbb
int3
cli
imul
fnstsw
dec
mov
and
dec
addl
inc
cli
jecxz
mov
gs
sbb
jno
cmpsl
shll
mov
mov
arpl
and
add
imul
ficoml
pop
pop
decl
mov
pop
cmp
pop
inc
pop
add
pop
ja
ret
decl
sbb
push
cmpl
fistl
or
int
xlat
push
loope
xchg
outsl
push
cmpsl
sub
lret
enter
xchg
incl
pop
sub
mov
mov
mov
mov
mov
sbb
adc
les
mov
das
mov
xchg
call
jns
out
add
or
sahf
sbb
dec
push
push
mov
cld
mov
lcall
nop
xchg
into
and
nop
push
mov
xchg
loop
mov
push
loop
ja
lcall
pop
mov
lods
xor
adc
add
sbb
xchg
mov
leave
and
add
lcall
in
push
sbb
xor
cmpsl
xchg
and
mov
stc
imul
rcrb
rorb
std
addl
adc
testb
ja
jne
or
push
inc
out
aam
dec
push
sub
xorl
mulps
jg
loop
je
inc
cmp
lods
outsb
ficoml
sub
add
mov
sub
int
shll
sub
mov
sbb
lea
ja
jns
inc
sar
jmp
mov
or
bound
ror
or
inc
mov
repz
sbb
or
pushl
xchg
mov
insl
sbb
pop
mov
mov
pushf
cmc
je
sub
filds
shrb
aad
int
xor
push
mov
gs
fisttps
std
mov
push
insb
add
dec
xchg
enter
fsts
dec
cs
jg
and
pop
push
xchg
stc
sub
xor
inc
jne
cld
call
push
jp
jne
std
pop
out
scas
test
in
mov
add
cmp
lcall
cltd
addr16
mov
packuswb
sbb
incl
jmp
add
push
add
js
or
jg
or
push
leave
add
fbld
pop
in
roll
xor
stos
fsubs
dec
mov
daa
ja
dec
mov
std
adc
test
adc
arpl
lods
ja
mov
adc
sbb
pop
lea
test
lea
jo
pusha
sbb
jb
int
sub
call
mov
cmp
pop
iret
pop
ds
push
jmp
sub
add
xchg
rolb
addr16
jle
ds
fnstenvs
lcall
rclb
sub
jns
scas
pusha
add
pop
xchg
pop
add
clc
ljmp
es
sub
inc
and
aad
popf
jmp
fcoml
dec
or
mov
mov
fisubl
and
cmp
cmp
leave
ljmp
xor
and
mov
cmp
sbb
push
dec
ret
mov
les
push
push
lods
dec
gs
add
mov
lcall
movsb
lret
adc
mov
stos
lock
popa
jmp
popw
sbb
push
sete
je
call
rcll
dec
and
mov
cmpsb
jb
sbb
mov
jmp
daa
and
cmp
push
clc
popa
jbe
ss
mov
std
stos
negb
loope
mov
push
push
mov
ja
sar
pop
movsb
ljmp
rcrl
jmp
icebp
fmuls
xor
dec
push
sub
xor
dec
popa
mov
out
clc
out
aaa
xor
sahf
xlat
loop
pop
punpckhdq
adc
sbb
neg
xchg
and
pushl
inc
je
frndint
out
cmp
xor
cmpsl
mov
popf
mov
scas
fwait
movsl
cli
sbb
in
lock
aaa
call
insb
mov
inc
mov
push
daa
mov
or
inc
test
ljmp
xor
cld
push
in
aam
xlat
out
jo
jl
mov
or
push
cmc
hlt
lds
cmp
push
jle
or
sbb
jmp
in
int3
dec
mov
inc
adc
xorl
fcomip
test
addr16
andl
dec
lds
stos
pop
push
mov
xor
call
sbb
pop
adcb
mov
sbb
rorb
xchg
mov
adc
xchg
lock
jbe
mov
push
decb
in
into
mov
xchg
das
cli
pop
hlt
cld
inc
jp
sub
dec
aad
ds
frstor
lcall
rcrl
jbe
clc
xlat
adc
mul
mov
mov
xchg
xor
lcall
bound
repz
shrb
dec
mov
sbb
add
add
rcll
cmp
pop
pushl
dec
push
cmp
test
mov
mov
movsl
imul
clc
mov
mov
out
dec
pop
jle
push
or
adcb
mov
pop
rcl
xor
jno
or
sub
jbe
inc
popf
orb
push
clc
cmp
push
bound
mov
push
xor
push
psrld
sbb
xchg
mov
outsb
int
pop
pop
jb
shl
mov
leave
pushl
cli
in
std
add
jecxz
je
repz
jnp
jmp
sub
mov
jmp
sti
mov
lds
xorb
int3
shll
gs
incl
repnz
iret
pop
or
mov
jg
rclb
xchg
enter
rcl
mov
mov
decl
adc
test
aas
inc
or
les
mov
jg
push
hlt
lret
and
popf
cmc
pop
pop
cmp
scas
xchg
lahf
hlt
decl
lcall
inc
int
xchg
or
fistpll
add
lcall
loopne
dec
mov
add
ljmp
push
and
cmp
mov
sub
insl
stc
pop
inc
pushl
add
filds
sub
repz
shrb
out
in
lods
xor
scas
or
sbb
xor
loopne
mov
ljmp
mov
ror
orb
mov
loopne
push
je
jle
pusha
or
pop
fldenv
mov
aaa
lahf
dec
dec
or
leave
data16
call
add
test
test
sub
mov
mov
or
mov
xchg
cmc
sub
ljmp
pop
dec
rclb
pop
nop
loopne
push
popf
leave
scas
push
xchg
pop
movsl
stc
repnz
lret
orb
clc
jmp
cs
inc
jp
sbb
cmpsl
fimull
mov
movsl
orb
std
sub
jecxz
fistps
cmp
xchg
pop
jnp
lds
lds
outsb
lods
push
aam
decl
inc
idivb
push
mov
imul
movl
mov
add
nop
or
xor
sub
mov
outsl
inc
aaa
sbb
notb
jno
dec
test
pop
sbb
incl
loop
adc
stos
sub
iret
add
hlt
fistpll
rorb
in
incl
pushf
mov
jecxz
adc
sub
jle
or
loope
in
ljmp
jecxz
js
push
and
fcomps
movsb
mov
xlat
add
pop
sbb
sbb
and
and
lahf
jo
xor
adc
sbb
outsb
lret
adc
mov
cld
mov
cltd
sub
push
sub
mov
jg
xor
xchg
cltd
pop
adc
lea
dec
xor
aaa
adc
add
aaa
add
xor
std
hlt
test
insl
sbb
movsl
fisttpll
sbb
inc
fwait
xchg
and
pop
notb
hlt
inc
add
pushfw
or
pop
mov
aam
mov
sub
jg
push
stos
xchg
xor
and
lock
inc
xor
pop
pop
adc
inc
lcall
push
nop
iret
add
ljmp
ja
xor
inc
mov
inc
fldl
add
mov
repnz
jmp
pop
movsb
pop
mov
fsubl
call
aas
and
jecxz
sbb
lcall
fsubl
jno
jnp
int
cld
jle
jg
or
inc
cmpsb
mov
xlat
iret
xor
inc
jmp
clc
bound
test
inc
ds
mov
leave
rcrb
lahf
repnz
rorb
cmpb
notb
and
add
loop
push
out
add
ljmp
and
inc
xchg
ljmp
inc
test
bound
dec
cmp
ljmp
push
cmp
jmp
mov
jbe
cmpsb
mov
decl
loope
in
xor
out
add
daa
jp
push
mov
xchg
lcall
aam
aaa
ljmp
push
es
sub
push
mov
lcall
push
inc
aad
hlt
aam
jnp
fisubrl
lcall
push
insb
pop
aad
lcall
dec
ret
hlt
jge
inc
pop
dec
repnz
aad
mov
fs
out
jno
mov
jno
addb
cld
popf
scas
bswap
dec
add
lock
ja
adc
dec
pop
push
dec
xlat
jb
xor
je
mov
in
inc
sarb
notb
lods
je
jmp
inc
stos
stos
adc
xor
std
pusha
and
jecxz
ds
aas
addr16
xchg
dec
test
mov
mov
out
dec
add
clc
mov
insb
xor
cmp
mull
clc
pushl
js
insl
cmp
addr16
mov
loopne
pushl
cltd
int
jbe
mov
shr
ds
in
push
xor
imul
mov
out
lea
int
cltd
jns
push
push
ror
fsubrp
mull
pop
int
or
pop
xchg
fwait
loopne
out
push
mov
dec
jg
mov
movl
push
lods
es
clc
sarb
stos
sbb
call
inc
push
cmp
test
idivl
mov
add
and
mov
fadds
mov
inc
shl
fists
fdivrl
arpl
push
imul
nop
hlt
fcoms
in
lahf
ret
push
ret
decl
cwtl
in
arpl
pusha
push
xchg
jno
inc
test
out
ficomps
pushl
test
jmp
push
mov
xchg
cs
mov
test
push
and
jmp
sti
movsb
addr16
inc
sub
clc
mov
int3
sbb
sub
mov
rcrb
pop
popa
incl
mov
sbb
jl
out
mov
clc
int
popa
pushl
cli
leave
adc
sbb
fstl
dec
pop
mov
and
jae
idivl
cmp
mov
idiv
mov
incl
mov
movsl
lret
out
cmpsl
inc
pop
imul
mov
testl
push
les
jno
cmp
sbb
xchg
ret
jno
fldt
out
mov
ljmp
cmc
inc
fisttpl
or
mov
rcr
jle
lcall
repz
pop
lcall
test
seto
add
dec
shlb
decl
shll
mov
repz
aad
ljmp
inc
mov
lcall
push
dec
stc
stos
das
mov
test
fsubr
sbb
clc
aaa
add
out
or
imul
decl
cmpl
mov
dec
xchg
mov
xchg
mov
cltd
adc
lcall
dec
int
xor
mov
pop
xor
rcll
push
mov
lret
inc
xchg
and
lcall
leave
sbbl
sub
neg
xor
xor
xchg
mov
jnp
insb
in
mov
push
sub
xor
loopne
mov
cli
dec
scas
out
push
dec
clc
cmc
clc
lcallw
divb
fidivl
lds
fstp
cmpl
mov
in
pop
mov
shrb
mov
xchg
add
dec
xchg
jne
aam
out
test
xor
mov
sub
imul
xchg
push
dec
xchg
push
sub
ljmp
mov
sub
scas
jnp,pn
pop
pusha
loopne
mov
or
outsb
mov
dec
xchg
jb
mov
and
stos
imul
fbld
dec
xor
js
insb
sarb
cmc
push
shrl
cmp
dec
xor
inc
stos
pushf
add
fildll
pop
cmp
push
es
movsl
xor
stos
fcomps
fdiv
add
enter
push
cs
mov
add
jmp
sbb
jmp
jb
adc
in
ja
arpl
sar
mov
jb
xor
stc
sub
gs
cmc
and
push
jmp
jnp
popf
stc
aas
cmpsb
dec
mov
sbb
nop
clc
lock
mov
add
add
das
jle
pop
or
and
jo
outsl
decl
outsb
xchg
arpl
mov
adc
xchg
push
lods
mov
xchg
pop
in
or
sahf
mov
cmp
insl
pop
mov
loopne
rclb
clc
pop
mov
push
cmp
loopne
in
fbld
inc
fs
jmp
shrl
aam
mov
sbb
mov
xor
call
cmp
cmp
mov
scas
lcall
cmp
scas
decl
cli
into
mov
mov
cs
add
jp
jle
aam
mov
pop
jle
repnz
scas
jo
test
mov
scas
push
shl
lcall
stos
or
movsb
sub
addb
out
movsl
jne
int
popa
sbb
mov
dec
iret
push
aam
adc
xor
outsl
xchg
xor
xchg
add
pop
sub
mov
mov
lret
popa
arpl
adc
ljmp
lods
lret
out
ss
inc
mov
inc
repnz
xor
mov
dec
cld
aaa
std
popf
jnp
mov
insl
xchg
lcall
push
enter
add
test
cmp
mov
mov
das
pushf
ds
lods
mov
pop
outsl
cmp
jg
pushl
xchg
imul
pop
dec
push
mov
movsl
inc
cs
fcomip
cmc
ja
adc
cmp
es
ret
dec
sub
decl
je
js
pop
out
pop
sub
lahf
push
pusha
insb
cmp
xor
fistps
xchg
sub
out
jg
add
in
stos
cmc
btcl
add
pushf
mov
stos
decl
xor
in
jae
mov
jne
push
push
xor
call
xor
push
in
decl
adc
int3
aaa
cmc
fisubrl
cs
je
idivl
dec
push
push
mov
fldcw
std
sub
in
fs
inc
cmp
pop
or
mov
xor
lahf
jg
sar
js
js
mov
inc
fsubs
pop
xchg
jg
les
hlt
mov
lods
push
mov
mov
adc
sarb
outsb
stc
stos
push
shl
bound
cmpxchg
adc
call
dec
mov
lods
jo
cmp
out
int3
cmp
pop
push
outsb
daa
and
push
add
cmpsl
int3
and
jg
dec
xor
mov
pop
lods
shlb
inc
faddl
xor
mov
inc
xchg
test
sbb
xor
sti
jle
hlt
cmpsb
mov
es
sti
data16
sarb
andb
xor
lahf
jl
mulb
jno
aad
in
mov
shl
movsl
out
loopne
incl
cld
int
mov
sub
mov
jecxz
aas
int3
push
xchg
lcall
ljmp
out
cld
cmp
xor
push
xor
and
rcrl
dec
sbb
loopne
pushl
dec
cmp
xchg
loope
or
shll
jmp
call
dec
jns
jae
int
xor
sub
les
mov
sbb
cli
dec
push
test
push
jg
cmp
stos
pop
cmp
push
daa
cmp
loopne
xlat
pop
and
cmp
rorl
pushl
mov
pop
and
pop
dec
inc
popa
test
clc
testl
test
lock
xchg
inc
xor
ljmp
sub
fdivr
add
adc
int3
aad
lods
push
sarl
shlb
out
enter
pop
pushf
or
lcall
adc
jbe
in
dec
jp
or
push
ret
sbb
pop
enter
decl
mov
adcb
leave
outsl
cmc
fimuls
add
outsl
stos
sub
adc
scas
cmc
lcall
sub
nop
popa
cmpsb
icebp
das
mov
or
pop
pop
xor
fstl
in
jg
imul
insl
inc
psubq
lock
mov
add
jnp
call
and
inc
xorl
out
outsl
fwait
aam
mov
and
mov
lea
js
mov
inc
cmp
xor
in
add
push
decl
adc
dec
fwait
int3
jl
sbb
mov
xchg
mov
ret
out
ja
call
push
xchg
lods
inc
pushf
lock
or
cmc
int
xor
sti
hlt
cwtl
fcomip
xorl
xchg
cltd
call
push
and
xorb
fists
pop
pop
inc
hlt
lods
std
or
and
jge
add
in
out
push
repz
pop
dec
aad
repnz
jbe
orb
mov
pop
sbb
adc
sbb
pop
stc
jl
adc
pop
add
imul
sub
aam
or
js
sbbl
fwait
call
add
aam
jmp
lcall
mov
jns
into
outsl
aad
push
les
push
negb
adc
sub
jmp
mov
enter
fistl
mov
mov
dec
mov
arpl
mov
push
in
sbb
push
mov
icebp
mov
jmp
pushl
sub
adc
test
scas
dec
jg
and
es
dec
gs
jmp
enter
mov
mov
xor
enter
pop
lahf
or
xchg
inc
push
aas
testb
mov
jno
loopne
leave
dec
xchg
add
pop
incb
mov
popa
rcrl
jo
fsubs
sbb
std
mov
notb
fimull
fs
push
jle
xchg
in
daa
adc
inc
pop
loopew
inc
test
pop
xchg
xor
adc
jge
push
das
in
fwait
pop
jl
xchg
xchg
jae
adc
data16
pop
ret
or
xchg
mov
xchg
jmp
mov
push
pop
in
cmp
ss
lock
adc
pushl
mov
jo
dec
fisubs
ljmp
sub
lea
jp
xchg
sub
jle
ljmp
jl
sbb
out
es
paddb
in
push
in
inc
stos
mov
scas
daa
jae
mov
fcomip
nop
jo
cmp
jecxz
jg
mov
xor
sbb
decl
pop
add
jns
ret
push
in
xor
inc
in
roll
pop
in
jp
add
das
ror
xor
shrb
aad
xor
pop
and
popa
or
add
rol
aas
push
dec
pop
test
dec
jg
inc
or
mov
test
and
nop
ds
mov
aas
enter
data16
adc
mov
insl
push
mov
add
fs
jmp
cli
xorl
adc
pop
das
mov
push
inc
decl
clc
shlb
mov
push
cmp
sarl
psubq
in
xchg
cmp
push
pushl
daa
lock
and
jg
arpl
xor
loop
xchg
push
nop
push
jb
inc
jno
cmp
add
call
sahf
adc
daa
jbe
call
movsl
mov
test
or
lods
adc
mov
movb
mov
pop
cli
push
les
inc
push
or
pushl
sbb
call
inc
jmp
out
imul
shrl
or
inc
push
loopne
filds
test
bound
pop
stos
xlat
stc
pop
xor
cwtl
mov
fwait
add
shll
ret
cmp
lock
ja
add
push
or
in
sub
jg
adc
dec
insb
xchg
push
sbbl
sub
je
loopne
push
sbb
dec
and
insb
aas
or
sti
cmp
jge
jmp
push
clc
push
mov
mov
data16
lods
adc
pushl
sbb
jl
sbb
les
or
lock
loop
sbb
cmp
leave
sbb
mov
incl
mov
outsl
pop
ja
lds
mov
cltd
xchg
gs
loopne
ljmp
xchg
sub
jo
xchg
dec
mov
dec
cmp
push
loope
jno
cli
rcll
mov
cmp
dec
ficomps
jg
leave
jle
xor
mov
ret
inc
loopne
xchg
incl
pop
es
mov
loopne
test
mov
test
lret
xchg
lahf
out
ds
jmp
addb
adc
inc
rorb
rolb
data16
adc
leave
cwtl
test
in
ljmp
sbbb
mov
ret
out
popa
test
push
bound
xorl
or
gs
cmp
inc
sbb
cli
mov
xor
sti
xchg
jb
dec
mov
rolb
xchg
or
shr
fbld
orb
dec
sahf
mov
push
cmpsb
adc
or
fsub
cmpsl
ret
or
xchg
clc
call
int
negl
xor
jno
clc
shrl
fdivrl
add
shrl
push
leave
dec
bndldx
sub
xor
insl
fstpl
jo
xorb
faddl
add
call
call
inc
mov
inc
adc
insl
mov
sub
push
movsl
jbe
call
decl
xor
sub
movsl
inc
fildl
cmpsl
test
movsb
jne
stos
fdivr
mov
cmp
lock
mov
mov
mov
push
add
pushf
loope
jmp
push
xlat
in
in
pop
sbb
ljmp
call
xchg
adc
cli
sub
ljmp
sbb
push
pop
push
dec
pushf
popf
jge
test
jecxz
mov
mov
or
pushl
fdivs
icebp
jb
movsb
push
and
imul
push
out
out
adc
lods
addr16
mov
dec
orl
repz
shlb
adc
sub
push
mov
mov
mov
int3
mov
inc
push
add
out
pop
in
das
lds
test
out
sub
push
add
scas
push
push
pop
hlt
push
das
adc
xchg
jl
xor
imul
arpl
push
jnp
mov
shlb
in
stos
testl
fstl
lea
push
push
push
outsb
in
jmp
sub
inc
pop
out
push
cmpsb
xor
popa
cmp
cmpsl
xor
out
xchg
rorb
cmp
out
inc
mov
and
neg
cmp
cmp
mov
in
inc
add
aaa
sbb
adc
mov
sbb
sbb
mov
int
mov
dec
lcall
adc
lahf
repnz
push
loopne
push
movsl
and
ljmp
pextrw
lods
adc
insb
test
stos
ds
pop
adc
int3
or
adc
out
cs
lcall
pop
nop
cmp
inc
cmpsb
or
pop
movsb
stos
inc
inc
out
mov
cmp
sub
incl
std
cltd
test
lock
fcompl
cmpsb
lahf
bound
xor
or
jmp
ja
sti
clc
call
cwtl
clc
cmc
movsb
in
lahf
insl
dec
mov
adc
loopne
pushl
and
adc
xlat
scas
jnp
movsl
mov
lods
adc
outsl
xor
or
sbb
decl
dec
pop
popa
in
xchg
xor
aaa
js
mov
idiv
fildll
xor
jle
xor
ss
xlat
push
inc
aad
jmp
push
or
or
dec
popf
int
cmpsb
sbb
adc
jmp
outsb
jmp
inc
or
imul
scas
sti
ret
jae
lods
cmp
test
imul
push
decl
clc
ret
and
enter
notl
js
fldl
incl
flds
in
repnz
call
mov
rolb
push
int
pop
frstor
or
lcall
mov
loopne
orb
dec
push
std
xor
jge
fwait
lcall
sbb
repnz
cli
push
testl
dec
inc
xchg
divl
mov
jp
jg
pop
pop
lret
sbb
daa
icebp
pop
nop
mov
pop
adc
popa
pop
mov
jns
and
mov
stos
dec
repz
clc
pop
cmpl
arpl
ja
outsb
inc
xchg
rcrl
stc
cld
popf
push
lcall
aad
in
arpl
add
outsl
xor
iret
frstor
fs
sbb
incb
adc
test
mov
push
lcall
cmpsl
inc
dec
test
xor
inc
popf
scas
aaa
jo
mov
insl
ds
pop
cmp
jg
stos
push
or
repz
out
mov
lock
lahf
pusha
push
rcr
xor
lcall
stc
jns
ret
rorl
outsl
mov
cld
sbb
cmc
add
mov
add
cmp
jle
and
adc
dec
jnp
pop
test
pop
shl
leave
xlat
jo
pop
mov
call
push
mov
adc
in
push
cmp
pusha
and
adc
shl
aaa
sub
incl
fdiv
dec
lods
in
pop
int3
cmp
pop
push
inc
movsb
cmpsb
fwait
loop
jg
or
movsb
dec
arpl
cmp
sti
ds
cld
gs
subb
cwtl
adc
std
pushl
inc
mov
jnp
and
test
repnz
call
fwait
repz
andb
mov
pop
xorl
ret
clc
call
sub
nop
jge
cmpsl
cmp
fidivrs
ja
xchg
repnz
pushl
jo
pop
cld
jno
lcall
sub
sub
inc
test
dec
jmp
adcb
xor
and
incl
ret
adc
xor
adc
arpl
pop
decl
rolb
sbb
mov
jo
fs
jns
cld
aas
jb
aaa
jbe
jb
iret
and
xchg
or
nop
xor
pop
pusha
push
cmp
mov
mov
mov
mov
jmp
call
std
call
mov
movsl
inc
gs
xchg
dec
dec
jl
xor
shlb
insb
adc
insl
fbstp
jmp
incl
sbb
es
sub
mov
mov
cmp
jl
and
push
decb
inc
movsl
jp
icebp
call
cmp
inc
imul
mov
fsubrp
pop
push
ss
inc
inc
mov
pop
push
loope
inc
xchg
pop
dec
cmp
jl
mov
adc
fisttpll
lcall
jmp
mov
lcall
cmp
pop
xor
pavgw
fsubl
fidivrs
and
popf
pop
imul
loope
loope
lret
sub
dec
mov
jle
jmp
mov
rorl
outsb
arpl
pushl
std
xchg
out
xchg
xchg
shlb
push
cmpsb
leave
mov
or
adc
mov
jno
mov
pop
push
lahf
loopne
jns
incl
push
clc
es
jo
push
cmp
in
int
dec
cmpsl
lock
test
mov
aas
stc
sti
mov
repz
dec
jg
mov
xor
int3
in
mov
arpl
mov
orb
fisubrs
cmp
aas
lcall
add
in
bound
inc
xorb
out
test
adc
mov
ljmp
std
push
in
movsl
mov
push
fmull
cmc
shl
fisubrl
fcompl
leave
pop
fimull
mov
cmp
aaa
insb
subl
icebp
jg
loopne
pop
pop
lods
iret
loopne
aas
xchg
mov
and
sti
adc
decl
cmpb
scas
jae
sbb
shrl
and
pushl
jg
pop
enter
cmpsb
sub
mov
cld
jg
in
mov
sbbl
fisttps
sbb
mov
popl
sub
mov
mov
dec
pop
shufps
cli
adc
mov
xchg
addl
fs
sbb
xor
add
decl
pop
inc
addl
dec
fldt
push
adc
aas
add
pushf
std
sub
sbb
inc
sbb
nop
pushf
lock
cs
lock
adc
xor
in
jmp
cmp
bound
daa
and
notl
push
xlat
ljmp
and
mov
pop
jmp
ss
into
and
or
mov
std
mov
rol
in
jl
pop
ljmp
in
fbld
lahf
aam
mov
sbb
mov
jg
jnp
inc
pushf
xchg
sarb
fwait
lahf
lcall
les
sarl
xor
cmpb
and
push
enter
or
fwait
jp
jg
inc
push
in
add
sbb
mov
das
insb
jecxz
add
test
dec
fwait
stos
mov
stos
inc
jmp
sti
mov
adc
mov
mov
pop
push
push
jg
rcl
popa
fnstenv
in
ss
ljmp
or
or
push
in
arpl
repnz
pop
out
dec
jl
es
movsl
ljmp
push
xchg
jae
out
mov
add
dec
add
mov
subb
ljmp
mov
inc
inc
xchg
xlat
sbb
loopne
xchg
cmp
jge
mov
lcall
sub
mov
xor
lods
dec
jbe
adcb
inc
iret
iret
ljmp
ljmp
fldt
enter
or
sbb
sbb
iret
sub
jl
shll
lcall
sbb
jge
adc
and
push
das
dec
jge
sbb
xor
xor
sub
lcall
cmp
xchg
mov
jg
mov
repnz
cld
roll
jge
daa
mov
jmp
dec
mov
add
or
inc
jnp
data16
sti
sub
sbb
mov
jmp
dec
xchg
jnp
xor
popf
movsb
mov
mov
and
enter
ljmp
jae
sbb
xchg
and
or
into
loop
push
mov
out
adc
pop
dec
sti
fistl
cmp
fmul
roll
push
test
sbb
lret
push
addr16
fsub
xor
push
or
sbb
jnp
cli
ret
cltd
pop
push
add
ja
and
in
push
into
hlt
add
incl
xchg
mov
adc
lock
sub
fs
xchg
pop
outsb
test
in
cmp
decl
mov
pushf
stos
and
fstl
movsl
call
movsl
xchg
xchg
movsl
add
lcall
mov
mov
subl
pop
je
jl
bound
mov
push
in
dec
add
imul
pop
jge
sbb
sbb
cmp
cmp
xor
mov
xor
test
rcll
aam
cwtl
lods
sar
cmp
das
xchg
mov
insl
cmp
aam
jns
mov
dec
mov
jmp
jl
call
xchg
test
mov
call
xor
sbb
sbb
inc
incl
sbb
or
sahf
dec
adc
mov
std
mov
daa
adc
cld
les
sub
pop
nop
jp
mov
test
sti
push
mov
xchg
cmpsb
mov
xchg
insb
xor
sbb
es
ljmp
icebp
dec
jmp
gs
cs
xchg
pop
mov
pushf
mov
imul
iret
pop
scas
repz
leave
enter
lds
adc
into
movb
outsb
fwait
sub
std
push
inc
stc
insl
mov
daa
fimuls
mov
mov
sub
pop
mov
orb
lcall
sbb
push
xchg
xchg
hlt
push
enter
and
adc
adc
push
add
mov
in
fbld
sahf
or
jmp
cmp
sub
das
call
test
add
icebp
jg
mov
and
push
lods
dec
mov
test
jg
sbb
jl
fisubs
lods
cwtl
jne
test
push
ljmp
mov
lock
xchg
inc
popl
orl
lods
test
emms
adc
ljmp
fwait
mov
pop
mov
cmp
dec
sti
call
cmc
fwait
scas
xchg
inc
adc
ret
xor
xchg
add
dec
mov
div
aas
jg
scas
setno
mov
cwtl
out
imul
cli
test
add
jp
data16
fsts
mov
lea
sbb
daa
pop
in
enter
mov
shlb
mov
or
mov
push
sbb
push
scas
je
enter
pop
scas
inc
add
ret
pop
pushf
push
lahf
and
nop
sub
hlt
mov
js
sbb
scas
adc
push
das
movsb
ret
pop
mov
xchg
jbe
sub
lcall
pop
cmpsl
dec
mov
adc
push
aad
leave
xor
es
lahf
aas
add
mov
cmpsb
push
adc
adc
popa
loopne
mov
sbb
int3
sub
adc
test
sbb
sbb
add
mov
movb
mov
mov
insb
out
sti
mov
ja
mov
ljmp
adc
or
lock
xorb
lea
fcoml
lds
outsl
dec
lods
pusha
push
pop
outsb
lcall
test
mov
jg
push
xchg
int
adc
daa
mov
sbb
or
jge
add
out
out
pop
or
test
or
push
xchg
xor
jg
lods
pop
dec
ret
and
iret
inc
mov
and
inc
push
shr
xchg
js
sbb
lcall
xchg
sub
push
pop
lret
mov
movsl
mull
jmp
sbb
cmp
adc
int
pop
pop
dec
mov
arpl
icebp
dec
outsl
jb
sbb
ret
pushl
std
decl
xchg
adc
pop
insl
fnstenv
test
jle
adc
test
pushl
push
cmp
sti
lods
loop
shrl
xor
add
mov
sti
aaa
push
add
int
fstl
add
and
xchg
cld
mov
and
sub
sti
lcall
scas
call
negb
push
xchg
loopne
sub
mov
cwtl
mov
pop
cmp
jnp
mov
sbb
out
mov
cltd
inc
jmp
addr16
xor
in
mov
xchg
jb
dec
push
inc
adc
test
jg
add
pop
push
dec
sub
loopne
incl
jmp
sbb
fsubrs
push
fnstsw
out
in
iret
jb
sub
call
jp
xor
xchg
outsb
jnp
adc
pushl
mov
addr16
or
loopne,pn
out
repnz
push
rcr
sahf
out
add
ljmp
xor
xor
aas
mov
mov
cltd
inc
xor
inc
jae
sbb
lea
arpl
in
pop
pop
cltd
cmpb
adc
sbbb
aas
and
test
outsl
test
sub
das
pop
mov
cmpsb
loope
js
lcall
inc
imul
jno
or
imul
sbb
and
loop
or
aas
or
lock
dec
dec
xchg
addr16
jo
lods
lret
ds
stos
jmp
dec
arpl
jge
fiadds
cmp
data16
and
mov
mov
add
das
ds
outsl
test
pop
sub
push
xor
ret
fsub
les
add
dec
xchg
insb
pop
adc
cmpsl
jmp
je
xchg
push
pop
lock
add
jae
dec
inc
jp
scas
mov
mov
inc
fwait
mov
and
cmpsb
mov
xor
mov
iret
fs
and
mov
jge
dec
mov
jg
xchg
push
mov
push
or
pop
mov
xchg
or
aad
std
call
jnp
sub
or
test
xor
lods
stos
ss
jne
dec
mov
mov
jnp
sti
std
mov
dec
cmp
add
bound
and
nop
adc
mov
push
imul
pop
fstpl
xor
jecxz
lds
cmp
sub
or
setne
cmp
andl
ljmp
js
push
ret
pop
or
jmp
dec
add
and
jg
mov
push
jle
popa
cwtl
mov
stos
sbb
clc
mov
cli
ljmp
addr16
xchg
loopne
andb
xor
xchg
mov
out
mov
pop
jp
xchg
jp
mov
aad
ja
call
and
xor
stos
xorl
lods
subb
push
mov
decl
and
mov
add
jecxz
cld
scas
push
jl
cs
mov
data16
in
cmp
sbb
nop
insb
inc
outsb
shrb
loop
jnp
enter
rclb
xlat
insl
in
ljmp
mov
xor
call
pop
inc
imull
cmpl
pop
repz
test
sbb
adc
push
fcmovb
imul
push
push
jecxz
lods
adc
hlt
jp
xchg
ficompl
cmp
movsb
ret
clc
aas
negl
xchg
out
pusha
ljmp
jg
out
cmpsb
sub
sub
pop
in
jo
ds
push
adc
sbb
scas
and
and
daa
inc
inc
or
in
inc
cld
dec
hlt
shrb
arpl
jne
xchg
push
icebp
adc
jg
dec
mov
lea
and
push
adc
inc
sbb
jmp
stc
mov
sarb
inc
je
lret
mov
push
add
imul
pop
pop
mov
dec
push
xorl
bound
add
push
mov
dec
ret
xchg
push
fdiv
scas
outsb
add
xchg
data16
inc
out
mov
inc
xchg
add
xor
jmp
jecxz
ret
sub
cmp
outsb
daa
fsubrs
push
mov
pop
push
and
jg
push
mov
cmp
shll
fcompl
add
xchg
out
mov
daa
xor
ficomps
xor
stc
mov
add
in
ss
cmp
outsl
jnp
pusha
call
inc
xor
xchg
clc
mov
mov
mov
in
pop
push
rcl
repnz
jmp
sbb
xchg
cmp
add
add
push
out
inc
xor
frstor
shr
aad
push
scas
popa
call
mov
cmpsb
sub
adc
and
sub
push
mov
cs
mov
mov
mov
pop
xchg
fcmovb
int3
incl
orb
addl
mov
jl
cmpsb
pop
push
inc
mov
jns
xchg
adc
fisubrs
dec
ljmp
mov
dec
xor
popa
dec
or
jg
fwait
call
test
lock
push
dec
fldt
daa
in
mov
xchg
stc
rol
cwtl
lods
cmp
jle
fsubrl
add
adc
adc
jb
and
rorl
and
cmpsb
xchg
test
shll
daa
test
jg
shlb
push
sbb
js
mov
xor
or
mov
inc
ja
adc
call
mov
adc
mov
adc
and
in
adc
sub
repz
adc
incl
push
ja
std
frstor
stc
add
xor
lahf
fisttpl
lock
sbb
mov
stos
pusha
pop
mov
fcomip
ss
adc
xchg
fldl2e
data16
insb
xchg
ds
shrl
imul
pop
push
push
testb
jmp
adc
mov
rclb
or
fildll
dec
sbb
xchg
neg
call
pop
mov
inc
or
mov
xlat
and
cwtl
jns
ja
mov
.byte
mov
in
call
in
movl
mov
sahf
lret
and
adc
add
int3
add
inc
or
add
push
filds
mov
mov
mov
push
jle
mov
and
call
add
pop
repnz
repz
cmpsb
div
lock
leave
test
push
bound
out
jl
gs
push
jb
pop
sub
lret
xchg
mov
xchg
pop
enter
adc
in
dec
cli
sub
mov
lods
dec
test
dec
les
cs
leave
dec
lods
ret
push
adc
dec
push
dec
jo
mov
mov
push
sub
sub
jl
push
cwtl
scas
push
push
push
dec
cs
rorb
cwtl
sub
dec
push
test
das
add
movsb
mulb
inc
test
push
or
push
cs
leave
push
mov
push
dec
jae,pn
pop
and
xchg
inc
or
mov
and
inc
leave
test
loopne
xor
pop
dec
cs
rclb
or
jb
xor
insl
mov
enter
xor
xlat
jo
inc
ds
pop
xor
pop
repnz
lods
int
mov
push
cld
out
cmp
test
imul
cmp
in
or
loopne
cs
jb
pop
nop
rolb
xchg
ljmp
pop
enter
lock
sbb
repnz
fdivs
pop
fs
xor
sub
mov
in
leave
xchg
and
mulb
and
dec
test
mov
push
push
call
pop
enter
push
push
push
in
ds
clc
mov
repnz
loop
or
sub
nop
add
mov
inc
in
leave
test
sbb
outsl
ficoms
mov
jo
cmp
xchg
jno
jo
movsb
jb
inc
ds
shl
jbe
and
fcmovnu
jne
sub
scas
or
jl
push
mov
jbe
pop
dec
cs
test
ja
xlat
lret
push
jb
js
fs
add
xchg
sub
inc
ds
pop
jp
incl
push
mov
movsl
in
and
mov
movl
or
dec
cld
push
call
fists
pop
add
cmp
je
mov
jp
mov
jge
inc
jl
jmp
jnp
div
jmp
jmp
push
add
jbe
push
cmp
add
outsb
lods
popa
mov
mov
inc
adc
push
into
clc
mov
add
outsl
sti
out
mov
hlt
and
push
lcall
or
add
mov
clc
clc
clc
clc
in
dec
add
mov
cli
jmp
mov
adc
shrb
add
add
adc
push
ficompl
add
xor
push
sar
in
lock
loop
push
call
push
js
imul
inc
clc
jmp
sbb
mov
jo
cltd
dec
cmp
dec
fsts
movsb
mov
jl
add
out
clc
push
jnp
sbb
insl
pop
je
adc
push
adc
sub
sbb
push
or
lock
imul
lock
lock
shl
jne
cmp
jae
pop
scas
mov
scas
jo
push
or
fisttps
jmp
dec
sti
xor
ret
clc
cld
push
or
jle
or
add
hlt
adc
pop
pop
or
push
sbb
loop
fdivr
decl
sbbl
mov
add
push
lea
and
cmp
fmuls
js
cmp
dec
push
mov
aaa
incl
jmp
sub
loope
xor
int
push
cmpsl
cmp
push
fbld
push
mov
sbb
sub
fsubl
or
jg
insb
imul
xor
adc
aaa
xchg
jge
or
out
lods
push
gs
cmp
or
push
cli
adc
cwtl
push
sbb
push
enter
fs
push
push
test
adc
mov
xchg
jo
test
pop
push
fldcw
mov
add
fs
rcr
add
call
push
test
push
xchg
in
push
in
incl
push
sbbl
test
in
fs
jnp
jmp
loopne
out
and
fwait
cmp
jg
pushf
mov
lea
cwtl
push
cmp
pop
sbb
pop
mov
xchg
test
mov
ret
pop
add
hlt
adc
shr
imulb
or
es
cld
dec
xchg
mov
loopne
or
pop
push
inc
mov
xchg
and
cld
pop
sbb
cltd
outsb
fnstenv
adc
gs
add
ret
lret
daa
ss
sub
gs
dec
shlb
sbb
push
pop
mov
jg
rorl
push
add
aad
rcl
mov
or
adc
fst
push
push
inc
data16
cmp
repnz
pusha
cmpsb
add
push
xor
clc
loop
xchg
xor
jns
and
jg
adc
or
dec
mov
sub
sub
aas
xor
imul
bound
jge,pn
in
inc
cmp
ret
sub
nop
subl
and
scas
push
xor
ljmp
mov
inc
fmuls
push
cmc
inc
shll
mov
int
call
fstps
iret
in
subb
mov
jge,pn
fdivl
clc
mov
xor
pop
push
lea
push
mov
or
push
push
mov
lds
xchg
lea
mov
pushf
mov
clc
mov
cld
roll
sbb
or
sbb
push
loope
push
push
int3
cld
stc
imul
cmp
ss
mov
or
dec
pushf
std
push
jae
repnz
inc
sub
push
aad
ret
inc
aaa
xchg
and
cli
aam
inc
push
push
loop
or
xor
cmp
push
pop
push
xchg
jp
hlt
xchg
loopne
fnstenv
scas
adc
idivb
push
pop
add
fs
inc
popf
push
sysret
mov
fs
pusha
jb
push
inc
cli
ljmp
push
push
jno
sbb
cmp
jno
pop
cwtl
push
out
push
push
jno
sbb
jo
xabort
movsl
in
sbb
inc
orps
rcll
jae
jnp
decb
mov
push
cmp
das
inc
xor
push
push
rorb
inc
adc
push
stc
jecxz
push
pop
xchg
dec
adc
sbb
andb
cmp
add
push
mov
cli
add
aam
nopl
shl
sbb
imul
push
insb
arpl
ljmp
pop
je
mov
cmp
cmc
rcrl
mov
loopne
sub
push
dec
sbb
mov
adcb
cmp
cld
test
cmpl
adc
xchg
jmp
or
or
inc
pop
xchg
rorl
mov
addl
lret
sbb
adc
pop
test
or
mov
jge
sbb
push
and
aad
std
jno
lods
lea
out
daa
rol
daa
loopne
cmp
inc
push
or
inc
call
xchg
push
mov
cvttps2pi
pop
jl
dec
or
shrb
sub
ss
loopne
mov
sti
lods
add
cmp
mov
push
test
jb
negl
insb
into
jo
rcrl
xor
subl
sbb
or
js
mov
push
mov
mov
mov
fcmovne
add
dec
daa
jmp
popf
test
push
inc
jp
rcll
pop
jne
mov
divl
in
fists
xor
push
or
mov
pop
lea
xchg
inc
mov
mov
pusha
xor
cld
jecxz
fnsave
lock
loopne
dec
add
subb
mov
push
cld
or
in
loopne
sti
adc
pop
or
fimull
push
or
daa
mov
jbe
loope
mov
adc
cmpsb
adc
lfs
fidivl
mov
mov
adc
into
pop
sbb
scas
sbb
aaa
mov
add
pop
push
lds
sbb
fistpll
imul
push
dec
call
push
stos
inc
aaa
ljmp
push
and
repnz
adc
fwait
lods
and
xor
add
and
xchg
pop
movsb
cs
movl
pop
or
mov
mov
jge
lods
adc
mov
call
lcall
js
xchg
pushl
les
js
or
sbb
hlt
pushl
leave
push
mov
mov
jmp
movl
in
les
jge
jge
xor
daa
xchg
ret
add
les
mov
mulps
sbb
popf
ret
add
loop
jb
cmp
jge
cld
packuswb
cmpsl
js
mov
jmp
or
iret
inc
jo
dec
or
sub
mov
adcb
jge
stos
fldcw
pop
sbb
or
or
sub
jle
out
cltd
mov
arpl
decb
mov
cmp
mov
prefetch
lret
call
adc
mov
mov
clc
or
int
mov
xchg
out
xor
out
imul
jmp
in
push
mov
mov
shl
mov
inc
adc
ljmp
lret
push
js
addb
inc
roll
sbb
xchg
xchg
insb
test
int
dec
test
insb
inc
adc
popf
or
adc
dec
add
mov
xchg
adcl
or
xor
add
push
cmp
add
add
adc
loope
jp
shll
rcrb
test
mov
pop
xor
add
sbb
pop
and
ja
sub
add
jmp
xor
sarb
xor
test
sub
shl
jmp
loope
shll
loope
outsb
std
and
xor
loop
or
xor
pop
mov
es
loope
mov
fnstsw
mov
jo
inc
adc
fs
push
lcall
mov
xor
mov
insb
mov
in
lock
in
hlt
cltd
cmpsb
cltd
dec
adc
dec
call
test
xchg
and
add
dec
adc
lock
xchg
mov
xchg
inc
and
xor
and
lahf
add
sbbl
dec
and
add
jb
adc
add
add
add
mov
mov
or
add
add
add
add
stos
add
push
inc
add
hlt
shl
cmp
jmp
lret
inc
inc
es
loop
and
ret
sbb
lock
popa
inc
sub
cld
and
lcall
adc
stos
jg
inc
sbb
pop
filds
pop
push
inc
inc
jbe
je
mov
jmp
inc
mov
dec
cmpsl
mov
xor
mov
adc
add
in
fwait
pop
pop
push
lret
inc
adc
in
pop
add
or
movsbl
sar
and
or
jmp
add
cmp
cmp
loope
adc
jo
cld
test
shrl
decb
hlt
shll
jo
in
inc
push
push
mov
xor
ret
jae
push
push
adc
sbb
mov
std
dec
jnp
inc
pop
sub
push
adc
lock
lret
fistpll
mov
jge
sub
hlt
aas
adc
add
push
sub
mov
clc
shll
adc
shl
cwtl
call
add
push
mov
pop
das
andb
mov
mov
js
sub
aas
fmull
xor
ds
adc
adc
shll
sub
add
outsl
pusha
pop
fbld
mov
mov
jnp
rorb
push
adc
or
sub
fdivrl
nop
add
push
push
mov
adc
cmp
subl
aam
cs
adc
cmp
cmp
xor
daa
inc
push
lock
push
dec
add
cmp
lret
pop
and
add
jmp
sbb
jg
push
xchg
push
stc
out
xorb
ljmp
pop
divl
in
fsubl
aaa
clc
imul
mov
mov
loopne
inc
sub
jp
hlt
filds
aas
dec
clc
add
enter
aad
loope
cwtl
and
pop
imul
cmp
jo
mov
or
lea
out
cwtl
xor
push
ss
daa
sub
jl
in
shll
mov
pop
or
jmp
shrl
iret
pop
lahf
cmp
push
fwait
push
xlat
cltd
xlat
and
lcall
xchg
and
lret
mov
clc
rolb
orl
sub
shr
or
mov
imul
inc
lods
ds
loop
add
xchg
xor
adcb
and
rolb
mov
fwait
lret
enter
jge
scas
loopne
push
pop
je
adc
xchg
or
push
mov
jg
enter
shlb
pusha
cmp
or
mov
scas
mov
xor
cli
mov
lods
dec
lcall
test
cmpb
add
sti
pusha
push
or
pushf
xor
or
jnp
mov
es
sub
or
sbb
push
mov
jge
ret
or
cmp
jbe
cmp
andb
mov
clc
pop
cmpl
pop
and
and
cli
mov
jne
push
pop
or
leave
test
mov
outsl
push
cmp
jb
rep
jmp
mov
mov
or
add
enter
inc
lea
push
enter
sbb
and
mov
mov
mov
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
cmp
jnp
orb
jo
pusha
out
dec
pop
mov
mov
call
sahf
in
in
lock
hlt
sub
cld
cld
rorb
dec
add
add
or
call
inc
mov
ret
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
or
pop
lods
jl
inc
inc
neg
fimuls
enter
sub
popf
divl
nop
push
push
js
mov
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
ljmp
mov
push
cld
push
out
sahf
out
inc
or
sbb
jns
out
aaa
inc
aaa
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
push
or
push
inc
sub
push
add
or
mov
cmp
mov
adc
xor
scas
shlb
xor
jmp
cmp
jne
aas
or
in
cmpb
pop
mov
push
add
mov
jmp
ds
xchg
fdivrs
xor
and
add
loopne
das
adc
jmp
sbb
and
in
sarl
push
mov
push
popf
and
shr
icebp
jmp
scas
pop
pop
pop
filds
dec
and
push
push
push
mov
mov
test
je
mov
test
je
cmp
popf
mov
inc
cmp
je
test
je
fmul
or
repz
pop
pop
push
and
dec
decl
add
les
mov
push
mov
mov
mov
and
stos
bound
add
aas
inc
lea
sbb
or
mov
loopne
push
and
repnz
imul
cmp
push
cmp
test
jg
inc
push
push
mov
cmp
xor
pop
je
sub
push
test
jne
mov
mov
or
fsincos
call
push
rep
mov
dec
or
in
xchg
ljmp
and
add
repnz
xchg
inc
inc
inc
inc
inc
jb
xor
inc
cmp
enter
inc
inc
repnz
repz
inc
inc
inc
inc
out
sbb
inc
inc
inc
xchg
add
inc
inc
dec
xchg
xchg
sub
dec
dec
enter
dec
dec
dec
enter
dec
dec
iret
repz
dec
dec
dec
dec
dec
dec
sbb
repnz
dec
dec
inc
sahf
out
dec
dec
dec
dec
push
cltd
dec
addl
dec
inc
adc
jg
inc
adc
inc
mov
pop
mov
ja
push
push
push
push
in
testb
decb
nop
sub
pop
mov
mov
in
mov
cmp
jge
cmpl
cmp
mov
je
push
jbe
xor
cmp
ret
aaa
data16
add
int
pop
stc
mov
push
push
cmp
and
push
lret
cld
xor
sbb
or
pop
pusha
pop
sub
pop
hlt
pop
mov
aas
mov
test
mov
dec
or
out
pop
pop
loopne
std
pop
cmp
je
push
inc
inc
lods
test
push
movzwl
or
push
pop
push
push
push
add
outsb
mov
inc
loopne
pop
jne
pop
inc
rorb
cld
push
cs
aam
xor
sahf
fcoml
scas
insl
xor
jle
dec
into
gs
xor
ret
in
jge
add
int
sar
imul
or
jmp
xor
inc
push
and
adc
or
jmp
loope
sub
into
push
clc
cmp
pop
sbb
cmpb
pop
jmp
lea
mov
push
dec
adc
push
and
jg
out
push
dec
and
push
jg
outsl
inc
or
lahf
out
jge
jbe
jle
xor
jg
jg
mov
jg
lea
dec
jne
imul
mov
pop
mov
or
mov
test
xor
sub
adc
sub
xor
sub
sub
jne
test
jg
sub
into
jg,pt
call
sub
push
push
push
popf
sbbb
cmp
sub
ja
xchg
push
adc
add
sub
mov
lock
in
lock
rep
push
jmp
cmp
jne
lock
jo
in
fldl
jnp
in
inc
mov
in
push
push
ret
leave
jmp
insl
subl
mov
repz
cld
mov
push
in
push
mov
rol
pop
mov
and
and
add
cmp
inc
test
or
sbbl
sub
mov
xchg
test
aad
sbb
in
rcl
jo
push
pushf
pop
push
fistpl
popf
pushf
pop
fidivl
popf
ds
cmp
jnp
adc
push
add
test
pop
add
mov
scas
shl
in
add
pop
cwtl
and
cld
mov
mov
fdiv
sbb
add
ja
in
aad
lds
cmpsb
mov
dec
lea
sub
mov
jns
sub
xor
jbe
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
dec
add
shll
sbb
enter
dec
push
adc
pop
add
sbb
sbb
pop
sub
je
out
cmp
loop
inc
fadds
xor
jno
push
scas
jae
xor
out
pop
jo
push
outsb
pop
push
add
inc
cmp
int
cmp
jl
pushf
and
xor
das
test
les
pop
jmp
jge
cmp
add
int
int3
sbb
inc
cmp
jb
lea
push
adc
push
pop
out
push
insb
cmpsl
ss
adc
mov
sub
shlb
stos
and
push
fs
sti
push
mov
es
insb
stos
decl
lea
pop
insb
jo
push
adc
ret
hlt
daa
dec
je
mov
enter
iret
test
push
sub
or
push
and
jecxz
push
adc
sbb
jle
divl
lret
mov
dec
jecxz
pushf
lock
iret
xor
push
xchg
out
pop
dec
add
xorl
add
aas
and
pop
pop
xchg
inc
cld
cmp
je
testl
jecxz
daa
mov
shr
and
sti
jns
adc
xchg
pop
movsb
push
bound
or
jns
outsl
add
or
pop
mov
jmp
rcll
inc
adc
and
inc
or
sub
rcl
loop
add
adc
adc
and
test
adc
lock
je
and
mov
insb
jne
sub
jmp
cmpsb
xchg
dec
idivl
cs
add
lock
jnp
cli
push
add
sub
pop
adc
dec
out
inc
push
sbb
das
xor
loopne
sub
mov
ja
incb
cmp
bound
and
cmp
sbbb
jb
jo
push
in
loop
mov
call
fsubr
rcll
cmp
sub
jmp
test
cmp
ficomps
mov
rcl
mov
adc
push
push
dec
fistpll
push
iret
mov
mov
rclb
inc
mov
inc
call
xchg
pop
dec
pop
ret
adc
pop
sti
mov
cli
mov
addb
movb
subl
lock
sbb
dec
orl
mov
jb
sbb
mov
push
or
adc
mov
push
out
add
sti
pop
pop
inc
push
cmpl
movsl
mov
and
mov
fisubrs
pop
je
push
fmull
sub
adc
push
inc
sub
cmp
lds
ficomps
sbb
mov
ss
int3
test
ljmp
je
jnp
lahf
movsb
sub
jne
cs
loopne
out
add
in
std
mov
push
xor
in
sbb
ss
jp
imul
mov
call
test
sbb
cmp
cmpsb
cmpsb
faddl
ret
mov
lahf
push
ror
sbb
clc
and
and
adc
inc
jno
stos
test
jo
mov
movsl
sub
sub
mov
cmp
inc
sub
cmpsl
lret
add
clc
push
inc
movsb
mov
xor
push
pop
sbb
push
divps
or
cs
pop
or
cmp
or
pop
inc
dec
push
mov
push
and
aas
inc
mov
push
push
push
mov
push
push
xor
xor
fistpll
sbb
fdivrs
je
inc
sbb
or
sbb
fadds
int3
bound
pop
stos
mov
push
shll
xchg
cld
push
pop
insl
jbe
inc
clc
test
mov
adc
sbb
push
addr16
cwtl
stos
or
leave
add
jp
add
mov
hlt
adcb
add
dec
jl
cmp
push
xor
sbbl
mov
xchg
popa
jo
test
inc
inc
cmp
cmp
jl
add
popf
fucomp
pop
push
mov
mov
enter
in
pop
push
and
dec
lods
xorl
mov
push
pusha
js
push
xor
dec
push
test
imul
divb
push
aas
mov
fdivrs
fidivs
sti
out
addr16
push
in
pop
fcomp
lea
inc
stos
push
push
dec
add
and
pop
pop
push
mov
push
push
andl
push
fs
sub
add
pop
mov
sub
std
outsb
lret
cmp
and
fldt
adc
sbb
fidivrl
lret
in
push
out
jne
xor
add
sarl
pop
or
add
push
in
imul
inc
test
add
sub
xor
fildl
fiadds
dec
pusha
mov
lcall
ss
cmp
lock
or
xlat
jge
push
mov
andl
rcll
add
and
sarl
daa
ficomps
cmp
movl
daa
les
pop
orl
and
sub
sbbb
popl
push
cmp
mov
insl
dec
jbe
xchg
call
pop
mov
jmp
leave
push
loop
adc
test
inc
pusha
or
pop
mov
adc
cmp
jp
inc
push
mov
pop
mov
cli
push
cmp
ja
je
cli
fcomi
add
and
and
xor
adc
xchg
rorl
sbb
jl
arpl
add
jmp
push
pop
inc
pop
aad
bound
inc
xorl
push
mov
loopne
sbb
mov
or
loop
sarb
add
clc
testl
out
imul
or
in
outsb
dec
adcl
popa
scas
jmp
adc
pop
je
into
push
pop
cwtl
fidivrs
js
pop
sbb
iret
js
in
cmpsl
add
add
jo
mov
jne
cmp
daa
mov
inc
push
outsb
pop
add
ret
dec
in
in
js
pop
sub
cmp
push
dec
push
out
mov
int
mov
and
add
scas
or
orl
mov
or
mov
or
dec
cs
mov
jbe
inc
and
mov
incl
or
pusha
jo
mov
sahf
ret
push
inc
mov
sbb
incl
mov
rcr
jne
cmp
cmpsb
fucomip
and
or
xchg
add
inc
jbe
pushf
mov
jmp
lods
sub
cmp
ss
jmp
xor
loopne
add
adc
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
aaa
std
push
outsl
pop
es
inc
int3
je
out
cmp
rol
dec
nop
lock
push
mov
xchg
jmp
add
pop
push
pop
pop
sbb
icebp
xchg
xchg
icebp
cmpsb
int
or
je
ljmp
add
leave
int
rclb
mov
ja
sub
inc
add
xor
inc
cmp
mov
pop
add
adc
adc
push
andl
add
in
or
fstpt
adcl
in
mov
dec
addl
cld
mov
cmp
ret
sbb
dec
filds
rcll
jge
outsb
ret
mov
movsb
aas
jae
incl
push
je
pushl
dec
shl
lea
cmp
jb
mov
imul
cmp
je
jge
push
jmp
dec
mov
nop
push
jne
xchg
dec
push
xorl
jg
push
pop
add
jne
call
sarb
sti
and
leave
mov
andb
incl
push
pop
mov
add
mov
jne
jne
sbb
mov
cmp
je
inc
inc
or
jne
repnz
outsl
dec
pusha
push
add
push
sar
inc
push
push
adc
data16
je
das
mov
pusha
jnp
pop
sbb
and
pushl
push
hlt
ds
in
dec
inc
push
push
cld
dec
pop
unpcklps
pop
pop
fiaddl
pop
adc
inc
addb
push
lock
out
mov
inc
aam
or
sub
out
orps
int
pop
or
bound
out
shll
ficomps
xor
pop
lcall
pushf
fidivrl
inc
push
pop
push
dec
cmp
cld
adc
imul
mov
or
jmp
add
jo
decl
or
push
and
cmp
fwait
xor
inc
mov
in
scas
cmpsl
shlb
js
into
mov
subb
mov
cmp
in
push
jl
mov
sbb
insl
pop
scas
sbb
rorb
lea
pop
cwtl
rcrb
and
jns
sub
std
xchg
pop
and
adc
cmp
jb
jp
mov
jl
jmp
adc
or
jle
dec
mov
mov
fimull
je
mov
test
ss
jne
mov
and
jne
mov
sar
adc
out
shl
add
cmp
dec
mov
push
or
js
js
aas
push
mov
or
inc
adc
mov
loopne
xchg
fs
xorl
push
add
or
add
jmp
xchg
inc
scas
inc
adcl
jmp
inc
dec
lcall
push
roll
sub
pop
inc
in
push
aaa
xor
ds
mov
add
jmp
adc
jne
mov
test
aaa
and
movl
jl
cmc
imul
pop
arpl
subb
or
jae
mov
jmp
or
test
mov
sub
jb
dec
data16
lret
mov
mov
push
cmp
test
push
aas
xor
mov
push
lea
push
or
push
addl
scas
shlb
pop
cwtl
sbb
mov
sbb
out
shrb
push
push
cld
je
and
jo
jl
push
fwait
mov
hlt
out
in
js
xorl
in
push
inc
and
sbb
sub
inc
ficoml
push
push
inc
cwtl
or
xlat
mov
outsb
aas
push
incb
push
jmp
sbb
shrb
pop
sbb
movl
sbb
adc
and
push
scas
sbb
sbb
sti
lret
ret
add
push
jo
xchg
in
insb
pop
lock
or
add
jge
push
or
in
mov
shll
jb
sub
jge
mov
inc
insb
lret
fucomp
fisubrl
insb
cmp
pop
arpl
fisubs
add
mov
mov
ret
pop
sub
or
adc
loopne
ret
dec
push
jmp
divb
push
jmp
pop
shlb
push
sbb
mov
mov
xchg
xor
rorb
lock
dec
mov
push
insb
push
sbb
repz
push
pop
inc
and
pop
push
add
nop
xchg
cltd
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
pop
lds
out
xchg
fsubp
xchg
mov
xchg
jno
fsub
push
inc
dec
push
adc
loop
out
mov
outsb
add
cmp
pop
je
jle
fmull
aas
add
insb
sub
mov
add
adc
or
xorl
mov
inc
cwtl
mov
roll
cwtl
xor
sub
push
jle
mov
cmpb
inc
cltd
leave
test
adcl
cmp
fisubs
popf
sbb
mov
jno
lcall
ja
mov
out
orl
mov
popf
je
xor
inc
mov
es
pop
cmc
adcb
iret
mov
push
sti
popa
push
xor
sub
dec
mov
inc
add
imul
add
add
adc
repnz
inc
in
or
pop
cmp
stos
push
aaa
mov
push
ficompl
inc
and
mov
sub
cmp
add
and
lds
mov
data16
sub
mov
mov
ljmp
pop
xchg
push
aas
sarb
or
mov
xor
aaa
jmp
movb
dec
lea
das
clc
test
lods
or
xor
mov
aam
leave
sbb
or
add
testb
jne
int3
or
push
pop
mov
fldl
es
sbbb
cmc
and
addb
xchg
negl
add
rclb
mov
call
add
inc
jg
sbb
jne
or
or
cmpb
push
add
push
cmp
lret
ret
cmp
ja
cmp
push
lods
sub
add
and
adc
inc
or
loopne
cwtl
xor
and
iret
lock
sbb
mov
pop
or
adc
rorl
je
push
mov
and
dec
or
shrl
movsb
push
adc
loop
jmp
mov
mov
aam
mov
push
hlt
insl
cmp
fs
faddl
push
lock
icebp
jmp
push
bnd
mov
rcrb
jne
adc
test
lock
jb
push
nop
movsb
dec
lock
dec
pop
and
ffreep
dec
pop
mov
test
adc
mov
adc
mov
not
push
shll
mov
pop
out
andl
xor
dec
repz
pop
jnp
sbb
sahf
jg
cwtl
push
fisttpll
add
test
push
jge
jecxz
jno
mov
pop
mov
movsl
inc
idivb
cld
aad
mov
dec
cmc
clc
adc
and
sbb
or
cmp
jl
les
andl
icebp
add
ds
out
mov
mov
mov
add
jo
roll
cmp
jge
andl
add
sbb
jl
push
pop
xlat
or
add
aas
out
xor
cmpsb
pop
nop
mov
mov
mov
jge
jo
popf
jne
push
push
pop
incl
inc
push
jp
popa
cmp
je
mov
jmp
test
cmp
push
out
paddb
lods
or
mov
ret
xchg
fcompl
sub
push
adc
pop
push
jne
imul
call
ds
pop
inc
clc
rorb
mov
and
nop
mov
or
cmp
add
mov
add
mov
ja
jl
cltd
push
cld
pop
mov
subb
addb
fidivs
fisttps
jb
daa
jge
dec
push
or
clc
jae
mov
add
pop
call
movmskps
imul
lods
aas
nop
notl
lea
sub
xor
sti
add
ret
cwtl
xchg
cmp
pushf
fildl
loop
pop
add
xor
imul
lret
inc
xchg
lods
dec
bound
and
loop
mov
cli
pop
shrl
inc
int3
mov
inc
dec
ret
int3
mov
das
mov
imul
dec
pop
sbb
call
sbb
sub
xor
stos
rcrb
xor
decl
cmpl
jo
decl
ret
and
xchg
dec
enter
adc
lock
push
jo
jno
push
lea
loopne
sbb
subb
cmp
jb
jbe
jb
cmp
add
cmp
sbb
pushf
lahf
repz
pop
push
push
add
pop
inc
push
pushf
xor
adc
or
das
adc
pop
in
icebp
push
jae
movsl
jo
sub
adc
pop
dec
or
cwtl
and
call
sbbl
jo
leave
inc
add
dec
adcb
pusha
jbe
fwait
dec
movsl
mov
movsb
or
push
in
or
mov
rclb
icebp
imul
add
sbb
jb
or
pop
je
dec
pop
cmp
jae
cmp
dec
out
cli
andb
and
cmc
imul
jg
cmp
aaa
xchg
push
add
shll
fs
add
fdivs
fcmovnb
jne
pop
sbbl
addr16
inc
mov
cmp
or
pushl
mov
push
push
jmp
xchg
sub
je
or
je
mov
cmc
sub
sbb
push
adc
jmp
mov
in
ja
mov
mov
dec
sub
push
xchg
pop
xchg
shll
out
shl
jne
mov
dec
mov
sahf
pop
and
mov
std
hlt
sti
or
or
jne
dec
aaa
in
jnp
mov
jne,pn
sbb
inc
ret
frstor
and
mov
and
les
decb
mov
lret
jge
mov
enter
inc
adc
xor
int3
fsubr
fldt
ss
pop
jnp
push
inc
or
push
dec
jmp
mov
mov
sbb
adc
xor
xchg
mov
adc
fs
mov
mov
sbb
in
lret
mov
stos
aaa
xor
adc
or
in
das
lahf
or
pop
std
test
leave
cmp
roll
push
mov
pop
mov
lcall
pop
ficompl
dec
mov
adc
xor
imul
mov
mov
jecxz
xchg
mov
push
cmp
inc
out
jecxz
out
sub
rol
aam
out
add
stc
fcompl
dec
adc
in
cmpsb
mov
jmp
stos
mov
je
push
mov
ds
add
je
add
push
adc
ja
es
xor
add
mov
and
idivb
jne
orl
imul
cmp
pop
and
data16
adc
aam
adc
imul
int3
loopne
lods
mov
and
je
aas
out
or
cmp
ja
or
aad
push
add
cld
ljmp
push
adc
repz
mov
jmp
mov
cmp
je
inc
dec
jne
ret
mov
or
loopne
aam
cltd
imul
xchg
xor
or
jecxz
jbe
mov
adc
adc
or
adc
call
aad
or
jmp
jmp
rcll
data16
pushl
mov
mov
inc
inc
push
push
stos
sbb
or
dec
outsb
out
jns
xor
sbb
bound
add
push
mov
pop
pop
popa
or
sbb
pop
add
roll
mov
sbb
inc
js
insb
dec
and
or
clc
sub
and
add
test
push
mov
movsl
call
mov
jb
inc
and
insb
fsubrs
push
mov
ljmp
lret
sub
adc
dec
xor
in
cld
jge
or
xchg
pushf
lret
xor
xchg
mov
rolb
ret
ja
push
fs
iret
push
xor
pop
mov
push
cmp
jle
or
jne
mov
inc
idivb
mov
sub
inc
mov
xlat
cmp
movb
or
jecxz
arpl
mov
insb
mov
or
loopne
jg
mov
mov
cmp
stos
enter
dec
jo
imulb
mov
mov
das
faddl
cmp
test
mov
js
outsb
add
pusha
jo
repnz
enter
out
imul
inc
add
in
cmpsb
roll
cmp
lcall
hlt
push
aas
ljmp
adc
push
add
pop
or
dec
pushl
inc
and
jne
cs
pop
sub
mov
leave
out
push
add
jno
sub
fdivrp
je
sub
je
or
mov
test
adc
or
pushf
bound
loop
pushf
and
inc
sbb
cmc
popa
fisubrl
mov
add
mov
mov
add
xchg
push
mov
adc
rorl
cmp
je
and
mov
or
testl
iret
or
jmp
sbb
push
push
push
inc
jbe,pt
call
nop
mov
mov
fmull
mov
or
mov
test
push
movb
out
das
cli
jo
xchg
add
cmp
ja
cmp
lea
aas
push
xchg
inc
mov
inc
popf
mulb
jbe
fdivr
ljmp
push
push
repz
mov
push
cs
push
cmp
push
push
push
inc
sub
inc
cld
call
lret
imul
xor
dec
push
sbb
lods
jmp
and
je
add
cmpsl
push
and
outsb
lock
or
test
add
mov
sbb
movl
fidivrl
test
cmp
cmp
ja
lret
xchg
idivb
add
jmp
cmp
push
and
and
mov
add
push
inc
cmp
jb
cld
pop
pop
lea
adc
push
sbb
clc
mov
sbb
jmp
mov
andl
jne
fiaddl
xor
push
fucom
xor
mov
push
mov
js
inc
push
pop
fwait
inc
sub
mov
ds
pop
fcoml
mov
mov
movl
cmp
je
cmp
jne
mov
push
rcl
sub
popf
cmpsb
jp
cmpsb
cmp
jmp
or
rcr
ja
mov
shrb
and
shll
sbb
push
pop
data16
push
dec
and
cmp
rcrb
or
mov
addr16
mov
nop
xchg
repz
in
shlb
lock
mov
lock
or
insb
cmc
rclb
jmp
push
jb
imul
and
push
std
aad
xor
inc
sbb
inc
sar
stos
pop
adc
jnp
jae
cmp
jbe
xchg
dec
out
movsb
iret
sbb
hlt
fsin
jne
mov
test
mov
pop
leave
iret
pop
imul
mov
imul
enter
adc
sub
adc
xchg
cmp
sub
test
ret
jg
loopne
subb
cmp
clc
jbe
sub
test
shrl
xor
or
faddl
jg
jb
mov
xor
inc
or
cmp
fdivrp
fsubrl
mov
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
jp
loope
mov
xchg
addr16
jl
sbb
fwait
adc
jbe
mov
lcall
idivb
jo
mov
inc
dec
jne
mov
test
movsb
mov
pusha
lock
and
gs
jnp
test
add
lds
xor
addr16
xor
adc
dec
sbb
dec
loopne
adc
bound
pop
push
pop
test
push
and
mov
test
jecxz
test
fstpt
cmc
ja
mov
rep
andl
pop
jno
and
pop
sbb
mov
pusha
jne
hlt
inc
filds
sub
rorl
cmp
jo
insb
ljmp
xor
or
xchg
std
and
lock
push
or
mov
xchg
jge
enter
or
out
addr16
inc
jmp
xor
dec
sbb
add
xor
add
sub
push
inc
jo
add
adc
fcompl
push
jmp
in
sbb
and
sti
imul
add
in
sbb
lret
stos
jle
sub
push
and
pop
pop
dec
adc
add
cld
add
jne
in
add
push
jmp
shlb
push
int3
outsl
push
cmpsl
push
aas
sbb
outsl
sbbl
jp
getsec
pop
jmp
jae
addl
rorl
push
mov
lahf
rorb
mov
pop
jmp
add
test
and
daa
cmp
push
enter
arpl
adc
fmuls
pushf
daa
lret
dec
jnp
pop
mov
or
or
xchg
sub
in
idivb
inc
or
fwait
rcrl
popf
jg
xchg
sub
out
mov
ficoms
pop
mov
adc
pop
adc
movsb
or
ja
mov
adc
data16
mov
pushf
cltd
sub
sbb
in
mov
jmp
pop
xchg
int3
mov
insb
add
sub
and
outsb
inc
nop
rorb
aam
pop
sub
adc
push
push
jne
mov
aaa
out
jle
push
or
push
cmpl
push
in
adc
icebp
cmp
mov
inc
add
add
dec
or
notl
je
lods
push
xor
push
sub
push
sbb
mov
inc
jo
pop
sub
aaa
sbb
ljmp
pop
ret
xorb
jo
sbb
or
pushf
push
xor
push
subb
xor
clc
pop
mov
xor
divl
mov
xorb
push
shll
or
fcoml
push
outsb
cwtl
mov
mov
inc
jo
and
jle
sub
add
fs
inc
insb
mov
jmp
jmp
mov
hlt
int
cmp
mov
adc
enter
sub
or
cs
or
jecxz
hlt
enter
inc
adc
sub
add
shr
mov
imul
dec
js
mov
inc
movsb
es
dec
jg
inc
sub
push
lea
sbb
adc
cld
push
aad
mov
test
jne
sar
dec
cmp
mov
sbb
popa
inc
push
dec
sub
lret
insb
sub
jg
je
jae
sub
dec
add
shll
pop
mov
and
std
pop
add
sbb
sbb
dec
loopne
pushf
mov
jns
push
pop
add
push
dec
imul
dec
pop
adc
add
pop
and
xchg
dec
clc
or
hlt
and
jmp
mov
pop
pop
push
inc
sti
insl
push
push
popl
jne
and
sti
add
mov
xchg
sbb
fidivs
mov
into
imul
fistpll
and
cmp
test
scas
jno
clc
outsl
cs
jno
mov
shr
not
and
cmpl
dec
add
sbb
shll
cmp
push
jle
pop
data16
dec
add
mov
les
cld
jmp
xchg
jge
in
outsl
cmpsl
enter
pop
lock
mov
int3
jnp
dec
pop
or
or
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
cmpb
push
xchg
lods
push
roll
mov
jmp
dec
in
adc
cmpb
lea
loop
jp
mov
jle
jne
fwait
repz
lock
je
sub
or
stos
pop
negb
add
scas
jp
push
or
out
fstpt
gs
push
or
jnp
mov
dec
sub
dec
inc
adc
dec
adc
pusha
add
and
push
bound
or
mov
pop
or
pop
int
mov
mov
adc
push
lea
push
mov
std
in
nop
outsb
les
lods
jne
fnstsw
or
mov
cwtl
xor
das
mov
adc
outsb
orb
adc
jne
jae
cmpsb
dec
data16
lret
jp
mov
stos
stc
xor
fisttpll
addl
or
push
imul
sbb
je
popfw
andb
and
cmpb
or
adc
jbe
push
fucomi
fwait
pop
mov
fildl
adc
add
mov
pop
mov
mov
pop
inc
ja
je
fcmovnb
add
inc
mov
xchg
repnz
rorb
pop
mov
pop
jo
roll
int3
dec
jne
or
test
or
sbb
add
dec
out
js
ljmp
ja
sub
shr
cld
sub
dec
clc
incl
idivl
lea
push
out
inc
inc
cld
mov
sbb
call
dec
jne
rcr
orb
add
or
jo
adcl
mov
jo
sub
fs
inc
fnstsw
pop
mov
mov
lock
push
mov
jne
or
icebp
stos
popl
and
pusha
dec
lods
xchg
les
stc
adc
jne
xlat
sub
movsb
stc
add
push
dec
incl
jb
cld
and
dec
cmp
mov
shlb
and
inc
jle
push
adc
int3
inc
flds
cmp
ljmp
dec
adc
int3
push
pop
lock
aam
xor
mov
push
cs
add
pop
add
cmp
nop
or
or
push
jns
push
pop
inc
cs
add
or
adc
in
incl
mov
jb
testb
sbb
add
adc
scas
data16
mov
pop
push
jns
cmpsb
pop
push
pop
adc
add
adc
scas
mov
pop
js
and
and
js
cmp
sub
push
and
xor
add
cld
mov
outsl
adc
lock
hlt
shlb
ja
jge
in
push
xchg
sub
pop
xor
push
sar
add
jp
movsb
pop
imul
addb
cld
pop
test
xor
cmp
xchg
or
into
je
fisttps
pusha
test
pop
mov
orb
fcmovu
ja
ja
mov
jo
dec
ficoms
add
mov
loope
loope
push
dec
lea
mov
adc
jl
sarb
jo
push
lods
push
cmp
lods
xchg
lret
bswap
mov
insl
jo
rdmsr
cmp
test
test
add
cld
ljmp
sbb
mov
lods
pop
and
call
dec
push
push
push
jge
or
shr
subl
jg
jmp
in
or
xor
stos
dec
add
out
fldcw
push
nop
cmp
and
push
or
pop
xor
idivb
fdivs
push
jne
mov
mov
fnstenv
jmp
jnp
add
xor
je
daa
or
arpl
adc
sub
mov
and
push
push
sub
pop
lcall
jle
lods
cmp
je
mov
jle
push
push
add
and
mov
push
sbb
sub
cmp
cmp
incl
inc
mov
jbe
mov
dec
mov
and
push
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
and
and
test
add
mov
pop
xchg
sbb
push
test
cmp
xchg
testl
mov
decb
jne
ds
popf
pop
add
sub
dec
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
xor
xorb
push
or
das
pop
pusha
mov
sub
jge
rorl
mov
or
ret
out
or
dec
mov
or
inc
or
inc
or
push
mov
mov
aaa
sub
or
or
adc
lock
lcall
sbb
mov
lea
xchg
scas
xor
sbb
sbb
adcb
pop
add
shlb
dec
xor
leave
add
and
in
push
push
mov
inc
cld
push
push
push
push
add
hlt
les
mov
ds
xor
ljmp
pusha
mov
xchg
adc
mov
fists
jbe
lea
shlb
sbb
add
btc
cli
lea
mov
mov
push
sbb
pop
jnp
les
es
testl
push
aaa
je
hlt
sub
push
push
xor
test
sbbb
add
adc
pop
out
sub
jp
inc
mov
ret
lcall
pushl
add
sub
cs
xor
push
mov
and
jge
xor
inc
call
pop
jmp
ljmp
cmp
xor
push
add
call
cmpl
outsb
arpl
mov
add
cmp
xchg
sub
loope
xor
gs
insb
sub
adc
mull
xor
mov
out
in
sbb
adc
xchg
pop
and
cmp
loop
add
movl
cmp
sub
sub
sub
nop
mov
mov
xcrypt-ofb
cmpsl
lods
lahf
push
or
in
push
clc
mov
xchg
mov
cmp
mov
or
cmp
pop
inc
in
testb
test
hlt
or
inc
mov
pop
inc
mov
out
lock
add
hlt
fnstcw
call
push
xor
and
and
lea
mov
imul
adc
cmp
push
int3
and
int3
xchg
arpl
and
test
in
xor
call
adc
cmp
cwtl
pop
lods
add
stos
pop
outsb
push
fneni(8087
shl
das
add
jae
sub
mov
jne
push
sub
and
jne
push
xchg
sub
and
fsubr
dec
mov
pusha
sbb
add
push
inc
xchg
cmpb
cmpl
or
mov
push
push
inc
push
sbb
mov
js
push
push
mov
loopne
push
jmp
call
xor
dec
adc
popf
sub
and
dec
pusha
jbe
cmpsb
push
or
sub
sbb
cmp
jne
or
adc
rcrl
int
dec
cmp
jge
inc
mov
fnstcw
in
test
lds
sarb
nop
and
add
inc
and
loope
push
ljmp
add
xchg
std
imul
jle
push
xor
jg
pop
div
mov
aas
or
std
pusha
ja
clc
mov
cli
sbb
pop
outsl
pop
lods
int3
push
jmp
push
pop
pop
and
hlt
add
pusha
inc
jnp
cmp
hlt
hlt
mov
cwtl
cmp
call
push
iret
test
jecxz
daa
and
or
lret
push
std
or
sub
call
lods
mov
fcomi
je
xchg
sbb
dec
adc
cmpsl
pop
sbb
sbb
dec
mov
lret
jb
inc
jge
cmp
hlt
cmp
je
movl
sub
subl
in
push
inc
or
xchg
shlw
cwtl
or
push
adc
fs
adcl
pusha
popa
push
sbb
idiv
xor
jbe
int3
movsb
test
out
cmp
or
adc
pusha
adc
push
int3
sbb
iret
mov
xor
cmp
fisttpl
cmp
push
cwtl
outsl
pop
pop
pop
cmp
jle
adc
mov
lds
in
lret
push
mov
les
test
stc
jbe
sub
cmp
je
movl
xbegin
outsb
inc
xor
in
sbb
bound
mov
and
mov
ds
inc
and
movsb
movsl
pusha
in
push
lock
pusha
sbb
sbb
and
xchg
stos
popa
clc
push
jecxz
arpl
adc
jp
cwtl
mov
xor
inc
sbb
lea
sub
dec
and
imul
or
fisttpl
mov
sub
repz
push
xor
jmp
hlt
aad
xor
cmp
stos
sbb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
inc
cmc
cmp
jg
xor
and
je
mov
push
lods
into
or
in
jnp
push
or
ror
shr
and
jns
or
lret
jmp
sbb
jo
xchg
mov
inc
mov
inc
cmp
insl
test
inc
shll
inc
add
nop
and
les
cmp
dec
jae
cld
push
in
xor
sub
and
cmpb
and
addb
mov
xor
pop
push
ja
repz
pop
es
xchg
roll
imul
xchg
xchg
daa
dec
jno
pop
add
cmp
xor
hlt
mov
push
jmp
fcompl
cmp
movsl
add
movzbl
dec
rcr
xlat
stos
jne
pushf
jmp
or
out
je
leave
pop
out
ja
inc
inc
and
andb
mov
or
jmp
push
dec
or
adc
or
es
mov
push
or
sahf
or
and
insl
jne
movsl
xchg
imul
pop
icebp
mov
divl
jle
adc
jo
xor
fisttpll
ret
mov
xchg
out
add
jmp
dec
mov
mov
fimull
push
test
jne
jle
shrl
cmp
and
sarl
xor
or
cld
test
or
push
adc
test
pop
or
and
mov
inc
rorl
test
cmp
push
pop
fdivl
fimull
or
shl
xor
std
lock
movsb
adc
and
sbb
cmp
inc
pop
dec
mov
mov
lret
cld
daa
mov
dec
sub
js
cltd
xor
jae
imul
shrb
dec
test
into
push
hlt
pop
add
cmpsl
and
push
adc
cltd
adc
xchg
push
shlb
test
clc
int
push
xchg
les
cmp
xor
add
test
push
sub
mov
xchg
into
insb
addr16
cmp
push
dec
jmp
ja
dec
je
push
rol
push
jmp
adc
outsb
ljmp
je
add
mov
sbb
sbb
xorl
and
cmpl
push
inc
sbb
in
ret
rorb
push
or
outsb
and
daa
adc
ss
fmull
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
ret
jb
jl
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
outsb
sarb
aam
sub
ficompl
sbb
sub
or
and
mov
inc
mov
or
xor
adc
adc
cmp
xor
int
sbb
test
push
sbb
or
int
dec
loopne
sbb
push
lds
ss
pop
pop
pop
push
add
jae
lock
jbe
add
stos
add
jmp
fs
mov
mov
xor
lea
out
mov
push
pop
leave
aas
aam
dec
pop
add
in
fistpll
cmp
add
add
push
and
data16
sbb
adc
jne
cmp
jne
push
or
sbb
shl
push
ret
xchg
inc
rclb
sbb
push
mov
mov
push
mov
mov
into
mov
dec
add
mov
andl
pop
icebp
lea
mov
push
push
lahf
movb
test
add
aam
pop
dec
cld
daa
adc
fldt
push
push
and
call
mov
push
push
jg
push
adc
mov
add
cmpsl
into
enter
mov
je
cmpl
dec
insl
outsb
or
cmp
mov
or
mov
or
jl
mov
cmp
mov
cmp
insl
cltd
mov
dec
mov
cmpl
int
push
or
push
or
push
or
mov
add
mul
push
mov
adc
aas
adc
add
imul
pop
pop
mov
shl
dec
test
lods
xor
or
mov
lea
stos
xchg
aad
ja
call
js
lock
jmp
adc
jge
or
xchg
addr16
test
lret
nop
xor
ja
decl
stc
movb
pop
jmp
xor
push
clc
stc
add
xchg
test
add
int3
mov
aam
mov
aam
and
popf
cmp
lock
in
push
mov
dec
cld
and
cmpb
lock
sub
push
add
sbb
or
clc
nop
mov
pop
sbb
adc
add
push
push
sbb
faddl
mov
sarl
pop
adc
push
enter
inc
push
sub
or
or
sub
push
hlt
mov
jge
add
nop
je
mov
in
xor
aaa
rcrl
call
mov
and
inc
sahf
icebp
mov
repnz
outsl
cld
aas
mov
cmp
jle
cmp
jns
lea
je
sub
mov
je
mov
dec
add
test
mov
in
je
lea
loopne
pop
sbb
std
push
push
popf
pop
jg
scas
adc
rcrl
inc
sahf
hlt
adc
cmp
data16
int3
add
cmpsb
aam
or
pusha
in
add
je
push
imul
sub
ret
add
popa
and
loopne
test
or
mov
or
paddusw
sbb
add
xor
lea
push
lea
jns
inc
pusha
dec
addl
push
sarb
or
push
sbb
sbb
loopne
adc
enter
push
shrb
xchg
adc
ret
sub
jbe
add
lds
shl
movsl
decb
enter
push
shll
add
lock
shll
jo
and
mov
outsb
xchg
loop
adc
sub
or
add
and
pop
lods
push
mov
sbb
jle
cmpl
mov
adcb
int
push
cmp
ljmp
aas
jmp
hlt
inc
and
add
movl
sbbl
sub
xchg
sbb
inc
inc
jnp
call
and
cmp
push
xor
decl
dec
or
mov
cmp
je
cmp
and
push
and
adc
insb
adc
pop
push
cmpsl
xchg
dec
add
add
lds
movsl
mov
ljmp
xor
or
test
je
movsbl
sub
jmp
idiv
jg
jo
je
mov
sub
cmp
ja,pn
xor
add
cmp
jae
push
ror
outsl
movsb
cmp
jbe
sbb
and
sbb
and
add
mov
adc
flds
cmc
mov
push
in
cmp
lds
clc
icebp
sbb
ja
lret
jne
jbe
inc
ret
add
and
sar
and
pop
xchg
add
and
ret
cmpsb
cmp
in
rolb
jmp
inc
xor
jno
adc
cmp
fadds
or
adc
push
nop
mov
loop
lock
bound
dec
clc
or
adc
leave
je
push
aam
inc
ret
lock
mov
mov
or
out
daa
mov
and
jb
cmp
or
out
ja
add
cmp
adc
cmp
jne
insb
push
pusha
aas
out
xor
adc
mov
add
and
pop
sahf
xor
inc
aas
push
jl
push
add
sbb
mov
loope
bound
jnp
lcall
lsl
jmp
push
pop
push
pop
lock
int3
push
inc
shr
rcr
shr
rcr
pop
jne
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
jns
div
or
cmp
or
xor
and
xor
adc
and
cmp
neg
neg
sbb
push
inc
call
pop
rorl
leave
xor
or
add
loope
push
or
add
loope
rcrl
jmp
rolb
pop
fisubrl
bound
add
movsl
jp
push
incl
add
push
popa
imul
insb
gs
bound
idivb
jmp
add
jb
gs
xor
cs
insb
inc
insb
outsl
jae
dec
popa
outsb
sbb
jg
gs
inc
gs
je
jb
jne
dec
outsb
outsw
inc
push
jb
mov
je
push
jb
arpl
jae
push
imul
arpl
pop
and
fidivs
cmp
jns
sarl
insl
insl
rorb
fs
mov
mov
outsb
je
sbb
xchg
subl
insl
add
arpl
jb
add
add
push
jne
jmp
and
push
dec
dec
jg
ja
push
push
and
inc
add
inc
mov
data16
push
xor
xor
inc
outsb
and
jo
imul
mov
jae
pop
fs
je,pn
dec
lock
mov
je
and
es
push
fadds
mull
cmp
and
arpl
or
xorb
fidivl
aaa
and
popa
arpl
jo
mov
sbb
xor
and
and
imul
push
xchg
sub
and
jne
dec
pop
rol
mov
rolb
les
das
fmul
stos
out
insl
bound
and
fisubs
adc
idivl
dec
mov
sbb
jp
or
pop
es
jne
in
add
outsl
je
and
sbb
loopne
jae,pt
sub
mov
add
insb
and
mov
shl
push
daa
sub
sbb
dec
sub
arpl
cmp
roll
arpl
jge
xor
add
inc
in
subl
pusha
insl
outsb
outsl
int3
or
push
sbb
icebp
rcrb
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
popa
xor
and
sahf
dec
mov
sbbb
and
outsl
outsl
adcl
xor
dec
inc
stos
jbe
inc
xchg
push
stos
sbb
pop
push
gs
shl
cmp
mov
mov
inc
lock
out
outsl
jo
xlat
outsl
xchg
imul
or
arpl
xchg
ret
jecxz
lcall
cs
inc
aaa
insl
in
sarb
mov
or
or
xchg
imul
pop
or
jne
ljmp
leave
js
cmp
shrb
call
cmp
cmpl
in
xor
subl
mov
cmp
or
addr16
jae
xor
add
xor
pusha
sbb
je
sbb
mov
loopne
dec
jb
push
sub
adc
sbb
inc
sub
pop
dec
jmp
dec
or
add
cmp
pop
sub
imul
inc
adc
lods
mov
and
dec
cmp
aas
leave
jae
cmpsb
or
sbb
leave
xchg
lea
mov
nop
xchg
mov
jb
xchg
xchg
add
int3
pop
sbb
xor
push
mov
frstor
out
or
push
je
xor
inc
adc
gs
icebp
or
jae
jle
rcpps
push
pushf
mov
imul
inc
daa
mov
xchg
push
in
sub
xor
mov
fnstenv
lcall
fst
mov
inc
xor
in
bound
sub
inc
mov
outsl
js
mov
outsl
bound
inc
push
lcall
incl
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
outsl
cli
jmp
and
es
sub
sub
sub
cs
jo
xor
cmp
cmp
xor
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
shlb
mov
imul
jno
pop
jne
ja
jns
or
cld
jnp
jge
jg
cmp
sbb
pusha
add
add
leave
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
push
fisubl
add
addb
xchg
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
add
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
push
inc
add
xor
ret
or
or
mov
xor
lcall
pop
add
cmp
cmp
dec
fs
dec
and
jns
add
das
push
ffreep
xor
inc
and
push
call
sbb
dec
outsl
jbe
jp
clc
mov
adc
sub
addr16
push
dec
scas
insb
out
dec
jne
xchg
outsb
gs
jo
imul
dec
popa
jb
push
jne
inc
popa
cmp
fdivrl
scas
cmpsl
xchg
out
jnp
popl
ja
addr16
push
xor
xor
outsl
in
push
push
gs
sbb
out
sti
cmp
push
jne
xchg
mov
dec
inc
ds
adc
roll
pop
pop
add
or
adcl
cs
shll
pop
data16
inc
jb
push
nop
arpl
movb
stos
jo
js
fs
push
push
lods
mov
frstor
pop
and
lcall
pop
jmp
mov
pop
xor
int
jmp
pop
xor
bsf
mov
and
mov
mov
push
popa
negl
fmuls
enter
arpl
arpl
fisubrs
imul
mov
pop
insb
mov
or
out
xchg
rcrb
sahf
jbe
pop
enter
insb
jp
mov
inc
cmp
jnp
dec
jg
and
xchg
pop
mov
sub
xchg
rcll
jae
call
cmp
sub
sbb
or
cmp
sub
sbb
or
ds
pushl
cs
push
push
push
inc
cmp
sub
sbb
or
xor
and
adc
add
xor
and
adc
add
xor
or
daa
pop
pop
sysret
sub
xor
cmp
inc
and
pop
das
getsec
pop
aas
pop
es
incl
cs
ss
ds
and
adc
sub
xor
cmp
and
sub
xor
cmp
and
incl
sub
xor
cmp
and
sub
xor
cmp
mov
and
pop
lcall
test
add
or
or
movups
idiv
call
adc
push
adc
sbb
add
adc
sbb
adc
sbb
ljmp
xor
and
xor
daa
cmp
xor
sbb
test
neg
in
decl
or
or
or
or
pop
add
add
add
sbb
or
or
push
or
or
pop
inc
stc
incl
dec
pop
add
add
or
push
xor
fistps
add
pop
lar
push
test
in
or
pusha
push
pop
or
movb
or
pop
add
mov
or
sbbl
dec
data16
movsb
or
cmp
mov
sub
or
add
or
mov
popf
insl
jbe
and
push
add
and
pusha
or
mov
test
ror
cltd
ss
mov
xchg
xor
cwtl
pop
pop
pushf
aam
pop
dec
or
ds
pop
inc
aam
pop
or
xorl
jp
mov
push
or
pop
add
add
int
xchg
into
cli
add
jle
xor
cld
dec
inc
push
push
xor
mov
add
xor
add
or
bound
or
push
push
in
or
cld
or
pop
add
add
cmp
mov
in
push
add
add
inc
push
add
popf
loopne
mov
jb
imul
add
inc
or
loopne
out
movb
pop
or
inc
sub
xor
or
or
add
ret
pop
add
or
adc
pushf
add
xor
cmpsb
js
cmp
mov
cmovs
adc
sbb
lock
pop
sbb
push
and
repnz
out
adc
sbb
inc
push
and
sub
testl
mov
pop
add
push
pop
pop
add
cmp
fisttpl
sbb
push
movsb
fwait
cmp
or
or
or
aaa
or
in
outsb
scas
adc
adc
adc
and
outsb
daa
xor
in
jbe
frstor
das
push
xorps
xchg
insb
das
insl
daa
jo
sbb
add
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
pop
sbb
addr16
out
jle
mov
push
or
repz
fdivs
adc
mov
rclb
jns
out
sbb
sbb
cmp
repz
mov
les
iret
repz
push
jl
sbb
loopne
sarl
and
mov
dec
js
iret
repz
jns
jp
push
iret
cld
adc
add
fbld
stc
fnsave
jg
add
xor
fildll
aas
out
mov
mov
das
or
pop
pop
stos
and
mov
add
and
inc
jb
push
inc
bound
aas
dec
xchg
add
inc
incl
adc
shlb
jns
in
or
andb
fbld
popl
orb
pop
shll
mov
lgs
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
rolb
mov
inc
movl
pop
arpl
or
push
ljmp
mov
rol
sti
adc
pop
push
xlat
mov
es
xchg
mov
sahf
out
aam
int3
out
sahf
out
sarb
sahf
cwtl
nop
pop
test
iret
repz
insb
push
iret
pusha
pop
pop
push
dec
inc
sahf
ja
cmp
xor
push
and
cmp
out
or
clc
shr
clc
cmp
repz
les
push
sub
mov
push
and
mov
mov
jg
push
xchg
xchg
cmpsl
jb
addr16
xorb
icebp
mov
push
jle
adc
push
nop
outsb
rolb
mov
and
iret
repz
pop
js
mov
repz
imul
insl
add
repz
cmp
pop
ja
mov
lahf
cmpsl
stc
cmp
adc
das
dec
insb
add
add
add
fs
inc
nop
dec
sub
adc
stc
sub
stos
inc
inc
dec
push
and
cld
repz
push
ss
sub
add
add
add
pushl
testl
psraw
lahf
jmp
ret
jecxz
dec
fwait
dec
sahf
lds
ja
sub
outsl
jle
fsts
add
aaa
cltd
sar
jp
dec
xchg
push
mov
and
mov
push
add
movsl
ud0
jmp
daa
shll
flds
je
imul
pop
xchg
sarb
cmp
cmp
insb
sub
test
cmp
pop
ret
jp
push
pushl
nop
int
jb
pop
or
mov
shrl
mov
icebp
enter
push
in
jne
jecxz
enter
and
fwait
movsb
ljmp
fwait
outsb
sti
ret
call
outsb
xchg
inc
adc
or
cmp
sub
jno
call
mov
lcall
in
mov
and
scas
and
in
cli
addb
sub
jmp
call
arpl
dec
dec
adc
aam
xchg
jg
xchg
push
or
sbb
ljmp
dec
lcall
mov
adc
mov
lcall
pop
orb
idiv
rorb
lods
call
mov
sbb
insb
push
fisubrs
arpl
adc
in
sub
das
mov
das
jp
and
inc
jb
bound
adc
decl
inc
aas
shlb
into
ljmp
frstor
je
inc
lahf
cltd
jmp
jnp
push
outsl
out
jno
jns
ss
mov
loopne
lahf
adc
pop
lods
test
sbb
loope
adc
aaa
pop
xchg
lds
sub
aas
and
out
ficoms
jl
jecxz
mov
incl
sbb
pop
mov
scas
lock
cs
test
incl
lods
cs
das
cmp
ja
test
mov
inc
incl
icebp
sbb
stc
cmp
mov
test
dec
or
sbb
jmp
pop
sub
jae
add
cmp
hlt
xchg
out
dec
push
in
push
sub
push
dec
iret
in
aas
les
xor
push
rorb
xchg
jae
xor
and
push
dec
push
xor
test
sahf
decl
hlt
xlat
or
testl
dec
loopne
mov
push
les
and
xorl
call
lds
sub
add
cmp
addr16
mov
test
clc
mov
sbb
dec
pushl
pop
sub
rorb
sti
dec
or
dec
mov
cwtl
mov
sub
ljmp
mov
repz
push
jnp
jecxz
jle
bound
loope
dec
es
xchg
pop
jp
jnp
xor
lret
fwait
or
push
je
mov
repnz
les
xchg
call
cld
lods
pop
test
push
dec
add
pop
jmp
rorl
aam
sub
push
testl
arpl
jno
mov
mov
cltd
mov
incl
xor
inc
icebp
dec
lods
push
add
pushl
add
mov
ret
sbb
add
jb
cmp
mov
fs
push
xlat
and
lret
push
adc
cmp
push
mov
out
jb
mov
aad
lcall
fbld
mov
push
lcall
ljmp
andl
push
pop
test
cmp
outsb
movsl
and
xor
lcall
das
sub
fldt
inc
ret
cwtl
repz
push
sub
dec
nop
decl
test
or
stc
test
dec
gs
repz
lock
push
sub
dec
push
cmp
popa
js
jmp
js
mov
or
jnp
ret
into
in
lods
mov
mov
ret
cltd
xchg
mov
dec
sbb
decl
incb
pop
add
lock
sub
mov
sar
mov
int
mov
bound
insb
mov
fstpl
jns
or
add
push
cmp
jge
or
mov
pop
jmp
or
mov
not
xchg
dec
test
cli
dec
xchg
add
push
xor
gs
pop
sarl
mov
aaa
mov
inc
jge
jns
imul
add
repnz
divb
cmp
jle
in
imull
cmp
aaa
xor
sbb
call
adc
or
pop
pop
inc
push
dec
lahf
and
sub
adc
add
adcl
fidivrl
lcall
lret
outsb
aam
push
mov
jg
loope
call
adcl
xlat
adc
lcall
in
cmp
or
nop
incl
js
gs
inc
bound
inc
mov
bound
leave
push
nop
mov
lds
aam
mov
popf
ficoml
push
lcall
cmp
mov
aas
xchg
xchg
fidivrl
jno
sub
insl
in
xor
test
insb
test
xchg
and
lcall
push
cld
sub
inc
in
lcall
xchg
xchg
in
jo
or
bound
stc
pop
jb
adc
pop
xor
dec
cli
fwait
adc
sar
jg
decl
fcmovnu
inc
or
pop
insl
xor
sub
nop
jo
mov
scas
into
jnp
fmul
or
push
xorl
fnsave
xchg
mov
scas
repnz
mov
sub
xor
sbb
aas
cltd
ja
cmpl
ja
mov
icebp
pushf
mov
fwait
mov
rcl
pop
jne
mov
push
adc
sub
pop
dec
dec
mov
addb
ljmp
flds
imull
movsl
cs
daa
scas
leave
mov
dec
aaa
aam
pusha
cmp
push
rcrl
cmpsl
or
and
jno
mov
cmp
mov
ss
jae
pushl
incl
js
adc
push
mov
jecxz
jecxz
mov
cmp
shlb
loope
sbb
sub
scas
test
mov
pop
mov
inc
js
pop
sarb
cmpsb
shrb
cltd
ljmp
decl
je
out
pop
iret
or
mov
into
lcall
sbb
idivl
stos
jecxz
loopne
xchg
dec
shrb
jae
fistpl
in
stos
decl
sti
sub
loopne
jmp
sbb
stc
movb
pushl
xor
pop
rorb
push
stos
fadds
jno
xchg
scas
cmp
fwait
ljmp
lcall
dec
mov
outsl
push
aam
icebp
pop
sti
notb
jecxz
aaa
cmpsl
xchg
mov
adc
negb
mov
movsl
aad
push
and
jecxz
mov
lcall
or
adc
in
push
je
mov
or
in
mov
adc
and
sbb
imul
push
lock
fxch
jne
add
xor
jmp
adcb
in
mov
pop
jl
data16
lahf
leave
xchg
data16
ljmp
lods
jg
adc
pop
repnz
and
jns
lea
hlt
loopne
mov
dec
incl
mov
dec
sub
xchg
fiaddl
lcall
and
pop
xchg
cwtl
jmp
lock
mov
add
push
dec
repnz
pushl
push
dec
lds
je
or
adcb
add
inc
stos
fistl
push
outsb
cwtl
sbb
pushf
adc
or
lods
aaa
fidivrs
xchg
add
dec
lods
push
incl
xor
lods
pop
dec
pop
dec
je
mov
xchg
cld
jecxz
mov
or
call
adc
inc
sub
inc
xchg
inc
xchg
adc
push
popa
mov
push
sub
cmp
lods
ljmp
lock
mov
jmp
mov
ret
imulb
xorl
arpl
ljmp
and
ret
and
je
jmp
xor
adcb
pop
mov
and
sbb
push
decl
add
ljmp
pop
jbe
scas
in
enter
jno
pop
lcall
call
sbb
jne
int3
lods
push
ret
test
cmp
dec
ja
adc
mov
sar
out
out
call
mov
mov
daa
sbb
inc
push
into
push
test
mov
in
out
test
jmp
andl
xorb
fstpt
add
adc
jmp
mov
loopne
sbb
xchg
push
cmp
dec
and
cmpsl
mov
pop
lods
cmpsb
jle
jae
shrl
ss
inc
and
jle
popa
sub
ds
lock
lds
dec
jg
mov
mov
hlt
or
imul
fdivrp
jmp
dec
cmp
sub
mov
sbb
add
fstps
mov
lods
mov
std
arpl
stos
inc
sub
gs
ret
flds
push
lcall
jg
cld
fdivl
cmp
addr16
mov
xchg
mov
jg
mov
or
cmc
xlat
out
xchg
hlt
sbb
loop
push
jae
pop
mov
rorl
jmp
movsb
xchg
or
or
roll
std
mov
mov
aas
or
pushl
scas
ret
dec
xor
or
pop
stos
jne
dec
sahf
jne
sub
and
pusha
das
decl
jb
xchg
int
ret
inc
or
inc
xchg
les
xchg
add
jmp
adc
sti
inc
mov
in
mov
sbb
mov
ds
je
add
jnp
push
in
loope
lret
pop
je
es
shl
pop
mov
aas
inc
add
lret
fdivrl
jge
cmp
incl
fs
ljmp
test
stos
pop
xor
jle
decl
daa
jbe
mov
pop
push
ljmp
xchg
or
dec
jo
cmp
mov
sbb
xchg
mov
gs
cmpsb
idiv
jb
inc
pusha
out
fs
lcall
filds
dec
jns
dec
pop
fwait
adc
pop
dec
add
add
pop
dec
pushf
push
jmp
sahf
add
jb
add
mov
xor
xchg
cmp
mov
idivb
in
call
push
scas
cs
dec
cltd
jae
jecxz
or
or
decl
or
insb
icebp
cmpsb
xor
cmp
repz
and
pop
inc
movsl
mov
incl
pop
pushf
or
repz
push
mov
sarl
out
cmpsb
and
imul
mov
in
js
pop
and
add
jg
mov
inc
es
or
test
out
cwtl
aas
test
call
std
ljmp
enter
bound
ficompl
mov
adcb
gs
cwtl
test
mov
in
or
dec
inc
mov
xchg
pusha
hlt
pusha
dec
das
push
mov
repnz
call
lret
cs
xor
fnstenv
into
mov
or
inc
and
out
sar
decl
and
cltd
jp
insl
adc
fldenv
sub
ljmp
xor
scas
inc
stos
shll
push
xchg
std
sar
or
int3
into
int3
scas
mov
incl
rolb
inc
fwait
pop
jae
push
movsl
mov
imul
sub
pop
inc
lods
push
stos
cli
push
jb
xchg
jecxz
sub
call
push
mov
adc
outsl
fdivrs
out
add
adc
cmp
mov
decb
imul
fnstsw
lret
enter
fsubr
and
sub
mov
jnp
into
inc
sahf
add
mov
cltd
sbb
mov
mov
shll
into
sbb
call
jp
or
pop
int3
jo
jmp
xchg
sub
loopne
js
andb
jmp
mov
in
lcall
add
fisubrs
ret
and
mov
cltd
dec
clc
sbb
insb
sub
decl
cmp
clc
addr16
cmp
or
mov
adc
mov
and
shrl
jge
insb
test
sbb
aam
cmp
sbb
jnp
and
mov
pushf
pop
sub
sti
sub
pop
jmp
jg
jmp
pop
pop
out
dec
daa
pop
and
and
int
push
ss
push
dec
je
inc
aas
out
add
and
inc
imulb
sbb
ja
inc
inc
pop
loop
test
cmp
mov
push
push
jne
cmpsb
sbb
sbb
aas
js
out
jle
and
push
cmpsb
mov
into
adc
sbb
aas
out
jno
mov
inc
fadds
xlat
pop
icebp
jmp
pop
pop
and
dec
inc
mov
mov
mov
lds
xchg
adc
adc
mov
addb
xor
xchg
ror
sbb
sub
rol
cmpb
incl
bound
xchg
stc
add
loop
sbb
scas
lcall
jp
mov
push
mov
int3
repnz
fiadds
dec
loop
jne
idiv
push
cld
leave
or
mov
add
out
loopne
sarb
cwtl
mov
mov
sbbb
jg
stos
lcall
sub
jb
jg
dec
cli
inc
das
es
rorl
push
xor
mov
stos
fsubrl
subl
ror
outsl
push
outsb
int3
imull
jmp
inc
push
sub
mov
push
push
mov
or
jmp
sub
xabort
ljmp
dec
popa
jo
gs
sbb
mov
sub
mov
mov
ljmp
sti
push
shll
mov
mov
push
in
push
scas
mov
les
fnstenv
dec
inc
xchg
in
push
ret
pop
jo
popf
lods
xchg
or
out
int
xchg
loop
dec
je
aam
pushl
jmp
and
fistpll
arpl
out
loop
push
cmp
lcall
fwait
ja
or
aam
or
cltd
aas
fdivl
push
in
and
lds
pushl
mov
rcrl
jg
mov
xchg
cmc
fdivs
mov
pushl
fidivl
into
ret
outsl
xchg
inc
out
pop
inc
lds
popa
sahf
rcll
jnp
ret
dec
inc
imul
outsl
jmp
leave
fists
negb
mov
dec
mov
push
push
inc
or
mov
ror
inc
lret
pushl
movsl
les
jmp
pop
push
cmp
jbe
ljmp
cmc
mov
testb
mov
fildl
sbb
or
repnz
sbb
dec
lods
mov
xchg
popa
fldt
lahf
out
andl
cmc
cltd
fistl
in
push
mov
mov
loope
mov
jne
pushl
push
decl
outsl
jb
fwait
mov
cwtl
mov
mov
inc
xor
push
fisttps
xchg
call
ljmp
add
scas
nop
jnp
scas
iret
ja
cmp
add
jg
decl
fstl
lock
inc
push
inc
lahf
jecxz
ficompl
enter
cld
jmp
pop
adc
jnp
and
test
lret
sub
fsubs
and
subb
or
cmp
orb
sbb
cmp
popa
scas
cld
cmp
sub
cmp
addr16
aam
mov
pushl
adc
jmp
imul
jnp
out
decl
or
push
or
xor
jns
into
cmp
or
repz
jg
jmp
sbb
test
xor
xor
ljmp
ss
ja
mov
insb
out
pop
popl
inc
lods
mov
imul
push
dec
imul
dec
shr
adc
push
sub
xor
std
xchg
mov
ret
pop
leave
xchg
dec
push
sti
and
insl
cmpl
push
mov
mov
icebp
cmc
mov
ror
adc
js
je
scas
rorb
loopne
jmp
lret
insl
daa
clc
sbb
xorl
cld
xchg
std
or
cltd
scas
pop
jle
jl
lret
rep
in
cmpsl
xchg
mov
cmc
fnsave
add
mov
adc
test
call
dec
pop
fisubrs
or
inc
sbb
xor
outsl
repz
lea
sub
sarb
jle
adc
ds
adc
loope
leave
xchg
xchg
test
lcall
pop
out
cmp
subl
pop
inc
loop,pt
pop
gs
push
xlat
mov
xchg
neg
jg
arpl
push
lds
mov
jns
test
out
popf
jnp
pop
call
mov
push
or
mov
add
rcl
sub
and
push
sub
mov
pushl
push
nop
lret
xchg
dec
add
daa
loopne
push
pop
sub
cmp
lret
lret
imul
jmp
inc
lret
pushf
loope
ja
test
push
sub
icebp
adc
sbb
jmp
int
ds
push
mov
scas
inc
in
mov
or
fidivs
add
jg
adcl
pop
jmp
negl
or
sub
push
stos
inc
ret
sub
lret
cwtl
fstpt
lds
es
inc
or
movsl
stc
sti
push
cld
pushl
mov
mov
jo
pusha
jle
les
cmp
mov
call
adc
cmp
sti
dec
outsl
xchg
pop
mov
push
mov
decl
scas
fistpl
incl
or
jbe
test
stc
test
mov
movsb
or
lcall
xor
sub
popf
iret
shll
mov
cs
andl
xor
xchg
pop
dec
in
adc
pop
jb
inc
fstpt
mov
mov
mov
in
mov
mov
xor
lret
mov
out
in
mov
fld
idivl
mov
movsl
dec
xchg
mov
mov
scas
mov
cli
xor
pusha
das
lahf
in
xchg
idiv
leave
in
rorb
fbld
jmp
lds
jmp
scas
add
dec
cs
lahf
test
ret
bound
out
add
lea
imul
idiv
decl
mov
cmpsb
setg
and
mov
jge
clc
repnz
outsl
call
mov
dec
mov
xchg
dec
aaa
ds
pop
xchg
ljmp
mov
leave
fiadds
jecxz
loop
cmp
orb
inc
repz
ljmp
leave
fdivr
aas
enter
xchg
mov
pop
lcall
or
jmp
ljmp
xor
dec
xor
pusha
or
mov
inc
das
or
call
cmp
dec
inc
outsb
adc
xchg
sbb
int
sahf
pop
push
pop
xor
xchg
sti
xor
cmp
decl
dec
imul
cmp
fs
or
mov
decl
sub
mov
rol
and
dec
data16
arpl
mov
sbb
sub
incl
jnp
shl
out
int
enter
mov
and
adc
pop
cs
leave
jp
jo
jle
ljmp
inc
jge
jnp
ja
ljmp
das
imul
decl
pop
hlt
or
xchg
inc
dec
jmp
or
enter
mov
es
subb
jge
mov
mov
mov
jmp
inc
lcall
mov
jle
inc
push
mov
add
cmp
decl
pushf
jge
cld
addr16
and
insb
push
xor
mov
or
decl
xchg
leave
or
jb
rolb
outsb
jp
dec
jo
and
iret
ja
mov
mov
fisttpll
mov
push
or
dec
and
push
mov
mov
scas
cli
lock
mov
je
pusha
jo
popl
inc
cmpsl
in
popf
rol
popf
mov
pushl
mov
sbb
xor
insl
jecxz
add
xchg
adc
cmp
and
mov
push
add
jne
sbb
int3
or
jo
cmp
out
rcr
mov
out
faddl
dec
data16
adc
dec
ds
testb
mov
std
out
loope
inc
sar
inc
push
mov
xor
outsl
js
ljmp
xchg
out
mov
mov
stc
lcall
pushl
inc
aam
cmpsl
jo
inc
and
fucomp
sbb
cmpsb
test
pop
repz
ret
int
call
add
rorb
jbe
cld
jae
notl
inc
mov
mov
call
mov
or
ja
push
xchg
in
adcb
daa
add
jle
push
or
pushl
subb
stos
pop
xor
xchg
push
in
sub
scas
jnp
test
test
cmp
inc
idiv
mov
ss
xor
incl
xchg
mov
mov
clc
mov
mov
movsl
not
loop
push
rorl
jg
js
add
and
pop
hlt
and
movsl
cs
jge
cld
cmp
lret
incl
loopne
dec
jo
fadd
jne
lcall
arpl
add
pop
ret
daa
and
mov
jle
inc
pop
adc
mov
fsts
and
cmp
xor
std
sahf
inc
sbb
push
sbb
mov
or
int3
repnz
jo
movsb
cmp
int
mov
aad
sub
or
fs
mov
xchg
or
shlb
icebp
mov
jmp
sbb
mov
insl
lea
mov
ret
push
jnp
pop
iret
fadd
xor
call
and
mov
sub
mov
outsl
outsb
push
mov
sahf
xor
push
call
loopne
fmull
mov
jns
fisttpll
jnp
sbb
popa
ds
stc
mov
sbb
pushl
test
mov
sbb
sar
push
mov
shrb
out
mov
ja
fiadds
push
adc
ljmp
xchg
int3
mov
cmpsl
cmp
ds
dec
jb
xor
mov
lods
push
loop
decb
pop
lret
int
call
test
not
mov
in
lock
mov
loope
mov
gs
mov
cwtl
js
je
sub
push
sbb
mov
lret
jno
add
lahf
and
das
jo
mov
jmp
and
gs
lret
mov
aaa
and
inc
sub
movsl
andl
mov
arpl
call
pop
add
mov
rcl
cmpsb
dec
out
lds
push
cmpsl
sub
mov
jmp
insl
dec
mov
mov
outsl
test
jmp
pop
scas
mov
pushl
cmp
out
mov
sub
mov
xor
sbb
stc
movsb
dec
dec
mov
fdivrl
dec
pushl
les
jmp
dec
shl
jg
fldt
dec
cmp
call
loopne
jmp
add
aas
lods
ret
loope
fmuls
sbb
incl
jnp
aaa
jecxz
cmpb
aam
ret
jo
jmp
mov
hlt
ljmp
int
sbb
mov
sbb
leave
sbb
lock
jne
int3
xchg
ljmp
decl
aad
add
mov
je
xchg
ljmp
push
orl
push
cld
pusha
rcll
sarl
ret
xchg
mov
mov
mov
push
jmp
stos
push
fst
mov
stos
sub
or
into
ret
je
push
pop
mov
or
lcall
jl
cmp
push
adc
shrd
dec
aaa
stc
xor
out
fwait
in
decl
lcall
out
js
mov
add
in
mov
int3
addr16
fcomip
and
inc
mov
pause
out
sbb
arpl
push
inc
mov
pushl
sub
dec
out
cmp
sub
sahf
std
unpckhps
bound
lock
call
pop
scas
mov
xchg
sbb
adc
testb
stos
incl
loope
dec
mov
xor
dec
pop
out
std
adc
and
or
mov
loope
add
cmp
mov
and
stos
std
inc
cmc
out
dec
cs
scas
test
xor
ljmp
adcl
lret
cmc
ret
dec
push
mov
jl
jae
mov
scas
in
mov
int3
jae
xchg
cmp
sbb
lods
jns
imul
decl
jbe
inc
jg
or
jge
or
fs
push
test
aaa
or
xor
decl
arpl
jge
stos
clc
into
jecxz
or
pushf
fisubrl
lret
popf
cmp
lcall
vpcmov
mov
mov
cmp
arpl
pop
push
lds
pushl
push
xor
pop
xchg
mov
test
pop
cli
decl
adc
push
mov
ss
repnz
ret
mov
and
adc
xchg
loopne
ljmp
mov
jns
mov
push
ss
les
or
jmp
jne
xorb
sbb
xor
je
int
jmp
jg
cltd
mov
mov
dec
in
sub
adc
cmp
inc
cmp
add
pushl
jle
movsl
movsl
xor
mov
inc
and
xor
cmp
rcrl
mov
sbb
and
ret
jl
arpl
and
jb
xchg
movsb
jno
in
cwtl
push
and
cld
decl
rorb
cmp
add
loope
loopne
mov
out
andl
pop
adc
or
jge
js
ja
bound
clc
decl
jnp
fstps
fs
jmp
inc
insl
and
test
lock
pop
enter
popf
push
mov
push
push
ljmp
cld
loopne
rorl
mov
dec
pop
or
jne
cmp
push
inc
je
call
adc
sbb
cmpsl
inc
and
stc
push
negl
das
outsl
incl
notl
jg
and
in
psllq
popa
jle
cs
and
lahf
jne
xor
out
jnp
mov
leave
ljmp
pushf
cmp
loopne
mov
fstps
adc
lcall
and
push
int3
inc
ljmp
in
lds
mov
add
ret
ljmp
int
mov
movsb
jge
mov
pop
mov
jb
mov
imul
inc
imul
in
les
xchg
jle
cmp
jp
adc
add
jp
mov
jmp
adc
xchg
dec
addr16
sub
sub
push
mov
jne
jg
ss
xchg
jmp
aad
ljmp
stos
xchg
cmp
pop
ret
lahf
mov
cli
sbb
xchg
pushf
push
jg
push
popa
icebp
inc
sub
cmc
sbb
sbb
insl
popa
packuswb
movsb
xor
push
call
iret
outsb
into
addr16
sub
cmp
clc
bound
cld
inc
shll
jge
inc
arpl
das
xor
sti
push
cmp
das
popf
das
popl
fs
test
add
incl
orb
jno
add
push
out
ret
lcall
mov
pop
fidivrl
fsubl
adc
sbb
mov
cmp
cld
lcall
pusha
sub
stos
sub
mov
pop
add
cli
cmp
dec
xchg
orl
xorb
imul
aam
rolb
xor
pop
mov
pushl
das
mov
xor
jne
leave
out
mov
cmp
int
jg
stos
push
call
cld
push
loop
mov
addr16
jge
dec
or
jo
xchg
jg
jmp
inc
pop
lcall
jge
dec
nop
mov
andl
sub
pop
pop
sti
incl
fbstp
divb
add
adc
lds
or
aad
lahf
js
loop
fistps
jg
sbb
add
mov
push
rolb
push
sar
cmp
lcall
xchg
add
sbb
sbb
cmp
and
xchg
fisttpl
and
jge
add
dec
lcall
dec
lods
popf
mov
repnz
imul
cmpl
add
or
aad
cmp
hlt
popf
mov
dec
out
out
add
mov
iret
adc
out
ds
cmc
outsb
ljmp
mov
mov
imul
bound
sub
jnp
aas
jge
ljmp
inc
lds
inc
fimull
fmull
xchg
adcb
cmpsb
mov
and
inc
sar
fcomip
dec
es
jo
mov
fsubrs
arpl
insb
outsb
mov
sti
daa
addr16
jmp
jmp
sbb
and
loopne
aas
add
jbe
pop
dec
or
decl
inc
test
add
pop
push
and
cmp
xchg
xchg
call
and
pop
cmp
dec
pop
aam
or
and
call
in
lea
sub
cmp
inc
ljmp
call
aam
or
ljmp
into
enter
cmp
jnp
mov
cmp
pushl
filds
les
cmp
shrl
aas
cli
outsb
cmp
in
dec
test
or
fidivrs
push
jle
mov
sahf
mov
jmp
dec
mov
xor
or
cmp
into
shll
pushf
adc
inc
out
test
sub
scas
or
xchg
insb
mov
mov
lcall
lock
lea
ljmp
push
mov
decl
fwait
stc
xchg
leave
out
add
dec
cld
mov
mov
mov
rcrl
push
out
repnz
out
ljmp
sar
mov
xchg
fwait
mov
test
sbb
and
lcall
or
lock
lret
and
lahf
mov
repnz
pushl
mov
cmp
rolb
mov
ljmp
dec
and
jns
in
jp
cmp
mov
jns
sub
dec
push
mov
push
mov
lahf
cmp
call
imul
jmp
cmc
sub
add
jmp
adc
jo
ljmp
mov
pop
pop
shrb
mov
movsl
loop
mov
pop
scas
xlat
pop
mov
out
dec
or
sbb
fstpl
jge
test
pop
es
inc
mov
incl
fistpll
inc
icebp
sti
cltd
dec
cmp
dec
nop
mull
mov
scas
xchg
cli
pop
out
xchg
xor
push
add
jmp
scas
mov
ret
ja
jle
out
add
mov
or
jg
pushl
push
outsl
std
lods
mov
les
cmpl
mov
xlat
ret
pslld
push
decl
call
fadd
lock
enter
and
mov
add
clc
decl
jmp
scas
cmp
pop
in
cmp
lods
sarb
pop
pop
mov
decl
add
sbb
xchg
jecxz
subb
mov
outsb
jecxz
mov
sbb
stos
cmp
pop
cmpsl
pop
pop
into
jne
incl
xor
nop
pop
lahf
ljmp
push
leave
ljmp
cmp
jb
mov
popa
arpl
iret
fsubrs
push
mov
xor
je
andl
jmp
sbb
adc
sub
adc
sbb
pop
cmp
popf
test
lock
std
jg
pushl
leave
push
or
cmp
cmc
push
fnsave
fmulp
repnz
mov
or
mov
jmp
cmp
outsl
daa
and
popa
sub
ja
dec
mov
pop
loope
mov
push
incl
adc
cwtl
movsl
xchg
cmc
mov
xor
aad
jle
ret
sub
jg
stc
jmp
pop
insb
data16
dec
mov
inc
stc
and
xchg
mov
in
jle
loopne,pt
data16
cs
shrl
es
sbb
and
cld
push
out
pop
cltd
pushl
adc
xchg
movsb
sbb
adc
cmp
movsb
pop
push
in
lea
pop
pusha
int
push
incl
inc
dec
jmp
je
sub
rcr
push
cmc
ljmp
incl
mov
adc
add
sbbl
mov
push
ss
out
call
push
and
jecxz
mov
out
in
inc
xor
pop
pop
adc
rcll
loop
cmc
mov
jmp
aam
popa
fimull
into
ja
fstl
sarb
xchg
shlb
jg
test
lcall
ss
push
jne
inc
cmc
bound
std
sbb
dec
lret
jl
aaa
mov
gs
call
test
pop
sub
fldt
jne
or
or
fs
filds
inc
cmp
fs
mov
aaa
xchg
add
insl
and
imul
sub
add
out
cmp
lcall
aas
ja
pop
lret
lret
icebp
movsl
jbe
sbb
push
jl
popa
mov
jno
mov
jo
mov
leave
call
fisubs
sbb
scas
repz
in
pushl
stos
xchg
add
adcl
aam
sub
pop
ret
mov
xor
iret
lcall
out
jno
icebp
cmp
cwtl
dec
or
mov
or
pop
sub
dec
jg
cmpsb
push
gs
call
scas
push
jle
dec
rorb
fstps
dec
stos
dec
movsl
adc
push
and
imul
call
jne
jge
fcmovne
push
imul
xchg
pop
jo
call
mov
mov
sub
lods
rcrl
pop
adc
dec
aam
adc
jns
decl
sbb
and
mov
fbstp
enter
push
sbb
sub
jo
mov
jmp
test
mov
sbb
push
or
pushf
fstl
notb
add
xor
call
call
andl
aad
jge
jne
jo
outsb
mov
mov
lea
or
sbb
insb
cmp
dec
cmp
mov
jmp
cmp
dec
sti
jae
add
pop
sar
gs
cld
outsl
mov
fwait
dec
jbe
aas
rol
movb
or
stos
mov
jo
and
insl
or
jmp
jbe
jge
stc
std
jae
push
pop
or
add
movsb
test
jmp
insl
push
mov
lcall
push
mov
mov
cwtl
pop
inc
xchg
xchg
or
dec
push
adc
leave
movsb
jae
mov
push
enter
cmpsb
cmp
push
inc
push
sti
sar
push
aas
push
push
imul
incl
inc
mov
mov
insb
sbb
sbb
sar
icebp
mov
sub
fisubs
lcall
add
mov
adc
xlat
data16
cmc
pushl
add
pop
ror
test
jle
cmpsb
fdivs
and
ret
out
clc
pushl
ficoms
sarb
lret
adc
stc
popf
jbe
pushl
xor
sahf
repnz
test
inc
outsb
test
idiv
test
push
and
loope
jbe
mov
dec
out
testl
dec
xchg
pop
mov
xchg
gs
decl
cli
popf
adc
dec
je
iret
push
movsl
iret
jbe
aam
jbe
xor
fs
popf
lcall
xchg
mov
leave
fnstenv
ds
xchg
inc
cmpsb
imul
fs
incl
lea
xchg
bound
push
sub
mov
push
popa
js
xchg
test
or
popa
sub
loop
imul
aad
jmp
or
or
sti
movsb
push
cmp
jecxz
cmp
inc
dec
jl
test
in
inc
jmp
test
dec
cmp
jnp
jb
js
add
cmpsb
notb
pop
jae
je
scas
xchg
xor
and
cld
addb
outsl
add
popa
mov
fsubs
jno
jmp
or
fmuls
xchg
xchg
lahf
mov
xchg
xorb
pop
es
scas
gs
xchg
mov
fmuls
cwtl
cmp
xchg
inc
sub
mov
outsb
bound
xchg
aad
cmpsl
pop
or
mov
stos
and
addr16
mov
cmp
add
inc
add
dec
inc
cmc
shl
xchg
aam
inc
cmp
insb
push
push
incb
and
fldt
decl
cmpsl
ret
jmp
mov
idivl
je
mov
fsts
popf
daa
decl
cmp
js
mov
pushf
je
mov
adc
cmpsl
push
mov
dec
jns
lcall
add
push
mov
cmp
mov
inc
cs
sbb
mov
ljmp
bound
adc
rorl
fimuls
add
pop
fildl
push
cmp
call
fldt
add
int
cwtl
sbbb
test
jl
push
stos
in
aas
sar
fcoms
cmpsb
mov
mov
mov
out
push
or
jns
into
insl
inc
repnz
pop
clc
in
into
lcall
push
add
mov
jo
cmp
lock
lock
inc
jp
pop
cmp
push
push
nop
sbb
lcall
shl
out
lods
aad
mov
pop
outsl
repnz
jb
mov
scas
mov
xchg
sbb
lcall
scas
fdivr
pusha
call
adc
frstor
shlb
ds
fs
push
mov
mov
xchg
cs
gs
inc
lret
add
push
call
sbb
loop
sbbl
dec
xchg
sbb
lock
punpckhdq
push
xchg
sub
inc
aas
cmp
push
xchg
jl
add
jge
cwtl
pushf
add
xor
dec
push
call
pop
pusha
popf
lret
nop
xchg
cmovne
jl
mov
inc
in
push
gs
pop
pop
mov
or
fs
scas
mov
jb
sub
jge
and
jae
add
dec
shll
dec
mov
cli
dec
dec
js
mov
ljmp
addb
sbb
lock
rcll
std
leave
outsl
in
push
fdivrp
out
icebp
sahf
je
out
cli
and
sub
xor
jne
dec
repnz
jecxz
cmp
in
push
jg
mov
pop
push
out
pop
std
testb
enter
push
or
call
sahf
push
or
cmp
or
mov
mov
shl
mov
incl
jbe
pop
xor
ret
jo
push
cmpsb
inc
sbb
cmp
mov
or
mov
jg
push
adcb
mov
push
adc
xchg
push
push
xchg
loop
pop
loope
lcall
int
incl
adc
scas
outsb
aad
andb
push
les
sarl
das
ljmp
inc
shll
out
in
mov
adc
mov
lods
fwait
inc
lret
dec
pusha
push
xor
jb
call
stos
loopne
lcall
pop
rcll
jp
clc
mov
mov
bound
out
fdiv
cmp
jp
push
xor
pushf
mov
cwtl
lea
outsb
adc
adcb
movsb
lcall
jns
and
add
jne
fcomps
push
out
cli
mov
adc
subw
mov
mov
sub
and
mov
into
inc
or
or
mov
jmp
sbb
nop
jbe
xchg
inc
xor
sub
outsb
sub
insb
push
sub
sub
aas
ds
inc
adc
push
adc
xorl
int
test
cwtl
fwait
imul
mov
dec
sub
test
add
movsb
xchg
sub
in
pop
loopne
mov
inc
shl
add
pop
adc
dec
sub
dec
rclb
pop
iret
xor
rcl
incl
mov
cwtl
adc
dec
mov
jnp
mov
and
jg
mov
mov
xchg
pop
lcall
rcr
decl
dec
push
aad
push
nop
nop
es
lret
xor
mov
fst
dec
lods
mov
cmp
dec
push
sub
push
mov
add
cwtl
ss
sbb
pop
mov
lcall
xor
jg
fstpl
mull
sbbl
xchg
cmpsl
test
mov
jns
jae
fstp
push
adc
mov
xor
data16
cmpsb
or
cmp
aad
incl
sub
mov
sbb
clc
std
popf
ret
enter
sub
insb
ljmp
out
out
popa
dec
jmp
fistps
xor
xchg
aas
dec
arpl
or
incl
mov
jne
pop
xor
test
pop
mov
jge
ror
out
ljmp
jecxz
test
push
movsl
xchg
mov
xor
stos
cld
mov
push
out
mov
adc
cwtl
out
fistps
ss
xchg
incl
or
mov
push
or
andb
out
mov
fldenv
repz
clc
fcmovu
es
cmpsl
pop
jae
mov
push
lret
cmp
adcb
jg
cmp
pop
out
out
js
addr16
push
sub
mov
dec
add
out
and
or
popf
add
test
dec
sahf
pushf
aam
mov
cmp
movsl
sbb
xchg
jb
add
cmp
ljmp
adc
xchg
lods
mov
push
or
sub
stc
cmc
jo
ljmp
add
bound
pop
sbb
test
jmp
cs
out
xchg
inc
fwait
add
jp
mov
pop
push
add
rorl
push
xchg
adc
adc
mov
and
ljmp
out
add
ret
pop
mov
lahf
daa
cmp
nop
xor
mov
jg
fbld
sahf
cwtl
leave
dec
rorb
mov
or
cs
decb
xor
and
mov
sbbb
xchg
push
imul
icebp
push
insb
fiaddl
mov
icebp
shlb
xchg
in
adc
mov
in
shll
je
or
cmc
and
or
jmp
cmpsb
bound
dec
stos
into
test
cmpsl
cmc
scas
pop
data16
jne
ljmp
mov
sti
test
jp,pt
sub
mov
dec
adc
mov
movsl
xor
fstps
sahf
dec
add
daa
jl
stos
mov
ljmp
arpl
adc
sub
adc
adc
in
inc
push
cmp
jnp
neg
call
cld
inc
push
repz
mov
xor
loopne
sti
mov
cmp
mov
mov
data16
lock
or
daa
xor
add
std
add
mov
add
ret
add
out
push
mov
cwtl
or
cmp
incl
dec
dec
jge
pop
adc
aaa
popa
cld
xchg
dec
cmpsb
xor
loope
add
sarb
jg
cmpsl
jmp
xorb
dec
jecxz
mov
mov
add
dec
aad
daa
ljmp
movsb
adc
push
mov
scas
mov
add
call
dec
dec
sbb
shlb
jmp
fisubs
push
fcmovu
pop
mov
jmp
adc
cli
push
add
stos
pusha
frstor
popa
insl
mov
mov
scas
lret
xor
mov
ljmp
jmp
mov
jp
cltd
repz
and
pop
jge
ss
jmp
dec
pop
inc
mov
sbbl
jle
jecxz
inc
mov
lahf
mov
cmpsl
cmp
in
fists
mov
loop
sbb
xchg
xlat
test
mov
add
jg
cmpl
pop
movl
aam
scas
mov
imul
inc
xchg
fwait
cmp
jb
sub
rolb
mov
rol
pop
int3
jns
pop
adc
and
mov
decl
lods
scas
adc
outsb
cli
orb
sbb
negl
ret
or
ljmp
shlb
shll
and
cwtl
ret
cmp
insl
mov
jmp
mov
jmp
push
pushf
lods
rcll
stos
push
xor
js
fisubs
lret
mov
bound
popl
and
dec
cltd
push
test
daa
jg
fbstp
cwtl
imul
outsl
sub
outsb
sbb
in
call
mov
sub
lahf
push
loopne
sub
mov
lcall
das
cli
pop
xchg
stos
jecxz
and
scas
out
inc
lods
mov
mov
or
and
mov
pop
aas
push
push
push
cwtl
sub
push
push
jecxz
jns
decb
mov
ja
inc
into
dec
cmp
cmc
push
leave
cmp
nop
stos
popf
and
push
xchg
pop
inc
inc
xor
lcall
loop
aaa
inc
call
mov
mov
aaa
leave
lret
jno
and
clc
mov
xor
add
jno
popa
cwtl
dec
cmp
loope
jge
call
loopne
popf
inc
cwtl
sub
add
orb
and
std
xchg
jmp
rcl
gs
cmp
in
das
std
dec
ja
sahf
xor
push
aaa
std
incl
rcr
hlt
jmp
pop
mov
mov
sub
test
push
idiv
call
push
aam
push
sub
outsb
jge
pop
xor
adc
jg
test
cmp
in
xchg
jae
call
addr16
movsb
and
dec
loop
negb
sub
pop
test
xchg
pusha
add
cmp
lss
push
mov
ret
lock
jp
xchg
inc
xor
mov
and
jle
mov
test
jne
addr16
jl
lret
loope
cli
xchg
loopne
add
aad
cli
inc
movsb
add
jbe
inc
arpl
pop
pop
add
arpl
fdiv
xorb
ljmp
mov
fxch
pushf
cmp
out
and
pop
mov
int3
inc
xchg
sub
cld
pushl
subb
lea
addr16
fistps
add
ds
push
mov
xchg
pushl
mov
inc
add
mov
cmp
clc
ds
sub
sub
jne
outsl
sar
jmp
adc
rclb
dec
cmp
or
scas
adc
jl
add
popf
or
call
pop
insl
data16
ljmp
push
fildll
es
mov
lcall
jbe
repnz
pusha
cmpb
mov
dec
mov
rcrl
mov
mov
jg
decl
cmpsb
and
cs
mov
xorl
jno
cmp
popa
sbb
mov
lock
dec
loope
into
mov
fwait
cmp
ljmp
das
scas
and
scas
mov
test
iret
mov
mov
dec
push
loop
popf
stc
dec
mov
jecxz
das
clc
lcall
xor
test
fistps
insl
aas
mov
stc
scas
jno
and
lcall
dec
mov
out
push
sub
movsl
int3
pop
mov
sbb
pop
cmc
jmp
inc
int3
addb
cmp
xor
icebp
nop
out
jg
add
test
jns
mov
mov
decl
lock
dec
arpl
stc
pop
dec
into
shrb
les
insb
imul
cmovo
mov
add
jne
sti
pop
or
or
and
xchg
jg
or
jb
adc
insl
testb
ss
cmp
es
fmul
mov
xchg
push
add
mov
inc
ret
arpl
adc
out
cli
aam
jns
cmp
pop
pop
push
add
out
addl
mov
add
inc
pushf
subl
mov
loope
scas
mov
aaa
fstpt
fs
adc
ss
adc
mov
jno
pushf
test
mov
in
mov
jmp
jae
or
add
sub
jb
push
push
lods
inc
imul
inc
adc
or
xorl
imul
lcall
cmp
push
lea
xor
lods
mov
cmpsb
in
pushw
cs
out
inc
pushf
cmpb
jecxz
xchg
imul
fcomip
mov
ret
xchg
xor
out
sbb
loopne
sahf
push
add
jmp
xor
pop
push
adc
sbb
mov
or
popa
ror
or
aad
add
mov
push
cmp
jmp
call
inc
or
mov
fucomip
addb
cmp
addr16
out
cli
jmp
arpl
es
fbld
push
pop
cmp
rclb
add
sub
push
std
add
mov
addr16
sub
jl
scas
aas
dec
and
das
add
enter
jae
sbb
mov
pop
cmp
cmp
xor
xor
xchg
xchg
push
dec
mov
pop
movsl
call
loope
cmpsl
mov
mov
push
xchg
loope
xor
mov
test
out
clc
neg
xor
mov
xorl
pop
xor
ffreep
mov
fstps
cmp
add
dec
push
jge
in
pop
sbb
ljmp
xchg
clc
je
mov
fcmovnu
push
mov
lods
movsb
xchg
inc
clc
lods
in
ds
ljmp
cmp
repnz
push
pop
lods
int3
movsb
outsb
aas
sbb
or
in
push
int
test
cmp
pushl
sub
cmp
and
lock
cmp
pusha
and
inc
add
fsub
xor
insb
andl
pop
scas
sahf
addr16
sarl
xchg
push
add
incl
inc
jo
clc
push
mov
scas
call
call
leave
mull
dec
outsb
sbb
call
mov
jns
push
inc
lret
popa
test
sbbl
int3
lret
fistps
mov
rclb
call
add
inc
mov
pop
jo
repz
adc
ss
xchg
mov
test
add
fcomip
mov
cmp
loop
ds
ljmp
in
pushl
cmp
outsb
push
ds
push
int3
inc
das
iret
ret
scas
leave
add
ljmp
aas
inc
fimull
loop
hlt
stos
lret
stos
das
pushf
repz
data16
adc
ljmp
ss
push
xor
pop
pop
dec
xor
std
int
jg
cmp
mov
mov
or
jne
cmp
xchg
out
jl
dec
adc
fidivl
lcall
push
sbb
xchg
frstor
xor
adc
xor
inc
int
push
shlb
dec
mov
mov
adc
push
int3
cs
push
jo
dec
add
addr16
inc
out
xchg
xor
loopne
iret
adc
pop
out
or
mov
xor
testl
incl
ljmp
lahf
or
or
jb
shll
test
decl
push
imul
or
ja
or
addr16
fs
push
sti
clc
push
sub
jb
adc
in
jo
xor
mov
scas
push
jae
negl
pushl
rcrl
icebp
test
icebp
loop
or
outsl
scas
cmp
mov
pop
push
clc
ficomps
push
enter
mov
out
rclb
and
mov
push
pusha
fs
mov
in
idiv
decl
sub
sub
mov
inc
fwait
sbb
cmp
sub
pop
xchg
pop
cltd
add
lcall
or
stos
inc
pop
cmp
mov
shrb
or
add
jnp
int
cmp
idivl
jmp
inc
int
testb
dec
cmp
xchg
jnp
pop
out
adc
mov
loopne
mov
mov
and
cwtl
cmc
fadds
sbbl
add
mov
jo
dec
loopne
out
sub
fsub
filds
dec
pop
aam
mov
ffree
mov
mov
sti
ret
pop
add
clc
cmp
mov
pop
loop
inc
in
mov
sub
pop
icebp
lcall
sub
push
sbb
and
xor
mov
adc
mov
icebp
ljmp
xlat
and
je
dec
shrb
mov
sub
call
push
test
jns
int
jle
mov
loopne
lods
inc
es
decl
xor
pop
insl
mov
shr
jo
mov
sbb
mov
std
lcall
jg
fldcw
stc
stc
cmp
dec
dec
fwait
out
iret
cmpsb
lcall
cmp
jns
mov
int
sbbb
xchg
out
fidivl
js
scas
fwait
or
adc
decb
stos
sub
aad
dec
dec
daa
lock
lods
aas
inc
xor
sbb
mov
jg
decl
inc
sub
dec
popf
push
lea
lods
orl
js
pusha
loopne
jg
sbb
or
pop
loope
or
inc
or
mov
push
xchg
and
jg
mov
jne
mov
push
bound
dec
in
aas
mov
push
cmp
insl
decl
int3
stos
outsb
addr16
shrl
mov
cmp
jns
jnp
xchg
push
outsb
lret
hlt
jmp
pushf
jecxz
insl
lds
jns
cmp
lcall
push
lahf
call
xchg
stos
inc
jge
scas
clc
dec
mov
loop
out
ret
xchg
jecxz
dec
fdivl
add
xchg
ja
mov
cmp
add
out
dec
setb
pop
jne
shll
jmp
sbb
sti
sub
dec
jp
and
sbb
lods
push
mov
ljmp
pop
mov
cmp
test
cmp
into
leave
jmp
es
fdivr
call
lds
inc
pop
hlt
cmp
hlt
cli
testl
pop
pop
dec
sub
decl
ret
mov
cltd
push
mov
addr16
cmpsl
jnp
or
or
pop
push
icebp
scas
outsl
cli
incl
dec
cs
gs
or
jae
xchg
mov
xchg
jo
arpl
sub
sub
add
push
ss
xchg
bound
into
jmp
shlb
jmp
cmp
mov
push
das
or
pop
pusha
push
pop
xlat
sbb
mov
loop
cld
aas
jmp
out
int3
jo
mov
sub
gs
add
push
adc
jns
hlt
arpl
sarb
or
mov
scas
es
jne
push
pop
cmp
fistpl
lods
cld
xor
push
or
mov
insb
popf
lods
call
fildl
push
mov
mov
in
popl
decl
arpl
insl
push
aam
pop
les
add
jge
movsb
lock
jbe
call
cmpsb
outsb
cmpsb
dec
pop
mov
cli
sub
and
mov
mov
xchg
sub
decl
arpl
pop
mov
aad
push
inc
xor
add
cli
jmp
cmpsl
mov
ret
inc
pop
dec
jg
and
lret
and
test
push
dec
repz
call
fistps
pop
jge
je
out
jp
cmpsl
sbb
mov
jno
data16
outsb
mov
pop
cmp
jno
in
add
xchg
imul
daa
pop
pushf
sbb
sub
sbb
mov
iret
loope
lea
xor
pushl
jg
subb
dec
jmp
or
stc
test
pop
repz
fbstp
ret
lea
jle
push
cmp
inc
dec
repnz
into
cmp
fistpl
xor
pusha
mov
push
jae
pushf
out
aaa
add
dec
dec
pop
mov
xlat
push
test
pushf
sbb
pop
mov
repnz
xor
mov
push
lret
push
iret
xchg
call
sub
fldenv
gs
arpl
cmp
inc
out
or
and
lcall
xchg
repz
dec
in
daa
rorb
jmp
pop
mov
pushl
rol
xor
scas
mov
lcall
add
repz
push
imul
incl
push
mov
push
sbb
jge
les
xchg
push
adc
adc
sub
ficomps
sub
fcomip
movb
inc
inc
cli
dec
pop
in
dec
aas
mov
inc
inc
sahf
mov
pop
add
jmp
pushf
cmp
inc
lods
out
pop
or
mov
jle
leave
sub
fsubp
js
imul
and
lods
sub
and
jl
mov
ljmp
jne
incb
insb
xchg
ljmp
sbbl
xchg
xor
jmp
js
int
rcrl
cmpsl
ret
jmp
cmp
xchg
subb
adc
jp
lcall
decl
sbb
cwtl
in
sub
or
popa
lret
cld
out
push
dec
pop
cli
and
nop
and
rolb
adc
decl
mov
cmc
dec
mov
or
mov
dec
pusha
sahf
mov
lcall
ds
cld
outsb
sbb
enter
mov
ljmp
pop
jno
loopne
xchg
xchg
stos
jg
pushl
adc
or
mov
sub
gs
lods
pusha
or
cmp
hlt
xlat
adc
or
sub
sub
imul
xor
lcall
lock
insb
inc
push
mov
push
in
adc
jno
cmp
cltd
je
jmp
pop
addb
xchg
lahf
mov
lods
into
push
daa
push
and
add
jecxz
mov
int
aam
mul
and
xor
inc
push
aaa
arpl
jo
push
mov
int
fld1
push
xchg
insl
jne
add
hlt
nop
fnsave
cld
std
jle
pop
orb
lahf
xlat
push
insl
cmp
sub
decl
jo
inc
mov
xchg
nop
mov
stos
test
nop
arpl
fisttps
or
lcall
mov
xchg
lahf
decb
pop
push
sub
jno
in
dec
lods
mov
pop
cmpb
xlat
jmp
ss
pop
ljmp
outsl
dec
jge
add
or
mov
popa
sub
mov
push
adc
adc
adcl
fnstcw
mov
hlt
add
push
jno
jmp
push
mov
in
rolb
push
popa
mov
popa
lods
jmp
icebp
add
arpl
decl
sti
jno
aaa
mov
jb
test
xor
lcall
cwtl
mov
jns
subl
popf
cmp
inc
arpl
xchg
movsb
push
scas
fiadds
pop
and
adc
inc
mulb
adc
sbb
jg
sub
or
mov
pop
xchg
data16
dec
push
jno
fisubs
cmpsl
pop
jl
outsl
cmpsb
hlt
jp
int
and
or
lcall
aam
jnp
mov
scas
jae
jg
jp
loopne
je
sbb
dec
fnsave
mov
cmp
cli
and
call
lds
adc
mov
sbb
pop
aam
test
into
ja
out
clc
mov
mov
aam
filds
mov
cmpsl
mov
mov
loop
jp
call
adc
cld
add
jecxz
dec
cmp
cvttps2pi
mov
jne
cmpsb
incl
lds
sbbl
push
sub
jmp
and
ljmp
xchg
xchg
dec
in
test
int3
imull
out
scas
cltd
sub
mov
icebp
sub
cld
call
das
xchg
movb
inc
mov
decl
adc
dec
cmpsb
mov
jl
xchg
stos
xchg
jbe
movsb
lods
imul
in
inc
ja
mov
sbb
dec
pushl
std
ljmp
and
rolb
jne
push
dec
inc
xchg
into
ret
pushf
loopne
push
je
push
pusha
repz
push
mov
fmull
nop
mov
lahf
rcr
popa
xchg
hlt
lods
dec
std
ret
ljmp
lock
scas
adc
push
mov
pushf
dec
pop
inc
repnz
ljmp
xchg
or
les
pop
mov
mov
inc
enter
lock
lcall
in
push
dec
sub
sbb
rorl
incl
inc
out
mov
adc
adc
inc
xchg
pop
into
jl
and
adc
mov
mov
adc
ss
and
call
pop
push
daa
rol
jmp
jl
inc
scas
xor
subl
pop
push
scas
sub
xchg
lahf
add
rcll
fnsave
call
mov
dec
pop
jge
shl
mov
test
movd
addr16
mov
jmp
push
mov
xor
lods
sbb
and
fnstenv
cs
mov
mov
aas
pop
out
pop
cmp
xchg
cmp
xor
addr16
jmp
xchg
xor
out
pushl
push
jle
lea
sub
lcall
repnz
jne
push
lret
dec
scas
inc
pop
sub
decl
setno
std
test
das
jge
in
mov
movsb
pop
fsts
incl
jne
fbstp
add
enter
test
inc
data16
jl
jno
dec
imul
ljmp
ficoml
lret
add
dec
and
lods
jp
pop
dec
add
lock
in
sbb
mov
jmp
add
gs
or
fcoms
sub
aas
out
xlat
fdiv
dec
mov
push
testl
xchg
ss
cld
push
in
scas
outsl
rorb
lods
adc
push
les
xor
ljmp
mov
cs
jmp
push
inc
mov
mov
lcall
push
mov
inc
lea
push
cmp
pushf
cld
fidivl
xorb
jge
stc
xor
ljmp
adc
daa
add
test
stos
push
mov
jnp
and
or
je
lods
es
data16
inc
mov
add
jl
inc
inc
lds
jo
lret
test
notl
scas
dec
pop
rclb
fcomip
push
jmp
sub
fmulp
push
push
mov
or
imul
ljmp
jge
push
aas
gs
stos
xchg
adc
test
push
pop
and
jg
decl
nop
jecxz
adc
dec
inc
mov
lret
push
push
xor
es
sub
cmp
incl
std
iret
lds
mov
push
loop
fwait
push
lds
inc
cmpl
orl
dec
loop
adc
in
pusha
out
mov
divb
adc
out
imul
out
push
xor
ja
scas
lods
stos
jle
add
pop
repz
and
adc
push
or
mov
pushf
movsb
movsb
jge
scas
jecxz
cmp
dec
insb
mov
aad
or
ljmp
xor
cmpsl
or
ror
push
f2xm1
jns
int
fs
je
adc
pushl
push
aam
or
jmp
or
inc
sarl
jg
into
mov
xor
jg
ds
mov
push
ja
xor
rcl
repnz
minss
jo
inc
std
xchg
lds
ljmp
jns
rcll
add
stos
jb
and
loopne
sub
xor
inc
test
ljmp
cli
and
test
sbb
fidivrl
and
mov
add
mov
icebp
jecxz
arpl
mov
inc
push
outsl
cmp
add
pop
jmp
inc
jg
jns
xor
mov
add
mov
sahf
fistpl
mov
incl
std
out
push
pushf
push
test
lcall
or
fdiv
pop
arpl
lea
xlat
ss
ss
adc
and
mov
pushl
fsubs
sbb
inc
pop
in
aad
and
sub
fdiv
dec
sbb
jnp
fisubl
pusha
mov
mov
mov
adc
sbb
sti
ljmp
leave
sub
fmuls
ds
scas
mov
leave
mov
xchg
pop
jg
sub
div
inc
clc
jmp
mov
xor
inc
idivl
ffree
in
mov
push
lea
sahf
inc
rorl
add
decl
sbb
mov
push
and
mov
aad
and
add
dec
push
sub
movsl
js
mov
sbb
mov
ljmp
test
insb
cwtl
cmp
cmp
icebp
insb
and
and
loope
ret
jecxz
call
nop
pop
ss
repnz
mov
mov
mov
shr
inc
xchg
scas
pmulhuw
adc
decl
les
push
mov
out
adc
xor
inc
clc
in
mov
ljmp
cli
jns
xchg
aad
insb
mov
mov
pop
hlt
sub
lcall
lcall
or
and
incb
xorl
in
jecxz
js
imull
and
fst
and
xchg
add
mov
or
and
jne,pt
cmp
pushl
xchg
sbb
test
push
arpl
pushf
aam
xchg
dec
push
inc
test
jg
push
sub
les
pushl
pop
cld
sti
cld
jmp
hlt
jp
push
in
dec
daa
dec
notb
pop
push
loopne
pushl
or
sbbl
in
rcll
push
mov
pop
xchg
leave
fists
pop
stos
dec
out
call
cld
addb
cmpsl
les
pop
loope
pusha
mov
add
lods
ljmp
push
dec
pop
jmp
mov
push
sbb
and
std
jbe
insb
sbb
inc
dec
sub
ja
lret
or
cli
incb
out
cld
add
or
mov
jnp
xchg
mov
jle
jns
shrb
pushf
rep
xor
addr16
pop
mov
sahf
xchg
and
lcall
pop
lahf
int3
ret
mov
xor
movsb
jmp
int
lds
push
divb
mov
lret
test
repnz
or
mov
incl
test
sbb
push
adc
mov
stc
dec
sti
sub
sbb
adc
mov
incl
sbb
aas
mov
pop
iret
repz
xor
cmp
xor
out
in
adc
imul
pop
fistl
cmp
fmul
sub
cmp
mov
push
addb
ljmp
aam
in
outsb
into
jbe
lds
outsl
loopne
sahf
ret
pop
mov
mov
lcall
pop
push
pop
push
sbb
clc
stos
pop
or
loope
push
arpl
mov
dec
mov
pop
xchg
das
daa
test
in
add
icebp
in
lods
and
push
lods
xor
outsl
cli
ljmp
jbe
mov
sbb
mov
sar
aas
loop
lret
adc
xchg
into
sbb
rolb
mov
push
cmpsb
iret
mov
out
xor
clc
adc
incl
cwtl
inc
xchg
lret
add
rorb
repnz
cwtl
ss
out
jnp
xor
call
ror
inc
cmp
movsb
xor
add
lea
pop
inc
pop
push
jmp
push
cmpl
mov
test
xlat
xor
pop
add
test
in
inc
push
scas
ficomps
ljmp
and
fcoml
mov
nop
inc
ficompl
xchg
and
in
cld
or
or
adc
cmp
mov
add
ja
out
dec
or
nop
adc
test
aaa
test
lcall
lahf
mov
jne
sbb
cmp
aaa
into
incl
jmp
jge
jle
popf
add
mov
push
adc
fimuls
ss
jmp
inc
sti
scas
mov
dec
xor
push
fcoml
aam
sub
jae
mov
das
xchg
push
cltd
stos
push
mov
dec
icebp
cwtl
jns
dec
dec
add
adc
pop
es
fcomip
mov
xchg
out
sub
jns
movsb
outsl
and
rcr
or
pop
ljmp
add
gs
add
xchg
in
das
cmp
movq
jg
call
lret
je
jg
fdivr
and
add
sub
incl
enter
in
add
jnp
stos
negl
push
pop
test
lea
jmp
pushl
xchg
mov
xor
setp
jl
enter
out
jmp
ljmp
mov
inc
fs
int
pop
movsb
pushf
mov
cmp
inc
push
dec
ud0
dec
loop
enter
mov
mov
in
fcoms
in
inc
jbe
add
lds
adc
add
lcall
push
inc
lea
shr
mov
test
ja
rolb
pop
clc
std
mov
mov
cwtl
test
pushf
js
jmp
inc
mov
lcall
adc
jmp
or
sar
xlat
adc
mov
sbb
pop
pop
loop
out
lods
push
call
stc
mov
repnz
inc
in
mov
xor
out
dec
xor
dec
push
mov
push
cmp
outsl
das
xchg
jecxz
mov
sub
jge
in
hlt
add
cmp
sti
call
enter
roll
ss
aas
mov
daa
repz
mov
mov
fcmovb
out
mov
cld
outsl
adcb
pop
and
mov
call
loopne
orb
test
mov
push
in
insb
mov
addr16
ljmp
push
dec
jl
call
lret
mov
sbb
or
mov
jb
decl
mov
mov
cmc
insb
mov
or
aam
mov
and
pop
cld
pushl
or
or
pop
mov
shrb
inc
cmp
lock
incl
std
aaa
out
inc
add
loopne
lret
xchg
jae
sbb
xchg
pop
push
fistl
icebp
sti
int
inc
call
hlt
push
cltd
sub
pop
ret
lahf
cmpsl
mov
mov
adcb
popa
in
mov
xchg
call
insb
les
orl
dec
pop
mov
mov
cmp
outsb
jo
out
idivl
pushl
in
lock
dec
loope
mov
clc
aaa
or
addb
lret
rclb
les
incl
mov
addb
inc
cwtl
pop
rolb
lock
outsb
bnd
decl
mov
rorb
xlat
mov
mov
addl
js
sbb
test
cmpsb
daa
call
rorl
notl
cmp
inc
test
outsb
clc
inc
adc
decl
pop
clc
rolb
es
sarl
and
pop
dec
es
leave
popf
mov
add
pushl
mov
or
push
push
cmp
pop
or
mov
cld
cmpsl
inc
mov
incl
call
test
push
jmp
xchg
jp
or
lea
jmp
bound
out
lock
inc
jle
mov
mov
add
sub
pop
lahf
jmp
mov
sbb
leave
movsb
inc
imul
add
fbstp
das
arpl
ljmp
mov
test
pop
loop
cmp
dec
xlat
push
fwait
add
aaa
lcall
mov
mov
inc
shlb
inc
mov
pop
shl
gs
incl
aaa
insb
cltd
int3
or
add
imul
mov
fists
xor
xchg
fs
or
fwait
cmp
call
and
push
std
es
js
mov
test
ret
mov
cmp
ljmp
jne
add
lret
adc
sbb
shr
cmp
sub
das
sbb
jmp
fisttpll
andb
jle
push
fldt
xor
pop
inc
mov
xchg
add
shll
mov
cmp
mov
mov
in
mov
in
xor
comiss
loop
mov
jg
bound
xchg
xchg
dec
pop
stos
lods
xor
xchg
mov
push
dec
hlt
mov
inc
aam
mov
movsl
incl
mov
fadd
aad
in
adc
into
outsb
test
lds
scas
sar
decl
loope
sbb
enter
sub
push
jbe
mov
lcall
jg
jnp
ficompl
dec
testl
push
xchg
lods
shlb
mov
jmp
lret
inc
mov
shll
nop
jmp
loopne
les
add
incl
fcomps
push
fisttpl
lock
outsb
mov
lret
fdiv
fwait
cmp
out
cmp
inc
ljmp
mov
ret
popl
std
pop
pushl
jmp
cmp
loop
pop
test
sub
add
and
mov
incl
xchg
push
pop
jb
inc
add
shlb
mov
out
push
sub
imul
lcall
mov
fmul
inc
push
and
ljmp
popa
mov
jmp
enter
das
sub
cmp
mov
stc
jnp
or
xchg
lea
fcomip
xor
stos
loop
pusha
inc
pushf
es
mov
rorl
mov
jg
inc
cltd
pushf
add
sub
faddl
push
sub
clc
add
call
mov
mov
jne
adcl
or
jg
jb
push
cmp
mov
add
clc
pop
test
lds
incl
or
mov
sub
pop
cs
sub
test
mov
outsb
mov
and
cwtl
jmp
ss
jg
stos
xorl
repz
cmc
cmp
inc
gs
into
cli
dec
int
decl
ret
mov
pop
pop
mov
dec
mov
xlat
jg
mov
fcos
lcall
mov
xchg
lds
dec
nop
jne
sub
jecxz
pop
pop
jmp
mov
mov
pushf
push
adc
adc
frndint
movsb
xor
clc
sbb
pop
xorb
incb
pop
fildll
adc
outsl
cmp
movsl
adc
scas
pop
out
or
adc
fsub
popl
repz
cld
sub
out
jmp
in
push
mov
hlt
call
mov
xchg
bound
call
pop
jge
sub
lcall
out
outsb
rcrl
aam
pop
jl
insb
or
rcrb
xchg
fwait
xor
cli
call
shlb
or
arpl
jne
test
xor
mov
xchg
lahf
ljmp
xchg
scas
cmp
xchg
xor
repnz
push
sub
jp
push
sub
jmp
dec
mov
rcrl
ljmp
mov
inc
mov
xor
call
mov
xchg
add
lcall
sub
lods
fwait
loope
cs
data16
clc
mov
incl
movsl
xor
and
sarb
add
push
ja
imul
fildl
push
inc
sub
std
push
xor
add
cmc
sbb
inc
xchg
jle
jne
sbb
push
push
cmp
hlt
sub
xchg
lret
test
mov
enter
icebp
pushl
dec
cld
stos
lods
jge
lret
mov
or
lds
xor
loop
addb
fists
call
ja
jbe
repnz
outsl
shl
aam
xchg
rorb
das
push
negb
cmp
mov
cwtl
fldcw
outsb
xchg
fcomi
test
loopne
paddd
icebp
xchg
incl
or
out
mov
push
sub
cwtl
out
lcall
dec
mov
jo
sub
repz
movsl
and
mov
mov
mov
jb
pop
out
lcall
stos
test
movsb
lock
iret
mov
pop
or
imul
pop
sahf
sarl
in
lods
hlt
xchg
incl
and
loope
call
out
pusha
pop
sub
jb
push
fs
cmc
cltd
cltd
call
aaa
lret
mov
inc
fmull
inc
and
psrlq
sub
lds
incl
pop
std
lcall
fdivr
or
push
cmc
in
xor
ss
leave
rol
shlb
dec
and
mov
cwtl
mov
dec
loop
insl
jg
sub
sti
jmp
dec
mov
test
or
lret
mov
call
jl
lds
cs
lcall
push
rcll
jo
fucomip
sub
inc
sub
in
and
out
add
add
movsb
jp
sub
mov
inc
pop
mov
cmp
cli
mov
jl
scas
xchg
cmpsl
sub
adc
pushf
sub
or
or
pusha
fsubl
ljmp
das
push
addr16
in
xchg
jb
mov
push
cmpsb
lds
dec
xchg
inc
pop
js
fcomip
outsl
rcrl
mov
es
fs
jo
shrb
pop
lcall
jmp
dec
mov
sbbl
dec
arpl
jb
aaa
pop
lret
lret
hlt
jmp
addr16
lea
lea
sbb
or
test
ljmp
rol
iret
sub
push
je
fnsave
notb
cltd
lea
ljmp
pop
sarb
xchg
sbb
int
pop
call
out
popa
adc
inc
dec
jno
popaw
adc
cmp
pop
lcall
insb
jmp
cmp
cmp
js
pop
cld
mov
dec
ds
pop
xor
call
out
cmpsb
push
fsubr
cltd
sbb
gs
dec
pop
ds
aas
jle
pop
decl
push
sbb
call
add
inc
cld
xchg
push
and
sub
in
stc
jb
inc
test
jg
xor
jge
out
mov
jmp
pop
xor
inc
inc
cmp
add
cli
lcall
addr16
push
push
mov
lods
call
inc
arpl
into
xlat
xor
incl
stc
pop
mov
jbe
iret
jmp
call
enter
lret
jo
push
repnz
or
mov
and
jg
rorb
adc
lahf
push
jge
push
shll
mov
cli
adcb
out
adc
jg
mov
fidivrs
jb
mov
inc
lods
push
push
sar
ljmp
jle
fucom
dec
mov
xor
sbb
lahf
je
xchg
or
xor
call
outsl
sahf
push
icebp
or
out
and
std
ret
adc
cmp
add
ja
inc
fmul
add
lds
in
add
pop
lds
mov
sbb
arpl
cwtl
jmp
movsl
std
sarb
push
repnz
push
shlb
and
mov
mov
add
jns
cmpsb
ds
negb
or
pop
leave
inc
lret
mov
jl
cmp
lods
imul
xor
sub
and
ljmp
call
push
scas
add
cmc
cmp
lcall
adc
pop
and
andb
outsb
enter
or
add
shll
dec
fwait
test
or
cmc
imul
mov
pop
ss
sbb
jp
jno
jecxz
shlb
aaa
push
ljmp
test
ret
lods
push
pop
cmp
loope
cmp
lahf
xchg
call
inc
adc
movsb
repnz
stos
inc
add
lcall
cmp
push
push
lods
cli
into
lods
cmp
ja
push
xor
jmp
test
popa
rclb
mov
mov
cmpsl
pop
dec
mov
cmp
in
leave
mov
out
jg
xor
jge
clc
or
ja
add
test
lcall
mov
or
mov
lcall
dec
ljmp
inc
add
mov
je
jecxz
shl
es
call
bnd
decb
push
sahf
xchg
xchg
cld
incl
and
test
nop
fdiv
mov
shll
mov
mov
mov
add
add
ljmp
cltd
into
add
push
pop
scas
cld
mov
jnp
lock
repnz
leave
jg
jo
cmp
fildll
and
nop
cs
sub
xchg
push
push
scas
mov
int
mov
scas
sub
decl
aaa
mov
cmp
mov
shlb
das
inc
mov
jmp
inc
lret
push
jb
idivb
add
sbb
dec
xchg
xchg
pop
nop
call
ss
rcl
or
bound
out
mov
incl
lret
lods
ss
cmp
daa
or
dec
fisubs
add
pop
mov
mov
lcall
mov
add
enter
and
rcrb
fs
lods
rcrl
fucomip
adc
push
mov
pop
arpl
inc
movsl
test
dec
mov
mov
scas
jmp
nop
jmp
loope
pop
popa
adc
xor
mov
ljmpw
in
push
pop
addr16
call
pop
inc
cmp
mov
std
push
sbb
outsl
sbb
mov
movsl
or
jmp
insb
lcall
dec
incb
fs
fwait
out
inc
xor
push
lods
xor
call
sbb
leave
cmpsb
call
mov
jg
in
jp
adcb
iret
js
dec
leave
popa
int3
mov
xchg
incl
loope
jbe
je
gs
mov
or
cmp
jno
xchg
mov
je
scas
dec
mov
add
and
or
mov
test
push
mov
hlt
and
mov
nop
push
insl
xchg
pop
and
adc
push
outsb
mov
icebp
aas
add
ja
sahf
mov
mov
inc
outsb
pop
and
mov
lcall
es
inc
test
jbe
test
jo
adc
loope
or
call
mov
out
inc
in
out
mov
imul
inc
jns
cmp
idivb
xchg
aas
jmp
arpl
mov
test
push
sbb
gs
and
inc
js
test
dec
adc
push
inc
sbb
lods
popf
andb
inc
or
sti
jnp
and
lcall
sbb
mov
dec
pusha
popa
xchg
xchg
ss
lcall
pushl
and
xor
and
push
ljmp
icebp
lea
into
nop
mov
std
or
and
mov
cmp
pop
pop
scas
insb
push
je
and
xchg
out
dec
dec
mov
decl
sbb
in
jo
dec
jne
dec
mov
imul
pop
insb
lret
std
jo
add
cltd
inc
icebp
imul
pslld
xchg
fucom
popf
pop
aam
lret
leave
push
inc
mov
inc
incb
jne
inc
insl
in
icebp
cmp
mov
popa
in
mov
and
sbb
sbb
decl
shr
unpcklps
pop
ret
cmp
sahf
xchg
int
xchg
popf
xchg
xor
ljmp
pop
pop
and
jge
add
fs
test
mov
xchg
mov
decl
adc
dec
pop
js
lods
roll
sub
je
imul
cltd
mov
out
clc
cld
jae
icebp
jmp
jge
mov
inc
push
add
aad
movsb
faddl
incl
mov
cmp
sbb
popa
mov
sbb
sbb
adc
pop
sar
lcall
jmp
arpl
mov
in
dec
rolb
lock
or
pop
mov
and
sarl
jmp
pop
outsb
push
adc
sahf
cli
pushf
mov
and
fcomip
lcall
imul
jns
in
fisttpl
out
jno
cli
incl
ds
in
insl
adc
nop
int
mov
ljmp
dec
cmp
outsb
add
lds
fwait
popa
lea
sbb
push
adc
leave
fs
dec
ljmp
inc
gs
mov
iret
cmp
adc
flds
pop
lods
lcall
fwait
mov
mov
inc
and
pusha
xchg
popf
hlt
jnp
out
decl
andb
ret
mov
push
les
outsl
pop
adc
and
hlt
jmp
data16
notb
mov
sbb
stos
enter
arpl
pop
jo
insl
sbb
mov
jb
lock
bound
clc
push
inc
jne
jmp
fwait
pop
lock
mov
mov
ljmp
mov
call
loop
xchg
mov
popa
in
dec
add
push
cld
push
add
push
xor
adc
cmp
rolb
into
sbb
mov
adc
rcr
push
sub
mov
data16
mov
call
sub
and
push
sub
mov
out
fistps
ljmp
sub
mov
xor
in
push
test
icebp
mov
call
inc
in
mov
xor
adc
insl
jns
and
scas
fsubs
xor
adc
sub
push
sub
jg
lcall
ret
jge
rolb
xchg
jo
ljmp
fbld
in
fcomip
pop
inc
jo
call
lahf
and
arpl
pushf
jae
push
add
mov
scas
out
push
out
mov
jp
cmp
lret
aas
push
mov
mov
fidivl
or
push
ljmp
adc
andl
cmp
pop
mov
cwtl
mov
adc
inc
sbb
arpl
inc
gs
dec
or
sub
adc
sub
stc
push
lods
push
sbb
aas
or
cmc
dec
jne
jmp
loope
inc
mov
pop
aaa
push
mov
iret
into
and
mov
daa
js
aaa
sbb
push
call
call
xor
mov
add
jo
fdivs
pop
cli
dec
andb
cld
push
loop
push
pop
push
mov
sete
mov
inc
mov
or
sbb
add
stc
out
data16
pop
add
sbbb
add
inc
filds
push
jmp
pushl
cmc
jecxz
jge
sub
icebp
sub
xor
inc
inc
insl
push
ds
add
imul
ljmp
inc
pop
push
mov
insl
gs
cmpsl
mov
cmp
sbb
and
mov
stc
mov
push
mov
movsl
mov
mov
pop
add
or
cmc
roll
les
pop
add
insb
into
sahf
decl
out
sbb
movsl
dec
xchg
flds
loop
es
mov
fadds
cmp
bound
jno
sti
lret
push
and
rolb
push
or
ljmp
cmp
cmc
cmpb
hlt
mov
cmpsb
or
sarl
xor
cmp
jg
fisttps
lcall
inc
fmull
in
fs
lcall
inc
adc
push
jl
pop
pushf
fstps
mov
je
pop
out
mov
and
mov
das
and
in
or
xchg
mov
jnp
cmp
or
fisttps
pushl
daa
or
cmpsl
scas
pushf
xchg
sub
lahf
xorb
jl
dec
inc
aaa
scas
cwtl
mov
inc
into
ret
xlat
clc
sbb
das
jno
xchg
scas
add
xchg
lcall
pop
lods
inc
cmpsl
cli
dec
clc
out
jle
jae
lahf
outsl
jge
fisttpll
push
rclb
jmp
mov
stc
mov
xchg
fdivl
ja
sub
repz
jbe
and
std
jmp
ja
xchg
adc
push
add
cmp
jb
loopne
aaa
push
mov
mov
sbb
and
xor
inc
mov
ds
add
orb
xchg
ljmp
xor
int3
push
pusha
cmpsl
clc
jecxz
xchg
imul
mov
mov
sub
fidivrs
push
orl
imul
add
cld
lcall
data16
push
push
xlat
rcll
das
mov
aad
sub
lahf
popa
cmpsb
mov
inc
ljmp
sbb
mov
mov
inc
inc
pop
push
in
inc
pushf
mov
stos
decb
mov
ljmp
sarl
loop
mov
mov
decl
cmp
in
sub
xorl
xor
leave
hlt
or
lcall
stos
bound
pop
aaa
rolb
push
ret
add
jo
push
out
sbb
push
xlat
repz
jle
xor
enter
jecxz
decl
dec
mov
stos
leave
and
mov
aam
push
ficomps
nop
pop
inc
adc
fimuls
lods
fnstsw
ds
daa
push
pop
push
addr16
daa
jo
push
or
les
pushl
into
es
scas
std
jmp
push
mov
jle
mov
ret
test
jmp
push
sub
mov
incl
sub
data16
stos
stc
movsl
pushf
movsb
jo
mov
fiaddl
sbb
xchg
addr16
xor
cmpsb
in
mov
dec
push
dec
jmp
sbb
jbe
push
pop
ljmp
mov
lcall
outsl
push
push
dec
mov
jno
mov
movsl
push
pushf
cmpsb
xchg
fldcw
clc
call
and
lock
ja
inc
mov
jg
push
inc
sub
mov
pop
cltd
xor
add
push
push
lods
fs
cld
push
mov
sarb
inc
jl
adc
insb
jg
mov
out
clc
fidivrl
xchg
mov
adc
sub
mov
push
into
sub
call
xchg
scas
mov
dec
je
hlt
sub
int
nop
lcall
fdiv
mov
lock
add
in
add
jb,pt
mov
push
into
scas
sbb
jne
nop
cld
test
jnp
test
pop
repnz
fcompl
inc
push
popa
dec
daa
das
rcrb
pop
icebp
je
cmp
dec
ljmp
sbb
data16
mov
or
repz
mov
inc
lcall
xchg
leave
sbb
dec
pushfw
add
xchg
dec
data16
inc
lahf
faddl
push
mov
les
jge
xor
call
mov
push
or
adc
and
pop
inc
or
fucomp
push
pop
add
paddb
cmpsl
aam
scas
sub
cmpsl
and
stos
jae
bound
pop
pop
mov
inc
add
rclb
pop
inc
or
cmp
xchg
add
shrb
push
int
jne
xor
mov
dec
cli
mov
imul
inc
dec
jae
cwtl
xchg
lds
lods
ja
mov
testl
aad
insb
in
insb
insb
je
out
jmp
push
js
pop
je
es
mov
or
xor
sub
jecxz
sub
int3
mov
aad
mov
mov
es
inc
into
dec
pop
xchg
cmpsl
xlat
js
lock
shll
sbb
sub
cmp
fs
cmp
pusha
fcmovnb
insb
js
test
or
sbb
cs
inc
xchg
les
pop
dec
test
mov
fs
mov
cmp
mov
mov
pushl
clc
nop
imul
clc
sbb
mov
das
ljmp
fiadds
lea
ret
fcoms
xor
sahf
cmpl
cmp
and
mov
xchg
cmpb
fdivp
test
add
loopne
xchg
push
addl
cmp
push
stos
incl
push
mov
mov
dec
adc
adc
fsubrs
out
popf
mov
les
ljmp
xchg
cmpsl
adc
lret
filds
inc
push
mov
decl
sub
ljmp
sbb
cmp
push
or
jle
xchg
inc
xchg
lcall
lcall
jne
jae
fidivs
inc
pushf
xchg
cld
fdivr
add
sbb
pop
cltd
scas
sub
mov
and
inc
dec
push
push
and
mov
xchg
nop
mov
add
aas
je
pop
movsl
dec
mov
call
inc
imul
cld
and
lret
and
movsl
push
arpl
xchg
fidivrl
fwait
jns
addr16
jmp
les
aas
mov
cmpsl
in
adc
cmp
fldt
test
mov
sahf
mov
sub
rorb
into
xchg
pop
xchg
movsl
sub
aaa
inc
and
lcall
inc
add
xchg
sbb
xchg
cmp
fwait
ds
add
or
jecxz
dec
dec
inc
ds
jle
es
inc
mov
lods
inc
rcl
mov
xor
adc
lahf
or
incl
inc
aam
icebp
leave
sub
mov
jbe
mov
jge
cmpl
pushl
scas
scas
fistps
push
mov
push
dec
or
cwtl
pushl
xor
pushl
xchg
mov
cld
mov
imul
push
adc
adc
in
pushl
subb
mov
out
hlt
jecxz
jle
jmp
iret
push
dec
mov
inc
jmp
or
mov
dec
lret
cmp
inc
popa
loop
lcall
repnz
fmuls
fisttps
xchg
in
xlat
decl
push
pop
or
daa
aad
decl
loope
insb
xchg
jg
daa
add
cli
or
mov
jle
aam
std
xlat
popf
cmp
cmp
ror
sbb
in
xor
and
jecxz
mov
ja
dec
lds
clc
or
mov
leave
cld
xorb
dec
jp
cmpsb
in
decl
mov
popa
jge
cmpsl
das
pop
cmp
xchg
sbb
fsub
lret
loope
cmp
outsl
iret
or
fsubs
fbstp
sub
jo
movsb
mov
imul
out
scas
loop
xlat
push
out
mov
clc
pusha
stc
daa
repnz
sti
out
mov
pop
cli
mov
inc
xchg
jnp
ljmp
push
add
fimuls
pop
cmp
scas
lret
sti
inc
cmpl
lea
lcall
or
pushf
mov
fmul
dec
test
lret
repnz
xor
scas
rcrl
fldenv
or
xlat
fldt
pop
jae
push
sbb
scas
inc
mov
lds
subb
popf
lcall
shrl
sti
daa
xlat
rcrl
mov
lret
mov
jle
pushl
cmp
or
aas
adc
or
cltd
movsl
lret
pop
add
mov
ljmp
adc
in
mov
das
adc
daa
mov
mov
cld
in
aad
aaa
fimull
fcoms
adc
testb
adc
push
ffreep
js
xchg
pushl
push
inc
pop
adc
add
jg
add
in
mov
addr16
call
pop
xchg
cmc
fwait
pop
mov
dec
or
sub
sub
sub
test
jl
sbb
repz
aad
xchg
add
and
pop
push
das
pushf
xor
jmp
jl
cwtl
sub
stos
inc
or
data16
out
jg
out
fcompl
mov
loopne
pop
mov
pop
push
xchg
jae
lahf
adc
xor
ljmp
and
scas
pushf
adc
jbe
enter
es
popl
arpl
jbe
dec
mov
add
jbe
mov
outsl
mov
jl
pop
push
dec
xor
test
fcmove
lods
jne
call
fists
xchg
fs
in
mov
loopne
and
lcall
cmp
pop
pop
into
jg
jmp
mov
xor
popa
xchg
push
push
aaa
adc
sar
aaa
jge
mov
push
adc
bswap
div
neg
sbb
into
sbb
outsb
inc
cmp
jmp
push
adcb
jmp
mov
mov
ljmp
mov
xor
push
outsl
cli
call
js
adc
or
popa
pop
lds
movsb
test
outsl
cli
decl
enter
or
lret
xor
adc
int3
aad
or
pop
jne
add
dec
mov
decl
mov
rep
mov
imul
call
and
mov
xor
fcoml
or
dec
sub
andl
xchg
dec
pop
inc
ds
xor
scas
fisubrs
divb
mov
push
or
fistpll
in
popa
sbb
push
jmp
loop
xlat
mov
cs
inc
inc
movsb
lret
push
loop
decl
pcmpeqd
xchg
mov
leave
out
push
lock
fldl
or
mov
enter
std
ret
ja
push
lds
xchg
loope
std
ljmp
adc
incl
int3
mov
push
rcpps
jb
fimull
in
movl
pushl
lea
std
or
push
or
xchg
adc
jecxz
xor
sbb
ljmp
sbb
dec
mov
repz
nop
push
adc
insb
pop
sub
repz
mov
incl
adc
xchg
scas
inc
cmpsb
cmpsl
mov
fs
and
jg
popa
xor
jo
sub
xor
ljmp
and
mov
xor
popf
out
rclb
shl
idivl
stos
stc
movsb
in
outsl
test
sub
mov
mov
add
adc
call
repz
xchg
xor
int
pop
arpl
jg
ret
mov
mov
mov
cmpsl
clc
ljmp
test
sbb
xchg
cmp
mov
xlat
jg
in
fildll
inc
adc
add
hlt
push
flds
xchg
dec
outsb
into
filds
in
push
mov
xchg
pmulhw
or
and
imul
ret
call
dec
xor
adc
push
out
ja
int3
mov
sbb
les
jne
sbb
into
lcall
call
ret
dec
and
xchg
sbb
imul
pushf
imul
aad
mov
call
push
adc
sbb
pop
mov
push
jg
gs
mov
push
insl
xor
pusha
pushl
cmp
or
push
dec
push
cmp
aas
cld
mov
mov
xor
xor
xor
in
push
jne
lret
cmp
insb
push
imul
dec
add
sub
pop
push
in
sbb
std
jns
icebp
out
jl
js
mov
dec
add
jbe
lods
push
imul
call
sbb
hlt
scas
jbe
aaa
pop
push
stos
call
or
xchg
pusha
daa
aas
pop
pop
cld
mov
shll
jns
pop
inc
jp
in
mov
fisttps
nop
jg
call
xchg
mov
xor
xor
imul
lret
daa
daa
pushl
loopne
adc
js
pop
cltd
fmuls
data16
mov
decl
mov
pop
mov
xchg
cmp
arpl
add
xchg
jecxz
decl
lock
les
inc
ret
out
and
repz
fs
sub
lcall
jb
in
aam
inc
xchg
fstpt
stc
cmp
xchg
leave
subb
jno
das
call
jge
stc
xchg
mov
inc
xor
loope
inc
fildl
loope
dec
into
call
data16
jecxz
movsl
mov
sti
xchg
clc
cmp
mov
jle
lods
adc
dec
xchg
imul
mov
in
cli
jl
loop
incl
fmull
sbb
inc
mov
frstor
mov
jg
dec
sub
std
push
xchg
cs
pusha
add
imul
jle
sub
xchg
mov
leave
mov
mov
fdivr
inc
mov
icebp
mov
and
dec
sub
aaa
lds
xor
cmp
jl
fisubl
into
jne
leave
xor
mov
lahf
enter
fstpl
bound
decl
sti
xchg
mov
stos
lret
add
cmp
lret
xchg
inc
enter
ljmp
in
xor
jp
mov
cmp
push
adc
lods
jo
je
push
scas
int3
dec
pop
mov
mov
xacquire
mov
cld
dec
insb
inc
push
xor
les
push
cmp
rol
push
imul
aaa
pop
push
jg
jns
mov
xor
decl
adc
mov
sbb
repz
mov
fs
cmc
xor
mov
sahf
mov
jmp
cltd
ja
test
cmpsb
dec
mov
loop
cwtl
pop
ja
sub
jg
cmpsl
test
scas
in
xchg
push
push
cld
mov
mov
mov
repz
jmp
adc
xor
push
add
jo
xchg
dec
imul
inc
xchg
push
incl
loopne
xchg
inc
mov
inc
mov
std
push
push
decl
and
mov
mov
stos
adc
movsb
aam
loop
std
pop
dec
in
jmp
push
jg
addr16
jae
jge
mov
mov
hlt
inc
daa
dec
jl
cli
mov
ret
scas
fsubl
xchg
push
out
cmpsl
xor
out
xchg
fs
xchg
adc
jmp
sub
or
inc
out
bound
dec
hlt
ss
mov
dec
inc
cwtl
push
into
pop
xchg
dec
adc
adc
out
jle
sbb
fcmove
test
jmp
test
shlb
pop
inc
test
adc
leave
pop
loopne
addr16
fwait
add
dec
sahf
sbb
mov
push
or
or
outsb
inc
sub
repnz
std
xchg
fnstcw
incl
cld
or
idivb
aam
adc
out
and
data16
ljmp
jbe
in
and
int
mov
pinsrw
arpl
ret
jg
ljmp
mov
xchg
out
sti
or
stos
cmpsl
adc
out
shrl
jmp
inc
jo
push
cmp
mov
jbe
lds
push
ret
addr16
sbb
cmp
push
push
or
bound
stos
mov
mov
cmp
xorb
push
push
cmp
ljmp
or
lret
int3
and
enter
mov
test
mov
js
fisubrs
icebp
fistl
cld
gs
loop
push
loop
xchg
mov
ss
jbe
add
or
mov
cwtl
rorb
cmp
adc
xchg
jmp
ss
mov
jmp
out
daa
mov
pop
rcrl
pop
test
fsts
roll
insb
mov
dec
mov
add
dec
scas
jmp
mov
sub
test
push
and
lea
jmp
int3
in
xlat
call
movsb
and
cmpsl
repnz
dec
in
pop
and
sbb
cmp
shl
dec
xchg
ret
mov
xchg
out
imul
mov
xor
lret
pop
mov
loope
lcall
jmp
cmp
sub
and
lahf
xchg
add
call
imul
xorl
mov
sbb
and
in
dec
ljmp
inc
jb
enter
cmp
popf
clc
and
push
idivb
fdivr
pushl
loopne
cmpsl
jecxz
fstp
push
in
gs
mov
pop
pop
xchg
xchg
addr16
pop
filds
xchg
fsubs
push
imul
pop
pop
outsb
mov
add
and
sub
popa
insb
sbb
cld
mov
mov
mov
aaa
cmp
adc
adc
ljmp
int
sub
and
dec
clc
jl
xlat
js
test
rorl
mov
jge
clc
fildll
xor
add
xor
add
mov
and
rcrb
aas
and
movsl
aam
and
pushf
push
jmp
jp
sbb
fdivrs
fcoms
adc
dec
mov
push
xor
jmp
and
or
xchg
sbb
adc
push
mov
arpl
jae
mov
lcall
jbe
pop
dec
dec
push
ss
pop
out
mov
sub
mov
xchg
dec
sub
decl
je
rcrb
fdivl
xchg
test
cld
repz
pop
aad
inc
cltd
fwait
cmp
xchg
lcall
mov
ret
jl
sub
lahf
sarb
iret
test
xor
and
mov
iret
in
fsubrl
popa
pop
jg
popf
sbb
aam
decl
lock
push
or
into
mov
pop
sti
mov
lds
call
xlat
adc
jns,pn
ret
add
add
loopne
xor
sub
dec
sbb
test
out
mov
out
fmuls
sbb
jl
testb
lods
cmp
icebp
jmp
cmpsb
mov
jp
and
push
nop
xor
xor
jno
xor
mov
or
jmp
fwait
adc
pop
dec
add
pusha
ss
mov
inc
int
mov
nop
pushl
subb
push
fldt
xlat
mov
sbb
pop
ljmp
int3
and
push
scas
lods
pop
movl
add
cli
fucomp
insb
out
mull
leave
inc
fcompl
data16
mov
test
movsb
mov
ja
popa
ret
cltd
insl
jmp
mov
insb
jp
cmp
dec
or
fidivrl
std
jg
mov
imul
lret
ds
call
sub
call
test
imul
xchg
mov
cmc
or
aaa
das
mov
xchg
filds
pushl
rol
xchg
loopne
cmp
jle
xor
xor
xor
out
xchg
push
lcall
adc
mov
loopne,pt
cli
cmpsb
test
push
fdivl
jb
pop
or
inc
cmpsb
decl
pushf
shlb
aas
xchg
jno
push
mov
dec
lds
test
push
push
iret
jecxz
jmp
movsb
ja
adc
dec
xchg
mov
inc
pop
lcall
in
mov
dec
or
mov
mov
cmove
jae
jae
aaa
shll
pop
jl
lcall
jbe
scas
cmp
mov
sub
decl
cld
fdivl
insl
push
mov
push
mov
fnstcw
aas
sub
mov
cmc
pop
hlt
bswap
xchg
pop
icebp
sbb
mov
call
push
xchg
jp
mov
mov
mov
popa
in
fs
pop
cmp
jae
outsb
loopne
sti
add
xor
pop
loop
neg
cmc
out
pop
push
movsb
inc
add
mov
incl
das
dec
pop
push
xor
faddp
inc
and
mov
jl
sbb
test
jmp
mov
push
push
call
es
cmp
loope
fcmovbe
cmp
or
adcb
jle
in
add
leave
insl
or
jge
xor
jg
or
jecxz
aas
lods
pop
dec
cmp
cmpsb
fmull
inc
fmull
negl
es
jmp
cltd
scas
cmp
mov
mov
arpl
ds
pop
lret
fiaddl
adc
lret
jp
mov
lcall
or
lret
mov
ljmp
xchg
leave
push
push
sbb
xchg
aas
popa
sbb
in
cld
pop
into
leave
and
cmpsb
pop
dec
inc
stos
jmp
divl
ja
and
stc
push
fimuls
ljmp
or
jns
inc
shl
loopne
or
mov
out
mov
pop
jg
fmull
fstpt
lods
je
pushl
jo
aam
pmulhw
push
sbb
pushf
jnp
adc
fidivrs
mov
mov
pushl
dec
jne
push
and
xchg
ja
into
cmpsl
movsl
scas
add
push
sbb
adc
test
fidivl
cld
jmp
loop
push
dec
inc
insl
xchg
cwtl
mov
push
call
xor
mov
jmp
xor
cli
movsl
cli
cld
mov
push
cmc
sub
stc
cmp
jmp
push
mov
pop
leave
mov
std
xchg
mov
dec
jp
xor
pop
dec
lods
std
mov
loopne
das
mov
aad
repnz
divw
arpl
push
ret
incl
shlb
push
icebp
adc
xor
or
and
jg
ficomps
clc
orl
lock
inc
stos
pusha
mov
sub
cmp
lods
in
push
clc
xchg
sub
fcomip
dec
cwtl
jns
stc
xchg
cmpps
mov
adc
jg
lcall
rorb
fcmovu
adc
test
mov
push
ljmp
dec
xchg
xchg
pushf
mov
mov
inc
imul
mov
mov
das
xlat
xor
mov
xchg
mov
popf
inc
adc
shll
sub
movsb
adc
imul
mov
std
mov
pushf
sbb
mov
int
std
mov
cmp
sarl
shll
jmp
jle
cltd
icebp
mov
cmp
idivb
in
lret
pop
push
shlb
imul
ljmp
push
repnz
popa
lahf
gs
xchg
push
and
std
iret
bound
jmp
push
fsts
bound
pop
mov
fwait
mov
jno
fadds
jmp
lods
jp
rcrl
cmp
ss
push
inc
sub
inc
test
sbb
hlt
inc
or
inc
jmp
push
ljmp
mov
shll
pop
rol
aas
popl
int
int3
add
in
sub
pop
rcll
mov
mov
loop
sub
pop
xchg
cli
and
incl
stc
into
pop
pop
nop
xor
pusha
xor
jne
mov
xchg
mov
ds
lret
push
mov
stos
call
push
dec
cld
sub
jae
inc
jae
mov
icebp
or
decl
sahf
ljmp
pop
in
and
xlat
dec
jo
loop
out
mov
gs
loope
ljmp
sbb
inc
add
scas
mov
out
cmp
push
in
cmpsl
mov
loopne
mov
mov
cs
xchg
mov
ljmp
pop
repz
mov
inc
adc
test
jb
xchg
decl
jg
or
lahf
xor
flds
mov
scas
ret
push
cmp
outsl
xchg
mov
imul
jmp
fnstenv
mov
jmp
pop
aam
fildl
or
mov
bound
sub
cli
mov
imul
hlt
xor
jmp
cmp
cmc
in
flds
dec
cs
or
repz
mov
xchg
loope
pop
dec
cmp
or
cli
leave
cmpsl
jno
ss
ret
dec
scas
das
mov
aad
lahf
popf
xlat
testl
fisttpl
jl
push
xchg
jnp
xlat
jge
dec
add
cltd
sub
cli
dec
repnz
les
cmp
cmp
cltd
loop
jecxz
dec
push
or
or
cmp
imul
shll
cmp
mov
cmpl
es
loopne
pop
fiaddl
mov
lock
mov
cmp
outsl
adc
inc
fstpl
pop
data16
xor
cmp
dec
add
out
jg
jnp
jmp
cwtl
jae
pusha
lahf
or
jmp
fidivrl
rorl
pushf
stos
mov
mov
cmp
cmpsb
jle
and
and
cmpsl
sub
popa
popa
jp
cmpsb
push
into
out
push
rcr
push
jns
lcall
add
incl
mov
cmp
loopne
sub
daa
aad
jb
push
iret
xlat
fwait
test
dec
clc
stos
fcmovb
call
cmp
inc
dec
in
sbb
mov
mov
pop
dec
inc
push
inc
mov
arpl
clc
sub
ret
xchg
fisttpl
inc
ljmp
mov
ffreep
adc
lea
jecxz
push
mov
lea
addr16
inc
out
sbb
decl
mul
add
inc
rolb
xchg
push
in
mov
and
cmp
sub
cmc
push
out
or
mov
jmp
outsl
mov
or
outsl
js
fnsave
sti
ljmp
sbb
inc
xor
lock
jne
sbb
push
mov
ljmp
decl
shrl
data16
insb
ret
int
cmpl
aam
in
sbb
incl
xor
sub
sbb
pop
mov
dec
mov
jmp
push
mov
mov
mov
shlb
ljmp
pop
test
push
mov
nop
cmp
lcall
pusha
fstl
popa
adc
sub
int
ljmp
sub
or
add
push
movsb
ljmp
jg
dec
adc
test
jo
push
sbb
or
pop
ss
aad
dec
js
inc
dec
dec
push
mov
mov
and
jecxz
bound
popf
fdivr
jg
push
mov
push
add
rorb
cmpsb
inc
sub
loopne
inc
and
test
daa
pop
inc
divl
jnp
call
dec
mov
int3
jo
call
sbb
stos
push
jne
sub
jns
jae
and
inc
bound
pop
xchg
add
jne
out
ds
cmc
xor
ljmp
stos
fisubs
shl
jns
addr16
inc
rorb
aam
sbb
insl
mov
pushl
iret
adcb
out
int
xchg
cmp
inc
or
insb
jnp
mov
mov
loope
leave
adc
decb
jge
push
cmc
sub
inc
faddp
ja
cmp
stos
fstl
push
daa
fisubs
push
insb
jae
sub
jmp
dec
lds
in
dec
in
hlt
fbld
adc
ja
repz
scas
inc
jmp
in
call
sbb
push
mov
imulb
das
push
sbb
out
lods
dec
addr16
ljmp
sub
jo
mov
or
dec
fimull
push
iret
aas
xchg
je
pop
addr16
sbb
cld
out
clc
add
sti
loop
push
pop
add
xchg
lods
inc
cmp
adc
scas
push
push
enter
fisttpl
iret
pop
bound
rcrl
rclb
test
lcall
or
sub
cmp
pop
or
dec
inc
xlat
push
jae
std
xchg
ret
addr16
push
pop
les
xlat
ret
call
adc
outsb
add
pop
and
iret
aam
or
jmp
jecxz
mov
aas
pop
xchg
mov
sbb
outsb
call
mov
in
mov
push
mov
push
popa
mov
fwait
xor
movsl
cmp
push
outsl
clc
jg
xchg
cltd
ret
cld
int3
dec
push
pop
inc
push
repz
inc
jnp
aam
out
jno
xlat
ds
pop
pop
sti
xor
stos
push
inc
push
repz
popa
push
jo
cltd
jne
pop
out
pushf
jg
xchg
gs
fstpl
add
clc
das
mov
inc
pop
sbb
push
jo
xchg
sbb
ljmp
test
fnstenv
repz
mov
stos
les
std
lea
repnz
cltd
and
dec
sub
xor
pushf
mov
incl
mov
cmc
sbb
mov
xchg
cltd
xchg
pop
idivb
jmp
inc
fcomip
in
cmp
stc
adc
imul
cmp
nop
push
and
and
ljmp
adc
push
btr
dec
or
je
shll
popa
sub
cmp
jg
mov
jmp
stos
cli
sahf
jbe
add
lods
cs
ljmp
lcall
das
out
xchg
inc
in
mov
mov
pop
inc
push
bound
cld
inc
xchg
insb
fsubrs
in
or
mov
iret
inc
mov
push
pop
adc
jg
call
adc
fidivrs
push
test
inc
sbb
addr16
test
pushl
xchg
adc
push
sub
lahf
mov
popf
mov
lahf
xchg
mov
mov
idivb
outsl
sub
cmpsb
pop
inc
lahf
push
jg
loop
cmp
push
push
shll
scas
jmp
jp
dec
pop
imul
scas
inc
xor
mov
ret
and
push
dec
add
call
pusha
imul
pop
xchg
jmp
cld
mov
pushf
iret
push
inc
mov
xor
xchg
lock
push
sub
sbb
push
mov
sbb
fistpl
mov
pop
cmpsb
xor
xor
pop
pop
lahf
mov
xor
outsb
cmpsl
jmp
sub
call
mov
test
mov
ds
ret
sbb
lods
mull
decl
mov
leave
shr
mov
or
push
addb
cwtl
mov
stos
xchg
addr16
pop
jle
int
mov
shll
xlat
pop
mov
int
test
pushl
mov
mov
sbb
xor
mov
sarl
cs
ss
inc
ja
mov
mov
sar
mov
pushl
inc
xor
lea
aam
imul
add
mov
jle
fwait
and
and
incl
mov
scas
inc
jb
cld
insl
dec
inc
sbb
lcall
aas
cwtl
jne
dec
outsl
and
cltd
data16
inc
cltd
mov
clc
fdivr
aaa
std
ljmp
flds
cmc
mov
out
aaa
cltd
add
dec
adc
fnstsw
stos
or
cltd
out
cltd
out
cmpsb
sbb
dec
mov
pushl
out
jle
fnstsw
sub
popa
hlt
mov
rep
jg
adc
ret
jmp
xchg
insb
or
cmp
popf
popl
lock
mov
or
jg
les
mov
push
lret
js
lds
pop
popf
jge
out
aam
aam
decl
inc
and
icebp
mov
xchg
push
fcomip
pop
pop
scas
stc
rcll
call
addb
pushf
loopne
mov
shl
enter
cmp
cmc
dec
cmp
mov
scas
jne
shlb
xchg
adc
mov
cmp
test
out
add
mov
ljmp
jno
das
sti
mov
push
or
call
pop
xchg
add
pop
sub
sbb
cmpsl
in
adc
call
dec
push
or
fisubs
push
dec
aam
jecxz
sbb
arpl
dec
gs
lret
negl
ljmp
sub
cmp
pusha
xchg
xchg
fwait
jbe
je
xor
cwtl
push
and
in
pop
mov
incl
jmp
xor
dec
shr
cmp
rcl
imul
movsl
outsl
fisubl
sub
sub
inc
pushl
shlb
or
cmp
stc
leave
xor
fsub
lahf
ret
pushl
mov
pop
mov
pushl
jmp
xor
mov
xchg
xchg
dec
aad
fldt
dec
rcr
add
sahf
insb
sti
loop
insb
jp
les
xchg
jg
shl
adc
andl
jecxz
icebp
mov
ja
sbb
push
mov
int3
decl
mov
call
scas
jl
mov
xchg
xor
daa
pushl
iret
cmp
call
out
or
add
aas
jmp
xchg
adc
test
lcall
pushl
ds
ret
aaa
xor
jo
dec
addl
cmp
jmp
iret
cltd
dec
xlat
mov
add
loopne
or
jmp
or
mov
push
or
pushl
sub
into
dec
sub
mov
pop
jl
decl
push
loopne
popf
popf
cmp
add
xor
xor
adc
scas
sbb
add
outsl
aad
rcrl
incb
xor
inc
inc
jbe
call
stos
clc
xor
aam
jo
lock
jnp
push
in
je
xchg
movsb
ja
add
mov
mov
sub
adc
insl
jmp
ljmp
outsl
icebp
lcall
jmp
xlat
jmp
call
xchg
mov
jbe
mov
sbbb
pop
lcall
cmp
rol
push
inc
or
aam
mov
iret
or
lods
loope
jmp
mov
movsl
test
in
mov
ljmp
popf
dec
enter
xor
add
sbb
jns
mov
js
enter
inc
shrb
ljmp
sub
fldcw
adc
call
call
mov
sub
dec
mov
push
icebp
loopne
sub
outsb
inc
les
pop
push
xchg
xchg
cltd
test
sub
xchg
sar
ljmp
aad
mov
push
repz
dec
fmull
lods
imul
mov
insb
mov
jg
icebp
test
lods
out
jae
ja
mov
sub
out
add
and
add
popa
fidivl
decl
adc
mov
sbb
sbb
and
aaa
add
fbld
mov
repnz
xchg
xchg
fcomps
mov
scas
xchg
jge
cs
orb
add
cmp
lods
lods
sbb
incl
inc
push
mov
fcompl
xchg
nop
mov
sarb
sar
mov
shlb
add
push
jb
adc
mov
rcrb
lret
lock
sbb
mov
lds
mov
adc
jl
hlt
pusha
inc
ret
xor
add
pop
xor
decl
int3
xchg
push
xchg
xor
jns
jge
adc
dec
sbb
scas
out
nop
mov
les
jno
mov
pusha
add
fidivrl
cltd
lea
rorl
ljmp
fsubs
orb
jmp
aad
inc
ja
loopne
push
push
enter
ljmp
pushl
fmul
std
xlat
lea
daa
jmp
push
cmp
cmp
push
inc
add
sbb
mull
idiv
jmp
cs
mov
fucomip
push
sub
pusha
sbb
adc
out
dec
jg
xor
clc
decl
lock
mov
fnstsw
push
cmp
popa
xchg
ljmp
outsb
loop
stos
test
mov
sahf
jno
mov
mov
push
dec
ljmp
push
xor
cmp
pop
mov
inc
fcomip
incl
test
adc
fwait
outsb
cmp
testb
adc
bound
inc
ffreep
xor
fwait
sahf
aam
cmp
shrl
or
xlat
fcomip
out
out
mov
sub
lret
fsubr
stos
jo
insl
pop
ljmp
jmp
movaps
and
movsl
adc
or
movsb
mov
adcb
sbb
cmpsb
lock
repz
mov
lods
in
add
cli
mov
sar
addr16
mov
mov
jb
pop
lods
or
es
out
test
mov
mov
das
dec
push
cmp
cmp
cld
jns
test
fcoml
cmpsb
or
xor
sbb
mov
xlat
add
call
punpcklbw
in
inc
stc
dec
leave
and
repnz
addl
xor
jmp
cmpsb
out
or
lods
fwait
aas
incl
sub
fimuls
sbb
sbb
popa
adc
or
mov
in
cmp
loope
mov
aaa
xchg
jno
js
xorl
cmc
sbb
and
fnsave
sub
aaa
ja
or
or
enter
movsl
jne
scas
sahf
in
call
mov
mov
lret
loopne
pop
lock
or
push
imul
add
sbb
test
dec
cli
push
pop
ja
push
ficompl
cmp
and
pop
cs
movsl
incl
clc
sti
adc
push
stos
pop
mov
lcall
icebp
pop
or
fwait
psrld
fstpl
or
cs
mov
ds
or
lds
mov
lcall
sarl
std
pop
into
mov
jecxz
push
fwait
mov
fisttpll
or
decl
mov
jle
cmp
out
jnp
or
or
clc
pusha
and
incl
imul
dec
jne
ds
inc
pushf
mov
pop
imul
pusha
ret
xchg
xchg
loopne
std
cld
lcall
push
push
idivb
in
push
cmp
inc
lret
mov
shll
test
scas
cli
sbb
call
shlb
push
jbe
lcall
js
insl
aad
xchg
movl
dec
neg
fistpl
incl
inc
cmpsb
call
dec
adc
or
jl
xchg
pusha
mov
lods
cmp
dec
int3
daa
jns
lcall
fisubrs
repz
test
and
adc
adc
mov
jl
hlt
mov
decl
sub
insb
shrl
rcrl
xor
xor
jp
pushf
push
pushl
int
mov
call
in
mov
push
or
jg
aad
sbb
into
jl
mov
jo
stc
pop
inc
ljmp
fnstcw
scas
decl
aas
pop
es
mov
pushf
jecxz
add
call
sahf
cwtl
cmc
push
sbb
lcall
sti
pop
mov
jnp
inc
mov
fdivrs
shll
xchg
push
std
pushl
push
mov
mov
push
sub
cmp
lods
and
lcall
push
mov
or
dec
inc
dec
jbe
jmp
insb
xor
and
decl
ja
out
or
mov
push
lea
fcmovnbe
lock
call
rorb
repnz
aaa
xchg
push
imul
dec
loopne
mov
fcmovnu
jg
mov
cmp
cld
or
aas
cmpsl
mov
lret
add
lds
imul
mov
adc
xlat
inc
cli
mov
ljmp
daa
scas
adc
pushf
adc
popa
repz
mov
cli
push
int3
and
mov
sub
lcall
sbb
adc
hlt
or
mov
rcll
mov
sti
decl
push
inc
jl
mov
dec
jns
jns
fisubrs
js
xchg
decl
mov
mov
sub
inc
icebp
fsubrl
lods
pop
ljmp
add
jp
push
scas
jne
aam
push
sub
iret
xchg
cmp
jmp
ljmp
stc
or
xchg
lret
sub
cli
jmp
xor
xchg
incl
inc
cmpb
leave
aas
dec
rorb
imul
jbe
pop
push
ljmp
jge
call
and
push
cld
sarl
jne
iret
imul
push
popa
incl
pushl
dec
push
test
sbb
int
mov
push
stos
cltd
fcoml
add
inc
sbb
fdivs
addr16
pop
push
mov
mov
fwait
addr16
out
pop
lock
ficoml
sbbl
xchg
nop
add
dec
mov
lcall
int
in
lods
xor
outsb
in
imul
fs
incl
imul
mov
shl
cs
pop
sti
test
loope
cmp
dec
xchg
sar
lcall
aam
dec
rcrl
adc
addl
scas
js
out
nop
mov
cmp
mov
or
dec
je
ret
js
call
std
sub
scas
fadds
cwtl
stc
cmpsb
sub
xor
sbb
mov
mov
jmp
cmp
mov
into
ds
inc
insb
cmp
xchg
jno
ljmp
mov
pushf
sub
std
icebp
cmpsl
in
stos
or
stos
pushf
jmp
mov
fs
out
mov
sbb
movsb
dec
jne
pop
outsb
jle
icebp
pop
ds
xchg
fnstcw
mov
movsb
ljmp
jno
xchg
mov
xor
sarl
pop
adcl
ljmp
lcall
in
jge
test
nop
dec
repnz
iret
js
pushl
stos
rcrl
push
mov
stc
shlb
lahf
and
jle
mov
ljmp
mov
es
test
sbb
pusha
insb
sar
mov
add
int3
popf
pop
lcall
ret
rcrb
pop
lahf
mov
and
cmp
nop
outsb
push
jns
popa
rclb
inc
mov
inc
or
xchg
cmp
push
incl
sbb
xchg
cwtl
inc
xor
xor
add
mov
imull
sbbb
arpl
out
dec
stc
jae
cmp
dec
rol
jle
insb
jl
sub
les
pop
add
scas
cli
incl
or
ss
fstpt
cld
inc
pop
jp
sub
cmc
ljmp
fs
rclb
maxps
aad
adc
mov
ret
push
ss
inc
loop
jg
popf
lds
std
testl
lcall
cmp
jns
and
or
aad
mov
mov
rcl
xchg
cmc
push
sbb
aas
push
lods
add
pop
cmp
je
sti
enter
fs
lcall
xor
aad
pop
fdivl
dec
jp
xor
push
and
xor
aam
rcr
incl
mov
or
add
shlb
shrb
inc
mov
ljmp
jge
movsl
and
cli
xchg
je
nop
pop
mov
clc
pop
clc
imul
cwtl
jp
sub
and
lcall
pushl
fcmove
push
push
mov
and
xchg
mov
pop
dec
mov
call
aaa
pop
aaa
popa
call
jo
xchg
dec
outsb
pushf
jge
inc
cmc
xor
bnd
or
icebp
call
test
out
cmc
xchg
cs
cmp
fistpl
pusha
dec
movsb
ret
fwait
pop
sbb
nop
xlat
lret
je
scas
sub
sbbb
jmp
adc
loope
sahf
dec
stos
pop
es
iret
daa
push
jp
or
sub
mov
cld
lcall
mov
push
pop
xor
rcrb
push
adc
mov
outsl
clc
call
and
jno
add
sbb
leave
stos
xor
adc
fldl2t
xchg
jl
inc
xchg
or
xlat
ficoml
cmp
xor
jmp
xor
clc
add
adcb
inc
or
sub
cmp
jle
ds
and
mov
imul
mov
jp
push
ret
cmp
in
movsb
and
sub
jno
call
inc
sub
jb
xchg
jmp
clc
dec
jle
push
out
iret
xor
leave
cwtl
loopne
test
inc
dec
adc
jbe
mov
or
adc
movsl
cmpsl
and
push
pop
popf
imul
xor
fldt
lods
cmpsl
das
ljmp
sbb
sub
cmpsl
xlat
test
testb
lcall
in
addl
dec
pop
cli
iret
adcl
pushf
pop
pop
ficoml
mov
lcall
or
jae
pop
sbb
xchg
push
jmp
cmc
fwait
decb
sub
push
jae
js
js
push
and
xchg
popa
lods
imul
call
and
sub
dec
sbb
ja
jo
sbb
enter
decb
cld
cmp
pop
or
negl
jae
xchg
popa
inc
cmpsl
jae
aaa
imul
in
loopne
cwtl
rolb
xor
cld
lcall
shll
cmpb
mov
mov
ret
mov
jl
cmp
cmp
xlat
out
xchg
adc
mov
hlt
mov
mov
jmp
cmp
scas
sbb
adc
mov
pop
adc
fs
mov
cmp
ja
inc
nop
dec
lcall
xor
movsb
xchg
mov
repnz
repz
mov
fwait
cs
popf
xor
mov
sahf
clc
push
lea
scas
call
mov
pop
clc
in
syscall
lcall
xchg
push
dec
and
xchg
mov
jns
xor
ret
pushl
mov
push
addr16
sbb
xchg
stos
pop
xlat
imul
mov
adc
incl
sub
in
pop
adc
or
loope
int3
cmp
inc
shl
sbb
cmpsb
call
fldenv
xor
cld
fwait
push
mov
cmp
std
or
add
repnz
ss
shll
lods
and
mov
incl
adc
cs
mov
pop
and
mov
add
and
push
jp
xchg
xchg
clc
add
mov
dec
or
das
aam
adc
push
cmp
popf
jge
cmp
arpl
loope
stos
decb
testl
outsb
pminsw
cmpsb
adc
push
fnstenv
std
incl
movsl
sub
js
jns
lahf
out
stos
scas
loopne
jno
int
inc
cld
jl
dec
icebp
or
dec
pop
test
cmp
mov
push
jns
jae
push
push
call
popa
stos
clc
or
data16
sbb
mov
pop
mov
cmp
nop
adc
addl
andb
mov
push
stc
mov
lret
sbb
in
negl
adc
ljmp
cmp
push
adc
push
xchg
and
push
lea
repz
call
test
lret
inc
roll
mov
dec
outsl
jmp
insb
xor
add
shlb
lcall
movsl
fisttpll
push
push
add
jno,pn
fisubrl
sbb
addr16
fsubrs
int
daa
js
sbb
fimuls
in
jp
xor
xchg
lock
pop
das
ret
mov
add
dec
mov
iret
ss
push
lret
mov
rorb
mov
orb
xchg
icebp
incl
cmc
push
fcoml
jp
mov
cmp
stc
dec
xchg
xor
sbb
dec
in
mov
add
je
scas
cmp
mov
pusha
int
out
xor
imul
inc
std
ljmp
fdivr
clc
add
in
sahf
pushf
sbb
pushl
adc
xchg
aas
out
dec
arpl
rclb
lret
mov
xor
jp
repnz
jle
cmp
adc
stc
fnstsw
shr
pop
mov
push
dec
inc
bound
cwtl
lcall
jp
mov
add
mov
sub
ror
xor
mov
call
and
mov
cmp
add
mov
clc
push
lock
dec
into
mov
mov
ret
push
or
daa
outsb
xchg
xchg
hlt
adc
pop
hlt
jl
lret
decl
scas
insb
add
or
push
or
cltd
scas
pop
inc
xchg
fucomip
daa
out
push
mov
jmp
mov
daa
push
xchg
stos
pop
sbbb
or
inc
fwait
xchg
push
push
mov
out
out
movsb
ljmp
mov
cmpsl
fisttpl
cmp
push
pop
rolb
hlt
lcall
jne
notl
mov
je
xchg
imul
loopne
in
jl
cwtl
sar
pushf
mov
shl
fcoms
ds
jl
push
flds
mov
xor
dec
and
dec
sub
mov
notb
adc
push
sbb
sub
es
inc
dec
mov
jmp
ljmp
stc
mov
ss
sub
fs
push
cmpsb
sti
scas
mov
ja
cmp
add
aaa
push
lods
mov
fsubrl
mov
notb
aaa
jns
push
lcall
leave
push
in
js
adc
popa
pop
dec
lcall
out
xchg
incl
rorb
insb
mov
fwait
inc
out
push
or
mov
data16
std
mov
icebp
inc
jno
fs
cs
in
test
jo
cs
sbb
push
pop
lock
xchg
inc
in
dec
mov
out
dec
movsl
fidivrs
call
xor
outsl
ss
cmp
mov
mov
in
lea
push
jmp
adc
sub
push
pop
in
mov
mov
mov
les
in
jne
call
adc
fidivs
out
fnstsw
lahf
aas
mov
jg
push
xchg
push
and
pop
mov
incl
mov
dec
mov
cmp
adc
push
stos
movsb
sar
jp
out
mov
xchg
dec
and
pop
xor
in
test
jecxz
orl
iret
int
xchg
inc
out
or
xchg
add
jecxz
mov
pop
incl
sub
xchg
pusha
lret
in
jae
cmp
cmp
fwait
jg
outsl
or
sub
push
mov
push
lcall
cli
fildll
jg
addl
xlat
ljmp
fdivrs
dec
jmp
pop
push
jp
mov
stos
inc
and
stos
pop
mov
int3
fldcw
or
jmp
push
loop
scas
test
sbb
bound
insb
mov
pop
jb
push
addr16
jmp
or
adc
mov
loope
sbb
loop
in
xor
cmc
mov
mov
enter
jnp
jnp
cmp
xor
jp
outsl
cmp
jnp
inc
stos
stos
jle
adc
mov
xor
in
xchg
xor
push
std
pushl
enter
jnp
sbb
sahf
or
push
sub
mov
das
incl
sarb
sub
xchg
out
movsb
insl
sbb
outsb
push
test
ss
xchg
push
ljmp
bound
pop
push
or
or
jno
dec
insb
push
imul
shl
pusha
lcall
or
adc
jnp
adcb
and
or
or
pushl
sarl
cmp
push
hlt
aam
sub
inc
out
or
mov
lahf
jecxz
pop
mov
jg
incl
or
push
sbb
add
xchg
mov
xor
decb
fs
jp
jl
std
dec
and
add
dec
mov
lahf
out
sti
pusha
sbb
push
mov
pop
shlb
cwtl
es
mov
mov
test
lcall
push
mov
sbb
mov
outsb
pop
jp
cs
jns
mov
mov
add
and
dec
ss
xor
ja
sbb
aam
js
fidivs
jne
jg
jg
call
add
aaa
dec
adc
sub
jg
mov
mov
jecxz
aas
andb
int3
jbe
push
aas
sbb
call
xchg
int3
icebp
lcall
sub
add
pop
pushl
pop
mov
jne
add
mov
outsl
cmpsb
xchg
cmp
data16
movq
scas
inc
sub
mov
mov
inc
cmp
sahf
mov
adc
push
mov
incl
cld
dec
pop
push
nop
push
js
push
xchg
cmp
mov
ret
pop
iret
push
scas
cli
aas
int
sbb
jbe
cmpxchg
hlt
add
mov
sub
inc
pop
ljmp
push
mov
test
mov
fbld
std
lcall
insb
int3
cmp
int
push
xchg
aam
ret
inc
pushl
mov
pop
inc
int3
pmulhuw
mov
push
push
pop
and
subb
push
jg
imul
je
jb
ror
and
call
xchg
adc
sub
jle
ret
sbb
pop
push
in
clc
sub
and
push
xor
push
dec
cmc
mov
mov
outsb
in
jae
incl
or
cmp
stos
lahf
push
pushf
mov
movsb
outsl
adc
pop
in
daa
xor
call
fidivl
lods
je
repz
test
sbb
or
pop
cmp
cs
lcall
mov
mov
dec
push
mov
repnz
jle
mov
ljmp
lret
fsubr
inc
ret
out
mov
btr
clc
add
in
mov
push
ror
scas
mov
xchg
stc
fcmove
adc
sub
pushl
xor
sbb
imul
push
push
sub
lea
pop
mov
out
or
fwait
call
cld
mov
fwait
push
pushl
jbe
dec
and
fldcw
loopne
sbb
jne
or
jp
inc
cli
jo
test
xor
lock
fs
sar
and
push
push
outsb
mov
xchg
mov
std
sbb
call
xchg
lock
push
add
mov
lcall
push
fcmovu
in
push
aaa
addr16
push
cld
addr16
sub
sarb
ljmp
jl
inc
orb
call
test
shrb
rorb
adc
add
cmpsl
test
clc
inc
nop
ret
testb
lock
xchg
xchg
jecxz
in
mov
mov
pop
jmp
mov
push
mov
add
lret
lods
sbb
xchg
testl
sub
and
adc
inc
lock
fcoms
push
fwait
das
xor
push
arpl
dec
add
jg
cmc
fs
pop
stc
insl
test
or
fwait
cmpl
cmpb
movsb
xchg
scas
xchg
xor
mov
into
mov
jne
push
rorb
inc
and
call
sti
ret
lods
loopne
adc
sbb
jge
and
iret
incl
clc
cld
stc
xor
mov
decl
sbb
lcall
cltd
mov
or
cmp
add
mov
js
jo
and
pushl
inc
fstpt
sbb
fdivs
jo
add
ret
xchg
outsl
cltd
outsl
pop
or
jge
mov
xchg
pusha
clc
push
or
mov
pop
cld
cmpsb
call
push
dec
sub
mov
cmp
pop
fildl
popf
xchg
call
daa
imul
call
ds
ljmp
xor
cli
fs
and
mov
in
sbb
add
call
pusha
sbb
jb
adc
lods
pushf
cs
mov
sub
or
hlt
call
nop
ret
push
mov
mov
and
adc
pop
push
iret
cmc
xchg
mov
pop
mov
ficoml
and
lds
xchg
mov
mov
jmp
cltd
mov
sbb
mov
sbb
dec
mov
iret
cmp
jmp
mov
sbb
mov
stos
adc
sti
sub
mov
call
ss
cltd
push
call
std
outsb
and
shrb
mov
shl
jbe
dec
sbb
jg
sub
scas
cmp
mov
mov
fsubrp
cmp
xchg
sbb
adc
sub
ficompl
test
jmp
cs
lea
gs
jge
push
shrl
add
mov
daa
xor
test
and
dec
or
ljmp
xchg
mov
xor
push
mov
sbb
enter
dec
mov
ja
jne
mov
mov
out
shl
cld
mov
test
mov
cmp
test
leave
repz
mov
sbb
orb
xchg
adc
mov
test
dec
mov
bound
mov
movsb
sub
jg
imul
addl
jp
rclb
cltd
leave
add
mov
cmp
mov
jl
adc
adc
movsb
add
imul
jg
ljmp
les
sub
pop
cld
jle
add
mov
or
fcomps
hlt
push
push
lcall
popf
fucomip
stos
in
fbstp
push
inc
mov
fwait
jmp
incl
fs
shl
cmpsl
insl
adc
imul
andb
jg
test
add
fstl
popf
in
mov
xchg
ljmp
add
adc
mov
call
out
inc
cmpsl
mov
add
sbb
test
mov
stos
jae
jo
add
movsb
call
pushl
stos
mov
fsubs
outsl
sarl
fisttpll
dec
pop
inc
lds
sub
ret
mov
mov
cs
add
push
cmp
negl
sar
call
ror
mov
fsubs
cmp
repnz
enter
push
jp
cs
xchg
lock
addr16
sbb
push
movsl
in
xor
sub
popa
pushf
ljmp
cmp
mov
das
dec
adc
mov
push
jno
mov
stos
xor
lret
or
or
cltd
or
pop
jo
sbb
inc
fisttps
cmp
jg
call
fisubs
dec
sbb
add
xchg
lret
jp
xor
std
push
int3
push
jecxz
inc
jnp
lds
lret
push
fimuls
lods
inc
popa
popf
pop
sbb
push
aad
lcall
pop
fs
pop
mov
fsqrt
aaa
push
xchg
enter
mov
fwait
dec
addr16
insb
call
pushl
mov
repz
pop
cmpsb
pop
and
lret
adc
xor
out
push
push
aaa
clc
pop
pushf
std
inc
mov
xor
or
sub
dec
aaa
or
jmp
sbb
ljmp
aaa
call
push
xchg
sahf
loop
mov
ds
fiadds
cmp
std
incl
mov
dec
mov
hlt
jne
or
sbb
pop
sbb
and
mov
and
add
or
cmp
lahf
enter
fcom
mov
lret
sti
mov
and
ljmp
jge
mov
fldenv
scas
ljmp
pop
pusha
pop
jb
pushaw
mov
mov
test
mov
cltd
xor
sbb
fwait
incl
pop
jecxz
lea
dec
adc
js
fdivs
mull
xor
incl
into
gs
mov
pop
adc
stc
jge
xchg
iret
or
lock
pop
jo
mov
clc
cmp
or
loopne
fwait
mov
or
pop
adc
pop
mov
imul
adc
push
std
out
and
leave
jecxz
add
push
xchg
adc
sub
stos
xor
push
cmpsb
ljmp
dec
movb
in
jg
iret
pop
shr
adc
stc
jecxz
jle
popa
stos
cltd
mov
decl
jns
jg
cmc
add
aad
xchg
push
inc
pop
xchg
mov
xor
mov
call
arpl
in
icebp
mov
jae
sbb
in
sub
jecxz
xor
jbe
rcll
add
jmp
push
ss
pop
pop
cmp
aas
xor
pop
sub
in
lods
mov
aas
lret
jmp
jb
loope
je
outsl
mov
jmp
sbb
bound
mov
call
ss
test
jnp
repnz
movsl
mov
fisttpll
loope
mov
lcall
dec
sbb
jecxz
xlat
cld
push
adc
mov
jmp
out
add
mov
fisubs
sbb
pop
inc
cwtl
sahf
pop
test
cmpsl
sahf
popf
and
insl
in
mov
or
jnp
call
mov
insl
movsl
lcall
cld
cmpsl
ljmp
out
loopne
push
push
vucomisd
aaa
and
sarb
inc
sbb
jno
movsl
imulb
scas
inc
push
decl
inc
sub
lcall
fs
sahf
inc
push
mov
loope
inc
mov
lcall
mov
clc
dec
mov
enter
ljmp
and
or
leave
pop
rcr
dec
stos
sbb
push
dec
push
dec
incl
or
aaa
and
cmc
lret
push
and
gs
loop
add
xchg
pop
loope
xchg
push
mov
lcall
pop
pop
push
sarb
out
cmp
jge
push
das
std
push
fildl
and
jne
es
sub
leave
cld
push
jl
mov
dec
imul
rorb
out
fnstsw
fcomi
test
add
call
pop
test
lods
addl
and
mov
dec
sbb
pushf
cmpsl
jg
cld
pop
dec
and
iret
adc
xor
loope
or
sub
or
pop
insb
cmp
bound
cmpb
int3
cltd
in
add
filds
arpl
bound
jns
mov
xor
test
out
mov
movsl
int
mov
out
add
incl
leave
xlat
faddp
xlat
loop
jecxz
pop
clc
inc
shll
stos
mov
mov
xchg
add
dec
jb
inc
mov
pop
and
lcall
int3
bound
dec
ljmp
sbb
inc
popf
js
loopne
mov
decl
sub
insb
jns
cmp
jne
pop
dec
push
orl
add
loope
enter
clc
out
push
arpl
dec
cmc
adc
jbe
dec
mov
sub
jg
popf
adc
sub
sbb
push
xchg
mov
adc
and
jo
filds
sbb
lcall
sbb
add
jp
pushl
divb
push
mov
test
mov
pop
movsb
cmp
mov
and
stos
in
repz
jne
data16
aaa
imul
mov
jle
lret
adc
pop
rcll
std
sbb
int
test
mulb
fsubrl
mov
jmp
sbb
shlb
add
jecxz
inc
in
pop
mov
jmp
jb
pop
lods
ja
std
cli
aas
js
arpl
push
stc
dec
sarb
call
mov
xchg
pop
mov
pop
out
jmp
ret
jne
mov
fiaddl
pop
test
cmp
mov
dec
pop
hlt
ljmp
andl
push
mov
mov
outsb
enter
push
jge
jmp
loopne
lock
leave
nop
mov
push
add
jb
xor
mov
cltd
pushl
jge
mov
enter
stos
mov
adc
lea
or
jg
jmp
dec
ss
mov
xor
sub
sub
cmc
jne
push
xchg
sub
sub
or
mov
xchg
lods
aaa
add
lcall
les
scas
mov
stos
movsb
mov
pop
xor
sbb
adc
sub
cmc
lcall
shrb
pop
pop
mov
fdivrp
push
sub
mov
or
add
bnd
lret
stos
adc
pop
xchg
add
add
stos
push
add
js
incl
iret
jmp
rorb
jecxz
cli
ds
push
inc
cmp
or
sbb
xor
lret
sbb
scas
fisubs
mov
dec
and
xor
je
call
cld
pushl
cmpsb
aam
push
sub
repz
mov
popa
stos
sbb
adc
pop
mov
decl
add
addr16
vpsubw
pop
sbb
insl
int
add
stos
cmpsl
cmpsb
mov
decb
pop
jb
lcall
test
std
test
pop
pop
lret
add
push
mov
push
incl
lods
call
aam
aas
andnps
cmc
gs
sbb
dec
mov
xor
jmp
dec
xchg
outsl
jno
jne
push
inc
div
inc
sbb
popa
sti
jnp
out
je
leave
bound
clc
dec
mov
std
fmull
cwtl
js
test
xor
xchg
test
aam
into
cmpsl
jb
dec
lcall
call
mov
pop
sub
cmp
stos
add
imul
repnz
dec
fisubrs
sub
jl
sbb
stos
xor
pushf
mov
pop
hlt
pop
mov
lcall
mov
push
mov
test
sub
pop
mov
in
xchg
cmp
dec
mov
cmp
in
stos
pop
sti
arpl
xlat
jno
cld
jo
nop
pop
insl
jno
subl
push
sub
aam
adc
sbb
xor
pop
ss
sbb
xor
enter
or
jg
and
call
repz
jg
fistpll
pop
jl
hlt
inc
sub
push
faddp
jle
xchg
cs
mov
leave
mov
xchg
call
aad
sub
imul
or
mov
cmc
cmp
fldl
push
ja
jmp
pop
icebp
daa
adc
mov
sti
push
stos
shl
pop
sbb
mov
fimull
adc
adc
iret
nop
add
icebp
push
call
pushf
cltd
xchg
mov
xchg
xchg
pushf
pop
lret
xor
sbb
cs
jp
or
mov
or
sbb
pop
imull
stos
pop
lods
xor
mov
mov
scas
scas
mov
add
decl
adc
lahf
xchg
push
fildl
bnd
inc
out
jp
fistps
inc
and
add
jmp
xchg
stos
dec
outsl
sbb
inc
jmp
lcall
mov
mov
jmp
ficompl
xchg
cmp
add
push
test
insl
or
adc
xchg
lcall
or
stos
pop
mov
popf
std
dec
rol
movb
loopne
fisubrl
sub
add
push
arpl
add
popf
xor
decl
pusha
add
loope
test
aad
cmp
pushl
xor
dec
sbb
mov
jl
pop
mov
sub
cmp
lcall
mov
mov
test
xchg
fstpt
jg
mov
pop
adc
mov
pushf
jmp
icebp
pop
in
pop
insl
ret
out
dec
fistps
insl
mov
adc
adc
pop
outsl
dec
cmpsl
push
dec
dec
jae
adc
bound
add
mov
xlat
leave
push
mov
dec
repnz
push
ds
lret
lea
ds
mov
ljmp
cli
jns
jge
scas
dec
sub
push
pushl
lods
sbb
rcll
clc
outsb
inc
jo
out
mov
sti
cmp
popa
inc
rorl
mov
xchg
mov
mov
jmp
inc
in
test
mov
mov
jecxz
jge
jge
dec
test
cmp
fs
outsl
and
call
loopne
fdivr
js
pop
xlat
jns
jbe
mov
xchg
cli
and
dec
in
into
fldenv
repnz
in
es
adc
das
mov
ljmp
mov
repnz
and
sub
ret
std
decb
enter
mov
cld
out
mov
jl
inc
add
scas
stos
fistpll
or
inc
and
push
test
inc
push
lcall
xchg
lods
int3
mov
cltd
and
cmp
fistpl
add
add
mov
fdivrl
cmpsl
dec
push
call
pop
add
mov
pop
das
xchg
xor
sub
pop
sbb
jg
mov
add
and
push
cltd
and
cmp
mov
movsl
and
xor
decl
push
movsb
inc
outsb
stos
xor
adc
xorl
in
js
adc
mov
ljmp
and
pop
inc
shll
add
es
xchg
jg
dec
sar
jmp
xor
sbb
cmp
int3
jmp
lret
sbb
pop
in
jle
xor
cmc
mov
inc
mov
mov
stc
bswap
ljmp
cmp
push
sbb
jb
pop
repnz
pushl
pop
lods
cmp
pop
in
mov
xchg
jb
xchg
xchg
inc
mov
decl
jbe
xor
jne
and
or
es
inc
nop
jb
adc
or
fdiv
aaa
cld
cli
incl
dec
xor
mov
lods
inc
cmp
sub
negl
inc
cmp
aam
pushf
iret
hlt
dec
jb
pop
xchg
sahf
sub
sarb
sub
pop
lods
cmp
jmp
pop
cmpsl
push
inc
lds
dec
inc
jmp
in
sub
inc
xlat
das
cmp
fistps
lcall
add
cli
test
add
inc
or
add
clc
ljmp
jo
mov
mov
ljmp
data16
popf
outsb
add
int
cmp
pushf
les
push
xor
push
cli
gs
mov
cmp
sub
xor
cmp
cmp
push
jae
jge
mov
inc
adc
sarl
insb
and
push
dec
shrl
insb
pop
xchg
outsl
cli
lcall
push
test
fcompl
adc
test
in
add
and
ficoml
rcrb
movsl
dec
mov
fs
xchg
into
cmp
mov
mov
sub
je
xchg
aas
or
arpl
pop
mov
sub
pushl
add
push
ss
in
inc
lods
inc
add
mov
cwtl
fadd
data16
jecxz
mov
test
or
shl
fwait
ret
in
sub
inc
incb
xchg
scas
jnp
and
repnz
imul
lret
ss
sti
dec
dec
daa
inc
arpl
fdivp
clc
push
cmp
ja
scas
incl
jg
sarb
in
dec
push
scas
incb
sub
jg
decl
test
cmpsb
aad
xchg
pop
jmp
push
mov
outsb
jne
insl
arpl
leave
decl
mov
add
std
push
les
and
cmp
loopne
dec
fisubl
mov
call
or
cmpsb
add
dec
jl
add
jg
decl
repz
sub
push
cli
and
cltd
mov
scas
cmp
lret
push
call
mov
lods
fs
mov
mov
fildll
cmp
sub
lret
sub
push
rorb
lcall
add
cmp
xor
or
lahf
xor
cld
add
clc
pop
dec
and
jae
cmp
jns
mov
cmp
repnz
jmp
mov
movsb
negl
das
clc
xor
pop
data16
lods
shrl
out
in
or
fnsave
ds
jne
push
dec
dec
in
dec
fnstcw
xlat
add
push
mov
mov
pop
inc
pushl
sti
pop
adc
lods
icebp
insb
cmp
and
mov
scas
push
cmpsb
test
call
in
mov
rep
push
gs
add
pushf
add
fdivrl
push
and
mov
das
add
fistpll
fisubrs
aas
xor
insb
mov
repz
inc
push
pop
mov
pop
jo
xlat
add
rclb
ljmp
and
inc
into
push
lea
jecxz
lcall
mov
dec
mov
inc
pop
push
push
repnz
loope
mov
cld
sbb
decl
dec
pmulhw
psrad
mov
cmp
mov
add
fpatan
or
sub
push
fimuls
xor
cmp
divb
push
mov
test
jmp
movsl
sahf
pop
xchg
cld
cltd
in
jmp
icebp
ljmp
repz
xchg
pushf
ficompl
incl
dec
test
jbe
pop
sub
incb
inc
mov
call
sti
mov
das
imul
jbe
and
dec
and
mov
mov
mov
int3
xor
sbb
jno
mov
insl
jl
xchg
call
std
es
xor
in
ss
sbb
adc
mov
repz
pop
mov
sub
lcall
xchg
jg
or
shll
cmpsl
adc
jo
sbb
sub
pushl
lock
pushf
sbbl
mov
jns
outsl
in
repnz
sub
ret
div
stos
pushl
cmp
pop
out
cs
cmc
popa
jns
inc
stos
or
test
push
cs
incl
xor
mov
fwait
sub
xchg
shrb
out
idiv
mov
dec
fdivr
push
stc
inc
bound
lcall
rcll
insb
mov
scas
mov
scas
aas
enter
xchg
xor
and
xor
scas
int3
lcall
push
inc
aaa
outsb
sbb
insb
dec
ja
dec
sub
lcall
ret
ss
inc
dec
subl
enter
lods
jnp
jecxz
ljmp
mov
mov
jg
lods
mov
jge
out
jle
ljmp
cmp
mov
loop
mov
cld
mov
pusha
jbe
pop
fisubl
stos
jg
lret
repnz
loopne
decl
lcall
mov
xor
mov
sub
movsb
call
mov
push
xor
cmp
xchg
mov
pop
lcall
mov
arpl
sbb
mov
xlat
dec
inc
lret
jl
cld
mov
mov
fs
pushl
out
arpl
add
cmpb
std
xor
mov
mov
pusha
xchg
jmp
push
mov
out
adc
and
mov
sbb
mov
pushl
stos
movsb
lret
ffreep
push
jo
xchg
push
xor
push
sub
fdivs
movsb
outsl
incl
sbb
mov
lock
sarl
arpl
ljmp
lret
out
stos
mov
xor
call
or
sub
push
cmp
pop
mov
jb
mov
in
add
add
ss
jmp
mov
int3
cs
xlat
ss
xchg
mov
mov
das
clc
decl
pop
pop
in
sbb
jmp
sahf
fdivrl
sbb
lods
iret
incl
aam
push
jg
std
stos
test
pop
xchg
insl
in
dec
aam
mov
aas
mov
pop
sbb
test
mov
mov
loopne
xchg
pop
inc
mov
decl
clc
mov
int3
fildl
lock
bound
movsl
leave
hlt
sub
pop
adc
imul
jl
xor
rorl
push
or
dec
push
int
push
sahf
xchg
pushf
xchg
movsl
mov
mov
xchg
lds
xor
xor
lds
lcall
test
sarl
ljmp
mov
lds
dec
mov
lea
std
loop
sbb
sbb
mov
push
loope
add
push
sub
xchg
movsb
push
and
ljmp
sbb
popf
jae
xor
sbb
push
sub
ja
fwait
inc
imul
ljmp
scas
in
pop
sbbb
mov
fcoml
sub
incb
adc
lock
pushl
enter
arpl
outsl
imul
pop
jb
test
pop
lea
or
mov
jl
cmp
ljmp
outsl
mov
psubw
call
std
dec
lcall
jecxz
sbb
dec
test
xorl
das
clc
push
or
add
push
orl
cmc
insl
pushl
insb
in
aaa
cmp
arpl
push
icebp
outsb
pop
jle
or
rorb
fwait
out
inc
in
fs
out
lock
ljmp
fldcw
pop
mov
xchg
das
jmp
lea
pushl
mov
out
mov
insl
push
lcall
jg
out
lcall
shrb
hlt
adc
decl
std
inc
push
dec
add
pop
inc
aaa
adc
pop
notl
pop
or
cmp
mov
cmp
rclb
lcall
ret
push
into
mov
out
xchg
push
call
or
inc
mov
and
lock
decl
jg
adc
sti
call
push
repz
gs
mov
rcr
enter
ret
xor
mov
jbe
enter
mov
sbb
add
into
nop
in
xor
lea
stc
mov
aam
fwait
adc
dec
lcall
push
mov
call
add
and
push
aaa
stc
in
xchg
in
fwait
mov
in
inc
icebp
dec
shr
pop
lds
or
inc
mov
mov
cmp
imul
and
cs
loop
xlat
stc
mov
cmp
invd
addb
jle
mov
lcall
or
sbb
adc
insb
add
inc
cmp
testl
lock
cmpb
gs
loop
jmp
or
pop
add
fnsave
fisubs
add
sbbl
out
add
into
cmc
mov
push
test
xor
aas
adc
fcomip
les
fsubrs
pop
xchg
aas
inc
icebp
pop
jg
into
andb
jne
das
cmp
jmp
push
aam
and
add
stc
cmp
and
inc
lods
ja
xchg
pop
pop
out
aam
sti
sub
push
mov
pop
add
pop
mov
and
imul
andb
cmp
pop
cmp
jg
sbb
dec
popa
adc
movsb
cmp
mov
stc
movups
add
inc
decl
in
inc
cmp
in
and
subl
and
push
pop
xchg
push
pop
cmp
incl
int3
and
das
shlb
sbb
cwtl
shlb
push
sbb
pop
and
test
inc
mov
cli
scas
repz
cmp
sub
popa
ljmp
test
jl
and
push
push
out
pop
xchg
jg
mov
divb
jne
insb
lahf
imul
jmp
xorl
fcmovnu
les
ret
fists
push
dec
stc
test
inc
das
mov
and
push
cmp
mov
test
add
pop
loope
or
mov
test
sub
sbb
lea
jge
or
jg
stc
adc
jb
cmc
push
out
mov
mov
and
jns
cld
out
sbb
jp
mov
es
sub
xchg
leave
sbb
xchg
in
out
inc
fnclex
xchg
mov
jp
xor
jne
sar
loop
decl
les
xor
push
mov
popa
adc
cmp
insb
jmp
clc
incl
cli
mov
mov
repnz
ret
and
call
sbb
fiadds
mov
pop
out
and
loopne
pushl
inc
xorl
out
cmp
outsl
fsubrs
repz
cmp
mov
into
test
outsb
in
xchg
inc
pop
mov
and
incl
test
jns
add
test
cmp
jg
scas
pop
xorb
mov
imul
pop
inc
stc
cltd
add
incl
lahf
flds
mov
sbbb
sti
push
mov
in
enter
leave
xchg
jp
push
mov
cmpsb
aaa
in
in
adcb
sub
lcall
mov
ljmp
cmpsb
idivl
mul
add
mov
decl
repnz
and
cmp
dec
cli
cmpb
addr16
hlt
decl
aas
cmc
aam
pop
fnstenv
mov
lahf
add
loope
test
and
pop
xor
push
push
inc
fnstsw
aad
sbb
mov
push
cmp
outsl
cmp
fisttpll
sub
add
lcall
rcrl
aaa
out
mov
test
arpl
adc
aad
hlt
sbb
mov
ljmp
clc
call
ja
lret
xchg
xchg
and
ret
mov
sarb
jo
push
repnz
nop
std
push
into
dec
stos
sub
clc
push
pushf
cmpsb
imul
jnp
pop
mov
jmp
xchg
xor
add
aam
jle
push
mov
ficoml
orl
mov
pushl
outsb
push
xchg
lret
arpl
je
lahf
push
lcall
and
cmp
aaa
jmp
inc
lds
pop
push
push
inc
mov
negl
fimull
mov
push
sahf
mov
aam
jmp
pop
and
leave
jmp
xor
insl
rcrb
adc
adc
stos
sub
xlat
test
orl
arpl
mov
push
sbb
out
bound
fsubs
cmpsl
mov
cmp
mov
inc
je
adc
jmp
sahf
or
out
push
test
mov
inc
cmpsl
fcomi
inc
dec
sub
pop
cli
out
out
loop
sub
and
or
jp
sti
out
stos
fildll
sti
sahf
rcl
jl
lcall
add
mov
mov
call
inc
dec
mov
jne
lcall
popf
xor
out
mov
loop
push
or
call
and
pop
add
out
dec
sbb
scas
call
sub
inc
lcall
push
mov
inc
ds
jecxz,pt
lods
fwait
ret
cli
lock
pop
push
xchg
mov
cld
jmp
dec
or
jns
jnp
fnstcw
sahf
lret
aad
jg
xor
and
mov
dec
mov
cmp
lret
insl
push
pop
lods
cmp
subl
dec
inc
add
sub
xor
mov
jle
pop
sub
adc
decl
xor
inc
jmp
xlat
lahf
loop
popa
loopne
sbb
and
in
scas
int3
pop
pop
in
dec
das
mov
jno
call
stos
test
xor
dec
inc
imul
lods
aas
adc
decl
es
test
pop
jnp
or
push
fsub
mov
sbb
jg
iret
lods
xor
int
les
leave
push
mov
jne
push
cmp
aas
enter
lahf
mov
cmpsb
adc
xchg
bound
xchg
out
stos
mov
sub
xor
xchg
mov
notb
stos
test
cmp
cmp
sbb
sar
ljmp
xor
and
popa
cmp
mov
and
xchg
push
pop
int
mov
ja
cld
decl
ss
sbbl
and
adc
aad
xor
sub
daa
mov
out
imul
aas
mov
and
imul
mov
decl
sbb
inc
mov
cmp
jg
sbb
movsl
sub
clc
jae
pushl
bound
orb
in
lock
clc
daa
pop
sbb
scas
xor
decl
or
mov
mov
sbb
cmp
dec
lea
nop
test
pushf
inc
jmp
or
out
sarb
in
jmp
push
and
lock
mov
jg
loope
push
mov
and
mov
inc
aas
notb
lcall
fistl
fbld
dec
in
cmp
lcall
repz
out
out
and
dec
lret
popa
sub
lret
push
lahf
insb
outsb
cmp
jno
cmp
push
push
sbb
ljmp
adc
outsb
or
aas
pop
jmp
xchg
in
inc
push
xorb
inc
movsl
data16
pop
pop
jecxz
rcr
icebp
cmp
inc
or
fs
and
cli
jg
adc
cli
fnstcw
mov
sbb
jecxz
sbb
jo
dec
movsl
jl
mov
test
aad
pop
pusha
pop
cmc
mov
stos
jne
push
add
adc
jmp
or
jnp
aas
fidivrs
dec
das
or
jecxz
jmp
jno
or
add
lret
xchg
fdivr
jg
ljmp
pop
cld
cmp
adc
pop
fisubrl
push
push
cmp
push
and
decb
pop
adc
xor
call
mov
sahf
fbld
jge
mov
push
pop
cmp
orb
add
icebp
pop
cld
sub
xchg
ds
cmpsl
mov
push
in
les
decl
mov
cs
es
xor
data16
test
push
decl
cmc
sbb
mov
das
mov
bndstx
adc
lret
fs
jmp
sub
incb
stos
cmp
out
inc
lds
inc
imul
nop
fdivs
pop
xor
mov
cli
jmp
in
in
mov
rcl
call
jg
push
fs
ret
adc
cli
in
or
adc
inc
push
cltd
dec
aad
repnz
add
test
jne
roll
popf
mov
ljmp
push
in
out
adc
jnp
inc
xor
xchg
in
popa
scas
lcall
nop
mov
pop
lods
sbb
cmp
inc
xor
adc
cmp
sbb
ljmp
mov
lock
xchg
mov
das
sub
jo
lds
enter
cld
sub
sub
popa
in
sbb
add
test
incl
mov
imull
xchg
mov
xor
mov
push
mov
popf
or
inc
es
enter
cld
jne
pusha
scas
push
xlat
lds
sbb
pop
mov
clc
clc
jl
add
sbb
jecxz
jp
decl
dec
sahf
gs
movsb
scas
rolb
leave
icebp
dec
and
insl
dec
push
mov
sbb
incl
lds
imul
mov
inc
addr16
xor
dec
mov
stc
loopne
or
jmp
mov
dec
adc
xchg
jno
jg
fdiv
mov
sub
xchg
adc
jb
push
call
decl
jo
xor
cmp
insl
or
cmp
clc
ds
or
adc
inc
jp
push
pop
insl
scas
pusha
mov
ret
movsb
jno
aam
decl
xor
pop
ljmp
and
inc
push
mov
cmc
std
test
jg
push
sbb
test
sub
jecxz
test
inc
inc
jbe
fucomip
mov
call
mov
or
fildl
fdivs
xchg
push
std
jmp
jmp
pusha
xlat
fs
push
lea
jbe
xchg
jmp
btr
and
push
lahf
and
lcall
cmp
xchg
jecxz
mov
inc
cmp
dec
rorl
adc
ja
jb
lcall
cmp
pop
popf
repz
lret
testl
sub
js
xor
call
pop
jmp
daa
mov
add
sahf
ror
ret
and
xlat
or
mov
rcrl
dec
stc
dec
loop
pusha
nop
mov
das
and
jl
pusha
sub
inc
outsl
ds
or
pop
movsb
cltd
decl
icebp
push
ljmp
das
pushw
pop
cmpsb
inc
mov
in
mov
ljmp
and
push
lods
jb
dec
cltd
inc
sbb
rorl
cmp
lcall
call
out
lock
mov
mov
mov
data16
movsl
pop
pop
dec
pop
outsl
pop
out
jb
in
jp
mov
sbb
frstor
popa
ja
jbe
xor
push
jb
imulb
xchg
push
add
repnz
in
jbe,pt
mov
leave
jae
adc
mov
fisttps
add
sub
dec
jmp
ret
mov
jno
cli
les
in
jae
push
out
pushf
out
bound
pop
es
jmp
sub
mov
js
std
mov
add
dec
sarl
cwtl
cli
call
sbb
xchg
lret
push
ljmp
shl
dec
decl
lods
pop
cli
or
dec
inc
mov
ljmp
xlat
add
cwtl
cmpsb
inc
pop
push
pop
lods
xor
push
lods
int
pop
inc
jmp
test
inc
or
cmp
add
insb
lret
or
ljmp
sub
imul
scas
add
push
out
mov
decl
jae
sar
int3
sbb
call
lcall
xchg
jg
sub
sbb
lcall
mov
sbb
aaa
or
mov
add
add
cmp
pop
add
jp
inc
xchg
std
arpl
or
test
cmpsb
adc
mov
lret
cmp
call
testb
sbb
scas
lods
jp
fimull
movsl
popa
mov
push
ds
callw
les
push
gs
cmp
mov
scas
enter
lret
test
sub
test
in
mov
sti
cli
and
lcall
push
add
fisubl
dec
sub
lods
mov
dec
jne
dec
mov
outsl
mov
sbb
fcomip
ljmp
ret
xchg
outsb
push
scas
adc
xchg
push
sub
cmp
jl
jle
sti
jmp
push
pop
jo
pop
jle
push
inc
xor
mov
push
imul
in
shlb
lcall
adc
sahf
jge
ret
push
mov
arpl
cmp
add
or
cmp
push
cld
add
inc
inc
jo
xor
inc
and
movb
mov
mov
cwtl
iret
cmp
fidivrl
jne
stos
ljmp
fidivs
or
dec
mov
int
les
aas
adc
mov
xchg
arpl
fwait
divl
or
or
or
push
in
xor
cs
mov
loop
aas
add
hlt
rcrb
pusha
js
es
pop
fidivrl
lock
sub
jg
xchg
ljmp
cmp
inc
test
mov
lahf
pushf
lods
dec
int3
cltd
inc
sbb
adc
in
push
and
inc
decl
testb
mov
aam
mov
stc
mov
jg
add
cli
std
pop
fdivl
orl
lcall
and
or
cmp
or
xor
adc
cmpsb
pop
xlat
dec
push
xor
pushl
jne,pt
imul
shlb
repnz
sarb
inc
xchg
inc
or
dec
mov
sbb
bound
cmp
cltd
dec
cli
pushf
mov
int3
add
jne
jg
mov
ljmp
mov
icebp
fincstp
fildll
or
pop
sub
xchg
bound
lds
decl
jbe
popa
jle
jne
inc
xchg
test
mov
sar
aad
mov
insb
and
add
push
enter
pop
xchg
push
sub
ljmp
xchg
cmp
test
xor
cmpsl
lds
xchg
jl
ss
js
repnz
push
outsl
xor
push
mov
jmp
jo
arpl
mov
mov
das
and
push
add
jl
aad
jmp
mov
call
aam
or
jg
std
es
repz
pop
jge
add
addr16
pusha
jmp
inc
hlt
pop
mov
sub
push
sub
or
mov
cwtl
jmp
repnz
inc
sub
popl
inc
pop
mov
aaa
popa
pop
jo
adc
dec
fisttps
pop
sarl
dec
scas
push
pop
pop
clc
js
cmp
aad
pop
mov
stos
call
jg
mov
stos
add
js
rcrl
dec
cmp
int3
inc
pop
cli
or
nop
pushf
inc
or
dec
sarl
outsl
fiadds
cmpl
hlt
xchg
dec
mov
inc
mov
mov
cmp
cmp
sbb
cmp
ljmp
add
popa
jecxz
pop
pushl
shlb
xchg
mov
xchg
aas
gs
mov
lret
in
mov
xor
lcall
hlt
call
cmp
aad
mov
fs
adc
ja
push
lcall
movsb
ret
shr
mov
int3
and
icebp
addr16
inc
icebp
mov
mov
ljmp
adc
sbb
out
nop
xor
insb
scas
leave
mov
lcall
adc
jnp
in
adc
or
xlat
push
in
cmc
bound
sbb
scas
arpl
rorl
cmp
gs
and
vmovd
stc
jmp
stos
jne
xchg
repnz
int3
imul
dec
push
xchg
lahf
dec
arpl
test
jno
idiv
incl
and
add
lea
pop
outsl
addb
ss
inc
inc
in
and
push
cmp
add
mov
loop
mov
jbe
call
cmp
add
ret
xchg
lret
push
sbb
xlat
cld
mov
jle
mov
push
xchg
nop
mov
xor
andb
mov
mov
into
es
adc
cs
dec
fldt
insl
cmp
xchg
jb
mov
out
inc
sbb
call
and
addr16
fisubrl
pushf
pushf
lea
movl
stc
out
dec
push
pop
ret
inc
das
and
pop
out
lret
or
cmp
mov
adc
xlat
dec
mov
push
pop
loope
inc
push
pop
jl
mov
pushl
mov
inc
dec
mov
std
jno
push
sbb
or
icebp
push
std
pushl
pop
mov
pmaxub
inc
outsb
add
in
cmpsl
add
add
fldt
jo
jb
aas
sbbb
mov
and
jecxz
aaa
adc
call
int
gs
mov
in
das
rcrb
lods
stos
jns
lods
jns
jg
pop
popa
fildl
cld
mov
lcall
mov
int
shrb
aaa
pop
lock
pushl
jp
sbb
inc
out
mov
mov
leave
in
cmpsb
pop
cmp
incl
jmp
repz
add
push
insl
sub
or
enter
decl
clc
lcall
mov
pop
pop
insb
push
roll
mov
decl
xor
aam
push
cmp
in
mov
sbb
inc
pop
inc
inc
fcomi
pop
cmp
sti
lock
jecxz
xor
clc
jmp
inc
pop
test
ja
call
adc
and
repnz
cmp
mov
add
inc
sarb
xor
sub
jb
popa
idivb
int3
into
pushl
adc
jmp
mov
dec
inc
int
mov
sbb
jmp
inc
mov
jle
mov
xor
mov
ficoms
lock
imul
sbb
lcall
pusha
nop
sti
ljmp
testl
subl
call
in
push
push
or
fistps
jo
test
les
or
adc
mov
out
add
stos
mov
cmp
xlat
arpl
call
addr16
pop
jl
incl
in
mov
pop
cwtl
stos
or
test
inc
pop
ljmp
inc
std
call
jmp
insl
pop
mov
arpl
mov
in
and
fisttps
pop
in
out
stc
sbb
clc
movsl
adc
daa
call
pop
pop
mov
mov
lahf
dec
insb
sbb
add
or
incl
pop
or
adc
mov
es
jle
outsl
movsb
mov
dec
call
lret
push
push
ds
mov
and
mov
mov
cwtl
dec
fsubl
popf
xor
je
jns
movl
fwait
cld
adc
inc
ret
jmp
mov
lcall
hlt
repnz
or
pop
jl
std
popa
adc
ret
daa
xchg
pop
vpcmpeqb
lea
fidivrl
fbstp
enter
out
ret
and
cltd
or
xchg
dec
bound
push
test
ljmp
in
insb
inc
movb
bound
xchg
mov
cli
call
xchg
dec
leave
roll
ret
mov
add
cmp
push
scas
mov
ljmp
pop
and
push
sbb
decl
cwtl
es
inc
fnsave
mov
fcmove
popa
mov
inc
inc
pop
lea
mov
dec
out
mov
and
icebp
jl
cmc
fsubr
shll
pushf
rcll
add
call
pushf
fcmovne
sbb
add
xchg
test
decl
xor
in
pushf
pop
iret
or
dec
sti
mov
pop
jbe
push
push
cwtl
rcl
pop
inc
jecxz
pushl
int3
int
adc
stos
mov
enter
adc
lcall
cwtl
pop
adc
add
frstor
and
xor
test
mov
mov
pop
aad
jmp
mov
pop
add
repz
mov
mov
popa
hlt
outsl
push
ret
out
pusha
inc
pop
inc
mov
stc
or
fwait
lods
decl
dec
dec
notb
pop
pop
rcll
adc
mov
iret
push
mov
lods
cmc
inc
into
adc
push
jnp
inc
hlt
andb
or
ljmp
fwait
sub
sbb
pop
nop
or
aad
pushf
lcall
ds
cmp
cmpsb
inc
scas
jae,pt
xor
cmc
lret
lods
dec
cmp
pop
icebp
ljmp
fimuls
jae
cltd
sbb
shl
dec
cwtl
xchg
imul
aad
mov
mov
cmp
push
cld
test
arpl
icebp
sub
cmc
out
add
adc
movsl
lret
mov
mov
jmp
or
cld
es
xchg
insb
dec
pop
inc
xor
push
imul
mov
xor
lahf
pop
jbe
pop
cmp
mov
dec
cltd
ss
rcl
pop
in
and
call
gs
jmp
in
mov
mov
and
cmp
aaa
jmp
movsl
out
or
gs
inc
fsubr
jo
push
mov
addr16
mov
pop
dec
sbb
lcall
mov
jb
stos
mov
xor
pop
addb
xchg
pop
iret
ljmp
xlat
inc
ret
sbb
pop
sti
pop
fstpt
sahf
out
xor
in
dec
cmp
jmp
pop
popa
pop
ss
xor
jo
mov
or
test
inc
pushf
add
arpl
xchg
decl
ficoml
pop
and
lret
push
negb
int3
cmpsl
fadds
std
inc
pop
xchg
push
aas
lcall
jge
cmpsb
sbb
ret
sbb
jge
mov
push
inc
and
call
test
sub
scas
xor
aad
adc
pop
adc
jbe
mov
and
pop
cmp
cmpsb
pushl
cmp
stc
scas
and
pop
push
sahf
xchg
mov
incl
or
cwtl
test
mov
daa
lcall
mov
jmp
xor
mov
inc
dec
mov
xchg
arpl
mov
ljmp
mov
or
les
pop
scas
lret
sbb
inc
xlat
push
adc
push
mov
jmp
lcall
pushf
addr16
ss
pop
fs
lahf
inc
mov
incl
jle
cltd
mov
add
roll
pushf
daa
sub
mov
mov
idiv
mov
cmp
xor
fcmovne
dec
into
das
mov
pop
shrl
lock
push
push
dec
pop
sbb
dec
decb
cwtl
jmp
cmp
jae
xchg
inc
pop
movsb
pop
and
mov
popa
nop
cltd
inc
enter
idivl
jae
ljmp
mov
iret
mov
out
outsl
aam
jo
call
sub
cli
decl
mov
pop
into
add
aaa
mov
inc
xchg
jge
cwtl
mov
popl
aad
sbb
xchg
mov
js
mov
and
sub
call
fldpi
fwait
dec
cmp
mov
pop
jo
sahf
cmp
lds
imulb
push
add
test
mov
call
pop
mov
adc
pushf
imul
popf
sti
nop
loope
lcall
sub
call
cld
incl
int
cli
inc
xlat
les
lds
enter
cmpsb
jmp
mov
and
insl
adc
stos
and
aas
lods
mov
pop
jl
jg
add
dec
fmul
loopne
dec
adc
aam
adc
ret
mov
shlb
call
fildl
ret
sub
shlb
push
jb
aaa
sub
mov
xor
jno
pushl
and
sti
sahf
ret
fisttpl
cmpsl
imul
jmp
or
cwtl
push
sub
mov
mov
add
or
test
fisubrl
shr
mov
inc
push
adc
andps
push
sub
pop
test
xchg
movsl
je
clc
sbb
cmc
lcall
ret
aas
das
xor
push
or
xchg
push
cwtl
movsl
mov
rorb
leave
sar
ljmp
add
or
cmpsb
aam
jo
lret
movsl
out
dec
fstps
jno
mov
lret
sbb
jmp
stos
popf
or
fdivrl
add
in
sub
push
mov
mov
xor
dec
stc
sub
test
mov
cs
filds
pop
mov
ret
sahf
sub
mov
addr16
cld
lcall
push
arpl
xchg
pop
jg
xor
mov
sbb
lea
or
push
es
jge
xchg
loope
sub
push
mov
lods
and
rcrb
dec
mov
sub
push
jg
lcall
adc
out
jg
jmp
pop
and
pop
les
fbld
inc
lahf
mov
pop
xor
sub
and
lret
les
loopne
loope
leave
cmpsl
jl
adc
ljmp
mov
and
push
pusha
cmpsb
iret
in
mov
shrl
inc
orl
and
adc
mov
xlat
fcomip
pop
in
jle
das
fcmovu
rsqrtps
add
mov
or
pop
lret
mov
dec
mov
cmp
je
mov
push
stc
enter
mov
push
aad
inc
roll
push
mov
dec
jno
adc
fcomip
call
add
hlt
addr16
ja
loopne
xchg
sub
iret
faddl
mov
add
and
xor
lock
sub
ljmp
add
and
add
out
hlt
test
xor
or
into
ljmp
sti
or
push
outsb
stc
jle
in
mov
incl
gs
mov
adc
mov
stc
push
mov
ret
xchg
push
pinsrw
cmp
and
negb
dec
sbb
mov
imul
repnz
mov
ljmp
test
cmpsb
and
xchg
test
mov
sub
jno
pop
pop
out
and
std
jle
into
sbb
mov
jl
out
or
mov
dec
push
fcomip
jmp
mov
push
jne
mov
jecxz
adc
nop
outsl
sbb
push
idiv
andb
pop
icebp
decl
dec
aam
mov
ss
mov
cld
incl
push
test
fwait
push
pop
jo
mov
loope
jg
fwait
ror
pop
xchg
ja
cmc
sub
mov
jns
pushf
inc
push
fisttpll
fs
sub
xor
mov
in
cmp
dec
mov
test
out
cld
aam
mov
call
daa
lret
inc
inc
xlat
sbb
sahf
cmp
sbb
cmp
cli
dec
sahf
cld
dec
pushf
sbb
push
decl
cmp
ds
stos
outsl
stc
aam
or
ss
data16
inc
aaa
lock
mov
loopne
arpl
pop
cwtl
lea
orl
call
lods
in
call
cmc
push
or
push
pop
add
inc
inc
mov
stos
lret
mov
std
cmp
inc
sub
push
xor
inc
mov
rclb
fmuls
out
ljmp
ficomps
ret
jp
xchg
sub
movsl
inc
push
into
inc
lcall
inc
mov
add
fcmove
stos
xor
je
std
xor
outsl
add
mov
pop
add
repnz
mov
pushf
pop
pusha
xlat
xchg
ret
mov
stos
repz
jno
push
ljmp
push
push
lret
sbb
or
or
stc
shrb
pushl
out
fimull
mov
push
ficoms
mov
inc
iret
ficoml
call
xchg
mov
ljmp
lret
pop
mov
and
and
jg
inc
mov
arpl
pop
subl
sbb
test
ja
lea
ljmp
das
cmp
push
mov
mov
in
cmp
bswap
and
cmc
pop
lcall
dec
stos
jmp
pop
mov
pop
daa
popa
mov
test
mov
jo
std
sbb
les
mov
mov
cmp
add
mov
fmull
jge
push
sub
aas
fcomps
lcall
push
mov
decb
mov
paddd
pop
push
popf
negb
jbe
fcomip
loope
negl
rorl
loop
jns
and
adc
cmpsb
push
bound
xchg
dec
sub
fidivrs
shr
and
shl
addr16
scas
fistps
jmp
dec
decl
mov
mov
xchg
mov
pop
jb
jmp
push
and
call
pop
adc
cmp
mov
adcl
daa
xchg
cli
jae
les
xchg
in
jae
mov
mov
outsl
mov
fisttps
cmc
fsubr
fiaddl
jg
sbb
jno
xchg
jp
sbb
sarb
add
pushl
adc
jmp
rolb
aad
pop
mov
jmp
repz
cld
test
push
inc
push
icebp
notl
cmpsb
lcall
jmp
and
std
push
pop
dec
stos
fmulp
mov
fdivr
fcomip
nop
jecxz
ja
push
int
add
dec
fcoms
cmp
add
int3
or
inc
ljmp
xchg
ds
mov
clc
gs
popf
adc
adc
lcall
fidivs
lock
lea
xlat
imul
add
jp
or
sbb
mov
cli
push
cmp
sbb
or
pop
xor
mov
or
outsb
jnp
movsl
adc
and
call
or
mov
outsb
mov
xchg
jp
cmpb
scas
outsl
fcom
add
inc
xor
jne
aad
sti
add
in
stos
stos
jle
mov
cmp
incl
mov
mov
test
mov
xchg
sbb
out
cmpsl
popf
fidivs
fcomip
fisubs
test
andb
jg
and
fistpll
inc
ret
or
rolb
add
add
push
xor
pop
dec
ljmp
dec
ja
cltd
mov
int3
in
xor
inc
and
xor
scas
jg
cmc
xlat
aas
repz
int3
lock
mov
daa
inc
sahf
jmp
in
add
outsb
js
cltd
and
incl
sub
cmp
out
sbbb
adc
inc
out
out
add
pushl
rcll
mov
xor
inc
xchg
push
jmp
ja
or
cs
sbbl
push
pushl
ljmp
sbb
jp
adc
pop
dec
adcl
insb
pushf
inc
jae
pop
cmc
inc
lahf
pop
insl
clc
decl
shl
test
dec
mov
xchg
cli
and
das
lret
inc
cmpsl
dec
ljmp
dec
sub
or
stc
ret
xor
call
dec
clc
cmp
stos
xchg
int3
jmp
sarl
ljmp
xor
decl
sbbl
rorl
jnp
jge
in
jo
outsl
sbbl
aad
fidivs
fdivs
inc
lret
mov
outsl
cwtl
sub
jns
mov
insb
pop
jp
jbe
sub
add
pop
xchg
mov
jmp
mov
or
inc
push
repz
bound
in
rol
inc
jae
mov
or
ljmp
sub
push
daa
cmpl
lcall
pop
push
push
test
mov
push
mov
inc
mov
adc
ljmp
sub
add
clc
lcall
xor
rcrb
popf
orb
xchg
jno
mov
out
inc
decl
les
dec
xchg
xchg
pop
lods
cli
inc
lds
lds
std
pushf
mov
call
je
xchg
in
sub
in
in
xchg
push
mov
cwtl
cmp
aaa
std
clc
push
test
dec
xchg
lret
adc
sbb
add
cmp
mov
jmp
mov
andb
test
mov
jge,pn
aam
dec
and
mov
in
inc
out
jmp
push
mov
je
jge
xchg
pop
es
pop
and
mov
sub
push
mov
cs
outsb
lcall
pop
inc
es
loope
xchg
outsl
addr16
jge
mov
aad
test
mov
out
int3
loope
pop
daa
ficoml
call
into
adc
mov
xchg
test
lock
xchg
movsl
push
jecxz
cmp
jg
inc
je
xchg
in
repnz
push
mov
push
andl
scas
movsl
daa
iret
inc
push
xchg
mov
or
setno
fnsave
inc
mov
jg
das
arpl
cltd
add
mov
int3
xchg
ficomps
mov
sub
fdivr
push
cld
pushl
data16
scas
outsl
jecxz
loope
mov
mov
enter
and
ljmp
incl
push
repnz
or
add
cmpsl
cmp
psubusw
dec
or
cmpb
fidivl
push
rcrb
clc
cld
mov
rcrb
mov
insb
or
push
add
sbb
mov
lcall
or
outsl
mov
jge
mov
out
or
lock
xchg
sub
cmp
mov
into
ret
adc
lea
jmp
fisttpl
and
decl
lods
cld
xchg
imul
sbb
xchg
pop
dec
movsl
jp
jle
and
adc
js
stc
or
inc
jbe
into
sub
xlat
pushf
out
xlat
and
xchg
mov
push
pushl
jbe
ficoms
xor
xor
leave
cmp
mov
daa
test
inc
aas
jmp
lds
jg
jo
mov
je
notb
adcb
push
clc
subl
sub
shl
fnstcw
mov
stos
es
jl
xor
push
cmp
cmp
pushl
scas
inc
xchg
xchg
mov
or
clc
std
add
and
mov
and
lcall
out
jle
and
cvtdq2ps
fmull
out
inc
pop
xor
addr16
jo
cmp
mov
xorl
xor
fistpl
icebp
push
adc
lcall
and
inc
insb
pop
loopne
pop
cmp
sub
dec
arpl
sub
jecxz
adc
decl
sti
icebp
roll
push
push
mov
movsb
nop
ss
repnz
in
mov
icebp
andl
mov
or
call
xchg
dec
es
mov
cwtl
js
lahf
dec
aad
mov
incl
mov
dec
sub
dec
xchg
xchg
cs
push
and
jg
lds
inc
mov
ret
mov
sub
fbstp
enter
out
cmc
sub
lahf
mov
and
call
add
cmpsl
sar
cmp
xchg
inc
fcom
ss
out
pop
cmpsb
push
and
les
pop
ficoml
adc
nop
jp
rorl
push
xchg
cld
push
stos
outsl
scas
data16
jmp
and
adc
mov
inc
and
sbb
incl
mov
inc
lahf
insb
mov
jno
int3
leave
mov
push
scas
xchg
pop
call
jmp
pop
shrl
call
ss
dec
ljmp
cmp
sbb
lods
fmull
shlb
inc
or
xchg
mov
inc
clc
xor
ljmp
jbe
sarb
pop
adc
sahf
les
cli
ret
push
mov
das
or
dec
pop
pop
cmp
jmp
stos
and
lods
into
xor
leave
nop
push
sbb
mov
ss
inc
jmp
loope
cmp
pop
mov
scas
push
call
cmp
push
dec
out
rclb
jmp
ss
lret
dec
jmp
ret
in
sbb
inc
cmpsb
adc
inc
popl
mov
cli
jnp
incl
xchg
es
mov
fistpl
outsl
mov
lahf
jp
jp
rol
jg
enter
cmpsl
mov
fbld
std
je
jmp
fwait
jp
mov
mov
add
jne
push
push
bound
fldl
xor
xor
mov
incl
jge
in
mov
daa
push
sbb
mov
cmp
fisubrl
ss
or
cli
xchg
or
lods
jge
clc
push
pushf
inc
xchg
cwtl
and
insb
fcom
sub
jno
pop
decl
dec
sbb
flds
ud2
in
cwtl
jmp
movsb
dec
sub
sub
xchg
or
pop
xchg
push
in
dec
loope
incl
mov
add
ret
stos
leave
xlat
dec
xchg
jo
into
jns
lcall
aam
movsb
mov
pop
xor
data16
xchg
sub
add
add
cmp
fnsave
and
xchg
data16
out
mov
aam
sbb
xchg
and
or
ud0
aas
in
sbb
adc
sti
or
les
cmp
pop
push
jecxz
dec
pop
decb
xchg
add
lahf
call
mov
pop
jmp
dec
jns
jge
mov
jne
jno
into
ss
ljmp
push
fs
dec
cmp
lds
add
jge
lods
repnz
sub
stc
and
jmp
loopne
jns
faddl
jecxz
and
xor
push
aam
sub
fcompl
call
scas
push
pop
enter
dec
jae
icebp
sbbb
mov
jg
add
call
mov
sub
or
icebp
insl
jecxz
insb
and
das
imul
in
cltd
aaa
and
or
dec
cmpsl
pop
fbstp
out
sarb
stc
test
arpl
scas
xor
loop
scas
mov
sub
out
ficompl
mov
pop
push
xchg
ljmp
xchg
ss
out
or
jae
subb
and
push
ljmp
cs
xor
arpl
es
mov
sahf
mov
fs
das
add
es
pushl
testl
jbe
adc
sbbb
push
adc
fmull
push
add
jo
xor
xchg
mov
into
and
push
adc
in
rcrl
repnz
lcall
mov
in
je
or
cmc
into
mov
sti
jmp
xchg
pop
mov
cli
mov
decl
jge
pop
inc
ret
in
lods
sti
loopne
push
insb
and
push
shrl
stos
es
out
clc
jmp
and
mov
mov
mov
mov
add
out
or
decl
loope
jns
imul
pop
and
lds
jnp
fisubrl
xchg
xlat
mov
incl
cmp
fstl
jge
ljmp
jne
jle
jnp
out
pushl
cmc
aad
dec
sbb
xchg
in
popl
or
in
ds
movsl
insl
ret
test
mov
in
push
pop
inc
movsl
sarl
shll
je
lcall
jns
inc
inc
jp
sahf
adc
xorl
daa
test
add
loope
mov
xchg
mov
dec
push
into
arpl
and
sub
mov
adc
divl
jmp
xor
push
or
sahf
inc
fsubrl
push
cmp
mov
push
fistl
clc
lcall
in
push
loop
call
ds
inc
ss
hlt
decl
iret
cmp
cli
or
push
pushf
lock
ds
insb
ffreep
popf
ljmp
jmp
ret
push
ljmp
test
dec
sub
loop
ficomps
test
ret
pop
loop
fcos
jmp
dec
jo
loop
jp
lret
and
aad
loopne
pcmpeqb
jo
ret
lcall
out
daa
push
sbb
nop
nop
fsubrs
dec
push
mov
mov
ds
jg
jmp
mov
outsl
pop
andb
and
insb
sahf
idivb
incl
in
ja
adc
imul
mov
sbb
fidivrs
jbe
mov
incl
xchg
out
mov
sahf
sbb
decl
push
inc
test
lds
imul
out
xchg
push
xchg
push
pop
lcall
push
or
hlt
loopne
jmp
dec
loopne
mov
cmp
shll
jmp
add
inc
jo
aad
call
cmp
ljmp
ret
das
jl
shl
std
call
add
insb
jg
lds
jnp
iret
fnstcw
mov
pop
stc
lock
jp
xchg
or
mov
in
sbb
push
and
push
decl
pop
sub
out
mov
ret
cmp
mov
out
fcomip
mov
mov
or
mov
std
sbb
sub
add
enter
stos
pop
icebp
ljmp
adc
fs
fsubl
push
xlat
rolb
scas
out
loopne
jmp
test
std
jecxz
lock
jle
inc
pop
pop
inc
repz
lcall
mov
hlt
xchg
push
mov
pop
push
sbbl
sub
xor
outsb
lods
and
mov
decl
sarl
jecxz
fstpl
inc
stos
sbb
pop
inc
add
push
decl
sub
or
push
insb
or
xorb
cmpsl
xor
fs
bound
bound
jge
sbb
arpl
movsl
popf
icebp
push
fwait
and
adc
sub
mov
ljmp
rclb
xlat
scas
es
push
xor
mov
mov
xchg
cmp
push
int3
pushf
shll
push
mov
jge
fstpl
inc
pop
and
pop
negl
push
pop
mov
addl
out
mov
or
loope
decl
pushf
adc
xorb
repnz
decl
cld
iret
divb
data16
fsubl
mov
daa
sbb
ljmp
mov
sbb
std
rorb
sbbb
push
imul
enter
mov
and
inc
lods
push
xor
or
gs
or
jp
push
decl
outsb
ret
mov
test
ss
mov
ja
call
mov
jmp
into
outsl
xor
add
jge
jmp
outsl
mov
sti
shl
sub
ljmp
push
jne
int
int3
pop
dec
rcrl
or
cmc
and
or
std
ljmp
adc
or
dec
mov
out
sub
add
push
aas
lcall
decb
out
mov
int
lock
sti
sub
inc
lret
jge
jno
cmpb
pop
push
add
jp
js
adc
imul
jno
lcall
inc
mov
ss
xor
bound
add
mov
xlat
jae
call
adc
and
shrb
push
pusha
mov
inc
jecxz
mov
nop
jne
xor
fmull
mov
xchg
in
gs
test
jecxz
xchg
cmp
mov
int3
sbb
jmp
pop
pop
jnp
inc
dec
xchg
in
sub
fiadds
cmp
jnp
sub
mov
jb,pn
aam
pop
ret
sub
cmp
lahf
push
divb
clc
push
repnz
repnz
dec
out
dec
jg
repnz
cli
pushl
cmp
sbb
repz
das
mov
pop
pop
xor
push
clc
stos
push
pop
decl
leave
mov
cwtl
and
sub
pop
inc
clc
add
cmpsl
lods
fwait
scas
xchg
xchg
sub
popa
mov
ror
das
dec
xchg
pop
jnp
jns
sub
flds
aas
dec
mov
inc
sbb
mov
jmp
jmp
jle
sbb
jne
cmp
lds
inc
inc
mov
stc
das
and
push
ret
scas
push
pop
jmp
stc
xchg
add
mov
rcll
mov
push
mov
or
jmp
scas
push
or
lret
incl
fsubs
cs
mov
and
leave
data16
and
mov
jg
add
sti
pop
xor
add
and
decl
mov
cld
mov
stos
popa
mov
push
push
ljmp
mov
jmp
pop
ljmp
pop
jnp
lods
in
jmp
cmp
popa
xor
pop
rep
call
aaa
xchg
loope
add
hlt
call
test
push
rcrb
fsubr
lods
out
mov
xchg
dec
sub
mov
enter
adc
roll
xchg
sbb
idivb
repnz
inc
sub
mov
clc
or
in
cld
xchg
in
insb
push
dec
mov
push
adc
jmp
in
test
mov
sbb
mov
fnstsw
cmp
push
std
pop
fldt
lahf
mov
enter
fdivl
arpl
repnz
inc
sub
mov
inc
je
or
adc
mov
pop
outsb
scas
shlb
aas
test
adc
vmovhps
shlb
and
and
adc
sub
xchg
push
xor
test
call
shr
ret
lock
inc
add
mov
mov
sti
push
nop
call
repnz
inc
repz
je
cmc
aas
test
xchg
jns
mov
addr16
and
fwait
aad
inc
decl
push
mov
jg
stc
ud0
shll
insb
add
jg
inc
incb
imul
call
repnz
adc
shlb
sub
jmp
xchg
mov
xor
ljmp
aas
inc
xlat
mov
ja
mov
or
stc
mov
push
aad
fsin
inc
enter
xor
push
sbbl
pop
inc
call
push
mov
xchg
add
push
cmpsl
cwtl
mov
pop
in
mov
test
sub
pop
mov
mov
or
loopne
loop
add
test
inc
nop
inc
enter
stos
inc
add
push
mov
mov
pop
inc
jne
sub
mov
push
lea
in
decl
adc
dec
and
imull
hlt
dec
jle
or
fsts
adc
adc
cmc
inc
sub
orb
jno
dec
jne
sbb
incl
cld
out
jnp
xor
pop
bound
mov
push
cmp
jmp
add
fsubs
ja
cmp
cwtl
hlt
into
insl
outsl
jmp
lods
mov
insb
inc
icebp
mov
das
int
incl
lods
xchg
jl
sbb
outsl
xlat
loope
adc
jle
lcall
jne
int
repz
xchg
pushf
mov
jl
les
filds
outsl
sbb
jle
mov
pop
dec
sti
fst
cltd
pop
mov
or
mov
jns
out
add
cmpl
mov
or
stos
out
pop
rep
cmpb
ljmp
jo
outsl
rorl
fdivs
sbb
push
mov
fwait
pop
xlat
in
push
adc
in
fwait
jmp
jne
ret
nop
data16
xchg
jl
ds
mov
out
cltd
cld
bnd
and
and
ljmp
xchg
repz
test
jnp
mov
pop
out
or
jmp
cli
scas
xchg
mov
call
push
mov
xchg
pop
pop
divb
push
jo
mov
test
outsl
outsb
out
push
inc
cltd
lcall
or
xor
xchg
stc
dec
hlt
imul
insl
mov
push
clc
inc
sti
cmp
inc
or
shll
mov
cld
call
inc
pop
pop
sti
adc
mov
ljmp
mov
xchg
ja
mull
xor
cmp
fisttps
loope
lods
cmpsb
jmp
and
and
jecxz
hlt
push
into
scas
mov
lcall
mov
les
pop
xor
inc
test
cmp
jmp
add
jmp
fbstp
mov
lcall
inc
pop
lods
push
dec
les
add
and
add
cmpps
insb
sbb
js
cltd
jne
push
push
jmp
in
mov
pusha
es
fs
icebp
cs
mov
add
cmp
call
nop
sub
push
xchg
add
aas
jno
outsb
mov
lcall
jae
adc
sarb
test
push
addr16
or
mov
outsb
xchg
xchg
call
sub
or
lret
mov
and
jbe
pop
sbb
outsl
jno
adc
inc
xchg
das
xchg
popa
movl
push
loope
cmp
pop
xor
mov
ljmp
push
push
cmp
sbb
push
stos
jl
add
decl
mov
xchg
lcall
push
imul
bswap
lcall
stos
ja
cmp
mov
adc
mov
fwait
mov
lea
mov
sti
mov
rcl
fs
lahf
fwait
stos
cmpl
adc
fidivl
jg
call
cmpsb
mov
insl
insb
push
fdivrl
push
repz
scas
push
outsl
xchg
xor
pop
add
mov
aas
mov
add
jno
popa
push
inc
lret
dec
fcmovne
jmp
mov
jmp
dec
out
xchg
push
push
bound
adc
arpl
push
decl
hlt
push
pop
shrl
pusha
orl
jb
or
mov
pop
ret
xchg
aad
lcall
imul
adc
jmp
adc
cmp
pop
sub
jae
cmpb
pop
lock
lcall
es
xchg
iret
ljmp
mov
cmpb
mov
mov
fcomip
xchg
mov
add
out
pop
shrb
dec
popf
dec
add
or
aad
ljmp
loopne
push
mov
push
arpl
imul
nop
push
jl
aam
decl
pop
xchg
int3
push
pushf
loope
or
cmovae
mov
or
aas
push
mov
add
ljmp
jns
pop
inc
or
out
mov
hlt
push
adc
out
and
lock
xor
inc
or
int3
aad
test
jg
mov
andb
mov
cmp
aas
mov
push
aam
inc
xchg
sarl
rorb
in
mov
mov
incl
xlat
ret
cmp
mov
and
fistpll
call
add
sti
out
push
scas
mov
ficomps
into
jp
mov
in
aas
enter
xlat
inc
push
div
mov
subl
pop
insb
cmp
es
jp
decl
mov
loope
sti
pop
stc
pslld
add
lods
inc
adc
and
and
adc
dec
jge
sbb
mov
iret
ud0
jg
sub
mov
ror
rolb
mov
cmp
fcomip
fsubr
inc
fstps
cs
mov
loope
icebp
add
jge
pop
jnp
clc
pushl
mov
insl
ror
insl
popf
mov
icebp
mov
jmp
cmc
hlt
loop
ret
test
and
popf
fld
mov
int
rcrb
call
sub
cmp
xor
scas
notb
pusha
mov
dec
loop
pushf
fwait
ljmp
in
mov
lods
mov
jae
into
dec
inc
rol
adc
push
shrl
fistpll
cltd
xchg
ljmp
add
jg
fldenv
push
sub
fldenv
xor
dec
cmp
cld
mov
lret
dec
jno
jge
inc
xorl
call
mov
cli
imul
dec
mov
mov
sbb
add
jp
jns
incl
scas
mov
scas
cmpsl
xor
add
pop
cmp
adc
or
in
out
jg
call
inc
andl
vxorps
push
or
jl
sub
pop
cmp
xor
pushl
das
cmpsb
xchg
testl
dec
sti
push
xchg
or
test
xchg
pop
leave
lock
adc
lea
dec
enter
xchg
sbb
sub
mov
mov
aas
mov
add
jmp
ss
outsb
out
mov
push
xchg
dec
add
push
fbstp
xor
cmp
or
mov
lret
cmp
cli
push
dec
push
ds
fwait
ljmp
fwait
xchg
popa
mov
add
push
push
pop
cli
js
jg
out
pop
push
adc
ss
or
call
inc
scas
cmp
sbbb
jg
aaa
repnz
and
dec
in
daa
adc
jmp
jle
and
mov
xor
add
ret
sbb
xor
xchg
stc
jo
lods
cmpsl
idiv
push
push
jg
xlat
jne
mov
inc
and
adc
xor
mov
sahf
xor
in
ljmp
sbb
lret
jle
into
or
es
cli
adc
incl
movsl
testb
pushf
ss
cltd
adc
movsl
mov
fwait
xchg
inc
xchg
jg
sbb
add
pop
pushl
sti
jg
adc
daa
rorl
mov
test
ja
lea
incl
js
scas
pop
or
roll
lret
mov
add
jns
or
movsb
mov
ljmp
cmp
sti
mov
icebp
xor
adc
repnz
fstpt
mov
adcb
call
repnz
jbe
test
mov
inc
jecxz
mov
sbb
add
mov
adc
xchg
std
add
jne
cmovl
cwtl
adc
mov
pop
cwtl
out
scas
xchg
xchg
outsl
cli
mov
pop
inc
test
cmp
and
sbb
cmp
aas
out
or
in
jbe
inc
shlb
cmpl
in
es
je
sub
adc
sub
mov
xor
mov
add
adc
cmc
call
insb
js
pop
in
je
xchg
ds
jne
movsb
aam
gs
mov
enter
incl
mov
testb
pop
jmp
dec
jnp
inc
lret
sub
sti
jl
rclb
pushl
cltd
jne
xchg
rcrl
dec
test
xor
xorl
pop
orl
cmpsb
decl
push
adc
std
and
cmp
add
fsubrp
cltd
xlat
add
cltd
lds
das
call
aaa
sbb
mov
sbb
out
clc
jg
inc
or
dec
sbb
and
mov
sub
loope
shll
xchg
push
xor
scas
stc
push
inc
push
dec
rcll
aas
jmp
lods
incb
pop
lea
incl
ss
push
mov
cmc
add
subb
loopne
aaa
jb
loope
pop
movsb
push
ljmp
popa
orl
xchg
push
aaa
and
pushf
test
dec
jge
ljmp
push
jnp
enter
or
jnp
out
ret
aad
scas
mov
inc
cmp
mov
inc
aas
xor
call
pushl
aad
js
mov
mov
mov
lcall
orb
jg
mov
jne
loopne
jecxz
in
repz
mov
fsincos
out
imul
sbb
mov
mov
ds
rorb
mov
sub
add
pop
cmovae
cmp
sub
fadds
jmp
ret
test
sub
gs
mov
jmp
scas
push
jbe
decl
gs
int
iret
or
mov
dec
mov
inc
jns
insb
sbb
leave
data16
push
ss
push
jle
sub
mov
in
push
in
ja
mov
mov
sub
inc
ja
pushl
push
sub
jno
fwait
mov
out
std
daa
cmc
cwtl
divb
adc
out
decb
add
push
incl
dec
adc
in
xor
inc
lcall
mov
sti
fs
pop
xor
ja
inc
popa
repnz
sub
cld
aad
or
cmp
insb
pushf
push
xor
jmp
mov
addr16
aas
inc
cmpsl
cli
movsb
push
pop
adc
add
out
push
into
movl
das
icebp
leave
mov
loopne
rclb
rcr
add
enter
shr
icebp
pop
cmp
jg
data16
fcmovnb
daa
push
inc
loop
xor
out
or
sbb
in
incl
stos
cmpsb
jno
sub
lahf
xor
mov
scas
je
pop
insb
jno
add
push
pushf
clc
daa
mov
fildl
in
or
jge
cltd
test
dec
les
cli
inc
push
out
inc
nop
shrb
jmp
jne
mull
and
pop
out
lahf
mov
jg
xchg
jo
in
shrl
adc
cmpsl
lods
cmc
jmp
imul
sbb
aam
out
lock
fs
sahf
push
mov
push
popl
adc
sub
xchg
cmp
and
cs
lock
insb
mov
cmc
dec
idiv
push
cld
call
ret
dec
pop
push
cmpsb
repnz
sahf
cs
push
enter
jecxz
ljmp
cmp
sbb
mov
in
jmp
in
dec
into
cmpsl
xorb
divl
aaa
mov
mov
sub
jmp
lcall
xchg
hlt
movsb
inc
mov
ds
mov
cltd
jo
push
pushf
add
andb
adc
out
pop
adc
adc
js
adc
jl
pop
aaa
std
aas
and
popf
jg
push
into
jo
aam
push
dec
add
lock
fldenv
ficoms
pop
ret
adcb
icebp
ret
dec
dec
and
decl
repnz
nop
cs
popf
adc
repz
shll
cmpb
imul
mov
push
sub
movsb
xchg
mov
xor
mov
sbb
ljmp
adc
out
xor
pushl
and
les
or
lcall
adc
daa
dec
fcompl
in
and
dec
sbb
push
sbb
push
in
and
jne
jmp
int3
cld
mov
ljmp
cmp
inc
lock
cmpsb
rorl
testl
fcomip
push
push
inc
bound
cmp
sub
xor
mov
rclb
sahf
call
insl
adc
lcall
mov
push
out
in
add
aad
aas
call
adc
cmpsb
push
cmp
into
leave
add
bound
xchg
jecxz
pop
push
testb
mov
leave
test
cmp
fcmovnu
in
icebp
mov
cmc
adc
aaa
mov
fsubrs
inc
dec
pop
ljmp
imul
fwait
and
divb
xor
push
popf
push
jmp
inc
cld
incl
les
push
insb
push
pop
fistps
push
sub
mov
ret
test
xchg
out
jb
dec
sub
jg
jp
mov
push
pop
pusha
adc
xchg
mov
push
jg
jg
push
dec
fmuls
notb
or
jo
mov
mov
pop
pop
rclb
enter
arpl
movsl
mov
lahf
pop
pop
shll
stos
add
aam
incl
cmp
call
in
pushl
inc
mov
hlt
loopne
ret
andb
enter
inc
jg
stc
call
mov
fdivl
dec
je
or
jbe
inc
enter
lret
xor
nopl
pop
int3
mov
decb
mov
adc
lds
mov
les
testl
repnz
std
sub
andl
and
rorl
xorb
lcall
xchg
pusha
adc
mov
sbb
inc
lea
lret
daa
sbb
decl
cld
mov
pop
shl
push
int3
jae
sub
pop
icebp
xchg
and
mov
and
pushf
push
decl
adc
std
adc
sbb
xchg
mov
stc
decl
dec
inc
pop
add
std
jg
lds
fdivr
jg
aad
jmp
gs
cld
int
jae
loop
dec
test
incl
into
mov
cmp
sahf
mov
mov
in
aas
clc
enter
sahf
xor
imulb
jg
cld
pushl
imul
ljmp
mov
int
jns
notl
fildl
xor
push
mov
in
lcall
inc
dec
dec
sbb
adc
test
and
mov
add
repz
decl
repnz
cmc
daa
scas
je
push
shrl
dec
push
cwtl
cmpsl
xchg
data16
push
mov
jns
test
xchg
xor
popf
rorb
test
and
mov
out
dec
dec
xchg
movsl
into
aas
cltd
jno
in
andl
pusha
ja
fsubl
lret
incl
movsl
arpl
push
sbb
lds
ret
push
mov
dec
rorb
mov
push
mov
pop
pop
adc
mov
fst
pop
shll
inc
add
lret
inc
inc
dec
shlb
in
dec
xchg
out
and
test
mov
int
es
push
push
out
or
je
push
fbld
outsl
or
decl
movsb
sti
fadd
popw
mov
inc
and
mov
les
inc
shl
fbld
pop
sub
insl
cmc
xchg
lds
mov
inc
aas
mov
mov
mov
adc
jbe
dec
out
scas
pushf
and
imul
push
decl
adc
fldz
fs
dec
mov
out
lret
mov
xchg
sub
fldt
dec
jmp
das
inc
and
lods
jmp
lcall
jbe
xchg
adc
xor
pushl
mov
sbb
cli
popa
xchg
push
mov
stc
push
stos
fisttpl
int3
int3
andnps
incl
xor
inc
lods
pushf
cld
xchg
pushf
cmp
mov
pop
sub
aad
xchg
cmp
shlb
adc
pushl
outsb
add
xchg
mov
bound
repz
pop
or
repnz
pop
outsb
int3
imulb
pop
mov
ficompl
dec
hlt
pop
adc
jo
outsb
filds
add
ret
ret
xchg
sysexit
decl
sub
lock
mov
push
jno
mov
pop
sub
ljmp
leave
shrb
stos
or
stc
shlb
sub
push
pop
aaa
pop
sbb
pop
xlat
mov
in
aad
mov
add
jmp
push
setp
pop
adc
mov
adc
push
daa
loopne
inc
out
fcomps
orb
add
in
je
inc
pushf
push
jecxz
in
inc
jecxz
loop
test
mov
pop
pop
loope
cmpb
dec
sub
jp
ja
sahf
xchg
mov
outsl
pop
and
dec
or
push
push
incl
xor
mov
icebp
pop
xor
out
pusha
xchg
cld
ljmp
jmp
cmp
add
push
push
push
inc
jbe
je
shll
mov
pushl
lcall
mov
sub
aas
cmpsl
inc
mov
rolb
and
and
sbb
ljmp
lahf
jp
popf
adc
xchg
mov
jae
xchg
ficoml
popa
mov
jmp
in
lea
mov
mov
leave
pavgw
sahf
rorb
add
ljmp
mov
sbb
add
xchg
mov
jbe
ljmp
xchg
vprotd
add
aam
sarl
loopne
lcall
pop
inc
or
add
xor
xchg
frstor
ljmp
sbb
mov
pop
out
xchg
pop
insl
sbb
fsubs
es
movsb
or
and
push
sbbl
aaa
cld
mov
cmp
movsl
and
js
and
jecxz
mov
inc
add
decl
bound
add
sbb
popa
loope
inc
shlb
lcall
cltd
test
push
mov
decb
xor
sub
pop
shl
push
dec
jle
jecxz
int3
ret
mov
int3
mov
cmp
pop
pop
mov
dec
call
lret
dec
int
fldenv
push
lcall
cmp
add
std
add
push
out
inc
out
cmc
scas
icebp
test
mov
jmp
lock
subl
aam
mov
inc
and
xchg
jg
call
xchg
aas
movsl
xchg
les
sub
mov
pusha
push
idiv
call
pop
sbb
lcall
cmp
mov
sahf
sar
incl
out
lods
push
sbb
lock
in
faddl
and
icebp
outsl
add
out
inc
test
stos
andb
push
or
lcall
jmp
mov
and
mul
adc
in
pop
cli
je
and
sbb
mov
subl
pop
xor
jmp
out
lcall
push
out
or
in
dec
pop
xchg
sbb
mov
jo
or
or
inc
call
fistpll
fidivrs
jg
xchg
xor
xchg
testl
out
lret
aaa
inc
roll
call
mov
js,pt
dec
adc
imull
xchg
ljmp
pop
popa
ds
xor
xor
popfw
add
cmp
jp
xchg
stc
xchg
push
and
shll
loop
sub
xor
cmp
loopne
dec
daa
cwtl
add
push
aaa
and
cs
call
adc
movsl
dec
push
sbbl
lods
mov
aas
jno
sbb
pop
ror
jecxz
ret
ficoml
mov
rcll
dec
int3
adc
fimull
addl
mov
push
mov
cmc
js
or
inc
sbb
lock
pop
shll
insb
jo
aam
xchg
xorb
repnz
push
scas
test
testl
inc
pop
gs
cmp
ss
icebp
xor
inc
test
ja
test
pushl
sub
lods
jle
sub
inc
stc
jb
cli
pop
mov
dec
mov
cmp
xor
data16
dec
dec
add
sqrtps
cltd
adc
out
movsl
scas
dec
jmp
scas
pop
test
int
shll
and
xor
testl
jb
adc
mov
enter
sbb
sbb
flds
xchg
sub
jmp
xorb
sub
xchg
pop
stc
ror
test
pushf
xchg
inc
xchg
push
sub
lret
stc
lcall
out
mov
int
mov
or
addr16
xchg
in
dec
mov
push
dec
push
cld
xchg
sbb
or
inc
lods
adcb
jmp
inc
pop
dec
gs
fdivs
push
jne
jb
loopne
sbb
arpl
lret
insb
in
add
loope
cli
sub
pop
das
addr16
jbe
or
decl
in
or
push
pop
sti
cli
repz
xor
call
cmp
bound
sahf
jb
jnp
ret
repz
lret
or
xchg
or
sbb
xchg
das
mov
cmpsb
mov
aam
scas
in
inc
inc
pop
idivl
xor
int3
std
jmp
je
js
les
and
inc
jbe
pop
mov
decl
subb
out
rorl
sti
sbb
adc
clc
cmp
sbb
sub
ret
jp
mov
push
test
jmp
subl
inc
addr16
call
xchg
int
or
xchg
ja
aam
fstl
mov
aas
xor
dec
std
hlt
ja
mov
push
mov
xchg
push
and
mov
push
jmp
sbb
sbb
loope
xor
add
loope,pt
daa
fidivl
jp
int
lods
jnp
jmp
dec
rcrb
test
add
pop
mov
cltd
les
mov
cmp
ljmp
adc
insb
mov
frstor
adc
pop
inc
adc
dec
cmpl
gs
jl
cmp
lods
in
iret
pushf
or
fsubrp
or
cmp
push
lcall
ljmp
jl
fadd
punpcklbw
fildll
add
aaa
int3
push
in
xlat
out
jg
or
imul
push
xchg
insl
sub
mov
pushf
and
push
scas
js
xchg
lods
push
leave
push
sar
lcall
lcall
loopne
mov
dec
sub
stos
add
inc
or
jo
insl
mov
mov
stos
sti
sbb
psubusb
cld
lock
iret
inc
lahf
push
fdivr
push
lahf
imul
shlb
xor
insl
into
xchg
push
xor
repnz
pmullw
movsl
mov
lods
pop
xchg
fidivl
fisubs
insl
aam
ret
scas
dec
or
stc
rclb
xor
fcomp
imul
pop
dec
les
xchg
jmp
push
jns
jp
sarl
mov
xor
ljmp
decl
shl
insl
jg
popf
insb
inc
or
push
pop
sahf
pushf
mov
outsl
and
cli
jle
fnstcw
ret
daa
lret
clc
sbb
test
jae
aad
xor
jns
add
jmp
das
scas
adc
mov
mov
mov
mov
lods
imul
push
jne
pop
popf
pop
mov
incl
mov
fildl
test
enter
jge
arpl
aaa
xchg
decb
adc
cs
rolb
ljmp
pop
aas
jl
mov
lret
out
or
clc
push
adc
and
nop
dec
incl
sub
and
cmp
ja
jge
lock
movsb
xlat
mov
mov
dec
push
call
pop
in
out
push
dec
in
ds
enter
fs
pop
icebp
pushl
jb
jg
pushf
push
mov
je
ret
pop
mov
sti
ds
jmp
clc
sarb
iret
popf
inc
lods
sahf
daa
jle
cmpsl
dec
clc
sub
fldcw
mov
add
sahf
adc
xchg
mov
push
jne
jmp
inc
push
jle
fisubl
clc
push
std
lcall
ja
xor
movsb
popf
mov
jl
ret
js
adc
and
pop
and
and
shlb
incl
pop
jge
jg
into
clc
and
xchg
jmp
sub
inc
stc
jne
jl
scas
cmpb
jmp
decl
ljmp
sbb
ljmp
pop
mov
ror
imul
stos
inc
xor
mov
rclb
and
adc
push
loop
mov
das
stos
pop
fisttpl
pushl
enter
insl
fldl
fwait
push
and
cmp
and
ljmp
stc
jae
clc
shll
pop
ss
jecxz
out
outsb
int3
ret
cmc
push
push
inc
rcrl
adc
decl
pop
xchg
subl
dec
pushf
mov
dec
popf
in
xacquire
les
jg
inc
negb
cli
inc
cltd
xchg
jae
push
aam
nop
or
mov
fcos
pushl
andl
push
stos
dec
add
jo
xor
daa
jmp
sub
aas
sub
push
pushl
or
sub
in
insl
adc
dec
ja
sub
repz
sub
jle
xchg
fsub
xchg
incl
test
pop
movsb
imulb
sub
add
adc
sti
dec
jmp
leave
lock
std
sub
fildll
add
negl
add
scas
push
add
pop
sbb
jns
or
jg
and
scas
mov
add
push
sub
arpl
ret
rclb
sbb
mov
pop
dec
dec
lea
jmp
shlb
repz
mov
sub
ljmp
jb
outsb
movsl
jae
dec
jo
add
addb
add
jbe
out
add
push
aad
imul
call
pop
xchg
xchg
stos
push
cmpsb
xor
push
pop
mov
sbb
rcrb
jmp
mov
add
adc
push
loope
jmp
nop
filds
inc
jge
xor
sbb
xchg
lahf
lcall
or
daa
daa
inc
ret
inc
outsl
dec
push
subl
in
jmp
arpl
mov
cmp
test
sub
je
js
mov
lds
add
mov
enter
xchg
bswap
cmc
mov
push
pusha
xchg
cmp
ficompl
or
decl
bnd
notrack
and
mov
es
add
stc
pushl
xor
insb
ljmp
pop
mov
or
cmp
dec
call
inc
pop
out
mov
and
jmp
lds
jns
je
sub
pop
push
sarl
sahf
push
jmp
ss
push
popf
int3
in
lods
mov
mov
js
js
push
lds
out
sahf
push
sbb
lods
add
push
pusha
sub
or
pop
movsl
fiadds
pop
in
call
fwait
jp
pop
pop
mov
in
mov
ja
cmp
push
addr16
push
pop
cmp
pushf
ret
leave
pop
stos
jo
shr
cmp
ljmp
call
insb
and
lahf
xchg
loop
pushl
and
inc
aad
xor
lods
ret
js
stos
fildll
inc
loope
pushw
pop
sbb
fldenv
mov
lcall
add
aad
add
jle
imul
push
stos
ds
mov
jl
lods
decl
xchg
mov
mov
sub
into
enter
add
cs
incl
roll
call
push
push
fisubrs
xor
out
mov
adc
ffree
jbe
ljmp
push
jae
dec
push
inc
outsb
sahf
iret
mov
imul
dec
fbstp
int
jl
dec
push
or
cld
add
adc
aas
add
cld
dec
cmp
pop
stc
cmp
dec
or
push
fbld
jl
fisttpll
fcoml
xchg
jno
push
add
cmp
add
notb
pop
repnz
xorb
pop
out
add
mov
inc
incb
push
filds
aas
xchg
xlat
int
xor
mov
mov
insl
xor
nop
inc
push
inc
mov
lcall
mov
mov
and
rolb
ficoms
loopne
fimull
add
mov
scas
loopne
std
incl
loop
dec
iret
js
jl
rclb
mov
cmpl
mov
cld
incl
mov
push
lea
adc
popf
pop
pusha
jg
push
addb
sub
pop
lahf
lcall
cmp
rolb
mov
cmp
outsl
mov
add
pop
mov
ljmp
mov
or
add
adc
mov
pop
test
add
push
mov
lcall
cld
adc
mov
pop
xchg
xchg
adc
fistps
nop
adc
lcall
inc
mov
and
sub
jae
jmp
lcall
xchg
jmp
jns
les
xchg
pop
pop
or
mov
jmp
jg
test
pop
cld
add
and
fiaddl
adc
cmp
fstpl
iret
movsb
dec
sbb
stos
and
jg
std
pop
lahf
fnsave
mov
inc
adc
and
aas
test
jno
lret
shrl
jne
jmp
sbb
outsb
jae
loop
rcrl
cmp
inc
mov
pop
mov
incl
pop
sti
sbb
call
insl
sub
xor
mov
mov
leave
pusha
pop
sbb
inc
loopne
test
sbb
mov
incl
xchg
test
shrb
inc
mov
add
lods
mov
inc
inc
ret
call
pop
loopne
call
push
popf
push
or
jp
adc
sarb
in
adc
std
call
or
imul
jnp
and
fistps
jmp
or
jnp
mov
xchg
stc
add
clc
int
rorl
mov
xchg
jge
push
cmp
adc
cld
cwtl
cmp
xor
push
add
mov
sbb
sti
daa
jne
lock
imul
call
sbb
cmp
mov
insb
cmp
and
sub
sbbb
aaa
lcall
mov
jbe
sub
insl
cmp
divl
fists
dec
mov
push
cmp
ljmp
fsubrs
imul
out
test
lea
lret
xchg
xchg
decl
clc
sub
cmpsb
or
adc
sbb
mul
aas
test
xchg
rcrl
stc
decl
push
jno
mov
and
add
add
dec
roll
jmp
stc
mov
jnp
add
das
call
repnz
movsb
and
xlat
mov
aam
jne
sub
jge
mov
push
movsb
fwait
stc
mov
roll
push
lahf
sub
andnps
ss
add
jg
inc
push
push
lcall
ja
sub
mov
dec
mov
fildll
push
stos
inc
and
lahf
jg
lcall
lods
adc
iret
add
xlat
in
ret
pusha
js
int
xchg
or
pushl
xchg
sub
ja
pop
pushf
aas
lea
daa
clc
and
decl
jns
adc
cltd
push
sub
jns
push
out
dec
gs
add
movsl
lret
lret
into
repnz
cmpsb
mov
aas
lahf
sub
push
pop
cmp
stc
jg
call
std
xor
stos
icebp
cmpsb
push
pop
xchg
cmp
leave
add
js
cs
jae
and
nop
and
cmp
repnz
mov
out
add
imull
lcall
or
jae
jg
xorl
inc
imul
mov
arpl
pop
mov
pushw
jg
push
xchg
sub
adc
sub
decl
pop
insl
decb
arpl
test
out
gs
and
cmp
call
shlb
inc
pusha
jecxz
out
scas
cmpsb
and
fwait
test
lret
lret
or
lods
shlb
jg
jmp
sub
adc
cwtl
xor
mov
inc
mov
pop
fldt
into
pop
incl
xchg
dec
into
inc
xor
movsl
fwait
dec
lret
mov
sahf
stos
pop
test
inc
mov
test
loopne
les
les
mov
dec
call
xor
sti
mov
gs
pop
negb
inc
test
pushf
andl
decl
dec
data16
pop
mov
and
xchg
push
cltd
int3
lret
xchg
mov
fs
test
andl
mov
mov
sbb
daa
decl
inc
lods
sub
int
jnp
jb
and
jno
add
dec
hlt
xor
cmp
mov
push
jl
jmp
xor
or
inc
mov
xchg
cmc
cmpb
dec
jmp
es
js
sbbb
push
ja
loope
mov
bound
out
sbb
decl
lods
bound
ret
add
fisubrs
call
aam
sub
push
add
call
pushf
or
out
sbb
das
inc
lock
rcrl
push
xor
push
push
dec
aas
push
fcmovu
ja
inc
mov
faddl
bound
jnp
orl
mov
jmp
insl
xchg
clc
pop
into
push
rorb
mov
inc
sub
and
jbe
dec
or
decl
inc
adc
xor
loope
or
adc
and
pop
sbb
pop
call
jl
jne
int
int
scas
dec
push
fcoms
pop
cmpsl
or
out
or
call
out
int3
aad
les
sub
pop
xor
cld
jbe
sbb
cmp
dec
incb
pop
inc
xchg
es
mov
cmovae
add
inc
in
xchg
pmuludq
jg
jae
call
jl
scas
fbld
lidtl
testb
jno
nop
stc
repz
incl
jg
lods
lods
adc
cmp
xchg
mov
mov
int3
jmp
insl
xor
inc
mov
push
sbb
inc
test
inc
add
loop
sub
shlb
mov
add
jnp
mov
cli
jp
incl
and
push
popf
ja
jbe
std
or
mov
xchg
pop
sarl
sub
sti
xchg
adc
addr16
fs
scas
lcall
sarl
hlt
lahf
int3
fcomps
dec
incl
fdivl
addl
xor
in
das
xchg
mov
xchg
movsb
xor
jecxz
lods
inc
lock
mov
ljmp
call
sti
clc
cmpb
cmpsb
ret
mov
lods
lds
push
dec
test
call
call
or
mov
popa
loop
lret
stos
ljmp
jg
and
inc
loope
inc
cld
in
fisttpll
mov
lea
out
fistl
jg
shll
and
adc
jmp
call
arpl
outsl
gs
or
and
mov
stos
and
jecxz
xchg
fisubrs
call
cld
scas
test
iret
xor
sbb
enter
in
cmc
cmp
imulb
clc
push
lods
insb
jae
incl
and
mov
adc
cmp
sub
jb
std
xchg
inc
imul
jnp
cmpsl
mov
insl
pop
inc
insl
out
repz
xchg
pop
scas
dec
cmp
cwtl
faddl
lahf
sub
shll
cli
push
xchg
es
cmp
ds
xchg
push
adc
pusha
adc
jmp
sub
repnz
rolb
mov
sahf
ret
sahf
popf
xchg
mov
jmp
call
divl
sub
inc
cli
cmpsb
cld
cmp
dec
in
ficomps
stc
xchg
das
jg
js
jae
imul
stos
add
inc
xchg
sub
hlt
jae
sub
cmp
mov
ljmp
jmp
dec
popf
add
jmp
bound
mov
in
cmp
pushl
mov
adc
add
inc
and
rcrl
jmp
lods
fwait
decl
add
rcpps
adc
xchg
decl
mov
cld
sbb
ret
les
fs
adc
cs
jmp
insl
jb
push
cs
adc
xchg
pop
call
pop
ljmp
jl
cmp
test
xchg
mov
repz
gs
sub
push
incl
dec
je
mov
pop
outsb
aam
and
mul
add
sti
mov
call
mov
cs
pop
fwait
dec
imul
xchg
xchg
mov
and
ljmp
push
push
xchg
push
adc
and
xor
sahf
fadds
xor
out
add
clc
addr16
lcall
int
lock
inc
jnp
mov
push
insb
add
repz
data16
call
shrb
or
dec
xchg
sub
leave
fildll
rcrb
lea
pop
sbb
mov
out
xor
lcall
sbb
sub
mul
xor
push
pop
or
icebp
jl
inc
ficoms
jle
ja
dec
pushl
lods
and
ljmp
mov
imul
add
icebp
push
jg
test
cmpb
aad
jp
sti
stos
pushl
pop
clc
cltd
mov
push
add
cmp
inc
cmpb
push
mov
cmp
dec
push
and
out
push
mov
pop
int
clc
call
mov
lahf
mov
jl
add
push
ljmp
das
sahf
mov
mov
scas
pop
daa
cmc
ja
inc
test
xor
add
lahf
jbe
adc
loopne
push
fsts
jbe
push
sti
les
popa
xchg
nop
idiv
fistps
xchg
repnz
mov
aaa
or
stos
iret
xchg
push
in
js
cld
jno
insb
sbb
mov
cltd
and
xchg
in
call
sbb
bound
jo
jo
and
pop
pop
cmp
push
icebp
sbb
mov
add
movsb
mov
out
inc
sub
pop
loop
mov
and
lds
sarb
mov
loop
incl
sub
mov
inc
push
iret
push
bound
lcall
iret
xchg
xor
das
jo
es
push
sub
or
fsubs
mov
call
cld
xor
push
int
mov
sbb
jp
sarb
mov
in
call
jnp
push
push
add
sub
fiaddl
pop
jo
sub
in
xor
pushl
movsl
sti
jnp
leave
push
imul
repz
mov
xchg
or
jp
into
xchg
dec
ljmp
push
pop
xlat
mov
dec
push
pop
adc
and
into
pop
xchg
or
push
sub
clc
inc
sbb
es
in
repnz
push
loopne
or
adc
pop
ljmp
aaa
loop
lock
sub
dec
stos
lods
mov
sbb
incl
lods
sbbb
inc
push
movsb
jnp
pshufw
test
lcall
and
neg
xor
pop
adc
jg
in
inc
lahf
test
mov
jmp
dec
jnp
mov
and
incl
das
fldl2e
int3
dec
pop
mov
xchg
inc
push
and
mov
std
push
lods
ljmp
or
jl
sbb
jno
loope
adc
sbb
sbb
shlb
leave
decl
cld
jo
push
jbe
jg
dec
push
xlat
cld
dec
popl
ficomps
jbe
repz
mov
pop
aas
mov
pop
pop
jle
pop
cmp
add
jg
xchg
lea
adc
js
jmp
lcall
lret
cld
ljmp
aad
or
pusha
inc
stos
sub
into
mov
repz
adc
mov
fisubl
ljmp
dec
dec
xor
call
jno
inc
and
jae
roll
cs
jmp
outsb
push
pop
xchg
pushf
jmp
xchg
xchg
rcll
sbb
inc
add
fs
ret
ljmp
push
out
add
lods
lcall
incb
pusha
fstpt
test
and
sbb
jmp
scas
cmpsb
out
xchg
into
sbb
dec
nop
cmpsb
xor
rorb
cmc
adcb
ljmp
xchg
pop
imul
xchg
lcall
lret
inc
mov
mov
mov
lcall
out
pop
in
mov
rcl
mov
mov
lock
test
add
inc
or
in
call
pop
repz
lret
fs
mov
xchg
nop
dec
or
cli
pop
and
aaa
test
aas
scas
mov
cmp
push
push
xor
pushf
sbb
inc
pop
out
inc
mov
movsl
fdivrl
pushl
test
push
into
movsb
jl
fisttps
mov
dec
std
add
mov
pop
leave
frstor
filds
ss
inc
jle
jmp
jg
lcall
clc
pop
call
and
dec
mov
les
fwait
adc
dec
or
repz
popf
pop
inc
lods
lea
incl
in
daa
cmp
movsb
js
add
add
sbb
ret
add
pop
or
mov
andl
das
data16
scas
mov
sbb
mov
incl
cld
xchg
jmp
call
dec
fdivrp
pop
test
lods
mov
fcomps
jmp
jecxz
in
pop
cmp
inc
sahf
mov
adc
call
inc
ret
or
clc
lcall
jg
bound
sbb
jle
sbb
cmc
das
je
cs
decl
movsl
loopne
sbb
out
mov
add
jmp
or
imul
inc
sti
fistps
lcall
fists
sub
cmp
fwait
cmpsl
lret
imul
shll
clc
mov
and
xchg
mov
cltd
dec
jnp
and
incb
movsl
loope
ja
fs
lcall
js
jbe
mov
sar
add
push
loopne
fcoml
clc
mov
lea
cmp
test
push
or
scas
outsl
adc
scas
or
inc
test
sti
test
lds
stc
xadd
aas
and
mov
jg
jg
jge
rolb
cwtl
cltd
inc
mov
les
jno
adc
incl
add
mov
jle
or
xchg
call
lods
mov
jae
jmp
bound
fidivl
lahf
jle
cs
inc
hlt
jmp
mov
sub
aas
inc
inc
inc
cmc
mov
mov
pop
pop
mov
aad
jl
mov
mov
sbbb
pushf
dec
pop
adc
sub
pushf
adc
adc
clc
mov
jmp
xchg
adc
sbb
std
cld
jae
sbb
aad
pop
sbb
cmp
outsl
fisubl
cmp
ficompl
inc
call
jmp
push
aas
cmp
das
hlt
xchg
shll
cli
std
inc
ljmp
out
fsubrp
enter
xorl
mov
pop
stos
hlt
test
call
movsb
pushf
mov
aad
scas
sarb
dec
mov
adc
push
adc
push
lcall
int
cmp
ss
cmpl
ljmp
arpl
in
add
out
ds
call
fidivs
jmp
fst
icebp
sbb
add
adc
je
rorb
incl
jb
sub
or
and
fmul
test
mov
ljmp
shlb
clc
mov
std
adc
adc
sbb
inc
aas
pusha
push
call
add
ljmp
enter
ljmp
dec
call
cmpsb
adc
or
fsubrl
test
jg
push
ret
and
pop
sbb
jg
icebp
dec
and
daa
inc
jbe
decl
mov
imul
test
decl
leave
sahf
fistpll
push
lret
decl
pop
xchg
cmp
mov
sub
jmp
or
or
mov
sbb
push
jle
dec
int3
sbb
xchg
ds
popf
ja
and
incb
pushf
mov
jno
aas
jg
unpckhps
xchg
sti
cmp
xor
pop
xchg
int3
pslld
mov
jmp
mov
fldcw
push
enter
jnp
je
mov
jae
push
imul
int3
mov
pushl
jmp
adc
sub
gs
in
mov
incl
xchg
imul
clc
in
cmp
cmp
or
test
test
sar
decl
xchg
mov
loopne
or
sbb
add
fstpl
in
jmp
push
lds
test
xchg
push
mov
cltd
mov
aas
add
outsb
mov
jg
or
sub
pop
scas
dec
add
fcos
mov
push
daa
mov
loopne
decl
xlat
ljmp
popf
adc
js
aas
incl
lds
mov
cmc
testl
shl
out
fisttps
inc
jmp
fldcw
mov
jecxz
stos
mov
stos
xor
idivl
cld
cmp
movsb
cmpsb
and
imul
decl
jle
icebp
pop
shrl
jl
sbb
cmpsl
cmp
ss
push
lcall
lcall
in
nop
adc
sbb
add
lret
popf
out
mov
jno
jmp
stc
mov
clc
jg
test
je
jns
aad
pop
loope
mov
in
jg
lcall
xchg
push
dec
imul
into
xchg
cmp
int3
out
dec
stc
pslld
cmpsl
pushl
dec
xchg
test
imul
nop
cld
pop
ret
loope
in
daa
push
loopne
pop
inc
lahf
fldt
nop
in
and
pop
leave
mov
xorl
cld
imul
pop
scas
pop
cwtl
insl
dec
mov
addr16
pusha
nop
mov
adc
pop
daa
js
cmpsb
ret
jmp
mov
jmp
decl
push
push
sbb
adc
outsl
fstps
addl
ret
test
dec
mov
cmp
or
push
scas
xchg
stos
push
cmpb
ja
pop
mov
dec
mov
jmp
in
cld
stc
xchg
jns
ja
jmp
adc
loopne
pusha
sbb
add
adc
mov
or
ds
leave
or
insl
mov
fnstenv
loopne
mov
sub
pop
push
xor
jmp
insl
xchg
push
xor
dec
incl
pop
xor
xor
divb
and
mov
ljmp
jmp
sub
xor
out
add
xor
cli
in
add
cmp
adc
popf
fisttps
ret
and
dec
push
or
push
inc
mulb
mov
jmp
push
lret
aad
jp
mov
adc
lods
lcall
push
add
mov
lds
movsl
stc
mov
pushl
mov
pop
dec
cmp
mov
xor
and
and
mov
jne
pushf
mov
sbb
push
xchg
push
int3
std
adc
dec
pop
pop
cmpsb
stos
lcall
mov
loope
inc
mov
or
pop
mov
pop
cli
cld
call
imul
xchg
enter
ss
jecxz
mov
jnp
hlt
or
loope
incl
fdivrl
in
xchg
cmp
dec
fiadds
popa
sub
mov
out
js
push
rcrl
jmp
fs
mov
sarb
mov
jnp
lock
mov
xchg
int
icebp
mov
inc
adc
adc
je
bnd
push
aas
cmp
adc
pop
jmp
or
jne
dec
cld
ljmp
aam
lods
test
cmpsb
sbb
imul
xchg
pusha
xchg
xor
mov
pop
or
popf
ret
push
test
outsb
outsl
mov
or
pop
xchg
fwait
lret
mov
sbb
inc
dec
out
or
push
cli
and
mov
adc
jmp
dec
call
sub
cltd
push
into
nop
pop
mov
mov
pop
mov
lcall
adc
popf
icebp
or
fisubrs
mov
jle
or
xlat
test
stc
xchg
jne
push
jbe
test
adc
decl
mov
adc
nop
shlb
roll
and
mov
fistpll
sbb
insb
jg
inc
fildll
xor
pop
test
pop
and
lcall
fmuls
mov
ljmp
pop
inc
sub
test
call
or
inc
push
jg
push
arpl
push
add
pushf
popa
adc
out
cmp
jmp
push
cli
insb
jge
sub
dec
mov
test
push
mov
movsb
add
xlat
repnz
mov
pop
mov
pop
push
pop
loope
cmpsb
mov
ljmp
lcall
jbe
jl
xchg
je
sbb
test
test
decl
les
xorb
jg
xor
call
loopne
std
mov
loop
xchg
stos
rclb
adc
sub
mov
loope
dec
jo
into
adcl
pop
int
and
jbe
add
cltd
or
jg
loope
xor
bound
pop
cmpsb
jg
jg
aas
xor
loopne
xor
and
jle
mov
incl
add
test
lcall
fidivl
cltd
scas
xchg
mov
cwtl
adc
jge
fisubrs
and
lcall
sti
pushaw
sbb
or
pop
ret
out
cmp
bound
int3
jmp
mov
sub
lods
icebp
enter
repz
or
cld
or
loopne
mov
jg
add
lcall
push
cmp
sti
xor
xchg
enter
leave
fildl
add
imul
pop
insb
ret
mov
mov
test
dec
gs
cs
insl
push
out
cli
jge
das
lahf
mov
aas
jge
cmpsb
push
jecxz
dec
xchg
cmp
dec
cld
mov
decl
add
enter
ss
xchg
leave
pushl
fsubr
pop
test
sahf
ds
pushl
shll
gs
fldt
hlt
adc
push
call
loopne
popf
mov
pop
jg
bound
adc
sub
push
jbe
test
fcoms
mov
cmp
in
sar
movsb
js
repz
das
dec
mov
and
push
and
push
lds
mov
jg
fs
into
cmp
xor
lods
cmpsl
clc
test
push
fistpll
jg
pop
pop
fs
dec
xchg
jle
iret
mov
mov
mov
ds
adc
sub
jg
and
inc
pop
incl
dec
mov
cmp
sub
jg
mov
push
sbb
roll
xlat
xchg
iret
cmpsb
in
push
loop
mov
dec
popa
mov
int3
decl
jo
sbb
es
pop
mov
xor
push
fistps
add
or
mov
in
clc
dec
test
ds
cltd
stos
push
push
push
incl
ret
sub
stos
sbb
pop
ret
bound
push
mov
inc
sub
lahf
jg
add
mov
jg
sbb
outsl
test
pop
pop
dec
dec
add
lcall
and
ja
mov
push
xchg
mov
loop
mov
cld
dec
sbb
mov
test
add
push
mov
ds
jno
int3
ja
xor
rdmsr
mov
cwtl
lock
adc
cltd
jne
mov
das
daa
mov
lea
mov
mov
aam
loopne
dec
jns
popa
cmp
jnp
mov
mov
pop
call
fdivr
mov
push
mov
jbe
idivb
mov
hlt
out
ficoml
test
roll
push
jmp
incl
xor
les
mov
jp
xor
stc
jne
decb
or
push
aas
add
cmp
jmp
dec
ja
iret
pushw
fwait
sbb
adc
in
lds
sub
lret
outsl
dec
adc
mov
les
call
lock
jecxz
fmull
sub
popf
scas
mov
sbb
sub
fwait
xchg
cwtl
jg
mov
mov
mov
adc
jmp
dec
or
mov
mov
mov
lret
pop
cli
cmp
pop
mov
outsb
jmp
mov
push
popa
int
push
pop
movsb
pusha
pop
out
push
mov
fwait
repnz
jns
bound
scas
pop
pop
scas
out
data16
jmp
jg
bound
sub
test
jne
mov
mov
or
mov
xlat
jno
mov
sbb
test
jg
incl
sbb
mov
mov
popf
add
mov
decb
rcll
jp
xchg
push
fwait
xchg
test
decl
dec
xchg
xor
push
mov
repnz
jg
das
sub
pop
lds
daa
jle
mov
jg
mov
jl
mov
icebp
sysret
mov
fstps
test
data16
inc
loopne
fists
jnp
mov
adc
sub
and
inc
push
lahf
pop
clc
mov
cltd
cmp
pop
add
dec
push
aad
in
push
decl
jmp
imul
mov
mov
test
adc
je
rcrl
lcall
mov
push
inc
mov
imul
or
mov
loopne
jmp
mov
pop
jp
leave
mov
test
inc
fidivrl
add
pushl
insb
jmp
das
leave
stc
andb
or
sahf
out
jmp
or
xchg
mov
fs
pusha
cmp
push
fwait
mov
enter
jmp
stc
push
xor
lea
or
repz
push
fucomip
xchg
mov
call
call
arpl
adc
lcall
nopl
sbb
add
dec
dec
leave
enter
das
decb
repnz
sbbb
cmpsb
fildl
fists
xchg
scas
mov
pushl
xchg
sarl
pop
jle
lcall
xchg
lds
xchg
repnz
push
xor
scas
sbb
sbb
cmp
xchg
xchg
popa
imul
std
xchg
imul
adc
jns
incl
fwait
push
mov
xchg
nop
arpl
shlb
sub
aaa
and
pop
mov
or
call
mov
or
inc
and
dec
mov
out
sub
push
andl
repz
int3
cmp
popf
test
insl
inc
lea
loope
cmp
mov
mov
mov
mov
sbb
aad
mov
mov
push
xchg
adc
mov
fidivs
add
jmp
ja
popa
xchg
and
sbb
jecxz
jg
test
add
fwait
jp
movsb
pop
cmp
call
push
inc
loop
push
das
shlb
sbb
xchg
jl
lcall
std
and
aad
pushl
pop
fs
fucomp
mov
callw
gs
sbb
mov
jge
leave
ret
out
loopne
pop
call
jecxz
push
cmpsb
jmp
inc
push
out
arpl
jns
aas
or
pusha
lcall
mov
lods
push
sbb
sahf
movsl
push
adc
mov
hlt
test
jp
jo
popa
jbe
int3
mov
sahf
mov
addr16
repz
in
ret
popa
sbb
pushl
ja
xor
ja
incl
and
xor
dec
in
repz
mov
or
ljmp
psubb
xchg
xor
jmp
jb
pop
inc
daa
decl
andl
sbb
sub
sbbb
cmp
and
inc
jne
ds
divb
ljmp
cld
scas
pop
stc
sar
aam
loopne
jg
lahf
adc
lcall
ret
xlat
cli
pop
fadd
int3
out
test
or
dec
pop
aaa
jecxz
arpl
aas
mov
cmp
pop
dec
sar
decl
jnp
sub
push
mov
aas
fsts
jge
data16
repnz
loope
mov
clc
in
add
push
jg
mov
aas
call
jg
xchg
sbb
into
adc
lods
mov
rcll
aas
dec
sar
sar
call
jb
sub
and
push
lock
ret
test
mov
aaa
call
xor
xchg
pushl
mov
test
jmp
add
push
push
orb
stos
lahf
outsl
mov
test
call
mov
jnp
pop
pop
sub
sbb
out
in
sub
xchg
xor
add
rcrb
test
filds
xor
xchg
out
xchg
movsb
repz
stos
xchg
clc
fistpll
ljmp
js
out
mov
inc
in
xor
jae
mov
mov
dec
mov
xchg
dec
and
movsb
int3
aas
nop
call
movsb
mov
mov
push
test
push
jle
rcll
jecxz
icebp
test
jns
imul
sbbb
hlt
xlat
fwait
adc
mov
lcall
cltd
pop
mov
data16
in
mov
push
jmp
sub
pop
mov
roll
jmp
jg
xorl
int3
mov
int3
adc
sub
mov
mov
in
jbe
pop
pop
fdivl
pop
gs
idivl
incl
cli
xor
add
stos
rcl
and
mov
dec
cmp
pushl
test
xor
jp
iret
lock
aam
enter
xor
jmp
test
ljmp
cmp
sub
sbb
aaa
lock
add
mov
std
mov
scas
movsb
sub
cltd
adc
stc
inc
mov
loope
pop
jle
add
mov
dec
test
sti
push
rcl
sarl
adc
sahf
lods
fdivl
and
ret
xchg
icebp
incl
ficomps
mov
daa
inc
popf
test
xor
jmp
bnd
hlt
movsl
aaa
inc
pop
pop
push
adc
dec
pop
xor
aas
enter
icebp
pop
das
testb
mov
mov
test
aas
pop
jmp
lcall
mov
mov
pop
fildll
cmp
sbbb
mov
lret
cmp
pop
rol
inc
jp
mov
mov
lock
mov
mov
push
sbb
pushl
sti
int3
divl
adc
int
jnp
add
pop
not
cmc
mov
push
and
mov
or
push
sub
scas
mov
pushf
push
inc
sub
jmp
cmp
jmp
adc
inc
pop
pop
dec
std
fmuls
add
jecxz
lock
dec
adc
xor
jmp
inc
adc
push
push
out
jg
mov
movl
mov
fmuls
or
xchg
jmp
cli
adc
repnz
js
push
in
std
pop
rorb
pop
fcmovb
sub
push
jae
push
xor
jbe
pop
rcrb
mov
mov
outsl
pop
pmulhw
in
push
arpl
sahf
jno
negb
orb
cwtl
out
push
fsubrp
pop
icebp
xorl
int3
sub
cmp
cmp
push
sub
mov
test
dec
mov
out
enter
pop
pop
out
cmc
lcall
mov
pop
cld
andl
lahf
xor
scas
aaa
sub
and
pop
outsl
cmpsb
lock
lds
cmp
mov
jg
repnz
xchg
mov
in
mov
aas
jo
in
inc
sub
push
stc
sbb
imul
jo
xor
push
pop
data16
int3
movswl
mov
das
popf
push
lret
aad
aaa
sbb
call
int3
notb
or
mov
test
orl
lahf
outsl
or
pop
and
mov
push
jg
aas
stc
call
lret
aaa
insb
test
jl
and
insl
ret
lods
ljmp
data16
aaa
test
sbb
dec
inc
cmc
cmp
cmpsb
sbb
inc
shrl
cld
mov
jo
test
jg
mov
in
sub
cli
fstpl
repz
sub
jae
xor
ja
jns
cmp
pop
cmc
cmp
cmp
xorb
stos
arpl
repnz
xor
lcall
push
addr16
xchg
xchg
out
jp
push
sub
fisubs
call
arpl
iret
call
cmp
lods
ja
push
dec
pop
imul
cmp
leave
jmp
xor
jne
sub
mov
xchg
mov
add
push
push
pop
ret
jg
clc
decl
push
inc
mov
sbb
mov
cltd
sbb
iret
or
clc
pop
dec
inc
aas
adc
int3
dec
push
pop
repnz
lock
jno
cld
dec
mov
pop
xchg
add
lret
andps
push
cltd
fs
jg
clc
int3
lret
test
test
mov
call
add
mov
or
shrb
fwait
pop
jg
test
hlt
cmp
xchg
and
adc
lock
enter
test
jg
aad
stos
mov
adc
sub
orl
push
inc
and
fdivs
test
push
sbbb
and
data16
inc
rcr
arpl
pop
in
mov
jae
jns
adc
test
jbe
pop
xchg
lret
outsb
dec
call
scas
jg
fisttps
in
push
cmp
and
test
decl
jle
stos
dec
jno
push
dec
jg
jg
sub
mov
sbb
in
les
ljmp
test
push
pop
cmp
dec
xlat
mov
pop
fnstenv
sti
jg
mov
add
imul
sbb
jg
icebp
andnps
int
jnp
rcr
sub
xchg
pop
scas
jno
cmpsl
mov
pop
das
orb
ret
out
add
das
cmp
outsl
push
or
xchg
cltd
loopne
xchg
push
js
add
mov
lcall
mov
stos
lcall
enter
decl
mov
lcall
inc
mov
sbb
mov
daa
aas
in
sar
decl
mov
cld
shl
in
sti
mov
or
and
stos
xchg
lcall
test
jne
mov
mov
pop
arpl
call
repnz
ret
mov
rorl
add
jmp
insl
pop
pop
test
mov
mov
sar
aas
and
dec
stos
pop
xchg
in
insl
leave
dec
out
cld
test
cmp
mov
push
call
call
test
and
jg
ret
ret
push
xor
incl
mov
xor
xchg
xor
mov
outsb
cmpsl
add
push
fadds
dec
mov
xchg
cmp
aas
enter
div
in
ret
lret
adc
ja
add
cmovle
cli
stc
and
faddl
or
dec
ss
jle
mov
pop
pop
addb
cmp
decl
repnz
fdiv
outsb
cmp
xor
into
nop
mov
mov
insb
dec
mov
pop
sub
adc
pusha
das
stos
mov
in
daa
xchg
mov
pop
aaa
outsb
xchg
out
pop
inc
call
pop
loopne
lahf
push
push
int3
pop
loope
jl
mov
hlt
pushl
jge
je
jmp
fwait
loop
shrl
mov
and
inc
push
loope
jle
jo
push
arpl
pop
rcrb
cmpsl
sub
dec
pop
jp
cli
cmpsb
dec
pop
mov
les
mov
mov
pop
mov
push
add
mov
cs
pop
mov
stos
inc
pop
cmpsl
pushl
stos
icebp
das
ljmp
cltd
dec
mov
or
sub
mov
stos
jle
scas
xor
pop
sbb
mov
push
loopne
and
mov
cmp
nop
xchg
aad
lods
push
fisubs
pop
dec
dec
push
sbb
xchg
ret
loopne
add
mov
or
or
fbstp
cmp
repnz
mov
flds
and
inc
sbb
aad
imul
jbe
xor
push
shll
sub
sbb
das
xor
and
out
jp
jge
and
mov
ffreep
inc
cmp
and
shlb
call
pop
push
push
sub
pusha
xchg
bound
mov
jmp
es
lahf
jnp
pop
in
dec
mov
mov
cmc
jnp
loopne
addb
arpl
jno
fs
fwait
adc
in
dec
mov
adc
addr16
lock
std
incl
nop
pop
sub
adc
sub
or
pop
adcb
pop
cmp
fistpll
sbb
lahf
cmc
divb
aas
arpl
or
pop
cmp
fists
loope
add
rcrl
inc
jne
das
sub
lods
inc
cmp
cld
pop
sti
ljmp
sub
incl
push
sbb
jmp
add
aas
outsb
pop
mov
pop
push
pop
jg
shr
andb
push
aad
movsl
cmp
lcall
repz
sbb
jg
stc
adcb
pop
ja
enter
ds
je
sti
or
fldl
cmp
nop
mov
push
mov
out
ljmp
imulb
loope
add
xorl
push
popf
lcall
test
lcall
ss
mov
bound
jg
pop
inc
cmp
cld
clc
jb
push
jecxz
mov
clc
popa
adc
incl
sbb
ljmp
sahf
daa
into
push
movsb
call
push
mov
lcall
call
cli
loope
shlb
btc
jl
or
sbbb
lcall
xchg
sbb
and
test
fwait
pop
mov
mov
sbb
sub
or
jg
stos
adc
inc
hlt
xchg
sbb
repnz
out
in
dec
sbb
sbb
clc
jmp
dec
or
out
push
lods
lret
inc
lods
fldz
idiv
ljmp
clc
pop
dec
and
mov
cmpb
bound
sbb
xor
aaa
aas
xor
push
cmp
mov
lcall
dec
in
cmp
mov
popf
inc
jp
fwait
bnd
fildll
or
arpl
jl
inc
mov
repz
rcrl
movsb
pop
inc
push
mov
orl
jmp
call
lcall
pop
test
das
cli
pop
enter
loope
jp
je
dec
fs
pushl
xchg
sbb
inc
insl
sbb
sbb
aam
mov
lcall
xor
je
test
sahf
xchg
outsb
sbb
sub
loope
fmul
lods
out
and
inc
or
outsb
jg
frstor
inc
xor
mov
data16
xor
mov
or
ds
inc
mov
cmp
aam
loop
loope
mov
decb
xlat
push
call
pop
xchg
push
cli
jmp
movsl
lcall
mov
pop
lods
ljmp
jmp
clc
int3
ret
mov
mov
rorb
add
out
test
stos
cmp
sub
std
ficomps
lcall
lea
into
arpl
dec
jmp
sbb
xlat
jp
out
into
mov
out
outsb
mov
jle
std
ljmp
call
sbb
push
pop
gs
js
cmp
add
lahf
and
push
mov
cmp
push
outsl
jg
push
aad
pop
jns
jl
add
xchg
rclb
ss
les
xor
mov
incl
jbe
xchg
aad
push
xor
cmc
sbb
call
inc
add
xor
jae
dec
cmpl
bound
pop
aas
lock
decl
fcoml
test
xorl
fimuls
pop
push
jb
or
icebp
pop
or
adc
fcmovu
lahf
mov
aaa
xchg
xchg
mov
divl
cld
movsb
fbstp
sub
test
jmp
ds
ss
imul
jmp
or
jg
adc
cmp
add
rcrl
jp
adc
jg
add
decl
mov
shl
shll
jg
pop
xor
sarl
call
mov
lret
jg
daa
call
outsl
pusha
mov
out
inc
test
xchg
cld
scas
jg
test
mov
out
xor
inc
loop
push
jmp
mov
arpl
pushl
lds
in
aas
or
mov
out
mov
enter
mov
lock
adc
jge
cmp
dec
or
add
inc
fistpll
test
sub
ljmp
jg
inc
sub
dec
cld
push
icebp
add
cmp
push
pop
outsl
mov
pop
xor
lcall
mov
aaa
bound
sbb
je
adc
jmp
lcall
sbb
push
mov
inc
jmp
pop
or
dec
pop
pushl
xchg
clc
std
xorb
xchg
inc
mov
and
pushl
sub
cltd
push
test
fwait
mov
cmpsb
or
dec
lret
push
loope
mov
in
lds
cmpb
loopne
pop
ret
pop
cld
xor
mov
inc
cmc
push
pushf
sub
inc
or
aas
cmp
mov
clc
sbb
or
sti
out
mov
xchg
dec
out
or
mov
jmp
adc
cmp
add
dec
popf
and
sub
and
pop
in
scas
dec
loop
decl
mov
mov
mov
loop
xchg
pop
lahf
in
negb
ljmp
jecxz
xor
loop
fisubrl
mov
jmp
cmpl
movsl
mov
mov
xchg
mov
push
mov
iret
cmpb
call
pop
adc
dec
pop
or
fdivl
subb
pop
aas
pop
mov
in
xchg
imul
test
and
sbb
fnstsw
cli
sbb
ljmp
xchg
pusha
insb
inc
jmp
fwait
jne
cmovne
repz
sbb
das
cs
and
cmp
jge
pop
idivb
pop
and
std
movsb
rorl
sbb
lret
sahf
xor
push
stc
in
mov
fcomip
pop
add
mov
dec
in
in
ljmp
mov
xor
call
enter
inc
and
push
fistpll
jg
mov
loope
mov
andl
or
dec
mov
dec
aaa
mov
sub
loopne
pop
aas
stc
lcall
push
jbe
stc
jb
lahf
and
imul
push
add
push
aas
push
mov
stos
ret
ret
adc
mov
dec
xchg
les
xor
xchg
jge
lcall
testb
mov
dec
cli
jge
xor
or
fprem
andnps
out
and
dec
mov
push
push
xlat
test
jecxz
test
xchg
jb
movsl
sbb
decl
clc
enter
mov
lret
pop
addb
mov
dec
outsl
fnstsw
push
ljmp
xchg
das
xchg
mov
xchg
jmp
jmp
ret
mov
add
lds
jnp
sbb
mov
test
cmovo
decl
lods
pop
pop
dec
cmp
ds
pushf
jo
push
shr
sbb
les
adc
incl
pop
repnz
ss
mov
lods
jmp
mov
and
incl
xchg
jbe
stos
cli
and
push
jb
adc
fwait
andl
int3
mov
jmp
lahf
dec
std
mov
jbe
out
add
incl
push
call
inc
push
lcall
or
fmull
pop
xchg
rcll
sub
lods
call
std
ds
cmpsb
adc
jnp
pop
shrl
pop
lock
std
sbb
jp
inc
xor
and
pop
adc
push
or
js
cmp
popa
test
and
jge
inc
jl
fbstp
push
mov
adc
jmp
xor
xor
aas
push
scas
push
dec
call
aad
pushl
stos
inc
std
jecxz
cld
mov
and
mov
fcmovbe
pop
fisttpl
xchg
cwtl
shll
ds
lods
pop
pop
int
xor
movsb
jp
pushl
push
adc
repnz
jne
cmpsb
inc
xlat
and
mov
inc
lea
lret
push
xchg
xor
dec
mov
sbb
lods
jmp
jg
mov
mov
cmpl
scas
repz
inc
or
mov
rorb
jg
mov
aam
cmp
sbb
lcall
loop
pop
push
inc
dec
mov
ja
or
and
call
pop
push
add
aam
push
xorb
mov
imul
inc
xlat
push
hlt
xor
ja
push
in
jae
pop
pop
dec
mov
nop
aam
jnp
test
inc
aas
and
xchg
jge
jge
cmp
lcall
outsl
add
sti
mov
ds
fstps
into
incb
mov
pop
mov
js
cwtl
in
cmp
sub
sahf
pusha
add
fildll
out
jg
lods
pusha
dec
dec
mov
or
and
lahf
pop
add
xchg
jne
or
decl
and
jmp
xor
xchg
and
sub
mov
imul
mov
call
daa
jmp
loopne
bound
push
shrl
mov
mov
test
inc
mov
lahf
lock
xchg
add
addr16
icebp
aas
push
mov
mov
pop
push
cld
das
sbb
lret
bound
jmp
call
mov
xor
push
dec
push
pop
sub
out
jnp
pop
sub
inc
repnz
sbb
mov
or
idiv
das
sbb
jecxz
imul
adc
fistps
dec
pusha
xchg
push
mov
inc
arpl
test
call
and
cwtl
mov
xchg
stos
sbb
mov
cmp
mov
jecxz
add
or
push
pushl
pop
in
repnz
xchg
mov
decl
stc
int
or
fs
push
push
and
push
cmp
dec
xor
js
int3
add
sbb
inc
icebp
ds
xor
pop
or
aas
cmp
lret
dec
lds
push
or
or
mov
les
loope
and
jmp
add
repnz
inc
and
mov
sbb
addr16
out
mov
incl
jns
inc
js
xor
mov
lods
sti
outsb
jp
movsl
daa
outsl
inc
sbb
pushl
orl
adc
xchg
mov
std
jmp
incl
sbb
jp
cmp
stos
fs
mov
push
in
stos
lcall
shl
jmp
sub
dec
sarl
push
sub
dec
out
xlat
pop
jmp
xor
jo
xchg
xchg
shll
mov
inc
sbb
cmpl
fldenv
lock
cmp
divl
jl
push
cmc
fdivp
and
xor
std
rclb
hlt
push
jg
sar
sub
dec
daa
outsb
or
inc
jmp
add
xchg
lock
sbb
sbb
lock
aas
and
mov
scas
inc
mov
repz
jbe
and
jg
daa
loopne
mov
pop
call
sbb
cs
inc
ret
cs
adc
cltd
add
popa
mov
aaa
in
fbld
test
outsl
jg
push
call
popa
fsubrp
ret
mov
shll
pop
imul
sar
call
cld
das
mov
shll
lcall
push
cmpsb
movsl
aam
hlt
jmp
pop
pop
mov
test
adc
jg
call
adc
jae
outsl
pop
jl
dec
lret
sub
test
fstpl
stc
pop
aaa
cli
cmp
mov
add
dec
jno
sahf
mov
push
lea
xor
decl
stc
fistpll
fmuls
jg
out
lahf
das
decl
lea
xor
mov
faddp
orb
iret
push
clc
mov
lcall
fdivr
inc
or
out
ljmp
cltd
cmp
cmpsb
and
mov
sbb
adc
add
xor
dec
es
fstl
pop
dec
add
popa
call
pop
add
push
xchg
or
mov
sub
insb
adc
adc
inc
nop
cmp
fbstp
call
shr
xchg
inc
inc
xchg
aaa
dec
mov
adc
lea
jb
mov
mov
adc
mov
push
mov
fstl
or
xchg
adcb
daa
lock
mov
sarb
vaddsubps
mov
movb
inc
jmp
jge
imul
push
sbb
repnz
cmp
add
pop
mov
mov
dec
adc
pop
mov
ljmp
xchg
rorl
mov
aaa
sahf
fsubp
push
jmp
mov
pop
pop
repz
mov
adcl
sub
dec
push
fdivrs
xor
clc
mov
in
mov
andnps
add
mov
ret
sub
jg
repz
mov
dec
decl
dec
sub
cli
xorb
insb
jnp
push
cmp
lock
shlb
mov
push
lock
jge
lods
mov
decl
rorb
mov
iret
mov
sub
add
outsb
sub
sbb
sub
cli
jmp
ficoml
insb
dec
nop
sub
sub
add
lea
mov
movsb
cmpsb
cmp
andb
jmp
xor
mov
sub
adc
inc
mov
ja
cld
mov
mov
nop
incl
data16
popa
push
in
repnz
pop
mov
aas
dec
sub
out
out
mov
jmp
add
popl
jecxz
in
inc
xchg
xchg
aad
mov
and
sbb
ret
negb
std
subl
inc
mov
fs
into
jmp
jb
mov
dec
adc
je
incl
imul
push
cli
xchg
dec
out
xchg
and
xchg
insb
test
jmp
jno
decl
sbb
stos
call
int3
pop
push
fdiv
ja
add
and
sbb
test
lahf
cld
dec
hlt
jge
add
aaa
lret
lret
push
fiadds
pop
and
or
pop
mov
pop
pop
fisttps
mov
nop
sahf
xor
loopne
decl
add
mov
push
lods
mov
xlat
nop
cmp
hlt
decl
cmpsl
fiadds
and
sbb
ljmp
loop
popf
mov
pop
out
in
mov
mov
stos
std
dec
aas
dec
inc
mov
add
xchg
cmpsb
cmp
pop
push
pop
pop
push
std
add
test
leave
gs
push
aas
pop
cmp
adc
pop
adc
jg
stc
rcpps
aas
push
les
lock
jb
mov
cmp
push
pusha
sub
mov
in
pop
xchg
jg
fwait
loope
out
sbb
or
mov
arpl
movsb
pop
xchg
mov
fwait
sub
or
jb
call
insl
stc
scas
or
ficompl
dec
sub
mov
test
push
popa
gs
cmp
or
inc
jecxz
ljmp
xchg
aam
cmp
jno
xchg
les
pop
pop
push
fdivl
test
fmul
cmp
gs
setno
mov
push
lret
and
imul
inc
sub
mov
out
js
jmp
and
mov
sbb
push
or
and
xchg
cmp
repnz
das
clc
jle
add
rorb
jno
pop
or
mov
cmp
add
fistpll
cmp
sub
dec
push
dec
inc
icebp
dec
mov
call
loopne
mov
outsl
mov
movsb
gs
adc
jl
andb
outsl
inc
ds
das
lcall
and
pushl
mov
sub
int
inc
adc
cmp
mov
inc
popf
jl
add
mov
pop
cli
mov
dec
xchg
inc
xchg
push
repnz
clc
incl
aam
outsb
inc
test
insl
lock
ja
popf
dec
sbb
add
lahf
orl
int
nop
stc
shlb
je
into
loopne
decl
cmc
es
lret
aad
mov
add
movsl
int
test
lcall
add
sahf
out
popa
test
gs
pop
push
and
push
pop
sbb
clc
jmp
lcall
leave
jae
insl
sbb
fsubrl
test
fbld
out
clc
call
cwtl
pop
shr
xor
mov
mov
xchg
and
sub
ljmp
sbb
mov
xchg
nop
lock
test
sbb
ret
adc
aaa
xor
xchg
jmp
adcl
mov
mov
dec
inc
data16
push
pop
mov
xor
xchg
cli
jle
lock
mov
addr16
pop
hlt
sub
sub
fisttpll
and
sub
fiadds
and
dec
inc
ja
stos
push
dec
jbe
pushl
imul
dec
mov
jp
arpl
daa
scas
push
cmpsl
add
xchg
xor
mov
jns
sub
cld
dec
and
lcall
addr16
and
imul
daa
push
dec
fwait
xchg
add
lods
fcmovne
gs
mov
stos
fdivrl
sahf
repz
ds
ret
mov
fsubrs
xor
and
test
mov
outsl
and
mov
pop
pop
loopne
jnp
sbb
jg
ret
dec
insb
jg
stos
pop
sti
andb
dec
call
push
jo
mov
push
std
lcall
lock
aad
jge
jecxz
test
jle
movsl
xor
ja
pop
mov
add
ljmp
add
popf
movsl
adc
scas
push
push
adc
cltd
inc
int3
add
add
jmp
fistps
leave
cmpsl
scas
ss
shlb
imul
adc
das
and
push
imul
ss
jno
push
add
fildl
sub
andl
jg
jmp
data16
xlat
mov
dec
and
and
push
mov
sti
sbb
dec
or
cmp
xlat
cmp
ja
cmpl
sbb
cmp
ljmp
lret
out
add
cmp
or
lahf
mov
dec
mov
incl
adc
es
xor
lea
dec
aaa
pop
repnz
das
adc
sbb
int
out
movb
out
ja
mov
incl
cld
std
pop
aas
jmp
pop
mov
sbb
inc
dec
and
mov
cwtl
out
fxch
js
add
std
jmp
add
repz
jg
ss
sahf
scas
out
shlb
pmulhuw
cld
cltd
js
xor
pop
pop
mov
sub
pushl
cmp
jge
cwtl
mov
popa
or
mov
sub
xor
cwtl
in
ss
dec
sub
incl
push
add
mov
pushl
cmp
aad
shll
cmp
mov
mov
mov
push
inc
lds
fistpll
mov
pop
es
pushl
xchg
mov
bound
popf
lret
enter
push
shl
pop
sbb
arpl
dec
icebp
js
jbe
push
call
loopne
daa
push
loop
or
inc
mov
in
addr16
cmp
mov
inc
pop
or
cld
call
rorl
mov
lret
mov
in
testb
jmp
mov
jge
xor
adc
mov
push
pusha
outsb
cld
das
and
pop
xor
repnz
xchg
lahf
ljmp
or
das
outsb
jmp
and
pop
sti
mov
push
jbe
xor
incl
aad
cmpb
pop
or
jmp
enter
fistpll
sbb
sbb
repnz
push
or
fisttps
out
jo
sub
jg
push
aad
mov
mov
inc
incb
cmpsl
jnp
jae
std
lea
and
aas
and
lods
push
push
aad
and
jle
clc
dec
in
xor
mov
pop
mov
jg
push
or
xchg
mov
xchg
push
dec
push
push
ret
pop
mov
in
js
es
clc
jmp
idivl
pop
jbe
pop
mov
sub
xchg
inc
aas
jnp
filds
push
push
ret
mov
mov
inc
add
jp
stc
syscall
inc
fisttps
int
cmp
loopne
fmull
xor
pop
filds
add
mov
mov
mov
jg
mov
lcall
adc
les
fwait
movsl
daa
push
sub
fld
push
inc
sbb
or
mov
test
mov
imul
add
lock
jecxz
call
cmp
adc
rcrl
scas
aas
or
and
stc
pusha
push
das
pop
and
fdivrp
xchg
push
leave
popa
aaa
xchg
sub
xchg
jno
sbbl
dec
aam
add
daa
sub
decl
inc
xor
mov
bound
insl
mov
push
data16
mov
fwait
incl
std
jae
fdivl
sbbl
imul
inc
test
shlb
mov
arpl
jne
decl
test
test
xchg
xor
jecxz
pop
xor
mov
mov
scas
pop
or
faddl
fwait
mov
fists
jg
loopne
jb
pop
xchg
dec
scas
lcall
out
mov
push
loope
xchg
cld
lcall
aad
sub
pop
add
cltd
js
mov
fs
jmp
lahf
jne
and
inc
inc
testb
aaa
inc
dec
or
call
divb
mov
push
inc
or
sbb
mov
xchg
add
inc
adc
incl
pop
push
in
push
xlat
sarl
dec
mov
pop
xchg
mov
lahf
es
and
mov
jmp
adc
in
pop
add
cwtl
insl
xchg
inc
out
adc
xchg
mov
loope
call
dec
dec
adc
sub
std
insl
pop
call
push
push
lods
icebp
loop
mov
vpmaddwd
xor
ja
jns
je
rcrl
shr
nop
push
push
jno
pushl
ja
div
push
repnz
arpl
nop
xchg
and
push
pop
sub
pop
pop
cmc
add
xchg
xlat
cli
aas
mov
movsb
test
scas
gs
mov
xchg
or
dec
shlb
xor
and
jp
stc
pop
pusha
mov
pop
iret
push
loope
jecxz
mov
decl
mov
cmp
pop
ret
popf
xchg
aad
dec
ret
adcb
jecxz
jecxz
mov
clc
jmp
dec
sbb
cmp
and
add
xchg
jge
inc
call
add
loop
test
pop
xor
mov
mov
xchg
jge
mov
insb
or
pop
ja
lods
ljmp
cli
inc
outsl
adc
pop
dec
push
ret
jmp
out
mov
mov
and
adc
cld
cmp
mov
ret
xchg
cmc
fcomps
jnp
iret
jg
push
loopne
dec
xchg
lcall
sub
ljmp
shll
mov
mov
les
icebp
lea
push
das
pop
cmc
inc
cld
incl
loop
scas
dec
inc
dec
jecxz
bound
push
lods
testl
inc
push
stc
pop
mov
mov
cld
repz
sub
cmc
cltd
ss
pop
inc
pop
jg
pushl
lret
xor
cmc
pop
push
pop
cmp
popa
enter
jbe
movsl
hlt
jmp
mov
mov
das
inc
je
mov
mov
ljmp
icebp
in
ljmp
iret
cmp
cwtl
lea
xchg
sbb
inc
mov
add
scas
push
and
pop
xchg
pop
lds
or
daa
fidivl
decl
mov
and
decl
push
ljmp
mov
mov
call
push
or
stc
loope
xor
inc
or
mov
mov
push
mov
jecxz
std
aam
call
repz
pop
dec
push
subb
gs
and
subl
subl
out
pushl
pushf
and
push
ficoml
in
mov
nop
test
cmp
es
jo
scas
in
dec
movsb
pushl
ja
cmp
mov
or
mov
mov
loop
in
icebp
stc
and
loopne
jmp
aaa
sub
pop
repnz
nop
cli
shrl
jmp
repz
and
xor
xor
in
add
jno
and
cltd
jl
sti
bound
lahf
pop
rorb
lcall
mov
or
cmp
or
or
ret
cmp
jo
decl
in
outsl
jg
add
push
push
arpl
inc
jno
or
ds
xorl
jge
add
lock
inc
je
aas
stc
pop
enter
xor
inc
icebp
js
add
jne
repnz
shll
jmp
lods
fdivrs
xchg
test
mov
xchg
arpl
adc
sbbb
call
mov
mov
aas
roll
out
call
incl
aad
pusha
jp
nop
in
sub
dec
add
mov
cli
mov
ljmp
dec
ds
pop
xor
divps
jg
pushl
ret
lahf
adc
out
mov
xor
cmp
dec
push
cmc
cmpsl
mov
add
jmp
movsl
xchg
xchg
sbb
pop
mov
incb
xchg
cmpsb
ret
adc
fldl
pushl
imul
cmp
cmp
clc
rcrl
cmpsl
or
in
jnp
out
jns
scas
incb
or
jns
pop
push
pusha
mov
pop
add
lcall
outsl
mov
mov
mov
fnstcw
jle
xchg
psubsb
inc
or
cltd
jb
xor
scas
aaa
faddp
jns
adc
pop
dec
push
rcl
sub
cmp
lock
cmp
and
mov
pop
outsl
decl
int
out
std
jno
jb
cltd
jp
cmp
pop
lods
adc
pop
and
sub
fcos
inc
mov
repnz
and
pop
and
aam
push
leave
ljmp
mov
cmp
and
movsl
push
stos
movl
xor
jmp
add
jp
or
cmc
mov
pop
js
add
pop
into
hlt
cwtl
sub
jnp
fistpll
dec
jb
hlt
mov
scas
jne
add
push
pop
and
lcall
jg
cwtl
and
adc
lcall
xchg
jae
pop
mov
jp
cmc
iret
ret
adc
jl
pop
aas
stc
pop
jge
ds
mov
cld
mov
mov
out
and
sbbl
inc
ss
xchg
into
roll
push
jno
push
shlb
jecxz
inc
imul
js
dec
xchg
cltd
lea
cmp
rcrl
mov
aaa
imul
hlt
pushl
dec
cmp
dec
xor
inc
outsl
sahf
mov
push
insb
js
bound
or
mov
push
aas
insl
pop
sub
enter
orb
mov
sub
jae
incl
and
outsl
inc
iret
fwait
pop
pop
stos
into
pop
dec
xor
add
stos
mull
pop
cli
test
inc
and
cmpsl
xchg
xor
ficoms
pusha
sbb
inc
sub
jmp
sub
out
nop
jne
std
dec
dec
sub
push
jne
loopne
xor
add
adc
cli
and
enter
decl
incl
repnz
mov
mov
push
shl
fisubl
clc
mov
inc
out
data16
jne
cld
test
mov
and
aas
fisubl
push
int
mov
inc
jno
and
pop
pop
jge
aad
call
push
xchg
in
adc
stos
push
xchg
xchg
mov
cwtl
xor
mov
movsl
dec
mov
jmp
pop
jp
dec
or
cmp
repnz
add
mulb
pop
roll
push
xor
jge
pusha
aaa
add
test
pushl
shlb
adc
push
fadds
mov
ja
add
mov
pop
outsb
and
pop
sub
xchg
cmp
dec
mov
sbb
jmp
xchg
xor
and
push
repnz
push
sub
jmp
cmc
or
inc
add
cltd
jnp
mov
xor
ljmp
ss
jg
out
repz
xchg
mov
jmp
std
mov
es
add
inc
movsl
cmp
aas
aaa
sub
fsubrl
call
xchg
lret
push
ja
xor
jle
leave
xchg
lods
mov
jno
push
jnp
cs
call
stos
xchg
push
dec
test
ud0
xchg
or
repz
dec
inc
xchg
sbb
ds
pusha
std
mov
mov
mov
pop
ss
ljmp
lcall
and
mov
push
and
jo
jle
push
fimuls
adc
mov
or
mov
mov
sub
mov
imul
lock
inc
dec
out
cmpsb
std
adc
jle
rorl
icebp
sub
jg
subb
mov
fists
repnz
sub
xchg
sub
cmp
leave
mov
popf
sbb
outsb
pop
lcall
iret
cmp
inc
push
pusha
pop
adc
inc
dec
test
jo
leave
inc
cld
mov
sub
sub
inc
lar
lds
push
jmp
adc
pop
loop
xor
dec
je
xchg
push
ret
cld
dec
sub
and
out
nop
dec
mov
xchg
push
ss
mov
insb
mov
xchg
ret
mov
sbb
ljmp
test
sahf
movsb
popf
lock
xchg
loop
mov
inc
jbe
imul
lcall
in
out
jp
inc
inc
mov
sbb
mov
adc
loop
push
pop
sbb
jmp
in
loopne
loope
daa
jae
std
in
fstpt
jno
icebp
add
aad
add
jg
xchg
xor
pop
nop
pop
inc
leave
jl
and
mov
dec
popa
rcrl
and
pushl
divl
decl
and
push
out
inc
test
mov
fsubl
iret
aam
cmpsb
hlt
sbbb
and
or
rcll
cmpsl
scas
cwtl
mov
mov
cmp
cmp
ds
andb
enter
cld
js
dec
lods
insb
xor
cmp
xor
push
nop
cld
call
in
or
jl
ficoml
lret
pop
jnp
filds
imul
lret
inc
or
sub
and
lods
test
fwait
jnp
xchg
pop
jg
mov
aad
mov
incl
adc
push
push
addb
test
dec
cli
jmp
jno
sub
lods
sar
ljmp
add
shlb
add
sub
push
filds
lea
sahf
ds
pop
hlt
orl
iret
inc
mov
inc
ljmp
push
cmp
call
xchg
xchg
sbb
xchg
jge
lods
js
sahf
jnp
jmp
loop
mov
ss
test
insl
push
daa
lahf
mov
xor
ljmp
add
inc
pop
scas
jecxz
fnsave
inc
and
imul
fnsave
xchg
adc
lcall
add
sub
jo
imul
out
aas
idivb
cmpsb
mov
rorl
and
and
cmp
cmp
dec
mov
cmpsl
mov
imul
jns
xchg
fsub
aad
iret
jmp
scas
ret
add
cmp
test
pop
inc
lahf
clc
mov
inc
dec
jno
dec
add
icebp
pop
dec
push
xchg
in
pushf
stos
fdivr
ljmp
out
loopne
stos
es
rcrl
test
dec
mov
mov
add
add
rolb
scas
dec
stc
das
mov
mov
push
sub
pop
call
lock
xchg
or
sub
xchg
incl
nop
enter
pop
pop
add
aad
push
pop
cmpsb
test
aad
or
mov
in
in
add
roll
or
xor
dec
lcall
lods
jae
mov
adcb
add
cmpsl
addr16
mov
dec
fsubl
ljmp
aad
aam
idivl
fdivr
push
fprem1
insl
xor
lcall
outsb
mov
push
ljmp
cmpsl
or
dec
sub
xor
aaa
movsb
sahf
wrmsr
inc
pop
mov
in
lcall
and
dec
pop
push
adc
loopne
cli
xor
xchg
inc
loopne
pop
bnd
mov
xor
cmp
inc
inc
das
in
inc
aas
pop
movsb
repz
inc
mov
jmp
fistl
adc
movsb
out
clc
xchg
ret
test
pop
sbb
sub
int3
adc
dec
cld
je
push
sbb
sub
xchg
mov
push
add
mov
add
and
into
add
paddusw
stos
das
sub
pop
sahf
rcr
pop
jecxz
insl
jmp
jg
fs
call
pop
inc
popa
dec
outsb
sub
loopne
dec
ljmp
and
xchg
sub
or
xor
fcoms
cmp
iret
or
cltd
jle
or
jecxz
pushl
test
insl
sbb
insl
pop
outsl
sub
cmp
leave
jne
cmp
push
push
mov
sub
or
xchg
dec
incl
enter
and
aas
pusha
call
mov
mov
pop
and
xchg
sbb
nop
mov
sub
ljmp
jbe
cs
daa
jbe
jp
mov
sbb
mov
jl
mov
incl
xchg
xbegin
pusha
dec
mov
mov
rcrb
lret
adc
jns
adc
decl
or
sub
dec
cmp
fstl
jge
test
jmp
out
and
mov
insl
jne
test
fsts
stos
addr16
ljmp
scas
cs
hlt
mov
xor
mov
aad
das
arpl
les
js
movsb
loopne
stos
mov
push
popa
stos
sbb
lret
rcrl
and
adc
imul
and
repnz
call
xor
xor
mov
lods
out
add
insb
mov
push
and
pop
testl
pop
dec
das
mov
push
cld
fistl
fiaddl
sbb
mov
dec
hlt
or
loope
mov
ret
add
mov
call
sahf
stos
data16
sbb
or
das
sbb
decb
pushf
aaa
shlb
int3
add
ljmp
imulb
cwtl
nopl
cli
dec
jno
lcall
into
iret
ljmp
ja
add
xchg
pop
mov
and
cli
mov
and
lret
add
lock
lcall
imul
mov
xchg
mov
jg
fisubl
cmp
and
sub
incl
cld
inc
mov
push
push
cmc
inc
mov
fldl
mov
fdivs
sbb
shl
or
pop
sub
shll
ret
push
in
mov
incl
push
pop
out
stos
imul
jbe
enter
mov
mov
dec
out
pop
push
dec
inc
push
cmp
cmp
sarl
and
inc
cld
lcall
jmp
sub
loopne
mov
inc
adc
jg
jno
js
jae
arpl
cwtl
cld
xchg
lcall
ja
adc
mov
cmp
add
rcr
xchg
or
fstl
fstl
mov
mov
cmp
jg
ret
arpl
test
push
and
xor
mov
pushl
ret
push
push
fmuls
into
mov
push
sar
decl
jmp
sub
or
lods
adcb
aam
add
jg
enter
inc
shll
cmp
adc
jmp
or
insl
sbbb
inc
xor
out
dec
inc
gs
insb
mov
cmp
daa
cmp
sub
jl
pop
mov
decl
jle
unpcklps
cli
or
pushf
je
pop
outsb
add
mov
incl
cmp
repz
loopne
lret
lahf
test
dec
hlt
jmp
cmpsl
lcall
dec
pop
in
ret
mov
repz
add
test
adc
dec
mov
decl
sub
in
in
pop
push
aad
pop
in
pusha
and
icebp
add
lcall
aas
inc
fwait
jns
jmp
dec
and
jle
mov
jne
mov
call
xchg
pop
out
or
mov
test
out
fistps
jnp
pop
es
mov
stos
jmp
arpl
stos
jb
jecxz
inc
adc
out
pop
push
jmp
mov
sbb
mov
out
inc
sbbb
sub
movsb
xchg
ljmp
ret
push
ljmp
dec
pop
or
sarb
mov
push
mov
add
stos
mov
or
movsb
mov
leave
cmp
inc
mov
cmpsb
cmp
daa
mov
lock
dec
ror
je
test
mov
inc
shr
and
pop
mov
dec
lret
icebp
out
lods
shr
loop
adc
inc
pop
lods
mov
sti
sub
adc
mov
pop
movsl
mov
inc
or
roll
adc
inc
test
test
mov
xchg
dec
popa
xchg
gs
inc
or
push
jp
mov
pop
gs
decl
repnz
xor
sbb
push
or
out
in
xchg
push
aaa
inc
clc
xor
dec
or
mov
and
adc
dec
fsubrl
cmpl
mov
ss
in
xchg
and
pop
rcrl
xchg
mov
js
stos
insl
pushf
clc
jmp
add
lahf
in
cmp
cmp
std
push
mov
mov
outsb
test
mov
xchg
out
add
shll
cmp
movl
or
mov
lcall
mov
cmp
push
pusha
inc
adc
dec
add
cmpsb
inc
push
loop
lds
jmp
mov
mov
iret
mov
cli
pop
push
adcb
push
mov
inc
and
iret
or
stc
bound
jg
or
test
subb
pushl
lret
loopne
cmp
mov
push
je
cmp
pop
pop
or
das
pushl
mov
hlt
mov
or
adc
mov
xrelease
not
call
adc
in
cmpsl
sbb
push
xchg
pop
cmp
jmp
sbbl
jg
loop
push
pop
cmp
pop
pop
dec
mov
lcall
stac
pop
fwait
mov
sbb
into
inc
push
in
push
cmp
push
incl
cltd
xchg
lahf
push
ljmp
dec
movb
das
cmp
and
push
adc
std
jmp
add
mov
in
mov
jne
pop
fcomip
jg
push
sbb
int3
jbe
mov
pop
mov
test
push
push
ljmp
xor
jmp
push
fistpl
divl
in
cmp
jg
ss
jle
push
gs
push
stos
dec
repnz
push
divb
xchg
hlt
js
aam
movsb
or
adc
subb
jo
jg
scas
lods
mov
add
mov
sbb
das
lret
push
and
mov
push
test
mov
test
pop
loopne
jecxz
fmull
cmp
inc
push
incl
or
stos
cmpsl
pop
jbe
push
sbb
jo
mov
pop
mov
adc
sti
add
jmp
out
jle
ret
lret
add
xor
fwait
ss
adc
dec
decl
mov
cmp
or
ja
jo
add
gs
cmpsl
pop
jb
ljmp
cmpsb
fadd
mov
ljmp
nop
mov
insb
js
les
mov
ljmp
lcall
aad
mov
lcall
or
loopne
scas
dec
pop
rorb
jle
fisubrl
incl
xchg
cmc
test
push
ss
jecxz
pusha
jl
aad
jmp
sbb
mov
nop
mov
push
xchg
outsl
jl
test
lret
aam
leave
test
inc
mov
adc
outsl
ljmp
jo
push
push
arpl
loopne
loope
mov
push
or
add
sbb
mov
adc
fmull
repnz
test
pop
outsb
sub
cmp
stos
add
ljmp
jle
mov
repnz
xchg
and
add
inc
adc
ljmp
mov
bound
cli
pop
mov
test
fidivs
xchg
out
or
scas
or
mov
or
xchg
mov
push
pop
lds
lods
jl
and
incl
jmp
adc
shlb
js
adcl
and
loope
cltd
mov
enter
mov
push
mov
shll
sub
xchg
xor
ljmp
aad
pop
push
inc
mov
fdivrp
decl
out
fdivl
xlat
shlb
popf
push
jnp
popf
test
jmp
incl
pop
lret
and
push
dec
add
push
out
or
or
adcb
and
pushl
ficoms
xchg
and
imul
sub
les
mov
inc
jae
cmp
jmp
pop
pop
push
adc
aam
jbe
xor
jno
adc
jmp
call
jg
mov
fwait
push
test
call
shl
inc
lcall
cmpsl
and
pushl
arpl
addr16
push
adc
dec
fbstp
in
xchg
jb
cmpsb
loopne
stos
pop
inc
andb
lods
mov
mov
cld
or
sub
arpl
cli
mov
inc
mov
in
xorl
mov
mov
mov
iret
clc
cmovne
mov
adc
enter
pop
into
orl
push
divps
decl
sahf
cltd
inc
or
in
outsb
icebp
mov
pop
sbb
decl
pop
push
lcall
mov
mov
mov
fmuls
inc
sub
inc
pusha
in
decl
mov
pop
out
cmp
mov
mov
fsubs
pop
mov
push
jmp
ljmp
loope
add
push
rcrb
push
adc
inc
es
dec
scas
cmc
or
cmp
incl
or
iret
mov
enter
cmp
aas
adc
and
cmc
scas
jp
cmp
adc
and
adc
cwtl
imul
cli
push
mov
scas
jp
xor
jmp
inc
mov
fs
dec
adc
mov
adc
push
mov
push
xchg
outsb
das
test
lret
jmp
std
cli
add
mov
icebp
pop
mov
push
sbb
pop
mov
shlb
lcall
outsl
clc
jmp
dec
or
pusha
shl
xor
inc
aad
mov
ljmp
pop
inc
lea
push
dec
sbb
pop
jle
mov
lcall
repz
jmp
nop
fnstenv
pop
xchg
or
ss
in
test
mov
mov
add
bound
frstor
cmp
stos
sub
inc
mov
sarb
insl
aam
inc
int
movsb
mov
inc
xchg
jns
push
cmp
jmp
rol
xchg
xchg
xor
jge
lret
push
push
subb
sbb
lods
fstp
call
aad
cli
sub
and
and
ds
imul
xor
in
sub
cmc
or
inc
in
dec
rorl
dec
jb
pop
gs
adc
das
add
mov
jecxz
xchg
leave
movsl
lret
fdivrl
push
insl
mov
lahf
movsb
jbe
xchg
pushl
jle
out
push
cmpsb
adc
sub
repz
mov
out
pop
mov
out
or
ljmp
outsl
jne
std
or
out
cmp
addb
pop
stc
mov
mov
das
lods
sub
xchg
imul
pop
cmp
ficomps
cmp
into
pop
cmp
pushl
push
cld
pop
pop
add
mov
testb
mov
sub
lock
mov
lcall
pop
jge
mov
jmp
pop
jns
es
mov
testb
bnd
subb
jnp
out
subb
inc
stc
dec
rorl
pop
rorb
push
add
bound
dec
sub
std
mov
and
cmpsb
mov
sub
jg
inc
aam
sbb
xchg
xchg
popf
and
mov
sub
push
inc
add
cmp
test
shrb
adc
jae
pop
jecxz
push
ljmp
jb
call
call
int
shlb
mov
pop
xor
fadds
scas
loope
mov
scas
mov
in
sbb
pusha
mov
pop
call
rcr
push
inc
subb
jb
push
outsl
pushl
pop
aad
scas
mov
push
jae
stc
cld
dec
adc
repz
lock
inc
fisubs
es
mov
cvtdq2ps
jle
shrb
out
popf
xchg
lcall
enter
shll
mov
or
jns
adc
cwtl
adc
or
stos
lds
cmpsl
xor
es
sbb
ret
mov
mov
dec
shrl
jl
lret
dec
test
mov
sbb
imul
call
test
xor
mov
push
lcall
mov
push
outsb
pushl
xor
in
cmp
fstps
sub
mov
insb
mov
pop
pop
stc
xor
or
loope
jmp
jecxz
pop
sbb
rcll
ljmp
call
sti
arpl
mov
jb
cli
jbe
cli
mov
adc
lods
push
icebp
push
mov
ljmp
inc
incb
push
jmp
jp
in
ds
xchg
inc
push
and
cwtl
outsb
mov
ja
sub
das
gs
xchg
xor
stos
data16
leave
les
jbe,pt
sbb
mov
xor
iret
into
in
lods
fmull
jg
lods
negb
fdivl
adc
cmp
shl
add
jmp
mov
lahf
push
cmpsl
and
and
xchg
adc
out
dec
imul
lea
jg
decl
mov
addr16
sti
inc
inc
cmp
add
pop
out
pop
loop
icebp
dec
roll
fdivs
lret
stc
lods
dec
jns
call
test
pop
cmp
jns
sub
test
sbb
lods
orl
sbb
jo
fistpll
adc
test
jb
sbb
adc
pop
scas
add
fbstp
and
mov
adc
movb
mov
xchg
arpl
out
jo
in
fdivr
ficompl
pop
clc
push
pop
fidivrl
outsb
xor
in
call
and
out
and
cmp
jecxz
and
xor
xor
movsl
mov
xor
jmp
mov
mov
jmp
or
pop
mov
in
sub
stos
je
js
and
lcall
out
stos
xchg
pop
mov
rcl
sbb
dec
mov
sahf
mov
mov
sbb
jp
cs
inc
xor
mov
ja
and
cmp
cs
in
jns
xor
or
rcrb
int3
or
mov
cli
push
into
addb
jmp
ds
je
cmp
sbb
sbb
inc
fwait
cmp
mov
fwait
sbb
jg
cmpsl
jle
out
jle
ds
or
cmp
sbb
mov
jge
jge
mov
lcall
push
jp
sub
push
and
cltd
lret
gs
sahf
inc
fistl
in
loopne
mov
clc
ss
or
adc
lahf
xor
movsl
sbb
jmp
jmp
mov
call
and
leave
mov
ficoms
or
aad
int
pop
repz
push
in
adc
jmp
mov
testl
cmp
mov
inc
es
adc
add
or
ret
jmp
jb
xor
scas
sub
dec
rorb
les
or
xor
mov
sub
lea
fnstenv
mov
ljmp
push
xor
dec
test
lods
pop
jle
mov
mov
pushl
or
add
cmp
ljmp
mov
movsl
dec
adc
ljmp
outsl
outsl
fs
clc
dec
add
mov
lahf
std
nop
jb
call
aaa
jmp
jp
rorb
ljmp
sub
mov
inc
lods
xor
fsubr
fisttps
test
in
std
inc
ret
inc
xchg
adc
and
xlat
jge
test
jns
jbe
mov
faddp
pushl
cli
xor
lret
jge
int3
movsb
sbb
stos
pop
nop
xor
and
push
out
sar
ljmp
roll
pusha
dec
in
lea
xchg
xchg
dec
in
push
mov
and
call
hlt
push
jmp
int
ljmp
mov
jecxz
jg
jg
mov
xchg
repz
das
loope
loop
sarb
decl
fistpll
mov
repnz
or
nop
fcos
jg
or
jle
cmp
bound
pop
fisttps
dec
push
cmpsb
mov
stc
push
shrb
jmp
mov
jnp
mov
repz
xor
outsl
cmpsb
fidivl
pushl
shll
sub
and
inc
xor
enter
insb
jmp
and
scas
mov
xor
adc
aas
lahf
cld
das
cwtl
incl
and
mov
jo
mov
push
std
ljmp
shl
cs
ljmp
je
lea
xchg
loope
xor
and
xor
ud1
cmp
enter
cmp
mov
xor
aaa
filds
cld
ror
arpl
mov
outsb
arpl
sbb
jmp
mov
jo
push
sub
sub
dec
movsb
stos
adc
out
lea
add
cmpsl
cmc
incl
imul
rorl
ret
mov
sbb
push
mov
call
test
sub
lret
push
add
jmp
xchg
nop
addr16
stos
ret
jbe
add
flds
jmp
xor
sbb
repz
in
out
push
lret
adc
in
fs
pushl
jg
adc
jg
and
inc
add
and
iret
fbld
sub
and
loopne
aam
pop
imul
or
jg
lahf
int3
into
fsubrs
out
sbb
scas
ss
clc
ljmp
pop
dec
mov
fwait
sti
mov
xor
and
out
js
jmp
loop
sahf
sbb
cli
or
xchg
inc
add
xor
fisubrs
sbb
shrb
ja
mov
jg
xchg
clc
xor
cwtl
inc
xchg
pop
jge
xor
adc
jg
dec
pop
or
push
rcr
in
and
sub
push
mov
aaa
test
vmptrld
or
push
mov
repnz
test
std
ljmp
cli
nop
pop
lret
aas
and
and
pop
mov
stos
ret
mov
pusha
sub
jg
daa
xchg
js
adc
pop
out
mov
fnstsw
jnp
mov
cltd
inc
in
xchg
add
xchg
inc
add
ret
lock
jg
inc
add
gs
bound
jle
shr
push
iret
in
in
inc
ret
lcall
add
dec
out
add
adc
lcall
gs
daa
in
inc
push
push
data16
lods
cmc
lcall
mov
aas
int3
inc
pop
pop
mov
cmp
mov
mov
pop
incl
imul
xchg
imul
lds
test
mov
adc
lds
jmp
popa
cld
incl
pusha
lods
rolb
inc
insb
leave
xchg
add
jb
jg
hlt
lret
in
stc
xor
pop
mov
cs
cmp
xchg
and
jg
cmc
xor
mov
mov
push
cmpsl
add
decl
fldl
mov
xchg
aad
xchg
mov
xchg
xchg
xor
aaa
leave
mov
pop
lcall
scas
inc
cli
stos
dec
add
dec
test
or
jmp
aad
ljmp
cli
fildll
sbb
dec
mov
cs
xchg
lret
int3
cmp
ret
les
cld
inc
ljmp
js
lds
outsl
fcomps
aam
sub
add
addr16
cmc
js
mov
outsb
idiv
in
mov
inc
push
movsb
cmp
jns
gs
in
cltd
stos
xchg
aad
fmuls
sub
add
test
cmp
and
pop
pop
sahf
cli
sbb
sahf
mov
xchg
mov
lods
lcall
sbb
aam
jl
pop
subl
jg
pop
aam
into
inc
pop
mov
cmp
lret
repnz
cmpsb
pop
inc
pop
mov
pusha
xor
mov
icebp
call
mov
xchg
test
sub
ds
sbb
rcr
lock
cli
sub
xchg
ljmp
inc
es
adc
repz
mov
cmpsl
cli
repz
add
mov
enter
scas
push
aas
icebp
inc
pop
add
mov
fisubs
dec
sub
out
popf
adc
loopne
mov
lods
mov
mov
lcall
call
ljmp
insb
pop
mov
xor
pushf
pushl
std
pop
jecxz
mov
cmpsl
test
ret
clc
test
mov
decl
hlt
inc
movsl
xchg
adc
xchg
pop
lcall
test
xor
dec
scas
mov
sahf
lcall
jle
mov
dec
adc
stc
data16
add
gs
cmp
jg
addb
xor
mov
leave
or
push
xor
aam
sbb
pop
mov
xor
sub
out
insb
andb
pushl
psubw
mov
mov
ds
sti
pop
ret
or
movsl
lret
inc
mov
out
push
insl
popl
add
push
jne
pop
or
or
out
popf
fwait
aas
sbb
cmp
adc
mov
cld
das
mov
jl
sub
mov
lcall
out
sbb
sub
adc
pop
popf
in
xor
stc
inc
idivl
aam
aam
bound
lcall
cld
pop
mov
jns
lcall
add
fcomip
push
fs
and
mov
lock
mov
es
or
sahf
popf
gs
sub
call
push
mov
gs
cmp
jns
movsb
call
into
push
stc
or
adc
pop
mov
fdivl
out
mov
xchg
dec
cld
pop
test
inc
outsb
add
pop
inc
stos
repnz
xchg
jnp
leave
jo
andl
mov
movsl
movsl
xchg
push
in
mov
aam
inc
insl
pop
mov
xor
pop
cld
or
ljmp
cltd
outsl
and
pop
cmp
loop
rorb
sub
cs
fldenv
call
lahf
test
jg
dec
daa
mov
mov
jge
outsl
sub
xchg
mov
orb
fcmovnu
sub
int3
dec
jmp
xchg
xchg
push
lods
ret
xchg
lcall
out
jmp
stos
fnstcw
mov
mov
or
ljmp
sar
cli
mov
scas
xchg
mov
pavgw
aas
mov
icebp
add
adc
or
pop
clc
push
xchg
int3
inc
jns
mov
push
orb
mov
pushf
cmpsb
rcl
cmp
lds
mov
lcall
sbb
js
xor
sbb
les
xor
movsb
sbb
out
and
ss
fwait
outsl
pop
int3
xor
pop
decl
leave
jg
pop
mov
or
pop
xor
imul
mov
ss
sub
xchg
pop
ljmp
leave
jbe
mov
clc
lcall
jge
out
pop
push
daa
pop
loopne
cld
xchg
mov
outsl
pop
loopne
lock
mov
mov
incl
mov
dec
inc
shlb
mov
dec
outsb
dec
divps
mov
call
inc
pop
vandnpd
mov
ss
sub
push
lock
loopne,pt
cmpsl
pop
cmpsb
or
call
stc
lea
or
cmp
sub
mov
ljmp
out
int
push
rcll
and
xchg
jg
and
idiv
pop
movsb
mov
mov
jg
push
cld
adc
scas
jnp
xchg
sbb
push
lret
call
pop
out
pop
iret
jae
lods
cmpsb
dec
pop
xor
adc
or
lods
cmp
outsl
and
fsubrp
aas
xor
push
inc
jb
insl
negl
mov
cld
das
inc
pop
popf
push
arpl
cmovo
or
decl
push
imul
mov
mov
push
out
cmp
idivl
decl
jg
cwtl
mov
hlt
fists
jg
movsb
pop
jp
cmp
je
add
push
incl
insb
inc
cwtl
jne
stos
mov
dec
jns
inc
fwait
cld
dec
xlat
jp
jbe
sub
and
xchg
fstl
inc
lock
stos
shlb
aas
push
jle
mov
cli
shll
jb
ret
hlt
pop
sahf
xchg
push
cld
dec
daa
xor
loop
adc
xor
mov
mov
push
inc
add
xor
jg
adc
jg
xchg
test
pop
xchg
or
fxam
dec
pop
aas
jg
pop
push
sbbb
mov
leave
decl
fidivrl
inc
mov
add
mov
repz
lds
inc
fstpt
add
jmp
lds
lea
push
cmp
push
adc
push
fscale
ljmp
sub
adc
adc
push
push
insl
incl
or
jnp
mov
lcall
fcmove
push
aas
insl
addl
pop
aam
pop
adc
data16
and
sbb
call
jl
mov
les
lahf
sbb
inc
push
popa
or
push
sti
es
popa
mov
jp
xchg
jmp
shl
popa
lock
shrl
mov
jg
fwait
daa
sbb
lods
data16
adc
push
pop
pop
jmp
pop
lahf
dec
sahf
cmp
insl
and
std
arpl
jmp
and
gs
lock
push
fstpt
sub
stc
xchg
cs
cld
ja
jp
shl
je
jmp
mov
pushf
fstps
mov
fistl
test
xchg
push
psrld
movl
inc
push
es
xlat
mov
fistps
xor
dec
xchg
ljmp
flds
loop
sbb
jg
jecxz
inc
sbb
cli
iret
cwtl
hlt
add
xor
cmp
push
jl
or
push
fidivrs
out
xor
push
mov
xor
xchg
test
sub
daa
ficoms
cmp
xchg
xor
mov
push
out
int
inc
mov
mov
cld
ljmp
outsb
aas
xchg
inc
decl
inc
es
fcoml
lods
mov
xchg
mov
add
jg
movsb
mov
fs
inc
dec
xor
aam
and
pop
mov
sbb
adc
jecxz
in
xchg
test
jg
stos
call
data16
in
outsl
loopne
jmp
and
dec
sub
and
mov
mov
xor
pop
mov
lock
fwait
ret
push
pushf
std
ret
dec
loopne
pop
or
sti
std
sub
aas
cmc
popf
and
xchg
mov
cmp
ljmp
and
nop
and
icebp
in
hlt
add
or
or
aas
sbb
sahf
mov
stos
int3
or
push
mov
cmp
test
jb
outsb
cmp
and
stos
pop
call
adc
sbb
and
sysret
pop
divl
cld
dec
decb
xor
mov
sbb
mov
lahf
aas
cmc
filds
dec
mov
ud2
add
mov
test
dec
fdivr
incl
stc
hlt
push
shlb
adc
xor
xchg
xchg
nop
fcomps
adc
push
in
test
int
popf
mov
mov
out
dec
xchg
test
pushl
mov
scas
jnp
sbb
fdivp
sbb
shrb
nop
inc
test
call
cmp
inc
xor
call
pop
rcr
js
nop
outsl
cltd
stc
dec
ja
and
push
call
xchg
mov
sbb
adc
mov
mov
je
nop
pause
push
notl
and
int3
mov
inc
jbe
repnz
jmp
pop
movsl
int3
das
in
jge
out
pushf
out
add
sti
xor
insb
aam
dec
inc
test
cltd
stos
lret
das
mov
pop
cmc
jmp
inc
clc
lahf
xchg
xlat
imul
jle
pop
lcall
rorb
mov
in
ret
das
pop
clc
adc
pop
xchg
inc
mov
or
adc
cmp
xorb
std
xorl
pusha
std
ljmp
add
loopne
fldt
mov
adc
pop
mov
mov
jp
sbb
push
xchg
icebp
adc
xchg
xor
test
sbb
jns
int
pop
sub
fisttps
mov
icebp
pop
cmpsb
lret
lahf
test
fnstsw
sub
cmpsb
ja
fistps
sub
sub
cld
jo
cs
testl
add
cmp
mov
adc
adc
jg
icebp
fcmovnb
mov
cld
xchg
lcall
testb
in
mov
cmp
movsb
test
sub
dec
ljmp
jg
xchg
mov
mov
cmp
mov
pop
add
incl
xlat
dec
adc
pusha
in
sbb
addr16
cmc
lods
cmp
in
rclb
aas
sti
test
sub
jae
fnstenv
add
mov
mov
loopne
push
sub
lcall
mov
or
mov
dec
nop
leave
into
xchg
ja
add
mov
jecxz
cmp
mov
pop
testl
xchg
jl
inc
insl
loope
pusha
lock
mov
cwtl
cwtl
iret
and
daa
call
int3
call
lds
es
pop
pushf
adc
ret
rcll
sub
mov
aas
or
inc
mov
lahf
rclb
aas
incl
aad
jl
ljmp
mov
pop
cmpsl
adc
jbe
jg
gs
nop
cmp
pop
pop
pop
mov
xchg
stc
paddsw
loop
jae
in
jb
jge
and
stc
cli
inc
pop
cmpsl
dec
cmpsl
jmp
adc
mov
mov
lret
push
sbb
sub
scas
ljmp
push
jbe
inc
lcall
sbb
aas
lea
mov
incl
push
mov
aam
add
out
mov
rclb
aaa
mov
sti
enter
out
add
mov
sbb
lods
cmp
and
xor
mov
cmpsl
lcall
idiv
xor
pushf
lds
mov
add
popf
mov
stos
adc
mov
cs
icebp
cld
pop
movsl
jae
mov
dec
fsubs
sbb
icebp
call
xchg
jne
jp
ja
sbb
push
clc
call
das
xchg
lahf
ds
push
rcrb
mov
clc
andb
mov
sub
test
cli
dec
enter
je
stos
jb
jp
push
out
push
test
push
fdivrl
mov
jmp
mov
push
lret
mov
fwait
test
or
cld
das
decl
test
outsl
push
fcompl
or
mov
pop
lock
jg
ret
ljmp
lcall
and
jnp
xor
xor
call
scas
mov
aas
mov
cmp
cmc
mov
add
mov
pop
pop
lret
fsub
add
adc
ret
cmp
jne
sbb
adc
mov
lock
daa
decl
int
test
inc
mov
inc
mov
sbbb
inc
scas
mov
jecxz
incl
inc
jg
out
fidivl
leave
imulb
rcrl
insl
mov
loop
push
mov
movsl
mov
mov
jmp
or
jp
sub
lcall
flds
cs
clc
fbld
lahf
xchg
mov
packsswb
ret
les
mov
mov
and
cs
outsl
mov
fwait
ljmp
jp
shl
int
das
inc
sub
imull
pop
mov
rol
out
js
cmpsl
xchg
or
pop
pop
into
jne
insl
jne
pop
fmull
leave
les
pop
push
out
pop
fdivr
out
xchg
add
pop
or
dec
mov
dec
aas
cmp
incb
lcall
dec
sahf
sbb
xchg
pop
hlt
mov
loop
jno
or
xchg
cmp
add
incl
popl
cmc
testl
sub
incl
fiadds
push
jbe
aas
insb
repnz
or
arpl
mov
mov
call
aas
cmc
daa
lret
cli
jecxz
mov
insl
daa
aas
jg
cmp
xchg
sub
pop
sub
jmp
scas
sbb
inc
ffreep
ret
pop
cmp
inc
pop
dec
cld
das
pop
aad
icebp
stos
cli
push
inc
dec
push
pop
inc
add
mov
repnz
jle
xchg
movsl
mov
scas
fwait
xchg
push
iret
pop
mov
mov
sub
and
push
dec
inc
ret
incl
mov
push
inc
ljmp
mov
jg
pop
jecxz
lret
adc
push
sub
sar
push
sub
xor
jne
sbb
and
out
xor
incb
sbb
jb
inc
ja
loop
inc
mov
dec
sbbb
mov
mov
push
jb
fcom
daa
and
repnz
push
mov
shl
andnps
cmc
std
bound
push
xchg
call
inc
insl
and
shrb
enter
cmpl
subb
xchg
adc
in
out
pop
inc
jmp
push
mov
ret
fucomi
pop
subb
bound
dec
push
bound
arpl
pop
loopne
rcr
and
and
ljmp
test
lahf
sbb
cmc
pop
shl
inc
dec
mov
jne
je
push
inc
ljmp
sbb
mov
aad
jge
or
and
dec
push
cmp
jmp
sbb
mov
insb
jg
insb
mov
xchg
stos
jo
inc
jo
jle
cmpsl
imul
ljmp
loope
push
pushf
sub
mov
imul
sbb
mov
push
jg
loop
xchg
dec
aad
push
inc
jae
mov
clc
lcall
pop
sbb
cmp
mov
and
add
mov
pop
and
dec
mov
pop
outsl
add
movsl
test
xor
adc
das
in
lahf
add
cmp
incl
lods
xchg
ds
mov
lds
cltd
enter
icebp
adc
cs
std
out
aas
or
cmpl
sbb
jmp
push
jl
inc
repnz
sbb
cld
mov
movsb
lcall
mov
jno
and
je
mov
rclb
shrb
addl
clc
sbb
scas
xchg
repz
ret
jg
sti
mov
inc
gs
inc
fstpl
inc
and
aas
clc
pop
je
fists
cmc
lds
clc
pop
xchg
mov
cmp
dec
into
inc
push
std
rcll
stc
add
pushf
sub
and
aam
jmp
ss
idivl
aas
pop
pop
cwtl
jns
xchg
in
outsl
cmp
out
andl
cmpsb
aam
movsb
jmp
mov
xchg
dec
ljmp
les
cltd
and
add
lret
incl
aad
je
jp
xor
ss
lods
fbld
fisttps
ss
cmp
icebp
jg
and
cmp
add
shlb
inc
lods
sahf
or
dec
pop
or
lcall
jg
movsb
sub
mov
cld
sbb
push
adc
mov
jp
mov
inc
push
sahf
movsb
push
mov
loopne
je
sarl
daa
lods
and
jg
add
mov
xchg
mov
mov
je
adc
pop
insl
mov
pop
icebp
jl
and
and
movntps
add
push
sbb
and
mov
add
pushl
mov
push
adc
rorl
subb
mov
xor
fbld
adc
scas
add
jmp
cmp
int3
lcall
std
push
das
jmp
cwtl
shr
sbb
lea
dec
loope
clc
call
mov
jmp
lea
fwait
adc
xchg
cmp
jae
inc
stos
adc
ret
lock
xor
sub
or
lret
mov
xchg
lahf
mov
fisttps
add
outsb
cpuid
push
inc
push
cmp
adc
jmp
pop
cmpb
pop
stos
xchg
inc
mov
pop
sub
cmpl
scas
iret
dec
xchg
inc
xor
add
lret
mov
aas
stc
pop
xchg
jg
lcall
mov
inc
or
lcall
and
jecxz
les
jp
sub
je
push
imul
push
xchg
inc
rcrl
incl
repnz
or
std
push
or
popa
xor
popa
scas
call
pop
movsl
incl
and
xchg
xor
decl
das
jae
cld
addr16
mov
add
mov
cmpb
mov
ret
cmp
jmp
sub
push
push
xor
xchg
jp
js
mov
int3
shl
sbb
incb
decl
dec
fildl
test
dec
fisubrs
sub
outsb
jg
cld
call
and
pop
outsl
shlb
int3
push
fisubrl
xlat
in
addr16
xchg
nop
inc
xlat
sarb
call
mov
scas
dec
mov
xchg
lds
push
fldl
pop
pop
pop
dec
and
mov
cmp
jmp
das
lret
push
sbb
add
cmp
pop
add
pop
xchg
stos
mov
mov
lret
pop
adc
mov
movsb
push
int3
es
lahf
jb
cmpsl
incl
cld
lcall
pushf
sar
jmp
xchg
push
xor
mov
into
pushl
call
xchg
cltd
loope
jno
pop
sbb
or
mov
push
outsl
push
mov
sbb
ljmp
jno
cltd
lods
xchg
mov
add
push
call
clc
outsl
push
test
mov
sarb
or
pop
push
mov
xchg
jns
pushf
jp
sbb
push
or
inc
jnp
push
clc
pop
sub
xchg
inc
jnp
clc
dec
incb
adc
hlt
gs
dec
scas
sarb
filds
in
xchg
fidivrs
cld
das
push
std
xchg
dec
dec
xor
iret
pop
add
or
and
dec
pushf
add
mov
aas
add
inc
shlb
jmp
mov
lahf
and
stos
push
lahf
sbb
jmp
insl
dec
cmp
std
incl
xchg
mov
xor
xor
sahf
dec
movsl
fstpt
pop
enter
lock
loope
push
jecxz
movsl
in
cli
pushl
inc
cld
fwait
lock
or
stc
ret
popf
mov
lea
icebp
test
xchg
int
and
pop
pop
inc
clc
or
mov
rcll
xorl
or
movntq
fidivrl
sbb
mov
and
push
pop
pop
sbb
inc
data16
hlt
movsb
std
out
xchg
jg
push
lret
pslld
xchg
lock
push
sti
sbbb
mov
enter
dec
in
push
and
aas
aas
and
inc
and
hlt
lcall
sbb
xchg
mov
jbe
xchg
lret
sub
data16
loope
push
adc
ds
pop
clc
pop
and
mov
cmpsl
aaa
push
or
add
cmp
push
or
sub
pop
int
hlt
xlat
mov
pop
imul
pop
test
or
incl
inc
mov
and
sar
ljmp
xor
mov
mov
stc
fcomps
xchg
test
push
mov
pop
lahf
insl
lcall
mov
int
std
shll
fimuls
push
bound
xor
clc
lcall
les
leave
pop
xchg
in
ret
cmpsb
mov
xlat
or
orl
jne
push
xrelease
sbb
rcr
cmp
adc
xor
mov
cli
pop
and
push
and
push
sbb
or
pop
mov
mov
or
incl
adc
loope
ds
cld
jb
sar
xchg
sbb
enter
sarl
mov
mov
popa
push
pop
cmc
xlat
push
add
add
adc
mov
popf
xchg
insb
dec
stos
pop
and
fisttps
inc
adc
xchg
into
lea
call
sub
xchg
jb
pop
push
mov
jmp
mov
pop
fadds
mov
jmp
incb
pop
int3
xchg
int3
outsb
mov
mov
or
mov
mov
pop
adc
rcr
add
pop
pop
test
cld
pop
in
mov
call
mov
adc
test
icebp
call
mov
sahf
mov
cltd
dec
inc
fsubrs
xor
lcall
inc
add
adc
mov
adc
pop
xchg
fbstp
lcall
incb
out
shlb
js
lds
inc
pop
lcall
icebp
cmpsb
mov
pop
std
inc
and
cmp
lock
mov
pushl
pushf
cmpsl
jge
in
pop
ret
mov
dec
mov
repz
leave
incl
ret
push
loop
push
enter
cld
dec
inc
mov
leave
fcoml
out
mov
loop
inc
and
in
pop
xchg
jno
lahf
dec
in
jg
imul
dec
jnp
mov
mov
mov
or
push
lret
mov
icebp
mov
jne
bound
ljmp
daa
inc
push
test
dec
movsb
lods
lahf
test
stos
mov
int
leave
and
adc
lcall
decb
insb
in
jns
inc
or
and
out
mov
xchg
mov
mov
jmp
add
and
js
jne
cmp
int3
dec
add
xchg
mov
test
iret
xchg
incl
shrl
aas
pusha
add
or
mov
inc
pop
mov
jns
pop
lock
adc
push
pop
lods
pop
jnp
call
es
xchg
shlb
je
dec
mov
shr
jnp
stos
pop
and
addl
mov
lds
jmp
lea
stos
mov
aad
sbb
cmp
push
jae
mov
imul
inc
ja
jg
push
push
jbe
cmp
in
nop
mov
dec
jecxz
incl
stc
mov
filds
aaa
pop
sar
clc
dec
jecxz
jg
and
add
adcb
mov
mov
or
sub
clc
push
sbb
dec
push
sbb
std
ljmp
add
loop
rcrl
test
mov
ret
call
jmp
jae
test
mov
xchg
mov
mov
rolb
inc
stc
inc
call
mov
ljmp
mov
repz
push
scas
ss
outsb
into
pop
pushl
cmpsb
cmp
fisttpl
sub
xchg
adc
loopne
jnp
ja
mov
add
mov
aas
test
pop
aad
inc
movsl
cmp
or
lods
xchg
jae
pop
dec
jge
loope
movsl
add
cmp
lods
push
sbb
ret
mov
ffreep
pop
mov
mov
xchg
jp
mov
or
inc
leave
ljmp
push
xor
mov
pop
jns
jmp
push
or
ret
xchg
jb
scas
sahf
das
jl
test
loop
dec
jno
popw
adc
jecxz
call
pop
push
cmc
mov
shlb
pushf
mov
call
ljmp
inc
mov
movsl
sti
jno
dec
data16
stos
fwait
lods
mov
mov
test
out
dec
nop
ljmp
call
int
lock
sub
adc
mov
call
xchg
add
rcl
xor
loope
pushf
call
add
repnz
jmp
lcall
out
sbb
ret
loope
mov
cmc
out
jp
data16
jbe
add
cmp
cmp
adcl
cmp
or
push
hlt
push
int3
cwtl
mov
std
jg
icebp
movsb
out
mov
call
push
lcall
jecxz
jge
incl
xlat
mov
cs
lret
subb
call
dec
sysenter
xor
jb
mov
pop
dec
inc
iret
jno
sub
lcall
mov
in
test
jo
iret
xor
test
mov
daa
call
sbb
mov
repnz
mov
cmp
les
enter
mov
insl
stos
andl
jo
xchg
jnp
in
lret
cmp
xor
add
and
lds
fmull
rclb
cmpb
mov
jp
sub
mov
and
loop
in
repz
stc
lcall
xor
data16
cmp
dec
cmp
sub
cli
and
fchs
or
stc
jae
pushl
mov
add
or
movsb
or
mov
cli
sub
dec
test
decl
inc
cmpsl
aam
xor
cmpb
movq
dec
sbb
add
push
xor
lcall
inc
jg
call
pop
mov
fisubrl
add
jne
icebp
arpl
outsb
pushl
cltd
dec
push
out
dec
decb
adc
into
jle
lea
sub
xchg
adc
fcomip
decl
and
je
sub
cmp
test
push
fcmovnu
ja
scas
sbb
loop
in
xor
in
repz
and
popa
int3
roll
jno
push
add
dec
fcomip
jmp
pop
fwait
push
les
in
push
scas
dec
outsl
jge
pop
cmp
scas
loop
mov
jmp
mov
stos
gs
and
movsl
cmc
sub
mov
sub
mov
jmp
pop
xchg
cmp
mov
xor
inc
push
insb
dec
push
gs
push
lods
rol
pop
out
aam
ljmp
imul
test
and
aam
jno
rcrb
icebp
mov
out
decl
sti
or
jb
push
push
add
mov
mov
rcll
sahf
rol
add
cmp
call
cmp
dec
push
pop
movsb
mov
nop
in
push
add
jmp
adc
mov
jg
push
clc
call
sbb
lods
xor
inc
int
xor
cmp
call
xchg
pop
push
mov
jae
addr16
test
jbe
popa
loop
and
stos
loop
add
push
and
inc
in
in
mov
pop
push
sbb
clc
mov
mov
jbe
shl
adc
push
mov
jg
cld
cmp
inc
lea
cld
cltd
iret
aam
push
repnz
enter
xlat
inc
mov
ffree
js
and
cs
testl
jns
cmp
or
fisttps
and
aas
lcall
pop
rolb
fsubp
fsubs
lret
push
andl
fs
xchg
clc
pop
mov
jmp
pop
inc
pushl
xchg
std
dec
imul
das
cmp
or
aas
jg
lahf
push
xchg
add
loope
andl
dec
pop
xchg
mov
fdivrp
lds
jo
cmc
scas
js
jg
sbb
repnz
cmp
out
xchg
jmp
mov
pushf
xchg
or
mov
jmp
inc
sahf
adc
dec
or
xchg
jns
dec
ss
adc
mov
jg
test
or
nop
jae
cmp
jmp
jp
sub
js
addb
inc
push
ds
add
pushl
sbb
inc
fcmovnbe
andl
push
movsl
cmc
mov
xor
lahf
adc
pop
sbb
and
inc
xor
push
fistpll
pop
test
jg
or
dec
das
lods
ret
cmp
dec
fistps
clc
pop
jbe
pop
sar
call
movsb
dec
jnp
jbe
dec
test
jg
or
testl
adc
scas
iret
addr16
xor
sbb
shrl
ljmp
out
add
jecxz
cmp
incl
std
data16
xchg
ret
scas
jae
sub
ficoml
adc
adc
mov
xor
or
push
lea
fists
jmp
sarl
mov
pop
sbb
int3
in
cltd
jecxz
mov
jne
ljmp
or
test
scas
sahf
jmp
jmp
outsl
mov
mov
push
mov
addr16
push
mov
pop
push
push
daa
cmpsl
arpl
jp
mov
and
dec
ret
aam
loopne
aas
xchg
mov
ret
dec
pushf
out
sub
out
ja
insl
mov
lret
sub
ret
mov
data16
into
movsb
scas
popa
mov
out
test
in
mov
lods
in
inc
cld
data16
push
cltd
mov
jg
movsb
adc
loope
in
in
xor
call
adc
and
push
and
aad
cmpsb
mov
call
lret
leave
xchg
fs
pop
ficompl
fldl
pop
dec
cli
mov
ret
mov
sub
lea
sbb
mov
or
pusha
clc
mov
in
sbb
pop
scas
sub
pop
adc
popl
add
dec
mov
adc
incl
pop
adc
xchg
mov
cmpsl
mov
add
pop
mov
fiaddl
jge
ret
push
mov
incl
cld
dec
loope
xor
jp
xor
test
xlat
test
jae
or
call
push
incb
scas
cmp
pop
call
mov
inc
xchg
call
xor
notl
insl
fcoml
cmp
push
xchg
stc
bound
xorl
pop
movsb
decl
loopne
pop
sub
bound
jmp
jmp
mov
adc
test
bound
dec
enter
mov
ret
in
in
ljmp
pop
jno
stc
addr16
sbb
int
pop
shrl
loopne
lds
add
ljmp
mov
push
outsb
jge
outsb
lret
roll
xor
out
lcall
cli
and
int
push
std
dec
pusha
pushf
mov
aad
incl
jl
lods
in
mull
jle
xchg
xchg
mov
dec
pop
xor
jns
loopne
in
pop
loopne
jge
xor
add
and
enter
sbb
rcrl
dec
jecxz
loopne
arpl
shr
cmp
xchg
jbe
call
das
xchg
jae
mov
lock
aaa
aam
xchg
mov
sarl
ljmp
aas
pusha
mov
mul
into
mov
addr16
shlb
incl
loope
std
cmp
jp
mov
in
sbb
mov
ljmp
insl
mov
xchg
call
out
loopne
cltd
int
jno
outsl
sub
sahf
je
sbb
sbbb
jae
fdivr
das
cli
pushl
in
mov
pop
lea
stos
and
imul
dec
push
dec
ficompl
pop
mov
imul
lock
mov
or
push
out
inc
insl
repnz
and
lret
fisubrs
mov
test
lcall
aas
mov
dec
hlt
call
cli
mov
inc
enter
cmp
mov
loop
ds
add
fidivl
rep
sbb
dec
cld
incl
pop
popa
rcrl
mov
cmpsl
outsl
sbb
js
xorl
sahf
mov
mov
in
ja
lcall
pop
out
mov
jno
pop
shl
add
lret
cltd
mov
pop
cltd
inc
jp
cli
call
ds
pop
push
ja
lcall
mov
pop
pop
sub
out
outsl
cmc
orl
lods
jp
push
decl
pop
popf
mov
iret
push
xor
sarl
pop
cs
lcall
cmp
outsb
sbb
hlt
out
push
inc
jle
jae
rol
lcall
mov
cld
roll
xchg
inc
jne
data16
push
lock
inc
cmp
hlt
push
dec
inc
adc
hlt
xchg
pop
js
xchg
cmp
call
test
pusha
aas
fnstenv
pop
push
sub
mov
sar
adc
int
stc
mov
pop
pop
loope
jg
mov
cmp
inc
test
pop
cmp
ret
inc
and
adc
stc
shlb
cld
lds
dec
enter
ljmp
ljmp
clc
dec
dec
in
dec
fnstcw
cmpsl
in
sbb
pop
push
rcr
lcall
decb
xlat
mov
loope
cltd
lcall
icebp
mov
mov
dec
cmpsb
jmp
lods
sub
pop
movd
add
aad
loop
pop
pop
xor
clc
ljmp
nop
decl
pushf
pop
jnp
addb
push
lock
inc
stos
dec
fs
or
pop
push
mov
mov
test
cwtl
and
and
dec
in
mov
jmp
mov
shlb
inc
mov
imul
in
dec
cmp
sub
and
mov
pop
outsl
clc
jmp
lods
lret
pop
inc
xchg
xchg
xchg
cmp
das
dec
shrl
adc
jmp
push
clc
jge
inc
cli
test
jno
lds
rorl
inc
hlt
mov
in
sti
popf
push
inc
ljmp
dec
dec
cs
or
addb
fcmovu
ficoml
adc
js
mov
xchg
mov
lret
ds
icebp
jg
out
mov
call
and
xchg
lods
out
xchg
inc
pop
dec
pop
loop
stos
stc
lods
mov
dec
mov
std
fwait
cmp
push
sub
sbb
shl
xor
das
rorl
push
mov
sbb
neg
adc
movsb
cld
mov
xchg
adc
cmp
sub
lcall
cs
cld
int3
mov
adc
cmp
clc
into
push
sbb
sub
scas
cs
jb
fbstp
call
xlat
aad
popf
call
inc
pop
sbb
pop
mov
movsl
dec
outsb
jg
decl
insb
add
stc
fistps
dec
adc
xchg
in
rclb
repz
jo
mov
daa
dec
or
cltd
mov
imul
scas
sbb
sbb
rcr
mov
call
loopne
mov
push
mov
xchg
mov
mov
inc
dec
dec
push
mov
xor
inc
or
mov
sub
and
inc
call
test
add
daa
call
fdivrp
inc
mov
xor
test
jbe
pushl
and
adcb
mov
mov
std
sbb
jg
out
mov
cld
and
dec
rcll
fs
mov
out
xchg
inc
cmpsl
out
xchg
mov
stos
push
call
mov
incl
mov
mov
pop
stc
and
mov
mov
aaa
xchg
mov
xchg
pop
pop
jp
pop
and
cmp
mov
push
adc
pop
pushf
jmp
daa
les
and
in
pushf
les
lcall
jne
divl
repnz
push
scas
shlb
xlat
xchg
in
dec
pushf
jmp
icebp
mov
xchg
not
mov
adc
mov
jo
addr16
fsubr
mov
cmpsb
mov
cld
mov
sarl
xlat
fiadds
mov
out
push
lcall
cmc
xor
pushl
dec
pop
imul
cli
cmp
mov
aas
lret
cs
fcomps
lds
aad
mov
lods
or
icebp
clc
incl
and
mov
rcrb
pop
push
xor
pop
negl
lahf
mov
out
add
push
adc
push
cli
in
inc
jge
lods
and
arpl
inc
jmp
sbb
outsl
incl
out
shrl
add
sahf
mov
push
test
dec
mov
std
pushl
mov
faddl
xor
test
mov
cmp
dec
stos
inc
movsl
fs
cltd
int
cs
or
pushf
cmp
mov
pushf
test
sarl
sbb
pop
cmp
call
loope
mov
in
jns
scas
jmp
scas
add
enter
lahf
lret
jg
icebp
cli
mov
mov
push
pop
fsubl
sbb
mov
mov
popa
cmp
pop
icebp
lcall
test
adc
jns
inc
xor
jnp
jg
call
dec
cwtl
fdivr
lods
mov
xor
mov
push
in
sbb
inc
adc
sub
enter
lcall
int3
out
call
adc
sahf
jp
push
sbb
mov
sahf
jmp
jb
xchg
cmp
sbb
mov
sub
std
loopne
sub
inc
lds
lcall
xchg
add
lret
mov
mov
add
pusha
popa
mov
xchg
push
pop
cmc
jmp
mov
push
stos
mov
pop
pop
fcomip
hlt
movsl
add
dec
push
mov
pop
icebp
les
in
xchg
jbe
icebp
scas
dec
xor
xor
xor
decb
inc
enter
xchg
adc
xchg
pop
and
in
pop
lahf
je
sarb
jns
sub
call
mov
mov
ficoms
out
sbb
xlat
and
mov
xor
popa
aas
xor
jmp
popa
sbb
mov
aam
xchg
sub
enter
lods
inc
ret
loope
mov
sbb
repz
cmp
xchg
xlat
mov
mov
sarl
mov
in
xchg
shll
mov
incb
xlat
jns
cltd
cmp
enter
cmpsb
insl
ret
push
faddp
daa
jo
lea
repz
clc
outsl
jl
sbb
dec
dec
xchg
mull
pop
in
inc
std
lods
adcl
jmp
sbb
fimull
das
push
mov
frstor
lock
iret
push
iret
pop
arpl
imul
stos
out
mov
xor
mov
ljmp
lock
sub
cmpsb
sbb
fildll
pop
scas
add
in
jns
mov
sub
int
pop
dec
add
jg
insl
sbb
mov
jmp
cmc
mov
mov
ljmp
sub
mov
js
leave
aaa
lret
mov
outsl
or
sahf
inc
loopne
decl
jbe
xchg
je
inc
push
insl
lret
in
pop
xor
leave
cmp
mov
fisubl
ljmp
cmp
cmp
ljmp
add
xchg
aaa
jmp
movsl
mov
shrl
sub
pushl
push
xor
mov
es
mov
bound
in
mov
jle
lds
movsl
adc
pushl
scas
inc
mov
mov
shr
jg
std
and
mov
jns
lcall
movsb
mov
test
aaa
inc
xchg
push
mov
divb
fcos
mov
mov
jne
stos
add
xchg
inc
stos
divb
sti
pop
fwait
pop
cmp
add
fsubs
jecxz
xchg
cmp
dec
daa
cli
pushl
xchg
xor
mov
mov
cmpsl
push
lahf
cmp
rcrb
jo
add
call
insb
ret
and
aam
or
cmpsl
ljmp
and
jnp
test
cli
pop
or
mov
stos
fidivs
mov
mov
icebp
push
mov
icebp
adc
mov
outsl
inc
clc
pushf
and
add
scas
rolb
or
insb
sahf
xchg
lcall
pop
sub
xchg
cmc
inc
mov
stos
inc
fistl
push
xchg
lds
je
jnp
ljmp
es
in
adc
and
cmp
xchg
inc
cmpsb
jb
inc
lds
nop
popa
xchg
lods
nop
jg
loopne
fmull
cmp
lods
cwtl
jb
lcall
mov
mov
sub
dec
test
dec
ss
jle
pop
cs
cli
mov
jmp
ficoml
sub
cli
leave
dec
cmp
icebp
test
sar
ljmp
out
xor
ret
mov
out
push
jle
imul
xchg
int
repnz
out
enter
add
pushl
pop
add
test
mov
fists
adc
fwait
or
sbbb
sarl
fisubl
cmp
xor
ja
addr16
insb
cs
push
mov
push
or
dec
popf
fwait
mov
aas
sbb
rol
mov
outsb
pop
or
and
cwtl
mov
inc
pushl
dec
or
dec
adc
repz
and
es
loope
xor
out
dec
cmp
adc
pop
sbb
and
xchg
sub
cmp
enter
pop
jle
adc
dec
fstpl
xor
mov
rcll
and
call
adc
sbb
shlb
xchg
adc
in
test
dec
mov
sub
or
fmull
inc
fcomps
rolb
xchg
incl
adc
hlt
int3
add
jl
mov
sub
inc
add
lret
xchg
jmp
cmp
rcll
inc
es
dec
mov
and
daa
xchg
jge
push
in
loope
out
jne
repnz
ret
mov
aad
mov
jo
icebp
cmp
cld
std
lock
and
int
xchg
push
mov
pop
xor
cwtl
and
mov
test
into
rolb
push
fmull
lret
pop
jp
mov
mov
in
sbb
and
incl
jl
lcall
add
adc
imul
adc
xor
lcall
decl
pop
push
mov
iret
fisubrl
and
push
and
decl
test
aam
popf
adc
sub
dec
mov
jp
inc
xlat
inc
push
call
xchg
lock
les
pop
and
dec
je
stc
dec
push
pushl
mov
mov
ljmp
and
jno
sahf
jg
daa
std
sub
pop
push
push
unpcklps
cmp
dec
push
dec
data16
and
lcall
add
xor
push
movsb
dec
jmp
sub
lcall
cmp
pop
notb
in
ror
add
xchg
das
lret
dec
int
push
cs
jmp
jo
lds
aad
cmp
and
cmp
cmpsb
inc
fiadds
fcoml
jp
push
call
add
xchg
popf
cmp
mov
add
mov
js
adc
sahf
lods
jg
cmc
lcall
sub
push
shll
push
pusha
mov
test
decl
scas
dec
hlt
mov
mov
jle
stos
leave
pop
insb
inc
dec
dec
mov
dec
inc
push
add
incl
cld
or
shlb
cli
aaa
aam
or
dec
xchg
fidivrl
sub
stos
jg
jp
fcoml
lret
cmpsb
int3
repz
or
sbb
mov
inc
movsl
imul
popa
dec
clc
mov
js
ljmp
push
xchg
xor
push
cmp
cmpsl
sub
movsb
insl
push
loope
cmpsl
add
add
loopne
jl
jg
mov
ret
and
pusha
jge
adc
push
mov
xor
ret
hlt
mov
xor
incl
scas
jnp
and
jno
dec
xchg
xchg
pop
add
or
push
stos
loope
lahf
jp
push
lock
jg
scas
repz
inc
ja
test
push
xorb
in
pop
gs
sbb
sub
lcall
ret
pushf
dec
add
push
jmp
cli
push
lret
mov
int3
mov
test
idivb
stos
pop
je
or
outsl
sub
fs
ficoml
lret
in
sbb
mov
push
aam
dec
scas
mov
mov
out
lea
push
xor
and
ljmp
subl
jle
or
fldt
outsb
mov
flds
add
fs
decl
movl
sub
mov
dec
dec
call
testl
test
pop
mov
cmp
movsb
jp
mov
lcall
popf
sarl
inc
cmp
js
dec
mov
and
push
ret
push
into
ret
fiaddl
jno
decl
jbe
lahf
nop
push
dec
xor
lds
pcmpgtd
mulb
xor
jb
mov
push
pop
push
ljmp
rcr
jo
or
lret
popa
mov
pop
mov
fwait
loopne
outsb
std
call
fisubrs
dec
stos
popa
mov
jmp
mov
xchg
pop
sbb
mov
aas
xchg
or
pop
dec
dec
leave
ljmp
and
mov
mov
out
and
jp
jns
popa
inc
rorb
push
fimull
or
mov
gs
jno
cmp
scas
stos
mov
cmp
fmulp
mov
push
xlat
ja
shrb
pop
dec
adc
fistpl
lcall
mov
cmp
ds
sarb
jp
mov
adcb
int3
icebp
or
adc
stos
js
setne
in
test
xchg
and
mov
enter
int3
jg
or
jl
cmova
mov
xchg
mov
es
mul
sbbl
dec
add
out
fdivrs
xor
es
mov
mov
enter
ret
add
inc
push
mov
call
cmc
mov
jmp
push
mov
bound
xchg
mov
mov
ret
popl
inc
mov
std
sahf
mov
pop
jae
cwtl
inc
adc
outsl
pop
call
inc
inc
bound
mov
je
aaa
std
pushl
xlat
lret
mov
popa
jnp
fs
ja
jb
lret
jo
pop
jne
push
clc
mov
push
daa
add
jb
xor
inc
cmpsb
push
cmpsl
or
pop
data16
dec
insl
push
test
lock
jg
dec
xor
stc
out
int3
loope
mov
push
pop
mov
iret
lret
rorb
push
adc
push
mov
mov
icebp
pop
es
decl
negl
or
push
inc
aaa
arpl
or
shll
aas
mov
adc
and
jmp
lahf
pop
fwait
daa
pop
out
aad
mov
jns
das
data16
cwtl
cmpsl
call
cmc
dec
sub
lahf
xchg
lret
decl
std
mov
jmp
notl
sub
test
test
mov
ljmp
rcl
cs
notb
loope
cmc
push
push
mov
mov
out
nop
sti
jg
outsb
in
jl
inc
daa
loope
xor
cld
iret
inc
sbb
cmp
jmp
out
les
js
pusha
cld
mov
pop
lahf
cmp
sarl
dec
fidivrs
cmp
cmpsb
and
imul
sub
fmulp
jle
decl
adc
aam
xchg
mov
push
and
adc
in
sbb
mov
jg
pushf
inc
aas
aas
jno
xor
cmp
into
or
insb
lds
dec
lds
mov
icebp
call
cmp
xor
dec
mov
pop
mov
mov
aaa
cld
decl
jp
mov
aam
lods
pop
sbb
mov
fdivr
lcall
loopne
into
lret
xchg
clc
sbb
pop
inc
xor
out
aas
arpl
pop
inc
xlat
mov
jmp
gs
cmp
sub
mov
or
xor
subb
popf
pop
repnz
cmp
xor
mov
imul
testb
mov
push
outsl
cli
out
cli
out
push
push
mov
outsb
test
addr16
pushl
push
adc
push
add
aad
lcall
mov
sbb
js
pop
insb
push
dec
addr16
stos
pop
sub
push
jnp
rcrb
addr16
dec
cmp
sbb
and
xor
push
jb
loope
push
adc
or
jge
xchg
dec
std
jmp
fstpt
xor
pop
imul
and
xor
mov
mov
stos
and
mov
repz
rcrl
les
sub
sub
lds
mov
in
ja
jb
aam
mov
add
mov
aaa
mov
adc
inc
cmp
inc
bound
mov
int
aas
cmp
iret
push
nop
mov
test
aaa
lods
int
push
ret
mov
addr16
sbb
inc
dec
mov
pushl
cmp
aad
pop
mov
sbb
add
mov
into
push
out
data16
mov
push
sub
imul
sti
mov
orb
leave
adc
mov
popf
ret
xor
cmp
je
xor
jecxz
lcall
push
pop
pusha
aam
pop
testb
es
xchg
psllw
incl
mov
nop
dec
xchg
mov
mov
outsb
xchg
imul
lods
out
decl
fsubl
loopne
jo
scas
mov
movsb
push
cld
push
int
es
lea
pop
pushf
or
pushl
mov
aas
mov
sbb
aad
sbb
ss
pop
sar
ljmp
rorl
adc
out
jg
inc
ret
inc
push
fwait
xchg
inc
sbbb
xlat
and
sub
dec
lret
stos
arpl
inc
rorb
mov
in
test
cmp
lcall
dec
into
dec
fadd
push
sbb
aaa
xor
fbstp
repz
cmp
inc
xor
call
mov
cmp
fwait
lods
xchg
cmpsl
cld
orl
fisubl
and
pop
dec
mov
pushl
adc
ret
aas
sbb
jns
inc
in
or
inc
scas
scas
mov
push
and
push
inc
xchg
mov
clc
lcall
pop
mov
mov
test
loop
xor
aad
xor
icebp
mov
push
sbb
lahf
xlat
dec
jmp
pop
movsl
out
fidivrl
lds
cld
outsl
and
pop
push
or
out
stc
je
incl
jbe
gs
sub
mov
in
add
std
mov
xchg
jno
aad
sbb
addb
outsb
pop
sbb
loopne
jg
mov
pxor
popa
and
decl
xlat
shr
aas
test
push
xchg
push
dec
add
jle
xor
loop
aam
dec
dec
es
mov
pop
push
sar
xor
mov
dec
fbld
cltd
pop
aam
sbb
pushl
adc
push
mov
popa
in
aam
or
fsubs
fs
out
xor
aas
push
push
pop
jno
push
scas
mov
ljmp
inc
inc
push
xchg
rcrl
lds
aas
fnstsw
mov
sbb
loopne
aas
scas
mov
dec
adc
jmp
push
jge
std
scas
out
cli
scas
fsubl
add
inc
inc
adc
or
clc
sub
cmp
adc
repz
and
decl
add
mov
stc
mov
xchg
dec
mov
jns
test
sti
ja
inc
aas
cmp
cmp
xor
mov
clc
fs
call
push
aas
dec
sbb
add
leave
xchg
fisttps
lods
fucomip
loope
xchg
cmp
xchg
sbb
mov
fdivl
mov
xor
icebp
aas
clc
movnti
mov
mov
pop
nop
ljmp
std
cmp
mov
pop
lahf
jg
dec
mov
jmp
out
or
and
and
mov
imulb
jno
repnz
fstpt
or
testl
loopne
lcall
jnp
aas
adc
jl
add
mov
in
dec
cmc
dec
andb
or
lcall
pop
and
lods
dec
cmp
push
cmpsb
pop
dec
and
jg
inc
test
lds
xchg
cmp
xor
aaa
jne
mov
testb
push
adc
cmp
add
sbb
stos
bound
mov
cwtl
rcl
adc
pop
fisubl
mov
stc
mov
jg
jb
and
decb
test
xchg
cs
shl
jl
add
inc
cli
or
decl
jno
push
int3
bound
addl
push
sbb
pop
jmp
pop
inc
lahf
mov
lods
add
and
into
dec
leave
movb
std
bound
push
shrl
jnp
or
in
hlt
jg
mov
mov
jle
xor
sar
lods
jnp
insb
in
jb
fistpl
inc
jnp
mov
and
jle
ffreep
rep
int3
lret
or
mov
aas
cs
std
pop
out
cs
incl
sub
fisttps
mov
lret
lahf
mov
mov
pop
bnd
mov
xor
jo
push
mov
in
xchg
inc
lcall
out
popf
xchg
cltd
push
jb
movsl
pop
sbb
lcall
jbe
mov
mov
cmpsl
scas
xor
inc
lods
les
cld
incl
idivb
push
mov
iret
insb
jmp
call
lods
add
and
fs
pop
cmpsl
mov
aas
cmc
adc
ret
sub
push
jmp
pop
aad
cmp
dec
pop
int
xor
add
movsl
into
aam
int
lock
jle
xchg
mov
lcall
jecxz
xchg
movsl
cltd
pop
xlat
or
dec
add
or
sbb
lcall
loop
push
test
or
ljmp
push
sar
and
pop
popa
ljmp
push
mov
insb
dec
sub
mov
xchg
bound
mov
addr16
pop
add
ret
outsl
fimull
into
mov
incl
cld
lret
xor
push
mov
pop
push
xorb
pop
mov
loope
pushl
out
sub
in
stos
mov
mov
jmp
push
je
add
call
adc
mov
sti
ja
cmp
fsubl
dec
incl
sarb
push
insl
dec
in
xchg
fisubrl
sbb
das
scas
mov
mov
cmpsb
aaa
loopne
xchg
loope
sub
fadds
xor
decl
nop
push
push
dec
jmp
subb
pop
jp
mov
or
hlt
jg
xchg
dec
mov
iret
jo
mov
popa
pop
xchg
mov
incl
add
adc
popa
imul
sub
jae
notb
cmp
jmp
mov
dec
stos
jmp
mov
cmc
sti
mov
push
push
or
xchg
fwait
ljmp
mov
ss
hlt
shlw
loop
out
push
mov
std
push
jmp
mov
loop
mov
test
into
dec
cwtl
std
mov
incb
into
inc
mov
jmp
dec
jne
lahf
sub
cmp
push
inc
sub
mov
mulb
mov
adc
imul
fwait
mov
cmp
sbb
insl
pop
enter
int3
lahf
cld
add
add
incb
ja
insl
in
sub
fbld
add
sub
in
push
les
adc
jp
push
jge
inc
mov
movsb
jl
ficomps
lahf
popf
lods
adc
outsl
in
lret
push
daa
adc
sub
pusha
fldenv
fdivr
xor
mov
cmp
addr16
scas
sarl
and
and
ljmp
daa
es
lcall
call
sti
mov
rcll
outsl
push
mov
inc
dec
pushf
mov
lea
dec
push
cwtl
aad
push
aaa
jp
dec
push
xchg
in
mov
sub
add
enter
loopne
lcall
jns
or
inc
adc
fisubrs
lcall
cmpsb
mov
incl
arpl
scas
sub
std
sub
sbb
xor
or
xchg
outsb
std
dec
lahf
movsl
xchg
js
jmp
cmp
fldcw
and
test
dec
push
sti
ror
push
shlb
ljmp
lds
aam
loopne
adc
testl
imul
enter
mov
jg
cwtl
push
push
adc
pop
xchg
adc
std
cmp
iret
pop
pop
xchg
fmuls
cwtl
push
lock
push
mov
jo
cmp
nop
xchg
dec
xchg
mov
rcrl
aas
ljmp
pushf
xchg
xor
ds
jle
adc
pop
rorb
adc
nop
push
inc
or
push
push
dec
ret
in
dec
es
decl
mov
cs
dec
pop
std
push
aad
pop
clc
xor
dec
out
fildll
adc
jg
pop
data16
fsubrl
insl
or
cmc
icebp
xchg
xchg
add
je
pop
push
add
sub
mov
cmpl
movsl
push
fdivl
dec
cld
adc
sbb
into
inc
movsb
adc
aad
inc
faddp
mov
bound
inc
fdivl
mov
cmp
clc
inc
dec
push
dec
daa
mov
test
jge
mov
sbb
aad
mov
jns
mov
mov
bnd
sbb
mov
sub
incb
ja
push
cmp
push
push
pushl
mov
cmp
or
adc
push
mov
incl
lea
rcll
sbb
mov
in
cwtl
loope
mov
xor
add
clc
or
dec
arpl
jnp
cmpsb
mov
lds
es
clc
ljmp
sub
cmp
jmp
popf
jmp
fcomip
mov
out
mov
pop
mov
int3
pushf
rcll
sbb
or
xlat
mov
and
cmp
mov
shrl
xsavec
xchg
imulb
inc
call
pop
jle
arpl
nop
icebp
shrb
decl
or
push
outsl
add
jl
js
je
decl
jp
leave
adc
idiv
popf
das
xor
repnz
jmp
ja
clc
stos
cs
cmp
inc
or
jge
inc
and
xor
add
jmp
scas
cmpsl
imul
inc
loopne
iret
xchg
pushl
jb
leave
sbb
xchg
ret
bsr
out
pop
stc
push
dec
mov
add
inc
push
push
pop
mov
xor
mov
mov
push
outsl
mov
mov
and
out
orl
cli
push
push
lret
mov
mov
das
adc
ret
out
xchg
std
push
push
leave
dec
sbb
cmp
cs
addl
lahf
push
std
andl
ss
cmp
add
faddl
dec
leave
repz
scas
mov
sbb
jg
sbb
xor
adc
sbb
icebp
fdivrs
mov
in
sub
rorl
outsl
push
clc
cmovge
out
adc
mov
call
mov
push
mov
mov
sbb
dec
push
lahf
pusha
cltd
movsb
mov
mov
call
mov
pop
arpl
mov
adc
out
push
push
and
jp
sub
decl
push
insl
int3
bound
xor
mov
ja
mov
sbb
decl
lret
fwait
add
and
sti
scas
sti
int3
das
incl
add
dec
js
push
adcl
add
push
ret
cli
jmp
inc
adc
aad
ljmp
pushf
sbbb
or
gs
out
lods
nop
lret
daa
pop
and
cmp
andb
je
outsb
push
cld
incl
xor
repz
push
out
push
xchg
iret
mul
cmc
sbb
enter
incl
cwtl
dec
scas
cmpsb
test
ret
imul
adc
and
add
cmp
stos
and
jae
xor
pop
out
xor
mov
xchg
inc
add
cltd
aam
repnz
or
out
in
cmp
cltd
popf
fistl
mov
pop
dec
mov
ret
loop
sahf
push
xor
jmp
cmp
sub
inc
and
cld
insl
mov
xchg
sbb
jnp
sbb
decl
inc
std
cld
cmp
adc
push
sahf
adc
popa
das
test
or
sub
call
loop
xor
sarb
or
cmp
in
shll
or
xchg
inc
hlt
movl
jg
mov
and
push
cltd
and
dec
insl
xlat
add
idivl
push
cmp
cmpsl
gs
or
push
xchg
push
testl
jns
pop
call
cld
push
add
dec
aas
pusha
dec
add
xor
pop
lods
xor
sar
and
andb
push
decl
aaa
js
push
cmp
subb
mov
aaa
push
int3
repz
mov
daa
rcrl
pop
push
call
out
loope
dec
fs
cwtl
add
pop
fistpll
jae
mov
mov
mov
mov
clc
out
xor
cmp
clc
movsl
fnstsw
add
enter
cmpsb
mov
fisttpll
ljmp
mov
mov
mov
adc
jno
fsubrs
or
call
xchg
mov
call
ret
pushl
iret
test
les
imul
mov
push
decl
std
pop
push
sub
mov
pop
sbb
jbe
test
mov
add
sub
mov
fwait
hlt
popl
jecxz
jg
in
pop
pop
xor
inc
xchg
les
or
jg
pop
pop
xchg
push
bound
fnsave
mov
push
pop
dec
pop
adc
dec
push
push
pop
push
out
sub
addr16
pop
loopne
mov
mov
lret
aas
sbb
inc
push
das
jbe
incl
pop
push
sbb
clc
das
bound
jg
pop
or
arpl
iret
incl
inc
xor
int
add
adc
add
cld
outsb
xchg
idiv
push
mov
inc
jno
sub
inc
pop
sbb
push
je
sbb
jo
push
xor
xor
cmp
sbbl
les
sti
and
into
jg
incl
push
lock
int3
and
movsl
xchg
inc
adc
setb
notl
sub
jg
push
dec
xchg
add
lock
arpl
ds
testl
mov
call
incl
subb
jg
cmpsl
dec
enter
add
add
arpl
or
clc
inc
addr16
push
test
or
mov
aad
or
clc
call
add
test
stos
dec
xchg
sbb
adc
sar
add
out
jg
cmp
xor
jmp
shl
dec
jg
es
inc
cmpsb
dec
xchg
les
ljmp
repnz
icebp
shll
sahf
cltd
or
leave
xchg
orl
ljmp
jle
cmp
insl
lret
lret
mov
in
xchg
rcr
xchg
xor
decl
scas
add
mov
arpl
std
cmc
dec
pop
cmp
mov
je
out
cltd
add
data16
incl
cld
lcall
adc
mov
xchg
stc
aas
xor
das
cmpsb
lock
or
data16
jno
dec
push
mov
std
inc
jg
and
enter
shl
mov
sub
rcrb
decl
inc
mov
cli
mov
fabs
jg
call
xor
loop
xorb
cli
ljmp
jg,pn
xchg
jge
out
inc
cmp
rcrl
ljmp
ss
daa
mov
pop
aas
loopne
cmp
sbb
pushl
inc
aad
lahf
fwait
sar
sub
cmp
loop
dec
mov
mov
movb
sub
jg
jnp
mov
shrl
fimuls
faddl
decl
lds
pop
push
mov
lcall
aam
inc
nop
xchg
mov
push
pusha
jmp
or
inc
stc
lahf
testl
xchg
aas
push
decl
iret
and
sub
pop
jmp
pop
jae
movl
int3
hlt
adc
jg
gs
jg
movsb
mov
and
js
inc
adc
rcll
push
dec
fisubrs
pushf
pop
out
ljmp
jno
sahf
and
js
shll
mov
lods
arpl
int3
les
add
call
xchg
jl
sbb
mov
xor
in
xchg
sbb
hlt
sub
pop
and
call
push
and
pop
fisttpl
cmc
mov
sub
adc
pop
add
push
mov
push
xchg
jne
jae
dec
je
hlt
int3
fsubrl
lcall
mov
adc
cmpsl
push
enter
push
add
jns
mov
ret
mov
popf
incl
out
mov
xor
push
movsl
jnp
adc
rcr
jmp
jmp
lods
test
add
loopne
insb
xchg
ret
and
sub
loop
mov
aaa
mov
ljmp
stos
push
sub
sub
mov
inc
mov
andl
cmovs
je
adc
pop
jne
adc
and
xchg
jg
incl
xlat
fcmovu
scas
xchg
mov
xlat
xlat
das
cli
stos
ljmp
imul
and
and
or
dec
test
add
popa
pop
cmpsb
mov
push
lods
aaa
inc
lods
and
xor
push
imul
fwait
and
adc
inc
mov
insl
je
imul
cli
mov
jmp
xchg
push
jno
cmp
insl
in
and
out
cs
outsl
in
int3
addr16
sbb
out
fstpt
jnp
fs
popa
pop
frstor
test
shr
lds
xor
mov
dec
ljmp
add
xchg
dec
lret
jb
int3
mov
jns
mov
repz
jbe
jecxz
sub
xchg
lahf
cmp
rclb
lcall
test
or
cmpb
dec
stos
lret
lock
fmuls
nop
xor
jle
pop
jbe
pop
insb
cmp
push
idivl
sbb
xchg
fsubrp
inc
sbb
add
addr16
add
inc
cmpsl
pushf
mov
mov
mov
mov
add
and
mov
sbb
lods
add
cltd
int
insb
mov
leave
or
add
dec
mov
sbb
ret
jmp
push
fdivs
test
cmp
mov
cmp
daa
popl
mov
es
jns
imul
mov
xchg
pop
mov
incl
fs
dec
xor
pop
fwait
cld
dec
push
lcall
fsubrl
mov
pushl
pop
xlat
lds
js
inc
rorb
ljmp
pop
jbe
push
adc
xorl
inc
fdivrs
or
orl
arpl
xor
sub
movsb
dec
lahf
dec
jecxz
jg
into
ss
inc
lahf
scas
xchg
call
push
xor
loopne
movsl
inc
xor
sub
inc
cs
fidivrl
stos
repz
push
dec
insb
in
sub
push
fsts
jbe
in
dec
insb
das
inc
mov
mov
lahf
cld
cmp
pop
add
mov
icebp
sub
decl
mov
stos
cmc
xchg
xchg
in
adc
sub
lahf
ja
shlb
cmp
dec
mov
in
cmpsl
ficompl
inc
jnp
outsb
mov
outsl
mov
pop
clc
inc
mov
mov
cmp
lods
call
or
xchg
mov
inc
cmp
adc
into
sub
aaa
mov
jb
push
sub
mov
neg
mov
inc
pop
test
repz
shrl
mov
jo
daa
jle
scas
or
lcall
ja
decb
xor
frstor
mov
jg
mov
adc
mov
dec
jp
jae
bound
jl
pushf
decl
lock
and
hlt
add
call
adc
xchg
mov
call
clc
loope
gs
pop
cmpsl
pop
jmp
or
lcall
cmp
inc
call
es
mov
bnd
lcall
adc
mov
xor
lcall
lcall
jmp
hlt
popl
xchg
stos
or
sub
scas
clc
ljmp
add
dec
inc
adc
push
das
iret
add
aam
lock
cld
jb
incl
stc
loopne
xor
ret
push
mov
pop
dec
adc
cld
xchg
xor
loopne
xchg
mov
idivl
jno
fs
popf
pop
incl
adc
adc
jg
mov
xor
fucomi
repnz
fsubrl
test
pusha
jmp
aad
dec
lods
xor
sub
lret
and
adc
pop
sbbl
pushl
fimull
imul
bound
insl
into
sub
cmp
scas
in
aas
enter
dec
xchg
mov
xor
cmp
sub
lcall
xchg
and
jns
and
test
adc
mov
call
cmp
subb
fadds
mov
inc
push
arpl
mov
call
in
addl
lock
mov
std
jo
hlt
cmp
cld
jg
adc
fs
arpl
pop
repz
lret
lcall
icebp
adc
les
int3
pushf
xor
fists
enter
gs
push
repz
jmp
jg
jno
stos
or
mov
pop
add
ffreep
inc
test
inc
testb
inc
arpl
aaa
add
jg
sub
sub
jb
in
repnz
jge
mov
daa
scas
sub
sub
jbe
rolb
inc
shrb
loopne
pop
fildll
dec
and
lret
pop
xor
fldcw
jg
call
jg
dec
mov
lret
push
outsb
out
push
push
jl
inc
stc
incl
mov
je
hlt
rol
leave
js
or
out
out
mov
lcall
xchg
ret
xor
lret
fsubrl
das
push
lds
mov
test
test
movsb
pushl
mov
fs
call
push
mov
jmp
sub
pop
push
std
mov
jo
hlt
fadds
aas
insb
add
and
adc
and
test
jo
jmp
aam
stos
test
repz
mov
mov
pusha
or
imul
pop
add
ds
sub
fiaddl
push
data16
dec
or
mov
or
stos
pop
out
xlat
les
dec
or
add
pop
popf
xor
mov
shrb
aas
aam
rcrl
test
pop
scas
outsb
mov
loop
xchg
xor
push
scas
mov
push
stc
fistps
loope
ja
pop
push
cmp
flds
incl
fistpll
pop
inc
mov
sub
jmp
jns
fcmovnu
dec
data16
call
sbb
in
mov
cmp
daa
mov
cmpb
pushl
xor
and
lods
cmpsl
imull
movsl
mov
out
mov
call
je
aad
inc
push
jmp
jg
addr16
dec
add
pop
sahf
pushf
cltd
enter
sbb
or
mov
int
outsl
adc
add
pop
sbb
lcall
das
aad
and
lahf
or
cmovne
aas
push
hlt
mov
mov
jg
fadds
cwtl
testl
jg
ja
lea
decl
aaa
jg
jp
add
icebp
dec
das
sub
adc
loopne
adc
mov
jne
mov
lcall
mov
bound
add
and
cltd
jp
pushl
jg
lock
xor
xor
lcall
and
or
enter
push
clc
fbstp
test
mov
cmpsl
cli
lods
mov
cwtl
mov
out
aas
rorl
jg
xchg
push
das
or
add
jg
repnz
mov
lret
aaa
daa
dec
cmp
sti
xchg
in
pop
inc
pop
cli
outsb
pop
add
dec
aad
sub
xor
add
mov
push
add
jg
fildll
test
jnp
xchg
inc
push
xchg
jp
mov
or
std
jb
daa
sti
fwait
test
pop
out
stos
sbb
stos
loop
arpl
int3
push
fbstp
fldt
mov
incl
jbe
pop
cmpsb
stos
and
or
pminsw
cmp
repnz
jbe
lock
adc
mov
movb
mov
lods
mov
lahf
pusha
and
sbb
int
lock
dec
jg
scas
xchg
adc
test
pushl
pop
in
mov
enter
pop
or
lahf
aas
mov
sti
dec
dec
hlt
push
rclb
mov
leave
and
notb
les
sbb
scas
pushl
xor
bound
jecxz
xchg
loope
cmp
or
shlb
sbb
cld
cmpsb
nopl
notb
pop
imul
fstl
cmc
sub
incl
sbb
es
xchg
faddl
call
andl
cmp
sub
loope
fcomip
mov
lcall
incl
sbb
lret
int3
adc
aas
adc
jmp
xor
repz
pushl
jg
jmp
outsl
or
rclb
loop
sub
jl
inc
iret
cmp
sub
push
jle
test
mov
pop
xchg
mov
lock
outsl
jmp
ret
push
mov
test
sub
aas
pop
push
pop
decl
push
push
js
fnsave
imul
fistps
xchg
pushl
test
repz
pusha
lcall
pop
loope
push
pop
outsl
inc
imul
pop
add
rcll
mov
xchg
jmp
mov
aaa
jg
out
ret
jg
lods
out
ret
and
jmp
into
out
jne
and
jg
aas
add
lahf
xor
mov
xor
add
movsb
stc
enter
xchg
pop
data16
jmp
fnstcw
call
movsl
or
imul
ja
lret
pushf
adc
push
icebp
mov
pushl
mov
loopne
mov
cli
cmc
inc
ljmp
arpl
pushf
jg
call
sbb
or
mov
clc
decl
inc
push
cld
pop
xor
mov
sub
mov
xchg
and
jmp
cmp
stos
sbb
aas
jns
push
sbb
mov
dec
imul
jo
push
or
arpl
dec
cli
scas
cmp
dec
jo
sti
imul
repnz
add
fimuls
push
jnp
jae
push
sbb
stc
inc
cmp
out
dec
adc
pushf
xor
pop
inc
inc
rcrl
xchg
fdiv
ror
cmp
sbb
pushl
dec
call
jmp
pop
int3
dec
sbb
jmp
loopne
test
dec
mov
cmp
fstpl
and
out
inc
mov
pop
pop
cmp
out
stc
std
xchg
gs
xchg
mov
cmpsl
stos
cld
cmp
jg
cmp
movsb
subb
pop
and
insl
rcrl
imul
call
incl
mov
sti
mov
call
lcall
jecxz
mov
dec
aam
out
inc
aas
in
xchg
fcomip
cmpsb
fistpl
adc
icebp
shll
or
cmp
adc
pop
dec
mov
outsl
out
pop
les
bound
xor
or
test
insl
cmp
test
int3
jmp
add
lods
cmp
mov
jmp
icebp
mov
mov
and
inc
rcll
stos
decl
ret
push
aam
test
in
push
lock
mov
push
push
xchg
loop
out
inc
arpl
inc
mov
std
outsl
add
jne
and
sub
out
mov
mov
sbb
sub
mov
cli
pop
fisubrl
jbe
mov
in
decl
dec
ljmp
mov
aas
mov
shrb
and
pop
cltd
xor
lcall
dec
dec
sub
jno
xchg
push
adc
loope
decl
sub
popa
inc
cli
sbb
stos
in
or
mov
in
cmc
jns
mov
movsl
lock
iret
ret
lcall
cltd
sbb
or
pop
pop
mov
aad
inc
push
clc
add
data16
jge
push
push
ljmp
cld
adc
fwait
add
jg
add
push
imul
psubq
pop
push
fmull
pushf
adc
ret
insl
inc
repz
faddl
mov
ds
imul
decl
cmpsl
cmp
popf
adc
sub
inc
fcomps
aaa
stos
call
push
out
js
jp
popa
jnp
and
add
mov
ljmp
lret
xchg
xchg
outsb
lahf
jle
fsubp
adc
dec
aam
fdivs
dec
jp
sbb
stos
incl
aas
lods
xchg
pusha
sbb
push
shll
inc
call
movsl
hlt
repz
mov
ss
js
dec
push
adc
insb
sarb
pop
lods
call
inc
adcl
jnp
inc
scas
dec
stos
icebp
pop
sub
sbb
addb
jmp
pop
sti
mov
repz
call
leave
incl
clc
mov
or
jmp
jg
jmp
push
and
adc
xchg
incb
je
js
in
lea
sub
aas
test
dec
xchg
dec
xor
cli
mov
movsl
repnz
lock
imul
jb
pusha
lds
pop
cwtl
mov
fdivr
jg
adc
xchg
xchg
sbb
repnz
jle
pop
mov
ret
add
adc
clc
push
sbb
mov
sti
insl
and
stos
mov
jmp
ljmp
inc
xor
mov
cs
jg
sbb
xor
mov
sbb
and
loopne
hlt
sarl
scas
sub
cmp
dec
pushl
push
and
out
cmp
loop
jns
sti
cmp
fs
es
pop
incl
xchg
push
loopne
lret
outsl
cmp
xchg
mov
fldt
adc
ret
inc
mov
addr16
loopne
faddl
lcall
cmc
cmp
jne
mov
loopne
fcoml
inc
add
mov
sub
negb
pop
les
je
mov
jl
jmp
aaa
mov
fsub
call
aas
loope
into
and
sbb
mov
fisttpll
or
cli
inc
xor
ljmp
add
jg
add
mov
cmp
test
call
std
xchg
ds
lods
adc
scas
lahf
out
or
ret
scas
nop
sub
loop
addr16
mov
flds
rolb
jg
cmpl
push
mov
je
stos
dec
imul
ffreep
jmp
xor
adc
pop
sub
mov
das
loope
pusha
cmp
mov
sbb
mov
rorb
inc
adc
xchg
insb
mov
dec
incb
mov
loopne
cmpl
dec
pop
in
pop
pop
out
mov
cmp
mov
xchg
jmp
or
sub
orl
sbb
lahf
sbb
test
mov
cltd
das
or
pop
pop
xorb
xchg
std
incb
lahf
pop
aas
xor
xor
adc
inc
cld
outsl
jg
iret
push
into
dec
mov
hlt
fisttps
stos
lods
aas
lahf
inc
pop
and
xchg
push
insl
jg
ret
call
dec
repz
cs
fwait
daa
out
stc
rol
sbb
pushl
adc
dec
add
sbb
add
xor
nop
mov
xor
shrb
jg
subl
pushl
sbbb
outsb
in
mov
add
xor
dec
into
fwait
mov
in
mov
enter
cmp
and
out
pop
bound
cld
push
inc
bound
mov
fildll
xchg
jne
mov
scas
pop
dec
cmp
popa
mov
pop
out
loop
and
stos
jne
unpcklps
mov
lahf
cld
arpl
bound
pop
fucomp
jmp
jns
repz
pushl
or
shr
pushf
jno
insb
and
aaa
and
bound
imul
inc
jo
repz
pop
xchg
inc
xchg
hlt
xlat
ret
stos
fiaddl
sub
jns
mov
dec
aam
pusha
adc
aas
repz
mov
cld
ljmp
stos
add
xchg
stc
lcall
das
xor
icebp
fbld
sbb
and
or
loope
fildll
inc
test
lahf
and
lahf
mov
jg
mov
xchg
pop
clc
sbb
xchg
jle
fsubl
jmp
jg
inc
pop
push
or
mov
add
lcall
cmc
lock
in
out
and
test
in
sbb
rorb
jp
stos
insl
ljmp
fidivs
in
inc
cmp
inc
jbe
les
movsb
xor
sarb
jle
iret
bound
inc
aam
inc
inc
pop
mov
or
sbb
push
mov
inc
mov
test
shlb
xchg
cmpsb
mov
push
loope
cwtl
adc
push
repz
xchg
push
pop
mov
xchg
and
test
jmp
sub
xchg
lcall
jno
xchg
pop
adc
lods
pop
mov
cmp
sbbb
push
lret
out
xchg
stos
mov
fs
pop
cmp
push
pop
pop
xchg
icebp
pop
cmpsb
mov
daa
and
pop
xor
ljmp
push
clc
xchg
add
inc
jbe
sub
sub
stos
pop
test
mov
pop
mov
addr16
inc
xor
cld
cmp
cmpb
stos
subl
ret
sbb
push
pop
div
lahf
stc
scas
and
xchg
call
jb
je
inc
xchg
push
ret
insl
fnsave
lock
inc
lcall
push
xchg
xor
loope
ljmp
ss
mov
stos
icebp
mov
pop
imul
jmp
ljmp
ret
clc
pop
add
xchg
xchg
ret
jl
push
cmpl
ss
decl
push
ret
cmp
xchg
cs
cmp
sub
icebp
test
mov
lcall
mov
dec
jae
out
sub
cwtl
mov
add
in
and
rcl
mov
outsl
rol
push
sahf
mull
mov
aaa
js
lock
push
push
fs
cmp
xchg
jnp
pop
push
sbb
and
xlat
add
pop
jo
jmp
push
cwtl
mov
popa
sub
test
dec
das
add
jle
call
iret
sar
cmp
fsts
and
xor
imul
arpl
cltd
sbb
ffree
push
mov
stos
xor
es
lock
cmp
cmpl
out
nop
fists
jae
hlt
mov
mov
pop
mov
xor
pop
lods
jb
jb
mov
jb
and
mov
sub
lcall
shr
inc
arpl
dec
lods
ja
add
inc
cld
dec
data16
mov
cmpsb
test
jmp
add
in
mov
rclb
inc
adc
arpl
adc
jg
jae
bound
push
nop
jg
aam
mov
pop
in
imul
ja
icebp
cmp
leave
and
stos
pop
bnd
in
test
mov
sbb
push
mov
fwait
jle
pop
adc
ss
inc
mov
xor
or
iret
dec
pop
sbb
add
decl
and
sub
mov
sub
mov
fldl
cmp
fsts
cmp
lcall
sub
jecxz
pop
xor
push
mov
int3
enter
icebp
lcall
shll
jne
xlat
mov
inc
xlat
gs
nop
xchg
mov
or
repz
or
fmul
cs
push
sahf
hlt
xorb
jmp
mov
sub
nop
test
jl
xlat
clc
test
sub
scas
ljmp
int3
push
xchg
xchg
mov
dec
popa
orl
nop
stos
cmp
lret
cmpsl
lock
pusha
add
push
add
mov
cmp
and
pushl
mov
icebp
insl
mov
out
aas
push
jo
mov
xchg
mov
orl
inc
lcall
pop
aaa
and
push
xor
test
push
je
mov
clc
jmp
or
jbe
stos
mul
jne
std
call
cli
add
loopne
stos
add
xor
push
inc
push
std
sub
sub
mov
or
or
bound
push
or
test
mov
prefetch
or
enter
or
movsl
jg
gs
pop
push
cli
cmpsl
or
rorb
lea
jg
mov
sbb
ja
pop
cmp
aad
jne
dec
jnp
cmp
sub
inc
adc
mov
decl
call
insl
notl
cmc
or
incb
clc
stos
hlt
pop
ss
mov
ljmp
mov
aas
jne
mov
xchg
aad
or
mov
aas
mov
adc
pop
das
sub
fisttps
gs
cmp
sarb
sti
mov
mov
les
mov
hlt
insb
ffree
jmp
add
mov
jno
mov
loop
out
pop
aam
ficoml
mov
shrl
and
inc
pushl
fsubrl
addl
mov
aam
aad
les
sub
idiv
lcall
pop
push
dec
add
pop
push
pop
fcoml
jecxz
jo
stos
push
mov
js
dec
inc
lods
ret
sub
aas
mulb
xchg
xchg
mov
adc
outsb
push
mov
fwait
int
int3
sti
push
imul
and
mov
push
imul
inc
lods
data16
call
push
into
jno
mov
xor
or
and
lcall
js
and
add
dec
xor
cld
imul
mov
pop
and
ficomps
test
xor
sub
and
ljmp
ret
arpl
or
les
pushl
jmp
sub
adc
lds
add
jo
add
fwait
adcb
lcall
mov
xchg
xchg
dec
jle
aam
lcall
xor
push
test
lcall
mov
sbb
lret
fwait
jbe
out
sub
int3
jp
push
jne
adc
pushl
dec
sbb
cmc
mov
sti
in
das
cmpsl
out
adc
sti
fists
jg
dec
jg
lock
ljmp
adc
cmp
fadds
fs
mov
stos
shrl
mov
pop
out
dec
xor
add
fidivl
aam
lcall
aam
push
pop
dec
fnsave
loope
mov
cmp
fiaddl
mov
in
out
mov
inc
fstl
in
std
aam
jno
aaa
scas
inc
dec
fcom
push
push
std
lret
aad
push
or
sub
xchg
mov
inc
or
gs
and
mov
mov
ds
pusha
lcall
pop
aam
mov
repnz
fwait
sub
in
push
cmc
jbe
adc
std
mov
sub
sub
test
mov
mov
and
ljmp
subl
inc
lahf
shr
dec
cltd
jecxz
lods
mov
div
sti
jg
pop
stc
jmp
in
les
in
sub
leave
addr16
loop
cmp
lret
incl
or
ret
idivb
test
clc
lcall
movsb
lret
xor
lods
xchg
xor
dec
fwait
dec
mov
ret
pop
xor
pop
daa
push
xor
mov
pop
push
mul
in
add
in
sbb
jmp
sbb
jg
jb
addb
pop
lods
imul
adc
enter
cmpl
test
mov
fsubrl
push
xor
mov
decl
ds
shl
pop
or
pop
and
mov
outsl
jmp
jne
push
test
add
inc
notl
cmpsb
jle
cmpsl
pop
sub
loopne
stos
loope
xchg
adc
mov
stos
insb
mov
add
ljmp
push
icebp
adc
and
and
call
adc
mov
inc
clc
mov
inc
sub
mov
push
mov
mov
sti
jno
sub
cwtl
je
push
add
inc
jb
pop
inc
add
addl
test
mov
jg
push
mov
fs
loope
jg
lcall
fnstcw
sub
xchg
cld
jbe
pop
mov
cld
pushf
addr16
pusha
fisttps
push
xor
mov
cs
out
insl
sar
dec
mov
cmp
fnsave
or
mov
add
test
jbe
stos
jg
cmp
in
jns
fildl
sbbb
call
sti
lcall
aaa
mov
inc
enter
xor
mov
inc
or
fs
mov
lea
mov
pop
adc
inc
add
jmp
test
icebp
cmp
cmp
mov
pop
xor
pushl
fcomps
ret
dec
xlat
jne
mov
or
outsl
adc
mov
lcall
mov
add
scas
cmc
mov
jne
sub
or
jmp
roll
std
call
std
sbb
lods
jge
mov
inc
dec
and
push
mov
dec
inc
push
xchg
adcb
lcall
sarb
fisttpll
xor
enter
lods
incl
lcall
cmpsb
or
enter
popf
xor
sbb
adc
incl
push
popf
out
dec
mov
inc
mov
lods
dec
add
orb
cli
sbb
push
pop
mov
loopne
inc
outsb
sbb
jnp
inc
inc
mov
popf
mov
in
es
cmp
loop
fcomip
xor
xchg
js
bound
push
loop
xlat
sbb
jle
enter
mov
hlt
inc
ljmp
xchg
push
push
addl
aam
mov
loop
incl
or
ficomps
mov
repnz
ljmp
insb
sub
jne
inc
jmp
cmp
xchg
sbb
xchg
mov
pop
pop
pop
xchg
add
pop
in
leave
fdivrl
cmp
pushl
xchg
jo
jmp
ud2
outsb
sub
ja
sub
pushf
ret
mov
insl
sbb
ljmp
mov
or
inc
mov
push
inc
clc
cmpsb
incl
ds
ljmp
push
pop
fsubl
and
js
inc
decb
jge
add
out
je
sub
push
ljmp
adc
pop
mov
sbb
cmp
out
rcr
dec
in
pushl
gs
sub
daa
outsl
int3
inc
xchg
in
mov
dec
dec
dec
imul
mov
pop
adc
pushl
into
gs
es
rorb
scas
mov
scas
sbb
cmp
in
and
clc
jno
faddl
jns
push
sub
xor
and
add
scas
adc
iret
call
push
xor
in
out
mov
aam
cli
cltd
stc
insb
mov
loop
mov
scas
aaa
ljmp
cmp
mov
mov
lea
or
add
adc
pop
cmpsb
xchg
lods
xchg
sub
aad
sbb
iret
std
cmp
mov
add
mov
jmp
jmp
mov
mov
pusha
insb
pop
sub
cmc
cmp
mov
inc
loop
jne
sub
int
out
in
bound
repz
vpgatherdq
ret
int
push
dec
out
push
cmp
loopne
add
sarb
call
cli
mov
ss
int
adc
in
inc
push
push
arpl
incl
test
pop
cs
cld
push
sbb
leave
dec
mov
push
xorl
mov
sbb
scas
ffreep
lds
into
les
mov
call
pop
addr16
fsubrs
inc
es
lret
mov
lcall
stc
cmc
and
add
sahf
xor
call
ljmp
sub
inc
std
jae
mov
insl
sub
lcall
xchg
or
ds
test
mov
les
out
scas
stc
gs
fnstcw
or
sahf
clc
hlt
or
mov
fcomip
sbb
out
xchg
ss
jl
lcall
in
out
adc
and
int3
push
push
pop
outsb
xor
jle
sbb
sub
iret
decl
or
and
mov
rol
push
mov
sbb
push
nop
clc
mov
pop
mov
aaa
mov
ljmp
jnp
and
lods
clc
jl
sub
mov
decl
and
mov
or
clc
pusha
inc
aas
jp
lcall
dec
mov
clc
add
cli
jecxz
mov
push
in
call
addl
aaa
fidivrl
lock
sub
dec
stc
push
cmp
mov
decl
call
cwtl
xchg
dec
xor
adc
lret
lods
jo
fists
aad
iret
jb
into
push
leave
pushl
inc
mov
aaa
loopne
mov
int
mov
cmp
incl
out
in
int3
ret
push
xchg
cmp
stos
cmpsb
mov
icebp
dec
call
ret
dec
pop
shlb
aas
nop
fidivrs
sub
mov
jnp
lea
mov
mov
je
pushl
rcrb
add
test
std
out
pop
mov
ds
and
call
cmp
or
daa
mov
cmpsl
test
jmp
movsl
sar
cmpsl
loope
repnz
adc
lcall
imul
mov
arpl
add
jae
shl
test
pop
enter
push
or
js
lea
push
insb
cmpsl
stc
addb
fidivs
ja
aas
adc
mov
lcall
push
stos
add
mov
xchg
sahf
cmp
pushf
int3
jg
leave
sbb
add
insb
cmp
lock
loop
fs
ljmp
iret
add
ljmp
shlb
out
mov
aas
and
leave
mov
mov
jmp
je
sbb
push
mov
inc
inc
jae
jb
sub
cmp
push
cmp
pop
jns
dec
jno
mov
ljmp
movsb
inc
sub
in
out
add
fbstp
in
cli
les
add
fcompl
call
dec
mov
call
clc
out
lret
and
sbb
mov
jecxz
and
dec
mov
decl
ret
loop
scas
adc
mov
mov
insb
std
outsl
ljmp
popf
stc
fwait
dec
jne
xlat
mov
push
lret
mov
call
pop
xchg
add
rolb
push
out
dec
or
pop
movsb
enter
push
push
mov
sar
pushl
sub
je
xchg
loope
dec
push
aad
enter
dec
ss
loop
jg
inc
lcall
push
sarl
inc
cmp
sub
pop
mov
clc
mov
inc
scas
jns
fisubrl
lcall
or
adc
pop
testl
pop
popf
and
sar
xchg
cmp
lods
and
lret
jg
bound
fisttpll
jg
add
mov
call
push
shl
rcrb
in
data16
jmp
orb
adc
out
rorl
ljmp
pop
ja
les
sahf
outsl
icebp
call
test
add
or
push
xor
out
cmpsb
inc
xor
jbe
inc
dec
lcall
loope
and
pop
test
sub
cltd
scas
arpl
cmp
mov
decl
xchg
pop
cmc
sbb
aaa
std
xor
scas
adc
js
cmp
lods
jecxz
or
mov
fidivrl
dec
push
les
dec
loope
adc
aas
mov
adc
mov
sbb
test
adc
bound
dec
xor
jo
shrb
loop
jmp
stos
cwtl
pop
xlat
xchg
js
stos
or
test
inc
lcall
push
dec
push
rorl
xchg
lea
out
ljmp
push
and
or
enter
push
xchg
jle
adc
in
or
mov
jg
jg
push
mov
enter
mov
subb
sbb
mov
hlt
xlat
sub
mov
mov
mov
push
fmul
mov
lock
ficomps
add
les
pop
aas
dec
ret
push
fistps
movl
sti
call
std
pop
mov
jns
sub
loop
fs
pop
subb
mov
push
and
outsl
inc
lock
push
lahf
cld
test
clc
hlt
ljmp
or
jo
addr16
xor
sub
cli
mov
int3
jmp
inc
xor
shll
ds
jg
inc
pop
mov
mov
xchg
jnp
jmp
mov
mov
js
sub
es
mov
xchg
adc
fcomps
call
mov
mov
jg
pushl
mov
mov
mov
dec
mulb
push
jge
incl
sti
jmp
lea
sub
subb
out
inc
fistpl
cmp
je
adc
je
pop
push
adc
and
mov
call
or
imul
bswap
push
addr16
roll
jg
sub
dec
mov
dec
or
stc
stos
lcall
dec
iret
mov
jmp
pop
mov
jno
dec
xchg
aam
mov
je
pop
dec
push
fidivrl
lea
dec
popa
push
inc
pop
mov
call
lret
mov
cmp
aas
in
jg
sahf
xor
push
pop
je
adc
adc
xor
xchg
xor
mov
cmp
sahf
test
or
ljmp
mov
sbb
sub
lock
ds
jbe
add
fsubrl
dec
add
ret
maxps
decl
xor
andb
cmp
cltd
push
andb
fmull
int3
cmpsl
aam
decl
mov
jmp
stc
fcoml
inc
mov
daa
mov
das
and
pop
in
push
sub
pushl
cs
test
rolb
or
inc
mov
mov
jns
push
xor
pop
push
xchg
popl
sbb
sub
gs
push
xor
negb
ss
add
and
ret
in
call
incl
pop
xchg
cmp
mov
ficoml
adc
clc
rorb
call
out
inc
jae
and
jle
cmp
leave
adc
arpl
sub
addl
jno
mov
cmp
xlat
mov
mov
movsl
mov
inc
enter
sahf
xor
subps
jmp
mov
call
jnp
sub
adcl
inc
jne
lea
and
jmp
sbb
pop
xchg
adc
jbe
pusha
mov
aam
lcall
dec
mov
sbb
stos
ja
das
clc
incl
pop
je
test
or
mov
add
mov
shlb
mov
clc
sub
adc
or
cmc
or
lea
decl
dec
adc
hlt
xchg
mov
adc
cli
out
clc
xchg
das
adc
jb
and
pop
mov
clc
ljmp
sub
stc
sbb
push
aas
sub
out
xchg
fsubp
lods
sub
fildll
lds
rcrl
or
enter
cmpl
mov
stc
inc
cmc
jg
enter
push
jg
dec
sbb
lcall
mov
xacquire
imul
in
and
xchg
inc
adc
cwtl
je
jo
sub
lods
sbb
icebp
inc
sub
adc
addb
loopne
in
imul
jne
and
test
inc
ja
loopne
je
jb
div
fstps
out
push
mov
xor
mov
mov
mov
sbb
dec
lahf
pushl
pop
dec
lret
cmp
and
sub
testb
and
dec
sbb
mov
daa
insl
fmul
mov
xor
cltd
push
jne
dec
in
xchg
lcall
xchg
out
and
or
daa
pusha
dec
jno
call
cld
mov
notl
and
aas
ret
add
arpl
mov
fcos
stos
aaa
mov
mov
sbb
lahf
movsl
subb
stos
call
int
vunpckhpd
data16
ja
imul
sbb
out
sub
cmc
loope
cmp
ljmp
xor
ret
jecxz
push
and
ror
sub
mov
popa
cltd
aas
out
clc
incl
insb
dec
xchg
scas
shr
repnz
adc
jecxz
mov
xchg
call
cmpsb
subl
push
sub
adc
cmp
push
jp
into
push
and
xchg
insb
jg
es
lcall
js
aad
into
repz
cmpsb
push
pop
repz
call
call
pusha
add
xor
cmp
lret
sub
inc
sub
fdivl
insb
and
lods
and
push
mov
in
sub
mov
mov
sbbl
or
testl
nop
cmp
pushl
outsb
adc
inc
adc
ds
fbstp
add
test
adc
xorl
mov
xchg
and
outsl
sbb
sbb
lahf
inc
jo
imul
xor
pop
push
loopne
andl
mov
cmp
sti
inc
insb
arpl
inc
das
out
dec
nop
dec
ret
push
mov
mov
xchg
stos
shrl
lea
mov
xchg
jns
test
jg
and
jbe
xchg
scas
push
dec
adc
stos
xchg
jb
add
mov
sbb
aad
push
or
or
sahf
repnz
push
ds
les
add
fidivs
sarb
mov
addb
mov
inc
add
adc
fsubrp
xor
jg
jne
int3
and
add
xor
pop
inc
dec
sarb
sub
scas
incl
mov
pop
loop
sbb
sbb
cwtl
push
sahf
out
inc
add
divb
imul
mov
pop
dec
xor
sub
or
pop
mov
or
arpl
cld
sbb
mov
xchg
jg
adc
or
jp
adc
sbb
sub
or
pop
fsubl
repz
js
cmc
decl
dec
enter
push
rcrl
out
inc
adc
stos
lret
pop
adc
testw
into
popa
cmpsl
sub
ljmp
call
mov
mulb
xor
dec
enter
xlat
addr16
cmp
xchg
out
mov
cld
sub
and
push
cwtl
pop
cs
xor
scas
movsl
pushl
cld
sahf
sti
fistpll
popa
mov
cmp
mov
fcmovu
inc
movsb
fstps
push
lock
sub
popf
jp
pop
xchg
xor
push
das
inc
xchg
lea
sbb
lods
and
in
in
mov
imul
cld
into
loop
cmp
lret
insb
push
or
cmpsl
add
or
xor
or
mov
pop
push
mov
out
inc
mov
lods
mov
fildll
call
add
pushf
mov
pop
es
leave
cmp
shll
adc
xchg
ljmp
pop
sbb
cmc
pop
adc
insb
jle
or
in
mov
adc
outsb
ss
pusha
bound
jmp
out
pop
sub
cmp
mul
sub
scas
cli
mov
out
inc
decl
push
mov
or
jge
aaa
out
push
push
mov
and
pop
mov
aaa
iret
pop
ljmp
stos
pusha
leave
mov
pusha
cmp
pop
push
out
es
daa
ljmp
ret
outsl
lods
cmpsl
jae
stos
scas
jae
push
push
mov
in
ss
ljmp
push
dec
out
cmovo
add
lret
mov
outsl
in
add
pop
add
adc
push
mov
ja
or
popa
or
pop
lcall
sub
mov
adc
iret
out
scas
icebp
repnz
xchg
sbb
rcrl
icebp
iret
jmp
lcall
in
cmp
pop
sahf
ret
fldenv
mov
inc
cmp
xchg
xchg
lock
mov
scas
jmp
aam
and
decl
add
imul
ds
xor
fistpll
lcall
subl
loopne
inc
repz
mov
mov
sub
jbe
add
in
or
dec
jecxz
push
or
lods
pop
cltd
dec
iret
push
or
jmp
inc
daa
dec
and
into
sub
lods
cmp
ret
scas
cmp
iret
in
mov
lods
fsubr
mov
jmp
rclb
stc
xchg
subb
and
and
push
loope
ljmp
data16
cs
ret
dec
shlb
or
pop
stos
push
push
pop
sub
std
pushl
outsl
fsubs
sarl
and
or
xor
cmc
call
repz
and
or
mov
rorl
sbb
jp
mov
lock
not
jno
into
mov
inc
pop
es
push
ret
hlt
in
mov
push
fadds
pushf
imul
imul
sub
insl
dec
adc
jge
pusha
xchg
xor
mov
into
push
cli
add
inc
rolb
lds
cmp
sbb
adc
iret
mov
mov
dec
rolb
lock
mov
push
das
push
inc
cmp
outsl
jle
xor
jmp
shlb
imul
add
ljmp
outsb
push
push
or
inc
xchg
sbb
jnp
mov
jmp
sub
jl
adc
sbb
popf
out
movl
push
xchg
cmp
jg
adc
decl
xchg
and
stos
repnz
cmp
or
call
dec
in
out
mov
jmp
out
fs
push
pop
or
add
lret
xor
pop
lcall
lods
or
add
call
jle
xchg
clc
fwait
lret
push
xor
lcall
ljmp
data16
repz
jno
dec
insl
ja
jns
aam
es
lods
push
adcl
imul
inc
sbb
dec
or
ljmp
in
daa
inc
sbb
add
call
shll
cltd
stos
hlt
outsb
outsb
and
xlat
pop
sub
nop
scas
sub
dec
and
adc
decl
pop
push
cli
test
or
or
sub
mov
daa
fiadds
xchg
jbe
movsb
pop
repz
incl
je
cltd
mull
push
xor
lahf
push
push
sub
decl
mov
in
shll
inc
repz
ljmp
dec
shrl
negb
in
sti
ss
push
jno
add
outsb
or
fdivrl
scas
push
sbb
dec
jg
add
adc
ljmp
and
test
pop
shlb
repnz
decl
test
imul
ret
mov
lret
sbb
ror
stos
into
icebp
xlat
pop
jmp
jmp
lods
stos
and
sbb
inc
mov
adc
pushf
push
and
pop
mov
dec
mov
push
or
add
scas
rclb
adc
in
fimuls
add
xlat
ljmp
lea
ret
ss
pusha
dec
repz
mov
call
out
push
mov
xchg
orb
out
scas
xchg
pop
aam
add
pop
stc
psubq
int
test
pop
jg
pusha
leave
data16
xchg
dec
and
mov
add
cmpsb
xchg
ret
fidivrl
nop
xchg
and
sub
add
lcall
out
mov
lock
lcall
and
mov
or
stos
rcl
notb
dec
out
in
lods
imul
sbb
jmp
call
sub
jge
lds
mov
sbb
jecxz
popa
orb
push
loope
outsb
stos
lea
incl
in
into
inc
pop
dec
int3
int3
ja
adc
sub
dec
sub
xchg
add
frstor
pushl
ret
dec
jns
sub
lea
in
nop
sti
popa
cmpsl
je
out
arpl
out
jp
lods
sarb
xor
pop
xor
bound
cmp
sbb
xchg
sti
adc
or
pop
into
call
jbe
mov
mov
push
ret
flds
pop
sbb
inc
xchg
imul
push
dec
sub
push
sub
fbstp
push
cld
xor
mov
push
mov
outsl
sbb
mov
hlt
test
fdivrs
mov
add
and
and
or
cltd
and
mov
mov
push
inc
ficoml
mull
call
rorb
mov
xlat
nop
dec
sbb
call
jbe
and
out
jle
xor
dec
lcall
sub
mov
je
rol
xor
adc
jnp
das
mov
mov
in
incl
cmp
cmpsl
xchg
fisubrs
loop
mov
xorb
ja
decb
daa
repnz
jmp
push
or
iret
mov
mov
pop
fmull
imul
cmp
mov
out
push
jns
call
movsb
jle
mov
les
mov
cmpsl
inc
lret
sbb
push
jnp
pop
xchg
sahf
movsl
in
adc
divb
data16
inc
cli
aam
aaa
in
xchg
stos
adc
mov
movsb
cmpsl
xchg
outsl
lret
lcall
sub
push
jge
xchg
push
adc
mov
xchg
rolb
movsb
fsubrl
cmp
in
adc
insl
out
mov
and
mov
sbb
mov
in
lcall
and
sbb
pop
das
and
dec
test
outsb
jle
jp
andb
aas
in
jmp
aam
dec
js
sbb
mov
jmp
or
mov
cld
gs
int3
or
in
into
pushf
cmp
xlat
sahf
in
xor
dec
mov
push
jne
incl
mov
push
pushf
clc
rol
sub
ret
push
jb
jns
dec
push
in
lcall
outsl
xchg
pushf
and
mov
mov
scas
fiaddl
pop
lds
cmp
fsubp
jno
push
fidivrl
shlb
push
inc
pop
test
test
pop
jg
clc
das
inc
aas
shll
int
fstl
sub
jns
nop
lock
mov
outsb
stos
sub
sbbb
push
sub
mov
push
mov
cmp
xchg
jg
lea
pop
push
push
int
enter
add
shl
std
cmpsl
xchg
je
pop
cmp
adc
inc
jmp
or
fwait
jg
pushf
and
cmp
jmp
xor
mov
jg
fbld
hlt
push
shl
push
xor
scas
jae
xchg
add
jmp
mov
cmp
jecxz
std
incl
scas
pop
or
pop
adc
in
jl
cmp
xchg
shrl
mov
pop
int
les
jne
lods
or
sbb
in
mov
push
fisubrl
scas
in
insb
xor
rcl
aas
jp
jmp
jmp
mov
popf
lret
cmp
lcall
bnd
in
out
orl
cmc
mov
aam
add
sbb
xchg
test
add
push
add
cld
dec
pop
add
push
pop
xchg
lds
mov
or
lahf
stc
movsb
push
adc
outsb
cmp
and
or
in
push
dec
incl
mov
push
movsl
dec
jmp
xchg
test
iret
mov
xor
lahf
mov
inc
jmp
xchg
out
sarl
mov
push
jmp
push
aas
inc
xor
out
sbb
push
lock
or
fwait
xchg
dec
mov
nop
fidivrs
sub
shl
rorl
rorb
sahf
data16
lahf
inc
inc
jmp
pop
or
sub
loop
aas
cmp
in
call
lods
fsts
insb
fimull
ret
incl
decl
xchg
pusha
pop
in
aaa
mov
adc
cli
adc
mov
out
cmc
pop
dec
push
fstps
cmp
sbb
xor
cld
das
adc
adc
cmc
test
incl
jo
subl
iret
push
mov
pop
test
push
pop
ja
push
fildll
scas
je
test
inc
incl
dec
ror
out
out
insl
repnz
mov
inc
rcl
jg
xchg
test
pop
in
push
jp
test
decl
cmp
adc
int3
jo
add
test
sarb
cs
or
mov
mov
repz
xchg
mov
in
gs
and
cmp
rolb
cmpsl
jmp
jp
ss
sub
dec
in
jg
adc
loopne
cld
sub
es
push
cmc
mov
std
add
sbb
xor
lock
in
leave
sarb
fcmovbe
lds
pop
popf
adc
xor
jg
test
rcr
gs
cmpsb
jecxz
aam
fisttps
pop
adc
call
lahf
xor
jl
xor
mulb
call
jns
sub
popa
adc
ret
ljmp
cld
jecxz
pop
fimuls
cmpsb
inc
cmp
dec
xchg
shll
and
dec
pop
loopne
mov
hlt
sub
fcos
ljmp
inc
call
mov
jne
or
sbb
xor
loopne
inc
and
mov
sub
aas
mov
push
cmp
ss
sub
mov
aas
xor
repz
inc
pop
adc
jg
pop
dec
pop
xor
test
sub
or
jne
fs
push
nop
in
mov
jg
in
add
adc
mov
and
pop
bound
jmp
push
es
cli
rclb
mov
fstpl
jo
les
into
pop
mov
inc
xchg
adcl
addr16
mov
cmp
inc
notb
pop
lds
mov
push
or
lret
into
mov
stc
add
or
rclb
mov
cld
aam
xor
xchg
rolb
lcall
jg
adc
insl
popf
dec
nop
sub
popf
out
pop
inc
call
je
pushl
cs
jl
mov
jecxz
div
aam
xor
push
mov
jge
jg
mov
pop
outsb
insb
fnsave
sub
cmpsl
aam
jge
out
pop
xor
lock
jmp
lods
pop
sub
ret
cmc
fldl
fnstenv
or
cs
incl
pop
add
dec
xor
inc
mov
daa
inc
push
rol
cmpsl
and
test
in
std
enter
negl
mov
inc
jle
leave
xor
sbb
jl
xchg
mov
xchg
jp
pushl
cmpl
adc
ja
pop
or
lds
ja
cli
ja
daa
xor
cmp
shrb
iret
in
inc
gs
std
push
jbe
jecxz
sbb
mov
inc
add
popa
into
fwait
call
std
int3
xorl
push
xor
fiadds
clc
shrb
adc
fistl
int3
sub
cltd
iret
mov
mov
sahf
lret
loopne
inc
pop
inc
or
add
dec
popa
adc
rcll
mov
lcall
jmp
pop
jns
out
shlb
call
mov
xlat
push
mov
loope
cmp
push
push
lret
pop
jns
push
cmp
fcmovnb
dec
mov
lcall
pop
inc
lock
jl
fsubrl
shr
repnz
sbb
mov
sbb
jmp
ja
sahf
inc
sbb
rcrl
xor
cmp
jg
pop
dec
pusha
lahf
cmc
pop
lahf
add
inc
fwait
or
shr
enter
jbe
cmp
std
jb
dec
cmpsb
movsb
push
aad
rcl
jp
jb
cmp
cmpsb
ja
mov
dec
xor
mov
push
inc
inc
mov
loopne
and
jmp
fmul
sbb
jo
pop
les
push
dec
pop
inc
sbb
mull
pop
scas
pop
xchg
ds
es
mov
cmpsb
fidivrs
ljmp
jg
aas
test
popf
outsb
mov
aam
push
aaa
fnstenv
in
icebp
sbb
popa
decl
push
and
int3
clc
adc
hlt
jb
icebp
sub
jno
xor
push
pop
inc
pop
jmp
repnz
mov
jecxz
xchg
into
sub
dec
fcomps
xchg
pushf
shll
lds
push
fstp
lahf
loop
inc
add
mov
jbe
jmp
das
bound
push
mov
mov
mov
rcrl
stos
test
ficoms
add
mov
dec
sbb
shlb
mov
aas
dec
mov
cmpsl
xor
ret
das
insl
mov
inc
sbb
mov
inc
enter
or
lods
mov
ds
mov
das
lahf
aam
sbb
pop
pop
jl
jns
and
lcall
jne
scas
ss
and
testb
xor
cmp
pop
cmp
lcall
add
dec
mov
sbb
lock
xchg
insl
jl
pushf
in
inc
cmp
inc
addl
out
jge
icebp
ljmp
sbb
sbb
cmp
jmp
xor
lds
cmp
shl
enter
pushf
xchg
adc
xor
mov
imul
mov
std
and
aas
test
cmpsl
dec
lret
pop
inc
pop
sbb
pop
mov
or
jge
pop
das
jp
sub
mov
pop
mov
inc
iret
adc
mov
cmpsl
daa
pushl
incl
fldt
fildl
jae
test
ss
dec
sti
adc
jg
and
sub
mov
jae
inc
test
mov
mov
decl
pop
and
and
jmp
cmp
sub
fsubr
xlat
pop
mov
cli
cld
xor
icebp
enter
inc
mov
lahf
add
into
bound
arpl
aas
or
dec
lcall
into
cmp
mov
adc
dec
mov
dec
add
inc
add
jne
out
nop
mov
pop
test
mov
pop
push
dec
fisubrs
decb
div
xchg
adc
lds
pushf
std
push
sub
loopne
andb
in
sub
repz
mov
jmp
out
gs
ljmp
shlb
inc
push
daa
mov
sub
lock
xor
loop
lock
idivb
fnstsw
mov
jp
push
add
and
dec
outsl
clc
mov
adc
xchg
and
mov
sbb
aas
and
std
ljmp
jmp
scas
push
cmpsl
aas
out
adc
movsb
scas
or
add
decl
and
cmp
mov
idivb
lcall
cs
inc
data16
inc
jp
decl
inc
iret
or
push
or
mov
pop
cld
decl
xor
mov
dec
add
lcall
mov
jg
pop
sub
sbb
jmp
pop
xorb
sbb
adc
std
sub
jle
incl
sahf
lret
cld
loopne
add
aam
push
sub
jmp
dec
and
fcoml
stos
sub
add
fildl
in
mov
and
sub
or
gs
mov
out
out
or
stc
ret
sbb
push
dec
push
mov
outsb
into
fbld
or
and
cmp
and
outsl
std
idiv
jmp
inc
mov
add
repz
roll
ja
pop
test
aad
or
add
test
sbb
add
xor
ss
incl
es
xor
in
gs
int3
ja
nop
int3
int3
sbb
push
stc
cmpsb
cld
adc
call
jbe
subb
pop
add
jecxz
add
lea
lret
or
or
fsubrs
js
into
sub
sub
mov
lcall
loop
and
cmp
repz
out
addb
mov
xor
ret
xor
loopne
roll
fcmovbe
jp
jge
ljmp
clc
sub
cmp
inc
jle
cwtl
test
push
push
enter
subb
ret
fmull
enter
lahf
adc
mov
int3
push
push
cmp
mov
xorb
xor
sbb
dec
cltd
pop
mov
xorb
cli
dec
xchg
or
cmpxchg
clc
xor
ud0
mov
dec
iret
test
or
addl
xor
mov
lcall
incl
inc
arpl
adc
bound
out
leave
mov
and
and
xchg
pop
jp
add
jo
push
icebp
test
jb
or
nop
pop
mov
in
jne
push
and
mov
push
cmpsl
jl
and
popa
scas
cmp
and
dec
xchg
dec
loope
incl
mov
insb
std
arpl
pop
push
out
jnp
in
ja
sub
cld
pop
and
push
roll
mov
xor
ja
fcomip
pop
jmp
mov
sub
push
sub
xchg
andl
leave
lahf
xchg
adc
inc
mov
dec
enter
mov
sbb
loopne
mov
in
mov
hlt
mov
mov
sub
fwait
shl
call
div
loope
push
mov
jl
jo
aad
jg
jmp
push
lret
das
xchg
dec
mov
mov
inc
pop
xor
push
mov
gs
or
pop
push
adc
dec
decl
cmc
sarl
lcall
sbb
insl
sbb
xchg
xor
sub
pushl
adc
fcmovnbe
adc
mov
sbb
outsb
dec
sahf
lcall
and
jecxz
adc
das
add
sub
inc
mov
movsb
mov
cmp
and
decl
mov
popf
ret
push
adc
leave
mov
push
pop
sbb
pop
fwait
mov
ljmp
xchg
clc
movsl
rolb
adc
cmc
jne
jmp
call
xchg
fiadds
das
in
mov
jle
loopne
repz
gs
xor
xlat
lret
cmc
movsl
mov
in
push
lret
mov
add
jne
or
sarb
sbb
xor
inc
mov
aaa
rcr
jb
mov
xchg
out
xchg
cmp
inc
lods
rcr
lods
xor
mov
pop
negl
das
cmpsl
cmpsl
imul
mov
push
jne
ljmp
push
jmp
cmp
and
dec
cmp
inc
adc
and
push
mov
das
stos
popf
sub
mov
fwait
cmp
mov
loope
stos
shlb
mov
pop
sbb
stos
adc
loop
rol
jl,pn
cmp
xor
or
push
shlb
ljmp
add
scas
adc
insb
adc
sbb
pop
pop
out
mov
dec
fwait
aas
jno
jmp
or
xor
mov
sbb
add
call
sbb
xor
push
fisubrs
push
sbb
xchg
inc
mov
lcall
clc
pop
jno
fs
pusha
inc
push
outsl
out
ljmp
mov
imul
add
stc
add
fdivs
rclb
imul
adc
push
add
xchg
cmpsb
sub
mov
jge
mov
mov
lea
out
or
jmp
or
mov
nop
xchg
adc
add
call
push
xchg
xchg
jb
mov
dec
daa
in
inc
cli
mov
daa
push
push
adc
in
pop
pop
int
cli
push
xlat
mov
fstpt
aaa
mov
scas
inc
mov
stos
arpl
shlb
sub
repz
sbb
mov
mov
cwtl
orb
lahf
aas
aam
pop
sbb
and
mov
xor
std
pop
in
or
fimull
cmp
lahf
cmp
mov
ljmp
push
mov
gs
push
je
incl
or
rcr
mov
sti
movb
clc
call
mov
ret
cltd
jle
ret
lds
fildl
mov
incl
aaa
dec
xchg
xor
dec
clc
int
cs
incl
inc
jnp
and
ljmp
xor
int
incl
hlt
ficompl
pop
adc
sub
call
out
mov
dec
pop
or
xor
fbld
inc
int
push
in
paddw
lcall
dec
pop
aam
repz
push
add
dec
adc
ja
imull
xorb
aaa
insb
jecxz
mov
sub
pop
mov
insb
fwait
pop
testl
xchg
popa
out
rcrb
test
loope
out
fwait
and
xor
jbe
mov
or
rcl
rorl
imul
push
inc
xchg
or
jge
incl
mov
push
data16
adc
cmp
in
jmp
cmc
sub
pushl
inc
or
push
fwait
popf
jns
cmp
decl
lock
xchg
in
data16
ss
cmc
fwait
xor
dec
lds
xchg
out
and
mov
cld
icebp
jb
xchg
mov
push
adc
push
repz
inc
dec
les
push
fcmovnb
call
sbb
pushf
loop
call
xchg
lahf
jnp
sub
in
and
enter
cwtl
popa
mov
out
sti
push
movl
das
clc
pop
jmp
in
push
mov
jne
xor
incl
popf
popf
adc
cmp
lock
pop
in
pusha
inc
movsl
jecxz
sbb
ret
fcomip
push
pop
mov
jnp
sysexit
clc
sbb
push
add
inc
add
stos
pop
in
cs
push
popa
pop
mov
jle
pop
mov
lahf
mov
and
dec
pop
add
std
enter
fnstenv
incl
aam
xchg
jb
cld
in
out
lods
and
mov
js
sbb
shlb
inc
inc
mov
fs
dec
inc
mov
int3
adc
and
icebp
xchg
mov
aaa
add
mov
fs
imul
push
add
test
push
lea
sbb
gs
or
fidivrl
bound
pushl
out
and
das
int3
pop
mov
xor
jmp
iret
outsl
pop
fisubrl
push
jl
mov
mov
mull
xchg
and
in
add
addr16
xor
cltd
out
jo
outsl
clc
push
call
loop
stos
push
repz
jns
je
mov
incb
xchg
call
cli
add
ret
inc
ds
fistl
jbe
xor
sbb
jg
cmpsb
xchg
out
lret
and
jge
jl
jno
mov
in
stc
dec
leave
mov
notl
cmp
or
scas
outsb
jo
jp
pop
pusha
mov
jo
filds
shll
pop
dec
xlat
xchg
cwtl
aam
addr16
lea
popa
mov
ljmp
mov
shrl
jmp
test
push
cltd
push
jge
inc
xchg
mov
ljmp
sub
pusha
inc
and
pop
jbe
and
ror
xor
jg
sub
sbb
push
jp
and
ret
shlb
push
mov
in
lcall
jp
in
sbb
push
dec
pop
jbe
mov
cmp
xor
andb
mov
pop
stos
adc
loop
adc
pop
ss
push
jmp
lcall
or
xchg
mov
push
int3
ret
xchg
ret
mov
leave
lods
adc
repnz
mov
incl
or
mov
mov
sbb
jno
mov
pop
dec
xchg
dec
xor
cmc
pop
adc
mov
scas
clc
mov
test
aam
clc
cltd
pop
pop
into
cmp
mov
push
incl
push
mov
sar
movb
idivl
add
lock
aad
into
fdivr
cmp
add
inc
out
mov
aad
in
out
pop
je
nop
nop
sub
pop
icebp
incl
hlt
push
cwtl
pop
icebp
test
adc
jecxz
fwait
mov
popf
incl
loopne
jnp
faddl
push
lods
adcl
jne
lock
push
es
mov
cmp
jmp
or
inc
outsb
pop
pop
fsub
inc
cs
mov
dec
mov
sub
lods
ljmp
jnp
imul
cmp
dec
adc
jmp
inc
push
jg
call
leave
dec
aam
mov
mov
dec
aad
mov
push
jmp
stos
mov
mov
jo
inc
pop
cmp
les
push
pop
xlat
cmpsb
shll
xchg
hlt
call
icebp
call
inc
mov
xchg
mov
les
hlt
push
lret
mov
push
out
cli
xor
and
int
aad
xchg
out
dec
call
dec
lret
cmp
call
std
adcl
lcall
lahf
and
std
imul
call
jmp
cltd
into
or
or
push
mov
cmc
mov
sub
int
and
incl
cld
in
mov
dec
push
mov
push
popa
in
jle
jbe
out
xchg
and
lcall
cmpsb
xlat
ljmp
std
jp
dec
sbb
add
sbb
fistps
push
sub
pop
push
pop
dec
lcall
call
xor
or
push
jg
int
sub
push
push
push
mov
add
mov
adc
xor
and
decl
and
mov
dec
js
mov
pop
fsubrl
rcll
cmp
call
iret
add
inc
sbb
lods
out
jb
push
fiadds
sub
mov
test
test
mov
pop
mov
out
mov
push
xchg
sbb
rcrl
pop
and
hlt
movsb
addr16
mov
lea
outsl
push
push
test
inc
xor
jmp
or
xor
loope
mov
sub
or
pop
loope
lret
cmp
jg
out
jno
movsl
lds
popa
jmp
xrelease
push
and
cwtl
orb
lcall
or
jb
sub
les
adc
mov
enter
add
dec
in
imul
negl
jnp
pushf
addl
xor
add
lods
lock
pushl
xchg
push
mov
and
in
js
lret
je
in
pop
arpl
lcall
fimuls
out
xor
adc
into
mov
fcmovnu
lcall
pushf
out
lcall
call
pop
xchg
sbb
sbb
pop
or
jmp
xor
pcmpeqd
xchg
and
pop
add
fistpll
gs
decl
imul
fwait
pop
out
in
mov
loop
xchg
pop
push
int
mov
jmp
adc
addr16
jae
pop
inc
mov
cltd
dec
xchg
rcrl
push
or
mov
mov
mov
jae
cmp
xchg
add
das
add
push
flds
outsb
popf
xor
cmp
jle
mov
adc
in
subb
jle
int
mov
cmc
mov
cmp
sub
into
jns
or
sahf
jbe
ljmp
ss
push
inc
xchg
xchg
clc
add
jmp
sti
jo
sub
cmc
iret
xor
lret
lods
mov
stos
jg
dec
jp
jp
dec
adc
cmpb
icebp
xchg
js
and
push
fisttps
mov
jmp
xchg
in
int3
inc
call
enter
out
mov
shlb
popa
mov
mov
xchg
mov
jno
sub
hlt
jl
sar
popf
test
in
sbb
push
out
enter
pop
in
fisubrs
push
pop
into
adc
mov
xlat
pushf
lahf
in
push
push
jnp
fisttpll
in
int
cmp
jp
outsl
xor
adc
add
sbb
cli
orl
push
popa
sbb
lds
push
call
stc
push
inc
fs
dec
xorb
div
fstps
fdivr
cltd
and
lock
call
scas
lods
sti
pop
xchg
flds
nop
add
jecxz
dec
shrb
push
cmp
cmp
lea
or
lret
or
pop
or
in
out
mov
lcall
idivl
into
pop
sbb
mov
mov
imul
cli
mov
jg
fidivrl
sub
mov
test
in
add
std
mov
add
decl
stc
sbb
int
arpl
xor
mov
or
shll
mov
mov
pusha
jle
cmc
leave
pushl
inc
mov
mov
dec
inc
sub
lret
popf
inc
pop
lds
jmp
in
call
shrb
jb
lahf
dec
iret
sbb
js
faddl
xchg
mov
out
adc
xchg
mov
je
in
testl
sbb
push
je
mov
ja
inc
sub
insb
mov
mov
aaa
mov
cmp
call
mov
adc
mov
es
mov
mov
xchg
sahf
fisubl
mov
inc
sub
loopne
push
xchg
add
mov
dec
xor
iret
fnstenv
mov
xchg
cmp
cmc
inc
mov
scas
mov
or
ds
and
pushl
sub
lahf
dec
jg
and
cmc
std
xchg
aaa
cld
jge
xor
push
xchg
int3
fsubrl
jnp
mov
pushl
jp
ret
out
repnz
scas
mov
lahf
lret
or
sbb
ljmp
pop
and
divb
adc
mov
sub
cmpsl
in
std
mov
fwait
jl
clc
or
lock
xchg
icebp
jo
mov
fwait
aam
sti
and
push
push
sarb
push
gs
pop
dec
mov
movsb
mov
in
or
sahf
pushf
xor
cli
call
ret
or
scas
xchg
scas
sahf
mov
push
movsl
pushf
shll
mov
rol
mov
sbbl
test
xchg
add
aas
hlt
jo
pop
sbb
or
leave
or
inc
xlat
jo
enter
push
sub
aad
push
mov
dec
out
mov
leave
sub
test
lahf
inc
pop
cli
mov
sub
out
mov
cmp
mov
lcall
fdiv
sbb
jae
ret
jle
add
push
iret
lock
or
pop
imul
aas
dec
aad
cwtl
or
jmp
into
or
loop
adc
mov
lret
push
add
cmp
xchg
sar
fildll
mov
pushf
dec
filds
xorl
pusha
in
push
inc
cmp
dec
hlt
es
mov
push
jp
pop
lock
in
arpl
push
fbstp
lea
mov
rcl
add
ljmp
neg
and
adc
cmpb
orb
ret
out
clc
filds
outsb
add
dec
mov
cmp
mov
jne
adc
mov
mov
cmc
cs
mov
xchg
mov
push
sbb
mov
in
jns
ljmp
sbb
pop
add
inc
subl
es
test
lds
ljmp
pop
jno
idiv
pop
adc
in
inc
cmp
mov
pop
or
lret
mov
pop
mov
lea
jmp
scas
rcrb
nop
into
ret
mov
cmc
adc
or
ret
inc
jmp
xchg
add
inc
stos
sbb
cmp
or
aad
jnp
push
xchg
xchg
rcr
sbb
in
cmp
dec
test
mov
jg
sub
cli
jmp
aas
inc
in
jo
decl
jnp
orb
fisubl
test
adc
cwtl
ficoms
ss
jmp
lock
or
xchg
dec
cmp
insb
mov
xchg
les
push
sbb
add
push
std
ljmp
cs
lock
adc
inc
fdivs
pop
pop
xor
xchg
xchg
fcmovne
cli
jae
xchg
lock
ljmp
mov
les
loope
pusha
incl
inc
adc
cwtl
hlt
pushf
dec
dec
xor
andl
incl
jecxz
cmpsb
push
adc
shlb
sbb
fs
in
idivb
aaa
mov
inc
add
mov
sub
jge
mov
shr
add
sub
insb
adc
arpl
pushl
push
mov
popa
mov
cwtl
dec
incb
pusha
repz
idiv
incl
loopne
addr16
das
fucomip
jl
xchg
jp
mov
push
inc
test
decl
mulb
gs
add
push
and
outsl
call
outsl
xor
mov
std
mov
or
fcmovb
cmp
in
lods
xchg
scas
push
dec
test
jb
push
outsl
sar
push
insl
pop
pop
dec
pushf
in
or
pusha
test
mov
push
out
test
mov
shrl
jp
and
loope
jmp
sub
cmp
and
xlat
jmp
cmpsb
and
or
lret
xchg
push
sbb
ljmp
cld
pop
gs
outsb
pop
jl
and
data16
jp
pop
mov
int
cmc
xlat
pushf
mov
mov
test
xchg
sub
into
sarl
jmp
cmp
push
insb
ljmp
cld
js
inc
in
out
or
test
repnz
xchg
mov
in
and
clc
push
xor
stos
rcrl
jmp
jo
aaa
xor
test
fbld
addr16
pop
clc
push
sub
push
dec
stos
outsb
push
fdivrs
in
in
sub
pop
inc
fdivr
jg
incl
add
pop
jae
xchg
call
xor
xlat
inc
pop
fmuls
pushl
xor
push
jno
sub
les
mov
or
sub
sub
lock
incl
mov
cmpsl
in
xchg
adc
sbb
call
mov
movsl
loopne
or
in
mov
aam
jo
jo
ljmp
mov
pop
pop
push
test
lahf
roll
mov
ljmp
int3
out
repz
ret
add
lods
ljmp
or
cmpsb
dec
mov
jl
addr16
jbe
xor
push
out
out
out
push
rcrb
out
pop
or
fcomip
mov
mov
lods
adcl
imul
jl
jns
xchg
xor
push
aad
loopne
mov
jecxz
jmp
jecxz
dec
jae
mov
mov
xor
out
and
loopne
sbb
adcb
jge
decl
call
jl
je
lods
mov
into
scas
js
cmp
jbe
loopne
jle
rcl
call
or
dec
sti
ljmp
inc
sbb
or
add
notb
jg
enter
dec
and
js
mov
jmp
xor
lea
loopne
test
js
cmpsl
xor
push
testb
adc
cs
mov
jp
mov
add
std
sbb
movsb
loope
or
fstps
jnp
mov
dec
nop
mov
decl
mov
dec
push
pop
jno
repz
pop
inc
dec
xor
sub
and
or
imul
jnp
and
jmp
and
pop
stc
xchg
imul
out
pop
mov
insb
pop
dec
add
scas
ret
sbb
aaa
jge
stos
popa
pop
add
jmp
sar
mov
mov
jne
stc
dec
mov
test
loop
push
push
jp
adc
jg
popa
call
sbb
lret
das
xor
mov
aad
jp
lret
loop
lods
movsb
clc
out
clc
jmp
mov
jecxz
add
dec
cld
mov
lea
or
sbb
lcall
mov
mov
inc
daa
sarl
int
dec
call
mov
fstpt
data16
push
and
loope
mov
cmp
lcall
jle
xor
js
cwtl
dec
push
xlat
aam
push
fiadds
jp
xor
es
xchg
lcall
jno
mov
push
outsl
addr16
mov
cmp
jnp
jp
add
add
or
outsl
loop
cmp
icebp
dec
loopne
pmulhw
jbe
aas
add
shr
push
adc
stos
stos
jae
loopne
pushl
into
loop
jg
aam
push
shl
push
mov
test
xor
mov
clc
mov
mov
mov
shlb
pop
movzwl
sub
mov
das
jno
js
sub
leave
pop
inc
mov
add
ljmp
mov
enter
gs
add
out
sbbb
or
std
ljmp
xchg
shl
dec
pop
push
jns
or
out
cli
lcall
mov
incl
or
jmp
and
scas
cli
and
mov
loope
data16
scas
into
lock
jg
decl
inc
and
xchg
mov
jg
loope
inc
add
je
faddp
sbb
decl
aam
jge
cmp
add
sbb
jg
shr
fnstsw
sarb
pop
jns
in
insl
inc
sbb
bound
call
out
xchg
mov
mov
or
fcomip
xor
popf
scas
mov
filds
fnstsw
pushl
sub
pop
add
xor
pop
or
or
sub
sub
xor
sub
daa
push
es
std
and
addr16
sahf
push
addr16
popf
jge
std
sahf
xchg
in
cmp
test
push
pop
or
inc
nop
jno
mov
out
pop
and
and
mov
fcomip
adc
xor
orl
filds
adc
stos
nop
les
call
push
mulb
mul
out
rep
mov
sbb
jbe
mov
inc
dec
add
jg
sub
adc
adc
imul
in
adc
loope
sub
jbe
pop
jg
imul
jne
xor
mov
dec
fmulp
inc
mov
cltd
mov
jne
inc
cld
fldz
push
inc
ljmp
cld
add
jecxz
mov
jg
push
stos
lahf
je
ret
cmp
out
clc
jne
sar
loope
push
aad
or
and
lea
add
decl
popa
xchg
setae
mov
iret
sub
scas
mov
mov
ljmp
repnz
out
mov
nop
movsl
cmp
mov
push
mov
scas
fcompl
pushf
jbe
dec
mov
lock
xor
adc
fstpt
pop
ja
sub
jns
pop
jo
cld
testl
rcrl
loop
fstpl
cwtl
lret
cwtl
xchg
shlb
rolb
mov
nop
ja
jg
fdivrl
in
cmp
icebp
jge
andl
sbb
in
xchg
cmp
mov
cld
push
es
xchg
push
jge
daa
xlat
pop
mov
mov
mov
gs
or
inc
adc
sti
pop
cmp
push
xchg
test
movd
xchg
adc
iret
or
sarb
inc
inc
or
imul
pop
inc
stos
adc
xor
jae
xchg
popa
mov
adc
out
lret
adc
repz
aaa
sub
cli
pop
jg
fs
xor
outsb
adc
inc
ret
sub
lds
adc
or
or
lea
pop
in
cmc
cmp
lcall
sub
loopne
jne
push
nop
lods
jcxz,pt
in
out
sub
pop
and
popa
xchg
mov
sub
xchg
nop
push
or
test
mov
pop
xchg
xchg
mov
and
xchg
leave
cmovp
push
mov
sbb
sbb
adc
orb
daa
push
fcompl
xchg
scas
scas
or
dec
adc
loop
jmp
addr16
jae
mov
jmp
test
xor
lret
pop
mov
ja
or
scas
je
mov
push
loop
gs
scas
cli
lcall
jmp
mov
out
sub
stc
aam
iret
pop
out
test
mov
cmc
test
mov
loopne
repz
scas
js
adc
in
test
mov
clc
decl
jecxz
wrmsr
enter
fistl
sarb
arpl
jg
call
lods
pop
mov
add
adc
cli
adcb
mov
pop
hlt
incl
cmp
pop
cmp
leave
pusha
sbb
mov
jmp
cmp
int
test
fimuls
cli
addr16
mov
mov
decl
pop
lahf
mov
fiaddl
sbb
roll
adc
and
mov
divl
adc
dec
out
add
int
mov
loope
sbb
jbe
xchg
call
adc
je
outsl
rcll
dec
fldcw
jg
jge
push
int3
pop
xchg
inc
sub
repnz
decl
mov
jl
shll
inc
inc
in
xor
lcall
jne
cmp
wbinvd
repz
out
and
pusha
push
jmp
je
sub
jp
sub
jecxz
andb
push
jae
icebp
dec
push
cmp
jg
insl
xor
xchg
call
or
mov
outsb
cli
shl
aas
dec
jl
cmp
sub
cmp
fimull
xchg
inc
mov
lcall
call
pushf
or
mov
popf
mov
pop
add
or
lcall
pop
push
test
inc
movsb
xchg
inc
dec
jae
pop
push
sbb
inc
or
fisttpll
pushf
push
dec
sub
outsb
dec
cli
add
mov
xor
inc
jle
test
mov
into
sbb
stc
fcomip
incl
mov
cmp
add
mov
mov
int
ja
jmp
mov
xchg
xchg
push
push
adcl
and
test
and
mov
sub
scas
xchg
lock
test
or
lret
lock
decl
cmp
test
cmp
lret
lock
lcall
out
sub
scas
test
lds
mov
add
adc
imul
fcomps
scas
xor
icebp
out
jecxz
call
mov
mov
fwait
push
mov
push
or
in
add
mov
dec
pop
xorb
jg
mov
push
pop
mov
arpl
xor
mov
sbb
fidivl
adc
icebp
decl
xorl
xchg
stc
shll
inc
adc
sbb
pushl
sub
xor
dec
cmpsl
movsb
push
idivl
jne
push
push
je
fists
scas
add
fs
and
mov
stc
pushf
imulb
cmp
dec
inc
call
aaa
push
mov
lds
scas
rcrb
push
inc
inc
push
nop
decl
lret
xchg
jns
dec
into
iret
xchg
dec
ret
inc
jo
mov
fwait
aad
xor
call
jle
mov
ljmp
xchg
in
sar
je
adc
or
pushf
lods
sbb
mov
out
rcrl
loop
dec
daa
mov
iret
jno
inc
jl
jl
lcall
add
sbb
xlat
divb
addl
or
scas
adcl
scas
add
mov
ljmp
cmpb
mov
lcall
cmp
sbb
enter
lcall
inc
outsb
fwait
test
es
call
mov
jbe
fs
cmp
xor
inc
push
dec
loopne
sti
push
lods
jno
mov
imul
cs
movsl
in
pop
hlt
sbb
mov
cltd
leave
pop
test
pushf
and
cmp
test
ror
ret
jb
test
cmp
call
pushl
xor
lcall
push
scas
decl
outsb
sub
mov
jl
add
push
mov
or
repnz
sbb
pushl
insl
pop
xchg
movsl
jae
push
loope
test
mov
jl
jg
pop
cmc
daa
adc
divb
pop
mov
ret
mov
and
xlat
call
fcmovnbe
sbb
fnstenv
in
fidivl
data16
mov
or
mov
sbb
adc
shrb
nop
adc
imul
or
jle
pop
call
into
xlat
push
aam
jl
sbb
leave
pop
int3
insb
lds
ss
outsb
mov
dec
fsubrs
testb
cmpsl
popa
and
ret
sub
inc
push
fsubrl
xchg
dec
cmc
fnstcw
shrl
jbe
popw
cmpb
lret
adc
mov
add
xchg
adc
mov
adcb
pop
xchg
push
adc
inc
mov
aad
xchg
incl
fisubs
and
mov
mov
shrb
jmp
int
mov
or
mov
in
mov
mov
clc
pop
push
ljmp
notb
dec
lahf
dec
stos
push
in
jno
gs
sbb
xor
insl
call
jecxz
jp
pop
fdivl
pushf
jo
dec
xchg
cmp
pop
fistl
into
mov
in
fstpt
ljmp
jns
in
nop
mov
inc
in
outsl
xchg
ffreep
push
and
push
or
sbb
les
lret
fists
mov
mov
jns
mov
sub
mov
divb
and
and
mov
ret
sub
mov
adcb
fmuls
jno
popf
out
inc
out
enter
rcl
ret
push
fnstenv
insl
ljmp
sub
xchg
xlat
or
pop
push
dec
cmp
inc
xor
decl
xchg
add
cltd
add
imul
xor
jmp
mov
or
add
lea
add
addl
dec
sbbb
sbb
imul
leave
shlb
inc
or
sub
adc
in
outsl
call
or
pop
mov
jno
ds
enter
out
call
cli
test
mov
inc
pop
xchg
xor
lea
inc
decl
incb
icebp
inc
pop
insb
pop
xchg
or
mov
lea
jns
and
add
push
dec
or
call
fwait
dec
fs
xchg
xchg
aam
pop
cmp
pop
leave
adc
mov
cld
xchg
cmp
popf
add
pop
sar
pushl
xlat
dec
sub
les
mov
fisubrl
cmpsl
test
lds
das
in
inc
xchg
pop
adc
fcoms
adc
daa
push
push
sbb
movsb
out
faddp
dec
mov
mov
jmp
imul
sub
cmpsb
jl
pop
outsb
outsb
lock
clc
lds
jae
rorl
lcall
in
xor
outsl
mov
insb
sbb
mov
aam
stos
inc
lcall
jmp
je
mov
jecxz
nop
mov
shlb
push
pop
dec
int3
mov
jmp
push
adc
cmpsb
mov
mov
jo
rcrb
sbb
push
mov
call
lods
jae
leave
outsb
add
lret
filds
clc
mov
cmp
xchg
mov
xchg
aas
xor
hlt
dec
jo
aas
loopne
scas
ljmp
xchg
and
call
cmp
jmp
repnz
lods
enter
xchg
lcall
xchg
int3
imul
and
jg
mov
mov
mov
mov
add
mov
mov
lcall
dec
dec
mov
loopne
sub
xor
jp
pushl
sub
movsb
gs
add
ficompl
je
jl
nop
out
icebp
int
int
cmp
mov
out
and
inc
icebp
nop
inc
add
js
loop
sahf
pop
sbb
mov
xor
enter
mov
call
xchg
dec
cmp
test
lods
or
negb
movsb
les
add
mov
out
mov
cmpsb
arpl
dec
add
jne
scas
mov
nop
in
jecxz
inc
push
sub
repz
fisttps
in
int3
imul
ss
lea
sub
pushl
push
ficomps
mov
outsl
mov
mov
push
adc
sar
lcall
mov
cmp
sbb
and
outsb
push
filds
dec
into
cmpsl
xchg
ja
iret
jo
cmpsl
scas
rcrb
mov
jp
pop
push
stc
shlb
out
jo
out
cld
cli
sub
or
xor
mov
addr16
test
cld
xchg
int
push
push
sbb
inc
pop
std
lock
dec
adc
dec
incb
mov
xchg
jns
enter
jp
pushl
mov
les
push
push
xchg
mov
out
pop
lods
cmp
cmpsl
xchg
jg
mov
push
dec
mov
add
stos
repnz
fsubs
in
mov
incb
bound
mov
aas
out
sbb
cmp
out
out
adc
xchg
ret
mov
xor
jle
mov
cld
out
in
test
sub
adc
and
cmc
std
lcall
mov
enter
out
shlb
divb
or
cmp
pusha
mov
inc
inc
sti
xor
aas
add
cmp
decl
es
or
cmc
xchg
pop
fs
loope
clc
incl
test
push
loope
ss
cmpb
insl
cmp
rcll
inc
mov
ljmp
mov
leave
xchg
and
sub
xor
mov
faddl
cmp
out
mov
jge
dec
push
sub
mov
pushl
sub
mov
popa
mov
arpl
stos
pop
sbb
push
mov
push
gs
jmp
cmp
push
pushf
mov
out
test
ljmp
adc
out
mov
inc
test
push
lods
hlt
test
mov
mov
dec
inc
fistps
mov
enter
cmc
mov
push
fs
inc
xchg
outsl
lock
pushl
xchg
cltd
in
add
jecxz
in
add
xor
pop
out
int
adc
mov
mov
add
lcall
into
pop
mov
lds
pop
xor
insl
test
pusha
je
ret
xchg
add
test
cmovae
cld
cmp
xor
insb
mov
adc
mov
jmp
out
test
mov
iret
fdivr
outsl
xchg
movsb
dec
mov
es
inc
es
pop
mov
call
cmp
in
dec
xchg
arpl
cwtl
dec
stc
jb
or
ljmp
xchg
je
shll
cmp
jno
scas
orb
xor
lea
dec
out
les
push
fdivs
ljmp
pop
outsl
xchg
daa
test
mov
xor
jl
push
mov
xor
mov
mov
test
mov
mov
xchg
push
cmp
das
aas
jne
adc
inc
mov
mov
fiaddl
mov
shrb
imulb
call
fs
jno
sub
adc
stos
jmp
loope
repz
or
mov
scas
lahf
mov
cwtl
xor
std
pop
pushl
push
sarb
ds
int3
lahf
cltd
loop
orb
notl
pushl
cld
faddl
inc
push
cwtl
dec
pop
daa
mov
pop
loope
lods
and
jbe
jo
decl
fmuls
stos
or
shl
es
cmp
adc
das
pop
sahf
jecxz
loop
mov
and
xchg
out
sub
sub
mov
add
decl
shrl
mov
jg
movsb
jns
sarb
jp
lods
pop
and
xor
call
lahf
jge
dec
leave
dec
insb
fdivr
ljmp
js
mov
mov
enter
call
rcll
and
mov
ss
mov
xchg
sub
daa
add
sbb
rorl
imul
adc
movsl
lods
cmc
jge
ret
je
xchg
aas
mov
push
jp
inc
inc
mov
mov
sbb
pop
enter
negl
imul
pop
rorb
mov
jno
loopne
or
mov
sub
daa
popa
jae
movsl
mov
out
mov
mov
and
pop
sar
filds
scas
jmp
outsb
jbe
sub
jae
jnp
pop
subl
jg
xor
ficoms
push
pop
pop
adc
pop
mov
adc
jmp
ljmp
and
mov
shrb
push
sbb
sbb
out
pusha
or
jne
int3
mov
ret
pop
mov
ret
jbe
fdivrl
decl
outsb
movsb
xchg
fisttps
stos
ss
ja
jle
scas
mov
mov
gs
rcll
xlat
push
inc
sbb
cmp
movsb
mov
push
xor
mov
cltd
loopne
push
andb
lcall
cmpb
xlat
movsb
sar
fmul
adc
fdiv
mov
inc
xchg
xchg
scas
out
dec
mov
push
pop
int3
push
and
lods
add
or
idiv
decl
popa
jecxz
adc
cmc
in
mov
pop
or
jo
arpl
mov
sbb
sbb
rolb
incl
adc
aad
pop
sub
fucompp
dec
jge
das
fs
jg
pop
add
lret
mov
ret
dec
dec
sub
add
lcall
out
movsb
mov
stc
sub
cmp
arpl
les
fs
push
push
int3
cmp
push
jg
lahf
mov
inc
cmp
pop
pushl
fimull
ret
and
insb
mov
fildll
cli
add
mov
adc
pop
fidivrs
xchg
mov
add
jno
mov
inc
dec
enter
dec
push
sub
loopne
daa
mov
data16
jo
dec
pop
mov
cmpl
sub
push
push
inc
sub
push
cmp
cltd
pushl
xor
enter
lcall
mov
aaa
sbb
sahf
addr16
call
shlb
std
push
sub
scas
test
cmp
shlb
data16
cmp
insb
imul
call
jp
leave
lea
lret
dec
fs
in
inc
bound
decl
stos
es
sub
rorl
int
mov
sbb
xchg
daa
jno
mov
jle
cld
test
mov
int3
into
dec
or
pop
cs
stos
cmp
jp
mov
ljmp
inc
imul
je
icebp
sub
pushl
shll
xlat
dec
xchg
std
sbb
jae
xchg
xor
pop
js
xchg
pop
imul
dec
mov
pushl
cld
mov
cli
pop
inc
mov
jno
push
call
jmp
fsubr
jmp
push
enter
jmp
fs
pushl
enter
in
push
dec
mov
mov
or
inc
adc
mov
repnz
imul
notl
insb
mov
out
pop
dec
lods
pop
push
icebp
mov
js
dec
jb
xchg
cmc
push
rorl
inc
int
inc
mov
mov
mov
testb
and
push
jg
ljmp
rolb
inc
jle
mov
lds
inc
es
pushl
std
xor
mov
call
and
mov
push
jge
ds
or
filds
xor
in
lods
rorb
lock
dec
xor
and
decl
stos
filds
hlt
add
cmp
int
movsb
push
imul
icebp
out
pushl
inc
loopne
cwtl
jno
and
sbb
cld
cmp
xchg
inc
pop
mov
call
ja
imul
andb
bound
jmp
ljmp
dec
jp
lock
sahf
or
and
and
pop
pushf
sub
das
js
enter
jg
jbe
and
or
cmp
ss
incl
mov
loopnew
imul
push
mov
push
push
or
out
pop
das
mov
ljmp
sti
clc
test
mov
xchg
in
adc
stos
out
clc
stc
or
push
nop
pop
xor
dec
dec
out
pop
xchg
int3
movsl
jmp
or
ljmp
mov
mov
cmpsb
enter
jmp
jns
faddl
mov
xchg
lret
lds
jecxz
cmpb
cmp
push
stos
inc
and
enter
xchg
lods
stos
popf
xchg
rcll
sar
outsb
lods
sbb
decl
inc
add
sbb
cmc
lret
cmp
xchg
jge
xchg
fcmovb
lret
add
push
movsl
decl
ja
cmpsl
js
push
sbb
sti
inc
or
in
jg
mov
cmp
fdivrs
testl
mov
popa
aas
cmp
pop
in
incl
mov
mov
mov
jp
inc
and
mov
ljmp
mov
stos
push
nop
rorb
mov
cmpsb
push
imul
jns
xchg
mov
lcall
mov
enter
xchg
je,pn
enter
adc
dec
cmpsb
test
mov
stos
add
jmp
inc
add
pop
or
iret
jmp
mov
daa
testl
or
jle
push
pop
mov
in
call
ljmp
repz
scas
hlt
int3
or
xchg
nop
out
rcrl
inc
loopne
mov
cltd
jge
inc
loop
dec
clc
call
pusha
xchg
sub
imul
mov
and
incl
pop
mov
enter
and
inc
mov
pop
sbb
push
jmp
sbb
ljmp
xchg
or
arpl
push
repz
loop
sbb
fs
and
lcall
fldpi
loop
inc
adc
lods
ljmp
and
push
xlat
jle
jge
aam
insl
pop
push
inc
xchg
inc
decl
sub
cmp
scas
int
in
adc
xor
jmp
push
mov
fcomip
filds
cmp
jle
les
sbb
lahf
movsl
mov
aaa
sub
insb
mov
insb
aaa
test
stos
and
fcomip
push
jb
movsb
xorb
pop
mov
mov
jecxz
call
testb
lds
mov
push
leave
cltd
push
dec
mov
inc
movsl
add
add
adc
jmp
jo
dec
pop
adc
aaa
mov
hlt
mov
jle
cmp
out
imul
lock
dec
shlb
test
xchg
pop
sub
push
mov
mov
mov
jmp
call
pop
jg
andl
jecxz
int
and
jp
shrb
mov
pop
paddw
lods
mov
mov
or
inc
pusha
cmp
call
loop
cmp
xchg
sbb
mov
leave
sarl
sub
decl
pusha
mov
enter
fidivs
out
fisubrl
dec
or
mov
mov
cli
repnz
push
bound
enter
lods
mov
jmp
push
cmc
sbb
testl
dec
or
rcrl
stos
inc
and
ret
sti
xor
mov
pop
leave
sbb
rorl
ds
xchg
cs
mov
jmp
xlat
es
pmulhw
cwtl
xchg
push
sbb
data16
loope
adc
in
rcr
js
sbb
jns
aad
mov
inc
cli
imul
call
std
xchg
lcall
push
fcoml
sub
pop
dec
in
daa
adc
add
push
xchg
sti
in
stos
pop
push
xchg
pop
pop
push
mov
hlt
rol
ja
push
incl
adc
pop
or
push
in
into
mov
xor
push
mov
jmp
call
arpl
sahf
out
pushf
daa
mov
dec
insb
int3
pop
cmp
data16
subl
incl
push
inc
mov
into
and
mov
mov
cli
dec
add
sbb
aaa
inc
inc
pop
mov
cltd
jmp
and
in
push
insl
aad
push
pop
fcoms
mov
xlat
mov
in
lahf
es
push
mov
dec
push
jl
pop
int
mov
push
jmp
and
call
jno
adc
cwtl
jmp
adc
jo
push
pop
pop
mov
mov
call
push
and
cli
mov
outsb
or
jne
jp
mov
enter
or
es
jp
out
cmp
cli
add
inc
leave
dec
fwait
aam
xor
shrl
leave
pop
and
adc
pushl
mov
xchg
jmp
push
cmp
jo
push
aas
xchg
sbbl
lods
rcr
call
sbb
sti
divl
outsb
jbe
sub
pop
outsb
test
hlt
lret
out
enter
mov
mov
call
pop
jnp
lds
dec
inc
je
or
rclb
es
mov
jne
cld
mov
mov
dec
outsl
jmp
imul
sbb
push
push
lea
out
stos
decl
pop
scas
lret
sbbl
adc
push
cmpl
push
push
shrb
dec
pushf
ret
sub
movsb
xchg
decl
and
les
and
test
insb
inc
mov
xadd
in
les
cmp
inc
int3
lds
jno
mov
dec
dec
xchg
cmp
pop
push
les
fs
dec
js
pusha
push
add
out
cli
out
and
or
insb
orl
jmp
dec
psllq
enter
dec
adc
icebp
or
adc
testl
xlat
fadd
scas
lea
lock
fildll
and
sbb
jmp
pop
lods
add
lahf
mov
sbb
movsl
fisttpll
or
imulb
es
jo
ljmp
aas
xchg
or
lret
out
out
xor
sbb
jmp
shrl
insl
gs
movsl
sbb
sub
xor
cmp
test
scas
fwait
pusha
aam
cmpsl
call
les
mov
gs
pop
mov
jmp
leave
jmp
pop
lcall
popa
cmp
ds
cmc
cmp
das
mov
xchg
idiv
dec
dec
test
adc
xchg
or
dec
daa
mov
ss
lea
sbb
cli
lock
incl
lahf
push
pop
jnp
repnz
push
mov
push
je
cmpb
ss
mov
cmp
decl
lea
cltd
cli
jbe
iret
mov
test
lcall
pop
imul
or
fwait
loopne
lcall
dec
pop
dec
jg
roll
fcom
scas
movsb
sub
mov
js
xor
insb
sar
fbld
push
add
push
or
dec
push
and
clc
ret
mov
inc
mull
cmp
fs
mov
fistpll
andb
lret
addr16
xchg
mov
ljmp
sub
loope
sti
repnz
cmp
and
mov
pop
subb
dec
je
fwait
insb
call
adc
fdivrl
xchg
and
pushl
test
pop
int3
pop
xlat
sub
or
dec
fisubrl
test
imul
int
call
lds
mov
mov
pushl
cli
bound
xchg
adc
mov
sub
ret
adc
filds
hlt
lds
lret
mov
jecxz
repz
push
jp
xchg
push
inc
dec
xor
daa
sbb
xor
inc
and
shrl
pop
repz
inc
mov
incl
jno
les
hlt
inc
mov
fdivr
add
hlt
fdivrl
test
lcall
fs
icebp
cmp
mov
test
mov
mov
repnz
std
call
lods
movsb
mov
pcmpeqd
adc
jl
mov
lcall
outsl
clc
xchg
sbb
rol
lcall
jmp
shll
int
addr16
push
out
test
dec
je
xorb
jbe
shlb
decl
jnp
dec
insl
sbb
adc
fdivs
stos
fwait
into
and
outsl
sub
sbb
in
pop
and
sbb
ffree
dec
jl
popa
push
jmp
int3
pusha
aam
pop
add
jb
xchg
out
pop
pop
cmc
dec
add
repnz
lods
adc
jg
push
popf
lcall
pop
loopne
aad
ss
rorb
jmp
sbb
sub
cli
test
sbb
divb
mov
inc
inc
aaa
mov
xor
mov
dec
nop
xlat
out
clc
pushl
inc
inc
mov
std
loopne
and
adc
movsb
rcrl
pop
sahf
push
mov
out
mov
fcoms
push
add
ret
int
lds
lcall
outsl
das
cmp
and
hlt
sub
loope
repnz
xchg
cmp
repz
jo
inc
movsb
cmp
imul
inc
int
and
decl
xorb
arpl
xchg
inc
cmc
jbe
test
inc
xchg
loop
inc
imul
fcomp
add
jns
dec
adc
dec
lea
and
sub
jle
jg
scas
jo
and
icebp
ss
sub
jmp
rolb
dec
sub
cltd
mov
jle
pop
jl
jl
outsb
inc
push
int3
dec
adc
jecxz
out
pushf
xchg
jg
aas
shlb
addr16
clc
mov
stc
mov
sahf
inc
andl
fwait
mov
cmp
dec
dec
pop
lcall
dec
or
fdivs
xchg
dec
jae
inc
jae
xor
push
mov
mov
push
inc
ljmp
pop
dec
imul
fwait
mov
js
dec
cmp
or
call
cmpsl
clc
mov
inc
sub
sub
jbe
mov
mov
cwtl
ret
jmp
xchg
fcmovnbe
jle
pop
in
fwait
pop
lock
inc
imul
shl
in
pusha
cld
jg
fildl
ss
inc
scas
cmp
inc
test
movsl
out
decl
ja
sub
mov
scas
push
push
mov
jb
jp
incl
imul
ss
jnp
xchg
lods
mov
ljmp
adc
inc
sub
and
dec
lea
sub
cmp
imul
and
int
in
jnp
je
add
push
imul
ljmp
sbb
in
push
push
or
sbb
add
ljmp
pop
push
inc
imul
sahf
mov
and
stc
fiaddl
pop
cs
pop
ds
dec
xchg
gs
outsb
or
adc
sub
jg
decl
pop
mov
aas
fs
loope
dec
sub
mov
std
mov
lret
arpl
cmp
loop
mov
pop
int3
jge
push
mov
lret
xor
idivb
ror
out
stc
xor
inc
xchg
lods
hlt
sarl
pop
fs
scas
push
sub
xchg
imul
out
fdivr
sbb
popl
xor
lahf
mull
push
or
fwait
cmp
aas
cs
cmp
mov
test
aam
call
js
mov
cltd
jns
jmp
inc
cli
jecxz
rclb
insl
fbstp
jo
mov
pop
test
jb
mov
or
nop
inc
xchg
je
mov
pop
or
out
mov
mov
ja
and
or
incl
pushf
jge
xchg
push
daa
imul
adcb
add
imul
dec
ret
punpcklwd
fsubp
or
mov
and
fcomip
call
push
adc
dec
and
xchg
loop
inc
xor
push
pusha
push
pop
aas
shr
lods
call
mov
cmc
test
sbb
or
call
ret
sahf
adc
jecxz
icebp
cmp
push
cli
mov
mov
mov
std
cmp
inc
jg
fcmove
aas
dec
jecxz
mov
stos
adc
fisttpl
inc
xor
fucomp
lret
stc
popa
jo
mov
aaa
push
mov
or
mov
fistl
add
je
jle
and
jae
aam
and
ja
and
pop
pop
mov
jmp
or
mov
adc
fidivl
cmpsb
jg
cwtl
in
inc
push
decl
xchg
insl
sbb
shll
repnz
inc
xor
push
aas
jp
leave
stos
and
mov
cwtl
out
xor
dec
aas
xor
jmp
xor
mov
ret
jo
push
js
mov
call
adc
out
mov
cwtl
xchg
dec
push
jle
out
lahf
mov
and
xchg
jns
mov
data16
sub
and
mov
push
dec
mov
cmp
test
sbb
and
pusha
mov
scas
lahf
int
or
lcall
inc
add
popa
jno
mov
test
rorb
adc
dec
add
adc
or
inc
jg
das
lret
cmp
std
inc
in
jmp
mov
pop
test
xchg
ljmp
loop
enter
outsl
push
rol
add
ljmp
dec
and
cmp
jle
idivb
mov
popa
decl
cli
rcll
clc
push
lcall
fsubrl
addr16
xchg
jae
pushl
std
lcall
lcall
ret
sub
mov
shl
lds
lcall
add
ljmp
push
lret
addr16
fimuls
insl
aam
pop
inc
cld
mov
pop
idiv
std
fcmove
jl
inc
jbe
jns
inc
das
imul
adc
fwait
mov
incl
les
aad
and
mov
das
sub
jbe
lcall
movsl
rcl
test
sbb
adc
push
ljmp
xor
xor
mov
call
add
cmpsb
mov
rorl
insl
popa
ret
adc
aam
dec
cmp
jmp
in
jl
mov
mov
aas
es
addb
ss
pop
fidivrl
cmp
pop
ret
dec
push
in
je
inc
pushl
mov
lea
dec
lea
push
push
rcl
popf
push
iret
ss
loopne
decl
push
sub
hlt
mov
push
ljmp
pop
jae
push
xchg
lret
jg
pop
lret
fwait
push
imul
loopne
pop
xor
loop
xchg
outsb
imul
leave
or
inc
mov
or
sub
mov
jmp
popf
int
int
jge
or
movsl
cmp
pop
stc
mov
out
mov
jb
cld
incl
outsl
aam
sti
fildll
and
mov
shll
call
push
cmpsb
test
call
or
adc
xor
lret
push
mov
sbb
fdivrl
cltd
insb
in
divb
gs
push
mov
lods
and
add
jae
push
popf
mov
mov
xor
xchg
ret
inc
cmp
mov
pop
icebp
cld
mov
pop
dec
jge
and
mov
push
sbb
das
pop
dec
dec
dec
notb
fcomip
decl
push
or
lret
mov
and
pop
movsb
push
cli
or
ret
lret
pushl
iret
xor
cmp
orl
xchg
lahf
popa
cmp
xlat
jg
icebp
test
jmp
and
movsl
pop
xchg
jb
jo
jecxz
es
push
cltd
addr16
pop
inc
int
pushl
add
popa
jnp
js
fs
adc
dec
and
xadd
push
out
ljmp
xor
xor
dec
jge
movb
inc
pop
imulb
jmp
jp
pushf
push
dec
pop
xor
cmpsl
inc
jb
mov
xor
xor
inc
out
cmp
xchg
stc
mov
xlat
popa
pop
into
xchg
loop,pt
xor
adc
ljmp
or
jg
jecxz
and
cmp
outsb
inc
pop
gs
sbb
inc
fs
jmp
sbbb
jne
leave
cmpxchg
popf
stos
addr16
adc
pop
sahf
inc
fists
push
lahf
sub
das
jg
ljmp
jno
jmp
add
sbbb
iret
jb
cltd
loopne
stos
les
mov
mov
daa
dec
ret
cld
mov
dec
std
jmp
jnp
jno
lea
inc
sbb
jb
adc
mov
xor
mov
ljmp
fmull
cmpsb
and
sub
pop
les
push
inc
aas
fmuls
mov
add
mov
popa
xor
pushf
mov
call
pusha
lods
in
sbb
loope
adc
mov
fldl
sub
dec
imul
sbb
add
insl
rorl
fcmovb
rclb
or
cmp
decl
or
aaa
jne
repz
add
push
scas
outsl
stos
mov
cs
mov
dec
xchg
jmp
ljmp
call
icebp
and
es
imul
pusha
push
dec
mov
pop
pop
sbbb
add
ljmp
cmp
mov
les
mov
je
iret
out
add
lcall
mov
adc
imul
xor
decl
mov
xchg
lcall
mov
add
mov
mov
ja
repz
mov
dec
lock
add
test
testl
outsl
clc
jmp
movsb
insl
dec
lea
mov
mov
or
fsubrs
jl
pushl
subl
bnd
push
mov
insl
test
mov
ljmp
insl
push
push
sub
xchg
xchg
pushf
pusha
outsb
jg
lods
cmpsb
cli
mov
aas
push
inc
jle
cmp
ljmp
xor
cli
clc
push
in
js
outsl
dec
test
sbb
jmp
add
leave
in
sbb
out
or
sbb
and
add
jg
mul
pop
and
cltd
or
pop
jge
cmp
out
clc
incl
out
loope
fldl
addb
jae
mov
adc
sub
sbb
mov
call
xchg
notl
jl
inc
xchg
jae
jbe
adc
pop
ds
lcall
mov
dec
pop
inc
out
fsubs
xor
push
mov
popa
jecxz
fildl
lock
test
popa
or
add
fnsave
je
xor
mov
gs
xor
sub
add
gs
cli
jecxz
sbb
xchg
fcoms
incl
xor
movsb
in
and
mov
aas
xchg
insb
fnstcw
fdivr
mov
lret
adc
push
pop
cli
xchg
ss
or
jg
xchg
jge
jp
add
movb
mov
repnz
cmpsb
into
fsubp
add
or
call
out
lods
xchg
imul
sub
int
repz
fwait
lret
lret
out
call
mov
jnp
push
mov
popf
out
jo
std
push
or
push
pop
loopne
cmpsl
mov
xchg
xor
std
push
jo
loop
jg
incb
mov
dec
xorb
mov
imul
xor
xlat
sub
adc
repz
ret
xor
cmp
cmovp
pushl
push
cli
inc
mov
xchg
cmp
lods
add
ret
and
in
jno
push
mov
push
mov
ret
repnz
decl
or
or
pop
stc
or
aam
inc
and
cmpsl
mov
je
mov
mov
fistps
jp
mov
rcll
pushl
xor
aas
stos
std
std
sbb
jecxz
std
add
sub
or
adc
sbb
hlt
jno
add
mov
stos
jo
lock
or
movsb
jnp
cmc
cmp
daa
mov
incl
xchg
clc
add
call
test
jmp
mov
out
or
cli
pop
hlt
cmp
lcall
setno
decl
clc
addr16
pop
arpl
adc
mov
iret
div
sahf
mov
sub
sub
pop
addr16
sub
xor
xor
sarb
shrl
fldt
inc
out
dec
es
es
add
push
cmp
xchg
pop
lret
push
std
cmp
xor
inc
xchg
mov
and
pop
or
sarb
add
in
adc
decl
pushl
in
adc
mov
add
jmp
lea
decl
decb
pop
out
inc
inc
xlat
mov
jmp
push
arpl
add
loop
out
xchg
pop
dec
xchg
stos
sti
jl
aam
incl
inc
dec
aam
adcb
clc
jbe
aam
jg
pop
xor
lea
jg
incl
inc
pop
jmp
mov
sub
arpl
mov
ljmp
jg
mov
inc
cmpsl
cli
das
jge
jne
mov
sbb
add
xchg
jns
es
ljmp
lds
cmp
mov
dec
addl
lods
mov
xor
add
jp
cmpsb
mov
pop
cmp
push
ja
sbb
cmc
fildll
fistps
out
dec
inc
into
dec
scas
mov
or
xchg
fistps
fwait
cltd
roll
jp
pop
pop
stos
into
adc
sub
into
pop
ret
mov
sub
sub
ljmp
prefetcht0
xor
je
xchg
xchg
xchg
and
loopne
jp
mov
jge
push
clc
xor
cld
loop
inc
cwtl
scas
xor
cmp
pop
jbe
ja
mov
jne
out
es
add
cmp
dec
jecxz
imul
clc
mov
loope
test
sbb
pop
mov
jg
lcall
fcmovnb
clc
lret
xchg
jnp
xor
inc
les
roll
and
cli
std
lods
mov
sti
inc
out
addr16
ljmp
loop
adc
sub
mov
decl
fdivl
xor
out
push
mov
push
ljmp
and
clc
ljmp
out
mov
adc
lods
xchg
jle
mov
sbb
xchg
or
out
in
jbe
push
cs
adc
lahf
lods
incl
mov
mov
lods
dec
lock
int
mov
xor
repz
jp
inc
pop
lcall
lea
iret
cmp
jnp
rclb
push
sub
jg
pushl
cmp
clc
repz
mov
testb
fnsave
test
jns
jmp
movsl
and
pop
dec
out
sbb
ret
pop
pop
push
xor
ret
inc
test
pop
push
mov
mov
pushf
or
stos
sub
mov
imul
push
ljmp
adc
mov
and
lret
push
nop
push
xchg
jnp
jmp
push
pop
jns
sbb
dec
ds
stos
inc
decb
dec
call
incl
das
ljmp
nop
nop
add
and
dec
in
adc
pop
cld
mov
ss
mov
mov
dec
push
int3
push
push
mov
lcall
cmp
incl
xchg
iret
push
stos
ficompl
fcomps
stos
pop
and
or
mov
fsubp
insl
mov
inc
shl
push
and
jg
add
xlat
adc
js
fisubl
cld
insb
popa
jmp
popa
xor
and
jge
jae
fwait
loopne
mov
inc
lcall
mov
lret
cs
and
add
pop
jnp
outsb
push
in
xor
cmpsl
mov
jne
out
push
cmp
jno
out
fidivrl
add
loopne
jb
lcall
inc
mov
cmp
cli
sbb
out
bound
mov
insl
and
incl
fnsaves
or
dec
popf
lcall
xor
leave
sbb
clc
movsl
lods
adc
push
mov
xchg
ror
inc
loopne
cmp
stos
push
gs
aas
dec
or
push
xchg
rcrb
inc
adc
incl
std
lcall
ret
or
push
shlb
lahf
xor
call
xchg
xchg
or
mov
mov
stos
mov
xor
mov
pop
sub
emms
imul
pop
pop
pop
push
ret
adc
fwait
adc
jge
mov
aam
and
push
imul
or
sub
lret
push
aas
into
loopne
xor
dec
cmp
arpl
enter
ljmp
in
pop
shrb
pop
lahf
sar
jge
or
sbb
xlat
stc
mov
cmc
fcompl
xchg
jmp
xor
ds
fists
mov
cld
jmp
fdivr
adc
ss
dec
sti
cmpsb
in
mov
xchg
je
sbb
call
jb
int
and
testl
push
lcall
ss
lcall
call
push
inc
add
outsl
push
pop
cwtl
mov
and
cmp
loope
xchg
sub
sbb
ja
cmpsb
movsb
stos
dec
mov
out
pop
add
xchg
adc
mov
xchg
icebp
add
outsb
jl
arpl
push
sbb
scas
jbe
in
fldenv
cmp
dec
cs
decl
and
test
adc
arpl
adc
cmc
scas
jo
mov
cld
pop
into
icebp
cltd
in
movsb
pushl
das
int
imul
mov
ficomps
mov
imul
dec
push
push
aaa
sub
inc
imul
cld
pushl
mov
mov
inc
ret
push
or
mov
add
movups
stos
xchg
ret
cld
lret
inc
xlat
push
mov
into
orl
decl
jns
xor
bnd
dec
mov
aad
jg
mov
fisubs
xchg
test
jge
xor
or
jge
cmp
or
cmp
pushl
or
add
js
pop
dec
fscale
call
sarl
sbb
adc
mov
push
pop
fistpl
lds
push
lret
xorl
jge
push
lret
jle
adc
mov
rorl
push
daa
ret
enter
lret
rcrb
push
cltd
mov
in
pop
pop
or
enter
mov
test
adc
or
test
stos
adc
inc
mov
dec
out
pushl
xchg
outsb
popa
dec
aad
aas
mov
in
shrl
pop
add
push
into
das
mov
sub
push
mov
imull
push
aaa
pop
adc
pop
test
xorb
rcrl
lcall
repz
xchg
gs
lea
lahf
es
cmpsl
xchg
or
xor
lcall
lods
dec
mov
push
mov
mov
iret
mov
test
repnz
sbb
nop
mov
cmp
push
dec
push
pop
int3
pop
in
xchg
aaa
stos
aad
shrb
cs
pop
mov
push
dec
sub
jne
adc
incl
ficomps
cmp
or
xchg
movb
mov
xchg
push
add
pushl
incl
in
or
adc
mov
mov
fisubl
popa
mov
xchg
mov
push
mov
mov
lcall
adc
inc
xor
std
insb
push
rolb
adc
cmp
outsl
clc
and
pusha
jbe
jp
int3
mov
imul
pop
movsb
adc
jg
hlt
mov
fildll
pop
or
iret
arpl
jns
mov
test
outsb
jle
mov
js
xor
pop
push
scas
mov
ljmp
decl
mov
add
ljmp
push
out
pushf
fnstsw
add
sub
xchg
mov
dec
pop
test
das
mov
roll
mov
in
add
inc
mov
add
in
out
cld
ljmp
fnstsw
lods
xchg
inc
pusha
push
lret
arpl
incl
jo
into
lret
lock
and
push
inc
addb
sbb
jmp
mov
das
shl
sbbl
inc
ss
out
mov
ds
jae
lock
jecxz
mov
jl
pop
icebp
jb
xor
shll
add
ds
call
cld
push
adc
or
push
mov
mov
repz
xchg
inc
jp
pop
sub
out
loopne
decl
and
mov
push
rcrl
dec
pand
xchg
jbe
jg
jmp
mov
fsubrs
dec
outsl
mov
test
add
decl
out
mov
mov
push
pop
or
cmpb
inc
enter
pop
sub
add
mov
in
mov
mov
dec
xlat
mov
cmp
mov
pop
jb
mov
test
add
repz
in
dec
bound
jmp
inc
out
call
setp
and
movsb
xchg
mov
scas
popf
cmp
xchg
add
aas
outsl
xor
decl
pop
sarb
pop
or
add
dec
jbe
fidivs
cmc
ljmp
push
jg
ljmp
mov
rcll
adc
push
pop
xchg
mov
int3
sti
in
aad
mov
ljmp
shrl
xor
pop
leave
mov
push
mov
lods
pop
cmc
cmp
fistps
pop
rcrl
cmpsb
sbb
push
inc
xchg
cmp
stos
jns
mov
mov
stc
dec
cmp
cmpsb
aas
and
call
xor
testb
je
add
je
mov
xchg
dec
pop
add
pushl
sahf
mov
icebp
mov
rcll
ficoml
je
call
jb
mov
mov
pop
xor
repnz
popf
inc
aas
sub
jne
push
mov
mov
stos
mov
add
jg
and
cmovb
jmp
and
rclb
addb
call
xchg
or
inc
fidivrl
call
mov
push
inc
pop
add
mov
mov
mov
rorl
xchg
aam
mov
ret
xchg
mov
popa
hlt
mov
pop
mov
mov
xor
jp
jns
jne
popa
and
stos
xchg
mov
aas
push
cmpsb
inc
repz
mov
es
push
adc
mov
sti
dec
mov
sti
enter
xor
call
cmpsl
pop
flds
jmp
and
outsb
and
mov
jl
fwait
or
sar
pop
cld
mov
lea
mov
jmp
xchg
dec
out
mov
int3
out
or
add
dec
add
pop
inc
push
idiv
data16
ljmp
mov
inc
xor
in
pop
dec
ja
cmp
ret
jp
xchg
int3
call
pop
stos
ljmp
and
imul
mov
push
inc
dec
push
leave
push
shlb
ret
std
js
aaa
push
stc
mov
loopne
xchg
jae
out
into
jbe
mov
inc
cmpsb
cmp
pushf
pop
shrb
push
decl
and
in
sahf
test
push
cmp
call
leave
mov
ret
jecxz
dec
inc
mov
mov
push
push
push
pop
or
cmp
call
aas
push
pop
sti
stos
fwait
jb
aaa
in
repnz
add
pop
lcall
cmp
mov
push
cltd
mov
out
mov
cmp
cld
das
sub
push
pop
daa
jl
sub
pop
shlb
pop
xchg
or
pop
bnd
daa
pop
cld
add
shll
rcl
mov
inc
jmp
jecxz
jecxz
add
jmp
mov
cmp
and
dec
lcall
data16
call
nop
data16
movsl
inc
mov
mov
xchg
stos
jno
lcall
cld
mov
push
mov
mov
call
addr16
sbb
adcb
clc
insl
inc
lahf
push
shlb
imul
inc
pop
cld
ljmp
test
icebp
jecxz
push
inc
xchg
fidivrl
dec
sahf
adc
outsl
ret
add
aas
std
test
decl
mov
cld
cmpsl
sbb
push
or
jne
out
mov
loope
adc
jno
incl
ret
stos
insb
call
push
xchg
add
cmpb
sar
stos
pusha
dec
ret
aad
fsubrs
in
call
imul
fwait
add
test
fcoml
and
and
pushl
es
je
adc
loopne
lret
adc
fnsave
ljmp
jns
cwtl
sbb
push
jle
pusha
or
xor
mov
xor
xor
xchg
popf
sub
cltd
adc
shr
aaa
mov
addr16
call
adc
out
push
jg
jnp
cli
mov
mov
shll
std
into
sub
imul
mov
mov
xor
pop
mov
jmp
out
daa
cmp
xchg
mov
mov
push
arpl
jmp
je
iret
and
shlb
movsb
push
pop
mov
lahf
mov
js
mov
insl
aam
lods
inc
into
stos
fsubl
adc
sub
xchg
hlt
ljmp
add
mov
ljmp
into
cltd
rcrb
loopne
pop
imul
loop
adc
incl
sbb
mov
and
push
push
add
rorb
mov
fdivs
inc
lret
ljmp
jge
dec
mov
mov
test
in
sarl
sahf
add
xchg
mov
and
dec
sub
insl
sbb
imul
dec
arpl
mov
popf
insb
mov
lcall
pop
mov
or
int3
mov
in
mov
pushf
fwait
xchg
decl
mov
push
shlb
mov
imul
aam
pop
movsl
repz
ret
stos
add
jne
decl
loop
cmp
mov
cmp
mov
lods
shlb
mov
jo
idiv
dec
fnstsw
sub
cmp
ficoms
pop
xorl
add
das
incl
lock
out
push
sub
push
vmwrite
imul
cmp
dec
decl
out
repnz
xor
insb
stos
mov
imull
push
cmpb
inc
fdivr
aaa
in
clc
or
xor
cmp
out
mov
xor
ljmp
cmpsb
aaa
push
inc
shll
dec
and
pop
ret
decl
pop
arpl
fdivrs
xor
into
testl
inc
jae
push
test
sub
mov
sbb
in
mov
xchg
cmp
cmp
int3
ja
inc
push
inc
fisttpll
adc
lcall
outsb
loopne
in
test
mov
mov
cmp
lret
mov
rcrl
dec
shll
mov
test
stc
test
mov
sbb
shll
mov
sbb
frstor
jmp
adc
push
xor
pop
fcomip
sbb
ja
pop
or
mov
inc
jno
pop
scas
pextrw
pop
jmp
fdivl
or
mov
jmp
fs
xchg
mov
out
aaa
cld
call
sub
jle
rolb
xor
out
xor
int3
mov
loope
adc
test
es
mov
decl
ss
ret
dec
and
mov
add
hlt
push
mov
in
xchg
enter
shr
cmp
jmp
mov
add
mov
in
push
das
and
jg
dec
fsubrl
fs
sub
sub
test
jmp
jg
fstl
hlt
out
xchg
mov
pushl
loope
icebp
adcb
rclb
jbe
push
add
pop
mov
jle,pt
push
incl
push
pop
xlat
adc
lods
in
cmc
mov
jp
aad
fldt
cld
lcall
test
ret
add
or
xchg
dec
pushf
lcall
fistpl
fstps
push
adc
loopne
in
pop
mov
mov
stos
aad
xor
cmp
mov
xchg
out
jne
rorl
lret
out
and
roll
xchg
jg
hlt
pop
mov
pop
in
push
mov
push
std
push
mov
stos
daa
mov
mov
push
shl
call
pop
fisubrs
js
xchg
jnp
pop
sub
sbb
mov
mov
xchg
shlb
movsb
cmp
call
adc
fistl
bound
pop
jg
pop
pop
jbe
shll
repnz
aaa
fwait
xor
test
loope
lcall
jmp
adc
xchg
pop
mov
mov
sub
nop
pop
sub
arpl
jg
jg
xor
xchg
mov
push
push
es
in
mov
mov
call
mov
stos
ja
mov
adc
aad
jl
nop
lcall
inc
jmp
sbb
jo
xor
push
ficompl
fs
cmp
push
push
je
or
das
repnz
mov
ljmp
dec
bound
jmp
xor
notb
jmp
rcr
lods
jmp
cmp
adc
not
out
sub
push
jp
adc
mov
jmp
xchg
ja
jne
addl
pop
dec
mov
lret
push
lods
cmp
loop
jl
out
add
mov
and
aam
cli
decl
fbstp
cmp
popf
pusha
pop
shr
cli
mov
in
aam
sub
and
mov
ss
lea
inc
out
mov
lock
gs
out
xchg
adc
dec
or
pop
idivl
xor
mov
pushl
sahf
dec
mov
fiadds
nop
scas
pushl
ret
lcall
xor
mov
mov
lcall
sbb
outsb
imul
cmp
incl
sub
and
xchg
in
das
push
mov
cli
pop
popl
and
decl
and
adc
and
addb
cmp
iret
push
or
jle
lcall
jo
scas
imul
xor
dec
repz
add
ljmp
scas
outsl
int
lcall
push
cmp
ja
mov
sub
cltd
adc
lods
fcoms
jo
fisttpll
pop
and
scas
je
enter
fdivp
xlat
fstp
inc
push
fmull
ljmp
pop
and
addl
inc
and
jmp
jns
push
sbb
out
sbb
cmc
enter
sub
lcall
mov
jmp
jecxz
repnz
imul
or
lcall
in
ljmp
jae
pop
xor
push
ss
lret
mov
shlb
xlat
sbb
lea
mov
add
xchg
dec
mov
mov
stos
jmp
mov
test
cmp
scas
xor
stc
push
ljmp
nop
jno
add
call
gs
cmc
int3
pop
xlat
arpl
push
cmp
xor
push
dec
jle
fmuls
in
iret
jno
cmp
inc
pop
add
loopne
mov
hlt
push
cwtl
cmp
mov
jmp
add
or
jmp
ljmp
icebp
mov
mov
das
icebp
xchg
lret
movsb
aad
push
mov
daa
out
mov
les
pop
lret
decl
decl
enter
add
xchg
mov
test
pushw
outsl
mov
fdivr
incl
add
fidivl
test
ret
lret
imul
mov
pop
inc
je
leave
lret
mov
call
rcrl
mov
mov
dec
cmp
mov
and
fimull
rcll
push
mov
rorl
dec
inc
mov
lock
addl
outsl
cld
mov
fildll
lea
nop
jmp
jb
addr16
xchg
fldl
sub
cmc
ja
decl
or
mov
mov
aad
or
dec
jbe
cmc
jmp
clc
cmp
scas
outsb
xchg
add
push
dec
sti
stc
mov
jle
xchg
stos
push
lret
jp
test
cmp
clc
movsl
mov
xor
mov
stos
inc
adc
imul
and
test
notb
cwtl
test
ficomps
ljmp
push
cmpsb
mov
push
int
xchg
inc
idivl
aaa
sbb
fiaddl
ljmp
inc
shrl
outsb
cld
lret
pop
cmp
sbb
mulb
xchg
out
cli
cwtl
inc
xor
rclb
dec
cmpsb
jecxz
mov
out
smsw
add
int
mov
aam
xor
repnz
lret
ss
ljmp
add
push
sbb
fcomps
lcall
jns
mov
repz
push
shl
decl
add
xorb
iret
rcr
dec
inc
add
js
mov
jg
add
xchg
xor
add
xor
decl
mov
mov
jns
cmpsb
xor
addl
sbb
int
call
mov
fdivr
xchg
cmpsb
push
or
mov
jmp
lcall
dec
cmp
clc
jge
jg
jae
fcmovb
push
mov
mov
fs
and
outsl
adc
push
pop
add
js
jno
orl
cs
add
mov
mov
daa
pop
cmp
mov
leave
in
fimull
mov
sbb
insl
arpl
mov
aaa
fbstp
push
pop
dec
dec
or
jg
in
add
pop
lods
out
sbb
xor
decl
int3
mov
cmp
push
shrl
mov
or
mov
push
das
cmp
jmp
decl
push
inc
lahf
sub
imul
mov
repz
adcb
dec
outsb
cmpsl
data16
cmp
jmp
jg
pop
out
adc
and
lock
mov
push
push
ret
and
jecxz
lcall
jnp
sbb
xor
enter
mov
xchg
xor
neg
xchg
xor
mov
jg
adc
ficoms
push
pusha
call
xchg
jp
mov
sahf
and
or
pop
insb
mov
jg
push
sub
or
sbb
cld
or
out
aas
lods
fsubp
imull
push
rol
lods
sub
out
popa
jmp
fwait
jbe
lret
ljmp
pop
jle
lea
fbstp
adc
sbb
xchg
int3
add
cli
out
fwait
es
jmp
sub
or
test
rcr
outsl
or
iret
je
mov
rorb
aad
push
call
mov
fcomi
out
movsl
sarb
pushl
xor
mov
ds
mov
arpl
xchg
jge
jmp
xchg
addr16
or
cmp
stos
sbb
int3
xchg
dec
int3
sub
sbbb
clc
dec
fisubs
in
xchg
cld
cli
push
pop
mov
stc
or
lods
fnsave
pushf
xchg
mov
clc
aad
jns
pushl
xor
fisttpll
cld
xor
lcall
mov
mov
sbb
lret
test
popa
aad
rorl
push
mov
mov
mov
decl
mov
mov
push
outsb
es
or
adc
xor
cmc
sub
arpl
stos
and
mov
scas
jno
inc
incl
mov
or
in
cli
lock
sbb
aam
fcoml
and
xchg
dec
rclb
cmp
clc
jg
or
and
inc
push
dec
in
loop
call
mov
push
and
bswap
aam
xchg
fcmovbe
out
decl
fsubrl
mov
push
cmp
cmp
push
add
lahf
mov
mov
in
bound
faddl
scas
mov
sbb
leave
loop
scas
ja
push
and
rcrb
je
repnz
push
test
inc
out
std
js
dec
mov
pop
hlt
jp
iret
aad
xchg
outsb
imul
lds
pop
pushf
dec
cmp
dec
mov
mov
xor
fwait
jg
scas
out
pop
mov
popf
cs
ret
sbb
mov
mov
test
das
cmp
out
insl
out
hlt
cmp
out
mov
push
or
cltd
cmp
call
sub
in
lcall
loopne
inc
into
es
imul
jle
jne
lcall
add
mov
dec
push
sti
scas
dec
std
xchg
pop
cs
pop
xchg
rclb
shrb
roll
ljmp
dec
popa
dec
faddp
dec
notl
int
sub
jmp
lret
fiadds
and
jg
mov
sti
mov
fwait
push
ljmp
sbb
mov
test
mov
xlat
aas
ljmp
sarl
fidivl
lahf
mov
push
out
push
jmp
or
lds
in
mov
hlt
adc
cli
leave
add
int3
xchg
push
pop
test
cmpsl
std
ret
sub
and
pop
inc
push
and
clc
mov
jg
cmpsb
jp
adc
mov
imulb
push
fld
call
mov
aam
in
fiaddl
pop
mov
and
js
push
ja
xor
mov
scas
mov
ja
jle,pn
iret
lcall
aas
push
dec
mov
push
in
cmc
inc
push
adc
jnp
pop
imul
movl
cmp
ljmp
xor
pop
orb
fistl
ret
inc
jge
imul
int
inc
ss
int3
je
lods
or
call
mov
fcmovb
jecxz
sub
or
ja
imul
add
add
out
clc
pop
aaa
ljmp
clc
pushl
mov
ficoms
test
and
bound
xor
sub
xor
incl
popf
scas
cmp
mov
cltd
mov
imul
loopne
push
xor
fucom
ret
ret
jne
ljmp
jno
pop
xor
out
andb
mov
pop
mov
lret
bound
xchg
adc
pushl
scas
lret
push
mov
xor
xor
test
mov
outsl
ror
sar
fldl
mov
lods
int3
mov
adc
jle
inc
mov
ljmp
loopne
jo
xchg
inc
outsl
fwait
fs
and
cmp
fdivrs
popf
insb
adc
pushf
into
lea
mov
dec
mov
test
fnstcw
xchg
int
mov
xor
in
lcall
jbe
push
and
inc
imul
movl
aam
out
xor
insb
call
hlt
mov
or
into
add
std
inc
sub
sbb
inc
mov
pop
add
dec
and
add
ljmp
in
push
insb
or
loop
xlat
pusha
pop
in
cli
jp
or
fwait
lcall
arpl
cld
adc
sbb
rolb
sbb
sub
aam
scas
mov
stos
aam
std
jg
pushl
orl
out
int3
repz
popf
mov
popfw
add
inc
decl
jae
push
loope
scas
shlb
test
pop
out
int3
in
bound
sbb
loope
lcall
cmpsb
pushf
jae
fnstsw
adc
pushf
pop
bound
aaa
std
fcomip
mov
rclb
mov
add
subl
fldcw
cli
stos
hlt
scas
testb
sti
jl
je
int
push
jnp
lret
cmpsb
xchg
ss
std
lcall
mov
xchg
popf
aad
xchg
cmp
cmp
es
enter
jg
ljmp
jge
and
inc
jno
dec
and
roll
jmp
insb
cmp
fistpll
cmp
cmpsb
jl
addr16
dec
xor
lahf
dec
pop
stos
call
in
repnz
xor
data16
cwtl
fs
xlat
sbb
loopne
hlt
stos
jnp
shll
push
jno
inc
mov
and
add
daa
adc
adc
and
loop
test
lcall
mov
xor
pushf
push
xor
pushl
stc
stos
aas
cmc
adc
xlat
ss
cmovg
sahf
shrl
jl
xor
cmp
jecxz
adc
mov
movsb
dec
add
arpl
mov
bound
xchg
rcrl
jp
or
lcall
sub
mov
jo
mov
sub
mov
jl
ss
call
loop
or
jle
fsts
bound
js
mov
dec
das
das
lods
and
ds
es
jae
mov
pusha
cmpsl
incl
cwtl
mov
pop
xchg
js
or
push
inc
pop
test
movl
push
mov
aad
jno
filds
xorb
dec
stos
fwait
jge
test
mov
adc
test
push
aam
sub
sub
add
jge
sbb
mov
cld
mov
cmp
or
mov
ljmp
lock
mov
xor
mov
sub
mov
into
andb
adc
ds
and
dec
jb
xor
push
add
cmpsl
mov
push
lods
in
clc
mov
outsl
and
xor
gs
adc
mov
cmpsb
mov
ljmp
insl
repnz
rcll
leave
int3
mov
mov
scas
lret
mov
lods
enter
ljmp
push
cwtl
dec
or
push
jnp
jle
call
push
gs
pushf
mov
pushf
rorl
lret
xchg
in
cmp
xchg
pop
push
cld
or
pushl
push
aas
ds
stos
test
or
sahf
mov
cmpsb
ret
pop
cmc
xchg
and
xor
aas
in
mov
das
push
stc
jge
daa
sub
icebp
mov
popl
fwait
cld
xor
cmpsb
fisubrs
jnp,pn
sbb
addb
call
or
in
movl
into
std
xchg
jl
jecxz
ljmp
std
and
fnop
and
ljmp
push
cmpsb
scas
pop
dec
fs
cld
aaa
and
dec
mov
test
mov
decl
in
popf
mov
imul
repz
mov
xlat
sub
shl
jmp
fwait
outsw
ja
mov
or
cwtl
push
pop
repz
cwtl
mov
das
aam
leave
orb
pop
cli
dec
arpl
lds
or
pushl
inc
mov
pop
enter
mov
fnsave
rcl
mov
sub
sahf
push
les
jge
ficoml
inc
int
lcall
sub
jne
in
bound
push
cli
incl
mov
outsb
das
pop
divb
lds
sbb
xor
lcall
adc
pop
lcall
mov
jo
xchg
ljmp
and
fwait
mov
push
scas
repz
jg
mov
and
popf
pop
push
negl
xlat
ficoml
test
push
ret
add
sahf
aas
jg
sbb
and
ljmp
ja
lret
mov
and
jg
sbb
adc
push
addr16
mov
stos
rcr
push
pushl
mov
mov
sbb
and
mov
adc
push
xchg
fwait
ja
es
xchg
fmull
loope
add
test
pop
int
cwtl
int
pop
lret
repnz
fst
sub
lcall
jns
fnsave
lods
movsb
iret
iret
sub
jnp
data16
inc
push
sbb
pushl
add
icebp
in
mov
xor
push
xchg
push
cli
mov
add
setno
lods
popa
call
movsl
loopne
ljmp
outsl
and
mov
mov
mov
ja
jne
or
insw
pop
jnp
scas
decl
or
sbb
cli
sub
shr
je
mull
iret
dec
xor
mov
stos
rorb
imul
jno
fwait
test
les
faddl
inc
leave
inc
lret
mov
mov
jno
pop
pop
xchg
in
adc
push
lcall
push
lds
pusha
mov
sbb
mov
loop
pcmpeqd
xor
testl
lret
adc
xchg
xor
jg
sub
add
or
mov
sbb
ja
lea
push
xchg
scas
stc
sub
jmp
nop
inc
aam
imul
mov
pushf
inc
add
push
int
jg
es
ficomps
sub
sbb
mov
insl
cmpsb
jno
adc
xchg
iret
inc
mov
xchg
pop
imul
in
mov
inc
sbb
and
sub
inc
jl
int3
addr16
fs
cld
lcall
imul
or
out
fdivr
jp
rorb
cld
cwtl
or
pop
das
add
adc
sbb
mov
lcall
pushf
mov
inc
leave
and
es
push
sbb
imul
call
test
push
mov
pop
mov
sub
psadbw
sub
ljmp
sbb
aas
es
into
inc
stc
xchg
arpl
ja
push
pop
hlt
or
lds
mov
mov
cmp
jnp
inc
jg
jp
data16
lds
test
scas
mov
jg
push
fcomip
sbbb
cmp
mov
shlb
mov
aas
inc
loope
and
loope
lock
aad
jo
loopne
iret
push
jle
daa
fsubl
and
jmp
or
push
imul
roll
adc
lods
ficoms
inc
out
pop
add
cmc
or
test
dec
psubw
inc
cmp
cwtl
add
mov
fsts
ds
cmpsb
js
dec
lcall
in
push
pop
xchg
rorb
loopne
lods
js
fsubs
sub
ljmp
xchg
dec
add
add
mov
clc
push
notb
loope
push
enter
inc
sbb
cmp
push
sbb
lock
pop
in
jl
ret
ja
fidivrl
adc
adc
or
insl
cmp
cmp
dec
jno
cmp
jbe
inc
or
movsl
clc
out
jb
xchg
leave
xchg
pop
loopne
dec
enter
pushf
dec
inc
cvttps2pi
pop
pop
incl
aaa
cmp
push
inc
fcompl
xchg
repnz
and
sub
and
pop
pop
jmp
and
push
dec
mov
enter
xchg
xchg
pushf
ret
fucomi
mov
clc
jmp
imul
mov
scas
out
and
lret
cli
jl
sub
xor
push
loop
lret
add
cmp
xor
movsb
in
sbb
pop
decl
aam
shlb
mov
aas
mov
js
pop
sub
decl
sbb
cld
shlb
xchg
sbb
jge
or
and
pop
xor
shll
xor
stos
xor
add
add
pop
cld
out
jnp
xor
fldl
negl
pop
and
dec
and
cli
ljmp
mov
lret
leave
test
jns
mov
fcomip
push
jb
mov
dec
adc
push
add
in
adc
gs
inc
cli
push
ror
push
cmp
fidivl
pop
adc
inc
mov
dec
sbb
in
lcall
inc
in
int3
inc
sti
loopne
inc
inc
xlat
or
adc
aam
jo
xchg
jg
mov
cmpl
pop
dec
or
pop
into
jb
cmpsl
in
xchg
pop
movsl
dec
shlb
mov
std
rcll
lcall
sarl
fucomp
jo
pop
lret
fnsave
jo
xchg
lcall
inc
inc
dec
shl
movsl
push
or
lock
or
lret
mov
fwait
sbb
in
push
dec
decl
pop
mov
loopne
xlat
nop
xor
push
lcall
icebp
lcall
and
cmp
les
dec
test
test
std
mov
dec
shll
shr
sbb
outsb
adc
cmpsl
jmp
bound
xchg
cmpsb
cwtl
xor
addr16
mov
cmpl
lcall
add
push
cs
inc
or
mov
add
popa
std
sbb
fsubrl
jns
call
loopne
mov
dec
jecxz
jle
enter
pop
push
fisubs
pop
pop
mov
inc
add
push
fistps
repnz
sbb
cmp
dec
mov
enter
and
jmp
mov
mov
mov
aas
inc
xor
mov
std
mov
adc
adc
aam
xor
mov
push
mov
aaa
std
ja
inc
adc
js
ja
test
cmp
stos
js
mov
test
sub
repnz
es
decl
jb
sbb
iret
inc
mov
mov
popf
sar
pop
mov
out
rclb
aas
std
fdivr
inc
inc
mov
in
enter
push
cmp
pop
mov
sub
bound
stc
push
push
xor
jb
mov
stos
mov
incl
lods
roll
pop
icebp
std
cs
ret
xor
mov
jg
jecxz
push
dec
orl
pop
dec
sbb
or
xchg
sti
adc
data16
jmp
insb
cmp
inc
cmp
je
into
jmp
adc
adc
ljmp
add
jle
stos
adcl
imulb
incl
es
insb
setb
ret
mov
lods
je
add
dec
dec
and
adc
outsb
mov
mov
js
add
push
mov
push
stos
xchg
nop
jecxz
call
movsl
mov
jnp
fwait
int3
pop
pop
add
outsb
movsl
and
sbb
jnp
mov
sub
push
cmpsl
mov
pop
pop
push
dec
icebp
int3
and
outsb
ljmp
dec
sbb
pushf
cmp
pop
hlt
test
pop
or
mov
gs
jo
inc
sbb
mov
and
push
mov
mov
mov
add
sbb
and
hlt
stc
call
sti
andb
push
adc
das
call
xlat
hlt
pusha
hlt
xor
mov
lret
lods
ljmp
or
cltd
and
mov
jbe
dec
mov
imul
jbe
sub
jecxz
mov
shlb
enter
dec
idiv
lcall
lahf
mov
in
rolb
popf
push
push
cltd
or
ficomps
ret
adc
aaa
std
incl
in
insb
xchg
inc
mov
sub
hlt
pushf
test
scas
stos
mov
lea
sub
dec
sub
cmp
push
jl
imul
jg
inc
cli
jmp
movsb
and
fsubl
and
cmpsl
add
push
pop
loope
push
movl
jnp
xchg
jmp
dec
mov
adc
repz
lods
xor
aaa
xor
int3
xchg
or
xlat
out
or
call
fcoms
add
pop
or
out
fwait
adc
adc
mov
decl
pop
clc
mov
mov
in
fcmovu
int
add
lds
jbe
pop
mov
inc
daa
nop
mov
lret
xor
subl
bound
inc
sub
and
call
jmp
ljmp
and
fcmovu
into
ror
mov
call
std
pushf
xor
repz
cld
push
into
jo
sbb
fstps
push
lods
stc
loopew
rcr
dec
jns
xchg
add
je
cmpl
push
test
xor
push
push
sub
inc
rcrb
jne
mov
pushl
pop
aas
sub
lret
cmp
addb
shl
xor
dec
mov
sub
add
jg
outsl
sbb
push
call
ljmp
and
inc
ljmp
jle
inc
insb
lcall
mov
mov
and
mov
cmp
incl
int3
loope
int3
mov
adc
inc
xchg
mov
pushf
das
or
ljmp
mov
in
out
dec
and
jae
dec
xor
or
mov
cmp
outsl
shlb
cmc
neg
xchg
sahf
xchg
cli
mov
fbld
ret
lods
and
sarb
insl
and
mov
inc
pop
pop
imul
and
cmp
dec
pop
xchg
imulb
ljmp
in
sbb
mov
push
enter
mov
out
mov
or
cli
xchg
cmp
adc
xchg
pop
jnp
mov
incl
adc
inc
dec
cmp
aas
xor
hlt
pushl
adc
dec
sub
sarl
mov
push
pushl
xchg
sar
add
mov
repz
xlat
lea
mov
mov
sub
mov
sti
inc
mov
sbb
shrb
jl
in
sahf
arpl
lcall
adc
sbb
js
ljmp
inc
and
push
jnp
xor
jmp
add
ret
cmp
add
mov
sub
sbb
cmpl
pop
sub
pmulhuw
repz
mov
call
jge
sahf
mov
cmp
out
repz
popf
or
ljmp
add
call
inc
mov
repnz
les
sahf
int
add
mov
pop
fisubrs
repz
inc
cmp
xor
pusha
adc
stc
jbe
and
cmp
and
mov
in
filds
lcall
or
mov
mov
call
inc
jl
or
fwait
inc
pop
jmp
into
pop
dec
ret
mov
jecxz
jns
xchg
push
jg
or
fs
sbb
adc
fld
dec
lods
sbb
jmp
call
lret
jne
jae
lods
xchg
jns
iret
sbb
and
popa
inc
mov
ds
std
lods
xchg
cmp
es
out
mov
ficompl
xchg
pop
add
in
fisubrl
jnp
xchg
xchg
jmp
adc
pop
dec
mov
test
ljmp
jg
popf
xchg
loopne
fsubrl
mulb
xchg
std
push
xor
sahf
setbe
daa
decl
add
enter
rclb
lcall
mov
or
sbb
stc
lret
lock
pushf
outsl
cli
jg
in
cwtl
adc
pusha
sub
mov
or
xor
outsl
loop
ljmp
mov
dec
adc
fidivl
xchg
mov
add
cmpsl
pop
lock
das
cli
mov
push
add
adc
push
adc
add
scas
mov
ss
lock
nop
mov
mov
jns
lcall
repnz
inc
and
mov
push
shrl
popa
xorb
add
shll
mov
lds
mov
mov
test
icebp
lcall
xorl
jge
call
fdivrs
jecxz
jb
stos
repz
mov
lock
adc
sbb
sbb
jne
fnstenv
call
xor
xchg
push
shrb
pop
outsl
in
lcall
mov
xor
decl
dec
sbb
in
rorl
stc
outsl
js
mov
pop
xchg
arpl
lret
pop
lcall
pop
or
test
cmp
jg
xchg
fdivrs
mov
stos
scas
movsl
push
or
aad
cs
mov
stos
mov
push
mov
or
inc
and
fwait
mov
sbb
out
fstps
pop
dec
ror
jno
hlt
mov
sub
dec
cmc
mov
xor
or
dec
xchg
cmp
ljmp
or
inc
mov
movsl
rcl
outsb
or
out
shl
xor
push
pop
in
lret
insl
addr16
out
call
je
or
lods
daa
jg
mov
xor
loope
mov
cmp
decl
pop
fdiv
inc
outsb
daa
shll
outsl
ret
insl
push
add
ljmp
clc
scas
in
into
mov
icebp
lcall
stc
and
and
ljmp
dec
pop
cmp
sti
in
in
or
pop
push
jmp
inc
mov
dec
sahf
aad
stc
lcall
pop
push
lock
loop
inc
inc
or
das
hlt
lea
lcall
push
in
mov
add
mov
jmp
aam
mov
scas
js
jmp
mov
mov
and
adc
shll
rcrb
push
cmp
ljmp
push
int3
mov
xchg
aas
jae
sub
push
add
ds
xor
incl
pop
stos
adc
out
mov
jmp
push
cmp
lock
call
ljmp
mulb
xchg
sahf
ret
daa
lahf
loopne
in
adcl
movsb
adc
fs
ret
repz
inc
sarl
int
sahf
icebp
xor
dec
mov
cwtl
push
mov
fcomip
test
ss
xchg
sarl
mov
and
xchg
pop
mov
ljmp
leave
cmp
loopne
adc
nop
or
call
push
xchg
push
out
hlt
lcall
dec
push
cmp
push
nop
fldl
cmp
xchg
dec
int3
outsl
cmp
lcall
roll
jmp
js
add
nop
cmp
dec
sub
cli
push
ds
daa
pop
jl
int
adc
idivl
insb
or
push
push
aam
push
andl
lods
pop
mov
dec
inc
stos
nop
mov
je
adc
movsb
cmpsb
mov
jge
cmp
xchg
adc
bnd
inc
je
sub
lcall
fs
push
incl
loope
sbb
push
je
idivb
xchg
pop
mov
pushl
xorl
and
pop
popf
in
inc
xchg
jecxz
adc
jge
push
popa
dec
or
lock
scas
aam
pop
inc
test
push
iret
pop
cltd
mov
sub
std
lcall
xor
cmpsb
nop
bound
int3
dec
pop
popa
cmpsb
out
cmc
dec
aaa
add
inc
inc
push
add
cld
incl
ret
dec
jecxz
add
mov
das
xor
incb
sbb
cmpsl
xor
sub
daa
pop
or
les
inc
cli
mov
jg
sbb
and
mov
vsqrtsd
add
outsb
out
inc
aad
sub
in
cmp
fdivl
push
xchg
lcall
in
xchg
cmp
es
add
call
shrl
adc
dec
pop
mov
xchg
cs
jmp
test
ja
jmp
call
pop
and
scas
int
cmp
xor
sbb
and
mov
shll
clc
and
dec
sbb
mov
mov
out
mov
dec
bound
push
sbb
cltd
les
decl
lahf
ret
sbb
mov
cmp
iret
popf
cmpsl
and
int
cmp
stos
sar
jmp
xchg
cmp
loopne
inc
fdivrs
xchg
jecxz
scas
cmp
addl
das
clc
call
fistl
outsb
fwait
add
sbb
cmp
pop
cmp
and
incb
or
aaa
mov
push
scas
add
lcall
cmp
hlt
xor
cltd
lods
jbe
lea
int
and
jg
inc
cld
aad
cmpl
popa
xchg
shll
loopne
cmp
dec
fwait
loop
sahf
lcall
mov
loop
jno
cmp
movsb
mov
and
pushl
mov
test
dec
jne
or
mov
dec
or
pop
push
sbb
ret
lds
mov
ret
movsl
cltd
cltd
mov
cmp
add
or
or
cmp
jmp
rcrl
sti
xchg
ds
xchg
test
cmpsb
dec
pop
out
aas
popa
cmp
and
adc
add
fisubl
ljmp
push
imul
dec
dec
insl
int
adc
insl
or
adc
jae
adc
cld
jl
out
mov
sarb
aam
mov
cmp
dec
imul
and
and
jg
add
jge
pop
cmp
pop
std
repz
popa
incl
shrl
jmp
mov
mov
scas
adc
testb
inc
mov
adc
nop
lcall
adc
xor
lods
lcall
addr16
fimull
ljmp
ja
out
das
pop
mov
mov
sub
pop
ss
add
call
mov
add
aam
ljmp
loopne
outsl
mov
outsb
jae
out
jecxz
dec
lods
push
sbb
scas
jecxz
lcall
cmp
add
xchg
xchg
mov
ja
xor
mov
ret
mov
mov
push
enter
or
jae
in
mov
add
nop
jno
xchg
scas
sub
incl
call
ljmp
push
dec
lahf
clc
push
pop
popa
jle
xor
cmpsb
ljmp
push
fstps
loop
repz
sti
jge
adc
push
sub
lcall
pop
or
lods
in
sub
mov
sarl
ljmp
std
push
rcrb
lcall
aam
test
mov
sub
adc
loop
or
in
ljmp
enter
in
jmp
repz
jb
fcomip
jp
pushf
sbb
mov
bound
call
or
dec
jbe
xchg
decb
shrb
or
cmc
push
fistpll
lcall
mov
jg
sahf
sahf
leave
fwait
aad
mov
jno
dec
in
icebp
push
pop
jb
or
out
add
orl
in
mov
scas
dec
push
scas
ud0
lcall
mov
stos
les
aas
outsl
cmp
shr
fldl
loope
dec
ss
dec
sbb
push
out
inc
cmp
loop
sub
mov
or
pop
sbb
ret
xor
leave
sbb
jg
mov
adcb
pushl
mov
data16
ror
dec
gs
jns
mov
inc
loope
sar
lcall
mov
jo
pop
jg
and
mov
out
pushf
jle
add
xor
push
sbb
xor
lock
paddq
xor
mov
lahf
jle
lret
push
daa
cltd
dec
push
pcmpeqw
js
push
push
mov
pushf
lcall
inc
push
dec
cmc
std
sub
popa
rcll
in
fdivrl
pushl
add
les
out
cmc
xor
sbb
fbld
fldenv
decb
mov
clc
mov
adc
xchg
stos
jo
or
call
inc
leave
lods
shrl
das
ljmp
xchg
fwait
inc
mov
lds
pushf
fisubl
lds
imul
mov
fdivr
cmp
outsl
ljmp
inc
loopne
dec
or
jle
cltd
cmpsl
dec
mov
mull
lock
mov
mov
adc
ds
in
or
in
in
sbb
sub
push
adc
hlt
incl
out
cmp
rolb
or
ljmp
test
cmp
cli
cmp
mov
sub
xchg
add
push
pushf
daa
lock
adc
and
stos
clc
mov
js
dec
fs
sbb
jl,pn
jo
lret
and
aam
and
adc
mov
cwtl
or
xchg
call
mov
mov
xchg
cs
les
aaa
pop
add
mov
mov
jle
adc
repnz
mov
ss
inc
xchg
and
and
lcall
mov
call
add
adc
xchg
test
cmp
daa
fisttps
movsb
mov
sub
loop
sahf
xor
xchg
xor
out
rcl
lcall
pop
cltd
das
xor
popf
fstpt
rcrb
clc
push
jle
and
and
lock
mov
pushl
xchg
sbb
add
xlat
sbb
mov
mov
inc
push
xor
mov
test
clc
hlt
shrb
mov
call
sub
out
ljmp
sbb
clc
mov
and
es
mov
and
xchg
and
in
cmp
sarb
outsb
int3
shlb
call
jecxz
leave
sub
fsub
movsl
mov
pop
fwait
add
dec
decl
and
sbb
fwait
xlat
push
gs
xor
jo
and
pop
leave
clc
test
mov
add
mov
sub
jp
fsubrl
sbb
adc
fnsave
hlt
xor
jg
iret
sub
sarb
mov
popaw
ficomps
fstpl
jl
mov
add
sub
sbb
shll
cli
fstpl
adc
ret
int
mov
or
lds
lahf
cmp
sar
dec
shlb
pushf
insb
faddp
in
jns
bnd
jecxz
pop
outsb
dec
push
data16
das
outsb
push
les
pushf
mov
add
sti
aas
imul
ss
adc
cmp
mov
cmp
incl
insl
and
add
daa
call
cs
arpl
in
jg
out
decl
cmpb
lcall
push
call
cmpsl
dec
lcall
fs
cli
ds
jge
ret
sub
adc
sbb
loope
inc
pop
fcompl
rolb
push
out
out
and
push
mov
decl
bound
seto
bound
sbb
gs
fbstp
sti
insb
movsl
jae
mov
jecxz
inc
adc
xchg
icebp
xorb
cmpsl
pminsw
ljmp
scas
std
push
stc
scas
loope
cmp
cltd
loope
pop
lock
scas
cli
lcall
rclb
jge
or
mov
push
sbb
and
xorl
lcall
dec
outsl
int
and
mov
sbb
adc
iret
push
cmp
push
stos
sbb
jge
dec
jae
mov
xor
aad
jecxz
int
cmp
xor
mov
mov
lock
sets
insb
stos
adc
jg
mov
cld
pusha
pop
out
xor
repz
popf
fs
in
pop
insl
out
cld
ljmp
shrb
fs
mov
inc
push
inc
and
outsb
jnp
cmp
pop
js
dec
jecxz
ficompl
xchg
in
out
lahf
jg
mov
or
sbb
daa
out
cli
in
pushf
fdiv
sbb
aad
push
xchg
push
sar
cli
imul
pushf
jns
and
lahf
ljmp
pop
out
mov
sub
loop
mov
sbb
stos
mov
cmp
lea
clc
inc
xchg
ret
jb
bound
dec
and
into
insb
and
or
ss
and
popf
call
leave
fsubr
in
movsb
and
mov
pop
nop
sbb
sub
or
lea
hlt
lret
loope
and
pushl
push
xchg
push
xor
dec
movsb
fcoml
lods
lret
daa
cwtl
pop
gs
pop
jmp
cld
jg
and
push
dec
iret
dec
mov
int3
xchg
fsubrs
push
push
imul
in
adc
jg
aaa
or
enter
push
inc
push
pop
ss
fildll
ds
repz
lret
pop
cmpsb
lret
dec
or
jo
ljmp
mov
outsb
xchg
push
xchg
int3
lock
ja,pt
inc
rcrb
les
aas
das
movsl
loopne
pop
in
push
adc
incl
lock
into
leave
jge
sbb
stos
sub
out
loopne
push
push
push
divb
inc
lds
gs
push
gs
lret
mov
jae
ljmp
fs
sbb
incl
mov
fdivrl
xchg
sbb
push
pop
jbe
jne
mov
cli
and
dec
push
mov
pusha
repnz
pushf
cmpsb
mov
std
lret
gs
add
test
lcall
ljmp
in
sbb
aaa
ret
dec
sub
jge
dec
out
mov
or
scas
stc
sbb
lcall
pusha
insl
cvtpi2ps
and
pop
jb
pop
sarl
adc
movsl
inc
filds
cmc
or
xor
fdivp
sti
jge
incb
incl
xorb
xor
mov
xchg
and
sub
in
gs
incl
ret
es
adc
test
mov
sbb
jp
clc
and
pop
sar
xor
aas
cmp
mov
in
inc
lahf
call
push
jle
jno
xchg
es
add
and
hlt
mov
add
xor
sahf
incl
xor
test
adcb
nop
mov
cwtl
pop
jle
mov
jg
push
testb
imul
ret
adc
dec
inc
jg
addl
das
clc
or
roll
push
mov
add
cmp
fnstsw
pop
jle
fildl
pushl
shlb
xchg
mov
push
inc
pop
lret
cmp
insb
jmp
inc
in
cli
inc
sub
mov
scas
push
mov
roll
push
fadds
mov
fwait
leave
push
add
jp
adc
enter
inc
jp
pop
xchg
call
xor
es
bound
lcall
dec
mov
scas
cmp
pop
push
pop
data16
and
rep
loopne
jmp
or
xchg
pop
dec
mov
add
mov
xchg
outsb
js
arpl
out
push
cmp
mov
or
loop
ret
negb
inc
xchg
scas
pop
adcl
fiadds
fisubl
dec
hlt
xlat
rcrl
inc
icebp
xor
iret
pop
repz
xor
mov
adc
inc
dec
jle
push
outsl
sbb
lahf
cld
mov
sbb
lcall
push
sub
subb
cli
or
sub
lahf
push
test
cld
aaa
loope
ljmp
into
inc
les
orb
and
sub
popa
outsl
jp
testb
cmpsb
xor
popa
jne
jae
aaa
sub
dec
push
orl
jl
cwtl
test
neg
inc
jecxz
jle
inc
fstpt
in
adc
mov
sahf
sbb
push
filds
and
jmp
sub
or
add
shrl
push
pop
cmp
cli
xchg
andl
and
inc
divb
xchg
rolb
or
mov
push
push
pushl
scas
out
addb
aas
je
xor
mov
mov
jns
out
aas
pop
iret
mov
lcall
inc
int3
dec
js
mov
inc
pop
int3
gs
adc
ds
nop
int3
stos
nop
repz
inc
sub
sbb
or
push
add
mov
pop
sbb
cltd
inc
mov
rclb
loope
pop
cwtl
call
jns
xchg
pop
mov
xchg
or
loope
jbe
mov
cwtl
jbe
insb
jecxz
dec
aas
and
push
push
lahf
out
add
insl
sbbl
scas
dec
adc
ljmp
pop
out
sub
xchg
mov
mov
jle
hlt
pop
nop
fnsave
sbb
testb
xchg
lret
jnp
aam
mov
mov
cmp
aaa
and
xchg
lods
mov
pushl
movsb
and
fistpl
jnp
cmpsb
sahf
mov
sub
frstor
aad
push
lock
mov
xor
jo
cmp
add
fstpl
pop
mov
push
mov
xchg
iret
mov
jo
mov
sbb
add
mov
or
loopne
inc
into
mov
sbbb
jmp
xchg
push
sbb
xor
in
fcomip
ret
mov
ret
jo
loopne
xchg
test
xor
adc
xchg
mov
inc
fbld
enter
aad
lret
sbb
sbb
call
call
aam
jb
fstp
sahf
lcall
xchg
jmp
popa
dec
into
adc
jge
dec
mov
sub
into
lods
inc
fidivs
push
std
jmp
pushf
decb
lret
mov
fbstp
pushf
lcall
faddl
or
ljmp
mov
push
sar
xchg
lea
stos
addr16
std
rcll
add
mov
dec
aas
addb
test
clc
inc
imulb
es
ds
jbe
jmp
push
sar
or
jns
mov
test
idivl
fucomip
mov
mov
lahf
decl
cmp
ja
cld
or
stos
test
push
lods
mov
lret
mov
push
xor
cmp
cmp
cmpsl
loopne
ret
mov
xchg
cmp
cwtl
sub
jae
sub
sub
jg
dec
and
sbb
adc
call
ret
js
dec
mov
mov
ss
les
shlb
lcall
decb
movsl
xchg
pop
sbb
mov
or
loop
js
sub
xchg
dec
neg
push
xor
incl
sub
pop
ja
and
dec
fdiv
cmp
xor
adc
sub
pushl
xor
pop
mov
lahf
and
aam
inc
adc
push
cmp
mov
mov
and
adc
in
inc
sub
inc
xchg
rcrb
sub
das
je
jp
lods
jmp
iret
pop
mov
mov
rolb
mov
lods
test
cwtl
popf
je
pop
mov
inc
test
xor
ja
out
gs
jg
xchg
iret
test
lock
lcall
mov
pusha
loopne
inc
ljmp
pop
cmp
or
rcl
xor
insl
push
adcl
stos
pop
int3
or
xor
fsubrs
lods
add
add
ret
inc
in
dec
fdivl
fidivrl
ret
pushf
xchg
add
xchg
push
mov
pop
mov
addr16
jge
push
shlb
push
scas
add
adc
adc
addl
cld
fbstp
jg
sbb
aaa
mov
orl
outsl
xor
call
push
mov
mov
push
imul
das
pcmpgtb
jmp
pop
jnp
mov
xchg
lock
scas
rclb
xchg
cmp
out
xor
subb
stos
inc
mov
sti
adc
mov
adc
dec
and
mov
mov
and
outsb
mov
popf
loope
adc
sbb
mov
lcall
repz
repz
nop
xchg
adc
arpl
pop
lcall
sbb
and
daa
lods
xchg
xchg
and
push
inc
test
decl
stc
jle
int
repnz
add
jmp
jg
out
test
cli
adc
jecxz
lret
stos
aam
daa
sub
cmp
dec
das
cmc
addr16
bnd
sbb
cmp
sub
cli
sbb
dec
aas
lds
imul
mov
mov
xchg
mov
xor
gs
mov
and
mov
lcall
sub
out
mov
xlat
fwait
and
jae
inc
add
sbb
sbb
jg
push
jno
lret
test
dec
pop
adc
sahf
hlt
and
lods
mov
sbb
jno
push
fs
or
sahf
dec
xchg
clc
into
jmp
dec
les
cmp
push
sub
rcrb
mov
loop
lods
mov
or
mov
add
dec
dec
add
mulb
sar
lret
inc
mov
jmp
and
ljmp
js
adc
xchg
aaa
jnp
mov
incl
xor
sub
adc
mov
test
ljmp
pusha
out
push
mov
dec
push
mov
mov
pop
pop
inc
cmp
test
inc
repnz
shrb
inc
sahf
jnp
pop
repnz
jl
mov
push
add
jns
push
jg
and
fcomps
sbb
scas
outsb
or
popa
mov
mov
idiv
and
xor
pushf
sub
mov
cmp
jmp
minps
fwait
aas
out
cs
ds
and
sub
jecxz
sub
outsl
ss
push
retw
fnstcw
fildll
ja
movntq
aaa
fnsave
pop
cld
das
push
cmp
call
imul
or
jecxz
dec
cmpsb
mov
mov
mov
xor
lods
in
jle
jg
out
ljmp
arpl
pop
out
or
inc
int
in
jg
push
jg
jmp
pushl
inc
xor
fs
fldt
sub
jns
out
cli
cmp
mov
or
orl
fidivs
mov
dec
fildl
imul
iret
test
enter
sar
lcall
sub
sbb
fists
xchg
scas
xor
andl
cltd
adc
test
adc
je
sbb
ljmp
push
decb
and
iret
repnz
push
pusha
or
pop
xchg
lret
scas
fisubrl
orb
stos
repz
jmp
call
punpckldq
in
inc
cmp
push
subl
ds
xor
jmp
dec
add
rol
push
cs
test
fisubl
data16
adc
xor
inc
imul
in
ret
ja
enter
testb
push
mov
aad
cli
outsb
gs
outsl
clc
mov
repz
repnz
cmp
inc
fnstsw
call
call
cmp
jge
sbb
sbb
cmc
and
sub
fistpl
outsl
movsl
imul
jg
jg
mov
mov
pushl
mov
imul
xchg
xor
loope
test
adc
fldl
scas
stos
fists
jge
cli
or
decl
fwait
test
cmp
mov
hlt
ljmp
xchg
or
data16
inc
or
decl
sti
fistps
fwait
js
iret
inc
pop
push
aaa
cmpb
jmp
fisttpll
ljmp
mov
das
ret
outsl
pop
jnp
lea
iret
std
das
mov
add
clc
add
xchg
dec
das
ss
adc
lcall
int
lsl
mov
pop
mov
test
rcll
push
cld
call
sub
addl
adc
fs
popf
mov
sti
imull
mov
call
ljmp
jmp
xor
inc
cmpsb
ss
aad
shlb
je
jnp
cmp
jg
sbb
jnp
mov
ljmp
sub
cmp
pop
mov
pusha
sbb
pusha
out
insl
sbb
xchg
loop
idiv
aaa
std
dec
xor
out
idiv
out
pop
test
inc
ja
mov
xchg
imul
jae
jg
mov
into
mov
loope
mov
cli
adc
std
or
subb
push
int3
in
xor
jmp
cmpsb
xor
lea
call
xchg
pushf
lods
mov
cld
xchg
xor
cmp
mov
in
adc
cmp
lret
jns
cld
jb
fiaddl
sbb
pop
pusha
and
ss
pop
leave
cmp
ljmp
cmp
call
adc
rcll
lea
out
jle
fbstp
std
push
or
pop
or
xor
jl
mov
ljmp
std
leave
movsl
add
mov
in
imul
fidivrs
dec
mov
mull
loopne
push
inc
mov
stc
aas
data16
pushl
cli
sub
dec
add
add
lcall
scas
push
and
jmp
mov
jg
push
dec
test
adc
sub
cmpsb
mov
insb
fsubr
cld
out
add
lods
cmp
pop
cmp
pop
pushl
jl
clc
mov
xor
adc
int
outsb
es
mov
fs
incl
outsl
and
jl
leave
cmp
dec
push
mov
add
fbld
incl
or
inc
and
orb
shrb
sbb
lret
mov
jbe
pop
xchg
add
add
mov
dec
les
sub
gs
jp
add
es
mov
inc
lea
mov
pusha
mov
and
out
fwait
pop
cmp
incl
and
ljmp
out
in
in
jne
xor
cwtl
jle
incl
push
rolb
cmp
push
addl
cmc
pop
mov
imul
jl
das
sub
xchg
cmp
add
stos
je
sarl
addr16
mov
cli
aaa
repz
sub
ljmp
aam
cli
mov
cmp
jge
jbe
push
fs
shlb
mov
add
sbb
push
add
and
xchg
out
imul
stc
mov
pop
dec
rcr
pop
and
ja
inc
loopne
test
adc
pop
stc
ret
test
in
mov
imul
push
sub
mov
loopne
dec
in
jae
add
ljmp
fnstenv
dec
add
cmc
xchg
push
mov
call
call
or
jno
pusha
mov
repnz
mov
mov
aaa
lods
pushl
mov
mov
pop
in
sub
int
jg
mov
js
divb
xchg
inc
sti
sbb
shrb
jno
iret
sahf
cwtl
in
loop
enter
addb
outsl
adc
clc
test
les
call
loop
inc
inc
scas
stos
je
testl
dec
mov
or
jne
dec
mov
lock
clc
mov
cmpsl
orl
incl
cld
incl
out
adc
lea
cli
add
dec
jle
pusha
ds
mov
aas
rcll
and
jne
push
pushf
pushl
or
sbb
pop
shl
dec
xor
scas
aas
out
cs
or
aaa
gs
ljmp
decb
jns
mov
decb
cltd
sub
inc
mov
fsubl
popa
rolb
xchg
dec
mov
enter
es
cmc
into
pop
popf
lcall
call
add
shrl
xor
jne
jge
or
aam
test
inc
push
mov
rcrl
pop
push
hlt
mov
mov
pop
adc
fwait
loopne
mov
enter
push
and
in
enter
inc
leave
aam
in
incl
mov
inc
pop
mov
test
jb
cmc
repz
inc
and
jp
fwait
xchg
call
jmp
fisttpll
sbb
outsb
sbb
mov
mov
movsb
mov
jns
mov
and
aad
mov
invd
xchg
adc
lods
xchg
push
or
dec
clc
push
decl
sub
in
lods
imul
loope
dec
pop
pop
and
idiv
ljmp
cltd
dec
pop
cmp
frstor
dec
push
fstpl
jbe
sub
pop
pusha
pop
sar
push
push
int
scas
ljmp
arpl
xchg
aas
pushf
add
adc
daa
std
out
xor
movsb
mov
mov
popf
sbb
pushl
jp
sbb
dec
sbb
sbb
orb
inc
repz
push
and
inc
or
decl
add
mov
sbb
inc
mov
cmp
adc
imul
mov
cmp
sub
jmp
rorl
mov
push
pushf
sti
pop
rorl
dec
sbb
xor
imul
pushl
jg
test
jmp
lret
mov
sbb
scas
gs
popa
or
aaa
cld
sbb
dec
mov
addr16
xor
push
xor
cmp
xchg
pop
inc
pop
jno
jp
xchg
mov
in
fwait
popa
clc
aaa
pop
dec
movsb
das
xchg
call
incl
sbb
repz
xor
mov
and
or
cmp
lahf
cltd
daa
pop
lds
int3
push
aaa
mov
adc
call
mov
push
cmpsl
jne
xorl
dec
test
sbb
ja
out
test
mov
orl
add
jg
lods
ljmp
sub
xchg
and
sub
lret
sar
lcall
je
ss
andl
cmp
mov
inc
clc
pushl
aam
push
clc
xchg
notl
aam
mov
mov
enter
call
xor
lret
iret
jg
jl
repz
xchg
pop
jns
inc
adc
out
xor
cmp
cmp
clc
sbb
sub
mov
mov
shrb
mov
mov
pushf
adc
pop
sbb
pop
cmc
ljmp
push
xor
xlat
cmp
lahf
sub
fdivr
sub
pop
pop
mov
cmp
jmp
add
add
fstpl
xor
push
mov
add
dec
pop
add
mov
into
repnz
ret
int
sahf
js
sub
movsb
pop
mov
incl
mov
imul
loop
sarl
call
push
sbb
sub
push
adc
lds
mov
adc
sar
xor
xlat
and
sbb
sub
fsub
cli
mov
mov
pop
movl
sbb
shlb
jmp
pop
daa
mov
les
cltd
xor
push
xor
mov
inc
out
clc
push
push
mov
popa
lret
icebp
aad
dec
adc
out
sar
ljmp
mov
outsl
shlb
loopne
dec
cwtl
aas
sub
push
cltd
enter
cld
stos
fwait
cwtl
adc
add
shlb
xlat
arpl
decl
inc
dec
and
push
xchg
pusha
mov
mov
sub
xchg
xchg
das
sti
cld
inc
mov
popf
sub
jg
lods
aaa
push
and
dec
shr
hlt
insb
loope
notl
pushl
sub
push
push
loopne
test
jmp
mov
popf
cmc
clc
aaa
mov
nop
clc
sub
fidivrl
out
sbb
in
ss
mov
int3
jmp
out
mov
xor
cld
sub
pop
js
ja
ret
xchg
jle
jmp
ljmp
test
sub
mov
ret
add
incl
and
sbb
pop
fildll
ljmp
mov
in
stos
lock
ja
mov
jmp
cmp
js
fcomps
pushl
dec
push
icebp
divl
in
push
inc
int
shr
mov
insb
mov
outsl
cmpsb
push
pop
das
decl
ljmp
xchg
xor
lcall
mov
xor
adc
pushf
lcall
fmuls
mov
jne
incl
and
jae
in
mov
clc
dec
pop
and
push
mov
push
push
dec
fstp
lods
pushf
pop
sub
jmp
dec
or
ljmp
pop
xchg
testl
aad
xor
mov
pushl
in
cmp
dec
cltd
out
loope
push
xchg
xlat
jmp
cmpsb
mov
push
jmp
jp
hlt
lcall
xchg
or
das
cmpsb
mov
insl
sbb
or
fidivrs
push
jg
lods
test
xchg
push
cs
imul
cmp
stos
cld
jmp
inc
fimuls
js
xorl
push
mov
out
and
test
out
out
mov
push
incl
aaa
lods
push
xor
movb
jnp
mov
lcall
clc
adc
jns
inc
sub
hlt
fdivrl
push
lock
lds
cli
jnp
jl
cs
inc
adcl
and
add
jmp
ljmp
cmpsb
jg
push
in
stos
adc
pop
push
rclb
scas
or
push
lret
cli
out
stc
dec
in
mov
adc
mov
movsb
pop
jbe
dec
in
fcomp
sub
pushl
xor
inc
pop
push
push
inc
inc
lea
stos
sti
pusha
dec
jmp
mov
call
hlt
jge
imul
xchg
loop
cmp
ljmp
incl
pop
es
adc
push
xor
notb
sub
mov
push
mov
lcall
ss
fisubrl
call
incl
adc
jecxz
fldcw
adc
cmpsb
cmp
sbb
mov
fs
aas
cmp
xchg
mov
bnd
lcall
inc
xor
xor
movl
and
xchg
flds
dec
sti
lcall
ljmp
push
pushf
push
push
and
inc
and
mov
lock
data16
ljmp
pushf
arpl
dec
push
enter
sbb
pushl
insl
addr16
jp
push
pop
or
das
adc
adc
lcall
jmp
clc
jmp
ret
mov
add
xorb
lea
fistl
xchg
cs
incb
mov
imul
rcrl
loope
push
scas
mov
xchg
mov
outsl
cmp
cmpsl
cmp
roll
adc
push
jns
add
adc
decl
sbb
jb
jae
fsts
pop
in
addr16
fcmovu
xchg
add
sti
mov
test
mov
jno
sbb
or
pop
pop
push
test
mov
hlt
incl
ffree
adc
cltd
cld
in
lret
jle
iret
stos
push
adcb
xchg
xchg
out
cli
fldl
sub
sbb
mov
push
sub
ja
xchg
and
sbb
cli
push
mov
mov
dec
fiaddl
in
in
es
lods
call
loope
xor
test
pop
xor
scas
int
repz
mov
stos
cli
jg
ljmp
push
dec
jmp
push
mull
xchg
fdivr
cmp
mov
call
cmp
and
scas
hlt
push
es
sbb
pop
test
xchg
sar
cmpsb
mov
cmp
divl
add
and
pop
clc
mov
pop
pop
xor
adc
or
fmull
gs
lods
inc
and
shlb
ret
ds
dec
fcos
lcall
inc
inc
loop
sbb
xor
adc
pop
add
dec
xchg
mov
jg
aad
fwait
mov
xor
lret
or
cmc
pop
fimull
pop
xchg
mov
sti
and
mov
andb
jge
rorb
icebp
or
sub
and
push
aad
nop
dec
js
mov
jg
sub
mov
outsl
pop
push
and
sbbb
or
dec
xlat
pop
push
enter
loop
jae
test
daa
xchg
adcb
incl
popa
adc
cmpsl
ljmp
and
and
das
lahf
fsubrs
lds
jmp
cwtl
jecxz
pop
fstpt
adc
jg
pusha
cld
or
mov
add
mov
or
rorb
bound
fsubrl
xchg
ljmp
pushl
mov
mov
jns
mov
pop
sbb
or
out
ret
cwtl
ds
xor
xchg
inc
aas
cmp
pop
cmp
ljmp
pop
mov
and
xchg
insl
sub
test
xor
test
ljmp
dec
sbb
dec
pop
pop
frstor
repz
push
pop
test
and
andl
stos
xor
decl
xchg
jno
xor
daa
mov
add
jp
fs
inc
cmp
incl
add
mov
push
xchg
sub
mov
mov
xchg
xchg
sbb
dec
fmuls
scas
add
dec
mov
cld
push
pusha
sub
test
add
or
xchg
jg
jmp
cmp
fcomps
testb
into
insl
movd
incl
pushf
xlat
push
ret
pop
repz
fisubrl
lea
lock
push
fwait
xor
xor
push
xchg
jns
mov
and
ficoms
outsb
jge
cld
add
iret
cmp
aas
scas
and
call
rorl
and
aas
cmpsb
or
fwait
dec
jmp
clc
sub
pop
leave
xorl
pop
inc
sbb
adc
push
mov
mov
fdivrp
push
mov
jg
nop
or
dec
clc
sub
adc
or
sub
pop
dec
repnz
imul
push
or
fsubrl
push
js
movsl
test
lock
mov
mov
jmp
push
fistps
fnstcw
sbb
add
mov
lcall
mov
mov
pop
cmp
jp
dec
cmc
dec
mov
test
pop
push
call
add
mov
lds
lds
push
and
jmp
cltd
xchg
or
push
push
cld
jmp
cli
push
cmpsb
loopne
test
ljmp
test
in
decl
aaa
je
dec
push
imul
loope
jo
sub
push
sub
stc
dec
outsb
dec
lock
jg
or
push
ret
cmp
xor
cmp
fstl
push
call
xor
lret
insb
out
cmp
cmp
call
pop
xor
pop
xchg
popa
dec
sbb
stos
xlat
and
and
mov
imul
add
dec
mov
or
pushf
mov
cmp
fbld
or
cmp
inc
push
cld
jne
pop
xlat
pushf
hlt
data16
dec
enter
inc
push
jg
jno
js
xacquire
adc
decl
mov
mov
jns
mov
in
dec
punpckhbw
lea
xor
in
hlt
push
mov
pushf
test
add
cmp
add
push
sbb
leave
mov
imul
fcmovbe
jae
xchg
mov
lods
inc
iret
negl
and
fdivl
sbb
daa
lret
daa
test
push
mov
mov
out
jmp
push
jne
mov
jno
mov
push
xchg
dec
xchg
testb
or
loope
xlat
dec
mov
dec
aaa
sub
call
jg
xchg
sbb
cs
in
pop
arpl
cmp
imull
add
incl
out
adc
push
repnz
mov
mov
enter
mov
xchg
xchg
outsb
cmp
add
xchg
subb
lcall
or
cltd
jecxz
in
sbb
popf
insl
aaa
push
test
dec
mov
ljmp
adc
mov
mov
push
jne
pop
icebp
inc
jne
dec
out
rcl
pop
push
jno
stc
fidivs
into
mov
mov
jg
lret
dec
jbe
pusha
pop
jmp
lcall
repz
adc
es
sub
int3
outsl
jb
jmp
sbb
sub
mov
xorb
and
sarb
mov
stos
xchg
lods
loope
fldcw
daa
js
ja
call
pop
sub
push
hlt
inc
jbe
jne
mov
outsl
and
pop
stc
add
and
cmp
movsb
jmp
pop
or
outsb
xchg
jmp
pop
dec
ret
cmp
rcl
fsubs
notb
ret
aad
ljmp
and
and
dec
out
sbb
out
in
adc
or
cld
ffreep
in
psllq
pushf
addb
pushf
icebp
xchg
jmp
sbb
xchg
add
stc
ja
mov
cmpsl
sbb
adc
sbb
or
pop
cmp
popa
sbb
mov
adc
sbb
jne
enter
push
lock
dec
iret
lock
scas
in
xchg
mov
sub
pushl
jecxz
or
xor
xor
cs
mov
mov
aaa
in
pushl
or
pop
imul
inc
adc
push
or
aas
lock
cld
inc
lods
xchg
jbe
insb
cmp
sbb
loopne
fcmovnu
pop
ss
decl
sub
lcall
js
pop
push
je
push
add
jmp
add
mov
incl
pusha
loope
cmp
cmpsl
nop
sbb
jmp
out
and
aam
imul
stos
sbb
xchg
scas
cmp
push
pop
mov
sar
decl
lock
iret
adc
mov
or
push
dec
sbbb
xor
inc
jnp
cmp
mov
mov
dec
jge
hlt
mov
mov
ret
inc
out
lcall
ss
jnp
into
gs
pop
scas
sbb
dec
push
xor
mov
scas
pop
push
and
out
aas
fstl
sbb
fcoms
jmp
test
sub
scas
sahf
push
rorl
sub
arpl
fnstsw
mov
lcall
dec
xchg
pop
fwait
aas
and
inc
xchg
pushf
sahf
out
lcall
call
imul
xchg
dec
lcall
push
push
push
xor
jo
ret
or
andl
cwtl
add
push
arpl
call
mov
stos
mov
aam
ja
lahf
sbb
clc
stos
into
popf
subl
cs
jmp
mov
out
andl
and
dec
daa
loop
xchg
dec
pop
aam
in
mov
jecxz
jmp
sbb
mov
cld
negb
mov
cli
xlat
ret
lret
adc
frstor
adc
lock
dec
mov
mov
stos
fdivrp
add
mov
mov
mov
mov
adc
add
jmp
lcall
adc
dec
int3
dec
adc
insb
jl
xor
push
clc
mov
lods
fmul
shrb
jb
sbb
mov
sub
and
mov
out
popa
adc
imul
sahf
mov
sahf
xlat
adc
xor
ret
fisttpll
xchg
mov
pop
cmp
test
dec
add
into
mov
in
inc
loope
imul
arpl
lea
dec
shlb
xor
adc
mov
mov
movsb
mov
pop
mov
pop
sbb
lods
push
inc
shll
test
mov
mov
ffreep
jmp
fs
dec
sub
fbstp
jmp
inc
fwait
mov
jmp
mov
push
xchg
adc
mov
lcall
fwait
inc
loope
int
mov
xchg
ret
jecxz
mov
pop
cmp
mov
outsl
pop
clc
aas
andb
movsl
and
into
xchg
or
jl
scas
cmpl
test
or
movsb
push
inc
faddl
mov
jecxz
sti
out
call
aam
and
rorl
movsb
jbe
mov
mov
pop
mov
add
fidivs
pop
outsl
jnp
data16
pop
xchg
jno
ljmp
sbb
mov
in
or
pop
dec
fcoms
push
ss
adc
call
fistpl
data16
pop
cmp
or
or
adc
dec
into
test
jge
unpcklps
and
in
shl
add
cmp
fdivs
mov
lcall
insl
cwtl
xchg
sti
lock
cmpsl
cli
pusha
dec
add
inc
out
popf
push
mov
xchg
test
movsb
aam
jae
fwait
and
lcall
pop
xor
cmp
jl
shll
adc
das
adc
push
popf
imul
fbld
cld
xchg
imul
jne
adc
lods
popa
fwait
lcall
mov
cmc
mov
push
fiaddl
in
inc
nop
jbe
sub
sbb
cmp
cld
jne
push
pusha
mov
in
xchg
cmp
jp
imul
pushl
movsb
jne
fcompl
push
push
test
rorl
test
cltd
inc
cltd
mov
gs
pop
xchg
incl
sbb
jmp
push
aad
push
mov
lods
dec
mov
xlat
sub
lock
lcall
xor
add
movsb
xor
lcall
shrb
pop
pop
push
insl
jo
fdivp
shlb
repz
or
fwait
push
js
push
mov
and
mov
lcall
xlat
inc
sub
int3
scas
inc
imul
or
shll
add
adc
add
push
dec
push
hlt
add
jecxz
fdivs
and
jg
xor
stos
ljmp
inc
hlt
jns
movsl
add
mov
ret
cmp
xchg
pop
loope
outsb
mov
pop
add
push
fdivrl
mov
lock
sub
dec
sbb
dec
jecxz
add
in
xchg
in
into
and
inc
and
addl
ja
aas
jp
xchg
outsl
mov
adc
jg
incl
pop
addr16
xchg
ss
out
jl
call
adc
icebp
jmp
sbb
push
adc
out
lret
lret
mov
out
ret
out
mov
pop
out
adc
fsts
xor
mov
jmp
and
leave
negb
fmul
sti
inc
bound
mov
jbe
mov
cltd
push
shl
mov
adc
rclb
in
daa
adc
and
lahf
inc
in
jg
cmp
sbb
inc
cmpsb
insl
adc
lcall
into
pop
dec
test
mov
jne
inc
pop
or
js
clc
cmp
dec
cmp
and
cltd
cmp
or
shlb
dec
flds
or
stos
popf
push
mov
cmpsb
int
adc
jp
ss
out
sahf
icebp
ljmp
xor
dec
xor
lds
adc
sub
mov
inc
pop
xchg
xchg
ja
jmp
das
sbb
jmp
mov
js
es
incl
adc
stos
lahf
adc
pop
sbb
lea
das
ret
cmp
pop
sahf
call
sbb
test
cmp
out
sbb
aaa
inc
sub
fisubs
sarb
decl
sub
mov
mov
dec
mulb
and
mov
jg
mov
sub
out
test
push
xchg
push
jecxz
pop
int3
mov
dec
sub
inc
out
xchg
jb
mov
orb
and
shrl
adc
popa
inc
lahf
xchg
dec
addr16
cmp
enter
out
mov
out
jecxz
popa
nop
mov
mov
add
or
pop
and
enter
arpl
cld
ljmp
mov
hlt
dec
mov
inc
call
and
or
lret
fdivrs
in
mov
and
test
testl
sbb
std
pop
mov
jae
inc
je
pop
test
cld
jl
xor
mov
cmp
fidivl
dec
sbb
inc
inc
call
push
shrb
out
jp
fidivs
orb
and
call
int
repz
push
mov
cmp
mov
xchg
or
cmp
popf
adc
scas
mov
call
ret
leave
pop
jae
xor
fisttpl
mov
add
fdivp
in
addr16
iret
jbe
dec
cmp
fstps
push
or
in
lcall
int3
mov
sbb
sub
sub
les
fnstenv
mov
jg
sahf
test
sub
es
outsl
rcr
out
pop
imul
jl
pushf
in
fidivs
lea
bound
sahf
jle
enter
jl
inc
xchg
and
insl
scas
in
adc
fistpl
jp
cmp
cmp
incl
add
aad
in
and
xchg
ja
pop
std
incl
mov
pop
dec
mov
fists
cld
add
pop
pop
mov
stos
rolb
mull
add
dec
out
pop
adc
insb
imul
push
std
mov
lret
push
xchg
xchg
jmp
cmp
fmuls
iret
test
dec
ret
dec
dec
repnz
leave
and
or
sbb
loopne
adc
xchg
inc
enter
ljmp
mov
xchg
jg
jp
fs
adc
pop
incl
dec
pop
xor
clc
lods
int
scas
xor
jo
lret
jnp
dec
dec
pop
or
mov
or
push
push
xor
loope
test
xor
add
sub
xchg
iret
fs
dec
adc
and
int3
jp
cli
aaa
add
sti
jne
lcall
pushf
stos
decb
sahf
jp
cmp
inc
hlt
push
int
movsb
pushf
data16
out
mov
push
call
push
and
stc
cmp
jae
mov
xor
xchg
test
incl
shll
cld
movsl
ret
inc
lret
lods
pushf
xchg
iret
inc
xchg
dec
cmp
lcall
cli
fcoms
mov
xchg
addr16
and
xchg
and
inc
ret
mov
aad
dec
jmp
push
insb
sbb
xor
add
xor
lods
fcoml
pushl
xor
mov
jb
inc
or
movsb
out
push
mov
int
pop
ss
inc
jbe
push
pop
lret
andb
stc
add
cmpsb
fdivrs
pop
addl
lcall
adc
leave
enter
daa
int
fdivs
shlb
into
jmp
ret
jp
gs
push
sbb
lods
xor
out
xchg
call
loop
in
and
dec
sbb
leave
xchg
and
mov
sbb
fisttps
lock
dec
sub
movsb
jle
out
es
dec
in
mov
mov
cmp
jne
arpl
and
jp
ficompl
lcall
jb
ljmpw
addr16
pop
add
adc
mov
decl
jl
rorb
xchg
movl
mov
mov
mov
repz
push
aam
xor
pop
xor
lods
sarb
mov
xchg
sahf
pushf
pop
aaa
fadd
xchg
xchg
jb
add
xchg
sbb
sub
sub
inc
sbb
lcall
xor
mov
into
jl
cs
out
aad
and
std
cmpsl
jp
xor
in
in
sahf
push
ja
fcomip
push
dec
movswl
pop
push
pop
pushf
fcomps
add
inc
loop
inc
pop
cmpsb
mov
mov
mov
ret
out
jbe
xchg
stc
aam
les
outsb
cwtl
sub
mov
add
jmp
jmp
std
subb
scas
mov
sub
push
mov
orl
push
call
mov
stc
shlb
or
xorl
rolb
sahf
inc
jp
xchg
fidivs
aad
loopne
movsl
fsubr
mov
mov
repnz
fwait
dec
sub
sub
out
in
fmuls
xlat
cmpsb
jnp
sub
jae
mov
pushf
or
mov
push
outsb
sbb
xchg
cmp
add
mov
push
mov
in
fcomip
mov
rclb
pusha
or
in
push
inc
push
xchg
cmp
jg
sub
scas
jae
js
xor
das
cltd
xchg
or
cmpsl
nop
mov
jg
incl
push
inc
xchg
aam
movsl
push
ja
fistpll
out
jmp
mov
cmp
jb
scas
rolb
cld
in
stos
or
mov
xchg
incl
dec
inc
sub
fnstcw
dec
adc
pop
divl
bound
inc
jge
lret
lret
push
fldl
aam
mov
adc
das
jle
adc
decb
pop
mov
lock
cmpsb
lock
inc
add
call
cs
pop
outsl
pop
inc
xor
cmp
ret
ror
pop
testb
pushl
fsubrs
divl
add
inc
fcompl
sub
loope
sti
loop
cmpsl
in
incl
stos
and
inc
mov
xchg
lret
mov
int
int
and
and
stos
rclb
incl
popa
mov
outsb
gs
jmp
popa
test
pop
mov
or
jecxz
ds
int3
mov
test
inc
jbe
mov
lods
js
in
addr16
mov
lcall
int
add
shlb
in
test
loopne
cmp
call
cmp
jge
mov
incl
mov
jmp
jnp
sti
lret
std
mov
and
mov
sarl
mov
inc
scas
fdivr
pop
hlt
pushl
mov
sub
int3
mov
fisubrs
dec
dec
nop
sub
loop
jmp
aad
scas
outsl
mov
xchg
pop
cmc
jne
rsqrtps
pop
mov
call
popa
shrl
dec
push
mov
mov
push
fsubrl
fadds
in
add
xchg
adc
inc
subl
lret
pop
lods
and
mov
inc
xlat
ror
fdivrp
mov
mov
fistps
sub
mov
cli
ljmp
jne
mov
mov
and
mov
gs
mov
sbb
bound
and
inc
push
loop
incl
popf
pop
mov
xor
push
fldl
jl
lret
mov
movsb
and
and
dec
xlat
dec
and
mov
cmp
and
mov
out
jmp
jg
xor
fisubs
ret
add
fbstp
insl
mov
outsl
xor
lcall
lods
xchg
xor
shlb
lods
lcall
loope
xchg
inc
mov
add
pop
aad
fmuls
pop
mov
jle
test
das
inc
sarl
push
mov
inc
pop
push
push
or
decl
test
dec
pop
sti
incb
insl
pop
inc
leave
dec
stos
sbb
push
jns
int
dec
adc
pop
test
repz
cmpsl
rorb
sbb
jno
sarl
lods
mov
adc
je
xchg
sub
loope
test
jg
dec
lea
jae
dec
inc
fs
mov
cld
jmp
sbb
and
lcall
lock
pop
xor
loop
std
push
push
lea
incl
in
add
fisubs
es
inc
push
jmp
jl
push
adc
decl
jmp
xchg
pop
or
push
add
lahf
pusha
sbb
pusha
std
ljmp
inc
jl
and
push
cltd
mov
sbb
push
push
in
out
jle
or
nop
cmpsl
pop
fwait
repnz
xchg
jnp
and
jg
sub
sub
xchg
xchg
adc
pop
mov
sub
adcl
in
dec
adc
add
iret
fnsave
jo
repnz
ret
jg
and
notb
push
icebp
sbb
dec
insb
call
add
stos
inc
cld
mov
out
fiadds
lcall
lcall
ja
cmc
xchg
xchg
mov
cwtl
fcmovne
iret
rorl
push
rorb
cmp
decl
fisttpl
call
mov
and
fs
jmp
jle
pop
movsb
insl
call
bound
xchg
cmp
mov
fincstp
cmpsl
in
add
dec
or
jb
inc
push
jae
mov
aas
mov
xor
icebp
push
pop
loopne
pushl
cmc
pop
mov
aad
jp
mov
test
inc
sub
sets
std
add
or
dec
adc
jbe
mov
test
enter
js
sahf
ljmp
xchg
pop
daa
or
rorl
test
sbb
mov
cmpsb
adc
cmp
push
notb
ljmp
push
push
cmp
mov
lcall
mov
mov
movsb
stos
adc
decl
mov
or
ja
or
pop
ds
jg
rolb
adc
mov
jg
and
jp
push
in
add
mov
sub
decl
mov
jbe
call
lock
les
and
daa
mov
daa
cmp
cmp
push
xchg
lock
clc
mov
sub
adc
mov
dec
test
mov
scas
icebp
scas
out
or
fistps
mov
clc
mov
or
shr
mov
es
jg
decb
mov
pop
adc
dec
xchg
mov
push
int
ljmp
clc
bound
or
insl
lods
lock
mov
jge
mov
out
and
aad
jmp
mov
and
adc
daa
loop
nop
inc
js
popf
or
cmpsl
xor
or
mov
mov
sbb
dec
and
push
mov
sbb
pop
imul
xchg
call
loopne
mov
cmpsb
mov
daa
fwait
pop
ljmp
aas
fwait
out
out
icebp
mov
sti
adc
rcll
add
adc
sbb
sbb
jno
or
sbb
mov
push
inc
sbb
push
out
clc
xchg
stos
lahf
imul
add
dec
add
sti
or
pop
sub
insl
rcr
push
scas
js
dec
mov
push
jns
ljmp
pop
push
repnz
cmp
mov
inc
out
dec
aas
inc
add
dec
cld
jecxz
or
lcall
loop
xchg
jle
push
mov
jle
jmp
xor
adc
pop
stos
lods
fcmovb
rolb
xor
mov
mov
dec
mov
insl
xchg
in
dec
xor
inc
jno
push
push
jmp
mov
push
das
push
lret
mov
mov
ja
xchg
add
mov
inc
cmp
addl
icebp
dec
add
scas
xchg
stc
or
std
sbb
call
mov
jp
sbb
add
cmc
ja
les
rclb
fmull
out
andb
aam
mov
aam
xorl
mov
lcall
mov
cmp
mov
push
adc
jnp
in
imul
sbb
dec
js
sbb
int3
add
xor
and
add
adc
call
dec
xor
mov
dec
int
add
xor
jecxz
sbb
push
jp
je
pop
das
jg
test
aaa
insl
lcall
dec
inc
pop
sbb
mov
inc
mov
mov
sub
pop
cmpsl
scas
push
sbb
jecxz
mov
outsl
dec
mov
xchg
add
aad
pushf
jecxz
add
shrb
add
fs
add
lock
ljmp
scas
insb
and
adc
out
xor
inc
mov
jmp
fwait
cli
test
daa
inc
lods
ljmp
shlb
pop
xchg
pop
mov
jbe
lea
in
adc
pop
addl
insb
mov
adc
or
sub
stos
dec
or
mov
loope
decl
mov
aad
mov
jbe
jge
outsl
cli
aaa
or
xor
stos
xchg
pushf
inc
es
xchg
decl
hlt
mov
pop
addb
outsl
xlat
dec
and
jle
ficoml
inc
rorb
pushf
test
mov
mov
jg
mov
andb
and
and
xor
inc
push
notl
sar
fidivs
and
cli
pushf
daa
out
or
pushf
mov
and
pop
xor
call
loopne
cltd
jmp
mov
lods
mov
sti
test
and
paddq
nop
or
jmp
mov
sbb
imul
jge
inc
sub
mov
icebp
jg
or
pop
repnz
mov
cmp
inc
out
push
add
xor
mov
mul
loope
pop
push
iret
jmp
and
in
lahf
movsb
jbe
imul
out
testb
cmp
out
lcall
mov
cli
aas
adc
scas
cmp
dec
out
clc
scas
fdivl
mov
dec
fnsave
popf
lret
insb
dec
mov
inc
das
iret
jns
aaa
ja
ljmp
mov
cmp
outsl
fdivrl
sahf
negb
cmp
stos
leave
push
push
dec
jo
push
add
jbe
ret
sub
lcall
ss
jg
xchg
inc
incl
movsb
scas
add
xchg
inc
int3
pop
js
sti
adc
jne
movsl
imul
testl
outsb
mov
movsl
add
call
and
xchg
sbb
inc
jle
decl
jle
add
dec
push
cmp
arpl
cmp
mov
jp
lahf
pop
sub
lret
hlt
incl
inc
mov
mov
push
and
dec
das
jo
dec
xchg
push
lds
push
repz
or
pop
pop
or
sub
ljmp
int3
jbe
ljmp
lcall
xor
push
mov
sbb
push
in
xchg
movsl
xlat
int3
dec
xlat
mov
sub
xchg
xchg
push
jmp
dec
incl
ja
in
xor
insl
out
cli
inc
push
fisttpll
xchg
addr16
ss
stc
and
in
sub
mov
inc
sbb
push
and
fdiv
cmpsl
or
ds
jbe
imul
push
or
xor
call
jnp
push
sub
dec
popa
clc
psraw
imul
ljmp
cmp
cmovnp
pop
in
mov
pushl
out
ret
jle
pushl
add
xchg
out
mov
and
cmc
enter
loope
cwtl
les
add
jnp
loope
or
ljmp
push
dec
ljmp
push
cmpsl
test
jg
cmp
or
sarb
out
test
call
dec
dec
lods
pop
lock
insb
add
enter
aad
sbb
and
leave
cmp
push
loopne
push
mov
push
scas
int
outsl
jns
xor
or
push
lcall
sub
lret
xchg
aaa
adc
pop
arpl
inc
and
sub
inc
and
pop
out
mov
cli
decl
ja
xchg
movsb
ret
sub
out
inc
lcall
nop
movl
xchg
push
or
jmp
sbb
stc
or
cs
xor
mov
pushl
hlt
dec
or
jnp
mov
xchg
dec
fiaddl
and
clc
jp
imul
pushl
subl
push
jg
ficoms
pusha
lcall
and
mov
lods
cld
cmc
aam
inc
dec
hlt
jne
inc
xchg
jnp
xchg
cmpxchg
dec
cli
inc
pop
out
in
and
addl
mov
ss
ljmp
mov
enter
insl
mov
data16
pop
dec
loopne
mov
push
push
adc
es
clc
cmp
mov
jmp
rcrb
mov
jne
lds
cld
out
inc
lock
in
pushl
fldl
scas
add
cmpsl
shll
sarl
sub
fisubrl
pushl
pop
aas
mov
test
mov
pop
mov
out
arpl
mov
dec
out
sbb
call
negl
into
inc
in
loope
mov
mov
sbb
cmpsb
movsb
and
scas
mov
lcall
repz
mov
mov
jnp
and
and
or
js
dec
ljmp
popa
jmp
jl
in
es
test
ljmp
nop
jecxz
or
sarl
int3
es
dec
xor
jb
xchg
cmp
push
xchg
jg
adc
stos
test
leave
push
outsb
js
call
out
or
leave
mov
cmp
ret
pusha
sahf
movsb
jg
stos
cli
call
push
addr16
push
adc
xchg
rorl
movsb
lea
xor
pop
sbb
or
sub
inc
mov
lock
jg
jl
add
sbb
fsubrs
adc
fbld
or
mov
xor
jp
inc
xchg
stos
das
mov
sahf
je
mov
and
stos
adc
pushl
icebp
xorl
inc
xchg
arpl
cli
es
push
sub
lcall
cmpsb
sbb
cmp
movsb
cmc
filds
inc
sbb
pop
xor
lcall
ror
xchg
sub
fcompl
neg
dec
lods
mov
mov
push
jo
sbb
pop
ret
adc
and
in
jbe
out
cmp
stos
push
das
insb
dec
cmp
ret
add
sbb
jl
cmpsb
cmpb
add
mov
test
xor
cmp
data16
xchg
hlt
dec
call
cmp
sub
push
aaa
pop
mov
mov
xor
rol
fnsave
in
dec
or
mov
cli
jp
pushl
or
mov
jp
les
sbb
scas
scas
ljmp
push
and
movsl
lcall
ror
sbb
pop
sub
add
clc
jg
add
push
aad
cli
loope
inc
cmp
out
adc
daa
scas
shl
scas
repnz
ljmp
lret
push
in
ret
icebp
add
movsb
hlt
std
aaa
push
xor
lcall
js
cmp
es
rcrl
je
mov
loop
dec
or
mov
lcall
mov
enter
mov
push
cmp
insl
add
incl
testb
jnp
cmp
xchg
pop
mov
lods
movsb
decl
or
xchg
jae
fimull
lock
aas
addr16
sub
lea
push
push
dec
push
pushl
imul
and
lcall
je
inc
xchg
fcoms
rorb
mov
push
inc
addr16
push
ljmp
nop
pop
dec
sub
pop
and
fcomp
hlt
pop
mov
inc
or
adc
psrlq
cmc
pushf
pop
sbb
cs
add
adc
pop
push
sub
fldl
loope
pop
pop
push
mov
adc
lcall
pop
les
jl
dec
call
scas
fs
loope
cs
dec
xor
mov
sar
inc
movb
adc
or
push
mov
fs
jbe
test
lcall
bound
scas
jecxz
cmp
out
dec
jmp
pushl
sbb
dec
movsb
xor
out
das
adc
in
mov
jmp
fisubrs
fwait
mov
xchg
jl
xchg
cli
fnstcw
adcl
outsb
ret
fists
mov
jnp
jae
loope
dec
stc
aad
sti
inc
movsb
mov
addb
jnp
xchg
sub
dec
punpckldq
loope
pushl
jnp
dec
std
int
sub
in
sub
push
and
stos
xor
sub
test
rep
cmpsl
jbe
ffreep
jno
sub
call
loopne
popf
jo
mov
mov
inc
cmp
push
nop
jp,pn
repz
call
mov
out
aam
ret
dec
fwait
leave
cmp
in
inc
movsb
xchg
inc
shl
adc
pushf
imul
dec
fnsave
fistpll
outsl
scas
js
int
mov
or
out
dec
icebp
mov
sub
add
sub
mov
insb
loop
xor
rclb
jb
xor
xlat
cmp
movsb
popa
clc
incl
iret
hlt
dec
test
hlt
test
fldpi
and
pop
pop
pop
dec
ret
xor
add
js
lcall
loope,pt
sub
add
in
jl
scas
lahf
pop
ret
xor
cmc
cmp
mov
dec
push
adc
loopne
call
repz
add
in
mov
ljmp
int
xchg
cmp
filds
jnp
jl
jo
dec
sbb
pop
dec
add
dec
adc
pushl
test
dec
aas
faddl
popf
sahf
call
add
out
sub
inc
or
das
ret
adc
ja
lods
lock
rcr
pop
cld
decl
outsb
idiv
mov
adc
push
push
add
dec
mull
decl
in
or
push
xchg
sbb
in
icebp
jne
cwtl
adc
das
ljmp
loope
xorb
jp
jmp
lcall
cmp
add
incl
jns
cmp
mov
add
loop
or
aas
xor
inc
decl
sbb
mov
ss
add
repz
out
fstl
add
call
or
mov
pop
xor
cmpsb
mov
and
mov
mov
scas
loopne
popa
test
loope
dec
sub
mov
leave
ljmp
jle
dec
fbld
jg
push
movsl
in
das
xchg
imul
pop
outsb
out
add
lcall
inc
loopne
cmp
adc
das
cmpsb
pushf
mov
pushf
stos
mov
data16
in
insb
pop
dec
cld
ljmp
out
push
scas
cmpsl
push
sub
push
jp
outsl
daa
cmp
push
sbb
fcoms
cld
push
jmp
mov
pop
cmp
pusha
sti
mov
decl
inc
cmp
push
outsb
popf
out
ficoml
pop
clc
repz
cmp
out
and
inc
sbb
fcoms
push
sar
outsl
lgdtl
lahf
xchg
push
sbb
clc
call
fbstp
insb
and
rclb
mov
jmp
icebp
in
sbb
iret
sub
std
scas
bound
in
xchg
mov
inc
push
push
ljmp
jbe
cli
lcall
push
xlat
adc
testb
jns
xlat
pushf
test
in
cmp
pushl
loop
add
dec
aaa
or
scas
fldl
fiadds
mov
sbb
jmp
xor
fdivr
lcall
mov
dec
mov
out
insl
inc
inc
sbb
jmp
cmp
mov
call
aam
in
inc
jle
out
jns
cld
les
fld1
ficompl
stos
pop
mov
lods
push
push
dec
mov
inc
dec
jmp
test
xor
test
lods
push
push
insl
sti
rolb
mov
adc
push
decl
or
int3
adc
push
mov
xchg
mov
mov
mov
mov
mov
mov
lods
xchg
daa
sbb
xchg
aaa
pop
and
mov
jmp
pop
fisttpll
das
inc
outsb
mov
loop
pop
mov
es
adc
in
loop
incl
mov
les
or
bound
lcall
and
xor
dec
sti
negl
inc
cmp
inc
psubq
jge
pop
loop
lcall
and
push
pop
xchg
push
fcomip
cmp
incl
and
aad
mov
ret
out
sub
lcall
sarb
sub
cmp
les
push
mov
incl
mov
add
lods
dec
and
jo
xchg
outsl
cli
decl
jge
jge
iret
and
mov
push
mov
jbe
or
jmp
leave
decb
shlb
jnp
cwtl
xchg
jl
lcall
sti
clc
cmp
ljmp
icebp
push
or
pop
mov
shll
sub
data16
mov
in
mov
ss
incl
cld
in
xor
add
xor
jae
fimull
pushl
cmpsb
xchg
bound
adc
popa
fadds
rol
mov
clc
sahf
mov
sbb
movsl
xchg
pushl
push
xor
test
jns
dec
fiaddl
and
ljmp
gs
cmp
mov
call
lret
mov
fdiv
aaa
jl
out
movd
jge
jg
in
cmp
incl
iret
pop
or
cmpsb
stos
or
mov
fsubrl
dec
jno
fdivr
decl
cmp
dec
push
cmp
fimuls
mov
sub
mov
fcomip
mov
jmp
sub
cmp
stos
xor
or
add
out
inc
mov
hlt
or
adc
sub
cli
in
sbb
cwtl
jl
xlat
incl
fnstenv
addr16
lods
fimuls
xchg
jo
jg
jae
imul
out
xchg
shrb
jmp
dec
std
gs
jecxz
add
and
xchg
sbb
call
push
in
xchg
into
push
xchg
les
ljmp
push
das
cmp
xchg
inc
cs
adc
adc
leave
mov
jmp
bnd
call
jg
adc
push
in
addb
mov
jg
jns,pt
mov
jmp
adc
popf
out
dec
mov
rorb
xchg
or
inc
in
sub
push
in
sub
push
inc
cli
mov
inc
mov
mov
inc
jg
fdivp
pop
nop
add
nop
jge
jp
scas
dec
cmpb
incl
arpl
pop
sbb
xor
pop
addr16
push
and
test
add
jmp
out
in
fdivs
push
pop
int
dec
pop
sub
push
hlt
jg
icebp
stos
lock
insb
ljmp
pop
inc
mov
dec
sti
sbb
mov
loope
bound
jmp
mov
sub
pushl
decb
sbb
pmaxsw
rorb
test
and
jns
jb
leave
fadds
cwtl
sahf
push
test
cmp
or
dec
push
mov
xchg
lds
adc
fiaddl
sar
out
xor
mov
xchg
sbb
mov
push
decl
repnz
sub
pop
xchg
jle
daa
dec
roll
inc
dec
popa
push
insb
mov
cmc
cmp
xchg
fisubrl
insb
and
xor
shll
movsb
cmp
sbb
insb
mov
dec
cmp
mov
inc
cmp
pop
gs
push
enter
je
jo
mov
dec
call
pop
nop
inc
sahf
xlat
lods
rorl
dec
stos
xor
adc
decl
icebp
roll
lahf
push
in
xchg
leave
sbb
cmpsb
mov
decl
pop
arpl
in
jmp
sahf
jg
mov
and
sub
sbb
sarl
shl
push
dec
cmp
jbe
adc
mov
mov
movsb
jnp
jae
data16
mov
xchg
xchg
and
push
addr16
or
decl
clc
sahf
enter
dec
mov
ss
ljmp
jno
add
shrb
jb
lahf
cld
decl
cmpsl
imul
sbb
xor
fucomp
fcos
pushl
jl
push
inc
loope
repnz
sbb
mov
mov
xor
jg
incl
jno
and
jecxz
aaa
adc
xor
insb
out
sub
orl
out
jmp
jg
or
out
inc
sub
mov
pop
loope
popa
mov
std
add
js
lds
add
ficoms
fld
gs
lcall
cmp
fdivrl
call
push
ror
orl
xor
aas
aas
sbb
mov
cmp
xchg
xor
mov
stc
lret
pop
inc
xor
mov
xlat
push
or
lea
mov
sti
push
pushl
push
mov
adc
repnz
fsqrt
push
inc
decb
jmp
lcall
cmp
pusha
rorl
jecxz
testl
inc
rcrb
decl
out
pop
fdivl
ret
xchg
dec
lds
mov
cmp
and
aas
or
cmp
dec
xor
fucomip
shrl
subb
js
loope
sub
cmp
and
push
std
mov
mov
sub
dec
lret
std
decl
xor
xchg
rcr
jp
jecxz
cmp
cli
call
xor
out
sbb
movsl
stos
scas
ljmp
aas
add
pushl
iret
xor
les
fistpl
out
enter
fidivs
mov
insl
sbb
push
cmp
and
sub
pushl
in
fisubrl
sub
adc
clc
mov
dec
adc
lcall
and
inc
and
xchg
dec
push
std
outsl
aas
sti
pop
andb
jg
int
fmull
ret
lahf
cld
das
ret
lahf
push
loop
outsl
lahf
adc
push
outsb
fisttpl
dec
loopne
mov
cmp
mov
jg
gs
jge
int3
cmp
xchg
lods
and
jmp
outsb
dec
test
loop
mov
xchg
orb
xchg
jecxz
xchg
cmp
loop
fstpt
xor
pop
ds
incl
xor
iret
mov
mov
cmc
movsl
fbld
adc
cld
test
into
inc
call
cmp
jmp
jle
aas
cmp
loope
cs
mov
movsl
call
mov
sbb
xor
push
or
dec
ljmp
mov
lea
repnz
lods
je
sub
cmp
fcomip
and
push
inc
sbb
fmull
loop
stc
and
mov
scas
repnz
sbb
cmp
inc
data16
inc
jbe
jg
pop
xor
or
pop
mov
mov
jmp
lret
lock
ljmp
jo
jge
pushf
add
loop
pop
and
adc
out
xchg
xor
pop
decl
push
aas
adc
ds
inc
repz
sbb
lods
xchg
test
xchg
incl
bound
aas
push
or
sbb
enter
loopne
fbld
fcompp
pop
push
gs
mov
push
lods
mov
push
mov
dec
xchg
mulb
fcomip
or
sti
dec
dec
sarl
cli
sub
cmp
movsb
decl
pop
bound
mov
outsb
mov
stos
stos
rcrl
out
mov
notl
stc
add
data16
push
cmp
xchg
fildl
mov
and
outsl
filds
jg
fbld
sbb
out
push
faddl
decl
cmc
jae
sub
movsl
mov
xchg
add
rcrl
inc
add
cmp
cmp
or
inc
cmp
sarl
dec
xchg
mov
inc
xor
incl
ror
ss
into
push
sarl
push
push
test
test
incl
cmp
inc
ja
xor
bound
xor
incl
iret
push
loope
rcrb
jnp
add
out
jae
xchg
decl
in
pop
jge
jp
imul
push
movsb
sbb
mov
test
cld
out
sti
or
insl
mov
jbe
sub
push
idivb
lea
pop
sbb
sti
or
std
mov
mov
ljmp
pop
mov
mov
xchg
xchg
fincstp
stc
jnp
fistl
jno
ljmp
push
lret
inc
and
lret
mov
pushl
mov
outsl
in
cmp
or
pop
xor
lret
sbb
push
out
add
mov
call
jnp
lahf
cmp
xor
sbb
subl
ds
mov
hlt
lcall
and
test
std
push
sbb
jl
outsl
ljmp
pop
push
mov
movb
cwtl
mov
add
jb
insl
push
cmp
mov
sub
cmc
cmp
lods
out
mov
nop
push
xchg
adc
in
je
sar
decl
lock
mov
adc
jb
xchg
test
pop
mov
push
add
dec
sbb
dec
imul
lock
push
push
cld
mov
call
mov
orl
sub
pop
adc
cmpsl
lock
cmpsl
jae
push
test
push
xchg
dec
lcall
push
xor
mov
std
aaa
scas
push
stc
sbb
or
in
mov
mov
leave
and
mov
incl
sarb
cmpsb
iret
inc
test
jmp
int3
push
jno
xlat
stos
aam
inc
out
gs
int
jno
cmp
jl
imul
mov
mov
mov
xchg
add
or
or
mov
sbb
out
call
dec
adc
call
subb
xchg
iret
dec
sbb
lahf
in
mov
insb
and
or
cltd
push
sahf
sbb
dec
cld
mov
in
or
jae
sub
pop
inc
mov
xor
sub
es
lret
lret
stos
incl
xchg
cmp
push
pop
jnp
pop
sahf
cmp
push
movsl
inc
int
mov
incl
fisubs
fcoms
mov
mov
data16
lcall
push
outsl
out
adc
dec
shrl
sbb
xor
mov
mov
dec
xor
pushl
sub
lock
pop
jae
movsb
inc
mov
pop
inc
in
enter
clc
mov
push
decl
aas
dec
test
sub
mov
sbb
mov
popa
mov
decl
and
mov
cmp
jmp
fisttpll
test
ljmp
inc
int
test
jnp
jns
adc
fucomip
lods
icebp
jbe
sub
pop
pop
mov
lds
add
mov
sbb
mov
inc
and
popa
jns
inc
shr
push
stos
rorb
loopne
ljmp
inc
mov
sbb
mov
ret
cmp
pop
ljmp
push
movsl
decl
call
sahf
jge
mov
jns
sub
push
add
outsl
mov
jns
hlt
add
loope
into
addb
out
add
mov
jb
pop
mov
mov
mov
xor
fistpl
fadds
adc
jge
xchg
call
outsb
jbe
mov
push
stc
xor
jg
jecxz
das
adc
adc
popa
jle
push
aad
fcomip
sub
repz
jp
push
test
cwtl
and
cmp
ja
push
inc
clc
jg
and
cmp
xchg
cmp
aas
cs
pop
incl
dec
or
stc
cmp
dec
or
es
into
fcmovnu
movb
aaa
cld
add
bound
cmp
jnp
dec
and
sbb
sbbb
jmp
adc
inc
or
repz
js
xor
push
lock
ret
test
jp
lret
stos
lcall
mov
iret
mov
xor
cmp
repz
idiv
ljmp
cmp
xor
movsb
and
dec
xor
in
out
rcrb
pop
ror
lret
cmp
loopne
fdivr
sub
xchg
or
add
nop
push
es
inc
mov
out
dec
ret
adc
mov
les
fidivrl
fildll
insl
adc
lret
loope
fwait
xchg
lcall
or
xchg
fldl
fcompl
imul
mov
stos
jle
lfs
aad
mov
lcall
fmull
sbb
mov
test
loopne
scas
inc
jb
dec
decl
inc
jg
xlat
xchg
nop
xchg
jg
adc
mov
mov
inc
inc
or
dec
xor
jecxz
mov
roll
pop
hlt
add
outsl
pop
mov
stc
cs
in
lds
aam
psrlw
adc
test
lock
mov
dec
push
stos
addl
clc
das
sar
inc
adc
div
xchg
push
das
or
mov
push
add
fsubrp
mov
dec
movsb
or
sbb
or
movsb
cmc
adcb
adc
ljmp
push
xor
mov
jmp
inc
mov
lds
xchg
jae
cmp
pusha
lahf
jl
mov
int
decl
lock
push
pop
sub
nop
jno
rcr
add
mov
pusha
std
cmp
sbb
add
mov
jg
inc
fistps
into
or
pushl
mov
dec
jecxz
mov
test
ss
movsb
clc
add
insl
bound
dec
ljmp
mov
pop
adc
dec
push
push
add
fs
add
cmpsl
rcrl
lcall
shll
ljmp
and
dec
subl
loope
mov
jb
cli
adc
lcall
std
in
pop
cmp
jmp
test
fnstenv
xlat
dec
decl
das
xor
shll
mov
cld
pushf
add
shlb
push
pusha
popf
pop
pop
rcll
icebp
jg
mov
inc
jns
mov
add
jns
in
pop
cmp
insb
testl
push
leave
cs
sar
mov
orl
push
pop
mov
enter
mov
call
cmp
add
mov
push
pusha
mov
sahf
nop
fisubl
pusha
ja
adc
xchg
fisttps
sbb
sub
outsl
sub
sbb
imul
mov
mov
dec
cli
test
dec
lods
popf
sbb
mov
out
mov
mov
jmp
out
mov
inc
xchg
mov
pop
cwtl
add
outsl
mov
movsl
lret
cmp
sbb
fsubrs
or
mov
xchg
pop
imul
test
lcall
jmp
inc
xchg
cmp
into
xchg
jecxz
pop
dec
idiv
jmp
in
mov
fnsave
ljmp
mov
adc
aaa
aad
incl
mov
pop
xchg
loopne
push
xor
es
ljmp
sub
aaa
arpl
ret
fsubrs
cmpsl
inc
rol
ljmp
lahf
mov
push
dec
rorb
std
jge
shlb
sub
xchg
dec
push
das
mov
inc
lods
push
xor
push
and
sbb
pushf
outsb
int3
add
cmc
push
adc
mov
lcall
mov
cmp
cltd
or
icebp
mov
aam
std
std
adc
pop
mov
loope
call
in
rcr
sahf
call
out
mov
sub
aam
add
insb
dec
sahf
sbb
add
out
data16
test
adc
push
cld
cmp
nop
push
dec
movl
loop
fwait
lods
mov
in
mov
or
lret
inc
jo
pop
lahf
xchg
jb
stc
pop
mov
push
cmc
sub
add
or
jle
stc
imul
jo
jg
fdivl
add
mov
mov
call
lcall
into
inc
pusha
push
leave
rcrb
mov
inc
mov
mov
clc
fwait
xchg
ljmp
adc
movsb
daa
mov
jecxz
mov
mov
mov
lcall
add
pop
sarb
adc
pushl
pop
or
jbe
push
push
out
out
ss
or
or
jo
aaa
sbb
call
mov
dec
mov
xor
pop
xchg
sbb
or
jne
insl
ja
lahf
clc
lcall
push
add
fldenv
xor
mov
cltd
mov
js
dec
lret
outsl
add
repz
inc
iret
stos
hlt
cmpsb
cs
dec
pop
mov
call
dec
adc
jge
and
incb
lods
sub
mov
pop
inc
cmpsb
pop
clc
jge
pop
or
pop
xor
adc
call
adc
repz
sahf
and
pop
inc
leave
inc
push
jmp
xchg
sub
dec
and
das
mov
or
enter
sbb
mov
inc
or
outsl
das
mov
push
shll
dec
dec
and
inc
ret
add
mov
loopne
repnz
movsb
ret
scas
xor
jns
pusha
aam
mov
movsb
sbb
les
scas
inc
dec
repz
cmp
mov
mov
push
jb
pushf
dec
xlat
sbb
xor
pop
mov
ljmp
cmp
sbb
stos
jbe
and
xchg
add
sub
lds
es
xlat
push
jmp
scas
in
lret
sti
cld
fidivs
xlat
sbb
mov
xchg
repnz
pop
adc
das
clc
inc
cmp
push
cld
dec
xlat
cs
jl
mov
pop
mov
push
mov
xchg
push
clc
cltd
dec
mov
mov
rcrb
xor
jns
and
movsl
sbb
mov
movsb
cmpsl
in
gs
dec
lcall
and
jne
int3
jno
in
mov
jno
push
aad
addb
imul
call
cli
jno
sbb
push
lods
sar
psubw
lock
push
fmuls
pop
scas
rol
mov
pop
jecxz
shr
push
lock
sbb
lock
sbb
push
push
jg
mov
ljmp
test
mov
push
rcrb
push
inc
pop
outsb
fmull
add
mov
lock
sub
es
fisubrl
add
xchg
out
incl
iret
adc
ret
pop
push
mov
in
sbb
outsl
xchg
jp
mov
inc
hlt
push
inc
mov
incl
iret
jmp
push
in
xor
dec
cmc
das
inc
lock
orl
cmp
or
mov
mov
jmp
aad
push
adc
outsb
repnz
dec
ret
jg
or
cld
jb
mov
scas
xchg
push
incb
test
das
pushf
into
les
mov
sbb
mov
test
inc
addr16
cs
shll
sbb
leave
or
addl
ljmp
pop
jne
pop
mov
sti
push
call
xchg
dec
outsb
xchg
xor
outsb
jecxz
popf
jns
fsubrs
mov
leave
incl
and
in
mov
fldt
loop
addl
adc
jmp
iret
jp
mov
sub
ja
add
insb
mov
iret
xchg
xchg
mov
ret
cli
popa
fildll
cmp
imul
pop
fimull
mov
mov
scas
push
mov
lahf
or
stos
data16
les
scas
mov
ja
popf
lahf
loopne
bound
sub
mov
cmp
add
call
cmp
fadds
add
in
dec
leave
adc
leave
lcall
shlb
out
enter
pop
decl
and
jb
dec
out
in
das
movsb
dec
fistps
cmpsl
cmp
jb
push
push
ds
sub
mov
hlt
sbb
xchg
fcomip
icebp
incl
jg
int
push
ror
inc
dec
or
mov
outsb
sbb
mov
fists
loop
push
push
dec
pop
pop
xor
adc
jl
insb
imul
jg
out
xchg
jp
psubsw
mov
mov
cld
inc
cmp
notb
push
mov
fimull
fsubs
pop
sbb
aaa
mov
xor
push
shrb
aas
les
dec
shl
and
pop
stos
mov
incl
dec
adc
addr16
popf
pop
loop
dec
cltd
jnp
mov
jge
jo
dec
push
cwtl
clc
cmp
decl
fndisi(8087
mov
mov
push
sbb
repz
faddp
or
inc
dec
dec
loopne
jmp
adc
pop
jl
adc
adc
jecxz
or
adc
in
inc
data16
out
idiv
call
sti
dec
stos
cmp
add
push
push
pop
mov
jmp
push
lret
out
iret
xor
sbb
xchg
lcall
inc
rcr
push
pop
cltd
stos
adcl
jp
in
or
sub
push
fisubl
arpl
in
jnp
push
sub
je
fmulp
aaa
add
jnp
out
jo
cmp
or
inc
mov
mov
stos
and
stos
xor
adc
js
fbstp
dec
cmp
movsb
push
mov
xchg
mov
je
or
mov
movsb
stos
cltd
jo
rcll
sbb
jb
and
mov
fs
fmul
shlb
les
sbb
mov
test
ljmp
das
in
pop
cltd
fcompl
gs
push
cltd
push
and
pop
add
cmp
icebp
sbb
pop
and
xchg
mov
in
push
loope
xor
and
mov
sub
test
test
inc
ret
add
mov
jg
call
andl
push
mov
pop
jb
pop
jmp
sub
dec
scas
and
lds
popa
mov
out
sub
jmp
mov
jl
push
int
sbb
jmp
testl
fnstsw
jmp
mov
xor
push
pop
xor
mov
jmp
mov
jbe
fucomp
out
imul
sbb
clc
and
decl
xchg
loope
loop
jbe
insl
xchg
pop
inc
sti
dec
mov
dec
mov
jg
fcmovne
jecxz
fs
xor
ljmp
stc
in
mov
jle
lret
outsl
and
jle
jae
pmovmskb
mov
adc
mov
in
xor
or
cli
cmpsl
cmp
sub
clc
imul
shrb
xor
inc
or
clc
pushl
fsubrs
pop
call
out
stc
pop
test
test
in
inc
enter
aam
mov
add
pop
push
lds
fnsave
lahf
mov
dec
or
cmp
jmp
xchg
stc
mov
call
or
mov
cmp
cmp
movsb
jne
mov
or
decl
dec
sub
push
mov
sub
cld
or
call
mov
je,pn
pop
pop
inc
push
insl
mull
adc
mov
xor
fdivr
pop
ret
jno
pusha
pop
movsb
adc
dec
lcall
mov
sbb
xor
cmp
hlt
mov
pop
js
outsl
pop
call
cli
cmp
hlt
inc
movsb
adc
push
enter
pop
mov
and
jmp
pop
cmpsl
mov
mov
daa
jp
add
out
mov
lea
fmuls
sub
inc
hlt
cmc
fsubr
push
cli
mov
pop
arpl
in
jns
sbb
sbb
js
ljmp
mov
divb
int
ljmp
jp
mov
jecxz
and
jb
xor
adc
repz
incl
mov
in
push
adc
push
add
sbb
adc
jg
jmp
dec
out
imul
js
repz
or
jnp
repnz
mov
add
xchg
jae
divl
dec
xchg
fimull
test
nop
notl
inc
insl
out
lods
adc
xor
call
inc
jecxz
lea
sub
jnp
sub
dec
xchg
push
inc
jecxz
add
dec
xchg
leave
dec
cmp
jne
cs
mov
cmp
popl
inc
add
push
call
jg
sub
mov
repz
xchg
mov
shll
jl
ja
decl
idivb
sbb
out
clc
pop
ret
loope
inc
push
add
add
std
call
mov
cwtl
jne
rcrl
in
fsubrs
les
xchg
push
jg
lock
cmpsl
mull
adcb
mov
cli
stos
test
push
inc
ds
call
outsl
out
outsl
test
inc
push
mull
mov
call
jl
insb
or
icebp
jg
outsb
nop
incl
jg
test
xor
sbb
mov
sub
sbbl
mov
inc
out
out
lcall
cld
lock
icebp
lock
lret
add
fnsetpm(287
mov
xor
mov
pop
loop
ret
pop
imul
jbe
adc
cmp
cmc
aad
int3
push
ror
cmpsb
cltd
adc
sbb
cmp
push
jb
jmp
clc
mov
sahf
icebp
add
inc
push
mov
cli
and
pushf
cmp
decl
and
in
sahf
sub
push
mov
ret
cmp
pop
fdivs
les
lcall
ret
mov
xchg
hlt
ljmp
sbb
dec
push
mov
dec
cli
decl
rorb
daa
pop
cmpsb
fidivl
sub
outsl
mov
test
sti
pushf
push
cmp
call
icebp
fldt
mov
and
jge
into
mov
inc
fbstp
popa
clc
unpckhps
pusha
aas
cltd
jns
pop
pop
ud0
lcall
outsb
cmp
and
inc
repnz
lret
cwtl
jp
insb
outsb
repnz
addl
mov
sub
xchg
ss
mov
jnp
sub
add
cmp
jg
cmp
cmp
les
lds
and
shl
dec
or
sub
pop
movsl
and
inc
push
sub
sub
push
xor
sbb
in
insl
mov
movsl
das
clc
mov
jle
cld
int
jnp
arpl
dec
cld
in
repnz
cmp
push
bound
mov
rcll
ret
imul
push
jge
stos
push
iret
lods
mov
cmp
xor
loop
xor
adc
sbb
out
mov
mov
js
pop
fsubrs
xchg
mov
mov
pushl
pop
repnz
shlb
sub
mov
sbb
test
xchg
mov
mov
jns
shlb
push
cmp
sar
decl
imul
loop
into
mov
xchg
ja
push
sub
xchg
mov
test
jg
mov
push
and
ja
sub
insl
icebp
mov
fwait
jge
stos
or
fbld
push
shl
loop
push
xchg
mov
xchg
icebp
out
add
lahf
movsb
sbb
sbb
lcall
fsubl
lret
xor
add
dec
into
mov
rolb
mov
int3
rcll
push
ret
jle
ljmp
cmp
inc
addr16
lods
sub
inc
add
pop
jg
mov
add
in
sub
jg
jg
jle
dec
das
cmp
dec
in
ds
cmc
rclb
int3
incl
lods
or
xchg
cli
add
lcall
scas
sahf
call
push
jae
add
jle
add
adc
add
shll
and
dec
xchg
mov
leave
push
push
dec
test
adc
call
fisttpll
push
pusha
xlat
je
clc
push
jg
aad
push
pop
xorb
cmp
pop
neg
push
pop
lcall
push
idivl
pop
cli
jns
leave
es
sbb
call
add
pop
scas
mov
addr16
fwait
lret
dec
pop
call
jb
repz
push
ficoms
inc
outsl
clc
xor
push
add
ja
jle
push
mov
addr16
mov
jnp
andb
and
imul
ret
push
mov
lret
pop
push
arpl
xor
inc
aas
adc
cmp
mov
loopne
jg
inc
cld
jnp
ljmp
sub
jp
mov
pop
jmp
into
roll
outsl
cmp
in
lods
cmp
add
neg
mov
out
lcall
cmpl
and
or
and
push
dec
xchg
incb
dec
pop
ja
bound
dec
popf
decl
rcr
out
pop
jecxz
jno
jl
scas
subb
fcomip
pushl
xor
lret
add
or
aaa
cli
clc
notb
or
xor
add
call
mov
faddl
adc
inc
push
and
into
orl
loope
cmp
sbb
out
pop
out
hlt
scas
in
xor
jle
ljmp
test
adc
incl
push
lcall
lahf
mov
and
dec
clc
inc
sbb
movsl
fcmovbe
mov
outsb
arpl
xchg
jmp
xor
mov
testb
push
jecxz
push
pop
arpl
sbb
test
cli
jg
dec
adc
add
lahf
ljmp
lret
mov
movsb
inc
pop
push
shlb
mov
mov
repnz
push
popf
insl
nop
mov
adc
out
push
xchg
out
mov
push
sub
mov
sub
push
into
dec
mov
jne
fidivrs
ss
push
xchg
outsb
push
sar
clc
call
mulb
mov
loopne
sbb
iret
sub
mov
orl
out
imul
loopne
loope
jno
aas
aaa
adc
push
sbb
push
dec
xor
adc
pusha
sti
aad
fcomip
scas
jmp
xlat
roll
gs
rclb
dec
mov
mov
cmp
pop
test
and
mov
shll
insb
cmpsb
lods
mov
pusha
cmp
xchg
sahf
nop
incl
dec
adc
or
push
xchg
out
jo
cltd
enter
jecxz
push
loope
jo
dec
clc
dec
lcall
cs
out
xor
add
lcall
vrsqrtss
xor
testb
ud0
lcall
loope
ljmp
outsb
jns
in
push
xchg
mov
pop
or
mov
lock
je
aam
xchg
mov
push
les
ljmp
inc
add
sbb
push
fstp
fwait
in
je
mov
cld
call
in
mov
movsl
jle
inc
add
cwtl
rcll
mov
insb
adc
popl
scas
xchg
and
add
rorl
lret
icebp
ljmp
hlt
push
mov
test
das
push
cli
fs
scas
xor
in
iret
fldl
pop
dec
adc
incl
fwait
xchg
mov
daa
shll
cmp
xlat
repz
jecxz
test
add
enter
push
clc
fsubs
rorb
sub
decl
xor
adc
lea
js
adc
nop
hlt
inc
add
test
xchg
jno
push
push
inc
inc
mov
cmp
mov
or
lret
cmp
add
out
sbb
jge
daa
mov
cmp
sbb
pop
add
pop
dec
xor
out
xchg
xor
div
sub
movsb
or
inc
aam
jae
dec
cmc
push
pushl
std
decl
pop
or
sub
enter
cmp
or
mov
adc
incl
pop
xor
cmpsb
inc
dec
inc
mov
push
incl
mov
xchg
mov
mov
add
pop
lds
call
push
shlb
and
std
or
lret
jbe
adc
cli
imul
shll
repz
ret
and
inc
push
adc
call
or
in
in
push
cmc
mov
pop
and
das
adc
xchg
lcall
add
mov
lret
mov
mov
inc
mov
jmp
iret
in
xchg
mov
imul
xchg
mov
dec
push
push
push
jbe
or
sahf
jmp
decl
sub
add
dec
push
push
and
xchg
sbb
ret
cs
mov
xchg
ror
jbe
sbb
test
iret
lahf
mov
lcall
xor
push
jp
xchg
sub
cmp
pusha
or
data16
fildl
jmp
gs
inc
jmp
movsl
mov
je
testl
outsl
icebp
aaa
mov
outsl
loope
xchg
sub
cmp
lcall
sbb
fistpll
mov
scas
mov
push
std
lahf
inc
mov
xor
adc
andl
mov
addr16
xchg
into
sbb
mov
and
sbb
lret
in
and
sbb
sbb
jns
cmc
jmp
or
ds
add
lret
sub
adc
cltd
xor
add
lcall
jae
test
push
jo
gs
inc
decb
fcompl
mov
push
xor
dec
dec
cwtl
movsl
push
xchg
or
add
scas
js
dec
ljmp
cmpsl
sub
xlat
pushf
xchg
lret
jae
jmp
pop
or
pop
sbb
sub
add
sub
shrl
push
js
jbe
mov
hlt
fst
sbb
sbb
sbb
or
lods
jge
hlt
add
mov
call
jbe
push
push
adc
adc
in
out
test
mov
rorl
xchg
pop
loop
in
mov
jecxz
sub
testb
push
sub
push
adc
movsl
sbb
mov
push
out
jl
popf
aam
in
pop
pop
jl
jg
dec
rcr
std
js
pop
jb
xor
enter
push
call
decl
psrld
dec
dec
std
nop
push
mov
decl
cmpsb
addr16
movsl
inc
in
cmp
push
pop
xchg
popf
jl
mov
incl
cld
jmp
popl
adc
sbb
aam
fdivrl
xchg
mov
sub
inc
decl
std
mov
xchg
add
mov
lcall
add
aam
xor
call
mov
sbb
out
lahf
rolb
lods
lret
sahf
lea
or
fneni(8087
jmp
cmp
decl
lods
mov
test
cmp
ret
dec
lds
mov
add
xchg
shl
decl
iret
lock
out
mov
dec
and
push
push
pop
movsl
pop
in
cvtpi2ps
fimull
in
outsb
int3
cmp
hlt
cmp
xchg
sbb
popw
adc
adc
cli
jmp
in
xchg
ljmp
dec
in
ja
sahf
pop
shrb
cwtl
sbb
adc
out
test
cmpl
jb
push
daa
xchg
xchg
movsl
mov
mov
pop
lcall
cmp
cmc
ljmp
xor
jle
or
adcl
mov
jge
mov
xor
addl
fsubr
mov
xor
add
mov
int3
outsl
dec
jbe
mov
lret
cld
call
imul
stos
imul
jg
inc
or
in
clc
roll
sbb
cmp
mov
cmpsb
call
cmpsb
std
sbb
mov
cltd
jbe
inc
or
pop
jle
push
out
pop
icebp
ds
int
insb
hlt
test
jne
pop
dec
jl
outsl
es
lock
sub
call
push
sbb
sbb
out
imul
or
adc
pushf
fnsave
jmp
fbld
jnp
mov
xchg
arpl
mov
or
xor
pop
sub
sbb
dec
adc
xchg
and
fstl
pop
outsl
xlat
scas
sub
or
lcall
mov
cmp
loopne
push
pop
ss
mov
mov
pop
rolb
ljmp
dec
jl
pop
cld
inc
adc
lds
pop
and
addb
pop
mov
sbb
sub
jns
repz
decl
or
inc
int
ret
dec
dec
or
mov
scas
das
and
add
decb
xlat
pushl
or
inc
pop
xlat
test
imul
inc
cmpsl
and
aaa
sub
adc
mov
or
mov
xchg
push
jg
pop
call
lret
std
jl
sbb
comiss
inc
ljmp
incl
seta
and
xor
loope
test
loop
test
call
call
adc
pop
sbb
inc
inc
cmp
stos
js
movsb
insl
inc
nop
sahf
sbb
dec
loope
xor
inc
mov
inc
xchg
aam
ljmp
mov
xrelease
jecxz
mov
xlat
lods
mov
call
decl
inc
and
inc
cmc
xlat
pusha
jo
orb
decl
jecxz
push
or
jp
cltd
dec
add
leave
aam
xor
es
adc
adc
loope
idiv
dec
scas
xchg
jmp
xchg
rclb
add
mov
pop
dec
sbb
test
jb
jno
jecxz
cmp
decl
jmp
stos
insb
xor
xor
mov
icebp
push
cmp
ljmp
or
jmp
lret
stos
pop
mov
andl
mov
ljmp
fnstcw
xor
movsl
xor
pushl
insb
pop
jae
stc
sub
insl
aad
push
push
movl
dec
mov
loopne
mov
call
std
sbb
mov
lods
push
scas
or
adc
mov
pop
sbb
incl
xchg
mov
add
je
rorl
fucomip
rcll
sbb
fidivrs
adc
fmuls
cmpsl
sbb
ss
push
cmp
out
xchg
mov
inc
sub
mov
xor
daa
xor
imul
mov
imul
cmp
lods
pop
dec
cmp
push
cmpl
and
xorb
sbb
lods
outsl
in
adc
stos
mov
cmp
inc
push
stos
mov
shl
and
cmpsl
inc
cmc
mov
jl
pop
fstpt
pushf
fwait
mov
fldcw
int3
decl
inc
push
add
je
push
andl
xchg
or
call
cmp
outsl
add
pushl
into
div
xchg
aad
xchg
aas
pop
xor
in
inc
push
aaa
or
repnz
mov
jg
mov
mov
fbld
jno
setno
and
lahf
fimuls
mov
daa
and
out
adc
pop
or
subb
test
jle
cmp
mov
add
out
nop
xor
aam
fcmovnu
testb
mov
iret
in
scas
das
mov
jg
rcrb
rep
stc
scas
jno
push
xlat
mov
inc
popf
xchg
push
sbb
lcall
movsl
or
mov
adc
fwait
push
cmpb
fsub
nop
dec
sbb
mov
fisubrs
fidivl
scas
mov
fistps
int3
aam
pop
xchg
mov
adc
stos
jno
xor
decl
xor
lahf
push
jnp
loope
lcall
cmp
out
mov
scas
cli
jmp
jnp
gs
into
sbb
add
lcall
pushf
fdivrl
cmp
shlb
mov
pusha
xchg
jnp
inc
add
push
es
xlat
mov
je
push
mov
stos
cld
in
test
sti
cmp
aad
ret
pop
out
insb
out
subl
loopne
xchg
rol
in
sbb
dec
std
aam
pop
sbb
dec
xor
in
test
xor
daa
sar
ljmp
pop
cmp
push
dec
repnz
mov
xorb
xor
push
inc
mov
ret
push
inc
mov
jg
movsb
and
lods
enter
add
mov
call
and
mov
inc
loopne
test
xor
push
leave
addr16
xchg
mov
sar
jmp
sbb
pop
into
lock
mov
lea
imul
aam
cmpsl
lods
sets
enter
cli
lcall
jg
adcl
cmpsb
sti
mov
imul
mov
cmpsb
leave
aas
jecxz
mov
int
xchg
movsl
jmp
lcall
add
adc
jbe
mov
sub
dec
jmp
pop
pop
dec
iret
ljmp
ljmp
push
sub
sti
xchg
xor
mov
mov
jle
int
xchg
or
lcall
popf
les
adc
aad
dec
mov
hlt
push
addr16
mov
and
andl
push
sbb
sub
adcb
xchg
add
or
jmp
rcrl
mov
in
jg
ficompl
pop
mov
outsl
push
and
pushf
pop
outsl
jp
int3
sahf
loop
xor
jmp
xchg
das
jp
addr16
repnz
add
and
mov
jp
xor
mov
xlat
mov
mov
arpl
stos
sti
adc
test
mov
lcall
stos
cmp
inc
ret
into
dec
inc
xchg
and
mov
addb
fs
mov
lahf
cmp
lods
cmp
pop
xchg
fldl
xchg
aam
jnp
ljmp
jmp
rcll
das
cmp
adc
push
cmpsl
sub
ljmp
jmp
adc
loopne
mov
lea
and
fadd
add
sub
jb
sar
jmp
shll
andb
test
stos
imul
les
mov
mov
pushl
add
fildl
or
test
out
aad
xlat
rolb
sbb
add
pop
lret
in
sub
lcall
jle
mov
or
mov
aas
jb
sub
push
jmp
jne
dec
xchg
jae
xchg
clc
mov
in
ret
test
fwait
pop
in
push
mov
dec
jns
lds
adc
cmp
jmp
popf
call
addr16
add
aam
dec
add
inc
mov
cwtl
loop
incl
jl
jecxz
adc
push
data16
push
sti
lods
jmp
xchg
ss
cmp
clc
out
push
adc
call
mov
movsl
or
insl
sub
mov
cwtl
sarl
add
pop
stc
pop
adcb
pop
decl
inc
jbe
js
cmp
cmp
inc
lods
repnz
loope
jg
dec
inc
test
pushl
dec
out
add
adc
es
rcl
dec
pusha
jne
xchg
pop
pop
adc
in
inc
cmpsl
push
and
rorl
push
call
int
jno
cli
push
roll
mov
call
jmp
lods
in
fiadds
cmp
jg
das
cli
lahf
pop
mul
cli
jle
sub
sbb
scas
jb
cmp
jp
push
mov
repnz
adc
js
sti
mov
jmp
shrb
ret
jne
call
push
dec
mov
ret
sub
out
push
outsb
dec
mov
aam
inc
cmpsl
sub
add
orb
ror
pop
push
and
test
cmc
push
imul
pusha
adc
inc
xchg
push
leave
punpckhwd
cmp
nop
sub
pusha
push
shlb
dec
sub
sub
cmpb
adc
insb
lret
out
or
clc
or
lcall
push
xor
gs
pop
xor
add
in
mov
ljmp
popl
or
rorb
xchg
sub
xchg
pop
mov
sub
ds
stos
and
ss
push
sbb
in
add
inc
mov
out
cli
mov
pusha
cmpsl
enter
fsts
enter
jnp
sub
pop
lea
inc
dec
jmp
call
jnp,pt
pavgw
sbb
and
add
aaa
test
call
jbe
fidivl
ret
push
pop
mov
loopne
lods
cmc
daa
add
mov
adc
cwtl
std
xlat
jno
mov
push
dec
or
or
das
and
push
or
or
es
cs
repnz
mov
jecxz
jns
je
pop
dec
adc
pushf
inc
das
and
stos
aad
adc
mov
decl
jnp
cmp
mov
cmp
mov
cmp
loop
icebp
int
fisttpl
int3
sub
call
sbb
dec
mov
jge
mov
cmpsb
jle
push
call
or
addr16
or
jne
push
xor
movb
imul
inc
or
call
les
mov
hlt
adc
pop
lret
fiaddl
jmp
mov
stos
imul
leave
je
or
mov
je
sub
lcall
pushf
cmpxchg
xchg
jge
lahf
adc
ljmp
subps
aad
arpl
decl
push
jg
push
push
pushl
mov
mov
jbe
call
lds
outsl
or
out
jnp
pop
call
jns
or
in
sbb
lret
or
xlat
outsb
fiaddl
in
lds
jecxz
aad
das
rclb
icebp
mov
test
xchg
add
or
sti
lcall
dec
xchg
ljmp
incl
cmp
out
je
and
out
mov
mov
sahf
jg
lcall
adc
or
push
addr16
insb
jg
or
cwtl
int
mov
fldln2
mov
pop
fbld
call
jp
sti
jmp
jg
mov
adc
test
pop
cltd
xchg
call
push
mov
cmpsl
aam
incl
sbb
inc
pop
jle
sbb
mov
mov
mov
xlat
and
test
jo
lods
ss
xor
in
gs
sarl
push
mov
ljmp
ss
les
inc
jne
push
sbb
xchg
stos
imul
fcompl
aad
add
aam
decl
movsb
hlt
mov
push
in
divl
push
xlat
inc
lock
sbb
outsl
mov
inc
add
int
or
cmp
jmp
cmp
lds
jl
pop
or
dec
fwait
xchg
inc
mov
or
cli
mov
dec
stos
jae
scas
push
movl
jg
cmpsb
sub
xchg
jnp
mov
iret
aam
jmp
jp
cmp
or
pop
mov
arpl
mov
mov
decl
push
jns
mov
fmuls
faddl
imul
clc
jmp
jnp
inc
imul
mov
mov
adc
clc
test
ljmp
in
int
popf
jle
clc
cmpsl
ss
pop
lods
loopne
sbb
xor
mov
dec
jbe
imull
lcall
iret
jnp
or
test
mov
inc
fs
mov
outsl
cmp
jno
in
es
pushl
inc
xor
popf
add
and
and
stc
jg
inc
lret
jecxz
iret
inc
sbb
into
popf
pop
lret
leave
xchg
cwtl
jno
mov
or
adc
mov
fwait
cwtl
add
xlat
xchg
into
into
push
popa
scas
lods
add
sahf
call
addr16
dec
xchg
xchg
aam
shrb
cs
add
aad
addb
xor
lods
test
scas
mov
pop
sbb
scas
sub
rcl
rcrb
or
or
outsb
int
repnz
mov
dec
xchg
xor
imul
pop
and
jmp
in
jmp
test
pop
cmp
push
jo
test
orl
icebp
and
mov
nop
sbb
test
out
inc
mov
stc
sbb
mov
sar
xor
ret
and
sub
pushl
jg
or
xchg
pop
mov
ljmp
and
jmp
mov
sub
jg
jbe
cmpsl
mov
int3
sbb
iret
push
push
dec
repz
decl
or
inc
sub
push
push
dec
rcll
cmp
mov
sar
lcall
xor
stos
push
adc
dec
jmp
inc
stos
movsl
adc
incl
dec
call
mov
jl
in
addb
enter
push
aas
insl
les
cmpl
cwtl
fsubrs
in
mov
mov
popl
lock
shlb
push
xor
icebp
xlat
mov
jecxz
rorl
fs
cmp
sbb
stos
inc
adc
aad
clc
incl
mov
arpl
mov
push
adc
dec
repz
pushl
fnstsw
in
icebp
mov
lock
push
outsb
stos
icebp
jmp
lahf
jno
push
leave
or
adc
pop
insb
xchg
imul
imul
out
dec
mov
mov
outsl
out
cli
call
mov
cmpsb
jecxz
popa
xor
pop
pop
or
sbb
ds
fistps
nop
mov
fisttpll
add
fadd
mov
test
test
mov
mov
rolb
cld
fsubl
subl
arpl
jb
and
xchg
jne
outsl
clc
decl
mov
dec
dec
jno
adc
mov
jns
adc
add
mov
ljmp
scas
push
sbb
loope
mov
xchg
xchg
aaa
dec
pop
inc
gs
xchg
sub
sahf
lahf
add
sbb
adc
xor
and
cmp
nop
xchg
mov
mov
loope
xchg
aas
incb
enter
jne
repnz
outsl
or
movsb
aas
in
lcall
sarb
rcll
add
div
cmp
xchg
xchg
dec
cld
decl
aas
xchg
aam
push
or
push
jmp
jg
pushf
push
cmpsb
mov
dec
dec
loop
and
incl
mov
aas
pop
pop
pop
cmc
loop
push
mov
enter
into
xchg
outsb
jecxz
sbb
mov
pushl
lcall
mov
dec
add
decl
and
ret
cmpsl
insl
sbb
add
imul
mov
xchg
das
arpl
pushl
ret
mov
xlat
test
insb
clc
pop
xchg
stos
out
jg
cmp
dec
adc
push
pop
loopne
je
movsl
cmp
jno
inc
stos
xchg
and
pop
sub
enter
hlt
dec
mov
jno
popa
mov
pop
sub
dec
iret
pop
and
inc
imul
pop
rorb
fidivrl
or
dec
pop
push
aaa
mov
jge
mov
and
rolb
jl
xor
push
add
cld
pushl
mov
out
push
sub
fisttpl
push
or
ficoml
push
fcos
push
into
adc
add
cmpsl
leave
xlat
rcrb
push
mov
cmp
adc
lock
fs
clc
decl
into
or
stc
pushf
push
adc
inc
in
dec
ret
inc
pop
rorb
ljmp
xchg
mov
and
cld
scas
notb
xchg
ss
mov
cs
jg
jle
imul
nopl
inc
mov
or
movsb
pop
jg
pop
test
jb
js
xchg
sub
dec
pop
or
mov
rorl
sub
xchg
clc
dec
inc
jp
adc
in
or
inc
push
xor
rcrl
push
lahf
scas
push
push
lods
push
sbb
push
je
xchg
into
in
cmp
aaa
mov
mov
inc
sbb
insb
add
mov
nop
push
inc
pop
or
jg
mov
scas
xor
ds
mov
push
out
jp
jbe
repnz
js
mov
adc
ljmp
push
fdivrs
iret
cmp
or
push
pop
cld
incl
sarb
das
sbb
pop
jle
sub
divl
incl
stc
mov
lahf
mov
dec
std
pop
adc
call
add
add
aas
lods
push
stos
or
push
cmp
jg
adc
sbb
mov
push
test
jmp
in
pop
cld
and
call
orl
push
out
popf
in
xchg
dec
pop
test
mov
aad
mov
sahf
insl
dec
pushl
sub
call
clc
notb
xchg
lret
popf
xchg
jg
cli
movsb
in
out
lods
rolb
adc
mov
enter
sub
sub
mov
into
stc
insl
mov
cs
in
and
jbe
int
push
add
jbe
pusha
sub
ljmp
lods
ljmp
mov
insl
rolb
mov
les
js
imul
je,pn
cmp
mov
pop
cltd
nop
lock
fmuls
pop
xchg
inc
jl
mov
gs
ljmp
sbb
jl
loop
or
mov
jb
mov
aaa
and
xor
lcall
and
sub
mov
adcl
add
mov
or
ljmp
push
mov
cmc
lock
mov
xor
or
je
mov
cmpsb
or
mov
mov
movsl
xchg
shr
jp
jb
add
add
push
add
and
daa
lcall
imul
pushl
mov
and
pop
fimuls
inc
add
cmp
out
cmp
sbb
xchg
aaa
sbb
repz
call
xor
lcall
js
jb
enter
jmp
xchg
pushf
scas
push
push
fmuls
aaa
ret
into
adc
mov
xor
push
decl
mov
push
out
mov
sbb
arpl
inc
psrad
push
mov
push
mov
aaa
lret
fdivrl
sub
mov
mov
pop
hlt
mov
adc
push
cwtl
lcall
test
pop
pushl
lods
mov
sub
xor
xchg
call
sub
lds
mov
add
jnp
cli
incl
daa
add
dec
loop
mov
push
outsb
and
lcall
mov
jp
mov
mov
pop
lret
cmp
fildll
dec
cmp
sbbb
inc
cmp
push
movsl
pop
cmpsb
and
fsubs
loopne
repnz
shl
daa
imul
adc
cmp
and
sarl
add
jl
aas
jmp
lcall
jmp
mov
insl
movsl
int
xchg
pop
jne
xchg
dec
rclb
lcall
pushf
xchg
xor
pop
push
adc
mov
jb
sti
adc
decl
sbb
fsubrs
frstor
push
cmp
xchg
lcall
fnstcw
outsl
int
dec
inc
cmp
xchg
sarb
inc
mov
mov
lcall
loop
in
inc
push
mov
and
test
xlat
test
aas
mov
pusha
sbb
inc
mov
insl
jno
xchg
mov
ror
cmp
ret
jo
xor
and
mov
call
cmp
aaa
fprem
repz
push
bound
or
pop
fistl
push
xchg
add
aad
aam
fsubrs
and
test
call
jg
jne
das
push
test
out
and
shll
xor
mov
cmc
or
add
int
add
gs
mov
loop,pn
pop
inc
add
mov
inc
inc
sub
push
inc
pop
xchg
push
inc
das
std
call
push
sbb
cli
pop
pop
mov
and
pushl
das
jbe
out
repz
cli
lahf
cmp
pushf
cli
pop
icebp
mov
mov
outsl
and
pushf
lahf
xchg
mov
mov
mov
mov
jmp
jecxz
xor
dec
stc
cmp
arpl
mov
push
mov
sahf
push
pop
in
pop
inc
lcall
pop
fldt
mov
loop
sar
add
in
inc
ret
dec
clc
pop
loopne
ret
cmpsl
xchg
lds
and
pop
lret
lock
xor
lea
xor
inc
and
ljmp
cmpb
repnz
mov
in
mov
cmp
decl
dec
fcoml
lret
dec
mov
cs
in
fwait
fs
mov
je
data16
loopne
fcmovnb
mov
jge
mov
decb
sbb
aas
fwait
pop
idiv
stc
mov
sub
and
sbb
mov
inc
addr16
jg
cmp
add
push
xchg
dec
hlt
cltd
push
jg
pop
pop
mov
scas
xchg
into
xchg
push
mov
sbb
sub
aad
mov
aam
mov
fsubl
call
mov
mov
xor
sub
pop
out
mov
or
xchg
push
data16
leave
ret
decl
jo
or
into
push
out
push
addr16
inc
push
sbb
jecxz
or
and
leave
icebp
rolb
mov
jmp
dec
mov
lret
popf
sti
test
mov
dec
fisttpl
push
idivb
cld
int3
lea
pushl
mov
notl
sbb
cmpsl
ss
inc
xchg
jmp
inc
or
aas
or
rcrb
das
jae
ljmp
aaa
push
aam
dec
pop
stos
subb
aaa
adc
in
incl
dec
inc
push
rorl
mov
sbb
pop
xor
arpl
jmp
mov
std
addr16
and
shll
scas
sbb
std
in
sub
ja
mov
lock
and
fisubrs
inc
dec
imul
sbb
jg
mov
push
pop
outsl
cli
fsts
js
das
clc
decl
pusha
sbb
es
lods
shrl
jecxz
xchg
loopne
push
pop
cmp
outsl
xor
or
inc
fcmovnb
inc
loope
pop
jb
jmp
push
rorl
cwtl
mov
sub
nop
inc
cmp
aas
imul
call
bound
mov
sub
movl
xor
mov
mov
sti
jge
aam
int3
dec
jge
fwait
push
mov
stos
loop
fldt
test
jmp
or
dec
adc
fisttps
mov
pop
xlat
cmc
subl
cwtl
outsb
mov
mov
lea
filds
mov
sbb
fstpl
jmp
fildll
sbb
mov
pop
stc
push
insb
les
sar
jg
adc
out
push
jne
insl
xor
movsb
shlb
std
das
clc
add
daa
inc
arpl
icebp
data16
and
test
mov
mov
dec
mov
mov
sbb
loope
icebp
xchg
fistps
fucomi
stos
daa
sar
sbb
mov
imul
push
lahf
in
push
and
dec
in
aas
push
dec
or
outsl
xor
add
cmp
xor
out
clc
mov
xor
leave
cld
fstpl
cmpsl
leave
call
sbb
mov
pop
dec
test
fyl2xp1
inc
xchg
adc
loopne
sbb
xchg
out
add
add
movsb
jle
xchg
fmull
mov
call
or
loop
pop
adc
push
insb
out
in
mull
add
decl
stos
int
aas
hlt
les
add
rorb
test
arpl
ja
repz
test
inc
mov
daa
sti
addb
xchg
lods
jg
pop
incl
inc
mov
ret
xor
decl
push
jnp
mov
dec
mov
jl
shll
dec
push
aaa
dec
std
cltd
stos
mov
imul
mov
pop
scas
inc
std
mov
or
repnz
xor
bound
pushf
imul
arpl
lahf
loopne
fwait
jo
lcall
jmp
add
dec
dec
jo
jp
fistl
fs
sbb
xor
sahf
lahf
mov
ss
jg
cmp
cld
mov
insl
outsl
push
sub
xchg
sub
pusha
mov
add
fldenv
outsl
ss
inc
in
rcrb
mov
clc
outsl
pop
sbb
pop
pop
clc
mov
das
enter
dec
ljmp
xchg
and
ret
add
and
rcrb
push
sar
lret
cmc
bound
mov
jg
outsl
mov
enter
cli
jecxz
cli
xchg
jo
push
xchg
inc
cmpsl
mov
cmpsl
repnz
popf
clc
add
cmc
adc
add
js
jg
dec
aam
xor
mul
pop
lcall
cmpsb
push
clc
das
sub
or
mov
sbb
imulb
ss
inc
cmc
cmp
pusha
sahf
lods
mov
sti
incl
outsl
xor
mov
mov
mov
sbb
pushf
mov
and
gs
push
push
loopne
mov
inc
dec
lcall
inc
mov
cli
xor
decl
lea
bound
mov
add
int
mov
jmp
ret
push
lea
pop
jl
pop
data16
shlb
jmp
out
xor
mov
mov
cmp
lods
addb
xor
jg
xor
les
or
nop
imul
leave
mov
addl
rcrb
int
stc
mov
cmp
test
scas
push
mov
sub
push
aad
push
in
sti
cmp
jmp
addl
jl
sbb
hlt
xorl
aaa
add
fidivs
push
or
in
dec
sbb
xor
xorl
fidivs
inc
ss
or
inc
xor
jge
cmp
insl
mov
jmp
inc
mov
pop
test
sarb
insl
jno
outsb
dec
sbb
pop
insb
popf
push
add
sbb
call
xor
aad
orps
fdivp
jmp
push
clc
out
insl
ljmp
andb
sar
insl
mov
mov
xlat
sub
sub
pop
rcll
xlat
inc
xchg
gs
das
cwtl
inc
cld
cmp
sbb
or
fists
pop
out
mov
add
add
xor
bound
ss
gs
cmp
out
sub
test
insb
loope
pop
xlat
adc
or
jo
pop
cwtl
mov
and
add
pop
push
clc
jmp
nop
out
ret
jge
xchg
mov
adc
pop
cltd
rcll
dec
sbb
mov
fcoms
jno
out
xchg
add
lcall
jbe
pushf
dec
mov
pop
lahf
sti
cwtl
adc
jge
ret
jmp
mov
sbb
lea
push
sub
or
cltd
push
lods
data16
das
sbbb
and
popa
adc
jae
fs
test
push
add
pop
movsl
jge
cmp
or
push
test
and
and
pop
or
leave
inc
jmp
cmp
and
mov
lods
mov
mov
frstor
or
mov
or
jg
add
sbb
aas
pop
aad
mov
call
dec
lahf
call
mov
pushf
push
mov
or
push
repnz
cmp
xorl
sub
jmp
sub
inc
outsl
mull
fwait
loop
pusha
push
cmp
sti
xchg
inc
shll
or
vrsqrtps
lahf
jmp
inc
pop
or
inc
push
xor
nop
mov
orl
pushf
cld
imul
js
pop
mov
mov
neg
je
dec
jp
inc
cmp
jae
dec
cmp
shl
mov
xlat
scas
lcall
sbb
cmpsb
pop
test
mov
jnp
mov
das
mov
push
sbb
shlb
mov
dec
pop
scas
daa
and
stos
jecxz
pop
pop
mov
repnz
loopne
insl
mov
cltd
xor
lock
stc
pop
hlt
mov
loopne
add
mov
sub
outsb
inc
xchg
mov
mov
push
mov
addr16
pop
sahf
pop
pop
mov
pop
and
push
aas
add
test
lret
in
cmpsl
jns
data16
mov
mov
and
add
sarl
jg
jp
mov
pusha
je
jo
enter
xchg
out
data16
inc
mov
int
cmp
notb
cmp
fs
push
outsl
mov
addr16
pop
lods
jae
iret
daa
mov
fisttpl
dec
or
push
sti
fisubs
or
inc
cmpsl
fs
xchg
inc
lcall
rcrl
aad
adc
aam
adc
adc
adc
mov
cli
dec
dec
stc
push
int3
dec
dec
and
lock
mov
mov
imul
adc
in
xchg
sub
std
shrb
jnp
sbb
in
cld
das
nop
jbe
imul
out
repnz
and
fcompl
loop
in
sbb
sbb
jae
cld
std
xchg
es
and
and
pop
lods
clc
jmp
push
imul
test
inc
push
pop
shl
insb
sub
mov
pop
stos
or
lret
das
push
cmpsb
daa
jp
int
xlat
lcall
fcoms
mov
lock
shlb
dec
inc
lds
xchg
pop
rorl
stos
pop
pop
popa
movsb
lock
ret
pop
lds
rol
add
lock
pop
push
adc
out
ljmp
cli
jecxz
cmp
dec
lods
add
ret
dec
push
sub
push
daa
insl
mov
inc
fbstp
jg
jbe
xor
mov
sub
clc
rclb
mov
ret
push
mov
pop
sar
adc
mov
add
scas
sti
ljmp
fistpll
xor
test
mov
lods
or
cli
jg
cltd
scas
stos
sbb
add
outsb
sub
out
mov
out
jne
lods
ljmp
cwtl
iret
xor
stos
inc
pop
scas
int
mov
stos
mov
fwait
push
add
inc
or
inc
gs
daa
xchg
test
aaa
ret
sbb
sub
sarb
xchg
pop
mov
call
sub
and
mov
fbstp
fstp
sbb
dec
mov
push
jg
sub
loopnew
js
push
push
add
test
adc
imul
stos
incl
cld
dec
dec
push
jbe
movl
or
cwtl
fbld
mov
incl
lret
sub
xchg
push
sub
cwtl
mov
cmp
mov
mov
icebp
push
lahf
icebp
loop
out
cli
push
pop
fcomip
pushf
outsl
je
push
jmp
sub
fdivrl
mov
jmp
mov
pop
add
rol
repz
push
xor
decl
ss
in
cs
or
mov
jo
int
sub
mov
jmp
xlat
cmp
mov
in
sub
xlat
in
pop
scas
add
jmp
push
pop
ficoms
add
adc
cs
les
cmp
sbb
andl
decl
arpl
and
mov
fisttpll
jo
xor
mov
push
mov
add
push
pop
jmp
rorb
shl
insl
scas
jmp
xor
cwtl
in
sub
mov
inc
inc
jmp
pop
mov
mov
sbb
addb
enter
cli
sbb
mov
subb
push
sbb
stos
lret
mov
sub
and
adc
add
aas
dec
cmpsl
sub
ret
jo
fdivs
jg
pop
fdivp
mov
jg
sbbl
dec
push
mov
cmpsl
and
lods
iret
enter
and
jg
jmp
push
add
sbb
xchg
sbbb
xchg
lret
outsl
or
mov
and
adcb
dec
lock
dec
subb
ja
pop
jb
je
andb
and
js
ret
jno
in
add
mov
sahf
test
cmp
scas
leave
cmc
pop
push
in
outsb
addr16
fnstenv
mov
pop
add
sbb
jo
dec
pop
lcall
shr
mov
sub
inc
iret
bound
sub
mov
jle
jae
or
call
hlt
push
xor
push
lret
pusha
bound
xchg
pusha
fisttpl
insl
adc
decl
pop
adc
lods
frstor
mov
sarl
arpl
jg
pop
jo
sub
sbb
iret
xor
mov
je
fldcw
iret
in
jg
cmp
jecxz
sub
lret
fidivrl
or
xlat
lods
lret
push
mov
mov
mov
imulb
jb
xchg
mov
inc
mov
mov
or
clc
xchg
lock
jle
pop
add
ret
addr16
dec
leave
mov
sti
icebp
pop
fsubs
jecxz
cli
cmp
dec
sbbl
push
and
push
fnstsw
adc
nop
cmp
pop
and
pushl
push
call
js
movsb
in
addb
mov
pushf
test
or
ss
das
push
in
mov
popa
mov
jb
cmpsl
add
jmp
aaa
out
stc
or
push
lods
cmp
jl
sbb
push
mov
push
stos
insl
movsb
sub
add
lcall
mov
jg
mov
sbb
stos
add
adc
pop
jl
cmp
call
push
jns
pop
fwait
jle
rcrb
mov
mov
insl
sahf
mov
testl
jmp
es
and
inc
cmpsl
pop
lahf
xlat
xor
clc
dec
pop
adc
and
stos
aad
mov
or
mov
imul
adc
hlt
aaa
or
sub
or
bnd
ret
and
call
ds
pushf
mov
mov
pushl
jb
ret
add
lret
adc
xchg
je
popa
out
jg
outsl
fadd
push
xchg
xchg
xchg
push
icebp
test
mov
adcb
fmuls
lahf
cmpsb
xchg
out
add
or
mov
xchg
test
sub
out
cli
xchg
push
mov
inc
push
imul
repnz
loope
push
in
xor
decl
and
add
inc
xchg
cmp
aas
pop
das
or
jg
imul
lea
lock
decl
notb
add
test
arpl
pop
mov
movsb
push
dec
jns
dec
sbb
mov
or
fildll
xchg
out
mov
mov
push
fstps
out
add
mov
push
ja
scas
push
cmp
or
mov
es
in
or
lods
jge
and
cmp
in
xor
pop
mov
xor
lret
movsl
es
pop
adc
je
enter
insb
push
mov
ja
and
or
add
cmp
pop
cmp
cmp
xchg
xchg
icebp
call
or
ret
xchg
repnz
mov
cmc
pushl
out
call
sarl
xchg
shrb
inc
inc
decl
cs
pop
push
shrb
mov
sub
jmp
ja
outsl
xor
mov
and
pop
mov
outsl
dec
inc
sahf
or
cmp
push
sub
xor
push
repz
out
jae
mov
fcomip
add
pushl
sub
lock
adc
decb
sub
leave
sub
push
loop
stc
cmp
gs
push
ficoml
call
cmp
andl
inc
mov
cwtl
test
cmp
add
cltd
mov
icebp
shlb
outsb
sub
in
xlat
dec
mov
aam
mov
dec
sub
lcall
mov
or
popa
or
jo
mov
cmp
or
and
decl
out
pop
pop
dec
cli
neg
inc
push
int
and
xchg
stos
fwait
adcl
xor
mov
adc
fmuls
sbb
data16
add
dec
fnstenv
mov
dec
or
inc
out
or
add
cli
mov
cs
pop
cwtl
stos
push
dec
test
mov
xor
ljmp
out
enter
decl
scas
das
fstps
outsb
or
mov
dec
mov
push
pop
pop
dec
mov
in
mov
xor
push
xlat
repnz
ljmp
add
pushl
mov
mov
xchg
sub
pushf
jns
sub
and
fisubrs
scas
add
pop
xor
decl
test
lret
pop
pushf
sub
push
mov
jno
and
and
lcall
mov
push
jg
das
cmp
or
in
outsl
decl
fmul
cs
mov
mov
shrb
insb
faddl
movsb
jg
cmc
call
imul
gs
mov
push
jecxz
in
push
call
cld
out
test
adc
out
ficoms
inc
and
mov
addr16
mov
xor
sbb
and
jg
sbb
shrb
pushl
dec
inc
mov
sub
cwtl
fs
neg
xor
jmp
sbb
pop
push
sub
cmc
cmpsb
mov
jns
decl
push
addr16
gs
in
cld
hlt
pop
call
jmp
push
jp
in
lock
call
rorb
mov
mov
mov
aaa
mov
shll
mov
jnp
cli
jmp
jns
cmpsl
jns
pop
mov
insl
push
jbe
jb
xlat
xorl
pop
rcll
jmp
std
jb
dec
pop
and
mov
test
fisubl
call
jbe
ljmp
xchg
call
mov
jbe
aam
mov
sub
scas
lds
dec
cmp
mov
call
or
cltd
inc
jge
xchg
or
das
cmpsb
cmp
arpl
add
sbb
outsb
push
loopne
incl
jbe
xor
jecxz
mov
lods
cli
ljmp
inc
sbb
and
mov
inc
in
shlb
cmpsl
dec
mov
pushl
sub
dec
pop
inc
in
and
jl
xor
movsl
loope
jns
push
push
stos
dec
or
in
sar
ljmp
in
adc
jnp
cmp
rorb
mov
add
jl
push
xchg
mov
fmull
pop
iret
leave
pop
mov
xchg
enter
or
xchg
das
or
imul
adc
cmp
push
mov
mov
imul
mov
adc
jmp
repz
pushl
cwtl
iret
inc
mov
inc
jmp
push
loope
and
mov
adc
add
popf
pop
xchg
or
std
and
sti
inc
adc
dec
leave
mov
mov
ljmp
jno
jbe
lods
adc
in
movsb
lret
call
pop
add
adc
sbb
hlt
movsb
dec
push
in
mov
lods
push
dec
mov
loope
jmp
out
jbe,pt
or
in
jne
mov
fistpll
mov
movsl
out
sbb
xorl
popf
hlt
mov
repz
sub
in
and
stos
imul
decl
in
push
icebp
xchg
into
or
or
push
outsl
push
push
mov
stos
mov
cli
paddd
mov
mov
ret
jmp
dec
jno
or
lret
sahf
and
sbb
enter
jg
adc
cmpsl
push
or
loope
add
lret
push
push
and
movsb
push
nop
inc
and
jmp
in
movsb
ja
jnp
fistpll
ret
lcall
mov
fstpt
insb
aas
out
fcoms
icebp
lods
lock
ss
adc
mov
jb
icebp
push
loope
lcall
sub
jmp
jp
jo
aad
test
cmp
mov
lahf
in
movsb
sub
cmp
call
outsb
js
cmp
push
in
jge
cwtl
int
push
cld
pop
ss
mov
bound
xor
pushl
xchg
fadd
test
push
fs
xor
cmp
not
bound
ljmp
outsl
mov
outsl
leave
es
pop
cmp
ret
mov
gs
push
ljmp
jb
dec
into
ret
adc
cmp
add
idiv
mov
jg
or
xor
pushf
dec
aam
dec
xchg
cmp
pop
adc
mov
xor
lret
jnp
pop
adcb
dec
push
fistl
mov
aam
xchg
add
sbb
bound
ljmp
or
jbe
repnz
mov
nop
pusha
dec
sbb
sar
in
std
in
call
mov
in
shrl
cwtl
orl
adc
jno
ret
adc
xchg
iret
mov
in
xlat
cmp
pop
xor
arpl
and
xor
add
xorl
mov
jg
and
pop
addr16
jnp
stos
in
add
icebp
xchg
add
arpl
incb
in
or
sbb
ljmp
popf
loopne
sbb
ud0
jmp
xor
pop
push
mov
pusha
inc
test
jnp
es
bound
outsb
lret
or
and
ja
sbb
stos
das
pop
cltd
cmp
iret
roll
dec
xor
ljmp
sub
lea
call
inc
pop
pop
pop
jne
pusha
push
sub
mov
dec
iret
mov
test
or
xchg
mov
mov
mov
dec
scas
frstor
add
dec
sbb
pop
out
lcall
mov
cvtpi2ps
addl
sbb
fbld
ljmp
out
insb
jp
mov
mov
incl
xor
push
lea
mov
fwait
icebp
sbbl
adc
mov
and
jg
mov
sti
int
xlat
dec
sub
push
push
dec
loope
add
out
push
cmpsl
xor
push
icebp
or
in
or
aas
data16
xchg
cmpsb
lock
lcall
popl
lret
cmp
in
hlt
push
clc
pop
das
hlt
sbb
lcall
lcall
sti
jns
mov
hlt
lock
xchg
push
jns
test
pop
sub
mov
pop
jg
icebp
pop
sbb
sarb
imul
dec
iret
or
stos
call
fucom
test
cmp
jg
clc
cld
xchg
adc
in
mov
outsb
inc
fwait
mov
jge
mov
cmp
out
cld
jg
rorb
popf
test
inc
int3
int3
dec
fidivs
out
jg
and
push
xchg
or
test
xchg
push
push
sar
lcall
into
cmp
and
ljmp
sub
insb
mov
sbb
jg
cli
call
push
stos
inc
push
je
or
add
call
in
jae
sub
imul
aaa
lock
pop
aad
xorl
filds
sub
cltd
test
mov
pop
xchg
and
fmull
pop
mov
mov
jns
cmp
mov
das
adc
enter
int
ds
faddl
jle
incl
xchg
addr16
test
clc
lret
leave
sbb
cli
mov
iret
sbb
pop
in
clc
xchg
test
insl
pop
adc
mov
and
incl
les
xchg
pop
idiv
xor
xchg
inc
push
xchg
mov
inc
push
jg
mov
in
dec
out
and
pop
xchg
mov
inc
mov
ja
fwait
notb
xchg
pop
lahf
scas
icebp
call
mov
outsb
jae
sbb
in
mov
fstpl
lcall
mov
mov
arpl
cld
fsubl
insl
sbb
cmp
add
adc
jg
icebp
and
outsl
xor
xor
dec
jmp
ja
in
imul
rcr
stc
sbb
push
dec
ret
and
sub
jmp
bound
pop
mov
sarl
xor
fidivl
lret
jne
mov
in
dec
cmp
and
call
add
cmp
imul
int
push
imul
push
add
adc
push
inc
mov
sbb
mov
popa
out
sarl
add
inc
sbb
push
rolb
dec
inc
jmp
sub
jg
or
ljmp
jge
mov
jb
inc
in
pop
sbb
incl
cmp
lea
add
jmp
scas
cltd
lods
sbb
xor
jl
mov
ljmp
call
xchg
mov
cmc
mov
inc
das
add
enter
or
ljmp
sbb
sti
je
repz
mov
jg
scas
and
movsb
fxam
mov
scas
mov
mov
shlb
inc
dec
mov
in
xor
inc
test
hlt
adc
cld
ljmp
shlb
aad
sbbb
mov
ds
ret
clc
inc
test
xchg
subl
jmp
sti
jg
inc
jo
dec
arpl
mov
lods
fldt
not
or
int3
fwait
mov
fmull
sub
jmp
xchg
popf
call
lods
mov
mov
fstp
xchg
sub
pop
ljmp
inc
pop
neg
push
testb
mov
test
dec
jmp
mov
pop
nop
clc
psubq
jo
pop
scas
adc
add
pop
jmp
jg
das
add
xchg
add
pushl
in
int
dec
ljmp
insb
out
les
mov
aas
jl
inc
test
std
dec
pop
call
cld
and
mov
or
xchg
cmc
xchg
rcrb
loope
pop
sbb
mov
dec
ret
popf
orb
mov
aad
pop
pop
fstpt
stc
mov
xor
out
les
inc
loopne
cmpsl
pushf
inc
mov
pop
adc
pop
testb
ljmp
test
push
std
add
lcall
dec
aad
scas
xchg
xorb
jl
stc
mov
xor
aas
rclb
std
arpl
sbb
adc
pushl
dec
push
ficomps
push
xchg
out
movsb
ret
sub
fcomip
pushl
ficoml
outsl
adc
mov
sub
outsl
push
cmp
std
imul
lret
mov
imulb
addr16
mov
mov
xor
xchg
inc
or
rolb
lahf
dec
xor
adc
in
jle
xchg
imul
and
insb
lcall
aaa
test
add
mov
mov
js
ds
repnz
jne
inc
xchg
out
jo
or
and
imul
decl
sub
dec
pusha
dec
mov
mov
add
ds
cmc
jmp
enter
sbb
lods
divl
decl
cwtl
subl
pop
push
sub
cmc
outsl
mov
aaa
fidivs
stc
fwait
jg
mov
clc
insl
inc
pop
jb
leave
dec
and
xchg
sub
cmpsb
pop
pop
lock
insl
inc
in
sbb
fisubrs
jo
cmpsl
fldcw
call
mov
add
fbld
push
fdivrs
test
mov
cmp
outsl
mov
jg
imul
cmp
jo
push
mov
repnz
mov
add
push
pop
xchg
and
dec
mov
or
out
rcl
mov
outsl
cld
nop
fcom
and
mov
jle
cld
incl
jp
inc
mov
inc
es
sub
daa
popa
jmp
cmp
cmp
xchg
add
iret
call
dec
movq
jg
incl
lods
sub
jmp
cwtl
lea
fildll
sbb
popa
cmpsb
clc
fisttpll
adc
adc
mov
sub
fistps
pop
push
pop
lock
scas
pop
fwait
int
sbb
int3
pop
pop
arpl
adc
push
adc
xorb
mov
pusha
jg
mov
cltd
mov
lcall
or
jp
les
pushl
pop
ret
fcmovb
js
jnp
and
sbbl
daa
adc
and
pop
daa
std
add
dec
mov
cmc
mov
pop
pop
insl
adc
mov
incl
or
outsl
jge
icebp
sbb
push
xchg
lret
js
add
push
mov
decl
jnp
movsl
jnp
mov
jns
jns
dec
loopne
or
xchg
dec
jo
cmp
cli
incl
sbbb
lahf
or
xchg
jl
in
inc
gs
jg
aaa
adc
call
dec
jg
pop
jl
mov
sar
fiaddl
inc
pop
or
in
push
adc
mov
ljmp
pop
push
jbe
bound
jg
movsl
or
jb
jb
data16
call
loop
lock
test
push
int3
push
pop
mov
sub
jb
ljmp
push
add
push
cltd
iret
xchg
in
jbe
mov
decl
push
and
and
jnp
sbb
and
or
test
stos
into
inc
push
out
popa
or
je
jg
insl
jp
ret
dec
sbb
pop
and
dec
mov
xchg
xchg
mov
call
xchg
cmp
mov
mov
insb
ja
sar
pop
pop
mov
pusha
mov
pop
inc
push
idiv
mov
mov
ror
sbbb
fldt
aaa
popa
or
mov
ljmp
fwait
pushl
les
mov
sub
test
push
pop
xor
jg
or
mov
icebp
das
sbb
and
dec
sbbl
jge
ja
xor
scas
stos
mov
jle
cmp
xor
inc
test
loop
xchg
push
cli
pushl
data16
push
xor
bswap
or
mov
repnz
mov
out
dec
mov
pushf
adc
cmpb
sbb
dec
lods
aam
es
call
pusha
int
outsl
push
and
cs
ljmp
pop
or
mull
ljmp
fwait
imul
sub
mov
cmp
incl
mov
mov
pop
jns
push
dec
test
cmp
in
mov
adc
fbld
loopne
push
push
pop
sar
stos
or
fadd
ret
adc
hlt
dec
or
roll
mov
adc
mov
ljmp
repz
inc
dec
push
push
sarl
mov
pop
repnz
cwtl
pop
pop
xchg
jb
pushl
ret
rolb
andl
lods
leave
ds
lcall
add
fldl
mov
mov
pop
adc
idiv
sbb
dec
inc
or
outsb
or
sbb
mov
adc
mov
mov
cmpsb
jmp
shrl
fcompl
jge
adc
out
lcall
aas
mov
dec
mov
fisttps
mov
std
cmpb
jne
cmp
fdivp
call
cltd
data16
cwtl
mov
ss
int
addb
adc
loopne
cmp
ss
fbld
popf
inc
pop
cld
jg
call
or
les
inc
inc
inc
gs
lret
iret
jns
fstpt
mov
hlt
mov
popa
loop
cmp
jge
jmp
mov
cs
adcb
or
sbb
push
fdivs
cmp
pushf
movsb
push
int
in
adc
ret
jae
aad
or
xor
rolb
or
cmp
test
clc
rorb
adc
stos
cmc
lods
push
adc
jecxz
incl
xchg
cmp
dec
mov
sub
cmp
iret
mov
fisttps
repz
mov
sub
add
sub
adc
aam
incl
lret
pop
stos
js
xor
aaa
sub
insl
ret
ljmp
sbb
dec
jmp
push
sub
ja
mov
jno
pop
ja
std
incl
push
jb
cltd
pop
int
cmc
imul
jmp
adc
aaa
dec
das
cwtl
or
push
sti
inc
inc
pop
fidivrl
je
int3
xchg
push
mov
arpl
rep
scas
jmp
dec
lahf
push
sbb
aas
push
js
mov
aas
xor
jns
std
xchg
cmp
and
decl
inc
ficoml
in
cltd
fidivs
jl
cltd
mov
rcrl
inc
add
add
sub
andl
enter
cmc
repz
push
movsb
mov
rolb
xor
jnp
dec
cwtl
push
and
icebp
ret
jb
insb
std
mov
mov
lods
xor
ljmp
jns
push
out
in
xor
jle
ret
mov
cmc
sbbl
or
or
cmovns
inc
fildl
xlat
xor
lods
ja
or
incl
lahf
inc
mov
leave
or
jno
mov
mov
fdivl
push
inc
mov
sub
ljmp
mov
sbb
mov
fmulp
shll
into
and
pop
cmp
icebp
lods
hlt
std
dec
cmp
mov
mov
stos
lcall
dec
dec
into
pop
mov
lret
pop
fistpll
xchg
arpl
xchg
cmpsb
dec
mov
inc
adc
pushl
std
repnz
add
jno
inc
lret
pusha
loopne
loopne
insb
sub
jg
sahf
inc
sbb
decl
jp
pop
add
mov
jl
lcall
push
fisubrs
push
fists
leave
shlb
mov
shrl
jae
and
sub
insb
xchg
dec
std
lods
xchg
outsl
call
or
sub
pop
bound
xlat
mov
mov
sub
push
inc
popf
jb
and
fs
decl
shll
js
scas
xor
lds
es
dec
mov
mov
mov
lock
and
jne
fstpt
adc
sti
add
sarb
add
shrb
rcll
push
sbb
fisubl
mov
mov
dec
pop
add
sub
lock
out
mov
cs
fdivrp
ja
inc
inc
adc
out
push
cmp
loopne
xor
lds
insb
mov
inc
mov
mov
test
aas
sub
aam
xchg
cltd
add
mov
fldl
icebp
mov
adc
mov
cli
xchg
and
and
jno
cwtl
xor
es
pop
push
test
addl
gs
push
xchg
inc
dec
add
lcall
popf
and
out
cmp
jmp
fmull
arpl
jns
pop
sar
incl
test
pop
mov
lret
sahf
scas
js
push
or
inc
test
dec
mov
pop
jno
popl
mov
aam
movsb
push
jecxz
sahf
fstps
addr16
xchg
push
inc
aam
inc
mov
clc
sub
jmp
das
std
xor
pop
lahf
fdivl
icebp
and
test
insl
ud0
adc
sti
movsb
jbe
inc
call
mov
mov
cwtl
outsb
scas
push
xchg
pop
scas
push
jp
xchg
decl
mov
dec
scas
mov
jb
adc
aaa
ljmp
mov
dec
mov
popf
dec
gs
mov
aaa
cmp
inc
push
test
push
mov
mov
and
iret
adc
dec
mov
fisubl
add
sub
inc
xor
ds
push
out
repnz
and
sbb
repnz
adc
pushl
ljmp
subb
addr16
jnp
mov
mov
mov
cmpsl
mov
xor
xlat
in
pop
inc
and
notb
mov
xchg
inc
in
xchg
sar
decl
xchg
dec
and
mov
xchg
addr16
imul
ret
movsb
pop
in
clc
jbe
ljmp
xorl
loopne
sub
cmc
fmull
mov
rclb
xor
xor
in
sub
lcall
out
adc
lret
push
pop
adc
sahf
push
dec
in
lock
jmp
rclb
repz
add
inc
mov
inc
loopne
mov
or
std
pop
call
pop
xchg
and
out
add
push
mov
icebp
ljmp
cmc
stos
adc
mov
mov
sub
cmp
outsb
fnstcw
lock
in
sbb
decl
cmp
std
jmp
mov
xlat
mov
adc
push
imul
adc
inc
and
call
xchg
and
mov
fsubrl
xchg
scas
push
adc
sbb
sarl
cltd
mov
fists
in
mov
mov
in
adc
les
and
or
sarl
outsb
call
sbb
int
dec
xor
jmp
fildll
push
cmp
insb
push
jb
loop
lcall
loopne
arpl
ret
fldenv
mov
xchg
les
mov
inc
aas
ret
scas
mov
aam
lcall
adc
push
decl
pop
adc
test
ljmp
popa
dec
rcrb
shl
fsubl
out
ja
xor
in
jns
lcall
add
rorb
movsb
sbb
mov
cmp
inc
pusha
xchg
js
mov
and
enter
mov
sahf
cs
roll
sub
pop
push
xchg
xchg
xchg
cld
incl
dec
mov
ret
mov
jg
mov
inc
mov
lock
fwait
shll
mov
ret
leave
or
les
inc
jmp
add
mov
dec
notb
dec
sub
pusha
icebp
add
out
jp
or
sub
mov
cli
mov
jne
iret
cld
clc
or
cld
pop
inc
std
lcall
cpuid
mov
addb
mov
adc
lcall
sub
mov
into
and
mov
insl
loop
pop
ss
and
fwait
inc
outsl
sub
mov
out
rcrb
xor
rcll
add
jg
orb
stos
mov
pusha
add
push
jae
aam
cmp
in
cmp
cltd
xchg
cmpsb
in
adc
jmp
imulb
dec
mov
dec
sbb
cmp
xor
test
xchg
mov
ret
jbe
mov
pop
push
push
das
mov
popa
pop
jg
jae
xor
mov
adc
and
lcall
pop
divb
pop
or
add
jg
pop
sub
push
mov
mov
sbb
sub
xlat
inc
outsl
pop
sbb
pop
cs
inc
cmp
mov
pop
scas
out
fwait
push
mov
mov
rclb
jg
scas
outsl
addr16
xchg
cwtl
or
dec
inc
and
loope
xor
push
dec
in
mov
fstl
xchg
push
dec
in
das
mov
mov
incl
arpl
ret
fistps
sub
loope
pop
mov
mov
push
push
jnp
gs
xchg
psadbw
aam
cmp
repnz
xor
call
ret
jae
js
pop
mov
inc
sahf
add
add
aam
stc
pslld
lods
test
lock
or
jmp
movsl
outsl
mov
mov
add
ret
mov
ljmp
das
stc
andl
mov
sub
or
sbb
jns
push
pop
aas
insb
dec
int3
jmp
sar
lcall
mov
or
pop
push
or
ret
movb
loope
mov
mov
imul
push
and
movsl
cmpb
jecxz
pushl
lds
mov
add
mov
inc
cmp
mov
ljmp
pop
inc
mov
xor
outsl
push
stos
adc
das
test
loopne
mov
into
pop
jno
mov
xchg
jg
fdivrp
jmp
cmpsl
jno
sti
or
clc
xchg
inc
dec
push
xchg
roll
adc
pushf
dec
jecxz
mov
in
lods
aad
add
decl
inc
sub
iret
add
adc
repnz
hlt
pop
testb
push
mov
aad
loop
lods
call
pushf
dec
or
add
leave
enter
or
xor
mov
call
jge
or
decl
filds
shl
aas
mulb
insb
paddb
or
or
sbb
jle
add
and
dec
cli
fwait
cmp
ficoml
flds
pop
sbb
fsubr
ja
xor
dec
cmp
int
pop
mov
push
jg
jo
inc
xor
dec
jbe
out
int3
xchg
cmp
mov
aaa
mov
jae
jecxz
cli
ja
jae
aad
xchg
jns
aam
pop
je
sbb
movsl
lcall
push
or
hlt
aam
scas
iret
xlat
jle
inc
stc
repz
mov
pop
pop
ret
or
orb
cli
mov
ficoms
lahf
fisubs
movsb
mov
icebp
mov
xor
add
add
or
out
cli
incl
ljmp
wrmsr
sub
mov
call
out
sub
inc
test
add
add
sub
lret
push
lret
fsubrl
negb
lea
andps
ja
decl
or
nop
out
pop
push
sahf
cltd
adc
decl
sbb
sub
pusha
ss
imul
xchg
aaa
int3
int
sub
ja
ljmp
dec
cmpsw
in
int
stc
scas
push
rolb
icebp
push
cmp
inc
decl
pop
or
pop
and
mov
sub
test
ljmp
inc
mov
add
out
out
mov
mov
aas
popf
mov
jg
filds
sub
aas
sbb
lds
movsb
loopne
lcall
clc
mov
rcl
stos
and
xchg
outsb
cwtl
mov
cmp
dec
cmp
mov
loop
inc
or
lods
jecxz
loope
or
jmp
incl
ljmp
pop
clc
loopne
cmpsl
cmpsl
jle
test
int
xchg
jb
mov
add
xchg
adc
fucom
dec
das
jl
pop
mov
and
int
aam
mov
xchg
mov
enter
and
xor
jge
cmp
jo
mov
mov
sub
hlt
daa
cmp
add
cld
inc
subb
mov
decl
rcr
jp
test
scas
sbb
xchg
mov
fwait
cli
lcall
and
adc
mov
add
stos
fdivr
ljmp
sbb
push
lret
sub
jg
shlb
jmp
and
mov
pusha
mov
or
pusha
popf
lods
mov
testl
push
sub
sti
in
ljmp
push
mov
ljmp
sbb
mov
les
loopne
push
mov
clc
add
ljmp
and
pop
xor
fildll
int3
cmc
sbb
sub
push
adc
bound
xor
rclb
outsl
clc
das
shlb
fdivs
inc
lock
mov
insl
jl
aad
ljmp
mov
lcall
add
aas
stc
test
aam
icebp
xor
jmp
dec
sbb
notb
stos
decl
mov
sub
add
fwait
arpl
into
out
sub
sbb
mov
cmpsl
incl
and
sub
mov
ds
call
ss
adc
iret
out
inc
decl
leave
adc
mov
incl
pop
jne
and
fnsetpm(287
sub
push
inc
in
scas
and
xor
add
cltd
add
sbb
push
outsl
lock
loope
jge
dec
shr
xor
inc
pop
je
pop
pop
in
decl
mov
mov
iret
cmpsl
and
test
das
sbb
pop
inc
call
adc
xchg
mov
sub
mov
repnz
into
inc
cmp
mov
mov
scas
adc
mov
ljmp
mov
ss
in
call
bound
mov
sub
fisttps
lcall
int3
pop
mov
sub
dec
jns
mov
adc
cmp
xor
ss
mov
ds
adc
sbb
stos
jmp
or
or
cvtps2pi
fdivp
fstl
inc
lcall
lahf
addr16
and
out
dec
cmp
int3
shll
jg
sub
idiv
nop
jg
test
sbb
imul
out
adc
cwtl
mov
dec
xchg
fdivs
cmc
adc
lock
cmp
insl
outsb
jns
inc
das
push
jmp
int3
sub
sysenter
or
pop
jmp
iret
or
mov
ret
and
iret
mov
mov
push
in
in
cltd
icebp
jl
test
pusha
jnp
test
das
inc
dec
pusha
jno
out
inc
jl
cmc
lcall
ljmp
add
cmp
dec
pop
ja
cli
jmp
xor
mov
movsl
stos
pusha
and
dec
lret
hlt
decl
cltd
mov
in
sub
sbb
aam
push
movb
sub
lods
add
lahf
fld
test
jne
adc
dec
ljmp
hlt
sahf
rcl
loope
cmpsl
dec
push
pusha
jg
mov
dec
cld
mov
aad
mov
push
sub
ds
inc
jne
iret
int3
push
cli
lcall
lea
aas
neg
pop
inc
test
mov
movsb
js
or
and
lcall
loopne
adc
lea
arpl
cmp
sbbb
fs
or
push
outsb
and
jmp
jg
cmp
jmp
lret
pop
mov
cmpb
xor
xor
mov
prefetch
jecxz
ljmp
inc
scas
add
inc
ds
mov
leave
xchg
outsb
test
repnz
mov
mov
push
movsb
adc
pop
pop
fdivs
lcall
inc
dec
pop
and
addr16
xor
cwtl
mov
adc
mov
cli
xchg
jg
jmp
jnp
jl
sbb
push
inc
loopne
lahf
call
cmc
fsts
add
or
ret
cmp
mov
add
add
shrb
adcl
jg
fstl
xor
push
shll
out
lahf
mov
in
xchg
push
jl
test
aaa
std
pop
aas
nop
rclb
fsubl
cmp
ds
push
adc
incl
pop
repz
pop
mov
shl
jg
nop
cli
faddl
push
aas
lods
enter
cmp
jo
cmp
push
aad
sbb
das
fistpll
daa
push
add
xchg
xchg
jns
dec
jae
repz
pop
mov
xchg
fists
add
sub
fdivrs
int3
test
xorps
mov
insl
lret
das
outsb
push
or
decl
sbb
xchg
dec
push
data16
xorl
outsl
clc
stos
aam
pop
enter
and
add
fbld
ljmp
movsl
fwait
sub
cmpsb
orb
push
arpl
daa
ss
push
sar
decl
jno
adcb
mov
push
idiv
push
cmp
jnp
jle
xor
dec
call
loop
lret
sub
mov
or
push
xchg
cs
jmp
or
add
in
sub
mov
repnz
mov
push
sbb
ret
pop
mov
mov
popf
call
xchg
jmp
push
imul
scas
fwait
xor
mov
lods
in
pop
cmpsb
push
nop
add
std
inc
decb
or
mov
mov
sub
negb
nop
rclb
fdivl
xor
in
pop
mov
lods
stc
cmp
jp
xlat
push
mov
pushl
sahf
mov
addr16
xor
les
rorb
popf
popf
subl
rolw
leave
or
lds
cmp
xchg
dec
aad
xchg
imul
cltd
mov
and
or
incb
jo
faddp
incb
and
cmp
push
jnp
jbe
push
sub
mov
aas
enter
mov
jns
ljmp
lcall
sbb
aad
int3
pop
push
outsb
sbb
sti
inc
and
sti
push
fnsave
pushl
outsb
mov
jbe
lds
in
dec
sbb
jmp
cld
mov
pop
and
sbb
sub
push
ja
in
pushl
outsl
jle
and
and
inc
fadd
push
push
fistpll
cld
mov
xor
nop
call
and
xor
call
pop
enter
sbb
sti
pop
loopne
push
in
mov
push
bound
jno
mov
xor
cmp
cmp
cld
jmp
pop
ds
sub
pop
add
inc
or
pushf
inc
adc
dec
push
sbb
incl
cmp
fcoms
sub
inc
mov
cmp
in
jp
scas
clc
std
sub
iret
mov
hlt
in
inc
xor
and
clc
ja
idiv
lcall
pop
into
insb
and
dec
fwait
pop
daa
xchg
aaa
fdivrs
cld
xchg
outsb
ja
sbbb
jns
cld
in
test
xor
cmp
push
fdivrp
pop
lahf
inc
pop
and
dec
loopne
loopne
outsl
add
pop
xchg
cmpsb
idivl
scas
xor
dec
mov
mov
add
jle
pop
mov
inc
jge
pushf
fsubrl
push
call
mov
sbb
xor
adc
lcall
stos
ret
sbb
fs
xor
dec
cltd
popa
pop
sbb
pushl
fsubs
inc
rep
xor
push
sub
mov
inc
jb
fnstenv
xchg
dec
pcmpeqw
sub
cwtl
shl
fld
fldenv
movb
sub
pushl
icebp
mov
push
lahf
push
fwait
mov
sub
sbb
loope
xchg
rcll
pop
mov
push
push
cld
mov
lods
add
es
pop
or
cld
xchg
jge
mov
jmp
das
cmc
mov
lods
out
pop
pop
popf
xor
cld
aaa
sub
lea
cmpsl
ret
cmp
mov
out
jnp
daa
and
daa
lock
sub
popa
popf
push
mov
xchg
xchg
mov
shll
inc
filds
pop
out
lds
mov
mov
pop
loopne
cmp
and
stc
fwait
in
jmp
out
insl
dec
or
lock
jg
pushl
add
xor
fldenv
mov
rcrb
iret
pop
and
incl
icebp
add
adc
js
or
into
inc
scas
mov
out
jns
xor
pop
jl
sbb
sbb
and
xor
xchg
jns
inc
xchg
out
pushf
adc
out
movsb
test
cltd
addr16
pop
lods
xchg
or
lcall
jno
cs
into
pop
mov
xor
xchg
sbb
lods
mov
lcall
cli
jbe
cmp
pop
jecxz
jnp
push
and
xchg
dec
data16
test
mov
mov
lcall
fsubp
enter
repnz
inc
movsl
leave
xchg
xchg
std
cmpb
out
incl
mov
in
pusha
notl
mov
ljmp
fcmovu
fsts
fdivl
shrl
mov
adc
rclb
outsl
dec
int
mov
lcall
sub
xor
and
dec
jmp
out
repnz
aaa
xor
inc
xor
shll
call
push
hlt
stc
movsl
str
xchg
pop
sti
dec
test
mov
sbb
ja
push
add
cmp
push
sar
jmp
test
out
fcmovnb
pop
clc
popf
ljmp
sbb
add
cltd
mov
repz
mov
mov
adc
cli
cmp
sub
rcrl
pop
dec
jge
pushf
push
rcr
ja
cmp
push
mov
or
out
push
pop
cmpsb
jg
pop
xchg
out
test
loope
loopne
jmp
adc
adc
inc
pop
jmp
jge
xor
pop
push
lods
push
mov
mov
xchg
fadds
cld
push
and
outsb
fs
and
jge
dec
jno
dec
imul
add
aas
jge
push
mov
jg
shlb
jns
movsb
iret
sete
add
pushl
mov
sbb
push
lods
stc
cs
dec
bound
test
xchg
mov
sbb
pop
sub
cli
xchg
das
add
pop
scas
xchg
popf
mov
add
dec
testb
std
ds
js
dec
add
push
lahf
repnz
jmp
icebp
call
call
in
inc
push
loope
jo
add
push
jbe
loope
xchg
shrl
stos
ret
lahf
inc
push
fsubs
mov
sahf
push
pop
mov
jbe
or
call
cltd
mov
or
call
test
jl
inc
sbb
jns
pop
cmp
fstpt
push
mov
popa
mov
cmc
push
pop
mov
xchg
dec
pop
inc
ljmp
ja
inc
jl
loope
jns
cmp
sbb
out
mov
fnstsw
sar
fldenv
call
aaa
int3
stos
or
daa
xchg
mov
ud0
add
jmp
out
cmp
in
xchg
xchg
ret
mov
pop
outsb
std
lea
inc
loopne
decl
dec
daa
pop
ja
sbb
or
jg
aas
push
cmp
fidivrs
imul
pop
or
pushl
mov
int
pop
mov
shll
incl
daa
je
inc
aas
sub
lret
test
and
adc
push
loopne
inc
aam
xchg
xor
cli
decl
dec
data16
add
mov
jg
fisttps
test
rclb
sahf
jp
int3
fwait
je
xlat
scas
adc
jg
mov
aas
xchg
push
xlat
xor
pop
cmp
orl
fcomip
push
loopne
out
out
pop
push
fs
test
jecxz
lods
das
xchg
icebp
cmp
out
pop
rorl
mov
push
or
cmp
in
jg
mov
testl
sbb
incb
dec
arpl
rcrb
jno
rcl
dec
lahf
mov
mov
data16
out
push
rcll
subb
mov
lcall
insl
mov
scas
ja
jmp
hlt
add
jmp
dec
mov
or
icebp
dec
push
xchg
jne
lret
call
adc
mov
mov
push
xor
jmp
scas
movsl
sub
jl
rcr
inc
pop
or
push
enter
rorb
lods
test
inc
cmpb
hlt
or
aas
in
xchg
cmp
aas
inc
std
incl
int3
jnp
call
pop
loopne
xor
fldl
std
or
incl
sbb
loope
out
dec
vpcmpgtb
repz
jnp
pop
or
jge
fildl
std
ljmp
iret
pop
pop
ds
inc
mov
adc
push
sub
xor
repnz
in
and
cmp
les
cmp
fs
test
mov
xor
pop
shr
scas
mov
loop
inc
push
push
stc
cmp
imul
gs
pop
add
add
jne
adc
mov
popa
int3
mov
bound
mov
rcr
outsb
out
push
test
js
pop
icebp
clc
mov
fcmovbe
loope
insl
pop
test
add
or
sbb
mov
mov
dec
pusha
and
jo
and
mov
addr16
loopne
mov
lahf
dec
add
jg
decl
inc
sub
divl
mov
lods
mov
loope
lea
adc
ljmp
mov
add
imulb
mov
aam
ss
std
incl
jl
movsl
sub
movl
out
stos
movaps
jg
insb
jmp
ljmp
cltd
or
jb
mov
dec
int3
daa
stos
sbb
leave
push
clc
dec
hlt
cmp
loop
jle
or
mov
push
rolb
push
std
mov
mov
dec
nop
jl
mov
sub
inc
lret
xor
shll
mov
sbb
sti
dec
sbb
dec
xor
inc
mov
fsubrl
cld
mov
test
mov
ret
je
sub
mov
adc
and
or
pushw
add
je
push
rorl
repz
insl
hlt
orb
mov
leave
push
xchg
shll
ljmp
sar
fmulp
inc
cwtl
jo
add
mov
mov
in
sub
lods
pop
movsl
in
sbb
test
dec
inc
outsl
sar
incl
pop
jbe
imulb
jecxz
mov
data16
stos
shll
lods
jb
jg
add
stos
rcl
cltd
inc
xchg
mov
ljmp
jle
inc
daa
fsub
push
cmpsb
cwtl
pop
cld
mov
sbb
fists
stc
movsl
ds
dec
sbb
mov
inc
notl
outsl
mov
cs
into
notl
incl
lahf
pop
leave
sub
cmp
or
sub
ja
jne
repz
xchg
jae
fnclex
das
or
ljmp
lods
sbb
aaa
mov
cmp
les
mov
inc
dec
mov
mov
call
xchg
jg
jp
xchg
push
test
mov
or
xchg
xor
leave
cmp
jae
movsl
or
inc
cltd
add
or
hlt
xor
sub
fbstp
sub
mov
jmp
push
and
xchg
cli
push
xbegin
push
fdivl
cmp
adc
add
adc
mov
pop
pop
add
xor
add
xchg
jns
dec
decl
jno
mov
inc
and
push
mov
aad
call
jmp
cli
xchg
leave
sbb
ja
enter
push
in
and
pop
or
jo
ret
fdivrp
incl
cld
fimuls
sar
sub
add
data16
pop
jno
lcall
decl
andb
aas
inc
test
lea
xlat
xor
push
mov
pusha
jae
arpl
test
jmp
ljmp
cmp
mov
loope
fistpl
cmp
dec
push
and
jnp
xor
jecxz
xchg
sbbl
incl
or
out
fwait
mov
fs
ds
loop
into
inc
cmp
cmp
jb
ljmp
cmpsl
xchg
aaa
push
or
imul
jmp
mov
adc
jge
ss
dec
mov
inc
push
lods
lcall
cmp
in
xor
mov
xor
add
notl
pop
inc
leave
mov
ljmp
pop
cmp
add
je
pop
jbe
ret
ss
ror
mov
repz
cwtl
mov
sahf
pop
sarl
dec
xchg
pop
cmp
pop
mov
adc
mov
mov
mov
cmpsl
dec
in
es
out
ljmp
dec
cld
movsl
les
movsb
movsl
popf
rol
jg
enter
sub
decl
sub
push
fnsave
and
push
cs
gs
jo
fistps
sti
sub
push
data16
cld
das
mov
fst
mov
repz
aad
sub
xlat
sub
pop
add
stos
jecxz
ja
outsl
mov
sahf
std
ret
lcall
in
jle
mull
bound
out
rorl
rcrl
outsb
xchg
pop
and
pop
push
cmp
mov
and
xchg
xor
stos
dec
mov
lds
lcall
in
pop
pop
mov
mov
outsl
xchg
stos
and
pop
out
and
cmc
das
mov
sbb
pop
sub
fstps
out
scas
mov
lods
dec
add
aam
insl
int
sbb
incl
pop
xchg
jmp
adc
arpl
push
icebp
int
xchg
mov
add
dec
int3
lcall
movsb
je
sub
orb
jg
xchg
sbb
mov
xor
jg
outsl
and
fwait
stos
adc
addr16
and
aaa
cld
call
xor
mov
hlt
sub
scas
mov
pop
jecxz
scas
cli
ljmp
xchg
xor
insl
xchg
rol
add
loopne
imul
pushf
mov
sbb
pop
fcmovnb
pop
jmp
adc
aaa
and
clc
popf
mov
push
clc
pushf
mov
out
pop
dec
mov
call
insl
mov
rorb
cmpsb
xor
xchg
add
ret
xchg
xor
cwtl
call
decl
push
and
data16
pushf
mov
loopne
sub
or
incl
sub
dec
lods
ret
ja
rcrl
lods
imul
outsl
in
jbe
dec
xchg
sqrtps
mov
pushl
pop
push
enter
subb
jbe
in
fisubrs
stos
cmp
incl
push
cltd
dec
lret
mov
jno
popf
in
ja
mov
mov
inc
sub
pop
decb
mov
xor
mov
jmp
jmp
fwait
add
jg
and
roll
cmp
push
sbb
mov
pop
xchg
mov
and
jo
add
dec
divl
lods
mov
pop
mov
jg
pop
inc
cltd
stos
xor
aas
sub
insl
inc
out
jge
sub
pushl
sub
adc
pop
mov
pop
sub
sbb
push
sbb
xor
decl
sub
sub
out
sarb
xor
sbb
lret
ffree
sbb
and
mov
dec
push
mov
mov
das
stc
jo
icebp
inc
or
xor
jmp
mov
pop
jmp
mov
call
out
or
or
sbb
xor
out
adc
std
lea
aas
out
movb
or
dec
xor
gs
call
and
pop
pusha
cmp
cmp
and
and
xchg
iret
xchg
fadds
push
cmp
cmc
call
mov
and
push
pusha
in
mov
shll
mov
stos
stos
xchg
mov
xchg
aas
fisubrl
loopne
lcall
xlat
jmp
sub
jbe
mov
movb
xchg
iret
inc
insl
cld
and
push
dec
sti
xor
aas
dec
cmpsl
xor
adc
xor
enter
hlt
call
aad
sahf
scas
add
xchg
fs
loop
xchg
and
idivl
fstl
loop
add
dec
jg
push
inc
sbb
pop
inc
jp
sub
sbb
push
aam
adc
in
inc
adc
int3
mov
hlt
sahf
cmp
inc
fsubr
and
mov
jl
cwtl
lcall
pop
outsl
push
inc
cmpsb
imul
add
stos
and
add
sbb
decl
dec
pop
xor
xor
add
in
arpl
outsl
pop
rol
out
flds
ljmp
outsl
cld
mov
in
mov
xchg
jb
js
cmp
stos
dec
nop
xchg
mov
adc
mull
inc
das
push
push
aad
call
sub
pop
outsl
loopne
lcall
mov
cwtl
adc
push
push
clc
cmp
pop
mov
pushf
in
test
cmpsl
icebp
mov
popf
mov
adc
in
and
dec
ja
jl
leave
xlat
or
leave
or
push
pop
mov
jl
cs
push
stos
faddp
lcall
gs
xchg
push
and
ja
ljmp
xchg
pushf
or
lcall
add
sbb
xor
fwait
lock
jmp
push
lds
cld
mov
decl
lea
jae
adc
pop
std
scas
in
xchg
rolb
lcall
rol
std
sar
mov
and
and
dec
test
push
xchg
cmp
fbld
jmp
mov
ss
lods
and
cltd
cmp
cmp
jb
mov
push
xchg
cmp
and
popa
lds
ror
mov
lahf
or
jb
lods
adc
dec
sbb
add
push
xor
rcll
outsb
sahf
and
jg
inc
sub
repz
loopne
sbb
arpl
lcall
call
jl
loope
cmp
xor
xlat
pushl
and
inc
test
cld
mov
or
push
mov
cld
clc
sahf
lahf
in
push
shl
sub
mov
jno
js
and
lcall
pop
jg
idiv
xchg
into
cli
cld
inc
jg
in
mov
lcall
adc
cmp
outsl
fcomps
into
in
cmp
out
xchg
imulb
call
scas
cmpsl
stos
push
lret
sbb
mov
es
xor
int3
inc
jge
and
test
or
mov
pushl
jb
mov
ret
enter
leave
push
adcl
sbb
dec
pop
shl
in
cmpsb
cmpsl
sbb
or
shll
insb
and
push
jns
sarl
jae
xchg
inc
inc
adc
mov
jg
cld
pusha
inc
incl
mov
sbb
fwait
idiv
loopne
adc
add
repz
ret
rorl
fwait
data16
les
outsb
xchg
jmp
popa
cli
dec
and
jge
or
pushf
js
movsb
and
jmp
lods
inc
mov
ficomps
push
imul
and
sbb
ds
xchg
pop
popf
decl
insb
jg
lcall
call
dec
es
call
dec
push
into
stos
popf
cmp
pop
sub
push
push
adc
loop
inc
xlat
xor
scas
xchg
test
fcmove
pop
lods
scas
fnstsw
lcall
xrelease
sub
mov
ret
add
push
adc
test
fldenv
das
jge
insl
sbb
push
std
mov
rclb
aam
dec
xor
mov
mov
pop
sub
adc
iret
inc
repnz
xor
and
jg
jno
lret
cmp
ljmp
jg
jle
inc
rcrb
mov
xor
sarb
outsl
cli
call
add
rcrb
mov
push
scas
xor
mov
pop
call
scas
jmp
mov
mov
ret
addr16
mov
xchg
push
xchg
jae
mov
adc
adc
js
outsb
fimull
out
and
movsb
push
adc
out
out
nop
add
cmpb
jmp
sbb
pop
xchg
or
aad
sahf
push
jno
cwtl
fildll
pop
cwtl
aad
outsb
xor
pop
repnz
insb
mov
pop
clc
ljmp
dec
mov
push
loop
xchg
dec
inc
jae
lcall
jbe
inc
idivl
mov
cmp
mov
sahf
out
addr16
das
add
mov
icebp
loopne
daa
and
mov
push
pop
shrb
rclb
lret
aaa
in
ljmp
jg
lds
push
mov
or
inc
mov
mov
sub
or
xor
inc
push
xchg
decl
lods
imulb
cmp
cld
mov
jmp
aas
shll
mov
roll
ret
es
jmp
mov
push
xchg
cmp
psraw
xor
sub
cld
incl
idivb
mov
mov
sbb
sbb
ja
lahf
iret
lahf
pusha
mov
or
cltd
clc
fistps
cmp
lock
jg
push
cmp
xlat
xchg
mov
mov
sti
rolb
cmpsb
dec
shll
cmp
jmp
dec
data16
push
add
cs
ljmp
addb
arpl
sub
leave
cld
xor
or
fsubr
mov
pop
and
or
lahf
cmp
rorl
pop
in
cmp
mov
xchg
cmp
out
and
push
dec
xchg
or
jg
and
negb
mov
xor
inc
int
mov
into
xor
fcomip
jnp
loope
fsin
pop
out
push
sbb
jnp
enter
mov
mov
das
clc
inc
jmp
add
lock
in
sbb
ljmp
pushf
out
xchg
mov
lcall
aad
jo
inc
sbb
js
pop
sub
popf
scas
push
push
and
repz
out
pushl
cmp
push
out
xor
mov
inc
xor
adc
dec
das
jg
add
dec
mov
push
adc
add
outsl
cld
sub
push
and
out
loope
sbb
incl
inc
adc
push
test
or
js
sar
and
in
mov
mov
mov
xchg
push
and
sub
inc
loope
inc
jle
inc
loopne
stos
out
add
lods
ljmp
daa
push
xlat
lcall
ljmp
ret
fcmovne
pop
jecxz
jnp
adc
mov
inc
in
cmp
movsl
push
popa
rcrl
dec
mov
mov
jno
dec
xchg
scas
push
clc
incl
loop
out
pop
mov
fwait
test
test
mov
leave
cmpsb
xor
push
ljmp
mov
je
mov
icebp
jmp
and
jb
pusha
clc
addr16
pop
loopne
cmp
call
mov
pushf
std
stc
pop
dec
das
shrb
cmc
adc
xchg
or
jmp
adc
repz
jne
push
ljmp
lds
pop
arpl
mov
bound
inc
mov
stos
xor
in
test
decl
fiaddl
enter
and
ss
inc
test
push
mov
jmp
negb
add
xlat
jecxz
sbbl
push
iret
incb
pop
pop
dec
lret
sahf
xlat
mov
lods
sti
repz
enter
addb
je
cmc
inc
mov
aam
mov
xchg
mov
decl
dec
adc
movsl
lahf
inc
cmp
nop
adc
add
repnz
loopne
mov
icebp
decl
push
cld
nop
mov
je
sbb
outsl
test
pop
loopne
aas
adc
stc
cwtl
sub
mov
xor
in
inc
decl
push
pop
insb
mulb
adc
cmp
push
je
xlat
rcr
ds
adcl
inc
fistpll
mov
pop
cmp
cs
aam
add
adc
or
jne
lcall
mov
jg
pushl
add
push
mov
mov
lea
dec
xor
stos
pop
stc
mov
adc
mov
lods
xchg
pop
popf
pushl
add
mov
dec
push
mov
inc
lcall
cmpb
jmp
mov
push
into
sbb
xorb
sti
pop
int
jmp
outsb
mov
into
subps
mov
xor
cli
fiadds
jg
lods
jmp
das
adc
mov
jmp
pop
imul
xchg
xorl
xchg
sysret
loope
xchg
incl
inc
jne
adc
mov
imul
adc
jbe
mov
std
movsl
outsl
cltd
incb
push
jg
incb
aaa
add
js
mov
mov
imul
divl
jbe
iret
repz
dec
mov
adc
idivb
decl
lods
pop
mov
jl
cmp
push
mov
mov
pop
fsubl
repz
jmp
jbe
lret
xchg
cmp
ja
pop
mov
stos
pusha
daa
pop
jbe
movsl
fdivp
fcmovnu
out
pop
sbb
incl
enter
cld
mov
test
jg
decl
dec
ljmp
mov
bound
sbb
cwtl
and
push
stos
stc
arpl
out
cmpsl
cmp
ss
mov
jg
lret
jo
or
out
sub
hlt
in
jo
incb
sub
decl
xor
outsb
inc
push
sysexit
in
xlat
insl
dec
out
in
ljmp
aam
ja
pop
push
cmovnp
packsswb
mov
cmp
adc
dec
inc
icebp
inc
mov
ja
mov
rorl
daa
cmp
push
pop
sbb
mov
dec
push
lcall
loope
sbb
ss
sti
pusha
jae,pn
sub
push
or
mov
pause
aam
ljmp
xchg
leave
lret
sbb
sbb
jle
push
sbb
int
sbb
outsl
hlt
cmp
pushl
test
sbb
lds
lret
stc
pop
lods
out
jmp
pusha
and
cmp
arpl
ret
mov
cmovbe
notb
inc
scas
jmp
or
loopne
jl
subb
inc
jo
pop
mov
jle
lcall
cmpsb
jg
add
jl,pn
mov
outsl
xor
mov
in
rcll
jl
dec
std
ret
mov
aas
loope
stos
repz
jmp
mov
mov
jnp
and
std
jl
ljmp
fnstsw
jbe
mov
popa
rclb
lods
inc
pop
sub
sbb
push
jl
mov
add
and
pop
and
jno
cmp
ficoml
cmp
mov
dec
sbb
dec
push
adc
mov
pushf
sbb
xchg
adc
jecxz
sub
add
jnp
push
decl
es
xor
jne
sub
imul
mov
aaa
mov
sbb
icebp
and
mov
out
cld
mov
decl
mov
insb
mov
movsl
shrb
xor
pop
rorl
jbe
std
insb
std
mov
fstl
inc
xchg
adc
jbe
and
sbb
aam
out
jne
in
xor
push
cmc
push
push
push
clc
sub
test
decl
ljmpw
aad
pop
test
mov
cmpl
hlt
push
pop
adc
xor
pop
and
or
into
jp
je
xor
jg
out
shrb
inc
xchg
jae
ret
iret
out
pop
dec
outsl
clc
push
cld
shlb
addr16
ficoms
xchg
ja
ljmp
rolb
push
aas
sub
sbb
lods
es
jo
pop
inc
jmp
mov
incl
push
cmc
test
bound
push
mov
mov
adc
fcomps
mov
test
cli
shrl
cmp
repnz
pop
out
and
jmp
xor
pushl
cli
hlt
pop
int3
pop
jno
fidivs
hlt
call
fwait
inc
and
mov
in
insb
push
pop
loopne
cld
cmp
lcall
dec
adc
inc
jno
repnz
fildll
or
xor
test
icebp
jbe
xchg
sub
daa
jo
xchg
mov
xchg
jae
push
pop
cmpb
push
mov
insb
push
add
adc
incl
movsl
test
push
mov
pusha
pop
xor
je
add
add
or
rorl
sarb
inc
std
xchg
call
and
sub
pop
cmp
add
lret
jge
xor
clc
sbb
and
sbb
mov
ljmp
out
out
es
pop
ret
gs
dec
fstpl
add
loope
and
lcall
pop
int
popa
xchg
mov
int
sub
fists
inc
sub
sub
mov
lcall
imul
in
pop
sbbb
cmp
mov
jmp
fnsave
adc
inc
clc
ljmp
sub
xchg
jne
repnz
fisubs
in
lods
fistps
dec
fdivrp
fcomip
call
mov
xchg
out
jp
out
lcall
xchg
inc
es
orl
decl
mov
cli
in
push
adc
mov
sahf
cmpsl
cwtl
inc
and
mov
adc
loopne
imul
mov
scas
sbb
call
fwait
add
inc
add
fisubs
dec
xchg
in
mov
inc
xchg
and
idivl
lcall
pushf
xor
sahf
movsb
cli
into
hlt
jbe
push
movsb
loop
adc
inc
or
ud0
sbb
and
iret
push
call
repz
ljmp
sub
clc
cmp
add
pop
add
jo
roll
pop
enter
sbb
daa
cmp
rsqrtps
xchg
cltd
xchg
in
xchg
add
outsb
lods
dec
pop
mov
insb
incl
pop
bound
aam
repnz
add
sar
sbb
in
push
cmpsb
mov
bound
push
call
inc
nop
out
cmpsb
xchg
xchg
mov
push
ja
adc
test
mov
add
mov
test
jne
lds
test
es
cli
ljmp
pop
push
fwait
loopne
scas
shrb
fidivs
repz
jecxz
icebp
inc
fadd
call
andb
outsl
jg
cmp
mov
xchg
pushl
dec
movsb
and
mov
daa
subl
mov
mov
incl
roll
inc
inc
xchg
idivl
push
lock
popa
jb
pop
xor
inc
out
addr16
outsb
jle
or
cli
mov
inc
adc
mov
xchg
fildl
xor
dec
push
dec
cmpsl
cmpsb
push
pop
and
outsl
xorl
jg
fwait
mov
xchg
call
insb
imul
outsb
sub
nop
aaa
fiaddl
stos
jnp
enter
mov
pushl
repnz
out
fsubl
push
mov
pop
lock
adc
lcall
ret
aad
or
fwait
lahf
sti
jns
incl
xchg
mov
xchg
push
dec
jmp
test
jns
popf
push
lods
imul
sub
inc
out
sub
mov
sub
dec
pop
icebp
cmpl
sbb
mov
mov
jp
adc
xchg
mov
in
ret
mov
loope
jmp
call
cmp
sbb
ficomps
dec
pop
add
mov
fdivrl
aas
lcall
jmp
ss
leave
aaa
shll
jmp
xchg
out
sbb
pop
jle
cmp
ljmp
hlt
cmp
inc
xchg
cmpsb
adc
imulb
stos
dec
rcr
pop
pop
je
rcrl
pushl
adc
mov
loope
sahf
loopne
sti
leave
xchg
mov
sbb
xchg
out
pushl
inc
jns
lods
mov
lahf
mov
mov
cmc
mov
lods
fstpt
xchg
jmp
cs
ljmp
push
loope
xchg
sub
jge
mov
jns
sarb
jmp
jne
cmp
push
sbb
or
sarb
sbb
xchg
lcall
inc
fdivrs
fcomps
add
mov
cmp
mov
adc
jg
pusha
xchg
push
shll
out
imul
dec
inc
pop
jno
adc
es
ljmp
adc
into
push
nop
fxch
fldl
mov
inc
xchg
stc
add
movsb
cmpl
push
sub
mov
push
mov
out
mov
aad
sbb
push
imul
movb
out
mov
sbbb
in
ljmp
callw
jo
mov
rol
cli
pop
push
daa
xchg
dec
xor
rcl
daa
test
jbe
and
jmp
gs
mov
out
pop
cmp
pop
sahf
xor
jecxz
pop
std
adcl
in
inc
ret
dec
xor
push
dec
pop
call
xor
push
xchg
xor
jmp
dec
rol
aaa
loop
jg
pop
das
loope
jno
sti
cltd
cmp
sti
arpl
mov
imul
jg
cld
cmpsb
or
xor
mov
paddb
push
dec
pop
jb
add
mov
lcall
sub
loopne
cld
adc
pcmpgtw
int
dec
mov
jg
and
jmp
jae
les
push
mov
jmp
decl
push
or
sbb
insl
pop
enter
mov
cmpsl
aam
dec
bswap
jg
xchg
dec
cmp
inc
nop
sbb
pop
stc
lcall
cmc
popf
jo
lds
fadd
or
pushf
cmp
nop
cld
lcall
add
jbe
leave
push
mov
dec
cmpsl
mov
cmc
push
in
clc
call
lahf
cmp
xchg
sub
pop
xchg
pop
sbb
and
test
imul
sub
cli
decl
adc
inc
stc
mov
rcrl
dec
inc
or
cmp
sub
movsl
jnp
outsl
cli
decl
mov
insb
je
dec
cmp
dec
lahf
xchg
rorb
bound
sahf
and
loope
mov
push
pop
mov
push
cwtl
mov
ljmp
dec
test
shrb
push
stc
call
xor
pop
jg
lcall
cs
xchg
hlt
insb
mov
loopne
loopne
jp
data16
cmp
mov
incl
int
cmp
pop
jbe
std
xchg
ds
or
mov
or
out
mov
jmp
incl
xor
cld
stos
aaa
test
or
sarb
pop
arpl
icebp
iret
mov
mov
outsl
xor
lods
aam
iret
loopne
push
jp
push
dec
shll
fsubrp
int
icebp
imul
or
lahf
xor
lret
inc
subb
or
addr16
jbe
inc
ficompl
shll
dec
inc
and
out
addr16
test
mov
cmp
aam
aad
push
scas
daa
fs
ljmp
repz
push
movsb
call
fwait
stc
fcoml
loopne
cmc
ja
roll
roll
jmp
jbe
iret
push
sub
xor
out
mov
stos
adc
jmp
mov
mov
pushl
mov
adc
das
and
test
orl
mov
mov
mov
sub
adc
out
mov
fsubrs
fdivr
sub
cmp
aas
repnz
movsb
inc
ss
stc
test
push
cmp
xor
lods
fwait
mov
adc
push
ret
jo
adc
mov
adc
fists
ret
outsl
mov
or
xlat
jmp
ljmp
je
imul
and
jl
inc
push
ret
rcrb
xchg
lock
pop
scas
icebp
call
nop
lret
jecxz
cmpsl
nop
pop
inc
inc
loop
test
pop
mov
mov
call
ret
inc
lahf
mov
pop
inc
addr16
loope
push
ret
jle
pop
mulb
sub
mov
stos
or
push
xor
fs
sbb
xchg
cld
sub
mov
aas
in
movsb
pop
sub
lahf
jg
insb
cld
xor
ficoml
xor
jmp
decl
pop
xlat
dec
fnstsw
sbb
cld
dec
into
out
lret
ret
push
cmc
jg
jns
leave
ss
decl
fmull
paddq
push
jg
or
iret
shl
or
icebp
dec
xor
popa
lahf
or
les
jge
jp
bound
dec
lock
cli
sti
in
push
dec
aad
sbb
fidivrl
inc
daa
jnp
add
insb
jl
loope
fwait
jg
es
pusha
cli
mov
dec
std
xchg
cmp
push
data16
jnp
pop
or
dec
fmulp
xorb
and
push
repz
scas
push
das
dec
sti
pop
push
testb
std
dec
fimuls
jns
pop
xchg
xchg
fadd
mov
xchg
rorb
pop
xchg
repz
lcall
xchg
jl
pop
push
adc
sbb
push
or
push
outsl
pop
lock
cld
mov
pop
idivb
lcall
push
push
or
ret
popf
jae
dec
lret
mov
jg
xchg
test
insb
rorl
and
outsb
add
add
add
inc
lds
mov
push
mov
pop
cmp
insl
push
stc
loopne
popf
shr
and
push
dec
dec
lcall
jg
dec
mov
jl
loop
lret
fyl2x
mov
jp
jg
dec
cld
stos
dec
orl
and
jno
fcos
add
mov
repnz
shr
scas
lret
out
cli
mov
loope
sahf
lret
das
jg
sbb
test
jmp
jbe
ja
mov
xchg
add
mov
mov
jl
mov
dec
pop
fstl
mov
mov
mov
lcall
and
sbb
push
popa
aam
mov
call
inc
dec
cs
add
sub
inc
push
inc
faddl
call
and
adc
add
stos
int3
jbe
jo
mov
bound
sub
test
cmp
fnstsw
les
dec
scas
sbb
adc
cmp
jns
aam
scas
xchg
cmc
jae
sub
jmp
adc
adc
call
cmpsb
insb
push
xor
popa
fldcw
mov
loop
mov
pop
mov
popa
cli
dec
add
jecxz
int3
inc
loopne
mov
mov
test
ljmp
cli
jno
pushf
xor
cld
add
sarl
xor
out
cmp
insb
mov
and
mov
inc
mov
mov
mov
xchg
mov
cli
jmp
xchg
test
mov
repnz
rclb
fs
cltd
movsl
movsb
fidivs
in
inc
xchg
orb
lret
fimull
imul
test
sahf
jp
aad
ja
jno
decl
into
mov
loope
cmpsl
and
jmp
xor
pop
push
call
fnstcw
fwait
jns
jl
loope
and
push
out
jle
je
and
shll
add
pop
out
mov
mov
xchg
cmp
adc
rorb
cmp
rorb
daa
mov
call
push
outsl
lea
jno
push
into
mov
add
inc
mov
inc
adc
test
ljmp
add
or
out
popf
push
outsb
jmp
inc
xor
push
repz
mov
ret
ret
sbbb
pop
add
fcos
cmp
mov
xor
add
pop
cmp
inc
in
xor
jg
call
in
flds
sub
das
sub
insl
mov
int3
adc
dec
cmp
and
orl
dec
mov
add
lcall
daa
cmp
jmp
ja
fs
and
ret
cmpsb
lcall
scas
ss
mov
pop
bnd
sbb
das
clc
pushl
push
add
or
je
std
fdivl
repnz
lea
or
call
leave
jb
and
adc
and
push
cmpsl
add
popa
loope
pop
mov
or
mov
inc
lahf
nop
xlat
mov
jge
mov
adc
repz
sar
pushl
cmpsb
ljmp
mov
shl
push
adc
push
sub
sbb
fcoml
mov
dec
outsl
int3
lds
sbb
daa
add
dec
mov
fiaddl
mov
ret
xor
sub
adc
dec
or
mov
dec
arpl
push
faddl
iret
addr16
sub
ljmp
es
xchg
ret
cmpsl
jne
jge
test
lcall
inc
cmp
lret
out
lcall
cli
clc
adc
dec
test
data16
lea
call
or
lret
xchg
cmpsl
jb
sti
push
add
sub
mov
dec
dec
insb
rcrb
pop
scas
sub
outsl
sub
inc
movsl
jp
cmp
pushl
xchg
mov
add
mov
fcoml
repz
arpl
push
adc
clc
call
std
gs
pop
arpl
icebp
ljmp
arpl
push
mov
jo
mov
outsb
cmp
fstp
in
bound
jno
xlat
pop
clc
push
sbb
add
out
test
cmp
mov
mov
lcall
enter
out
lahf
es
inc
push
out
lds
imul
sbb
incl
sub
xchg
insl
add
fwait
and
icebp
cmp
enter
scas
mov
cmpsb
pushf
outsb
cmp
xor
stc
mov
enter
jmp
decl
cli
pushf
mov
repnz
mov
lcall
mov
jae
add
fidivl
cmc
xorb
xor
and
out
sub
clc
daa
gs
incl
cmpsl
insl
push
in
jmp
xchg
les
xchg
xor
xor
lcall
outsb
dec
jbe
hlt
mov
cmp
push
dec
ficomps
fcomp
sbb
test
add
aam
adc
bswap
fsubl
push
mov
mov
mov
clc
in
cmpsl
ds
lcall
ficoms
mov
mov
mov
jp
or
test
mov
pop
mov
incl
cld
add
sbb
ss
jo
scas
sub
sub
cmp
jg
sub
mov
sub
fsubrs
clc
pushl
movsb
xlat
mov
xchg
mov
lcall
mov
ljmp
inc
lock
in
sarb
ja
addr16
pop
push
aas
pushl
mov
fwait
les
xchg
jns
std
fwait
and
jecxz
push
scas
addb
outsl
ret
in
cltd
pop
and
and
ljmp
pusha
and
cmp
out
jne
inc
sti
push
enter
mov
pushl
jnp
call
mov
std
sarb
pop
or
jmp
mov
or
aam
sbb
fsubs
rorl
cmpsl
dec
cwtl
aas
mov
test
sub
cli
lcall
fisttpl
mov
push
or
inc
mov
ljmp
popf
pop
jle
sub
in
fdivrl
lds
rcr
lret
mov
ljmp
xlat
bound
scas
pop
call
fnsave
in
decl
push
sbb
fwait
mov
dec
push
pop
pop
pop
mov
loope
aad
bnd
loop
sub
and
pusha
popa
fnstcw
sbb
cmp
pop
cmp
jo
outsb
or
call
push
cmp
inc
imul
sub
pop
cmp
sahf
mov
aas
mov
pushl
ficoml
lahf
or
and
mov
jge
nop
jbe
imul
ret
leave
decl
pop
faddl
dec
and
jmp
sbb
jno
add
push
sbb
pop
jo
add
ljmp
stc
mov
insb
lret
inc
xchg
xor
leave
adc
inc
mov
or
sbb
sbb
enter
sbbl
fdivrs
in
ja
sub
sub
je
pop
or
aas
sub
dec
xor
jg
decl
cmp
adc
js
mov
mov
in
xchg
test
std
pushl
sbb
scas
nop
pop
popf
sbb
or
ja
adc
add
cmp
push
and
pushf
sar
xor
lcall
mov
xlat
insl
sbbl
or
jae
cld
dec
lods
insl
or
adcl
pushl
pushl
lahf
jecxz
dec
jle
test
scas
add
cltd
movb
sbb
mov
decl
das
inc
outsb
jmp
push
cmc
mov
inc
push
or
vdivsd
jp
loopne
popf
rclb
out
in
mov
int3
inc
xchg
fildl
scas
cli
inc
testb
dec
pop
add
ret
sti
mov
xor
mov
subl
outsl
inc
or
dec
fsubrs
add
sbb
mov
fstps
ret
fsubs
scas
cmp
jecxz
iret
mov
ja
fwait
stos
pop
lcall
stos
inc
jno
icebp
lcall
popa
or
out
add
clc
cmove
ljmp
out
outsb
sbb
jns
dec
xchg
nop
popf
sub
add
xchg
iret
out
pop
adc
aaa
inc
test
js
inc
sbb
sbb
int3
cmp
adc
xor
lods
pop
jle
push
pop
sub
scas
push
imul
push
and
popa
clc
shlb
in
repnz
sub
pop
in
sahf
pop
dec
std
lcall
decb
sbb
mov
pop
pop
push
xchg
mov
pushf
jg
call
aad
and
cmp
gs
inc
mov
in
sbb
jp
lock
ljmp
jno
sbb
out
pop
and
orl
daa
enter
dec
push
mov
mov
add
stc
and
lret
mov
lock
jg
mov
push
iretw
adc
pushl
sbb
inc
dec
cmp
scas
add
add
decl
movsb
xchg
inc
mov
xlat
cmp
jg
cmp
das
adc
in
test
nop
mov
incl
jmp
ljmp
cmp
out
cli
ljmp
aaa
imul
scas
leave
lods
xor
fcmovbe
lock
sbb
stc
hlt
xor
jg
inc
iret
addb
jnp
mov
add
inc
pusha
pusha
xchg
and
incl
lret
or
nop
sub
dec
jg
xchg
aam
add
mov
lock
es
fisubl
cld
xor
push
sub
je
dec
js
xor
sahf
js
std
jecxz
cmp
rorl
call
aad
fsubrl
imul
cld
lcall
das
daa
push
mov
jmp
add
test
ror
gs
pushl
or
xor
dec
mov
in
test
ret
cmp
repz
int
inc
mov
in
test
push
mov
imull
loopne
aaa
or
cs
inc
scas
outsl
pushl
sub
insl
lahf
cwtl
ja
mov
sub
jae
jbe
stos
add
fmul
fbld
pop
incl
lods
ja
pop
into
ds
jmp
jo
cli
mov
or
sbb
push
out
jns
sub
xchg
lods
and
jmp
test
mov
mov
in
cli
mov
add
cmp
jmp
test
add
mov
insl
cmp
add
inc
fstpt
jg
and
xlat
in
mov
or
adc
xchg
scas
leave
dec
or
inc
mov
ret
or
sub
and
or
push
popa
int
sarl
ljmp
cmp
sti
sub
sub
xchg
push
ret
inc
jl
cmp
sub
inc
pushl
aas
mov
push
fdivs
add
stos
sub
int
mov
in
sub
jg
icebp
mov
mov
inc
sahf
mov
jne
jg
outsl
jmp
fidivrs
aas
inc
xchg
ss
in
push
xor
stc
es
fmul
jge
fldcw
mov
es
outsl
add
enter
xor
aas
jl
fnsave
in
repz
or
push
jne
outsl
out
mov
ss
lcall
out
fmull
decl
adc
pop
std
faddl
test
sub
aas
mov
push
dec
jecxz
iretw
xchg
jmp
repz
pop
aas
cmp
out
repz
sbb
cld
jbe
xor
and
dec
inc
xor
lods
movsl
xlat
arpl
pop
je
pop
xor
sub
lea
cmp
ljmp
xor
in
adc
mov
iret
dec
sbbl
imul
ljmp
cmp
clc
cli
and
adc
repnz
mov
adc
pusha
enter
shll
call
or
jno
test
daa
out
std
add
xchg
sbb
xchg
push
iret
inc
cmp
stc
pop
loope
lods
xor
into
pop
adc
decl
icebp
call
push
xorb
test
xor
inc
sbb
xchg
lock
lcall
push
bound
sar
fadds
add
subl
ljmp
int3
xchg
pop
jp
stos
add
cld
mov
lret
sbbl
popa
cld
ret
and
mov
mov
inc
sbb
ljmp
mov
push
xor
ljmp
pop
je
lret
cmp
out
lods
imul
repz
lcall
pushf
ss
and
jle
loopne
pop
out
push
sbb
cli
das
push
pop
cmp
jmp
mov
leave
mov
je
insl
inc
lcall
clc
je
inc
xlat
cli
iret
pop
mov
mov
ss
mov
add
jl
icebp
fwait
inc
mov
pushf
loopne
test
pushl
cmp
shl
cld
scas
mov
cli
fwait
mov
mov
adc
add
jmp
fsubrs
xor
adc
jns
aad
loop
mov
test
shll
xor
call
push
mov
xchg
cmp
imul
shlb
cmpsl
push
mov
sbb
mov
mov
lods
jbe
or
xor
adc
mov
or
lcall
pop
fadds
gs
out
jno
in
pop
mov
rcr
mov
stos
or
stos
inc
pusha
jl
dec
into
jbe
cld
xchg
loope
call
jp
sbb
pop
sbb
xlat
les
xor
jg
or
ret
mov
sarb
adc
sub
jno
ljmp
sbb
out
sub
xchg
push
push
cli
in
mov
stc
popf
movsl
ja
cmpsb
xor
scas
mov
lcall
sub
insb
mov
out
jmp
mov
call
push
fidivrs
push
mov
movsb
push
out
ja
enter
mov
decl
xor
inc
int
rorb
cli
cmc
adc
xor
popf
mov
lcall
jns
xchg
or
les
xchg
sbb
sahf
fwait
push
jle
mov
sub
pushl
xor
add
aad
cs
adc
mov
fwait
adcb
call
jae
popf
inc
adc
xchg
or
call
and
or
mov
jne
mov
push
clc
ret
in
sarl
int
decl
fsubrl
inc
add
sbb
mov
cmp
int
es
jb
decl
sahf
mov
mov
insl
dec
mov
jbe
sahf
push
lds
ljmp
push
mov
out
or
push
xchg
jae
movsb
push
call
cmp
movsb
int
pop
lock
mov
js
inc
dec
mov
pop
decl
ljmp
xor
sbb
push
js
aad
rcll
bound
ja
sar
lahf
sbb
in
cmp
or
mov
cli
mov
jmp
sub
lahf
out
ret
lret
push
pop
mov
sbb
incl
mov
inc
jge
jge
aad
jbe
jnp
pop
loopne
sbb
in
pop
repnz
mov
call
sbb
mov
mov
sar
or
lea
movsb
pop
cmp
xorb
loope
jg
ss
dec
decb
roll
add
inc
adc
lcall
inc
jmp
jmp
add
xchg
xchg
mov
in
hlt
inc
inc
mull
test
inc
andl
ret
and
in
call
xor
outsb
fmull
dec
lods
mov
sub
arpl
aaa
dec
loopne
out
sti
bnd
mov
inc
add
std
add
pop
rclb
pushf
xchg
dec
dec
and
pop
scas
das
test
cwtl
dec
lcall
aam
add
pop
lret
mov
push
mov
push
insb
cmc
xor
mov
sub
out
adc
outsb
movsb
in
jnp
sub
fs
jecxz
outsb
push
cmc
je
mov
mov
std
dec
jo
add
rclb
dec
push
call
std
cmp
adc
jo
aas
mov
jmp
mov
nop
inc
dec
sbb
dec
sub
dec
iret
push
adc
pop
pop
xchg
out
fwait
ss
ljmp
mov
adc
pusha
popa
lret
jge
cmp
sub
jg
xchg
fldl2e
imul
fildl
mov
push
call
mov
and
rolb
aad
push
add
jp
fsts
xor
dec
mov
fwait
cmp
lcall
pop
push
pusha
push
mov
or
pop
lea
mov
jnp
scas
sbb
xchg
push
ljmp
js
or
lock
sahf
pushf
push
add
rol
loope
test
incl
fisubl
push
sahf
sbb
mov
sarb
popf
gs
daa
cmp
jns
icebp
mov
out
push
mov
dec
cmp
in
jg
cwtl
xlat
mov
or
js
adc
movsl
fists
jne
enter
mov
push
adc
incl
fs
dec
imul
push
stc
xor
inc
loopne
mov
xchg
inc
sub
clc
and
jp
pop
pop
ret
ficomps
and
sub
sbb
push
aam
pop
sbbb
or
push
icebp
cmc
xchg
test
inc
bound
scas
aad
data16
ja
out
jbe
in
sbbb
decl
pop
fstpl
mov
icebp
dec
enter
jg
jmp
mov
pusha
push
xor
insb
add
xor
ljmp
repnz
push
call
adc
push
sub
cvttps2pi
inc
jo
xchg
xchg
in
mov
imul
add
mov
inc
mov
movsl
outsb
pusha
ljmp
iret
add
scas
lock
adc
call
mov
and
in
add
insl
clc
mov
add
ljmp
fldcw
sub
fisubrl
cmp
cli
out
lock
sub
dec
sub
mov
fwait
not
cmp
xchg
mov
cmc
fildll
sub
popf
xor
addr16
jne
add
cmp
sub
jb
jns
aas
sbb
mov
jbe
jg
sbbl
sbb
and
cwtl
fistl
fnstcw
enter
jmp
pop
sbb
aaa
xchg
insl
scas
clc
cs
mov
pop
iret
mov
lcall
jb
xlat
imul
jg
jmp
inc
repnz
inc
push
add
jp
push
testl
stos
ja
je
dec
clc
mov
mov
int3
adc
or
push
inc
call
xchg
testb
jae
mov
call
lods
fdivs
dec
stos
mov
fdivrs
xor
mov
add
imul
lock
inc
dec
bound
pop
and
jnp
inc
scas
push
pop
icebp
les
mov
imul
dec
or
cld
daa
add
sub
movsl
movsl
imul
push
cli
call
fistpll
cmp
hlt
les
lds
mov
stc
into
sar
mov
cmp
out
push
jl
cld
push
popa
cltd
insl
lods
mov
jb
and
ds
jne
shl
mov
loopne
mov
addl
jg
incl
std
dec
lods
jae
mov
push
subb
into
rcl
ljmp
and
jmp
mov
sbb
mov
stos
jns
cmp
pop
ret
mov
je
es
pushf
xchg
jo
push
rclb
ja
decl
loop
out
pushf
adc
cmp
iret
or
ss
inc
lods
inc
sub
lcall
sub
xchg
icebp
hlt
loop
inc
repnz
popf
jmp
das
addl
pop
xor
jg
test
in
push
ret
jo
lahf
shl
sbb
pusha
es
pushl
in
shll
push
mov
adc
adc
jbe
add
jge
push
lcall
js
stos
and
jo
ret
push
aam
aas
push
mov
stos
mov
rep
push
cld
js
imul
pop
sub
imul
mov
inc
jmp
filds
adc
cmp
sti
scas
push
cli
sbb
out
jle
pop
pushl
cmp
jb
mov
sbb
sbb
loop
cmp
arpl
insl
add
inc
inc
cli
cmp
adc
rorl
cmp
outsb
ljmp
jmp
sti
repnz
ficomps
hlt
dec
and
or
mov
sub
outsb
mov
jg
dec
pop
test
cmpsb
inc
cmpsb
and
movsb
pop
push
dec
and
pop
jge
mov
loop
popa
std
cmp
sub
sub
pop
cli
sbb
dec
sbb
stc
loopne
jg
jbe
mov
ss
xchg
lahf
push
cld
adc
repz
jg
incl
rorl
sbb
push
pop
mov
outsb
pop
mov
inc
adc
lea
test
lcall
mov
nop
inc
repnz
movsl
test
lods
shll
dec
popf
sub
call
push
enter
sub
sarb
and
icebp
dec
addl
sbb
and
outsl
cmpsb
xchg
cli
loope
push
jge
cli
ja
lock
inc
mov
inc
call
dec
mov
mov
lods
lods
dec
ja
xchg
call
and
lret
inc
fcomip
cltd
xor
lods
and
dec
and
push
or
sarl
pop
cld
sti
out
pop
mov
popf
jl
mov
test
stc
gs
sbb
rcrl
sti
xchg
xlat
loopne
inc
jg
rcll
scas
mov
or
mov
lds
push
ret
inc
cmc
sbb
sbb
sahf
repnz
xchg
test
adc
dec
xchg
or
jne
xor
jg
stos
lock
js
std
jmp
mov
loope
cli
dec
jl
adc
outsl
inc
add
pop
cmc
mov
push
aas
mov
imul
or
sub
lcall
arpl
xor
out
iret
in
dec
loop
xor
sub
outsl
dec
lea
mov
testb
arpl
mov
xor
push
push
test
mov
add
aam
fwait
inc
in
dec
sar
cmp
in
int
mov
lret
cli
inc
lock
xchg
adc
mov
jg
jg
test
push
pop
cld
mov
jno
je
data16
jge
test
jl
loopne
loop
mov
xchg
cwtl
mov
fsubrl
xchg
dec
out
mov
outsl
cli
mov
cltd
jbe
pop
shlb
mov
mov
xchg
popf
hlt
out
xor
out
scas
adc
stos
rcrl
adc
xchg
arpl
pushl
repnz
xchg
icebp
fisubl
ljmp
add
mov
filds
decl
mov
test
cmp
addr16
cmpsb
out
inc
lea
decl
cwtl
jbe
arpl
sub
iret
pop
inc
xchg
sbb
lcall
hlt
fistpll
outsb
or
lahf
or
pop
push
rcl
loopne
das
xor
jecxz
lods
pop
sub
clc
inc
into
cs
pop
jbe
decb
decl
cld
mov
ljmp
imul
int3
and
jnp
and
jbe
pop
inc
add
js
outsb
or
xchg
scas
in
pop
gs
xor
add
and
std
into
add
xor
dec
test
mov
lret
int3
subb
xor
lcall
or
call
arpl
xor
fnsave
xorl
mov
jo
add
fdivrl
push
enter
mov
inc
es
call
inc
dec
jns
stos
cmp
imul
mov
test
mov
mov
sub
pop
cwtl
sbb
sub
and
push
ss
test
nop
jb
scas
clc
jg
stos
andb
int3
imul
dec
pop
push
decl
add
imul
cli
adc
push
inc
mov
jg
mov
cmc
adc
xchg
call
gs
xor
enter
inc
and
sub
mov
ret
lcall
ret
sbb
mov
pop
xlat
outsb
pop
call
testl
hlt
int
sbb
negl
idiv
mov
outsl
add
loop
call
cltd
out
ss
cs
out
xor
mov
mov
add
test
inc
clc
ljmp
sbbl
dec
loope
pop
lcall
aad
movl
cmp
adc
jns
mov
call
pop
jo
lock
add
js
adcl
leave
push
add
scas
dec
fisubs
jae
xchg
cmp
ret
sub
xchg
lret
lods
cli
adc
add
lcall
xor
neg
mov
es
jp
repz
sbb
out
mov
or
dec
push
insl
gs
insb
cmc
inc
jp
add
fmuls
mov
add
aaa
ja
mov
fistps
les
adc
decl
and
lods
inc
outsb
jae
or
dec
movl
decl
inc
bound
imul
sbb
mov
int
out
call
add
aam
mov
mov
inc
int
xor
cmpsb
gs
add
sbb
scas
sub
dec
and
mov
xchg
mov
pop
push
int3
les
cmp
ret
loopne
or
clc
ficoml
fldl
sub
cmp
mov
mov
cwtl
push
pop
jbe
pop
mov
and
sahf
stos
and
xor
jmp
xor
dec
sti
cmp
out
mov
daa
stos
leave
subl
mov
xchg
inc
int
cmpl
out
jge
loopne
adc
jg
sarl
inc
jbe
cld
jae
nop
mov
sub
pminub
push
js
adc
ljmp
add
or
sar
and
roll
xlat
incl
dec
lods
sbb
sub
mov
iret
adc
lods
andb
pushl
movsl
cwtl
fnstsw
hlt
dec
push
pushf
push
xchg
jne
push
int3
insl
pusha
shrb
mov
inc
cmp
cmp
mov
loop
in
push
call
cmp
lods
out
in
fcmovnb
mov
enter
push
out
or
pop
daa
adc
mov
dec
shl
notl
or
mov
pushl
jmp
into
and
mov
movlps
and
sbb
and
lret
call
fimuls
jno
cld
mov
xchg
mov
pop
push
xorl
scas
add
shlb
repnz
xchg
mov
decl
adc
mov
and
vpshld
dec
nop
cld
aas
add
test
push
mov
int3
push
add
mov
mov
ret
sub
cmp
faddp
inc
rolb
mov
dec
daa
shl
sti
fsubr
bnd
inc
scas
sbb
inc
pop
mov
push
push
adc
cld
imul
out
faddl
mov
xorb
ret
mov
sbb
into
sub
shlb
xlat
jge
jb
add
xorl
xchg
xchg
xchg
inc
ficoms
popl
cmp
jmp
dec
ja
mov
mov
lea
mov
call
in
sub
clc
ja
jmp
jnp
in
or
out
mov
popf
sub
inc
mov
push
ljmp
rclb
js
xor
xchg
mov
out
outsl
popa
and
loope
cmp
cli
cld
push
shll
mov
cli
or
lcall
push
call
push
scas
pop
sub
xlat
or
and
mov
imul
pushf
decl
iret
sbb
pushf
push
mov
ljmp
and
or
lcall
mov
xchg
in
push
lahf
dec
adc
inc
and
jg
rorb
adc
cli
mov
imull
addr16
stc
mov
lcall
jae
xchg
test
mov
mov
int3
inc
mov
push
icebp
lahf
pop
jb
push
mov
decl
std
ret
add
push
bound
jp
ficompl
les
adc
movsb
decl
mov
push
mov
mov
out
into
in
jb
and
pop
ds
or
jmp
into
sbb
decl
movsb
xlat
inc
sbb
mov
dec
mov
int3
pushf
das
repz
decl
call
cmc
cmp
in
les
inc
js
ljmp
xor
es
ficoms
arpl
xor
inc
pop
jbe
out
dec
pop
sbb
push
fldt
pop
incb
xlat
sbb
lcall
mov
les
mov
cmp
lock
ret
push
push
in
mov
mov
mov
inc
sbb
in
push
faddl
inc
adc
jg
and
inc
xor
repnz
pushl
loop
aam
xor
sub
mov
ja
ljmp
adc
cmp
xor
scas
pop
addr16
in
hlt
dec
scas
dec
and
call
add
aaa
es
mov
and
or
js
ds
aad
add
outsl
cmp
gs
push
mov
push
xor
mov
out
jl
jle
inc
iret
pop
xorl
cmp
es
call
call
pushf
xbegin
inc
stos
dec
ja
xor
adc
dec
push
xor
fistpl
sti
movsl
call
insl
push
and
add
mulb
sbb
das
mov
jno
push
sbb
mov
ljmp
mov
out
ret
mov
pop
pusha
cmp
out
or
test
jo
xchg
jns
or
call
xor
lea
lahf
js
dec
cld
call
jne
cmc
add
jo
adc
mov
shlb
cmp
push
cmp
mov
cmc
inc
mov
call
jae
jo
cs
rcll
ret
push
out
mov
add
outsb
call
rorb
mov
mov
jmp
aad
clc
pusha
adc
movsl
pop
push
push
cltd
and
lods
mov
ljmp
sub
and
and
cwtl
es
xor
call
lret
jecxz
loop
imul
cmp
push
jb
cmpb
lret
or
mov
mov
cmp
push
jp
cmpsb
arpl
repnz
js
mov
or
test
cmpl
xchg
aad
dec
xchg
outsl
out
xor
imul
enter
hlt
ljmp
aam
into
mov
xchg
incl
add
inc
jnp,pn
add
push
jns
shlb
adc
jmp
cmp
push
addr16
xchg
mov
icebp
ja
mov
mov
out
xchg
aam
in
stc
in
incl
roll
andb
insb
mov
je
adc
ljmp
or
cmpsb
or
or
add
jge
movsl
sarb
and
hlt
mov
or
or
ja
out
incl
cli
pop
jmp
jns
repnz
dec
jecxz
sar
outsb
sar
pop
push
ja
cld
fiadds
lock
std
mov
dec
movsb
mov
jg
jg
arpl
add
adc
mov
jmp
js
jle
outsl
daa
je
pop
xchg
dec
adc
ja
fildl
clc
mov
call
or
sbb
out
iret
popf
fucom
cmp
cmp
or
sbb
inc
int3
mov
cmc
fcomip
or
xchg
insb
js
mov
out
push
sbb
pop
enter
xchg
iret
test
sahf
jl
loop
outsl
cld
stc
push
add
leave
data16
mov
push
cmp
xchg
dec
sub
pop
or
ss
out
xor
mov
or
and
lret
cmp
pushl
push
sub
fdivr
out
mov
sbbl
test
xchg
lcall
aad
out
xor
xchg
adcl
iret
add
decl
inc
jb
and
mov
cmp
lcall
lcall
mov
cmp
inc
stc
mov
pop
add
subl
cmpsb
and
xchg
and
std
das
movsb
sbb
push
mov
lcall
dec
pop
sahf
push
add
fcomip
out
pop
or
xor
loopne
jae
call
lock
shl
ja
js
loopne
and
push
pushl
and
cli
add
fisubl
fs
adc
mov
inc
scas
pushl
pushf
shrl
int
repz
lret
or
xchg
nop
addl
jb
pushl
or
mov
testb
push
mov
popa
mov
loop
ljmp
xchg
gs
orb
push
lret
ror
inc
jmp
pushl
and
cmc
fstpt
and
sbb
test
sub
call
or
xor
aam
xorl
sub
fwait
aas
out
out
xchg
outsb
cli
jmp
lea
subb
pop
out
stos
inc
icebp
mov
outsl
and
adc
mov
push
rolb
fs
xor
sbb
ss
lcall
lds
mov
xchg
pop
sub
xlat
xchg
xor
or
js
mov
and
es
adc
pop
gs
outsb
adc
jp
lcall
fnsave
inc
nop
push
cmp
addr16
call
sar
jg
xchg
xchg
dec
je
pop
je
je
dec
adc
mov
incl
data16
jp
ret
cld
jmp
mov
popf
ja
push
and
enter
jg
add
scas
rol
pop
ljmp
ljmp
sbb
xchg
jne
imulb
fcomip
dec
mov
les
test
arpl
mov
in
sbb
sub
adc
leave
or
in
in
lock
ud0
pushl
rcr
jmp
or
cmp
out
nop
lret
shrl
sbb
rclb
jle
xor
cli
mov
xchg
popa
int3
xchg
push
pop
outsl
xchg
mov
clc
imul
pop
sahf
adc
aad
lock
stos
sub
inc
or
pop
mov
sbb
mov
cli
pop
out
jge
dec
test
xor
push
or
cli
pop
mov
int
pop
or
outsl
std
rcll
dec
and
mov
ljmp
sub
in
pop
pop
adc
xchg
imul
xchg
pop
dec
std
sbb
sub
pushf
mov
xchg
iret
push
inc
or
popl
enter
jg
iret
fisubl
jb
repnz
jmp
es
pusha
rcr
pop
sub
in
mov
insl
jg
pop
out
stc
pop
addr16
sbb
out
repz
sub
push
mov
cmpsb
aad
mov
hlt
jmp
pop
iret
call
and
ja
pop
push
cli
call
and
lds
ror
nop
das
rolb
shl
int3
ret
or
sub
fcoms
pop
shll
mov
jo
pop
pusha
loope
xchg
push
and
xor
aam
sbbb
ljmp
push
jno
int
cmp
popf
xchg
push
cmp
enter
popf
dec
ret
addl
jl
js
je
arpl
and
or
mov
add
lods
mov
ja
nop
stc
lcall
xchg
mov
pop
bound
jp
or
mov
imul
inc
sub
mov
decl
sub
pop
cmp
xchg
push
mov
xorb
cld
lcall
adc
xchg
stc
gs
mov
dec
jns
int
push
test
pushl
lods
ss
lcall
push
xor
fdivr
sbb
pop
nop
addr16
pop
loopne
pop
push
adc
es
add
pop
leave
pop
popf
cmp
adcb
popf
adc
dec
dec
push
iret
or
pushl
daa
les
inc
loop
add
lret
scas
cmp
pop
xchg
sahf
and
or
scas
push
int
pop
test
and
jae
leave
in
scas
ss
dec
mov
aas
add
cmp
fildll
sub
ret
out
jbe
fwait
js
fnstenv
loopne
imul
pushl
je
jno
pop
mov
test
mov
pop
mov
cli
incl
pop
sbb
inc
pop
popf
or
xor
cmpsb
je
outsb
mov
pop
pop
je
andb
loop
xchg
scas
mov
decl
add
les
xchg
aas
jmp
lcall
cmp
sub
push
add
and
mov
cmc
pop
add
jg
xor
js
enter
xchg
adc
lret
sbb
fstp
insl
or
incl
xchg
mov
cmp
or
repnz
test
std
std
fnstcw
mov
fcomip
jmp
fsubs
cmc
mov
icebp
sub
dec
mov
aad
call
jmp
mov
stc
sahf
adc
out
mov
in
mov
stos
sub
push
and
push
loop
outsl
rcrl
fld
cmpsb
test
push
adc
push
popf
mov
xor
inc
aaa
xchg
inc
and
and
fistl
jl
inc
sbbl
sbb
jbe
rcrb
pusha
lock
sahf
pop
es
jmp
push
mov
mov
outsb
inc
inc
fs
rol
in
out
or
scas
imul
dec
jb
and
aam
out
fdivl
or
push
sbb
inc
and
outsl
inc
ds
add
push
push
repnz
add
and
sub
or
roll
jl
inc
jns
loopne
xchg
or
ret
insl
in
xchg
lahf
in
lahf
cmp
aaa
mov
fdivrs
add
repz
scas
clc
bound
xor
cmpsb
xchg
iret
into
popa
mov
cmp
sar
fisttpll
lret
xor
adc
pop
fs
in
mov
test
lods
add
movsb
push
mov
loop
cltd
nop
sbb
call
js
push
add
fbld
fcmovnb
mov
aas
cmp
pop
pop
xchg
pusha
mov
push
add
imull
xchg
ss
pop
repz
daa
sub
incl
lods
xchg
xchg
loope
mov
inc
lods
fbld
sub
sbb
pushl
and
popf
ret
loop
movsl
in
pop
dec
out
xchg
int
cli
das
inc
fcoms
cld
cs
xchg
icebp
jae
dec
jmp
lret
cmp
jg
xor
cmp
dec
jns
stos
popf
add
call
push
clc
int3
inc
sbb
inc
aas
idivb
dec
mov
test
push
adc
mov
decl
mov
addb
fadds
jns
sbb
and
fwait
dec
fmuls
mov
xor
jne
aam
pushl
fisubrs
ret
add
dec
ds
stc
push
iret
pushf
mov
inc
sub
add
cs
test
jmp
mov
mov
rcl
push
shlb
or
ficoml
fildll
sbb
push
mov
pop
and
fisubl
shrl
out
popl
jecxz
and
filds
dec
pop
pushl
push
add
dec
dec
leave
push
adc
stos
gs
movsl
xor
imul
mov
fbld
pop
or
pop
xchg
inc
dec
jmp
rorb
movsb
loopne
mov
pop
push
daa
adc
dec
jp
mov
aaa
xchg
sar
pushl
or
inc
xchg
shlb
jne
repz
jp
call
out
pop
repz
mov
cli
pop
das
ret
cmp
dec
js
adc
sbb
and
sub
xchg
jg
sti
inc
adc
jmp
out
outsl
mov
shll
xchg
adc
lcall
dec
and
add
or
add
out
mov
lahf
cmpsb
push
movsl
orb
mov
idivl
pop
test
sbb
jg
test
mov
dec
cli
lret
and
in
xor
xlat
data16
jmp
dec
icebp
loope
aam
dec
sbbl
jae
stos
sahf
xchg
cmp
ja
cmc
in
xchg
xlat
and
ds
in
hlt
adc
or
fisttpll
js
pop
push
push
jb
jl
mov
arpl
inc
add
incl
insb
inc
inc
movsl
test
jne
mov
and
or
pop
aam
mov
inc
cmpsb
jmp
sti
pop
or
shll
mov
xchg
or
cltd
push
xor
mov
icebp
sbb
test
sar
cld
vmaxpd
cmp
nop
mov
arpl
stc
pop
xchg
stc
popa
sbb
push
lret
mov
inc
add
out
out
insl
addb
xchg
std
ds
fbld
mov
fsubp
xor
cmpsl
jb
add
xchg
mov
ljmp
cmp
fstpt
notl
sub
outsl
decl
mov
sbb
mov
scas
jo
or
loop
jae,pn
fsubrl
aaa
or
xchg
bound
cmp
int
dec
scas
cmp
or
or
sub
mov
lds
std
cmp
push
lods
and
repz
cmp
enter
dec
pop
sub
or
sbb
add
incl
ret
imulb
xor
pop
arpl
mov
and
cs
push
aas
in
faddp
ds
call
cwtl
and
cli
roll
jg
push
stc
adc
aad
js
loop
xor
adc
xchg
adc
jmp
leave
xchg
mov
mov
add
rorb
sbb
mov
and
fisttpl
pop
popa
lock
aas
mov
popa
notb
or
adc
dec
add
xchg
sbb
push
repnz
das
fnstsw
nop
inc
ja
test
in
jle
in
nop
jns
call
sbb
mov
cmp
sti
push
pushf
sub
lcall
xor
push
push
in
dec
pop
fcmovu
subb
fndisi(8087
lea
inc
or
xchg
movsl
xchg
gs
fists
imul
lock
xor
decl
add
nop
xor
in
and
test
push
push
call
decb
jnp
shr
je
dec
jl
mov
loopne
repnz
call
pop
mov
push
sub
xchg
jne
call
add
incl
pop
ljmp
outsb
and
add
icebp
shrl
mov
sbb
std
lret
cld
pop
fs
cmp
push
mov
push
inc
inc
jle
inc
fdivrs
push
out
mov
dec
lret
outsl
clc
call
inc
pop
je
shlb
sbb
mov
sbb
cmp
pushl
xchg
bsr
cmp
push
data16
leave
add
mov
mov
push
lods
fildll
idivb
repnz
inc
icebp
jg
inc
pop
int
jg
sub
xchg
mov
js
push
dec
sti
arpl
lcall
pop
cmp
pop
xor
mov
stos
out
andl
jg
incl
sbb
jp
lret
mov
sub
or
out
and
inc
divl
je
adc
int3
lret
and
loope
test
shlb
jo
lods
mov
push
and
mov
sbbl
data16
mov
decl
sbb
icebp
jb
or
leave
sbb
ljmp
pop
rcll
jmp
rcrb
pop
in
dec
in
push
cmpsb
js
mov
sub
roll
pop
and
inc
pop
mov
mov
hlt
sahf
and
push
arpl
jg
cmp
mov
dec
xor
fmul
ss
sbb
jnp
andl
enter
out
mov
inc
push
loope
std
or
ret
pusha
out
icebp
xchg
mov
xor
or
pushl
shl
and
or
mov
mov
fcomi
inc
jg
dec
xor
inc
and
icebp
mov
jmp
rol
adc
loope
adc
jo
in
rcrl
insb
lahf
add
nop
incl
jae
mov
adc
cld
pop
cld
xlat
push
mov
mov
inc
pop
aas
lahf
aas
mov
fcomps
mov
jl
xor
aaa
fildl
pop
and
test
push
and
jl
sti
add
out
jge
jne
dec
cmc
decl
loopne
dec
inc
test
mov
lock
stos
mov
inc
ret
in
lods
xchg
fs
mov
and
incl
test
pop
mov
cmc
dec
xchg
test
push
sbb
vpcmpgtw
sti
jne,pn
icebp
into
insl
lods
jns
push
jns
mov
pop
inc
xor
sub
pusha
sbb
ljmp
jl
cmp
repz
fsubrs
sbb
xor
lret
lcall
sti
ret
mov
imul
jno
into
dec
mov
cld
ljmp
sbbb
scas
inc
iret
es
push
popa
push
fildll
inc
ljmp
outsb
in
sbb
in
out
inc
aas
sub
sub
mov
mov
loope
adc
sar
push
lods
cmc
adc
pop
push
sbb
mov
aas
xchg
jle
loope
dec
sti
movnti
mov
adc
js
cmp
test
and
dec
xlat
lret
and
in
xchg
push
adc
outsb
sbb
test
sub
jle
outsl
dec
xchg
mov
call
xor
ss
nop
cmp
inc
iret
mov
xchg
jmp
mov
or
jmp
adc
cmc
xor
inc
sub
outsl
call
push
cmp
popa
cld
cld
into
sbb
into
popa
mov
imul
scas
loop
dec
cs
rol
clc
cli
jg
mov
jecxz
dec
mov
push
inc
dec
cmpsl
rcl
pop
call
sbb
lods
push
add
push
stc
popl
and
mov
inc
addr16
adc
lcall
cwtl
inc
pop
mov
jg
pushl
cmp
ds
popf
loope
popf
xor
xor
loopne
and
cmpl
xlat
jns
outsb
push
add
mov
mov
pop
test
sub
ljmp
mov
pop
dec
dec
fmuls
test
les
mov
add
imul
mov
adc
mov
add
scas
cli
inc
mov
cmp
icebp
call
nop
xor
arpl
mov
in
iret
jl
mov
push
scas
adc
jae
or
in
xchg
pop
cltd
pushl
aad
ss
incl
sub
daa
movsl
test
cmp
or
pop
mov
loop
fadds
ljmp
inc
mov
sub
imul
andps
nop
movsb
jle
das
jg
push
sub
jns
mov
add
rol
int3
fdivs
ret
push
mov
or
fcomip
or
sub
repnz
sbb
cmp
cmpsb
lea
pop
popa
jno
lcall
movsb
cld
cmp
decb
cwtl
cld
das
mov
cli
cs
stos
jg
cmp
es
xchg
sbb
insb
push
frstor
test
lock
ret
jp
xchg
adc
fbld
cld
xor
inc
dec
push
mov
mov
or
inc
adc
jle
jmp
scas
jb
pop
dec
repz
push
push
xor
int
sbb
incl
and
cmp
or
outsb
pop
xchg
out
add
xchg
sbb
fidivs
mov
fadds
inc
add
aad
cld
pop
ljmp
add
dec
sahf
push
and
mov
std
call
cmp
mov
xchg
outsb
inc
call
jg
sub
jnp
in
xor
mov
fisttps
rorb
pop
loopne
pop
lcall
adc
loope
cmpsl
fistpll
sbb
loopne
mov
cld
mov
sub
je
inc
ret
ja
sbb
cld
call
pushf
add
fisttpll
nop
mov
call
dec
loopne
pop
popa
dec
add
xlat
ds
pop
es
inc
leave
pop
loop
stos
cld
ljmp
push
dec
mov
or
xor
mov
bound
push
lret
jg
add
xchg
bound
fnstcw
adc
incl
dec
clc
xchg
mov
jg
cmpb
nop
lret
push
jmp
inc
sets
pop
mov
cmc
jp
push
or
jp
pop
jo
cmp
repz
bound
jecxz
mov
sub
insb
aad
mov
cmp
je
int3
jae
mov
mov
cmpsl
jg
lret
xchg
cmp
adc
and
xchg
mov
ljmp
test
xor
sbb
pushf
push
cmp
int3
in
mov
jmp
fdivr
pop
shrl
jns
jmp
mov
addl
std
scas
imul
sub
scas
rclb
ds
addl
mov
out
mov
ret
xchg
push
mov
mov
adc
fistpll
out
imul
jg
in
mov
mov
test
and
sbbl
mov
mov
std
std
mov
mov
sub
insl
and
cmp
stos
pusha
pushl
fwait
jb
aas
cltd
add
lds
pushl
xchg
dec
mov
xchg
pop
outsb
fstpt
mov
data16
jns
pusha
or
imul
mov
xchg
leave
in
xchg
enter
push
jnp
stos
mov
inc
stos
mov
mov
mov
rorl
ljmp
fdivr
mov
cmp
adc
jo
lods
fcoml
add
das
sbb
xchg
mov
adc
jmp
fistps
int
outsl
mov
mov
incl
cs
mov
leave
xor
or
mov
insl
inc
xor
pushf
aam
dec
lds
add
sbb
sti
fadds
lcall
out
clc
mov
ljmp
inc
lcall
imul
fildll
xchg
mov
pop
ret
stos
sbb
or
out
enter
xor
sbb
cmpsb
repnz
fs
std
incl
push
imul
or
xchg
std
cli
jae
sbb
mov
jns
lcall
scas
lods
int3
rcrb
cmpsb
dec
cmpsl
imul
repnz
fcomip
roll
cmp
lret
inc
fistpll
fistpl
push
ds
mov
lods
imul
xor
cmp
dec
sete
push
sub
xor
mov
hlt
jl
je
sbb
aam
pop
enter
mov
sub
data16
ret
cmp
xchg
mov
lcall
fsubs
cld
pop
outsb
mov
es
and
icebp
sub
cmpsb
xchg
call
loop
push
mov
aad
loopne
outsb
cmp
out
cmp
inc
insb
sub
icebp
out
clc
jae
lock
cld
mov
jg
cli
cmp
mov
sub
nop
jg
imul
push
rcr
lods
cltd
dec
je
sbb
out
stos
por
enter
cmc
aam
jno
imulb
or
adc
pushf
jecxz
jmp
into
sbb
jno
adc
pop
aam
out
pop
xor
jg
into
xchg
xlat
cmp
mov
pop
cli
add
call
test
sbbl
push
push
adc
dec
idiv
and
incl
jge
sub
mov
xorl
es
nop
mov
mov
mov
cli
mov
hlt
pop
mov
xchg
std
shll
adc
in
jecxz
insb
adc
out
cmp
xchg
out
cmp
pop
cmp
inc
cmpsb
lcall
inc
sbb
pusha
adc
sbb
cmpsb
inc
in
aam
push
xchg
lcall
adc
mov
out
cltd
out
cmpsb
xchg
and
jmp
clc
out
clc
cmpsl
cmp
cwtl
cld
jb
pop
mov
jae
add
incl
ja
in
or
sub
xchg
add
ljmp
insb
cmp
out
jg
arpl
in
adc
das
aas
sti
cs
mov
aad
push
sbb
call
stos
xchg
or
mov
adc
cmp
sbb
and
cmp
pushl
xchg
push
add
cmp
addr16
pop
pop
bound
mov
pushl
clc
pop
ds
sub
xor
jbe
add
and
xchg
sbb
mov
add
jg
incl
rol
dec
aaa
int3
mov
jmp
mov
outsl
jmp
and
mov
inc
test
adc
icebp
dec
std
mov
je
or
jl
ja
mov
jns
pushf
and
pop
mov
ret
mov
clc
mov
scas
loop
inc
jbe
inc
iret
cmc
loop
xchg
lods
pushf
outsl
sub
push
out
cli
or
mov
or
xor
in
movl
sbb
sarl
pop
jnp
inc
xchg
fs
or
popf
cmc
data16
pop
movsl
push
or
dec
ljmp
popa
call
or
lods
aam
into
movb
and
lcall
fnstenv
add
pop
sar
int3
push
rcrb
loop
cmpsb
push
mov
es
test
dec
sub
jle
jle
fmul
sub
sub
and
and
fisttpll
and
imul
daa
ret
cld
pushl
lret
test
std
add
pop
xchg
in
and
rcr
jmp
repz
mov
mov
ja
sbb
inc
pushf
ljmp
imul
mov
rclb
jg
popf
mov
loop
mov
add
adc
gs
hlt
push
xchg
mov
adc
pop
mov
data16
hlt
xor
gs
ljmp
test
cltd
xor
out
inc
test
xor
stc
mov
ljmp
fiadds
iret
pushf
fisubs
push
xor
aas
loope
cli
and
mov
mov
ret
push
repz
cs
aad
inc
or
rcrb
dec
cmp
pop
iret
and
add
mov
xchg
fcmovnu
sarb
xor
shrl
int3
xor
test
lahf
addr16
and
mov
jbe
xor
mul
insl
ja
and
call
pop
pop
fisubrs
sbb
xlat
fnstcw
jg
jb
push
packssdw
pop
lcall
jp
shll
pop
push
out
sarb
insb
into
cmp
mov
jne
dec
dec
xor
outsb
sub
cmp
or
cmp
lods
fistpll
jns
test
mov
into
outsl
les
dec
ljmp
inc
pushl
jmp
pop
and
clc
notl
jg
and
test
adc
call
call
xchg
mov
cld
xchg
sub
das
movsb
or
xlat
mov
push
jg
add
cmp
das
cld
pop
or
cmp
push
dec
adc
mov
test
xchg
and
add
imul
push
fildll
lcall
jmp
imul
xor
cld
ret
ljmp
cmp
outsl
nop
cmpsb
int
sbb
cmp
fists
pop
mov
cmc
pop
push
pusha
mov
cltd
sbb
mov
loopne
mov
and
mov
cld
push
or
scas
and
cmpl
push
sub
jg
subb
mov
mov
xor
test
sub
popf
inc
or
or
call
lahf
xor
add
xchg
pop
addr16
mov
inc
lock
pop
jmp
mov
dec
jmp
jne
iret
dec
stos
push
and
lcall
rolb
sub
sbb
mov
les
and
mov
test
test
sbb
inc
rcr
inc
mov
loopne
mov
in
sti
addr16
sub
mov
loope
push
xchg
pop
or
mov
icebp
ljmp
sbb
decl
lods
inc
adc
push
jge
or
adc
mov
cltd
add
gs
decl
sahf
pop
jge
mov
das
push
jge
add
sahf
push
push
cmp
sbb
ljmp
mov
loope
mov
pop
mov
js
js
sub
out
pop
mov
pushl
mov
adc
mov
inc
sbb
stos
dec
and
fimull
loop
jns
movsb
dec
mov
repz
call
stos
xchg
rcll
addr16
push
pop
dec
lcall
jmp
sub
add
dec
in
outsl
pop
mov
jmp
cmp
push
out
sub
add
addr16
adc
out
aaa
mov
incl
and
jecxz
pop
call
daa
mov
xor
stos
stc
cli
xor
push
test
aam
ljmp
xor
mov
or
jnp
mov
movsb
inc
inc
fst
mov
dec
mov
mov
movsl
mov
loopne
int
xchg
aam
xchg
subb
fnstcw
cmp
sar
repz
shll
mov
xchg
mov
test
mov
lock
sbb
incl
jne
imul
mov
cmp
jno
in
jl
idivl
inc
fisttpl
ss
cwtl
mov
push
lcall
mov
cs
push
int3
inc
or
xchg
xor
arpl
mov
nop
inc
xor
test
incl
sub
cwtl
dec
push
jge
jno
add
xchg
sub
sbb
incl
outsb
ss
imul
cmp
pop
cli
sbb
fwait
insl
xor
mov
jmp
mov
xor
lds
jmp
adc
into
loopne
mov
xchg
cli
in
int3
xor
call
cld
ficoms
add
inc
sub
jecxz
rcll
stos
jmp
cmp
aaa
cld
call
lods
lods
shrl
adc
mov
dec
shrb
cmpsb
fimull
jns
mov
decb
pushf
iret
int3
test
dec
mov
inc
add
sub
sbb
int3
pop
jp
inc
sub
lcall
and
jno
mov
nop
adc
pop
xchg
cltd
gs
mov
jbe
fadd
adc
inc
fs
call
lahf
aas
push
out
push
sbb
outsb
aad
dec
sbb
xlat
rcrb
add
and
and
repz
adcb
sub
xor
lcall
rcl
lods
mov
incl
lods
cltd
in
adc
rcrl
push
dec
loopne
jne
jg
decl
mov
adc
cmpsb
or
add
or
imul
imulb
incl
aad
stc
sahf
daa
sti
jno
inc
sub
popa
mov
add
pop
cltd
add
ljmp
jbe
sarl
mov
mulb
add
insb
and
jns
mov
rcl
ljmp
push
pop
xchg
xor
cld
test
push
dec
clc
inc
imul
dec
jbe
icebp
outsb
sub
pop
sub
decl
test
fcoml
push
lahf
jns
movsb
cld
dec
sub
mov
ja
inc
daa
mov
cwtl
push
add
outsl
mov
gs
xor
dec
xor
test
arpl
jns
adcl
jmp
hlt
das
and
add
lahf
xchg
outsb
call
mov
int3
pop
shll
pop
cmp
push
sbb
push
add
call
push
fdiv
xor
mov
jnp
roll
fwait
inc
stos
pop
sbb
loope
push
test
jmp
xor
adc
loopne
cmpsl
sub
xor
adc
jmp
and
insl
or
icebp
mov
lret
add
imul
pop
push
mov
popa
pop
mov
decl
inc
sbb
enter
add
dec
xchg
or
mov
nop
cmp
xor
dec
or
mov
cmp
sub
call
pop
in
xor
xor
push
loopne
ret
mov
pop
pusha
sbb
movsl
push
ret
mov
int3
inc
add
mov
fimuls
mov
mov
es
gs
fists
fdivrp
out
push
add
xor
xchg
inc
lcall
pusha
cmp
xchg
repz
clc
decl
shrb
fmuls
out
cmpsl
mov
push
dec
outsl
cli
shll
adc
dec
fsubp
mov
scas
addr16
xor
inc
cmc
in
push
cmc
fcomip
decl
cmpl
cmc
push
int3
hlt
inc
mov
lcall
lcall
cmpsb
or
pusha
inc
dec
jecxz
sbb
mov
adc
sbb
push
fadd
xlat
pop
adc
lahf
das
fidivs
pop
fstpt
and
aas
iret
pop
das
and
insb
xchg
mov
or
adc
jmp
dec
pop
mov
cmp
or
fsubs
enter
dec
shlb
in
call
mov
cmpsl
sbb
pop
lahf
or
and
pushf
fwait
sysret
inc
addr16
aas
jb
sahf
pop
mov
jg
pop
enter
add
jl
subl
cmp
inc
cwtl
mov
jg
mov
dec
adc
mov
fcomip
out
movsb
addr16
or
outsl
or
xchg
std
in
jecxz
ds
clc
sub
mov
out
ret
ja
push
sub
in
inc
jg
xchg
mov
lea
lret
cmp
call
das
cmp
ficoml
or
xor
loop
pop
and
and
pop
mov
fnstenv
mov
sbb
gs
incl
jmp
roll
rol
inc
icebp
testl
aas
pop
sbb
nop
ss
pop
add
pop
jb
in
fildll
shll
test
in
push
rolb
xor
mov
cwtl
jmp
shll
vmovdqa
clc
lds
jmp
jne
pop
push
jmp
adc
mov
jecxz
adc
fcomps
aas
push
rcrb
cltd
xor
xorl
jl
out
jno
les
push
pop
loop
ljmp
lcall
sbb
mov
and
adc
ja
sbb
jle
lcall
inc
call
cld
test
stos
out
pop
daa
add
stc
sbb
cmp
xor
test
pusha
stos
cmp
ja
movb
in
add
rcrl
orl
incl
sbb
xchg
xchg
nop
nop
mov
test
xchg
faddl
ljmp
xchg
adc
sbb
loope
mov
mov
nop
vdpps
mov
xchg
aaa
lea
sub
dec
add
mov
inc
xor
int3
push
add
cmpsb
adc
cwtl
xor
pusha
aam
imul
cli
call
aad
pop
sti
xchg
mov
fcomip
sub
add
cmpsl
loopne
mov
decl
inc
mov
fistl
dec
insl
cmpps
sbb
sbb
mov
decl
xor
subb
ss
jle
int3
xchg
popa
xchg
xchg
push
gs
loopne
inc
out
mov
jb
sbb
sub
mov
pop
call
aaa
mov
imul
out
sbb
mov
out
sbb
hlt
fsubr
sub
in
sub
mov
cmp
popl
stos
faddp
rcr
out
push
push
sbb
fwait
push
testb
fildl
cmp
aad
das
pop
lahf
addr16
lods
cli
incl
adc
movsl
insb
jecxz
out
inc
es
mov
cld
bound
cld
jmp
push
fldcw
xlat
jg
fisttpll
inc
push
or
fnsave
inc
fcompl
orl
mov
cwtl
fdivs
sub
stos
insl
jmp
jmp
test
add
cmpl
std
mov
sbbb
pushl
rolb
ljmp
xchg
insb
xlat
mov
movsbl
loopne
and
rolb
push
pushf
push
cli
mov
pop
dec
loope
stos
mov
arpl
mov
mov
dec
mov
jp
daa
jmp
gs
clc
ljmp
mov
xchg
and
mov
push
jp
add
cmp
ljmp
sar
stc
push
data16
xchg
les
ret
cwtl
rcll
ss
xchg
sub
in
pop
fisubrl
lea
mov
outsb
stc
sbbb
nop
cld
decl
xor
iret
fcompl
scas
xor
incl
ret
jb
outsl
sub
stos
push
xor
mov
jg
inc
popa
xor
push
mov
shlb
incl
push
push
add
pushf
pop
inc
inc
adc
sub
lods
in
push
jno
jecxz
insl
cld
fisttps
fs
aas
shl
stos
and
cmp
adc
sbb
popa
lds
pop
bound
out
sub
xchg
cmc
lahf
fcomip
lcall
movsl
xchg
insb
popa
sbb
dec
add
mov
or
ljmp
decb
jp
aad
pop
inc
cwtl
push
rclb
dec
shlb
ret
nop
xchg
jmp
dec
inc
fbld
call
pushf
cmpsl
mov
push
ljmp
xor
xchg
mov
inc
xor
add
pop
jp
xor
dec
dec
cmc
lds
ret
jg
nop
mov
std
add
test
into
js
movsb
mov
stos
pop
stos
inc
push
mov
hlt
sbb
mov
mov
sub
loopne
mov
xor
cmp
adc
rcrb
fisttps
fmull
mov
cmp
inc
std
cmp
lcall
test
mov
and
adc
push
cmp
mov
push
call
movl
and
ret
ljmp
es
stos
mov
adc
mov
cmp
rorb
fldl
in
xor
cmpsl
repnz
push
or
decl
sub
hlt
lcall
xor
pop
xchg
pop
js
outsb
dec
or
dec
pop
mov
mov
sbb
out
inc
stos
sub
xchg
loopne
and
mov
mov
lea
sbb
iret
jns
pop
jno
ljmp
ljmp
test
std
clc
in
and
adc
xchg
ljmp
inc
and
lcall
xor
pop
and
cmp
movsb
and
mov
mov
mov
xchg
xchg
insl
adc
or
ja
and
aam
sub
jmp
jecxz
aaa
adc
push
and
fcomps
fs
iret
push
out
ret
xchg
cmp
lret
jg
shll
cmp
inc
xchg
xchg
clc
dec
and
xchg
sahf
into
xor
jge
and
lcall
dec
push
outsl
fisttpll
push
mov
inc
popf
sub
add
sti
cld
incl
call
dec
pop
push
sub
popa
sub
mov
testl
pop
sbb
adc
int3
mov
pusha
loope
in
jns
sbb
mov
loope
push
ds
movsb
adc
pushl
cld
mov
cmp
mov
push
ret
pop
inc
mov
daa
dec
sbb
lcall
outsb
test
mov
shlb
push
das
lret
mov
sbb
add
std
fists
fsts
inc
mov
mov
mov
decl
scas
xchg
mov
dec
xor
flds
imul
lods
aaa
adc
sbb
lods
iret
stos
pushf
jnp
inc
lcall
or
jae
pop
imul
js
dec
dec
rorl
and
sbb
push
lcall
int
negl
sti
int3
jmp
cltd
cmp
insb
ss
adc
loopne
mov
cltd
xlat
inc
ljmp
sbb
sub
fwait
filds
xchg
bound
sbb
in
test
ljmp
xor
loop
es
mov
testl
inc
jbe
pop
mov
incl
pop
cli
in
popa
and
aam
mov
dec
add
sarl
repz
xor
cmc
incl
inc
mov
mov
jo
push
std
jg
add
push
stos
lods
adc
pop
jg
jno
xchg
or
aaa
inc
mov
lret
xor
loope
dec
call
mov
outsl
fildll
leave
xor
fnsave
mov
loope
inc
xchg
fidivl
ja
lea
out
stos
lcall
aaa
lock
call
mov
inc
mov
mov
scas
clc
jg
jmp
xchg
in
jns
add
jnp
sbb
cmpsb
and
jg
xchg
mov
add
xor
sub
sbb
imul
insb
mov
xchg
jg
les
insl
stos
sbb
xor
jae
and
mov
fwait
push
mov
into
xorl
dec
cli
call
cmc
scas
cmp
jbe
in
outsl
outsl
mov
cmpsb
mov
outsb
or
adc
pop
movsb
jp
paddq
jne
int
mov
pop
cmp
call
scas
sahf
inc
movsl
in
rcr
pop
and
mov
mov
inc
mov
push
std
mov
push
movsl
inc
lods
adc
jno
jge
pop
xchg
sbb
sbb
and
sbb
aad
cmc
incl
jle
lods
mov
lret
syscall
pushl
inc
push
std
rcrl
sbb
sbb
inc
addb
adc
add
out
lret
mov
jg
das
js,pt
aad
jae
push
cmp
iret
or
and
lcall
mov
scas
outsl
pop
cmp
mov
sub
movsb
outsl
out
enter
vcomisd
mov
mov
sub
cmp
clc
fucomp
call
std
xor
nop
call
mov
push
sbb
xor
mov
repnz
out
lahf
dec
pop
mov
sti
jnp
pop
pop
arpl
data16
imul
cltd
pop
and
push
adc
xchg
shlb
add
mov
mov
popw
ret
sbb
pushf
mov
and
dec
loopne
sti
imul
data16
pushl
out
int
or
xchg
int
pop
repnz
ds
mov
fcmovbe
mov
ss
pop
test
sarb
das
jns
lcall
stc
scas
mov
imul
sahf
ljmp
sub
in
es
adc
ljmp
js
fiadds
push
adc
xchg
inc
pop
mov
inc
popf
xor
arpl
mov
data16
ret
out
mov
dec
adc
pop
aaa
std
pop
or
xor
mov
dec
lret
outsl
call
into
mov
daa
jmp
xchg
and
sbb
mov
hlt
dec
ret
test
xor
daa
sub
outsl
adc
add
pop
xor
cmp
fldenv
dec
jbe
mov
in
dec
pop
test
das
cld
jg
popa
xor
ds
add
fildl
push
fidivrl
mov
daa
or
les
push
flds
loopne
adc
add
cmp
and
add
div
decl
cltd
add
sbb
lock
pop
idivb
cmp
mov
sarl
inc
ret
xchg
lods
sbb
scas
mov
cmpsl
or
xor
xchg
adc
dec
in
pop
xchg
ljmp
mov
shrb
repz
sbb
gs
shll
jecxz
mov
add
outsl
cmp
xchg
lcall
sti
mov
cmp
mov
iret
xchg
mov
cmpsb
mov
jmp
mov
in
mov
cmp
pushl
adc
pop
mov
ret
std
leave
orb
pushl
daa
or
pop
sub
mov
ret
mov
ljmp
in
cmp
nop
loope
std
jne
jae
push
sub
xor
fisttps
inc
and
dec
outsb
push
lea
testl
call
mov
pop
cmpsb
outsb
aaa
pop
lock
xchg
aas
cmp
out
sbb
cmp
ljmp
add
aaa
repz
int
mov
cs
fs
sar
loop
iret
fiadds
cmp
ds
jg
jae
jns
in
cmp
jge
inc
xchg
or
orl
push
loopne
push
add
and
ret
lds
fisttps
in
mov
pusha
insl
xchg
xchg
cmp
jecxz
inc
sbb
jle
outsl
std
incl
movsw
movsl
dec
mov
in
shrl
in
lock
or
hlt
decl
add
cmp
ret
mov
dec
inc
add
lcall
cmc
xor
inc
outsb
jns
xchg
aaa
fwait
shlb
ficomps
movsl
push
sti
lock
or
dec
lahf
test
mov
out
lahf
cmp
aaa
xchg
sarb
sbb
outsl
inc
xchg
mov
cmp
mov
push
jb
aad
imul
in
add
xchg
test
sub
in
push
je
or
into
mov
xchg
shlb
xlat
int3
sahf
push
jbe
and
pop
hlt
cld
icebp
adc
repz
stos
push
add
sub
icebp
aam
cmp
inc
into
jp
inc
fmulp
sbb
shrl
aas
ud0
das
push
mov
ds
xor
int
fwait
jne
bound
shr
std
ljmp
and
repz
xor
in
js
jmp
lods
adc
dec
scas
sarb
dec
incb
push
mov
jns
inc
pop
xchg
aaa
outsl
push
jg
cmpsl
ja
cmp
adcl
fildll
mov
jae
or
fwait
hlt
dec
mov
mov
std
pop
jo
jg
lock
mov
mov
inc
lret
sbb
ljmp
inc
test
es
outsl
popf
push
push
adc
xor
ljmp
push
mov
pushf
pop
stos
add
sub
test
icebp
decl
dec
or
into
mov
xor
inc
clc
mov
xchg
in
or
add
cwtl
dec
test
popa
in
adc
jo
jns
jmp
enter
nop
fadd
jl
add
adc
xchg
xlat
movsl
sub
std
jmp
inc
out
cmp
bound
dec
cmp
jb
std
cmp
xchg
adc
pop
jno
fdivr
ja
sbb
push
and
and
incl
jl
mov
in
stc
inc
mov
int
xchg
ljmp
cli
pushf
sbb
dec
and
or
pop
push
pop
bound
arpl
testl
jmp
mov
sbb
repz
mov
add
lods
and
pop
insl
pop
call
push
mov
call
push
aad
daa
mov
jecxz
inc
les
int
les
pop
cmp
mov
orps
mov
ja
push
jge
push
and
sub
out
mov
cmpsb
sbb
pushf
into
and
pushl
jo
fsts
js
xlat
notb
cltd
xchg
orb
sub
pushl
data16
sbb
mov
pop
fbld
std
xor
pop
call
scas
and
mov
and
fcompl
sbb
out
xor
inc
sub
or
lahf
inc
in
add
and
shl
call
stc
mov
mov
adc
xor
inc
scas
test
push
fidivs
mov
pop
add
and
jbe
jmp
call
hlt
push
adcl
push
mov
sub
or
das
mov
pop
cld
mov
dec
and
clc
decl
mov
or
repnz
sbb
filds
shll
or
cmp
pop
sub
cmc
lcall
pop
ds
jo
jmp
clc
korb
mov
addb
or
test
jns
jmp
std
inc
jne
cli
fimull
adc
int3
or
and
iret
out
in
push
and
mov
shlb
inc
adc
call
imul
test
adc
sbb
xor
jmp
arpl
inc
loop
xor
and
add
je
out
sub
sarl
loop
js
fnstenv
lds
push
or
pusha
add
jle
loop
xor
xchg
jle
push
cmpsb
mov
in
mov
scas
xchg
or
aam
cs
test
vmovups
or
xchg
xchg
in
mov
mov
stos
mov
push
out
xor
or
or
jecxz
jbe
jne
adc
jbe
cmp
ja
fcomip
jg
lret
push
dec
sarb
out
add
sub
pop
aaa
mov
push
xchg
decl
ljmp
rcrl
ljmp
and
pop
lcall
stc
addl
sbb
subb
leave
add
cld
imul
cmp
jmp
call
cmp
test
push
lcall
cmc
mov
push
mov
jg
cwtl
ljmp
push
sbb
ret
adc
fs
or
adc
sbb
inc
mov
cmp
pop
mov
jle
or
and
pusha
mov
scas
fistl
int
sbb
or
test
aaa
and
clc
mov
jmp
sbb
inc
jmp
sti
push
push
and
or
sti
xor
dec
out
hlt
xlat
fwait
or
fnstsw
in
mov
push
aaa
cltd
call
xor
in
dec
fdivs
cmp
int3
mov
fcmovbe
lock
addr16
push
mov
xlat
mov
ret
popa
xor
push
xor
pushl
in
imul
shll
shrl
mov
aas
sub
xchg
sub
mov
cmpsl
inc
cld
sub
xchg
pop
test
out
sar
jg
mov
mov
mov
adc
cli
daa
pushf
mov
mov
add
sub
je
idivb
arpl
jmp
sahf
stos
mov
adcl
adc
dec
pop
pop
insb
xchg
arpl
mov
aas
sub
xchg
pop
sbb
and
clc
jg
movsl
lahf
das
aaa
xchg
mov
jnp
test
popf
scas
out
scas
pop
stos
outsb
xchg
mov
cmp
pop
ljmp
cwtl
orb
xchg
add
in
or
in
xchg
in
add
mov
xchg
pusha
fdivs
rorl
lcall
inc
jbe
xchg
cld
dec
jl
lock
scas
or
std
std
sti
mov
ss
les
retw
ds
call
inc
popa
inc
cmpsl
iret
cli
cmpl
cltd
test
mov
xchg
inc
clc
out
clc
loopne
add
cs
fildll
loopne
adc
jmp
repnz
push
mov
fs
mov
pusha
inc
decl
jl
jb
sub
mov
add
push
mov
adc
incl
stc
xchg
xor
jb
mov
mov
and
dec
mov
mov
add
sbb
and
and
and
movsl
inc
mov
jmp
das
fwait
ss
sub
inc
ret
push
std
and
sbb
cmp
adc
mov
add
push
xchg
sub
inc
lods
cs
add
aam
or
mov
jae
mov
mov
lcall
mov
shll
test
xchg
and
std
push
lcall
sar
cmp
test
xor
mov
lcall
insl
rolb
dec
pop
lea
mov
loopne
mov
filds
aam
push
or
mov
sbb
dec
and
movsb
test
mov
jae
and
cld
fisubs
adc
pushf
push
jnp
inc
adc
push
xor
adc
xor
mov
cmp
adc
pop
jg
lds
int3
out
in
add
jb
dec
mov
sub
hlt
mov
call
jne
out
jmp
filds
xchg
and
mov
jmp
stc
xchg
mov
addr16
insb
sbb
add
mov
in
xlat
push
sarl
add
lcall
leave
and
add
nop
push
loopne
aad
mov
cwtl
ja
sub
es
fcoms
cmp
or
cmp
xchg
cli
mov
sahf
fisttpl
sub
and
std
mov
inc
lods
movsl
mov
jno
mov
testl
repnz
dec
push
rol
notb
mov
rcll
call
and
stc
into
pop
xchg
pop
cs
xchg
movsb
ljmp
out
push
ret
adc
jae
sub
imul
iret
ret
cld
jg
mov
scas
jle
sahf
sub
repz
mov
jg
xchg
jmp
jne
in
repnz
add
adc
push
mov
jno
dec
jnp
or
adc
arpl
repz
inc
push
lcall
hlt
cmp
inc
insb
jne
sbb
pop
mov
and
push
mov
jne
sub
aad
bound
mov
dec
and
call
sbbl
jg
shr
fs
repz
fistl
mov
lea
adc
jmp
push
mov
call
inc
adc
push
mov
fiadds
sub
stos
push
adc
es
fcos
cmp
imul
dec
jno
mov
mov
jg
ds
loopne
xor
nop
mov
and
lret
fs
sub
and
mov
outsb
sub
ja
push
lcall
push
ret
push
mov
sub
push
xor
cmp
jle
aaa
mov
fildll
and
rcrl
popf
pop
hlt
inc
add
jo
push
pop
dec
cmp
decl
mov
cmpsb
pop
jbe
push
addr16
pop
fadds
xchg
inc
push
fnstsw
lock
jmp
into
popa
repnz
mov
movsl
das
jns
subl
mov
loop
and
das
mov
dec
test
data16
pop
std
pushl
dec
loopne
loop
punpckldq
pushf
inc
daa
cli
dec
push
inc
cli
mov
ret
pop
mov
ljmp
repz
insb
cmp
pop
jecxz
dec
sbb
movsl
lods
cmpsl
cli
push
xchg
mov
ljmp
mov
push
mov
pop
jo
test
lods
call
xchg
jmp
dec
mov
cs
pushl
fs
cmc
sbb
or
scas
dec
es
jmp
cmp
jp
lret
pop
adc
jle
rorl
pop
push
in
mov
les
lods
add
cmp
dec
shlb
and
leave
adc
cli
mov
mov
jnp
rcr
stos
push
shr
adc
jmp
push
ljmp
xchg
pushf
int
pushl
xchg
pop
pop
imul
push
ret
dec
push
subl
sub
nop
push
divl
sbb
popf
xor
cld
sahf
test
mov
jg
jg
pop
jne
in
inc
sar
repnz
popf
push
cmp
xor
mov
out
dec
add
push
jo
fmul
in
cltd
push
je
out
jne
inc
fsubs
xor
outsl
xchg
mov
fldcw
loop
lods
adc
mov
jmp
xchg
xor
xchg
les
int3
xchg
pusha
sbb
dec
xchg
xor
xor
ljmp
or
ja
sub
and
mov
jmp
mov
mov
hlt
cli
stos
push
mov
mov
and
pop
insb
es
jnp
mov
mov
mov
testl
mov
incl
in
push
popf
ud1
dec
in
out
xchg
rcrb
mov
incl
fucomp
fwait
inc
pop
sub
dec
lock
fldln2
jne
lahf
sar
pop
jne
push
test
dec
inc
inc
push
lcall
adc
mov
pop
dec
sbbb
arpl
rorl
outsb
into
push
adc
mov
call
and
stos
repnz
mov
lcall
dec
xor
outsl
icebp
out
mov
lods
push
mov
mov
pop
call
sarb
call
push
fildl
or
ret
fisubl
out
push
push
adc
inc
pushl
xchg
ds
pop
pushl
sub
jns
and
shrl
cs
jb
fwait
call
sbb
cmp
in
push
pop
pop
mov
pop
cs
clc
dec
inc
loope
add
ljmp
cmp
add
fldl
call
bsr
outsb
add
sub
jp
xor
inc
mov
add
cwtl
or
call
std
jne
shrb
push
mov
dec
ret
sub
sarb
pop
test
clc
jmp
mov
icebp
jae
xchg
aas
std
lret
jp
mov
lcall
add
andb
jo
insb
pop
faddl
fdivrs
or
lods
lcall
mov
iret
aam
ret
cmp
dec
jle
dec
push
fistpl
dec
loope
add
push
sub
mov
ds
mov
sbb
sarb
repz
mov
cmc
mov
std
and
xchg
mov
xor
adc
mov
jb
cli
ljmp
push
cmp
mov
movsb
cmp
dec
imul
add
test
icebp
pushl
push
xor
jns
rol
pop
loopne
xchg
mov
sarb
or
pushl
shll
mov
fimuls
outsl
sub
mov
lcall
push
inc
lods
addr16
cmc
out
js
sbb
pop
loope
imul
stos
pop
dec
push
cmp
mov
xor
or
stos
sub
dec
pop
movsb
stos
stc
imul
or
push
jo
inc
jo
mov
stos
or
mov
fisubrs
mov
lret
xchg
xor
adc
cld
decl
movsl
or
sbb
das
sbb
jg
cli
outsb
lock
mov
pop
dec
addr16
jmp
jp
jp
movsl
jmp
dec
xchg
add
xchg
mov
cwtl
cli
pop
mov
ss
dec
shl
cs
push
in
jns
pop
push
dec
jg
sbb
lods
lret
ja
pusha
jbe
cmpsl
stc
jns
sub
jl
cmovne
and
cmp
aad
adc
gs
sub
pextrw
data16
add
rcr
fadd
lret
mov
sub
loope
das
arpl
decl
sahf
neg
aad
fs
inc
jecxz
mov
insb
aas
mov
jecxz
rorb
aaa
push
jae
push
stos
pop
or
lahf
outsl
or
cmc
fcomip
jmp
sarb
in
out
mov
inc
or
pop
ljmp
mov
pushl
test
sub
ljmp
push
adc
adc
leave
pop
incl
scas
loope
fcmovnb
ret
jmp
dec
mov
pop
bnd
jmp
pop
cmpsb
int
stos
dec
ja
or
sbb
xchg
shlb
sub
decl
xchg
data16
mov
nop
push
adc
or
xor
jmp
fstpt
add
or
sbb
jmp
ds
fsubs
mov
movsl
sbb
jnp
add
je
into
or
mov
mov
lcall
popa
pop
jnp
xchg
dec
jae
fidivrs
insb
inc
pop
inc
xchg
pushf
and
rol
mov
cmp
ljmp
cmpsb
popa
sbb
hlt
jns
cmp
out
cmp
in
mov
shll
and
in
xchg
jge
fstps
xchg
push
sarb
mov
les
add
cmp
jbe
lcall
das
push
pusha
lcall
int3
sarb
jg
mov
jne
arpl
test
ljmp
push
ds
cli
jno
repz
xor
popf
jo
xchg
sbb
mov
ret
pushl
cld
pop
fsubrp
lahf
mov
sub
add
xlat
pop
sbb
cmp
stc
and
je
mov
sbbb
lcall
and
aad
mov
scas
out
mov
int
mov
mov
pushl
pusha
sub
sbb
stc
arpl
mov
orb
or
out
pop
int
not
jp,pt
pusha
jecxz
xlat
push
xchg
mov
je
cwtl
pop
addr16
pop
enter
sub
jnp
lret
aas
and
outsb
inc
or
sub
pushl
lret
xchg
xlat
out
mov
and
mov
xorb
je
pushl
dec
mov
mov
push
das
mov
push
insl
lcall
fimull
inc
pop
and
pop
xadd
jmp
sar
decl
int
fucom
filds
mov
scas
repnz
sub
std
jg
nop
test
stos
adc
pusha
push
subl
incl
cld
testb
fbld
cwtl
pop
xor
repnz
adc
sbb
push
out
xchg
jl
xor
and
xor
sbb
outsl
leave
jmp
sarb
pusha
mov
push
leave
sub
mov
fs
cmp
sub
fcomps
outsb
jle
push
arpl
xchg
loop
call
push
cmp
mov
imul
add
iret
sbb
pop
mov
fsts
ljmp
dec
mov
adc
and
icebp
decl
push
dec
cmpb
adc
incl
xor
dec
push
outsl
or
es
add
mov
rcll
cltd
dec
arpl
or
incb
mov
inc
movl
dec
call
mov
jae
and
add
pop
inc
cmp
mov
fs
in
and
push
cmp
adc
call
add
rolb
mov
push
fs
push
xlat
push
pop
jns
mov
dec
stc
add
cli
pushl
daa
adc
dec
test
in
mov
decl
and
mov
sar
cs
and
clc
xor
inc
stos
outsl
mov
mov
push
imul
cmp
imul
or
jg
incl
sbb
sub
cltd
in
lods
imulb
clc
data16
push
scas
out
inc
ret
lcall
xchg
lods
fucomp
test
mov
xchg
xlat
lods
dec
int3
pop
jnp
lcall
fnstsw
andb
fnsave
inc
movsb
clc
clc
outsl
push
jmp
lods
add
add
das
inc
adc
popa
iret
ficomps
adc
mov
pop
xor
cmpsl
add
pop
test
scas
jecxz
in
pop
inc
and
inc
cli
cltd
sub
and
inc
inc
jle
es
jl
cmp
mov
popa
or
out
push
sahf
sub
std
mov
add
mov
sbb
sub
and
lret
iret
jae
loopne
push
cmp
incl
add
sbb
lret
arpl
std
push
shrb
stos
incl
orl
push
inc
ss
cli
mov
mov
jg
pop
adc
sbb
out
mov
lods
cmp
add
test
loop
pushl
loopne
push
in
movsb
sub
arpl
adc
mov
es
enter
roll
lock
adc
out
adcl
mov
adcb
ss
repnz
sub
jl
mov
sar
mov
sub
push
sub
pop
dec
negb
pushl
jle
add
inc
push
aas
in
and
mov
inc
in
jge
mov
aas
inc
fwait
sub
cmpsb
repnz
jg
sub
mov
addr16
inc
cmpsl
ret
shrb
dec
cmpsb
bound
fwait
mov
shl
scas
jg
add
je
int3
cmp
stc
ret
in
dec
andb
jecxz
mov
xor
clc
xor
inc
push
mov
cwtl
fwait
sahf
dec
cmpsb
fwait
push
push
sbb
bound
pop
decl
cmp
cmp
outsb
add
push
pop
mov
xchg
les
loop
push
bsf
lcall
sub
lock
mov
mov
lock
inc
xchg
js
mov
lcall
dec
in
popa
mov
mov
test
movsb
das
cs
or
mov
movsl
call
lcall
jmp
shll
mov
and
loopne
xchg
ljmp
push
inc
shlb
je
push
arpl
jmp
fcos
out
shl
adcb
aad
lds
in
cmc
test
rcr
arpl
mov
xchg
ljmp
or
int3
stos
jns
mov
dec
out
mov
lret
push
add
popa
daa
lods
lcall
and
jae
arpl
das
fidivs
mov
pusha
rolb
adc
pop
xor
les
mov
vmovntps
popf
ret
lcall
cmc
lret
bswap
xor
mov
popa
pushf
push
les
xchg
cmp
mov
and
sbbl
add
out
subb
in
jle
mov
fildll
call
rep
dec
jo
pop
push
lahf
push
scas
cmpsl
mov
push
mov
lcall
out
mov
fisttpl
push
inc
mov
lret
ljmp
outsl
nop
rol
jmp
gs
cmp
scas
pop
xlat
mov
cli
or
adc
addr16
leave
jne
jne
jb
add
lock
jp
stos
xorb
mov
jo
out
mov
jge
test
mov
pop
jmp
mov
ljmp
arpl
mov
pusha
add
cmp
cltd
jne
xchg
mov
decl
adc
fwait
pop
xchg
iret
lret
add
dec
cmc
mov
je
test
scas
inc
jle
movsb
or
lods
fs
xchg
pop
sub
arpl
mov
lods
mov
pop
jne
insb
loope
jmp
sub
popa
in
mov
xor
push
sub
lcall
mov
and
and
or
push
out
scas
push
xor
or
ss
std
lcall
lret
pop
es
or
pmaxub
xchg
pop
push
adc
push
call
std
push
aam
mov
daa
jno
bound
scas
pop
mov
sub
mov
pushl
rclb
inc
mov
insl
lock
jno
fisttpll
sub
jg
push
mov
xchg
add
xor
sarl
lcall
push
movsl
mov
xor
jo
cmc
xor
mov
and
sub
call
dec
inc
mov
adc
and
lahf
ret
inc
sub
mov
and
push
movsl
decl
mov
pmaxsw
jbe
call
xchg
scas
cli
outsl
xchg
or
test
inc
dec
push
jp
lods
cmp
adc
or
in
xchg
fnstsw
dec
sarl
imul
test
or
jne
pop
or
fiadds
lods
add
cmp
jmp
fidivrl
clc
popa
mov
jno
outsb
outsl
insb
imul
push
pushf
mov
jmp
dec
or
cmp
stos
jp
or
and
or
call
inc
inc
inc
cmpsl
out
arpl
imul
test
sub
adc
cmp
dec
or
inc
ffree
add
jb
fisubl
andl
lcall
mov
stos
sub
rol
xor
mov
ja
add
dec
les
out
inc
dec
in
add
mulb
sahf
mov
inc
les
mov
cli
jmp
adc
or
mov
test
ljmp
rorb
jo
jmp
dec
sbb
dec
aad
and
sub
clc
decl
je
push
daa
scas
xchg
mov
xor
rolb
dec
mov
incl
test
insb
adc
xor
and
das
int3
je
bound
pusha
pop
jg
dec
aaa
loope
push
jne
test
adc
and
lcall
sub
add
es
lcall
test
mov
and
dec
xchg
add
loope
pop
cs
jmp
ljmp
data16
call
in
adc
shrb
sub
xchg
pop
xchg
shlb
repnz
test
cli
into
dec
sbb
ljmp
ret
adc
or
into
hlt
out
add
sahf
test
test
push
mov
add
pushl
or
in
es
sbb
cs
sbb
cmp
shrl
mov
stos
mov
jb
hlt
mov
mov
movsb
cmp
call
pop
lcall
outsl
aam
cmp
jno
or
insb
mov
adc
enter
xlat
incl
jp
scas
adc
or
pop
cs
mov
ljmp
push
jmp
sbb
sbb
xor
fldl
mov
movsb
push
mov
push
ljmp
push
ffree
lret
ror
shlb
fcomps
call
mov
cmp
rcrw
cmp
stc
sub
enter
cld
ljmp
push
sub
sbbl
test
mov
scas
mov
push
clc
pop
scas
popl
add
fbld
inc
xchg
test
inc
add
jg
outsl
aas
sub
stos
push
jg
mov
leave
xchg
sbb
jmp
out
hlt
jp
inc
sub
mov
and
loopne
sbb
test
ljmp
mov
xchg
or
mov
lods
jo
fistpll
rcrl
jp
fstl
add
pop
pop
xor
bound
mov
inc
incl
jp
mov
jo
sbb
pop
fiadds
dec
shlw
daa
push
jl
xor
jecxz
das
push
push
push
out
dec
lods
gs
pop
pop
adc
push
add
xor
xor
lcall
int
cmp
mov
inc
mov
test
add
jg
call
and
jbe
xchg
iret
and
outsl
fs
mov
mov
sbb
repnz
fimuls
jns
push
lret
negb
push
jge
push
loope
arpl
loope
lea
jg,pt
movsb
jmp
cmp
pop
xor
and
mov
movsl
ss
call
popa
mov
cs
sub
pop
push
sbb
rorl
insl
arpl
jb
jo
jg
dec
fs
and
scas
mov
call
jae
mov
shrb
pushl
loope
jp
sbb
add
rcr
pop
lret
clc
aam
inc
adc
addl
mov
jns
mov
sbb
fdivp
mov
xchg
dec
cmp
test
cmp
jnp
sbb
mov
fisubs
push
jno
inc
cmp
arpl
nop
and
mov
loop
pop
lret
cmp
sbb
incl
xor
leave
ds
pop
push
and
push
adc
sbb
es
pop
mov
call
push
test
push
mov
jmp
cmp
scas
cmc
mul
jne
popa
adc
call
and
or
shll
inc
add
sub
lret
sub
fsub
xchg
stc
pop
addr16
push
ja
mov
push
xlat
aam
insb
hlt
imul
jns
jo
outsb
repz
pop
mov
call
imul
popa
or
mov
or
idiv
mov
sbb
jl
push
inc
push
sbb
push
test
cmp
data16
sub
movsl
jns
movsb
pop
decl
fisubrs
mov
cmpsb
or
jne
add
adc
mov
cmpsb
xchg
scas
mov
or
pusha
jno
cld
aas
or
data16
jmp
mov
push
call
je
lock
dec
sbb
sub
and
repnz
movsl
movsl
xor
jmp
mov
das
jle
loop
fidivs
mov
fwait
mov
jmp
pop
mov
jg
or
sti
cmpsl
jp
jmp
push
leave
xchg
mov
fimull
les
loopne
jg
sbb
insb
data16
xchg
mov
stos
add
or
lcall
dec
sub
std
jecxz
mov
loopne
daa
mov
cmp
mov
flds
mov
stos
je
test
pushl
pusha
xor
pusha
cmp
add
add
inc
test
dec
jecxz
les
iret
repz
pop
sub
push
ja
lcall
adc
punpckhwd
sti
ja
ret
lds
cltd
popa
lock
mov
jmp
xor
in
ds
or
daa
jp
ficompl
and
cmp
sub
xor
call
std
in
pop
sbbl
and
push
arpl
add
shr
ret
lcall
lock
data16
sub
xor
xor
push
int3
mov
sub
jmp
dec
jg
ja
xlat
jmp
mov
pushl
out
sti
lock
add
jg
aas
adc
inc
pop
or
xchg
int
mov
ljmp
sub
std
push
jbe
add
mov
cmpsl
lods
cltd
pushf
sahf
sti
sar
decl
add
aam
xor
jbe
add
inc
fcoms
mov
out
sbb
loopne
fists
push
out
enter
into
sbb
dec
scas
jge
aad
mov
add
cmp
add
pop
ljmp
adc
es
xchg
mov
or
decl
adc
cmp
or
lcall
lahf
sbb
ja
ret
xchg
pop
and
aas
decb
clc
pop
inc
jmp
xchg
test
jg
mov
cmp
ja
cld
lcall
and
sbb
pop
lods
insb
loope
jg,pn
nop
cmp
pop
mov
movsl
sub
xchg
mov
sar
ffreep
into
mov
out
push
ficoms
jne
jns
mov
ror
sbb
hlt
mov
lock
sub
sub
popa
movsl
lcall
mov
aas
js
movsb
pop
sub
sub
aam
decl
andb
std
inc
ss
mov
es
adc
pusha
adc
lods
insl
jnp
loopne
decl
xor
fstps
inc
test
pop
call
adc
xlat
fistps
std
ds
xor
and
neg
push
lock
les
lcall
lods
sbb
inc
sbb
mov
popl
and
push
rcrl
ljmp
iret
xor
lods
aaa
lock
mov
lods
pop
adc
ljmp
es
ret
jns
flds
rcl
inc
sahf
js
lcall
jno
test
rcr
loop
clc
nop
cmp
inc
mov
movsl
clc
out
test
cli
mov
call
sahf
int3
mov
cmp
lcall
dec
xor
out
movd
xor
sub
jb
test
roll
add
and
ss
push
mov
pushl
sti
push
ficomps
outsl
fnstsw
sub
mov
lret
xor
xor
pop
adc
pop
jmp
insl
adc
rcll
push
jmp
out
push
pop
mov
mov
cmpsb
ss
mov
fbstp
sbb
dec
imul
sbb
pop
xchg
clc
in
xchg
pop
push
daa
pop
fcoms
cmpsl
dec
loopne
pushl
add
push
faddl
insb
mov
mov
leave
out
test
sti
imul
add
icebp
xchg
clc
cmpsl
pop
nop
mov
int
or
mov
lcall
arpl
incb
adc
sub
mov
test
and
push
adc
ljmp
xor
or
mov
add
push
xor
int3
lret
decl
jle
sbb
cmp
xchg
lods
outsb
cmp
xchg
xor
ja
idiv
lcall
xor
jno
cmp
out
mov
nop
push
mov
ljmp
mov
lcall
jno
mov
or
jge
call
jns
outsl
jl
mov
nop
lock
outsl
insl
sarl
mov
xlat
xchg
jg
fbld
jle
flds
outsb
in
push
push
and
xchg
pop
enter
adc
sub
mov
cmp
or
and
xchg
sar
or
push
fnstsw
inc
push
pushf
incl
dec
add
pop
lret
sbb
nopl
stc
push
mov
pushl
loopne
mov
out
iret
cmp
sub
insb
addb
adc
movsl
out
jns
cmpsb
inc
mov
aaa
and
repnz
ja
jge
ret
xchg
mov
in
imul
push
mov
mov
mov
imul
or
gs
push
add
mov
insl
call
lcall
jmp
mov
fldt
and
sub
mov
sbbl
int
incl
inc
add
jl
pop
xchg
cwtl
cli
adc
mov
fldl
mov
jg
stc
lret
in
insl
dec
xor
fcomp
sbb
test
jg
xchg
sbb
push
lret
pop
shrb
cmpsl
pop
adc
dec
das
ljmp
mov
xchg
in
jae
adc
mov
addr16
negl
pusha
mov
pop
xor
xor
mov
js
mov
sbb
and
jg
mov
or
fs
fnstsw
inc
sti
xchg
jle
jg
sub
lret
mov
sub
pop
icebp
ljmp
pop
je
imul
je
repz
mov
mov
jp
fnsave
xchg
gs
das
shl
mov
jmp
jl
push
dec
mov
push
cs
xchg
or
pop
pop
cmc
add
popa
call
jge
mov
xor
xchg
rcr
lods
aas
cmc
insb
push
mov
jns
push
or
jmp
xchg
shll
mov
stc
je
cmpsb
jb
sub
lcall
out
xchg
shll
or
cmp
mov
mov
out
add
insb
or
rorl
or
sti
dec
push
loope
aaa
add
mov
pop
and
xchg
jg
pushl
arpl
jl
fisttpll
inc
mov
mov
mov
jmp
xor
aam
mov
xchg
fsubr
inc
xor
mov
xor
sbbb
sbb
and
push
sub
mov
repz
jg
decl
dec
fmulp
pop
test
movsb
les
push
cmp
ret
cld
pushl
lret
cmp
pop
jge
push
mov
pop
shl
pop
iret
aas
or
repnz
mov
jo
aad
js
xchg
int3
mov
lods
popf
fcompl
test
fs
jle
cmp
stos
test
aam
outsb
and
mov
sahf
or
xchg
push
fmull
or
jnp
xor
and
sahf
jnp
aas
adc
pop
dec
mov
inc
lock
mov
xor
and
cwtl
clc
mov
mov
inc
clc
lds
ds
out
stos
cli
incl
bound
adc
adc
cmpsb
jne
push
or
out
dec
enter
and
out
sub
lock
sbb
and
ret
xchg
mov
out
lahf
ljmp
rcrb
scas
xor
test
fwait
cld
shrb
dec
ret
push
mov
imul
ljmp
outsb
xor
push
inc
enter
xchg
mov
leave
lcall
push
fistl
popf
jnp
ja
notl
cmpsb
stos
ja
jge
dec
push
push
and
jns
mov
call
jne
mov
call
sahf
dec
inc
filds
outsl
dec
lahf
mov
je
stos
movsl
sahf
push
pop
jnp
sbb
xchg
xchg
mov
call
inc
daa
sub
dec
loop
fnstsw
sbb
std
in
aas
inc
repnz
mov
icebp
scas
pop
repz
icebp
lods
lods
jo
or
shlb
movsl
imul
stos
mov
add
xchg
xchg
sub
out
pop
cmpsl
ret
rorb
nop
sti
incl
sbb
fwait
xchg
xor
sbb
sub
cmpsb
inc
mov
mov
call
nop
xorb
cmp
movsb
movsb
fcomi
pop
and
mov
jns
jb
fwait
mov
lret
out
icebp
add
popf
push
in
pop
pop
inc
cmpsl
inc
xchg
cwtl
lods
cwtl
fbstp
js
mov
out
ljmp
dec
or
idivl
inc
inc
outsb
sub
aad
mov
or
jecxz
ljmp
adc
inc
fidivrl
sub
test
xchg
cmp
mov
mov
rcl
inc
iret
lock
pop
xchg
jns
in
add
mov
and
push
cmp
sub
mov
mov
ret
gs
sub
xchg
sar
add
sbb
cltd
cs
sbb
ret
lret
loopne
jecxz
or
sbb
jne
or
repz
std
fbld
xchg
push
mov
sbb
add
incl
aas
sub
adc
cmp
mov
cmp
pushl
dec
fisubs
xchg
xchg
mov
gs
jmp
lds
icebp
mov
and
scas
int
in
adc
out
jo
inc
insl
pop
out
lret
dec
mov
scas
shrb
fisttps
cld
mov
pop
mov
push
cmp
dec
into
adc
pop
inc
shll
push
clc
call
bound
mov
or
cmpsb
cmp
or
push
hlt
mov
and
pushl
subl
sub
aas
popf
and
fimuls
jecxz
jg
lock
jno
sti
sbb
dec
popa
mov
testb
dec
jae
xlat
jbe
add
jbe
cli
pop
jmp
push
jecxz
push
repnz
jg
sbb
jge
imul
mov
outsb
cmpsb
inc
cwtl
dec
lret
pop
push
lods
fstpt
clc
enter
push
jmp
pop
test
ljmp
mov
ljmp
mov
roll
mov
ljmp
pop
fiaddl
nop
jp
fadd
adc
or
dec
sbb
push
or
sbbl
dec
fldt
imul
jmp
insl
aam
lcall
sub
sbb
repnz
aas
mov
inc
mov
jg
lret
cmp
repnz
in
pushf
sahf
push
jecxz
scas
xchg
bound
jmp
pushl
pop
mov
out
adc
dec
fdivs
xor
lcall
or
pop
lcall
or
lods
es
xor
std
inc
mov
ds
mov
bound
repz
aaa
xchg
jg
sub
xor
xchg
or
test
mov
ret
movsb
outsl
inc
xchg
push
and
mov
jg
lea
push
test
lods
pusha
pop
bound
decl
ss
inc
adc
cmp
sub
dec
sub
shr
decl
cld
adc
inc
std
cld
pop
pop
test
pop
call
nop
repz
add
jno
xor
aam
inc
daa
lds
adc
nop
bound
cmpsb
mov
dec
in
daa
inc
testl
mov
imul
cmpl
paddd
jmp
xchg
lcall
sar
or
ret
or
lahf
add
rcll
xchg
sub
adc
adc
jo
mov
fildll
push
pushl
call
mov
gs
dec
or
xchg
mov
sub
mov
ds
fcomip
in
les
inc
ljmp
fs
loope
jae
test
sub
incl
sti
leave
add
dec
stos
add
scas
loop
insl
in
pop
cmc
add
inc
sbb
mov
pushl
lcall
push
loop
jnp
sti
lea
jbe
outsb
and
cmp
add
lcall
xlat
adc
je
mov
arpl
shrb
imul
or
notb
add
test
stos
dec
loopne
push
adc
outsl
xchg
cmp
lods
ja
xchg
mov
pushf
lds
mov
pushl
mov
stc
ja
push
fucomp
fstl
jnp
cli
and
bound
jmp
mov
cmp
int3
push
mov
adc
add
mov
ja
add
xor
dec
int3
jl
push
pushf
and
incl
into
or
loop
lea
jnp
gs
decl
leave
call
cmove
scas
mov
mov
rol
mov
and
ljmp
es
xor
mov
aas
fdivrs
inc
mov
jle
call
cmpsb
mov
out
sbb
pop
add
jge
push
cmpsb
mov
xchg
inc
push
pop
xor
nop
test
xor
inc
pop
icebp
sar
pop
std
cmc
and
inc
pop
lods
xlat
js
dec
aas
dec
xor
cli
pushl
add
inc
fdivrs
mov
aam
add
call
mov
mov
push
in
push
aam
movsl
fstl
pop
inc
mov
sub
jl
jns
mov
insb
int3
sbb
je
out
orb
loope
pop
fcomps
jecxz
bound
pushl
xchg
imul
lcall
sub
jg
push
sti
or
mov
sahf
dec
cmp
test
cmp
pop
hlt
clc
cltd
ret
push
mov
xchg
jnp
popa
dec
dec
stos
enter
push
mov
sub
sar
call
cmp
xchg
sub
push
cltd
cmc
jge
pop
out
scas
fs
lcall
mov
add
cmpsl
sbb
add
push
dec
divl
lahf
andb
lods
stc
jg
movsb
std
into
push
fcoml
stc
mov
adc
cmp
sub
jmp
or
subb
outsb
sar
ljmp
xchg
rcr
inc
fisubrl
xchg
icebp
adc
lds
jmp
das
push
sbb
pop
rcrb
or
stc
mov
push
jmp
jmp
aam
addl
push
mov
sbb
mov
call
dec
dec
and
adc
neg
int
mov
stos
xchg
lea
jp
aas
mov
dec
jne
pop
pop
iret
mov
aam
ss
jmp
jmp
lret
jbe
jg
cld
into
adc
cwtl
orl
out
into
and
loop
shlb
xorl
out
clc
and
jnp
into
push
mov
addr16
ret
inc
dec
dec
cltd
cmpsb
arpl
jo
pop
ljmp
je
jg
lods
mov
sahf
bswap
pop
test
mov
shlb
test
mov
dec
fstps
cld
and
inc
inc
cld
xchg
stc
insl
aas
push
repnz
loope
out
cmp
mov
xor
jo
dec
jp
out
pop
and
xchg
cmp
mov
xor
repz
and
mov
xchg
cltd
lahf
mov
popf
int
xchg
insl
pop
dec
inc
xchg
cmc
or
xchg
cmc
sbb
lock
and
call
mov
mov
xorb
cmpb
inc
jno
decl
mov
out
lods
jb
fst
bound
aad
jmp
sti
pop
pop
xchg
sti
jno
cld
mov
cmp
mov
data16
xchg
add
ret
jnp
sbb
iret
int
jns
add
xor
loop
jg
test
loopw
mov
mov
inc
cmp
incl
je
lahf
lcall
xor
xchg
or
pop
sar
mov
jp
xchg
adc
sbb
mov
incl
popa
ja
lds
adc
das
pop
sti
ss
sub
cmp
jno
addl
cld
in
scas
int
fldenv
inc
adc
pop
xchg
fisttps
dec
ljmp
jmp
outsl
cmp
mov
inc
lea
and
lods
mov
jbe
fsubrl
int
int3
test
fidivrs
xchg
aas
add
push
in
xchg
sahf
lcall
je
test
ja
fisubs
pushl
shlb
aas
sub
dec
cmp
push
mov
clc
aaa
xchg
cli
jnp
push
insb
rcr
das
sar
and
cmp
clc
lcall
push
mov
or
adc
fistps
add
xchg
add
call
jb
cmp
fistpll
add
ja
push
cmc
js
adc
in
ds
loope
jmp
xor
insl
in
decl
xchg
cltd
adc
pop
icebp
mov
fldt
hlt
jle
ja
and
je
outsb
out
ret
and
ljmp
fisubl
and
cltd
lret
ret
mov
inc
mov
aaa
push
fadds
icebp
and
pushl
cli
push
mov
sub
push
cmpsb
add
stos
decl
call
fxam
mov
jl
or
push
leave
push
push
sbb
sub
add
movsb
mov
cmp
out
lcall
jbe
fisubl
pop
xchg
mov
jne
nop
push
flds
pushf
jns
shrb
push
cmp
dec
test
push
and
out
sub
aad
incl
shlb
rcll
test
dec
lahf
and
in
lcall
pop
popf
cli
pop
xlat
jns
adc
cmpl
xlat
xchg
cli
ljmp
call
andl
mov
dec
or
sti
aaa
cli
add
out
aas
pop
cmpsl
push
pop
jecxz
rol
push
or
hlt
out
outsb
fildll
sbb
pusha
lods
fcoms
mov
xchg
ljmp
stos
xchg
mov
insl
jmp
mov
lret
int
leave
push
fstpl
or
xor
out
in
mov
mov
lret
and
jecxz
decl
push
jno
ja
push
mov
and
loope
mov
lahf
mov
mov
shrb
push
push
jp
idiv
ljmp
add
dec
test
jge
add
int3
or
dec
inc
fwait
jnp
pop
fidivrl
std
enter
call
xor
lock
xor
jmp
stos
fisttps
jmp
xchg
data16
cmpsl
fs
sbb
jl
mov
dec
sub
test
aas
call
jmp
aam
loopne
mov
faddl
and
push
sub
and
adc
add
lock
sbb
pop
sahf
mov
adc
lock
pop
shr
pop
mov
shlb
xor
cwtl
cmp
mov
out
ffreep
mov
add
pop
ljmp
call
mov
out
ss
push
and
std
call
jl
rclb
cltd
mov
jmp
or
f2xm1
decb
jg
sbb
inc
lret
dec
jl
clc
pushl
jecxz
decb
lcall
push
or
or
pushl
mov
pop
clc
push
sub
jo
das
add
adc
mov
dec
scas
enter
push
cmc
fdivl
cmp
stos
sbb
fstpt
in
adc
jg
gs
xchg
cmc
incb
sub
leave
sahf
xchg
int
shll
and
sbb
mov
mov
popf
pop
mov
mov
pop
pop
cmc
lcall
stos
movsl
or
jmp
mov
ret
mov
mov
dec
pusha
mov
jecxz
jb
call
or
push
lds
and
cmpsl
adc
sbb
xchg
test
int
ret
ljmp
cli
ljmp
pop
leave
pop
xlat
insl
mov
cmpsl
push
add
ja
sub
test
lock
incl
pop
fwait
test
push
push
out
jecxz
sub
subb
incl
lods
cmp
xchg
fiaddl
lock
outsl
add
cmp
daa
inc
mov
gs
lcall
or
cmpsb
and
call
divps
call
jae
notb
push
lods
repnz
in
jge
jg
movsb
mov
fsub
mov
cmp
rol
sub
ja
clc
in
sub
push
je
pop
inc
in
test
pushl
adc
aam
jge
push
in
cmp
leave
xor
cmp
mov
sub
jmp
fistps
push
fwait
in
inc
xchg
push
push
xorb
adc
inc
push
mov
lret
add
enter
js
nop
cmp
pop
loopne
fstl
cmpsb
push
xchg
xchg
or
imul
pop
sbb
into
cld
push
iret
insb
cld
gs
dec
out
jno
mov
popa
pop
ret
mov
jecxz
mov
dec
in
mov
sbb
push
call
mov
loop
movsb
pop
gs
sar
test
test
add
cmp
or
lcall
push
push
ret
stc
loop
xor
clc
repz
cmpb
mov
roll
pop
sbb
lods
pop
push
lcall
mov
movsb
push
int
cltd
xor
mov
fcompl
pop
out
cwtl
das
mov
inc
mov
or
iret
fstpl
dec
mov
push
push
fstl
in
or
ret
stc
mov
aam
jae
mov
pop
loopne
xor
xchg
mov
xchg
mov
adc
cmp
stc
mov
xlat
jbe
sbb
cmc
repz
outsb
xchg
roll
sub
pop
shl
cmpsl
outsl
rcrl
mov
stc
fisubl
or
mov
jle
pop
pushf
jnp
pop
lds
adc
push
cli
pop
cmp
mov
scas
sbb
mov
lds
pop
or
out
cmp
mov
inc
dec
cli
inc
or
pop
in
jp
push
push
lock
shl
push
test
decb
scas
push
mov
adc
push
in
xor
cmc
mov
pushf
or
jne
je
movsb
cmp
add
mov
mov
pushl
and
adc
ss
dec
mov
movsl
dec
sub
jo
in
pop
mov
jb
push
ljmp
hlt
js
pop
sub
cwtl
sub
faddl
mov
xor
stos
int3
icebp
mov
ljmp
sub
xor
stos
xor
sbb
sti
push
loope
aaa
jae
dec
sbb
call
xchg
lea
sti
mov
call
mov
cmpsb
mov
into
jns
sub
dec
mov
lcall
decb
mov
and
pop
pop
jbe
or
aaa
bound
mov
jmp
cmpsl
pop
fistps
inc
xchg
add
jb
leave
or
cmp
or
idiv
ja
les
fmull
cmp
inc
adc
mov
jmp
xchg
pop
enter
add
mov
mov
pop
or
bswap
xchg
js
psubq
mov
jl
xor
sub
lret
sub
movswl
das
cmp
stc
psubq
dec
js
jae
mov
cltd
adc
lcall
xchg
lods
jl
sub
or
mov
mov
mov
mov
daa
js
xor
outsl
cmp
jge
dec
decl
stos
es
xor
push
cmpsb
mov
cmpl
out
sbb
lcall
push
adc
cmp
ss
push
sahf
test
mov
inc
mov
sub
jb
ret
ds
adc
add
fmull
lea
nop
in
das
in
mov
dec
mov
and
ljmp
mov
shrb
mov
das
je
mov
sbb
inc
aad
incl
or
lods
popl
xchg
lahf
mov
shlb
clc
jg
and
jge
sbb
inc
jae
jge
pop
xor
ret
incl
adcb
mov
jl
xchg
lds
cmp
pop
movsl
call
mov
lcall
pop
loop
xchg
call
outsb
jnp
movsl
pushf
imul
stc
arpl
in
sub
call
scas
push
mov
mov
add
loope
dec
sbb
inc
push
inc
mov
or
incl
jbe
xor
lcall
mov
adc
push
addl
ljmp
push
sub
and
xor
shl
pop
jns
iret
mov
clc
shl
incl
outsl
mov
cwtl
mov
adc
clc
aas
sbb
stos
or
cmp
cmpsb
ret
lcall
nop
adc
andb
push
mov
subl
xor
addr16
xchg
jb
frstor
lret
scas
aas
insb
mov
imul
push
mov
sub
loopne
fildl
out
push
xacquire
mov
mov
mov
push
dec
sbb
jg
adc
lcall
push
faddp
icebp
cmp
lret
add
roll
outsl
mov
pushl
sti
xchg
mov
inc
jecxz
inc
scas
jg
mov
pop
jp
ret
mov
rcll
push
push
int
fstps
decl
ss
cld
jne
cmp
add
fwait
jp
sar
push
jb
outsl
pushf
pop
adc
loope
aas
adc
inc
rcl
xchg
outsl
int3
push
push
outsl
xchg
daa
cmovs
ja
xchg
not
pop
adc
pop
outsl
lcall
pop
mov
dec
out
jo
xor
std
adc
add
mov
inc
das
and
pushl
xchg
mov
add
std
jmp
bound
aas
sbb
jo
not
add
push
inc
or
xor
mov
sbb
mov
adcb
xchg
pop
xchg
aam
xor
inc
xor
cli
sbb
and
test
xchg
in
cmp
fsts
pop
sub
in
ret
add
xchg
add
ljmp
inc
lods
cmpb
cs
inc
jne
lds
fidivs
addb
cmp
push
mov
pop
and
push
bnd
outsl
loopne
cmp
push
pop
aam
mov
fstp
sbbb
jg
dec
stc
iret
cld
adc
jg
add
push
jecxz
xchg
nop
mov
xchg
incl
icebp
pop
jb
mov
xchg
es
sar
shl
xchg
xchg
mov
call
push
bound
and
subb
and
cmpl
addr16
inc
mov
mov
sub
pushf
mov
or
imul
adc
outsl
dec
mov
pop
test
rcr
nop
stc
inc
pushl
fs
int3
lea
push
mov
loope
jne
test
pop
push
sub
jle
out
pop
pop
addb
int
lret
aaa
out
or
inc
add
xchg
adc
movsb
lahf
and
rcl
lcall
jl
lret
roll
jo
jnp
lcall
mov
push
lcallw
rolb
cmp
and
out
ljmp
jg
sub
scas
inc
xor
adc
sbb
pop
cld
mov
xchg
call
add
pop
mov
shl
popa
mov
mov
loop
jecxz
loope
mov
mov
pop
pushl
inc
pop
int
add
rcrb
ficoml
pop
rol
daa
cld
dec
out
inc
mov
xchg
ljmp
fimuls
out
out
scas
shlb
jmp
jb
movsb
and
int3
xor
lods
adc
push
push
or
sahf
and
pop
sub
adc
push
stos
cmpsl
mov
push
xor
and
sub
xchg
fcoml
inc
sahf
xchg
jb
push
cld
dec
in
dec
int
pushl
cld
and
cmpsl
and
ficoms
mov
pop
xor
ja
lea
decl
mov
cmp
inc
shl
shlb
or
xor
push
xor
jge
inc
ljmp
jne
lret
pop
mov
lcall
jge
fsubrs
pop
and
jae
jae
pushf
dec
aam
notb
and
jg
icebp
xor
repz
lea
push
subb
insb
out
xor
sbb
inc
incl
jb
sbb
lods
divl
cmp
cmp
repnz
sbb
stc
lahf
xchg
adc
filds
in
mov
mov
call
mov
pop
rorb
jno
xor
movsb
pop
push
push
pushl
enter
and
pop
inc
inc
fs
fisttpl
and
adc
lahf
cmp
outsl
cmpsb
or
je
test
lods
lret
jge
jae
pop
jns
mov
fbld
cmpsl
rcr
cmp
fisttps
xchg
xchg
jle
fimull
into
add
pushl
mov
push
and
ss
jecxz
pushl
xor
pop
and
xchg
daa
test
push
cmp
cs
xor
pop
enter
jmp
xchg
in
mov
lods
xchg
fcomps
jbe
sti
push
ljmp
or
repnz
jle
enter
mov
inc
mov
push
dec
cmpb
ljmp
bound
int
lret
jae
lcall
mov
nop
cmp
sbb
pop
sub
cmpl
movsb
test
incl
mov
or
xor
jmp
call
shlb
arpl
jmp
fadds
mov
testb
xchg
dec
and
iret
out
aas
mov
cld
fnsave
jnp
in
sbb
pop
sub
jnp
ljmp
add
mov
lret
cld
int
aaa
jbe
out
mov
in
sub
je
mov
popa
push
das
incl
dec
das
jns
xchg
test
mov
lahf
imul
loop
js
sub
push
enter
and
sub
sub
cwtl
xchg
xchg
mov
ret
ljmp
icebp
testb
lds
pop
push
jb
test
shll
bound
gs
cmp
push
decl
repz
adc
push
in
jmp
inc
stos
inc
fprem1
test
int
sahf
js
mov
lcall
bsr
sub
sti
xor
jg
adc
sbb
decl
negl
mov
out
xchg
xchg
call
nop
add
xor
cli
cltd
mov
ljmp
xchg
std
rcll
pop
jle
pop
jb
add
dec
fmul
or
fwait
fistps
dec
rorb
xchg
ljmp
lcall
cmpsl
and
gs
aam
sbb
jge
fnstcw
or
xor
mov
sahf
mov
mov
decl
mov
lds
out
idivl
decl
xchg
push
adc
or
sbb
push
dec
jo
adc
dec
call
loopne
xlat
add
mov
jne
pop
sub
jb
adcb
cmpsl
fcomip
push
jl,pt
dec
jo
and
hlt
jl
xor
pop
arpl
test
lcall
in
out
jl
fstps
into
arpl
in
or
jmp
movsb
cli
scas
repnz
pushl
and
jmp
adc
les
lret
into
jl
test
add
sbb
xchg
jg
outsl
cli
inc
mov
mov
je
mov
cmp
xlat
xor
movsl
mov
sbb
lods
fwait
adc
fucomi
out
shr
dec
xor
push
jae
xchg
jno
cmc
cli
lcall
fdivr
int
xor
mov
inc
lcall
dec
jecxz
test
fldt
sbbb
adc
call
sbb
ficoml
inc
inc
mov
sahf
mov
test
push
inc
ret
movsl
pushl
inc
mov
mov
incl
in
sti
int3
sbb
pushl
imul
adc
jns
mov
xchg
fstpl
lods
lock
mov
ljmp
dec
adc
inc
fdiv
jge
call
fstpl
push
adc
pop
xchg
movntq
out
cs
mov
faddl
xchg
and
mov
enter
sub
call
es
mov
leave
adc
call
mov
pop
add
test
imul
jg
fsubp
adc
xor
aad
push
data16
mov
fst
push
xchg
out
cli
jg
pop
add
jl
add
mov
pop
fsubrs
and
incl
out
jns
dec
jne
adc
mov
jecxz
xor
ss
cltd
cs
cli
or
mov
in
sub
adc
jg
out
adc
loopne
sub
jb
dec
sub
or
lcall
xor
mov
ja
cwtl
addl
decl
xor
hlt
aas
mov
mov
and
std
xchg
imulb
movsb
ljmp
repz
push
add
mov
movsl
hlt
in
pop
insl
std
cmpb
mov
jg
imul
ja
pop
mov
pop
pushf
pop
jns
mov
call
and
mov
pusha
lods
inc
dec
mov
lret
push
repnz
sub
repnz
mov
insl
fcomi
adc
imul
into
cmp
sub
mov
cmp
aaa
mov
jp
adc
jns
jbe
ss
push
mov
ret
sbb
xchg
xchg
cmp
and
and
push
cmp
mov
in
jg
jg
es
inc
add
pop
ss
inc
inc
js
cmp
inc
loopne
adc
int
xchg
sub
add
cli
pop
push
ja
ljmp
cmp
cmp
fcoml
scas
test
insl
in
jmp
mov
ljmp
fisubl
jmp
mov
sbb
inc
sbb
imull
mov
rorb
mov
jmp
adc
sub
sbb
mov
decl
or
mov
orb
or
mov
adc
in
scas
inc
push
mov
cmp
add
mov
das
push
adc
test
call
xchg
jns
out
movsl
mov
adc
mov
dec
cmp
dec
mov
adc
push
push
imul
cli
out
in
outsb
push
repnz
pop
jmp
and
psraw
mov
shlb
pop
bound
mov
mov
push
sti
sti
gs
pop
sbb
test
call
je
xor
inc
enter
xchg
ficomps
and
add
stos
out
mov
iret
sub
rcrl
aas
mov
hlt
jg
pusha
ja
test
enter
and
mov
call
flds
mov
lods
out
das
sbb
ljmp
push
int
loopne
and
cli
pop
lret
mov
adc
jno
adc
out
mov
adc
add
inc
ljmp
cmc
mov
sub
cmp
cmp
dec
shl
nop
xchg
mov
xlat
mov
or
inc
sbb
and
push
fcoms
ja
push
mov
lcall
ljmp
sub
test
xchg
jno
push
into
popa
cwtl
jmp
xchg
jmp
or
and
lret
mov
jno
cmp
scas
fisubs
adc
mov
sbb
rclb
adc
scas
ret
and
add
scas
loop
jo
push
add
aaa
adc
adc
test
jmp
fs
cli
and
scas
cmp
cwtl
sbb
sub
std
decl
sbb
pop
mov
setno
jecxz
add
mov
and
sub
mov
nop
aad
push
jg
stos
pop
repnz
and
fistl
mov
lahf
inc
xchg
pop
outsl
loopne
aaa
test
in
out
jl
jl
sbb
and
outsb
xor
or
jno
mov
out
pop
jb
xchg
ret
mov
test
sub
sar
ljmp
or
mov
xchg
shl
jo
jne
inc
out
sbb
mov
push
sub
lock
call
lcall
sub
aam
mov
push
iret
xchg
xchg
or
add
and
jge
leave
push
xchg
adc
aaa
jbe
push
loope
jg
jmp
inc
out
pop
sub
push
neg
dec
xor
or
sub
fildl
mov
sti
les
mov
pop
xchg
jae
outsl
and
cmp
mov
clc
imul
xchg
adc
fucomp
int3
scas
adcb
sarl
cmp
insb
pushl
int
shlb
fwait
mov
outsb
mov
xor
add
pop
adc
or
jne
mov
incl
int
pop
xchg
push
or
pusha
jno
pop
in
inc
jno
sbb
dec
cli
in
cmp
notb
shlb
ss
inc
test
jb
int
sub
inc
inc
out
add
xchg
pop
xor
sti
btr
jo
shl
push
outsl
out
sub
sub
sbb
mov
js
ja
aaa
xchg
cli
incl
leave
repnz
lds
in
ds
jno
decl
or
push
leave
mov
dec
pop
xchg
sub
mov
pop
or
xor
mov
pop
xchg
int3
enter
icebp
call
jb
or
push
and
mov
jb
js
mov
xchg
mov
cmp
pop
dec
mov
or
and
rcrb
clc
ljmp
pushl
dec
mov
and
push
insl
data16
js
lods
and
clc
ret
push
cmp
push
je
repz
pop
fdiv
test
insl
aas
xchg
std
mov
cmp
std
xchg
push
stc
pop
inc
adc
push
insb
pop
cwtl
mov
fwait
sub
dec
mov
lcall
pop
pop
andl
rorl
sub
test
inc
incl
add
fsubrp
push
gs
mov
inc
sub
out
dec
das
sti
popf
mov
ss
jbe
lock
incl
mov
cwtl
cmp
push
add
mov
mov
xchg
dec
cmp
pop
sub
enter
imul
inc
lock
arpl
xchg
lea
test
add
jg
retw
inc
sbb
sub
cs
dec
and
icebp
cwtl
inc
xchg
or
jl
push
jae
mov
lahf
push
add
lahf
dec
call
add
sbb
xor
decl
rorb
sbbb
cmp
cld
not
cmp
rcrl
scas
xchg
decl
inc
push
or
push
mov
mov
jg
lret
pop
in
rcll
add
leave
enter
mov
fdivrp
mov
std
js
pop
test
cmc
pushl
inc
pop
cltd
mov
pop
inc
ret
xchg
inc
insb
and
adc
mov
jns
push
inc
imul
pusha
outsl
or
lock
jmp
int3
pushf
cmp
test
xor
gs
mov
cs
xchg
xchg
mov
jge
test
dec
xchg
ss
mov
into
xchg
mov
push
adc
and
imul
and
cmpsl
pusha
js
dec
push
repnz
xchg
add
adc
mov
orl
enter
push
imul
hlt
jno
insb
pop
add
and
jmp
fs
js
cltd
out
fstps
sub
pusha
jge
or
mov
lcall
adc
loope
fildll
movsb
bound
comiss
into
adc
push
outsl
cltd
xchg
sub
in
jae
mov
repnz
xchg
cmp
sub
pop
xchg
jnp
and
sahf
dec
dec
shll
or
into
fmulp
bound
inc
dec
mov
or
jb
mov
jns
repz
incl
dec
fldcw
adc
xchg
ljmp
push
mov
dec
mov
jle
incl
cld
inc
inc
mov
adc
xchg
sahf
cltd
cld
addr16
jg
sub
or
mov
mov
sbb
sbb
fisttpll
das
or
lock
stc
gs
pop
xor
cli
sbb
cli
jnp
std
push
mov
xchg
mov
sub
add
pop
fsubp
dec
jns
divl
stos
or
mov
xchg
add
add
and
sub
pushl
out
out
fdivs
daa
push
cmp
sbb
cld
mov
ficompl
loopne
gs
out
mov
pop
ficoms
decl
addr16
rcrl
clc
hlt
cmpsb
movsb
loop
push
addr16
jbe
aas
cmp
mov
aam
mov
inc
pop
sub
sbb
pop
xchg
imul
inc
xchg
data16
insl
jge
push
lds
clc
mov
jl
cmpb
push
mov
xchg
orb
inc
in
and
mov
jmp
pop
dec
push
mov
cmpsl
aaa
iret
out
movsl
mov
mov
xchg
mov
cmpsl
inc
popa
fsts
out
lods
xor
daa
call
jb
test
jg
push
cmp
out
daa
scas
pop
pop
push
sub
insb
fldl
js
mov
and
xor
sar
mov
cs
push
rcll
push
in
pushl
cltd
in
ljmpw
mov
mov
pop
lcall
mov
dec
mov
jg
jle
mov
dec
dec
filds
fbld
adc
mov
fsubrs
fs
cltd
push
decl
cwtl
mov
sbb
test
inc
jae
dec
and
clc
dec
or
stc
fwait
pushf
mov
cli
push
xor
cmpsb
popa
clc
dec
push
nop
cli
mov
cmp
cmc
dec
cli
jmp
push
xchg
lea
dec
loop
imul
xchg
push
mov
lcall
outsl
in
shr
ljmp
je
repnz
jg
stos
aaa
mov
pushl
mov
lods
jp
int
imul
sub
jb
into
and
aaa
std
pop
dec
inc
cmp
push
mov
sub
std
lahf
xor
es
sub
andl
jge
fadd
mov
pop
cmpsl
lea
inc
xor
pop
ss
or
dec
mov
insb
ja
mov
insb
je
out
ret
xor
icebp
cmp
adc
xor
dec
sbb
or
cltd
adc
loope
mov
sahf
xor
adc
bound
xchg
in
das
test
jae
out
sub
in
hlt
push
popf
and
call
ret
jmp
aam
xor
jle
inc
fidivrs
pop
xorl
stos
mov
add
sbb
scas
test
fcomip
cmp
dec
mov
and
js
fistpl
inc
in
push
inc
fimuls
nop
call
add
je
push
mov
sub
dec
mov
pop
in
pop
inc
in
adc
popa
fdivr
ljmp
ret
sar
icebp
xor
pushf
add
cwtl
jp
aas
pop
sar
mov
hlt
push
jae
and
enter
ljmp
xchg
mov
mov
xor
xor
xor
mov
push
push
hlt
xor
jns
push
sub
lcall
cmp
adc
bound
xor
jp
leave
pop
jbe
lcall
push
or
repz
popa
add
rol
imul
scas
pusha
movsl
movsb
call
jnp
and
bound
mov
push
decl
pop
lods
mov
add
fdivl
imul
scas
clc
fildl
jo
add
mov
pusha
add
pop
push
mov
jle
les
sbb
out
mov
cmp
icebp
stc
adc
mov
out
mov
in
ret
cmpl
jns
mov
rclb
inc
negb
mov
iret
or
pushf
lcall
dec
jb
sub
movsb
repnz
cmp
inc
movsl
int3
mov
decl
ja
fimuls
movsl
pop
pop
inc
pop
cltd
inc
and
notl
hlt
aad
clc
push
cli
xchg
test
rcrl
ror
mov
ljmp
lret
jl
pop
cwtl
out
cli
mov
mov
out
jl
and
repnz
daa
movsb
mov
pop
dec
fbstp
adc
sbb
stos
inc
mov
rol
mov
gs
lcall
adc
push
mov
andb
fwait
lcall
mov
push
insl
das
stos
mov
adc
sar
out
insb
lea
call
insb
aas
jns
mov
repz
sub
mov
add
pop
loopne
sbb
shll
cmp
jp
fdivs
mov
in
out
push
xlat
imul
fs
adc
lock
add
adc
jmp
ficompl
mov
push
dec
fucomp
inc
jmp
movsl
stos
mov
dec
dec
mov
in
leave
sub
loop
inc
fninit
cmp
mov
movsl
dec
sub
popf
jne
inc
jecxz
or
lods
jno
test
decl
lcall
test
xor
popf
les
fiaddl
dec
test
roll
in
push
ret
inc
mov
inc
fisubrl
dec
pop
icebp
sub
or
push
push
push
inc
movsl
xchg
sbb
sub
mov
jbe
call
incl
nop
xor
sti
sahf
push
adc
bound
inc
mov
imulb
or
xor
ljmp
icebp
pop
cli
cmp
dec
jmp
and
js
addb
js
outsb
xlat
cmp
js
and
xchg
je
roll
mov
lcall
jb
mov
and
push
cmc
jl
scas
scas
lods
sub
icebp
icebp
sub
xor
daa
push
or
xchg
jmp
inc
scas
into
outsl
clc
ljmp
or
or
pop
xchg
lret
pusha
cmp
insb
and
add
pop
fistpl
aad
fisubrs
pop
insl
add
fistpl
imul
out
xchg
cld
jmp
cwtl
cmpsl
sub
movhps
cltd
dec
loopne
insb
pop
jne
jmp
outsb
pop
lahf
add
cmp
sbb
xor
test
cmp
dec
imul
out
ja
fiadds
dec
and
xbegin
fwait
movsl
nop
dec
decb
test
push
popa
call
ret
pop
dec
mov
mov
ljmp
andb
sbb
movsb
mov
jmp
out
cwtl
xchg
dec
call
test
sarb
out
push
insb
es
daa
lea
ljmp
jnp
into
dec
stos
inc
cmc
cmp
ljmp
jo
mov
add
jb
mov
sar
xchg
movsb
flds
push
movsb
jp
fdivrp
ljmp
jl
mov
movsl
rcrb
cmp
xor
and
lock
cwtl
psubb
ja
insb
lods
mov
cmp
stos
sbb
mov
adc
mov
lods
adc
mov
sbb
call
dec
in
mov
jecxz
add
sti
mov
cmc
cmp
icebp
cltd
mov
push
push
mov
int
roll
ficomps
idivb
xor
ljmp
sub
xchg
stc
pop
sbb
mov
pop
lcall
ja
stos
sbb
add
mov
stos
decl
lcall
jo
rcrb
mov
std
sub
sti
jge
dec
sbb
pop
sti
je
cltd
fildll
pop
fdivrs
xchg
pop
sbbl
ja
fcompl
lods
xor
fsubs
test
or
jmp
mov
inc
in
pop
jbe
ret
fwait
xchg
mov
push
sbb
push
and
mov
fwait
sub
mov
lock
jg
mov
push
add
lcall
hlt
fists
dec
scas
adc
cld
adc
pop
addr16
fdivs
std
cmpb
das
gs
pop
mov
jmp
add
in
sti
dec
push
loop
cmpxchg
dec
sub
push
ret
fldenv
mov
dec
es
pop
inc
insl
stos
roll
ja
rorb
loope
or
cs
ljmp
mov
in
cwtl
in
xor
jp
add
adc
enter
jne
in
cmp
int
cmp
xor
lcall
out
mov
hlt
pop
rorl
or
pushl
jb
sub
pop
cmp
cmp
nop
movsl
jbe
call
mov
sub
adc
out
dec
fidivl
mov
inc
sub
fiadds
jmp
xchg
hlt
cmpsl
mov
jmp
cmp
lcall
and
jmp
ret
jp
imul
pushl
ret
mov
or
push
loopne
clc
jns
les
fstps
add
adc
mov
stc
mov
test
mov
test
lods
jmp
xchg
cmp
and
jmp
lds
inc
mov
jle
ja
xorb
sub
pushl
mov
adc
int
xor
arpl
pop
fimull
les
cmovg
lea
int
xor
cmpsb
xchg
pop
jo
jmp
cmp
or
int3
lock
pop
adc
jl
inc
mov
inc
loope
and
mov
data16
or
push
xchg
mov
sub
aas
add
stos
fnstsw
jmp
gs
xchg
je
push
mov
fstps
mov
in
jl
sbbb
pop
cli
pop
fisubrs
vcvtps2dq
negl
ljmp
mov
mov
jecxz
aad
jecxz
mov
mov
outsl
lret
lea
push
mov
test
das
in
mov
mov
mov
or
jecxz
popf
sub
xor
dec
inc
ss
incl
mov
jge
or
cld
mov
jne
inc
add
push
insb
popf
pop
adc
incl
pusha
mov
pop
test
mov
pushf
shlb
es
lods
scas
dec
add
jl
pop
in
ds
filds
sbb
push
mov
mull
in
mov
xor
scas
pushf
ret
cwtl
add
call
mov
std
sub
inc
mov
mov
and
cmp
dec
xor
adc
hlt
jns
rolb
js
cli
xchg
in
cmc
decl
rcr
dec
leave
dec
or
add
outsl
nop
inc
test
incb
sbb
fs
jg
es
mov
jle
lret
lret
dec
jle
jns
mov
dec
mov
mov
call
in
rcll
pushl
jno
pop
adc
jle
mov
or
xchg
xchg
dec
mov
mov
hlt
rorb
into
xchg
adc
jno
arpl
xchg
mov
jg
cmp
int
sbb
mov
jb
es
leave
leave
xor
fcoms
hlt
clc
rorb
mov
cld
push
sbb
cmp
ljmp
fcmovnb
dec
movsl
popf
test
dec
pushl
daa
cltd
je
sub
pop
aam
mov
inc
or
repnz
outsb
pop
fwait
aam
lcall
inc
adc
mov
fcoml
sbb
cmp
push
loop
push
pushl
lret
loopne
sbb
out
out
aaa
minps
add
xchg
sbb
push
jp
movsl
ljmp
lret
dec
sbb
mov
ja
outsl
pusha
dec
xchg
pop
sti
xchg
sti
jne
xlat
cwtl
insb
scas
icebp
int3
or
lret
out
push
rolb
inc
in
test
push
outsl
fnstsw
mov
lret
mov
mov
loop
roll
ds
nop
xorl
pop
adc
rclb
and
ja
ljmp
sbb
movsb
sbb
mov
pop
mov
xchg
movsb
popf
mov
mov
jmp
lcall
in
leave
lret
fiaddl
or
adc
and
and
enter
push
jg
fmuls
mov
cmpb
jns
mov
ret
jecxz
pop
xchg
fcompl
shrl
push
movsb
addb
mov
cmpsl
mov
xor
les
push
decl
xor
mov
test
sub
xor
sbb
nop
out
dec
pop
or
jmp
fldcw
enter
outsl
jl
pop
dec
stc
xorb
cmp
mov
push
add
ret
or
dec
adc
aaa
stos
jp
add
js
or
jmp
in
sub
stc
mov
aad
lahf
int
outsl
adcl
push
call
sarb
add
ja
pop
mov
or
inc
mov
test
cld
pushl
shll
xchg
xor
inc
jnp
xor
addb
or
mov
mov
lcall
decl
into
out
sbb
pop
mov
movsb
pop
fcompl
sub
sub
js
lods
pop
in
dec
shll
sub
lcall
in
push
and
dec
cmpb
mov
pusha
aad
mov
push
mov
sar
ljmp
cmovo
adc
inc
push
xchg
call
dec
adc
mov
dec
add
or
not
push
cmp
or
mov
pop
or
add
pop
xor
and
cmp
mov
fiadds
sar
jmp
inc
lcall
sub
out
aam
call
shll
outsb
sbb
inc
mov
and
jmp
xor
xor
lret
cmpsb
call
mov
sub
stc
ss
in
std
pop
sub
mov
lret
mov
call
xlat
jmp
mov
fs
hlt
inc
mov
call
push
xchg
cmpl
mov
out
pop
lods
sbb
push
dec
scas
fs
lcall
cld
and
es
aas
ret
push
adc
fidivrs
pop
stos
in
jecxz
and
lcall
or
pop
nop
xor
pusha
pop
test
lods
or
push
ljmp
jbe
aam
out
adc
and
loope
adc
xlat
pop
outsl
pop
dec
lcall
std
cmp
test
pop
nop
mov
jle
sbb
mov
clc
inc
push
arpl
sbb
sti
adc
mov
pushl
fimuls
movb
dec
clc
repz
sbb
inc
imul
inc
fs
movsl
inc
clc
dec
jmp
dec
pop
or
push
iret
pop
aaa
int
in
fmul
imul
sub
into
int3
dec
rorl
notb
mov
aad
xchg
mov
in
nop
das
sub
mull
pop
js
cltd
sarl
out
mov
dec
pusha
push
pop
inc
inc
mov
push
cwtl
cmp
mov
push
out
xor
decl
rorb
push
pop
pop
mov
jbe
adc
dec
fsubrs
adc
mov
jb
push
add
pusha
bound
data16
repnz
sbb
fists
pushl
nop
mov
sbb
jp
adc
jmp
inc
popa
sbb
aam
shr
xor
adc
shrb
idivb
stc
lock
mov
je
jno
decl
pop
lahf
mov
or
shrl
lea
pop
cld
pop
nop
xor
popa
xchg
mov
inc
inc
sbb
call
mov
sub
icebp
add
cmp
jmp
call
dec
stos
push
xchg
sbb
xchg
fistps
jecxz
lcall
into
rolb
pop
xlat
mov
lahf
rcrl
fsubl
add
push
sbb
test
rcrl
push
xchg
cli
aaa
dec
les
rcrb
mov
add
popa
call
ret
cli
roll
xchg
and
jp
cmp
xor
call
into
fbld
test
jae,pt
jnp
mov
out
and
das
mov
push
inc
and
jmp
mov
xor
pop
fmuls
out
hlt
pop
pop
mov
inc
dec
push
fbld
icebp
jp
inc
int3
pop
mov
jp
sub
push
dec
jb
xor
mov
fs
int3
aam
mov
ljmp
jl
jb
test
rcll
test
cwtl
xchg
leave
call
or
bound
ljmp
cmp
jp
dec
or
and
and
in
sbb
shll
jle
mov
decl
or
jge
in
or
jg
adc
jmp
gs
dec
lret
pop
or
aam
push
mov
fists
enter
movsl
lods
icebp
lahf
push
scas
aam
call
pushl
pop
mov
icebp
and
lock
cmp
jge
mov
jmp
movsl
or
and
cmpsb
jge
jmp
xchg
adc
sbb
xor
and
dec
fistpl
cmc
scas
mov
xchg
data16
jno
jb
dec
jp
cmc
jae
or
cwtl
adcb
aad
ss
into
push
jbe
fldl
dec
scas
mov
stc
add
add
jae
frstor
cmp
pop
mov
negb
xchg
and
fstps
data16
cmp
test
fcmovb
movsl
xchg
fldcw
icebp
jnp
xchg
andl
inc
rol
dec
jno
and
lcall
push
cmp
adc
icebp
enter
inc
call
jl
lods
ret
inc
push
sbb
sbb
jecxz
insl
sarb
and
ljmp
aas
cmp
and
ret
jmp
push
movl
jecxz
cli
mov
clc
out
or
pop
into
and
leave
xor
movsl
add
add
pop
adc
mov
xor
popf
stc
addr16
xchg
and
je
inc
jg
leave
mov
sbb
fadd
mov
inc
push
pop
jno
divb
add
jmp
mov
out
sahf
fiaddl
jo
xchg
mov
jne
fwait
inc
iret
roll
or
jmp
mov
sahf
dec
scas
xor
pop
push
iret
test
pop
jns
mov
scas
clc
decl
xor
fstl
shl
lds
sbb
lcall
popf
es
fdivl
mov
bnd
insb
mov
cmp
jge
jg
sub
incl
mov
ss
dec
out
pop
loopne
jp
push
and
out
lea
mov
mov
prefetch
aas
lcall
cmp
mov
jp
insb
fistl
movsb
add
stos
sub
lcall
dec
xchg
jecxz
enter
scas
pop
or
sub
pop
sub
fsubs
xchg
sbb
mov
cmp
and
rcll
jbe
dec
xchg
insb
std
ljmp
xchg
pop
mov
popf
ret
jl
popf
xchg
repnz
push
mov
iret
call
pop
pushl
mov
pop
push
xchg
ja
lcall
data16
and
mov
call
dec
das
push
fstpt
and
lock
int3
mov
aad
call
cld
mov
int3
test
jne
mov
xchg
pop
lahf
call
out
xor
add
sub
rcrb
dec
xor
andl
ljmp
or
fldt
ficoml
adc
pop
leave
jbe
sub
and
mov
jae
cltd
adc
les
sbb
adc
mov
lods
xor
push
nop
pushf
call
in
mov
stos
mov
mov
xchg
add
popf
mov
sub
jle
jl
negb
addr16
iret
or
adc
jmp
pop
orb
xor
cmp
jle
cltd
jl
sub
xchg
stc
data16
stc
pop
add
call
adc
repz
sbb
rorl
jecxz
and
or
jg
mov
aas
loop
out
cmp
ljmp
mov
aaa
dec
mov
loopne
cmp
adc
push
add
fbld
inc
xchg
pop
repnz
mov
adc
mov
nop
jae
mov
mov
call
fiaddl
cld
or
into
insl
or
pushf
dec
out
jmp
aas
jg
sub
sbb
cld
push
xor
mov
sbb
push
lcall
cmp
cwtl
imul
cmp
je
jl
push
mov
incl
jl
dec
dec
lret
rcll
xchg
xor
pop
add
inc
hlt
mov
stos
lcall
mov
push
xchg
mov
inc
lcall
mov
icebp
inc
xor
mov
in
sti
push
push
jg
fisttps
or
scas
call
lahf
cmp
loopne
in
mov
call
inc
jb
dec
sbb
inc
add
add
pop
sub
decl
mov
fldcw
mov
ljmp
mov
mov
pop
and
lea
test
lret
fiadds
push
dec
incl
cmp
sub
mov
loop
faddl
mov
adc
jle
mov
mov
sub
data16
popf
inc
aad
test
mov
mov
call
cmp
insb
jbe
fsubl
xchg
cs
mov
test
in
inc
xchg
jge
inc
outsb
mov
ljmp
xor
popf
sbb
dec
xchg
cltd
stc
ret
ljmp
or
push
leave
loopne
out
or
mov
jnp
mov
hlt
scas
dec
jp
inc
adc
ret
mov
jge
orb
cmp
aas
std
mov
and
imul
sbb
mov
cmpsl
cmpsb
mov
sbb
pop
pushf
daa
mov
daa
lock
jg
inc
mov
dec
int3
hlt
imul
cmp
mov
inc
in
hlt
dec
jmp
jnp
xor
es
xchg
out
dec
sub
adc
pusha
pop
mov
out
inc
je
pop
cmp
loope
nop
rolb
out
xor
push
jne
insb
push
mov
cmp
jns
call
sub
cld
repz
mov
bnd
out
inc
inc
or
les
sti
xchg
out
sbb
mov
ljmp
mov
out
and
mov
test
add
and
adc
and
cmpsb
sbb
loope
testb
adc
in
ja
in
test
ja
aas
arpl
pushl
xchg
addr16
les
jl
mov
pop
cmpl
ja
call
jge
movsb
mov
shl
aam
das
pminub
push
sti
dec
insb
and
call
inc
cld
adc
inc
push
in
jp
bound
sub
call
mov
addr16
adc
xchg
add
push
adc
fisubrs
jb
mov
call
cmc
out
test
out
cmc
adc
sbbb
addr16
cmp
lods
jmp
jo
mov
xchg
or
aaa
pop
cmp
cmp
jge
es
or
jg
jmp
jno
fistpll
xor
dec
add
call
xchg
cmc
pop
les
xor
outsb
pop
jg
inc
repnz
cmpsl
pop
push
mov
adc
jmp
jbe
adc
cmp
fnsave
jl
xchg
mov
mov
pop
and
pop
jg
cmp
cmpb
or
xchg
mov
cwtl
jno
scas
mov
clc
mov
dec
adc
inc
addb
lock
shrb
inc
adc
xchg
and
das
pushl
cmp
loop
divb
pusha
daa
adc
and
loopne
add
and
mov
jne
pushl
std
push
pop
movsb
mov
mov
ret
aam
add
mov
jmp
lahf
push
pop
data16
call
ds
insl
popf
ja
jecxz
shr
scas
jmp
inc
push
and
imul
jns
mov
mov
js
int
cli
xchg
jecxz
sbb
xorl
aam
pop
hlt
cmp
mov
icebp
call
in
and
stos
xchg
int3
movsb
jb
inc
mov
sub
push
pop
out
inc
fs
aas
dec
sub
mov
shll
pop
shrb
mov
out
call
mov
adc
mov
lods
filds
fnstsw
outsl
mov
mov
enter
fs
mov
fcomip
dec
xor
jb
fiaddl
test
mov
sub
add
jmp
call
testl
sub
pop
repz
mov
sti
pop
pop
jmp
dec
sub
cmp
mov
jne
scas
adc
or
fs
mov
std
push
ljmp
loopne
sahf
sbb
imul
stos
fisubrs
stc
dec
rorl
aaa
or
inc
lods
mov
jge
or
push
add
jl
push
sbb
pushl
sbb
adc
popf
inc
inc
out
movsb
roll
cmp
inc
jae
push
dec
push
aas
addr16
xor
and
ja
in
in
cmc
aad
decl
sbb
cmp
sbb
cmc
cmp
pop
lock
cli
js
or
inc
or
mov
ljmp
sbb
jno
fistpll
xor
test
push
or
mov
cmp
xor
das
adc
jle
jo
dec
pop
loop
cld
jmp
inc
or
decl
dec
or
jp
mov
ljmp
lcall
cli
dec
mov
inc
jge
pop
adc
sahf
mov
jmp
bound
mov
jmp
jnp
test
in
je
push
push
lock
ret
sbb
add
xor
push
sti
jle
clc
rolb
jne
jne
fmul
mov
pushl
lock
enter
mov
and
mov
cld
jmp
jmp
lods
bound
jle
sub
push
sbb
fisubs
inc
jmp
sub
and
cs
lods
push
sbb
adc
or
into
sbb
jo
inc
insb
or
cmp
dec
fidivs
lock
shrb
std
mov
push
sub
push
stc
push
jns
int
mov
decl
inc
clc
nop
push
sbb
jo
loope
dec
and
fdiv
inc
and
cmpsl
inc
insb
pop
decl
xor
pop
pop
inc
pop
xor
ja
jns
push
movsb
or
fneni(8087
and
jmp
cmp
out
add
fadds
xchg
dec
fiadds
inc
cltd
cwtl
or
cmpsb
popf
data16
mov
add
incl
fs
or
faddp
xor
fidivs
jg
fdivrl
cmpsb
aaa
xchg
push
jb
jmp
jg
cmp
icebp
pushf
les
sbb
adc
loope
cli
push
push
sub
dec
mov
hlt
pushl
jae
pop
or
cmp
pop
dec
cmc
jmp
dec
inc
and
rcrb
inc
decl
es
inc
mov
idivb
dec
dec
cmp
jmp
pushl
fwait
xchg
xchg
inc
hlt
cmp
and
test
hlt
pop
fcomip
jmp
leave
cmpb
mov
insb
push
sahf
incl
mov
sar
call
push
or
fdiv
movsl
cltd
cs
leave
imul
sbb
pop
push
inc
mov
ja
mov
lods
and
xor
xchg
into
dec
das
push
adc
incl
cmp
call
test
jge
ds
jo
mov
roll
sub
out
inc
dec
decl
xor
push
jmp
xchg
lods
push
mov
ljmp
aad
cmpsb
lret
ret
nop
xchg
dec
mov
iret
pop
jmp
jg
mov
outsb
or
lods
lcall
jge
jp
enter
xchg
xchg
adc
int3
imul
stc
or
sti
xor
jmp
icebp
xchg
ja
push
sbb
in
cltd
jo
xchg
push
push
add
notb
dec
cmpsb
fdivr
fldenv
gs
adcb
aas
lock
insl
adc
incl
mulb
test
imul
xchg
movsb
and
cwtl
hlt
ljmp
pusha
cmpsb
push
lret
xchg
jnp
pusha
imul
mov
je
mov
cmp
ljmp
pop
sub
or
push
icebp
insl
or
xchg
cmp
rcll
fbld
ljmp
xchg
jge
lock
cmp
in
decl
push
push
pop
addr16
sub
bound
add
and
sar
subl
sub
cmp
loope
rol
aaa
lea
sbb
repnz
jl
imul
inc
jge
fsubrs
les
xor
dec
xor
sbb
repnz
insb
fiaddl
lea
pop
out
in
mov
pop
aam
incl
clc
aas
and
and
jge
arpl
dec
incl
cld
mov
loope
cmpsl
out
sub
mov
dec
test
sbb
push
enter
jno
xchg
xchg
mov
fs
xchg
repz
jmp
lcall
jno
cmc
inc
and
into
xchg
iret
int
pop
movsl
jno
orb
pop
add
call
mov
jo
nop
cmp
mov
test
lcall
fs
add
or
and
jmp
in
adc
lock
jmp
xchg
adc
test
movsb
push
mov
cwtl
lcall
call
pop
cmpsb
push
inc
xor
xor
and
je
iret
loop
add
loopne
imul
or
lods
das
sti
jle
pop
addb
jmp
add
pushl
xor
fs
mov
js
push
add
ret
je
das
lahf
iret
insl
lret
rorl
inc
inc
ss
mov
jge
or
cmp
jle
mov
inc
test
repnz
aam
dec
sbb
lcall
shlb
pop
mov
jnp
cmp
addb
jge
jne
cli
cmp
pushl
pop
xor
mov
insl
sti
jnp
loopne
mov
in
cmp
push
call
js
dec
mov
loopne
imul
xor
xor
fstl
adc
jmp
xchg
push
fidivs
lods
pop
jno
mov
and
cmc
mov
xor
jo
sbb
xchg
enter
pop
xchg
lds
in
es
incl
mov
movsb
shll
sbb
cmp
xchg
jge
fcompl
mov
xorl
add
test
sbb
sub
insl
lea
push
in
mov
add
mov
add
mov
repz
test
lcall
filds
mov
lret
push
sbbl
dec
xor
bswap
fsubl
push
icebp
repnz
iret
lcall
pop
lods
jo
rcr
mov
sub
sahf
ja
js
mov
int
nop
mov
mov
fnstcw
cld
jl
out
out
orb
lcall
incb
daa
mov
cltd
insl
adc
jae
stos
dec
mov
inc
into
dec
adc
pushl
imul
sbb
pushf
dec
pop
call
incl
inc
sub
mov
inc
pusha
loopne
pop
mov
sbb
and
les
mov
xor
ret
int
dec
scas
mov
scas
mov
mov
sub
in
mov
mov
ja
adc
or
sub
pop
mov
and
jmp
lcall
add
mov
je
and
push
fs
cli
xchg
inc
pop
or
out
in
lock
decl
inc
push
sub
lcall
pop
lock
pop
hlt
lcall
mov
sti
sbb
std
mov
out
mov
es
leave
nop
js
out
rorl
cmp
stos
mov
lea
je
mov
je
scas
addr16
out
mov
inc
jo
mov
and
cmp
ljmp
movsb
dec
dec
cmp
cmp
cli
xchg
iret
or
je
jne
mov
cmp
decl
jmp
sbb
mov
notl
js
mov
sbb
pusha
jle
pop
cmc
push
pop
sti
lcall
movsb
sbb
aam
push
fucomi
pushf
out
cmp
lcall
add
adc
adc
outsl
ljmp
xchg
in
test
lahf
dec
repz
sub
mov
xchg
mov
mov
les
int
mov
jl
mov
subb
xchg
mov
loop
mov
insb
pusha
test
jne
jno
sbb
ljmp
xchg
mov
es
mov
subl
ss
mov
jns
xlat
push
dec
xor
jae
scas
jge
dec
jge
shl
inc
das
xchg
cwtl
je
ljmp
mov
sbb
jecxz
add
and
in
push
sub
pushl
ud0
gs
inc
notb
xlat
mov
cmp
js
cmp
jg
inc
cld
cmpsl
mov
cmp
sbb
stc
daa
ljmp
aad
pushf
nop
out
jbe
stc
and
mov
ja
xor
cmpsb
incl
cmp
jmp
xor
push
or
dec
jo
adc
sub
mov
mov
into
aas
cli
jmp
call
jnp
int
clc
inc
popa
and
icebp
pop
inc
sbb
push
or
cli
jmp
adc
out
push
mov
mov
into
push
or
push
arpl
repnz
call
pop
ds
incl
loopne
outsl
pop
out
arpl
mov
or
sahf
mov
sub
jge
stos
mov
lea
mov
inc
hlt
stos
and
fwait
cmc
shl
xchg
popf
pop
cmc
jg
ds
adc
loopne
pop
sbb
xlat
xchg
decl
aas
or
ljmp
jl
int
push
cmp
jno
pop
cmp
jae
dec
roll
cmp
adc
xchg
push
cmp
mov
jge
pushl
push
sahf
repz
fucomp
lahf
in
add
and
loope
mov
les
pushf
sbb
jg
jmp
pushf
adc
icebp
popf
dec
jle
sbb
repnz
push
jge
dec
mov
orb
call
cmp
nop
xor
adc
mov
flds
cmp
lods
shlb
outsl
loopne
aad
call
subl
cmc
mov
mov
add
sub
cmp
insl
aas
jg
dec
sbb
shr
xchg
mov
inc
test
push
imul
lods
xchg
add
and
jmp
or
dec
sbb
stos
movsl
popf
je
inc
cmpsl
jnp
and
mov
test
into
push
filds
mov
inc
inc
xchg
aad
nop
cmpsl
push
inc
sbb
incl
mov
pop
mov
and
in
loop
cmp
dec
out
push
or
lea
push
pop
pushf
cmpsb
jne
jge
jae
cmp
repz
mov
loope
jmp
and
push
push
sbb
pop
and
clc
int3
cmp
dec
inc
push
push
clc
add
lretw
sahf
xor
xchg
mov
jmp
je
loopne
push
mov
mov
fiadds
push
popf
and
mov
decl
mov
mov
stos
or
cmpsb
push
cli
sbb
repz
add
mov
imul
fidivl
aas
incl
das
adc
inc
test
into
sub
jae
movsl
sbb
jl
lock
out
pop
cmpsb
cmp
adc
pop
js
and
sbb
jp
add
pusha
les
outsb
mov
lcall
sub
or
mov
jle
in
jecxz
decl
or
pop
testl
movsl
outsl
and
das
ds
xchg
ljmp
sbbl
xorb
cs
in
inc
in
lods
loop
mov
jmp
cld
jge
aaa
pusha
push
rolb
shrl
jl
enter
sub
inc
dec
pushl
nop
add
pop
pop
loop
add
jb
in
out
loope
or
out
sbb
inc
sub
cmp
dec
popf
gs
push
push
dec
insb
mov
stos
inc
clc
adc
cmp
sti
insl
ret
mov
lcall
pop
in
lock
and
push
testl
jo
ljmp
movsb
fwait
sahf
sbb
push
out
jo
lcall
jne,pn
adcb
lret
subl
fdivrl
shll
push
push
push
das
cli
and
sbb
shr
lret
call
das
clc
jg
pop
sti
cmp
or
fbld
pop
into
dec
cmp
jbe
mov
mov
popf
in
cmpl
sbb
adc
mov
cmp
loopne
mov
pop
aaa
vsqrtps
pop
fisubrs
inc
lcall
jns
fldl2t
shl
pop
ja
jnp
jg
mov
lret
push
test
sub
dec
sub
out
mov
jecxz
jmp
push
dec
mov
fs
xor
decl
mov
leave
xor
inc
lods
adc
cmpl
es
mov
aas
or
stos
in
icebp
lcall
xor
int3
in
pop
dec
sub
xor
push
imul
xchg
sub
or
imul
addr16
call
jbe
jge
and
jge
pop
mov
repz
outsl
pop
jecxz
cmp
adc
cmc
xchg
das
rorl
mov
push
jg
cmc
cwtl
or
push
ljmp
jne
sbb
movsb
aaa
and
out
clc
mov
and
sbbl
icebp
je
lahf
divb
inc
test
sar
call
shrl
xor
call
jge
lcall
pop
test
sbb
incl
push
pop
inc
mov
ficompl
push
xor
rorb
xor
mov
sub
cmp
test
rcll
or
das
js
add
popf
stc
inc
popf
pushf
mov
push
push
cld
and
and
adc
mov
sbb
lcall
fs
es
lret
jge
and
xchg
add
scas
cli
out
jg
jp
and
pop
lahf
sub
mov
cmp
leave
jmp
cld
pop
call
cmp
insb
inc
repz
or
mov
xchg
lock
lea
inc
shl
inc
cli
das
in
pop
cmp
lcall
gs
jecxz
sar
xor
xor
ret
daa
scas
xchg
call
ret
mov
loop
or
sti
xlat
jae
and
jmp
cmp
out
leave
dec
or
xor
xchg
pushf
insb
popa
sbb
pop
pop
decl
or
cmc
cltd
cs
in
inc
xor
scas
push
cmp
lock
inc
inc
push
pop
int
push
ljmp
mov
sub
sarl
jge
push
loopne
jns
fdivp
outsl
and
aam
stos
bound
xorl
xor
sub
test
mov
lock
rcr
adc
jnp
js
ret
dec
shrl
imul
movsl
and
pusha
inc
enter
adcb
sub
mov
or
pusha
hlt
mov
cld
int
lcall
push
push
sbb
mov
pop
xchg
dec
mov
mov
incl
cld
mov
addr16
push
jp
and
jnp,pn
pop
jle
sahf
jne
lret
add
scas
push
xchg
cwtl
pop
inc
js
cli
ss
jbe
mov
xchg
xchg
jl
xor
aas
insl
bound
sbb
jns
inc
in
dec
rcr
mov
fwait
or
shll
adc
call
fistpll
pop
mov
mov
std
xlat
bound
cmp
daa
repz
jb
ljmp
dec
repnz
add
rcrl
in
pop
imul
call
adc
sbb
adc
lcall
pop
sahf
xchg
cli
push
fsubr
ljmp
clc
sbb
fsts
inc
jg
movsl
iret
xor
fists
jle
int
mov
clc
decl
aaa
add
rcrl
sbb
xor
ja
repnz
push
mov
add
fisttpll
ret
cld
add
popf
addr16
add
sbb
fbld
decl
pusha
pop
pushf
insl
cvtdq2ps
rol
roll
les
cmpsb
lods
and
or
movsl
jmp
or
pop
xchg
sbb
push
aad
add
cli
decl
dec
fwait
js
rcrb
mov
sub
das
cltd
lret
pop
loop
lock
or
push
adc
cmp
mov
mov
jl
stos
sub
push
leave
outsb
xchg
sub
mov
inc
ss
xchg
lods
out
lcall
sub
lea
xchg
add
lods
xchg
ja
adc
push
and
rorl
movsl
ljmp
lret
mov
lods
imull
das
dec
lea
mov
int
cmc
add
dec
inc
mov
push
icebp
movsb
and
clc
scas
jmp
out
and
mov
add
cmp
lcall
jmp
mov
fwait
lcall
inc
scas
add
lock
fmuls
fsubl
pop
xlat
mov
inc
xor
mov
push
clc
lds
xchg
mov
lret
adcb
mov
out
dec
repnz
popf
sub
lcall
out
inc
add
sbb
jg
lock
test
flds
or
pushl
cmp
cmp
int3
inc
xchg
call
xchg
and
inc
mov
repz
or
rclb
movsl
inc
arpl
adc
jl
scas
ljmp
imul
cmp
adc
lahf
ret
enter
add
lds
pop
cs
jp
ljmp
cmp
sbb
adc
icebp
daa
je
icebp
mov
aam
loope
sbb
inc
push
mov
cmpsb
pop
xlat
dec
hlt
ret
mull
das
pop
xor
xchg
out
sub
cmp
clc
sti
popf
bnd
mov
dec
shrl
pushl
cli
test
stos
mov
jle
into
lods
fstl
in
mov
mov
test
aas
push
inc
stos
or
enter
icebp
ja
ja
sahf
mov
fisubs
scas
sbb
movsl
mov
stc
ja
push
fidivl
out
add
negl
mov
leave
ljmp
imul
push
loop
dec
std
ljmp
pop
add
pop
idivb
xchg
fildll
stos
adc
add
outsb
je
jge
cmpsl
inc
dec
fcomip
call
ret
jl
stc
movsl
mov
rorl
in
jno
sbb
push
pop
add
arpl
and
out
sub
outsb
lock
rcl
test
in
pop
mov
rcrl
jg
das
xchg
jnp
addr16
jg
mov
cmpb
jle
mov
shrb
jmp
loope
inc
xor
stos
jnp
xchg
mov
add
mov
lret
call
mov
scas
sbb
pop
pop
add
les
jg
xor
imul
fidivrs
insl
andl
sub
push
sti
pushl
push
cmc
mov
mov
mov
push
cs
and
xchg
xchg
incl
mov
jb
in
inc
mov
cmp
ja
ret
imul
dec
mov
adc
int
or
dec
aam
push
pop
pop
jo
pusha
sub
mov
push
adc
fdivs
in
jmp
sub
insl
jmp
pop
mov
fwait
test
cmp
mov
xor
lahf
lcall
jne
insb
jb
data16
and
shll
pushl
xor
ror
cmp
pusha
jmp
pop
adc
insb
and
jo,pn
cmpsb
cmp
scas
adc
incl
or
and
xchg
or
test
ljmp
aad
inc
out
pop
inc
inc
inc
pop
cld
sub
decl
mov
ds
adc
pusha
pop
imul
rol
stos
ss
into
mov
inc
lock
mov
and
decl
lret
out
pop
xor
aad
int
stos
popw
cmp
into
or
ficompl
push
add
notb
cld
call
push
mov
outsl
pop
jl
mov
lea
mov
das
arpl
jp
roll
inc
pop
aad
sbb
cld
cld
decl
pop
push
sub
add
pop
fdivrs
fcmovne
lea
jmp
mov
call
repnz
cmp
xchg
and
jecxz
xchg
mov
lods
push
in
ljmp
outsb
mov
adc
mov
xchg
fs
xchg
fisubl
mov
call
das
enter
mov
mov
mov
leave
push
xor
lds
xor
test
decl
cwtl
int
ja
lret
inc
mov
fdivs
jnp
xchg
mov
call
sahf
in
stc
dec
and
and
loop
inc
fsts
pusha
incl
xchg
es
je
jo
pusha
std
sbb
mov
inc
out
and
dec
out
add
jo
clc
or
lcall
pop
xchg
mov
mov
adc
orb
and
imul
lods
ljmp
add
scas
ljmp
fcmove
or
inc
xor
add
call
clc
out
fwait
adc
xchg
loopne
or
fnsave
mov
test
xchg
mov
or
and
out
jmp
std
out
decl
push
lret
xor
xchg
in
sbb
aam
repz
or
cmp
ss
out
scas
cmp
adc
mov
jae
sub
add
adc
insb
adc
test
xchg
jmp
mov
or
sbb
scas
mov
lods
sti
or
inc
add
je
loop
cmp
ds
add
out
fadds
mov
xor
push
icebp
jmp
cwtl
mov
xor
pop
mov
outsl
jg
dec
mov
cmpsb
fs
mov
fcos
ljmp
popa
lret
cld
xchg
inc
push
jo
in
fldcw
jmp
or
aas
cmp
sbb
pop
aad
lods
pop
and
in
bndldx
jmp
movsb
movsl
stc
test
sahf
push
iret
cmpsb
cli
pushf
mov
cmpb
in
and
popa
repz
add
or
stc
stos
xchg
in
push
rcrl
into
mov
ret
inc
jnp
add
call
fmull
stos
subl
mov
lea
mov
lcall
xchg
cwtl
add
out
push
sub
push
icebp
inc
dec
pop
pop
sti
movsb
push
jle
jo
mov
mov
jle
mov
mov
jmp
xchg
cwtl
xor
pop
daa
sbb
add
enter
fisubl
imul
test
xor
jmp
mov
popa
js
inc
jl
cmp
jge
lret
mov
dec
push
shll
mov
daa
cmp
shl
in
aad
icebp
pushl
jecxz
mov
sub
sbb
push
fdiv
mov
pushf
or
jle
cwtl
hlt
jmp
lds
pop
adc
andb
call
adc
cmp
out
rclb
push
mov
lcall
ja
cmpsb
xchg
dec
aad
adc
xor
mov
sub
ss
call
mov
push
inc
ljmp
cs
rclb
mov
jbe
int
imul
push
int
fidivs
mov
repz
sub
dec
cmp
rclb
inc
fstps
out
out
sub
push
sub
xor
xor
aas
mov
mov
es
mov
or
fcomps
pop
jl
gs
mov
push
decl
mov
cmpsl
xor
outsb
or
lods
cs
dec
inc
cmpsb
aas
and
mov
leave
cld
aam
jmp
dec
call
icebp
outsl
ficoml
das
sar
pop
xchg
pop
mov
mov
cmp
adc
aaa
xchg
mov
incl
or
fdivr
aaa
xchg
dec
cmp
rclb
jecxz
mov
adc
push
adc
jg
inc
test
or
in
inc
push
xchg
and
insb
pop
and
scas
push
cmp
test
aam
xor
aaa
rolb
cmp
in
rcrl
and
mov
popa
std
jmp
cltd
ja
lahf
scas
inc
mov
dec
imul
add
xchg
decl
sbb
xchg
push
xor
xorl
mov
out
or
cmp
xchg
shrb
mov
lret
pop
jbe
inc
push
mov
pushf
out
decl
mov
add
hlt
fcmovne
mov
lcall
xchg
cmp
or
leave
addr16
insb
hlt
fs
out
mov
cmp
lods
cmp
sbb
mov
mov
cltd
fsubrp
adc
aaa
test
call
hlt
and
int
adc
cmpsb
push
xor
cld
out
cli
call
loop
call
repnz
mov
jnp
and
into
imul
faddl
pushl
jp
jae
adc
jle
cli
push
pop
fstps
fldl
or
xchg
es
insl
ret
ljmp
dec
shrl
adc
dec
imul
in
sub
in
ss
mov
xor
ljmp
pop
pop
sbb
jo
nop
push
outsb
sbb
shl
jle
pop
std
repnz
ljmp
and
add
outsl
hlt
les
repz
int
cltd
outsl
cmpsb
adc
shlb
pushl
cld
mov
push
in
xchg
jl
mov
addr16
out
mov
hlt
jmp
push
xchg
adc
sub
int
out
sahf
in
data16
pop
std
popf
movsb
xchg
fistpl
xchg
das
ja
ljmp
push
pop
lret
xor
imul
jg
hlt
cmc
sahf
call
icebp
lret
mov
mov
incl
pop
pushf
jb
cmp
add
fdivrp
es
data16
sbbb
cwtl
sbb
data16
xor
jle
nop
mov
jg
test
jg
addr16
pop
lea
xor
cmp
call
mov
es
lcall
popa
sti
and
jnp
mov
rclb
cmc
test
ja
sbb
jg
xor
mov
js
xchg
sub
pop
rcll
push
adc
or
mov
pop
mov
fcomip
lcall
pop
and
or
data16
cli
lods
adc
cs
js
addr16
ss
cwtl
test
les
sub
sub
mov
nop
cmc
and
cltd
add
ret
mov
dec
mov
lcall
dec
stc
ljmp
jl
xor
cli
cmc
xchg
arpl
push
sub
cmpb
jmp
mov
imul
mov
jb
cmp
sahf
or
cmp
cli
cmpsb
enter
dec
xchg
mov
nop
ss
pop
inc
shll
mov
mov
mov
xchg
test
mov
test
xchg
dec
pushl
or
mov
dec
mov
cwtl
sar
xor
out
jp
xor
ret
pop
push
sub
cmpl
cmp
sub
loop
xor
cmpsl
push
test
shll
lret
popa
ficompl
cli
push
add
sub
lock
mov
loop
cld
mov
and
call
adc
imulb
adc
jp
scas
xlat
and
iret
in
push
lahf
dec
inc
adc
enter
ljmp
jnp
and
jl
jl
pop
loope
xchg
aam
test
cmc
mov
ja
mov
xchg
jno
aaa
add
sub
jne
sbb
rorb
pushl
adc
jg
leave
loope
icebp
adc
inc
sub
loop
sub
rep
test
ljmp
and
cmp
jno
pop
xor
dec
jmp
pop
push
pop
imul
cld
cs
mov
icebp
divl
add
mov
xlat
ljmp
ljmp
push
sub
repnz
push
mov
negl
aas
jp
stos
xchg
adc
inc
push
icebp
cmp
mov
lods
aas
mov
pop
popf
xchg
lahf
pop
loope
add
test
loop
out
adc
call
fs
jge
into
mov
adc
in
lods
xchg
rcll
lret
imul
pushl
xchg
cli
daa
add
add
leave
fidivrl
or
iret
lcall
mov
cli
jp
fstps
mov
push
pop
adc
xor
stos
or
cmpsb
fldt
mov
sbb
lret
aas
repz
jg
call
fcomi
loope
in
ja
jo
inc
pop
inc
hlt
out
test
mov
cs
lock
les
into
pop
outsb
data16
mov
and
xor
mov
fwait
pop
pop
pop
fnsave
icebp
dec
jbe
jp
sti
jmp
mov
stos
addr16
icebp
xor
in
pop
xchg
inc
pop
call
data16
pop
negb
inc
lret
push
xlat
xor
je
stc
cmp
or
pushl
push
push
jnp
dec
addr16
jl
cmp
pop
adc
imul
adc
popf
insl
xchg
xor
fnstenv
sub
bound
repz
test
xchg
cmpsb
sub
and
incl
ret
pop
scas
hlt
icebp
pop
mov
stos
mov
sbb
popf
rol
test
into
call
xchg
jle
test
dec
cmp
lcall
push
in
jb
clc
push
ret
mov
cli
incl
movsl
dec
mov
movsb
scas
call
sbb
pop
es
dec
loop
mov
pop
sar
ljmp
repnz
push
adc
push
jecxz
cmp
mov
cli
les
cmp
add
decb
sahf
mov
cmp
dec
cli
inc
outsl
inc
xor
gs
lahf
pop
mov
dec
shl
sub
mov
fbstp
popaw
xor
add
arpl
gs
pushl
adc
cmp
ret
pop
and
lock
jle
scas
mov
pop
mov
enter
cld
call
outsb
push
push
iret
loop
mov
mov
mov
inc
jb
add
push
pusha
stos
pop
lcall
add
mov
repz
test
jmp
and
adc
inc
sub
jns
pop
dec
cli
dec
mov
mov
cld
ffreep
dec
and
clc
and
icebp
xor
xchg
fimuls
decl
pop
and
mov
arpl
mov
or
js
add
push
push
movb
cld
into
out
sti
cld
and
es
mov
push
mov
xchg
adc
add
incl
loope
stos
jns
out
ljmp
dec
mov
ja
call
pop
ret
in
pusha
enter
sahf
stc
addr16
or
jns
pop
xchg
into
clc
test
out
ljmp
pushl
and
push
in
add
in
sub
push
int
dec
inc
mov
ljmp
and
adcb
les
mov
js
mov
push
scas
mov
cwtl
hlt
jle
pop
inc
jle
push
dec
adc
and
pop
jge
addr16
cmp
push
mov
decl
clc
out
dec
pop
pop
subl
scas
repz
scas
inc
jle
lahf
xchg
lock
sub
stos
inc
das
jbe
call
jo
add
cmp
and
repz
pop
push
xchg
ljmp
mov
mov
rcl
mov
sub
sbb
xchg
and
jle
adc
nop
and
decl
push
lahf
push
inc
and
mov
add
pusha
sub
andb
out
inc
push
mov
pop
lods
jb
xchg
cld
mov
inc
enter
cmpl
or
ljmp
and
addl
xchg
or
ljmp
pop
icebp
in
stc
ljmp
push
mov
sbbb
jb
mov
inc
jmp
lea
ljmp
aaa
enter
sub
pop
mov
jmp
sub
pop
push
test
stos
roll
outsl
aad
cs
or
test
call
and
aad
mov
cmp
mov
rcrb
call
shl
cmp
mov
add
ds
out
dec
ljmp
mov
add
mov
fldl
popf
cmp
jmp
push
popa
xchg
sbb
push
dec
int3
pusha
push
jb
rorl
es
ja
fwait
dec
dec
and
lock
iret
rep
mov
pop
outsb
jp
xor
xchg
iret
sbbl
jg
jge
adc
mov
jo
in
mov
into
jae
rorb
decl
psubusw
dec
mov
aas
das
cwtl
dec
mov
hlt
push
or
aas
stos
xchg
fucomp
les
jmp
sub
mov
jmp
ss
arpl
es
dec
xor
ja
sbb
cmp
cmpsb
pop
xchg
inc
mov
sub
aaa
sbb
jmp
lods
shlb
jae
or
ljmp
pop
aad
in
mov
cmpl
scas
pop
xchg
xorl
push
mov
cmpsb
jmp
or
addr16
fcomp
and
ja
mov
xor
frstor
pop
in
incb
dec
push
data16
decl
sub
insl
sarb
repz
imul
xchg
adc
ljmp
and
mov
call
mov
pop
cmp
call
ret
arpl
sar
add
pop
pop
fsubl
push
pop
into
fsubrs
cmp
cmpsl
push
in
ljmp
lcall
iret
or
decl
or
jmp
cltd
xor
pop
imul
decl
incb
les
test
add
adc
decb
sub
std
scas
lcall
bound
in
shr
jg
arpl
int
cmp
jmp
pop
pop
lcall
mov
icebp
mov
rol
xor
push
push
push
mov
pushf
imull
ljmp
add
inc
js
xor
fsubl
loope
cli
push
js
lret
jmp
in
pop
adc
and
mov
pushf
inc
mov
jno
or
das
adc
aas
xchg
jl
mov
call
icebp
mov
lods
mov
jo
cli
push
ljmp
cmp
mov
cmp
push
or
movsb
jne
sub
cli
sbb
mov
hlt
scas
xor
dec
sbbl
loop
orl
lock
jae
test
subb
insb
mov
push
test
sub
lcall
dec
cltd
xor
insl
or
push
decl
adc
das
aaa
dec
mov
dec
subb
jl
pop
shrb
xchg
aaa
test
pusha
ret
rcl
sub
pop
pop
jge
xor
lock
or
loope
mov
jmp
in
sbb
ficomps
push
pop
rolb
repz
addr16
cmp
mov
xchg
push
sbb
jg
mov
push
bound
shl
mov
test
scas
sub
pusha
inc
inc
jecxz
fldenv
call
loope
sbb
cmp
push
ret
and
mov
cs
mov
pop
lret
pushl
ret
dec
mov
inc
jle
leave
cmpsl
hlt
lcall
jl
mov
aas
and
outsb
aad
cmp
pop
roll
rcr
inc
jmp
xchg
loope
xchg
mov
mov
jge
add
loope
fiadds
dec
out
jg
xchg
ja
inc
adc
scas
sub
mov
jecxz
test
loope
stc
cmpxchg
lahf
shrb
mov
call
cld
mov
and
bound
fidivrs
subb
arpl
or
ljmp
jns
notl
fcmovnb
pop
adc
jp
inc
pop
adc
pop
mov
inc
nop
dec
nop
outsb
mov
aaa
cld
call
and
inc
clc
jb
das
lods
push
mov
outsl
call
sbb
popa
mov
mov
jae
push
jle
sub
fisttps
stos
pop
mov
or
sbb
xchg
cwtl
xorl
sbb
aam
pop
dec
dec
push
test
scas
adc
ljmp
enter
pop
div
mov
jmp
pop
dec
mov
and
int3
sbb
pop
decl
rcr
mov
jbe
pop
js
and
decl
jne
fwait
push
imul
push
test
dec
sub
ss
outsl
hlt
xor
add
scas
sar
cli
lret
jg
push
inc
push
scas
or
add
aam
adc
fstps
enter
cmp
mov
filds
pop
pop
rcrb
rcrb
rcrl
jmp
ljmp
or
or
data16
push
imul
test
jecxz
jl
cmp
sbb
je
add
bndldx
decl
in
mov
and
testl
pop
rol
inc
pop
std
ljmp
push
mov
add
sub
lea
mov
or
and
incl
mov
iret
sbb
inc
add
pop
out
jmp
push
aas
out
cli
pushl
mov
xchg
mov
xchg
mov
push
xchg
sub
mov
mov
in
sub
cld
loop
popf
add
pop
test
icebp
jmp
daa
cmp
cmp
xchg
and
push
out
pop
push
pop
jl
out
mov
in
push
repz
shll
jmp
movsl
mov
rorl
int3
jo
cli
dec
std
cld
incl
and
mov
loope
pusha
stc
add
frstor
call
les
lret
movsl
imul
outsb
scas
push
lock
push
repnz
aas
imul
xchg
jle
push
sbb
jae
pop
and
mov
jmp
xchg
mov
inc
clc
cltd
and
and
jne
lcall
and
fiadds
mov
int
stc
icebp
or
je
pop
mov
je
sbb
call
andb
clc
in
and
mov
repnz
xchg
add
adc
aaa
push
and
xor
cmp
daa
sbb
imul
sub
jo
push
xchg
add
pushl
and
cmp
add
jae
out
rolb
stos
flds
sub
rcrl
adc
pop
dec
push
es
fsubrs
push
adc
dec
loopne
jl
fwait
imul
mov
sbb
je
cmpsl
add
incl
outsb
mov
xchg
mov
dec
pushl
dec
xor
pop
hlt
mov
inc
jns
mov
inc
xchg
insb
sar
cmp
out
pushf
pop
push
pushl
adc
stos
mov
cwtl
sub
adc
dec
lcall
iret
or
ret
fists
iret
fs
ret
lcall
cs
push
mov
fistl
pushf
mov
mov
ljmp
pop
push
nop
xor
jle
push
xchg
pop
jbe
pop
mov
or
inc
je
test
sbb
mov
and
cli
outsb
dec
cmp
mov
mov
int
add
mov
pop
lcall
and
lcall
sub
leave
outsb
jbe
add
jae
pop
sarb
dec
mov
ret
stos
cmc
dec
out
xor
rcrl
call
std
repnz
aad
add
sbb
pop
pop
stos
movsb
push
mov
pushl
xchg
mov
nop
daa
addr16
jno
cmpsb
or
or
mov
repz
pushl
xor
jne
js
out
stos
outsb
mov
lods
gs
pop
cmp
int3
call
and
rcl
int
inc
cmp
dec
inc
jnp
xor
icebp
dec
jmp
lcall
movsl
dec
cli
push
movsl
push
mov
call
and
sarl
aaa
outsl
pop
lea
lret
and
ret
mov
ja
ljmp
cli
lret
mov
push
lcall
aad
sbb
xchg
pop
lock
xchg
push
xor
dec
cmp
call
scas
push
cmp
ljmp
decl
testl
push
add
jge
pop
cmpsl
cmp
lea
and
loope
call
testb
jge
lahf
stc
inc
jge
test
movsb
inc
inc
callw
mov
pop
fiadds
cmpl
xchg
and
mov
jmp
stc
xchg
test
push
jne
aam
stos
nop
testl
cld
mov
mov
push
or
out
incl
xchg
push
int3
stc
imul
call
pop
lods
test
add
cmp
incl
add
jge
mov
jl
push
xorb
in
mov
decl
fsubp
jge
mov
pushf
xchg
ljmp
jl
add
dec
and
sub
sar
jbe,pt
scas
and
lret
push
hlt
insb
sbb
int3
adc
daa
decl
clc
sbb
jae
cltd
dec
ss
enter
imul
add
sti
dec
sbb
cmpsl
xlat
pushl
xor
xchg
pop
cmp
and
jbe
add
decb
cmp
jg
orl
jnp
jle
pop
mov
xor
mov
cwtl
fidivrl
mov
je
lcall
push
inc
fcompl
jmp
cmp
lret
outsb
mov
pop
and
adc
add
fistl
rorb
mov
test
mov
fisttpl
icebp
push
orb
dec
cmp
pop
adc
lcall
lods
or
fwait
mov
sti
sub
mov
mov
aad
or
pop
fsub
pushl
ret
lcall
fldt
stos
sub
call
stc
lock
inc
sbb
aad
jmp
mov
cmp
jg
movsl
sbb
sbb
mov
es
clc
movsl
mov
mov
int
jo
mov
push
cld
decl
jmp
das
cmpsb
adc
and
add
ret
lcall
push
mov
jmp
daa
jmp
or
adc
mov
stos
ja
call
adc
jmp
sbb
pusha
clc
sbb
inc
cmpsb
cmp
mov
in
sub
xchg
xor
push
push
test
es
cmp
sbb
ljmp
popf
fildll
cmp
dec
or
mov
jl
mov
popf
add
call
push
inc
sti
shll
xor
fbstp
jns
dec
and
ds
stos
adcb
or
sub
or
jmp
testl
hlt
movb
incl
shll
pusha
push
sub
fisubs
cld
jg
das
xchg
xor
rorb
lock
loopne
fldt
jbe
push
pop
inc
mov
stc
mov
cmp
in
push
fsubrl
xchg
jg
jle
xchg
data16
push
pop
scas
hlt
pop
adc
std
mov
adc
inc
into
xor
cmpsb
pop
sbb
adc
add
bound
or
iret
das
jb
es
dec
inc
jl
subl
cli
fwait
insb
shrb
mov
decl
push
cmp
lods
xor
cwtl
mov
leave
mov
dec
aas
shll
fidivrs
call
push
clc
jp
outsl
dec
push
nop
push
jle
lret
push
insb
scas
mov
es
mov
pop
imul
inc
lds
shl
sar
jge
push
push
fs
in
adc
roll
test
pusha
stc
mov
dec
scas
daa
sbb
daa
ja
out
push
sbb
lods
mov
clc
pushl
std
cmp
out
xchg
push
inc
ljmp
sbb
and
mov
mov
xchg
and
lods
pop
hlt
in
jno
add
add
je
lcall
inc
jo
xchg
movsb
loopne
jl
sub
subl
sbbb
cmp
shlb
cld
fsubrp
jne
stc
inc
popa
add
or
dec
testl
inc
clc
or
dec
ja
sub
in
push
mov
gs
daa
arpl
ds
call
or
shll
and
dec
ds
imul
insl
in
ljmp
ret
faddl
call
nop
mov
mov
or
iret
int
cmpsl
enter
in
jae
call
loopne
call
sbb
cmpsl
mov
jmp
fadd
push
out
mov
lcall
jno
flds
push
sub
js
xorb
jns
fists
ja
cli
dec
inc
fildll
mov
jnp
sbb
sub
mov
pop
and
data16
xchg
jmp
fs
decl
pop
add
mov
pop
push
dec
data16
mov
adc
pop
lods
leave
jb
add
sbb
leave
gs
jp
lea
push
jmp
pusha
push
mov
mov
jb
lds
repz
pop
dec
dec
ljmp
push
xchg
sar
push
std
push
js
or
ret
sbb
push
adc
dec
es
stos
and
loope
sub
fdivrs
inc
or
mov
jg
stos
and
les
xchg
jge
mov
fidivs
jb
aam
cmpsb
mov
lock
dec
sub
leave
test
cmp
test
decl
or
mov
or
insb
pop
out
cmp
dec
and
insl
fisubs
jp
mov
xchg
mov
pop
ror
push
mov
loope
imul
mov
in
xchg
jmp
lcall
push
cld
fsubrp
mov
xchg
test
les
std
das
dec
jbe
jmp
movsb
ljmp
loopne
cmp
fildll
push
push
dec
and
push
out
dec
push
fwait
aas
push
cmp
or
dec
les
mov
cwtl
lcall
push
sub
push
aam
gs
pop
mov
in
mull
pusha
xchg
and
fistps
aaa
movsl
pushf
adc
aad
cmp
jg
daa
gs
jb
pop
movsb
das
and
and
orb
lret
test
and
bnd
lock
decl
negb
push
dec
cli
mov
cmp
pop
decl
pop
pop
xor
dec
ja
cmp
or
jnp
imull
lds
xchg
xor
lcall
jb
dec
adc
jp
je
sbb
or
xchg
pushf
bound
incl
fucom
repz
sbb
rorb
daa
out
pop
adc
mov
dec
scas
mov
sub
mov
loopne
imul
xchg
loop
add
ja
out
clc
xchg
sub
cli
sbb
xchg
std
out
mov
shll
stc
push
jge
cwtl
test
mov
es
jl
cmp
mov
dec
movsb
movsb
and
sbb
mov
popf
mov
mov
pop
xor
insb
pop
fs
orb
in
lcall
lock
pusha
adcb
add
adc
xchg
rcrb
mov
and
mov
xorps
xchg
js
adc
fisttps
push
pusha
cld
mov
mov
mov
decl
movsl
mov
ja
cltd
rorb
sub
xor
push
decb
clc
push
dec
sahf
xchg
mov
xchg
push
and
or
or
mov
mov
addl
add
pusha
pop
fwait
icebp
mov
fimuls
xchg
lods
pop
ljmp
scas
xchg
xchg
out
xchg
xor
sub
push
cmp
mov
jecxz
jns
in
int3
popl
push
xchg
ret
ds
fildll
sarb
jne
cmp
jmp
add
mov
xor
inc
dec
push
cld
xlat
mov
int3
ds
les
mov
jae
mov
scas
xor
jns
xchg
ja
ljmp
pop
dec
cmp
sarl
in
insb
push
mov
mov
or
sub
ljmp
stc
lahf
sbb
push
ja
test
and
push
push
out
fnstcw
jno
call
aas
or
sub
cmp
out
test
mov
fisubrs
xchg
dec
mov
add
cmpsl
lret
sbb
pop
fisubrl
pop
pop
loope
or
pop
sar
mov
fistpll
and
or
pushl
add
pop
insl
clc
loope
stos
sti
rcrb
cmp
lcall
xorl
sub
pop
andb
movsl
xchg
lods
and
cmp
aam
pop
pusha
mov
add
pop
lret
mov
cmpsl
std
testb
adc
icebp
je
movsb
jge
jns
or
in
jae
cmpsl
shl
add
inc
cld
cwtl
pop
popa
mov
arpl
pop
mov
mov
jg
sub
pop
jns
push
sbb
push
push
cmp
bound
mov
out
or
loopne
addr16
out
xor
adc
mov
lods
aas
fwait
lea
push
lcall
adc
jl
mov
or
std
mov
ljmp
imul
and
fdivs
add
or
incb
xor
repz
std
decl
sbb
mov
pop
repz
cmp
daa
jbe
pushf
loop
xchg
lret
call
scas
and
movsbl
push
rcrl
jno
xor
cmp
mov
mov
clc
lds
scas
and
sahf
aas
push
cmp
loop
cld
int
decl
sub
xor
mov
cld
and
lock
pop
aam
std
cmp
add
push
jmp
fmul
rclb
inc
test
sbb
inc
lods
imul
js
push
cld
in
xchg
je
add
std
mov
aad
and
xchg
mov
jmp
hlt
lds
jg
in
or
cs
push
cmp
cmp
pop
mov
clc
in
mov
dec
jge
xchg
pop
push
scas
addr16
decl
mov
adc
loop
jne
insb
dec
sub
xchg
cwtl
sbb
mov
or
loopne
ficomps
outsb
sbb
repnz
adc
mov
lods
imul
and
inc
inc
cld
test
out
xor
cld
xchg
adc
cltd
pop
fisubrs
sar
xchg
fldl
cmp
rorb
outsb
xor
sub
mov
insb
adc
or
push
push
mov
cli
call
lcall
push
lcall
mov
add
cmc
sahf
scas
mov
mov
mov
dec
mov
pushf
mov
adcb
push
cs
fadds
fwait
clc
mov
xchg
or
pusha
sub
lcall
scas
or
jb
jmp
inc
mov
pusha
adc
daa
jle
or
mov
xchg
pop
sub
lcall
rcll
sbb
dec
inc
cwtl
mov
enter
stos
jnp
mov
test
inc
inc
or
mov
pushf
add
ret
call
xchg
mov
and
push
imul
loope
or
sbb
mov
push
xor
ja
addb
cmp
sti
out
fisttps
lea
jnp
sub
popa
mov
inc
mov
push
ja
jg
push
pop
dec
repnz
adc
fwait
inc
aaa
xlat
scas
sub
lcall
pop
sbb
js
xor
ret
xchg
lret
mov
sub
and
lret
daa
push
ljmp
sahf
dec
bound
je
test
adc
jnp
fiadds
push
int3
add
fcompl
jmp
sbb
jge
icebp
stos
push
inc
add
mov
aad
sub
sbbl
and
xor
pop
push
incb
mov
out
or
rol
jmp
dec
sahf
shl
sub
dec
movsb
mov
mov
ja
jmp
orl
cmc
mov
movl
je
popf
cli
or
popf
mov
sub
and
stos
push
sub
out
and
sub
rcll
daa
rcl
jmp
mov
cmp
cmp
pop
adc
lock
loope
iret
ret
push
pop
pop
and
xor
fiaddl
or
scas
jbe
call
add
lcall
nop
add
mov
pop
xchg
push
mov
fisttpl
lcall
sbb
and
mov
xor
fidivrs
pusha
push
push
js
jg
pushf
andnps
imul
and
aad
outsl
cli
add
pop
imul
jo
decb
addr16
cmp
and
rcrb
mov
push
push
cmpsl
pusha
outsl
xchg
add
and
cmp
mov
ljmp
push
xor
push
in
push
inc
mov
cmp
out
clc
das
cli
lret
mov
sub
out
insb
in
test
mov
test
aaa
xor
jae
mov
out
jo
clc
cltd
pushf
out
cmc
mov
shrb
xor
push
mov
xchg
aaa
push
hlt
jb
mov
cmpsb
xor
fst
loopne
movsb
xchg
insl
int3
sub
add
xchg
jmp
sub
jp
rcll
add
out
add
or
mov
bound
aad
and
aam
and
ror
mov
pop
cltd
ss
mov
scas
lret
pop
sub
push
add
xorb
jns
inc
sub
call
insb
imul
mov
popl
and
xor
cmp
les
call
sbb
push
xchg
sub
xchg
adc
orl
mov
les
test
sbb
dec
ret
call
inc
ljmp
inc
or
dec
lahf
lock
xor
mov
out
xor
xor
add
sub
adc
lock
outsb
sbb
add
out
pop
daa
pop
add
xchg
movsb
hlt
ss
inc
mov
lds
fidivrs
cmp
xor
dec
mov
nop
push
int
sbb
movsl
xchg
addr16
and
cmc
lgdtl
mov
int
pop
xor
push
cli
lock
mov
hlt
clc
lods
dec
test
adc
call
dec
aas
jbe
mov
roll
rcrb
push
popf
lods
jge
cmpsb
dec
mov
lock
clc
cmp
jns
xchg
jne
dec
ljmp
push
sub
lret
mov
daa
push
popf
out
cld
popa
and
dec
out
ds
jmp
pop
pop
cs
push
cmpsl
int
jl
fucomp
mov
fsubp
bound
ret
and
hlt
add
dec
call
stos
cld
fimuls
lds
sti
adc
sbb
dec
in
repnz
cmp
inc
pop
jp
jb
aad
fucomp
sbbb
fistpl
push
fs
sbb
jg
call
lds
mov
dec
adc
push
add
fwait
push
fistl
dec
jo
call
mov
push
js
dec
xchg
jg
push
rorb
ja
rorl
jmp
push
je
out
sqrtps
jecxz
mov
repnz
lods
fisttpll
and
insl
ja
pusha
mov
jmp
fisttps
mov
test
push
sbb
mov
cld
pushl
adc
scas
fmulp
mov
mov
push
inc
push
sar
fs
into
fmul
jl
push
dec
inc
add
cmp
mov
inc
pushf
mov
into
icebp
out
lods
xchg
push
dec
mov
std
jmp
or
adc
clc
sub
cmovo
xchg
jg
mov
daa
or
mov
or
inc
testb
and
push
dec
jne,pt
jmp
mov
sbb
ficompl
add
dec
popa
inc
aas
sbb
adc
lcall
les
fsubs
ret
lcall
push
jns
call
inc
mov
arpl
imul
pushf
or
mov
decl
xor
sbb
mov
shlb
push
ljmp
jg
test
jg
jmp
repz
movl
in
jmp
jg
ja
lcall
jnp
sub
fs
xor
mov
ljmp
cli
jmp
lods
fmuls
test
aas
es
iret
lods
add
lea
sub
push
cli
cmp
adc
icebp
mov
jl
push
dec
push
inc
sbb
imul
clc
jnp
repz
pop
pusha
pop
cmp
push
dec
mov
push
inc
loope
mov
cmc
int
ljmp
adc
or
mov
cmp
jno
push
jecxz
sub
decl
jg
mov
fcoms
orb
push
mov
jg
jl
mov
mov
xchg
sub
fiadds
mov
sbb
push
dec
and
mov
jge
add
ljmp
mov
imul
imul
ljmp
pop
fs
inc
dec
pop
sub
test
xchg
std
dec
xlat
incl
adc
xor
data16
out
or
mov
sbb
hlt
es
sub
jge
dec
int3
cmp
push
and
pusha
in
lcall
add
sub
jg
inc
sbb
push
popl
pop
cmc
aaa
cld
mov
cli
sahf
gs
mov
les
aas
push
mov
out
jp
xchg
jbe
push
ss
int3
gs
push
jb
inc
cmp
mov
push
lods
negl
mov
pushl
daa
out
in
cmovae
movsl
out
shrl
jmp
inc
xchg
lock
mov
cmpsl
jbe
mov
and
push
cltd
jb
clc
pop
add
and
or
push
leavew
jne
sbb
add
dec
mov
pop
push
jp
es
mov
fildll
or
pop
cmpsl
daa
fmull
push
in
pushl
sub
clc
cld
imul
lret
push
jle
push
lods
mov
mov
loop
lods
sub
sti
cwtl
aaa
fxch
je
xlat
xorl
cmpb
push
xlat
push
mov
lcall
xchg
int3
shlb
sub
mov
rcr
and
ret
dec
ljmp
mov
push
push
mov
jg
test
addr16
ret
je
jnp
inc
addl
mov
cmc
xchg
cmc
in
or
repnz
in
cwtd
cmpb
jp
mov
repz
dec
shlb
dec
aas
lret
ljmp
scas
out
pop
in
xchg
or
outsl
shrl
repz
xchg
incl
jno
pop
xchg
mov
rcrb
daa
pop
xchg
jge
mov
in
jae
call
inc
adc
sbb
lds
push
iret
scas
push
jmp
incl
pop
loope
je
cmp
mov
lods
lret
mov
xlat
jnp
push
loopne
aaa
cmpl
stos
dec
aas
mov
dec
popa
lcall
stc
addr16
xchg
inc
cmc
push
pop
stos
dec
jg
cmpsl
out
cmp
subb
xlat
push
mov
daa
scas
cmp
out
inc
pop
icebp
xchg
mov
loope
clc
incl
add
add
aas
hlt
rclb
sub
sub
mov
sti
push
add
sbb
fsubp
pop
dec
push
add
or
push
in
push
aaa
cli
lcall
jne
inc
jnp
jne
jmp
mov
gs
mov
pop
or
lcall
xchg
aas
mov
sub
sbb
push
pop
sarl
sub
arpl
outsb
insb
xchg
lret
testb
inc
stos
in
aaa
cld
incl
inc
fstpl
and
sbb
cmp
sti
icebp
lcall
jo
inc
pop
fidivrl
in
in
jb
mov
mov
aad
add
or
push
sbb
bound
xchg
xor
xchg
lret
cmp
scas
or
fdivr
pop
xchg
add
lock
push
mov
popf
xor
sbb
pushl
scas
loop
cltd
cwtl
movsl
xlat
int
pop
fs
mov
lcall
idivb
stos
mov
out
jl
sbb
gs
js
ss
decl
cmpsl
nop
insl
and
mov
mov
sbb
outsl
pop
out
push
out
loope
add
sub
or
jne
pushl
mov
call
jp
adc
aaa
inc
jge
and
adc
aaa
lods
mov
das
and
shrb
mov
cmp
dec
mov
and
and
sub
in
test
leave
sub
or
and
shrl
pushl
rol
jge
test
sbb
les
add
fistpll
and
fnstenv
push
jg
int3
jbe
mov
lret
cmpsb
ud0
int3
cmc
mov
xchg
jp
into
in
outsl
xchg
mov
add
pop
inc
push
adc
cli
popa
xlat
jbe
negl
lcall
arpl
cmc
cli
pop
call
pop
push
sub
daa
loop
insb
jg
pushl
sbb
pop
aam
mov
ret
repnz
xchg
cmpsl
mov
sar
xor
leave
call
cld
mov
mov
cli
jg
dec
jb
insl
frstor
fisttps
pop
jecxz
cmp
mov
shl
pop
sbb
scas
jb
leave
sub
aam
lods
adc
adc
mov
push
jo
pushl
aaa
jecxz
outsb
pop
lcall
cmpsl
cld
insb
fcomp
pop
mov
dec
xchg
dec
mov
jg
hlt
decl
lahf
or
pop
clc
je
cwtl
jl
jle
pop
stos
sub
pushl
lods
jp
mov
cs
mov
inc
add
rcrb
push
dec
sarb
mov
lcall
lahf
cmpsb
lods
lahf
xor
mov
popf
arpl
jg
inc
hlt
scas
pusha
data16
mov
scas
aas
andb
cmp
mov
mov
adc
sbb
dec
lcall
or
jns
cltd
mov
or
adc
dec
pop
inc
ja
mov
jmp
mov
pop
sub
mov
into
inc
out
cli
inc
es
fcoml
mov
incl
roll
outsl
sub
call
dec
pop
scas
ljmp
inc
movsl
jg
sub
or
pop
bound
call
xchg
idiv
es
test
mov
cmp
divl
jecxz
incl
lock
nop
in
subl
inc
mov
fs
push
xchg
mov
das
leave
jmp
or
arpl
add
sub
pop
inc
pop
add
cwtl
movsb
lret
add
inc
and
sbb
aad
add
pop
sbb
les
decl
outsb
dec
and
mov
mov
in
cmp
cmpsl
push
xor
imull
sub
cmp
pushl
sub
insl
adc
test
jmp
jmp
pop
add
inc
cmp
jmp
mov
sbbl
or
aam
mulb
mov
jo
pop
int
stos
in
insl
sub
jb
loopne
sbb
add
call
mov
popf
sub
inc
or
jge
mov
call
pop
std
push
repz
pop
test
xor
lock
fbld
jecxz
js
notl
icebp
xchg
fucomi
jg
and
or
das
xchg
gs
mov
mov
fcomip
push
jb
mov
ss
mov
jle
pusha
sub
sti
push
sbb
push
adc
leave
inc
sahf
scas
mov
push
inc
les
lods
mov
aaa
movsb
lea
lcall
jns
push
ret
loope
xorb
andb
pop
and
inc
or
cmp
and
outsl
xchg
inc
push
retw
fstps
xchg
lret
dec
lods
lret
stos
jno
pop
mov
push
sarl
std
adc
fs
sti
push
and
add
loope
call
lods
mov
in
jns
adc
mov
insl
dec
inc
sub
into
lds
outsl
cli
push
sub
adc
loop
stc
and
cltd
fadds
push
ja
push
call
or
es
int
add
sbb
insb
push
jno
mov
push
pushl
dec
mov
cmpb
jmp
jmp
xchg
sub
mov
lret
jg
mov
stos
decl
fs
push
mov
movlps
sub
lock
mov
pop
inc
addl
xchg
dec
adc
add
pushl
setae
pop
icebp
adc
cmpsl
cltd
decl
adc
push
cli
push
pushf
add
insb
stos
and
mov
psubd
fdivs
ds
cmp
xor
push
add
cs
xchg
mov
add
push
cmpsl
xchg
adc
mov
add
sbb
lahf
jns
stos
xchg
and
mov
adc
stc
sar
jbe
lret
loope
ret
mov
push
adc
pop
mov
mov
insb
mov
stc
clc
sar
aaa
rclb
out
xor
cmp
test
mov
hlt
sbb
loopne
jg
enter
jb
adc
pushl
or
pop
scas
xor
fs
lret
jb
cmpsb
inc
dec
cs
sarl
jg
call
into
fucomi
jb
xchg
jae
sarb
mov
ja
outsb
xchg
pushl
lods
rcrb
jo
jecxz
pop
mov
mov
hlt
sar
shl
dec
jo
int
jns
jl
xor
xor
test
mov
jo
out
xchg
jbe
or
jbe,pn
jge
decl
sbb
imul
sub
xor
out
in
mov
in
sbb
in
jge
andl
ret
ja
cmp
ficomps
lods
xchg
pushl
or
lahf
inc
imul
arpl
rolb
adc
sahf
mov
adc
jg
inc
cld
cwtl
jns
or
jle
xchg
push
or
adcl
jmp
imul
sub
cmp
dec
repnz
push
ret
mov
arpl
scas
enter
add
lret
jg
daa
bound
mov
push
loope
lahf
jg
pushf
nop
cld
pop
cltd
xchg
je
jae
dec
cmp
sbb
push
pop
testl
fwait
shl
mov
lods
pop
pop
jno
xchg
lcall
cmc
sbb
pop
stc
sbb
push
mov
adc
jmp
std
popf
mov
xor
or
rclb
pop
std
pushl
mov
mov
mov
mov
sub
and
dec
subl
fdivr
push
jl
push
loop
jmp
mov
outsl
xor
mov
fsubrs
jno
ror
rolb
leave
jle
out
aaa
push
in
jg
and
adc
or
test
aas
outsb
jnp
cld
adc
lret
push
xchg
pop
leave
jno
inc
push
test
outsb
movsl
pop
dec
incl
mov
mov
xlat
cmp
out
out
fcompl
test
fwait
repz
lcall
pop
rep
inc
dec
jbe
and
shll
fcomps
jl
ja
pop
out
lock
in
fwait
xchg
push
in
out
popf
repz
xor
sbb
mov
jp
ljmp
xchg
jecxz
fcmovnu
call
mov
mov
cmp
cltd
sar
imul
push
cmpsl
pop
or
pop
jae
inc
sbb
jno
pop
ljmp
mov
or
ljmp
negl
jmp
or
btc
fcmovu
faddl
inc
pop
push
incl
call
mov
pop
inc
and
imul
jg
pushl
xchg
mov
cltd
jecxz
cmp
sub
mov
decl
inc
arpl
out
add
adc
and
mov
mov
add
mov
outsb
mov
movsb
ljmp
cs
mov
inc
jmp
lahf
xchg
stos
jae
xor
inc
dec
out
clc
das
push
cmp
mov
lds
add
adc
loop
lcall
lds
loope
fwait
inc
xchg
lea
inc
mov
or
jl
addb
sbb
xchg
adc
pop
stc
lods
pop
cmp
out
dec
int3
scas
sbb
aam
out
ja
fs
test
lock
loop
movsl
hlt
jge
or
jl
add
jo
add
pushl
test
xor
push
ldmxcsr
cmpsl
xor
call
cmpb
pop
mov
sub
into
sbb
inc
lahf
xchg
jle
ret
sub
or
insb
daa
fdivrl
xchg
incl
pop
clc
ss
sti
push
loopne
addb
or
jmp
mov
and
dec
cmp
push
sbb
xchg
jmp
cs
or
jae
movsl
ds
jmp
aam
mov
push
and
leave
jmp
notl
pushl
sbb
jl
std
std
pop
les
cmc
xchg
jmp
ret
sub
sub
int
clc
jp
sub
xor
adc
push
scas
mov
inc
das
and
call
and
stos
jne
mov
jo
scas
fdivrl
adc
adc
mov
into
stos
jmp
dec
pushl
fimuls
negb
insl
aaa
xchg
lds
dec
in
dec
mov
push
pop
int
shlb
mov
sbb
cmp
and
jecxz
cwtl
xchg
lret
shlb
lret
mov
fdivrl
mov
pop
pop
dec
xor
daa
test
add
sub
inc
xor
dec
ja
sub
mov
xchg
call
adc
lahf
lods
nop
ja
int3
cltd
xor
dec
das
scas
mov
sbb
and
imul
fildll
cs
sbb
in
fisttps
mov
scas
xlat
mov
movsl
scas
dec
negl
xlat
mov
inc
jge
imul
inc
push
dec
jo
xchg
stos
ret
mov
xchg
push
stc
cltd
jmp
mov
inc
test
inc
sahf
inc
ret
lret
imul
fisttps
mov
dec
outsl
sar
mov
xor
fsubrl
mov
call
addr16
out
clc
sub
in
jecxz
mov
mov
or
call
enter
or
cli
insb
negb
test
loopne
cmc
stos
fmull
dec
out
rol
add
std
bound
inc
cmpsb
sbb
sbb
loopne
sub
mov
mov
inc
call
das
jnp
out
add
loop
dec
lds
popa
lock
mov
dec
jecxz
xchg
jmp
sbb
in
pop
lods
and
decl
imul
push
jne
imul
push
mov
sub
out
or
dec
loope
xor
cmpsb
cmp
jae
mov
add
push
mov
lahf
mov
cld
movb
xor
and
mov
incl
aam
add
mov
mov
push
sahf
imul
push
jg
pushl
xor
sbbl
xor
or
cmpsb
cmc
xor
je
pop
lcall
mov
pop
xchg
mov
jmp
xchg
icebp
pushf
ja
fsub
mov
stos
outsb
mov
iret
pop
test
call
jmp
cmc
and
push
mov
dec
data16
aad
lcall
and
out
add
cwtl
sbb
sbb
pusha
mov
or
and
lea
lock
dec
lock
enter
jns
add
cli
xor
ljmp
or
ss
outsb
add
pop
rorb
movsb
pop
cmpsl
fcom
jno
sub
push
out
lahf
icebp
fcomip
enter
cmp
mov
cli
push
cmc
mov
adc
xchg
jne
jno
pusha
ljmp
add
out
call
decb
or
aaa
rcrl
pop
push
push
stos
rcrl
push
leave
scas
adc
ficoms
jle
fildll
ja
xchg
and
lcall
jno
xchg
sbb
imul
and
decl
or
js
fcmovnu
into
push
cmp
jl
mov
cmovnp
cmc
fwait
add
xchg
jo
xorb
mov
repz
ljmp
mov
and
hlt
test
mov
sub
out
cmp
pop
xchg
dec
jg
cmc
inc
pushf
add
fmull
inc
shll
mov
sbb
shll
incl
add
jb
xchg
in
fcoms
out
xor
inc
pusha
lret
bound
decl
lret
jg
fs
ret
daa
iret
addr16
sbb
or
pop
ljmp
int
call
mov
cmpsb
je
or
jmp
mov
andl
ds
icebp
push
testl
add
lcall
or
rclb
sahf
push
dec
insb
add
decb
add
xor
test
ljmp
decl
mov
push
push
fs
out
adc
sub
lock
imul
fildll
push
mov
pusha
pusha
push
imul
lret
ret
nop
add
stos
mov
jo
mov
popa
out
test
xchg
clc
pop
sti
iret
lock
sti
popa
pop
and
das
sar
pop
daa
fdivrs
xchg
or
loop
sub
mov
mov
sbb
divl
aam
repnz
lret
jecxz
inc
loope
mov
movsl
mov
jns
push
sub
mov
adc
mov
xor
jg
shrl
int3
int3
mov
push
dec
incl
incl
iret
mov
das
inc
imul
mov
out
cmp
test
push
rorb
scas
add
stos
shl
cmpsl
incl
or
pop
mov
repnz
jne
ret
insl
dec
shrb
outsb
shlb
call
incb
jae
cmp
jl
clc
call
jnp
lret
xchg
aad
arpl
cmpsb
adc
dec
scas
ljmp
jae
sbbb
out
mov
mov
stos
jle
inc
sbb
jmp
mov
jnp
and
inc
aaa
mov
mov
cltd
aam
or
test
shlb
enter
arpl
cmp
out
stos
sbb
jmp
js
imul
cmp
push
jle
repz
pop
dec
lret
sbb
mov
mov
ror
pop
icebp
out
add
cld
sub
jbe
xchg
dec
and
add
xor
push
into
fildll
or
and
mov
into
pop
enter
in
jl
mov
xchg
jmp
xchg
stos
sbb
inc
sbb
jns
shll
loop
outsb
aaa
stc
insb
mov
enter
shll
fs
pushl
filds
int3
mov
adc
mov
xchg
pop
sub
sbb
movsb
jns
xchg
cmp
pop
inc
or
push
sbb
ret
ror
sub
ljmp
call
fdivrs
jp
jecxz
sbb
and
and
insl
sub
int3
imul
mov
lahf
ds
xor
stos
pop
push
xchg
fimull
cmp
inc
adc
ljmp
push
sub
cmp
jns
aaa
nop
jae
mov
push
pop
imul
inc
xor
pop
andb
lea
inc
adc
mov
push
mov
inc
dec
xor
bound
push
push
sbb
or
fwait
mov
cli
insb
sub
dec
lcall
movsb
jns
pushl
or
jnp
aas
loopne
imul
lret
stc
sbb
xor
push
push
call
cmp
mov
int
mov
lds
xor
test
sub
jge
xor
ljmpw
cli
or
push
imul
jmp
incl
lds
adcl
add
cmpsb
xchg
mov
shrl
lock
mov
jbe
addr16
cmpsl
incl
add
cmc
lea
mov
imul
in
movsl
mov
adc
jnp
mov
test
xchg
inc
cmp
leave
dec
das
inc
clc
sbb
jge
jl
cmc
ljmp
cli
push
add
jns
fisubrs
aaa
push
imul
lcall
sub
lahf
in
in
ficoml
icebp
lahf
gs
or
stos
pushf
jp
push
lahf
repz
push
mov
call
ret
jb
scas
fisttps
sbb
and
imul
addr16
ror
fistps
inc
test
bound
jb
push
rorb
lcall
adc
mov
mul
std
push
xor
dec
lods
pushf
mov
mov
les
sub
test
lcall
repz
push
xchg
cltd
fstl
pop
xchg
mov
in
adc
rorl
loopne
in
in
xor
mov
add
js
xchg
or
test
out
xorb
pusha
inc
inc
fildll
push
adc
add
out
mov
jle
push
dec
adc
sahf
push
addr16
and
cld
jmp
inc
loope
mov
xchg
in
sbb
aad
adcb
sti
in
incl
push
inc
scas
out
cmc
xchg
sahf
dec
mov
insb
test
fcoms
je
popf
sar
aas
shrb
mov
ljmp
les
out
sub
lcall
xchg
imul
jno
out
stos
inc
dec
adc
popa
mov
push
daa
sub
lret
and
idivl
aas
shr
xchg
sti
gs
jg
dec
inc
scas
jg
pop
mov
fmul
incl
cld
pop
inc
pop
cmp
and
mov
xlat
push
dec
adcl
cld
xchg
sub
ljmp
sbb
adc
out
fwait
sbb
mov
xor
ds
dec
lcall
je
mov
sbb
push
add
lods
movb
pushf
repz
fildl
adc
lret
test
or
xchg
jb
gs
aad
sbb
pusha
cmpsl
fcoms
sar
mov
inc
dec
jbe
shrb
scas
cli
pop
push
lods
push
adc
jbe
jmp
jmp
add
adc
dec
pop
sbb
sahf
into
inc
cmpsl
or
arpl
jmp
enter
dec
inc
dec
shll
and
stc
inc
shlb
inc
and
inc
shlb
xor
pop
dec
or
adc
and
into
and
jo
mov
mov
in
xlat
mov
popf
jge
frstor
cmp
dec
jmp
in
fstps
fcoms
sbb
in
out
sub
out
movsl
sarb
xchg
pushl
out
cmp
sbb
in
add
lcall
mulb
es
jns
xor
jl
lods
sub
xchg
sahf
movsb
push
pop
nop
inc
scas
and
pop
and
popa
xorb
push
cmc
incl
nop
cwtl
jle
pop
adc
mov
fisubl
mov
stos
ljmp
sub
cli
jns
or
sti
adc
lock
data16
jmp
mov
movsl
ljmp
dec
repz
daa
in
xor
lret
daa
lods
iret
repz
pushl
inc
je
fsubrl
pop
or
sbb
cmpsb
jecxz
ret
jmp
in
sbb
jmp
repz
mov
pop
pushf
push
sbb
cld
mov
jnp
int3
fnsave
push
out
fisttpl
btr
outsb
or
ret
pop
cmpb
repnz
push
and
pushl
cld
in
scas
test
stos
enter
inc
call
incb
sub
sbb
arpl
sti
jmp
mov
mov
xor
dec
inc
cmovae
orl
and
mov
mov
mov
shll
mov
mov
stos
shr
mov
cld
mov
call
clc
push
push
push
sbb
mov
fldcw
cmp
addl
ja
sar
sbb
and
js
cltd
fdivrp
push
adc
pop
test
popa
hlt
or
and
popa
dec
inc
call
call
xlat
sub
cmp
imul
loop
sub
mov
sub
pop
xlat
pop
push
les
push
imul
push
ss
pop
mov
call
jecxz
mov
cmpsl
inc
mov
push
xchg
cmp
add
enter
inc
in
jl
pop
adc
jo
shr
adc
lret
push
sub
inc
out
cmp
cmpsl
push
loope
stc
jno
sti
js
int3
sbb
fcoms
push
lcall
loop
xlat
lret
jae
in
stos
in
lahf
sahf
enter
dec
pushl
xlat
loope
xchg
mov
arpl
les
scas
lods
lcall
mov
push
xor
xor
std
or
and
pop
inc
call
sbb
aaa
pop
jg
xlat
push
add
sbb
pop
and
xor
enter
jmp
dec
sbb
cmp
push
decb
mov
cld
or
popf
insb
mov
js
cmp
rcrb
lock
sarl
xchg
ljmp
sbb
or
call
sub
insb
pop
push
mov
dec
mov
mull
adc
xlat
out
dec
jbe
es
mov
stos
mov
cmpsl
addr16
dec
decb
ljmp
pushf
mov
dec
mov
incl
cvtdq2ps
xchg
fcomps
mov
mov
cmp
adc
sub
sar
outsl
nop
mov
sub
ja
mov
shll
movsb
add
aad
xor
loopne
je
stos
inc
sbb
outsl
aam
js
inc
mov
dec
int
push
mov
cld
int3
jbe
jecxz
inc
adc
ds
fs
pop
iret
sub
push
cmp
cmpsb
lcall
dec
inc
push
sti
aad
mov
add
repnz
mov
push
int
test
pop
hlt
roll
inc
outsl
sub
jmp
pop
repnz
cltd
mov
ror
mov
movsl
call
add
or
ljmp
out
lock
movsb
xchg
cmp
cwtl
or
in
hlt
out
adc
es
test
clc
lcall
mov
daa
mov
push
mov
movsb
cmp
fimuls
repz
sbb
out
or
xorb
jle
mov
mov
pop
nop
pop
call
inc
ret
sarl
or
movsb
jg
dec
mov
or
adc
insl
mov
fidivl
push
jns
jns
or
xchg
mov
negb
repz
pop
mov
hlt
mov
mov
jno
jp
and
repz
jle
lods
aaa
jp
adc
push
dec
dec
test
jbe
ljmp
mov
inc
ss
jle
and
sub
xor
sub
sar
test
cld
mov
push
dec
dec
mov
dec
cmpsb
roll
or
andb
cmp
add
lock
and
cmc
iret
and
fs
mov
pop
cld
lcall
das
inc
rcrb
test
push
dec
movsl
out
jne
ljmp
les
lcall
pop
pusha
fadd
in
nop
aad
mov
xor
mov
int
mov
fists
adc
loopne
loopne
sbb
call
repnz
lcall
jp
adc
jbe
repz
add
mov
pop
cli
inc
mov
add
xchg
cmp
es
cli
cld
cmp
fidivl
xor
out
in
or
clc
inc
inc
jbe
loop
add
mov
inc
or
aas
pop
hlt
aas
aas
xchg
out
dec
flds
jo
jp
out
sarb
mov
test
lock
xchg
or
out
mov
and
pop
cld
mov
mov
adc
inc
dec
xlat
sar
incl
mov
pop
mov
testl
leave
fstps
shrl
pop
ret
clc
inc
orb
pop
sub
cli
jmp
cmp
sar
mov
mov
xchg
test
insb
rclb
xchg
inc
sub
lods
xchg
pushf
mov
call
aas
adc
outsl
fs
add
xor
and
jle
jmp
mov
frstor
std
ja
or
mov
aas
out
leave
mov
mov
push
jle
mov
dec
clc
cmp
xchg
outsb
push
cmp
fldt
or
xor
sub
mov
jb
call
repz
or
add
mov
dec
icebp
scas
pushf
and
mov
lcall
xchg
fiadds
and
lcall
and
add
nop
sub
adc
insl
xor
jge
incl
arpl
roll
mov
add
mov
popf
add
mov
in
xlat
mov
ss
inc
push
cld
push
pop
call
mov
outsl
mov
fs
dec
cltd
test
add
clc
movsl
test
add
lds
test
fmulp
clc
call
sub
mov
scas
sub
pop
outsb
pop
add
loopne
es
stc
decl
call
or
stos
pop
clc
pushl
push
dec
pop
sbb
in
cmpsl
adc
adc
jbe
rcl
xor
incl
xchg
mov
shl
mov
xchg
subb
js
cmp
ljmp
cli
decl
popf
cwtl
lea
in
jbe
data16
or
xchg
adc
test
xlat
push
cld
sbb
ret
outsl
and
mov
sub
call
xchg
insl
push
push
loope
and
pushf
mov
jmp
jo
jae
sub
ljmp
sbb
mov
push
fnstsw
dec
push
cmp
mov
inc
xchg
pop
push
fidivrl
push
rcr
lret
inc
or
or
mov
ret
bound
iret
dec
ljmp
in
cmp
inc
mov
pop
mov
lret
mov
push
pop
add
pop
and
iret
and
ss
in
in
push
les
sbb
add
movsb
cs
sbb
loopne
sub
shrl
mov
shlb
sbb
fs
mov
imul
mov
xor
popf
or
mov
fmull
addr16
push
cmpsb
aas
add
jmp
dec
leave
jae
xor
daa
hlt
sub
repnz
fwait
or
std
pop
insb
int3
mov
inc
fimuls
lds
and
push
sar
ljmp
xchg
pop
shrl
mov
lret
in
shlb
mov
adc
inc
outsb
add
mov
lock
xchg
xchg
daa
mov
scas
dec
js
adc
lcall
push
out
push
adc
bound
mov
mov
sub
mov
incl
inc
int
cwtl
lret
pop
cmp
mov
xor
push
xchg
cmp
popf
mov
pushl
ljmp
dec
add
sub
fidivrs
mov
jl
mov
nop
inc
addr16
push
cwtl
ret
out
scas
mov
adc
cs
pop
movsl
cmc
call
pop
test
sbb
push
cmp
cld
xor
mov
inc
push
add
pop
xchg
lods
sub
test
push
mov
in
pop
xchg
incl
std
gs
cmp
adc
add
sub
jg
dec
loopne
pop
xchg
or
call
dec
inc
mov
and
cmp
jbe
shlb
jno,pt
dec
mov
adc
ss
call
dec
jg
mov
dec
sbb
dec
pop
inc
mov
mov
pop
arpl
sub
jmp
lahf
jmp
inc
mov
loop
popf
std
aaa
fbld
hlt
in
lock
mov
sbb
test
push
out
lea
inc
mov
inc
icebp
out
cwtl
insb
dec
data16
out
add
mov
fucomp
push
dec
imulb
pop
int3
cmpsl
inc
mov
pop
fnstcw
pop
pop
cmp
push
clc
pop
inc
repnz
adc
add
pop
addr16
add
jmp
xchg
pop
mov
adc
jb
mov
jae
xchg
lcall
sbb
mov
jp
and
insl
sbb
mov
loopne
xchg
add
lret
repnz
lcall
xchg
adc
cltd
pop
mov
loop
xor
fisttpll
sbb
sub
rcl
fdivs
daa
xor
push
adc
repnz
fistpll
scas
cmp
fucomi
lret
out
fsubr
mov
idiv
ljmp
push
in
jno
dec
jo
mov
in
jns
mov
ficoml
idivb
mov
out
jo
fwait
mov
sbbb
cmpsl
push
jp
mov
aam
or
sahf
inc
pop
xlat
pop
and
mov
lcall
cltd
stos
xchg
cmp
mov
ljmp
cmp
mov
cmpsl
mov
orb
sub
adc
or
cmp
pushl
xchg
mov
sbbl
andl
jo
addr16
mov
call
bound
xchg
sub
pop
push
orb
add
sbb
add
inc
shl
mov
lcall
pop
stc
in
adc
ficoms
nop
push
push
push
aas
adc
push
cli
inc
std
cmp
data16
scas
insb
xchg
aam
pusha
sbb
fsubp
sub
sub
push
push
jmp
cmp
mov
push
insb
cmp
pop
mov
lcall
or
imul
cwtl
test
in
int3
sbb
pop
icebp
ljmp
jge
mov
mov
push
in
ret
lcall
lcall
in
daa
in
jge
mov
mov
or
jmp
pop
pop
std
ljmp
je
cmpsl
push
sub
xchg
adc
arpl
call
sbb
inc
outsl
mov
adc
mov
decl
in
aaa
insl
sub
ds
mov
mov
gs
popf
add
ljmp
cmp
cmp
orl
xorl
out
scas
dec
push
jl
push
push
mov
fists
rol
scas
mov
xorb
xchg
lcall
mov
leave
mov
fistps
mov
xlat
lods
aas
lock
icebp
mov
adc
ljmp
mov
sub
mov
xchg
or
adcb
ljmp
fsubl
sbb
sub
loope
ja,pn
bound
fildll
call
ja
mov
jbe
mov
xchg
push
cmc
mov
mov
out
sahf
jb
pusha
in
adc
popa
repnz
jmp
js
jl
xor
in
test
jbe
push
hlt
fcomip
lcall
ss
and
jo
dec
add
mov
push
pop
cmp
repz
jecxz
fsubl
aaa
es
mov
pop
cmp
out
push
push
cmpsb
add
sbb
aad
add
popa
lock
loop
scas
cltd
cmp
loope
dec
repnz
xchg
sbb
jae
addr16
cwtl
cmpsb
loope
fildll
popf
cmp
movsb
fiaddl
xchg
add
dec
mov
incl
or
mov
dec
mov
ror
lods
mov
xor
int
lcall
mov
out
or
jno
loopne
mov
mov
lcall
dec
out
xchg
pop
xchg
or
push
add
cmp
push
xchg
add
jae
jg
movsb
pop
fcmovb
mov
sub
in
subb
jnp
decl
in
ljmp
add
pop
pushf
hlt
lcall
fiadds
push
dec
dec
clc
pop
dec
add
jns
cwtl
xlat
and
jge
push
out
and
adc
sahf
nop
fcomps
call
xchg
test
jnp
and
mov
rcrb
push
mov
adc
inc
iret
clc
ds
pushl
movsl
fistl
sub
arpl
lahf
mov
mov
mov
mov
fdivrl
and
push
sbb
mov
fisubrs
jmp
pusha
out
call
pop
scas
inc
inc
fdivr
int3
push
daa
xchg
fcmovb
push
push
cli
testb
iret
add
add
call
cmp
push
mov
pop
adc
jmp
aas
pop
sub
popf
push
incl
jl
movsl
sub
repnz
mov
cmc
call
ret
dec
leave
mov
cmpsl
jo
add
dec
iret
mov
adc
xchg
inc
jle
stc
adc
jp
dec
adc
in
push
add
enter
rolb
dec
jmp
jne
ficomps
incl
xor
pop
stos
xor
xchg
out
ret
call
pop
mov
pop
lods
pop
test
call
add
xchg
fnstsw
ljmp
in
gs
cmp
mov
incl
add
int3
fs
jbe
add
sbb
rcr
pop
pushl
push
adc
gs
std
sub
aaa
shrb
ja
mov
jp
jp
mov
ficompl
xor
mov
decl
cmc
incl
aas
lahf
mov
pop
fsub
movsl
jl
inc
std
add
pop
sar
roll
jbe
sub
fbld
pop
mov
pop
mov
sar
cltd
pop
cmp
push
ljmp
iret
mov
je
and
stos
sbb
mov
imul
dec
mov
dec
jl
js
and
call
push
xchg
mov
inc
pop
cmc
inc
dec
and
xor
rorl
in
stos
push
push
fs
incl
inc
addr16
cmc
dec
pop
add
dec
inc
jl
stos
add
test
xor
sbb
xchg
mov
call
push
mov
cmp
pop
add
cmp
or
dec
test
jmp
inc
jl
rclb
add
mov
and
and
push
xchg
sbb
dec
sub
stc
clc
mov
mov
lret
jg
or
jo
and
jno
jecxz
add
decl
sbb
daa
mov
aaa
loope
xor
xchg
decl
repnz
daa
lea
jp
lahf
lea
dec
pushf
and
arpl
pop
dec
addr16
mov
ljmp
div
sbb
loope
pop
mov
xchg
or
pop
je
push
inc
repnz
call
bnd
outsl
push
or
ss
sub
ss
jo
adc
out
aas
or
mov
or
xchg
lahf
xchg
stos
fdivrp
mov
je
pop
lea
inc
jb
leave
rcrb
mov
rcrb
stos
addr16
and
pushl
push
xchg
testb
or
subb
push
ljmp
push
xor
nop
aad
int
test
orl
ficoms
out
mov
or
decl
xchg
jecxz
dec
push
cmp
lea
icebp
call
adc
lea
mov
call
add
or
adc
inc
ljmp
mov
lcall
fldt
cs
inc
imul
inc
call
std
jg
ret
stos
dec
hlt
sti
pop
xorb
mov
inc
or
call
in
sahf
out
loopne
jl
dec
and
adc
call
pop
jo
push
xorb
cmp
fbstp
sub
cld
xor
cld
pushl
pop
mov
fs
dec
sub
sub
push
cwtl
popf
mov
push
movsb
adc
psubw
call
aaa
nop
fcoml
push
lods
adc
push
push
hlt
mov
cmp
pop
bound
outsl
push
pop
hlt
xchg
lcall
pop
clc
and
cmp
mov
adcl
or
add
call
mov
push
mov
mov
cmp
movsl
addb
mov
js
mov
aas
ljmp
nop
or
lcall
je
adc
xor
sbb
aas
sbb
leave
jno
or
fucomi
popa
mov
jns
movsb
push
fmull
push
loop
sub
call
xchg
aaa
sub
xchg
sub
jle
aas
cmp
mov
rol
loop
push
add
shlb
movsb
out
sbb
push
in
call
or
jmp
shlb
enter
xor
xor
imul
sub
mov
icebp
cmpl
add
stc
mov
pop
sub
loope
hlt
add
add
call
fs
jecxz
js
shlb
repz
test
sbbb
sti
lret
jg
or
div
jne
jmp
cmp
or
pop
loopne
xchg
sti
imul
js
in
mov
mov
or
mov
adc
out
jno
sbb
popa
cld
add
mov
xchg
mov
jg
push
xor
xchg
hlt
sub
fists
popf
push
das
cmp
aaa
mov
sub
push
pop
loopne
ja
mov
sub
test
or
add
or
jg
push
mov
into
leave
ret
push
mov
shlb
das
scas
psllq
in
cwtl
int
sub
decb
lret
jge
out
add
in
push
arpl
jno
dec
sbb
inc
cli
sub
lcall
clc
lret
stos
stos
mov
movsb
loop
pop
mov
js
jmp
push
ljmp
outsb
cmp
loop
pop
lahf
cmp
adc
fidivrl
out
clc
jns
std
jle
mov
inc
dec
jnp
or
xor
or
sub
push
cli
incl
add
push
jns
xor
icebp
test
ljmp
lcall
sub
call
insl
pop
sbb
rcrl
movsl
inc
inc
clc
repz
in
int
filds
xor
mov
or
inc
xor
mov
or
imul
pushl
sbb
cmp
fbstp
in
xchg
into
lock
movb
and
out
es
ret
out
lds
incl
scas
sbb
cs
pop
mov
inc
in
jnp
xchg
add
enter
jo
je
jg
ljmp
ficoms
mov
out
mov
adcl
stc
repnz
add
jg
inc
addl
movsb
in
imul
into
icebp
push
mov
push
mov
call
movsb
mov
cmp
add
cs
loopne
ds
adc
mov
mov
xor
dec
aas
incl
jmp
mov
sub
adc
in
pop
mov
arpl
mov
dec
or
sar
mov
xchg
sarb
call
mov
dec
jg
imul
out
in
fs
mov
pop
mov
int3
xchg
inc
int
mov
push
xchg
cli
xorl
and
jmp
lods
fwait
pop
outsl
mov
fldt
outsb
sbb
decl
cltd
test
pop
push
not
cmp
stc
jg
sbbb
icebp
fisubl
cli
idiv
call
push
dec
jnp
mov
hlt
dec
sub
or
aas
jl
nop
cmpsb
std
cld
imul
or
subb
imul
sbb
jg
pusha
psubb
adc
mov
push
jmp
and
inc
cmp
aam
cwtl
fwait
adc
inc
dec
dec
sbb
outsb
pop
inc
adc
mov
jmp
repz
lods
pop
shrb
in
jb
notb
pop
xor
loope
mov
cmc
incl
ret
sbb
divb
push
mov
loop
jne
loope
rcl
fistps
cs
xlat
cmpsb
mov
aam
push
in
jmp
xchg
push
adc
or
xchg
mov
jne
idivl
push
add
test
pop
cmp
or
cli
pop
xor
push
fildll
jmp
ud2
push
lret
xchg
subl
lcall
fisttpll
xchg
lcall
add
xor
jg
and
sub
sub
rep
xor
cmpsl
push
jp
decl
or
cld
lock
test
mov
jmp
mov
out
push
dec
out
movsl
incl
push
imul
loopne
xor
outsl
lahf
arpl
inc
xchg
mov
jl
pop
mov
aaa
add
fsub
inc
fwait
addr16
call
incl
je
pop
lea
in
or
mov
mov
pop
sti
push
and
les
outsb
test
jo
mov
jg
mov
or
test
xchg
jl
push
pop
pop
addr16
das
pushf
jl
or
add
stos
jmp
pop
xchg
stos
sub
mov
mov
inc
xchg
push
fcomps
pop
mov
lcall
pusha
aas
nop
mov
neg
xor
dec
pop
lds
pushl
ret
clc
sahf
aas
and
jnp
mov
push
jno
js
std
xchg
cltd
or
jg
or
imul
lahf
push
ljmp
adc
or
or
fwait
pop
xor
lcall
xorb
daa
in
mov
pop
push
aam
pop
sti
xor
imul
dec
add
rol
xchg
int3
lcall
mov
rclb
adc
movsl
mov
call
sub
pop
push
mov
rcll
cli
xor
ljmp
rclb
loopne
xchg
inc
push
cmpsb
xchg
mov
movsl
lds
dec
test
push
divl
cmc
sahf
out
adc
decl
in
inc
mov
push
addl
adc
divl
neg
sub
cli
jns
cmp
fisttpl
lds
movb
jle
xchg
cli
mov
mov
pop
mov
push
cli
and
outsl
aas
jb
mov
adc
ljmp
mov
xchg
pop
cmp
inc
push
adc
mov
lcall
test
jl
sbb
mov
jl
ljmp
insb
lret
call
pushl
pop
jb
mov
add
imul
cmpl
mov
push
pop
cli
lea
xorb
dec
call
das
incl
notb
popf
pop
jecxz
push
adc
pop
sub
testb
cld
mov
pusha
hlt
test
dec
jno
sub
adc
ds
lcall
in
negb
rorb
fisubrs
adc
xchg
inc
outsl
clc
lcall
inc
mov
movsl
cli
cmp
addr16
or
leave
std
std
or
and
sub
jg
cmp
aad
mov
fs
mov
pop
aad
imul
xchg
clc
sarb
jge
mov
ficomps
pop
in
pop
es
push
stos
mov
jmp
add
mov
pushf
xor
incl
pushf
mov
cmc
jb
scas
mov
ret
call
fldcw
nop
mov
mov
imul
and
mov
jmp
cmp
sbb
mov
dec
bound
fwait
mov
cld
pop
dec
inc
cmpsb
pop
push
pop
add
ror
inc
into
mov
pop
cld
mov
aam
dec
mov
jle
xor
cmp
rorl
stos
jmp
or
adc
dec
outsb
mov
mov
out
mov
in
or
add
push
sub
or
fwait
bound
adc
lods
push
loop
fnstsw
cmc
fdivrs
add
pop
xor
cld
jp
xchg
sub
mov
push
xor
lcall
shll
daa
add
add
push
dec
push
mov
scas
mov
mov
adc
ljmp
popa
leave
jns
pop
imul
int3
push
dec
jp
repnz
movsb
adc
add
dec
scas
mov
hlt
lcall
jl
in
add
mov
icebp
mov
lcall
xor
mov
xor
jns
mov
outsl
fimuls
mov
insl
lret
mov
mov
cmp
push
fsubrl
push
mov
imul
incl
xchg
je
insb
das
push
xchg
sahf
xchg
or
or
mov
and
fs
sbb
jecxz
adc
pop
or
or
out
pop
or
aaa
imul
or
mov
call
mov
js
ja
jp
or
out
out
jae
mov
cmp
mov
pop
pop
call
add
fildll
sub
cmpsb
das
dec
inc
xchg
dec
fmuls
icebp
cmc
lock
std
adc
jmp
out
add
aaa
cmp
scas
nop
cltd
outsb
adc
inc
pushl
lock
add
shr
or
int3
jno
ljmp
inc
sbb
andb
mov
sub
fwait
inc
fidivs
push
lret
xor
ficompl
sub
add
jmp
or
arpl
sbb
ret
jge
inc
test
pushl
sbb
rcrb
cmp
je
addr16
mov
aaa
xorl
and
rclb
fbld
or
mov
lcall
repz
mov
test
jp
add
adc
jmp
xchg
test
cmp
mov
mov
outsb
cmpsb
ljmp
push
mov
jae
aad
cltd
jns
mov
jbe
jb
add
push
push
mov
imul
std
sti
or
push
rolb
js
stos
stos
mov
jmp
add
sub
xor
imul
pop
out
stos
or
mov
decl
cmp
pop
shlb
add
jle
push
cmc
pushl
mov
fcmovnb
pop
lds
jg
int3
or
inc
inc
in
cld
decl
mov
cmp
mov
and
loopne
xlat
pop
sbb
inc
mov
mov
xor
in
jae
adc
jge
mov
jle
shll
cmp
mov
in
out
outsl
cmpsl
gs
ljmp
mov
cld
adc
test
mov
dec
dec
inc
ljmp
arpl
cmpsb
pop
hlt
movsb
iret
jb
xchg
out
out
xchg
enter
fcoml
cmp
and
fsubp
pop
outsb
sub
sub
std
call
inc
pop
mov
pushf
xchg
int
ret
shll
sbb
xchg
loop
ret
mov
in
mov
out
sbb
scas
mov
xchg
scas
push
out
orl
mov
cmp
push
scas
bound
mov
cmp
adc
mov
mov
adc
fimuls
mov
jne
test
daa
hlt
pushl
mov
and
ds
imul
fadds
mov
leave
mov
incl
xchg
mov
fsts
out
mov
jae
sbb
test
pushl
idiv
mov
popa
loop
flds
movsl
shlb
xchg
dec
mov
out
push
inc
jge
adc
sahf
or
dec
out
push
nop
xor
cli
pop
cmp
bound
mov
dec
mov
adc
pushl
adc
jl
ret
faddl
jcxz
arpl
sub
incl
dec
mov
jg
jl
mull
jle
dec
loopne
pop
in
and
insl
pop
cmpsb
jecxz
mov
mov
push
pop
aam
mov
jae
xchg
daa
fs
add
jae
rol
xchg
mov
xchg
dec
sub
mov
in
sub
pop
mov
aaa
out
movsb
push
decl
mov
inc
lret
xchg
iret
jne
inc
dec
je
cmp
xor
push
sub
out
orb
pop
jb
fwait
in
mov
push
jg
and
popf
cld
mov
xchg
call
decl
lahf
pop
loop
into
pop
add
jge
imul
ds
mov
mov
insl
lock
outsb
stos
scas
nop
pop
ss
push
xor
or
movsb
push
ret
mov
lret
mov
sub
clc
jp
jge
pop
xor
cmpsb
movsl
cmp
ljmp
or
mov
push
xchg
pusha
sbb
arpl
dec
push
sbb
jmp
cltd
test
xchg
mov
rorl
testb
mov
xchg
pop
mov
fsubrp
sarb
incl
push
leave
mov
jb
outsl
repz
push
jle
cmp
lcall
jns
jnp
repnz
add
add
imul
shl
and
addr16
mov
std
jg
xchg
incb
sub
cmp
jge
cmpsl
add
and
sbb
int3
push
into
jg
pop
sub
push
fldenv
cmp
incl
pop
xchg
sub
in
jle
call
jg
sahf
mov
xor
mov
xchg
arpl
jge
pop
dec
cs
into
out
inc
cmp
js
sub
ljmp
out
mov
and
cmpsb
jmp
sub
fbld
push
jp
adc
enter
cmp
mov
rorl
ret
add
mov
mov
add
loop
int
push
icebp
adc
jg
xchg
lock
and
mov
sarl
imul
mov
loopne
incl
scas
xchg
mov
xor
ds
pop
outsl
lahf
int
jl
loopne
xchg
pop
rorb
sub
je
lds
incl
mov
lahf
ficomps
dec
gs
mov
test
push
jno
fmul
mov
add
dec
lods
push
or
jns
adc
hlt
add
decb
mov
lcall
mov
loop
fmull
jne
int3
shlb
cmpsl
shrl
add
jmp
fildl
cmp
dec
pop
dec
ljmp
shr
and
adc
push
les
pop
and
or
xchg
dec
imul
adc
nopl
insb
call
push
bnd
dec
fistps
sub
lds
cmp
lahf
add
mov
and
decl
and
xchg
and
clc
pop
add
jmp
ret
decl
cld
sbb
cmp
ret
pop
pop
cwtl
fildll
push
push
dec
push
imull
jge
subl
ss
mov
push
sub
mov
mov
jmp
rcll
mov
pop
stc
daa
dec
jne
fs
ror
cmp
call
mov
inc
xlat
jo
or
xchg
fld
dec
andb
jg
pop
fmuls
jg
pop
sar
inc
sbb
pop
adc
xor
cmp
faddl
clc
pop
mov
aad
mov
mov
push
or
xor
xchg
or
xor
shlb
in
adc
leave
push
inc
repnz
decl
and
sub
iret
pop
adc
dec
fimull
add
rorb
sub
cmp
and
jmp
xchg
fsubs
and
mov
sbbb
push
xchg
fidivrl
out
adc
incl
xchg
inc
pop
pusha
or
sub
dec
ffree
call
adc
cmpsb
pusha
outsb
cltd
cltd
push
push
dec
loopne
xchg
cltd
das
sbb
xchg
mov
scas
cmp
jo
mov
and
testb
dec
pop
mov
arpl
xor
fisubrs
lahf
xchg
dec
jbe
test
lock
mov
xchg
sbb
and
inc
dec
das
int3
icebp
loopne
shlb
jmp
add
test
sbb
js
mov
pop
pop
lock
int
out
mov
fwait
push
mov
inc
lods
shll
in
xor
mov
ss
in
movsb
and
push
cmp
add
mov
xor
xchg
sub
fcomip
pop
mov
jnp
out
and
insl
shll
inc
inc
pop
rcrb
jmp
sub
outsl
jp
mov
movsb
popa
aam
stc
lods
in
test
dec
movsb
ret
lods
jg
lcall
mov
cli
addl
mov
push
lret
fdivs
mov
ljmp
pop
arpl
jnp
mov
ds
mov
sar
push
ljmp
loopne
push
jl
cmp
pop
xchg
stc
and
in
mov
in
jmp
cmp
lds
cwtl
imul
lret
loopne
cli
call
or
sub
inc
mov
xor
dec
into
cmpsl
adc
decl
pop
ljmp
fsubrl
mov
repz
mov
int3
jns
pop
jno
ret
pushl
add
ror
sti
mov
js
data16
sarb
xor
add
mov
jae
rorl
sub
sbb
add
aas
mov
push
daa
xchg
mov
hlt
movsb
dec
dec
cmp
pop
lret
xchg
ds
or
outsl
push
ljmp
xor
fnstsw
iret
pop
das
incl
and
popa
push
jne
mov
xor
dec
mov
push
cmp
shl
outsb
sub
lcall
sub
xchg
sbb
imul
dec
mov
cwtl
or
jb
or
ljmp
push
scas
lret
arpl
jecxz
gs
icebp
idivb
cmp
pop
dec
cmp
mov
push
cltd
inc
aad
cmp
mov
xchg
out
scas
sahf
enter
cmpsb
pop
dec
mov
xchg
mov
mov
sti
mov
imul
movsb
daa
popf
add
jl
xor
bound
dec
js
into
outsb
and
mov
call
xor
push
ja
addr16
aas
test
pop
repz
in
in
in
in
aaa
sbb
outsb
add
into
sbb
std
into
fstpl
adc
sbb
movsl
leave
mov
cmpsb
scas
add
jnp
nop
leave
adc
jmp
adc
xor
push
add
js
loopne
aas
filds
fmull
adc
lahf
inc
je
mov
incl
imul
data16
insb
mov
mov
pop
mov
push
lahf
mov
ds
incl
xchg
dec
popa
ror
mov
push
sbb
or
incl
fildl
test
sub
clc
pop
sbb
xchg
push
sub
xchg
inc
pop
fcomip
mov
add
ja
loope
or
rorl
loope
jo
pand
ret
jmp
xlat
mov
jge
aad
add
sbb
lds
mov
stos
adc
cwtl
mov
pop
les
cld
dec
ss
scas
sub
mov
pop
aas
stc
lcall
inc
sbb
inc
sbb
xor
push
xchg
and
decl
inc
stos
cmp
mov
fisubrl
mov
push
clc
mov
jne
pop
ljmp
and
or
pop
hlt
bound
and
xlat
inc
and
mov
xchg
pushf
scas
out
mov
mov
fcmovnu
jne
je
fisttps
ljmp
in
sub
lcall
incb
sbb
mov
push
mov
push
xchg
movsl
cmp
add
pop
cmpsb
dec
mov
jl
cmc
dec
jo
mov
dec
mov
decl
out
dec
adc
lock
jg
sbb
js
out
lcall
in
pusha
inc
lcall
mov
add
pop
jg
fdivr
pop
std
call
rcrl
into
cmp
push
xor
pop
lods
cli
out
shr
add
scas
sbbb
decl
sub
into
push
dec
out
mov
sar
pushl
jecxz
pop
and
daa
aaa
stos
cmp
shrb
xchg
sbbb
lret
fisttpll
call
incl
das
lret
xlat
push
rorb
jg
call
in
mov
jle
mov
add
and
ss
ret
jns
fbld
in
std
movsl
cltd
cmp
in
jge
ss
ficomps
shrl
xchg
stos
fcoml
clc
inc
sub
pop
icebp
dec
outsb
out
and
mov
sbb
sub
out
cli
ss
add
inc
jl
ret
ljmp
xor
insl
mov
xor
mov
mov
decl
or
and
cld
xchg
mov
mov
xchg
out
shlb
nop
cld
pop
jae
push
mov
cmp
decl
jb
mov
adc
xchg
sub
mov
cmp
loope
xchg
jg
jne
cli
std
xor
mov
push
dec
mov
xchg
mov
pushl
inc
inc
cltd
adc
out
dec
pop
lret
xchg
rcl
test
std
and
lock
das
sbb
cli
xchg
lret
and
xchg
je
fbld
incl
xor
lret
lods
jb
test
aaa
xchg
pop
andb
scas
ja
cmpsb
jmp
std
push
jne,pn
divl
push
jl
test
outsl
push
and
fbld
mov
cmp
out
pop
mov
lock
into
movb
pop
lock
xchg
pop
paddd
jb
fimuls
adc
mov
mov
lcall
leave
jnp
rcrb
in
mov
arpl
movsl
cli
sbb
aas
add
shll
lds
lock
je
shr
aam
stos
and
mov
out
ljmp
or
push
mov
test
rcll
filds
decl
adc
pop
fsts
lods
sub
incl
pop
dec
dec
push
fidivrl
fidivl
xchg
test
xchg
rorl
mov
jne
inc
cmp
imul
jg
mov
cld
aam
imul
popf
jb
loop
mov
mov
or
mov
imul
jne
in
out
mov
mov
outsb
mov
adc
and
test
nop
jmp
xlat
xor
fistps
pop
adc
leave
call
inc
and
std
cwtl
sti
add
cmc
aaa
cmp
and
fnstsw
jmp
decl
in
mov
rcrl
inc
out
add
mov
cmp
pop
pop
or
imul
sub
out
pop
divb
push
cltd
pop
push
inc
nop
cld
xchg
cmpsl
arpl
cltd
ljmp
fildll
cmpsb
rcll
sub
in
mov
pusha
or
call
xchg
adc
jnp
lahf
loope
dec
int
fisubrl
jg
xor
jmp
xlat
in
inc
adc
mov
nop
and
jecxz
loope
incl
dec
jmp
inc
div
pop
sbb
cmp
mov
fcompl
imul
in
add
cmovnp
push
add
or
pushl
lea
mov
in
je
lahf
mov
mov
decl
mov
out
je
mov
add
imul
mov
test
pop
push
jb
mov
cmp
repnz
ds
fnstenv
xor
adc
shlb
aam
mov
mov
dec
jns
pop
xor
add
scas
pop
out
push
fbld
jno
xorl
hlt
call
sub
xchg
sti
icebp
jo
mov
ljmp
xchg
sbb
xor
cmp
jae
ficompl
ja
and
stos
std
js
ljmp
mov
je
pop
rcll
cmp
fs
pop
outsl
lret
xchg
clc
popf
jae
lahf
dec
int3
enter
lahf
xor
jg
mov
int3
inc
jo
mov
mov
cmp
dec
les
push
sbb
cmp
pop
pushl
pop
in
adcb
cmp
sub
cmp
incl
jns
sub
faddl
push
fists
clc
mov
push
and
jbe
adc
jle
fisttps
loope
inc
dec
jg
int
adc
stc
ljmp
and
cwtl
sbb
ljmp
pop
data16
xchg
dec
sbb
movsb
push
add
incl
lock
pop
dec
test
cmc
cltd
fstl
xor
jg
sbb
fisttpll
adc
in
mov
je
add
adc
fcmovb
incl
or
jl
incb
mov
lea
pop
hlt
mov
lcall
add
cmp
jecxz
jge
in
ds
lods
lahf
fadd
mov
fiaddl
stos
jecxz
scas
aaa
push
pop
les
mov
pop
movsl
and
mov
pop
lret
aaa
pop
test
push
daa
decl
add
test
lods
adc
and
jecxz
lock
fcomip
cmpsl
out
cli
fisubrs
nop
and
or
pushf
jg
sarb
movsl
adc
push
pusha
mov
loope
jg
lcall
sub
mov
xor
mov
lods
pop
pop
enter
call
mov
mov
nop
cmp
sub
int
pop
cwtl
inc
decl
mov
orb
xchg
popf
out
mov
or
jmp
jnp
pop
mov
push
sub
push
testl
int
adc
mov
inc
fdivp
mov
mov
incl
movsl
lcall
jg
cwtl
cmp
lret
and
inc
les
push
xchg
jne
negl
test
cmpb
rcrb
sub
iret
cmpsl
ljmp
jnp
es
imul
cltd
mov
jnp
dec
ss
movsb
mov
xchg
pop
add
xchg
pop
jp
cld
inc
mov
cwtl
lea
sbb
das
jae
push
in
leave
add
and
adc
std
mov
aaa
nop
lret
xchg
cmc
and
sub
push
pop
inc
mov
in
testl
lock
adc
add
scas
sbb
inc
mov
lahf
out
dec
xlat
decl
jmp
lods
xor
jns,pt
in
in
insb
xchg
jnp
dec
adc
inc
push
push
push
cld
out
push
les
dec
nop
ljmp
mov
jge
shrb
imul
dec
jle
jbe
pop
or
cli
cmpsl
sbb
stos
mov
dec
fistpl
or
shr
xchg
and
repnz
movsb
iret
mov
jo
mov
aam
cld
dec
ret
dec
fxch
xor
ljmp
stos
stc
mov
call
mov
cmp
mov
data16
push
mov
mov
jmp
pop
mov
movsb
and
test
pop
hlt
lret
aas
dec
lods
js
sub
jmp
lret
jnp
push
divb
pop
in
lods
and
std
jmp
jb
idivb
mov
stos
mov
je
mov
stos
pop
mov
or
mov
mov
xchg
aas
lret
aam
dec
cli
push
hlt
dec
movsl
pop
mov
jle
push
out
xor
call
lahf
lret
adc
add
stos
jno
add
mov
jmp
call
sbb
hlt
jne
sbb
in
mov
mov
cvtpi2ps
mov
pop
adc
je
mov
fsts
pop
cmpsl
jns
or
ficoms
mov
inc
sti
filds
xor
movntps
pop
lcall
sub
fs
inc
ss
inc
and
jmp
addb
inc
mov
gs
ret
adc
mov
std
test
call
rolb
incl
aam
scas
lcall
mov
mov
andl
orb
aaa
std
xlat
lret
mov
es
cmp
out
mov
sub
sub
rcl
shrl
in
xchg
inc
loopne
insl
push
sbb
call
lcall
push
mov
scas
sub
sarl
bound
dec
into
mov
fsts
add
jmp
xchg
xor
mov
lcall
dec
enter
mov
idivl
out
test
lcall
mov
sub
call
scas
or
cmpl
push
xchg
mov
sub
or
pusha
into
pop
lds
xchg
sub
call
xlat
es
stc
fdivrl
adc
inc
jne
ficomps
test
aam
roll
call
test
int3
aaa
add
enter
mov
gs
fbstp
xlat
sbb
push
sar
out
pop
pop
fsts
xor
lret
inc
aad
jmp
ds
icebp
mov
idivb
ljmp
rolb
leave
sti
dec
jmp
push
mov
decl
sti
ja
or
mov
loop
ss
or
inc
sub
iret
fisubrs
add
es
incl
push
clc
pop
push
sbb
xlat
xchg
inc
cmp
pop
inc
mov
cmpsl
sub
mov
sbb
or
es
call
fs
lods
stos
push
in
cmp
pop
test
sub
ljmp
pop
outsb
push
sbb
add
fidivrs
repnz
mov
push
popf
xchg
rorb
iret
insb
gs
aas
sbb
adc
leave
dec
fsts
fwait
arpl
mov
sahf
adc
decl
iret
stos
jnp
mov
lcall
pop
out
mov
dec
push
xchg
sub
insb
aas
mov
xchg
add
repz
nop
hlt
incl
idivl
call
push
xchg
push
mov
mov
sbb
faddp
sub
xchg
jb
jmp
adc
aam
stos
out
sub
aam
leave
dec
test
ficoms
sti
lcall
and
aaa
bound
mov
xchg
sbb
pop
sub
imul
pusha
repnz
incl
add
mov
scas
outsb
xlat
aas
enter
fwait
mov
stos
insl
fwait
pop
rorl
incb
cmpsb
insb
jg
sahf
bound
dec
fxtract
sbb
decl
cmpsl
out
xchg
testl
mov
call
dec
cmpsl
loop
jne
xor
clc
and
cld
mov
outsl
ds
es
sti
outsl
push
aas
enter
mov
movsb
pop
mov
adc
mov
cmp
jbe
jo
sub
pavgb
addr16
dec
outsb
sub
ds
pop
and
pop
dec
and
inc
mov
jne
lahf
mov
nop
mov
arpl
jl
cmp
xlat
aam
mov
decl
daa
es
xchg
mov
out
pop
adc
movsl
inc
outsb
or
fwait
and
jb
pushl
incl
fisttps
push
and
data16
inc
pop
les
mov
cmp
incl
jnp
pop
jns,pn
mov
cs
arpl
arpl
pop
scas
cmc
push
inc
adc
ss
dec
xor
cltd
decb
add
inc
js
enter
push
stc
in
call
and
cmp
repnz
mov
sub
in
xor
push
movsb
ret
push
push
jmp
fsubrl
mov
mov
pop
cwtl
cmc
mov
pop
out
xor
decl
mov
adc
xchg
push
popf
shr
incl
fidivs
sti
adc
xchg
mov
sti
push
jae
or
pop
pop
cwtl
xchg
jbe
cmpsl
clc
lcall
or
les
jbe
comiss
jg
adc
bound
mov
pop
xor
cld
arpl
enter
fldcw
add
cmpsb
data16
inc
outsl
jecxz
inc
mov
data16
xor
out
test
mov
loope
fwait
or
les
push
push
xchg
dec
std
lcall
in
push
iret
jecxz
mov
roll
inc
std
fists
hlt
adc
pop
cmp
inc
outsb
push
icebp
jg
mov
push
xor
inc
or
call
mov
shlb
shll
cmp
add
lea
pop
mov
call
lret
or
clc
outsb
xchg
push
pop
insb
stc
sub
decl
inc
add
test
jg
jg
fldenv
cmc
es
les
outsb
push
daa
mov
jg
fistl
jl
dec
cmp
cmc
fwait
adc
addb
and
push
sbb
pushl
aaa
inc
add
dec
pop
dec
mov
les
jmp
jno
enter
xchg
imul
jmp
and
cltd
sbb
enter
shrb
push
lret
mov
jae
imul
decl
mov
push
xor
ror
mov
aas
pop
xchg
jp
add
push
mov
xchg
jmp
clc
inc
lahf
mov
adc
fnstsw
js
cmp
cmp
sbb
sub
bnd
adc
xor
decb
leave
jg
inc
icebp
repnz
sarb
and
popa
clc
jp
mov
aad
lcall
clc
ret
add
addr16
shl
addl
cli
pop
push
inc
pop
push
in
and
xchg
xlat
ljmp
pop
lret
add
jle
inc
ret
decl
repnz
dec
push
scas
sarl
inc
sbb
inc
popa
push
or
fdivrp
add
stos
push
int3
ret
je
pop
push
in
ja
decl
pushf
push
mov
cmpsb
shlb
dec
mov
incl
fistps
ljmp
push
cltd
sarl
adc
sub
jmp
sub
and
data16
dec
jns
inc
mov
sbb
mov
repz
fs
std
jp
pop
jge
mov
hlt
pop
add
push
jg
call
pop
dec
inc
or
xor
enter
test
movsl
pop
add
scas
and
pop
mov
bound
pop
decl
lods
mov
mov
pop
cmp
inc
jne
fwait
rol
scas
push
or
std
and
daa
call
ret
pop
push
sub
sbb
out
mov
or
sbbl
aam
cld
pushl
fisubl
jg
pop
mov
into
jo
fmull
test
das
mov
adc
cli
dec
adc
push
sub
sub
fisubrs
outsl
and
inc
rolb
push
out
push
into
inc
xor
sub
enter
hlt
and
ljmp
fs
xchg
lea
xchg
jmp
add
push
sub
push
fiadds
aas
add
movsb
dec
add
fs
shrb
aas
inc
xchg
pusha
inc
jmp
push
pop
in
push
sbb
pop
mov
inc
or
or
jb
out
call
loopne
cmp
push
mov
pop
adc
mov
dec
jne
inc
clc
ljmp
int
mov
jbe
add
clc
incl
mov
test
sbb
pop
mov
stos
out
cmc
or
movsb
stos
and
add
cmpb
jg
lods
loopne
incl
sbb
ja
xchg
ljmp
ds
int3
xor
mov
inc
sysexit
inc
mov
push
fdivr
lcall
cmpsb
out
bound
push
and
pop
jle,pt
or
sub
ficoms
scas
push
incl
mov
enter
sub
pushf
sti
mov
addl
mov
xor
rcr
dec
cmpsb
cmp
repz
test
cli
jmp
out
cld
enter
inc
movsl
loopne
add
and
incl
push
lahf
push
lods
mov
jne
cld
popa
or
sbb
dec
and
aad
mov
call
out
ja
mov
dec
jg
inc
std
push
into
cmp
inc
lock
mov
xchg
call
bound
jo
popf
jns
mov
lahf
gs
jmp
ss
out
and
shlb
cs
push
jecxz
hlt
fwait
lods
fisttps
into
addb
xlat
or
sti
sub
dec
push
fdivs
add
push
jp
aas
add
mov
bound
sub
push
jg
mov
loopne
push
add
dec
jno
das
mov
sub
mov
jg
sub
push
shrl
inc
xor
lcall
daa
xchg
cmp
xchg
jbe
push
insb
cli
imul
or
push
clc
pop
pop
inc
sub
rcr
lods
push
iret
or
xchg
sti
subb
jg
aam
add
hlt
inc
fiaddl
hlt
push
fs
push
jmp
mov
cmp
negl
and
mov
sub
outsb
adc
sub
push
mov
pop
rcrb
jg
je
mov
cmp
aas
pusha
stos
mov
lock
test
dec
divb
pop
cli
incl
dec
rorb
cwtl
test
mov
and
sahf
call
daa
adc
popf
cmp
mov
push
lahf
stos
dec
test
in
fimull
in
lods
loop
out
aad
aas
pushl
jmp
mov
psrlq
inc
lods
in
lcall
adc
mov
and
cmp
jp
iret
jbe
push
jge
cwtd
mov
mov
pushl
std
orb
xchg
int
ret
pop
lods
jo
lea
sbbb
aaa
jg
pop
rcrb
xchg
lret
lret
sbb
jo
mov
fdivs
pop
ljmp
rorb
inc
lock
test
cmp
scas
cmpsb
cmc
cld
fiadds
mov
push
insb
adc
xlat
xchg
push
pop
jg
inc
mov
daa
adcl
sub
out
ds
mov
in
mov
mov
outsl
or
ljmp
cmp
rol
cs
add
stos
bnd
out
incl
das
scas
push
repz
fcomps
jmp
adc
incl
cld
addr16
xchg
das
and
nop
mov
jl
push
xchg
data16
adc
jle
call
movl
leave
fucomi
push
aam
lods
fcmovnbe
fbld
pushl
mov
push
jge
push
mov
lahf
rdtsc
jne
mov
incl
push
jbe
ja
mov
imul
decl
test
mov
jns
jecxz
push
cwtl
xor
leave
ret
in
or
sub
add
inc
decl
test
leave
aaa
mov
push
loopne
push
repnz
insl
scas
es
jg
das
fisttpl
cmp
nop
sub
xchg
mov
jbe
outsl
xlat
cli
pushl
sbb
pusha
sub
in
pusha
pop
insl
xchg
mov
xorl
mov
dec
sti
insb
stc
sahf
adc
pop
fwait
cmp
jno
hlt
dec
cmpsb
jle
test
push
pop
jmp
fcoml
pop
into
rcl
push
jg
rcr
je
lcall
inc
jo
jg
and
fldl
fbstp
in
lds
push
rcrb
jnp
lret
decl
loope
sub
cltd
xor
out
xchg
aas
cli
mov
out
or
xchg
cmp
pushl
pop
vmread
sub
pop
fists
sub
xlat
aad
mov
std
mov
movsl
sub
inc
out
xor
xchg
xor
sahf
fnsave
add
aaa
cmc
fbld
jmp
scas
pand
aad
les
ss
mov
pop
hlt
mov
or
inc
cli
sbb
add
clc
ljmp
rorb
divb
ljmp
pshufw
incl
sbb
xchg
dec
mov
xchg
and
mov
leave
dec
outsb
out
pop
addb
popa
xor
sub
mov
fwait
pusha
scas
icebp
decl
ljmp
push
iret
pop
nop
cltd
push
xchg
out
jb
insl
out
movsb
sub
call
in
sbb
xchg
scas
sub
cmp
mov
jo
nop
mov
cmp
dec
xchg
jmp
cwtl
jle
xchg
out
adc
es
nop
xor
fs
daa
jb
ljmp
scas
push
mov
dec
leave
pop
jnp
push
jecxz
mov
icebp
push
mov
loope
rcrl
mov
das
mov
cmpsl
jle
adc
cmp
cmp
jg
fstl
aad
jne
fdivr
cs
cli
jne
aas
and
imul
jl
fiaddl
push
sbb
xchg
popa
push
out
jmp
adc
std
and
add
mov
iret
xchg
and
ja
inc
iret
lahf
in
fidivrs
cli
enter
cwtl
fsubrp
stc
pop
inc
mov
outsl
jg
icebp
push
pushl
les
mov
insb
mov
mov
stos
inc
fcmove
cmp
mov
pop
lds
hlt
mov
xor
add
lahf
pop
lds
adc
clc
sbb
and
inc
mov
push
lea
fadds
leave
insb
rcr
pop
xor
pop
jp
call
or
jae
add
push
fwait
jnp
lcall
push
loopnew
jle
cmc
inc
popa
mov
or
mov
or
inc
movsb
sub
push
shlb
rcl
add
mov
les
xor
les
lcall
sub
arpl
shrb
inc
or
mov
daa
repnz
mov
lods
push
clc
push
cld
fsubs
fiaddl
cwtl
aaa
dec
mov
dec
inc
lret
cmpsb
shl
stos
addl
ljmp
add
js
pop
ficomps
adc
mov
push
mov
push
jg
dec
sbb
pop
sbb
mov
cmc
incl
inc
adc
scas
xchg
inc
test
test
cs
outsl
cmp
lock
js
gs
jb
fistpll
jge
jp
cli
lcall
cs
sarl
icebp
xlat
sbb
xchg
mov
jb
mov
std
mov
popf
rcll
negb
frstor
std
call
es
add
inc
cltd
movsb
mov
jg
test
outsb
in
inc
push
and
leave
dec
push
aas
mov
xchg
lods
jno
outsl
push
aaa
mov
cmpsl
cltd
jno
pop
xchg
sub
dec
mov
imul
xchg
gs
andl
jmp
or
jl
cmp
rcrl
push
xor
pop
movlps
call
push
mov
stc
xlat
movsb
lock
outsl
rorb
push
sub
lret
adc
ljmp
push
cs
xor
xor
mov
xchg
or
jge
jg
jmp
or
ds
pop
mov
sbb
push
jns
xchg
jno
loopne
shlb
outsl
xor
loope
sbb
push
and
add
in
mov
cmpsl
inc
or
pop
out
mov
aam
and
adc
mov
mov
pop
div
mov
push
pop
aam
pop
shlb
das
sub
fbld
scas
inc
mov
fsubs
cmp
sub
in
mov
cmpsl
mov
test
stc
bound
lret
out
dec
ret
sub
ja
ret
jl
mov
sbb
mov
scas
mov
ljmp
cmp
xchg
mov
add
outsl
mov
add
jmp
jp
inc
lods
imul
mov
push
mov
popf
enter
or
mov
push
inc
adc
push
das
jmp
jl
arpl
in
bound
cmp
sbb
pop
movb
jmp
fisttps
push
or
scas
xlat
push
mov
sti
cmp
call
cmpsl
loop
add
pop
mov
mov
les
test
push
pop
sub
mul
jg
mov
push
push
pushl
xchg
xchg
faddl
inc
jnp
sbb
xchg
ja
add
cmpl
aam
outsl
insl
jb
mov
sbb
test
repnz
insb
repz
in
and
rcr
inc
out
andb
jo
xchg
out
mov
jno
mov
mov
or
cltd
js
mov
incl
pop
push
jo
mov
cmpl
repz
xchg
cmp
loopne
cmp
jb
cltd
adc
or
sub
push
mov
mov
mov
ljmp
jp
cmp
cmp
jmp
lcall
or
sbb
mov
mov
daa
out
rcrb
insb
add
add
lods
adc
test
imul
out
ds
leave
stos
inc
xchg
ljmp
out
rcl
sbb
mov
inc
lods
lea
sbb
repnz
es
call
arpl
aaa
rcl
les
sbb
dec
cmc
lret
pop
adc
std
pop
jae
into
loop
hlt
jmp
mov
xlat
test
xchg
jne
ret
scas
add
popa
push
jne
decl
lret
bound
int
push
cmp
adc
jmp
jle
imul
pop
fsubl
xchg
hlt
sbb
xor
jo
decl
xlat
cmp
add
test
push
jo
pushf
xchg
push
cmpl
clc
pop
in
das
xor
addr16
sbb
pop
cmp
cmp
xor
xchg
mov
mov
popf
lcall
jmp
fdivrl
or
mov
lret
sbb
ljmp
lcall
xchg
pop
jmp
outsb
xchg
scas
scas
stos
stos
adc
and
xor
incl
inc
or
stc
imul
fwait
notb
and
aas
roll
mov
mov
jb
scas
cli
push
outsb
data16
or
jbe
pop
pop
call
dec
dec
jg
lcall
inc
mov
repnz
pop
lret
inc
notl
bound
jmp
push
pop
dec
das
mov
mov
inc
test
jp
jns
jg
push
mov
mov
cwtl
inc
addb
inc
mov
inc
push
push
scas
pop
lock
jg
jge
loopne
jo
enter
test
mov
stos
jns
pop
xchg
ljmp
rsqrtps
lret
mov
les
cld
call
icebp
repz
and
es
shrl
fisttpl
cmpsl
and
das
lahf
lock
lods
rorl
sti
incl
lret
lods
cwtl
and
push
les
xor
or
imul
mov
out
repz
sub
mov
sbb
incl
jmp
cltd
cmc
out
roll
sbb
call
out
push
cmp
mov
insb
cmp
mov
ret
dec
mov
orb
push
cmpsb
ljmp
repz
pop
cmp
push
and
mov
pop
arpl
insb
cmpsb
mov
cmp
and
icebp
sbb
aam
push
ljmp
popf
addr16
or
filds
lcall
jns
out
or
aas
nop
movsl
in
pop
cmp
lcall
cli
pmaddwd
dec
sub
inc
iret
mov
out
push
cmpsl
mov
mov
imulb
or
jne
ja
clc
add
fcomip
call
lods
fdivrs
in
dec
nop
lods
iret
lret
pop
jne
jbe
mov
test
ss
pushl
mov
and
mov
bound
push
push
decl
mov
sub
test
gs
decl
xchg
sub
cmpsl
jmp
popf
inc
and
inc
shl
les
mov
sarb
cmp
stos
cmp
std
push
push
push
dec
dec
xor
add
lcall
fs
mov
popa
and
lea
bound
mov
push
insb
ss
jg
and
cmp
lcall
cmpsb
lock
inc
cwtl
or
dec
add
jecxz
cmpsb
sub
push
mov
out
aas
adcl
lock
xchg
fwait
sahf
add
repnz
ret
xchg
idiv
mov
jb
call
dec
js
test
mov
xor
leave
aaa
testl
push
aas
dec
or
iret
insl
cmc
gs
in
ja
jge
bnd
shll
outsb
push
fnstenv
xchg
sbbb
fstl
ja
cmpsb
and
and
or
add
mov
ds
fcmove
xchg
es
rorl
clc
fdiv
sub
jb
popf
pop
inc
mov
jg
daa
stos
xchg
xchg
add
sbb
mov
sti
xlat
fisttps
sub
xor
jbe
xchg
mov
ds
dec
mov
std
andb
xor
ret
fistpll
data16
decl
nop
xchg
or
and
std
mov
cmpsl
mov
and
xchg
xor
decl
inc
dec
pop
push
sub
mov
jno
push
into
mov
sbb
fsubs
sti
sahf
push
mov
scas
cmp
fs
jae
es
inc
insl
idivb
ret
or
push
pop
sbb
or
jno
mov
pop
mov
xor
jne
sbb
std
adc
leave
lock
mov
incl
cmp
arpl
push
xor
sahf
clc
push
std
dec
sbb
invd
scas
in
flds
pushl
stos
or
repnz
pop
xor
loop
test
sahf
insl
stos
push
mov
lods
and
mov
js
mov
movsb
pop
daa
push
cmp
mov
add
sbb
push
sub
mov
inc
ror
push
xchg
mov
mov
jne
decl
mov
data16
iret
imul
pop
mov
cmc
icebp
test
popf
aaa
test
pushl
scas
out
inc
jne
lcall
add
mov
sti
xchg
incl
loope
pop
mov
jle
adc
xor
je
ljmp
pusha
lret
fwait
push
iret
adc
sbb
lock
daa
sbb
icebp
call
adcl
inc
int3
add
adc
or
and
shlb
jb
xorl
movsb
dec
test
xor
mov
shll
lea
cmpsb
pop
jge
das
add
mov
xchg
cltd
lret
jge
mov
jg
add
outsl
lods
bound
jmp
ljmp
sub
nop
jle
loop
test
xchg
dec
or
inc
icebp
inc
jnp,pt
test
push
add
inc
inc
adc
stc
sbb
xor
hlt
iret
ret
cmpsb
fisubl
inc
rclb
ljmp
mov
push
and
cmc
popf
sahf
xchg
mov
pop
xchg
ja
pop
gs
fcomip
push
lods
popf
pusha
xchg
ljmp
xchg
sub
and
sar
incl
inc
aad
mov
jp
repz
adc
mov
pop
cmp
shl
jno
adc
xchg
cli
enter
cmp
xchg
hlt
inc
mov
dec
pop
in
sbb
out
js
lcall
int3
mov
rcrl
cmpsb
test
jae
mov
out
addl
mov
sbb
stos
xor
mov
lea
std
jg
mov
jp
jmp
jae
jne
cltd
adc
pop
cli
push
popa
fdivl
inc
fbld
aam
mov
std
xchg
inc
xchg
add
xorl
jmp
lahf
push
call
xlat
mov
in
sbb
dec
lds
lds
das
xchg
call
call
dec
rol
fldlg2
inc
mov
mov
movl
push
dec
les
lret
pop
je
lods
out
or
ljmp
iret
out
int3
jae
call
sbb
push
stos
sahf
xor
shll
xor
ljmp
pop
scas
in
test
test
lcall
mov
fidivrs
cld
pop
subb
jae
outsl
arpl
dec
sub
aam
inc
cmp
out
mov
into
popa
dec
jge
pop
insb
loop
lret
out
lods
and
aad
into
pop
ret
jmp
rorl
push
cld
inc
adc
sbb
xor
inc
jb
or
nop
mov
sub
xchg
sub
hlt
lcall
jnp
lcall
in
jle
pop
iret
out
add
pop
popf
push
or
pusha
mov
sbb
andl
incl
mov
add
or
mov
fisttps
or
push
aam
in
xor
in
shlb
loopne
cltd
mov
jno
ret
add
xchg
out
cltd
or
push
jno
inc
mov
lods
enter
aaa
popa
cld
inc
or
fcmovb
or
jg
test
and
adc
pop
mov
aaa
inc
add
jmp
mov
push
out
pop
cwtl
xor
aaa
cmc
sub
popa
jno
nop
test
mov
ds
mov
xor
sbb
mov
push
adc
inc
xor
stos
and
idiv
jmp
insl
push
and
lods
xor
pop
movsb
clc
dec
scas
sbb
push
jae
inc
add
je
daa
sbb
mov
push
ja
cmpl
jle
iret
insb
popf
push
pop
decl
iret
cmp
movsb
jb
and
pushf
outsl
mov
fisubl
mov
fwait
lcall
cld
icebp
sub
cmp
mov
daa
repnz
cs
in
dec
mov
mov
hlt
les
push
pop
outsl
clc
lcall
jns
stos
arpl
aam
sbb
push
mov
dec
jns
stc
sub
pushf
xchg
call
push
loopne
pop
adc
adc
mov
cli
inc
les
lock
cli
push
sbb
mov
aad
dec
add
icebp
push
xchg
mov
pop
mov
sub
incl
cld
mov
pop
cltd
xchg
cwtl
sbb
or
push
jo
push
lods
xchg
adc
pushl
insb
cli
jg
sbb
fmuls
mov
addr16
lock
leave
cli
fs
mov
adc
and
scas
adcb
mov
dec
pop
add
mov
cmp
cmp
lea
ficomps
mov
loop
pop
clc
pushl
insb
movsb
jnp
fwait
push
lock
fwait
jge
dec
push
ror
fwait
adc
dec
xchg
jg
scas
dec
adc
fists
das
loope
leave
fisubrs
sarl
lcall
scas
pop
jl
push
add
xchg
and
arpl
orb
inc
sar
mov
jns
pop
add
out
outsl
enter
jmp
pop
inc
dec
popa
cli
mov
inc
movsb
mov
incl
or
dec
dec
inc
push
mov
mov
dec
or
test
xor
jne
subb
or
sbb
faddl
test
push
mov
fwait
sub
lcall
or
arpl
mov
call
jmp
je
inc
int3
incl
shrb
dec
or
loop
mov
ret
pop
push
ljmp
call
imul
or
xchg
repnz
and
adc
push
cmpsl
test
xchg
jno
pop
rcl
lds
lcall
or
loopne
mov
sahf
push
sbb
mov
sti
test
and
xor
les
fidivrs
hlt
gs
loop
add
fs
cmp
ret
add
and
mov
fs
jmp
xor
rcrb
xorl
fbld
xchg
loop
mov
arpl
push
dec
push
iret
sbb
lret
pop
dec
cld
and
pop
pop
cmp
call
inc
stos
ss
sbb
xor
lods
loopne
jns
and
call
inc
lcall
std
pop
es
ret
iret
mov
out
and
mov
xor
mov
inc
idiv
pop
inc
jmp
subb
aaa
fcmovb
inc
push
jno
inc
add
jg
hlt
inc
jp
push
lahf
sbb
out
fs
lret
push
pop
jg
jecxz
pop
pop
pop
pop
sahf
push
iret
sbb
pusha
fcoms
ffreep
fcomip
jmp
fstps
xchg
push
sarb
inc
mov
enter
pushf
stos
cmp
call
sbb
cmp
out
ret
fstl
mov
iret
sbbb
dec
fidivs
out
mov
aam
fst
fwait
and
popa
daa
sub
das
xchg
shl
das
push
stos
xor
decl
pop
out
jg
sbb
xchg
xor
and
dec
xor
decl
jle
dec
jnp
out
sub
add
xchg
cmp
mov
dec
icebp
push
mov
pop
push
shr
inc
xor
sar
dec
cmpsb
bound
push
mov
lds
or
dec
daa
jns
repz
jmp
add
and
inc
rclb
fwait
sub
cmpsl
sbb
sbb
int
pop
mov
mov
mov
inc
call
mov
ljmp
or
mov
xor
decl
fldenv
jg
cmpl
jnp
jb
sti
test
lcall
mov
or
jne
arpl
mov
aam
cmp
jmp
and
pop
jg
cld
push
mov
sbb
dec
push
ds
aam
sub
and
push
das
or
push
repz
mov
test
flds
das
inc
cmpl
lock
aas
add
add
fsts
add
repnz
stos
aad
xchg
popf
nop
in
inc
mov
jb
jecxz
int
dec
adcl
mov
jecxz
lcall
mov
inc
mov
adc
data16
in
push
mov
mov
pop
push
fimuls
jb
and
jae
cmp
xchg
cmp
inc
mov
mov
add
xor
shlb
lcall
sbb
iret
mov
stc
adc
jb
push
lret
std
jecxz
jg
sbbl
js
xor
sub
lcall
lahf
icebp
dec
xchg
ret
fldt
imul
in
xchg
out
mov
mov
mov
sbbl
icebp
push
fwait
bound
movsb
int3
push
les
cmp
decl
or
std
pop
jl
leave
in
lcall
cmpb
jl
adc
xor
add
es
jno
lcall
aad
ljmp
dec
push
popf
test
push
mov
adc
or
add
fs
incl
jnp
jmp
mov
sarb
pop
pop
jp
incl
in
push
sub
fidivrl
pop
jnp
mov
loope
repnz
and
adc
xchg
cmpsb
push
sahf
push
lea
mov
jle,pt
push
out
mov
dec
inc
xchg
push
push
clc
xchg
mov
inc
outsl
push
fdivp
call
mov
jns
add
aas
fistps
add
add
incl
pop
jecxz
daa
dec
and
addl
jg
and
mulb
adc
daa
dec
fnsave
popf
adc
inc
mov
jbe
ja
add
jmp
jb
stos
pop
pop
test
push
ja
lcall
sub
mov
xor
js
sbbb
sub
scas
jle
pop
movsb
fxch
incl
lds
scas
pop
ret
push
movsb
jbe
into
lods
dec
cld
outsl
clc
lahf
lret
fdivs
xchg
bound
sub
lret
sbb
sub
jge
dec
cmpsl
imul
bnd
pop
and
push
cli
ljmp
mov
lds
aad
lahf
inc
xor
scas
xor
push
pushl
ljmp
mov
push
outsl
pop
sub
xchg
and
inc
inc
ss
outsl
jmp
call
inc
inc
pop
pop
push
hlt
mov
dec
movl
mov
mov
mov
mov
xlat
and
sbb
jnp
inc
xchg
mov
in
mov
mov
rcr
adc
fs
mov
test
sar
call
jecxz
lock
call
fisubrs
dec
call
jp
out
or
add
xchg
push
add
pop
push
pushf
lret
cli
lret
lock
hlt
pushl
stos
adc
je
das
inc
movsb
imul
jmp
sbb
and
outsl
cmp
jge
lock
addr16
mov
mov
jb
xor
mov
ret
rcll
mulb
test
sbb
dec
out
pusha
ret
inc
jns
adc
and
push
cltd
pushf
pop
jmp
lcall
push
out
out
sub
sbb
lea
insb
add
xor
outsl
test
arpl
aaa
xchg
mov
lcall
leave
xchg
shll
pop
mov
add
inc
xlat
jmp
pop
and
bound
pop
mov
xor
sub
push
fcmove
cs
das
inc
fists
jbe
jmp
cwtl
dec
mov
jne
lcall
fcmovb
mov
sub
pushf
leave
cmp
xchg
insb
xchg
std
cld
dec
incl
je
push
pop
ljmp
mov
cld
ljmp
outsb
loope
jl
sub
and
dec
mov
mov
mov
incl
ljmp
jge
sti
dec
movsl
adc
inc
dec
or
xchg
pop
dec
xchg
add
or
mov
xchg
pushl
test
sub
xchg
add
sbb
mov
movsb
and
dec
xor
jg
lea
pushw
cmp
jb
or
xlat
push
ret
cs
das
push
mov
cmp
jmp
pop
cmc
jg
cmp
stos
orb
inc
mov
inc
jnp
mov
pop
mov
je
sahf
sahf
cmp
or
dec
je
cmp
pop
stc
or
nop
or
scas
dec
out
pop
add
lcall
iret
mov
jbe
ret
xchg
pushf
xchg
push
mov
pop
push
or
jmp
mov
incl
push
in
jp
das
in
mov
push
jmp
mov
or
sbb
cmp
mov
cli
xor
daa
and
leave
dec
jb
xchg
mov
mov
ficoml
cltd
lea
movsl
cwtd
cmpsb
sub
call
das
add
das
xchg
sbb
adc
adc
in
mov
aas
test
decl
inc
fimuls
int
push
mov
pop
int3
mov
loope
jg
sahf
orl
mov
aam
dec
jg
sbb
add
push
mov
fst
add
jg
push
rcrb
insl
daa
adc
cs
fnstsw
int3
adcl
icebp
inc
pop
sub
stc
decl
lret
and
cmpsl
lcall
mov
cmp
idivb
jg
fadd
inc
push
test
mov
xor
idivb
pop
in
aas
adc
jmp
mov
jo
adc
lds
test
pop
clc
sub
ljmp
sti
mov
pusha
fdivrs
mov
adc
xchg
jp
push
mov
mov
aas
adc
mov
andl
push
xor
ret
jne
xchg
test
clc
stos
fiadds
mov
mov
jbe
fwait
and
daa
fmull
sub
roll
mov
sbb
std
mov
fcoms
mov
xchg
lret
xchg
scas
xchg
sub
xor
jg
into
mov
mov
int3
femms
cmp
push
and
jg
sbb
sub
adc
push
adc
paddusb
incl
movsb
gs
jno
adc
loop
ds
lcall
repz
add
jle
lock
jno
jae
cld
fmuls
xchg
leave
mov
cli
clc
inc
call
mov
xchg
scas
loop
sub
notl
push
jl
jecxz
pop
cmp
loope
fwait
mov
aad
sbb
or
out
push
std
jne
pop
nop
pushl
mov
mov
add
insl
ja
lods
lcall
or
stos
fistpl
shll
cmp
adc
leave
add
das
test
add
pusha
into
imul
outsl
lahf
in
lret
push
adc
and
aad
sbb
jo
call
mov
jp
or
bound
and
xchg
lahf
inc
or
or
sar
aad
icebp
push
cmp
pop
popf
popa
mov
pop
inc
cvtdq2ps
gs
pop
push
push
pop
clc
cmp
incl
mov
adc
enter
popf
fdiv
mov
jecxz
loope
decl
in
xchg
addr16
jne
and
clc
adc
xorb
out
cmp
add
xchg
xchg
cmp
outsb
or
sbb
in
cld
lods
iret
inc
test
adc
sub
push
inc
rcl
pop
jg
push
subb
inc
sub
clc
outsl
xchg
hlt
lods
inc
mov
sub
dec
sub
enter
scas
sbb
ds
outsb
js
cmpsb
ret
sub
imul
mov
and
ja
pop
mov
rorb
out
aaa
cld
call
mov
mov
cmp
jbe
lcall
cld
push
pop
mov
out
aad
cmp
scas
and
pushl
mov
repnz
in
pop
push
xchg
mov
xor
cld
incl
add
loopne
incl
addr16
xchg
ljmp
cmp
out
push
xchg
data16
int
pop
pop
adcb
js
fisttps
xor
jg
add
jecxz
stc
and
in
fcomi
inc
lock
add
loopne
add
jge
push
mov
popf
cmpsl
iret
mov
mov
sub
pop
jp
pusha
aas
inc
hlt
jg
mov
lahf
sbb
jne
aad
shld
mov
out
decl
or
subb
mov
push
and
dec
push
out
mov
incl
incl
cltd
lods
rorb
jle
sbbl
fcomip
cmp
xchg
lahf
pop
cmp
dec
lret
mov
pop
xor
pop
out
xor
jno
hlt
pushl
push
and
ss
outsb
and
push
outsl
test
pop
push
jmp
in
movsl
in
jb
je
xchg
ret
mov
sbb
lcall
xor
mov
sbb
repnz
sar
incl
sub
dec
cs
lahf
sub
mov
in
push
push
test
dec
pop
sbb
nop
inc
xlat
int3
cmp
mov
jmp
adc
lock
pop
adc
lds
xchg
out
not
rclb
aaa
daa
or
push
cmp
mov
lahf
lds
incl
jmp
lahf
cltd
jne
mov
call
test
out
icebp
test
cli
movsb
sub
adc
jo
pop
dec
xor
decl
pop
cmp
xchg
pop
inc
push
jg
data16
cld
push
pop
rcll
scas
mov
adc
or
pop
dec
jecxz
dec
stc
pop
cmc
incl
sub
aam
jns
or
jge,pn
inc
fiaddl
pop
pushf
inc
clc
ljmp
mov
lret
inc
das
sbb
aaa
js
shrb
sbb
fs
push
xchg
aad
and
dec
cmp
fsubrl
push
sub
enter
dec
xor
outsl
clc
jg
popl
popf
jp
push
lods
sbb
pop
xchg
mov
ficomps
xchg
cwtl
add
aam
inc
jbe
xchg
daa
jno
jg
push
mov
add
call
dec
push
xor
jo
test
add
inc
mov
cmpsb
cmpsb
cwtl
cmp
push
dec
stos
push
lods
je
push
sub
arpl
lcall
adc
xchg
gs
add
and
mov
and
mov
cmp
test
fisttpll
orl
and
xchg
rorb
jmp
mov
lods
sbb
pusha
into
add
les
cmp
nop/reserved
lcall
test
mov
inc
adc
loop
or
pop
in
les
cmp
cli
mov
push
lods
sbb
enter
pop
aaa
xchg
jbe
imul
inc
jne
lcall
lock
fdivr
pop
sub
sbb
push
clc
cmp
add
incl
mov
shlb
push
sbb
mov
push
dec
ret
sti
lods
jle
cli
cmp
stc
xchg
mov
dec
ljmp
lock
or
lcall
push
cmp
sub
xchg
mov
out
out
jbe
jg
lret
out
lcall
pop
pop
lahf
jns
addr16
movsb
imul
pop
or
and
sbb
and
inc
in
mov
lcall
or
dec
mov
icebp
sbb
sti
or
mov
mov
decl
push
in
xchg
in
mov
mov
sub
jmp
test
and
fldt
adc
pop
daa
adc
sbb
lods
hlt
add
add
decl
call
out
imul
sub
sbb
mov
inc
or
filds
adc
mov
xchg
std
cmp
cmpsb
jg
imul
fsubr
jg
dec
add
aam
cltd
imul
jp
dec
adc
mov
inc
cmpxchg
push
xchg
pop
xchg
repz
push
jmp
mov
xchg
push
gs
mov
mov
xchg
mov
mov
jno
mov
push
inc
incl
fnsave
sarb
jg
push
sbb
push
xchg
cmp
add
out
mov
repnz
iret
push
fsubp
orb
xor
sti
lahf
sbb
jp
mov
decl
loopne
push
fsubrl
push
xor
cmp
adc
decl
mov
push
loopne
andl
negl
pop
add
dec
xchg
dec
ja
gs
ljmp
inc
push
fs
mov
sbb
sbb
mov
xchg
into
mov
xchg
push
mov
inc
test
jg
jg
sbb
arpl
mov
mov
mov
cmp
pop
and
pop
outsb
test
dec
push
loope
lcall
aas
pop
sbb
sarb
shll
rcrl
lret
outsl
aaa
jg
outsl
dec
adc
push
jecxz
push
mov
push
test
mov
pop
std
add
push
sbb
icebp
sbb
cli
xchg
inc
std
popa
gs
push
mov
jge
std
mov
jg
test
ucomiss
pop
jmp
mov
loopne
pop
pop
lret
mov
call
xchg
lea
cmpsl
insl
fwait
test
dec
rcrb
or
mov
push
mov
mov
leave
fldl
mov
jbe
or
gs
mov
lahf
ljmp
shlb
test
test
pop
mov
sahf
push
insb
jne
and
mov
mov
insl
iret
jle
mov
jnp
test
sbb
cmc
xchg
fidivs
inc
jg
mov
pushf
xchg
sbb
sub
push
int3
insb
and
jno
rorl
out
pop
aad
and
push
dec
das
loop
lcall
movzbl
xchg
sarl
xchg
or
jmp
insl
pop
mov
int
cld
cmp
push
xor
xchg
ficoms
ljmp
pop
sub
jno
mov
mov
cs
or
adc
jmp
xor
lea
push
mov
dec
mov
add
shlb
and
test
or
inc
call
inc
imulb
xchg
test
pop
imul
scas
repz
pushl
into
stc
jge
mov
fmulp
fwait
in
jo
push
adc
clc
inc
lods
das
std
add
addb
call
shlb
mov
adc
xlat
xchg
cmpsl
add
pop
ret
mov
xchg
out
or
imul
test
push
rcr
repnz
mov
pop
and
js
fdivrs
push
and
sub
ljmp
cltd
stos
jae
or
pop
inc
push
cmp
mov
or
stos
insb
leave
and
xchg
pop
mov
stos
fs
decl
mov
inc
scas
sub
bound
jmp
rcll
sub
adc
jl
in
mov
xor
ret
add
xchg
loope
lds
insb
arpl
ljmp
daa
add
jg
mov
cmp
mov
xchg
cmp
clc
call
call
push
mov
ds
leave
and
add
add
pop
lods
and
aam
cmc
lcall
cli
sbbb
pop
xchg
mov
mov
adc
call
fidivs
dec
add
cltd
xchg
sub
mov
and
cmp
jb
inc
xchg
dec
mov
mov
pop
in
sbb
es
cwtl
xor
shll
ljmp
aam
into
out
xchg
dec
addr16
jno
sar
lcall
sub
push
mov
ljmp
xchg
adc
in
ljmp
push
and
inc
mov
in
pop
mov
xchg
lods
movsl
or
cmp
jmp
mov
daa
pop
xor
in
roll
lods
xchg
mov
mov
lock
cmp
xchg
cmp
sbb
and
mov
sti
push
pop
jne
das
imul
icebp
divl
or
or
or
aas
insb
call
adc
repz
adc
fstps
pop
push
xor
in
or
sbb
repz
in
xchg
xchg
dec
cwtl
cmp
jb
std
or
jbe
into
jbe
fnstenv
push
jg
ret
mov
and
call
fildl
cmp
jl
daa
jnp
inc
pushw
xchg
inc
cs
lcall
lods
pop
sub
dec
pop
cltd
pop
push
popa
fwait
xchg
push
sti
push
in
aaa
scas
int3
pushf
lret
cmpsb
xchg
pop
addr16
movsb
add
push
std
ja
adc
std
jecxz
pushl
dec
fisubrs
inc
jns
outsb
fcomps
lock
xchg
mov
add
pop
cmpsb
ljmp
pop
push
mov
notb
fcompl
insl
nop
sbb
jbe
mov
das
mov
cmp
std
aas
inc
or
xchg
push
dec
xor
jge
xchg
add
out
std
push
repnz
xchg
lock
jg
jnp
scas
or
leave
lahf
call
xor
and
stc
stc
dec
nop
int
pop
pop
ljmp
aaa
adc
fs
mov
enter
enter
hlt
cli
icebp
fisubrl
add
adc
ret
cmp
test
mov
fs
cwtl
incl
add
sbb
xchg
cmp
sub
mov
scas
clc
jle
insb
xlat
es
das
test
pop
mov
adc
insb
std
incl
inc
or
sarb
cmp
daa
sub
ror
or
or
scas
push
loopne
mov
decl
ja
fimull
icebp
cmp
or
pop
cmp
xor
insl
decl
into
iret
jno
test
ja
mov
fs
cwtl
jg
subl
repz
decl
xchg
jl
ficoms
not
jp
sub
cld
push
mov
adc
or
ljmp
and
scas
adc
dec
adc
sarb
cmpsl
aam
sbb
aad
mov
int
dec
in
inc
test
and
inc
sbb
aaa
fdivr
incl
sbb
into
lods
cmpsl
rcrl
mov
cld
jmp
aam
or
andl
fidivrs
cmp
or
mov
ret
sub
fwait
movsb
cmc
jne
call
sbb
add
mov
sbb
pop
mov
cli
int3
lock
or
stos
and
mov
mov
lods
xchg
xchg
mov
cmp
sbb
fiaddl
jo
lods
into
je
lock
cmp
adc
scas
xchg
loop
mov
dec
and
or
mov
decl
sbb
pop
sahf
sbb
pop
les
loope
mov
inc
clc
mov
cld
gs
lret
push
insb
out
fisubl
mov
fld
fst
rorl
mov
sbb
fsub
outsb
imul
call
xor
iret
mov
dec
shl
sub
ss
dec
add
les
int3
mov
popf
and
test
push
inc
mov
jmp
fistpl
inc
mov
jne
sbb
adc
mov
xor
je
add
sbb
add
cmp
xor
mov
inc
mov
fisttpl
sub
and
call
jp
call
cmp
es
int3
mov
mov
popa
call
xchg
jno
mov
mov
mov
add
std
cwtl
sbb
subl
mov
xchg
mov
es
nop
pop
dec
pop
jbe
adc
mov
faddp
leave
in
fs
xor
adc
pushw
or
call
loop
outsb
dec
jmp
imul
adc
lock
fbstp
push
sbb
imul
cwtl
jnp
inc
out
adc
xchg
lock
shlb
dec
int
add
add
popl
jmp
mov
add
cld
jb
dec
dec
jmp
add
mov
outsb
lea
int3
pop
fists
fisubs
sbb
inc
sbb
mov
decl
sub
shll
fstpt
pushf
ds
push
push
and
mov
decl
xlat
mov
test
jp
inc
leave
cmovne
cwtl
cmpsb
in
iret
pop
ficoms
xchg
jbe
xchg
inc
hlt
call
jmp
les
sub
jl
pushl
fldenv
pop
cmpsb
and
push
scas
add
jb
loope
push
and
outsl
xor
xor
mov
jnp
cld
enter
das
pushl
cld
call
xchg
xor
imul
cmc
rolb
incl
je
mov
cld
sub
inc
cmpsb
jnp
xchg
leave
lods
pop
ret
sbb
jmp
mov
and
push
ja
jbe
add
daa
iret
into
ljmp
mov
inc
mov
lods
incl
arpl
sbb
mov
jle
es
inc
lret
sti
push
in
push
fwait
sbb
lahf
push
call
loopne
pop
xchg
sub
insb
and
pop
das
mov
xchg
lods
bound
cmpsb
loopne
data16
cmp
xor
ljmp
icebp
testl
loope
lcall
xchg
filds
xchg
cmpsl
les
mov
incl
into
push
push
popa
jns
push
cmp
icebp
scas
mov
xchg
adc
jg
sub
cmpsb
pushl
mov
pop
inc
and
es
out
inc
pop
test
dec
cmp
pop
mov
outsb
mov
xchg
test
fwait
enter
call
mov
push
cwtl
fdivs
out
mov
into
adc
mov
cmp
test
jle
lcall
shll
cmp
add
push
stc
icebp
push
sub
or
jns
mov
pop
jno
aaa
mov
into
inc
decl
inc
aam
adcb
cmc
add
out
clc
jmp
push
xor
fs
sbb
jb
ret
adc
add
adc
or
push
adc
pop
push
in
outsl
lahf
outsl
inc
jae
adc
jl
push
dec
lcall
test
mov
or
dec
pop
inc
mov
jbe
xchg
sub
movsb
nop
add
incl
pop
dec
sub
dec
jno
xor
pop
sbb
stos
rcll
mov
lcall
add
cmp
aad
or
jno
das
or
pop
pusha
push
aaa
shl
dec
loop
aas
insl
cmp
and
mov
xor
mov
lock
jo
ljmp
or
int
dec
dec
xchg
nop
rcrl
mov
xchg
loopne
xchg
mov
xor
clc
fadds
insl
nop
pop
mov
and
loopne
adc
data16
pushl
dec
xor
cmp
xchg
fcoms
cltd
mov
jp
imul
mov
add
mov
and
push
inc
add
mov
inc
xchg
mov
sbb
popf
hlt
decl
mov
dec
cmpsl
push
test
xchg
and
popf
bound
sti
nop
lock
fists
lahf
xchg
popf
add
or
enter
mov
inc
cmp
jl
call
lret
xlat
pusha
dec
lods
decb
fadd
sub
xor
push
je,pt
dec
xchg
mov
mov
adc
sub
js
int3
inc
out
cli
mov
inc
loopne
mov
incl
add
mov
in
in
adc
std
xor
push
in
out
decl
loope
sub
fbld
mov
and
dec
repz
mov
sahf
jecxz
sub
jmp
data16
sbb
sub
jmp
xchg
sbb
imul
sbb
cmp
and
int
mov
or
jae
pop
xor
and
or
adc
mov
std
xchg
idiv
add
cld
mov
cmc
add
int
inc
icebp
mov
dec
xor
scas
xchg
call
jae
pop
insl
sbb
lahf
xor
dec
and
sahf
and
decl
ret
or
les
dec
fiaddl
xor
stos
sbb
cmc
out
out
negl
fldenv
or
xor
or
repz
mov
pushl
jge
dec
xchg
push
sub
mov
or
gs
test
sub
dec
rolb
in
decl
dec
ds
stc
cmpsb
inc
mov
fld
and
xchg
pop
xchg
sbb
scas
lods
fbstp
pop
push
clc
insl
mov
inc
test
mov
push
dec
clc
ficompl
fcomps
int
sbb
inc
xchg
jp
cmp
addr16
out
int3
daa
inc
sete
ljmp
nop
lods
jno
cmp
xchg
push
xchg
jle
push
mov
out
cltd
std
xchg
ja
pop
lret
dec
imul
ljmp
rcrl
roll
pushl
inc
addr16
outsb
cli
cmp
or
sbb
cmp
fildll
adc
test
lock
in
push
call
iret
cmc
jmp
stos
or
sub
loopne
pop
dec
jp
lds
or
int3
pop
dec
sarl
dec
xor
in
aad
nop
outsb
daa
in
xchg
and
in
test
std
call
mov
pop
fwait
sbb
out
mov
rcrb
test
outsl
fimull
sar
mov
ljmp
cmp
inc
daa
push
add
call
sub
dec
mov
pop
fcmove
out
dec
adc
call
mov
sbb
jno
jle
ljmp
bound
jb
and
aam
addr16
call
sub
push
add
mov
push
pop
adc
ljmp
or
push
dec
pop
pop
mov
mov
fwait
and
cmp
add
test
rcrb
mov
pop
pop
hlt
push
cmp
es
dec
sysexit
movsb
and
out
fsubl
lcall
fwait
cmp
fistps
push
mov
lds
movsl
and
call
mov
lcall
mov
mov
js
ret
add
add
sub
sarb
mov
pop
insl
xor
xor
clc
adc
bound
pop
cmp
aas
mov
testb
jmp
ljmp
add
lcall
iret
cltd
cmp
mov
in
in
mov
aad
jae
xchg
dec
loopne
daa
sbb
inc
inc
data16
test
xor
cmpsb
pop
sub
mov
inc
push
adc
pop
popa
loope
nop
inc
inc
out
mov
enter
aam
push
mov
sub
test
stos
jae
fbld
fcompl
ja
xor
les
add
or
mov
dec
pop
ret
les
inc
in
into
orb
outsl
cmp
dec
sbb
aam
cwtl
enter
sub
or
mov
sub
xor
xor
rsm
inc
std
pop
or
xorb
rorb
pop
jle
lcall
sub
xchg
out
aam
pusha
dec
in
inc
mov
push
fwait
or
fdivs
cmp
xchg
lret
popf
dec
cs
adc
lea
cli
mov
or
repnz
js
idivb
cmpsb
popa
std
adc
mov
incl
test
xchg
pop
out
fiadds
das
xchg
push
cs
inc
in
sbb
fdivl
stos
gs
dec
mov
mov
fcmovb
call
out
add
loopne
popf
ret
or
jmp
or
or
ljmp
stc
icebp
pop
mov
lcall
xlat
or
push
or
ljmp
icebp
js
sti
dec
inc
mov
ds
fwait
test
mov
mov
cwtl
inc
ljmp
call
imul
repz
ret
or
ror
or
decl
lock
loopne
lret
test
cmp
lods
dec
dec
insb
jl
push
push
jne
xorl
decl
xor
xor
mov
push
fdivl
cli
or
or
stos
mov
cmpsl
mov
ljmp
mov
jbe
jg
xor
inc
inc
push
push
mov
mov
jbe
and
mov
aas
in
out
lds
fisubrs
fwait
clc
sbb
mov
in
or
sub
mov
jno
xchg
out
or
sub
xchg
cwtl
int3
ljmp
popf
or
pop
inc
xchg
mov
jne
movsl
insb
mov
sbbl
jmp
lcall
mov
lods
sub
jmp
incl
stc
in
mov
lds
lcall
cmp
mov
lods
pop
or
mov
das
scas
cmc
cwtl
mov
call
nopl
xchg
jle
inc
mov
call
dec
push
inc
sar
adc
push
xor
leave
aaa
pop
sub
lahf
or
mov
ret
jmp
ljmp
mov
imul
sbb
imul
mov
rorb
push
jle
mov
decl
xchg
jmp
dec
je
adc
test
sub
sahf
rorb
in
sub
cmp
ljmp
fmuls
adc
fs
jnp
sbb
xchg
fld
jmp
sub
decl
pop
adc
pop
mov
repz
xchg
xchg
data16
mov
das
clc
ljmp
jbe
ja
test
outsl
repnz
add
fcom
jns
in
cmpsb
xchg
jp
test
and
adc
sbbb
inc
fbstp
test
dec
outsl
cwtl
sarb
icebp
sahf
mov
ljmp
push
andb
outsb
push
xchg
sub
inc
into
daa
pop
dec
xchg
jg
xchg
stos
xor
cmp
pusha
imulb
cld
jnp
in
push
jno
bound
xchg
pop
mov
sbb
test
adc
popa
mov
jnp
mov
nop
mov
jp
mov
cwtl
jns
in
inc
sbb
or
fisttps
adc
and
inc
aaa
sbb
je
inc
hlt
cmp
xchg
or
repnz
faddl
js
xor
imul
pop
das
ret
dec
fwait
xchg
jne
and
xor
ljmp
je
dec
xchg
int3
mov
in
dec
lret
hlt
pop
inc
lcall
mov
sbb
subl
mov
ljmp
enter
addr16
int
clc
mov
mov
add
nop
lret
test
fs
inc
call
movsl
test
mov
mov
int3
pop
jecxz
jae
xor
jmp
add
fs
test
xchg
mov
xor
jne
outsl
in
cmpb
adc
iret
xor
lock
and
into
xchg
fisttps
add
or
sub
fidivl
cmp
decl
repz
repz
test
movsl
mov
and
out
mov
movsb
movsb
frstor
cmp
filds
enter
shl
mov
jmp
decl
hlt
mov
gs
in
int
pop
scas
js
add
add
call
pop
sti
xor
insb
push
stos
xlat
mov
cs
call
push
imul
cmpl
mov
sbb
cwtl
mov
jne
dec
addr16
ss
mov
jmp
std
decb
and
rol
xchg
mov
fs
sar
decl
fsubp
lret
mov
imul
int3
add
lcall
push
lds
hlt
jle
pop
fnstenv
icebp
out
jo
shll
jl
push
jl
stos
lcall
or
push
dec
jns
push
mov
xor
push
inc
jmp
inc
sbb
ficoml
lret
pop
mov
cs
icebp
or
xor
lock
scas
es
inc
pop
mov
push
add
incl
and
out
mov
lods
push
cmp
sahf
testb
or
xchg
push
mov
inc
std
pop
jo
lock
and
icebp
jg
push
imul
sbb
bound
jne
inc
decl
test
mov
lcall
hlt
nop
dec
jge
dec
clc
decl
in
int3
adc
hlt
mov
retw
nop
pop
lcall
jg
out
push
out
fidivrl
loope
loop
push
es
and
cs
ljmp
neg
mov
jge
test
out
leave
lret
mov
call
sbb
stc
fimull
gs
push
pop
mov
xchg
jmp
pop
ret
add
ficoms
arpl
xchg
or
std
pushl
lret
fnstenv
bound
jge
cltd
xchg
xchg
pop
dec
mov
mov
sahf
les
movb
cmp
and
pushf
jmp
leave
movsb
repz
jle
dec
sub
add
subb
push
pushf
out
cmpsb
jno
xor
cmp
inc
decl
ljmp
movsb
sti
and
lock
cmp
lcall
jo
inc
cs
jmp
dec
leave
nop
lds
sahf
aaa
lods
push
mov
and
in
cld
fistps
int
in
fimull
call
xchg
les
ret
dec
scas
loop
sti
pop
pop
xor
incl
sbb
fnstsw
xchg
arpl
inc
mov
jne
daa
shrl
adc
lcall
mov
dec
insb
mov
adcb
jg
add
xchg
mov
cmovp
lock
pop
jae
push
loope
sbb
adc
jg
call
cmpsb
mov
call
sub
xchg
shl
mov
incl
lahf
mov
sub
fwait
jle
jb
ljmp
inc
dec
sbb
pop
pop
popa
ss
sar
fcomip
jg
les
jo
dec
outsl
add
mov
inc
std
mov
cmpsb
fsubs
hlt
or
loop
or
mov
and
add
decl
jno
pop
xchg
adc
sub
rolb
lock
mov
lock
test
or
inc
mov
jno
cmc
out
std
sub
adc
arpl
adc
into
scas
scas
inc
jnp
test
repnz
inc
test
sti
sub
jg
lcall
movsl
pop
subb
inc
cltd
xor
sub
lret
mov
pop
sub
sbb
push
mov
ja
ret
push
cli
jg
cs
sbb
jnp
outsb
cs
imul
loop
and
sbb
aaa
adc
scas
mov
xchg
inc
das
adc
loopne
call
pop
cmc
xchg
data16
es
es
sbb
dec
adc
jge
les
lea
mov
dec
fdiv
lcall
sbb
stc
clc
or
iret
pop
ret
incb
jecxz
xchg
pushl
cld
cwtl
ror
lahf
mov
inc
sarb
pop
test
jmp
xchg
mov
decl
scas
xor
mov
pop
sub
incl
jbe
lods
jmp
cmp
mov
push
mov
and
push
rclb
incl
cwtl
push
loop
xchg
mov
imul
or
fs
push
inc
xor
icebp
jmp
pusha
mov
mov
mov
push
cmp
mov
in
ja
cwtl
cli
push
call
push
cmc
je
rclb
fisubrs
adc
xchg
mov
js
ret
sbb
inc
push
insb
add
pop
add
out
dec
enter
jmp
hlt
inc
rorl
imul
ret
lret
inc
das
lods
add
sub
lea
lret
rol
ret
xlat
or
ljmp
pop
adc
push
jnp
cmpsl
push
cltd
loopne
add
leave
daa
mov
fildll
xchg
or
arpl
adc
ror
mov
pop
dec
idivl
xchg
add
incl
sub
clc
jmp
mov
mov
jg
cmp
repz
push
push
cli
dec
push
je
repnz
fidivrs
popf
mov
ljmp
cmp
cmpl
adc
lret
lret
out
and
popf
aas
mov
jp
fucomi
arpl
inc
mov
clc
outsb
jge
outsb
loop
push
enter
movl
pop
and
imul
push
push
or
adc
test
hlt
shlb
xchg
call
adc
cld
push
lcall
fstp
mov
add
aas
stc
push
push
xor
mov
enter
mov
pop
ret
aas
fwait
mov
je
clc
mov
lods
ds
cld
pop
cld
jge
mov
pop
ret
inc
shrb
sti
push
inc
mov
test
sahf
ret
sahf
mov
and
sbb
sar
outsl
jo
push
xchg
das
pop
sahf
bound
sub
mov
or
inc
hlt
ds
dec
mov
pushl
xchg
mov
in
out
icebp
test
inc
add
pop
enter
inc
shll
scas
ret
rolb
cmp
out
add
add
pop
pop
ret
push
fidivrl
js
fisubrl
test
ljmp
loope
pop
push
jbe
cmpsl
mov
aam
sub
sub
test
add
lock
pusha
and
or
or
sbb
out
lahf
pop
iret
int
sbb
sbb
ret
dec
jmp
loopne
xchg
dec
int
flds
cld
mov
cmp
sbbl
jnp
inc
loopne
xchg
dec
inc
es
out
cmpl
repz
xlat
lcall
inc
sbb
test
pop
popf
div
jb
inc
pop
add
mov
lcall
icebp
cmc
test
data16
xor
roll
jg
out
cmp
jecxz
jne
std
imulb
pop
arpl
push
outsb
xor
jmp
out
push
fcoml
cmp
je
mov
sbb
cld
pusha
add
std
insl
adc
xor
cmp
inc
rcrb
and
test
push
mov
cmp
adc
loopne
mov
push
dec
fcoml
inc
hlt
jne
push
lahf
jecxz
je
xlat
xlat
out
decl
mov
cwtl
ss
ss
mov
arpl
jmp
cwtl
sbb
pop
inc
ret
lock
jae
lcall
add
decl
cmp
push
sahf
push
sbb
fldt
add
jg
add
jg
frstor
fimull
or
mov
xor
mov
xor
fdivrs
jecxz
rolb
mov
mov
sahf
sti
fs
jns
add
rcr
lock
dec
or
jb
pop
je
lcall
incl
loope
cmpsb
aam
mov
or
jae
fnstcw
ret
xchg
sbb
and
aad
mov
push
hlt
lods
xlat
cmp
fcomip
mov
mov
and
cli
xor
pop
out
add
mov
loope
or
idiv
leave
in
movsl
pushf
les
and
loope
pushl
mov
ljmp
adc
lret
push
pushl
jecxz
fisttpll
jnp
je
jnp
pusha
add
pop
dec
mov
cmpsb
ljmp
or
mov
inc
insl
ficoml
stos
hlt
xchg
add
call
mov
cwtl
xor
push
or
cmc
and
rolb
pop
stos
sbb
mov
pusha
gs
call
ret
fsts
jns
or
stos
aad
mov
data16
sbb
add
pop
icebp
sbb
incb
dec
inc
jbe
aaa
ret
add
out
mov
jl
mov
adc
push
enter
mov
jbe
cwtl
push
push
lods
mov
roll
push
dec
outsl
decl
mov
add
mov
push
cli
mov
icebp
sti
mov
mov
sti
push
ficompl
clc
inc
les
mov
push
sti
std
push
loopne
mov
jg
dec
fimuls
or
push
subl
and
add
cltd
jbe
into
adc
inc
fnstsw
xor
dec
pop
std
decl
mov
lods
add
mov
xchg
lock
scas
adc
int
cmp
mov
dec
sbb
mov
sbb
imul
mov
cmc
push
push
push
pop
andb
cli
xchg
test
push
mov
movsb
pop
push
pushl
sub
mov
mov
mov
sbb
outsl
sub
mov
mov
xchg
insb
fmull
mov
fadd
push
cmp
push
mov
imul
loop
jecxz
test
jmp
push
fsubl
ds
adc
xchg
xor
cmp
enter
mov
and
xchg
cmp
mov
adc
mov
out
pop
lret
clc
cmp
daa
jp
incl
lcall
in
in
outsl
repnz
jb
push
pop
imul
mov
scas
aad
call
sti
divl
scas
push
and
jnp
movsl
repnz
das
push
movsl
inc
incl
sbb
jae
aad
loopne
outsb
fists
outsb
mov
inc
sbbl
call
into
add
outsl
mov
lods
cmp
fcmovu
sarl
je
mov
repnz
add
cwtl
add
ljmp
mov
fs
pop
mov
sti
stos
sbbb
mov
add
fsubrs
aas
sub
inc
arpl
enter
pushf
jne
mov
mov
lcall
and
popa
sarl
pushf
xor
stos
mov
inc
std
or
ljmp
aad
xor
imull
clc
xchg
or
imul
scas
cmp
in
adc
xor
aaa
jb
adc
in
ljmp
xchg
lods
insb
aas
negl
mov
mov
out
or
sar
ljmp
fsubrp
adc
mov
das
jmp
or
xor
call
jg
imul
and
in
pop
or
or
adc
fisttps
xchg
arpl
mov
push
cmp
shlb
jmp
stos
in
push
cltd
mov
push
inc
dec
and
cmpsb
mov
rcll
push
cwtl
xor
or
call
test
scas
clc
pushl
pop
xor
jp
insb
inc
test
mov
outsb
inc
sub
lcall
xlat
xchg
mov
and
inc
and
mov
mov
jmp
or
in
ja,pn
out
jp
fdivrs
mov
mov
das
mov
out
ret
mov
add
stos
fmul
or
std
push
lcall
cld
mov
dec
das
cmp
sbb
fs
data16
notb
std
jg
fidivs
in
pop
popf
xchg
cmp
xchg
jmp
add
or
push
hlt
dec
stos
into
movsl
pop
cmp
xor
and
inc
jmp
popa
in
out
clc
clc
test
ret
and
mov
fimuls
add
call
dec
dec
sahf
xor
aad
add
pushl
ljmp
mov
js
shl
sbb
arpl
jae
shll
scas
clc
jmp
xchg
ds
imul
std
cmp
mov
fwait
push
cli
decl
lock
test
stos
ret
mov
mov
mov
ja
and
lahf
es
jae
cmc
repz
jg
jo
adc
and
mov
cmp
mov
or
loop
inc
lcall
adc
das
cmp
xchg
pop
aas
xor
imul
sahf
jmp
adc
mov
add
pusha
xor
mov
pushl
sbb
inc
mov
data16
imul
mov
jno
and
std
das
cli
out
fcomi
cli
ss
imul
and
jl
and
decl
cwtl
sarb
jecxz
xchg
ret
addr16
mov
jo
sub
adc
mov
decl
les
dec
sub
jmp
push
push
xor
ret
psrlq
div
cmp
shlb
pop
arpl
mov
jg
pop
ss
je
add
mov
call
pop
push
loopne
orb
ja
mov
pop
add
sbb
stos
inc
pop
xchg
ljmp
adc
leave
popa
and
les
and
xor
in
or
push
in
mov
inc
imul
aam
lods
lcall
aam
pop
data16
add
shlb
mov
mov
icebp
out
xor
pop
mov
sub
lcall
or
call
ret
ss
loopne
cmp
xchg
mov
js
add
lcallw
adcb
das
mov
hlt
inc
add
jnp
ret
mov
jl
ficoms
jmp
outsl
sub
jbe
push
movsl
pop
jns
inc
jl
les
iret
mov
lea
or
sub
or
add
inc
or
push
mov
dec
adc
incl
iret
dec
orb
mov
push
movsb
mov
inc
insb
and
cmpsb
test
iret
sub
inc
mov
ljmp
cmp
fs
pop
push
jp
add
cmp
mov
clc
inc
sbb
cmp
rcll
jle
repz
fwait
adc
sub
cmpb
testb
ljmp
cmp
iret
xor
fcompl
stos
pusha
sahf
aam
mov
jg
fdivs
loopne
push
push
subl
insb
xor
push
loop
das
subb
std
ljmp
rolb
or
es
push
shrb
inc
mov
mov
jg
push
sbb
scas
sub
xor
pop
repnz
mov
out
xor
nop
stos
adc
sbb
add
clc
sahf
scas
xchg
jbe
ds
in
aad
adc
inc
addr16
mov
mov
add
ss
call
xchg
mov
insl
cmp
test
fmuls
mov
rol
jae
incl
sbb
push
imul
sub
in
sbb
popf
inc
shlb
mov
cmp
inc
mov
jmp
mov
cmp
mov
sub
stos
clc
je
sbb
aas
int
or
call
mov
or
xor
dec
insb
mov
popa
test
pop
jns
ds
sub
decl
add
sub
stc
inc
aaa
in
cmpsl
dec
xor
mov
jl
sub
mov
add
decl
in
sub
test
ljmp
sbb
dec
pop
movsl
mov
movl
pop
pushf
sbb
push
scas
adc
cmp
sahf
movsb
dec
fidivrs
add
dec
lock
stc
xor
or
popa
and
adc
fcos
dec
sar
xchg
outsb
dec
adc
mov
enter
outsb
adc
push
xlat
jecxz
sub
loop
mov
divb
clc
fcoms
pusha
es
repz
inc
lds
push
mov
movsb
insl
outsl
ret
or
leave
mov
sub
rep
add
mov
in
je
popa
mov
leave
in
cmp
mov
ljmp
shrb
mov
and
es
stos
ds
test
xor
stc
push
jmp
sar
dec
sub
mov
mov
fwait
es
cmp
je
sbb
sbb
ljmp
mov
cmp
mov
inc
lods
push
add
ljmp
adc
pop
xor
sbbb
icebp
hlt
sarl
fsubrs
mov
or
test
inc
pop
icebp
adc
outsb
enter
fwait
cmpsl
xchg
scas
lods
addb
ljmp
mov
insb
es
sub
inc
popa
lods
push
or
insl
subl
mov
call
jg
mov
in
xlat
sbb
jle
dec
std
jno
int3
cwtl
sbb
icebp
test
mov
or
orl
ljmp
nop
and
cmp
cmp
and
fmulp
jecxz
jmp
push
incl
or
and
sbb
outsb
pop
scas
testb
pop
mov
scas
insl
out
dec
lods
ljmp
rclb
aaa
and
aas
mov
loope
adc
fisttpl
jno
mov
mov
mov
lods
xchg
clc
decl
and
popf
icebp
push
push
jns
in
or
xor
fs
pop
cmc
jmp
sub
add
filds
shrb
mov
cwtl
aad
xchg
and
adc
adc
stos
das
mov
and
andl
ljmp
lods
iret
test
scas
test
cmp
push
ret
out
ja
cltd
shlb
push
das
clc
decl
cmpsb
add
aad
mov
xchg
dec
cmp
imul
mov
out
or
or
pushl
pusha
xlat
fdivrl
lods
sub
enter
das
sub
xor
dec
es
cltd
sub
lods
pop
jno
sub
pop
cmp
mov
ljmp
add
adc
sbb
dec
adc
jle
mov
mov
addb
mov
in
stc
int
sbbb
movsb
push
mov
lahf
lcall
inc
stos
icebp
cmpsl
mov
test
cmp
sub
sub
in
xchg
ja
je
dec
mov
int
adc
adc
pushl
mov
dec
mov
cmp
in
decl
jbe
repz
sbb
scas
outsb
push
mov
inc
push
dec
out
add
out
fwait
cwtl
and
inc
mov
add
lcall
bound
push
popa
jmp
fsubrl
outsl
pushf
mov
jg
lods
jne
stc
hlt
mov
stos
xor
add
out
and
add
out
push
bound
insl
xchg
out
xlat
push
ret
out
mov
pop
aam
pushl
sahf
fidivrl
mov
cmp
int
shl
icebp
lret
pop
aam
stos
add
and
ljmp
and
ret
fwait
adc
mov
aad
add
xchg
mov
mov
jle
js
imul
pop
lods
push
lea
sub
fcomip
stc
jno
int3
in
and
outsl
lods
imul
ret
jnp
cmpsl
movsl
cmp
int3
aaa
arpl
sahf
leave
lcall
inc
xor
call
or
mov
cli
hlt
pusha
jb
pushl
out
test
lret
lcall
scas
inc
jne
sbb
xchg
jbe
and
cld
call
fwait
fwait
dec
aas
pushf
xor
insb
imul
sbb
add
mov
lock
cmp
cmp
lret
gs
or
mov
mov
cld
inc
ljmp
cmp
popf
mov
call
push
dec
adc
mov
fstl
fcompl
lret
incl
stos
jnp
das
imul
push
add
mov
jg
mov
pusha
ljmp
ljmp
divl
fstpt
or
sub
or
and
inc
loopne
pushl
imul
or
in
add
ljmp
dec
inc
inc
mov
pushl
sub
mov
jno
adc
add
and
lods
into
mov
scas
clc
out
lods
lods
jae
rclb
pop
inc
or
test
fdivr
fsts
stos
sub
movsl
jle
sub
mov
cld
jb
gs
jecxz
ret
pop
and
out
jle
mov
or
xor
jbe
mov
iret
cmp
fwait
in
or
xchg
ljmp
xchg
push
int3
and
icebp
push
imul
xchg
arpl
adc
mov
add
xor
push
sub
call
add
adcb
outsb
lods
push
addr16
fidivs
call
andps
add
je
lds
inc
xchg
lcall
push
les
mov
xchg
mov
scas
int
mov
popf
lods
ret
xchg
xchg
mov
lret
jb
jmp
sub
pop
and
insb
mov
xchg
bound
cmp
xor
jnp
mov
sbb
sub
xlat
lcall
int
push
xlat
jg
je
jmp
xor
clc
pusha
cld
dec
out
pop
stos
fdivrp
jg
adc
cmpsb
xchg
xchg
bound
jmp
push
enter
sbb
mov
ljmp
and
xor
leave
pop
dec
mov
dec
ja
mov
sar
int3
or
push
jg
movsb
popf
push
xchg
call
les
push
shl
adc
std
popa
jno
mov
add
xor
cmpsl
xorl
sub
idivb
test
inc
xchg
lods
popa
ss
scas
mov
cwtl
push
cmp
es
lock
sbb
xor
xor
jmp
int3
push
push
mov
scas
pop
add
pop
std
sub
adcl
lcall
and
iret
imul
adc
xchg
pusha
icebp
pop
mov
lcall
ret
iret
pop
loopne
push
and
lahf
push
outsb
lret
and
loope
mov
adc
insb
mov
aaa
mov
cltd
fucom
or
test
xlat
pop
mov
push
add
lea
mov
ljmp
adc
cmc
mov
repnz
pop
xchg
xchg
mulb
jp
xor
imul
loopne
mov
mov
push
or
movsl
sub
fists
aas
mov
jmp
aas
insb
aas
sub
adc
out
mov
xchg
mov
xor
data16
ficomps
js
xchg
push
push
shrl
mov
rolb
neg
push
incl
push
mov
es
inc
mov
ss
jg
ficoml
adc
loope
fnstenv
roll
std
jle
adc
mov
out
mov
lock
call
ret
jbe
mov
frstor
lock
sti
jge
and
fs
outsb
pop
or
and
out
cli
stos
xorl
dec
sub
out
push
cmp
mov
out
pushf
filds
shll
add
xor
push
out
or
std
cmp
lods
cmp
setge
add
xchg
jmp
jno
andb
and
in
and
jns
dec
jmp
test
mov
xchg
incl
or
in
mov
mov
andl
xor
sub
shrl
scas
gs
add
cmp
call
xchg
mov
dec
dec
cmp
decl
and
push
mov
push
cmc
mov
ljmp
xchg
jg
lea
mov
inc
mov
inc
pop
fidivs
inc
inc
add
int
int
lcall
adcb
jno
aaa
shl
scas
pushf
cmc
xlat
inc
insb
loop
push
pslld
cli
jmp
or
inc
jbe
enter
xor
ret
jno
pop
inc
incl
stc
jmp
mov
mov
ljmp
iret
cli
call
mov
std
mov
out
sahf
jecxz
pushf
sbb
aas
mov
aas
pop
int
dec
fwait
jg
lea
std
scas
mov
test
es
add
fs
fistps
push
pop
xchg
jns
inc
and
lahf
add
addr16
sub
inc
or
cwtl
adc
jmp
jp
inc
outsl
sub
pop
lds
sbb
fisubrs
cwtl
inc
mov
hlt
in
adc
pop
adc
mov
sti
pusha
fimuls
push
js
jmp
cli
out
shl
das
out
ss
mov
cld
decl
push
mov
bound
rcl
inc
dec
cmp
mov
sbb
out
adc
adc
dec
xor
push
or
sbb
andb
xlat
jg
and
dec
sub
cs
push
sub
add
shll
sti
aas
aas
enter
cmp
push
imul
pop
sahf
cmc
jg
lcall
in
sub
sub
stc
inc
es
nop
fmuls
push
jb
in
inc
pushl
ret
or
push
aam
test
enter
xor
lea
insb
outsb
ljmp
lods
decl
inc
mov
push
clc
icebp
nop
div
pop
cs
jge
or
mov
sbb
decl
pusha
repz
les
mov
nop
cld
incl
cmp
push
or
fldl
cmp
pop
xchg
ljmp
movsb
or
je
inc
ficoms
lea
inc
repnz
pop
push
pop
xor
fadd
sbb
pop
movsb
rolb
jg
and
std
js
out
push
inc
jns
or
jg
decl
insb
and
shl
mov
pop
les
pop
sub
cli
dec
pop
jg
ljmp
scas
pop
jne
jl
movsb
push
xor
fwait
and
inc
decl
leave
fists
dec
outsl
pop
loopne
push
xor
rorb
sub
jmp
cli
xchg
fnstsw
pop
stos
pop
mov
rcr
sbb
inc
xchg
in
aas
and
mov
testl
leave
adc
dec
repnz
xchg
jp
xchg
dec
sub
arpl
outsl
sbb
clc
in
iret
inc
jecxz
mov
mov
nop
icebp
lret
ja
inc
sbb
jl
pop
jg
inc
mov
push
xorl
push
test
push
insl
cmc
clc
pslld
push
es
adc
out
dec
ljmp
ficoml
aad
call
mov
xchg
or
fdivr
decb
pop
scas
jmp
mov
repnz
sbb
add
sti
minps
or
jg
ret
sahf
jns
out
ret
jmp
ss
dec
add
lods
mov
out
push
and
daa
pop
adc
mov
dec
mov
xchg
aaa
push
cmp
loopne
mov
pop
push
mov
aas
lcall
out
adc
ds
decl
fldt
cs
inc
inc
aad
xor
daa
int
js
push
add
mov
push
clc
fdivrs
out
and
push
daa
iret
inc
stc
sub
decl
leave
pushl
mov
mull
or
add
pop
mov
addr16
pop
stc
repz
push
hlt
or
pop
cmp
push
push
loopne
fstpt
in
lcall
adc
adc
in
imul
icebp
mov
out
xchg
call
push
in
rolb
fildl
ss
xchg
push
popa
xchg
out
xchg
movsb
pop
push
sbb
jg
cmc
adc
pop
push
fmuls
jmp
push
mov
adc
or
inc
cmp
xor
decl
in
incl
mov
xlat
scas
adc
inc
dec
clc
aas
jno
and
cwtl
movsl
jbe
jmp
stc
inc
push
jmp
push
jnp
test
jno
push
jmp
aas
and
and
jmp
jbe
lret
mov
sahf
lods
push
jg
test
jno
mov
paddsw
loope
shrl
aad
inc
push
aas
adc
loopne
push
mov
inc
ret
and
jmp
stc
push
fs
sti
jg
repnz
xor
aam
aas
and
iret
leave
inc
or
mov
fnstenv
test
insb
incl
fidivs
stos
pop
add
aas
out
mov
inc
test
jb
call
repz
mov
loop
nop
out
mov
mov
and
add
fnstenv
scas
pop
sub
cld
pushl
mov
adc
pushf
loopne
push
dec
or
aas
mov
inc
outsb
xchg
pop
rol
nop
inc
mov
xchg
sbb
lahf
cmp
insl
data16
pop
call
pop
push
lret
xor
add
dec
test
fisttps
test
jne
or
adc
icebp
push
enter
pop
movl
cmp
shrb
mov
sahf
add
in
jns
out
mov
push
pop
ficompl
orb
das
mov
cmc
sub
aad
mov
icebp
in
inc
mov
rcrb
xor
xor
sahf
pop
outsb
cld
mov
scas
sub
and
or
aas
or
stos
lea
mov
xchg
mov
test
loop
int3
jne
dec
loopne
or
mov
repnz
mov
sti
and
lret
lock
inc
jnp
mov
inc
je
add
sti
xchg
outsb
push
das
xchg
and
enter
push
mov
mov
stos
ret
sub
sarl
cli
incl
rcll
jo
loope
je
fisubrs
dec
fs
and
sub
inc
fbld
mov
mov
cmpsb
fsubl
and
aas
and
mov
mov
imul
cld
xchg
stc
decl
in
or
aas
dec
xorw
negb
push
xchg
rol
sbb
jmp
movsl
sbb
outsb
and
daa
xchg
cmpb
in
aas
push
xchg
push
mov
push
repz
and
loope
nop
cld
call
sbb
sti
mov
xchg
scas
push
or
in
jae
mov
scas
mov
and
dec
add
cmpb
test
repnz
xor
mov
fdiv
mov
sbb
leave
jg
push
jns
repz
les
cwtl
jae
dec
and
decl
pop
and
add
mov
aas
and
jge
mov
sub
inc
mov
jnp
jno
dec
adc
xchg
incb
nop
mov
nop
sub
call
call
jp
xchg
xchg
jnp
movsb
jp
cmp
outsb
pop
sbb
pop
xchg
or
rcll
mull
xchg
ja
xchg
mov
incl
cwtl
mov
sub
sbb
xchg
push
pop
and
push
mov
incl
imul
imul
leave
pushf
cmpsl
jmp
pusha
push
mov
pushf
lahf
mov
or
xchg
mov
jge
test
dec
mov
or
aaa
ds
mov
imul
push
decl
xlat
incl
out
mov
rcl
popf
and
mov
adc
xor
inc
bound
mov
jg
xchg
ja
xchg
sbb
stc
xor
stos
mov
lock
xor
push
fidivrl
push
ds
inc
sub
fdivr
mov
gs
jle
and
outsb
inc
js
pop
bswap
stos
jns
aas
enter
and
das
cmpsl
or
or
xchg
ds
leave
pop
xor
dec
adc
call
pop
xchg
in
inc
push
aas
addr16
pop
add
jae
xchg
and
je
add
xchg
cli
ss
fs
lcall
cmpsb
mov
lods
dec
mov
xchg
test
jno
or
jg
jb
or
push
shl
add
inc
movsb
sub
inc
adc
jg
fmuls
jp
sar
sar
or
pop
inc
pushf
ficompl
mov
sbb
dec
cmp
push
bnd
test
and
mov
and
mov
pop
leave
movsl
pop
pop
lcall
negb
or
jae
incl
jnp
loopne
mov
pslld
loopne
sbb
xchg
inc
cmp
es
out
decl
fidivrs
jl
pop
mov
mov
or
jno
lret
push
loope
fdivl
call
rclb
add
add
and
decl
xor
test
pop
push
jo
leave
xchg
cli
mov
pushl
sarl
xlat
jg
icebp
enter
in
pop
sbb
insl
push
sub
loope
push
adc
das
clc
dec
xor
cmc
mov
inc
xlat
inc
fstl
lret
inc
add
mov
int3
mov
cld
decl
outsl
jmp
xor
sbb
not
mov
imul
and
pop
fdivr
call
mov
in
sbb
enter
aas
stc
lcall
xchg
mov
cli
mov
adc
fstpt
test
and
ljmp
test
sbb
loopne
inc
fadds
or
movsb
push
cld
dec
adc
jno
inc
les
stc
push
mov
push
dec
xor
cmp
mov
inc
add
mov
rcl
xchg
outsb
lds
xchg
popf
lcall
shll
enter
xlat
xor
scas
stos
push
lods
add
decl
sti
xchg
fstl
iret
and
call
jbe
xchg
stc
int
mov
aaa
pusha
int
cltd
subb
jns
pop
xor
add
mov
cmp
fcmove
gs
xchg
mov
sbb
push
adc
incl
xor
in
mov
aas
outsl
jno,pn
dec
or
pop
mov
xchg
and
mov
lret
adc
ds
incl
ss
jecxz
pop
aas
aam
shlb
das
and
flds
inc
add
jg
dec
xlat
lahf
jle
test
sub
sub
out
or
jmp
int
mov
rorb
or
incl
mov
mov
scas
aas
sbb
xor
push
cld
xchg
scas
lahf
pushf
xchg
movsl
daa
pop
mov
ljmp
sub
mov
inc
rorb
loop
fisttps
xchg
xchg
mov
hlt
lcall
add
mov
or
fwait
into
loope
lds
cmp
sub
mov
jecxz
icebp
xor
mov
ljmp
or
out
loopne
pushl
jg
pop
ds
ficoms
ljmp
stos
adc
xchg
inc
ret
dec
adc
lret
out
mov
push
dec
adc
shrb
sub
dec
mov
inc
cmp
sbb
fdivr
pushl
push
xor
or
stos
scas
xchg
adc
ljmp
adc
pop
out
arpl
daa
and
outsb
push
jmp
leave
es
jg
pop
cmp
mov
std
out
sahf
mov
xchg
or
sbb
incl
jns
xchg
add
or
mov
test
outsb
xor
sbb
std
lahf
es
push
or
cmp
jmp
push
mov
inc
xchg
push
cmp
adc
jecxz
and
mov
clc
cmp
jl
movsb
rcl
loope
incl
pop
addl
xor
mov
mov
fcoms
mov
aas
in
loopne
and
cmp
add
inc
test
inc
test
cmp
push
ret
mov
lds
nop
mov
sahf
jno
mov
inc
sub
mov
cmpb
mull
xor
sbb
test
mov
jg
mov
fbld
insb
out
aad
xchg
ja
int
rcl
inc
mov
adc
pop
mov
sbbb
inc
movsl
sub
add
cmc
inc
jmp
inc
ds
out
add
mov
dec
and
mov
cltd
jnp
xchg
inc
xor
xchg
or
and
jmp
lret
aas
cmc
dec
lahf
and
mov
test
scas
add
pop
pop
daa
dec
daa
outsb
repnz
decl
jecxz
movsb
add
dec
out
sub
pop
stc
rcr
adc
jmp
adc
int3
xchg
add
xchg
mov
xchg
js
imul
push
adc
adc
mov
push
fildl
out
lcall
shlb
insb
movsl
add
daa
rcrl
inc
mov
std
movsl
popf
int
ljmp
push
sub
fldl
lahf
adc
fcmove
mov
std
mov
cmp
mov
push
enter
xchg
jne
jne
inc
popf
jmp
in
adc
cmp
and
outsl
out
mov
arpl
sti
fcom
pop
dec
loope
lea
or
adc
mov
incl
call
ret
std
movsb
cwtl
stos
adc
pop
movsl
aas
pop
idivl
jle
call
and
iret
or
sbb
cli
lahf
push
inc
adc
fstl
andb
outsb
lcall
movsl
leave
out
xor
je
daa
xchg
inc
cmpsb
out
repnz
pop
xor
lcall
push
movsl
xchg
pop
outsl
daa
mov
xchg
mov
mov
xor
fs
cltd
addr16
adc
sbb
sub
movsb
insb
sub
xchg
imul
dec
add
push
and
roll
cmc
xchg
mov
sahf
add
push
out
jg
mov
inc
dec
pop
xor
mov
notl
and
das
and
pop
inc
xchg
std
fdivrp
decl
jno
into
push
add
out
repnz
fidivl
dec
sbb
jmp
fcmovnb
sbb
pop
mov
je
addl
lods
cmp
shll
jmp
push
mov
shrb
jmp
xorl
nop
push
jbe
cmp
sarb
addr16
shrl
movsb
dec
scas
cld
movsl
or
mov
js
xor
push
syscall
lcall
cmpsl
stc
repnz
dec
inc
ret
dec
xlat
inc
inc
incl
stc
jl
pop
inc
push
fwait
push
ja
push
pop
xchg
push
test
and
incl
pop
sbb
arpl
mov
and
fs
sub
fnstcw
insb
popa
mov
outsl
incl
nop
pop
mov
cmp
fwait
cmp
inc
sbb
aas
and
aas
hlt
jnp
pop
mov
sbb
stc
ja
addr16
push
push
scas
push
lret
inc
enter
fwait
ret
lea
movsl
aas
dec
fildll
and
and
xor
icebp
fsubr
dec
lret
data16
adc
dec
lret
mov
mov
frstor
dec
ljmp
aaa
movsb
lret
mov
fidivl
xor
stc
loop
adc
pop
in
jo
mov
push
sub
and
int
jo
stos
mov
pop
pop
jae
ljmp
and
push
repz
dec
pop
mov
push
test
jmp
jno
in
fwait
stos
data16
jmp
bound
pop
stos
stc
daa
cmp
jmp
mov
xor
and
inc
pop
cmp
pop
inc
mov
imul
pushl
push
pop
std
cmp
mov
cli
jbe
test
dec
cmp
sub
fcompl
mov
push
dec
jb
sub
daa
mov
inc
add
out
cmp
cmp
mov
aas
out
add
mov
aam
fcom
xchg
lock
lods
push
push
jle
ljmp
add
ljmp
mov
rep
hlt
ljmp
inc
repnz
aam
call
out
dec
mov
je
xor
lods
ret
xor
mov
pushl
int
loopne
fistl
jg
mov
gs
sbb
xchg
push
shlb
cmp
decb
or
ljmp
sbb
pop
dec
adc
pusha
fcmovb
jb
rcrb
xchg
scas
out
and
decl
ret
xchg
mov
jmp
repz
mov
rorl
xchg
out
xor
hlt
inc
pop
add
mov
jns
dec
push
popf
push
pop
cmp
pop
cld
dec
or
mov
into
stos
and
inc
dec
ret
fmull
stos
mov
jg
movsl
aaa
cmpsb
lret
xchg
adc
mov
push
sahf
jmp
inc
das
sti
addb
pop
scas
cmc
das
clc
jmp
aaa
fwait
cwtl
fnsave
movsb
lea
jo
imul
or
decl
jl
xchg
lock
adc
jmp
mov
decl
ds
or
xlat
jno
pop
ljmp
loopne
mov
adc
jg
mov
push
dec
and
mov
sub
jo
lret
rcrb
aad
lret
adc
sbb
or
daa
push
std
sahf
mov
arpl
stos
xor
call
jne
sbb
dec
sub
mov
imul
mov
jecxz
loopne
xlat
loopne
mov
push
into
mov
cmp
fisttps
incl
cmp
stos
push
push
shrb
fstl
mov
pushl
out
stos
dec
xchg
push
popf
aam
test
dec
jmp
cwtl
lods
fimuls
test
shlb
dec
test
jb
xchg
pop
xchg
jns
xchg
sahf
adc
mov
call
sbb
sbb
jnp
shll
mov
decl
add
mov
aaa
mov
roll
jg
mov
and
fisubs
push
in
lods
pop
call
enter
outsl
fidivs
adc
mov
mov
stos
and
sbb
imull
incl
std
das
sbb
test
xchg
lods
dec
stc
xchg
or
xchg
mov
xor
outsl
mov
test
inc
fldl
sub
or
loope
in
lcall
xchg
push
jmp
xor
fwait
adc
or
notb
into
pop
cmc
pop
mov
dec
xchg
adc
pop
and
or
inc
xchg
popf
daa
mov
or
cmc
pop
xchg
outsl
and
mov
dec
clc
scas
mov
notb
test
pop
ficompl
call
fwait
cmpl
dec
mov
push
aas
mov
data16
clc
fidivrs
sbb
pop
pop
ret
add
out
cld
incl
insl
aam
cmp
lods
les
cmp
aas
push
ljmp
int3
les
dec
testb
fwait
repz
sub
and
xchg
mov
xchg
lahf
mov
xchg
mov
test
push
arpl
dec
jg
dec
outsb
or
mov
jmp
repz
jp
xor
mov
fisttps
into
mov
in
mov
in
mov
pushf
mov
cmp
xor
cltd
and
popf
dec
dec
lret
out
daa
loopne
out
and
jb
xor
in
scas
fidivrl
or
dec
mov
pop
mov
popf
cmp
arpl
decb
jmp
pop
repnz
fs
jl
jp
xor
ret
dec
lock
loope
incl
xchg
mov
call
xchg
inc
inc
movsl
mov
orl
lcall
adc
push
cs
sub
jnp
mov
ljmp
inc
int3
inc
inc
mov
mov
push
orl
outsb
das
sar
jmp
loopne
cli
lret
rcll
jae
pop
jecxz
adc
lcall
lods
xor
mov
adc
push
jg
jg
shlb
add
xchg
mov
and
repnz
mov
ljmp
sbb
jmp
jg
call
add
idivl
into
jns
sub
mov
roll
pop
or
fmul
ret
mov
pop
inc
cmp
sar
stc
ljmp
ljmp
jp
std
jbe
push
insl
imul
xor
cmp
jmp
call
ret
out
pop
or
adc
call
out
loopne
cmp
push
dec
imul
jge
sbb
fisubs
sti
jg
push
xchg
jg
jne
popf
jns
jg
call
pop
pop
push
movsl
jle
ljmp
vmaxps
enter
mov
cmp
testb
mov
insb
adc
xor
jg
push
shrl
lahf
dec
lea
dec
inc
jmp
incl
mov
push
rcrl
lahf
pop
rcr
js
jle
and
pop
enter
xchg
das
jbe
jne
mov
mov
inc
mov
xchg
dec
and
jns
decl
stc
mov
xor
lods
mov
xchg
divb
xchg
sbb
and
mov
mov
aad
dec
fnsave
test
ljmp
cs
fisubl
or
ljmp
xchg
stc
fs
jl
imul
or
pop
pop
aaa
and
cs
jecxz
cld
ljmp
inc
fists
jmp
sub
adc
clc
test
lock
call
cld
lcall
popf
xor
jb
push
mov
inc
sar
xchg
jmp
or
and
adc
sub
cmp
dec
incl
pop
mov
mov
int3
dec
mov
mov
in
mov
xchg
jg
pop
clc
das
add
fisttps
jns
jp
clc
sbb
aas
push
les
mov
mov
outsb
shrb
pop
loop
idivb
fwait
fs
test
inc
shll
sbb
sbb
ljmp
push
adc
sti
movsl
jo
scas
scas
scas
jle
jmp
aas
pop
es
fbld
pusha
mov
stos
cmpb
in
xor
incl
es
fsubrp
fwait
shlb
push
dec
and
cmpsb
pushf
nop
xor
push
or
xchg
shlb
adc
dec
mov
sub
fdivrl
aad
call
mov
cmp
fbld
xchg
mov
cmp
adc
mov
test
ljmp
cmc
lcall
xadd
jg
fs
out
addr16
insl
sbb
call
dec
or
mov
xlat
xor
cwtl
std
dec
mov
rclb
cld
mov
jbe
inc
mov
in
pop
lahf
lock
incl
push
imul
xchg
mov
push
push
das
inc
pop
inc
pop
cs
fbld
push
movsb
push
pop
dec
xor
nop
dec
fildl
adc
ret
mov
inc
in
andb
fbstp
mov
pop
xchg
lcall
mov
call
sti
fildl
mov
movsb
add
sub
jg
mov
out
jbe
addr16
inc
jle
adc
cmp
jg
pop
and
add
nop
xchg
jne
pop
cmpsb
pop
mov
lods
mov
xchg
jmp
int
dec
xor
shll
jg
rorb
cwtl
mov
xchg
jecxz
cmp
pop
mov
call
mov
and
idivl
jg
jnp
fistpl
add
fcompl
sub
mov
nop
xor
push
call
push
test
scas
andl
xor
lea
and
mov
mov
adc
sbb
ja
dec
dec
push
add
bound
mov
mov
fidivs
sbb
add
cli
les
dec
push
or
insl
or
jmp
or
lcall
and
mov
xor
xchg
lods
push
enter
stos
adc
clc
incl
mov
stc
adc
sub
xor
incl
pusha
add
roll
sub
pop
shlb
rclb
lcall
stc
mov
call
jb
dec
mull
sahf
fwait
dec
addr16
jno
adc
lea
jl
or
stos
jo
movsl
cmp
pop
adc
scas
fsubrs
loope
jg
mov
les
jnp
xor
push
and
mov
mov
jo
mov
movsl
jno
into
cmpb
stc
out
push
rorl
fistps
sbb
data16
jl
cmc
adc
jmp
int
adc
jl
mov
xor
out
add
xor
mov
mov
mov
pop
aad
push
loop
jns
ss
stos
incb
jge
jnp,pn
dec
inc
loopne
cmp
call
inc
push
pop
push
outsl
mov
or
pop
mov
mov
ljmp
inc
jp
jl
notl
mov
int3
push
adc
sub
out
popf
cmp
stc
leave
sti
rcrl
or
fsts
inc
sbb
clc
mov
inc
cmpsb
xor
xchg
cmp
mov
cmp
sub
dec
jae
orb
pop
fdivrl
inc
leave
call
xor
sbb
lock
int3
mov
sbbl
mov
mov
cmpsb
inc
clc
jg
push
dec
mov
jmp
ss
jbe
cwtl
push
outsb
movsl
iret
test
aam
lcall
lcall
clc
xchg
popa
xlat
shld
test
lcall
pop
mov
aas
hlt
mov
ss
jge
xor
mov
incb
je
xor
aas
mov
mov
mov
xor
aad
mov
leave
fwait
inc
inc
and
bound
inc
mov
jae
insl
or
mov
jmp
add
mov
icebp
jnp
hlt
cmpl
push
imul
sahf
inc
jns
mov
pushl
stc
xchg
je
pop
xor
arpl
lret
push
std
inc
sbb
std
inc
sub
jg
dec
popw
loopne
insb
push
xchg
mov
jle
inc
rcll
inc
xchg
in
xchg
shlb
mov
push
or
push
sbbb
imul
jmp
insl
mov
aas
sub
or
mov
repz
xchg
lret
outsl
fildll
mov
jmp
imul
loope
xchg
fnstsw
aaa
iret
repnz
or
or
ljmp
and
mov
push
shr
dec
add
mov
jg
and
mov
into
lock
xor
je,pt
xchg
push
push
xchg
jbe
stos
decl
test
in
loop
push
push
movsb
loop
and
mov
pushl
repnz
sbb
stc
mov
mov
sub
sbb
lea
jle
mov
jmp
push
dec
and
aam
inc
sbb
inc
cld
fbstp
and
mov
lods
push
lahf
stos
xor
scas
ljmp
xchg
xchg
pop
push
xor
sbb
dec
push
lods
ja
inc
add
push
sub
insb
pop
xchg
jo
mov
cmp
jg
test
pop
xchg
pushf
outsl
arpl
pushf
pop
fwait
aad
insl
sbb
jge
mov
aam
out
call
jle
mov
shrb
xlat
xor
popa
aad
or
aas
jb
pop
jo
in
sbb
jmp
dec
std
into
jnp
shr
jo
or
inc
jo
xchg
or
imul
sarl
mov
movsb
adc
fidivrl
or
fcoml
decl
cmp
enter
jge
mov
jl
push
sub
and
or
call
ret
mov
jg
mov
gs
incl
xor
or
outsb
adc
iret
js
cmp
fistps
or
mov
call
enter
pop
jecxz
mov
outsb
lcall
xor
xor
iret
mov
mov
fbstp
int
popf
fsubrs
repz
xor
ljmp
add
mov
pop
lcall
cmp
insl
add
lcall
sbb
fisubrs
rolb
in
js
xchg
repnz
cli
incl
dec
mov
ja
pop
dec
sbb
push
inc
out
jecxz
xor
inc
mov
push
or
add
mov
roll
dec
test
pop
pop
or
decl
cmpsb
stos
ret
add
mov
xor
iret
jae
sbb
insl
add
loope
decl
iret
xor
lea
loopne
and
ret
js
shll
das
ret
stos
jo
sbb
inc
or
loopne
cmp
push
adc
mov
decl
lahf
dec
pop
es
lahf
mov
mov
cmp
ljmp
inc
ds
inc
ljmp
clc
in
adc
lods
fwait
cmp
movsb
out
jg
add
aaa
sub
sbb
pushf
idivl
std
pop
icebp
decl
rorl
stos
cmp
pop
pushf
cmp
stos
ja
mov
sti
scas
rcll
push
dec
cmp
cwtl
dec
inc
fs
jns
jb
outsl
cmp
inc
test
mov
mov
xorl
push
pushl
rcrl
loop
clc
and
or
shrb
push
dec
and
inc
cmpsb
lods
jns
sti
cwtl
ret
ret
fldl2t
mov
jg
ljmp
xor
pop
xchg
cmp
mov
nop
add
ret
ljmp
dec
out
cmp
jp
aad
xchg
push
mov
sub
mov
rol
jne
jg
or
mov
hlt
push
mov
mov
mov
mov
sbb
in
dec
dec
movmskps
scas
stos
enter
mov
jmp
and
js
incl
jmp
jge
pop
xor
out
jp,pn
cwtl
sarb
in
cmp
dec
push
rcr
leave
add
into
sub
fisubs
push
fcmovu
push
stos
or
loope
mov
lcall
je
sub
sbb
lahf
outsb
into
and
sbb
stos
xchg
mov
lds
dec
jo
push
dec
mov
xor
mov
out
mov
fcmovu
cmp
inc
mov
pop
shl
in
lcall
outsb
inc
and
addl
and
mov
aas
cli
xchg
inc
fs
dec
loop
out
leave
cld
inc
out
dec
enter
inc
push
popa
and
in
jg
mov
stos
aam
or
add
jmp
das
jmp
mov
call
xchg
inc
js
xchg
incl
pop
ja
cmp
jg
xchg
jmp
ljmp
mov
jge
divb
or
or
pushl
int3
popa
cmp
mov
dec
push
stos
lods
scas
iret
insl
add
cmpsl
loopne
mov
out
loop
out
xchg
and
sbb
iret
pop
mov
incb
push
pmovmskb
sub
cmp
jg
mov
test
loop
fstpt
cmp
add
int
lds
loop
mov
jp
lret
jne
scas
sti
shlb
mov
aas
arpl
cwtl
xchg
js
outsb
add
das
lods
xorb
mov
in
int3
decl
aaa
sbb
pushf
test
jb
adc
out
xchg
ljmp
xchg
dec
fnsave
fnstcw
jnp
or
fcmovbe
inc
pop
mov
lods
cmc
clc
mov
mov
iret
push
push
inc
aas
xchg
loop
cvtpd2pi
mov
inc
and
add
call
loopne
ds
lcall
lahf
jo
lea
xor
jmp
out
or
mov
jle
decl
in
call
mov
in
ds
aas
mov
xchg
xor
sbb
fcomip
and
adc
shlb
xchg
shl
pop
cmp
in
adc
and
jbe
dec
push
ficoml
cmp
jg
jmp
dec
or
sub
lods
inc
push
push
filds
hlt
sub
mov
jge
shrl
dec
insl
idivb
mov
sbbb
loop
shl
or
sahf
adc
or
mov
jo,pt
bswap
incl
mov
push
xor
pop
inc
fists
xchg
lcall
aaa
add
je
jg
aas
xor
or
cmc
lds
scas
mov
mov
fildll
icebp
ret
jnp
adc
adc
ja
mov
xor
mov
push
movups
loope
stc
lcall
fistps
jne
mov
in
add
aaa
cmp
or
fcmovnb
xor
or
sub
fsubrl
in
jg
sub
sti
mov
jns
cmp
movsb
jmp
stc
pushl
xchg
sar
int3
aam
jae
fisubrs
dec
pusha
in
unpckhps
fisttpll
mov
insb
imul
push
xchg
popf
sar
xchg
cli
incl
fcmovne
mov
test
aas
mov
call
incl
dec
pop
add
mov
ljmp
inc
movsb
call
xchg
loope
fisubrl
imul
sar
and
push
and
lcall
xchg
jp
sti
sarl
adc
cmp
jns
inc
test
rclb
decl
bnd
lret
idivl
mov
jge
ds
adc
mov
or
jmp
popa
xor
push
and
sbb
fistl
in
jg
jg
cli
lahf
push
sub
in
mov
xchg
or
cld
cltd
dec
cmp
inc
sahf
jp
rclb
gs
out
cs
mov
jmp
dec
test
push
jae
loop
pop
mov
push
test
repnz
pushf
pop
mov
or
lock
cli
mov
jmp
test
mov
adc
and
xchg
bound
addr16
mov
jne
imul
jns
fcomps
add
in
jg
test
lock
fildll
mov
sub
rclb
dec
enter
jmp
ja
push
and
icebp
mov
movb
jle
test
aas
inc
dec
fistpl
dec
sarl
xor
popf
mov
cmp
ficompl
jg
aam
aad
push
dec
mov
cwtl
mov
xor
in
call
mov
ss
data16
mov
pop
mov
lock
cmpl
les
call
mov
popa
push
sbb
and
mov
pushl
aas
push
mov
pop
cmpsb
inc
pop
and
cmp
push
mov
and
jo
pop
cmpsl
jmp
and
sub
inc
lods
addr16
pop
add
aas
js
mov
in
push
pop
mov
mov
xor
mov
clc
bound
dec
xor
dec
jecxz
lcall
movsb
fdivs
scas
and
test
js
adc
mov
cmp
popa
xchg
mov
sbb
sub
add
imul
testb
inc
std
incl
sub
test
xlat
push
mov
decl
jp
and
jns
push
out
aaa
cld
mov
mov
pop
pop
call
mov
jo
add
xor
xor
mov
cmpsb
mov
mov
shlb
hlt
sarl
loopne
fwait
xchg
fsubr
dec
adc
lea
pop
sahf
mov
xor
inc
push
pop
int3
cmp
xor
call
push
add
mov
xlat
dec
insl
insb
mov
jmp
push
inc
gs
incl
push
mov
es
push
jns
lahf
jbe
cmp
ds
xor
test
mov
and
dec
js
inc
int
int
imul
lcall
xchg
outsl
push
mov
dec
dec
aas
loop
cmp
incl
cmp
cltd
nop
fs
imul
dec
mov
lds
mov
jg
sub
jge
sbb
dec
xchg
lcall
lds
sub
incl
xorl
sub
xchg
fcoml
pop
mov
lret
mov
mov
leave
cltd
or
cmp
out
jns
sub
mov
xor
jno
cmpsl
sbb
lret
xor
hlt
sub
xchg
into
daa
fdivp
int3
call
std
scas
xchg
mov
or
outsl
pop
orb
cmp
lods
sub
incl
jg
loop
ja
or
inc
test
sar
incb
jp
and
dec
rcll
jmp
into
shr
push
sti
sub
or
insl
je
inc
lods
aas
enter
stos
cmp
sbb
sbb
jmp
xchg
icebp
fst
rolb
pop
jge
cmp
jb
cmc
lea
dec
sti
test
xor
xor
outsb
mov
push
sub
mov
add
adcl
fsts
das
push
cmc
in
mov
ja
das
pop
bound
mov
push
rcl
or
das
adc
xchg
cmpb
call
adc
pop
call
cmp
dec
ud0
cmp
in
mov
sub
aam
add
fildll
xchg
outsb
push
jb
imul
out
or
lcall
mov
push
cli
in
xchg
ficomps
push
xor
inc
loope
decl
pop
stos
xchg
jmp
dec
imull
mov
sti
inc
lds
std
adc
inc
out
test
or
test
rcrb
ljmp
adc
mov
mov
cs
mov
xchg
fcom
jmp
add
lea
jg
xchg
mov
dec
adc
mov
je
jbe
cs
mov
or
jae
inc
std
js
shlb
mov
pop
xlat
mov
xor
sub
mov
imull
mov
pushl
jl
pop
cmp
jp
enter
lds
stos
push
out
out
fstps
lcall
icebp
addr16
dec
insb
movsl
enter
sti
sbb
loope
cld
clc
pop
gs
or
sbb
adc
and
lds
xlat
mov
xlat
inc
and
and
mov
movsb
mov
cmp
jns
outsl
roll
pop
jecxz
std
xor
sahf
sub
test
iret
aas
push
icebp
pushl
pop
imul
je
pushf
jge
mov
jp
and
push
pop
pslld
pop
pop
jne
inc
mov
or
out
sbb
or
mov
mov
push
inc
inc
aas
xchg
cmc
aas
inc
incl
cmpsb
sub
inc
lret
dec
mov
mov
lret
or
stos
incb
popa
jae
imull
ds
std
push
cld
and
xor
int3
andl
push
pop
jmp
stc
out
cmp
or
subb
pop
in
aas
and
add
add
das
jns
sub
cld
incl
mov
pusha
into
xchg
in
leave
mov
loop
cmp
or
mov
int3
mov
test
inc
std
incl
cmp
xlat
popf
or
std
into
lret
in
inc
dec
sbb
pop
std
mov
cmp
xor
sbb
enter
jg
imul
addr16
and
sbb
lcall
mov
ret
xchg
jae
dec
out
aas
lcall
fstpt
lea
xlat
addb
mov
fwait
aas
nop
adc
dec
bound
gs
jmp
adc
push
xchg
mov
sar
enter
xor
or
mov
xor
mov
scas
jge
lcall
outsb
adcl
js
sub
mov
add
in
mov
cmpsl
adc
xchg
lds
cld
fiaddl
cmpsb
stc
call
lret
cld
xchg
jle
pushf
dec
pop
sub
fists
mov
cmp
loop
fwait
add
pop
js
in
imul
loope
push
cmc
out
hlt
mov
int3
mov
xchg
in
dec
inc
sarb
out
or
std
int3
nop
pop
leave
mov
scas
cli
call
aas
sarb
push
in
mov
cmp
pop
iret
mov
std
cmp
mov
hlt
lods
mov
mov
push
pushf
xor
out
sbbl
pop
pushf
adc
lods
fisttps
mov
repnz
sti
fsubrp
xchg
sti
pop
sbb
dec
incl
mov
cmp
mov
fadds
loopne
mov
push
mov
call
push
jle
push
test
xchg
mov
xor
imul
fstl
xor
cwtl
fstpt
push
bound
mov
je
dec
or
pushl
xor
mov
stos
or
daa
loope
lea
pop
fisubrs
sbb
pop
dec
loop
ljmp
sar
test
mov
addb
decl
enter
js
xchg
loopne
adc
fwait
jbe
mov
or
adc
arpl
cli
icebp
sub
scas
xchg
fildl
mov
lock
mov
jg
hlt
ljmp
add
lret
pop
cmp
mov
fldl
pop
fs
je
repnz
mov
gs
jne
cmc
incl
mov
jl
or
loop
cmp
cs
jle
push
adc
xchg
stos
stos
lock
pushf
cli
lcall
or
scas
icebp
inc
cli
pop
jl
pop
cmp
aas
xor
lcall
lret
in
popf
push
shr
fidivs
imul
mov
push
int3
mov
mov
daa
sbb
inc
xor
or
and
and
cmp
sahf
add
stc
xchg
mov
mulb
outsl
arpl
dec
pop
adc
insb
shlb
xchg
sahf
lahf
pusha
ficoml
int3
std
outsl
decl
movsl
insb
dec
test
iret
add
sub
xchg
fwait
cmp
inc
xchg
icebp
cmp
jl
dec
mov
popa
ljmp
fimull
addr16
popa
mov
xchg
push
cltd
adc
in
mov
xchg
das
xor
pop
int3
sbb
js
sub
nop
push
ss
call
push
sub
dec
arpl
lcall
test
pop
les
push
int
cmp
loopne
inc
mov
imul
insl
mov
insb
repz
inc
dec
lods
or
imul
outsl
cli
mov
push
notl
cmpsb
out
push
adc
adc
push
push
test
decl
hlt
mov
ror
pop
sbb
in
shll
dec
cmpsb
jle
jmp
jg
imul
lods
push
nop
xor
cltd
and
and
sbb
nop
in
aaa
iret
cmp
xchg
cld
cltd
lahf
jp
mov
aad
out
mov
xor
pop
jge
dec
mov
lret
pop
mov
pop
and
jle
sbb
jl
lea
decl
and
popf
aad
xchg
mov
mov
in
mov
xchg
fbstp
lock
decl
sbb
aam
mov
pop
out
lods
mov
sbb
hlt
push
shrb
ljmp
mov
and
mov
mov
mov
rep
sub
hlt
aam
shrl
in
aam
xor
daa
ret
imul
or
ror
pusha
aaa
mov
xor
cmp
into
divb
aam
js
cs
dec
jae
add
ret
ljmp
push
lds
pavgb
pop
push
stc
cli
stos
sub
cli
pushf
insb
cmp
push
dec
in
push
jns
inc
cli
push
lods
lock
iret
cmpsl
inc
add
ss
dec
in
out
xchg
cmp
fisttpll
dec
pop
xor
insb
cmp
mov
and
cmp
lcall
mov
loopne
push
push
fwait
or
cmp
pop
inc
jae
dec
dec
dec
sub
fsubl
scas
and
fwait
inc
cltd
dec
push
fnstcw
jb
das
xor
dec
dec
pop
lret
mov
pop
push
cmc
mov
int
xor
sti
movsl
stc
and
stos
cmpsb
add
cld
push
shlb
decl
enter
sub
imul
cld
loop
mov
add
dec
mov
xor
sub
pushl
jbe
or
scas
pop
imul
lcall
mov
call
adc
arpl
mov
sbb
stos
fs
mov
aam
fsubrl
imul
jg
test
nop
sub
insl
out
sbb
inc
xor
call
mov
gs
gs
sub
xor
sarl
xor
pop
loopne
enter
or
call
ds
jmp
jb
pop
aaa
orb
mov
push
jb
xchg
jge
fwait
xor
iret
push
loop
mov
fsubr
jns
outsb
xchg
subl
loopne
or
ljmp
fs
rorl
nop
nop
repnz
lahf
xor
pop
push
sub
dec
loopne
push
and
filds
aas
idiv
inc
jne
mov
mov
test
mov
inc
mov
fwait
cmp
sub
dec
negb
stc
imul
jg
decl
cs
fstpl
cltd
push
int3
test
cwtl
out
in
stos
jns
sub
mov
mov
or
push
les
ror
mov
cmp
je
mov
sub
cld
decl
andl
js
cmp
test
inc
jge
fistpl
insb
xchg
cmpsb
orb
popf
pop
jmp
adc
xchg
inc
push
loope
xchg
mov
xchg
lcall
lods
pop
sbb
push
out
call
test
in
cmp
in
cmpsl
push
pop
jle
add
jmp
int3
pop
int3
movsl
jg
in
push
stos
cmp
scas
jo
lcall
dec
adc
jb
inc
sbb
mov
jl
movsb
sub
mov
xchg
fadd
cmp
dec
mov
fwait
xor
xor
rorl
jmp
packsswb
movd
add
inc
push
and
call
sub
dec
nop
add
xor
incl
cld
jno
inc
out
xor
aaa
cmp
pop
push
call
call
imul
cli
test
inc
xchg
mov
mov
sahf
fstp
xor
incl
ret
pop
sbb
je
sub
jp
push
repz
fwait
fs
cmp
les
dec
add
xchg
decl
or
or
dec
imul
jp
lcall
mov
pop
inc
test
test
dec
cmp
sbb
call
xchg
mov
mov
xor
loope
mov
jecxz
sbb
mov
stos
and
xchg
ret
and
mov
jle
xor
and
jmp
inc
movsb
js
cmp
mov
outsb
sub
cs
ja
jns
sbb
call
add
push
pop
shl
inc
add
sbb
add
fldt
inc
sub
seta
jecxz
fcomps
xchg
stos
sub
push
mov
xor
jmp
sbb
sbb
and
jge
ja
mov
mov
mov
cbtw
xchg
mov
xlat
rorb
and
dec
dec
clc
in
fs
dec
mov
add
xchg
mov
and
adc
rorl
push
dec
mov
outsb
pop
insb
dec
sbb
decl
cmp
pop
test
inc
jns
xchg
xlat
fucomip
xor
lahf
jecxz
dec
setnp
mov
out
pop
jbe
fcomps
sbb
jg
pop
call
dec
fwait
xchg
pop
inc
imul
push
sub
sub
in
incl
ljmp
push
bound
sub
jno
popa
repnz
incl
mov
repz
cmp
fisubl
scas
dec
test
incl
shrl
mov
dec
lret
cmp
jnp
mov
ljmp
or
add
inc
negl
pop
ret
jne
int
fisubl
mov
out
arpl
mov
ret
call
fisttpll
cld
incl
movsl
dec
ret
add
and
shll
call
push
ss
mov
insb
xor
imul
in
xchg
lods
xor
adc
add
out
sub
sub
or
imul
scas
ss
ljmp
xlat
and
mov
push
arpl
and
sbb
push
icebp
and
pop
dec
mov
leave
sbb
aad
fsubr
sbb
jle
pop
in
push
dec
cmpsb
out
cmp
push
or
xor
push
fadd
scas
cli
decl
mov
cmp
mov
enter
aam
call
or
mov
sbb
lock
popf
je
push
aam
push
aas
xor
mov
lods
dec
add
test
pop
add
gs
mov
mov
or
das
ficomps
mov
inc
mov
jle
cmp
sbb
fstpt
das
jo
ret
int
decl
nop
ret
lret
push
or
cmp
push
or
fisubl
or
lock
pop
sti
sahf
shr
jle
aaa
pusha
and
mov
pushl
aad
mov
ja
addl
stos
mov
int3
sbb
stos
xor
inc
push
stc
cmp
hlt
mov
les
adc
cmp
daa
test
ljmp
mov
mov
lahf
cmp
rcr
rcr
cs
pop
xor
leave
lock
jg
mov
aad
rep
lea
inc
xchg
pop
aam
sub
xor
adc
sbb
jmp
scas
sub
pop
mov
call
std
add
cmp
xlat
lods
xor
es
fisubs
xchg
psrld
sub
xor
decl
xor
popf
mov
lret
lahf
cltd
jo
xchg
dec
cmpl
fsubs
mov
adc
xchg
repnz
orl
int3
inc
inc
or
ret
sub
jno
mov
aas
push
cld
ljmp
push
ds
out
sub
pop
in
sub
decl
repz
aaa
pop
loopne
xlat
in
push
das
push
fists
inc
sbb
outsb
fs
sbb
addr16
lret
aam
jmp
jno
scas
lock
shll
fwait
sbb
sti
pop
pusha
fildll
aaa
addb
jg
xchg
lcall
movsb
out
push
dec
test
pop
adc
jmp
sbb
minps
decl
pop
pop
in
das
mov
xchg
mov
loope
xor
andl
mov
int3
sub
popa
cmp
mov
pop
mov
loop
fcmovnb
dec
std
or
and
dec
mov
or
jae
and
ret
loopne
inc
rdseed
mov
ret
jo
cmp
or
das
scas
cmp
decl
jns
xchg
fistl
push
pop
in
iret
add
lods
mov
inc
pop
cwtl
outsl
in
cld
jns
adc
push
inc
test
add
pop
mov
inc
notb
adc
mov
mov
fwait
mov
push
cmpsb
aas
outsb
push
scas
inc
sub
lcall
mov
mov
pop
shlb
adc
mov
dec
cltd
scas
add
insb
jmp
dec
cltd
or
dec
imul
loopne
call
sub
fbstp
in
cmp
sbb
mov
add
dec
add
and
lods
add
call
cmp
test
sbbl
outsl
jmp
fidivs
inc
jb
cmp
or
sub
cmpsb
shll
in
decl
mov
mov
xor
dec
imul
inc
stos
dec
je
jg
xor
pop
add
aas
or
notb
pusha
stc
lods
lods
scas
add
add
stos
cmp
xchg
dec
mov
mov
subl
xorb
leave
ror
and
push
lcall
sub
jp
push
shl
mov
rcrb
sahf
icebp
ss
enter
decl
shrb
pop
push
mov
out
pop
dec
loopne
or
dec
sbb
loope
aas
popl
call
or
cltd
cli
outsl
pop
ret
pop
jp
or
pop
hlt
pop
cmp
cli
loop
sar
das
mov
fstl
outsl
mov
fs
xchg
jbe
inc
jmp
std
ljmp
gs
mov
pop
pop
inc
push
shll
inc
fildll
cmp
sbb
inc
jg
js
and
mov
mov
je
loopne
xor
mov
mov
popa
imul
loop
in
test
outsl
dec
int3
dec
call
cmp
sti
lock
cmp
mov
push
addr16
mov
pushf
ja
jno
mov
fbld
sbb
push
pop
xor
add
jmp
jae
lret
jae
dec
lcall
add
mov
or
jecxz
pop
sub
jg
icebp
xlat
xor
jl
jno
jo
cs
xchg
cmpsl
xchg
in
jmp
pop
mov
push
pusha
nop
mov
aas
fiadds
out
adc
loop
fldl2e
pop
cmp
xchg
int3
fdivr
mov
jne
or
cmp
in
shlb
movsl
xor
inc
faddp
dec
clc
data16
adc
cli
mov
mov
jp
or
fbld
xor
decl
stc
roll
fprem1
push
cmp
mov
inc
aaa
or
rorb
jmp
dec
push
dec
cmpsb
jp
pop
pop
and
subb
sub
pop
inc
xchg
inc
out
jb
insb
mov
jns
xchg
aaa
ja
sar
sahf
fidivrl
or
xchg
lods
or
inc
fcomip
in
ljmp
mov
pop
addr16
test
jmp
push
ret
pop
out
and
bound
push
mov
in
dec
push
scas
es
ss
pop
and
stc
inc
xor
test
mov
es
fstl
dec
imul
mov
int
mov
ret
mov
mov
shll
rclb
jns
loopne
jle
lds
xchg
and
fcomip
call
dec
adc
xchg
push
adc
xor
jns
outsb
mov
inc
addr16
push
mov
call
fistpll
lahf
jl
mov
cmc
pop
dec
outsl
clc
mov
test
xlat
push
push
arpl
insb
add
adc
insl
divl
jmp
rcr
pop
mov
pop
mov
out
jg
jge
sbb
jl
icebp
jne
xchg
pushl
cltd
lahf
mov
or
mov
cmc
stos
sub
and
xlat
notl
mov
and
leave
mov
clc
ss
adc
inc
enter
inc
pop
jbe
xlat
xchg
dec
cltd
in
shl
enter
jge
or
xchg
scas
add
call
push
or
dec
jne
mov
adc
ds
jne
push
test
pop
jbe
mov
pop
incl
mov
dec
iret
jmp
nop
mov
cmp
sbb
mov
xor
mov
push
cld
inc
iret
add
jg
cld
push
dec
add
rol
sbb
shrb
jnp
push
clc
jg
jne
cmpsb
icebp
or
inc
popa
push
addl
cmp
add
je
shrb
outsb
mov
rcrl
mov
and
lock
pop
lds
stc
test
push
int3
cmpsl
lds
outsb
inc
sbb
jne
xchg
les
or
sbb
cmp
inc
test
and
incl
ljmp
repnz
xchg
std
dec
das
idivb
xor
mov
pop
jmp
sub
repz
mov
push
das
js
add
dec
push
test
inc
inc
push
push
outsb
test
sub
ljmp
imul
jns
pop
ljmp
movsb
enter
mov
and
sbb
jb
add
insl
fadds
lcall
cmp
push
in
cmpsb
rorb
lea
jne
or
jp
movsb
pop
and
mov
inc
fsubs
jo
mulb
mov
mov
dec
ret
jns
scas
clc
in
out
out
lcall
xchg
shl
clc
int3
inc
mov
call
in
dec
sub
jecxz
imul
mull
sti
add
jl
in
push
mov
mov
jmp
cltd
rolb
pop
push
mov
adc
scas
adc
out
fildll
add
sahf
pop
outsb
rcrb
fcoms
pusha
xchg
scas
sbbl
jg
push
mov
rorb
int
or
cmp
idivb
jnp
push
hlt
cmp
sbb
decb
mov
hlt
aad
int3
mov
push
add
jo
fimuls
adc
inc
sarb
cmp
push
jmp
lahf
cmp
xchg
adc
xchg
sub
aas
pop
and
out
mulb
xchg
filds
jbe
ljmp
pop
loopne
inc
aas
in
inc
subb
xchg
shrl
and
cmpl
jge
loop
sub
out
mov
mov
decl
insb
ljmp
and
out
mov
mov
into
sbb
jbe
popa
sub
sti
lds
cmpsl
push
jge
or
adc
sub
dec
cmp
cmp
push
fbstp
call
std
ljmp
fwait
push
fucom
xchg
add
sbb
shlb
xor
outsl
ror
ss
movsl
in
pushf
in
xchg
cltd
mov
sub
out
in
call
mov
jo
in
loope
add
std
sub
add
push
inc
mov
jmp
popf
imul
stos
inc
nop/reserved
xchg
and
fwait
decl
xor
fdivp
xchg
mov
lcall
sbb
mov
jge
leave
inc
sarl
cwtl
incl
and
mov
sarl
outsl
scas
cltd
mov
lcall
jns
je
adc
iret
jl
rcrl
clc
mov
dec
stos
add
in
insb
pop
dec
jmp
mov
inc
cbtw
push
das
mov
jg
inc
xchg
pushf
adc
pop
xchg
adc
and
gs
bnd
nop
mov
sub
mov
and
and
call
rclb
out
add
adc
sub
loope
pushf
scas
and
and
xchg
leave
push
clc
fisubl
dec
xchg
scas
je
mov
mov
mov
mov
push
lds
jb
out
lahf
fsubs
dec
pop
and
in
or
fildl
mov
sahf
jecxz
add
pop
add
inc
cmpsl
or
adc
push
call
cltd
pop
jb
test
lock
lea
sbb
js
mov
sbb
clc
mov
mov
call
xchg
pop
pop
sbb
movsb
xchg
jp
sbb
scas
data16
and
push
shll
cmpsb
add
loope
mov
lock
jnp
cld
fsubp
fsubs
or
dec
fsubl
incl
add
fildl
stc
cs
mov
clc
mov
fcompl
icebp
dec
stos
cmpsl
mov
or
fwait
or
pushf
in
rcrb
insl
mov
fsubs
pop
and
hlt
pop
imull
xchg
ss
push
lods
clc
mov
outsb
in
add
aam
dec
fdivrl
incl
or
fimuls
out
add
stos
xchg
ret
push
je
xchg
adc
incl
sbb
and
std
fsts
and
or
jp
push
movsb
lock
mov
icebp
jg
add
push
xchg
pop
inc
mov
pop
fisttpll
icebp
jno
das
clc
push
inc
mov
data16
in
fiaddl
out
es
adc
xchg
fucomip
mov
loopne
sti
pushf
stos
sub
sbb
or
js
push
loope
rorl
lods
jg
call
pushf
ficoms
sbb
inc
xchg
pop
sbb
add
aam
shr
mov
fdivrl
popa
inc
stc
cmpsb
dec
nop
push
jle
outsl
scas
cmp
mov
lcall
test
cmp
inc
inc
add
into
sbb
push
outsl
clc
jmp
push
sarb
into
mov
fisubl
sbb
fsubs
incl
adc
mov
in
ljmp
or
ret
push
sub
sbb
ljmp
jg
addr16
or
lcall
mov
call
mov
dec
fmuls
aas
test
mov
in
pushf
xchg
add
jp
aas
xor
lds
lock
pushf
cltd
pavgb
orl
mov
out
mov
or
jns
sahf
pop
pop
cmp
or
xchg
enter
adc
mov
scas
sub
push
lods
les
cmp
sar
jg
cmp
xchg
xor
imul
roll
stc
push
decl
and
loopew
inc
jb
out
clc
jg
cmp
jl
dec
into
jl
xchg
pop
movsb
out
mov
adc
fs
xorb
sbb
pop
mov
aas
andb
movsl
sbb
mov
adc
pop
mov
cmc
mov
jle
push
push
jne
add
pop
cmp
mov
sub
mov
neg
cmc
and
test
push
imul
cmp
jnp
incl
aaa
or
ret
dec
xchg
and
inc
jmp
mov
push
gs
add
hlt
in
cmp
decl
sbb
jo
sti
xchg
cmpb
cli
add
mov
inc
ljmp
mov
in
loopne
sub
adc
decl
add
jge
push
jnp
ljmp
pop
fwait
jg
call
sar
push
jbe
repz
lock
into
lcall
xor
adc
jns
or
mov
push
push
clc
ljmp
enter
cmp
out
xchg
incl
cld
aam
stos
pop
xor
popf
ss
push
lock
jbe
mov
cmp
bound
sbb
sbb
mov
inc
sarb
imul
pushf
iret
incl
bound
sub
jnp
repz
out
ds
lret
fldl
test
inc
push
jo
in
xchg
fdivrl
xor
sbb
mov
gs
dec
mov
mov
fdivl
or
jg
subb
enter
add
mov
aad
movsl
bound
mov
int3
outsb
cs
clc
jl
mov
mov
negb
mov
xchg
lds
mov
cwtl
mov
inc
call
fmuls
inc
push
push
test
aad
jmp
sub
stos
jne
adc
outsb
cmc
imul
scas
cs
outsb
inc
xchg
xor
iret
addb
xorb
gs
xchg
scas
imul
in
scas
movsl
loopne
lret
and
mov
js
outsl
lcall
das
or
lods
loop
add
mov
daa
sbb
das
divb
leave
scas
jae
mov
push
push
xor
and
jns
and
fnsave
inc
inc
call
mov
push
imul
std
cmp
popa
pop
test
je
cmp
and
mov
sub
adc
iret
jo
cmpsb
call
mov
xlat
mov
xor
pop
sub
call
cld
data16
insl
repz
xor
outsb
push
and
cltd
orb
pop
test
lcall
inc
or
aas
popf
insb
pusha
outsl
jmp
call
incl
sbb
jp
popa
mov
dec
cmp
sbb
adc
jae
fisubl
xor
stc
xorb
push
cmp
aas
jb
push
mov
add
jmp
pop
lods
jae
cmpb
and
or
xor
dec
mov
lcall
clc
xchg
pop
ja
sub
mov
bound
mov
xchg
dec
mov
pop
imull
fistpll
push
push
xor
inc
mov
xor
pop
push
incl
fdivr
or
mov
gs
add
pop
fs
inc
movsb
pop
mov
mov
or
sub
mov
sub
lcall
sub
cltd
add
xchg
jle
xor
loope
xchg
cld
push
mov
js
outsl
jno
leave
jnp
jecxz
mov
push
leave
push
repnz
ret
fmul
mov
and
call
ljmp
pusha
mov
loop
add
dec
push
fildll
cmp
jle
mov
lcall
and
psrlw
cmpsb
imul
in
ret
clc
dec
or
mov
outsb
mov
stos
fisttps
les
icebp
scas
mov
sti
loope
dec
dec
lcall
outsl
xor
dec
dec
out
push
add
xor
and
adc
and
cmpsb
out
add
push
xchg
xor
mov
decl
aaa
ds
popa
cs
jb
mov
jo
int3
xor
jg
call
adcb
cmp
mov
add
mov
bound
inc
loop
sti
in
repnz
sub
jge
loopne
mov
les
decl
push
andl
les
add
pop
lock
or
dec
sub
shl
sub
and
cmc
rcrb
dec
add
pop
insb
scas
fwait
lds
cmp
mov
ljmp
xchg
outsb
inc
adcl
mov
xchg
mov
push
in
fsubrp
in
icebp
arpl
insl
rclb
jmp
lahf
loope
dec
jne
sbb
loopne
jo
fscale
xor
cmp
frstor
int3
pop
enter
cltd
leave
sub
jp
jl
in
cmp
mov
xchg
adcl
inc
inc
movsl
ret
sti
es
adc
call
mov
js
data16
push
cltd
repz
sbb
mov
insl
not
decl
or
push
sbb
mov
cld
inc
inc
insb
call
std
jg
dec
popl
ret
aaa
push
cmpsb
mov
inc
divb
aam
add
mov
inc
and
xor
mov
rcl
incl
imul
xorb
adc
lds
aas
pop
cmp
mov
and
sub
or
or
cmp
rcrl
out
outsl
xor
sub
repz
lret
sbb
jg
jmp
sbbb
outsl
shll
sbb
xor
aaa
faddl
sarl
dec
and
cmp
pushf
aas
jmp
lock
ljmp
pop
dec
gs
pop
fisubrs
mov
sub
shlb
or
lcall
mov
pop
add
xor
dec
mov
fdivr
ljmp
nop
adc
popf
cmp
sub
xor
mov
sub
jmp
push
inc
test
dec
mov
js
sub
fs
mov
loopne
call
out
insb
pop
xchg
adc
std
dec
lds
cmc
jmp
pop
xor
in
mov
mov
stos
lret
repz
adc
jl
dec
xor
les
hlt
inc
xor
or
ret
mov
call
aad
jno
cmp
sar
decl
sub
mov
push
pop
push
jno
popa
xor
mov
js
adc
mov
pop
and
bound
or
rcll
lret
dec
aad
jmp
std
add
mov
mov
xchg
cli
lret
nop
xchg
les
in
pop
push
cmc
dec
ret
jg
jle
not
xchg
rorb
and
repz
mov
outsl
cli
pop
mov
mov
push
dec
popa
mov
adc
in
mov
mov
pop
push
js
in
pop
std
sub
push
fwait
sbb
mov
add
lods
insb
push
inc
dec
andl
jnp
in
fidivrl
mov
lea
insb
dec
xchg
mov
dec
rclb
add
cwtl
jg
sub
mov
int
pushl
leave
push
ret
sbb
push
pop
lods
js
icebp
or
popf
push
pop
mov
outsb
sbb
mov
pushl
sarl
cmp
in
aas
js
cmp
xor
dec
mov
loopne
xchg
mov
cld
mov
daa
pop
in
adc
std
rcrb
jmp
mov
divl
sbb
stos
sbb
xchg
rorb
int
dec
dec
js
xchg
mov
incl
sbb
pop
add
test
push
jmp
sahf
lock
decl
scas
sar
push
lods
or
sbb
or
mov
push
mov
sar
mov
xchg
xchg
pop
or
nop
out
mov
mov
popf
mov
lods
mov
repnz
arpl
fdivr
mov
std
in
in
lcall
xor
repz
inc
aam
pop
add
scas
enter
push
dec
push
cltd
push
xchg
xchg
shl
call
or
mov
scas
andl
mov
lret
jge
xlat
adc
jmp
mov
inc
push
sti
call
lret
dec
and
pop
xor
mov
mov
xchg
cmpsl
lds
mov
pop
fcmove
mov
and
dec
xor
jmp
repz
ja
pop
jmp
test
mov
insb
leave
fs
mov
lods
xchg
mov
ret
test
es
andb
adc
je
leave
mov
dec
dec
mov
and
addb
in
call
add
sub
or
add
xlat
mov
jns
sub
adc
ljmp
pop
hlt
out
fnstenv
mov
paddq
mov
mov
ljmp
add
stos
cmp
insb
jmp
decl
lea
mov
clc
cmp
xchg
mov
add
lcall
sbb
jmp
ljmp
lea
cmp
inc
test
dec
sti
jg
fs
dec
cmp
mov
inc
icebp
pop
push
outsb
es
or
ljmp
pop
cmp
sub
jg
mov
pop
sub
lcall
movsl
fsubr
std
leave
inc
jl
lcall
lock
mov
mov
lret
dec
mov
xor
push
lret
outsb
push
lcall
inc
cld
xor
sub
stc
and
insl
xchg
mov
leave
add
rorb
cmpsb
jns
xchg
ljmp
clc
mov
pop
fcomp
scas
sti
push
xchg
in
pop
lea
es
popf
xchg
icebp
xchg
enter
hlt
out
lock
push
sbb
pop
mov
pushaw
sub
mov
flds
repz
outsl
es
push
push
call
insl
movsb
or
pop
and
out
cltd
daa
sarl
popa
mov
or
add
dec
sub
ds
dec
ret
insb
mov
xchg
sahf
dec
add
clc
push
cmpb
adcb
popa
call
fwait
scas
pushl
subb
sbb
je
loope
adc
mov
jle
and
out
in
push
mov
xchg
loopne
dec
in
icebp
jmp
popa
pop
sbb
lods
inc
sahf
mov
in
pushl
cli
mov
mov
push
stos
sbbl
add
mov
lcall
pop
dec
and
mov
into
sbb
pop
lods
or
out
jge
mov
movsl
jmp
xchg
push
cmp
scas
pop
mov
dec
mov
scas
cmpsb
ror
jbe
in
sub
in
mov
or
fldcw
fistps
mov
or
shlb
ret
outsl
clc
lcall
scas
std
xor
loope
cmp
pop
cmpsb
push
dec
xor
lock
cltd
inc
or
lahf
fldl2e
and
movsb
incl
add
jbe
and
and
xadd
pop
inc
movsl
pop
xchg
aas
lock
xor
push
add
push
call
loop
filds
or
sub
das
pop
sbb
jae
stos
mov
out
das
sar
sti
sbb
test
push
sarb
mov
outsb
jb
and
push
ljmp
jmp
and
test
ficoms
int3
xor
sub
ficoms
mov
je
mov
pushl
ljmp
fiaddl
push
cmp
and
insb
dec
inc
sub
mov
mov
jl
mov
int3
and
les
dec
mov
jo
and
in
enter
cmc
pop
push
cli
test
jno
mov
in
mov
xchg
xor
nop
lock
adc
stos
test
or
and
mov
popf
cmpsl
xor
mov
xchg
es
adc
outsl
clc
mov
or
fsubr
out
repnz
cmp
dec
xor
in
mov
incl
lods
fs
push
jns
adc
fld
aas
gs
add
push
mov
gs
ljmp
xchg
mov
repz
sub
push
inc
lret
iret
cli
push
out
xlat
pop
cltd
mov
xor
jb
push
sti
xor
call
jl
enter
xchg
adc
loope
add
pushl
rcr
ja
cs
adc
ljmp
ljmp
loop
lock
cmp
mov
mov
loope
dec
push
mov
push
dec
cmp
dec
enter
xchg
pop
je
push
mov
inc
arpl
mov
ljmp
pop
ds
out
jg
sub
sbb
loop
in
ljmp
sub
cmpb
push
sbb
xchg
incl
imul
jb
jmp
xchg
push
data16
in
xorb
stos
je
arpl
call
fstps
mov
mov
fidivs
sbb
decl
sub
fsts
ss
int3
sub
fisubrs
leave
dec
cmp
cli
pushl
js
sub
dec
pop
lods
mov
jns
cmpsb
repnz
incl
cltd
arpl
fstl
xchg
data16
pop
fs
not
or
ds
mov
jne
dec
mov
inc
and
cmpsl
insl
xchg
or
ja
jae
xchg
adc
mov
pushl
or
outsl
mov
test
lcall
testb
outsb
push
lods
scas
je
inc
sub
and
xchg
push
push
mov
jmp
xchg
xchg
lahf
inc
cs
push
dec
incl
shrb
lods
clc
sub
ret
mov
lcall
call
xor
inc
sub
daa
adc
sbb
int3
mov
mov
push
push
call
mov
dec
mov
jl
mov
iret
jp
pop
inc
xchg
mov
and
loop
movsb
sub
pushl
mov
pop
jg
and
and
sbb
fisubl
pop
inc
jg
je
xchg
fdivrl
pusha
std
jmp
and
cmp
mov
cld
jmp
cmp
in
jg
ja
push
push
jmp
in
jecxz
sarl
and
adc
repnz
fs
mov
and
mov
lcall
rcrb
push
adc
in
inc
enter
pop
dec
xor
push
cmp
cmp
ljmp
mov
lock
in
add
mov
mov
or
lcall
das
outsl
lcall
cli
inc
cmpsb
ljmp
ret
in
xchg
inc
inc
xchg
jecxz
mov
dec
inc
popl
repnz
inc
dec
jno
idiv
lcall
in
test
leave
imul
stc
mov
shll
out
fwait
stos
mov
shl
andb
ret
mov
push
popf
repnz
push
push
cmp
push
xor
daa
xlat
lcall
lods
into
js
mov
adcl
imul
jg
addl
mov
gs
decl
sbb
adc
pop
aam
xchg
xor
test
test
aad
inc
or
incl
xchg
sarl
cmp
ret
pop
push
and
mov
lcall
popa
dec
pop
dec
call
pop
xchg
push
inc
mov
lea
cli
xchg
sbb
pop
jae
call
outsb
push
out
pop
das
add
push
push
inc
add
push
ret
aas
sub
jg
incb
das
or
pusha
push
mov
stc
push
sbb
pushl
add
and
rcrb
or
mov
test
stos
cs
loopne
xor
push
stos
and
sbb
in
inc
test
lcall
lahf
repnz
arpl
bound
sbb
pop
scas
jg
or
jne
mov
jle
ret
stc
sub
ss
ljmp
sahf
mov
lock
rcrl
das
cmpsb
push
out
imul
xor
jmp
test
xchg
aad
lds
mov
roll
loop
test
xor
inc
sub
cld
enter
pushl
adc
ljmp
in
inc
pop
pmuludq
mov
sub
inc
adc
mov
mov
jmp
aad
xlat
outsl
jb
pop
fmull
iret
in
mov
loopne
mov
or
jg
stc
adc
stos
push
xor
in
out
mov
fistpll
xor
jo
or
jo
int
add
sub
and
pop
mov
cmp
cmc
vunpcklps
jge
push
pop
xchg
lcall
lret
or
xor
add
ljmp
into
outsb
pop
and
cld
xor
xchg
popa
push
or
les
xchg
adc
xor
out
cmp
pop
lcall
push
int3
sub
xor
pop
hlt
jp
cs
call
out
adc
sub
inc
mov
nop
xchg
xchg
mov
sub
in
cld
das
sub
mov
aaa
lahf
fcom
movsb
adc
mov
subb
cld
stos
dec
stos
rol
bound
pop
mov
daa
or
inc
andb
xchg
inc
js
test
xlat
push
stc
das
outsb
loopne
sbbl
adc
jle
mov
mov
xchg
mov
push
or
arpl
lcall
pop
or
mov
pop
rclb
lock
call
xchg
mov
cs
enter
and
mov
test
dec
add
jg
incl
sub
out
or
and
sub
gs
jb
lods
push
and
call
sub
mov
test
nop
dec
cwtl
pop
daa
xchg
sbb
or
dec
pop
scas
jns
xor
pop
xor
push
je
jle
add
fs
sub
jp
dec
mov
insb
xor
ljmp
fcoms
pusha
mov
movsl
das
or
andl
decl
cwtl
push
jge
mov
mov
cmc
and
pop
in
adc
flds
call
push
push
xchg
mov
popf
dec
out
hlt
inc
xchg
cltd
addr16
insb
fs
cmc
enter
cmc
decl
pop
bts
dec
jo
popa
sahf
sbb
icebp
faddl
dec
mov
push
mov
iret
jl
and
xchg
fdivs
enter
pop
mov
mov
fidivs
add
mov
lds
sar
decl
mov
add
aad
cwtl
xchg
iret
mov
sbb
roll
mov
add
mov
pop
or
lahf
adc
cmpsb
dec
mov
cmp
push
negl
dec
outsl
push
std
cmp
and
cs
je
pop
jg
adc
andb
sbb
ffreep
dec
mov
movsb
mov
testl
push
decl
adc
divl
addr16
jmp
mov
sbb
fnsave
lock
ffree
fsubrl
cld
mov
pop
or
inc
push
push
sbb
cmp
inc
loope
lock
incl
mov
pop
pop
mov
imul
cmc
lcall
cmp
stos
imull
iret
loope
ja
lds
cmp
imulb
fistps
or
incl
pop
loop
push
jp
scas
add
adc
clc
fmulp
sar
ljmp
mov
daa
inc
jns
adc
pop
or
inc
imul
push
repz
cwtl
push
test
mov
mov
push
cld
cli
lret
cmp
lds
pop
sub
sti
jecxz
dec
push
outsb
sbb
fadd
sub
push
dec
jne
xor
inc
dec
sub
xor
mov
lcall
xor
popa
and
inc
mov
std
cwtl
or
lods
aaa
mov
or
jmp
pop
adc
jl
jo
sahf
xchg
loop
dec
push
inc
mov
lcall
dec
mov
pop
mov
inc
add
test
and
sbb
out
inc
aad
lock
lea
adcl
dec
dec
nop
mov
inc
mov
push
arpl
jg
imul
fucomp
inc
mov
sub
aas
push
dec
pusha
shrb
push
out
sub
out
cmp
rcrl
and
xchg
daa
rorl
out
and
jo
loop
xor
adc
aad
sbb
cmp
pop
mov
add
mov
lcall
stos
mov
and
dec
sbb
bound
cmp
jns
push
scas
inc
int3
dec
mov
mov
jmp
xor
cmp
xor
push
jae
mov
ret
jp
adc
dec
fcomip
scas
adc
mov
xor
adc
mov
mov
push
movsb
push
cmp
cmp
and
adc
jne
dec
jle
lcall
fdivp
rcl
jmp
jns
aad
mov
adc
lcall
fwait
inc
insl
subl
in
inc
sahf
dec
inc
push
out
push
dec
pop
mov
in
dec
jecxz
fwait
mov
pop
dec
pop
fwait
aas
and
xchg
test
fidivl
stos
push
jg
clc
cmp
jmp
insl
adc
ja
inc
pop
rolb
mov
xor
mov
cwtl
cmp
lret
mov
mov
mov
cmpsb
cwtl
lret
dec
pushf
cltd
inc
xchg
addr16
jp
mov
add
xor
xchg
ja
inc
mov
popf
mov
sbb
rolb
lock
out
or
cmpsb
inc
xchg
pop
dec
pop
cmp
sbb
stos
jg
push
incl
adc
pop
push
imul
out
sbb
cmpsl
and
fidivl
nop
out
cli
call
jl
add
or
adc
sbb
mov
cmc
push
sbb
outsb
dec
mov
mov
mov
dec
add
mov
jg
mov
add
mov
sbb
add
push
or
dec
loop
jmp
out
ljmp
jmp
sub
adc
mov
pop
or
push
sub
cli
je
call
popa
adc
data16
cmp
pushfw
testb
lods
or
fwait
das
lods
loop
mov
in
mov
jae
fcomi
incl
mov
mov
push
es
bound
adc
sti
repnz
mov
add
out
out
or
mov
and
mov
and
inc
mov
mov
jg
xchg
and
push
jecxz
fstpl
ret
xchg
test
es
sub
scas
sarl
fdivl
lret
push
pop
sbbl
dec
add
mov
and
add
add
and
push
cli
pushl
mov
or
add
sub
adc
dec
cmp
decl
and
dec
and
stc
jno
sub
outsb
lods
jp
cmpsb
or
call
test
mov
push
mov
out
jbe
xlat
lret
xlat
sbb
xchg
iret
in
xchg
leave
mov
mov
loopne
jg
pop
cwtl
dec
dec
test
mov
mov
divb
aaa
lahf
nop
popa
jl
lret
cmp
stos
fwait
scas
xchg
mov
orl
push
sar
adc
push
movsb
inc
rol
xor
notb
orl
lahf
inc
inc
outsl
rcll
adc
imul
inc
hlt
call
ja
inc
rcr
adc
push
or
xor
cld
lcallw
iret
test
lds
lea
es
sub
dec
hlt
pushf
sbb
sbb
clc
mov
lret
mov
jl
cs
push
mov
aas
mov
outsl
or
and
or
ret
and
prefetchw
into
cmp
aam
push
xor
fisubrs
and
push
lea
mov
leave
jmp
icebp
stc
mov
push
leave
mov
push
jg
clc
sub
fwait
aaa
pop
popl
leave
cmovno
and
leave
ljmp
mov
mov
mov
addr16
ret
lcall
or
mov
adc
repnz
lret
fimull
mov
je
pushf
adc
fsubrs
test
leave
lods
fs
lcall
push
daa
addr16
sti
repz
div
inc
xor
incl
xor
rcll
aas
push
mov
out
xchg
adc
ljmp
push
xor
incl
loopne
mov
add
cmp
and
icebp
aaa
xchg
pop
mov
pop
jb
jg
clc
add
pop
daa
inc
mov
push
imul
fdiv
ja
push
jbe
mov
imul
or
cmc
jmp
dec
into
pushf
mov
jg
decb
es
ds
aad
decl
push
in
pusha
jo
mov
inc
or
sub
pushl
dec
inc
addl
mov
jg
sahf
inc
mov
mov
dec
add
call
sub
cld
or
mov
mov
jno
sbb
sbb
mov
popa
add
fwait
jb
mov
xor
mov
adc
out
les
xor
jecxz
mov
incl
xchg
jnp
dec
adc
insb
mov
lods
adc
xchg
iret
jo
ljmp
ret
aam
nop
cmp
sub
fs
jno
pop
xchg
jmp
std
pushl
push
push
lret
pop
cmp
iret
outsb
mov
lcall
inc
inc
ljmp
dec
push
mov
jmp
push
sar
jmp
pop
dec
mov
mov
add
imul
loop
mov
test
lahf
scas
cmp
jmp
lds
pop
lcall
scas
cli
adc
mov
es
xlat
or
lods
adc
or
xchg
call
sbb
and
push
fstl
lahf
mov
cmp
rcrb
aad
cmpsl
sub
divb
cli
fisttps
jmp
js
ljmp
decl
and
test
pushl
push
aaa
ret
pop
sbb
js
into
in
test
and
mov
loopne
test
movsb
ja
shlb
movsb
cwtl
lcall
and
mov
fnstenv
adc
mov
add
sub
cwtl
xlat
scas
pop
cmp
dec
push
rcl
icebp
xchg
scas
pushf
or
test
pop
decl
inc
lret
test
adc
lds
sbb
add
out
clc
or
push
mov
adc
lret
sub
sbb
outsb
adc
test
addr16
decl
push
xchg
sub
mov
inc
cmp
xchg
xor
xchg
fwait
shl
ss
decl
jo
movsl
xchg
mov
xchg
mov
addb
xchg
pop
xor
xchg
sti
mov
ljmp
movsb
aas
push
inc
notl
loop
mov
push
scas
pop
adc
mov
incl
dec
int3
out
sbb
sbb
out
outsl
add
leave
push
and
ljmp
cmp
dec
xor
push
scas
xchg
add
mov
pop
xchg
enter
call
jg
pop
enter
adcb
aam
mov
dec
dec
xor
xchg
js
adc
push
sub
mov
mov
inc
sbb
loopne
repz
andb
int
imul
add
pop
mov
jle
jne
loop
pop
stos
fiadds
dec
xchg
incl
scas
pop
divb
addb
pop
push
scas
imull
in
pop
mov
mov
pop
add
movl
cmp
pop
ss
mov
cmp
cld
jmp
in
into
arpl
add
loopne
aas
lret
incl
jbe
pop
fs
jns
sbb
mov
jmp
add
cmp
into
scas
rorb
and
fisttpll
data16
mov
fsqrt
xchg
ficoml
pop
jo
lds
mov
stos
scas
inc
scas
mov
push
pushl
aam
and
bnd
aad
dec
sbbb
jns
jmp
or
jg
dec
sub
je
gs
popl
adc
lcall
vmovq
sub
cmp
adc
outsb
faddl
lcall
cmpsl
hlt
and
push
dec
enter
sbb
icebp
jb
add
fists
jecxz
jge
mov
mov
leave
adc
pushl
add
mov
out
inc
xor
cmp
sarb
ret
sub
jno
lahf
into
mov
clc
mov
cwtl
jmp
ja
lds
mov
jmp
aad
out
add
sub
jg
mov
and
push
xchg
cltd
test
push
ds
aas
out
mov
lcall
sub
outsl
add
pushf
mov
inc
stos
ljmp
lods
xlat
cmp
imul
fidivrl
in
ud0
lcall
xchg
leave
and
dec
jno
out
pop
xor
loopne
mov
jb
pusha
push
mov
ljmp
mov
xchg
dec
sar
test
cmp
daa
adc
add
stos
mov
rcl
stos
outsb
lcall
sarl
pop
mov
ucomiss
add
popf
fwait
mov
push
cltd
cmpsb
icebp
add
ds
dec
cmp
mov
gs
das
aam
cmp
mov
popf
sbb
inc
cmp
sub
in
stos
jmp
mov
call
cli
pop
mov
add
xchg
cli
arpl
ss
push
sbb
xor
shll
dec
mov
adc
ljmp
js
into
aam
imul
pop
in
leave
jne
or
dec
les
push
incl
iret
pop
jnp
aas
lret
jo
mov
loope
gs
xchg
pop
ljmp
call
dec
mov
push
dec
mov
pop
test
outsl
fimull
push
add
aad
stos
clc
mov
pop
and
insb
sbb
ljmp
and
mov
cld
lock
push
push
in
xchg
cmp
mov
dec
and
sbb
inc
sbb
push
push
mov
insb
xor
add
in
jmp
adc
jmp
pop
adcl
cli
imull
jae
xor
cmp
jns
pop
loop
std
decl
sbb
and
jmp
sub
mov
repz
mov
adc
mul
ljmp
push
test
and
sbb
and
inc
push
decl
stos
xlat
xchg
cmp
dec
pop
jle,pt
pop
negb
xchg
sti
push
cmp
inc
clc
xchg
scas
stc
lret
clc
call
out
dec
loope
and
xchg
into
incl
push
adc
mov
or
xor
pop
cmp
or
jmp
fs
mov
fsubp
rcl
inc
jmp
fs
ljmp
fwait
mov
aas
mov
iret
cmp
in
gs
cld
sub
pop
cld
test
add
dec
int
cmpsl
or
pusha
sbb
arpl
jg
clc
jg
jg
rol
fsubr
mov
std
jl
jbe
in
incl
lret
jnp
pusha
mov
dec
ret
cmp
push
pop
cli
mov
movsb
and
xchg
lret
or
leave
push
punpcklwd
pop
mov
ljmp
pop
xor
gs
sub
and
cmp
mov
clc
idivb
mov
mov
dec
sahf
js
call
adc
adc
cwtl
cltd
movsl
stos
dec
cld
mov
sub
les
call
lods
dec
call
push
popa
xchg
pop
inc
mov
lret
jo
or
or
gs
mov
pop
pop
aam
sub
cltd
pusha
jl
or
rcll
push
xlat
push
data16
push
dec
inc
or
lock
cld
mov
addb
cli
in
dec
mov
mov
xor
das
jecxz
mov
jg
enter
xchg
mov
in
sahf
mov
cld
ret
mov
pop
jmp
lcall
or
call
pusha
bnd
enter
or
cmp
incl
mov
test
pop
fbstp
enter
jg
xchg
sbb
mov
pop
je
clc
call
lock
in
push
dec
mov
push
gs
push
lock
fnsave
push
arpl
sbb
pop
hlt
cmp
push
fsin
popa
ror
inc
ret
cmp
mov
mov
stc
popf
inc
pop
dec
popa
test
pop
popa
fldt
movsb
xchg
dec
jmp
inc
lret
pushf
adcl
pop
lcall
mov
mov
add
adc
imul
daa
jbe
test
test
push
fisubs
or
jg
clc
jle
jmp
adc
inc
jp
inc
dec
xchg
and
decl
push
clc
sub
push
lcall
aad
mov
sti
pop
outsl
enter
and
mov
shr
mov
mov
mov
fsubrl
mov
pop
mov
dec
jecxz
adc
pop
scas
aam
incl
and
mov
call
inc
pop
inc
or
je
aam
pop
jae
pop
adc
jmp
in
cmp
pop
outsl
jecxz
mov
add
and
inc
pop
cmc
aas
fisttpl
lea
scas
out
clc
dec
iret
pop
iret
push
ljmp
add
mov
sub
adc
ljmp
push
mov
ja
loope
pop
data16
decl
xor
adc
js
adc
xlat
xor
pop
enter
stos
daa
pop
lods
loopne
jnp
lahf
mov
lret
cli
lcall
cmp
scas
dec
mov
adc
rcrl
jbe
push
outsl
pop
adc
xchg
rolb
push
ss
mov
call
scas
fnstcw
and
mov
jns
fadds
adc
jg
mov
pop
pop
mov
shll
jge
call
repnz
sbb
cwtl
mov
and
ror
aaa
jnp
mov
das
mov
call
daa
pushl
ljmp
je
test
ljmp
leave
inc
push
cmpsl
inc
cli
cli
mov
mov
add
push
cmp
lret
fwait
push
ljmp
lcall
jbe
lret
in
scas
mov
pop
sbb
mov
mov
jg
popa
cld
jmp
jo
test
jmp
lock
mov
mov
push
stc
push
pop
scas
pop
inc
pop
sbb
push
or
div
push
push
arpl
mov
pushl
cmp
or
push
dec
jnp
add
xor
out
paddb
cli
mov
sbb
pop
push
cmp
call
cmpsb
aas
cli
sbbl
out
jae
xchg
xchg
outsl
sub
leave
pop
pusha
int
out
sbb
nop
xchg
jge
das
out
daa
mov
cmp
scas
ficoms
xchg
adc
add
sbb
mov
nop
jbe
jmp
aas
fsubl
ds
outsl
mov
pop
nop
mov
push
outsb
lods
stos
ja
js
xchg
inc
cmp
incl
cs
shr
aad
mov
ficoml
rorb
incl
jl
cmp
dec
jmp
pop
xchg
orb
imull
movsb
add
das
adc
jmp
and
neg
stos
loope
cmp
jae
cli
dec
xchg
clc
insl
cmp
nop
pop
cmp
sub
call
inc
cmp
jmp
pop
add
xor
and
negl
xchg
sbb
clc
andb
jmp
xchg
dec
out
faddl
aam
fdivr
cmpsl
adcb
mov
decl
inc
xchg
les
dec
push
call
fadds
mov
fmuls
sub
jnp
test
out
mov
pushl
pop
mov
jbe
clc
fdivs
ds
pop
nop
and
lcall
aam
lcall
xor
push
aad
in
notl
mov
incl
xchg
loop
loope
and
jl
imul
pop
lock
mov
jne
les
movsl
mov
push
mov
call
inc
xchg
aad
leave
jae
cld
loopne
xchg
pop
push
fstpt
and
pushl
subps
mov
xor
sub
negl
rorb
fmuls
add
divl
adc
cld
cmp
add
scas
lods
cmp
push
xchg
int
out
push
jle
cmpsl
xchg
in
xor
pushl
and
in
loop
xor
mov
jb
sub
push
mov
pop
pop
and
mov
or
push
rcll
fs
mov
call
addl
addr16
pusha
mov
mov
xor
cmp
mov
lock
pop
enter
adcl
cmp
cmp
xlat
xchg
inc
xor
cmc
and
lods
pop
ret
adc
bnd
mov
outsb
mov
jp
push
incl
lcall
xchg
add
sbb
aaa
pop
jg
adc
call
jmp
sbb
adc
jbe
cmpsb
dec
cmp
jmp
cmp
mov
cs
push
icebp
loop
cmc
push
mov
in
decl
outsl
push
jp
jl
icebp
and
inc
mov
decl
mov
movsb
outsl
add
jg
xor
cwtl
push
pop
cs
pop
mov
fcomip
dec
pushl
or
int
outsb
sub
fbstp
add
hlt
call
xchg
fistps
stos
jp
mov
lret
cmc
decl
imul
push
stos
outsl
int
xchg
insb
incl
sbb
mov
xor
orl
lahf
adc
fdivrs
and
add
push
push
popa
add
cmc
call
cld
sahf
adcl
lds
imul
mov
std
outsl
mov
mov
jge
fldt
sbb
add
inc
icebp
xor
outsb
incb
xor
stos
cmpsb
cmp
sub
mov
inc
fs
jp
pushf
into
push
push
mov
decl
ret
stos
sub
repz
adc
ja
sar
dec
loopne
sbb
fcom
fmull
pop
call
cs
pop
jo
lods
xchg
iret
insl
xor
fdivr
jp
fs
sti
inc
sub
gs
or
rclb
lea
imul
decl
shll
out
stos
cltd
aaa
repnz
mul
imul
mov
pop
sarl
mov
add
outsl
xor
xchg
lock
mov
dec
fcmovbe
aad
adc
pushl
aam
lret
mov
mov
jg
pop
sub
pop
push
sbb
cmpb
icebp
mov
jo
push
mov
and
inc
rcll
xchg
call
mov
ljmp
ret
imul
iret
or
cld
sbb
clc
icebp
mov
pusha
repnz
stos
js
push
and
adc
jg
cld
mov
xchg
and
pushl
sbb
mov
and
pushf
push
xor
test
ss
push
mov
lcall
cmp
stos
jl
mov
mov
lds
int
out
jl
xchg
pop
push
stc
cmc
fwait
and
dec
lods
and
ljmp
sub
sahf
stc
mov
sbb
in
add
mov
ljmp
clc
lcall
cltd
cmp
push
mov
out
popf
mov
ljmp
outsb
dec
mov
out
xor
push
dec
popf
in
push
aas
xchg
data16
add
les
xchg
mov
test
mov
es
add
decl
loope
adc
jecxz
bound
aaa
pushf
insb
test
jns
lcall
rcll
cmp
push
add
cs
inc
rorl
mov
or
pushl
inc
fcmovbe
test
fs
daa
leave
lahf
ljmp
xchg
fdivrs
in
mov
hlt
push
sar
pushl
cmp
addb
flds
cs
cmpsb
sbb
std
hlt
adc
push
push
mov
mov
cmp
cmp
movsl
adc
je
ret
mov
cli
hlt
sbb
aaa
or
xor
cli
js
fisttpl
push
or
call
jle
xor
inc
xor
lcall
jmp
fnstcw
nop
ljmp
mov
mov
adc
rol
das
cli
sub
dec
jmp
test
jmp
call
add
adc
jmp
xorb
shrb
lock
jno
loop
ljmp
jno
mov
and
add
out
pop
shlb
ljmp
sbb
xchg
xchg
push
cmp
scas
push
mov
or
inc
dec
in
xor
gs
xchg
movsb
push
jp
jae
fildll
int
sbb
sub
mov
shll
cld
insl
push
leave
xor
pop
jae
push
fldl
push
std
cmp
mov
mov
imul
mov
sub
repnz
ja
inc
add
pop
scas
sub
fs
inc
std
gs
mov
ror
mov
fstpl
mov
lcall
add
push
inc
scas
xchg
pushl
ljmp
stc
or
pusha
fs
xchg
sub
ret
icebp
xchg
and
jns
sbb
lret
inc
pop
adc
adc
movsb
daa
test
jmp
pop
loop
and
push
fidivrs
and
lods
pop
xor
sub
cmp
pushl
and
in
and
sub
mov
idivl
loopne
andl
push
adcb
sbb
cmp
push
clc
jp,pn
inc
cld
clc
rorl
and
cwtl
inc
cltd
js
jmp
incl
sahf
adc
test
mov
lea
push
mov
ret
mov
xchg
lcall
call
and
push
icebp
cwtl
jp
xchg
data16
mov
call
sbb
mov
shrd
pop
adc
in
mov
int3
mov
jbe
cmp
inc
mov
jmp
scas
mov
sbb
push
and
pop
and
into
lea
fwait
inc
call
call
call
inc
incl
sbb
push
inc
xor
adc
rclb
pop
sar
dec
fists
xchg
outsl
adc
ret
aaa
out
int
cmp
loop
mov
pop
push
fnstcw
dec
jnp
movsl
addr16
jmp
pop
adc
pop
mov
push
xchg
adcl
lcall
imul
jo
stos
fbstp
lret
incl
jmp
lods
leave
rorl
js
sub
decl
add
mov
jo
out
arpl
inc
and
aas
enter
mov
imul
pop
sbb
and
popa
enter
gs
lahf
cli
add
enter
addr16
pop
stc
and
aam
cli
mov
cs
in
mov
xchg
lock
and
xor
out
rclb
lds
sub
and
pop
xchg
xchg
aam
add
pop
cmp
jmp
pushf
sbb
bnd
adc
ficoml
mov
cmp
add
mov
lret
sbb
jns
mov
ljmp
sbb
ret
je
std
jge
rorb
lds
fs
inc
mov
stos
ljmp
push
inc
xchg
daa
gs
int
enter
jle
scas
push
int3
or
cmpsb
movsl
insb
xchg
inc
mov
push
adc
fadds
jg
fadd
scas
les
push
mov
adc
addl
inc
cmp
pop
and
lock
in
xor
incl
fdiv
in
push
call
cltd
repz
fcomps
sub
call
test
inc
pop
mov
ja
clc
ljmp
je
in
call
out
repz
sub
and
xchg
pop
sti
jg
jno
in
aas
xor
mov
and
aaa
push
nop
dec
mov
test
pop
loope
bound
mov
inc
daa
push
test
std
mov
movsb
in
ljmp
push
dec
mov
fldt
shrb
cmp
das
outsl
jns
ljmp
insb
jg
cmp
jl
test
xchg
clc
xchg
jb
cmp
pop
pop
mov
jg
data16
testb
lahf
push
lcall
mov
or
mov
ljmp
mov
and
repz
and
ficoml
lock
pusha
leave
add
cltd
xorb
icebp
addr16
call
adc
jbe
dec
jno
sbb
sub
xor
cmp
xchg
cmpb
fwait
mov
xor
xchg
push
add
jg
inc
popf
lret
add
es
je
push
imul
xchg
inc
fsubr
js
jo
mov
fwait
mov
movsl
hlt
aas
push
xchg
insb
sub
mov
incl
insb
xor
insb
sub
loop
push
decl
dec
nop
jmp
sbb
pop
jle
repnz
jl
out
dec
pusha
xchg
int3
sahf
or
push
idivl
int3
ss
decl
adc
mov
mov
std
enter
mov
pop
pop
pop
decl
fidivl
sbb
cmp
jmp
jnp
cld
pop
and
pop
mov
gs
call
rorb
mov
stc
mov
test
jecxz
loop
xlat
and
sbb
push
dec
inc
lock
mov
inc
es
pop
pop
sub
in
sub
jg
aad
pop
xchg
mov
jg
lcall
jo
jbe
pop
sar
inc
mov
sbb
out
sbb
decl
mov
in
mov
mov
fistl
imul
xorl
inc
jg
mov
and
test
push
arpl
mov
adc
jmp
xorb
pop
fcomip
sbb
fidivrs
push
jmp
sete
pop
pop
pop
sub
mov
movsl
test
ret
fiadds
xchg
fcomip
loopne
mov
cs
cmp
mov
out
mov
push
shll
sar
lcall
stc
push
xchg
sti
or
lret
and
mov
lods
mov
pushf
je
int3
lcall
pop
repnz
mov
loope
push
out
mov
psrlq
insb
ljmp
xor
cmp
cltd
int3
sub
ret
sbb
sbbl
add
jno
mov
inc
loop
sarb
jnp
roll
pop
fists
push
push
pop
cmp
inc
xchg
jmp
sbb
cmpsl
movsb
lret
das
dec
sub
lret
cs
hlt
outsb
hlt
ja
ret
rcl
pop
test
call
cmpsl
mov
cmp
sub
das
lcall
xor
sub
incl
adc
subb
lods
arpl
cmp
or
ljmp
cmp
incl
mov
mov
ljmp
loope
test
push
icebp
fsubrl
call
stos
cmc
xchg
or
mov
in
js
out
in
push
mov
mov
ds
lcall
iret
inc
jmp
mov
fwait
test
mov
sti
mov
jns
cli
pop
loopne
or
data16
adc
cmp
xor
jmp
repnz
jg
scas
repnz
ja
aam
cld
insb
aam
fsubp
add
sbb
jnp
pushf
xchg
arpl
jmp
ds
and
xchg
or
leave
xchg
cwtl
mov
sbb
adc
incb
decl
dec
jmp
mov
xorb
pop
add
xor
incl
enter
cwtl
mov
inc
ds
xchg
lds
test
ret
call
or
add
xchg
xor
and
mov
xor
sbb
jne
clc
mov
pushl
push
and
stos
push
js
das
jmp
push
lds
rorl
cld
ljmp
cmp
pop
and
lret
jmp
call
stc
xchg
or
mov
sbb
inc
mov
fcompp
sarb
xchg
and
sbb
scas
ja
fwait
popf
push
inc
mov
popf
imul
cmp
das
mov
mov
sub
frndint
call
into
push
test
out
int3
iret
xor
pushl
pusha
xchg
lret
arpl
mov
incl
faddl
sahf
fs
in
mov
adc
fdiv
cltd
xchg
dec
cwtl
xchg
fildl
repnz
test
mov
dec
adc
jno
in
pop
rcr
call
sbb
ss
in
jg
fwait
jbe
jmp
idivb
lds
add
rcr
push
and
adc
lret
fldenv
out
jae
incl
aas
je
out
inc
xlat
inc
stc
push
loop
jnp
jbe
mov
push
push
call
push
mov
sar
popa
ret
dec
test
ret
xchg
test
xlat
push
mov
pop
mov
jno
loope
stc
loope
add
das
mov
jg
movsl
push
test
jno
mov
gs
xchg
mov
imul
fnstsw
jl
movsb
lds
jge
lcall
mov
inc
cmp
inc
push
mov
xchg
js
cld
fldcw
jle
ret
fistps
lret
imul
jg
into
jno
sar
and
cmpsb
insl
mov
ljmp
les
aam
popa
enter
add
jae
lahf
mov
pop
sub
mov
inc
cmp
pop
vpunpckhdq
ret
popf
sbb
pushf
cmpsl
mov
pop
dec
mov
test
jnp
sub
push
shll
leave
aas
ret
sbb
add
test
sub
or
aas
lcall
rclb
sub
or
cwtl
enter
inc
jmp
enter
xor
shrl
loopne
addr16
out
mov
icebp
mov
dec
xchg
xchg
mov
loopne
decl
xor
mov
cmp
scas
rclb
adc
jecxz
sbb
insl
es
xor
mov
add
mov
adc
add
pop
push
mov
xor
popa
or
adc
add
sub
popa
cmp
test
inc
push
arpl
fbld
fstpt
aam
dec
xor
dec
ljmp
ss
repnz
xchg
mov
fsub
rcrb
pop
push
jno
adc
ljmp
mov
and
push
incl
je
inc
ss
lahf
ficoms
add
jg
lcall
cmp
xor
push
jecxz
mov
xor
std
decl
adc
jno
lods
jl
xor
cmc
ljmp
jp
xchg
cmc
xchg
push
pop
xor
cli
call
inc
pop
sub
rorl
pusha
lds
cli
int3
in
adc
pop
mov
cs
decl
add
mov
xchg
push
out
lcall
bound
mov
push
xor
push
adc
ret
sub
mov
fwait
frstor
cmp
xor
inc
sbb
out
out
ret
rcrb
or
ljmp
and
add
int3
out
pop
stos
pushl
and
shlb
pop
sub
jno
pop
mov
pushl
push
cmc
cmp
push
jle
imul
mov
stc
push
scas
outsb
mov
jmp
push
sub
outsb
adc
push
and
mov
aad
aas
fwait
incl
test
xor
fsubrp
scas
leave
adc
roll
mov
out
inc
repz
inc
sti
in
in
jbe
inc
push
mov
ds
add
scas
or
and
ljmp
clc
mov
stos
test
pop
cli
das
mov
lock
push
into
sbb
xor
repnz
mov
ret
and
fistps
inc
jmp
mov
jg
add
mov
mov
cwtl
inc
sub
add
ss
scas
jmp
pop
mov
jmp
outsl
les
mov
rcll
add
int
inc
mov
or
xchg
rorl
xor
sar
stc
fists
jmp
in
lcall
dec
imulb
incl
testb
imul
xlat
mov
mov
push
sub
mov
jmp
movsb
out
mov
incl
pop
fdivr
shrb
hlt
sbb
dec
adcb
call
cld
dec
mov
les
mov
ljmp
mov
mov
xchg
push
test
dec
test
cmpsb
add
mov
ljmp
out
xchg
pop
out
add
and
add
dec
stos
sub
jno
mov
pushf
incl
inc
into
inc
or
jg
pop
test
subl
inc
xor
mov
mov
movsb
imul
clc
xor
push
addr16
mov
dec
xor
aam
inc
xchg
out
mull
dec
cmc
xor
xor
jns
add
popa
mov
xchg
ror
push
add
push
notl
lcall
rorb
fnstenv
pop
addr16
adc
pop
xchg
inc
adc
cmpsl
out
rol
and
ljmp
dec
loop
fcom
mov
add
decb
cmp
adc
inc
cld
out
mov
icebp
in
jo
insb
xchg
aam
or
adc
iret
outsb
adc
mov
jg
int
inc
ds
push
movsb
icebp
fbstp
popf
mov
rcll
adc
add
inc
fsubrl
test
xchg
jge
mov
inc
pop
mov
sarb
call
fwait
or
inc
push
sub
in
add
lods
iret
jle
add
mov
sar
add
inc
loope
ficomps
cmp
or
xchg
dec
jmp
cmp
sahf
mov
jno
aam
jecxz
cmp
lcall
shl
andb
adc
cmp
nop
lahf
jns
hlt
fistpll
xor
cmp
mov
lahf
push
scas
dec
or
sub
in
out
idiv
jle
orl
cli
pop
addb
fsubrl
stc
fcompl
or
xchg
mov
dec
ret
idivb
pop
data16
mov
push
sub
incl
mov
ud0
dec
insb
xlat
lret
call
fnstenv
jne
xor
mov
fsubrl
mov
fmulp
cwtl
mov
xchg
imul
loope
dec
repnz
jmp
cmp
add
sub
inc
pop
out
aaa
push
and
add
pop
ljmp
gs
jnp
stos
ficompl
or
sti
fmul
fisttps
inc
adc
loopne
gs
cmp
incl
or
xchg
ficompl
test
dec
xchg
mov
loop
lret
mov
das
cmpsb
push
cmp
mov
sbb
out
jae
pushf
fs
xchg
je
adc
shlb
cmc
jecxz
call
movsb
icebp
stos
inc
outsb
ds
loopne
cmp
mov
aas
pop
fwait
dec
mov
or
ret
int3
add
imul
push
sub
push
das
clc
aas
or
aas
aam
lret
std
aaa
stos
mov
lds
pushl
mov
cmp
pop
pop
mov
jge
adc
je
jle
out
pop
mov
push
mov
jg
call
leave
mov
call
push
into
sahf
ret
sub
outsl
mov
pushf
movsl
jbe
stos
mul
lahf
dec
aad
lahf
pop
jmp
inc
xchg
dec
jmp
sti
sbb
mov
popa
sub
iret
loop
leave
cmp
leave
or
lret
cmp
mov
pop
icebp
dec
push
pop
movsb
lret
ficoml
dec
jmp
mov
inc
arpl
sub
notl
mov
jp
sub
aas
call
inc
xor
sub
lahf
sub
test
cwtl
jbe
jb
adc
movsb
xchg
fwait
pop
sahf
and
pop
loopne
sarb
rolb
xchg
iret
xchg
xor
jno
fnstcw
scas
sbb
jmp
inc
mov
sub
or
dec
ds
pop
stc
lods
push
arpl
inc
or
cli
int3
ret
ljmp
popf
test
js
pop
out
cmc
shll
nop
cld
xchg
testb
adc
pushl
loopne,pt
sub
mov
dec
pop
add
sti
decb
inc
std
lcall
cmp
outsl
enter
jg
mov
push
scas
xchg
inc
mov
push
xchg
iret
and
sarl
inc
mov
jge
or
imul
in
mov
lret
out
push
ficomps
pop
pop
add
inc
icebp
lcall
mov
in
adcb
test
enter
ret
sbb
ljmp
inc
mov
movsl
mov
in
mov
das
aas
mov
jp
cli
mov
shrb
stos
pushf
rorl
push
and
imul
push
and
inc
std
ja
cli
ret
push
andb
repnz
aaa
js
pop
mov
pushl
nop
or
cmp
push
adc
push
faddl
icebp
mov
jmp
and
leave
loope
fadd
out
mov
xchg
dec
mov
pop
hlt
cmp
popf
and
xor
or
adc
repz
ljmp
mov
pop
cmp
negl
cmc
push
imul
xchg
test
test
std
sahf
push
pusha
stos
inc
pop
or
call
popf
cs
fcomps
mov
lea
call
test
inc
sub
push
dec
not
dec
popa
incl
xchg
xor
fisubrs
xchg
lock
enter
dec
lds
ret
lcall
cmc
jmp
popf
out
cmp
xchg
push
lds
or
test
push
lds
ljmp
jl
cmc
pop
les
mov
xor
enter
sub
rcrl
cmp
jmp
adc
addr16
xlat
fisubrl
jle
sub
add
call
and
mov
sub
jge
xchg
stos
jbe
lds
outsl
pop
cmc
pop
push
lss
mov
loope
sbb
xorb
ljmp
in
cmpsl
sub
loop
push
pop
jg
jnp
fldln2
fdivl
rolb
cltd
adc
or
decl
fbstp
sti
adc
mov
inc
add
jns
sbb
mov
or
mov
incl
cltd
sbb
add
mov
xor
iret
repnz
mov
in
mov
das
xchg
std
push
repz
stos
popa
loope
xor
pushf
xchg
ss
addb
clc
decl
pop
inc
mov
mov
mulps
and
add
xor
push
push
mov
fwait
and
ljmp
je
dec
pop
lret
mov
sub
out
sub
sub
mov
stos
out
decl
sub
lea
leave
add
into
scas
sahf
es
lcall
add
sbbb
xor
decl
xchg
hlt
dec
cmpsb
cwtl
mov
lea
sub
fsubl
filds
inc
add
cmc
pop
jmp
idiv
pop
cmpsb
cmpsl
pop
movsb
mov
lods
icebp
repnz
cs
pop
out
cli
mov
repnz
mov
sub
stc
je
fwait
fwait
call
ss
mov
sub
jmp
xchg
mov
or
inc
sub
pop
fstpt
loopne
add
movsb
cmp
ljmp
dec
mov
push
lcall
out
arpl
pop
lods
dec
into
or
fsubl
sub
cmpsb
data16
cmp
stc
push
sub
sub
incl
cmpsl
ljmp
push
jae
adc
in
cmp
aam
jno
call
loopne
pop
ja
mov
and
push
scas
sbb
lcall
lahf
sbb
jb
shlb
insb
cli
sbbb
lcall
insb
shrl
dec
or
int
adc
fwait
or
mov
in
mov
xchg
xor
cmpsl
addl
daa
mov
mov
insl
imul
jns
je
adc
jmp
dec
adc
ficompl
pop
or
add
cld
in
outsl
lret
mov
pop
cld
push
and
jno
mov
inc
lea
jmp
jg
std
mov
cmp
xor
xchg
jbe
cltd
popa
fwait
cmp
xor
test
jae
dec
jmp
nop
or
inc
jmp
arpl
sbb
xchg
mov
sti
into
cmp
outsl
adc
lods
movsb
lret
xor
jle
pushl
sahf
enter
add
fiaddl
aaa
sti
pop
lods
jns
adc
lcall
dec
mov
incl
jg
imul
cwtl
push
int
stc
int3
mov
incb
std
mov
data16
mov
dec
jne
cmp
insb
xlat
dec
les
xchg
or
adc
and
fbld
push
push
mov
rcrl
in
xor
sbb
xor
xor
stc
sbb
or
add
cmp
das
mov
enter
lcall
dec
push
orb
and
out
incl
ffreep
xchg
aas
repnz
fsubrs
pop
ljmp
jge
rol
pop
mov
push
cmc
jns
lods
fldl2e
addr16
pop
addb
jmp
jle
mov
xchg
sub
aas
scas
andb
cmp
mov
out
mov
jg
call
mov
push
div
test
sub
jle
stc
inc
aam
pushl
inc
outsb
int
mov
clc
add
cmp
fwait
adc
or
lds
loopne
jle
jle
cmp
outsl
xchg
sbb
push
scas
sub
mov
inc
das
aaa
push
aas
mov
lcall
add
negb
scas
outsl
jecxz
cmpsl
pop
and
insl
xor
lods
or
dec
or
loope
jg
cmp
shll
and
lahf
cld
mov
push
sbb
mov
inc
repnz
dec
lock
stos
mov
outsl
fdiv
ror
adc
pop
and
lock
or
sub
stos
push
incl
mov
xchg
movsl
cmc
test
xor
sub
imul
scas
jne
shll
push
cmp
rolb
cwtl
call
ljmp
stc
dec
and
jnp
push
testb
pop
insb
lahf
shlb
in
mov
ss
or
dec
sub
push
xchg
dec
xor
mov
mov
or
sbb
cwtl
pop
jle
mov
sbb
sub
adc
pop
xchg
hlt
outsl
dec
es
mov
testl
sub
adc
lods
scas
or
jmp
xor
sti
add
inc
cmpsb
bound
loop
sbb
sbb
cmpb
dec
cmpsb
jo
jns
inc
aas
mov
cmp
fwait
xor
fcoms
fmull
ljmp
jmp
enter
jge
push
jp
xchg
xchg
mov
xor
stos
mov
xor
sbb
dec
lcall
push
into
and
cmp
xchg
clc
inc
mov
pop
cmp
inc
aaa
dec
das
xchg
pop
decl
frstor
aas
mov
cmpb
mov
and
push
push
xor
add
push
pop
push
cs
popa
ja
sub
popa
pop
mov
lret
cmp
or
jge
loopne
insl
adc
sub
cmpsl
outsb
aas
dec
stos
das
out
sub
and
sub
insl
mov
mov
dec
stos
cmpsl
xor
and
movsl
lods
ljmp
xchg
inc
nop
aaa
pop
mov
and
jb
int3
dec
ljmp
fwait
cltd
sarl
mov
negb
push
movsl
fwait
movsb
cwtl
fcoms
pop
fistl
xor
rorb
in
sarb
aas
imull
lahf
outsl
xchg
push
in
mov
imul
add
dec
ds
call
ja
sub
cmpsb
push
jle
or
das
xor
xchg
into
repz
jecxz
push
std
sbb
mov
jo
or
mov
fisubrs
aam
cld
sbb
fidivs
xchg
fildl
inc
aam
jg
outsb
mov
test
mov
and
movsl
bnd
std
lcall
sar
pusha
pusha
push
xor
and
leave
jb
xchg
lret
add
mov
or
push
call
loopne
or
sti
mov
cltd
aaa
iret
lea
push
js
mov
fdivrl
mov
push
dec
adc
ljmp
and
cli
bound
pop
and
popf
in
sar
xor
ljmp
incl
mov
add
stos
lods
adc
pop
loop
or
aaa
sbb
add
lcall
push
mov
inc
cwtl
mov
xor
aam
and
in
fidivrs
pop
sar
pushl
mov
and
arpl
xor
pushl
jmp
xchg
mov
mov
mov
sarb
add
scas
lcall
and
sub
repnz
cli
fdivl
mov
mov
pushf
js
sub
mov
sub
push
jns
stc
mov
xchg
bound
mov
cmp
sbb
ljmp
ss
add
xor
mov
cli
push
inc
or
pop
bound
pop
dec
dec
push
mov
cmp
es
ljmp
insb
insb
cld
mov
jge
mov
sub
push
out
ja
mov
dec
stos
shlb
stos
lcall
ret
and
cmpl
pop
inc
movsb
dec
jae
pop
aad
push
mov
xor
adc
pusha
outsb
pop
cmp
cmp
push
fstpl
dec
sub
push
xchg
stc
ljmp
mov
adcb
mov
test
or
dec
dec
xor
mov
lcall
sbbl
mov
ja
mov
into
add
dec
cmp
mov
rolb
and
adc
call
ljmp
stos
sub
lahf
out
push
in
dec
and
sbb
xchg
adc
fldcw
dec
adc
push
mov
data16
hlt
aas
mov
out
frstor
mov
xchg
fadds
in
mov
call
xchg
loope
or
adc
imul
jae
jmp
std
mov
inc
push
dec
insb
inc
loope
mov
mov
dec
or
add
push
jnp
int3
pop
or
adc
loope
aas
inc
sbb
lcall
outsb
add
sub
sub
fildll
je
add
pushl
and
jne
cwtl
mov
dec
pusha
sti
fmulp
gs
cwtl
mov
mov
daa
mov
dec
inc
jo
out
hlt
lods
jg
xor
fisubrs
into
clc
and
add
es
sbb
jae
xchg
pop
or
decl
mov
mov
dec
inc
xchg
psadbw
push
lret
test
xor
imul
dec
cwtl
jmp
stc
pop
out
sub
dec
jae
loope
and
jmp
stos
arpl
ljmp
and
stos
mov
sub
mov
imul
test
pushl
sub
es
xchg
aaa
xchg
inc
daa
inc
lret
clc
dec
xlat
test
fisubrs
xchg
push
leave
lcall
xchg
push
orb
xchg
pop
in
jbe
mov
pop
fildl
clc
sub
iret
push
add
jb
stc
adc
or
out
imul
pop
icebp
lcall
repnz
xchg
lods
sbb
add
cmp
scas
xor
mov
jb
sahf
add
fs
sahf
push
les
popl
mov
lcall
lret
pop
inc
ljmp
pop
popf
fcomip
jg
mov
mov
gs
inc
mov
cmp
daa
or
nop
xor
das
ret
dec
test
mov
call
icebp
sub
out
std
mov
push
ja
pop
jno
bound
xor
mov
pop
xlat
add
lods
jbe
pop
xor
push
push
insl
xchg
mov
or
cli
mov
sbb
filds
dec
aad
push
inc
aaa
dec
int
pop
imul
lods
fists
dec
mov
repz
fcomip
imul
push
ret
pop
and
add
cmp
inc
pop
fisttpll
xor
push
mov
cld
pop
stos
in
push
les
aad
sbb
lcall
sub
mov
loopne
mov
lret
mov
jg
mov
in
es
jmp
sbb
adc
test
cmp
xchg
pop
cmp
and
cmp
pop
inc
dec
and
or
push
sbb
jge
les
inc
mov
lcall
cld
mov
push
xor
leave
inc
cmp
int
or
imul
add
out
mov
push
ljmp
decl
jl
cli
pushf
imul
in
inc
loop
incl
clc
call
inc
out
ret
adc
psubq
lods
test
jns
hlt
jge
sbb
psubq
cmp
add
cld
cmp
cmp
lcall
icebp
cs
jp
sarl
les
loopne
shrb
int
insb
cwtl
cs
ds
sub
pop
je
mov
into
mov
dec
lret
imul
add
xchg
sar
and
and
inc
popa
pop
push
mov
test
xchg
xchg
sub
std
push
mov
mov
sbb
sbb
inc
push
xchg
fcoml
dec
cmp
andb
testl
popf
adc
imul
jecxz
inc
xor
loope
call
rolb
dec
call
pop
add
pusha
std
adc
ja
xor
sti
test
xor
pop
cwtl
and
incl
push
push
mov
sbb
xor
andl
mov
lcall
sub
in
inc
lret
pop
pop
inc
jl
push
mov
inc
adc
mov
jecxz
adc
outsb
inc
push
cs
enter
jg
outsl
push
jns
cmpsl
divl
and
lcall
aas
aam
push
xchg
ljmp
int3
rcl
push
xchg
cmpsb
inc
mov
jg
daa
popl
pop
loopne
jb
iret
jmp
sub
les
cmp
mov
fisttpl
mov
cmp
xchg
lcall
adc
lret
sub
outsl
incl
sbb
lea
jno
sub
inc
bound
cmpsb
out
ljmp
shll
imul
loope
test
pushl
and
aaa
pop
jno
js
adc
call
xlat
push
sar
lcall
push
mov
add
pushf
inc
lret
dec
add
nop
xchg
ss
mov
xchg
in
jle
mov
mov
bswap
outsl
test
mov
lret
jg
add
lock
ljmp
mov
jle
xchg
call
hlt
incl
aaa
mov
call
jno
push
in
sub
jp
push
ss
mov
sub
pushl
sub
mov
fdivrp
js
arpl
jmp
fmul
sub
mov
mov
pop
gs
fdivrp
fdivl
das
clc
decl
seta
lods
cld
xor
out
lahf
push
cltd
sub
mov
test
and
add
les
pop
adc
sub
loope
inc
pop
insb
jne
iret
adc
cs
mov
add
cmp
sbb
imul
cmp
adc
lods
sub
jg
jg
gs
and
mov
popf
inc
daa
jle
mov
sbb
fildl
in
xor
lds
pop
inc
inc
aaa
enter
or
pushl
in
test
scas
lret
sub
stos
xor
mov
adc
push
and
adc
adc
decl
test
add
jb
ljmp
addr16
inc
stc
jge
outsb
add
fiaddl
loop
xchg
rorb
jo
mov
addr16
cmp
mov
arpl
pop
fmull
xor
pushf
mov
pushl
enter
fiadds
inc
movsb
test
push
into
add
fmul
mov
pop
inc
rcr
in
gs
outsb
jl
add
lcall
mov
mov
jecxz
push
sub
and
or
lock
imul
repz
add
push
cld
inc
iret
loopne
inc
rcll
jg
out
bound
je
add
shll
and
sbb
pushl
lahf
sbb
push
addr16
add
mov
push
add
adc
ja
cld
les
in
lods
cmpb
xchg
jge
jl
decl
mov
pop
outsl
inc
daa
pop
dec
mov
out
pop
test
insl
sub
inc
jecxz
lcall
lods
mov
in
pop
or
jno
nop
jecxz
adc
ljmp
repnz
inc
push
xchg
cmp
pop
movsl
fsqrt
or
add
adc
push
or
psubq
lea
jae
pop
mov
or
decl
jns
jge
inc
sbb
cmpsl
arpl
ffreep
std
dec
jecxz
gs
lcall
mov
mov
mov
fwait
cmp
incl
push
add
inc
cmpsb
loop
xor
cmpsl
lahf
xchg
xorl
inc
jge
sbb
daa
sub
add
in
mov
shlb
jns
pop
addr16
jb
fwait
mov
xor
fldl
cmp
mov
ret
push
decl
int
pop
mov
lods
icebp
test
cmp
cmpsb
xchg
sub
or
in
nop
add
dec
fmul
mov
push
iret
cld
push
mov
pop
fidivl
xorb
jo
pushl
push
xor
outsb
cwtl
testb
imul
push
pushl
cld
xor
push
shll
out
jo
mov
inc
loope
arpl
add
mov
jecxz
incl
and
cmp
aaa
inc
iret
dec
inc
jmp
inc
test
iret
fldcw
insl
aaa
aam
jl
push
das
xchg
jl
daa
mov
incl
mov
sbb
xor
stos
loop
xchg
xor
nop
jmp
or
cmc
xlat
mov
mov
push
push
cmp
aad
xlat
call
dec
xor
xlat
out
lret
inc
lods
xlat
or
sub
mov
je
cmp
cmpsl
or
xchg
sub
cmp
sub
mov
cmpl
cmp
subb
mov
pusha
fcompl
icebp
lea
imul
mov
pop
push
insb
daa
jnp
or
jmp
out
scas
jl
fldl
das
es
out
stos
mov
pop
mov
cmp
adc
mov
ljmp
popa
lods
xchg
adc
arpl
pop
bound
pop
pushl
cld
xchg
adc
stos
adc
pop
mov
or
mov
lcall
dec
addr16
imul
cmc
imul
jb
out
lcall
inc
fwait
outsb
mov
and
xchg
or
incl
add
aad
mov
dec
dec
add
mov
pushl
lds
lods
gs
mov
and
and
pop
xchg
imul
call
mov
imul
cmpsb
add
jo
dec
jb
sbb
jmp
push
leave
pop
ds
in
rcll
jg
hlt
and
mov
mov
mov
and
add
jbe
inc
adc
cli
add
mov
scas
mov
adc
inc
in
aas
in
mov
int
in
test
ljmp
hlt
pop
or
adc
das
mov
dec
or
pop
lret
dec
daa
stos
orb
lahf
cmp
cmpsl
data16
inc
xor
test
incl
sbb
push
xor
sub
inc
iret
inc
and
push
int
xchg
mov
incl
lds
mov
popa
mov
adcb
push
add
push
stc
jnp
frstor
pop
dec
mov
mov
mov
mov
add
inc
pop
scas
iret
enter
into
popf
pop
xchg
mov
dec
aas
adc
popa
sub
cli
ja
mov
pop
mov
pop
fdivrl
adc
outsl
cltd
jg
mov
jl
idivb
out
sbb
jae
iret
adc
lods
outsl
sbb
decl
icebp
incl
addr16
fucomp
push
lahf
mov
test
lcall
adc
or
mov
lret
jbe
jns
xchg
xchg
ljmp
jg
cld
cltd
leave
lret
or
sti
mov
or
and
sub
sbb
sbb
mov
push
pop
or
adc
push
clc
ss
push
incl
sbb
scas
sub
sub
pop
hlt
adc
mov
cmp
pop
insb
mov
sbb
ljmp
addps
jne
gs
sub
jle
insl
mov
xchg
pop
inc
xchg
pusha
aas
cmp
aam
test
dec
incl
xor
dec
jmp
lret
adc
xlat
jo
inc
lock
jmp
mov
add
jg
jg
fdivrl
mov
dec
and
jbe
adc
repz
ljmp
fildl
sahf
adcl
inc
ja
inc
inc
pop
pop
sahf
ds
in
xchg
jmp
clc
cmp
mov
inc
xchg
mov
dec
cmp
jmp
ret
xchg
aas
lret
jg
add
pop
mov
push
xchg
push
push
test
out
sub
fimull
addr16
pop
ljmp
mov
push
filds
push
lret
push
sbb
push
scas
test
push
ficompl
arpl
loop
and
cmpsl
js
mov
enter
call
pushl
fisubl
out
mov
fldl
sub
andl
loop
lcall
jo
cmpsl
les
cmp
lcall
ljmp
pop
lea
lods
into
sbb
pop
sbb
cmpsb
jbe
ret
jbe
cld
pushl
das
fimull
sub
insl
dec
clc
mov
cld
aaa
lret
cld
out
movsb
popa
leave
cmp
or
jl
test
scas
jl
mov
adc
ljmp
mov
scas
sahf
rcll
mov
nopl
inc
sub
call
or
ljmp
pop
xchg
add
outsl
xlat
jmp
jg
cs
cwtl
jne
push
jmp
movsl
cmpl
jg
jle
jge
mov
mov
cmp
popa
repz
call
mov
cmp
mov
adc
jmp
inc
int
adc
das
in
jo
jb
mull
dec
loop
sub
sub
xchg
lds
inc
test
push
aas
aam
insl
lret
or
in
outsl
orl
dec
lret
incl
sti
inc
shrb
mov
sub
aaa
adc
pushf
in
lea
xchg
sbb
incl
lea
inc
ja
sar
mov
ffreep
lahf
pop
mov
cmp
push
dec
sbb
decl
fbld
mov
xor
rolb
dec
mov
jne
out
outsl
notb
lret
pop
pop
push
dec
test
sti
ja
mov
insl
lcall
dec
hlt
cmc
daa
mov
jg
subl
push
decb
rol
into
mov
inc
test
cmp
cmpsl
and
ret
sbb
out
test
mov
popa
pop
das
icebp
dec
xchg
and
psubq
push
pop
xchg
sbb
test
ljmp
jmp
or
loope
xchg
cltd
pop
sub
push
aam
repz
testl
sbb
adc
shl
or
xchg
adc
fisttpll
xchg
pop
rol
jbe
add
rorb
and
ss
cmpsw
adc
add
add
lcall
push
xchg
ret
sti
push
repz
out
out
lret
push
xor
lcall
inc
loopne
mov
xor
out
bound
dec
aas
decl
fmul
mov
pop
and
jge
lret
dec
push
xchg
call
push
mov
push
add
xlat
push
and
xchg
outsl
icebp
test
int
mov
stos
add
inc
mov
sbb
in
mov
sbb
nop
aad
sbb
jge
cmp
aaa
fbld
ficoml
dec
jne
lcall
push
cli
add
mov
add
pop
sbbb
cs
push
push
jecxz
mov
pop
lods
inc
inc
iret
jg
fidivl
out
adc
jp
push
nop
pop
ud0
ss
pop
movsb
mov
jne
aad
adc
xchg
add
fidivrs
pop
and
push
repnz
popa
insl
sub
xchg
test
in
repz
decl
mov
addr16
daa
pop
dec
and
loop
pushf
out
pop
cmp
cmpsl
sub
pop
std
stc
pusha
jb
sahf
push
mov
xor
in
adc
ljmp
mov
dec
popf
pop
shll
movsb
out
xlat
cmp
mov
mov
or
adc
ja
mov
cmp
outsb
imul
addr16
ja
sar
lcall
loope
sub
idivl
push
push
stos
shrl
xor
sbb
dec
and
adc
call
sub
cmp
aam
hlt
cltd
jbe
les
loope
adc
sub
out
std
decl
jno
nop
add
cwtl
fbld
addr16
and
mov
mov
or
addl
clc
xchg
dec
inc
clc
pushl
cltd
mov
push
rcrl
popf
adc
loope
fwait
out
fadd
lods
test
xor
jb
mov
adc
call
cmp
lret
aas
push
dec
xchg
or
jmp
stos
cmp
bound
jmp
scas
xchg
std
and
xor
insb
pop
sbb
mov
decl
lods
add
sar
jmp
rolb
inc
out
aam
jno
cmp
jmp
js
mov
nop
adc
lds
scas
in
pusha
push
xor
out
push
dec
shrl
add
pop
push
pop
mov
les
aas
leave
inc
mov
xor
loopne
icebp
mov
jns
xchg
and
sbb
les
inc
inc
sub
cltd
ljmp
outsl
js,pn
push
pop
testl
out
imul
cmpsb
mov
adc
mov
arpl
mov
cmp
daa
ljmp
push
cli
shlb
aas
iret
or
jg
mov
push
pop
outsb
push
sbb
sub
xchg
int
mov
lock
sar
cli
pop
jecxz
and
imul
std
pop
inc
jns
inc
push
rolb
xchg
xor
push
ja
movsb
cmp
iret
jmp
jmp
xor
xor
loop
ss
std
incl
dec
sbb
lahf
pop
in
sbb
cmp
aad
sbbb
mov
sbb
repnz
jg
ret
xchg
mov
loopne
inc
ljmp
mov
inc
lds
leave
mov
fucomp
dec
mov
rorl
xchg
sbb
xchg
std
jl
inc
add
mov
loope
or
or
in
aas
or
jnp
push
and
pop
mov
cmc
gs
int
sub
repnz
in
mov
mov
and
scas
scas
mov
jbe
mov
inc
sbb
in
jg
and
inc
sbb
les
and
inc
jmp
pop
lods
cmp
jg
out
push
cmp
imul
pop
in
ds
dec
or
xchg
incb
push
push
mov
repnz
negb
data16
cmp
shrl
outsl
sbb
psubusb
cmpsb
sbb
sub
pop
fcoml
fisttps
xchg
movq
test
mov
das
test
xlat
xor
inc
incb
and
jno
fbstp
clc
mov
lods
cmpsl
lret
pop
rcrl
jge
cmc
hlt
or
push
pslld
in
insl
addr16
add
sub
arpl
xchg
lds
scas
jl
incl
loopne
xchg
cmpsl
sbb
xor
daa
sarl
adc
pop
pop
imul
cmpsb
jnp
test
aas
xor
fsts
or
outsl
ret
jge
pop
cs
pop
stc
xcrypt-ofb
cmpsl
ljmp
cmp
sar
inc
incb
movsl
lcall
push
mov
jg
jmp
mov
hlt
imul
cmp
cld
pop
pop
in
enter
rorl
insl
push
test
pslld
in
imul
call
fisubl
mov
mov
jae
mov
nop
xchg
jne
push
push
push
mov
mov
mov
out
dec
ljmp
pusha
ljmp
ret
cmpsb
cltd
fwait
xchg
decl
or
or
inc
bound
leave
add
push
test
cli
or
inc
je
push
stc
inc
icebp
push
sahf
cltd
adc
out
pusha
ja
aas
mov
loope
icebp
mov
in
push
jo
pushl
push
aam
pop
jmp
mov
and
lcall
jb
mov
lods
leave
dec
jne
in
or
ret
mov
inc
fwait
mov
call
outsb
lods
jns
test
fs
mov
out
xchg
loop
mov
fstl
outsl
test
cld
dec
mov
loop
jno
insb
aad
aaa
mov
push
cmp
xor
pop
jb
jmp
sub
inc
icebp
icebp
pop
decl
xchg
fstp
jbe
bound
sbb
vphaddbd
dec
jmp
pushl
pop
push
xchg
xor
cli
iret
push
mov
inc
sub
insl
mov
decl
and
xchg
inc
repnz
inc
push
push
dec
and
cld
lds
mov
fadds
cmp
movsl
and
ljmp
andl
mov
sbb
mov
sahf
pop
aam
or
add
popa
jmp
push
cmp
inc
dec
pop
jle
or
daa
ficompl
jle
jmp
pushf
push
pop
into
lcall
fcmovne
lcall
jp
pop
dec
push
xchg
shll
and
or
cmpsb
mov
mov
stc
mov
fidivs
scas
add
mov
aas
aas
es
popa
call
or
and
cmp
push
rolb
add
cmc
mov
jg
out
mov
lahf
std
leave
mov
push
fistpll
ret
sbbb
fisttps
push
loope
sub
dec
int3
roll
cmpsb
lcall
jnp
out
lcall
mov
mov
jns
dec
add
inc
pop
or
lret
xchg
scas
xchg
and
inc
lock
xor
dec
pop
mov
icebp
pop
cmc
mov
and
sbb
jno
pop
call
enter
mov
outsl
sbb
insb
lret
push
pop
dec
cmp
mov
jl
push
les
or
or
filds
lahf
cwtl
xor
pop
and
xchg
xchg
cltd
vmovdqa32
pushl
mov
pop
adc
xchg
aaa
cmc
lock
cli
jecxz
jae
mov
inc
ss
cs
xorb
jo
scas
xchg
test
jge
shrl
mov
popa
lcall
push
cmpb
jbe
es
xchg
test
cmpl
xchg
pop
enter
xchg
cmp
decl
sub
or
iret
dec
mov
aas
daa
ja
leave
sbb
call
int3
sub
dec
and
adc
sub
mov
mov
call
and
and
mov
add
lcall
lret
cmovno
aas
in
cld
inc
jmp
or
jmp
aas
int3
out
enter
adc
iret
mov
call
push
aad
inc
push
fidivs
popf
push
mov
dec
inc
jnp
out
sbb
jne
mov
jb
or
dec
dec
lea
and
roll
pop
push
ljmp
shlb
pop
pop
dec
test
and
add
leave
icebp
scas
repnz
iret
dec
gs
pop
repnz
aas
jl
pop
lods
out
imul
aaa
xchg
dec
cmpsb
add
aaa
das
jne
movsb
lcall
in
aam
ljmp
adc
mov
xchg
cli
pop
retw
push
jge
jle
cmpsb
push
or
sbb
jecxz
je
jno
testl
jg
pusha
push
addr16
in
rcrl
sbb
inc
lock
mov
call
xchg
pop
hlt
or
in
mov
int3
ds
mov
sahf
out
or
jmp
mov
adc
jecxz
cmp
shll
movb
ljmp
neg
icebp
jno
jge
cltd
add
int
inc
pop
ret
sub
or
sub
stos
mov
xor
mov
fwait
xchg
hlt
aad
or
dec
push
cmp
nop
sub
jmp
mov
dec
pushf
shlb
push
imul
xor
cmpsl
test
addr16
divl
mov
popa
jmp
push
pop
xchg
cmp
mov
idivb
mov
mov
call
adcb
add
cwtl
ja
pop
xchg
push
movsb
push
cmp
pop
push
sbb
sar
ja
push
fsubrs
push
mov
push
mov
mov
fidivrl
xchg
mov
lods
test
pop
aad
subb
sarb
jle
jbe
hlt
ret
mov
jbe
hlt
xor
pop
sbb
aaa
or
inc
cmpsl
cmp
push
cmp
push
ret
push
data16
jbe
insl
or
orb
xchg
dec
pop
or
inc
loop
mov
push
pop
lods
jmp
loop
icebp
movl
out
inc
jae
scas
call
pop
or
js
into
or
jmp
iret
call
cltd
sub
jmp
push
js
fmuls
nop
jne
lahf
jmp
call
std
xchg
push
inc
sbb
aas
hlt
push
add
incl
xchg
insl
imulb
jae
out
xlat
js
push
incl
jl
dec
inc
jae
scas
mov
jb
out
push
adc
sbb
stos
cli
mov
and
dec
ret
xor
jo
cld
daa
sub
movsb
push
aad
xchg
scas
push
lds
incl
add
jb
insb
inc
aam
pop
push
lret
ds
adc
data16
push
mov
call
xchg
aad
and
loop
push
xor
xchg
jo
jg
stos
pop
jne
fmul
xchg
mov
lret
pop
sbb
in
aad
and
add
lea
cwtl
xor
jbe
ljmp
jmp
or
sbb
mov
push
ja
outsl
nop
divl
rorb
cld
jmp
pop
push
out
in
ret
jnp
inc
or
dec
adc
add
add
and
jb
mov
jg
or
out
lret
lcall
in
out
imul
mov
insb
cmpsl
and
icebp
lahf
enter
std
insl
lods
mov
incb
sub
pop
ja
test
sub
mov
rcrl
jmp
rorl
cmpb
pop
or
and
mov
cwtl
outsl
xchg
cwtl
nop
xlat
repz
ret
incl
repz
adc
mov
mov
test
inc
aas
mov
adc
add
push
lret
jmp
and
cmp
adcb
xor
loop
or
testl
repnz
pop
movsb
push
xlat
sbb
int3
cli
imul
fnstsw
dec
mov
and
dec
addl
inc
cli
jecxz
mov
gs
sbb
jno
cmpsl
shll
mov
mov
arpl
and
add
imul
ficoml
pop
pop
decl
mov
pop
cmp
pop
inc
pop
add
pop
ja
ret
decl
sbb
push
cmpl
fistl
or
int
xlat
push
loope
xchg
outsl
push
cmpsl
sub
lret
enter
xchg
incl
pop
sub
mov
mov
mov
mov
mov
sbb
adc
les
mov
das
mov
xchg
call
jns
out
add
or
sahf
sbb
dec
push
push
mov
cld
mov
lcall
nop
xchg
into
and
nop
push
mov
xchg
loop
mov
push
loop
ja
lcall
pop
mov
lods
xor
adc
add
sbb
xchg
mov
leave
and
add
lcall
in
push
sbb
xor
cmpsl
xchg
and
mov
stc
imul
rcrb
rorb
std
addl
adc
testb
ja
jne
or
push
inc
out
aam
dec
push
sub
xorl
mulps
jg
loop
je
inc
cmp
lods
outsb
ficoml
sub
add
mov
sub
int
shll
sub
mov
sbb
lea
ja
jns
inc
sar
jmp
mov
or
bound
ror
or
inc
mov
repz
sbb
or
pushl
xchg
mov
insl
sbb
pop
mov
mov
pushf
cmc
je
sub
filds
shrb
aad
int
xor
push
mov
gs
fisttps
std
mov
push
insb
add
dec
xchg
enter
fsts
dec
cs
jg
and
pop
push
xchg
stc
sub
xor
inc
jne
cld
call
push
jp
jne
std
pop
out
scas
test
in
mov
add
cmp
lcall
cltd
addr16
mov
packuswb
sbb
incl
jmp
add
push
add
js
or
jg
or
push
leave
add
fbld
pop
in
roll
xor
stos
fsubs
dec
mov
daa
ja
dec
mov
std
adc
test
adc
arpl
lods
ja
mov
adc
sbb
pop
lea
test
lea
jo
pusha
sbb
jb
int
sub
call
mov
cmp
pop
iret
pop
ds
push
jmp
sub
add
xchg
rolb
addr16
jle
ds
fnstenvs
lcall
rclb
sub
jns
scas
pusha
add
pop
xchg
pop
add
clc
ljmp
es
sub
inc
and
aad
popf
jmp
fcoml
dec
or
mov
mov
fisubl
and
cmp
cmp
leave
ljmp
xor
and
mov
cmp
sbb
push
dec
ret
mov
les
push
push
lods
dec
gs
add
mov
lcall
movsb
lret
adc
mov
stos
lock
popa
jmp
popw
sbb
push
sete
je
call
rcll
dec
and
mov
cmpsb
jb
sbb
mov
jmp
daa
and
cmp
push
clc
popa
jbe
ss
mov
std
stos
negb
loope
mov
push
push
mov
ja
sar
pop
movsb
ljmp
rcrl
jmp
icebp
fmuls
xor
dec
push
sub
xor
dec
popa
mov
out
clc
out
aaa
xor
sahf
xlat
loop
pop
punpckhdq
adc
sbb
neg
xchg
and
pushl
inc
je
frndint
out
cmp
xor
cmpsl
mov
popf
mov
scas
fwait
movsl
cli
sbb
in
lock
aaa
call
insb
mov
inc
mov
push
daa
mov
or
inc
test
ljmp
xor
cld
push
in
aam
xlat
out
jo
jl
mov
or
push
cmc
hlt
lds
cmp
push
jle
or
sbb
jmp
in
int3
dec
mov
inc
adc
xorl
fcomip
test
addr16
andl
dec
lds
stos
pop
push
mov
xor
call
sbb
pop
adcb
mov
sbb
rorb
xchg
mov
adc
xchg
lock
jbe
mov
push
decb
in
into
mov
xchg
das
cli
pop
hlt
cld
inc
jp
sub
dec
aad
ds
frstor
lcall
rcrl
jbe
clc
xlat
adc
mul
mov
mov
xchg
xor
lcall
bound
repz
shrb
dec
mov
sbb
add
add
rcll
cmp
pop
pushl
dec
push
cmp
test
mov
mov
movsl
imul
clc
mov
mov
out
dec
pop
jle
push
or
adcb
mov
pop
rcl
xor
jno
or
sub
jbe
inc
popf
orb
push
clc
cmp
push
bound
mov
push
xor
push
psrld
sbb
xchg
mov
outsb
int
pop
pop
jb
shl
mov
leave
pushl
cli
in
std
add
jecxz
je
repz
jnp
jmp
sub
mov
jmp
sti
mov
lds
xorb
int3
shll
gs
incl
repnz
iret
pop
or
mov
jg
rclb
xchg
enter
rcl
mov
mov
decl
adc
test
aas
inc
or
les
mov
jg
push
hlt
lret
and
popf
cmc
pop
pop
cmp
scas
xchg
lahf
hlt
decl
lcall
inc
int
xchg
or
fistpll
add
lcall
loopne
dec
mov
add
ljmp
push
and
cmp
mov
sub
insl
stc
pop
inc
pushl
add
filds
sub
repz
shrb
out
in
lods
xor
scas
or
sbb
xor
loopne
mov
ljmp
mov
ror
orb
mov
loopne
push
je
jle
pusha
or
pop
fldenv
mov
aaa
lahf
dec
dec
or
leave
data16
call
add
test
test
sub
mov
mov
or
mov
xchg
cmc
sub
ljmp
pop
dec
rclb
pop
nop
loopne
push
popf
leave
scas
push
xchg
pop
movsl
stc
repnz
lret
orb
clc
jmp
cs
inc
jp
sbb
cmpsl
fimull
mov
movsl
orb
std
sub
jecxz
fistps
cmp
xchg
pop
jnp
lds
lds
outsb
lods
push
aam
decl
inc
idivb
push
mov
imul
movl
mov
add
nop
or
xor
sub
mov
outsl
inc
aaa
sbb
notb
jno
dec
test
pop
sbb
incl
loop
adc
stos
sub
iret
add
hlt
fistpll
rorb
in
incl
pushf
mov
jecxz
adc
sub
jle
or
loope
in
ljmp
jecxz
js
push
and
fcomps
movsb
mov
xlat
add
pop
sbb
sbb
and
and
lahf
jo
xor
adc
sbb
outsb
lret
adc
mov
cld
mov
cltd
sub
push
sub
mov
jg
xor
xchg
cltd
pop
adc
lea
dec
xor
aaa
adc
add
aaa
add
xor
std
hlt
test
insl
sbb
movsl
fisttpll
sbb
inc
fwait
xchg
and
pop
notb
hlt
inc
add
pushfw
or
pop
mov
aam
mov
sub
jg
push
stos
xchg
xor
and
lock
inc
xor
pop
pop
adc
inc
lcall
push
nop
iret
add
ljmp
ja
xor
inc
mov
inc
fldl
add
mov
repnz
jmp
pop
movsb
pop
mov
fsubl
call
aas
and
jecxz
sbb
lcall
fsubl
jno
jnp
int
cld
jle
jg
or
inc
cmpsb
mov
xlat
iret
xor
inc
jmp
clc
bound
test
inc
ds
mov
leave
rcrb
lahf
repnz
rorb
cmpb
notb
and
add
loop
push
out
add
ljmp
and
inc
xchg
ljmp
inc
test
bound
dec
cmp
ljmp
push
cmp
jmp
mov
jbe
cmpsb
mov
decl
loope
in
xor
out
add
daa
jp
push
mov
xchg
lcall
aam
aaa
ljmp
push
es
sub
push
mov
lcall
push
inc
aad
hlt
aam
jnp
fisubrl
lcall
push
insb
pop
aad
lcall
dec
ret
hlt
jge
inc
pop
dec
repnz
aad
mov
fs
out
jno
mov
jno
addb
cld
popf
scas
bswap
dec
add
lock
ja
adc
dec
pop
push
dec
xlat
jb
xor
je
mov
in
inc
sarb
notb
lods
je
jmp
inc
stos
stos
adc
xor
std
pusha
and
jecxz
ds
aas
addr16
xchg
dec
test
mov
mov
out
dec
add
clc
mov
insb
xor
cmp
mull
clc
pushl
js
insl
cmp
addr16
mov
loopne
pushl
cltd
int
jbe
mov
shr
ds
in
push
xor
imul
mov
out
lea
int
cltd
jns
push
push
ror
fsubrp
mull
pop
int
or
pop
xchg
fwait
loopne
out
push
mov
dec
jg
mov
movl
push
lods
es
clc
sarb
stos
sbb
call
inc
push
cmp
test
idivl
mov
add
and
mov
fadds
mov
inc
shl
fists
fdivrl
arpl
push
imul
nop
hlt
fcoms
in
lahf
ret
push
ret
decl
cwtl
in
arpl
pusha
push
xchg
jno
inc
test
out
ficomps
pushl
test
jmp
push
mov
xchg
cs
mov
test
push
and
jmp
sti
movsb
addr16
inc
sub
clc
mov
int3
sbb
sub
mov
rcrb
pop
popa
incl
mov
sbb
jl
out
mov
clc
int
popa
pushl
cli
leave
adc
sbb
fstl
dec
pop
mov
and
jae
idivl
cmp
mov
idiv
mov
incl
mov
movsl
lret
out
cmpsl
inc
pop
imul
mov
testl
push
les
jno
cmp
sbb
xchg
ret
jno
fldt
out
mov
ljmp
cmc
inc
fisttpl
or
mov
rcr
jle
lcall
repz
pop
lcall
test
seto
add
dec
shlb
decl
shll
mov
repz
aad
ljmp
inc
mov
lcall
push
dec
stc
stos
das
mov
test
fsubr
sbb
clc
aaa
add
out
or
imul
decl
cmpl
mov
dec
xchg
mov
xchg
mov
cltd
adc
lcall
dec
int
xor
mov
pop
xor
rcll
push
mov
lret
inc
xchg
and
lcall
leave
sbbl
sub
neg
xor
xor
xchg
mov
jnp
insb
in
mov
push
sub
xor
loopne
mov
cli
dec
scas
out
push
dec
clc
cmc
clc
lcallw
divb
fidivl
lds
fstp
cmpl
mov
in
pop
mov
shrb
mov
xchg
add
dec
xchg
jne
aam
out
test
xor
mov
sub
imul
xchg
push
dec
xchg
push
sub
ljmp
mov
sub
scas
jnp,pn
pop
pusha
loopne
mov
or
outsb
mov
dec
xchg
jb
mov
and
stos
imul
fbld
dec
xor
js
insb
sarb
cmc
push
shrl
cmp
dec
xor
inc
stos
pushf
add
fildll
pop
cmp
push
es
movsl
xor
stos
fcomps
fdiv
add
enter
push
cs
mov
add
jmp
sbb
jmp
jb
adc
in
ja
arpl
sar
mov
jb
xor
stc
sub
gs
cmc
and
push
jmp
jnp
popf
stc
aas
cmpsb
dec
mov
sbb
nop
clc
lock
mov
add
add
das
jle
pop
or
and
jo
outsl
decl
outsb
xchg
arpl
mov
adc
xchg
push
lods
mov
xchg
pop
in
or
sahf
mov
cmp
insl
pop
mov
loopne
rclb
clc
pop
mov
push
cmp
loopne
in
fbld
inc
fs
jmp
shrl
aam
mov
sbb
mov
xor
call
cmp
cmp
mov
scas
lcall
cmp
scas
decl
cli
into
mov
mov
cs
add
jp
jle
aam
mov
pop
jle
repnz
scas
jo
test
mov
scas
push
shl
lcall
stos
or
movsb
sub
addb
out
movsl
jne
int
popa
sbb
mov
dec
iret
push
aam
adc
xor
outsl
xchg
xor
xchg
add
pop
sub
mov
mov
lret
popa
arpl
adc
ljmp
lods
lret
out
ss
inc
mov
inc
repnz
xor
mov
dec
cld
aaa
std
popf
jnp
mov
insl
xchg
lcall
push
enter
add
test
cmp
mov
mov
das
pushf
ds
lods
mov
pop
outsl
cmp
jg
pushl
xchg
imul
pop
dec
push
mov
movsl
inc
cs
fcomip
cmc
ja
adc
cmp
es
ret
dec
sub
decl
je
js
pop
out
pop
sub
lahf
push
pusha
insb
cmp
xor
fistps
xchg
sub
out
jg
add
in
stos
cmc
btcl
add
pushf
mov
stos
decl
xor
in
jae
mov
jne
push
push
xor
call
xor
push
in
decl
adc
int3
aaa
cmc
fisubrl
cs
je
idivl
dec
push
push
mov
fldcw
std
sub
in
fs
inc
cmp
pop
or
mov
xor
lahf
jg
sar
js
js
mov
inc
fsubs
pop
xchg
jg
les
hlt
mov
lods
push
mov
mov
adc
sarb
outsb
stc
stos
push
shl
bound
cmpxchg
adc
call
dec
mov
lods
jo
cmp
out
int3
cmp
pop
push
outsb
daa
and
push
add
cmpsl
int3
and
jg
dec
xor
mov
pop
lods
shlb
inc
faddl
xor
mov
inc
xchg
test
sbb
xor
sti
jle
hlt
cmpsb
mov
es
sti
data16
sarb
andb
xor
lahf
jl
mulb
jno
aad
in
mov
shl
movsl
out
loopne
incl
cld
int
mov
sub
mov
jecxz
aas
int3
push
xchg
lcall
ljmp
out
cld
cmp
xor
push
xor
and
rcrl
dec
sbb
loopne
pushl
dec
cmp
xchg
loope
or
shll
jmp
call
dec
jns
jae
int
xor
sub
les
mov
sbb
cli
dec
push
test
push
jg
cmp
stos
pop
cmp
push
daa
cmp
loopne
xlat
pop
and
cmp
rorl
pushl
mov
pop
and
pop
dec
inc
popa
test
clc
testl
test
lock
xchg
inc
xor
ljmp
sub
fdivr
add
adc
int3
aad
lods
push
sarl
shlb
out
enter
pop
pushf
or
lcall
adc
jbe
in
dec
jp
or
push
ret
sbb
pop
enter
decl
mov
adcb
leave
outsl
cmc
fimuls
add
outsl
stos
sub
adc
scas
cmc
lcall
sub
nop
popa
cmpsb
icebp
das
mov
or
pop
pop
xor
fstl
in
jg
imul
insl
inc
psubq
lock
mov
add
jnp
call
and
inc
xorl
out
outsl
fwait
aam
mov
and
mov
lea
js
mov
inc
cmp
xor
in
add
push
decl
adc
dec
fwait
int3
jl
sbb
mov
xchg
mov
ret
out
ja
call
push
xchg
lods
inc
pushf
lock
or
cmc
int
xor
sti
hlt
cwtl
fcomip
xorl
xchg
cltd
call
push
and
xorb
fists
pop
pop
inc
hlt
lods
std
or
and
jge
add
in
out
push
repz
pop
dec
aad
repnz
jbe
orb
mov
pop
sbb
adc
sbb
pop
stc
jl
adc
pop
add
imul
sub
aam
or
js
sbbl
fwait
call
add
aam
jmp
lcall
mov
jns
into
outsl
aad
push
les
push
negb
adc
sub
jmp
mov
enter
fistl
mov
mov
dec
mov
arpl
mov
push
in
sbb
push
mov
icebp
mov
jmp
pushl
sub
adc
test
scas
dec
jg
and
es
dec
gs
jmp
enter
mov
mov
xor
enter
pop
lahf
or
xchg
inc
push
aas
testb
mov
jno
loopne
leave
dec
xchg
add
pop
incb
mov
popa
rcrl
jo
fsubs
sbb
std
mov
notb
fimull
fs
push
jle
xchg
in
daa
adc
inc
pop
loopew
inc
test
pop
xchg
xor
adc
jge
push
das
in
fwait
pop
jl
xchg
xchg
jae
adc
data16
pop
ret
or
xchg
mov
xchg
jmp
mov
push
pop
in
cmp
ss
lock
adc
pushl
mov
jo
dec
fisubs
ljmp
sub
lea
jp
xchg
sub
jle
ljmp
jl
sbb
out
es
paddb
in
push
in
inc
stos
mov
scas
daa
jae
mov
fcomip
nop
jo
cmp
jecxz
jg
mov
xor
sbb
decl
pop
add
jns
ret
push
in
xor
inc
in
roll
pop
in
jp
add
das
ror
xor
shrb
aad
xor
pop
and
popa
or
add
rol
aas
push
dec
pop
test
dec
jg
inc
or
mov
test
and
nop
ds
mov
aas
enter
data16
adc
mov
insl
push
mov
add
fs
jmp
cli
xorl
adc
pop
das
mov
push
inc
decl
clc
shlb
mov
push
cmp
sarl
psubq
in
xchg
cmp
push
pushl
daa
lock
and
jg
arpl
xor
loop
xchg
push
nop
push
jb
inc
jno
cmp
add
call
sahf
adc
daa
jbe
call
movsl
mov
test
or
lods
adc
mov
movb
mov
pop
cli
push
les
inc
push
or
pushl
sbb
call
inc
jmp
out
imul
shrl
or
inc
push
loopne
filds
test
bound
pop
stos
xlat
stc
pop
xor
cwtl
mov
fwait
add
shll
ret
cmp
lock
ja
add
push
or
in
sub
jg
adc
dec
insb
xchg
push
sbbl
sub
je
loopne
push
sbb
dec
and
insb
aas
or
sti
cmp
jge
jmp
push
clc
push
mov
mov
data16
lods
adc
pushl
sbb
jl
sbb
les
or
lock
loop
sbb
cmp
leave
sbb
mov
incl
mov
outsl
pop
ja
lds
mov
cltd
xchg
gs
loopne
ljmp
xchg
sub
jo
xchg
dec
mov
dec
cmp
push
loope
jno
cli
rcll
mov
cmp
dec
ficomps
jg
leave
jle
xor
mov
ret
inc
loopne
xchg
incl
pop
es
mov
loopne
test
mov
test
lret
xchg
lahf
out
ds
jmp
addb
adc
inc
rorb
rolb
data16
adc
leave
cwtl
test
in
ljmp
sbbb
mov
ret
out
popa
test
push
bound
xorl
or
gs
cmp
inc
sbb
cli
mov
xor
sti
xchg
jb
dec
mov
rolb
xchg
or
shr
fbld
orb
dec
sahf
mov
push
cmpsb
adc
or
fsub
cmpsl
ret
or
xchg
clc
call
int
negl
xor
jno
clc
shrl
fdivrl
add
shrl
push
leave
dec
bndldx
sub
xor
insl
fstpl
jo
xorb
faddl
add
call
call
inc
mov
inc
adc
insl
mov
sub
push
movsl
jbe
call
decl
xor
sub
movsl
inc
fildl
cmpsl
test
movsb
jne
stos
fdivr
mov
cmp
lock
mov
mov
mov
push
add
pushf
loope
jmp
push
xlat
in
in
pop
sbb
ljmp
call
xchg
adc
cli
sub
ljmp
sbb
push
pop
push
dec
pushf
popf
jge
test
jecxz
mov
mov
or
pushl
fdivs
icebp
jb
movsb
push
and
imul
push
out
out
adc
lods
addr16
mov
dec
orl
repz
shlb
adc
sub
push
mov
mov
mov
int3
mov
inc
push
add
out
pop
in
das
lds
test
out
sub
push
add
scas
push
push
pop
hlt
push
das
adc
xchg
jl
xor
imul
arpl
push
jnp
mov
shlb
in
stos
testl
fstl
lea
push
push
push
outsb
in
jmp
sub
inc
pop
out
push
cmpsb
xor
popa
cmp
cmpsl
xor
out
xchg
rorb
cmp
out
inc
mov
and
neg
cmp
cmp
mov
in
inc
add
aaa
sbb
adc
mov
sbb
sbb
mov
int
mov
dec
lcall
adc
lahf
repnz
push
loopne
push
movsl
and
ljmp
pextrw
lods
adc
insb
test
stos
ds
pop
adc
int3
or
adc
out
cs
lcall
pop
nop
cmp
inc
cmpsb
or
pop
movsb
stos
inc
inc
out
mov
cmp
sub
incl
std
cltd
test
lock
fcompl
cmpsb
lahf
bound
xor
or
jmp
ja
sti
clc
call
cwtl
clc
cmc
movsb
in
lahf
insl
dec
mov
adc
loopne
pushl
and
adc
xlat
scas
jnp
movsl
mov
lods
adc
outsl
xor
or
sbb
decl
dec
pop
popa
in
xchg
xor
aaa
js
mov
idiv
fildll
xor
jle
xor
ss
xlat
push
inc
aad
jmp
push
or
or
dec
popf
int
cmpsb
sbb
adc
jmp
outsb
jmp
inc
or
imul
scas
sti
ret
jae
lods
cmp
test
imul
push
decl
clc
ret
and
enter
notl
js
fldl
incl
flds
in
repnz
call
mov
rolb
push
int
pop
frstor
or
lcall
mov
loopne
orb
dec
push
std
xor
jge
fwait
lcall
sbb
repnz
cli
push
testl
dec
inc
xchg
divl
mov
jp
jg
pop
pop
lret
sbb
daa
icebp
pop
nop
mov
pop
adc
popa
pop
mov
jns
and
mov
stos
dec
repz
clc
pop
cmpl
arpl
ja
outsb
inc
xchg
rcrl
stc
cld
popf
push
lcall
aad
in
arpl
add
outsl
xor
iret
frstor
fs
sbb
incb
adc
test
mov
push
lcall
cmpsl
inc
dec
test
xor
inc
popf
scas
aaa
jo
mov
insl
ds
pop
cmp
jg
stos
push
or
repz
out
mov
lock
lahf
pusha
push
rcr
xor
lcall
stc
jns
ret
rorl
outsl
mov
cld
sbb
cmc
add
mov
add
cmp
jle
and
adc
dec
jnp
pop
test
pop
shl
leave
xlat
jo
pop
mov
call
push
mov
adc
in
push
cmp
pusha
and
adc
shl
aaa
sub
incl
fdiv
dec
lods
in
pop
int3
cmp
pop
push
inc
movsb
cmpsb
fwait
loop
jg
or
movsb
dec
arpl
cmp
sti
ds
cld
gs
subb
cwtl
adc
std
pushl
inc
mov
jnp
and
test
repnz
call
fwait
repz
andb
mov
pop
xorl
ret
clc
call
sub
nop
jge
cmpsl
cmp
fidivrs
ja
xchg
repnz
pushl
jo
pop
cld
jno
lcall
sub
sub
inc
test
dec
jmp
adcb
xor
and
incl
ret
adc
xor
adc
arpl
pop
decl
rolb
sbb
mov
jo
fs
jns
cld
aas
jb
aaa
jbe
jb
iret
and
xchg
or
nop
xor
pop
pusha
push
cmp
mov
mov
mov
mov
jmp
call
std
call
mov
movsl
inc
gs
xchg
dec
dec
jl
xor
shlb
insb
adc
insl
fbstp
jmp
incl
sbb
es
sub
mov
mov
cmp
jl
and
push
decb
inc
movsl
jp
icebp
call
cmp
inc
imul
mov
fsubrp
pop
push
ss
inc
inc
mov
pop
push
loope
inc
xchg
pop
dec
cmp
jl
mov
adc
fisttpll
lcall
jmp
mov
lcall
cmp
pop
xor
pavgw
fsubl
fidivrs
and
popf
pop
imul
loope
loope
lret
sub
dec
mov
jle
jmp
mov
rorl
outsb
arpl
pushl
std
xchg
out
xchg
xchg
shlb
push
cmpsb
leave
mov
or
adc
mov
jno
mov
pop
push
lahf
loopne
jns
incl
push
clc
es
jo
push
cmp
in
int
dec
cmpsl
lock
test
mov
aas
stc
sti
mov
repz
dec
jg
mov
xor
int3
in
mov
arpl
mov
orb
fisubrs
cmp
aas
lcall
add
in
bound
inc
xorb
out
test
adc
mov
ljmp
std
push
in
movsl
mov
push
fmull
cmc
shl
fisubrl
fcompl
leave
pop
fimull
mov
cmp
aaa
insb
subl
icebp
jg
loopne
pop
pop
lods
iret
loopne
aas
xchg
mov
and
sti
adc
decl
cmpb
scas
jae
sbb
shrl
and
pushl
jg
pop
enter
cmpsb
sub
mov
cld
jg
in
mov
sbbl
fisttps
sbb
mov
popl
sub
mov
mov
dec
pop
shufps
cli
adc
mov
xchg
addl
fs
sbb
xor
add
decl
pop
inc
addl
dec
fldt
push
adc
aas
add
pushf
std
sub
sbb
inc
sbb
nop
pushf
lock
cs
lock
adc
xor
in
jmp
cmp
bound
daa
and
notl
push
xlat
ljmp
and
mov
pop
jmp
ss
into
and
or
mov
std
mov
rol
in
jl
pop
ljmp
in
fbld
lahf
aam
mov
sbb
mov
jg
jnp
inc
pushf
xchg
sarb
fwait
lahf
lcall
les
sarl
xor
cmpb
and
push
enter
or
fwait
jp
jg
inc
push
in
add
sbb
mov
das
insb
jecxz
add
test
dec
fwait
stos
mov
stos
inc
jmp
sti
mov
adc
mov
mov
pop
push
push
jg
rcl
popa
fnstenv
in
ss
ljmp
or
or
push
in
arpl
repnz
pop
out
dec
jl
es
movsl
ljmp
push
xchg
jae
out
mov
add
dec
add
mov
subb
ljmp
mov
inc
inc
xchg
xlat
sbb
loopne
xchg
cmp
jge
mov
lcall
sub
mov
xor
lods
dec
jbe
adcb
inc
iret
iret
ljmp
ljmp
fldt
enter
or
sbb
sbb
iret
sub
jl
shll
lcall
sbb
jge
adc
and
push
das
dec
jge
sbb
xor
xor
sub
lcall
cmp
xchg
mov
jg
mov
repnz
cld
roll
jge
daa
mov
jmp
dec
mov
add
or
inc
jnp
data16
sti
sub
sbb
mov
jmp
dec
xchg
jnp
xor
popf
movsb
mov
mov
and
enter
ljmp
jae
sbb
xchg
and
or
into
loop
push
mov
out
adc
pop
dec
sti
fistl
cmp
fmul
roll
push
test
sbb
lret
push
addr16
fsub
xor
push
or
sbb
jnp
cli
ret
cltd
pop
push
add
ja
and
in
push
into
hlt
add
incl
xchg
mov
adc
lock
sub
fs
xchg
pop
outsb
test
in
cmp
decl
mov
pushf
stos
and
fstl
movsl
call
movsl
xchg
xchg
movsl
add
lcall
mov
mov
subl
pop
je
jl
bound
mov
push
in
dec
add
imul
pop
jge
sbb
sbb
cmp
cmp
xor
mov
xor
test
rcll
aam
cwtl
lods
sar
cmp
das
xchg
mov
insl
cmp
aam
jns
mov
dec
mov
jmp
jl
call
xchg
test
mov
call
xor
sbb
sbb
inc
incl
sbb
or
sahf
dec
adc
mov
std
mov
daa
adc
cld
les
sub
pop
nop
jp
mov
test
sti
push
mov
xchg
cmpsb
mov
xchg
insb
xor
sbb
es
ljmp
icebp
dec
jmp
gs
cs
xchg
pop
mov
pushf
mov
imul
iret
pop
scas
repz
leave
enter
lds
adc
into
movb
outsb
fwait
sub
std
push
inc
stc
insl
mov
daa
fimuls
mov
mov
sub
pop
mov
orb
lcall
sbb
push
xchg
xchg
hlt
push
enter
and
adc
adc
push
add
mov
in
fbld
sahf
or
jmp
cmp
sub
das
call
test
add
icebp
jg
mov
and
push
lods
dec
mov
test
jg
sbb
jl
fisubs
lods
cwtl
jne
test
push
ljmp
mov
lock
xchg
inc
popl
orl
lods
test
emms
adc
ljmp
fwait
mov
pop
mov
cmp
dec
sti
call
cmc
fwait
scas
xchg
inc
adc
ret
xor
xchg
add
dec
mov
div
aas
jg
scas
setno
mov
cwtl
out
imul
cli
test
add
jp
data16
fsts
mov
lea
sbb
daa
pop
in
enter
mov
shlb
mov
or
mov
push
sbb
push
scas
je
enter
pop
scas
inc
add
ret
pop
pushf
push
lahf
and
nop
sub
hlt
mov
js
sbb
scas
adc
push
das
movsb
ret
pop
mov
xchg
jbe
sub
lcall
pop
cmpsl
dec
mov
adc
push
aad
leave
xor
es
lahf
aas
add
mov
cmpsb
push
adc
adc
popa
loopne
mov
sbb
int3
sub
adc
test
sbb
sbb
add
mov
movb
mov
mov
insb
out
sti
mov
ja
mov
ljmp
adc
or
lock
xorb
lea
fcoml
lds
outsl
dec
lods
pusha
push
pop
outsb
lcall
test
mov
jg
push
xchg
int
adc
daa
mov
sbb
or
jge
add
out
out
pop
or
test
or
push
xchg
xor
jg
lods
pop
dec
ret
and
iret
inc
mov
and
inc
push
shr
xchg
js
sbb
lcall
xchg
sub
push
pop
lret
mov
movsl
mull
jmp
sbb
cmp
adc
int
pop
pop
dec
mov
arpl
icebp
dec
outsl
jb
sbb
ret
pushl
std
decl
xchg
adc
pop
insl
fnstenv
test
jle
adc
test
pushl
push
cmp
sti
lods
loop
shrl
xor
add
mov
sti
aaa
push
add
int
fstl
add
and
xchg
cld
mov
and
sub
sti
lcall
scas
call
negb
push
xchg
loopne
sub
mov
cwtl
mov
pop
cmp
jnp
mov
sbb
out
mov
cltd
inc
jmp
addr16
xor
in
mov
xchg
jb
dec
push
inc
adc
test
jg
add
pop
push
dec
sub
loopne
incl
jmp
sbb
fsubrs
push
fnstsw
out
in
iret
jb
sub
call
jp
xor
xchg
outsb
jnp
adc
pushl
mov
addr16
or
loopne,pn
out
repnz
push
rcr
sahf
out
add
ljmp
xor
xor
aas
mov
mov
cltd
inc
xor
inc
jae
sbb
lea
arpl
in
pop
pop
cltd
cmpb
adc
sbbb
aas
and
test
outsl
test
sub
das
pop
mov
cmpsb
loope
js
lcall
inc
imul
jno
or
imul
sbb
and
loop
or
aas
or
lock
dec
dec
xchg
addr16
jo
lods
lret
ds
stos
jmp
dec
arpl
jge
fiadds
cmp
data16
and
mov
mov
add
das
ds
outsl
test
pop
sub
push
xor
ret
fsub
les
add
dec
xchg
insb
pop
adc
cmpsl
jmp
je
xchg
push
pop
lock
add
jae
dec
inc
jp
scas
mov
mov
inc
fwait
mov
and
cmpsb
mov
xor
mov
iret
fs
and
mov
jge
dec
mov
jg
xchg
push
mov
push
or
pop
mov
xchg
or
aad
std
call
jnp
sub
or
test
xor
lods
stos
ss
jne
dec
mov
mov
jnp
sti
std
mov
dec
cmp
add
bound
and
nop
adc
mov
push
imul
pop
fstpl
xor
jecxz
lds
cmp
sub
or
setne
cmp
andl
ljmp
js
push
ret
pop
or
jmp
dec
add
and
jg
mov
push
jle
popa
cwtl
mov
stos
sbb
clc
mov
cli
ljmp
addr16
xchg
loopne
andb
xor
xchg
mov
out
mov
pop
jp
xchg
jp
mov
aad
ja
call
and
xor
stos
xorl
lods
subb
push
mov
decl
and
mov
add
jecxz
cld
scas
push
jl
cs
mov
data16
in
cmp
sbb
nop
insb
inc
outsb
shrb
loop
jnp
enter
rclb
xlat
insl
in
ljmp
mov
xor
call
pop
inc
imull
cmpl
pop
repz
test
sbb
adc
push
fcmovb
imul
push
push
jecxz
lods
adc
hlt
jp
xchg
ficompl
cmp
movsb
ret
clc
aas
negl
xchg
out
pusha
ljmp
jg
out
cmpsb
sub
sub
pop
in
jo
ds
push
adc
sbb
scas
and
and
daa
inc
inc
or
in
inc
cld
dec
hlt
shrb
arpl
jne
xchg
push
icebp
adc
jg
dec
mov
lea
and
push
adc
inc
sbb
jmp
stc
mov
sarb
inc
je
lret
mov
push
add
imul
pop
pop
mov
dec
push
xorl
bound
add
push
mov
dec
ret
xchg
push
fdiv
scas
outsb
add
xchg
data16
inc
out
mov
inc
xchg
add
xor
jmp
jecxz
ret
sub
cmp
outsb
daa
fsubrs
push
mov
pop
push
and
jg
push
mov
cmp
shll
fcompl
add
xchg
out
mov
daa
xor
ficomps
xor
stc
mov
add
in
ss
cmp
outsl
jnp
pusha
call
inc
xor
xchg
clc
mov
mov
mov
in
pop
push
rcl
repnz
jmp
sbb
xchg
cmp
add
add
push
out
inc
xor
frstor
shr
aad
push
scas
popa
call
mov
cmpsb
sub
adc
and
sub
push
mov
cs
mov
mov
mov
pop
xchg
fcmovb
int3
incl
orb
addl
mov
jl
cmpsb
pop
push
inc
mov
jns
xchg
adc
fisubrs
dec
ljmp
mov
dec
xor
popa
dec
or
jg
fwait
call
test
lock
push
dec
fldt
daa
in
mov
xchg
stc
rol
cwtl
lods
cmp
jle
fsubrl
add
adc
adc
jb
and
rorl
and
cmpsb
xchg
test
shll
daa
test
jg
shlb
push
sbb
js
mov
xor
or
mov
inc
ja
adc
call
mov
adc
mov
adc
and
in
adc
sub
repz
adc
incl
push
ja
std
frstor
stc
add
xor
lahf
fisttpl
lock
sbb
mov
stos
pusha
pop
mov
fcomip
ss
adc
xchg
fldl2e
data16
insb
xchg
ds
shrl
imul
pop
push
push
testb
jmp
adc
mov
rclb
or
fildll
dec
sbb
xchg
neg
call
pop
mov
inc
or
mov
xlat
and
cwtl
jns
ja
mov
out
xorb
popa
call
scas
int
adc
repnz
in
xchg
pop
push
dec
dec
mov
lods
add
andl
mov
pop
es
insl
idiv
incl
and
aam
movntq
fmulp
in
bound
xorl
fstpt
out
and
insb
ljmp
ds
xchg
mov
nop
sub
ficompl
aas
inc
jecxz
sub
inc
aas
inc
jge
in
hlt
or
mov
mov
stc
and
ljmp
scas
lock
add
out
mov
or
lcall
xchg
mov
das
cmp
pop
js
add
cmp
sbb
mov
call
rcrl
xlat
xchg
pop
or
pop
std
negb
mov
psllw
push
es
out
clc
cld
jp
addr16
push
mov
shll
mov
das
pop
cmpsl
test
aas
adc
mov
stos
or
fs
sub
fidivl
push
loop
push
lock
js
xor
loope
mov
ret
lods
cmp
imul
push
repz
dec
lcall
sub
das
insb
lcall
ja
call
pop
ja
cltd
push
mov
push
push
push
mov
lea
xchg
fmull
cmc
pop
jno
mov
push
pop
insl
jmp
push
jne
hlt
outsl
push
dec
dec
test
cmp
clc
mov
shrl
mov
stos
sub
pop
or
pushl
mov
fildll
nop
or
ljmp
aas
jl
add
cli
imul
insb
push
ret
xchg
lsl
adc
jg
add
call
lds
ret
cmp
lahf
decl
lods
push
mov
dec
dec
insl
push
mov
mov
mov
out
push
mov
jne
dec
or
gs
call
inc
imul
xchg
mov
call
test
xchg
xor
jl
sbb
adc
push
and
mov
jg
lods
inc
mov
lods
scas
xor
mov
fistl
out
aad
xor
dec
xchg
pop
inc
or
pushl
lcall
pusha
subl
mov
inc
sbb
insl
or
push
inc
js
sbb
mov
test
cmc
fisttps
mov
cmp
ffree
mov
dec
adc
sarb
lcall
xchg
or
push
pop
cmc
lock
adcb
mov
clc
jmp
sub
xor
addr16
push
or
std
incl
cs
xchg
pop
stos
and
lds
push
sahf
jg
call
jmp
ret
pop
cmp
icebp
mov
fidivrs
leave
mov
sbbl
pop
cmp
xchg
popa
sub
ret
sub
call
push
xchg
pushf
call
daa
aaa
decl
sbb
rcrb
and
fistpll
stos
mov
sahf
cmp
pop
xchg
clc
clc
pop
cli
add
cmpsb
popf
js
icebp
lcall
adc
sub
and
sbb
mov
and
cltd
jo
dec
lret
xor
cmp
xchg
xor
stos
inc
jo
push
mov
fbld
pop
test
loope
pushl
jo
xchg
xchg
filds
mov
ds
popa
push
xor
out
xor
jbe
lods
sarl
imul
in
rep
decl
cli
popa
jbe
scas
xor
mov
decl
or
addr16
jl
sbb
js
jo
adc
jbe
es
lcall
sbb
arpl
sub
mov
hlt
dec
xchg
fwait
test
lret
or
fwait
and
out
clc
decl
aad
nop
push
mov
sub
and
call
and
ret
nop
ja
std
jmp
or
test
xor
pushl
fdivl
addr16
aam
cmp
jmp
and
or
decl
dec
nop
dec
mov
ljmp
aas
repnz
inc
nop
sub
fdivrp
mov
pop
mov
push
movsb
daa
cmpsb
iret
push
out
add
decl
adc
mov
in
sbb
jp
loop
mov
mov
ret
mov
daa
sub
xor
cmpl
shll
cs
flds
push
cs
aas
decl
push
or
hlt
stc
or
icebp
in
jle
inc
dec
mov
adc
scas
jno
sarl
data16
lods
or
or
xlat
dec
pop
and
ljmp
push
add
fucompp
sub
pop
adc
fcompl
dec
xchg
lcall
je
outsb
iret
adcl
sti
addr16
or
data16
jns
mov
mov
out
clc
lcall
imul
cmpsl
pop
mov
nop
xor
fldenv
jmp
add
or
push
pop
mov
out
rorl
push
repz
mov
cmp
add
jbe
ss
stc
aaa
dec
xor
les
sbb
mov
fbstp
jg
sub
xchg
xchg
push
mov
or
sub
cli
xor
daa
ss
ss
and
ficoml
jecxz
sub
pop
sub
jne
sbb
jg
hlt
inc
rcrl
fcomi
xchg
fadd
lahf
jne
ljmp
xor
icebp
cmp
ja
lcall
lret
inc
int3
push
inc
xlat
sbb
xchg
xlat
mov
push
ficompl
pop
adc
test
fneni(8087
jle
xchg
mov
pop
ret
lcall
cmp
sub
add
hlt
test
loope
mov
cmc
dec
fsubl
loop
pushl
shl
leave
lea
and
lcall
fs
and
test
lcall
unpckhps
divb
add
gs
into
jno
inc
or
ljmp
pop
stos
popa
jo
jno
push
filds
call
sub
fildl
lsl
call
dec
rcrl
sub
mov
scas
insl
add
and
inc
adc
cld
mov
sub
pop
outsb
call
shlb
idivl
xchg
call
inc
test
aam
fmuls
inc
mov
jle
pushf
sbb
ljmp
addr16
jge
pop
mov
das
aaa
mov
adc
incl
mov
fistps
sub
sbb
pop
inc
pop
xchg
insl
sub
icebp
faddp
push
into
cmp
shrl
decl
pop
xor
jbe
push
rcrb
mov
out
dec
rorb
mov
push
jae
hlt
std
pushl
or
dec
dec
ds
or
nop
push
shl
sbb
jp
mov
add
pop
dec
dec
daa
pop
pcmpgtd
add
mov
insb
push
out
scas
mov
cmp
movsb
incl
mov
sub
cmpl
call
insl
add
mov
jp
mov
pushl
lret
ds
addl
ret
std
mov
popa
dec
or
fcmovnbe
incb
adc
sbb
stc
mov
aad
insb
inc
nop
or
add
mov
mov
pop
dec
xor
xchg
test
pushl
lods
enter
inc
push
push
icebp
mov
mov
xorb
dec
cmp
mov
mov
or
in
dec
scas
hlt
adc
jge
mov
push
dec
clc
ja
cmp
jbe
jno
xlat
sbb
fstps
push
and
add
dec
sahf
mov
mov
push
push
push
xlat
xor
sbbb
cmp
sbb
scas
filds
es
sbb
mov
pop
loopne
xorl
inc
inc
mov
inc
rolb
sbb
lea
pushf
lahf
cmp
ljmp
pop
mov
jo
hlt
rolb
adc
in
mov
int3
insl
divb
call
and
or
add
inc
cli
mov
loop
stos
loop
mov
inc
lahf
pop
lods
jg
or
push
rclb
mov
repnz
aad
pop
cltd
mov
adc
adc
push
cltd
imul
xchg
cli
xchg
xor
add
jo
stos
mov
aaa
mov
push
sbb
xor
in
sub
cmc
ficompl
xchg
lret
and
cs
jmp
test
sarb
push
mov
sub
mov
sub
loopne
jae
mov
and
jo
pop
or
decl
insl
mov
call
mov
loope
jnp
adc
mov
cld
call
ja
jbe
fs
popa
xchg
mov
aaa
mov
cmpb
sub
jnp
ljmp
xorl
jnp
jge
test
push
mov
dec
popa
adc
fdivrp
ss
lea
out
push
out
jmp
ds
ljmp
imul
push
sbb
loope
in
ja
pushf
cmovbe
ljmp
mov
stc
adc
sbb
out
aad
xlat
inc
cmp
jecxz
sbb
add
adc
lcall
lret
fisubrl
or
sub
add
movsl
adc
pushl
lock
sub
loop
or
inc
cmp
rcll
push
stc
adc
popa
sbb
inc
inc
pop
out
add
inc
xchg
ret
adcb
mov
out
decl
add
insb
xor
or
dec
push
lret
cmp
test
addr16
out
clc
in
push
xchg
data16
jnp
xor
sub
ret
and
cli
test
ljmp
icebp
sub
or
push
pop
sbb
mov
outsl
aam
jo
lock
inc
int3
cmpsl
push
mov
mov
imul
sub
fdivr
decl
movsl
popf
mov
xor
stos
inc
das
in
in
push
in
mov
sub
daa
pushf
ljmp
ljmp
sbb
mov
insb
sub
out
sbb
mov
dec
or
sbb
movsl
int
cli
jmp
sub
ret
adc
pop
mov
sub
adc
and
aad
add
ljmp
sbb
nop
scas
add
or
ret
push
add
hlt
scas
mov
pop
cmp
or
or
mov
pop
loopne
lret
test
int
pushl
or
jge
sbb
clc
push
jecxz
inc
jle
inc
push
xchg
pop
pop
pop
incl
lea
test
mov
jmp
fcos
mov
cmp
mov
jp
cmp
add
push
push
int
sub
arpl
out
xor
fcos
mov
dec
xchg
mov
xlat
xchg
mov
jle
and
into
popf
pop
mov
fwait
inc
ret
dec
repnz
lock
jno
pushl
lret
popa
mov
shlb
enter
dec
push
enter
sbb
and
jmp
xchg
push
push
fsubrl
mov
mov
cmp
xchg
xor
int3
fcoms
in
and
aam
cmp
xor
jg
mov
subb
aaa
add
jp
sub
inc
mov
lock
out
aam
inc
or
sub
jmp
fildl
movsb
pop
inc
daa
cs
add
mov
dec
pop
pop
xlat
lahf
xchg
mov
das
push
inc
pop
in
dec
movsb
out
and
mov
jo
sbb
fiadds
ds
fadd
jle
mov
mov
jle
jbe
xchg
arpl
jmp
lock
jg
xchg
scas
add
or
cmp
or
ljmp
sbb
push
or
ja
cmpsl
xchg
push
icebp
cmp
cmp
mov
hlt
mov
pop
enter
push
fnstcw
cli
jg
lcall
cmp
loop
xor
iret
aad
pushl
jl
sahf
dec
jb
push
jb
sbb
jg
and
test
sub
mov
movsl
icebp
out
hlt
mov
neg
lock
lret
xchg
lahf
lret
push
pop
roll
mov
in
dec
sbbl
push
xor
add
daa
xchg
jg
or
jnp
ss
cmpsb
aas
and
cmc
leave
inc
rclb
or
xchg
rorl
sub
sarb
mov
push
jp
xchg
push
adc
lcall
adc
movsl
mov
or
stos
in
xchg
and
insl
pop
inc
into
lods
pop
sar
inc
inc
mov
sbb
loopne
scas
repnz
lock
mov
fcmove
xor
arpl
andb
decl
cmpsl
push
loop
sarl
mov
adc
dec
jle
mov
adc
fildll
fwait
sti
into
inc
cmp
loopne
dec
cmp
cmp
stos
push
mov
dec
cmpsb
sbb
mov
push
rclb
sarl
add
ljmp
xchg
xchg
stos
shl
fcoms
and
scas
lea
sti
push
dec
xchg
dec
dec
pop
sbb
call
pushw
pushf
into
sub
incb
add
ret
adc
jnp
fnstcw
mov
clc
mov
in
pop
push
cmp
addr16
xchg
mov
mull
or
mov
orb
les
sarl
enter
test
punpckhdq
outsb
xchg
mov
dec
incl
cmpsb
xchg
mov
push
dec
sbb
cmpsb
outsl
insl
cltd
adc
call
adc
fildl
pop
sti
mov
iret
fstps
xchg
popa
sbb
dec
mov
cmp
rorb
add
ret
xchg
add
outsl
inc
xor
inc
incl
sbb
jb
pop
adc
inc
or
xchg
movsb
fdivp
cmp
rclb
xor
call
imulb
fwait
and
xor
filds
icebp
jmp
inc
mov
sbb
test
mov
jg
pop
scas
and
jo
xor
shll
cmp
xchg
push
dec
pop
jnp
push
xor
incl
das
and
je
lods
xor
adc
adc
add
push
in
mov
jns
lea
xrelease
pushl
fwait
stos
or
fdiv
loope
xor
lret
imul
ss
dec
push
inc
stc
and
push
in
mov
jp,pn
xlat
mov
pop
inc
pop
xchg
aam
lock
xor
jp
push
fwait
clc
outsb
arpl
lret
arpl
aaa
popa
insb
lock
filds
outsb
pop
das
sub
imul
mov
add
ljmp
cli
scas
adc
ss
mov
bound
adc
fiadds
mov
mov
and
mov
pop
stos
mov
lds
xchg
sbb
loopne
ljmp
mov
jb
stos
cwtl
cmp
leave
idivl
push
jmp
out
test
or
or
inc
dec
in
ret
jmp
xor
das
dec
add
aad
lret
xor
lcall
xor
push
andl
outsb
push
mov
and
nop
ud0
inc
pop
div
add
add
cld
cltd
popl
js
xor
mov
les
arpl
jb
lahf
push
aaa
cli
cs
or
mov
sbb
cwtl
nop
lods
test
mov
or
xchg
insl
test
outsl
out
mov
pop
cmc
movsb
mov
or
xchg
incb
pushf
dec
push
stc
ret
pusha
inc
push
insb
jmp
ljmp
or
ficoms
mov
mov
mov
das
push
incl
test
fdivr
xchg
loopne
jmp
dec
xor
shrl
pushf
lret
sub
addl
xchg
das
and
scas
xor
lods
and
psrlq
popl
scas
cmp
or
adc
or
daa
inc
jg
inc
cld
adc
imul
push
lods
adc
jg
pushl
fs
popf
fistl
dec
sbb
stc
xor
mull
aas
add
pushl
stc
jmp
test
lret
sub
and
push
rol
enter
push
mov
call
cs
das
mov
mov
fbld
mov
jb
repz
jle
sbb
ret
sbb
aam
les
int
sarl
xor
sar
sbb
xchg
jp
adc
mov
call
cmp
push
inc
addr16
ljmp
xchg
stos
dec
adc
sub
mov
ret
ljmp
mov
fwait
decb
bound
daa
aaa
mov
push
inc
push
inc
inc
andb
dec
dec
call
jne
cmpl
sbb
out
pop
jae
push
jns
ret
popa
add
add
nop
sub
data16
jmp
lcall
lea
xchg
test
loopne
sbb
insb
es
jmp
incl
jo
scas
ret
insb
testb
popf
mov
adc
mov
sahf
and
decl
cs
int
jno
or
in
sbb
ja
pop
add
mov
inc
lea
lds
mov
jge
xchg
jmp
mov
ret
cmc
adc
pop
lcall
sub
enter
cmc
stos
imul
jmp
rcll
inc
int
jno
pushf
push
sub
pusha
movsb
add
into
sub
outsb
xor
pop
pop
and
xchg
movsl
ucomiss
jns
push
cmpsl
push
xchg
ds
mov
pop
negb
movsl
jae
mov
mov
lods
dec
fcmove
jno
scas
push
add
popa
jecxz
leave
push
pop
jne
pop
inc
xchg
jns
js
mov
cmp
lock
add
mov
jae
outsl
xchg
test
lcall
mov
shr
shlb
dec
pop
in
xchg
cmp
mov
xchg
mov
lods
jmp
inc
icebp
clc
loope
mov
ljmp
mov
push
cmpsb
fsubrs
mov
jmp
fdivrp
stos
call
and
jmp
test
mov
mov
ljmp
sbb
add
lret
lds
std
sahf
aas
dec
bound
popa
loop
ror
imul
mov
lods
mov
lret
xor
add
imul
xor
lods
mov
lods
cld
sub
cmp
inc
int
jmp
pop
jg
cmp
inc
push
cmp
xchg
fisubrs
mov
lock
popf
mov
sti
jbe
inc
pop
scas
cmpsb
mov
add
incl
mull
push
adc
push
sti
xchg
push
decl
push
mov
lret
sub
push
ret
push
inc
sar
sbb
hlt
lock
jmp
cmp
insb
mov
pop
loopne
inc
clc
and
mov
jp
lods
sub
mov
inc
cmp
lods
mov
mov
repz
jg
lods
fbstp
jno
add
adc
pushl
sahf
movb
mov
out
jb
daa
cmp
loopne
arpl
pusha
scas
loope
incl
out
add
push
lods
fs
fwait
dec
decb
add
rcr
outsb
stos
push
jb
lret
mov
ljmp
ficoml
xor
hlt
jae
movsb
out
cmc
lret
cwtl
mov
or
std
adcb
enter
lcall
sub
mov
sub
repnz
mov
aad
mov
scas
into
daa
push
mov
xlat
inc
andb
out
movl
mov
ret
out
xchg
adc
lcall
pop
xchg
js
cmp
and
lret
repz
js
jno
bound
in
out
xchg
push
dec
sahf
mov
das
push
mov
inc
xchg
pop
test
pop
xor
jmp
push
cmpsl
inc
mov
jae
pop
pop
roll
rcll
lcall
jg
jmp
idivb
inc
mov
and
loopne
call
in
jo
sbb
cmp
mov
or
rcrl
stos
or
fidivrl
shll
jnp
mov
push
xchg
cmp
mov
cmpsl
mov
nop
lcall
test
test
lock
insb
and
test
jmp
std
pop
mov
adc
add
cmpsb
inc
js
xor
fsubl
les
add
pop
or
test
scas
lock
xor
daa
sub
jmp
xchg
stc
lcall
out
sub
cmp
fs
pop
call
mov
fildll
cmp
mov
adc
mov
mov
mov
dec
frstor
daa
hlt
mov
lods
push
mov
hlt
xor
das
mov
xchg
push
push
mov
xchg
imul
fmuls
loop
fbld
stos
adc
fisubrl
mov
xchg
mov
out
shlb
adc
repnz
ret
pushl
xchg
mov
int3
int
jle
dec
nop
je
inc
sbb
jg
decl
repz
bnd
inc
push
pop
mov
subb
and
mov
push
mov
sbb
in
dec
push
sarl
lock
inc
add
inc
or
test
inc
movsb
adc
jmp
int
sbb
popl
and
addl
jmp
push
mov
cmp
into
xchg
addr16
movsl
push
xor
push
mov
das
es
lcall
cwtl
cli
or
push
clc
in
insb
xlat
call
in
pop
add
js
xlat
push
mov
inc
mov
jg
jg
mov
add
inc
sbb
push
stos
push
add
fadd
mov
popa
std
sbb
pop
adcb
incb
call
sbb
nopl
ds
xchg
xchg
es
lret
repz
xchg
sahf
jae
mov
aad
loope
js
movsl
addr16
je
xchg
or
cmpb
popf
cmp
pop
pop
dec
mov
jbe
int
aas
outsb
fsubrp
ljmp
lods
pop
or
mov
iret
mov
daa
inc
dec
dec
mov
repnz
mov
sub
and
and
adc
out
insl
data16
out
pop
inc
sub
pushl
rcl
push
imul
jns
pop
dec
jg
mov
call
inc
inc
dec
inc
lock
push
sbbb
mov
mov
lret
idiv
lcall
fisttps
addr16
mov
test
dec
lods
inc
adc
mov
mov
out
pop
dec
loopne
add
loop
mov
decl
sbb
int
and
jmp
pop
not
pop
ss
jg
lcall
rclb
sub
frstor
lcall
or
aas
in
adc
outsl
out
shlb
xor
xor
cmpl
and
addr16
shll
movsb
decb
mov
jae
inc
sbbl
repz
in
dec
adcb
mov
inc
data16
mov
pop
fstl
test
mov
xchg
sbb
flds
mov
add
mov
push
lcall
lds
fwait
imul
dec
xchg
push
call
aad
sarb
and
ret
mov
ds
pop
daa
and
andl
fsubrp
xor
sbb
les
loop
fisttpl
clc
pop
fwait
lret
hlt
incb
jg
mov
fisubrs
imulb
jg
test
pop
dec
loope
jns
rolb
add
aaa
mov
mov
nop
scas
mov
decb
xor
mov
repz
push
cmc
js
and
loope
jmp
sub
push
adcl
dec
or
cmp
lea
jge
imul
call
pop
sub
idiv
sbb
jbe
call
dec
inc
test
push
lods
stos
cwtl
les
sahf
ss
test
ljmp
unpcklps
stos
add
stc
jg
push
jns
cmp
in
test
push
mov
lahf
stos
je
decl
pushl
adc
mov
sbb
mov
enter
fsts
mov
pushl
cltd
imul
push
lock
imul
pop
call
xor
xor
xchg
les
decl
mov
mov
mov
cmp
jno
push
ret
aad
mov
adc
sar
sarb
mov
and
jno
or
ljmp
pop
lods
and
std
repnz
xor
icebp
and
lret
sub
lods
mov
cmp
jns
xchg
xor
fcomi
push
orps
lret
ret
xor
dec
out
adcb
call
cwtl
hlt
scas
lret
inc
push
cmp
pusha
lock
xchg
jp
push
pop
mov
nop
xchg
adc
out
mov
ds
xor
inc
fmul
lahf
cs
lcall
in
dec
scas
mov
cmp
or
sub
xor
pop
lea
and
mov
push
mov
call
cs
push
pop
inc
xchg
dec
jecxz
idivb
adc
push
ljmp
or
std
decl
add
mov
cmp
ret
sbb
mov
call
sbb
sbb
rolb
dec
xor
inc
cld
push
adc
lea
xchg
outsl
gs
pushl
dec
ja
lods
fldcw
inc
dec
mov
adc
sub
shrb
sub
call
stos
lea
das
shrl
cmp
jne
fstl
mov
incl
xlat
mov
push
xchg
cmp
ret
or
and
mov
inc
mov
cli
movsb
outsl
vmovd
inc
jbe
lret
ja
cmpsl
sub
lcall
outsl
adc
jg
movsl
hlt
ret
int
repnz
add
mov
es
loope
sub
ljmp
dec
les
ljmp
sub
lea
into
fnstsw
push
cld
imul
adc
mov
lock
push
std
das
sbbb
dec
inc
cli
call
stos
or
push
rolb
pushl
rol
mov
adc
outsl
popa
inc
jbe
pop
and
sbb
sarb
jp
pushf
add
in
popl
bound
push
push
fsts
or
or
dec
jbe
pop
jo
push
sbb
shlb
push
jmp
pop
rol
lret
jne
cwtl
mov
mov
xchg
sahf
xchg
jg
jg
arpl
lcall
mov
lret
mov
pop
mov
test
mov
mov
jg
mov
sbb
or
mov
iret
mov
daa
jo
xor
mov
inc
pop
dec
push
adc
mov
das
dec
loopne
je
mov
subb
lods
fs
xor
je
mov
sbb
inc
push
ficoml
repz
jp
jg
xchg
xorl
scas
pop
push
add
in
leave
jns
fwait
or
jmp
jecxz
cmp
push
mov
insb
adc
loopne
jb
or
fistpll
pop
loope
into
dec
push
push
pop
mov
movsb
jle
fistpll
mov
inc
dec
cld
jmp
sbb
push
inc
pushf
jo
incb
xchg
scas
or
xor
std
push
pop
lods
lret
fisubl
mov
cmc
loopne
decl
xor
pop
mov
xor
dec
and
in
es
sub
and
pop
popf
pushf
js
arpl
inc
jb
dec
push
push
xchg
fsub
sti
lods
aaa
movsb
push
hlt
mov
stos
cmovg
mov
std
dec
cld
lods
sbbl
decl
stc
addr16
sub
xor
fdivrl
push
xchg
cwtl
bound
jmp
mov
dec
fnstenv
cmp
lds
fsubr
lods
dec
cld
mov
mov
clc
push
jmp
push
push
and
call
inc
lods
imul
fidivrl
js
sub
jge
add
sub
sub
sar
jp
jecxz
dec
mov
roll
mov
fcmove
dec
dec
test
sar
jne
daa
push
jmp
pop
pop
aam
ljmp
push
xchg
jne
inc
stos
pusha
stos
xchg
pop
incl
stos
push
arpl
xchg
icebp
stos
cld
cmp
fisubl
or
ljmp
mov
xchg
cld
sub
push
ret
incl
pop
fbld
pushf
jl
sub
xchg
stos
mov
fists
push
mov
fldt
mov
lds
lret
int3
pushl
out
and
inc
fists
sub
or
dec
cvtps2pd
lret
cltd
push
dec
repnz
mov
insb
pop
jmp
loope
cmpsl
pop
aam
jbe
out
sub
scas
int
inc
sar
incl
repnz
ds
ja
movsb
add
test
ffree
aas
mov
cmp
lods
xor
nop
mov
clc
data16
montmul
cmpsb
orl
add
sti
out
mov
push
stos
inc
jb
insl
add
jg
in
aas
mull
sbb
sti
jae
jae
daa
stos
in
aas
arpl
mov
sub
iret
pop
sbbb
sub
mov
call
repnz
lds
mov
cmp
mov
lahf
addb
fistps
mov
subb
adc
push
and
lahf
mov
aaa
leave
push
pop
mov
fadd
arpl
incb
in
setge
pop
push
xor
fucomip
std
xchg
and
mov
pop
rorb
aas
xchg
xor
add
mov
mov
test
sti
scas
xor
push
xchg
push
iret
inc
or
in
mov
adc
test
fisttps
sti
mov
getsec
xchg
in
mov
into
xlat
mov
mov
sbb
pop
push
bswap
jg
fildl
push
hlt
outsl
mov
mov
out
cwtl
call
adc
out
cli
je
push
jnp
arpl
cmpsl
jnp
incl
call
ljmp
stc
les
test
call
mov
adc
stos
in
leave
pop
stos
cmpsb
mov
cmp
divl
out
push
jnp
xchg
ljmp
fisubrs
mov
cmp
add
dec
or
adc
adc
xchg
mov
dec
pop
xor
push
pusha
mov
add
inc
sub
movsl
or
jecxz
jmp
and
inc
sar
jno
add
mov
ret
fisubrs
lret
addr16
pop
pusha
sar
pop
dec
or
push
dec
add
aad
fistpll
push
xchg
add
popa
cld
ds
mov
pop
negb
and
jo
sbb
mov
decl
repnz
mov
lret
cltd
repnz
incl
xchg
cwtl
jmp
cmpsl
sub
cli
mov
pop
xchg
loope
loopne
inc
push
push
scas
std
mov
mov
push
popl
stos
mov
xor
add
movsl
dec
or
push
adc
push
sysret
cmp
dec
jbe
andl
test
insl
ss
fsubrs
jmp
ds
mov
fdiv
and
mov
cmpsb
call
mov
mov
stc
inc
push
cmp
popa
scas
out
mov
incl
out
xchg
enter
sub
hlt
mov
or
lcall
scas
jecxz
jle
lahf
sti
arpl
adc
sar
fiaddl
test
sub
mov
pop
dec
mov
adcl
mov
jns
fmuls
lcall
push
incl
testb
push
in
aam
lock
loopne
cs
mov
sbb
mov
sbb
loopne
ljmp
mov
push
pop
es
fld1
add
lahf
or
daa
dec
lods
test
and
inc
test
adcl
sbb
out
mov
and
or
cs
push
divl
enter
pop
mov
inc
test
loopne
mov
jno
inc
in
mov
jmp
and
ud0
incl
push
jns
fs
push
push
scas
jne
add
pop
repz
inc
push
mov
cmpsb
fs
push
push
rorl
mov
cmp
incl
mov
sarb
sub
incl
and
xchg
scas
je
mov
and
and
jo
adc
decl
aad
fcoms
inc
aas
mov
cmpsb
test
jg
fadds
pop
enter
xor
xchg
cmp
ljmp
or
mov
ss
xchg
xorb
leave
rorb
std
sbb
and
decl
adc
inc
add
out
mov
mov
mov
negb
ret
and
cmovo
cli
push
pop
push
lds
pop
ret
mov
sahf
adc
js
hlt
sahf
int
add
inc
out
jg
jg
sub
push
xlat
aad
adc
push
out
push
aas
fadds
jne
inc
mov
pop
decl
and
or
push
cld
stos
xor
jge
sub
shll
dec
inc
bt
adc
pop
push
and
dec
inc
xchg
pop
test
pop
je
loope
in
push
mov
or
pop
mov
xorl
ljmp
shlb
pop
fs
inc
pop
loopne
rcrl
pop
or
mov
sbb
jae
sarb
in
pop
inc
add
repnz
adc
negl
or
xchg
cld
incl
sbb
jmp
ds
or
and
je
decl
xchg
inc
cli
dec
das
sub
pop
or
dec
cmp
dec
lahf
incl
into
cvtpi2ps
aam
stos
daa
in
sarl
nop
cmp
xchg
sub
cmp
ss
pop
call
into
movntps
leave
jg
lcall
call
fbstp
cmpsl
loopne
pop
add
push
sbb
jp
mov
pop
fs
sbb
rcl
push
inc
divb
call
add
mov
popf
or
dec
fistps
add
dec
call
pushl
xchg
mov
dec
sti
les
jmp
sub
jl
jl
push
pop
pop
or
jne
enter
idiv
pusha
jb
lahf
out
mov
sbb
mov
pop
inc
lds
incb
jg
inc
pop
iret
xor
sarb
push
out
xchg
icebp
jno
mov
repnz
and
cltd
ja
ljmp
xchg
jns
clc
and
mov
xchg
cwtl
je
mov
pop
es
lock
sub
pop
pslld
lcall
fs
jp
sub
jnp
call
inc
sub
test
cmp
adc
in
lret
pop
pop
mov
inc
aaa
sub
clc
addr16
enter
jmp
jg
test
mov
mov
sbb
cli
pop
addb
fidivs
call
mov
pushf
lcall
andb
jmp
subl
xor
call
add
pop
idiv
repnz
xchg
xchg
lods
call
sbb
lods
jle
add
xchg
mov
inc
rorl
pminub
filds
insl
addl
rcrl
adc
xchg
xchg
mov
fisubl
add
adcl
cmp
jae
rclb
lahf
mov
and
mov
xchg
pop
int3
jp
sub
push
cld
aas
add
fmuls
jecxz
pminsw
incb
adc
cmp
xchg
sub
mov
inc
out
repnz
push
jp
pop
inc
add
cs
fistps
and
jbe
xchg
xor
sbb
icebp
test
pop
pop
sarb
xor
scas
ror
add
hlt
in
aad
pop
hlt
mov
ljmp
out
xchg
xchg
push
mov
divl
sbb
nop
mov
lock
sub
or
ds
mov
comiss
out
cmp
dec
popa
into
ret
mov
out
aas
mov
maskmovq
mull
fisubs
stos
and
bound
aad
fisttpll
inc
shrb
adc
arpl
fcompl
fiaddl
testl
jge
and
mov
pop
loope
sbbl
jb
setno
adc
sti
decl
bound
repz
test
ja
sbb
and
stos
arpl
scas
add
pop
inc
cmpl
fmuls
mov
mov
mov
movsb
maxps
lods
lahf
dec
pushl
or
xchg
scas
sub
stos
or
decl
cld
mov
cwtl
xlat
mov
addb
dec
push
lea
imul
pop
jecxz
pop
loope,pn
push
push
pop
push
cs
pop
pop
pop
outsl
pop
hlt
int
and
fdivr
pushl
movsl
dec
fcmovnb
pop
xor
movsl
and
insl
stc
mov
pop
push
les
inc
test
decl
loope
push
xlat
or
int3
repz
into
data16
lcall
icebp
adcl
enter
arpl
or
popa
sete
add
jg
adc
in
dec
lods
fildll
loop
add
inc
xor
cmpsl
daa
ffree
out
mov
push
popa
out
sahf
sub
lcall
pop
ja
cltd
cmpsb
cld
cli
dec
ret
lret
or
int3
mov
shl
sub
cmp
popa
scas
mov
mov
inc
aas
xchg
pop
bound
mov
shl
pop
ret
or
dec
outsl
and
cld
cld
mov
xchg
sbb
mov
int3
jle
movsl
ljmp
push
insb
test
arpl
xor
cs
adc
ja
xor
pop
movsb
cwtl
xchg
idivb
incl
negb
adc
jnp
cmp
dec
inc
inc
aas
pop
insb
mov
sbb
pop
setnp
sub
lcall
mov
ret
mov
push
decl
cwtl
or
scas
fisubs
les
mov
nop
stos
xchg
sahf
xlat
cmovb
repnz
icebp
scas
scas
stos
mov
mov
call
pop
jbe
or
sbb
int3
jge
lcall
testb
or
xchg
mov
and
adcl
lahf
jno
and
in
fnstcw
mov
mov
cmp
loopne
gs
cmc
iret
fadd
sub
mov
aas
inc
jg
xor
dec
mov
mov
xlat
js
in
outsl
adc
rcll
setns
imul
inc
in
addl
lcall
das
xor
enter
xchg
movsl
int
out
sbb
jb
and
ret
push
insb
dec
aad
mov
pushf
ret
pusha
pop
fadd
push
pop
aas
psubq
sub
inc
jmp
fldcw
adc
decb
dec
mov
push
push
out
or
push
mov
jbe
ret
push
ja
push
jg
clc
jmp
mov
sub
vpmaxuw
sarl
int3
decl
sar
or
inc
cmpsb
data16
and
add
pcmpgtb
clc
psubq
mov
cli
btc
lret
in
and
call
test
mov
jg
pushf
and
jmp
cmpsl
sbb
daa
sbb
into
pusha
pop
mov
rcr
ljmp
mov
jmp
repz
test
outsl
cli
push
imul
lret
mov
mov
iret
mov
pop
push
loop
repnz
jg
dec
and
pxor
loopne
out
cld
scas
inc
and
push
inc
test
lcall
push
sbb
and
loope
adc
jge
jns
inc
int3
in
dec
and
in
mov
mov
xchg
sbb
jg
shlb
stc
daa
mov
psllw
cmc
jg
jne
cmp
loopne
inc
fsubl
daa
jae
movsl
cmc
in
fbstp
lods
addl
ljmp
outsb
xchg
mov
and
ja
sub
jle
shl
dec
cmp
pmulhuw
les
jbe
xor
or
lcall
or
jns
incl
pop
xchg
and
pop
fs
mov
push
mov
incl
call
xchg
into
mov
scas
pop
subb
xchg
inc
popa
add
arpl
inc
das
mov
push
dec
lret
jns
jl
jl
jo
jne
inc
jbe
imul
popf
inc
xor
mov
pop
pop
lcall
cmp
lock
and
jge
push
std
lahf
mov
xchg
cltd
testb
repz
cwtl
jns
xchg
sahf
ret
call
gs
jbe
in
cmp
pusha
iret
div
aas
neg
comiss
inc
sub
maxps
push
push
pushf
mov
mov
inc
pop
aaa
insb
jl
adc
ja
pop
gs
cmp
das
jg
or
mov
stos
les
adc
rolb
aas
add
add
test
push
sub
aas
in
add
adc
xchg
mov
push
jne
pushf
cmp
jle
aas
in
pushl
pop
icebp
or
mov
pxor
xchg
test
pop
out
mov
mov
pop
incb
das
sbb
pop
lcall
cmp
lcall
outsl
out
shlb
das
ud0
addb
movsb
clc
jl
lock
std
call
sbb
mov
cmpsb
pop
and
push
adc
out
das
dec
les
lock
adc
xor
imul
mov
mov
jmp
push
mov
mov
mov
unpckhps
dec
aad
mov
lret
pusha
sbb
push
ret
outsb
mov
xor
pushl
dec
repnz
je
mov
mov
jp
aas
punpckhbw
mov
lods
jns
adc
fcomps
ret
mov
jg
mov
sbb
lret
outsb
dec
fcoms
xchg
adc
xchg
mov
addl
jmp
mov
mov
in
out
xor
lea
lods
lret
mov
add
enter
mov
pop
or
in
add
ret
aad
std
adc
xor
aam
sbb
call
in
xchg
mov
inc
mov
rorb
incl
and
outsb
add
pop
or
xor
pop
pushl
sub
lahf
int3
testl
sbb
out
es
pop
push
vandps
subb
in
jo
push
lcall
fcmovbe
mov
dec
rolb
es
sub
push
imul
jp
gs
decl
sti
push
push
xor
mov
ror
in
cmp
ud2
sti
fsubrp
inc
sub
cmp
testb
decl
sub
or
and
xor
xchg
ret
adc
jg
out
out
dec
fistl
jo
add
movsl
or
lret
sbb
fsubrs
dec
fwait
or
cmpsb
ljmp
mov
aas
push
inc
pop
outsl
incl
outsl
lret
inc
mov
in
pushl
call
xor
mov
add
fidivl
dec
mov
jle
test
xlat
fisttps
push
imul
lret
mov
cmp
pop
pop
sbb
adc
add
stc
or
hlt
fldcw
push
ss
add
jmp
fbld
dec
inc
pcmpeqd
pop
das
aas
es
add
fisubl
clc
xor
lcall
lret
mov
out
cmp
repnz
rcrb
ud0
jg
mov
cld
pop
mov
int
pop
dec
lret
xchg
lfs
sub
loop
inc
call
nop
cs
xor
cmp
sbb
jp
lcall
and
inc
adc
imul
call
pop
rcr
inc
mov
out
push
roll
pop
sbb
cld
daa
shlb
hlt
inc
scas
adc
decl
inc
stos
fcoms
lret
das
mulb
bound
add
dec
lds
jnp
std
jl
pusha
mov
lock
push
xchg
jl
out
or
xchg
enter
fs
and
lock
aam
adc
jmp
and
jmp
add
adc
repz
loope
scas
mov
or
mov
lcall
jmp
loop
out
out
dec
cld
mov
scas
pop
fidivrs
push
jmp
mov
lods
addr16
es
cld
xlat
test
dec
cmpl
dec
pop
mov
cmpsb
sbb
dec
mov
push
mov
mov
jg
inc
pop
cmp
ret
and
jbe
movnti
ljmp
cmp
mov
lahf
inc
dec
aas
aas
out
mov
aam
xchg
jle
cmp
cs
sarl
xor
fdivr
jecxz
pusha
xor
xor
pop
hlt
mov
lcall
sbb
stos
jns
hlt
jne
cli
leave
es
stc
decl
neg
or
out
adc
dec
mov
prefetch
or
and
es
mov
idivl
clc
sahf
pop
stc
es
incb
add
out
sar
inc
push
adc
lahf
push
add
gs
add
lcall
mov
lret
or
fs
jnp
add
lret
adc
jmp
gs
push
fiadds
loope
cmp
lods
dec
lods
test
xchg
cmp
loope
cmpsl
inc
xor
lahf
shlb
mov
call
push
mov
inc
add
jmp
dec
xchg
xchg
jge
femms
call
add
sarb
out
cli
test
xor
sahf
xchg
stos
fisubl
movntps
push
sti
pop
xchg
ret
adc
loop
dec
mov
call
jmp
push
inc
pop
in
subb
iret
leave
sub
paddd
incl
mov
cmp
in
inc
lds
pop
imul
pop
int
jg
inc
push
lret
xchg
mov
mov
loope
leave
icebp
mov
decl
add
les
arpl
stos
lret
pop
negb
neg
mov
jb
sub
bound
enter
jg
xchg
insb
stos
cmp
test
xlat
lret
fwait
inc
push
orl
mov
punpckhbw
lret
test
idiv
pop
mov
jg
mov
insb
fcmove
lock
jb
outsl
push
movq
and
ret
ds
decl
enter
add
jbe
movsb
mov
test
scas
bswap
rorl
insl
and
xor
adc
decl
cmp
fistl
rorl
call
cmp
decl
push
in
fwait
xchg
sub
pop
int
cmp
mov
addb
leave
test
pop
bnd
or
insb
ficomps
decl
inc
push
jge
and
sbb
mov
mov
jnp
ret
add
cmp
in
mov
lea
sarb
lahf
add
sbb
jg
mov
xchg
inc
fwait
dec
cld
push
dec
adc
mov
ret
pop
mov
pusha
dec
outsl
stos
in
ss
xchg
pop
adc
icebp
std
test
push
out
or
cltd
out
inc
add
adc
jg
jge
sti
stos
sbb
push
sub
sbb
incb
je
lcall
mov
or
ficoml
std
cmpsl
mov
and
pop
push
or
xor
or
pop
lea
pop
add
lock
xor
out
push
jo
fwait
das
incl
call
pop
lahf
insl
sarl
adc
idiv
incl
xadd
popa
and
jae
inc
add
jo
jge
fdivr
call
dec
fs
daa
outsb
mov
ss
testb
cmp
out
push
sahf
roll
ret
aas
cli
and
cmpsb
add
lock
push
sub
ljmp
sbb
movsl
push
add
popa
cmp
or
inc
inc
bsf
les
sti
movsb
std
adc
int
push
push
xor
cld
incl
fildll
jp
dec
stos
sti
incl
aas
adc
je
pop
pop
push
aas
cmp
in
aas
push
cmp
sub
mov
out
cmp
jge
pop
std
xchg
xchg
mov
cmp
divl
aad
shll
in
lcall
inc
aas
pop
stos
aad
and
ja
test
mov
pmulhuw
aas
xchg
ja
lods
aas
fcmovnu
sahf
and
fs
in
xor
aam
jg
mov
ja
xorl
mov
incl
mov
lods
incl
adc
push
sbb
sbb
xchg
addl
int
cmp
faddl
mov
mov
dec
sub
fsubl
jno
add
cwtl
stc
adc
int3
cwtl
and
jmp
mov
sub
fwait
xor
pop
hlt
xchg
in
sbb
popa
call
xchg
add
mov
jns
mov
xor
pop
ss
out
subl
inc
cwtl
cmp
cltd
ud0
sti
xchg
test
mov
out
jl
jle
mov
mov
jmp
cs
scas
push
mov
sub
popa
inc
jg
mov
sahf
jp
data16
ljmp
or
sub
lret
notb
fadd
jmp
dec
adc
sbb
adc
insl
lds
lret
pop
jg
lock
adcb
jge
jnp
dec
cmc
xchg
jno
in
pop
fdivrs
jg
pop
dec
and
loop
es
add
popa
push
xchg
pop
and
sbb
jg
decl
test
je
insb
int
jge
es
jg
jg
fcomip
data16
aad
jnp
lcall
fiaddl
movsl
fdivrs
sub
inc
jno
outsl
cmpsl
jmp
fcoms
bound
mov
cwtl
icebp
les
mov
push
ficoml
icebp
jp
std
add
xor
sbb
adc
or
psubsw
dec
roll
aas
sbb
scas
and
dec
push
add
cmp
ds
lcall
mov
dec
push
incb
js
pop
sub
mov
xor
pop
lret
jmp
dec
nop
es
mov
or
cld
out
inc
aam
in
add
cmpsb
jecxz
repnz
incl
push
pushf
out
push
jmp
notb
icebp
lods
and
xchg
mov
aaa
push
pop
push
pop
stc
dec
dec
lret
sub
out
ljmp
xchg
pop
sbb
mov
lods
decl
test
nop
movb
adc
cld
xchg
xchg
adc
sbb
xor
and
jg
mov
jns
scas
stos
add
test
add
testb
or
push
xchg
jl
push
pop
pop
pop
call
lcall
inc
out
jge
sub
jns
fidivs
jp
insl
test
pop
and
pop
ficompl
mov
and
fdivrl
adc
shll
pushl
cmc
mov
aad
cmp
testb
pop
cmp
inc
mov
inc
movsb
jo
jb
stos
xchg
rcll
cmc
ret
sub
ljmp
adc
cmc
in
mov
inc
adc
push
fidivl
jns
iret
scas
xor
inc
incb
or
fcmovu
xor
incl
pop
cld
pop
xchg
cmp
mov
xor
in
or
add
cmp
push
decl
mov
push
xchg
add
lahf
mov
xchg
fs
cli
mov
shrl
stos
push
out
dec
dec
mov
shll
rcll
inc
inc
push
iret
pop
dec
pop
pop
cmp
xor
xchg
mov
and
dec
ret
mov
sbb
pextrw
mov
add
ljmp
incl
push
mov
add
gs
mov
fsubrp
jnp
ret
adc
fidivrs
jg
call
or
fadds
push
shrb
popa
jg
and
arpl
pop
xchg
call
cmpsl
gs
mov
mov
mov
and
lcall
rorl
repz
stos
aas
test
mov
decb
bound
aaa
mov
mov
ja
negl
pop
pop
push
fldt
fdivl
xchg
insl
aas
pop
dec
mov
adc
cmp
mov
out
pushf
fldcw
xor
nop
cld
sti
jle
in
aas
in
dec
test
jg
add
pop
mov
push
je
ss
aas
in
and
mov
lea
popa
xor
addl
pop
jp
call
dec
cmp
dec
pop
fs
adc
and
jg
cs
ljmp
sahf
leave
sbb
add
dec
int3
stos
mov
stc
ljmp
mov
out
sub
pushl
mov
push
test
das
leave
pop
mov
movsl
sbb
fwait
nop
mov
lcall
pop
push
andl
push
and
pop
aas
jg
dec
lea
sbb
enter
jns
test
outsb
stos
movsl
mov
fucomp
stc
push
sti
jecxz
xor
pushl
call
or
sbb
mov
and
test
lcallw
loopne
and
int
nop
rcr
les
mov
bound
movsl
pop
mov
jmp
popf
andl
decl
push
or
jmp
pop
xchg
dec
jno
cmpsb
das
aas
lcall
pop
mov
mov
push
sahf
xor
rorb
inc
ret
mov
test
cli
inc
adcb
decl
rorb
pushf
aad
push
dec
shl
mov
out
loope
and
inc
decl
xchg
jg
addb
insb
mov
data16
decl
fimuls
mov
scas
test
adc
and
add
push
jmp
cltd
std
stc
bound
mov
lret
adc
push
sub
push
cld
lahf
data16
cs
push
jnp
test
lcall
into
out
xchg
aad
das
xchg
mov
inc
sbb
cmpsb
iret
sbb
in
mov
pop
xchg
movsl
jmp
mov
sub
stc
test
sbb
add
int
es
mov
pop
std
sar
frstor
xchg
mov
or
push
cmpsl
add
subl
mov
mov
loopne
jg
test
cmovno
jg
push
addb
mov
decl
leave
das
xor
xorl
das
jmp
lods
lret
jge
cmc
push
inc
stos
sti
mov
nop
inc
or
in
pop
add
aas
jg
inc
lea
subb
pop
hlt
and
or
push
shll
and
mov
jl
jge
popa
jmp
pop
mov
push
xor
dec
pop
icebp
popa
mov
cld
jae
xchg
ss
cmp
std
jp
lcall
jl
pop
pop
sub
pop
push
das
xchg
aam
scas
pop
sub
mov
cld
jmp
mov
xor
push
cpuid
test
adc
jg
shl
pop
dec
inc
fsubrs
aad
cs
sub
add
jno
aas
call
and
or
pusha
mov
mov
cmovbe
inc
xor
fidivrs
sub
scas
mov
jmp
lar
decl
je
push
dec
xor
inc
sub
xorb
inc
inc
adc
inc
dec
jl
and
mov
out
outsl
push
pop
or
filds
roll
lcall
mov
push
mov
xor
sarb
add
mov
lahf
loopne
xlat
dec
xchg
pop
scas
push
or
adc
push
add
push
pop
dec
jg
jg
cmp
loope
shl
call
dec
push
and
lods
sbb
sub
ficompl
pandn
ret
fcomi
pop
shl
mov
cmp
push
add
lcall
fists
inc
aam
pop
ss
mov
push
sbb
inc
imul
add
dec
cmpb
mov
pop
bound
cmp
xchg
push
lock
andb
incl
pop
mov
mov
push
outsl
mov
aas
test
icebp
push
cmc
dec
dec
mov
sub
shrl
xlat
sbb
fdiv
add
adc
sub
lcall
add
jg
jbe
mov
adc
inc
mov
mov
fistpll
pusha
xor
and
std
xor
xor
sbb
aas
adc
xchg
les
cmc
jae
adc
mov
pop
or
sbb
fcmovne
flds
fbstp
inc
lea
inc
push
movsb
bound
pop
and
pusha
push
loopne
jl
push
push
shr
xchg
cmp
adc
sub
jg
inc
mov
mov
push
mov
outsb
adc
push
iret
jmp
ret
adc
das
jle
pop
fildll
mov
aam
add
cld
imul
std
aas
or
push
jp
dec
outsb
mov
incl
arpl
scas
cwtl
cmp
movsb
jl,pn
mov
popa
std
or
ljmp
ud0
cmp
adc
pop
data16
cwtl
outsl
rclb
sub
jp
fwait
lret
ud0
nop
inc
sbb
inc
mov
pop
inc
lahf
out
jg
push
sbb
aas
pop
mov
incl
pop
or
iret
cltd
adc
fs
xchg
cmp
incl
mov
add
mov
inc
lds
cld
scas
aas
ss
mov
pop
push
and
cmp
pop
or
adc
cltd
sahf
and
mov
mov
pop
andb
out
pop
or
bound
ret
in
jg
xor
stos
mulb
dec
sbb
test
lret
push
outsl
clc
unpckhps
packssdw
dec
movsl
xchg
push
xchg
pop
mov
paddq
lcall
fiaddl
mov
testl
pop
out
push
and
cld
fnstcw
pop
div
xchg
inc
loop
test
iret
cmp
lcall
and
xchg
push
neg
outsl
jp
mov
sub
jbe
ljmp
loop
inc
pop
add
ljmp
pop
mov
xchg
insl
adc
adc
sbb
notl
xchg
inc
push
dec
cltd
push
sub
cmp
cmpsb
pop
repz
pop
sub
call
adc
leave
xchg
sub
incl
lret
aas
push
jg
add
decl
sub
arpl
loopnew
push
popa
jo
mov
xchg
push
pop
or
pop
cmp
jle
das
mov
add
dec
hlt
adc
fisubl
aam
xor
loopne
add
loopne
pop
adc
mov
adc
or
lcall
jmp
adc
dec
movswl
fldenv
in
test
aas
adc
aas
adc
xor
mov
jg
inc
test
xchg
daa
mov
stc
jno
pop
mov
jg
loop
jecxz
or
dec
mov
or
mov
inc
aad
dec
ror
sahf
or
rcl
sbbb
and
mov
mov
sti
mov
and
inc
in
aas
hlt
loop
add
jg
and
mov
aas
jnp
cli
lgdtl
mov
pop
jg
add
loop
lds
cwtl
inc
in
fbld
mov
mov
adc
and
dec
psubw
decl
fcoms
in
mov
test
mov
or
adc
xchg
jle
mov
cltd
je
aas
pop
add
lcall
pusha
pusha
xor
incl
nop
stmxcsr
shlb
aad
inc
pop
arpl
add
pushl
pop
add
scas
push
adc
sahf
fisttps
scas
test
jmp
add
dec
jmp
jg
loop
pop
push
and
lea
adc
pushf
insb
enter
fisttpll
jmp
mov
aas
mov
add
clc
mov
aas
pop
inc
dec
cli
fdivrl
cmp
icebp
xor
mov
push
test
push
aas
sub
sti
scas
cmp
jns
aas
push
in
call
rolb
xor
mov
jo
lcall
in
jg
pop
xchg
and
hlt
adc
punpckhwd
leavew
mov
pop
movq
add
push
into
movswl
mov
cld
and
loop
cmp
mov
lock
ret
xchg
mov
aas
jl
in
sbb
push
fsubrl
add
jmp
in
aas
mov
xor
mov
add
paddw
fcoml
addb
fbld
mov
sub
push
pop
dec
jmp
test
jnp
mov
xor
mov
add
incl
mov
testl
pop
jge
clc
xor
aas
popa
mov
pop
push
mov
pop
decb
mov
fisttpll
shll
cld
incl
pcmpeqb
xchg
lret
adc
femms
mov
ret
add
fdivr
jne
dec
dec
arpl
sbb
ret
incl
packsswb
xor
divl
aaa
cltd
icebp
daa
cmpb
pusha
icebp
in
jns
cmpps
inc
cmp
lret
mov
sbb
mov
test
jg
and
jbe
ud0
pop
fisttps
pop
cli
aas
divb
or
leave
mov
xor
enter
fists
clc
or
add
push
rorb
mulb
or
mov
jg
nop
call
push
mov
iret
arpl
inc
leave
decl
test
stc
fwait
lock
insl
pusha
and
incl
cmp
dec
jecxz
inc
push
std
pop
pushf
aas
inc
xchg
cli
movzbl
cmp
scas
mov
decl
push
push
or
and
add
call
stc
and
adc
mov
ret
getsec
dec
call
or
mov
cs
sub
fwait
cmp
loopne
dec
scas
cmp
dec
call
sbb
pushf
mov
and
push
stc
xorps
sub
test
pop
and
scas
sub
test
int
push
sbb
xor
sub
inc
stos
test
push
imul
int
cmp
dec
cs
stc
paddsw
inc
sbb
scas
sub
or
leave
faddl
or
mov
enter
and
xchg
pop
xchg
scas
clc
out
jge
push
xchg
mov
xchg
jae
dec
sub
jg
mov
test
pop
decl
mov
insl
jo
js
std
out
inc
scas
pop
mov
inc
xor
inc
mov
mov
fiaddl
mov
push
lret
mov
aas
in
pushl
es
addr16
es
cmpsb
aas
rorl
insb
loop
stc
jle
jmp
pop
and
aaa
in
outsl
mov
push
mov
pop
and
loop
mov
mov
je
push
jg
idiv
or
inc
xchg
rcl
xlat
xchg
fidivrs
dec
mov
mov
xor
mov
sub
push
dec
loopne
out
loope
inc
mov
sub
lret
jl
jmp
fstpt
lds
mov
mov
sub
enter
fistpll
aas
add
pop
dec
cmpsl
dec
add
xchg
jl
loopne
clc
ss
cmovne
fs
jns
daa
out
ds
loop
xchg
bound
stos
jmp
testl
popa
sub
std
das
mov
xchg
sti
sub
or
mov
roll
ud0
cmp
xor
or
push
dec
lods
call
lcall
andl
and
and
int3
fsqrt
cmpsl
cmp
and
adc
out
out
je
cmpb
jg
andl
rclb
aam
mov
in
mov
dec
xchg
xchg
cmpsl
icebp
jnp
bound
jg
mov
lock
push
and
out
cpuid
clc
smsw
jp
pop
int3
fsubrp
sqrtps
pop
xchg
cmp
icebp
mov
pop
sub
sub
inc
sti
call
fistpll
jg
insb
fistl
int3
shlb
std
das
and
js
stc
into
int3
ds
lahf
mov
xchg
sbb
xor
mov
in
push
test
jp
lods
mov
add
add
mov
aaa
cmp
mov
call
xchg
jbe
pop
mov
jb
or
cmp
das
into
jb
addl
out
shll
pop
cltd
popf
mov
mov
aas
add
cmpl
or
pop
std
hlt
int3
xchg
xchg
stos
and
inc
or
or
inc
clc
out
inc
xchg
test
jg
cmpsb
mov
pop
xor
xchg
cli
fidivrs
das
lods
mov
repnz
push
loop
add
sbb
aam
adcl
xchg
push
sub
mov
arpl
decl
sbb
add
lahf
lcall
rorb
std
imul
enter
ret
jge
int
repz
repnz
push
push
scas
punpckhwd
sbb
aam
sti
or
pcmpeqw
rcrb
call
in
pushf
stc
sbb
lret
insl
std
loop
or
adc
or
or
dec
pushl
lcall
test
push
mov
dec
ds
xchg
sub
cwtl
mov
inc
and
pop
adc
mov
aas
adc
pop
and
out
mov
das
pop
jl
mov
push
lss
int3
data16
jmp
push
xor
cmp
inc
pop
int3
xlat
mov
cltd
xor
rorb
dec
cld
mov
jle
dec
sub
adc
imul
test
mov
add
out
jnp
push
mull
aas
mov
xchg
mov
jnp
pop
cs
jo
sub
sti
in
insl
jmp
lock
or
inc
je
insl
dec
int3
insl
mov
mov
dec
or
shrb
rorl
inc
sti
decl
add
out
push
sbb
jg
jmp
mov
cli
sar
lcall
mov
mov
xchg
xor
ltr
mov
das
adc
push
div
hlt
sub
dec
repnz
call
push
in
pop
mov
inc
sub
cmovns
pusha
jmp
xchg
jmp
xchg
sbb
pop
push
stc
movsb
xlat
cmp
jmp
push
jle
jns
scas
lock
decl
xorps
pop
add
cmp
push
enter
incb
mov
setne
incl
adcl
outsl
or
es
rorl
cmpsl
mov
push
mov
stc
decl
pushf
out
and
pop
mov
dec
push
mov
sbb
sub
mov
add
mov
mov
decl
mov
decl
adc
inc
sti
es
ljmp
jmp
loope
je
lock
mov
syscall
or
mov
lods
sbb
mov
iret
iret
push
sti
decl
mov
cmp
into
arpl
ud0
inc
rol
rorl
cmp
sbb
jmp
pop
out
daa
enter
cmp
jg
sub
push
ud0
incl
cmpsl
lahf
imul
unpcklps
cwtl
xchg
xchg
add
jmp
insl
add
data16
ret
and
call
and
xchg
sub
pop
out
sub
push
dec
jne
mov
or
data16
mov
test
into
lds
clc
in
and
mov
nop
pushl
out
mov
fisttpll
mov
push
add
popa
jmp
lcall
sub
call
dec
shrl
mov
out
aas
add
push
inc
pusha
add
jmp
out
inc
loop
push
cmpsb
pop
sbb
mov
call
fs
dec
sbb
lea
mov
ja
add
xchg
fiaddl
enter
enter
cmp
test
incl
mov
add
ljmp
mov
dec
lret
cmp
add
inc
int3
sahf
out
inc
xchg
clc
xor
push
jbe
mov
sub
xchg
aad
mov
insb
aas
and
and
jbe
call
repnz
lcall
arpl
out
pushl
push
je
icebp
rorl
jge
add
and
sarl
mov
fistps
ret
xchg
xchg
mov
outsl
mov
incl
sbbb
jl
and
add
mov
adc
ud0
jmp
fists
cmpsl
ja
shr
or
insb
adc
imul
call
and
fs
push
push
mov
dec
sbb
mov
pop
test
xor
std
jg
sarb
inc
xor
lock
arpl
cmp
incl
jne
inc
mov
je
popa
mov
sub
aaa
fcomps
repz
push
incl
sti
or
aam
inc
mov
sar
mov
out
push
push
cmovbe
push
or
incl
hlt
inc
inc
mov
jbe
inc
cmpsl
jle
sbb
push
ss
leave
movsb
jbe
push
nop
data16
push
cld
xchg
jnp
enter
jg
aad
sub
test
inc
rorl
incl
xchg
push
pop
psubq
pminsw
mov
icebp
adc
xchg
jne
push
addr16
sbb
clc
incl
add
lds
int3
std
das
push
sbb
movsl
outsl
pop
test
sbb
stos
fcompl
pop
dec
sbb
dec
mov
sub
ret
add
mov
ss
adc
push
aad
mov
cmovne
imul
adc
mov
add
incl
call
pop
pushl
bound
lahf
verr
fadds
ud0
fiaddl
iret
push
mov
mov
and
and
ljmp
fsubp
popa
loop
out
or
pop
mov
inc
add
adc
testl
inc
fistl
inc
pop
decl
push
push
cmp
iret
xchg
mov
daa
rorb
lahf
pop
iret
inc
incb
mov
lret
in
dec
sbbb
addl
outsl
test
enter
lahf
push
mov
js
gs
jg
xorb
loope
ret
jo
call
enter
daa
add
scas
push
add
mov
fcomps
push
mov
adc
mov
mov
jg
inc
mov
imul
or
push
inc
fists
mov
jg
or
mov
pop
fnstcw
shlb
pop
out
ficoml
popf
or
and
arpl
iret
inc
sub
pop
pop
cmovb
aas
sub
jge
pushf
push
and
pop
scas
jg
add
ret
decl
or
inc
test
mov
std
andb
mov
add
mov
mov
cld
xchg
stos
cmp
aas
adc
ljmp
dec
and
or
lcall
inc
mov
fwait
mov
scas
bswap
pop
les
cs
movsb
lds
cmp
je
and
and
into
mov
sarb
lcall
ret
fdivr
movsb
jl
mov
mov
jge
add
stc
push
test
jmp
in
inc
jp
pop
arpl
or
pop
mov
jo
xlat
mov
jae
push
ret
sti
ljmp
mov
xchg
inc
mov
les
add
loop
pop
popa
std
or
fsubr
sub
mov
movsb
add
decl
xchg
ret
or
cld
fidivrs
aaa
fsubl
ljmp
lcall
cmp
jmp
pop
xchg
mov
mov
lods
inc
sbb
bound
jl
jbe
xor
lods
pushl
mov
aaa
nop
fisubs
inc
jns
xchg
ljmp
in
pop
adc
inc
sub
mov
jp
jecxz
cmp
cld
sahf
cmpsl
add
xchg
pop
in
data16
into
pop
and
lcall
and
stos
subb
add
mov
rorb
push
bnd
bts
xchg
xor
in
mov
push
fstpl
pop
mov
sbb
push
inc
jle
and
inc
pop
repnz
add
pop
loope
xlat
or
xchg
add
xchg
sbb
das
cmp
and
mov
mov
dec
cmp
popf
adc
sbb
sarb
and
pushf
js
mov
frstor
mov
jae
stc
decl
subl
and
addr16
popa
sbb
scas
pop
and
arpl
jno
test
sbb
inc
ret
ja
sub
xor
push
outsb
and
and
aas
jg
cmp
and
in
dec
xchg
xchg
and
popf
and
xor
cmpsb
ljmp
sti
jmp
ja
rcrl
add
push
sub
push
mov
mov
cs
shl
icebp
stos
outsb
mov
push
sbb
shll
ret
xlat
lcall
clc
lock
cld
inc
cmp
or
pushf
cltd
roll
fwait
popa
add
cmc
mov
lock
sbb
xor
sahf
fwait
xchg
std
dec
les
xchg
pop
ds
lods
pop
aad
pop
fldl
hlt
push
es
rclb
int3
in
lcall
mov
stos
pop
jg
fmul
in
sbb
pushl
jmp
fcoms
xchg
jb
xor
fcom
adc
dec
shrl
jmp
inc
icebp
arpl
ss
and
call
inc
mov
or
imul
sahf
adcb
lahf
idivl
sub
scas
jg
scas
popa
jmp
pop
or
nop
xor
jmp
clc
jne
ret
das
cmpb
nop
and
mov
jg
xchg
cmp
pop
stos
loope
lods
sub
push
aaa
sbbl
inc
mov
pop
xchg
pop
mov
rcl
les
push
mov
pop
cmp
inc
pop
stc
cmpxchg
add
lds
icebp
icebp
idiv
aas
test
xchg
cwtl
dec
xchg
lcall
jb
std
inc
scas
rcrb
and
and
fldl
push
pop
bound
iret
mov
xorl
jne
out
ds
aas
test
adc
daa
into
xor
insl
sbb
dec
mov
test
adc
cmp
cmpsb
inc
dec
fwait
jnp
dec
jg
loope
test
popa
jne
cli
test
xchg
sbb
lret
pushf
cmp
out
inc
incb
add
gs
imul
mov
mov
or
inc
xchg
lcall
add
push
mov
jg
stc
jl
sub
or
mov
push
and
insl
xchg
cli
mov
xor
mov
decl
and
dec
rcr
jg
inc
sbb
inc
or
or
jno
push
and
cld
pop
stc
mov
push
add
mov
call
ja
jb
mov
lcall
sub
lcall
dec
lret
xchg
xor
or
inc
aaa
loopne
pop
xchg
mov
or
clc
decl
lcall
das
out
jnp
sbb
dec
inc
push
mov
jmp
jbe
and
iret
fs
inc
call
mov
add
jmp
xchg
lret
push
ud0
lcall
jle
daa
es
and
lcall
les
adc
andb
aas
inc
icebp
dec
pop
movsl
es
mov
insb
nop
fsubs
jmp
in
xor
add
mov
aam
test
loop
data16
dec
mov
addr16
xchg
mov
sarb
sbb
sub
mov
mov
push
lods
add
lea
jmp
andl
js
loopne
xchg
push
lahf
sarb
mov
xchg
decl
lock
outsl
outsl
insl
imul
out
jl
cli
ljmp
adc
pop
add
mov
xor
push
lea
adcl
decl
add
and
cli
popf
je
pop
scas
mov
lods
mov
pop
dec
dec
push
inc
jle
stos
pop
ja
pop
outsl
sbb
push
popf
rcll
xor
or
incl
xchg
and
icebp
inc
inc
repnz
sub
neg
sbb
fcos
inc
lahf
push
stos
fwait
and
test
jmp
les
aaa
xchg
and
xor
add
jno
fbld
lahf
out
mov
inc
or
test
mov
fucomip
incl
or
jp
repz
mov
pushl
adc
das
ds
adc
and
dec
decl
lock
push
fisttpl
push
dec
popa
movsb
rorl
adc
sbb
xor
outsl
mov
iret
bound
push
nop
jmp
shrb
xchg
pop
ja
mov
outsl
mov
push
hlt
adc
sbb
pop
pslld
pop
adc
in
enter
lods
bound
andl
stc
pop
pop
sub
idivl
aas
sarl
inc
mov
inc
in
mov
scas
addr16
mov
ds
ret
lods
jge
stos
sbb
pop
cmpb
inc
leave
mov
int3
jmp
inc
lock
repnz
jp
adc
sub
jg
mov
jbe
je
dec
adcl
int3
decb
and
and
scas
cmpsl
mov
cmpsl
sub
cld
incl
adcb
jge
xor
jp
ja
in
test
out
nop
rolb
aam
call
repnz
or
outsb
or
hlt
ret
stos
pop
jecxz
popf
push
ret
ljmp
in
movsb
data16
sbb
jl
mov
test
or
mov
or
insb
call
repz
decl
cmc
push
cmc
rorb
aas
pop
loop
dec
test
test
push
aad
mov
out
xor
add
stc
lahf
cld
xchg
loope
jle
and
movsl
push
loope
aaa
adc
push
xor
xor
jecxz
or
jg
std
push
ja
test
fnstcw
xchg
daa
pushf
mov
and
aas
cmp
test
pop
negl
orb
sti
shll
scas
imul
add
pextrw
enter
in
imul
out
incb
ljmp
jp
sbb
mov
out
shl
mov
inc
pop
iret
addr16
cmp
in
jg
stc
push
pop
in
xor
pop
sbbb
add
and
aas
enter
sbb
out
inc
push
jmp
mov
in
xchg
sbb
leave
out
jae
lret
incl
jmp
dec
stos
imul
pop
xchg
fstl
test
lcall
bound
inc
addr16
ljmp
lods
or
mov
scas
push
sub
jmp
jmp
and
jno
push
mov
jp
jo
cld
incl
imul
popa
aad
mov
in
aas
test
fnsave
lret
lret
dec
dec
sbb
pop
sub
fwait
jno
jno
sbb
or
and
inc
sbb
jmp
jmp
mov
out
cmpsb
ret
fisubrl
das
mov
mov
scas
dec
cmpsb
or
pop
fbstp
rcr
inc
fistpl
jg
dec
ljmp
loopne
inc
lock
jmp
in
push
xor
movsb
orb
sahf
xchg
lock
stc
mov
icebp
and
loopne
cmp
aas
test
cmp
test
inc
pop
aad
push
xchg
jg
mov
scas
dec
cli
inc
incb
or
xor
push
aam
adc
lcall
andl
jmp
or
mov
dec
cmp
enter
fsubp
mov
sbbl
push
hlt
loopne
or
incl
and
aam
repnz
mov
xchg
sub
test
xlat
insl
jg
push
inc
cmp
lahf
cmpl
aaa
dec
cld
jg
in
inc
inc
jbe
mov
adc
rorl
mov
rorl
pop
stos
inc
enter
mov
rclb
aas
test
ljmp
inc
inc
jp
ss
loop
sbb
arpl
xor
jno
incl
or
sbb
ljmp
cmp
jmp
decl
inc
push
pop
xor
pushf
xchg
je
test
sub
std
loope
inc
and
incl
cli
mov
sub
adc
xor
icebp
cmc
ror
push
adc
adc
sbb
mov
cmp
outsb
push
movsb
cmp
out
cld
pop
stc
cmpxchg
jae
lahf
push
clc
sarb
pop
lret
aas
test
xchg
mov
aas
add
ret
sbb
jmp
and
addr16
fadds
insl
into
test
decl
popf
sub
add
mov
jns
out
or
addr16
movsl
daa
je
jo
dec
inc
xchg
lcall
push
inc
mov
inc
mov
shrb
mov
xor
aaa
xor
dec
ret
fildll
jl
push
test
les
inc
jb
mov
push
dec
pop
lcall
bound
cmc
mov
mov
adc
call
fxch
imul
icebp
lcall
test
ror
mov
sbb
inc
les
lcall
inc
aas
jle
adc
mov
sahf
cmp
stc
pushf
popf
nop
call
repnz
pop
aad
jno
push
sar
inc
enter
test
cmp
mov
outsb
mov
xchg
mov
sub
call
divl
pop
inc
incb
f2xm1
fidivs
xchg
ss
sbb
call
dec
or
and
push
xchg
and
call
fimuls
mov
pusha
xor
sbb
mov
xor
fists
push
out
lcall
icebp
xchg
test
cmp
std
incl
and
nop
lcall
and
in
enter
adc
aad
dec
testb
loop
push
and
jmp
xor
mov
fisubrl
rol
cld
pop
stc
bsr
dec
mov
dec
ljmp
ficoml
sbbb
adc
pop
xor
adc
cwtl
jmp
jmp
add
cmpsl
stos
cwtl
jae
push
lcall
nop
cltd
jns
push
lcall
adc
pop
in
test
jg
xor
adc
repnz
insb
or
sub
mov
addl
ret
push
ds
cwtl
pop
push
lcall
inc
call
hlt
sbb
enter
cmp
int3
js
cld
das
or
fimuls
mov
movsb
aad
cmp
flds
jge
stc
lahf
loop
repnz
fs
pop
xor
cs
push
dec
fsubrl
dec
scas
movsl
sub
lods
scas
inc
daa
jmp
cmp
leave
xchg
int3
jnp
xchg
pop
sbb
movsb
mov
lea
std
xchg
decl
add
jp
adc
cmpsb
dec
imul
cmovno
dec
jl
incl
adc
lret
inc
pop
jg
std
jg
hlt
mov
jg
stos
lds
mov
xchg
fwait
xor
enter
sbb
inc
pop
pop
jns
mov
inc
xchg
fisubrs
cwtl
shlb
pushf
js
pop
arpl
decl
sbb
jno
ret
decb
and
inc
incb
int3
loop
jno
sarl
out
cmp
aam
inc
adc
ja
xchg
add
cli
mov
fldcw
sub
aam
mov
jge
inc
shll
add
test
test
cmp
add
jns
xor
outsb
out
xchg
sahf
ds
and
xchg
jmp
iret
pop
cmp
inc
out
add
es
stc
lcall
adc
or
repz
dec
mov
sub
pop
enter
nop
ja
loopne
aaa
mov
add
push
test
pop
subl
push
mov
ror
pop
shll
sub
in
ror
mov
sbb
ljmp
pop
mov
xlat
pop
adc
jno
mov
mov
mov
xor
sti
dec
loopne
push
sbb
out
mov
mov
push
jp
repz
decl
mov
xchg
mov
jns
aad
insb
mov
pop
mov
xchg
rdseed
decl
xor
iret
test
push
mov
jo
sbb
in
sar
jg
stc
cmp
jae
xor
cmp
mov
mov
jnp
enter
insl
ds
jg
fcmovne
pop
dec
adc
jne
pushl
das
std
movl
inc
popa
rclb
jmp
push
clc
pop
jb
testb
testl
inc
lock
out
inc
pop
push
mov
push
je
out
mov
xlat
repnz
jbe
rcl
xchg
mov
leave
xchg
xchg
addl
incl
arpl
or
push
mov
pop
inc
sbb
mov
adc
outsb
xlat
push
inc
lret
adc
call
pop
inc
idivl
in
rcrb
pusha
fisubrl
ja
test
jg
incl
cmp
mov
mov
jge
movsl
mov
incl
mov
in
leave
add
pop
ljmpw
add
into
repz
mov
jb
mov
fwait
aam
adc
xchg
sub
xor
sub
jae
sbb
incl
insl
or
xlat
out
cs
dec
push
sbb
out
lahf
pop
repnz
cld
das
add
push
scas
bound
aad
jl
pop
insl
cmp
jge
jmp
adc
xchg
pop
mov
pop
stc
psraw
push
rcll
add
sub
aas
test
in
jmp
mov
jmp
test
add
xchg
add
icebp
hlt
jmp
int
inc
inc
pushw
or
call
out
pop
add
mov
ss
pop
inc
movsb
xchg
popf
xchg
add
mov
push
or
lock
loopne
enter
xchg
jecxz
pop
subb
xchg
push
int
xchg
sbb
inc
sbb
arpl
mov
push
dec
cmp
repnz
negb
enter
sbb
scas
jle
out
cmp
call
dec
sbb
bound
and
aad
and
mov
sbb
js
out
and
add
call
pmuludq
imul
cmpsl
xchg
cmp
stc
lahf
cld
stc
jne
pop
clc
cmp
shrl
call
aam
aas
push
cltd
jo
dec
mov
mov
push
push
dec
aam
push
or
aam
pop
and
notb
sbb
inc
enter
popf
cmpsb
sub
mov
pushl
repz
or
fsubrl
sbb
mov
int
add
ret
pop
aas
hlt
dec
gs
mov
mov
hlt
icebp
int
icebp
scas
inc
cld
dec
cmpsl
imul
hlt
scas
inc
push
outsl
das
jge
negl
in
adc
ljmp
push
stos
xor
lods
mov
ja
and
pop
mov
std
jb
inc
pop
cmp
adc
clc
test
les
add
jp
inc
subl
lods
in
in
mov
jp
call
sbb
sub
xchg
push
push
sub
fdivr
mov
and
lcall
or
popf
jnp
ffreep
nop
ficoml
push
push
xor
xchg
or
sahf
adc
inc
incl
jmp
mov
dec
push
pop
xchg
negb
or
test
xchg
ljmp
xor
loope
or
cmc
pop
and
sbb
mov
adc
icebp
or
mov
sbb
out
das
mov
enter
push
inc
and
and
fbld
cmp
lcall
sub
call
idiv
call
test
or
popf
mov
push
push
popa
xor
fistpl
iret
adc
lock
mov
and
jns
inc
ljmp
cmp
pop
icebp
movups
push
inc
xor
fwait
aas
xlat
cwtl
std
stc
push
sbb
jmp
das
ret
xchg
mov
sbb
shll
shl
pop
cmc
aaa
push
sbb
xchg
out
cmp
or
cmp
ljmp
mov
xchg
push
mov
push
vmovaps
out
incl
clc
rol
dec
sbb
pusha
jp
imul
popf
iret
dec
mov
and
pop
mov
jne
in
add
jmp
inc
test
push
xor
aas
push
jecxz
stc
decl
dec
mov
xchg
outsb
mov
jg
xor
mov
pop
dec
insb
test
pop
ret
dec
scas
pushl
std
adc
rclb
fsubl
hlt
inc
popa
fidivs
mov
incl
call
adc
inc
mov
mov
push
std
cld
pop
mov
mov
cmp
adc
pop
decl
mov
outsb
jle
mov
stc
fisubs
aam
lock
xorb
jl
scas
mov
lcall
add
loop
add
inc
sar
decl
add
adc
popf
dec
fwait
lret
jne
mov
mov
jb
add
ja
adc
sbb
repnz
dec
xor
xor
lret
xor
push
rolb
ljmp
inc
cmp
pop
mov
lock
dec
outsl
cmpsb
iret
xchg
jbe
push
fisttpll
mov
pop
sarl
xchg
jge
xchg
js
pop
lock
ljmp
fidivrs
lods
or
add
popf
jg
fdivr
pushl
mov
pop
mov
fdivl
pop
xchg
or
mov
leave
push
aam
cli
pop
inc
adc
lock
int3
pop
add
fsubrs
ja
lock
imul
dec
push
rorl
add
jo,pn
pop
inc
and
aas
inc
aaa
xchg
add
or
cmpsb
adc
ljmp
js
lea
mov
cmpsb
xchg
jp
mov
ljmp
lret
and
scas
jnp
sbb
clc
stos
and
lds
pop
bound
or
nop
nop
aas
vpsubw
add
cmovge
push
or
add
decl
mov
fldt
sbb
test
mov
ss
jne
inc
sbb
adcb
decl
or
mov
cmc
jmp
rcrb
adc
iret
mov
js
ljmp
pop
fs
mov
repnz
or
insl
cmp
sbbb
iret
loopne
mov
call
mov
lcall
scas
jge
aaa
xchg
xor
mov
and
sahf
incl
ds
cli
out
arpl
aas
cli
clc
cmp
jl
xchg
dec
pop
bound
incb
das
out
test
push
pop
fmuls
pop
clc
lcall
pop
mov
aas
loope
or
repnz
add
incl
inc
aaa
and
cmp
pop
cld
sti
sub
sub
sbb
jl
je
xor
push
lcall
loope
sahf
inc
sets
imul
and
es
pop
stos
sub
lds
or
ljmp
in
pushl
sub
hlt
std
stos
cmpb
xor
push
in
xor
jno,pt
test
je
aad
leave
in
dec
lret
iret
arpl
jle
movsb
aas
dec
cld
cltd
ror
lret
mov
out
push
repz
mov
pop
and
mov
aaa
and
add
jmp
sub
push
es
mov
jge
fcoml
pop
int3
lock
pop
push
xor
jmp
adc
sbb
mov
jnp
adc
add
inc
sub
xchg
jg
add
jb
dec
sarb
push
clc
mov
andl
cmp
pop
cld
inc
test
cmpl
scas
xchg
test
mov
aam
lea
or
fistpl
arpl
shlb
sub
mov
jg
pop
push
aaa
push
xchg
jl
repnz
iret
daa
inc
push
shl
xlat
xchg
push
fiaddl
pusha
jno
sar
in
fnstcw
leave
test
aas
jle
incl
mov
fdiv
sqrtps
sub
ja
sar
adc
popa
dec
sub
or
insl
aaa
adc
das
sub
ljmp
xchg
lcall
jae
xchg
sbb
mov
or
sbb
xchg
stc
pop
enter
fs
loope
aaa
loope
jg
aas
test
and
mov
ds
icebp
dec
out
incl
addr16
mov
add
jl
aaa
add
dec
pslld
inc
aam
cli
lret
add
push
or
and
scas
fcmovnb
xchg
lods
inc
bsf
xchg
pop
iret
out
jns
xor
pusha
mov
cli
cwtl
mov
sbb
int3
mov
test
mov
decl
adc
sub
outsl
mov
decl
rcr
cmp
sub
psubq
call
lock
nop
or
lcall
pshufw
ficoml
aas
clc
loope
xorb
sbb
shlb
pop
mov
or
mov
std
jmp
jnp
shll
lods
loopne
sub
lock
sub
incl
lret
pushf
add
sbb
mov
shlb
jle
neg
fs
lcall
jmp
into
outsb
stos
mov
cmp
cld
sbb
frstors
jg
mov
mov
sti
fdivrl
xor
mov
sub
pop
cmpb
xchg
jo
movsl
jbe
inc
aas
stc
pop
and
pop
push
add
xor
sarl
or
popa
sbb
clc
into
jo
mov
in
mov
test
mov
stc
pslld
scas
push
and
pop
scas
mov
and
push
daa
add
jg
adc
add
mov
jp
repnz
mov
or
mov
mov
mov
or
popa
mov
sub
lcall
and
xchg
push
fmull
aaa
cwtl
dec
or
pslld
or
push
decl
jg
jb
notb
lret
ss
ljmp
orl
popf
clc
pop
int3
rorl
iret
addr16
or
gs
pop
in
sbb
outsl
bound
jp
sbb
jge
cmp
pop
aas
pop
xchg
mov
jg
jge
inc
popf
sub
or
and
aas
sti
aaa
bound
push
enter
adc
sub
fnsave
jb
arpl
inc
inc
cmp
test
pop
fsts
arpl
movsl
inc
stc
pop
xor
insl
jmp
hlt
xor
pop
jns
and
pop
bound
add
and
cli
pop
enter
packuswb
in
mov
or
adcb
xchg
call
int
jg
push
mov
pop
or
pop
inc
incb
jg
mov
ret
cmp
adc
jmp
xorb
lcall
sbb
inc
sti
fwait
mov
jae
pop
inc
enter
and
xchg
imul
and
gs
sbb
mov
iret
loop
jmp
push
ror
lahf
cmp
inc
lods
ja
testl
jg
outsl
and
out
mov
adc
mov
incl
push
sti
fmul
mov
and
xor
incl
je
mov
adc
out
std
inc
leave
jge
testb
outsl
imul
pop
xchg
insl
adc
jmp
push
enter
les
pop
jle
cmpsl
push
pop
pop
call
push
popw
popa
imul
cli
pop
inc
cmp
inc
pop
and
xchg
dec
sub
bound
pushl
repz
fidivrl
int3
mov
xor
les
pop
mov
sti
out
notl
shrl
lcall
mov
in
add
sub
or
and
cmp
int3
mov
es
jmp
scas
insb
iret
les
in
imul
xchg
outsb
inc
adc
stc
mov
cmp
mov
jne
jg
cld
pop
shlb
cs
dec
mov
pop
out
int3
adcb
pop
std
xchg
add
test
adc
mov
xorb
imul
cmc
daa
decl
jg
sti
pop
inc
nop
loop
inc
lret
in
push
sub
mov
out
mov
push
sub
jecxz
test
xchg
incl
sbbb
std
add
js
lcall
in
xchg
nop
jmp
in
mov
rolb
leave
incl
icebp
pop
mov
aaa
or
and
mov
inc
or
decl
and
xchg
add
lods
imul
pop
std
aad
lock
push
mov
pusha
loope
cmp
lcall
aas
aaa
or
jb
mov
adc
call
inc
rorl
cmpsb
lahf
inc
push
push
jp
popa
addr16
daa
xchg
push
iret
xchg
movsl
andb
jnp
adc
push
loope
fbld
jg
sbb
clc
sarb
in
push
and
fisttps
pop
and
out
add
punpckhbw
ret
cld
ljmp
jmp
adc
jl
add
test
or
jg
sbb
test
iret
push
imul
mov
stos
sahf
mov
pop
and
dec
idivl
mov
mov
inc
dec
or
outsl
ljmp
fcoml
push
rorl
js
jo
or
popa
pop
stos
cmp
xor
imul
adc
ja
sahf
arpl
pop
pop
ss
mov
lods
and
icebp
xor
imul
push
lcall
lcall
jmp
pop
lds
mull
rol
pop
mov
aas
fldenv
inc
hlt
call
shlb
lcall
lds
lods
popf
and
lcall
inc
aad
pop
sbb
xchg
and
sub
stos
and
and
jle
xor
arpl
decl
push
xchg
xchg
sbb
popf
movsb
lcall
cmp
jg
adc
leave
repnz
xchg
or
loopne
push
sbb
int3
dec
ljmp
xor
xor
and
mov
and
inc
ds
call
hlt
popa
pushf
gs
jbe
mov
sbb
jecxz
insl
add
lods
out
mov
pop
jp
scas
xchg
dec
or
movsb
call
xor
test
pop
cmpsb
icebp
scas
int3
ret
pop
dec
dec
mov
dec
xchg
sti
sbb
out
xor
mov
cmp
scas
cld
sbb
cmpl
ljmp
call
push
loope
ljmp
inc
sti
or
push
adc
add
ljmp
fisubrs
add
ljmp
aaa
call
fisubl
add
lcall
insl
sub
addr16
cmp
jmp
xchg
lds
add
sbb
scas
icebp
fdivrs
jge
fs
xor
cwtl
out
stos
stc
push
sub
lods
jle
scas
lock
push
neg
cli
call
cs
pop
cmc
addr16
or
cmp
xchg
ret
popf
jbe
es
iret
xchg
lcall
inc
inc
insl
mov
dec
xor
sbb
pusha
cmpsb
sahf
pop
mov
inc
pop
sub
incl
xor
sub
pop
pop
lea
call
subl
fiadds
cmp
mov
mov
mov
fildl
lret
je
addr16
aad
mov
fnclex
test
popa
shll
add
xchg
xchg
data16
adc
pop
mov
bnd
pop
xchg
add
call
push
movsb
scas
dec
fs
loopne
pop
lahf
test
sub
pop
ud0
cs
pusha
mov
mov
push
in
cs
lock
adc
incl
adc
incb
mov
add
fwait
add
sub
in
incl
ljmp
out
movsb
and
scas
jp
icebp
cltd
push
out
incl
rcrb
popa
or
jmp
adc
outsl
xor
sub
or
hlt
sbb
ljmp
adc
push
pop
add
mov
xchg
mov
jo
and
call
sub
or
das
pushf
mov
push
push
or
cmp
fcmovb
shrb
or
fwait
pop
cmp
cmp
pop
inc
mov
cltd
fiaddl
push
push
add
cli
pusha
outsl
clc
decl
cmpsb
pop
jo
mov
pop
jae
push
adc
ja
mov
xchg
clc
jmp
lcall
jb
stos
add
mov
outsl
aad
add
adc
or
scas
bound
adc
fnstenv
mov
iret
add
mov
push
decl
jmp
mov
mov
repnz
dec
mov
mov
cmp
lcall
stos
ss
das
xor
js
loop
cli
pop
dec
loopne
add
cli
add
insl
leave
std
das
xchg
lods
dec
hlt
aam
enter
adc
ror
pop
mov
test
mov
adc
daa
test
dec
faddl
in
push
je
stc
sub
incl
lcall
push
aaa
push
out
cwtl
pop
jmp
xchg
add
icebp
cmp
mov
xchg
xor
in
pushl
rcrb
jge,pt
rcrl
lods
nop
pop
push
sub
fwait
add
lret
inc
sar
ljmp
xor
insl
out
adc
xchg
js
fldcw
and
lea
lcall
cld
inc
cwtl
xchg
adc
mov
push
aam
dec
mov
adc
stos
mov
jae
or
shl
dec
mov
inc
cli
aas
loop
sbbb
mov
cmp
mov
push
jecxz
dec
cld
xchg
cmp
rcrb
jg
jl
jo
dec
push
mov
sbb
nop
push
dec
jne
or
lods
inc
cmp
jg
enter
scas
jge
mov
in
sub
lcall
aas
mov
andb
pusha
leave
push
das
push
dec
popa
jle
bound
cmp
daa
loope
add
gs
dec
mov
lcall
xchg
addb
ret
mov
repnz
ljmp
lds
push
hlt
xor
fisubl
lds
int3
stos
mov
cmp
in
jmp
mov
int3
ficompl
cmc
adc
mov
and
cmc
les
add
jmp
stos
arpl
out
call
call
enter
adc
adcl
cmpl
das
pop
mov
mov
jmp
adc
nop
incl
push
hlt
lahf
rol
gs
cltd
jle
sbb
inc
bound
adc
btc
cmp
stc
aas
adc
cmp
pop
iret
dec
incl
jg
loop
mov
pop
fs
lahf
mov
mov
decl
mov
testl
leave
add
xchg
push
adc
arpl
incl
lds
out
xchg
movsl
mov
adc
int
shll
in
lcall
ljmp
jle
imul
xchg
mov
aaa
leave
adc
cmp
sbb
sti
pop
incl
aam
push
cld
jge,pn
mov
pop
push
xchg
out
sbb
decl
dec
std
fdivrl
pop
mov
push
out
mov
jmp
out
inc
pop
dec
pop
fistpll
lods
jle
xchg
fucomip
push
iret
lock
push
push
mov
jno
mov
incl
cs
push
ret
and
cmpsl
dec
cmpsb
push
addr16
cltd
mov
push
inc
adc
xchg
aaa
mov
test
test
fwait
test
add
jmp
cmp
mov
pop
sub
xchg
fidivs
out
cltd
pop
pop
push
std
dec
lods
loop
adc
sbb
lahf
pop
mov
negb
test
inc
jmp
mov
jo
pop
mov
mov
jg
sbb
enter
or
xor
popa
pop
movsb
imul
js
and
sbb
xchg
push
push
in
rcrl
scas
dec
cmp
rorb
sbb
add
loopne
ret
ja
fsubs
incl
lret
lcall
lea
repz
jno,pn
jecxz
decl
and
popf
dec
jb
dec
xor
inc
testb
pop
pop
pop
fisubrl
jns
cld
xchg
and
ljmp
filds
icebp
xor
lods
scas
das
call
push
movsl
mov
dec
mov
cmp
pop
adc
and
out
mov
scas
in
add
pushf
lds
mov
jecxz
xor
jmp
ljmp
std
and
or
ds
call
lcall
xchg
cmp
movsb
into
gs
sub
cmp
lcall
and
adc
adc
test
sbb
mov
fdivrs
mov
jae
fbld
push
shr
push
xorb
cld
in
mov
hlt
mov
test
ss
jnp
jbe
aas
cmp
sbb
mov
and
xor
movsl
fwait
stc
xor
mov
jl
sbb
incl
fs
push
mov
pop
pop
push
subl
lret
fidivrl
btr
add
fwait
lea
mov
incl
outsb
pop
enter
pop
push
scas
adc
jl
repz
push
sub
mov
push
and
xor
add
sub
fdivr
lcall
clc
fisttpll
scas
sbb
es
cmp
mov
xor
lcall
mov
mov
mov
ret
xor
aam
or
pop
movsl
mov
push
mov
and
or
jmp
call
repnz
mov
mov
out
mov
notrack
add
dec
rcl
lea
scas
mov
lret
push
aam
test
add
add
ljmp
mov
loopne
das
lods
jmp
cltd
mov
dec
cmp
or
arpl
cmp
cmc
out
adc
int3
inc
mov
pop
add
dec
dec
mov
test
push
pop
lret
add
mov
mov
testl
sub
pop
or
xchg
aas
insb
psrad
lods
xor
nop
cld
dec
ss
add
popf
xchg
xchg
out
cmp
pusha
xor
xchg
sub
outsb
sub
xchg
push
cmpsb
sub
jg
dec
cli
push
cmp
adc
mov
xchg
jecxz
ret
mov
into
and
clc
mov
add
dec
and
ja
ja
pushf
decl
stc
mov
mov
cld
mov
mov
mov
fildll
sti
mov
pushl
jp
dec
sbb
mov
leave
bound
pop
sub
cmp
fdivrp
jg
xor
insl
pop
jecxz
xorb
cld
inc
in
adc
mov
push
jae
jecxz
das
xor
cld
add
mov
jae
shrl
pop
fbstp
jmp
and
fcom
out
sub
mov
xor
fimull
fmul
mov
ret
cmp
xor
lcall
adc
nop
jmp
push
jmp
or
pop
or
nop
outsl
sub
test
incl
sarb
xchg
dec
sub
push
in
jecxz
pop
in
cmpsb
imul
popa
xor
pushf
or
mov
cwtl
dec
cmp
cmp
sub
cmp
je
and
jp
popa
les
test
and
jmp
cs
cmp
call
repnz
xor
add
std
shl
jmp
in
pop
inc
inc
stos
cli
cmp
insl
pmulhw
dec
icebp
pop
push
stc
mov
mov
dec
or
mov
fdivrs
test
pop
je
pop
inc
mov
jmp
xorl
in
pop
addr16
mov
push
mov
ds
les
and
mov
pop
movsl
cld
mov
stc
lcall
ja
clc
jmp
mov
push
push
repnz
mov
mov
cmp
jg
mov
arpl
push
lock
adc
mov
cwtl
mov
adc
sarb
push
fs
lahf
cld
in
ret
or
push
mov
sub
ficoml
sub
sub
das
icebp
popa
outsl
xchg
push
das
cld
pop
stc
das
scas
jb
jecxz
dec
int
cmp
test
pusha
outsb
lahf
loope
push
fistps
xchg
lods
adc
in
mov
jecxz
sub
pusha
not
mov
aas
inc
insb
loop
femms
iret
in
ret
and
mov
dec
mov
push
xor
es
jno
and
and
fisttpll
jl
xchg
jmp
clc
xor
push
sahf
lret
aas
jmp
jmp
adc
insb
mov
jecxz
lcall
or
in
aaa
aas
inc
incl
leave
inc
xchg
cwtl
and
and
ja
ljmp
or
insb
add
fiadds
hlt
lea
inc
in
push
aas
pusha
ret
jl
and
out
lahf
pop
ror
jb
mov
loopne
add
fs
push
xchg
lods
pop
inc
cwtl
decl
dec
aas
loopne
fistps
js
push
dec
imul
pop
pop
inc
daa
cmpsb
js
mov
clc
out
dec
mov
dec
movsl
mov
lcall
mov
es
inc
mov
jg
ds
cmp
stc
pop
sbb
rcll
sbb
imul
in
aas
testb
cmp
mov
cmpsl
dec
sahf
pop
inc
decl
iret
push
into
cmpsb
inc
mov
test
shlb
clc
and
cmp
mov
sub
inc
push
lcall
xchg
sbb
inc
shlb
pop
sbb
mov
rcl
dec
incl
iret
lret
sbb
loopne
mov
mov
pop
inc
incb
sbb
ljmp
je
fnclex
ss
pslld
outsb
push
fstl
xchg
icebp
mov
fsubp
inc
or
jmp
movsb
jg
pop
ret
pop
pop
sub
add
incl
insb
call
xchg
mov
jb
incb
out
add
add
pop
lahf
cwtl
in
jne
cmc
lcall
sub
dec
mov
mov
and
add
push
repnz
in
pop
sbb
stc
jnp
shl
or
loopne
nop
call
cmp
jecxz
popf
push
and
jmp
psubw
mov
ret
popf
xchg
push
aas
test
pushf
pop
push
and
repz
pop
inc
dec
push
or
pop
jo
adc
sbb
movsl
or
adc
aas
fdiv
icebp
aad
pop
mov
orb
je
inc
push
incl
sbb
test
jl
faddl
icebp
out
jo
incb
in
mov
xor
aas
jae
and
inc
and
aas
cltd
popa
cmp
mov
fdivs
or
leave
xchg
pop
je
jb
addr16
inc
and
incl
mov
test
ret
ljmp
in
stos
push
mov
in
inc
das
xor
sbb
add
mov
pop
jbe
adc
push
or
xchg
push
dec
mov
inc
loope
push
insl
lcall
pop
hlt
movsb
xlat
dec
or
push
loop
in
les
mov
decl
cmpsl
mov
stos
cmpsb
xchg
aad
les
ds
je
jle
out
push
dec
fisubrs
adc
ss
int
sub
insl
sbb
mov
xchg
dec
cmp
dec
fucomip
xor
xchg
imul
jmp
push
xor
outsl
push
pop
cs
test
loopne
jle
adc
aaa
out
ja
and
sub
add
mov
xchg
out
pop
and
nop
lret
mov
or
fildll
mov
mov
xlat
dec
pop
jl
pop
mov
mov
in
popf
ds
ljmp
fmuls
cmp
ja
sbb
fstpt
sar
dec
cld
ljmp
jns
ja
out
add
inc
mov
mov
cli
push
out
cmp
xor
aam
mov
cmovbe
into
inc
jecxz
scas
in
into
sub
inc
incl
inc
cmp
xchg
xchg
push
jns
dec
dec
imul
in
notb
idiv
lcall
sub
jmp
sbb
inc
ds
push
push
fs
leave
jecxz
shl
fcom
or
ljmp
adc
bound
or
loopne
inc
dec
es
in
mov
or
aas
xchg
jg
movsb
jg
adc
dec
add
sbb
arpl
insl
mov
sbb
loope
pop
mov
sar
sub
fdivrs
outsl
arpl
mov
cmpsl
iret
mov
add
int3
mov
xchg
test
inc
lahf
ret
cwtl
ret
or
push
sbb
inc
pop
lods
sti
ljmp
lock
push
sbb
push
lahf
sbb
in
pushl
out
arpl
sbb
js
fnsave
out
scas
popa
adc
sub
cmp
jg
getsec
sub
in
add
push
stc
pop
xchg
psubq
shrl
jmp
fisubrl
shl
incl
pop
and
int3
cli
mov
incb
mov
mov
pop
scas
cwtl
decl
flds
jle
push
or
insb
sti
shll
movsb
jae
and
stos
test
movsb
call
add
adc
push
jb
push
mov
mov
cld
cmp
out
sub
orps
dec
inc
dec
cs
jg
out
test
movsl
psraw
shrb
loopne
inc
test
pushf
inc
mov
pushl
jge
mov
jb
mov
scas
jbe
fldpi
jecxz
enter
pop
lret
fwait
xor
movsw
test
dec
mov
pop
fisttpl
and
adc
pop
pop
dec
mov
shll
stos
test
add
mov
sbb
xchg
ljmp
mov
mov
icebp
push
mov
es
repnz
mov
fnstcw
dec
sbb
jg
int
jp
test
jmp
jmp
jmp
cmp
add
bound
inc
mov
int
test
dec
cwtl
ja
incl
popf
aad
roll
loope
or
das
xchg
cmp
xchg
cmp
xchg
fcmove
mov
and
ret
pop
mov
adc
aaa
fmulp
dec
add
sbb
lods
sub
inc
incl
stc
xchg
stos
loopne
and
pop
add
adcb
mov
cmpsb
dec
jg
call
aas
push
les
xchg
pushf
stos
mov
call
enter
mov
or
inc
incb
or
xor
ud0
and
out
and
sahf
pop
adc
fld
or
add
jnp
jg
stc
test
insb
xchg
mov
in
in
int
ss
mov
ss
aas
aam
stc
mov
dec
movsl
mov
mov
fiaddl
inc
cmp
cld
pop
test
scas
loope
pop
sub
loop
lahf
out
jl
inc
push
aad
adc
xchg
jp
and
repz
push
jmp
xor
shrb
insb
std
call
int3
mov
inc
jmp
xor
ljmp
xor
sbb
filds
repz
push
xor
cmp
jo,pt
jo
inc
adcl
in
ljmp
fdivr
arpl
je
je
mov
dec
cmc
ljmp
sub
sar
decl
inc
dec
inc
insb
cmpsb
xor
js
clc
ljmp
lret
enter
fwait
adc
jle
loope
ret
mov
jae
mov
loopne
sahf
ret
pop
shrl
xchg
add
mov
dec
aam
mov
mov
mov
cs
lret
xchg
outsb
xor
inc
cmc
jmp
pop
aam
inc
push
out
adc
and
sar
std
cltd
push
xchg
insb
xor
stos
outsl
popf
add
and
fcmovb
decl
sti
jnp
xchg
pop
pushf
mov
ljmp
cli
pop
cs
nop
mov
loop
add
inc
out
ret
mov
and
mov
and
cmp
shlb
pushl
and
mov
leave
xchg
movsl
cmp
push
daa
ljmp
lock
add
cmp
sub
dec
xor
lods
scas
jae
xorps
push
ds
add
call
sbb
scas
loop
sub
pop
je
sub
subb
pshufw
stc
xor
xchg
int3
sub
and
les
sub
sbb
cld
dec
imul
push
int3
in
pause
rol
inc
or
nop
sub
pop
jbe
jg
lock
mov
cmp
mov
xchg
or
or
cs
xchg
adc
sbb
lret
cli
pop
int
cmc
push
fcomp
push
or
lcall
mov
or
adc
into
mov
jmp
aad
mov
bound
scas
mov
inc
adc
lret
dec
daa
cmpsb
mov
ffreep
pop
and
fwait
outsl
mov
ja
sub
imul
pushl
gs
xchg
dec
lahf
jp
ja
add
les
daa
adc
jmp
or
push
pop
aad
mov
and
fs
aas
popa
test
and
push
in
lock
or
ss
push
out
nop
ds
bound
sbb
dec
and
mov
adc
pop
xchg
sbb
adc
aas
push
cld
lret
adc
pop
mov
mov
cmpsl
andl
scas
int
hlt
or
fdivr
mov
filds
mov
push
movsl
sbb
aad
cmpb
and
aaa
ljmp
pop
outsb
decl
pop
cs
sub
pop
cs
imul
ficoml
dec
mov
jg
aas
add
pop
sub
push
decl
in
push
cmp
jmp
fbstp
data16
jmp
loop
push
push
push
dec
xor
bound
incl
jae
fwait
mov
call
enter
adc
mov
mov
lock
cmp
xorl
ret
mov
push
scas
or
stc
dec
sti
jmp
in
jae
jecxz
fs
enter
push
or
mov
stc
pop
xor
pop
xchg
inc
insl
cmp
jg
fdivr
add
fwait
or
and
pop
movsl
cltd
ja
das
xchg
decl
sbb
mov
fisubl
jg
pop
shll
aam
iret
in
loope
fidivrl
push
sbbl
scas
incl
sbb
daa
bound
sbb
xchg
add
call
adc
mov
dec
pusha
insl
push
shll
incl
icebp
push
pop
sar
out
lea
in
dec
shll
negb
mov
mov
mov
mov
das
in
enter
and
add
xlat
cmp
xchg
mov
jmp
and
mov
adc
ret
cmc
aas
mov
aas
push
pop
inc
les
or
xchg
outsl
sub
in
pop
ja
jmp
add
jae
inc
outsb
pop
mov
inc
pop
mov
imul
pop
mov
jo
js
push
scas
jge
jg
stc
call
cmp
push
out
add
fidivrl
inc
cmp
push
add
mov
cmpsb
fcompl
mov
aaa
mov
popa
xor
call
sti
fisttps
daa
icebp
inc
je
mov
je
fistps
cld
xchg
adc
js
sbb
in
lds
test
enter
or
mov
movsb
push
mov
dec
sar
loop,pn
sbb
mov
sbb
push
and
call
lea
cmp
cmp
xchg
jl
pop
jbe
jns
mov
ret
cs
or
hlt
mov
add
ja
inc
enter
lcall
lcall
mov
xor
inc
jnp
xchg
xchg
filds
lock
dec
bound
fcomip
incl
outsb
in
mov
mov
aad
pop
loop
inc
sbb
cld
std
mov
mov
stos
outsb
xchg
push
pop
lods
pop
pop
arpl
mov
or
enter
jle
jbe
and
mov
rorl
sti
nop
pop
dec
sbb
incl
decl
lods
fsub
out
mov
push
imul
pop
cmpsl
rcl
daa
lcall
adc
lea
inc
mov
and
out
dec
sub
aas
jg
sti
into
xchg
add
xor
lock
dec
xchg
int3
mov
add
mov
jg
lea
aas
push
and
cmp
scas
loope
loope
in
or
sbb
aam
or
xchg
inc
decl
adc
jns
jnp
addr16
mov
jns
mov
mov
icebp
mov
fisubs
enter
pop
or
adc
clc
call
and
inc
enter
mov
sbb
test
pop
push
sub
add
test
std
cmp
mov
addr16
cmp
or
jge
enter
test
mov
xor
rcl
mov
movsl
xor
and
mov
call
sarl
in
cmp
fbld
push
incl
sub
mov
or
xchg
movsb
int
cmp
cli
fwait
xchg
subl
es
push
fcoms
or
incl
icebp
mov
dec
shlb
sub
out
lar
mov
int3
sar
mov
int3
ja
sub
inc
dec
int
fnstenv
clc
decl
fidivs
mov
xor
inc
push
data16
sub
adc
pop
andb
mov
inc
xchg
push
xchg
lcall
filds
jno
sbb
cmp
mov
push
lcall
lcall
mov
or
idiv
aaa
adc
jns
xchg
sbb
fsub
aas
in
ljmp
xor
std
decl
xchg
pop
pop
pop
push
cmp
and
pop
push
jmp
mov
stc
incl
jae
pmaddwd
mov
into
sub
fwait
outsl
jns
jg
cmc
cmp
loopne
lahf
es
mov
decl
outsb
ret
ds
push
test
repnz
stc
pop
push
sub
mov
pop
pop
test
dec
mov
incl
xor
add
cmpsl
notl
adc
ret
rolb
stc
dec
jmp
sub
ficomps
mov
push
push
sbb
in
sub
jnp
push
push
stos
call
cmp
sbb
rcrl
dec
xchg
es
cwtl
adc
sbb
cmp
adc
call
xor
loopne
aad
inc
dec
mov
dec
jmp
and
movl
ficompl
das
nop
push
ljmp
and
mov
ljmp
ljmp
mov
xchg
or
pop
jb
xor
xor
inc
mov
jg
jg
adc
das
cmp
lods
icebp
lock
inc
pop
outsl
sbb
mov
in
cmp
stc
pextrw
cmpsb
sbb
cmp
test
and
into
mov
dec
jmp
std
incl
call
popa
sbb
fistpll
scas
and
call
outsl
adc
xchg
in
in
int
rcrb
jns
jg
pushl
xor
dec
addr16
cmp
gs
incl
and
cmp
or
mov
inc
imul
sar
call
lds
insb
pop
hlt
lock
aam
and
mov
decl
stc
insl
arpl
xchg
or
cld
cwtl
daa
cmp
and
psubb
mov
xchg
insl
xchg
addr16
inc
shll
add
enter
pop
shrb
push
or
les
pslld
pop
fmulp
scas
sahf
test
icebp
xchg
repz
pop
pushl
jmp
stc
and
xor
lahf
test
xchg
outsb
or
sub
mov
xchg
push
push
test
out
decl
iret
sti
lcall
lods
mov
mov
mov
xchg
pop
loope
mov
mov
sbb
dec
cmp
jg
pop
stos
mov
test
rorb
shlb
into
test
add
lahf
mov
in
cmc
out
xchg
test
mov
push
adc
rcrb
aam
shll
mov
incl
les
mov
das
nop
incl
out
in
pusha
daa
add
xor
std
xorl
xchg
push
cmpsb
scas
insl
add
pop
add
ljmp
js
add
jle
jnp
popf
xchg
dec
sub
mov
incl
push
insb
fimuls
push
fstps
jg
push
xlat
fwait
call
add
es
cmp
das
or
push
adc
cmc
mov
incl
stc
lahf
xor
pop
mov
push
inc
pop
dec
and
inc
mov
push
pusha
bound
js
sar
cld
mov
mov
lods
jp
test
bnd
jl
outsl
nop
call
cmp
add
movsl
and
cli
test
add
cmp
ret
sbb
inc
dec
sub
les
ss
adc
push
repnz
inc
inc
out
dec
outsl
xchg
jne
fmul
movsl
xor
nop
call
inc
mov
ss
adc
cltd
xor
enter
mov
outsb
cld
xchg
adc
inc
jecxz
es
ljmp
cld
cmp
jg
test
jbe
std
int
inc
pop
in
sub
lea
in
mov
pop
push
add
and
aas
pushl
jo
sbb
test
mov
push
jmp
shlb
loopne
adcb
mov
decl
push
movsb
mov
popf
mov
push
aas
shll
lods
pop
jns
adc
ud0
adc
and
lock
loope
dec
mov
shl
call
imul
sarb
sbb
push
xchg
xchg
inc
jbe
jno
jne
adc
adc
and
mov
jg
mov
pop
or
sbb
leave
ret
mov
insl
xchg
shld
hlt
dec
incl
insb
jbe
or
or
mov
and
xchg
xchg
xchg
xor
incl
stc
jmp
cmp
pop
les
dec
aaa
je
nop
das
jbe
iret
das
nop
dec
jecxz
cmpsb
dec
pop
mov
aam
jg
cld
lcall
push
xlat
adc
inc
xchg
fldl
and
decl
in
add
xlat
sub
es
xor
push
dec
mov
decl
loop
cmp
sbb
cmp
cli
pop
xchg
ljmp
into
push
loop
clc
mov
sahf
cli
pusha
pop
stos
insb
jnp
cmp
iret
pop
into
js
sahf
cmp
push
in
ja
test
add
rol
insb
mov
xor
pusha
pop
fucomi
pop
inc
incl
lcall
jne
stos
mov
outsb
pop
adc
shl
clc
in
and
mov
sbb
stc
pushl
ficoml
cli
inc
test
out
popa
fnstsw
orb
mov
inc
and
inc
aas
pop
enter
push
fnsave
loop
jecxz
insb
adc
dec
jne
inc
bound
cmp
jecxz
repz
mov
inc
jg
xcrypt-cfb
cmpsl
out
out
pop
xchg
rcrb
out
or
cmp
and
and
test
push
adc
call
adc
cltd
pop
mov
pusha
xchg
roll
pop
ja
incl
sub
xchg
out
mov
in
rcll
daa
mov
leave
cmc
jl
push
imul
push
fisttps
add
mov
faddp
popf
push
xchg
push
repz
icebp
mov
push
incb
pop
gs
idivl
jno
call
add
sbb
insb
jl
push
adc
je
xchg
stc
filds
adc
mov
dec
lods
add
xor
add
lcall
jge
mov
lret
xor
fnstsw
iret
jmp
mov
sub
and
cs
outsb
clc
rclb
loopne
dec
iret
cmpsl
repz
aam
xlat
push
lcall
inc
mov
adc
cmp
add
test
add
add
insl
pop
push
sbb
lock
loope
jg
xchg
inc
pusha
cli
loope
fstps
out
sti
and
lcall
pusha
scas
add
insb
shrl
lds
and
sub
loopne
push
xor
xchg
ja
add
aam
cld
incl
and
cmpsb
dec
pop
pop
sub
ret
repnz
in
push
inc
in
jo
jo
roll
sub
call
jb
sbb
fists
fwait
push
ret
dec
mov
ffreep
mov
enter
popa
les
add
scas
jmp
scas
adc
arpl
mov
inc
fistps
jns
pop
jnp
call
jb
mov
aas
call
ss
jno
sub
push
xchg
popa
jno
push
cld
das
xchg
push
out
and
cmpsl
lods
pop
fcompl
jg
xchg
mov
cmpsb
insb
and
loop
decb
stos
mov
sti
les
lods
clc
gs
aam
and
lods
loope
push
cld
outsl
inc
lods
mov
adc
decl
xlat
icebp
orl
iret
dec
pop
pop
adc
push
lods
arpl
mov
jo
test
int3
jmp
scas
or
and
lcall
repz
adc
jg
call
roll
xchg
adc
clc
inc
inc
and
xchg
in
enter
dec
ret
xchg
std
sub
or
mov
cmp
jmp
mov
inc
jb
push
cmp
mov
xchg
or
das
addl
loop
rcll
jmp
xor
sbb
mov
shlb
mov
popf
das
inc
sbb
or
sub
adcb
pushl
cmc
scas
push
clc
lds
scas
push
cmp
pslld
out
mov
scas
xchg
mov
mov
jl
pop
in
loopne
insb
loop
inc
incb
roll
sarb
inc
lock
xor
jae
push
pop
in
or
in
aas
jns
negb
jno
inc
xchg
inc
mov
adc
imul
inc
call
repnz
mov
not
mov
sarb
push
dec
jmp
cwtl
jbe
mov
dec
lret
pop
das
jbe
movsl
dec
jmp
fisttpl
out
orb
jmp
push
pop
mov
jb
adc
icebp
rclb
sub
adc
xlat
sar
or
inc
mov
add
xor
repz
test
pop
decl
iret
xorl
mov
popa
mov
sbb
mov
xchg
inc
inc
mov
cmpsb
mov
adc
fists
inc
jo
fdivs
into
js
jb
and
das
mov
pop
mov
cvtps2pd
stc
lahf
mov
in
pop
add
mov
jg
repz
and
mov
icebp
das
in
enter
add
xor
and
iret
fwait
les
jmp
aam
popa
pusha
add
push
gs
decl
outsb
mov
add
shr
loopne
sub
insl
fists
cld
mov
test
xchg
aad
lods
dec
fidivrs
mov
mov
out
sahf
sahf
xchg
inc
out
mov
mov
fstps
and
cmp
clc
jmp
mov
pusha
icebp
dec
mov
pushf
lea
pop
dec
and
fdivrs
ljmp
out
push
test
pop
pusha
xchg
mov
jle
rorl
pop
sub
fstpt
push
cld
lds
shl
out
lcall
xchg
mov
inc
push
push
sub
cmp
xchg
cld
cmp
sar
jg
out
fdivs
add
pop
sub
imul
jecxz
jo
adc
push
or
sahf
lea
mov
pop
jecxz
movsb
movsb
ljmp
dec
shrl
lods
and
push
out
xor
push
push
cwtl
outsb
ds
ret
cli
ljmp
repnz
lret
sbb
cld
dec
mov
add
incl
ficoml
sub
je
and
scas
imul
push
popf
lods
mov
call
pop
icebp
outsl
clc
mov
das
dec
pop
inc
cmc
or
add
lods
mov
hlt
push
gs
scas
xor
loop
into
add
add
cld
fisubl
roll
enter
pop
cld
push
adc
sbb
incl
mov
stos
xchg
pushl
movsb
pop
sbb
andl
aas
inc
outsl
and
sahf
nop
mov
jle
ret
inc
aam
das
add
test
jg
std
xlat
and
jp
push
test
in
cmc
xchg
in
fbld
es
push
rcrl
xor
xchg
adc
icebp
loopne
pop
jecxz
out
push
push
mov
dec
dec
ss
aad
sarl
push
add
fisttpll
jne
loope
pop
sub
push
sub
popf
add
or
arpl
push
ret
jle
mov
in
sbb
xchg
or
test
or
fsubl
inc
dec
mov
ds
fisubrl
inc
jb
mov
push
stos
sub
call
out
xor
mov
jae
es
insl
jecxz
test
shlb
pop
mov
dec
cmp
aas
lea
test
inc
jmp
mov
or
mov
rol
jp
cs
out
and
scas
out
mov
inc
mov
inc
call
repnz
js
sbb
add
dec
jo
adc
cmp
inc
and
inc
fsubrs
out
mov
int
lea
aaa
add
jge
pushf
push
sti
ljmp
jns
subl
movsb
rolb
lock
and
ds
mov
push
mov
outsl
pop
ljmp
mov
mov
xchg
xor
decl
insb
push
or
sub
adc
movsb
inc
jmp
aaa
ficoml
inc
add
xchg
repnz
mov
lret
les
inc
popa
xor
aam
mov
add
inc
lahf
sbb
aas
cmp
js
xorl
mov
cltd
sub
lods
cld
or
in
jle
push
pop
in
push
sub
jo
adc
mov
jmp
mov
lahf
cmp
add
clc
push
sbb
sar
call
repnz
inc
push
xlat
loop
push
es
push
stc
adc
sbb
repz
xor
leave
aas
inc
addl
jb
mov
and
jmp
dec
lods
repz
pop
push
loopne
push
mov
xchg
push
sub
sub
out
cli
call
sbbl
push
dec
pop
mov
loope
sbb
xchg
or
mov
fidivl
clc
incl
insb
pop
xor
xor
stos
mov
xor
xchg
cs
jmp
add
adc
sbb
std
sub
jnp
xchg
adc
out
mov
cmp
iret
cmc
mov
add
pushl
sarl
pop
movsl
loopne
testb
aad
test
test
adc
stos
shlb
incl
icebp
pop
mov
push
aas
push
in
jne
call
sbb
mov
sub
pop
sub
sbbb
push
lds
ret
scas
mov
cmp
enter
sysexit
int
dec
std
fistps
cmpsl
sbb
fstps
cld
dec
xchg
out
cli
add
pop
cmpsl
je
dec
pushl
xchg
pop
mov
mov
shlb
stc
decl
mov
iret
mov
push
fsubrp
imul
sbb
bound
or
cld
pop
cmp
outsl
jb
repz
lcall
inc
adc
xor
add
inc
mov
pop
loope
mov
mov
dec
data16
out
jo
pop
mov
int3
js
loope
lcall
jo
add
call
test
out
insl
pop
sub
inc
addl
adc
xchg
arpl
xor
xchg
cmp
out
adc
imul
and
lahf
add
call
lods
loopne
lods
mov
mov
icebp
pop
cmpsb
insl
call
in
add
cld
das
sbb
sub
divl
push
pusha
test
or
fisubs
fld
es
jmp
popa
scas
pop
mulb
scas
adc
and
cli
xlat
push
sbb
test
xchg
mulps
jmp
aad
aaa
arpl
iret
adc
xor
lcall
lahf
sub
mov
push
mov
mov
mov
aas
stc
jnp
jae
sbb
mov
js
adc
mov
and
jb
jno
cmc
mov
add
loopne
jmp
jmp
cltd
fwait
pop
ja
fisttpll
lds
cwtl
and
pop
cmp
jne
insb
sbb
sub
mov
cli
cmp
outsb
jae
dec
mov
adc
or
jmp
mov
and
mov
es
sbb
test
pop
in
pop
cmc
std
sti
stc
je
popf
push
lcall
les
lock
adc
inc
in
pandn
lcall
lcall
or
out
lods
iret
mov
popa
sahf
mov
mov
das
mov
div
call
cmc
mov
pop
cwtl
test
out
xor
xchg
lahf
popf
test
jmp
clc
mov
test
fists
push
adc
stc
lcall
jg
jl
sub
lock
sub
cmp
add
sbb
jbe
icebp
add
in
mov
leave
mov
int3
jae
push
dec
ret
hlt
mov
jmp
push
cmp
lret
xor
int3
and
je
cld
pop
pop
add
pop
sbb
in
jb
mov
mov
pop
sahf
push
mov
loop
in
std
cmp
inc
pop
loopne
cli
iret
mov
xor
mov
mov
mov
pop
inc
sbb
test
sar
fildll
mov
push
jl
jg
scas
xchg
cmp
and
add
mov
ljmp
nop
dec
cmc
push
lcall
in
movsb
mov
inc
jg
std
jl
and
iret
scas
mov
jo
lods
adc
push
adc
pextrw
es
mov
pop
inc
sub
in
sub
lcall
adc
shll
and
and
xor
push
cmpsb
sub
xchg
add
ret
lods
adc
cmpsl
add
jecxz
shlb
pop
push
pop
outsl
mov
test
or
stc
lcall
push
repz
aaa
or
andb
jg
mov
test
fbstp
pop
xchg
loopne
or
add
outsb
add
dec
int3
sub
jo
stc
insl
scas
cmp
xchg
push
xchg
das
nop
jg
or
arpl
pop
add
cltd
iret
mov
add
cli
and
sbb
ds
jg
lahf
cld
das
or
and
and
mov
enter
test
icebp
xor
adc
pop
outsl
repz
push
or
mov
jg
mov
jnp
push
jmp
adc
mov
and
mov
inc
mov
mov
push
xlat
sbb
push
mov
sbb
sahf
adc
or
mov
dec
push
ror
rorb
mov
pop
adc
cmp
ret
jmp
xor
je
push
adc
push
popf
js
mov
dec
pop
aas
cld
mov
cli
fidivrs
adc
xor
push
jo
dec
push
and
cli
lahf
dec
fdivs
in
stc
push
cmp
stos
cmc
push
jmp
pop
adc
roll
ljmp
pop
ds
imul
adc
popa
rol
lock
incl
aas
pop
outsl
push
shlb
je,pn
in
pop
incl
incl
cmp
push
jg
jg
cmp
not
rcrl
decl
and
in
mov
scas
mov
stos
lret
js
nop
decl
arpl
cmp
call
inc
fs
fdivrp
mov
fisttps
push
and
incl
frstor
pop
dec
and
mov
adc
sbbl
lods
into
pop
and
call
jg
jo
push
nop
orl
rcl
outsb
rcr
bound
out
call
mov
cld
das
mov
adc
and
incl
stc
inc
test
jmp
mov
xchg
pop
call
enter
out
out
pop
lods
xchg
pop
cmpsb
push
gs
repnz
mov
mov
inc
sarl
mov
call
lock
dec
pop
add
and
inc
cmp
pop
daa
xor
fsts
sbb
pop
jmp
incl
adc
testb
nop
pusha
insb
jg
std
jg
pop
jno
cmpsl
cs
jns
inc
call
jle
loope
in
enter
jg
insb
mov
and
jmp
mov
mov
and
dec
loop
mov
test
pop
stc
pop
call
test
loope
decl
or
sub
clc
icebp
push
cs
js
or
fdivr
in
stc
lcall
xchg
and
enter
add
cmc
incl
ret
mov
dec
gs
xchg
sub
push
in
xor
pop
test
fbstp
jmp
push
xchg
popa
ss
mov
xor
dec
or
sbb
out
push
mov
loope
pop
cmp
mov
mov
mov
jbe
test
pop
fisttpl
and
fisttpl
in
aas
inc
lock
daa
outsl
sub
lcall
jne
inc
inc
mov
inc
cmc
ret
cwtl
ret
popa
mov
jg
das
cltd
xlat
out
lret
push
ud0
cmp
xchg
mov
cmp
pop
jne
cmc
lds
push
sbb
decl
movb
add
xchg
not
roll
pop
inc
es
incl
out
push
scas
cs
push
clc
mov
test
js
pop
and
subl
out
mov
aaa
dec
scas
sbb
pushf
dec
jg
mov
jg
mov
or
xchg
icebp
jl
subl
add
mov
test
mov
test
adc
enter
inc
enter
push
inc
cmp
xor
add
lcall
and
cwtl
fisttpll
shlb
mov
sub
ja
das
out
aad
mov
leave
and
adc
jg
and
into
sahf
cmp
dec
call
xchg
imul
idiv
jg
std
mov
sbb
movsb
je
frstor
mov
xadd
lcall
mov
mov
mov
xorb
mov
imulb
out
je
imul
incl
jns
lock
mov
daa
test
add
jg
cld
dec
jbe
or
shrl
enter
dec
ljmp
sbb
and
add
pop
jo
cmp
push
and
sub
fwait
scas
mov
mov
and
cmpsl
jns
mov
mov
dec
mov
mov
and
aas
pop
jg
test
call
jae
test
incl
repnz
push
repz
in
daa
xlat
mov
dec
jmp
push
xchg
xor
adc
push
stc
jne
xchg
mov
stos
inc
cwtl
push
mov
call
or
push
aad
inc
inc
rdtsc
cld
std
je
cld
bound
cmpsb
and
lahf
jnp
test
pop
stc
push
fisubrs
mov
mov
push
sbb
and
aas
negb
xchg
jge
mov
sub
mov
mov
mov
jmp
repz
sbb
loopne
jo
sahf
pusha
pop
mov
cmpsl
popf
jle
clc
out
add
pop
loope
sti
push
das
mov
pop
dec
lret
pop
and
sbb
jns
incl
mov
inc
mov
pop
stos
negl
lock
xchg
mov
rcrl
shr
mov
add
decl
ror
mov
push
mov
das
nop
dec
loopne
xchg
out
shrb
inc
cmp
cld
incb
push
adc
mov
inc
add
ljmp
pop
xor
out
test
add
xor
bound
imul
iret
js
out
jecxz
das
nop
dec
aaa
ss
dec
add
add
or
jmp
add
jge
popa
loop
call
out
pop
fldcw
ljmp
mov
dec
sbb
pop
out
fisubl
jno
lcall
push
xor
pop
enter
mov
fs
push
addr16
inc
incb
mov
pop
cmp
xchg
aad
and
push
repnz
xchg
add
adc
or
clc
mov
jmp
call
test
xor
inc
lods
test
add
daa
test
jecxz
aas
inc
imul
test
psubusb
push
daa
fnstsw
xchg
icebp
pushf
test
call
sub
cld
scas
and
outsb
es
sbb
jg
dec
jnp
or
pop
mov
ja
xchg
pushl
cld
and
ljmp
lcall
decl
mov
scas
arpl
xor
pusha
jge
cmp
aas
scas
aas
enter
dec
adc
out
push
mov
xor
fsubr
lret
cmp
insb
pop
push
push
data16
cmp
xchg
xchg
dec
sub
ss
aas
push
ljmp
push
sbb
jg
inc
scas
mov
mov
roll
nop
pushl
adc
lcall
jbe
aaa
test
pop
xchg
aam
xchg
test
mov
push
loop
enter
fildl
fildl
addr16
inc
pop
jle
insl
and
pop
pop
xor
xor
jno
and
ds
aaa
sbb
rorb
std
sub
leave
sub
in
pop
insb
mov
fwait
test
push
aas
xor
sbb
lahf
filds
jg
push
and
ret
mov
add
mov
fisubrl
and
dec
repz
xor
lret
shll
out
in
sub
xor
clc
jge
fldt
sbb
add
das
stc
pslld
test
std
inc
daa
inc
imul
pop
fdivr
incl
jne
stos
cmpsb
stos
inc
and
fldt
ss
incb
test
adc
and
sbb
pop
inc
add
jge
xor
xchg
call
call
jl
fdivs
sub
mov
pop
in
imul
jecxz
mov
incl
pop
ljmp
test
mov
jae
jl
xchg
iret
pop
cli
push
cwtl
lahf
ja
leave
incl
stc
les
movsb
aas
and
pop
lods
sbb
ljmp
nop
decl
repz
mov
pushl
andb
daa
in
xchg
cld
in
xorl
pop
fcmovu
jmp
mov
fwait
push
sub
mov
jo
jmp
stos
popf
inc
push
enter
sbb
or
and
test
call
xor
repz
jp
sub
test
sub
push
and
mov
aas
cmc
mov
icebp
decl
insb
insb
dec
loop
mov
in
mov
cli
jl
dec
movaps
in
les
sbb
cli
js
mov
or
das
aad
fbstp
xchg
adc
dec
cld
push
in
loopne
into
inc
lcall
jmp
cmp
mov
dec
sbb
movsb
push
pop
incb
aad
in
bswap
sbb
dec
push
xlat
arpl
inc
daa
inc
cmpl
jae
mov
insb
aas
je
add
scas
arpl
in
lahf
cmp
jge
rcr
stc
lcall
push
dec
test
inc
jle
std
lea
mov
push
add
inc
call
das
adc
je
cmp
cmp
and
out
xchg
cmp
rcrb
in
push
cld
pop
fimull
cmpsb
test
cld
incl
sarl
cmpsb
ficomps
lcall
mov
or
in
or
hlt
in
pop
pop
dec
ja
pop
loopne
jnp
daa
decl
popf
data16
sub
mov
imul
std
mov
leave
mov
xchg
nop
out
and
jo
pop
and
jg
push
repnz
in
std
icebp
adc
pop
rcl
pop
pop
test
mov
mov
mov
inc
in
aas
or
cmp
sahf
ret
in
pop
addb
jo
incb
cld
popa
sbb
insl
stos
push
fs
cmp
dec
aas
or
or
mov
movsl
inc
push
fstpl
inc
add
cmp
jge
cmp
outsl
xchg
mov
pop
stos
or
ret
pop
and
loopne
int3
or
dec
data16
popa
pop
mov
inc
shll
push
push
mulb
pop
imul
adc
lcall
addr16
lds
adc
sbb
call
sub
dec
lahf
mov
fs
ss
cli
jmp
push
stos
scas
jae
repnz
inc
dec
push
xor
dec
inc
int
cmp
cltd
lds
xchg
add
mov
imul
in
mov
jmp
cmp
or
push
out
mov
insl
push
and
ljmp
and
mov
jno
jb
xor
data16
sub
xor
aas
testl
push
pop
lcall
std
or
pop
push
xor
push
call
cmc
addb
jp
sub
pop
ds
seto
leave
ljmp
pop
push
add
jge
jns
jb
js
ljmp
or
mov
fistpl
cs
adc
or
adcb
dec
stc
xor
shl
push
call
stos
mov
jmp
or
cmpsb
xorl
add
jmp
fs
in
aas
mov
mov
push
jmp
or
mov
mov
jle
adc
pslld
pop
test
xor
jae
js
mov
test
cli
je
and
fnstcw
lret
fnstcw
pop
enter
scas
jmp
push
inc
std
sub
sbb
or
dec
cmp
lock
sub
jo
mov
cmp
push
fwait
pop
push
xlat
test
call
sub
mov
and
jno
stc
pop
and
sub
pop
xor
ljmp
xorb
xchg
mov
aam
push
jmp
das
pop
pop
stos
std
iret
in
frstor
sbb
call
push
inc
loop
lret
jle
mov
mov
add
jl
cli
es
nop
arpl
mov
or
ret
inc
mov
jno
lcall
loop
rcrl
lock
ret
sub
lahf
xchg
and
pop
or
adc
lcall
mov
pop
xor
mov
hlt
mov
scas
aam
pop
add
mov
lods
iret
adc
clc
sub
enter
jmp
dec
fiaddl
xchg
cmc
lcall
or
mov
mov
or
repnz
push
aas
std
inc
lds
mov
cmpsb
xchg
jno
xor
nop
incb
int
xchg
add
insb
push
add
test
xor
dec
xor
push
add
or
pop
jns
jecxz
scas
add
cvtdq2ps
xchg
push
call
lods
iret
inc
push
push
mov
bound
mov
mov
lcall
imul
add
jns
rcr
nop
out
sti
into
dec
xchg
addr16
xchg
add
xor
xchg
pushf
mov
mov
push
mov
cld
mov
mov
out
into
mov
pop
push
mov
rorl
subl
add
in
jbe
bound
dec
call
jg
pop
out
jecxz
mov
aam
mov
clc
pslld
fiadds
or
adc
sbbb
or
call
movsb
sbb
cld
pop
enter
pusha
icebp
push
mov
bound
inc
aaa
fcmovu
xchg
jnp
inc
rep
adc
incl
gs
das
push
cmc
out
stc
fbstp
lods
add
dec
cmp
leave
rorl
fisttps
inc
cmp
dec
sar
pop
test
cmp
repnz
mov
mov
jl
pop
jo
clc
mov
in
fdivrs
stc
jmp
push
inc
xor
mov
pop
jg
aad
push
jnp
mov
pusha
dec
dec
inc
pop
stos
push
adc
scas
add
rcrb
cmpb
dec
push
ret
xchg
incl
imul
decl
and
shrl
dec
mov
add
mov
loope
mov
adc
shrb
je
enter
adc
xchg
xchg
dec
aas
repnz
cli
pop
xchg
negb
and
jmp
mov
dec
movsl
popf
jecxz
cs
daa
mov
cld
pop
stc
jne
and
test
mov
aas
test
aam
cwtl
cmp
int
lea
adc
pop
jnp
dec
jmp
in
xchg
sbb
pushf
inc
xlat
mov
cs
sbb
jecxz
cmp
cmpb
fstpl
sub
jg
leave
subl
shlb
ljmp
pop
in
dec
test
fstl
mov
mov
lahf
fadds
rcrb
call
mov
push
push
gs
cmc
lret
push
sbbl
jbe
ret
pop
cmp
call
xchg
mov
lea
push
mov
lret
int3
jae
sbb
mov
incb
and
fstps
push
fadds
mov
incl
xchg
mov
je
outsl
and
xor
mov
mov
stc
test
jmp
or
jg
daa
add
lock
in
or
loope
xchg
pop
push
cwtl
in
lret
filds
jg
mov
sub
lock
les
pushl
push
mov
add
and
pop
in
inc
insb
sub
in
sqrtps
loop
out
mov
mov
mov
xchg
sar
fucomp
xor
inc
fwait
cmc
or
outsb
hlt
mov
lea
lcall
jecxz
loopne
pop
mov
popa
add
ss
or
call
jge
adc
jno
ds
inc
mov
dec
inc
scas
push
sub
out
jg
out
popa
subb
and
movsl
push
in
int
pop
mov
insl
cld
adc
inc
enter
mov
xor
ljmp
xorl
imul
fistpll
xor
pop
es
lods
mov
out
scas
loope
imul
add
ret
ret
out
xchg
xor
inc
les
inc
movsb
andb
mov
shll
aaa
fxch
loope
mov
mov
decl
and
loopne
sbbb
sbb
xor
add
push
adc
push
insl
xor
daa
decl
push
popf
andb
mov
and
cmp
mov
pop
stos
jbe
xor
adc
std
incl
rclb
ljmp
aas
loop
jns
clc
lret
ja
sbb
aaa
fbld
data16
or
add
scas
cmp
ljmp
ret
ljmp
call
or
cmc
mov
or
inc
push
call
int
in
xchg
mov
or
mov
sub
scas
and
pop
cltd
and
out
sub
pop
fiadds
mulb
inc
lock
les
enter
adc
mov
ja
cmp
pop
xor
push
sbb
xor
call
sbbl
dec
int
xor
repnz
push
push
push
nop
outsb
mov
stc
mov
inc
mov
fwait
icebp
jl
js
mov
movsl
sarb
pop
jns
stos
fwait
adc
or
test
das
cmp
iret
inc
dec
cmp
lahf
int3
pushl
nop
les
loop
jge
jecxz
jo
int3
lock
decl
pop
stos
cmp
lock
or
call
adc
rol
scas
outsb
mov
mov
cli
fs
cmp
dec
adc
ret
lock
jl
push
mov
cld
mov
loopne
sbb
push
add
loopne
lea
les
cmc
jnp
pop
stc
pop
inc
std
outsl
inc
push
push
jle
mov
incl
addr16
cmc
cmp
sub
cmp
jo
out
and
push
call
mov
push
cmp
push
in
stos
pop
cli
imul
mov
stos
mov
sub
ret
cmp
push
push
or
filds
jl
incl
insb
xchg
nop
clc
or
sbb
inc
or
rcll
pop
mov
gs
ljmp
repnz
insl
dec
data16
in
push
or
movq
into
imulb
lahf
sub
jae
imul
fwait
je
repz
fnstenv
sahf
lcall
inc
jnp
xchg
aam
mov
in
and
pop
jl
add
cli
pop
nop
fnstenv
mov
push
arpl
inc
xor
in
push
stos
ud0
in
bound
mov
pop
cmc
add
or
mov
pusha
and
add
iret
iret
test
in
repnz
xchg
add
sub
pop
and
mov
adc
xchg
cmc
jle
addr16
mov
and
aas
stc
mov
xchg
inc
sbb
cmpsl
adc
lcall
rol
dec
inc
push
mov
jbe
cmp
jle
jg
pslld
lahf
mov
aaa
gs
dec
test
incl
pop
inc
pop
popf
sti
cmp
loope
mov
mov
cmpsb
mov
call
fisttps
xor
cld
inc
enter
rcll
add
xor
call
inc
or
xchg
and
ljmp
adc
jge
cmp
fsts
mov
loopne
or
mov
push
es
mov
cmpsl
pop
stos
pop
daa
cltd
adc
loope
pushf
test
inc
pop
or
enter
out
scas
mov
adc
lea
call
dec
push
jl
sti
daa
test
jecxz
inc
test
repnz
cmp
mov
xchg
cli
repnz
and
decl
mov
cmp
mov
arpl
shlb
pop
and
sub
in
mov
pop
cwtl
je
xor
add
or
jmp
aam
loop
aas
stc
incl
fxch
xor
loop
dec
mov
jmp
ss
mov
push
and
inc
lods
dec
xchg
push
mov
inc
cmp
rcrb
sub
and
out
call
fcmovne
fsubs
sbb
and
add
or
mov
mov
jg
incb
push
cmp
xchg
pop
loope
inc
incl
xchg
jmp
pushf
mov
push
dec
mov
repnz
sub
adc
jp
sub
mov
fbstp
mov
xchg
fisubrl
fisttpl
lret
das
sbb
imul
jg
stc
lahf
mov
pop
stc
adc
scas
cs
mov
out
mov
int3
push
sub
mov
ljmp
or
push
loop
movsb
mov
imul
lahf
sbb
jmp
incb
filds
imul
arpl
xlat
movsl
lods
clc
fisttpl
pop
lea
or
ja
push
inc
adc
es
pop
inc
sbb
pushl
std
mov
sbb
popa
enter
mov
mov
in
lock
fs
call
xchg
and
sti
fmuls
pop
cmp
shl
aas
in
aas
shll
push
adc
dec
fists
scas
test
flds
and
jmp
aas
mov
mov
xor
mov
jp
sub
andb
aas
test
mov
sub
adc
enter
and
andl
jp
jmp
in
cmp
repnz
mov
popf
lret
and
or
pop
and
cld
sub
sbb
mov
out
clc
push
jo
and
movups
movsb
xchg
lret
outsl
pop
cld
movsl
mov
mov
push
sub
pusha
inc
loope
adc
cli
jae
xlat
and
aas
rclb
add
cli
jg
mov
sahf
jne
rcrb
jg
ss
ficomps
xor
repnz
repnz
std
or
cmpsl
shlb
arpl
mov
call
add
icebp
les
arpl
subl
pshufw
scas
loop
pop
adc
sbb
fldcw
and
aas
test
xor
orl
and
jae
and
and
arpl
test
jmp
jg
mov
aas
mov
ja
push
pop
test
pop
in
test
jae
repz
cmp
mov
lock
and
test
mov
fs
xor
jl
insl
test
shrb
incl
in
addr16
xchg
inc
mov
pop
jmp
jg
jmp
pop
cmp
adc
out
mov
pop
rcr
jg
aas
sub
mov
sarl
call
and
cmp
out
sbb
pushf
jmp
or
dec
incb
subb
insb
sub
or
jg
sahf
dec
push
bound
addr16
cld
xchg
lods
fldt
xchg
xor
pop
inc
pop
daa
fnstcw
sti
xchg
push
add
jno
das
dec
test
hlt
fidivrs
jns
sub
dec
int
adc
jmp
in
cmp
imul
xlat
gs
pop
in
jg
call
cmc
jnp
lcall
ljmp
mov
inc
jmp
mov
xlat
sbb
out
xor
test
mov
jmp
and
add
xor
mov
popf
push
stc
xor
pusha
push
inc
sbb
fsubp
xor
jmp
inc
dec
mov
sub
out
sbb
cli
sbb
cmc
fdivrp
decl
cmpsl
sbb
int3
xor
jecxz
out
xor
mov
sub
add
or
mov
push
add
mov
fcoml
fcom
jnp
push
fwait
mov
adc
and
aam
in
mov
adc
mov
ffreep
jnp
fsubrp
hlt
decl
adc
nop
xchg
or
mov
pop
jb
jle
inc
or
pop
xor
js
pop
adc
pop
pop
test
fisttps
and
je
cmp
orps
mov
cltd
xchg
push
loopne
adc
adc
iret
incl
cmpsl
lds
push
and
xchg
fidivl
icebp
pop
pop
mov
mov
sub
daa
jp
jne
scas
mov
mov
stc
sbb
jge
in
repnz
lcall
jns
sub
leave
push
and
xchg
cld
das
jb
aam
les
lock
roll
stos
mov
jg
aad
lods
call
in
or
in
pop
pop
fdivrp
jbe
pusha
xchg
incl
pop
or
and
sbb
jg
or
popf
fsts
xchg
pop
push
movsb
test
inc
lcall
push
aam
pusha
dec
xor
ds
lock
ja
outsb
in
lret
inc
push
imul
std
jmp
outsl
stos
xchg
adc
mov
movsb
notl
mov
add
int3
movsbl
je
ljmp
or
cmp
loop
dec
push
shl
or
mov
daa
pop
jno
adcl
decl
xchg
ffree
jmp
mov
cmp
or
notb
jmp
call
mov
ds
in
stc
lcall
out
das
imul
jne
adcl
incl
push
mov
lret
outsl
and
add
das
nop
mov
in
sbb
setno
pop
in
orl
popf
jo
inc
jns
cli
and
or
int
bound
or
pop
mov
jns
cmc
jecxz
dec
inc
ret
call
fistl
lods
jg
mov
pop
and
ljmp
xchg
jecxz
inc
pop
sbb
mov
aaa
sbb
and
mov
jnp
fimull
test
jp
lods
lock
nop
lahf
incb
pop
jnp
xchg
enter
lds
and
mov
inc
pop
mov
add
movsl
hlt
fwait
call
mov
jg
loopne
pushl
aaa
ja
push
inc
imul
pop
dec
xchg
test
cli
lcall
mov
sahf
sbb
and
nop
pop
sysenter
sub
inc
leave
incl
mov
nop
incl
cmp
or
roll
inc
movsb
sub
sub
idivb
pop
ret
pop
sbb
incl
adc
in
pop
aas
push
add
push
xor
les
cld
xlat
mov
mov
aas
pop
rcrl
call
decb
mov
pusha
sarb
mov
clc
inc
test
out
test
xor
incl
adc
fs
cmp
in
ffree
dec
pop
mov
iret
xchg
sub
push
fistpll
adc
outsb
mov
jb
aas
enter
jb
adc
push
add
lahf
mov
decl
out
cmc
fiadds
dec
stc
pop
and
lcall
cmc
sbb
incl
stc
pop
pop
cwtl
outsl
push
jbe
mov
mov
incl
mov
icebp
and
subl
cli
insb
cmp
dec
test
inc
call
pop
dec
lahf
mov
bound
and
or
sbbb
hlt
imul
mov
cmc
and
cltd
jmp
in
jns
mov
insb
jge
ret
and
je
jbe
lea
decl
xor
sbb
adc
and
xor
enter
dec
pusha
les
cld
cmpsl
lock
std
push
lcall
enter
in
rcr
cmp
jbe
ret
xchg
addl
xchg
sbbb
xchg
mov
call
test
mov
stos
sar
push
add
rclb
cld
adc
cli
repz
ficoms
mov
shll
xchg
adc
mov
fists
loopne
loop
sbb
icebp
mov
and
mov
xor
push
mov
mov
mov
jne
sub
popf
incl
in
adc
push
mov
in
lret
jmp
jmp
mov
and
or
clc
lock
shl
mov
nop
jmp
jle
rorb
int3
std
add
sbb
cwtl
add
inc
dec
clc
cmpsb
stos
push
gs
cld
dec
incb
fstpl
mulb
xchg
fstps
cmp
test
pop
or
jg
insb
das
xchg
loopne
sti
push
pushf
cmp
push
dec
fisubl
sarb
and
adc
ljmp
mov
in
mov
sub
iret
add
lcall
push
aad
nop
mov
push
inc
pop
inc
sbb
dec
sbb
dec
call
pop
pop
inc
fs
push
or
xchg
or
xchg
xor
cmp
pop
int
and
pop
dec
cli
imul
insb
iret
cmp
xor
aam
cmp
xor
rcll
and
test
in
adc
sbb
ret
es
jbe
pusha
cmpsb
icebp
sbb
cmp
xor
shll
dec
incl
mov
or
push
aam
fadds
and
xchg
jecxz
mov
jmp
mov
lock
call
cld
inc
sub
fldl
imul
add
jg
lahf
cld
das
pop
mov
in
mov
lret
test
incl
ja
jge
hlt
fwait
pusha
sbb
cmpsl
lods
daa
push
and
loopne
dec
pop
mov
and
mov
pusha
dec
enter
sbb
xchg
fstl
push
adc
lcall
hlt
test
pop
pop
ds
pushf
pusha
add
xchg
xchg
pop
test
cs
xchg
mov
mov
push
fisubrl
dec
and
decl
gs
xchg
mov
cmp
mov
in
stc
pop
inc
adc
fcmovb
dec
adc
jmp
xlat
lcall
aad
jl
out
xchg
xchg
pslld
mov
subb
sub
mov
out
cld
shl
into
inc
mov
cs
mov
inc
popf
lahf
lods
xorb
mov
fwait
add
or
sbb
cmp
pop
out
pop
push
cmpsl
insb
adc
iret
mov
mov
lcall
outsl
test
and
lahf
cltd
cmp
mov
adc
andl
fimuls
addr16
or
or
decl
sbb
in
sarl
insb
shll
inc
jne
mov
mov
ja
stc
mov
cmp
or
pop
incl
cmpsl
lret
xorb
push
xor
sub
repnz
nop
imul
or
jg
bound
mov
test
pop
shr
es
pop
inc
mov
xor
out
insl
add
jmp
inc
js
popa
es
out
decl
dec
dec
and
bnd
in
jl
in
or
pop
jno
icebp
mov
movsl
lods
jp
pushl
enter
popa
inc
xchg
push
and
test
lcall
inc
mov
jbe
iret
inc
test
xchg
pop
dec
push
jge
mov
outsl
incb
dec
sbb
pop
sti
std
inc
push
mov
ds
aam
cmp
or
call
rolb
fcomps
lret
pop
out
xor
inc
enter
adc
push
mov
mov
call
jae
insl
fildll
cmp
pop
incl
ret
mov
pop
inc
xchg
shr
and
int
cltd
pop
sbb
sub
pop
mov
adc
enter
jg
das
xchg
xchg
loopne
adc
xchg
repz
inc
sti
jl
and
push
dec
repnz
sbb
fadds
psubq
jae
dec
dec
daa
jmp
popf
pop
pop
inc
idiv
incl
stc
sti
stos
ds
push
add
das
into
push
inc
add
hlt
scas
inc
add
jmp
and
jne
jne
cmp
mov
inc
add
push
and
dec
push
xchg
in
xor
xchg
xchg
xchg
mov
xor
je
and
sub
aad
incl
cmp
repz
enter
sub
jl
fsubrs
aaa
rcl
xchg
in
sbbl
pop
lcall
outsl
sti
mov
xor
ret
mov
pop
xchg
jno
mov
mov
scas
xor
push
or
push
or
sbb
or
loope
mov
pop
ret
mul
pop
call
fdivrl
and
test
lock
mov
mov
out
call
fisubl
inc
push
adc
dec
pop
pop
enter
das
or
jbe
stos
sub
pushl
xchg
aam
lcall
xor
dec
mov
int3
push
jp
shlb
jg
and
and
in
loopne
das
add
outsl
std
push
xor
into
jg
and
pop
adc
jp
sbb
incl
mov
ds
in
inc
lods
jg
xchg
push
dec
lods
xchg
dec
cmp
add
dec
das
sub
call
ss
call
or
cmp
je
in
cli
inc
gs
lds
rclb
lds
lock
incl
scas
jbe
xor
jecxz
mov
inc
dec
xchg
sbb
pop
fld1
subb
xchg
cwtl
addr16
adc
shll
xchg
decl
pusha
jmp
stos
mov
in
stos
jne
cwtl
incl
or
mov
subb
mov
push
cwtl
pop
je
popf
loop
xchg
jmp
sbb
cwtl
xchg
push
jg
sbb
fs
push
push
sub
dec
sub
mov
filds
and
mov
pushl
push
or
jno,pt
cld
jg
ljmp
ficomps
xlat
cld
dec
fimull
pop
push
and
xor
adc
fadd
pop
ret
mov
sub
push
movsl
adc
inc
sbb
adc
mov
pusha
fxch
inc
fcomip
incl
mov
dec
and
push
mov
repz
dec
xchg
pop
ret
repnz
cmp
fldl
out
push
movsl
test
daa
add
push
cld
lret
jg
in
ret
or
jnp
cmp
psubq
xorb
push
pushf
jo
xor
xlat
cmp
decl
mov
sbb
add
nop
sbbb
and
lret
jmp
jmp
dec
scas
mov
push
ljmp
scas
fucom
dec
call
fwait
or
xorl
mov
sub
push
push
mov
pop
dec
add
in
pushl
ret
ret
mov
mov
fsubrs
cmpsl
lods
and
jp
leave
sbb
inc
loopne
aam
push
daa
pop
sar
aas
jecxz
negl
inc
je
jbe
scas
les
aas
add
clc
aaa
shrb
outsl
imul
aad
push
lret
pop
jg
shlb
and
in
leave
mov
xchg
sub
or
daa
jmp
out
imul
inc
xorb
es
call
int3
jg
mov
lret
out
pop
int3
dec
jp
cmc
dec
mov
ljmp
and
repnz
xorb
mov
cmpsl
in
aad
inc
mov
dec
idiv
pop
sub
push
xchg
push
mov
insb
inc
and
mov
jo
sub
or
dec
imul
es
aad
mov
scas
icebp
dec
stos
lret
movsb
lods
inc
inc
outsb
add
fcomip
decl
sub
outsl
div
push
cmc
loopne
es
add
movsl
inc
sbb
call
pop
mov
xchg
loopne
xchg
in
jns
add
ljmp
and
es
fwait
pop
add
sbb
push
stos
loope
out
jl
addr16
mov
sub
fisttps
fstpl
popf
xor
movsl
and
clc
and
jbe
clc
ljmp
pop
xor
mov
in
mov
mov
outsb
js
incl
and
cmp
vpcmpeqw
int3
and
jg
mov
es
ss
in
mov
dec
test
push
js
jle
call
push
cld
lret
in
mov
andl
frstor
adc
fcoml
call
push
jl
dec
div
loop
mov
push
test
cmp
jae
das
inc
movsb
pop
mov
mov
xor
bound
incl
lock
popa
adc
shlb
mov
pop
cmp
add
shl
add
xchg
in
push
or
mov
scas
and
dec
ret
jb
mov
clc
repnz
push
mov
clc
jns
lcall
pushl
lret
lds
push
shl
xor
or
sbb
add
std
or
cs
dec
cmc
ss
push
mov
int
movsl
popf
rcl
xchg
mov
add
sbbb
xlat
or
dec
adc
out
mov
dec
sbb
lcall
aaa
fsubs
mov
push
fcmove
data16
sub
pop
dec
mov
mov
xchg
xchg
loopne
inc
ror
and
xchg
xchg
adc
decl
insl
jp
dec
sbb
mov
jmp
orb
ljmp
insb
fwait
xchg
loopne
inc
stc
jae
push
bound
sar
call
push
push
jae
jne
mov
sub
mov
or
aam
loopne
rcl
or
add
add
sub
add
dec
mov
loop
hlt
or
fildll
sarb
pop
xor
xor
pop
inc
outsl
clc
jg
popf
aaa
sahf
or
jno
cld
ja
cmp
cmp
xor
mov
cli
fcomip
call
int3
sub
scas
fidivl
jne
daa
push
xchg
mov
fcoms
loope
mov
call
leave
mov
out
lcall
dec
add
insb
addr16
daa
push
mov
mov
mov
mov
andl
scas
mov
mov
lcall
cmpsl
mov
sub
sub
jl
mov
cmpsl
addr16
les
imul
jo
push
lock
ror
in
lcall
in
xlat
out
sub
sub
inc
pusha
insb
mov
popa
mov
sar
lods
push
cli
icebp
inc
clc
rcll
in
cli
roll
divl
cmp
jmp
shl
add
and
stos
imul
xor
xor
lods
shl
push
cld
pop
icebp
jecxz
adc
popf
mov
cmp
mov
lcall
lahf
mov
sub
sub
jbe
pop
in
add
sub
jne
add
incl
jle
imulb
shll
xor
xor
push
repz
les
mov
ljmp
and
push
clc
jbe
jmp
out
adc
and
call
loopne
fcmovbe
in
fdivs
rcl
cwtl
je
mov
xchg
pop
decl
jecxz
push
sbb
jns
ljmp
jmp
xchg
jne
and
out
enter
test
ljmp
dec
clc
js
dec
and
inc
lcall
mov
push
sbb
cmc
cmp
xchg
inc
pop
jg
mov
enter
decl
inc
cmp
test
fwait
mov
lock
pop
xchg
fdivl
add
or
dec
lods
adc
in
out
pop
mov
add
push
mov
loop
dec
adc
out
xor
or
sub
jno
jl
notb
nop
sub
or
push
mov
inc
pushf
sti
int3
mov
and
loop
incl
mov
push
roll
xor
aaa
sti
xor
xor
shrl
inc
fnsave
pushl
mov
cmp
test
subl
push
and
push
cs
cs
add
push
push
mov
add
sbb
repnz
mov
cld
fbld
push
pop
fwait
dec
push
sub
push
ljmp
push
repz
inc
lret
dec
ss
add
xchg
mov
shlb
push
incl
dec
mov
push
std
ds
lret
es
or
dec
divl
and
ljmp
or
cs
add
mov
inc
pushl
lds
inc
in
mov
pusha
fwait
daa
scas
cld
enter
jb
adc
jl
mov
cmc
cli
xchg
push
mov
add
test
push
xor
shll
mov
stc
ficomps
in
jge
je
test
ret
fwait
push
fnstenv
jmp
add
push
in
cmp
inc
xchg
negl
popa
inc
hlt
xchg
and
stos
sub
bound
mov
call
sub
add
fwait
insl
inc
inc
iret
push
mov
pop
js
std
cs
decl
jle
cltd
mull
fsubl
roll
lods
mov
pusha
push
xor
nop
andb
push
sub
adc
lret
mov
movsb
push
fdivs
xor
sbb
shrl
clc
call
mov
dec
mov
jmp
jg
loope
push
or
dec
pop
arpl
insb
xchg
fistpl
call
or
sbb
xor
and
push
outsl
mov
and
cli
icebp
jl
xchg
cmp
inc
stos
or
jecxz
and
cld
loopne
jb
ret
pop
pop
call
xchg
fstl
fs
push
mov
mov
fsubl
out
clc
out
mov
subl
std
mov
test
lock
xor
sbb
mov
mov
cmpsb
xchg
inc
xchg
pop
jae
cld
xchg
decl
pop
imul
daa
mul
clc
shlb
pop
add
clc
jg
gs
xchg
cmp
mov
popf
outsb
xor
add
adc
ljmp
mov
addb
mov
push
jge
pop
decb
pop
mov
jmp
cmp
scas
out
adc
outsl
inc
out
test
mov
call
mov
xor
and
xchg
pop
xchg
cltd
xchg
stos
cmp
pop
in
lcall
std
ljmp
jo
loop
jecxz
or
sub
inc
mov
fwait
inc
jecxz
cld
dec
adc
icebp
push
scas
pushf
les
loope
ljmp
mov
aam
repnz
mov
mov
lcall
fnstsw
mov
iret
adc
pop
test
push
sbb
decl
dec
pop
iret
movsl
push
and
dec
inc
insb
out
loope
negb
push
or
inc
daa
inc
inc
repz
push
xor
in
insb
ljmp
push
mov
lret
nop
inc
outsb
jne
jbe
aaa
sub
fwait
jle
out
jnp
out
adc
decl
adc
frstor
jno
pop
mov
xchg
mov
cwtl
push
lret
jp
scas
outsl
xor
fists
test
mov
xor
cld
push
adc
jle
sarl
lcall
push
adc
mov
dec
jns
stos
dec
mov
dec
std
inc
leave
rcll
sbb
bound
cmp
pop
cs
cmp
outsl
fsubrs
pop
cwtl
pop
ret
stc
incl
mov
jne
shrb
dec
cmp
lahf
ds
popa
adc
pusha
xchg
jae
popf
mov
adc
pushl
shl
fdiv
sbb
aad
test
pushl
xchg
mov
shll
push
xchg
push
shr
das
cmovns
shr
pop
jne
decl
push
fdivr
jns
sti
shr
add
jae
fisubl
mov
sbb
sbb
cmp
xor
enterw
xchg
decl
imul
mov
jecxz
mov
mov
lret
adc
jg
dec
test
sbb
lcall
repnz
lahf
adc
adc
sub
iret
mov
push
push
mov
ljmp
sar
mov
rorl
call
pop
mov
adc
popf
sub
push
add
leave
mov
in
lcall
dec
adc
pushf
shlb
idiv
cmpsl
shll
rcl
in
pop
in
add
sub
xchg
rcrb
arpl
mov
ja
std
cmpsb
xchg
push
out
fs
idivl
repz
enter
and
pop
test
call
push
jge
scas
lock
movsl
ds
fdivl
pop
mov
fisubs
push
mov
lret
je
pop
cld
fsubrs
sub
jo
rorl
aas
imul
incl
push
and
dec
pop
inc
cmc
in
mov
mov
cmpsb
push
scas
clc
jmp
dec
jg
sub
jmp
daa
pop
adc
mov
push
xchg
cs
lcall
mov
jg
int
push
xchg
adc
push
outsb
jp
ljmp
ljmp
lock
in
outsb
or
arpl
xchg
ljmp
adc
sub
rcl
mov
pop
and
jno
cmp
call
ficompl
xchg
in
adc
dec
roll
pop
add
dec
cmpsb
aas
dec
jne
sbb
call
scas
xchg
test
pop
hlt
lcall
jnp
mov
inc
ss
mov
pop
imul
repnz
dec
imul
incl
mov
mov
mov
add
addr16
jg
sub
aas
and
int3
xor
stos
bound
sar
jle
xchg
pop
jecxz
test
jg
or
lods
add
jle
sbb
jo
hlt
fs
or
incl
iret
ja
adc
pop
nop
sar
pop
pop
rcll
mov
aad
lea
push
jae
incl
add
fs
sti
cli
fldenv
das
lock
pop
jle
mov
lods
iret
stc
pop
and
pop
lods
out
mov
mov
adc
popf
call
mov
inc
decl
icebp
aas
mov
mov
movsb
out
lcall
or
out
rol
lds
push
xchg
push
lahf
dec
fwait
hlt
test
mov
xor
shrb
or
add
lock
mov
sub
insl
outsl
roll
pop
pop
lea
lds
dec
lret
fistpll
mov
pop
stos
mov
xchg
call
cmp
mov
sub
jg
lock
or
mov
int3
jle
hlt
push
std
rcrb
or
sub
dec
and
dec
dec
xchg
aad
sbb
loop
or
stos
in
imul
cli
xchg
inc
xor
push
dec
outsb
jno
push
outsl
mov
icebp
mov
ret
ljmp
ja
jns
cmp
mov
outsl
scas
mov
xor
push
jmp
lcall
push
outsl
pop
dec
popa
xchg
out
bound
bound
bound
imull
xor
aam
dec
cmp
or
jl
icebp
push
enter
push
mov
xor
shlb
mov
cwtl
pop
sbb
pop
cmp
sbb
mov
sub
cmp
jae
adcb
aad
xor
lahf
sbb
push
loopne
bound
dec
mov
ljmp
xchg
es
sub
xor
cmp
push
add
cmpsl
and
call
lret
push
fcompl
popf
rclb
jg
mov
je
xor
lock
jp
push
add
loopne
mov
ret
cmp
mov
rcl
cmp
clc
in
add
pop
sub
pushl
andb
sahf
cmp
testb
movsb
xchg
inc
sbb
pop
out
mov
adc
or
mov
pop
pusha
or
pop
es
fldcw
call
jbe
jb
jnp
push
ljmp
hlt
test
push
mov
popf
loopne
jmp
std
sub
pop
popa
inc
dec
jno
scas
ss
ret
adc
pop
mov
pop
jge
cmc
pop
in
adc
lret
cs
cld
inc
push
call
call
ficompl
mov
nop
rcr
and
out
mov
pop
adc
dec
pop
fsubr
jle
jle
aaa
fildl
sahf
add
das
xchg
push
push
loope
push
leave
divl
sub
loope
mov
inc
adc
shlb
inc
imul
pusha
cltd
lret
dec
sub
push
xchg
ljmp
mov
fwait
and
pusha
inc
in
test
xlat
lods
call
imull
fwait
outsb
lahf
notl
mov
test
jmp
int3
outsb
xchg
test
notb
pop
push
data16
dec
inc
cmp
or
push
mov
out
lcall
out
sbb
add
cmpsl
mov
jl
adc
xor
jg
filds
pusha
or
xchg
ljmp
incl
test
add
mulb
cli
add
push
jae
dec
repz
stos
sub
movsb
inc
ror
jmp
inc
shrb
pushl
cmp
push
sbb
xor
roll
icebp
dec
lods
cs
aad
ret
ljmp
and
les
data16
or
sub
mov
enter
add
mov
int3
clc
mov
pusha
daa
xor
lret
test
inc
or
fisttps
lcall
sbb
fdivr
jmp
int
cmp
stos
jne
mov
or
inc
jp
loop
sub
imul
xor
dec
inc
je
fcomps
push
push
xor
stos
mov
pop
pop
cltd
mov
shll
imul
iret
out
incl
mov
int3
dec
dec
ret
inc
das
jmp
rcrl
xor
enter
aas
cmp
loope
lret
inc
fsubrp
dec
dec
mov
jecxz
jb
in
ljmp
imul
jecxz
sbb
outsl
call
cmp
pop
ja
fists
jecxz
lcall
fsubrs
pop
adc
decl
and
imul
sub
lods
or
imull
sbb
jecxz
dec
push
call
sahf
push
mov
and
or
lahf
pop
ret
add
enter
lcall
mov
adc
sub
cmpl
and
jmp
fbld
mov
jo
push
or
cld
jg
sti
andb
aad
jmp
xchg
cmpsl
sub
scas
das
out
push
mov
insb
in
jbe
jmp
pop
js
aas
inc
xchg
adc
gs
loopne
decl
test
adc
cmp
add
mov
jecxz
sbb
imul
nop
adc
cwtl
mov
adc
out
es
push
xlat
js
out
loop
mov
stc
loope
push
sbbb
fimull
dec
mov
sti
mov
and
call
pop
pusha
mov
xchg
mov
push
jle
ja
push
sub
pop
inc
cmpsl
xor
enter
hlt
jl
cmpb
adc
scas
xchg
pushf
test
mov
dec
and
inc
push
pushf
jg
jo
test
roll
cmp
arpl
xchg
je
mov
jo
push
test
decl
sbb
mov
mov
out
mov
dec
imul
xlat
add
push
add
jg
ljmp
stos
cmp
cmp
stos
dec
dec
das
mov
jo
cmp
sti
ja
call
add
fimull
fs
dec
and
mov
xor
fidivrs
fistpll
inc
adc
out
dec
aad
lret
ljmp
rclb
ss
incl
adcl
pop
inc
loop
shlw
cmp
mov
repnz
jp
fs
les
push
rcl
out
ret
int3
cmpsl
mov
jbe
ljmp
test
push
ds
adc
mov
jl
push
rcll
in
rclb
cld
ljmp
lcall
cmp
imul
dec
sub
in
mov
fsubrp
cs
jne
dec
out
std
aas
in
mov
adc
or
or
in
xor
lret
and
mov
adc
mov
mov
decl
test
sbb
mov
xchg
loope
mov
in
sbb
pop
ficompl
and
stos
sub
fistps
inc
fiadds
inc
cmp
insb
dec
mov
or
jb
sbb
push
mov
lret
xchg
ljmp
mov
mov
mov
icebp
or
mov
decl
mov
addr16
hlt
mov
test
jno
adc
fstpl
add
lret
les
sub
cmpsb
in
insb
and
cli
dec
push
call
bound
jne
hlt
xchg
dec
test
out
and
lods
pop
jl
out
rcll
adc
pop
pop
call
inc
loope
out
jge
ds
and
mov
adc
mov
mov
mov
mov
mov
mov
stos
adc
or
xchg
scas
fs
jecxz
pop
sub
mov
xlat
into
iret
mov
cmp
incl
push
mov
popfw
pop
xor
outsb
pop
push
iret
outsb
pusha
xchg
jbe
lea
idivl
lcall
push
pop
cmpsl
sbb
rolb
out
or
scas
addr16
imul
dec
mov
ja
and
aam
sbb
cmp
mov
ljmp
lahf
frstor
aas
nop
decl
xchg
lock
dec
sub
add
scas
repnz
inc
dec
mov
mov
movsl
sahf
decl
inc
pop
mov
lock
shll
jle
inc
cmp
fwait
xor
bound
scas
mov
add
mov
jl
cld
das
and
mov
loope
cmpsb
jbe
test
dec
dec
pop
dec
outsl
sbb
jg
ljmp
stc
fldcw
xor
pop
add
bound
pop
pushf
movsb
xorl
lcall
dec
mov
push
cmp
jg,pn
jp
test
adc
jbe
imul
sub
fcomip
sub
fstl
fldcw
dec
jecxz
jae
lcall
lahf
pop
inc
push
push
ljmp
push
and
mov
pushl
ficoml
stos
subl
and
bound
xchg
or
popf
in
dec
dec
or
lcall
ljmp
jle
out
cmpsb
ljmp
pop
rol
fbld
arpl
repz
xchg
rcrl
pop
jmp
xor
test
dec
sti
andl
pushl
push
dec
pop
gs
cmp
sbb
jg
jmp
lods
inc
cmp
mov
pop
imul
jne
sbbb
pop
test
ljmp
cli
push
inc
popl
test
rol
fidivrl
jbe
adcb
or
imul
pop
insl
dec
fbld
adc
cmp
jg
jno
and
ljmp
xchg
push
mov
scas
push
dec
lds
inc
bswap
cmp
fwait
pop
cli
js
jmp
pop
aaa
mov
es
cmp
repz
inc
dec
data16
jle
mov
std
cld
fnstsw
jne
or
adc
sub
ljmp
lahf
subl
jp
inc
sub
jp
mov
lcall
test
mov
push
xchg
mov
inc
xor
sbb
sub
lcall
insb
fwait
adc
xor
fisubl
sbb
clc
pop
shlb
in
adc
aam
incl
push
adc
adc
mov
jns
sub
f2xm1
jmp
rcrl
push
and
add
adcb
decl
mov
fistps
dec
mov
enter
mov
adc
enter
loop
xor
sbb
dec
nop
dec
jnp
ds
insb
mov
mov
or
pop
rolb
xchg
je
jno
inc
popa
jecxz
pop
in
lahf
or
into
lahf
inc
cmpsl
mov
pop
pop
cmp
stos
ljmp
les
loopne
sbb
insl
call
add
mov
aam
jle
incl
aas
ljmp
test
mov
imul
incl
repz
test
or
mov
in
cmp
or
pop
cmp
jmp
jb
push
in
mov
neg
adc
push
pop
mov
and
out
jno
push
out
jl
push
add
mov
xlat
xor
mov
mov
jecxz
dec
pop
or
or
pusha
lret
inc
add
lcall
ficomps
cwtl
inc
push
fmul
mov
push
cld
inc
xchg
pushl
or
jmp
inc
or
and
popa
mov
fisttpll
pop
push
push
mov
jmp
cmp
jmp
jns
loope
jmp
into
ss
mov
xchg
enter
pop
aad
add
imul
dec
fdivrs
add
fwait
pop
mov
xor
incl
push
mov
repz
test
ret
inc
mov
imul
stos
ljmp
and
jg
das
gs
cltd
popf
xchg
xor
sar
incl
mull
je
mov
mov
adc
out
fucomp
movsl
or
lock
js
mov
dec
push
lods
push
andb
loopne
pusha
sub
outsl
incl
or
inc
mov
mov
lock
ja
mov
mov
or
cmc
lahf
pop
sbb
adc
xlat
mov
pop
mov
pop
or
push
ds
pop
lock
es
enter
int
in
sbb
lods
xor
adc
imul
daa
into
fnstcw
shll
dec
inc
pop
incl
cmp
sti
cmp
pop
adc
cmp
fcoml
movsl
mov
and
add
fisttps
mov
jmp
int
ret
lds
sbbb
addb
dec
mov
imulb
lcall
lds
xor
mov
or
sti
cmc
sub
pop
cli
adc
cmp
or
incl
fistl
pushf
pop
out
mov
ljmp
adc
xor
push
push
cmp
lods
push
and
fs
and
ja
shl
push
mov
cvtps2pi
jmp
lcall
add
ret
cmpsl
test
mov
mov
cmpsb
adc
inc
dec
inc
aam
mov
push
add
test
and
mov
push
cld
daa
divl
in
icebp
xor
mov
daa
mov
mov
mov
pop
into
test
cltd
dec
arpl
pop
lcall
hlt
js
pop
or
out
dec
pop
data16
add
jmp
hlt
lcall
outsb
dec
repnz
push
js
mov
js
push
incl
mov
xchg
xor
incl
push
insl
jae
sbb
xor
pop
lcall
lea
mov
ds
jp
rolb
test
cmpsb
out
xor
popa
outsb
cmp
fcomip
inc
jl
mov
sub
xor
loop
mov
push
lock
mov
lret
xor
inc
fs
add
das
daa
out
dec
ds
adc
decl
in
rorl
push
std
cltd
sub
sub
cmpb
push
ror
jle
jo
cmp
out
and
adc
ljmp
and
push
repnz
lcall
sub
inc
mov
mov
mov
add
rorb
jmp
call
push
das
clc
jmp
mov
pop
js
shlb
mov
test
movsl
push
fndisi(8087
cld
lcall
jne
out
inc
add
ret
loopne
or
inc
inc
jb
push
adc
test
pop
mov
sub
mov
push
fisttps
in
lcall
call
imul
add
xchg
int
xlat
pop
sub
mov
lods
int
inc
jmp
adc
cmc
loope
xchg
aas
push
jne
mov
fcomip
movl
enter
sub
xchg
movb
jge
cmp
scas
test
clc
pushl
or
mov
sbb
das
sbb
lods
push
mov
call
jne
xchg
fcomp
push
mov
movsl
pop
mov
sub
cmp
ds
ret
clc
incl
jb
inc
xchg
leave
push
lds
fimuls
imul
scas
movb
xor
outsl
jge
in
in
inc
adc
cmc
pop
fldcw
scas
mov
jmp
cmpsl
jne
cmpsb
mov
in
jnp
dec
cmp
mov
mov
incl
jne
mov
daa
js
int3
nop
pop
mov
repz
call
in
lock
incb
inc
push
lock
out
das
add
imul
pop
jl
adc
cli
mov
inc
cmp
push
and
pushl
or
sbb
movsb
push
cmp
out
xor
adc
ljmp
mov
std
pushl
popl
fdivr
fimuls
push
repz
and
out
cmpsl
test
cmc
sbb
or
pushl
es
and
sarl
fmul
dec
btc
xor
xor
test
cmp
fcoms
popa
push
leave
ret
daa
or
or
es
pusha
sub
push
data16
pushl
push
insb
push
cmpsb
cmp
insb
mov
cli
mov
leave
sarl
lods
sub
inc
int3
mov
scas
mov
lret
mov
jg
jmp
jne
cmp
lret
push
outsb
int3
aaa
mov
ss
fdivr
in
dec
add
adc
sbb
xchg
xor
jg
cmovno
movsl
iret
add
hlt
jg
aas
je
orl
into
rcrb
fisttps
dec
push
in
into
aaa
call
dec
or
xor
out
xlat
sub
xor
test
popf
incl
enter
lods
out
ret
pop
adc
je
xor
ljmp
mov
jmp
fwait
xchg
mov
xor
pop
dec
ret
add
std
lock
add
jnp
inc
push
adc
add
push
call
inc
sbb
push
aas
dec
xchg
pop
ja
lret
xor
ret
or
lcall
xchg
ss
roll
inc
cwtl
fcomp
rclb
clc
cmp
imul
mov
notl
adc
andb
dec
pushl
jecxz
xor
or
das
pop
shrl
in
rorb
aaa
std
in
mov
or
int3
popl
mov
mov
cmp
bound
loopne
aaa
push
sbb
push
gs
test
dec
incb
mov
sub
ljmp
fisubrl
mov
mov
leave
and
pop
push
mov
icebp
ja
ljmp
pop
mov
mov
je
cmp
and
test
sub
aas
or
icebp
jmp
pop
cmp
nop
jbe
test
jbe
mov
shl
rclb
cmp
jg
call
imul
pop
rorl
fs
push
outsl
cltd
push
jno
and
movsl
decl
rol
push
outsl
in
jo
xor
les
loop
das
or
dec
push
mov
dec
adc
mov
rol
ja
lcall
es
adc
xlat
add
pop
pop
insb
pop
enter
insl
jno
adc
adc
jae
or
mov
cwtl
jle
and
mov
push
sbb
add
pop
leave
data16
cmp
mov
ret
and
pcmpeqd
popf
jno
fs
stc
and
arpl
sub
rcrl
adc
loopne
sbb
outsb
adc
in
in
adc
and
ljmp
sub
cmp
incb
es
int3
int
out
mov
and
inc
repnz
push
adc
and
nop
hlt
ret
pop
icebp
or
movsb
mov
inc
daa
cmp
jg
ds
call
or
aam
imul
inc
push
in
mov
in
push
push
loop
lods
test
movsb
cwtl
pop
mov
push
pop
bound
pop
cli
mov
decb
dec
or
xchg
jnp
push
jg
cmc
filds
sub
mov
lcall
ret
divb
xchg
pop
push
int
cmpsb
dec
add
stos
mov
clc
movl
into
dec
jl
cltd
out
sbb
test
pop
pushl
out
lock
addr16
aam
daa
pop
cld
cld
mov
xchg
pop
and
xchg
adc
inc
pop
mov
popa
push
dec
cli
inc
xor
xchg
dec
call
push
dec
xor
xor
icebp
mov
mov
jbe
jb
fsubl
outsb
cmpsl
xchg
idivb
incl
xor
out
xlat
int3
insb
jg
and
inc
mov
push
sub
adc
mov
lahf
inc
pop
pop
adc
incl
push
and
fiadds
out
sahf
test
pop
cmc
pushf
jnp
dec
aas
insb
pop
pusha
rolb
mov
call
pop
mov
jge
mulb
cli
outsb
adc
jo
lods
call
insb
xchg
cs
in
test
call
mov
iret
cltd
pop
push
in
insl
jmp
fldl
outsl
mov
mov
mov
pop
into
add
mov
insl
sub
insl
out
pop
ja
lods
insb
ror
incl
js
ret
mov
push
es
push
push
cwtl
jbe
push
adc
ljmp
nop
sbb
push
xchg
clc
pop
and
movsb
popf
or
inc
xchg
add
add
das
ud0
call
jecxz
push
pushf
popf
test
mov
inc
ljmp
and
outsl
in
pop
aaa
cmc
sub
gs
mov
mov
je
jnp
and
adc
adc
incl
imul
js
add
lock
test
mov
call
mov
push
inc
pop
aad
adc
cmpsb
sub
imull
les
loop
push
imul
arpl
sub
js
sbb
push
in
mov
aas
jp
cmp
movsb
jmp
add
fwait
cld
jmp
mov
jo
outsl
mov
xchg
jle
cmpsb
mov
rcrl
cmp
test
out
pop
push
mov
mov
das
jle
sbb
pop
push
into
sbb
fisubrs
fs
incl
xor
rorl
dec
dec
sub
inc
xchg
cmp
inc
xor
inc
das
sti
decl
je
pop
enter
iret
sahf
fildl
dec
addr16
xchg
push
testl
clc
seta
jnp
and
fistpll
push
pop
mov
mov
js
insb
pop
xor
lcall
lret
test
fldenv
inc
xchg
out
loopne
aas
stc
add
cmp
insl
scas
pshufw
lds
inc
fistpl
mov
cmpsl
mov
jg
mov
loop
xchg
scas
out
dec
in
xchg
or
and
add
mov
ja
out
cli
mov
leave
dec
into
inc
mov
js
add
test
sti
incl
xchg
popa
lahf
mov
jmp
shlb
lcall
out
les
jo
push
xor
loope
in
jbe
idiv
scas
sbb
incl
add
int3
lock
insb
inc
or
dec
dec
xchg
nop
aaa
cwtl
xchg
sahf
push
xor
jb
cld
adc
into
rcrb
or
xchg
je
and
incl
mov
mov
mov
popa
jg
fnstenv
and
in
popf
pop
mov
das
push
popf
imul
lcall
mov
insb
mov
mov
mov
pop
xchg
and
rcr
mov
outsl
jmp
jmp
shll
adc
fwait
mov
popa
test
std
lcall
add
lds
push
orl
jnp
call
in
add
dec
out
cmp
or
stos
ret
nop
mov
into
cwtl
adc
outsl
add
adc
xor
ss
mov
adc
mov
cmp
stos
aam
sub
decl
jno
lods
lret
lret
or
in
das
inc
fisttpll
inc
dec
sbb
movntq
mov
sub
aas
mov
dec
pop
cmp
and
mov
lret
dec
jb
popa
sub
add
call
ficoms
mov
mov
xchg
pop
cmp
popa
sub
mov
ljmp
cmp
lret
push
pop
rcrl
idivl
lret
dec
mov
insb
sbb
fdivr
pushl
daa
imul
or
sub
hlt
lcall
mov
jb
cmp
xor
fnstenv
jge
out
leave
pop
test
push
cmp
call
adc
mov
push
pop
inc
push
dec
jo
out
bound
ljmp
push
add
lahf
sbb
lahf
jae
pop
jb
aaa
rep
jp
lds
outsb
inc
and
adc
sahf
adc
jg
inc
xchg
call
push
dec
xor
jmp
flds
in
stc
mov
call
xchg
daa
mov
lahf
mov
lods
xchg
loope
mov
mov
xchg
or
or
repnz
jl
cld
jmp
pusha
outsb
xchg
add
cmp
lds
pop
mov
lock
outsb
dec
push
xor
dec
test
stos
shlb
or
subb
aam
and
push
cltd
jbe
push
cmp
fldl
mov
push
insb
inc
fstl
fildll
xchg
mov
mov
and
les
hlt
decl
repnz
push
repnz
cwtl
gs
aad
clc
cmpxchg
sub
dec
aad
fcomps
pushl
xchg
push
and
xchg
inc
lock
xchg
out
inc
xchg
sbb
mov
dec
incl
rorl
rorb
sub
dec
push
xor
cmp
popf
ljmp
outsb
jae
test
std
mov
push
imul
mul
jle
pop
xchg
inc
mov
cld
call
sub
cmpsl
jg
mov
inc
idivb
add
jmp
xchg
scas
outsb
testb
mov
mov
xor
fistps
mov
call
sub
mov
xchg
roll
addr16
shr
mov
add
xchg
xor
jmp
mov
jge
lods
nop
jnp
jg
les
jle
fidivl
cmp
xlat
xor
pushl
or
negb
test
mov
xchg
cwtl
fisttpl
incl
into
push
inc
adc
jo
jo
out
jb
mov
mov
jl
mov
call
mov
or
rorb
popf
xor
push
les
test
mov
das
and
jecxz
ret
xor
add
call
xor
stc
mov
mov
pop
xchg
jnp
sbb
data16
nop
jge
fsts
shl
ret
dec
mov
cli
test
enter
scas
mov
decl
ficoml
lea
and
pop
inc
std
push
pop
out
ja
ss
mov
je
xchg
incl
mov
fbstp
ficoms
mov
fnstenv
jl
decb
les
lret
lcall
mov
loope
xor
inc
pop
insb
popa
ret
sbb
xacquire
mov
add
aad
adc
lahf
pop
inc
inc
xor
stc
mov
add
incl
jo
repz
bound
sub
pop
adc
dec
movsl
push
fwait
lea
enter
call
scas
jmp
rcll
dec
adc
cltd
jne
adc
test
call
andl
imul
lea
jbe
test
insl
movsl
lret
lcall
sbb
push
sub
daa
adcl
aaa
iret
mov
lret
les
mov
loope
std
fisttps
hlt
xchg
adc
call
jnp
jmp
ljmp
int3
or
aad
ljmp
test
pop
into
mov
aam
out
inc
aas
in
call
pushf
and
inc
cmp
mov
std
jg
clc
in
add
adc
adc
ljmp
int
addr16
pop
sbb
cwtl
idivb
js
push
decl
push
cmp
cmc
stos
sub
negl
xchg
int3
mov
jo
jle
ret
lock
incl
inc
outsl
movsl
out
cmp
cmc
sub
pop
fisttpll
outsl
mov
mov
in
add
addr16
mov
ljmp
cli
sub
jbe
shrb
adc
push
or
cwtl
pushl
xchg
mov
arpl
pop
mov
jo
xlat
mov
call
dec
xchg
outsl
inc
lock
sub
adc
xchg
mov
int3
js
mov
ljmp
adc
int3
sti
mov
sahf
dec
or
push
xor
cld
pushl
repz
std
cltd
push
sub
xchg
and
push
iret
outsl
mov
push
dec
add
mov
adc
in
mov
call
and
fisttpl
push
jmp
xchg
push
sub
sub
or
push
xchg
jg
add
push
dec
mov
notl
jnp
lock
subb
sti
push
push
add
arpl
pop
sub
sub
clc
pushl
lods
sub
stos
inc
mov
cmp
pop
jecxz
lods
sub
ds
or
idiv
scas
rolb
and
fcmovbe
je
cs
xorl
call
or
adc
jnp
push
adc
dec
data16
negl
fcmovb
dec
xor
cmp
mov
popa
out
mov
mov
dec
sub
mulps
decl
jno
pop
cli
jno
fmull
push
cs
and
pop
jo
or
fsts
dec
test
test
and
sub
mov
loope
jle
incl
push
iret
call
lock
and
das
rcll
stos
mov
cmp
jle
mov
xchg
xchg
cmp
and
xor
add
arpl
rcrb
lcall
add
fdivrs
xor
cltd
ss
incl
mov
pushf
sbb
imull
fidivs
lahf
adc
adc
outsl
jb
rorb
mov
cli
adc
out
xchg
aas
push
aaa
shlb
movsl
mov
movb
mov
fsubrs
mov
and
aas
loopne
sti
ret
ljmp
mov
xchg
enter
adc
xor
push
call
jo
inc
idivb
fisubrs
ret
mov
mov
outsl
mov
and
lahf
inc
cli
jmp
pushl
roll
flds
aaa
imul
sub
or
aad
pop
fwait
inc
cmp
inc
xchg
loop
inc
icebp
out
xor
mov
push
sar
js
in
test
decl
xor
loop
sub
ds
add
pop
data16
sub
jp
pop
jne
jecxz
incb
ja
scas
ret
jno
insb
jb
mov
imul
cmp
mov
out
clc
out
call
cmc
mov
dec
inc
mov
loope
in
pop
xchg
dec
enter
int
loope
lcall
cmp
loopne
sub
movd
comiss
jns
jae
mov
jmp
fsin
pop
sbb
cld
jno
fucom
dec
or
daa
sbb
pop
jbe
loope
mov
push
hlt
jmp
pushl
unpckhps
cltd
into
stos
mov
scas
push
dec
adc
pop
cmp
cli
lcall
ja
in
les
fidivrl
or
bound
jns
subl
enter
push
ret
xchg
xor
xchg
arpl
shll
xor
scas
lock
fbld
std
decl
add
fmull
jg
insb
mov
mov
pusha
pushf
jg
in
lahf
decl
imul
mov
iret
inc
into
jg
lds
dec
insb
mov
ljmp
mov
jmp
cli
and
lahf
movsl
repz
mov
sti
pop
xchg
aam
adc
pop
xor
cld
jl
ret
cs
jge
fisubs
imul
lea
mov
out
and
xchg
mov
adc
jg
fnsave
test
call
inc
jns
test
inc
add
adc
or
outsb
movsl
sub
push
lea
xchg
xor
mov
pop
lret
call
mov
fbld
bound
mov
lahf
bound
cld
ds
iret
bnd
cmp
fiaddl
std
mov
out
test
fst
gs
test
ret
cli
decl
push
jo
div
inc
push
lds
push
aam
testl
incl
xchg
incb
jb
test
mov
in
movsb
int
xor
adc
or
icebp
aas
lock
nop
out
lea
call
or
sub
jo
lods
icebp
mov
sub
lahf
pop
adc
jbe
das
incl
push
sbb
jb
push
mov
jmp
sahf
out
push
lcall
xchg
dec
popa
addl
and
movsl
mov
adc
jno
shll
lods
out
push
pushf
nop
movsb
jecxz
lahf
sbb
ss
aas
lcall
mov
movsl
xchg
fadds
mov
enter
call
mov
in
aas
or
cmp
fxch
jo
pushf
dec
push
sbb
adc
aas
mov
arpl
test
aaa
mov
jmp
ret
inc
outsl
pop
mov
inc
pop
inc
sub
sbb
push
lret
ss
aam
cmp
add
loopne
or
jle
mov
loop
clc
lds
lods
gs
jg
cmc
ljmp
or
mov
inc
stos
xchg
cmp
xchg
jns
ret
fldl
jecxz
or
aas
ja
push
incb
dec
out
shl
int3
dec
inc
iret
pop
jmp
jg
and
cmp
popl
or
das
lcallw
clc
decl
out
jl
pusha
aas
lret
stc
divl
jb
movsl
pandn
call
stos
aaa
jns
mov
cli
xor
roll
int3
movsl
pop
cmp
imul
or
mov
loope
das
mov
inc
data16
dec
inc
testb
decl
jbe
xor
jp
dec
push
scas
xchg
in
push
adc
stos
orb
dec
xor
jmp
cmp
lahf
lret
shlb
or
ret
pop
mov
add
push
inc
aaa
or
pop
cmovne
or
ja
pusha
int3
scas
icebp
push
mov
ss
sub
fucomi
shl
push
or
fbstp
pop
jbe
or
inc
add
jle
clc
sbb
mov
inc
mov
mov
jmp
icebp
jns
in
jecxz
adc
enter
lahf
jmp
xchg
nop
pop
cmp
ljmp
bound
cli
and
jg
add
cmpsb
pop
push
add
aad
lcall
imul
jmp
add
mov
push
out
mov
mov
fisubs
pop
arpl
jle
cltd
xlat
movsb
pop
push
pop
out
dec
ja
mov
jns
pop
push
in
mov
mov
mov
scas
in
sbb
add
jbe
inc
sbb
sbb
push
dec
sbb
or
shl
dec
mov
push
pop
aaa
sub
ds
incl
addr16
scas
or
mov
outsl
clc
mov
aas
test
fcompl
cld
jge
push
adc
mov
jmp
lods
push
adc
scas
lds
mov
push
pop
and
pop
arpl
cltd
jbe
sti
setne
lahf
jg
dec
mov
stos
push
das
and
std
push
add
mov
arpl
aad
inc
pusha
cmp
inc
out
decl
xor
xor
stc
push
jecxz
ret
mov
or
jmp
sbb
sbb
jle
das
push
cli
lcall
cmp
xlat
cli
or
fildl
mov
inc
adc
fistpll
jns
add
es
xor
pop
das
adc
mov
popa
add
cmp
push
fdivl
in
mov
jg
out
dec
inc
outsl
sbb
push
scas
insb
fwait
sbb
sub
shrl
ds
cli
decl
leave
sub
cmp
jge
mov
mov
adc
gs
cmp
divb
mov
mov
negb
iret
push
add
sbb
or
and
cli
pop
sarl
add
push
inc
aaa
fbstp
and
cmp
jg
add
and
jg
mov
lods
dec
into
inc
mov
mov
push
ljmp
and
sub
fdivl
mov
inc
fisttpl
sub
push
inc
push
xor
cmpsb
and
xchg
cmp
cli
sti
in
mov
in
ljmp
sbb
loop
pop
into
push
sbb
lret
xor
fistpll
push
mov
hlt
xor
icebp
push
adc
xor
xchg
xorb
lcall
dec
decb
jle
cmp
push
sbb
push
icebp
cld
adc
fcmove
sti
dec
cmc
inc
sbb
pop
pop
push
mov
and
jle
pop
stos
insb
mov
xor
dec
out
jmp
arpl
pop
dec
in
inc
sub
lock
pslld
pop
dec
je
aas
mov
push
sub
mov
cmp
stc
decl
mov
jecxz
jo
shl
aas
push
test
rclb
adc
into
xchg
pushl
adc
jbe
jp
inc
cmp
xor
cld
out
movsl
inc
clc
xor
xchg
lahf
cmp
shrl
cmp
add
les
cltd
xor
mov
push
dec
adc
dec
movsl
das
dec
xchg
cld
incl
xor
mov
cmp
sbb
sarb
stc
psrad
lods
cmpsb
aad
stc
cmp
sub
loopne
enter
in
stc
and
cmpsb
or
in
inc
adc
je
popa
fldenv
lret
pop
mov
jo
das
jno
dec
and
jg
inc
lock
int3
mov
dec
jl
fnstenv
jg
pop
and
push
jl
sbbb
jp
addb
jo
adc
repz
cwtl
shrb
xor
mov
jae
xor
dec
mov
jmp
data16
das
dec
mov
outsl
sub
clc
inc
sbb
arpl
scas
outsl
pop
cli
pop
mov
lods
mov
mov
push
jmp
mov
test
xchg
ljmp
enter
ljmp
inc
fisubrs
popa
lcall
or
sbb
aas
sbb
loopne
mov
sub
pop
imull
test
subl
decl
inc
mov
fsubrl
mov
sar
inc
jg
pop
adc
pop
cmp
movsb
fistl
loope
adc
sub
mov
aas
orl
aaa
pop
movsl
pop
popf
dec
or
out
in
scas
cmc
lcall
incl
push
lds
sub
adc
mov
fsub
call
pop
das
and
inc
cmp
scas
and
pop
xchg
inc
scas
mov
sbb
mov
nop
aaa
jecxz
adc
dec
stc
sub
xor
mov
or
loope
mov
in
pusha
and
pop
xor
das
aas
movsl
fadds
sbb
cli
incl
sbbl
adc
pop
jne
push
dec
sub
ret
dec
repnz
jmp
call
pusha
xor
call
repz
enter
cltd
shrb
fiadds
les
pop
and
stc
push
test
mov
dec
adc
xchg
data16
and
imul
xorb
cld
pushl
in
shrb
in
cltd
mov
mov
pop
pop
or
mov
ret
dec
loope
cld
xchg
lds
mov
sub
lahf
lock
call
push
stos
psllw
stos
push
iret
das
push
cli
fstl
ljmp
int3
test
mov
pop
pop
pop
mov
data16
pop
sub
aas
add
sbb
movsb
out
nop
cld
incl
sub
jge
or
inc
mov
cmp
cld
jge
mov
jecxz
sti
pusha
pop
in
pop
pop
mov
xor
loop
stc
add
stos
push
dec
pop
push
push
incl
pop
call
mov
aas
test
in
sbb
shll
inc
mov
inc
jge
repnz
adc
adc
push
lods
inc
cld
xchg
int
das
nop
call
loopne
repnz
data16
jmp
call
fistpl
pushf
xlat
adc
aam
mov
jg
fimull
lcall
push
loop
in
push
imulb
leave
jmp
push
pop
jns
les
pop
stos
pushl
sbb
xchg
popa
mov
fisttpll
iret
inc
subl
jb
cli
das
pop
lds
xor
call
and
xchg
cltd
jne
jb
push
mov
sub
pop
pop
mov
sub
daa
nop
jmp
dec
neg
pushf
adc
mov
ja
jmp
lock
leave
jg
out
mov
cmp
jne
jg
test
outsb
iret
sub
stos
or
push
pop
jl
sbb
xor
fcomps
test
sti
pop
sets
add
inc
cld
das
pop
and
pop
pop
ljmp
ret
push
aas
xor
mov
jmp
xorl
es
scas
adc
inc
fists
pusha
movsb
lret
aas
sub
psubw
leave
jg
hlt
testl
sub
mov
or
scas
mov
dec
adc
dec
mov
push
jg
movsb
scas
xor
ds
push
test
xchg
push
lret
mov
xor
mov
aas
inc
stc
repnz
lret
mov
mov
and
cmp
jecxz,pt
sub
insl
xchg
mov
jle
incl
por
js
push
fwait
inc
sbb
in
test
sbb
test
sbb
and
and
sbb
sub
repnz
subb
cmp
addb
stos
ret
rdmsr
sub
cmp
call
rcll
dec
pop
gs
push
jb
xchg
arpl
inc
inc
or
jb
push
es
cwtl
push
and
scas
cld
outsl
ret
das
subl
or
mov
xchg
maxps
or
push
mov
mov
mov
fcoml
push
cmp
pandn
test
in
into
nop
adc
test
pop
cwtl
inc
aad
dec
das
stc
syscall
push
por
dec
sub
or
inc
and
and
mov
adc
popa
mov
das
xchg
call
divps
filds
push
adc
cwtl
gs
jg
stc
jns
cmp
test
sub
or
das
jnp
cld
pop
xchg
pop
rcrb
sbb
fnstcw
pop
pop
mov
lfs
or
iret
sub
outsl
push
cli
pop
jo
mov
aam
or
in
enter
add
pop
incl
lcall
pop
and
push
pop
jg
stos
jg
fidivs
mov
push
push
aas
or
push
mov
or
sub
in
comiss
pop
stos
movd
cmpsl
cmp
stos
ret
cmp
sub
daa
jmp
mov
insb
cs
lret
call
push
popa
das
bsr
fistps
sub
inc
adc
pop
pop
dec
or
wrmsr
sub
lds
cmc
pop
stos
mov
mov
scas
shll
das
in
testl
xlat
pop
sbb
mov
lahf
xchg
inc
aad
cld
lahf
jecxz
push
jg
imul
in
sub
mov
aas
dec
das
cld
xchg
lahf
sbb
jne
and
ss
mov
aas
mov
mov
decl
das
leave
jg
stos
psraw
mov
jne
test
or
movlps
add
lret
fadds
adc
out
dec
fs
inc
push
test
pop
dec
sub
repnz
sets
adcb
pop
adc
mov
int3
mov
pop
loop
add
and
das
push
call
inc
push
push
cmp
aas
ss
xchg
decl
push
std
add
jmp
lods
push
inc
cmp
loopne
adc
das
jmp
sub
addl
and
inc
mov
jg
test
fdivrs
aas
dec
das
leave
jg
test
or
lcall
push
icebp
fildll
loop
mov
stos
push
and
into
mov
das
cvttps2pi
mov
mov
jns
das
repnz
mov
adc
pop
adc
xchg
call
inc
ret
movsb
mov
cmovno
xlat
cmp
dec
mov
pop
stc
pop
enter
and
jle
fmulp
lret
xor
add
aas
das
test
mov
inc
pop
pop
mov
addb
loopne
arpl
test
cld
xchg
rclb
pop
fadd
es
or
push
test
dec
das
and
mov
imul
cltd
es
sub
dec
adc
cmp
je
das
inc
repnz
stos
psubq
mov
jmp
stos
ret
push
sbb
and
and
mov
xor
call
push
popa
das
je
sarl
mov
add
pop
or
push
dec
pop
test
add
scas
add
scas
addb
lea
decl
setbe
popl
mov
popa
popa
dec
das
cmovb
inc
and
cmovb
push
mov
push
pop
stos
into
sbb
add
or
mov
mov
orl
mov
orl
pop
fadd
aas
loopne
mov
je
stos
das
cmp
xchg
test
dec
jge
sbb
mov
add
add
push
bswap
punpckhdq
and
out
test
jle
mov
adcl
movd
add
inc
mov
inc
pop
into
loop
fidivs
sub
mov
adc
data16
shl
out
cld
dec
push
mov
out
idiv
cmp
and
adc
popf
out
stos
jg
cld
icebp
pop
into
cmc
push
imul
sti
rcl
outsb
ret
jmp
and
or
imul
movsb
mov
pushf
xchg
inc
lahf
jne
jmp
movsb
clc
or
xchg
add
jo
sub
inc
mov
cs
inc
push
incl
push
add
push
jp
das
mov
adc
fwait
sub
xor
sub
adc
jns
pop
sub
adc
cld
imul
iret
lahf
ret
das
cmp
push
icebp
inc
ljmp
xchg
xor
adc
call
jae
mov
inc
mov
cmp
imul
enter
mov
les
lds
xchg
loope
out
pop
add
ja
ljmp
sub
loope
inc
imul
cmpsl
pop
clc
cmp
jo
ret
xor
mov
scas
incl
push
mov
fistps
cmc
fildll
lcall
repnz
ja
shrl
shrb
or
mov
add
icebp
stos
lcall
andb
jbe
icebp
inc
mov
sub
roll
pop
adc
xor
rcr
aas
dec
in
ljmp
dec
dec
dec
cwtl
cmp
add
mov
jl
movsl
popa
sbb
orb
pop
rol
daa
inc
mov
loope
outsl
stos
mov
push
push
mov
sbb
fbstp
in
inc
loopne
fs
jo
aaa
call
lcall
and
lahf
cld
or
add
mov
sub
xchg
mov
mov
pusha
push
sub
decl
mov
stos
inc
adc
or
or
fsubs
jg
pop
pop
adc
cltd
jb
dec
stc
or
inc
sub
stc
pop
adc
jmp
test
pop
call
in
lock
testb
push
mov
push
test
jl
gs
jg
scas
inc
jno
jg
and
adc
and
cwtl
add
in
jnp
jle
or
fsub
aas
sbb
hlt
iret
push
sub
dec
cmp
inc
fsubs
scas
das
das
nop
incl
les
adc
arpl
xchg
and
inc
lds
dec
mov
das
call
pop
leave
cmpsb
inc
cmp
in
out
pop
sbb
mov
das
cli
dec
ret
cmpsb
imul
aam
xchg
movsb
push
add
mov
fnstsw
xchg
mov
push
jne
dec
adc
sbb
popf
inc
fdivrs
jge
inc
pop
sub
das
pop
pushl
mov
das
mov
mov
mov
bound
fildll
jmp
hlt
xchg
stos
push
xchg
jg
pop
notl
in
aas
sbb
mov
push
xor
hlt
aam
add
pop
repz
mov
ds
dec
xchg
cmp
sbb
xchg
mov
cs
jnp
incl
jmp
std
xor
mov
in
roll
and
movsb
jo
mov
incl
pusha
jmp
loopne
jo
mov
ljmp
bound
pusha
xchg
push
call
jg
lahf
sbb
mov
mov
shrl
fists
popf
fld
incl
iret
les
cmp
inc
test
leave
mov
and
lcall
inc
loop
jecxz
test
mov
ss
scas
fdivrp
ljmp
inc
jno
cmp
push
push
push
xchg
mov
and
xor
repz
stc
out
adc
jg
and
pop
je
dec
test
cmpsb
in
add
aad
push
pop
nop
ljmp
ret
ljmp
dec
insb
jg
jae
adc
fbld
repnz
add
outsl
andb
adc
sbb
cmp
inc
mov
rclb
bound
jg
jecxz
pop
faddl
lods
jmp
scas
cwtl
xchg
push
data16
sub
je
aas
inc
filds
and
inc
clc
arpl
pop
or
lcall
jne
cmpsl
xchg
add
or
jmp
popa
pop
pop
mov
sti
inc
lret
xchg
into
dec
lahf
xchg
pop
test
pop
mov
inc
add
aas
pop
push
clc
pmulhuw
out
sub
sub
add
fiaddl
outsb
xchg
xlat
das
jecxz
xchg
lods
sub
mov
xor
ss
popa
ljmp
push
das
scas
ss
imul
inc
or
pop
jo
sub
pop
fbld
movsb
lahf
je
and
add
cmpsb
adc
or
psubq
andb
add
js
mov
add
cmpsl
dec
and
jne
call
mov
sbb
push
out
test
mov
ret
mov
mov
jg
daa
pop
orl
xor
leave
das
decl
xor
andps
mov
filds
push
dec
mov
xlat
popa
lcall
dec
fistpll
inc
std
int
jmp
aas
adc
cmpsb
lret
js
mov
inc
sub
pop
shll
pop
mov
add
xchg
inc
jg
je
call
in
adc
lcall
call
sbb
lahf
lret
icebp
cmpb
movb
decl
fidivl
loopne
stc
and
ret
daa
aaa
jp
xor
fsubr
push
das
popa
sbb
sbb
xchg
call
clc
in
rcll
clc
and
rcl
mov
adc
mov
es
add
dec
fcmovnu
outsb
fimuls
cmp
pop
push
std
ljmp
pop
jno
enter
pushl
xchg
push
xchg
lahf
popf
lea
mov
rsm
xor
filds
pop
or
ss
push
das
lcall
ret
lods
imul
das
pop
jns
xchg
call
sahf
sub
push
jg
xchg
icebp
ficoml
mov
ljmp
loopne
xchg
xor
mov
lea
cmpsb
pop
pop
cmp
mov
daa
jmp
in
lahf
lcall
loop
iret
lock
stc
xor
add
ud2
repnz
dec
mov
push
lods
sahf
push
sarl
mov
aas
je
call
push
mov
jno
mov
add
int
mov
jne
fcomp
pop
popa
xor
fsubrs
inc
or
das
fistps
add
sbb
ja
ficompl
xor
adc
sub
cmpsl
pop
dec
sub
sbb
pop
mov
movsb
cmp
push
popl
push
fstps
jg
jmp
gs
call
rorl
adc
ja
mov
int3
cmp
insl
lock
adc
inc
and
jno
and
lret
in
cmp
ss
push
comiss
mov
xchg
test
into
push
jne
scas
jo
xchg
add
incl
test
cmp
pop
jne
mov
movsl
pop
fildl
cmp
cmc
inc
push
fimuls
leave
jg
scas
stos
sub
or
xchg
sbb
mov
clc
ds
inc
xor
jg
outsl
scas
out
es
adc
push
and
pop
mov
adc
mov
xchg
mov
adc
jl
mov
push
pop
mov
sbb
pushw
mov
xlat
sbb
jmp
cmpsb
repnz
dec
xor
repnz
jo
mov
flds
test
jg
push
les
stc
lock
aas
lahf
hlt
mov
xor
fwait
cmp
push
mov
xlat
xor
add
push
ja
fwait
das
pop
sub
out
leave
shll
das
outsb
arpl
dec
std
lcall
fists
into
mov
mov
shrb
dec
sbb
ffree
cmp
lea
popl
mov
lcall
js
cmpsl
in
dec
push
bound
fistps
pop
mov
push
mov
inc
call
cvtdq2ps
ljmp
lods
xor
jge
add
pushf
inc
cmpsl
push
sub
orb
test
lcall
lret
push
insl
add
sbb
sub
mov
sar
popf
pop
orb
into
sti
xchg
sbb
das
adc
add
lahf
das
inc
sub
pop
jmp
or
repz
xchg
pop
xchg
stos
sbb
dec
out
mov
repnz
mov
push
scas
rclb
xchg
hlt
add
add
mov
push
loopne
imul
iret
and
dec
sub
aas
shll
adc
decl
iret
arpl
fists
inc
jle
jb
mov
cli
stos
and
xlat
inc
out
jg
adc
hlt
xor
xchg
ljmp
bound
std
imul
or
jg
xchg
incl
or
lahf
out
lret
shlb
in
pop
cmpsl
dec
lret
sahf
ret
mov
cmp
pop
cmp
pop
lcall
cs
cmp
loopne
pop
cli
jae
int3
jno
mov
mov
push
pop
ljmp
add
mov
ja
push
push
fisubrs
pop
jno
dec
stc
insb
mov
nop
push
loop
pusha
jb
pusha
repnz
mov
into
sarl
aaa
sub
jo
mov
flds
pop
popa
das
inc
out
pop
mov
decl
fists
lea
jne
stc
and
jl
push
sub
shlb
clc
fisttps
or
ret
mov
jmp
bound
int3
adc
add
sbb
dec
setg
sbb
mov
in
mov
pop
lahf
xor
mov
movsl
sti
leave
push
cld
xchg
aas
dec
cmc
push
mov
inc
pop
push
test
dec
pop
test
test
push
std
xchg
enter
lret
call
enter
jo
loopne
mov
test
lods
sbb
mov
inc
push
popa
add
jmp
push
pop
movd
inc
inc
in
icebp
das
inc
fsub
cmp
cmp
adc
push
lock
mov
sub
pop
call
fnsave
popa
arpl
loopne
test
ljmp
inc
test
mov
das
pop
js
call
mov
jl
mov
scas
clc
cmc
enter
movsb
icebp
jmp
or
repz
dec
xchg
nop
jp
and
pop
outsl
push
adc
popl
call
enter
ret
scas
cmc
pop
bound
pop
xchg
jmp
mov
mov
fildll
lock
fdivrl
mov
call
pop
xor
xchg
and
arpl
xchg
pop
aas
push
sbb
bound
mov
aaa
aam
fwait
sub
lahf
mov
sbb
icebp
pop
sub
mov
loop
add
jne
xlat
adc
add
fimuls
insb
mov
iret
cmpsb
data16
scas
out
mov
pop
stc
decl
add
ss
out
loopne
js
mov
nop
cmp
adcl
mov
mov
into
mov
pop
add
xor
fst
call
repnz
add
aas
xor
test
or
in
add
pop
mov
movsl
movswl
aas
cmpl
shr
xor
cmp
jbe
xor
bound
push
inc
mov
je
std
push
movsb
scas
add
pop
xor
xor
mov
hlt
sbb
mov
inc
add
scas
call
outsl
ror
mov
xor
incl
rclb
sub
andb
out
push
sub
rorb
cli
filds
xlat
dec
leave
ret
add
sti
scas
outsl
sub
aaa
mov
dec
lahf
sti
pushl
fwait
jo
inc
or
fildl
mov
pop
dec
jg
test
rcll
sar
imul
ret
jg
inc
jecxz
add
sub
mov
filds
insb
jg
data16
inc
leave
push
fidivl
push
out
add
aaa
dec
xchg
lods
jecxz
cld
xchg
nop
incl
pop
mov
and
test
hlt
mov
push
fildl
icebp
dec
inc
mov
xchg
negl
loop
sbb
fldcw
imul
add
out
in
decl
xchg
pushl
adc
int3
ret
lret
cmp
mov
in
and
in
movsl
adc
lods
cmp
push
dec
mov
scas
jg
decl
out
pop
mov
movsb
jecxz
cld
das
in
pop
loope
add
sub
xor
pop
popl
sub
jg
lock
lret
mov
popa
mov
int
repz
sbb
pop
jle
fisubrl
dec
lret
je
sti
pop
xorb
and
pop
pop
lock
jge
lahf
je
jle
inc
scas
push
or
inc
ja
mov
push
pop
addb
iret
outsl
decl
mov
lods
jns
jmp
push
add
scas
inc
mov
dec
adc
outsl
adc
jge
rcrl
das
add
filds
in
fidivl
adc
decl
jns
arpl
enter
repnz
loopne
jg
mov
mov
cmp
mov
add
scas
xchg
bnd
jmp
add
scas
lcall
enter
enter
mov
adc
rolb
cltd
xchg
lret
pop
hlt
push
repnz
stc
adc
xor
push
jle
mov
je
xchg
jo
jmp
shll
push
fbld
push
and
inc
add
push
aas
in
push
sbb
jmp
pop
cld
idivb
nopl
fs
inc
mov
cli
lahf
imul
jmp
mov
cmp
incl
inc
push
cld
jne
cmp
inc
mov
shl
jae
and
test
add
adc
out
adc
add
and
cmp
cmp
iret
sarb
mov
iret
sbb
push
cli
jmp
jb
pop
jl
daa
mov
xchg
fldl
mov
jecxz
pop
cltd
jmp
mov
ud0
fsubl
xchg
dec
test
in
lcall
pusha
jb
jmp
cli
pusha
negb
in
sbb
and
xchg
je
cmp
aaa
mov
bound
inc
aas
mov
fiadds
fwait
gs
data16
jge
dec
push
decl
pop
aas
sahf
jl
push
adc
xchg
add
pop
jo
pop
mov
test
adc
sbb
push
mov
stos
inc
and
fisubrl
divb
or
iret
incl
add
inc
add
lock
outsb
psubw
iret
fsubrs
pop
popa
call
fstpt
sar
sub
push
cmp
push
mov
add
test
pop
pop
pop
sub
test
retw
and
add
sahf
cmp
or
mov
sub
stos
int
std
je
mov
icebp
daa
call
ja
sbb
into
sbb
xchg
cltd
inc
stc
orb
cwtl
test
das
add
scas
jg
push
imul
xor
enter
aad
adc
mov
lods
and
jno
or
adc
and
push
pop
mov
aas
iret
scas
ret
mov
lock
clc
ret
fstl
outsb
enter
rcr
cmp
mov
das
iret
lods
jg
repnz
int3
js
mov
scas
outsb
inc
cwtl
scas
cli
ljmp
data16
push
inc
mov
mov
xchg
and
loope
add
jbe
addb
pop
xor
cmc
incl
xor
aad
jp
daa
xchg
dec
and
ret
loopne
sub
or
repnz
cmp
sub
lea
mov
scas
das
push
pusha
scas
aas
jno
xor
pop
xor
das
sub
push
cmp
sbb
aas
repnz
mov
jne
sti
lcall
repz
mov
loopne
aaa
jnp
enter
jg
jle
fs
scas
aad
lahf
sub
scas
roll
into
sub
push
and
add
out
scas
mov
add
aas
xor
jmp
sbb
adc
fmuls
xor
mov
scas
iret
inc
add
imul
cld
mov
andb
lock
addr16
lret
into
push
cwtl
pop
push
mov
scas
lahf
inc
add
imul
sbb
push
adc
pop
lods
jmp
adcl
pop
fmuls
popa
jmp
decl
push
push
pop
mov
jg
scas
adc
cli
imul
sahf
add
movb
outsl
call
mov
out
scas
dec
sub
jg
int
scas
pop
mov
pop
sbb
scas
dec
add
mov
icebp
rcrb
xchg
out
in
jg
scas
jmp
and
in
add
test
outsl
aam
repz
pop
mov
jge
sub
add
pop
pusha
fildll
mov
sub
scas
iret
out
and
subb
scas
scas
int
cmp
inc
call
dec
out
and
subb
fildll
iret
jge
cmpsb
dec
js
push
into
scas
push
add
pop
jg
jo
add
cmp
cmp
adc
cmp
insb
call
push
fwait
decl
ret
scas
shrd
call
sub
and
leave
jmp
jmp
mov
pop
dec
sbb
pop
mov
lods
push
sbb
sbb
or
mov
sub
jge
ja
add
pop
mov
ljmp
das
pextrw
and
mov
add
fwait
shlb
mov
scas
das
scas
cld
ljmp
push
scas
inc
test
cmpsb
movsl
je
ds
jae
insb
jmp
fsubs
push
and
xorb
into
or
aad
lahf
scas
adc
mov
fildll
iret
mov
cmp
sbb
aas
push
in
es
aas
xor
pop
iret
iret
out
inc
fdivr
lret
jnp
stc
push
xor
lahf
inc
sbb
lahf
cld
push
cmp
idivb
or
inc
faddp
sub
mov
aas
stc
jae
push
pop
mov
aam
es
and
ficomps
jb
in
jg
scas
cmp
xchg
push
mov
jecxz
lods
scas
push
iret
outsb
jg
call
sub
mov
repz
push
mov
negl
cmp
repnz
pop
mov
fdivrp
mov
dec
rcl
sub
pop
negb
iret
inc
pop
mov
iret
scas
cld
das
in
aaa
mov
aam
push
test
push
push
add
test
push
repnz
mov
cs
jno
inc
test
out
add
lods
xchg
outsl
rorb
mov
add
scas
cmp
sub
or
mov
aas
sbb
scas
iret
push
hlt
or
inc
decl
scas
inc
rcrb
mov
int
arpl
xor
pop
sub
xor
sbb
int3
sub
xchg
js
aaa
call
push
jbe
scas
jge
mov
and
repnz
mov
pusha
and
cmpsb
push
ret
push
test
imul
scas
stc
filds
test
push
ds
xlat
pop
repnz
aas
sbb
arpl
or
ljmp
xchg
and
imul
and
sarb
pop
pop
fs
mov
lock
adc
and
sbb
lcall
pop
push
and
dec
outsl
aam
dec
es
decl
mov
sbb
mov
xchg
test
add
adc
call
xchg
pushf
mov
sahf
pop
orl
sbb
jg
mov
jp
scas
jge
int3
clc
syscall
clc
xchg
cli
sbb
outsl
mov
and
push
mov
scas
das
or
jg
outsl
sbb
add
fwait
hlt
aaa
adc
mov
mov
pop
mov
mov
int
fxam
mov
xchg
jg
jnp
mov
arpl
aas
dec
sbb
out
popf
mov
jge
or
fdivr
decl
xchg
jge
decl
sbb
sub
xchg
jle
das
jg
push
jl
add
cs
push
iret
test
into
jge
dec
call
fwait
mov
lret
leave
xchg
xchg
mov
dec
or
xor
xchg
out
pop
leave
mov
ret
mov
and
jg
jbe
adc
imul
fisubrl
outsl
or
xchg
cmpsb
lcall
cmp
cmpsl
push
lods
mov
jae
and
bound
sub
nop
inc
inc
outsl
mov
mov
aas
sbb
mov
loop
adc
fwait
or
jbe
pop
out
popf
push
inc
leave
fadds
xchg
cltd
scas
lods
add
and
movsb
dec
adc
mov
ja
into
lods
mov
fimuls
adc
das
pop
cli
lcall
mov
imul
pop
push
cld
movsb
pusha
repnz
idiv
pop
mov
scas
in
je
imul
cltd
das
or
decl
or
sbbl
sti
fstps
test
mov
dec
cmp
lret
push
movsb
mov
popa
pushl
and
cli
aaa
out
or
popa
cmp
shlb
mov
mov
js
push
rclb
das
das
add
jg
loope
pshufw
fisttps
out
xor
pop
cltd
sub
iret
das
inc
mov
or
sar
loope
or
lahf
iret
mov
lds
ljmp
iret
movsb
pop
adc
das
int3
jae
cmp
out
mov
add
fsubr
iret
lahf
ret
mov
or
incl
cmpsb
add
test
fs
clc
fsubrl
push
sbb
insl
iret
push
xchg
ljmp
orb
dec
mov
xor
add
pop
decl
test
arpl
outsl
aas
push
inc
cld
pusha
cld
jg
push
mov
out
ds
rcl
jns
in
cmpsl
jno
inc
and
dec
lods
andb
mov
push
push
les
xor
decl
cmpsl
jno
and
pushf
call
xchg
mov
sub
int
pop
adc
lods
add
xchg
push
push
lods
ss
outsl
jg
or
daa
mov
pop
pop
sub
ds
jg
aas
fsubs
and
outsl
hlt
dec
pop
fistpl
mov
fiaddl
aas
out
adc
push
push
pusha
mov
pop
std
ret
push
inc
das
das
ret
cmpsb
pop
stc
data16
lock
jp
inc
ss
lahf
repnz
jmp
and
test
dec
or
xor
xchg
push
fistl
rcl
pop
pop
ss
fwait
imull
sbb
xchg
cmp
sub
cltd
es
data16
cmpsl
iret
jg
mov
iret
lahf
iret
in
aad
pop
loop
push
jmp
iret
leave
iret
lahf
ja
sar
push
repz
cmp
lret
xlat
shrb
lret
lahf
pop
lods
lcall
jle
jne
enter
mov
lahf
sbb
adc
push
jg
sahf
dec
sub
add
xchg
push
and
rorb
bound
iret
call
mov
mov
jg
cmp
dec
jnp
jae
lock
cltd
sbb
fbstp
sbb
lock
xchg
insb
movsb
movsb
xchg
cmp
mov
clc
and
add
incl
lret
xor
xchg
loope
sbb
stc
fisttps
xlat
sbb
and
in
loop
popl
shl
aas
inc
push
fcmovnb
add
std
iret
ret
or
iret
das
push
pusha
sbbl
dec
mov
insl
and
das
pop
or
mov
lahf
decl
lahf
jg
add
mov
cld
das
in
adc
pop
std
fwait
lock
lcall
rcrb
sar
cmpsb
repnz
mov
loopne
stos
push
adc
and
mov
xchg
out
mov
mov
adc
mov
push
lahf
icebp
je,pt
dec
jmp
lahf
xor
xlat
mov
or
pop
cli
leave
out
mov
inc
cwtl
test
mov
jg
push
and
jb
xor
subb
lahf
and
gs
cltd
lock
imul
leave
addb
lahf
clc
xchg
push
movsb
movsb
sahf
je
inc
add
mov
pop
adc
loop
push
iret
lahf
adc
jmp
jl
lcall
push
in
addr16
jg
ja
das
pusha
cltd
loop
xchg
jle
pop
enter
fsubl
sub
adc
and
subl
cs
mov
dec
in
xor
mov
mov
ret
ljmp
insb
mov
and
imul
or
push
outsl
inc
ret
idivb
add
in
jg
dec
mov
pop
ss
mov
fdivrs
dec
pusha
test
dec
jg
mov
jmp
cmp
mov
jg,pt
gs
xor
sub
add
in
jg
scas
in
pop
jmp
pop
mov
jg,pt
dec
in
or
and
inc
arpl
inc
mov
push
and
pop
ljmp
xchg
or
mov
adc
xchg
xchg
into
leave
sti
das
cmp
xor
pop
iret
sbb
icebp
pop
push
or
dec
sbb
aas
inc
bound
jbe
insb
jno
lcall
iret
hlt
aam
outsb
loope
movsl
es
pop
pop
iret
ja
popa
das
lahf
push
add
cmp
das
adc
call
cli
lret
shlb
inc
test
xor
pop
aam
mov
inc
outsb
dec
filds
adc
flds
push
inc
mov
out
ss
inc
cld
addr16
sbb
decl
popf
or
sub
pop
and
fs
test
mov
movsb
dec
dec
add
xor
sbbl
jge
bound
fwait
jmp
pandn
push
or
daa
or
outsl
and
pop
insb
xchg
mov
or
push
xchg
in
and
mov
mov
sub
fbld
sar
inc
or
dec
pop
pop
jmp
push
sub
mov
imul
add
jmp
or
out
ss
notb
cmp
lock
inc
jae
cltd
xchg
call
add
dec
das
cmp
xchg
ret
lahf
ljmp
mov
in
out
pop
faddl
lahf
mov
ret
mov
paddq
mov
or
dec
ror
jbe
jg
dec
add
push
mov
sub
das
xchg
dec
adc
push
cmp
pop
xchg
pop
sarb
mov
fsts
cli
jecxz
mov
or
push
mov
sub
repz
xor
jne
push
es
sub
lcall
pushl
sub
cwtl
mov
inc
aaa
xor
fcoms
cli
inc
pop
clc
shll
pop
fadds
outsb
idiv
mov
push
out
data16
xchg
or
popf
jg,pn
das
ljmp
lea
or
shrb
mov
call
dec
pushl
into
es
and
jecxz
push
or
push
mov
and
push
cli
stos
call
das
xor
pop
or
das
sbb
lret
or
test
pop
scas
pop
push
cmp
adc
mov
adc
iret
push
cmp
mov
push
mov
pop
fistl
xchg
xchg
lds
push
int3
rolb
pop
jmp
pop
mov
ljmp
push
inc
xor
inc
and
rcrb
and
popf
xchg
insb
push
test
cmc
int
lret
push
pop
repnz
jp
mov
hlt
add
or
dec
repnz
ret
in
jg
sub
repz
cltd
cmpl
pop
cli
shr
cmp
or
mov
sub
scas
sub
mov
sub
pop
stos
mov
leave
cli
fisttps
fst
mov
int3
sarb
add
inc
mov
mov
pop
add
jg
subb
push
jge
xchg
insl
test
sbb
lahf
inc
mov
or
pop
or
adc
adc
jg
iret
push
dec
pop
jo
stos
daa
popa
decl
mov
sbb
jg
mov
aas
aas
and
inc
ret
cld
das
in
xor
test
pop
pop
mov
dec
call
mov
xchg
rorl
out
pop
sbb
shll
or
in
and
cmp
mov
call
icebp
jmp
xor
sbb
sbb
pop
add
das
stc
lcall
aas
cmp
sahf
inc
repnz
pusha
ss
dec
stos
or
jnp
decl
call
and
rorl
jg
sub
nop
incl
cltd
cmp
mov
sub
aaa
lcall
mov
fisubrl
imul
repnz
xor
sti
dec
mov
dec
lods
or
push
mov
inc
das
lcall
loope
add
incl
pop
adc
call
scas
inc
add
mov
dec
aas
stc
mov
imul
lret
sbb
aas
clc
lcall
pop
cmpsb
scas
aad
inc
push
pop
les
mov
push
push
fistl
xorl
pop
mov
push
daa
push
add
or
out
dec
sub
ret
xchg
dec
pushl
dec
add
or
push
mov
decl
xchg
lock
cmpsl
decl
sub
sbb
dec
mov
cmp
push
cs
addl
mov
adc
arpl
xchg
insl
ret
adc
aas
test
inc
jg
ja
rcr
mov
das
pop
jmp
mov
jmp
mov
int3
xlat
in
mov
das
mov
sub
stos
lock
testb
add
jmp
out
bound
in
jg
mov
mov
mov
xchg
iret
cmp
mov
daa
sbb
pop
xor
cli
mov
and
subb
xchg
inc
pop
das
lret
adc
andb
push
push
mov
ljmp
mov
mov
mov
inc
add
inc
mov
je
call
mov
subl
dec
mov
decb
movsl
dec
mov
es
jp
jno
cwtl
ficompl
xchg
push
add
mov
iret
pop
push
mov
sarb
mov
mov
xchg
pop
mov
xchg
bound
out
iret
mov
or
mov
iret
das
pop
sbb
sbb
test
adc
mov
je
inc
data16
les
jnp
in
js
iret
mov
adc
test
repnz
movsl
cmp
dec
jg
mov
lahf
iret
mov
jge
sbb
ss
out
sbb
xor
mov
cli
adc
xchg
push
addb
fadds
jp
cmc
adc
dec
lcall
adc
jno
xchg
call
filds
adc
es
jae
clc
fildll
pop
xchg
jbe
into
int
sub
dec
or
incl
fistpll
or
dec
in
loope
push
pop
subb
xor
ss
out
shr
mov
lea
test
mov
push
cli
dec
js
pushl
leave
or
adc
inc
in
ja
push
call
cmpsl
scas
sub
push
jge
lahf
jg
adc
lret
iret
and
pop
dec
scas
jg
adc
das
mov
or
comiss
icebp
pop
cmc
bound
dec
sbb
loop
add
cld
das
in
jnp
dec
sub
jae
pop
xchg
clc
xchg
jge
and
jg
add
xor
fisubs
ljmp
mov
cld
das
in
mov
out
stos
jl
cli
fbld
loope
jg
out
shl
movsl
jns
push
int
cli
pop
jmp
test
jg
cld
das
push
pop
jae
fnstenv
sbb
nop
das
and
pushl
dec
sub
lea
mov
pop
ss
scas
sbb
mov
das
iret
jo
add
das
iret
add
iret
mov
mov
iret
das
inc
pusha
test
das
pusha
cld
xchg
outsl
jo
aad
or
inc
das
incl
ljmp
pusha
test
pop
inc
das
cmp
sti
popf
mov
mov
mov
scas
imul
and
adc
ret
and
std
dec
jg
xor
adc
sub
and
stc
adc
pusha
fsubrl
insb
inc
fwait
sar
das
stc
pop
add
jge
dec
nop
jnp
decl
incb
jmp
xchg
jg
push
je
test
adc
pop
mov
cmp
cwtl
adc
jle
mov
outsl
push
loop
inc
scas
xor
mov
ret
outsl
out
add
scas
outsl
sub
es
test
xchg
xorb
sub
mov
adc
add
mov
lahf
outsl
jo
out
cli
mov
pushf
sbb
mov
xchg
inc
or
sub
pop
ja
stos
outsl
outsl
jg
mov
jp
loop
ret
iret
bound
push
lds
lods
call
lret
lds
fwait
mov
xor
or
or
filds
outsl
iret
scas
ret
adc
das
and
lock
xchg
push
mov
sbb
inc
fsubr
dec
out
inc
add
cmp
mov
pop
xchg
ljmp
pop
enter
cli
data16
jmp
jp
fadd
pop
mov
xor
mov
add
ret
sbb
test
iret
mov
ret
pop
jg
push
iret
out
xchg
pop
mov
inc
cmp
sbb
jmp
sbb
adc
or
add
or
ljmp
aam
inc
outsl
imul
push
mov
das
pop
lret
loope
or
jg
popf
popf
xor
loop
into
dec
mov
sti
jne
and
test
pop
jno
das
lcall
nop
inc
sbb
ljmp
mov
mov
test
push
jno
sub
jg
ret
pop
shl
pop
in
mov
mov
ljmp
loope
inc
mov
inc
xchg
js
test
push
pop
fsubrs
dec
das
aas
adc
outsl
dec
fstl
mov
ljmp
outsb
loop
ljmp
xor
dec
pusha
repnz
out
jns
aas
out
add
add
aas
int3
fcoml
outsb
incb
nop
cmp
push
fidivrs
mov
push
insl
psllw
adc
test
cmpsl
adc
test
das
in
mov
cld
fs
push
xchg
aaa
cld
xchg
lock
sub
xchg
pop
aam
push
loope
pop
mov
ret
pusha
mov
bound
outsl
inc
or
int
daa
enter
je
mov
mov
mov
xchg
imul
aas
cld
faddl
pop
inc
sbb
clc
fistpl
jmp
aas
jb
cmpsl
fists
int
push
ffreep
jg
clc
or
stos
imul
stos
dec
loop
xchg
mov
or
pop
sbb
icebp
push
dec
aas
in
pop
push
nop
rolb
add
icebp
cmp
push
or
aas
fstl
mov
jg
sbb
cmpb
pop
sbb
inc
outsl
aas
mov
inc
call
mov
xor
push
test
loopne
adc
das
pop
cmp
fdivrs
sbbb
or
pop
inc
fmuls
mov
mov
pop
lcall
push
shr
ds
mov
scas
fmuls
mov
mov
aaa
mov
and
pop
scas
test
aaa
adc
es
scas
aaa
adc
push
scas
scas
lds
pusha
pop
scas
sbb
call
std
dec
pop
and
sbb
sub
andb
or
enter
mov
push
pop
test
iret
lods
push
pop
adc
iret
add
or
ret
outsl
lods
mov
mov
add
mov
iret
mov
iret
pop
adc
adc
jle
out
inc
add
iret
iret
add
iret
inc
add
mov
iret
and
xor
mov
and
das
decl
inc
and
iret
call
and
push
popa
das
iret
and
adc
pop
ljmp
test
pusha
iret
mov
add
adcb
pop
addb
scas
incl
pusha
iret
lret
div
lds
ret
fbstp
or
fsubs
add
push
fisubs
iret
iret
lods
adc
fbld
or
lods
iret
test
add
mov
inc
fadds
orl
inc
add
mov
iret
mov
mov
adc
sub
mov
sub
add
mov
mov
mov
pop
adc
incl
dec
xchg
outsl
das
fisttpl
inc
add
iret
mov
iret
mov
mov
lret
sahf
cmp
add
mov
mov
test
test
xchg
push
adc
fisttps
lcall
adc
ljmp
push
or
lahf
mov
das
push
mov
push
add
and
dec
adc
das
pop
inc
fadds
jecxz
iret
int3
loopne
mov
pusha
adc
adc
filds
scas
fmull
jmp
jg
and
add
rorl
pop
mov
or
adc
pop
enter
repnz
push
jp
or
adc
mov
dec
jae
mov
lahf
adc
ret
add
aas
push
pop
test
iret
pop
and
jo
imul
mov
leave
xchg
pop
test
sti
jb
and
stos
and
sub
add
mov
push
cmp
sbb
push
inc
iret
and
adc
or
das
xor
js
jbe
pop
repnz
iret
fimull
mov
xlat
jno
adc
iret
stc
pop
enter
sahf
jnp
dec
cmpsl
call
clc
shll
or
das
test
pop
inc
outsl
lahf
lods
push
cli
pop
das
pop
fidivs
pop
call
push
push
sub
lahf
jmp
in
es
das
pushf
jbe
add
popf
shlb
mov
dec
imul
adc
jmp
push
pop
lods
aam
fistps
scas
push
aaa
adc
pop
pusha
aaa
adc
scas
pop
pop
lds
pop
pop
daa
pop
test
push
loop
cmpsb
popa
sbb
sbb
cwtl
push
dec
popa
clc
xor
dec
sarb
scas
fsubrs
in
xchg
scas
iret
das
sbb
push
scas
movsl
push
rolb
or
scas
outsl
das
push
inc
pop
cmpsl
scas
mov
fwait
inc
fisubs
ss
das
pop
xchg
mov
push
scas
das
push
adc
mov
iret
cmp
jg
decl
xlat
aam
ret
sti
sub
sub
dec
outsb
add
popf
sbb
pop
sahf
and
scas
das
aaa
adc
dec
or
jg
mov
test
adc
iret
mov
sub
push
push
and
mov
in
scas
iret
das
push
int
cmp
adc
movsb
fst
aas
sbb
mov
cli
jecxz
rorb
mov
jmp
lahf
inc
les
lods
das
push
push
cmpsl
mov
scas
mov
cld
outsl
aas
loopne
sahf
imul
pop
test
das
inc
decl
jmp
dec
sti
dec
cmp
sahf
cli
inc
lcall
in
out
add
sbb
xchg
stc
lock
and
cmp
or
ss
out
sub
and
out
mov
mov
out
mov
add
xchg
or
lock
das
aas
push
xor
pop
test
pop
jmp
add
aas
pop
mov
inc
inc
pop
int3
sarb
cmp
lods
adc
adc
pusha
scas
mov
jg
adc
lahf
pop
dec
pop
adc
shrb
add
les
or
lahf
adc
pcmpeqd
mov
jg
sarb
iret
cli
xor
or
jg
or
ud0
test
jg
mov
jg
sub
add
das
shld
das
mov
les
outsl
inc
push
adc
iret
sub
jg
push
and
pop
xchg
xor
mov
subb
hlt
sub
mov
xor
lcall
inc
add
pop
push
adc
push
adc
or
inc
insb
mov
ja
add
mov
das
out
push
pop
or
out
jg
pop
inc
sbb
pop
push
mov
iret
pop
adc
ret
push
pop
int3
pop
outsl
inc
xchg
mov
lahf
xchg
mov
pop
lahf
mov
adc
adc
push
jae
loope
push
adc
clc
jg
loop
inc
dec
dec
jmp
add
lods
pop
aas
cmp
rcrl
push
cmpsl
hlt
insl
stc
fstpl
mov
jg
sbb
cmp
dec
adcb
jg
enter
lahf
addr16
pop
mov
mov
pop
lds
les
daa
incb
iret
iret
adc
cld
aas
insb
and
push
das
jg
pop
rorb
decl
stc
pop
jae
sub
orb
das
mov
add
push
and
cmp
test
add
xor
pop
adc
push
icebp
ljmp
lds
cmc
stc
lcall
dec
pop
push
mov
lods
push
adc
inc
std
add
and
addb
paddd
popa
pop
iret
das
mov
push
dec
test
mov
xchg
das
incl
ja
das
enter
clc
out
out
xchg
inc
test
pop
mov
cmpb
mov
adc
and
adc
mov
pop
mov
cmp
ret
incb
repnz
inc
adc
scas
and
xchg
test
add
dec
lret
sbb
enter
scas
out
pop
lret
je
out
mov
scas
icebp
mov
push
or
or
push
push
xor
mov
mov
scas
xorb
es
pop
scas
lods
stos
or
mov
scas
pop
enter
push
stos
cmc
inc
push
adc
sbbl
dec
in
mov
pop
inc
scas
scas
es
scas
das
xchg
cld
das
mov
idiv
jp
pop
push
add
add
xor
rcrb
push
aad
scas
ds
inc
pop
pop
das
popf
pop
hlt
cs
inc
xor
xor
clc
push
dec
sub
popf
lcall
rolb
aas
incl
lods
out
scas
andb
mov
nop
movsb
xchg
pop
push
pop
repnz
in
push
stc
ljmp
les
mov
inc
leave
into
mov
mov
mov
jmp
das
fistpll
das
loop
adc
aad
scas
mov
push
jne
jo
daa
sub
das
add
sub
xor
scas
cmp
insb
push
adc
push
sub
xchg
xor
das
imul
pusha
push
repnz
fwait
aas
jo
adc
inc
mov
add
scas
mov
add
pushf
adc
pusha
push
scas
decl
es
jg
push
scas
stos
call
pop
jg
mov
dec
scas
fsubrs
pop
and
mov
and
mov
out
or
jno
push
xchg
repz
stos
es
pop
jg
mov
add
add
mov
add
stos
push
scas
icebp
mov
inc
iret
andb
inc
xor
ficomps
mov
dec
dec
pop
or
add
pushf
fistps
xor
lcall
mov
scas
test
fadds
scas
push
adc
mov
scas
inc
dec
test
scas
push
adc
pop
scas
scas
stos
push
insb
scas
mov
mov
cmpsb
inc
add
nop
pushl
movsl
sub
sahf
fmull
dec
mov
stos
es
sub
scas
pop
inc
dec
test
scas
push
xor
das
mov
clc
bound
pop
xchg
cld
jge
push
cmp
fisubs
push
outsl
push
aad
push
inc
push
add
subb
dec
mov
scas
bound
decl
fwait
popa
test
cmc
inc
inc
dec
test
lea
enter
test
cmpsl
nop
push
jl
outsl
lcall
push
test
aas
nop
incl
scas
adc
pop
out
jb
and
es
call
push
mov
les
scas
mov
push
push
adc
scas
push
aam
or
scas
clc
pop
inc
popa
pop
stos
popa
nop
and
cmp
in
add
add
pop
push
test
adc
mov
sub
adc
aam
inc
adc
out
push
push
sbb
mov
int3
in
in
inc
inc
inc
enter
sbb
sub
in
or
xor
out
sub
adc
repnz
push
cmpsb
adc
jmp
cltd
mov
incl
dec
dec
inc
insb
aad
and
cwtl
stos
xchg
mov
cmp
arpl
out
call
mov
mov
out
pop
inc
adc
pop
jmp
push
jnp
pop
das
test
stc
mov
jge
nop
inc
test
sarb
rep
popa
je
jg
and
xchg
inc
mov
pop
icebp
repnz
mov
xchg
filds
inc
clc
pushl
imul
adc
inc
lods
mov
movsb
push
out
aas
push
imul
jg
movsb
mov
lahf
dec
cwtl
mov
loope
iret
mov
xor
mov
lret
scas
outsl
or
outsl
out
test
out
aas
adc
pusha
mov
mov
mov
jne
ffreep
and
cld
ljmp
movsl
cmpsl
push
xchg
push
sbb
shrl
dec
bound
fwait
and
jg
push
inc
fsubrs
mov
nop
lock
pop
js
xor
mov
out
cli
call
das
aam
push
adc
frstor
in
dec
test
ljmp
mov
repz
mov
add
push
cwtl
pop
das
ljmp
xchg
sbbl
lcall
push
dec
cmp
pop
dec
add
es
pop
or
test
aad
fidivrs
sub
or
orb
fwait
jg
lock
or
aad
jmp
xor
cld
inc
sbb
lock
mov
rcrl
mov
subb
and
je
test
sarl
out
decl
stc
push
jmp
xor
dec
jmp
ret
inc
add
out
mov
testb
movups
adc
and
inc
shl
add
pop
push
je
popf
sbb
push
pop
lock
mov
xor
or
mov
inc
into
std
cwtl
insl
or
pop
cmpsb
ja
push
imul
fistl
out
push
inc
clc
pop
cltd
pop
jge
adc
pop
pop
sbbb
dec
incl
sahf
rol
neg
cs
insb
push
subb
jg
cmp
xchg
pop
lahf
add
out
invd
or
lahf
ljmp
in
int
loop
sbb
mov
mov
pop
add
inc
mov
out
and
bts
jg
dec
popa
dec
cwtl
fs
mov
stos
or
cld
das
and
jle
insl
fmuls
xor
and
jnp
dec
loopne
and
pusha
jae
fmuls
aas
leave
push
sbb
iret
rolb
pop
decl
sbbb
call
inc
jl
dec
mov
pop
subb
out
mov
arpl
ret
pop
or
jg
rcr
imul
outsl
pop
lahf
clc
filds
pop
add
sub
sub
dec
das
mov
clc
fisttps
pop
icebp
in
mov
jl
scas
test
push
sbb
hlt
pop
shrl
bswap
inc
cmp
xchg
pop
add
scas
js
pop
aas
mov
sub
pop
fistpll
das
je
fcoml
cs
push
mov
lods
nop
mov
out
dec
data16
adc
pop
out
mov
inc
addl
push
adc
iret
pop
outsl
adc
or
pop
popf
rorb
pop
incl
push
xchg
shrl
pusha
and
js
xor
lods
aad
inc
pop
pop
xor
insb
adc
das
dec
fildll
lcall
test
out
push
jae
aad
push
mov
sub
divb
mov
mov
das
pop
and
scas
pop
aam
jg
sub
jnp
mov
arpl
test
or
add
pusha
lret
lds
inc
mov
pop
popl
lea
pop
pop
lcall
pusha
pop
sub
xlat
dec
cltd
or
add
adc
shlb
xchg
push
repnz
out
adc
add
testb
and
jg
mov
inc
sbb
jmp
mov
mov
push
pop
xor
jno
xchg
cmp
cmp
fiaddl
incl
adc
scas
data16
outsl
sub
pop
add
pop
inc
pusha
daa
test
mov
int3
pop
pop
pop
scas
xchg
out
fimull
mov
repnz
mov
cmc
stos
push
ret
shlb
and
negl
popa
in
xor
sub
pop
pop
data16
mov
jg
mov
outsl
mov
es
pop
add
mov
fistpll
mov
shrb
aas
out
enter
pop
xorb
lcall
cmp
mov
pop
pop
les
imul
pop
ret
add
xchg
and
sbb
jl
mov
push
pop
dec
push
sbb
or
mov
outsl
pop
xchg
or
jnp
js
das
mov
inc
xchg
xchg
inc
pop
lcall
push
sbb
test
shufps
or
cmp
iret
lret
push
iret
xchg
aas
fisttps
pop
aas
inc
decl
jp
cmp
test
lods
add
inc
xorl
je
int
mov
inc
xor
dec
mov
add
rolb
pop
push
or
aam
pop
lods
inc
adc
iret
pop
mov
add
addr16
mov
jg
lds
sysret
dec
jmp
xchg
stos
scas
and
cld
das
jmp
outsl
testb
imul
test
clc
js
push
das
pop
insb
in
xchg
mov
shrb
mov
lods
jg
inc
xchg
pop
mov
das
sar
bound
cs
adc
int
jne
fwait
gs
iret
out
cmc
loope
bound
jne
idivb
repnz
das
leave
jmp
and
sub
mov
les
stos
pop
popa
daa
test
aaa
lea
jg
pop
push
test
out
decl
test
sarb
sbb
pop
pop
dec
jl
cltd
mov
mov
ljmp
data16
or
shrl
dec
scas
xor
pop
adc
pop
or
pop
add
mov
ret
pop
int
ret
das
pop
nop
push
mov
mov
push
xor
cmpsb
adc
aas
pop
cld
outsl
mov
and
std
and
mov
sub
not
inc
jbe
bound
in
sub
mov
dec
data16
cld
ljmp
cmp
loopne
xor
addl
xchg
enter
decl
pop
js
rorb
repnz
xor
inc
loop
cmpsl
clc
smsw
lahf
adc
jl
cmp
aas
add
pusha
stos
cmp
jo
mov
cmp
lret
or
in
lods
movsb
icebp
pop
insb
push
pop
inc
jmp
jmp
iret
add
ret
bswap
jmp
add
xchg
jge
insb
js
out
mov
inc
das
inc
fdivrs
aas
test
sbb
scas
mov
jb
mov
add
xchg
aad
mov
pop
decl
test
popa
imul
dec
pop
jbe
mov
aaa
dec
dec
mov
mov
mov
outsl
mov
inc
and
inc
push
jecxz
jnp
inc
or
xor
dec
add
mov
mov
or
es
and
je
aas
pop
inc
push
push
adc
adc
iret
jg
test
aaa
call
sub
mov
or
aaa
lock
lret
sub
rorb
mov
lods
lret
sub
stos
xor
iret
or
test
lods
pxor
cmp
push
out
push
mov
dec
ss
arpl
mov
adc
pop
aam
outsl
push
jbe
pop
dec
and
pop
pushf
outsl
testl
ret
add
mov
scas
pusha
mov
mov
outsl
fadds
scas
das
scas
shlb
cwtl
jo
test
das
enter
psubsw
xor
or
inc
dec
or
rdtsc
popa
adc
and
xchg
js
loop
or
cltd
mov
and
enter
xor
mov
adc
xor
inc
add
or
iret
pop
dec
pop
lea
fisubrl
pop
das
fiaddl
aam
or
rolb
or
xchg
jne
push
in
dec
ret
ret
cmpsb
adc
push
sub
sbb
clc
imul
cld
faddl
mov
sbb
ljmp
or
pop
push
lahf
aas
sub
mov
lahf
aas
adcb
push
jg
pop
aam
sbb
test
popa
xchg
decl
mov
jle
repnz
and
or
sub
mov
ret
inc
lahf
movups
into
nop
sahf
cvtps2pd
push
pop
lahf
lods
or
pop
xor
sub
mov
sahf
das
mov
mov
shrl
mov
mov
lahf
fadds
adc
das
sub
aaa
adc
pop
pop
pop
add
push
xchg
push
push
lahf
out
pop
pop
test
out
movsl
test
lahf
push
and
or
iret
decl
or
call
jbe
clc
fwait
add
ljmp
jg
imul
mov
add
test
push
push
call
push
pop
pop
pop
lahf
incl
and
ja
fiaddl
inc
push
xor
jmp
loop
mov
das
mov
mov
lahf
lahf
sub
dec
mov
shrb
das
mov
add
pusha
sbb
pusha
movsl
pop
test
sub
adc
das
push
repz
int
test
pop
inc
pop
inc
aaa
lock
out
pop
xchg
pop
pop
imul
xchg
outsl
fcomps
pop
lahf
test
mov
pop
movsl
lahf
add
cwtl
out
add
scas
outsl
add
aam
scas
mov
iret
cmpsb
scas
pusha
in
dec
xchg
repnz
daa
arpl
cmp
movsl
test
adc
mov
xchg
iret
xor
xor
xchg
mov
inc
and
mov
aas
or
pop
test
dec
fst
not
adcl
inc
sbb
cmpl
fbstp
jbe
mov
add
ret
aas
mov
aas
das
pop
test
mov
dec
mov
scas
mov
add
push
ss
pop
cmpxchg
das
incl
mov
and
fdivrl
sahf
pushl
or
add
push
lret
lds
clc
jmp
push
icebp
jns
push
inc
lahf
popf
arpl
mov
aas
push
inc
mov
fists
add
fists
and
pop
psubusb
xor
das
sub
inc
mov
out
lahf
or
sub
cmp
pop
pop
outsl
iret
adc
mov
cs
fsubrs
push
mov
cmp
add
das
ljmp
jg
or
inc
das
les
sub
lahf
mov
lahf
pop
mov
test
lods
lahf
insb
sar
sbb
xor
gs
mov
mov
inc
lahf
pop
dec
or
lahf
or
adc
in
adc
iret
stos
inc
pushf
add
jno
decl
orb
les
add
outsl
fists
movsl
add
insb
jno
movsl
pop
fildll
push
sub
iret
pop
add
jbe
das
push
movsl
push
rcrl
add
xchg
pop
dec
das
das
das
test
or
jg
push
pop
das
mov
enter
dec
mov
gs
jae
cmpsl
aas
stc
lcall
mov
mov
lea
and
loope
push
aaa
mov
out
ss
mov
fmul
xor
push
xchg
icebp
push
push
test
aaa
jmp
dec
push
push
jmp
xorb
mov
cld
fmulp
jp
push
dec
sub
lods
iret
das
jg
xchg
pop
das
ret
rorb
sub
clc
mov
dec
out
outsl
in
push
movsl
das
mov
jecxz
das
push
out
pusha
xor
and
jg
lahf
lods
sub
cmp
ret
rcl
mov
or
cmp
lahf
aas
and
pop
das
pop
inc
pusha
lahf
insb
in
push
lods
je
mov
rolb
shlb
push
orl
setg
lahf
mov
fs
fmuls
push
push
lahf
out
mov
cwtl
lahf
mov
mov
out
and
lods
ret
mov
test
out
popa
and
or
das
dec
pop
and
push
push
pop
out
push
add
mov
pop
pop
adc
fcmovne
mov
dec
subl
bound
das
sub
imul
test
mov
push
decl
nop
inc
mov
dec
mov
push
mov
aas
aad
sub
aas
dec
arpl
mov
jno
or
aas
mov
aas
insb
lods
sub
or
mov
pop
mov
pop
dec
add
adcb
mov
shlb
out
sub
out
lods
push
rorb
out
add
sub
out
push
rcrb
pop
seto
movsl
lods
repz
pushl
cmp
mov
shlb
rol
iret
pextrw
pop
test
mov
scas
jg
pop
pop
das
out
cmp
popa
lock
push
das
push
sub
dec
out
aad
cmp
iret
ljmp
mov
out
iret
mov
sbb
popl
iret
das
push
popf
pop
mov
pop
inc
pop
movsl
out
inc
imul
push
cmp
mov
pop
out
aaa
sbb
pop
bnd
dec
cld
out
aam
pop
fdiv
and
ret
cs
push
clc
test
ss
push
push
sbb
lahf
pop
loop
mov
mov
sarb
out
aas
lods
lds
pop
mov
arpl
mov
out
lahf
bound
push
lahf
aad
and
scas
pop
pop
add
movsl
pop
pushf
int
push
incb
fisubrl
push
rolb
xchg
ret
das
out
mov
das
out
inc
cld
das
cmp
jmp
mov
stos
out
das
stos
dec
stos
push
out
out
leave
ljmp
out
inc
test
icebp
push
mov
filds
mov
xchg
jg
sarl
or
je
mov
in
fildll
or
aam
mov
jbe
mov
push
jmp
dec
subb
orl
adc
push
xchg
push
push
or
and
mov
scas
test
dec
stos
mov
imul
or
mov
scas
lahf
mov
pop
inc
outsl
push
mov
xchg
scas
mov
dec
in
dec
pop
test
in
adc
mov
das
decl
sbbb
vmovhpd
mov
pop
enter
sub
inc
xlat
pop
je
pop
in
cmpsl
push
out
imul
or
xor
pop
xchg
or
imul
push
pop
pop
mov
rcrb
lahf
pop
mov
dec
es
sbbl
jecxz
and
insl
fimull
nop
jno
mov
pop
outsl
or
test
fildll
mov
mov
mov
pop
sbb
loop
hlt
or
or
add
jle
aad
push
sbb
push
sub
imul
mov
sbb
push
in
or
mov
cld
xchg
jnp
ja
out
add
pop
sbb
mov
sarb
pop
pop
shrb
xchg
adc
adc
scas
aas
sub
cs
aad
lahf
aas
dec
ljmp
mov
in
cmp
dec
iret
jns
fsubl
daa
mov
sub
aas
adc
xchg
jo
popa
push
xor
push
lods
push
lcall
fistpll
mov
gs
addb
adcl
sub
pop
or
sub
cmp
and
and
add
cmp
lds
ret
scas
popl
xchg
fildll
fistps
or
xchg
fisttps
push
adc
adc
sub
popa
subl
add
push
add
mov
mov
lahf
and
push
add
mov
pop
mov
lahf
mov
incl
leave
lret
in
out
add
enter
jg
mov
cmpb
addb
pop
mov
inc
dec
jp
shrb
dec
jg
inc
push
adc
adc
add
cmpps
pop
test
pop
xchg
outsl
addps
mov
push
add
adc
push
seto
dec
ret
inc
call
push
mov
mov
scas
adc
add
fsubs
jbe
aas
das
and
fwait
popa
lods
outsl
and
xor
pop
inc
dec
ljmp
fbld
add
pop
mov
insb
sub
scas
nop
incl
xchg
lcall
adc
and
sub
jg
and
scas
or
or
arpl
push
pop
mov
iret
pop
rcrl
enter
movb
or
iret
sub
mov
es
mov
lfs
dec
bound
pop
out
bswap
mov
shrb
arpl
nop
jmp
xchg
daa
in
sti
call
pop
or
mov
bound
aam
lcall
arpl
out
lds
xchg
pop
out
adc
test
in
push
and
stos
mov
mov
lret
aas
out
xchg
je
test
mov
jmp
jg
xor
rdtsc
ss
out
lahf
out
xor
add
out
push
xor
push
out
pop
inc
and
out
outsl
ret
gs
mov
adc
or
out
das
cmp
and
mov
out
out
lds
push
mov
out
out
adcb
cmpb
pop
stos
sbb
cmp
adcb
and
mov
orb
push
fdivr
add
cmpsl
mov
iret
and
test
mov
bound
inc
mov
sub
out
sub
push
mov
out
sub
push
mov
mov
pop
dec
push
repnz
mov
and
mov
das
out
mov
mull
in
or
rolb
dec
inc
imul
lahf
stc
pop
mov
out
inc
jmp
dec
das
dec
addr16
push
repnz
sbb
out
inc
add
out
mov
es
fisubrs
pop
inc
arpl
push
sarb
shlb
stc
pop
inc
mov
rcl
mov
push
and
or
rcrb
lds
adc
mov
test
das
mov
out
fildll
insb
ret
add
repnz
inc
fimuls
sub
fisttps
or
sub
pop
add
rorb
bound
roll
and
scas
cmp
lahf
aas
mov
inc
sub
mov
jbe
mov
scas
or
xor
mov
mov
pop
push
out
fistps
mov
pop
adc
mov
xor
jg
arpl
pop
jecxz
lahf
loop
popf
ret
mov
add
insb
xchg
mov
out
fisttps
rolb
out
pop
mov
and
add
shrl
outsb
pop
aas
out
sub
inc
fmuls
adc
out
pop
inc
dec
clc
les
add
inc
sbbb
test
xchg
pop
nop/reserved
sbb
sbbb
mov
das
out
mov
fwait
mov
out
sub
sbb
out
mov
stos
add
out
add
push
mov
adc
stc
scas
xchg
adc
sbb
mov
test
pusha
xor
pop
iret
je
shrb
pop
mov
addb
out
dec
out
lds
add
scas
out
sub
push
mov
fucomip
or
pop
pushl
int3
push
and
out
inc
cld
xchg
mov
mov
pop
rcr
addb
mov
gs
call
ljmp
nop
adc
gs
sbb
imul
push
and
filds
popl
xor
and
adc
out
push
test
sbbb
pop
les
incl
push
add
inc
or
sbb
hlt
cwtl
dec
or
add
pop
dec
insl
push
push
pop
pop
dec
sub
scas
aas
push
add
inc
pop
add
addb
out
pop
xor
addb
and
iret
inc
or
shlb
addb
pop
pushl
pop
add
xor
mov
std
jae
mov
fmuls
mov
lcall
fstps
ljmp
mov
add
das
fcomps
cmp
push
add
decl
incl
lret
fcomip
mov
or
gs
sbb
cs
xchg
add
or
or
scas
jg
cmpsb
mov
outsl
outsl
insl
push
and
xor
pop
mov
std
das
sub
pop
adc
push
cli
adc
ljmp
inc
mov
xchg
sub
push
push
sbb
outsl
inc
jo
sar
rcrb
cmpb
mov
jno
movntq
push
mov
mov
mov
movsl
lds
add
jg
cwtl
movsl
fstpl
cmovne
outsb
pop
mov
popa
or
cmovb
mov
bound
mov
movups
push
cmp
insl
add
cmp
pop
fwait
or
jge
iret
xor
and
loope
ljmp
cmp
mov
ud0
sub
lfs
stos
inc
ljmp
add
inc
mov
sub
aas
je
or
mov
mov
iret
push
or
jg
dec
daa
aaa
scas
sbb
mov
inc
sbb
ljmp
push
pop
cwtl
xor
cmpb
imul
cli
lds
adc
into
and
pop
lahf
lcall
movsb
loop
sahf
lods
fimull
cmpsb
pusha
stos
dec
mov
daa
pop
adc
rcr
incl
dec
filds
loop
dec
fs
das
mov
aam
faddl
add
xor
cld
das
add
nop
add
adc
push
mov
mov
dec
in
mov
mov
das
sub
mov
xchg
and
scas
mov
dec
fists
adc
lds
inc
pusha
jg
sbb
bswap
sub
dec
sar
add
pop
fistps
add
jmp
inc
sub
mov
shlb
xchg
pop
adc
insb
das
jl
outsl
adc
call
decl
das
outsl
pop
into
test
cmpb
cmp
in
adc
sbb
test
data16
dec
or
iret
pop
mov
rolb
and
mov
xor
movb
out
outsl
fildll
orb
hlt
mov
push
pop
push
dec
jg
ss
iret
fistpll
xor
and
sbb
iret
dec
std
xchg
or
pop
shrl
outsl
jl
imul
adc
jg
mov
movsl
or
arpl
xor
jo
add
insb
and
inc
xchg
sbb
pusha
sbb
sub
fistl
add
iret
jns
gs
scas
mov
test
das
or
loop
je
lcall
and
pop
and
xchg
push
arpl
out
add
test
rorb
sub
mov
cwtl
js
ret
adc
mov
mov
ss
ljmp
mov
jmp
pop
mov
iret
lods
aaa
mov
xor
and
pandn
aam
das
out
push
xor
das
pop
push
add
shrl
or
dec
mov
jecxz
iret
lods
nop
push
adc
jg
sub
dec
mov
pop
shlb
rcrb
mov
or
aam
inc
push
and
mov
xor
pop
inc
aam
das
jmp
mov
rorb
lcall
push
pop
mov
iret
jbe
pop
push
lahf
inc
and
mov
add
out
aas
xchg
rorl
mov
or
dec
sub
fcomp
iret
imul
sarl
pop
loopne
inc
out
not
ret
sub
mov
dec
pushf
dec
popf
aaa
int
iret
lahf
ret
addr16
inc
dec
lahf
push
xor
add
bound
lods
add
data16
lahf
push
fsubs
dec
orl
aas
inc
add
inc
dec
mov
sub
fisubrl
inc
or
or
jg
stc
pop
aam
jge
push
xchg
xchg
ret
xchg
es
pinsrw
stc
pop
aam
ret
test
cmp
in
adc
sarb
pop
and
imul
pop
out
mov
pop
popa
sub
ud0
mov
fisubrl
pop
das
arpl
adc
mov
test
out
iret
and
xor
inc
mov
out
push
adc
pop
iret
out
inc
cmp
bound
iret
inc
cmp
test
call
loope
aam
call
mov
pusha
add
push
out
outsl
pop
pop
xorb
fistpll
sar
shlb
outsl
inc
push
xchg
arpl
xchg
and
aas
mov
push
sub
jmp
xchg
iret
pop
rorb
adc
mov
dec
or
iret
dec
lods
loope
sbb
pextrw
gs
mov
mov
dec
and
lods
pop
sub
lret
aam
adc
subps
popa
and
shlb
fldenv
sbb
pusha
aas
pusha
imul
adc
popl
pop
push
and
push
add
mov
pusha
xorps
and
hlt
lea
mov
add
nop
pop
or
js
pop
mov
or
andnps
pop
xor
cmpsb
push
mov
fistpll
out
scas
pop
and
or
and
test
je
daa
push
daa
js
mov
out
daa
nop
roll
mov
call
pop
out
movsl
xorb
scas
or
bound
iret
and
test
or
bound
iret
das
dec
loope
mov
iret
or
pop
aam
insb
mov
xchg
popa
adc
add
inc
orl
pop
sbb
ljmp
inc
jmp
lahf
test
sti
mov
negb
jg
mov
adc
aas
sbb
mov
in
push
mov
mov
mov
iret
jg
rolb
out
das
inc
mov
imul
cmp
mov
dec
fisubrl
popf
scas
fists
mov
rorb
dec
decb
or
cld
das
or
das
insl
mov
adc
cmc
add
add
mov
mov
dec
bswap
mov
addr16
sarl
xor
pop
xchg
add
push
or
aas
and
xchg
in
lcall
add
lahf
pop
mov
or
das
add
or
or
data16
and
mov
and
mov
pop
sbb
dec
jg
pop
adc
jbe
ja
outsl
and
shll
xchg
movsb
lds
adc
add
fisttps
xchg
adc
add
and
adc
xchg
scas
iret
loope
adc
iret
arpl
add
mov
and
ljmp
ljmp
lcall
xor
pop
imul
pusha
iret
adcl
jg
push
or
cmpsl
rclb
fstpt
leave
pop
cmpsb
push
pushl
and
pop
sbb
dec
stos
push
loopne
mov
cmp
ficoml
sbb
sub
or
dec
pop
adc
in
loopne
loope
cld
lahf
and
push
push
int
cmp
jne
add
add
and
pop
add
adc
out
adc
nop
or
lret
stc
pop
adc
scas
inc
dec
pusha
cli
inc
dec
xor
outsl
and
fistpll
call
in
aaa
hlt
mov
or
push
in
repz
cmp
cld
ljmp
pop
cltd
sbb
mov
mov
popf
in
push
push
xchg
ljmp
lods
test
loop
shrl
in
mov
push
cmp
fldenv
loop
test
adc
or
daa
std
das
cmp
dec
and
imul
mov
outsb
adc
cmp
lds
jge
in
lods
jb
outsl
or
nop
lcall
das
inc
cmpsl
add
adc
jg
mov
int3
das
aas
xchg
ret
mov
and
adc
dec
and
iret
out
add
fsubrs
iret
das
or
data16
iret
insb
es
pop
das
xor
das
fwait
inc
cmp
iret
inc
call
sbb
mov
cmovg
lds
mov
adc
mov
mov
iret
lock
xchg
pushf
sub
jnp
fmuls
sbb
mov
inc
lcall
add
mov
pop
incl
shlb
push
mov
cmp
mov
mov
sbb
call
dec
add
shrb
loopne
sbb
cld
xchg
pop
ror
adc
push
jp
push
fsubs
int
jg
scas
inc
jecxz
sub
inc
roll
scas
mov
jno
cmp
or
ss
pushl
das
inc
sub
mov
mov
sub
imul
pop
rcrb
fildll
mov
lahf
es
fwait
add
sub
ss
es
sbb
or
das
jns
dec
inc
fwait
dec
pop
in
adc
pop
mov
scas
xor
cmpsb
push
sub
test
add
dec
aas
push
arpl
scas
lahf
adc
mov
pushaw
inc
loop
ret
iret
movl
fisttps
mov
iret
fists
sub
lahf
unpcklps
xchg
movsl
lahf
inc
xchg
movsl
or
dec
pusha
jg
dec
sub
dec
leave
shrb
or
push
and
mov
lahf
lea
xchg
movsl
pop
add
lahf
dec
xchg
ret
lahf
imul
pop
aam
lahf
addb
lret
movsl
mov
sbb
mov
lahf
pop
mov
mov
lahf
das
mov
sub
lahf
pop
int
push
inc
out
fisttps
xchg
ljmp
icebp
pop
or
ja
dec
fs
orb
sub
and
lahf
pusha
mov
mov
lahf
imul
mov
inc
out
das
in
add
pusha
cmp
sub
sub
shlb
pusha
and
add
das
fiaddl
sub
aas
lahf
incl
lret
push
inc
loope
std
add
scas
push
xchg
pop
fisubl
jp
aas
fwait
scas
out
adc
pop
das
or
or
popa
adc
inc
xor
fimull
pop
xchg
push
pop
mov
pop
or
lahf
das
adc
pop
ret
movsl
outsl
das
addb
lahf
cwtl
sub
ss
lahf
pop
add
mov
sbb
dec
xchg
ss
xchg
jbe
pop
fists
loopne
xor
pusha
add
mov
and
cwtl
sbb
lahf
lahf
jbe
or
fildll
lahf
push
xchg
movsb
jg
mov
into
je
mov
xchg
lahf
add
lahf
shl
mov
mov
lahf
jno
rolb
mov
push
popa
mov
sahf
lahf
sub
stos
xchg
pop
aas
incl
out
mov
cmpsl
xor
mov
jmp
mov
shlb
adc
mov
sub
arpl
fildl
das
or
xor
aas
lahf
push
pop
push
sbb
xchg
add
dec
lahf
jge
cmp
mov
xchg
jnp
mov
mov
lahf
pop
xchg
cld
das
mov
push
cmpsl
mov
or
ljmp
push
adc
cltd
jmp
inc
pop
push
mov
fdivs
mov
jne
test
adc
bnd
sbb
ret
cmovb
push
pop
lahf
adc
lds
das
lahf
or
jbe
lahf
mov
lahf
mov
lahf
pusha
xchg
cmpl
mov
push
das
dec
fwait
add
mov
mov
pop
popa
mov
or
bound
cmp
mov
push
jg
sub
add
aaa
cmpsl
repnz
or
mov
pop
mov
iret
adc
pop
sbb
iret
bound
inc
in
adc
fildll
test
xor
cmp
lahf
mov
push
iret
insb
mov
push
test
inc
fistps
aas
mov
add
das
mov
mov
push
je
jge
sub
add
cwtl
sub
cmpsb
adc
sub
shlb
push
das
or
inc
sub
mov
leave
rcrb
pop
lahf
or
sub
sub
fldl
mov
jmp
aas
mov
sahf
sub
sub
shll
mov
mov
das
xchg
mov
leave
lahf
pop
mov
imul
jmp
sub
das
mov
das
or
les
int
orb
mov
cmpsl
dec
lea
sub
insb
push
push
repnz
sbb
inc
mov
shlb
iret
das
adc
sbb
das
jmp
push
mov
mov
sub
aas
out
fsubs
adc
das
mov
leave
push
lahf
lds
out
lahf
push
xchg
movsl
mov
lahf
pop
fimull
jg
lahf
mov
testl
aam
push
repnz
push
outsl
cmp
mov
int3
mov
das
dec
or
xor
lcall
push
dec
add
dec
or
lahf
mov
iret
or
mov
cli
mov
in
push
add
push
iret
adc
imul
adc
or
cmp
adc
sbb
lahf
iret
and
pop
movsl
lahf
mov
cwtl
sub
rcrb
imul
pop
rcrb
lahf
or
mov
lahf
and
mov
mov
das
and
mov
dec
dec
cmpsl
cmp
lds
inc
fwait
mov
popa
mov
fsubrs
dec
ffree
mov
sbbb
iret
or
cmp
pop
adc
dec
sub
or
mov
daa
test
inc
pop
das
aad
mov
push
test
sub
or
dec
push
pop
rolb
xchg
lahf
das
pop
xor
or
push
outsb
lret
leave
push
fadds
push
repnz
xchg
pop
jb
cmpsl
add
push
dec
xor
lods
fcompl
insl
mov
leave
rcrb
adc
das
mov
push
jo
shlb
fnstcw
outsl
cwtl
stos
xchg
cli
mov
mov
lods
out
iret
xor
and
pop
xchg
push
test
das
icebp
mov
addr16
mov
orl
aas
test
jecxz
pop
add
dec
std
sarl
mov
dec
in
jno
jg
push
sub
lods
stc
or
dec
mov
daa
mov
jmp
or
push
daa
ss
aas
add
lahf
jno
pop
test
scas
fcoml
push
push
scas
jo
xchg
push
sahf
addl
jg
xchg
shl
push
push
jg
decl
popf
and
fadds
push
push
push
cmpl
add
xchg
push
pop
lahf
push
xor
lahf
mov
lahf
sub
add
es
or
dec
stos
and
add
lahf
sub
aas
add
cwtl
sub
sub
mov
mov
mov
aam
insl
addb
inc
repnz
and
dec
dec
mov
outsl
or
sub
xorb
add
or
mov
mov
aas
mov
aas
mov
mov
sahf
cwtl
popa
test
decl
movb
leave
mov
rorl
dec
test
add
pop
fisttps
add
ret
fcmove
dec
mov
enter
dec
bound
push
bound
cmp
push
push
ret
or
dec
sub
adc
inc
scas
cvtpi2ps
add
mov
iret
scas
mov
incl
lods
fsts
lods
subb
pop
repnz
cs
and
sbb
jecxz,pt
imul
dec
pop
push
scas
fdivrl
pop
out
push
les
aam
inc
sub
lea
scas
push
adc
pop
scas
add
insb
das
scas
mov
stc
dec
or
dec
push
jecxz
arpl
addr16
xor
scas
das
push
sbb
push
xchg
cld
jg
sarl
xchg
xor
das
lahf
dec
aam
push
das
lahf
imul
imul
sub
mov
lahf
scas
adc
mov
sub
or
lahf
adcb
scas
add
push
adc
pop
push
lahf
scas
mov
sub
lahf
push
adc
adc
or
pop
push
lds
arpl
adc
ret
pop
adc
loop
inc
mov
xchg
cmp
scas
pop
cmp
test
mov
test
or
xchg
jmp
inc
pop
push
scas
xchg
xor
ret
push
fildl
outsb
or
mov
cld
bound
sub
push
scas
adc
pop
dec
das
jno
push
push
mov
jg
adc
outsb
mov
in
pop
loop
jp
les
add
pop
fs
and
push
adc
scas
inc
dec
sub
iret
scas
sbbb
adc
mov
scas
add
insb
scas
mov
imul
sub
push
rorl
scas
inc
decl
dec
std
and
bound
stos
out
scas
mov
pop
adc
adc
pop
cmp
das
dec
cmp
cmc
mov
cmpsb
mov
pop
jmp
decl
pusha
dec
into
out
add
or
sbb
sub
popa
iret
insl
ret
dec
scas
push
add
mov
int
dec
sub
xchg
pop
and
inc
sbbb
pop
xor
adc
imul
pop
or
xchg
imull
fmuls
aad
sub
dec
scas
in
mov
mov
dec
scas
das
jbe
or
mov
mov
fisubl
adc
pop
stos
mov
addr16
scas
pop
enter
mov
aas
push
adc
pop
add
andb
decl
push
or
xor
adc
es
pop
ret
mov
out
outsl
or
add
mov
and
inc
dec
pop
inc
push
adc
popa
or
fcmovb
mov
sbb
or
push
scas
adc
das
addl
mov
scas
xor
and
jg
repnz
xor
dec
test
push
jl
jno
fdivl
jne
insb
xor
adc
incl
adc
and
orb
xor
jg
inc
enter
sbb
and
push
loop
test
insb
xchg
adc
or
shufps
and
test
das
sbb
rorb
xchg
movsl
enter
mov
decl
fwait
out
pop
inc
pusha
push
pop
mov
out
cwtl
vmovlps
test
lods
mov
pop
push
add
mov
sub
loope
icebp
test
sub
sub
aad
mov
sub
int
and
stc
or
inc
inc
push
xor
loope
lcall
push
out
mov
ja
andl
jmp
push
out
fwait
jge
popf
test
push
pop
adc
jmp
jns
push
and
sbb
adc
push
ljmp
cmp
xor
loope
mov
jbe
repnz
xor
call
pop
aas
cld
test
aad
push
push
jbe
scas
xlat
call
push
add
dec
lods
or
add
dec
aad
add
mov
int
cmc
pop
adc
test
mov
test
nop
push
icebp
incl
fsubrl
or
jnp
xor
ljmp
pushf
add
pop
xor
or
hlt
fiaddl
pop
dec
pop
or
xchg
lock
push
xchg
jl
call
xor
repnz
jno
mov
xor
cmp
xchg
sahf
hlt
cli
jb
imul
xchg
je
dec
jbe
and
bound
out
aad
pop
rorl
mov
ret
into
cmp
incl
in
xchg
imul
cmp
sbb
jno
sub
or
ret
data16
scas
jecxz
inc
pop
in
push
mov
mov
scas
or
scas
xchg
movsl
test
sbb
sbb
and
push
nop
ljmp
adc
dec
mov
add
fs
ljmp
pop
cmp
mov
dec
aam
mov
jno
add
stc
sbb
movsb
repnz
dec
cmpsl
push
xchg
sub
cmc
jb
in
mov
aaa
or
seto
lds
pop
push
iret
data16
push
cltd
push
inc
jmp
test
in
or
cmp
scas
mov
jmp
cmp
sbb
xchg
in
dec
adc
xor
push
test
pusha
adc
les
mov
icebp
pushl
div
push
inc
xchg
cmp
or
cwtl
push
sub
adc
incl
stc
dec
in
and
pop
inc
orl
mov
mov
mov
pushl
cmp
lods
inc
push
dec
outsb
repnz
mov
mov
add
cmpsb
push
call
pop
jmp
rorl
push
addl
int3
or
cwtl
add
inc
add
or
sar
adc
mov
es
cmp
ljmp
sbb
sub
scas
aas
mulb
lret
jb
fwait
or
stc
or
sub
jg
outsl
stos
xchg
sub
xor
shrb
pushf
jmp
adc
decl
mov
test
loopne
mov
addl
jecxz
cmp
push
dec
lret
mov
jle
shrl
pop
mov
jmp
push
cltd
loop
loope
pop
cmc
fildll
mov
xchg
mov
jno
aas
leave
out
cmp
sbb
inc
pop
dec
ficoms
les
or
cli
pusha
push
pop
lods
jne
inc
hlt
jns
daa
mov
mov
and
jg
in
and
push
jnp
cmp
jmp
adc
inc
push
add
cld
sub
stos
ret
inc
sub
jecxz
popf
out
scas
shl
test
cld
mov
push
fcmovb
push
enter
mov
scas
orl
pop
mov
arpl
dec
cli
cmp
shl
lds
lcall
in
jg
lcall
push
and
mov
adc
sti
cmp
add
push
push
icebp
mov
pop
cmpsb
cmpsb
dec
pushf
inc
ja
fsubrl
sar
lcall
decl
sbb
insb
push
frstor
inc
mov
jo
pop
enter
lcall
pusha
movsb
pushf
aas
mov
dec
and
add
das
rol
sub
pushf
pushl
sbb
push
xor
decl
jl
bound
movsb
mov
inc
sub
das
pop
sub
mov
inc
lahf
cmp
or
and
cmp
sbb
out
ja
inc
push
fbld
cli
lods
fwait
lods
icebp
insb
ja
sub
and
pushf
das
outsl
pop
sbb
nop
inc
and
les
xor
mov
cmpsl
mov
push
pushf
mov
mov
sbb
rcll
or
leave
jns
push
jo
push
push
out
pusha
jno
jmp
lock
mov
das
aas
leave
fadd
xorb
in
jge
hlt
sub
pop
icebp
call
xor
popf
or
dec
xor
daa
jne
dec
or
ljmp
jnp
cmp
cs
das
out
inc
sbb
int
adc
lcall
test
xor
sbb
jl
sbb
xchg
dec
pop
shlb
dec
je
pop
cmp
and
lcall
mov
mov
mov
adc
pop
sbb
adc
into
fisubrs
js
lret
mov
aaa
into
mov
push
rclb
add
shll
es
es
jle
cli
pop
mov
xchg
sub
jg
sub
dec
aam
fcompl
arpl
mov
jle
pushf
or
test
in
ficoml
xor
clc
mov
je
cltd
cmpsb
mov
sbb
xchg
loopne
das
dec
int
incl
or
loopne
pushf
xchg
push
call
test
push
add
rclb
sub
incl
mov
cli
leave
push
push
daa
push
or
repz
mov
or
push
xchg
fsubp
test
movsl
jnp
leave
jmp
movsl
imul
adc
scas
mov
pusha
jge
mov
sub
push
jg
lcall
je
pop
shrb
cltd
mov
sar
aaa
ret
shl
pushl
das
aaa
filds
inc
mov
daa
shr
mov
mov
jb
dec
inc
push
adc
and
stos
movsb
xchg
or
mov
addr16
lcall
sub
mov
ljmp
psubd
cmp
jb
ja
scas
and
bound
lock
mov
adc
mov
std
jne
xor
pop
push
inc
loope
xor
movsb
clc
icebp
lcall
adc
pop
or
out
cmp
lcall
sbb
insb
mov
loopne
dec
push
mov
je
fwait
add
jmp
mov
mov
cmp
adc
mov
push
call
xor
into
or
fstp
aam
lods
aam
jae
mov
xchg
lret
push
dec
sub
inc
icebp
push
sbb
ss
jecxz
fcomip
or
mov
outsb
jno
push
push
inc
pushl
icebp
lcall
xorl
rorl
incl
cmp
rorb
lcall
pop
gs
xchg
cmpsb
inc
add
pushl
clc
add
mov
jae
xlat
clc
aam
sbb
mov
fnstcw
and
sub
xchg
or
pop
aam
daa
mov
sbb
mov
call
aas
xlat
aad
xchg
test
xor
and
aas
enter
leave
add
loop
xor
jg
inc
ret
adc
pop
or
jge
lahf
add
fdivr
ljmp
push
sub
mul
sbb
and
add
dec
pop
push
jnp
mov
xchg
or
dec
jmp
das
cmpsb
adc
nop
lcall
mulb
pop
lcall
sbb
cmp
adc
movsb
push
aam
aad
shll
loopne
mov
mov
cwtl
and
mov
push
iret
jmp
xor
jg
decl
add
jmp
adc
and
adc
sub
pop
adc
ret
mov
ljmp
or
cmpsl
je
adc
add
bound
mov
and
iret
pop
push
inc
add
psrld
sbbl
lahf
paddw
das
shrb
add
retw
mov
and
ljmp
pop
les
jne
imul
fcmove
dec
pop
mov
adc
insl
xor
xchg
popf
add
or
jg
fs
jo
sub
and
in
vunpcklps
or
pop
pop
or
das
mov
xor
stc
mov
xor
test
stos
jg,pn
testb
jnp
jg
jg
inc
dec
mov
jmp
cmc
add
or
add
lahf
and
or
add
fdiv
incb
call
cld
test
or
cli
cmovne
jg
mov
fnsave
mov
in
mov
add
incl
stc
int3
ds
pop
leave
jb
or
cmp
xchg
cmp
jb
aas
adc
jnp
pop
clc
popa
sbb
enter
notl
das
dec
push
in
pusha
xor
orl
cmp
inc
clc
pop
pop
popf
mov
cmp
dec
push
pop
add
js
scas
jo
add
movl
dec
or
cmp
and
push
jo
inc
mov
dec
scas
dec
movsb
mov
aas
dec
ljmp
outsb
ficomps
pusha
push
adcl
lcall
sub
das
std
stos
jg
daa
sbb
inc
in
push
mov
negl
mov
pusha
ret
sbb
movsb
je
push
scas
fwait
xchg
inc
outsl
add
and
mov
out
mov
shll
sbb
and
sbb
and
adc
test
cmp
mov
ljmp
out
push
fcoms
mov
je
sub
and
cltd
lock
test
mov
add
lahf
pusha
lds
das
mov
ss
scas
sbb
add
setg
adc
pop
das
lods
and
pop
aas
cmp
mov
out
mov
jg
fmuls
jg
push
lods
xor
pop
pop
insb
and
and
pop
or
lcall
and
push
or
add
mov
iret
jg
xor
inc
lahf
arpl
mov
subl
outsl
scas
xchg
inc
mov
lahf
das
aas
popf
inc
mov
das
add
mov
das
bound
dec
dec
pop
push
add
or
cwtl
cld
scas
rcrb
pusha
jno
out
jbe
in
adc
xadd
bswap
out
dec
mov
shll
or
or
mov
lcall
mov
rolb
outsl
sub
mov
das
call
pop
or
push
dec
decl
sub
xchg
cltd
pop
dec
jbe
pop
and
test
and
cmp
pop
pop
or
mov
add
add
push
scas
pop
mov
adc
out
fnsave
je
mov
lock
fistl
jmp
das
or
sbb
pop
filds
es
or
incl
jno
sbb
into
and
and
inc
comiss
arpl
outsl
lcall
add
fists
das
dec
arpl
sbb
inc
or
outsl
fildll
ffreep
dec
sbb
pusha
fildll
mov
or
sub
outsl
sub
test
test
mov
mov
fisttps
out
jmp
mov
pop
andl
mov
jae
cmp
cmp
push
imul
ss
adc
iret
sbb
inc
lcall
test
push
stos
lahf
scas
mov
call
sub
test
clc
movnti
outsl
dec
sbb
cli
mov
cmp
outsl
fistps
das
cmp
inc
or
pushf
pop
sub
xor
xor
mov
jg
xor
sti
add
jecxz
mov
aas
scas
nop
jmp
lcall
jg
cwtl
cmpsl
cli
adc
push
jecxz
xorl
adc
inc
sub
mov
mov
or
std
das
loop
mov
inc
mulb
inc
adc
test
xor
xchg
pand
mov
clc
andps
cmp
lahf
dec
aaa
pusha
jg
mov
ss
scas
das
sbb
xchg
xchg
fwait
gs
pop
loop
bound
xchg
fisttps
sti
psrlq
fistl
or
stos
add
lahf
loop
sub
sar
mov
sub
mov
movb
decl
stc
lahf
test
fadds
outsb
xchg
lret
adcb
jnp
popa
pop
sbb
daa
inc
bound
out
sbb
fisubrl
and
and
cli
out
push
pop
pop
or
jg
iret
or
andl
test
sbb
maxps
lahf
lahf
jg
lea
das
int
add
test
dec
inc
or
adc
mov
pop
dec
test
push
push
mov
or
cli
jb
mov
sbb
jbe
scas
sub
movb
or
das
aas
je
add
fildll
cltd
outsb
mov
leave
pop
fs
cltd
mov
jbe
lcall
lea
iret
mov
das
mov
cmp
sbb
and
cmp
push
or
and
sub
sub
jg
fmuls
icebp
pop
addb
mov
aad
fwait
push
in
ret
pop
lahf
mov
lahf
lods
test
popa
or
dec
push
test
adc
or
lds
scas
clc
fwait
insl
mov
and
jge
push
jecxz
aad
add
stos
aas
pop
iret
pop
aam
and
sbb
jbe
mov
imul
mov
or
fistpll
iret
push
ret
dec
dec
adc
subl
push
scas
sub
les
and
cs
jg
dec
xchg
jbe
les
decl
stos
add
fistps
fistpll
ret
add
dec
sub
stc
lods
pop
dec
cmp
punpcklbw
arpl
fisttps
adc
push
lahf
das
fisttps
or
dec
jg
xor
mov
dec
dec
adc
or
add
dec
jbe
pop
iret
cvttps2pi
arpl
push
and
popa
pop
adc
dec
mov
dec
adcb
lahf
scas
mov
cmp
sub
sub
pop
mov
pusha
outsl
out
out
sub
sub
dec
sbb
and
mov
xor
js
cli
std
inc
or
lahf
das
fisttps
dec
les
add
dec
sbb
pop
bound
out
dec
push
add
push
adc
insb
lahf
dec
push
lds
decl
test
out
decl
sub
mov
outsl
lahf
jnp
dec
sbb
mov
filds
mov
adc
inc
pop
iret
pop
jmp
mov
xor
pop
ret
rcrb
cmpxchg
push
push
dec
jg
arpl
add
mov
mov
les
pop
mov
insb
or
adc
dec
dec
imul
or
jg
add
out
in
lcall
or
mov
lahf
lar
pop
lods
fstpl
test
push
fbstp
movsl
push
cwtl
mov
es
or
pop
outsl
scas
decl
push
ret
les
jmp
inc
or
test
add
pushl
xchg
xchg
enter
scas
incl
fsubs
incb
xchg
scas
aas
loop
scas
inc
pop
aas
mov
mov
lahf
and
inc
std
xchg
stos
push
shll
pop
jg
mov
fwait
arpl
cmp
push
adc
mov
out
mov
aas
dec
clc
cmp
or
mov
je
js
sbb
addb
or
pop
lahf
ret
sub
mov
cwtl
cld
pop
or
add
mov
mov
inc
popa
das
pop
pop
push
fmuls
sub
aas
pop
push
cmp
mov
movq
or
and
fistpll
jg
dec
test
popf
pop
inc
jg
out
jmp
pop
inc
cwtl
scas
nop
mov
push
mov
jmp
xor
fcom
mov
xor
jle
xorps
lahf
mov
out
mov
fs
inc
cmp
pop
sub
test
fdivrs
vpmadcswd
lods
mov
sar
fistps
xor
add
push
xchg
lods
push
mov
jne
repnz
add
lds
decl
aas
xchg
and
or
xor
mov
shlb
aad
dec
das
test
fidivrl
out
and
lds
sub
mov
jg
mov
sub
addb
mov
ret
ffreep
orb
mov
or
push
sub
mov
aas
in
inc
mov
mov
ljmp
jmp
dec
fsub
in
xchg
jg
vhsubps
mov
jne
sbb
mov
outsl
pop
and
aaa
fdivr
jmp
aas
arpl
jle
xor
daa
mov
das
push
sub
add
mov
inc
lret
lahf
mov
fidivrs
repnz
xorb
fidivs
pop
popa
adc
in
in
and
gs
mov
iret
dec
je
imulb
pusha
add
adc
out
ret
fsubs
out
movsb
push
fs
fwait
inc
pop
mov
mov
or
in
enter
lahf
push
das
shl
jg
jmp
or
xor
das
jo
es
aas
outsl
xor
movsl
lahf
das
iret
push
mov
jmp
or
push
mov
sbb
sub
and
adc
test
mov
outsl
dec
pop
shrb
aas
aas
jmp
lods
adc
scas
jge
xlat
and
inc
shl
scas
aas
dec
pop
add
jg
or
sahf
pop
mov
lahf
sub
into
dec
jecxz
mov
pop
jmp
sub
mov
adcb
sbbb
xchg
int
in
push
ljmp
popf
ret
or
lods
and
mov
and
push
pop
pop
add
mov
pop
and
fisttps
inc
and
in
es
push
xchg
push
add
sub
add
stos
adc
inc
scas
lahf
jg
jne
rorb
and
mov
pop
rorb
pop
out
insb
xorb
dec
mov
dec
out
das
cmp
and
out
dec
add
mov
pop
lahf
aas
push
les
inc
mov
pop
add
das
xchg
in
mov
movq
jmp
or
js
rorl
mov
dec
adc
ret
decl
outsb
stc
sub
mov
cmpsl
cmp
xchg
jg
adc
sub
lahf
mov
or
inc
popa
stos
jae
ffreep
js
aaa
mov
dec
add
pop
mov
iret
jg
jb
inc
push
mov
xchg
hlt
stos
fs
shr
and
xor
or
sbbb
jg
ljmp
ds
iret
push
incl
inc
fidivrs
outsl
or
adc
pop
pushf
jo
lods
push
shr
inc
sar
pop
xor
sti
out
pusha
mov
scas
mov
fs
cli
sub
dec
call
aas
insb
add
mov
ror
add
inc
test
and
add
xadd
das
jp
incb
mov
dec
cmp
pushf
push
lret
cmp
insl
push
xadd
enter
nop
pop
cltd
lea
ljmp
xor
inc
adc
rcll
decl
movsl
adc
mov
inc
pop
das
mov
cld
jp
sahf
jle
xchg
fists
insl
xchg
sub
dec
xchg
pusha
scas
dec
incl
fdivs
push
or
loop
jg
js
pop
pop
cmc
adc
xor
pop
xor
xor
jg
lcall
std
sbb
gs
stos
dec
hlt
sub
or
pop
fs
mov
test
mov
and
scas
inc
test
xchg
mov
das
fildll
sub
fistps
daa
movsb
mov
pop
out
out
rcll
push
scas
jg
and
jmp
test
jns
ret
popf
shl
dec
lds
lahf
push
add
cmpl
sub
das
lahf
push
or
mov
das
lea
inc
pop
les
add
mov
mov
mov
jg
clc
fbld
lcall
aam
lret
pushw
sbbl
das
aam
mov
bound
lahf
ret
and
cmp
dec
shlb
and
filds
clc
bnd
ljmp
scas
insb
mov
push
push
xor
cmp
das
mov
push
pop
loope
pop
fcoml
or
adc
jmp
out
xchg
test
and
jbe
scas
dec
or
out
cmp
push
add
push
scas
pop
rolb
incl
dec
mov
pop
dec
pop
adc
pusha
cmpsl
das
mov
das
xchg
jmp
data16
mov
sub
aas
int
imul
cld
stos
and
fisttps
inc
dec
aas
pop
lea
sbb
add
inc
test
adcb
jg
imul
or
mov
push
xlat
stos
mov
sub
xchg
cmp
mov
shrb
cvttps2pi
sub
ud0
test
scas
decl
pop
fsubrs
inc
movsb
jb
out
out
inc
clc
pop
sbbl
push
stc
adc
clc
pop
test
jle
ds
cmpsb
push
jnp
sar
mov
dec
pop
push
scas
inc
fadds
or
aas
add
aaa
add
mov
xchg
popf
jg
lods
adc
mov
scas
setb
mov
std
call
in
insb
aas
and
shrl
outsl
bound
outsl
outsl
mov
push
pop
pop
or
xor
add
jg
fildll
arpl
jmp
inc
in
sub
mov
cmp
lahf
mov
ss
das
push
adc
pusha
push
mov
das
jg
adc
mov
pop
jmp
fdivrs
sbb
xchg
push
rcll
rolb
or
jg
filds
int3
out
out
sbb
push
cmpl
cmp
insl
inc
das
psubb
inc
mov
xchg
bound
stc
cld
adc
aam
pop
mov
movb
jge
xchg
scas
jg
push
mov
psubw
inc
push
add
inc
out
and
push
and
call
inc
in
ret
mov
aam
movswl
inc
insl
xchg
movhps
xchg
mov
iret
dec
lods
adc
ud0
and
comiss
mov
aam
jg
or
incl
pop
push
test
std
mov
mov
xchg
pop
inc
test
jne
xorl
adc
inc
and
outsl
sub
push
lahf
pop
mov
xchg
lss
or
pop
or
or
jb
cld
outsl
xorb
outsl
pop
and
add
pop
push
mov
inc
test
imul
aam
adc
adc
movq
push
adc
or
lahf
pop
mov
nop/reserved
bound
push
and
mov
xorb
ret
out
iret
dec
sbb
fmuls
out
das
sub
test
mov
lfs
lods
and
punpcklbw
fwait
dec
jg
add
adc
insb
mov
and
pop
mov
in
adc
mov
pop
mov
add
in
setg
adcb
adcb
setg
adc
pop
enter
ljmp
jno
cwtl
or
pop
mov
adc
add
fisttps
jmp
clc
pop
aas
out
movsl
push
inc
aam
xchg
scas
mov
mull
pop
or
inc
scas
call
les
fists
jmp
shlb
and
clc
decl
mov
mov
fsubr
lods
in
cmp
pop
pusha
adc
pop
aam
lahf
mov
push
punpckldq
and
fistps
mov
pusha
test
sti
and
rorl
outsl
adc
or
bound
jbe
pushl
scas
pusha
and
jg
push
or
popf
fistps
jg
pusha
roll
jg
sbbl
dec
jp
inc
in
loope
unpcklps
push
loop
adc
mov
cmp
pop
shl
jg
adc
pop
mov
mov
repnz
dec
movsb
iret
js
inc
sub
lahf
test
add
inc
add
repnz
inc
and
pop
test
jle
mov
les
cs
or
out
scas
decl
push
lahf
adc
sbb
test
mov
call
push
xor
sub
pop
enter
jmp
lret
adc
xchg
push
inc
pop
inc
or
push
pop
arpl
push
mov
pop
and
mulps
out
das
sbb
out
pop
push
shll
or
pop
jo
pushl
and
mov
fiaddl
call
movsl
sbb
add
jg
pop
aad
xor
fadds
xchg
push
add
call
mov
dec
xor
add
or
sub
lahf
xchg
and
xchg
pushl
adc
jno
insb
das
inc
bound
mov
outsl
iret
roll
mov
scas
pop
cli
jae
jmp
jmp
sub
dec
fisttps
mov
sar
and
fildll
xor
lret
push
pop
movsl
dec
jg
push
lcall
popa
jno
scas
jno
and
xchg
or
out
lock
cmpsl
cmc
mov
add
lahf
mov
lahf
adc
mov
ja
movsb
jle
adcb
enter
xor
bound
mov
jb
jb
xchg
sub
sub
aam
mov
mov
pop
bound
lcall
jg
jmp
outsl
pusha
jbe
fildll
pop
nop
fdivs
aaa
fmuls
push
mov
jg
scas
xorb
pop
xor
dec
or
iret
jmp
adc
sub
mov
lds
pop
in
pop
sti
repnz
imul
pop
das
mov
inc
mov
in
movsb
outsl
scas
es
popa
filds
inc
sbbb
or
mov
jg
mov
lds
adc
or
jg
mov
decl
xchg
rcrl
test
jbe
jge
ds
scas
and
or
and
scas
pop
adc
inc
mov
cmp
cli
test
jmp
call
ret
minps
mov
out
filds
cmc
cmp
movsb
out
jne
sub
xor
pop
or
jg
outsl
das
sub
xor
jg
dec
or
loope
push
cmp
push
ss
inc
ret
jg
and
ja
add
ja
and
loopne
lcall
mov
and
add
nop
lock
outsb
sub
cli
fisubrl
out
bound
xor
mov
jg
sbb
push
aas
pop
insb
or
ud0
mov
dec
mov
or
pop
enter
pop
or
jg
add
adc
or
ljmp
mov
pop
lcall
ret
lcall
decl
pushl
jns
jnp
pusha
out
jmp
fstp
xlat
or
or
popa
xor
sub
ret
jg
lock
adc
or
adc
mov
out
outsl
add
or
es
jg
sub
xor
aas
mov
scas
movhps
mov
decb
sub
outsl
mov
das
jg
add
inc
das
fists
cmp
pop
jb
mov
jg
dec
aam
mov
div
xor
insb
xchg
test
dec
das
bound
mov
and
add
or
pusha
jno
das
lds
or
test
inc
test
aaa
or
lea
clc
dec
sub
stos
out
fmuls
push
cwtl
test
mov
lock
fs
pop
sub
mov
scas
aas
dec
cld
out
inc
rorb
inc
scas
xor
mov
mov
outsl
lahf
sub
ret
xchg
xrelease
lahf
xchg
test
add
ljmp
in
ficomps
sbb
mov
jg
xchg
sahf
in
je
imul
jg
es
mov
dec
icebp
pop
mov
das
test
push
pusha
shrb
ss
jg
add
sbb
cltd
mov
iret
or
subl
aas
out
or
inc
pop
out
adc
rorl
jmp
mov
mov
scas
aam
or
xchg
sbb
cmp
test
sub
sbb
lock
popa
push
xchg
ret
dec
ljmp
aas
xor
cld
xor
mov
out
dec
cltd
aam
push
iret
ret
mov
iret
test
inc
out
mov
outsl
movhps
pop
jne
movsl
rcll
inc
fbstp
mov
pop
pushf
fistps
mov
iret
pop
push
mov
cmpb
xor
iret
mov
bswap
fcmovnbe
add
mov
xchg
aaa
jg
imulb
pop
aad
adc
iret
and
fstps
test
mov
mov
xor
add
das
dec
push
or
scas
das
repnz
mov
xchg
popf
xor
out
pushf
mov
jl
data16
adc
inc
sub
popa
lahf
push
adcb
mov
adc
mov
cmp
dec
or
sub
pop
lahf
xchg
or
and
imul
lahf
push
sbb
leave
jbe
jne
jg
lds
pusha
xchg
dec
outsl
mov
movsb
pop
lahf
bound
ss
fisttps
aas
out
dec
or
pusha
sbb
sub
lahf
fildll
sub
mov
test
pop
setg
mov
scas
mov
push
aam
lahf
sub
ljmp
shlb
loop
das
mov
inc
popf
es
adc
pusha
daa
sub
scas
mov
add
or
outsl
test
out
lds
mov
cmp
pop
inc
sub
outsl
outsl
dec
sub
adc
sbb
outsl
loop
mov
pusha
mov
sti
shll
inc
ret
pushl
cltd
fidivrs
push
adc
adc
pop
xor
jne
outsl
jg
push
sbb
setg
int
jg
jbe
rclb
imul
mov
xorb
das
add
pop
test
xchg
clc
jo
pop
ds
pop
test
push
and
movups
test
add
pop
pop
ret
outsl
scas
push
pop
adc
decl
adc
stos
outsl
jg
lds
incl
jg
mov
xor
xor
mov
cld
jg
lds
movsb
adc
or
add
sub
scas
lea
ret
mov
test
or
movsb
test
dec
iret
sub
inc
mov
push
cs
orb
sub
pop
shll
or
fwait
aas
movlhps
les
fistpll
jmp
insl
nop
ja
dec
pushf
xor
dec
aas
dec
and
ds
cs
cmpsl
dec
test
jno
jg
xorb
leave
outsl
sarl
das
xchg
push
jne
aas
imul
fildll
pusha
jno
fscale
in
pop
pop
cli
xor
fcoms
push
aas
mov
bswap
add
dec
imul
clc
jae
xchg
sahf
stc
mov
out
inc
das
test
lahf
mov
pop
movsl
call
aaa
jae
and
xchg
lock
push
jae
fisttps
adc
adc
test
lret
or
pop
dec
jno
popa
mov
das
fbld
mov
jg
das
push
add
in
iret
adc
and
iret
and
test
or
bound
filds
fists
mov
iret
stos
and
mov
iret
adc
or
jg
mov
bound
das
sub
adc
iret
mov
iret
or
pop
push
push
aad
pusha
mov
iret
pop
ror
filds
mov
xchg
and
and
sbbb
pop
pop
movsl
decl
scas
cwtl
popw
mov
add
pop
aas
ret
mov
test
out
sub
xchg
comiss
mov
xor
and
arpl
jg
rcrb
je
dec
inc
mov
rcrb
jno
divl
add
daa
jae
mov
shlb
jg
xchg
pop
add
sub
jg
cld
outsl
xchg
scas
movsl
fistpl
fistps
icebp
fs
add
push
les
and
fsubrs
adc
xor
adc
mov
outsl
int
aam
jg
mov
mov
shrb
and
add
pop
mov
das
imul
mov
dec
pop
inc
push
dec
sub
add
aad
or
adc
add
adc
movq
push
repnz
inc
pop
mov
stos
das
outsl
push
adc
sub
gs
sub
iret
lods
push
mov
adc
orb
out
dec
outsl
push
lea
das
seta
nop
incl
xchg
enter
adc
shrd
mov
jb
sub
or
sub
outsl
stos
push
or
fistps
adc
dec
outsl
test
int
dec
jbe
push
adc
push
mov
loop
sub
outsl
or
mov
jl
loope
ret
adc
insb
jno
das
scas
mov
pop
adc
outsl
inc
sub
orb
test
outsl
or
mov
outsl
aas
pop
pop
ret
fnstcw
adc
cmpsb
outsl
das
mov
fadds
add
incl
inc
fiadds
sub
adc
adc
outsl
popa
cmpsl
mov
jg
or
dec
jg
ret
pop
jg
fstps
outsl
pop
or
xchg
lock
daa
adc
popa
inc
outsl
add
adc
jg
dec
or
outsl
mov
add
iret
nop
incl
fs
inc
cmc
es
das
popa
adc
stos
push
cmp
inc
ja
outsl
push
insl
aad
iret
test
mov
repnz
mov
cmpsb
pop
add
inc
adc
push
mov
scas
aas
lock
jmp
inc
ja
mov
mov
outsl
and
fmuls
ret
dec
outsl
push
inc
lods
sbb
sub
mov
adc
test
fwait
dec
outsl
loop
push
add
add
or
or
outsl
les
adc
pop
orl
mov
daa
or
jo
enter
fldcw
jb
in
dec
add
xchg
lock
movsb
testl
add
call
push
aad
fistps
xorl
sbb
popa
push
push
repnz
js
jmp
leave
jmp
rorl
mov
push
stos
mov
push
and
fs
push
push
outsl
and
adc
fbld
ret
or
pop
push
sub
pop
mov
xchg
cld
das
stos
lret
pop
cmp
pop
pop
push
into
test
dec
cmp
push
push
repnz
mov
mov
jmp
in
adc
add
add
shll
dec
xor
jmp
fists
dec
and
add
inc
jo
hlt
cltd
push
mov
mov
iret
scas
and
js
cwtl
iret
pshufw
xchg
test
stc
xchg
sub
outsl
out
add
sbb
das
mov
std
es
sub
idivb
xchg
data16
push
dec
test
xlat
mov
xor
mov
mov
es
or
mov
dec
and
fbld
pop
lock
mov
xchg
add
test
xor
mov
xchg
cmpb
cli
enter
pop
adc
mov
call
adc
add
adc
mov
mov
push
repz
nop
or
add
sahf
cs
icebp
dec
push
movsl
dec
xor
dec
fwait
add
cmpsl
push
pop
gs
cmp
outsl
aas
das
xor
popa
add
cmpsb
push
popf
jg
jbe
or
or
inc
jns
fisttps
das
inc
or
aad
arpl
out
pop
mov
and
scas
dec
clc
and
out
adc
pop
jg
jecxz
jg
aam
mov
test
mov
sub
out
orb
fistpll
sbb
xchg
cli
pop
aaa
mov
std
imul
dec
push
das
out
in
pop
test
ds
imul
pop
jne
or
mov
push
lahf
pop
or
pop
hlt
leave
dec
and
cld
inc
sbb
aam
aas
adc
cld
ficompl
mov
sbb
test
iret
cli
fisttps
mov
mov
aad
sbb
pop
dec
push
stc
mov
adc
pusha
daa
sub
jmp
cld
daa
cmp
sbb
xor
and
iret
das
cmp
or
shlb
es
verw
add
mov
or
sub
movntps
or
iret
lahf
iret
or
push
adcb
imul
pusha
push
or
addps
adc
dec
adc
test
scas
test
push
add
sub
hlt
mov
mov
push
pop
push
xchg
pop
add
mov
push
mov
leave
adc
mov
sbb
ja
out
sbb
lcall
dec
loopne
bound
icebp
xchg
outsb
lock
dec
fstpt
or
adc
test
pusha
aam
add
cmovo
sub
pop
pop
paddq
adc
das
xor
sub
cmovg
dec
push
push
pop
test
pusha
movsl
scas
pop
inc
mov
dec
dec
iret
fsubl
push
xchg
dec
pop
mov
dec
pop
aas
ljmp
mov
inc
jp
cmp
test
aas
scas
test
and
pop
sbb
fsubrs
inc
push
push
pop
push
imul
pop
add
pop
mov
mov
dec
inc
adc
inc
dec
dec
jbe
inc
or
mov
or
push
sub
pop
dec
adc
outsb
sub
lahf
dec
test
fimull
adc
fisttps
and
adc
incl
pop
and
in
mov
sbb
pop
adc
xor
push
mov
pusha
dec
les
mov
orb
shll
or
mov
jmp
pop
les
inc
sub
std
rcl
mov
xor
mov
mov
push
cmovg
pop
test
pop
push
push
push
sbb
add
pop
or
scas
dec
add
push
inc
sub
mov
decl
or
sub
in
cmpb
or
add
and
aas
jnp
call
add
test
dec
ret
aas
mov
dec
pop
les
scas
aas
lret
dec
lahf
rorb
add
mov
scas
dec
or
add
aam
pusha
rcr
shlb
dec
pop
iret
das
add
sub
mov
aas
aas
or
test
iret
jg
or
aas
jb
test
das
mov
mov
popf
xchg
mov
add
test
inc
aas
mov
fists
aas
mov
mov
fistpll
pop
push
mov
xor
mov
add
outsl
adc
popa
adc
popa
xchg
or
sub
dec
pusha
mov
or
mov
das
xor
mov
out
mov
push
das
dec
test
adc
mov
iret
lahf
popa
bound
fisttps
das
push
pop
testl
mov
and
dec
fists
push
or
push
iret
push
or
pop
adc
scas
shrb
mov
iret
dec
bound
or
sub
test
iret
inc
add
inc
fmuls
iret
adc
stos
sbb
iret
nop
jbe
pop
scas
sbb
mov
bound
mov
or
and
out
sub
es
pop
push
add
jg
mov
mov
dec
aas
jg
fiaddl
add
popf
mov
pop
pop
addb
das
jg
sub
sub
shrb
or
bound
mov
lahf
cwtl
pop
or
das
push
or
push
aas
jg
xor
add
inc
xor
scas
mov
dec
and
out
inc
stos
xor
mov
lret
push
sub
mov
adc
lods
adc
scas
iret
dec
sub
and
jg
mov
lahf
bound
rorb
and
push
push
adc
aad
or
push
sub
stos
das
les
insl
dec
pop
and
add
shrb
comiss
xchg
and
adc
mov
lahf
push
sbb
jbe
lahf
pop
adc
add
sub
or
add
inc
or
mov
fildll
add
add
popf
xor
xor
pop
dec
movsl
inc
push
iret
lahf
or
sub
iret
aas
dec
stos
or
lahf
push
repnz
pop
mov
test
mov
nopl
inc
fwait
and
mov
fists
popa
test
movsl
xlat
xor
rolb
add
adc
inc
clc
data16
jl
popa
mov
scas
pop
test
popa
mov
pop
push
inc
adc
pop
lods
sbb
ret
ljmp
cmp
mov
fimuls
shll
dec
sbb
outsl
or
ror
shl
es
out
aam
ss
dec
dec
adc
das
dec
movb
mov
pop
pusha
push
lods
lds
push
fistps
lds
or
pop
filds
sub
das
sub
ljmp
test
or
cltd
aad
mov
and
add
xor
pop
jo
lahf
adc
add
push
xchg
xchg
mov
scas
fstpl
inc
lahf
push
adc
xorl
aas
aas
push
je
fimull
aas
mov
pop
pop
outsl
std
scas
sub
in
cmp
or
mov
outsl
in
es
iret
das
fwait
test
insb
mov
dec
xor
popa
mov
das
ljmp
jb
adc
fs
lods
cmpsl
xchg
fstps
or
out
shl
xchg
mov
pop
mov
fwait
sbb
outsl
js
mov
rolb
outsb
scas
dec
sub
sub
push
and
fisubrl
pop
mov
adc
or
push
dec
inc
and
lahf
dec
out
push
rorb
test
adc
pop
lahf
dec
push
mov
sub
out
scas
push
lods
mov
pop
add
test
pop
adc
or
das
popa
push
mov
test
jg
pop
das
cltd
mov
mov
out
jg
gs
pop
or
xor
sub
push
cltd
fcoms
stos
pushf
lea
cmpb
cld
das
ret
sub
enter
inc
pop
pop
jg
sub
xrelease
push
inc
sbbb
mov
jg
inc
or
iret
setbe
push
mov
test
pop
xor
aaa
iret
jg
sub
sbb
push
sbb
das
jbe
xor
iret
dec
or
arpl
mov
scas
das
cmpsb
mov
push
adc
push
pushf
das
jo
add
lahf
das
adc
rolb
mov
das
das
roll
cmp
arpl
loop
outsb
jg
lahf
pop
jbe
inc
pop
das
mov
adc
pop
sbb
add
pop
das
outsl
scas
mov
stos
pop
mov
decl
es
dec
arpl
cmpsb
sub
je
sbb
add
das
sub
sbb
mov
dec
inc
aas
push
out
aas
shll
lds
push
aam
jg
cmpsb
mov
aas
aas
aaa
sbb
fsubr
mov
sbb
aas
or
jg
enter
je
mov
pop
sub
and
inc
mov
fwait
mov
adc
das
iret
push
movsb
lds
add
mov
pop
rcrl
scas
pop
aam
push
das
pop
xor
mov
or
lcall
sbb
or
dec
and
push
iret
jg
push
test
lock
aas
or
push
mov
call
mov
cld
out
pop
mov
dec
scas
lahf
inc
dec
sub
scas
pxor
pop
push
shlb
xor
adc
shrb
iret
aas
xlat
push
add
movq
ret
or
test
and
mov
adc
push
cmovb
mov
decl
lock
mull
divb
push
aas
sar
minps
jb
cmp
mov
cli
and
inc
test
jg
shrb
aas
mov
scas
fisubrl
cs
push
aaa
sub
xchg
comiss
stos
add
and
stos
push
lahf
stos
inc
pusha
adc
inc
pop
ud0
test
nop
call
leave
or
shlb
je
xchg
sub
adc
mov
ret
pop
dec
add
xlat
push
inc
jne
setnp
push
or
ret
mov
pop
mov
cmovl
mov
inc
pop
aas
push
shrb
iret
addl
mov
scas
dec
and
inc
scas
cmpxchg
mov
sub
or
or
inc
mov
dec
das
paddd
ret
lods
addb
pop
mov
or
call
adc
xlat
jbe
pextrw
dec
bound
or
pop
mov
xor
lahf
inc
mov
pop
sqrtps
jo
and
unpcklps
cmp
popa
xchg
dec
or
test
jg
fists
packssdw
fadd
sbb
jno
aam
das
movaps
xchg
pop
dec
inc
aas
dec
and
push
incl
pop
clc
call
mov
leave
js
jno
stos
xchg
in
mov
jno
or
pop
lock
insb
pop
fisttps
or
pop
outsl
shlb
push
pop
jg
fadds
adc
jg
decl
sti
sti
sbb
dec
int3
pop
or
push
es
mov
inc
sub
out
arpl
adc
stc
pop
push
push
sbb
cmp
and
or
and
call
mov
cmp
popa
add
inc
mov
bound
mov
add
adc
gs
orps
mov
and
out
dec
ret
pushl
icebp
cmpsl
jp
fwait
mov
popa
dec
cld
and
cld
lcall
pop
int3
iret
dec
inc
insl
das
pop
and
and
lret
or
clc
pop
pop
das
pop
pop
repz
pop
loopne
mov
outsl
pusha
jno
pushl
movsb
sub
outsl
add
or
inc
mov
jmp
fs
jno
dec
test
jno
outsl
adc
mov
loope
stos
dec
jl
sbbl
pop
mov
mov
bound
add
push
fisttps
jb
inc
inc
cmp
lahf
push
xchg
loop
jg
mov
sbb
mov
pop
sbb
jg
push
push
add
jg
mov
incl
call
or
aam
push
pop
cmovg
ffreep
push
xchg
mov
aas
pop
push
frstor
or
outsb
push
outsl
jno
mov
cmovge
pusha
mov
scas
dec
scas
mov
scas
inc
inc
popa
mov
incl
inc
decl
adc
bound
dec
sub
and
mov
scas
mov
mov
lahf
popl
pop
adc
add
push
jg
push
sub
mov
aam
jg
or
pop
inc
adc
cs
dec
repz
subb
fistpll
cs
mov
lea
mov
sub
jns
outsl
fbld
call
push
xlat
out
insb
or
cmp
aaa
addb
fbld
jp
lahf
dec
mov
outsb
add
pop
iret
das
ss
outsb
iret
sub
pop
jmp
mov
dec
sub
push
movsl
mov
jg
jno
jg
mov
mov
jg
sbb
add
jg
cwtl
insb
popa
iret
pop
test
mov
sysexit
cltd
rcrb
jg
and
jg
insb
add
iret
mov
pop
jg
ljmp
xchg
jg
bound
lea
inc
aad
jmp
outsl
es
mov
push
shlb
imul
outsl
loopne
pop
sub
aas
jg
add
or
scas
mov
xorb
cmp
adcb
push
pop
adc
je
mov
sbb
ret
pop
scas
filds
push
add
and
pop
mov
dec
scas
pop
mov
insl
in
rolb
mov
jg
adc
ss
ret
mov
jg
mov
jg
jno
adc
mov
adc
inc
insb
pushl
lahf
mov
iret
imul
sbbl
push
test
das
out
and
ret
adc
fdivr
pop
rorl
cltd
xchg
sbb
scas
jg
push
adc
mov
pop
pop
lcall
mov
and
scas
dec
inc
arpl
mov
jmp
mov
out
cmpsl
mov
lcall
fcoml
ret
jno
decl
sub
mov
mov
dec
pop
pop
dec
fisttps
test
clc
mov
das
outsl
sbb
or
add
mov
jg
add
inc
xchg
daa
fnstcw
lods
sub
fsubs
xor
mov
or
and
aas
gs
jle
adc
test
dec
pop
sub
jg
mov
adc
push
mov
lcall
sub
lret
push
mov
cld
das
in
pop
add
repnz
imul
loop
and
xor
iret
iret
sub
pop
push
dec
fisubl
test
lods
cs
xor
aad
jg
lcall
mov
jg
stos
lds
fcomip
mov
int3
outsl
test
repz
inc
sub
iret
pop
add
mov
add
pop
out
push
orb
add
mov
rcr
or
mov
out
push
dec
inc
fsubrs
jg
push
imul
push
addl
xorl
out
pop
int3
pop
sbbl
sub
sbb
movb
fildll
pop
adc
mov
xorl
mov
nop
into
sbb
lcall
mov
jg
add
scas
ss
push
mov
sub
inc
jne
das
packssdw
mov
inc
mov
call
pop
test
mov
sbb
or
sub
addb
mov
aas
les
mov
cmovb
pop
ljmp
add
or
andl
orps
mov
das
jg
or
sbb
pop
mov
inc
fisttps
mov
iret
fldl
inc
dec
call
jb
pandn
pusha
push
scas
inc
inc
decl
or
mov
pmovmskb
add
pop
scas
mov
out
and
inc
mov
es
push
push
push
fisubl
and
mov
aas
shlb
pusha
xor
pop
pop
push
mov
pop
lods
int
aas
mov
ljmp
add
or
ss
mov
sldt
stos
or
pop
jo
stos
lahf
scas
fcom
dec
pop
mov
scas
inc
decl
xchg
jl
cs
cwtl
or
stos
add
iret
mov
and
addb
pop
mov
or
push
fwait
adc
jbe
adc
add
inc
add
sub
push
push
popa
pusha
mov
decl
or
or
jg
mov
push
xchg
ret
add
ret
movq
and
or
pop
stos
mov
mov
in
mov
ja
sub
sbb
jg
add
fstps
mov
bound
adc
pop
adc
addb
or
mov
popa
and
outsl
fbstp
rcrl
mov
push
push
mov
out
scas
stos
pop
pop
pop
mov
pop
add
push
push
decl
pop
adc
scas
lock
push
daa
adc
and
iret
jg
sbb
outsb
outsl
incl
iret
pusha
addl
push
sbb
xor
mov
incl
push
outsl
iret
add
push
pop
mov
mov
decl
addb
inc
out
push
iret
arpl
insl
test
push
fadd
push
jg
fistpl
add
mov
pxor
or
test
lcall
and
and
test
les
scas
imul
insb
inc
dec
das
and
incl
inc
pusha
push
pusha
mov
aas
add
dec
addr16
aas
movb
pop
jmp
ss
fucomip
and
mov
inc
pop
fildll
or
push
aad
outsl
cs
adc
or
fildll
aaa
jne
xlat
adc
add
sbb
pop
pop
outsl
das
add
adc
mov
loopne
lods
mov
and
das
and
addb
outsl
std
scas
mov
outsl
int
sbb
adc
lret
or
or
pop
in
add
shlb
lcall
adc
outsb
push
sub
adc
iret
test
dec
decl
into
mov
ret
jbe
outsl
add
ljmp
pop
mov
add
and
popa
pop
fistpll
lahf
outsl
les
cs
adc
inc
sub
cmp
loop
adc
cli
fildll
mov
or
dec
outsl
das
xchg
adc
jne
test
nop
mov
dec
add
aas
and
popa
outsl
push
pusha
push
push
test
jg
addb
sar
sub
test
dec
aas
lahf
pop
insl
sub
outsl
lahf
push
pusha
shrl
xor
jb
das
adc
aas
sbb
addb
pop
shlb
stc
sarb
mov
or
mov
aas
dec
outsl
sub
adc
das
pushl
decl
jno
pop
lods
mov
push
mov
inc
cmp
lods
push
and
pop
or
cs
outsl
fldl
sub
mov
jg
out
imul
out
cmpsb
mov
incl
jecxz
push
add
mov
add
jg
aas
pushf
mov
cmc
adc
or
inc
jmp
outsl
and
xchg
pop
outsl
dec
or
dec
fsubs
outsl
outsl
clc
fbld
cs
dec
out
aaa
orl
cld
das
add
pop
sbb
mov
test
and
ret
nop
mov
jbe
inc
pusha
test
das
add
add
jno
sub
pop
push
pop
mov
adc
pop
adc
loop
push
scas
or
adc
or
add
call
pop
jl
gs
jl
sub
bound
bound
dec
outsl
ljmp
or
stos
mov
xchg
into
rcl
add
push
xchg
push
jne
addr16
filds
xchg
push
push
push
xchg
je
dec
addr16
push
jne
push
xchg
je
fbld
push
jne
fists
fbld
add
mov
stos
dec
fistpll
filds
inc
mov
cmp
movsb
xor
mov
and
pop
clc
fisttps
stc
sarb
mov
lea
outsl
incl
pop
mov
mov
inc
iret
mov
cmp
loopne
mov
mov
sahf
push
clc
push
aas
mov
notb
out
shl
shll
jg
or
aas
mov
shrb
mov
push
mov
jae
ret
push
xchg
test
subb
call
sbb
xor
and
dec
cmpb
cs
jp
test
outsl
mov
push
scas
xor
bts
adc
sbb
add
lahf
add
cmpsb
lock
mov
xchg
repz
sub
mov
mov
cmpsb
xchg
loope
xor
pop
push
inc
pop
repnz
jle
bound
loope
jg
inc
push
pop
dec
outsl
pop
xor
mov
dec
jp
imul
xor
push
dec
call
mov
cmp
dec
push
pop
jle
cld
jns
push
outsb
sub
push
insl
and
loope
divl
jnp
aaa
fxch
jns
sbb
mov
sub
inc
lods
lahf
mov
aaa
mov
and
dec
or
push
jbe
xchg
or
fnstcw
stos
xchg
push
and
lret
std
jbe
loop
push
clc
and
add
dec
addr16
xor
lods
xchg
jge
int3
nop
sbb
mov
call
out
aam
fld1
xor
pop
sbb
xor
xor
fisttpll
shrb
aam
shlb
lods
fldl
ljmp
lahf
sti
dec
adc
fwait
ja
sbb
pusha
ljmp
xchg
test
jg
popf
push
js
loopne
add
adcb
pop
pop
mov
out
movsb
fldcw
insb
aaa
std
jmp
push
inc
stos
test
mov
es
les
push
js
clc
pop
ret
mov
xor
jnp
mov
mov
jl
jg
arpl
jmp
ja
mov
or
add
aad
cmp
cld
mov
xor
xor
mov
cli
aad
xchg
movsb
ds
clc
add
call
mov
icebp
call
push
push
daa
xchg
lcall
outsb
ja
inc
stos
adc
das
jo
stos
fdivrl
shl
dec
cmpb
sub
mov
add
mov
push
popa
mov
aaa
pop
mov
leave
push
jne
cmp
adc
or
cmp
mov
lcall
jo
cmc
ret
mov
leave
scas
inc
dec
jo
mov
pushl
je
add
call
ret
pop
repz
or
incl
xor
jno
jg
out
jnp
and
inc
xor
cmp
xchg
mov
lcall
xchg
sbb
clc
int
cmpsb
cmc
jg
pop
add
andb
adc
dec
sbb
sbb
xchg
pop
pop
out
out
lcall
inc
and
loope
int3
push
faddl
lahf
sub
test
sbb
sub
ljmp
stos
fistpll
std
out
mov
mov
ljmp
leave
sbb
hlt
sbb
add
pop
add
jp
dec
iret
mov
inc
pop
orl
fimull
daa
nop
mov
push
vpmacsdd
call
pop
repz
cld
mov
sbb
loope
mov
lret
repz
shlb
call
out
push
adc
and
mov
aad
jl
data16
add
mov
lret
or
in
mov
clc
or
jbe
stos
divl
xchg
test
jnp
jne
pop
mov
bound
stos
repz
scas
mov
add
cli
mov
adc
cld
mov
aam
add
pop
and
nop
cmp
outsb
out
sub
das
add
aaa
repz
inc
pusha
mov
out
pop
adc
add
dec
adc
leave
push
jbe
pop
or
jl
mov
mov
outsl
das
adc
add
pop
int3
das
fstpt
mov
cmpb
je
popa
ljmp
leave
add
xor
loope
dec
jl
in
add
aas
ljmp
ljmp
xor
xchg
rcrl
cmp
jmp
pop
fdivp
xchg
mov
fisttpl
inc
in
mov
push
pop
and
jle
mov
inc
or
mov
push
decl
ljmp
adc
fisubrl
pop
dec
push
pop
push
inc
jbe
in
comiss
iret
fidivrl
add
loop
addr16
fmulp
and
mov
xor
inc
sbb
fs
ljmp
jb
or
lret
fistpll
sub
mov
insb
jg
daa
add
sub
repnz
incl
hlt
push
clc
jnp
lea
dec
sub
es
lds
sub
pop
out
and
sbb
jg
jg
int
sahf
xchg
decl
nop
push
cmp
sti
push
xchg
jo
cmpsl
icebp
lcall
pop
sub
jg
subb
mov
push
dec
cmp
mov
ljmp
cmpsb
push
add
push
adc
mov
push
jno
pop
inc
adc
lahf
xchg
iret
lcall
pop
sbb
ds
dec
cli
cmp
in
das
mov
jae
mov
sbb
clc
cmpsl
jmp
and
not
divb
push
fsubl
jmp
int
dec
mov
push
mov
lcall
arpl
ror
add
inc
jmp
js
mov
xchg
lret
jl
sub
decl
jle
mov
cmp
into
add
sub
adc
cli
mov
scas
cltd
and
call
pusha
lahf
ss
inc
js
jae
das
mov
mov
ljmp
fldenv
adc
lcall
jg
enter
pause
leave
rcll
shll
mov
or
mov
or
mov
lret
push
pop
add
inc
jae
mov
ljmp
push
jmp
pop
pop
nop
mov
pop
fcoms
push
inc
lea
sbb
flds
insl
adc
ret
imul
sahf
sbb
mov
call
xor
clc
cmc
sbb
sub
dec
stos
cwtl
lds
outsl
or
dec
adc
out
addb
incl
movsl
jb
jbe
xor
pop
sbb
pop
in
cwtl
frstor
mov
sub
decl
sti
mov
cwtl
inc
jge
fldt
popl
movsb
sbb
xor
insl
cld
call
mov
sar
mov
fistps
in
inc
outsb
mov
fs
mov
nop
into
cmp
or
les
call
jg
or
lcall
push
inc
call
into
sub
outsl
add
aaa
mov
jmp
mov
or
or
cli
mov
jmp
fs
dec
cmp
inc
adc
outsb
and
pushl
add
xlat
lret
cwtl
add
cltd
mov
mov
cltd
adcb
pushl
sub
push
aas
pop
cmp
push
and
orb
mov
call
ljmp
pushf
and
push
test
xchg
mov
cltd
push
pop
test
call
aas
sub
rclb
mov
mov
and
dec
sbb
andb
repnz
mov
lock
in
stos
fnstsw
ficoms
sbbl
pop
add
incl
sbb
xlat
movsl
movsl
lock
pop
mov
hlt
mov
mov
decl
or
xor
sbb
cmp
jmp
or
fdivr
mov
sbb
mov
push
mov
jnp,pt
jbe
inc
insb
dec
mov
es
test
shlb
in
cmpsl
sub
cmp
lea
xchg
seto
xchg
bound
iret
jb
cli
add
negb
jns
mov
push
cld
stc
inc
lret
idivb
aaa
sbb
and
imul
mov
pusha
pop
jbe
cmp
mov
mov
xlat
sahf
dec
cmp
inc
inc
incb
mov
cld
lcall
push
inc
sub
data16
call
call
push
cmp
rcrl
or
stos
decl
imul
out
pop
adc
jmp
cmpsl
repnz
incl
mov
dec
mov
fdivs
shll
insb
pop
dec
jl
pop
out
incl
mov
push
and
cmc
arpl
ss
cmp
pop
push
pushf
mov
movsb
pushl
cmp
xor
fnsave
cwtl
push
sub
jb
jecxz
repnz
and
pusha
xor
push
mov
hlt
jmp
mov
cld
dec
sbb
jbe
out
stc
mov
xor
mov
jmp
pop
scas
xchg
fistpl
out
int
scas
shld
cld
mov
add
and
decl
dec
pop
pop
xchg
inc
mov
pop
negb
mov
mov
add
repnz
push
mov
sbb
xchg
daa
xchg
cwtd
cmp
pop
stos
mov
or
jmp
xchg
xor
mov
pop
mov
mov
or
mov
lock
imul
in
mov
mov
imul
and
insb
add
jl
clts
enter
fdivr
jg
dec
pop
jge
xor
mov
js,pn
jmp
adc
pop
sub
js
adc
nop
rol
mov
push
mov
add
imul
int3
xor
add
jg
push
push
insb
add
pop
fsubr
shrl
call
add
incb
ds
mov
scas
inc
push
stos
inc
scas
and
cmp
out
aas
inc
xchg
js
out
clc
decl
rcl
stos
rolb
xchg
shrb
jle
push
aad
cmc
jmp
test
mov
sbb
pushl
pusha
ficompl
jns
sub
adc
sbb
sahf
repz
and
sub
ljmp
add
and
pop
pop
jmp
xor
adc
idiv
mov
hlt
mov
invd
and
push
cmp
mov
jg
imul
ljmp
jp
test
xchg
mov
xor
aam
fldl
pop
stc
rclb
xchg
ljmp
gs
lahf
inc
nop
jp
int3
pop
movb
inc
inc
mov
push
lock
call
mull
or
scas
repnz
loopne
subb
lcall
aas
sub
aam
frndint
adc
xchg
sub
mov
fucomi
cli
push
mov
out
push
jp
cmp
and
sbb
lds
in
adc
out
cli
jge
xchg
fdivr
mov
imul
mov
cmc
stc
mov
sbb
stos
fadds
paddusw
daa
insl
bound
and
cmpsl
mov
jle
and
sbb
shrl
sbb
push
pop
imul
daa
fildll
into
sarl
loopne
outsl
jnp
repz
daa
incl
scas
jecxz
jg
mov
int3
outsb
pop
dec
dec
aas
sahf
push
rclb
mov
lds
gs
mov
push
mov
jbe
sbb
jg
jg
xorl
mov
pushf
mov
test
mov
and
and
test
dec
inc
sub
push
cmp
loop
mov
rolb
rol
inc
inc
gs
jns
dec
jl
jnp
push
fstp
icebp
decl
adc
lret
dec
test
add
and
push
and
cs
out
mov
mov
mov
bound
call
in
mov
mov
in
lods
pusha
lods
dec
icebp
inc
sub
xlat
mov
fdivl
shlb
jecxz
decl
lock
xchg
mov
mov
ficoml
mov
add
xlat
ss
dec
dec
or
dec
fs
sbb
jge
adc
mov
ja
adc
pushl
cmp
mov
call
xor
sbb
or
jb
stos
push
aaa
cld
xadd
jbe
pop
sbb
mov
clc
adc
mov
dec
ljmp
mov
stc
and
loopne
add
push
out
das
sar
fstl
push
inc
mov
mov
leave
mov
inc
int3
inc
lcall
call
pop
int3
mov
pushl
inc
adc
out
inc
decl
cmovae
inc
adc
jb
dec
dec
loope
insb
mov
and
and
incl
sbb
add
jns
lds
jns
shlb
dec
incl
mov
decl
inc
nop
ret
dec
ret
push
adc
push
imul
push
mov
and
orb
cmp
iret
ds
add
jecxz,pn
sub
xchg
je
and
cmp
dec
insb
jmp
jle
mov
loopne
and
xchg
pushf
or
jns
mov
adc
xchg
adc
jae
outsl
call
cmc
test
mov
push
push
movsl
rcrl
jmp
xor
xchg
mov
mov
push
mov
icebp
aas
xchg
xchg
fs
jmp
pop
jmp
jb
lea
movsb
into
ja
adc
xor
gs
sti
inc
or
adc
jmp
push
mov
xchg
orb
xor
roll
add
push
adc
or
inc
test
pushl
push
in
mov
lock
pop
repnz
rolb
add
shrb
fldl
mov
test
arpl
hlt
shl
xchg
sbb
lcall
or
in
mov
cmp
fistpll
pusha
push
and
and
mov
cs
jns
xchg
mov
or
or
add
bound
or
mov
jp
leave
repnz
inc
decl
shll
testb
js
loope
jmp
cmc
lcall
push
sti
popf
mov
les
scas
test
cwtl
loope
popa
aaa
in
inc
pop
mov
jge
cmp
imul
cmp
push
mov
cld
dec
shll
fidivs
sti
jae
sbb
push
inc
mov
in
add
imul
adc
xorl
rcr
pusha
iret
adcl
sbb
incl
ret
jne
sbb
lods
ficoml
xchg
xchg
call
dec
sub
sbb
repz
adc
call
jmp
jns
rclb
add
data16
xor
and
call
add
sbb
popa
shll
fisubrs
mov
jae
mov
adc
sub
es
test
lcall
pop
mov
insl
jo
xor
xchg
and
cltd
icebp
out
push
shll
sbb
out
ficoms
jecxz
mov
jge
mov
mov
leave
enter
incl
push
lea
idiv
sub
inc
sub
mov
orb
jp
inc
adcb
xor
pop
shll
inc
sub
ljmp
dec
push
mov
mov
or
push
iret
add
pop
jle
outsb
or
adc
call
cld
fcompl
dec
addr16
sbb
adc
cli
lods
xchg
incl
xor
cmc
dec
mov
gs
insl
imul
push
ret
cmp
leave
pusha
cmp
ret
lock
mov
cmp
push
push
cld
mov
out
dec
popa
cld
jmp
adc
in
push
pop
clc
insb
outsl
sbb
mov
subb
cltd
pop
pop
cltd
out
inc
or
cmp
aad
arpl
ss
pop
dec
or
push
jb
fs
imul
pop
dec
jne
push
push
mov
ljmp
test
test
in
int3
push
lea
out
pop
in
dec
mov
mov
ljmp
push
jl
ljmp
xchg
lahf
or
daa
adc
rol
es
sti
add
mov
xchg
sbbb
push
mov
add
call
in
cwtl
and
ja
push
repnz
xchg
jmp
das
sub
pushl
sbb
cmp
mov
add
sub
stc
fidivrl
xor
sub
cmp
repnz
inc
push
xor
xor
pop
dec
or
add
decl
rcrl
jmp
ds
iret
cltd
mov
insb
lock
icebp
fcomip
jge
or
inc
cmpsb
xorb
push
clc
adc
dec
int3
enter
mov
mov
aam
adc
and
incl
dec
or
insl
lcall
pusha
stos
jae
movsl
cmp
adc
push
push
inc
inc
mov
roll
lock
popa
scas
or
dec
add
mov
imul
imul
lahf
dec
lcall
fidivl
pop
add
std
inc
test
add
popf
add
sub
lahf
add
decl
dec
push
sub
sub
lods
stos
or
mov
add
negb
or
mov
in
std
bound
cli
out
insb
pop
inc
jnp
sbb
je
inc
shl
test
xchg
dec
push
fisubl
jg
ffreep
rcll
jbe
jp
adc
mov
aaa
addb
call
inc
push
sahf
repnz
inc
in
jg
cld
loopne
std
call
push
pop
int3
jmp
btr
mov
jmp
call
and
or
imul
jmp
leave
arpl
lcall
mov
pushf
clc
and
jnp
mov
adc
xor
out
clc
fimull
push
or
pop
stc
fninit
aaa
mov
stos
sbb
mov
lcall
add
leave
xchg
scas
dec
jecxz
pop
iret
inc
loope
cmc
push
inc
xor
or
fldenv
mov
adc
pop
push
inc
mov
lahf
insb
loopne
push
pop
adcl
adc
jmp
out
xor
lds
inc
in
mov
scas
inc
mov
mov
or
pop
fisubs
push
cs
pushl
cmp
pop
aam
mov
and
pop
sbb
in
stc
or
cmp
jns
insb
adc
add
je
pop
and
lods
xorl
pop
lret
fnsave
jg
jmp
mov
mov
xchg
call
xchg
push
pop
sub
dec
adc
xor
dec
aam
xchg
xchg
jb
jo
data16
adc
dec
jmp
ss
sub
pushl
es
mov
clc
pop
or
mov
ds
sets
jp
pop
or
js
push
fimuls
mov
cli
addr16
inc
jecxz
jnp
enter
dec
les
das
clc
lcall
fldl
xchg
pop
into
cmp
sub
push
mov
mov
and
xchg
mov
enter
xchg
pop
scas
pop
ret
lcall
cmp
mov
fsubs
xchg
repz
vpunpckhqdq
icebp
call
pop
out
mov
sub
pusha
aam
add
push
lcall
unpckhps
adc
add
mov
add
lahf
mov
mov
int3
icebp
fstl
inc
aad
js
repz
mov
sbb
mul
xchg
inc
sub
inc
add
mov
mov
inc
sbb
push
lret
js
mov
pop
out
nop
gs
xor
aas
and
popa
iret
cmpb
sub
dec
movsb
adc
repnz
in
ret
data16
stos
lret
decl
popf
outsb
rclb
mov
repnz
stos
aad
xchg
xchg
fcmove
cmpsb
mov
xor
mov
push
std
pusha
xchg
sub
mov
sub
mov
xchg
aas
jae
inc
cmp
popf
pop
pop
mov
daa
jle
cltd
in
push
pop
pushf
adc
jecxz
out
sub
xor
rorl
pusha
sarl
gs
shl
aad
pop
je
adc
mov
push
xchg
pushl
cld
and
scas
mov
subl
lcall
sbb
insl
in
xchg
add
lods
dec
or
mov
xor
aaa
inc
icebp
inc
cwtl
stc
je
fmuls
sub
aad
mov
es
sti
inc
mov
sub
incl
push
sarl
pop
scas
scas
fnstsw
enter
mov
mov
adc
mov
pushl
sbb
cltd
jecxz
cmc
loopne
imul
fxch
xlat
mov
lcall
xchg
std
push
imul
dec
and
pop
add
lahf
mov
mov
aas
lods
fucomip
jno
push
add
addr16
mov
adc
xchg
inc
cwtl
cmp
mov
push
adc
mov
push
jle
cmpsb
add
lret
cmp
adc
in
jno
flds
jg
push
mov
cmp
sub
push
pop
jmp
sbb
pop
shlb
pop
shll
xchg
xchg
dec
lret
cmpsb
lret
insb
leave
add
inc
push
pop
cwtl
push
xlat
inc
mov
cmp
enter
cmp
jp
out
test
xchg
in
call
adc
ret
sahf
outsl
out
pop
xor
mov
xor
mov
pushl
clc
test
sub
or
repz
int
stos
jg
je
push
bound
sub
ja
movsl
sti
imul
imul
push
mov
out
iret
lret
movsl
decl
add
lea
inc
pop
in
stos
imul
adc
shll
rcl
xor
mov
jmp
cwtl
mov
push
ds
adc
iret
or
in
test
call
mov
dec
pop
mov
or
shll
sub
cmp
cmp
jmp
lods
push
dec
sbb
ret
mov
ljmp
mov
pop
call
pusha
rcr
loopne
bound
mov
lcall
pusha
sub
sub
loop
fstpt
add
xchg
inc
mov
ljmp
testb
dec
insb
push
cwtl
jnp
dec
mov
mov
in
lcall
jmp
shrl
in
test
pop
loope
adc
jl
sbb
jmp
loopne
les
aam
mov
sbb
mov
pop
idiv
pop
repnz
call
and
pop
in
bound
jmp
sbb
jl
inc
push
mov
dec
or
bound
jge
mov
push
popa
jno
das
cmpsb
in
inc
mov
ja
jg
lcall
fmuls
push
dec
das
push
sub
int
jb
shl
call
fsubrs
decl
lods
fcom
or
pushl
inc
in
mov
xor
sbb
pusha
push
jnp
insl
jne
lcall
fneni(8087
scas
mov
out
adc
cmp
cmp
rolb
xchg
jb
jmp
sbb
sbb
incl
add
cmp
adc
inc
xchg
imul
ds
jle
sbb
lcall
call
pop
lods
and
push
jge
lcall
sahf
lret
push
inc
shlb
mov
mov
adc
push
rol
mov
aam
mov
daa
mov
decl
rolb
out
mov
xor
or
inc
push
pushf
test
mov
cmp
pop
inc
into
cltd
xchg
xor
inc
das
fwait
movsl
jmp
lock
lods
cmpsl
mov
pushl
jnp
dec
ljmp
push
jnp
aam
fidivrs
mov
loop
cmp
lock
outsl
sub
and
cmp
cli
adc
cld
icebp
mov
fldcw
cmp
lret
es
push
mov
mov
and
dec
ja
sub
mov
add
scas
int
enter
andl
mov
das
jecxz
loope
fmull
sub
lods
add
push
push
sub
push
sbbl
and
xlat
idiv
incl
xchg
jnp
xor
xor
xor
jb
xor
mov
push
jnp
jecxz
outsl
mov
mov
push
lea
cli
cmpsl
pop
subb
and
je
jno
inc
int
adc
mov
incl
ljmp
jg
lds
inc
loopne
sti
cmp
lret
test
fcos
mov
or
cmp
popf
pop
add
fnsave
cmpsb
cmpb
fwait
out
pushl
aam
adc
and
jmp
aas
sbb
out
and
mov
lds
xchg
aas
or
decl
xlat
sar
pushl
ss
push
arpl
push
pop
cltd
jb
pop
fninit
xor
in
loope
jns
mov
adc
ljmp
pop
push
mov
or
lahf
divb
inc
jp
int3
mulps
decl
out
xorl
sarl
mov
ret
sub
bound
adc
aad
mov
and
icebp
xchg
movsl
into
in
cmp
das
and
scas
nop
fstps
push
pop
stos
pop
inc
loope
aas
add
leave
pop
jbe
popf
push
sbb
xor
pop
sbb
loopne
ljmp
lock
cmp
adc
inc
cwtl
mov
cmc
mov
jl
test
repz
clc
incl
lret
enter
xor
sub
mov
out
cli
decl
test
jae
incl
xchg
dec
mov
or
add
mov
dec
lahf
cmp
dec
dec
inc
scas
pop
pushf
int3
xchg
sbb
xor
fcos
jmp
push
mov
sub
and
ss
adc
stos
sbb
shrl
pop
jle
ret
dec
in
mov
ja
iret
dec
mov
cmp
addr16
dec
call
inc
daa
xchg
fsubl
and
pop
into
cmc
dec
pop
mov
pusha
pushf
data16
mov
frstor
stos
xchg
fstl
mov
pop
nop
mov
lcall
je
pop
inc
dec
or
imul
lea
loop
dec
mov
push
es
call
pop
sbb
jns
and
cmp
dec
cmp
test
fldcw
lcall
mov
inc
xchg
xlat
cmp
mov
cmp
decl
in
rcr
movsb
adc
movsb
sub
xchg
sub
xchg
mov
pop
shlb
jo
incl
and
out
stos
fidivrl
in
push
mov
aaa
adcl
sbb
dec
mov
incl
imulb
mov
cld
fistpl
push
aas
push
push
and
and
aaa
daa
movsb
sbb
mov
popa
lcall
add
stc
pop
mov
leave
test
inc
push
ljmp
jae
sbbb
lcall
call
xchg
incb
pushl
sub
out
push
xor
aaa
mov
push
mov
shr
lds
jle
pop
pop
std
dec
push
inc
cmp
inc
jl
icebp
nop
cwtl
adc
fcom
inc
incl
icebp
inc
cmp
xchg
out
scas
test
out
pop
bound
pop
mov
dec
push
or
call
daa
dec
lods
in
in
mov
mov
insb
push
sub
int3
cmpsb
movsb
add
pop
and
dec
adc
pushl
fdivl
mov
ret
dec
add
cmp
fcomip
mov
lods
xchg
cmp
pop
push
mov
aas
cli
lcall
push
out
mov
xchg
inc
pusha
insb
jno
adc
shll
inc
fbld
mov
jmp
aas
iret
call
std
mov
push
dec
sbb
ss
repnz
aaa
std
sub
pop
hlt
call
fidivrs
dec
inc
mov
sbb
adc
cs
movsb
jg
outsl
clc
pop
fs
push
sbb
mov
cmp
add
jmp
jne
pop
icebp
inc
hlt
add
push
and
aad
in
push
fisubs
xchg
pusha
adc
icebp
dec
adcl
mov
cmp
jbe
jecxz
movsb
mov
es
fiaddl
test
pushf
dec
jp
outsl
lcall
rol
out
and
addr16
in
lahf
push
pop
pop
xor
xchg
decl
mov
stc
pop
cmp
out
dec
push
push
and
xor
mov
test
bound
adc
ljmp
sarb
out
xchg
adcb
jb
lahf
shrb
adc
push
iret
cmp
sub
sub
sub
je
adc
out
mov
mov
mov
outsb
cs
fldenv
in
fadds
fdivl
mov
cltd
enter
decl
cmp
push
pop
push
jecxz
pop
push
sahf
and
or
push
mov
loopne
dec
loopne
decl
xchg
xchg
mov
movsb
test
xor
aad
lds
mov
xchg
add
mov
inc
incb
sub
incl
jg
or
lods
gs
ret
int
inc
mov
pop
push
call
xchg
es
xor
pop
pop
mov
jnp
mov
lcall
pushl
xor
lret
xor
dec
push
cmp
lods
adc
mov
scas
and
fwait
adc
lds
dec
call
hlt
flds
call
cmpsl
mov
pop
and
aas
in
std
pop
ljmp
pop
pop
mov
aas
mov
out
shlb
call
jg
shr
mov
cmp
nop
pop
pop
test
adcl
repnz
lcall
cmp
pop
sbb
iret
jae
mov
leave
sbb
js
es
xchg
ljmp
ret
push
mov
imul
mov
and
adc
decl
jmp
cs
mov
mov
xchg
ret
or
xchg
and
jl
loop
mov
lret
sub
push
jns
setp
popf
mov
and
xchg
jecxz
jmp
aam
push
xchg
jmp
pop
xor
in
cli
add
arpl
mov
outsl
out
sbb
fstps
push
sbb
fisttpll
sbb
daa
sbb
inc
pop
cmpsb
push
ret
pushf
ficompl
jl
lcall
in
stc
cmp
dec
movsb
loopne
cld
cmpsl
in
ja
aad
fistps
pushl
cmp
jp
mov
idivl
scas
repnz
aas
mov
fnstsw
cltd
jb
jb
scas
pop
out
inc
mov
test
sbb
xor
in
dec
test
jno
pushl
sub
insb
out
out
data16
cltd
inc
push
dec
aam
jb
mov
subb
loope
cltd
push
inc
in
jecxz
fbld
in
pop
xor
mov
outsl
push
xchg
in
dec
mov
incl
jmp
in
mov
or
jmp
add
dec
dec
jg
pushl
mov
les
shl
xchg
orb
mov
pop
mov
push
mov
sti
inc
gs
cmpsl
loopne
push
add
cmp
inc
xchg
outsb
lds
call
xchg
pop
mov
out
cli
ljmp
cmp
dec
arpl
add
hlt
pop
nop
inc
mov
ljmp
dec
inc
les
xchg
jecxz
imul
nop
mov
call
cmp
mov
inc
cmpsb
loop
jmp
test
sahf
push
jo
and
or
icebp
lcall
insl
ljmp
idivl
dec
ds
inc
push
decl
gs
sub
sahf
lds
xchg
mov
addr16
dec
mov
xchg
imul
or
sub
adc
or
pushl
std
adc
dec
xchg
lret
sbb
mov
scas
dec
cld
and
fidivs
mov
call
ja
frstor
jnp
int
test
xor
fsts
push
fstpt
lds
fistpll
outsb
and
push
popf
jle
xor
je
or
adc
xchg
add
addb
mov
push
add
sbb
pop
jns
adc
xchg
imul
sti
insb
pop
xchg
popf
xchg
insl
jg
sub
insb
fadd
xchg
or
jbe
inc
decl
ljmp
inc
andl
ja
xchg
out
mov
aad
sar
loop
out
cmp
jno
adc
into
xor
fs
jmp
fdivr
decl
jno
xchg
int3
sub
push
sbb
in
cmpsl
mov
frndint
aam
push
sbb
sbb
push
ret
call
push
add
push
and
sbb
loope
icebp
mov
sar
inc
inc
pop
pop
and
mov
lds
ljmp
bound
pop
mov
insl
test
testl
fidivs
test
dec
mov
add
ljmp
std
cltd
stos
push
inc
lret
push
andb
ljmp
or
or
iret
sti
sar
adc
and
add
mov
dec
jmp
mov
push
sbb
shrl
add
adc
enter
fwait
xchg
loopne
mov
adc
push
outsl
cltd
arpl
negl
std
xor
lcall
push
cwtl
int
repz
sub
add
in
mov
jg
push
adc
addr16
fdiv
adc
pop
push
xor
decl
mov
cmc
gs
ljmp
bound
lret
xchg
popa
xor
cmpsl
adc
addr16
ljmp
test
cmp
jb
repnz
insl
push
fcoms
push
data16
cmp
mov
scas
cmp
lcall
into
sbb
push
mov
stos
std
not
scas
lcall
ss
xor
jb
mov
mov
shrb
pop
xor
jmp
ljmp
and
jle
jg
scas
sahf
adc
ljmp
push
and
pop
lds
xchg
mov
add
sbb
mov
push
mov
ficoml
inc
fildl
movsb
dec
nopl
sar
gs
sub
pop
not
ljmp
sub
out
cmp
inc
inc
jo
jg
loope
cmp
cmp
jne
test
aas
adc
and
dec
xlat
sbb
pop
cmp
inc
or
shll
mov
jno
incl
movsl
jmp
inc
pop
imul
push
jne
fildll
mov
xchg
insb
std
clc
in
xor
lret
imul
and
jg
or
movsl
and
add
in
pop
addb
push
es
nop
jl
mov
xor
dec
ljmp
arpl
xor
jne
ja
fidivrl
dec
lret
jbe
sub
mov
shrl
les
or
sub
ljmp
out
stos
cs
mov
mov
dec
decb
addr16
jb
lcall
mov
loopne
enter
sarl
repz
pop
xchg
cld
inc
mov
call
mov
jne
adc
ret
repz
cmp
movsb
dec
jmp
lock
jb
mov
dec
sahf
les
pop
or
cmpsl
in
test
ljmp
cmp
or
pusha
fwait
add
iret
mov
mov
movsl
aad
cmp
sub
or
add
xchg
sub
filds
pmulhuw
xchg
pop
pop
movhlps
adc
loopne
jmp
aam
ret
mov
xor
xchg
and
or
icebp
nop
xor
cmp
arpl
mov
mov
mov
jns
inc
adc
shr
jmp
cmc
pop
cmpsl
orl
test
lods
jno
and
cmp
aam
add
loope
in
add
ljmp
add
nop
fcoml
dec
lret
sub
scas
add
mov
pop
mov
popa
cmp
jmp
cmp
rcl
imul
xchg
xor
xor
pop
xchg
dec
jno
cmpsb
pop
jns
js
call
sub
xchg
jecxz
and
testb
repz
cmp
jb
in
or
incl
pop
testb
inc
mov
arpl
cmp
pop
adc
cmpsb
inc
mov
dec
dec
mov
or
and
add
mov
or
pushf
mov
out
clc
mov
out
stos
mov
sbb
jmp
fsqrt
incl
decl
mov
adc
stc
cmp
pop
int3
cwtl
xchg
pushf
lahf
push
call
int3
mov
xchg
adc
xchg
cmp
add
sbb
addr16
xchg
or
leave
push
push
test
aam
mov
mov
mov
dec
and
scas
inc
mov
lcall
into
push
fwait
jns
adc
cmp
add
loopne
ja
in
or
scas
cli
cmp
cmp
fnsave
out
call
pop
lods
dec
cmpsb
call
sbbb
mov
push
scas
jne
mov
mov
xor
inc
fucom
sub
sbb
adc
jmp
mov
test
loopne
cmp
addr16
repnz
pop
jecxz
sbb
js
incl
es
xor
cld
push
jb
xchg
cltd
mov
decb
cld
cmpsb
cmp
cld
fnstsw
mov
sub
mov
leave
dec
sub
sbb
sti
mov
inc
lret
loope
mov
call
lods
fisubrs
lcall
or
enter
cmp
push
lods
test
mov
cmc
mov
mov
mov
and
xchg
jo
inc
inc
aam
call
jle
pushl
push
hlt
sahf
sarb
js
pusha
popa
jmp
jnp
ljmp
jbe
jecxz
fcmovb
pushl
mov
xor
negl
cmc
and
push
call
arpl
loopne
das
dec
and
mov
adc
jg
dec
mov
test
pop
scas
inc
inc
pop
inc
andb
iret
frndint
ljmp
into
loop
mov
mov
lret
xor
enter
lcall
push
lahf
and
add
inc
nop
sbb
inc
in
jmp
mov
fwait
daa
mov
int3
outsl
jmp
arpl
inc
mov
testb
lahf
dec
ret
push
insb
rcrl
stos
aaa
mov
or
adc
xor
jmp
testb
push
repz
nop
ljmp
in
xchg
and
popa
call
rcrl
and
jmp
ljmp
decl
outsl
jg
push
out
negb
scas
repnz
lret
mov
mov
fnstenv
addr16
into
in
test
or
xchg
and
hlt
adc
call
fcmove
scas
mov
test
enter
orl
push
scas
adc
or
pop
stos
xchg
cmc
stos
ja
sti
mov
mov
insb
xor
lods
movsl
ret
mov
dec
fwait
test
jp
jecxz
or
sbb
dec
mov
or
mov
repz
movsb
cs
push
sub
in
repnz
mov
jl
lds
test
scas
add
lcall
jmp
sub
hlt
adc
decl
adc
dec
inc
inc
sub
rol
jo
data16
test
xchg
rorl
or
pop
adcl
push
sub
jmp
xor
mov
pop
popf
xchg
sti
clc
fisubs
xor
cmp
xor
mov
mov
or
jnp
xor
jne
or
das
stos
lock
leave
push
pop
jmp
nop
lods
add
ficomps
jecxz
fdivr
call
leave
rcll
cmp
hlt
mov
sbb
pushf
imul
mov
cld
decl
jmp
fldl
shr
adc
inc
fwait
call
adc
add
clc
fnsave
mov
adc
arpl
lods
fucomip
or
and
push
enter
xor
cmp
mov
popf
pusha
lcall
movsb
cmp
hlt
mov
push
adc
fwait
mov
mov
call
jp
or
fsubrs
xor
push
sub
iret
outsl
mov
push
loopne
mov
ljmp
test
pusha
ss
pop
outsl
inc
ret
mov
sarl
outsb
mov
call
mov
mov
loopne
stc
ljmp
jo
outsl
int
aad
into
notl
xlat
call
fdivr
pop
add
xor
sarl
push
cwtl
mov
mov
pop
and
jle
dec
fiadds
and
mov
fldt
mov
cmpsl
call
jmp
movsb
mov
in
sub
fs
addr16
nop
inc
push
xchg
sbb
in
scas
jg
insb
das
jns
ljmp
movsb
ds
xor
mov
sbb
push
dec
decl
jb
adc
pop
dec
sub
sub
sub
lods
mov
jle
dec
sti
xor
ljmp
sar
out
cmc
jbe
add
testb
sub
jmp
out
in
jmp
mov
xor
push
or
sbb
and
sbb
scas
xorl
push
mov
divl
aam
sbb
test
fndisi(8087
jl
sahf
ret
mov
testb
xchg
repnz
pop
and
xor
inc
dec
out
insb
xchg
rcrb
jge
lcall
mov
push
dec
or
cmpsb
jae
gs
test
lock
inc
and
rcl
push
inc
cld
negb
xchg
mov
fisubrs
iret
call
mov
in
into
mov
mov
lds
ja
sbb
stos
test
icebp
jo
mov
jg
lret
lret
or
xor
xchg
inc
stos
mov
cmp
pop
hlt
inc
mov
mov
pop
test
sbb
hlt
jge
movsb
dec
mov
test
jmp
xchg
xor
aaa
adc
pushf
adc
push
and
hlt
movsl
repnz
dec
adc
cmpsl
je
push
in
icebp
mov
push
xor
xlat
enter
or
pushl
pop
dec
shlb
std
adc
xchg
ljmp
les
lcall
iret
jo
sub
and
divl
mov
sub
push
in
cmp
xchg
test
cmp
incl
fdivl
jg
loope
jae
lcallw
jae
pop
add
stos
push
shll
jno
sar
lcall
inc
movsl
stos
mov
outsl
lods
pop
mov
and
inc
sub
mov
add
and
ds
data16
ret
xchg
pop
daa
insl
mov
movl
lahf
and
int3
test
push
adcb
test
psubq
call
shll
lcall
push
xchg
push
dec
push
rcrb
mov
push
popf
arpl
rcll
out
push
push
aam
or
add
jb
pop
cld
push
or
mov
push
mov
std
xchg
sub
mov
bound
jecxz
and
pop
pushl
pop
test
or
in
imul
or
jnp
push
je
sub
call
and
sahf
ja
inc
push
push
inc
pop
stc
inc
orb
decl
popf
ljmp
pusha
mov
dec
sarl
jno
add
mov
fdivr
inc
push
sahf
es
data16
mov
out
clc
mov
cmc
jmp
mov
jmp
and
cld
sbb
ljmp
adc
imull
jp
push
xor
lret
and
out
push
mov
jo
ljmp
dec
and
jmp
and
aam
lret
jno
jne
int
imull
or
scas
stos
adc
hlt
sub
lock
mov
daa
rolb
rol
popa
jns
mov
jmp
push
mov
xor
xor
test
cmpsb
in
mov
test
jo
cmp
call
stc
stc
movsb
mov
adc
nop
sbb
test
mov
push
fistpll
adc
xor
aas
jg
lock
popf
cli
je
out
in
xchg
sub
das
in
push
repnz
scas
xor
cld
shrb
in
and
mov
movsb
sahf
iret
bound
push
fs
lods
clc
movsl
mov
decl
lret
xchg
pop
adc
fs
adc
dec
and
sbb
inc
ret
jo
or
clc
mov
dec
lret
jle
mov
jae
jbe
mov
push
cmpl
incl
cmp
dec
mov
in
add
call
ds
inc
repnz
popa
mov
loop
sub
jo
pop
out
mov
sub
das
outsl
push
cwtl
cmp
cmp
test
jge
rcl
roll
add
call
dec
inc
jp
adc
xchg
adc
test
pusha
cli
cwtl
mov
ds
stos
adc
cmp
ljmp
out
mov
daa
fdivrl
sbb
inc
aas
or
cltd
lret
sbb
push
mov
out
and
inc
aam
outsb
pushf
xchg
pop
fsubr
jmp
bound
cmovns
test
dec
shll
push
and
jb
mov
sbb
hlt
iret
ret
adc
mov
mov
jl
rcrl
jl
repz
daa
push
iret
sti
mov
pushf
sbb
pop
mov
loop
ljmp
pop
daa
dec
out
out
adc
mov
roll
pop
lods
jl
jmp
fistpll
out
setg
lods
sahf
int3
and
or
or
mov
jmp
rolb
and
aad
insb
cmp
inc
mov
push
mov
das
pop
cmpsb
sub
repnz
lret
lock
mov
and
pop
call
pop
add
cmp
ljmp
das
ret
jl
mov
jge
ljmp
lret
addb
or
mov
je
cld
aas
addr16
push
xchg
popf
aad
push
hlt
adc
fnsave
pop
mov
lcall
inc
push
repz
test
ljmp
jecxz
jmp
in
push
mov
adc
lods
add
jmp
fistps
jmp
lcall
pop
aad
adc
std
inc
ljmp
xor
fiaddl
mov
or
and
mov
call
push
clc
jbe
lods
pop
xchg
sub
sbbw
das
push
push
push
sahf
jge
dec
decl
sahf
mov
out
not
pop
jecxz
adc
fidivs
mov
mov
mov
jl
lds
push
repz
iret
pop
sti
mov
loopne
mov
mov
iret
imul
adc
lret
xchg
cmp
cld
pushl
pop
xor
aas
cmp
stos
push
hlt
mov
jne
fsubrs
enter
sub
ljmp
cli
incl
lret
lea
jbe
arpl
adc
mov
mov
mov
jno
mov
jmp
leave
pop
dec
or
jmp
js
push
out
and
fnstcw
popf
push
jns
adc
mov
mov
mov
push
movsl
subb
push
enter
and
nop
fcmovu
cmpsb
xchg
push
call
call
pop
push
fisttps
dec
fnstenv
loopne
and
dec
xor
jmp
leave
xor
movsb
cmp
xchg
adc
pushf
int3
cs
adc
pop
fisttps
pushl
std
and
jae
fnstcw
pop
enter
and
addr16
leave
ljmp
insl
flds
stos
mov
push
dec
rorl
je
imul
push
daa
test
filds
xor
aaa
adc
lahf
lcall
xchg
jmp
mov
dec
sbb
xchg
mov
push
jmp
popf
jmp
jp
loopne
mov
gs
xor
jle
push
pop
adc
fnstcw
inc
mov
cmp
decl
in
dec
int
mov
shll
jo
push
sbb
fs
xor
pushl
push
xchg
shrb
adc
mul
cmp
mov
xor
jle
xchg
ret
adc
push
das
pop
pop
cmpl
pcmpgtb
cmp
lcall
cmp
stc
xchg
shrb
out
int3
cmp
decl
fldenv
insl
mov
aam
or
push
fwait
das
xchg
and
cwtl
movl
lods
outsl
dec
xor
mov
rolb
cmpsl
dec
lods
lds
mov
fwait
ds
decl
push
call
sub
pop
gs
lfs
jno
xchg
cmp
popa
clc
decl
sub
stos
outsl
je
sbb
add
fnstcw
aas
and
xor
ljmp
mov
fs
xchg
push
xor
cmc
jg
jl
jbe,pn
jg
out
pusha
sbb
push
xor
iret
inc
jg
pushl
aas
adc
shrl
clc
pusha
sahf
das
rclb
push
push
into
fnstsw
ret
mov
movsb
repz
mov
jmp
out
clc
xchg
bound
and
jmp
mov
mov
push
push
xchg
mov
jle
sti
xor
cmp
ret
pop
mov
mov
mov
add
ljmp
mov
fldenv
push
xorb
shlb
xchg
fstl
dec
shll
mov
pop
dec
xchg
dec
test
nop
outsl
or
inc
add
outsb
fistps
fistpll
mov
cmp
lret
pushf
es
mov
dec
movsb
jl
aas
cmpsl
adc
out
pop
imul
push
pop
mov
stos
mov
sahf
mov
inc
out
push
mov
lret
add
test
jns
fwait
data16
es
cld
adc
enter
dec
insl
insl
pop
adc
ss
jp
mov
inc
ss
stos
inc
ljmp
xchg
fcompl
cwtl
sbb
pop
and
sbb
fcmovu
mov
jg
es
dec
xchg
test
or
int
jge
pop
les
insb
cmp
ja
ljmp
mov
and
es
push
into
dec
dec
dec
xchg
leave
lods
shl
pop
inc
pop
xchg
lcall
mov
mov
sbbb
iret
cmpsl
jecxz
add
out
shl
call
pop
in
push
aaa
mov
out
xor
scas
arpl
lret
aam
mov
mov
lds
in
in
fidivrs
call
xor
cltd
out
aas
mov
mov
jmp
ds
and
das
and
mov
ret
popa
dec
jl
and
js
cwtl
jne
push
mov
and
pop
loop
mov
out
or
scas
data16
pushl
loope
js
push
loopne
adc
jno
and
outsl
cld
dec
jecxz
jns,pn
or
incl
pushl
push
fdivrp
or
std
cmp
sbbb
lods
cltd
add
mov
add
fisubrl
push
or
idivl
jge
enter
decl
daa
andb
push
inc
push
mov
inc
fcmove
popa
xchg
into
jge
pusha
push
mov
mov
jg
mov
lahf
mov
lds
xchg
dec
clc
in
aas
fdivr
jmp
xchg
gs
imul
scas
adc
out
movsb
mov
dec
inc
add
decl
and
js
sub
dec
es
cmp
outsl
adc
push
outsb
mov
loopne
repnz
cld
mov
ja
imull
ret
sub
lret
xchg
mov
pushl
and
mov
lcall
sbb
add
add
js
xchg
xor
cwtl
jmp
dec
outsb
cmpsl
cld
ja
into
imul
pop
out
fcmove
xlat
fistpll
sub
inc
cwtl
mov
jle
push
jecxz
mov
mov
fisttpll
incl
or
and
sub
imul
ficoml
incl
mov
fadd
push
push
xchg
sarl
aas
lock
xor
cmpsl
cmc
adc
cmp
addr16
decl
jl
mov
sbbl
test
add
popf
shl
imul
push
sub
pextrw
and
mov
fstl
decl
cmpsl
icebp
sbb
in
mov
xor
out
and
repz
jle
and
hlt
decl
xor
adc
lret
adc
mov
stos
rorb
fdivrs
call
sub
sbb
out
aas
inc
inc
aad
das
outsl
stos
test
scas
incl
xor
dec
mov
jns
lahf
aad
loopne
adc
sub
sbb
sahf
push
pop
push
decl
int
repz
adc
and
test
cli
sarb
decl
sub
lret
sbb
mov
mov
orb
daa
sub
mov
push
incl
dec
pusha
add
sahf
int3
dec
lcall
push
sub
mov
bound
aas
in
js
mov
ljmp
jno
or
xchg
outsl
or
std
cmpsl
movsb
add
loope
int3
pop
enter
jb
cmpsl
outsl
enter
mov
sar
fsubrs
xchg
lahf
cmp
bound
sbb
mov
enter
sahf
dec
outsb
dec
decl
and
cmp
push
sbb
xchg
lea
icebp
ljmp
out
or
mov
or
cwtl
sahf
cmc
aaa
cmpsb
out
jg
jnp
bswap
jb
xor
jne
testl
mov
add
mov
sbb
mov
fdivrl
js
insb
sub
pushl
fidivrs
and
pop
adc
hlt
daa
mov
int
lods
clc
movsb
sub
jmp
sbb
lea
and
sbb
clc
adc
ljmp
jmp
clc
mov
xchg
mov
pop
dec
sbb
or
pop
arpl
mov
mov
xor
decl
xchg
sbb
pop
mov
fidivl
xchg
stos
testl
daa
push
cs
push
mov
cli
jns
cmp
jecxz
sahf
and
das
push
cmp
lahf
pop
call
roll
xor
jne
xchg
add
bound
jp
add
movsl
inc
test
jnp
lock
inc
jge
mov
mov
xchg
dec
and
jmp
ja
jmp
xchg
sub
add
push
call
fwait
jno
add
lcall
mov
xchg
test
movsl
pop
movsl
sbb
out
push
sbbb
or
daa
leave
fcomp
clc
jg
and
xchg
mull
ret
enter
adc
pop
das
lock
and
mov
dec
fcmovu
fldenv
sub
mov
mov
dec
cli
add
sbbb
jle
push
dec
mov
jl
pop
mov
xchg
sbb
jae
jg
dec
push
xchg
sbb
pop
push
imul
les
out
mov
test
push
cltd
mov
lcall
pand
lahf
ret
sub
or
scas
jge
fists
jmp
and
jecxz
lcall
sahf
sbb
or
or
shll
xor
fidivs
pop
loopne
lret
mov
push
mov
push
cmp
inc
xchg
and
decl
jg
bound
fwait
xor
pop
jecxz
movsl
add
fldcw
call
adc
cwtl
xor
or
popf
cwtl
loope
lcall
and
mov
inc
es
pushl
clc
lahf
addr16
gs
or
testb
xor
cltd
sarb
faddl
decl
add
pop
cmp
push
es
cmp
cs
outsl
sbbl
repnz
mov
add
incl
pop
mov
mov
xlat
cmpsb
addr16
mov
fcomps
mov
xchg
stos
mov
or
sbb
idivl
test
ret
inc
cli
into
jg
xchg
mov
in
push
add
repz
push
mov
ljmp
sbb
push
test
incl
pop
jne
fwait
cmp
mov
insb
pop
jb
mov
mov
xchg
push
adc
jb
test
push
movsl
in
inc
out
dec
ficompl
fsubrl
adc
cltd
xchg
jae
mov
clc
cmp
aas
iret
ss
ret
out
dec
inc
ss
or
or
mov
xchg
mov
mov
dec
enter
xor
dec
lcall
xor
outsl
call
movsl
add
sbb
pop
add
and
jnp
add
std
push
ss
cmp
lret
pop
push
xchg
inc
add
decl
orl
call
shlb
inc
mov
decl
adc
sarb
jl
mov
push
mov
xor
sub
cmp
jg
notb
cs
xchg
addr16
jne
and
andb
ljmp
cmp
rcrb
lahf
or
mov
clc
add
loopne
scas
pop
icebp
jno
cs
cmp
scas
mov
std
pop
inc
dec
dec
cwtl
sub
jg
pusha
inc
outsl
cmpsl
mov
adc
sahf
pusha
fsubrs
jg
mov
enter
fists
push
cmp
mov
loope
shl
xchg
loop
sub
adc
mov
mov
jmp
sbb
mov
push
sti
dec
dec
jmp
aad
cmc
test
jae
adc
jecxz
jg
fistpll
dec
ljmp
stos
in
adc
aas
xchg
aam
fucom
or
mov
enter
into
xor
lcall
loopne
lcall
adc
adc
negb
scas
pop
outsb
les
hlt
cli
push
inc
popl
dec
mov
xchg
or
push
movsl
test
aas
and
stc
add
ficompl
inc
fdivl
mov
inc
decl
leave
push
movsl
cld
mov
out
mov
jo
repz
sub
mov
daa
decb
adc
jecxz
adc
push
mov
lret
inc
pop
xlat
incl
xor
jne
loop
xchg
in
scas
inc
imul
jg
call
cld
mov
cmp
std
mov
lret
or
addl
add
xchg
fwait
out
mov
jge
xchg
clc
xor
out
push
lcall
push
clc
or
dec
sbb
lea
nop
aas
cmp
ljmp
dec
mul
mov
gs
in
mov
mov
jns
rorb
fucomp
xchg
and
insb
lahf
pop
mov
popf
lret
add
int
scas
fildll
jne
rcrl
dec
pop
test
scas
lcall
cld
pushl
popf
dec
rcll
mov
pushf
dec
decl
sti
push
scas
rclb
pop
int
jg
or
mov
mov
mov
mov
popa
les
add
ljmp
fidivs
mov
sbb
push
mov
push
sbb
cmp
ljmp
call
jecxz
inc
fwait
and
inc
cmp
xor
in
inc
arpl
and
mov
mov
je
mov
movsb
xchg
jl
xlat
mov
push
out
dec
sar
in
fsub
ljmp
insl
dec
inc
xor
stc
sub
push
nop
cmc
add
jp
call
sub
add
dec
outsb
repnz
sub
lcall
rcll
repz
lcall
movsb
push
test
leave
sbb
mov
or
mov
pop
jle
pop
aas
mov
call
dec
cmc
jmp
icebp
cmp
je
cmp
pop
jg
xchg
loop
cmp
inc
pop
and
daa
mov
push
add
push
cli
jg
loopne
stos
dec
out
push
mov
sbb
outsl
pop
cli
dec
lods
pusha
sbb
sub
jb
xor
mov
pop
or
pop
and
sbb
mov
jne
mov
nop
pop
popf
in
lret
mov
test
outsl
push
imul
mov
dec
and
gs
fcoms
mov
mov
pop
push
add
cmc
sbb
icebp
jmp
fidivl
xlat
out
insl
in
sahf
pop
xchg
filds
jl
xchg
mov
jo
je
sbb
incl
pop
push
cmpb
out
leave
inc
inc
and
movsb
fimuls
add
jmp
popf
leave
dec
sbb
rolb
mov
inc
in
leave
jge
dec
jae
xor
mov
lcall
js
jns
cli
bound
fld
mov
add
aaa
inc
repz
xchg
ljmp
aaa
shrl
es
mov
xor
repnz
mov
jmp
icebp
shr
push
adc
sub
mov
mov
hlt
jg
mov
cmp
shlb
mov
jne
mov
incl
mov
js
xchg
inc
loopne
push
sbb
and
jo
jmp
and
stc
or
adc
test
jns
add
xchg
hlt
les
or
jmp
and
sbb
xlat
lea
mov
xchg
out
popw
mov
and
inc
sarl
sbb
cld
out
and
cli
call
incb
int3
sbb
fcmove
in
xor
mov
push
outsl
pushl
movsb
cwtl
data16
pop
sarl
mov
loope
out
mov
pop
loopne
movsb
imul
incl
pop
push
ret
xchg
js
cmp
jno
mov
fistpll
clc
add
pop
test
pop
rcrb
push
cmp
mov
loop
and
lret
aas
mov
cmc
pop
mov
sbb
adc
loope
push
xor
or
push
cmp
mov
pop
mov
pushl
mov
add
and
arpl
jp
pandn
movl
inc
iret
jmp
inc
adc
ds
nop
out
imul
jnp
push
push
add
outsb
les
call
dec
or
or
shlb
xchg
dec
dec
push
xor
je
lcall
insl
or
or
xchg
mov
out
adc
mov
mov
jg
repz
loope
xor
xchg
pop
cltd
movsb
outsb
sti
lahf
pop
fisttps
and
or
mov
or
leave
lret
call
jp
fisubrl
std
pop
std
lahf
fisubl
pop
incb
movsl
mov
jecxz
and
pushl
dec
inc
or
stos
dec
cmp
out
hlt
push
or
mov
push
pop
xchg
pop
cmc
test
dec
pop
sub
push
push
fcmovu
pusha
mov
incl
cld
movsb
fs
sub
aas
dec
shrb
xchg
pop
cmp
mov
outsl
lock
jge
pop
repz
into
sbb
jns
sbb
stc
xlat
mov
rcrb
stos
jb
lcall
sbb
push
aam
and
jl
mov
orb
lcall
jmp
add
andb
xchg
leave
stc
jae
pop
mov
add
adc
inc
or
push
outsb
xchg
sub
testl
add
sub
out
cli
inc
adc
jl
pop
fldt
jne
popl
xchg
pop
jbe
jae
sub
divb
fmull
aaa
out
loopne
push
push
inc
iret
push
push
cld
les
mov
fcmovnb
xchg
sti
inc
push
xchg
cs
sbb
cs
lea
repz
push
sarl
ljmp
jbe
pop
mov
pop
popl
stos
dec
pusha
pop
pusha
push
movsl
jle
xchg
popa
mov
xchg
nop
add
mov
lea
xchg
dec
push
fisttpl
sbbl
lock
out
adc
popa
stos
ja
loopne
or
sahf
aas
lods
jmp
mov
adc
mov
inc
adc
mov
repnz
adc
add
dec
add
sub
ja
incl
movsb
xchg
and
push
sbb
fs
fisubrs
lods
out
xchg
lret
dec
sbb
dec
cld
ljmp
jo
xor
ljmp
mov
sub
xchg
inc
aas
incl
lock
jo
push
mov
loope
push
dec
ja
cmp
cli
incl
sahf
xchg
cmp
ds
cmc
ja
lock
or
pop
jle
in
lcall
pop
imul
ljmp
int3
mov
outsl
aas
mov
sub
inc
cli
out
clc
pushl
add
sub
jno
fsubrl
dec
ret
xor
popf
aad
mov
loopne
scas
call
pop
ja
call
add
jno
incl
incl
pop
push
xor
pop
icebp
sbb
das
inc
arpl
fidivs
test
pusha
loopne
xor
testb
fbld
xchg
xchg
imul
lahf
jp
jns
call
sbb
stos
jecxz
pop
shlb
dec
iret
mov
inc
mov
lock
in
push
mov
xchg
aam
dec
pop
xchg
fdivr
xchg
jbe
mov
mov
mov
push
mov
pop
jmp
push
jmp
call
arpl
sarl
jmp
jmp
cmp
scas
int3
jae
or
jp
lcall
rcrl
add
ds
movd
inc
mov
fldl
decl
lds
cmp
jg
test
jbe
fdiv
push
inc
xor
es
mov
and
jnp
leave
add
mov
push
mov
jmp
lahf
insb
lret
lcall
adc
push
into
shl
cmp
mov
cld
dec
xchg
call
lds
es
shl
ljmp
sahf
fstpl
push
clc
xlat
and
inc
imul
mov
movsb
and
mov
dec
rorl
cmc
pushf
decl
mov
and
xor
mov
mov
sbb
aas
inc
xchg
lcall
mov
ret
mov
sub
push
roll
fists
cwtl
cli
call
dec
jae
mov
inc
test
mov
jg
std
xor
pushf
mov
aad
add
icebp
dec
jg
arpl
add
incl
pop
mov
in
in
and
push
scas
cmpsb
movsb
out
cmp
andl
aas
add
in
or
xchg
pop
and
lock
data16
int3
jecxz,pn
das
jb
arpl
push
adc
dec
lret
xor
stc
cwtl
out
scas
outsb
fmull
push
add
jmp
mov
inc
add
sti
pop
sbbb
dec
stos
into
dec
mov
xlat
sbb
mov
lret
push
ficomps
decl
mov
rcll
ret
shlb
fisubs
push
mov
push
dec
mov
jg
enter
pop
ja
stos
xchg
push
and
mov
scas
sub
jl
or
mov
ret
int
push
sti
mov
aaa
lret
loop
add
add
mov
and
mov
cmp
and
aas
cmp
xor
xor
jns
fbstp
shll
and
idiv
fsubrp
movsl
push
repz
push
rcr
lahf
mov
int3
jge
lds
mov
lret
xor
dec
sbb
ret
repnz
jg
es
cmp
popf
cmp
or
xor
into
pop
or
hlt
and
std
inc
cmc
ljmp
inc
dec
lret
loop
js
outsl
inc
fdivp
stos
lcall
pop
sub
fucomip
movsl
push
popf
pop
jo
mov
movsb
jp
aas
cmpsb
stos
popf
xor
sub
mov
decl
cli
mov
lds
xchg
leave
arpl
or
pushl
sub
dec
push
insl
lds
push
pop
arpl
push
cltd
push
aaa
dec
pushl
jo
xchg
movsb
xor
mov
or
inc
adc
jno
adc
incl
inc
jae
orb
jne
or
nop
out
cmpsb
mov
mov
fdivr
stc
pop
adc
stos
sbb
add
cld
lahf
xor
incl
ss
mov
je
bound
xlat
xor
outsl
hlt
xchg
inc
shl
and
mov
mov
or
fnstenv
fdivs
lods
mov
inc
jg
lock
iret
in
add
fisttpll
mov
xlat
das
clc
pushl
out
xor
cltd
std
je
hlt
data16
push
cmp
icebp
jg
sub
fwait
jne
pop
sbb
test
arpl
jmp
lcall
sub
and
clc
push
push
icebp
mov
aam
fmuls
xchg
push
sub
pop
sti
fwait
shrb
loope
jb
scas
mov
dec
popa
adc
incl
dec
pushf
js
adc
xchg
pop
fsts
je
ljmp
int
push
sub
sub
pop
inc
repnz
incl
pop
mov
cmp
daa
rcrl
pop
pop
int
loop
xchg
inc
sahf
push
sti
incl
movsb
dec
filds
ss
push
outsl
and
jb
sti
mov
lcall
fcmovnbe
sub
decb
subb
imull
mov
push
mov
sbb
push
sbb
inc
ret
xor
stos
pop
push
push
sub
rolb
aad
mov
imul
ljmp
sbb
adc
dec
pop
je
outsl
mov
push
ja
cmp
test
push
mov
std
mov
mov
push
call
test
sbb
insw
sub
cmp
das
jl
jg
cmp
and
aad
xor
push
sub
mov
stos
xor
cmp
pop
cmp
sub
mov
fldenv
imul
jg
dec
aaa
xchg
pop
fsubs
fwait
rcr
lods
mov
cwtl
xchg
lahf
cli
stos
lcall
mov
stos
pop
pop
inc
movsl
scas
xchg
test
loope
mov
fistps
mov
dec
xchg
cmpb
test
cmpsl
icebp
xlat
xchg
sbb
divb
stc
lcall
icebp
dec
xchg
pop
push
cmc
lcall
push
ret
stos
sub
jno
loopne
shr
scas
pop
inc
adc
adc
mov
in
push
or
push
pop
sbb
idivb
in
lcall
stc
and
insb
sub
popf
jl
mov
lahf
aaa
sarb
and
call
xor
iret
push
mov
jae
and
adc
test
decl
mov
sbb
clc
xor
pushf
or
push
rep
jmp
insb
and
push
add
out
push
lahf
sub
dec
mov
jo
iret
sub
fwait
jle
xchg
jae
inc
adc
or
xchg
xchg
mov
sbb
mov
pushl
mov
pop
mov
aaa
pop
add
arpl
dec
test
notl
mov
mov
pop
xor
mov
mov
mov
or
add
cs
bound
sub
xchg
mov
lret
jno
outsl
mov
xchg
cmpsb
push
rclb
pop
inc
mul
jge
les
sar
and
add
mov
or
sbb
cmp
jbe
rcrl
dec
mov
pushl
push
movsb
mov
and
xor
pop
cmpsb
cmp
lock
daa
dec
add
incb
pushl
pop
inc
sbb
sbb
aad
or
repz
lcall
loopne
mov
mov
or
fnsave
and
in
mov
cmp
inc
jb
inc
mov
push
jge
outsb
xor
sbb
xchg
pop
xchg
in
xchg
or
adc
push
mov
ljmp
rcrl
inc
movsb
enter
sar
adc
sbb
fwait
bound
dec
mov
sti
enter
mov
adc
ja
push
mov
jmp
incl
ds
jnp
scas
jmp
scas
add
cmc
ret
adc
ljmp
pop
mov
mov
and
sar
orb
mov
mov
and
cmc
ljmp
xchg
mov
mov
pop
jp
hlt
imul
cmp
xor
inc
out
cli
into
dec
and
imul
jns
fisubrl
or
rcll
cwtl
cmc
int3
pusha
cmpsb
cwtl
mov
out
loope
pushf
daa
icebp
fucomp
add
loopne
sar
fldcw
mov
pop
add
push
mov
dec
idiv
imul
push
pushl
xor
sbb
out
dec
jge
imul
or
filds
mov
cmp
adc
dec
cmp
mov
aaa
xor
and
data16
call
push
arpl
ret
push
push
in
fisttps
shr
add
pop
lock
and
insb
and
xchg
lcall
add
movsl
pop
pop
xor
cltd
daa
scas
xor
dec
push
sarl
pushf
pop
test
sbb
cmc
incl
pop
jbe
cltd
fwait
or
loop
push
test
cmp
loop
jmp
cld
jmp
xchg
xor
and
cs
push
add
mov
imul
sbb
jno
lret
mov
rolb
data16
jb
or
call
popf
stc
adc
cmpsl
mov
outsb
insb
inc
call
jge
loop
pop
sbb
inc
repnz
xchg
stos
inc
xlat
pop
cld
pop
stc
prefetchwt1
push
pop
negb
aas
test
xchg
pop
or
dec
xor
xchg
loope
or
ja
fbld
push
in
loop
cmpsl
out
or
add
imul
call
push
cmp
mov
loopne
pop
aas
imul
lret
add
mov
out
or
lcall
push
dec
dec
inc
sub
into
iret
mulb
aas
data16
inc
dec
adc
jg
dec
addb
adc
fbld
dec
pop
mov
shrb
insl
pop
sbb
call
test
push
and
fistps
and
adc
mov
mov
add
xor
pop
ljmp
dec
sti
inc
mul
fcmovnb
in
xor
pop
repz
inc
addb
aaa
inc
ljmp
push
cld
ljmp
icebp
inc
in
cs
ret
inc
mov
or
cli
dec
cli
insb
sub
pop
packsswb
lcall
js
addl
mov
loopne
add
mov
fmul
call
insl
xchg
clc
mov
fwait
mov
jmp
dec
mov
dec
pusha
jmp
arpl
bound
fs
mov
decl
jp
sub
lods
out
dec
push
mov
cmc
sub
cmp
and
std
ret
xor
pushf
incl
fcoms
and
jb
jo
adc
inc
fwait
xchg
int3
ljmp
std
adc
push
adc
ljmp
mov
cli
pop
xchg
clc
and
xor
subb
cmp
jmp
ss
int
jmp
pushf
sbb
push
cmp
sahf
cs
mov
out
jp
loope
mov
jg
push
cmp
jae
aas
jge
inc
inc
popf
sti
cltd
mov
aaa
push
jmp
fs
out
aam
adc
out
or
pop
cmc
mov
push
adc
jbe
lahf
js
or
lea
inc
fs
sub
mov
incl
pop
cmp
fs
js
bound
mov
xchg
outsl
pushl
mov
mov
jmp
xlat
and
imul
pop
mov
sbb
bnd
fnstenv
push
mov
sub
lret
dec
stc
fisubrs
out
mov
mov
pusha
popl
ja
ja
push
fldenv
iret
push
inc
and
add
mov
les
imul
mov
push
hlt
jae
mov
sti
enter
outsl
cmp
pushl
jmp
out
mov
adc
xchg
push
sub
jnp
les
setno
xchg
xor
push
hlt
pushl
cltd
ffree
jge
into
enter
jecxz
xchg
daa
xchg
xchg
ja
lcall
loope
lcall
adc
ljmp
ret
mov
dec
push
mov
rcrb
inc
mov
movsb
cs
rcrl
mov
lock
lods
cltd
inc
fwait
call
cld
inc
les
push
sub
call
adc
cld
inc
mov
gs
test
decl
xchg
aad
fadd
mov
cmpsb
mov
ret
mov
lcall
push
out
lods
sub
cmp
rorb
das
imul
imulb
fcomps
mov
mov
aad
rcr
push
rcll
ljmp
cmc
stc
pop
ret
daa
xchg
repz
outsb
cs
mov
jecxz
jno
cmpsl
push
in
decl
in
test
or
and
pushf
pop
nop
and
incl
addb
inc
inc
xchg
nop
xchg
into
jno
or
dec
push
clc
std
decl
lahf
lcall
inc
sub
out
mov
ljmp
cld
lahf
sbb
lret
hlt
xchg
imul
cld
jnp
inc
xchg
fcomps
lods
sahf
xchg
push
ljmp
fsubs
inc
xchg
out
outsl
mov
sbb
add
sub
mov
mov
test
ljmp
push
or
movsb
ret
xchg
loop
push
jecxz
lret
add
or
mov
clc
jmp
loop
or
add
sahf
incl
or
mov
mov
dec
cmpb
cmp
aad
cmp
test
mov
iret
cmp
mov
and
subb
and
nop
inc
mov
mov
jp
add
mov
pop
clc
ret
xchg
sahf
add
lahf
movsb
dec
and
mov
in
add
jmp
in
popf
jmp
test
ret
jns
dec
lods
or
test
jecxz
decl
inc
push
fidivs
xchg
mov
mov
mov
push
idiv
hlt
mov
mov
mov
mov
add
mov
lcall
lret
das
clc
pop
mov
ffreep
js
orb
cltd
push
mov
jg
jl
add
in
jne
jnp
xor
arpl
jg
ljmp
testl
push
fildll
dec
das
movsl
int
mov
call
mov
cmp
cs
imul
jge
out
adc
push
inc
sbb
call
xchg
call
push
popa
cwtl
xchg
inc
mov
test
lods
sbb
mov
test
lret
jmp
dec
addb
xchg
lcall
and
and
je
inc
xchg
aad
dec
das
xadd
stc
sahf
cmp
ja
fwait
mov
fcomps
mov
jle
pop
stos
sahf
inc
push
je
push
and
outsl
or
mov
mov
xchg
add
cmpsl
add
sar
ljmp
mov
push
push
lahf
roll
sub
leave
fdivrp
test
cmp
ret
mov
sub
xchg
jg
std
lahf
cmp
aas
pop
pop
idiv
lcall
add
aaa
add
sahf
test
or
mov
xchg
sbb
add
push
add
mov
call
pushl
les
fdivr
cmp
jo
out
pop
inc
cmp
int3
inc
clc
mov
jae
sub
ffreep
pushf
testl
stos
cmp
pop
mov
or
loopne
cmp
push
insl
out
pop
mov
push
and
jnp
sub
in
jg
sbb
in
call
xor
imul
orl
jge
jmp
mov
call
in
pop
stc
mov
mov
sbb
inc
xchg
xchg
mov
sbb
cwtl
and
roll
push
dec
pop
mov
and
inc
ret
imul
ljmp
lahf
cmc
mov
xchg
out
push
push
inc
or
insl
lret
push
cmpsl
pusha
fimuls
adc
mov
xchg
push
movl
xor
divl
int3
push
xor
mov
je
nop
sti
arpl
jge
mov
xchg
mov
sub
movsb
mov
add
pop
push
xorl
xor
call
in
insl
ja
dec
loop
loopne
mov
mov
bound
aas
xchg
out
imul
cld
bound
imull
xorb
lret
mov
add
arpl
push
dec
push
jge
sar
insb
mov
pop
mov
xchg
sub
das
icebp
ficoms
les
jmp
push
fwait
aas
pop
and
mov
adc
pop
adc
cmp
ljmp
das
or
mov
jmp
xor
and
cmp
jp
jp
mov
inc
jl
jg
inc
sbbb
dec
xchg
sub
idivb
aad
xchg
inc
push
fstpl
sbb
push
scas
nop
adc
xchg
ret
insl
hlt
cmpsb
push
xchg
sbb
adc
ljmp
les
leave
call
adc
pop
fdivrl
fwait
push
cmp
adc
ja
rolb
addr16
adc
adc
loop
jmp
leave
inc
add
aas
cmpsb
mov
loopne
repnz
int
aad
test
mov
dec
xadd
lcall
stos
or
push
jnp
loop
loop,pt
cmp
push
and
ja
pop
sarb
jg
clc
aam
inc
cmp
outsb
jne
xchg
sbb
mov
and
adc
or
adc
jmp
add
popa
sbb
jl
cltd
rorl
push
jl
insb
mov
or
in
lcall
into
test
cmp
faddp
insl
rcll
shlb
jmp
and
jp
mov
popf
add
loop
lods
push
popf
mov
inc
or
cmp
pop
sbb
and
push
lcall
scas
ficoms
data16
pop
and
xchg
scas
cmp
call
loopne
and
jg
cld
aas
lods
fcmove
xchg
xchg
out
pop
push
insl
push
pop
mov
lcall
mov
dec
cmp
jb
dec
icebp
xchg
pop
aam
lret
mov
jnp
mulb
lock
scas
jbe
xchg
mov
push
aaa
mov
fsubr
sub
aas
and
movsb
jno
jne
dec
dec
outsb
xchg
out
push
popa
and
jg
lods
int
out
fsts
sbb
pop
add
pop
pop
imul
or
dec
fdivrp
stos
cs
ljmp
iret
mov
xchg
mov
inc
mov
int3
sar
scas
clc
incl
cmp
mov
mov
add
mov
addr16
call
pop
sub
out
mov
js
jmp
fnstcw
or
iret
iret
pushf
inc
pop
and
in
pushf
inc
lea
sbb
scas
pushl
mov
das
fs
mov
loope
jg
incl
cmc
adc
scas
mov
dec
pop
inc
lock
push
mov
popf
into
pop
mov
lcall
cwtl
pop
lods
add
sbb
fcom
iret
push
jb
jmp
mov
and
jp
mov
push
mov
xor
ss
mov
and
iret
mov
mov
cmp
or
mov
cltd
loope
push
or
out
mov
mov
cmp
test
mov
xor
out
add
stc
mov
int
mov
pop
jbe
pushl
add
add
int
mov
cmc
mov
inc
repnz
inc
sub
subl
pop
call
lock
call
cmovo
pop
les
mov
les
push
fdivrl
std
es
cmp
cmp
and
push
fs
cmpsb
repz
repnz
incl
adc
pop
mov
mov
cmpsb
adc
incl
incl
cld
adc
dec
jmp
js
pop
std
sub
popa
push
movsl
addr16
add
cmp
cltd
push
jbe
inc
jnp
mov
push
sub
and
add
sbb
dec
lahf
shr
ljmp
xorb
jne
lret
mov
jg
lret
mov
jmp
xor
sbb
xlat
shll
sbb
mov
bound
inc
cli
and
push
cli
push
sbb
insb
cmp
and
xlat
iret
xor
cld
sar
sbb
inc
aaa
pop
pop
loope
ljmp
ror
jae
es
fs
jg
xchg
scas
adc
jnp
dec
xchg
add
dec
mov
lods
arpl
dec
mov
and
pop
xchg
outsb
test
hlt
ja
mov
jmp
push
nop
inc
aas
pusha
or
leave
frstor
fistl
call
xchg
icebp
jmp
cli
popa
mov
stos
loopne
fcomi
mov
sbb
add
jb
xchg
shrb
popf
inc
xlat
sbb
data16
aas
xchg
idiv
lcall
ficoms
test
lret
jne
out
bnd
je
shrb
mov
mov
lods
xlat
jb
sbb
pop
daa
ret
ficomps
cltd
imul
movsb
ret
incl
lock
pop
rcrb
sarl
inc
or
aam
repz
subl
call
int3
arpl
sub
pop
and
jnp
out
aad
movsl
sbb
jae
jmp
xchg
out
or
mov
je
xor
sbb
mov
movsl
mov
decl
mov
arpl
xlat
movsb
inc
mov
out
add
mov
push
lea
add
decl
fcomps
mov
adcb
inc
nop
sbbl
mov
iret
lcall
lcall
or
xor
ror
jae
test
lods
sbb
sub
incl
mov
dec
test
cli
jle
cmp
dec
mov
add
loopne
cld
jg
lcall
cmp
jbe
out
popf
sahf
xor
movsb
fldcw
mov
adc
incl
mov
hlt
cmpsl
cmp
jno
icebp
out
hlt
mov
cmp
mov
pop
decl
test
sub
mov
add
ss
mov
ljmp
sarl
dec
push
jne
icebp
popa
mov
lahf
nop
imul
pusha
jnp
jecxz
jmp
ret
mov
sbb
mov
mov
jmp
test
ljmp
pushl
mov
mov
jbe
or
lret
insl
lahf
push
in
dec
lea
xor
test
pushl
fsubrl
nop
test
sub
cmp
jecxz
outsb
fnstenv
gs
add
cmp
fadds
mov
iret
in
adc
shlb
or
xchg
xor
jmp
jecxz
jp
imulb
lcall
push
mov
push
ljmp
call
iret
daa
or
mov
mov
inc
divl
repnz
rorl
lcall
add
mov
xchg
add
fwait
sbbb
push
mov
cmp
add
lea
sub
inc
or
ljmp
mov
cmp
mov
test
jle
gs
aaa
add
mov
cmp
sbb
inc
jmp
out
mov
fnstsw
daa
mov
das
in
xor
fwait
inc
loop
pop
add
add
add
and
in
jae
call
insb
dec
lahf
xor
imul
push
arpl
pushl
aam
cmc
cmp
lods
push
push
in
movsb
xchg
push
pop
aaa
fnstsw
out
cwtl
inc
xor
ljmp
jnp
sub
imul
pop
stc
sub
hlt
rcrb
cmpsl
stos
fidivrl
mov
xorb
neg
dec
xchg
or
mov
xchg
mov
jle
adc
and
imul
sti
inc
insb
or
push
push
fbld
jg
call
pavgb
mov
cmp
inc
adc
ss
push
mov
jmp
push
pop
outsb
fsubrl
aam
xor
in
mov
push
dec
jo
in
xlat
les
cltd
jmp
cmpsb
mov
push
or
mov
xor
sbb
cmp
cmpsb
mov
ret
pop
aaa
xor
push
pop
inc
sbb
lcall
jne
mov
ja
lds
push
subb
idiv
jg
in
test
cmp
mov
das
sbb
lcall
and
xchg
pop
pop
insb
das
push
add
dec
cmp
loop
cmp
xor
xchg
pop
mov
lret
ss
xor
incl
jecxz
subl
adc
and
xchg
lods
test
jmp
dec
stos
jge
test
fidivrs
ja
add
jo
nop
or
jp
pcmpgtd
jg
jg
mov
sbb
aas
mov
call
adc
adc
jge
lcall
nop
shl
ljmp
cmp
jmp
xor
jmp
adc
shll
daa
lock
das
mov
lret
and
jne
pop
xchg
inc
inc
aas
pop
xor
inc
lcall
cmp
inc
std
pop
jecxz
inc
sbb
je
xor
aaa
jg
decl
orl
addr16
movsl
subb
daa
out
in
add
mov
call
and
into
rorb
cld
lahf
repnz
mov
pop
xor
mov
decl
pop
pop
pushf
sub
cmp
mov
outsl
xor
jp
adc
inc
stc
pop
rclb
insb
shll
leave
cwtl
cmp
or
lea
add
mov
clc
inc
xor
inc
imul
xor
icebp
iret
mov
ljmp
daa
dec
push
aas
lock
in
sub
dec
and
clc
xor
lcall
fnstcw
pop
imul
sub
cmpl
xor
dec
push
jmp
pop
test
addb
decl
sbb
pop
jmp
dec
fisttpll
jp
jne
pop
mov
or
sub
decl
xchg
pop
das
sbb
les
cld
shlb
imul
roll
mov
lcall
push
adc
adc
dec
arpl
loop
push
mov
and
mov
call
lea
insb
aad
xchg
aam
cwtl
aaa
aaa
mov
fwait
movsb
in
push
xchg
push
adc
jmp
jnp
pop
ss
sbb
nop
subb
add
mov
int3
in
jmp
jp
mov
adc
adcb
call
mov
push
xchg
push
ds
shlb
sub
shll
lcall
in
pop
cmp
mov
ret
adc
push
mov
lret
mov
cmp
incl
sti
dec
lret
and
dec
inc
ljmp
lcall
loop
pop
dec
pop
cmp
data16
mov
fs
push
aaa
or
jmp
dec
xchg
scas
sarb
cmp
popf
bound
xor
mov
popf
int
subb
xor
mov
mov
push
loope
push
fs
cltd
pushl
cld
decl
mov
and
scas
xlat
jae
stc
xchg
dec
je
push
sub
cli
rorb
rorl
stos
and
test
in
mov
mov
pop
mul
pushf
call
test
pop
xor
arpl
ljmp
aam
call
mov
ror
ret
push
push
stos
add
dec
int3
loopne
push
aaa
daa
dec
pop
je
xchg
test
inc
xor
mov
xchg
dec
dec
mov
push
dec
adc
add
mov
push
and
into
lea
dec
cmp
mov
jbe
push
xchg
fistpl
cmp
lret
imul
jecxz
jno
xchg
enter
std
call
incl
xchg
into
inc
fsts
xchg
test
pop
pop
mov
inc
mov
jmp
popf
mov
dec
ret
xchg
outsb
add
inc
lret
push
and
pop
jae
mov
pop
popf
popa
int
bound
js
sbb
sub
xchg
add
jmp
cmp
inc
inc
stc
pop
ds
xchg
cmc
fcos
jmp
dec
push
xor
jp
jne
cli
mov
clc
aas
stos
std
push
and
mov
sub
fs
call
stos
sbb
pop
xor
fs
add
jp
push
aad
and
mov
enter
clc
jmp
sbb
enter
decl
inc
mov
loopne
mov
jo
inc
pop
dec
pop
xor
mov
cmpb
std
lcall
dec
or
and
xor
in
inc
pcmpgtb
fdivrl
ds
mov
stos
dec
aam
sbb
pop
insl
jae
addr16
pusha
cld
jmp
or
call
movsb
int3
sbb
clc
rorl
add
repnz
pop
jg
lret
outsl
xor
jecxz
in
lds
push
sahf
scas
sub
add
dec
push
cwtl
cwtl
lods
shlb
push
mov
movsb
es
lds
push
xor
out
in
test
mov
decl
int3
or
pop
aaa
push
or
adc
mov
jmp
dec
add
mov
xor
test
mov
mov
jmp
xorl
and
ljmp
lea
addr16
data16
dec
fmull
jp
cmp
cmp
mov
xchg
cmp
sahf
add
rcll
mov
test
push
std
cmp
das
jg
fs
jg
ljmp
and
clc
mov
ss
and
icebp
cmpsb
push
orb
add
scas
cltd
inc
push
loopne
aas
push
in
sub
inc
jle
in
lahf
dec
les
out
add
pushl
cld
lahf
inc
mov
rorl
push
cld
aaa
mov
sub
incl
insl
stos
cli
adcl
mov
xor
pushl
out
cmp
sub
shlb
mov
adc
jne
fxch
xor
out
pushf
push
sub
inc
mov
mov
pushl
fadds
xor
dec
loop
sub
cmp
adc
or
and
cmp
pop
lret
dec
and
filds
dec
enter
sub
cmpsl
xchg
dec
xchg
stos
inc
ret
cmp
rorb
in
sbb
scas
fwait
jo
push
lret
xor
aad
cmp
pop
push
add
add
shrb
clc
jae
pusha
es
outsb
and
lret
sar
repz
lods
in
lea
mov
pushl
test
lods
outsl
fcompl
int
xor
aam
mov
ret
dec
orl
mov
jbe
data16
fidivl
jne
shrb
outsb
lret
adc
mov
stos
incl
in
dec
lods
jl
inc
out
fimull
jb
jp
sti
scas
cli
mov
faddl
xchg
dec
xchg
inc
inc
mov
mov
cmp
sub
lods
daa
mov
je
lahf
stos
add
jge
pushl
xchg
mov
ret
push
mov
pop
shlb
dec
or
out
clc
and
inc
inc
testl
dec
xor
outsl
xor
pop
out
incl
in
pop
shlb
fildl
stos
stos
imul
out
sub
push
adc
adc
aaa
xchg
mov
ja
lcall
xchg
scas
shll
dec
pop
mov
push
es
lcall
pusha
sbb
sub
sub
iret
mov
enter
fistl
outsl
mov
mov
les
test
mov
push
call
jmp
cmp
and
jp
test
in
or
dec
adc
incl
mov
fmull
pop
adc
jns
xchg
shll
lock
or
test
pop
test
aas
mov
or
decl
in
lahf
ds
testl
inc
cmp
lret
lcall
jo
jnp
lret
or
sbb
mov
mov
clc
das
hlt
outsl
rclb
test
mov
pop
push
ret
push
and
std
mov
xchg
or
das
cmpsl
xchg
xor
jno
ljmp
lcall
cmp
add
jae
sbb
insb
lret
dec
mov
and
sub
andb
ret
dec
pop
xor
jnp
or
adc
inc
mov
inc
arpl
repnz
add
ljmp
dec
push
push
jmp
ss
adc
fdivs
decl
nop
cmp
mov
jp
dec
mov
cmp
imulb
pusha
pop
mov
jg
lods
push
test
ja
push
nop
cltd
dec
test
mov
popa
add
cwtl
ret
sbb
cmp
jge
repz
or
cltd
dec
add
mov
fimuls
mov
mov
or
mov
xor
mov
xchg
repz
ret
push
ja
call
clc
jge
xchg
mov
es
xor
mov
pushl
ret
fisubs
fiadds
mov
in
mov
mov
dec
imul
movsl
push
cs
mov
fcomip
add
push
cld
push
pop
mov
fdivl
in
inc
lods
jecxz
out
dec
out
lret
and
lcall
adc
sbb
and
lea
testl
mov
cs
fadds
clc
jl
addr16
fs
popf
clc
iret
jecxz
and
mov
mov
loop
and
mov
jnp
incl
mov
mov
dec
dec
sarl
cmp
mov
lock
in
mov
das
adc
ss
add
mov
mov
mov
dec
xchg
out
sub
jo
lret
in
dec
test
jl
aad
fisubrl
jl
aam
cltd
fmull
call
pop
pusha
xlat
sub
insb
ljmp
sub
push
adc
adc
mov
in
mov
fisttps
iret
fmuls
addr16
lods
mov
out
testl
jmp
ss
or
movsb
dec
mov
inc
es
xchg
jnp
dec
mov
std
std
xor
call
adc
cmpsl
jecxz
fisubrl
test
rcl
stos
les
fs
dec
sar
decl
insl
sbb
test
clc
dec
xor
call
or
psrlw
decb
jge
fisttps
jbe
cmp
rcll
ljmp
add
jmp
int3
and
dec
add
jecxz
jl
mov
repnz
out
jne
ss
cmpsl
gs
ljmp
andb
cmpsb
divl
bndstx
out
mov
push
adc
mov
sbb
jmp
ljmp
imul
ret
test
xchg
ds
push
adc
scas
insl
test
pop
movl
aaa
lock
mov
xchg
in
imul
in
sbb
cmp
sbb
add
push
sbb
in
inc
imul
dec
cld
and
ljmp
dec
sahf
addr16
cwtl
sbb
lret
gs
les
cmp
sub
adc
ljmp
mov
mov
fcompl
and
adc
cmp
inc
xchg
pop
jne
pop
sarl
cld
pop
pop
ja
fsub
mov
lret
ror
idiv
in
fwait
popa
ljmp
inc
add
aas
ljmp
mov
push
lods
outsb
sti
xchg
adc
cmp
cmpsl
mov
lea
inc
test
sbb
cwtl
xor
repnz
cli
jmp
imul
jns
inc
rdpmc
add
out
push
loope
fidivrl
aad
jo
popa
cwtl
sti
out
std
and
cli
pop
sbb
outsl
and
sahf
push
lds
jmp
dec
adc
push
pushf
or
mov
pop
dec
jns
adc
loop
adc
lahf
sbb
sbb
cmp
mov
and
inc
int3
xlat
dec
jl
cmp
in
rcrb
sbbb
or
rorl
repz
pop
js
cmc
pop
jmp
adc
icebp
fsubl
insl
and
xor
mov
jg
sti
pop
sub
add
and
lds
lods
and
decl
pop
xchg
std
pop
sub
cmp
orb
add
jne
or
inc
mov
pushl
ret
pop
cltd
popa
jbe
pop
push
xlat
insl
jmp
imul
mov
movsl
sub
cmp
xor
call
pop
mov
outsl
push
fwait
xchg
sub
add
push
pop
cmp
test
test
ljmp
idivb
jmp
add
sahf
enter
lock
sub
in
mov
decl
sub
pop
scas
into
pop
jg
inc
dec
das
faddp
fsubr
push
je
popf
xchg
jmp
push
lock
insb
insl
mov
and
repnz
sahf
pushf
ljmp
ljmp
sub
movb
mov
test
push
inc
out
pop
ja
call
mov
sub
or
xor
push
clc
inc
out
sahf
mov
test
mov
sub
inc
andb
loopne
daa
call
inc
dec
imul
lret
jg
mov
jo
punpckhwd
mov
dec
pop
ljmp
testb
jne
fdivl
insb
mov
add
nop
movsl
jno
insl
push
rclb
call
dec
push
xchg
shll
outsb
jmp
int
or
push
daa
pop
stos
orb
jmp
sub
jmp
and
jp
mov
les
mov
inc
mov
fldcw
decl
sub
xchg
inc
dec
nop
data16
pop
divl
mov
ss
and
mov
add
jmp
mov
sub
or
ljmp
lcall
fsubrp
in
xor
push
sub
incl
dec
in
mov
pushf
scas
aam
fimuls
lcall
xlat
jns
xchg
daa
mov
pushl
adc
xor
ds
loop
push
fnstcw
lock
push
add
pushl
mov
mov
cmc
sub
leave
cs
test
xlat
sahf
and
jg
rcll
mov
sbb
cld
jle
call
arpl
iret
cs
lcall
xor
inc
aaa
jg
cmp
mov
imul
dec
mov
fcomip
incl
outsl
sbb
lret
jecxz
mov
push
lcall
pop
insl
pop
ljmp
cli
and
or
jl
mov
pusha
negl
ret
cmp
lret
cwtl
add
add
push
xor
push
sbb
clc
mov
call
inc
out
nop
pop
in
pop
pusha
call
cmp
lcall
cmp
mov
addb
xor
or
filds
orb
and
shll
lods
incl
jb
mov
dec
add
inc
mov
arpl
mov
inc
je
cli
das
mov
push
mov
stc
xchg
fs
xor
pop
imul
gs
test
jg
mov
iret
pop
popa
mov
outsl
mov
insl
shrl
decl
stos
xor
sti
pusha
dec
enter
ljmp
test
push
inc
in
add
jge
sub
lods
xchg
mov
sub
lcall
arpl
pop
aaa
inc
test
ret
cld
mov
ljmp
adc
xchg
dec
or
add
pushl
xorl
ja
add
push
sub
sahf
ret
bound
incl
test
andl
aam
push
dec
cmp
xor
adc
add
dec
xchg
fcmove
clc
mov
andb
mov
movl
decl
mov
mov
cmpl
cld
mov
fbstp
decl
sub
push
mov
stos
xor
lret
fistpll
ljmp
je
jb
jns
sub
push
cmp
das
out
test
push
fsub
xchg
adc
aas
repz
lcall
mov
add
testl
stos
in
repz
xor
sbb
mov
cli
jmp
or
xchg
push
and
notl
dec
and
gs
outsl
pop
xchg
ljmp
fisubrs
mov
and
mov
pop
orl
mov
je
mov
jmp
xlat
rcr
cli
mov
popf
orl
inc
lcall
lcall
in
fs
lret
and
and
sub
add
dec
and
add
in
push
mov
push
fdivs
sbb
inc
lcall
data16
pushf
pusha
jae
push
dec
and
pusha
test
adc
jg
pop
adc
les
mov
jmp
push
repz
add
aad
imul
fwait
xor
push
insl
arpl
fimuls
mov
out
pop
decl
addr16
lret
add
push
scas
jnp
sub
cmp
cmp
cld
dec
aaa
jg
les
or
push
fwait
or
add
in
and
test
pusha
shrl
stos
sbb
jnp
addr16
lcall
fstpt
negb
enter
push
es
adc
lcall
stos
aaa
mov
mov
out
jmp
jecxz
nop
jl
cmp
add
aam
lods
enter
pushl
xchg
xor
cld
push
push
pushl
and
lcall
cwtl
dec
xchg
or
and
adc
nop
push
dec
fbstp
jno
ljmp
loope
fcoms
mov
movsb
fs
arpl
cli
in
ja
adc
mov
and
aam
rclb
jbe
jno
add
ljmp
sub
inc
scas
stos
push
dec
ljmp
pusha
movsb
test
dec
or
add
cmp
mov
jbe
sarl
jp
jmp
and
jns
jg
mov
aad
popa
pop
mov
inc
test
dec
add
lcall
fmul
inc
aam
aam
scas
daa
into
mov
cmp
loopw
mov
gs
scas
sbb
daa
incl
pop
sub
dec
fsubrs
push
sarb
xchg
mov
dec
popa
std
sahf
in
call
mov
andb
xor
test
notb
frstor
xlat
and
jmp
pushf
push
movsl
jmp
into
jne
jbe
not
je
cli
scas
fdivr
jg
loopne
mov
pop
xor
inc
divb
xor
mov
jg
sub
sub
jge
cld
std
outsl
loopne
cmp
sti
cmp
out
scas
cwtl
jl
push
shlb
inc
adc
xchg
out
push
out
incl
outsb
add
sbb
int3
pop
mov
mov
movsl
ljmp
pop
adc
jae
mov
adc
xor
jecxz
xor
inc
hlt
jg
jl
lahf
aaa
seta
fstps
call
push
sahf
lcall
xor
xor
mov
pop
pop
imul
leave
cmp
imul
inc
outsl
mov
sahf
stc
jae
mov
sub
cs
call
sub
popf
aam
scas
adc
mov
pop
pushf
hlt
icebp
ds
leave
adc
lahf
aam
jg
and
nop
cmp
add
push
clc
dec
or
mov
clc
pop
mov
lcall
mov
sbb
dec
push
outsb
movsb
je
jno
imul
sub
jne
add
lcall
in
das
pushl
sub
daa
fistps
rcll
fildll
es
stos
aad
cli
lock
dec
mov
or
test
fwait
std
cmpsl
sbb
xor
cltd
les
cmc
xchg
push
imul
jnp
lock
incl
test
cmp
cli
pop
push
pop
pop
or
mov
xchg
lock
mov
jg
imulb
in
aas
sti
xor
bound
or
ljmp
cli
mov
sub
lahf
adc
repz
or
ds
dec
jmp
aad
adc
lcall
adc
mov
stos
rclb
sbb
inc
adc
cs
jmp
pop
push
sub
inc
add
jmp
cmp
xchg
jo
sbb
inc
pop
fadds
jle
push
push
and
addr16
adc
incl
imul
leave
dec
test
mov
filds
sahf
test
ja
pop
test
jns
cmpsb
pop
pop
sbb
aas
stc
sub
dec
outsb
cmp
xchg
outsl
cmp
dec
xchg
das
xchg
lock
xor
mov
cld
fistps
push
mov
lcall
lahf
adc
in
xor
stc
jmp
mov
jp
lret
jg
hlt
jmp
es
jge
popa
adcb
outsl
in
push
pshufw
das
in
rcll
ret
mov
jb
in
notb
push
call
sahf
and
popf
xor
insl
ret
adc
jno
add
roll
pop
int3
cmp
std
mov
dec
idivb
cli
add
sub
add
clc
aas
cli
incl
icebp
test
xchg
popf
rorb
popa
rcrb
outsb
and
jg
push
dec
shll
pop
jg
loop
mov
es
int
hlt
jmp
cltd
mov
jg
sbb
inc
fstps
movsb
jge
adcl
jbe
or
ljmp
pop
jle
mov
jmp
add
test
cmpsl
dec
addr16
adcb
das
jl
in
add
pop
hlt
adc
mov
jg
call
sbb
test
or
pop
sti
mov
and
loop
imul
jmp
dec
fildl
sbb
mov
xchg
inc
mov
mov
std
fbstp
fidivrl
paddsb
negl
in
jg
loopne
loop
xor
inc
les
mov
in
mov
mov
lcall
movsb
add
inc
cmpb
jne
data16
pushf
inc
cmp
loop
adc
incl
pop
insb
or
jnp
adc
jbe
fucomi
sahf
enter
rcr
inc
daa
test
mov
push
jne
incl
call
fnstsw
cwtl
cmp
aaa
xor
rolb
xor
ja
sbb
sahf
inc
das
imul
push
test
ret
das
lret
out
inc
fwait
cmp
incl
das
add
loop
mov
dec
xor
enter
incl
das
pop
jbe
test
inc
loopne
ficoml
jmp
out
subl
or
and
ja
xor
ret
dec
mov
mov
cwtl
sahf
or
cmpsl
xor
cmc
pop
cs
dec
pop
sub
rsm
cmp
imul
nop
test
xchg
sub
pop
or
pop
adc
pop
arpl
mov
inc
xchg
ret
inc
inc
mov
mov
cwtl
xor
aas
or
sub
cmp
call
dec
out
xor
sub
jnp
shll
filds
test
add
pusha
aas
and
testb
xor
mov
sbb
and
sbb
sbbb
sub
inc
movsl
cwtl
jmp
std
xchg
insl
pminub
add
sub
call
mov
cmp
test
mov
inc
jo
fidivl
push
or
fninit
fmull
insl
fwait
sti
sbb
dec
lcall
fiaddl
in
daa
mov
dec
mov
inc
jg
adc
mov
fnsave
ljmp
adc
push
and
adcl
push
sbb
fcoms
inc
xchg
adcb
decl
cltd
clc
inc
lods
cmpsb
mov
jecxz
xor
mov
push
es
jmp
into
adc
dec
pop
test
adc
lods
or
pop
mov
push
call
push
mov
imul
add
and
out
jecxz
enter
lcall
jmp
or
jmp
sbb
add
cmc
push
fnstenv
cmc
push
leave
pop
bound
push
call
testb
repnz
lret
cmp
mov
jp
adc
rcrl
cli
arpl
lcall
jne
sti
neg
gs
add
sub
mov
jle
incl
adc
adc
cwtl
pop
cmp
adc
pop
fldenv
enter
mov
inc
adc
loopne
stos
lds
sub
jbe
xchg
cmp
pop
xor
fs
cmp
add
mov
decl
test
int3
call
inc
aaa
adc
adc
adc
incl
add
cmp
and
jo,pt
sti
jns
dec
fsubrp
mov
int3
jo
mov
jb
retw
jg
decl
hlt
test
xor
jmp
incl
xor
lret
cmpsb
mov
cmpsl
push
pop
aam
pushf
ss
lea
mov
fsubr
in
and
cmp
mov
out
icebp
int3
out
mov
push
shlb
aad
sbb
push
gs
data16
cs
xchg
psllq
call
cmp
cs
shrb
repz
pushl
ror
pop
and
testl
ret
scas
or
mov
shrb
lock
fsubrs
dec
shll
sahf
mov
sti
stos
adc
int
out
in
pop
dec
lahf
mov
out
roll
adc
loop
sbb
rolb
jecxz
push
pushf
add
ljmp
xchg
xchg
into
fs
movsl
jg
incl
push
cmc
mov
and
xorl
cmp
pusha
pop
sbb
jns
mov
rcl
repz
rclb
loope
fidivrl
rorb
push
aad
dec
lret
push
enter
inc
xor
fisttps
addr16
shr
decl
jmp
lret
push
hlt
mov
sbb
push
test
pop
or
pop
pop
je
jae
pushl
test
les
cs
pop
mov
pop
fldenv
mov
xchg
mov
decl
xchg
adc
cmp
xlat
mov
fldcw
inc
xor
in
inc
mov
cmp
ljmp
jmp
rclb
ja
sbb
sbb
push
popa
mov
mov
scas
pop
sbb
ljmp
xor
xchg
addb
sarb
in
add
ror
xchg
mov
mov
or
mov
cld
xlat
dec
int
mov
sbb
cltd
cli
in
and
incl
push
imul
repz
xlat
or
jmp
or
cs
lcall
xor
das
cwtl
xor
xlat
sub
loope
inc
fisubrl
test
pop
inc
mov
pop
jle
or
ret
pop
fldenv
in
push
mov
jecxz
mov
pusha
or
push
dec
add
shlb
add
or
test
lcall
fwait
inc
lcall
inc
mov
je
pop
and
and
dec
add
cmpsb
lcall
filds
sbb
repnz
test
push
cmpsb
loop
outsb
jne
jle
add
pop
icebp
adc
sub
jl
sarl
jbe
insb
adc
mov
push
sbb
addr16
in
jb
je
xchg
fmuls
hlt
aaa
daa
out
clc
ljmp
push
or
xchg
and
enter
imul
fwait
jle
rclb
cmpsb
fidivl
aad
mov
sbb
jle
xchg
xchg
sarl
push
mov
daa
mov
inc
data16
inc
sub
push
jo
inc
cmp
dec
mov
xorb
ljmp
into
or
insb
es
pusha
inc
sub
mov
push
sarb
ds
sbb
ljmp
decl
push
hlt
cld
ss
mov
fsts
rclb
or
outsl
mov
decl
dec
mov
xor
insl
adcl
bound
sbb
push
mov
add
scas
call
inc
mov
jne
rcrl
mov
pshufw
pushl
scas
fwait
pop
mov
mov
xchg
daa
xor
adc
push
repnz
call
push
orb
mov
or
fsts
mov
stos
loop
ret
out
test
sbb
fsts
insl
fninit
jmp
xchg
fsubl
xchg
mov
push
fstps
orl
jmp
or
mov
jae
sub
push
aad
bound
xchg
push
aad
xor
xchg
jns
nop
call
inc
movl
push
xchg
cmp
adcl
add
std
pushf
inc
test
cltd
jg
sbbb
pop
pushl
mov
or
loope
sbb
test
test
jne
lahf
adc
mov
lcall
out
jmp
inc
lret
mov
mov
into
dec
and
std
aam
cmc
rclb
shll
stc
or
xchg
adc
mov
outsb
push
daa
filds
add
sbb
and
lcall
sub
jbe
pop
push
outsb
dec
daa
jo
dec
adc
push
dec
cld
sahf
fdivr
call
decl
mov
jecxz
cltd
and
cli
adc
add
inc
sub
scas
pop
loopne
cld
mov
int
lea
sbb
fcomps
je
scas
cmp
bndldx
call
ljmp
add
lods
shrb
dec
loope,pt
or
xor
scas
out
clc
pushl
jno
ud2
xor
mov
inc
push
jp
sbb
and
mov
fnsave
ss
jp
pushl
aas
into
leave
mov
jno
lock
mov
jmp
pop
mov
movsl
push
test
push
adc
sbb
push
lods
hlt
mov
and
xchg
stos
xor
nop
cltd
pop
xor
dec
xor
ficoms
aaa
inc
dec
sti
jmp
add
fisubl
sbb
stc
lret
clc
lret
insb
push
adc
pushf
incl
scas
pushf
dec
shlb
out
sahf
add
mov
iret
shl
out
mov
sahf
icebp
incl
dec
in
jmp
aad
sbb
idivl
leave
popa
imul
add
jg
lcall
and
decb
sub
push
bound
pushw
psubq
dec
gs
sub
mov
and
rcrl
xlat
inc
jmp
jle
or
xor
jg
dec
pop
lock
push
test
fcoms
mov
subb
mov
jno
inc
stc
push
in
sub
popf
lds
jmp
lret
cmp
push
iret
scas
sahf
es
push
dec
je
repz
call
and
in
adc
scas
dec
popf
testb
mov
cmp
cmc
adc
dec
jp
call
mov
and
sub
mov
mov
stc
push
ljmp
and
sbb
pushl
out
pop
push
cmp
adc
dec
or
nop
hlt
pop
incl
fimull
test
jg
cmc
incl
xor
sbb
js
mov
ja
lods
lcall
xchg
push
or
pop
aad
and
mov
fwait
xchg
jl
push
mov
nop
push
enter
mov
idiv
cli
lea
and
pushl
arpl
push
lcall
fs
push
test
clc
movl
movsb
sbb
cld
pop
jbe
test
cltd
add
test
mov
lods
aad
pop
stc
sbb
imul
push
pop
or
test
icebp
lcall
xchg
and
pop
mov
pop
xchg
xlat
cmpsl
mov
incl
sahf
movsl
pusha
mov
jne
les
jb
ds
lret
dec
xor
sub
xor
incl
lcall
aaa
xor
dec
xchg
and
rorl
mov
jg
movsb
pop
xchg
jecxz
mov
sub
xchg
push
aaa
push
iret
and
or
fdivrl
mov
ljmp
xchg
pop
fldl
cmp
shlb
and
fs
int3
fisubrl
rorb
lods
call
or
xchg
cmp
hlt
cmp
cmpsl
iret
mov
dec
and
in
mov
ljmp
and
sub
into
dec
movlps
add
repnz
mov
sbb
mov
pushf
adc
out
adc
pop
test
iret
sub
repnz
pop
aad
add
ljmp
push
add
dec
iret
outsb
movsb
gs
int
sbb
dec
negb
lods
inc
adc
aaa
mov
arpl
cmp
add
jae
xor
fwait
mov
repz
xor
roll
std
out
aas
adc
mov
mov
daa
or
and
sar
fbld
sti
or
clc
or
out
push
std
cmp
mov
jmp
cmp
div
loope
sahf
cmpb
pushl
cmp
push
xchg
add
jmp
sub
inc
insb
scas
push
jecxz
scas
cmp
jbe
jmp
cmpsb
dec
repnz
inc
adc
xchg
stc
call
lahf
loopne
cltd
push
jne
lods
jge
outsl
jno
std
ljmp
sbb
gs
hlt
jmp
insb
push
mov
or
lcall
and
leave
push
adc
or
out
fsubs
js
aad
hlt
hlt
pop
hlt
call
fdivrp
mov
sbb
adc
mov
jnp
xchg
andb
pop
lods
int3
repnz
mov
das
fisttpl
cmp
cwtl
test
out
mov
pushl
sbb
pop
leave
mov
lahf
pop
and
movsb
nop
clc
inc
sub
imul
mov
fucomi
sub
decb
xchg
enter
inc
sti
push
cli
mov
inc
jnp
jne
mov
pop
mulb
inc
xor
or
in
ljmp
int3
dec
adc
imul
mov
add
leave
push
mov
movsb
sahf
push
loopne
fwait
cmp
decl
test
or
jl
int
xchg
dec
das
mov
sti
push
or
xchg
loop
add
mov
cs
stc
std
lock
jb
scas
inc
je
in
jle
and
jnp
xchg
jae
enter
jmp
aas
decl
dec
fisubs
loop
jne
dec
jne
in
test
inc
sbb
xchg
in
mov
cwtl
scas
cmp
sti
xor
into
mov
popl
cli
xchg
test
or
xorb
push
test
mov
mov
jp
rol
sub
push
jge
push
ds
adc
mov
js
call
push
jecxz
test
jno
loop
outsb
xchg
inc
sub
stc
adc
pop
pop
popf
adcb
dec
arpl
mov
mov
mov
lock
out
imul
les
sbb
push
je
and
rol
pusha
sti
lods
sbb
dec
jle
or
add
incl
aaa
add
xchg
test
sar
fcomip
repnz
xchg
mov
arpl
or
rcl
fistpl
mov
std
loop
push
sar
xchg
jmp
faddp
out
cmp
sub
sbb
push
scas
sub
and
xorb
xchg
ljmp
ror
dec
sub
sarb
mov
decl
lcall
cmpsb
mov
out
jmp
add
outsb
jns
jg
arpl
push
and
addb
decl
and
pusha
or
outsb
mov
cmp
sub
dec
mov
and
out
pop
pushf
add
out
clc
in
aam
mov
std
adc
dec
sbb
das
xchg
insb
into
fldt
add
jmp
jg
adc
inc
mov
cli
add
inc
or
xchg
or
xor
and
aas
clc
addr16
mov
movsl
incl
and
pop
sbb
push
test
lcall
ret
ljmp
jmp
dec
mov
js
ret
stos
mov
cmp
test
in
incl
ss
jge
movsb
ja
fldenv
jns
shll
xchg
jg
ret
dec
sub
cmp
ss
sub
bound
pusha
mov
cmp
cs
test
clc
dec
push
and
pop
inc
cmc
imul
add
aad
lock
xor
cmpb
adc
fdivp
scas
adc
rcl
adc
adc
decl
mov
inc
and
sub
push
cmp
xchg
push
jg
dec
ja
jp
pop
pop
mov
fsubrs
push
push
les
sub
add
pushl
outsb
mov
or
and
jge
out
xchg
ljmp
push
adc
jle
cmp
cltd
hlt
mov
jg
dec
mov
imul
push
or
pop
jg
es
mov
push
out
xchg
decl
pop
iret
dec
adc
sbb
pop
sbb
jmp
sub
rcrb
add
imul
fisubl
adc
sbb
adc
adc
lods
cmp
inc
addr16
push
xor
incl
sbb
inc
scas
lret
and
pop
and
jns
sub
jmp
lahf
mov
jecxz
cltd
aas
lret
popf
mov
sbb
jbe
push
sub
add
pushl
xor
adc
pop
fisttpl
nop
sbb
loopne
movsl
push
push
jle
lcall
jo
add
lds
or
xor
dec
add
cmpsb
xor
adc
loope
pushl
push
lcall
xchg
cmp
mov
push
scas
sbb
ret
jmp
js
cld
mov
mov
cmp
inc
adc
or
dec
stos
pop
cmc
out
popa
push
call
stos
je
jecxz
shll
pop
ja
imul
ds
xchg
mov
and
icebp
pop
or
mov
decl
movsl
test
jb
icebp
rorl
mov
decl
pminub
cmc
mov
push
outsb
push
das
fxch
mov
sub
icebp
inc
dec
dec
mov
or
and
repz
into
outsb
test
and
out
clc
push
mov
adc
mov
jo
push
stc
sahf
rcrb
out
jb
inc
xor
insl
pop
xchg
lds
js
or
push
lods
mov
jb
pop
imul
lock
hlt
call
xor
mulb
mov
jle
stos
mov
or
dec
push
push
sub
adc
mov
jmp
repz
fldenv
cltd
push
leave
pop
popa
lahf
cmp
call
repz
jge
test
data16
orl
cmp
inc
add
cmp
repnz
lahf
mov
int3
int
sbb
mov
adc
jae
mov
nop
iret
or
cmp
or
ljmp
inc
add
lds
cli
push
pop
repz
sbb
inc
int
shll
dec
in
mov
add
pushl
adc
subl
in
jp
outsl
daa
push
lahf
mov
mov
push
add
mov
add
fsts
cltd
sub
pop
insb
clc
mov
roll
rolb
loope
outsb
aam
jmp
fstpt
lcall
ljmp
mov
sti
mov
jl
pop
andl
mov
jmp
lock
jg
cmpb
cmc
incl
sub
loope
jne
xchg
cmp
lods
sti
popa
jae
jo
mov
call
push
clc
cmp
insb
aaa
cmpsl
repz
mov
xchg
mov
mov
adc
outsl
decl
mov
pusha
push
adc
rcrl
pop
pop
stc
lcall
mov
cmp
push
sbb
gs
inc
je
push
jne
sub
mov
or
push
add
pushl
add
ja
fidivrs
pop
adc
das
cltd
lahf
jo
jle
shlb
mov
mov
repz
in
pop
cmc
pushl
shrl
data16
mov
mov
test
mov
dec
sub
scas
sti
or
mov
mov
jae
mov
dec
ficoml
andl
outsl
in
fcomp
mov
sar
jp
out
xchg
inc
gs
inc
enter
pushl
sbb
mov
into
fldz
jp
js
mov
adc
stos
lcall
mov
hlt
xor
mov
jecxz
outsb
stos
fsubl
jge
pop
jg
or
in
mov
fcoms
cs
mov
clc
mov
clc
pop
lcall
negb
cmpsb
dec
stos
dec
sub
pop
mov
jnp
xchg
mov
enter
xchg
cli
rclb
fbstp
ljmp
clc
push
dec
pop
clc
test
jle
jl
fs
xchg
mov
jbe
xchg
add
mov
sbb
add
xor
iret
jno
call
fiaddl
jmp
cmp
fwait
pop
mov
pop
add
jp
pop
lods
sub
cli
jo
int3
cltd
out
ljmp
inc
aad
and
add
outsl
es
adc
adc
xchg
inc
call
adc
lcall
aaa
data16
lds
jp
repnz
push
out
jge
pushl
push
cwtl
dec
movsb
pop
cli
mulb
ss
movsl
arpl
lods
flds
imul
pop
cld
in
pop
mov
pop
lret
xchg
gs
scas
xor
sahf
xor
sub
outsl
clc
jg
subl
add
les
insb
ds
in
loop
scas
in
mov
jmp
fwait
push
or
sbb
xchg
sub
adc
pop
ljmp
pop
pop
cli
mov
push
hlt
addr16
arpl
adcb
call
ljmp
adc
ss
push
inc
or
mulb
add
jmp
jo
jg
mov
pop
jmp
xchg
imul
jo
xor
pushf
nop
aad
and
lock
dec
popf
popf
jo
push
and
or
test
adc
mov
fbld
leave
test
lods
jne
jl
fwait
mov
je
mov
xor
addr16
decl
sub
je
adc
and
xchg
fistpl
mov
adc
push
mov
and
xor
ljmp
repnz
push
cs
sub
cmp
shlb
pop
int
aas
popf
adc
jle
insl
jecxz
push
popa
inc
repnz
insl
js
sub
popf
add
fwait
add
shr
out
daa
and
push
enter
incl
sub
aad
xchg
push
mov
imul
and
mov
cmp
incl
mov
sbb
push
pop
loope
dec
imul
adc
jmp
ljmp
xchg
stc
xor
pop
in
cltd
push
loopne
jmp
mov
ljmp
ja
loope
jns
xor
jle
mov
pop
xchg
ljmp
xor
inc
sub
inc
insb
das
out
sbb
push
mov
aad
inc
orl
pop
pop
pop
fiaddl
xor
dec
dec
cmp
inc
sub
sbb
xor
hlt
pushl
jge
hlt
lret
adc
mov
jecxz
add
iret
xchg
idiv
stc
sub
or
loope
pusha
pushf
cmpsl
lods
mov
cmc
fldl
lods
fucomi
sub
push
mov
hlt
pop
jmp
jne
sarb
gs
pop
aas
adc
jg
jns
jge
dec
fistpl
lret
xor
dec
test
int
shrb
ljmp
stos
sub
lds
jno
fisubrs
xor
in
adc
imul
aam
inc
sbbl
or
rorb
ret
add
xor
mov
adc
call
int
cli
fildl
in
jg
les
mov
insl
sbb
cmc
jne
bound
sub
and
xor
fimull
mov
cmpsl
add
sarl
fldenv
jmp
dec
fs
inc
shll
jno
fiaddl
push
adc
and
sub
cmp
mov
cmp
ss
aaa
mov
mov
xchg
outsl
mov
mov
pop
decl
mov
push
mov
out
scas
or
inc
jae
lods
into
mov
test
call
sbb
and
repz
repz
sub
andb
stos
add
jg
cmp
repz
push
or
loopne
mov
push
cld
call
and
inc
push
or
cmc
ret
add
and
ljmp
mov
jp
pop
sub
or
cmc
mov
xorb
cwtl
mov
or
shll
fildll
inc
stos
add
jns
std
pushl
dec
or
mov
nop
mov
cmp
sbb
loop
loope
push
incl
cld
flds
jp
sbb
dec
sub
into
mov
sub
or
xor
xchg
iret
mov
cmpsl
rolb
stos
test
scas
xchg
xchg
enter
sbbb
lcall
sbb
mov
mov
aam
rorb
pop
mov
fdivr
jno
mov
test
repnz
cmp
mov
lret
out
outsl
stos
sub
std
ljmp
out
push
leave
mov
jae
in
test
sbb
aam
cli
call
lcall
clc
leave
test
mov
iret
ret
xor
inc
pop
aaa
jnp
mov
inc
jp
or
dec
sti
aaa
std
pop
repnz
mov
gs
cmc
shlb
stos
incl
add
fs
adc
jg
or
clc
sub
aaa
shll
inc
inc
fs
pushl
pop
push
sahf
xchg
idiv
pop
inc
into
dec
xor
jb
add
mov
or
sbb
jp
add
cmpsl
jo
push
scas
lods
aas
cmc
jo
sarb
dec
cmp
mov
jg
adc
adc
inc
movsl
cmp
jge
dec
dec
adc
cs
mov
in
sub
aam
cld
inc
stc
out
in
mov
ret
in
ret
pop
mov
lahf
aad
or
lcall
pop
push
add
inc
outsb
repnz
lds
js
js
call
and
cmp
and
call
imulb
cmp
dec
add
adc
or
push
iret
in
call
mov
sbbb
dec
lods
out
stc
add
imul
pop
insl
fwait
sbb
mov
lcall
sahf
stc
sti
int3
adc
lock
jmp
lret
fldt
loope
orb
mov
out
mov
sub
cmp
and
bound
hlt
aam
ret
dec
inc
call
lock
jno
push
cmpsb
add
idivl
cmp
add
sbbb
mov
inc
cmc
and
push
out
mov
ljmp
mov
lock
test
cwtl
push
mov
sub
or
inc
cltd
outsl
mov
add
and
mov
mov
xchg
test
lcall
mov
sub
cs
sahf
enter
loope
jg
vmread
fisubrl
jns
mov
lret
push
je
enter
in
enter
cmp
xchg
push
mov
ficomps
incl
std
jns
ret
inc
jns
lods
pop
pop
pop
push
and
cli
push
sti
pop
push
jmp
xor
in
mov
or
sub
jnp
repnz
movl
xchg
pop
test
xor
jb
stc
jmp
lret
daa
out
sar
mov
ljmp
sub
or
cltd
loopne
cmp
add
pop
mov
ljmp
das
mov
je
push
addl
dec
test
sbb
enter
loop,pt
sahf
scas
cmpl
pop
clc
lcall
jnp
clc
scas
jae
adc
pop
push
push
and
in
ljmp
decb
pcmpgtd
int
jne
dec
les
mov
imul
sbbb
sub
mov
inc
mov
int
mov
and
aas
arpl
cmp
cmpsb
sbb
pushl
std
pop
sub
inc
cmp
dec
popa
jbe
nop
fistpll
fsts
jmp
js
dec
mov
repz
mov
dec
xchg
dec
ret
push
cltd
mov
das
sub
fildll
mov
mov
aad
pop
ja
pop
subb
loope
pushl
push
push
lock
cmp
xchg
pop
xchg
xchg
bound
xchg
dec
pop
and
inc
push
xchg
push
cld
dec
xchg
mov
sbb
dec
jns
pop
imul
jge
mov
incl
add
lahf
sub
xchg
cmp
fucom
and
popf
pop
jp
fsubrs
test
xor
push
sbb
jne
rcl
cltd
fstpt
loop
loop
push
mov
sbb
stos
out
je
int3
popa
test
cmp
jmp
pop
add
mov
jnp
arpl
shlb
loopne
jns
xchg
lock
or
sbb
ret
adc
inc
loopne
pushf
stos
leave
ret
insb
jge
mov
mov
dec
scas
movsb
mov
stc
jbe
movsl
shll
inc
mov
int
mov
popf
xchg
inc
movsl
sub
sbb
dec
xor
sahf
and
cwtl
jnp
xor
jl,pt
mov
or
lcall
add
fs
cmp
int3
scas
bound
mov
cmc
ljmp
sbb
arpl
movd
gs
jmp
inc
ds
add
sub
jg
adc
gs
leave
cmp
and
nop
push
sbb
xor
mov
test
fidivrs
nop
xchg
mov
cmp
outsl
cmp
daa
inc
or
loop
or
sbb
pop
xchg
leave
int3
pop
into
lock
jmp
jmp
and
push
sub
or
jno
call
and
stos
mov
mov
jne
mov
pushl
lea
hlt
cld
lahf
ficoms
inc
mov
daa
xchg
mov
dec
clc
mov
adc
popa
mov
out
icebp
out
pop
fadd
push
mov
sub
push
cmpsl
pop
je
jmp
dec
mov
mov
cld
push
or
xchg
out
fsubp
mov
cwtl
aas
xor
dec
add
lcall
jmp
sbb
dec
cmpsl
jno
mov
xchg
mov
xor
adc
add
pop
fmul
add
xorb
mov
ret
mov
or
add
mov
xor
js
stc
pop
or
inc
add
cmpsb
mov
xchg
and
testl
xchg
mov
jb
call
loop
pop
add
scas
xchg
add
lret
xchg
jge
mov
cmc
insl
push
lock
aaa
cld
ds
repnz
push
scas
mov
call
inc
add
or
rolb
dec
loope
js
icebp
cltd
inc
jns
adc
loopne
xor
in
enter
inc
dec
std
jp
shlb
pop
leave
clc
enter
or
hlt
jg
push
movl
or
arpl
js
jg
mov
cwtl
aaa
inc
push
xor
or
jmp
dec
incl
dec
insl
cwtl
xor
aam
fwait
xor
mov
lret
and
cmp
outsb
pop
out
out
mov
dec
loop
dec
pop
loopne
push
dec
fwait
sahf
dec
fimull
or
jmp
lods
out
outsl
out
push
je
mov
in
jb
arpl
mov
and
clc
lcall
in
xor
inc
in
lea
pop
ret
mov
pusha
pop
and
push
cmp
ss
into
jg
jmp
xor
jge
rcrl
lahf
and
insl
mov
jle
ds
push
les
push
adc
xchg
push
jg
js
scas
mov
dec
or
call
mov
call
push
sbb
jp
cmpsb
sarl
pop
sub
jmp
cmp
pusha
lcall
mov
jns
mov
sub
lcall
stos
loop
fisttpll
push
cltd
mov
movsl
orl
xchg
enter
jae
pushl
jl
mov
and
gs
aaa
icebp
dec
and
repnz
rcrb
pusha
cmp
jb
ja
sarl
pushf
subb
jg
inc
ljmp
mov
or
adc
ds
sbb
pushl
scas
cmp
cmp
jmp
inc
pusha
popf
fcomps
je
cmp
push
loopne
push
mov
lret
insb
jno
mov
inc
js
nop
ljmp
push
dec
es
sbb
push
cmpsl
adc
arpl
lock
mov
bound
fidivrl
inc
int3
test
and
mov
call
push
and
adc
dec
pusha
leave
pop
jge
cmpsl
and
mov
clc
jl
cmc
xchg
pop
or
incl
es
shlb
or
mov
mov
and
addr16
pop
aam
jg
fcmovbe
inc
cmpsl
sarb
movsb
lea
fisubrs
insb
push
push
pushf
pop
rolb
add
sub
hlt
or
arpl
push
add
push
inc
dec
js
jge
mov
movsb
lods
and
mov
stos
xchg
cmpsl
repnz
jg
jp
ret
cmpsl
not
rclb
lds
sarb
pop
mov
setne
or
clc
sbb
pusha
lcall
ljmp
and
adc
sbb
pushf
std
sar
leave
insb
ljmp
sbb
lcall
outsl
movsl
shll
popa
fcom
mov
decb
adc
imul
mov
sti
insb
mov
mov
insl
jno
mov
dec
scas
jecxz
xchg
popa
lcall
cmc
or
lock
stc
repz
call
decl
xchg
mov
mov
stos
add
aaa
divb
clc
jmp
mov
fs
mov
int
cwtl
lods
jge
dec
out
push
jg
das
push
or
mov
lea
cld
outsb
sub
dec
inc
mov
inc
xor
ret
jge
int3
cmp
xchg
cmp
out
imul
fwait
push
xor
mov
out
xchg
andb
stos
cmc
jge
sbb
jnp
mov
bound
jle
push
xchg
xchg
call
pop
pusha
fisttps
cmp
shlb
arpl
xchg
mov
sbb
xor
sub
lcall
push
leave
mov
scas
fbld
fldt
sahf
jmp
test
push
lock
scas
je
sar
sub
xor
aam
sbb
ljmp
lcall
and
and
mov
loopne
jo
and
fnstenv
sub
jge
mov
dec
and
mov
mov
inc
jp
lods
jmp
pop
mov
outsl
or
sub
popa
or
adcb
pop
pop
test
out
or
cmp
jle
jo
lods
into
testb
jle
pop
mov
in
outsl
sbb
dec
mov
xlat
dec
mov
xchg
das
mov
xchg
out
rclb
in
outsl
or
sub
in
jg
enter
inc
push
inc
test
nop
ja
mov
fnstenv
es
adc
mov
insl
hlt
push
mov
mov
enter
ljmp
xor
rcrl
push
and
std
push
mov
jp
out
test
pushf
sarl
je
lcall
mov
mov
adc
ss
ja
mov
cs
mov
test
inc
mov
add
fisttps
mov
call
loop
push
subb
jmp
sahf
mov
jne
sub
pop
hlt
stc
jnp
imul
xchg
data16
ja
mov
push
insb
inc
enter
arpl
arpl
std
lcall
adc
mov
add
sbb
sub
fisubs
popf
loopne
mov
clc
sbbl
into
shrb
mov
mov
push
xchg
jno
mov
incl
gs
outsb
jae
lcall
inc
mov
jp
pop
testl
arpl
in
adc
je
push
dec
xchg
idivb
jmp
xchg
aaa
sub
sub
adc
adc
mov
add
mov
movsb
insl
push
ret
xchg
add
lcall
push
jo
dec
stos
pusha
push
out
cmc
dec
js
pop
push
push
mov
xlat
xchg
mov
pop
add
mov
sbb
inc
leave
adc
pop
std
jmp
sub
lock
in
jno
pop
xchg
lock
mov
sahf
pop
cmp
pop
mov
dec
mov
fcoms
decl
test
adc
rolb
jmp
mov
les
cltd
test
xlat
pushl
pop
mov
xchg
ds
fbld
cmp
adcl
aaa
cld
incl
nop
int
add
loop
inc
daa
outsl
or
decb
je
data16
jbe
out
je
addr16
pop
inc
add
jnp
fildll
push
sbb
adc
fnstenv
mov
enter
cmpsb
xor
lcall
cld
and
or
push
icebp
dec
mov
cld
incl
fucom
dec
xor
jb
sbb
lods
out
jne
inc
push
xor
adc
stos
outsl
xchg
jnp
decl
out
cmp
or
jb
or
sarb
stos
inc
mov
ud0
dec
jne
cmp
test
cltd
push
pop
mov
lcall
shr
lea
push
push
rclb
pushl
and
loop
mov
or
inc
inc
dec
xor
mov
jno
bound
daa
sbb
imul
pop
sbb
dec
xchg
nop
pop
imul
mov
call
cmp
fsts
outsb
arpl
cmp
addr16
xchg
vsubps
fisubl
mov
incl
lods
std
lret
addr16
xorl
in
inc
sbb
add
jo
mov
decl
jge
push
push
xor
aas
mov
aas
adcb
xchg
lds
or
add
fbstp
and
bound
out
inc
jne
fimuls
xchg
mov
jbe
pop
pop
jbe
and
adc
jbe
inc
inc
add
scas
push
mov
adc
gs
pop
es
pop
jne
push
sbb
jp
lcall
mov
dec
pop
std
cwtl
dec
rcrb
cmp
and
aas
and
ficoml
std
fwait
sub
test
pop
adc
cli
xchg
pop
stos
push
dec
cwtl
cmc
call
enter
addl
movsb
and
arpl
mov
data16
fists
sahf
cmpsb
adc
and
sbb
or
out
mov
sahf
inc
sbb
or
shlb
sub
pop
ud0
mov
jmp
scas
adcb
insb
push
dec
push
xchg
fimull
test
adc
mov
xor
stos
xlat
call
cmp
sub
iret
test
ficomps
mov
jne
js
call
mov
pop
adc
mov
and
sti
sub
xchg
or
push
nop
daa
stos
pop
ljmp
or
loop
lret
add
pushf
es
jne
rcl
cli
das
or
and
incl
and
jmp
add
pop
adc
pushl
push
mov
mov
lahf
loopne
push
ja
dec
pop
push
xchg
dec
push
stos
sbb
adcl
pop
push
ljmp
push
xor
push
call
add
adc
inc
jae
or
dec
ja
bound
mov
cli
or
xor
data16
ret
dec
sbb
decl
fnsave
rolb
jnp
cwtl
fiaddl
sbb
add
jmp
xlat
cmovbe
jmp
sbb
inc
fstpl
arpl
inc
popf
pop
repnz
call
cltd
mov
decl
mov
fsubrl
and
push
dec
or
mov
loopne
adc
test
mov
shll
pop
pop
ror
or
push
cmc
xor
xor
add
call
ret
mov
adc
ficoms
pop
xchg
xor
xorb
jg
sub
data16
jg
pop
faddl
les
mov
icebp
jmp
popf
inc
inc
push
fisubl
lock
fucomi
sarb
pop
jge
rcr
clc
lret
inc
jo
jns
jmp
add
hlt
les
mov
negb
out
cmc
push
add
into
mov
stc
shlb
sbb
call
sub
sti
inc
imul
fisubs
mov
fiadds
hlt
xlat
push
das
mov
mov
xchg
ljmp
sbb
sbb
fcmovnb
mov
mov
imull
xchg
push
sbb
outsb
mov
movsb
pop
repz
mov
inc
adc
cmpsl
inc
aad
mov
jecxz
adc
mov
jo
dec
cmc
cwtl
adc
dec
xchg
jp
mov
push
hlt
inc
jo
push
dec
add
xor
test
in
pop
rclb
insb
loopne
lret
stc
sar
orl
lods
jg
incl
xlat
aaa
pop
das
xor
outsl
and
imul
xchg
cli
inc
dec
xor
ldmxcsr
and
inc
les
mov
les
inc
sub
int
in
cwtl
outsb
mov
pop
jmp
cmpsl
inc
adc
lcall
out
fwait
insl
xor
push
andb
cmp
sbbb
filds
rcll
das
sbb
bound
xchg
scas
dec
bound
add
pop
stc
fwait
test
cmp
fucomip
push
mov
inc
ljmp
inc
adc
sbbb
cmp
fbstp
mov
bound
xchg
iret
jl
mov
or
shll
inc
lcall
insl
add
mov
jecxz
inc
lahf
rol
jae
mov
jecxz
nop
movb
stc
in
lcall
push
call
rorb
daa
push
test
in
push
fmull
nop
lock
call
cmc
sbb
ss
sub
add
sub
xchg
cmc
jo
adc
and
cmp
fucomip
loop
cmp
push
cmp
or
add
ljmp
and
sub
test
aaa
inc
bound
inc
pop
cltd
fs
call
stc
sbb
lds
cltd
movb
mov
addb
mov
ljmp
mov
mov
sub
pop
inc
mov
jmp
xchg
jl
jno
push
push
ja
pop
arpl
or
add
jmp
mov
add
test
pop
fidivrs
scas
push
mov
xor
les
inc
sub
call
jp
sbb
pushl
sub
mov
cmp
fnsave
fucom
in
ss
push
mov
mov
jmp
pop
loop
dec
xchg
cltd
push
pop
mov
sahf
adc
insl
inc
inc
enter
jns
arpl
or
sub
aam
stos
push
pop
xlat
jecxz
scas
cwtl
mov
mov
int3
js
push
call
add
cmp
pop
lock
jo
das
decl
mov
lcall
push
pop
mov
inc
cwtl
out
dec
aam
lret
mov
pop
dec
push
inc
or
inc
mov
mov
cmpsb
dec
dec
push
xor
xor
mov
inc
sbb
es
adc
decl
je
add
repnz
outsb
push
movsb
mov
xchg
push
lods
or
cmp
mov
lcall
and
into
adc
mov
sbb
call
in
aam
mov
inc
ficoml
sti
jmp
xor
cmp
loope
xor
in
push
pop
sub
aad
mov
cltd
sbb
sub
adc
jno
pop
pop
hlt
mov
jg
and
push
arpl
inc
mov
ljmp
stos
std
movsb
mov
sarb
add
add
mov
inc
lcall
cmp
pop
ljmp
cmpb
ja
andl
in
call
cld
and
push
std
ljmp
push
mov
sbb
push
inc
daa
sar
incl
dec
inc
dec
xor
mov
jle
lock
xchg
je
mov
ljmp
add
daa
inc
mov
lods
cld
dec
fcompl
jle
negb
rcrl
hlt
cmp
in
lcall
enter
scas
adc
xchg
push
mov
loop
lods
push
outsl
mov
sbb
inc
pop
cmp
mov
push
dec
sub
or
push
decl
test
push
movsb
mov
mov
pushf
add
fistpl
mov
aam
mov
xlat
lcall
movsb
pop
jnp
das
movsb
mov
adc
stc
jo
push
push
std
cmp
sbb
mov
pop
push
pushl
sub
ret
dec
jge
pop
aaa
ja
lret
lea
pop
rcll
idiv
lahf
int3
xor
leave
out
in
fistpll
jmp
jl
ljmp
aas
xor
into
adc
add
test
pushl
sbb
cmp
pop
jne
nop
jmp
leave
mov
inc
stos
and
pop
cmpsl
out
fcomip
bnd
orl
sub
cmpsl
xchg
add
shrb
cs
cmpsb
fs
jae
sar
mov
sbb
hlt
add
gs
mov
mov
lahf
call
test
popf
stos
mov
rorl
pop
mov
cld
pushf
push
and
into
daa
jl
in
dec
loopne
insb
in
iret
sub
mov
and
add
fdivrl
mov
jns
inc
mov
filds
and
fs
cltd
dec
roll
inc
lahf
arpl
into
cli
sbb
sub
jno
out
pushl
push
loop
in
cmp
inc
cli
xorb
sub
imul
cmp
cld
call
or
out
dec
cs
and
mov
pushl
nop
jo
gs
pop
push
les
cltd
add
or
out
aam
test
outsb
jg
xchg
data16
pushl
cmc
ficoms
dec
push
rcl
add
aaa
hlt
jno
repz
cmp
cmpsl
gs
inc
mov
incl
lods
fistpll
pushf
xor
lcall
dec
dec
add
mov
jp
test
cmp
mov
cmpsl
mov
outsl
movsb
idivl
pop
ret
jecxz
stos
enter
sbb
iret
pushf
mov
ljmp
push
loopne
dec
and
and
into
test
loop
or
and
popf
mov
es
and
mov
test
mov
outsb
pop
or
push
shrb
jo
lea
mov
rorb
lret
adc
out
rcl
and
fwait
shl
xchg
test
or
lahf
lcall
lcall
call
lods
fs
lret
jmp
jp
xchg
pop
xchg
fwait
pop
inc
stc
lcall
dec
cs
jle
mov
adc
das
rclb
ret
adc
into
pop
pusha
push
jae
in
xchg
icebp
call
cmc
adc
mov
lgs
inc
and
and
add
push
jl
clc
shll
jg
xor
aaa
or
xor
push
adc
dec
push
incl
call
xlat
pop
je
cmpsb
mov
jl
mov
repnz
pushl
std
les
call
inc
adc
enter
adc
mov
incl
mov
das
pop
lock
aaa
and
and
and
sub
incl
iret
ss
mov
push
jp
pop
fldlg2
xor
int3
and
test
test
out
push
xchg
mov
movsb
pushl
scas
mov
mov
testl
std
decl
mov
xor
sub
negl
xchg
lahf
stos
pop
and
mov
mov
ret
or
xchg
dec
inc
xchg
push
xchg
mov
out
push
inc
into
cmp
or
daa
lret
jmp
call
mov
sub
movsb
push
mov
push
aad
or
dec
pop
sbb
jmp
scas
je
adc
push
lea
xchg
xchg
test
pushl
mov
test
fnstcw
cs
ja
mov
mov
pushl
mov
fdivr
jmp
cmp
lods
jmp
imull
test
and
int
jg
arpl
aaa
dec
jns
xorl
adc
dec
jne
dec
cmc
adc
inc
loopne
and
fs
push
add
sbbl
xor
push
and
inc
pop
out
adc
add
ret
xchg
adc
inc
sub
mov
ljmp
mov
mov
mov
or
repnz
imul
pop
ret
or
incb
insl
cmp
in
out
mov
xor
arpl
jo
out
xchg
adc
push
inc
push
fwait
loope
dec
int3
cmp
aad
ljmp
xchg
push
pop
mov
or
push
pop
xor
push
sub
inc
adc
cmpsb
call
sbb
push
mov
and
xor
jmp
inc
pushl
loopne
repz
pop
insb
sarl
mov
test
test
jle
jp
das
cli
mov
je
rcrb
arpl
mov
cltd
inc
push
es
scas
jl
add
repnz
xchg
cli
jns
scas
ljmp
mov
adc
pop
aad
ret
outsl
sub
lds
jl
xor
pop
mov
ljmp
inc
dec
ds
aam
or
mov
or
add
jb
sbb
enter
aaa
adc
mov
pop
enter
mov
mov
insb
sar
ljmp
cmpsl
sbb
mov
addr16
cmpsl
dec
xchg
xor
pcmpeqd
ja
jg
jae
cmp
subb
enter
jno
std
insl
dec
aaa
sub
pop
lods
pop
scas
jnp
jecxz
jmp
cmp
test
ret
or
imul
jae
call
mov
or
imul
gs
add
negb
incb
iret
pushl
mov
sub
push
aad
mov
fs
push
sbb
and
mov
jne
and
sbb
imul
flds
add
lods
and
xchg
dec
jmp
adc
xor
mov
push
or
hlt
xor
dec
icebp
outsb
aam
leave
loopne
mov
inc
mov
mov
fnstenv
loop
jo
dec
lcall
lahf
movsb
js
inc
jg
cmp
jecxz
jbe
cltd
cmp
push
test
jne
jmp
cmpsb
or
xor
cmpsl
sarb
jg
test
pop
test
mov
mov
cmc
in
pop
mov
test
call
cmp
addl
push
inc
test
lods
mov
push
mov
rcr
in
xchg
pop
xchg
or
int3
mov
loope
jbe
inc
pop
clc
mov
out
out
mov
negl
and
mov
enter
orb
jge
fldl
movb
mov
outsb
orl
ljmp
cmp
mov
lock
or
pop
push
out
xchg
cs
cmp
int
ljmp
pushl
mov
jmp
fstpt
pop
push
cmp
call
cltd
idivl
int3
lret
add
and
fldl
rcl
in
jmp
add
pushl
cld
xchg
lret
mov
add
xchg
test
dec
mov
jg
lcall
nop
cmp
cli
xor
or
cmp
dec
fdivs
int
ljmp
jns
mov
jg
jecxz
lods
lea
adc
mov
and
mov
dec
jnp
shrl
push
jns
xlat
in
stos
in
push
fsts
ljmp
in
and
nop
testb
ficompl
addr16
cwtl
ljmp
out
mov
mov
insb
daa
in
lret
push
push
jge
add
xor
aas
stos
cli
ljmp
cli
jbe
pop
lcall
cli
push
sti
or
pop
xchg
inc
xchg
ljmp
lret
lcall
pushf
or
mov
pop
stos
add
psubq
push
jg
inc
enter
xchg
mov
sbb
test
xor
decl
clc
mov
mov
inc
adc
sahf
hlt
shr
mov
mov
inc
scas
mov
loop
cmp
sahf
enter
jmp
movsb
addr16
or
fdivrl
inc
je
add
xchg
lock
shl
int3
mov
mov
mov
sbb
stc
repz
inc
ljmp
pusha
or
jmp
hlt
sbb
push
pop
outsb
mov
inc
push
lods
mov
mov
push
mov
test
dec
rolb
ret
cmp
pop
mov
lcall
xchg
add
xor
cmp
movsl
mov
fwait
incl
mov
push
aam
xchg
scas
shlb
shlb
push
stos
out
leave
or
inc
sub
in
mov
call
jg
xor
orb
push
sbb
jmp
cmpsb
and
and
and
les
adc
mov
scas
mov
inc
xor
sbb
mov
sub
negl
xchg
je
xor
pop
sub
sub
inc
sar
ljmp
test
in
add
mov
xchg
push
stos
inc
cmc
mov
daa
fildll
gs
out
xchg
repz
sub
decl
add
or
jl
ja
leave
and
xor
mov
mov
jno
inc
xchg
mov
lcall
sub
push
daa
mov
or
xor
iret
loop
inc
mov
cmp
cmp
popa
pop
and
pushl
aas
mov
aas
mov
push
mov
adcl
jmp
adc
adc
bound
lahf
incl
add
cmp
and
cmpsb
icebp
std
mov
das
pop
xchg
sar
mov
gs
pop
outsb
mov
sarb
mov
dec
adc
mov
leave
lds
dec
xor
cmp
mov
push
test
shll
ss
add
sub
fmull
or
add
add
sbb
inc
add
jns
bound
das
dec
add
pop
arpl
repnz
scas
cmp
call
dec
sahf
add
sbb
lock
and
inc
ret
fdivs
or
xor
imul
incl
xor
mov
dec
repnz
dec
in
test
lock
cs
mov
or
out
movsl
popa
pop
and
cltd
scas
xor
popa
mov
stos
aam
pop
dec
ljmp
aas
stc
sbb
add
out
idivb
fxch
pop
ljmp
xchg
rcl
sbb
ds
jmp
in
dec
in
inc
stos
add
dec
insl
hlt
push
pop
adc
jle
insb
leave
fwait
mov
sbb
add
xchg
jae
jmp
lea
inc
repz
adc
inc
push
popa
jg
add
push
dec
out
repz
ss
nop
push
dec
ret
add
into
ss
fisttpl
dec
lcall
outsl
cmpsl
shrb
std
mov
icebp
orb
xchg
xchg
sub
mov
mov
les
das
fdivrs
mov
mov
mov
pop
scas
out
clc
jmp
fwait
cmp
leave
jns
inc
mov
fsubl
xorb
jnp
jmp
pushf
mov
sbb
inc
dec
adc
nop
lock
inc
adc
jg
decl
xor
xor
pop
mov
xor
xchg
fcmovbe
push
int
sbb
mov
lcall
add
jmp
outsb
repnz
imul
insb
lods
insl
xchg
lds
jns
ds
sub
jmp
pop
mov
add
dec
es
fiadds
call
adc
fimuls
dec
hlt
sub
lods
cmpsb
add
dec
mov
aas
jb
jae
pop
vunpckhps
inc
sbb
das
cli
decl
rclb
jnp
mov
and
sub
jecxz
lahf
and
xchg
test
sub
ficompl
and
mov
icebp
inc
aaa
mov
cmpsb
push
mov
or
jo
mov
adc
insb
push
sub
lcall
add
add
or
shll
dec
xorl
xor
xchg
in
mov
mov
lret
or
ja
sub
mov
ljmp
xor
hlt
aaa
movsl
dec
pop
mov
in
pop
jns
clc
xchg
mov
std
decl
add
sub
push
out
rcll
les
negl
push
pop
inc
or
mov
jno
outsl
call
add
test
sub
imul
mov
mov
mov
hlt
dec
pop
fsub
mov
mov
cld
out
xor
loopne
inc
add
cmpsb
cli
adc
lcall
mov
fwait
mov
inc
jge
pop
ljmp
imul
xor
lods
push
ffree
mov
packssdw
je
sarb
js
and
iret
cmp
jecxz
call
lahf
pop
gs
cmpl
lea
add
mov
sahf
cmp
mov
dec
sbb
lcall
rol
mov
push
in
jae
loopne
mov
jmp
xchg
inc
sbb
stc
call
dec
imul
and
call
test
ret
jns
mov
aad
aas
mov
or
sbb
mov
and
mov
jp
mov
jg
jnp
mov
out
imul
mov
xchg
fwait
cmp
mov
mov
js
cltd
lock
mov
orb
sub
aas
ljmp
test
mov
and
dec
push
loopne
xchg
sbb
leave
ds
cli
pushl
cmpsl
mov
lods
xchg
fnstcw
test
xchg
mov
hlt
jmp
test
aaa
dec
cmp
and
jecxz
stc
ret
push
mov
frstor
jmp
inc
stos
dec
scas
xchg
jae
jne
lods
mov
fs
xchg
scas
int3
xor
and
xorb
jmp
je
lds
and
add
xchg
cmc
xchg
lahf
loop
cmp
mov
push
mov
lcall
add
mov
push
add
lret
addb
jp
xchg
or
fnstenv
push
int
pop
and
inc
push
inc
jg
or
cmp
sbb
push
arpl
out
adc
fwait
adc
incl
mov
cmp
ds
test
push
rcrb
jmp
mov
push
hlt
push
dec
in
loopne
adc
repnz
adc
pushl
out
adcb
pop
xor
out
insb
mov
shrb
mov
xor
test
mov
enter
xchg
mov
jp
cld
sbb
cmovp
mov
movsb
sahf
push
push
and
dec
mov
push
push
add
ljmp
and
push
out
or
and
or
rol
stc
ljmp
stc
mov
xor
push
push
out
ret
rol
pop
pop
xor
and
stc
cld
in
and
test
insb
fisttpll
sub
add
lcall
mov
ret
mov
push
fwait
xchg
mov
dec
movsl
stc
add
mov
cmp
sbb
aam
loope
test
mov
xchg
lret
aaa
cld
lods
enter
pusha
lret
int3
sbbb
adcl
mov
mov
in
adc
dec
loopne
push
mov
cli
bound
mov
fwait
insb
xchg
orl
adc
popa
test
mov
dec
jnp
lcall
jmp
inc
dec
jp
mov
xchg
pop
lret
popa
insb
pop
daa
je
jo
divb
lea
push
gs
movsb
repz
dec
jg
icebp
decl
dec
icebp
jmp
mov
pop
lods
lock
push
sbb
add
das
in
dec
into
lock
xchg
mov
and
jb
in
sbb
xchg
push
clc
lcall
lcall
xlat
dec
cli
pop
fsin
decl
inc
test
add
stos
sbb
xchg
popf
std
shl
dec
mov
jmp
clc
mov
aad
inc
sub
pop
insb
popf
sbb
push
and
mov
in
and
adc
ljmp
in
insb
mov
sti
pop
outsb
jne
mov
clc
xor
incl
lods
inc
jmp
out
pushf
push
push
adc
ja
mov
cmc
cmp
cmp
decl
cld
ss
jecxz
sub
mov
jae
adc
iret
inc
jmp
stos
fwait
shlb
fildll
pusha
fs
xchg
cld
das
xchg
icebp
add
sahf
jg
pop
jmp
jg
daa
mov
cmp
jmp
mov
or
out
rorb
lret
mov
test
scas
mov
fsubs
push
xchg
jmp
imul
out
cli
add
sub
lock
mov
hlt
mov
add
ljmp
sbb
pop
filds
mov
loop
xor
jge
jg
mov
lods
mov
stos
lahf
pop
inc
cmp
daa
push
jb
sub
ljmp
outsb
js
les
jae
ljmp
test
add
cmp
inc
push
sti
dec
rclb
sbb
xor
jmp
fnstenv
pop
sahf
loope
movsl
mov
lahf
pop
add
inc
popa
xor
pushf
cmp
mov
pop
out
lds
ds
in
fistl
jl
jne
dec
mov
movsl
sub
lret
jle
movsb
aas
sub
mov
mov
stos
ss
fsubr
mov
pop
fistpll
ljmp
sub
adc
inc
sbb
enter
sub
inc
jp
add
sbb
sbb
pop
mov
sbb
mov
jg
cmp
push
movsl
lahf
cmp
add
jno
inc
sub
jo
ljmp
mov
sbbb
pop
test
stos
jecxz
les
jp
pop
sbb
lret
jbe
lcall
mov
test
push
push
lcall
mov
sub
and
lock
pushl
inc
xchg
add
cmp
andb
dec
dec
nop
fwait
shrl
mov
daa
scas
fsubp
mov
mov
sbb
ds
shrl
decl
sub
imul
and
fs
lret
ret
push
cld
push
aad
int
push
outsl
std
fwait
cmpsb
mov
pop
fprem1
and
ljmp
push
mov
ss
inc
sbb
gs
jle
dec
or
mov
movsb
leave
xchg
fidivrs
cmp
sar
jecxz
pminsw
ss
mov
add
jg
loop
cmc
aam
or
jbe
pop
mov
insl
ret
mov
mov
jmp
push
sbb
scas
xor
inc
mov
xor
jno
shrl
or
cwtl
aaa
adc
decl
mov
add
leave
dec
jge
xor
mov
xor
das
ljmp
lcall
xchg
dec
test
add
xor
mov
test
jns
inc
clc
pushl
xor
int3
das
call
jl
jecxz
push
cld
mov
hlt
fstl
call
push
fldt
loop
jg
lock
inc
add
mov
add
push
xchg
cmp
shrl
dec
repnz
int3
sub
push
test
push
cmpsl
notrack
add
dec
fcomps
pop
mov
cmp
call
das
push
mov
ret
xor
je
pop
jns
inc
imul
xchg
cmp
inc
sbb
ud0
decl
push
fadd
pushf
test
xor
push
jns
pop
adc
popa
push
pop
adc
xchg
call
sti
mov
sbb
lahf
inc
out
or
push
and
sahf
pushl
xor
cmp
pusha
out
and
shll
in
mov
inc
lds
jg
ss
rcrb
das
decl
call
ljmp
mov
cmp
scas
lea
call
xor
loope
mov
mov
sbb
cmp
dec
pop
test
cmpsl
inc
scas
clc
mov
xor
mov
shrd
dec
dec
mov
std
cld
in
cmpsb
mov
decl
cmpsl
pop
mov
filds
mov
cmpsl
cltd
pop
frstor
jecxz
fcmovnbe
jl
sub
cld
testl
lret
push
loope
sbb
xor
add
stc
popa
outsb
fisubs
fldt
adc
dec
mov
shl
decl
push
bound
data16
pop
or
adcb
adc
je
das
jg
subl
or
xchg
hlt
shl
mov
sbb
dec
test
stos
int
aas
mov
outsb
pop
and
test
jecxz
push
cmp
mov
inc
call
pop
cmp
add
aas
and
loope
xlat
sti
into
shll
xchg
add
cltd
jle
xor
fcomip
rcll
and
test
adc
mov
cltd
addr16
cli
inc
pop
inc
and
incl
pop
popa
in
test
pop
inc
mov
stos
sbb
add
je
test
pop
sub
call
pop
mov
sbb
in
test
jae
ss
and
or
incl
incb
dec
jl
jae
arpl
sub
arpl
incl
bound
or
jl
out
mov
ljmp
aam
dec
and
sbb
pop
pushf
pop
dec
sahf
imulb
pop
sbb
sbbl
clc
incl
adc
movsb
push
mov
jmp
popa
nop
cmp
add
loope
loope
cltd
repnz
sbb
sar
mov
into
popa
dec
outsb
sbb
and
ja
lods
push
mov
popw
add
xlat
sub
jle
movsb
fldlg2
pop
cmp
stos
adc
sub
inc
xchg
scas
call
out
fidivrl
sbb
in
xor
mov
cmp
jne
mov
ljmp
xchg
sti
xor
adc
subb
mov
iret
jle
clc
cmpsb
leave
ret
jl
out
cld
cltd
push
push
jg
es
jg
jbe
xor
jg
loopne
jl
xor
jg
addr16
or
test
pop
cld
mov
xor
out
adc
mov
add
call
mov
adc
push
lahf
aaa
mov
ret
add
mov
xorb
dec
adc
adc
push
cli
xor
loopne
pop
xor
pop
sbb
fisubrs
add
outsb
xchg
and
pop
popf
fcomip
call
xor
sar
cmp
and
bound
ja
pusha
movsl
cmc
incl
push
push
iret
data16
dec
fcmovbe
ret
sarl
pop
xor
imul
xchg
mov
jp
xchg
fldl
movsb
mov
jmp
jbe
sub
rcr
mov
xchg
or
xor
cmp
jl
dec
incb
add
push
sub
dec
std
push
pop
sti
adc
jno
xor
ljmp
push
in
push
insl
cld
mov
int3
dec
call
cmp
inc
mov
jge
fisubs
sar
pushl
dec
fsin
adc
les
outsl
nop
fisubl
xchg
mov
repz
and
negb
pop
push
sub
call
sti
loope
aam
sbb
xchg
jb
scas
push
scas
pop
negl
fisubl
jmp
jno
lcall
xchg
jmp
lea
push
or
test
je
push
mov
incl
xchg
in
ss
les
mov
pusha
add
dec
cmp
adc
push
xchg
dec
xchg
lcall
stos
in
cmpsl
mov
pavgb
and
pop
ficomps
add
decl
in
jb
aaa
cmc
aas
leave
xor
shl
push
cltd
cld
out
sahf
mov
cmp
jg
call
in
lahf
jns
push
add
xchg
dec
xor
mov
pushf
xchg
out
pop
xchg
cmp
lcall
jno
mov
es
outsl
sbbb
xchg
adc
sti
jp
cltd
xor
fdivrl
ja
cmc
data16
adc
cmp
pusha
and
mov
dec
xor
ljmp
mov
xor
push
xchg
xchg
mov
es
mov
pop
jle
push
cld
inc
dec
sbb
sub
ds
fcmove
js
xchg
and
dec
xchg
decl
sub
xchg
lods
mov
add
push
push
cwtl
out
clc
call
pop
mov
jbe
pop
outsl
or
out
outsl
mov
and
or
xchg
vunpckhps
jecxz
mov
dec
sbb
mov
adc
incl
cmp
ret
pop
fs
leave
dec
adc
addb
int3
jle
jmp
sahf
mov
flds
jge
mov
jo
loopne
sar
incl
lea
add
clc
sbb
es
jecxz
mov
xor
stos
push
add
icebp
incl
mov
cs
std
rclb
cmp
mov
pop
lock
loope
jmp
in
add
fs
out
mov
sbb
xchg
cli
jecxz
mov
lcall
insl
lret
paddusb
sbb
enter
adc
push
nop
push
sahf
xlat
mov
cli
or
ljmp
testb
adc
push
adc
and
std
ljmp
mov
sub
push
and
push
ret
dec
scas
mov
dec
lcall
jmp
ljmp
cli
imul
adc
sbb
pop
test
adc
fadds
lods
adc
ljmp
jge
and
fwait
xor
xlat
inc
mov
adc
jge
add
jg
mov
inc
std
repnz
std
and
shll
pushf
sahf
jg
push
mov
inc
push
cmpsl
push
or
cmpsb
jb
movsb
sub
mov
dec
inc
repnz
in
decl
sti
push
lea
xor
dec
cmp
in
jp
and
sti
add
out
cli
pushl
add
imulb
inc
jl
fists
rorb
dec
xchg
jg
lcall
jb
int3
adc
imul
lods
je
push
adc
mov
nop
pop
das
jecxz
sahf
cwtl
rclb
into
popf
adc
leave
fwait
mov
filds
shrb
outsb
add
mov
jnp
sbb
sub
sbb
imul
out
jmp
divb
sti
push
hlt
inc
and
push
repz
pop
push
jle
mov
xchg
xchg
rorl
mov
clc
lcall
loope
cmpsb
adc
push
and
xorl
fldcw
add
and
sub
popf
xchg
and
push
pop
fwait
pop
pushl
lret
push
test
add
adc
ret
push
lcall
testl
adc
cmpsl
cmc
dec
sub
cmp
sub
mov
cmp
lcall
or
lahf
cli
mov
xchg
mov
ss
das
cmpsb
test
jmp
data16
mov
jmp
lods
or
fidivrl
dec
movsl
mov
inc
mov
sahf
xchg
cmp
cmp
lods
shr
clc
pushl
outsb
pop
loop
push
divb
hlt
sti
xchg
lock
jmp
cld
inc
icebp
lcall
stos
stos
push
lahf
inc
das
xor
je
mov
xchg
xchg
push
sub
mov
xchg
mov
stc
data16
dec
es
lcall
xchg
flds
cld
das
cltd
push
add
mov
scas
cmpb
xchg
xor
incl
dec
aam
and
pop
fstpl
out
es
or
push
std
aas
andb
aas
cltd
mov
xor
xchg
pop
cs
fnsave
mov
mov
inc
adcl
ret
in
rorl
pop
sahf
push
jmp
popa
ret
popf
mov
jne
mov
pop
pop
nop
pushf
data16
and
push
ljmp
mov
dec
dec
adc
sub
sti
test
sub
scas
pop
js
fimull
js
movsl
push
imul
mov
fists
mov
sbb
test
std
cwtl
cli
cmpsb
xchg
push
pop
cmpsl
stos
push
outsb
inc
cltd
jmp
into
jge
sub
jl
insl
test
out
and
out
imulb
stos
inc
scas
push
hlt
aad
xchg
fsubr
xlat
ljmp
inc
mov
cmp
xor
xor
pop
add
jg
iret
and
in
sbb
loopne
and
lahf
ljmp
test
jg
imul
inc
mov
mov
xor
and
ds
pop
push
inc
xchg
sbb
lcall
fildl
jmp
cmpsb
lret
cmp
adc
inc
pop
pop
mov
das
cli
ljmp
sbb
cmc
or
push
push
mov
mov
jmp
inc
ljmp
mov
pop
dec
in
or
iret
add
add
leave
and
and
iret
neg
sub
movl
movl
fdivrp
call
ss
pop
dec
xchg
adc
les
cmp
push
test
ss
mov
and
cmp
dec
add
pusha
adc
add
pushf
lret
mov
ja
lcall
rcl
daa
mov
jp
and
das
push
divl
sbbl
call
and
gs
icebp
xchg
jp
mov
dec
mov
sub
sub
loopne
decl
mov
hlt
add
lods
add
out
incl
cwtl
int
mov
mov
pop
repz
sub
jmp
dec
in
cmp
test
push
in
dec
mov
mov
stos
adc
in
lret
jb
mov
ljmp
mov
pop
sub
int3
push
lahf
mov
or
imul
sbb
in
mov
dec
cli
push
mov
mov
or
mov
daa
xchg
push
or
pop
ds
jmp
jg
push
inc
add
popf
rclb
or
push
mov
push
add
jmp
sub
dec
outsb
mov
cwtl
ret
popa
or
clc
pop
sbb
iret
xor
add
lods
mov
xor
fmuls
xor
stos
lock
jg
fiaddl
pop
xor
call
mov
je
mov
inc
mov
jl
adc
cwtl
adc
hlt
pop
and
jle
pop
or
test
fimull
xchg
cld
negl
mov
push
mov
lcall
push
jbe
lahf
add
xchg
mov
jns
mov
dec
xchg
daa
sub
sub
or
jge
inc
std
int3
in
lods
test
and
ljmp
add
pushf
sub
pushf
xlat
fbstp
pop
test
jne
mov
jb
cmpsb
decl
mov
and
aaa
or
ja
push
add
aas
rcll
xchg
mov
repz
lods
lret
dec
arpl
ret
cmpsl
pushf
insl
mov
xchg
inc
data16
out
xchg
jmp
xor
aad
lock
mov
divb
cs
pushl
mov
push
cs
and
pop
pop
or
and
loop
mul
std
jg
incl
cmp
jb
xor
and
data16
test
incl
jp
test
mov
fsubr
ret
inc
js
subl
decl
ret
cmp
leave
test
push
insb
iret
jo
shll
addr16
lods
xchg
andb
or
scas
test
call
mov
mov
test
lods
mov
sti
stos
mov
dec
xchg
imul
fdivrp
ja
aad
or
call
es
repnz
dec
das
ljmp
aad
jge
test
add
clc
jle
fwait
sub
gs
outsl
clc
pushl
cmp
out
sbb
inc
and
add
mov
or
fisubl
mov
movsl
cld
pop
lret
hlt
sub
xchg
mov
inc
pop
or
xchg
sbb
lods
cmp
fildll
push
ficomps
decl
sub
cltd
and
test
cmp
push
adc
dec
push
aad
jmp
xchg
daa
xor
loopne
scas
aas
mov
ljmp
jne
in
inc
cmp
pop
dec
in
adc
and
into
cwtl
das
loopne
or
decl
mov
daa
fldcw
popa
lea
outsl
movsb
mov
hlt
mov
ljmp
testl
outsb
jmp
insl
adc
jno
imul
or
fs
or
dec
popa
add
rcll
cmp
mov
mov
xor
imul
or
ljmp
inc
iret
add
xchg
push
es
add
cwtl
daa
mov
ret
cld
std
sarl
cmp
inc
or
mov
sub
sbb
pop
mov
cmc
mov
push
mov
ret
popa
cld
ljmp
loope
sub
out
jne
scas
adc
xchg
push
jb
jle
push
imul
xbegin
push
pop
fsub
mov
add
xor
jmp
pop
aaa
call
dec
js
mov
mov
btr
push
lahf
jbe
movsl
jg
decl
inc
adc
shlb
cmpsl
hlt
sub
sbb
dec
mov
mov
test
stc
incl
or
mov
fmuls
daa
xchg
lods
daa
mov
mov
jg
in
cmp
pop
mov
iret
inc
adc
cltd
push
or
jno
mov
decl
test
jo
cmp
mov
lcall
xor
push
dec
cmpsb
repnz
das
pop
mov
add
push
int
dec
int
cmp
pushl
dec
outsl
pop
lods
dec
inc
xorb
lods
and
add
inc
xor
xchg
jmp
ror
addr16
subb
adc
mov
gs
call
sbb
and
clc
ds
int
cli
xor
sbb
inc
pop
lds
xor
adc
sbb
daa
aaa
xor
shl
std
incl
mov
ljmp
mov
in
addr16
cli
mov
push
incl
fnstsw
lods
shl
inc
add
or
xorl
clc
insb
sub
xor
jle
iret
mov
ljmp
incl
push
inc
cmp
ljmp
mov
shlb
int
mov
pushl
dec
pop
sub
or
jl
ss
arpl
jb
ja
ret
inc
and
jmp
daa
add
mov
jmp
sub
repz
push
push
mov
cmp
imul
roll
or
mov
clc
ja
sar
jmp
adc
adc
inc
je
cmp
dec
pop
sti
xchg
add
jb
inc
mov
push
int3
outsb
pop
push
push
jmp
cmpsb
lret
dec
icebp
mov
fadds
mov
adc
push
add
add
js
cmp
sbb
sbb
xor
adc
xorl
incl
jmp
cwtl
mov
pop
and
lods
pop
cmp
stos
pop
into
loop
out
cli
inc
sbb
nop
or
mov
dec
xchg
leave
inc
push
imul
push
sub
call
stos
sbb
imul
je
inc
les
adc
ja
sahf
js
mov
negb
nop
enter
pushl
push
jle
inc
hlt
pop
ret
scas
js
test
pop
rcll
stc
xchg
sbb
psubb
nop
cmpsl
js
ret
mov
xchg
ret
and
xorl
inc
jnp
movb
aas
popa
bound
lcall
cmpl
xchg
cmp
xorl
fildll
jmp
adc
inc
sub
pop
int3
lds
mov
dec
lods
fisubrs
pop
mov
std
ds
or
push
iret
or
addl
fisubrl
or
lcall
lods
loop
or
repnz
jae
dec
push
addr16
int
jmp
or
cmp
pop
ss
out
sbb
arpl
inc
mov
mov
pop
push
pop
xchg
push
push
jg
repnz
or
cmc
call
pop
push
daa
sub
push
dec
jmp
in
testb
inc
sub
divb
jg
dec
dec
popa
aaa
push
inc
cld
xlat
mov
lock
cmc
std
mov
push
xchg
jno
cltd
out
xor
cmp
out
xor
incl
jp
fidivrl
imul
cwtl
bound
mov
mov
pop
jmp
leave
aam
inc
lcall
sahf
lret
mov
mov
xorb
jnp
call
out
or
fwait
ret
xorl
push
or
inc
cmp
pushl
mov
push
adc
cmp
pop
in
mov
jbe
lods
jge
sbb
jmp
pushl
mov
aas
inc
add
mov
xor
ja
push
decl
sbb
mov
rcr
shlb
mov
in
mov
mov
shrb
jmp
ja,pn
jge
inc
or
call
push
sbb
pop
push
mov
mov
dec
dec
xor
in
push
sbb
mov
dec
adc
jmp
add
scas
pop
lcall
jae
ret
or
lcall
enter
aam
fistps
pushl
cmp
pop
ficoms
imul
std
push
jbe
andb
pushl
push
dec
or
call
mov
mov
lcall
dec
cld
out
and
js
ja
sbb
cmp
push
xor
decl
rol
in
fbld
cmp
icebp
int3
aam
adc
repnz
lea
jmp
jl
cmp
pop
push
outsb
in
mov
rclb
push
daa
and
jecxz
adc
cmp
inc
repnz
push
pop
sub
jmp
stos
or
pop
dec
jecxz
cmp
call
jle
ja
xchg
repnz
cli
out
test
inc
es
pop
loop
dec
mov
inc
fidivrl
enter
rcr
lcall
aad
lcall
dec
inc
mov
push
pop
orb
xchg
mov
add
inc
shrb
jno
cld
outsb
dec
pop
xor
and
sti
movsl
bound
popf
insl
aaa
sub
cmp
call
push
test
cmc
dec
adc
je
fidivrl
mov
pop
div
mov
push
cmpsb
fsubl
aas
outsl
lea
xchg
jg
mov
lcall
push
imul
cli
cld
jmp
adc
test
lahf
jecxz
push
dec
cwtl
xor
pushl
xlat
nop
push
test
inc
loopne
lds
mov
cmpsl
pusha
ret
lds
push
std
stc
jno
ret
rep
pusha
sbb
icebp
jle
bound
pushl
push
stc
das
lds
mov
xlat
mov
stc
repz
fildll
inc
ljmp
std
xchg
xchg
ja
or
cwtl
rcrl
push
mov
ljmp
cli
loop
aaa
incl
arpl
sub
push
filds
leave
call
mov
sbb
sbb
mov
push
fmul
lds
push
push
pop
pushf
sub
test
bound
xchg
cmp
shrl
sti
inc
jae
jp
push
nop
sarb
jg
push
sub
pop
push
loope
cmp
into
into
aaa
or
push
imul
sbb
shlb
dec
and
sbb
aaa
mov
xchg
xchg
add
in
call
cmp
loope
int3
ror
mov
rcll
in
xchg
pushl
or
push
js
lret
imul
or
test
mov
inc
adc
dec
dec
pop
inc
xchg
jg
nop
inc
add
xchg
jge
dec
insb
add
shlb
insl
xchg
mov
mov
dec
mov
stos
xchg
std
roll
xchg
add
pop
or
imul
pop
mov
fistl
lcall
push
stos
and
lods
aas
cmpsl
xor
pop
fsubrs
dec
ljmp
jne
or
imul
decl
or
jbe
mov
int
push
data16
mov
mov
cmp
rcl
pushl
nop
jl
pop
nop
in
jg
jl
xor
xor
call
jg
push
mov
rcrb
cltd
rclb
mov
bound
int
dec
mov
jmp
pop
jmp
pop
popa
push
push
pop
repnz
movsl
rcll
pop
inc
pop
mov
or
sbb
jmp
push
mov
in
sbb
scas
push
popa
pop
out
btr
lcall
and
push
out
mov
add
pushf
fimull
ja
jg
dec
fsubrl
dec
data16
cld
repz
add
fs
loopne
mov
jmp
enter
cmp
mov
or
rolb
fmulp
js
dec
jns
adc
dec
inc
xchg
scas
jg
jmp
mov
dec
hlt
je
push
and
adc
jmp
cmpsb
push
add
jb
jb
out
mov
mov
xchg
mov
loope
xor
mov
adc
mov
inc
cmc
cmp
cmpsb
sbb
fwait
dec
dec
cmp
fs
fwait
ljmp
jecxz
adc
pop
push
les
sub
dec
pusha
std
aaa
shlb
mov
in
adc
sbb
push
leave
test
mov
das
xchg
decl
lds
ja
aam
mov
add
insl
push
test
lods
dec
jmp
add
cmpsb
dec
adc
mov
mov
lcall
rcrl
je
inc
mov
jno
xor
or
bound
incl
subl
mov
leave
xor
inc
or
cs
je
jecxz
ja
call
popa
mov
dec
push
adc
jmp
call
lcall
mov
popa
aad
es
inc
cmp
aam
sub
push
xor
push
and
jl
enter
pushl
daa
pusha
stos
sub
mov
xor
pop
ret
jne
sub
push
inc
add
jg
lcall
jmp
xchg
add
pop
insl
xor
pop
ss
call
mov
shrl
jmp
gs
pop
fcmovu
push
fidivrl
jle
ja
jmp
inc
out
out
call
adc
in
mov
sub
sub
shlb
in
inc
hlt
daa
adc
mov
imul
mov
lahf
lret
dec
decl
adcb
or
xor
cmp
mov
mov
dec
pushl
aam
shll
aas
push
imull
in
shrl
stc
dec
dec
jl
push
jmp
mov
and
aam
cld
fsts
clc
push
mov
movsb
mov
xchg
push
std
xchg
js,pt
xchg
incl
adc
lret
out
sbbl
cmp
push
mov
xor
call
loopne
push
bound
into
sub
cli
into
jnp
insl
pop
sbb
nop
sbb
call
sarb
daa
fisttpll
mov
icebp
inc
add
xor
ljmp
push
cli
pushf
xchg
rorl
frstor
jns
mov
pushl
std
dec
enter
and
xchg
testl
jb
lea
xchg
mov
call
clc
rolb
movsl
insb
adc
decl
push
mov
or
lcall
pusha
adc
add
dec
lods
pop
scas
mov
mov
pop
mov
out
or
push
add
sar
fst
cmp
push
cmp
jg
cmpsl
or
iret
push
inc
inc
sbbl
dec
xor
inc
decb
push
mov
lret
pop
inc
cld
jbe
aas
lods
mov
sub
cld
decl
jbe
push
adc
arpl
inc
sti
push
sbb
sbb
out
ffreep
adc
mov
push
scas
inc
jne
js
hlt
adc
ret
out
fidivl
sub
xor
ljmp
cli
icebp
fwait
cmp
inc
popa
scas
daa
cs
push
or
jae
add
push
fistl
out
shl
pop
faddl
loopne
jbe
cmp
cwtl
decl
inc
and
test
in
jle
dec
test
negb
cmp
dec
aam
push
ret
mov
les
adc
in
pop
hlt
cltd
mov
jb
shll
cmp
je
xchg
and
call
inc
into
or
jmp
cmc
lock
in
mov
push
repnz
cmp
imul
xchg
pushl
or
xchg
sbb
push
int3
xor
iret
mov
jo
sar
decl
ja
push
pop
lcall
cmp
clc
jb
in
pop
mov
sub
shl
inc
mov
jmp
sbb
xchg
nop
scas
xchg
stos
out
pushf
lret
bound
fsub
adc
in
ljmp
jle
fucomi
xchg
mov
pop
xor
mov
ficompl
pushf
in
ljmp
or
or
orl
fcoml
add
sbbl
inc
mov
push
in
test
cmp
push
cmp
fcomip
mov
lock
add
jp
and
lods
inc
stc
and
jne
inc
test
or
xlat
and
int
mov
aam
or
mov
into
xor
xchg
cmp
push
mov
in
movsb
sub
stos
xchg
repnz
call
adc
mov
and
test
cmp
fisttps
jmp
loope
stos
repnz
mov
mov
sbb
ss
fcmovbe
loopne
sbb
js
jl
leave
jns
add
out
xchg
outsb
fnstcw
dec
bound
mov
out
ret
aas
aas
negl
adc
pop
xlat
dec
inc
nop
mov
cmc
aad
jbe
ljmp
mov
push
inc
jbe
cwtl
movsl
pop
fwait
hlt
fcomps
xor
inc
divl
jne
and
xchg
xchg
jecxz
ljmp
cwtl
icebp
mov
call
outsb
loopne
jns
cmp
and
jmp
xchg
inc
cmp
add
sbb
jp
dec
pop
xchg
ds
lcall
xor
imul
xor
insb
and
cmp
pop
mov
jnp
inc
mov
aad
fdivrs
xchg
fsubrl
pop
pause
fwait
popa
inc
popa
jge
xor
insb
inc
sub
dec
iret
mov
ror
pop
jmp
out
adc
sti
popf
xchg
cld
and
loopne
adc
or
divb
aas
and
shlb
and
popl
xchg
lahf
dec
icebp
ljmp
jo
mov
gs
cli
mov
incl
movsb
insl
bound
push
into
mov
mov
fildl
rolb
les
push
cltd
cwtl
sbb
repnz
lcall
mov
cli
cmp
jb,pn
sbb
aas
dec
xor
fwait
xchg
dec
lock
test
xchg
cmp
jmp
and
xlat
out
push
pushf
sbb
add
aam
cmp
inc
mov
xor
pushl
daa
cli
xchg
sub
out
inc
aas
lret
repz
out
stos
fisttps
mov
fcmovnu
dec
sbb
ljmpw
cs
xchg
jns
inc
sub
dec
pop
cmpsb
mov
outsl
inc
xor
std
out
lcall
cltd
adc
aaa
lods
mov
loop
cs
addb
pushf
sar
sbb
pop
subl
in
inc
lods
mov
decl
mov
pop
aas
fnstcw
jecxz
clc
int
xchg
push
mov
or
incl
push
adc
data16
repnz
mov
je
mov
pop
push
enter
fistl
je
jg
push
xor
adc
ret
icebp
push
stos
mov
mov
daa
sub
mov
jg
inc
cld
jo
das
mov
inc
mov
add
call
mov
jg
xor
cmc
rorb
mov
jecxz
pop
icebp
or
sar
mov
and
test
push
or
out
push
data16
dec
add
jecxz
and
push
push
xchg
jp
popf
cmp
movsb
mov
movsl
or
xchg
icebp
mov
adc
pop
aam
pushl
and
or
ds
xor
jg
ljmp
xor
jb
mov
adc
bound
lcall
cmpsb
icebp
pop
test
mov
inc
fnop
xor
ljmp
xor
pop
int
mov
ret
imul
mov
in
lcall
mov
jp
ja
subb
sub
xchg
inc
pusha
shl
push
es
inc
ljmp
icebp
pop
in
repnz
jo
pop
lcall
cmp
mov
call
dec
jns
inc
jg
mov
jns
jg
jl
int
iret
xchg
xor
mov
and
in
mov
pop
popf
call
out
xorl
testb
jmp
mov
pushf
push
xorb
call
mov
and
cmp
mov
fwait
xlat
and
xor
jb
test
sar
mov
out
cwtl
bound
pop
dec
mov
cld
popa
mov
mov
sbb
jbe
iret
arpl
repz
and
divb
push
std
in
mov
sub
or
mov
inc
xchg
jp
xchg
push
pop
push
out
call
jp
cmc
lea
cmpsb
pop
jbe
out
mov
out
xchg
pop
add
mov
mov
dec
test
scas
je
and
inc
mov
in
sbb
ljmp
scas
push
das
cltd
mov
mov
and
inc
mov
sub
mov
mov
inc
rclb
mov
and
dec
cmp
imul
loopne
push
loopne
xchg
out
popf
ret
out
lcall
movsl
push
fwait
or
pushl
sub
add
jmp
rolb
decl
dec
ljmp
sub
cli
mov
sti
out
jge
xor
scas
adc
incb
das
push
xchg
lcall
dec
xorb
jmp
add
mov
clc
sub
mov
push
outsl
insb
cmp
rcrb
mov
data16
mov
ret
filds
aad
sti
add
icebp
cltd
jle
and
push
or
call
cmp
faddp
add
test
or
cmp
xlat
xor
lcall
adc
out
mov
jbe
insl
ljmp
cli
mul
mov
sbb
jns
mov
test
or
mov
sar
decl
dec
out
aas
mov
nop
or
out
pop
xor
jno
mov
decl
test
mov
jmp
iret
push
mov
push
pop
xchg
jg
or
mov
inc
iret
sbb
push
leave
or
jnp
dec
fdivr
arpl
push
std
jmp
pop
call
scas
dec
mov
outsl
jle
push
adcb
xor
xchg
mov
fimuls
inc
mov
outsl
decb
and
call
dec
or
pop
pop
icebp
data16
jg
gs
mov
cli
scas
dec
jl
mov
pop
rclb
das
clc
decl
mov
stc
cmp
jno
fadds
inc
adc
dec
dec
std
xor
in
cmpsl
daa
push
pop
pushf
cmpsb
cmc
movsb
mov
cmp
psubsw
aad
cmp
mov
jo
dec
push
xchg
stos
xor
mov
adc
lcall
idivl
xor
sub
into
mov
ljmp
lahf
jno
in
in
push
std
out
mov
and
push
stos
fisubl
mov
xor
popf
pop
dec
mov
mov
in
mov
mov
jge
out
push
lcall
scas
shrb
ror
call
mov
pop
inc
or
sub
sbb
sbb
std
or
mov
lret
loope
sbb
push
jmp
inc
movb
add
sbb
rorb
mov
and
testb
jbe
cld
pop
add
popa
dec
scas
fmuls
mov
lcall
xor
je
jnp
sbb
incl
sahf
add
pop
lret
inc
ss
enter
pop
push
sbb
inc
stos
int
xor
mov
jne
push
shll
and
mov
incl
fsubp
pusha
cltd
push
mov
lahf
mov
in
inc
jns
lds
int3
lcall
adc
lcall
ret
xchg
nop
mov
sub
js
xor
shlb
mov
sbb
inc
jmp
mov
out
adc
ret
pop
mov
dec
pop
ljmp
add
sbb
push
cmp
sub
out
dec
fdivr
lcall
fimuls
insb
cmp
clc
cld
nop
push
cld
mov
inc
mov
jl
fisttps
add
inc
xlat
enter
icebp
mov
shll
fisttpl
fucomp
sbb
idivb
ds
hlt
mov
call
test
fldt
clc
and
add
clc
pop
jmp
pop
stos
dec
mov
jl
repnz
stc
and
push
aam
xchg
mov
sub
sub
add
ss
sub
inc
call
xlat
lea
xorb
faddl
shll
adc
lods
loope
inc
cld
js
push
inc
aaa
cld
push
inc
add
ljmp
in
aaa
fstpt
cmpsb
cltd
pop
pop
xchg
ja
pop
aad
loopne
push
mov
hlt
mov
mov
sbbl
repz
pushf
mov
stos
xchg
mov
mov
xchg
lea
dec
loope
pop
or
into
js
nop
addr16
push
inc
out
das
and
xor
fimuls
pop
sbb
sbb
addr16
ja
incl
and
in
ret
cmc
dec
lea
dec
push
jl
jmp
add
and
call
jbe
mov
mov
inc
adc
jmp
jg
mov
cld
mov
jne
pusha
inc
mov
ret
pop
mov
jp
sti
lret
sbb
ljmp
dec
inc
fwait
outsb
jle
mov
sahf
shll
inc
cmp
cmp
sti
call
incl
add
mov
adc
mov
stc
fisttps
flds
adc
fnsave
adc
adc
dec
xchg
sbb
andb
pop
gs
fsubs
lcall
aad
push
enter
push
and
mov
or
js
test
pop
inc
mov
pop
int
aad
test
lahf
in
mov
test
cmp
mov
or
inc
push
out
push
sbb
push
xlat
xchg
incl
sub
xchg
shll
mov
subb
lock
cmpsb
xchg
xor
or
stc
into
mov
push
cmp
test
lcall
outsl
xor
rcl
incl
mov
imul
xchg
pushl
add
out
and
push
in
push
mov
inc
lret
xor
pushf
jge
lods
clc
ljmp
incb
xchg
sti
outsb
lods
in
mov
jecxz
repz
dec
popf
mov
inc
fbld
xchg
and
jo
push
inc
orb
cld
jg
int
dec
dec
or
es
cmpsb
nop
xchg
add
lcall
pop
ljmp
or
push
adc
out
pop
decl
xor
cmpsl
xchg
jg
add
aas
xchg
loopne
sub
lods
scas
xchg
ss
call
daa
push
jg
or
iret
out
sahf
jo
mov
ret
jle
daa
ljmp
daa
cmc
mov
mov
int
cmp
mov
sbb
adc
cmp
test
lock
data16
decl
push
push
frstpm(287
fstl
push
js
arpl
gs
push
inc
sahf
mov
fcomip
lcall
push
mov
cld
mov
aad
rcrl
rcll
pushl
test
cmp
sbb
rcl
xchg
call
int
das
inc
and
shrl
lcall
mov
clc
cmpl
andl
push
cmp
clc
inc
lret
incl
adc
lock
cli
cli
into
jb
xor
loop
das
fisubl
xor
decl
adc
xorl
jno
xchg
les
addl
jge
nop
sbb
nop
test
pushl
jp
fmulp
and
cmpsl
arpl
aas
imul
xor
push
rcrl
jl
dec
jne
push
xchg
xchg
push
cmc
xchg
jmp
mov
jbe
test
clc
jmp
bound
out
adc
pop
pop
clc
and
decl
cmpb
call
sbb
loope
loop
mov
xlat
cmpsl
cmpsb
in
push
jp
out
sbb
call
sbb
shll
add
lock
leave
sub
int3
incl
mov
in
stc
andl
dec
aaa
out
xchg
mov
push
push
inc
ss
stos
insb
test
mull
mov
sub
repz
sbb
cmp
clc
jmp
cwtl
and
lock
incl
ljmp
sbb
es
pop
movsl
stos
int3
mov
cmp
outsl
push
jbe
leave
sarl
pop
xchg
arpl
je
incl
xor
sub
test
dec
mov
adc
cli
or
sar
lods
cli
jo
call
jb
cmp
data16
xor
pop
in
pop
in
gs
popf
enter
jmp
cld
dec
inc
loope
ja
jae
cmpsl
dec
jmp
dec
or
loop
push
cmp
pop
jl
xor
mov
clc
pop
pushl
incl
int3
sarb
cmpsl
mov
xchg
icebp
jl
mov
dec
out
sub
jnp
call
xchg
hlt
pop
jo
mov
add
mov
lds
imul
stc
dec
jmp
inc
jo
pop
sbb
daa
dec
mov
test
int
sub
and
and
or
decl
cmp
out
shll
adc
cli
adc
mov
jg
jmp
lds
call
sbbl
jge
adc
nop
daa
jl
bnd
ljmp
cmp
mov
and
jne
pop
dec
ret
xchg
fidivrl
adc
outsb
and
decl
out
aas
xchg
xchg
test
xchg
lods
push
pop
jge
rcr
jno
loop
mov
sub
add
inc
pushl
daa
push
pushf
mov
dec
xchg
out
mov
pop
test
add
call
into
iret
jne
je
cmpsb
xor
jbe
mov
pop
jecxz
mov
aas
xchg
mov
pushf
sarb
jecxz
dec
sbbb
jae
sbb
push
rolb
jmp
rcll
sbb
mov
jne
dec
fistpl
call
mov
mov
mov
decl
sub
xchg
dec
iret
jnp
push
or
pop
dec
js
insl
loop
xchg
aam
loope
incl
cmp
scas
dec
sub
jne
imul
mov
lcall
into
test
dec
sbb
mov
imul
adc
lock
mov
in
push
pusha
movsb
xchg
xor
inc
dec
aam
mov
nop
mov
mov
incl
mov
out
out
fcoms
gs
and
out
insb
data16
jno
aas
mov
sbb
pushl
popa
adc
popf
adc
add
and
adcl
scas
cli
mov
sar
ds
in
xchg
mov
push
loopne
or
pop
sub
dec
idiv
decl
jbe
sbb
fcmovne
sar
cmp
add
and
cmpsl
imul
pushl
ret
imul
rclb
sub
sbb
adc
ljmp
shlb
and
and
scas
aam
arpl
push
jmp
jg
sahf
xchg
or
icebp
test
ret
and
lahf
pusha
xchg
popa
dec
lods
add
inc
imul
bound
aam
or
cld
pop
lcall
mov
cmp
ret
sar
movsb
inc
cmc
pop
mov
xchg
jmp
push
sbb
mov
jmp
jae
out
in
movsb
or
sbbl
mov
mov
push
lea
sub
bound
das
fs
adc
pop
jne
xor
pop
push
daa
inc
xor
mov
jecxz
iret
jl
add
cli
or
int3
cmpsl
fbstp
jno
or
nop
rol
incl
adc
pusha
cmp
jb
mov
daa
xchg
es
and
ja
jb
shrl
ljmp
or
std
mov
mov
mov
mov
adc
cmpsl
fstl
or
pushf
aam
call
add
push
jne
fsubr
and
insl
dec
mov
faddl
push
push
sahf
call
xchg
xor
or
xor
mov
lods
negl
lods
lods
aad
fsubs
jnp
jo
filds
fisttpl
cli
push
xchg
f2xm1
push
in
shlb
es
pop
leave
fucomip
dec
sub
popf
inc
xor
lret
call
xchg
ss
pop
pop
icebp
std
mov
arpl
add
mov
mov
lcall
sbb
shll
add
jno
je
pop
xor
jle
fs
push
xchg
xchg
sub
sbb
adc
mov
ret
jg
push
push
popa
test
sub
adc
sarb
jne
fadds
lea
pop
cmp
sub
xchg
inc
inc
add
cli
inc
pop
jge
inc
cmpsb
jmp
mov
sbb
lcall
clc
clc
push
inc
inc
fs
ret
in
outsb
mov
mov
sbb
or
adc
cmp
icebp
fcoml
mov
mov
mov
dec
mov
outsl
aaa
incl
dec
das
xchg
mov
nop
xchg
out
decl
sbb
cmp
ror
jno
mov
clc
addb
inc
shll
push
push
and
jg
scas
in
int
add
dec
dec
sbb
aad
push
ljmp
pop
fld
in
rorl
cld
in
push
stos
int3
sub
movsl
jb
stos
mov
call
fsubs
sti
xchg
movsb
jno
mov
mov
in
mov
mov
add
imul
ret
sbb
rcr
popl
and
insl
addb
xchg
pop
hlt
pushf
adc
push
mov
aas
xor
repnz
or
cld
lahf
adc
mov
sti
cltd
push
int3
xchg
or
sub
pop
mov
lock
xchg
fcomip
adc
lods
mov
out
clc
inc
jbe
fwait
in
mov
aam
dec
dec
inc
decl
cmpsb
testb
inc
inc
and
mov
cli
bound
cmp
ljmp
fs
jno
cli
lods
or
stc
sub
ret
pop
lcall
pushl
sti
pop
xor
sbb
inc
xor
cld
ljmp
mov
test
pop
push
ljmp
xor
ljmp
cld
mov
hlt
mov
adcb
xchg
push
push
icebp
mov
sub
std
call
movsb
cmp
mov
push
enter
push
xor
mov
arpl
and
sbb
nop
pop
pop
pop
xor
pop
xchg
sbb
adcb
popa
or
xor
stc
and
inc
pop
aas
and
or
pop
dec
mov
scas
mov
xchg
xchg
lcall
mov
pushf
test
cmp
adc
adc
mov
pop
inc
sarl
stc
or
sarb
les
sub
icebp
cmc
aam
decl
ljmp
dec
lahf
mov
fs
ja
sub
leave
xchg
cmpl
sbb
mov
or
dec
cmp
add
or
jg
das
sbb
add
rcl
pusha
leave
iret
pop
int
cmpsb
mov
push
jne
sub
dec
pop
movsb
mov
fsubs
or
jo
fidivrs
decl
xchg
lods
test
cli
int
outsb
add
fwait
bound
lret
or
or
inc
lahf
mov
sar
sbb
mov
mov
test
mov
mov
loopne
outsb
loope
repz
sub
sub
mov
jge
lock
inc
cmp
cmpsl
and
adc
lods
shl
outsb
call
lcall
repnz
and
xor
sub
icebp
dec
lods
cltd
in
decl
je
mov
mov
add
jl
and
jne
xlat
int
dec
mov
call
cmpsb
orl
rcll
clc
inc
push
xchg
sarb
or
xchg
xor
lahf
lret
pop
andb
adc
cmp
lahf
negl
ljmp
mov
hlt
jecxz
push
xor
pop
sbb
add
mov
fs
inc
lea
push
out
ficoms
add
cld
mov
in
cmp
push
fcmovnu
ss
gs
or
lcall
in
data16
sahf
cmp
fcomps
fwait
lods
xchg
mov
xor
cwtl
sar
xor
mov
or
adc
fsubrs
lods
int
stc
add
and
sub
or
jns
mov
pushl
inc
cmp
in
repz
adc
or
insl
movsl
cwtl
mov
fs
xchg
add
and
in
mov
call
mov
cld
dec
daa
ja
jb
int
aas
in
sub
xchg
mov
jbe,pn
decb
cmp
mov
jp
add
mulb
pop
sti
aam
int3
popf
aaa
sub
jmp
std
je
cld
push
in
lahf
imul
and
sub
fsubrs
icebp
fistps
ja
pop
xchg
cli
das
js
mov
lods
xchg
mov
inc
mov
dec
mov
fwait
xchg
repnz
je
pop
out
sbb
or
pop
aam
xchg
push
push
scas
dec
fs
jp
adc
jp
aas
inc
out
sub
stos
mov
cmp
jg
mov
stc
mov
jle,pt
mov
pop
jo
mov
cmp
push
xchg
push
adc
incl
xor
data16
outsl
adc
cld
lds
dec
and
pop
aad
mov
ret
movsb
mov
in
pop
jmp
sti
cmpsl
in
jg
pushf
bound
push
jmp
cld
addb
add
stc
and
jecxz
aam
sub
ljmp
fucomp
add
mov
daa
xchg
loopne
fcmovnb
shlb
push
lods
add
jmp
ds
aad
and
push
gs
mulb
mov
jg
push
adc
mov
cmpsl
scas
mov
std
sbb
repnz
pop
aaa
or
call
cwtl
icebp
adc
xor
imul
dec
mull
cltd
mov
mov
sbb
lcall
pop
pusha
mov
fdiv
adc
xchg
push
cmp
cwtl
insb
cld
sub
aaa
lahf
aaa
insl
mov
lcall
rolb
pushf
cmp
push
dec
mov
outsb
js
xchg
adc
xchg
inc
test
sbb
adc
outsb
sahf
or
scas
sahf
cmp
aad
outsb
fs
incl
and
insl
push
enter
scas
ret
adc
push
insl
mov
pop
jg
fwait
and
cmc
aaa
and
add
decl
sarl
cmp
std
out
ret
adc
lods
jmp
cmpb
jbe
inc
test
dec
cwtl
mov
pushf
aad
xor
jmp
loope
scas
xchg
jle
xchg
call
les
insb
stos
mov
sbb
lahf
call
mov
mov
sbb
mov
rcrl
inc
mov
decl
push
inc
inc
jg
sbbb
jmp
pop
sub
out
sub
testb
wrmsr
xchg
push
icebp
fadds
movsl
enter
inc
daa
jle
adc
in
insl
mov
mov
inc
movsb
mov
xor
notl
push
adc
dec
int
es
addl
decl
inc
mov
mov
aad
push
sub
jae
add
xor
pop
cmp
hlt
cmc
popa
or
data16
inc
push
in
dec
fucomip
inc
push
cwtl
sub
pop
dec
jl
ljmp
pop
daa
jecxz
xorl
push
jnp
ljmp
sbb
push
scas
mov
or
outsl
cmp
out
mov
sub
dec
and
dec
test
inc
sbb
cmc
inc
stos
pop
rcrl
decl
xor
xor
lret
test
push
inc
inc
cmpsb
cmp
mov
add
sarl
cmp
orb
pop
lods
shr
inc
or
cmp
jmp
mov
and
pop
push
pop
stc
add
dec
inc
outsl
inc
xchg
out
int3
cltd
lcall
js
inc
imul
aaa
rcrb
rolb
jmp
out
mov
cmp
enter
or
mov
mov
pushl
xchg
jno
inc
fnstenv
cld
dec
push
jg
dec
or
sub
or
arpl
lcall
pusha
pushf
or
pusha
inc
pushf
jno
ds
add
mov
fs
test
adc
inc
in
jge
insb
ss
outsl
scas
push
imul
xchg
call
iret
xchg
add
loope
scas
pop
popa
mov
and
and
dec
aaa
ljmp
mov
fwait
je
notl
add
decl
std
jno
mov
repz
pop
sub
add
xlat
mov
jecxz
clc
adc
xchg
inc
arpl
orl
pusha
push
clc
adc
cmpsl
and
xchg
cwtl
add
insb
inc
stos
jg
dec
xchg
cmp
xor
aad
jmp
or
call
push
pop
xchg
dec
popa
out
push
mov
ja
std
hlt
and
iret
xor
lods
inc
fs
enter
call
push
mov
jle
test
rclb
data16
mov
cmc
jnp
decl
jl
push
call
in
sbb
mov
inc
sub
sahf
incl
dec
lcall
mov
psadbw
adc
aad
into
sub
mov
lcall
icebp
repnz
jmp
out
in
cmp
xor
inc
popa
push
cmp
sub
cld
inc
lahf
inc
pop
int
out
mov
lods
sbb
sub
call
in
dec
ja
call
cmpsl
inc
stos
cmpsl
test
push
lahf
sub
decl
mov
into
int3
push
call
scas
xchg
or
rcll
or
les
std
cmp
std
jns
pop
add
pushl
pop
popa
mov
pop
popa
fwait
jmp
dec
ljmp
pop
jecxz
div
loop
mov
insb
sbb
adc
cmp
lcall
mov
and
pop
dec
or
mov
dec
cld
push
psrad
jnp
xchg
ljmp
ss
dec
movsl
xchg
daa
push
xlat
dec
insl
dec
adc
hlt
jne
cld
popa
jg
push
xchg
ss
pop
inc
shlb
leave
jl
mov
add
subb
das
xchg
xor
sbb
out
mov
jl
call
repnz
inc
sub
or
pop
shrl
scas
push
ret
jp
scas
sahf
mov
adc
mov
xlat
leave
in
mov
ljmp
mov
enter
movsl
mov
jmp
cmpsb
jb
cs
add
shlb
lcall
lcall
mov
filds
jle
jne
or
xchg
mov
mov
jmp
and
int3
pop
mov
jae
inc
push
xor
aad
add
outsb
fdivrp
decl
add
jg
sbb
pop
xchg
stc
jno
push
enter
repnz
mov
mov
dec
sub
hlt
lea
shrb
push
loopne
inc
incl
jno
mov
jbe
and
fisttpl
pop
push
and
imul
and
sbb
jno
and
shlb
pop
pop
in
pop
loop
std
out
incl
xor
movl
mov
inc
and
out
stos
andb
mov
loop
xchg
ljmp
clc
stos
lret
sti
lea
jb
cmp
mov
filds
lcall
push
dec
add
jnp
subb
in
adc
mov
mov
push
add
xor
je
mov
pop
sbb
inc
daa
push
mov
xchg
aas
add
leave
mov
sbbl
incl
and
out
xchg
mov
mov
gs
vmaxpd
mov
je
enter
call
mov
xchg
xchg
add
movsb
iret
lret
leave
popf
pop
inc
mov
ljmp
shrl
mov
xchg
ret
mov
loop
mov
les
popf
dec
clc
call
or
imul
cmpsb
int3
sbb
jae
imul
sub
cld
adc
mov
aas
mov
push
xor
gs
dec
nop
cmp
dec
add
inc
xor
or
sbb
hlt
jl
push
cli
out
cli
jmp
sahf
shlb
add
scas
cmp
loope
fnstsw
mov
scas
inc
inc
adcl
dec
pushf
mov
std
data16
jge
add
push
pushl
sbb
mov
push
nop
mov
popf
jmp
dec
and
testl
pop
test
ljmp
add
inc
push
or
ds
or
adc
inc
ds
rolb
jbe
add
seto
ret
std
sti
mov
aas
xchg
roll
outsl
pop
cld
lret
mov
add
loopne
adc
mov
sarl
testl
dec
dec
int
ret
addr16
inc
mov
inc
cmc
and
xchg
into
push
jo
out
fs
mov
mov
jne
fldt
rcll
movsb
inc
sbb
lcall
clc
sbb
data16
aas
sub
pusha
mov
and
mov
pushl
imul
xorb
movsb
adc
rcll
push
scas
loopne
addb
decl
sbb
jae
aam
add
xor
nop
hlt
enter
and
cmp
daa
jecxz
out
pop
push
test
xchg
cmp
nop
add
jns
std
in
add
testb
je
pop
xor
jecxz
inc
adc
decl
fbld
iret
mov
push
xchg
push
or
dec
add
mov
pop
and
fists
ficoml
adc
jecxz
push
push
insb
cmpsb
push
pop
movsb
pop
repnz
sub
cwtl
rcll
sti
incl
push
movsl
push
push
jno
inc
or
adc
loope
dec
enter
jns
push
outsb
or
mov
incl
lds
add
icebp
and
inc
ret
mov
mov
iret
lea
lret
fwait
loope
rcr
call
call
mov
hlt
das
out
cmpsl
mov
and
or
mov
pop
fs
jecxz
bound
in
lock
call
adc
adc
cmp
pop
inc
rol
outsb
inc
jmp
adc
dec
shll
pop
pop
ljmp
jg
jmp
fsub
fcmovne
enter
out
cmove
mov
xor
mov
jg
addr16
cli
jmp
jae
xor
fbld
pushl
mov
cmpsb
jbe
pusha
les
mov
xchg
negl
into
add
inc
icebp
mov
cwtl
cmc
lcall
push
sbbb
ret
xchg
mov
dec
int
pop
pushl
sbb
bound
pop
int
mov
adc
ljmp
mov
dec
or
jmp
adc
xchg
filds
xor
lcall
mov
and
outsl
adc
orl
dec
test
testl
cmp
into
std
add
fs
jno
cmp
scas
out
ljmp
jge
jbe
push
mov
jl
mov
sbb
ret
mov
or
fdivp
add
and
pop
rolb
cld
scas
mov
xor
mov
adc
incl
test
jne
mov
clc
cmp
xchg
icebp
fnstcw
adc
loope
adc
cli
jg
adc
mov
xchg
inc
int
xor
out
cmpsb
es
push
notb
subl
int
into
imul
mov
decl
inc
aad
lods
jmp
lret
test
lahf
enter
lahf
add
hlt
mov
cmp
inc
sub
pop
ret
out
xchg
push
pop
lahf
jg
sar
inc
push
xor
mov
je
loopne
adc
inc
ljmp
mov
ret
add
and
sbb
pushl
and
adc
push
iret
inc
sahf
sub
dec
pushf
push
xchg
outsl
xor
aaa
movlps
xor
scas
test
incl
inc
xchg
fiadds
sbb
pusha
fimuls
pop
fistpll
mov
lcall
mov
jb
mov
or
rol
stos
jne
xchg
push
stos
jmp
fstl
test
imul
and
xchg
testl
sub
or
fcmovnb
dec
pop
dec
es
aad
shr
ljmp
jl
adc
push
loopne
jae
push
mov
loopne
mov
hlt
sahf
jle
lods
cltd
jecxz
xor
dec
cltd
push
outsl
pop
mov
jmp
cmc
das
push
or
ss
mov
ljmp
and
add
push
sbb
sub
aas
je
int
roll
mov
ror
arpl
sub
shll
xchg
lcall
lahf
bound
into
int3
add
cmp
fmull
push
dec
or
push
out
icebp
imul
cmp
cmp
cmp
xor
dec
popa
sbb
push
add
popf
or
fcmovb
add
cltd
inc
outsb
pop
xchg
lret
xchg
jns
push
mov
fsubs
addl
lea
testb
jmp
lret
aad
pop
stos
test
mov
mov
es
add
jl
fnsave
lcall
mov
mov
in
in
mul
repz
adc
fstps
jmp
shrl
in
add
push
lods
xchg
push
lahf
lds
mov
jg
push
inc
sub
stos
cmpsb
out
jb
data16
test
pop
mov
and
dec
mov
ficompl
lret
fdivrs
mov
decb
je
pop
ljmp
adc
pop
ror
aas
jo
pop
xor
mov
mov
aad
popf
add
xchg
sub
cmp
mov
lods
lcall
xor
lea
push
inc
inc
in
inc
inc
cmp
xchg
call
repnz
push
mov
sub
mov
cmp
sub
out
call
cmp
movsl
and
inc
inc
mov
pop
bound
mov
cmp
pop
dec
sar
jnp
or
fadd
pop
leave
ja
out
daa
insb
leave
fidivl
in
lahf
jg
sub
loope
mov
mov
ret
fistps
push
je
in
mov
clc
out
mov
stos
sbb
push
mov
pop
sbb
in
fdivl
pop
inc
sub
ljmp
out
in
sbb
insb
in
adc
push
push
dec
repnz
pop
les
bound
and
decl
aad
mov
jge
push
adc
enter
popf
sub
and
incl
add
xchg
push
dec
movsb
out
fistps
das
call
dec
sub
dec
pushf
stos
add
push
dec
inc
outsl
lods
shll
pop
jg,pn
outsb
sti
sub
cmp
jnp
ja
inc
out
iret
repnz
mov
cmp
xlat
jge
ret
pop
mov
mov
decl
dec
lret
loop
and
or
mov
add
sbb
vphaddubq
mov
mov
cmpsb
shrl
add
rorb
clc
lcall
xlat
jmp
mov
pushl
push
popa
ds
jno
icebp
xlat
stos
xchg
and
loop
outsl
icebp
sub
aad
cmp
imul
call
jb
mov
adc
lahf
push
loope
test
lahf
popa
iret
push
jle
xor
loope
aas
in
inc
push
orb
loope
cmp
mov
mov
mov
lods
mov
lcall
push
fmuls
lock
nop
aas
lea
stos
cmpsb
fistps
std
jle
fidivrl
dec
xchg
test
das
mov
int3
pop
das
and
cwtl
sub
xor
pop
mov
cltd
divb
cld
incl
inc
insb
cmp
xchg
or
xchg
jno
jg
mov
mov
imul
filds
inc
hlt
scas
mov
addr16
pop
cmp
aam
lret
push
mov
push
pushl
jecxz
mull
mov
lods
ss
adcb
push
movsl
push
sbbl
pushl
dec
adc
cs
cmp
pop
fs
xor
pushl
jo
mov
mov
sub
ljmp
lds
aam
mov
into
pop
pop
cltd
fs
lcall
jg
iret
subl
sub
jo
jg
ljmp
loope
std
inc
adc
sbb
mov
mov
pusha
decl
inc
fstps
pop
mov
orb
lcall
fildl
out
inc
cmpsl
repz
adc
mov
mov
mov
xor
aaa
dec
mov
jnp
lcall
fdivrs
ss
and
in
das
push
iret
aad
ret
push
xchg
dec
jecxz
lcall
adc
das
mov
pop
pushf
icebp
or
adc
repz
add
mov
loope
sbb
cmpsb
int3
leave
inc
adc
inc
add
jecxz
aas
adc
inc
icebp
jne
ret
mov
jb
mov
sbb
lock
push
xor
xor
or
lcall
mov
pop
jno
ret
iret
dec
dec
lock
mov
insl
out
ret
fs
clc
lods
int
xchg
sbb
xchg
ds
mov
test
and
sbb
push
jb
lahf
insb
lods
mov
daa
pop
jmp
test
sub
cli
pop
jge
pop
fistps
loope
mov
adc
xchg
pop
inc
adc
xchg
repnz
test
ljmp
test
outsl
jmp
lds
push
lods
mov
mov
inc
push
mul
out
cld
cs
loope
out
out
cli
and
xor
shll
fcoms
loop
call
xorl
xor
pushf
lods
arpl
fildl
iret
add
addr16
or
loopne
sahf
inc
pop
cmp
push
movsl
cmc
aas
daa
gs
mov
lret
fisubrl
fisubrl
popf
outsb
inc
fistps
sti
loopne
lods
jl
add
cmp
fistpll
jl
and
lret
scas
shrl
lcall
mov
in
lods
cwtl
imul
jl
or
sbb
cld
inc
pusha
jg
out
jo
sub
subl
ret
xor
mov
push
mov
pop
call
pusha
cld
testb
mov
push
adc
vpxor
stc
insl
das
ja
fcomip
sub
adc
sub
or
int3
ja
ljmp
pop
xchg
jne
dec
pop
xchg
out
push
adc
lahf
dec
shlb
inc
in
dec
popf
frstor
push
xor
out
xor
rolb
mov
nop
insl
pop
push
fidivrs
loopne
hlt
call
ljmp
and
bound
insl
ret
push
in
jg
imul
xchg
lret
xlat
bound
decl
sub
lcall
nop
or
pop
mov
sarb
sub
pop
mov
adc
jae
mulb
imul
int3
sub
call
inc
adc
sub
sar
sbb
out
into
int3
daa
cmpsb
add
sti
fistps
push
addr16
pop
xchg
mov
rcrb
cmpsb
sbb
jg
ljmp
dec
mov
cltd
dec
test
pop
sub
lret
dec
aas
rorl
jne
push
and
rol
mov
xchg
in
outsb
push
arpl
jl
sub
push
or
or
movsb
xor
or
addr16
lea
mov
fiaddl
sbbl
scas
dec
loope
add
incl
dec
xchg
mov
out
xchg
mov
icebp
mov
jb
pop
dec
adc
pop
cmovno
ljmp
and
movsb
pop
dec
adcb
imul
mov
jg
xor
lds
and
fstpl
aam
js
cmpsb
aas
scas
adc
push
or
mov
icebp
mov
notl
xchg
ss
out
pop
push
adc
cmp
out
push
loopne
fcmovnbe
sbb
jns
sbb
sbb
mov
pop
outsl
inc
call
and
std
jl
gs
fcomps
sbb
xlat
add
test
xchg
shll
das
cmp
add
sub
cmpsb
mov
cmp
rcll
ljmp
dec
mov
and
dec
enter
leave
jo
inc
sub
in
ljmp
xor
xchg
xchg
rcr
nop
rcrb
aam
decl
stc
xor
lret
nop
dec
dec
mov
dec
jmp
mulb
add
popf
jecxz
push
xchg
hlt
lahf
adc
jb
mov
mov
fsubrs
or
inc
mov
aam
in
add
xor
arpl
jecxz
rcrl
pop
cmp
jl
call
je
in
cmp
rorl
lea
xchg
mov
ljmp
mov
jle
xchg
aad
insb
lds
cmp
adc
lds
push
je
xchg
fistps
mov
push
sub
insb
pop
js
call
daa
arpl
or
inc
lock
into
sbb
mov
sarb
dec
or
lcall
ljmp
xor
push
pop
pop
inc
jmp
mov
mov
js
jle
add
ljmp
fs
inc
dec
movsl
lahf
lahf
rcrl
in
insb
mov
xchg
call
or
push
mov
out
pusha
adc
call
dec
stc
pop
lods
mov
and
dec
cmc
mov
mov
pushl
mov
push
notb
add
add
divb
cltd
das
adc
call
insl
fcoml
sub
notb
lea
xlat
fstl
mov
jnp
mov
and
inc
xchg
jl
mov
cwtl
scas
out
lcall
xchg
clc
push
push
inc
scas
lods
add
jp
push
fwait
cmp
shl
cld
cmc
pushl
imul
ret
pop
stos
pop
jle
lret
xor
int
mov
sub
decb
xchg
pop
loopne
dec
push
scas
scas
sbb
add
pushf
shl
cmp
stc
sahf
dec
inc
and
jecxz
inc
movsb
test
nop
fldt
dec
decb
icebp
dec
cmp
out
aad
test
mov
sbb
cmp
mov
testl
rclb
mov
add
incl
sahf
mov
out
fisttps
mov
jecxz
mov
jg
rorl
popf
int3
lods
repnz
push
pop
iret
rcll
sbb
test
ret
jmp
ljmp
movb
outsb
es
ss
repz
call
xor
xchg
pmullw
pop
sub
xor
popf
fmuls
xchg
call
fs
clc
xor
es
rorb
negl
sbb
mov
out
or
ljmp
or
das
insb
inc
inc
lods
jo
hlt
push
xlat
fistl
mov
mov
add
xchg
xlat
rcrl
push
push
pop
mov
and
cmp
mov
outsb
dec
push
sbb
jnp
mov
js
in
testb
jge
jg
lock
and
shr
cmpsl
out
orb
stos
ljmp
push
pushf
mov
mov
mov
lds
inc
inc
xor
jge
dec
int3
jmp
push
jbe
in
jne
push
flds
hlt
dec
mov
int3
outsb
repz
mov
call
mov
jge
jns
in
imul
add
jbe
push
or
data16
pop
imul
sti
push
sbb
push
mov
mov
aam
in
out
add
mov
jmp
das
cmp
in
enter
ds
nop
int3
ds
fimull
inc
xor
stos
sbb
xchg
ret
jg
ret
adc
mov
mov
or
sbb
insb
fidivrl
cmp
mov
mov
cmp
push
mov
cmpsl
call
sbb
sub
mov
cwtl
adc
push
ficompl
dec
int
lds
mov
pop
xor
insl
or
js
sbb
das
sar
cli
pop
shll
insl
mov
xchg
nop
fs
pushl
fdivrl
rorl
sbb
out
pop
pushf
add
pop
mov
dec
xchg
outsb
cwtl
jmp
adc
sub
jo
and
arpl
push
pop
push
pop
decl
int
sahf
jns
out
outsb
jge
fadds
push
shrb
lods
mov
push
add
mov
mov
out
icebp
jl
dec
arpl
add
inc
sbb
shlb
sub
ja
dec
dec
mov
mov
dec
rol
xor
ljmp
stos
mov
sbb
ffreep
mov
adc
or
in
pop
sbb
and
jp
lcall
jg
outsl
mov
sti
jge
pop
jno
inc
mov
sahf
or
test
iret
xchg
test
outsl
mov
jl
negl
lods
sbb
xchg
adc
fildll
movsl
cs
repnz
mov
adc
fcomip
decl
clc
push
xchg
jmp
sbb
pusha
into
sub
incl
fwait
jnp
jge
pushf
out
leave
mov
dec
idivl
insl
dec
jo
mov
incl
ljmp
or
push
and
inc
adc
pushl
shl
aas
mov
xchg
push
sbb
mulb
incl
jg
sbb
lock
jg
lods
push
xor
fldl2t
sub
cmpsl
andl
xchg
cs
js
popa
inc
insb
ja
clc
mov
push
sbb
arpl
pushl
clc
cmpsl
pop
rolb
push
scas
jae
stos
xabort
dec
push
rclb
cmp
or
mov
js
jg
jae
adc
sub
getsec
lea
mov
inc
out
movsl
dec
call
incl
inc
jecxz
sbb
out
jns
das
sub
ja
sbb
and
sub
mov
pushf
lcall
ljmp
and
dec
xor
or
push
push
mov
call
push
js
and
leave
into
mov
test
inc
fstp
push
iret
les
add
jg
je,pn
mov
iret
sahf
push
je
rcrb
dec
out
xor
in
mov
lock
xchg
pop
ss
inc
out
push
out
pop
data16
sbb
sbb
sbb
icebp
add
sbb
nop
push
fwait
sar
incl
rorb
sar
pop
enter
cmp
sbb
lods
decb
jg
es
roll
aas
push
mov
mov
and
mov
pop
or
ss
ljmp
mov
fstp
lods
mov
fsub
and
stc
rcrb
loop
cmpsl
aad
pop
test
xchg
cmp
mov
or
jle
mov
aam
pop
sub
add
std
leave
or
aam
dec
fs
sbb
push
ds
pop
sbb
nop
xchg
inc
sbbb
jmp
and
push
pop
push
or
and
pop
cmp
sar
jl
mov
and
loopne
je
ds
pop
pop
in
sbb
call
mov
or
cmp
or
pop
pop
popf
imul
incl
das
sub
dec
js
jnp
imul
mov
jl
sti
dec
je
dec
push
inc
xchg
jecxz
lea
cmc
jg
test
sahf
popa
lcall
mov
fs
lcall
fcomip
orl
movsl
or
add
gs
jg
mov
icebp
shlb
mov
popl
test
inc
ja
leave
xlat
fnstcw
mov
pop
mov
xor
pop
pop
dec
or
decl
addr16
sbb
sbb
outsb
and
jecxz
sbb
pop
inc
jnp
cmp
push
std
ljmp
dec
bound
push
das
bound
pop
lcall
pop
out
gs
add
aaa
fidivs
ja
push
stc
and
fistl
aas
idivb
out
aas
jg
shl
or
es
dec
inc
mov
mov
jo
cmpsb
jmp
mov
shl
push
sti
inc
sub
stc
daa
or
or
cmp
gs
fdivrs
fisttps
dec
orb
sar
pop
jl
xor
mov
inc
cmp
out
fistpll
rorb
pushl
pusha
repnz
xchg
dec
pushl
pushl
iret
xchg
or
aad
lock
decl
inc
outsb
sub
mov
fidivl
push
incb
clc
mov
ljmp
dec
adc
sbb
mov
ljmp
fwait
out
lock
roll
out
mov
xor
jecxz
and
jns
push
mov
call
push
stc
push
fbstp
push
loopne
fidivs
andl
sar
es
out
jmp
adc
shll
cmp
repz
call
sahf
lea
insl
ret
aam
inc
jbe
ret
push
jae
mov
sbb
jnp
sub
or
inc
je
inc
andb
jns
push
je
ljmp
out
mov
ljmp
icebp
and
mov
or
ja
mov
mov
movsb
jle
sub
lcall
dec
ljmp
mov
xchg
lret
mov
and
lcall
mov
dec
adc
pop
pop
test
lea
pop
aas
and
sub
lds
dec
cmp
xchg
mov
xor
xor
mov
es
dec
xchg
jecxz
jg
push
and
xchg
jno
fwait
cld
call
lret
stos
push
lock
lea
stos
mov
dec
push
bound
add
pushl
push
xlat
mov
push
loop
sbb
dec
negb
imull
mov
push
imul
daa
lret
movsb
mov
adc
xchg
sbb
fisubl
inc
lds
sbb
push
dec
sahf
rcr
fnstcw
les
push
ljmp
std
popa
cltd
test
sbb
push
sub
lahf
dec
or
xor
test
pushl
sahf
adc
in
sbb
movsb
sbb
sar
pop
pop
cmp
and
mov
jg
xchg
pop
or
push
pop
and
sub
mov
mov
outsb
pop
lock
xchg
rcrl
movsl
movsb
fstl
push
addl
cltd
pop
out
lea
push
inc
ljmp
cwtl
mov
rcrl
adc
stos
pop
cmp
pop
lock
popl
sub
outsl
add
lock
dec
mov
jo,pn
cmp
pusha
pushf
test
mov
sub
adc
decl
mov
and
sbb
inc
inc
xchg
inc
jno
pop
std
add
jecxz
pop
xor
mov
cmp
dec
test
inc
je
and
pop
jle
subb
sub
sbb
cmpl
jge
imul
mov
mov
sbb
jge,pn
cmp
jg
sbb
xchg
add
out
jae
jb
ret
mov
cs
into
aad
add
daa
std
mov
scas
push
clc
pop
push
dec
mov
xlat
insb
jb
sub
in
cld
incl
cmp
sahf
sub
jmp
add
cmpsb
xor
incl
mov
movsl
scas
fldt
or
xchg
mov
cmp
mov
or
sar
fcmovne
rcrl
xchg
mov
xchg
imul
jg
clc
int3
ss
out
adc
les
xchg
lcall
cmp
ret
repz
push
movsl
mov
test
pop
insb
jae
out
clc
incl
push
or
jae
adc
add
mov
fistpll
out
mov
pop
jbe
push
ret
scas
jg
mov
mov
pop
in
sti
jns
sbb
je
imul
push
cmp
mov
scas
pop
lods
fnstenv
xor
lcall
fwait
pop
jmp
data16
dec
inc
popa
cmp
sub
movsb
fcomp
shlb
xor
int
adc
cmp
jecxz
xor
leave
adc
mov
pushl
and
sbb
sbb
in
int3
push
and
je
hlt
mov
pop
inc
xchg
adc
or
jle
fsubr
stos
pushf
jg
add
cmp
xchg
repnz
aad
dec
push
mov
adc
sahf
pop
mulb
jb
outsb
inc
fdivs
pop
lock
jle
fs
lds
jne
cli
add
push
stos
mov
call
mov
or
into
sub
mov
mov
movsl
fcoms
mov
data16
xchg
jp
xrelease
std
hlt
mov
imul
dec
in
push
repnz
rcll
jmp
xchg
dec
push
cmc
stos
add
lret
cli
lods
mull
mov
xor
mov
loope
std
decl
sarl
sub
fnstsw
clc
mov
cmc
pop
pop
cld
dec
mov
call
mov
into
sbb
inc
repnz
mov
mov
sbb
test
inc
lcall
jo
sub
pop
jle
jle
jns
pop
ficoml
pop
decl
leave
sub
cmp
mov
dec
outsl
inc
popf
inc
inc
mov
fstp
mov
ret
jmp
or
ss
clc
or
adc
loope
jb
nop
adc
ret
lret
std
pushl
xor
ret
add
stos
dec
repz
pop
sub
jbe
mov
sbb
aaa
loop
push
mov
pop
in
mov
pusha
xchg
inc
pop
scas
fists
adc
test
lcall
lret
std
mov
test
int3
in
mov
je
jecxz
int3
mov
outsb
stc
ljmp
push
setp
mov
in
xchg
adcb
aaa
xor
mov
dec
fs
adc
cmp
test
nop
stc
test
mov
scas
mov
jecxz
jnp
mov
inc
or
or
decl
daa
and
fsubr
pop
sti
rcll
out
inc
or
in
test
test
add
lcall
fdivrl
pushf
mov
mov
fwait
loope
push
jo
je
rorl
je
mov
inc
push
adc
test
and
jmp
repz
sbb
xchg
rcrl
lods
out
incl
aas
je
in
sub
xchg
push
lahf
adc
adc
outsb
add
and
push
jno
adc
xchg
repz
stos
xchg
and
inc
rcl
mov
dec
aas
in
inc
sub
cmpsl
imul
pmulhw
mov
adc
cld
jmp
xchg
testl
sub
rcrl
add
jno
lods
jnp
or
dec
lcall
sti
adc
dec
stc
imull
cwtl
loop
inc
pop
movsb
cmp
pop
nop
lcall
pop
scas
lods
call
sbb
sub
test
inc
jb
push
icebp
popf
lods
dec
xor
mov
cmpsb
sub
xor
dec
test
lods
push
incl
mov
push
sahf
aad
add
lahf
pusha
scas
rcll
loope
or
mov
push
push
dec
std
or
mov
xchg
lret
pushf
repz
inc
into
ja
pushf
jo
sbb
pushf
jmp
insb
subl
dec
xchg
adc
pop
jns
sbb
dec
insb
mov
aas
cwtl
pop
loopne
ljmp
jecxz
lcall
mov
xchg
cmp
adc
mov
dec
lret
inc
mov
lods
mov
divb
dec
pop
in
jg
and
jecxz
cmpsl
icebp
pop
icebp
lock
ljmp
out
es
inc
ret
mov
es
andl
mov
sbb
lcall
cmpsb
in
xchg
aad
fdivs
insb
test
mov
dec
into
call
add
cmpsl
popf
cmp
icebp
or
shr
pop
mov
fcomi
sahf
jle
aaa
ljmp
in
adc
clc
push
inc
inc
pop
iret
fdivs
sub
sahf
cmp
cld
decl
enter
mov
mov
loope
xor
rol
mov
adc
push
push
nop
scas
sbb
mov
pop
jnp
add
add
lcall
jmp
out
and
lcall
es
sub
arpl
pop
add
andl
lahf
mov
mov
shr
clc
cmp
std
decl
jne
test
cmpsl
xchg
pop
cld
jnp
imul
jl
call
cmp
hlt
fildl
mov
and
insl
inc
adc
xlat
adc
jmp
xlat
scas
inc
imul
or
fcoml
data16
ret
mov
pop
sub
cld
dec
inc
or
bnd
add
mov
iret
fiaddl
lea
push
mov
and
inc
andb
jge
or
push
jle
decl
incb
adc
xlat
push
xlat
loop
shr
test
xchg
js,pt
push
jne
xor
cli
icebp
lret
cld
decl
lock
adc
fisttpll
sbb
into
mov
decl
mov
jg
aad
out
dec
add
lret
jmp
sahf
mov
inc
push
std
sub
pop
sarl
nop
or
adc
pushl
pop
repnz
int3
jno
mov
jnp
iret
cmpl
jg
popw
pop
jg
fsubrs
fsubrp
jmp
adcl
out
mov
adc
push
jg
test
decl
pushf
xchg
dec
je
cmp
das
mov
xor
iret
sub
xchg
xchg
mov
pop
icebp
out
insb
cmp
pop
inc
aas
mov
mov
adc
xchg
add
jg
pusha
cmovge
xchg
stc
out
ss
outsb
push
push
cld
ljmp
fmuls
imul
int
inc
and
mov
pushl
lods
movsb
js
or
xor
cwtl
xor
cmpsl
cmp
mov
call
loopne
jo
mov
inc
xor
test
shl
dec
es
inc
jmp
stos
cmp
push
mov
dec
adc
fwait
imulb
movb
pushl
out
sub
aam
jg
cmpxchg
fadds
and
xor
pop
cmp
cltd
repz
enter
bound
cltd
das
ss
sahf
lods
mov
xchg
fidivrs
cmp
int
or
imul
imul
lock
mov
jp
xor
sahf
sub
or
nop
nop
inc
mov
into
call
jae
sub
cmp
icebp
movsb
pop
daa
sub
test
loope
inc
cli
mov
fldl
hlt
dec
icebp
int3
test
lahf
jnp
lods
jns
mov
pop
push
sub
inc
inc
mov
dec
dec
push
or
into
rorb
mov
add
jp
inc
mov
incl
mov
cmp
mov
mov
daa
inc
cmp
sbb
idiv
jg
icebp
and
adcl
jae
adc
clc
jmp
fistpl
dec
loope
mov
inc
in
lahf
jbe
add
call
movsl
out
pop
in
insl
mov
push
dec
inc
movsb
data16
sub
sbb
mov
movsl
call
lret
lock
test
cltd
test
rcr
fnstcw
mov
cld
cwtl
movsl
cli
and
ss
call
loop
sub
mov
mov
test
mov
in
ficoml
imul
popa
push
pop
hlt
incl
aas
jmp
pop
mov
je
call
jecxz
jnp
cltd
add
push
cmp
adc
shrl
push
lret
push
lea
insl
andb
cmp
adc
pop
insb
jmp
loope
dec
pusha
jo
add
push
sbb
stos
ljmp
inc
lea
jne
mov
mov
pop
inc
fidivl
mov
jl
push
pop
pop
aad
lock
add
dec
add
xor
movsl
push
cmp
sub
stc
cwtl
jg
jg
out
rclb
inc
xchg
popf
pop
jg
pop
push
add
xor
cld
dec
pushl
add
xor
jecxz
idiv
or
inc
sar
out
clc
in
pop
push
mov
xchg
pop
rclb
jecxz
or
fsubl
ljmp
push
fiadds
mov
mov
pop
andb
jo
push
addl
xor
fistl
je
mov
push
movsb
mov
shll
stos
pop
addl
push
mov
xlat
movsb
pushf
add
pushl
imulb
xchg
push
loope
add
dec
cltd
push
call
mov
sbb
pusha
mov
out
jno
shll
jmp
push
sub
cmpb
push
lock
jbe
xlat
mov
mov
or
push
lret
stc
lcall
cmp
subl
aad
ljmp
adc
sub
imul
mov
jg
movsl
xor
push
push
jo
ljmp
inc
inc
adc
aaa
cld
call
sub
mov
xchg
addr16
or
incl
stos
addr16
jnp
pop
add
outsl
xchg
cmp
stos
push
xchg
and
cmpsl
jmp
dec
clc
push
sahf
inc
push
je
outsb
adc
cmp
dec
sahf
stc
mov
shrl
adc
incl
push
addr16
and
dec
mov
xchg
inc
pop
xchg
lcall
ljmp
jmp
call
rcrl
daa
xchg
mov
mov
jg
decl
sbb
dec
ret
xorl
fwait
mov
jg
ljmp
lret
cmp
or
das
call
fadd
arpl
sub
jmp
cmp
test
xchg
mov
les
fisttps
shlb
or
mov
push
dec
mov
icebp
mov
outsb
mov
into
mov
pushl
and
scas
scas
mov
mov
mov
add
fs
outsl
repz
inc
push
call
xor
push
popf
sub
sbb
hlt
jbe
sbb
lret
or
xor
xor
xchg
iret
jb
sbb
cs
call
cli
xchg
ljmp
jo
rolb
into
mov
enter
pop
in
adc
mov
movdqa
adc
pushf
adc
xchg
xchg
inc
pop
ljmp
aad
je
cmp
dec
cld
adc
jb
cs
or
adc
mov
mov
jg
ja
loopne
cwtl
mov
rorl
mov
outsl
iret
cwtl
int3
lock
cmp
xor
jg
call
je
mov
sub
jmp
ljmp
cmpsb
loopne
pushf
lea
mov
mov
scas
insb
jg
bound
xchg
add
sbb
mov
aaa
gs
mov
incl
loop
sahf
xchg
sbb
aaa
fadds
xor
sarl
mov
adc
dec
jno
out
mov
arpl
push
fcoms
pushf
sub
std
jp
fbstp
pop
aad
push
and
xor
outsl
mov
les
insl
jo
push
sub
fsubrs
inc
xor
jg
and
dec
in
lcall
cmpsl
jae
sub
mov
sbb
or
jg
mov
repz
jl
mov
bound
std
push
xacquire
bound
aas
stc
pop
xchg
jle
mov
adcb
mov
sar
pushl
ljmp
inc
push
and
or
and
cwtl
rcr
sub
loopne
pushl
push
mov
insl
push
push
sub
testb
dec
aas
add
pop
or
cmp
insl
jp
jle
mov
sbb
mov
push
push
jecxz
in
test
insl
push
scas
xchg
out
icebp
ret
or
jmp
cs
gs
jno
cld
ljmp
andl
aas
pop
cmp
xchg
inc
mov
add
push
fmull
push
mov
repz
clc
call
and
mov
mov
leave
out
sub
cmp
inc
jmp
incl
xor
sub
test
aaa
or
sbb
and
adc
fxam
mov
sbb
lcall
sub
xor
imul
orb
std
or
pop
and
jb
push
idiv
cmp
mov
mov
dec
sub
jle
dec
scas
xor
std
xchg
and
jp
testl
fcomps
and
outsl
xor
call
ds
sbb
sub
mov
lret
andb
lea
or
in
mov
insl
cs
ds
incl
in
sti
rcr
jnp
adc
sbb
cltd
fimull
mov
pushf
xor
stos
sbb
adc
pop
loop
inc
ljmp
fbld
xchg
and
outsb
dec
xchg
sub
movsl
daa
clc
pushl
cmpsb
push
fcompl
jmp
hlt
ja
roll
in
xor
push
sub
call
pushl
int3
clc
mov
xchg
test
xor
adc
add
call
ljmp
adc
jae
lods
xor
xorb
add
jnp
add
push
std
call
int3
stos
jle
dec
pop
sbb
mov
sbb
jg
mov
rorb
jnp
mov
jp
insl
and
pop
and
sbb
loope
cmpsl
ljmp
movsb
and
xor
push
jmp
fwait
mov
xchg
out
es
dec
insb
leave
decl
mov
jl
jbe
sbb
cs
jmp
sbb
mov
popa
adc
push
jmp
xchg
mov
call
pop
mov
call
pop
pushf
mov
daa
dec
dec
fs
leave
xchg
inc
dec
dec
inc
lea
xchg
sbb
pushl
rcrl
adc
jae
xchg
sub
push
mov
dec
popa
daa
mov
maskmovq
mov
popa
sub
push
pop
xor
adc
or
push
pop
mov
ljmp
pushl
push
mov
xchg
pusha
xor
push
cli
rcrl
fwait
xchg
scas
lea
fdivrp
incl
nop
test
punpckhwd
mov
subl
mov
lret
dec
lret
and
mov
js
inc
jl
cmc
mov
aaa
movsl
fsubr
mov
decl
test
xor
dec
xchg
daa
lahf
test
pop
jp
inc
outsl
mov
jmp
out
out
outsl
pushl
rol
aaa
pop
inc
cli
lret
mov
scas
xlat
dec
ficoml
jle
notl
mov
fsubs
jnp
out
jo
mov
dec
incl
and
in
jmp
sahf
push
jmp
cmp
pop
and
add
sbb
fcompl
orb
adc
add
mov
cmp
stc
inc
je
testl
inc
ds
daa
mov
outsl
shlb
aas
loop
sbb
cmpsb
adc
jmp
push
add
out
cmpl
cmp
jbe
insl
test
and
jmp
into
sbb
dec
jbe
jnp
lods
mov
sbb
imul
outsb
negl
dec
adc
inc
outsl
jne
mov
arpl
sub
pushl
test
js
cwtl
in
test
xchg
dec
cld
addr16
mov
inc
adc
cmp
addl
int
int
imul
push
sahf
xchg
std
dec
test
packssdw
mov
or
pushf
pushf
sub
mov
imul
sbb
decl
outsl
loopne
push
adc
mov
mov
pop
cmp
sahf
adc
loope
ljmp
or
xor
in
mov
sbb
fidivs
out
push
loopne
stos
pushl
imul
adc
xchg
adc
adc
push
or
ljmp
lret
bswap
sbb
scas
stos
add
sbb
jmp
sub
jp
sbb
ljmp
inc
sarb
mov
mov
jae
test
gs
xchg
push
pusha
cli
repz
test
ds
dec
cmp
bound
mov
mov
mov
sub
mov
push
mov
clc
mov
push
cmpsb
cmp
push
rdtsc
cld
jbe
clc
xchg
or
stos
ret
fiadds
jle
pushl
outsl
or
dec
sbb
xor
push
popf
xor
call
addb
fisttpll
and
daa
add
or
loopne
pushl
mov
push
insb
das
mov
xchg
lcall
jg
mov
mov
push
mov
out
iret
fsubrl
pushl
inc
sti
rol
sbb
mov
inc
add
xchg
repz
dec
out
jge
ljmp
mov
int3
les
mov
pop
lods
movsl
or
cs
dec
add
outsb
cld
push
sbb
mov
xor
mov
imul
hlt
pop
pop
loope
int
dec
fstps
add
inc
adcl
and
imul
test
test
mov
jp
jmp
incl
jbe
inc
jns
cmpsl
int3
xor
scas
popa
int3
repnz
icebp
jnp
mov
insb
leave
jg
cmp
arpl
ljmp
jb
push
xchg
incl
popf
sti
xchg
mov
outsb
aaa
push
jbe
gs
outsb
sub
rcrl
inc
lds
add
aaa
subl
pop
fcmovu
adc
mov
fdiv
jmp
iret
cmp
xor
inc
sub
ret
mov
lahf
sbb
filds
and
popf
xchg
int
and
je
test
adc
loop
inc
push
pop
fcoms
lock
inc
inc
xchg
mov
pop
fs
mov
lods
lods
mov
or
mov
jl
pop
inc
jae
xchg
adc
add
jmp
aaa
mov
xchg
das
pusha
nop
imul
push
fdivrs
sub
mov
lret
cmp
out
pop
std
dec
mov
in
ljmp
mov
call
pop
dec
fstp
and
inc
sahf
pop
sti
add
inc
or
fcoml
decl
pcmpeqw
mov
cli
xchg
adc
cs
xchg
dec
add
iret
inc
jp
pop
nop
repnz
mov
shll
push
cltd
popf
jns
mov
push
inc
jmp
push
pop
push
pop
jmp
add
push
add
fbld
jbe
mov
fisttps
mov
ljmp
add
daa
and
sub
xlat
jae
and
pop
out
pop
loope
mov
rclb
call
mov
jle
mov
pop
push
push
shll
js
or
test
pushf
xchg
xchg
mov
dec
sub
cltd
jle
adc
in
inc
fs
ret
paddd
andb
out
outsl
ret
cmpb
push
in
xchg
hlt
mov
sarb
mov
adc
adcb
cld
scas
push
ja
pop
popa
movl
dec
adc
ret
mov
push
stos
push
int3
dec
mov
mov
cld
out
mov
mov
andl
mov
loopne
pop
js,pn
and
cwtl
je
test
dec
cmpsb
pushl
dec
push
sbb
aaa
mov
je
daa
xchg
push
inc
push
push
and
loope
xchg
aas
rcll
movsb
sub
ret
adc
or
je
pop
ret
cld
call
adc
inc
inc
adc
sub
jl
es
jle
mov
and
xchg
xchg
mov
pusha
cltd
xchg
arpl
mov
mov
outsb
aam
call
movsb
add
xchg
cmp
inc
pop
call
pop
dec
rcrl
in
mov
out
test
fsubrs
pushf
daa
rol
lds
sbb
mov
or
mov
pop
clc
ret
xchg
mov
dec
adc
cmp
sbb
aaa
cld
jmp
ja
mov
mov
js
cld
or
les
call
loope
xor
push
cmp
mov
jnp
cmpsb
mov
and
ljmp
jno
out
inc
sbb
and
fistl
mov
pop
test
lret
inc
call
inc
cltd
lock
sar
add
clc
dec
jbe
add
mov
dec
lods
cmp
test
cmp
fs
fs
jb
xor
adc
fwait
sar
call
cli
sub
add
fnstenv
mov
pop
inc
dec
pop
subl
hlt
mov
adc
cwtl
mov
mov
in
mov
ljmp
nop
inc
sbb
cld
mov
jge
insb
out
cmp
jae
push
mov
mov
lock
js
adc
sbb
stos
push
cmpsl
push
js
scas
int
adc
add
push
into
xlat
mov
cld
fwait
pop
rclb
push
or
jg
ljmp
jecxz
or
cmp
cmp
out
adc
xor
repz
in
imul
sbb
pop
or
ds
cmp
mov
lea
decl
fsubrs
dec
inc
mov
sahf
int
mov
dec
push
out
jmp
jmp
cmp
push
lea
loope
fs
pop
sbb
jb
movsl
or
xchg
dec
adc
ss
mov
out
incl
pop
jbe
fdivrl
mov
xchg
in
push
jl
movsl
insb
lahf
ja
movsb
lret
cmpsb
pop
ss
test
loop
and
call
mov
idivb
mov
adc
pop
jg
push
xlat
inc
test
mov
jmp
cwtl
pop
cmc
dec
sbb
add
or
hlt
cmp
cs
aad
lods
sbb
jns
cmp
loop
ds
loope
ret
sub
incl
popl
jge
mov
inc
repnz
pop
mov
pop
adc
mov
mov
incl
sub
test
hlt
xlat
jnp
xchg
sbb
sahf
push
jl
sti
sub
lcall
and
mov
ds
add
dec
inc
in
aad
in
insl
in
jb
push
jne
lret
mov
cmp
xor
out
enter
pop
mov
xchg
mov
jmp
sbb
gs
cmpsb
fisttps
push
mov
sbb
cld
sbb
mov
lods
pop
mov
fisttpl
out
push
stc
loope
fadds
mov
leave
cld
daa
mov
push
pop
rorb
inc
or
mov
xchg
adc
mov
mov
inc
mov
bound
add
mov
and
xorb
loopne
loopne
leave
xchg
lea
jbe
out
lcall
or
xchg
or
insl
in
xor
push
jns
fistpll
repnz
sbb
mov
jp
sub
jle
test
xchg
pop
jno
ret
jnp
in
push
in
xor
lcall
jg
sti
jg
lods
cmpsl
xchg
pop
push
int
mov
pusha
inc
sub
xchg
pop
inc
popf
decl
inc
enter
mov
dec
xchg
mov
pop
int
and
xor
and
sbb
lcall
dec
scas
mov
fnstcw
leave
xor
lret
mov
sahf
pop
std
lods
xchg
shrb
mov
ljmp
js
or
xor
sbb
mov
lahf
mov
mov
fwait
ret
mov
jnp
loope
mov
in
sbb
adc
mov
dec
mov
shlb
push
xchg
out
dec
imul
pop
in
cli
mov
mov
add
and
stos
fsubrs
or
fcomps
dec
call
icebp
test
dec
dec
push
cltd
pop
pop
mov
add
xlat
std
mov
adc
mov
nop
jmp
mov
addr16
test
mov
jle
ljmp
ljmp
pop
ret
sub
imul
stc
push
cmp
stos
mov
and
add
jb
dec
sub
pushl
bound
pop
loop
mov
movsb
push
adc
test
adc
or
adc
call
push
sub
cmpsl
pushf
test
cmp
fldenv
jecxz
int3
lret
push
jno
cmp
call
lahf
movsb
mov
stos
mov
xchg
in
dec
cmc
aaa
fwait
jns
jbe
and
push
or
push
scas
dec
ljmp
mov
pop
cs
aaa
loop
pop
push
shr
push
or
lcall
sbb
inc
push
sub
hlt
inc
inc
cld
in
mov
jmp
clc
jg
into
out
jl
jl
inc
pop
or
adc
and
dec
and
xor
xor
aaa
aad
pusha
mov
xor
out
fstps
or
fucomp
sub
mov
pop
mov
call
faddl
leave
mov
mov
shl
fsubs
adc
mov
ljmp
dec
jno
je
push
and
std
dec
test
ljmp
mov
mov
and
idiv
decl
mov
pop
xchg
std
data16
sub
xlat
push
pop
notb
ljmp
f2xm1
je
mov
dec
lret
jp
add
cmp
loope
jg
lcall
push
mov
mov
xor
ja
loop
mov
push
jbe
in
push
cld
jle
in
mov
cmpsb
inc
inc
mov
sbb
inc
cmp
push
mov
cli
jg
je
inc
andl
movsl
jmp
roll
sub
lcall
cmp
pop
inc
dec
iret
cmp
xchg
fstp
and
mov
hlt
sub
call
mov
ss
lahf
int3
mov
pop
mov
xchg
cmpsb
daa
lea
jp
cs
push
scas
lds
sbb
rcll
lods
push
fs
loop
jae
or
dec
cli
ljmp
pop
sub
xrstors
or
js
pop
into
jmp
add
hlt
cmp
lods
jmp
sub
adc
fwait
or
adc
ljmp
or
push
jmp
add
xor
fidivl
repz
std
lcall
call
fdivrp
pop
into
pop
mov
pop
adc
test
cmp
jbe
aad
dec
pushl
or
outsb
andl
iret
fdivrl
aam
and
lret
cltd
push
sbb
lock
fildll
pop
push
jle
jnp
inc
jg
lds
test
aad
push
cmp
xor
or
pop
add
pushl
jno
mov
shrb
dec
lods
pushf
cs
mov
orl
incl
push
fcomps
push
pop
push
mov
ret
xor
mov
pop
inc
pop
and
incl
mov
adc
mov
decl
sbb
cmp
sub
js
in
test
sub
divl
dec
pop
call
or
cmp
call
call
les
daa
out
xor
mov
repz
jns
cwtl
inc
xor
fcoml
mov
cmp
daa
pushf
adc
test
mov
push
call
sbb
addr16
in
jg
mov
sub
in
inc
mov
mov
js
add
lcall
incb
inc
stc
addr16
fldl
pop
sbb
jne
daa
push
out
fisttpl
add
into
jecxz
inc
dec
stos
sub
adc
sbbl
lcall
pavgb
jns
mov
int3
mov
lahf
pop
mov
mov
pop
jbe
xlat
bound
add
jmp
pop
xor
loope
or
fimuls
dec
jno
scas
cmp
dec
xor
pop
and
pop
cmp
decl
scas
imul
aas
insb
pop
cmpsl
jo
and
push
sbb
mov
rcrb
xor
push
pop
mov
sti
push
std
ret
xor
inc
mov
inc
ret
jg
jbe
test
jo
and
dec
adc
cmc
dec
or
aaa
outsb
les
mov
shll
xor
push
mov
lods
jns
xor
xchg
movsb
imul
imul
mov
int
or
cmp
stc
pop
jg
add
jbe
inc
shl
push
aad
adc
adc
int3
cld
jmp
test
movsl
mov
stc
pop
push
insl
xlat
fidivs
fs
sub
xchg
xchg
adc
jg
and
das
fistl
inc
xchg
pop
fildll
shlb
or
sti
scas
jge
push
jle
sbb
pop
jmp
filds
rcr
stc
adc
daa
mov
mov
mov
flds
in
out
mov
fs
sub
mov
lret
xor
jne
lcall
pop
pop
icebp
sarl
scas
filds
mov
lock
jns
mov
xchg
iret
loop
and
stc
arpl
push
jo
add
and
push
leave
fistpll
mov
loop
movsb
xchg
push
adc
jmp
sbb
mov
ret
or
lods
rcl
cmp
mov
imul
inc
in
lods
jmp
in
icebp
adc
imul
call
lea
ficoml
iret
xchg
mov
lret
cs
pop
test
jg
cmc
jnp
aaa
push
mov
push
lds
jl
lods
push
addr16
mov
call
sbb
inc
and
push
lods
mov
pop
and
lret
xchg
aad
mov
lcall
outsl
cmp
arpl
jbe
int
pop
or
mov
mov
adc
incl
mov
jns
pusha
push
dec
adc
sub
cmp
mov
add
push
ss
adc
pop
adc
sbb
call
xor
push
cli
pop
mov
cmp
mov
aaa
push
push
mov
imul
mov
incl
mov
dec
mov
outsl
cmp
xchg
add
inc
mov
jmp
dec
sbb
and
shrb
lret
or
xchg
fiadds
cld
jmp
call
add
push
xchg
cmc
cwtl
sbb
dec
outsl
push
in
mov
out
clc
pushl
pop
mov
lock
pop
roll
cmp
in
pop
je
hlt
cli
mov
lahf
and
pushl
dec
test
push
iret
int3
nop
lods
aas
out
or
leave
pop
dec
xchg
mov
call
push
shll
movsb
loopne
adc
lods
add
push
insl
sub
cmp
ljmp
push
pop
div
cmp
mov
xchg
xor
pop
inc
push
lcall
mov
inc
xchg
mov
ret
repnz
icebp
decl
cmp
in
lods
fwait
stc
negb
and
popw
testl
test
lret
adcl
xor
cli
test
mov
popf
rcrb
jmp
incl
xor
std
das
cmp
jnp
ja
sbb
aad
cmpsb
push
lret
mov
jp
push
jbe
pusha
jl
push
xor
imul
fsub
aaa
xchg
sbb
out
push
xor
mov
sub
and
je
xorl
inc
outsl
sub
incl
ja
loope
orb
mov
jbe
out
cmpsl
lret
outsl
cli
fistps
inc
mov
push
enter
cmp
dec
movsb
aas
jmp
cld
fidivrs
mov
aas
add
push
and
cmp
xor
cmp
icebp
hlt
ss
in
shlb
add
cs
lcall
sahf
pop
les
bound
cmpsl
push
inc
movsb
or
ret
lock
dec
sahf
fnstenv
jmp
mov
ss
cmp
rorl
xor
aad
fldz
sti
or
inc
inc
andl
call
pop
xchg
scas
jb
popf
lods
or
addr16
fidivs
lods
adc
adc
aad
call
or
outsb
sub
or
xorl
cmpb
mov
or
and
jmp
adc
push
test
pop
adc
dec
lcall
roll
push
push
push
js
sbb
xor
cmp
call
cmp
push
xor
out
sub
jmp
lcall
dec
js
dec
mov
or
xlat
pop
xchg
xchg
in
xor
fld
fs
out
xor
fcomip
sbb
xchg
jo
ja
mov
push
or
fwait
jg
mov
popl
jns
decl
jae
jne
xchg
mov
cmp
cwtl
mov
lret
jl
popf
loope
test
cs
incl
jl
cmp
mov
inc
nop
mov
rcll
out
xor
mov
xchg
add
lcall
pop
jmp
add
stc
addr16
out
scas
dec
nop
rol
xchg
dec
and
fwait
jge
inc
pop
popa
pusha
sbb
stc
jno
or
pop
nop
stos
push
pop
jmp
cmp
dec
cmc
jno
sbb
cltd
insl
and
ret
xchg
xlat
xchg
nop
movsb
or
dec
xor
and
sbb
lcall
clc
outsb
in
xor
mov
bound
or
mov
sar
lock
push
dec
xor
mov
stos
cld
cs
mov
mov
sub
push
xchg
pop
push
out
lods
mov
js
loop
jmp
fadd
add
sahf
cld
push
adc
sti
jl
push
cli
mov
jg
jmp
sbb
jl
sbb
test
js
pop
cmp
adcb
sar
sti
fbstp
mov
and
js
pushl
stos
xchg
and
cmpsb
jns
mov
cmp
outsb
jne
or
lahf
pop
xchg
inc
mov
sbb
push
ret
aam
add
ljmp
ljmp
out
cmp
fiadds
mov
test
arpl
hlt
std
ja
inc
clc
lcall
test
shll
push
data16
sbb
dec
adc
call
int3
jne
mov
shlb
xchg
lds
mov
test
ljmp
mov
rolb
sub
das
xor
jmp
icebp
ljmp
push
mov
mov
cmp
dec
sti
in
cld
fs
jg
enter
ljmp
scas
in
cmp
lcall
and
add
incl
call
cltd
gs
sub
push
je
jno
cwtl
pusha
inc
push
insl
or
jmp
jbe
scas
pop
push
fwait
pusha
inc
fcom
push
inc
in
out
iret
pop
add
xchg
stos
xchg
jle
adc
icebp
outsb
adc
cmpsl
and
and
notb
lods
int
dec
push
js
add
sub
sar
lret
lock
insl
into
adc
into
inc
scas
idivb
pop
call
sub
gs
sar
lcall
and
adc
mov
xor
dec
and
subl
aaa
inc
test
dec
shrb
mov
loopne
mov
push
shl
jnp
outsb
and
sar
jle
sub
and
sub
pop
addb
daa
or
mov
cli
dec
adc
xor
enter
add
jb
int3
fiadds
std
fmul
das
lods
lret
pop
lock
ja
pop
mov
notb
and
mov
outsl
rcrb
adc
ffree
add
jbe
aaa
sbb
call
ds
adc
jecxz
pop
cli
jge
jmp
out
xchg
mov
repnz
cmp
loope
pushf
pop
leave
sub
sahf
rcr
xchg
add
cmp
aaa
jmp
frstor
and
push
sub
loop
test
or
psubw
out
je
push
lcall
dec
mov
ljmp
and
cmp
inc
int
fisttpl
and
jge
push
cmc
lret
push
sahf
add
push
out
push
loope
add
cld
std
fwait
lcall
add
dec
out
mov
jmp
pop
mov
out
mov
decl
cmp
popf
ja
test
or
add
std
mov
pop
push
sti
ja
sbb
cmp
call
fsubrl
lret
sub
lock
insb
ret
insl
scas
hlt
aad
xor
mov
pop
decl
fldl
sbb
mov
push
sbb
aaa
add
pop
add
pop
nop
and
mov
lcall
lret
inc
or
fwait
xor
and
xchg
mov
mov
sub
mov
xchg
out
mov
insb
orl
xor
int
scas
cli
incl
popa
andl
gs
ja
jle
out
push
sbb
pop
lods
mov
xor
mov
jne
push
xchg
push
mov
ret
fsubr
or
dec
ret
inc
loope
mov
bound
xor
cli
or
cs
lods
jle
xor
mov
mov
or
lds
dec
dec
push
sub
addr16
dec
jg
aas
mov
call
lret
pop
adc
es
xchg
and
xchg
push
fstpl
push
mov
scas
sbbl
jg
aad
ds
divl
mov
mov
sub
insl
push
movsl
and
lcall
mov
sub
call
rcrl
lret
pop
mov
jno
push
add
fwait
cmpb
jg
ljmp
lods
adc
dec
push
mov
add
mov
pop
adc
repnz
pop
jle
lcall
jp
nop
adc
jp
loopne
sub
mov
lcall
mov
mov
jo
dec
in
es
shlb
popf
push
call
ljmp
test
sbb
add
incl
xchg
xorl
jns
into
das
pushl
xchg
lcall
mov
sub
lret
mov
xor
mov
call
loope
mov
mov
js
mov
loopne
stc
icebp
or
jg
jno
call
lds
sbb
nop
into
push
lret
sbb
cmp
jnp
mov
icebp
in
dec
push
lods
cmp
stc
out
ds
push
dec
cmp
or
jle
cmp
push
pop
and
shlb
stos
fidivrs
cmp
cmpl
mov
decl
add
fnstcw
dec
lcall
jg
aad
lods
pusha
dec
add
mov
add
adc
xor
shrb
sub
outsl
clc
jl
mov
adc
mov
lcall
mov
push
pop
mov
pushl
xor
cwtl
lcall
xchg
mov
inc
shlb
add
adc
mov
push
mov
int3
inc
addl
test
std
leave
leave
xchg
mov
push
std
js
pushf
xchg
fs
movb
and
pushl
push
add
xor
dec
lea
aad
mov
lods
out
xor
jg
fstpt
jl
jae
and
add
aas
xchg
daa
cmp
inc
mov
xchg
mov
push
mov
xchg
mov
jg
lahf
jg
popf
mov
push
pusha
mov
outsb
pop
xor
jecxz
jnp
or
fistps
loope
add
mov
scas
jae
add
loop
push
xchg
pushf
mov
decl
lea
sub
cmp
lds
inc
outsb
cmp
jmp
sahf
sahf
data16
sub
dec
mov
mov
jno
push
xchg
xor
addl
lcall
ds
mov
arpl
xchg
add
stc
dec
push
mov
jp
xchg
mov
and
aaa
mov
add
imul
test
rcll
lds
xor
jns
sbb
inc
adcb
and
xorb
pop
nop
cwtl
xchg
pop
mov
adc
mov
ljmp
xor
loop
or
mov
push
fidivl
call
mov
dec
cmp
mov
call
adc
or
add
dec
cwtl
stos
rorl
or
lock
lret
fcomip
call
push
call
enter
fdivrl
jmp
nop
mov
fistpl
int
orl
ljmp
dec
mov
sar
shr
and
shlb
inc
out
aad
cltd
dec
loopne
xchg
cmp
sarl
mull
popa
sbb
xchg
jno
cltd
fwait
or
pop
repnz
cld
notb
xlat
lock
dec
sub
shlb
fildl
jle
cmp
ljmp
push
xchg
jmp
push
dec
mov
inc
sub
pop
dec
std
jmp
cwtl
dec
js
mov
jg
test
ds
mov
scas
xor
push
jg
in
data16
xchg
pop
lods
aaa
mov
mov
jg
adc
sub
push
cmp
mov
iret
adc
dec
push
dec
mov
jbe
out
in
stos
adc
cmpsb
movsl
pop
jp
movb
adc
incl
aas
mov
cltd
mov
int3
pushl
push
mov
stos
sbb
push
lods
scas
cli
jmp
imul
arpl
scas
ds
in
jl
mov
xchg
dec
push
enter
and
test
call
push
ficomps
fidivrl
jns
adc
hlt
jmp
xchg
inc
fld
mov
cmpsb
lock
push
push
ja
dec
fnstsw
loopne
aaa
jg
inc
xor
jmp
pusha
inc
int3
and
enter
lock
stos
orb
loope
dec
ljmp
xor
fnstcw
divb
lods
pop
movsb
fnstsw
or
insl
pop
push
add
incl
and
or
cli
int3
sahf
or
push
out
adc
cmp
jle
leave
nop
rcll
pop
sbb
call
in
out
jo
add
jo
ror
fsubs
lock
ret
jns
lret
popa
in
jnp
ljmp
int3
jns
lock
jno
mov
jb
mov
adc
or
inc
int
sub
fwait
adc
push
out
fsts
add
fdiv
add
ljmp
xlat
add
mov
cmp
push
inc
adc
inc
cmp
cwtl
addr16
mov
jb
and
aas
dec
cmpsb
ljmp
inc
push
cld
xor
mov
test
les
test
pusha
xorl
sub
xchg
mov
dec
push
cmpsl
test
incl
enter
das
xchg
inc
cld
mov
inc
sbb
mov
jne
int3
not
mov
sub
cmp
jno
mov
cmp
adc
out
stc
stos
mov
test
xchg
xchg
decl
pusha
outsb
adc
icebp
fisubrs
decl
adc
lods
mov
mov
aad
or
sbbb
inc
rcll
cmpsl
ljmp
outsl
cmp
pop
pop
lods
loope
lahf
mov
ret
and
mov
and
mov
cld
sbb
cltd
in
daa
movsl
inc
fisubrs
sub
cmp
sub
dec
pop
lock
jbe
loope
cltd
fsubs
movsb
fwait
call
mov
call
push
jno
push
lods
repnz
add
movsb
mov
cmp
mov
mov
sbb
daa
mov
inc
push
incl
cmpsb
mov
xchg
sub
mov
inc
inc
xor
lcall
mov
xor
add
jbe
xor
int
or
or
mov
arpl
aam
xchg
pop
test
pushl
cltd
cmp
xor
sbb
mov
hlt
in
jg
sub
subl
jnp
inc
sbb
push
cmc
lcall
push
call
xchg
stos
inc
add
add
or
pop
inc
cltd
xor
cltd
fstp
decl
jecxz
cmpl
pop
mov
test
pushl
dec
outsb
xor
rclb
pop
das
lahf
and
or
adc
jge
pop
outsb
test
push
repz
cmpsb
mov
mov
imul
sub
push
or
loop
adc
int
pop
int
scas
xor
mov
push
add
imulb
cmpsb
std
fnsetpm(287
mov
incb
fcomps
mov
mov
xchg
vcvttps2dq
andb
call
xchg
clc
or
mov
inc
pop
insb
movsb
jae
xor
lds
push
jg
mov
sbbb
dec
mov
mov
outsl
pushf
jl
pop
pop
pop
mov
mov
mov
setbe
push
popf
add
les
adc
mov
add
pop
pop
pop
mov
add
out
pushl
std
stos
dec
mov
push
fnsave
push
xchg
and
enter
fdivp
lcall
shrl
out
icebp
dec
mov
cmp
in
pushl
lcall
sub
jge
jmp
dec
clc
inc
imul
decl
in
adc
add
lret
shrb
js
pop
pop
into
jg
mov
or
adcb
inc
lods
cmp
dec
ljmp
imul
stos
es
es
out
arpl
pop
push
call
jg
push
fisubrl
hlt
loope
leave
sub
je
add
or
adc
dec
mov
out
outsl
push
adc
dec
push
jle
adc
mov
jne
into
push
mov
icebp
mov
ds
in
cmp
or
adc
adcb
mov
sbb
add
dec
stos
icebp
scas
ret
jo
lods
lock
xor
call
mov
loop
pop
loope
mov
mov
xchg
popf
fsubrl
movl
mov
dec
jns
sbb
data16
jne
inc
xchg
fiaddl
pop
fisubs
and
lcall
imul
adc
and
jmp
sub
mov
lret
pop
xor
aad
icebp
movsl
ds
out
cli
outsl
ljmp
aaa
xchg
std
mov
cs
stos
shll
xor
mov
mov
fs
enter
add
push
fwait
or
mov
decl
push
push
add
shll
nop
jae
and
cwtl
ror
leave
movsl
ret
in
paddsw
jg
decl
mov
stos
and
xchg
std
int
pop
cltd
push
adc
cmp
push
inc
ss
nop
les
mov
test
dec
pop
xchg
ret
mov
jbe
sbb
stos
adc
push
stos
push
fwait
push
push
outsb
cltd
xor
mov
cld
jnp
test
add
and
mov
add
dec
arpl
dec
test
sub
stc
jbe
xchg
sbb
push
jnp
cmp
xchg
push
loope
pop
pop
shr
test
mov
ffree
in
sub
leave
test
pusha
ret
ds
lcall
sbb
xchg
fistpll
inc
insb
mov
and
inc
jl
in
jg
decl
or
adc
push
lds
cmpsl
xchg
push
ret
pop
or
mov
in
rcr
sbb
in
decl
mov
cwtl
add
mov
dec
xchg
lahf
lock
dec
pop
push
outsl
leave
loopne
mov
pop
mov
cmp
adc
cwtl
fwait
mov
out
cmp
lea
lret
std
cwtl
mov
jmp
inc
jg
aad
pop
sbb
fidivs
pop
call
out
jge
sbb
pop
cmp
movb
dec
aaa
mov
pop
jle,pt
lahf
mov
jecxz
jmp
sub
push
xor
repnz
test
mov
call
push
push
push
cmp
cmpsl
inc
add
cmp
ficoml
lcall
roll
cwtl
xor
stc
jp
lcall
hlt
mov
dec
jno
inc
movsl
ljmp
sarb
sbb
xlat
lret
jle
sub
cs
mov
incl
push
push
sbb
shrb
push
imul
lret
mov
mov
pop
lea
out
sub
cmp
sar
dec
xchg
cld
gs
jno
push
ja
dec
mov
lcall
mov
repnz
loopne
cld
jb
push
insb
mov
inc
pop
dec
sarl
xchg
cmp
incl
popl
inc
inc
ficoml
cmp
jecxz
fiadds
daa
in
clc
jnp
sbb
outsl
incl
mov
mov
ret
and
in
nop
rol
cmpsb
adc
decl
outsl
pushf
rcrl
xor
mov
dec
iret
leave
popf
dec
push
adc
cmp
fbstp
mov
sbb
lods
mov
push
dec
mov
outsb
sbb
sub
das
push
cmc
lods
jnp
push
jp
and
jmp
inc
scas
cmp
mov
push
dec
test
mov
inc
jbe
in
ficompl
outsl
mov
pushl
lret
jo
mov
jns
in
inc
daa
imul
imul
arpl
aaa
jp
mov
cmp
push
std
scas
or
xchg
adc
jmp
andb
clc
pop
popw
mov
popf
lock
cli
decl
push
or
mov
pop
movsb
xor
hlt
xor
adc
pop
ljmp
mov
xchg
cmp
scas
dec
sbb
add
lret
lret
lret
pushl
std
adc
imul
dec
fidivrs
add
out
callw
pop
loop
cmc
push
lcall
inc
cmp
mov
pop
cmpsl
sbb
pop
push
xor
iret
aaa
xchg
outsl
mov
pushl
fsubl
fwait
adc
and
sub
into
and
add
adc
scas
nop
sub
test
lret
cwtl
js
lahf
in
or
mov
mov
js
ss
call
sbb
mov
lcall
push
dec
stos
cmp
test
std
pop
jg,pn
lcall
xchg
sbb
pop
mov
mov
test
push
bound
push
pop
cmp
ljmp
stos
inc
aas
inc
mov
xchg
outsb
fistps
add
inc
aas
add
mov
xchg
mov
xor
mov
out
cmp
inc
std
lcall
adc
mov
xchg
add
in
fistpll
out
adc
xor
push
add
or
stos
mov
inc
cwtl
pop
pop
repz
sub
ljmp
popf
jno
lret
lods
push
sbb
cmc
push
out
dec
jb
call
pushl
xor
sub
xchg
mov
out
mov
out
cmc
lcall
inc
mov
xchg
std
pushf
ret
inc
cmp
icebp
inc
dec
repz
ljmp
clc
pop
repnz
lock
lods
or
add
dec
adc
add
add
cmp
or
cmp
lcall
and
cmp
lods
lahf
enter
adc
stc
jl
sar
ret
out
jecxz
inc
loope
inc
jmp
lock
xor
mov
repz
jne
adcb
push
aaa
out
xchg
sub
das
ss
call
pop
push
push
xlat
aas
jmp
lods
adc
cmp
cwtl
and
push
sbb
pop
add
fsubs
mov
lcall
add
lods
dec
xchg
adc
incl
sub
inc
std
enter
sahf
aaa
cmc
pop
dec
inc
loopne
jl
sub
push
sub
pushf
jo
daa
mov
repnz
stos
std
dec
xor
mov
inc
jg
mov
lahf
je
pop
mov
and
cmp
dec
xor
fadds
mov
out
clc
jns
movsl
cmp
and
stc
jmp
fcomip
call
xor
add
int
push
push
mov
movsb
sub
das
decl
rol
lea
testb
and
push
jmp
cltd
sub
imul
push
mov
push
fsubrl
jle
outsb
hlt
mov
or
arpl
scas
insl
cmp
fmuls
cmp
sub
xor
ja
fucomp
xchg
jae
xchg
mov
dec
sub
xchg
test
orb
and
sub
sbb
decl
lds
stos
movsl
sarl
fsubs
out
push
jns
inc
or
pop
into
push
cld
faddp
inc
push
xchg
xchg
icebp
adc
adc
sub
mov
inc
gs
xor
imul
xchg
push
jne
call
ret
rcrb
inc
pop
scas
out
orl
ljmp
mov
xchg
inc
jo
cmp
sar
adc
add
xchg
sbb
jmp
xchg
adc
cmp
loop
data16
jmp
mov
sub
dec
or
insb
xchg
xchg
mov
call
xchg
jge
das
mov
ss
stos
mov
aas
ret
out
insb
sub
adc
jmp
pop
sub
call
sub
jge
mov
mov
xor
sub
das
add
clc
pushl
ret
cmp
arpl
dec
in
sbb
pop
scas
inc
cmp
ja
jecxz
mov
sub
pop
jge
jbe
stc
movsl
mov
ljmp
jge
aad
lods
mov
imul
lcall
cs
cmp
dec
fwait
xor
sub
into
aam
and
adc
enter
pop
push
ret
cmp
dec
jo
loopne
pop
test
add
jb
lods
push
jnp
ja
out
rorl
cmpsl
std
arpl
incl
lods
dec
push
hlt
xchg
leave
scas
das
mov
push
ss
cwtl
or
ret
pushl
std
mov
cltd
test
and
jge
pop
mov
adc
cld
loopne
mov
push
sti
hlt
inc
rorb
call
or
inc
bound
mov
ret
dec
add
lock
scas
jmp
jnp
inc
dec
movsb
add
clc
mov
mov
je
jmp
inc
mov
jo
xlat
jp
inc
ret
sub
je
iret
push
xchg
mov
mov
xchg
lods
jl
test
xchg
or
pop
lcall
bound
mov
or
mov
xchg
push
in
dec
add
aas
push
pop
and
test
mov
inc
cmp
sub
cltd
jmp
mov
adc
mov
adc
push
shlb
pop
inc
gs
out
sub
mov
push
fisttpll
cli
ss
mov
inc
add
xchg
sub
stc
mov
jnp
enter
add
xchg
cli
call
sbb
push
jae
fidivrs
xor
xchg
fldl
cmpsl
mov
cmp
mov
aad
cmp
nop
mov
loopne
or
mov
add
jo
stos
gs
jg
cmpsb
adc
daa
mov
popf
outsl
imull
mov
xor
pop
cmp
fwait
add
push
test
jl
lcall
cmpsb
jbe
outsl
pop
cmpsl
jns
cwtl
cs
cmc
fstpt
out
aad
xor
jae
jbe
jmp
in
jno
mov
icebp
cmp
fstl
pusha
mov
dec
xchg
cmp
adc
jg
ss
mov
popa
mov
xchg
jg
orl
test
cli
in
cmp
xchg
arpl
decl
cwtl
push
sub
sub
ds
dec
and
mov
adc
and
xor
mov
ljmp
ret
pop
imul
jae
orb
dec
out
inc
sbb
lret
xchg
or
dec
push
leave
and
xor
cmc
lods
mov
stc
subl
xchg
mov
jg
notl
mov
sahf
inc
ss
stos
xchg
and
mov
fldt
ljmp
repnz
test
pushl
imul
mov
in
jnp
jg
jno
add
popf
and
xchg
jg
dec
mov
or
aas
movsb
push
and
mov
ret
hlt
aad
mov
clc
scas
lret
xor
cmp
cmpsb
xor
and
add
cmpsl
pop
mov
mov
fcomps
jmp
sbb
ljmp
std
adc
data16
cmpsl
mov
add
inc
xchg
xchg
repnz
aad
fcomip
jmp
xchg
ja
mov
push
rcr
or
push
dec
sub
jmp
inc
lret
ljmp
xor
xchg
or
cmp
push
ret
js
loop
clc
dec
sub
cwtl
dec
or
cmc
filds
push
stos
outsl
xchg
pop
stc
fstps
push
testl
test
test
fcomip
cmp
xorb
mov
pop
sbb
mov
adc
jg
dec
addl
mov
add
gs
pop
sbb
loopne
sbb
call
cld
xor
jle
mov
es
cmp
shl
mov
imul
jecxz
popf
gs
in
clc
fsubs
movsb
das
push
call
or
inc
push
mov
adcl
push
test
jecxz
jl
lcall
and
insl
cmp
xchg
sahf
leave
imul
xlat
xchg
lea
xchg
cld
pop
cld
decl
fldl
push
aad
lock
fld
or
sbb
rorb
arpl
rcrb
imul
outsb
mov
inc
push
orl
cmc
cmp
stos
jg
and
testl
leave
inc
fmuls
push
push
repz
inc
das
or
lret
decl
popa
jge
pop
mov
sbbb
fs
push
fisubrl
ret
pop
jmp
das
mov
inc
icebp
stos
inc
repz
adc
xchg
fwait
decl
xchg
mov
mov
mov
fwait
and
scas
mov
dec
dec
stos
arpl
lcall
jns
pop
xor
loope
fnstsw
push
mov
aad
sub
lods
add
and
pop
dec
jno
call
push
subb
mov
add
or
daa
dec
xchg
xor
lahf
in
es
jmp
call
shll
pop
roll
mov
dec
adc
or
ja
pop
imul
int3
add
pop
mov
pop
add
jbe
cmp
insl
test
test
inc
xor
mov
imul
or
xchg
inc
outsl
inc
or
popf
popa
arpl
stos
adc
jns
dec
clc
sub
cwtl
fcomps
pushl
loop
ljmp
push
xchg
rorl
cli
adc
xchg
adc
or
lcall
repnz
adc
push
jnp
outsb
dec
dec
sub
xchg
out
push
mov
jns
leave
psubusw
call
sbb
mov
jb
mov
jg
push
je
pop
adc
fisubl
xor
popa
or
cs
jbe
adc
add
ja
adc
aaa
mov
inc
jno
inc
jp
cmp
inc
in
repnz
lods
in
adc
jl
cmp
add
psubw
pop
cmc
jmp
xchg
inc
push
jecxz
xchg
push
fbld
cwtl
mov
js
cmp
sbb
imul
ds
xor
insb
cmpsb
icebp
out
fisubs
lods
stos
pop
xchg
sub
cmc
or
lcall
bound
pop
inc
push
add
std
sti
inc
dec
orl
add
cld
pushl
lcall
add
mov
mov
stos
lock
cmovae
mov
jns
in
and
mov
popa
clc
ljmp
and
cmp
jge
and
addr16
nop
mov
scas
dec
push
sar
aas
adc
loop
scas
and
jbe
fwait
mov
aad
int3
mov
and
lcall
cltd
mov
out
sbb
jmp
mov
push
xchg
sbb
adc
xor
cmp
aas
add
dec
xchg
xor
mov
push
inc
mov
in
inc
or
aaa
pushf
adc
cmp
fdivrs
rcrb
cwtl
sbb
mov
or
es
loop
cmc
enter
fcomip
sahf
jnp
or
sbb
popf
push
cmpsl
les
adc
mov
es
lcall
lahf
xor
cmpsb
inc
clc
pop
push
test
bound
push
scas
scas
and
jne
aad
mov
xlat
ss
mov
pop
xchg
add
or
cmp
fsts
cmp
xchg
js
mov
and
lcall
lods
int
sbb
and
mov
gs
movsb
mov
scas
in
push
es
testb
not
or
mov
or
fdivp
cmpsb
stos
insb
outsl
mov
mov
popf
leave
xlat
mov
inc
pop
push
sub
jmp
or
inc
icebp
aad
push
sbb
stos
jp
stc
js
and
enter
dec
pop
jae
mulb
and
popf
loope
test
ret
dec
jmp
decl
outsb
inc
out
mov
push
je
lret
mov
push
fnstenv
xor
jp
xor
pop
inc
inc
sub
repnz
pushl
mov
push
ret
insb
xchg
cltd
jnp
popa
movsb
mov
aas
lock
shl
daa
jle
scas
push
mov
incl
out
jge,pt
or
rorl
push
mov
test
cmp
xor
mov
loope
clc
out
fcomip
mov
sbb
lret
xorb
mov
inc
mov
fadds
jmp
jecxz
cltd
adc
test
imul
and
jg
mov
lods
adc
and
cltd
jge
cmp
decb
jmp
jo
aaa
cld
decl
lahf
fmull
xchg
mov
push
mov
jmp
mov
sbb
sub
icebp
mov
dec
sub
scas
xchg
jmp
sti
negb
xchg
push
mov
jecxz
pop
gs
cmpb
and
adc
lahf
shrb
sbb
das
push
lock
or
test
xchg
aas
push
stos
sti
and
out
clc
cmp
hlt
cmp
loope
shrl
cltd
push
pop
mov
ret
pop
mov
ljmp
jl
lcall
adc
lds
cmp
jmp
loope
mov
mov
clc
ret
push
fidivrl
movsb
pop
out
inc
repz
and
scas
pop
stc
in
mov
pop
into
inc
dec
iret
xlat
jae
mov
pushf
loop
cmp
int3
sbb
std
or
in
mov
jne
mov
jne
in
movsl
test
or
fdivs
push
cmp
jle
daa
int3
andl
xchg
fisttps
ret
int3
push
or
decl
xor
pusha
xchg
subl
inc
cmp
inc
pop
cltd
cmpsb
pop
add
adc
adc
addb
ja
jno
mov
mov
inc
aaa
jg
scas
fldt
js
cmp
push
mov
xor
cmpb
popa
jnp
decl
loope
inc
push
in
int3
xor
test
stos
sub
pushl
vaddsd
push
cmpsl
or
fucomi
imul
es
test
cmc
inc
xchg
out
incl
sbb
negb
lahf
jmp
pop
ja
sti
rclb
jl
stos
jg
bswap
xchg
lds
pushl
clc
addr16
lods
adc
mov
repz
sub
xchg
fstpl
jnp
fcos
in
ret
push
sub
xor
js
inc
push
adc
faddp
into
xchg
pop
lea
sub
mov
ljmp
xlat
aas
insl
call
jp
xchg
ss
test
rorl
mov
incl
popw
popa
add
pushf
in
push
daa
mov
sub
jge
and
arpl
hlt
mov
inc
sbb
push
in
shrl
xchg
add
imul
xchg
jnp
aaa
test
cmpsb
mov
aaa
jg
dec
add
xor
scas
fisttpl
shrl
repnz
and
jg
aaa
lcall
fstps
mov
sbb
hlt
pop
mov
xchg
dec
jge
mov
test
ljmp
pop
mov
sub
outsb
xchg
fsts
bound
sbb
cmp
leave
call
mov
dec
imul
xor
add
test
mov
sbb
mov
cmpsl
adc
pop
popf
push
fdivr
rdseed
jno
lods
adc
loope
dec
cmp
scas
add
jge
lods
bound
decl
inc
emms
add
scas
pop
and
test
mov
aas
dec
stos
mov
fildll
stos
sub
out
data16
lods
ret
cwtl
out
xor
gs
cmpsl
hlt
clc
mov
gs
cmp
xchg
incl
push
adc
scas
andl
je
mov
rcll
scas
push
lret
in
clc
insb
ret
repnz
xor
cmp
fwait
cmp
push
loope
mov
stos
repnz
mov
decl
stc
push
inc
popl
cmp
bound
mov
ja
push
inc
mov
pop
dec
add
xchg
out
out
adc
push
cmp
sbb
xor
pushl
pusha
and
pop
cltd
xor
aaa
loopne
pushf
daa
cmp
adc
jmp
js
pop
cwtl
push
scas
jg
sbb
jp
in
fnsave
sub
inc
cmp
pushl
fwait
data16
loope
dec
rorl
xchg
data16
or
in
xor
mov
jo
jae
push
sar
ljmp
mov
and
insl
sbb
lret
scas
testb
stos
rcrb
lods
mov
mov
fs
mov
test
stc
outsb
xorb
xor
cli
lcall
jb
dec
or
insb
inc
sbb
loope
sti
test
ds
lcall
mov
repnz
fdivr
jmp
xor
xorl
mov
inc
and
loopne
lcall
mov
pop
mov
scas
sub
lods
ja
sahf
shll
std
xor
and
ret
jmp
jb
repz
or
dec
into
out
jmp
mov
subb
repz
xchg
sub
lcall
loopne
xor
ret
mov
sahf
sub
sub
mov
call
shll
mov
clc
orb
pop
in
sbb
shrl
lods
es
decl
push
addr16
push
icebp
pusha
mov
mov
inc
repz
cli
jnp
sub
sbb
out
cli
call
lea
xchg
inc
mov
sub
insl
rcl
and
out
imull
daa
inc
adc
lret
jmp
cmp
or
gs
mov
stos
sbb
aaa
popf
in
xlat
xor
add
push
std
pusha
push
daa
dec
pop
sahf
xor
push
jl
or
mov
lret
jb
pushl
mov
sub
inc
arpl
pop
mov
mov
sar
aam
xchg
sbbb
mov
js
jbe
shll
adc
clc
pushl
jmp
cmpsb
adc
cltd
and
push
aam
ljmp
mov
insl
movb
and
dec
insl
aam
ds
pop
std
sahf
test
scas
xor
outsb
pop
pop
dec
test
lret
jo
jb
out
xchg
jp
or
mov
mov
xchg
out
adc
subl
jo
mov
jle
inc
rorb
jg
xchg
scas
push
inc
in
mov
jle
xor
out
jmp
or
sarb
mov
adc
mov
loop
clc
mov
out
imul
xor
and
ljmp
fxch
add
mov
popf
jne
and
mov
mov
pop
lock
hlt
jg
cmpsb
divl
dec
xor
flds
or
cwtl
ficoms
aaa
mov
xchg
rclb
fwait
jmp
add
mov
xchg
icebp
cltd
add
pusha
jmp
lock
lea
aad
testl
add
mov
lods
es
adc
pop
test
inc
and
mov
imulb
cmpsl
mov
cmc
pop
lcall
mov
data16
outsb
xchg
jae
jecxz
incb
aas
movsl
int3
test
dec
mov
decl
movb
sbb
mov
cmp
loope
xchg
data16
test
pop
cwtl
stos
and
fisttpll
lcall
xchg
lahf
lret
jbe
imul
lods
imul
sub
sub
clc
xchg
les
xor
fmull
mov
adc
sbb
xor
pop
cmp
dec
incl
cli
xor
pushf
addl
sub
pop
out
out
lahf
sub
pushl
pop
mov
loopne
add
pop
insb
fidivl
cld
push
push
pop
jae
jbe
stos
leave
jno
xchg
cmp
add
mov
insl
mov
pop
rclb
mov
pop
dec
les
sub
or
ja
adc
iret
in
in
adc
mov
push
adc
lret
bound
inc
test
lock
pop
popf
pop
dec
ja
jnp
decl
pop
incb
or
push
mov
xchg
add
mov
iret
shll
mov
icebp
decb
inc
adc
not
dec
mov
sbb
cmp
cld
mov
jmp
icebp
gs
out
push
mov
pop
adc
add
fisttps
addr16
jp
outsb
adc
adc
popf
inc
aad
xchg
mov
sub
enter
sub
das
mov
xor
imul
ljmp
cli
sub
pop
sub
fildl
add
push
dec
decl
cmp
or
dec
mov
push
and
outsb
call
jp
jo
stc
cltd
mov
xorb
jp
into
push
dec
jecxz
mov
xchg
sub
in
aam
ret
pop
lock
cmpsl
in
fldt
xor
mov
pop
insl
hlt
xchg
ds
std
inc
mov
mov
imul
out
cmp
push
andb
imul
fnstcw
iret
add
add
mov
insb
mov
loop
sbb
xchg
cmpsb
fisubl
mov
jmp
and
fcmovnb
pop
jle
adc
lock
mov
jecxz
outsl
cli
jg
stos
inc
mov
ljmp
in
pop
stc
adc
xchg
and
dec
loopne
fnstenv
cltd
lahf
sahf
lar
dec
lea
stos
daa
arpl
decl
shrl
data16
out
push
cs
mov
leave
mov
sbb
fdivp
mov
les
enter
gs
pop
mov
ret
stos
stos
testb
sbb
sarl
daa
ljmp
js
out
dec
push
pop
cmc
call
jg
pop
or
mov
movsl
jmp
in
jne
sub
dec
xor
push
adc
or
js
push
pop
jge
incl
adc
ret
add
bound
mov
sub
mov
gs
fdivrl
dec
push
movl
int
cmp
incl
lret
ss
mov
cwtl
mov
sti
sub
aad
push
cli
push
js
rorl
negl
movsb
lods
push
outsb
fistpl
pop
in
inc
sarl
rcl
inc
lret
call
jbe
aad
or
sti
sbb
pop
inc
jle
aas
sub
mov
leave
nop
jmp
dec
clc
push
std
and
dec
xorb
sbb
rcll
rclb
popa
add
mov
icebp
mov
inc
popa
ljmp
lcall
mov
push
mov
mov
mov
add
ret
or
dec
xchg
punpckhwd
push
std
jle
lock
out
and
fists
push
ljmp
mov
push
ret
inc
push
lret
sti
ret
mov
fnstsw
lock
fisttpll
mov
jle
cmp
fldcw
iret
incl
jmp
pushl
in
jg
mov
mov
jns
push
or
inc
dec
pop
sahf
repz
push
mov
cmp
mov
mov
pop
and
test
adc
and
push
adc
outsb
dec
test
dec
das
enter
or
xor
pusha
mov
or
es
mov
testl
shr
icebp
dec
fbld
clc
jno
cmp
inc
ds
sbb
sub
push
pop
je
das
adc
icebp
sub
adc
jno
xchg
sbb
dec
leave
add
push
cmp
xorl
into
jb
xchg
repz
inc
mov
add
jmp
cmpsl
iret
dec
cmp
cld
jp
sahf
clc
adc
in
sbb
mov
mov
cld
roll
sub
shr
lods
scas
lods
xchg
sbb
aaa
lret
sub
pop
cld
jg
sbb
mov
push
xor
cmp
mov
incl
xchg
call
add
sub
cmp
movsb
xchg
mov
sti
popf
jg
sbb
cmp
ljmp
gs
inc
es
dec
sbb
xor
ror
dec
fs
je
mov
add
push
lock
shll
decl
dec
fcoms
sub
shll
fmul
les
inc
xchg
cmp
std
fildll
lods
sahf
out
adc
inc
scas
sbb
aad
xor
mov
sbb
mov
int3
push
rol
dec
test
push
stc
adc
pop
hlt
mov
incl
roll
fimuls
mov
jge
ja
das
push
mov
adc
call
ljmp
cmp
in
jecxz
jo
push
shrl
jae
inc
je
scas
jo
cmpl
decl
lock
addr16
xchg
sbb
stos
mov
stos
xor
xor
fdiv
mov
das
aad
inc
sbb
mov
sarb
daa
xchg
inc
adc
lea
incl
xchg
sarb
mov
adc
pop
sub
push
js
xchg
mov
pop
pop
lcall
dec
shll
adc
push
or
cld
cs
mov
jae
data16
jnp
fcomip
call
jmp
jle,pt
xor
ljmp
mov
push
pushf
mov
mov
rclb
mov
xor
loopne
pop
sbb
movsb
jp
out
outsl
cmp
cmp
sbb
xlat
pop
out
and
mov
mov
insl
notb
push
adc
mov
mov
mov
aaa
test
js
mov
lods
sub
mov
adc
call
dec
insl
jbe
das
inc
mov
xchg
inc
sarb
fimull
out
sbb
inc
jl
ss
inc
mov
popa
mov
push
xchg
outsb
pop
ror
ret
mov
shlb
cmp
incl
inc
dec
dec
mov
xor
ja
ljmp
mov
mov
ss
ud0
cmp
out
xchg
test
sub
in
sti
pusha
stc
repz
pusha
push
test
xchg
pop
enter
jecxz
inc
icebp
popa
lcall
scas
mov
add
lock
mov
adc
incl
pop
push
dec
stc
call
pop
sub
add
daa
cwtl
test
decl
push
dec
in
and
es
sub
dec
jns
inc
push
rolb
dec
pop
mov
xchg
notl
stos
fidivs
push
mov
fisttps
nop
jbe
rcll
xchg
push
sbb
ror
add
or
adc
mov
sub
aas
adc
movsl
adc
xchg
lret
je
jl
or
mov
in
dec
jmp
add
leave
imul
daa
leave
lea
pop
cmp
jg
decl
ror
sbb
jo
loope
sub
fisubrs
sub
push
mov
jno
pop
jmp
aas
pop
xor
or
inc
add
hlt
cmp
push
fwait
jnp
in
fbld
xchg
call
movsl
xor
inc
subl
sub
jl
dec
imul
idiv
lcall
outsl
outsl
push
jl
mov
sub
leave
push
mov
add
negl
inc
aaa
icebp
sub
mov
mov
sub
outsl
test
xchg
icebp
decl
mov
cmc
ljmp
or
fldl
in
sub
sbb
jl
loope
shrl
mov
xor
lods
pop
sar
push
dec
aam
dec
inc
sbb
dec
pop
ljmp
and
add
inc
push
adc
mov
sub
out
out
fsubrs
hlt
add
fcomip
pop
in
test
or
jmp
aaa
adc
mov
lea
jg
in
mov
fcoml
and
pop
jp
cmc
mov
pop
and
ljmp
adc
shrb
ret
not
cmp
pusha
scas
adc
addr16
setae
call
jne
mov
push
dec
gs
int
mov
pop
sub
jle
inc
test
jb
mov
lods
es
or
pop
push
jp
sahf
scas
jl
mov
sub
push
and
mov
jno
mov
pop
movsl
out
fidivrl
mov
sub
and
jmp
movsb
mov
cwtl
sub
mov
clc
ljmp
hlt
jle
sbb
repnz
adc
add
js
call
xor
mov
jl
push
shr
or
xor
mov
mov
leave
mov
ljmp
cld
adc
jmp
xor
insb
dec
push
dec
out
sbb
mov
push
sbb
lahf
adc
jp
cs
cmpsb
pushf
or
add
imul
dec
jbe
add
repz
cmp
push
jnp
jne
or
shl
cmp
pop
add
aad
jno
pop
xor
fcmove
loope
mov
dec
fwait
ss
push
dec
or
mov
push
or
jmp
cld
outsb
imul
dec
inc
stc
or
sub
les
jle
jmp
dec
incl
mov
jne
mov
mov
xor
push
out
sub
xor
nop
test
cmp
and
mov
jg
jb
je
inc
pop
out
adc
and
or
dec
mov
ljmp
jbe
out
jb
xor
rcl
lcall
jbe
mov
sarl
push
jp
mull
xor
jnp
out
sub
ret
inc
cs
cmp
aad
dec
pop
sbb
insb
ljmp
in
mov
ret
jb
mov
popf
outsl
jecxz
or
stos
in
add
sbb
leave
or
imulb
mov
mov
insl
imul
stos
rol
sub
icebp
lock
ljmp
push
icebp
in
sarl
cld
jnp,pn
out
inc
dec
in
pop
jae
xchg
inc
test
and
hlt
xchg
iret
jp
ret
jns,pn
sbb
and
stos
mov
push
pop
pusha
enter
mov
adcb
das
cmp
push
vmread
mov
lock
xchg
dec
out
lcall
jle
add
pop
or
sub
arpl
loopne
sub
iret
pop
ficoms
incl
shl
sbb
pop
les
loop
jae
xor
in
or
shll
lcall
rorl
push
adc
push
sbb
xor
mov
or
fcompl
sti
push
and
jl
add
out
mov
add
insl
push
mov
test
gs
cmp
sub
outsl
push
sahf
outsl
aad
addb
jp
or
test
in
jns
pop
ud0
jmp
dec
mov
xor
push
scas
stc
pop
xchg
cmp
vcvtps2pd
and
filds
jnp
shlb
push
aas
xchg
inc
sahf
jno
sub
mov
xor
in
and
push
and
adc
jbe
push
pop
jg
push
sbb
jecxz
out
cmpsl
fs
icebp
mov
and
push
xchg
faddp
mov
aam
ljmp
xchg
jmp
dec
xor
pop
out
out
clc
jmp
fisttps
fnstenv
dec
outsl
daa
pop
nop
test
mov
fcomip
add
sbb
loope
mov
lcall
or
inc
xchg
and
cmp
outsl
mov
xchg
dec
mov
adc
xchg
aad
add
lods
popf
jnp
ja
mov
xchg
cmp
mov
hlt
adc
jnp
xorb
and
mov
add
dec
xchg
in
xchg
pop
xchg
xchg
ret
andb
daa
dec
inc
mov
xchg
loope
hlt
pop
lods
ret
decl
pop
or
xor
insb
rol
flds
adc
outsl
add
lcall
adc
mov
jns
mov
cmp
addr16
sbb
les
jbe
lcall
mov
sub
adc
popa
ror
xlat
test
outsb
adc
lea
lcall
sahf
clc
or
pop
filds
icebp
cld
cwtl
mulb
in
dec
mov
jg
push
or
into
fldl
adc
xchg
pusha
mov
mov
rcll
jbe
test
adc
jbe
and
jmp
imul
fs
and
mov
pop
repnz
call
addl
lea
scas
in
sbb
and
call
pop
push
xor
xchg
jno
inc
shlb
dec
mov
icebp
aam
insb
orb
popf
push
ror
xchg
push
scas
xchg
filds
push
pop
sub
push
jle
dec
inc
ds
mov
imul
or
popa
xchg
out
ret
nop
push
mov
push
add
xchg
out
sbb
push
push
std
incl
jecxz
pop
sahf
dec
dec
mov
mov
and
movsl
dec
pop
movsb
cmpsb
int3
pop
sti
arpl
jmp
cmp
sahf
or
mov
cmp
ret
in
insl
add
decl
mov
pop
lret
sub
lret
push
dec
or
int3
shlb
push
ljmp
xor
cmpsl
sub
movsl
ljmp
pop
cwtl
js
sbb
mov
jbe
mov
mov
int3
es
in
push
les
mov
sub
imul
pop
add
push
sub
push
adc
das
clc
call
or
lea
jg
rol
inc
push
ss
push
mov
incl
std
push
inc
rol
ds
jbe
add
sbb
jno
mov
enter
mov
decl
divl
cli
aas
push
fcoml
push
or
fneni(8087
mov
add
pop
and
mov
movsb
inc
mov
out
das
pop
cmp
cmp
pop
mov
push
das
lret
call
xor
or
mov
repz
jo
adcl
jg
mov
inc
arpl
fcmovnb
std
mov
dec
aas
xor
lahf
movsw
and
pushl
sub
or
cmpsl
inc
sbb
das
jle
sbb
adc
pop
subb
pushl
sub
push
xchg
or
loope
test
push
je
ljmp
decl
insl
and
xchg
dec
mov
add
push
aaa
cmp
sub
nop
lcall
aaa
xchg
cmp
cmp
es
cmp
imul
xor
hlt
add
incl
pop
push
sbb
js
adc
rolb
jnp
scas
inc
mov
cmp
dec
lock
adc
outsl
lcallw
mov
pop
mov
add
mov
rcll
xlat
fucomp
movsl
mov
arpl
xor
out
clc
incl
pop
mov
add
movsb
or
out
js
jno
sub
jae
pusha
adc
bswap
push
aaa
test
fs
adc
decl
rolb
rep
lods
cmp
test
rorl
xchg
sbb
mov
ja
clc
lcall
in
dec
cmc
insb
sbb
js
aas
cmp
sbb
fcomip
loope
pushl
jmp
je
leave
popa
push
jno
cli
daa
add
mov
and
jg
mov
dec
ljmp
sbb
in
cmp
cld
xor
incl
loop
int3
iret
pushf
inc
sbb
lods
jno
cmp
jg
and
fnsave
loopne
add
dec
cli
mov
es
cli
cli
sbb
ss
hlt
dec
add
xchg
lahf
clc
movsl
or
out
xor
sbb
lcall
inc
enter
sbb
movsl
das
test
push
jno
stos
fistl
jle
mov
mov
lock
push
mov
jno
push
add
repnz
lahf
lcall
xor
sub
mov
jl
fcos
ljmp
and
imul
mov
call
inc
ljmp
adc
je
scas
jns
pop
out
decb
jg
adc
loop
cmc
or
enter
add
and
into
clc
dec
xor
aas
je
mov
decl
and
pop
testl
das
ret
mov
fwait
jae
rclb
pushl
xchg
push
jbe
outsl
sub
scas
mov
in
dec
adc
dec
add
and
inc
jns
jbe
notl
or
mov
adc
aad
add
decl
or
dec
lock
pop
xchg
sbb
jp
ljmp
icebp
fsubs
xchg
push
insl
add
fcomip
pop
mov
xchg
shll
sub
filds
or
fbld
push
push
and
outsb
int
mov
jle
cmpb
jecxz
mov
je
ss
lcall
imul
mov
and
movsb
inc
test
mov
in
sar
push
mov
pushl
aas
hlt
inc
xlat
out
sbb
inc
lods
mov
sbb
adc
mov
decl
dec
mov
popl
pop
sub
cmp
shrb
adc
lods
xchg
pop
jg
jmp
cmpsl
jbe
popf
movsl
mov
pop
jmp
jo
and
adc
ljmp
jne
push
sti
fcmovbe
and
ret
mov
mov
add
mov
btr
enter
insb
cmp
push
js
orb
xor
les
nop
cmp
aas
adc
sti
addr16
cltd
xor
clc
pop
cmc
dec
push
aad
xchg
mov
dec
loopne
pop
stc
and
call
loopne
sbb
lret
mov
xchg
gs
lods
inc
je
cld
out
clc
or
sbb
or
cmc
fnstsw
mov
mov
fmuls
lods
popa
leave
lods
mov
inc
clc
mov
mov
dec
xchg
cli
icebp
jle
lahf
jns
fidivrl
push
pop
and
mov
std
in
mov
cld
push
incl
jnp
jo
inc
iret
mov
sub
ds
inc
or
mov
dec
xor
cmpsl
dec
fcomip
ljmp
adc
cmpsb
adc
sbb
add
mov
sbb
repnz
scas
lcall
pop
insb
outsl
push
lret
mov
jnp
repnz
sbb
pop
hlt
ret
fwait
shlb
mov
mov
call
mov
xchg
mov
sub
jb
les
rcrl
mov
lcall
lretw
push
xchg
aas
sbb
adc
and
roll
bound
jmp
js
and
sub
hlt
iret
cwtl
fs
xchg
pop
push
jl
aam
cs
arpl
in
insb
jg
call
aam
jg
sbb
hlt
pop
out
jb
pop
pop
clc
arpl
cmp
cltd
inc
movsb
iret
cmp
popa
push
call
jecxz
fwait
and
outsl
and
add
pop
lods
mov
add
cmp
push
mulb
push
outsl
jmp
add
sbb
mov
or
jne
in
out
dec
movsb
mov
mov
dec
fmuls
mov
loopne
or
mov
push
cld
or
lea
push
cmp
mov
jmp
xchg
and
in
mov
mov
ret
iret
stos
xchg
mov
movsb
mov
jmp
lret
subb
outsb
stos
xor
incl
ljmp
aad
jp
cmp
inc
dec
jb
cltd
pop
outsl
mov
jbe
inc
xchg
lcall
dec
popf
xchg
xchg
mov
aad
data16
subb
not
and
mov
decl
and
sub
dec
pop
pop
loopne
cmp
mov
rclb
mov
loope
cltd
hlt
out
out
and
loop
popf
lret
fprem
mov
xchg
je
mov
sub
int
sahf
sub
cmp
mov
cmpsb
push
push
insl
jns
push
ljmp
ficompl
mov
vsubss
mov
sti
cs
jle
popa
pop
jae
fadds
mov
leave
xchg
das
clc
call
cwtl
aas
jl
mov
sub
sbb
pop
in
rorl
lcall
or
xchg
in
outsb
mov
cld
pop
cltd
or
and
std
fcomip
pushl
int3
jl
cmpsl
pop
xor
inc
ja
push
mov
enter
xor
fs
decl
insl
push
pop
inc
push
stc
xchg
dec
js
movsl
pop
mov
stc
shlb
cltd
inc
mov
je
sub
add
inc
xor
mov
inc
adcb
gs
stos
dec
fsubs
jg
mov
lock
jb
inc
mov
stc
sbb
test
pop
or
push
outsl
add
and
daa
cli
jge
dec
hlt
xchg
sti
les
imul
mov
test
mov
lcall
inc
dec
insb
lods
adc
movsl
rclb
clc
jb
mov
mov
decl
popf
das
dec
sub
adc
jmp
inc
int3
sbb
das
cmpsb
roll
dec
push
jmp
testl
jmp
rcll
and
mov
cmp
jae
adc
ja
sbb
adc
and
pop
dec
xchg
mov
call
add
pop
adc
mov
lds
jg
mov
adc
ljmp
mov
nop
jle
into
inc
cmpsb
cmpsl
fwait
pop
xor
sub
cmp
sarl
loop
mov
outsl
clc
jmp
jle
push
lcall
inc
sub
push
fmull
out
mov
lcall
and
and
cmp
mov
inc
ret
cs
cmp
and
push
xchg
je
mov
decb
or
add
jmp
and
lods
jle
in
jmp
mov
push
lcall
fildll
scas
cmpsb
inc
or
fldenv
push
inc
inc
sub
mov
lcall
call
das
aaa
ds
pop
out
mov
or
lods
mov
sub
inc
ficomps
xor
pushl
sub
roll
sbb
or
add
mov
les
scas
pushl
arpl
in
adc
sbb
mov
add
scas
dec
lcall
adc
je
cmpsl
cltd
jp
inc
pop
xchg
pop
sub
xchg
gs
push
fwait
adc
into
mov
fcmovbe
xchg
cmovno
push
and
movsl
call
mov
scas
pop
test
cli
test
mov
incl
add
mov
mov
bound
cs
jmp
push
push
jno
mov
inc
adc
outsb
rcl
scas
out
stos
pushf
push
xchg
into
push
cmpsl
movsb
out
clc
call
into
mov
cs
add
negb
jns
sbb
cmp
aam
push
in
xchg
pushl
std
incl
lret
mov
push
jg
data16
jno
fwait
sbbl
inc
ficoml
jmp
repz
mov
insb
arpl
or
xchg
dec
dec
jnp
incl
js
pusha
xchg
fdivl
in
push
add
in
pop
popf
out
xchg
pop
out
sbb
add
dec
adc
jb
sub
lods
xor
fs
xchg
push
and
cld
add
incl
cld
xchg
repz
jge
cli
test
sahf
mov
das
add
cmp
dec
fiadds
add
int3
jns
add
jp
xchg
ja
push
out
call
xchg
in
cmp
pop
fiadds
pop
sub
push
xor
adcb
std
aam
loop
add
mov
adc
mov
das
rcrb
mov
cmp
in
pop
in
inc
cld
mov
jg
cwtl
addr16
fucomi
cmpsb
roll
mov
jmp
shll
dec
call
out
inc
rorl
pop
inc
dec
sub
mov
pushf
mov
bound
scas
jg
ja
pop
and
sahf
and
call
in
dec
sbb
clc
sub
das
sbb
insb
popf
and
jg
or
daa
movsl
cli
imul
inc
in
jo
loope
insl
xchg
pop
jo
stos
stos
ficomps
inc
test
stos
incl
mov
adc
imul
enter
repz
xlat
das
mov
dec
pushf
cmc
pop
call
nop
mov
inc
arpl
xchg
fcomi
cmpsl
add
outsb
xchg
mov
sbb
pop
xchg
cmpb
mov
push
pop
or
call
cmpb
incl
add
adc
out
mov
movsl
mov
repz
jecxz
daa
fadd
push
fwait
clc
incl
lods
dec
fcmovu
adc
js
mov
ljmp
jo
xor
inc
sti
adc
inc
mov
int3
jecxz
les
mov
outsl
jbe
popa
sbb
jns
jne
xchg
add
arpl
dec
sar
addr16
mov
inc
jb
in
jle
out
inc
in
adc
or
push
in
enter
mov
gs
mov
jp
clc
jnp
pop
pop
hlt
bound
inc
in
repz
sar
incl
mov
and
shll
sbb
ljmp
popa
mov
push
mov
cli
cmpl
ret
pushl
lahf
adc
sub
aaa
mov
xchg
ja
add
xchg
sbb
xchg
xor
ds
ljmp
dec
cmp
aaa
mov
clc
pop
inc
pop
sbb
sti
push
lods
add
dec
xlat
pop
dec
dec
dec
add
jmp
jl
or
lcall
inc
add
imul
jbe
jmp
push
ficomps
sbb
sub
ljmp
add
aam
push
scas
fimull
andl
fbstp
jnp
sbb
jmp
les
cmp
xchg
test
int
mov
cs
fnstenv
push
mov
incl
jmp
pop
pop
mov
pop
sub
mov
les
sub
pop
ret
sbb
add
pop
hlt
lret
push
inc
mulb
dec
movb
fildll
test
mulps
insl
mov
pushl
bound
stc
ret
mov
mov
jmp
out
add
and
ror
insl
test
fldl
jmp
mov
scas
outsb
add
xchg
xchg
dec
sub
sar
cli
hlt
xchg
pop
cmp
sar
push
sub
add
jno
mov
mov
mov
lods
in
pop
je
cltd
cmp
push
sbb
ljmp
leave
pusha
outsb
pop
sti
cli
clc
ror
jb
adcb
mov
ficoml
es
add
pop
xor
incl
or
sbb
cmp
das
push
dec
xlat
push
adc
xor
add
jb
mov
push
cmpsl
add
cmp
addr16
out
sbb
inc
mov
aaa
mov
ret
scas
shlb
in
cmp
lret
add
cld
fs
cmp
pushl
fiaddl
cmp
ljmp
les
lret
ficoms
mov
ljmp
jbe
es
dec
jnp
jb
icebp
pop
push
dec
popf
push
out
inc
flds
sub
and
jmp
std
mov
setne
icebp
lret
mov
cmp
cwtl
mov
or
push
fsubp
loopne
stos
xchg
add
scas
dec
jo
mov
call
js
cmp
lret
stc
cmpsb
add
jno
sbb
push
jnp
and
pop
mov
inc
fistpll
call
clc
jns
daa
decl
add
std
negb
movaps
add
js
pop
test
dec
pop
pop
cmpb
ss
test
xor
cmp
subb
or
mov
stos
loopne
jmp
mov
lahf
xor
cmc
push
mov
loop
ret
adc
mov
lcall
loope
push
mov
andb
add
cltd
daa
mov
in
in
xchg
mov
jns
inc
sti
decl
jne,pt
fistpl
imul
fwait
lret
enter
mov
out
jle
out
out
jns
push
sub
and
xchg
xchg
mov
mov
pushl
and
sub
or
loopne
cli
jne
mov
aas
mov
imul
pop
xorb
inc
inc
filds
mov
jg
xchg
aas
lret
scas
cmp
inc
rcll
dec
cwtl
jge
pop
incl
lea
sbb
decl
fldenv
jbe
xor
sti
cmp
call
sbb
xor
hlt
push
mov
inc
sub
mov
andl
push
test
shll
add
jnp
icebp
jmp
int
and
ljmp
lahf
dec
cli
shll
fistpll
jle
xor
test
mov
pop
test
iret
pop
lcall
sbb
lahf
fwait
and
sub
out
loopne
jmp
aas
les
ud0
or
bound
sub
xor
outsl
ds
push
inc
lcall
daa
xorb
std
and
shll
xchg
mov
decl
lock
lds
cmp
push
xchg
data16
ljmp
sub
lahf
sbbl
adc
sub
add
jl
jmp
cmp
jecxz
jnp
mov
pop
xchg
sbb
out
mov
ret
add
clc
lods
movsb
sub
pop
cmp
sub
inc
loopne
inc
js
ret
jnp
sbb
sahf
and
ljmp
ficoms
clc
negl
jbe
xor
out
or
xor
into
xchg
push
jmp
shlb
dec
int
dec
mov
pusha
cmpsl
push
sbb
insl
fistpll
mov
xabort
sub
outsl
xor
jnp
stos
arpl
ljmp
inc
inc
sub
xor
mov
jp
das
push
dec
pop
xlat
cmp
stos
aam
sbb
scas
cli
pop
cld
out
dec
and
roll
lods
test
in
add
pop
icebp
add
cli
aaa
jmp
or
pop
lret
sahf
sub
loope
hlt
xchg
cmc
ljmp
add
push
das
enter
in
outsl
ja
inc
adc
pop
out
dec
dec
inc
rorl
adc
sti
mov
mov
pop
sahf
popf
out
mov
pushl
ljmp
inc
fldenv
cmpb
push
mov
inc
jp
dec
sbb
pop
xchg
mov
or
sti
adc
clc
fwait
jo
add
inc
repnz
push
test
incl
or
sub
sub
loope
xchg
pusha
fldl
xor
and
xor
jmp
sbb
xchg
in
mov
sahf
jp
jge
inc
xchg
ja
scas
cld
dec
add
and
lcall
rcll
stos
imul
mov
dec
push
sti
lret
jne
scas
call
and
negl
lods
pop
jle
ja
add
in
pop
sub
outsb
adc
dec
mov
cwtl
sarl
fbstp
scas
add
and
cld
aaa
adc
sbb
mov
into
test
loopne
mov
les
jp
jp
clc
rcrl
fsubrs
or
ficoms
out
mov
lcall
add
cmp
fs
mov
cld
inc
adc
pop
add
fisttpll
scas
test
lcall
xchg
mov
mov
call
cmp
out
stos
rclb
xchg
adcl
push
pop
and
popf
stos
jmp
xchg
xor
cli
xor
sbb
inc
and
mov
ret
mov
xor
pop
adc
test
jbe
pop
loope
inc
call
rcr
dec
jge
pop
push
cmp
fisttps
jo
shlb
lods
shll
cmpsb
push
cld
mov
ja
xor
fucom
shl
mov
inc
cmp
inc
adc
decl
mov
dec
inc
fnstcw
jge
mov
pusha
mov
lcall
xchg
inc
cmp
push
incl
stos
and
fsts
mov
dec
jne
add
pop
jmp
shl
ss
jp
or
jp
aad
xchg
inc
mov
add
xchg
sub
cld
mov
mov
jg
aam
mov
jo
daa
jg
movsb
loop
mov
das
jae
adc
shll
inc
inc
mov
lcall
jecxz
sbb
or
test
mov
and
mov
inc
sbb
cwtl
mov
call
int3
loopne
fists
xlat
or
std
sbbb
xlat
into
lcall
leave
js
stos
pop
pusha
std
call
sub
or
sub
lds
lret
cmc
mov
jmp
outsb
sub
imul
push
shlb
pop
cli
insb
xor
dec
cs
insb
pop
jp
jge
jg
decl
cmp
pop
add
insb
mov
shll
dec
aaa
dec
cmp
jmp
int
ja
test
cmp
jmp
fistps
xchg
arpl
mov
fstps
cmpsl
mov
xlat
pop
xor
hlt
ljmp
fsubl
dec
xor
decl
adc
and
imul
loop
pop
gs
test
jle
mov
push
adc
jno
inc
add
fbld
cli
and
push
lahf
fucomi
enter
in
incl
sbb
mov
pusha
pop
or
jnp
mov
shrl
add
ret
outsl
mov
inc
xor
incl
das
push
sbb
in
xchg
push
out
das
sub
out
sahf
mov
imulb
movsl
stc
cld
ljmp
push
xor
sub
add
mov
popa
adc
dec
mov
mov
fisubl
add
insb
mov
icebp
ljmp
adc
aas
xor
aad
jno
frstor
aad
insb
cld
pushl
mov
push
mov
jl
dec
sub
loopne
decl
sbbb
pop
push
inc
sub
mov
and
ljmp
and
add
inc
mov
xlat
divl
jno
je
pop
xchg
mov
add
dec
dec
nop
jmp
iret
pop
xchg
inc
sbb
outsl
ret
adc
lcall
inc
pushf
fmul
stos
lods
or
adc
mov
dec
fldcw
lds
pushl
dec
cmp
repz
push
mov
adc
cwtl
ficomps
pop
cmp
xor
push
imul
mov
pop
pop
movsb
or
fidivs
push
stc
stos
sbb
std
movsl
daa
mov
jge
jmp
cmpsb
lcall
in
imul
in
mov
stos
dec
fidivrl
shlb
incl
cmp
dec
retw
dec
test
cmp
dec
mov
jecxz
xor
jmp
pushl
pop
push
xor
fcmovnbe
aas
bound
mov
icebp
rorb
and
frstor
mov
sbb
cmp
decl
sub
and
pop
lock
xor
and
mov
xchg
jns
push
incl
dec
fmulp
loopne
aam
cmp
fwait
xchg
xor
lret
sbb
inc
lret
jae
sar
jae
inc
mov
mov
leave
mov
or
inc
lcall
into
sub
aas
or
dec
add
dec
dec
xchg
inc
rol
mov
pop
jo
pop
ss
popf
in
testl
add
and
jl
and
sahf
repnz
inc
cli
or
xor
and
sahf
dec
mov
insb
cmp
xlat
lods
mov
ds
cli
addr16
jns
mov
pop
add
lcall
xorb
mov
std
xor
inc
mov
sti
xor
xchg
fs
sbbb
test
outsb
adc
arpl
fadds
jg
mulb
sbb
cmp
xchg
sub
jmp
push
call
std
call
daa
test
pop
and
jo
mov
xchg
xchg
das
aaa
xor
mov
dec
jne
js
sub
std
in
dec
fimull
xor
lahf
cmp
pushl
ret
addr16
mov
sti
lea
pop
jno
mov
mov
lahf
jb
mov
notl
dec
fldenv
nop
daa
push
inc
cs
loop
pushl
inc
scas
mov
add
pop
add
fcmovbe
push
pop
lcall
arpl
push
adc
mov
loopne
lods
popf
popf
ffreep
push
mov
ljmp
in
adc
xchg
stos
cli
fwait
mov
and
adc
jmp
fdivs
ss
sub
dec
loopne
xchg
xor
out
jecxz
dec
aaa
repnz
lods
test
sahf
push
int
mov
imul
add
cs
rcll
incl
mov
in
outsb
test
outsb
mov
cmpsb
in
imul
call
loopne
popa
lea
sub
xchg
fcompl
add
ljmp
lret
and
mov
sub
fucomi
adc
inc
cmp
pop
sahf
cltd
loope
inc
adc
cwtl
jmp
mov
jmp
add
sub
or
xchg
out
inc
mov
jnp
push
sahf
pushf
cwtl
int
jmp
pusha
and
sub
bound
fwait
sbb
sub
fstpl
adc
push
enter
decl
adc
mov
or
cmp
mov
sub
call
nop
jns
repz
or
add
int3
jmp
add
clc
or
sahf
rcr
ja
dec
adc
aam
arpl
mov
mov
pop
pop
and
xchg
fisubs
xchg
cmp
addr16
or
add
xchg
es
push
pushf
call
and
push
jg
stos
or
pop
stos
mov
or
ret
mov
jg
mov
ret
nop
movsb
and
mov
push
pop
mov
stc
xorb
stos
pushl
sub
mov
sahf
cmc
shrb
jnp
mov
data16
jmp
loop
adc
inc
addl
add
mov
and
sub
adc
decl
scas
jne
adc
pop
sub
shll
add
adc
jmp
pop
xchg
inc
mov
pop
cld
xchg
icebp
jno
or
or
lea
orl
fsubp
inc
cmpsl
bound
dec
cmc
inc
jae
push
sbb
push
fistl
xchg
mov
mov
cmp
ret
ficompl
mov
aad
sub
mov
dec
xchg
mov
movsb
lods
sub
add
sub
push
xchg
aas
iret
ja
fsubrp
fdivr
jg
rcll
cmp
in
fdivrp
out
cltd
outsl
xchg
outsl
mov
fistps
incl
cld
jmp
lahf
addr16
or
cld
int3
or
xchg
outsl
ss
push
jb
mov
mov
inc
mov
jg
gs
jmp
rol
ljmp
in
test
xchg
mov
xor
ret
outsl
pushl
call
sbb
rolb
mov
or
sbb
incl
push
xor
inc
mov
xchg
push
fs
adc
mov
add
lcall
cmpsl
scas
inc
popf
mov
or
call
mov
or
pushl
sar
and
jp
push
inc
jmp
xor
mov
inc
sar
mov
or
popa
push
cmp
repnz
jg
call
mov
cmp
scas
repz
mov
ja
mov
mov
mov
sub
xor
scas
mov
insb
idiv
mov
out
mov
mov
cmpsb
mov
lret
mov
mov
pushl
aas
imul
xchg
les
dec
jnp
xor
gs
mov
cmpsb
cmp
mov
fidivrs
insb
mov
or
ljmp
mov
add
dec
lcall
xchg
push
push
ss
and
mov
in
dec
lret
mov
xor
gs
loopne
cmp
push
inc
ljmp
pushf
mov
xor
ja
clc
dec
shlb
inc
and
mov
adc
mov
lcall
bound
adc
pop
je
pop
cmp
pushf
inc
adc
js
jge
cmpsl
pushf
xor
jnp
mov
scas
mov
mov
sub
incl
popf
pop
fsubr
add
adc
mov
push
insb
push
push
aas
fistpll
inc
mov
call
hlt
push
xchg
xorl
add
sbb
cmpsb
adc
push
rclb
mov
std
mov
mov
jge
sbb
push
imul
jnp
popf
pop
pop
pop
cwtl
xor
inc
fstl
cmpsb
jnp
and
mov
or
xor
pop
hlt
incl
das
xchg
mov
lods
cmp
ss
sti
sbb
ror
sub
pop
fcomi
lcall
or
into
rcr
xlat
push
xor
dec
and
decl
mov
xor
xlat
int3
sbb
mov
bound
jns
mull
jmp
add
sbb
fstl
cmpl
imul
sbb
add
inc
push
sbbb
mov
jo
push
cmp
cmp
mov
xchg
je
cmc
push
cld
incl
pushf
jp
push
sub
mov
jae
cs
in
movsl
dec
dec
nop
xchg
inc
dec
xchg
push
jno
ret
fbstp
gs
mov
sbb
mov
jno
xor
orl
push
adc
pop
mov
ja
call
call
cld
jmp
arpl
in
cmp
or
pushl
push
scas
daa
mov
ja
inc
mov
lret
pusha
xchg
outsl
jle
lret
cmp
push
xchg
data16
clc
mov
xchg
jmp
mov
or
ret
push
cli
xor
mov
cmp
in
ret
push
cwtl
add
pushl
mov
outsb
pop
adc
jae
sbb
popf
jno
addr16
jno
pop
mov
loopne
call
aas
repz
sbb
in
ja
lahf
test
int3
or
jg
jne
sub
mov
inc
loop
fcompl
test
add
xchg
jne
pusha
jo
jge
mov
mov
imul
fiaddl
adc
repnz
push
jnp
ljmp
ja
pop
lret
loope
mov
or
and
and
fstpl
fsubl
add
clc
lret
addr16
dec
mov
fldenv
pop
jo
or
jo
mov
mov
sbb
or
fistps
out
div
jp
std
insb
pop
cmp
repnz
lret
lret
sar
sarb
inc
mov
cmpb
push
xor
inc
shll
bound
loope
mov
pmullw
lods
dec
add
sub
pushl
cmpsb
pop
xorb
inc
or
mov
mov
xor
mov
push
pop
es
pop
into
mov
ret
cmp
push
cs
jg
xor
and
sub
xchg
or
mov
adc
leave
jmp
xchg
xchg
fcoml
mov
xor
dec
mov
lods
inc
adc
cs
mov
clc
xor
mov
and
in
roll
dec
shrl
mov
flds
int
mov
push
or
int3
cmp
in
inc
popf
into
call
fcompl
movsb
negl
adc
test
arpl
jae
xchg
insb
cld
ljmp
jbe
fs
arpl
push
xchg
in
xchg
or
xchg
adc
or
incl
cmp
mov
imul
scas
jmp
pushf
xchg
mov
push
xchg
ljmp
clc
lret
loop
pop
outsb
push
mov
aam
cmp
pusha
std
xchg
pop
inc
iret
mov
jl
jnp
lods
cmp
xlat
addr16
aas
inc
dec
sub
scas
clc
lcall
mov
out
push
and
jno
push
decl
cmp
push
ret
test
fwait
test
add
or
pop
mov
decb
cmp
insl
mov
mov
mov
outsb
divl
lahf
fstps
fistpll
lcall
pop
dec
adc
cmc
xchg
icebp
push
ds
mov
push
xchg
add
push
pop
mov
inc
incl
out
enter
sub
into
ss
js
test
stos
xchg
xlat
mov
popf
int
and
adc
loopne
test
adc
decl
int3
push
inc
es
adc
pop
shr
and
add
mov
jp
fwait
mov
clc
fbstp
jp
fwait
mov
sbb
pop
subb
add
lret
push
mov
ljmp
sub
repz
vmwrite
dec
xlat
mov
sbb
mov
cwtl
fdivl
frstor
xchg
adc
pushl
pop
leave
xor
shl
rcrb
adc
mov
call
out
gs
dec
jecxz
adc
adc
pop
ret
mov
mov
pop
ljmp
fistpll
mov
inc
dec
lcall
jg
outsb
daa
push
mov
cmp
or
inc
ds
lods
iret
mov
cli
into
cli
push
rorb
outsb
push
aas
jg
sub
ret
xchg
sub
push
scas
inc
stc
cmp
sbb
jp
cld
imul
push
sbb
cltd
sub
sbb
jbe
pop
sub
call
add
push
rcrb
cmp
daa
test
ds
adc
adc
lahf
lds
gs
pop
arpl
xor
push
das
and
jae
push
dec
jg
and
in
cwtl
test
into
mov
or
and
aad
out
out
jg
sbb
jmp
into
fidivl
lfs
xchg
ja
push
loop
lods
cmp
push
call
add
mov
adc
sbb
je
adc
sub
sar
or
in
pop
ljmp
xchg
out
xlat
adc
scas
xlat
out
cs
xchg
xor
xor
test
or
mov
dec
sbb
std
jmp
pushf
adc
inc
push
xor
shll
push
dec
mov
std
fcoml
loop
fisttpll
dec
push
ret
or
inc
mov
lret
xchg
bound
dec
addr16
mov
shrl
or
add
addr16
jnp
xor
sub
std
cmp
xchg
insb
call
cli
bound
mov
sbb
ret
jne
adc
dec
push
lcall
inc
add
jb
mul
inc
insl
pop
in
lcall
movsl
mov
pop
mov
outsl
cli
cmp
in
jmp
sub
mov
ljmp
mov
push
push
iret
xchg
stc
dec
mov
inc
fs
xchg
mov
imul
sbb
sbb
scas
mov
jmp
dec
dec
xchg
stos
int3
mov
fsubs
adc
xor
adc
fwait
inc
dec
pop
pop
subb
pop
mov
sub
mov
cmp
push
fstpt
insb
mov
jae
pop
cmp
pop
addl
mov
cmp
hlt
or
enter
test
data16
mov
lcall
mov
inc
mov
inc
ret
jge
dec
in
inc
push
pop
adcb
mov
call
sub
mov
mov
sub
push
xor
shll
jp
dec
cs
lret
mov
or
dec
sbb
arpl
mov
shlb
cmp
incl
push
ja
push
imul
xor
xlat
pop
mov
test
mov
insl
jmp
adc
push
addb
mov
jb
or
inc
ljmp
mov
jle
pushl
sub
sbb
notb
inc
and
into
aaa
push
insl
ljmp
test
sarl
inc
xchg
shll
loop
outsb
testb
jmp
addl
iret
xor
jb
cmc
fwait
mov
sbb
gs
fidivrl
decl
rolb
push
sbb
test
bound
call
lahf
jle
xor
xchg
decl
mov
lret
inc
enter
xchg
jmp
pop
es
jg
and
in
xlat
ffree
adc
jmp
xchg
mov
or
mov
dec
mov
popa
cs
pop
pop
outsl
xorb
mov
ret
aam
push
cmp
ja
cmp
or
nop
jmp
stos
lcall
loopne
mov
sbb
push
add
pop
jae
or
jbe
lcall
bound
js
enter
jg
enter
js
dec
adc
incl
inc
xlat
icebp
idiv
je
stos
mov
mov
push
mov
std
or
cld
pop
jno
inc
mov
sub
imul
arpl
pop
fwait
and
movsb
mov
pushl
enter
out
mov
pop
push
sub
orb
jbe
pop
push
mov
or
lods
jns
sbb
mov
xlat
rcrl
mov
mov
cmpsl
out
xchg
mov
lahf
and
aas
inc
ss
sbb
cmp
ljmp
lods
addr16
push
loopne
clc
and
lea
mov
ret
jle
idivb
cmpsb
call
mov
iret
pop
mov
dec
lar
cmp
stos
outsb
push
xchg
ret
ret
push
jne
aas
out
into
std
outsb
stos
pop
dec
jle
fiadds
lcall
scas
cwtl
jg
push
push
pop
test
dec
or
rolb
pop
movsb
movsb
cmp
adc
xor
cli
popa
test
fmul
dec
test
js
add
lods
pushf
xchg
mov
mov
aam
cmp
jne
dec
pop
loope
mov
bound
es
add
jns
mov
les
jnp
cmp
out
lret
sbb
test
cs
mov
xchg
fildll
pop
cmp
ret
cmp
pusha
jae
mov
lcall
aaa
push
mov
add
add
decl
add
mov
xor
fcomip
pop
sub
data16
mov
mov
out
test
test
pmuludq
push
icebp
jge
rcrl
insl
and
inc
gs
incl
repnz
pop
movsl
hlt
pusha
push
add
int
ja
cmp
fisubs
xorb
ljmp
dec
pop
lods
sub
xchg
push
mov
jae
scas
xchg
mov
lahf
mov
mov
and
lock
ret
aas
sub
adc
jae
das
clc
pushl
jae
ja
cmp
movsb
lock
jp
dec
loop
sbb
push
mov
ja
dec
dec
sub
adc
scas
repnz
outsb
mov
adc
mov
and
ljmp
out
mov
push
sub
jecxz
sub
shll
lret
inc
adc
sub
pop
aad
mov
xor
addr16
mov
repz
cltd
mov
mov
pushl
xchg
and
lret
mov
je
cli
pop
add
push
jnp
dec
in
mov
pop
or
sbb
cmp
sahf
xor
cmp
ljmp
sar
stos
mov
stos
jne
mov
and
jle
rcrl
cmp
xchg
incl
mov
push
push
jle
pop
push
sbb
outsb
inc
dec
movsl
fcmovu
push
pop
sbb
clc
int
test
mov
pop
in
pop
movb
cmp
mov
rcrb
add
decl
orb
sub
pop
sub
popa
xchg
fldenv
in
fbld
pop
scas
loopne
aad
shrb
push
fisubs
inc
insb
jne
sbb
mov
cs
sar
pushl
fprem1
push
dec
fcoms
add
lock
shll
push
out
shlb
adc
repz
nop
sub
call
rol
insl
out
or
push
idivl
pop
push
xchg
or
pop
loop
add
mov
shll
dec
jb
cmp
mov
push
add
jbe
mov
leave
inc
adc
lods
fisttpl
xlat
sbb
ljmp
sub
push
jns
shrl
xor
cld
and
mov
cs
call
notb
outsl
lcall
imul
mov
shrl
daa
xor
leave
mov
sub
sub
mov
aas
xlat
negb
xor
repz
shll
aaa
pop
pop
inc
bound
inc
mov
incl
test
dec
jo
mov
cmpb
lea
outsl
xchg
xor
pop
fcmove
into
adc
das
decl
lock
ss
popf
or
mov
sub
call
add
mov
pop
jo
clc
in
jmp
dec
dec
jge
fstpl
inc
hlt
cld
cmp
mov
push
rorb
sbb
jnp
cmp
dec
or
pop
mov
mov
incl
in
mov
inc
adc
cld
call
dec
mov
push
test
ljmp
sub
sub
xor
xor
sub
cmpsb
stos
xchg
into
jmp
adc
and
hlt
cmp
xchg
lret
push
jg
arpl
xor
fnstenv
pushf
and
subl
lcall
ja
cmp
mov
mov
popa
push
inc
dec
aaa
xchg
add
pop
cld
mov
std
ljmp
jnp
je
push
mov
icebp
int3
decl
inc
imulb
inc
pop
mov
mov
push
lods
popa
sbb
push
dec
dec
push
stos
mov
int3
bound
shrl
shll
mov
cmp
std
add
xchg
outsl
inc
xor
jae
loopne
mov
test
incl
aam
push
push
xor
jle
adc
in
aas
movsb
dec
push
in
xlat
xchg
pop
or
inc
pushf
jne
push
imul
ja
mov
add
sbb
and
mov
mull
lods
and
mov
jmp
fcomps
fsubp
pop
mov
mov
jg
pop
add
jmp
test
pop
jle
xchg
lret
int
dec
incl
test
rorb
dec
jae
sbb
mov
jae
or
incl
push
repz
pushf
pop
pop
out
xchg
adc
fnstenv
xlat
pop
outsl
loop
jmp
loopne
jb
cs
rcll
int
mov
add
scas
mov
adc
push
cmpsl
shrl
dec
test
jl
xchg
mov
call
pop
push
ds
add
scas
sbb
jnp
call
js
mov
std
mov
scas
jl
fisubl
lock
pop
std
xor
add
xor
pop
add
or
pushf
lock
xorb
lcall
push
sbbl
push
clc
fdivrs
ljmp
in
pop
add
mov
clc
std
inc
inc
fistps
fistpll
pushfw
jns
adc
mov
loop
adc
or
pushf
popf
nop
mov
jge
test
mov
fwait
pop
pop
sbb
mov
ljmp
and
sbb
mov
loope
clc
cwtl
out
and
ret
xlat
add
fildll
clc
in
aad
or
xor
mov
pop
getsec
cmp
xor
dec
sbb
fistps
ljmp
int
sti
test
movsb
ret
mov
outsb
or
subb
sbb
xchg
or
jecxz
jmp
js
pop
jp
scas
pusha
sub
nop
xchg
ljmp
aam
mov
dec
ficomps
loop
jge
mov
decl
pop
inc
inc
dec
xchg
icebp
std
outsl
test
clc
sub
pop
push
add
or
jle
call
dec
lods
clc
mov
fwait
lret
repnz
rolb
xchg
push
push
jecxz
std
fdivs
adc
inc
mov
mov
loopne
pop
js
mov
decl
inc
cmp
or
in
dec
cld
push
mov
inc
jecxz
or
pop
movsl
sarl
dec
inc
inc
call
int3
rcrb
mov
sub
es
aad
xchg
lcall
cmp
jo
inc
adc
mov
inc
mov
hlt
push
pop
lods
push
add
dec
push
call
jo
mov
fcomip
mov
popf
pop
add
lods
insb
ss
das
sbb
pop
pop
pusha
ror
add
incl
xchg
mov
not
ljmp
pop
xor
ds
shlb
jg
mov
jb
ror
cli
decl
jno
mov
and
xor
push
xchg
ljmp
aad
je
dec
adc
fists
jmp
cwtl
push
mov
fwait
pop
loope
sarb
fstl
pop
push
lock
pop
pop
cs
adc
adc
lret
jl
jp
lods
mov
call
pop
mov
jge
add
pushf
sbb
incl
cmp
js
xchg
dec
fwait
repz
adc
mov
mov
aam
cmpsb
cmpsb
imul
shrb
filds
or
adc
pushl
repz
ss
fnstsw
and
xchg
xchg
shll
sbb
and
pop
es
inc
push
out
mov
ljmp
inc
sti
outsb
pop
mov
mov
fcomp
js
dec
mov
ret
call
mov
jb
in
es
adc
mov
pop
das
pusha
lea
stos
push
and
or
jb
jmp
and
incl
pop
mov
mov
sahf
js
cmp
xchg
and
mov
loopne
decb
jno
test
jg
jmp
stc
cwtl
jge
movsb
sbb
fisubrl
sar
call
mov
sbb
push
and
fcmovnb
iret
je
adc
mov
arpl
mov
filds
repnz
dec
call
call
ret
enter
arpl
add
lcall
popa
dec
ror
stc
in
outsl
rolb
adc
pop
or
jne
xor
sbb
inc
mov
mov
stos
pop
fstpt
ret
subl
cmp
ljmp
push
fimuls
iret
aam
jle
push
aaa
add
mov
roll
inc
pop
mov
lahf
lcall
push
inc
lahf
sub
ret
mov
aas
mov
sub
sar
gs
jg
pop
xor
xor
mov
mov
cli
imul
subb
xor
pushl
dec
pushf
ret
sub
cmp
push
and
jbe
lahf
pop
and
jne
scas
out
arpl
aaa
jl
mov
jecxz
int3
inc
lds
sarl
lods
fwait
sbb
out
push
push
shlb
cmp
decl
mov
sar
jg
mov
mulb
aas
jmp
dec
mov
out
dec
lods
push
gs
push
lods
and
xor
mov
out
jecxz
outsw
insl
popa
pop
pop
dec
loop
insl
popf
add
ss
or
fisubrs
or
mov
mov
add
or
cmp
mov
call
push
fwait
inc
in
sbb
leave
adc
lea
scas
pop
popa
push
mov
jmp
and
int
xchg
iret
and
js
arpl
fs
aas
add
out
incl
sti
bound
adc
cmp
lock
mov
shll
add
mov
dec
loopne
scas
cmpsb
lock
inc
lea
cmp
dec
jle
aaa
sar
jmp
int3
sahf
dec
addr16
xchg
clc
decl
push
nop
push
push
decb
movsb
xchg
or
mov
test
scas
jns
push
mov
decl
aam
jecxz
testb
jne
push
in
adc
mov
jmp
add
cli
mov
pop
repnz
cmpsl
fs
into
sar
pop
add
mov
stos
leave
lods
lcall
je
cli
mov
inc
into
add
xchg
cltd
iret
mov
pusha
or
pop
sub
out
cli
popf
shll
push
push
jno
mov
cmp
dec
sbb
jg
fdivl
jno
sub
dec
enter
push
add
and
dec
xchg
add
test
push
test
bound
mov
mov
les
je
cmp
int3
push
repnz
lret
sahf
push
leave
jg
int3
fimuls
jmp
pop
jbe
stc
lods
mov
cmc
orb
call
scas
push
lcall
rep
int3
or
jbe
mov
incl
pop
adc
es
mov
and
sbb
call
int3
aas
outsl
inc
iret
in
pop
lcall
inc
into
push
js
lretw
sbb
cmp
ljmp
jge
ret
ja
ljmp
xchg
rcrb
ret
xchg
xchg
jmp
mov
jns
xor
sub
pop
in
stos
mov
ds
lea
push
xlat
fnstenv
pop
add
fistps
cmp
xchg
lret
or
decl
mov
adc
sbb
xorb
mov
pop
in
ret
out
orl
mov
aaa
bound
adc
sub
outsb
dec
inc
fwait
ljmp
jmp
js
pop
in
ret
arpl
aaa
push
nop
jbe
fs
pop
jle
dec
fdivrp
jmp
lea
push
xchg
or
mov
xchg
fadd
mov
lcall
inc
mov
arpl
mov
fisubrs
and
cmp
lea
inc
movsb
leave
imul
push
aam
fwait
daa
fisubs
xor
lcall
fiaddl
or
lahf
xchg
inc
rcr
imul
push
pop
stc
pop
or
ja
idivl
lods
sbb
jno
in
out
fs
pushl
cld
mov
fisubs
subb
inc
mov
orb
imul
fstl
mov
xor
test
sub
ss
or
mov
inc
insb
rorl
sbb
push
lcall
mov
jne
subps
jo
xlat
add
sbbl
mov
in
mov
loopne
lcall
jns
loop
pop
sahf
data16
add
lea
bound
xor
inc
sbb
cltd
call
mov
test
test
dec
sbb
decl
ja
test
sbb
or
mov
jecxz
and
pushl
push
adc
push
in
in
outsb
adc
in
mov
sti
adc
push
mov
mov
decl
pop
push
jge
xorl
push
cli
push
cmpsl
pusha
ds
add
xchg
adc
jne
andb
push
test
mov
insl
ret
int
push
mov
add
push
insl
js
xchg
adc
idiv
or
insl
out
cwtl
sub
test
mov
stos
movsb
rcrb
data16
rclb
arpl
sub
add
inc
mov
sub
sbb
outsb
repz
aad
lcall
and
pop
push
or
pop
mov
xchg
movsl
jp
aas
and
fiaddl
inc
adc
cmpsb
call
sub
xchg
mov
sub
dec
aaa
mov
add
insl
mov
sub
and
arpl
ja
mov
xor
xlat
add
adc
cltd
das
insl
inc
and
xchg
enter
dec
adc
sbb
in
sbb
pop
adc
mov
xor
or
jge
mov
ja
decb
mov
cli
pushl
jl
movsb
adc
pop
add
xor
enter
pusha
stos
push
outsb
push
call
mov
sahf
cmpsb
xchg
xchg
cmpsb
and
xchg
sub
fisubs
jno
inc
push
mov
dec
lcall
mov
sbb
adc
lea
sub
lcall
popa
cmp
dec
repnz
dec
and
sahf
jecxz
mov
add
add
incl
mov
xor
aaa
fdivl
sahf
jbe
adc
or
loope
mov
movsl
ret
xchg
mov
add
loop
call
jecxz
or
imul
push
xor
outsl
push
data16
test
jmp
int
addb
jecxz
adc
es
out
jb
inc
icebp
dec
divl
lcall
outsl
clc
sahf
mov
and
jbe
adc
jp
imul
and
and
in
push
pop
mov
mov
mov
es
in
filds
int
popa
jnp
scas
push
adc
lcall
ffreep
inc
mov
or
xor
shlb
cmp
data16
pushl
mov
push
jb
movsb
dec
cmp
lcall
nop
dec
enter
outsb
cs
call
lcall
mov
sub
jp
sub
cmc
inc
stc
mov
std
jl
scas
hlt
incl
es
sbb
jns
test
jle
push
sbb
pop
pushf
add
adc
add
popf
out
jnp
mov
pop
mov
cmp
inc
stos
jge
cs
and
neg
ljmp
pop
movsl
lock
mov
sbb
sub
mov
jnp
cmp
inc
and
xor
push
les
pop
mov
adc
and
jle
mov
rcr
jmp
and
xchg
mov
xchg
mov
lcall
dec
shlb
sbb
out
ss
into
add
cmp
pop
mov
jmp
aad
xor
push
xchg
dec
mov
xchg
lcall
call
cli
insl
xchg
ljmp
cld
icebp
adc
popf
sbb
cld
jmp
xor
and
pop
add
pop
mov
sbb
decl
ja
mov
sub
std
and
pusha
cld
jb
sbb
dec
or
dec
aam
incb
shlb
add
movsl
push
insb
and
mov
mov
xor
decl
mov
stos
lods
xchg
imul
sbb
in
mov
pop
hlt
outsl
xchg
gs
mov
ss
arpl
cwtl
ss
mov
sub
aad
or
or
lea
adc
and
test
mov
ljmp
cs
mov
not
cmp
dec
mov
das
je
nop
jle
mov
fildll
xchg
ret
and
and
or
repz
fbstp
mov
add
aam
dec
in
add
inc
out
movsb
sub
shl
mov
incl
pop
xchg
cmpsl
popf
xor
cmp
out
jb
faddl
stc
mov
push
fsubrp
mov
xchg
cmp
sub
inc
ret
xchg
bound
arpl
mov
popa
jp
aas
lretw
mov
ljmp
and
mov
sub
mov
add
add
cmc
jne
js
outsl
loopne
xchg
and
push
jmp
or
insb
test
mov
fistpll
sbb
jne
xchg
ja
xor
dec
mov
add
push
fwait
add
mov
add
cmp
loope
cmp
dec
pop
jno
test
pop
add
fldl
pop
jg
jg
insb
in
mov
sub
cmpsb
mov
pop
add
jecxz
loope
inc
clc
decl
xchg
cld
popa
pushf
mov
mov
es
call
xchg
push
int
push
in
xlat
mov
sub
dec
xchg
push
mov
sub
or
push
lcall
xor
cld
fistpll
fcmovu
mov
fidivl
ss
push
mov
jno
mov
nop
filds
jae
popa
aas
cmp
inc
cmp
psubb
cltd
push
ret
lcall
test
fsts
push
in
mov
test
call
hlt
fsts
cmpsb
bound
dec
sub
mov
adc
jb
call
sub
mov
pop
dec
fsubr
imul
dec
test
fcom
mov
push
pushf
pop
out
stc
sbb
in
pushl
dec
lret
fistpll
stc
sbb
xor
xor
xchg
pop
rclb
dec
jg
addl
or
jmp
imul
test
cltd
repz
push
pushf
xor
jl
mov
in
mov
test
pop
in
adc
adc
push
xor
xchg
fcomip
nop
and
push
sbb
fwait
loope
pop
mov
inc
insl
push
mov
mov
cmp
xchg
jg
cmc
jmp
add
or
mov
sub
pushf
je
je
xor
pushl
outsb
stc
aam
popf
mov
arpl
pusha
jl
je
in
dec
icebp
sub
xchg
clc
incl
add
push
adc
out
insb
xchg
loopne
and
aad
pushl
es
mov
sub
mov
rol
xor
sahf
jg
lods
aad
cmp
mov
xchg
sub
and
imul
idiv
inc
add
fdivrp
stos
xchg
mov
shl
fnstsw
out
adc
data16
mov
jmp
dec
ds
lods
pop
aaa
pop
dec
mov
or
arpl
adcl
lahf
jg
lcall
add
inc
and
and
std
inc
fs
out
aas
aam
mov
mov
add
mov
xchg
pop
fs
cli
repz
inc
mov
jg
test
out
mov
xchg
test
ss
jl
cmp
incl
loop
adc
leave
cmc
scas
xchg
jp
loop
mov
pop
dec
jae
js
pop
mov
mov
push
cld
inc
gs
or
jbe
mov
push
xchg
pop
mov
aaa
std
int
or
mov
add
cmpsb
push
inc
ds
jae,pt
das
dec
ss
jnp
icebp
jmp
enter
sahf
cmp
std
lods
adc
push
mov
dec
fsubrl
lcall
outsb
add
ds
das
roll
stc
adcb
pop
push
flds
push
sub
mov
cli
jo
out
or
xlat
adc
sub
lret
cmpsb
leave
int
lock
into
jecxz
push
sbb
push
es
out
mov
lock
adc
mov
add
mov
stos
dec
pop
pop
bound
jbe
call
scas
leave
hlt
outsl
cmpsl
sti
fwait
xor
inc
cmp
cmp
popa
xor
in
xchg
lcall
mov
inc
sarb
stos
data16
popf
das
mov
repz
xor
jmp
nop
inc
jnp
push
adc
adc
aad
mov
movl
movsl
mov
les
add
hlt
jns
das
fisubrl
push
leave
ja
aas
and
xchg
ret
cmp
push
scas
call
out
dec
sub
test
pop
xor
stc
pop
add
push
add
xchg
aam
xlat
or
xor
cmp
cmc
pushf
cwtl
mov
push
pop
sbb
mov
ss
sub
pop
adc
das
lods
mov
bound
mov
mov
out
jmp
xchg
mov
cmp
fsubrl
or
icebp
sub
lret
movsl
jae
sbb
cmp
fucomip
jae
xorl
mov
mov
xor
int
adc
insl
enter
incl
into
or
mov
cltd
mov
loope
xlat
cmp
dec
sub
enter
sub
and
dec
shlb
lods
fisubl
push
jle
fnsave
cmp
jae
lods
push
xchg
ljmp
inc
insb
pop
push
xlat
rcll
imul
pop
mov
jne
adc
add
sbb
testl
arpl
dec
pusha
sub
xchg
jns
pop
movsb
adc
adc
outsl
add
mov
test
imul
or
pop
mov
jmp
push
mov
fmuls
int
and
mov
pop
add
enter
mov
stos
push
or
out
xchg
fldcw
aaa
fwait
inc
ds
push
sbb
jp
add
pushl
pop
inc
jg
mov
sbb
testl
jns
mov
inc
popf
sti
out
outsl
repnz
fmul
pushf
xchg
fstpl
cmp
in
mov
adc
xor
adc
sub
movsb
dec
repnz
incb
and
jle
cmc
lods
add
shlb
data16
mov
into
addr16
mov
cli
dec
dec
std
mov
mov
mov
daa
sbb
xchg
imul
or
pop
subb
cwtl
jae
lret
cmc
fdivr
pushl
mov
jl
ret
lods
adc
cmpsl
scas
int
ret
sbb
movsb
mov
loopne
jmp
lcall
scas
test
shrl
sbb
iret
outsb
inc
clc
outsl
bound
fbstp
pop
ljmp
inc
dec
ds
jg
ljmp
iret
popf
jp
ret
push
adc
pop
mov
ja
leave
fxch
movsb
push
decl
mov
sbb
les
mov
sbb
jg
add
push
lods
dec
je
jmp
pop
inc
jmp
subl
jp
in
arpl
sbb
mov
insb
in
mov
cmpsl
jge
sbb
ss
xchg
adc
stc
test
jle
fildl
sub
ja
inc
or
ljmp
xor
pop
incl
pop
mov
insl
push
stos
mul
subb
in
ljmp
push
les
xchg
mov
loopne
sub
push
add
inc
cld
int3
adc
xor
inc
dec
loope
jb
nop
and
inc
lahf
icebp
sbb
into
dec
xor
pop
cmp
lret
add
dec
scas
sub
push
add
inc
test
gs
call
jp
es
repz
mov
cmp
shrb
sbb
inc
jne
imul
cmp
or
pop
aas
insl
fcom
inc
test
jmp
jp
adc
arpl
cmp
and
loop
loope
push
dec
add
mov
pop
call
lahf
jmp
mov
pop
sbb
add
fs
fistps
push
jp
sbb
fildll
decl
iret
aad
cmp
js
adc
xor
jno
xchg
or
ficompl
lret
sbb
repz
pushf
xor
jns
lea
dec
dec
lret
adc
add
sbb
lahf
sahf
dec
jg
sub
add
sub
push
cltd
or
in
jmp
lcall
fwait
sub
cmpsb
sub
push
or
clc
inc
or
push
dec
push
imul
and
movb
dec
mov
dec
hlt
jmp
decl
adc
mov
fsubs
cmpsb
cmp
daa
dec
lock
add
aas
mov
jb
add
cmpb
xchg
pop
or
jmp
incl
cmp
and
orb
into
incl
sub
jno
push
mov
cmp
in
scas
int3
test
sbb
mov
mov
mov
cmp
add
dec
xor
add
inc
loopne
push
std
out
mov
jnp
sbb
xor
lret
imul
jle
outsl
es
sub
cs
test
outsb
and
sbb
cltd
addr16
mov
lcall
sti
sti
aam
jae
jb
or
and
xchg
aaa
xlat
cmpsb
fbld
cs
or
lea
roll
loop
pushl
dec
insb
fs
jbe
mov
mov
push
repnz
scas
mov
mov
sahf
arpl
iret
xchg
mov
js
push
xchg
jl
sub
adcl
aad
cmp
adc
push
mov
into
jnp
dec
lcall
hlt
mov
aaa
popa
movsb
mov
pushf
test
lahf
lcall
and
je
fsubl
push
inc
jns
rorl
sbb
shl
movd
idiv
mov
or
icebp
dec
jae
inc
das
aam
adc
imul
sti
mov
clc
arpl
sbb
stos
call
insl
xchg
or
popf
into
pop
nop
into
inc
mov
test
pushl
xchg
loop
fbstp
push
and
shr
popa
les
xchg
sbb
ds
sbb
out
insb
stos
pop
pop
pop
or
push
xchg
cmp
cmp
test
mov
jb
ss
mov
shrl
fs
fcomps
xchg
push
mov
jns
imul
test
ja
sub
jg
jmp
sbb
in
dec
pop
fwait
addb
andl
cli
fdivrs
dec
call
cld
mov
mov
mov
adc
push
xor
add
cmc
call
inc
ret
sub
fistpll
cmp
cmp
jae
stos
call
pop
pusha
pop
fiaddl
repz
push
stos
cli
add
into
js
sub
add
call
dec
mov
or
leave
sub
es
sub
and
jne
in
movsl
cmp
sbb
xor
loop
lods
les
push
cmp
lds
ja
out
jae
loope
inc
int3
dec
sub
sbb
mov
jp
cmp
pop
decb
or
cli
fcomip
or
jl
dec
dec
or
or
int3
sbbb
call
fs
push
dec
movsb
mov
sbb
sub
mov
out
cmp
and
sar
cld
cmp
sarb
push
mov
and
adc
cwtl
andl
mov
fdivr
incl
daa
mov
repnz
inc
pop
jmp
popf
inc
and
mov
add
in
cmpsb
out
jmp
xor
jno
xchg
jg
inc
fistpl
aad
pop
mov
add
add
test
outsl
aad
aas
in
cld
mov
and
cli
bound
sbb
rcrl
ret
xchg
mov
pop
sbb
xor
cmp
sbbb
sub
xchg
mov
xor
std
pop
sub
or
pop
ja
lret
pop
je
fcomps
jge
ret
add
scas
pushf
idiv
pushl
dec
iret
inc
pop
stc
icebp
mov
lods
out
push
in
das
jae
sub
cli
add
lahf
mov
xchg
push
movsl
data16
mov
adc
xor
mov
mov
mov
cmpsb
test
repnz
aad
ss
mulb
ljmp
jo
daa
add
bound
lods
cmc
add
adc
out
pop
fildl
out
clc
repnz
mov
out
int3
xor
je
mov
into
subb
push
int3
int3
jo
dec
mov
lcall
jp
lahf
pop
fs
cld
imul
sbb
or
stc
lret
inc
adc
xchg
xchg
and
jg
les
add
std
fnstcw
popa
jmp
push
jnp
inc
inc
sub
add
sbb
js
imul
js
ja
mov
sub
ljmp
jnp
aad
int3
add
cld
in
jmp
mov
jae
imul
pushl
inc
mov
insl
or
mov
mov
ret
mov
pop
iret
movsb
sti
inc
aaa
jne
push
mov
ljmp
push
in
stos
inc
jne
pop
xor
out
loopne
cmp
push
sub
push
pushl
fcmovb
and
mov
js
xchg
xor
dec
dec
inc
fucomip
sbb
xchg
cmp
xor
dec
insl
dec
popf
pop
inc
inc
stos
mov
mov
inc
loop
leave
pusha
lock
test
incl
jne
push
es
push
and
fcomip
jmp
mov
add
pop
iret
adc
sub
rorb
out
push
dec
cmpsl
fidivs
addb
cwtl
mov
das
lods
mov
sub
movsb
scas
out
jo
aam
mov
fisttpl
ljmp
lret
sbb
shll
sarb
or
cmp
jmp
out
and
cmpsb
mov
jp
mov
repnz
ja
mov
das
les
dec
in
mov
ja
ds
dec
lcall
pushf
cld
xchg
inc
add
in
cmp
push
xchg
mov
adc
ljmp
jne
enter
inc
insl
rcrb
mov
shr
pop
adc
push
add
ljmp
xchg
pop
push
fdivs
pop
iret
adc
into
xchg
flds
stc
test
in
mov
aam
jg
icebp
mov
add
test
lods
aaa
sbb
and
inc
mov
sub
xlat
adc
xor
rcll
jmp
popa
or
push
jl
push
add
pop
xorl
insb
iret
mov
pushl
popf
or
inc
xor
decl
cli
xchg
xchg
aad
xor
cmp
cmp
xor
mov
ljmp
mov
shrb
pop
fs
lds
xorl
movsb
or
jns
mov
lcall
popf
push
test
enter
adc
mov
sub
loop
ljmp
bound
inc
imul
insb
icebp
jne
loop
or
jne
movl
mov
pusha
repz
mov
pop
fsubs
stc
repnz
lcall
jg
sub
fstps
adc
dec
repnz
push
ljmp
adc
push
mov
ljmp
pusha
xor
cmc
xor
jle
inc
and
call
inc
xchg
imul
adcl
cmp
stos
mov
les
outsb
sub
ljmp
adc
lock
into
das
pop
mov
push
rcr
or
cmp
inc
xor
lods
sbb
decl
in
adc
xchg
push
inc
pop
lahf
into
lock
dec
movsl
adc
addb
mov
shr
mul
iret
cmp
adc
repnz
scas
add
out
pushf
xchg
lods
out
pop
sbb
mov
jecxz
add
pop
jae
pop
lock
ljmp
cli
imul
mov
imul
imul
nop
sbbl
add
jmp
fs
push
fistps
shlb
cmp
lcall
mov
call
mov
sbb
fwait
xchg
mov
adc
sub
clc
dec
jle
xadd
decl
inc
ds
movsl
xor
cli
cmp
imul
push
or
cmp
adc
sbb
mov
out
and
fucomi
lock
icebp
pop
inc
pop
sub
jg
into
and
mov
incl
sbb
lcall
sub
xchg
inc
dec
or
push
cmp
ds
cli
mov
clc
cmpsb
jae
aad
xchg
ficoml
decl
inc
and
or
sub
jg
push
outsl
mov
decl
outsb
int3
daa
data16
rcl
cmc
push
call
ficoml
in
mov
push
jb
decl
and
mov
push
mov
mov
stc
sbb
add
sarl
ljmp
add
loope
arpl
push
lcall
mov
xor
and
pop
dec
and
push
outsb
aam
shlb
mov
ds
filds
xchg
mov
lret
mov
xchg
pop
mov
decl
pop
rclb
insb
fbstp
inc
fcoml
js
pop
aas
test
mov
inc
fnstsw
sub
jle
cmpsl
xor
mov
aam
sti
and
jmp
nop
ljmp
push
inc
js
sbb
cmp
aas
and
push
push
popf
mov
cmp
push
mov
int
mov
jle
out
add
sub
ret
cmp
fadd
mov
push
cs
fisubs
andb
cmp
iret
adc
dec
mov
pop
xchg
mov
mov
rolb
dec
jmp
add
fsubl
test
mov
std
in
sbb
outsb
insb
sub
sarb
movsl
xchg
incl
dec
ss
cs
in
mov
and
cmp
cmp
adc
js
cmpsl
enter
xor
mov
jmp
jbe
mov
lock
jg
pop
dec
insl
xchg
pop
outsb
test
mov
jg
in
cmc
add
decl
jl
fwait
xor
adc
stos
adc
ret
stos
insb
xchg
outsl
add
call
add
scas
imul
jecxz
pop
mov
cmpsb
insl
dec
arpl
scas
pushl
add
addr16
fwait
push
out
dec
inc
hlt
arpl
or
ljmp
int
ljmp
mov
out
incl
pop
push
pop
cwtl
test
mov
xor
cmp
inc
call
xchg
xchg
lahf
push
cmp
cmc
hlt
std
mov
xlat
enter
mov
sbb
jae
shl
xchg
pop
push
sub
lret
test
xchg
dec
cmp
sbbl
test
stc
stc
stos
dec
sub
jmp
pop
and
pushf
pop
sub
mov
adcl
pushl
out
test
adc
int3
sub
and
pushf
bound
jmp
subl
popf
mov
fbld
mov
lods
xchg
mov
lcall
mov
and
xor
pop
ljmp
dec
cmp
pop
dec
fnstcw
testl
cmc
or
ljmp
fnstenv
add
es
mov
xchg
repz
cs
jg
sub
jne
lock
jge
int
ljmp
cmp
bound
fiadds
lret
add
mov
fcmovb
jmp
fmul
aam
mov
xchg
mov
cli
adc
xchg
stos
jg
add
lods
dec
sub
dec
dec
cmc
ret
and
addr16
jg
sti
inc
stc
stc
push
cmovbe
cmp
lods
cmp
mov
sbb
insb
lret
loope
inc
test
sbb
jmp
pop
stos
pop
insl
jge
or
std
mov
and
repnz
mov
cmp
add
leave
sub
push
aad
fmul
push
adc
popf
call
adc
jns
mov
outsl
ss
cmp
mov
cld
sarb
in
jmp
mov
inc
leave
xor
xchg
push
adc
push
pop
dec
insb
cmp
jns
fidivrs
mov
jle
pop
js
inc
or
leave
adc
das
arpl
dec
jo
add
in
sub
inc
loopne
sub
sbb
aam
js
jecxz
ja
cmpsb
pushl
data16
push
push
mov
jp
popa
dec
movsl
mov
mov
sub
pop
cmp
mov
out
push
imul
in
cmp
jbe
adc
fidivrs
sub
inc
cltd
mov
decl
adc
xor
push
dec
pop
xlat
insb
dec
mov
jae
jb
fstps
clc
ljmp
sar
mov
fs
call
or
jb
je
sbb
sub
push
xor
jg
dec
xchg
int3
loope
bnd
ss
cmp
lea
jg
es
pushf
jb
pop
push
test
cmp
lods
pop
push
xchg
inc
adc
jo
popf
lock
lock
jle
push
aas
daa
or
out
sub
pop
js
pop
pop
mov
aas
inc
bound
into
adc
leave
rolb
jb
xor
or
lcall
adc
popa
sbb
scas
sub
mov
int3
xchg
shl
shrb
or
orl
pushl
mov
out
push
adc
push
mov
push
sbb
pop
ret
xor
gs
or
call
pushf
xchg
inc
aad
mov
cli
jle
and
dec
dec
jo
decl
lods
xor
std
aas
dec
sub
dec
sbb
cmp
sub
inc
xchg
sbb
jge
or
push
xchg
bound
push
mov
cmp
test
jne
dec
idiv
testb
nop
ljmp
movsb
addr16
add
dec
xor
sub
cli
ljmp
test
jbe
pop
xchg
or
lods
neg
cmp
js
aas
insl
dec
mov
sub
outsl
pop
enter
mov
das
sbb
dec
push
xchg
xchg
mov
jns
sub
ja
cmp
sahf
push
sub
out
insb
iret
add
xchg
pop
ljmp
or
insl
rorb
xchg
xor
cwtl
or
pushl
scas
cmp
aad
lods
xchg
and
out
daa
iret
jae
pop
aaa
push
dec
push
jg
lcall
pop
gs
lock
pop
rorb
out
xor
fs
lods
push
iret
xor
and
cmp
inc
sahf
sbb
js
daa
mov
insl
icebp
or
mov
ret
xchg
push
cmpsl
mov
out
adcb
dec
xchg
mov
dec
push
xchg
inc
mov
pop
inc
and
adc
push
mov
mov
inc
inc
sub
sub
mov
mov
push
incl
pop
jns
inc
test
out
pop
cli
or
loope
cmpsl
xor
xchg
addr16
lods
fwait
incl
mov
jp
mov
sbb
xor
in
fwait
xor
or
in
dec
jg
xor
mov
mov
cwtl
loop
adc
push
lret
xchg
mov
jmp
dec
js
cmpsb
jmp
lods
test
lods
add
add
fistpl
mov
pushl
mov
mov
jmp
imul
pop
int
out
mov
add
decl
xchg
les
ret
mov
ljmp
clc
aaa
ss
cmp
mov
cld
sub
jp
cltd
imul
mov
jmp
xchg
or
cmp
mov
rol
ljmp
inc
and
aas
mov
call
repz
pusha
cltd
mov
mov
mov
int3
ds
call
sub
ss
ret
int
sahf
pop
out
xor
xchg
das
pop
mov
inc
dec
cltd
jno,pn
jle
incl
add
jge
or
std
mov
and
pop
pop
add
popf
dec
xchg
std
inc
ja
shl
stos
adc
pop
xor
decl
in
in
nop
jbe
pushf
sbb
fnstenv
in
mov
pop
xor
out
clc
fwait
dec
icebp
xchg
xor
cmp
sub
xor
sbb
jmp
jg
and
imul
inc
je
inc
clc
stos
xor
ljmp
cmp
lahf
fucom
add
sbb
pop
cld
pushl
mov
xlat
and
sar
adc
jmp
jo
imul
jns
and
clc
jg
dec
imul
loope
lds
cmp
dec
xchg
repz
pop
loope
lcall
push
incb
lock
dec
dec
cmp
dec
iret
cmp
out
incl
and
push
aas
data16
inc
push
push
push
stc
and
mov
xchg
out
mov
xchg
inc
orb
mov
mov
jl
mov
adc
sbb
jnp,pt
ljmp
lcall
loopne
lahf
scas
ljmp
test
fstpt
aas
sti
fisubrl
decl
push
mov
aaa
pusha
mov
pop
mov
and
out
mov
or
mov
into
vpackuswb
xchg
cmp
push
lahf
jg
ss
in
in
jl
mov
iret
aad
cmp
inc
addr16
incl
lret
mov
test
jo
bndldx
pop
adc
push
aad
xor
inc
fwait
sbb
push
addr16
inc
rcll
nop
cwtl
push
mov
or
pop
sbb
xchg
jne
testl
push
hlt
clc
mov
xchg
in
jnp
or
cld
in
ss
dec
sub
or
mov
ljmp
jl
sub
out
cmc
xchg
xchg
mov
mov
mov
pop
fdivr
fcomip
mov
push
dec
cmp
xor
pop
loopne
stos
loopne
fmuls
lret
es
es
pop
inc
adc
ret
sahf
mov
dec
lcall
inc
or
jge
inc
mov
int3
xor
loope
mov
jo
test
inc
pop
jae
mov
lret
call
dec
cmp
inc
sahf
es
ja
or
leave
push
call
fstps
add
pmulhw
xchg
cmp
lock
xchg
ljmp
adc
pop
adc
cs
xchg
sbb
dec
and
mov
inc
pushf
int
mov
mov
and
or
cwtl
xchg
sub
fistl
push
push
mov
xchg
mov
fwait
pop
sub
mov
hlt
in
loope
test
aaa
jmp
into
scas
stos
mov
mov
cltd
add
sbb
jnp,pt
mov
aam
mov
stc
imul
and
push
cmp
das
pusha
mov
xchg
lds
jge,pt
sub
jmp
fwait
call
hlt
sti
push
push
out
jg
in
push
push
int3
jecxz
mov
mov
push
incl
jmp
add
or
mov
lret
movsl
les
test
add
in
mov
sti
and
lods
daa
rorl
mov
dec
mov
js
test
or
xchg
inc
mov
cs
sbb
mov
fidivs
je
mov
pop
in
test
mov
dec
cmc
lret
adc
sub
jg
mov
inc
push
and
mov
repnz
mov
push
mov
mov
add
add
decl
movl
mov
pushf
pop
test
maxps
sub
pusha
jecxz
push
loope
pop
sti
inc
and
jns
xchg
hlt
adc
xor
adc
jmp
xor
xor
add
cmp
iret
int3
js
push
mov
sbb
mov
jp
push
scas
mov
add
scas
jmp
inc
jo
push
add
movsl
mov
fs
xor
and
adc
addr16
inc
or
push
xor
sub
push
push
hlt
fists
scas
ja
test
lea
or
mov
std
inc
pop
hlt
pushl
xchg
lcall
not
xor
sub
data16
ja
aas
push
iret
outsl
inc
les
jle
addr16
pushf
pop
sub
cmpsl
icebp
sub
push
mov
movsb
pushl
push
je
xor
cmp
sub
fadds
ret
mov
mov
lret
pusha
sub
aad
aaa
idiv
jbe
push
mov
js
adc
sbb
mov
mov
pop
test
and
repz
out
shrl
vcvtsi2sd
incl
jl
pop
btc
sbb
je
incl
jle
pop
stc
mov
mov
cmp
outsb
jne
xchg
mov
xor
adc
ret
cmp
cmp
aaa
popa
push
int
sar
push
mov
push
aam
test
mov
mov
sub
jl
jle
cmp
jmp
loopne
ljmp
mov
mov
cmpsl
jno
mov
cmpsl
mov
popa
or
rol
dec
cs
mov
mov
jmp
pop
insb
add
je
pop
cmp
stos
int3
inc
fsubrl
inc
imul
jge
push
lea
cmpxchg
out
mov
rcll
xor
cmp
xor
mov
fdivrp
pop
mov
mov
sub
hlt
inc
xchg
cmpsl
push
call
mov
inc
sahf
repz
xchg
popa
cmc
mov
push
cmc
mov
xchg
filds
ljmp
test
and
arpl
out
test
dec
ret
lock
jnp
loop
test
lahf
pushl
cld
decl
xchg
lock
push
pushf
push
mov
jge
ja
ja
add
imul
pop
stc
mov
jg
test
cmc
sbb
mov
jl
jae
call
lock
rolb
imul
push
lret
xabort
fbstp
loopne
sub
stos
rorb
dec
daa
jg
jb
pop
and
xchg
adc
jl
xchg
pop
incl
cltd
mov
push
dec
pop
sub
mov
iret
test
pop
adc
adc
sbb
pushl
mov
push
mov
add
xor
pop
popa
adc
loope
or
sti
jmp
insb
jmp
dec
sbb
mov
nop
push
sbb
orb
xor
outsb
add
incl
repnz
sub
arpl
mov
pop
js
mov
iret
cmpsb
mov
incl
xchg
bnd
clc
clc
sti
cmp
lods
add
mov
xchg
sarl
mov
lea
es
cs
sub
cwtl
sub
sbb
fimull
inc
adc
mov
sbb
sbb
xor
bound
roll
mov
incl
jae
punpckhwd
pop
hlt
lret
arpl
loopne
int3
jg
inc
push
idivl
call
inc
jge
xchg
push
push
adc
add
xor
and
call
cli
jg
scas
enter
adcb
push
movsb
or
dec
mov
pop
sub
dec
out
sar
outsl
sar
xchg
psrld
mov
sbb
pop
test
lcall
xor
sbb
mov
addr16
out
clc
sbb
dec
fsubrl
pushl
popa
fnstsw
cmpsl
xchg
jns
push
inc
mov
test
clc
add
push
jmp
pop
pop
cld
xor
and
jmp
fldcw
xor
push
cmp
add
test
xor
in
icebp
adc
mov
jg
movsl
jnp
test
push
test
mov
mov
jne
adc
icebp
out
cli
jmp
pop
divl
lahf
jb
pop
das
jmp
cmpsl
fsubl
fists
cmp
dec
outsb
arpl
mov
lods
dec
fwait
xchg
push
sub
inc
mov
cmp
fs
aam
jle
jg
mov
sub
lock
jmp
movsl
inc
mov
mov
lret
pushf
sarb
movsb
mov
mov
jge
lcall
aad
push
scas
pop
or
repz
xchg
xchg
xor
sbb
mov
xchg
dec
and
xchg
pushl
jns
in
and
pop
das
arpl
push
inc
mov
push
mov
fnstcw
cmp
incl
push
sbb
aas
into
mov
lahf
xor
or
xor
cltd
cli
stc
inc
in
xor
inc
lcall
stos
daa
mov
cmp
fs
dec
out
cli
lock
es
test
movsl
push
cmp
pushl
dec
ljmp
mov
mov
cld
nop
mov
pop
repnz
mov
repnz
jne
inc
mov
jne
es
mov
ret
or
inc
or
cmpsb
roll
sar
popf
jl
ret
mov
enter
mov
mov
aaa
sar
or
lret
or
loop
repnz
dec
aad
ficoml
inc
mov
call
mov
orl
inc
test
andl
mov
fcomip
xor
js
push
imul
out
jo
fs
add
ret
pop
fwait
insl
sti
mov
ljmp
pop
stos
lret
mov
subb
rcl
dec
xor
and
adcb
call
enter
xlat
cltd
fidivl
and
addr16
rolb
and
jg
add
enter
insb
inc
pushf
call
jg
mov
adc
add
in
mov
add
jne
push
mov
jg
cli
incl
inc
sub
adc
test
adc
mov
ret
cmpsl
pop
outsl
mov
enter
cmp
sbb
cmp
cmp
jmp
out
and
pop
movsb
push
push
ret
out
jno
push
lcall
and
ljmp
mov
pop
mov
or
sti
popf
popa
push
icebp
test
adc
fsubl
pop
adc
sub
addr16
daa
and
outsl
jecxz
mov
inc
add
cmp
cwtl
and
movsb
ljmp
flds
fxch
int
xchg
jnp
int3
xor
mov
mov
sar
pushl
inc
hlt
jp
add
push
lods
stc
push
sbb
stc
sub
pop
inc
repnz
jbe
sub
adc
fsubp
dec
cmpsl
cmp
lret
imul
fistps
add
jmp
xor
dec
out
mov
pushf
in
lock
cmp
adcb
ljmp
add
cli
dec
popa
sub
inc
leave
ljmp
lahf
call
jnp
fildll
lcall
out
xchg
dec
mov
test
cmc
stc
jmp
inc
add
adc
out
push
jns
in
jmp
inc
movsb
push
sbb
lea
enter
mov
sub
roll
test
add
fs
jg
adc
outsl
ret
sub
mov
call
ljmp
ljmp
scas
xorl
sub
enter
push
pop
or
inc
aas
push
sbb
lods
fwait
lds
jbe
lods
mov
leave
popa
in
push
mov
mov
push
cld
add
push
outsl
out
insb
dec
icebp
mov
mov
jmp
mov
dec
and
out
ljmp
int3
out
push
mov
fs
add
mov
sub
loopne
incl
dec
clc
bnd
sbb
jl
mov
sbb
inc
arpl
push
xchg
imul
xlat
js
popf
dec
jg
pushl
push
mov
push
call
adc
mov
add
pushl
dec
fiaddl
xor
sub
xor
fs
mov
dec
sarb
clc
das
call
loopne
loopne
into
lds
fidivrl
fcomps
lods
cld
mov
ret
adcl
jbe
iret
idiv
jg
mov
push
lahf
std
mov
mov
or
mov
in
jge
xchg
xchg
fcomip
lcall
inc
call
push
cld
rcll
jp
mov
push
xchg
push
das
dec
ljmp
insl
out
pop
xchg
pop
int3
fcomps
call
cmpsl
incl
je
mov
dec
inc
sbb
scas
rol
imul
dec
decb
loope
clc
push
adc
arpl
addr16
iret
jnp
mov
add
out
les
xchg
lods
or
mov
pop
icebp
mov
inc
dec
icebp
xor
or
xor
rcrb
mov
jge
icebp
nop
outsb
sub
cmp
mov
cmp
sbb
xchg
mov
add
mov
sti
add
nop
cmp
mov
mov
xchg
lock
xorl
and
push
push
pop
sbb
js
out
loope
push
or
addr16
sti
loopne
inc
fs
pop
call
xchg
push
mov
cwtl
je
cmc
loop
sahf
repz
pushf
out
ljmp
mov
test
loop
mov
inc
dec
cld
insl
sarl
and
fcomip
xchg
inc
out
pop
fiaddl
pop
push
push
adc
jp
loop
mov
jg
xchg
or
jnp
push
sbb
dec
dec
les
mov
call
add
int3
pusha
ret
mov
inc
push
enter
aad
mov
and
out
jmp
notl
in
jo
mov
jecxz
ret
fmulp
orb
in
aas
dec
xlat
insl
mov
decl
js
mov
sbb
push
adc
push
lcall
inc
dec
imul
enter
pop
cmc
ja
and
sub
call
cmc
scas
fdivs
push
movsb
leave
inc
stc
jo
xchg
nop
lahf
xchg
push
mov
mov
mov
nop
setbe
ss
mov
add
mov
jle
in
gs
add
roll
les
es
inc
or
mov
repnz
mov
fnstcw
add
inc
ret
in
movb
jbe
flds
insb
cmpsb
fs
add
jmp
push
or
fisubrs
mov
shrb
mov
sar
fildll
cmc
enter
test
lds
or
outsl
xlat
jb
fwait
sbbb
jmp
aas
jo
mov
movsl
shlb
sub
pop
xchg
shl
pop
push
adc
jb
add
or
xchg
jne
fimuls
mov
lahf
mov
sbb
lcall
mov
cmp
mov
fistl
inc
mov
sti
mov
shlb
pop
lods
push
cmpsb
xchg
mov
mov
mov
das
cli
jg
adc
lahf
fsubrp
cltd
es
sub
adc
test
iret
adc
mov
aam
inc
mov
add
rcl
arpl
lds
cs
ret
es
adc
decl
test
sub
sbb
call
jns
inc
mov
xchg
cwtl
pop
dec
dec
movsl
popa
ret
ret
ljmp
push
push
and
lds
in
loope
xor
cwtl
dec
xor
imul
fmul
pop
xchg
sub
xchg
add
sbb
mov
push
adc
fisttpl
mov
mov
clc
test
push
cmp
push
lahf
jmp
daa
ja
movsb
lcall
notl
mov
mov
in
mov
inc
popl
test
gs
mov
scas
call
out
xchg
popa
push
sbb
dec
lock
fldt
add
mov
jp
mov
rcll
data16
dec
aas
lock
xor
inc
cmp
mov
push
sahf
and
rcr
imul
scas
ljmp
std
incl
mov
xor
inc
cmp
lods
cld
mov
inc
repnz
pop
sub
mov
mov
push
repz
and
pusha
cmp
js
jg
or
xor
insb
and
jle
hlt
mov
call
stos
int3
fwait
jo
sub
fdivrs
pop
and
arpl
add
and
lahf
inc
incl
test
xor
cmpsl
lret
push
lea
shrb
adc
sarl
cmp
decl
jp
ret
xor
pop
icebp
int3
cmp
fists
sbb
pop
push
cmp
mov
and
repnz
out
mov
sub
push
movsb
xchg
push
pop
add
pop
insl
dec
mov
jg
push
and
push
mov
lods
decb
call
les
cmc
shlb
or
lret
pop
jmp
xchg
and
xor
out
sbb
bound
stc
outsl
mov
rolb
sub
lcall
ljmp
andl
xchg
insb
out
addr16
add
lds
jmp
je
je
xor
dec
ja
xchg
and
notl
pop
int
mov
idivl
lcall
test
cmp
sbb
lret
scas
test
jle
jg
cli
push
bound
in
xor
out
or
add
incl
out
push
adc
lret
jnp
sbb
jnp
sub
call
pop
xchg
and
mov
imul
sbb
test
movsb
pop
bound
mov
xlat
ds
shrb
jp
cmp
adc
mov
inc
lret
out
das
mov
lods
popf
push
data16
inc
cmc
mov
push
lock
fnstenv
add
lcall
negb
movsl
jns
in
xor
ljmp
int
cwtl
add
sbb
xchg
cmp
mov
je
and
repnz
inc
fidivs
cmpsb
jp
ljmp
inc
leave
jge
push
popf
into
cmpsb
mov
sub
cli
pop
jecxz
jne
int
mov
incl
scas
add
es
aad
out
mov
adc
in
iret
push
sub
push
loop
incl
cmp
or
xlat
xchg
xor
cmp
insb
test
jnp
imul
mov
add
push
loopne
inc
adc
test
add
sbb
mov
ljmp
loopne
inc
push
or
cmovae
scas
jle
mov
inc
dec
vmovshdup
mov
test
data16
pusha
push
sbb
cld
jno
mov
repz
push
dec
ret
cmp
aad
cwtl
negb
insw
adc
imulb
inc
sbb
xor
vpcmpeqw
lcall
mov
stc
add
jns
sub
ds
lcall
ret
cld
adc
cmc
or
add
fiadds
ljmp
add
jb
mov
nop
xorl
movsb
stc
jmp
adc
repz
mov
insb
inc
push
push
pop
or
add
sub
test
lods
xor
call
adc
mov
test
push
leave
sbb
sbb
in
jg
loopne
push
ljmp
test
cmc
dec
decl
outsl
cwtl
lods
mov
sahf
nop
adc
in
jae
xor
test
pop
icebp
xlat
add
and
pushl
adc
mov
in
das
dec
cmp
jmp
mov
inc
je
enter
push
test
mov
scas
pop
shr
pop
lock
or
in
mov
lcall
push
nop
mov
and
stos
cli
pop
sti
ss
out
sub
rcll
jmp
dec
jne
pushl
mov
xchg
cmpsl
stc
iret
cmp
test
stc
ss
pop
std
mov
aaa
sbb
adc
daa
aam
jo
jbe
pop
and
scas
fcoml
cmp
packsswb
xor
sub
aaa
cmp
adc
pushl
nop
in
lret
fnsave
aaa
add
incl
neg
mov
inc
hlt
iret
jno
icebp
cmc
jbe
aaa
pop
or
adc
idiv
call
dec
xor
ljmp
out
sbb
inc
lds
lret
call
push
pop
inc
ds
and
mov
lds
call
jecxz
movsl
es
ret
and
cs
xchg
and
fstpt
add
out
cld
mov
or
mov
repz
mov
push
fbld
dec
movsb
dec
mov
lods
cwtl
cwtl
sbb
lea
pop
hlt
add
xchg
mov
or
mov
clc
lock
jg
and
lods
lods
pop
xchg
int3
repnz
push
and
daa
test
lcall
mov
cltd
lcall
pop
cmp
push
incl
mov
cmc
and
lds
pop
cltd
nop
mov
adc
ljmp
pusha
jbe
sub
sub
xchg
test
dec
std
add
in
test
inc
sub
enter
stc
jns
movsb
dec
scas
cltd
jns
xor
incl
vpsrad
cmp
out
fidivl
fs
and
out
cli
popa
iret
sahf
push
and
cmp
jno
nop
xchg
inc
push
mov
call
sti
imul
scas
sub
lahf
pop
or
jae
lcall
cli
daa
arpl
pop
pop
popf
dec
add
xor
leave
cs
adc
adc
or
fcompl
decl
rcll
sahf
aas
ds
and
loopne
or
xor
sbb
pop
sbb
jmp
test
cmc
addr16
adc
cs
push
jle
xchg
pop
add
aas
pop
jo
pop
mov
or
cmp
xchg
push
cmp
xor
push
enter
mov
fistps
data16
cli
fs
xchg
push
imul
cmp
cmpsb
xor
add
mov
mov
lcall
arpl
iret
mulb
mov
xor
sti
mov
mov
imul
mov
jmp
cmpsb
sub
enter
vmovhps
incl
jnp
out
outsb
jp
jne
adc
push
call
ficomps
lds
mov
je
call
loopne
inc
scas
push
mov
or
sar
add
cmp
xor
inc
lea
std
jmp
pop
out
loop
loop
rcrl
stc
in
jae
inc
push
inc
dec
rcll
or
aaa
cmc
mov
jl
cmpsb
aas
sub
and
decl
mov
dec
dec
cmp
into
sbb
jmp
add
movsl
addr16
push
xchg
sub
test
sti
push
lods
lods
stos
orl
or
jg
pop
jae
and
clc
inc
mov
call
xchg
incl
lcall
mov
push
pop
in
pop
into
push
adc
dec
push
and
jg
pop
test
xor
movsbl
mov
push
icebp
rclb
jg
pop
push
pop
dec
dec
mov
dec
cmp
mov
icebp
arpl
pusha
jmp
dec
jg
loopne
aas
pop
and
xchg
imul
test
sub
jg
dec
mov
mov
adc
and
std
and
enter
decl
sar
sub
repz
cld
lcall
test
jg
outsb
cmp
imul
popf
divl
xchg
lret
xchg
pop
icebp
js
dec
ljmp
ljmp
scas
inc
cmpl
jl
add
lret
add
lods
sbb
sti
pop
cmp
or
sti
notl
cmc
adc
push
loop
dec
sbb
pop
testb
cld
ljmp
sbb
mov
or
cmp
mov
xor
mov
scas
cmp
sbb
mov
outsb
push
xor
cli
lods
mulb
cmp
lcall
lods
mov
lods
lret
jne
xor
loop
repnz
push
mov
out
aas
mov
mov
dec
out
mov
addr16
xchg
movsl
ss
mov
ret
lds
mov
mov
test
test
sub
or
and
add
test
or
and
mov
or
js
repnz
dec
es
mov
jne
movsl
mov
incl
loope
ss
sbb
mov
cmp
call
push
sti
add
xchg
xor
addr16
call
rclb
dec
xor
leave
pop
pushl
sbb
fbstp
pop
and
jl
es
aam
sbb
scas
push
cld
lcall
cli
test
pop
push
push
daa
pushf
add
ss
and
jmp
pop
inc
cmpsl
mov
aaa
jbe
cmp
arpl
xor
fwait
jge
fs
xchg
pop
rcrl
lods
cmp
repz
sub
and
cwtl
pop
mov
xchg
mov
dec
ljmp
and
and
push
arpl
xor
std
pushl
mov
mov
stos
jmp
mov
sub
push
xchg
sahf
test
mov
mov
jg
mov
mov
scas
dec
pop
insl
dec
iret
adc
pop
insl
scas
push
push
sbb
inc
fistpll
cmp
cmp
ljmp
xchg
leave
add
out
add
pop
inc
sbb
push
cmpsl
pop
aad
arpl
mov
mov
stc
shrb
dec
xchg
push
fwait
mov
movsb
ljmp
cld
call
pop
jne
dec
jmp
movsl
push
stos
push
push
sbb
xor
movsl
xor
add
fcos
incl
shlb
outsl
xchg
call
pop
lods
out
push
andb
or
incl
jmp
sti
xor
ret
loopne
mov
imul
inc
out
xor
addr16
mov
pop
push
cmp
sub
insl
mov
imul
sub
insl
notl
fsubs
mov
fs
decl
mov
bound
xchg
stos
mov
nop
jge
adc
sbb
mov
lcall
test
lea
mov
adc
movsl
push
jne
jg
jne
dec
push
addr16
cmp
xor
sbb
pushl
xchg
dec
add
jl
xchg
scas
or
in
clc
test
shlb
sti
push
ljmp
insb
je
adc
push
jle
dec
mov
push
cld
incl
iret
push
int3
pop
xor
push
mov
add
lret
push
std
adc
xlat
mov
push
in
lods
add
je
lcall
fwait
jmp
jg
decl
daa
mov
push
mov
out
cmp
push
mov
call
dec
aam
push
jecxz
bswap
bound
lret
aam
dec
mov
aas
jmp
aas
cli
das
movsb
or
jg
mov
dec
loop
jecxz
or
inc
leave
or
sbb
shlb
dec
out
xor
add
mov
mov
repnz
cmpsl
stos
movsl
xchg
dec
aas
cli
sbb
cs
scas
sahf
fmull
pop
inc
mov
or
mov
and
fbld
in
pushl
inc
mov
popf
dec
arpl
fistpl
lahf
jmp
and
mov
xlat
loope
inc
in
sub
outsb
fistpll
mov
les
arpl
ljmp
cmc
divl
dec
arpl
sbb
mov
cmpsl
push
push
lret
push
mov
and
jle
scas
push
sub
js
mov
dec
out
arpl
inc
adc
cmpsl
jmp
push
decl
sbb
jno
movsb
outsb
push
mul
lahf
pop
mov
out
jns
lcall
xor
pop
movsb
ret
aas
fsubrp
mov
jmp
and
std
mov
mov
pusha
jne
insb
into
out
arpl
mov
out
xor
lcall
call
mov
jae
fcompp
push
cmc
int3
xor
xchg
push
jg
dec
cmp
mov
mov
jle
mov
mov
cmpsl
push
jmp
aas
jmp
cwtl
sub
pop
mov
jmp
subb
push
icebp
mov
ficompl
push
fxam
dec
fsubr
xchg
or
mov
xchg
sub
adc
xchg
dec
mov
push
sbb
push
fnstcw
lods
ret
lods
ljmp
mov
xchg
mov
hlt
daa
jecxz
mov
add
in
out
out
int
or
ja
sti
pop
icebp
and
test
je
dec
cmpsl
ja
push
mov
mov
mov
fadds
pop
mov
sbb
cmc
js
cli
cmp
in
jg
js
ljmp
aas
xchg
pop
icebp
sub
arpl
testl
pop
sub
outsb
notl
ret
and
jnp
aam
leave
pop
jbe
ds
pop
push
in
int
lock
jo
sahf
add
jmp
jg
jg
or
xor
mov
cmp
test
cltd
scas
cli
push
std
jnp
rcrl
push
push
divl
sub
movb
mov
stos
hlt
push
cli
jbe
aad
mov
cltd
stos
stc
mov
inc
add
push
imul
cmp
aam
mov
rcr
daa
fcmovnu
inc
xchg
or
aad
mov
imul
add
popf
rcl
in
push
mov
lea
push
incl
push
fistps
adcb
frstor
call
mov
sarl
cld
xor
mov
mov
pop
icebp
pushl
stc
cmp
mov
lods
lcall
scas
pop
shll
pop
incl
pop
add
andl
mov
loope
repz
jp
xlat
aad
cmpb
scas
movsl
push
ret
inc
mov
push
inc
mov
pop
push
popf
ljmp
lea
xchg
xor
mov
or
add
sub
fdiv
jno
aas
push
lock
lret
push
jle
jle
dec
dec
decb
fimuls
inc
xor
add
in
ljmp
lahf
nop
pop
or
lret
sub
dec
dec
test
cmp
call
outsb
dec
pusha
cmp
ss
mov
es
mov
dec
rorb
fmuls
cmp
pop
cmpsb
push
in
aas
mov
loopne
out
add
sub
test
cmp
mov
pop
in
lret
push
adc
adc
dec
and
mov
xor
xchg
cmp
cmp
xor
push
jge
decb
stos
adc
jg
lods
insl
or
loopne
clc
or
and
clc
pop
cwtl
and
lcall
xor
int
inc
loop
mov
mov
lcall
mov
loop
add
and
jecxz
jae
daa
inc
mov
mov
lods
cwtl
pop
mov
jmp
push
push
fildll
fucomp
mov
add
pushf
out
sub
mov
lcall
dec
rorb
rcrb
sbb
dec
jl
pop
lea
lods
adc
jo,pn
push
push
notl
jo
loopne
movsb
dec
call
push
dec
test
aam
clc
or
inc
cld
call
pop
icebp
cmp
xchg
ja
repnz
pushl
push
and
xchg
inc
mov
cwtl
sbb
hlt
dec
jg
jnp
adc
cli
jg
das
jne
mov
mov
pop
stos
xor
ljmp
mov
pop
push
subb
popf
fcomip
sbb
mov
mov
lcall
jg
in
lea
je
lcall
cmp
push
jmp
out
movsl
pop
out
clc
push
stos
push
out
jp
sbb
push
call
xchg
out
push
subl
or
push
aad
subl
cmp
jae
push
stos
or
push
mov
mov
mov
das
mov
mov
mov
lock
jno
jb
fdivrl
sbb
cld
stos
je
cmp
mov
push
je
jmp
mov
push
pop
xchg
add
push
or
push
inc
cmp
cmp
popa
fsubs
xchg
lcall
mov
popf
bound
pop
sahf
stos
mov
test
popa
xchg
lock
ljmp
pop
xor
test
push
mov
inc
pop
xlat
mov
lods
out
pop
dec
pusha
cwtl
incb
mov
sbb
lahf
int
inc
rcll
rorl
sbb
ss
fdivrs
in
pop
dec
outsb
lahf
adc
data16
out
xor
push
adc
mov
push
xor
lcall
xor
pushf
jp
cli
and
in
movq
filds
add
fisubs
int
add
clc
mov
mov
cmp
sbb
sub
outsb
shl
jp
lock
jp
pop
in
imul
ljmp
cli
xor
loopne
and
pop
repnz
pop
adc
and
mov
fiadds
cld
inc
adc
or
or
mov
cwtl
add
jns
push
pop
incl
fisubs
cmp
push
dec
jns
sarl
clc
sbb
mov
outsb
scas
out
lcall
pushf
lea
leave
inc
mov
repnz
dec
xor
fs
ret
loopne
xor
subb
sub
hlt
inc
fildll
xor
adc
sub
gs
add
rolb
ds
mov
add
sub
sbb
jle
enter
jp
incl
or
mov
data16
jl
arpl
ljmp
jae
test
mov
inc
jecxz
adc
lcall
test
push
mov
jb
xor
pop
cli
dec
sbbb
decl
push
fwait
mov
sbb
and
jb
mov
icebp
scas
pop
add
decl
fnstcw
cld
mov
jno
cmp
loopne
mov
jbe
cmp
sarl
cmp
push
loope
cwtl
push
js
scas
jo
out
in
mov
fistpl
cmp
addr16
call
repnz
dec
and
mov
xchg
inc
movsl
aas
iret
mov
or
dec
bound
je
mov
sub
mov
mov
pusha
je,pt
add
call
pusha
sub
mov
subb
aad
ret
mov
fcmovbe
pop
mov
sbb
or
xor
sarl
nop
fidivrs
inc
mov
movsl
sarb
clc
aas
push
ljmp
imul
jg
loope
adc
clc
fstl
mov
arpl
sub
nop
daa
stos
push
decl
shrb
arpl
pusha
aas
mov
fisttps
mov
iret
inc
jne
test
sbb
pushl
pop
or
jge
jo
out
sahf
jnp
inc
xor
mov
dec
add
or
sub
hlt
ja
ja
clc
mov
jae
ret
xor
in
sub
je
push
incl
lock
into
mov
test
cmpsl
mov
jg
int
leave
incl
and
push
sbb
cmpsl
inc
sub
sbb
decl
pop
fsubrs
mov
out
dec
and
fistpll
cmp
popf
mov
and
xchg
das
push
and
jecxz
jns
lcall
and
dec
mov
pop
or
jp
es
xor
fcmovne
cmpsb
sbb
bnd
les
inc
sbb
mov
cmpsb
scas
adc
sti
addl
incl
imulb
cld
xor
pop
mov
fiadds
inc
fmul
js
xor
xchg
cmp
push
call
mov
adc
jo
push
in
hlt
push
fwait
std
into
sub
xlat
sarb
cwtl
loope
fbld
mov
add
lahf
jmp
loopne
lods
mov
dec
xchg
fwait
mov
jbe
cli
daa
mov
jp
fnstenv
ljmp
ds
imul
test
cmp
push
dec
cmp
mov
xchg
adc
das
out
popf
jp
test
fstpl
sar
xchg
loop
mov
and
aas
lds
daa
xchg
push
ret
incl
mov
mov
leave
jge
cmpsb
dec
and
cli
aas
adc
out
cwtl
xchg
ljmp
lret
ret
aas
aas
repnz
inc
jg
decb
push
jp
mov
loopne
jno
xor
call
std
pop
in
cs
and
sbb
pop
std
xchg
insb
mov
pop
ljmp
gs
out
outsl
xor
lcall
or
cmp
pop
sub
add
aas
mov
add
out
imul
int3
lcall
dec
aas
pop
loope
flds
scas
mov
jmp
out
sbb
lds
or
sbb
shl
ret
hlt
out
xor
push
fs
insl
dec
mov
cmp
lock
sub
into
cmp
mov
ljmp
xor
mov
or
add
cmp
add
sub
decl
sub
cmp
cltd
in
jle
pop
aas
jle
data16
clc
ljmp
pop
cmp
int3
jns
divl
fsubl
pop
mov
hlt
lcall
in
xorl
ret
pop
repnz
inc
xor
nop
xor
mov
stos
cmpsb
jl
movsl
popa
mov
daa
cmpsl
cmp
xor
jp
fdivl
cs
shl
movsl
incl
sbb
sub
add
adc
lret
decl
cmp
xchg
sbb
je
lcall
in
xlat
or
mov
dec
jb
cld
in
jl
div
dec
jo
push
lods
xchg
lret
lods
push
adcl
push
cs
loope
movsb
jae
cld
loop
pop
fidivs
cmp
cmp
jg
and
push
pop
ret
inc
sti
prefetch
call
aaa
or
xchg
and
add
hlt
mov
incl
mov
and
mov
cmpsl
leave
cmc
lcall
add
dec
xor
filds
jl
bound
fdivr
pop
enter
lret
ja
xor
std
jg
jbe
fnsave
lods
dec
xchg
mov
insb
xorl
inc
dec
shll
iret
insl
jg
sbb
add
push
leave
and
outsb
mov
pop
sbb
call
pop
outsl
mov
pop
inc
pop
cmp
add
mov
push
add
popf
mov
ret
inc
or
cmp
fwait
ret
dec
fildll
out
int
jnp
sub
xchg
jmp
ficompl
mov
inc
inc
bound
das
popf
aaa
mov
push
dec
out
nop
and
adc
call
pop
mov
jbe
mov
fucomi
and
or
lret
mov
pop
sbbl
aad
incl
adc
and
mov
and
mov
lahf
ds
sahf
imul
filds
add
push
rcll
ret
cs
dec
adcb
jmp
inc
loop
int3
ljmp
mov
aad
mov
pop
mov
dec
cmc
call
mov
stos
icebp
cltd
push
sbb
add
les
movsb
pop
fnstenv
xchg
dec
clc
fbstp
push
jl
mov
pop
cmp
out
and
inc
cmp
sub
xchg
jbe
cmp
xor
mov
pop
or
fistpll
adc
sub
clc
incl
decl
cmp
iret
fsubs
aam
pushl
jle
inc
daa
fisttps
out
pop
jecxz
push
mov
int
jbe
imul
fadd
mov
imul
lods
add
add
mov
clc
mov
js
push
cmpsl
popa
outsb
mov
cmp
aaa
leave
fdivrl
and
psubq
jg
mov
rolb
lcall
xlat
ficoml
in
mov
pop
xor
nop
dec
mov
not
mov
sahf
ds
call
frstor
or
pop
enter
lds
and
push
insb
shrl
insb
fs
cmp
aad
xor
andb
or
and
aam
push
adc
addr16
incl
cld
call
fstpl
mov
outsb
pop
inc
add
dec
incl
pushl
mov
hlt
mov
jg
fiaddl
test
decl
pop
push
rcll
test
es
incl
jbe
and
jo
push
or
lcall
mov
jnp
mov
ffree
lret
jl
inc
pop
pop
std
jmp
fdiv
mov
pop
push
outsb
mul
push
fisubrs
dec
ret
xchg
sarb
mov
mov
add
jne
pop
cltd
test
icebp
popa
jmp
mov
scas
decl
stos
sub
es
pop
push
lahf
sub
xchg
mov
cwtl
data16
xchg
fstpl
adc
cmp
or
xor
sbb
adc
mov
jns
jecxz
mov
jbe
cmp
dec
adc
std
fstp
push
mov
push
clc
add
inc
clc
mov
mov
addl
sbb
add
lods
in
imul
pop
daa
dec
pop
and
aam
stos
sahf
out
fidivrs
movsb
ret
call
popa
popa
xlat
jmp
jae
jge
jmp
aam
in
imul
ja
stos
movsb
pop
cmp
shll
ret
pop
sub
mov
jp
aas
scas
orl
sbb
shl
push
data16
mov
xor
pusha
mov
nop
repz
call
pop
inc
into
push
ja
cld
mov
mov
out
sbb
cmp
jno
jnp
xchg
sub
adc
pop
cs
jmp
mov
jns
sbb
pop
outsb
incl
pop
icebp
adc
xchg
in
pop
insl
xor
std
pop
adc
test
dec
mov
push
push
rorb
fcomip
xchg
cmp
inc
jbe
inc
js
mov
jmp
lret
pop
call
int
in
call
and
cmp
pop
insb
mov
jge
andl
aaa
dec
in
pop
xor
xor
call
push
inc
mov
js
fldcw
test
pop
adc
sbb
pop
pxor
repnz
sar
push
add
shr
push
test
stos
adc
decl
ret
fcomp
aas
lret
xchg
dec
cmpsl
sbb
and
adc
add
int3
xchg
xchg
cli
jmp
aas
test
dec
psllq
mov
push
pop
fdivrl
inc
cli
mov
pushl
mov
jmp
adc
sub
out
cmc
decl
sub
inc
jp
pop
cs
push
jmp
inc
iret
lcall
fistps
mov
rcl
mov
xor
outsl
std
xorl
popf
fimull
ret
inc
in
call
es
and
inc
xchg
push
movsb
orl
add
and
call
ret
or
pop
in
push
daa
mov
inc
call
int
ss
cs
addl
jae
cmc
imul
pop
pop
dec
in
aas
sbb
cwtl
stos
ds
sbb
add
xchg
mov
jg
fstp
and
inc
dec
aad
cli
or
adc
imul
push
fwait
ljmp
cld
jb
jno
xchg
pop
sbb
lds
adc
clc
sub
and
js
sub
loopne
lds
jmp
fnsave
adc
xor
ljmp
sub
cmp
ljmp
dec
incl
icebp
iret
bound
int
push
adc
leave
repnz
xor
sbb
outsl
call
mov
jbe
incl
mov
jg
and
dec
scas
ds
xor
and
xchg
push
lock
lcall
push
cs
stos
adc
cmp
inc
jno
inc
mov
ret
outsl
pop
pop
inc
std
pushf
mov
lcall
sbb
cmpb
lods
sti
push
inc
pushf
mov
dec
jp
mov
aam
repnz
mov
mov
inc
test
lods
outsl
jne
aad
adc
out
lcall
nop
add
mov
pop
pop
pop
mov
cmp
sbb
jl
sbb
mov
pop
idiv
subl
jnp
fcomps
test
mov
iret
fadd
mov
test
out
pop
mov
shll
dec
pop
pusha
stos
icebp
shrl
jbe
cwtl
pop
cs
add
pop
push
sbbl
sub
mov
xchg
movsb
dec
pusha
scas
daa
jmp
add
sub
jbe
clc
test
imul
xor
mov
frstor
lea
loope
pushl
in
inc
mov
in
data16
mov
mov
scas
or
enter
push
pusha
adc
sub
pop
sar
testb
xor
push
jmp
inc
repnz
aam
ret
out
and
outsb
xchg
pop
push
into
adc
cld
adc
ret
test
mov
repnz
call
insb
push
dec
pop
popf
push
add
or
xor
add
movsl
lock
push
jb
je
int3
into
addr16
outsl
jp
sbb
pop
sbb
jmp
adc
inc
xchg
outsb
mov
lods
in
daa
adc
sarb
jecxz
mov
fcoml
in
pop
or
mov
and
sub
jmp
imul
sbb
insl
mov
insl
cmc
in
or
push
icebp
lcall
fsts
repnz
movsl
fists
push
pop
adcl
add
push
mov
cli
cwtl
in
cld
ret
stc
sub
call
cwtl
mov
loope
jb
sub
cld
xchg
cmp
dec
sub
mov
mov
sahf
data16
jo
out
jns
mull
mov
push
fistpl
jg
pushl
jmp
or
sub
insb
popf
mov
mov
enter
dec
and
pop
adc
add
push
fwait
lcall
negb
ds
out
pop
adc
mov
add
inc
jg,pn
incl
mov
cld
mov
cmp
or
mov
rcr
mov
xchg
jg
inc
cmc
fdivrl
mov
xor
insb
fildll
arpl
or
rclb
outsl
ud0
mov
xor
mov
scas
pop
pop
into
mov
std
stc
shrl
sbb
pushl
decl
jecxz
sub
les
in
pop
shlb
push
push
pop
sub
add
cmpb
cmc
cld
dec
mov
xorl
daa
mov
pop
push
jg
mov
mov
jge
or
xor
sub
cs
clc
jg
cmc
mov
test
mov
jle
push
mov
insl
cltd
out
mov
xchg
adcb
pusha
bound
pop
sub
push
movsl
pop
out
add
std
ja
xchg
pusha
mov
loopne
mov
or
jecxz
inc
iret
push
fidivl
adc
adc
ljmp
mov
mov
add
dec
jg
or
std
aad
dec
xchg
stos
jo
pop
or
roll
xchg
fldl
jle
fsub
jp
xchg
cmp
xlat
jmp
mov
mov
loop
mov
inc
add
aam
std
loopne
push
cltd
jg
mov
cmpsb
les
test
or
stc
mov
or
in
mov
mov
pop
popa
xchg
mov
jbe
xor
sbb
aas
mov
das
outsb
add
ljmp
push
rclb
sub
mov
decl
mov
mov
sahf
out
fimuls
jb
mov
jnp
cmc
jne
cwtl
fstps
pop
test
clc
decl
mov
mov
into
cmc
aad
call
pushf
in
push
lds
rclb
call
std
add
pop
lret
mov
ja
add
inc
loope
aaa
rol
pop
inc
jnp
lret
mov
jle
xchg
dec
mov
repnz
adc
add
pop
inc
xor
pushl
mov
xor
test
and
adc
popa
shl
inc
pushf
je
mov
shrl
mov
mov
sub
stos
das
adc
mov
or
clc
in
jb
jp
dec
adcb
fisttps
mov
imul
repz
adc
nop
rol
imul
lcall
in
push
int
adc
lds
xor
shl
sub
ret
inc
shll
add
push
jmp
jmp
push
sbb
fwait
dec
mov
jecxz
sub
fbld
adc
call
or
movsb
jns
mov
wbinvd
dec
mov
dec
sub
cmp
mov
incb
loop
cld
lcall
out
xor
jbe
inc
sarb
and
mov
cmpsl
addr16
test
out
mov
pop
ds
lcall
push
sbb
cmp
or
xor
out
jp
mov
mov
pop
cli
jle
inc
jg
incl
mov
cwtl
dec
pop
cmp
or
or
mov
and
ret
inc
adc
or
pop
cmpsb
decl
mov
mov
mov
mov
hlt
add
mov
add
push
cmpsl
test
fists
hlt
jmp
pushf
sub
movsl
subb
aaa
repz
bound
pop
jp
nop
sar
daa
xor
or
xchg
dec
imulb
rcrb
clc
mov
jb
push
sub
cltd
dec
out
or
out
and
mov
xchg
xchg
sub
or
cld
mov
jns
addb
cmp
fdivrs
sahf
les
dec
xor
loope
call
pop
jle
leave
aad
mov
in
data16
xlat
jecxz
dec
scas
cld
or
call
scas
mov
mov
and
pop
dec
aas
ss
push
sbb
incl
not
sub
and
lahf
pop
arpl
push
lods
mov
stos
aas
imul
add
in
cmp
movsb
xor
push
jbe
call
pop
xor
jmp
gs
cmpsb
cmp
sahf
dec
out
dec
scas
mov
aaa
xchg
xor
push
icebp
icebp
jp
mov
jbe
sub
adc
imul
dec
sub
xchg
dec
mov
das
test
incl
js
push
sar
test
cltd
in
mov
lahf
jg
movb
xchg
add
lods
repnz
in
pop
xor
mov
push
rorb
clc
adc
dec
rcr
in
mov
push
pop
and
cli
int
ficompl
dec
xchg
pop
hlt
mov
test
xchg
sub
mov
or
mov
hlt
jle
lods
mov
stos
pop
push
rolb
nop
push
arpl
ret
inc
sub
data16
sub
iret
arpl
loope
repnz
rorl
push
test
scas
sub
nop
push
cmpsl
dec
movl
fsubl
sahf
mov
mov
shl
lret
ljmp
mov
and
mov
dec
sub
add
mov
fs
inc
xor
add
iret
cmp
insb
add
pop
pop
jno
mov
jg
fld1
clc
ljmp
test
xchg
mov
in
pop
cmp
iret
ret
adc
push
or
bound
imulb
insl
std
xor
push
mov
mov
shr
or
es
arpl
mov
sbb
popf
add
mov
add
push
and
jecxz
or
push
fsubrl
adc
fisttps
mov
sti
sti
add
and
xchg
loop
pop
dec
gs
sub
push
insb
leave
sub
push
jecxz
call
out
mov
arpl
loopne
in
xchg
push
adc
sarb
fisttpll
mov
incl
jg
mov
mov
in
mov
es
loopne
loope
pushl
std
mov
or
dec
mov
popa
cmc
iret
call
call
ret
dec
xchg
xor
xor
mov
lcall
aad
pusha
add
cmpsb
add
int3
fldcw
das
xor
pop
dec
sbb
sub
adc
jg
and
xchg
stc
and
inc
dec
in
jnp
fwait
inc
std
adc
cmc
movsb
push
pop
adc
pop
incl
jl
lods
inc
mov
aad
mov
sbb
xabort
dec
xor
loop
pop
movsb
pop
test
jbe
sub
ficomps
and
push
rclb
or
pop
dec
rcl
in
scas
test
inc
roll
cmpsl
cmp
mov
inc
cmp
aas
lret
popf
lcall
mov
call
in
inc
lock
or
mov
dec
sbb
aad
rclb
inc
mov
add
push
lods
sub
xorl
lahf
adc
dec
inc
jg
lcall
mov
mov
test
das
push
inc
lock
jmp
sub
hlt
inc
pop
xor
push
and
out
in
repnz
dec
inc
clc
mov
call
into
push
outsb
adc
pop
cmpsl
mov
dec
sub
stc
sbb
cmp
dec
pop
divl
xor
add
pop
sbb
fsts
movsb
ret
add
add
fisubrs
decl
xchg
icebp
mov
lcall
push
bound
in
test
shlb
jg
cs
jo
jge
mov
daa
jo
stc
jae
int
jg
jnp
data16
pop
and
mov
incl
call
test
ljmp
sarb
cwtl
xor
bound
cmp
add
stos
jo
mov
pop
imul
mov
jmp
ds
xchg
icebp
clc
sahf
out
adc
in
jle
mov
movsl
ljmp
cmp
mov
je
adc
mov
es
push
mov
sbb
in
pop
lret
out
inc
test
mov
ja
ljmp
xchg
sti
shlb
pop
sbb
lahf
aaa
out
jl
fisubl
icebp
add
shlb
mov
fs
repnz
sub
pop
pusha
or
outsb
scas
shr
pop
bound
and
sub
lcall
repz
or
insb
dec
mov
fimull
dec
sbb
push
decl
adc
adc
adcl
lea
or
add
ret
ljmp
push
int3
mov
mov
loopne
out
mov
arpl
pop
and
pop
mov
add
or
ljmp
inc
rol
dec
pushf
ljmp
sti
add
xor
push
lods
fldt
mov
sbb
mov
adc
or
mov
xorl
lods
pop
fidivrs
jp
sub
or
mov
aaa
jmp
cmp
pusha
shll
icebp
inc
inc
push
out
out
popa
cld
push
cmp
out
mov
push
aas
or
shl
fidivrs
xchg
mov
ljmp
aas
cmp
sub
ficomps
mov
dec
mov
incl
into
fwait
js
aam
stc
mov
xchg
mov
mov
dec
out
repnz
je
sar
call
sub
mov
push
xchg
push
adcl
xchg
adc
lods
or
jmp
mov
push
inc
lea
mov
xchg
cli
cs
popl
call
rcr
ljmp
mov
fisttpl
mov
jbe
addr16
mov
jle
adc
cmp
inc
add
xchg
fs
pop
fs
ret
outsb
mov
in
imulb
jne
inc
call
pop
sbb
jg
mov
pop
sahf
subb
out
in
or
call
push
or
inc
ficomps
loope
xor
sbb
jnp
rorb
jg
leave
add
fisttps
sbb
cli
jl
sub
mov
jg
mov
push
sahf
mov
divb
movb
mov
sbb
or
jmp
sahf
mov
jo
sub
into
ja
lds
xchg
dec
add
mov
mov
leave
incl
ret
je
or
inc
jmp
push
push
lcall
inc
lahf
push
and
arpl
push
pop
add
aam
test
mov
lds
outsl
push
rcr
sub
mov
xchg
cmp
test
out
lret
pop
sbb
push
mov
outsl
jg
sbb
lock
jmp
and
mov
push
jno
jno
lret
and
sbb
dec
inc
aad
push
or
cld
jmp
addr16
bnd
add
inc
int3
mov
loop
mov
fs
call
xor
jecxz
pop
ja
xchg
fs
push
pop
adc
int
inc
shlb
dec
jecxz
or
pextrw
outsl
xchg
push
call
mov
mov
fidivrs
arpl
ljmp
mov
lahf
push
mov
icebp
push
xchg
pop
shl
sub
cmp
mov
stos
xor
or
jmp
xor
lret
push
mov
adc
es
jmpw
daa
sti
pushf
push
jmp
mov
je
aad
sub
dec
fucomi
mov
jge
and
fcomi
mov
fs
sbb
iret
or
jne
mov
in
sbb
lods
jp
xor
mov
cli
popf
pop
xor
xchg
dec
xchg
pop
mov
xchg
pop
inc
iret
sysret
scas
push
and
mov
xor
popa
mov
mov
xor
stos
test
int
bnd
add
sub
pop
or
aas
inc
jmp
cltd
sub
aaa
and
jle
push
out
inc
scas
add
mov
popa
add
add
mov
shrl
jb
fld
jmp
das
push
stos
jp
xor
sub
hlt
clc
lea
mov
decl
movsb
addb
mov
cmp
mov
daa
popf
sbb
sub
xor
sbb
xchg
lcall
cmc
sub
sub
push
out
jmp
cs
add
adc
fidivrs
repnz
pop
cli
mov
outsb
mov
std
mov
jbe
dec
mov
in
push
aaa
into
icebp
add
sub
cmpsb
and
xor
mov
push
call
sub
sbb
xor
popf
jecxz
push
add
mov
movsl
insb
push
jno
ljmp
dec
lods
xor
cmp
insl
ljmp
jns
sbb
dec
stc
xor
sub
jb
lcall
sbb
cmpsb
lcall
cmp
push
aas
int
in
lds
nop
adc
mov
fisubl
dec
cmpsl
inc
push
out
push
aaa
add
pushl
add
clc
mov
lock
mov
sbb
mov
jle
ja
inc
icebp
mov
imul
leave
xchg
ljmp
mov
cmp
add
jmp
mov
test
sub
nop
mov
jbe
outsl
mov
mov
enter
jmp
sarl
sub
aas
aas
inc
pusha
lds
pop
hlt
or
aam
insb
js
jg
dec
stos
sbb
out
leave
cwtl
sub
jne
sub
cmp
cmpsb
mov
mov
movsl
inc
shlb
jmp
outsl
movq
in
ja
sbb
xchg
inc
pop
mov
jg
jmp
cmp
xor
stos
arpl
sub
punpcklbw
pushl
jl
dec
xchg
aad
inc
notl
popa
repnz
jle
xor
push
das
sar
sarb
xchg
push
xor
jne
loope
cwtl
mov
mov
add
ljmp
dec
hlt
mov
cmp
cs
lods
inc
mov
add
aas
and
sub
and
icebp
cmp
inc
mov
inc
dec
inc
je
fcomps
pop
add
popa
cld
push
mov
jae
dec
rolb
and
cmp
jne
ljmp
jg
push
mov
push
addr16
inc
adc
stos
mov
ds
decl
imul
sub
ja
lret
mov
adc
pushl
cmp
or
mov
hlt
push
fistpll
adc
ljmp
lock
ss
xchg
pop
aaa
aad
std
outsl
jmp
pushf
mov
inc
inc
and
jbe
mov
pusha
xchg
fiadds
lcall
xor
adc
popf
push
mov
sub
and
int3
out
xchg
push
cmp
sub
mov
adc
xchg
xchg
cmpb
jl
shrb
imul
out
loopne
incb
pop
arpl
dec
mov
call
sub
cmp
push
in
push
or
aad
dec
jg
mov
mov
or
out
pushl
mov
push
gs
pusha
pop
enter
mov
mov
out
mov
orl
and
jg
push
int
jns
in
dec
lret
test
pop
mov
cwtl
mov
inc
sahf
icebp
inc
dec
pop
pushl
cmc
cwtl
mov
pop
xchg
sbb
mov
jg
outsb
outsb
and
mov
cld
jns
jecxz
arpl
int
aam
xchg
fcomip
jmp
mov
xchg
inc
jno
je,pn
in
push
shll
cli
xlat
negb
incl
push
jae
icebp
add
dec
dec
clc
shlb
out
adc
dec
inc
icebp
lcall
sbb
xchg
subb
outsl
add
mov
lahf
mov
mov
js
cmc
pusha
sub
xor
push
fndisi(8087
mov
std
call
lret
or
cmpsb
bound
mov
fisttpl
popa
ret
incl
dec
pop
lahf
daa
xchg
cmp
out
pushl
flds
dec
push
jmp
std
insl
add
and
pop
xchg
pop
sbb
jg
fs
ljmp
into
cmpsl
dec
stos
push
fdivrl
hlt
sub
jns
aaa
pop
adc
movsl
add
cmpsl
dec
cmp
mov
adc
clc
jbe
cmpsl
ret
ljmp
js
arpl
sbb
jle
ror
pop
das
lock
jg
ljmp
dec
daa
or
jbe
mov
js
mov
dec
decl
rorl
push
es
sar
jns
sbb
and
iret
psubq
sti
outsl
push
sbb
sti
cltd
testb
psubq
lcall
mov
and
test
jno
mov
aas
and
jmp
mov
sbb
icebp
pop
es
sbb
aam
cmc
lods
fidivrl
jp
dec
mov
adc
sbb
dec
das
mov
mov
scas
adc
ja
std
mov
adc
mov
cmp
lret
decl
mov
enter
mov
push
test
mov
std
inc
cli
pop
idiv
call
inc
inc
inc
cmc
dec
scas
dec
aas
arpl
nop
sub
mov
push
decl
xchg
ljmp
add
pop
in
out
pop
ficompl
xor
xchg
ljmp
jp
mov
dec
or
add
sub
mov
mov
or
add
fsubrs
js
in
cltd
inc
aas
incl
pop
pusha
ljmp
rcr
pop
and
loop
jg
jge
jl
sub
ljmp
jg
and
popf
fstps
aas
in
in
sub
fiadds
push
test
xor
pusha
lret
sub
insb
sub
push
and
lock
sti
dec
jle
divl
or
inc
mov
movsb
loopne
inc
xchg
cmc
or
bound
jp
popa
jnp
dec
int
or
xor
jb
lahf
push
mov
adc
pop
mov
dec
lret
lock
lret
fsubr
ret
mov
mov
push
in
cwtl
sub
pop
xchg
cltd
fnstcw
cmp
ljmp
mov
cmc
jns
fcoml
jnp
stos
dec
fistl
sub
dec
insb
in
jmp
in
repz
jb
sub
mov
movsb
arpl
sbb
cltd
mov
ss
xor
and
jle
fisttps
icebp
sub
arpl
or
clc
xchg
test
jg
push
sbb
xor
rorb
out
mov
adc
inc
and
addl
push
outsl
jo
mov
movsl
pop
sahf
aas
test
int
jns
es
dec
std
jnp
mov
je
or
incl
loop
mov
stos
xchg
aaa
pop
xchg
insl
mov
sbb
or
fists
andb
jg
lods
cld
mov
and
add
cmp
stos
jae
call
loop
test
orl
mov
add
test
pop
pop
or
test
inc
rclb
pop
add
xchg
xor
pop
test
cmc
fsts
jmp
adc
push
jo
dec
test
inc
leave
das
mov
cmp
std
rcrl
jg
sbb
cmpsb
aad
cld
sti
incl
pop
mov
pop
sbb
sub
adc
das
dec
pop
das
jnp
lds
cmp
jge
leave
loop
popf
jmp
pop
shll
fidivrl
push
jp
push
pop
jns
outsb
jg
decl
or
adc
int3
jb
les
dec
xlat
mov
mov
pop
icebp
scas
mov
jg
lahf
scas
arpl
test
lock
cs
mov
decl
dec
imul
rclb
jbe
xor
andb
ficomps
in
inc
aas
lcall
lahf
lock
jge
lcall
adc
lcall
mov
stos
mov
loope
mov
jae
pusha
scas
outsb
fstps
mov
rcl
mov
icebp
dec
lahf
iret
or
ss
clc
add
cmp
or
cmp
rcrb
jmp
and
call
imul
mov
jmp
sti
ret
mov
mov
xchg
dec
dec
jae
sbb
outsb
fsubl
xor
js
fiaddl
and
ljmp
pusha
shlb
out
push
lcall
add
jmp
incl
and
sbb
es
jle
test
sub
jb
dec
popl
sarb
lret
pop
fs
push
inc
ja
fists
ret
je
jae
or
call
mov
sub
adc
push
adc
sub
loopne
add
ja
and
scas
dec
push
push
lcall
cs
cmpsb
add
push
push
cwtl
sar
and
push
jb
ja
xchg
sub
xchg
push
push
sub
xchg
daa
insl
insl
or
cs
aas
pop
adc
jg
sub
sarb
dec
decl
les
cltd
pop
jbe
sbb
inc
fcom
pushf
xchg
inc
fidivrl
sub
sub
pushl
xor
notl
dec
fwait
dec
dec
push
jge
adc
imul
out
or
ljmp
lcall
cltd
in
xchg
jb
pop
xchg
lock
cmp
push
lret
fwait
and
aas
out
add
ljmp
in
jle
cltd
shrl
xchg
ret
lret
repnz
jae
shlb
fimuls
inc
test
decl
cmp
mov
in
roll
les
ja
xor
lret
dec
negb
ds
jecxz
sub
fisttps
lods
popa
lods
and
popf
outsb
movsl
sahf
adc
inc
incl
mov
jbe
dec
daa
rorl
in
lret
in
xor
add
cli
stc
lods
cltd
jle
fucomip
mov
push
mov
in
dec
push
orb
aad
xor
rolb
lods
shrb
xchg
inc
lret
mov
push
rorb
and
pushl
popf
in
rcrb
mov
jne
shlb
mov
and
adc
call
cmp
orl
xor
pop
fstpl
clc
push
outsl
pop
jno
mov
cld
incl
roll
lock
adc
int
call
ds
lds
pop
mov
clc
jg
and
push
pop
pop
dec
ss
repz
pushl
add
inc
pop
stos
push
inc
cmp
test
sub
das
aam
pop
leave
inc
lcall
test
insl
xchg
pop
mov
sub
add
pop
adc
adc
scas
and
cmpb
jp
sahf
inc
pusha
test
inc
push
xchg
into
ja
add
lret
add
sub
mov
call
mov
jne
ljmp
stos
jl
test
jbe
xor
sub
mov
rorb
and
fdivrl
mulb
xor
loopne
pop
loop
sub
cmp
cwtl
mov
push
xchg
pop
sub
data16
or
aam
mov
stc
and
xchg
cld
xchg
lcall
movsl
testb
inc
jle
das
jne
insb
push
push
xorl
mov
and
leave
lret
cli
mov
mov
int
pop
xchg
pop
or
lcall
pop
lcall
xor
movsl
mov
xchg
push
int
loope
push
movsb
sbb
xor
mov
nop
ljmp
sar
adc
jmp
adc
cmp
std
pop
and
int
pop
loopne
decl
sub
push
lods
clc
and
stos
jg
fistpl
mov
repz
jae
push
lods
mov
stos
pop
scas
dec
stos
repz
push
xor
loope
sub
push
push
not
push
dec
int
push
ja
cli
inc
jp
mov
add
sub
xchg
pop
adc
sbb
sbb
sbb
inc
daa
dec
scas
scas
ss
pop
jbe
test
sub
pop
loopne
and
cvtps2pd
addr16
mov
mov
aam
iret
aas
add
incl
inc
mov
mov
or
pop
int
push
jle
add
jmp
int3
rcrl
sub
mov
push
jg
imul
ljmp
enter
je
mov
std
mov
outsb
xchg
or
cmp
inc
jg
push
outsl
aas
cld
incl
scas
das
xor
pop
sbb
jl
mov
cmpsb
xchg
dec
ljmp
mov
subb
mov
cld
jnp
sbb
xor
push
out
dec
test
jecxz
mov
adc
cmpsl
sbb
or
insb
jmp
stos
lods
in
or
adc
jb
imul
inc
sbb
adc
push
in
mov
scas
push
out
mov
jb
pop
stos
sub
call
jno
xchg
xchg
sarl
mov
int3
jecxz
dec
into
mov
and
jnp
test
and
icebp
mov
decl
nop
xor
dec
add
mov
cmp
data16
mov
incl
xor
fdivr
sbb
int
mov
test
pop
cmp
xchg
cmp
pushl
std
sbb
pushf
dec
int3
cwtl
jge
out
mov
mov
popf
or
ja
cmp
iret
xchg
push
inc
rcrl
fs
mov
ret
rcr
xor
or
decb
push
hlt
ljmp
adc
cmp
jecxz
pop
lock
or
mov
pop
lds
or
or
jne
inc
stc
pop
jne
ja
incl
and
dec
pusha
and
pop
insl
lods
or
repnz
mov
cld
pop
jns
lods
xchg
arpl
test
call
aad
lds
loopne
jg
dec
out
in
mov
call
xchg
inc
pushl
and
and
iret
subb
pop
cmp
jns
cmpsl
int3
jg
cmpsl
jg
push
mov
xor
lret
test
jmp
mov
pop
xor
jne
insl
aam
jg
pop
add
sub
inc
push
cmp
imul
and
frstor
and
add
xor
or
out
stos
xlat
pop
sub
cli
pop
add
xor
incl
add
clc
pop
aas
into
mov
ja
pmullw
pop
cmc
fwait
pop
aad
sbb
fdivrs
bound
lods
push
add
jg
addb
inc
xor
incl
sub
sbb
test
in
jne
mov
ret
data16
cld
pop
dec
loopne
cmp
inc
push
dec
push
mov
ud0
jg
jge
scas
jae
and
adc
ror
aas
shrb
jmp
add
lcall
iret
xchg
repnz
mov
jle
insl
aas
xlat
add
test
jmp
cli
pop
js
xchg
insl
lahf
into
in
cwtl
movsl
and
pusha
ret
push
pushf
ss
pop
mov
incl
iret
iret
out
xchg
mov
xor
mov
adc
jecxz
sub
das
xor
clc
fcomps
fs
enter
push
add
or
dec
mov
sbb
das
add
lock
sbb
mov
pushl
push
mov
mov
rcll
cmp
or
popf
adc
add
push
jmp
jmp
pusha
lds
jae
and
aas
sahf
pushl
fisttpl
xchg
insl
jno
and
pop
push
xchg
and
fldt
xchg
decl
dec
repnz
xor
pop
dec
lods
xchg
add
test
jmp
mov
inc
add
es
incl
xchg
mov
dec
push
int
push
inc
cmp
lds
push
hlt
pop
add
adc
push
mov
mov
jo
mov
in
fsubp
jbe
fsubr
shr
lret
or
call
mov
mov
rcrb
cmp
xlat
test
test
xor
xor
ds
aam
incl
gs
movsb
xor
in
hlt
adc
pop
cmp
mov
int
sbb
fstl
mov
mov
in
cmpsb
inc
mov
ret
add
cli
in
adc
shlb
incl
call
std
cld
cmp
xchg
scas
shrl
jb
incl
push
sbb
jns
shlb
stos
dec
xor
mov
add
jmp
aas
pop
shrl
cmp
jb
xadd
fdiv
jo
dec
cmovnp
outsl
jg
ret
add
cs
ljmp
ss
out
andb
mov
loopne
mov
cltd
daa
push
jb
js
add
jbe,pn
mov
mov
clc
sub
sti
fs
sub
jmp
jnp
movsl
cmp
loopne
ljmp
shll
fs
pop
into
dec
pop
mov
test
in
div
mov
cmc
jg
jg
fcomip
fwait
ret
mov
sub
das
icebp
idivl
lcall
in
pop
adc
lea
xchg
cmp
or
gs
ret
cli
decl
mov
mov
pusha
dec
or
mov
fiadds
mov
sub
adc
insl
add
mov
stos
xor
call
adc
mov
loopne
iret
fsubl
outsl
loopne
push
cltd
jbe
sbb
mov
mov
andb
pop
sub
scas
jl
incb
sbb
js
or
pushl
pop
cmp
fs
sbb
cld
mov
dec
mov
js
sti
rolb
dec
jne
mov
ret
incb
loop
push
push
fmuls
add
out
in
mov
jmp
lcall
pop
ret
xor
sub
cmpsl
cs
repnz
roll
stc
mov
sbb
aas
dec
mov
jno
mov
ret
mov
imul
mov
mov
arpl
jp
pop
mov
int3
mov
cmp
inc
test
pop
adc
inc
inc
dec
arpl
push
iret
mov
insb
push
jmp
inc
clc
ljmp
adc
decl
loop
data16
cmp
mov
lcall
sub
push
ljmp
sub
lahf
lcall
in
jmp
jb
pop
ljmp
pushl
push
loopne
mov
lods
mov
sub
roll
cmpsb
push
icebp
int
adc
test
rcll
jmp
cmp
add
mov
mov
dec
dec
outsl
pop
call
cmp
mov
xor
stc
scas
xlat
les
out
cmp
clc
adc
insl
int3
aad
loope
stos
cmp
add
ljmp
mov
push
cmp
mov
mov
popf
sbb
shlb
andb
aam
filds
xor
lcall
push
sar
xchg
aaa
scas
pop
inc
xchg
rorl
mov
xchg
xchg
cltd
push
or
mov
jmp
jmp
push
mov
fisttpll
dec
jbe
dec
jmp
pop
mov
add
cmp
fsubl
xchg
aad
push
mov
adc
inc
sub
and
xchg
out
call
dec
jle
es
out
es
sbb
roll
gs
roll
vcvtpd2dq
out
jg
cmp
in
add
and
fs
dec
pop
rolb
ljmp
daa
jp
adc
ret
lahf
incl
stc
nop
fisubrs
pusha
pop
add
add
jmp
xchg
movsl
mov
fmuls
movsb
leave
dec
cmp
fcoml
inc
push
stc
rep
fldt
adc
decl
adc
sbbl
cmp
and
xchg
cli
clc
mov
or
fidivrl
clc
incl
pusha
mov
aad
jae
pusha
jl
pop
incb
jmp
popf
xchg
out
pop
test
cli
pop
fidivrl
popf
movsb
data16
je
mov
mov
lea
fcompl
jp
scas
inc
xchg
subb
push
ja
outsb
lcall
push
lock
push
mov
pop
mov
mov
jmp
scas
sub
sub
mov
int
ljmp
push
and
push
les
adc
decl
push
test
jmp
js
and
xchg
push
loop
int3
lret
cwtl
cmp
incl
scas
jb
mov
fcompl
sbb
int3
ret
inc
leave
in
sbb
loop
out
shll
sti
gs
pop
icebp
lcall
fistpl
jb
scas
jl
mov
mov
loop
jl
decl
pop
push
movsl
sbb
or
outsl
mov
scas
push
jnp
test
ljmp
out
push
push
add
push
in
lock
out
shll
push
ljmp
out
fwait
mov
cmp
push
cwtl
scas
pop
pushw
pop
mov
int3
mov
jge
ljmp
out
fiadds
cld
clc
xor
std
dec
aaa
xchg
and
sbb
incl
adc
xor
pushf
lret
test
scas
jne
and
lret
shlb
imul
mov
data16
aaa
dec
dec
ss
inc
sbb
pop
in
lock
jnp
fcmovb
loope
cs
mov
or
jbe
add
cmp
mov
adc
adc
out
mov
cmp
fwait
jae
test
lods
dec
adc
jle
mov
sbb
scas
add
ljmp
das
inc
mov
dec
movsl
inc
insb
push
int3
xor
mov
lret
repnz
lcall
ja
jns
push
sub
xchg
xchg
cmp
stc
ja
add
mov
jmp
adc
test
lret
loope
bound
jo
jno
stos
scas
int
xor
push
or
and
lods
push
std
ja
ret
fdiv
movsl
js
ret
mov
pop
add
in
call
call
fstps
test
vcomisd
mov
mov
sbb
das
dec
push
add
call
jnp
icebp
rorl
or
lret
jbe
fsubp
aas
push
dec
in
cmp
push
ror
enter
outsl
mov
icebp
lods
and
icebp
int3
cmpsl
push
sti
cld
pop
hlt
push
mov
faddl
or
aam
pop
jno
sbb
incl
popa
sbb
shrb
insb
inc
repz
sub
and
ljmp
jb
mov
daa
inc
dec
ljmp
lret
imul
repz
test
xor
jbe
mov
sar
jmp
sub
ljmp
cmp
mov
fdivrl
inc
out
sbb
repz
nop
dec
in
sbb
xchg
push
dec
sbb
jl
out
andb
jg
sub
arpl
movsl
add
loopne
adc
sbb
mov
mov
cmp
nop
test
lcall
pop
out
sbb
aas
xor
arpl
jb
sub
call
cld
lret
inc
xchg
jge
push
inc
jp
faddl
jle
test
pop
cmp
mov
jnp
ret
mov
jp
mov
clc
ljmp
call
mov
push
andb
pusha
iret
push
out
adc
scas
cmpsb
mov
leave
scas
aaa
cmp
ja
pop
leave
aas
into
fildl
dec
push
lods
xor
cld
jg
jne
jle
xlat
push
pop
cmc
cs
loopne
movsl
test
enter
dec
jg
inc
mov
mov
add
loop
jae
dec
mov
jle
fisttpl
subl
ficomps
dec
cltd
jecxz
push
incl
inc
rcll
add
or
jae
ds
inc
xchg
xchg
scas
int3
jmp
shll
and
mov
loope
cld
pop
ljmp
scas
pusha
cmp
pop
negl
dec
bound
cmp
int
fcmovb
mov
aad
mov
decl
popf
mov
mov
stos
daa
pop
mov
sub
pushf
scas
sub
or
dec
aam
aas
in
incl
jmp
and
scas
push
loope
js
pusha
adc
popa
test
in
pushl
shll
jbe
ds
mov
sti
jl
cmp
mov
std
jns
mov
into
push
pop
and
out
rorb
mov
mov
repz
push
dec
cmp
adc
rorl
scas
call
and
pop
lcall
aaa
inc
fldt
inc
jo
lret
fdivs
cmc
dec
push
lea
js
xchg
movsl
in
shlb
rcll
jl
jmp
insb
and
imul
sub
cmp
call
adc
int
mov
stos
fs
loopne
stc
dec
in
test
out
pop
cmc
mov
mov
subl
xchg
fiaddl
push
or
stc
test
mov
mov
adc
inc
jae
aam
inc
bound
push
decb
cld
xchg
jbe
fmul
je
lahf
cmp
fstpl
jbe
loope
adc
je
lahf
in
adcl
adc
dec
pop
cmc
fildll
cli
aam
and
push
mov
push
lock
ucomiss
js
incl
xchg
hlt
inc
fs
pop
jle
daa
cmc
fdivrs
adc
lret
sub
call
inc
shlb
sbb
test
fsubs
call
push
adc
pushl
sahf
cmp
sub
call
lcall
xchg
mov
out
call
jae
and
mov
rcll
pushl
out
mov
sbb
sbb
or
mov
das
movlps
ret
movsl
or
dec
or
or
mov
mov
imulb
add
pusha
lret
out
aas
jmp
xchg
lock
add
lds
jg
mov
arpl
inc
inc
ret
fwait
cmp
adc
or
lock
xorl
push
call
inc
pop
jg
xor
test
rolb
cmp
imull
fwait
test
rorb
adc
out
or
pop
xor
aas
add
fisubl
ud0
incl
shlb
sti
xchg
xchg
lock
loopne
std
fsubl
int3
adc
shlb
or
cli
mov
jg
in
lock
rcrb
adc
push
stos
fistl
pop
outsb
pop
ret
fists
mov
mov
inc
push
mov
mov
std
call
add
push
test
jne
inc
and
jb
test
lcall
mov
orb
repz
std
cmpsb
cmpb
dec
inc
mov
xor
adc
mov
idivb
lods
inc
sub
ja
incl
jne
cld
lcall
imul
dec
test
pushl
in
adc
xor
in
jo
add
es
loope
jge
clc
call
or
push
lcall
lahf
and
mov
aam
dec
xor
cmpsb
jne
notl
and
insb
push
hlt
lcall
xchg
out
test
ljmp
ficoms
js
ret
sub
outsl
adcl
jl
mov
fisubl
shlb
sahf
sub
cmp
jns
push
lcall
sbb
dec
dec
cmpsb
cmp
xchg
or
lea
icebp
out
inc
imul
lret
xor
fiaddl
incl
adc
mov
mov
mov
xchg
fidivl
stos
push
xlat
ljmp
pop
outsl
mov
ret
out
lock
inc
shll
add
and
lahf
pop
pop
pushf
inc
jge
mov
lods
loopne
jmp
or
das
or
sub
ret
fcompl
inc
cli
push
nop
jmp
aam
js
cld
push
pop
test
fstpl
lock
aas
movsb
and
add
inc
scas
add
test
rcl
jp
add
xchg
mov
and
fwait
loopne
ljmp
push
xor
hlt
mov
inc
jecxz
jle
sub
iret
mov
push
sub
lcall
int
fists
ja
movsl
test
clc
pushl
inc
call
imul
negb
insl
mov
in
adc
sti
mov
pop
idiv
outsl
lcall
mov
int3
das
icebp
cmp
out
jb
mov
pushl
je
call
out
ret
sub
repz
jno
dec
dec
test
incl
add
cmpsb
add
mov
sti
mov
dec
cli
in
cltd
leave
insl
xor
incl
adc
repz
mov
in
fxch
daa
imul
aas
and
lcall
test
add
pop
xor
xchg
jo
popa
pop
in
decl
sub
test
pop
add
imul
insb
and
xchg
mov
pop
movsb
sbb
jae
push
push
push
aam
fdivl
mov
leave
rorl
and
std
incl
pop
push
pop
adc
hlt
aad
pop
cmp
dec
dec
dec
sbb
push
ret
lcall
mov
lods
scas
mov
sbb
aam
and
lcall
aaa
sub
ljmp
fimuls
mov
push
into
nop
and
dec
mov
push
mov
aas
lods
fsubrl
and
test
jae
adc
daa
jle
inc
scas
or
sub
or
out
hlt
push
xor
ds
add
xor
test
sub
cmpsl
fidivl
incl
stc
xsave
lods
stc
xor
adc
mov
sub
rcrl
inc
movsb
in
sbb
sub
dec
into
jle
mov
and
incl
aaa
or
mov
add
repnz
in
call
ljmp
inc
push
mov
decl
mov
or
stos
cmp
fadds
and
sub
mov
hlt
or
jmp
stc
and
jb
das
aaa
sub
push
sbb
ja
sub
lds
lock
bound
ljmp
outsl
mov
clc
ror
fstl
push
in
xadd
incl
int
mov
sbb
gs
cmpsl
sbb
negl
in
pop
cld
incl
stc
arpl
aam
mov
cld
mov
mov
cltd
incl
movsl
cmpsl
mov
jle,pn
adc
mov
ljmp
cmp
push
mov
lret
and
bound
aas
enter
aaa
xor
out
in
sub
xor
push
and
in
pushl
out
in
repnz
pop
jmp
nop
cli
mov
iret
push
dec
loopne
divl
xchg
adc
iret
push
test
cmpsb
movsb
mov
incl
fcmove
jmp
xor
mov
test
mov
and
inc
mov
mov
inc
xchg
into
arpl
lcall
in
fcmovnb
mov
loope
ljmp
dec
lock
xor
inc
iret
mov
inc
mov
arpl
pop
ss
loopne
and
scas
xchg
cmc
sahf
int3
addr16
jg
inc
ret
fs
lret
mov
inc
int3
aas
enter
insl
pop
je
inc
jb
jo
shlb
mov
mov
call
stos
movsb
adc
jl
enter
iret
xchg
cmpsl
cmp
mov
repnz
fimull
dec
pop
pop
xchg
pop
push
cmpsb
dec
int3
fnstsw
dec
movsb
fcmovnb
test
push
dec
ja
aaa
push
xchg
test
push
iret
or
mov
idivl
mov
notb
inc
lea
daa
pushl
sar
mov
jne
gs
les
insb
or
arpl
je
ret
call
rcrl
mov
pop
rolb
cld
ret
push
ret
in
int3
mov
inc
push
fdivrs
shll
xchg
fsubr
add
decl
jge
iret
inc
or
aam
cmpsl
ljmp
mov
or
cmp
cs
sub
push
or
cld
lock
dec
dec
out
push
mov
xorb
aad
pop
or
fiadds
sbbb
setge
ljmp
mov
adc
mov
cs
adcb
mov
into
iret
lret
into
dec
les
ljmp
xlat
mov
mov
aas
lods
insl
fwait
repz
incl
adc
test
add
and
movsb
inc
in
jle
div
ret
std
dec
aad
sbb
sar
push
shll
mov
leave
inc
scas
xor
adc
cmp
pushf
pop
ret
shrl
push
out
hlt
dec
sarl
mov
xchg
sti
pop
xchg
cli
jle
divl
inc
pop
mov
lcall
gs
ljmp
popa
jg,pt
outsb
add
testb
mov
movsb
movsl
sub
repnz
shll
pop
push
mov
ljmp
arpl
mov
adc
mov
add
push
push
int
sbb
xor
mov
sbb
push
in
pop
xchg
add
rolb
adc
stos
sub
ljmp
sbb
cltd
mov
pushf
fistpll
test
outsl
add
mov
cli
sbb
fisttps
or
fiadds
loopne
ljmp
movb
and
xchg
sub
shlb
gs
or
mov
cmovb
and
jmp
xchg
ror
scas
data16
cmp
push
mov
call
pop
cmpsb
addb
xor
cmc
push
pushf
aaa
add
stc
sub
xchg
inc
push
cmpsb
xor
hlt
cmp
rcrb
pop
incl
dec
bnd
movsl
sbb
lcall
adc
lock
lcall
jg
pushl
jecxz
adc
repnz
aaa
xchg
gs
mov
sub
lcall
xchg
inc
movsb
hlt
inc
into
imul
fldt
test
push
lea
movsl
and
lock
das
cmpb
outsl
ret
push
xchg
test
cli
push
dec
mov
lret
sub
cld
ljmp
xor
xor
popa
or
cld
out
fbld
ret
fldcw
inc
imulb
cmove
add
aas
incl
inc
insl
btc
cwtl
ljmp
cld
decl
scas
adc
cmc
mov
pusha
stc
inc
dec
jp
mov
insl
adc
or
xchg
lret
iret
lahf
into
xchg
xor
call
add
aam
jne
std
popa
cld
mov
iret
mov
adcl
cmp
daa
adc
lcall
icebp
out
mov
inc
cmp
aam
or
mov
xor
outsl
cltd
call
mov
in
lcall
int
out
dec
push
mov
sbb
pop
xchg
shl
cwtl
in
fldl
movsb
sub
ljmp
mov
cmp
lock
outsb
mov
fstps
out
pop
mov
ljmp
xor
in
mov
sub
rcrb
out
cmp
mov
sarb
push
mov
sub
pushl
and
mov
cmp
insb
jno
sbb
fstpl
fstpl
push
je,pt
jne
sub
call
sub
shll
sub
mov
mov
push
dec
pop
outsb
mov
decl
dec
jecxz
and
out
jae
imul
or
mov
leave
mov
call
addr16
inc
xorl
mov
mov
mov
mov
not
jge
out
mov
cmp
mov
xchg
pop
pushf
shll
mov
mov
adc
and
xchg
xor
call
push
pcmpgtd
fsts
pop
test
mov
mov
fcmovu
testl
mov
and
movsl
mov
ljmp
loope
lret
mov
jmp
add
rorl
and
and
push
fimull
decl
jmp
repnz
jg
push
decl
cmp
push
add
inc
out
shl
sub
mov
push
mov
int
mov
loopne
mov
and
sub
cmp
adc
mov
std
xor
xchg
lret
pop
or
out
movsb
frstor
fiaddl
inc
or
roll
incl
in
movsb
test
negb
imul
mov
outsl
mov
stc
push
jecxz
and
push
push
dec
jl
stos
xchg
mov
scas
mov
ficoml
ret
sub
fisttps
pop
rcll
ja
inc
pop
les
or
xchg
loopne
xchg
sub
inc
xchg
add
jmp
inc
cmp
sub
push
mov
xchg
push
jl
jp
adc
xor
push
popa
pop
push
js
ljmp
popa
push
and
jecxz
xor
xor
sbb
pmulhuw
aas
mov
notl
push
enter
fsts
insb
adc
dec
jge
lcall
cli
daa
stc
cld
jecxz
jge
fld
mov
lock
ficomps
and
clc
mov
fs
cld
data16
dec
pushf
sti
lods
je
push
mov
adc
cmpsl
push
mov
adc
adc
or
mov
sub
pushf
ret
ret
or
aaa
rol
inc
pop
sbb
dec
aam
push
nop
mov
call
ret
add
cmp
cmp
or
sub
sarl
cld
out
and
dec
loop
dec
mov
sbb
jg
shlb
stos
icebp
mov
jmp
or
inc
pop
into
loope
pop
adc
cld
pushl
aaa
icebp
inc
addb
mov
cmp
mov
sub
mov
push
push
adc
aaa
ljmp
pop
enter
incl
push
dec
xor
sub
adc
or
push
xchg
stos
pop
mov
call
and
stos
je
push
pop
xorl
jle
inc
repz
mov
outsl
mov
jge
xchg
pushf
and
push
test
shlb
cld
and
fisubrs
dec
inc
lods
in
idiv
call
mov
or
roll
xchg
pop
cmc
xchg
lret
sub
test
mov
nop
loopne
jb
lock
ljmp
jle
push
xchg
jmp
push
add
pop
cmpb
sbb
fldl
push
mov
imull
movsb
data16
add
push
xor
jmp
frstor
mov
fnstcw
rolb
jns
cltd
movb
mov
lcall
jecxz
faddl
aas
xchg
ljmp
lea
mov
mov
xchg
rcll
stos
stos
xchg
inc
or
mov
andb
jg
dec
mov
jb
jae
pop
dec
outsl
fs
and
jne
mov
mov
sbb
movsb
push
mov
outsl
inc
jnp
inc
jne
xor
fwait
or
testb
leave
or
jae
jb
xchg
adc
dec
pop
xchg
sub
inc
arpl
push
orl
outsb
push
mulb
and
inc
dec
xor
fisubrl
jb,pt
push
cmp
inc
add
bound
addr16
xchg
mov
cltd
fstps
or
movsb
imul
add
js,pn
sub
jge
xor
insl
jg
inc
fs
and
inc
xchg
xchg
jae
das
loopne
mov
fs
push
jbe
mov
dec
ret
jns
jecxz
dec
inc
push
scas
lock
cmp
movsl
push
or
inc
mov
int
push
jns
push
or
xchg
inc
cmpsb
imul
adc
sbb
sub
icebp
dec
stos
into
lcall
adc
and
mov
in
cmp
cmp
outsl
inc
gs
cmp
int
sbb
pop
push
loop
mov
and
enter
add
test
adc
jns
mov
push
sub
adc
jbe
inc
mov
fimull
push
rorb
popa
sub
insb
sbb
push
jo
add
iret
mov
push
cmovg
adc
je
push
xchg
push
insl
mov
shll
mov
push
sbb
je
jb
imul
hlt
cmpsb
fldt
gs
xchg
ja
sbb
pop
or
adcl
cmc
inc
pop
push
cmp
incb
add
dec
loopne
add
or
or
xchg
cs
shr
ljmp
xor
inc
pop
add
fnstcw
add
xor
int
rcr
adc
cmpsl
in
add
xor
cmpxchg
add
test
pop
clc
add
je
js
push
and
outsl
add
inc
mov
scas
sbb
jns
sbb
lcall
out
dec
pusha
and
cmpsl
mov
mov
jo
shrb
jae
arpl
add
pop
dec
cmpsb
xor
sbb
negl
out
adc
jb
dec
inc
mov
es
or
adc
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
aad
add
inc
add
