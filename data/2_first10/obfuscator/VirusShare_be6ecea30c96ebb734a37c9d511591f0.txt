mov
fsubs
add
test
cmp
xor
cld
mov
bound
jbe
stos
jo
xor
lods
xchg
pop
sub
jmp
aaa
popf
std
popa
lret
jbe
or
add
cmp
seto
insl
lods
inc
repz
std
pop
inc
ja
add
pop
mov
push
cmp
or
xchg
pop
push
loopne
leave
add
ret
pop
lret
or
mov
fbstp
sub
gs
out
sub
xchg
enter
inc
test
add
push
inc
clc
ds
inc
xchg
rorb
adc
popl
inc
scas
sub
mov
xchg
pusha
test
cmp
lods
sub
test
xchg
jmp
dec
into
cmp
cmp
fnstenv
es
in
sbb
jg
fnstsw
pop
mov
arpl
mov
aas
jo
dec
movsl
lret
mov
lods
dec
js
cmp
imul
mov
or
jno
inc
call
mov
lea
call
call
clc
pushf
and
bt
cmc
add
pusha
mov
lea
jmp
pushf
xor
sbb
not
shl
neg
shr
cmc
add
dec
rol
rcl
xor
stc
ror
ror
or
mov
sub
jb
sub
call
add
dec
outsl
arpl
inc
jb
gs
inc
and
jmp
addr16
mov
pushf
pushl
lea
jmp
xchg
push
mov
lea
jg
mov
pushf
pusha
push
push
mov
movb
inc
clc
neg
jmp
rep
lea
pusha
mov
push
push
mov
push
lea
jmp
popa
fsub
lret
imul
inc
and
js
pop
inc
pusha
sub
fwait
jge
lret
and
cmp
xor
push
test
mov
gs
push
dec
clc
fdivl
sub
adc
jo
addr16
or
mov
leave
imul
sti
xor
addr16
fdivs
inc
jbe
test
clc
imul
inc
jg
sub
ret
inc
popa
loop
into
popa
push
or
dec
and
pop
xor
jno
shll
flds
outsl
out
in
xchg
pop
pop
popf
lret
pop
gs
divl
xor
push
cmp
cmpsl
data16
jge
test
sub
sbb
adcl
and
movb
into
int
ja
dec
mov
add
fstps
pushl
pop
push
inc
dec
mov
mov
int
add
or
sub
orb
fsubrs
es
mov
jg
adc
mov
pushf
pusha
adc
nop
mov
or
adc
mov
mov
or
rdpmc
outsl
dec
inc
lods
jp
pop
jp
inc
xchg
dec
test
xchg
popa
testl
adc
outsl
cmp
jnp
mov
je
adc
mov
push
stos
xchg
sub
mov
js
outsb
movsl
jge
gs
push
xchg
insl
lods
mov
mov
fwait
rcl
dec
sbb
or
jmp
jmp
into
xorl
and
cli
push
cmp
outsl
shl
cmc
inc
es
dec
sbb
push
push
mov
mov
aaa
addr16
inc
xchg
gs
xchg
enter
dec
push
loop
outsb
dec
ret
scas
cmpsb
sbb
or
inc
mov
pop
xchg
push
js
inc
or
or
jmp
mov
push
lea
jmp
mov
pusha
push
lea
ja
call
cmp
addr16
jg
jo
popa
pushf
pop
xchg
dec
add
jp
dec
cmp
sar
adcb
xchg
repz
aam
mov
adc
dec
cmc
xor
mov
xor
in
bound
cmpsl
imul
bound
cmp
imul
and
addr16
push
shl
xor
mov
ss
mov
je
push
pop
out
jnp
sub
decb
jae
inc
fists
das
jno
jo
das
jae
in
sub
mov
cli
jbe
insb
xor
adc
inc
and
lea
jmp
jmp
pop
add
enter
mov
roll
mov
lock
sbb
psubsb
orb
pop
imul
dec
or
ja
imul
faddl
loope
lcall
mov
sub
add
or
adc
inc
ljmp
stos
fimull
push
sahf
sbb
push
lea
push
add
push
sub
sub
and
jo
cmp
sbb
push
jle
sbb
push
insl
addr16
imul
int
lea
popf
sbb
insl
das
repz
shl
movsl
sub
in
jno
ljmp
mov
dec
test
enter
and
ret
sub
dec
sbb
and
xchg
adc
pop
hlt
push
mov
pushf
xchg
jno
enter
bt
cmp
lahf
bswap
lahf
lea
not
movsbw
jmp
cmp
jmp
out
jmp
imul
cmp
loopne
push
mov
and
loope
inc
pop
out
loopne
pop
in
testb
or
rorb
inc
add
xor
mov
pop
stc
popf
mov
in
dec
mov
repnz
repnz
jge
fisttpl
movsl
sti
adc
push
and
xor
mov
das
mov
pop
fcmovnbe
call
jmp
pushf
pushf
pusha
adc
pushf
movl
movl
lea
jmp
aas
cmp
adc
loop
aam
ret
arpl
xor
and
jne
jno
inc
and
dec
dec
mov
sbb
push
push
gs
xor
inc
lcall
addr16
sbb
into
push
out
in
mov
or
in
cmp
shrb
mov
add
loop
dec
movb
cld
sar
cmp
imul
push
mov
cld
xor
mov
jmp
test
sbb
shlb
ret
push
dec
sbb
jns
imul
lods
jl
or
imul
ds
inc
je
hlt
rcll
call
out
arpl
fldenv
fistl
xor
es
push
and
lahf
push
xor
jle
and
dec
inc
push
sbb
jns
ja
cmp
add
subl
jb
loope
push
push
lret
mov
cmp
cli
jae
je
sub
hlt
in
js,pt
imul
xchg
sub
repz
rcl
sub
xor
gs
sub
addr16
mov
fsts
mov
mov
std
jle
inc
pop
mov
lret
cmp
das
add
push
into
jl
jge,pt
outsb
les
xor
jns
imul
lea
lea
je
inc
pusha
ror
xchg
cwtl
mov
ror
sub
clc
mov
stc
cmp
push
mov
shr
mov
jmp
add
addr16
push
in
and
scas
stos
das
jb
add
scas
sti
test
test
mov
jp
addr16
inc
sbb
cmp
in
push
repnz
imul
mov
mov
pop
test
fldcw
or
lock
nop
inc
jne
mov
int3
mov
addr16
jl
hlt
sub
dec
jle
mov
icebp
scas
sti
xchg
mov
test
sbb
movsl
pop
sbb
xchg
inc
dec
loop
adc
xor
push
or
mov
outsb
imul
cmp
cmpb
daa
jmp
sti
mov
sub
fldcw
adc
rcl
dec
fdivr
jl
pusha
out
scas
push
ljmp
or
sub
jne
loope
test
push
outsb
xlat
ljmp
xchg
lret
outsl
push
mov
sbb
das
outsl
cwtl
pop
cmp
pop
sub
xor
xorb
pop
ror
inc
sarl
jp
imul
add
stos
pusha
lea
jg
pusha
lea
jae
push
lea
jne
pushf
pusha
stos
pushf
pushf
lea
jmp
lea
jne
jmp
lea
jne
pusha
movb
cwtl
lahf
movsbw
not
mov
mov
not
lea
pusha
push
pushl
movl
push
movw
movw
mov
mov
pushf
pushf
pushf
pushl
ret
movl
jmp
test
cmp
repnz
call
pushf
pushf
lea
jae
pusha
test
call
pushf
movw
movb
lea
call
pushf
pushl
pusha
pushl
lea
jmp
pusha
movl
mov
pushl
movl
pushl
lea
jmp
pusha
lea
ja
shl
setge
sbb
shl
sub
movzbw
xor
shld
clc
add
or
sub
btr
setl
mov
shr
mov
sub
mov
pushf
repnz
jmp
jno
cli
fwait
cmc
cmpb
cld
jne
sbb
fwait
sti
cmc
add
fwait
je
sbbl
cli
jns
clc
je
xorl
cld
idiv
sti
fwait
jne
je
fwait
jne
jp
cld
addb
sbb
mov
mov
shrl
fstl
inc
pop
adc
xor
inc
mov
rcrl
inc
dec
lea
mov
cwtl
int
sarb
rorb
imul
addr16
dec
ret
ds
repz
push
inc
mov
sti
push
pop
cmp
xor
xor
stos
xchg
mov
push
adc
inc
mov
mov
xchg
pop
mov
and
outsb
arpl
shlb
fcmovnb
inc
pop
test
fxch
das
pop
xchg
shrl
dec
add
jb
ficoms
lret
cmpl
mov
cs
lret
sti
sbb
sbb
addr16
fisubrl
mov
xchg
lcall
sub
movsb
xor
jo
lds
fbld
jmp
adc
and
mov
repz
adc
ja
cmc
adc
add
sub
jo
test
imul
xor
pop
popf
sbb
xchg
in
push
inc
mov
adcb
sbb
sbb
mov
dec
mov
inc
adc
loopne
call
push
mov
xorl
fsubrl
insb
and
ja
mov
int
dec
jno
and
inc
jmp
clc
push
mov
mov
dec
ret
xor
imul
ret
lret
dec
lret
mov
stc
je
imul
add
cwtl
jle
sahf
xchg
xor
xchg
push
movzwl
mov
bswap
lea
lea
not
pop
movzbw
mov
pusha
movw
pushf
lea
call
pushf
jmp
push
push
xchg
jmp
shl
jmp
pusha
jmp
mov
jmp
clc
ror
xor
sub
pushf
mov
pusha
stos
mov
pushf
mov
jmp
call
call
pop
pushf
pushf
pushf
movb
pushf
movl
pusha
mov
pushf
movl
pushf
movw
push
lea
jmp
test
jmp
jmp
push
push
pop
push
dec
pop
ds
mov
cmpsl
les
popa
push
call
adc
insl
pop
lock
mov
or
sub
push
out
mov
mov
cmp
cwtl
jmp
pop
ficoml
xchg
pop
outsl
mov
loopne
cmpb
shll
fisubrs
data16
adc
je
xchg
push
add
add
sbb
add
scas
icebp
leave
in
jno
inc
and
das
fcos
cmp
and
sub
rcll
mov
fs
fcompl
stos
rcl
pop
or
int
scas
push
das
cmp
pavgw
or
out
in
pop
icebp
inc
xlat
in
test
pushf
in
stos
push
ret
movsl
sarb
push
jl
and
inc
fcompl
fists
xchg
cmpl
cltd
call
xchg
out
pushf
push
mov
jge
xchg
bound
mov
xlat
adc
push
xor
inc
fnstsw
sub
pusha
das
dec
xchg
mov
call
add
popf
xchg
adc
sbb
mov
inc
rorb
loopne
popf
ret
pop
out
cld
push
push
dec
xchg
ljmp
lods
inc
adc
jecxz
leave
iret
aaa
or
push
sbb
pop
cmpsb
lock
lods
cld
cmp
mov
pop
pop
test
inc
mov
jmp
sub
in
mov
fwait
add
sub
movsl
stos
ja
faddl
das
cs
jmp
fnstsw
addb
xchg
fldenv
loopne
out
mov
push
push
aas
mov
mov
push
lcall
and
test
and
mov
jmp
jmp
sub
push
pusha
push
lea
call
pusha
lea
jae
cmc
cmc
bt
xor
pusha
pusha
lea
call
pushf
lea
jae
xchg
xchg
xchg
mov
push
inc
pusha
inc
pushf
mov
pushf
lea
call
pusha
adc
pushf
call
pushfw
popw
rcl
ror
mov
push
clc
neg
call
pushf
call
add
add
cmpsb
pop
xchg
dec
std
aaa
jne
in
and
outsb
jecxz
mov
jecxz
xor
lret
xchg
xor
fistps
mov
fs
jbe
inc
xor
fsubrl
push
int
mov
nop
pop
sbbl
mov
cmpsl
mov
mov
imul
mov
ja
fs
sahf
dec
sub
push
rcr
orl
js
push
xchg
jns
lods
push
jecxz
insb
push
xchg
js
sti
mov
out
out
ror
inc
mov
and
sahf
leave
test
sbb
pop
mov
nop
dec
test
xor
pop
mov
ss
push
pusha
movmskps
jbe
jno
mov
jg
test
mov
mov
pop
push
test
mov
decl
pop
movsl
ret
jmp
and
xor
jg
ror
jnp
xlat
dec
inc
mov
sbb
pushf
movl
pushf
pushf
push
pusha
lea
jmp
arpl
dec
mov
mov
and
dec
stos
rorb
divl
sub
add
sub
mov
xor
in
movsb
pusha
xchg
call
stos
idiv
movsb
or
mov
lds
sbb
push
mov
sub
push
and
mov
mov
aam
or
gs
lds
adc
and
fs
jae
jmp
cmp
jmp
jmp
mov
jmp
imul
gs
xor
cs
insb
add
test
xchg
or
push
jmp
sub
addr16
add
imulb
push
pop
sahf
pop
xchg
fldpi
cmp
clc
sbb
adc
imul
push
mov
test
jge
out
daa
int
ja
and
mov
mov
iret
adc
pop
and
mov
hlt
test
and
ja
jmp
push
ror
inc
inc
pop
mov
fimuls
repnz
push
lea
jne
aad
das
sub
call
lea
je
push
lea
jmp
sub
call
pusha
movw
lea
jae
pusha
stc
xor
pushf
jmp
add
mov
outsb
sub
xchg
imul
mov
das
js
mov
jp
cltd
data16
mov
cmp
sub
and
sub
mov
push
xchg
ror
and
shrl
mov
popa
testb
push
or
pop
ret
les
movsb
mov
stos
pushf
mov
adc
dec
mov
sbbl
or
enter
div
jno
pop
into
shll
and
adc
loope
adc
bound
bswap
mov
cwtl
mov
bswap
pop
mov
bswap
movzbw
pusha
mov
jmp
call
movw
lea
ja
push
lea
jb
stc
cmpb
push
pushf
call
lea
ja
call
lea
jne
jmp
push
pushl
popl
pushf
pushf
push
pushl
ret
jmp
lea
call
call
pusha
movl
push
call
cmc
shr
push
mov
call
not
lahf
mov
pusha
push
lea
jmp
mov
jmp
cs
mov
inc
test
jmp
cmp
cltd
aas
push
push
sti
sti
and
popl
ss
cmpsb
pop
sbb
or
idiv
sub
mov
lret
and
mov
in
iret
adc
lcall
lods
imul
repz
ret
mov
adc
or
cli
inc
mov
shlb
movzbw
movsbw
not
push
mov
pushf
pushf
movb
lea
jmp
lea
call
jmp
mov
mov
lea
jmp
clc
push
mov
test
test
call
mov
push
lea
je
clc
bt
stc
add
pusha
pushl
push
lea
jmp
mov
push
pushf
push
mov
pushl
ret
das
and
mov
mov
cmp
test
gs
std
push
in
or
push
mov
mov
mov
cld
push
pop
add
std
jne
xor
fdivrl
subps
xlat
dec
ret
sbb
inc
je
add
das
mov
bt
pushf
test
jmp
cmc
cmpb
call
pusha
lea
jae
push
clc
stc
add
movb
jmp
rcl
sub
push
stos
jmp
lcall
adc
xor
sub
cltd
aam
inc
cmc
mov
cld
mov
repz
push
or
jns
nop
mov
mov
mov
fildll
rcrb
cmpsb
hlt
adc
add
lods
daa
mov
insl
pusha
rorl
pop
xchg
pop
pop
int
dec
and
pushf
lea
jb
pushf
pushl
cmp
pushf
jmp
pushf
pusha
movl
mov
jmp
adc
pusha
lea
jae
jmp
call
pusha
lea
call
stc
jbe
sub
pushf
pusha
pusha
lea
jne
push
lea
call
pusha
pushl
lea
jmp
ret
in
daa
mov
addr16
rclb
iret
xchg
jbe
leave
stos
and
mov
inc
mov
xchg
mov
ret
adc
xchg
dec
repz
hlt
nop
pop
cmp
sub
pop
stos
out
push
or
jb
std
push
push
fcmovb
push
xchg
stc
in
ds
inc
xchg
mov
inc
bound
xlat
in
xchg
sub
xchg
add
imul
push
inc
adc
lods
push
fists
dec
lods
in
pop
adc
fcoml
ret
inc
or
pop
bound
mov
dec
sbb
scas
ja
jo
push
test
push
adc
pop
push
enter
push
adc
jne
pusha
push
loop
call
or
rep
push
ja
or
pop
cli
icebp
popa
not
mov
xchg
movsbw
bswap
pusha
mov
movsbl
jmp
push
pushl
movl
call
jmp
xor
push
xorl
jae
jb,pn
in
test
adc
and
adc
cs
push
and
dec
fdivp
fldt
imul
cmpsl
pop
inc
dec
iret
aad
push
mov
add
push
test
scas
movsb
mov
dec
jge
popf
std
in
std
xlat
lods
insl
lea
push
outsb
add
pop
mov
dec
int
nop
shlb
and
inc
data16
push
test
dec
and
lods
out
les
test
sahf
jge
xor
pop
cmovp
inc
mov
mov
xor
pop
cmp
sbb
int
repz
and
mov
xor
push
in
dec
pop
add
std
out
ret
in
fsubrs
jae
fimuls
aas
mov
outsl
add
dec
mov
roll
sbb
push
movsl
inc
pop
ret
lahf
mov
clc
rclb
cmp
fs
out
mov
sahf
dec
popf
and
add
aas
imul
arpl
dec
jae
mov
cs
cmp
pushf
inc
lods
add
mov
loopne
cmp
mov
and
outsb
pushf
inc
mov
and
cmp
in
mov
cmp
repz
push
nop
rolb
inc
mov
popf
loop
aam
les
rcrl
pop
inc
add
lds
in
adc
and
mov
push
les
xlat
sbb
mov
pusha
insl
daa
pop
and
mov
pop
les
popf
aaa
pop
mov
lahf
and
dec
arpl
dec
insl
mov
test
ljmp
ficoms
test
adc
jmp
shl
dec
add
ds
rcl
mov
fidivrs
leave
sbbb
mov
in
mov
sahf
or
lods
xor
mov
dec
push
push
daa
add
mov
arpl
rclb
mov
xor
in
mov
mov
mov
nop
loopne
cmp
and
push
insl
mov
lock
sub
outsb
out
shlb
out
pop
daa
and
lea
rorb
rclb
mov
mov
jle
add
lahf
daa
outsl
loopne
out
into
repz
cs
jge
ja
loopne
pop
ljmp
insb
fimuls
popf
add
lea
mov
mov
ror
mov
inc
decb
push
sarb
adc
dec
mov
and
xchg
sbb
mov
in
imul
das
mov
popf
rcrb
lahf
cmp
cmpsl
test
rorl
or
test
sub
cmp
push
add
lahf
out
pop
lds
pop
daa
and
pop
mov
fisttpll
rcll
inc
in
in
lds
mov
mov
in
xchg
mov
mov
jae
and
mov
shlb
les
rorl
popf
lods
pop
loope
push
fs
cmpsl
mov
jo
fs
cmpsl
mov
fs
add
mov
pop
mov
mov
and
push
cltd
out
lahf
mov
aad
rol
call
push
nop
mov
add
daa
and
xchg
xlat
inc
and
xor
rorl
lds
pushf
and
fstpl
test
cmp
jo
push
movsb
inc
ds
aam
sub
sub
adc
fiadds
repz
mov
fs
loop
push
pop
xchg
mov
mov
mov
dec
addr16
mov
cmpsl
push
daa
xchg
push
cmp
mov
insl
push
and
ror
pop
add
push
sub
call
xchg
loopne
add
sbbl
dec
cltd
imul
rcl
mov
mov
fs
inc
repnz
push
and
faddp
and
xchg
ret
fisttpll
xlat
cmp
popf
push
movsb
add
mov
xor
aam
push
hlt
mov
dec
and
in
shrl
fmuls
cmpl
sahf
lods
push
mov
es
test
add
xorl
push
mulb
pusha
cmp
test
and
pop
call
in
dec
inc
cltd
xchg
aad
lea
repnz
push
pop
sbb
popf
inc
cmp
rorb
lods
cmp
dec
das
hlt
dec
cmp
pop
sub
sahf
rcl
adc
cmp
nop
ljmp
ret
cmp
rorb
mov
cmp
loope
in
cmpsl
sbb
cmp
outsl
out
cmp
out
nop
push
call
mov
sub
and
test
push
cmpl
mov
repnz
ljmp
inc
add
ret
push
mov
mov
cmpl
pop
or
mov
mov
cmp
bound
lock
addl
lret
push
mov
movsb
cmp
cmp
cmp
cmp
ret
fs
push
pop
push
jae
cltd
mov
cmp
sub
jge
dec
jns,pt
xchg
pop
mov
mov
mov
insl
xchg
pop
shrb
sub
cmp
dec
incb
popf
ja
insl
arpl
rcl
jge
pop
lock
subl
inc
ds
pusha
sub
in
mov
cltd
addr16
sarl
mov
inc
and
cmp
shrl
and
add
pop
lock
shll
cmpsl
sub
dec
fstpl
push
mov
cmp
xor
jge
cmp
fcomps
mov
lods
xchg
jge
in
sbb
bound
inc
cmp
cmp
dec
jge
outsl
lahf
sub
adc
jae
cmp
vmovlps
rorl
adcb
and
rol
push
pop
inc
pop
sar
addr16
js
and
jae
sarl
std
inc
arpl
ficomps
cmpsl
pusha
dec
mov
cmp
sbb
fxch
push
rcrl
lahf
pusha
or
out
push
inc
lds
cmp
adc
sbb
mov
add
cmp
adcb
cmp
testl
insl
add
out
aaa
les
xchg
fisttpll
jmp
mov
sub
icebp
push
sbb
leave
andl
cmp
inc
ret
and
nop
cmp
stos
std
xor
popf
inc
fs
test
push
cmp
cltd
sti
xor
adc
push
add
pop
nop
mov
sarl
test
movsl
sarb
pusha
popa
cmpsl
pop
test
cmp
sarl
cli
imul
sbb
mov
shlb
pop
sbbl
rcll
orl
mov
jecxz
gs
mov
pop
shl
cmp
inc
adc
movsb
cmp
inc
ss
xor
or
ljmp
sarl
jge
shlb
mov
jl
adcl
addr16
or
movsb
pop
jmp
test
add
jo
sbb
inc
loope
and
jo
mov
cmpsl
cmp
push
sub
and
call
sub
mov
xor
xchg
outsb
subl
mov
mov
imul
ret
xchg
push
mov
notrack
push
pop
test
sbb
ret
mov
rcll
cmp
pop
psrld
ret
xor
mov
lret
aad
jmp
popa
dec
sub
lret
insb
xor
lods
cmp
iret
pop
leave
insl
mov
adcl
mov
xchg
push
shlb
push
orl
dec
sbb
je
push
mov
pushf
xor
fs
mov
cmp
push
dec
mov
sub
shrb
mov
mov
les
mov
pop
cmp
dec
test
xchg
fs
roll
fs
adc
pop
jmp
or
inc
fbld
mov
pop
mov
sbb
mov
cmp
add
imul
scas
or
mov
pop
sub
lods
das
imul
imul
and
fdivrs
inc
bound
scas
pop
cmp
outsb
mov
pop
int
inc
insl
xlat
sub
pop
mov
push
ss
pushf
xor
xchg
out
cltd
into
mov
inc
inc
subl
pushf
sub
mov
inc
into
scas
inc
dec
push
sub
out
dec
inc
add
xor
scas
or
in
mov
inc
cmp
push
mov
pop
push
movsb
xchg
ljmp
fisubs
shrl
shl
sbb
add
sub
fsubrs
mov
xor
jecxz
pusha
les
jns
cs
xor
mov
inc
test
and
and
and
add
xchg
dec
lds
and
dec
pop
sub
push
and
jns
scas
shlb
fildl
fs
mov
sbb
lcall
jnp
add
dec
push
andl
xor
and
popa
scas
outsl
loope
adc
jns
pop
xchg
and
in
out
inc
fdivs
in
mov
sub
emms
mov
les
call
inc
inc
test
fsubrp
aaa
adc
xor
loop
mov
loopne
movsl
out
andb
push
in
mov
lock
in
repnz
test
cs
mov
outsl
and
pop
add
int
cmc
aas
cltd
gs
push
xor
test
pop
dec
mov
inc
das
loopne
sub
rolb
inc
ja
addr16
popf
fst
sub
lock
shll
dec
gs
or
xor
iret
xor
and
aad
and
add
inc
dec
mov
stos
lods
push
and
mov
pop
sub
fs
cmp
xor
imul
cmc
mov
f2xm1
loop
sub
xor
sub
fs
xchg
adc
pop
jnp
adc
out
mov
push
loope
cmpsl
xchg
cmc
or
mov
out
popf
adc
mov
pop
mov
xchg
adc
popf
and
call
aad
lea
addr16
gs
roll
sbb
mov
ret
pop
insl
jle
adc
popf
popf
loopne
fnsave
shlb
mov
mulb
movsl
mov
push
and
pop
roll
fs
call
fistps
movsl
inc
sub
cmp
bound
mov
push
mov
pop
cmp
pop
loope
jno
cmp
sub
in
xor
imul
push
dec
add
pop
pop
aam
out
sbb
testb
xchg
imul
call
and
xor
lcall
push
sub
mov
mov
mov
pop
and
push
xchg
cmpsb
cs
in
scas
jne
ljmp
lock
adc
push
out
ret
or
in
fs
test
fcomp
roll
pushf
xchg
jbe
lahf
scas
or
or
mov
sbb
cwtl
rcrl
push
mov
pop
and
mov
dec
dec
and
adc
fidivrl
and
notb
jb
mov
loop
pop
in
adc
pop
jp
cmc
and
cmp
in
loope
jb
hlt
hlt
inc
cmp
sub
aam
sub
das
gs
sub
push
dec
or
adc
jl
mov
jae
stos
negl
shl
cmp
stos
out
loope
mov
sbb
cmpsb
and
out
arpl
push
loop
push
push
mov
lcall
inc
cmpsb
addr16
shll
out
jmp
imul
lret
loope
loope
andb
push
out
out
and
pop
je
xor
jmp
sub
xchg
sarl
in
data16
lods
popa
in
mov
fcoms
aad
pop
sub
adc
insl
xor
adc
pushw
mov
ljmp
sahf
cmp
movsl
xor
ja
push
movsl
mov
rorl
pop
inc
inc
out
jae
gs
mov
xor
inc
in
imul
je
lcall
mov
xor
das
cmp
scas
movsl
inc
jns
jb
push
dec
popf
loopne
int3
out
fiadds
aam
das
cmp
jg
sbb
in
push
call
add
aam
mov
sub
test
sub
push
push
push
adc
out
int
or
and
xor
pop
popa
sbb
cmpsl
pop
push
and
and
adc
xor
inc
sbb
daa
xlat
pop
addr16
les
and
shll
add
loope
les
shr
inc
ljmp
sub
fnsave
icebp
gs
jno
add
adc
push
jne
roll
aaa
test
imul
xor
outsl
sub
popa
cwtl
inc
and
in
fadds
jne
aam
imul
int
clc
in
and
jns
xchg
push
xor
dec
aad
add
fnclex
mov
imul
adc
sub
aam
popf
jecxz
clc
push
daa
sti
and
add
pop
jo
xchg
fnstsw
ljmp
xor
out
in
or
sbb
ret
add
sub
daa
inc
mov
push
push
pop
lock
add
cmp
push
mov
jmp
pop
xchg
push
jo
mov
mov
or
std
mov
adc
mov
je
shll
outsl
dec
dec
xchg
pop
inc
test
imulb
mov
mov
push
mov
and
rcrl
ret
je
rcl
mov
sub
out
ret
scas
xor
xor
dec
in
push
daa
xchg
mov
out
fsubr
jno
sub
mov
in
data16
aad
and
adc
fucomip
cmp
dec
data16
bound
jge
inc
push
gs
enter
lds
in
in
mov
mov
vpunpckhqdq
xchg
adc
pop
loope
pop
sbb
mov
loop
xchg
pop
movl
sub
pop
mov
repnz
imul
push
dec
imul
adc
sbb
cmp
and
add
insl
and
cmp
sub
in
push
inc
lcall
gs
cmpsl
mov
lea
adc
cmpsl
mov
popa
movsl
call
push
jmp
mov
repz
outsb
lods
or
lods
fmuls
push
sbb
mov
imul
push
arpl
cld
mov
hlt
sub
popa
fisttps
ljmp
addr16
bound
jns
jae
pop
mov
adc
ja
sub
pusha
and
pop
mov
clc
out
nop
cmc
jle
push
fsubr
in
movsb
mov
cltd
imul
imul
xor
movsl
add
inc
adc
xchg
xchg
and
xor
sub
les
imul
cmp
movsl
repnz
pop
jmp
les
out
popa
lahf
insl
pop
enter
adc
popa
sti
insl
mov
cwtl
pop
inc
pop
fisubs
scas
pusha
aad
push
jnp
and
fadds
outsb
mov
and
rol
mov
adc
sti
movsb
outsl
mov
xchg
mov
sub
out
sahf
ja
rcll
dec
outsb
mov
fldl
xlat
xchg
cs
lret
imul
fmuls
jne
imul
addr16
sarl
je
xlat
popa
fcoms
rcrl
sbb
inc
insb
out
sahf
es
cmp
ljmp
push
ds
nop
std
pop
out
mov
lret
les
outsl
inc
shll
fsubr
iret
aaa
out
loope
add
jmp
sub
ret
lods
out
outsb
ja
popa
out
mov
lret
sbb
rorl
icebp
test
test
jmp
pop
shr
movsl
in
daa
inc
movsl
adc
test
stc
aam
adc
jmp
out
int3
inc
scas
call
cmp
adc
jnp
push
out
sub
push
das
push
cmp
gs
aam
push
stos
jp
mov
in
sbb
out
test
push
out
mov
push
sbb
jl
mov
in
addr16
insb
adc
push
insl
cmp
jmp
outsb
sub
and
jb
lea
mov
aas
pop
lock
imul
and
inc
test
xor
lret
test
xchg
inc
lods
movsl
push
rol
test
ficoms
pop
jae
gs
insl
pop
mov
add
and
sub
adc
xchg
or
imul
mov
scas
inc
xor
movl
sbb
cmpsl
hlt
push
addl
pop
aam
sub
jo
or
push
sub
shlb
clc
push
adc
mov
inc
sarl
sbb
xlat
aam
xchg
xchg
lret
popa
pop
pusha
mov
cmp
fsub
loope
orl
test
jbe
inc
and
test
in
sub
inc
push
in
mov
dec
adc
push
ret
sbb
int
mov
jl
pop
test
and
jmp
jmp
pop
xlat
cmp
dec
aam
cmp
aaa
mov
out
cld
insl
sahf
push
and
dec
mov
pop
sbb
pop
adcb
pop
gs
jl
out
push
pop
fistl
mov
dec
stos
mov
push
inc
inc
out
fwait
mov
inc
es
and
xchg
data16
test
lcall
test
movb
mov
lahf
imul
xchg
jmp
fadds
fsubs
daa
adc
push
aas
cmc
push
inc
xor
jne
ja
pop
repz
push
sahf
sub
mov
dec
movsl
leave
dec
int
andl
mov
jle
imul
hlt
pop
out
clc
int3
cmp
cwtl
lds
enter
jns
sub
data16
push
add
mulb
imulb
gs
inc
std
pop
roll
or
mov
adc
pop
std
xchg
xorl
cmc
sbb
inc
jno
dec
stc
movsl
mov
xchg
and
push
push
pop
hlt
insb
xlat
sbb
das
and
inc
inc
mov
fistpl
adc
movsl
push
call
inc
cmc
xor
sub
mov
and
outsl
cmp
test
imul
test
in
popa
push
rcl
cmpsb
shll
mov
in
pop
mov
xlat
mov
mov
jg
mov
jg
push
or
imul
daa
mov
cmp
jmp
jae
imul
sbb
movsl
mov
pop
imul
sub
pop
scas
imul
jecxz
mov
fcmovu
cmp
into
sbb
inc
mov
loop
mov
push
push
into
mov
sub
repnz
bound
jne
into
jns
daa
mov
cmp
ret
xor
out
jg
pop
jne
sbb
inc
imul
test
mov
popa
cltd
jae
shll
and
fisubs
cmp
ret
mov
and
mov
mov
test
or
scas
addr16
add
jb
push
enter
sti
aam
dec
ret
jno
pop
js
mov
and
outsb
loop
int
sbb
push
and
test
shll
out
imul
sub
cltd
mov
xchg
push
dec
insl
cmpsl
cs
pop
shll
aam
inc
or
movsl
loop
jle
out
call
aas
loopne
lds
fimuls
adc
clc
fldt
and
push
mov
in
adc
add
push
loope
mov
sub
push
adc
ljmp
loop
out
cs
mov
sub
sub
sub
cmc
sub
loope
in
loope
push
fucomip
lret
aad
cmc
mov
in
test
jmp
xchg
bound
lret
mov
add
mov
push
dec
imul
cmp
sub
stos
push
sub
test
imul
mov
add
cmp
mov
xor
mov
sub
out
loope
gs
in
jb
xchg
mov
test
loope
test
dec
and
mov
adcl
mov
cltd
fs
mov
mov
movsl
int
jb
gs
and
insb
inc
adc
mov
xchg
jl
sbb
and
movsl
mov
lds
popa
inc
cmp
push
insb
test
dec
popa
pop
aam
add
dec
popa
sub
fnstsw
rcll
dec
and
sub
xchg
adc
push
adc
shlb
sahf
cmpsb
and
lods
into
fbld
cli
dec
subb
sbb
push
inc
mov
push
scas
hlt
cltd
enter
mov
mov
jmp
rclb
in
mov
aas
in
push
negb
addr16
call
fistpll
clc
fldenv
mov
addl
mov
movsb
repnz
lods
js
mov
xor
in
mov
mov
and
mov
les
inc
fwait
adc
push
push
dec
ljmp
push
xor
mov
inc
sub
mov
dec
int
mov
push
push
inc
fildl
std
aaa
push
sub
dec
fwait
ret
inc
inc
inc
icebp
cmc
sub
add
loop
pop
push
movsl
sub
movb
dec
jmp
into
subb
jmp
and
push
pop
movb
pop
dec
xor
mov
aaa
sbb
sbb
sub
cmp
mov
xchg
cmp
shll
xchg
add
xor
pop
add
sbb
int3
cmp
jmp
jo
loope
das
pop
mul
scas
cmp
and
push
sub
push
pop
imul
xor
dec
sub
jo
scas
lea
shlb
daa
and
jo
fmull
inc
xlat
and
and
sub
mov
xchg
inc
mov
in
inc
cs
out
inc
ret
push
mov
test
push
push
pop
mov
pop
add
jmp
pop
jb
mov
rclb
mov
leave
mov
xchg
icebp
inc
pop
pop
cmpsl
ret
pop
addr16
cmpb
les
lods
pop
xchg
test
test
push
repnz
xchg
movsl
adc
and
cmpsl
xlat
cwtl
movsl
adc
xor
cmpsb
and
rcrb
mov
pop
outsb
gs
in
shr
pop
jns
rorl
cwtl
mov
push
ljmp
ja
loop
arpl
xor
das
mov
push
enter
sbb
and
fadds
out
cmp
xor
xor
es
mov
or
pop
inc
je
aas
mov
jno
jg
mov
cmp
sbb
insb
lea
jo
inc
addr16
test
out
stos
jecxz
cmpsl
sbb
popfw
adc
mov
jmp
out
and
fcomps
xor
lea
stos
lock
jmp
cmc
mov
popf
xchg
sbb
mov
mov
leave
imul
mov
sub
and
daa
adcl
popa
sub
inc
mov
popf
pop
pop
loope
xchg
rorl
jne
cmpsl
gs
imul
and
shrl
ja
scas
xor
mov
ja
cs
mov
adc
test
xor
mov
cltd
push
icebp
out
cmp
cmp
fistpl
and
push
nop
bound
movsl
pop
dec
adc
shll
aaa
fidivrl
imul
shl
roll
sbb
xchg
pop
adc
in
call
dec
mov
xchg
stos
aad
out
imull
push
xchg
push
loopne
std
int3
push
xlat
sub
fidivs
loop
mov
xchg
mov
and
xchg
andb
push
xor
or
test
imul
in
adc
hlt
cmp
dec
pop
cmc
push
mov
pop
movsl
inc
cmp
data16
data16
scas
lret
pop
mov
hlt
adc
fs
adc
lcall
rolb
gs
fwait
lea
pop
xlat
xor
imul
or
xchg
fwait
call
dec
out
xchg
insl
xchg
push
xchg
insb
mov
adc
xchg
push
addr16
xor
push
cli
xor
insb
inc
push
jle
mov
ret
jl
xor
fiadds
movsl
insb
push
arpl
call
and
push
sub
rclb
fisubs
xorb
inc
call
inc
movsl
mov
fisubrl
movsl
testb
mov
ficompl
push
adc
repnz
mov
lods
push
sub
lahf
sahf
cmp
jmp
mov
es
push
or
mov
in
test
data16
mov
call
mov
dec
pop
cmpsl
fdivrl
clc
imul
mov
and
inc
movsl
jns
dec
cld
xchg
mov
cld
int
cmp
stc
cmpsb
mov
xorl
popf
dec
sar
cli
lahf
je
mov
call
ljmp
pop
jmp
int
xchg
jo
call
add
xchg
jno
push
lds
xor
addr16
lahf
leave
dec
pop
xchg
push
xchg
movsl
loope
insl
pop
sub
mov
add
cmp
adc
and
aas
pop
pop
adc
add
inc
dec
inc
inc
jo
mov
imul
cmpsb
test
mov
aaa
aad
jge
xorl
xor
mov
cs
lds
xlat
aaa
lock
lds
cmp
push
daa
push
sahf
pop
mov
ficoms
add
movl
leave
add
and
xchg
pusha
mov
in
movsb
gs
xchg
repnz
sbb
sub
xor
outsl
out
mov
je
push
lock
push
mov
loop
out
popa
push
mov
aaa
out
xchg
push
rorl
stos
movsb
aam
repnz
pop
cs
leave
adc
push
bound
outsl
rorb
aaa
clc
and
inc
out
mov
push
xor
in
rorl
jne
nop
xor
bound
cmpsl
enter
outsb
inc
cwtl
xor
out
imul
cmp
jl
popa
adc
shr
notb
shll
and
and
rolb
jge
cmp
sbb
jns
and
and
adc
scas
fdivp
adc
cmc
bound
add
push
les
movsl
outsl
cmp
mov
xchg
xor
in
insl
push
add
lea
xor
out
loopne
ja
or
in
test
ds
pop
push
out
mov
fimuls
push
fimull
xchg
js
xchg
jb
add
adcl
push
cmp
rcr
fldl
fstps
push
imul
pop
push
test
mov
xchg
stc
ljmp
xchg
arpl
xchg
test
sub
enter
test
icebp
dec
lahf
cmp
fnsave
add
int
test
add
data16
out
adc
das
xchg
imul
jb
das
adc
dec
pop
add
sbb
adc
js
sti
jmp
adc
adc
xchg
sub
pop
xchg
inc
outsl
in
xlat
sarl
mov
call
mov
ljmp
xchg
push
add
and
in
in
xchg
mov
stc
xor
jp
enter
gs
in
aad
xchg
dec
and
mov
out
add
pop
mov
lret
cmpsb
mov
aam
cld
jge
lea
pop
and
or
data16
cmc
pop
sub
jl
pop
push
mov
loop
jno
adc
ficompl
rcrb
daa
and
outsb
cmp
je
ret
or
repnz
pop
inc
pop
mov
push
and
pop
sub
push
xchg
xchg
icebp
sub
push
repnz
inc
cs
mov
fildll
xchg
inc
movsl
xchg
imul
jns
push
fildll
dec
push
xchg
cmp
imul
shll
inc
insl
inc
push
push
xchg
sub
xor
push
daa
lret
push
xchg
push
shlb
test
je
pop
outsb
and
sahf
fs
jge
cmpsb
leave
ret
cmp
inc
xchg
gs
mov
push
jl
pop
enter
mov
test
sbb
mov
and
stc
dec
and
popf
sti
jg
xchg
cmp
outsl
mov
pop
cmp
lds
imul
pop
push
mov
dec
lods
sbb
push
les
jmp
lahf
pop
and
cs
gs
jmp
fwait
notb
push
push
in
sub
testl
cmp
xor
aaa
push
test
push
or
dec
imul
push
mov
sub
popa
pop
pop
lret
loope
cwtl
orb
out
movsb
divl
es
inc
fisttpl
imul
or
pop
mov
fldl2t
add
add
test
cltd
xchg
pop
xor
sarl
int
push
lods
add
sbb
jne
addr16
jbe
dec
cs
icebp
ljmp
adc
in
in
aam
mov
movsl
enter
add
popf
mov
cmp
fcmovnbe
push
call
popf
rcrb
les
mov
insb
aad
xor
test
scas
push
call
or
stc
adc
cltd
in
movsb
into
mov
cmp
add
dec
mov
je
pop
mov
fidivs
inc
add
cmp
xchg
push
push
xor
mov
cmp
push
jge
outsl
jo
xchg
arpl
in
push
inc
mov
jo
insb
outsb
mov
dec
pop
mov
sbb
cwtl
push
and
push
test
popa
push
mov
dec
ljmp
adc
xchg
pop
roll
sub
mov
sbb
cwtl
push
mov
in
xchg
adcb
negb
stos
daa
notb
outsb
adc
inc
fidivrs
movsl
adc
jge
inc
pop
jbe
push
xor
mov
cmp
mov
dec
repnz
jae
sbb
push
movsl
bound
sahf
lock
movsl
xchg
and
rcrb
cmp
cmpsl
inc
out
test
xchg
cmp
xor
jle
xlat
dec
es
pop
cmc
std
pop
out
repnz
adc
xor
sbb
imull
mov
outsb
inc
mov
pop
push
ljmp
sbb
inc
dec
fsubrs
xor
fsubrs
adc
inc
imul
xor
inc
roll
jae
leave
dec
loope
daa
icebp
aad
xor
out
shll
rclb
sbb
aam
push
inc
mov
lds
push
sti
or
mov
ja
mov
jge
fisubrl
adc
les
leave
add
frstor
mov
scas
daa
ja,pt
dec
imul
in
enter
and
dec
and
popf
outsl
push
mov
stos
gs
and
lods
sub
in
sbb
push
adc
cmc
lods
mov
int
inc
cmpsl
call
xor
inc
in
sbb
mov
ljmp
ja
jne
and
sbb
nop
cmc
jge
roll
fiaddl
and
cmp
in
sub
test
jmp
test
pop
mov
jecxz
lock
cs
lds
jno
popa
clc
cltd
sbb
repnz
adc
movsl
and
and
fimuls
daa
mov
cmp
push
cmpsl
scas
mov
cmpsb
mov
mov
and
popf
push
fs
jbe
cmp
jnp
mov
ljmp
gs
imul
imul
cs
xchg
imul
or
and
scas
std
dec
xorl
add
push
lret
and
xchg
pop
push
and
jmp
out
mov
push
mov
sbb
in
cvtdq2ps
ljmp
call
bound
cwtl
mov
xor
jne
mov
pop
pop
push
pop
dec
xor
fcomps
gs
fcomps
in
fcomps
in
inc
lahf
loopne
xor
popf
sbb
pop
cwtl
dec
daa
sbb
imul
push
stos
or
push
cs
add
jmp
mov
adc
sub
in
inc
inc
dec
fcomps
jne
push
addr16
std
imul
pop
leave
sub
aas
in
imul
and
addr16
adc
jns
dec
mov
and
loop
popf
stc
aaa
loop
sub
imul
loope
popa
pop
pop
jns
scas
mov
inc
pop
pop
clc
jbe
fcoms
aam
adc
add
sub
lds
pop
cmp
pop
dec
adc
adc
in
mov
call
jp
popa
mov
dec
jp
adc
test
imul
stos
adc
int3
iret
xor
stos
pop
mov
shrb
pop
aad
adc
mov
push
cs
in
loope
es
fidivrs
shll
lret
movsl
mov
mov
loopne
aaa
nop
movsl
pop
adc
scas
lods
ds
popa
add
and
data16
xor
cli
sub
jp
scas
mov
js
data16
loop
pop
loop
inc
adc
mull
shll
jno
push
cli
lsl
sbb
or
inc
cs
addr16
inc
lock
mov
out
push
jp
insl
les
in
inc
adc
xchg
sub
popf
test
pop
movsl
popa
jae
inc
insb
lcall
jg
adc
mov
aad
jbe
adc
mov
sub
pop
sbb
mov
arpl
iret
icebp
in
inc
push
outsl
movsl
push
test
xchg
sub
push
sbb
mov
test
fwait
shll
mov
outsl
fs
loope
lock
mov
lds
repnz
inc
insl
js
movsl
cmp
fbld
stc
inc
pop
xor
popa
push
dec
imul
push
cmpsl
jno
popf
inc
xlat
and
adc
mov
or
mov
jb
fidivrs
inc
cs
push
test
jmp
fisubrs
pop
fsubrs
sbb
mov
fmuls
xor
xor
xor
jp
ret
mov
xchg
pop
jno
test
mov
jns
jp
ja
add
xchg
in
test
fsubs
xchg
out
in
imul
adc
pop
sbb
aad
mov
mov
enter
xor
mov
adc
adc
movsl
movsl
sbb
dec
pop
loop
mov
incb
mov
aad
insb
cmp
jg
xchg
int3
aaa
pushw
dec
sarl
movsl
arpl
pop
enter
xchg
jbe
dec
outsb
mov
cmp
int
sbb
xor
cmp
mov
clc
add
dec
pusha
xor
xchg
mov
mov
push
dec
push
lock
stos
dec
shlb
add
adc
mov
andl
sbb
les
out
xchg
push
out
je
stos
cld
mov
out
out
mov
xlat
test
jg
or
dec
sbb
addr16
inc
mov
scas
test
inc
inc
loope
ljmp
xor
inc
pop
cmp
lret
mov
outsl
push
xchg
std
mov
mov
inc
outsl
aad
sub
ret
mov
inc
jmp
push
js
dec
gs
sub
aad
mov
push
sub
mov
cmp
jg
es
imul
inc
stc
in
and
outsb
out
imul
inc
ficomps
cs
in
lods
xor
nop
jb
jp
jmp
mov
arpl
dec
adc
orl
and
adc
sbb
mov
inc
xchg
es
int3
rcrl
clc
sbb
jbe
cmp
loope
int
leave
icebp
inc
pop
push
scas
scas
and
inc
call
inc
stos
enter
push
imul
xor
pop
dec
sub
ret
and
nop
daa
sub
subl
mov
leave
xchg
aad
push
loopne
cld
repz
pop
in
repnz
ljmp
fisttpll
in
bound
and
adc
ljmp
mov
test
cs
aad
mov
mov
pop
push
adc
sbb
jb
aas
jmp
xor
loope
mov
or
jo
add
outsb
loop
fcoml
gs
in
adc
ret
mov
rcr
inc
repnz
push
cmp
dec
mov
imul
xchg
bound
push
xchg
sbb
push
jne
scas
inc
mov
inc
in
movsb
in
in
imul
insb
mov
lock
popf
dec
movsl
std
mov
xchg
in
push
xor
sub
arpl
out
jno
ret
call
aad
mov
testb
lock
mov
lds
sbb
add
or
push
pop
rcll
jg
mov
gs
loope
lret
mov
mov
outsb
mov
and
arpl
sbb
cmp
popf
inc
movsl
loope
add
lcall
gs
adc
dec
scas
inc
in
jge
ss
adc
pop
in
push
imul
ds
xor
into
xchg
adc
jl
ljmp
sbb
pop
pop
ljmp
mov
and
add
inc
mov
mov
sbb
outsl
inc
js
mov
jno
sbb
jb
push
mov
jns
push
outsl
or
mov
cmc
lods
arpl
sbb
fistl
jg
aad
loop
push
push
scas
mov
mov
mov
or
and
pop
push
xlat
popf
jge
std
enter
clc
fistps
and
dec
dec
testb
xchg
cmp
sub
scas
mov
arpl
jmp
mov
aam
xchg
mov
mov
add
push
sbb
mov
repnz
pop
push
xchg
popa
enter
or
push
mov
mov
inc
mov
imul
pop
mov
adc
fdivrl
imul
rorb
pop
test
xchg
je
mov
push
flds
jbe
out
daa
inc
sbb
repz
mov
mov
dec
popf
push
and
cmp
jne
iret
push
push
icebp
jae
pop
lock
push
enter
in
sahf
mov
xchg
loop
add
daa
pop
loope
dec
push
int3
dec
mov
xchg
aam
popa
xor
sub
dec
dec
cmpsb
add
sbb
and
mov
sub
movsl
in
in
imul
dec
pop
mov
stos
jge
pop
sub
ret
inc
sub
jge
popa
stc
mov
mov
insl
cltd
push
and
or
gs
lcall
cmpsl
mov
adc
jnp
lods
out
xchg
cmp
sbb
pop
push
and
sbbb
ljmp
sbb
bound
sbb
gs
pop
fcompl
fwait
pop
sarl
push
xchg
inc
pop
inc
fcmovnu
adc
imull
mov
sbb
xchg
sub
test
ja
movsl
in
cmpsl
imul
adc
repnz
inc
jae
rep
cmc
sub
cmp
mov
cmpsl
fwait
mov
xchg
xchg
ret
fxtract
mov
sub
jmp
cmpsl
scas
loop
add
std
mov
inc
neg
loopne
cs
jp
mov
cmp
add
mov
sbbl
push
jp
inc
jae
lock
and
push
mov
sub
lods
in
pop
sub
mov
xchg
push
add
add
scas
jecxz
loope
shrw
lds
inc
push
jmp
movsl
ret
xor
push
lds
dec
js
and
inc
cmpsl
cmpsl
std
scas
std
fwait
aaa
push
clc
mov
mov
push
ljmp
xor
and
out
push
aad
add
leave
mov
mov
and
data16
lea
lods
mov
mov
call
lods
repz
lds
lret
push
adcb
dec
xchg
sbb
push
jno
aam
insb
cltd
imul
inc
sub
push
sbb
push
cs
incl
inc
addr16
in
push
lods
pushf
mov
sbb
shlb
lds
push
inc
mov
shr
pop
push
jge
lret
fsubrl
cltd
cmc
dec
adc
jecxz
and
jge
xchg
lock
and
jecxz
pop
dec
or
arpl
jno
lds
or
xor
sub
push
xlat
loop
pop
inc
push
mov
insl
push
imul
dec
int3
xchg
add
sub
pop
mov
push
and
pop
mov
xor
cltd
mov
push
push
push
jmp
mov
ret
sbbb
popf
loop
and
jbe
mov
xchg
and
and
into
ret
fdivs
aaa
cmpl
cmp
icebp
sbb
loop
adc
and
lcall
cwtl
mov
xchg
cmp
sub
sub
push
pop
lods
addr16
push
add
jne
cmp
xchg
pop
sub
mov
out
outsl
push
addl
pop
in
loope
fimuls
pusha
stos
inc
dec
or
sub
mov
mov
sub
inc
in
pushf
movl
push
adc
push
inc
and
test
rcrb
icebp
loope
movsl
push
stos
cltd
inc
sub
mov
push
inc
addl
les
add
nop
clc
fistps
adc
div
daa
adc
or
adc
xlat
jg
xchg
mov
lahf
adc
or
xor
test
jmp
dec
jbe
icebp
adc
xchg
leave
xor
jmp
gs
in
and
push
pushf
xor
mov
push
test
sbb
sub
dec
outsl
and
loopne
and
cwtl
imul
inc
test
aaa
xchg
push
xor
push
or
inc
cmp
push
lods
xchg
stos
in
inc
cs
addb
mov
adc
cmpsl
mov
pop
movsb
popf
addl
push
imul
aam
sub
js
mov
cmp
xchg
stos
xchg
in
imulb
ss
bnd
into
gs
int
sub
pop
sub
outsl
push
pop
or
push
in
pop
inc
jns
cmpsb
negl
xchg
sub
push
pop
sarl
xchg
sub
outsl
in
cmpsb
xchg
scas
xchg
sub
loopne
xor
xor
fxch
pop
pop
and
inc
dec
fnsave
loop
add
lds
push
mov
push
out
lds
out
adc
call
mov
rorb
imul
jno
popa
jnp
icebp
push
jae
jmp
gs
shll
outsw
cmpsl
int
arpl
add
arpl
adc
xchg
jle
and
jb
out
inc
add
inc
test
cmp
roll
fidivl
push
cmpl
push
dec
out
in
push
insb
aaa
push
arpl
push
popf
inc
mov
ja
mov
in
mov
hlt
mov
testl
fidivs
lods
hlt
and
in
mov
aad
sbbb
sbb
cli
cmp
fcompl
out
insb
iret
pop
jle
pop
mov
test
jg
dec
rolb
push
xor
sub
jns
mov
int3
ret
mov
jl
pop
add
push
insb
movsb
mov
cmp
fnstcw
adc
movsl
popf
pop
test
pop
popa
mov
adc
sbb
dec
loop
push
movsl
insl
mov
add
daa
dec
dec
pusha
push
cmp
jno
sub
pop
push
sbb
cwtl
test
mov
frstor
cmp
inc
xor
lock
jmp
dec
jl
add
dec
fsts
mov
mov
mov
inc
cmp
out
pop
xchg
ja
rcll
lret
pop
xor
loop
loop
mov
cmp
mov
jmp
jo
insb
mov
outsb
push
pop
mov
mov
or
dec
andl
mov
mov
mov
mov
adc
fbld
lret
movsb
pop
and
ret
aad
xor
add
xor
inc
xlat
cwtl
sahf
push
mov
xchg
in
mov
mov
xor
aad
popf
aaa
mov
jecxz
cs
mov
daa
jmp
sbb
pop
das
xlat
lods
or
insb
push
dec
aaa
add
sarb
mov
ret
in
xor
das
xor
lahf
pop
mov
insl
push
sub
inc
cli
pop
cmp
cmpsl
inc
xor
out
std
dec
fs
push
pop
push
xor
mov
mov
pop
rorb
push
cmp
push
mov
cmc
repnz
int
jae
daa
xor
lahf
push
sbb
dec
or
sarl
cmpsl
adc
adc
add
and
bound
aaa
jp
in
cltd
sub
das
push
fidivl
cmp
in
sbb
aas
inc
sub
in
inc
outsb
pusha
lea
xor
mov
ds
dec
push
out
pop
lahf
hlt
in
and
cmp
inc
sub
leave
add
cmp
inc
pusha
dec
addr16
dec
adc
aad
adc
xchg
pop
lret
xchg
xchg
stos
lock
jmp
inc
cmp
in
dec
sub
enter
repnz
sbb
pop
xchg
xor
insl
adc
out
lds
jno
aaa
adc
js
popf
enter
push
push
mov
fiaddl
and
in
sub
aam
ficompl
dec
fcomp
daa
imul
inc
xlat
je
cmp
xchg
mov
fsubrs
aaa
dec
mov
fcomps
in
test
dec
xchg
adc
pop
adc
f2xm1
and
cmp
aas
imul
pusha
push
cmp
movsl
pop
xor
xor
mov
pop
jae
scas
outsl
js
push
ret
cmp
mov
push
lds
mov
mov
inc
jae
add
pop
inc
push
xchg
mov
jae
xchg
inc
sbb
pop
out
popf
push
in
cmp
push
mov
vmwrite
dec
mov
jns
adc
mov
dec
imul
aad
movsl
mov
mov
lock
fimuls
push
sbb
mov
mov
imul
push
xor
mov
in
dec
call
mov
and
ss
cmpl
bound
cmp
aad
popa
out
ljmp
mov
xlat
enter
mov
sbb
mov
pushf
aad
stc
ljmp
mov
lds
pop
pop
pcmpgtw
pop
adc
mov
cwtl
and
add
imul
popa
mov
insb
mov
js
sub
into
cmc
ret
mov
call
int
fmull
push
adc
arpl
test
iret
loopne
popf
sbb
jge
inc
cmp
dec
adc
add
push
adc
out
xchg
sub
push
mov
data16
xchg
mov
lock
pop
jl
imul
data16
out
int3
test
out
in
inc
in
adc
das
outsb
xor
ret
inc
rcl
jbe
mov
mov
inc
push
lock
out
mov
lods
movsl
fs
pusha
inc
repnz
repnz
imull
sti
test
aad
adc
lcall
call
jge
fldenv
add
movsb
aad
insl
scas
cs
cmpsb
sahf
test
imul
lcall
test
stos
sub
push
sbb
xor
mov
or
sub
mov
mov
mov
mov
inc
push
test
mov
push
xchg
sbb
jl
cmpsb
adc
js
adc
add
icebp
xchg
test
testb
jae
jbe
mov
jmp
test
xor
and
add
lock
sbb
mov
push
shll
movsb
cmp
test
lret
loope
xchg
mov
mov
sub
jb
xchg
das
pop
mov
call
xchg
and
cmp
aas
sti
cmpsl
or
test
bound
push
pop
clc
sub
fucom
call
jp
repz
jbe
pop
mov
mov
push
call
mov
pusha
sub
pop
sbb
insl
cmp
hlt
xchg
sbb
jle
xchg
loop
dec
inc
pop
add
add
mov
fiaddl
notl
add
inc
aad
rcrl
outsl
or
jae
cmpsl
sub
incb
cmc
xor
cli
test
adc
cmpl
and
add
cmp
rorl
mov
cs
insb
sbb
stos
inc
lcall
fbstp
sub
call
shrl
mov
loopne
mov
lds
cwtl
xchg
pop
jecxz
pop
inc
lret
call
xchg
xchg
inc
dec
sbb
int
dec
push
fwait
test
pop
push
inc
xchg
mov
mov
test
pop
mov
mov
dec
mov
out
cs
sbb
lret
shrb
outsb
xlat
cmpsl
daa
push
mov
adc
xchg
dec
fsubrs
mov
xor
subb
push
fdivs
jno
dec
loopne
pusha
call
sub
sbb
mov
jb
shrb
cli
call
enter
jns
adc
pop
push
sbb
sbb
inc
cwtl
and
pop
push
xchg
mov
sub
rorl
xor
add
push
in
loop
mov
xchg
imul
scas
jo
add
out
mov
add
les
dec
stc
adc
dec
add
push
and
pop
adc
test
lock
sbb
cmpsl
cmpsl
cmp
mov
aad
add
push
je
xorl
add
fnsave
add
sub
imull
dec
inc
adc
incl
push
mov
test
imul
fnstcw
shlb
push
in
and
les
inc
into
dec
inc
dec
insb
mov
pop
sub
daa
cmpsl
mov
xchg
adc
and
lods
andl
movsw
popa
lods
subl
shl
mov
push
push
cmpsl
fadd
enter
test
ficoms
dec
gs
imul
cs
jo
dec
push
in
push
dec
jmp
aaa
lods
xor
addr16
icebp
xchg
dec
inc
xlat
sub
ljmp
push
dec
mov
or
or
test
addr16
inc
je
in
cmc
in
movsl
repz
neg
lds
xchg
lods
inc
cs
mov
adc
push
ja
push
fstpl
push
xor
shlb
hlt
mov
mov
push
mull
lea
mov
inc
loope
mov
cmc
je
das
inc
in
mov
mov
jmp
lods
push
outsl
icebp
fs
sub
jae
daa
mov
and
jmp
pop
inc
push
aas
call
adc
adc
adc
push
and
daa
mov
xor
cmp
mov
mov
cmp
arpl
push
jle
mov
sbb
in
repnz
daa
fcom
iret
imul
in
aad
gs
adc
push
sub
push
xchg
push
lock
add
test
push
inc
sar
movl
popa
fbld
and
in
dec
mov
mov
test
push
jg
xchg
pop
int3
fs
cmp
shrl
adc
clc
push
das
test
popf
lea
sbb
test
cmpsb
das
adc
cli
dec
mov
test
adc
dec
xor
shll
cwtl
mov
rorl
cmpsl
push
add
rcll
adc
test
lcall
das
out
mov
jno
jecxz
aam
movsl
mov
es
or
add
imul
stos
out
inc
enter
iret
popa
push
insl
inc
data16
push
xchg
jmp
push
and
stc
addr16
pop
in
or
adc
pop
imul
test
movsl
and
aas
jmp
sti
mov
pop
mov
jmp
jno
xchg
mov
rorb
adc
movsl
dec
stos
sbb
and
push
cmp
cmp
cmp
xor
push
dec
fmuls
jecxz
mov
loopne
mov
push
jl
pop
call
aam
adc
daa
loope
fsubs
mov
inc
data16
add
push
loop
imul
sub
inc
sbb
repnz
stc
sub
test
imul
mov
in
jae
or
lods
daa
pop
int
xchg
dec
insl
aad
xor
mov
in
jbe
loopne
in
ja
xor
pop
outsb
stos
gs
lea
mov
out
in
cmp
mov
dec
fs
popa
jb
test
adc
xchg
inc
clc
mov
jns
sbb
cmpsl
outsl
mov
test
adc
add
mov
imulb
pop
mov
in
pop
push
out
loopne
scas
gs
sub
sarb
push
fidivrl
aad
imul
and
adc
pushl
cmp
mov
rcl
push
repnz
xchg
outsb
add
int
cmp
push
adc
fadds
xlat
in
fs
sub
movsl
dec
cmp
adc
test
push
fmul
xor
push
sub
inc
stc
mov
aas
adc
and
imul
mov
sub
mov
sbb
mov
sbb
in
xchg
xlat
jno
lret
daa
inc
popf
fwait
test
int
sub
and
mov
xor
xchg
ror
imul
mov
push
insb
hlt
xor
xor
ja
lock
xchg
in
dec
dec
lcall
in
pop
mull
push
cmc
jp
in
cmp
dec
enter
jne
pop
loope
imul
xlat
rcll
mov
adc
jns
pop
sahf
adc
xchg
roll
enter
out
imul
xchg
push
fiaddl
aaa
shll
cltd
loope
jmp
inc
data16
addr16
bound
in
xchg
push
cmpsb
test
cmp
cmp
clc
xlat
int3
inc
push
adc
lcall
push
loope
mov
jmp
inc
or
das
cltd
cmpl
stos
cmp
pop
push
out
adcl
fsubrl
adc
cs
add
inc
pop
out
mov
xor
xchg
lds
add
and
pusha
xchg
inc
int3
jp
clc
jge
repz
add
cmpl
mov
adc
adc
and
in
mov
adc
das
syscall
xchg
arpl
xor
bound
aad
xchg
jecxz
jo
jns
and
flds
sahf
lds
inc
fsqrt
xor
fldt
cmp
gs
sbb
popa
or
movsb
aaa
imul
sbb
pushf
jmp
in
inc
lea
xorl
pop
je
dec
cli
push
or
inc
xor
movsb
mov
jmp
bound
mov
notb
andl
sub
fmuls
jo
sub
aaa
insl
pop
cwtl
mov
andl
inc
enter
xor
sbb
jne
push
es
lret
xor
std
aam
es
push
xchg
push
aaa
out
fwait
repnz
es
sub
jnp
cmp
xchg
icebp
jmp
sbb
push
repnz
xor
rcrb
sub
popa
aas
adc
aad
xchg
jae
add
loopne
pusha
inc
ljmp
add
sub
mov
push
call
js
aaa
lods
xor
lds
pop
mov
pushw
adc
adc
inc
mov
mov
or
jae
clc
add
adc
inc
inc
lods
gs
mov
sub
lds
mov
jnp
sub
bound
aas
int3
and
xchg
sbb
adc
cmpsb
imul
inc
daa
test
test
test
xchg
loopne
inc
xlat
aaa
cmp
dec
fadds
xlat
dec
push
and
loop
mov
mov
imul
imul
mov
movsl
gs
movsb
outsl
fdivr
mov
aaa
and
sbb
jns
push
insb
push
loope
adc
ds
mov
xor
push
dec
fisttpl
xchg
push
std
leave
cmp
pop
add
lahf
push
divb
dec
mov
arpl
movsl
inc
test
inc
loop
mov
sbb
cs
sub
dec
subl
xchg
mov
push
ljmp
lods
out
test
pop
testb
subb
sub
mov
jge
insb
hlt
movb
inc
in
mov
sub
clc
out
add
cmp
je
addb
loopne
sbbl
rcll
and
lods
jge
lock
mov
fcmovu
xor
or
ljmp
gs
mov
sub
sbb
mov
inc
mov
cmp
mov
test
mov
add
neg
notb
scas
mov
xlat
out
in
mov
lock
push
lock
xor
sahf
daa
mov
in
push
adcb
in
inc
pop
clc
cwtl
gs
xor
cmp
dec
emms
outsb
orb
add
push
jns
sub
ret
hlt
xchg
in
xor
fsubp
add
rolb
xchg
inc
and
dec
sub
dec
in
xchg
inc
push
inc
jne
int
lea
mov
iret
cmp
outsl
sub
jne
popf
ror
adc
insl
xchg
push
and
lahf
cmp
xchg
lods
out
pop
imul
push
mov
je
ds
loope
and
out
fs
add
sbb
mov
ja
movsl
jbe
aas
and
je
rorl
test
push
sub
hlt
arpl
jp
mov
loope
inc
out
mov
daa
mov
lock
mov
mov
add
in
jmp
xchg
out
scas
jbe
jmp
in
jne
clc
in
sahf
pop
sti
mov
movsl
imul
test
and
and
sub
xorb
mov
cmp
xlat
jbe
pop
fdivl
fldcw
xchg
scas
ds
out
in
add
inc
in
gs
xor
cmp
leave
test
lds
lret
xlat
cmp
cmp
and
incb
in
jmp
inc
add
mov
and
sahf
in
mov
add
aaa
pop
or
loopne
mov
aaa
mov
xor
mov
mov
mov
xchg
fcoms
rolb
fcompl
jno
adc
mov
arpl
push
mov
cli
outsl
xor
cmp
cli
cmc
or
pop
icebp
bound
sub
out
and
sti
les
movsl
andl
aam
add
and
mov
sub
call
fisttps
dec
cmp
lock
xchg
mov
cmp
pop
sbb
flds
in
gs
add
lods
hlt
in
dec
push
faddp
push
xor
mov
add
and
lods
rcrl
xchg
mov
or
dec
xor
fimull
cmc
mov
das
xor
push
dec
lahf
test
xor
popa
add
daa
xor
push
xor
jo
push
or
aam
jns
xlat
repz
daa
inc
xchg
fwait
push
cmpb
mov
fnstenv
mov
imul
dec
aam
cmpsl
and
sti
and
dec
push
pop
add
adcb
push
add
shrl
icebp
addr16
push
push
movsl
cmp
iret
idivb
aad
inc
mov
les
addr16
xchg
in
sbb
push
in
insl
dec
push
sub
sub
push
push
lds
inc
xchg
xor
sbb
mov
mov
xor
sub
mov
add
push
add
in
and
lods
dec
sbb
xor
cmp
and
xchg
xor
lret
ljmp
popa
aam
test
scas
pop
push
je
sbb
out
cld
fs
pop
scas
and
mov
dec
lods
sbb
or
inc
in
mov
mov
sub
or
adc
popa
cwtl
outsl
test
push
mov
mov
adc
xor
cmp
movsl
and
or
pop
test
in
aaa
bound
call
cli
aaa
cmp
fisubrl
out
inc
pop
cmpsl
cs
in
cmp
fisttpll
inc
les
and
neg
cmp
cwtl
xor
lret
adc
dec
scas
xor
in
inc
es
sbb
xchg
aam
or
fnstenv
xchg
push
jne
push
mov
xchg
mov
xchg
jmp
pop
push
jl
xor
call
mov
push
outsl
mov
mov
sbb
mov
push
das
pop
inc
mov
fldl
fwait
push
push
jbe
pop
or
xchg
icebp
stos
inc
lock
mov
adc
stos
push
lret
jmp
test
jb
jno
orl
aaa
imul
mov
add
pop
incb
push
scas
and
mov
popf
imul
in
mov
icebp
xchg
dec
cmp
aad
sub
mov
rol
movsb
shll
dec
jb
aad
pop
out
aam
jp
or
xchg
mov
popa
in
mov
repnz
mov
pop
subb
inc
sbb
test
leave
sub
mov
xchg
cli
add
insl
mov
jmp
daa
dec
cwtl
insl
xchg
xchg
mov
pop
popa
add
popa
scas
lcall
stos
cs
ret
mov
cmp
hlt
push
popf
adc
mov
adc
mov
inc
bound
pop
std
int
mulb
sub
loope
daa
dec
mov
imul
out
sahf
pop
add
mov
into
pusha
xor
insb
stos
xchg
lcall
sub
fdivs
leave
or
out
cli
int
pop
pop
dec
ja
adc
push
sbb
adc
or
pop
std
push
enter
cs
xchg
jno
mov
and
inc
imul
add
push
cmpsl
mov
xor
push
mov
jbe
pusha
lock
xchg
push
cmpsb
and
movsb
imul
outsl
fistpll
push
sbb
xor
sub
sub
inc
add
js
xor
out
adc
or
cs
xchg
fadds
add
ja
xchg
rclb
clc
dec
jns,pn
aad
jmp
or
xchg
inc
movsb
or
imul
and
mov
xor
ficomps
jno
inc
das
bound
xor
or
in
dec
xor
loopne
and
cmp
sub
rorl
sbb
mov
mov
imul
hlt
scas
xchg
dec
mov
js
add
mov
and
and
pop
out
test
shrb
and
sub
adc
sbb
adc
sub
push
in
mov
jp
inc
loope
dec
xchg
xlat
push
mov
add
imul
sbb
sub
or
jp
lock
int
inc
xor
out
add
cmp
int
push
pop
out
fdivl
dec
inc
leave
out
bound
pop
cs
fwait
ret
inc
mov
gs
jmp
pusha
xchg
subb
scas
fs
lahf
cmpsl
je
fidivrs
mov
fs
mov
movsb
inc
mov
gs
push
dec
xchg
es
imul
inc
pop
mov
jl
or
or
into
mov
and
pop
mov
sub
jb
sbb
add
mov
push
cmp
pusha
in
bound
andl
cmc
xor
cmp
mov
sub
pop
xchg
mov
mov
loop
dec
adc
clc
xor
lods
sub
lds
imul
es
mov
lahf
sub
popf
inc
insl
cmp
sub
addr16
inc
jne
push
sbb
test
imul
cmpsb
imul
imul
loopne
push
and
add
mov
push
test
popa
cmp
push
jmp
lret
fucomp
cli
inc
mov
out
push
push
gs
xchg
mov
jne
rolb
lcall
pop
push
pop
lods
and
dec
or
push
hlt
dec
push
jl
pop
sbb
dec
mov
xorl
fistpll
add
jae
mov
test
or
stos
jo
pop
push
inc
cwtl
and
inc
cltd
mov
pop
xchg
mov
lds
bound
add
gs
ret
adc
fcmovu
jge
dec
inc
mov
xor
jmp
shl
dec
les
sbbb
out
xchg
push
enter
add
out
movsl
inc
xchg
cwtl
in
arpl
xor
and
mov
loopne
jno
fsubl
mov
mov
sub
mov
ficomps
jb
jecxz
insl
cmpsb
or
cmpsb
inc
popa
or
nop
xchg
lds
cs
fwait
inc
mov
mov
stos
pop
stos
inc
jno
pop
dec
je
popa
sub
mov
add
call
push
das
fwait
insb
pop
xor
sub
push
in
ret
xor
cmpsb
bound
fsubs
mov
xor
mov
cmpsb
insl
push
mov
cmp
in
aaa
jo
push
into
sbb
test
xchg
shrl
fisubl
aaa
cmp
lds
test
pop
aad
in
add
ret
and
scas
insl
ljmp
add
subl
js
int
in
mov
push
rorl
adc
fs
in
daa
push
xor
and
aam
dec
mov
lods
ds
scas
int
sub
push
inc
in
aas
cmpsb
push
or
imul
add
sbb
loope
adcb
add
dec
lock
xchg
js
fdivp
xor
mulb
sti
inc
add
in
mov
popf
xchg
mov
sub
mov
inc
dec
cmp
push
scas
sub
or
sahf
shlb
bound
and
stos
pop
repz
ret
dec
dec
mov
out
das
fisubs
adc
xor
je
movsl
ret
test
aam
gs
mov
mov
inc
mov
pop
cmp
mov
ja
cmpsb
rcrb
outsb
loope
sbb
push
mov
es
aad
scas
push
pop
cmpsb
pop
inc
data16
leave
mov
idivl
pop
push
jo
xchg
sub
das
enter
insl
mov
mov
daa
fcmovu
scas
push
add
in
test
xchg
inc
cld
pusha
aam
inc
mov
ljmp
inc
mov
in
push
popa
sub
sahf
lret
in
faddl
pop
sahf
sbb
aad
call
xor
repnz
loope
xor
daa
loopne
sub
filds
sbb
add
fstl
sahf
idivl
cmp
fsubrs
test
xchg
addr16
mov
push
ret
and
and
lds
in
mov
pop
mov
lret
insb
mov
stc
and
sub
and
inc
in
mov
sbbb
lds
mov
and
daa
rcrl
xor
push
scas
data16
mov
fstpl
mov
mov
imul
test
add
stos
out
dec
push
xchg
push
push
xchg
scas
sub
pop
dec
popf
xchg
dec
push
in
or
test
sti
mov
gs
mov
and
add
loop
xor
pop
in
ja
inc
adc
xor
cmp
dec
in
in
std
aad
mov
aad
jmp
dec
xor
sub
pop
data16
rcrl
push
sbb
jne
in
jnp
or
lret
sarb
in
movsb
mov
cli
push
add
in
icebp
push
dec
jbe
lea
or
add
lods
rcr
sub
dec
fs
xchg
mov
sub
dec
mov
loope
mov
loop
mov
dec
movsl
es
or
inc
aad
or
xor
push
aaa
rclb
mov
xor
xchg
call
outsb
hlt
stos
imul
sbb
out
mov
es
stos
hlt
jmp
mov
xchg
sbb
out
mov
inc
xchg
push
and
push
push
cli
daa
push
popa
pop
popf
adc
insl
subb
add
add
cwtl
in
lods
adc
lret
rcr
cmp
call
sub
mov
push
shrl
mov
adcl
add
sub
int
and
jne
xor
cmp
movsl
popl
dec
cmp
inc
sub
insl
adc
push
dec
stc
dec
dec
mov
lcall
bound
mov
lods
mov
sub
jno
cs
cmp
push
js
jle
scas
add
call
idivb
cs
cmp
or
and
push
inc
mov
je
or
aaa
push
inc
je
mov
pop
pop
jno
mov
je
fisubrs
lea
cmp
cli
inc
cmp
xchg
pop
cwtl
dec
inc
sahf
push
pop
fsubp
or
and
test
adc
mov
dec
and
mov
ret
loop
and
cmp
pop
sbb
and
notb
jecxz
negl
sarl
fisubrl
jg
mov
add
sbb
call
cmp
movsl
out
jmp
dec
addr16
imul
rolb
fsubrs
fstl
popa
jb
jns
insb
jmp
popa
inc
popf
daa
fimuls
xor
test
add
dec
mov
push
aas
mov
std
add
imul
sub
jg
xor
int
cmp
inc
enter
inc
adcl
pop
sub
dec
std
mov
in
popf
fucomip
inc
mov
mov
inc
push
addr16
add
in
int
stos
cmp
cwtl
pop
mov
mov
fildl
mov
fldenv
pop
cmp
fcmovne
cltd
sahf
pop
and
mov
xor
jo
in
xor
movsl
push
jmp
jbe
sub
mov
mov
out
loop
shll
fldcw
imul
jno
jp
call
and
mov
shlb
sbb
xor
pop
push
das
fadd
gs
push
push
push
mov
jp
jg
and
scas
mov
mov
mov
xchg
sub
imul
in
repnz
bound
scas
jns
xchg
in
in
sub
mov
jl
cmpsb
mov
push
mov
cld
adcb
sub
push
call
lods
sub
js
sbb
pop
inc
pop
push
test
cmp
aad
bound
inc
sbb
cmpsb
call
push
filds
add
into
mov
mov
pop
hlt
push
sbb
push
jl
push
roll
repz
into
push
adc
pushf
push
decl
mov
inc
aas
in
in
mov
adc
ret
adc
mov
movsl
insb
and
imul
pusha
out
xchg
int
push
out
fs
sbbl
push
push
sub
push
jp
cmp
leave
inc
pop
imul
roll
out
lahf
xchg
pop
pop
cmp
call
and
inc
insb
fldcw
mov
mov
and
add
imul
xchg
imul
lahf
gs
imul
lea
push
push
xor
inc
mov
aaa
movb
pop
mov
push
js
sub
mov
std
andb
sub
mov
xchg
mov
ljmp
daa
xchg
pop
aas
insl
insl
jmp
cli
out
push
rorl
imul
mov
shr
enter
push
cwtl
mov
test
jo
nop
push
into
adc
and
jg
loop
popf
push
loope
xor
pushw
cltd
add
jae
cmp
dec
pop
mov
out
sub
js
mov
cmp
xchg
gs
je
xchg
cmc
push
inc
icebp
inc
dec
pop
adc
push
xor
jge
sti
and
loope
xchg
push
subl
in
addb
test
cmp
sbb
shrb
sub
adc
imul
mov
clc
sbbb
rcrl
cmp
rorl
out
ljmp
fiaddl
rcll
jne
adc
cmp
xorl
push
xchg
jo
clc
outsl
insl
les
inc
cmp
imul
testb
ret
fcompl
outsl
aad
in
dec
mov
mov
inc
xchg
mov
fcmovbe
fs
shll
adc
xchg
push
add
push
js
inc
mov
dec
insb
nop
lahf
xor
pop
imul
inc
aad
cmp
mov
incb
mov
cltd
jge
mov
push
pop
add
xor
pop
adc
sbb
ljmp
add
sub
std
add
pop
hlt
jl
xor
stos
pop
inc
push
insl
test
outsb
push
fsubs
stos
cld
pop
lea
popf
popa
ljmp
mov
mov
and
loope
mov
ja
inc
test
call
mov
push
repnz
sub
fsts
sti
lods
pop
and
xchg
icebp
dec
call
dec
shrl
subb
cs
pop
fwait
int
insl
xor
mov
aad
jecxz
xor
cs
inc
addr16
mov
xchg
fsubp
movsb
hlt
pop
jb
fcompl
mov
jp
aad
jns
in
cmp
notb
ret
xor
adc
cmpl
std
int
cmp
in
aad
sti
sub
push
popf
das
daa
jne
mov
push
rorb
xor
xor
fisubl
hlt
test
loop
imul
popf
sub
xor
in
inc
mov
loopne
mov
or
push
mov
imul
mov
sub
add
inc
fsubrl
lods
pusha
std
fsub
or
out
xor
mov
add
xchg
in
adc
mov
das
sbb
rcrb
rcl
push
push
sub
sbb
enter
and
dec
subb
cs
xorl
faddl
mov
mov
mov
jbe
addl
cmp
inc
push
imul
loopne
fstps
int
insl
test
or
ret
pop
jge
pop
loop
movsl
mov
and
je
xchg
dec
in
dec
add
sub
and
sub
call
mov
and
pop
or
scas
into
inc
and
adcb
sub
mov
gs
xor
enter
hlt
sbb
fs
imul
mov
xlat
push
inc
outsl
in
adcb
cli
sub
and
jecxz
in
aad
insl
add
in
pmovmskb
test
mov
push
addr16
sbb
loope
pop
dec
add
xor
arpl
dec
cmp
outsl
loop
xor
pop
xchg
rclb
adc
xor
mov
mov
xchg
push
es
aam
xchg
sub
and
mov
jle
fcmovnu
mov
add
sub
add
gs
jbe
imul
cs
pop
push
hlt
lcall
data16
pop
xchg
in
cmp
out
fnstenv
mov
js
dec
das
inc
cmpsl
push
lea
lret
xchg
pop
jnp
push
mov
dec
push
hlt
in
push
mov
test
insb
jae
jbe
inc
adc
pushl
cmp
aas
out
ss
mulb
and
or
jns
out
or
lret
imul
lods
call
gs
push
and
fldlg2
add
movsl
ret
mov
mov
test
cwtl
cmpsl
js
push
mov
mov
mov
in
daa
and
jecxz
and
mov
ljmp
inc
lock
cmp
std
aad
imul
inc
adc
dec
daa
test
dec
daa
cmpsb
test
jno
jmp
xchg
sbb
gs
cmpsb
sub
std
gs
mov
jp
popf
xor
dec
xor
fldcw
je
sbb
andl
inc
sbb
xchg
xor
cmpsb
in
out
in
sub
out
adc
xor
inc
mov
sub
mov
push
in
dec
lods
xor
das
or
dec
movsb
int3
loopne
daa
mov
jecxz
add
add
or
mov
pop
or
mov
and
pop
mov
popa
adc
jle
xchg
test
aad
push
inc
adc
dec
daa
movsl
test
gs
daa
and
cmp
setne
jo
outsl
popa
stos
pop
in
push
push
mov
dec
in
insl
fsubrs
leave
stos
int3
stc
les
aas
and
push
push
mov
es
xchg
and
data16
or
imul
scas
popa
in
lock
ds
das
fiaddl
inc
sub
add
lds
and
addr16
mov
xchg
or
push
inc
dec
sub
pop
dec
clc
xchg
sub
testl
fstps
mov
sbb
mov
subb
and
dec
inc
and
pop
pop
popf
mov
cmp
bound
jne
mulb
cs
testb
and
jne
rcrb
mov
mov
lds
lea
stc
leave
mov
jg
and
insb
int
push
jae
or
and
add
aam
adc
aaa
popa
sub
shrl
and
imul
sub
loope
outsl
push
es
cmpsb
xorl
and
imulb
mov
dec
xchg
in
and
sbb
popa
dec
imul
stos
loopne
xchg
jnp
dec
pop
mov
insb
outsb
movsl
mov
inc
popa
testb
pop
mov
dec
jbe
inc
sub
lock
js
or
scas
in
ljmp
ret
aad
push
gs
int3
xchg
inc
pushf
xor
gs
out
nop
mov
pop
inc
sub
push
jno
sub
xor
mov
lods
adc
jmp
mov
iret
clc
aaa
shlb
add
mov
insl
stos
mov
mov
es
and
mov
test
jo
push
jle
ficompl
mov
popf
xor
ds
gs
out
mov
push
pop
popf
popa
push
push
mov
int
xchg
push
mov
pop
les
mov
das
adc
add
push
test
adc
adc
dec
js
ficompl
inc
out
push
cs
pop
mov
mov
and
add
mov
inc
cmp
pop
hlt
xorl
rolb
bound
pop
and
ds
cmp
scas
lods
test
aaa
cmpsb
movsl
mov
loop
sub
xchg
mov
imul
fcomps
jns
and
pop
repz
movsl
shrb
test
popa
andb
ja
test
xchg
movsl
aaa
fidivl
sarl
lods
movl
sbb
inc
pop
notb
sub
pop
xorb
pop
movsl
push
lock
je
sub
adc
lret
push
mov
movsl
xchg
sbb
sti
cmp
jmp
leave
movsl
xchg
pop
leave
mov
push
cmp
mov
pop
mov
inc
in
imul
ja
dec
in
push
hlt
sub
js
cmpsl
push
movsb
stos
jne
xor
cmp
stos
dec
ja
not
sti
insl
movsl
inc
fadds
jbe
add
mov
in
sub
daa
test
mov
pop
mov
adc
lret
imul
mov
or
das
push
adc
in
mov
mov
add
xchg
lock
pushf
and
scas
movsb
and
cld
insb
xchg
xchg
fs
bound
xor
jmp
xchg
test
ret
pop
rcr
out
mov
negl
xlat
js
popf
mov
pop
push
js
xchg
hlt
cmc
xchg
ds
call
pop
and
jmp
jp
sub
leave
xchg
add
sub
dec
sub
pop
daa
sub
dec
sbbl
clc
popf
movsl
bound
jmp
out
dec
xchg
sbb
mov
insl
addr16
jno
add
scas
mov
inc
push
sahf
and
inc
mov
es
mov
inc
in
aas
push
aam
jmp
inc
jnp
mov
aam
negl
cmp
xor
mov
scas
aam
xchg
and
mov
aad
inc
insl
or
rorb
jns
or
les
shrb
adc
sahf
mov
jae
lret
pop
and
fnstsw
insl
je
movsb
pop
push
popf
xchg
cmp
data16
loop
in
mov
push
jmp
jle
push
imul
mov
or
out
xchg
sub
jge
jecxz
or
ret
push
test
xchg
lret
repnz
mov
xchg
repz
ljmp
shlb
and
xchg
jo
icebp
mov
leave
cmp
addb
mov
cs
ds
insl
mov
push
pop
push
in
cmp
scas
call
sbb
mov
shll
lods
in
sub
push
aam
mov
lret
popa
xor
dec
call
cmp
stos
lahf
subb
xchg
xor
imul
push
dec
add
outsl
and
and
mov
loope
jp
outsb
popf
repz
out
pop
mov
and
pop
ljmp
xchg
movsl
push
push
fmuls
jbe
lock
jl
pop
jl
aas
push
xor
cmp
jb
xor
lods
jno
jb
pop
inc
sub
sub
cmp
movsl
fimuls
push
cmp
sub
dec
repz
movsb
pop
cmpsb
jae
cmpsb
out
push
stc
inc
pop
and
lods
and
jnp
test
cmpsb
sub
cmp
and
popf
test
mov
daa
je
cmpsb
movsl
or
pop
adc
subb
cwtl
and
mov
mov
mov
mov
inc
mov
call
cmp
popf
addr16
or
xchg
push
push
push
push
aaa
fimuls
mov
bswap
xchg
mov
mov
fdivs
mov
jg
dec
fimuls
stc
xor
dec
add
daa
xchg
xor
mov
mov
mov
inc
sub
in
addr16
push
push
pop
pop
fidivl
mov
repnz
in
data16
mov
dec
leave
out
ret
sub
push
or
mov
fsubrs
loope
mov
das
and
mov
pop
push
lods
out
rol
and
pop
pop
add
jo
fcmovu
daa
push
mov
sahf
es
fwait
in
mov
mov
test
and
les
daa
sbb
xchg
cmc
push
fcmove
cmp
adc
out
push
sahf
pop
out
add
adc
push
pop
add
inc
hlt
and
outsl
or
push
pop
push
in
xchg
arpl
pop
sub
repz
test
out
and
idivb
or
cmp
movb
add
xchg
lods
adc
pop
adc
dec
pop
push
sahf
call
xor
rorb
and
testb
push
loope
iret
cmc
sahf
dec
jb
cwtl
cmp
push
test
xor
pop
fldcw
rcl
and
mov
dec
test
shll
mov
mov
ret
push
jnp
mov
imul
lret
popa
sub
ja
inc
adc
add
imulb
mov
loopne
mov
add
xor
sub
dec
outsb
and
push
jp
gs
insb
sbb
mov
sub
icebp
testb
cmp
mov
fistpl
fs
in
inc
mov
in
xchg
outsb
cmp
xlat
aas
and
push
sub
rorb
filds
mov
cs
mov
sbb
pusha
lahf
pop
pusha
int
sbb
push
mov
or
loop
sarb
adc
sbb
mov
push
mov
or
xorb
rclb
ret
xor
mov
xor
lcall
insb
mov
sub
cmp
outsl
test
mov
sub
push
es
fldt
sbb
popf
mov
mov
mov
sbb
out
movb
stc
ficompl
popf
inc
jno
sarb
insl
stos
jp
adcl
in
sti
xor
clc
loop
jmp
or
and
inc
xchg
adc
mov
and
push
xchg
icebp
jg,pn
mov
pushf
cmp
out
adcb
in
in
adc
xorl
sub
insl
add
inc
test
jae
rolb
lret
jbe
fsubrs
cmp
or
and
jl
shrl
dec
js
fcmove
jno
mov
lret
cmp
mov
push
jns
clc
pop
daa
loopne
cmc
or
cmp
xor
popa
mov
ja
push
and
jle
arpl
test
mov
js
xor
push
adc
jo
xchg
fsubrl
and
int
cwtl
pop
mov
sub
mov
stc
test
adc
or
decl
into
inc
fiadds
mov
icebp
ficompl
and
out
sti
imul
mov
in
movsb
loop
dec
movsl
add
mov
xor
or
xchg
mov
or
fs
imulb
and
xchg
cmp
call
sti
xchg
xor
and
add
imul
cli
xor
inc
les
pop
mov
mov
popf
push
jle
test
and
push
fmul
fiaddl
and
aaa
cmp
xchg
sbb
cmp
add
mov
inc
shll
push
inc
or
test
rorl
mov
test
and
orl
int
xor
ret
in
addr16
popf
movsl
fistl
ja
and
xor
int3
xor
test
stos
fimull
test
mov
sti
inc
push
andl
sbb
add
adc
xor
outsb
sbb
mov
or
xchg
xor
fs
faddl
jmp
loopne
adc
jmp
jle
cmc
or
cmp
inc
cwtl
xchg
pop
mov
leave
push
mull
scas
sbb
mov
pop
lds
pop
xchg
mov
daa
test
data16
sub
fisubs
insb
dec
imul
sbb
inc
daa
stos
pop
mov
fisubl
sbb
xlat
test
jg
fstpl
sbb
pop
cmp
insb
hlt
pop
mov
push
loopne
imul
mov
out
and
loopne
bound
sbb
cwtl
pop
lods
test
cmp
cmpsb
inc
daa
lods
inc
repz
scas
inc
jno
xchg
in
in
stc
push
rcll
je
daa
popa
test
push
outsl
loopne
not
mov
neg
bound
lea
mov
aaa
or
dec
rolb
call
jno
sbb
icebp
mov
lds
cmc
sar
mov
movsl
or
fnstsw
ficoms
sahf
pop
mov
daa
push
cmpsb
mov
jne
aaa
xchg
insl
and
push
xor
cmpsb
in
push
fmuls
add
lods
insl
and
sarl
fs
mov
mov
pop
daa
into
pop
ds
ja
or
push
jge
popf
gs
rolb
xor
jecxz
and
hlt
mov
xor
aaa
aas
mov
sub
mov
push
mov
pop
repnz
scas
pop
mov
loopne
push
xor
aad
stos
pop
in
pop
or
push
jb
pop
adc
adc
push
aad
mov
scas
fldcw
inc
dec
jl
xor
add
insb
enter
push
iret
jecxz
jo
push
in
cmp
fs
sbb
mov
fs
sub
test
shll
dec
popf
mov
cmpsb
or
cmc
xchg
js
cmpsb
in
lret
mov
adc
xchg
jb
inc
push
scas
or
push
repnz
cmp
es
shlb
sub
adc
dec
inc
inc
jle
lret
pop
dec
sub
int
iret
sbb
mov
sub
and
iret
mov
in
sub
movb
pop
cltd
nop
mov
and
jp
out
sub
out
push
lea
dec
cmp
push
mov
lea
lahf
test
mov
std
into
dec
jecxz
cltd
negl
inc
lods
add
inc
pop
cmp
daa
imul
or
mov
xchg
sbb
mov
gs
push
jae
mov
xorb
xchg
jbe
jle
jns
test
dec
icebp
hlt
les
cmpb
fbstp
in
jl
ss
mov
ss
xor
xchg
jg
inc
out
push
daa
cs
mov
call
movsl
cli
xor
cltd
inc
xchg
jmp
mov
rcrl
jnp
xchg
outsb
mov
and
shrb
pop
mov
xchg
imul
pop
mov
imul
mov
movsl
push
push
adc
add
loop
cmc
popf
loopne
mov
testb
lret
dec
je
or
xor
cmc
cmp
xor
xchg
push
dec
adc
dec
cmc
push
call
and
test
movsl
dec
lds
adc
mov
addr16
movsl
cld
lods
je
lds
imul
outsb
push
dec
pusha
hlt
fcmovnbe
cmp
dec
cmp
xlat
mov
mov
pop
out
add
add
xchg
mov
aam
jno
mov
ds
imul
addr16
cs
out
lcall
fimuls
mov
pop
sub
mov
loopne
jp
outsl
xor
mov
sbb
jge
imul
pusha
fs
push
sbb
dec
aam
push
pop
mov
mov
cmp
enter
mov
int3
icebp
sbb
and
mov
out
push
push
mov
es
xchg
in
ja
shr
or
fs
rcrl
test
push
daa
movsl
inc
mov
insl
insl
mov
sub
and
out
ret
jbe
and
cli
xor
adc
push
fisttpll
pop
inc
xor
xchg
add
aad
push
test
dec
popa
loop
popa
sub
dec
and
push
xchg
mov
cmp
in
mov
imul
inc
in
xchg
fs
lock
dec
xchg
ja
loope
dec
and
loopne
call
jmp
jne
aam
adc
mov
rcll
adc
stos
and
rcrb
in
sub
inc
cli
mov
clc
int
in
mov
xchg
arpl
int
mov
adcb
arpl
cmp
adc
lahf
popf
mov
sbb
jmp
loope
shrb
fmull
popf
cs
in
daa
xor
mov
sub
pop
pop
inc
sbb
adc
jmp
jp
or
pop
pop
mov
pop
jb
outsl
pop
popf
mov
ret
loope
mov
xchg
xchg
es
mov
adc
fdivrs
jg
fsubs
ret
push
enter
sbbl
das
mov
sub
imul
icebp
mov
out
xor
frstor
cmc
lods
sbb
cmp
mov
cltd
push
adc
sub
push
jmp
xor
lods
stc
loop
aas
out
int
fs
orb
in
sub
cmc
jp
insb
pop
daa
cmp
xor
push
popf
inc
inc
outsb
loop
jnp
push
add
sub
pop
lea
pop
push
inc
add
inc
outsl
out
push
mov
push
loope
pop
call
fistl
sub
push
outsl
shl
dec
inc
push
adc
ja
mov
daa
xor
cwtl
test
and
mov
daa
xor
cli
daa
lahf
insb
lea
ss
sub
xchg
arpl
xchg
call
mov
outsl
adcl
ds
mov
out
test
dec
mov
out
mov
or
jns
inc
xchg
loop
mov
pop
ficomps
lret
xor
andl
dec
sbb
xchg
or
inc
xchg
mov
ret
push
push
mov
nop
mov
sub
pop
mov
inc
push
pop
adc
inc
pop
fldenv
repz
and
inc
mov
or
fsubrl
jl
mov
movsb
shlb
loop
xchg
in
pop
jne
xchg
gs
call
fcomps
lods
jle
sbb
mov
sbb
scas
inc
jno
imul
test
loope
push
xor
add
cmpsl
mov
sub
dec
outsl
test
jl
sahf
insl
push
add
addb
push
mov
dec
fcomi
sbb
fwait
rcrl
mov
and
mov
sti
push
mov
cmpsb
addr16
jmp
sbb
dec
mov
dec
jae
pop
mov
push
xchg
fnstenv
repnz
mov
shll
add
xchg
xor
aaa
aam
sub
xchg
dec
dec
daa
pop
cs
shlb
sub
dec
xchg
xor
out
in
or
inc
xchg
adc
inc
cmc
mov
mov
daa
imul
loop
aad
sbb
outsb
loop
mov
adc
sahf
and
push
hlt
imul
push
sub
ret
icebp
push
and
or
aad
pop
std
mov
gs
pop
arpl
jmp
pop
jge
lods
cli
sub
xchg
mov
dec
insl
pop
data16
jle
sbb
mov
bound
mov
hlt
ja
decb
cmp
inc
lahf
lods
fsubr
add
push
arpl
dec
jnp
sub
iret
gs
imul
and
sbb
outsb
cltd
insl
jmp
pop
add
movsl
test
jne
test
xlat
fsubrs
xchg
or
xchg
loope
add
lahf
fcomps
pop
push
push
arpl
popa
pop
xchg
jb
insl
ret
push
dec
rcll
jo
movsl
push
inc
loop
sbb
adc
jns
inc
push
lods
stos
add
je
clc
sbb
rcr
loope
fs
fyl2x
stos
dec
in
cmp
jge
push
rcrl
xchg
cmp
cmp
outsb
xchg
scas
dec
lock
mov
pop
jmp
loopne
dec
fwait
cmp
adc
imul
loope
test
test
notb
cltd
mov
cmp
jmp
outsb
dec
jl
dec
pushw
pop
pop
or
push
adc
jno
cmp
push
in
jecxz
rcr
pop
mov
jle
mov
fisubrs
movsb
mov
ja
dec
aad
cli
xchg
into
outsb
mov
aam
and
in
push
mov
test
inc
push
clc
imul
add
mov
push
daa
fistpl
mov
xchg
pop
jle
sahf
push
lock
imul
pusha
outsb
jb
adc
dec
or
in
mov
cs
repnz
movsl
push
inc
xchg
les
scas
jl
mov
pop
shll
jge
in
cs
addb
in
push
xchg
loope
cmp
aaa
fnstenv
shl
popf
aad
gs
xchg
addr16
test
add
xor
dec
push
int
pop
and
imul
test
pop
rcll
fimuls
aad
jno
jae
inc
mov
pop
cltd
int
in
cmp
fnsave
xor
mov
pusha
fucomi
popa
adc
dec
pop
dec
in
push
push
pop
inc
push
sub
cltd
inc
outsb
iret
popa
test
sub
fwait
clc
xor
popa
ljmp
push
ljmp
lea
outsl
xor
adc
push
loope
xor
mov
popa
adc
dec
jg
jl
dec
in
fsubrs
xchg
sub
adc
movsb
loopne
call
imul
ja
fadd
dec
mov
fs
push
and
xchg
adc
in
sbb
stc
pop
scas
cmpsl
mov
cli
mov
lds
in
push
xchg
sbb
and
clc
ja
push
test
push
insl
xor
add
out
mov
fisubrs
ja
and
or
xor
fistpll
xchg
sbb
push
jmp
adc
add
mov
dec
lahf
je
pop
push
enter
dec
lcall
dec
xor
inc
push
xor
xor
lahf
das
jmp
movsl
sub
inc
nop
shlb
js
jmp
mov
xchg
xor
lds
movsl
push
popf
xchg
pushf
mov
sub
inc
ss
xor
sbb
and
pop
or
daa
adc
cmpsb
mov
xchg
jmp
jno
cmp
or
mov
mov
and
aad
push
adc
mov
mov
ja
mov
pop
push
mov
and
popa
stos
clc
mov
lret
mov
ret
add
loope
add
dec
rcl
shr
sbb
call
mov
inc
roll
dec
loop
das
mov
sbb
mov
fisubrs
insb
icebp
pop
inc
or
xor
in
xor
push
loope
mov
mov
subb
sub
pop
aaa
mov
sub
push
in
mov
push
cmpsl
push
es
ja
xor
daa
repnz
dec
in
push
cwtl
push
lds
xchg
loope
loope
pop
loopne
inc
cli
leave
and
sbb
cs
push
fadds
out
sbb
sub
js
clc
jp
dec
mov
imul
movsb
into
daa
jmp
adc
fs
sbb
in
add
mov
jno
xor
insl
cmp
cld
popf
xor
and
cmc
jp
mov
loop
ds
push
popf
out
mov
xor
cmc
pop
xlat
push
sub
xchg
mov
mov
sub
jo
push
loopne
pop
aas
sbb
cwtl
inc
xchg
and
movsl
inc
adc
sbb
mov
xchg
aad
pop
ss
ja
jg
cltd
xor
jae
int
push
pop
lock
jmp
mov
xor
push
cmp
cmp
jp
xor
ret
lods
insb
and
add
jle
jp
test
popa
push
mov
jle
in
adc
aas
lds
mov
mov
pop
push
mov
bnd
adc
lock
int3
pop
pop
dec
and
inc
adc
dec
clc
or
xchg
pcmpeqb
in
sbb
movsl
xor
loope
sahf
stos
arpl
xchg
jl
ds
rep
pop
and
imul
inc
in
mov
push
jmp
insb
sbb
shll
ja
loop
in
lret
gs
adc
push
and
pop
push
add
xchg
les
cmp
adc
jle
mov
out
jmp
call
mov
imul
mov
push
mov
jecxz
or
mov
loopne
adc
add
lds
xchg
icebp
xor
add
inc
insl
loope
rcl
pop
xlat
push
call
and
sub
dec
scas
into
cmp
js
lds
pushf
lret
lds
icebp
hlt
sub
sub
jno
xlat
mov
test
adc
push
jns
lods
jmp
hlt
lods
xchg
lods
or
inc
push
sbb
cmc
xor
sahf
pop
or
mov
pop
mull
aad
aam
sbb
inc
std
test
clc
cmc
cmpsl
adc
mov
jb
push
push
pop
shll
cmp
pop
aad
mov
jmp
test
pop
aaa
dec
add
mov
xor
ja
adc
xor
lds
sbb
sub
inc
pop
mov
cli
fcomps
jle
aam
addl
mov
cs
push
sub
and
int3
jg
mov
fisubs
icebp
push
mov
pop
dec
movsl
push
mov
adc
cmpsl
mov
mov
gs
mov
inc
mov
int
sub
or
pop
cmp
aaa
adc
mov
lahf
hlt
test
icebp
and
shlb
inc
and
add
mov
cli
xor
sbb
and
test
pop
mov
scas
adc
and
inc
loope
aam
shl
popf
dec
pop
test
jmp
fs
addr16
pusha
jmp
dec
mov
dec
fstl
pop
movsl
mov
cmp
add
mov
out
xor
push
repz
into
cmpsl
push
cmp
dec
xor
pop
divb
ljmp
push
mov
cmp
pop
dec
jecxz
js
mov
imul
mov
inc
lcall
push
sub
mov
shrl
cwtl
jne
inc
cmp
jmp
ret
pusha
hlt
popa
fcompl
andl
xchg
xor
mov
call
mov
fldcw
clc
rcr
cmc
dec
rorb
test
mov
push
jecxz
push
data16
jbe,pn
je
repz
mov
mov
imul
jp
or
or
push
js
nop
or
sub
fs
push
imul
jnp
mov
jns
movsl
push
lods
mov
xchg
jg
int
jl
shrl
imul
dec
and
fldenv
fcoml
jle
popl
cmp
iret
repnz
xchg
mov
nop
cmpsb
add
outsb
shll
test
dec
in
mov
outsl
dec
ds
and
sub
pop
jmp
push
mov
neg
fdivrl
push
mov
or
mov
ror
loop
dec
mov
mov
ror
test
roll
push
dec
jle
insb
popf
in
mov
add
add
inc
movsl
dec
or
fdivrl
xchg
mov
rorb
jne
push
jb
lea
xor
mov
add
inc
mov
inc
inc
xlat
push
lock
stos
adc
leave
jb
mov
ror
insl
aam
mov
test
mov
ss
ljmp
inc
sbb
dec
ja
mov
sbb
test
out
js
push
sub
addb
pop
push
or
xor
ret
icebp
fisttpl
shlb
jo
repz
sub
andb
outsb
test
cmp
xchg
cmp
adc
fdivl
or
loopne
jle
cmp
mov
mov
pop
pop
dec
out
es
inc
scas
sti
mov
cmpsl
xchg
and
pop
enter
sub
jb
xchg
sbb
sbb
xchg
pop
jmp
add
and
push
imul
push
stos
inc
push
pop
test
aaa
lods
lods
cmp
daa
cmp
jecxz
lock
cmpsb
jg
enter
in
stc
jp
loope
test
bound
test
sub
stos
xlat
aad
arpl
int
loopne
adc
rorb
xor
and
add
les
mov
jae
les
adc
fs
xchg
lock
and
imul
cmpl
call
loope
roll
icebp
push
fimull
movsl
cs
jb
loop
in
ljmp
test
push
popa
mov
inc
or
fisubl
and
dec
roll
cltd
scas
mov
popf
pop
ficomps
gs
push
out
out
pop
jae
inc
push
jl
push
sbb
lea
movhps
outsb
mov
mov
lret
or
mov
or
push
and
mov
das
shl
pop
and
cmpsb
adc
cmpsl
call
shlb
push
adc
xchg
fwait
insb
movsl
arpl
inc
loop
imul
pushf
fisttps
lds
push
and
pop
int
dec
pop
sub
sub
sahf
push
cld
xor
push
daa
popa
movl
dec
xchg
or
imul
popa
loope
icebp
scas
mov
dec
inc
fmuls
xorb
js
xchg
sub
mov
jae
jne
xchg
cmp
mov
fistl
sub
push
es
push
data16
mov
pop
dec
call
outsb
cld
cmp
add
mov
mov
jecxz
fcmove
mov
mov
insl
xor
js
in
xlat
add
popa
repnz
mov
xchg
popf
shlb
nop
pop
es
adc
xor
inc
stos
hlt
imul
stos
push
mov
sub
adc
repnz
aas
mov
sub
jg
mulb
pop
or
sub
imul
pop
lock
jg
cltd
imul
xor
lcall
rcrb
push
xlat
push
loop
sub
mov
loope
dec
jmp
gs
imul
xchg
pop
mov
xor
inc
jns
les
mov
cmp
call
insl
hlt
xchg
push
adc
cmp
leave
sbb
push
and
not
aaa
mov
cmc
push
and
nop
xlat
xlat
daa
xor
insl
aam
scas
adcl
mov
mov
push
add
xchg
xchg
dec
pop
addr16
lods
mov
notb
mov
cwtd
inc
push
movsl
mov
lahf
add
dec
fimull
push
sbb
insl
jns
xor
sub
stos
shll
or
les
add
decb
xchg
and
jo
mov
xchg
cmp
push
js
test
inc
jp
adc
inc
enter
in
test
insb
pop
mov
xor
sub
mov
push
or
push
xchg
xor
and
pop
jmp
jno
sub
pushf
push
dec
and
in
add
addr16
sahf
data16
dec
jmp
pop
inc
xor
gs
push
in
pop
and
movl
sbb
inc
jbe
cmp
inc
adc
add
in
mov
popf
dec
cmp
test
in
fstpt
nop
mov
pop
sahf
push
stos
enter
push
mov
aam
mov
aaa
or
out
inc
outsl
push
fsubp
addl
stos
pop
adc
dec
mov
jnp
fstpt
enter
xchg
out
outsl
packuswb
jp
mov
inc
push
jge
in
cli
xorb
sub
fisubrl
das
add
mov
mov
lods
pushf
pop
pop
push
sub
bound
daa
les
xorb
or
lods
dec
inc
cmp
lods
push
xchg
ss
aam
xchg
jp
push
sub
pop
test
hlt
jae
bound
leave
aam
xor
mov
cmp
mov
cmpsl
insl
popf
sub
lret
inc
pop
aam
out
rclb
in
pop
and
dec
jge
sbb
imul
xchg
jp
in
out
xor
mov
daa
int
jmp
fiadds
leave
push
jmp
je
mov
daa
mov
cwtl
movsb
xor
sub
jne
insl
and
cli
jmp
adc
lahf
lcall
in
mov
mov
xchg
lret
lret
adc
fwait
sub
fs
mov
inc
jmp
dec
rolb
cmp
in
sub
fisttps
in
cs
ljmp
repnz
pop
sbb
xchg
inc
cmp
jle
scas
pop
and
lods
sbb
iret
add
mov
mov
pusha
int
lret
fcoms
and
mov
lcall
outsl
addr16
adc
mov
in
hlt
icebp
xlat
sbb
das
aam
movsl
lods
fidivs
in
sbb
jb
cmpsl
pop
cwtl
and
fcmovnbe
mov
mov
mov
cmc
icebp
mov
mov
rorl
dec
popf
mov
repz
test
int
and
push
out
dec
cs
shll
loope
pop
shlb
push
popa
xchg
pop
in
insb
cmpsl
mov
ret
mov
mov
xchg
ret
xchg
inc
sbbl
mov
inc
dec
cmpsb
pop
adc
repz
stos
in
popf
sub
aad
enter
or
pop
repz
test
fidivrl
mov
ret
fisubs
mov
push
push
jno
adc
negl
sub
das
fistl
xchg
insl
je
push
bound
push
push
mov
pop
dec
into
sub
data16
mov
xchg
dec
aaa
mov
lds
cmp
or
movhps
push
aam
mov
mov
push
js
cmp
jo
popa
push
movsl
sub
jmp
cmp
cmp
lret
das
aad
aad
test
inc
push
call
loop
add
jmp
mov
lahf
int3
lea
mov
and
mov
push
mov
xchg
push
xor
dec
jb
test
gs
add
jle
daa
imul
lods
mov
test
bound
jg
scas
sub
push
push
daa
xchg
push
inc
mov
mov
int
sbb
sbb
add
cmp
subb
dec
push
dec
fsubs
xor
imul
scas
fimuls
adc
call
pop
mov
mov
jg
mov
test
ret
rorl
inc
cli
call
mov
adc
in
add
cli
mov
dec
dec
lret
xchg
mov
xchg
and
sub
popa
adc
sub
inc
sub
push
push
and
pop
imul
roll
mov
movsb
outsl
clc
pop
das
rolb
leave
icebp
fists
sub
cmpb
jbe
xchg
and
pusha
push
fcom
ret
mov
sub
popf
xlat
clc
push
mov
imul
fs
xchg
pop
sub
movsl
enter
int
movsb
outsl
push
std
xchg
jp
push
xchg
jle
sbb
xor
test
cmpsb
jmp
fisttpll
dec
scas
pop
mulb
and
fwait
mov
sbb
mov
es
insl
and
cwtl
dec
decl
lods
stos
imul
pop
cld
imul
mov
push
imul
test
and
xor
orb
movsl
push
mov
sub
lock
sub
sub
jns
push
xor
and
movsl
daa
or
cmpsb
inc
jmp
ret
rcr
pop
stc
mov
push
mov
jnp
dec
std
lcall
sbb
in
lods
mov
fsubrs
aas
stc
sub
imul
outsl
ds
ja
adc
mov
pop
jmp
dec
and
stos
in
enter
in
das
iret
in
insb
inc
dec
repnz
mov
cmp
pusha
mov
or
mov
pusha
xchg
gs
sti
mov
pop
cs
mov
push
push
add
cwtl
lods
lcall
push
sub
repnz
fucom
jno
daa
mov
pusha
sbb
in
movsl
push
imul
xor
ret
movsl
mov
mov
notb
mov
insb
push
push
sub
stos
mov
aad
xchg
shll
cwtl
js
lret
les
adc
inc
fdivrl
dec
mov
gs
lds
sub
enter
cmp
ss
aam
mov
cmp
outsb
cmpsl
xor
out
mov
sub
mov
cmp
dec
loop
mov
jmp
pop
gs
fsubr
movsl
mov
jl
and
adc
outsb
pop
push
movsl
xchg
jmp
lea
sbb
outsb
push
xor
mov
shl
loop
cs
sub
fcoms
mov
shl
jne
sbb
insl
inc
and
inc
dec
fsubr
in
imul
aad
movsl
mov
xor
imul
aad
mov
cmpsl
hlt
test
cs
adc
hlt
mov
dec
ret
push
adc
in
jle
mov
pop
add
dec
call
mov
movsl
and
xorl
xlat
insl
sub
adc
sub
push
sub
ret
mov
movsl
call
in
xor
jl
cmc
push
movsb
adc
test
sti
adc
outsb
shlw
jmp
inc
icebp
mov
int
insl
lds
mov
movsb
adc
aaa
sbb
loope
jp
loopne
in
mov
nop
xchg
dec
insl
inc
mov
in
fs
divb
int
mov
ds
or
pop
ret
cmpb
sub
dec
add
fnstenv
or
insl
mov
or
adc
pop
add
xchg
sbbl
gs
popa
sub
int
pop
cmc
or
jnp
aad
or
inc
insl
pop
sti
xor
sub
loope
xchg
test
push
pop
outsb
adc
scas
rcrb
dec
and
and
pop
jmp
and
dec
add
addr16
inc
ret
pop
sbb
pop
cltd
sysexit
fstp
imul
rolb
pop
in
mov
addr16
cwtl
jnp
add
push
mov
rcr
in
cmp
insl
insl
cs
daa
std
jnp
cmp
test
jae
xor
or
mov
and
lcall
arpl
push
in
hlt
sub
pop
imul
push
pop
stos
test
pop
imul
dec
imul
jecxz
mov
mov
and
cmpb
das
enter
push
and
out
inc
imul
sbb
xchg
and
mov
dec
xchg
mov
je
mov
lods
inc
push
imul
popa
xor
pushf
mov
bnd
xchg
fstl
daa
push
add
cmp
inc
scas
pop
mov
push
mov
or
pop
cmp
js
stos
add
ljmp
dec
stos
incb
shlb
xchg
adc
mov
mov
fs
xchg
jno
mov
xor
add
lods
mov
js
sub
popa
std
push
fbld
push
push
xor
mov
aam
jg
and
jne
mov
push
cmp
inc
fdivrs
in
lds
in
add
es
and
das
std
or
jbe
je
mov
mov
scas
scas
or
mov
clc
xlat
int
out
lods
les
adc
pop
mov
lret
pop
sbb
insb
mov
dec
ja
mov
mov
fdivr
js
pop
insb
imul
or
outsl
gs
add
shll
movsb
pop
test
cmc
ljmp
mov
mov
outsl
cli
icebp
dec
xchg
shrb
inc
rcr
ficomps
jle
mov
mov
xchg
mov
shlb
jg
rolb
mov
stos
roll
push
sub
push
dec
fisubrl
mov
out
push
adc
das
dec
pop
xor
xchg
shll
std
mov
mov
add
je
mov
insb
push
jo
test
jae
jecxz
push
add
sub
out
pop
insl
icebp
and
ja
insb
lret
mov
xor
ljmp
inc
jle
stos
rcrl
cli
pusha
aas
dec
data16
mov
add
mov
cmp
imul
inc
cmp
ss
icebp
enter
popf
or
je
fldt
cmp
ja
push
sbb
lret
xchg
gs
push
in
lds
jns
jle
pop
xchg
jmp
push
mov
das
out
mov
adc
pop
cmc
inc
in
sub
lds
xor
movsl
push
pop
push
cmpsb
adc
mov
inc
jb
push
loope
inc
add
pop
sub
xor
pop
cmp
push
mov
inc
sbb
out
xor
scas
lret
pop
jle
mov
cltd
out
insb
in
sbb
psrad
loope
jnp
int3
push
add
mov
addr16
fcoml
std
test
repz
mov
xor
push
and
mov
mov
xor
xchg
popa
push
in
mov
stos
ljmp
lret
dec
shll
dec
jl
cli
mov
bound
lods
into
mov
xchg
stos
add
mov
jle
mov
iret
dec
mov
outsb
in
shr
gs
aaa
pop
pop
mov
js
jae
pop
push
je
js
cmp
adc
test
addr16
arpl
mov
movsl
xchg
and
mov
mov
xor
xchg
jae
jae
mov
std
jp
fdivrl
mov
int
daa
dec
mov
add
push
push
sbb
gs
add
push
jns
cmp
add
adc
dec
sbb
dec
pop
in
cs
sub
iret
sub
adc
fs
or
add
push
lret
clc
dec
inc
push
in
xor
ret
repnz
shll
mov
push
xchg
xchg
in
dec
pop
inc
or
push
mov
sub
and
out
test
xchg
push
sub
daa
popf
add
orb
lods
lock
insl
or
sub
xor
andl
rcl
fcom
pop
xchg
push
and
out
std
idivb
ja
jb
ret
mov
jbe
jmp
ljmp
aad
shl
xlat
fldt
mov
gs
sarl
inc
stos
test
std
in
push
inc
data16
movsl
or
enter
and
mov
out
cmp
sub
inc
adc
mov
enter
pop
cmp
in
neg
mov
jb
dec
fisttpl
adc
push
dec
mov
pop
fidivs
movsl
jbe
mov
push
sahf
and
push
jo
addr16
mov
push
outsb
sub
mov
mov
and
test
push
in
and
pop
push
or
call
gs
test
push
frstor
call
cmpsl
loope
enter
xlat
lock
sub
insb
push
cmc
cmp
push
call
aad
cmp
xor
push
adc
xchg
cs
scas
dec
sub
mov
sbb
daa
out
inc
xchg
push
imul
call
push
sub
icebp
fidivs
in
jno
gs
and
xlat
shll
scas
or
mov
addr16
mov
arpl
int3
push
pop
and
je
sti
inc
dec
adc
loope
mov
cmp
insl
mov
lea
dec
pextrw
add
xor
push
pop
shll
and
cs
or
sub
and
imul
pushf
imul
dec
scas
sbb
mov
dec
lds
adc
xchg
dec
mov
xor
das
test
and
mov
mov
dec
insb
cld
sbb
in
mov
in
inc
xorb
sbb
in
nop
and
fs
fmul
hlt
loope
lea
sub
cmpsb
dec
inc
push
jl
icebp
or
inc
pop
sbb
in
sbb
inc
aad
mov
adc
sbb
fbld
insl
xchg
lods
imul
fisubrs
push
mov
jo
cmp
fsubrs
or
xor
sub
jg
xor
lahf
into
and
xchg
iret
lea
addr16
ret
sub
inc
mov
stos
lea
and
lock
repnz
popa
or
inc
in
out
loopnew
adc
icebp
push
cwtl
jno
lea
ss
sti
dec
add
mov
xchg
cmpsl
or
inc
cmp
xchg
sub
push
stos
pop
push
test
xchg
call
xchg
popa
scas
call
aaa
push
out
lock
cmpl
lds
test
lock
and
gs
pop
jmp
add
call
imul
add
inc
pop
jbe
xchg
cmpsb
and
scas
or
cmp
lds
add
push
mov
adc
xchg
mov
mov
sub
leave
cwtl
xchg
hlt
add
xchg
sub
pop
je
pusha
add
fisubrl
cmp
pop
enter
or
dec
sub
leave
je
or
adc
iret
dec
in
sbb
mov
loope
aaa
ficompl
push
int
sub
sbb
test
sahf
fsub
out
inc
sub
sbb
sbb
je
fisubrl
mov
add
cmpsl
imul
mov
and
or
cmp
es
push
sbb
stos
sbb
inc
repz
test
push
add
cmp
insl
jns
add
arpl
fidivrs
scas
cmpsb
ficoms
imul
rep
stos
sti
in
cmpsb
fcoms
data16
push
xor
es
lock
xchg
fistpll
inc
ret
mov
aaa
jecxz
sub
inc
adc
push
movsl
xchg
hlt
push
scas
push
ret
inc
sti
fdivrs
jp
mov
cmp
pop
jle
sbb
sbbl
and
in
pop
cs
fwait
enter
jp
cmp
xchg
sub
jne
ja
sub
jno
jnp
test
mov
sub
cmp
mov
mov
pop
sub
enter
mov
dec
inc
jbe
mov
ret
movsl
add
push
and
pop
loope
test
imul
rol
adc
sbb
ret
int
loop
pop
and
lods
jmp
mov
mov
jmp
lods
add
fbstp
xchg
test
test
sub
repnz
in
adc
xor
pushf
mov
or
cwtl
hlt
adc
cs
cmp
push
roll
imul
ficoms
push
mov
imul
add
call
fiadds
fprem
in
aaa
orb
cmc
push
test
fs
cmp
or
mov
jns
hlt
cmpsb
jbe
sub
sahf
mov
insb
popf
and
insb
mov
je
jge
dec
lahf
mov
rcll
cwtl
inc
test
and
mov
cld
cmp
push
in
jmp
subb
out
xor
mov
mov
push
push
jecxz
mov
loope
pop
adc
mov
repz
add
cs
add
fsubl
add
lcall
pusha
loop
and
fidivrl
pop
iret
or
aaa
mov
jne
xor
out
es
and
xor
mov
add
ja
push
rcrb
xor
je
adc
hlt
lock
loopne
je
dec
leave
hlt
in
std
popf
inc
add
cmp
push
add
sub
inc
insb
rcrl
mov
mov
lds
ja
mov
push
adc
push
fidivrl
jp
dec
dec
mov
jmp
mov
mov
fstpt
cli
repnz
stc
test
mov
loope
jne
inc
cmp
jge
mov
js
movsb
xor
xchg
inc
cmpsb
shr
xchg
subb
add
sbb
nop
fsts
jne
xchg
insl
cmpsb
shl
pop
and
jbe
add
call
jns
scas
jns
sti
movsl
sbb
pop
ret
pop
movsl
push
lods
or
stos
adc
and
inc
sub
or
imul
in
fwait
xchg
into
sub
push
shll
and
repnz
dec
sbb
or
test
jp
cmp
push
add
add
movb
push
fldt
cwtl
shl
aaa
stc
inc
sbbl
test
jecxz
insl
dec
fiaddl
ss
bound
pop
ds
daa
lret
jge
pop
ja
sbb
nop
mov
dec
push
test
repz
loop
pop
push
or
dec
push
and
out
push
jle
add
sti
mov
out
mov
dec
out
int
ret
cmp
popa
inc
insl
sub
push
hlt
dec
loope
or
mov
xchg
cmp
lods
and
add
leave
imul
mov
mov
mov
aad
pop
imul
rolb
sub
pop
or
jmp
adc
imul
loopw
scas
xor
jns
add
adc
dec
aad
sbb
icebp
outsl
add
adc
and
jle
loope
call
pop
inc
xor
lods
popf
sub
jns
fsubrs
lds
movsl
push
adc
cmc
jns
es
icebp
outsl
jnp
mov
test
or
cmp
dec
add
int
cmpsl
pop
lcall
imul
test
ds
in
dec
push
push
adc
gs
dec
push
adc
lret
ja
or
push
bound
repz
xlat
scas
adc
mov
jl
and
or
test
stos
and
imul
inc
lret
out
add
imul
adc
addl
pop
adc
xchg
and
pusha
mov
mov
neg
cmpsb
mov
ret
loopne
xchg
mov
adc
push
cmc
ret
mov
ljmp
sti
dec
lahf
xchg
pop
mov
mov
movsl
fistpll
jne
sub
push
loopne
out
call
fs
lock
push
scas
jbe
movsb
mov
xchg
fcoml
mov
std
or
ret
inc
sahf
popa
sub
or
ss
mov
fcmovnbe
imul
int
cwtl
lcall
inc
sub
inc
loopne
subb
insl
clc
mov
dec
sub
pop
inc
shr
neg
nop
imul
jecxz
xchg
xor
mov
mov
jb
mov
mov
lock
out
sub
dec
movsb
jns
inc
xor
nop
push
bound
hlt
outsl
inc
fstpl
push
outsl
adc
out
pop
in
xor
out
mov
mov
fisttps
xchg
jecxz
jne
mov
test
rcrb
notb
leave
sets
test
sbb
in
and
dec
mov
mov
stc
daa
test
hlt
inc
jbe
jbe
or
out
icebp
mov
dec
pop
into
and
int
out
mov
dec
outsb
xchg
mov
dec
mov
loop
push
imul
das
xchg
jl
adc
rolb
test
fsubr
mov
rcll
pop
inc
adc
adc
icebp
mov
fadds
inc
jl
popa
xorl
cmp
jno
cmp
dec
mov
push
sbb
repnz
inc
fisubrs
cmc
xlat
mov
mov
push
xchg
cs
push
ss
mov
sub
fdivr
incb
in
cmc
sub
mov
mov
ret
gs
xchg
es
sub
fstl
outsb
add
mov
fimuls
cmp
push
and
shl
mov
jl
rcll
inc
xor
andl
cmc
scas
imul
popf
jae
and
leave
lahf
dec
xchg
scas
shll
sbb
cmpsb
mov
adc
cs
out
out
mov
sub
fidivl
aam
push
push
rcr
imul
mov
out
sub
mov
lret
cmp
sbb
int
and
insl
shll
jne
xchg
subl
pusha
out
aaa
cmp
out
add
mov
movsw
mov
mov
mov
jne
cmp
int3
mov
mov
dec
daa
pop
imul
dec
mov
and
xor
popf
cmp
inc
mov
cmp
out
sbb
adc
js
push
mov
sub
mov
pop
xchg
clc
dec
lds
pop
fnstenv
bt
dec
xchg
jge
mov
sub
lock
pop
push
out
add
repnz
xchg
push
sub
xchg
ret
aaa
dec
mov
les
aas
dec
ret
jnp
mov
mov
loopne
cmp
dec
fisttpl
js
mov
ret
or
jge
aaa
mov
ds
jle
dec
xor
or
xchg
mov
inc
sbb
insl
test
bswap
inc
jle
inc
popa
pop
sahf
xchg
dec
mov
pop
add
es
mov
lds
pop
fs
mov
mov
mov
mov
cmp
sub
or
or
xchg
cld
lock
xor
mov
aas
push
imul
xor
cltd
sbb
adc
int
mov
fs
sarl
mov
out
or
pop
mov
inc
fidivrl
nop
repz
rol
fimull
xor
dec
xor
aas
fsubr
jne
mov
fstps
inc
mov
and
inc
sub
fcompl
icebp
jp
or
and
mov
addr16
or
inc
push
insl
in
inc
inc
js
mov
mov
popa
fsubrs
adc
dec
xchg
pop
mov
imul
jbe
repnz
addr16
ljmp
push
loop
jae
push
dec
push
cmpsb
add
push
jnp
les
pop
outsl
outsb
sub
xchg
inc
mov
jle
in
js
repz
mov
leave
and
imul
jmp
shll
xor
icebp
bound
notl
hlt
iret
addr16
pop
and
add
dec
data16
repnz
push
ss
test
pop
test
inc
xor
adc
push
daa
push
mov
mov
orb
pop
push
and
fndisi(8087
jnp
testb
out
xlat
jbe
pop
dec
fdivrl
mov
jecxz
es
cmpsb
xchg
lods
inc
addr16
pop
sahf
outsb
adc
adcb
addr16
out
mov
mov
xor
xchg
or
stos
pop
je
enter
mov
xchg
xor
mov
bound
mov
push
mov
and
mov
mov
lret
xchg
aaa
bound
popa
loopne
or
fistps
insl
roll
mov
lahf
pop
xchg
sub
push
xor
movsl
imul
test
pop
sbb
mov
rorl
push
and
loop
movsl
jle
add
in
sub
push
mov
inc
push
enter
dec
jnp
or
mov
inc
push
push
rol
pop
insb
ss
push
repnz
mov
jbe
add
adc
sbb
jl
or
sub
mov
mov
and
imul
cli
mov
adc
or
lea
dec
loop
pop
scas
adc
sub
ja
cmpsb
jmp
push
gs
in
mov
hlt
adc
cmc
daa
or
icebp
push
dec
jno
and
mov
testb
repnz
pop
push
mov
in
mov
imul
outsl
popa
dec
xchg
or
loope
pop
xor
mov
cmp
pop
fidivrs
mov
sbb
aas
mov
loopne
jae
aam
movsb
cwtl
mov
add
jmp
pop
jp
rdmsr
mov
in
and
dec
aam
add
mov
cmp
notb
pop
xor
adc
enter
nop
adc
xchg
cmp
mov
shll
sub
imul
inc
loopne
dec
repz
lock
negb
into
andb
in
insl
jbe
insb
ret
ror
lret
mov
loopne
scas
mov
jno
push
mov
sub
or
and
adc
daa
dec
inc
hlt
pop
stos
mov
imul
push
mov
xchg
pop
jne
and
sub
test
in
es
out
movsl
push
loop
sbb
call
dec
jmp
dec
repnz
clc
subb
sub
insb
xor
movsl
icebp
xchg
jbe
aaa
or
cmpsb
jmp
xlat
cld
mov
dec
idivb
or
xor
adcl
xor
add
je
out
mov
mov
adc
push
stos
jecxz
cmpsl
pushf
loopne
jp
pop
xchg
fcompl
dec
stos
test
inc
cmp
cmp
arpl
mov
sub
inc
imul
push
cld
addr16
ja
fidivl
xchg
sbb
lcall
pop
pop
sti
insl
ret
sahf
in
mov
push
pop
and
push
je
mov
cmpsl
out
pop
inc
mov
xchg
add
into
inc
fisubl
dec
clc
xor
sub
mul
fsts
es
adc
in
inc
popf
scas
push
inc
mov
loop
cmp
xchg
jne
cmp
aam
loop
cmp
jbe
dec
sbb
mov
sbb
test
pusha
repz
mov
fimuls
cmp
inc
cmp
push
mov
pop
rol
add
sbb
imul
and
dec
shlb
push
dec
jne,pt
pop
stos
lods
popa
mov
imul
stos
lahf
xor
cmp
fcomps
inc
cmp
int
stos
inc
mov
inc
ss
xor
sub
adc
push
mov
mov
pop
in
stos
insb
push
cmc
std
add
mov
jle
push
sub
push
jb
arpl
mov
jmp
inc
fs
inc
inc
repz
das
sub
push
add
jbe
in
inc
xchg
mov
or
cmp
or
xchg
cli
push
lahf
mov
pop
push
xor
repnz
test
mov
mov
sub
rcll
fwait
test
sahf
jnp
fists
mov
outsl
outsl
scas
movsb
rclb
aad
je
inc
jae
call
xor
pushf
mov
dec
and
inc
cmp
loopne
les
xor
or
ljmp
xor
xlat
mov
jp
sbb
sub
stos
dec
xor
cld
xor
mov
inc
jo
call
cwtl
in
pusha
addl
mov
fwait
xor
loopne
outsl
es
test
shll
inc
pop
rcrb
add
fdivs
or
mov
daa
mov
xor
aaa
or
mov
pop
add
mov
fdivr
icebp
jmp
jmp
call
popf
cmp
int
jbe
pop
mov
inc
mov
jns
jmp
adc
loop
int3
lret
mov
add
push
inc
and
dec
daa
call
pop
mov
gs
fldenv
mov
sub
data16
fsubs
sub
inc
aam
add
aam
gs
imul
sbb
insw
jns
movsl
cmpl
in
dec
scas
insb
dec
lods
movsl
add
sub
outsl
in
call
fidivs
sbb
xor
lret
imul
test
cmpb
scas
int
mov
push
fldenv
fs
in
xchg
push
xor
cmp
pop
out
rclb
cmc
jge
mul
add
mov
imul
push
gs
jmp
loopne
daa
cltd
push
mov
jbe
xor
mov
inc
mov
imul
cmc
cld
push
xor
mov
inc
sub
sub
jo
or
add
adc
sbb
decl
xorb
addr16
daa
fdivrl
scas
or
push
in
and
out
add
push
cwtl
mov
pop
pop
sub
addr16
cmc
and
aam
adc
mov
inc
in
lock
sub
push
decb
sub
lds
mov
cmp
push
adc
out
nop
movsl
hlt
mov
dec
popa
sub
sbb
pop
push
mov
lea
ret
xchg
inc
mov
or
sahf
sub
sub
xor
cwtl
add
dec
scas
cmpsl
jne,pn
mov
sbb
dec
in
daa
in
mov
xor
dec
in
xchg
jo
mov
mov
pop
pushf
in
jecxz
addr16
lock
xlat
mov
pop
cmp
mov
lcall
push
adc
mul
pusha
dec
lcall
fimuls
sub
outsb
nop
loope
lcall
or
icebp
test
pop
daa
dec
xchg
mov
enter
fwait
jl
add
setl
push
call
or
lret
jmp
sbb
xor
cmp
sbbl
pop
mov
xor
add
fldenv
xchg
mov
fsts
out
bnd
es
xor
outsl
sbb
sub
dec
jno
aad
adc
dec
push
jo
inc
jbe
xor
and
in
loop
mov
test
xchg
xchg
and
inc
adc
lods
lods
pop
js
inc
in
mov
scas
mov
dec
or
inc
sahf
xchg
out
pop
rol
pop
int3
push
adc
pusha
test
mov
mov
lret
scas
push
ficompl
adc
in
jne
sub
hlt
cmp
imul
add
icebp
in
dec
mov
cmc
jp
lds
pop
xor
adc
daa
movsl
xor
jns
fmul
fimuls
ja
sub
dec
jae
je
cmp
stc
push
inc
add
add
mov
sub
pop
add
addr16
inc
inc
jbe
shrl
ljmp
in
sub
mov
sbb
or
bound
xor
cmc
js
ds
cmpsl
add
imul
jo
insb
out
stos
xchg
outsl
adc
adc
lcall
popf
and
stos
lea
xchg
leave
sbb
push
test
push
sbb
call
popf
and
mov
shll
inc
jmp
sub
cs
or
inc
jge
lock
movsb
lock
jo
bound
lock
dec
inc
ljmp
cwtl
mov
outsb
mov
push
insb
add
xor
imul
fs
stos
pop
cld
fisttpl
cmp
push
sbb
push
inc
movsb
xor
decb
sbb
js
sahf
inc
mov
movsl
jmp
mov
int3
pusha
xor
flds
clc
mov
cmp
inc
sub
add
lds
out
mov
adc
jo
mov
push
fwait
sub
out
movsl
push
and
mov
mov
mov
pusha
int3
sub
push
cmp
or
jne
jle
inc
mov
add
imul
aaa
outsb
inc
inc
pop
xor
jecxz
xchg
dec
cwtl
das
pop
push
cmp
shl
dec
mov
xor
sub
lods
movsl
leave
add
mov
xrelease
pop
stos
imul
adc
fdivl
popa
test
push
sbb
stos
cmp
push
scas
add
pop
fisubl
mov
adc
mov
testl
inc
daa
into
and
inc
test
adc
jno
daa
mov
mov
test
inc
in
in
in
sahf
push
push
mov
fsts
lds
daa
add
fnstsw
xlat
and
pop
pop
adc
imulw
push
je
test
push
fs
push
gs
sar
inc
mov
aaa
imul
inc
mov
inc
jmp
dec
popa
cmp
sub
sbb
mov
dec
pop
inc
int3
mov
mov
mov
in
mulb
test
mov
push
gs
jmp
lds
mov
push
lods
mull
imul
xchg
insl
loope
xor
push
movsb
and
mov
push
push
cmp
add
jae
mov
imulb
in
cs
inc
jbe
cwtl
loop
dec
cs
adc
shll
mov
outsl
mov
fnstenv
xchg
xor
out
cmpsl
bound
mov
push
inc
scas
hlt
mov
xchg
xchg
in
adc
out
inc
mov
in
test
imul
test
in
mov
fidivrl
push
mov
movsl
fwait
stos
xchg
stos
fisubl
adcl
lock
in
xor
jbe
shll
lret
adc
dec
sub
jp
sbb
rol
pop
daa
imul
js
xchg
sub
lret
inc
inc
fidivl
arpl
sahf
and
xor
pop
rcll
mov
jmp
cld
sub
mov
lret
pop
fisubl
in
test
call
lret
jo
xor
xor
push
ficoms
or
ret
aaa
or
mov
arpl
xchg
push
push
xlat
out
or
and
push
in
jnp
jle
jmp
test
out
pop
cmp
xor
in
dec
sub
in
test
fcomps
lea
gs
testb
out
sub
fldt
dec
dec
mov
rcrl
xchg
addr16
dec
es
cmp
pop
xchg
xor
scas
cltd
movsl
mov
inc
imul
scas
lds
mov
and
or
fadds
and
cmp
cmpl
inc
ljmp
call
jbe
mov
in
jne
flds
repnz
jmp
cs
pop
pop
mov
call
fucomip
cmp
inc
adc
js
mov
xchg
adc
aad
scas
into
dec
inc
arpl
add
flds
jb
dec
sub
pop
test
adc
daa
or
push
push
mov
in
pushf
dec
xor
pushf
in
jno
in
insl
inc
mov
call
fsubrs
fucomp
inc
imul
cs
outsl
enter
lret
pop
inc
leave
das
insl
test
iret
sub
pushf
mov
shlb
jne
sbb
add
xor
inc
jmp
data16
xchg
push
adc
dec
sahf
inc
mov
xor
push
hlt
loop
adc
mov
lea
and
pop
mov
mov
push
sbb
nop
and
mov
sahf
adc
and
js
push
dec
dec
and
xchg
xchg
mov
cwtl
addl
pusha
enter
pusha
push
xor
pusha
push
mov
push
lds
xchg
sub
mov
sahf
jp
in
mov
pop
scas
std
rcrl
cli
call
xchg
push
daa
push
mov
out
clc
cmpsb
popf
mov
inc
pop
aaa
stos
mov
in
cmp
subl
cmp
shr
adc
ljmp
fimuls
data16
cmp
lret
ret
sub
dec
hlt
adc
push
fisttpll
popf
fsubr
and
inc
sahf
or
sti
mov
dec
sahf
sub
lret
fadds
dec
das
sbbl
fucomip
fcomps
das
rcrl
lret
mov
adc
imul
test
imul
sub
sub
xor
inc
jo
push
loope
mov
test
add
adc
mov
xor
insl
repz
call
push
pop
hlt
sbb
lret
mov
mov
gs
fimuls
jbe
stos
cmp
jl
gs
jo
test
cmpsb
lea
fxch
jmp
xor
test
fisubrs
pop
dec
ret
push
insb
popf
out
inc
jbe
fimuls
addr16
sbbb
xorb
subb
xor
and
insb
popf
jno
test
ljmp
sub
add
sub
pop
push
ja
movsl
push
xchg
sub
outsl
push
loope
fimuls
push
dec
fcmovu
push
je
inc
arpl
sub
cmp
jbe
mov
sbb
cmp
pop
mov
mov
add
xchg
imul
and
lea
xor
pop
pop
mov
repnz
inc
or
xor
out
out
mov
insl
mov
or
divl
sub
ret
push
xor
xor
inc
add
out
mov
dec
push
mov
pop
add
lock
xchg
push
xor
pop
shrl
mov
and
push
lea
jo
roll
dec
add
aas
add
loop
dec
push
add
sahf
sub
in
enter
dec
jmp
sub
mov
cmp
dec
sahf
fiadds
in
gs
sub
push
out
leave
je
cli
push
jb
mov
inc
ljmp
leave
push
icebp
xchg
pop
adc
mov
adc
inc
pop
and
test
test
lahf
sub
push
call
add
add
in
mov
rclb
jmp
jecxz
jmp
gs
inc
ret
dec
jbe
shrb
mov
mov
inc
mov
das
pusha
mov
insl
loop
call
in
fxtract
movsb
faddp
dec
js
mov
cmc
xchg
inc
adc
jge
loop
xchg
push
sbb
mov
lods
popa
cmp
in
xchg
popl
mov
mov
ret
ret
outsb
push
rcll
faddl
call
xor
push
aas
fiadds
dec
je
and
pop
sbb
dec
jle
into
jl
pushf
pop
loop
dec
mov
jl
add
inc
loope
jb
in
aaa
loopne
in
push
inc
dec
push
or
aaa
adc
fnsave
sahf
movsl
inc
sarl
jmp
cwtl
mov
pop
cmp
and
add
push
mov
sub
in
je
stos
aaa
mov
xor
mov
pop
push
fcoml
sub
sub
xor
dec
mov
insl
add
mov
xchg
sub
stos
push
psllw
and
pop
cltd
sbb
sub
add
in
sarl
in
stos
sarb
xchg
pop
sbb
or
push
aad
ljmp
outsb
sub
aaa
jns
imul
xchg
xchg
ljmp
adc
pop
xor
xchg
lods
rcr
sub
jbe
dec
mov
stos
jne
aam
out
mov
xchg
xchg
rorl
inc
int
inc
adc
loopne
xchg
cmp
sbb
push
mov
mov
cmp
mov
or
or
push
std
scas
cmp
daa
call
dec
inc
pop
std
lds
js
cmp
fidivrs
sub
fistl
fcompl
iret
jmp
pusha
mov
adc
subl
jns
imul
negb
fst
and
je
lea
and
negl
dec
push
repnz
mov
sub
dec
dec
ss
scas
pop
push
or
in
sahf
ret
hlt
int3
fidivrl
xchg
addr16
xchg
sub
adc
in
mov
mov
stos
mov
push
bound
stos
cs
inc
in
mov
dec
ret
add
ljmp
sub
pop
mov
psubsb
mov
gs
mov
repnz
jl
and
adc
movb
insb
mov
pop
negb
inc
ficoms
pusha
or
xchg
in
adc
int
dec
dec
push
xchg
inc
ja
icebp
mov
and
push
lods
cmp
mov
mov
mov
cmc
cmpsl
jge
and
insl
push
mov
lret
in
pushf
fmull
lcall
mov
jmp
out
adc
xor
test
daa
lods
push
fidivs
sbb
pop
cmp
lea
shl
add
je
data16
xchg
je
fstpt
leave
int
or
jae
sbb
lds
push
mov
ret
aad
mov
adc
roll
sub
cmp
out
not
out
pop
mov
mov
pop
mov
cli
les
and
imul
cmp
iret
dec
and
pop
push
push
xchg
dec
dec
daa
jo
iret
fucomp
inc
jmp
xchg
test
push
and
xor
dec
or
dec
popa
insl
dec
add
or
and
add
dec
outsb
daa
insl
popa
xor
dec
inc
mov
imul
gs
ffree
inc
popa
and
outsb
pop
in
dec
iret
daa
sub
fucomp
inc
or
push
adc
push
bound
inc
into
and
push
sub
fisttpll
inc
and
add
and
daa
je
jae
outsb
inc
sub
mov
daa
int3
popa
lret
push
inc
adc
es
and
loop
ret
push
scas
sbb
movl
cli
subl
mov
lcall
xchg
adc
push
push
adc
jbe
mov
ds
addr16
adc
call
inc
icebp
and
push
xor
addr16
jbe
js
test
xor
and
js
out
mov
call
cmp
fs
popf
call
ret
push
mov
jecxz
mov
lea
jmp
adc
and
adc
loope
inc
fsubrl
pop
dec
rcr
daa
dec
xor
add
bound
daa
pop
dec
jb
pop
fildll
mov
add
xchg
mov
fidivrl
xchg
push
xor
jno
loope
loope
mov
adc
loope,pn
or
ret
ds
cmpl
in
stos
adc
sub
mov
imul
push
or
in
mov
inc
inc
or
inc
xor
js
movsl
xchg
add
out
sub
mov
pop
enter
cwtl
or
call
daa
pop
xchg
push
out
cmpsl
xchg
pop
mul
xlat
inc
out
and
xorb
ret
mov
rolb
xor
push
shll
loope
xor
adc
add
fs
inc
mov
xchg
mov
daa
xor
repnz
arpl
mov
out
xor
rol
dec
ds
cs
sahf
in
dec
into
mov
mov
dec
aaa
in
lcall
lret
mov
inc
aad
int3
push
loope
insl
push
mov
addr16
pop
fs
jne
fwait
pop
es
dec
lea
addr16
sbb
push
sti
dec
sub
cld
daa
jne
bound
jle
xchg
imul
sbb
addl
testl
xchg
lds
adc
icebp
and
dec
popa
cmc
bound
push
xor
inc
xchg
xor
out
fisttpl
push
xchg
inc
mov
test
imul
xlat
add
ret
or
xchg
fsubs
addr16
repnz
xor
jae
jp
jl
std
inc
mov
outsl
loop
cs
popw
ret
push
mov
popa
enter
hlt
inc
ja
push
push
or
pop
adc
adcl
fs
add
mov
getsec
lock
ljmp
push
pop
xchg
xor
cmp
jae
leave
add
inc
scas
jecxz
inc
mov
fdivp
movsl
adc
dec
jo
sti
stc
sub
call
or
outsl
in
adc
out
adc
add
in
xor
arpl
xchg
pop
jecxz
enter
mov
fs
popf
mov
and
daa
jecxz
jp
iret
rolb
rclb
out
addr16
dec
dec
push
int
push
mov
leave
les
or
aas
adc
adcb
xor
sub
inc
data16
jae
or
push
call
jbe
notl
int3
sub
jno
jmp
lcall
mov
mov
pop
cwtl
in
mov
xor
les
adc
sub
daa
cmp
cmp
ret
inc
je
sub
jle
dec
push
bound
mov
adc
push
dec
push
mov
fimuls
leave
and
and
aam
in
cltd
cmp
not
dec
jne
pushf
daa
cmp
aam
push
hlt
push
aad
out
stos
jecxz
fdivs
jge
imul
frstor
or
adc
enter
gs
jb
adcl
xor
mov
inc
jp
fcoms
pop
shrl
ds
xchg
adc
add
xchg
jnp
xor
fstps
xchg
inc
dec
es
dec
and
sbb
sarb
mov
sub
mov
mov
je
inc
test
popf
jecxz
imulb
push
fs
fadds
jae
sbb
aad
rcll
xor
adc
pop
dec
xor
lret
mov
cmpsl
je
jo
xor
mov
lds
push
and
cwtl
repz
arpl
jmp
xor
jg
fcoms
call
call
cld
loopne
shll
in
sub
fisubs
test
xor
inc
imul
mov
mov
inc
das
not
push
addl
inc
inc
inc
xchg
aaa
inc
fldl
add
clc
inc
imul
inc
mov
inc
icebp
inc
mov
std
dec
repnz
pop
roll
mov
insl
out
int
lods
popf
or
push
inc
xor
nop
xorb
rol
mov
adc
lock
dec
aas
das
pop
jg
out
iret
mov
out
out
dec
cmp
sbb
lret
lcall
cmp
sbb
leave
mov
jmp
sub
mov
pop
int3
mov
in
out
dec
cmp
sbb
lret
mov
jmp
fildl
es
xchg
push
mov
xchg
push
imulb
push
jl
push
pop
out
mov
mov
call
popa
dec
ret
jnp
inc
addl
mov
xor
jnp
pop
cs
loope
inc
rclb
stos
stos
jmp
adc
add
icebp
sub
and
rcll
sbb
mov
in
roll
insl
in
add
rcl
dec
inc
and
and
addl
lods
shr
mov
and
shlb
and
rcrl
and
jecxz
inc
clc
int3
adc
mov
push
orl
xchg
add
xchg
xor
in
lds
and
push
gs
insl
mov
gs
call
testl
jle
and
shlb
lds
or
cmpsl
push
mov
sahf
mov
inc
sbb
push
and
sub
in
jno
ljmp
insb
outsb
adc
adc
inc
pop
and
jbe
sub
in
adcb
inc
call
add
add
add
cwtl
add
add
icebp
inc
and
aas
addr16
push
imul
aam
and
mov
and
lret
loop
mov
push
sub
and
cs
jno
rclb
outsb
mov
pop
cmp
lock
push
mov
inc
call
jae
bound
test
and
adc
out
dec
xchg
inc
outsl
or
roll
out
out
xor
xor
into
cmp
in
cs
repz
xchg
jecxz
adc
xchg
inc
outsb
adc
ljmp
cmp
dec
inc
pop
sub
rolb
mov
push
inc
push
loope
aas
test
div
jno
push
ds
lcall
xchg
cmp
call
inc
daa
mov
enter
nop
adc
aaa
rcrl
cmp
and
push
jp
jno
andb
js
xchg
loop
dec
cmpb
pop
xor
mov
push
filds
adc
jle
xor
mov
xor
mov
jmp
add
push
cs
cwtl
adc
aad
inc
pop
shll
pop
in
pop
aad
adc
loop
add
sub
jmp
inc
movsb
call
aad
pop
push
arpl
mov
call
aad
out
lods
or
fnsave
cs
out
dec
inc
fs
movsb
call
sub
sbb
xchg
pop
movsl
and
jmp
add
imul
in
sbb
sbb
jle
outsl
lods
arpl
dec
and
mov
out
pop
jno
fdivl
hlt
loop
jp
into
call
imul
rcl
outsl
jge
jmp
push
fcoml
call
aam
test
lret
mov
je
call
aam
lahf
aam
cltd
or
bound
outsl
xor
ljmp
cld
into
loop
sahf
sbb
push
mov
stos
loop
push
retw
push
insb
mov
cmpsl
fcmovnb
sub
mov
mull
sbb
jge
jno
cwtl
jecxz
les
cmp
cs
rolb
mov
dec
mov
push
lods
sarb
pop
out
into
and
xor
les
jecxz
push
loope
inc
pop
hlt
fimull
mov
add
imul
mov
bound
scas
mov
lea
mov
lods
jae
ret
adc
inc
and
lahf
fsubs
shll
loopne
adc
insb
arpl
adc
std
popa
adcl
mov
xchg
out
fiadds
inc
add
push
jnp
mov
sub
outsb
dec
movb
jge
cmp
dec
xor
cmc
add
mov
pop
inc
or
out
ds
xchg
jecxz
cmp
mov
cmp
hlt
int
sbb
and
sub
ja
pop
cmpsb
push
inc
sbb
push
flds
ds
push
and
negl
daa
push
xor
lahf
push
and
mov
push
xor
add
jle
in
imul
popa
xchg
fs
mov
jno
and
xchg
call
xchg
mov
rorl
xor
or
lret
loope
in
bound
xchg
mov
arpl
mov
pop
enter
in
loopne
popa
mov
rcll
int3
fsubs
xor
or
dec
das
or
adc
js
cmp
popf
inc
test
addr16
jl
cmp
mov
inc
cmpsl
inc
push
jb
xchg
subl
adc
stos
mov
pop
and
sbb
push
add
addr16
mov
mov
loope
rcl
cli
out
pop
push
in
inc
fwait
inc
push
fisubl
add
dec
test
enter
jnp
jecxz
cmpsl
fs
xor
es
mov
loope
gs
pop
adc
ret
out
pop
daa
fcomip
lods
jmp
mov
or
push
shr
aad
or
fsubs
jecxz
inc
in
daa
sarb
xchg
rcrl
repnz
lds
dec
cmp
icebp
adc
dec
je
fstl
xor
cmp
xchg
nop
mov
xor
add
mov
adc
sub
dec
cmpsb
fsubr
xchg
popf
dec
popa
cmp
cmp
ja
push
and
popa
shr
popa
jb
loope
pop
inc
jmp
cmp
daa
xchg
fucomi
ret
dec
movsb
popf
in
and
sub
int
addr16
dec
xor
in
icebp
jae
arpl
sub
jae
sub
xlat
fdiv
xor
loopne
mov
loop
xchg
sbb
sti
cmp
jae
je
dec
jo
imul
mov
pop
fimull
imul
fcomi
push
pop
shl
test
lods
xchg
pop
and
imul
mov
lock
xchg
or
in
and
inc
push
push
jmp
test
leave
pop
fisubs
sbb
inc
iret
or
fdivrl
pop
adc
cmc
mov
fistps
popa
and
pop
mov
test
and
shll
xchg
test
fstl
inc
movsl
and
gs
push
xor
test
mov
mov
pusha
push
in
sub
pop
dec
xchg
and
adc
xor
and
xor
leave
and
add
inc
pusha
scas
xchg
mov
dec
shll
test
dec
scas
sbb
sub
mov
jno
push
sub
push
and
in
loopne
xor
shrl
sbb
lock
jl
push
and
fs
scas
fsubs
movsb
xchg
aas
idivl
sub
sub
test
insb
push
imulb
mov
hlt
mov
sub
jns
lds
andl
push
out
clc
call
call
repz
in
aas
or
mov
mov
movsb
int3
lahf
cmp
pop
inc
and
or
in
add
bound
gs
dec
pop
xor
push
gs
push
cmpsb
dec
loop
out
pop
outsl
jge
fidivrl
int3
push
adc
loop
sbb
mov
stc
dec
sub
ficompl
pop
imul
enter
loopne
xlat
rcll
mov
in
mov
inc
sarl
in
in
push
sub
push
ret
cmpsl
sub
and
aas
test
adc
mov
loope
pop
daa
movsl
data16
push
xlat
gs
fsubp
call
push
jl
and
aam
aam
adc
and
push
in
and
rcl
mov
and
inc
dec
call
sub
dec
lods
daa
pop
popa
adc
enter
mov
pop
test
popa
clc
frstor
call
push
outsb
daa
cwtl
inc
and
pop
push
dec
into
daa
popa
popa
cmpsb
frstor
inc
notb
and
iret
push
pop
ljmp
dec
push
out
loop
loopw
daa
imul
adc
xchg
gs
inc
call
in
pop
insb
dec
test
fucomp
inc
stos
and
pop
out
dec
scas
daa
outsl
popa
das
inc
mov
xor
out
dec
outsb
pusha
out
dec
push
daa
aam
adc
mov
out
cmpsl
dec
call
xchg
sub
and
xor
aad
hlt
cmc
int
and
cmp
and
sub
aaa
dec
out
shr
addr16
jp
in
and
adc
mov
loope
loop
cmpsl
ljmp
and
insl
push
lret
daa
imul
test
pop
sub
ss
aad
pop
out
add
sub
and
daa
inc
popa
jle
nop
inc
sub
cmp
pop
in
mull
xchg
popa
xchg
lods
push
jo
ds
cmpsb
fucomp
adc
adc
push
xor
fisubl
push
sub
inc
loop
sub
movb
popa
mov
push
loope
inc
cmc
dec
daa
es
sub
nop
jo
loope
stos
aaa
or
and
and
or
dec
cmp
in
call
shll
inc
jmpw
xchg
pop
sbb
or
cmp
and
add
call
out
push
cli
lock
stc
dec
pop
adc
mov
push
jb
outsb
into
ljmp
out
pop
jno
inc
outsl
shl
stos
sbb
popf
jbe
shr
scas
inc
out
pushf
or
mov
push
iret
shll
loopne
out
cmp
ficoms
iret
movdqa
sbb
scas
jne
jg
ss
fadd
into
and
stc
adc
test
pop
cmp
adcl
mov
xchg
push
inc
out
jg
push
mov
push
add
test
adc
imulb
jmp
loopne
ljmp
fsts
pop
test
out
arpl
and
ja
add
out
pushf
out
repz
call
sub
push
das
mov
cltd
test
bnd
adc
shl
adc
mov
icebp
xor
cmp
cmpsl
out
pop
dec
push
js
jmpw
aaa
sub
sbb
data16
call
mov
inc
into
sbb
jge
xchg
in
les
mov
movsb
fcoml
and
and
push
clc
and
out
or
lret
jne
lahf
or
stc
out
daa
aaa
mov
push
mov
xlat
les
inc
fimull
fbld
out
jl
negl
sbb
popa
test
pop
push
fidivl
outsl
jmp
scas
out
sub
pushf
out
add
mov
xor
ficoms
out
and
xor
ljmp
bound
subb
out
mov
insl
push
gs
lea
adc
jne
pusha
push
jb
pop
ret
ret
test
aaa
out
inc
or
out
push
jge
ljmp
dec
sbb
push
dec
aad
jg
add
inc
jp
and
push
out
xchg
andb
and
or
and
sahf
out
imul
out
frstor
push
xor
xor
sahf
aad
or
or
imul
and
cld
fucomi
loopne
push
shll
in
fs
push
lcall
in
push
pop
add
outsb
mov
inc
push
mov
ret
push
addr16
cs
sbb
sbb
mov
lret
pop
mov
inc
call
jae
jp
je
add
les
pop
out
add
mov
dec
mov
add
push
sbb
cs
in
pop
push
aas
loope
out
arpl
enter
cmp
outsb
movsb
jle
dec
mov
call
lock
jecxz
mov
inc
rol
and
or
jmp
xchg
jmp
push
and
scas
loopne
push
sbb
test
icebp
loope
and
in
mov
push
xchg
in
inc
rcll
lods
jge
out
ja
adc
cmc
xchg
or
cmp
stos
cmp
dec
inc
out
aas
or
test
sub
imul
jmp
outsb
data16
lret
push
xor
ret
movb
or
sbb
std
inc
lods
lock
adcb
sub
es
dec
ret
jle
dec
xchg
mov
add
sahf
or
lahf
icebp
push
cld
cmp
push
mov
adc
lods
cmp
ret
lea
stos
in
jmp
cmpsb
push
ljmp
stos
in
sub
push
cmpsb
daa
cmpsb
cmpsb
cmpsl
cmpsb
out
and
loop
and
loope
adc
push
cmpsb
mov
cmpsb
fisubs
mov
loopne
dec
cmpsb
cmp
push
mov
lds
jg
mov
out
je
xor
ret
imul
test
out
ds
adcl
xor
push
orb
fucomp
fisubs
lds
mov
stos
push
jmp
push
orb
daa
mov
mov
mov
add
pushf
or
xchg
add
repnz
inc
bound
in
js
or
pop
icebp
cmpsl
std
and
mov
stc
inc
stc
hlt
stc
adc
repz
jle
dec
stc
or
stc
outsl
stc
psubw
stc
leave
stc
fyl2xp1
in
stc
inc
cmp
push
or
aas
xchg
xchg
ljmp
out
stos
inc
jmp
mov
and
gs
xabort
pop
mov
dec
sahf
stc
mov
stc
jmp
inc
mov
cmp
sub
imul
cwtl
push
loop
int3
sbbl
pop
in
fldt
sub
js
push
sbb
cmp
sub
lock
mov
jge
and
fidivl
arpl
dec
imul
psrld
jmp
add
push
pop
adc
std
pusha
and
mov
mov
popa
pop
mov
push
mov
push
sub
inc
dec
aaa
and
sti
test
xor
mov
lahf
or
adc
mov
cmp
add
add
or
dec
xor
bound
sarb
mov
adc
cltd
dec
push
or
movb
inc
jns
das
xchg
push
or
push
insb
lods
push
jo
lahf
push
sub
push
stc
push
jnp
ss
push
adc
sub
enter
outsb
into
xchg
scas
xor
icebp
push
add
xor
push
push
mov
push
femms
mov
xor
adc
adc
mov
lods
mov
cmp
fdivp
repnz
pop
pop
pop
jb
jno
xchg
daa
dec
cmpsb
mov
cmpsb
out
cmpsb
jp
lcall
cmpsb
pop
cmpsb
or
mov
mov
mul
nop
push
or
or
enter
pop
stc
and
sar
stc
mov
add
mov
push
stc
into
stc
jge
and
sar
stc
imul
cwtl
xlat
xchg
aas
inc
cmp
push
cmp
dec
ljmp
or
inc
pop
mov
mov
dec
cmpsb
pop
cmpsb
mov
sub
imul
add
add
jecxz
sar
dec
push
lock
mov
push
pop
push
pop
push
push
test
and
adc
add
cwtl
push
adc
or
add
clc
push
add
jge
cmpb
jae
dec
push
into
push
adc
mov
xchg
add
jge
push
movsb
ja
jno
arpl
sub
jmp
ret
ja
notl
into
inc
scas
mov
hlt
push
push
push
cs
sahf
push
sbb
push
rorb
inc
xorb
mov
mov
stos
add
push
jle
cmp
cmpsb
lret
in
mov
mov
mov
in
xor
fildl
testl
lods
jg
outsl
jnp
fadd
repnz
xchg
call
xchg
pusha
out
xor
mov
outsb
push
into
mov
iret
push
leave
test
adc
jge
xor
mov
jge
jg
ljmp
cmp
mov
mov
jecxz
faddl
fucompp
pop
and
mov
ret
loopne
out
adcb
jg
xorl
jg
sbb
cmp
mov
lds
sub
jmp
push
xor
daa
leave
adc
test
mov
sahf
cwtl
std
adc
or
lret
add
jge
adc
mov
mov
arpl
jge
jg
jns
jnp
jnp
mov
jmp
jne
mov
inc
dec
les
mov
jge
push
ja
shlb
xchg
dec
stc
imul
in
add
cs
mov
ret
adc
dec
out
cmpsb
sub
push
in
push
xor
or
sub
imul
test
dec
loope
scas
imul
in
data16
test
ljmp
test
push
daa
cmpsw
xchg
das
inc
loope
out
add
jge
xlat
push
ja
jno
arpl
imul
inc
adc
fcom
add
cmp
fsubs
add
mov
in
xor
ret
cs
mov
adcl
mov
insl
repnz
repnz
repnz
bnd
ljmp
repnz
add
or
mov
sub
inc
inc
out
stos
shlb
push
in
inc
push
test
inc
push
mov
ja
shlb
adc
pop
mov
jo
mov
jmp
orb
jno
arpl
push
jb
push
out
icebp
bound
jns
jmp
push
sub
mov
push
dec
jle
lods
test
ret
dec
test
std
inc
mov
inc
repnz
jbe
fdivr
push
in
adc
fstps
xlat
pop
sub
imul
mov
xchg
outsb
stos
into
dec
scas
dec
cmpsl
pop
xor
cwtl
ds
stc
shrb
in
cmp
cmp
cmp
sub
pop
mov
xor
adc
stos
jo
jns
jb
ret
and
dec
scas
pop
push
dec
rorl
repnz
int
mov
lret
add
jo
int3
push
cld
shrb
mov
xchg
aas
pop
outsl
in
add
push
scas
lds
out
push
cmp
es
fmuls
pop
lds
mov
cmp
rcll
ljmp
imul
out
imul
test
inc
test
push
pop
dec
fsubrp
adc
or
stos
aas
push
jb
add
dec
sbb
push
movsl
ret
imul
and
xor
jg
cltd
fcoml
add
cs
sbb
jmp
out
xlat
push
mov
je
sbbb
outsl
dec
imul
cmp
cmc
mov
jp
and
or
out
and
leave
fimuls
in
call
out
mov
cmc
mov
call
clc
ds
add
mov
lock
add
scas
icebp
and
pop
push
daa
out
gs
in
or
aas
lods
std
push
out
stc
fyl2xp1
mov
xchg
xor
inc
bound
mov
cmp
dec
mov
or
cmpsb
outsl
cmpsb
scas
lret
movsl
and
mov
push
or
test
dec
add
incb
and
out
outsl
cmp
or
push
imul
mov
xor
sbb
jg
mov
loop
shrl
inc
sub
ss
jmp
jb
sub
imul
inc
jmp
es
bound
jg
and
lods
in
scas
outsb
mov
sub
push
mov
test
mov
cs
stos
cs
es
sub
push
or
add
loopne
jg
mov
mov
push
jmp
in
loopne
cs
imul
xchg
ficoms
pop
inc
mov
nop
pop
add
das
jl
cltd
repnz
sbb
jmp
dec
pop
jo
mov
add
or
out
imul
lods
jb
inc
dec
push
adc
stos
adc
loope
or
cmp
jp
mov
cmp
mov
ss
sub
in
dec
scas
clc
cli
out
ret
dec
sub
mov
xchg
test
repnz
push
loop
outsb
xor
or
cs
or
xlat
in
and
pop
imul
cmpsl
lds
mov
pop
push
sub
insb
stc
dec
push
out
add
xchg
cmc
insl
icebp
xor
inc
insl
cmpsl
inc
out
mov
in
fucomi
push
jmp
push
push
fldcw
test
sub
insb
cmpsb
xchg
or
push
or
nop
loope
in
imul
dec
out
dec
data16
out
cmp
dec
xor
insl
outsb
push
into
scas
add
in
shr
jo
repnz
repnz
repnz
ja
jne
push
stos
jnp
sub
in
lret
sub
lods
cmpsb
sub
cmpsb
cmpsb
and
dec
test
daa
sbb
inc
and
ljmp
scas
stc
sub
or
jo
mov
lock
das
mov
sub
sbb
imul
sub
sub
sub
sub
insl
ret
movsl
mov
repnz
call
repnz
repnz
and
jnp
jnp
jnp
jnp
mov
xchg
jnp
sub
lock
and
lahf
xchg
xchg
push
cmp
xchg
mov
ret
xchg
lds
sub
adc
test
in
push
test
mov
adc
in
cmp
inc
xchg
mov
loope
adc
out
xor
inc
sbb
sarb
xchg
jb
xchg
adc
inc
mov
and
sbb
iret
loopne
stos
pop
out
xchg
push
cltd
clc
dec
cmp
aas
scas
arpl
mov
push
mov
cwtl
or
aas
imul
pop
sub
lcall
adc
mov
xlat
sub
ljmp
fucomip
stos
lahf
mov
jg
loop,pn
jns
mov
pop
test
add
ljmp
or
ds
push
sub
daa
mov
mov
std
mov
push
pop
jae
cmp
imull
repz
xor
andl
pop
insb
push
jg
std
dec
les
testl
into
ret
push
inc
xor
xchg
rorl
test
or
mov
idivl
sti
inc
inc
ds
sub
stos
xchg
push
xor
mov
aam
mov
ja
mov
loopne
mov
jns
in
dec
dec
add
jne
adc
dec
jle
rcll
inc
xor
shll
pop
notb
ret
repnz
inc
sub
xor
sti
lods
jns
cmp
dec
sbb
inc
xor
dec
and
pop
in
xchg
in
push
xor
xchg
pop
push
pop
sub
fsts
fs
pop
in
mov
push
pop
aaa
pop
mov
aas
jg
xor
and
add
call
andb
xor
mov
pop
cmp
xchg
int3
dec
cmp
mov
push
ds
shl
pop
add
xchg
xchg
push
test
orl
push
pop
xchg
sti
ror
sbbl
mov
inc
jae
scas
fadds
out
cmp
mov
push
out
dec
push
call
aaa
adc
je
mov
popa
jecxz
sub
mov
mov
lds
sbb
test
stos
add
testl
in
adc
mov
scas
mov
ja
stos
push
dec
bound
out
dec
xor
cs
out
and
xchg
cmp
sub
and
clc
arpl
push
loop
mov
sbb
pop
ret
push
adc
cli
push
sbb
jmp
xor
xor
ret
ds
sub
insl
scas
lods
mov
scas
mov
or
push
shrl
xchg
lret
inc
imul
rcrb
sahf
mov
aas
flds
inc
inc
loop
jmp
jae
xchg
adc
cltd
add
loop
in
fdivs
jge
js
add
ret
test
mov
xor
das
mov
lahf
xlat
push
inc
xor
xor
addr16
mov
push
iret
push
inc
movsl
imul
push
lret
dec
daa
fcompl
dec
imul
out
rol
repz
frstor
dec
cmc
insl
clc
addr16
inc
sub
scas
cmpsl
popa
cmp
inc
inc
sbb
sbb
sub
cs
pusha
xchg
jb
iret
test
pop
add
pop
ds
rolb
xor
adc
inc
xchg
das
inc
into
push
and
aaa
adc
call
jl
push
adc
jecxz
dec
push
dec
mov
jno
xchg
fdivs
sub
je
cs
insl
jns
mov
pop
call
loope
inc
jecxz
adcl
std
cmp
adc
push
lea
out
std
ja
lahf
std
adc
and
ret
jno
imul
lahf
imul
shl
jns
mov
in
push
jae
push
outsb
hlt
sub
mov
add
sbb
ljmp
arpl
fdivp
xchg
inc
outsb
xlat
imul
and
mov
xor
scas
cmpsl
ds
xchg
lcall
jne
dec
adc
outsb
xchg
xchg
enter
dec
and
add
push
lret
xchg
xchg
aaa
ret
out
or
testl
push
xchg
hlt
aad
hlt
pop
and
cwtl
push
xor
lds
movl
or
mov
insl
insl
mov
out
shrl
mov
fdivs
cmp
fildl
adc
test
lret
push
jmp
adc
stos
fcom
add
hlt
mov
dec
adc
mov
mov
mov
add
xor
mov
xchg
outsl
inc
adc
inc
int
push
rcrl
pop
popf
lret
xor
xchg
sbb
adc
adcl
insl
movsl
sbb
sub
pushf
mov
rcrl
xor
sub
add
xchg
popf
mov
jnp
and
fcompl
aas
fstl
ds
mov
mull
push
call
ja
int
aad
rcrl
bound
sub
das
adcl
out
divl
xor
jae
xchg
add
dec
sub
xchg
pop
andl
cmpsb
ss
mov
testl
add
mov
sbbb
inc
gs
sar
dec
nop
jb
js
sub
ret
and
push
outsb
jg
mov
mov
leave
rcrl
mov
mov
mov
sub
insl
retw
rclb
jne
sbb
push
mov
and
dec
dec
ficomps
lods
das
cli
sti
pop
ljmp
add
jae
fadds
push
cmc
xor
jmp
ret
inc
cmp
mov
out
mov
add
cld
mov
pop
insb
jl
xlat
rcr
pop
sbbl
dec
dec
dec
ret
in
mov
pop
mov
in
ret
repnz
push
jecxz
jle
mov
mov
sti
mov
popf
inc
test
into
lock
xlat
out
pop
adc
mov
dec
into
mov
fcompp
ret
xor
lret
negb
in
and
xor
addr16
popa
inc
adc
and
jge
pop
clc
pop
push
mov
mov
test
in
adc
stos
add
mov
out
inc
mov
sahf
sbb
push
fld1
pop
xor
jmp
pop
xchg
cld
mov
call
in
fwait
jns
push
inc
pop
xor
fucomp
bound
mov
pop
jb
jne
mov
add
sti
mov
aaa
je
push
fstpl
xor
pop
lret
fsubs
popa
daa
lods
pop
push
aaa
add
cmpsl
sub
pop
add
cmp
fadd
rcll
mov
adc
xchg
cwtl
js
out
popa
jne
test
bound
and
sbb
add
push
lahf
xor
enter
pop
mov
cmp
xchg
xorl
or
cmc
call
mul
cmpsb
push
push
jle
ret
push
or
adc
pop
dec
dec
mov
or
mov
sub
cli
inc
add
nop
cli
dec
add
call
insl
popa
cwtl
inc
repz
in
sarl
xchg
cmp
xchg
in
bound
cltd
and
int
xchg
mul
cmp
xchg
int3
adc
imul
pop
int3
and
mov
pop
xchg
and
sbb
rclb
push
pushf
stc
adcl
arpl
popf
xlat
sarb
std
or
inc
xchg
int
addr16
les
mov
out
pop
and
jnp
cwtl
xor
pop
jbe
jno
ret
mov
inc
cli
sub
and
ficomps
call
sbb
lds
les
js
js
scas
dec
push
jle
incb
xchg
inc
cmp
mov
sbb
scas
lahf
sahf
orb
arpl
inc
shll
or
xor
pop
sub
sahf
push
mov
xorl
loopne
js
pop
addr16
call
mov
xchg
xor
xchg
jmp
xchg
inc
xor
push
dec
fstpl
xchg
xchg
loop
ja
je
mov
lods
je
dec
lds
pop
xchg
jb
lret
add
dec
pusha
sub
push
mov
bswap
xchg
iret
cmp
fldenv
scas
sbb
xchg
into
hlt
das
pop
ja
mov
mov
rolb
es
jmp
lods
push
adc
sbb
and
leave
popa
shl
or
push
push
addr16
pop
dec
mov
dec
inc
lcall
pop
idiv
std
xlat
dec
cmp
out
in
add
mov
inc
mov
mov
sub
push
icebp
call
test
in
out
out
jb,pn
jbe
cmp
scas
pop
adc
mov
and
jecxz
rorl
push
xor
add
jge
pop
nop
dec
and
stos
adc
cmp
pop
lds
and
aad
clc
iret
push
adc
cmp
fildll
jns
adc
pushf
and
cmovl
mov
call
mov
insb
popf
pop
or
mov
inc
add
jbe
es
jae
fsubrs
ja
fldt
xor
icebp
sarl
popf
enter
push
out
ds
subl
cwtl
mov
adc
outsl
out
push
mov
jl
rorl
ss
andl
inc
push
ljmp
std
adc
fnsave
pop
dec
mov
xlat
out
add
cltd
hlt
sub
dec
mov
fs
in
push
mov
ret
bound
dec
cmpb
outsl
xor
xor
dec
stc
xor
mov
testb
insl
xchg
mov
adc
jno
dec
loope
and
xchg
rcrb
sub
fcoms
cwtl
xor
cld
push
or
cmpsl
aaa
xlat
into
jns
dec
jle
divb
jae
mov
lcall
sarl
dec
pop
sbb
mov
mov
xlat
scas
shrl
sub
jecxz
xchg
and
stc
dec
arpl
sub
xchg
jno
add
jb
add
mov
loopne
lret
lahf
lds
test
adc
dec
cmp
adcb
loopne
out
bound
cmp
adc
xchg
xor
bound
arpl
bound
cmovg
sarl
xchg
add
fbstp
jb
or
xlat
adc
xlat
sub
aas
xchg
pop
jb
and
sub
mov
dec
pop
add
fwait
dec
xor
int3
inc
or
push
xor
aad
nop
popf
movsb
inc
sbb
cmpsb
lret
rclb
inc
iret
and
mov
repz
sub
test
orl
inc
jno
dec
cli
and
jns
outsl
loopne
imul
and
rcrb
roll
pop
int3
lahf
and
mov
jbe
sbbb
fisttpl
pop
dec
int3
sbb
xchg
rcrb
mov
stos
in
je
inc
pop
sub
rolb
pop
es
push
cmp
mov
sbb
xor
xor
sbbb
or
mov
add
inc
mov
in
mull
xor
xor
stos
popf
cld
and
in
mov
and
scas
and
xor
mov
jb
or
idivl
mov
xchg
loopne
or
mov
mov
sub
dec
adc
nop
adc
mov
mov
sbb
add
adc
mov
pop
pop
sub
mov
mov
add
inc
mov
mov
sub
nop
or
mov
jmp
mov
imul
jnp
imul
inc
mov
jge
pop
mov
xor
out
adc
nop
pusha
testl
mull
mov
jb
and
imul
push
sbb
xor
push
je
jae
rcll
rcll
jle,pn
sub
jl
mov
sar
xor
jl
mov
movsb
cs
xor
enter
dec
shrl
and
xor
mov
scas
mov
xchg
iret
add
daa
adc
stos
push
jnp
pusha
adc
out
push
pop
shlb
lea
ret
cs
sbb
cmpsl
xchg
jb
mov
or
mov
sbb
decb
cmp
dec
js
xor
dec
jle
lcall
adc
xor
mov
inc
sbb
sub
push
mov
cmp
mov
jl
adc
mov
xor
bnd
adcb
xchg
mov
fildl
call
outsl
or
mov
lcall
mov
jg
js
ja
inc
push
arpl
dec
xor
inc
dec
mov
or
and
jmp
cltd
loop
inc
xlat
leave
sbb
mov
cmpsb
mov
das
loope
dec
mov
int3
rorl
adc
cmp
in
aaa
mov
cmp
popa
jne
test
lcall
push
jb
inc
cmpb
cmpsb
and
mov
fstps
pop
neg
lcall
pop
notl
pop
lcall
cmp
shlb
and
loope
sub
jns
das
push
stos
fstps
loopne
push
mov
push
cmp
nop
cwtl
test
mov
xchg
mov
xchg
dec
and
pop
mov
pop
int3
xchg
and
ja
jae
pop
dec
mov
push
xchg
and
dec
ja
je
pop
inc
mov
stos
cmp
mov
mov
add
sbb
mov
pop
adc
call
sbb
push
sbb
xlat
push
out
jb
mov
shll
movsb
data16
sbb
mov
dec
pop
lds
adc
repz
jbe
sbb
inc
bound
xor
cmc
ljmp
and
jno
pop
jb
adc
loope
mov
shl
rcl
and
mov
or
jns
call
lret
or
inc
sahf
pop
and
xchg
sbb
inc
jle
cmp
inc
pop
jg,pt
cmp
lcall
loopne
mov
inc
xchg
icebp
inc
cmpsb
pop
lahf
mov
mov
lds
xor
sub
addb
adc
mov
dec
shlb
xor
mov
loope
or
call
int3
cmp
adc
adc
mul
push
dec
push
js
push
cs
inc
push
int3
inc
dec
in
rcr
add
push
push
or
ja
loope
pop
rorl
and
and
fsts
xchg
mov
or
mov
fistpl
ja
dec
cmp
aaa
int3
cmpsl
or
or
push
xchg
add
push
cld
adc
stc
and
sahf
add
hlt
pusha
jo
ja
jb
outsl
pop
movsb
jae
int3
mov
aaa
mov
fisttpl
aam
pop
or
aam
xchg
call
xchg
xlat
divb
sbb
cli
popa
push
jbe
dec
inc
aam
push
das
cli
jae
xor
das
test
mov
repnz
xorb
ja
cld
negb
sti
loop
in
mov
popa
sub
inc
gs
lcall
xchg
cli
mov
sub
mov
dec
add
mov
adc
sbb
test
shr
inc
sahf
int3
addb
mov
and
mov
jne
xor
aas
and
shlb
mov
mov
pop
shl
push
jg
notl
adc
out
or
mov
mov
movsb
dec
adcb
scas
or
repnz
shlb
cs
shrb
xor
cmp
in
adc
mov
test
test
imul
fsubs
jl
mov
int3
mov
lret
je
dec
inc
dec
jbe
mov
pop
sbb
mov
mov
leave
mov
mov
jmp
or
or
scas
dec
rcr
outsb
adc
adc
pop
lods
sub
stos
cmp
dec
dec
bound
xor
filds
push
jle
dec
or
mov
stc
pop
leave
inc
mov
mov
inc
mov
stos
es
inc
pop
mov
inc
mov
mov
jae
ret
popa
sbb
dec
and
and
out
mov
mov
mov
mov
or
sti
into
shll
rorl
sahf
loop
repnz
inc
xor
mov
fninit
rcr
xor
adc
mov
out
jle
and
xor
adc
and
aas
mov
inc
push
xorl
and
adc
or
in
adc
xor
adcl
mov
shr
shl
popa
xchg
fs
push
adc
jbe
xchg
mov
add
shrl
adc
dec
testl
inc
adc
fdivs
xor
imul
inc
xor
mov
jno
repnz
mov
adc
push
jge
jle
mov
clc
xorl
out
adc
popl
xor
popa
bound
aam
dec
ret
xlat
xchg
and
push
fsub
imul
add
xlat
xor
mov
es
xor
popa
mov
and
movsl
bound
mov
push
adc
adc
mov
jecxz
shll
and
rolb
lods
adc
rcll
pop
sbbl
add
cwtl
pop
push
add
jle
mov
xchg
rolb
and
into
inc
out
mov
mov
fs
mov
and
icebp
loope
and
mov
adc
jne
jae
loope
mov
xchg
push
mov
out
adcl
mov
jae
adc
xor
xor
xchg
adc
aad
jno,pn
fs
xor
mov
push
in
push
inc
cs
mov
adc
inc
mov
xchg
rcll
push
dec
andl
add
shl
add
ret
je
mov
adc
push
mov
xorb
adc
push
add
in
xor
push
mov
into
sbb
cmc
mov
and
mov
stos
xchg
movb
jae
repz
xlat
mov
pop
xorl
sti
dec
cwtl
ja
outsb
add
xor
add
incb
roll
inc
in
xchg
mov
mov
mov
icebp
fadds
aam
ret
bound
lock
jle
loope
push
adc
bound
jbe
adc
cmp
adc
and
push
jecxz
push
loope
jne
les
jae
dec
out
or
and
shl
add
loope
push
adc
popa
je
daa
stc
out
pop
xor
push
call
xchg
pop
outsl
xor
stos
push
mov
cs
je
outsb
mov
adc
cwtl
out
xor
mov
test
adc
ljmp
inc
push
mov
xchg
divl
inc
dec
daa
inc
add
out
inc
and
popa
and
testl
ret
xchg
fsubl
and
adc
arpl
les
lcall
xor
js
mov
pop
xchg
inc
inc
imulb
add
ffree
mov
rcrb
jle
rcl
mov
mov
test
inc
push
ret
popa
sub
mov
xor
ror
je
sub
bswap
adc
mov
and
andb
mov
rcr
addl
jb
push
push
mov
fs
mov
xor
push
jae
adc
pop
xor
xchg
je
mov
push
call
or
out
xchg
repz
loope
shlb
loopne
mov
addl
cli
dec
orb
mov
cmp
cs
mov
mov
sbb
mov
add
xlat
hlt
out
inc
xchg
xlat
dec
adcl
add
and
xchg
jecxz
jo
push
shlb
outsb
out
pop
idivl
loope
or
fs
add
jae
cld
push
cmp
push
imul
and
push
mov
lret
insl
push
shll
push
arpl
and
add
ljmp
jecxz
shlb
pop
js
xchg
and
ficompl
out
xchg
fidivrs
insb
out
push
repz
inc
ret
insl
inc
pop
xor
inc
and
loope
mov
and
push
jle
adc
mov
push
jno
adc
jns
jmp
dec
shrl
jno
add
pop
repz
pusha
push
les
outsb
inc
inc
add
mov
jo
rclb
shlb
inc
into
xor
mov
bound
xor
mov
add
add
out
xor
out
fmuls
inc
cmp
cld
xcrypt-ofb
cmpsl
test
stc
add
sti
cmpsb
subb
jl
mov
sub
or
push
push
xchg
rorb
int3
out
mov
rorl
push
push
mov
sub
sub
imul
push
pop
mov
inc
in
rclb
lods
shl
add
aam
ret
lock
outsb
add
icebp
pop
jle
fwait
xchg
or
xchg
add
into
sub
addl
pop
dec
push
add
cmp
mov
popa
sbb
cmp
mov
ret
inc
stos
pop
cmp
inc
mov
popa
into
in
mov
adc
jnp
sti
pusha
call
and
adc
mov
test
std
adc
adc
xor
and
rcl
popa
js
rcll
clc
negb
or
cmpsb
inc
in
xchg
sub
adc
sub
push
out
and
roll
and
push
sti
inc
sbb
inc
mov
push
cld
mov
scas
ljmp
bound
les
ds
adc
push
out
add
rol
add
outsb
push
xchg
push
arpl
loop
jae
clc
xor
icebp
ret
push
les
loop
adc
and
xchg
adc
clc
aaa
out
push
arpl
add
mov
dec
jecxz
mov
dec
mov
dec
repz
out
ret
cs
inc
ret
and
fcoms
repnz
push
inc
test
into
inc
adc
inc
pop
and
jecxz
xor
push
jne
inc
adc
jp
fcmovnbe
mov
xor
addl
mov
xor
xor
addl
out
adc
shr
enter
push
dec
adc
jl
add
and
add
shrl
sub
jo
xchg
jle
rorl
clc
adc
addl
jp
les
nop
mov
pop
movb
mov
xor
jae
js
xor
dec
fimuls
loope
push
pop
lock
xor
jno
pusha
add
jb
popa
jne
mov
mov
add
and
repz
jecxz
shrl
je
mov
loope,pn
test
push
out
add
xor
out
mov
adc
fs
inc
pop
into
adc
and
mov
xor
int
xchg
pop
pop
aam
out
cs
repz
mov
and
mov
mov
shll
xorl
push
inc
jge
add
mov
jecxz
bound
loopne
and
scas
sbb
arpl
jo
ds
cmpsb
add
mov
ret
push
lock
push
add
aam
xorb
mov
jb
rolb
mov
repz
js
and
or
out
adc
pop
rorl
jno
and
push
push
into
icebp
movb
idivl
mov
std
mov
popa
fs
cmpsl
pop
out
xor
inc
adc
dec
stos
jne
pop
lods
mov
mov
outsb
mov
add
mov
rcrl
mov
shrb
cltd
shr
xchg
push
and
xor
cld
icebp
ljmp
loop
inc
andl
nop
sti
inc
jle
cs
cld
adc
mov
xor
xchg
jp
shl
push
jno
loope
out
dec
mov
jo
enter
sub
xor
insb
addl
jle
sbb
int
je
loope
out
and
inc
mov
out
shll
sbb
out
push
xchg
repz
pop
push
adc
js
sub
push
outsl
xor
scas
into
fistpl
in
sub
add
pop
in
pop
daa
ret
xlat
shlb
jnp
mov
cltd
ljmp
push
cmp
sbb
or
divl
shr
mov
and
and
add
pop
dec
push
and
push
xorl
mov
add
fcom
mov
cmp
sub
push
or
jne
je
shrl
add
lock
mov
je
arpl
cs
test
and
testl
adc
xchg
daa
xchg
jae
xlat
xchg
jns
adc
cmpsl
push
mov
inc
sub
rol
stos
mov
ljmp
dec
xor
inc
in
jmp
out
and
loope
ds
and
popf
rorb
orb
subb
fisubs
inc
xor
outsb
push
xor
mov
out
mov
jnp
jb
push
icebp
cmc
xor
loope
dec
sub
mov
lock
add
dec
inc
xchg
inc
push
jnp
xchg
mov
dec
inc
and
dec
adc
and
icebp
loope
adc
testl
dec
push
push
and
pop
xor
mov
cli
mov
cmp
inc
in
xlat
into
xchg
mov
shlb
push
rcll
mov
ljmp
mov
clc
ret
lcall
mov
lahf
mov
and
cs
xor
ret
arpl
and
jle
nop
mov
dec
je
rol
cmp
ret
bound
inc
add
add
mov
insb
inc
add
push
outsb
and
lret
xor
add
or
loope
fldenv
push
mov
repnz
test
and
push
xchg
mov
or
inc
push
add
jecxz
out
jno
mov
mov
rcr
add
fwait
aam
out
je
jle
jno
out
outsb
xor
mov
sub
adc
out
xchg
fxch
mov
inc
xlat
jns
incb
push
xor
add
adc
sub
xor
andb
xor
test
pop
mov
xchg
jae
int
inc
add
or
repz
ss
adc
pop
mov
test
fisubrs
xorl
ret
repz
mov
icebp
insb
pop
push
into
jecxz
std
pop
inc
out
xor
push
inc
sti
pop
imul
add
cmp
dec
rcll
bound
ljmp
popa
jo
out
sub
icebp
rcrb
jno
mov
imul
rclb
jbe
inc
mov
cmp
xor
add
inc
cmp
and
inc
jae
cwtl
dec
popa
adcl
push
sub
add
mov
xchg
push
ficoml
cs
mov
dec
arpl
or
cmc
out
jae
loope
cmp
adc
xchg
add
inc
jb
pop
dec
cmpl
or
mov
and
dec
jbe
shrb
jo
outsb
icebp
or
push
je
lods
add
dec
inc
mov
shlb
add
loop
cmp
and
in
pusha
roll
out
inc
and
pop
push
and
icebp
sbb
in
xor
shl
or
cmc
pushf
mov
mov
xlat
lock
mov
ret
imull
adc
fwait
and
xlat
icebp
aas
fstp
push
adc
popa
andb
test
xlat
mull
jae
mov
clc
into
add
xchg
les
jl
jle
and
xor
mov
popa
inc
ret
cmpsl
loope
std
dec
inc
push
arpl
jg
fwait
movsl
sub
xchg
and
movsb
ljmp
out
add
mov
adc
inc
xchg
cmpsl
add
in
mov
inc
fidivl
pop
xor
ljmp
add
adc
xor
adc
push
pop
repz
push
sub
inc
stc
push
inc
ret
imul
mov
add
cmc
xor
and
loope
push
add
jmp
adc
adcb
inc
and
not
push
xor
adc
xlat
notl
xchg
sbb
jmp
adc
and
loope
ficomps
mov
sub
dec
xor
xchg
and
push
cmpsb
push
pop
mov
stc
in
out
xor
jp
adc
inc
outsb
push
cmpsl
dec
shl
inc
mov
out
out
add
xor
neg
lock
fbstp
fucom
iret
pop
loop
repz
jg
inc
jl
and
sbb
loopne
xor
mov
jecxz
add
jb
and
repz
fisubrs
ds
xor
mov
dec
add
data16
jo
sub
lret
je
add
sub
out
jge
xor
add
and
inc
mov
imul
dec
jb
push
mov
xor
push
ret
xchg
ljmp
adc
leave
mov
jnp
out
lret
mov
mov
arpl
xlat
clc
sbb
bound
push
popa
xor
addr16
jb
icebp
push
dec
int3
shlb
rcr
and
xor
adcl
push
out
mov
daa
popa
mov
xchg
push
pop
xor
jno
lock
pop
mov
mov
adc
stos
dec
cmp
and
adc
add
outsb
shl
adc
cmp
jmp
les
fcoms
leave
xor
push
cwtl
arpl
dec
mov
adc
neg
sub
fcomi
dec
inc
mov
pusha
aam
mov
mov
push
daa
std
jmp
rcrb
popa
mov
xchg
rcrl
fbstp
jl
shlb
push
aaa
and
push
call
repz
adc
pop
out
clc
mov
out
push
mov
push
inc
nop
and
mov
adc
shll
and
aam
adc
xor
out
stos
adc
ret
js
subb
push
xchg
stos
adc
mov
jne
inc
pop
testl
dec
out
push
xor
shll
push
out
adc
lcall
and
cmp
loope
out
jge
clc
rcll
cmc
adcl
mov
jno
test
xchg
mov
add
add
ret
rorl
fs
aad
and
inc
jb
outsb
les
mov
dec
jb
hlt
mov
mov
jecxz
adc
jnp
in
inc
les
push
push
push
lock
loope
fistpl
icebp
xor
daa
xor
imul
js
or
dec
js
mov
and
cmpl
xor
push
pushl
shll
xor
mov
daa
pop
subl
xchg
jmp
jecxz
inc
out
mov
inc
dec
rorl
xlat
orb
cmp
cltd
push
jb
push
vpsubq
aam
jb
mov
lret
push
call
mov
int3
ljmp
inc
add
jb
jmp
lcall
and
inc
sub
out
sti
rcll
je
adc
mov
loope
sbb
mov
jb
in
dec
mov
push
popa
push
bound
into
pop
inc
ds
add
out
add
outsb
fs
out
andl
es
inc
out
je
mov
in
shrb
subl
push
inc
hlt
daa
je
mov
fs
xchg
push
mov
notl
dec
ret
shrl
shlb
jae
inc
ds
jnp
ljmp
jne
adc
out
or
sti
dec
inc
mov
sbb
addl
mov
inc
dec
adc
push
inc
jno
ja
hlt
lods
add
pop
inc
add
repz
and
mov
xchg
jle
sub
mov
add
je
sub
cmpsb
push
mov
and
push
jge
mov
adc
adc
and
adc
push
adc
xor
mov
push
mov
daa
or
leave
repz
jecxz
je
dec
push
inc
jle
mov
adc
aam
sahf
bound
cmpsl
shrl
out
add
jb
push
adc
ljmp
lock
fs
xlat
xchg
loop
adc
shrb
lock
mov
xchg
je
roll
mov
popa
rcll
xchg
cmpb
testl
xlat
cmp
lods
pop
hlt
js
jne
mov
pop
jge
adc
repz
jb
fs
inc
out
xchg
ljmp
outsl
mov
ds
jecxz
cs
and
shll
scas
out
xor
mov
in
and
out
repz
cs
ret
ljmp
repz
movsl
lds
jbe
ljmp
add
movsl
leave
adc
xchg
adc
mov
les
loop,pt
xor
adc
push
arpl
icebp
xchg
mov
jne
inc
jae
xor
and
jnp
and
mov
imul
in
aaa
push
xor
adc
imull
mov
push
push
dec
bound
sub
cmpsl
adc
or
dec
outsb
pop
push
loope
xchg
fcmovbe
adc
loope
jnp
in
loope
xor
add
popa
sub
mov
push
dec
stos
jle
mov
xchg
and
out
adc
addl
in
int3
daa
notl
bound
push
pop
daa
xor
imul
mov
sub
jno
and
cmp
jmp
xor
into
xor
add
push
push
mov
rep
out
dec
adc
mov
dec
jl
loope
popa
push
in
jne
xchg
icebp
ds
mov
sub
xlat
inc
adc
cmpsb
jae
and
xchg
push
bound
push
inc
testl
add
les
jno
popa
rcll
add
mov
adc
jns
fisubl
xchg
hlt
fcmovb
xchg
jnp
les
mov
popa
xlat
sarl
mov
xchg
adc
adc
adc
push
xlat
ds
arpl
daa
xor
rcll
inc
icebp
xchg
outsb
jge
dec
and
fldl
push
lock
mov
mov
jb
sub
sub
mov
cmpsl
and
xor
ds
lret
es
and
loope,pn
xor
mov
imul
popa
add
pop
out
sbb
sarl
ret
in
scas
daa
repz
xor
jmp
shlb
xor
xchg
dec
mov
mov
fnstenv
icebp
loope
inc
push
push
out
inc
ret
sub
pop
push
and
cs
sub
and
inc
adcb
pop
cmp
dec
cltd
mov
push
xchg
icebp
ret
pop
push
outsb
mov
push
dec
add
and
sub
leave
and
jge
pop
out
lret
jae
popa
xchg
adc
ret
jmp
std
inc
call
add
jns
flds
loop
push
push
pop
inc
into
mov
repz
add
xor
jecxz
lea
adc
jno
cli
lock
ret
lock
into
push
mov
repz
adc
jnp
lahf
dec
into
cmp
hlt
jno
xor
js
add
inc
movsb
insb
out
arpl
fmull
cmp
pop
loopne,pt
and
dec
adc
and
push
dec
shl
sbb
jb
pop
push
lods
or
jge
fcmovnbe
out
mov
fldl
jno
mov
mov
and
lahf
mov
push
add
rcl
and
aam
adc
push
ret
call
add
inc
fwait
xor
dec
mov
mov
mov
jge
inc
jecxz
push
test
and
xor
std
jb
lea
rcll
sbb
ds
push
push
jecxz
mov
imull
cmp
push
pop
inc
xchg
adc
push
mov
shlb
std
or
outsb
mov
icebp
add
repz
loope
movb
xchg
scas
adc
pop
or
les
add
dec
or
jmp
pop
inc
mov
jecxz
jae
inc
push
ret
cmp
jmp
imull
and
mov
cmp
add
das
ds
lods
inc
xorl
fsubr
lret
add
je
arpl
pavgw
mov
mov
test
add
popa
mov
popa
push
push
ds
sar
ret
dec
add
add
call
and
sub
cwtl
jecxz
jge
fstpt
out
sbb
outsb
push
popa
in
and
mov
dec
and
loope
jmp
xchg
xor
and
sub
fs
imul
aam
xor
mov
dec
push
add
and
mov
push
and
andl
idivl
je
popa
dec
out
push
and
xor
lret
cli
outsb
jb
adc
xorl
mov
and
ret
outsb
and
jge
repz
inc
add
cld
jnp
pusha
mov
mov
push
bswap
clc
inc
add
ror
fsubl
mov
jle
adc
or
sbb
stos
addr16
pop
stos
xchg
lret
dec
inc
int
push
xchg
add
nop
mov
push
das
push
push
lcall
and
mov
mov
mov
xor
mov
jle
shl
rclb
out
negl
xor
lea
icebp
jl
mov
push
sbb
mov
add
out
mov
and
outsb
cmpsl
ljmp
and
ret
xlat
negb
mov
push
repz
ds
add
ds
push
rcr
add
bound
xlat
int
inc
enter
out
clc
mov
ds
add
xor
les
mov
xrelease
roll
jb
mov
and
mov
nop
jge
xor
rorb
mov
les
dec
in
xchg
icebp
push
out
xor
add
cmp
in
dec
mov
mov
jae
ret
fistl
out
push
sub
jo
xchg
call
pop
inc
cltd
shll
imul
mov
mov
mov
inc
popa
les
push
lods
loopne
sbb
jge
mov
mov
mov
jmp
pusha
adc
insl
lds
mov
pop
adc
in
sbb
sub
ljmp
mov
cmp
inc
call
sbbl
adc
mov
dec
cmovge
jae
insl
cmpxchg
xchg
adc
push
out
adc
icebp
xchg
pop
call
ret
dec
andb
not
xor
dec
xchg
inc
push
shll
pop
dec
aam
into
xlat
jo
push
jecxz
push
mov
fcomp
pop
out
fcoms
xor
inc
icebp
test
mov
jae
xchg
sub
sbb
dec
arpl
icebp
add
imul
cmp
jae
and
jge
and
xchg
mov
xlat
push
dec
push
loope
xchg
mov
and
mov
ljmp
repz
push
adc
leave
js
sub
fbld
cmpsl
into
or
adc
outsl
jecxz
dec
xor
loope
movsl
rcrl
loop
add
lds
mov
and
jbe
pop
mov
divl
push
sbb
or
bnd
outsb
adc
rol
push
push
jo
push
call
push
adcl
fcoms
push
je
dec
mov
push
ljmp
jmp
ret
orb
or
outsb
xorb
loop
add
inc
pop
push
clc
inc
into
shll
rclb
push
mov
xchg
outsb
adc
push
out
mov
add
clc
jb
jle
dec
adc
push
mov
dec
or
inc
mov
cwtl
jb
dec
outsb
dec
mov
in
add
jne
push
loope
xchg
shll
daa
bound
jle
cmp
out
push
sbb
mov
fucomp
add
mov
les
mov
movsb
and
jae
rol
jmp
xor
xlat
rcll
adc
jb
out
and
jecxz
mov
dec
cs
mov
ret
fs
xor
mov
jecxz
outsb
jge
xor
rol
inc
rorl
adc
mov
cmp
ljmp
ret
xor
js
pop
push
mov
cmp
jo
push
addb
xor
add
inc
fisubl
add
out
push
adc
adc
arpl
les
and
shr
sbb
mov
adc
into
sub
mov
and
add
int
ret
and
xchg
add
inc
popa
or
and
outsb
and
push
pushf
xlat
lock
jbe
les
ret
mov
push
xchg
xchg
loope
xor
les
dec
mov
and
dec
repz
shlb
int
mov
jle
and
out
xlat
push
je
xor
addl
pop
xlat
mov
pushf
jno
sub
xchg
push
rcrb
push
leave
rcll
dec
inc
inc
add
lods
adc
xor
and
cmpsb
dec
mov
mov
add
int
stos
movsl
roll
mov
ljmp
outsb
pop
ret
loopne
and
jbe
loope
lock
orb
cmpsl
cs
mov
inc
popf
addb
outsb
mov
push
cmp
push
add
adc
dec
jne
mov
dec
jno
push
and
push
or
addb
std
push
out
add
and
jmp
dec
and
xor
out
pop
jle
add
add
xor
and
push
nop
mov
loop
shll
out
lds
repz
iret
ljmp
int
scas
dec
inc
ljmp
or
dec
jae
push
aam
ret
lcall
push
fidivs
mov
ficoml
push
orl
push
shr
dec
xor
loope
and
jle
movsb
adc
push
inc
mov
sarl
pop
pop
addr16
shrl
xor
orl
mov
cmp
mov
orb
jle
fs
sub
xor
mov
pop
shll
inc
add
inc
or
dec
repz
pop
aam
xlat
cmp
adc
xchg
mov
cmpsl
and
add
mov
xchg
ss
rol
and
xlat
ds
adc
and
icebp
ja
ficoml
inc
mov
fisubl
mov
gs
xor
mov
cmpsb
dec
jo
mov
ds
xor
pop
out
mov
xor
push
cmp
call
mov
popa
and
shl
xlat
fstl
cmp
fidivs
dec
xchg
divl
mov
addl
xor
xor
xlat
add
inc
aam
xchg
in
scas
out
int3
adc
add
call
xor
and
addr16
and
add
add
fs
scas
sub
dec
push
pop
xchg
xchg
cmp
fdivl
xlat
loope
mov
cli
ds
mov
dec
jle
xchg
inc
test
mov
mov
push
outsb
xchg
insl
shrb
clc
jmp
mov
and
xchg
add
or
push
jle
les
push
repz
les
xor
inc
testl
roll
pop
rclb
outsb
std
test
xor
jno
push
jb
xor
jae
sub
shl
jmp
inc
adc
and
mov
out
in
adc
push
adcl
mov
cmc
mov
cmc
arpl
xor
loopne
loope
negl
lret
out
push
jo
cwtl
mov
and
adc
fs
ret
or
adc
adc
push
cmp
dec
arpl
xor
xor
jb
pop
sub
inc
xchg
add
adc
inc
and
popa
push
arpl
fnstenv
nop
mov
mov
adc
sub
test
aam
push
popa
xor
in
ds
orl
jbe
mov
subl
inc
in
sbb
dec
and
push
inc
add
mov
mov
out
dec
jo
js
dec
loope
fnstenv
adc
xlat
repz
push
sub
out
xchg
inc
jecxz
xor
add
jae
dec
xchg
mov
add
outsb
stos
arpl
push
cmp
into
cmp
insl
push
adc
sub
shll
jo
imul
ret
sub
mov
cmp
mov
popa
enter
adc
mov
or
add
test
add
sub
in
mov
loope
lahf
arpl
xor
push
in
movsb
in
outsl
mov
mov
jp
push
ja
push
jge
rcll
push
dec
lock
repz
pushf
leave
adc
mov
bound
les
mov
mov
adc
insb
pop
mov
push
shll
adc
mov
add
mov
sbb
call
les
add
stc
pop
dec
fiadds
add
jl
xchg
add
pushl
inc
push
aam
jle
mov
addr16
arpl
sarl
jle
daa
ljmp
dec
push
dec
popa
in
push
and
popw
inc
add
inc
xor
ret
repz
outsl
arpl
cmp
mov
mov
xor
inc
addr16
out
iret
push
adc
adc
inc
mov
mov
xlat
fmuls
mov
jb
out
push
pop
div
mov
popa
les
xchg
mov
mov
inc
jecxz
ret
fsubrs
push
dec
push
out
dec
sar
and
into
outsb
inc
pop
inc
cmp
mov
roll
jno
jb
cs
loopne
xor
mov
outsb
repz
cmpsl
inc
jae
xor
jle
icebp
out
sub
out
mov
push
ret
add
cs
out
inc
adcb
push
add
sahf
and
dec
mov
mov
push
fs
adc
cmp
mov
push
or
xor
fs
sub
pop
dec
pop
jnp
arpl
cmp
inc
sbb
fiadds
jb
and
je
and
inc
xchg
sub
jns
cmp
mov
inc
inc
icebp
roll
pop
cmp
xlat
arpl
xor
mov
push
xlat
inc
adc
inc
mov
sub
daa
pushf
add
push
cmp
and
insl
mov
cmp
cmc
mov
adc
add
clc
les
and
push
xchg
cld
inc
jno
push
ret
xor
in
xchg
inc
mov
orl
stos
add
repnz
cwtl
cmp
xor
ja
cmpl
and
mov
mov
pop
je
popa
inc
inc
mov
cs
dec
adc
mov
add
popa
in
out
xor
shll
add
cmp
push
pop
rol
call
dec
mov
sub
lock
xor
push
loope
and
push
mov
push
out
mov
jne
sbb
sub
adc
out
test
cli
xlat
push
les
fidivs
push
xchg
roll
test
xchg
mov
ljmp
inc
clc
shll
jne
shll
add
adc
and
mov
fists
jecxz
adc
adc
adc
xchg
push
dec
dec
in
dec
icebp
xlat
stos
sub
adc
mov
int3
in
orl
in
mov
xor
dec
push
push
icebp
cmpl
cmp
clc
rep
icebp
xor
imul
jno
cs
adc
add
xchg
inc
inc
inc
xor
in
adc
loopne
xchg
push
mov
out
outsb
negb
adc
int
cltd
push
xor
fsubrs
xchg
subb
mov
xlat
cmpsb
jno
or
xorl
xor
and
pop
xor
xlat
out
lret
cmp
xor
xchg
and
outsl
mov
cwtl
jle
and
mov
daa
fadds
mov
into
sub
and
adc
jnp
jno
xor
out
jge
xlat
add
dec
bound
and
mov
add
push
out
mov
mov
int
dec
sub
iret
das
cmp
cs
jae
cli
push
fwait
cmc
jo
push
mov
andl
mov
adc
and
sti
jle
out
mov
adc
jecxz
cmpsl
push
mov
jle
and
dec
adc
add
test
test
xlat
jae
push
adc
ret
adcl
out
or
les
xchg
repz
mov
and
push
or
and
inc
in
push
repz
push
icebp
outsl
popa
pop
js
loope
aas
lret
shlb
mov
int
sub
mov
and
jp
jne
jns
pop
push
cmpsb
adcb
adc
mov
dec
ja
movsb
push
jmp
outsl
mov
cld
or
jb
push
sub
sbb
mov
pop
dec
lock
les
scas
mov
or
and
or
inc
push
push
xor
in
faddp
mov
out
andb
jns
jecxz
popa
clc
inc
jle
xchg
inc
out
mov
out
mov
rorl
shll
mov
cs
stc
out
xor
roll
push
push
shll
dec
add
out
lea
jecxz
bound
lods
sub
pushf
xor
add
mov
fdivr
mov
mov
add
icebp
ds
int3
jne
xchg
andl
jmp
adc
bound
je
ja
adc
out
repz
or
ljmp
mov
jge
jb
cs
arpl
aam
and
mov
repz
sbb
ret
ljmp
jb
es
push
sahf
sub
and
int
shlb
aam
icebp
popa
inc
lret
roll
popa
imul
arpl
push
xlat
jle
push
outsl
and
xchg
sub
into
popa
xchg
out
je
dec
add
inc
add
adc
jnp
jle
push
cmp
in
lods
dec
into
out
pop
mov
ljmp
add
repz
stc
jbe
arpl
in
mov
add
push
repnz
pop
jecxz
sbb
and
mov
push
inc
sub
loop
adc
icebp
repz
cli
pop
add
test
test
into
xlat
mov
pop
xor
dec
inc
mov
mov
pop
add
dec
xchg
mov
xor
imul
mov
push
xor
into
bound
adc
jl
mov
mov
xorb
mov
call
xchg
ds
sahf
push
sub
pop
scas
lock
jae
out
add
jno
mov
adc
rcll
push
mov
loope
in
mov
add
and
popa
andb
xlat
jge
shlb
fsubrs
cmc
clc
icebp
push
nopl
xor
sbb
sub
add
xlat
and
jg
inc
inc
pop
rorl
int
outsb
jp
std
fsubrs
xor
out
cmp
icebp
mov
arpl
xchg
pop
mov
inc
dec
lods
mov
shlb
packsswb
test
xchg
rol
push
icebp
or
mov
dec
push
in
xor
jge
jnp
dec
jb
loope
in
add
xor
push
imul
xor
int
cmp
lahf
push
cmp
mov
pop
mov
arpl
add
and
inc
pop
add
pop
icebp
arpl
decb
cmp
inc
and
mov
xor
push
jle
jmp
mov
jle
insl
arpl
push
jb
fimuls
pop
jge
add
ja
ds
call
add
adc
sbb
arpl
and
scas
or
inc
xor
jecxz
add
mov
add
sub
jne
jmp
jb
jns
shll
cli
les
add
pop
push
mov
out
loope
xchg
inc
ret
pop
mov
je
jmp
stos
mov
mov
cmp
cmc
lock
shr
rcrl
push
push
les
je
sbb
test
divl
adc
mov
testl
notl
popa
jl
int
push
popa
inc
mov
pop
mov
and
jb
ror
inc
sub
xor
cmp
adc
adc
add
inc
mov
ja
inc
ljmp
test
fs
in
mov
arpl
xor
inc
sub
mov
popa
pop
adc
loope
inc
and
add
mov
addl
jmp
sub
push
add
shl
mov
xchg
divl
andb
pop
add
out
add
ja
and
sti
jne
jae
dec
xorl
jecxz
adc
and
xchg
repz
shll
daa
push
xor
or
jno
cmp
subl
add
cmpsl
inc
mov
mov
dec
mov
mov
into
imul
rcrb
adc
pop
and
loope
adc
jo
mov
cmp
sub
push
rcll
fmulp
dec
xchg
and
xor
ficompl
mov
mov
inc
sub
in
add
outsl
xor
mov
adc
loope
and
adc
and
cs
jbe,pt
add
adc
outsw
je
xchg
adc
out
inc
push
repz
push
and
bound
xlat
adc
push
scas
mov
cmp
clc
stos
add
test
mov
and
xchg
mov
mov
adc
xor
cmc
call
or
mov
adc
test
les
fiaddl
out
and
push
popa
add
mov
xorl
shr
add
ds
lock
xchg
add
aam
xchg
out
cmp
ror
shlb
adc
divb
lods
pop
add
jns
xlat
pusha
or
sub
scas
and
js
fcmovnb
adc
xchg
push
mov
add
lcall
in
add
jae
roll
adc
popa
jle
out
jno
push
xor
orl
les
lods
xlat
xor
mov
imul
push
xor
jg
xchg
add
into
icebp
ret
cmpsl
jb
imulb
and
scas
or
icebp
mov
out
mov
sbb
les
inc
add
mov
ret
sbb
or
xlat
daa
rclb
push
cwtl
adc
call
lret
les
aam
bound
out
xor
insb
mov
sub
cmpsl
insb
adc
mov
ljmp
inc
sub
cmp
shlb
stc
jecxz
fstpt
dec
and
jno
fs
xlat
loope
or
enter
add
xchg
jo
shl
jecxz
pop
mov
push
dec
insb
lds
jne
jb
and
cmp
jae
push
jne
adc
xor
out
nop
and
add
cmp
leave
and
adc
loopne
push
rorl
into
les
and
repz
add
fimuls
and
out
xchg
xor
test
and
push
fs
popa
je
shl
mov
into
mov
push
incl
rcrl
stos
xlat
icebp
push
mov
ret
or
in
sahf
loopne
outsb
shl
xor
call
dec
pushf
les
lcall
adc
rcll
add
shll
in
xchg
and
add
mov
es
or
sbb
icebp
inc
scas
lds
clc
add
jne
adc
mov
daa
xor
js
push
xchg
popa
ret
into
and
and
inc
xchg
out
jns
push
add
xor
adc
jae
fcom
jg
aam
mov
sub
dec
xchg
repnz
push
outsb
pop
in
xchg
xor
cmc
inc
xadd
cmc
sub
inc
xchg
xchg
fisubrs
je
cmpsb
out
push
adcb
add
and
adc
sbb
mov
iret
inc
inc
shlb
out
pop
ljmp
push
xor
xchg
xchg
loope
jno
xlat
mov
data16
icebp
je
js
mov
jne
div
and
adc
outsb
pop
jecxz
xchg
pop
dec
xchg
rcrl
or
and
fcoms
aam
jb
ret
icebp
sub
loope
sahf
xchg
mov
dec
push
imul
jne
ret
adc
jno
mov
push
lcall
out
jecxz
and
xor
dec
mov
cmpb
icebp
xlat
cmp
sub
mov
xchg
cmp
je
fidivrs
adc
insb
xor
and
inc
xor
fmul
dec
push
and
dec
je
xor
in
pop
jae
and
rcr
mov
ret
lods
stos
jle
push
add
fwait
lea
jle
cmp
fs
adc
mov
cmp
in
adc
push
popa
xor
arpl
outsl
jno
stos
sub
xlat
ret
stc
fdivl
fistl
xchg
popa
into
mov
xor
add
rorb
jno
mov
push
ds
jo
dec
roll
arpl
popf
fidivrs
xlat
cs
xchg
ss
popa
add
daa
mov
jno,pn
cmc
neg
mov
dec
les
decl
cmp
sub
xor
xlat
xchg
cmp
push
cmpsl
and
addr16
out
pop
dec
out
push
inc
inc
ret
xorl
xchg
xor
fs
xlat
into
and
push
andl
and
xchg
es
xchg
and
stos
mov
xlat
push
js
dec
fs
push
shll
cmp
push
movsl
sbb
lret
jo
repz
sarl
or
jbe
fidivs
jne
repz
and
push
or
orl
sbb
popa
int
add
in
aas
mov
push
mov
popa
je
mov
mov
dec
adc
lock
jecxz
repz
pop
and
ret
add
and
jmp
mov
ret
into
rol
pop
mov
sub
shll
cs
push
adc
adc
push
imul
shlw
and
into
jne
and
dec
pop
push
lret
adc
les
cmp
jecxz
inc
push
and
mov
scas
cltd
cmpsl
in
cmp
sahf
push
icebp
push
mov
pop
mov
sub
add
jo
push
jno
sbb
andb
push
jae
shlb
sar
iret
mov
adc
adc
jo
in
inc
jo
jmp
arpl
loope
jle
and
movsb
ret
ljmp
dec
incb
into
adc
js
adc
inc
sub
lods
stc
orb
xchg
repz
cmc
add
pop
cs
outsb
jge
adc
mov
mov
xorl
mov
arpl
push
fadd
ret
stos
into
jle
inc
mov
mov
icebp
mov
out
add
add
jge
andb
in
cs
repz
xchg
cs
push
inc
ret
and
add
outsb
xor
inc
repz
ror
add
jae
xor
or
arpl
add
outsb
pop
push
inc
mov
rclb
sbb
outsb
mov
inc
mov
inc
dec
and
cwtl
inc
fdivrs
shr
outsb
adc
and
dec
pop
push
mov
popa
repz
xlat
xchg
inc
push
arpl
xchg
sub
jmp
jb
and
sbb
andb
aaa
cs
mov
push
sahf
sarl
out
je
lea
add
cmc
ret
adc
cwtl
inc
std
mov
push
bound
out
outsb
xchg
adc
or
icebp
cli
cmp
dec
cld
and
inc
add
ror
inc
les
xor
enter
and
xor
dec
add
cmp
sbb
jb
outsb
lret
push
jo
out
push
shrl
push
adc
inc
mov
adcb
dec
testl
ret
stos
xchg
xor
lret
xlat
ja
adc
cmpsl
push
ds
mov
inc
adc
jno
call
add
jecxz
push
and
xor
and
jle
xor
adc
fildl
xchg
push
call
hlt
ret
cwtl
out
notl
rorb
add
or
mov
and
aam
jno
outsb
sub
sub
dec
inc
out
shll
xorl
rcl
cmp
and
loopne
outsb
lcall
push
jbe
or
data16
sbb
loope
mov
xor
jae
mov
mov
daa
dec
bound
loope
mov
xchg
jle
jne
mov
push
test
push
adc
ret
mov
or
adc
roll
roll
mov
mov
repnz
inc
xchg
push
arpl
inc
sarl
or
inc
fs
cmpsl
add
mov
sarl
mov
ret
mov
mov
push
pushf
mov
inc
mov
and
loop
repz
xchg
loope
push
inc
push
pop
add
roll
into
push
shll
inc
xor
inc
jae
mov
add
jecxz
lret
push
loope
mov
mov
jmp
mov
arpl
out
je
divl
icebp
jge
and
push
mov
dec
jae
je
jne
xlat
xor
mov
lret
jecxz
inc
add
dec
into
ret
xor
stos
rolb
les
pop
push
xchg
out
adc
shrb
and
idivl
xlat
inc
mov
pusha
inc
push
ds
jbe
mov
les
add
and
push
ds
adc
fs
loope
je
inc
movsl
outsb
jb
adcl
jo
cli
xor
outsl
sar
inc
jne
xor
repnz
clc
push
mov
xor
and
jle
mov
sbbb
out
ret
mov
icebp
je
std
mov
mov
cmpsl
popa
inc
adc
shr
push
jb
subl
inc
mov
sub
jb
push
adc
and
and
aam
je
ds
inc
movsl
les
inc
mov
pop
mov
jl
xchg
xlat
mov
shr
and
cmp
imul
inc
jb
dec
lahf
aam
rcll
mov
push
mov
les
out
pusha
push
xorb
push
mov
sarl
inc
pop
cmpsb
pop
mov
loope
pop
dec
cs
add
aam
in
adc
jge
mov
loope
rcpps
and
mov
jge
pusha
and
andb
push
jp
aas
push
jns
jbe
inc
icebp
inc
cmp
and
inc
pop
cmp
push
sahf
in
lret
sub
add
sti
imul
xorl
rcrl
out
rcll
lock
inc
and
mov
xor
dec
cmp
cmp
fs
js
fbld
mov
dec
fwait
ljmp
mov
xor
add
das
loopne
aam
out
bound
outsb
lahf
push
divps
add
aam
adc
xorb
andb
ljmp
fsubs
mov
adcb
sbb
jno
push
bound
sbb
popa
xchg
in
push
push
cs
mov
mov
push
loope
push
adc
bound
inc
pop
aam
xchg
in
push
jnp
jmp
mov
fdivrl
jb
into
sbb
ret
add
jno
out
addr16
jo
lock
les
push
rcl
adc
gs
stos
sbb
outsb
and
mov
xchg
add
je
jb
or
addl
pop
mov
mov
adc
sub
imul
push
mov
inc
sbb
fs
divl
mov
pop
add
inc
or
push
popa
adc
push
int
mov
sub
dec
shlb
inc
cmpsl
icebp
xor
adc
imul
jae
shrl
add
push
push
mov
cmpl
xchg
add
adc
repnz
xor
push
dec
adc
xchg
pop
popa
add
mov
ds
mov
cmp
adc
fs
pop
push
inc
cs
fdivp
inc
jno
mov
ljmp
jae
jmp
xchg
int3
outsb
imul
aas
mov
xchg
xchg
mov
push
call
shll
sub
pop
in
push
mov
adc
xchg
ds
mov
xor
inc
les
jle
and
loope
push
inc
popa
xor
dec
ss
sub
mov
jae
adc
sub
jno
into
adc
je
jecxz
adc
xchg
jo
loopne
pop
out
adc
popa
and
icebp
rcll
dec
fdivs
cs
call
pop
bound
mov
and
ja
mov
addr16
mov
test
mov
xchg
push
and
push
inc
and
mov
pop
loop
and
xlat
dec
shr
pop
pop
inc
mov
jle
mov
movsl
mov
jmp
mov
pop
mov
jmp
mov
cmp
or
cli
cmp
lock
and
and
adc
jp
arpl
shll
push
push
test
in
test
adc
mov
xorl
xor
push
mov
mov
and
loope
pop
and
imul
inc
mov
out
nop
inc
mov
dec
mov
adc
jno
bound
or
aam
mov
xchg
and
fs
int
scas
xchg
les
jo
cmpsl
xlat
cmc
lea
cmp
ds
xchg
xor
and
push
push
repz
push
in
dec
xchg
div
pop
xor
icebp
out
add
out
data16
ret
imul
push
inc
out
jne
pop
shll
ljmp
jns
jae
pop
inc
add
push
push
jecxz
test
sahf
arpl
push
add
in
ljmp
cmp
jnp
push
xor
sahf
mov
popa
es
xor
jbe
ret
sub
push
cmp
sub
sub
lahf
mov
inc
mov
inc
jl
xor
mov
mov
or
imul
push
rcl
xchg
mov
jcxz
add
mov
mov
in
sub
sahf
push
js
add
jge
imull
cwtl
add
into
test
popa
mov
add
shl
ret
jle
xchg
sti
out
push
popa
pop
lcall
and
inc
adc
cltd
xchg
xor
rolb
xlat
daa
push
ds
mov
push
cli
adc
cli
cmc
push
push
fistpl
push
xorb
push
in
mov
adc
mov
and
daa
sub
sahf
dec
mov
popa
sbb
push
pop
and
aam
mov
call
into
xlat
push
mov
call
mov
lds
mov
jno
nop
xlat
in
cli
shr
adc
mov
push
and
xor
push
je
xlat
push
inc
mov
sbb
mov
fwait
repnz
mov
mov
mov
xor
lea
loop
mov
inc
repz
or
xor
pop
push
mov
and
fs
add
outsb
insl
adc
rcll
loop
call
lods
jmp
mov
cmpsb
jb
jle
pop
roll
push
mov
push
adc
sbb
sub
and
in
xor
push
adc
sub
jae
mov
outsb
push
inc
adc
out
je
push
adc
mov
mov
xchg
out
shl
popa
xor
xchg
mov
dec
cwtl
ljmp
push
jle
adc
popa
mov
jne
mov
inc
mov
das
loop
out
je
sub
fiaddl
pop
shl
in
and
jle
add
inc
shlb
add
lret
je,pt
push
cs
xchg
pop
popf
scas
xchg
loope
in
jo
sahf
out
mov
jb
xchg
je
mov
sub
mov
mov
rclb
outsb
bound
ljmp
mov
subl
adc
or
sbb
and
iret
and
inc
bound
dec
stc
dec
inc
dec
mov
inc
cmpl
adc
out
loop
call
adc
push
pop
ds
bound
dec
stos
repz
and
pop
mov
xor
in
iret
rcl
popf
pop
and
xchg
adc
icebp
cmp
xchg
mov
mov
out
shlb
jp
fsubl
adc
and
mov
and
jae
stos
dec
jne
xor
arpl
hlt
jp
adc
addb
xchg
mov
jae
push
rolb
dec
rcl
and
inc
xor
xlat
jae
std
inc
mov
push
mov
adc
loope
out
push
into
shl
push
sub
mov
adc
mov
mul
arpl
dec
ds
add
stos
xor
sahf
rorl
adc
aam
je
stos
push
adc
pusha
out
sbb
jle
popa
negl
and
xor
ds
xor
in
add
scas
adc
inc
mov
or
xlat
out
adc
mov
shr
push
test
je
xor
cld
pop
adcl
das
xor
scas
mull
into
xor
push
fisubrl
push
cmp
dec
sarb
cmp
jne
mov
adc
mov
sub
je
add
mov
into
pop
adc
sbb
push
sti
push
lods
lods
inc
je
jle
cli
jmp
xor
icebp
cwtl
jne
rorb
enter
jae
inc
icebp
dec
push
repz
jmp
rcll
fcompl
mov
nop
or
mov
ret
pop
xor
add
loop
repz
into
icebp
ds
icebp
popa
and
and
dec
pop
mov
push
mov
jecxz
mov
addl
fs
mov
jmp
and
addr16
rolb
test
jmp
inc
adc
xchg
xchg
out
and
jmp
mov
shll
xor
push
inc
xlat
jns
mov
dec
sbbl
inc
jmp
sbb
out
andb
adc
lcall
call
dec
in
jo
jne
icebp
mov
push
daa
rorb
add
fst
xor
popa
orb
into
xor
inc
xchg
push
es
xchg
adc
ret
xlat
push
dec
or
andl
ss
push
push
div
push
cmpl
sub
mov
daa
rorb
mov
inc
push
arpl
xor
sarl
mov
xor
dec
jle
mov
xor
mov
cmpsb
push
ja
out
frstor
sub
outsb
push
cmp
xlat
lds
fiadds
repz
xor
mov
icebp
adc
in
into
addl
jb
nop
shlb
ficoml
xor
pop
imul
sarl
loop
repz
xchg
in
sbb
sub
jne
xor
push
push
dec
jecxz
xchg
rclb
jne
loope
testl
or
pop
rcl
in
push
aas
scas
fsts
jb
bound
jle
insb
es
add
xor
lahf
sbb
bound
pop
subb
xor
outsb
xor
lahf
jno
and
sbb
shr
sarb
loop
sub
add
xlat
adc
addr16
std
adc
mov
stos
jae
push
xlat
scas
jl
rcrb
dec
out
adc
push
inc
mov
add
pop
and
outsb
jae
xor
mov
outsb
push
push
xlat
adc
mov
and
pop
mov
fdivrl
sub
xchg
cmpl
in
or
jae
jb
lcall
je
xchg
xor
testl
dec
and
in
jae
les
inc
cmp
subl
and
lock
es
xlat
arpl
pop
jl
shl
adc
pop
aad
sbb
xor
mov
mov
popa
and
into
sarl
inc
jo
inc
xor
add
mov
leave
je
cld
mov
inc
icebp
xor
push
inc
xor
dec
insb
shll
les
inc
jle
and
movsl
adc
rol
jmp
out
fsubs
outsb
dec
int3
inc
popf
das
int
in
xlat
out
xchg
mov
mov
adc
push
test
cmp
mov
and
fwait
out
lret
into
roll
aas
jle
add
adc
popa
jns
push
insl
jg
es
inc
dec
mov
add
adc
pop
mov
and
add
repz
or
add
mov
out
mov
push
cmc
xor
mov
mov
adc
sub
jecxz
arpl
repz
jb
adc
mov
in
adc
pusha
andl
loope
addl
adc
xchg
js
rolb
xlat
inc
icebp
call
loopne
jno
daa
and
xchg
imul
mov
andl
pop
and
push
das
loopne
xor
repz
rcrb
and
mov
mov
jb
ljmp
mov
imull
add
xchg
push
loope
push
les
xor
outsb
pop
xlat
ret
ljmp
jb
orl
mov
push
mov
add
dec
xor
pop
jo
sahf
xor
outsl
adc
mov
xchg
das
mov
out
xlat
jae
ret
ds
mov
movsb
mov
pop
adc
sbb
sub
jge
mov
ret
jo
out
andl
cmpsl
rol
sub
mov
xchg
daa
gs
dec
inc
inc
aas
jge
xor
push
shll
out
xorl
xchg
jae
mov
jecxz
cwtl
pop
inc
mov
ds
call
dec
mov
out
negl
add
stc
mov
aaa
xor
ret
push
fdivs
jg
add
movsb
jle
lahf
loop
adcb
push
jno
les
call
and
test
sub
dec
loop
and
xchg
pop
mov
sub
adc
inc
cli
and
in
sti
or
jecxz
mov
add
jne
cld
xchg
cmc
adc
and
mov
sbb
mov
xor
int
and
and
mov
mov
cmc
mov
jns,pt
not
mov
clc
pop
or
sti
and
lods
stos
in
mul
mov
sbb
mov
loope
add
push
loope
bound
xor
imul
mov
mov
jb
mov
decl
fimuls
xor
mov
add
push
or
movsb
enter
iret
xor
idiv
mov
popa
xor
sahf
mov
out
xor
push
mov
bound
test
icebp
or
xlat
je
and
inc
fcoms
mov
jge
xchg
adcl
hlt
popa
cmc
clc
into
or
mov
daa
mov
cs
dec
xchg
mov
or
mov
hlt
add
out
rclb
bound
adc
push
and
jle
mov
cmpb
xchg
je
and
jecxz
xor
adc
les
fs
jb
push
inc
jmp
push
push
pop
adc
mov
fcoms
push
xchg
repnz
jle
inc
or
push
xor
cmc
xor
and
lock
adc
cs
fsts
test
jl
sub
jge
sbb
fcmovb
addl
mov
fisubrs
fs
popa
add
cmp
aad
cs
je
lods
push
jle
addr16
dec
fidivs
jns
jle
fadd
mov
mov
mov
inc
in
inc
and
push
xchg
push
xor
jne
shr
add
les
xchg
repz
and
push
sub
mov
mov
xchg
mov
lock
loopne
adc
mov
jno
jb
mov
daa
into
xor
and
scas
cmp
or
sub
xor
in
imul
mov
int3
mov
push
fcoml
out
orb
jne
je
ret
rcll
mov
mov
add
jno
jmp
mov
mov
sub
fidivs
and
shll
ljmp
inc
shrl
fmuls
repz
or
pop
addl
cmp
or
bound
data16
adc
jmp
mov
jne
xlat
repz
mov
fsubl
out
jp
and
mov
mov
in
cmp
xlat
inc
xor
push
mov
mov
rol
pusha
mov
and
dec
out
jmp
jbe
cmp
int
adc
sub
cmpsl
repnz
repz
divl
adc
cmp
push
add
mov
idivl
push
popa
adc
int
shll
inc
mov
sub
mov
sub
and
and
inc
add
sub
and
mov
and
sarl
loop
outsb
push
xchg
push
and
push
stc
test
xchg
pop
xor
je
dec
or
loope
cmpsl
loope
jg
daa
mov
mov
push
mov
out
pop
shlb
loope
icebp
mov
ret
sub
out
push
push
roll
xor
ds
jo
shll
bound
imul
inc
cs
lock
push
arpl
orl
lds
jle
shlb
xchg
adc
and
mov
mov
add
je
pop
jne
xchg
inc
in
lret
xchg
ljmp
jo
out
pop
and
arpl
and
mov
add
xchg
add
dec
std
xor
or
ret
out
roll
out
sbb
push
mov
jns
add
aam
je
mov
add
xor
shll
orb
div
xchg
iret
loop
push
in
jns
push
push
and
in
aaa
xchg
push
daa
mov
xchg
out
scas
mov
ja
jo
lock
fiadds
cltd
sub
out
jno
add
inc
add
jge
push
and
pop
je
js
mov
push
jno,pn
xorl
jae
xorl
and
cmpsb
xor
dec
adc
icebp
mov
loope
into
popa
sbb
inc
add
test
jae
out
fimuls
repnz
jle
push
ret
mov
loope
cmpsb
test
mov
movsl
mov
arpl
or
adc
lock
out
mov
shll
je
inc
sub
cmp
aad
insl
into
dec
inc
mov
repz
fildl
dec
flds
dec
and
push
lock
dec
and
outsb
jmp
xorb
pop
inc
jns
mov
hlt
xchg
add
mov
shll
and
push
fs
mov
mov
and
cmp
mov
pop
xlat
mov
inc
mov
ljmp
stos
adc
jecxz,pn
xor
inc
fcmovne
cmp
mov
xor
push
mov
outsb
sarl
xchg
mov
scas
inc
cs
jecxz
mov
push
cli
pop
mov
int3
xor
xor
sub
out
add
mov
je
adc
lea
outsl
test
cmpsb
cs
dec
popa
ret
mov
pop
ds
dec
sar
pop
sbb
out
cmpb
outsb
dec
cmp
ds
sbb
ret
arpl
cs
lret
inc
scas
and
cmc
mul
dec
dec
inc
cmp
adc
add
push
and
addr16
inc
dec
sbb
mov
jge
and
xchg
fisubl
rolw
xor
je
shl
testb
ret
adc
jb
mov
shlb
jns
push
ds
scas
repz
adc
jb
add
add
shll
pop
xchg
cs
ljmp
xor
je
mov
xlat
mull
mov
clc
ds
cmp
cmpsl
xor
faddp
scas
xchg
jle
loop
xor
fdivrs
xchg
mov
fst
xor
call
and
stos
inc
mov
bound
push
xchg
out
in
pop
inc
adc
add
rcrl
les
mov
aad
sahf
outsl
inc
inc
add
hlt
lods
in
xor
orl
cs
arpl
and
into
cs
ds
xor
push
je
mov
test
aam
mov
mov
and
mov
rclb
les
jae
sub
test
push
cmp
mov
jmp
popa
pushf
out
mov
xlat
adc
jecxz
push
xor
jge
mov
xchg
aam
cmpsl
mov
and
add
adc
push
adc
mov
adc
xchg
lea
dec
push
call
mov
insl
test
add
and
inc
xchg
out
adc
cmp
mov
jmp
addl
and
not
sbb
push
fwait
fs
decb
subb
fimuls
cli
cmc
and
adc
ds
ret
push
xlat
mov
and
scas
sbb
push
add
xor
dec
jno
mov
mov
mov
dec
jecxz
test
and
xor
cmp
push
adc
jae
fs
and
jns
or
adc
ljmp
dec
dec
into
outsb
je
mov
mov
push
xor
jecxz
andl
roll
mov
add
mov
or
fwait
cld
dec
dec
es
test
and
dec
ds
mov
div
jle
into
fistl
jno
shlb
cmpsb
adc
outsl
imul
cmp
inc
cs
dec
icebp
push
pushf
mov
sbb
loopne
shrl
add
mov
mov
jle
pop
and
sarb
push
loopne
shr
out
jecxz
jmp
in
mov
cwtl
push
adc
fiadds
enter
push
add
fistps
clc
stc
mov
pop
jne
cli
loop
jecxz
outsb
push
dec
and
xor
xchg
mov
addb
mov
dec
and
jmp
jmp
xchg
xor
mov
in
cmp
sbb
add
outsl
cmc
enter
cmp
mov
xchg
popa
jnp
push
and
xchg
lds
pop
jne
adc
cmp
dec
and
cmpsb
loope
fs
mov
push
std
xor
add
clc
xchg
rcll
dec
pop
lock
adc
rolb
push
lret
xlat
out
data16
pop
sbb
lock
adc
mov
xchg
dec
and
jmp
jae
into
cmpsl
jno
sbb
ret
mov
sub
pop
and
ljmp
push
jecxz
and
je
xchg
pop
adc
addr16
nop
xchg
adc
mov
xchg
ds
fmuls
push
sbb
sbb
scas
add
jle
push
dec
repz
push
xchg
mov
or
les
idiv
sbb
in
inc
and
scas
push
push
adc
cwtl
and
imul
fcmovnbe
or
inc
mov
add
out
push
xor
shll
and
dec
xor
into
ret
divl
fs
push
push
fprem1
adc
mov
inc
les
popa
add
push
orl
jle
push
adcl
dec
push
and
push
or
xor
pop
aam
ret
xchg
out
loope
xorl
adcb
xchg
add
popa
in
popa
pop
and
scas
out
add
pop
sarl
invd
pop
fisubrs
popf
fdivp
fs
fcoms
aam
jno
and
loope
push
scas
add
loopne
repz
pop
mov
jle
test
scas
bound
icebp
mov
mov
adc
and
fiadds
xor
adc
roll
pop
icebp
xlat
sub
and
cld
sub
addl
outsb
push
imul
sub
nop
jp
loop
icebp
and
leave
dec
jns
add
loope
push
icebp
out
jle
pop
aam
scas
add
and
and
mov
adc
xchg
mov
aad
jnp
je
ficoml
cmp
xlat
mov
dec
repz
jae
cmp
dec
in
pop
sub
data16
shlb
xchg
xchg
jp
lods
lock
adc
roll
jne
push
mov
mull
mov
rcrl
popa
sbb
stos
andl
iret
test
ret
jge
mov
jecxz
add
sbbl
sub
xor
jne
mov
sti
in
aas
clc
inc
dec
shrl
mov
shlb
mov
or
ljmp
adc
mov
stos
in
sub
jmp
cmpsl
outsb
fs
push
rsqrtps
cmp
loopne
stc
adc
je
inc
adc
mov
in
roll
inc
mov
xchg
and
ret
cmp
in
dec
je
mov
repnz
mov
loopnew
push
loopew
in
push
jle
call
dec
or
sub
popa
mov
adc
or
fsubp
pop
arpl
mov
es
xlat
psllw
xor
lock
into
jo
daa
mov
andb
lock
adc
adc
inc
addr16
mov
call
je
repz
and
and
mov
xlat
into
roll
lds
push
shll
add
bound
loope
je
into
and
jmp
mov
fimull
inc
mov
add
jmp
mov
jb,pn
sbb
inc
adc
rorb
movsb
mov
and
dec
push
or
sbb
shll
daa
mov
xlat
pop
les
and
fisubrs
mov
fs
mov
test
xor
and
fs
mov
xchg
cli
add
stos
inc
shl
out
inc
mov
jb
xor
lods
push
and
rclb
aad
sub
les
in
ds
jae
xorl
pushf
mov
ret
push
push
roll
push
mov
xor
ljmp
dec
xor
je
xlat
sub
mov
jno
test
jb
jp
xor
shl
jl
add
in
dec
pextrw
xchg
adc
lcall
inc
add
icebp
xor
mov
call
inc
dec
adc
inc
inc
add
mov
jns
cmp
jecxz
sub
and
cld
repz
dec
daa
xor
adc
enter
out
adc
mov
negl
imul
outsb
das
divl
in
test
jne
jae
and
mov
sahf
sbb
ja
push
fildl
fnstenv
icebp
cmp
nop
dec
adc
mov
push
mov
out
xor
add
fistpll
fucom
je
and
and
ljmp
loopne
push
jmp
sar
and
ljmp
pop
xor
or
sbbl
mov
ljmp
jle,pn
and
xor
pop
xchg
inc
or
add
mov
shl
mov
mov
jecxz
and
hlt
and
xor
jle
jns
sbb
sub
inc
inc
repz
lahf
xor
in
mov
or
lds
fs
mov
xor
ret
popa
xchg
mov
mov
jno
jge
mov
mov
adc
outsb
jb
jecxz
scas
icebp
popa
add
out
je
adc
icebp
push
in
push
in
cmpsb
out
imul
inc
inc
add
repz
xor
push
add
xor
and
mov
fdivrs
divl
subb
ret
push
mov
jo
in
dec
notl
lcall
and
mov
cmp
xchg
ret
inc
mov
out
cmp
sub
ficomps
and
jb
jbe
pusha
jecxz
mov
and
test
xorl
or
ljmp
shl
and
sub
cmpl
repz
mov
jae
pop
lea
in
lock
popa
popa
mov
popa
and
jae
andb
push
jno
stc
adcl
mov
push
adc
add
aas
aam
sbb
loope,pn
imul
jmp
out
icebp
sbbl
subb
xor
adc
arpl
call
jecxz
fdivl
mov
shrl
bound
jbe
bound
xor
repz
ret
mov
fs
push
xchg
and
mov
popa
jle
mov
scas
push
popa
xor
rol
mov
xchg
popf
pop
inc
pop
xlat
lret
fcmove
rcll
jne
cmp
loope
and
cs
add
inc
push
pop
fmull
js
xor
xor
xchg
outsl
andl
outsl
popa
adc
cmp
xlat
inc
sub
xorl
jno
push
xor
mov
add
cmp
mov
fs
xchg
inc
outsl
xor
push
outsb
and
and
arpl
adc
add
rclb
xor
mov
mov
inc
insb
clc
bound
imul
sti
test
psrld
inc
iret
adc
sub
jae
push
mov
push
in
cli
rcll
jle
dec
movntq
call
lea
popa
imul
rcrl
arpl
and
inc
xor
in
mov
pop
push
jae
cmp
sub
mov
add
fistps
add
or
lcall
outsb
lret
popa
push
rcll
xlat
jne
and
sbb
lds
les
outsb
shll
addb
add
into
mov
ret
fidivl
adc
leave
jne
mov
iret
repz
mov
lgs
and
ljmp
rcrl
inc
popa
adc
ret
cmpps
adc
mov
xor
pop
cmpsl
xlat
icebp
sub
push
mov
test
add
mov
add
mov
fimull
inc
adc
imul
loope
sub
notl
in
sbb
pop
and
xlat
sbb
dec
mov
pop
popa
icebp
in
push
jae
imulb
mov
xchg
push
xor
ja
mov
adc
inc
or
jmp
mov
xor
loop
adc
mov
jne
mov
shlb
test
xor
notl
push
push
add
arpl
dec
rcl
dec
mov
in
add
xor
loope
fs
cs
mov
inc
jp
mov
ret
sbb
cmpsl
inc
ret
inc
xor
add
add
fidivrl
xchg
out
and
mov
jmp
mov
repz
out
push
mov
int3
adc
roll
sub
push
push
in
adc
mov
clc
mov
xor
xorl
push
in
pop
icebp
out
arpl
and
push
loope
and
xchg
cltd
mov
xchg
sti
divb
fs
inc
jecxz
ja
jnp
into
repz
stos
xchg
xor
and
xchg
subb
repz
rolb
out
cmp
adc
xor
or
inc
loope
jle
ret
repz
cmpsl
xor
and
popa
daa
cmp
cmpsl
mov
adc
sahf
lods
mov
mov
adcl
jae
insl
adc
ret
inc
loope
jl
fimull
adc
bound
std
add
sbb
mov
das
ja
outsb
xor
xor
cmc
pop
pop
rcr
dec
jae
mov
rolb
mov
loope
mov
out
rclb
jle
or
sahf
or
mov
ret
mov
push
jno
mov
mov
imul
sbb
add
add
add
add
out
xchg
inc
push
inc
popa
mov
push
inc
xor
xor
test
scas
sub
mov
mov
jno
sub
divl
push
in
mov
scas
push
loopne
add
inc
mov
jbe
notl
mov
sub
popa
aam
xor
test
xor
pop
jbe
hlt
sti
xor
inc
fcomps
adc
je
pop
inc
push
cmpsl
into
sub
and
inc
and
in
es
shll
mov
in
cmp
je
push
rcll
test
repz
dec
push
push
aas
cmc
cmp
repz
and
negl
inc
sbb
push
pop
and
jne
rol
xor
movsb
std
cwtl
jno
mov
cmp
push
mov
xor
push
inc
inc
int
insb
in
rclb
adc
jle
push
add
fimull
into
lods
bound
popa
stos
adc
in
fwait
push
mov
adc
cmp
push
push
dec
dec
rol
add
fnstcw
and
rorl
xchg
icebp
in
mov
xchg
insb
cmp
cmc
bound
hlt
icebp
inc
mov
xchg
push
movb
sbb
xlat
xorl
push
and
div
cmc
jae
outsl
ds
and
push
inc
push
inc
cmpsl
jnp
push
orl
addl
mov
mov
mov
test
push
popf
test
flds
adc
mov
or
ret
in
jecxz
jae
mov
xchg
js
pop
xor
xlat
adc
inc
mov
popa
ret
or
and
bound
bound
push
mov
out
push
and
jcxz
inc
dec
mov
in
xor
xor
jo
mov
jecxz
rcl
or
loop
add
mov
sarl
and
xlat
mov
mov
data16
stc
das
jge
mov
inc
adc
mov
inc
push
xor
dec
inc
xor
pushf
ljmp
push
js
cs
and
sub
out
push
outsb
xchg
push
imull
xchg
sub
mov
jecxz
loope
outsl
inc
add
ret
sarl
inc
out
les
das
and
in
or
insb
insl
mull
out
sbb
sub
dec
dec
cmc
stos
mov
jge
jle
out
push
and
mov
or
xor
cld
std
push
mov
les
ljmp
aas
loope
jg
jne
adc
mov
mov
shrl
into
stos
jb
dec
cs
jo
adc
popf
xchg
mov
out
mov
or
stc
jae
mov
aas
inc
inc
mov
mov
addr16
loopne
inc
pop
subl
lock
ds
into
add
dec
orb
push
nop
xchg
sbb
popa
loopne
ret
or
mov
add
mov
repz
clc
mov
out
mov
mov
mov
iret
push
push
sub
aam
inc
shrl
in
push
mov
popl
adcl
popa
shlb
push
jecxz
and
std
in
sub
negl
mov
das
movsb
dec
mov
aam
mov
xchg
adc
cmp
mov
inc
bound
xchg
out
pop
outsb
subb
mov
and
outsb
je
shlb
imul
push
dec
xorl
mov
clc
inc
jae
add
jge
fdivr
jle
lfs
repz
pop
xchg
out
push
ret
je
dec
mov
loope
mov
pop
scas
testb
adc
or
mov
out
mov
outsb
mov
cli
and
sbb
cmpsl
xor
dec
pop
mov
or
and
lods
xchg
and
leave
out
inc
push
out
jno
push
rcrl
aas
fcoms
jmp
popa
popl
inc
in
insb
out
cmc
lcall
cmp
push
dec
cmp
xor
and
les
and
adc
push
xchg
je
popa
notb
dec
sub
insb
inc
cs
xchg
roll
das
mov
cmp
push
rclb
mov
inc
push
mov
stc
dec
jb
ljmp
add
adc
sbb
stos
or
xchg
jb
pop
ret
in
cmp
mov
popa
add
inc
adc
mov
popf
mov
les
pop
cmpsb
in
out
cs
out
cmpsl
ds
and
and
cmc
out
pushf
sub
push
fdivl
dec
movsl
mov
mov
add
ret
adc
rorb
rorl
mov
loope
loope
imul
jae
nop
jno
sub
xchg
cs
jle
xchg
jne
inc
xor
sbb
or
or
shl
fdivl
adcb
mov
in
add
xlat
adc
xchg
lret
cmp
ds
cmp
insb
mov
pop
inc
sbb
jecxz
icebp
mov
xor
andl
popa
repz
rorl
mov
dec
mov
cld
pop
mov
popa
adc
and
mov
add
and
or
addb
push
adc
scas
cs
fwait
out
mov
mov
mov
movsb
fld
xorb
popa
lock
jge
subl
jg
ljmp
fs
adc
xchg
xlat
aad
add
pop
les
mov
push
fs
sbb
pop
xlat
ror
inc
push
dec
stos
sub
pop
mov
xor
loop
mov
push
push
push
cmpsl
xorl
add
jo
enter
insb
fucompp
adc
sbb
or
push
jns
and
ds
dec
popa
xor
mov
bnd
xor
bound
cmp
mov
bound
lea
adc
sarl
test
out
mov
rcll
rorl
dec
jmp
pop
in
sahf
push
sub
mov
stos
add
insb
fs
dec
sub
or
das
sub
sub
dec
push
ljmp
jno
mov
push
fs
ret
sbb
gs
xor
mov
mov
mov
sbb
int
sub
bnd
and
rclb
inc
ljmp
es
sub
test
mov
lds
sbb
inc
dec
inc
out
xor
mull
lret
dec
addr16
out
dec
bound
xchg
inc
xor
fwait
jl
cmp
mov
je
xchg
imul
push
adc
cmp
ljmp
sbb
xlat
lods
imul
dec
add
cmp
xchg
jb
lret
adc
push
popa
push
inc
dec
hlt
lock
loope
jno
jmp
stos
inc
js
into
jns
mov
insb
fmulp
and
push
xor
push
jae
jb
mov
hlt
arpl
mov
out
mov
mov
push
addb
popf
inc
mov
fimull
mov
mov
dec
xchg
out
aaa
lret
xor
sub
ljmp
cmp
repz
out
push
push
adc
in
je
adc
inc
pop
leave
clc
mov
subl
add
push
mov
mov
add
imul
sub
and
stos
add
push
gs
cmc
xorb
cmc
imul
xor
pop
sub
clc
bound
mov
insl
jle
cmp
hlt
sahf
adc
imul
xchg
cmc
jle
xchg
insb
outsb
out
icebp
push
idivl
mov
pop
adc
and
popa
lret
inc
push
sub
or
add
notl
add
mov
inc
lret
mov
adc
and
ljmp
clc
js
out
inc
sub
dec
je
inc
xchg
daa
dec
push
pop
push
inc
push
outsb
and
sbb
clc
adc
push
add
cmp
fidivl
xlat
or
ljmp
ss
and
shll
bound
and
repz
pop
inc
popl
stc
lahf
lds
jno
mov
rclb
sarl
popa
and
arpl
out
inc
andb
shll
sarl
icebp
popa
sbb
js
sub
add
mov
divps
inc
jle
and
lret
mov
adc
fiaddl
out
mov
cmpsb
outsl
js
and
mov
push
and
mov
ja
xorl
adc
adc
sbb
mov
jb
shll
in
in
mov
sahf
repnz
je
fcomi
push
jmp
jno
ret
test
adc
sbb
xlat
dec
dec
mov
mov
testl
inc
dec
add
outsb
jne
xor
out
inc
dec
mov
loopne
cs
xor
cmpb
shrb
mov
mov
into
xchg
adc
cmp
je
push
add
xchg
add
cwtl
shrl
pop
and
xchg
and
sarb
mov
lret
inc
mov
adc
adc
hlt
aas
and
adc
jne
shl
dec
je
sub
jo
in
inc
repz
icebp
jle
hlt
adc
dec
mov
in
or
jecxz
and
int3
add
ds
enter
xchg
out
pop
popa
and
out
sbb
mov
andl
push
push
aaa
jle
rolb
out
shll
mov
in
adc
into
cs
int3
loope
add
pop
icebp
xchg
rclb
daa
aam
mov
push
ds
mov
cmpsb
jmp
ret
lock
fs
dec
jge
cmp
push
push
inc
out
loop
mov
cltd
jmp
out
ret
xlat
dec
bound
xor
xchg
les
cli
es
xor
repz
jecxz
mov
adc
rcl
icebp
xlat
loope
inc
outsb
out
lock
daa
shll
push
mov
push
imul
test
adc
dec
xchg
sarl
fldl
je
out
rorl
bound
adc
mov
xor
popf
and
and
adc
ret
ficoml
adc
add
orl
push
fs
dec
bound
icebp
dec
pop
or
mov
inc
les
push
imul
sub
bound
ret
mov
jge
inc
xor
jns
incl
inc
and
adc
ljmp
jb
js
dec
popa
mov
imul
mov
sti
add
sub
ds
add
jns
inc
xor
bound
in
and
and
push
jne
outsb
lcall
push
ret
shll
add
push
arpl
lods
rorl
fs
rorb
popa
jae
pop
push
pop
into
test
repnz
add
cwtl
leave
enter
mov
pop
mov
lods
das
cld
into
push
mov
and
mov
std
shll
sti
mov
jne
jecxz
and
and
scas
mov
add
or
popa
adc
cs
and
and
sbb
add
ret
test
bound
repz
test
push
lret
movsb
jno
xchg
xor
pop
dec
sar
fs
out
mov
xor
mov
push
inc
loope
dec
sub
adc
imul
into
insb
inc
mov
add
jne
shll
andb
cmpsl
mov
insl
cwtl
dec
lret
cmpsl
rcr
adc
ret
inc
pop
jno
sahf
xchg
mov
mov
push
dec
xor
xchg
mov
lret
pop
xchg
push
ljmp
inc
and
lret
add
out
push
bound
jne
jecxz
popa
inc
mov
pop
jae
pop
test
lret
loopne
fdivrl
xlat
adc
add
push
xor
sub
fdivp
and
stos
sub
push
les
pop
mov
add
xorb
testl
add
fidivs
jecxz
xor
jno
rorl
testl
or
jge
movsb
es
jne
and
inc
jle
rep
sahf
jge
out
xchg
adcl
aad
push
out
dec
es
or
push
scas
mov
xchg
out
outsb
adc
fs
mov
adc
dec
mov
lcall
mov
xchg
push
jne
into
mov
sub
mov
jp
adcb
jge
xor
push
mov
outsb
bound
jg
push
xchg
mov
add
mov
pop
dec
sbb
loope
push
rorl
cmp
push
lock
push
outsb
and
mov
xchg
addr16
mov
ficompl
arpl
adc
mov
test
inc
div
fidivrs
nop
pop
cmp
in
xor
mov
imulb
xor
decl
out
cmc
mov
orl
imul
jo
subb
xor
mov
add
sub
xchg
push
push
jle
sub
add
or
or
test
out
ds
xchg
arpl
loope
xor
popa
mov
add
push
mov
cmp
mov
movsl
add
inc
outsb
dec
mov
in
jbe
shrl
push
jno
mov
cmp
mov
dec
shl
mov
outsb
in
bound
add
sub
and
add
dec
outsb
jno
jle
shll
adc
jl
mov
mov
pop
add
mov
loopne
orb
addr16
int
push
cmp
inc
push
ficoml
call
inc
pop
push
sub
jge
icebp
jg
jecxz
out
ret
xchg
adc
ret
std
add
inc
or
addr16
add
add
push
jb
and
sub
inc
push
popa
xchg
mov
mov
jg
push
and
push
ret
cmp
pop
pop
roll
add
xchg
dec
out
outsb
lods
jo
js
xor
and
dec
cmp
mov
lock
ds
lock
xor
add
imul
jecxz
out
ds
adc
mov
inc
cmp
sbb
sub
ret
dec
andb
imul
sub
jle
loopne
inc
nop
and
pop
add
add
popa
add
push
inc
mov
xor
mov
into
push
popa
adc
clc
mov
add
or
dec
jecxz
es
clc
lahf
pushf
mov
push
push
fs
pop
jne
xor
inc
mov
mov
insl
xorb
xor
dec
mov
mov
outsl
push
push
xchg
sub
jae
daa
mov
es
adcb
cmp
jbe
push
imul
mov
cmp
repz
push
dec
bound
lea
xor
push
arpl
bound
push
rorl
mov
cmp
push
je
or
loope
inc
jb
mov
pop
add
sub
inc
stos
push
cmpsl
adcl
xchg
mov
std
mov
mov
ret
shrl
in
cmp
xor
mov
dec
in
adcb
aam
push
inc
mov
les
and
inc
jno
adc
pop
bound
insb
daa
outsb
xchg
sub
mov
add
xchg
shlb
mov
pop
pop
hlt
leave
ja
mov
jae
push
xor
sbb
jecxz
push
ljmp
dec
pop
and
pop
into
inc
in
mov
adc
repz
ja
mov
push
xlat
movb
and
pop
adc
arpl
out
jmp
testl
pop
mov
fs
adc
sub
xlat
je
rcll
lods
roll
mov
ret
loope
mov
pop
mov
arpl
adc
inc
shll
xorb
mov
lret
adc
inc
add
xchg
std
inc
mov
loop
inc
frstor
mov
icebp
xlat
sub
pop
add
adc
xchg
mov
out
rcl
xor
jle
mov
fs
add
stos
dec
ret
daa
jb
jmp
adc
or
call
and
repz
inc
lret
xchg
mov
sarl
dec
je
out
mov
enter
insl
adc
xchg
xchg
repz
xlat
insb
lods
out
push
add
sub
loope
xor
pop
rcl
ds
and
fs
inc
les
inc
fcoms
ljmp
cwtl
bound
mov
mov
xor
in
jbe
xlat
push
and
and
jae
and
adc
cmp
push
cmpsb
add
jp
push
add
insb
sahf
push
jo
js
xchg
adc
push
rorb
jecxz
rorl
jb
test
mov
dec
out
dec
rorb
xlat
fidivrs
dec
and
push
loope
call
js
cwtl
out
xchg
imul
mov
adc
shrb
cs
push
push
bound
push
bnd
xchg
orl
xor
xor
and
sbb
add
faddl
xor
mov
daa
push
imull
rcll
loope
inc
mov
les
add
fwait
mov
adc
xchg
jge
andl
shll
or
lcall
mov
mov
and
stos
inc
ret
mov
aam
add
addl
outsl
mov
push
push
stos
jecxz
sahf
adc
dec
mov
xchg
xor
rolb
add
shrl
mov
arpl
push
push
ret
aam
jae
adc
mov
in
sbb
xchg
pop
testl
sub
ds
push
cmp
cmp
adc
or
daa
and
shll
outsb
fcoml
lahf
int
int3
movsl
fsubl
mov
jb
fcoms
inc
xchg
into
cmp
mov
jb
out
shll
out
xlat
shlb
call
popa
lods
jno
jle
repz
bound
and
roll
xor
shll
out
loope
add
push
in
arpl
and
inc
fs
rorl
icebp
mov
dec
push
and
shll
sub
ljmp
in
adc
inc
mov
xchg
icebp
imul
ja
cmp
shlb
out
xchg
pop
adc
bound
and
inc
jle
sbb
push
into
inc
mov
xchg
jge
adc
xor
movsb
add
stc
ror
mov
jae
outsb
out
push
push
jle
adc
je
adc
xchg
in
dec
jbe
aam
out
mov
inc
stos
shll
in
mov
cmp
jmp
jmp
adc
pop
push
addr16
mov
pop
out
inc
imul
and
ja
xchg
xchg
out
jecxz
add
adc
inc
adc
es
les
push
lahf
push
sub
loope
inc
nop
andl
add
sub
mov
mov
ds
dec
lea
loopne
lock
and
arpl
adc
jecxz
add
sub
test
popa
mov
xorb
xor
push
inc
xor
repz
or
xchg
out
cs
out
inc
xor
pop
cmp
je
adc
or
test
jae
out
sub
push
xchg
mov
in
cmp
and
aam
ret
add
push
out
dec
mov
test
jmp
rorl
mov
mov
xchg
shr
pop
and
xchg
repz
or
jne
and
or
inc
bound
arpl
push
outsb
in
xchg
scas
cs
mov
jmp
xchg
add
lods
fstpt
mov
rcll
out
cmpsl
cmp
das
out
std
inc
push
xor
cmp
dec
filds
pop
fwait
out
jae
or
shll
jle
jmp
out
inc
and
push
loopne
inc
xor
push
mov
fimuls
repnz
jno
rol
cmpsl
adc
mov
sbb
fs
addr16
mov
adc
xor
cs
fidivs
stos
ret
ss
shl
and
sbb
push
iret
ret
adc
sbb
or
push
inc
adc
popf
daa
gs
add
push
cmc
ret
mov
pop
mov
xchg
loop
push
jae
bound
clc
pop
decl
lods
push
xchg
lea
cmp
int3
xor
hlt
scas
dec
bound
scas
stc
clc
adc
rclb
shrl
pushf
or
shl
aaa
mov
inc
xchg
arpl
jno
cld
and
hlt
cmp
test
sub
sbb
adc
cs
out
mov
icebp
pop
int3
inc
scas
jno
loop
jecxz
out
std
ds
popa
fs
jle
mov
icebp
rol
out
lea
into
dec
loopne
jb
dec
imul
neg
push
and
fxch
sbb
adc
xchg
or
inc
rorl
mov
push
in
mov
fdivs
fcmovnbe
mov
or
adc
fisubrs
icebp
nop
ljmp
jno
jb
sub
inc
sbb
jmp
push
xorl
popa
add
stos
inc
jno
ds
push
mov
mov
loope
and
ret
shll
cmpsl
push
push
xchg
and
bound
push
push
loop
and
add
mov
lret
nop
and
cmpsb
jecxz
xchg
cs
xlat
enter
mov
pop
arpl
push
ja
sub
adc
clc
xor
vmaxss
call
xchg
jae
mov
mov
add
div
ja
mov
out
mov
and
cmp
add
jp
jae
imul
sahf
xor
adc
push
mov
mov
cltd
inc
push
and
out
repnz
out
sub
xchg
inc
xchg
xor
shrl
fidivrl
and
xor
aam
mov
push
push
inc
aas
xchg
xorl
mov
push
arpl
cmp
loopne
leave
shl
push
fadd
push
into
daa
fsubs
push
jmp
daa
mov
pop
ret
js
and
rcrl
outsb
push
ret
mov
sbbl
inc
andb
icebp
divl
adc
es
inc
mov
scas
dec
and
push
mov
inc
add
jo
xchg
stc
stos
fisubs
adc
or
jae
xlat
rep
mov
stos
divb
cmpsb
dec
shlb
loope
push
push
mov
stos
ss
push
push
xor
andb
sahf
je
inc
mov
mov
les
addr16
outsb
dec
icebp
dec
fstps
add
and
fwait
xlat
stos
and
out
xor
push
into
out
subl
jb
xorl
cmpsl
ds
imul
or
inc
out
jle
mov
xchg
jne
into
or
rclb
dec
loop
push
dec
cmc
ret
roll
mov
jle
popa
and
loope
push
cmp
popa
add
dec
sub
add
daa
dec
movsl
xor
adc
mull
mov
test
and
mov
popa
xor
addr16
add
jecxz
mov
pop
push
lds
rcll
stc
fnstenv
subl
push
mov
out
cmpsb
push
call
into
xor
ret
mov
and
xor
cld
arpl
jns
mov
loopne
aad
xor
arpl
push
mov
jbe
jnp
add
and
jl,pt
test
adc
xchg
dec
pop
mov
xor
dec
jae
fiadds
out
out
fs
mov
mov
daa
dec
xchg
imul
aam
adc
dec
xor
jbe
out
mov
shl
jb
sub
mov
adc
xchg
xchg
xor
cmp
add
rolb
add
sub
cmp
jno
or
ss
pop
aam
xor
xor
mov
ret
arpl
aam
outsb
test
jb
mov
and
add
repz
call
lds
and
mov
and
loopne
into
cmp
push
add
out
pop
xor
mov
bound
adc
push
les
shrl
ds
push
pop
inc
cli
jge
inc
sub
fidivrl
add
repnz
lret
xchg
mov
xchg
loope
fidivrs
pop
lea
ret
ds
cs
inc
and
outsb
xlat
xchg
out
mov
add
sarl
adc
faddl
xchg
adc
sub
std
xchg
out
push
and
push
mov
fmul
out
sub
rcrl
pop
mul
and
je
or
adc
cmp
icebp
in
arpl
add
inc
roll
sbbb
orl
and
loop
mov
outsb
ds
adc
icebp
out
and
xchg
dec
loope
test
pop
jae
sahf
and
adc
lcall
out
popa
and
icebp
jle
mov
fadd
inc
jp
loop
mov
dec
mov
pop
ret
loope
jle
outsb
orl
mov
xchg
shll
icebp
fisubs
jle
cmpsb
push
sub
out
jb
mov
inc
xchg
mov
loope
and
cmp
sub
jns
movsb
push
cmp
rcl
and
andb
aas
test
shll
bound
les
icebp
inc
push
je
sub
jb
adc
dec
jne
jle
mov
mov
jne
jno
ds
xor
jno
les
and
lret
bound
outsb
xor
test
mov
mov
mov
xchg
fnsave
sub
jle
mov
dec
scas
mov
xlat
loop
mov
in
jecxz
mov
fsubr
jmp
mov
stos
lock
push
xchg
jmp
popa
into
jle
push
imull
sub
and
and
icebp
and
push
lds
and
push
out
pop
ss
xor
into
jno
xorl
push
pop
popa
out
dec
loope
lds
test
les
loopne
rcll
cmpsl
std
notl
jmp
pushaw
pop
mov
nop
sbb
adc
add
insb
mov
popa
xor
iret
fidivs
jae
mov
and
mov
jno
into
push
xor
fisttpll
and
incl
push
xor
int3
orl
adc
hlt
scas
sbb
shrl
push
shrb
and
push
repz
mov
inc
jns
sub
in
dec
push
add
and
jo
fwait
cmpsl
cmc
ja
out
and
dec
aam
shl
and
sub
add
mov
flds
and
lods
push
xor
add
test
inc
adc
into
cpuid
or
lods
js
adc
cmp
adc
dec
fnstenv
sub
dec
daa
or
scas
cmp
inc
push
xor
cmpsl
das
dec
cs
xorl
mov
popa
xchg
add
loope
movsl
cs
mov
xor
xor
fldln2
pop
jmp
dec
adc
push
xor
mov
sub
dec
inc
mov
jp
push
pop
pop
mov
jo
fisttpl
xor
sub
ljmp
mov
sbb
cmp
mov
cmc
adc
shrb
jmp
stos
mov
add
loopne
bound
sub
lret
ss
repz
sub
adcl
mov
jae
ret
ret
lds
pop
subl
or
rcll
adc
into
arpl
dec
and
cmp
inc
push
mul
and
and
out
jae
mov
or
imul
into
sub
sbb
pmaxub
adc
add
adc
push
imul
roll
or
xchg
and
mov
testl
inc
stos
popa
out
icebp
adc
adcl
clc
adc
mov
adc
push
mov
add
ret
dec
adc
xor
test
cmp
mov
mov
les
ja
mov
adc
inc
push
adc
dec
shl
repnz
adc
jle
int3
clc
loope
adc
push
xor
add
push
je
xchg
xor
sarb
add
xlat
out
mov
dec
mov
xor
fsubs
xchg
push
out
push
jb
jecxz
fnsave
add
sub
clc
setp
in
cmpb
xor
adc
sbb
inc
jno
out
xor
inc
imul
and
loopew
cmp
aas
mov
jnp
into
inc
dec
cmp
insb
xor
jb
mov
push
mov
lock
xchg
lods
and
add
orl
rcrl
jecxz
pop
and
mov
aam
dec
stos
mov
jmp
mov
je
outsb
dec
mov
mov
jge
mov
xor
cmpsl
push
pop
sbb
loope
mov
jp
pop
sub
add
movb
mov
shl
daa
cs
adc
adc
fs
pop
add
ljmp
push
xor
in
sub
inc
xchg
cs
inc
scas
xchg
dec
rcrl
dec
xor
or
shll
xchg
xor
into
push
jbe
xorl
mov
pop
xor
repz
xor
and
shll
and
push
xchg
mov
scas
sub
out
mov
loopne
mov
repz
in
xchg
daa
fs
lock
jecxz
test
out
mov
icebp
inc
out
test
push
divl
cmp
je
out
ds
adc
push
mov
xchg
inc
ret
mov
adc
add
dec
push
cmp
scas
mov
push
mov
fbld
xchg
mov
cmc
subl
add
sub
data16
out
fwait
adc
imul
xor
xchg
mov
scas
xchg
push
and
mov
ljmp
inc
loope
cld
xlat
sub
cs
sarl
pop
add
push
imul
cmpsl
shr
ret
jle
pop
push
mov
mov
xlat
cmc
xor
adc
add
call
fidivs
adc
lds
lods
call
add
mov
dec
and
ret
sbb
xchg
fs
scas
jo
es
mov
test
ret
or
xchg
mov
mov
xchg
push
and
mov
notl
notb
jb
punpcklwd
les
cmc
out
je
cmc
mov
bound
add
rorl
mov
xor
test
popa
push
mov
flds
jb
xor
bound
adc
pop
rcl
xchg
data16
xor
test
sub
pop
addr16
jg
bound
xor
push
inc
mov
out
nop
les
mov
xor
fsubrl
push
xlat
mov
pop
cmpsl
push
inc
xchg
test
mov
nop
movsl
xor
inc
mov
rcrl
in
jle
inc
xor
xchg
popf
push
or
out
mov
push
mov
loope
push
mov
dec
mov
adc
cmpsl
rcrl
push
fdiv
mov
cmp
cmp
in
and
xor
add
fiaddl
pop
mov
cmp
in
rcll
fildl
push
jecxz
dec
dec
lret
and
cmp
jne
and
mull
and
call
hlt
xor
xorb
mov
mov
in
pop
fucomi
pop
adc
rclb
jecxz
mov
jmp
popa
adc
push
jno
loope
adc
jno
sarl
nop
lret
loope
adc
and
dec
repz
mov
outsb
imul
jb
mov
rcll
popa
pop
mov
lea
nop
dec
lds
mov
mov
dec
inc
jle
xchg
pop
push
negl
and
shll
imulb
inc
sarl
jp
pop
ja
add
lea
push
out
cmp
cmp
jne
push
xor
les
mov
inc
jo
xor
and
and
mov
push
add
push
adc
test
push
sbb
cmc
mov
mov
cmc
adc
inc
dec
dec
add
jge
sbb
shll
shll
push
push
ret
inc
adc
fsubs
sti
out
popa
push
ss
mov
cmp
push
sub
inc
outsb
mov
cmp
mov
lcall
std
jmp
movsl
outsl
arpl
inc
and
xor
ret
shrl
popa
sahf
adc
xchg
andl
roll
pop
push
xchg
push
add
mov
daa
scas
xchg
outsb
mov
std
dec
pop
rcll
rcrb
add
mov
rorb
xor
adc
add
shll
clc
pop
fwait
les
adc
inc
fadds
dec
scas
dec
cmp
inc
mul
jge
adc
arpl
adc
loope
mov
je
les
dec
xchg
stos
xlat
clc
jb
ljmp
repz
and
imull
hlt
shrl
inc
jle
adc
pop
xchg
les
fstpt
xor
into
mov
loope
rorb
pop
jb
cmp
dec
or
mov
and
adc
add
cmp
push
fdiv
push
les
or
jge
repz
movsb
arpl
leave
pop
push
lods
dec
inc
into
outsb
shrb
movsl
adcb
dec
imul
jmp
popa
out
clc
push
jb
cmc
xchg
data16
loopne
lahf
jo
pop
stos
push
loopne
xchg
or
push
push
adc
jno
mov
andl
push
fcmove
inc
repz
ret
jno
mov
mov
movsl
icebp
xor
mov
adc
sti
push
in
pop
xchg
and
push
ret
dec
push
mov
jbe
mov
push
cld
cmp
hlt
mov
sbb
push
and
jne
push
daa
add
test
fcompl
aam
xor
push
in
xor
scas
cld
rcll
dec
testl
xor
shlb
fwait
mov
adc
out
cmpsb
and
add
mov
push
and
push
add
or
push
and
or
mov
mov
icebp
add
push
jle
int3
in
cmp
lret
nop
bound
adc
mov
out
ljmp
in
mov
push
sbb
xor
fisubrs
adc
in
inc
cld
ljmp
lret
xlat
and
in
pushf
jle
push
out
inc
push
add
mov
jo
xorb
sti
rolb
dec
cmpsb
adc
add
cs
bound
icebp
cmp
push
add
inc
pop
mov
mov
outsb
xor
push
pop
mov
dec
in
inc
jne
mov
and
cmp
test
in
mov
adc
jp
roll
xlat
test
sbb
out
bound
icebp
xor
jb
aas
adc
jmp
xor
loopne
orl
cmp
xor
inc
repz
push
push
xchg
add
dec
movsb
dec
aad
rcl
push
mov
popa
into
bound
lahf
jb
mov
fdivs
xor
jp
push
addl
jno
and
push
and
rclb
push
add
and
sbb
lods
xlat
inc
fwait
clc
lods
test
mov
or
outsb
rcll
xor
icebp
mov
sbb
dec
movsl
rcll
rcr
cmpsl
add
push
out
fs
xor
loope
sub
add
shll
xchg
xchg
popa
jne
cs
xchg
jnp
xchg
jne
add
call
xor
or
inc
add
rol
pop
jecxz
in
inc
loop
mov
xchg
outsb
xchg
ret
inc
mov
dec
adc
push
arpl
pop
sub
divl
pop
push
into
or
loope
adcb
out
push
xchg
add
jbe
jno
shll
cmpsl
andl
pop
cmp
jno
stos
push
sub
xchg
sarl
lea
cli
jmp
pop
leave
in
in
jae
out
mov
adc
out
into
sti
imul
push
cmc
xlat
testl
add
jge
cmp
dec
inc
sbb
fidivl
jmp
mov
inc
or
out
inc
rclb
push
les
daa
xchg
add
into
stos
cwtl
mov
sub
cmp
mov
xor
pop
shlb
stos
and
cmpsl
add
divl
jno
loop
shll
loope
cmp
xor
ret
xor
jecxz
sar
mov
mov
dec
outsb
je
xor
mov
insb
addr16
enter
cmp
push
adc
test
stos
xchg
xor
push
outsb
pop
shlb
xchg
dec
pop
adc
push
dec
sbb
insb
add
addr16
mov
adc
in
movsl
mov
sub
jge
adc
iret
sbb
adc
mov
push
xor
pop
js
dec
sub
and
jne
pop
xor
orb
mov
popa
and
sbb
xlat
fstpt
mov
cmpl
push
xor
sbb
push
mov
adc
mov
pop
pop
mov
out
sub
mov
xchg
fldl
test
mov
add
dec
jns
inc
jl
repz
mov
test
adc
push
sti
cmp
mov
ljmp
hlt
inc
outsl
cmpsb
daa
jecxz
cmc
ds
and
cmpsb
and
or
xor
fs
add
add
les
out
adc
jno
add
xlat
scas
adc
inc
les
cmp
stos
stos
cmpsb
mov
clc
mov
push
in
dec
push
or
cs
incb
push
jne
into
mov
jle
add
adc
inc
mov
out
jae
call
dec
mov
sub
mov
adc
mov
inc
popa
add
and
and
inc
cmp
inc
and
push
ds
dec
nop
add
sbb
std
push
idiv
add
mov
dec
and
mov
add
mov
sbb
in
cmp
push
addl
lds
test
or
pop
push
rcll
and
clc
mov
out
adc
cmp
les
mov
fistl
mov
mov
fs
xor
adc
dec
and
add
icebp
out
adc
mov
jmp
push
cmp
inc
push
mov
sbb
xchg
bound
outsb
lret
jbe
jl
inc
cmpl
movsb
push
mov
shrl
rcll
mov
inc
add
sub
jae
ret
jnp
stos
lret
popa
mov
add
add
push
inc
roll
add
inc
cmpsl
adc
push
sub
cmp
push
add
jnp
mov
jno
adc
adc
adc
cld
pop
jae
mov
jno
xlat
in
cmp
in
sbb
subl
outsb
mov
cs
imul
rcr
sub
and
push
adc
jae
dec
add
ret
popa
adc
xchg
mov
shl
popa
xchg
daa
push
push
push
cmpsb
add
mov
push
jle
sbb
mov
aaa
mov
push
popa
pushf
dec
push
andb
xor
in
sub
js
rcll
pushf
std
es
js
faddl
cmp
mov
jmp
mov
jae
inc
mov
dec
int3
xor
mov
daa
cltd
bswap
and
cmpsl
add
jne
arpl
jae
xchg
jo
out
xlat
in
fcomi
and
jno
inc
inc
push
push
jle
mov
add
xor
ljmp
lods
adc
mov
inc
leave
ss
jl
das
xor
fsubs
repz
in
dec
roll
inc
je
icebp
fs
out
insl
jbe
xchg
test
flds
push
sub
ljmp
jle
fldl
pop
pop
ss
mov
mov
outsl
xchg
mull
scas
hlt
pop
data16
cs
aaa
xchg
mov
mov
add
mov
add
jns
inc
and
rcl
jb
xor
in
add
add
fsubrl
data16
addr16
jae
xlat
cs
xchg
ds
xchg
inc
cli
cmc
sbb
dec
or
inc
orb
out
and
jae
sub
fs
call
rcrl
or
sbbl
jo
jno
mov
out
inc
dec
fsts
lret
jle
xor
inc
lods
jo
adc
push
repz
inc
mov
mov
jb
mov
popa
push
pop
test
pushf
loope
xchg
xchg
cs
in
fs
out
bound
rol
pop
or
push
inc
jae
mov
mov
push
sarl
add
push
out
add
jae
add
rorb
and
adc
out
mov
rorl
mov
insb
rorl
inc
dec
xor
add
xchg
mov
push
cmp
mov
in
pop
dec
movsl
and
inc
xlat
add
jle,pt
rorl
mov
call
mov
push
bound
xchg
push
jle
and
lcall
xchg
je
rclb
icebp
xor
sub
ror
data16
xchg
mov
xor
adc
jb
xlat
jle
jae
mov
adc
jns
mov
rolb
orl
inc
stos
movsb
popa
push
push
cmp
cmp
push
adc
or
adc
cmp
adc
sub
std
int3
dec
add
movsb
adc
jae
mov
fidivrl
cmp
imulb
mov
aam
push
xor
push
js
jne
outsb
bound
inc
fdivrl
dec
div
dec
adc
add
in
dec
adc
in
mov
push
xor
in
and
movsl
inc
mov
xor
mull
xor
sbb
mov
dec
icebp
rol
jo
dec
push
mov
ds
scas
addl
and
ret
xor
scas
ss
hlt
inc
inc
loope
addr16
mov
int3
fimull
xlat
rorb
inc
int
bound
cmp
mov
fisubl
shlb
loope
popa
loope
clc
xchg
add
out
das
xchg
push
cmpsl
and
das
mov
and
mov
out
inc
mov
cs
nop
sub
rcll
xchg
add
jb
jle
add
mov
xor
lock
hlt
jae
leave
popa
ss
add
pop
dec
xchg
ljmp
mov
bound
mov
or
out
xchg
adc
and
adc
cmp
pop
mov
jge
and
mov
adc
jmp
shl
xchg
or
cli
call
push
mov
test
inc
rcl
sub
repz
test
xchg
adc
gs
xor
mov
adc
rcrl
pop
push
pop
cs
jle
je
out
and
int3
in
js
push
xor
addl
test
ljmp
dec
out
adc
rorl
and
mov
and
ror
dec
and
xor
push
pop
into
testl
cwtl
icebp
fsubs
xor
shrl
out
ret
push
andb
xor
imul
in
pop
adc
rcrl
mov
dec
and
xor
jo
mov
aas
xchg
jmp
adc
and
mov
and
mov
pop
mov
lcall
jle
sub
push
mov
cs
xor
ret
rcrb
and
xchg
ds
mov
out
push
and
xchg
nop
jae
add
xor
in
inc
inc
bound
xor
lret
subl
pop
push
xchg
mov
out
loope
sbb
adc
lahf
and
push
xor
adc
lock
test
xor
pop
icebp
faddl
adc
add
addr16
test
adcl
inc
test
fwait
pop
je
or
push
or
aas
sarl
or
add
addb
xor
daa
call
call
inc
arpl
xchg
push
dec
sub
push
or
js
scas
je
dec
xchg
out
loope
pop
imul
xor
dec
mov
aam
xchg
fs
push
push
mov
jo
aam
cmpsl
adcl
dec
ret
mov
pop
pushw
sti
xlat
pop
sbb
fsubr
mov
int3
xor
inc
js
jbe
movl
xor
or
mov
xor
je
push
inc
push
addr16
xchg
stos
dec
adc
mov
pop
adc
mov
jno
adc
inc
jno
addb
dec
lds
repnz
or
mov
loopne
and
mov
icebp
mov
cmc
xorl
mov
mov
call
clc
jb,pt
dec
and
push
push
not
cwtl
icebp
mov
outsb
jne
or
fiadds
jb
xlat
sti
mov
mov
mov
pop
dec
mov
xchg
ret
jb
add
lret
adc
rcl
jecxz
push
inc
call
add
xlat
or
and
inc
jno
dec
arpl
stos
ret
adc
xor
push
repz
mov
out
sbb
sti
push
shll
enter
cli
jne
mov
or
jb
in
cmp
xchg
jbe
ret
mov
popa
loope
sti
pop
out
push
and
inc
ds
and
mov
ret
imull
push
sub
call
inc
fadd
push
ror
adc
out
js
call
enter
outsb
sbb
lret
movsl
dec
and
adc
into
pushf
sub
shll
int
je
outsb
adc
cmpsl
in
cmc
and
cld
sub
mov
icebp
add
xlat
add
in
xchg
dec
insb
jb
scas
loopne
jae
jge
pop
cmc
ret
sub
push
popa
push
xor
sbbl
lret
pop
test
jle
cmc
shll
stos
sub
push
push
sub
and
jge
les
add
dec
into
or
adc
and
mov
and
add
ljmp
jb
xlat
pop
inc
hlt
mov
fs
mov
xor
in
popf
out
add
jecxz
pop
je
pop
leave
and
enter
cmpsb
nop
push
cmp
xchg
out
lock
popa
inc
jecxz
mov
push
pop
mov
jl
mov
cmp
out
in
gs
jns
mov
sub
jne
mov
outsb
stos
lea
push
scas
mov
fadds
and
js
push
pop
xlat
in
push
sti
pop
loope
into
out
out
mov
stos
dec
inc
sbb
shrl
push
mov
roll
adc
xlat
out
push
popa
ret
dec
mov
mov
fimuls
aas
out
jae
movsb
push
push
and
bound
inc
mulb
or
lret
push
lods
mov
lods
push
rolb
jp
call
inc
xor
push
adc
bound
rorl
add
mov
or
outsl
push
push
jp
dec
out
push
jle
dec
jbe
fcom
mov
cmp
inc
outsl
and
xor
cmp
jle
jl
push
loopne
out
imul
mov
les
adc
pop
xlat
in
adc
jo
out
pop
icebp
and
fmulp
out
push
jb
bound
xchg
into
leave
ret
cwtl
inc
rclb
mov
inc
negl
jge
and
jecxz
mov
ds
mov
fimull
into
sub
das
aam
xor
jno
jg
xor
out
cmp
lds
stos
addr16
jae
push
out
mov
dec
lock
rolb
outsb
mov
in
add
xor
stc
push
xchg
das
lock
mov
into
ret
loope
je
jecxz
inc
sbbl
loop
ret
inc
mov
addr16
sub
jge
icebp
stc
or
icebp
xor
push
jp
cli
mov
inc
ficomps
out
orb
push
xchg
sub
mov
xor
into
adc
inc
push
inc
outsb
xchg
xor
arpl
mov
cmpsb
leave
push
inc
mov
or
sahf
movsb
sbbl
inc
xor
lcall
and
pop
mov
gs
ret
jo
stos
inc
dec
ljmp
cmp
and
mov
jl
pop
insb
aam
jae
addb
cmc
int3
jns
ret
inc
shll
push
mov
les
xchg
xchg
addr16
xlat
and
into
notl
ret
pop
mov
arpl
into
push
shl
mov
bound
mov
mov
push
mov
push
adc
sub
xchg
mov
mov
or
xor
in
mov
xor
popa
push
mov
cld
loop
out
negb
pushf
mov
push
mov
jle
sub
in
xchg
std
inc
adc
mov
imul
xchg
fdivrs
repz
scas
push
push
and
mov
sub
ljmp
jmp
roll
and
xor
dec
or
bound
popa
insb
lods
vpcmpgtb
aas
out
rcrl
add
ja
xor
mov
repnz
xor
stos
inc
xchg
and
testl
movsl
sbb
mov
sub
bound
icebp
push
add
mul
pop
ds
je
pop
roll
push
scas
jge
dec
popa
inc
sbb
in
lods
push
mov
shll
push
add
out
cmpsl
mov
push
out
and
in
sub
js
xchg
and
mov
mov
mov
jns
repz
cmove
popa
push
add
jb
lock
mov
jle
mov
out
and
loop
jecxz
in
jl
push
daa
rcl
or
or
mov
int3
adc
stc
aam
daa
adc
loop
ds
inc
pop
dec
icebp
jmp
jnp
dec
lcall
clc
mov
cs
test
mov
jno
dec
jnp
push
and
in
sub
pop
mov
stc
and
loopne
cli
mov
dec
test
rol
bound
sub
add
scas
les
sub
and
cmpsb
inc
popa
add
push
scas
nop
mov
adc
adc
shr
scas
dec
cmp
scas
xor
addl
mov
bound
sub
ljmp
outsb
fs
mov
xchg
ret
call
pop
ret
imul
rcll
pop
pop
mov
push
loop
mov
pop
stos
cmpl
shlb
xorl
and
sbb
out
mov
icebp
xor
ret
lock
mov
sahf
out
jle
adcb
push
subb
and
mov
or
jne
jp
cmp
outsb
in
cmp
cmp
xlat
sub
ficoml
inc
add
popa
fs
dec
icebp
push
loop
inc
adc
jb,pn
xor
inc
and
mov
loope
ret
mov
pop
and
add
push
push
in
ljmp
cmp
mov
fstl
popa
dec
lret
mov
aas
ret
mov
lods
and
adc
in
shrl
xchg
imull
out
add
push
mov
mov
aad
je
jno
xor
inc
fcmovnb
mov
push
in
jno,pt
test
mov
push
and
mov
jno
pop
movsb
out
outsb
push
dec
or
nop
lock
testl
inc
push
inc
bound
xor
xorb
xor
out
jmp
or
inc
dec
popa
pop
push
movsl
cmp
adc
fcomi
sbbb
stos
loop
inc
add
jne
adc
xchg
out
xlat
loop
sub
movsl
dec
les
xchg
jne
inc
mov
scas
push
rcll
pop
cs
add
push
xorb
xor
sub
cmp
xchg
jnp
inc
push
and
ret
bound
add
adc
daa
addr16
sub
xor
or
inc
dec
push
mov
pop
mov
icebp
adc
inc
mov
or
xchg
popf
into
popa
popa
rclb
nop
jb
in
rorl
popa
rorb
dec
xchg
dec
xchg
dec
dec
cld
cmc
and
mov
mov
and
sub
notl
and
js,pn
adc
dec
jmp
add
imul
xor
inc
xchg
out
in
arpl
dec
in
push
and
sbb
dec
pusha
dec
inc
rcll
or
push
jge
push
mov
adc
mov
call
arpl
mov
cld
push
enter
xor
push
xor
cmpb
and
lods
jae
mov
test
cli
popa
pop
movsb
out
repz
push
cmp
push
mov
cmp
daa
mov
je
mov
loope
shll
and
jno
or
jecxz
jne
mov
out
ret
dec
je
inc
and
out
inc
dec
sarl
inc
push
loope
add
lods
mov
mov
inc
mov
adcl
sbb
unpckhps
movsl
push
ds
cmpsb
inc
push
push
je
xlat
inc
mov
mov
xor
and
out
mov
orl
ret
adc
mov
fisubrs
sub
in
inc
popa
ds
jno
mov
lds
adcl
mov
xchg
addr16
daa
inc
and
repnz
push
repz
cmc
jae
cmp
inc
imulb
les
mov
add
push
into
mov
add
xor
insb
sahf
push
shrb
rorb
mov
mov
xlat
scas
out
je
adc
out
inc
xlat
mov
adc
divb
and
rclb
bound
mov
and
xchg
xor
cld
inc
inc
and
ret
xchg
sub
arpl
sti
ds
into
repz
inc
adc
cs
xor
xchg
cmp
inc
mov
mov
shrb
cmp
into
ret
mull
push
shrl
ret
mov
hlt
in
into
inc
fsubl
dec
decb
xchg
xchg
xlat
out
and
xor
and
popa
outsl
repnz
add
andb
and
out
xchg
cs
daa
mov
and
fcmovu
and
xor
inc
and
sbb
insl
lret
adc
push
data16
pop
xchg
xchg
mov
mov
outsb
pop
mov
and
mov
je
int3
mov
sti
lcall
out
in
fadd
cmp
gs
and
jge
xchg
in
and
mov
add
in
je
push
iret
mov
lds
dec
jnp
loop
and
clc
and
repnz
scas
jecxz
out
jb
mov
mov
shll
or
and
push
push
call
mov
inc
cld
and
mov
jecxz
into
outsb
ds
and
and
daa
pop
call
lcall
lock
iret
test
gs
mov
add
fadds
icebp
shlb
or
inc
mov
cmpsl
cs
arpl
pop
lods
jle
pop
loopne
xor
imul
stc
mov
push
xlat
cmp
adc
mov
cs
test
adc
cwtl
and
jae
in
xchg
inc
rcrl
mov
push
and
roll
scas
or
adc
adc
xor
loope
add
test
mov
daa
shl
or
xlat
push
mov
cmp
outsl
mov
xchg
ret
pop
xlat
jge
adc
and
jmp
dec
cmp
add
scas
int
xor
nop
pop
pusha
out
xor
clc
or
cld
out
cmp
mov
rolb
lods
sbb
add
fs
data16
dec
dec
inc
jae
rdtsc
ret
mov
out
jecxz
xor
xchg
inc
lret
xor
addr16
data16
and
ja
mov
sbb
xor
cmpsl
outsl
outsb
dec
into
cwtl
in
mov
push
rcrl
xor
andl
cmp
cmpsl
xor
shr
push
popa
mov
mov
sub
cmpsl
adcl
pop
mov
and
push
jmp
xor
and
xor
sub
mov
sbb
fsub
jns
adc
shl
stc
jno
xorl
push
cltd
fidivs
out
in
arpl
icebp
add
repz
sub
mov
cmp
lret
jecxz
ret
in
xor
adc
xchg
pop
ds
cs
mov
lea
mov
loope
jg
dec
fucomp
xchg
repz
pop
xor
cmp
fidivs
ret
inc
xor
je
addr16
jecxz
jae
dec
call
data16
jecxz
iret
jmp
sbb
orb
push
mov
ds
shl
mov
rcll
call
enter
gs
cmp
and
xorb
jle
inc
mov
sub
mov
dec
adc
xor
xor
into
scas
jnp
mov
popa
je
pop
mov
jle
aaa
jb
bound
inc
icebp
fs
aaa
push
push
in
push
cmp
sbbl
outsb
dec
into
push
or
inc
pop
xor
push
movsl
mov
call
jb
ljmp
push
adc
les
mov
fidivs
push
fldcw
les
mov
sbb
sbb
push
push
cmp
jb
out
jecxz
mov
xlat
sahf
ds
ret
jp
push
notl
insb
stos
out
psrld
xchg
in
dec
es
iret
dec
add
fistl
add
call
lods
and
jecxz
mov
jnp
xor
jne
adc
inc
mov
pop
data16
popa
mov
popa
push
mov
leave
fdivrl
or
cwtl
xor
bound
add
mov
pop
faddl
fidivrl
mov
insb
les
ljmp
adc
jbe
push
bound
and
ds
mov
xlat
fcomps
icebp
sbb
and
pop
push
jae
in
xchg
jle
jecxz
add
insb
repz
mov
rolb
into
jb
dec
sub
adc
xor
loope
mov
loope
mov
dec
mov
jmp
adc
push
ret
adc
adcb
cmc
movsb
lret
mulb
jle
loope
rclb
stos
jecxz
push
nop
cmpsb
jg
mov
sub
fstps
ret
clc
rol
das
mov
adc
ds
or
mov
dec
sub
xlat
jb
addb
rorb
sti
dec
push
aaa
roll
xchg
dec
adc
subl
or
call
icebp
mov
push
cmpb
or
push
jb
inc
insl
add
mov
jmp
pop
fwait
dec
push
ja
int
dec
and
or
aaa
mov
loope
leave
and
out
or
negl
xor
adc
int
into
iret
lock
fldcw
into
shl
mov
add
int3
outsb
adc
inc
in
mov
dec
pop
adc
das
sub
subl
or
lods
das
stc
inc
jp
outsb
and
xor
mov
rep
adc
dec
xor
sub
fsts
pop
sbb
mov
mov
xchg
inc
fwait
inc
fmuls
xor
into
add
inc
das
aaa
xorl
sbb
iret
outsl
xor
mov
jle
push
pop
aad
pop
pop
sub
sbb
xlat
mov
sbb
aam
lret
adc
xor
std
std
rorl
xor
lods
push
xor
popf
pop
or
jmp
push
xchg
pop
or
dec
or
push
lock
mov
xor
sub
pop
lods
roll
sub
sub
mov
sub
sub
mov
or
cs
stos
stos
shll
repnz
shlb
push
fs
xor
mov
outsb
nop
test
arpl
pushf
mov
mov
stc
fcompl
fadds
jae
pop
add
xchg
rcrl
fwait
xlat
mov
push
xlat
popa
dec
bound
daa
in
stos
adc
stos
lret
jne
push
adc
push
shll
dec
arpl
and
adc
mov
and
mov
pop
xor
adc
into
xor
ljmp
and
call
push
icebp
andl
jns
loope
cmp
int
rcrb
sub
addl
rol
fisubs
je
jb
lea
mov
into
shll
adc
das
das
addl
adc
xchg
adc
and
loope
adc
inc
data16
rorb
loope
fsubl
jle
or
adc
shll
add
fistl
and
cmpsl
mov
xchg
or
in
dec
std
pushf
sub
jne
adc
inc
mov
rcll
test
mov
adc
push
shll
popa
dec
mov
xchg
push
and
dec
inc
adc
outsb
dec
xor
inc
mov
je
fs
das
call
inc
jae
cmpsb
out
ret
and
add
mov
pop
mov
mov
stos
repnz
sub
test
push
ret
notl
push
repnz
add
mov
adcb
out
mov
and
xchg
xor
mov
out
push
adcb
imul
sub
jne
pop
arpl
lods
adc
adc
popa
push
cmp
push
and
mov
mov
imul
scas
and
inc
mov
push
add
dec
and
dec
stos
mov
and
xor
pushf
dec
pushw
ljmp
sbb
xchg
jb
es
push
cmc
out
sti
jecxz
xchg
xchg
shll
icebp
les
popa
outsb
andb
decb
push
xchg
dec
loope
rcrl
jb
out
shrl
mov
pop
test
mov
add
bound
rol
pop
jl
nop
xchg
xor
mov
or
lods
add
push
addr16
cli
and
mov
push
or
mov
xchg
popa
xorl
les
sarl
push
xor
xchg
pop
sahf
adc
sub
adc
out
mov
pop
push
pop
outsb
inc
sbb
cs
sbb
push
push
add
mov
outsb
jle
xor
repz
popa
adc
inc
daa
daa
adc
dec
jae
mov
inc
inc
xchg
mov
imul
ret
rclb
mov
or
popa
repz
xor
xchg
vpcmpeqb
inc
into
inc
inc
dec
pushf
gs
aad
sbb
repnz
cmp
adc
push
ja
cmpsb
push
cmp
out
repz
jmp
pop
adc
das
pop
mov
cmp
mov
out
xchg
or
jb
rorb
mov
adc
addl
daa
dec
clc
repz
add
ljmp
adc
pop
mov
or
sti
xor
mov
push
and
cmp
ret
bound
dec
add
xor
je
popa
inc
mov
cs
xlat
inc
hlt
cmp
adc
push
dec
arpl
call
push
push
cli
fidivrs
push
jb
dec
repz
cs
ss
push
addb
jne
mov
mov
and
cmp
jbe
jae
mov
repnz
xor
cmp
out
push
inc
rorl
push
inc
add
add
inc
ljmp
xorb
push
xchg
pmaxub
je
out
dec
inc
pop
sar
or
out
outsb
inc
les
and
xor
scas
xchg
cmc
xchg
pop
ret
jmp
mov
xor
adc
cmc
adc
loopne
out
popa
repnz
testl
ret
je
adc
push
cmpsb
cmpsb
pop
mov
inc
inc
in
aas
js
loope
cmc
mov
cmp
lds
dec
out
push
je
adc
fisubrs
push
nop
dec
jae
outsl
lret
ljmp
shll
sbbl
adcl
fs
xor
dec
mov
shll
adc
iret
mov
mov
push
divl
push
sub
pop
ret
sbb
cmp
inc
or
shl
and
adc
cs
aad
xchg
dec
and
or
in
mov
mov
roll
mov
pop
pop
xor
sub
add
push
mov
in
fsubl
or
shlb
icebp
jle
into
out
sub
xorl
dec
add
loope
fwait
aam
mov
pop
xor
test
jbe
mov
loope
add
add
mov
icebp
mov
fs
dec
push
adc
movsl
dec
jae
mov
mov
jns
outsb
xlat
mov
add
jno
test
jp
mov
test
adc
inc
arpl
popa
push
into
adc
jno
adc
xor
xlat
stos
adc
xchg
je
mov
pop
add
xor
sahf
add
ret
sub
cld
dec
in
and
push
mov
out
mov
and
or
dec
inc
outsl
inc
push
test
or
pop
loope
dec
arpl
push
mov
out
scas
das
outsb
arpl
adcl
mull
std
int
inc
fimull
jecxz
into
call
out
xor
mov
pop
add
push
or
fisubrs
ret
add
rcrb
mov
mov
dec
hlt
xor
cld
cmpsb
sub
stos
cmc
negl
mov
sti
xchg
jge
dec
out
popa
sbb
call
out
and
xchg
dec
xor
xor
insl
add
jne
and
and
mov
add
inc
inc
lret
je
out
out
daa
xor
and
das
inc
cmpsl
daa
nop
cmpsl
test
popl
and
dec
ljmp
into
popf
mov
loopne
jmp
out
notl
add
insb
stos
out
andl
jmp
jmp
xchg
push
and
gs
cmpsl
mov
sub
dec
add
xchg
inc
mov
pop
xor
out
into
cs
push
mov
push
xor
out
aas
incl
andb
pop
inc
or
fdivs
and
jno
out
ja
popa
push
sti
out
out
jb
push
xchg
mov
sbb
add
andb
dec
cmp
bound
fdivl
outsb
xchg
jle
ss
aam
les
inc
mov
rcll
into
mov
push
jge
jle
rol
dec
les
xchg
es
jns
divb
mov
jb
int
mov
fldl
xlat
xor
and
adc
mov
jg
repz
jecxz
cmp
xchg
xor
ja
dec
adc
lods
jns
mov
cld
loopne
dec
inc
mov
inc
ds
mov
mov
clc
cmp
loopne
adc
data16
fadd
and
mov
cmpsb
mov
lret
aam
adcl
and
inc
inc
mov
jo
fucomi
mull
xchg
xor
jle
and
popa
aam
inc
jno
inc
dec
lods
lock
add
sahf
loope
adc
icebp
xor
cwtl
inc
jno
xchg
xor
lods
aad
imull
dec
push
push
js
icebp
mov
ror
js
mov
sbbl
inc
pop
cs
push
dec
popa
xor
adc
xor
out
mov
inc
je
rorb
insb
test
imul
icebp
scas
mov
test
sbb
shll
xor
inc
jl
sti
push
xor
call
out
imul
fistpl
and
mov
push
dec
jae
mov
jo
fwait
scas
mov
addr16
xchg
add
les
jge
inc
jg
push
jmp
imul
enter
rdpmc
cmp
cmp
and
pusha
int
movsb
dec
and
jno
sbb
jge
sti
mov
inc
inc
pop
bound
in
ds
notl
icebp
pop
mov
mov
les
std
jno
jmp
jp
cmc
popa
aad
mov
adc
sub
and
sub
add
call
push
arpl
dec
mov
lods
loopne
sbbl
outsb
mov
and
and
jns
dec
mov
cmp
clc
rolb
pop
scas
add
test
bound
popa
add
sbb
andl
add
loope
xchg
jl
jae
test
rol
loope
repnz
ds
xor
test
aas
cltd
or
add
adc
rcl
push
jecxz
xchg
and
mov
xor
dec
mov
xor
add
dec
xlat
addl
jge
mov
test
jb
ds
xchg
roll
xor
xor
xor
inc
lret
icebp
inc
xor
and
test
push
rcrl
test
jle
xorl
and
pop
dec
jb
insb
push
xlat
loope
push
jo
pop
ret
add
adc
mov
cltd
insl
inc
sub
loope
dec
or
insl
shll
sbbl
pop
adc
and
xor
mov
inc
scas
jo
roll
and
scas
out
cmpsl
in
xchg
xchg
and
hlt
and
push
les
mov
mov
pop
add
add
xor
inc
push
or
mov
cmp
push
add
icebp
cs
mov
ss
jl
push
jo
sub
orb
pop
mov
push
xor
push
mov
out
sub
loop
mov
je
add
les
mov
mov
inc
mov
out
repz
fs
push
inc
inc
pop
or
dec
shrl
mov
jno
bound
and
ljmp
out
sub
out
push
idivb
sbb
jecxz
add
and
les
xchg
inc
popa
loope
and
clc
and
mov
fdivrs
cld
jl
mov
divl
mov
sub
dec
repnz
test
je
sub
cld
movsb
fdiv
out
xor
add
lock
push
add
sti
pushl
cmpsb
and
lods
inc
inc
mov
adc
loop
adc
push
xor
nop
and
xor
negl
dec
jmp
jae
inc
outsl
test
push
push
arpl
xchg
mov
fmull
sarl
jb
loope
repz
je
mov
cld
icebp
bnd
cmovne
bound
popa
mov
adc
adc
dec
test
in
into
lods
mov
cmc
xchg
inc
inc
arpl
adc
mov
adcb
sub
ficoms
leave
xor
push
arpl
push
cmp
adc
aas
dec
mov
out
ret
jb
and
mov
bound
mov
push
inc
stc
jno
and
outsl
or
ficoml
jle
test
icebp
xchg
mov
add
mov
mov
lods
dec
je
ret
xlat
lock
and
aad
mov
repz
xorb
inc
mov
jge
sub
sbb
xchg
adc
push
rol
int
loope
lock
pop
dec
push
bound
jp
repz
xor
add
mov
rorl
add
adc
loopne
ret
lret
into
or
repnz
mov
jg
icebp
je
push
push
loope
out
sub
or
xchg
push
ret
jno
inc
xor
adc
pop
jnp
es
fs
enter
or
xchg
pop
test
push
je
mov
sbb
pop
cmp
mov
jecxz
cltd
call
roll
push
pushf
loop
mov
pop
into
ds
add
outsb
rolw
jo
pop
popa
andl
push
mov
mov
adc
mov
mov
mov
dec
in
out
sub
inc
mov
and
sub
xor
bound
lcall
and
adc
ja
mov
sub
mov
cmc
mov
jae
sbb
xor
loopne
inc
popa
into
cmp
inc
mov
rclb
inc
add
xor
jns
adc
mov
push
test
jecxz
repz
dec
adcb
out
xorb
outsb
sbb
inc
xor
ret
xor
and
lret
dec
xchg
sbb
inc
arpl
dec
jecxz
pushf
xor
mov
loope
jns
int
adc
lret
iret
mov
mov
add
sbb
jecxz
xchg
xchg
sub
cltd
popa
ljmp
loope
aas
lret
and
iret
jge
inc
push
shl
out
out
mov
mov
out
xchg
roll
push
add
cmp
popa
lcall
mov
inc
push
xor
dec
jae
adc
dec
adc
lcall
sub
mov
shrb
int3
les
or
arpl
fs
outsb
leave
cli
jmp
cmp
push
cmp
sub
jno
inc
push
sub
outsb
cli
dec
push
repz
mov
inc
xor
push
mov
sub
fs
xor
and
inc
push
adc
sbb
shll
je
les
adcb
xorl
add
or
pop
rcrl
fwait
sbb
fildl
sub
and
jb
and
outsb
push
neg
inc
xor
push
dec
mov
push
bound
lods
and
push
hlt
mov
or
pop
adc
adc
mov
cmc
jge
andl
ficoml
mov
xor
shll
jle
push
lea
xor
mov
test
mov
add
ljmp
mov
jge
mov
add
mov
mov
shr
in
ja
mov
mov
pop
push
in
rorb
adc
lret
and
mov
andb
xor
mov
adc
adc
test
outsb
jp
jge
push
loopne
adc
data16
xchg
push
popa
xor
inc
or
add
lea
add
sub
fmulp
mov
popf
enter
pop
enter
and
xchg
mov
dec
std
loop
dec
mov
jno
mov
push
or
push
xchg
popa
divl
shr
js
pop
jae
subb
dec
into
mov
xchg
mov
push
mov
push
in
leave
push
mov
add
cmp
loopne
out
bound
and
icebp
daa
xor
shll
shll
fists
pop
mov
xor
add
cmp
jecxz
inc
xchg
fmull
je
lods
sub
push
stc
lahf
ds
pop
icebp
mov
test
adc
dec
or
sti
push
mov
mov
aas
outsl
adc
push
or
mov
mov
dec
add
jg
push
arpl
and
and
pop
lea
inc
and
fnsave
lods
jecxz
ret
out
adc
inc
jb
and
push
div
adcb
mov
dec
adc
add
sub
xlat
ret
arpl
out
and
in
mov
loope
les
ljmp
mov
cli
movsl
xor
mov
adc
shrl
rcr
or
dec
or
push
mov
pop
dec
adc
sbb
popa
ret
jle
loopne
sbb
fsubrl
adc
xor
dec
pop
loope
fcmovnbe
test
fs
fildl
mov
or
test
jb
push
jle
loop
xlat
sbb
mov
lods
je
icebp
repz
stos
lds
outsb
scas
add
push
and
jno
ds
mov
out
test
push
xor
push
mov
cltd
cs
jmp
sub
imull
xchg
push
out
jle
jnp
cs
add
shl
xor
test
xchg
push
inc
dec
xor
js
pop
out
mov
cmpsl
mov
aam
jle
xor
into
dec
xlat
rorb
mov
mov
sbb
inc
repz
dec
js,pt
inc
xlat
test
test
mov
out
inc
adc
outsb
sbbb
data16
icebp
mov
dec
xor
push
ror
mov
popa
test
faddl
and
out
into
loope
push
jmp
jmp
shlb
mov
xchg
cmp
mull
ret
out
cmp
jge
pop
cld
pop
jmp
or
les
lret
and
push
dec
test
hlt
xor
and
popa
inc
mov
mov
data16
daa
bound
xor
mov
push
loop
shr
inc
in
out
cwtl
push
loope
cmp
adc
inc
test
and
mov
mov
cmc
fs
push
jecxz
xor
mov
mulb
mov
jle
mov
mov
inc
xor
adc
shl
push
scas
das
pop
sub
cwtl
push
and
sysenter
in
stos
outsb
xchg
adc
cmp
pop
js
stos
sarb
ret
and
inc
dec
xor
rol
cwtl
pop
sahf
mov
xor
pop
imul
lock
jle
clc
fdivl
loopne
je
cmpsl
cmp
dec
sbb
dec
and
sbb
add
in
orb
decb
les
and
adcl
xlat
inc
xor
les
or
mov
pop
jb
dec
mov
sub
dec
sub
aas
dec
xor
out
shl
fs
jle
je
mov
out
or
jo
in
loopne
aam
push
out
sahf
xchg
mov
jp
add
pop
jecxz
loop
rcl
outsb
and
sub
cmpsl
xchg
lock
scas
inc
mov
mov
out
and
or
loop
je
add
dec
xchg
js
inc
cmp
adc
out
je
pop
mov
inc
xor
push
jno
cli
loop
loope
in
andl
mov
repz
push
loope
jmp
adcb
testb
cltd
mov
jnp
cmp
dec
out
cmp
dec
push
addr16
subl
lret
js
ret
xor
clc
popf
inc
stos
xor
test
hlt
push
add
adc
xchg
mov
pop
out
push
jle
add
adc
iret
mov
lahf
cmp
icebp
mov
mov
sbb
adc
lds
xor
inc
mov
and
das
mov
push
pop
mov
inc
pop
cmp
mov
push
dec
daa
add
in
sbb
adc
pop
jns
or
xor
imul
jnp
push
fidivrs
adc
cwtl
std
inc
inc
xchg
in
ja
sub
mov
daa
nop
xor
out
dec
outsb
push
add
jb
les
loopne
data16
or
in
jb
mov
adc
jmp
sbb
lods
adc
test
or
push
mov
dec
sub
imul
jecxz
call
push
aas
imul
pushf
fstpl
push
xlat
cld
mov
mov
out
mov
push
pop
pusha
sbb
mov
imul
xchg
data16
xchg
inc
popa
mull
mov
mov
inc
mov
dec
shll
inc
mov
rorl
xlat
icebp
xor
push
rorb
push
mov
sbb
popf
jge
ds
adc
inc
push
popf
add
push
int
push
sub
jno
push
jp
cmp
ljmp
cwtl
adc
push
lods
and
cmp
inc
sbb
mov
jl
add
xlat
lea
int3
stos
mov
into
and
cli
push
cmpl
mov
lahf
xor
xchg
adc
call
mov
or
mov
add
jge
xlat
roll
inc
mov
jno
adc
add
mov
sub
sub
push
repz
push
bound
mov
into
lods
les
xor
cmp
xchg
and
sbb
fidivs
out
in
orl
popa
xor
ret
xchg
adc
pop
rol
and
loop
xor
stc
es
adc
into
dec
inc
and
jne
les
mov
unpcklps
and
jbe
dec
add
inc
das
out
adc
shl
jno
push
imull
push
mov
and
dec
push
mov
inc
and
jno
icebp
call
xor
xor
pop
ljmp
jnp
iret
lds
mov
xchg
enter
cld
fiaddl
xor
jo
xor
inc
out
loope
subb
mov
lock
les
adc
fs
clc
je
add
xor
mov
bound
add
movb
push
ds
or
jae
jge
adc
jb
xor
rorl
and
or
icebp
sarb
push
out
inc
mov
or
xchg
mov
adc
loop
loope
ds
xor
mov
inc
outsb
cmp
pop
and
push
inc
jne
pop
ret
adc
fidivrl
pop
push
or
fisubs
inc
push
shll
push
xchg
call
inc
push
arpl
mov
sbb
and
stos
mov
add
xor
shlb
mov
cmp
loopne
push
xor
adc
mov
inc
mov
scas
xchg
push
bound
and
inc
cmp
jnp
sarl
inc
mov
xchg
cmp
dec
lahf
in
sub
cmp
xor
inc
fdivrp
mov
loop
pop
xor
cmpsb
sarl
mov
fs
mov
rclb
leave
add
repnz
lock
sub
in
adc
scas
xchg
push
add
inc
or
mov
push
out
inc
or
and
inc
sub
movl
push
in
cmp
mov
push
mov
scas
xchg
outsb
or
sub
xor
fldenv
imul
add
outsb
repz
cmp
or
and
and
push
ljmp
inc
shll
loop
jecxz
mov
inc
das
jo
stos
xchg
push
and
xor
adc
enter
mov
jns
adc
sbb
add
bound
jne
repz
and
inc
dec
xchg
adc
adc
xor
xor
mov
push
ja
js
rcll
fs
mov
sub
push
xor
popa
jnp
xchg
cltd
in
imul
and
mov
inc
loope
jecxz
mov
jo
movsl
mov
out
icebp
xor
out
jecxz
cs
lods
stos
orl
arpl
push
jne
outsb
jno
daa
and
icebp
and
pop
mov
jb
jno
or
dec
inc
xor
loope
adc
sbb
addl
and
inc
push
sahf
shrl
jbe
mov
lcall
fs
mov
adc
push
jae,pt
pop
fwait
shl
and
fisubl
inc
adc
repz
or
mov
js
push
add
and
outsb
ret
inc
xchg
repz
jo
dec
aam
xlat
repz
adc
fsubs
aam
add
jle
add
add
int
leave
adc
xor
and
dec
jmp
dec
inc
loope
ss
daa
icebp
or
jmp
js
jae
and
sub
inc
imul
popa
mov
loope
mov
adc
or
clc
mov
mov
push
shll
shlb
xchg
and
adc
es
adc
jns
mov
clc
cs
and
jbe
jge
add
bound
and
mov
xorb
push
call
sti
sub
pop
xorl
mov
jecxz
outsb
adc
push
lods
push
out
loop
sub
loope
mov
int3
je
ljmp
lret
jmp
rcll
xor
xor
push
out
mov
add
jbe
dec
inc
xchg
les
ret
dec
sub
out
into
adc
rorl
push
je
mov
xor
inc
mov
dec
inc
icebp
lock
jp
mov
lcall
jecxz
loope
dec
xchg
push
pop
fiaddl
mov
add
movsl
xor
push
xchg
push
daa
arpl
adc
fsubs
test
push
cmc
and
or
jae
adc
and
cmpsb
or
sbb
push
xor
cs
sbb
pop
cmpsb
and
daa
mov
pusha
js
dec
inc
shlb
lret
aam
mov
popa
xor
dec
jno
notb
int
mov
push
push
cs
mov
mov
bound
movsb
jecxz
xchg
lahf
push
add
in
push
mov
and
push
dec
push
rcrb
orl
pop
inc
push
jno
sarb
pop
push
popf
dec
popa
out
jb
jae
jp
cmp
inc
popa
dec
and
js
icebp
push
adc
shlb
in
push
and
add
popa
mov
and
xor
popa
xor
out
jmp
lock
mov
jp
jmp
bound
mov
dec
mov
inc
push
inc
and
int3
les
fstpt
jecxz
or
adc
arpl
imul
xchg
daa
dec
push
cmovs
xchg
push
repz
and
mov
clc
fdivs
jge
fiaddl
adc
inc
adc
arpl
dec
int3
and
pop
adc
fiadds
pop
fistpll
push
lock
add
mov
inc
ret
adc
jb
in
cmp
dec
andl
out
dec
fdivp
cs
xchg
push
add
fisubrs
push
and
xor
mov
mov
stos
dec
and
xlat
roll
and
inc
out
lret
ret
inc
dec
cmp
mov
inc
lock
add
jle
in
aam
mov
push
push
je
rcrl
lret
sti
js
in
orl
push
inc
stos
xor
jnp
mov
les
fnstenv
rorl
add
fisubl
xchg
and
enter
jae
loope
push
push
sub
mov
rcl
adc
clc
mov
sbb
cmp
jbe
jb
leave
aam
addb
or
les
and
inc
push
repz
pop
std
xor
lea
repz
insb
push
mov
outsb
into
lcall
jecxz
push
jb
pop
out
xlat
xor
les
mov
pop
les
sub
hlt
push
insb
adc
mov
xlat
mov
xor
test
adc
dec
and
xor
out
mov
cmpsb
adc
mov
mov
add
push
adc
dec
sbb
inc
jo
dec
imul
adc
mov
dec
lock
mov
add
xchg
xchg
aas
cwtl
cmpsl
jl
sar
mov
out
or
push
popa
out
stc
out
lret
icebp
jecxz
adc
and
push
xor
ret
test
out
sbb
cmpsl
jecxz
stos
cmpsl
es
pop
shlb
cs
je
jo
dec
outsb
ja
adc
jo
push
daa
and
aas
dec
inc
mov
mov
dec
push
loopne
outsb
out
xor
mov
xor
insb
push
out
subb
fs
jge
mov
xor
dec
orl
sub
add
xor
mov
shll
push
call
not
add
out
cmp
mov
das
mov
add
lods
push
cld
packuswb
test
loope
jns
jo
or
mov
and
bound
pop
jae
jge
xchg
dec
pop
mov
or
xchg
and
ds
outsl
into
jo
xchg
icebp
or
jl
sti
or
add
int3
push
sub
enter
icebp
xor
out
cmc
jb
ret
jle
mov
ljmp
std
in
sbb
bound
sub
xchg
in
out
add
arpl
ret
popa
jmp
jp
mov
adc
inc
in
pop
lea
je
mov
cmp
inc
cmc
lea
or
or
mov
dec
sahf
xorl
out
in
xor
adcl
push
add
add
jle
xchg
dec
push
insb
cmp
mull
pop
jp
cmpsb
adc
sbb
and
or
dec
inc
push
inc
or
add
cmp
inc
imul
out
loopne
mov
fmull
les
jns
scas
mov
and
shl
add
inc
dec
mov
push
xor
addb
push
fidivl
lock
adc
xchg
push
loope
dec
movsb
jecxz
sbbb
outsl
je
test
bound
adc
aad
xchg
cmp
out
push
mov
ret
mov
outsb
lods
and
jo
clc
cs
xor
loope
xchg
sbb
popa
xchg
rcl
cld
mov
push
xlat
xchg
add
inc
jae
fs
xor
xor
dec
mov
in
add
add
pop
jl
fistpl
scas
push
rcl
xor
repz
and
popa
out
rcll
adcb
xchg
clc
and
sub
iret
jmp
repnz
loope
and
lcall
add
xor
dec
jb
inc
push
and
bound
and
scas
ret
roll
push
jne
mov
subl
popa
push
pop
pop
and
out
addr16
cmpsl
outsb
je
mov
rcr
mov
xchg
jno
lds
cmp
dec
xchg
mov
mov
mov
icebp
outsb
inc
mov
xor
mov
and
inc
push
pushf
loop
push
ret
in
mov
add
jle
in
jno
addl
adc
cmc
mov
test
into
push
in
xchg
push
icebp
jle
xor
fs
adc
add
fiadds
mov
and
push
sbb
popa
repz
xor
pop
and
es
in
inc
cwtl
bound
adc
sahf
or
in
fsubr
xor
inc
outsb
lods
sbb
xor
jns
sub
loop
shll
add
shll
jb
cmp
sbb
clc
push
jge
ror
add
outsb
mov
mov
and
xchg
add
push
mov
ljmp
adc
rcl
mov
popa
pop
cmp
mov
dec
sbb
xor
pop
inc
xchg
jmp
pop
jle
adc
outsb
mov
add
into
jecxz
ljmp
mov
add
sub
sub
xchg
mov
pop
jb
aam
cs
jmp
loope
xor
inc
inc
jae
fcmove
and
shl
jno
shll
adc
and
mov
mov
dec
clc
add
xchg
lods
cmpsl
bound
adc
popa
jmp
push
je
jbe
out
ret
mov
jecxz
adc
adc
jne
push
arpl
or
pop
push
adcl
adc
jle
sbb
out
adc
les
fisubs
mov
inc
mov
out
rcr
test
inc
add
scas
repz
push
xor
adc
rcll
jb
fadds
push
into
add
idivb
shl
jne
repz
inc
dec
pushf
lret
ljmp
mov
das
mov
mov
cli
xchg
mov
cmp
xor
ds
in
ret
mov
mov
daa
mov
fisubs
jno
call
rorl
lret
push
addr16
shl
and
shll
mov
mov
rorb
fidivrl
rcrb
xor
pop
and
push
and
adc
rorl
cmp
push
out
cmp
push
and
jo
mov
or
push
sbb
fimuls
dec
add
loope
push
jl
lods
push
dec
mov
adc
ljmp
and
sub
fdivr
xlat
add
dec
aaa
mov
mov
nop
push
jecxz
fadds
mov
mov
xchg
imul
adc
or
mov
je
sarb
bound
imul
icebp
mov
sbb
roll
ret
mov
xchg
dec
outsb
inc
xchg
inc
or
adc
insb
and
push
jge
jl
dec
rol
loop
mov
movsb
cs
add
mov
push
and
mov
push
xchg
sub
adc
dec
into
lret
orl
adc
add
push
push
add
jne
xor
add
sbb
xchg
insb
add
add
push
adc
dec
sahf
incb
sub
xor
ds
lock
loopne
and
cmp
and
jl
sub
xor
arpl
repz
fistpll
jecxz
aam
and
add
and
push
inc
arpl
mov
je
and
mov
and
jecxz
xor
sub
dec
fnstsw
test
and
rorb
xor
add
cmc
outsb
roll
xor
adc
jge,pn
mov
xchg
xchg
adc
into
testl
xchg
jle
hlt
jae
mov
add
mov
sub
jge
xor
roll
push
push
adc
adc
sub
dec
push
push
jo
out
dec
or
inc
ret
and
loope
daa
mov
push
dec
xchg
out
adc
mov
or
fs
dec
dec
ficompl
stos
shrl
das
add
and
pop
int
fsubrl
out
jno
push
cmc
xor
lahf
add
sbb
sub
mov
dec
inc
in
popa
movsb
ja
push
inc
popa
repz
inc
shll
test
dec
sbb
sbb
mov
movsl
mov
test
mov
aaa
add
adc
je
cmp
nop
xchg
xchg
inc
add
ds
push
pop
mov
cs
int3
ret
jno
jecxz
inc
and
adcb
ss
sar
in
data16
sahf
ja
ds
dec
mov
mov
out
aas
mov
orl
jecxz
add
inc
les
push
out
stos
jnp
hlt
jb
ret
repz
iret
mov
aas
pop
or
icebp
mov
rorl
out
fs
arpl
inc
jno
repz
ret
push
add
nop
xlat
pop
aam
adc
mov
push
mov
xchg
dec
rcll
jns
enter
into
scas
sub
hlt
dec
in
adc
in
and
jb
aad
push
dec
sbb
lret
jo
push
rclb
xor
adc
cmp
je
lock
loope
rol
adc
xor
mov
jb
arpl
cmp
xor
cmp
icebp
mov
dec
inc
outsb
insl
data16
mov
xchg
loop
outsb
loope
xchg
xorb
and
xor
je
lcallw
adc
icebp
add
rcl
push
jne
push
gs
or
mov
and
leave
mov
mov
mov
loopne
fnsave
je
mov
xor
outsl
jl
adc
add
rcll
jle
in
outsl
xchg
arpl
and
mov
jns
and
out
cs
sub
mov
repnz
pop
mov
mov
xor
lea
push
or
fsubrs
scas
jp
sub
sub
mov
sbb
daa
inc
fsubp
fs
rorl
movsb
push
test
xchg
out
repz
xor
out
dec
out
fistl
addr16
push
xchg
mov
mov
ret
lods
cmpsl
xchg
sbb
roll
xor
ss
hlt
outsb
jl
mov
inc
and
mov
or
fwait
push
lret
loope
and
stos
mov
inc
xlat
mov
fcmovnbe
mov
add
push
inc
fadd
es
dec
icebp
or
adc
and
jge
out
add
sbb
data16
stos
xor
imul
mov
into
jecxz
push
cs
ret
cmp
les
outsb
sbb
jbe
push
add
test
push
div
dec
test
rcl
xlat
cltd
push
mov
or
je
push
repnz
adc
xor
dec
mov
popf
in
sub
sti
xchg
andl
lock
insl
push
adc
nopl
cmp
cld
push
xchg
shll
icebp
es
and
adc
adc
ret
push
mov
cs
xchg
and
cmc
xor
mov
rorl
leave
jle
ficoms
pop
in
loope
ficompl
fnsave
mov
dec
arpl
xor
shrb
sbb
repz
mov
push
out
fsubrs
push
jb
mov
xor
imul
xor
inc
or
icebp
rol
stos
cmp
in
jle
inc
jno
cmp
jl
adc
mov
dec
add
cli
mov
fs
xchg
xor
into
inc
bound
add
jb
hlt
add
xchg
mov
cmc
out
add
adc
mov
int
testb
adc
mov
out
repz
xor
roll
testl
xchg
adc
sbb
xor
pop
sbb
mov
adc
adc
pop
dec
inc
push
and
sub
jecxz
ljmp
sbb
shlw
mov
xchg
mov
xchg
mov
gs
or
jmp
adc
dec
dec
push
jg
fmuls
shr
add
fdivrs
adc
imul
fimull
push
inc
jecxz
inc
arpl
add
mov
popa
push
fidivl
ror
icebp
jo
imul
push
add
scas
orl
scas
nop
add
loope,pt
je
arpl
dec
and
mov
jl
cmp
push
xor
lods
int3
and
loop
arpl
xchg
dec
xchg
push
mov
jb
mov
add
fcoms
add
push
xor
dec
mov
scas
push
push
inc
in
cmpsl
adc
sbb
push
push
push
les
dec
mov
dec
adc
dec
repz
xor
jle
rorw
sbb
dec
jae,pn
test
mov
add
add
outsb
inc
loop
pop
mov
mov
nop
loope
sbb
ret
and
je
dec
int
mov
xlat
fs
add
inc
inc
jge
bound
mov
push
fucomp
mov
shr
shrl
jne,pn
add
lods
lds
mov
arpl
sub
inc
mov
in
arpl
push
jmp
ret
pop
xlat
adc
in
les
ljmp
mov
and
push
shll
and
mov
testl
bound
inc
mov
mov
icebp
xor
xor
inc
and
push
lret
in
or
divl
pop
adc
sub
xchg
push
iret
add
fwait
inc
ds
mov
xchg
std
out
jbe
in
mov
dec
roll
push
mov
xchg
push
es
xlat
adc
inc
jne
addr16
inc
and
rcrb
xchg
jae
cmp
mov
sti
shrl
inc
dec
mov
rcll
push
out
loopne
out
and
clc
icebp
add
out
adcl
jle
into
cwtl
xchg
dec
mov
ja
lahf
mov
add
inc
cmpl
add
and
cmp
xor
and
popa
out
lcall
pop
shlb
push
dec
jl
repnz
mov
mov
xor
rcll
sti
data16
jp
sub
push
in
out
add
and
mov
repz
inc
cmp
js
add
and
mov
xchg
mov
jne
cs
js
add
pop
mov
mov
mov
cmp
enter
aaa
ljmp
clc
addr16
mov
nop
leave
push
mov
mov
mov
test
inc
cld
sbb
das
xchg
sub
inc
std
sub
iret
pop
jb
jmp
sqrtps
push
pop
ds
push
clc
cwtl
add
pop
xor
mov
lret
mov
xchg
je
cmp
dec
push
shl
cld
mov
fcmovnu
pop
dec
or
fbld
inc
test
dec
leave
mov
cmp
xor
iret
je
lock
xchg
sbb
pushf
and
push
inc
xchg
push
mov
xor
dec
outsb
jae
loope
std
mov
adc
push
mov
std
outsb
xor
jns
cs
mov
xchg
loopne
inc
push
adc
adc
xchg
das
dec
inc
mov
arpl
les
out
inc
sbb
into
roll
out
cmp
xchg
push
inc
outsb
add
shll
negb
clc
adc
sub
xchg
adc
push
adc
xchg
and
mov
dec
inc
out
push
inc
xor
cmp
loope
inc
adc
and
push
xlat
icebp
xor
sub
jnp
fdivs
ljmp
cmpsl
pop
data16
xchg
mov
xchg
ror
pop
repnz
or
jnp
outsb
lret
jnp
xor
dec
cmpsl
stos
daa
sub
les
stc
jne
out
mov
ljmp
out
fs
in
mov
mov
adc
rcrl
stos
out
mov
mov
fcoml
add
test
xor
into
jne
mov
mov
jne
push
sti
push
shl
xor
pushf
mov
pop
pop
or
push
ljmp
mov
jns
sbb
xchg
jb
dec
sbb
cwtl
push
dec
mov
ds
cmpsb
xchg
imull
and
mov
sbbl
mov
dec
dec
ss
call
jl
aaa
mov
shl
mov
je
sub
adc
shrb
fs
sub
jecxz
and
rorb
push
lods
ret
mov
xlat
push
xchg
add
xlat
mov
ret
shl
sub
shrl
push
adc
mov
mov
fninit
lods
jecxz
lcall
cmp
mov
jb
and
mov
inc
mov
cmpl
in
pop
nop
js
mov
and
mov
insb
out
jno
repz
bound
ret
inc
and
scas
pop
loop
jae
loope
es
cmp
jmp
shlb
inc
jnp
rcrl
inc
ret
fsubrl
push
outsb
xor
mov
adc
add
repz
out
jae
xchg
xchg
adcl
adc
pop
cli
sbb
and
fsubp
loope
es
xchg
jb
inc
outsl
ret
cmp
mov
and
popa
inc
loop
jb
jecxz
add
push
imul
cmpsl
mov
mov
inc
ret
out
test
aad
cmp
fidivl
sbb
call
outsb
dec
jno
push
and
cmpsb
loope
add
aas
daa
xor
cwtl
xlat
inc
adc
loop
mov
aas
fisttps
lods
jns
mov
and
mov
andl
mov
xchg
adc
mov
mov
sub
loope
popa
xchg
iret
jae
rcrl
les
test
pop
push
inc
addl
stos
mov
xlat
push
jl
sub
outsb
cli
outsb
and
and
or
into
mov
fisttps
fwait
mov
repz
scas
and
and
mov
mov
mov
rcl
cwtl
adc
adc
ds
movsl
das
mov
dec
mov
push
adc
lret
scas
jge
dec
mov
cmp
push
mov
mov
mov
jae
arpl
jno
sub
mov
sub
faddl
popa
sbb
cmp
mov
fs
out
rcll
jno
and
jle
pop
mov
outsl
push
adc
out
loope
andl
rol
jle
sub
clc
sub
jmp
jecxz
faddp
popa
rorl
push
rep
jp
sbb
inc
and
mov
es
fiaddl
mov
adc
adc
xchg
jecxz
push
dec
cmp
fwait
outsl
cmp
adcl
les
bound
jno
cli
out
push
jae
mov
xchg
and
sub
popa
ds
sbb
sti
movsl
not
adc
push
or
or
fwait
out
bound
mov
fdivl
inc
jno
es
add
mov
in
jl
cmp
mov
xor
cmp
jb
icebp
and
add
or
out
shlb
les
mov
dec
out
adc
arpl
cmc
xor
sbb
stos
in
add
add
icebp
in
xchg
in
pop
and
xor
xor
int
push
popa
hlt
stos
jno
add
rcl
adc
xor
loop
andl
shll
xchg
xor
xor
xor
sbb
jl
outsl
dec
outsb
xchg
xchg
loope
jg
mov
or
in
xchg
adc
icebp
and
mov
add
out
rorl
rol
push
mov
stos
adc
push
adc
cmp
xor
inc
mov
jle
std
and
addr16
cli
xor
mov
add
xor
pop
arpl
ret
cmp
inc
in
ret
mov
jae
add
jecxz
cmp
jns
jl
andl
repz
cmp
sahf
mov
test
divl
outsl
jp
shll
cld
pop
mov
adc
push
testb
in
pop
adc
sahf
enter
xchg
shll
jne
mov
fs
push
rorl
jno
stos
ficomps
shlb
in
adc
popa
push
mov
push
dec
jecxz
mov
and
or
adc
int
jb
test
ret
in
loope
mov
xchg
mov
mov
shlb
mov
inc
ds
cmp
xchg
jge
fnstenv
pop
rcl
mov
xor
mov
and
mov
mov
scas
jno
add
xor
xor
xor
mov
ret
sub
fists
scas
jb
std
out
inc
push
dec
and
das
push
inc
scas
aam
icebp
add
arpl
outsb
push
mov
subl
dec
mov
iret
or
adc
inc
jp
ds
mov
mov
inc
adcb
dec
cmp
mov
push
jbe
inc
adc
sub
mov
int3
xchg
or
add
jmp
and
xor
dec
dec
mov
cld
xor
dec
stc
testl
sub
cmp
stos
rol
adc
or
mov
rolb
mov
fs
cwtl
pop
cs
jge
sbb
mov
test
call
xchg
mov
push
pop
jno
movsb
dec
aam
ret
fdivrl
push
mov
cltd
mov
int3
inc
pop
inc
sbb
cmpsl
cs
mov
mov
rcll
outsb
dec
mov
push
and
movsl
ret
loopne
lcall
out
stc
mull
enter
das
nop
mov
jae
int3
mov
in
push
rcll
ret
mov
mov
mov
mov
inc
leave
xlat
subl
push
jo
and
push
andl
and
or
push
or
lcall
and
xorl
mov
dec
popa
into
xchg
adc
or
xchg
xor
ja
push
andb
mov
pushf
xlat
mov
xor
xor
sbb
out
and
ret
out
pop
mov
cmp
cmp
adc
xlat
pop
fidivs
adc
push
push
imul
cs
loope
cmp
mov
pop
pop
test
xchg
pop
out
out
fs
adc
loope
dec
mov
xor
fcmovbe
adc
ret
jno
add
and
or
repnz
mov
repz
mov
pop
mov
cmp
shll
in
dec
push
xchg
je
push
xchg
imul
mov
ds
cmc
cmp
inc
adc
sbb
pop
into
out
xchg
mov
mov
rorb
xor
mov
push
dec
push
mov
xor
movb
push
jp
mov
pop
test
out
les
leave
add
push
mov
mov
dec
outsb
cs
int3
cli
and
cmp
sub
and
ret
call
jo
xchg
or
icebp
mov
xor
into
and
in
roll
out
mov
dec
xor
jecxz
mov
xchg
xchg
daa
dec
inc
mov
es
rolb
xor
outsb
fucomi
pop
clc
jno
push
adc
cmc
dec
orl
sub
adc
mov
cmp
xchg
pop
jno
and
cs
sub
cmp
pop
dec
dec
or
add
jle
and
out
or
daa
add
sub
je
xor
push
inc
sahf
std
or
xlat
inc
out
pop
mov
outsb
or
shll
les
pop
in
xchg
xchg
scas
xchg
sub
mov
add
push
sub
adc
les
les
or
cmc
mov
dec
js
repnz
movsl
rcll
xor
push
in
mov
adc
into
bound
je
ljmp
ret
bnd
mov
bound
nop
cmp
xchg
add
dec
je
sbbl
jne
mov
xor
dec
jb
inc
jae
loop,pn
repz
adc
lds
push
ds
bound
int
scas
mov
pushw
je
xor
jo
inc
mov
in
pop
xchg
ret
add
popa
cmpsl
push
inc
jmp
xor
lret
int3
add
rolb
and
and
scas
push
dec
outsb
imul
stos
inc
inc
mov
outsb
mov
dec
xchg
mov
out
xor
loope
push
icebp
into
jb
aaa
int
xor
pop
loope
les
or
pop
pop
stc
adc
add
enter
pop
and
sub
les
adc
push
pop
mov
mov
xor
mov
fmull
add
jno
ret
mov
inc
fistpl
push
push
std
sar
mov
unpcklps
out
outsl
xorb
jmp
mov
icebp
mov
pop
inc
shl
cmp
scas
mov
arpl
cmp
sub
pop
inc
loop
push
jb
sbb
popaw
arpl
hlt
popa
sub
mov
lret
jne
xchg
jle
jns
jle
cmp
sarb
movsl
xchg
test
mov
rcrb
repz
bound
xchg
add
and
dec
cltd
loope
cmc
adc
jnp
inc
stos
push
rorb
inc
mov
push
rcr
inc
cmp
je
xor
adc
in
cmp
movb
sbb
inc
or
dec
push
pop
and
icebp
es
or
jne
mov
and
inc
ds
adc
mov
arpl
sbb
jo
jne
and
popa
push
pop
roll
and
lds
stos
push
movb
dec
xor
jns
popa
and
and
lock
xor
jb
fs
test
jo
jo
dec
pmaxsw
arpl
push
push
and
push
out
add
jl
lods
sbb
adc
adcl
movb
push
and
cmp
je
rep
xchg
addr16
pop
sbb
cmpl
mov
test
pop
push
pop
push
and
lcall
addr16
xlat
ret
in
loopne
mov
xor
mov
cmc
jle
jno
mov
jecxz
lods
std
outsl
and
filds
and
lret
adc
jno
out
cmove
and
cmc
popa
mov
icebp
shl
roll
outsb
loope
rcl
push
movsb
cmc
arpl
lea
outsb
shl
fs
shrb
adc
ror
xor
push
int3
ljmp
roll
insb
add
adc
into
cmp
inc
inc
mov
dec
sub
je
dec
inc
std
sub
push
imul
xchg
cmpsb
and
ret
inc
dec
or
fs
stos
inc
xchg
fmulp
adc
outsb
xor
aas
push
push
mov
or
push
mov
jmp
dec
pushf
movsl
dec
jno
inc
insl
rcl
xor
repz
push
add
negb
or
loope
push
push
mov
adc
not
and
adc
ret
test
sbb
jbe
shrb
push
nop
jbe
roll
sbb
mov
int
icebp
in
cs
mov
dec
push
fsubl
bound
loope
push
cmp
sahf
adc
xor
or
mov
mov
mov
or
jae
leave
clc
icebp
jae
jno
loope
and
mov
jb
call
lods
out
loopne
sub
add
pop
xchg
outsb
xlat
add
mov
push
lods
lret
mov
cmp
jle
add
xchg
adc
out
rcll
arpl
stos
mov
ljmp
mov
je
xchg
fsubl
xor
imul
push
shrl
pop
push
jmp
sbb
and
xchg
or
push
ret
add
pop
mov
push
lret
fistpl
xor
jecxz
adc
fs
stc
cmp
mov
jp
cs
movsl
daa
adc
adc
xchg
shll
jno
out
inc
xchg
inc
sub
icebp
addr16
xchg
cmp
add
cmpsl
mov
mov
into
jne
and
inc
in
lret
into
bound
ret
jno
and
push
adc
arpl
jecxz
in
aas
subl
push
les
mov
inc
test
add
test
jle
inc
xchg
add
not
inc
and
sub
xor
xchg
inc
xor
rcll
aam
rclb
push
sub
xchg
icebp
mov
in
xchg
outsb
repz
out
adc
int3
into
and
jno
jb
ror
push
fs
idivb
xchg
xor
and
clc
sub
jecxz
int
popa
cmc
add
xor
cmp
cmp
mov
lret
inc
inc
rcrl
mov
inc
ret
stos
les
add
in
adc
inc
mov
push
push
and
ja
mov
std
adc
test
aam
xchg
je
add
push
mov
les
mov
adcl
xchg
mov
push
mov
mov
les
es
ret
mov
fistpl
into
shlb
push
push
mov
mov
jge
adc
lret
cmp
and
clc
xchg
xor
push
xchg
push
jle
jge,pn
dec
xchg
ljmp
ljmp
adc
lcall
out
and
push
mov
mov
in
in
or
push
add
sbb
insl
popa
movsb
sbb
ljmp
mov
xor
push
repz
cmc
xorl
das
lret
adc
lock
popa
outsb
cs
inc
push
xor
jae
hlt
orl
mov
fs
jns
dec
into
inc
dec
xor
push
cwtl
push
mov
sbb
inc
outsl
shl
shll
jmp
jo
and
xchg
push
jae
fs
adc
imul
pop
push
nop
cmp
mov
push
cs
fisttpll
repz
or
aam
bound
push
xchg
mov
push
lods
xchg
mov
lret
loope
into
inc
popa
xor
sbb
add
and
lods
popa
bound
add
je
roll
pop
add
adc
xor
pop
cmpb
inc
iret
xchg
add
lods
or
iret
inc
repz
push
xchg
outsb
sarb
push
mov
aas
xchg
stos
jge
ss
inc
push
xlat
popa
push
mov
mov
jg
add
adc
inc
imul
fidivrl
jno
stos
sub
nop
mov
lret
lret
xchg
ljmp
push
adc
add
addr16
adc
stos
cs
sub
push
push
ret
sub
ja
dec
bound
adc
call
loope
jle
int
dec
inc
pop
pop
sbb
out
into
into
repz
je
loope
mov
jecxz
ss
xor
mov
xor
loope
mov
mov
out
jb
mov
out
jae
inc
add
sbb
in
adcl
mov
outsb
ror
repz
popa
inc
mov
add
jnp
mov
pop
push
xlat
dec
negl
sub
outsb
inc
jb
jb
in
add
push
and
popaw
pushf
repz
xchg
gs
mov
data16
and
lea
mov
xor
into
xor
xor
sub
jmp
divl
sub
lds
pusha
pop
hlt
cltd
xorb
rolb
and
dec
ret
sbb
bound
loop
cmp
pop
dec
rcrl
shrl
push
inc
push
les
cmp
push
jno
cmpsl
push
add
out
xor
xor
cmp
ljmp
or
cld
je
sbb
xor
adc
aam
jecxz
mov
scas
js
dec
ret
and
outsb
in
call
xor
mov
mov
and
fs
cs
shl
mov
adc
xchg
cmpsb
out
daa
mov
xchg
imul
loope
test
sbb
add
addr16
xorb
jg
dec
xorl
jno
fisubs
bound
pop
adc
push
jo
testl
in
imul
loope
shll
adc
arpl
inc
mov
xorb
xchg
xchg
mov
add
arpl
cli
lea
adc
jle
and
and
cmp
mov
jmp
xor
adc
xor
dec
mov
jnp
xor
push
insl
or
lret
add
mov
add
adc
dec
mov
outsb
add
jmp
xorb
cmp
popa
dec
push
jle
push
ds
out
add
adc
pop
jno
and
push
push
and
insl
popa
inc
hlt
cwtl
adc
daa
adc
sub
ret
and
inc
xor
mov
lods
js
fmull
push
push
adcb
sbb
ss
je
inc
adc
xorb
pop
mov
cmpsb
lcall
xorl
add
xor
add
inc
pop
pop
mov
sub
fidivrl
movsb
sbb
aam
sbb
xor
dec
shll
xor
xor
mov
lret
shlb
inc
sbb
imul
mov
xor
rclb
push
cs
adc
and
and
or
sub
add
les
jbe
add
xor
push
xor
mov
mov
roll
jns
into
ffreep
leave
rorb
out
ds
fs
sar
xor
mov
rcrb
mov
cmpsl
and
push
daa
jnp
jb
loope
lods
loope
and
pop
addl
add
inc
jo
pop
and
xchg
fs
fcomi
repz
push
push
dec
loope
rcll
rcrl
in
cmp
xlat
in
xor
pop
dec
mov
xor
xchg
stos
add
les
out
and
mov
repz
dec
adc
push
lret
mov
fwait
les
imul
inc
leave
repz
or
xor
xor
out
xchg
xorb
roll
push
mov
pop
jmp
inc
loopne
mov
hlt
xor
sarl
push
ret
inc
popa
cmpl
cmp
icebp
adc
cmp
and
stc
adc
mov
jns
lret
push
icebp
shll
adc
rcr
inc
push
xlat
mov
inc
dec
fdivl
repz
subb
lea
mov
push
adc
addl
push
xor
add
jp
out
idivl
loope
jle
lret
add
or
xchg
cmp
cli
jmp
fadd
xlat
inc
jae
dec
aam
in
lods
dec
into
inc
jle
fnstenv
push
xlat
rorl
cmp
jle
out
xor
jae
std
mov
cmpsb
dec
and
shrb
xlat
leave
les
ljmpw
add
and
xchg
or
xor
shrl
ret
daa
pop
inc
pop
and
and
add
pop
mov
push
rcl
ds
push
jo
fwait
or
cmp
fadds
push
jecxz
outsb
xchg
sub
ss
in
loop
jecxz
add
mov
shl
and
jae
loope
inc
loope
lods
inc
xlat
shlb
shr
je
cmp
pop
call
and
cli
data16
or
sti
xchg
adc
je
push
mov
cmc
add
bound
fsubrs
and
xchg
add
or
pop
outsb
xor
xor
mov
xchg
and
ret
std
out
mov
xor
shlb
and
repz
mov
test
xor
cmp
jno
sub
push
rcrb
jecxz
fiadds
add
xchg
adc
push
clc
cmp
mov
scas
roll
out
neg
mov
push
shlb
mov
rcll
push
or
xchg
in
dec
xchg
xlat
subl
xor
cmp
cmpb
inc
jle
and
push
fimull
xchg
jb
push
mov
adc
xor
cmpsb
sar
jecxz
addb
push
into
ja
cmc
push
add
sub
push
repz
cwtl
adc
xchg
dec
push
sarl
and
sbb
inc
fs
cmp
out
inc
xor
add
push
fcmovb
loope
and
into
and
or
mov
inc
push
arpl
dec
idivl
ljmp
and
sarb
xchg
sub
inc
popa
out
mov
addb
push
xorl
cmpsl
popa
push
adc
shll
fistpll
mov
xchg
enter
push
subb
mov
jo
mull
adc
push
jno
push
xor
lret
and
jl
jbe
adc
les
add
add
daa
je
mov
rcr
stos
xor
xor
fildll
jb
sarl
out
and
ds
mov
lret
push
mul
bound
sub
popa
inc
out
adc
lds
sarb
jb
ss
in
mov
add
adcb
out
adc
and
notl
test
pop
adc
les
inc
and
loope
push
adc
fcomi
paddw
jo
dec
dec
fidivrs
and
out
cmpl
cs
inc
bound
pop
inc
xor
int
jp
mov
ret
aam
jb
cmp
repnz
fisubrl
adc
fcomi
call
push
or
inc
mov
jb
ret
rolb
into
push
shll
loope
call
mov
push
out
es
push
iret
aam
xor
loope
and
into
mov
and
stos
and
lret
xor
mov
arpl
mov
and
les
mov
outsb
les
dec
cmc
adc
dec
movhlps
std
fimull
repnz
xor
and
gs
out
notl
xor
lds
and
bound
pop
addr16
lds
jecxz
cmp
mov
and
loope
ds
and
jnp
push
in
int
out
mov
cmp
push
insl
popa
aam
xchg
adc
repnz
loope
mov
or
sub
shll
sbb
push
xor
rcll
loope
ds
mov
xlat
add
scas
push
jae
push
mov
jecxz
adc
pop
push
loope
sub
ret
bound
lods
jecxz
dec
shr
inc
xchg
pop
add
dec
pop
dec
nop
arpl
inc
ret
cmp
adc
lret
in
ret
mov
mov
lret
sbb
jne
mov
xor
mov
loop
shl
lods
insl
push
mov
jae
shrl
dec
xlat
jbe
inc
int3
ret
dec
mov
or
enter
js
push
je
xlat
and
je
movsl
shlb
push
lret
popf
leave
dec
mov
xchg
rcll
fcoml
and
push
sar
addr16
es
xor
add
lods
nop
xlat
mov
add
repz
or
and
jb
inc
mov
out
and
push
mov
add
cmp
ds
test
mov
mov
call
xchg
and
in
test
sub
sahf
xor
add
pop
inc
mov
adc
dec
mov
and
shll
fs
popa
and
inc
and
xor
adc
pusha
and
shr
rcl
add
inc
xlat
xor
jmp
popa
je
out
into
mov
xchg
and
mov
adc
pop
sub
dec
xchg
and
cmc
pushf
das
out
mov
adc
mov
cmp
sub
popa
xchg
xchg
dec
jno
add
cmp
add
fsubs
int3
std
ljmp
dec
fsubrl
popa
cli
je
push
outsb
cmp
mov
pop
adc
or
lea
inc
inc
xor
loop
jno
jmp
in
test
pop
into
ror
roll
push
faddl
jg
out
cmpb
pop
ds
xchg
xchg
mov
jno
lock
inc
cs
xor
rcll
jns
jae
push
adcl
cmp
mov
lea
fbld
mov
ret
xchg
add
jmp
andl
inc
cltd
shl
dec
out
mov
push
ret
lods
mov
ret
adcl
jno
jl
orl
dec
into
outsb
and
in
sub
xchg
adc
mov
scas
imul
xor
outsl
and
push
xchg
roll
dec
cmc
outsb
push
mov
adc
sbb
fs
pushf
les
es
pop
sub
in
mov
lds
adc
pop
add
push
shl
movsl
dec
adc
sub
add
and
xor
repz
les
xor
mov
popa
inc
push
lds
dec
jmp
cmpsb
lahf
data16
adc
push
ds
sub
xor
repnz
jb
les
lods
movsl
bound
inc
adc
push
jmp
in
xor
push
into
imul
push
test
ds
das
jno
mov
rcrl
jmp
add
mov
inc
icebp
std
aam
ds
inc
sbb
push
push
mov
shl
mov
rorb
and
mov
mov
imul
icebp
repz
add
fs
imul
fsubrp
out
jnp
jns
or
scas
xchg
add
iret
and
xchg
inc
xor
and
mov
mov
push
inc
dec
push
sbbb
mov
lret
and
inc
jne
adc
seto
cmp
mov
jae
xchg
out
push
mov
add
sub
into
lret
clc
pop
mov
adc
cwtl
xor
les
cmp
bound
outsb
ds
xor
jno
addr16
inc
jecxz
and
mov
push
arpl
add
call
dec
cmpsl
les
add
pop
jg
pop
jae
xchg
adc
mull
fs
add
add
jno
xor
mov
call
sbbb
mov
dec
into
inc
xor
mov
cmp
jge
xlat
add
xor
loope
pop
loope
aas
sub
dec
mov
jns
fistpl
out
rcrl
xor
xchg
sbb
pop
jb
lcall
jle
xor
icebp
inc
fsubrs
jge
mov
push
mov
lcall
je
loop
mov
or
ret
inc
dec
shll
shll
call
add
push
push
push
out
ret
xchg
mov
pop
mov
add
push
mov
jne
and
sub
clc
mov
cmp
mov
mov
xor
es
scas
loope
jecxz
adc
inc
xor
sbb
sbb
xchg
out
and
sarl
sub
ds
imul
mull
sbb
jno
popa
xor
mov
xor
loopne
push
and
adc
sub
arpl
scas
jne
arpl
clc
shlb
push
mov
cmp
xchg
push
mov
pop
shll
iret
and
sub
cmp
mov
orl
xor
shlb
mov
mov
nop
inc
dec
cmc
sti
bound
les
jecxz
pop
jno
mov
loopne
arpl
outsb
imul
adc
sarb
aam
mov
enter
sub
imull
bound
icebp
cmp
mov
mov
and
into
jne
xor
push
and
adc
in
in
adc
mov
int
lret
jecxz
mov
mov
and
adc
adc
mov
cwtl
xor
ret
and
bound
repnz
adc
dec
repz
test
mov
and
dec
ds
and
sub
ljmp
pop
popa
xor
dec
cli
cmp
xchg
jle
push
pop
jae
dec
xor
sub
mov
or
add
roll
lock
xchg
out
ja
xchg
loopne
mov
orl
ja
fildl
rcl
jmp
daa
mov
sbb
bound
push
inc
call
data16
les
inc
jo
popa
cmp
cmc
ret
je
jae
push
mov
lret
dec
and
mov
sbb
push
adc
dec
and
sub
bound
jns
cld
hlt
mul
shll
mov
loope
out
add
fmull
sarb
out
sbb
in
mov
inc
loopne
jbe
pop
xor
inc
add
pop
and
shl
inc
scas
lahf
push
hlt
addr16
std
dec
bnd
outsb
push
shlb
repnz
mov
mov
pop
push
popa
outsb
inc
testl
jne
add
or
and
sub
mov
lcall
pushf
add
jge
imul
fwait
adc
negl
xlat
sbbb
jb
jno
shrl
inc
roll
xor
hlt
adc
enter
add
add
or
hlt
loop
jno
push
or
dec
and
jns
or
sbb
push
aas
ficoms
shrl
cmp
push
cmc
push
add
ret
ljmp
ja
repz
fcomps
mov
rcrl
xor
jno
adc
xchg
jge
add
shll
xor
arpl
popa
adc
push
js
xorb
adc
aam
call
fistpl
sti
call
adc
test
adc
fs
les
add
inc
out
push
imul
lcall
stos
add
push
push
cmp
add
out
aad
mov
ljmp
adcb
inc
push
add
roll
not
sbb
add
or
sbb
call
xor
adc
bound
and
push
inc
jno
lret
mov
inc
mov
adc
mov
stos
xor
push
adc
xor
into
les
sbb
out
cli
fs
inc
fidivs
jecxz
insl
adc
xchg
clc
dec
and
adc
ret
mov
add
jle
mov
dec
push
lret
rcll
aam
shlb
adc
dec
lret
push
repnz
jecxz
addl
and
les
cmp
dec
data16
push
push
pop
mov
cmp
and
stc
test
std
mov
dec
adcb
cwtl
inc
negl
ds
mov
mov
imul
jne
mov
je
adc
dec
mov
xorl
jo
clc
inc
mov
shl
mov
cmpsb
or
sahf
inc
shll
repz
mov
inc
inc
pop
xor
icebp
je
out
adc
and
ret
dec
or
roll
loop
jno
mov
dec
adc
push
mov
push
mov
or
cmpsb
sbb
cmpsb
or
sar
jmp
out
ret
push
jle
mov
fiadds
loope
aam
inc
dec
and
and
je
xchg
or
dec
xor
movsl
dec
and
add
xor
sbb
les
popa
aam
xor
inc
and
pusha
dec
xlat
imul
cmp
mov
push
out
push
xor
push
sahf
push
cmp
repz
dec
in
imul
repnz
mov
cmpsb
and
out
adc
mov
mov
jle
enter
mov
mov
jno
add
shll
adc
test
adc
xor
loope
popa
jnp
sub
out
xchg
xlat
ret
and
jb
rcrl
pop
fimull
mov
scas
lahf
fldl
adc
je
xchg
out
push
jae
lods
push
jge
rorl
mov
popf
mov
bound
mov
ds
int3
xor
stos
out
add
mov
xchg
out
jge
adc
shl
push
cmpsb
ljmp
xchg
arpl
push
mov
into
cs
xchg
xor
and
sbb
xchg
popa
mov
ret
out
sbb
mov
and
pop
or
fs
mov
mov
aam
inc
in
in
jmp
add
addl
data16
xchg
rorl
xor
and
and
fiaddl
xor
push
insb
jb
fdiv
pop
outsb
roll
mov
dec
adc
adc
ja
shrl
frstor
out
sahf
sbb
push
in
jns
js
lds
jno
jbe
jb
repnz
div
sbb
xor
std
leave
xor
dec
add
adc
dec
fs
jns
sbb
adc
outsl
mov
push
mov
sbb
sbb
push
iret
mov
xlat
ljmp
out
faddl
mov
into
icebp
and
adc
mov
dec
sbb
add
or
add
repz
jl
xor
add
jp
cmpsb
pop
mov
mov
cmc
ret
dec
xor
sbb
sbb
dec
mov
mov
inc
push
pop
xchg
mov
xchg
cmpsw
xchg
sarl
cmp
leave
jmp
or
mov
push
push
in
push
mov
outsl
add
sbb
xchg
pop
inc
push
popa
fimull
mov
inc
jle
adc
out
dec
push
jecxz
outsb
arpl
movsl
jmp
xchg
xchg
and
xchg
fdivrs
mov
rorb
xor
mov
jb
or
repnz
pop
or
or
ja
sub
popa
pushf
dec
out
je
outsb
and
jl
shlb
adc
mov
bound
mov
inc
daa
repz
out
shrl
shll
xchg
dec
pop
adc
adc
and
jne
xor
pop
cmp
push
int
xor
cmp
inc
xlat
lret
jle
out
adc
sub
adc
loopne
or
jle
inc
ljmp
testb
ret
mov
add
sbb
push
jns
ja
mov
add
ds
out
out
push
mov
xchg
dec
and
imull
dec
push
insl
jb
cwtl
mov
mov
and
movsb
or
mov
push
in
in
jmp
rcll
mov
mov
push
clc
and
dec
bound
mov
aas
lcall
push
ds
lret
xor
outsl
test
les
adc
adc
outsb
roll
lock
outsb
and
imul
inc
dec
pop
int
mov
dec
data16
in
ss
dec
aas
jge
mov
mov
pop
mov
fmul
aam
adc
je
orl
mov
mov
add
push
mov
test
mov
mov
add
mov
cmc
fyl2x
mov
sub
sub
subb
lcall
mov
scas
sbb
cmc
add
rorl
pop
roll
mov
jo
mov
arpl
push
out
adc
les
ret
jecxz
dec
mov
and
inc
inc
ds
inc
adc
in
and
jb
dec
test
cs
jmp
outsb
leave
stc
sub
jb
and
and
out
je
adcl
xor
shl
xchg
cmp
fidivs
and
add
arpl
jmp
lahf
loope
mov
ret
lea
xor
add
sbb
sub
sbb
sub
mov
sti
pop
ds
fadds
inc
xor
movsb
mov
push
loope
lcall
add
xorl
enter
mov
inc
mov
dec
push
xlat
mov
dec
mov
addr16
inc
mov
add
ja
loope
loop
jb
in
out
adc
xchg
push
in
repnz
jo,pn
mov
dec
insb
mov
ds
sub
mov
xor
xchg
push
sbb
nop
in
pop
jl
pop
lea
scas
and
out
inc
mov
dec
push
push
mov
sub
xor
inc
jge
and
inc
and
adc
orl
sbb
adc
imul
inc
sub
inc
mov
inc
repz
push
xor
cmp
in
sub
dec
outsb
mov
mov
cmp
xchg
lds
adc
push
mov
inc
rorb
dec
xchg
int3
outsb
scas
mov
push
mov
sub
std
mov
int3
push
sbb
aam
xchg
out
and
push
data16
mov
mov
pop
gs
inc
into
mov
int
gs
aaa
pop
insl
or
lods
sub
dec
cmp
inc
int
add
sbb
subl
inc
add
xchg
push
into
dec
xor
out
mov
pop
and
jbe
fnstenv
xchg
mov
outsl
pop
add
rorl
xor
add
es
outsl
iret
and
pop
pop
mov
adc
cmp
mov
sti
ja
shll
push
into
xchg
jle
mov
adc
mov
and
fldt
ss
add
mov
sbb
mov
dec
fbstp
sub
push
pop
sbb
repnz
push
mov
add
xchg
xor
mov
and
push
adc
dec
push
ret
push
push
push
icebp
adc
enter
pop
mov
xor
push
xor
mov
es
sbb
cmc
inc
adc
sub
mov
jo
mov
jno
or
mov
sti
fnstsw
jle
lret
mov
xchg
push
mov
cmp
arpl
add
dec
add
lret
rcl
xor
add
shlb
bound
xor
repz
and
add
jbe
es
bound
adc
push
adc
cld
std
pop
scas
stc
into
mov
xor
dec
mov
add
cmp
jp
addl
daa
inc
ds
je
add
push
cmp
aas
shrl
pop
dec
xchg
jne
xor
je
cs
lea
xlat
loope
xor
and
inc
mov
mov
fs
arpl
shll
mov
arpl
cmc
inc
into
xlat
xchg
push
dec
pop
sbb
cli
fidivl
mov
xchg
dec
inc
adc
add
ret
adcl
jbe
mov
sbb
push
ds
xor
cmp
xlat
mov
xor
xor
add
mov
imul
pushf
and
out
and
jle
adc
adc
mov
mov
adc
testl
pop
push
test
add
jecxz
and
add
icebp
dec
loope
lret
adc
imul
and
adc
xchg
pop
ret
xor
pop
jecxz
popa
jle
dec
xchg
outsb
daa
mov
hlt
popa
sub
sbb
cltd
call
mov
xor
lret
mov
shrl
rorb
add
xorl
je
push
outsl
lods
add
pop
jne
dec
jae
call
bound
xor
mov
inc
jecxz
ljmp
and
xor
jno
fisubrl
call
mov
addr16
adc
jecxz
and
shll
out
into
ds
repz
shll
imul
mov
rcrb
pushf
mov
out
outsb
pop
adc
into
mov
jbe
dec
push
adc
inc
fs
popf
sub
je
push
bound
and
les
inc
add
mov
out
xchg
and
test
xor
xchg
xor
jmp
push
jecxz
jb
push
andb
clc
je
js
mov
pop
mov
out
adc
daa
movsl
mov
leave
xor
out
int3
mov
subl
test
mov
shrb
inc
es
bound
repz
movd
cmpsb
xchg
push
xor
xlat
int
faddp
clc
xchg
outsb
adc
sbb
xor
inc
add
mov
shrl
insl
cmp
dec
insb
jns
inc
push
xchg
cmp
xor
or
jae
out
push
dec
call
movsl
repz
fbstp
insb
shll
mov
les
in
shll
outsb
mov
inc
shrb
mull
adcl
push
add
or
hlt
flds
pop
outsb
mov
inc
mov
inc
dec
add
hlt
icebp
adc
inc
mov
and
xor
fldcw
shll
andl
xor
jo
loopne
dec
loop
add
cmc
imul
test
ret
jecxz
ret
mov
push
jg
ds
jb
das
rcrl
mov
movb
jecxz
pop
icebp
sti
mov
adc
pop
insb
sbb
and
mov
sub
shr
push
jne
popa
mov
push
les
jno
jl
js
dec
pop
sbbl
push
jle
xor
jmp
je
ljmp
enter
rcl
push
bound
jp
add
mov
xchg
imul
xlat
ret
add
arpl
ret
xor
gs
push
jne
adc
push
inc
out
les
fs
push
ret
ror
mov
xchg
jecxz
add
sbb
mov
adc
sub
mov
loope
sti
push
stos
add
andl
inc
push
push
std
daa
adc
push
push
jecxz
mull
out
push
orl
fucomip
imul
inc
nop
dec
test
xchg
aam
jb
jp
cld
adc
push
xchg
adc
stc
push
pop
xchg
je
arpl
inc
shlb
adcl
cmc
and
nop
jmp
xor
and
mov
sbb
sub
xchg
inc
cmc
jae
jne
jae
adc
jge
mov
loope
push
std
xlat
xor
pop
jl
daa
inc
inc
not
insb
mov
push
into
lods
jecxz
adc
icebp
adcb
xchg
and
mov
pop
mov
push
vsqrtps
xor
stos
out
movsb
xchg
out
and
and
adc
sbb
inc
inc
imul
in
sub
mov
adc
sbb
shll
jecxz
sub
out
les
push
push
adcb
out
sarb
push
call
outsl
pop
addr16
mov
stos
xor
sbb
push
add
into
and
xor
jg
mov
stc
mov
mov
lret
and
mov
mov
xor
cmp
push
dec
ret
xor
push
cmpsw
xor
mov
dec
frstor
movsb
jae
stos
and
orb
push
sub
adc
stc
addb
dec
push
rclb
ss
ret
cs
mov
je
andl
adc
pop
add
xchg
inc
jo
lcall
mov
sub
jo
add
imul
and
sub
jo
jo
xchg
arpl
jge
sub
jecxz
rorl
mull
inc
and
mov
push
jle
jae
xor
push
lods
rol
sbb
fists
adc
inc
or
gs
std
xchg
cmpsl
rorl
inc
subl
bound
push
jge
push
loope
xor
xchg
ret
cs
and
out
lret
fcompl
ss
cld
mov
add
and
sbb
pop
push
adc
add
push
push
repnz
insl
xor
lods
mov
adc
push
ret
hlt
mov
xor
repz
cmp
inc
js
and
cs
and
xor
xor
xor
ret
jle
and
imull
lret
push
insb
push
mov
adc
bound
mov
repz
xorb
inc
xor
adc
jge
fs
mov
fwait
ds
dec
mov
dec
arpl
mov
scas
shlb
fsubl
sbb
jb
sub
push
and
jmp
andl
and
adc
inc
popa
rcll
icebp
pusha
add
adc
xchg
pop
mov
add
daa
xor
imul
cmc
cs
arpl
shrb
push
pop
shll
lods
out
arpl
adc
loope
fs
xchg
and
inc
push
repz
pop
mov
stos
pop
mov
adc
ret
les
sbb
sbb
cmp
jmp
in
mov
in
mov
out
and
mov
out
xchg
inc
add
je
mov
into
fisubs
mov
mov
xchg
in
arpl
inc
adc
mov
cmp
and
adc
lret
mov
xchg
add
repz
mov
or
dec
mov
adc
cmp
sahf
push
in
jmp
adc
jg
out
mov
push
mov
sub
push
mov
fisubs
sub
push
sarl
mov
lock
in
mov
push
pop
inc
adc
xlat
xor
xchg
add
cli
rolb
inc
pop
xlat
mov
push
clc
sub
add
push
je
adc
dec
test
nop
sbb
mov
sub
xchg
mov
sub
jbe
in
cwtl
adc
mov
or
in
push
mov
xlat
mov
sbb
jae
push
inc
add
cs
les
sbbl
insb
adc
mov
mov
popa
xor
mov
loopne
inc
and
cwtl
jb
jle
jmp
icebp
and
adc
and
add
outsl
push
scas
mov
out
shl
inc
je
adc
or
or
ret
sbb
jo
xchg
xchg
shll
faddl
andl
mov
fsubs
inc
loope
roll
divl
mov
and
fsts
xor
jl
ror
rorb
mov
rcrl
jle
and
push
jo
in
mov
ret
jmp
outsl
mov
mov
adc
jnp
rcl
in
shr
add
ljmp
ss
xlat
fs
mov
push
addb
dec
push
add
xor
dec
push
loopne
sbb
stos
shll
ret
loopne
inc
aam
inc
dec
dec
in
xchg
mov
xor
cs
ss
popa
mov
dec
push
inc
shl
bound
adcb
jns
inc
dec
xor
xor
cmp
out
je
ret
push
rcl
add
xorb
xchg
pop
loope
shll
leave
mov
rcrl
lds
js
push
inc
add
and
fs
popa
out
xor
aam
hlt
pop
xlat
outsb
push
xchg
fs
ds
push
pop
repnz
das
enter
xchg
xlat
xor
and
or
inc
xor
daa
add
out
inc
and
adc
decb
jno
dec
shll
ficompl
loope
enter
and
push
jecxz
adc
xor
xor
sti
loope
shl
mov
pop
sbb
jae
je
add
iret
mov
shlb
icebp
les
inc
hlt
dec
mov
shll
ret
rorl
ret
imul
ret
dec
aam
aas
dec
jmp
mov
call
rorl
xorl
test
cwtl
mov
fbld
rcr
mov
add
mov
imull
rclb
out
insb
xor
push
or
mov
mov
loope
mov
push
das
mov
cmpsl
orl
pop
faddp
push
add
xor
subb
jle
imul
fwait
stos
jecxz
repnz
xor
sbb
ljmp
repz
jecxz
mov
scas
mov
repz
xchg
and
mov
das
rclb
rcrl
test
lock
xchg
jno
sub
shrl
mov
jne
adcl
push
and
cmpsb
popf
repz
movsl
ret
add
psrlq
and
scas
pop
jp
je
cmpsb
out
add
mov
int3
dec
addr16
cmpsl
xor
out
pop
ret
inc
sbb
into
dec
outsb
das
add
lret
push
jno
popf
mulb
adc
ljmp
adc
cwtl
fs
dec
push
push
test
neg
shll
xlat
and
cmp
out
shll
xchg
adc
cmpsl
xorl
mov
dec
xchg
push
jae
rorb
mov
jmp
xor
dec
cmp
ret
inc
fiadds
jecxz
std
inc
push
dec
rolb
aam
cs
add
mov
call
push
sbb
mov
gs
xor
cmp
jb
pop
outsb
loop
jae
jecxz
xlat
mov
bound
fdivl
add
push
fdivrs
sub
or
push
test
out
loope
jnp
ret
mov
cs
lock
out
aad
and
inc
ret
into
jecxz
cmpsb
fcomi
cmp
push
dec
mov
sbb
gs
icebp
sahf
je
das
pop
jge
fadds
sbb
ret
jno
shll
test
mov
sbb
out
arpl
repz
popa
jno
andl
inc
roll
incl
push
mov
mov
xor
xchg
pop
xor
arpl
les
ret
adc
inc
push
inc
dec
and
in
dec
xor
xchg
mov
xchg
movsl
cltd
sarl
adc
lds
mov
dec
outsb
stos
jns
addr16
xor
add
inc
dec
hlt
or
mov
xchg
add
adc
fisubrl
popa
pop
push
icebp
negl
xor
divl
rorl
jnp
arpl
adc
test
movsb
push
adc
and
loopne
inc
jb
inc
mov
jno
jg
mov
dec
inc
mov
add
sub
sarl
lods
out
xor
xchg
js
mov
cmp
add
xor
lcall
popa
in
adc
mov
data16
adc
sbb
test
jb
jl
cmc
push
and
movsb
sub
ljmp
pop
jmp
mov
inc
xor
pop
xchg
push
ficoms
stos
sub
push
add
xor
add
outsb
inc
roll
xor
jbe
sub
and
out
lcall
lods
into
add
scas
test
stos
outsb
fisubrl
jno
xor
cld
lock
out
inc
jns
sbb
or
mov
xchg
andb
mov
pop
mov
inc
adc
xchg
adc
cmp
in
push
jle
and
fldt
mov
scas
xor
mov
les
xor
nop
outsl
and
adc
arpl
push
les
add
out
and
inc
mov
push
shl
mov
loope
cmp
mov
add
jbe
movsl
and
push
popw
mov
stos
mov
fistpll
mov
adc
outsb
pushf
sub
dec
push
add
les
into
out
xor
dec
add
adc
mov
push
clc
mov
mov
es
xlat
dec
ds
mov
subb
xor
insl
divl
stos
inc
insb
inc
mov
mov
fs
xor
jg
in
add
xor
sub
or
pusha
or
out
push
and
outsb
cmp
or
arpl
fcmovnb
and
outsl
data16
rcrl
push
xor
add
lods
mov
addr16
inc
cld
loopne
add
mov
rolb
adc
nop
jno
pop
pop
cmpsl
fs
out
and
ljmp
cmpsb
shl
cmp
ret
add
shrl
les
bound
jb
mov
push
dec
cmp
insl
addr16
cmpsb
and
add
add
xor
jg
std
das
mov
je
mov
push
inc
jg
add
adc
outsb
aam
xlat
loop
scas
mov
xor
pop
sbbl
sub
shll
sti
inc
pop
push
into
cmc
inc
dec
push
adc
mov
push
pusha
loope
test
mov
daa
adcl
mov
push
and
rcrl
rcrl
aam
add
push
mov
jno
xor
outsb
cli
out
popa
adc
xor
test
les
inc
dec
push
xchg
imul
out
lods
ret
push
xchg
pop
inc
xor
lock
mov
push
and
pusha
andl
mov
xor
repz
hlt
ss
cmp
das
jge
idivl
cwtl
mov
js
jmp
ret
jo
lcall
add
fmul
xlat
xor
sbb
cmp
push
pop
add
loopne
inc
pop
dec
xor
sub
mov
mov
ret
out
andb
iret
inc
jbe
jne
push
add
stos
pop
jle
jno
pop
out
adcl
movsb
xchg
std
mov
push
and
mov
dec
adcb
rcll
pop
lret
lods
xor
stos
mov
out
ss
xchg
mov
jb
xlat
mov
xchg
and
push
div
xchg
popa
inc
xor
jle
cwtl
mov
out
lret
jle
and
fcomps
adc
inc
and
shlb
test
les
dec
rclb
jo
jecxz
add
pop
mov
xchg
jne
xchg
pop
ds
add
xor
repz
sub
dec
into
rorl
or
shr
adc
daa
movl
fmulp
inc
rcr
and
cld
jle
aas
das
arpl
mov
pushf
gs
mov
dec
mov
push
xchg
les
adc
popa
dec
dec
int
hlt
xchg
cwtl
xrelease
cmp
xchg
xorl
push
popa
xlat
push
and
fwait
xor
adcl
addr16
nop
lret
push
push
xor
loope
cmpsl
aaa
xchg
push
adc
sbb
ret
into
add
or
pusha
arpl
scas
push
in
xor
int3
imul
xchg
sbb
xchg
xchg
adc
sub
subl
dec
addr16
imul
jmp
cs
adc
pop
rol
xor
popf
jmp
pop
mov
lcall
adc
mov
jne
loope
xorb
popa
dec
popa
inc
jmp
jmp
loopne
xlat
xor
inc
pop
xchg
mov
roll
ret
adc
jle
sub
outsl
push
mov
mov
stos
xor
pop
mov
lock
loope
mov
je
roll
pop
mov
daa
repz
loope
lods
je
and
fs
jno
jae
fadds
les
xlat
mov
or
mov
jmp
push
xor
mov
inc
rolw
mov
xor
ds
lret
push
pop
roll
hlt
shlb
ds
mov
pop
add
test
jb
adc
pop
pop
mov
add
hlt
cltd
mov
into
pop
add
add
hlt
ds
into
iret
xor
shlb
hlt
sub
into
iret
in
hlt
mov
hlt
and
hlt
mov
fs
hlt
cltd
mov
xor
xor
dec
xor
mov
hlt
shlb
hlt
xchg
mov
jmp
mov
cli
shl
cmpxchg
fs
mov
xchg
cmpsl
inc
iret
mov
icebp
es
inc
fcoml
jecxz
adc
repz
xchg
mov
in
movsl
adc
jne
push
inc
inc
rclb
pop
inc
mov
bound
xchg
mov
and
push
xor
pushf
mov
lock
xchg
aam
push
les
xorl
in
pop
out
mov
pop
mov
add
cwtl
divl
andb
inc
divb
cmp
lock
xchg
xchg
pop
lcall
ret
or
push
mov
ret
xchg
and
pop
test
ret
xchg
jno
sub
adc
add
icebp
mov
iretw
repnz
rcrl
inc
fildl
adc
push
outsb
into
inc
lcall
notl
loope
push
and
scas
jmp
mov
icebp
inc
and
xchg
mov
push
adc
arpl
adc
push
push
adc
into
pop
adc
andb
push
lods
inc
ret
pop
adc
es
ss
push
rorl
out
push
fs
repz
adcb
sti
xlat
jb
add
outsl
shlb
jecxz
call
and
push
mov
hlt
dec
ja
xchg
inc
dec
xor
push
mov
fidivs
mull
jae
cmp
adc
imul
mov
push
push
test
sbb
bound
mov
into
adc
mov
push
dec
and
lods
pop
lds
jno
mov
das
and
dec
mov
loope
mov
adc
adc
inc
out
outsb
and
rolb
xchg
dec
jno
pop
xlat
cmpsb
mov
jne
shll
add
out
mov
push
inc
adc
push
xchg
imul
jnp
push
rolb
fwait
add
mov
xlat
into
and
je
loope
in
cmp
adc
xor
dec
jbe
or
inc
mov
inc
imulb
or
xor
dec
add
outsb
mov
sbbb
insb
cwtl
inc
xlat
ret
les
or
add
add
adc
inc
xor
or
sub
mov
loope
mov
and
inc
daa
jecxz
addr16
loop
xchg
mov
inc
xor
rorb
mov
mov
cmc
cmc
fs
add
into
jo
popa
push
adc
es
mov
xor
xchg
mov
xor
xchg
and
xlat
jb
push
dec
sub
out
popa
fs
add
sbb
shll
out
inc
adc
push
cs
outsb
adc
mov
xchg
orb
xor
adc
xor
push
cmpsb
jnp
or
rcl
into
insb
inc
adc
pop
lds
cmp
adc
mov
in
xchg
mov
xchg
push
or
fs
imul
mov
add
add
in
sti
xor
jnp
mov
mov
aaa
or
xchg
sbb
pop
scas
and
xor
out
movsl
inc
out
aas
mov
outsb
xor
ret
sub
andb
adc
inc
aam
jb
rolb
push
mov
inc
mov
jb
xor
add
push
jae
roll
lcall
add
mov
loope
into
inc
xor
or
sub
rcr
xchg
sub
mov
aad
shll
or
push
xor
notl
mov
mov
jb
mov
aam
and
xchg
outsb
xor
inc
xchg
mov
icebp
mov
into
sub
popa
jae
mov
in
mov
and
jo
push
invlpg
adc
sbb
dec
repnz
mov
dec
cmp
shrl
movsb
fsubrl
rol
dec
push
icebp
jle
jecxz
pop
es
jb
cmp
cmp
rorb
jae
adc
out
test
xor
jo
jecxz
lds
shr
andl
notl
adc
in
inc
or
out
mov
push
popa
jae
xchg
out
cmp
bound
into
xor
xor
cli
dec
add
lock
bound
aas
fimull
add
jne
inc
jae
jne
xlat
dec
add
xor
sub
dec
push
out
lret
push
nop
clc
xor
inc
dec
cmpl
xor
xor
or
adc
fildl
mulb
test
fsubp
add
mov
in
jg
mov
sub
bound
pop
mov
loope
add
pop
repz
in
sti
mov
jmp
mov
in
fcom
aad
and
xor
out
je
cs
lret
adc
adc
jns
bndstx
add
mov
cmpb
pop
mov
sarb
adc
push
jbe
sti
daa
mov
das
aam
mov
xchg
sarl
out
xor
repz
jecxz
stos
dec
push
jno
push
fbld
jb
inc
icebp
sarl
add
dec
sahf
ljmp
bound
jae
adc
mov
shlb
xchg
or
and
and
lret
rcrb
xlat
xlat
loopne
adc
adc
pushf
dec
jne
je
push
and
xor
xor
mov
mov
add
xchg
outsb
mov
out
movsb
add
incb
fisubrl
xor
mov
xchg
mov
fs
inc
push
je
subl
sub
les
xor
bound
mov
rcrl
and
or
push
bound
adc
mov
jb
jae
xlat
jbe
fadds
arpl
push
push
sub
fistpl
iret
dec
ja
aam
out
shll
mov
int3
sub
jp
mov
mov
mov
fidivl
je
mov
ret
sti
push
into
fsubs
xor
push
mov
inc
call
pop
scas
and
icebp
lret
push
inc
in
and
cmp
fbstp
aam
mov
jno
inc
push
in
sti
popa
inc
call
jg
and
add
cmc
and
mov
movsl
jmp
push
or
jae
inc
ret
jno
rcll
repz
pop
mov
loope
mov
push
mov
add
or
mov
jg
pop
xor
sub
inc
mov
xchg
jmp
fs
sub
into
and
adcb
out
xchg
jb
mov
inc
repz
cmpsl
jle
inc
test
jae
push
jno
jne
and
mov
mov
popa
cmp
sahf
mov
sub
rcll
jp
and
repz
clc
popa
cwtl
mov
jecxz
push
add
xchg
outsl
xchg
xchg
daa
mov
notl
jle
adc
ret
jge
les
and
and
push
and
fs
idiv
adc
push
mov
jne
je
cmpb
adc
push
mov
xor
inc
and
jb,pn
mov
push
cmc
cmp
jnp
push
jb
lods
and
mov
jae
lds
and
test
mov
xlat
push
loop
inc
fs
repnz
arpl
scas
mov
xchg
and
into
xchg
test
jae
jno
out
fistpl
into
mov
dec
inc
sbb
xor
ss
sbb
inc
inc
mov
or
ret
mull
lcall
xor
mov
pop
push
in
mov
inc
mov
fisttpll
into
ret
popa
out
mov
insl
inc
outsl
mov
and
cmpsl
push
xchg
addr16
xlat
rcll
mov
mov
sub
pop
xlat
mov
shr
sub
in
inc
mov
add
addr16
mov
xorl
jg
push
mov
out
icebp
mov
xchg
mov
mov
bound
rcll
fdivl
popa
aam
push
sahf
jae
dec
js
push
and
insb
xor
sarb
imul
repnz
into
out
and
fs
mov
aad
cmp
mov
leave
ret
mull
in
loopne
adc
push
add
sbb
in
addl
addl
xchg
bound
mov
outsb
mov
mulb
jecxz
cmc
pushf
mov
pop
into
jp
rolb
mov
arpl
push
paddsb
xchg
mov
insb
inc
inc
xor
add
cs
fisubs
add
lret
dec
mov
jmp
inc
mov
leave
inc
in
sbb
repz
mov
orl
xor
lret
adc
in
icebp
inc
aam
mov
jb
bound
daa
adc
push
xor
popa
ret
inc
call
bound
mov
loop
mov
std
add
sahf
bound
icebp
dec
jae
testb
xor
xchg
xor
xor
push
outsb
jo
dec
sti
push
imul
jb
shlb
pop
shrb
xorl
in
push
jle
arpl
jne
into
repz
je
sar
mov
int3
bound
jle
dec
add
in
mov
mov
dec
jne
je
call
xchg
inc
dec
scas
xchg
push
and
xchg
add
flds
sahf
add
outsb
adc
xchg
ret
cmp
jecxz
sbb
and
mov
inc
mov
rclb
adc
push
dec
repz
fs
ret
adc
and
push
daa
adc
inc
lret
xchg
arpl
mov
int
and
mov
mov
add
les
les
jb
andl
loope
mov
mov
cmp
sti
push
push
ljmp
dec
add
fiaddl
scas
sti
ret
divb
mov
push
sub
adc
mov
jle
jo
test
dec
pop
mov
add
into
mov
ljmp
xor
mov
xor
testb
insb
sub
xor
movsl
mov
arpl
pop
sbb
scas
mov
push
mov
pop
loopne
out
loope
mov
xchg
mov
add
scas
dec
add
xchg
or
sub
jecxz
sub
xor
mov
adcl
xchg
mov
cmpsb
out
inc
aas
xchg
jns
xor
jecxz
xlat
shrb
in
loope
xor
mov
popa
imul
xor
xor
or
mov
xor
out
adc
cs
cmc
icebp
jle
inc
add
cmp
mov
inc
cmp
cs
inc
adc
repz
leave
push
sub
out
inc
add
push
cli
push
push
push
adc
out
jb
inc
jle
lcall
mov
jb
and
jecxz
or
add
shrl
jb
dec
lret
call
xchg
loope
xor
rcrb
jecxz
fucom
imul
enter
data16
add
js
stos
jno
not
and
push
rcll
stc
add
in
and
popa
les
enter
imul
mov
jecxz
dec
outsl
adc
mov
daa
and
sbbb
xorl
add
and
jle
loopne
mov
in
lock
rorl
or
push
inc
xchg
push
or
inc
mov
xlat
je
adc
fmuls
out
into
cli
inc
push
dec
out
push
push
test
pop
andl
xor
in
test
jae
rcrl
jmp
and
pusha
xorl
shll
mov
sbb
jecxz
inc
inc
loope
mov
dec
or
in
lock
icebp
xor
arpl
sti
sub
inc
push
mov
fs
xchg
and
and
mov
testl
pop
push
cltd
xchg
sarl
push
mov
sarb
jle
mov
cs
jb
roll
jno
cmp
pop
std
hlt
push
xchg
adc
jle
roll
out
pop
jo
push
in
mov
cli
and
lock
push
notl
mov
movsb
fdivrp
ret
dec
lock
rcl
imul
pop
mov
aas
xlat
dec
xor
push
sahf
add
push
sahf
push
out
mov
adc
orb
inc
xchg
xor
push
xor
push
xchg
js
outsb
roll
dec
cmp
shl
mov
pop
jne
je
cld
std
pop
inc
jecxz
ret
rclb
sub
add
mov
sbbl
dec
add
mov
into
rcr
push
repnz
add
orl
fsin
mov
test
mov
cmp
push
enter
push
dec
imul
ret
cmpsl
add
int
xlat
shlb
xchg
xchg
dec
pop
in
fwait
pop
addl
cmpsl
inc
arpl
or
xor
add
shrl
push
insl
and
or
stos
mov
bound
adc
inc
sti
dec
sahf
sarl
arpl
xchg
in
int
add
bound
movsb
mov
and
sub
push
aam
add
shrl
dec
mov
data16
push
addb
mov
push
loop
mov
jo
out
jo
shll
jae
mov
inc
dec
rcl
mov
in
inc
sub
dec
out
shrl
add
inc
pop
inc
popf
int
sub
outsb
jns
pusha
xor
bound
push
rorb
in
popf
ret
sarb
inc
mov
adc
sub
xchg
into
movsb
and
sahf
sbb
dec
jge
cs
jge
mov
mov
inc
cs
ficompl
xor
mov
subl
push
push
cmp
call
loopne
and
jge
jns
jbe
adc
lret
dec
adc
mov
xor
out
xchg
shll
adc
outsb
cs
sbb
stos
fsubs
mov
inc
inc
xchg
das
arpl
es
ret
inc
fdivs
jb
fdivr
or
dec
mov
cli
lock
push
cmpsl
push
les
push
and
movsb
push
inc
xchg
cmp
mov
jne
shll
dec
add
or
scas
and
out
pop
push
jae
mov
and
jge
popa
jle
pop
add
psrad
inc
push
icebp
out
mov
and
shrl
divl
icebp
xchg
bound
vmovshdup
dec
and
divl
fcmovnbe
repnz
push
inc
cmp
movsl
int3
mov
adc
sub
hlt
arpl
adc
sbbb
dec
xor
cwtl
popa
and
push
jb
fmull
cmc
adc
mov
shll
cmp
ja
notl
icebp
push
add
in
dec
in
pop
xchg
xor
inc
mov
ror
je
out
jb
sbbl
push
xorl
inc
bound
js
popa
mov
sti
inc
push
add
aam
adc
shll
add
and
push
lock
jns
mul
lock
sub
rep
cmp
mov
adc
jne
push
sub
mov
lret
ljmp
jno
insb
jo
push
mov
dec
mov
jb
xor
rcr
loope
outsl
and
xor
mov
bound
dec
scas
jno
lea
sbb
push
sub
xorl
inc
push
loope
fs
add
push
shrb
jle
jno
fldenv
and
fwait
outsl
lea
out
inc
enter
nop
out
xor
xor
sub
sahf
or
xchg
ds
mov
and
jecxz
sub
xchg
pop
bound
inc
cmp
lahf
dec
lds
cwtl
xor
jne
xor
adc
imull
adc
cmpsl
xor
and
dec
and
sub
or
xchg
fcoml
mov
loopne
ljmp
and
mov
adc
sub
sar
inc
add
push
test
xchg
inc
cmc
lock
bound
xlat
push
in
cli
adc
mov
mov
jge
mov
xor
sub
dec
incb
and
sub
add
push
cmp
std
sbb
dec
in
xlat
dec
outsl
pop
popf
std
mov
sub
ror
shll
jns
fs
fiadds
loope
xlat
and
add
negl
push
xor
cmpb
mov
jne
push
xor
nop
scas
push
out
xor
adc
pop
cmc
adc
repz
xor
js
in
scas
and
inc
test
push
sti
add
xor
cmc
dec
cmp
ret
push
inc
add
mov
ret
loope
addr16
xor
fimull
mov
in
adc
ret
sbb
sbb
xchg
into
loopne
sub
out
add
ret
pop
mov
outsb
jno
sbb
jae
lock
mov
in
mov
mov
movsb
inc
mov
aas
add
mov
inc
xor
out
inc
xlat
cs
outsb
mov
push
push
sbb
rep
xor
mov
jne
jae
xor
and
loop
cs
popa
icebp
rcll
xor
sub
dec
push
ja
adc
mov
jle
lahf
loope
and
les
inc
je
dec
mov
and
mov
out
mov
add
cmpsl
ret
cwtl
dec
adc
cmp
aas
bound
mov
icebp
subl
push
mov
xchg
mov
mov
lcall
jno
pop
and
push
int3
adc
out
outsb
xor
xchg
shrl
mov
jne
dec
inc
jecxz
or
adc
out
pop
jnp
pop
mov
push
mov
fwait
cmpsl
mov
ds
xor
bound
jnp
xor
rorl
add
clc
mov
inc
xor
outsb
add
xor
stos
dec
mov
in
cmpsl
out
cmp
inc
repnz
outsb
popa
imul
xchg
sbb
sub
push
idivb
fildll
add
cmp
mov
sbb
and
outsb
enter
les
fildl
andl
repnz
in
jno
cmp
adc
dec
je
mov
xchg
out
rclb
push
dec
hlt
shrl
push
xchg
mov
mov
jno
xchg
fcoml
roll
arpl
repz
sub
xlat
rorb
icebp
into
das
jecxz
shrl
shll
cmpsl
popa
repz
ss
shll
pop
lock
clc
xchg
popf
test
cmp
add
je,pt
inc
imul
loopne
dec
out
adc
xor
push
jecxz
inc
add
aam
push
out
cmp
xchg
into
lahf
out
pop
xor
js,pt
bound
test
inc
mov
mov
add
cld
and
in
orl
inc
push
and
add
pop
ficoml
adc
out
ds
push
push
mov
add
dec
xor
neg
int
inc
cmpl
out
xchg
jecxz
mov
xor
lods
mov
ret
cmp
sub
outsb
ljmp
notl
cmp
pop
xor
call
clc
xor
arpl
add
add
and
adc
adcb
je
and
in
inc
jge
mov
mov
ret
inc
lock
add
mov
push
sahf
xor
push
push
xchg
out
subb
outsb
shlb
loopne
push
or
bound
cmp
out
out
into
cmpsb
movsl
mov
repnz
ljmp
and
dec
adc
addl
mov
mov
mov
inc
push
jmp
lea
mov
fnstsw
mov
lcall
jbe
dec
jmp
rolb
jmp
xor
sub
cmc
rcll
mov
roll
sub
xchg
call
es
jb
add
into
mov
add
push
pop
je
jb
scas
loope
into
mov
push
xchg
imul
je
out
push
loope
repz
mov
add
shlb
add
mov
movsb
inc
jnp
cmp
jg
fsubrs
mov
pop
in
sub
cmp
loope
adc
push
mov
sub
rep
add
jmp
clc
inc
inc
subl
in
jl
fs
adcl
push
mov
fsubl
inc
jl
push
loope
xchg
ret
subl
xchg
repz
mov
loope,pt
dec
ret
and
bound
fs
repz
loopne
repz
out
push
sub
sti
out
shlb
mov
dec
out
mov
addl
xchg
andl
push
xor
xor
push
mov
clc
adc
cmpsl
out
and
rclb
xor
es
sbb
shrl
push
dec
xchg
add
sub
je
inc
pop
sub
and
mov
inc
in
and
lock
out
js
jbe
leave
adc
test
push
mov
insl
mov
xor
out
jb
xor
test
fcoms
xor
push
cld
push
test
popa
adc
sub
push
roll
adc
xor
xor
arpl
inc
adc
adc
ret
xchg
arpl
mov
std
outsl
xchg
mov
ds
pop
cs
addl
add
xchg
lea
push
arpl
adc
cs
inc
cmp
arpl
outsb
push
push
xor
repz
mov
ret
xchg
cmp
sub
adc
adc
dec
or
lret
loopne
xchg
pop
arpl
push
mov
test
mov
push
add
pop
cltd
lret
jns
mov
push
movsb
ficomps
cs
add
sub
xchg
and
movsb
cmpsb
lds
xor
mov
push
adc
call
mov
or
jno
popa
xor
jno
adc
mov
rcrb
add
or
mov
loope
mov
bound
sub
cwtl
repz
inc
daa
out
dec
test
fst
jl
fwait
jle
ljmp
push
roll
outsb
cwtl
and
notl
push
aam
xchg
jae
ret
push
xor
and
xor
adc
adc
xor
push
inc
out
insb
jl
ret
push
or
jecxz
mov
add
ljmp
outsl
xlat
ret
or
sub
mov
jo
in
inc
jo
add
mov
jmp
outsb
movsl
je
sahf
adc
out
xlat
push
sbb
adc
stos
mov
add
sub
add
shlb
out
les
sbbl
les
ljmp
add
divb
mov
inc
mov
cmovns
movlps
icebp
jecxz
repz
pushf
pop
jb
cmp
mov
jle
add
repz
scas
loope
dec
inc
icebp
div
adc
fs
data16
xchg
icebp
add
inc
jle
les
aam
popa
cmpsl
push
rol
repnz
inc
fwait
push
xor
icebp
push
dec
xchg
xchg
test
mov
bound
adcl
pop
adc
cmpsl
repz
inc
add
dec
lods
xor
outsl
jae
jle
rorl
mov
sub
bound
inc
aam
inc
sti
scas
sahf
mov
inc
jecxz
outsl
cmpsb
mov
out
mov
movsb
adc
and
shll
mov
je
inc
adc
dec
pop
in
jl
adcl
sub
mov
xor
scas
dec
movsb
pop
mov
add
add
jecxz
xchg
lcall
popa
push
out
lret
and
or
test
addr16
push
aas
je
xor
jae
add
mov
dec
jno
flds
mov
je
aam
sar
and
rcll
lods
pop
vpacksswb
addr16
je
jae
xor
or
ds
into
insb
push
and
outsb
mull
in
cmc
cld
out
mov
jge
adc
int
mov
les
mov
ret
outsb
jo
jae
out
pop
repz
bound
mov
adc
jb
sbb
xor
mov
ret
dec
jne
sbb
adc
mov
mov
sahf
bound
mov
cmp
pusha
pop
sarl
cmp
sub
cltd
rol
push
mov
sahf
xchg
daa
adcl
repz
xchg
adc
shrl
testl
cmc
mov
mov
jle
push
out
daa
loope
cwtl
push
inc
mov
xor
adc
jmp
sub
nop
pusha
inc
push
shlb
ficoml
out
mov
pop
and
rorl
adc
xlat
push
fcomps
push
jb
mov
out
inc
into
outsb
xor
out
jae
arpl
repz
rorl
dec
shll
ds
popa
daa
arpl
mov
in
loopne
jno
mov
stos
jne
mov
fdiv
call
movsl
xorl
add
and
je
push
cs
loopne
faddl
inc
stos
das
ret
push
sarb
les
add
xchg
pop
jns
adc
pop
rcrl
xlat
sbb
test
adcl
shll
mov
out
movb
cs
arpl
mov
adcb
ds
jo
mov
mov
mov
pop
xchg
push
adc
lret
jns
and
xor
scas
mov
xor
in
in
cs
sub
jo
xchg
and
inc
inc
xchg
les
insl
pop
cmp
fstpl
xlat
ret
cmp
out
mov
mov
jecxz
out
popa
and
icebp
iret
les
dec
jle
or
jae
lret
call
xchg
cs
je
cmp
add
je
jge
jp
rolb
subl
sub
divl
sub
ret
repz
and
or
je
andb
mov
adc
inc
add
sbbl
out
jle
aam
inc
out
test
and
testl
outsb
shll
adc
xchg
loope
out
fdivrs
fcomp
loop
jecxz
push
add
lods
pop
mov
mov
bound
fs
pop
inc
shrl
fnsave
push
ret
mov
xchg
jno
cwtl
subl
js
mov
mov
push
imul
mov
mov
inc
into
stc
push
js
cmp
js
js
stos
pop
loop
push
pop
mov
mov
je
ljmp
hlt
out
inc
inc
add
rcll
xor
hlt
add
out
sti
or
adc
mov
adc
push
mov
aad
shll
lahf
xor
decl
inc
cltd
and
add
pop
add
imul
push
push
dec
inc
push
push
cs
movsl
adc
xor
inc
sbb
sub
or
adcl
add
inc
les
inc
out
es
push
mov
jno
jecxz
icebp
in
push
xor
arpl
mov
shlb
daa
cs
mov
icebp
insl
inc
push
fsubrp
dec
movsl
add
into
add
push
ret
push
lret
lock
dec
add
out
add
in
mov
imul
xchg
inc
jbe
cmp
adc
push
fmuls
aam
mov
jb
xchg
adc
cmpsb
outsb
inc
xor
popa
xchg
and
sub
push
shll
sub
push
mov
mov
shl
push
rcll
xor
in
nop
repz
je
mov
add
loope
out
jmp
in
dec
popa
arpl
inc
in
jp
or
scas
iret
clc
bound
rorl
into
mov
into
add
clc
mov
mov
testl
inc
mov
push
dec
adc
jne
add
mov
push
dec
call
jle
mov
sbb
into
jo
inc
adc
pop
push
push
pop
mov
adc
xchg
or
outsb
mov
les
xlat
mov
out
jge
xor
xor
dec
andl
icebp
xor
jle
rorb
cmp
sub
push
jne
xor
loope
xor
fbstp
xchg
inc
dec
jno
mov
inc
jle
mov
add
xlat
jnp
xor
add
mov
shl
adc
out
mov
jb
mov
mov
mov
lods
adc
sbb
loope
mov
scas
fs
pop
repz
cmc
pop
sti
mov
xlat
lcall
pop
int
jmp
push
push
push
rcll
sarl
ja
dec
adc
sub
push
stos
xor
test
orl
mov
inc
clc
mov
mov
into
mull
and
jle
add
repz
mov
mov
jmp
and
push
repz
push
push
bswap
sahf
inc
daa
mov
and
mov
repz
xchg
jb
popa
into
ds
stos
imul
cs
mov
pop
sti
andb
divl
adc
stc
imul
mov
push
inc
je
jmp
mov
add
in
mov
fcmovnbe
stc
jno
push
push
adc
arpl
std
minps
mov
in
xor
adc
inc
popa
movsl
mov
inc
inc
dec
mov
in
subl
je
cmc
jecxz
and
inc
popf
mov
add
pop
xor
sbb
out
mov
into
xchg
xor
aam
repz
je
pop
ret
adcb
cli
jge
lahf
insb
fdivs
fs
jno
add
repz
rcrb
add
or
mov
stos
push
mov
in
push
rclb
inc
or
popa
push
sbb
adc
xchg
cmp
inc
pop
jecxz
fwait
inc
cmpsb
and
or
addb
mov
dec
xlat
dec
xor
xor
cmp
stos
pop
mov
imul
and
aam
inc
pop
add
xor
mul
insb
je
les
mov
cmpb
lahf
js
cmp
mov
add
jecxz
add
outsb
xchg
or
fldlg2
cli
mov
lods
rcll
inc
push
jne
ret
pop
xor
mov
jmp
jmp
push
popa
mull
aam
int3
dec
popa
pop
leave
inc
push
mov
push
xor
lret
testl
lea
mov
pop
xchg
imul
insl
push
push
push
jmp
xchg
jne
push
xor
clc
pop
lods
fs
test
roll
mov
aaa
in
popaw
mov
push
test
jae
sub
sbb
inc
rcr
xor
add
and
inc
jae
jnp
cmc
loope
xorl
stos
xor
iret
jge
push
inc
sbb
xchg
outsb
cmp
ds
adc
push
in
dec
adc
sbb
and
cs
dec
mov
aam
jb
js
xlat
outsb
and
dec
ljmp
lea
das
pop
mov
stc
mov
sbb
andl
xor
icebp
mov
into
popa
xor
sbb
push
and
jo
bound
shll
xchg
adc
add
repnz
mov
inc
jbe
sub
push
pop
not
testl
mov
inc
mov
in
xchg
and
xor
push
mov
inc
in
pop
ss
mov
pop
cmpsb
xor
mov
xchg
mov
add
test
bound
xor
and
pop
mov
add
xor
sar
push
cmp
push
mov
xchg
push
cmc
mov
shrl
repz
inc
jecxz
inc
shrl
je
or
inc
jns
push
push
sbb
mov
xlat
inc
daa
inc
jb
cmc
mov
xor
mov
and
add
mov
into
sub
flds
mov
xchg
jae
push
cmpsl
andl
dec
adc
jle
icebp
xor
out
jl
jg
mov
lods
push
loope
inc
into
idivl
push
shll
sbb
xlat
mov
pop
std
int3
je
loope
into
push
mov
ds
and
dec
mov
ss
loope
test
dec
mov
push
ds
inc
test
add
jmp
mov
ds
imul
popa
pop
nop
hlt
sbb
jno
xorl
pop
into
mov
cmc
inc
push
mov
and
les
loop
shlb
aas
ret
xlat
movsb
inc
imul
adc
jle
faddl
push
ret
insb
or
cs
push
xor
and
xchg
popf
dec
mov
xlat
mov
add
jnp
adcl
in
popl
cmpsl
ljmp
xor
mov
cmpb
xor
adc
sub
test
mov
roll
inc
push
cs
loopne
adc
xchg
stc
pop
add
or
out
dec
xor
idivl
push
add
data16
mov
loope
mov
mov
xchg
push
movsl
shl
push
arpl
push
jne
xor
jae
inc
dec
out
adc
scas
inc
into
dec
subb
jp
dec
les
xlat
pop
out
mov
add
jp
out
mov
int
fadd
and
cmp
loope
sub
imul
out
rol
out
jno
orl
push
mov
pop
aad
arpl
adc
into
add
push
fs
jmp
add
out
cmpsb
xchg
andl
pop
loope
and
mov
jb
imul
push
je
ja
xchg
in
add
in
daa
inc
out
orb
sub
xlat
into
inc
stos
je
in
and
stos
add
push
imul
push
adc
mov
sbb
repz
jmp
or
mov
adcb
sar
push
loopne
inc
shlb
push
sub
repz
sub
adc
jl
mov
sarl
dec
lock
dec
and
mov
sub
mov
clc
jbe
add
sbb
jp
mov
mov
xlat
jae
adc
fsts
into
loopne
mov
int3
sar
addl
inc
shll
cmp
push
ret
iret
inc
ljmp
data16
and
in
xchg
and
rcll
xor
cmp
fdivp
fcmove
mov
cli
jecxz
push
mov
dec
lock
ret
pop
test
pusha
out
lods
dec
shll
roll
in
and
xor
add
jnp
and
push
arpl
push
sahf
jge
pop
pop
xchg
call
mov
popa
add
in
inc
jle
loop
xchg
inc
add
jge
std
pop
xor
inc
movb
mov
repz
mov
imul
xor
sbb
bound
pop
jnp
push
ljmp
popa
fcmovnbe
ficoms
mov
mov
adc
jb
repz
fidivrl
les
jmp
lcall
xor
dec
mov
out
push
mov
xor
je
mov
pop
push
xchg
aam
jno
out
testl
scas
icebp
add
add
xor
mov
sub
jmp
into
shlb
mov
mov
je
add
dec
ret
mov
mov
xchg
fcoml
add
loope
push
call
insb
in
fadds
inc
in
ret
lock
sub
lea
mov
shll
sbb
mov
rorl
pop
jle
in
pop
add
mov
icebp
mul
mov
sarl
les
shlb
jo
mov
sti
out
xchg
addr16
mov
sub
push
add
out
inc
push
bound
add
mov
mov
jo
add
stos
xor
cs
xchg
and
jb
daa
push
out
add
inc
inc
testl
movsl
dec
mov
out
out
in
rol
mov
adc
adc
inc
adcl
mov
loope
fidivl
aam
xor
inc
out
outsb
mov
adc
push
mov
es
in
in
mov
out
cli
fidivs
adc
mov
push
jbe
inc
scas
arpl
imul
xor
and
out
stc
mov
inc
icebp
out
adc
ljmp
dec
mov
inc
popa
and
inc
jbe,pt
jnp
push
inc
jne
mov
xlat
mov
and
je
adc
fcmovb
or
push
rcll
adc
sbb
jmp
jle
aam
xchg
mov
je
mov
cmp
mov
loopne
jbe
push
lret
ljmp
fcompl
nop
and
fsubrl
mov
xor
or
in
cmp
je
xor
xchg
mov
jge
xchg
sbb
mov
lret
sbb
andl
pop
ret
mov
adc
jae
mov
adc
pop
mov
pop
add
fs
and
stc
dec
icebp
and
jns
loope
adc
xor
movsl
mov
cmp
fstl
dec
adc
dec
push
out
and
xor
das
mov
inc
add
or
out
dec
xor
outsb
into
cmpsl
out
daa
xchg
inc
les
loope
lcall
es
je
into
cmc
outsb
cs
les
lea
in
insl
inc
and
loope
repnz
pop
mov
sbb
cli
add
push
jle
adc
rcll
clc
and
adc
imul
leave
xlat
xor
push
jae
inc
mov
and
xor
data16
push
jmp
sub
std
mov
and
dec
jg
mov
mov
adc
jecxz
repnz
in
loope
loope
mov
adc
dec
and
mov
movlps
lret
adc
xlat
es
fs
and
stos
push
ret
rclb
and
adc
mov
jbe
mov
data16
shll
and
or
mov
mov
adc
ljmp
push
loopne
out
push
pop
and
cmp
pushf
inc
test
insl
adc
xlat
xchg
xchg
out
pop
xor
jle
and
mov
loop
jno
push
mov
mov
les
and
jns
or
adc
jne
push
inc
cmp
push
lret
enter
outsb
shll
push
into
xor
popa
jnp
mov
and
std
jno
test
xor
xor
and
rcr
and
rcl
dec
loope
arpl
out
push
in
mov
cmpsb
jno
ds
mov
jmp
add
xchg
adc
xchg
sar
xchg
addr16
pop
aam
shll
mov
out
lea
adcl
fldcw
mov
in
shll
jge,pn
aaa
inc
ret
sub
jno
add
lret
rorl
inc
jge
mull
adc
dec
dec
push
dec
shlb
std
xchg
or
cld
std
add
lock
push
xchg
mov
push
inc
roll
add
icebp
nop
outsb
adc
test
xor
out
lods
xlat
and
adc
jno
dec
clc
dec
or
push
push
mov
jne
mov
lock
inc
xchg
lods
dec
out
enter
arpl
and
popf
pop
mov
sub
add
into
bound
push
nop
subl
sbb
and
xchg
in
sub
or
inc
pop
and
mov
and
dec
sahf
jno
ja
outsb
jecxz
out
jb
rcl
and
mov
nop
jno
jp
and
dec
xchg
inc
inc
shlb
pop
xor
fimull
add
mov
push
push
hlt
ficompl
xor
push
pushf
jle
mov
or
stc
out
negl
xor
test
xor
out
fwait
xchg
jecxz
mov
mov
mov
mov
dec
or
inc
mov
out
xor
adcb
sahf
icebp
jle
xlat
fdivrs
and
fs
mov
jp
dec
out
or
fisttpll
mov
cs
pop
je
add
lret
adc
push
loop
and
xchg
popa
xor
addl
stos
adc
xlat
arpl
mov
xor
adc
push
pop
arpl
sub
popa
xchg
cmpsl
fwait
pop
push
call
test
xchg
repz
bound
xchg
addl
ret
or
mov
push
jecxz
pop
test
push
invd
inc
xchg
push
mov
jge
and
repz
xlat
jo
mov
out
mov
add
and
cmpsl
inc
loope
xchg
cmpsl
dec
repnz
mov
xchg
xchg
xor
or
cmpsl
mov
ficoml
movsl
xchg
adc
stos
mov
lret
xor
lds
adc
xchg
repz
out
push
push
xchg
or
bound
mov
testl
lret
and
inc
cmp
xchg
push
sub
fs
mov
adc
bound
adc
sbb
dec
mov
ds
push
mov
adc
andl
cmpsl
fisubrs
inc
idivl
fidivl
jmp
fcom
aam
icebp
xchg
and
cwtl
shrl
jle
idiv
sbb
aam
mov
jle
xchg
mov
aas
adc
inc
out
not
add
inc
push
xor
push
cmc
cmpsl
mov
xlat
inc
add
jno
adc
jae
in
fcompl
data16
mov
mov
or
or
jle
test
and
jecxz
add
repz
push
inc
cwtl
mov
loope
ret
jge
pop
dec
icebp
push
and
add
dec
or
pop
ljmp
mov
sub
push
xchg
cmp
les
ret
enter
hlt
popa
jo
push
mov
mov
and
xchg
bnd
xchg
sahf
mov
adcb
and
pop
push
bound
adc
inc
in
mov
push
shl
mov
mov
and
gs
rcrb
imul
shlb
dec
jg
adcb
pop
andl
mov
clc
push
xchg
into
cmp
mov
dec
dec
xchg
dec
push
into
adc
jne
ret
add
push
jmp
in
dec
daa
popa
xor
add
push
adc
cmp
outsl
fldenv
fisubrl
dec
push
inc
mov
sahf
jno
cmp
pop
cmc
mov
sub
mov
mov
xlat
outsb
jmp
icebp
dec
lds
out
inc
adc
mov
outsb
cmpsb
mov
bound
add
pop
repnz
jbe
repz
fisubs
cmpsl
rorb
outsb
xor
sub
mov
fadd
fsubs
cs
cli
mov
dec
inc
jb
cmpsb
jno
push
popa
cmp
aas
ret
and
jb
xor
mov
push
mov
cmp
xor
inc
pop
and
mov
popa
fs
add
dec
push
adc
and
enter
or
in
jb
shll
jle
cmpsb
popa
in
pop
mov
xor
outsb
jb
mov
jae
pop
insb
jnp
adc
lods
push
into
iret
imul
jbe
repz
add
xor
lods
or
adc
xor
out
out
fs
add
push
add
jne
xchg
popa
or
jmp
xchg
outsb
pop
lret
arpl
push
cmp
fidivs
out
pop
mov
les
push
les
out
inc
popa
enter
in
mov
js
and
lret
xchg
and
sub
dec
add
add
push
jecxz
jnp
mov
xlat
mov
inc
add
in
popa
les
ja
outsb
repnz
ret
outsl
sub
shll
mov
sub
and
rcll
insl
sbbl
outsb
push
mov
mov
jb
dec
jmp
mov
and
xor
xlat
inc
add
xor
call
and
bound
test
stos
out
outsb
ret
jecxz
mov
sbb
jne
inc
jb
inc
popa
imul
loope
shrl
sbb
repz
mov
stos
into
lock
loope
inc
dec
jno
rcr
sahf
and
retw
adc
popa
faddp
out
sbb
add
push
jb
pop
icebp
mov
loop
into
and
xor
shll
cmp
sub
push
into
pop
adc
sub
and
mov
jno
inc
inc
xor
lea
mov
cmp
xchg
out
pop
loope
jle
arpl
into
inc
mov
pop
sub
das
and
addb
add
push
mov
xor
xorb
sbb
mov
not
sub
push
jo
scas
adc
fnstcw
loope
bound
fwait
mov
nop
and
andl
push
push
mov
jae
lock
scas
jp
out
mov
fs
sub
and
les
inc
add
mov
jns
sub
xor
inc
stos
data16
test
andb
les
shll
and
out
loope
and
lock
mov
dec
push
mov
clc
mov
mov
xor
mov
push
add
dec
loope
repz
add
inc
dec
jle
cmp
shl
jne
loope
enter
call
leave
addr16
adc
outsl
insb
movb
cmp
lock
arpl
inc
mov
xor
xorb
aam
sarb
push
sub
sub
mov
jno
dec
shll
rcrb
addr16
push
lods
mov
add
lcall
mul
fs
cmp
or
push
xchg
int
inc
push
lret
outsl
sbb
jmp
push
dec
jne
mov
insb
or
xor
shll
jae
into
dec
les
xor
shr
push
adc
les
inc
or
jno
out
xor
and
dec
nop
imul
repnz
mov
mov
jge
andl
stos
stos
mov
cli
push
popa
or
js
and
mov
cmp
stc
xchg
adc
jl
dec
and
push
adc
out
out
icebp
orl
cmp
retw
add
inc
cmc
and
clc
icebp
add
mov
mov
push
int
sub
outsl
sub
push
jle
jo
movsb
les
mov
ss
data16
jno
and
xor
sub
aad
je
loopne
mov
push
inc
jo
xchg
mov
ds
xchg
jne
jecxz
push
shlb
aam
add
in
mov
dec
mov
test
and
add
arpl
jmp
xchg
sub
inc
sbb
sbb
cltd
mov
inc
or
bound
paddsb
push
push
push
jae
xlat
lds
mov
push
shll
loope
inc
mov
jbe
xlat
mov
push
cli
lcall
push
popa
test
xchg
inc
ret
jmp
loop
repz
cs
inc
mov
push
bound
in
or
cmp
fildl
pop
mov
xlat
sub
orl
adc
mov
pop
ds
cmp
inc
je
subb
cli
hlt
adcl
jle
xchg
xor
pop
mov
push
xchg
lret
push
out
pop
shl
mov
mov
ret
out
xchg
es
ret
push
push
xor
mov
xchg
rcrb
aam
push
mov
jo
adc
ret
stc
and
xor
les
cmp
repnz
lcall
and
and
xchg
aam
lock
xor
push
pop
ret
and
mov
adc
mov
inc
dec
iret
add
in
std
xchg
imulb
out
sbb
outsb
mov
popa
arpl
push
xchg
push
stos
mov
mov
test
xlat
mov
mov
jae
jle
out
xchg
mov
push
mov
mov
cwtl
mov
xor
push
adc
adc
jecxz
jo
fdivp
roll
mov
orl
mov
push
inc
and
and
ret
push
lds
xor
and
shll
out
and
mov
mov
mov
bound
jecxz
lds
rol
lods
out
loope
jno
inc
inc
adc
lds
mov
rcll
repz
cs
aam
bswap
mov
outsb
sarl
roll
adc
andl
xor
cmc
push
add
xor
jb
inc
mov
dec
xor
orb
mov
fsubs
lcall
xor
dec
loop
jle
push
ret
inc
cmpb
data16
inc
out
outsb
cmp
inc
lods
jae
adc
xchg
daa
out
arpl
mov
xor
scas
mov
and
imul
push
mov
push
xchg
xor
fs
roll
push
popa
push
popa
adc
hlt
jle
and
pop
xlat
sarl
shlb
mov
je
rorl
ret
mov
lret
and
cmp
lock
hlt
xor
jle
dec
dec
sub
repnz
jno,pn
aaa
repz
hlt
cmpb
bound
hlt
inc
adcb
arpl
mov
rcll
sub
sub
and
popa
add
jne
push
dec
mov
push
outsb
jmp
fdiv
jl
sub
addr16
adc
mov
insb
mov
ror
aam
or
push
je
cmp
data16
xor
rcll
inc
xchg
aas
pusha
push
jno
lea
je
ret
mov
xlat
in
sahf
cmpsb
xor
inc
subb
add
dec
sub
jecxz
push
jb
inc
or
aam
out
mov
sub
ds
nop
jo,pt
js
xor
push
pop
inc
or
in
ljmp
pop
ret
mov
xor
sarl
insl
out
rcll
add
dec
jb
xchg
dec
or
fs
aas
lret
sub
push
inc
icebp
popf
lods
les
mov
xor
push
pushf
out
popa
andl
test
jae
add
dec
ret
push
or
rorb
mov
sbb
in
xor
outsl
jno
and
dec
mov
push
push
out
or
xor
out
sbb
shll
into
jecxz
pop
xor
test
inc
mov
adc
jbe
mov
sbbb
popa
out
fisubl
icebp
add
aam
and
jb
push
inc
adc
and
cmp
push
je
scas
xlat
out
cs
push
mov
shll
push
cmpl
push
sbb
or
lahf
xor
in
xor
inc
inc
add
popf
gs
add
inc
pusha
mov
rorb
push
and
mov
push
lock
movsl
fs
mov
popa
mov
add
and
xchg
rcrl
popa
inc
mov
imul
ja
xchg
and
push
cwtl
popa
mov
enter
or
daa
out
outsb
dec
mov
ds
inc
lods
xor
xchg
cmp
mov
imul
adc
outsb
addr16
mov
and
sahf
shll
mov
andb
out
pop
xor
mov
add
push
add
ret
icebp
cmp
push
repz
rol
and
add
mov
adc
sbb
mov
mov
ret
mov
stos
sbb
shl
mov
repz
jns
xor
and
mov
inc
mov
sarl
rol
pop
into
leave
mov
push
add
adc
dec
stos
inc
xor
ljmp
xchg
orb
push
adc
sub
imul
test
outsb
dec
into
adc
notl
add
jge
and
cmp
jbe
xchg
dec
mov
imul
mov
dec
or
add
popf
rclb
bnd
loope
inc
push
sti
sbb
popf
xchg
dec
mov
insl
in
dec
push
shll
mov
mov
in
daa
addl
mov
mov
add
push
xchg
outsb
std
jecxz
cwtl
xchg
mov
or
mov
outsb
xor
fcmovu
mov
pop
xor
clc
loope
push
dec
and
sti
sub
repz
pop
into
xor
rcll
sub
push
out
test
xchg
jge
negl
shll
mov
inc
mov
mov
pop
out
sbb
mov
xor
fucomi
lcall
icebp
or
inc
repz
ret
push
and
mov
xlat
push
push
xor
mov
push
sbb
ljmp
inc
jb
shll
out
in
roll
adc
lret
push
lods
in
into
fwait
ret
fidivrs
out
adc
xor
repz
add
ret
lret
push
cmp
lea
dec
lea
hlt
add
rorl
adc
call
push
mov
xorl
sbb
insb
bound
mov
rcll
push
xor
or
push
mov
add
adc
adc
mov
xchg
insb
inc
dec
cmp
stos
cmp
mov
mov
pop
stos
pop
loopne
mov
sbbl
jno
cmp
cltd
out
outsb
movl
cld
inc
mov
cli
fwait
pusha
cs
testb
mov
push
jl
pushf
sahf
cmpsb
test
divl
mov
ret
insb
cmp
jecxz
sarl
add
daa
xor
test
xchg
xor
push
imul
scas
mov
out
add
into
jae
xchg
push
inc
push
add
js
jbe
xchg
outsb
adc
ret
in
lods
les
sbb
or
pop
push
push
push
mull
pop
xor
dec
mov
loop
push
mov
pop
mov
or
xchg
xor
add
loope
aas
and
mov
sbb
mov
mov
lret
mov
cmc
xor
xchg
adc
int3
bound
cs
cmpsl
orl
repnz
inc
les
mov
and
mov
adc
push
add
or
xor
jecxz
sbb
xchg
inc
mov
lea
daa
dec
pop
or
adc
ret
mov
movsb
jb
push
imull
mov
pop
jmp
pop
andl
inc
cmc
dec
push
xor
sub
xor
lods
addr16
sahf
adc
inc
std
push
hlt
repz
les
and
mov
xchg
jb
andb
clc
pop
or
and
andl
push
inc
add
lret
xor
addr16
ds
jno
add
add
push
out
decb
fwait
out
push
inc
bound
inc
imul
and
dec
repz
pop
hlt
movb
popa
adc
xchg
into
dec
icebp
xor
inc
push
divl
add
push
roll
push
mov
sub
jb
pop
dec
shll
roll
xchg
and
in
xlat
mov
fcmovne
fildll
push
adc
fbld
push
and
icebp
repz
inc
adc
push
push
adc
pop
jecxz
xlat
repz
adc
add
xor
xor
out
jns
out
out
mov
icebp
xlat
lret
out
dec
pop
and
and
cwtl
pop
and
into
testb
insl
adc
sbb
ficoms
loope
into
adc
mov
push
repz
mov
xchg
call
mov
cmpsb
stos
xor
pop
mov
lret
inc
lahf
dec
shrb
add
aam
and
or
and
mov
mov
jno
cmpsl
je
arpl
push
ds
ret
int
add
mov
xor
add
jae
or
add
or
mov
hlt
push
out
mov
push
rcll
jle
xor
dec
mov
adc
pushf
xor
leave
jge
inc
stc
xchg
and
inc
orl
nop
dec
add
cmc
aas
jae
xchg
xor
mov
push
fs
cltd
cmpsl
push
test
in
insb
mov
inc
andb
pop
jmp
xor
mov
decb
jbe
push
add
out
arpl
adcb
add
lds
and
out
jno
mov
mov
pop
loope
inc
popf
lret
movsl
adc
mov
mov
xor
pop
stos
inc
cmpsl
jmp
cs
les
sub
pop
je
daa
xchg
imul
es
fdivs
inc
push
adc
sub
cli
xor
int3
jle
outsb
mov
mov
push
push
out
mov
jne
out
inc
in
mov
rol
lock
add
dec
adc
lret
clc
jl
sarb
inc
adc
push
and
mov
orb
lds
sub
or
shrb
add
inc
cwtl
lods
push
or
or
mov
repz
loope
adc
jmp
cmpl
cmpsb
popa
testl
jge
jae
pop
sbb
mov
fisubrl
ds
xor
push
into
inc
in
xchg
mov
mov
add
xchg
daa
mov
add
and
xor
repnz
enter
fidivrl
imul
push
push
push
sbb
fstl
mov
mov
and
xor
and
jnp
lds
inc
jge
xor
ljmp
popa
push
repz
and
ret
stos
ss
add
push
aam
mull
inc
sub
push
add
int
xchg
shl
adc
mov
jecxz
movsb
mov
push
jecxz
xchg
jecxz
mov
jb
mov
enter
cltd
mov
imul
ljmp
loope
mov
mov
jmp
jae
and
mov
adc
in
push
push
mov
dec
je
push
clc
sbbl
mov
fstpt
fcoml
cmc
push
push
xchg
and
and
adc
xor
push
fwait
adc
fstl
loop
xor
testl
xlat
shrb
bound
into
xor
je
mov
rorl
shlb
outsb
mov
roll
xchg
mov
mov
mov
jmp
shll
push
add
cs
and
rol
shll
push
shl
std
pop
lret
into
add
jmp
clc
push
xor
insl
push
rclb
outsb
pop
xchg
xor
std
mov
in
loope
adc
mov
sbb
push
bound
dec
outsb
adc
rorb
cmpsl
imul
dec
icebp
mov
cmp
add
fists
pop
xlat
ds
inc
xchg
xor
push
push
mov
pop
rol
and
xor
mov
mov
jno
shl
inc
mov
jb
adc
cmp
popf
or
lret
ds
sbb
repz
push
orb
push
inc
pop
orl
outsb
and
leave
xlat
bound
into
shll
je
mov
movsl
mov
adc
lret
ret
push
inc
xor
mov
rol
in
cmpsb
xor
icebp
push
mov
lods
repz
ret
call
in
loopew
mov
xor
xor
out
adc
mov
icebp
cmp
adc
popf
jmp
pop
ret
divl
add
pop
adc
pop
mov
shrb
jle
xor
and
mov
icebp
scas
sbb
adc
lods
push
ret
xchg
dec
push
jne
cmpb
div
and
jno
pop
shll
adc
and
mov
lds
adc
into
jle
jl
in
cltd
rcl
add
mov
lret
push
outsb
add
xchg
dec
aas
push
insl
inc
mov
xor
xor
daa
xchg
lods
push
js
jecxz
ret
bound
cs
repz
or
adc
insl
movsl
rorl
nop
adc
testl
sbb
stos
xor
das
and
mov
and
mov
mov
inc
mov
mov
inc
jb
in
mov
test
mov
or
and
fidivrs
jb
fiadds
les
data16
add
in
stos
dec
in
out
mov
xor
jno
bnd
mov
xchg
mov
xlat
mov
mov
pop
shl
pop
pop
add
vmovss
pop
into
add
inc
push
xor
cmpsl
xor
call
mov
sbb
jns
les
loop
adc
pop
andb
dec
pop
cmc
mov
loop
inc
shll
inc
pop
jb
xchg
or
shlb
jle
xchg
call
sti
jo
pop
xlat
ret
xchg
push
cmp
and
jp
mov
adcl
mov
lret
icebp
pop
push
push
xlat
daa
cmp
mov
add
outsb
mov
mov
pop
loopne
inc
mov
out
ja
pop
lods
and
cmp
adc
mov
gs
add
xchg
cwtl
outsl
mov
mov
pushf
cmp
adc
xor
xor
pop
and
mov
ss
xchg
rol
xchg
inc
fwait
inc
push
xor
xor
adc
jae
xor
dec
adc
sub
mov
mov
mov
and
mov
popl
mov
pop
jno
aad
sub
cld
ja
es
push
ror
and
lock
xlat
adc
mov
inc
shlb
dec
int3
data16
inc
adcl
mov
fiaddl
inc
mov
adc
bound
mov
push
xor
out
xor
fidivl
mov
dec
cli
and
dec
mov
aaa
sbb
movl
jmp
push
adc
aad
jb
lock
inc
shll
cmp
inc
nop
mov
xchg
inc
or
fwait
and
mov
and
pop
subb
into
dec
inc
cmpsl
icebp
xlat
pop
daa
jno
adc
add
rorl
in
mov
mov
mov
and
rcrl
repnz
ljmp
sub
add
xchg
out
inc
mov
testl
inc
xchg
inc
and
jae
ret
shr
imul
cmpsl
js
dec
mov
mov
jae
dec
pop
mull
loopne
push
push
jnp
add
mov
ss
dec
mov
xlat
fs
bound
pop
jno,pt
jecxz
mov
arpl
push
inc
xlat
dec
popa
fidivrl
sti
add
cmp
xor
popa
adc
add
xor
dec
mov
popa
adcl
xor
mov
arpl
gs
stc
ja
and
and
outsl
scas
inc
xor
mov
aaa
into
neg
ss
adc
iret
jo
xor
mov
ds
sahf
ret
xor
push
xchg
das
jge
aas
iret
sbb
add
scas
test
dec
jae
add
cs
cli
adc
in
sbbl
ljmp
dec
push
xchg
mov
push
enter
shll
push
add
or
mov
fistps
lock
dec
test
push
adc
push
addr16
dec
mov
loop
out
mov
push
ret
cmp
push
xor
cs
andl
dec
mov
mov
jnp
dec
and
dec
fpatan
xor
ret
les
add
and
adc
push
je
nop
mov
ljmp
in
test
imul
add
xchg
into
xchg
dec
loopne
or
ds
sub
jecxz
and
sti
xor
cmp
repz
repz
jae
shll
mov
mov
fsubl
mov
arpl
add
sub
out
int
jb
into
jo,pn
mov
xchg
std
mov
xchg
mov
push
ds
push
dec
imul
push
test
out
sub
pop
out
mov
pop
sbb
sub
dec
and
repnz
loope
xchg
repnz
add
out
xchg
mov
ljmp
vpavgw
sbb
mov
and
test
add
enter
test
and
shrl
pop
mov
mov
xchg
xchg
icebp
loop
jb
and
daa
add
mov
push
shrl
mov
or
adc
cmp
ret
pop
push
cmp
push
inc
in
or
imul
mov
inc
repz
mov
mov
xchg
jo
jne
xlat
dec
xor
xor
shlb
add
mov
adcb
mov
inc
outsb
loope
popf
je
cli
test
mov
out
add
in
push
rcll
xor
les
adc
push
ret
jno
cs
out
xchg
mov
shll
jno
insb
and
inc
je
sbb
subl
xchg
hlt
out
xorb
mov
test
inc
into
idivb
out
push
scas
cltd
mov
adc
icebp
mov
mov
push
out
andb
loope
jae
hlt
pop
rcl
jg
jg
xor
lods
mov
adc
add
xchg
and
jae
ret
mov
xor
xlat
fcompl
adc
outsb
sbb
rolb
xchg
mov
adc
outsb
mov
adc
les
xchg
ds
adc
fidivs
inc
ljmp
add
popa
xor
test
xchg
xchg
or
push
pop
mov
outsb
cmpsl
or
sbbb
inc
mov
dec
and
mov
mov
mov
sbb
inc
inc
rol
xor
fsubrl
xchg
sti
dec
cmp
sbb
xlat
sbb
jp
pop
iret
fstps
mov
ret
xor
loope
sub
jo,pt
add
jno
and
into
add
mov
pop
mov
sub
into
les
rcrl
ret
icebp
and
lds
divl
adc
jno
test
mov
push
jo
loopne
push
add
xchg
add
icebp
push
mov
sbb
shll
push
je
mov
mov
mov
rolb
adc
outsb
push
and
pop
les
push
add
jge
sub
jmp
add
outsl
fwait
adc
clc
jge
xchg
scas
popa
xor
mov
and
lds
xor
pop
xchg
xlat
and
add
jnp
jae
xor
xlat
mov
std
or
mov
lahf
outsb
out
cmp
loope
mov
push
jo
add
mov
dec
or
sub
dec
ret
inc
push
insl
sub
push
mov
cmp
popa
ret
sub
push
ss
xor
stc
fidivl
xlat
test
xchg
sub
sub
dec
pop
mov
push
cli
pop
push
push
xor
push
stc
frstor
inc
jb
mov
push
push
push
xchg
mov
fwait
cs
sub
into
mov
outsb
js
or
pop
sub
xorl
popf
mov
xor
into
bound
pop
jl
enter
fdivl
sbb
jecxz
mov
xlat
lods
out
xorl
outsb
push
jb
rolb
dec
lods
and
std
mov
jns
xor
sub
dec
cmc
les
mov
push
scas
adc
mov
leave
push
pop
push
inc
les
sub
std
mov
shll
les
jae
lods
dec
jns
std
fidivl
add
push
and
xchg
pop
sub
adc
shll
leave
movsl
inc
cmp
aas
test
mov
push
lret
dec
mov
lret
inc
adc
dec
mov
repz
inc
xor
cs
and
icebp
inc
sub
andl
mov
push
mov
mov
dec
jg
repz
out
and
loop
roll
arpl
pop
pop
loopne
and
loope
inc
xor
orl
sub
jns
mov
mov
fs
push
xchg
adc
mov
adc
dec
inc
rorb
in
test
push
jne
jecxz
std
mov
mov
loope
ss
dec
and
mov
push
jge
jb
jne,pt
les
dec
icebp
push
jge
and
jb
push
jae
subb
xor
icebp
push
xchg
dec
push
mov
mov
les
adc
outsb
ret
sub
mov
popf
inc
es
push
popa
inc
bound
adc
dec
xlat
push
movb
xchg
push
xchg
add
mov
sub
jb
xlat
xchg
sbbl
cmpsl
and
shr
add
dec
mov
out
jae
inc
sub
xor
sub
bound
std
pop
mov
mov
mov
dec
mov
dec
xchg
clc
push
dec
loope
les
push
aam
adc
bound
inc
cmp
inc
jb
push
loope
adc
lahf
cs
adc
daa
push
jno
dec
add
dec
or
jle
loope
popa
push
in
xor
dec
push
call
addr16
daa
jle
mov
push
aad
rcrl
rcl
inc
subl
mov
push
icebp
dec
sbb
test
push
xor
insb
mov
ja
loope
daa
mov
mov
lret
push
pop
loope
cs
adc
jnp,pt
les
mov
setno
xor
jmp
mov
push
adc
dec
cs
jno
mov
push
into
jle
cmp
jbe
mov
in
xor
or
xor
lea
inc
fisubl
xor
mov
shl
scas
sub
pop
jo
lret
lcall
xor
mov
adc
fs
xchg
sbb
call
jecxz
adc
and
stos
nop
daa
movsb
pop
add
sbb
mov
sub
add
dec
xor
shl
sub
adc
aad
xchg
push
cmpsb
into
ja
je
sub
xchg
inc
loope
mov
rorl
inc
mov
xlat
sub
movsl
or
je
icebp
icebp
xor
into
call
outsb
mov
push
shlb
pushf
cmp
shrw
and
repz
sub
pop
ds
mov
xor
adc
push
adc
nop
leave
adc
add
lcall
jl
jb,pt
cmp
out
mov
mov
jle
icebp
aam
scas
add
pop
adc
mov
into
and
mov
adc
out
roll
fsubrl
mov
sub
jle
jo
dec
mov
shll
pop
adc
xchg
cli
push
adc
sub
cld
xor
push
repz
ret
shll
je
ljmp
xor
dec
sub
cmpsb
mov
xlat
xchg
mov
gs
or
cs
cmp
mov
sbb
arpl
inc
jb
mov
and
outsb
in
adc
mov
ret
pop
xlat
inc
push
fisubs
dec
adc
pushf
test
sub
ljmp
shlb
cwtl
xor
into
addr16
aas
andb
and
mov
inc
mov
daa
lret
mov
mov
inc
xor
push
sarb
xchg
push
roll
pop
fcomp
and
pop
jb
fsubrs
inc
loope
inc
mov
repnz
push
rcll
or
ror
mov
push
inc
inc
inc
adc
xlat
fidivl
ret
inc
mov
lods
add
inc
sarl
adc
dec
ljmp
and
inc
sbb
cs
and
inc
jle
mov
push
jl
cmp
push
xchg
and
push
dec
dec
cmp
stos
imul
dec
je
push
dec
rcrl
push
fsts
mov
imul
push
push
dec
jo
mov
stc
and
push
cmp
dec
mov
mov
push
mov
and
aam
mov
movsb
rcr
ss
loop
push
push
mov
mov
mov
call
dec
adc
and
out
and
inc
jns
rcl
ss
dec
add
dec
adc
push
inc
mov
ds
add
mov
xchg
cmc
xchg
add
add
cmpsl
shll
jno
enter
pop
inc
xor
jmp
add
mov
mov
repz
dec
movsl
std
test
dec
pop
fcmovb
jb
inc
dec
pop
js
xor
cmp
mov
icebp
sahf
cmp
insl
repz
cwtl
shrl
pop
mov
add
add
cmpsl
pop
or
cli
bound
ret
lcall
add
adc
rcrl
ljmp
jne
xlat
jle
push
add
popw
aas
fimull
xor
push
out
mov
inc
jno
and
mov
push
sbb
mov
add
mov
sub
cmp
bound
xor
loop
adc
adc
xchg
rcll
push
inc
adc
loope
std
mov
pmaddwd
dec
out
add
out
xor
add
mov
push
push
sub
into
mov
and
push
aas
hlt
xchg
cmpsb
pop
enter
jg
adc
shll
push
call
mov
cmpsl
arpl
xchg
clc
inc
xor
adc
sarl
jmp
dec
ret
add
scas
xor
pop
dec
lds
mov
push
test
out
addl
adc
or
inc
and
xor
mov
and
mov
ret
loop
jecxz
jle
mov
movsl
xor
push
div
xchg
inc
push
mov
popa
call
rcrl
lods
pop
push
in
xor
xor
pop
ja
pop
adc
push
data16
lea
mov
push
or
lret
add
pop
out
daa
pushf
or
jno
push
je
shr
inc
pop
cs
mov
arpl
push
out
inc
mov
shll
lahf
mov
popa
repz
xchg
repnz
jae
fimull
jecxz
jl
mov
adc
cmc
mov
jecxz
dec
ds
adc
mov
or
orl
jmp
mov
jecxz
mov
out
cmp
mov
loope
popa
push
push
cmp
xlat
xor
sub
mov
jg
push
jge
xchg
mov
divl
ljmp
push
je
mov
and
pop
out
xor
inc
shll
cmpsl
inc
push
in
jg
out
movsb
mov
scas
ljmp
dec
lods
sbb
icebp
add
shll
xchg
ret
outsb
mov
mov
into
mov
push
pop
add
fistpl
in
jg
xlat
xchg
clc
push
cltd
shl
inc
das
andl
outsl
or
adc
cmp
imul
jae
xor
repz
mov
bound
popa
daa
push
mov
jb
add
inc
loopne
out
xlat
add
cmpsl
cmpsb
out
imulb
add
add
mov
xor
adc
jno
dec
dec
inc
mov
or
mov
push
xlat
jo
ljmp
mov
or
adcl
adc
in
inc
and
and
xchg
or
cmpsl
mov
pop
lret
mov
and
jnp
mov
fiaddl
mov
test
arpl
loope
mov
mov
ret
add
xlat
pop
out
jb
adc
bound
ja
out
jno
mov
dec
xor
loope
jae
cs
ret
xchg
jb
dec
inc
inc
dec
fcmovb
xor
je
out
repz
push
shl
clc
rclb
xchg
mulw
ljmp
add
xor
cs
cmp
push
jb
notl
mov
icebp
xor
adc
mov
adcl
push
pop
loope
mov
xor
pop
xchg
adc
call
pop
xchg
ja
dec
mov
xor
lea
cltd
neg
or
fwait
cmc
ljmp
out
xor
into
adc
hlt
cld
sub
dec
gs
dec
std
pop
subb
rol
in
sarl
outsb
jno
push
add
mov
ret
repz
jno
dec
leave
je
push
sbb
xchg
adc
xor
mov
sub
add
xor
fs
stc
xchg
xlat
xor
sub
sub
out
lcall
sub
sti
xchg
jecxz
mov
jb
inc
divl
add
mov
fnstsw
and
loope
or
inc
clc
popa
mov
mov
xor
shlb
cmpsb
fnstenv
mov
fs
cmpsl
inc
loope
and
fs
or
fadd
jge
shlb
mov
out
xchg
mov
and
rorb
mov
dec
inc
test
cmp
jae
idiv
jnp
les
pop
or
ret
push
out
jb
push
xchg
inc
jno
xor
icebp
inc
outsb
into
test
dec
jae
scas
bound
mov
xor
add
dec
lea
ds
in
mov
jo
push
in
rcl
mov
cmp
bound
cs
pushf
mov
cmp
lret
cmpsb
sahf
or
jle
scas
repnz
fildl
fcmovnu
divl
jae
lock
test
jp
and
xchg
dec
mov
jmp
iret
out
lds
dec
pop
aas
addr16
dec
outsb
inc
call
adc
shll
add
mov
and
cmc
xchg
ljmpw
or
pop
xor
stc
jle
loop
mov
jo
ja
shl
sbb
ret
push
xchg
out
fstl
fists
scas
fisubrl
jb
add
jle
aaa
sub
cwtl
jge
mov
inc
cwtl
jl
mov
ds
popa
add
mov
xorb
and
inc
push
rcll
je
scas
test
je
inc
dec
aam
loope
addr16
das
pop
and
into
fiadds
ret
xchg
jecxz
dec
adc
clc
je
mov
dec
cmpb
push
sub
and
or
jno
mov
adcb
and
push
xchg
jae
in
test
push
sahf
or
mov
xchg
mov
repz
and
cld
outsl
aas
loopne
popa
out
icebp
lret
shll
adc
mov
cmpb
arpl
imul
mov
and
repz
push
in
mov
add
mov
xchg
fdivr
pop
outsl
pop
pop
outsb
push
pop
xor
inc
scas
mov
xchg
cmp
adc
mov
and
and
jmp
mov
or
lea
out
and
jno
popa
mov
cwtl
dec
xor
les
inc
je
call
add
mov
subb
in
fnstenv
push
inc
jae
mov
je
push
in
adcb
mov
loope
out
xor
add
inc
or
sub
lds
dec
cltd
push
mov
gs
je
out
lret
loope
mov
sub
call
xorb
pop
and
cs
mov
stos
jge
adc
xor
fiaddl
add
lret
inc
or
aam
inc
xchg
cmpb
adc
push
adc
mov
xchg
inc
jle
and
inc
popa
les
xchg
fwait
xchg
mov
mov
fistpl
or
push
mov
std
scas
icebp
and
jecxz
sahf
inc
and
sub
xor
roll
pop
pop
outsb
sbb
xchg
adc
cmpl
icebp
std
cltd
sbb
mov
xor
cmpsl
jae
sub
pop
std
and
loop
icebp
and
jae
aad
insb
adc
aas
pusha
fistl
out
pop
xor
push
jae
testb
mul
mov
jmp
add
xlat
xchg
add
jle
add
jno
xor
xor
inc
lock
fs
sbbl
jmp
out
mull
pop
push
dec
mov
enter
mov
shll
jge
notl
push
push
outsb
loop
in
xor
cs
inc
jno
mov
adc
jp
ljmp
sub
push
mov
mov
mov
push
sbb
xchg
fldcw
pop
adc
xor
mov
jo
pop
xchg
jno
in
mov
sbb
les
sub
ljmp
push
push
pop
and
mov
inc
subb
inc
mov
int3
xchg
in
add
add
jno
mov
cmp
mov
ret
mov
jbe
lods
add
xchg
stos
xorl
inc
dec
adc
pop
dec
and
jno
mov
push
stc
dec
xor
or
filds
mov
mov
into
mov
decb
and
push
dec
xor
aam
imul
sti
pop
inc
dec
xor
ljmp
rdpmc
scas
dec
pop
cmp
sub
loop
xor
roll
xchg
out
and
shlb
push
mov
jp
xchg
fs
out
sub
jb
jle
xchg
xchg
push
fs
les
or
xor
push
lds
sahf
inc
xchg
mov
mov
jno
test
xor
jne
inc
pop
arpl
fisubl
and
push
jl
inc
ds
adc
xchg
repnz
and
xor
push
into
aam
adcb
notl
xor
shl
rcll
push
jge
mov
shlb
fs
mov
xlat
out
bound
sbb
dec
out
jno
mov
adc
xor
xchg
repz
cmp
and
push
sbb
das
leave
jnp
jae
hlt
loop
xor
inc
pop
mov
push
mov
push
shlb
test
xor
mov
out
scas
fwait
movl
or
cmc
icebp
mov
mov
and
scas
mov
xlat
rcll
bound
and
int3
into
les
jge
add
es
push
ss
lret
add
mov
fildll
push
and
push
jb
daa
jle
or
xlat
cwtl
inc
pop
jns
fdivp
shll
std
fidivrl
les
inc
dec
out
insb
inc
repz
mov
sub
cmp
push
push
and
cld
fdivr
xlat
mov
mov
and
mov
popa
jo
into
jno
aas
dec
stos
xchg
ljmp
shrl
sub
mov
stos
bound
cmp
push
mov
push
xchg
ss
inc
andl
adc
aaa
outsl
xor
cmpsl
dec
mov
clc
adcb
dec
push
xor
push
dec
add
mov
sub
dec
mov
jmp
rcll
mov
ds
pop
icebp
and
jno
les
dec
mov
sub
jle
adc
fs
rcr
jmp
and
xor
cwtl
sub
add
mov
xor
xor
nop
push
cmp
or
push
addb
pop
pop
andl
ds
rolb
imul
jo
clc
jno
fs
cmpl
aaa
rorl
push
and
dec
int3
push
xchg
mov
dec
mov
popl
and
popa
jae
pop
popa
shl
push
aad
jns
mov
mov
imul
inc
xchg
and
aam
mov
popa
push
push
lods
loope
pop
mov
pusha
sub
jecxz
dec
gs
push
add
cld
cmp
aad
jecxz
mov
fsubs
fcmovb
push
push
mov
scas
push
cltd
cmp
dec
mov
mov
push
push
or
and
push
mov
xchg
and
daa
ds
out
outsl
ret
outsb
mov
sbb
jo
and
scas
and
and
mov
into
jne
add
stos
shll
scas
pop
loope
and
fs
mov
xor
mov
rcll
add
fcmovb
mov
adc
repz
out
out
adc
jecxz
dec
icebp
xor
pop
inc
xchg
xor
or
ret
sub
push
fs
popa
push
push
scas
push
jae
xorb
loop
inc
xor
data16
sub
aam
adc
xor
les
mov
xlat
fcmovnb
cmp
andl
or
out
rcll
in
mov
fsubp
cs
stc
fdivl
adc
xchg
out
pop
loope,pt
outsl
sahf
mov
outsb
add
mov
jecxz
loope
mov
out
adc
jae
in
hlt
cmp
rolb
loop
pop
shll
add
fimull
sub
adc
sbb
lret
daa
mov
lret
addl
cmc
insl
pop
jno
push
std
fimuls
stos
inc
pop
adc
out
pop
and
stos
and
xchg
adc
push
ss
jb
divb
mov
add
mov
mov
enter
rol
cmc
in
xchg
inc
cmp
or
hlt
jmp
outsb
dec
popa
and
cli
and
pop
adc
aad
mov
and
rcrl
inc
test
push
cs
add
shlb
xor
push
or
inc
out
in
int3
jecxz
cli
push
fabs
inc
popl
push
jne
mov
mov
xor
push
rclb
arpl
sub
mov
mov
and
push
fiaddl
fdivrs
xor
xchg
inc
xchg
mov
mov
je
adc
mov
mov
les
push
push
inc
ss
and
adc
push
adc
inc
roll
xchg
rclb
mov
out
loopne
mov
xor
push
bound
repz
mov
pop
and
cli
dec
aad
movups
loope
adc
clc
clc
sub
ja
dec
mov
es
mov
pop
jb
xor
shlb
mov
push
testl
mov
mov
ret
popf
sub
xor
adc
and
ret
jl
movsb
ret
ljmp
mov
shll
xorl
push
mov
repnz
or
lds
dec
stos
inc
adc
jno
int
xchg
push
repz
xchg
iret
xor
cli
loope
mov
jb
movsl
mov
hlt
cmc
push
mov
push
ficompl
lock
mov
inc
into
int3
test
andl
push
ljmp
fucom
xchg
xchg
xchg
subl
mov
ss
mov
cmpsl
jno
adc
xchg
xchg
cmc
jae,pn
add
push
dec
call
js
ret
stos
dec
rcr
inc
repz
xor
repz
lret
arpl
lcall
jmp
xchg
xchg
add
mov
mov
rclb
shll
fsubrs
aam
mov
jb
jae
push
icebp
dec
cwtl
test
rcl
jno
shrb
lret
ljmp
inc
and
shl
cmpsb
cmpsl
add
repz
rcll
mov
movsl
int3
jno
inc
lret
sub
rolb
movsb
push
fists
popa
add
cmp
inc
and
jl
jno
hlt
loop
arpl
jb
and
and
push
out
cmpsl
neg
jmp
sti
cmp
add
inc
adc
imul
cld
or
pop
in
out
in
or
sub
dec
adcb
pusha
data16
mov
jl
mov
out
mov
aam
xor
jo
mov
data16
data16
sarl
add
cmpsl
jb
cmc
and
mov
outsb
out
cmp
mov
cmp
mov
cmpsl
inc
fbstp
repz
xchg
mov
mov
pop
adc
lods
pop
mov
inc
aam
icebp
mov
hlt
lahf
xor
add
mov
adc
mov
mov
cmp
mov
and
icebp
call
mov
push
in
cmpl
ret
push
xor
call
add
mov
in
adc
hlt
sar
mov
xlat
xchg
les
pushf
bound
ds
push
dec
inc
data16
or
jae
call
xor
jo
pop
push
rcll
xchg
mov
cli
popf
mov
xchg
jmp
push
out
adc
mov
add
call
xor
pop
push
mov
sub
push
mov
test
out
mov
ljmp
xchg
xchg
lods
sbb
shl
add
mov
cmp
mov
ret
pop
inc
lds
ja
xchg
adc
fwait
js
outsl
jp
mov
add
or
mov
decb
mov
daa
cltd
add
sub
push
jae
test
inc
popa
push
push
jb
loopne
ljmp
inc
fisttps
int
sub
adc
push
sub
xor
dec
and
cli
clc
cmp
adc
push
into
lds
and
dec
dec
dec
adc
shrb
add
loope
xor
iret
adc
ljmp
dec
add
call
and
jae
adc
fsts
repnz
and
add
add
pop
out
xchg
mov
jb
fwait
mov
add
sub
into
popa
dec
mov
bound
cmpl
loope
jns
and
call
rorb
cli
les
les
stos
outsb
icebp
or
jo
cwtl
push
dec
rcrl
mov
sbb
inc
add
neg
sub
inc
mov
insb
or
fcmovb
cmpl
jecxz
in
into
subl
jne
add
popa
mov
ret
xchg
push
in
mov
bound
scas
adc
lds
insb
inc
div
jno
pop
mov
test
inc
push
out
mov
jmp
out
mov
add
out
lret
dec
cmp
add
shl
insb
rcl
jo
push
and
pop
bound
mov
xchg
xchg
mov
add
pop
adc
jl
out
adc
rorl
mov
mov
out
sub
daa
pop
jb
inc
inc
inc
and
inc
dec
lahf
cld
or
mov
jl
cmp
and
fwait
xor
push
add
loopne
add
pop
outsb
or
cmp
clc
jle
js
xor
xchg
icebp
xchg
and
mov
sarb
js
push
xchg
in
rcrb
sbb
lret
clc
sub
jo
popa
push
aas
pop
into
adc
cmp
addr16
jno
adc
loopne
lods
xor
cmp
sbb
inc
jns
cmp
lret
inc
in
bound
mov
hlt
adc
jns
mov
xor
icebp
inc
lahf
out
lods
add
sahf
clc
and
adc
dec
into
into
mov
imul
cmc
push
loope
mov
xor
push
mov
adc
adc
dec
mov
inc
repz
testb
and
loop
inc
mov
jle
mov
rcrl
add
cltd
mov
lods
icebp
les
mov
push
fdivrp
rcll
sub
and
popa
xchg
push
in
xor
mov
cmp
dec
push
fadds
ja
push
jno
push
push
sbb
repz
fldz
adc
jecxz
mov
xchg
jne
pop
subb
out
xor
inc
outsb
insb
dec
js
mov
shll
daa
cmp
sbb
mov
adc
sub
pusha
push
out
je
push
shl
sahf
mov
jecxz
add
outsb
out
push
and
arpl
pop
push
and
sub
bound
xor
rol
pushf
dec
adc
inc
shl
inc
xlat
enter
data16
dec
and
subb
in
out
out
fs
xchg
adc
stos
push
jbe
ljmp
xor
and
das
pusha
push
and
mov
ret
pop
mov
mov
sbb
rol
in
loop
outsb
popa
cli
shrb
andl
jo
pop
icebp
jecxz
xor
push
arpl
out
ret
popa
les
test
xchg
push
pushf
xchg
push
daa
testl
shrl
add
jmp
jns
and
je
ret
dec
loope
inc
xor
xor
icebp
or
xchg
dec
addr16
xor
mov
mov
aad
popa
outsb
sbb
jmp
adc
mov
or
jae
ret
clc
and
sub
out
roll
or
call
push
rcrl
add
xor
dec
and
adc
test
orl
mov
mov
cmc
insb
iret
mov
jno
add
dec
cs
mov
fs
pop
and
shl
mov
popa
ja
adc
mov
mov
and
sahf
sbb
aaa
js
xor
mov
xchg
ds
and
xchg
outsb
scas
cs
and
inc
jae
mov
stos
je
inc
shl
popa
mov
adc
lgs
fs
cs
out
push
mov
xlat
dec
aam
push
jle
jno
out
sbbl
jle
xor
inc
les
mov
out
and
push
bound
inc
adc
push
push
lea
add
dec
into
jno
ljmp
repz
mov
mov
or
sbb
call
out
add
cmpsb
mov
and
movsb
inc
pop
andl
jae
and
or
sub
adc
jp
push
nop
test
je
daa
jecxz
mov
or
cmp
and
je
jo
mov
popa
arpl
inc
out
cwtl
in
sub
orl
test
mov
outsb
mov
mov
stos
mov
and
mov
outsl
xchg
push
jne
roll
push
into
mov
arpl
sbb
les
bound
inc
xlat
push
pop
scas
lret
into
in
pop
mov
dec
pop
push
xor
fidivs
aam
je
inc
mov
dec
ljmp
xlat
mov
int3
addl
adc
addr16
lea
sub
ljmp
inc
es
and
or
add
cmpsb
push
or
mov
outsb
push
xor
mov
daa
das
pop
xor
and
sbb
dec
movsb
jle
xor
xchg
test
js
stos
add
sub
mov
pop
and
xchg
add
adc
rcrb
push
ret
jge
mov
jmp
jns
inc
push
int
jmp
shll
aam
add
add
inc
out
out
xor
rolb
xorl
sbb
xor
sbb
loop
repnz
xchg
push
xchg
xor
inc
lods
int
in
cmp
jbe
mov
out
out
cs
addb
or
push
ficoms
pop
push
fcomps
push
add
pop
stc
mov
data16
repz
mov
dec
or
mov
inc
sbb
cmp
jmp
cmc
popa
ret
push
add
adcl
sbb
dec
mov
sub
hlt
pop
call
inc
insb
in
ret
das
mov
pop
loop
repz
add
mov
mov
jle
jg
rcrl
jecxz
stos
xor
pop
scas
mov
push
out
dec
lock
shll
xor
cli
mov
push
add
adc
xor
add
add
xlat
jae
cmpsl
addr16
jecxz
mov
and
adc
repz
xor
mov
popa
push
cld
adc
leave
jle
shll
loope
jae
or
iret
or
xor
push
outsb
loope
push
les
xchg
and
sub
testb
sub
push
cld
imul
ret
out
add
dec
sbb
in
and
add
jb
adc
fs
jb
and
push
xchg
outsb
bound
addr16
jbe
xor
shl
jg
imul
and
mov
inc
cmp
dec
pop
loop
mov
cmpsl
push
mov
pop
pop
and
xor
mov
sub
xlat
fwait
adc
push
scas
adc
popa
clc
cmp
cmp
lahf
lock
in
jmp
push
mov
push
ffree
cmpb
jae
jae
mov
lock
mov
xlat
adc
add
pop
sbb
mov
jmp
and
mov
ret
inc
adc
insb
xor
mov
jae
xor
add
adcl
adc
les
xor
inc
fsubr
scas
mov
enter
movsl
subl
fldenv
push
xor
push
push
mov
inc
push
jle
xor
cmp
std
sub
je
adc
push
lock
dec
shll
popa
mov
dec
jge
pusha
hlt
shl
inc
mov
dec
hlt
and
push
stos
xchg
add
xchg
jne
jecxz,pt
add
js
fldt
cmc
inc
mov
ljmp
mov
sbb
xchg
mov
bound
les
and
push
addl
mov
jmp
sarl
or
sbb
mov
pop
cmp
std
insb
cmp
jno
ljmp
repz
std
pop
imul
xor
cmpsl
out
into
jns
xchg
rcrb
push
push
xor
xchg
movsl
loope
xor
cltd
cmpb
les
fs
lods
je
ljmp
adc
mov
add
lods
sub
rorl
lock
mov
inc
jecxz
mov
dec
lock
movsl
leave
mov
cmp
dec
and
in
cltd
outsb
or
jae
sub
or
mov
mov
xlat
sbb
int3
xor
inc
adc
call
inc
mov
std
dec
or
in
or
dec
ljmp
popa
mov
aas
dec
xor
add
nop
outsb
push
and
rorb
sbb
and
xchg
jle
insl
andl
jbe
popa
lret
add
mov
cmp
icebp
ljmp
cli
cs
jae
push
icebp
icebp
push
mov
ljmp
mov
ret
mov
outsb
xor
fisttpl
xor
lea
cs
jb
flds
insl
pop
cs
out
das
shlb
cmp
sbb
push
cmp
in
jo
dec
mov
lahf
or
cli
call
push
cmp
popf
rolb
test
repz
push
fnstenv
addb
fadd
xchg
push
add
ficomps
adc
jle
mov
pop
enter
ret
push
xchg
aam
xchg
push
adc
add
loopne
xlat
std
into
jecxz
inc
out
addl
mov
push
add
mov
fwait
mov
rorl
out
pop
mov
push
or
les
push
jecxz
imul
add
mov
cmpsl
push
xor
and
fs
loop
xchg
or
ljmp
test
rorl
mov
ret
xor
mov
ret
in
mov
inc
add
pop
sub
mov
xchg
dec
repz
mov
jp
mov
mov
stos
add
mov
mov
lds
dec
int
into
pop
push
divb
mov
dec
mov
notb
xor
lcall
xor
mov
inc
jp
mov
xor
mov
push
cmp
add
ret
inc
negb
andb
mov
iret
mov
or
inc
sahf
cmpsb
jmp
loopne
sarl
add
roll
and
jno
inc
mov
push
jle,pn
ret
xchg
test
adc
xchg
mov
repz
mov
xlat
mov
loope
xor
jle
out
push
add
repz
out
jge
imul
outsb
push
bound
and
rcr
jecxz
rcrl
ret
adc
mov
adc
jno
nopl
mov
and
shlb
jecxz
and
xchg
push
mov
stos
jle
out
enter
push
pop
push
cli
lods
push
sub
jno
icebp
outsl
fdivl
pushf
and
mov
inc
lcall
andb
std
data16
nop
add
mov
push
rorl
dec
cli
mov
icebp
xlat
adc
mov
xor
mov
and
outsb
inc
dec
xor
and
in
ds
addb
repnz
push
mov
sbb
inc
jle
mov
fucomip
and
or
jle
push
mov
cs
mov
xchg
xchg
and
and
xlat
xor
imul
in
sti
cmc
call
scas
push
push
test
rcr
shlw
cld
xchg
test
jbe
mov
addr16
add
fiadds
adc
and
pop
lcall
idivl
jmp
xor
adc
pop
pop
std
ss
cs
out
stos
incb
adc
arpl
push
test
repz
pop
fiadds
jecxz
scas
out
xor
testb
out
push
mov
add
ja
fs
push
mov
dec
fs
jae
popf
cmc
push
mov
loop
dec
cmpsl
pop
repnz
dec
mov
lret
push
sub
mov
jb
mov
lret
out
insb
push
push
push
cmp
mov
mov
ret
icebp
loope
pop
mov
adc
dec
rorb
outsb
adc
ss
fsubl
mov
push
xchg
inc
das
sub
test
mov
arpl
mov
sub
inc
xor
jle
and
rorl
loope
mov
outsl
and
imul
loop
push
mov
and
xchg
cmpb
into
out
cmp
out
aas
hlt
xor
inc
mov
cmp
fs
push
mov
addr16
add
mov
adc
popa
mov
mov
test
push
sub
shll
push
pusha
cs
jle
push
es
cmp
mov
xor
pop
xor
loop
add
in
mov
adc
inc
and
loop
cmp
mov
adc
add
out
xor
rclb
stc
push
push
xor
mov
lock
idivl
jae
aas
repz
mov
pop
push
roll
and
icebp
push
inc
sarl
lods
adc
add
and
ret
stc
and
dec
jecxz
rcr
xor
cmpsb
xor
rcl
push
les
xor
add
sub
mov
sbb
andb
push
xorl
jno
rcl
jno
xor
cld
and
out
push
jp
inc
cmpsl
mov
cs
in
adc
and
cmp
xor
jle
add
cli
in
pushf
adc
leave
dec
or
xorb
push
sti
gs
dec
jle
lock
jb
mov
test
shlb
dec
es
ret
sub
movsl
push
adc
arpl
bound
add
out
adc
jae
jecxz
mov
dec
mov
mov
out
xor
xchg
jmp
and
add
std
and
fcompp
ret
cwtl
rolb
inc
adc
addr16
lahf
adc
cs
fdivs
aaa
push
mov
lret
xor
dec
icebp
inc
jle
and
repz
mov
je
inc
xor
loope
dec
mov
add
mov
jno
or
add
inc
aam
sarl
mov
arpl
or
sub
test
dec
je
add
and
cmc
inc
divb
push
pop
xor
fists
lahf
fildll
filds
adc
outsb
shl
mov
into
cmp
test
add
jg
mov
mov
movd
mov
xchg
push
xchg
mov
fldenv
ret
js
mov
shr
mov
add
inc
inc
xchg
repz
iret
mov
dec
pop
shl
cltd
sub
cmp
out
stc
ret
dec
popa
dec
and
add
pop
data16
inc
xchg
add
adc
adc
inc
xor
icebp
mov
dec
jnp
xorl
inc
push
outsb
popa
mov
xor
hlt
rorb
cltd
ret
push
popa
mov
or
xor
cmp
sub
and
inc
popa
cs
xor
roll
cmp
lea
inc
faddl
out
in
test
andb
pop
add
xor
arpl
cltd
add
xor
mov
mov
cmp
push
bound
shr
sbb
add
lods
fiadds
mov
xchg
fucomp
push
inc
insl
in
mov
out
pop
outsl
bound
adc
das
jb
sbb
pop
xchg
addb
sti
stos
stc
icebp
stc
ror
mov
shrl
or
je
sbb
jae
xorb
das
inc
shl
add
push
add
arpl
into
out
call
sub
ror
sbb
jb
and
pop
std
or
xchg
jbe
addb
and
inc
push
adc
fstpl
xchg
jae
push
shll
pop
aas
arpl
push
jno
sbb
jmp
int
ljmp
in
mov
hlt
and
xchg
adcb
call
jnp
inc
cmpsb
jae
lahf
loope
adcb
xchg
in
lret
xor
sbbl
fs
push
mov
pop
mov
inc
rorb
std
mov
and
and
xor
sti
push
call
addr16
add
fisubs
xchg
and
fbld
dec
jbe
sbb
data16
fidivrl
rcrl
shrb
popa
pop
mov
jecxz
and
inc
xchg
and
ds
add
sub
pop
test
jbe
outsb
in
add
iret
int
jno
shlb
cmp
adc
push
push
mov
pop
ret
adc
scas
ljmp
inc
and
imul
inc
loopne
push
outsl
add
hlt
shrb
lret
inc
subl
xchg
xchg
pop
lcall
ret
out
popf
shll
adc
fists
outsb
fstpl
push
jle
in
jmp
and
push
add
inc
arpl
push
lcall
xchg
xchg
lods
sbb
lcall
dec
xlat
popa
xchg
xor
push
xchg
shlb
out
xchg
push
mov
and
lret
push
adcl
hlt
sub
rorl
test
xchg
mov
xchg
clts
mov
dec
imulb
adc
inc
adc
inc
and
add
je
icebp
and
pop
mov
out
addb
mov
jecxz
out
repz
andl
mov
inc
movsl
shll
movsl
or
dec
incb
jecxz
fistps
push
xor
ror
jp
pushf
inc
jb
addb
dec
mov
xchg
adc
lret
mov
mov
push
or
or
inc
jg
outsl
dec
sarb
adc
daa
adc
mov
je
popa
mov
test
adc
into
push
inc
adc
add
pop
push
out
subb
stos
int3
or
in
jmp
mov
scas
xlat
outsl
jae
ja
mov
adc
cmp
adc
xlat
push
mov
pop
ljmp
shlb
mov
xor
clc
aad
das
les
add
jno
repz
pop
xchg
jle
mov
stos
js
inc
mov
pop
cld
or
es
stos
and
inc
bound
push
pushf
fistpl
mov
push
push
outsl
jp
xor
push
fs
mov
bound
or
cs
xorl
push
das
in
cmp
inc
daa
jmp
stos
or
add
jne
mov
dec
jae
jbe
sbb
into
cmp
repz
cwtl
mov
or
and
add
arpl
gs
mov
push
in
add
push
push
je
test
xchg
xor
dec
xor
sbb
and
adc
pop
jne
out
dec
repz
and
dec
adc
jmp
add
and
xchg
sub
jecxz
ret
lock
push
adc
icebp
enter
cmpsl
fs
call
pop
lods
jae
inc
out
mov
dec
dec
in
test
ret
int
inc
xor
aaa
imul
mov
cs
hlt
fidivrl
pop
xlat
arpl
push
and
mov
add
repz
mov
in
xor
les
push
rcll
push
sahf
adc
inc
xchg
jno
je
loope
aam
xor
or
stos
jb
bound
dec
in
xor
xchg
outsb
addb
xlat
bound
inc
adc
stos
loope
dec
pop
jns
push
add
inc
mov
cmp
dec
outsl
cld
jmp
cld
xor
mov
ja
push
in
mov
movsb
push
mov
shlb
cmp
repz
in
mov
cmp
ljmp
push
icebp
jno
fnsave
aas
jnp
enter
jne
mov
rcr
adc
mov
les
movsl
fiadds
xor
and
sbb
mov
or
xchg
in
push
add
jecxz
mov
out
jae
inc
add
xor
test
push
jae,pn
shrl
jle
mov
andb
dec
mov
ret
jecxz
xchg
hlt
inc
adc
call
and
push
in
mov
inc
addb
push
hlt
sbb
xor
out
fidivl
xor
inc
xor
scas
push
mov
adc
lret
test
je
push
push
outsb
push
cmpsb
jecxz
into
push
dec
mov
repz
adc
jle
roll
and
cli
movsb
pop
dec
pop
adc
cmpsl
shlb
data16
push
xor
das
loope
and
push
inc
mov
jle
jo
add
fstl
ds
inc
daa
arpl
jb
cmp
cs
jns
dec
xor
jge
adc
lcall
fs
and
adc
mov
jno
mov
lcall
mov
imul
je
shlb
xor
mov
mov
inc
outsb
xor
je
inc
imul
add
loope
xchg
push
xchg
decb
xlat
cmp
pop
adc
testb
or
xorl
mov
sub
pop
cmc
mov
push
mov
push
je
jle
jecxz
push
and
xor
sub
pop
sub
repz
movsb
mov
dec
clc
out
and
xlat
int
sub
xor
fs
pop
popa
popa
shl
ja
icebp
inc
data16
aam
mov
rcl
pushf
imul
test
push
sub
test
rcrl
iret
rclb
test
ret
inc
inc
loope
xor
jle
fisubrl
loope
push
rol
and
adc
xor
addr16
pusha
shrl
rcr
cmpsl
xor
adc
out
inc
shl
push
mov
and
dec
clc
add
pop
xlat
cmpsb
inc
dec
les
cmp
mov
jge
inc
es
mov
rorl
mov
push
push
in
fiadds
loop
loope
jecxz
in
popa
xor
jo
xchg
mov
mov
mov
inc
or
inc
addl
pop
std
dec
add
adc
sub
push
xlat
les
adc
mov
lods
mov
jecxz
out
xlat
and
repz
lret
push
mov
test
pop
sub
and
imul
int3
push
mov
loopne
das
test
and
lret
pop
jae
movsl
xor
push
arpl
shl
fs
xlat
inc
dec
add
xor
cmp
or
add
jae
loop
xorb
ret
stos
pop
add
out
and
mull
jae
int3
mov
pop
sbb
out
gs
jno
in
xchg
mul
xor
icebp
cs
bound
cmp
out
push
jno
in
adcl
stos
loope
push
out
add
xor
cmp
push
add
mov
out
fisubl
xchg
out
arpl
loope
mov
push
cmp
inc
call
push
xchg
mov
shlb
pop
mov
dec
div
xor
and
shll
push
shlb
cmc
popa
push
jno,pn
mov
push
ret
and
sub
add
push
mov
les
loopne
call
popa
adc
rorl
stc
arpl
ds
xchg
inc
xchg
cld
cmpsb
cmp
dec
adc
ss
adcl
xchg
loope
imul
das
and
mov
mov
adc
mov
ret
cmp
cwtl
rcll
jmp
sub
outsb
push
jne
add
outsl
les
andl
sub
stos
add
outsb
popa
add
adc
and
ret
sub
and
add
mov
cs
mov
inc
adc
or
push
mov
jno
test
adc
push
imul
test
cmp
mov
and
ficomps
jle
pop
cmpb
js
mov
out
rclb
inc
xchg
aam
pop
add
mov
sub
add
jecxz
bound
xor
and
xor
js
inc
adc
mov
ret
and
hlt
add
push
push
adc
push
testl
mov
xchg
insb
test
ds
xor
xor
pop
and
popf
mov
or
xchg
cmpb
inc
ds
movsb
icebp
inc
mov
adc
ficomps
andl
jns
add
adcl
mov
jp
mov
pop
xchg
mov
sub
dec
xchg
xchg
xor
notl
push
loope
mov
mov
sbbl
dec
ja
je
ds
outsl
rcl
sbb
les
cmp
adc
jge
sub
out
adc
jle
add
popa
rorl
jne
xor
mov
fwait
mov
inc
cmc
pop
inc
cmc
iret
cs
cmpsl
cwtl
adc
xor
ret
icebp
dec
cmp
packuswb
inc
jmp
lcall
cmpsl
repz
xchg
pop
inc
add
in
push
and
or
fidivrl
outsb
adc
jecxz
adc
lods
andb
adc
pop
sbb
adc
imul
adc
inc
addr16
or
add
fisubl
xor
sub
shrl
mov
js
dec
cmp
mov
sub
add
push
pop
les
xlat
fidivrl
push
mov
push
sbb
cs
addb
sbb
mov
movsl
sub
inc
jbe
fadds
lea
les
jno
stos
into
mov
loope
and
fwait
ja
aam
mov
arpl
outsb
inc
adc
shlb
push
inc
and
popa
push
adc
or
fadds
shl
dec
inc
loope
fs
jmp
xchg
cmpsb
xor
int
inc
push
je
xor
bound
pop
xchg
pop
idivl
mov
shlb
and
push
inc
mov
push
fwait
xchg
mov
mov
mov
repz
sahf
mov
addl
mov
xor
adc
daa
popf
test
xchg
loopne
mov
jmp
adc
inc
xchg
inc
push
inc
popa
cs
dec
cmc
push
jno
repz
cmpl
icebp
xor
adc
xor
ljmp
and
and
dec
mov
orb
sub
fistl
shlb
mov
inc
adc
adc
xor
jge
jecxz
pop
mov
into
popa
sub
adc
jb
loope
inc
repz
push
adc
testl
outsb
mov
and
jmp
scas
popa
push
out
or
sti
cmpsl
addl
mov
lds
loope
mov
popa
repz
daa
mov
in
mov
mov
shl
and
inc
and
push
lods
ret
mov
out
jae
mov
loope
ss
xchg
xor
arpl
test
inc
add
rolb
mov
sub
dec
mov
jecxz
ret
pushf
ror
div
fiadds
mov
dec
push
fcompl
mov
add
jo
hlt
dec
stos
ret
out
inc
inc
add
inc
mov
loope
mov
fwait
mov
or
xor
popa
ret
je
cld
or
outsl
mov
sub
rorl
shll
mov
jg
ficoms
push
shl
repz
pop
mov
xorl
xchg
push
mov
add
loopne
xorl
add
insl
mov
out
je
adc
xor
ret
cmc
sub
popa
jo
mov
jo
mov
inc
and
jecxz
cmpsb
jb
pushf
mov
add
stos
xor
fs
adc
add
xlat
int
adc
jns
pop
xchg
jae
outsb
je
and
inc
and
inc
mov
inc
std
outsb
xorb
je
out
jae
and
push
cs
mov
dec
xor
ficoml
add
jge,pn
frstor
xorl
jns
loope
inc
test
lret
pop
and
cmp
push
out
dec
roll
xor
add
lret
repz
mov
out
mov
jmp
mov
les
push
adc
bound
aaa
xchg
mov
out
repz
and
push
shll
into
mov
push
loop
push
mov
arpl
and
adcb
test
push
fnsave
xchg
neg
cmp
popa
ja
addr16
roll
jo
push
add
push
cmp
mov
mov
adc
cwtl
cmp
fidivrs
and
add
mov
cmp
je
aam
sbb
or
and
dec
ret
mov
sbb
jae
inc
jecxz
jno
jb
or
out
mov
push
rol
mov
mov
inc
js
dec
addr16
add
mull
jb
cmp
cmp
ficoml
sbb
mov
push
ljmp
xor
cli
inc
inc
and
fdivrs
xor
jmp
xchg
stos
add
push
sahf
push
outsl
add
xor
mov
jge
xchg
jns
jle
mov
mov
insl
fistpl
je
stos
mov
loopne
pop
or
popa
mov
mov
and
js
or
in
sahf
inc
lock
jle
mov
mov
mov
or
xor
jl
imull
ljmp
dec
mov
mov
not
outsl
adc
jb
inc
icebp
jmp
pop
push
mov
inc
stos
push
inc
inc
fcompl
stos
push
shrl
dec
shr
sahf
push
les
ret
adc
fsubp
or
mov
pop
dec
push
out
adc
jecxz
sub
mov
adc
dec
pop
std
jbe
ret
sbb
xor
imul
shrb
les
out
roll
into
pop
aam
push
jno
xor
xor
jae
cli
bound
mov
inc
sbb
inc
stc
popa
les
adc
pop
fisttpll
add
adc
push
arpl
push
les
pop
mov
les
sbb
jo
adc
into
dec
aam
pop
in
mov
sti
sbb
ljmp
or
add
js
ljmp
mov
stos
mov
arpl
inc
incb
jae
loope
jnp
adc
mov
pop
out
mov
das
mul
cld
inc
cs
xchg
outsb
push
loop
loope
pushf
xchg
popa
inc
mov
sbb
ficoms
call
or
popa
add
adc
cmp
push
aas
bound
mov
not
cwtl
pop
inc
and
xchg
les
and
lea
jae
notl
add
dec
xchg
leave
popa
je
arpl
test
test
jo
xchg
xlat
cld
sub
out
mov
mov
les
fistpl
and
rorl
ror
ss
sbb
loope
dec
roll
cs
cs
inc
fcmovnb
push
fs
inc
add
cmp
mov
adc
push
mov
dec
mov
xor
and
mov
adc
adc
and
cmpsb
inc
call
mov
pop
rcll
xor
insl
arpl
mov
or
bound
sbb
sbb
jle
push
jbe
xchg
xchg
jae
mov
les
in
test
dec
fs
sbb
push
push
fildl
xor
adcl
pop
cmp
mov
fstl
cmc
inc
and
jb
call
mov
jae
jne
je
and
mov
or
scas
mov
testl
push
pop
push
sarl
mov
xor
xchg
loopne
jl
mov
jae
bound
outsb
testl
cwtl
cmpsl
mov
xchg
jne
rclb
sbb
shll
inc
and
mov
clc
shll
mov
pop
roll
sti
jg
push
cmp
sub
daa
add
fs
and
dec
inc
mov
dec
lahf
movsl
push
dec
push
fs
enter
lret
inc
addl
mov
add
out
imul
mov
push
jecxz
mov
xor
fwait
dec
and
dec
clc
mov
jle
adc
roll
push
jbe
addr16
les
cmp
pop
roll
test
sbb
jmp
pop
outsb
ja
add
xor
pop
mov
adc
sub
fidivl
dec
addb
dec
xor
mov
mov
sbb
jmp
adc
ds
mov
clc
inc
add
lea
jecxz
shl
je
je
cli
test
iret
pushf
test
dec
mov
out
pop
adcl
std
popa
pop
inc
repz
loope
push
ljmp
mov
push
inc
shll
loop
inc
inc
and
pop
push
out
sti
adcl
fcmovnb
inc
mov
mov
repz
push
outsb
fbld
fs
adc
call
ds
out
loope
inc
inc
ret
push
adc
dec
out
jo
jae
mov
shll
mov
jbe
das
les
push
roll
or
in
jno
mov
ds
add
call
pop
les
bound
push
ret
lcall
dec
stc
xchg
ljmp
inc
adc
and
add
cmp
stos
xchg
pop
into
arpl
cs
jo
daa
jb
out
call
inc
dec
pop
repz
cwtl
stc
push
adc
cmc
xchg
add
xor
in
jecxz
mov
push
orl
out
adcl
jns
icebp
push
and
pop
jb
jge
dec
adc
push
fbstp
test
push
sub
testl
test
push
push
mov
orl
inc
aam
and
les
adc
mov
jnp
pop
out
lret
pop
push
lret
adc
inc
out
stos
popa
ds
lods
adc
mov
daa
repz
mov
xor
add
inc
jae
fisubl
loop
jb
jl
inc
sbb
stos
xchg
jno
into
lds
clc
add
sub
imul
andl
mov
xor
arpl
push
and
shrl
sbb
xor
mov
inc
roll
fiadds
pop
loope
pop
bound
sahf
push
jae
and
jl
xchg
rorl
mov
xlat
call
je
ret
ret
icebp
mov
cmp
xchg
sbb
in
mov
and
push
js
jecxz
cmp
fcmovu
insl
roll
fs
adc
xor
mov
cmc
push
xor
aas
roll
push
imul
ljmp
cmpsb
xor
sub
pop
and
xor
jmp
mov
outsl
lock
dec
jbe,pt
sub
popa
cmpsl
loop
lods
sub
inc
je
in
inc
xor
rcr
dec
adc
and
add
jle
loope
shll
pop
adc
jp
shlb
jne
ficoms
subl
cs
inc
xor
popa
repz
shrl
mov
xchg
sub
inc
cld
push
les
jno
jle
roll
mov
ds
dec
add
in
cwtl
dec
ret
adc
loop
mov
push
out
sbb
in
daa
or
push
mov
out
adc
ret
movb
pop
je
and
jns
aad
fs
and
push
xchg
add
mov
fs
or
popa
adc
mov
and
xchg
add
mov
push
jno
and
shlb
ds
add
jo
cmp
arpl
outsl
repz
push
icebp
fdivs
jno
inc
ret
and
in
push
imul
jbe
pop
mov
mov
dec
mov
outsl
stos
das
arpl
inc
icebp
or
test
decb
push
rep
push
icebp
pop
add
mov
xchg
mov
outsb
data16
jb
mov
out
rep
xor
loope
fwait
cs
divl
xor
cli
lock
pop
xchg
mov
outsl
repz
adc
pop
and
mov
loope
fcomps
fwait
inc
adc
movsb
stc
mov
std
sbbl
sarl
adc
fbld
inc
ret
xchg
xchg
in
mov
jae
jno
push
adc
inc
mov
pop
popa
and
shrl
lret
addl
lods
fs
adc
dec
push
jno
stos
rclb
push
push
push
outsb
stos
push
xchg
out
pusha
pop
imul
mov
sub
rol
sbbb
arpl
lret
add
mov
cmp
push
rclb
mov
lcall
sarl
sub
sbb
test
aam
addl
loop
add
inc
xchg
popa
jae
jle
ret
xorl
stos
shlb
push
or
xor
andb
and
jge
mov
mov
rol
mov
ja
sbb
fbld
outsb
mov
loope
sbb
data16
mov
test
add
icebp
loopne
sbbb
mov
push
stos
inc
gs
jge
ret
loopne
jle
aam
orl
and
jp
jecxz
add
jg
dec
mov
rclb
rcll
push
into
xchg
inc
xor
in
rol
adc
mov
pop
xor
dec
pop
mov
loope
mov
xor
ret
lcall
adc
je
cmp
addr16
and
into
sahf
jle
test
shll
mov
mov
push
call
mov
leave
and
into
repnz
adc
rcrb
call
les
mov
push
loope
add
loope
or
xchg
icebp
mov
add
jecxz
shll
jno
je
xor
loopne
bound
ss
or
mov
and
cli
enter
mov
and
xor
sub
repz
inc
add
xchg
xor
fsubrs
xlat
mov
xor
gs
xchg
repz
sub
mov
rorl
xchg
and
in
mov
add
pop
arpl
call
fs
in
jns
out
xor
and
jbe
xor
dec
stc
jl
cmp
ret
xchg
push
out
cmc
popa
inc
add
clts
test
cmp
in
adc
cmp
mov
dec
xor
loope
dec
mov
arpl
rorb
mov
dec
shll
test
lock
rol
pop
or
push
jnp
pop
scas
ljmp
push
loop
inc
rolb
pop
dec
scas
jl
xor
push
add
cmpsl
push
repnz
adc
xor
adc
jmp
lret
stos
xor
mov
jp
jecxz
xor
icebp
xlat
mov
repz
mov
cli
xchg
gs
idivl
jns
ret
xchg
out
xor
rol
out
jg
inc
inc
mov
and
add
sub
aam
push
xchg
cmc
xlat
xchg
les
adc
js
in
jge
lret
jecxz
push
inc
xchg
push
mov
mov
outsb
andb
mov
sbb
mov
cmpsb
push
mov
out
adc
pop
xchg
xchg
shll
mov
mov
cmp
pop
test
mov
mov
mov
xor
jns,pn
scas
mov
jb
mov
push
repz
and
ficoms
lret
dec
in
jbe
inc
jo
clc
adc
and
mov
xor
xchg
adc
xor
mov
sub
mov
push
push
mov
popa
jne
mov
xor
jecxz
dec
mov
and
popa
outsb
xchg
jle
dec
and
lea
add
add
xchg
dec
jno
roll
sub
mov
adc
xchg
xlat
xor
push
sbb
mov
cmp
stos
add
gs
sub
ds
jne
push
leave
or
adc
mov
sub
mov
inc
les
inc
imul
jb
and
push
out
movsl
andl
adc
cmpl
movsb
cwtl
and
sbb
inc
dec
icebp
testl
mov
adc
xchg
sub
xor
mov
and
std
aas
push
bound
ret
loop
xor
shrl
xchg
push
popa
in
pop
jo
ret
and
call
popf
mull
mov
inc
xor
mov
mov
adc
pop
in
and
inc
test
or
add
dec
push
pop
and
cmpsl
mov
pop
mov
mov
mov
xlat
roll
push
out
jno
xchg
add
mov
movsl
xor
cmp
jbe
fdivl
add
pop
and
fcom
jne
popl
pop
adc
rcll
fadd
les
pop
das
subb
stc
stos
cmpl
jb
outsl
into
in
push
not
mov
mov
es
sub
lcall
mov
xor
icebp
mov
adc
je
sbb
frstor
dec
popa
ror
or
cmp
pusha
iret
clc
add
les
scas
xchg
and
cwtl
out
inc
dec
adcl
les
adc
mov
roll
adc
out
loope
mov
push
aaa
xchg
popa
xor
lock
out
adc
add
jecxz
jmp
mov
xor
arpl
clc
out
lahf
jmp
insb
out
xchg
cmc
and
push
xor
shrl
cmp
xchg
adc
bound
mov
ror
xchg
jno
scas
mov
xorb
out
dec
out
cmpl
mov
push
mov
push
push
adc
gs
movsl
fs
das
and
and
shr
mov
shll
push
push
mov
inc
and
jecxz
adc
jnp
andl
inc
shll
arpl
lock
out
mov
mov
jo
out
imul
sub
insl
jmp
mov
inc
xchg
lea
addr16
mov
negb
jne
je
inc
imul
mov
mov
adc
test
mov
xchg
inc
clc
xchg
push
jg
shll
insb
call
les
xchg
jno
jae
jle
xor
inc
mov
test
dec
pop
xor
inc
ds
popa
and
adc
mov
adc
mov
pop
push
outsb
jbe
inc
mov
sbb
xchg
shl
jno
jb
shl
pushf
andl
inc
push
pop
sarl
dec
js
pop
out
or
push
sarb
bound
fadds
mov
ret
ret
outsb
or
jle
data16
sarl
mov
cs
adc
add
rcll
adc
adc
inc
ret
push
idiv
arpl
repz
xchg
repz
gs
lahf
inc
and
ljmp
ss
ja
icebp
and
mov
shlb
xor
adc
mov
push
dec
push
pop
out
pop
push
insl
pop
cltd
pop
aam
inc
xor
dec
push
repz
int
xchg
jl
test
xchg
cmp
mov
shlb
dec
addl
adc
test
insb
jns
cli
rcrb
outsb
fsubrs
mov
and
sub
adc
loope
mov
in
lock
lret
mull
push
les
xlat
lods
icebp
adc
xchg
popa
into
into
js
cmpl
cmp
nop
adc
rcl
sbb
repz
popa
sbb
dec
out
sbb
xor
xchg
or
jmp
cmpsb
sarl
imul
insb
inc
and
push
ret
andb
push
jmp
add
push
cwtl
rclb
inc
mov
bound
cmp
and
jge
mov
shl
lcall
xor
popa
les
out
ficompl
inc
aam
inc
pop
jno
pop
in
in
push
lock
inc
add
shll
push
mov
dec
push
inc
xchg
add
repz
ss
rorb
and
out
dec
sub
push
icebp
cmpsb
hlt
out
jae
push
shrb
into
adc
push
push
inc
add
rorb
repz
add
inc
push
xor
inc
and
xchg
or
jecxz
mov
les
in
sbb
arpl
pop
outsb
push
push
jno
lahf
inc
push
lea
out
pop
popa
fmul
addr16
into
push
jp
mov
push
outsb
and
jecxz
xlat
lret
cmp
fadds
fwait
pop
sbb
clc
pop
test
mov
pop
rcll
xchg
sti
adc
bound
sbbl
aad
mov
adc
push
mov
bound
popa
add
and
push
dec
imul
repz
bound
call
xchg
les
outsl
je
daa
je
add
mov
inc
outsl
lock
xorl
and
jge
repz
mov
xor
dec
out
rolb
nop
je
mov
test
les
jno
sub
lcall
mov
out
rcll
inc
and
cmc
in
cmp
jecxz,pn
pop
sub
pop
xor
loop
and
mov
arpl
bound
or
push
faddp
mov
notl
pop
loop
fs
lock
pop
jecxz
inc
adc
inc
dec
hlt
adc
mov
adc
roll
popa
cwtl
and
adcb
movsb
imul
pop
push
nop
mov
cmp
xor
mov
jbe
inc
stc
out
xchg
shll
inc
divl
dec
ds
mov
jge
das
xor
jns
xchg
mov
out
inc
mov
adc
cld
adc
jo
shrl
add
cmp
bound
pop
into
push
shll
sti
or
mov
data16
popa
add
loope
xor
pop
inc
inc
xchg
arpl
mov
mov
sub
js
dec
sar
je
adcl
ret
or
mov
xor
mov
sbb
jg
fcompl
adcl
out
push
push
add
into
shll
pop
out
fs
stos
xor
jae
add
in
mov
jle
and
sbb
jg
xchg
pop
mov
cs
loope
push
pop
daa
shrb
cmpsl
cmp
incl
add
adc
push
imul
pop
repz
mov
loope
loope
adc
mov
rcr
idivb
jb
dec
lds
or
fisubl
push
repnz
add
leave
adc
xor
out
jb
xlat
addl
cmp
jns
mov
jae
pop
or
dec
int3
out
shll
cmpsb
imul
mov
fsubl
cmp
rorl
dec
test
push
cmpsl
mov
outsl
iret
clc
and
nop
xor
pop
or
je
mov
dec
add
and
mov
loopne
flds
push
out
xchg
mov
jmp
andl
in
cmpsb
cmp
push
div
mov
inc
mov
adc
mov
push
fwait
out
inc
push
jo
push
push
mov
bound
cmp
push
cmp
es
sti
repz
bound
rcrl
and
mov
jmp
cs
je
add
xor
roll
push
sbb
sbb
mov
pop
mov
orl
xchg
fisubrs
lcall
and
push
loope
add
mov
aam
push
xor
outsb
pop
add
xchg
fdivs
clc
sbb
sbb
sti
out
or
out
rorl
icebp
push
test
lock
inc
and
cwtl
pop
icebp
shl
sbbl
xchg
add
div
mov
adc
jmp
fs
jb
shll
xor
lds
push
popf
shlb
imulb
pop
out
xchg
and
pop
sbb
mov
push
pop
push
add
xlat
dec
xchg
mov
pop
testl
ret
adcb
out
fst
adc
ds
adc
imul
adcl
aam
xor
mov
arpl
inc
daa
outsb
push
insb
add
xor
je
rcll
mov
xchg
add
test
and
push
cmc
dec
repz
ficoml
mov
les
into
xchg
clc
adc
popa
ret
icebp
sub
xor
xor
aas
adc
sbb
adc
cmp
mov
add
sub
mov
fldt
mov
inc
fwait
push
je
cli
push
dec
fisubrl
jae
push
pop
shll
loope
push
mov
ds
cmpsl
xchg
inc
push
andb
das
stos
shll
pop
push
inc
dec
popa
bound
sbb
mov
adc
push
dec
mov
and
jecxz
loope
adc
adc
ljmp
and
or
cmpsl
mov
sub
clc
fs
inc
jb
add
xor
ljmp
popa
push
pop
ds
jno
add
sbb
inc
jb
andl
mov
mov
mov
xchg
in
adc
xchg
cmp
cmc
and
into
in
es
add
in
aam
add
sti
int3
in
dec
push
loope
call
fidivrl
pop
fidivrs
shll
add
push
push
addl
inc
in
mov
shl
mov
and
cs
jae
or
inc
mov
loope
sbb
mov
jecxz
out
shl
roll
xor
mov
test
test
push
cwtl
jno
dec
pop
and
or
and
xlat
inc
pop
xchg
divl
adc
test
push
jb
and
addr16
popa
repz
xor
push
jle
in
mov
int
pusha
daa
into
adc
mov
push
outsb
xor
jle
icebp
push
aaa
push
psrlq
cmpl
xlat
rol
jecxz
mov
or
mov
stos
stos
adc
inc
or
inc
movsl
loopne
xor
out
inc
popa
adc
mov
sub
xlat
rcrb
inc
sbb
rcll
xor
cmp
xor
test
push
maskmovq
imull
pop
xorb
insb
pop
repnz
mov
mov
inc
and
xchg
and
push
mov
xor
xor
js
mov
mov
imul
add
mov
xor
fiaddl
out
xchg
mov
or
inc
aas
bound
jl
sub
les
jns
mov
jmp
mov
ret
mov
xor
or
or
xor
data16
adc
mov
mov
in
shl
adcl
cmpsl
pop
clc
arpl
cmpsb
cmp
push
rcll
hlt
and
out
outsl
sub
inc
repz
les
sbb
adc
add
cmc
je
mov
roll
adc
icebp
hlt
icebp
inc
cs
pop
adc
pop
idivl
shll
shll
xor
push
or
xor
call
sahf
xorb
jb
bound
or
ljmp
ret
rorl
les
mov
adc
divl
adc
cs
jmp
mov
and
jbe,pn
bound
inc
mov
rorb
shlb
push
jo
lcall
test
jb
and
inc
push
into
add
popa
cmpsl
and
in
fistpll
push
shrl
jns
aaa
out
jnp
inc
cmp
mov
cli
roll
sbb
lds
addr16
jb
xor
cmpsb
sahf
inc
mov
sar
dec
clc
ljmp
mov
out
cmp
inc
xorl
xorl
pop
or
js
and
jmp
xorl
js
mov
or
loope
xchg
xchg
xlat
mov
jge
xor
out
fdiv
out
inc
js
mov
mov
mov
xor
outsb
xor
test
inc
shlb
mov
dec
cld
scas
les
jmp
pop
and
movsl
add
mov
dec
repz
call
iret
movsl
into
xchg
push
fdivs
ljmp
es
mov
inc
mov
adc
shlb
and
add
or
fs
popf
sub
xor
stos
bound
and
xchg
mov
push
push
push
in
xlat
sbb
mov
cmp
cmc
xorb
xlat
mov
adc
push
scas
je
jmp
cs
inc
stc
jmp
push
shll
xor
mov
loope
aam
add
inc
shrl
arpl
adc
mov
jg
inc
sbb
mov
and
popf
jge
mov
add
xchg
and
fadds
imul
sbb
icebp
or
xlat
push
push
xchg
fdivl
outsb
mov
decb
data16
roll
jae
sti
xlat
mov
mov
loop
shll
inc
add
mov
in
cli
mov
dec
jecxz,pt
loope
push
xchg
test
stc
fldt
cmp
lods
je
adc
insb
subb
mov
push
call
add
xor
arpl
addb
iret
xlat
ss
adc
loop
je
in
pop
icebp
sub
mov
adc
shlb
sub
out
jns
inc
ljmp
mov
adc
jle
out
popa
pushf
mov
fistpl
mov
popa
outsb
mull
test
mov
cwtl
inc
xor
push
adc
fisubl
jle
pop
inc
scas
bound
lods
jecxz
xchg
adc
fs
insl
and
xor
out
dec
mov
xor
jae
adc
cmc
and
mov
xor
add
divl
ret
adc
mov
push
out
jle
and
rcll
push
lods
adcl
xlat
push
stc
mov
es
xor
sarl
jnp
aas
jmp
and
sarl
cs
jecxz
mov
scas
push
dec
lds
pop
and
xor
jmp
push
sbb
push
pushf
dec
fcmovbe
nop
xchg
popa
testl
out
and
jo
dec
adc
fcoml
add
xor
js
mov
and
out
push
into
rol
andb
ljmp
jae
or
cld
add
cmp
icebp
je
push
or
insl
repz
shr
popa
addl
js
and
lcall
inc
or
push
insb
jne
inc
xor
fnsave
sti
mov
loope
inc
inc
or
mov
into
ljmp
adc
mov
ja
rclb
mov
and
jae
push
mov
push
and
inc
xlat
les
shlb
pop
jecxz
push
add
xor
mov
into
or
les
ds
push
out
cli
push
xor
xlat
inc
add
js
adc
fiaddl
js
xlat
add
mov
bound
ds
mov
inc
inc
jne
push
out
loope
adc
jb
cwtl
push
arpl
imul
jle
adc
inc
sarl
daa
loope
not
jecxz
pop
push
xor
pop
mov
popa
inc
adc
shll
shrl
shlb
stos
inc
popa
push
mov
and
adc
bound
pop
mov
in
cltd
movsl
and
adc
icebp
xor
push
out
inc
push
mov
loope
mov
popa
and
scas
outsb
daa
aam
or
inc
push
cli
or
sub
push
pop
mov
shll
or
cli
outsb
push
aas
xor
push
out
push
sbb
out
adc
inc
inc
out
cmc
in
ss
xor
dec
xchg
daa
rorl
aam
inc
xlat
cmp
into
mov
lcall
dec
jns
pop
sahf
adc
adc
push
lcall
inc
push
xchg
mov
sub
in
and
les
rcll
sub
pop
bound
loope
and
add
xlat
cs
push
pop
mov
xchg
add
xor
push
push
xchg
mov
xor
push
jge
adc
and
xor
enter
dec
rcll
je
mulb
xor
sbb
test
and
inc
orl
rclb
add
adcl
imul
daa
inc
push
push
ret
mov
loop
shrl
ret
popa
outsb
daa
xchg
adc
cmp
fs
adc
icebp
bound
cmp
pop
and
xorb
jno
mov
scas
imul
imul
popa
xorb
in
xchg
addl
notl
mov
xor
and
mov
shl
in
xchg
ret
inc
push
xlat
jb
shll
add
je
pop
andb
xchg
cmp
or
call
adc
arpl
xlat
rcll
daa
les
cmc
popa
add
bnd
outsl
cmpl
push
jecxz
sahf
movsl
loope
rol
sbbl
push
xchg
add
rol
imull
mov
mov
mov
shr
lret
fwait
jmp
popl
cmpb
out
add
repz
jle
add
and
scas
jno
sti
push
mov
rolb
inc
ret
insl
pop
rep
es
repnz
pop
je
pop
cs
rep
or
inc
mov
repz
fdivrl
push
and
incb
outsb
aaa
cltd
lods
inc
leave
xor
xorl
push
xor
jle
adc
sub
cmpsl
push
cmp
mov
nop
push
xlat
mov
mov
std
cmc
outsb
sub
add
mov
inc
adc
dec
cmp
popa
jle
out
cmp
bound
mov
icebp
and
aam
je
mov
push
ret
add
push
and
fcomp
push
sub
jge
mov
dec
dec
and
adc
adc
adcl
lcall
sbb
and
testl
jp
shr
icebp
popa
push
jecxz
ljmp
in
sahf
popa
rol
mov
mull
in
inc
and
push
mov
rorl
stc
outsl
into
call
shrb
push
adc
arpl
imul
jno
addl
mov
add
daa
xchg
sbb
fisubs
adc
dec
fcomp
aam
aam
push
popa
xor
add
je
clc
adcb
test
mov
mov
mov
xlat
push
cmp
push
movsl
xor
les
pop
call
pop
neg
mov
inc
jle
lahf
jecxz
xor
inc
jle
test
jae
inc
into
dec
push
loope,pn
shll
sub
xlat
loop
adc
and
mov
pop
jns
into
mov
xorb
mov
ds
icebp
out
sbb
aas
mov
sarb
push
dec
popa
shl
mov
xor
push
adc
mov
outsb
and
or
sub
xchg
out
inc
jecxz
and
jo
mov
ret
cld
mov
cs
je
push
mov
xlat
mov
int3
mov
sub
fdivrp
and
leave
loope
rclb
sbb
xchg
jb
and
inc
mov
or
dec
and
loop
and
mov
adc
dec
xor
mov
inc
lcall
push
and
shl
mov
out
fidivrs
inc
rcll
scas
cmc
xorl
pop
mov
ss
int
ret
out
inc
xchg
ljmp
popa
dec
push
arpl
adc
xlat
fidivrl
mov
loope
inc
xor
cmp
xchg
arpl
cmpl
dec
movb
jle
and
jle
inc
pop
frstor
add
sub
mov
and
lea
adc
aam
add
add
popa
aam
add
popa
push
hlt
mov
pop
jo
out
add
mov
push
push
dec
or
popf
inc
xchg
fdivrs
or
jmp
mov
inc
ret
icebp
fs
fcoml
test
jb
les
add
xchg
out
mov
cmc
gs
or
jae
jno
rcll
cmpsb
lods
pop
jmp
js
bound
sub
inc
xchg
push
jne
push
das
xlat
jmp
mov
rcrl
shlb
sar
bound
xlat
addr16
jecxz
mov
loope
mov
xchg
add
je
into
mov
decl
mov
arpl
pop
inc
and
out
xlat
dec
inc
add
ljmp
mov
adc
xor
dec
in
mov
push
jne
add
rcll
fstpt
sub
dec
push
mov
adc
call
jae
push
push
call
mov
ret
add
data16
cmc
add
add
subb
fmull
pushf
adc
outsb
in
cli
cmc
inc
xor
mov
daa
sub
and
push
adc
and
mov
pop
jge
inc
sub
popf
ret
xor
push
outsb
push
mov
ljmp
xor
cs
and
dec
mov
push
arpl
add
inc
and
fsts
inc
loopne
inc
insb
jbe
in
cmc
lahf
sbb
mov
jle
cmp
dec
jns
mov
and
push
cld
adc
cmp
jecxz
sub
ds
ret
iret
adc
sbb
dec
in
repz
addl
push
addb
cmp
into
mov
jno
mov
jnp
push
and
fildl
and
cs
daa
inc
les
popl
sahf
enter
inc
out
cs
dec
xor
inc
icebp
in
fistl
in
and
mov
popf
pop
pop
js
inc
and
jecxz
dec
jae
xor
jbe
xchg
loope
push
xorl
out
add
jno
loop
xchg
bound
repz
icebp
mov
bound
pop
outsb
xchg
jno
in
mov
pop
mov
mov
dec
or
mov
push
aam
inc
and
adc
rcr
ret
in
dec
out
inc
push
les
test
adc
xorl
adc
mov
add
dec
and
out
andl
mov
ret
or
xchg
pop
fwait
mov
adc
mov
jle
mov
xchg
jge
push
mov
rcr
into
rcl
inc
push
xchg
mov
daa
mull
xchg
add
push
shll
fucomi
inc
shl
xor
dec
or
mov
cmp
push
jmp
xor
cmc
mov
and
and
adc
adc
mov
push
icebp
sti
cld
dec
andb
outsl
sub
xchg
mov
sub
mov
lock
jb
loope
dec
mov
dec
jbe
es
xchg
adc
add
and
mov
lds
xor
adc
jge
es
jbe
ja
insb
mov
sub
cwtl
mull
xor
mov
jmp
inc
ja
mov
mov
inc
outsb
push
subb
dec
popa
stos
push
jle
les
mov
repz
inc
xchg
adc
push
rcl
popa
or
mov
adc
pop
in
stos
popa
xor
xchg
push
jae
cmp
mov
scas
leave
cs
imul
and
dec
outsb
ret
xchg
scas
mov
es
inc
and
and
mov
push
xlat
push
mov
jge
xchg
clc
adc
js
xlat
push
and
stos
xor
or
sti
push
jb
jne
jae
jnp
mov
dec
dec
mov
rorl
xchg
xor
test
mov
pop
inc
mov
fidivl
orl
scas
ljmp
out
xchg
cmpsl
je
xchg
js
js
lgs
out
cmpsl
popa
adc
xchg
xchg
daa
pop
icebp
mov
aam
out
push
js
sub
xlat
cmpsl
or
into
cli
or
rcrl
subl
jecxz
in
xor
mov
lretw
into
mov
mov
inc
out
and
int
or
xor
mov
fisubs
inc
dec
mov
add
push
inc
in
pusha
xchg
out
outsl
inc
dec
iret
dec
push
push
shll
mov
cmpsl
dec
std
ror
mov
fstl
cmp
xlat
or
push
xchg
jecxz
sbb
and
movsb
xchg
xchg
pop
xor
jbe
sub
xor
les
mov
ds
iret
stos
xlat
js
push
push
pop
shlb
mov
stc
shl
aam
jle
jp
dec
out
imul
push
mov
push
popa
and
add
iret
sbb
inc
mov
mov
add
lea
push
xchg
inc
jno
rorl
dec
dec
push
in
orl
push
adc
pop
cmpsb
dec
shr
int3
dec
loopne
cmp
mov
shlb
push
add
pop
inc
fwait
xlat
ja
mov
mov
xor
push
dec
outsb
lock
xor
data16
push
bound
mov
icebp
frstor
xchg
out
xchg
je
dec
cs
add
aas
nop
push
sub
jb
dec
repnz
or
xlat
jecxz
pop
pop
push
rclb
clc
sbb
clc
adc
jle
mov
adc
cltd
xlat
mov
movsb
and
and
pop
xor
subb
add
fdiv
adc
sub
jge
stc
jle
and
sub
bound
fistl
call
push
adc
jnp
mov
dec
popa
and
mov
xor
jge
xchg
rcrl
fs
adc
pop
loop
mov
sbb
jnp
sub
inc
mov
push
mov
mov
or
push
cmpsb
lock
and
sub
shll
insl
push
ret
cwtl
popa
outsb
dec
cmp
je
mov
push
ds
iret
fidivl
pop
jnp
jl
jnp
out
dec
loop
xchg
sbbb
and
out
icebp
hlt
jge
add
inc
push
shll
jecxz
add
fsubp
pop
ror
loope
mov
movsb
rorl
out
call
pop
push
sbb
xchg
xlat
mov
fidivrl
jle
add
push
fcmovnb
push
lcall
out
dec
push
adc
les
mov
adc
aas
lock
push
mov
dec
in
jge
jl
adc
push
rclb
sub
and
xchg
out
cmpsl
xor
out
xor
mov
scas
fiadds
testl
mov
lock
adc
sahf
je
mov
test
repnz
dec
daa
jb
testl
scas
mov
and
mov
or
clc
sub
jns
add
stc
jge
fidivrl
and
mov
dec
imul
inc
outsb
out
lahf
clc
mov
scas
subb
fs
jle
mov
outsl
adc
xor
out
mov
mov
ret
inc
xchg
into
mov
jo
dec
fwait
loopne
push
mov
xor
sahf
jge
shlb
loope
cmp
shrl
in
test
mov
pushf
sbbb
xchg
shl
or
push
outsb
roll
inc
outsl
ljmp
adc
add
ljmp
out
adc
jecxz
mov
adc
lods
jo
xchg
les
outsb
shll
dec
shll
mov
cmc
adc
shlb
divb
popa
sub
mov
jecxz
mov
cmp
or
push
xchg
js
fs
xchg
scas
sub
adc
mov
xor
jp
jmp
roll
jmp
cwtl
out
sarb
jno
loope
push
add
out
jle
mov
divl
jo
adc
jmp
loop
out
xchg
inc
ret
push
jle
mov
nop
mov
into
icebp
fisttpl
aam
mov
inc
inc
mov
jno
mov
mov
mov
sbb
mov
jb
nop
aad
incb
notb
mov
lock
adcb
and
push
pushf
xor
push
testl
xor
inc
mov
xor
sbb
push
nopl
xor
repz
and
mull
popa
jo
add
in
cltd
pop
into
loopne
xlat
aas
mov
mov
into
pop
push
les
mov
out
mov
pushf
mov
adc
arpl
icebp
out
les
iret
lds
outsb
jmp
test
arpl
ficoms
adcl
subb
jb
out
mov
shll
mov
xlat
push
inc
loope
fistpll
mov
sub
test
fbld
out
jno,pn
fs
shll
call
adc
addl
jmp
loope
xlat
pop
xchg
addl
add
icebp
shrl
rol
mov
imul
lock
ficompl
aam
push
js
add
movsl
xchg
subl
mov
mov
frstor
mov
out
dec
dec
and
mov
dec
call
and
jecxz
inc
mov
sti
fsubs
ds
inc
ret
xor
cmp
and
je
out
arpl
push
loope
adc
pop
add
pcmpeqd
xor
icebp
push
loope
mov
or
adc
ret
mov
or
in
mov
cmp
or
adc
inc
dec
sbb
xor
cmp
mov
jae
ds
bound
dec
into
popa
dec
in
icebp
and
mov
push
add
shlb
mov
nop
je
fcmovnb
and
or
popf
and
rolb
sbb
cwtl
adc
jne
jecxz
cli
pop
mov
shlb
dec
inc
push
cmp
imul
das
inc
xchg
mov
inc
or
scas
pop
addr16
loop
and
xchg
lock
mov
sub
inc
xor
add
sarl
mov
dec
lds
sbb
mov
adc
mov
pop
dec
inc
lock
stos
test
cmp
bound
cmpsb
xorl
dec
mov
xor
orb
repnz
push
inc
xchg
into
jecxz
je
mov
loop
jne,pt
loope
pusha
sub
mov
xor
fs
std
icebp
push
cmpsl
arpl
xchg
adc
jns
pusha
pop
sbb
jle
jns
sti
push
dec
xchg
movsb
add
outsb
dec
push
add
dec
add
pop
xor
cmc
test
fisubs
bound
push
xor
and
and
mov
das
adc
popa
adc
loope
mov
add
fcmovu
pop
dec
pop
call
and
mov
enter
add
std
outsl
pop
je
adc
lods
push
push
adc
loope
push
add
mov
jae
mov
xlat
addl
fcoml
mov
xchg
enter
xor
test
adc
ljmp
mov
bound
popa
shlb
movsb
sub
jo
pop
outsb
pop
out
adc
xchg
adc
sbb
lods
push
and
add
inc
adc
pushl
ret
jo
jecxz
mov
sbb
iret
mov
shl
ret
les
and
repnz
subb
inc
rcrb
adc
xor
out
mov
scas
jne
sbb
push
mov
and
aam
push
jecxz
inc
mov
ret
xor
ds
or
hlt
xor
xchg
ret
imul
mov
xor
ljmp
xlat
jmp
jecxz
inc
and
inc
xchg
sub
mov
call
mov
adc
loop
cs
or
and
loop
bound
out
orl
add
or
cmp
inc
jb
cli
dec
lods
jle
jno
popa
adc
into
ds
mov
imul
shll
mov
mov
adc
dec
mov
rolb
test
dec
lret
ficompl
jecxz
push
mov
jl
xor
ret
xor
push
sbbb
icebp
out
into
jb
cs
xchg
and
ja
sub
xor
insl
push
lahf
cwtl
adc
jae
pop
lods
bound
scas
push
mov
push
shlb
add
fdiv
popa
adc
data16
jno
cwtl
fs
push
jo
xchg
in
loope
lret
loopne
xchg
jno
pop
sub
xchg
imul
les
out
push
jo
mov
xchg
push
aad
mov
and
arpl
shr
push
xor
cmpsb
sarl
in
jl
shlb
xchg
mov
mov
int3
add
divl
inc
inc
and
sub
lds
lock
lock
out
out
iret
mov
adc
sbb
jmp
fdivp
xor
ss
push
dec
mov
xor
lock
fdivs
imul
inc
xchg
inc
or
jno
sbb
pop
andl
add
es
adc
cmp
add
mov
fadd
popa
in
cmpl
xor
rcll
out
xchg
push
push
aas
inc
lods
cli
cmpsb
shrl
lock
inc
icebp
stos
mov
es
enter
push
xorl
les
notl
loope
jb
inc
jae
mov
fisubl
sbb
sub
mov
jo
push
icebp
outsb
xor
jae
lcall
out
inc
clc
out
mov
and
ret
test
in
sbb
mov
xchg
outsb
jbe
push
cmpsb
xor
mov
mov
jno
jb
repz
cmp
ret
cwtl
and
sub
add
movsl
into
mov
outsb
xchg
adc
and
sarl
lods
sub
sub
mov
add
mov
into
inc
ds
xlat
addl
ret
cmp
ljmp
mov
jb
inc
popa
ror
mov
je
dec
xor
inc
xchg
sbb
xor
sbb
dec
cmpb
and
mov
push
xchg
ljmp
mov
jnp
adc
mov
ret
out
mov
orb
dec
hlt
push
push
sub
add
addb
out
out
mov
pop
shll
in
into
outsb
mov
mov
push
repz
add
cmp
jne
and
mov
clc
je
add
das
push
pop
jb
adc
push
adcl
add
push
xor
mov
push
orb
std
and
xchg
repz
adc
push
out
shrl
je
test
mov
sub
inc
adc
mul
in
orl
popa
jmp
mov
inc
add
js
mov
jns
pop
je
testl
out
xor
dec
add
mov
test
imul
sarb
ds
inc
sub
cwtl
sti
or
jne
add
sbb
repz
adcb
push
movsl
xor
movsl
cs
das
out
aad
xchg
add
add
mov
jle
shrl
mov
jae
xchg
push
mov
jge
ds
pop
test
nop
sub
sbb
fldenv
and
sub
jmp
enter
int
shlb
int
test
shl
or
loope
ret
add
out
xchg
pop
loopne
pop
sub
ds
arpl
shll
adc
cmp
mov
pushf
xchg
icebp
push
popa
mov
mov
pop
sbb
out
cli
add
push
xor
ficoml
mov
sub
mov
push
push
xchg
pop
xlat
insl
dec
stos
pop
and
sub
out
sbb
cwtl
adc
jnp
add
bound
je
fs
fwait
mov
lds
call
adc
in
je
cmp
icebp
inc
call
jae
out
mov
xchg
lods
shll
mov
pop
loope,pn
adc
pop
pop
adc
sub
aam
outsb
pop
loope
lret
mov
pop
mov
xorl
sub
push
pop
dec
data16
aam
arpl
mov
ljmp
or
into
mov
add
arpl
push
loope
push
sbb
mov
mov
adc
xlat
jl
andl
xchg
jle
jns,pn
dec
add
pushf
and
loop
testl
mov
out
mov
inc
fsts
sub
out
jge
test
xlat
in
cmp
adcl
adc
ficoms
dec
sbb
push
out
push
mov
jno
daa
add
pop
add
push
push
adc
fwait
xchg
inc
cmp
shlb
lcall
dec
incl
dec
jl
push
pop
dec
pop
jb
es
ficoms
dec
cmpsl
mov
repnz
sub
hlt
xor
xor
and
jb
adc
mov
aas
and
jns
shll
xor
cmpsb
inc
push
fsubrs
and
xchg
or
rcrl
dec
scas
jle
ds
clc
inc
outsl
jo
sub
sysenter
imul
mov
or
mov
popa
mov
add
mov
ds
inc
jmp
inc
push
outsb
loope
adc
mov
lock
and
fsubrl
mov
mov
add
ficoml
mov
push
cmp
mov
inc
push
and
into
out
adc
push
call
dec
or
mov
inc
fcomi
adc
push
outsb
jbe
xchg
cmpsl
je
cmp
dec
sub
push
popa
inc
push
push
ret
andb
dec
ror
xchg
mov
mov
loope
inc
push
js
sub
cmp
xlat
push
adc
bound
test
mov
xor
inc
hlt
daa
pop
pop
jmp
ds
push
popa
testl
dec
pcmpeqb
popa
jno
jle
fsub
pushf
push
jbe
xor
push
js
and
cmp
jle
lods
cmp
ret
jo
add
add
andl
xor
xor
jge
xor
push
and
jle
pop
adc
jno
cmp
push
mov
into
ret
into
or
jp
int3
ficompl
mov
push
adcl
adc
rcl
xor
and
testl
jmp
push
dec
add
dec
dec
rcr
sbb
popa
adc
cmpsl
shl
add
insb
jno
ret
mov
inc
icebp
in
add
imul
cmp
sub
inc
shll
pop
loop
jno
aas
jnp
adc
shl
mov
add
mov
pop
scas
rcr
out
loope
loope
mov
and
into
inc
icebp
push
sbb
popa
xor
push
out
pminub
xor
mov
push
adc
mov
and
andb
icebp
mov
cmp
movsw
mov
ret
sub
int
outsb
les
xchg
and
sub
daa
mov
call
xchg
pop
insb
mov
pushf
ljmp
push
les
outsb
xchg
inc
addb
pop
xlat
scas
and
fsubs
adc
outsl
enter
cs
mov
mov
addl
hlt
jmp
and
mov
push
outsb
out
rcll
and
sbb
dec
dec
pusha
loop
mov
jo
push
ja,pt
xchg
shr
push
adc
lret
adc
xchg
notb
add
dec
in
xchg
inc
popa
mov
popa
popa
xchg
cmc
mov
sub
test
inc
mov
push
cs
cmp
js
stos
push
popa
add
push
andl
jp
sub
xlat
rcl
xor
test
mov
inc
add
insl
jle
add
fdivp
rol
jb
and
mov
adc
div
or
sbb
and
lret
push
ja
push
mov
xchg
cmc
xchg
notl
pushf
mov
pop
adc
inc
pushf
mov
cld
lahf
mov
ret
xor
push
loope
push
dec
xor
inc
out
aam
into
bound
xor
in
outsl
inc
inc
or
int3
icebp
xlat
mov
jo
and
inc
out
rcl
mov
addr16
cli
roll
into
xor
adc
jnp
rcll
popa
adc
repz
xchg
enter
das
and
xor
add
push
xchg
inc
subl
lret
cs
cmp
andb
outsb
loope
ret
cmp
repz
clc
mov
mov
and
jle
jno
repz
push
rcrb
cmpsb
jns
jle
mov
or
sub
push
cmp
jae
scas
repnz
mov
shll
repz
or
test
les
mov
jg
push
mov
ret
pop
xor
addb
adc
in
mov
mov
jle
in
jmp
mov
sbb
inc
fstl
cmp
or
mov
outsb
adc
mov
testb
andl
out
push
outsb
xor
loope
sub
jle
outsb
ret
add
data16
fs
jmp
pop
mov
add
push
mov
xchg
push
jae
js
icebp
mov
jb
aam
xor
nop
divb
js
dec
dec
jae
test
out
push
add
mov
adc
shl
pop
xchg
pop
jb
cltd
inc
loope
fwait
ds
fwait
call
push
outsb
mov
adc
mov
popa
pop
pop
jg
sbb
xchg
push
shr
and
xchg
push
bound
shll
adc
into
add
pop
inc
adc
push
cli
sarb
and
mov
add
mov
out
bound
mov
mov
cmp
mov
sub
sub
call
cwtl
mov
test
in
sub
sub
clc
ret
outsb
xchg
sbb
imul
mov
inc
ret
popa
and
cmpsb
mov
and
cmp
ds
in
sub
lock
push
adc
xor
leave
fiaddl
shrl
jne
pop
xor
jae
or
adc
mov
mul
mov
lret
push
mov
jle
sarl
adc
add
adc
stos
cs
and
ds
orl
out
dec
push
outsb
xlat
mov
scas
out
jg
jge
popa
sarl
daa
xorl
push
rcll
sub
push
add
mov
scas
push
mov
dec
jae
inc
decl
adc
and
lcall
call
stos
jns
call
in
jno
jae
pop
std
xchg
xor
sbb
iret
clc
inc
cmp
mov
rcl
cmpsl
xlat
add
popa
push
jne
xor
inc
sbb
out
out
fs
mov
sub
push
aas
inc
xor
ret
mov
addr16
pop
stos
push
jo
and
bound
pop
test
inc
xchg
push
mov
pop
mov
subl
or
ret
cmc
rcll
jecxz
xor
sbb
push
jno
fs
pushf
jbe
xor
arpl
xor
and
enter
aam
mov
inc
push
ds
cmp
stos
mov
add
pop
sub
pop
pop
std
je
ret
xchg
adc
cld
cmp
dec
or
xor
imul
mov
stos
xor
mov
push
pop
mov
xorl
xorl
xchg
xor
int3
js
out
push
and
or
mov
push
ss
shlb
cs
jecxz
xchg
and
adcl
xor
pop
loopne
lds
repnz
xchg
or
inc
ljmp
jl
dec
xor
push
xor
fyl2x
mov
push
aad
inc
and
dec
fsubs
shll
push
jecxz
popa
and
pop
rcrb
xchg
outsb
xchg
pop
inc
and
inc
xor
jle
fs
mov
and
adc
and
inc
and
push
cmp
add
out
inc
xchg
mov
mov
mov
add
call
les
mov
jae
lret
arpl
adc
xor
jecxz
loope
sub
inc
push
arpl
xlat
cwtl
mov
add
push
push
out
orl
scas
scas
xchg
js
cmc
shll
push
mov
sbb
mov
data16
jne
xlat
and
arpl
repnz
xchg
addr16
sbb
xor
add
fistl
adc
addb
xchg
add
jno
mov
push
mov
jle
js
imul
stos
mov
add
popa
shl
jbe
repnz
icebp
dec
je
push
dec
arpl
dec
mov
ret
in
inc
jle
les
test
and
lcall
insb
es
jno
scas
dec
bound
xchg
fisubl
in
repz
gs
outsb
roll
jo
in
pop
daa
jb
inc
adc
xor
push
lea
in
sbb
or
pop
and
dec
and
les
mov
push
loope
push
std
roll
popa
imul
adc
inc
sub
dec
inc
insb
data16
into
xchg
xor
int
jns
sub
jbe
mov
and
cs
and
add
inc
push
faddl
push
jbe
data16
mov
inc
mov
push
data16
push
ret
into
inc
xchg
popa
push
subb
imul
lock
inc
push
mov
imull
push
push
jb
popa
xchg
jno,pt
adc
mov
mov
out
inc
cmpl
in
icebp
add
pop
inc
xchg
push
arpl
popa
fstpt
pop
sbb
mov
imul
push
sti
sub
add
or
les
movsl
fidivs
xchg
outsl
xchg
jge
ss
leave
jae
sub
xchg
cmp
inc
ret
test
cs
cmp
mov
insb
jle
shll
cmpl
arpl
jno
lcall
repz
ret
lahf
sub
shrb
mov
cwtl
xor
stc
sub
cmp
adc
or
arpl
imul
roll
daa
xor
inc
mov
pop
ds
nop
les
push
fucomp
add
loopne
xchg
push
jecxz
std
shll
mov
mov
mov
xor
pop
add
js
push
iret
xor
imul
jecxz
popa
mov
fs
fucompp
jb
mov
jne
into
mov
push
add
push
xor
dec
les
push
out
mov
cmpb
fsubrp
push
shlb
or
loope
sub
mov
je
lods
xor
adc
jp
aaa
xchg
and
fmulp
inc
xchg
out
push
inc
mov
xchg
cmp
dec
mov
lods
xchg
arpl
jle
mov
les
or
xor
in
stc
repnz
and
jno
inc
arpl
adc
scas
stos
inc
movsl
xlat
sbbb
jno
jmp
les
repz
out
adc
mov
inc
adc
or
jecxz
shll
mov
jbe
xor
xorb
push
push
pop
and
in
and
or
popf
xor
ljmp
sbb
roll
je
addr16
jns
int
les
out
and
xlat
adc
xor
shrl
mov
lret
xlat
push
pop
jle
adc
in
add
xlat
or
daa
xchg
or
push
rcll
sbb
mov
testl
add
push
out
cmp
in
cmc
adc
popa
adc
and
dec
adc
mov
inc
or
cmp
je
mov
pop
adc
mov
outsl
rcll
arpl
fdivl
mov
jp
icebp
ds
cmp
add
insl
bound
sbb
in
add
xor
dec
fwait
cmp
jno
out
data16
outsb
shlb
ror
dec
les
sub
adc
call
in
mov
sarb
and
out
fimull
jp
orl
jmp
mov
in
std
jo
mov
je
xchg
ror
mov
mov
add
inc
mov
jecxz
jle
adc
cmp
loopne
dec
adc
xchg
out
mov
push
push
mov
push
inc
pop
xor
in
sub
mov
inc
adc
je
dec
mov
xor
xor
loope
and
lea
rolb
cmp
into
jb
mov
adc
mov
jmp
mov
jbe
pushf
test
cmpsb
call
adcb
xor
inc
testb
inc
fcompl
into
fcmovne
and
mov
js
fs
cs
dec
dec
stos
mov
in
pushf
xchg
xor
arpl
lock
les
cmpsl
mov
lods
cmc
mov
imull
pop
fs
mov
xlat
add
jg
pop
and
xor
ret
daa
jle
ds
das
mov
push
mov
out
xor
xor
or
pop
or
and
dec
shl
mov
adc
xlat
cwtl
push
mov
xor
sbb
rcll
jno
push
andl
movsb
jle
arpl
xchg
inc
jne
push
repz
out
shl
xchg
inc
add
sub
mov
sub
mov
out
jae
push
mov
jle
mov
mov
jnp
dec
jb
mov
in
mov
adc
push
iret
mov
add
repz
les
xor
inc
xlat
push
pop
jge
xor
dec
xchg
or
sbb
addr16
fs
roll
popa
push
icebp
jne
mov
push
ficoml
push
and
push
add
fisubrs
out
mov
ss
cs
popa
push
inc
mov
dec
mov
std
stos
lcall
inc
inc
jecxz
mov
cmpsl
out
bnd
inc
repz
fists
xorl
ds
das
xor
xor
data16
mov
out
jno
ds
loop
xor
rcll
mov
gs
sbb
xchg
xorl
jo
frstor
xor
test
es
jle
in
dec
jo
lock
mov
repz
dec
mov
lods
out
sbb
inc
sahf
jecxz
mov
and
je
out
jb
inc
fs
clc
add
add
inc
adc
outsl
or
btr
jae
push
push
ror
loope
jne
and
mov
into
stc
int
push
mov
push
cmpsl
js
cwtl
adc
in
jle
xor
sbb
dec
iret
sub
mov
out
xor
je
sarl
inc
outsb
add
into
out
xor
xchg
sbb
pop
iret
xchg
pop
inc
and
sbb
and
ret
ds
rorl
adc
sarl
jns
mov
testb
adc
xor
into
or
sbb
cmp
dec
inc
mov
push
fdiv
inc
out
call
arpl
dec
orl
loope
mov
ljmp
in
mov
push
js
out
cltd
repz
mov
jno
add
dec
xchg
mov
and
les
rcrl
inc
sub
adc
popa
jmp
daa
xor
lock
popa
pop
loope
in
insb
cwtl
inc
jecxz
js
push
enter
pushf
mov
lds
jnp
inc
xor
scas
inc
jb
xchg
push
pop
jl,pn
loope
out
imul
scas
rcrl
pop
mov
push
dec
out
cmp
dec
xchg
jle
add
inc
sub
divl
xor
sub
adc
popa
outsb
in
shll
divl
insb
sub
inc
sbb
cs
jecxz
es
push
adc
and
pmaddwd
mov
xor
in
mov
xchg
xchg
mov
les
ja
jae
lret
push
adc
imul
push
adc
mov
aam
push
lock
mov
call
mov
xor
mov
sub
shll
inc
in
xchg
push
mov
jne
outsb
xlat
rclb
repz
arpl
xor
daa
push
ljmp
pop
call
xchg
std
lods
sbb
dec
jno
or
pop
lds
push
jmp
jo
add
dec
push
push
and
into
lret
into
aam
jle
fwait
ret
adc
jno
dec
sbbl
imul
xor
popa
adc
lcall
and
cli
cmp
lea
push
andl
mov
mov
and
out
ljmp
loopne
mov
fdivl
rolb
sub
movsl
inc
sub
push
ret
bound
shrl
dec
adc
fsubrp
jle
inc
roll
xchg
les
mov
bound
arpl
cmp
xchg
lret
aam
outsb
jo
loopne
xor
jb
es
popa
xor
roll
pop
in
or
jno
adc
mov
arpl
idivl
and
xor
xor
lea
bound
sub
mov
xchg
jb
sbb
xchg
loopne
into
add
shll
cmp
mov
xor
adc
dec
ret
inc
adc
mov
push
and
inc
jmp
push
icebp
cmp
mov
xor
cmp
rcll
push
mov
xor
lcall
or
aam
adc
leave
aam
out
mov
mov
add
inc
repz
outsb
mov
mov
shrl
iret
inc
push
mov
adc
les
psrlw
pop
mov
inc
xor
mov
xchg
call
xor
loope,pn
and
adcl
das
mov
repnz
pop
clc
xor
into
ds
adc
jecxz
les
arpl
add
enter
repz
jae
dec
mov
push
lods
xchg
imul
shll
arpl
lcall
cmc
xor
inc
sub
and
pop
lock
mov
arpl
add
push
push
cwtl
into
add
mov
out
jle
mov
push
out
rolb
and
mov
adc
nop
sub
mov
mov
loope
adc
inc
gs
push
mov
in
sarl
call
push
and
pushf
les
mov
push
pop
mov
cwtl
dec
nop
divl
outsb
xor
inc
push
xchg
and
mov
popa
xchg
adc
push
push
and
dec
or
or
lds
pop
mov
insb
xchg
es
decb
xor
cmp
mov
call
adc
jle
icebp
mov
addl
inc
add
repz
pop
rorl
fsubl
xchg
mov
mov
and
jg
dec
inc
adc
popa
addl
lods
jbe
arpl
mul
loopne
out
into
xchg
roll
outsb
xor
orl
inc
push
out
in
daa
shlb
imul
insl
pop
arpl
imul
dec
add
jecxz
xlat
mov
xor
scas
adc
repz
push
and
xchg
push
popa
jge
push
cmp
xchg
rcr
xchg
icebp
pop
lea
jae,pt
lret
push
and
inc
mov
and
shll
int
outsb
push
imul
notb
cmc
jmp
push
dec
xor
add
repz
add
adc
into
cmp
mov
xchg
notl
dec
adc
jecxz
jle
negl
inc
insb
outsb
xchg
jecxz
scas
testl
xor
dec
pusha
insl
mov
inc
jle
adc
loope
fisttpll
mov
lods
xor
bound
mov
and
int
mov
xor
xor
pop
nop
push
test
idiv
push
xchg
sub
or
scas
sbb
cltd
adc
adc
pop
out
jb
adc
addl
out
xlat
or
adc
mov
adc
outsl
mov
popa
lea
outsb
les
shrb
jg
test
imul
and
dec
mov
xor
xchg
mov
or
adc
and
xchg
add
mov
and
sbb
pop
cmpl
add
mov
shrl
in
lret
ja
insw
cli
xchg
xchg
shll
into
fcomp
inc
fisubl
scas
test
xor
mov
leave
and
sbb
jge
mov
add
fs
push
rolb
fistps
xor
mov
fcmovne
push
push
les
xor
or
jo
fwait
push
stos
push
test
outsb
xor
repz
and
mov
mov
adc
xchg
in
jmp
mov
push
push
xor
xor
js
add
mov
jle
jo
jecxz
sub
ds
inc
add
sbb
or
cmpsl
stc
ja
xchg
push
mov
inc
sub
and
push
ret
les
psrld
and
push
or
sti
insb
rcll
adc
lock
les
shl
jmp
xchg
out
xor
xchg
sub
dec
xor
dec
out
or
xchg
mov
jno
jle
cmp
daa
mov
ret
jno
pushl
add
repz
data16
cmpb
jns
subb
les
mov
xchg
cmp
shlb
test
pop
mov
je,pt
and
mov
loope
push
arpl
jns
repnz
daa
inc
pop
mov
inc
jne
ret
fs
push
daa
ja
cmp
adc
xor
xor
xchg
push
out
jno
arpl
dec
and
mov
inc
rcl
cs
sbb
sub
and
sub
ret
mov
mov
in
pop
jle
outsb
mov
add
jecxz
dec
cmp
ret
arpl
push
jo
mov
lret
push
les
xchg
mov
xor
in
push
mov
fcoms
mov
insb
icebp
mov
out
mov
daa
mov
add
mov
sub
ficomps
jno
jne
mov
push
mov
dec
mov
push
dec
stos
inc
outsb
cmp
mov
clc
xlat
cmpb
cmpsb
inc
xor
mov
popa
popa
dec
mov
inc
jno
mov
xor
dec
outsb
add
ss
add
into
mov
rol
jg
adc
shrb
adc
fsubs
aam
and
add
cmpsl
xor
sub
xlat
inc
mov
imul
call
mov
mov
jno,pt
xor
out
add
jnp
mov
inc
loope
xchg
push
add
rcrb
scas
mov
test
in
aas
dec
adc
shll
and
les
popf
jno
inc
ljmp
mov
jle
inc
movsl
sar
or
test
js
mov
jbe
dec
add
push
sbb
push
bound
and
out
jns
outsb
mov
jne
push
rcll
cmp
jle
or
outsl
pop
js
ret
cmc
mov
shlb
loope
orl
adc
outsb
xorb
inc
popa
inc
dec
out
inc
loope
push
cmovne
mov
cmpsb
and
test
and
and
sub
loope
lret
push
adc
shll
dec
lock
adc
scas
jo
pop
xorl
sub
add
mov
push
add
push
adcb
xor
jbe
add
or
push
clc
and
adc
jns
fisubs
nop
mov
testb
in
mov
mov
cmp
fwait
in
out
fs
cs
roll
addl
jae
cmp
shlb
cmp
je
mov
shrb
ret
xor
icebp
hlt
push
loopne
ret
jae
mov
ds
xor
adc
loopne
addl
mov
out
out
aam
loope
and
neg
call
inc
cs
jle
push
gs
out
loopne
les
cmpl
mov
xor
adcb
ljmp
jge
shrl
mov
and
mov
mov
inc
or
xor
lcall
sub
mov
shrl
lods
rolb
xor
in
cld
adc
adc
adcb
fwait
inc
adc
ret
adc
mov
inc
or
out
jb
mov
jecxz
ror
shll
jae
sub
jmp
push
inc
mov
popa
out
jae
out
push
xor
xor
mov
adc
adc
scas
insb
cmpsl
ret
mov
xor
addr16
out
cmc
bound
out
inc
adc
add
ret
sbb
adc
leave
xorl
xchg
faddl
or
out
and
push
ret
and
inc
shrl
add
push
icebp
je
rolb
xor
mov
inc
pop
mov
sub
pop
inc
pop
popf
adc
ljmp
cld
enter
adc
mov
add
shrb
lcall
adcb
adc
repz
push
inc
and
stos
testl
cmp
in
aas
push
inc
cs
jmp
xor
xchg
popa
and
in
add
adc
and
adc
rolb
mov
iret
sbb
lret
add
xor
cld
add
rcr
jle
arpl
or
push
or
fbstp
leave
in
push
and
test
xchg
mov
faddp
xor
out
jno
push
jb
or
les
adc
cmp
rorl
repz
adc
sub
dec
lock
jne
loope
inc
push
icebp
aam
push
xor
dec
mov
popa
pop
and
fwait
ds
popa
repz
mov
mov
inc
adc
pop
out
out
testl
mov
shlb
xlat
jb
jmp
icebp
inc
stos
in
test
ss
adc
loopne
xor
mov
push
push
jecxz
dec
ficomps
mov
and
and
arpl
fsubrp
sub
je
pop
push
lahf
jge
les
dec
mov
mov
jno
sbb
call
jecxz
rcll
xor
inc
and
loope
mov
outsb
ds
mov
jne
je
sub
clc
cmp
add
and
xlat
push
es
lods
dec
sub
and
push
xor
push
ficoms
shll
inc
imul
push
adc
aam
je
jno
dec
inc
inc
bound
orl
push
cltd
test
jecxz
aas
push
mov
adc
push
shl
adc
jb
mov
loop
adc
adc
xor
fidivrl
push
push
ret
adc
jecxz
push
xchg
and
xor
mov
popa
aaa
xor
jmp
andb
adc
mov
and
cmp
pushf
lods
adc
lock
push
push
fidivs
and
add
mov
and
stos
fsubp
jle
fwait
xor
je
cmp
sub
pop
rcrb
adc
mov
and
fs
push
push
dec
out
mov
mov
arpl
and
in
mov
xlat
add
test
inc
and
mov
test
push
shl
in
mov
mov
cmpsl
adc
ljmp
into
adc
adc
int
cwtl
data16
andl
mov
or
push
xor
xorl
cmp
jb
call
xchg
lods
fiaddl
add
add
dec
dec
or
cmc
outsb
bound
xor
jg
cmc
dec
mov
inc
xchg
in
mov
rorl
dec
repz
push
dec
or
mov
adc
xchg
sarl
jns
cmp
inc
fidivrl
arpl
inc
cmpsb
lea
jae
cmc
popa
adc
mov
push
xchg
sbb
pop
into
or
loope
arpl
inc
mov
scas
or
push
jne
mov
inc
mov
dec
xchg
mov
pop
sti
pop
jge
cmp
and
rcrl
xor
xor
mov
out
add
dec
add
mov
into
out
sbb
pop
mov
xor
jmp
xchg
mov
sub
icebp
jecxz
mov
lds
xchg
xchg
adc
orb
dec
cmp
rorl
fistps
jmp
mov
mov
repz
cmp
leave
int
fisubrs
lods
inc
jb
xchg
int
add
addl
in
and
push
jo
mov
dec
or
mov
movsl
jae
insb
daa
out
or
mov
xor
jns
mov
push
xor
pandn
inc
setae
mov
loope
mov
sbb
cmp
jmp
pop
ret
addb
dec
and
fisubrl
mov
out
shll
pop
mov
cmpsb
out
into
cmp
lret
mov
fwait
cmp
in
aas
pop
arpl
pusha
jne
xor
xchg
imul
sahf
xchg
and
xchg
enter
mov
mov
lock
dec
and
mov
sbbb
fs
mov
xchg
js
movsl
in
jo
ret
sub
cmpl
les
mov
xor
dec
jne
mov
pop
cmpsb
dec
add
sbb
adc
hlt
push
daa
cmpsb
xchg
test
mov
or
mov
shll
xlat
push
sbb
dec
jp
dec
cs
push
xchg
push
fildl
testb
mov
lret
cmp
inc
mov
xchg
aam
test
andb
add
out
mov
ds
and
or
jb
dec
cmpsb
notl
mov
roll
xlat
and
aam
xchg
mov
call
sbb
push
push
subl
cltd
aam
mov
ret
and
incb
loope
sti
insb
xchg
xorb
ljmp
arpl
je
inc
jecxz
mov
pop
outsb
inc
icebp
loope,pt
adc
dec
mov
enter
roll
sbb
inc
adc
pop
in
fdivrs
outsb
sub
out
adc
xlat
and
sub
push
xlat
dec
fadds
pop
push
lret
mov
out
roll
call
adc
sub
sbb
mov
dec
mull
jmp
xchg
fcoms
mov
cmpsb
jne
icebp
bnd
pop
mov
inc
bound
add
cld
addr16
cmp
cmp
or
inc
adc
adc
jle
dec
cmc
dec
jecxz
icebp
outsl
pop
mov
js
push
inc
jae
and
mov
mov
inc
or
insl
inc
jecxz
fs
je
ljmp
cmp
and
jecxz
shll
pop
cmpsb
sbb
loopne
jle
jp
ds
and
mov
xlat
movsb
jno
or
fwait
je
push
ds
jne
shrb
adc
add
sarb
inc
and
add
mov
mov
les
mov
inc
push
and
push
dec
inc
and
xor
test
mov
jg
das
xchg
and
shrl
icebp
and
shl
inc
add
std
test
push
stc
jmp
outsb
rcrl
cmpsl
or
lds
pusha
daa
js
push
xor
repz
mov
outsb
arpl
and
dec
dec
les
jnp
loop
mov
arpl
push
fldt
je
jecxz
cs
ret
dec
pop
inc
cmp
imul
divl
mov
xchg
xchg
dec
loop
icebp
and
xor
jno
dec
jb
fisubs
and
rcrl
ja
dec
push
inc
pop
shll
dec
mov
arpl
popa
inc
subb
adc
xchg
mov
hlt
popa
test
dec
xor
lret
outsl
cld
ds
in
cmp
mov
fdivrs
les
inc
rclb
test
shll
inc
popa
into
enter
mov
and
and
lds
xorl
xor
shll
icebp
push
dec
shll
test
inc
subl
sub
cmpsl
and
push
ljmp
mov
sub
inc
push
fmull
mov
xor
jle
rcrl
xor
je
lea
jle
sub
mov
xor
pop
repz
jno
mov
loopne
inc
shll
xchg
push
fimull
loope
inc
jp
sub
jecxz
cmp
mov
cs
std
popa
xor
out
adc
les
jbe
cwtl
ss
clc
rorl
les
fdivrl
es
push
clc
shlb
lret
xor
sbb
icebp
pop
adc
jge
add
and
cli
xorl
cmp
cmpsb
push
and
jo
jo
into
jecxz
rcl
inc
jae
adc
cmpsb
loop
and
push
enter
jno
adc
mov
test
push
inc
xchg
xchg
divl
cs
and
xchg
fs
push
mov
xchg
inc
sub
push
in
lahf
arpl
mov
icebp
fistps
mov
arpl
ljmp
fwait
popa
pop
es
fisubs
arpl
xchg
ret
mov
push
insl
inc
ljmp
and
out
popa
push
push
pop
rcll
pushf
loop
jb
in
push
push
and
push
adc
xor
scas
mov
inc
mull
mov
jo
rcrl
fwait
jmp
popa
and
daa
add
jmp
mov
testl
mov
outsb
in
subb
loope
rcll
push
cmp
mov
je
stc
jno
mov
daa
inc
test
xor
mov
cmc
mov
add
testl
cmp
lock
mov
jmp
add
sbb
or
fistpll
andb
push
pushf
daa
enter
xchg
jb
xchg
inc
shrb
popf
sbb
jne
shlb
call
inc
xchg
jle
add
adc
adc
mov
xlat
xor
adc
ds
mov
scas
rcll
mov
xchg
add
fmull
jno
inc
mov
dec
adc
test
push
add
out
hlt
mov
mov
adc
inc
jne
shlb
and
fs
push
push
in
movsl
arpl
bound
bound
adc
roll
dec
std
call
call
cmpsb
outsb
xlat
lret
adc
int
loopne
push
xor
cmpsb
out
popaw
addl
ljmp
pop
lahf
mov
flds
lds
mov
mov
lods
sbb
add
xchg
jno
or
jle,pt
repz
xor
inc
sub
aam
ret
icebp
sub
lcall
repz
outsl
js
scas
xchg
mov
outsl
mov
xchg
mov
xor
add
int
je
mov
int
outsb
mov
cmc
mov
shl
push
add
jle
cmpsb
ret
push
mov
jp
add
imul
shll
js
ret
inc
push
leave
push
std
push
rdpmc
and
out
xor
add
jecxz
or
inc
adc
inc
jecxz
dec
push
fs
ret
arpl
or
jge
xchg
add
adc
loop
inc
shrl
sbb
jge
xor
inc
dec
andl
andl
call
cmc
xor
adc
push
or
and
mov
dec
jae
call
jmp
out
xlat
es
fwait
push
aam
sar
inc
je
push
lods
xchg
pop
and
mov
push
adc
mov
xchg
insl
loope
xlat
rcr
xlat
fdivl
xchg
and
inc
dec
fistpl
xlat
push
mov
les
jb
xlat
and
mov
scas
ret
fisttpl
les
outsb
cmp
adc
pop
cld
jo
jle
loope
mov
xor
sbb
mov
loope
push
mov
and
ficomps
mov
inc
ds
in
stos
imul
push
ja
add
aam
fmuls
lods
addl
mov
js
jne
loope
push
mov
push
jae
call
xor
adc
push
ret
mov
xor
shr
dec
shll
jno
adcl
adc
scas
imul
outsb
and
clc
imul
pop
dec
inc
into
add
or
popa
push
push
mov
clc
outsb
lahf
ljmp
inc
daa
loope
and
outsb
ljmp
loope
stc
xchg
xchg
pop
testl
enter
popa
es
les
mov
fcmovb
out
push
imul
jle
pop
sbb
add
push
pop
xchg
or
or
arpl
sti
repz
in
mov
jno
mov
pop
jge
mov
pop
loope
sub
out
dec
and
lock
gs
xlat
and
push
popa
cs
loopne
sub
aas
daa
mov
mov
fimull
stc
add
into
ljmp
push
dec
je
add
push
dec
mov
mov
pop
shll
and
dec
movsb
inc
call
sub
adc
sub
adc
out
mov
xlat
mov
adc
mov
aaa
fcoml
les
out
adc
jmp
into
sarb
cltd
pop
jecxz
out
stc
rclw
sbb
jno
add
push
test
pop
jae
or
or
inc
les
pop
idivl
xor
sub
mov
pop
out
hlt
pop
mov
rorl
stc
add
ds
lea
fwait
xchg
test
repz
dec
rolb
je
inc
dec
pop
xor
rorb
iret
je
sbb
sub
jge
fs
push
xchg
cs
dec
movsb
icebp
dec
push
movb
shlb
sub
mov
cmp
lret
test
fs
add
add
xor
add
cmpsl
enter
push
mov
inc
aam
test
xor
and
shl
mov
jnp
xor
shrl
add
insb
dec
cmc
mov
outsb
cmp
jbe
mov
jne
les
add
inc
iret
add
and
test
adc
xchg
shll
dec
rcll
out
imul
pop
xchg
adc
popa
push
ja
rcrb
xor
jns
out
into
mov
icebp
adc
cs
out
mov
and
xor
arpl
fcoml
cmpsb
and
push
mulb
imul
mov
je
sub
and
dec
mov
andl
xor
push
xor
int3
cmp
mov
and
jecxz
xchg
repz
divl
mov
mov
inc
push
stos
jns
adc
xor
lods
add
cs
push
test
loope
xchg
int
out
not
lock
lock
ret
cmp
inc
pop
cmp
add
scas
mov
iret
fdivp
push
je
sbb
xchg
adc
mov
sub
cmc
adc
xor
jg
inc
out
clc
xor
mov
hlt
hlt
pop
mov
push
jo
add
and
or
les
sbb
je
fs
lret
push
or
roll
popa
cmp
lods
jecxz
xchg
inc
cmpsl
and
push
and
out
push
adc
mov
out
insl
pop
repz
jno
cli
mov
mov
push
cmc
icebp
inc
adc
mov
push
mov
and
push
ljmp
and
xor
xchg
repz
adc
scas
and
inc
repnz
pop
cwtl
bound
xor
sub
out
xchg
ja
icebp
faddl
loop
shll
pop
mov
ds
cmp
jno
cwtl
xchg
jno
jae
addr16
mov
cmpb
mov
push
jbe
je
mov
add
push
pop
loope
les
sbb
or
push
xchg
push
addr16
cwtl
mov
in
inc
pop
or
call
in
leave
data16
mov
pop
test
xchg
arpl
in
adc
scas
dec
in
dec
xor
xor
fwait
xchg
inc
rcll
inc
insb
lds
sub
stos
call
mov
inc
loope
mov
addr16
inc
rcl
aam
bound
jle
adc
insb
sbb
rorl
ret
roll
cld
daa
push
repz
sub
out
cmp
shlb
mov
addr16
scas
repnz
push
dec
push
jnp
add
push
movsl
js
xor
ret
pop
push
sbbl
lret
inc
adc
mov
and
vpsrlw
insb
es
mov
push
push
scas
icebp
daa
inc
mov
and
pusha
and
mov
add
neg
mov
in
dec
xor
mul
call
xchg
ret
xor
out
xor
mov
icebp
push
aas
daa
dec
clc
adc
lret
push
mov
dec
push
test
je
addr16
outsb
sub
adc
icebp
in
pop
les
aam
mov
add
pop
xchg
shl
in
inc
mov
loope
je
inc
pushf
xor
and
inc
loopne
or
cmp
push
nop
shll
jno
or
arpl
jb
bound
aas
mov
rol
and
out
mov
movsl
out
stc
nop
xor
test
scas
mov
jecxz
xor
sbb
xchg
cs
cmp
push
or
inc
sbb
inc
jae
bnd
sahf
jle
movsl
inc
push
out
push
arpl
adc
outsl
adc
les
push
mov
insb
jmp
jo
xchg
xor
insb
adc
inc
push
cmc
lret
sbb
cmpl
cmpb
jge
xorb
out
sub
popa
and
bound
or
inc
cmp
adc
push
inc
out
and
je
xchg
xchg
xorl
cmc
inc
and
popa
mov
dec
rorb
stos
into
out
and
movsb
xchg
sbb
mov
push
into
jle
arpl
test
and
test
adc
pushf
adc
cmpsb
lret
jecxz
mov
pop
adc
mov
xlat
push
sub
sub
and
repz
fnstcw
stos
or
xchg
jge
jno
adc
jecxz
lcall
aam
mov
push
jo
jo
jmp
in
or
push
xchg
adcl
mov
bound
adc
add
push
adc
mov
scas
movsl
mov
mov
sbb
inc
call
xchg
add
scas
test
and
inc
xor
in
imul
pop
bound
cli
cmp
mov
rorb
xchg
je
push
addr16
icebp
icebp
sub
lret
xor
and
fidivs
je
xor
cmp
and
jle
jle
adc
les
jl
pop
push
mov
dec
jo
mov
pop
out
adcl
jl
idivl
mov
outsl
stos
inc
ret
out
push
adc
sub
orb
xor
inc
fucomi
cmp
fdivrp
jecxz
fcoms
push
add
enter
jb
adcb
rorb
cmp
popa
xor
enter
enter
pushf
mov
rcll
je
dec
inc
shll
xchg
arpl
dec
mov
pop
fiaddl
adc
ret
push
mov
mov
cmp
test
les
fists
popa
out
jmp
mov
nop
lcall
repnz
adc
inc
push
hlt
hlt
jne
push
xchg
rclb
mov
add
and
addr16
arpl
jnp
jb
jo
mov
ret
cmpsb
jmp
lret
aas
xchg
lcall
and
stos
push
ss
mov
push
ret
clc
pop
xchg
push
and
or
push
xchg
roll
inc
pop
jmp
push
jle
push
and
push
arpl
pop
jle
sub
jp
scas
loop
xor
or
sub
adc
jle
lret
ret
lds
daa
mov
scas
add
orl
jb
mov
fildl
jbe
or
inc
inc
cs
addl
in
sbb
andl
jb
push
repnz
outsb
add
cmp
xlat
xor
pushf
push
inc
bound
icebp
andl
adc
ret
push
and
xor
arpl
jl
addr16
dec
adc
or
pop
mov
fs
shll
jne
and
and
outsb
arpl
adc
adc
jecxz
push
mov
in
andl
jb
adc
adc
push
in
les
roll
xchg
adc
les
mov
sub
lock
mov
fdivs
pop
out
scas
cmc
inc
popa
ret
push
push
sbb
fs
enter
cmc
pushf
mov
adcb
iret
adc
pusha
xchg
push
in
ds
arpl
push
mov
popf
mov
cltd
jle
out
mov
mov
inc
pop
loope
and
lea
loope
xchg
push
add
add
mov
movsl
mull
loopne
cs
xor
mov
sahf
cmp
clc
out
and
jb
and
cmp
ret
imul
add
jnp
xor
loop
arpl
jae
test
addl
setne
mov
and
and
push
jnp
arpl
les
lods
leave
sub
ljmp
test
mov
out
add
jno
and
or
pop
out
jae
jb
dec
mov
mov
add
xor
push
cli
ficoml
xlat
testl
push
and
cs
adc
ret
pop
stc
popa
jns
dec
and
pushw
cmc
adc
mov
cmp
mov
pop
into
xchg
sub
adc
dec
shlb
pop
stos
inc
mov
cmpsb
incl
popf
test
xchg
mov
shrb
add
into
xorl
xchg
lods
jle
and
imul
ret
subl
mov
mov
xor
xchg
jle
sbb
push
lret
outsl
push
mov
fldenv
adc
cs
pop
sub
cli
ret
ret
fdivr
ss
mov
xchg
shrl
xchg
adc
bound
fldt
in
ret
xor
popa
mov
rolb
mov
rolb
fstps
adc
into
dec
xchg
add
jge
mov
rcl
pop
inc
mov
mov
adc
sarl
pop
xlat
xchg
fadds
ret
clc
sub
imul
dec
and
scas
mov
jo
aam
jno
in
loope
inc
add
mov
scas
push
pop
adc
cmc
shl
call
adc
push
aas
xlat
pop
mov
mov
mov
mov
inc
in
clc
lods
or
mov
pop
xchg
arpl
addl
mov
popa
adc
jb
xlat
out
fdivs
int3
adc
mov
jb
test
enter
sbb
dec
add
aam
jle
jns
mov
andb
out
jno
xor
repz
jle
call
and
dec
clc
add
mull
fcomi
clc
xlat
inc
pop
push
mov
jb
mov
adc
and
jns
dec
and
loope
adc
and
bound
int
inc
outsl
mov
loope
jmp
in
inc
jo
push
outsb
mov
add
jecxz
je
mov
mov
adc
xchg
jmp
icebp
out
loope
xor
adc
jle
dec
and
xchg
push
mov
outsb
jl
mov
jae
hlt
jno
add
xor
lcall
popa
xchg
inc
and
rcr
shll
mov
add
jge
jbe
pop
mov
cmc
jno
jmp
loope
div
cmp
les
mov
mull
jle
mov
stos
or
xchg
mov
sub
fimull
xorl
add
aaa
and
dec
decl
push
jecxz
adc
clc
out
bound
mov
jle
mov
ljmp
shll
mov
xchg
test
jecxz
clc
popa
push
and
mov
loope
in
daa
repz
aas
lret
lret
push
inc
scas
jmp
fs
jns
les
enter
ljmp
loope
lock
xor
inc
push
jmp
ljmp
ret
outsl
and
xchg
or
into
xchg
xlat
dec
push
repz
bound
into
jno
ret
out
add
push
add
je
stos
mov
sti
ds
fiaddl
mov
inc
or
and
les
test
inc
mov
and
dec
mov
clc
insl
das
rcl
jno
adc
cmp
jnp
movsl
bound
aas
adc
mov
and
jb
pop
and
jo
in
lds
popf
mov
adc
orb
jle
mov
addr16
xchg
rol
and
movsl
xor
inc
rol
dec
outsb
xor
arpl
ficomps
push
push
scas
and
sub
adc
inc
mov
rcll
sbb
pmaxub
cmpl
push
inc
mov
fs
adc
adc
and
sar
adc
push
andl
out
arpl
and
fsubrs
cmp
out
arpl
enter
insl
in
lds
iret
pop
lret
cmp
sub
orl
out
div
add
adc
jne
xchg
outsb
shrl
xor
push
pop
cmpsl
cs
and
push
mov
shll
inc
shll
add
int3
mov
out
add
stos
outsl
adc
xor
inc
fcomps
aam
xorl
or
ret
imul
ds
jecxz
xchg
add
adc
adc
pop
jmp
mov
adcb
es
mov
xchg
xlat
add
imul
mov
push
push
sbb
ljmp
and
mov
repz
loop
mov
push
cmpsb
out
mov
inc
je
mov
test
push
pop
cmpsb
inc
add
lock
cmp
add
icebp
into
jns
push
cs
add
sub
es
popa
inc
inc
mov
xchg
mov
rclb
mov
jbe
fldt
ret
inc
jo
pop
ljmp
mov
inc
sar
mov
push
pushf
adc
inc
ljmp
jno
sbb
les
out
mov
vmwrite
pop
and
out
push
mov
and
fs
bound
inc
mov
dec
mov
in
lock
add
pushf
jno
dec
and
jge
insb
dec
cmp
pop
xor
lods
mov
shll
jae
or
xchg
inc
ds
push
jbe
pop
pop
jne
mov
dec
out
push
popa
fsts
sahf
dec
and
cmp
lods
sbb
cld
je
shll
jge
icebp
mov
in
bound
loope
mov
cmp
mov
into
je
bound
mov
sbb
adc
out
pxor
add
dec
lret
mov
xlat
jmp
dec
or
xor
cmp
add
adc
ficoml
jge
inc
mov
fs
outsl
jo
test
sbb
es
repnz
sbb
sbb
lock
adc
repz
jmp
pop
sarl
jne
divl
cmp
push
and
push
and
fs
add
pop
fadd
lods
roll
inc
fdivr
into
and
neg
sti
and
dec
ljmp
dec
enter
adc
arpl
lcall
mov
popa
add
je
cmp
subl
out
and
add
icebp
and
xor
pop
push
jno
dec
xchg
push
dec
push
call
out
cmpsb
jle
call
xlat
adc
dec
jbe
data16
dec
push
arpl
jle
nop
add
sbb
lods
xor
shl
xor
arpl
and
adc
and
jge
mull
out
mov
insb
mov
sub
sbb
pop
or
je
andps
ja
cs
frstor
cmp
mov
data16
adc
ret
mov
or
icebp
push
js
outsb
or
jb
data16
mov
mov
xor
pop
cmpsb
push
fimuls
shl
or
lods
push
adc
xor
mov
out
in
push
mov
xchg
jge
je
ret
sub
mov
xlat
aam
mov
mov
mov
inc
sbb
dec
adc
adc
xor
cmpsb
ret
xchg
repz
jb
mov
xor
inc
cld
js
sub
push
mov
scas
mov
jae
fs
bound
adc
out
jae
xor
lds
lock
test
adc
adc
xor
mov
push
jb
xlat
mov
push
inc
les
jae
xchg
out
pop
je
mov
cmc
out
adc
push
jno
bound
xlat
inc
pop
aam
aam
mov
ds
adc
sub
shlb
mov
rcl
dec
mov
add
call
cwtl
jno
or
outsb
xor
hlt
adcl
lcall
jnp
int3
mov
in
divl
inc
inc
mov
aam
mov
push
insb
out
adc
jo
daa
shll
and
mov
mov
aam
jae
incb
ret
mov
and
sahf
divl
xlat
add
mov
mull
fs
mov
push
mov
or
daa
ds
xor
shll
lahf
jno
ret
mov
or
test
add
mov
icebp
loop
jecxz
mov
mov
icebp
jo
out
adc
sbb
in
rcll
mov
dec
sbb
loop
popa
mov
int3
and
pop
addr16
outsb
xchg
arpl
add
jne
adc
pop
push
xchg
cld
and
loope
push
xchg
mov
addb
jmp
mov
outsb
jno
daa
inc
lret
sub
cs
inc
ds
xor
sti
icebp
sub
adc
dec
dec
mov
mull
jp
lock
adc
mov
add
lea
jmp
cs
mov
cmpsb
stc
jle
out
rcll
out
push
into
jecxz
leave
dec
jecxz
repz
sub
mov
jo
xchg
adc
xchg
jne
jle
cli
das
ret
sbbl
dec
or
fidivl
loop
icebp
cmpsl
and
cwtl
push
or
xchg
sub
push
shll
test
jnp
push
shl
sbb
cld
iret
sbb
xchg
mov
mov
dec
insb
xor
cmp
adc
pop
ret
xlat
and
pop
mov
dec
popf
js
ds
push
xchg
repnz
mov
push
roll
les
jne
popa
icebp
xor
lret
shll
add
adc
mov
cs
sub
in
or
not
popa
push
mov
fs
add
hlt
andl
jmp
inc
arpl
pushf
adc
or
jmp
je
cmp
lret
out
and
aas
sbb
test
adc
xor
popa
inc
xchg
arpl
outsl
jp
pop
std
fcmovbe
mov
inc
je
inc
fcmovnbe
es
or
bound
sub
int3
xlat
imul
out
push
pop
and
pop
ja
outsb
mov
std
xchg
mov
and
push
orl
jns
push
mov
ret
add
mov
neg
push
rcl
rorb
je
enter
dec
jge
fidivs
xor
push
call
loope
loopne
xor
jb
pop
push
jae
fisubrs
xor
mul
dec
repz
add
mov
xchg
and
mov
pop
inc
or
and
xchg
into
cmp
bound
mov
dec
push
loope
inc
push
pop
dec
pop
std
pushl
data16
mov
push
dec
mov
mov
inc
mov
clc
and
cwtl
mov
push
jmp
jle
repz
outsb
mov
inc
out
addr16
and
out
pop
in
std
add
test
mov
jle
mov
dec
xlat
es
sbb
outsb
xor
add
mov
inc
lea
movsl
jo
ss
inc
jno
sub
fidivl
xchg
push
push
push
lahf
out
cmpsl
xchg
xor
cs
rorb
dec
mov
sarl
mov
out
rolb
push
jo
daa
rcll
call
adc
xor
les
push
push
and
and
push
mov
jo
in
in
jg
jne
xor
mov
and
and
inc
fbld
xor
xlat
inc
loope
pop
out
out
mov
dec
mov
push
add
mov
gs
stos
cmp
insb
dec
out
adc
xchg
inc
mov
and
push
and
mov
and
jae
ljmp
mov
push
andl
outsb
xor
testb
and
jo
les
stos
mov
aas
shlb
inc
jle
hlt
xchg
or
repz
xor
xor
add
std
icebp
jle
clc
jecxz
inc
add
repnz
jge
push
xlat
inc
sbb
std
or
xchg
mov
cs
cmc
ret
xorb
jmp
rolb
and
and
or
outsb
subl
cli
cmc
sub
test
cmp
xchg
add
ljmp
ret
leave
je
and
into
stos
ds
mov
fcompl
repz
in
lods
xchg
les
jmp
mov
sbb
call
divl
push
add
clc
mov
adc
faddl
out
loope
add
adc
mov
adc
fmull
loop
xor
cmpsb
jle
popa
arpl
or
mov
mov
inc
jl
pop
sub
loop
pop
pop
rolb
cmc
jb,pn
mov
mov
and
rcl
adc
into
out
mov
xchg
push
mov
xchg
test
repz
push
mov
xchg
jle
pop
aam
popa
inc
out
xchg
je
inc
push
jmp
mov
push
jae
adc
xlat
mov
push
xlat
fsubrp
pusha
loope
imul
add
jns
js
and
hlt
ljmp
out
push
addl
rcrl
push
stos
movntq
dec
data16
mov
arpl
sbb
sub
shl
mov
inc
push
cmp
push
dec
mov
in
mov
mov
xlat
out
sbb
shll
lret
inc
dec
les
dec
push
add
test
dec
xor
icebp
adc
js
push
push
add
outsb
jno
sub
fbld
cmc
ror
mov
clc
adc
je
shlb
ficoms
and
cmpsl
jg
cmp
push
xor
jp
jbe
xchg
push
jecxz
mov
or
pop
and
je
test
decb
push
pop
sahf
mov
mov
je
cmp
adc
repz
test
loope
sbb
call
push
adc
inc
dec
inc
into
test
cmp
dec
pop
loopne
imulb
arpl
inc
mov
mov
stos
push
add
xor
jne
adc
shrl
and
je
insl
rol
mov
xor
mov
inc
filds
push
in
adc
jecxz
cmc
and
adc
roll
cwtl
push
loop
mov
push
add
cmpsl
inc
xor
ficoml
fcom
out
and
and
icebp
arpl
or
test
jmp
xchg
mov
in
imul
dec
fistl
and
mov
inc
jo
out
lods
loopne
add
mov
push
adcl
cmc
mov
cmp
loopne
cmpsb
xor
clc
push
ret
dec
lea
mov
inc
xchg
out
js
repz
subb
mov
xor
bound
jl
mov
lret
inc
je
push
dec
adc
sarb
xor
or
das
outsl
addr16
cli
outsb
fdivr
and
inc
pop
push
xor
dec
in
jl
jbe
jae
pushl
cmp
jge
xor
mov
sbb
add
mov
rcl
test
push
jnp
mov
in
sub
out
push
pushf
orl
fisttps
imul
jmp
out
push
ds
sbb
dec
rorl
dec
xorl
loop
xchg
ret
rolb
popa
and
add
jne
inc
mov
jno
rorb
test
push
rep
adcb
aam
inc
push
mov
push
out
add
cmpsl
into
mov
jmp
bound
jo
xor
jecxz
sbb
out
sbb
xorl
rcll
mov
jge,pt
push
mov
loope
data16
mull
cwtl
and
mov
push
shl
and
cmpsb
inc
xchg
das
xchg
push
xor
adc
shll
push
addr16
cs
xchg
into
fistl
repz
sbb
push
mov
add
mov
mov
and
leave
test
loopne
testl
push
loope
pushf
ret
sbb
mov
pop
andb
aas
jecxz
jbe
push
sbb
movmskps
inc
jmp
dec
adc
div
clc
imul
jg
shl
jmp
push
addr16
push
jnp
xlat
and
into
inc
push
and
and
sub
shlb
insb
testl
cmp
jne
arpl
xchg
subb
subl
inc
adc
hlt
push
and
repz
es
xchg
xor
outsl
cs
push
xchg
leave
push
mov
and
adc
jle
lret
cmc
push
and
jb
inc
add
stos
xor
dec
push
push
rcr
push
aam
notl
cmp
jno
pop
inc
out
rcll
and
mov
clc
mov
jbe
mov
add
inc
mov
add
je
movaps
pop
inc
jno
and
and
les
lock
mov
in
icebp
pop
out
in
into
je,pn
addl
ljmp
outsb
ror
mov
les
mov
int3
mov
rol
mov
loope
inc
push
addr16
stc
add
adc
mov
xchg
pop
int3
mov
mov
ds
mov
pop
out
add
test
push
jb
xor
ror
loop
arpl
add
jge
mov
jle
orl
mov
inc
lea
lret
push
rcll
adc
mov
negl
xor
shl
mov
xor
out
rclb
aas
data16
inc
popa
loop
rclb
daa
jno
int3
ja
sub
sub
rcl
negb
pop
dec
loope
icebp
jo
xchg
rorl
mov
enter
dec
rol
push
pop
not
push
into
stc
inc
and
xlat
mov
pop
mov
icebp
sbb
xor
testb
dec
jb
push
sub
adc
and
leave
inc
add
cmpsb
lods
pop
xchg
loope
xchg
jmp
adc
cmc
imul
inc
fsubrl
idivl
xchg
shlb
push
and
mov
pop
cmp
cwtl
and
inc
push
xchg
out
testl
dec
int
or
movsb
mov
fs
cmp
push
lock
bound
icebp
xor
xchg
divl
fcomps
shll
fwait
data16
shl
adc
jle
xor
xor
rcl
adc
mov
test
cmpsl
inc
mov
adcb
dec
fildl
fildl
loope
inc
mov
mov
add
out
mov
cmpsb
pop
cwtl
jb
add
shlb
mov
movsl
je
mov
jno
and
xor
xor
arpl
inc
sub
inc
pop
jb
jo
repnz
jae
andl
add
rol
mov
adc
xor
mov
add
jae
pop
jle
js
rolb
add
jecxz
and
dec
jb
adc
icebp
jns
jnp
test
add
and
add
int
push
into
icebp
in
and
inc
jb
adc
cs
jge
push
push
inc
pop
xorb
cmpsl
shll
idiv
sti
adc
push
mov
cmp
mov
jle
add
pop
adc
inc
push
xlat
jle
inc
mov
mov
popa
inc
neg
jge
mov
cwtl
mov
scas
add
adc
loop
out
testl
xchg
fldt
jns
loope
shll
out
scas
add
mov
push
fimuls
ret
fistl
sbb
rcll
lds
jb
pop
daa
mov
arpl
loopne
mov
xlat
outsl
jne
jmp
and
in
sub
incb
push
icebp
cmpl
pop
pop
fwait
xor
sti
pop
push
scas
lock
ficoms
movsb
repz
out
aaa
add
mov
xor
adc
out
div
icebp
mov
pmulhw
sbb
jle
or
jb
sbb
sbb
ror
mov
mov
stos
or
xorl
jecxz
enter
pop
mov
or
sti
rolb
push
xlat
scas
aam
or
dec
gs
out
mov
ret
mov
repz
and
hlt
fisubs
lds
push
sbb
and
test
pop
mov
bound
icebp
int
andl
gs
adc
cmp
aas
rcrl
pushf
sub
and
cmp
mov
in
push
bound
mov
mov
icebp
out
and
adc
push
cs
inc
add
mov
clc
add
xchg
jecxz
cli
or
popf
frstor
pop
xor
mov
stc
and
loop
fs
push
hlt
and
rcrl
arpl
mov
and
ljmp
imul
xor
loope
sbb
enter
mov
inc
std
push
stos
int
js
pop
into
push
or
es
jns
arpl
jae
test
push
not
or
ret
adc
ficoml
ret
icebp
call
out
adcl
mov
repz
dec
mov
cmp
div
and
int
flds
arpl
pushf
xor
in
lea
add
les
dec
mov
loopne
or
decl
sub
popa
cmpl
daa
dec
js
iret
mov
jge
cmp
and
ret
lret
push
data16
pop
and
pop
shl
mov
jle
pop
addl
out
roll
andb
mov
add
dec
popa
sub
repz
cmp
fidivs
add
mov
sub
adc
xchg
push
je
ret
aaa
mov
aam
ret
add
cmp
test
shl
push
xchg
xor
pop
ja
sub
loope
or
ja
cwtl
imul
inc
bound
push
mov
inc
es
repz
movsl
mov
into
xchg
jno
cld
dec
test
mov
or
sahf
and
jge
push
out
sarl
mov
movb
sub
mov
iret
inc
jge
push
mov
rcr
subl
loope
stos
fsubrs
jno
xor
ret
xlat
cmpsb
xorb
mov
push
out
mov
xlat
push
push
loope
sti
push
cmp
arpl
mov
outsl
xor
insl
lods
jnp
or
jecxz
dec
into
roll
es
lret
es
pop
and
xor
outsb
arpl
jp
cwtl
mov
add
xor
jns
loope
xchg
ds
out
andb
and
add
pop
std
popf
push
or
dec
adc
mov
imul
jo
in
in
mov
lock
int
xor
lret
push
jecxz
in
sub
jl
hlt
jecxz
pop
outsb
enter
jae
je
ljmp
mov
addl
daa
out
imul
push
adc
jnp
mov
cmpsb
xchg
jno
std
cli
jmp
dec
out
lds
add
and
xchg
cltd
enter
jl
loop
xor
mov
mov
xor
leave
mov
js
cli
xor
pop
test
inc
dec
inc
je
out
jecxz
arpl
push
repz
mov
or
push
outsl
sbb
loope
xchg
inc
dec
push
repz
adc
movb
xor
push
mov
imul
in
xchg
imull
andb
and
std
in
in
pusha
mov
outsb
and
pop
mulb
insl
test
xchg
fistpll
and
outsb
cmp
or
adc
or
and
add
cmp
imul
popa
dec
push
pusha
adc
or
imul
lret
push
or
repnz
push
push
sti
dec
loop
xchg
lret
add
jg
shl
add
xchg
push
lahf
jb
pop
jmp
xlat
mov
ffreep
and
push
push
enter
es
stos
and
pop
xchg
call
push
push
jmp
mov
xchg
xor
add
sub
mov
cmc
mov
out
xor
pop
ret
mov
movsl
cmp
sub
push
hlt
imul
xchg
xor
and
inc
rcll
rcll
mov
ret
icebp
shrb
aam
push
xor
dec
dec
scas
mov
push
into
sbb
adc
cmp
test
dec
cmpsl
jnp
xor
aam
jecxz
push
cs
iret
dec
dec
or
mov
cmpsl
jecxz
into
cwtl
mov
xor
xor
dec
aam
ret
dec
push
mov
push
inc
jle
sbb
inc
loope
mov
je
mov
inc
int
or
mov
sub
pop
sub
jns
loop
and
sub
lds
xor
xchg
adc
ljmp
push
xchg
arpl
jae
push
les
adc
into
xorb
adc
notl
ficompl
ret
xchg
adc
roll
mov
rorl
jae
loope
jae
enter
ret
push
es
fsubl
adc
lock
mov
shll
je
scas
stos
mov
inc
pop
push
jmp
shrl
mov
push
dec
mov
shl
ljmp
cmp
lock
and
jno
mov
adc
and
inc
jge
inc
xor
push
sbb
xor
sbb
jnp
out
cld
ds
mov
ds
cmpsb
sub
icebp
push
jle
bound
push
in
cmp
roll
mov
scas
into
mov
xor
push
icebp
xor
aad
push
cld
pop
sbb
loope
sbb
mov
inc
dec
add
adc
in
ffree
mov
jecxz
adc
nop
roll
sub
into
adc
dec
in
add
ljmp
jb
aam
push
imul
mov
ds
fwait
adc
adc
mov
push
popa
loope
arpl
pop
jge
pop
pop
inc
or
push
cmp
cmp
in
jbe
xchg
xor
sarl
out
jle
mov
fs
arpl
pop
mov
cs
andb
cwtl
mov
sarl
mov
pop
dec
lods
push
push
lods
adcb
cmpsb
call
je
popa
orl
adc
lds
outsb
pop
xchg
pop
xchg
mov
xor
je
mov
push
pop
mov
or
je
out
and
mov
stos
ljmp
jo
in
push
addr16
mov
xlat
je
push
push
ret
jle
xor
add
popa
shlb
push
notb
ss
pop
push
les
in
test
dec
sbb
dec
repnz
test
ret
inc
into
dec
fdivp
mov
mov
jae
xor
push
mov
inc
ret
xchg
mov
mov
cmp
mov
jnp
jo
jo
jo
cmpsl
roll
xchg
mov
loopne
push
dec
cmpsl
dec
adc
pop
and
fcmovb
mov
cld
loop
add
in
mov
shl
xchg
cs
fsubrs
pop
adc
pop
and
cmp
inc
adc
inc
lods
dec
cmovae
cmp
sub
ljmp
lret
popa
in
push
out
fsubs
clc
push
arpl
in
xor
loope
add
push
and
inc
lahf
call
loope
scas
dec
daa
adcb
fs
mov
mov
inc
dec
icebp
mov
pop
stos
add
mov
cmpsl
inc
addr16
xor
xchg
xchg
fbstp
arpl
adc
push
xor
cmp
dec
xchg
push
xlat
outsb
ret
fcomps
jecxz
pop
popa
mov
movsb
adc
cmp
sbb
xchg
mov
adc
out
mov
jle
inc
mov
idivb
bound
push
xlat
add
shr
fmull
and
or
pop
paddq
xorl
jno
adc
inc
mov
jne
inc
adc
outsb
add
mov
adc
push
cli
dec
sti
mov
mov
cmp
clc
pop
push
cmp
mov
pop
adc
addr16
jbe
push
adc
xor
loope
mov
xchg
cs
test
and
xor
jmp
ds
mov
mov
das
inc
xor
jg
inc
fisttpll
inc
loope
sub
xor
mov
pop
push
add
xchg
add
mov
mov
out
inc
jne
adc
fidivs
and
adc
jo
mov
jecxz
jb
pusha
xor
stos
sbb
sbb
inc
int
mov
xchg
shll
outsl
sbb
dec
imul
jns
inc
xor
repnz
dec
stos
xor
sti
xchg
ret
jmp
shl
push
xor
xor
cmpb
std
inc
icebp
adc
clc
adc
and
jle
hlt
xorl
add
cwtl
dec
jno
pushf
inc
jno
outsb
jecxz
pop
roll
and
leave
cmp
mov
or
and
add
lret
xchg
push
adc
add
cmpb
inc
mov
sub
fwait
or
popa
je
pop
pop
adc
jge
jle
push
out
add
push
mov
bound
imul
xor
hlt
bound
in
into
xlat
ret
and
push
popa
jno
addr16
rolb
mov
push
adc
loope
loop
xor
dec
xchg
daa
xor
repnz
repnz
lds
adc
js
or
push
xor
add
mov
loope
imul
and
ret
ret
dec
out
mov
repz
xlat
je
sahf
fcom
mov
cmp
sub
add
das
iret
xor
fsubrl
fdivl
fmull
add
std
mov
dec
mov
loop
jecxz
dec
mov
mov
adc
mov
push
jge
cmpl
cmp
push
push
aam
les
out
inc
jae
xchg
repnz
add
shll
and
arpl
jae
mov
jle
xor
cld
mov
xlat
ret
jg
cmp
sbb
adc
lock
jl
mov
add
and
inc
and
sbb
icebp
les
xchg
mov
test
divl
ds
pop
xchg
mov
loop
cs
inc
and
shl
mov
and
inc
adc
call
push
and
dec
jns
push
filds
arpl
xor
adc
sbb
and
adcb
add
test
push
out
mov
add
push
jmp
mov
jle
adc
pop
out
jne
mov
push
add
mov
cmc
sub
std
roll
testl
icebp
xorl
les
rclb
mov
jne
and
jmp
in
jmp
sti
push
fdivs
push
mov
mov
dec
push
jecxz
in
ucomiss
mov
add
sbb
push
adc
mov
mov
ficoml
adc
xorl
push
out
inc
or
pop
fxch
out
arpl
or
adcb
imul
xchg
orl
jecxz
xchg
into
add
gs
stos
rorl
out
jae
jecxz
dec
nop
cmpsb
stc
and
dec
add
mov
xor
inc
loopne
adc
ret
push
sbb
pusha
es
sub
jb
dec
inc
push
push
stos
add
lret
adc
xchg
and
ja
mov
cli
or
inc
add
clc
in
outsl
test
mov
pop
mov
fdivp
pushl
ret
add
xchg
movsl
cs
and
dec
push
imull
cmpsl
loope
add
fdivrs
inc
mov
inc
out
je
cmpsb
in
into
mov
pop
mov
in
divl
mov
add
mov
je
jae
mov
mov
das
in
adc
pop
out
es
mov
stos
rcr
fsubrs
xor
pop
xor
and
out
add
cmp
and
outsl
out
bound
icebp
js
xorl
mov
push
outsb
push
fisubrs
push
xor
rol
sub
dec
add
fmuls
xor
mov
outsb
inc
inc
sbb
adc
jno
mov
sub
dec
and
lock
and
popa
imul
in
cmpl
xorl
xchg
arpl
add
scas
mov
xor
dec
out
scas
or
and
push
inc
push
dec
push
xor
fidivrl
sub
jno
mov
cwtl
xchg
and
mov
sti
jne
into
xor
mov
xor
shl
leave
jo
push
adc
mov
jbe
inc
push
in
dec
es
shll
inc
add
arpl
dec
ja
lahf
cmpsl
inc
ja
jle
enter
adc
test
dec
rcll
les
outsb
daa
xor
fcomip
xorb
inc
inc
xchg
mov
aam
adcl
rol
jecxz
inc
mov
cmp
in
insb
cmc
dec
adc
push
je
push
inc
xchg
bound
adc
xor
xchg
mov
daa
rol
sub
cs
leave
lds
jl
pushf
gs
cmpsl
lods
cmp
push
cld
jb
rclb
adc
or
data16
popa
xchg
adc
popa
aam
pop
xor
ds
push
outsb
add
mov
jae
xchg
daa
fbld
push
xchg
inc
xchg
sub
inc
mov
jp
and
cltd
xchg
dec
and
mov
inc
testb
adc
rcr
push
popa
neg
lret
xchg
ljmp
push
dec
aad
push
je
loope
neg
hlt
outsb
adc
mov
ret
std
or
jae
outsb
jb
push
push
shll
fsubs
mov
cmpsl
icebp
mov
pop
test
or
add
jne
jecxz
cmp
add
shlb
bound
xchg
cmpl
and
inc
cli
push
outsb
jle
jl
sbb
outsl
inc
bound
stc
ficomps
adc
add
cmp
and
cs
test
xchg
ljmp
inc
mov
add
mov
push
cmp
jno
mov
stc
mov
push
nop
into
push
popf
mov
orb
dec
scas
sub
jb
popa
push
int
iret
jl
stc
jb
push
and
test
push
push
pusha
in
into
push
int3
fdivrp
xlat
mov
fcmove
jecxz
call
mulb
xor
addb
cltd
sub
add
inc
ret
xor
sub
in
jecxz
push
xor
mov
jns
pop
push
xor
xor
xchg
cmpsb
mov
sbb
les
mov
add
mov
jo
xor
jmp
pop
popa
je
dec
push
bound
sub
out
adc
pop
inc
sub
mov
js
or
add
jge
and
cmpb
lock
mov
xor
jp
mov
mov
inc
and
cmp
add
jle
lea
jae
clc
mov
rcll
ret
outsb
arpl
mov
add
fs
and
rep
mov
and
adc
push
jbe
rcrb
jns
cli
jbe
loope
adc
ds
out
jle
in
sbb
add
cmpsb
xor
roll
inc
test
scas
cmp
std
mov
testl
mov
jb
clc
addr16
arpl
popa
mov
rcll
orl
xchg
es
nop
inc
push
and
push
out
inc
ja
adc
aaa
xor
jo
pushf
add
xor
add
shlb
out
push
and
js
ds
andl
lock
mov
call
mov
push
test
mov
adc
mov
and
idivl
push
jg
jp
cltd
hlt
in
xchg
je
sub
adc
or
dec
xchg
cltd
shll
movd
mov
mov
jecxz
xor
add
outsl
in
pop
push
xor
mov
dec
lods
sbb
in
cmp
jae
xchg
lds
jb
pop
push
andl
arpl
int3
daa
push
pop
js
mov
orb
or
cmp
jns
sub
fisubs
les
dec
aam
mov
mov
dec
mov
or
mov
imulb
stos
inc
into
xchg
mov
xchg
inc
cmp
cmpl
mov
into
and
lods
outsb
sahf
add
cmp
xlat
loope
sub
lea
add
push
popa
mov
mull
jge
pop
aam
add
shlb
xchg
or
mov
xor
cmp
out
dec
dec
xchg
adc
cmc
mov
icebp
xor
jne
into
popa
inc
repz
add
aam
bound
xchg
cmp
push
and
xchg
loop
outsb
xorb
and
cmpsl
je
or
int
adc
and
cmc
xchg
push
pop
add
push
out
sti
notl
push
xor
pop
pop
icebp
arpl
or
incb
cmpsl
push
add
mov
outsl
mulb
outsb
in
dec
movsl
loop
and
cltd
push
ljmp
sti
mov
into
adc
adc
in
je
es
fcmovbe
bound
sbb
repz
mov
inc
mov
mov
and
fcoml
out
rcll
int3
rcl
icebp
xchg
call
sbb
jno
pop
jmp
inc
out
mov
daa
bound
jge
mov
out
xlat
pop
jle
jo
out
std
inc
jb
mov
jbe
or
push
out
jmp
mov
nop
xchg
xor
adc
ja
movsl
pop
ret
sbb
shll
addl
push
or
iret
add
outsb
sbb
loop
and
dec
jno
and
xorb
mov
lods
dec
xor
xorl
aam
add
cmpl
pop
dec
push
loop
mov
xor
inc
jl
xor
bound
jle
out
sub
adc
outsb
repz
mov
lcall
jb
jmp
xor
pop
andb
ja
mov
xchg
mov
add
dec
dec
xor
les
shl
icebp
mov
xorb
mov
roll
push
inc
mov
out
aad
shll
push
loope,pt
jae
addb
mov
test
mov
rorl
push
jle
sbb
mov
add
push
repz
lret
xor
pushw
jnp
dec
loop
inc
inc
dec
nop
es
pcmpeqw
xor
repz
jg
es
mov
push
add
xor
gs
jo
ds
xor
mov
xlat
sbb
cli
ljmp
mov
and
xor
cmpsl
repz
sarl
or
adc
notb
ds
adc
fidivs
dec
xchg
jle
push
pop
test
pushf
loop
mov
push
arpl
adc
fmull
xor
mov
or
sarb
arpl
loop
add
inc
shll
jecxz
mov
dec
ds
rolb
fs
jnp
andl
push
inc
cmp
es
push
mov
inc
jbe
mov
push
xchg
dec
stc
jge
xlat
setle
push
outsb
adc
les
sub
daa
push
shrb
movsl
cmpb
test
jns
inc
xor
out
add
ret
and
rorl
daa
in
loope
sub
data16
outsb
jle
inc
mov
push
daa
testl
and
ret
subb
jle
xlat
aad
pop
rcll
push
mov
js
dec
push
push
jmp
push
int3
add
dec
jmp
push
cmpsb
xor
xor
test
loope
das
mov
ljmp
xor
shll
cmp
dec
dec
ljmp
mov
add
dec
lcall
testl
push
xchg
pop
and
sbb
ds
and
jae
imul
scas
dec
sbb
cmp
adc
and
jb
icebp
inc
push
cmpsl
or
out
pop
add
pop
shrl
mull
arpl
jle
push
jecxz
or
sbb
sub
dec
out
arpl
add
cli
mov
daa
cmpsl
adc
inc
mov
pop
add
push
rclb
insb
mov
arpl
xor
addl
add
testl
cltd
add
addr16
pop
mov
jb
outsb
mov
pop
sub
dec
icebp
ljmp
hlt
faddl
repz
fldt
ja
xor
inc
jle
jecxz
xchg
dec
add
popa
into
insb
cmpsl
and
inc
arpl
pop
stos
and
subb
and
pop
add
xacquire
call
add
jge
faddl
mov
push
add
adc
xor
fdivr
xchg
outsb
loope
dec
fadds
call
add
mov
xlat
add
ror
pop
adc
and
out
add
push
mov
inc
mov
inc
mov
xchg
mov
mov
das
sbb
stos
fsubp
dec
shrl
add
pop
cmpsb
xchg
mov
lods
adc
shl
jo
mov
sar
ds
push
add
jno
sbb
icebp
inc
inc
sub
je
jb
rcl
jb
mov
push
xor
sbb
mov
push
push
jb
dec
into
mov
and
sbbl
ret
lret
gs
push
push
ja
loope
xor
cmpsl
adc
je
push
cmp
cwtl
stc
dec
and
xchg
jb
lahf
lods
push
xchg
and
add
testb
addr16
in
jae
adc
arpl
outsb
pop
loop
icebp
mov
andl
mov
mov
inc
addr16
roll
push
push
fs
add
mov
lds
mov
jns
loop
inc
jb
mov
popa
fs
dec
inc
push
aam
pop
lret
je
xlat
cmp
loopne
call
jle
rcl
stos
ds
insl
rcl
ljmp
xchg
out
jle
arpl
mov
loope
jo
add
negb
iret
rcrb
testl
fs
ret
adc
jp
and
jbe
xchg
adc
nop
inc
jne
mov
pop
pop
or
dec
jns
xor
sarl
pushf
push
out
call
js
and
and
dec
inc
movsl
jno
mov
inc
sbb
sub
outsl
jno
push
andb
test
sub
push
cmp
xchg
add
mov
mov
xchg
push
xchg
jo
or
push
adc
dec
pop
mov
sarb
xor
inc
adc
mov
xlat
xor
dec
push
js
mov
int3
mov
push
addr16
mov
push
shr
popa
out
inc
shrl
sti
jl
adc
fiaddl
adcb
push
cmp
xor
jno
outsb
mov
inc
xchg
mov
cs
repz
icebp
lds
jno
adc
repz
xchg
mov
add
or
out
jecxz
je
inc
adc
mov
adc
movb
stos
add
lret
in
pushf
in
fildll
scas
bound
int
daa
pop
sub
xchg
out
je
jmp
mov
xor
xorb
push
add
inc
dec
arpl
add
or
xor
cmpsl
stos
add
pop
fdivrs
out
push
in
mov
nop
xor
push
and
les
inc
add
jb
inc
mov
out
arpl
inc
out
and
xchg
insl
jns
bswap
push
xor
add
sub
push
outsb
sub
mov
inc
hlt
adcl
inc
out
ds
xchg
mov
andl
dec
dec
xchg
sarl
jecxz
xor
in
and
les
mov
inc
out
clc
into
push
out
ficompl
aam
jecxz
jne
and
addl
cmpsl
adc
clc
sar
inc
or
test
mov
mov
je
or
pop
sub
jae
xchg
push
mov
dec
incb
cmp
inc
dec
icebp
push
push
jae
mov
and
fbld
push
lret
out
jge
pop
into
sub
insb
out
jo
jp
sahf
or
pusha
outsl
jb
ds
in
or
add
sub
int3
out
mov
add
adc
cmp
mov
and
mov
ret
pop
fs
xlat
xor
dec
sub
imul
aad
xor
lods
push
and
push
cmpsl
and
xchg
and
pop
fmull
mov
inc
and
cmp
pop
fidivl
jecxz
push
pop
or
popa
cmovl
inc
outsb
xor
jmp
es
pushf
push
pop
mov
rclb
into
mov
xchg
shll
outsb
pop
fisubrl
pusha
jle
push
adcb
les
xor
in
popa
dec
xor
dec
pop
push
jbe
cmp
sbb
and
clc
adc
push
xor
filds
jle
mov
arpl
xchg
cmp
outsb
add
stc
shll
xor
shlb
pop
ljmp
ret
add
add
icebp
xchg
lods
push
mov
jle
in
loopne
mov
pop
mov
add
je
xbegin
push
xor
add
inc
cmp
into
ljmp
inc
push
shl
scas
insb
xor
adc
test
out
cmc
shlb
inc
dec
add
cmp
sbb
aad
xor
dec
mov
popa
and
dec
iret
out
adc
inc
outsb
push
push
inc
jne
sbb
out
jle
mov
loope
popa
inc
popa
arpl
ds
and
lock
aaa
arpl
mov
xor
loope
sub
lcall
mov
push
mov
cmc
out
mov
loopne
mov
mov
bound
cmc
mov
rcll
cli
stos
adc
and
in
xlat
out
jne
cs
cmpsl
and
push
jb
and
data16
inc
movsl
ds
mov
push
out
xlat
xchg
out
adc
mull
and
xchg
ret
pop
in
pop
and
xor
sub
mov
stc
cwtl
sbb
inc
outsb
jge
and
or
loope
rsqrtps
mov
into
insl
popf
jmp
jae
popa
add
mov
fs
clc
je
jno
cltd
jae
loope
mov
adcl
mov
adc
push
dec
mov
pop
cs
dec
jecxz
cmc
mov
mov
mov
ret
fisubrl
divl
les
aam
mov
std
adc
imul
lea
fimull
inc
leave
popa
testl
push
inc
push
mov
outsb
jno
xor
dec
in
pop
push
sbb
xor
inc
jle
iret
movsb
stos
mov
pop
sub
rcl
adc
inc
outsb
and
rol
mov
popa
xchg
pop
and
shll
or
xchg
arpl
je
mov
sbb
inc
sub
xchg
movsb
repz
inc
and
dec
imul
les
cmpsl
xor
xchg
test
inc
imul
es
xchg
ds
jecxz
aaa
push
push
mov
xlat
addr16
cwtl
xor
cmp
adc
xor
push
push
jecxz
out
sub
pop
shrl
push
mov
ljmp
xchg
repnz
push
adc
mov
xchg
bound
inc
repz
dec
and
xor
dec
jle
fiaddl
cmp
fcmovb
xor
pop
iret
xchg
mov
adc
push
arpl
mov
jae
inc
loop
mov
in
mov
xor
je
cmpsb
fadd
xchg
adc
es
push
mov
push
je
xchg
fisubs
cs
test
out
push
push
je
add
mov
jae
dec
loope
xchg
movsl
je,pn
sub
cli
les
mov
mov
rol
test
mov
ret
mov
xor
or
sbb
jecxz
out
leave
mov
adc
in
jle
pop
or
sbb
jno
mov
popa
lea
fs
push
push
xchg
into
repnz
xchg
xchg
cmc
push
dec
pop
mov
stos
and
in
xchg
add
insb
lret
jp
inc
dec
mov
lcall
test
xlat
jne
adcl
out
sbb
in
dec
out
ja
jle
ja
jecxz
add
sub
rclb
fstpt
add
inc
cmp
mov
inc
mov
scas
mov
les
inc
xchg
out
div
adcb
aas
dec
push
lret
mov
outsl
test
push
push
xchg
out
clc
xchg
rcrl
cli
xor
mov
add
inc
cs
cltd
adc
jns
loop
js
xor
mov
xor
sti
jno
aam
and
jb
add
stc
adc
mov
gs
mov
and
out
out
xor
sti
jge
xchg
mov
fmull
sub
adc
ret
div
je
cmpsl
push
and
mov
adc
cmpsl
xor
adc
out
dec
cs
loope
mov
xchg
js
clc
inc
out
jb,pt
icebp
xor
push
lea
mov
jne
jae
sbb
xchg
arpl
adc
jno
jge
mov
je
fdivrp
mov
push
ret
shll
xor
xchg
xchg
loopne
mov
cmpsl
xlat
sbb
xor
les
sbb
fdivrs
dec
ljmp
mov
test
add
loop
pop
addr16
inc
pop
jo
repnz
mov
mov
mov
out
dec
lahf
push
push
icebp
aam
jecxz
lcall
jmp
inc
mov
ret
cmp
popa
inc
rcll
dec
mov
adc
fs
mov
or
in
jb
into
ret
jle
adc
xlat
outsb
inc
dec
repnz
xor
cmp
lret
mov
das
mov
dec
pop
jmp
adc
xor
arpl
xchg
push
push
add
ret
movmskps
or
mov
fsubrs
or
mov
adc
xor
add
adc
sub
push
mov
push
mov
dec
cli
adc
adc
add
jp
push
lods
popa
aam
ret
mov
in
sbb
dec
js
jae
lds
inc
or
ja
dec
cmp
adc
push
xchg
pop
adc
pop
adc
outsb
imull
jne
xchg
add
inc
arpl
cmp
push
into
ret
ret
jo
xchg
sub
mov
into
rcll
xor
inc
inc
mov
xor
add
add
xor
bound
pop
and
and
jo
mov
addl
mov
and
mov
push
in
int
inc
push
divl
fs
iret
ret
fs
mov
push
ret
xchg
and
hlt
cmpsb
mov
push
shl
jne
mov
bound
ret
stc
pop
cmpb
neg
pop
mov
sti
clc
sub
pop
hlt
adc
and
enter
scas
xor
ss
push
mov
xchg
mov
xor
insb
loope
icebp
mov
mov
xor
jne
outsb
int
push
divl
sub
lods
xchg
inc
jecxz
pop
ret
les
mov
sub
shll
mov
adc
popa
inc
mov
mov
push
mov
inc
bound
pushf
xor
mov
icebp
push
and
xor
and
in
sbb
loope
mov
outsb
xchg
in
leave
daa
into
xlat
jp
mulb
xchg
popa
jae
mov
mov
xor
or
jne
rcll
mov
adc
mov
jo
push
and
and
xchg
mov
shr
xchg
xchg
and
and
loop
imull
adcl
ret
add
out
pop
popa
rcr
shl
fcom
mov
and
cmp
and
mov
out
xchg
rcll
ret
out
and
cld
aam
push
and
mov
jo
dec
bound
imul
repz
leave
ja
je
adc
sbb
sbb
inc
adc
jmp
inc
out
roll
arpl
rcrl
icebp
sbb
xchg
loop
add
test
bound
ds
pop
fs
push
rorl
or
cmp
add
jle
repz
add
pop
mov
daa
sub
testb
push
in
mov
push
inc
adc
mov
jne
push
roll
and
mov
dec
ret
cmpsb
mov
pop
mov
or
out
inc
jl
out
pop
add
loope
int
sahf
inc
xor
add
xchg
into
push
add
adc
pop
and
dec
and
out
into
xor
shrl
sub
scas
popa
jecxz
mov
ret
adc
xlat
push
pop
mov
add
ret
sub
sub
xor
rclb
mov
adcl
daa
fs
sbb
lret
cmp
les
leave
mov
repz
or
or
mov
pop
pusha
add
and
popa
adc
cmpsl
and
or
icebp
pop
and
xchg
jne
into
pop
xor
les
adc
inc
xchg
dec
dec
inc
loop
cs
in
inc
or
add
mov
fimuls
je
repnz
orb
xor
dec
ds
loop
addl
add
xchg
loope
mov
testb
add
mov
xlat
mov
jb
dec
iret
ficompl
out
icebp
and
inc
subb
jge
fstpt
jno
dec
out
andl
push
jl
jnp
hlt
rclb
sbb
pop
inc
sub
dec
mov
mov
out
adc
add
xor
jae
cmp
daa
mov
inc
stos
xchg
les
dec
rorl
sub
out
adc
add
into
xchg
loope
int3
add
loop
dec
nop
rorl
and
popa
test
push
je
mov
adc
mov
fsubs
imul
test
add
dec
add
mov
in
imul
imul
fisubs
ss
stos
test
dec
arpl
shrl
mov
pop
mov
push
add
subl
fs
cs
sbb
mov
xor
les
add
push
jecxz
ds
test
push
mov
ret
push
shrl
imul
mov
sub
jns
jbe
js
adc
in
jo
mov
dec
jp
aam
mov
mov
je
dec
or
leave
push
xchg
lret
push
lret
cmc
rcl
push
adc
loope
mov
xor
shlb
shlb
xchg
daa
inc
xor
push
adc
mov
adc
rorl
push
loope
mov
dec
imull
push
lret
inc
push
popa
jle
loop
mov
sub
inc
jo
icebp
cs
mov
shll
stos
or
stos
lds
push
std
shll
fidivrs
jb
icebp
mov
jle
daa
add
sar
mov
in
push
jecxz
xlat
mov
push
inc
sbb
out
xor
out
aaa
lret
sbbl
loop
addb
or
scas
dec
les
dec
ret
pusha
out
add
push
inc
leave
cli
dec
add
push
sub
push
inc
mov
and
arpl
fisubs
and
fdivrl
ret
inc
xor
or
dec
int3
add
push
aam
mov
ds
sbb
ret
test
mov
inc
adc
xor
xor
mov
ret
es
les
repz
adc
rol
fisubrs
out
xor
xorb
shll
bound
lahf
push
push
dec
dec
loope
in
add
jb
xlat
push
lods
add
add
inc
popa
mov
sbb
loop
inc
ret
sbb
gs
insb
push
loope
int
std
jne
repz
pop
mov
sub
push
cld
filds
scas
adc
adc
ret
sbb
xor
aam
add
mov
adc
bound
les
xor
add
shll
sub
je
sub
xor
pop
fbstp
mov
push
cmpsl
mov
call
sbb
push
adc
xchg
push
adc
mov
push
testl
and
scas
cmp
shlb
ja
inc
push
adc
pop
mov
xchg
into
incb
push
jae
ds
addr16
inc
adc
out
into
rcl
pop
in
sub
jecxz
inc
test
add
jmp
add
div
mov
rolb
push
mov
movsl
loope
ret
push
push
mov
ret
push
cmp
mov
roll
and
out
in
xor
adcb
popa
or
sub
mov
outsb
jno
out
shl
mov
jbe
call
fidivrs
call
add
out
dec
mov
shlb
adc
push
rcll
xchg
in
mov
xchg
out
jle
add
lock
pop
mov
insb
mov
mov
push
mov
push
mov
lods
imul
push
or
icebp
ds
xor
shlb
movsl
cli
stc
xchg
or
jb
fists
clc
fcoml
movsb
adc
test
xor
xor
test
push
push
add
out
add
adc
jno
push
dec
loop
xchg
pop
push
push
add
dec
inc
jle
std
fs
and
sbb
or
mov
or
xor
xlat
pop
inc
push
push
and
sub
arpl
cmc
scas
push
repz
mov
clc
lds
push
pusha
pop
push
add
repnz
mov
mov
push
popa
adcb
inc
divl
rcll
mov
cwtl
jno
and
xchg
rcll
rcl
std
inc
ret
or
inc
sbb
rol
insb
stc
popa
out
jne
push
adc
inc
out
push
xchg
shl
js
mov
data16
lock
outsb
fidivs
mov
adc
xchg
inc
inc
hlt
inc
mov
sbb
fmul
mov
std
xchg
jo
add
cmp
jae
call
and
divl
clc
jecxz
mov
adc
sub
xlat
shll
mov
push
and
test
xchg
cmp
jne
shlb
xchg
dec
adc
rcrl
mov
adc
insb
adc
mov
pop
xor
push
icebp
pop
insl
out
inc
xchg
outsb
arpl
dec
repnz
push
adc
pop
jb
jnp
sub
push
stos
jmp
jo
out
add
mov
cmpsl
mov
lods
test
inc
loop
inc
mov
lcall
rolb
push
or
rcrl
jge
rcrl
les
push
roll
and
fcoml
mov
mov
mov
hlt
or
dec
lret
push
adc
test
mov
push
mov
push
int3
mov
adc
cmp
je
push
mov
jle
enter
push
cs
ret
icebp
scas
movsl
divl
fsubrl
or
fimull
push
ret
xchg
inc
push
mov
jb
orl
sub
aam
mov
xchg
jno
fs
sti
xor
xor
les
mov
lods
push
sub
push
jge
mov
xor
dec
subb
push
cwtl
cmp
push
push
inc
push
sahf
negl
push
lret
xor
push
jb
add
ret
enter
push
testb
outsb
ljmp
adc
ljmp
add
andb
xor
mov
popa
mov
inc
push
mov
jns
jb
ds
adc
jl
mov
scas
xor
fld
lock
add
xorb
mov
pop
mov
mov
sub
jae,pn
xor
dec
mov
lea
aas
outsb
pop
push
xor
jecxz
adc
pop
mov
jb
push
and
sarb
mov
add
outsb
roll
not
mov
aas
and
mov
hlt
jnp
cs
adc
loopne
fmul
test
imul
push
xor
mov
mov
jle
xchg
cmp
ret
call
jnp
notl
jne
mov
inc
dec
roll
dec
adc
arpl
push
insl
imul
or
jae
in
loopne
cmp
add
repz
sub
jecxz
bound
cmpsb
mov
movsb
inc
push
mov
mov
sbb
fadd
adc
xor
icebp
ret
adc
imul
fs
push
xchg
mov
push
inc
mov
xor
repz
jbe
dec
shll
lods
mov
push
jno
xchg
dec
mov
mov
bnd
out
pop
shlb
data16
fidivl
cmp
xor
ljmp
mov
add
repz
dec
push
mov
jne
subb
sbb
mov
and
dec
rcrb
cwtl
lock
mov
addb
and
adc
je
add
ret
add
sar
pushf
cmp
ret
shll
data16
ss
or
dec
cmp
adc
pop
test
mov
sbb
out
push
mov
mov
cmc
xor
rcll
jg
jne
cs
pop
add
ds
lds
out
incl
loop
and
mov
cmp
mov
shlb
out
lods
jecxz
sahf
cs
addr16
outsb
mov
fwait
sbb
add
xor
subb
cmpl
test
popa
roll
cmpsb
sbb
dec
cld
jne
les
dec
and
ds
outsb
adc
mov
adc
testl
pop
add
xchg
or
and
and
add
mov
sbb
cmpl
in
mov
shl
jecxz
push
pop
les
sub
jmp
push
out
and
into
xor
mov
dec
fimuls
cs
xchg
dec
add
into
add
in
mov
mov
sub
mov
into
cmp
mov
ret
subl
xchg
imul
inc
aaa
mov
xor
push
mov
mov
jae
out
jb,pn
cmc
jns
xor
sub
lods
mov
dec
add
add
cmpsb
dec
push
out
test
inc
mov
dec
faddl
push
les
mov
adc
xchg
and
fs
jge
ljmp
punpcklwd
test
repz
xor
cmp
add
push
dec
and
aam
xorl
mov
mov
rcll
je
dec
or
and
pushf
xor
push
rolb
jecxz
add
mov
icebp
xchg
repz
les
mov
mov
add
pop
xchg
xor
or
xlat
int3
mov
inc
stos
inc
cmp
sub
loope
shl
lock
jb
and
popa
xor
push
mov
cs
cmp
notl
cmp
leave
jl
das
add
xchg
sarb
je
cmp
or
pop
loope
out
xor
xchg
mov
mov
adc
loope
and
outsb
aam
dec
xor
roll
shrl
push
and
clc
ret
sti
pushl
fists
mov
cmp
and
and
cltd
and
mov
push
mov
pop
push
sbb
jno
es
addb
icebp
inc
leave
inc
dec
out
xor
js
mov
out
mov
inc
leave
xor
cmpsb
jge
pop
xor
push
and
fs
icebp
jo
mov
jmp
rorl
rcrb
in
cmp
out
cmpsl
rdtsc
das
add
push
push
inc
mulb
into
push
bound
pop
adc
clc
xlat
adc
lret
into
js
mov
js
decl
inc
rcll
xchg
aam
mov
push
jle
dec
scas
inc
adc
jb
push
dec
and
xchg
out
popf
pop
arpl
lahf
cmpsl
inc
addr16
mov
mov
mov
enter
ljmp
dec
mov
adc
cmp
mov
repz
gs
mov
lea
mov
cmp
stos
in
push
adc
testl
inc
push
adcl
ret
xchg
push
out
inc
scas
jb
lods
int
je
idivl
dec
mov
test
out
pusha
inc
lea
rcrb
jbe
push
pop
push
pushf
arpl
xchg
sbb
shlb
inc
mov
adc
pop
push
sbb
in
fs
cmc
jno
pop
cmp
out
fldl
loope
addb
add
xor
fsts
fs
push
xor
loope
xor
jne
adc
div
outsl
das
out
leave
out
lods
push
push
in
cmp
in
std
or
lret
clc
lahf
shld
push
mov
xchg
adc
xor
roll
dec
push
adc
cs
lds
in
sbb
pushf
push
ret
les
mov
movsl
cmp
loop
les
inc
les
mulb
xchg
mov
repnz
std
xchg
inc
xor
and
jle
xor
in
mov
stos
and
mov
jns
lcall
addr16
jbe
into
add
xlat
out
lcall
les
sub
subl
push
jb
xchg
mov
imul
xor
adc
xchg
inc
and
jne
rcrl
das
jle
aam
dec
inc
into
pop
inc
ret
adc
nop
sub
jp
aas
loope
les
push
jae
loop
xor
push
and
and
xchg
fdivr
outsl
push
mov
fld
and
repz
add
lock
add
push
sub
inc
rorl
mov
dec
fnstenv
je
rorl
loopne
lret
jmp
and
sbb
add
popa
loopne
adc
push
in
adc
push
push
mov
shlb
inc
add
int
mov
mov
lret
push
xor
loopne
and
push
xor
int3
and
mov
icebp
lret
push
mov
jo
nop
es
jo
loopne
nop
pop
cmp
and
xor
xor
mov
addb
outsb
sarb
dec
and
shlb
jno
add
mov
lret
ret
sub
shlb
sbb
and
subl
mov
xchg
ret
pop
nop
pop
fwait
pop
xor
orl
push
mov
rcll
dec
mov
out
and
pop
popf
sub
popf
mov
cmc
mov
jb
into
sarl
mov
punpcklbw
mov
aas
sub
pusha
adc
cs
push
pusha
and
ja
hlt
sbb
mov
icebp
sti
pop
lock
shlb
ja,pn
adc
mov
push
mov
sarb
pop
lcall
xchg
into
fwait
mov
ss
mov
das
mov
scas
pop
xchg
mov
and
mov
push
jle
dec
adcl
mov
orb
mov
sub
mov
mov
mov
inc
jae
or
dec
and
mov
scas
popa
dec
adc
mov
rorl
out
adc
mov
enter
cmpxchg
push
lahf
and
mov
mov
mov
hlt
push
and
sub
movb
and
pop
das
mov
mov
add
dec
mov
mov
into
inc
stos
pop
mov
andl
add
stos
mov
sub
and
add
jg
pop
or
adc
pop
shl
dec
jne
and
pop
jb
mov
jne
push
call
add
addb
adcl
fnstcw
mov
repz
inc
out
adc
jecxz
out
or
je
mov
fildll
ret
flds
xlat
test
jb
mov
mov
xor
je
out
mov
xchg
mov
adc
mov
pusha
cmp
xor
ds
cmpsb
arpl
mov
mov
inc
and
and
sbb
jae
xchg
and
scas
popa
xor
out
or
mov
popa
out
in
out
xor
inc
and
call
mov
push
mov
ljmp
push
pop
mov
fbld
adc
idivb
mov
das
rcll
fnstenv
jnp
test
add
dec
push
loop
into
adc
and
ficomps
xlat
push
imul
inc
stos
roll
inc
and
adc
and
jp
pushf
adc
adc
mov
xor
pop
dec
xor
mov
clc
sub
enter
and
inc
scas
xor
les
add
repz
lret
jecxz
inc
and
push
leave
sahf
daa
adc
cmpsl
push
out
or
cwtl
rolb
mov
hlt
and
add
loope
faddl
iret
xor
dec
push
and
jmp
shll
dec
push
mull
mov
inc
icebp
adc
daa
mov
std
orl
mov
dec
fsubs
iret
cmp
cld
mov
dec
jno
lahf
jno
lahf
and
and
loope
and
xchg
popa
daa
mov
mov
and
les
and
idivl
add
shlb
std
jle
push
add
xchg
xchg
ja
adc
std
in
adc
mov
mov
in
imul
psubw
ret
into
adc
mov
pop
mov
call
xchg
repz
and
lahf
inc
adcl
xor
xchg
mov
test
inc
sbbb
adc
cltd
mov
push
test
subb
jae
mov
in
jo
jg
jns
rolb
sub
mov
cmp
sub
movsb
push
loopne
test
dec
mov
inc
jecxz
mov
xchg
outsb
mov
ret
je
clc
popa
mov
cs
mov
sbb
jecxz
ret
sub
nop
jae
mov
cmpsl
push
int3
push
push
ja
mov
xchg
jae
pop
push
subb
add
sbb
mov
nop
ret
mov
lds
gs
mov
rep
sbbl
rcll
sub
mov
jle
out
mov
and
mov
shll
outsb
jae
je
insb
mov
xlat
popa
std
mov
cld
loop
ret
mov
push
pop
adc
cmc
jle
outsb
adc
into
xchg
daa
push
push
inc
shll
cmp
adc
jnp
into
stc
aam
xor
and
and
push
test
adc
shll
out
inc
push
pop
fs
dec
adc
and
dec
dec
mov
xor
push
repz
mov
mov
dec
fsub
xor
roll
jmp
xor
cmpl
add
xor
inc
inc
in
cwtl
mov
mov
outsl
sub
outsb
xchg
adc
mov
and
add
imul
in
xor
mov
and
sahf
mov
rclb
jecxz
cmp
mov
jb
loopne
add
popa
fwait
pop
cmpsl
mov
jae
dec
xor
adc
xchg
dec
jo
je
pop
outsl
pop
fs
push
les
bound
cwtl
add
xor
adc
jno
jae
cmc
loopne
add
xchg
shr
xor
push
addr16
loopne
xor
mov
xor
jmp
lock
inc
xor
test
inc
arpl
dec
test
outsb
loop
les
adc
mov
pop
push
add
rcl
adc
repz
xchg
loopne
call
jae
xchg
push
addb
push
mov
add
lcall
in
shll
and
in
pop
add
ljmp
xor
bnd
mov
jmp
outsb
push
sbb
cwtl
push
shrl
shrl
mov
or
adc
shll
loope
cmp
or
jle
adc
inc
imul
scas
addr16
jmp
dec
xor
mov
stos
add
not
sub
into
add
es
cmpl
add
repnz
push
fs
inc
push
inc
test
ror
xor
sub
popa
push
cmp
mov
jae
inc
jle
push
xor
out
and
jns
out
into
mov
jns
push
mov
and
and
outsl
push
mov
and
test
out
mov
xor
shll
xchg
lds
lret
shll
pop
ret
mov
push
xchg
xor
popa
movsl
stos
stos
mov
and
or
addr16
outsl
dec
cs
xor
mov
push
add
jne
adc
xlat
shl
xor
adc
test
roll
sti
call
add
lock
adc
xor
push
addr16
mov
xor
cmc
and
inc
fisubs
and
out
jecxz
adc
and
add
imul
fisubl
or
add
je
andl
push
add
shll
push
out
adc
repz
mov
and
movsb
ds
xchg
lahf
xchg
icebp
push
mov
loopne
pop
dec
pop
fisubs
push
je
jns
fdivl
bound
xchg
jmp
out
icebp
shl
jae
loope
ret
outsb
jp
mov
inc
dec
jno
push
xchg
jge
adc
shll
and
mov
or
into
les
mov
jno
movsb
and
inc
loopne
and
ljmp
adc
inc
xor
and
add
add
sbb
push
sub
adc
jb
adc
aaa
ret
mov
test
mov
cmpl
cmp
rcrb
sar
xor
ss
ja
pop
fwait
aas
mov
sub
shr
nop
inc
inc
rcl
inc
mov
xchg
mov
mov
out
adcb
ret
jecxz
inc
adc
and
mulb
inc
add
icebp
sti
sub
add
fwait
dec
in
scas
imul
aas
or
mov
ds
roll
pop
mov
aad
pop
hlt
testl
ds
xchg
jecxz
rolb
shr
lds
pop
dec
lock
pop
push
jb
mov
imul
add
movsb
icebp
cmpsb
mov
rorb
push
mov
add
adc
js
repz
fistl
out
fildl
mov
jmp
stc
mov
outsb
push
push
fisubrl
xor
imul
xchg
adc
or
xlat
cmp
testl
fildl
mull
mov
lahf
out
shlb
sbb
jns
pop
and
mov
popa
out
hlt
testl
add
je
mov
inc
repnz
or
dec
xor
jnp
xlat
push
fildl
cmp
jl
dec
cmp
roll
lret
xchg
out
mov
xor
push
jnp
or
xchg
je
icebp
push
and
cmpsl
loope
cmp
xor
jns
xchg
es
xor
adc
out
shlb
and
push
jno
cmp
add
loope
loop
call
outsb
out
jbe
push
out
lds
cld
push
jle
icebp
iret
rclb
add
or
fcmovb
xor
mov
add
repz
adc
and
mov
and
lock
xor
xor
mov
popa
xor
shl
adc
sub
cmp
outsb
sub
inc
roll
and
and
ja
pop
pop
inc
inc
ljmp
mov
call
push
sbb
sbb
cmp
jne
into
xlat
and
jns
fs
pop
push
jne
jle
out
jb
mov
xchg
inc
mov
dec
and
aam
shrl
out
shll
inc
xor
mov
mulb
shll
mov
mov
mov
inc
mov
adcl
xchg
mov
stos
mov
mov
jecxz
push
or
xor
lock
adc
and
cmp
cwtl
xchg
outsb
ret
add
inc
add
icebp
shl
adc
arpl
jne
push
shrl
dec
dec
fs
mov
jle
jnp
push
ret
xor
xor
adc
mov
pushf
add
andl
mov
xor
xchg
into
xor
jb
arpl
mov
mov
cwtl
ja
sarl
push
loop
xor
and
cwtl
xchg
jecxz
inc
repz
and
aam
inc
and
adc
sarb
pop
sbb
push
sub
jecxz
xlat
mov
jne
shll
pop
xor
ret
icebp
mov
loope
and
insl
jo
jo
xchg
cwtl
addb
rol
xor
jecxz
adc
andl
popa
inc
mov
in
out
subb
xorb
outsb
dec
inc
xchg
xor
and
xlat
ret
in
movsl
xor
outsb
cs
mov
push
mov
dec
and
out
les
inc
jecxz
sub
xchg
fbstp
out
xlat
psubsb
push
mov
and
icebp
cs
xor
jo
in
jge
call
cmpsb
xor
push
or
push
push
xchg
cs
mov
add
mov
jl
stos
movb
pop
and
push
fildl
inc
mov
xlat
loopne
push
jno
inc
test
xor
adc
jecxz
les
mov
pushf
aas
push
in
and
repz
pop
adc
dec
xchg
loope
jge
mov
out
xchg
jmp
jo
cmp
sahf
and
push
data16
or
fsubl
fadds
cmpsb
adc
push
inc
push
pop
and
mulb
push
jae
data16
mov
repz
jno
shll
hlt
and
dec
adc
out
bound
inc
das
sbbl
ret
cmpsb
imul
mov
mov
add
add
imul
mov
shll
pop
pop
aam
inc
insb
pop
sbb
jns
and
or
into
fs
add
and
and
mov
push
out
test
andl
push
popa
daa
adc
addr16
mov
sub
out
loope
jmp
rorl
sbb
xor
lods
jecxz
mov
push
sbb
ss
ret
cld
loopne
jno
adc
xchg
mov
inc
shll
fndisi(8087
les
movsb
subl
add
jbe
xchg
mov
insb
sbb
sahf
out
enter
inc
shlb
add
sbb
icebp
inc
mov
inc
mov
test
loope
add
cmp
fwait
pop
les
cmp
jo
jo
ja
popa
outsb
cmp
inc
lods
add
outsl
jo
add
xor
lahf
ret
add
push
test
jae
addr16
in
push
xor
icebp
lods
push
popa
sbb
pop
xor
sbb
jb
bound
pop
xor
shll
xor
dec
mov
and
adc
cmc
repnz
pop
dec
add
mov
xchg
popa
repnz
mov
xor
pop
das
bound
les
fsubrs
ret
fs
xlat
cs
add
cmpsl
ret
mov
push
xchg
mov
adc
add
fs
xchg
mov
push
sbb
mov
shll
outsb
fst
xchg
dec
dec
add
rorb
rcll
and
test
dec
cmp
xor
push
and
dec
leave
mov
jo
out
ljmp
inc
mov
cmpsl
std
popa
cmp
mov
cwtl
and
and
fwait
adc
out
adc
and
rcll
mov
fcmove
mov
adc
daa
insb
jns
pop
add
outsb
mov
sbb
out
mov
icebp
sbb
adc
jbe
push
cs
xchg
into
pop
les
or
dec
push
and
xchg
int
loop
leave
stos
xor
outsb
jecxz
xor
pusha
or
vandps
add
insb
je
mov
repz
xlat
sbb
outsb
mov
loope
pop
add
bswap
cmp
jno
sub
out
jb
adc
xchg
push
adc
xchg
cmp
dec
shl
pop
iret
sub
push
jno
jle
xlat
outsb
cmp
xor
lods
add
ds
arpl
rorl
and
sub
dec
imul
push
adcb
notl
inc
das
cmc
sbb
repz
mov
xor
jae
pusha
js
orl
repz
add
aad
jno
mov
shl
adc
sbb
cmpsb
mov
data16
cwtl
ljmp
xlat
inc
mov
ret
cmpsb
push
add
xor
or
inc
or
and
jns
jle
push
sub
inc
mov
push
jae
sbb
pop
mov
mov
mov
add
mov
pop
and
xchg
lcall
jmp
mov
jo
cwtl
repz
les
mov
dec
and
adc
sub
add
je
adc
dec
lock
jo
bound
sbb
sbb
pop
push
mov
mov
push
adc
in
bound
dec
jb
adc
out
xchg
xor
jle
mov
js
mov
adc
xor
and
jo
in
push
dec
loop
xorl
jmp
add
jno
bound
les
pop
xlat
shrb
add
push
dec
pop
clc
shl
mov
push
pavgb
mov
or
nop
test
adc
adcl
jmp
push
fwait
dec
lret
mov
rolb
frstor
jo
shll
test
inc
jg
or
pop
and
mov
mov
push
loopne
popa
push
ljmp
testb
lea
sub
adc
call
andb
push
adc
and
xor
push
ret
loope
push
xchg
call
and
out
jno
jle
jb
ds
mov
rorb
addr16
ret
and
xchg
pop
xchg
shll
push
repz
jae
cwtl
lcall
inc
rcl
xchg
push
add
xor
jae
outsb
and
les
push
or
inc
push
loop
orl
cmc
call
mov
pushf
jb
jl
daa
jecxz,pn
xchg
sub
pop
call
dec
mov
add
ret
cltd
cmpsl
cmc
mov
jle
add
and
ljmp
sub
inc
ret
outsb
pop
xlat
or
rol
jno
cs
mov
roll
in
adc
into
pop
stos
pushf
cs
xorb
push
in
lea
out
inc
jo
inc
sti
jle
mov
jle
sub
xor
adc
testl
pop
sbbl
loopne
rcl
jno
xlat
cmp
and
out
jmp
fs
inc
xor
repz
push
shl
clc
cwtl
outsb
jle
cli
mov
mov
sbb
test
les
mov
and
mov
cmp
xchg
xor
jmp
lock
repnz
jge
shlb
dec
fidivs
enter
sub
mov
outsb
shlb
push
xchg
jns
clc
mov
outsb
and
xor
and
mov
mov
push
loope
mov
cmp
add
push
xor
cli
jns
stc
fs
push
jecxz
inc
mov
sar
int
data16
jbe
cmpl
sub
sub
inc
jno
mov
push
out
fbld
and
bound
push
outsb
sub
push
cmp
inc
sub
pusha
push
and
inc
mov
out
in
inc
dec
mov
mov
mov
shrb
fcoml
ds
mov
out
xchg
jmp
and
arpl
shrl
dec
lds
push
and
cmp
cmpl
arpl
hlt
out
xor
inc
jle
scas
add
or
pop
add
push
dec
je
add
or
or
in
aam
into
push
pop
imul
push
push
ret
dec
call
je
mov
arpl
jne
adc
inc
jb
mov
mov
mov
push
push
add
popf
push
jle
push
in
jp
push
insl
and
xchg
sub
rol
and
stos
push
sub
fildll
adc
add
cmp
repnz
push
das
add
adc
aam
je
pop
and
outsl
bound
inc
fsubl
test
je
dec
fcompl
pop
sub
scas
push
push
addr16
mulb
adc
loop
test
sub
fiadds
xchg
xorl
dec
jle
sbb
pop
jge
popa
adc
fidivrs
dec
sub
ret
add
out
jo
jle
shll
loope
jecxz
shrl
shlb
arpl
push
and
mov
add
call
xchg
ds
push
and
push
test
mov
xchg
aas
cs
dec
mov
outsb
loopne
out
lock
lcall
mov
into
push
xor
sbb
mov
out
add
jno
push
popa
sbb
mov
out
lcall
loop
mov
ret
js
les
mov
and
rolb
pop
xchg
add
xchg
sub
pop
pop
and
add
hlt
imul
loope
adc
mull
jmp
mov
push
inc
xchg
xorl
jne
push
jno
sub
arpl
inc
mov
and
daa
mov
bnd
data16
mov
adc
cmc
orl
dec
inc
inc
in
loope
out
push
roll
enter
mov
arpl
aad
and
push
xor
xor
xchg
jge
stc
cmp
sub
sub
inc
rcll
repz
push
and
push
push
dec
arpl
jge
rorl
push
pop
jno
xor
xorb
push
sub
test
push
stos
push
xor
scas
dec
dec
jne
roll
jnp
fiadds
or
inc
pop
jae
add
inc
loop
and
mov
mov
jge
xor
mov
into
repz
adc
cmp
xchg
les
mov
and
pop
adc
clc
add
jo
jle
mov
jb
sbb
insb
xchg
ret
cli
ret
add
and
mov
mov
mov
es
push
sub
bound
test
mov
mov
data16
mov
mov
add
and
in
out
add
xor
div
jo
addl
sub
cs
mov
repz
jl
cmp
leave
sbb
inc
adc
ret
xor
pushf
cmp
dec
fists
icebp
adc
iret
ljmp
sbb
arpl
pop
xor
push
cmc
add
outsb
ds
in
xlat
mov
outsb
ret
outsb
loopne
lret
xchg
in
popa
add
sahf
sub
xchg
xor
adc
xor
in
xor
adc
inc
into
or
andl
in
and
out
push
sub
or
dec
sub
cmp
leave
and
sahf
incb
in
pop
push
sarl
push
mov
stc
sub
jle
movsl
and
lods
inc
push
xlat
loope
ficoms
adc
jle
mov
xor
and
stos
dec
push
jle
push
jo
cmpsl
xor
mov
pavgw
mov
jg
cs
icebp
mov
inc
out
cmpsb
andb
divb
dec
loope
fidivl
add
sub
imul
repz
loopne
les
dec
lcall
xor
jns
ret
shll
dec
mov
pop
addl
mov
icebp
and
dec
and
call
add
hlt
xlat
aam
rcll
inc
in
xchg
into
mov
addl
bnd
adc
jo
clc
fstl
cmc
je
insb
push
loope
mov
adc
adc
mov
xor
in
xchg
adcb
mov
rcll
sub
mov
insl
mov
mov
aam
mov
xchg
out
fwait
testl
dec
mov
xchg
xor
add
mov
mov
and
jb
arpl
jle
addb
inc
enter
xchg
push
mov
xchg
mov
xor
loop
outsb
and
adc
mov
orl
and
mov
leave
xchg
push
mov
xor
repnz
xor
mov
push
shl
xchg
push
jb
testl
and
rolb
inc
test
popa
mov
xcrypt-ofb
cmpsl
push
test
repz
pop
mov
call
add
cmovns
dec
mov
and
insl
push
xorb
jo
mov
mov
jle
adc
xor
xchg
add
inc
aas
fiadds
cmpsl
push
dec
add
mov
addr16
fwait
out
mov
mov
daa
xchg
out
xchg
mov
cli
loope
out
or
mov
loopne
adc
addr16
arpl
loope
je
dec
jne
mov
pop
inc
inc
dec
xor
xchg
loop
je
jnp
xchg
add
xor
shr
xchg
and
xchg
mov
push
fsts
inc
je
xchg
mov
xlat
push
mov
fnstcw
pop
jae
cltd
fs
inc
arpl
lock
and
stos
and
dec
out
insl
mov
xchg
sbb
jb
and
call
popa
rcll
clc
inc
inc
jae
xchg
addr16
in
ds
rorl
fbld
insb
mov
jle
icebp
fs
and
and
sub
dec
xchg
add
cli
fisubrl
loope
sub
rolb
jno
repz
ss
jae
mov
push
loop
inc
popa
mov
popa
mov
sub
dec
sub
movsb
xchg
mov
jecxz
mov
dec
xchg
adc
and
stos
fistpll
sbb
push
adcb
scas
mov
and
out
jb
mov
and
push
dec
add
iret
mov
pop
add
cmovs
mov
mov
xchg
mov
pop
pop
pop
loopne
fstpl
xlat
xchg
pop
mov
push
sbb
inc
mov
dec
shlb
aas
pop
sahf
jns
ss
fs
aam
push
rcll
xor
loope
mov
push
scas
push
xchg
and
daa
push
lret
xlat
movsl
loop
not
popa
add
lock
and
inc
mov
push
add
cmp
outsb
push
xchg
mov
dec
and
cmc
mov
popa
push
bound
fwait
xchg
cmpsl
cmc
daa
xor
shl
or
icebp
popa
and
bound
fs
cs
scas
lret
push
icebp
bound
jae
sub
ds
stos
xor
rep
push
negl
ret
dec
sbbb
fldl
push
adc
xor
jge
add
inc
cmp
adc
stos
js
outsb
cmp
das
jne
adcl
int
outsl
rcll
mov
sbb
inc
popa
fcmovu
and
fistpll
fdivl
and
inc
mov
out
outsb
pop
xchg
rcl
je
call
comiss
jle
adc
ds
jge
adc
fnstsw
out
ret
push
inc
into
ret
xor
dec
int
sub
cmpsl
fists
lods
ret
add
fs
inc
dec
mulb
dec
arpl
or
fldenv
xlat
adc
xor
jle
fs
fidivrl
xor
lea
xor
mov
jne
adc
mov
xchg
test
xor
cmpsl
cmpsl
cmpsl
lret
xchg
out
inc
roll
xchg
inc
xlat
jle
fistl
movsb
xor
mov
shl
insb
xchg
ds
push
outsb
add
mov
add
xor
mov
imul
xor
xlat
push
sub
sub
out
je
and
hlt
repz
jbe
fidivrl
into
and
add
cli
popa
fucomip
mov
outsb
test
mov
xlat
sbb
call
xchg
ficoml
xorb
shlb
es
enter
rcll
inc
inc
mov
jge
push
shlb
xor
sahf
and
ret
in
add
mov
adc
movsl
fdivs
jo
testl
arpl
jecxz
insl
jns
xchg
movsb
stos
or
push
ret
push
dec
or
rol
flds
lds
mov
dec
mov
addl
insl
lret
jecxz
in
imul
adc
mov
int3
add
add
into
and
add
cs
repnz
movsl
jae
and
popf
inc
stc
jecxz
jns
cmpsl
jle
xchg
or
dec
mov
nop
aas
and
mov
aas
popa
sbb
sub
lcall
xchg
xor
xchg
icebp
sbb
and
add
push
add
mov
test
std
pop
add
jb
pop
and
sbb
das
orb
jmp
scas
aas
sub
lds
mov
xchg
je
add
call
xlat
shll
adc
adc
xorb
jg
push
rcrb
jmp
jb
jecxz
or
lret
frstor
pop
sub
insl
fisttpll
jae
std
and
add
inc
jbe
jge
xchg
push
ret
or
add
repnz
mov
push
jae
cwtl
andb
mov
shrl
popf
subl
sbb
popf
dec
repz
mov
rorb
test
pop
xlat
ret
adc
in
mov
mov
pop
arpl
mov
repz
adc
notl
push
push
inc
xchg
xorb
adc
adc
in
inc
dec
mov
xor
loope
in
jns
std
jb
test
sub
and
cmpsl
push
cwtl
andb
repz
add
jp
leave
rcll
pushf
and
push
inc
xor
xchg
outsb
lods
pushf
clc
shrl
xor
and
cld
imul
mov
lahf
jmp
jnp
ret
cmp
push
pop
dec
dec
in
mov
lods
xchg
mov
inc
aad
add
inc
inc
and
int3
dec
add
loop
mov
xor
inc
addr16
mov
pop
addr16
add
call
and
push
inc
movsb
jno
pop
cmpsl
push
xchg
ja
sbb
xor
ds
rorl
ja
sub
les
das
add
jae
out
subl
stos
sub
loopne
xor
filds
cltd
push
insb
xorb
xor
xor
js
push
dec
pop
repz
cmp
inc
push
mov
shlb
out
add
push
clc
xchg
jae
xchg
test
mov
pop
mov
es
pop
into
xor
and
dec
xchg
add
mov
imul
outsl
xor
mov
push
adc
xlat
cmp
xor
mov
rol
mov
add
pop
push
jle
pop
outsb
and
mov
or
xor
movsl
jae
push
dec
mov
cmpsb
add
mov
andl
cmpl
in
call
in
mov
mov
in
cs
or
jp
mov
pushf
mov
jae
sbb
sbb
add
inc
and
mov
mov
mov
orb
and
imul
in
lock
aas
mov
xor
xchg
ret
mov
jno
mov
inc
repz
jne
dec
jb
into
push
in
adc
xchg
pop
mov
jne
fwait
xor
pusha
inc
mov
rcll
movsb
lods
xchg
adc
lock
je
cmpsb
adc
fdivs
popa
add
cmp
or
xor
aaa
into
and
pextrw
test
dec
cli
bound
inc
xchg
mov
repz
mov
cmovl
or
jae
mov
or
mov
and
mov
add
and
pop
xor
sbb
push
jg
mov
mov
push
shll
and
pop
in
inc
push
xor
arpl
adc
adc
pop
mov
dec
sbb
jb
fistl
and
shlb
jne
aad
push
stos
inc
and
stos
add
fsub
shll
fstpt
mov
loopne
add
mov
je
and
jno
ss
gs
fcoms
negb
or
mov
and
and
dec
and
fsubs
and
adc
inc
mov
idivb
sbb
xchg
jecxz
out
xchg
popa
jae
push
cmpsl
fs
mov
ror
push
inc
mov
xor
xor
mov
loop
popf
jmp
push
imul
dec
adc
les
idivb
and
jle
fsubs
pop
je
xchg
mov
mov
adc
pop
les
mov
mov
adc
jae
push
les
pop
dec
bound
std
mov
insb
out
and
out
popa
mov
add
adc
roll
mov
jae
pusha
adc
dec
and
lock
bound
les
adc
sub
xchg
xor
push
dec
add
inc
loope
out
inc
test
les
rcl
mov
fisubrs
mov
ret
dec
and
xor
roll
rcrb
pop
inc
sbb
cmp
mov
into
xor
jae
add
push
and
mov
pop
inc
xlat
mov
add
xor
loop
mov
fs
inc
sti
dec
test
cmp
out
je
popa
push
xlat
push
xchg
loope
mov
test
test
inc
shll
icebp
jecxz
je
mov
cwtl
loope
mov
pop
ret
push
inc
bound
jno
addr16
jg
in
jbe
repz
ret
xor
lods
in
xlat
or
mov
scas
icebp
jo,pn
loope
setae
out
jb
in
jmp
inc
out
pop
add
cmp
add
add
test
xor
mov
inc
dec
dec
not
icebp
xchg
xchg
popa
movsl
xchg
imul
pop
and
mov
ds
pop
cmpl
jae
in
and
je
jb
call
adc
xlat
inc
lret
fisubl
mov
inc
dec
loop
stos
cmc
rol
xchg
ljmp
push
stos
mov
outsb
rep
or
xor
in
push
push
xlat
mov
adc
subb
fadds
lcall
aad
ljmp
sub
popa
xor
push
dec
shll
clc
adc
mov
out
pop
add
and
cld
arpl
and
mov
in
jne
loope
mov
imul
repnz
jae
arpl
ret
sbb
jmp
icebp
les
push
push
mov
pop
push
mov
adc
xor
repnz
loope
mov
sarl
dec
pop
imul
push
sahf
cmc
push
pop
inc
ficoms
xor
sbb
fsubl
out
mov
test
and
shrl
jno
les
jnp
pop
inc
jnp
push
loope
push
inc
xor
clc
jno
mov
js
inc
out
ret
mov
xor
xlat
xor
sbbl
fdivrs
xor
out
and
pop
dec
jne
jb
mov
inc
pop
mov
xor
adc
loop
add
and
push
or
add
push
push
popa
xlat
mov
jnp
push
repz
dec
mov
jb
int3
lods
je
jb
les
fwait
into
mov
mov
jnp
push
into
push
cld
push
push
push
inc
mov
xlat
dec
sub
test
out
jb
loope
and
int
outsb
or
movsl
mov
push
push
pop
inc
dec
mov
jmp
add
mov
out
lret
add
mov
out
mov
dec
ds
fsub
adc
adc
mov
adc
movsb
mov
in
mov
push
xlat
shll
sub
je
into
mov
orl
push
jle
push
push
push
stos
std
roll
add
dec
sbb
shll
leave
xlat
ret
lods
or
cmpl
ret
int3
rcrl
ljmp
push
fs
inc
mov
push
ret
jo
out
xchg
and
xor
lods
push
int
push
mov
out
mov
ds
out
mov
rcrl
xlat
push
jge
fs
adc
dec
mov
add
and
mov
sbb
sub
and
leave
stos
xchg
sbb
pop
pop
icebp
push
stos
lods
cwtl
orl
mov
rol
les
outsb
mov
jno
xor
cmc
out
and
je
jle
repz
or
dec
stos
outsb
fisubrl
pusha
scas
rorl
xor
or
xchg
shrl
daa
pop
inc
sub
or
inc
fisubrs
xor
les
dec
mov
xor
icebp
arpl
fs
jnp
test
shl
je
mov
and
dec
pop
lret
lcall
push
push
add
inc
push
pop
mov
xchg
mov
jno
push
aam
and
ret
add
bound
mov
push
jb,pn
mov
push
dec
sub
jge
xor
dec
shrb
jp
lods
mov
push
rcll
push
divl
dec
test
mov
mov
scas
addr16
sti
pop
add
mov
inc
out
add
and
loope
push
push
jmp
popa
je
test
add
sti
inc
xor
icebp
adc
mov
pop
jb
mov
out
adcb
inc
sti
mov
mov
ret
fs
ret
jb
loope
fcmovnbe
and
call
jecxz
and
pop
pop
mov
fs
cmpsl
inc
pop
adc
dec
jmp
push
fwait
shl
daa
addl
push
xor
fmul
fld
or
cmc
dec
and
jae
popa
je
mov
dec
divl
and
bound
cmp
sbb
jno
in
and
outsb
adc
or
or
add
or
and
std
out
push
adc
xor
sbb
ret
push
cmp
pop
push
pushf
jo
cmp
inc
push
out
and
mov
in
leave
out
js
shll
xchg
adc
inc
repz
popa
shl
fwait
xchg
call
mov
xorb
sub
fisubs
rcll
mov
or
jecxz
push
adc
inc
ljmp
and
bound
rclb
add
xor
mov
push
addr16
cmp
nop
xor
inc
and
popa
loop
push
inc
xchg
outsb
arpl
jecxz
icebp
je
in
aad
bound
adc
nop
les
fisubrs
xor
test
pop
sarl
push
mov
sbbl
and
add
mov
out
mov
adc
nop
test
dec
add
ljmp
into
xlat
fldl
nop
clc
mov
adc
test
xchg
xchg
fcompl
jmp
dec
repnz
jae
xlat
push
mull
insl
lds
xlat
mov
xor
and
dec
fdivrs
in
pop
xorl
sahf
and
in
push
dec
cmpsb
jne
mov
mov
push
bound
arpl
dec
les
jle
push
mov
dec
or
fdivl
outsb
mov
outsb
sub
loope
jb
test
push
and
push
add
sub
xor
add
jno
test
je
movswl
push
and
into
push
in
ljmp
cltd
bound
sti
dec
inc
and
sub
jae
ret
add
push
lea
adc
mov
xor
push
or
in
sbb
ret
sub
loope
xchg
orl
std
xor
loopne
lods
push
mov
xor
insb
sbbb
lds
out
mov
loope
xor
icebp
push
les
mov
insb
and
repz
popa
jle
movsb
inc
jle
sbbl
test
dec
jle
and
adc
js
in
push
addr16
popa
loope
xchg
test
jle
ret
xor
and
push
mov
add
popa
push
mov
pop
into
addl
jge
jle
sbb
push
mov
and
mov
push
pop
jmp
or
in
inc
jo
js
xor
pop
push
ret
data16
adc
push
loope
dec
mov
mov
idivb
pop
scas
xorb
mov
stc
sahf
cmp
sbb
jae
sub
negl
mov
mov
daa
push
xchg
adc
push
js
test
mov
repz
sbb
dec
mov
fildll
loopne
mov
xor
out
clc
adc
lret
ljmp
xor
test
into
hlt
push
push
add
mov
xchg
xor
in
popa
bound
cmp
sti
mov
cmpl
dec
test
jae
inc
decb
add
loopne
ret
push
xor
movl
adc
test
jecxz
dec
add
inc
adc
push
mov
jb
jecxz
mov
les
repnz
mov
outsb
fucompp
and
mov
xchg
jle
push
fidivl
inc
adc
xchg
or
sub
negl
ret
inc
pop
push
push
fdivrl
xchg
inc
inc
cli
push
int
add
cmp
cs
shl
orl
jge
adc
ret
jno
lgs
adc
push
out
scas
cmp
test
lods
inc
dec
jmp
xor
sub
push
sar
push
loop
and
cs
xlat
lret
les
cmc
jle
divl
leave
push
arpl
push
popa
shl
ror
les
adc
xor
bound
inc
add
popa
or
and
jecxz
mov
dec
je
and
sbb
jb
mov
jle
pop
mov
jl,pt
sub
cwtl
push
push
les
mov
inc
push
cmpsb
rorl
xor
adc
shl
rcll
out
fldenv
ljmp
pop
jl
out
test
add
mov
ljmp
rol
les
out
cltd
push
push
and
fidivrs
popa
call
roll
test
insb
sbb
fs
xlat
adc
add
lock
xchg
ret
inc
pop
bound
idivb
push
daa
jle
dec
mov
arpl
insl
and
xchg
out
pop
add
mov
add
lcall
sub
lahf
xchg
in
repz
mov
mov
outsb
cmpsl
rep
repnz
xorb
out
int
out
xor
jecxz
inc
orb
je
cwtl
divl
inc
jno
mov
sub
and
jae
push
je
sarl
out
lcall
inc
mov
mov
lock
cmc
inc
js
adc
sub
into
in
test
push
mov
jecxz
fs
in
outsb
in
push
mov
mov
dec
push
jo
mov
leave
ljmp
xor
mov
jb
push
aaa
add
jp
sub
cmp
inc
add
out
enter
je
jle
subb
adc
add
push
jle
inc
subb
push
shll
inc
jno
pop
orb
xor
xor
daa
iret
adc
out
loope
icebp
in
xchg
xchg
rolb
ljmp
mov
mull
add
jb
fcoml
adc
testl
cmp
test
sbb
adc
dec
pop
xorl
and
push
cmp
lea
daa
imull
cmp
dec
ficoml
or
fdivl
xchg
pextrw
adc
das
dec
dec
and
je
mov
jmp
xor
repz
push
aam
cs
dec
push
aaa
and
adc
lock
xchg
push
cs
xor
push
out
aam
add
xchg
push
loope
push
insb
pop
cld
aam
mov
xlat
neg
inc
inc
dec
adc
dec
icebp
push
xor
and
js
adc
aas
bound
push
mov
in
push
les
sbb
sbb
in
adc
rol
xor
scas
add
mov
std
and
je
andb
push
aas
xor
in
mov
lret
ficompl
inc
xor
xor
repz
outsb
ret
cs
shrl
xor
pop
hlt
xchg
cmpsb
dec
push
xor
repz
jb
cmpsb
inc
cmc
cmpsl
mov
push
movsl
push
cmpsb
push
or
and
and
addb
shll
adc
stos
lock
and
cs
mov
dec
fcmovb
fcoml
push
inc
in
jo
les
or
into
inc
xor
loope
and
xchg
cmpsl
mov
adc
jle
icebp
mov
and
stos
addr16
pop
in
or
mov
dec
adc
cli
cmp
mov
inc
jno
pop
push
cmpsl
mov
xor
addl
inc
lock
inc
xor
mov
push
outsb
adc
cmp
lret
xor
push
daa
push
add
xchg
call
repz
cmpsb
outsb
int
jno
and
mov
cmpsb
cwtl
daa
rorl
jle
mov
mov
mov
out
int
adc
mov
and
and
add
divb
xchg
mov
push
dec
cmp
push
inc
cmc
jno
push
cmpl
xor
mov
rcll
in
outsl
into
js
and
pop
mov
xor
stc
xchg
cmpsl
push
or
je
pop
jno
jl
outsl
dec
xchg
jae
test
and
cmp
cltd
jno
outsb
nop
test
shrb
xchg
clc
inc
sbb
orl
and
xchg
xchg
aam
mov
icebp
mov
jo
xchg
push
stos
ret
test
sub
add
mov
pop
lds
leave
dec
ret
xor
outsb
and
shrb
es
sbbb
inc
shrb
adc
stos
cli
rol
mov
jmp
dec
lods
push
jb
mov
inc
push
fwait
ret
and
push
xchg
rorb
xchg
cli
push
repnz
fs
out
xor
bound
mov
inc
xchg
inc
les
outsl
addr16
cmp
xor
adc
xlat
sbb
mov
xchg
mov
sub
lret
add
roll
and
pop
jae
add
decb
into
and
mov
leave
rorb
leave
call
xor
inc
aas
out
faddl
in
push
inc
inc
shl
stos
mov
xchg
or
xor
xor
mov
cli
push
das
mov
or
and
cs
cmp
scas
sub
add
mov
and
and
icebp
mov
call
test
push
cmc
icebp
into
out
incl
adc
dec
cmp
xlat
push
out
popa
cs
outsb
pop
sub
stos
inc
fsts
or
adc
icebp
and
jecxz
sbb
and
mov
and
mov
xchg
inc
xchg
adc
jbe
push
xor
lea
adcl
mov
ret
inc
pop
repz
rcl
imul
dec
and
sbb
add
and
pop
aam
inc
mov
sbb
jmp
icebp
rep
push
outsb
mov
xor
push
bound
outsl
test
xor
add
inc
les
ds
test
xchg
sahf
aaa
in
xorl
mov
out
inc
mov
xchg
push
or
inc
push
add
push
insb
or
shr
xor
xorl
and
rcl
xlat
and
push
arpl
jbe
dec
mov
je
cmp
mov
inc
shl
shr
ds
je
outsb
pop
stos
mov
shll
mov
inc
and
repz
subb
jge
xlat
add
lock
stos
ljmp
sarl
push
into
ds
popa
and
push
adc
cmpsl
mov
mov
inc
into
iret
dec
daa
and
adc
mov
enter
inc
and
inc
test
mov
mov
outsb
rol
rolb
jno
xlat
test
and
ret
cmp
out
out
rcrl
xlat
mov
scas
cmp
fmull
ret
xor
and
aam
sarb
arpl
rcll
xlat
inc
addl
sbb
xlat
xor
add
into
mov
xchg
out
push
daa
out
push
and
lock
rep
test
mov
mov
out
and
icebp
pop
and
addr16
ret
dec
sbb
pop
aam
mov
xrelease
jecxz
ret
mov
in
das
js
mov
dec
mov
push
jo
push
jmp
jo
dec
ds
bound
mov
and
cmp
idivb
adc
xor
inc
push
es
mov
inc
dec
ds
sbbl
repz
mov
mov
dec
out
call
cmp
add
xor
inc
push
in
repz
shl
jo,pt
jnp
xchg
mov
rorb
stos
shl
mov
jb
daa
push
xor
dec
inc
xchg
cli
iret
xchg
mov
sub
call
mov
xchg
mov
lods
roll
inc
daa
jns
push
je
mov
jne
mov
aam
loope
ret
in
add
jecxz
sub
dec
jge
loop
and
push
popa
xlat
sahf
rcrl
js
ljmp
repnz
cltd
and
xchg
repz
in
mov
xlat
xchg
cltd
inc
data16
cld
xchg
fimuls
repz
fdivr
rcll
xor
mov
mov
fidivrl
dec
pop
les
or
out
add
xor
dec
addl
enter
repz
imull
ret
xor
sbb
out
push
loope
in
adc
shll
into
mov
divl
pop
cs
xor
orl
mov
pop
push
mov
dec
or
pop
outsb
jp
aas
cmp
inc
mov
inc
xor
cmp
pop
jge
pop
les
les
ret
rorb
adc
inc
cwtl
ds
sub
sub
ret
in
pop
push
rcl
mov
mov
mov
scas
mov
dec
cmp
or
xor
jne
jb,pn
sbb
push
push
in
fildl
ret
je
jae
hlt
sbb
xlat
inc
inc
jns
dec
push
pushf
dec
clc
clc
push
or
adc
jmp
rolb
inc
xor
xchg
insb
and
mov
andl
imull
lods
mov
shll
outsb
inc
mov
adc
jno
loopne
out
push
out
inc
inc
out
mov
mov
ret
xor
fs
add
cmp
mov
dec
mov
xchg
jae
xor
add
dec
insb
int
xlat
js
addr16
nop
sub
push
ljmp
icebp
adc
movsl
jae
lret
adc
adc
pushf
inc
cmp
mov
inc
dec
orb
cmpsl
add
jne
adc
adc
mov
out
xlat
test
adc
or
mov
lods
add
or
push
loope
sbb
rol
leave
sbb
cmp
sbbl
inc
push
push
outsb
adc
adc
xor
and
stc
loope
call
popa
add
pop
out
mov
inc
cwtl
mov
mov
enter
ds
xchg
push
xorb
adc
sbb
lret
push
adc
push
mov
sti
cs
arpl
and
imul
sbb
adc
xlat
push
fwait
mull
add
test
adc
sti
and
and
test
inc
inc
fs
cmp
sub
pushf
mov
scas
mov
xchg
imul
xchg
cs
js
and
lock
hlt
xor
cwtl
fdivrs
fimull
fs
inc
ss
lea
dec
mov
out
inc
xor
repz
sti
sarl
out
int3
in
out
inc
rorl
jmp
mov
mov
sub
push
rcrl
test
je
mov
cmpb
push
push
xchg
inc
push
leave
mov
jno
and
clc
mov
add
mov
in
mov
and
int3
pop
orb
incb
dec
xor
ljmp
sub
xlat
out
je
xor
add
add
cwtl
out
subb
cmp
xchg
lret
xor
inc
push
dec
adc
sub
dec
in
or
mov
inc
mov
popa
add
loope
in
notl
push
or
push
pop
pop
xor
shll
ret
cld
adc
mov
inc
nop
int3
popa
adc
pop
add
repnz
loop
xor
mov
rolb
xor
dec
push
push
filds
icebp
jecxz
xor
jle
aam
repz
out
shl
into
stos
or
in
push
inc
jnp
and
xor
add
out
int3
mov
dec
les
into
push
cwtl
xor
or
and
ret
mov
daa
addr16
push
adc
and
pop
jb
icebp
mov
push
dec
xchg
lods
adc
cmc
sub
ret
dec
add
dec
and
sub
stos
xchg
jle
into
xor
mov
mov
call
pop
adc
icebp
mov
into
cltd
call
push
pop
inc
outsl
mov
pushf
jno
dec
test
fdivp
repz
xlat
rcll
jecxz
ljmp
push
icebp
into
inc
dec
loope
and
dec
xor
push
sti
call
stos
shll
mov
les
jb
lea
popa
outsb
rcll
jle
pop
js
mov
shll
dec
out
les
ret
dec
push
mov
mov
std
call
cmc
repz
jno
mov
sub
jae
or
call
sbb
xchg
push
popa
mov
dec
xor
xchg
ret
mov
inc
xor
mov
pop
and
sbb
iret
jle
push
das
push
outsl
push
orb
ss
mov
dec
jecxz
ret
vpcmpeqw
enter
cmpsb
addl
jecxz
hlt
push
imul
popa
leave
add
inc
mov
bound
bound
xchg
push
ret
out
testl
icebp
popa
xchg
rcll
adcl
adc
and
sub
inc
adc
dec
lds
jge
add
mov
inc
loop
and
jne
inc
mov
add
push
rorl
xlat
aam
mov
xchg
add
jae
mov
dec
inc
add
outsb
ret
xor
and
push
out
inc
push
arpl
sahf
xlat
jmp
in
or
jae
mov
icebp
mov
mov
cmpsb
or
push
bound
dec
xor
div
cld
mov
sbb
push
jg
ljmp
loopne
aam
add
and
push
sub
mov
loopne
add
outsb
data16
ljmp
daa
xorl
mov
orl
roll
cmp
and
mov
adc
xchg
jno,pt
xchg
adc
mov
push
add
push
dec
call
imul
push
invlpg
repz
js
add
add
das
roll
bnd
sub
icebp
es
xchg
ds
mov
jb
push
mov
loopne
push
popa
jecxz
adc
push
loop
mov
jo
dec
pmulhuw
dec
daa
int
lods
xchg
rcll
mov
addl
push
dec
dec
inc
mov
and
mov
jb
xor
xor
ds
xor
arpl
data16
rcrb
sub
mov
lock
fs
mov
outsb
inc
cmp
mov
shll
sub
adc
iret
lret
pop
fwait
adc
jae
pop
adc
daa
and
ds
push
dec
jge
mov
arpl
cmc
mov
xor
std
cmpsl
test
call
mov
clc
mov
xchg
addr16
push
jb
or
out
adc
jae
cmpsb
mov
or
rclb
and
shll
arpl
mov
push
xchg
mov
jge
loope
and
and
jecxz
dec
inc
and
sub
sbb
lea
push
push
jbe
add
out
and
xchg
push
push
pop
mov
mov
or
push
mov
in
fs
je
push
ficoml
push
adc
in
xchg
inc
xor
jb
inc
dec
jle
lahf
arpl
mov
cs
mull
adcb
jae
pop
and
sbb
xor
add
jle
daa
and
jmp
push
adc
fdivs
lods
loope
xchg
pop
subb
and
popf
cwtl
ds
cmpsl
aaa
inc
enter
push
rol
daa
jb
mov
out
xchg
mov
mov
int
xchg
in
cmp
and
mov
xor
mov
mov
adc
xchg
repnz
into
cld
hlt
ljmp
ja
arpl
jb
inc
pop
ret
xlat
adc
sbb
mov
jae
add
daa
jns
lret
mov
cs
push
xorb
xorl
int3
mov
ds
mov
and
push
in
sarl
mov
loope
rcr
push
aam
adc
xlat
cmp
push
and
pop
out
outsb
not
push
adc
xchg
popa
das
inc
xchg
adc
and
mov
add
loope
xchg
adcl
incb
popa
xor
fs
mov
or
andb
in
push
jbe
xchg
jo,pt
push
and
repz
jae
push
bound
not
cli
pop
inc
push
aam
cmpl
adc
and
add
inc
dec
add
sbb
jne
sarl
mov
andl
mov
xchg
and
scas
mov
jle
cwtl
dec
dec
add
jb
dec
mov
xlat
xor
loop
adc
into
push
arpl
test
pop
ret
cmp
adc
emms
lods
out
data16
and
xlat
jecxz
shll
popa
push
lret
xchg
sarl
pop
push
arpl
or
rcll
mov
push
out
xor
push
xchg
rolb
adc
arpl
push
inc
insb
mov
mov
packuswb
aas
sbb
or
push
mov
outsb
add
mov
inc
mov
pushf
in
loope
add
stos
xor
push
mov
mov
into
inc
ja
add
ret
orl
arpl
xor
and
inc
adc
rcll
shll
das
ljmp
inc
jle
inc
xor
push
je
xor
loope
push
fldenv
push
xlat
daa
call
cmpsl
add
xor
loope
scas
xor
xchg
inc
lock
xchg
xchg
xlat
cmp
popf
sub
dec
js
dec
stc
adc
jge
cmp
xchg
mov
in
add
mov
rcl
aam
mov
in
pop
outsb
push
and
out
pop
sbb
or
xor
shl
push
icebp
and
into
ljmp
xchg
cmpsl
and
and
jo
pop
loop
push
and
fstpt
jae
jb
and
pop
jno
push
mov
fidivl
and
mov
xchg
and
jecxz
mov
orb
dec
out
icebp
inc
outsb
ret
xlat
cmp
push
push
jecxz
mov
nop
in
int
add
lods
lock
adc
inc
shl
mov
add
inc
jge
inc
jle
fsubl
into
je
or
ret
push
out
xor
inc
andl
dec
push
cs
icebp
rcll
adc
jle
cs
cmc
jge
leave
rorb
popa
jecxz
je
fisubl
out
into
add
repz
mov
adc
stos
push
not
adc
jo
jo
stos
ret
push
inc
roll
xor
and
mov
arpl
fidivs
pop
ret
out
mov
dec
inc
aam
jle
and
pop
ret
adc
out
jno
mov
xlat
xor
testl
outsb
push
or
dec
stos
push
inc
add
dec
dec
inc
jne
adcl
and
adc
shll
je
xlat
cwtl
adc
xor
push
dec
dec
icebp
loope
cwtl
das
jnp
and
push
lcall
rcr
fdivp
fdivrl
push
inc
push
bound
add
cltd
addr16
subl
je
xor
ret
and
adc
bound
sti
inc
mov
roll
daa
bound
push
add
mov
mov
add
push
sbbl
aas
stos
cmp
sub
hlt
mov
loope
jnp
sub
outsb
roll
roll
or
adc
xlat
pop
ss
mov
mov
andl
sti
addb
inc
dec
fwait
test
dec
icebp
mov
inc
adc
xchg
out
inc
push
mov
jb
adc
rolb
bound
pop
add
push
test
push
cmp
int
cmc
xchg
call
cs
bound
add
sub
sbbl
sub
mov
jae
xchg
fdivs
push
mov
mov
jns
cmc
inc
cmp
and
sbb
mov
dec
test
mov
pop
shll
sbb
push
xor
dec
xchg
loop
mov
popf
inc
inc
das
gs
mov
cmpsb
sbb
xor
outsb
cmp
adc
int3
push
push
jecxz
adc
cmp
xor
xor
outsl
fs
shll
jno
shl
cli
in
xor
pop
jle
lock
out
mov
lret
add
sbb
mov
outsb
jno
pop
push
mov
jns
out
adc
mov
adc
loope
fildl
mov
rol
dec
mov
mov
in
fdivr
repnz
cs
jge
cmp
xchg
imul
lock
xor
push
dec
jb
inc
insb
mov
push
lock
xchg
loope
jb
adc
ret
ficompl
xlat
sti
out
arpl
add
nop
dec
out
dec
sub
popa
sbb
cmc
and
dec
or
pushf
insb
rorl
or
cmp
adc
mov
mov
adc
dec
aas
loope
and
data16
into
int
mov
lret
xor
es
push
jno
and
and
jmp
daa
shlb
push
or
push
notl
push
out
mov
add
outsb
xchg
mov
push
jae
mov
fldt
mov
sarl
inc
sub
add
mov
sbb
sub
adc
mov
dec
pop
inc
test
push
mov
and
pop
ret
icebp
insb
inc
sbb
jmp
mov
xlat
mov
mov
int3
pop
mov
and
inc
bound
shlb
in
in
mov
dec
out
jb
repnz
jne
inc
xor
mov
mov
lds
in
xor
outsb
cmp
xchg
shrl
push
lea
stos
inc
inc
mov
out
mov
stc
mov
cmp
or
je
daa
shll
mov
push
push
ja
adc
in
mov
les
inc
ljmp
pop
mov
js
loopne
jg
loope
sbb
add
lcall
loopne
xor
xlat
inc
imull
in
fldenv
in
test
out
fs
push
push
mov
mov
adcl
add
mov
into
and
jecxz
add
popa
xchg
popa
xor
push
mov
push
and
pop
mov
jno
shll
loope
das
adc
out
pop
inc
push
jle
loope
dec
pop
fdivl
pop
dec
and
adc
add
dec
jb
addl
and
cltd
cmp
inc
je
or
dec
mov
inc
into
dec
cmp
push
push
repnz
popa
jmp
push
clc
popa
dec
dec
sbb
mov
popa
pop
xchg
or
fdivrl
inc
out
jle
mov
xor
inc
loope
dec
addb
adc
shr
daa
jo
xor
dec
cmp
mov
add
xor
jb
xor
cmp
adc
jbe
dec
adc
mov
fisubl
xchg
adc
lock
and
and
push
mov
inc
add
bound
daa
xorl
xchg
mov
mov
and
out
mov
adc
sub
js
loop
xor
pop
and
ds
xchg
xlat
push
out
mov
inc
jae
cs
push
sub
cwtl
mov
rorl
push
and
pop
je
call
push
mov
inc
cs
cwtl
xor
mov
orb
push
rolb
and
ja
xlat
jae
das
pop
testl
and
jmp
shl
mov
mov
out
jno
mov
out
test
xor
inc
and
mov
jno
std
push
rorl
cmp
jb
fwait
sub
rcll
test
push
mov
ret
push
mov
les
fs
ds
sbb
lret
and
testb
dec
xor
mov
mov
push
lahf
cmp
repnz
push
hlt
stos
cli
push
push
adc
out
mov
add
push
xchg
sbb
je
fsubl
adc
pop
fidivrl
sub
pop
jno
ret
imul
sbb
repz
repnz
pop
into
imull
divl
push
adc
fs
xor
popa
xor
xchg
push
push
xchg
xchg
ficomps
icebp
add
add
sbb
loopne
mov
imul
in
jae
inc
xorl
les
add
fistps
dec
cmp
cmp
xchg
jge
push
clc
arpl
cs
adc
mov
call
dec
daa
movsl
xchg
jmp
rorl
in
sbb
and
out
xor
xor
push
dec
mov
shll
mov
jne
jno
jecxz
roll
or
fsubs
xchg
jb
aam
ret
je
and
inc
mov
cmp
push
mov
add
adc
rclb
andb
adc
ret
add
filds
inc
ljmp
loop
mov
inc
jae
and
and
xor
xchg
push
cmp
popa
jb
mov
in
dec
inc
push
cmc
daa
xorb
xchg
lods
push
and
inc
mov
outsl
out
mov
dec
jb
mov
ds
push
ret
and
jno
sub
push
pop
inc
add
stos
cmp
add
out
add
inc
leave
fisubrl
push
mov
ret
mov
fdivrl
cmp
xchg
aam
divl
mov
jne
rcll
mov
outsb
and
adc
push
pop
mov
rorl
mov
shll
jecxz
orb
push
fisttps
mov
insl
out
adc
les
mov
xor
add
jge
in
xor
shr
mull
and
ja
push
and
push
xlat
xchg
push
xchg
stos
pop
dec
jle
lds
imul
jecxz
arpl
mov
mov
mov
jno
sbb
pop
jns
pop
pop
pop
adc
xchg
popf
lock
sub
jle
xor
mov
dec
dec
scas
out
and
jge
push
test
ds
dec
fcmovnb
jecxz
scas
notl
mov
mov
mov
add
pop
pushf
mov
out
in
adc
inc
or
push
les
dec
sub
mov
push
mov
into
jb
cs
and
dec
loope
or
outsl
pop
add
and
inc
fisubl
outsb
repnz
inc
stos
add
cmc
movl
inc
push
jne
xor
adc
xor
or
mov
mov
mov
outsl
insl
cmp
and
fbld
pop
push
xchg
and
clc
jmp
xor
inc
into
pop
xor
mov
push
xlat
mov
dec
cs
rcrb
xchg
cmpl
xor
es
arpl
inc
scas
push
xor
imul
insb
mov
imul
jae
mov
test
add
ja
pop
jne
cs
les
and
out
push
push
or
cs
or
push
in
aad
mov
dec
adc
out
cli
mov
mov
push
xor
xor
dec
sub
mov
inc
xor
and
sbbl
jg
ret
jns
repz
outsb
outsl
mov
push
mov
repz
gs
fldenv
jno
ret
test
mov
arpl
pop
adc
scas
xor
xor
xchg
addr16
imul
addb
mov
roll
and
fcoms
shll
cmc
jnp
aas
xchg
sub
movb
fisubl
ljmp
pop
push
cs
les
inc
adc
sbb
aam
push
in
pop
inc
shlb
mov
fmull
dec
and
shll
in
loope
arpl
jns
xor
loope
xchg
in
inc
mov
push
shll
cmp
sub
into
xor
jnp
push
icebp
rclb
push
outsb
insl
inc
popa
mov
out
push
add
jge
or
arpl
add
mov
add
inc
and
jne,pn
out
je
fnstenv
and
mov
cld
repz
push
push
mov
jb
xchg
int
xor
in
adc
mov
mov
loope
xlat
push
js
and
hlt
adc
mov
mov
ds
add
cmp
jmp
pop
mov
je
sarb
call
imul
lds
jecxz
loop
push
xchg
add
and
jae
add
mov
add
jecxz
sub
sub
out
lods
mov
adc
bound
es
xchg
sub
push
out
mov
pop
les
jo
fistpl
dec
mov
inc
cmpsl
or
mov
rorb
in
in
test
mov
pop
push
pop
xor
fs
mov
push
mov
mov
pop
mov
cmc
adc
xchg
cmp
add
std
adc
mov
mov
and
icebp
cmpsb
pop
mov
outsb
mov
adc
or
ror
inc
jp
ret
xor
adc
into
or
icebp
out
test
ret
fimuls
adc
aam
ds
mov
clc
xchg
das
cmp
dec
sub
jecxz
mov
adc
xor
daa
xor
outsb
inc
insb
xor
pop
xchg
mov
mov
push
xor
cmc
inc
xchg
push
ja
insl
cmp
mov
add
mov
mov
cmp
pop
jno
arpl
testl
cs
mov
stos
jp
sarl
and
mov
inc
cmp
repz
idiv
push
xor
out
push
jecxz
xchg
mov
inc
pop
bound
rol
shr
mov
inc
in
popa
xchg
je
push
popa
push
cmpsl
mov
add
and
xchg
aam
data16
add
mov
mov
dec
les
cwtl
mov
mov
push
adc
fs
mov
jno
pop
and
cwtl
popa
cs
shl
xlat
push
jne
shrl
push
mov
ds
inc
xchg
push
cs
xor
lods
xchg
les
push
scas
cwtl
push
adcb
mov
push
fs
adc
cmc
jb
shll
xor
or
out
pop
popa
mov
add
xchg
les
xlat
cmp
stos
add
in
add
out
outsb
push
xchg
dec
jno
decl
aam
xor
inc
push
inc
jle
lea
arpl
xchg
daa
cmp
adc
sbb
bound
mov
stc
cli
mov
lock
push
push
inc
je
adc
or
andl
or
adc
mull
daa
popa
mov
or
je
adc
add
inc
imull
and
arpl
popl
icebp
insb
icebp
push
cmpsb
mov
testl
neg
adc
mov
ja
imul
dec
mov
mov
ret
dec
aam
and
xlat
out
out
mov
ds
cmpl
xlat
adc
cmp
pop
popa
cmp
xchg
mov
adc
or
push
xor
xorb
push
mov
cmp
mov
adc
inc
pop
pop
int3
xchg
in
rorl
in
cli
add
jno
add
cld
xchg
mov
add
mov
fidivrs
push
dec
or
xchg
push
push
inc
test
std
cs
and
push
sti
sub
sbb
sub
adc
or
xor
jle
xchg
and
push
ret
out
daa
and
repnz
xor
daa
or
fiadds
sti
xlat
int3
dec
repz
bound
daa
shrl
ficomps
and
xchg
and
add
push
icebp
jmp
in
sub
divl
sahf
loope
bound
loope
mov
dec
les
arpl
scas
mov
loope
popa
adc
lock
rolb
pop
outsb
std
and
xchg
int
fs
hlt
loope
and
mov
test
iret
inc
out
add
sbbb
es
xor
lret
adc
outsb
roll
and
sarb
adc
sub
icebp
rol
rcr
push
jno
fidivs
cld
daa
mov
inc
addr16
push
and
out
push
dec
sbb
cmpsl
add
daa
cmpsl
pop
cs
arpl
xor
enter
jl
sub
dec
addr16
jle
inc
adc
xchg
pusha
je
call
bound
ds
and
out
shlb
and
xchg
push
mov
inc
and
push
fisubl
mov
and
repz
push
ja
or
mov
data16
repz
outsb
jb
test
mov
push
jmp
jle
jno
cmc
adc
jb
jle
sti
mov
sub
adc
push
add
mov
adc
add
into
adc
mov
and
insl
cmpsl
or
and
test
push
add
add
in
stc
bound
xchg
push
dec
arpl
xchg
add
repnz
lods
mov
lea
push
and
mov
dec
test
movsb
and
and
ss
data16
popa
cmp
push
into
or
es
sbb
adc
daa
mov
repz
push
dec
sub
push
rcl
pop
call
pop
popa
insb
add
sbb
add
add
push
mov
cmp
xor
dec
xor
adc
push
jb
and
pusha
jge
adc
jae
cltd
shll
lds
shrb
add
push
pop
js
mov
push
jge
push
xchg
insl
outsb
mov
js
cmc
add
mov
in
push
and
and
inc
dec
mov
add
cmp
loope
hlt
and
mov
dec
pop
sub
push
rcrl
lcall
aad
out
jmp
jb
mov
mov
test
leave
std
xor
xor
push
inc
dec
dec
xor
inc
cmpsb
sub
shll
scas
sub
in
scas
jbe
mov
lds
pop
jne
and
push
sbb
shll
push
xchg
add
jns
call
jbe
repz
shll
cmpsb
enter
les
rcll
fsub
mov
out
inc
out
sbb
shll
add
icebp
rorb
xchg
pop
push
divl
mov
and
test
lahf
sahf
dec
push
idivb
adc
rcr
jne
ret
and
xor
rcll
jl
fcomip
lcall
pop
mov
xor
mov
inc
jmp
mov
pop
sub
jmp
push
icebp
mov
jmp
dec
mov
rol
mov
push
wrmsr
testb
and
or
xor
popa
and
push
inc
nop
xchg
push
rcll
sub
mov
mov
dec
xor
pop
adc
xchg
xchg
adc
sbb
and
pop
test
sub
outsb
rcrl
jo
cs
sbb
push
adc
fdivs
je,pn
and
shrl
outsb
sbb
arpl
cmpsl
adc
cli
mov
sbb
xorl
cmp
mov
shrb
push
popa
cltd
mov
dec
sahf
les
dec
les
dec
or
jnp
xchg
xchg
stc
jbe
push
and
jae
and
and
inc
or
sub
in
mov
inc
repz
xor
notrack
jge
jae
pushl
dec
lock
cwtl
ret
popa
js
inc
and
je
xchg
lock
adc
je
call
add
inc
jb
sub
into
xor
mov
data16
or
mov
push
arpl
out
push
dec
adc
shll
pop
mov
adc
cmpl
js
arpl
test
pusha
push
mov
out
xchg
adc
pop
mov
loopne
stos
cmc
fs
inc
adc
push
nop
jmp
mov
mov
or
stos
adc
inc
and
add
mov
mov
and
xchg
mov
cmp
mov
jae
adc
data16
movsl
test
sbb
push
nop
mov
push
sbb
push
and
add
xchg
mov
sti
and
mov
mov
out
jb
inc
iret
ret
adc
and
js
movsl
add
sarl
mov
sti
xor
xor
jle
push
fbstp
lahf
je
cmp
jbe
pop
popa
mov
mov
cmp
cmpsb
xchg
xor
xor
push
mov
out
xor
cmpsb
adc
push
ljmp
adc
and
cmpsb
int
xor
push
mov
popa
and
dec
cmp
ds
add
push
lret
and
mov
mov
and
push
mov
loopne
lret
in
cmp
pop
add
sahf
fs
mov
inc
inc
outsb
rclb
ret
mov
adc
and
popa
cs
mov
je
mov
fidivrl
push
pushf
mov
jg
mov
shl
jmp
mov
popa
add
loope
add
sbb
out
inc
mov
mov
cld
es
repnz
push
fs
inc
aam
shll
add
cmpsb
popa
shll
push
addr16
mov
mov
sub
xlat
jne
ds
mov
xor
xchg
mov
test
clc
add
adc
push
arpl
inc
mov
sbb
fimuls
ret
add
push
test
fcomp
inc
and
and
jecxz
arpl
jl
shlb
or
repnz
out
mov
adc
cmpsb
bound
in
add
sarl
dec
mov
mov
pushf
push
pop
fwait
adc
cmp
jle
enter
fstps
inc
nop
repnz
jno
int3
int
repz
jg
les
pop
dec
mov
mov
push
push
and
xchg
sbb
rorl
ja
xor
rcrl
jle
xor
es
orb
jb
jecxz
pop
xor
shr
inc
cmp
cmp
or
xchg
aam
jb
push
push
ss
push
adc
je
sbb
arpl
jb
xchg
loopne
xrelease
jmp
push
inc
mov
adc
subb
je
and
and
lret
mov
in
pushf
push
pop
outsb
jle
inc
popa
inc
test
xor
mov
repz
cmp
mov
out
or
js
adc
lret
jmp
loopne
mov
push
jb
adc
push
imull
adc
imul
add
das
js
mov
lea
add
adc
mov
addl
adc
sti
push
mov
mov
icebp
scas
pop
daa
dec
daa
pop
adc
aaa
cmp
sub
push
rorl
rcll
adc
xor
sbb
adc
out
xchg
pop
and
or
clc
mov
lods
mov
cmp
xlat
pop
outsb
cli
bound
sbb
mov
scas
inc
out
adc
mov
add
cmp
outsb
ds
add
stc
mov
or
xor
jl
and
insb
adc
or
mov
cs
hlt
arpl
in
xchg
in
mov
ja
leave
mov
sbb
adc
dec
in
xchg
cmpsl
lods
ret
dec
addl
lahf
lods
mov
les
xchg
imul
into
jmp
jecxz
fcomps
sbb
out
ljmp
aam
les
xor
out
or
inc
jno
cmc
das
les
push
inc
xor
rolb
mov
fcmovnbe
sub
mov
in
repnz
jno
out
je
inc
sub
dec
inc
idivl
sub
jns
jecxz
sbb
or
loope
mov
shlb
xor
popa
ficompl
adc
jge
enter
int3
shlb
sbb
pop
inc
dec
jl
xchg
jecxz
dec
add
inc
or
xor
pop
dec
mov
lret
push
inc
lea
jmp
fisubrs
icebp
outsb
repz
pop
push
icebp
pop
lret
arpl
add
push
mov
sub
mov
add
out
push
ljmp
add
dec
push
or
popa
loope
xor
xchg
push
lods
fisubrs
popa
add
in
bound
nop
fsubs
mov
or
addr16
fdivp
jb
dec
fs
mov
unpcklps
pop
jecxz
dec
pop
bound
and
or
cmp
repnz
jne
out
mov
push
icebp
jno
ss
adc
add
mov
dec
cli
xor
rolb
xlat
adc
jns
cmpsl
inc
out
push
mov
and
inc
jo,pn
ret
daa
inc
mov
add
repz
cmp
adc
repz
dec
cltd
pushf
faddl
jno
nop
and
adc
sub
mov
out
add
lods
ret
adc
xor
scas
add
adc
mov
call
int
mov
dec
xorb
sbbl
cwtl
mov
repz
inc
xor
addl
sbb
push
xchg
rcr
xchg
cmp
add
inc
sub
mov
jecxz
and
outsb
push
mov
je
push
xor
icebp
pop
push
sahf
mov
icebp
subb
jae
out
xor
add
loope
divw
cmp
jle
clc
call
push
push
and
push
pop
xor
in
mov
stos
xor
shll
jo
in
mov
jecxz
lret
movsl
fcoms
lret
scas
jo
fisttpl
inc
sub
rep
bound
inc
and
mov
mov
push
push
and
inc
arpl
jno
ljmp
mov
adc
push
roll
jne
mov
adc
xchg
cwtl
inc
outsb
mov
pop
les
xchg
daa
sbb
orl
sar
xor
pop
sarl
xchg
jno
and
jp
icebp
jns
dec
adc
and
bound
scas
cmp
into
cs
popa
pop
sbb
dec
jnp
mov
inc
out
pop
xchg
mov
add
sbb
dec
dec
mov
fnstcw
js
xchg
popa
push
pop
adc
fldcw
add
and
cmp
outsb
mov
arpl
arpl
fisubs
ret
jb
cltd
xor
in
dec
push
push
cmp
dec
mov
fs
push
into
dec
mov
outsb
mov
popa
add
sub
push
dec
sbb
lock
xchg
iret
stos
aam
mov
sub
mov
in
fmul
mov
movsb
loopne
dec
insl
lods
push
push
jb
sub
lods
aas
movsl
mov
inc
xor
repz
xor
out
push
jb
add
xor
mov
jno
jmp
jl
mov
fisubs
arpl
shlb
cmp
push
sbb
les
int
shlb
daa
je
pop
test
add
push
popa
in
inc
add
out
inc
mov
stos
in
inc
mov
sarb
loopne
add
bound
push
add
adc
loope
out
jb
dec
mov
ret
icebp
imul
bound
dec
shr
pop
xlat
jle
repz
dec
mov
adc
and
sbb
int3
in
fcomip
sub
and
mov
cmp
les
cwtl
dec
xor
mov
xchg
mov
popa
pop
outsb
arpl
push
nop
int
cmp
imul
push
cmc
jns
push
add
dec
outsb
lret
movsb
aam
mov
out
add
shl
neg
add
mov
push
sub
push
outsl
stc
push
sbb
stos
je
push
out
mov
push
mov
push
loope
xor
mov
and
jecxz
cltd
mov
adc
cmp
mov
pop
out
test
xchg
jb
pop
roll
jo
mov
dec
enter
test
xor
xor
addl
dec
popa
xlat
ds
icebp
xor
xlat
loop
add
sti
inc
sub
jecxz
inc
clc
fcomps
sahf
mov
adc
mov
xchg
shll
andb
add
jo
jo
xor
outsb
out
and
adc
dec
imul
mov
out
psadbw
and
mov
sbb
enter
fwait
ja
push
iret
imulb
cmp
adc
pop
enter
pop
push
adc
fidivrs
pusha
clc
or
mov
push
jb
mov
sbbl
or
repz
inc
ret
xchg
add
rcrb
inc
jmp
outsb
add
xchg
add
inc
das
push
repz
sub
jne
sbb
arpl
push
hlt
xchg
repnz
mov
shlb
leave
jecxz
cmp
test
les
add
xchg
lret
shll
inc
or
mov
ja
out
add
and
rcrl
add
jle
roll
pop
ret
and
lret
rcrl
es
adcl
xor
loop
dec
mov
ret
into
outsb
int
mov
xchg
inc
xor
push
int3
and
xchg
jno
addr16
sub
in
push
sub
lcallw
jmp
and
xor
add
mov
lahf
aas
sarb
cltd
test
sbb
adc
xchg
xor
add
pop
daa
sarl
mov
mov
push
addr16
jo
cmc
shll
inc
aam
add
adc
xor
loope
mov
xor
mov
ficoml
and
in
mov
xlat
pop
add
js
xor
adc
push
je
push
adc
cmc
xchg
aam
add
mov
mov
bound
popa
jle
inc
dec
xlat
xor
dec
hlt
outsb
xor
sub
mov
add
test
popa
into
cs
mov
push
or
xor
xor
cmpsl
mov
bound
stc
outsb
jae
mov
mov
xor
push
push
mov
fstpl
stos
loope
popa
repz
xor
shrl
in
or
aam
mov
or
push
jno
xchg
cmp
jo
pop
xchg
fwait
pop
mov
mov
repz
loop
je
ret
add
cmp
data16
rcrl
add
mov
xor
jae
jno
in
push
and
jmp
addr16
mov
jb
enter
lahf
sub
sub
mull
mov
dec
and
add
mov
add
es
jnp
rcrl
push
sub
mov
xchg
cmp
cmp
xchg
add
out
pop
mov
repz
dec
fcmove
adc
sbb
sbb
out
add
push
jg
add
push
or
mov
out
rolb
out
shr
xchg
incb
mov
out
loopne
fcomps
dec
es
xor
push
push
test
sahf
push
sti
ret
pop
xlat
cmp
adc
outsb
sbb
and
pop
dec
xor
loopne
les
xor
sbb
and
ror
mov
xchg
pop
bound
divb
dec
mov
cwtl
lods
sub
mov
ds
mov
out
loope
adc
lsl
out
add
and
lcall
adc
xchg
inc
pop
pop
add
mov
add
pop
jmp
mov
push
outsb
inc
xor
sbb
and
adc
movsl
adc
mov
test
xchg
subl
loope
dec
and
outsb
dec
popa
ret
mov
imul
xchg
std
and
shll
sub
xchg
push
je
arpl
ret
cmp
push
adc
dec
jb
movsl
adc
mov
add
xor
in
inc
popa
dec
bound
mov
popa
mov
daa
cmpl
push
outsb
push
add
dec
out
clc
cmp
outsb
dec
daa
mov
dec
xor
mov
or
push
jle
cmp
mov
out
push
mov
mov
popa
add
daa
and
and
adc
mov
int
pop
xlat
out
cmc
xor
xor
stos
mov
xor
cmp
and
leave
jle
scas
jne
jae
mov
xor
inc
pop
xor
shr
push
cli
push
jae
cmc
mov
mov
cs
pop
jb
pop
dec
lahf
aam
roll
je
xchg
arpl
and
xor
repz
pop
xchg
dec
or
mov
xchg
test
push
jle
pop
add
xchg
push
mov
dec
lds
outsb
dec
lds
cs
push
jne
dec
arpl
push
inc
xlat
rcl
and
push
cmp
inc
std
inc
cwtl
or
mov
je
push
dec
push
pop
push
adc
js
mov
and
xchg
jno
xor
cmp
mov
rorb
notl
into
ret
xchg
push
adc
call
sub
shr
xchg
mov
jo
inc
xor
popa
xor
aam
push
les
in
adc
ret
cltd
sub
jae
mov
push
clc
and
cwtl
and
adc
lds
lahf
pop
push
rorl
std
dec
dec
out
inc
push
mov
xor
and
inc
test
into
popa
testl
fdivl
xlat
mov
out
adc
and
ss
push
scas
mov
cmpsl
sbb
sub
inc
clc
jmp
push
ds
jecxz
adc
in
popl
xor
fldenv
adc
enter
push
jb
adc
and
cmp
lahf
jno
mov
rorb
mov
lret
dec
and
icebp
and
sub
into
inc
je
and
loop
pop
xchg
mov
into
out
je
sarb
in
jle
std
aam
mov
fstpt
data16
loop
adc
dec
dec
inc
xchg
ds
incb
roll
ds
add
jno
dec
xor
in
mov
xor
and
fimuls
mov
xacquire
maskmovq
mull
pushf
push
push
add
add
lock
xor
daa
andl
pop
or
push
xor
mov
mov
and
jne
ret
and
loope
out
push
sti
ss
adc
jae
jo
cmpsb
out
out
outsb
mov
add
addb
into
add
xchg
inc
loopne
jae
xorl
pop
sub
push
in
dec
sub
xor
andb
daa
mov
or
clc
sub
inc
push
adc
fbstp
lods
imul
aaa
clc
into
inc
jecxz
mov
and
xchg
xchg
xchg
mov
sub
pop
fdivl
inc
xchg
repnz
leave
inc
fidivrl
xor
loope
stos
pop
xchg
lock
adc
imul
bound
xor
add
ret
mov
int
jno
add
ds
inc
push
jecxz
and
or
push
out
lock
aaa
icebp
arpl
xor
into
stc
dec
sbb
in
cmp
mov
fisubrs
xor
int3
sbb
mov
fs
mov
icebp
and
xchg
xchg
jne
xor
push
lcall
rcrl
andb
jmp
outsb
push
loope
pop
inc
push
add
cmp
or
xor
fldenv
xchg
repnz
and
jecxz
stc
and
mov
js
and
xchg
xor
xlat
sbb
fs
cli
sarb
mov
and
xchg
mov
mov
inc
and
dec
inc
mov
or
xchg
fbld
jns
shrb
push
sub
clc
mov
je
mov
ds
mov
in
rcrb
push
dec
scas
fisubrl
push
rcl
dec
add
testb
lea
in
xchg
loope
jnp
jne
into
shl
inc
cmp
push
shl
and
xlat
repz
shrl
cmp
xor
into
sarl
sbb
pop
jne
adc
cmp
cmpsb
sbb
aas
mov
cmpsl
adc
and
bound
cs
dec
inc
shrb
adc
mov
pop
add
fistpl
ret
and
test
outsb
sub
dec
enter
les
mov
sbb
into
loopne
fdivs
out
addr16
mov
nop
shrl
or
inc
jb
je
ljmpw
jecxz
push
xlat
cmp
popa
dec
adc
and
les
ds
or
and
mov
int3
mov
or
nop
andl
xor
xor
mov
outsl
test
push
push
push
in
flds
xchg
jae
inc
jecxz
ret
inc
in
mov
inc
out
sbb
roll
and
adc
fidivrl
in
mov
subl
aaa
mov
popa
sbb
mov
mov
adc
add
mov
add
cmpsl
pop
insl
xlat
fdivrs
aam
cs
and
mov
push
je
bound
arpl
popa
mov
xor
cmp
outsl
jp
in
cmp
into
mov
movsl
not
add
jecxz
rorb
sub
jge
pop
aad
shlb
or
jle
xchg
push
mov
and
adc
or
shl
jle
rcl
in
loopne
dec
inc
cmpsl
add
daa
addr16
adc
mov
mov
outsl
or
jmp
jp
pop
ficompl
ret
shll
xor
outsb
jmp
test
repz
add
incl
stos
mov
jae
inc
jmp
addr16
pop
out
out
nop
add
or
adcb
jne
sbbl
and
rcll
or
and
cmp
xorl
inc
loopne
mov
int3
fidivrl
pop
xor
in
stos
xor
mov
and
and
pop
xor
js
mov
popa
cmpsb
cli
ja
cmp
dec
lea
xlat
push
in
or
jmp
sahf
jae
inc
test
and
cmp
loop
cs
push
mov
inc
cmp
ds
push
and
pop
xor
je
test
push
adc
decb
adc
mov
xor
cmpsb
mov
jle
mov
test
mov
jmp
not
or
lods
sbb
xchg
mov
in
pop
repz
xor
adc
mov
aas
mov
pop
ret
into
xor
push
and
into
insl
cmpsb
push
mov
mov
add
pop
mov
add
adc
xor
xchg
cmpsb
xor
push
cmp
push
jp
cs
push
add
mov
inc
addb
inc
test
push
xorl
rcll
jae
mov
scas
sub
mov
rcrl
enter
repz
addb
cmp
jne
out
inc
push
std
mov
add
push
into
in
or
cmp
add
cmpsl
add
daa
lret
ret
adc
aam
je
xchg
add
cmc
loop
adc
rcll
in
push
cs
out
xchg
jo
mov
pusha
andb
pop
outsb
mov
imul
add
inc
test
xor
inc
incl
adc
aam
mov
mov
dec
add
psraw
stc
in
push
clc
mov
adc
and
add
and
adc
xlat
test
pop
sbb
mov
lret
jae
mov
and
andl
test
les
testl
addb
in
xchg
inc
mov
icebp
rcr
iret
lret
fmul
xor
cmpsl
mov
repnz
repz
inc
adc
adc
mov
icebp
xor
xor
jns
movsb
loope
out
adc
dec
adc
and
adc
dec
cmp
jno
ds
out
test
xor
out
cwtl
mov
mov
xchg
shrl
xchg
push
xchg
not
jbe
xlat
dec
jno
test
inc
repz
movsb
dec
pop
and
mov
cmpl
jb,pn
aas
bound
push
xchg
xor
push
adc
int3
addb
push
jb
cmp
movsl
cld
shlb
push
mov
je
test
sti
cltd
push
mov
cli
pop
fnstenv
ljmp
into
push
dec
dec
ficoml
mov
popa
mov
or
jno
xor
cld
xor
push
mov
xor
pop
movsl
int
inc
mov
mov
xchg
jno
push
loopne
xchg
imul
mov
cs
mov
mov
sub
ss
mov
lret
mov
mov
or
jns
jecxz
sarb
xor
cmc
imul
xchg
mov
mov
divl
jae
add
lods
iret
or
aam
push
and
mov
sub
mov
outsl
jmp
into
bound
xor
mov
push
xchg
lcall
sub
push
xor
or
xor
jmp
xlat
jb
inc
mov
add
in
inc
xor
adc
mov
in
dec
orb
xchg
and
inc
mov
xor
lret
push
mov
pop
mov
push
faddp
je
add
push
cmc
inc
outsb
xchg
adc
mov
jb
push
or
pop
out
adc
dec
bound
jl
shll
nop
inc
test
pushf
mov
xlat
outsb
in
shll
cmpsb
pop
iret
in
in
mov
dec
pop
xchg
fisttpl
adc
push
and
rcl
ds
pop
lock
xor
mov
loope
xchg
adc
mov
pop
addl
fs
rcl
jb
ffreep
adc
adc
testl
stos
push
mov
push
mov
icebp
pop
push
scas
arpl
popa
shlb
adc
in
js
das
movb
sbb
call
add
in
fs
push
jns
loop
sub
mov
out
outsl
push
and
arpl
push
out
mov
jl
cmp
cmp
repz
jecxz
loop
arpl
mov
repz
jae
les
push
cmp
adc
xchg
mov
pop
ss
or
dec
dec
icebp
scas
rcll
arpl
aaa
cmp
jge
shl
adc
xchg
les
into
outsb
mov
adc
orl
xor
push
adc
sbb
push
iret
mov
mov
push
xor
sti
mov
mov
rcll
roll
outsb
icebp
fs
push
popa
sbb
lods
inc
sbb
add
and
sbb
in
int
repz
in
repnz
xchg
sbb
les
stos
push
shll
adcb
push
rclb
mov
in
aaa
je
inc
loopne
into
pop
rol
loopne
lret
xchg
aas
loopne
loopne
xchg
mov
jae
bound
cs
sti
mov
push
scas
outsl
dec
inc
adc
adc
out
and
cs
dec
jno
bound
repz
or
fs
push
cmp
jecxz
es
adc
adc
push
pushl
jo
js
icebp
outsb
lret
mov
add
and
popaw
in
and
rcrl
mov
outsb
andl
fs
inc
imul
mov
xlat
cmp
ret
and
sub
clc
push
or
push
stos
jg
call
add
add
into
fidivl
and
cmp
std
adc
icebp
call
adc
mov
and
out
ret
roll
je
jle
push
cmp
cmp
mov
arpl
xor
jmp
shll
pop
cmp
inc
xor
arpl
add
inc
addl
push
xor
adc
and
rcl
jno
arpl
push
jnp
scas
das
and
sbb
mov
cs
xchg
cs
sti
inc
bound
adc
mov
inc
dec
add
push
std
fisubrl
xor
add
sbb
out
add
repz
outsl
aaa
mov
lret
pop
mov
lret
dec
mov
fsubrl
ljmp
rcll
in
repnz
jb
in
fnsave
adc
loope
shll
adc
je
push
out
imul
shl
fs
xchg
mov
add
testl
mov
popa
les
shr
mov
add
add
xchg
push
daa
push
push
lods
dec
andl
repz
shrl
cmpsb
je
inc
and
scas
mov
xor
inc
dec
loope
outsl
mov
scas
scas
and
xor
mov
lea
jle
xchg
xchg
mov
pop
fs
mov
mov
stos
shll
push
neg
cs
and
daa
jecxz
mov
in
jno
dec
and
pop
dec
pushw
adc
mov
loope
mov
pushf
pop
out
and
mov
push
lcall
pmaddwd
mov
movsl
and
xlat
ja
loope
push
into
adc
inc
jmp
aas
fldlg2
mov
je
push
mov
stos
xlat
movsb
in
mov
mov
je
dec
and
add
mov
fisubs
add
out
push
sub
repz
call
mov
ret
lea
cld
movsl
adc
les
les
cmp
shlb
ret
sub
mov
mov
cli
jecxz
shr
xor
push
lret
inc
es
movsl
add
add
aam
mov
mov
out
cmp
inc
dec
and
repz
rol
xchg
adc
adc
divb
add
outsl
jl
jb
mov
mov
mov
adc
xchg
mov
inc
and
push
and
les
inc
in
lcall
mov
fisttpl
lret
movsb
ljmp
into
jae
lahf
push
sbb
inc
cwtl
pop
icebp
mov
xchg
js
xor
lea
loopne
ds
out
mov
cmp
mov
call
xchg
cmp
imul
add
jne
xchg
pusha
cmc
cs
mov
mov
loope
sub
shll
pop
jmp
ret
sub
xchg
ds
xor
xchg
in
das
jl
scas
mov
add
ficoml
mov
push
ret
push
dec
inc
mov
jno
fisubrs
shlb
adc
lock
push
push
dec
and
inc
and
xor
insl
out
cmpsl
das
push
xchg
popa
jne
xor
rclb
jge
push
pusha
gs
test
push
loopne
mov
push
inc
loope
xchg
push
xchg
filds
mov
inc
pop
rcl
mov
les
inc
xor
xor
xchg
je
inc
icebp
repnz
out
jbe
in
scas
stc
cli
sbb
push
imul
mov
loopne
xchg
aam
popa
add
mov
loope
pop
push
into
bound
and
pop
mov
xor
inc
jbe
mov
sub
inc
adc
ret
repz
loop
icebp
and
popf
mov
scas
negl
pop
jge
jno
out
adc
xchg
outsb
bound
inc
xor
dec
shl
adc
mov
cmp
jne
push
jle
mov
mov
ret
and
and
adc
data16
or
outsl
mov
and
jb
fidivl
xor
arpl
adc
jo
pop
push
inc
xor
sbb
sbb
popa
jecxz
dec
sbb
cld
xor
mov
sbb
in
in
mov
dec
and
jp
xor
aam
jno,pn
arpl
mov
dec
jae
inc
ret
adc
dec
mov
adc
jl
inc
xchg
sbb
dec
aaa
inc
push
add
cmp
rorl
adc
mov
xchg
bound
mov
outsb
in
das
call
shll
and
loope
je
xchg
push
pop
inc
jb
mov
jno
mov
push
cld
gs
and
repz
adc
and
lahf
mov
cli
push
rcll
fisubl
push
sbb
push
test
pop
daa
xchg
adc
add
je
mov
ret
lea
ror
jb
daa
roll
ficomps
push
nop
aas
int
sahf
scas
push
and
dec
loopne
aas
pop
and
xchg
mov
dec
cmp
sub
sub
mov
rcll
test
or
xlat
mov
out
fcomps
mov
mov
mov
push
inc
push
adc
xor
sub
mov
cwtl
out
add
xor
mov
jg
push
lods
mov
loop
rorl
add
dec
push
test
jae
push
mov
mov
xlat
icebp
out
mov
pop
mov
mov
loopne
shll
repz
jb
cmc
inc
mov
pop
adc
jge
inc
xor
push
dec
test
xchg
dec
ret
add
pop
xor
dec
pop
add
and
or
pop
or
testb
jecxz
out
inc
xchg
inc
sbb
dec
daa
shr
mov
cwtl
mov
jecxz
pop
mov
mov
pop
enter
sbb
out
xchg
xor
les
or
mov
push
mov
mov
mov
xchg
inc
out
xchg
mov
ss
push
mov
fidivrl
mov
in
push
add
and
push
mov
sti
xchg
popf
and
fisubs
insl
inc
divb
cmovle
jle
loope
rcrl
out
inc
ret
xor
js
mov
lock
xlat
lds
out
ds
and
imul
xchg
dec
jno
and
mov
xlat
pop
jnp
sbb
ljmp
notl
add
add
lret
andl
sarl
adcb
add
dec
jno
and
mov
mov
add
jb
dec
fs
mov
repnz
inc
xor
testl
addl
adc
xor
imul
pushf
popa
mov
push
xor
mov
push
ret
mov
fs
jb
xorl
xor
mov
xor
repz
inc
jne
and
repz
dec
xchg
les
dec
movsb
push
and
sbb
adc
inc
popa
xor
add
arpl
dec
xor
lock
jp
addr16
jbe
jae,pt
sbb
outsl
push
mov
add
and
inc
popa
in
mov
mov
mov
test
cmp
add
je
inc
xor
arpl
in
clc
and
repnz
adc
data16
inc
xor
sub
add
xchg
pop
sub
add
in
jb
xor
pop
loope
dec
add
scas
xor
and
add
roll
adc
mov
enter
enter
push
add
repnz
jecxz
sbb
lea
dec
loop
push
ds
jecxz
out
xor
jae
and
mov
inc
sub
sub
jns,pn
adcb
cmpsl
fs
outsl
cmp
sahf
and
ret
mov
decl
push
andl
mov
js
jae
pop
dec
loope
in
adc
xor
je
xchg
xchg
and
or
rorb
lods
dec
xchg
je
xor
or
add
lock
cmp
fwait
mov
popf
sarl
roll
out
mov
shll
jae
scas
test
pop
or
inc
test
and
imul
mov
sarl
imul
outsb
adcl
pop
push
adc
lret
sub
xor
rol
mov
jae
out
inc
loope
mov
out
push
jo
push
cld
add
dec
cs
mov
mov
cmp
inc
bound
sbb
or
jb
mov
xor
cmp
out
cmp
shlw
aas
jns
mov
jecxz
add
xor
outsb
adc
repz
push
ret
cwtl
fs
xor
push
dec
or
call
mov
jge
sub
pop
outsl
lock
mov
addl
push
adc
bound
mov
ret
add
push
inc
push
jmp
popa
jecxz
sti
push
lret
dec
arpl
fmuls
sub
cs
and
xlat
sub
in
cmp
shll
push
mov
xchg
ret
xor
push
mov
outsb
push
data16
push
add
xor
jb
xor
test
push
stos
pop
cmp
cwtl
shrb
shlb
and
and
or
dec
popa
adc
and
xor
cmc
js
mov
sti
push
inc
xor
inc
and
inc
and
and
mov
xor
sbb
cmp
stos
je
ret
and
les
imull
lahf
outsb
scas
je
push
add
jge
push
mov
inc
je
shrl
jo
popa
xchg
pop
ret
inc
lret
push
add
jl
dec
sti
loope
popf
jae
jae
loop
dec
push
push
pushf
mov
or
out
xor
adcb
inc
stos
xor
push
adc
xchg
push
and
fistl
xchg
aam
mov
repz
movsl
hlt
shrb
sbbl
jge
xorb
sub
lret
adc
outsb
repz
xlat
in
mov
dec
cmp
cmp
mov
xchg
and
addb
orb
fsubs
push
mov
cs
and
les
fs
fistpll
loop
cltd
adc
insb
push
mov
fsubrl
and
in
xchg
shll
push
xchg
pop
inc
add
pop
enter
and
add
scas
sub
push
mov
nop
jae
pop
ds
pop
jecxz
or
xchg
xor
out
adc
arpl
cmpsl
push
sahf
loopne
rorl
xorb
adc
sbb
pop
and
xor
movsb
test
mov
xchg
stos
xchg
inc
repz
aam
mov
insb
aad
jecxz
adc
roll
xor
out
mov
jle
and
out
adc
xor
mov
arpl
or
cmp
and
inc
out
xchg
xor
insw
icebp
inc
stos
mov
iret
js
in
or
pop
add
push
xor
pusha
jae
lds
adc
in
mov
ds
and
xor
sbb
clc
cmpb
sbb
xchg
rcl
sub
movsl
out
mov
mov
jle
and
jl
and
in
push
mov
cmp
xlat
enter
add
mov
bound
repz
movsb
mov
icebp
jne
jle
mov
cmp
shlb
push
adc
test
mov
add
mov
aad
add
push
jae
fdiv
mov
add
and
adc
push
sub
shll
add
cltd
jb
fimull
jae
clc
rolb
mov
outsb
inc
fs
out
mov
adc
ds
dec
popa
push
jecxz
xor
mov
mov
cmc
js
adc
mov
dec
icebp
repnz
das
inc
mov
mov
je
inc
lret
push
arpl
jno
adc
shll
push
xor
adc
pushf
cmp
sub
jns
push
mov
push
jb
repz
aam
push
adc
add
push
je
add
and
into
mov
jnp
ret
jns
jmp
xchg
shll
cs
repnz
jnp
inc
jno
mov
outsb
push
mov
hlt
push
mov
out
arpl
mov
cli
dec
hlt
outsl
cwtl
jne
inc
fs
jl
test
mov
add
adc
out
push
dec
sar
fstpt
and
jge
cmp
popf
in
fistl
xlat
add
add
xor
mov
xchg
mov
and
imul
push
or
cmpl
leave
mov
inc
ss
pop
and
mov
adc
ret
dec
push
mov
jge
arpl
ds
sti
cmpsl
jle
and
mov
ret
rol
repz
mov
fidivs
rcrb
push
inc
in
mov
fidivl
jae
das
push
push
notb
sbb
push
scas
cmp
mov
add
arpl
mov
and
xor
jno
dec
subb
xor
jne
push
adc
shl
adc
jne
ret
icebp
mov
cmp
dec
inc
decb
into
push
mov
je
dec
daa
fcompl
push
add
and
dec
xchg
mov
ror
push
push
adcb
pop
dec
add
fdivs
loop
xor
inc
subb
xlat
mov
xchg
jae
in
cwtl
outsb
stos
mov
xchg
lock
mov
les
cli
insb
aas
popa
sbb
out
ret
inc
roll
xor
cmp
inc
mov
jae
cmc
rcl
mov
dec
mov
sub
inc
out
es
mov
adc
cmp
jge
divl
loope
inc
xor
mov
xlat
ljmp
leave
pop
into
clc
clc
repz
xlat
jno
cltd
lock
or
cwtl
xor
insl
addr16
cwtl
pop
jecxz
addr16
xchg
mov
mov
fadd
data16
imul
push
push
inc
inc
or
ret
data16
cmc
into
popa
or
dec
in
rclb
dec
rclb
out
fiaddl
mov
push
stc
aas
popa
pop
push
jae
popf
push
test
mov
jmp
push
adc
mov
lock
xchg
cmp
dec
inc
ficoml
xlat
add
inc
shr
andl
scas
loope
andl
adc
mov
arpl
mov
xchg
mov
je
cmp
adc
jl
cmp
adc
out
adc
jp
xchg
outsb
in
dec
xchg
fndisi(8087
cld
lock
shll
jg
sahf
out
jb
out
mov
out
out
jno
popa
cs
out
mov
repz
sbb
xlat
popf
cmp
push
jp
inc
mov
xor
popa
addl
xchg
out
in
mov
dec
jno
cmc
subl
jecxz
jbe
sub
ds
inc
push
fwait
push
jecxz
fdivr
jmp
xor
bound
and
ret
mov
jmp
or
sub
icebp
sbb
jae
inc
push
dec
or
add
test
jno
jb
fsubs
sarl
adc
test
adc
sub
sbb
and
pop
mov
xor
adcb
push
sbb
xor
andl
cltd
sar
push
leave
popa
jne
jno
and
cltd
mov
inc
data16
mov
xor
arpl
mov
icebp
xor
inc
shll
fdivs
loope
push
arpl
icebp
adc
clc
cmp
rolb
pop
cmc
xchg
loop
xchg
mov
sub
outsb
lret
popa
fsubrp
ds
push
sub
mov
mov
shrl
les
les
dec
fdivl
aam
push
mov
stos
push
repz
rcrb
add
rclb
ss
repz
icebp
mov
xor
xchg
sarb
sub
fsubrl
popa
jns
mov
outsb
mov
call
push
push
test
mov
mov
xor
mov
loop
adc
repz
mov
fwait
je
xchg
fs
fldenv
adc
jle
jno
push
outsb
inc
mov
icebp
testl
mov
sahf
dec
jne
push
push
dec
ror
jge
je
adc
sbb
jle
out
aam
shr
nop
jno
add
mov
loope
lock
out
lret
int
scas
cmp
add
leave
mov
push
adc
lock
mov
rcr
mov
into
icebp
shll
dec
add
mulb
adc
std
mov
repz
popa
xor
loope
test
outsb
and
daa
out
repnz
into
dec
lock
es
addr16
mov
push
pop
push
or
cmp
loopne
ret
fistpll
adc
add
lret
shlb
insb
push
fdivl
push
lret
pop
mov
les
mov
testl
pop
mov
mov
xorl
fistl
jo
push
shlb
adc
repz
jle
adcb
popa
jecxz
aam
roll
cltd
fbld
aam
and
nop
daa
mull
push
add
mov
mov
and
or
inc
and
and
ljmp
cmpsl
out
test
inc
rcll
or
pusha
test
fs
add
or
rclb
xlat
repnz
jb
je
daa
xorl
jle
mov
in
inc
push
or
mulb
arpl
bound
jno
or
mov
shlb
sarb
arpl
dec
les
mov
pushf
rclb
rcl
rol
insb
loop
and
loopne
adc
pop
rolb
push
push
add
loopne
adc
push
loopne
popa
into
dec
and
rolw
and
adc
dec
ret
cmp
xor
push
inc
lret
xor
mov
push
pop
add
xor
stos
sbb
das
out
push
push
xchg
xor
xchg
dec
jbe
inc
inc
pushf
notb
sub
call
sub
ljmp
scas
xlat
inc
jb
mov
loope
xor
xor
inc
push
rcll
fsubr
adc
int3
xor
inc
xorl
jle
js
pop
popf
inc
push
fnstenv
fucomi
pop
adc
ret
add
fbstp
push
inc
pop
xor
cmpsb
fidivrs
outsb
aam
fs
xchg
adc
xchg
in
adc
inc
shll
cld
mov
cmc
mov
lret
xor
or
push
jl
fwait
xlat
out
out
xor
adc
shlb
popf
inc
inc
jo
inc
adc
loop
icebp
mov
xchg
stos
sub
xor
xor
jbe
and
fcmovbe
xchg
les
ror
inc
icebp
call
add
xchg
call
inc
data16
loope
push
in
push
adc
xor
xlat
dec
shlb
idiv
mov
bound
add
and
je
pop
push
jb
cmp
dec
lcall
mov
inc
mov
inc
outsb
push
roll
or
out
xor
data16
mov
sub
out
pop
mov
jle
mov
inc
arpl
data16
in
and
lea
loope
lcall
scas
push
fcmove
adc
std
scas
and
shll
cmpsl
incl
sub
loope
scas
icebp
inc
jns
dec
mov
inc
stos
xor
push
cmp
inc
jl
test
xchg
ss
push
cmpsb
adc
jo
shrl
xchg
mov
jge
inc
sarl
adc
add
and
inc
mov
mov
shll
jno
and
dec
cld
jle
inc
add
inc
dec
sub
inc
fwait
or
cmpsl
adc
in
xor
lret
xchg
clc
mov
adc
xchg
dec
pop
mov
sbb
lock
and
out
stc
icebp
jo
mov
arpl
das
shll
arpl
xor
and
xor
adc
inc
and
mov
push
lret
repnz
out
cs
inc
xlat
adc
inc
mov
cmc
arpl
sub
cs
pop
je
outsl
mov
mov
mov
outsb
sub
ficoms
jns
bound
mov
fldenv
ret
fsub
les
lock
xor
push
dec
push
shrl
sbb
int
pop
ja
pop
addr16
pop
push
jnp
push
inc
xchg
ret
nop
sbb
jecxz
mov
aam
mov
push
push
shlb
jp
je
cmpl
and
cmp
push
and
push
out
inc
dec
and
push
lret
pop
jecxz
mov
mov
popa
je
push
shl
or
negb
xor
and
shl
jo
ss
dec
outsb
adc
mov
adc
out
pop
adc
and
push
iret
xlat
mov
add
popa
push
in
in
inc
jecxz
repz
add
pop
and
xchg
mov
js
loope
clc
into
loop
xlat
adc
mov
xchg
mov
les
icebp
mov
mov
xor
xchg
pop
and
xchg
cmp
and
js
xlat
and
out
add
adc
mov
or
dec
adc
push
inc
jl
mov
cmpsb
or
cwtl
dec
or
lret
pop
mov
push
push
stos
pop
jle
test
dec
and
jb
mov
inc
xlat
add
repz
jo
cmpsl
push
jae
xor
adc
cmp
push
mov
dec
repnz
fisubs
out
xor
add
imul
cmpsl
jle
inc
xchg
and
lret
mov
adc
shlb
push
mov
jb
das
mov
push
popa
xchg
xor
xchg
mov
pop
adc
fmull
test
arpl
fcmovb
jb
in
lret
xor
jne
adc
add
jno
mov
inc
ret
iret
popf
imull
adc
add
data16
xor
sbb
in
fldenv
xchg
lock
sbb
mov
popa
push
out
mov
lret
jecxz
push
push
push
fnsave
jb
cmp
push
adc
out
out
icebp
xlat
xchg
xor
push
push
xor
ds
mov
mov
add
jge
fs
xchg
sub
arpl
mov
daa
rorb
lods
cwtl
xor
jb
subl
xchg
mov
arpl
lods
push
and
ret
shll
cmp
sarb
insl
cmp
inc
add
mov
gs
push
inc
jno
mov
sub
push
xor
fwait
inc
nop
imul
cmp
call
mov
inc
notl
outsb
adc
faddl
mov
xor
sbb
xchg
lds
pop
add
or
mov
les
jae
dec
cmp
push
rcl
cmp
mov
adc
shl
sbb
push
xlat
inc
movsl
adc
dec
lahf
mov
aam
pop
je
inc
mov
or
pop
add
or
push
inc
and
out
inc
mov
push
xor
rorl
adcl
sub
sbb
cwtl
adc
xchg
mov
jl
jle
sti
inc
testl
pusha
and
cs
mov
or
cmpl
sub
mov
push
shll
fcmovbe
jb
shrl
adc
mov
nop
mov
shrl
xor
push
pop
mov
loop
loope
je
fwait
xlat
rol
call
cmp
dec
xor
les
stos
cmp
adc
push
xchg
ret
arpl
mov
sub
call
je
push
fs
xor
adc
dec
add
ja
and
pushf
outsb
and
ret
cwtl
sbb
xor
mov
pop
and
paddw
sub
loop
adc
xchg
mov
mov
add
ds
push
xchg
cmpsb
mov
pop
xchg
jo
in
push
push
adc
mov
into
enter
cmc
jne
add
xlat
jb
nop
push
scas
repz
jno
andl
mov
and
dec
sbb
sbb
out
adc
xor
shr
and
into
lods
stc
mov
bound
xorl
push
xchg
and
push
jns
jae
mov
cwtl
inc
add
popa
rol
lock
and
call
scas
test
xor
add
add
jle
mov
sbbb
out
shll
and
pop
je
jns
sub
xchg
icebp
push
pop
fdivrl
and
daa
mov
xchg
adc
inc
ds
aam
testl
mov
les
dec
jb,pt
data16
adc
loopne
or
jle
in
stos
popa
orb
and
jae
cs
pop
test
mov
sbb
mov
adc
ret
mov
insb
pop
push
mov
ret
or
pop
mov
sub
sbb
push
pop
and
out
ss
add
adc
and
andps
ja
das
adc
sbb
ljmp
call
xor
inc
gs
cmpsl
jecxz
icebp
push
loopne
out
pop
jb
mov
inc
push
mov
shrl
xlat
and
cmpl
jbe
add
ds
xorl
fwait
inc
fdivrl
mov
inc
bnd
inc
mov
repnz
push
xchg
les
test
scas
cmp
mov
push
mov
xchg
ljmp
outsl
lret
sub
push
push
push
test
sbb
jne
testb
jmp
fmuls
pop
sub
pop
shll
push
inc
popa
cmp
out
insb
sbb
ret
xor
and
lds
dec
jecxz
adcb
and
push
xchg
xor
gs
fisttps
mov
mov
sbb
jae
hlt
sub
jb
jbe
bound
xor
and
sarl
mov
cwtl
add
push
inc
add
cmp
xorb
repz
pop
sub
mov
sbb
rolb
jb
cmp
out
adc
orl
or
out
and
pop
jge
mov
iret
mov
fmulp
dec
clc
jae
fstps
cs
cwtl
adc
mov
inc
je
cmp
jmp
lock
xchg
outsb
ds
jle
jno
or
xor
adc
xor
inc
dec
jne
push
jecxz
jo
jecxz
mov
enter
in
xchg
test
or
dec
adc
test
sarl
inc
ret
mov
mov
out
mov
jne
pop
inc
test
push
insl
dec
add
push
fcmovne
movb
inc
andb
cmpsb
insb
mov
and
add
and
cmp
dec
mov
jmp
popa
inc
daa
popa
aaa
and
push
lea
mov
cmc
fs
call
outsb
cld
or
jb
negb
das
mov
je
outsb
shll
call
out
cmp
add
mov
cmc
sub
rorl
sbb
aam
dec
and
out
or
push
imul
adc
mov
adc
insb
into
jo
clc
inc
rol
arpl
mov
hlt
bound
mov
and
out
inc
and
or
ss
push
fsubrp
je
call
jmp
mov
mov
jb
out
xor
into
popa
mov
test
push
jb
icebp
mov
jl
mov
jb
cmpb
icebp
adc
mov
add
add
jle
sub
fwait
stos
rcl
cld
mov
loope
dec
sub
jg
push
sub
xchg
dec
mov
push
xlat
adc
push
mov
lds
xchg
loop
icebp
jb
bound
popa
out
les
shrb
sbbb
scas
dec
pop
push
xor
rolb
aas
jo
mov
hlt
dec
push
mov
and
dec
dec
dec
adcl
out
mov
jle
mov
xchg
popa
mov
popa
sahf
shll
dec
test
sahf
mov
repnz
gs
add
clc
push
mov
mov
add
and
or
into
outsb
mov
stos
push
push
test
jle
call
cs
sbb
adc
arpl
and
dec
adc
inc
je
cmp
repz
or
stos
loop
orb
add
and
or
pop
loop
xor
arpl
xor
pushf
fcoml
push
xlat
mov
ljmp
jns
in
cs
inc
cmpsl
ret
roll
and
adc
jno
shlb
les
xor
cmc
add
jae
mov
outsl
stc
and
jne
shll
xlat
arpl
inc
pop
in
mov
lahf
test
sub
add
sub
dec
ret
outsb
fwait
jno
mov
jb
out
fsub
test
je
in
dec
pop
add
sub
popa
adc
mov
jecxz
dec
or
out
dec
into
xorl
bound
fsubp
mov
inc
repnz
cli
psraw
and
imul
xchg
mov
inc
sub
push
jge
leave
push
cmpsl
xorl
inc
repz
bound
add
lret
adc
out
xor
and
loope
jno
and
outsl
push
in
cmpsl
push
mov
lock
xlat
in
adc
fists
and
mov
sbb
repz
loop
cs
mov
mov
pop
adc
lea
xor
mov
mov
in
xor
adc
imul
add
ds
xchg
inc
mov
dec
jle
mov
adcl
test
cli
push
adc
push
lcall
xorb
and
out
pop
pop
xor
outsb
into
sub
push
in
and
jo
nop
xchg
call
inc
adc
sbb
push
in
inc
pop
loope
mull
adc
mov
push
cs
insb
cmp
icebp
cmp
call
xlat
daa
jno
add
or
cwtl
imul
out
fisubs
dec
arpl
pop
and
and
ret
jecxz
out
mov
xor
inc
xchg
bound
jmp
pop
add
mov
in
push
xlat
dec
popa
shrb
in
stc
popa
xor
repnz
xor
adc
xor
adc
in
mov
js
xlat
jecxz
inc
icebp
addr16
adc
out
dec
adc
repz
push
push
or
cmp
loopne
add
adc
and
jnp
dec
lods
add
ja
je
push
pop
xor
or
push
xor
cmp
push
and
adc
fs
push
loopne
inc
xchg
imul
stc
adc
cli
repz
cmpsb
adc
dec
add
ret
mov
out
mov
loope
and
push
into
out
inc
icebp
and
rclb
adc
and
cli
push
loop
mov
and
mov
clc
bound
es
mov
inc
loope
sub
ds
popa
arpl
into
ret
inc
inc
fisubrs
xchg
and
out
int
jb
mov
xchg
cwtl
addr16
push
loope
xchg
movb
mov
arpl
addl
mov
mov
daa
mov
shll
add
popa
ret
mov
out
cld
pop
enter
mov
in
imul
xor
les
icebp
xlat
clc
sarl
clc
sbb
ret
mov
sub
bound
jae
fidivrl
inc
add
jno
mov
dec
add
mov
cld
jne
fs
and
inc
outsb
cmpsl
push
or
testl
in
inc
sub
pusha
xchg
add
outsl
cltd
mov
jb
pop
ret
cmp
mov
loope
icebp
popa
fidivrs
push
inc
insb
loope,pt
leave
dec
dec
xchg
push
icebp
fildl
mov
jecxz
add
in
inc
add
xor
arpl
shll
push
ret
inc
icebp
out
add
adc
push
xchg
push
jge
sbb
and
aaa
pop
jle
jo
lcall
pop
jge
mov
into
and
arpl
mov
adc
cwtl
repz
cmc
cmp
sbb
jge
jb
sbb
fmulp
add
mov
jbe
sbb
add
and
subl
mov
xor
cmpsb
je
xlat
add
loop
cmp
xchg
outsl
icebp
jb
push
add
mov
mov
shrl
dec
push
shll
pusha
mov
push
mov
addr16
ds
jno
xor
lods
nop
ret
icebp
mov
xor
xchg
pop
and
mov
adc
jp
mov
loop
insb
arpl
loop
cs
jecxz
sti
jmp
adc
scas
mov
push
inc
roll
adc
lds
sub
sbb
rcrb
ljmp
mov
dec
pop
and
push
ljmp
mov
andl
xor
cmp
dec
cs
sbb
arpl
or
cmp
inc
mov
into
arpl
add
sub
ret
sbb
push
mov
adc
test
mov
test
rorb
add
xor
jae
ds
and
lret
mov
xor
subb
ficoml
subl
out
repz
jecxz
push
in
jmp
mov
pop
add
ficomps
out
adc
mov
add
push
xchg
mov
pop
ret
in
mov
movb
xchg
cmpsb
adcl
adc
or
shll
mov
dec
ret
and
fs
jecxz
and
mov
mov
pop
loope
pop
xor
jae
adc
fbld
in
lret
mov
xor
mov
fmull
xor
lods
shl
repz
mov
pop
out
daa
add
out
mov
daa
and
push
jae
frstor
adc
jo
loopne
les
xchg
and
repnz
jp
or
sbb
or
and
cmp
dec
cmp
jmp
dec
adc
ret
icebp
call
xor
ja
in
push
mov
mov
in
aaa
xchg
jae
and
inc
sarb
xor
push
cs
lret
cmpsb
jbe
incb
or
push
and
shr
stc
fmuls
testl
mov
mov
andl
fs
xlat
or
push
out
or
push
outsb
add
push
sbb
cwtl
mov
dec
xlat
add
mov
out
xchg
les
jp
bound
xlat
sub
xchg
movb
jb
xlat
rcrl
bound
out
xchg
or
jnp
repz
pop
hlt
cmpsb
push
ja
dec
pusha
dec
fsubrl
mov
dec
adc
push
mov
bound
cs
addb
test
inc
imul
jae
in
ja
push
adc
lock
push
mov
ret
popa
dec
cmpsl
lods
addr16
lret
outsb
push
js
mov
sub
pop
js
in
and
loopne
xor
adc
add
cmc
xor
sbb
rcll
cmp
sub
loopne
andb
push
daa
mov
mov
stc
cmp
sub
mov
add
bound
or
ror
out
cmp
add
dec
ret
imul
xor
and
rcll
xchg
push
and
sub
sbb
fisubrl
jno
xor
pop
fcmovu
ds
jmp
mov
mov
mov
lret
jne
rcl
cs
jecxz
push
daa
mov
xor
push
divl
shll
add
dec
lcall
xor
mov
daa
mov
push
andb
push
dec
divl
xchg
adc
arpl
out
ret
add
xor
sbb
cs
xchg
int
and
mov
rclb
ss
cmp
fildl
xchg
je
shr
pop
and
push
mov
mov
je
les
adc
and
and
out
shl
inc
shll
mov
push
out
mov
mov
cs
mov
aas
mov
and
call
pop
and
mov
out
out
inc
lret
andl
pop
pop
into
lock
aaa
test
jae
mov
call
std
bound
and
into
mov
lcall
or
and
inc
mov
xor
mov
cli
sub
xor
orl
fsubr
xlat
jp
sbb
ret
adc
inc
mov
and
test
rorb
mov
loop
bound
mov
into
loope
mov
inc
mov
jbe
pop
mov
and
and
jb
ds
arpl
mov
outsb
icebp
out
and
daa
je
incl
idiv
xor
mov
bound
jle
dec
daa
mov
jne
push
mov
and
inc
adc
xchg
inc
cs
mov
fldt
cld
out
and
dec
dec
xor
jge
fnsave
xor
ljmp
push
add
or
jae
ds
ljmp
out
stos
je
mov
dec
bound
in
fildl
xor
adc
mov
popa
icebp
test
arpl
in
push
add
shrl
out
mov
repz
inc
rcrb
inc
out
sub
je
mov
insl
xchg
icebp
repnz
jge
roll
popa
ljmp
addb
mov
sahf
repz
dec
pop
shlb
adc
out
pop
and
add
mov
loopne
into
imul
cs
pop
sbb
shll
xchg
or
xchg
mov
add
adc
bound
in
xchg
add
pop
arpl
and
stos
jge
inc
and
mov
cmpsl
and
js
push
xor
bound
js
test
or
mov
adc
sub
mov
fists
into
ret
and
mov
iret
jb
fsubs
loope
lods
inc
adc
push
adcl
jno
inc
int
and
adc
rcll
jae
mov
add
push
mov
xchg
icebp
mov
shlb
or
xor
daa
jb
or
xor
push
jecxz
sbb
adc
sub
repz
push
add
icebp
js
push
mov
dec
ret
inc
sub
call
mov
xchg
pop
shlb
fisubrs
xor
push
cltd
jge
pop
xor
xor
xor
cmc
aas
xchg
and
call
stos
and
xchg
add
adc
push
mov
sti
icebp
and
shll
js
inc
dec
mov
jle
jae
outsb
xor
push
mov
inc
xor
aam
popa
jle
and
adc
xlat
ljmp
in
iret
add
xchg
mov
and
lret
repz
jmp
inc
ret
outsb
add
mov
inc
and
and
mov
orl
adc
mov
jge
or
cmp
loope
insl
jmp
jo
cmpsl
push
mov
adc
dec
clc
pop
popf
xor
and
add
push
lock
je
les
inc
into
and
loop
xor
mov
push
rcrl
cmp
in
fnsave
icebp
sub
cmpsb
mov
sbb
inc
mov
dec
jns
and
push
ja
and
pop
lock
dec
arpl
push
imul
xchg
push
jae
pop
adc
rorl
jae
cmc
jge
jno
inc
lret
xor
jb
xor
sbb
out
arpl
lea
jmp
xor
push
or
arpl
add
xlat
mov
xlat
dec
xorl
jle
sarb
mov
into
push
shrb
iret
out
xlat
js
push
je
movntq
loope
cmp
and
pop
es
cmp
push
popa
loope
mov
push
push
jb
or
sbb
cld
inc
fcomip
sbb
xor
pop
ljmp
ds
pop
movsl
ds
add
andl
mov
popa
ret
imul
mov
in
xorb
je
sbb
jl
pop
sti
xlat
icebp
xchg
and
mov
jge
jg
inc
mov
mov
jle
push
rorl
push
jo
clc
push
adc
xchg
xlat
adc
mov
push
ret
imul
jmp
sub
and
add
shrl
mov
pop
inc
sub
push
and
pop
jb
cmc
lods
or
push
jae
shll
xor
adc
ds
and
sbb
dec
cmpsb
adc
cmp
call
out
adc
jae
fwait
daa
adc
mov
cld
ficompl
jl
inc
outsb
jecxz
push
pop
pop
inc
inc
je
dec
cltd
pop
push
mov
loope
test
inc
push
push
into
leave
roll
or
les
xchg
push
lods
rolb
jle
push
inc
inc
mov
inc
cs
xlat
jecxz
mov
add
push
mov
push
cmc
les
inc
adc
xor
add
cmc
insl
dec
mov
xchg
jge
add
inc
mov
repz
arpl
inc
add
in
loop
push
lock
jecxz
in
arpl
pop
bound
data16
xchg
jno
sahf
mov
ljmp
leave
js
ds
cmp
adc
jge
push
mov
call
icebp
push
or
les
fsubrp
push
and
sub
sub
mov
arpl
lock
sbb
mov
add
icebp
int3
mov
movsb
dec
jecxz
xor
add
popa
test
adc
xor
cmp
loopne
adc
cmp
lods
loopne
ret
jno
out
add
cmp
push
dec
mov
icebp
cmp
sub
les
add
jl
pop
outsb
dec
mov
ss
inc
sub
lcall
mov
loope
into
fnstcw
and
lds
cmp
enter
jne
arpl
andl
adcl
jge
pop
xchg
sbb
sarb
rol
je
mov
or
test
mov
cs
push
fimuls
push
push
push
aam
dec
cltd
lret
push
sub
jae
add
pop
shll
shrb
dec
ret
inc
movsb
rol
aam
push
loopne
jb
push
mov
mov
add
cli
ljmp
mov
push
shll
outsl
inc
repz
inc
cmp
or
ret
jb
and
pop
shll
les
test
aaa
std
adc
arpl
xor
fs
unpckhps
sarl
xchg
sub
push
loope
and
xchg
sub
cmp
xchg
xor
popa
repz
jecxz
xor
or
push
addl
out
lods
dec
shll
fstpt
cs
fsubrs
cli
fiadds
jge
mov
cld
loope
dec
fistps
out
sub
xchg
push
je
dec
ret
inc
xor
dec
sahf
data16
mov
xchg
stos
ja
popf
push
add
cwtl
je,pt
xchg
inc
adc
pop
xlat
aam
xor
sti
clc
jle
push
fisubs
fmuls
movsl
push
repz
adc
pop
ficomps
jno
inc
and
sbb
rorb
push
inc
repnz
into
jle
je
addr16
jb
sub
js
test
pop
jno
cmp
in
push
inc
push
push
jb
mov
cmc
xorl
in
jecxz
inc
rorl
lds
lock
and
ret
push
push
mov
mov
xlat
push
shll
sub
addl
inc
es
movsl
jle
jbe
mov
daa
mov
stc
int
inc
mov
xorl
cmp
add
imull
andb
je
loope
sbb
mov
push
je
jge
rcl
mov
xor
jo
repnz
inc
xchg
add
fcom
roll
jno
ja
lcall
xor
std
xlat
xor
cs
add
les
call
or
bound
jb
push
mov
out
xor
mov
outsb
mov
inc
sahf
mov
mov
inc
icebp
add
xchg
shlb
xchg
pop
dec
dec
mov
ret
out
xchg
or
cs
jne
ds
test
and
stos
jmp
popa
mov
mov
cmpsl
jae
ret
and
popa
sub
roll
sub
xlat
and
rcrl
mov
loopne
shll
cs
imul
mov
inc
push
add
in
and
dec
shrl
fwait
jge
pop
inc
mov
mov
out
mov
xor
jbe
adcb
fisttps
add
jp
out
mov
xor
sbb
mov
scas
push
divb
into
and
mov
rolb
jecxz
in
jno
mov
push
jb
sub
mov
sbb
add
push
fwait
jbe
mov
data16
jo
pop
sbb
sti
iret
test
adc
adc
sub
and
idiv
mov
mov
xor
and
outsb
les
out
push
xchg
adc
out
adc
popa
mov
inc
outsb
mov
mov
ret
les
pop
notb
xorl
cs
mov
cmp
hlt
sbb
dec
shrl
mov
xlat
push
shll
aam
or
call
mov
mov
jno
test
in
rclb
jle
pop
push
into
icebp
ret
ss
and
jb
shll
xor
cltd
mov
stos
inc
jle
dec
adcb
xchg
test
fsubrl
cmpsb
aam
jno
sahf
mov
into
in
fisttpl
xor
push
and
rcll
jle
mov
neg
add
out
mov
mov
daa
and
xchg
jl
mov
mov
stc
inc
mov
fwait
aam
icebp
aas
pushf
jns
adc
ret
pop
popa
mov
pop
fs
outsb
mov
inc
inc
add
mov
sbb
pop
les
imul
push
adc
or
fsubs
enter
shll
lret
std
loope
outsb
mov
icebp
or
mov
movl
ret
shll
andl
adc
int
adc
mov
jecxz,pt
xchg
out
shl
lret
mov
test
and
inc
and
mov
push
sub
adc
push
fs
mov
inc
testl
and
out
mov
mov
pop
jno
mov
adc
dec
sbb
xlat
insl
int3
mov
xor
out
outsb
ret
xor
out
leave
popa
push
cmp
xchg
adc
xlat
cmp
fcoml
mov
pop
push
lret
ja
xor
mov
inc
lods
or
jle
ds
xlat
jecxz
mov
loope
ret
sub
hlt
outsb
xchg
loope
cmp
push
mov
push
sahf
not
andl
inc
leave
add
andl
cs
jno
out
testb
jecxz
xchg
aam
xor
jno
inc
and
into
xchg
mov
insb
push
popa
inc
bound
jns
sbb
and
and
cmp
daa
out
inc
insb
inc
bound
add
add
arpl
ret
adc
int
popa
cmpsb
mov
mov
and
cmp
jge
subb
sbbl
sub
imul
jb
pop
push
dec
mov
xor
mov
push
ret
add
pop
cmpsl
sbb
push
adc
popf
xor
cmc
or
mov
ret
bound
jo
loopne
push
shrl
sbb
cmc
and
ds
scas
cmpsl
adc
xlat
inc
iret
push
icebp
jle
or
outsl
ret
jno
cs
bound
dec
arpl
ret
push
xor
shrl
je
push
into
inc
nop
pop
jne
xor
mov
mov
cmpsb
dec
jae
dec
movsl
pop
subb
mov
shrl
push
adc
rcll
jge
xor
dec
sub
jae
aam
cmpl
in
ljmp
arpl
outsb
and
xchg
lret
test
loope
jo
add
f2xm1
mov
push
call
js
push
cmpl
out
jecxz
adc
adc
ja,pt
and
shll
jno
jb
inc
or
in
sub
inc
pop
loopne
xor
mov
inc
into
adcl
dec
add
adcb
mov
divps
shl
adcl
popf
fsubl
xchg
mov
push
aam
xchg
out
xor
mov
push
inc
rcrl
arpl
jns
into
push
inc
fmulp
mov
sar
mov
mov
out
push
ret
divl
lods
mov
inc
rcl
mov
inc
inc
mov
scas
loop
adc
daa
inc
and
mull
loope
or
xor
icebp
cmp
sub
shll
mov
scas
movsl
push
xchg
popa
dec
adc
les
sub
les
not
mov
loope
or
clc
outsb
mov
mov
push
icebp
xor
adc
testl
fisubl
inc
xlat
shl
adcb
in
ds
repz
jns
into
inc
sbb
lahf
mov
out
std
repnz
popa
jb
xchg
idivl
sbb
sbb
pop
jnp
loope
ds
jne
cmpsl
mov
xor
push
add
cs
rcrb
mov
xor
add
cli
pop
adc
adc
jbe
pop
add
and
std
fcoml
mov
xor
jno
idivb
or
xor
sub
inc
hlt
xor
popa
fs
shll
ds
icebp
pop
out
shl
and
xor
pop
jmp
mov
arpl
push
adc
scas
cs
inc
push
dec
push
gs
stc
sti
clc
ret
push
push
xchg
bound
dec
arpl
mov
loop
and
test
popa
subl
push
xchg
jb
out
rcll
shll
js
add
jle
out
jae
adc
mov
xor
mov
jo
mov
inc
bound
jge
add
inc
fldt
fldenv
sbbb
pushf
fs
push
in
xlat
out
push
jo
popa
mov
jecxz
sub
mov
dec
push
sub
jbe
mov
test
aas
mov
push
outsb
cs
xchg
and
or
jnp
pushl
mov
out
dec
mov
push
cwtl
xchg
mov
cwtl
les
in
shl
jb
jo
in
cltd
in
repz
inc
ds
into
mov
and
fs
testl
iret
cmc
adc
test
stc
cmpsb
push
push
into
adc
push
and
hlt
ret
mov
jnp
or
dec
mov
jmp
push
fadds
fnclex
adc
call
ja
pop
js
outsb
push
ds
xchg
mov
adc
rclb
push
fldenv
shl
cmp
out
add
in
xor
test
pop
ret
fldt
rcr
ljmp
inc
shlb
stos
nop
hlt
fcomi
jbe
mov
shl
aam
jb
arpl
xchg
shrl
xchg
inc
roll
push
and
xchg
inc
xor
movsl
imul
mov
popa
cs
mov
xor
add
arpl
icebp
push
hlt
mov
pop
push
mov
and
scas
push
dec
dec
inc
test
adc
mov
mov
push
roll
roll
xlat
jl
fcmovnu
xor
fninit
adc
movsl
aam
mov
inc
push
push
inc
xlat
adc
adc
sub
push
ficomps
test
into
dec
bound
in
call
in
dec
cmc
inc
into
je
andb
dec
mov
inc
out
lds
cmpsl
xor
in
enter
mov
lock
mov
add
sub
ljmp
aam
xlat
push
xor
cmp
orb
xor
pop
push
push
fdivs
or
cmpsl
jae
jae
shrb
sbb
cs
adc
jne
je
cmpsb
cmc
js
inc
pop
subb
mov
mov
fs
inc
je
xor
and
roll
lods
dec
mov
xchg
stos
test
js
scas
andb
jmp
cli
clc
sub
icebp
aam
dec
xorl
xchg
fdivp
mov
shll
cmpsl
scas
js
adc
sbb
add
lock
insb
mov
imul
dec
mov
loop
rclb
and
mov
out
xor
mov
push
jecxz
pop
in
clc
shrl
int
mov
or
fcoml
inc
ds
xchg
dec
test
and
roll
out
call
and
fildll
loope
rolb
je
inc
jns
insl
pop
das
cmp
sahf
inc
xchg
pop
sub
mov
pop
mov
mov
lcall
roll
filds
movsb
adc
xor
push
into
movl
dec
mov
lret
push
push
sbb
out
rcll
xor
mov
cs
sbb
adc
mov
fdiv
adc
cmpl
jae
das
fs
negb
gs
cmp
scas
rclb
and
add
inc
and
mov
adc
fmuls
inc
xor
into
and
fiadds
pop
xlat
daa
hlt
mov
outsb
lods
div
and
push
faddl
into
jle
fdivrl
aam
adc
loopne
rcr
xor
clc
in
sub
pushl
mov
sbb
xlat
push
dec
push
subl
andb
shr
inc
cs
or
arpl
pop
test
mov
lods
xorb
repz
mov
mov
push
pop
test
fdivs
popa
ret
sbb
jle
pop
mov
loop
roll
add
jb
xchg
movsl
xor
dec
cs
mov
lock
rcll
jl
test
add
and
scas
sbb
dec
adc
arpl
pusha
mov
loope
les
addl
addl
in
jecxz
mov
push
mov
pop
leave
adc
into
push
jae
and
sarl
test
lock
xlat
dec
push
pop
inc
xor
jne
xor
inc
xchg
push
sti
or
xlat
pop
and
xchg
cmp
js
and
fs
mov
bound
push
xchg
inc
je
bound
jmp
sbb
and
adc
popa
ret
dec
push
ljmp
movsl
sarl
add
into
nop
mov
cmc
xor
xchg
sbb
or
push
out
add
jb
daa
and
push
cs
push
adc
pop
mov
mov
mov
and
add
jae
adc
push
test
cli
dec
negb
inc
and
mov
fs
lds
addr16
xchg
jmp
push
inc
outsb
jno
sahf
cmp
ret
das
jge
mov
xchg
jns
push
sub
cs
push
jecxz
inc
push
divl
out
mov
push
mov
jno
lds
stos
xchg
push
xor
push
xchg
imul
sub
insb
mov
push
jp
notb
fs
ret
dec
dec
cmc
scas
mov
and
sub
inc
mov
clc
arpl
dec
lret
mov
rcll
lds
addr16
sub
js
push
mov
dec
daa
push
mov
in
in
mov
mull
mov
daa
pop
mov
inc
mov
andb
ficomps
push
insb
inc
repz
or
xor
je
mov
xchg
adc
cmc
lcall
xchg
test
jnp
stos
cmp
mull
mov
xchg
stos
rorb
out
push
adc
push
ret
loope
insb
dec
sub
loope
loop
aam
into
adc
std
add
cmpsl
jle,pn
cmpsb
scas
cmp
adc
inc
jns
jmp
out
inc
movsb
push
pop
out
and
data16
jo
cmpsb
into
xchg
inc
mov
popa
lods
sbb
aam
mov
mov
mov
xchg
out
xchg
add
sbb
mov
inc
out
mov
adc
xchg
mov
mov
or
dec
rcrb
cmc
add
adc
ret
mov
adc
pop
call
daa
push
jno
sbb
fstpt
jae
dec
repz
mull
outsb
push
test
sub
movsl
dec
sub
mov
clc
jecxz
bound
into
push
xchg
and
sub
dec
push
je
test
mov
lods
loope
out
int3
aam
repz
push
jle,pt
repz
inc
push
ljmp
xor
lds
add
pop
mov
icebp
and
push
xor
pop
and
jl
adc
cmp
add
outsb
mov
jl
bound
imul
test
out
sub
iret
cmc
mov
divl
add
and
add
xor
rcll
ds
sub
xor
push
add
out
and
inc
adcl
sub
jo
imul
inc
mov
jbe
addl
js
push
push
adc
scas
popa
adc
call
cmpsb
adc
jae
addr16
cmp
adc
xorl
mov
push
jno
xlat
fadds
mov
aas
xor
js
mov
mov
xor
std
cmp
mov
ds
adc
xor
stos
sub
idivl
push
sub
testl
mov
les
xor
sub
push
mov
sarl
fsubrp
inc
xlat
adc
adc
test
xor
jae
jmp
into
inc
and
jns
jno
mov
jle
jp
bound
jae
lret
nop
push
popa
inc
scas
es
ds
mov
xchg
inc
mov
aam
push
mov
arpl
push
and
cmpl
push
dec
xor
xchg
dec
pushl
xchg
mov
std
out
stos
dec
and
roll
lret
dec
test
sub
stos
cmpl
adc
push
andl
mov
outsl
rcll
adc
sbb
mov
out
mov
mov
add
sub
shl
mov
mulb
js
into
lock
in
xchg
mov
leave
pop
inc
rol
dec
jno
sub
pop
jle
aam
mov
pop
lcall
sub
loope
xlat
push
cmpsl
jb
push
xchg
leave
test
jle
inc
inc
jle
adc
fcoml
rcrl
adcb
pop
js
and
push
fs
or
and
iret
mov
xchg
xor
add
mov
clc
leave
sub
iret
push
cmp
inc
adc
add
mov
push
xchg
inc
inc
push
adc
pop
mov
dec
inc
jge
cmp
and
adc
mov
notb
out
add
mov
nop
int
bound
push
clc
mov
xor
cmpsl
add
and
dec
call
fstpt
les
adc
lcall
popa
jecxz
mov
std
lahf
push
adc
adc
dec
loope
outsb
les
sbb
push
jl
xchg
inc
ret
jge
ds
add
scas
shll
insb
sbb
popf
inc
push
popa
mov
sarl
outsb
notl
xchg
adc
add
sti
inc
and
arpl
out
mov
dec
mov
mov
inc
push
fisubl
jle
je
lret
adc
xchg
push
mov
sbb
adc
jge
jecxz
sub
inc
xor
sbb
mov
xor
rolb
mov
cmp
or
or
xchg
xchg
jbe
dec
push
sbb
push
mov
fdiv
push
ret
imull
xor
inc
arpl
dec
in
fisubl
icebp
lock
into
push
mov
xchg
or
adc
push
dec
add
mov
ficoml
xorl
pop
mov
and
mov
mov
dec
shll
cmpsl
adc
popa
ds
out
push
jne
shll
pop
arpl
inc
xchg
push
repz
les
adc
ds
loope
dec
xlat
push
mov
xchg
or
mov
push
cli
inc
or
dec
ja
sbb
push
push
and
inc
adc
jecxz
add
rolb
dec
leave
shlb
xlat
fnstsw
arpl
jl
out
inc
shll
dec
es
adc
arpl
jge
in
push
iret
sub
mov
sub
pushf
xor
shrb
adc
aaa
adc
into
adc
jae
je
and
shll
into
xor
mov
jle
jae
popa
xor
adc
jge
mov
repz
out
adc
inc
mov
daa
fisubs
rcll
cltd
out
push
negl
xor
sub
inc
mov
push
add
mov
mov
inc
inc
sbb
das
cmp
dec
cs
inc
jae
inc
dec
pop
aam
push
add
xor
in
icebp
xchg
es
push
je
sbb
faddp
push
inc
push
jnp
stos
cmp
jo
dec
dec
jle
jg
lds
repz
cmp
mov
les
add
xor
test
inc
test
push
inc
adc
push
and
arpl
add
subl
pop
loope
loopne
out
js
cltd
icebp
push
data16
sbb
inc
mov
inc
out
mov
add
vmovntps
xor
adc
push
jecxz
and
std
into
test
mov
shl
out
les
xor
dec
cmpsl
jle
sub
les
jge
in
frstor
shr
rorl
adcl
dec
adc
daa
cs
mov
loope
jecxz
dec
add
pop
testl
jge
out
andl
test
arpl
mov
loope
xor
jmp
maskmovq
mull
push
sub
roll
and
add
cmpb
dec
jmp
jo
call
add
push
cmpsl
xchg
pop
je
xor
push
inc
inc
mov
xor
negb
mov
push
jae
and
orl
stos
xor
and
in
in
lock
ds
pop
and
fdivrp
jae
xlat
loop
add
cs
in
fisttpl
or
sbb
aam
shl
fldl
xor
xlat
mov
rcr
inc
mov
addr16
add
mov
popa
bound
add
cmp
pop
adc
rcr
lret
push
push
mov
and
dec
adc
rcll
dec
cmp
jmp
inc
cld
mov
mov
cmc
sub
in
push
mov
out
icebp
push
fistpl
mov
orl
scas
loope
cmpsl
add
mov
out
xchg
adc
and
shll
stos
mov
int3
dec
std
inc
adc
cli
xchg
je
push
test
je
jge
in
icebp
jecxz
bound
adc
jp
out
les
cs
sub
loope
adc
dec
push
test
pop
divl
in
jb
add
push
dec
movsl
mov
push
int3
jecxz
outsb
rol
adc
loop,pn
and
lret
out
rorb
inc
sbb
jb
fdivrp
rorb
out
daa
adc
int3
adc
pop
xor
cs
divb
into
jno
rorl
sub
xchg
fwait
shrb
mov
pusha
xchg
jbe
and
rcll
mov
mov
pop
add
push
into
xchg
and
push
add
fldt
lret
and
push
ret
xor
xor
shl
scas
and
adc
xor
add
jbe
ds
cltd
out
jb
xchg
out
jo
out
cld
xchg
xor
ret
mov
mov
jecxz
inc
repz
xlat
clc
sarl
sub
ljmp
dec
lcall
cli
loopne
shl
xchg
mov
mov
jle
lds
mov
pop
lds
addr16
cli
outsb
sub
cmp
adc
loope
ljmp
and
shr
mov
push
xor
or
mov
sbb
mov
into
arpl
adc
jge
or
sysexit
sbb
adc
ljmp
les
or
out
pushf
div
lcall
dec
mov
outsb
popa
jb
jo
daa
cs
sub
xor
add
push
fsubl
jecxz
sub
dec
dec
rcll
mov
xchg
add
push
xchg
ror
cwtl
mov
push
jne
mov
pop
xchg
push
jle
inc
push
js
addl
je
push
xor
int
dec
clc
mov
clc
and
aam
mov
dec
scas
stos
jne
inc
push
inc
pop
and
mov
cmp
or
jae
push
xor
sbb
lea
push
rcr
and
xchg
and
push
daa
xlat
shll
cmpsl
mov
rorl
push
xor
mov
lret
in
mov
lods
pop
int
in
inc
mov
dec
in
outsb
fwait
cmpsl
bound
repnz
scas
inc
popa
popa
fcmovnbe
xlat
fidivl
and
mov
mov
sarl
push
and
sbb
sbb
mov
loop
and
inc
fs
cld
das
mov
cmp
pop
jo
xchg
mov
pop
shll
sub
in
inc
and
push
in
shll
loope
movups
mov
fisubl
push
inc
xor
repz
mov
ja
inc
dec
mov
adc
sbb
testb
rorl
cmc
lds
xor
rcll
mov
push
xchg
je
int
adc
jle
rcrb
insl
out
push
xor
jecxz
mov
faddp
add
shll
in
data16
nop
xlat
adc
cmc
mov
inc
outsb
xchg
stos
notb
push
gs
test
mov
sub
inc
repz
sub
mov
xor
shrb
inc
xorb
cs
in
sub
mov
bound
add
mov
ret
and
orl
mov
inc
xchg
and
loop
jno
dec
sahf
aam
mov
xlat
or
and
les
xchg
sbb
pop
push
rclb
out
pop
dec
inc
sub
mov
dec
adc
ja
repz
push
dec
popf
add
jbe
imul
xchg
mov
mov
call
inc
add
das
int
mov
cmp
in
inc
mov
xchg
ljmp
inc
in
and
jnp
jle
pop
mov
push
and
fs
xor
repz
inc
jmp
ret
pop
cltd
arpl
repz
icebp
ds
push
outsb
mov
jo
repz
inc
shlb
and
and
inc
dec
adc
add
imull
jb
jae
lret
push
je
std
push
adc
dec
lock
adc
jae
sti
inc
scas
cs
cmp
loope
pop
add
push
imul
roll
sub
or
stos
cmp
dec
shlb
std
mov
sbbb
mov
push
shll
and
sbb
js
dec
fadds
call
cmpsb
adc
ds
call
push
add
jo
repz
ljmp
arpl
xor
mov
mov
imul
mov
adc
xor
sahf
aam
xor
in
out
mov
out
cld
mov
pop
ljmp
lods
push
notl
cmp
and
shll
rcl
ds
jge
push
mov
push
bound
out
inc
push
xchg
inc
cmpsl
into
ja
sub
arpl
xchg
jle
add
jne
adc
out
mov
and
inc
loope
inc
out
jnp
shll
xchg
mov
rcl
push
xlat
roll
jle
ret
in
repz
jge
popa
divl
mov
jno
shrl
mov
mov
jne
add
lea
add
sarl
jge
mov
add
and
pop
xor
lcall
loopne
and
mov
jl
mov
cld
pop
test
out
rcll
outsb
xor
lds
push
jb
push
inc
lcall
ds
and
xlat
cmc
pop
and
andl
scas
leave
scas
jbe
lret
xor
push
jo
loopne
icebp
sub
shr
jp
movntq
out
test
jmp
or
or
addr16
pop
ret
xor
xor
xchg
adc
mov
jo
cmc
roll
jle
add
dec
imul
add
sbbl
outsl
and
fcmovnbe
roll
icebp
push
sub
repz
jge
mov
push
fsubs
inc
jecxz
mov
cmpsb
and
dec
pop
bound
les
adc
notl
notl
arpl
lods
add
fs
cmp
and
inc
outsl
add
daa
call
lea
adc
les
jg
inc
dec
mov
in
inc
iret
ljmp
mov
mov
inc
inc
dec
xchg
int
aaa
pop
inc
jge
xlat
in
pinsrw
mov
xlat
icebp
leave
je
adc
cmp
and
std
daa
mov
or
jno
xor
cmpsl
mov
pop
repz
jb
stos
cmc
pop
mov
mov
xor
jmp
cwtl
mov
and
stos
push
mov
shrb
les
xor
and
push
push
push
mov
sub
pop
cmp
inc
out
lea
sbb
insl
mov
mov
fmul
xlat
lret
xlat
push
loop
mov
jno
insb
loope
push
mov
xor
dec
lcall
jbe
repz
dec
movsl
mov
jb
pop
imul
lock
push
std
mov
jae
mov
scas
mov
xchg
fcmovnb
or
adc
popa
adc
adc
jae
test
inc
inc
ret
ljmp
pop
adc
xchg
add
cmp
push
out
add
idiv
push
dec
insl
mov
and
inc
popa
jb
loop
out
pop
sahf
les
out
in
cs
push
inc
bnd
xchg
cmp
je
jle
or
xor
mov
adc
xlat
lret
andl
ret
jge
loope
adc
and
in
pushf
jge
popa
mov
jle
ljmp
mov
out
inc
ja
push
data16
arpl
xor
arpl
mov
and
mov
inc
mov
out
jle
xorl
mov
xor
or
mov
fdivs
into
ss
mov
adc
out
data16
mov
xor
mulb
adc
push
in
jge
rorl
jbe
in
mov
clc
sbb
rcll
jnp
arpl
cmp
je
cmc
push
adc
xchg
jno
mov
xor
add
fs
dec
xchg
push
mov
sahf
testb
mov
and
mov
push
jnp
sbbl
into
adc
pop
cwtl
shrl
clc
test
cmp
in
xor
shlb
ljmp
mov
xor
add
add
popa
je
dec
inc
mov
mulb
testl
mov
icebp
jecxz
mov
dec
adc
inc
flds
inc
mov
dec
push
popa
sub
data16
inc
inc
xchg
jae
lret
pop
and
outsb
xchg
adc
push
xchg
aas
loopne
mov
xor
in
mov
inc
push
dec
outsl
jle
xchg
sub
scas
xor
xor
push
cmc
and
mov
icebp
loope
dec
addr16
jecxz
and
adc
iret
popa
add
push
pop
ret
jne
orl
fs
xchg
push
repz
call
dec
and
repz
xchg
and
jle
lds
pop
xchg
and
push
mov
fnsave
bound
xlat
adcb
mov
jge
and
and
or
fs
andl
mov
ficoms
popa
outsb
pop
shr
lods
into
sti
jmp
jo
or
xor
repz
push
push
sar
jecxz
mov
sti
faddl
arpl
mov
ljmp
bound
ds
jb
mov
adc
push
xorl
fistpl
add
scas
dec
outsb
xchg
xchg
xor
adc
sub
jle
mov
mov
push
mov
push
ss
push
mov
pop
xor
dec
mov
out
push
outsb
loopne,pt
out
outsb
sbb
sub
pop
mov
loope
mov
mov
sbbb
push
outsl
cmp
pop
mov
stos
sub
jle
inc
and
xlat
outsb
mov
inc
ret
je
mov
out
xchg
inc
adc
dec
xor
int3
mov
dec
int
xchg
lret
cwtl
andl
cs
mov
xor
or
pop
adcl
xchg
rolb
inc
jne
xorl
jno
ja
and
jbe
sti
push
push
push
aam
xor
add
jmp
roll
inc
mov
int3
mov
push
mov
adc
loopne
out
ficomps
out
push
xchg
jge
cmp
cmp
add
mov
adc
jp
fs
and
es
out
dec
je
and
jle
lods
push
jno
outsb
xchg
add
fpatan
dec
jb
imul
and
outsb
out
jb
mov
icebp
lock
imul
shll
out
les
mov
xchg
sub
add
and
adc
dec
pop
ljmp
inc
dec
ljmp
andps
xorb
rorl
and
inc
pusha
jne
xchg
push
or
push
ret
rorl
dec
addr16
lea
fnstsw
add
jae
pusha
and
cmp
nop
popa
xchg
clc
mov
push
push
pusha
add
into
shlb
push
mov
das
ljmp
add
adc
mov
addl
and
xchg
push
sub
inc
xor
outsb
xor
add
rorl
cmp
cmc
and
idiv
cmp
push
jmp
push
inc
cs
sbb
jecxz
sub
pop
pop
sbb
pop
andl
lcall
inc
dec
add
les
mov
scas
jae
stc
xor
cmc
push
notl
stc
inc
mov
jle
cli
cmp
lret
cmp
out
ds
inc
add
and
add
loope
mov
mov
ret
cmpl
inc
stc
loop
and
rcll
push
push
mov
dec
in
inc
ds
jo
sbb
dec
xor
into
movsl
or
mov
repz
js
lock
xor
inc
xor
mov
mov
daa
sub
cmp
sub
in
pop
xchg
hlt
ret
cmpsb
jno
subl
push
add
jle
pop
or
xlat
adc
out
unpckhps
adc
xchg
addl
xor
jae
add
adc
popf
insl
popa
mov
cmp
outsl
push
mov
psubb
sahf
xorl
repz
fisttpll
mov
mov
out
push
push
shll
xor
fildl
push
ds
ficomps
add
sti
pop
add
adc
inc
inc
jno
pop
cld
out
rorb
fsubrs
cmp
int3
ds
adc
popa
jae
cmp
in
sub
dec
fdivrl
hlt
jmp
out
cmp
and
subb
jb
inc
sbb
sbb
mov
ds
lret
ret
xor
sbb
fwait
cmp
aaa
push
jb
aas
pop
jp
data16
xchg
repz
push
cltd
adc
outsb
sub
out
push
lea
xchg
cmp
mov
jb
xchg
xchg
data16
out
imul
xor
repz
inc
dec
cmp
jbe
aas
ficompl
mov
out
cmp
in
sub
sbb
sbb
pop
scas
xchg
mov
jo
adc
and
pcmpeqb
ljmp
push
mov
fs
arpl
out
xlat
popa
sarl
out
adc
add
jmp
out
mov
movsl
and
mov
cs
icebp
and
jecxz
repz
or
in
or
inc
into
jl
push
pop
dec
std
mov
inc
call
popa
in
test
in
out
mov
clc
mov
into
or
dec
sub
mov
push
push
ret
pop
les
mov
inc
loopne
inc
loopne
movl
adc
jno
fcmove
dec
or
pop
pop
lds
pop
jmp
dec
inc
ret
jno
outsl
xchg
xchg
adc
movsl
cli
repz
andb
add
xchg
sbbb
xor
int3
push
adc
sub
xchg
out
sbb
xor
fdivrl
and
mov
inc
mov
adc
pop
adc
out
jmp
mov
fcom
push
sub
lret
jb
jecxz
adc
add
inc
push
add
push
push
pavgw
mov
shlb
xlat
rorl
inc
out
pop
lea
hlt
push
mov
subb
dec
out
jns
push
adc
xor
jbe
push
and
je
iret
daa
inc
mov
into
push
mov
mov
dec
loope
add
inc
add
shll
es
push
popa
sbb
xlat
sub
out
push
mov
or
shl
mov
jge
and
rorl
jecxz
iret
dec
inc
push
jle
mov
loope
cmpsl
jae
pop
adc
cmp
out
fdivl
inc
mov
or
xor
push
push
and
cmp
je
negb
loopne
subl
shr
add
xchg
ds
push
out
int3
dec
push
add
xor
out
push
jecxz
inc
or
xchg
cmp
push
xorb
pop
inc
aam
bound
subl
push
push
adc
or
shl
push
into
xchg
sarl
loope
cwtl
cmp
adc
test
mov
add
push
bound
dec
add
jg
bound
push
bswap
push
outsb
add
cmp
push
xlat
and
sub
dec
rol
dec
out
xor
xor
mov
mov
mov
into
push
jmp
std
sbb
add
xor
shll
pop
push
into
and
push
shll
jecxz
inc
jbe
int
in
xchg
jo
pop
and
sarl
sub
call
mov
hlt
mov
push
push
repz
push
xchg
xchg
lret
decb
shll
push
mov
test
aam
push
cli
testl
les
les
and
adc
xor
lea
dec
fisubrs
fnstenv
bound
pop
xchg
dec
jb
arpl
loope
insb
jecxz
out
aad
shl
inc
xchg
push
test
je
shrl
mov
add
shl
imul
je
lret
cmp
ljmp
and
bound
ds
and
xlat
add
xchg
xor
adc
pop
mov
push
and
mov
popa
fsubp
xor
jno
mull
icebp
fidivrs
inc
leave
cmp
mov
in
gs
fistps
std
sti
and
outsb
ds
and
popf
cmp
pushw
push
push
mov
xor
andb
xor
pop
les
adc
andb
pop
mov
push
and
push
popa
sbb
adc
mov
shll
call
mov
insb
cmpsl
xchg
into
clc
test
sub
daa
movsl
mov
and
inc
flds
sub
rorl
cmp
inc
clc
adc
push
mov
jge
mov
out
into
jne
pop
les
loop
inc
adcl
push
andl
mov
cmp
loope
pop
adc
ret
dec
xchg
fcmovnb
mov
inc
into
rolb
bound
xchg
into
icebp
bound
stos
xor
push
mov
cmpsb
and
add
or
xchg
cmp
sub
clc
xlat
add
mov
sub
cs
mov
outsb
sbb
outsl
bound
arpl
xor
mov
repz
arpl
out
mov
xor
inc
jp
and
adc
rcl
jle
dec
and
out
xchg
adc
cs
je
push
andl
adc
adc
imul
loope
shll
pop
ret
faddp
xor
loop,pn
adc
jae
inc
call
sbb
lock
loope
jb
jecxz
xlat
fisubrs
and
nop
mov
arpl
aad
jns
mov
and
mov
add
stc
xor
cld
arpl
push
xchg
pop
js
sub
fisubl
jecxz
ret
je
mov
addl
and
out
leave
rclb
popa
dec
jae
arpl
out
jle
into
add
test
push
mov
mov
es
cmp
ret
rcll
icebp
xchg
mov
les
xor
scas
loopne
or
jo
rorl
xchg
repz
mov
arpl
flds
adc
push
cmpsb
and
mov
xor
jae
jle
add
mov
add
loope
out
shll
subl
lods
ret
mov
jmp
add
sub
gs
push
mov
pop
xor
dec
ljmp
jb
mov
jae
fs
andl
test
imul
enter
sbb
pop
push
lods
ds
push
push
mov
jle
push
out
repnz
ret
adc
and
iret
ljmp
jmp
and
pop
repz
lods
adc
xor
addr16
xchg
mov
mov
not
shrb
call
repz
test
inc
scas
jmp
lret
inc
xor
inc
sarl
xor
in
push
xor
ljmp
outsb
mov
xchg
shlb
fadds
jmp
push
popa
mov
into
add
and
inc
mov
cwtl
rorl
jae
xchg
popa
adc
mov
push
push
mov
mov
xlat
sub
mov
popa
mov
push
mov
test
negl
dec
out
dec
loop
les
xor
push
stos
mov
jle
in
push
in
leave
push
push
repz
adc
xlat
lahf
fdivrp
xor
sar
dec
int
cmc
jae
adcl
mov
push
adc
inc
dec
mov
push
add
mov
add
pop
cmp
ficomps
mov
shll
ljmp
mov
shl
mov
jl
in
pop
mov
hlt
sbb
call
ficomps
inc
bound
and
push
sbbb
sahf
ret
sub
mov
cmp
push
ljmp
lods
pop
in
sahf
and
adc
outsl
mov
sub
shrl
inc
jle
popa
mov
shll
les
push
xchg
cmp
add
dec
je
adc
popf
pop
mov
jne,pn
into
inc
arpl
loope
add
popa
and
and
cmp
lock
mov
inc
or
das
mov
or
xlat
mov
push
push
addl
sub
xchg
xor
xchg
dec
pop
outsb
jle,pn
dec
mov
adc
les
je
jle
jecxz
jg
ret
sub
into
outsb
pop
pmullw
adc
sub
dec
mov
mov
stos
mov
push
pop
jne
mov
xchg
repz
dec
test
int
inc
mov
jnp
je
adc
mov
and
loopne
mov
daa
add
add
inc
imul
xchg
sbb
adc
xor
adc
or
ds
xchg
mov
js
mov
jb
jmp
arpl
jno
jle
pushf
sub
xorl
sub
sub
js
out
popa
outsb
andb
lock
fidivl
mov
adc
mov
xor
cs
xlat
rorl
adc
mov
mov
bound
int3
push
in
movsl
push
mov
out
sub
shr
faddl
and
mov
sub
jne
ret
jno
mov
push
inc
in
sahf
aam
loope
or
bound
mov
out
xchg
inc
push
or
push
mov
xlat
push
cmp
and
int3
push
lods
divb
les
leave
pop
notl
mov
loope
lods
jb
adc
or
inc
xor
xor
sbb
adc
pop
push
or
cmpsl
push
mov
dec
leave
and
push
jae
xor
in
add
test
cld
fs
xor
mov
push
out
popa
push
or
sub
add
jle
adc
hlt
repz
lock
adc
xlat
mov
push
and
jl
popa
push
jne
ret
outsb
mov
push
add
mov
inc
repnz
mov
xor
hlt
ret
mov
adc
push
push
fs
scas
daa
jle
cmpsl
xchg
add
mov
add
inc
mov
inc
push
je
push
out
dec
out
movsl
dec
arpl
stos
bound
mov
mov
and
pop
adc
cmp
in
and
mov
mov
ljmp
cmp
mov
mov
pop
and
inc
pop
or
shr
arpl
je
andl
loop
loope
inc
outsb
mov
jno
mov
movsb
mov
xor
cwtl
daa
mov
mov
jo
out
jbe
xor
hlt
subl
xlat
inc
jecxz
xchg
adc
and
and
movsl
mov
mov
and
rorb
insb
add
jle
push
inc
xor
popa
mov
mov
stos
pop
repnz
insb
adc
out
shr
adc
push
adc
and
lcall
add
stos
dec
mov
cmpsb
stc
inc
jno
out
sub
xor
or
shll
jo
cwtl
andb
shl
push
rorl
les
xor
ljmp
ljmp
faddl
cmp
lods
jb
dec
outsl
sbb
inc
stos
aam
ret
xchg
mov
xchg
add
jmp
fidivl
xchg
out
scas
out
data16
dec
ljmp
push
in
mov
and
and
dec
les
mov
into
or
int3
or
dec
inc
ret
mov
mov
jno
push
fs
stos
dec
push
adc
test
in
dec
push
cmc
pop
rcll
and
lret
mov
mov
push
adc
xor
mov
imul
cld
sub
jb
jge
xchg
pop
pop
loop
call
jle
cmp
mov
cld
pop
stc
pop
testl
loope
jecxz
xchg
cmp
sub
adc
out
xor
ds
and
mov
xor
cmove
mov
je
cmpsb
add
repz
jae
scas
jne
xchg
icebp
cmp
adc
xor
pop
xchg
mov
iret
dec
mov
xor
mov
mov
push
sahf
notl
mov
push
xchg
stc
outsb
lock
add
mov
les
adc
mov
fiadds
xorb
mov
mov
jae
test
sbb
sub
dec
adc
adc
pop
xlat
add
shll
jmp
cwtl
xchg
mov
and
push
cmp
push
cmp
mov
xchg
lea
jecxz
xchg
movsb
xchg
stos
out
cmpsl
jae
cmpsl
or
ret
jne
mov
xchg
cmp
mov
cli
loop
inc
xor
cmpsl
and
xor
push
std
xor
inc
mov
std
fisttpll
lods
lock
push
and
push
sub
mov
mov
xor
inc
xlat
out
xchg
mov
push
scas
pop
xchg
into
jns
mov
fisubs
lret
mov
mov
add
jae
cld
mov
fcmovu
add
aam
popa
mov
adc
imul
cmc
jae
sti
loope
sbb
inc
rorl
outsb
jb
addb
mov
stos
sahf
xor
dec
xlat
fs
movsl
pop
xor
xor
mov
sti
pop
jb
jge
das
jae
in
lahf
outsb
mov
mov
lock
xchg
mov
inc
xor
test
inc
mov
push
js
push
arpl
jno
shlb
inc
movsl
sbb
cmp
pop
adc
mov
les
adcl
scas
cmp
and
fistl
lock
push
mov
out
mov
pop
jb
mov
and
repnz
lods
add
dec
push
cmpsl
mov
outsl
mov
pop
xor
sahf
cmp
fadds
xor
loop
mov
inc
xorl
inc
push
dec
sub
shl
mov
aam
add
in
js
add
loope
shr
jmp
inc
popa
mov
pop
lods
imull
push
cwtl
icebp
pop
out
bound
pop
inc
stos
jecxz
jne
push
and
pop
xchg
loopnew
inc
out
xor
adc
rcll
ficoml
icebp
pop
popa
adc
cmpsl
xor
adc
mov
rcrb
xor
sub
cmp
js
mov
enter
lahf
out
dec
sarb
mov
add
call
sub
inc
pop
add
inc
adc
xlat
mull
mov
mov
subl
orl
nop
jne
popa
or
mov
es
mov
add
add
and
inc
adc
mov
mov
je
mull
mov
shll
ret
adc
add
xor
shlb
movsb
test
sub
pop
push
ret
mov
int3
nop
mov
arpl
rclb
push
shlb
lods
and
dec
sbb
push
dec
xlat
xchg
test
and
or
xor
shrl
je
and
scas
dec
rcll
mov
out
arpl
shll
xchg
pop
mov
lds
jmp
loope
out
je
push
lods
adc
cmp
popa
push
cwtl
imul
loopne
fcomps
aam
icebp
stc
insb
and
xor
pushf
imul
outsb
pop
fmull
push
adc
mov
add
xor
arpl
xor
push
inc
jle
cli
add
and
movl
ljmp
mov
test
inc
mov
cli
inc
test
jmp
shll
and
mov
mov
sbb
adc
repz
in
les
shlb
aam
push
adc
cmpsl
cld
std
add
aad
and
mov
call
mov
loopne
popa
sti
push
mov
fisubl
jb
icebp
mov
jg
and
cli
jge
fildl
into
call
mov
nop
inc
xlat
outsb
add
mov
mov
shlb
inc
adcl
fimull
or
mov
call
mov
jno
push
clc
imul
mov
mov
loope
stos
aam
loope
subl
xor
mov
adc
rcl
daa
and
and
push
int
pop
out
fs
mov
nop
xor
dec
or
ret
jge
push
arpl
jg
sbb
sub
lock
and
mov
jmp
das
ljmp
adc
pop
repz
inc
loop
pop
push
insb
mov
jl
ljmp
xor
or
inc
pop
out
std
ret
pop
arpl
mov
push
mov
xor
sar
mov
adc
pop
jno
sub
test
jnp
movl
jmp
sbbb
push
aam
icebp
popa
movsb
jns,pn
inc
ret
and
out
lods
push
push
xor
inc
mov
mov
jb
and
lock
loop
push
repz
and
dec
fs
cwtl
fsubrs
inc
xor
inc
xlat
lods
into
loop
repz
dec
cmp
add
shrl
rorl
and
push
jae
mov
mov
xchg
ret
out
movsb
xor
and
jnp
shll
ret
or
out
pushf
dec
lahf
dec
inc
xor
sub
dec
mov
or
popa
sbbb
adcl
xor
mov
stos
in
pop
adc
mov
cmp
push
sbb
jle
test
jle
flds
xchg
cmp
cmp
mov
xor
add
mov
adc
jae
cmp
insl
test
mov
mov
mov
mov
scas
mov
rcll
jle
movsb
xchg
push
repz
jno
mov
jb
xchg
cmpsb
adc
xchg
push
sbb
mov
inc
repz
adc
inc
or
fiadds
push
fmuls
cmpsl
xchg
xchg
dec
xor
xchg
inc
imul
ds
mov
icebp
push
dec
add
push
lcall
jmp
scas
push
movsb
cmp
outsb
les
jge
push
mov
aad
out
fsubrs
loop
cs
bound
jo
cmc
pop
jecxz
movsl
in
outsb
iret
adc
mov
insb
insl
mov
mov
inc
xorb
xchg
cmpsl
movsl
mov
scas
cld
fadd
ret
ret
mov
cs
icebp
add
push
push
loopne
add
jge
xchg
xlat
ljmp
mov
xor
jle
scas
jo
sub
push
adc
and
dec
and
jo
jbe
aam
shrl
shll
adc
mov
imull
test
popa
and
jo
imul
shrb
xor
js
pcmpeqb
pop
pop
popa
orb
iret
xchg
jmp
or
in
lahf
add
cwtl
jle
mov
jae
arpl
push
aam
mov
xor
repz
mov
inc
or
dec
mov
inc
in
sbb
dec
lret
jb
add
je
mov
popa
inc
popf
push
scas
sbb
push
out
xchg
out
out
rol
shrl
cld
in
or
and
xorl
push
pushf
lret
inc
insb
ret
mov
pop
push
add
iret
fcmovb
push
addl
adcb
jmp
loopne
cs
out
inc
loopne
jb
jp
jbe
ret
mov
mov
xchg
mov
in
arpl
shrl
in
call
adc
fs
adc
pop
ds
cltd
aam
xor
jae,pn
andb
mov
push
int3
inc
mov
repz
jae
mov
add
xor
in
inc
push
or
xor
rorl
ret
dec
push
arpl
mov
fs
cs
popa
jecxz
divl
sub
mov
jle
mov
and
push
icebp
cmp
mov
dec
jmp
outsl
lods
mov
mov
mov
shl
and
dec
into
adc
dec
inc
jl
dec
mov
xchg
xchg
mov
cmp
in
pop
imul
dec
mov
rcll
mov
dec
and
mov
xor
aaa
sub
lods
out
xlat
add
push
or
lret
inc
jns
inc
popa
xlat
mov
clc
jb
jecxz
cs
mov
test
sbb
setne
loop
mov
and
cmp
xlat
fiaddl
add
sbb
cli
test
add
loope
dec
aad
les
std
out
mov
dec
icebp
ret
add
adc
dec
cltd
rcl
xlat
out
adc
pop
mov
out
in
mov
xchg
les
lock
inc
in
andl
fidivrs
and
push
fmuls
in
xlat
xor
jmp
jno
push
fwait
les
rorl
or
ret
and
inc
dec
xchg
mov
test
scas
mov
inc
push
je
inc
push
inc
out
int
adc
in
popa
mov
adc
xor
cwtl
add
flds
xor
bound
pop
push
and
test
cs
repnz
mov
xor
adc
mov
xchg
mov
and
arpl
lock
mov
sbbl
sub
xorl
and
loope
in
stos
mov
enter
add
pop
ljmp
xchg
cwtl
and
push
popa
jle
inc
push
push
and
adc
les
les
outsb
adc
in
bound
popa
and
xor
xchg
jecxz
xchg
adc
lahf
push
cmp
mov
rcrb
dec
popa
ret
mull
arpl
push
addr16
addl
out
cmpsl
and
ljmp
dec
stos
aam
bound
aad
jns
gs
mov
push
adc
push
mov
xor
shll
out
and
push
fs
fidivrs
adc
data16
and
ret
out
fiaddl
mov
mov
outsb
inc
rol
push
pop
ljmp
and
into
dec
cmp
and
push
push
mov
out
ds
xorb
push
not
xor
ret
mov
bnd
pop
dec
mov
sbb
fldl
mov
rorl
fs
add
xor
lret
je
shll
sti
pop
xchg
mov
je
mov
xor
call
mov
inc
ret
cmp
add
outsl
lods
mov
popa
jle
dec
and
cmp
add
and
xchg
inc
push
mov
adc
icebp
mov
popa
inc
xor
leave
and
xchg
mov
mov
cwtl
nop
ljmp
inc
jb
daa
inc
test
xor
xor
mov
mov
movsb
bound
inc
insb
inc
dec
out
sub
xor
push
push
movsb
stos
cmp
jne
shll
and
shl
inc
inc
aaa
and
cmp
int3
and
sub
xorb
adc
loope
pusha
and
and
adc
push
mov
imul
push
pop
inc
pop
call
repz
cmpl
xorl
cmpsl
insl
adc
inc
add
jecxz
std
mov
je
push
roll
outsb
daa
outsb
adc
xchg
inc
rcll
outsb
push
out
je
xor
testl
mov
or
xlat
pop
data16
and
mov
mov
adc
bound
add
mov
les
mov
dec
movsl
pop
xchg
add
push
pushf
inc
jp
mov
and
inc
sub
jp
je
ljmp
outsb
xor
bound
jne
mov
pop
and
dec
jae
ret
xorb
mov
outsb
add
mov
scas
popa
out
xchg
xchg
into
repz
push
imul
nop
cli
in
dec
jae
loopne
mov
pop
push
mov
popa
ret
in
sbb
roll
jecxz
fsubrl
rcll
xlat
or
out
out
jae
mov
test
shll
sub
pop
in
ret
mov
repz
loop
jne
and
mov
sbb
enter
mul
jmp
shll
push
pop
xlat
jae
repnz
ds
dec
bound
dec
aad
inc
sbb
loope
les
mov
pushf
xchg
sub
sbb
cmp
jns
mov
cmc
mov
pop
fdivs
jle
xor
adc
add
cmc
addl
lock
arpl
shl
cmpl
fdivrs
cmpsl
inc
xorl
or
sbb
addb
push
orl
inc
mov
inc
cs
sarl
jb
dec
xor
and
scas
scas
ret
cwtl
adc
and
mov
and
adc
or
lret
dec
rcr
daa
mov
cmp
mov
xchg
adc
loope
cmp
stc
mov
scas
push
xchg
into
fldcw
and
and
testb
cwtl
xor
arpl
hlt
repnz
push
mov
mov
leave
int3
cmp
mov
xor
into
push
adc
insb
push
shrl
xchg
movsb
scas
or
jb
mov
lds
push
push
jecxz
or
ja
std
ja
scas
jge
jecxz
icebp
cmp
inc
mov
and
adc
popa
sub
add
outsb
icebp
dec
and
dec
xchg
jecxz
sbb
sub
sbb
into
add
or
add
sbbl
popa
shll
jecxz
push
neg
gs
sub
jne
shll
push
divb
lds
inc
arpl
nop
out
mov
ret
cmp
ja
inc
adc
divl
aam
shll
shrl
lret
jb
inc
sub
pop
addr16
xchg
jle
lea
and
adc
cltd
mov
and
sub
test
and
clc
lahf
pop
add
dec
or
xor
cmpsl
adc
clc
xchg
xlat
stos
iret
pop
outsb
leave
into
inc
jnp
inc
insb
cs
aam
and
in
xchg
addl
xchg
in
add
push
add
push
adc
or
sub
jl
in
fsts
loop
and
cmpsl
xor
mov
or
sbb
inc
add
add
adc
cmpsl
adc
mov
mov
pop
cmpsb
addb
and
pop
mov
pop
inc
jle
cmpsl
xlat
or
test
cmp
adc
fdivrs
aam
lock
and
cmp
sti
in
or
push
xorb
adc
es
adc
inc
mov
stos
push
mov
adc
iret
push
pop
xor
add
leave
imul
shrb
adc
add
fwait
xlat
fcmovbe
mov
cmp
mov
out
pop
mov
mov
cmp
jge
inc
sbb
fadd
jmp
insb
in
xor
push
test
aam
and
jno
cmc
jle
jecxz,pn
ds
rorl
aam
out
mov
leave
outsl
fiaddl
adc
push
and
sbb
outsb
xchg
notl
mov
xor
xchg
test
xorl
inc
mov
inc
push
inc
not
pushl
daa
xorl
sub
out
testl
icebp
push
xorl
addb
mov
jp
mov
leave
movd
and
xchg
sbb
jb
adc
nop
test
push
aam
push
mov
lods
data16
pop
je
jae,pn
xorl
sub
sub
xor
icebp
mov
jle
adc
jecxz
loope
xorl
leave
inc
jle
push
sahf
repz
xor
out
adc
push
jmp
icebp
push
call
push
mov
push
jb
mov
jecxz
and
xor
into
addr16
daa
mov
push
dec
jo
popa
sub
test
jb
loop
icebp
xor
out
in
jg
adc
ret
inc
xlat
sar
daa
mov
insb
xor
clc
sbbl
cmc
les
inc
dec
jns
or
adc
sub
out
cs
repz
fisubs
or
dec
in
inc
mov
jns
inc
jne
jecxz
xchg
xchg
add
imul
jle
add
fs
xor
je
inc
adc
sub
add
rclb
ds
cltd
add
xlat
pop
repnz
sub
cmp
out
lock
and
repz
mov
inc
jne
jno
stos
pop
xor
sar
push
ret
stos
std
repz
loope,pn
mov
xchg
and
push
sub
adc
cmc
repnz
cs
xchg
rol
mov
mov
inc
or
inc
dec
jne
je
adc
es
pop
mov
inc
lcall
jb
xlat
dec
popa
icebp
add
popa
mov
in
jecxz
rcll
push
lods
out
xchg
inc
repz
jle
insl
fistpll
arpl
dec
out
fs
mov
in
dec
arpl
aas
cmpsb
idivl
in
xor
and
aad
and
pop
rcll
in
addr16
cli
adc
dec
mov
xor
pop
xor
jno
mov
add
push
jne
mov
inc
pushl
cs
movsb
sti
mov
inc
mov
in
repz
mov
cmp
out
testl
sbb
cld
mov
ljmp
mov
mov
js
xabort
push
jecxz
sbb
xchg
aas
jle
xor
rcl
jo
pop
cs
cmc
dec
pop
outsb
ss
inc
mov
inc
out
cwtl
daa
adc
add
shll
loope
mov
sahf
outsb
pop
jae,pt
cmpsl
incb
faddp
adc
adc
dec
mov
jne
dec
fbld
push
rcr
mov
mov
cli
mov
fbld
inc
xchg
adc
imul
add
push
shll
lock
mov
repz
push
inc
je,pt
mov
or
mov
inc
mov
repz
pop
es
push
sbb
insl
ficoml
je
divb
jge
xor
lahf
test
clc
add
icebp
and
shll
jl
rcll
les
pop
mov
push
add
inc
hlt
xor
rcll
fsubl
jbe
mov
sbb
stos
inc
inc
dec
cmc
fisubl
jno
mov
fmuls
les
xchg
int3
cmp
lods
or
incl
jo
jo
sub
out
in
cwtl
mov
ret
icebp
fs
roll
in
imul
sarl
je
adc
jae
or
repnz
jne
ds
pop
and
adc
jmp
roll
mov
int3
push
repz
shll
loope
shrl
in
fdivl
push
mov
in
shrl
je
cmpsb
mov
ret
cmp
call
shrl
shll
pushf
in
je
aaa
add
loope
jmp
inc
popa
pop
adc
mov
push
mov
push
call
inc
add
sar
fidivs
mov
inc
testl
xor
pop
pop
sti
faddp
ret
mov
mov
jge
icebp
xchg
adc
mov
jecxz
mov
loope
cld
in
lahf
xchg
push
lods
mov
xor
cs
scas
inc
xor
lcall
into
and
icebp
xor
cwtl
dec
inc
roll
test
sub
adcl
cmp
in
inc
mov
xchg
sub
icebp
je
jns
ja
out
popa
add
mov
jle
fs
das
jne
jae
add
test
lcall
fsubs
lret
inc
add
repz
lods
rol
mov
in
push
and
and
add
or
sbb
inc
ret
jb
and
adc
fmul
sti
mov
addl
dec
cmc
mov
mulb
fiaddl
xchg
rcll
in
push
mov
fisubl
adc
fcmovnb
jno
lret
inc
dec
les
jge
sarl
push
cmc
xchg
and
imul
jae
jecxz
adc
stos
jecxz
icebp
bound
mov
inc
push
shl
andl
cwtl
mov
shr
push
bound
enter
xorb
notb
dec
subl
and
bound
mov
fwait
repnz
mov
mov
out
add
push
in
inc
xorb
and
mov
or
xchg
mov
pop
xlat
add
mov
adc
lock
cli
push
popa
fldenv
mov
loope
inc
icebp
xchg
loopne
push
ret
dec
push
arpl
xchg
jns
pop
add
lods
mov
out
fucom
repz
jo
dec
fs
mov
data16
jb
adc
mov
mov
popa
adc
mov
jecxz
xor
fcoml
xor
jb
bound
push
mov
xlat
jae
in
clc
lock
call
xchg
loope
push
inc
mov
cwtl
bound
scas
mov
out
aas
neg
mov
mov
lcall
cmc
movnti
xor
jne
pop
xchg
dec
mov
loop
les
xchg
clc
popa
push
icebp
add
cs
pop
xor
je
jnp
movl
fidivrs
jno
sti
arpl
xchg
fisubs
dec
jecxz
xchg
mov
mov
stos
dec
xchg
mov
add
mov
and
xor
shll
mov
jp
cwtl
rclb
adc
jl
je
sub
scas
push
pusha
and
adc
je
loope
jae
or
out
xor
push
pushf
and
ljmp
xlat
dec
push
push
rcl
mov
je
push
pop
xor
adc
mov
pop
and
adc
out
xchg
cli
dec
addr16
addb
jo
mov
popf
mov
ficomps
loope
sbb
jecxz
sub
bound
cli
inc
ds
pop
movsl
and
and
data16
loop
subl
sarb
lock
add
stos
ds
test
xorb
outsl
lcall
rorl
mov
jo
push
inc
popa
jecxz
into
adc
push
int3
inc
lea
adc
jle
xchg
in
in
je
mov
adc
adc
push
xor
les
incb
out
add
roll
mov
cmpsb
mov
int3
and
pop
and
inc
ljmp
bound
movsb
js
cwtl
lods
pop
rorl
mov
jno
daa
repz
mov
mov
push
jne
xorl
push
mov
arpl
push
push
sbb
adc
adc
ljmp
pop
mov
push
inc
sub
jge
add
sbb
pop
add
xchg
outsb
testl
and
loop
push
jae
xchg
add
repz
cmpsb
xor
jle
ljmp
add
xor
addl
shll
loope
lcall
sub
pop
into
lock
pop
jno
mov
push
adc
xor
stos
out
popf
and
add
dec
repz
jae
dec
add
sbb
jne
xlat
jno
xchg
push
idiv
fdivl
add
mov
xchg
imull
cmp
add
cmp
jle
inc
push
lods
std
xor
leave
xor
mov
jb
mov
nop
adc
test
mov
xchg
mov
push
daa
xor
xor
repz
and
stos
cmc
add
jl
out
cwtl
add
shll
out
out
adcb
inc
push
mov
mov
jae
mov
push
adc
into
sarb
add
inc
stos
xor
and
or
push
sarl
push
or
rol
sub
add
sbb
jb
mov
jmp
into
adc
jno
leave
out
xor
add
mov
inc
outsb
push
movsb
popa
out
cmp
stos
sub
jecxz
rcll
jne
adc
xchg
add
out
mov
inc
popa
out
and
push
mov
mov
mov
pop
test
ss
inc
cmp
insl
adc
push
xchg
icebp
jle
jo
in
inc
jle
pop
adc
sub
xchg
mov
cmpsl
cmp
inc
and
daa
cmpl
inc
jge
sub
outsl
out
mov
xor
lods
test
and
or
and
add
xor
xchg
daa
add
mov
in
adc
mov
add
push
xbegin
sbb
inc
ljmp
addr16
insb
repnz
hlt
cmp
int3
stc
push
into
inc
outsb
inc
icebp
cmp
insb
xlat
loope
test
mov
xor
lcall
les
add
ljmp
shll
jno
adc
jge
cmp
lahf
adcw
jo
out
iret
jp
iret
notl
into
jno
ret
add
mov
push
push
add
mov
push
shll
cli
mov
adc
cli
jge
add
add
sub
add
in
add
into
int3
xor
sub
push
xchg
mov
popa
inc
dec
je
dec
cmp
mov
mov
aam
sbb
rcll
loope
xlat
push
xlat
xchg
js
add
ljmp
mov
adc
mov
and
mov
fcmovb
pop
dec
neg
call
jno
adc
inc
and
adc
jge
pop
scas
mov
scas
ficomps
inc
loop
lcall
ds
adc
or
jecxz
imul
test
lock
mov
out
fidivs
notl
leave
roll
ret
daa
jecxz
jo
repz
sub
add
test
fmull
pop
inc
ret
and
mov
test
add
mov
xorl
les
jle
xchg
push
add
out
and
adc
rol
addr16
leave
mov
dec
jae
jae,pn
xchg
xlat
add
dec
loopne
dec
insb
adc
imul
lahf
and
push
outsl
xchg
and
xor
push
stos
lods
ret
jo
outsb
push
popa
ret
pop
popa
xchg
mulb
popa
add
ss
cmp
lret
adc
push
fcmovu
inc
mov
sub
or
jb
push
out
es
cmp
rorl
in
cmp
pop
addl
mov
loopne
rcl
push
pop
xchg
int3
out
xlat
xor
mov
mov
out
and
aam
adc
icebp
pop
jno
inc
xor
outsb
xor
jge
push
repz
outsb
xchg
mov
xor
dec
popa
je
xchg
xor
aad
bound
adc
xor
mov
andl
xlat
repz
ja
add
push
addb
and
pop
loope
aam
jecxz
add
mov
xor
add
and
dec
sub
outsb
or
dec
cmp
fdivl
push
cmp
pop
repz
xorl
adc
sbb
inc
cli
leave
push
shl
adc
nop
xlat
add
jns
fisubs
mov
insb
ret
inc
and
inc
jo
pop
sarl
int
in
les
shl
mov
and
push
jo
mov
fsubrl
ss
adc
and
xor
imull
outsb
xchg
aam
jle
loope
sbb
je
sbb
mov
jmp
les
jb
add
adcb
add
xchg
push
lcall
ljmp
xchg
push
mov
test
add
rolb
inc
pop
icebp
mov
sbb
push
add
loope
push
mov
mov
dec
inc
xchg
mov
push
shl
inc
mov
adc
add
inc
popa
dec
ja
dec
mov
out
inc
xlat
andb
xchg
adc
push
adc
bound
outsb
ror
adc
cs
je
dec
xchg
xchg
fs
adc
sub
xchg
sub
add
fidivl
inc
ret
sarb
and
jle
and
and
cmp
sbb
xchg
fildll
sub
push
jecxz
call
mov
cmpsb
mov
xchg
cmp
into
hlt
in
and
adc
and
cmp
inc
sti
jle
xor
fidivrl
and
icebp
aam
adcl
imul
outsb
mov
rcl
std
add
mov
jb
adc
adc
jae
adc
xor
stos
movsb
cmp
push
push
repnz
cmp
mov
xchg
dec
mov
mov
mov
xor
cmp
dec
popl
leave
cs
push
icebp
mov
addr16
xor
and
arpl
xor
imul
push
adc
mov
cs
sarl
and
out
mov
sbb
and
ljmp
ret
mov
and
jg
out
mov
outsl
into
mov
add
dec
outsb
imul
mov
mov
and
ret
dec
movsl
adc
add
call
call
mov
mov
push
jae
aam
and
shll
add
dec
orb
pop
mov
out
jno
add
jb
sbb
cmc
push
jecxz
mov
mov
lods
in
aaa
movsb
jns
adc
cld
repnz
xor
fs
repnz
adc
xor
ret
fistpl
adc
add
loope
aam
add
div
mov
cmp
dec
xor
fcomp
test
loop
xor
and
cmp
pop
bound
mov
scas
rcll
cwtl
outsb
add
mov
rcr
aam
sar
push
jg
fs
jb
xchg
fyl2x
subl
mov
out
cmpsl
cmpsl
rcr
adc
fwait
jecxz
inc
inc
lods
mov
mov
push
popa
ds
loope
shll
loope
rdpmc
xchg
push
fisubs
pop
sbb
lock
xor
lods
add
dec
icebp
jb
cmc
cmpsb
push
jb
push
push
xor
ljmp
popa
and
jno
sub
enter
stos
push
jnp
sbb
or
pusha
adc
jno
mov
lret
sti
jne
adc
loope
mov
data16
push
xchg
and
jmp
inc
jge
mov
jae
stc
jo
add
roll
divb
push
push
mov
insb
data16
mov
inc
rcll
ret
les
lea
inc
adcl
lcall
push
fisubl
sti
adc
cs
out
rcrb
lock
sarl
adc
xchg
in
jg
les
cmp
ret
lds
jmp
ljmp
push
xchg
push
sub
repz
cmpsl
add
jecxz
shlb
mulb
loope
inc
xchg
jae
xlat
and
or
dec
sarl
pop
push
aaa
cmp
jecxz
inc
jb
sbb
push
je
je
cmp
push
out
push
popa
mov
mov
pop
movl
mov
inc
fimuls
jnp
aam
xorl
call
bound
add
push
mov
cmpsb
push
sub
test
mov
cs
out
mov
repz
mov
inc
push
mov
into
cmp
dec
xor
add
mov
andl
arpl
loope
test
sbb
adc
dec
jae
mov
add
inc
enter
mov
lock
cmp
subl
je
and
loope
xor
icebp
stos
adc
adc
lock
outsb
inc
lock
adc
mov
dec
mov
sub
xor
int3
mov
inc
push
inc
cli
dec
jbe
cs
dec
mov
mov
cmpsb
icebp
add
into
bound
jmp
adc
out
mov
fstpt
hlt
sub
pop
loope
hlt
mov
fstl
adc
std
jle
hlt
arpl
and
loope
xchg
ds
lods
mov
scas
out
inc
daa
adc
jb
xor
out
lds
inc
inc
stos
mov
dec
out
call
ret
in
and
or
inc
mov
leave
push
push
adc
xor
dec
push
pop
mov
mov
sub
popf
cs
subl
add
lret
cmpsl
xor
cs
inc
out
nop
shll
fdivs
mov
add
inc
cs
mov
dec
mov
inc
ror
dec
call
outsl
mov
mov
push
lret
pop
in
arpl
das
insl
xchg
ds
mov
dec
loope
clc
mov
mov
mov
jmp
shlb
inc
push
pushf
addb
and
je
jno
and
sub
push
popa
xor
mov
cmp
push
push
adc
add
shll
push
xchg
and
ljmp
push
mov
je
adc
cld
adc
in
jecxz,pt
and
fldcw
fsubrp
and
fildl
dec
jg
jbe
xchg
and
rcrl
add
mov
ret
push
cmpsl
icebp
add
rcll
jbe
adc
lds
inc
mov
ret
inc
les
mov
rcll
adc
call
add
pop
ret
jecxz
int
add
loope
in
js
out
push
push
mov
add
xor
shl
les
mov
jbe
cs
ficoms
loope,pt
or
push
adc
mov
push
xor
loope
jb
jae
ret
xor
add
lea
xchg
adc
inc
fs
jp
pop
adc
jp
adc
sub
jb
push
adc
in
shlb
test
jg
das
or
shll
mov
xchg
xor
cmp
pop
pop
adc
or
xchg
es
xor
incb
andl
sub
jle
cmp
cmp
and
ljmp
and
push
outsb
xlat
jge
je
and
cwtl
xor
dec
mov
icebp
fst
or
cmpsb
jle
sub
sbb
in
xor
daa
inc
jae
cmp
push
mov
add
popa
push
mov
ja,pt
xor
push
mov
notl
insl
xchg
mov
loope
push
bound
stc
xorb
cmpsb
out
mov
push
shrb
add
loope,pt
jmp
out
or
xor
dec
xor
stos
sub
mov
inc
andb
loope
xchg
and
inc
push
inc
shlb
cmpsb
xor
cmp
stos
fsubp
jae
aam
adc
mov
mov
mov
cs
sbb
and
fldt
repz
loope
push
add
popa
dec
test
cmp
dec
jl
mov
out
rolb
inc
test
pop
jle
jne
adc
inc
popa
rep
push
push
dec
in
sub
rcll
cmpl
xchg
loop
out
call
push
pop
add
push
fldl
adc
cmp
int
mov
jl
js
cli
xor
inc
jae
cmp
sbb
shlb
jecxz
rclb
add
mov
push
mov
xchg
inc
repnz
xlat
and
fwait
adc
xchg
xlat
mov
push
jp
popa
jecxz
lcall
neg
test
cmpsb
sbb
shl
imul
call
inc
clc
bound
push
js
sti
cmc
or
push
add
out
push
dec
xchg
add
mov
lock
subl
inc
xchg
xor
mov
lods
jb
arpl
push
into
mov
icebp
push
fwait
xor
ret
bound
aas
shll
and
mul
roll
push
daa
xchg
lea
loope
jbe
outsl
and
mov
pop
mov
popa
jns
sub
outsl
xor
mov
shrl
addr16
xchg
mov
and
jns
mov
fidivl
xor
test
mov
ds
xor
xchg
inc
fsubl
jecxz
mov
dec
mov
les
add
shrb
mov
js
and
pop
les
mov
mov
dec
adc
mov
xchg
jecxz
clc
sbb
arpl
or
icebp
fiadds
and
lret
pop
dec
rcrb
test
and
cmp
je
jge
fs
lock
xor
cmc
in
ret
push
btr
or
add
sbb
push
dec
addr16
push
loop
ror
add
mov
pop
rclb
adc
mov
cmp
popa
and
cmovnp
jno
jge
cmpsb
fs
mov
xor
out
jmp
xorl
jmp
pop
addr16
js
and
push
and
out
mov
lock
jae
adc
mov
or
push
shl
imulb
je
and
out
bound
les
and
inc
adcl
pop
sarl
add
icebp
and
lods
add
jle
adc
inc
push
call
rcll
mov
cmp
popf
inc
push
sub
sub
jb
xor
mulb
cltd
or
iret
inc
sahf
pop
push
xorl
xor
xchg
mov
mov
mov
les
adc
icebp
jb
arpl
jl
mov
cmp
inc
pop
jno
adc
mov
cmc
xorb
frstor
mov
sti
in
out
shll
inc
jo
sbb
inc
dec
add
dec
pop
daa
mov
pop
or
das
ficomps
push
scas
or
push
stos
push
and
divb
inc
mov
push
icebp
xlat
push
jle
pop
push
pop
mov
pushf
jno
inc
xor
testl
sub
push
and
inc
mov
push
pop
hlt
addr16
mull
sbb
sbb
fstpt
xchg
mov
idiv
inc
shll
inc
mov
into
movsl
mov
adc
dec
cs
cld
leave
into
and
and
xlat
xor
addr16
inc
ret
rcrb
mov
mov
into
dec
mov
xor
jo
xlat
adc
add
js
pop
or
loope
es
push
out
pop
xor
cmp
fs
ljmp
sub
adc
mov
faddl
repnz
inc
xor
add
or
and
mov
inc
dec
or
inc
ror
rcrl
xor
xchg
jmp
push
mov
jae
iret
je
xchg
push
xchg
and
push
testl
and
pop
cmp
jb
mov
arpl
pusha
sbb
repz
fdiv
jle
push
insl
outsb
imul
sbb
sub
lds
mov
rorb
aam
and
call
lds
mov
or
out
cwtl
inc
cmp
movsl
adc
std
shr
ds
faddp
cld
int3
and
mov
out
pop
dec
push
and
and
mov
mov
iret
loope
jno
in
push
aam
into
and
xor
adcl
adc
sti
pop
mov
pop
adc
and
inc
dec
and
or
leave
mov
std
cmp
out
hlt
in
or
pop
push
and
andb
jmp
or
inc
mov
pop
int
pop
or
adc
idiv
jno
mov
in
nop
add
xchg
dec
shr
jns
jb
cmp
insb
push
jle
out
addr16
loope
lret
lock
mov
cmc
hlt
addl
xlat
testb
sbb
mov
in
xor
and
xor
xlat
jb
adc
les
fcmove
jle
gs
jns
dec
inc
xor
inc
ficomps
jge
negl
push
test
mov
and
sub
or
popa
loope
mov
add
shl
out
sub
and
lret
fnstenv
adc
mov
jecxz
ficomps
xchg
sub
imul
sbb
or
xchg
sub
mov
insl
sub
push
sbb
xchg
test
xchg
mov
push
loope
mov
and
fisttpl
adc
fwait
and
mov
dec
xchg
push
xor
into
mov
lock
loopne
dec
fdiv
adc
lods
jp
xchg
mov
in
cmp
in
and
shll
push
daa
out
js,pt
cmc
push
bound
pop
add
loope
ret
idivb
into
and
testl
loope
add
cmp
in
ss
mov
xchg
push
mov
xor
xor
repz
and
ret
adc
int
pop
test
mov
ret
push
ret
dec
hlt
stos
nop
push
and
sahf
xor
bound
outsl
js
mov
inc
mov
rclb
clc
icebp
sub
jge
mov
adc
and
loope
push
pop
dec
jne
add
jbe
mov
push
dec
inc
rol
pushf
inc
insb
dec
push
adc
add
cmp
add
and
inc
les
jae
popa
or
sub
or
dec
mov
dec
fs
xlat
adc
out
repz
xor
push
fcoml
lock
repnz
rol
xor
mov
fs
sub
loop
inc
xchg
roll
je
cs
stc
loop
negl
scas
in
fadd
add
and
push
pop
loop
jno
ret
jle
shll
jecxz
pusha
xlat
rolb
mov
pop
adc
ret
inc
push
insb
xor
icebp
adc
ljmp
ret
add
repnz
and
jp
or
cmpb
mov
mov
jae
inc
inc
cmp
jmp
mov
or
dec
loope
adc
divl
and
ljmp
cmp
push
jae
les
imull
xchg
pop
outsb
popa
shrl
mov
and
les
ds
daa
adc
xor
or
push
repz
dec
popa
add
add
mov
pop
stos
or
call
mov
xchg
sub
push
cmpsb
add
xchg
nop
mov
xor
js
dec
and
mov
shll
ss
addr16
xchg
popa
xorl
and
inc
sti
and
or
ja
or
bound
xlat
add
test
fucomi
xchg
mov
and
dec
push
xor
pop
icebp
pop
mov
push
stos
jnp
nop
add
bound
xlat
inc
adc
adc
jecxz
pop
mov
push
imul
test
jne
roll
rorl
lds
inc
sub
push
les
ret
mov
fwait
jo
inc
movl
xor
out
dec
shll
sub
or
jae
push
xchg
aaa
ret
xchg
xor
and
shlb
imul
mov
sarl
rcll
lret
cmp
mov
cmp
inc
fxch
cmpsl
jae
adc
mov
repz
mov
xor
adcl
popf
mov
imul
aas
xor
shll
add
out
jmp
movsb
andl
outsb
push
adcb
out
mov
jo,pn
jo
into
add
mov
loope
fimull
mov
mov
dec
inc
jne
add
pop
sub
mov
mov
neg
jecxz
into
fdivrp
rol
in
inc
stos
or
adc
shlb
les
push
ljmp
inc
scas
leave
pop
arpl
pop
ficoml
into
fmul
lods
mull
out
add
and
std
pop
xor
jb
repz
bnd
rcll
add
rcll
popa
push
push
fidivrs
lods
xor
out
imul
inc
imul
fildll
lods
cmp
cmp
jecxz
add
ret
testb
push
jl
cmp
push
adc
cli
and
lcallw
inc
xchg
xor
shrl
adc
in
inc
push
test
push
movsb
inc
sahf
mov
adc
sbb
xlat
cli
adc
inc
and
jno
jns
sti
dec
outsb
dec
xchg
mov
scas
nop
popa
test
inc
out
cmp
arpl
adc
push
or
mov
cwtl
xor
mull
cld
mov
jb
cwtl
mov
mov
adc
pop
fiadds
into
push
mov
mov
push
cld
inc
ds
andl
adc
jmp
mov
xor
cmc
push
xor
mov
jmp
push
cs
pop
cwtl
xchg
lods
jecxz
lcall
cmpb
mov
cmp
shll
fnstenv
loope
stos
ljmp
and
out
ss
sbb
jle
adc
pop
push
notl
jb
push
into
xchg
testl
outsb
es
xor
cmp
negb
test
fists
xorl
or
imul
outsb
insl
stc
daa
into
adc
fidivs
and
pop
add
cli
loope
adc
mov
out
pop
xor
and
inc
push
in
push
inc
xor
adc
jbe
insb
push
xorl
inc
repz
push
popa
es
icebp
or
jle
lods
mov
ret
je
in
lahf
lret
inc
ret
shl
rclb
loop
outsb
repz
adc
mov
jae
and
ficoms
xchg
push
pop
jno
repnz
daa
jb
sub
stc
adc
add
and
mov
add
scas
mov
roll
out
push
out
inc
add
int
insb
fs
pop
inc
mov
repz
sub
int
lcall
inc
add
std
out
mov
pop
fsubr
push
xor
rolb
inc
pop
mov
xchg
push
es
je
loope
push
in
mov
add
dec
ds
mov
and
xchg
out
pop
rcll
xorl
out
or
xor
xor
adcl
xchg
xchg
addr16
cmc
jae
mov
xorb
rcll
loope
mov
push
movsb
xor
int
fcompl
ret
imul
mov
fcoml
shrb
icebp
dec
xlat
mov
lcall
pop
repz
xor
inc
xor
subl
push
mov
dec
aas
xchg
idivb
and
cs
pop
mov
xchg
lret
push
and
dec
lret
inc
sub
xorb
adc
arpl
push
mov
dec
dec
add
andl
adc
scas
lods
sti
xlat
and
push
and
inc
xorl
aam
movsb
push
pop
or
sub
cmp
icebp
jle
push
push
xchg
imul
mov
push
xor
dec
dec
arpl
mov
mov
mov
inc
mov
cmpsb
or
ret
dec
inc
rol
outsb
xor
jb
add
push
dec
pop
jecxz
inc
and
gs
enter
or
and
add
push
jl
pop
fadds
je
mov
scas
js
and
sub
mov
add
pop
test
jae
xor
lret
sub
mov
mov
pop
in
lea
orb
lock
subl
push
xlat
loope
add
pop
dec
mov
dec
sbb
shll
cs
into
popl
loope
loopne
add
or
push
xor
popa
loopne
inc
xchg
adc
push
repz
add
mov
sub
pushf
add
rolb
cmc
cmpsl
xchg
fidivs
jbe
cmp
clc
mov
iret
push
repnz
dec
out
lret
push
pop
sub
xchg
xchg
adc
mov
adc
xlat
add
sub
mov
cmp
js
andnps
xchg
and
push
into
sub
fstpt
movsl
adc
jl
jo
shrl
les
mov
jle
adc
xor
pop
inc
dec
dec
add
outsb
jb
jle
outsb
icebp
popa
xlat
dec
cmpsl
pop
iret
out
popa
adc
mov
add
pushf
mov
jne
push
push
roll
mov
push
scas
loopne
adc
lods
push
pop
adc
jmp
cmc
popa
xor
les
cmpsb
jge
stos
mov
mov
dec
mov
adc
cmp
cmpsl
icebp
divl
mov
and
jno
mov
fldt
jb
jg
out
loop
mov
inc
out
inc
inc
mov
and
xorb
dec
xor
stos
fs
sub
xor
and
mov
in
sbb
ret
jno
stc
loop
mov
jbe
call
ret
addl
push
hlt
test
loope
sub
rcll
mov
into
popf
cs
xor
cmp
nop
xchg
adc
repz
and
fs
hlt
into
dec
dec
xchg
mov
sarl
les
sbb
repz
cmp
adc
stc
sub
adc
xchg
and
ds
into
icebp
mov
cld
insb
xlat
xor
popa
adc
jno
lock
jo
cmpsb
and
or
mov
sbb
xchg
testl
daa
adc
push
inc
inc
mov
and
fistps
push
mov
push
mov
push
loope
stc
mov
out
loop
enter
and
push
shll
iret
adcb
mov
cmp
dec
push
jae
adc
mov
imul
jo
and
dec
in
or
mov
out
sub
cmpsb
add
jo
out
arpl
inc
xchg
cmp
and
pop
and
mov
movsl
jo
mov
xor
xchg
xor
push
cli
xchg
xchg
enter
bound
mov
dec
shrl
and
push
je
cmp
shr
pop
push
mov
mov
inc
and
ds
inc
add
mov
and
daa
test
or
add
ret
jecxz
cmp
jns
dec
movsb
add
or
clc
icebp
fwait
or
mov
shrl
hlt
push
push
loope
jae
lret
loop
mov
les
xchg
add
sti
cli
mov
cmc
and
rclb
dec
dec
jmp
push
mov
adc
outsb
shll
pop
and
adcl
insl
lret
je
dec
or
ret
or
jmp
out
sub
adc
dec
xchg
sbb
lahf
pushf
xor
adcl
xchg
xor
fistl
test
inc
adcb
dec
mov
add
fdivl
cs
mov
or
and
out
stos
repz
mov
mov
adc
rorb
mov
in
pop
icebp
mov
out
mov
imul
adc
sbb
fisubl
xor
sub
int
sub
leave
mov
lea
ljmp
mov
cmp
fwait
inc
movsb
rorb
push
dec
nop
xorl
out
lcall
sub
les
xor
mov
aas
push
addr16
mov
jmp
xor
es
push
jle
bound
mov
mov
shll
ficomps
fdivs
fdivrs
call
and
divl
push
loope
xor
ret
push
int3
lret
pop
xor
sub
data16
mov
addr16
add
orl
fs
lret
cmp
and
jle
adc
in
je
adcl
roll
push
adc
and
ret
fnsave
and
jle
fwait
popa
repz
xchg
bound
stos
ror
dec
and
xor
fisubrl
add
std
mov
xor
mov
rcl
cs
les
or
mov
xchg
shll
std
sbb
mov
enter
and
pop
ds
xorb
sti
sub
add
and
call
or
fwait
aam
push
out
push
jecxz,pt
jle,pt
cmp
mov
sbb
loop
xor
push
mov
enter
jp
adc
bound
mov
and
incb
cmp
enter
rclb
dec
push
adc
cwtl
rcll
mov
mov
cmpb
xor
rorl
test
and
andb
dec
mov
push
outsl
roll
cmc
icebp
pop
arpl
mov
cs
and
xor
mov
xchg
daa
adc
out
stos
cmpsl
pusha
xchg
mov
bound
loope
xorl
fcmovbe
jb
arpl
mov
mov
clc
mov
rcll
notl
xchg
jo
push
xor
je
mov
sbb
jno
jbe
sbb
vandps
jecxz
xor
lret
cwtl
push
pop
jne
adcb
mov
xor
lret
push
in
xor
daa
vmovlpd
push
push
mov
outsl
cmp
fs
jb
dec
mov
stos
es
into
data16
sub
add
icebp
add
insb
sti
pop
or
dec
rcrl
lcall
mov
cmp
lcall
adc
mov
repz
outsb
in
add
and
lock
ret
rcrb
bound
icebp
mov
or
sub
mov
dec
inc
xchg
divb
push
dec
jae
xlat
mov
xchg
outsb
xchg
jmp
and
inc
repz
push
testl
bound
les
cmpsl
loope
adc
mov
dec
or
ljmp
jb
popa
add
jle
jbe
dec
push
ja
sub
push
push
pop
popf
sub
push
jmp
and
jge
push
sub
inc
mov
push
outsl
add
and
push
inc
adc
fsub
ss
out
mov
push
push
aam
rcll
out
add
subl
movsl
repz
jnp
daa
add
scas
add
bound
inc
repz
int
mov
xor
into
pop
or
push
and
lods
mov
push
xchg
push
mov
push
mov
jae
push
add
into
icebp
push
outsl
mov
andb
notl
out
out
inc
xor
and
adc
xchg
repnz
cmp
dec
mov
mov
mov
loope
jno
add
dec
lods
add
xchg
repz
in
xchg
add
loope
jnp
or
adc
and
push
inc
push
add
mov
cmc
xor
and
push
scas
sub
mov
mov
mov
into
ja
adc
xchg
jmp
xor
rcl
jo
mov
int3
push
inc
xchg
mov
xor
mov
nop
andl
popa
ret
push
jns
stc
xor
inc
inc
push
add
call
mov
inc
inc
cmp
dec
xor
dec
inc
ds
in
mull
add
cs
outsb
imul
ss
in
les
sti
adc
outsb
xor
popa
in
ss
jmp
cmp
ficoms
mull
mov
xlat
andl
push
je
ret
iret
push
mov
dec
ja
xlat
scas
sub
add
fbstp
adc
aaa
inc
adc
ror
stos
add
jle
shrl
stos
and
jb
shr
cmp
daa
arpl
push
outsb
inc
adc
in
loope
mov
out
inc
adc
lret
dec
les
jmp
mov
push
mov
inc
dec
in
push
mov
or
xlat
ds
les
xchg
xor
mov
aam
and
repz
loope
cwtl
shll
mov
xor
xor
and
fs
jge
rorb
addb
popa
mov
je
repz
push
rol
sbb
sbb
pop
push
inc
push
push
mov
lcall
and
xchg
les
inc
icebp
je
xor
sbb
int3
clc
xor
xor
bound
push
icebp
xor
les
inc
adc
popa
xor
sar
jecxz
push
inc
ja
mov
push
dec
push
ljmp
sub
inc
cwtl
arpl
es
dec
jb
jne
je
lds
inc
cwtl
add
mov
xor
pop
roll
shl
je
and
fiadds
rcll
and
les
or
mov
push
mulb
testl
inc
jecxz
pop
cmp
inc
loope
into
and
adc
insb
mov
xor
daa
and
and
inc
xlat
in
dec
icebp
into
in
lahf
inc
shll
out
and
testl
bound
pop
adc
fucomip
or
and
cmp
mov
insb
movsb
lock
repz
jg
mov
inc
xchg
sub
rclb
lahf
inc
rol
sbb
jno
xchg
and
sub
mov
mov
fcoml
subb
arpl
xchg
and
js
xchg
push
xchg
gs
les
jno
xchg
je
js
jecxz
lcall
fisubl
push
movsl
dec
xchg
inc
jae
sti
adc
and
fs
pop
cmpsb
jno
testl
xor
mov
fs
outsb
mov
add
ret
add
data16
ret
pop
adc
out
repnz
and
pop
shll
mov
xor
jne
jb
adc
mov
out
add
and
pop
icebp
xor
push
jbe
dec
fs
outsb
jmp
dec
adc
into
mov
retw
xor
daa
shll
xor
mov
push
in
mov
decl
test
mov
sbb
sbb
push
lcall
inc
les
aas
push
ja
jno
xor
mov
push
popa
push
add
adc
and
hlt
mov
aas
and
add
into
adc
add
in
sub
shrl
pop
rorl
arpl
push
mov
jae
pop
out
xlat
mov
adc
xor
enter
shlb
jl
loope
push
mov
jle
aam
mov
mov
je
jbe
add
add
adc
les
mov
jae
xchg
fdiv
push
out
xor
stc
pop
ret
bound
push
roll
test
mov
clc
cmp
clc
inc
cmpsl
xor
mov
inc
fsubp
mov
mov
mov
pushf
and
xchg
jne
jb
rcl
adc
xlat
les
call
cwtl
mov
adcl
addr16
jo
mov
std
push
aas
subb
jecxz
push
test
ret
mov
or
sbb
xor
xor
mov
dec
cmp
inc
push
jo
adcb
xchg
xor
repnz
mov
es
movzwl
push
dec
call
insb
add
das
nop
or
sub
arpl
inc
xchg
mov
xchg
mov
cmp
mov
push
cmp
and
mov
cmp
loop
and
and
jmp
ret
push
xor
sub
adc
js
add
jle
xchg
int
mov
push
rcl
dec
fisttpl
adc
fs
mov
popa
or
movsl
inc
jb
outsb
jmp
lds
enter
loope
outsb
jle
adc
cmc
sub
dec
sub
sbb
xor
test
mov
outsb
shrl
xor
fs
mov
mov
jo
in
cmp
rorl
pop
jb
cmp
fs
mov
xor
or
popa
xorl
repz
push
out
xor
addl
mov
rcll
dec
outsb
daa
pop
cmp
fiadds
xchg
imull
stos
push
inc
aam
jnp
inc
out
add
mov
jb
xchg
mov
addl
fs
mov
add
lods
xor
mov
je
xlat
mov
mov
xor
out
xor
jle
outsb
push
enter
outsb
pop
dec
mov
loop
shl
add
xchg
call
and
or
mov
adc
inc
mov
inc
mov
pop
lcall
ja
outsb
je
and
into
jp
fnstenv
push
push
jns
dec
or
sub
xchg
je
clc
xchg
fwait
or
js
in
mov
adc
mov
inc
or
sahf
push
into
outsb
cmpsl
notl
pop
cmpsl
adc
movsbl
dec
inc
and
mov
xchg
mov
testl
aaa
push
adc
fcompl
and
roll
pop
aam
mov
insb
adc
add
divl
push
shl
xor
in
cmp
dec
lock
nop
xor
xchg
mov
fidivs
xorb
jle
mov
add
adc
adc
adc
jae
cmp
jle
and
sub
je
les
cmpsb
shl
ret
adc
or
xor
inc
adc
std
dec
insb
jae
das
rcrb
push
xor
push
daa
arpl
js
mov
subb
mov
inc
outsb
ror
out
xlat
lds
inc
xor
pop
inc
div
push
and
adc
jae
adcb
out
add
mov
iret
xor
repnz
out
add
roll
fimull
mov
cmp
movsb
cmpb
addr16
inc
adc
rcrb
push
jbe
or
fcoms
mov
loop
outsb
and
push
adc
repnz
or
gs
xchg
add
dec
loope
sbb
repz
fmull
call
out
cmc
arpl
cs
adc
rcll
xchg
push
cs
and
mov
mov
mov
mov
cmp
push
in
inc
fidivl
je
bound
adc
push
jns
mov
mov
jae
arpl
jle
jne
test
and
xor
iret
sub
jb
pmaxub
fs
inc
add
das
shll
jae
orl
push
xlat
sub
mov
je
sub
pop
fsubrs
int3
fmul
data16
arpl
lock
roll
jecxz
roll
mov
rcl
xor
cs
sub
loop
arpl
xor
and
push
scas
mov
and
or
jno
pop
in
daa
jae
sub
jecxz
popa
mov
xchg
cs
pusha
mov
out
nop
add
adc
adc
lret
int3
xor
inc
outsb
sbb
push
jle
mov
in
dec
les
loope
xchg
sub
jge
mov
mov
push
sar
ljmp
lret
pushf
xor
xchg
fs
push
mov
inc
fcoml
icebp
jle
into
jb
leave
and
bound
loope
xor
arpl
xor
push
adc
dec
sub
mov
daa
push
subb
and
out
das
adc
xchg
ret
jae
jae
mov
loope
jmp
repz
dec
mov
mull
scas
sub
sbb
int
dec
adc
cmp
push
add
cmpsl
cs
aad
and
mov
fs
addr16
adc
and
div
out
jne
push
cmp
int
fs
jb
cmpsb
push
das
mov
js
test
mov
or
xor
inc
arpl
cmp
cmpsb
push
cmp
les
xlat
mov
fcompl
mov
outsb
mov
popa
dec
push
mov
subb
data16
mov
xchg
push
adcl
adc
xchg
push
xor
add
sahf
aas
lods
mov
shll
xor
leave
xchg
xlat
stc
ja
xchg
fisubs
roll
jecxz
jp
in
cmpsb
je
jo
out
movsb
and
cs
cmp
and
jmp
adc
jmp
jo
out
inc
mov
inc
or
mov
and
bound
stos
mov
testl
testl
notl
or
test
mov
and
add
jle
xchg
cmp
cmp
push
mov
mov
scas
sbb
outsb
push
lds
sub
adc
popf
mov
fadd
jle
push
dec
iret
out
dec
jo
xor
cli
loope
sbb
pop
rclb
mov
cmp
push
out
inc
jmp
mov
mov
mov
xor
out
not
mov
jecxz
gs
loope
outsb
out
inc
icebp
andb
adc
and
cmc
rcl
cmpl
repz
xor
jg
je
adc
test
icebp
stos
adc
shl
inc
notl
sarl
pop
rclb
fdivrl
ret
pop
call
and
arpl
out
adc
cmp
push
inc
inc
jns
jle
cmp
cli
std
jnp
adc
cs
xchg
out
sbb
lret
fimuls
hlt
sarl
xor
inc
dec
aaa
js
in
in
repz
xchg
sbb
mov
cmp
sahf
mov
out
mov
adc
mov
adc
dec
or
adc
fimuls
jl
ret
xchg
and
push
xor
je
rcrb
xchg
mov
push
inc
push
icebp
repz
sbb
repz
test
ficompl
lret
push
insl
mov
lods
outsb
inc
mov
xchg
add
cs
pcmpeqd
sahf
sahf
popa
mov
addr16
out
and
je
xchg
arpl
xor
testl
fwait
xor
fs
andb
popa
ficoms
sbb
inc
xlat
sti
pop
addr16
inc
loopne
pop
mov
mov
je
and
inc
arpl
les
push
and
inc
push
push
subl
jecxz
add
fsub
inc
push
fimuls
cmp
xchg
in
call
loope
aas
call
ficoml
shrl
jb
xor
pop
bound
pop
push
insb
jbe
or
and
icebp
jae
out
add
dec
mov
out
or
andl
sbb
and
into
and
das
add
popa
popa
adc
pushf
and
ja
mov
or
dec
mov
mov
mov
fwait
daa
js,pn
jno
push
inc
adc
les
push
loopne
pop
mov
xchg
mov
js
inc
les
cltd
adc
fadds
int3
popa
fstl
push
lret
jns
and
into
fidivrs
add
je
mov
outsb
pminsw
mov
inc
repz
pushl
cmp
jne
testl
xor
ret
jne
adc
jecxz
rolb
scas
xor
pop
push
std
lods
dec
adc
jge
push
movsb
std
fsubrs
xchg
inc
dec
xchg
rcl
xchg
xlat
mov
push
stos
fdivp
bound
jbe
push
xor
cmp
jecxz
inc
and
test
arpl
cwtl
je
xor
icebp
ficoml
sub
pop
mov
iret
ret
dec
mov
push
repnz
sub
cs
daa
and
imul
push
add
mov
clc
mov
sarl
loope
dec
mov
stos
orl
and
xorb
icebp
test
repz
mov
cs
jb
loope
jp
mov
inc
and
push
dec
and
mov
bound
cmpsb
adc
jo
popa
inc
test
xchg
and
in
adc
outsb
cmc
pop
mov
arpl
inc
in
and
sub
shl
ljmp
add
pop
sbbb
and
aam
push
mov
ds
les
cmc
movhlps
outsb
test
pushf
inc
xor
and
in
add
and
jns
adc
divb
adc
sub
add
cmpsb
add
or
shlb
adc
push
fldcw
mov
push
jecxz
jl
repz
in
push
rcrl
ret
pop
xchg
add
and
and
daa
mov
pop
daa
in
cmp
popa
stos
nop
imul
out
cmp
sarl
sbb
shrl
out
push
daa
mov
cltd
xchg
rcrb
mov
push
and
mov
push
xchg
mov
repz
xor
and
ss
test
movsl
loopne
popa
sbb
js
adc
out
jnp
add
push
add
adc
mov
out
jb
inc
in
sub
inc
or
lret
and
adc
push
jb
mov
cmpsb
add
jno
imul
mov
icebp
ds
push
adc
jle
and
lret
popa
mov
clc
adc
inc
jecxz
fs
sbbl
clc
pop
xchg
add
repz
xor
or
xchg
mov
arpl
outsl
xor
xor
xchg
add
jmp
mov
xchg
icebp
xor
inc
and
or
ds
pop
jo
adc
shll
dec
adc
jbe
jecxz
popa
rcl
add
or
xchg
mov
inc
dec
fs
pop
dec
mov
pop
faddl
pop
mov
or
sbb
sbb
testb
faddp
repz
mov
dec
jns
mov
adc
icebp
in
sbb
inc
fdivp
mull
les
xor
lds
cmpsl
adc
test
cmc
cmp
jns
outsb
jb
aam
mov
and
inc
loope
or
outsb
test
cmpsl
push
push
dec
lea
aam
les
addl
je
add
in
cmp
push
xchg
jae
xor
clc
mov
mov
jmp
pop
sub
mov
outsb
outsb
push
mov
add
xchg
aaa
std
shll
ret
pop
push
dec
dec
into
mov
xchg
mov
jecxz
popa
shll
lods
mov
loope
ret
pop
jle
dec
pop
es
daa
adc
jle
inc
dec
adc
ljmp
push
aam
inc
jno
xchg
dec
dec
mov
mov
mov
testb
cmp
stos
testl
cmp
mov
out
js
and
andb
xor
mov
add
push
jo,pn
lock
jle
sbb
aad
dec
mov
push
mov
fsubr
popa
ret
ds
and
leave
push
out
cmp
add
ds
shll
push
push
mov
dec
push
jecxz
sub
bound
out
adc
inc
fdivs
pop
es
or
shll
pop
mov
loope
or
aam
xor
ret
cmp
mov
pop
push
subl
out
jecxz
into
repz
mov
xchg
jno
xor
or
jo
mov
in
xchg
movsl
adcl
sahf
mov
sub
adc
ss
repz
mov
push
dec
inc
and
fwait
mov
in
add
out
pop
xchg
repz
or
and
mov
pop
xor
cmp
dec
jne
add
popa
cmpsl
out
xor
xlat
cli
dec
cmc
inc
icebp
jmp
pop
adc
adcb
adc
and
or
push
je
adc
inc
out
andb
fs
bound
les
cmpsl
mov
cmp
mov
js
popa
jns
inc
add
xchg
daa
add
outsl
adc
xchg
mov
mull
test
and
inc
ret
mov
rcl
mov
sbb
xor
xor
bound
daa
jno
rcll
or
pop
adc
gs
shrb
ficoml
ret
or
aad
and
push
inc
push
arpl
shl
int3
mov
repz
push
cmp
cmp
xchg
sub
xor
je
and
fwait
mov
adc
push
out
mov
xor
mov
addb
pop
mov
pop
ljmp
insb
loope
sub
mov
push
sub
roll
mov
ljmp
cmpsb
fs
jge
sbb
jno
inc
cmp
and
dec
cmpsl
xor
aam
andl
adc
dec
in
xchg
out
adc
into
sub
andl
xchg
push
cs
inc
mov
mov
xor
push
sahf
adc
adc
adc
lret
je
jbe
rcll
jae
out
in
shlb
push
dec
jle
rclb
mov
push
fidivrl
data16
inc
je
arpl
sbb
mov
jne
push
add
pop
pop
push
std
loope
loope
mov
sbb
push
push
push
adc
popa
repz
mov
mov
aam
popa
popa
je
ds
mov
rcrb
sub
out
mov
ds
xchg
mov
and
or
add
xchg
jae
subl
and
in
sbb
gs
out
cs
xor
data16
test
mov
jecxz
repz
add
div
inc
push
int3
sbbl
cmp
nop
data16
and
pop
aas
std
out
jb
add
fcoms
stos
movsl
into
mov
and
jo
cmp
push
adc
rolb
adc
rorb
rolb
jb
dec
mov
fidivl
outsb
jecxz
out
add
shll
popa
sub
icebp
push
push
dec
insb
cltd
pop
bound
mov
popa
shll
loope
dec
dec
arpl
shl
push
inc
xor
mov
mov
or
jae
adc
arpl
push
les
mov
inc
inc
sbb
mov
ds
test
mov
mov
and
adc
aam
inc
jno
inc
popa
inc
xor
push
dec
addb
bound
mov
test
xchg
and
inc
les
rcll
addl
mov
mov
mov
jmp
push
and
je
cmp
mov
mov
mov
cld
inc
mov
es
xor
mov
mov
inc
cmc
push
xor
je
add
stos
push
adc
xchg
or
into
roll
add
icebp
stos
inc
repnz
jbe
and
push
mul
out
xorl
mov
je
push
icebp
adc
dec
push
mov
shrl
xchg
les
sub
inc
jge
push
add
push
inc
xchg
in
aam
mov
and
into
push
in
sahf
mov
mull
adc
add
and
push
push
push
mov
ret
pop
into
adc
xor
dec
and
inc
xlat
inc
inc
jmp
in
jle
jno
push
xor
gs
fidivl
js
je
dec
xabort
es
insl
test
shrl
adc
xor
cmpsl
dec
push
outsb
clc
inc
xchg
cmc
inc
mov
mov
outsb
jmp
sbb
ja
inc
shll
movsb
xchg
push
jne
push
xor
push
inc
mov
pop
mov
add
addl
xor
and
fdivl
hlt
sub
or
dec
add
arpl
push
add
fidivrl
dec
xchg
bound
jecxz
push
dec
sbb
aam
sbb
negb
lods
out
cwtl
mov
shlb
xor
cmp
mov
mov
dec
shl
mov
ds
sbb
popa
jae
inc
jb
push
mov
pop
adc
and
and
xor
adc
daa
les
xor
dec
xchg
fiaddl
pop
or
push
lret
adc
mov
arpl
and
sbb
icebp
inc
inc
sbb
adc
mov
and
push
xchg
jecxz
jne
out
inc
pop
mov
shrl
not
loope
adc
mov
popa
sahf
loop
jle,pt
xor
dec
ja
push
shll
jp
call
mov
shll
mov
call
adc
cld
mov
je
daa
mov
negl
rolb
repz
jmp
dec
outsb
shll
xchg
loope
ret
and
xchg
xchg
push
mov
xor
int3
xchg
shlb
les
lds
jno
xlat
cmc
adc
dec
push
adc
rcll
gs
ret
and
sti
js
cmp
scas
cmp
push
add
test
rcl
cmc
xor
ret
mov
bound
sub
push
xchg
adc
repz
xchg
fiadds
adc
jmp
sub
dec
mov
adc
or
iret
mov
icebp
daa
mov
ret
enter
and
repz
push
jno
adc
push
mov
dec
js
and
loope
push
pop
sarb
mov
jo
mov
aam
inc
xchg
and
pop
xchg
adc
sbb
mov
outsb
adc
repnz
dec
mov
xchg
xchg
rcll
pop
adc
dec
jb
test
xor
insl
out
push
popa
inc
mov
xchg
fs
pop
adc
xchg
add
aam
mul
add
in
pushf
sbb
rorb
mov
or
jno
pop
int
xor
push
stos
fsubl
rcrl
out
dec
ljmp
pop
pop
adc
es
les
mov
add
inc
insl
daa
cmp
push
fistpl
xor
mov
or
enter
and
mov
jle
outsb
jle
stos
les
pop
push
push
inc
shll
into
add
inc
jne
and
fbstp
xlat
into
inc
or
call
push
rcll
inc
shl
mov
popa
push
mov
add
andl
push
jle
push
lret
xor
loop
xchg
repz
push
inc
shl
mov
int
inc
out
inc
xor
loope
test
adc
outsb
add
mov
inc
aam
dec
test
inc
fucomi
push
add
dec
inc
loopne
xor
rcrl
mov
and
je
jge
inc
sub
xchg
mov
out
pop
dec
mov
mov
call
add
ret
cmpsb
fs
push
mov
xlat
xorb
cmp
xor
shrl
and
adc
int
popa
jp
adc
outsb
fucomip
mov
xor
and
push
add
push
mov
out
push
xor
push
inc
push
outsb
inc
ret
cmpsl
popf
push
or
imull
inc
jno
daa
xor
mov
adc
push
loope
mov
mov
and
dec
jne
inc
outsb
cs
aas
rcl
repz
out
rclb
xor
rcll
add
out
sarl
xor
mov
cmp
mov
xor
sub
pop
out
mov
shrl
lret
push
mov
ds
rcll
and
mov
and
or
jle
sarb
push
popaw
or
inc
push
cmp
or
pop
test
push
adc
xor
mov
jno
outsl
inc
and
dec
in
sbb
adc
add
ret
inc
add
mov
and
std
add
cmc
sub
pop
lock
push
mov
xchg
mov
dec
stos
sbb
stos
adc
cld
loope
add
out
in
fmuls
xor
arpl
mov
inc
adc
mov
dec
shrl
add
in
xchg
js
add
xchg
shr
jp
mov
lret
xorb
push
sbb
imul
pop
aam
outsb
mov
dec
inc
fsubrl
xor
mov
mov
inc
clc
jb
cmp
dec
icebp
ljmp
icebp
lock
repz
mov
jno
mov
test
fidivs
mov
ljmp
and
jl
push
je
fs
jecxz
sarb
xor
icebp
dec
mov
test
xchg
jle
mov
imul
lret
roll
and
ljmp
dec
pop
jecxz
push
and
adc
cmpsb
out
cld
icebp
rcrl
lds
jne
bound
adc
popa
aam
and
enter
test
adc
addr16
lret
cli
xor
fidivs
mov
clc
out
jo
and
ds
pushf
and
arpl
mov
bound
mov
inc
je
les
cmp
dec
mov
repnz
mov
sub
rol
repz
arpl
and
inc
ds
xchg
mov
rorb
xor
inc
clc
neg
inc
sub
push
xor
xlat
das
loop
sar
pop
loope
je
loop
addl
popa
xor
int
dec
je
jbe
int3
xor
mov
popf
in
icebp
les
adcb
xor
test
stos
xorl
mov
sahf
add
mov
push
dec
and
loop
out
add
mull
inc
xlat
push
movsl
lds
jae
mov
xor
rcll
icebp
mov
std
mov
jecxz
lret
jg
mov
and
dec
out
rcl
push
mov
add
aaa
not
mov
daa
out
stos
xchg
inc
movsl
mov
mov
icebp
pushf
int3
stc
xor
or
cld
adc
addl
shll
dec
inc
ret
jae
mov
jno
jne
into
pop
mov
dec
ret
cs
pextrw
adc
pop
js
mov
std
fwait
xor
loopne
repz
fisubl
adc
push
lahf
mov
inc
andl
rol
xlat
das
test
push
xor
popa
leave
mov
xchg
add
lock
aam
aam
jb
and
and
enter
add
add
loopne
roll
xchg
mov
and
or
cli
js
mov
out
sbb
out
test
loope
pop
and
movsl
push
jecxz
icebp
mov
inc
arpl
mov
insb
add
push
ret
fisubs
out
loope
les
pop
imul
inc
shll
adc
jo
mov
icebp
loope
dec
in
sub
cmpsl
shll
stos
clc
add
and
mov
xlat
ret
sub
and
cmp
cmc
test
xorl
xchg
fisubrs
mov
cmp
push
jb
dec
dec
ret
xor
pop
andl
mov
sub
sbb
xor
loope
fimuls
xlat
and
cmp
es
push
and
xor
dec
pop
add
or
jno
rclb
mov
xor
ret
mov
mov
xor
lcall
jge
xchg
fwait
push
and
sahf
dec
mov
fstpt
inc
jo
push
loope
dec
je
dec
pop
xlat
je
push
mov
mov
rcll
mov
dec
in
stc
repz
aam
out
bound
jecxz
push
xor
and
rcll
and
mov
pop
jecxz
les
pop
adc
dec
les
movsb
jge
lock
mov
mov
ss
cmp
movsl
xlat
and
mov
popa
adc
das
jno
push
popf
pop
mov
dec
out
popa
mov
adc
jnp
test
inc
xor
fistl
out
jne
push
arpl
pop
jecxz
jae
or
and
jmp
dec
repnz
jmp
jb
jl
clc
ds
fs
out
in
pop
inc
ret
or
cwtl
mov
scas
popa
xor
add
jb
mov
je
mov
inc
iret
xor
dec
xlat
loop
je
sub
out
outsb
shl
mov
xchg
daa
push
lods
dec
jecxz
fcmovnb
pop
insl
movsl
lods
mov
popa
popa
jo
jle
and
xchg
push
cmc
add
push
cs
push
xor
loope
es
xor
jbe
les
sbb
inc
adc
mov
js
clc
outsl
mov
mov
push
inc
add
out
xor
jle
out
push
mov
outsb
mov
dec
orl
nop
aas
mov
icebp
push
mov
inc
add
into
adc
sub
sarb
decl
cmc
xchg
inc
je
jae
gs
xchg
and
inc
jae
popa
shll
fdivs
jg
and
mov
ljmp
roll
inc
into
rcrl
repz
xor
mov
inc
push
push
ret
push
ret
repnz
adc
sar
and
out
mov
mov
in
xchg
dec
xorb
adc
jecxz
add
mov
test
adc
inc
push
lock
repnz
icebp
scas
push
outsl
outsl
dec
daa
add
iret
push
xor
and
outsb
orb
in
xlat
mov
mov
xor
pop
jb
xlat
mov
pop
shrl
jae
cli
inc
outsl
lock
pop
jno
sub
adc
lret
dec
inc
push
out
adc
mov
out
mov
dec
icebp
xor
mov
jae
mov
bound
into
sti
sub
lock
dec
in
mov
test
xor
jo
mov
or
bnd
test
xchg
out
out
fisubs
les
shll
lods
adc
mov
fiaddl
shrb
mov
jecxz
hlt
mov
mov
mulb
lea
test
mov
sub
movsl
rorl
and
push
cmpsb
xor
xor
jne
jle
and
mov
inc
push
jbe
rolb
jb
inc
mov
cmc
inc
add
push
jecxz
or
hlt
mov
pusha
pop
mov
xor
add
adc
jle
mov
mov
rclb
and
mov
pop
add
test
popa
fwait
mov
jle
adc
js
and
lret
ljmp
jl
pop
rol
and
data16
and
sub
adcl
jmp
jno
int
fwait
clc
push
std
push
popa
push
push
icebp
cmp
popf
inc
adc
loopne
icebp
ror
lock
or
jge
push
pop
inc
loop
jle
xchg
pop
leave
scas
sbb
xor
add
adc
cltd
xor
std
pushw
fs
mov
fcomi
pop
mov
mov
es
int3
mov
xchg
cmp
and
push
rcrl
ret
outsb
or
cmc
loope
out
xlat
inc
adc
inc
xchg
push
jae
and
push
mov
xchg
cmc
shll
icebp
jns
shl
outsb
dec
xor
out
xor
push
repz
loope
rorb
and
test
xchg
ds
mov
cmc
je
test
idivl
jae
pop
sbb
add
xchg
xchg
cmc
xor
dec
ljmp
lret
ret
and
inc
push
lods
test
dec
inc
and
adcb
gs
jg
jmp
xor
les
mov
xor
jb
fs
inc
jo
ds
inc
daa
inc
inc
xchg
sahf
cmp
mov
addr16
out
fimull
out
xchg
xor
inc
inc
push
ds
loope
outsb
sbb
mov
adcl
clc
dec
mov
and
pop
cmp
out
les
mov
rorl
rorl
dec
xor
mov
xor
jmp
jno
xlat
stc
aad
jne
mov
add
xor
and
or
xor
inc
cmp
push
les
mov
lea
dec
stc
xor
into
sarl
mov
add
fsubp
inc
jae
mov
ljmp
outsl
mov
jmp
pop
out
fs
cmc
and
push
es
xlat
xchg
ret
cmp
mov
jle
xorl
loope
cmp
or
dec
add
rcr
jle
rorl
outsb
mov
decl
sub
xor
xor
inc
popa
ja
ds
pop
ret
sbbl
jecxz
sarl
push
bound
jle,pn
les
pop
push
xchg
mov
jnp
cmpl
outsb
push
mov
shrl
arpl
loop
loope
clc
je
add
or
out
aam
adc
jne
fidivl
push
shrb
push
imul
in
xor
jecxz
mov
xor
in
push
rcrl
imull
insb
pop
xchg
shll
mov
push
inc
add
sub
sub
push
push
jle
mov
adc
sub
or
jecxz
ret
and
push
rcll
js
in
pop
clc
and
mov
mov
and
clc
push
adc
jle
xlat
outsl
jae
jae
clc
mov
fs
or
cli
add
fidivrl
mov
push
push
dec
xor
mov
add
add
mov
dec
je
xchg
xor
loope
adcl
xchg
jp
sub
loopne,pt
sbb
ret
andb
andb
stos
and
lret
fidivl
sub
andb
adc
xchg
ja
inc
push
inc
daa
rcll
fmuls
jae
add
decb
mov
jno
mov
mov
xchg
xor
arpl
xchg
je
inc
ret
push
out
inc
lret
mov
repz
adc
mov
xor
mov
and
push
push
popa
push
bound
add
and
cmc
mov
mov
mov
jl
movsb
jge
push
push
mov
arpl
adc
cmp
je
incb
xchg
rorb
ljmp
mov
incb
jnp
adc
ret
cmp
push
out
pop
mov
shl
dec
inc
negb
je
jb
push
mov
mov
lds
rclb
sub
push
adc
dec
incb
mov
into
test
shrl
mov
cmp
mov
out
inc
xor
push
loope
out
add
pop
and
ljmp
fsubrs
ret
and
mov
jecxz
cmpsl
repz
das
and
fs
arpl
ret
roll
lds
popa
out
mov
dec
xchg
dec
add
mov
dec
jae
fdivl
jecxz
outsb
cmp
sub
imul
shr
insl
sub
add
fidivl
into
ret
data16
adc
inc
push
add
xor
mov
mov
ja
jecxz
ret
push
and
adc
push
sub
dec
sub
out
nop
xchg
add
pop
jo
mov
out
adcl
mov
shlb
cld
push
roll
and
out
mov
addr16
jg
shrb
cli
loope
sbb
out
push
push
mov
push
jb
lahf
rcrl
push
daa
popa
xlat
dec
repnz
mull
stos
sbb
ja
adcl
loope
mov
push
in
shl
xchg
adc
mov
adc
or
sub
pusha
loope
xor
push
xchg
cmp
mov
das
pop
cs
mov
ret
xor
insb
in
push
xor
les
mov
add
xor
ljmp
and
pushf
ljmp
cmpsb
divl
addr16
loope
out
ror
sbb
xorb
pop
idivb
mov
add
sahf
out
push
popa
fsubs
sub
mov
mov
loope
xchg
add
xorl
in
repnz
daa
shll
sub
sub
inc
aam
ds
lock
push
loope
ss
in
inc
pop
addl
xchg
cmp
mov
clc
mov
inc
cmp
xor
push
rol
cmpsl
xlat
inc
push
xchg
xor
push
add
dec
adc
insl
inc
xchg
nop
repnz
adc
and
cwtl
pop
cmpsb
jle
sub
out
jnp
roll
dec
out
xor
push
cmp
enter
and
jae
push
pop
push
add
inc
fidivrl
dec
cld
pop
adc
pop
mov
xor
mov
push
je
out
mov
es
adc
je
roll
mov
je
dec
add
movaps
xor
inc
add
jl
arpl
xor
adc
or
inc
inc
popa
jl
mov
divl
pop
push
pcmpeqw
popa
ret
repnz
in
push
aam
idiv
loop
jg
out
cs
adc
push
and
mov
push
cmc
lods
outsb
push
xchg
cs
xchg
out
and
push
xor
shl
sub
or
je
add
dec
shl
push
cmp
mov
add
out
and
out
cmpsb
jb
inc
icebp
popa
ret
adcb
and
cmp
pop
dec
push
mov
inc
loop
mov
sahf
add
into
adc
stos
or
push
sub
shr
adc
repz
lds
inc
or
ljmp
repz
fistps
sti
dec
jbe
fmull
insb
xor
inc
push
jmp
mov
mov
xor
xlat
xchg
in
cs
push
arpl
roll
mov
stos
push
add
dec
add
xlat
cmp
dec
xorl
jne
out
lea
addr16
adc
rolb
and
and
and
hlt
inc
mov
push
adc
mov
movsl
pushf
arpl
test
mov
test
enter
sti
push
mov
xchg
arpl
mov
leave
rol
bound
sbb
arpl
mov
loope
push
fsubrp
add
and
inc
jb
adc
dec
cmpb
xchg
stos
dec
movsb
jmp
into
push
daa
adc
or
add
sarl
xchg
xor
mov
jle
dec
loope
cmp
push
dec
xchg
add
mov
pop
out
push
das
push
stos
daa
jne
cmp
insb
push
jo
repnz
mov
insl
sub
push
sbb
lea
icebp
xlat
stos
jbe
lret
call
xor
cmp
adc
add
jp
push
sub
cmp
scas
or
movsl
loop
add
ret
and
jno
mov
fsubp
subl
in
mov
xchg
push
lcall
adc
inc
xchg
xchg
aam
mov
ja
sti
cmc
jle
mov
orb
mov
bound
mov
into
jle
push
jnp
push
rcrl
dec
inc
test
push
in
xchg
xchg
mov
xor
into
pushf
dec
jmp
add
sub
fcoms
shrb
mov
dec
inc
mov
push
cmpb
sub
popa
and
xchg
fcomps
and
push
and
xchg
mov
pushf
les
les
xor
test
and
and
andl
fsubl
ficompl
mov
aad
stos
xor
mov
shr
xchg
imul
icebp
out
adc
and
fisubs
adc
ficomps
xor
shrl
iret
xlat
mov
xor
xchg
dec
pop
jno
dec
addr16
jecxz
out
pavgw
daa
mov
push
repz
xlat
add
adc
xor
add
fs
jne
mov
jae
xor
jb
and
add
dec
fs
mov
aam
icebp
aam
lods
push
mov
push
rorb
push
hlt
sub
icebp
adc
ljmp
jo
xor
dec
cmp
and
dec
imul
inc
ds
repz
out
rcr
not
pop
mov
inc
pop
mov
jle
test
xor
sub
test
fwait
ret
popa
push
js
jae
das
dec
bound
ljmpw
insl
out
repnz
mov
movsl
push
addr16
push
es
jo
push
out
pop
popa
rcrl
andl
and
jge
xor
sub
lock
sbb
and
test
push
roll
rcrb
arpl
and
fisubrl
pop
outsb
call
and
push
jle
scas
jo
out
call
es
fs
adc
jmp
fildl
mov
jb
ret
push
jecxz
add
or
mov
test
adc
xor
inc
roll
inc
push
mov
dec
call
test
lcall
and
in
cmc
ret
loope
mov
lods
jle
cs
movsb
loope
add
mov
mov
adc
push
push
dec
xor
outsb
bound
shll
out
lds
roll
jae
inc
add
mov
mov
jo
jp
cli
addr16
pop
lds
adc
push
or
icebp
orl
leave
cmpsb
add
and
mov
adc
xor
xorb
stos
cmpsl
fwait
cwtl
inc
add
jno
scas
popa
push
adc
scas
and
rclb
xor
xchg
div
lret
ret
mov
or
sbb
mov
into
shl
inc
mov
mov
mulb
sub
push
cmc
add
jne
les
mov
out
stos
mov
inc
out
pop
hlt
push
jns
and
and
andb
xor
xchg
mov
push
fld
xchg
xor
in
mov
jb
aam
inc
push
jno
dec
xchg
mov
repnz
mull
mov
enter
gs
adcl
cmpsl
add
pop
xchg
hlt
and
lea
or
add
addb
xor
xorl
inc
ret
into
testl
sbb
push
mov
cmpsl
or
xchg
fcoms
dec
add
inc
or
pop
xorl
mov
lods
inc
adc
shlb
add
test
loope
xchg
inc
push
idivl
divl
cmpsl
push
inc
lret
mov
scas
xchg
ja
xor
xor
push
pop
notl
xchg
sbb
add
addb
xlat
mov
ficoml
xchg
mov
dec
adc
out
mov
adcb
or
xor
sbb
jecxz
mov
adc
shll
out
push
mov
sbb
push
push
xor
cwtl
outsl
mov
pop
rolb
dec
jbe
movsb
inc
fnstcw
mov
pop
dec
outsb
mov
ret
ficompl
xlat
dec
jae
inc
lret
add
and
adc
mov
add
outsl
cmc
xchg
mov
ja
xorl
shll
dec
xor
push
ss
test
dec
insb
adc
jne
and
push
movsl
adc
cmpsl
xor
arpl
lods
adc
and
sub
addl
push
push
data16
pop
ret
sub
mov
aam
push
popa
and
rcl
inc
dec
push
scas
sub
enter
insl
cs
jle
mov
cli
mov
cwtl
xchg
inc
dec
push
pop
lret
insb
jl
xlat
sar
inc
les
and
or
push
jae
movsl
aas
loope
mov
lret
rol
mov
daa
jecxz
mov
add
xchg
inc
insl
mov
mov
cmovne
ds
faddl
jno
inc
xor
or
les
cmp
dec
sub
inc
sarl
mov
xchg
outsb
scas
adc
and
ds
stos
push
push
out
or
sbb
into
outsb
mov
and
outsb
dec
add
mov
jb
inc
xor
jns
mov
inc
scas
popa
hlt
push
js
sub
xlat
jne
jmp
adc
add
dec
pop
in
clc
out
rcl
jle
jbe
dec
adc
popa
mov
fists
mov
and
dec
push
inc
mov
adc
jle
imul
popa
mov
push
xor
ret
jle
int
popf
ja
imul
call
js
mov
add
push
jle
inc
and
bound
dec
cli
cmp
cmc
stos
mov
mov
aam
mov
xor
gs
add
rorl
clc
mov
pop
adcl
ljmp
shl
into
loope
jo
add
push
negb
sbb
mov
pop
add
imul
fidivrs
sub
cmp
ss
repnz
repz
pop
dec
shll
adc
mov
mov
aad
ret
fs
xor
scas
loope
addl
mov
sbb
roll
xor
mov
and
mov
ljmp
push
and
call
xor
ja
adc
pop
aas
mov
xor
inc
shlb
les
dec
push
movsl
jmp
push
loopne
inc
inc
shlb
jae
hlt
xchg
sub
adc
push
or
andb
mov
pop
push
adc
lock
popa
frstor
test
inc
bound
mov
jbe
dec
xor
rorl
aaa
icebp
scas
xor
mov
inc
mov
roll
bound
jecxz
outsl
scas
icebp
popf
inc
andb
jecxz
icebp
push
in
jnp
test
adc
add
push
inc
xchg
testb
xchg
lods
sti
in
icebp
add
or
push
push
fildl
outsb
arpl
inc
or
loope
stc
and
mov
into
data16
in
push
push
push
mov
xchg
add
jp
call
jbe
ljmp
mov
mov
cmpsb
add
push
push
bound
pop
and
shll
test
shll
xor
jae
scas
mov
fwait
imul
xchg
dec
stos
insl
call
push
and
popa
add
xlat
hlt
clc
ret
xor
shrl
push
rol
dec
mov
bound
dec
loope
das
jmp
jae
loopne
in
dec
outsb
mov
mov
inc
in
mov
xchg
ds
sbb
mov
and
xor
ret
scas
mov
mov
mov
and
ljmp
push
adc
pop
adcl
mov
notl
outsb
daa
sub
inc
jne,pn
xor
les
pusha
inc
adc
sub
push
ds
xor
adc
roll
or
xor
push
fimull
add
adc
xor
outsb
xor
push
jno
jns
pop
outsb
or
ljmp
cmpsb
out
push
add
mov
jno
inc
inc
rcrl
popa
inc
and
out
adc
repz
out
je,pn
sarl
or
std
shl
lock
jb
adc
and
adcl
hlt
push
shrl
pop
popa
adc
call
mov
shl
mov
loope
je
mov
fs
dec
popa
ret
and
je
shlb
xor
add
adc
loop
push
fs
mov
push
out
addb
arpl
mov
xlat
jb
cmp
mov
dec
in
or
dec
icebp
or
jecxz
jmp
xlat
adc
jle
sub
xor
adc
jb
pushf
sub
mov
jecxz
jae
and
adc
mov
les
push
inc
pop
jns
fs
mov
dec
out
adc
pop
xorl
push
xor
and
dec
inc
cwtl
andb
dec
xlat
lret
fs
popa
out
adc
xchg
and
xchg
dec
scas
mov
mulb
push
xor
je
mov
xchg
pop
add
aam
arpl
mov
sub
loopne
jo
jo
dec
mov
add
inc
daa
inc
mov
xor
out
test
into
outsb
jnp
sar
mov
dec
push
test
or
and
cmp
xor
data16
add
js
outsl
jb
mov
shll
data16
push
arpl
push
push
xchg
inc
push
out
adc
pop
rolb
inc
pop
stos
xor
xor
jle
imul
icebp
roll
repnz
ds
dec
pop
adc
mov
lea
loopne
les
inc
ljmp
push
arpl
mov
sahf
mov
jae
add
not
xchg
dec
movl
loopne
mov
xor
loopne
jmp
xor
push
fs
mov
lods
les
mov
addb
rcll
fwait
inc
mov
aam
jle
xchg
adc
icebp
add
pop
call
pop
scas
test
mov
adc
xor
mov
dec
fcoms
mov
inc
inc
adc
cld
xchg
rcrb
or
cmp
out
loope
ds
in
into
adc
inc
inc
ret
push
push
jecxz
xor
idivl
fsts
dec
and
repz
popa
jae
bound
loope
push
adc
push
mov
jae
call
mov
sbb
pop
mov
inc
xor
mov
lock
and
cmpsb
out
mov
push
clc
into
jb
cld
rcl
add
xor
mov
cs
cmp
dec
lds
and
shl
push
inc
jne
xor
pop
negl
mov
rcll
loopne
push
push
adc
cltd
fdivrs
jno
mov
sahf
inc
sti
fsubs
push
out
test
in
mov
loope
testb
or
imul
xor
xchg
cmc
jae
fs
jne
push
or
ret
push
adc
mov
arpl
push
push
jb
xor
jne
jae
mov
push
shll
xchg
push
outsb
aam
and
add
nop
and
xor
addr16
out
xor
jns
xchg
es
sbbb
push
dec
push
lret
js
mov
orl
in
jo
out
mov
mov
mov
shll
mov
sarl
int3
xor
xor
cltd
dec
push
rcrb
adc
cmp
andb
adc
or
into
mov
mov
mov
inc
movsb
fs
fisubrl
into
sbb
movsb
jl
jecxz
mov
and
pop
dec
sbb
mov
inc
cmp
inc
jge
jb
cmp
inc
stc
inc
icebp
inc
xor
and
test
test
or
xchg
fbstp
mov
out
xor
adc
outsl
rcrl
popa
push
les
in
lds
add
or
dec
mov
jnp
push
shlb
push
adc
addr16
test
adc
cld
adc
mov
push
or
inc
imul
xor
lahf
lret
dec
inc
ljmp
xbegin
push
rcl
and
jno
ret
mov
lds
mov
mov
cmp
or
pop
out
mov
xor
mov
xor
jb
inc
cwtl
aad
cmp
test
call
roll
aam
cmpl
sbb
jge
push
adc
inc
outsb
xor
test
and
dec
push
rol
push
jge
hlt
xchg
mov
mov
xor
push
divb
adc
fisubl
pop
dec
rcrl
out
frstor
aas
cs
ret
loopne
jecxz
adc
ret
push
in
xlat
inc
adcb
repz
sbb
xor
jg
add
dec
xchg
and
in
and
add
xor
sbb
push
in
popa
inc
dec
ja
xchg
xchg
cmp
and
and
mov
insb
pushf
xchg
and
shrl
divl
jae
cmc
je
push
push
xor
mov
push
out
add
xchg
outsb
jmp
aam
push
repz
and
mov
scas
cmp
adc
dec
xchg
bound
insb
pop
mov
mov
adc
sub
out
adc
add
les
icebp
push
in
adc
dec
ret
and
xchg
push
inc
or
mov
cmp
xor
ret
xchg
out
mov
mov
rorl
inc
and
mov
pop
mov
subb
stc
xchg
xchg
mov
aad
push
out
into
fcmovu
outsb
ret
repnz
adc
pop
add
push
je
rorl
repnz
pop
popa
mov
cmc
inc
je
jne
add
jmp
icebp
adc
adc
movsb
loope
pop
outsb
push
xor
shll
mov
lcall
test
push
jno
jmp
andl
jae
xor
stos
mov
shlb
push
dec
adc
arpl
rep
or
bound
out
mov
xor
inc
je
mov
push
adc
rorl
adc
jns
cli
lock
mov
mov
adc
mov
xchg
bound
mov
fcom
inc
xchg
xor
icebp
into
pop
rcrl
inc
rol
test
add
pop
lds
push
jae
add
mov
imul
aam
inc
mov
jb
scas
mov
adc
mov
inc
add
mov
mov
outsb
jo
cmpsl
push
xchg
dec
xchg
ja
sbb
outsb
popa
rcl
insb
add
rcrl
xor
push
je
mov
shll
sbb
test
ror
icebp
xchg
addl
icebp
les
iret
out
adc
pop
call
stc
jb
jmp
fimuls
and
mov
add
into
lock
loope
daa
fs
add
xor
adc
repz
sub
mov
jl
add
roll
pop
jle
xlat
xor
insb
iret
sbb
sub
adc
and
cli
out
cmpsb
arpl
and
or
jle
mov
dec
sbb
sub
dec
jno
idivl
nopl
inc
mov
add
into
mov
add
lret
sbb
rcl
addr16
fs
in
cmc
and
push
xchg
fwait
pop
adc
mov
cmpsb
rol
push
loope
jb
and
mov
add
pop
notl
mov
cltd
xchg
rorl
add
xor
inc
mov
lahf
shrl
ja
xor
mov
dec
or
cmp
test
cmpsb
xlat
adc
rolb
fmuls
jecxz
or
jecxz
icebp
and
popa
mov
add
add
mov
sbb
push
enter
mov
mov
mov
adc
add
xor
hlt
xchg
sbb
divl
jge
and
adc
lret
ja
xor
bound
out
mov
push
jecxz
leave
rol
mov
shrl
insb
mov
mov
inc
sahf
xchg
mov
shlb
or
mov
push
xor
enter
dec
jp
sub
adc
sbb
lea
jae
sub
adc
jmp
and
sub
jge
fdivs
push
jno
mov
push
dec
jne
popl
mov
push
push
popf
popa
sub
push
xor
adc
bound
xchg
test
fnstenv
push
lahf
or
jnp
push
dec
inc
cmp
jmp
dec
daa
inc
mov
mov
dec
push
xorb
popa
icebp
inc
lock
popf
push
fdivs
adc
rolb
mov
pop
inc
cltd
adc
sbb
test
and
je
xchg
jno
aas
push
leave
push
je
adc
stos
aaa
push
push
in
xorl
sbb
imul
xchg
shr
lahf
jb
push
pop
shlb
push
mov
mov
rorl
les
pop
shlb
mov
mov
jmp
jo
fsubrl
std
shll
or
into
lahf
icebp
xor
cs
mov
cmpsl
test
add
xor
xlat
sbb
gs
xor
stos
out
fdivl
sub
rcrl
mov
add
push
mov
rol
xor
inc
and
loope
xor
dec
inc
loop
xor
sti
fldenv
cmpsl
adc
jecxz
icebp
and
leave
sbb
cmp
mov
jecxz
je
pop
or
mov
sarl
xor
inc
shl
jbe
and
jb
mov
stos
inc
filds
mov
fiaddl
int
je
and
xchg
popa
push
mov
push
xor
shr
inc
jae
push
lahf
cmpsb
pop
jne
out
push
gs
jmp
ret
push
push
dec
pop
clc
jecxz
adc
add
xlat
jl
testb
sbb
dec
scas
xchg
add
sub
xchg
add
add
popf
negl
add
dec
push
test
jb
outsb
lock
fildl
call
arpl
mov
pop
icebp
mov
mov
adc
jne
rclb
adc
inc
xchg
mul
jae
les
mov
cs
imul
push
ret
stos
mov
arpl
ds
adc
mov
xor
into
or
shll
cmp
mov
std
rcll
inc
sub
imul
and
mov
dec
and
add
test
mov
mov
shl
push
into
arpl
andb
andl
add
mov
xlat
stos
mov
jae
and
fdivs
sub
add
xchg
cmp
imul
loopne
mov
in
out
mov
shrl
pop
nop
mov
clc
jg
xlat
ficoms
dec
out
pop
pop
mov
jnp
adc
mov
loope
and
push
cwtl
inc
xor
mov
sbb
lods
into
andb
dec
jb
push
jge
add
cli
xchg
push
mov
pop
outsl
sti
xor
push
mov
shr
mov
js
mov
or
mov
xchg
pop
lret
mov
mov
push
xor
outsb
addl
mov
sti
rorl
dec
movsl
cmc
or
pop
xor
lea
mov
push
shll
faddl
mov
mov
in
sbb
loope
shl
and
out
into
mov
out
adc
mov
jno
xchg
lds
outsb
adc
adc
sbb
shlb
and
in
mov
subl
jnp
out
xchg
and
push
cmp
jnp
sbb
stos
enter
add
sub
scas
xor
and
loope
mov
into
shr
inc
popa
pop
loop
dec
cmp
adc
pop
cwtl
fs
mov
inc
dec
pop
pushf
lret
or
repz
and
enter
jns
xlat
xor
jne
xor
push
es
rcll
inc
jb
arpl
and
inc
repz
dec
xchg
adc
pop
mov
inc
into
leave
dec
pop
inc
and
and
ficoml
into
jmp
inc
dec
add
xor
or
push
jge
dec
jb
xor
inc
pop
mov
fiaddl
add
dec
test
pop
pusha
fmulp
icebp
and
mov
xchg
inc
jmp
xchg
shlb
aam
out
xor
js
les
dec
jb
push
jecxz
lret
stos
je
ret
xor
jae
dec
dec
xchg
cmp
mov
fsts
jle
ret
sbb
xlat
iret
sbb
dec
rclb
stos
mov
sub
sbb
test
mov
ja
psrad
in
fstpt
and
inc
mov
out
rcll
test
out
pop
add
and
outsb
mov
push
imul
mov
fs
int3
sahf
std
rcrb
push
out
loopne
mov
stos
ret
in
popf
pop
dec
mov
xor
add
cmc
cld
je
push
scas
dec
and
jl
jb
and
xchg
js
jle
cli
lea
loope
and
icebp
out
and
xor
popa
and
rolb
mov
fsubl
fisubrs
push
mov
adc
shl
int
adc
add
fsubl
mov
and
inc
daa
loope
aas
mov
push
and
stc
daa
xor
mov
sbb
mov
loope
sub
xchg
push
ret
fucom
pushl
dec
mov
dec
in
cs
inc
je
mov
cmp
dec
cs
pusha
popa
bound
add
icebp
dec
and
popa
push
mov
mov
stc
add
xor
shll
gs
xchg
daa
push
data16
or
aas
xchg
imul
inc
jae
inc
adc
fs
or
mov
movsb
std
xchg
dec
in
outsl
pop
sarl
pop
push
add
pop
jne
sbb
ficoml
push
mov
jecxz
mov
push
mov
insl
fisubrl
pop
out
and
xor
push
mov
push
jecxz
loope
int
stos
add
xor
into
push
jo
mov
add
sbb
test
adc
xor
mov
push
mov
jno
push
jmp
xor
dec
mov
test
xchg
mov
push
adc
mov
push
add
sub
stc
add
rcll
les
jmp
mov
dec
jno
fdivrp
xor
ret
mov
and
pop
xor
icebp
xchg
mov
push
mov
mov
divl
in
into
sbbl
sbb
or
inc
pop
incb
push
shlb
ret
jae
mov
inc
dec
imul
adc
or
cs
jecxz
hlt
adc
sub
and
push
jno
bound
scas
sarb
and
dec
negb
mov
pop
adc
mov
sub
adc
push
in
in
js
adcl
stos
sahf
add
mov
sub
les
lds
xor
mov
inc
inc
adc
xchg
push
cmp
inc
iret
ja
shlb
dec
jl
push
insb
or
call
inc
xor
lds
jg
add
adc
adc
mov
imul
cmc
fsts
cmovs
or
xchg
cld
sub
inc
mov
popa
jecxz
out
outsb
mov
out
pop
les
mov
jb
enter
iret
sub
roll
inc
mov
mov
and
mov
in
cmpsb
push
adc
insb
push
bound
scas
cmpsl
mov
inc
xchg
je
outsb
inc
dec
xchg
in
mov
mov
mov
mov
push
xchg
movb
and
roll
subl
jp
arpl
add
sub
mov
loope
push
xchg
les
xor
cmc
je
cmp
pop
stos
repnz
scas
mov
dec
negb
xor
pop
pop
and
leave
shrl
and
cli
xchg
adc
sub
test
cs
mov
push
jl
stos
out
cmp
jmp
jae
xchg
xor
xor
out
sub
mov
mov
push
xchg
and
lret
adc
rcl
xlat
jne
adc
jle
or
push
xor
test
inc
arpl
add
mov
lahf
and
test
and
jno
xchg
sbb
jb
pop
in
loopne
and
adc
jg
out
stc
adc
in
push
jmp
mov
lock
sbb
and
dec
inc
add
shr
mov
fs
dec
and
xchg
mov
mov
out
sub
mov
xor
dec
jb
mov
xchg
stos
out
popa
repz
xchg
adc
ds
xlat
loop
fisubs
rcl
xor
pusha
push
and
add
std
cs
jo
push
arpl
andl
loop
and
ret
push
mull
dec
push
lret
mov
inc
into
jle
outsb
pop
loope
mov
stos
jbe
push
push
pop
cli
xor
test
mov
dec
dec
push
mov
shr
test
cmpl
ja
jmp
les
shl
mov
xor
notl
push
inc
hlt
push
add
repnz
popa
stos
jb
push
inc
scas
lds
scas
xor
mov
adc
mov
xor
repz
inc
out
sub
les
adc
xor
mov
fstps
mov
xchg
aam
in
ret
xchg
roll
js
cmp
loope
insb
mov
and
mov
fisubrs
jae
xor
out
je
adc
outsb
repz
jbe
add
cli
add
push
jns,pn
mov
rcrl
stos
and
shl
call
scas
jmp
add
and
mov
mov
adc
xor
rcrb
outsl
loope
je
jne
outsb
mov
cmpl
jmp
add
mov
gs
dec
arpl
mov
jmp
jmp
xchg
inc
ret
push
loopne
jne
out
mov
cmp
mov
imul
inc
xor
ficomps
xor
xchg
stos
idivb
les
jb
mov
inc
clc
inc
xor
mov
jns
add
scas
into
rol
cwtl
xlat
and
sub
or
xor
mov
andl
inc
arpl
dec
out
push
sarb
adc
loope
xchg
test
les
cmpsb
je
xchg
pop
out
adc
pop
xor
insb
sub
lds
andl
in
mov
addr16
sub
or
push
mov
xchg
mov
mov
movsl
cmc
xchg
popa
and
sub
mov
and
leave
jb
jae
add
addr16
xchg
xlat
fadd
push
fsubl
inc
push
orl
and
sbb
js
adc
out
ss
dec
add
mov
inc
fsub
call
push
popa
cld
jnp
dec
cmpsl
les
pop
jle
dec
test
sbb
jno
cmp
roll
cmpsb
xchg
sub
andl
out
call
fs
adc
pop
into
xchg
inc
push
push
clc
inc
jecxz
roll
jns
arpl
xlat
popa
push
imul
std
outsl
adc
outsl
jge
push
sub
out
or
jno
lcall
in
test
cs
inc
scas
mov
xorl
daa
repz
inc
mov
and
pushf
adc
arpl
add
inc
imul
add
jns
xchg
mov
add
lods
jmp
outsl
dec
ret
addr16
mov
pop
xor
add
mov
inc
adc
push
stos
mov
jb
xorl
mov
icebp
roll
sub
scas
mov
add
xchg
inc
adc
xor
out
dec
sub
into
push
negl
cs
lds
pop
push
loope
jne
and
data16
sbb
aam
sub
xchg
add
mov
mov
push
mov
rcl
mov
push
fldl
inc
std
dec
cmp
jecxz,pn
mov
mov
out
adc
ljmp
shll
xlat
or
jo
call
and
inc
mov
xchg
sub
cmp
out
adc
add
pop
addr16
loopne
pushl
cmpsl
dec
dec
adc
es
sub
mov
sub
cld
xchg
das
shlb
addr16
dec
movsb
fs
push
xchg
add
xchg
rcrb
adc
xor
repz
push
cmp
rorl
push
push
push
rcr
pusha
and
fsubrp
ret
addl
and
push
xlat
ret
pop
sub
push
in
inc
pop
ds
inc
clc
fisttpl
les
imul
adc
js
cmpsb
in
xor
push
ficoml
shl
fildl
cmc
mov
in
mov
outsb
ret
aad
std
jp
fs
or
or
push
repz
adc
dec
xlat
es
push
xor
sub
mov
sub
shrl
or
push
outsl
sbb
pop
mov
outsb
inc
sbb
mov
mov
fcmovnb
fcoml
inc
insl
jno
push
lret
adc
fs
jmp
mov
and
dec
add
xor
ret
shlb
out
and
popa
mov
dec
xchg
jo
dec
outsb
pop
jae
out
push
pop
xchg
adc
add
aad
adc
mov
jecxz
jae
pop
cmpsb
dec
adc
pop
sbb
sbb
pop
xor
or
andl
cmp
push
std
shll
mov
dec
pop
inc
dec
mov
push
mov
inc
rol
push
in
inc
adc
or
xor
jae
xor
mov
add
push
lods
ja
mov
mov
mov
inc
outsb
sub
jp
xchg
popa
add
push
xor
adc
xor
xchg
mov
push
jne
ds
fistpll
icebp
loopne
jl,pn
add
rclb
xchg
adc
mov
pop
push
adc
repz
sbb
repz
jae
xchg
testl
sub
mov
subb
mov
xor
adc
shrb
out
cmp
add
push
and
outsl
sbb
or
daa
mov
insl
cltd
xchg
mov
je
and
jae
add
sub
test
jmp
push
add
add
outsb
adc
xlat
int3
call
pop
dec
adcl
or
cmpsl
xchg
jb
das
lods
ret
and
add
mov
and
adc
pop
lds
push
fldenv
movsl
fs
push
pop
push
push
ret
cmpsl
and
hlt
push
push
xchg
push
cmp
adc
adc
dec
dec
and
push
inc
jno
cli
pusha
push
cmp
adc
les
jmp
push
sub
add
ret
outsb
mov
fs
loopne
aam
xor
mov
push
rcrl
xchg
andb
cltd
xchg
imull
rcrl
mov
adc
push
push
std
pushf
lret
into
fidivrl
rorl
stos
ljmp
dec
loope
pop
or
xchg
popa
je
aam
xchg
in
adc
shll
bound
arpl
mov
xor
je
in
fdivs
ret
push
pop
roll
mov
inc
mov
daa
aam
rcrb
push
push
enter
clc
notl
sub
insl
popa
and
mov
pop
out
scas
cs
sti
call
notl
test
cmp
xor
add
faddl
cmp
jnp
push
mov
into
xchg
dec
xor
out
mov
mov
add
jne
bound
sub
and
sub
jns
push
test
adc
mov
add
popa
ret
mov
ss
shlb
pop
push
lds
inc
jno
mov
repz
add
sbb
adc
pop
fs
pop
jo
jno
js
sbb
jmp
js
xor
mov
jno,pn
adc
test
mov
sub
pop
add
repz
cwtl
xor
add
adc
mov
scas
jae
testl
mov
sub
xchg
inc
mov
dec
orb
xchg
inc
ja
sbb
aam
and
push
or
xchg
pop
add
repnz
mov
mov
push
jno,pt
fwait
jle
fnsave
cmp
push
dec
pop
lea
and
inc
add
mov
je
push
jno
mov
xor
test
adc
ds
sbb
inc
bound
inc
mov
pusha
mov
and
sub
adc
and
mov
push
sbb
push
add
adc
inc
movsb
cmp
cmp
and
pop
mov
insb
in
jge
mov
test
pop
jbe
add
xchg
xor
lcall
dec
dec
pop
push
pop
add
icebp
mov
bound
xor
in
cld
xor
je
inc
ret
adcb
mov
push
dec
fisttpl
or
or
adcl
pop
rcll
xchg
shlb
hlt
jns
cs
mov
cld
repnz
loope
test
stc
inc
mov
mov
ljmp
xchg
out
ljmp
imul
dec
outsb
icebp
and
ficoms
xchg
xchg
jmp
mov
cwtl
xchg
or
bound
shlb
shl
and
mov
into
lret
jbe
ljmp
fiaddl
pop
out
mov
xor
out
jecxz
push
bound
notb
gs
adcl
xor
pop
jmp
push
mov
jle
popa
lock
adc
lods
mov
outsb
mov
jecxz
jb
and
in
addb
shl
inc
icebp
push
outsl
push
mov
addr16
push
jle
xchg
xor
roll
and
mov
sbb
xor
dec
jle
cwtl
xorl
into
fidivs
rclb
xchg
jecxz
xor
dec
movsl
xchg
repz
les
mov
lret
jle
cli
loop
mov
jo
pop
popa
push
jno
fs
int3
mov
and
sub
xor
jo
mov
mov
fmuls
repnz
dec
movsl
stc
mov
mov
push
ljmp
add
jle
lcall
hlt
xchg
mov
stos
cmc
je
adc
popa
xorb
sub
lcall
loope
test
sub
in
adc
mov
cmpsl
cmpl
clc
add
cmp
add
jg
mov
add
ficoms
and
push
inc
fs
dec
xor
popa
shr
data16
inc
xor
andb
and
inc
xor
add
stos
mov
jne
adc
add
jecxz
mov
push
shll
hlt
loope
adc
sub
inc
popa
in
popf
call
rorl
pop
imul
adc
das
addl
cmp
cmp
fsubrl
fistl
iret
adc
les
inc
shll
ret
fs
andb
loope
icebp
cmp
adc
cmc
xlat
bound
repz
cmp
or
fcoml
or
mov
insb
dec
and
ds
popa
and
xchg
mov
shlb
dec
outsb
sub
shll
push
rorl
ret
lcall
adc
je
and
jno
xchg
repz
test
and
xchg
je
loope
jl
rclb
rorl
addl
adc
push
add
and
jge
cmpsb
cmpsb
jnp
popa
or
jno
lret
sbb
jae
adc
jecxz
mov
xor
stos
mov
inc
sbbb
mov
xlat
mov
mov
lret
out
and
stos
outsb
dec
xor
xor
pop
les
sarl
in
ja
mov
rcrl
push
lock
inc
jle
out
loopne
out
hlt
in
sub
xchg
adc
cmp
rorl
cmp
mov
shrl
push
add
dec
inc
push
xor
lods
popa
dec
loop
bound
inc
nop
push
adc
loope
movsb
jb
inc
add
push
lret
jl
dec
and
xor
movsl
arpl
out
pop
xlat
adc
repnz
loope
cli
pop
mov
enter
xchg
cmp
movl
jb
out
xchg
pop
ret
adc
notl
je
in
add
push
mov
xorl
mov
adc
repz
lock
scas
mov
rorl
adc
jl
push
xchg
and
mov
xor
cwtl
inc
push
push
stos
adc
inc
js
adc
out
mov
mov
adcl
jmp
adc
jp
pop
dec
fcomps
mov
cmc
add
mov
int
inc
push
inc
mov
daa
jle
xlat
mov
add
mull
jbe
jecxz
pushw
popa
xchg
test
insb
je
insb
and
mov
push
jo
rcrb
loop
jb
inc
addl
and
push
inc
sub
mov
lret
cmpsl
pop
cmpsl
jecxz
mov
mulb
add
xor
sbb
mov
jecxz
je
mov
xchg
ret
aam
inc
sahf
ds
inc
lret
push
repz
pop
les
out
rcl
into
xor
cmp
sub
ja
outsb
and
inc
pop
cs
mov
sbb
ds
push
cmp
push
mov
sarl
cmp
cmp
fs
adcl
add
shll
inc
mov
andb
xor
sbb
test
cli
js
mov
sub
push
divl
scas
sbb
cld
imul
sub
mov
lods
mov
and
and
xchg
shlb
mov
adc
cmp
mov
test
xlat
mov
xchg
dec
fsts
jle
movsb
and
jg
xchg
rcrl
jo
in
test
into
jb
rol
imulb
pop
cs
or
and
pop
repz
arpl
jle
lret
xor
add
test
xlat
mov
cmp
mov
xchg
xchg
push
xor
push
outsb
sub
mov
cmpsl
mov
mov
xchg
cmc
xor
dec
sti
jecxz
lret
inc
mov
call
rorl
mov
jecxz
test
jo
adcb
sar
roll
subl
add
loop
loope
cmp
jns
dec
and
loop
mov
jge
xor
sub
arpl
shrb
add
inc
shr
bound
fcoml
out
data16
jmp
sti
fsts
xlat
push
call
xor
xor
jle
push
or
sub
dec
ds
scas
les
repz
xor
cmc
adc
pusha
xor
int3
sub
repz
loope
dec
add
not
jmp
or
push
xor
ja
les
add
mov
mov
push
pushf
adc
dec
jmp
rorb
cmpsb
adc
stos
dec
cmp
add
mov
and
xchg
sub
sub
push
fs
mov
inc
and
loope
or
jne
out
clc
inc
je
cs
outsl
adc
in
test
ljmp
xchg
mov
or
mov
or
jp
adc
add
mov
lret
out
loope
cwtl
and
orl
xchg
std
push
xor
adc
rclb
push
int
call
xchg
rorl
popa
push
mov
pop
dec
mov
xor
push
fimuls
mov
lods
inc
outsb
push
cmp
pop
sbb
add
es
dec
faddl
loope
jecxz
jle
and
fcoms
mov
shr
push
dec
fs
mov
rcll
pushf
jae
mov
sbb
sbb
outsb
add
adc
inc
daa
xchg
and
cmp
add
stc
mov
loopne
je
mov
cld
fwait
jne
pop
shrb
add
inc
repz
and
xor
cmpsl
ja
xor
adc
sti
push
jno
jne
push
push
pop
pop
adc
pop
outsb
jb
outsb
mov
ret
out
add
ljmp
insb
cld
test
mov
aaa
ds
movsb
push
nop
adc
scas
add
pop
cmp
and
ret
inc
sahf
pop
push
orl
into
sti
cmpsb
imul
mov
push
jb
jae
shll
cli
les
xlat
add
mov
mov
mov
push
aaa
cmpsl
out
bound
aad
pop
jne
mov
jb
mov
or
fs
dec
xor
dec
xchg
popa
inc
in
lahf
shlb
out
aad
mov
dec
daa
je
fs
inc
mov
add
dec
repz
pop
pop
jne
test
sti
inc
outsl
cmpsl
push
cwtl
xchg
sub
mov
push
adc
mov
js
mov
imull
sub
daa
mov
daa
sbb
inc
jb
daa
dec
test
add
mov
les
pop
pop
ss
xor
jle
pop
outsb
xlat
dec
mov
dec
push
das
stos
mov
mov
xchg
into
and
fwait
shll
sarl
adc
les
jne
ret
inc
jecxz
mov
fwait
adc
mov
loope
out
and
hlt
pop
fbld
stc
cmp
mov
daa
sti
sti
mov
or
mov
adc
jae
sub
xor
loope
add
mov
mov
ret
ljmp
jg
cmpb
js
dec
push
mov
and
push
test
daa
pop
ja
adc
imul
xchg
mov
inc
xchg
loop
les
inc
cmpsl
push
dec
movsl
or
jle
inc
push
inc
pop
push
repz
fs
sub
imul
les
rclb
and
pop
xchg
subl
mov
jb
jecxz
rcl
mov
push
xchg
mov
lret
push
mov
rcr
push
andb
add
cmp
stc
and
imul
imul
out
mov
shl
sahf
and
xchg
loop
jle
xor
shlb
lods
movsb
outsl
jl
into
add
sbbb
addr16
adcl
out
fs
push
mov
shll
repz
fidivrl
shll
je
lods
mov
pop
sub
fs
jmp
repz
xchg
xchg
push
aam
xchg
xor
ja
or
fs
gs
push
leave
inc
xor
loope
inc
cltd
fimull
add
mov
xlat
in
mov
cmpsb
inc
inc
adc
and
popa
sbb
aam
xchg
test
and
push
xor
les
push
movsl
aad
and
mov
mov
adc
mov
stos
xorl
out
outsb
addr16
scas
mov
push
out
and
push
xor
and
add
pop
ret
adc
dec
mov
fs
loope
lret
ja
fdivs
mov
daa
mov
xchg
decb
andl
test
bound
loop
rorb
leave
cmp
int
xorw
test
sbb
xor
adc
mov
adc
pop
mov
je
mov
into
mov
je
cs
and
mov
inc
push
testl
inc
mov
mov
loope
adc
fmulp
xchg
inc
sbb
les
popl
mov
arpl
repz
sbb
sarl
inc
repnz
mov
outsl
xor
or
mov
mov
jecxz
mov
mov
mov
mov
cmp
shl
jb
xchg
add
pop
sub
xchg
mov
lahf
sarb
subl
mov
xor
inc
mov
mov
push
ficoms
push
mov
addr16
arpl
incb
cmp
push
clc
add
rorb
mov
arpl
adc
popa
bound
xor
fnstcw
jne
dec
and
dec
adc
push
and
mov
pop
mov
xlat
idivl
push
dec
sub
push
jecxz
jae
jl
subl
dec
mov
das
andl
dec
sar
xor
les
and
cmp
outsb
mov
adc
mov
sar
mov
add
je
into
inc
sbb
in
cmc
out
jecxz
dec
loope
rorl
bound
jno
push
inc
xor
push
push
ljmp
xorb
ret
movl
pop
mov
ds
data16
adc
in
jp
out
cld
cmp
dec
adc
clc
icebp
xlat
add
mov
xor
xchg
jbe
mov
xor
sub
push
add
je
rolb
mov
loope
add
and
lock
and
xchg
orl
les
mov
xchg
xor
add
mov
xor
mov
mov
cmp
stc
stos
test
je
push
icebp
les
xchg
cmp
shlb
adc
dec
cld
insl
push
cld
testl
je
sti
sub
xor
inc
xor
jle
aas
roll
je
add
ret
les
shr
inc
jno
mov
mov
sbb
jge
adc
cmp
in
mov
mov
or
inc
inc
xor
fmull
pop
ret
shrl
sub
outsb
repz
cmpsl
inc
popf
cmpsl
outsb
cmpsl
jmp
mov
adc
outsb
jecxz
inc
popa
loope
inc
push
icebp
fs
cs
mov
and
out
fstl
fdivl
les
andl
roll
lret
call
push
into
jae
xor
xchg
inc
mov
fs
data16
pop
mov
jge
jle
jae
adc
shrl
roll
cli
sub
push
xchg
jecxz,pn
mov
xchg
dec
adc
ficoms
xchg
fcoms
add
adc
push
negl
add
fmull
mov
cli
and
sarl
mov
inc
jle
stos
les
and
add
das
and
mov
pop
adc
cmc
dec
xorl
inc
dec
sar
shl
andl
fcomp
and
xor
push
push
jne
mov
fsubs
xchg
xor
loopne
and
lods
sti
loopne
addl
lods
mov
push
les
add
mov
dec
inc
shrl
ds
bound
or
lock
ss
into
xor
aaa
mov
dec
jb
and
sahf
push
rclb
cmp
js
je
mov
jb
in
in
dec
add
inc
lea
ret
loope,pt
out
inc
test
and
xor
cmp
xchg
mov
push
add
add
int3
push
sarl
pop
dec
add
inc
lcall
xchg
push
rcrl
and
cmc
shlb
and
sub
inc
push
je
adc
loope
mov
aam
sub
out
inc
bound
and
mov
add
aas
cmp
push
stc
fwait
out
xor
push
jb
xor
int
xor
sub
adc
and
lret
jmp
bound
cmpsl
inc
and
stos
xchg
les
push
mov
xor
imul
inc
cmp
mov
sub
out
jge
ds
mov
jmp
jo
cmc
and
mov
cmp
jge
push
sbb
enter
shlb
mov
je
xchg
fdivl
pop
ljmp
fidivrs
daa
mov
add
je
sbb
push
sbb
stos
stos
cmpsl
mov
js
mov
loope
inc
movsl
xchg
xchg
push
ret
loop
mov
sub
xor
out
add
shlb
xchg
mov
gs
js
xor
jnp
sub
fiadds
roll
or
jb
lock
adc
and
shll
mov
repnz
add
push
inc
adc
mov
push
cmp
push
pop
push
inc
sbb
mov
jnp
inc
push
arpl
mov
adcl
sub
outsb
imul
rolb
add
xor
inc
add
ds
minps
inc
jmp
outsb
push
and
pop
into
mov
or
popa
xchg
jo
push
mov
pop
arpl
add
out
jnp
and
push
mov
dec
jno
push
dec
shrl
sbb
push
and
push
inc
push
popa
push
jno
xor
xchg
orl
testl
jo
mov
xchg
ret
dec
mov
in
scas
mov
out
lock
daa
add
shlb
dec
xchg
jge
pushw
sub
testl
ss
add
mov
cmp
cwtl
aaa
pop
repz
inc
aam
xchg
push
fmul
jns
and
je
and
popa
scas
adcl
mov
xor
into
dec
dec
das
popa
out
stos
cmp
cmpsl
mov
jp
lock
out
adc
call
popa
xlat
in
fcomps
jecxz
roll
out
push
rol
xor
sahf
push
stos
pop
call
adc
adc
mov
xor
mov
mov
fisubl
rol
sub
cmpsl
cmp
dec
mov
in
and
ljmp
push
inc
or
mov
push
xor
pushf
push
xchg
push
push
mov
hlt
push
cmpsb
mov
mov
loopne
sbbl
push
rcl
das
sub
sbb
push
cmp
popf
and
adc
sbb
cmp
lods
popa
push
repnz
push
mov
addr16
daa
je
fisubs
cmpsb
and
test
and
fisttpl
jne
pop
push
mov
push
roll
mov
push
cs
mov
out
mov
mov
xlat
jno
cli
out
jb
les
popa
push
movsb
adc
ds
and
dec
mov
into
mov
dec
aad
loop
mov
mov
jns
mov
shrb
jno
sub
jns
cli
mov
cmovbe
xor
test
push
mov
xor
mov
cmc
mov
jno
mov
inc
out
jo
xchg
mov
push
adcb
cmp
popa
scas
inc
push
sahf
ds
push
addl
shll
cmc
ds
xchg
jmp
mov
pop
push
and
mov
xor
push
xor
push
jo
movsb
ret
jge
push
insb
push
push
xor
pop
outsb
test
add
stos
stc
imull
cmp
lods
andnps
jno
lret
inc
roll
mov
std
jp
mov
jle
stos
inc
sbb
adc
add
or
xor
add
dec
bound
dec
push
shrb
cmpsb
repz
push
ss
mov
aas
cmp
mov
or
jns
xor
or
add
jmp
xchg
jb,pn
arpl
xor
in
add
xchg
addl
cmp
xor
sbb
mov
jge
pop
sbb
shl
cs
in
xor
aam
and
jmp
and
sub
popa
pop
and
push
je
xor
ds
es
rclb
xchg
lods
push
mov
ja
push
sub
ds
and
sub
fs
das
inc
or
movsb
mov
pop
push
xor
mov
sarl
jbe
addb
sahf
mov
out
mov
aas
and
add
mov
inc
push
cwtl
inc
jge
sub
xchg
mov
dec
bound
jae
rorb
fs
fdiv
and
lea
loopne
push
sub
mov
dec
mov
xchg
ss
fistl
orl
xchg
inc
and
jns
hlt
mov
adcl
shll
adcb
mov
inc
shll
add
xor
add
std
push
cmp
xchg
scas
push
daa
xchg
inc
enter
cmpsb
bound
shl
pop
repz
loope
jmp
push
cs
iret
pop
out
xor
push
adc
daa
pop
je
mov
push
lock
xchg
and
xchg
jo
jo
mov
lods
sub
iret
mov
dec
push
pop
cli
and
adc
xor
pop
add
mov
popa
bound
cmc
mov
xor
xor
mov
shrl
cmpb
jbe
inc
adc
add
clc
addl
or
stos
imul
inc
xchg
add
jno
rcll
arpl
aaa
enter
in
push
jle
mov
sti
mov
inc
and
and
stos
out
lret
movsb
sub
adc
mov
inc
int3
push
icebp
and
lret
adcl
xor
xor
mov
lods
xor
sub
hlt
fidivs
inc
outsb
das
movsb
int
js
adc
div
jae
shlb
stos
jge
sbb
sbb
mov
stc
cmp
push
add
ror
sub
push
add
push
bound
xor
stc
std
inc
clc
push
mov
push
add
pop
jbe
pushl
insb
xlat
ja
mov
adc
xchg
inc
jb
faddp
les
out
mov
insl
cmp
sbbl
jecxz
inc
jnp
push
dec
push
jmp
mov
adc
fmull
inc
push
push
push
test
stos
push
mul
je
xor
subb
xchg
sub
inc
lock
mov
idivl
mov
mov
adc
sbb
and
pusha
movsb
jmp
ret
js
popa
icebp
cwtl
xchg
sti
add
loope
pop
dec
add
imul
push
push
mov
clc
adc
lahf
stos
pop
push
push
inc
rorl
test
push
jo
idivb
shl
leave
movsl
and
cmpsl
cs
sti
call
push
into
xorb
add
and
push
inc
adc
add
cmpsl
in
cmp
inc
xchg
lahf
add
nop
sub
inc
cmp
out
mov
rcll
adc
xor
pop
je
and
xor
call
mull
rorb
adc
cmp
mov
imul
add
out
and
adc
adc
fidivrl
mov
cmp
sub
add
out
roll
ss
adc
movsl
add
out
fimuls
adcl
pop
pop
dec
mov
out
or
pop
out
popa
mov
inc
adc
aam
ror
je
out
sub
repz
add
les
xorl
je
lcall
bound
xor
xor
shll
xor
pop
push
loope
cs
mov
mov
jnp
pop
dec
gs
ss
es
popa
push
pop
addr16
ret
jb
inc
xchg
xor
add
aam
imull
lods
sub
mov
and
mov
pop
cmp
push
pop
xchg
xchg
movsl
xchg
bound
jle
xlat
adc
out
adc
or
into
mov
loopne
add
mov
into
mov
push
jge
push
aam
xor
or
shl
je
ret
subl
cmc
fs
xor
xlat
out
cmp
inc
fists
jle
xor
popf
repz
mov
stc
inc
mov
in
inc
push
out
jae
jb
push
add
into
rolb
xchg
out
adc
xlat
mov
outsl
je
or
mov
inc
icebp
outsb
in
sbb
into
adc
and
rcll
mov
add
push
mov
mov
scas
push
jle
jb
xlat
and
jle
adc
pop
mov
fs
sbb
out
sub
outsb
fdivrp
push
push
inc
in
cmp
inc
test
adc
and
jne
mov
loope
and
xor
ret
inc
in
pop
xchg
adc
dec
rolb
xor
add
adc
imul
outsb
testb
adc
test
addl
and
inc
push
out
xor
push
push
xor
popa
xchg
xor
daa
adc
out
mov
dec
xchg
les
adc
or
or
aam
daa
mov
repz
in
movsl
pop
xlat
icebp
dec
cmc
push
dec
inc
and
dec
and
loop
push
xchg
jo
push
insb
mov
lret
dec
div
fiaddl
xchg
push
je
pop
imul
aas
ror
and
pop
add
ret
push
insb
mov
jle
loope
adc
scas
pop
mov
test
inc
xchg
xor
data16
rcr
sbb
dec
adcl
cmpsl
outsb
cmp
pop
xor
pop
fs
and
lcall
mov
adc
sub
sub
ror
out
mov
clc
into
or
mov
push
outsb
fcom
jecxz
out
mov
mov
mov
push
daa
cs
adc
jno
loop
xchg
andl
mov
in
les
inc
dec
pusha
xor
jmp
dec
xchg
push
ds
xor
sbb
jne
dec
jno
movsb
insb
out
push
add
mov
shll
leave
sub
adc
sub
and
xorl
arpl
sarb
jl
ds
daa
fnsave
call
push
nop
aas
adc
imul
xchg
sub
ret
mov
inc
adc
pop
in
mov
rcr
test
je
scas
pop
pop
jle
dec
push
pop
in
inc
and
jle
pop
addr16
aas
sub
shrl
jbe
push
xchg
shll
jle
sahf
add
xorl
adc
push
rcll
lret
add
cmp
iret
cmpsl
push
lock
hlt
idivl
pop
lods
sbb
into
arpl
jecxz
call
in
jbe
sub
in
sar
stc
jb
or
or
icebp
jle
loope
rol
pop
push
arpl
xchg
push
pop
ds
pop
inc
mov
cli
out
jmp
arpl
add
outsl
push
xchg
jnp
adc
mov
rorl
or
adc
jb
fabs
push
dec
loop
mov
fs
mov
hlt
out
jo
sub
loopne
rcrl
shrl
add
repnz
adcl
aam
and
adc
cld
out
scas
adc
inc
mov
je
call
sbb
xchg
dec
xor
jnp
les
out
add
push
ret
cs
jno
sti
pop
popa
inc
leave
adc
pop
push
dec
mov
push
int3
mov
mull
xchg
and
sbb
jb
stc
loope
adc
lcall
or
lods
xchg
mov
mov
push
inc
pop
push
in
add
mov
ret
dec
and
or
out
push
adc
adc
push
pop
repz
or
stos
dec
aad
les
lret
push
sub
shll
xor
test
dec
mov
push
lret
sbb
shll
xor
test
mov
outsl
popf
clc
into
les
scas
cmp
adc
andl
xor
add
dec
imul
pshufw
or
stos
test
ds
mov
add
daa
test
addb
xor
xlat
and
sbb
mov
hlt
sub
out
test
dec
inc
push
fs
loope
push
addb
inc
mov
add
push
idivb
sbb
push
mov
into
in
pop
adc
xchg
cs
adc
mov
and
xor
addb
pop
popa
icebp
add
xchg
xor
push
jecxz
xchg
mov
mov
roll
ds
loopne
out
fists
pop
fs
xchg
addl
pop
mov
shrl
cwtl
push
inc
jb
adc
cmp
add
mov
mov
xchg
push
ret
js
xchg
outsb
inc
push
pop
ja
mov
push
inc
or
rcrb
push
scas
jb
mov
out
add
xchg
out
loope
push
cs
fucomp
sbb
ret
daa
into
arpl
jno
dec
shrl
ficompl
sub
add
ficoml
pop
loop
mov
and
jb
mov
fs
mov
stc
mov
and
in
loope
pop
xlat
xchg
jle
bound
les
mov
loope
jae
shll
adc
repz
je
sub
and
jns
cmp
bound
into
adc
sar
sub
and
fdiv
xor
imul
movsb
gs
std
pop
dec
out
push
popf
in
imul
mov
sti
mov
jle
adc
popa
sub
xor
xorb
inc
xchg
xorl
lahf
push
pop
xlat
add
popa
jo
popa
xorl
sahf
jge
shll
test
fcompl
stos
test
daa
jecxz
dec
dec
rcrl
mov
ficoml
xchg
leave
fsubr
out
outsb
fwait
aam
in
out
test
xlat
pop
jns
jle
in
jno
mov
jo
dec
test
push
aam
xorl
or
call
mov
xor
les
push
and
mov
xchg
push
pushf
xchg
adc
add
jle
adc
popa
shrb
xlat
int3
cmc
sti
popa
scas
xor
push
negl
push
div
pusha
and
out
cmpsl
loope
sub
ficoms
mov
stos
bound
cs
sub
push
sub
shl
add
das
jno
or
mov
mov
sarl
adc
sbb
les
stc
test
xchg
mov
or
cmp
mov
adcl
ror
push
outsb
mov
jbe
mov
out
repz
shll
pop
mov
jmp
push
sub
jecxz
fsts
inc
lcall
push
repz
and
mov
pop
jae
xchg
lock
xchg
mull
push
xchg
fimuls
aam
dec
inc
arpl
out
push
les
jle
rcrl
push
es
dec
xor
xor
jecxz
xchg
inc
insb
xor
push
adc
push
mov
dec
jle,pt
fdivr
call
lcall
dec
xor
out
sbb
inc
push
xchg
sub
shlb
test
ja
mov
mov
andl
push
les
subb
mov
cmc
adc
sub
mov
dec
jno
inc
in
xchg
into
jns
and
cmp
jge
mov
les
xor
sub
es
mov
lods
subb
dec
cmp
mul
xor
shlb
mov
dec
push
inc
dec
lret
das
add
out
push
mov
out
test
lret
inc
add
sub
add
dec
test
fstpl
inc
cmc
leave
mov
xchg
out
xor
cltd
push
mov
push
icebp
imul
jae
push
movsl
xchg
inc
dec
pop
inc
into
push
stos
xchg
je
mov
mov
sub
xor
imull
imul
mull
shlb
and
mov
and
mov
lea
sub
inc
jno
out
repz
jb
push
xor
inc
clc
adcb
mov
adc
cmpsl
mov
pusha
js
cmp
add
rcll
push
xlat
rorl
add
loope
mov
shrl
and
sub
jge
xlat
mov
pop
mov
loop
cmpsl
mov
fistl
jmp
jle
cmc
cmpsl
push
arpl
push
mov
mov
roll
lret
je
adc
bound
push
lea
mov
rcrb
clc
stos
pushf
mov
scas
inc
ret
sub
repnz
shll
ds
out
push
inc
or
scas
mov
mov
inc
lods
jecxz
pop
fcmovnbe
jmp
popa
les
xlat
fsub
inc
inc
ds
pop
out
adc
and
xor
iret
outsb
ficoml
cli
or
push
repz
pop
ds
shl
imul
xor
dec
push
ljmp
ret
xor
repz
xor
jns
imul
adc
rcrb
repz
sub
sti
pop
inc
mov
xor
dec
je
inc
dec
scas
test
gs
sahf
mov
nop
mov
rcll
adc
fs
popa
lcall
mov
xchg
jecxz
das
adc
int3
ljmp
testl
shrl
dec
push
mov
jge
out
push
xchg
xor
andl
add
inc
arpl
xchg
jb
roll
xchg
dec
push
xor
xchg
cmp
cmc
daa
and
mov
jl
daa
add
jle,pt
pushf
and
push
add
popa
fld
out
faddl
repz
mov
dec
push
mov
mov
adc
mov
hlt
lret
adc
xlat
xor
adc
jg
je
jecxz
jmp
or
lret
adc
push
repz
mov
outsl
js
add
inc
icebp
cmp
addl
xor
inc
icebp
xor
out
adc
adc
mov
and
dec
xlat
dec
inc
and
mov
bound
fwait
repnz
mov
outsb
xlat
pushf
mov
in
repnz
je
push
push
xor
push
add
adc
or
fdivs
add
xchg
mov
jbe
xor
inc
imul
dec
cmpsl
push
jno
inc
jb
adc
repz
add
jns
adc
sbb
cmpsl
arpl
push
sbb
out
push
adcl
cmpsl
and
ss
push
and
imul
mov
inc
loope
neg
fnstsw
ret
xchg
push
xchg
jp
jae
jne
andb
push
ret
pop
clc
mov
jg
insl
nop
xlat
cmp
fdiv
mov
mov
repnz
jo
mov
cmpsl
adc
bound
or
sub
mov
adc
xlat
scas
adc
jb
daa
push
add
xor
push
pop
pop
sbb
addl
adc
les
xorl
inc
shll
mov
jecxz
dec
cmpsb
xor
fsub
shrl
jae
cmc
repz
into
mov
popa
jb
ds
test
adc
pop
rcll
adc
or
add
mov
push
into
or
loope
inc
mov
mov
sbb
mov
ljmp
mov
fimull
and
sbb
push
cmp
push
test
fstpt
or
adc
cmp
pop
roll
push
ds
mov
push
imul
jb
add
rcrl
push
xchg
mov
xlat
jbe
push
mov
icebp
subb
pushf
inc
push
fs
push
je
add
xor
mov
dec
notl
xchg
je
loop
jecxz
and
jb
add
xorl
out
jecxz
add
add
mov
mov
inc
mov
inc
in
stos
jbe
push
pop
mov
add
cmc
and
pop
inc
and
xor
push
in
daa
and
add
or
cltd
ret
daa
adc
inc
mov
cld
inc
popa
je
xor
in
xor
mov
test
or
fdivrs
xchg
xor
mov
cmc
pop
jg
cmpl
or
xor
push
jb
adc
loope
rcl
cmpsl
jecxz
daa
mov
mov
and
je
or
and
fisubrl
in
mov
push
insb
xchg
in
mov
push
aam
adc
or
pop
popa
push
adc
out
fcoml
jo
in
mov
and
inc
mov
out
push
shlb
repnz
sub
xchg
or
xor
fwait
stos
mov
xchg
mov
push
xchg
push
dec
mov
xor
mov
sarb
adc
popa
cmp
mov
out
sbb
adc
adc
adc
les
daa
pop
roll
push
arpl
call
or
add
adc
out
xor
pop
lods
xchg
mov
jne
mov
and
push
xchg
adc
mov
les
xchg
icebp
in
jecxz
add
fs
and
dec
jge,pt
and
daa
aad
test
mov
inc
jne
xor
roll
jae
popa
inc
arpl
in
test
inc
xor
adc
shll
sub
add
mov
dec
pop
sub
notl
sub
leave
mov
mov
stos
mov
push
rclb
fisubrs
sbb
leave
mov
jne
mov
and
adc
push
loop
sarl
dec
fs
cwtl
outsb
ds
inc
xchg
mov
pop
mov
jae
popa
fs
aam
push
pop
jle
fdivs
inc
sbb
inc
inc
push
fiaddl
repz
out
jb
inc
xor
bound
subl
inc
ret
jp
insb
imul
inc
hlt
mov
xchg
loope
aam
shlb
stos
popa
xchg
push
mov
sbb
inc
shll
mov
popf
mov
outsl
mov
push
addr16
sbb
loope
cmp
ds
dec
mov
pop
jno
push
adc
cltd
mov
fs
cmc
push
adc
dec
mov
jle
shr
inc
out
mov
push
mov
lods
add
adc
mov
sysexit
sub
shlb
inc
je
out
adc
scas
add
in
roll
addr16
sub
add
out
push
fsubr
cwtl
xor
jecxz
loope
fs
mov
lea
push
dec
mov
cs
push
adc
lock
inc
push
in
ficoml
jle
sub
rcr
pop
pop
ds
xor
hlt
push
into
loope
sub
les
or
shr
add
mov
add
es
jge
arpl
mov
inc
divb
inc
ds
and
inc
mov
incl
jle
mov
hlt
pop
cmc
jae
mov
ret
xor
xor
push
pop
sub
mov
mov
adc
push
repz
jmp
inc
ficoml
push
cmp
popa
idivb
clc
les
xor
xlat
pop
or
aaa
repz
adcb
xor
cmp
adc
xlat
cwtl
outsb
pushf
ds
mov
sub
inc
icebp
andl
push
jge
inc
sub
jmp
les
test
loope
ds
mov
js
mov
mov
stos
cltd
xor
je
and
cltd
dec
dec
inc
fcmovu
into
jmp
shlb
jmp
leave
and
scas
push
inc
movsb
shl
xlat
fmul
mov
addr16
xor
aas
repnz
push
shrl
pop
sarb
mov
inc
sbb
sbb
popa
jle
push
xor
push
jle
mov
add
into
dec
push
mov
jno
xor
jl
subl
adc
pop
push
cmpsl
mov
mov
inc
xor
add
bound
dec
sbb
shr
adc
adc
and
je
add
sbb
sbb
jl
add
push
xlat
movsb
addl
push
mov
cmp
jle
ljmp
mov
xor
scas
out
jl
dec
push
popa
lods
mov
inc
mov
add
fldcw
nop
psrld
adc
xor
mov
add
mov
aam
mov
sarl
mov
push
cmc
mov
xlat
daa
repnz
les
test
or
test
repnz
icebp
ret
or
sbb
push
adc
xor
ret
inc
orb
mov
jle
jmp
push
mov
xlat
sarl
jle
jae
shr
rcll
shll
repz
dec
dec
mov
jge
stc
dec
jno
mov
out
adc
push
push
cmpl
or
daa
roll
jbe
ds
mov
mov
mov
pusha
mov
jae
adc
andb
mov
pop
xchg
dec
push
or
or
or
mov
add
cmp
mov
inc
shll
icebp
je
and
jp
lds
push
cs
out
rcr
inc
aam
adc
sbb
in
out
and
pop
jb
pop
shll
xorl
jno
xor
in
jmp
push
xor
and
push
lret
into
push
dec
dec
test
repz
mov
pop
mov
inc
rcll
inc
out
add
xor
cmpsl
movsb
std
sbb
andl
mov
dec
enter
ret
push
jle
das
cwtl
scas
and
pop
loopne
push
xor
cltd
mov
push
ffree
lret
push
mov
fs
sub
mov
iret
xor
pop
pop
mov
adc
cmp
mov
pop
cmc
mov
jmp
jge
andb
lods
aam
loope
add
and
jmp
jb
outsb
test
je
mov
jle
xor
mov
jno
dec
xlat
cli
mov
cld
cmp
mull
loope
dec
push
add
pop
lcall
dec
scas
and
andl
mov
inc
mov
sbb
lret
lock
popa
repz
push
push
jle
or
test
or
out
xlat
xchg
dec
xchg
mov
xchg
dec
and
jbe
mov
mov
inc
xlat
les
push
rol
add
inc
ret
pop
into
faddl
xor
xchg
sbb
mov
icebp
ss
rolb
jno
mov
jecxz
mov
pop
jmp
daa
je
test
cld
cmpsb
outsl
push
dec
push
shll
fs
push
adc
mov
mov
jns
arpl
pop
adc
add
push
scas
je
add
lcall
ror
shl
pop
lock
and
xlat
add
repnz
cli
clc
jl
ds
ljmp
inc
xor
roll
mov
cli
jg
xor
mov
je
push
push
xor
ret
jecxz
adc
cli
outsb
push
cmp
push
and
xor
movaps
out
push
mov
push
bound
xor
sub
ds
dec
out
popa
xchg
push
mov
fsubl
out
push
adc
xor
andl
xor
jecxz
int
mov
push
xchg
mov
sub
push
lods
mov
pop
fmuls
shl
mov
adc
xchg
mov
fidivs
ret
imul
jl
popa
inc
add
mov
les
add
or
cmpsb
xor
fdiv
ljmp
jle
cmp
loop
and
jo
push
into
rorl
outsl
mov
lock
clc
mov
shll
fs
repz
cwtl
in
mov
pop
cmpsb
mov
xchg
mov
addr16
lret
stc
xorl
pop
in
xor
cmp
popa
rorl
push
ja
mov
jns
sub
push
out
addl
sbb
push
hlt
addb
mov
jno
shrb
popa
sbb
push
dec
pop
xor
inc
push
std
xor
cmp
test
jae
pop
mov
dec
jo
push
fs
inc
add
xchg
mov
and
nop
ret
out
mov
jb
add
inc
into
loopne
jns
jno
mov
ja
mov
shld
inc
sbbl
add
add
or
cmp
mov
les
sub
movsl
adc
push
outsb
mov
mov
adc
or
jno
xchg
icebp
mov
loope
shrl
jae
and
sub
adc
cli
outsb
fs
and
outsb
mov
pop
icebp
jno
fs
dec
dec
and
inc
les
sub
shl
sbbl
add
cmc
xor
loop
dec
mov
mov
jae
pop
ficoml
cmc
jl
cmp
sti
inc
inc
icebp
add
xor
lcall
icebp
out
mov
mov
xor
inc
or
aam
push
push
aam
xor
jb
icebp
and
insl
out
ja
and
mov
sbb
adc
ljmp
lock
outsb
and
add
movsl
rclb
loope
scas
push
popa
xchg
mov
arpl
pop
in
and
push
out
out
popa
loope
mov
xchg
push
cli
push
ret
pop
fcompl
mov
mov
adc
push
arpl
int
push
dec
adc
mov
jecxz
mov
scas
dec
and
jns
popa
movsb
xchg
dec
push
inc
cmc
hlt
adc
push
mov
dec
mov
loop
icebp
mov
adc
out
push
jecxz,pt
adcl
sub
cmp
push
sbb
mov
and
jge
xor
dec
leave
mov
add
xlat
jnp
xlat
aam
andl
mov
cmp
push
ss
inc
sahf
out
out
shll
shll
cmp
fdivp
mov
lods
xor
roll
xorl
jmp
and
shr
adc
and
les
xor
xchg
mov
or
lods
xor
ret
push
shll
mov
repz
into
out
push
dec
and
xor
xlat
ret
clc
and
jae
repz
add
inc
inc
mov
xchg
jle
aas
insl
xor
sub
ficoms
push
jecxz
outsb
ret
dec
and
shl
arpl
roll
fwait
xchg
call
xchg
mov
add
inc
into
jle
mov
out
xchg
in
xor
mov
cli
loopne
jecxz
cmc
xlat
sub
mov
xchg
shrl
mov
push
xor
jmp
mov
fs
adcl
into
jb
and
les
and
jecxz
or
gs
lret
add
inc
xor
outsb
inc
arpl
je
xor
movsl
in
jb
andb
adc
push
push
fisubrl
jl
dec
xor
inc
push
lock
add
xor
push
fsubrs
mov
cmpsl
jno
dec
outsl
inc
pop
lock
dec
and
cs
mov
test
jno
outsb
je
add
add
out
jno
mov
inc
into
mov
in
fs
adc
jp
out
and
mov
and
adc
mov
push
stos
push
out
movsb
and
inc
push
rcll
in
loopne
inc
xor
pushf
pop
dec
aam
adc
mov
sub
dec
test
aam
out
dec
xchg
adc
push
loope
bound
mov
adcl
sar
adc
push
adc
into
push
out
add
je
popa
imul
fs
adc
ret
xchg
mov
and
sub
fisubrs
adcb
dec
xchg
add
inc
jb
and
and
rolb
movb
mov
jp
fistl
cmp
push
cwtl
lods
clc
push
jl
test
jmp
arpl
movb
dec
and
and
jmp
adc
jp
adc
cmp
add
and
inc
push
xchg
fdivl
jmp
add
pop
adc
xchg
aaa
ja
mov
rcll
loope
push
inc
into
or
out
and
jno
push
xchg
mov
mov
in
jle
jecxz
and
into
cs
insl
test
inc
bound
mov
js
push
adc
xor
ljmp
lahf
jo
xor
mov
popa
ja
xchg
loope
rclb
orl
adc
test
and
arpl
mov
aas
xchg
and
popa
addr16
clc
out
divl
arpl
scas
icebp
les
andb
sti
and
xchg
pushl
pop
adc
into
pusha
mov
mov
mov
mov
dec
or
add
ret
sahf
xchg
jno
jecxz
and
sbb
jg
xchg
pop
jle
sbb
mov
repz
adc
lcall
mov
mov
mov
je
add
ret
add
shl
sbb
out
mov
add
inc
mov
mov
sarb
aam
dec
push
jecxz
test
cs
hlt
push
sub
dec
out
pop
js
pop
add
and
mov
add
ret
out
lahf
jecxz
dec
ss
add
jge
les
loop
inc
xor
insl
out
je
push
mov
cwtl
push
inc
repz
popa
jb
pop
cs
fcmovnu
jle
mov
mov
mov
rorl
dec
mov
call
ds
or
dec
xchg
xor
cwtl
je
sar
dec
ret
icebp
push
out
repz
mov
fs
out
xchg
loop
adc
andnps
push
dec
loop
mov
popa
xchg
jno
outsb
push
andl
xor
out
addr16
imul
push
cltd
adc
xor
pop
xor
xor
rcrl
jle
out
and
shlb
mov
leave
xor
adc
rcll
xor
out
mov
sub
add
sub
add
adc
jb
cs
mov
sbb
jmp
lret
imul
adc
addl
pop
jecxz
test
repnz
push
pop
xlat
divl
xchg
adc
push
std
orl
adc
je
shrl
outsb
and
cmp
push
loope
cmpsl
dec
mov
dec
push
fwait
adcl
hlt
or
icebp
pop
fldt
fs
inc
xor
repnz
jg
sbb
dec
jecxz,pt
mov
lods
lods
jb
xor
dec
ret
shl
jle
xchg
mov
xchg
adc
and
mov
adc
pop
rclb
dec
loope
add
jo
jle
push
adc
ret
add
das
mov
out
inc
xorl
sarb
int
shrl
loop
dec
mov
xchg
push
js
jb
cmp
mov
rorl
add
inc
rcll
mov
inc
jge
mov
out
cli
xchg
je
xor
mov
push
and
int
mov
mov
cmpsb
add
fs
idiv
push
jle
popa
mov
ds
xchg
pop
mov
les
mov
rep
push
inc
imul
add
loope
mov
cltd
in
fsubl
test
outsb
or
inc
push
cmpsl
xor
xor
inc
out
in
and
fisubrs
fdivrs
push
bound
and
hlt
out
sub
data16
mov
rep
shr
ror
subb
fs
push
inc
cmpsl
adc
xchg
cs
pop
sahf
imul
jne
inc
cmp
adc
aam
jle
sub
sub
jl
popa
loope
sahf
xor
and
or
xchg
dec
cmpsl
mov
push
rcrl
orb
push
jbe
outsl
xchg
and
mov
out
mov
jecxz
shll
lods
lods
and
hlt
ds
mov
mov
push
hlt
ret
push
ljmp
xchg
inc
add
loope
arpl
xchg
nop
push
xorl
and
into
dec
call
xchg
push
mov
dec
xor
dec
mov
aad
jae
xor
inc
les
outsb
push
hlt
vpabsd
into
fdivs
jp
jb
sar
inc
cmp
insb
bound
outsb
jo
add
xlat
push
jg
inc
jb
cmp
lods
sbb
lods
push
or
dec
adc
mov
bound
dec
adc
ljmp
test
inc
les
and
je
add
rcll
adc
rcl
jb
push
call
xchg
mov
mov
lret
les
mov
movsb
loope
lahf
cmpsl
into
in
cmpsl
idiv
popa
mov
movl
dec
lahf
les
mov
icebp
fadd
aam
jae
xchg
mov
add
push
xor
xchg
push
popa
jae
mov
pop
arpl
std
pop
bound
shrl
inc
add
mov
push
inc
ss
add
push
inc
outsb
cli
loop
loope,pn
les
jmp
xchg
in
sbb
inc
xor
fstpl
outsb
xlat
ret
push
hlt
adc
jno
sub
xor
adc
xor
je
clc
out
lcall
fs
xor
dec
xchg
dec
adc
push
adc
mov
adc
push
xchg
or
xchg
mov
adc
lods
popa
sbb
out
imul
dec
stc
and
push
jmp
mov
scas
je
cmpsl
xlat
cmpsl
mov
mov
xchg
cs
push
mov
mov
inc
jle
cmc
iret
cmp
or
leave
addl
out
fbld
jae
dec
out
jo
jnp
loopne
cmp
shll
jae
out
popa
jo
jo
jo
adc
jb
mov
mov
shll
cwtl
or
mov
fs
sbb
sbb
rcr
pop
cmp
cli
dec
stos
icebp
hlt
movsl
repnz
jb
das
pop
rcl
pop
inc
sub
addr16
mov
adc
xchg
data16
adc
repz
and
mov
scas
loopne
icebp
inc
outsb
push
mov
xchg
push
mov
fs
jo
sub
inc
xlat
outsb
out
jecxz
mov
mov
push
sub
faddl
mov
mov
repz
jmp
mov
adcb
ds
les
adc
and
mov
cld
adc
xor
push
sub
inc
cmpsb
lret
push
into
out
nop
pop
jmp
pop
fs
mov
sbb
popf
mov
xchg
mov
jecxz
pop
jb
xor
cld
arpl
and
and
jns
inc
add
out
cmp
lret
and
bound
sbb
divb
xor
push
int3
dec
xchg
xor
loop
xorb
rorl
aad
inc
aas
mov
and
mov
ror
push
and
sbb
adc
mov
arpl
inc
nop
mov
loope
mov
shll
inc
inc
sub
cmpsl
arpl
xchg
test
push
xchg
ret
mov
lock
orb
lret
loopne
add
sbb
ds
or
sbb
inc
jns
xchg
je
les
inc
push
ret
into
in
dec
stos
mov
bound
mov
pop
xlat
dec
xor
rcrl
and
jb
xorl
in
imul
xor
dec
ja
pop
cmp
mov
and
outsb
push
test
stos
mov
adc
cwtl
xchg
sub
lcall
scas
fisubs
fs
adc
pop
adc
adc
ret
cmpsb
jns
sub
jle
sbbl
sub
and
dec
inc
and
loopne
add
or
add
or
inc
add
adc
xchg
shll
sub
mov
and
adc
mov
adc
xchg
jmp
outsb
jo
div
out
out
push
dec
dec
mov
cs
jge
xor
or
shll
xor
dec
adcl
and
mov
mov
xor
cld
fdivp
jno
add
notl
add
ret
flds
mov
daa
xor
adc
jno
add
jns
and
adc
cs
out
test
and
outsb
int3
mov
jae
push
and
rclb
sub
sub
jge
stc
fdivs
cs
daa
sahf
int
xchg
xchg
arpl
xchg
nop
mov
push
mov
in
mov
addl
jp
xchg
sbb
movsb
jno
mov
pop
dec
lock
rcrl
mov
into
mov
xor
jle
call
ret
and
push
push
arpl
bound
and
adc
jno
dec
roll
xchg
jecxz
lock
outsb
add
pop
stc
adc
inc
out
shll
into
mov
jb
push
jnp
push
mov
mov
loop
add
mov
or
jb
jae
std
jecxz
inc
or
or
addl
xchg
and
cmp
sarl
fnsave
testl
sbb
in
stos
loopne
xchg
adc
sbb
sahf
or
imul
or
xchg
cmp
mov
add
xor
jo
out
lret
push
dec
or
and
lcall
jb
dec
push
push
cmp
push
push
jle
out
std
ret
test
pop
ret
fs
cs
popa
arpl
mov
rol
sub
ds
ret
sub
clc
shrl
and
popf
sub
dec
orb
or
addl
adc
sub
adc
repz
pop
adc
in
mov
rcrb
push
push
mov
inc
inc
addl
mov
lods
jle
pop
or
repnz
xor
mov
mov
push
out
pop
cmp
xor
jle
rclb
jge
mov
hlt
outsl
jcxz
int3
and
repz
ljmp
add
cmp
adc
jo
in
pop
hlt
into
out
cmpsl
mov
pop
sub
cwtl
rcl
js
cs
and
dec
call
lret
mov
lea
jle
adc
mov
orl
xorb
jb
mov
rcrl
jae
dec
inc
pop
inc
mov
sub
insl
xchg
leave
mov
lds
and
push
mov
orb
cltd
scas
into
popa
sub
lcall
push
push
shll
and
jecxz
jle
movsl
fs
rcll
dec
push
xor
xor
cmpsl
popa
inc
cld
call
mov
jb
out
or
call
dec
mov
into
jno
popa
and
lock
sarl
sub
jecxz
lock
inc
jmp
xor
or
dec
mov
mov
xor
xorl
sub
aas
andl
into
scas
add
sub
insl
cmp
sub
jae,pt
adc
xorl
mov
push
add
xchg
outsb
push
mov
add
arpl
jmp
cwtl
inc
mov
push
arpl
ret
push
add
mov
inc
ret
pop
dec
xchg
xor
into
ret
pusha
inc
adc
fildll
jmp
loope
shl
shll
adc
inc
push
fcmovnb
xchg
les
ljmp
xchg
shll
sahf
inc
ljmp
dec
mov
xlat
addr16
push
pop
out
bound
adc
xchg
push
mov
cs
divl
outsb
mov
or
xchg
bound
cmc
mov
mov
or
push
adc
mov
mov
rcll
je
popf
mov
push
push
cmpsl
adc
gs
iret
fcmove
out
push
fdivrs
cmc
push
mov
mov
rcrl
lds
and
cmp
dec
xor
inc
jne
push
shll
mov
and
je
mov
dec
in
fidivrl
cmc
adc
rcl
pop
imul
adc
jb
mov
fstl
pop
fmuls
repz
push
mov
push
sub
mov
jno
loope
sub
fs
sub
or
pushf
cmp
popa
hlt
jne,pn
and
mov
ds
std
mov
push
clc
adc
mov
shr
dec
adc
inc
xchg
fwait
add
add
out
add
fs
mov
mov
push
mov
pop
bound
jb
jp
inc
mov
xor
mov
and
jle
subb
dec
inc
ja
push
sub
in
dec
inc
cs
xor
repz
ds
inc
xor
mov
inc
jle
cmpsl
adc
lds
adc
push
mov
push
in
sbb
push
leave
inc
testl
xor
lods
inc
jecxz
mov
popa
into
lcall
mov
shl
inc
jne
pop
sub
andb
test
bound
outsl
fs
adc
icebp
in
addl
cmpsb
shll
imul
xor
inc
out
push
pop
mov
adc
mov
xor
push
jnp
pushf
lds
inc
fiadds
and
mov
lods
cmp
jno
scas
sub
pop
adc
icebp
xlat
cmc
cmp
je
rcll
adc
ror
push
jns
ret
mov
xor
subl
jecxz
xor
jae
cs
daa
loope
fisubs
je
adc
xor
negb
mov
call
xchg
fidivs
mov
mov
cs
cld
inc
mov
inc
inc
push
jle
ljmp
adc
outsb
xor
in
push
push
jnp
or
adc
xchg
cmp
test
sub
movsl
insl
loope
add
and
pop
cmpsl
mov
push
push
sub
insl
addl
mov
add
xor
adc
adc
mov
call
push
inc
push
adc
adc
jecxz
rolb
fldt
mov
jle
je
les
add
sbb
cs
push
adc
repz
adc
into
add
cld
arpl
push
inc
xchg
shl
jae
sbb
mov
sub
pop
xchg
mov
adc
xchg
fwait
xchg
pop
cli
xor
mov
jae
mov
sub
outsl
shrb
add
and
push
jle
inc
adcl
repz
or
jbe
fs
xor
fstpl
and
andl
movsl
je
sub
mov
adc
out
inc
ret
js
sbb
sbb
scas
inc
jle
in
push
sbb
in
inc
fs
ret
cmp
cli
mov
repz
or
pop
adc
jb
ret
xchg
hlt
add
bound
mov
jo
popa
cmp
push
inc
dec
ljmp
lcall
insb
hlt
rcrb
xchg
cmc
repz
imul
xor
cs
xchg
push
mov
xchg
push
outsb
mov
lds
add
shl
sbbl
xchg
imul
leave
mov
cwtl
mov
shlb
movaps
mov
inc
jle
jg
aaa
rorl
mov
push
lods
mov
call
cld
cmc
popa
mov
rorl
jne
dec
xchg
ss
jmp
adc
push
push
out
xor
daa
rcl
mov
sub
push
cmpsb
mov
xchg
xchg
mov
push
rcrl
jno
das
cltd
shr
dec
popa
adcl
pop
add
jg
cs
movsl
xor
jge
add
pop
cs
in
pop
cmp
mull
push
out
scas
adc
mov
push
vxorps
mov
mov
mov
xlat
in
fdivs
out
jmp
test
push
test
xor
jl
xchg
adc
sbbl
bound
cs
pop
jbe
xchg
ja
push
hlt
loope
and
and
sub
inc
or
cmc
adc
and
adc
adc
or
out
pusha
iret
or
adc
pop
ret
adc
scas
mov
push
add
andb
sbbl
loope
idiv
push
and
sub
fimuls
jb
inc
loope
idivl
bound
shlb
sbb
mov
jo
rol
aam
data16
xlat
je
push
push
loope
aam
mov
mov
idiv
pop
push
cmp
xor
push
push
and
popa
mov
mov
xchg
imul
dec
repz
daa
shll
cld
inc
add
and
popa
out
jge
xchg
mov
cmp
add
arpl
popa
dec
and
dec
sbb
mov
jbe
mov
mov
fs
out
inc
cs
out
and
inc
push
add
inc
mov
sbb
jge
rcl
adc
mov
pop
jge
pop
push
sbbb
push
xchg
jb
cltd
inc
mov
loope
mov
jg
mov
test
mov
hlt
je
mov
mov
mov
mov
shl
push
shll
mov
inc
scas
loopne
or
and
bound
repz
push
xlat
xor
pusha
inc
and
jmp
shll
xorl
arpl
add
pop
mov
add
or
inc
daa
loopne
adc
mov
and
je
cmpsl
mov
outsb
xor
and
sub
enter
push
icebp
xor
add
adc
lcall
xor
jge
jbe
scas
jmp
sbb
mov
adc
xchg
lds
loope
xchg
mov
sub
mov
insl
or
xorl
xchg
cli
mov
lcall
add
out
shll
call
inc
insb
xchg
cs
bound
out
lret
mov
inc
adc
cmpsl
mov
xor
inc
inc
mov
add
fbld
jle
invd
fs
inc
shll
outsl
lea
pop
add
bound
inc
jb
jo
dec
mov
xchg
test
dec
xlat
inc
faddl
mov
das
pop
ja
sbbl
jmp
mov
daa
cmpsb
xchg
sub
inc
icebp
sub
lret
mov
add
dec
std
shlb
fstpl
sub
pushf
mov
data16
push
push
inc
inc
jno
jno
in
add
icebp
and
xchg
mov
and
in
inc
sub
ficoml
adc
aaa
in
push
xchg
add
inc
lods
rorl
or
ljmp
icebp
push
sbb
cmp
and
fnstcw
bound
les
jle
repz
call
stos
cmp
je
mov
xlat
xlat
jae
inc
ret
dec
jmp
push
pop
and
sub
rorl
mov
stos
add
cmpsl
jecxz
pop
pop
mov
cmpsb
repz
adcl
into
jecxz
std
mov
add
mov
out
out
addr16
sub
arpl
mov
fisubs
ret
jecxz
rolb
lock
repz
mov
xor
jecxz
mov
jae
shll
imul
pop
cmp
mov
ret
xor
arpl
inc
loope
inc
push
cmp
and
popa
xor
outsb
dec
sahf
in
daa
xchg
into
enter
mov
add
xor
pop
ret
in
cmpsl
jns
adc
or
outsb
fmul
cmp
mov
pop
andb
frstor
adc
xchg
notl
cs
je
cmp
ja
mov
daa
add
stos
inc
into
sarl
adc
nop
fs
imul
cs
mov
jecxz
decl
mov
loope
pop
daa
xor
xchg
adc
dec
inc
inc
push
leave
movsl
dec
ja
xchg
mov
add
into
les
xchg
jb
adc
outsb
outsb
fwait
addl
sub
mov
jae
xor
and
arpl
outsl
dec
mov
pop
xlat
add
pop
shl
dec
rol
test
fnstenv
mov
mov
out
icebp
mov
add
jno
and
sbb
cli
sub
imul
push
xlat
or
inc
mov
mov
mov
and
xor
push
adc
sbb
mov
out
enter
mov
mov
in
outsl
mov
push
roll
ds
push
and
push
das
sahf
idiv
dec
roll
bound
icebp
addr16
push
cld
adc
andl
aam
icebp
arpl
fs
jns
xor
sub
les
push
clc
or
into
out
jno
push
or
ret
pop
mov
push
add
stos
rolb
mov
cmp
xor
mov
scas
pushf
push
test
ljmp
test
add
imul
jge
sbb
jns
mov
add
jns
mov
xchg
inc
xchg
cwtl
les
dec
adcb
ljmp
je
andl
xlat
xchg
dec
cli
movsb
fucomi
xlat
call
and
cmc
inc
push
jae
scas
loop
fcoml
popa
mov
inc
and
inc
fs
in
popf
xor
push
jno
inc
rolb
jecxz
dec
shr
movsl
out
add
je
mov
jnp
mov
inc
mov
daa
out
addr16
out
mul
sbb
jmp
xor
into
and
xlat
mov
repz
xor
jge
mov
mov
mov
out
fcoml
pop
xchg
sbb
sub
jle,pn
add
cltd
xor
mov
mov
xchg
xlat
jo
nop
and
into
jno
andl
xchg
and
je
adc
popa
mov
jb
lods
shll
jmp
loope
push
add
je
shll
inc
shlb
icebp
or
inc
imulb
mov
lret
jge
les
sub
mov
out
fiaddl
xor
icebp
inc
andl
popa
loop
add
les
mov
lea
iret
xchg
sbbl
and
in
adc
cs
jno
ja
je
aam
and
or
out
inc
pop
adc
dec
pop
add
push
mov
jl
and
mov
dec
dec
ret
cs
jg
mov
je
jae
enter
or
out
icebp
mov
mov
add
inc
xor
ret
jle
mov
rol
add
arpl
mov
mov
mov
jb
in
rcrl
popa
push
bound
daa
bound
push
xchg
or
adc
jg
fs
pop
in
jae
pop
repz
inc
or
and
or
dec
xlat
cmp
cmp
cmp
inc
movsb
outsb
xor
mov
std
xor
popf
jmp
push
pop
add
hlt
outsb
or
das
xchg
xchg
mov
and
fstpl
inc
loop
ret
push
mov
xchg
movsl
scas
or
mov
pop
outsb
mov
call
xor
mov
pop
outsb
scas
leave
ja
push
out
xor
push
mov
shll
scas
mov
shlb
mov
insb
insl
outsb
jae
push
pop
mov
push
mull
inc
addr16
lret
adc
mov
mov
rclb
out
and
into
mov
decl
sub
mov
mov
cwtl
adc
or
stos
out
jno
xor
into
divb
jmp
push
into
subb
sbb
out
outsb
add
out
add
pop
inc
mov
jecxz
push
mov
orl
or
cs
add
inc
push
add
divb
mov
inc
inc
dec
lods
jl
adc
repz
loop
and
aas
dec
pop
push
push
shlb
dec
es
or
stos
ljmp
mov
sub
cmp
call
ljmp
or
sub
or
decl
jnp
clc
mov
jmp
mov
daa
icebp
dec
out
xorb
xor
dec
push
jmp
popa
pop
test
shl
fucomp
sub
sar
idiv
out
jb
jae
fs
inc
adc
andl
add
cmp
scas
arpl
cs
repz
dec
xlat
mov
mov
shll
xor
fsubs
fwait
add
jmp
push
xchg
and
xchg
xchg
out
fwait
fs
hlt
xchg
pop
xchg
cmp
jo
xchg
add
adc
popa
cmp
xor
mov
fwait
addr16
jecxz
out
pop
je
insb
sub
ffree
adc
xor
pop
jo
ja
adc
leave
dec
push
and
ds
sub
xor
mov
data16
xlat
inc
xor
outsl
outsl
push
loopne
shr
xor
je
jb
fs
jmp
orl
jae
jno
push
lods
hlt
sub
mov
push
sar
mov
ret
scas
sahf
add
push
xor
inc
push
xchg
pusha
cmc
shll
xchg
and
push
imul
arpl
loope
leave
testl
dec
and
inc
mov
fiaddl
adc
dec
mov
or
aas
mov
jb
lahf
push
mov
xchg
cmpsb
or
dec
xor
lret
pop
mov
sub
ja
imul
shll
sbb
adc
inc
mov
imul
sub
cmpb
out
les
xchg
push
jne
xchg
loop
add
lock
push
into
dec
xor
inc
sti
out
cmp
orb
mov
cwtl
inc
xchg
or
pusha
push
test
xlat
mov
shrl
andl
dec
out
int
xor
sub
jge
and
dec
mov
dec
lret
push
dec
out
cmpb
sti
adc
std
sub
jge
xchg
xlat
lock
push
ret
aam
mov
bound
sub
dec
mov
inc
cs
xor
adc
in
in
xor
mov
jp
mov
inc
scas
push
popa
shll
jecxz
adc
mov
or
xor
cs
mov
pop
inc
add
cmp
jbe
loop
push
orl
jo
sahf
xchg
mov
or
xlat
jno
loope
mov
mov
and
add
movsl
push
shll
mov
pop
out
cli
js
loope
test
dec
roll
mov
mov
por
test
ficompl
dec
sbb
xor
mov
and
cmp
inc
sub
pop
icebp
jbe
add
sbbl
addr16
adc
leave
adc
sub
cmpsb
lret
and
out
push
inc
stc
pop
std
push
cmp
mov
jg
fwait
shrl
cmp
orl
rcll
adc
inc
arpl
xor
aam
outsb
xlat
in
fstps
popa
stos
repz
out
xchg
pop
or
mov
ljmp
mov
jae
cmc
lods
lock
mov
repz
mov
inc
lock
mov
xor
jecxz
xchg
es
cmpsl
cmp
repz
and
daa
in
ja
cmc
sub
add
bound
xchg
dec
adc
adc
or
dec
push
mov
jno
outsb
test
push
icebp
cmp
xchg
fdivrl
push
call
add
sbb
andb
popa
xor
jecxz
cmp
rcll
into
inc
or
push
add
je
lds
add
imul
xchg
aaa
daa
add
dec
adc
adc
sbb
inc
out
and
adc
inc
ss
sub
jmp
popa
xchg
jle
in
sub
and
cmp
adc
icebp
xor
push
out
subl
and
dec
ds
pop
jo
cld
add
or
pop
push
cli
rolb
mov
xor
call
into
adc
adc
ds
les
popa
dec
add
dec
outsl
inc
mov
mov
adc
out
test
push
xchg
cwtl
xchg
arpl
adc
add
sbb
sbb
cmp
ret
mov
inc
into
mov
push
shlb
cs
fadd
pushf
rcrb
aam
add
data16
lret
orl
jnp
mov
out
sbb
out
fs
mov
js
add
cs
mov
adc
test
xor
push
ds
arpl
inc
mov
leave
mov
xor
les
adc
push
out
addb
into
sbbl
scas
sub
arpl
xchg
add
loop
xorl
xor
cwtl
lret
sub
ret
xlat
repz
or
pop
or
sub
adc
stc
aas
mov
ljmp
cs
aas
push
inc
mov
mov
les
data16
ficoms
jmp
icebp
test
jae
jns
push
inc
mov
out
xor
mov
shll
mov
adc
data16
cmpsb
mov
shrl
lcall
pop
lret
lds
and
mov
sbb
inc
add
repz
in
repz
cmp
dec
arpl
jno
jae
xchg
mov
push
faddp
mov
into
mov
aas
push
outsb
push
je
jle
jecxz
daa
repnz
xchg
jo
popa
lds
les
inc
mov
std
push
jae
addl
icebp
push
imulb
arpl
sub
jae
popa
ja
cmp
jne
xlat
arpl
jmp
sub
push
into
xchg
add
in
xor
sub
cmp
mov
and
xchg
sbb
add
fmuls
add
jecxz
cmpsl
jb
or
cwtl
mov
arpl
testl
xchg
sti
xchg
ja
push
loope
popa
xlat
es
rorb
cld
xor
mov
repz
dec
das
arpl
jno
mov
stos
sti
pop
orl
dec
and
xchg
push
jb
adc
or
lock
mov
in
xor
xor
xchg
cmc
push
adc
bound
xchg
loope
sub
mul
rorl
cmp
sub
adc
inc
inc
pop
push
test
xor
dec
jecxz
xor
hlt
ret
cwtl
andl
popa
movsl
push
clc
push
xchg
cs
fbld
sub
dec
into
clc
xor
mov
adc
cmpsl
sti
xchg
dec
or
in
mov
mov
and
jge
dec
rcll
push
push
in
inc
les
adc
jo
fidivrs
ret
shrl
mov
stc
inc
sub
adc
inc
aas
inc
rcl
dec
adc
pop
lock
push
mov
jae
aam
adc
pop
out
pop
xchg
cmovle
loope
and
push
xchg
in
scas
mov
out
pop
mov
and
push
jl
lods
xlat
mov
fbstp
xlat
ds
adcb
sbb
sub
xor
testl
mov
outsl
out
sub
outsb
add
aas
scas
and
cmp
pop
jae
sbbl
adc
xor
mov
outsl
mov
je
push
daa
push
push
dec
fs
xor
push
shrl
icebp
and
popa
repz
push
add
mov
inc
orl
jb
out
mov
jecxz
out
xchg
cmp
push
shrl
out
shlb
repz
cltd
mov
pop
pop
je
jge
rorl
scas
adc
mov
clc
push
inc
fcoml
xchg
and
out
idivl
roll
ja
rep
lock
jno
push
push
in
or
je
les
mov
std
and
rcll
stos
or
mov
mov
mov
jae
xchg
repz
mov
shrb
mov
adc
mov
and
int
xchg
ds
add
insl
daa
adc
ja
movsb
xor
mov
and
mov
shrl
bound
pop
in
mov
xchg
not
xchg
and
outsb
je
push
xor
dec
xlat
cmc
addr16
push
jnp
loopne
add
stos
sbb
lock
je
addr16
rclb
rep
add
sarl
pop
or
sti
out
pop
mov
adc
mov
and
adcb
mov
out
outsb
addr16
stos
xchg
outsb
pop
add
ljmp
and
mov
mov
push
push
lret
addr16
mulb
xorb
fiadds
bound
daa
data16
push
mov
mov
mov
fs
xor
sti
ljmp
xor
mov
dec
in
dec
popa
fisubl
div
aaa
push
cs
cs
test
sbb
mov
adc
sub
jmp
push
je
popa
add
dec
cmp
adc
test
cmp
inc
mov
jge
dec
dec
push
xchg
les
push
mov
call
fs
mov
in
dec
or
leave
cs
les
daa
clc
jno
out
jecxz
outsb
jb
mov
fs
mov
xchg
ds
add
sti
add
int3
mov
test
xchg
xor
or
mov
adc
sub
xchg
jo
ds
xchg
mov
mov
subb
in
loopne
inc
mov
cmpsb
cmc
adc
adc
lahf
push
adc
clc
push
scas
xor
insl
jne
bound
jmp
mov
mov
roll
outsb
les
cmp
les
xor
not
add
sti
je
pop
push
shll
lret
xor
popf
pop
push
sahf
push
xor
or
add
adcl
daa
int
inc
mov
icebp
out
ret
mov
dec
je
mov
jae
lea
ljmp
adc
adc
push
mov
inc
xor
mov
add
xor
and
push
and
loopne
into
mov
out
xor
jne
add
mov
add
push
cmp
enter
mov
clc
fadds
add
push
scas
sub
pop
mov
mov
pop
lahf
add
into
push
sahf
mov
jp
mov
ds
mov
mov
test
xchg
xor
cmc
push
dec
mov
xor
cmp
adc
or
in
xchg
sbb
in
jge
sbb
xchg
or
mov
mov
sar
adc
arpl
ljmp
adc
push
push
and
mov
out
mov
mov
jae
dec
add
fs
xorl
les
mov
loope
mov
xor
lret
andl
push
data16
popa
je
cmpsl
ret
ret
imul
adc
push
icebp
test
mov
xor
jmp
je
push
loope,pt
add
pop
sbb
adc
inc
loop
imul
jg
shr
loope
jns
xchg
ret
mov
mov
addl
shl
outsl
add
inc
push
sahf
shr
shll
leave
imul
ds
cmp
addr16
cmpsl
push
add
cmp
push
mov
cmp
mov
sub
inc
loope
adc
dec
jle
push
jno
add
xor
mov
cmpsl
mov
adc
adcl
mov
jmp
inc
jnp
shll
jae
mov
jl
mov
stos
imul
adc
push
mov
icebp
fsubp
adc
cmpsb
into
xor
add
xor
cmc
andl
and
and
and
jmp
aas
sbb
push
lods
lods
push
mov
xor
adc
push
dec
sahf
push
aam
bound
aam
mov
mov
mov
jle
stos
sbb
xor
adc
mov
mov
xorb
push
sub
push
mov
loope
add
dec
add
sbb
or
add
jmp
jb
jecxz
inc
jb
subb
xchg
mov
jp
aas
lret
xor
lods
es
and
addb
mov
mov
push
pop
js
inc
dec
jle
add
dec
push
mov
xor
push
cs
vpunpcklwd
es
jle
sbb
or
xchg
fimull
or
mov
inc
xchg
das
jge
push
xor
mov
popa
add
inc
dec
push
loope
mov
push
les
ret
xchg
mov
push
xchg
mov
mov
in
xchg
icebp
adc
adc
cmp
xor
arpl
mov
jmp
pop
push
bound
cmp
daa
and
das
cmp
movsl
clc
out
bound
iret
jnp
cltd
nop
inc
xor
cmp
add
loop
ret
out
mov
inc
mov
sub
and
jbe
lds
lock
dec
rcr
add
xchg
aam
outsb
daa
and
fimuls
push
sbb
ret
pop
js
cs
xchg
fs
pop
andl
ljmp
adc
adc
scas
sbb
dec
into
enter
mov
xchg
inc
out
xor
mov
mov
adc
xchg
fbstp
push
mov
repz
cs
rol
ret
ror
dec
icebp
out
xchg
idiv
xor
and
or
popa
dec
jb
xor
mov
adcl
clc
mov
jnp
imul
popa
add
or
xor
xor
shr
pop
jnp
jmp
mov
add
ds
pop
out
inc
xor
adc
popf
daa
jg
icebp
adc
and
pop
cmp
pusha
xor
lret
test
jle
pop
addr16
dec
movl
sub
mov
fistl
xor
mov
pop
cmp
push
fwait
jns
in
testl
clc
je
or
into
pop
mov
sbb
mov
mov
cld
mov
scas
xchg
jo,pt
mov
push
mov
mov
out
sti
dec
rcl
mov
cld
cld
dec
mov
outsb
cld
rorb
orb
in
stos
out
sub
mov
push
shrl
xor
inc
outsb
jb,pt
bound
mov
addr16
inc
cmpsb
in
sbb
loope
xchg
mov
xor
aad
inc
mov
pop
inc
xchg
jmp
cmpsl
into
imul
js
jle
push
push
push
ljmp
sbb
add
jb
daa
xchg
adc
xor
push
cmp
cmp
cmc
notb
inc
jno
push
mov
xchg
or
push
dec
call
shrl
mov
outsb
mov
adc
cwtl
clc
jecxz
push
cmp
outsl
dec
les
xor
push
fwait
cs
movsl
pop
push
adc
xor
xor
add
push
mov
mov
outsb
mov
push
jmp
pop
mov
test
sub
jmp
popa
mov
adc
cmc
pop
jb
bound
sub
inc
xor
cmp
out
mov
push
adc
and
mov
outsb
push
clc
inc
pop
and
cld
xlat
dec
jl
stc
adc
hlt
icebp
cmp
and
mov
loopne
mov
inc
adc
dec
mov
stos
dec
sbb
les
xchg
push
std
insl
mov
fs
loopne
jb
stos
dec
aas
add
pop
daa
push
mov
mov
das
insb
cli
adcl
ret
scas
add
rorl
mov
pop
inc
and
adc
jmp
xor
in
mov
inc
push
icebp
out
andb
mov
xor
adc
into
cmp
xchg
cltd
mov
fidivs
jg
push
or
mov
rol
call
lret
inc
ja
cmpsb
test
adc
loope
subl
icebp
sbb
arpl
pop
push
xlat
dec
jecxz
cltd
aam
les
jno
mov
jno
and
pop
adc
push
dec
jae
jl
and
loopne
mov
lahf
nop
in
inc
jle
adc
lcall
dec
jno
repz
rol
les
adc
addr16
dec
adc
gs
cmp
clc
push
js
sub
cmc
insl
sarl
add
fdivrs
ret
je
xlat
mov
notb
pop
rcr
or
mov
xlat
pop
mov
mov
stos
add
push
xor
mov
punpckhbw
dec
adc
arpl
mov
dec
in
pop
popa
pushf
jne
ret
push
rol
mov
pop
subb
inc
jecxz
pushf
jo
dec
adc
ljmp
pop
dec
push
xchg
jecxz
add
shll
push
inc
xor
repnz
inc
xlat
icebp
andb
ds
and
mov
cmpsb
adc
into
andl
clc
icebp
xchg
scas
leave
ret
and
sub
dec
mov
jle
push
or
sub
push
decb
adc
mov
mov
pop
and
inc
sbbl
push
add
out
xor
les
outsl
je
out
add
xlat
sub
mov
outsl
imul
icebp
arpl
loopne
insb
jb
into
mov
inc
or
sub
add
push
add
push
add
pop
adc
fstl
inc
mul
int3
stos
mov
mov
xor
loope
push
movsl
fwait
jno
rolb
add
inc
and
fs
cmpsb
add
jo
addr16
pop
out
out
dec
add
shll
cmpsl
cwtl
repnz
je
inc
mov
mov
out
pop
mov
jns
out
adc
loope
loopne
jecxz
push
jno
scas
inc
arpl
mov
cmpsb
and
bound
rorl
mov
ret
icebp
xchg
jle
jns
or
jecxz
stc
insl
mov
and
push
mov
movl
jecxz
idiv
mov
int3
in
xchg
sbb
xorl
sub
sub
jg
stos
in
dec
push
out
ret
mull
rol
adc
xor
pop
jb
popa
ret
shrl
add
xchg
mov
fmuls
repnz
lret
out
mov
and
fisttpl
jle
out
movsl
adc
mov
mov
and
call
pop
ficoms
sbb
and
enter
loop
inc
les
das
andl
shll
out
xor
mov
pop
jle
push
inc
leave
std
pusha
mov
inc
jo
add
mov
xorb
jecxz
jae
mov
mov
jo
jbe
sub
clc
rorl
xlat
cmpsb
cmp
cmc
fsts
mov
adc
cmp
sub
mov
and
stos
mov
jne
adc
ljmp
push
add
jle
adc
xchg
push
push
lods
push
mov
and
push
jae
push
adc
jne
adc
add
dec
mov
adcl
inc
repnz
repz
cwtl
mov
jo
mov
pop
repz
lock
in
inc
ja
adc
dec
inc
test
mov
mov
pop
pop
ljmp
and
bound
into
and
cld
jae
inc
out
iret
dec
mov
outsb
xor
adc
leave
shll
mov
mov
push
test
je
mov
dec
mov
add
dec
shll
jle
cmp
pushf
sub
dec
pop
add
or
pop
and
sahf
hlt
sti
dec
xor
loope
push
outsl
out
mov
jbe
mov
les
je
mov
or
mov
shlb
cmpsl
xor
mov
ja
adc
loope,pn
push
xorl
cmpb
pop
xor
into
mov
inc
es
testl
mov
push
adc
mov
stos
nop
inc
cwtl
and
int3
mulb
dec
cmp
cmp
jl
add
repz
roll
xor
mov
test
push
outsb
sub
mul
movb
add
mov
adc
mov
adc
loope
idivb
rcrl
ds
cmp
adc
sub
in
cld
pause
stos
jns
push
mov
push
adc
popa
out
imul
mov
inc
rcll
repz
out
adc
cs
add
divb
push
xor
or
stos
idivl
arpl
in
jl
xchg
jae
test
xor
xor
adc
fldl
push
fdivs
push
lret
repz
push
aas
test
popa
mov
rorl
inc
adcl
adc
push
adc
das
jno
icebp
leave
cmp
out
mov
roll
mov
inc
mov
mov
ds
add
or
dec
fmull
subb
xor
dec
popa
adc
dec
xchg
mov
scas
scas
daa
loop
mov
ds
push
mov
or
cmp
iret
mov
push
xchg
cmp
inc
ljmp
or
push
mov
enter
xchg
repz
adc
clc
adc
mov
inc
jle
in
dec
and
ret
das
sti
adc
push
inc
fs
mov
adc
repnz
out
add
es
mov
mov
popa
loope
ror
out
bound
adc
or
mov
enter
aam
loope
add
je
and
xchg
andb
push
jp
xor
test
xor
out
cmc
cld
cmp
sbb
out
dec
jle
loop
xlat
arpl
sbb
into
xor
rclb
jno
xchg
pop
and
add
data16
subl
cmp
dec
cmp
dec
add
sub
sbb
out
xor
push
imul
stc
outsb
add
inc
push
cs
push
loopne
jecxz
jnp
cmpsb
sahf
adc
pop
pop
xor
roll
divb
jp
fimuls
sub
out
ret
out
add
push
xchg
push
outsb
aas
cld
shlb
mov
mov
insb
repz
loope
jle
push
fs
pop
mov
jae
push
roll
into
dec
pop
adc
add
cli
dec
loop
mov
cs
xor
stos
shll
enter
pop
sbb
cmp
addb
cli
push
faddl
enter
jbe
fidivl
aam
adc
cli
push
xor
dec
inc
pop
or
fistpll
cwtl
mov
ror
push
inc
repz
add
xlat
jno
jae
mov
push
roll
sbb
hlt
add
and
add
ds
cmpsl
inc
dec
adc
ja
and
ljmp
xchg
adc
js
icebp
add
cs
les
daa
arpl
mov
xor
xor
jno
inc
adc
sub
insb
popa
add
xchg
int
je
xchg
lds
je
dec
scas
mov
mov
les
xor
test
mov
loope
mov
push
and
aam
inc
in
andl
sahf
adc
lret
rcll
and
ja
loop
adcb
jnp
or
dec
and
xor
and
jl
dec
inc
popa
jb
mov
push
push
mov
int3
jg
xor
push
pop
xchg
test
inc
mov
dec
pop
arpl
sbb
dec
adc
movl
fisubl
adc
repz
shl
adc
add
inc
test
and
jecxz
inc
or
add
rolb
sub
mov
jo
mov
jmp
push
push
mov
out
or
lock
ret
jecxz
xchg
mov
jb
pop
add
cmp
outsb
add
push
fidivs
mov
les
rclb
jle
mov
xorl
adc
mov
data16
sbb
add
adc
mov
push
je
jb
xlat
fbld
loopne
pop
xchg
push
fdivl
mov
aas
cmpsl
xor
je
bound
pcmpeqw
jecxz
outsb
testl
mov
push
xor
mov
push
sub
in
xor
and
movsl
lcall
xchg
mov
cmp
mov
outsb
pop
in
shr
ret
std
mov
inc
ret
ret
push
mov
dec
inc
or
out
sbb
jb
ret
mov
jno
test
addr16
in
lret
push
data16
push
adc
and
je
push
imul
inc
fsubrl
inc
leave
xor
pop
jo
and
sbb
outsl
sbb
or
scas
orl
pop
scas
push
sarb
mov
fisubrs
les
xor
pop
push
int
mov
je
xor
lahf
jge
es
mov
xor
inc
into
mov
xor
dec
repnz
push
pop
ds
into
mov
dec
out
jno
cltd
cmpsb
cmp
adc
xor
or
popa
sbb
or
xor
out
hlt
cmpsl
xor
daa
sub
repz
sub
sub
cmp
jne
jae
cld
sbb
xor
shlb
jns
push
fadds
mov
adcl
mov
bound
das
ret
push
jns
arpl
mov
xchg
pop
jb
fucom
and
dec
add
add
mov
and
push
xor
jb
pop
dec
xor
dec
ljmp
out
je,pn
andb
or
ficoms
inc
inc
or
mov
pop
dec
mov
std
mov
jp
addl
ljmp
jae
fimull
inc
jnp
jmp
popa
iret
ljmp
xchg
icebp
adc
add
add
inc
lea
and
loopne
imul
arpl
mov
push
jno
adcl
xchg
stos
jl
les
xchg
inc
push
mov
xlat
xor
add
subb
into
xor
and
sbb
jbe
jns
andb
add
push
sub
xchg
cli
loope
inc
adc
jg
add
inc
les
dec
jmp
cmp
into
jmp
ljmp
or
and
notb
shll
inc
dec
ret
out
clc
jno
mov
divl
xor
mov
pop
mov
mov
cmp
ret
in
cld
jb
cmp
test
xor
pop
jle
xor
mov
in
add
or
and
in
cli
cmp
cmp
test
jo
lcall
xchg
push
adc
xchg
rorb
mov
inc
popa
fs
mov
xor
loope
loopne
cs
out
bound
inc
push
and
sbb
sbb
pushf
arpl
loope
adc
int
les
int3
loope
jle,pt
scas
lcall
dec
cmp
mov
or
je
insb
ds
pop
fs
daa
lods
out
dec
loope
jb
or
hlt
mov
or
and
outsl
jb
and
xlat
xor
inc
outsl
jp
jno
cmc
ret
mov
fs
and
shll
cli
inc
decl
and
mov
in
xchg
push
mov
les
ljmp
xor
push
shll
imul
mov
bound
inc
lahf
jbe
rcll
out
rcll
loop
dec
xchg
push
push
inc
push
inc
lret
push
dec
mov
ljmp
push
jl
inc
adc
insb
mov
sar
orl
ret
rcrl
cmpsb
push
cmp
mov
dec
out
scas
pop
pop
pop
jg
mov
pop
push
push
cs
cmc
and
push
lods
fs
adc
int
push
or
inc
icebp
and
mov
push
out
ds
add
pop
add
fs
fsubrl
inc
jnp
inc
and
cmpl
dec
fwait
jmp
aam
mov
shll
movsl
mov
mov
sarb
inc
push
xor
adc
adc
out
out
push
push
rcrl
in
shrl
and
adc
addr16
ds
out
sbb
adc
inc
xchg
xor
cmp
xor
gs
das
push
and
dec
andl
inc
cmp
inc
arpl
xlat
sub
sub
and
jecxz
ss
loope
mov
loopne
lret
les
adc
push
cmpsl
outsb
mov
sub
cmp
clc
cld
jo
mov
push
jo
out
pop
stos
outsb
shll
addr16
cmc
test
sub
add
mov
push
and
adcl
xorb
mov
xor
mov
mov
rcll
fdivrs
inc
js
add
imul
loope
nop
jb
les
jecxz
push
test
mov
sub
jno
xchg
push
neg
xchg
and
and
inc
cs
mov
add
out
push
repz
mov
xor
rorb
out
push
push
add
mov
arpl
and
push
cmpsb
mov
mov
push
and
into
out
stc
and
or
fbstp
mov
das
ret
fucomi
mov
jmp
out
xchg
js
icebp
adc
test
fs
pop
mov
mov
xchg
jo
vsqrtsd
int3
xlat
nop
shll
pop
inc
xor
std
xor
cwtl
fs
cmpps
push
dec
push
cmpsb
mov
aaa
out
ret
jae
shll
mov
push
fs
and
adcl
es
daa
xchg
daa
js
push
mov
ffreep
arpl
add
jae
jno
aam
popa
cmp
loope
push
int3
push
fidivrs
inc
repz
pop
out
pop
xlat
xorl
cmp
mov
mov
sub
dec
jo
int
mov
loope
insl
mov
jge
mov
push
push
add
jb
scas
into
fldt
and
inc
mov
icebp
mov
js
jne
mov
shll
adc
inc
ss
inc
shr
jae
divl
int
push
mov
add
pop
into
add
imull
mov
push
xor
inc
bound
sub
cmp
cmpsl
xor
xchg
push
adc
sub
test
add
jno
xor
fmull
into
push
jl
sbb
mov
repnz
adc
and
mov
or
mov
loope
cmp
int
out
sbb
or
cs
jecxz
mov
jno
jmp
js
std
adc
out
loope
xor
ljmp
add
push
popa
je
roll
and
jno,pn
push
xor
fistpll
adc
mov
mov
xor
sub
xchg
sbb
mov
and
mov
ljmp
inc
inc
and
cmp
jle
add
adc
and
cs
in
xchg
add
cmp
and
lock
out
mov
inc
xor
jno
xlat
mov
in
xchg
jecxz,pt
imull
push
loop
push
jp
xorb
push
arpl
cmp
or
inc
mul
xor
leave
jb
into
outsb
test
shll
push
fsubl
xor
xor
xor
insb
rcrb
lret
xor
or
shrl
add
movsl
fisubrs
int3
test
inc
push
and
xor
dec
sub
mov
pop
mov
fwait
lods
push
inc
in
or
mov
jecxz
jno
int
bound
hlt
adc
mov
jae
addr16
bound
ljmp
popa
adc
daa
mov
adc
jae
sahf
cmpsb
lcall
lret
mov
pop
into
testl
int3
inc
loope
xor
dec
cmp
popa
pop
ja
cmp
xor
push
std
jne
push
push
icebp
repz
outsb
push
push
xor
add
not
pop
scas
out
xchg
add
and
ret
pop
les
rol
insl
and
sub
or
and
dec
mov
fisubl
repz
sub
mov
xchg
lgs
xchg
mov
jmp
icebp
push
mov
ret
dec
js
push
iret
arpl
xlat
shll
xchg
and
fsubl
mov
data16
xchg
les
andl
adc
sub
sub
les
jbe
dec
push
push
fidivrl
js
and
stos
stos
popa
mov
lea
dec
lock
cmc
inc
adc
arpl
mov
xlat
mov
lahf
adc
xchg
add
js
fcoml
mov
adc
mov
push
add
push
rorb
dec
xor
lahf
fcmovbe
xchg
shrl
push
pop
dec
add
out
bound
pop
pop
mov
rcl
popa
adc
push
or
pop
and
std
std
cmpb
xchg
jle
sarb
and
xchg
arpl
and
xlat
or
adc
mov
out
lock
add
in
popa
popa
mov
mov
push
inc
inc
test
mov
dec
push
xchg
cmp
push
cmc
or
mov
inc
divl
cltd
les
dec
push
jp
inc
cmpsl
xor
and
repz
test
jno
add
je
inc
or
adc
stos
dec
les
xchg
and
pop
into
gs
pop
push
xor
stos
cmpsl
rcrl
bound
push
or
adc
pop
repnz
add
push
lods
aas
popa
sub
fs
popa
rcrl
or
das
push
loope
jno
hlt
inc
cmpsb
std
shrl
sbb
movsb
xor
mov
int3
inc
imul
mov
mov
dec
lret
xor
xor
sub
outsb
xlat
xchg
aaa
mov
cmpl
jp
rcrb
in
inc
push
mov
mov
sahf
lcall
and
and
comiss
lret
inc
jno
jae
aad
push
dec
aas
mul
jb
inc
call
mov
and
mov
outsl
cli
in
out
ja
loope
out
ficomps
push
or
imul
inc
inc
int3
or
div
out
scas
xchg
nop
je
mov
and
sub
or
mov
inc
jno
xor
xchg
hlt
xchg
daa
pop
pop
cmc
orl
adc
and
fidivs
roll
xor
mov
ror
inc
sarl
mov
icebp
sbb
in
in
add
outsb
jo
push
inc
cld
xchg
shrl
or
cmpsl
dec
int
out
xchg
adc
lret
xchg
push
das
call
sarl
xor
jg
dec
jae
fs
adc
jo
out
xlat
icebp
adc
les
outsb
mov
xor
dec
mov
js
mov
adc
fidivrl
fcomps
push
stos
jbe
mov
xor
mull
xor
fldl
ret
sub
mov
and
xlat
adc
dec
repz
and
xlat
bnd
inc
and
ja
andl
lock
dec
stos
push
adc
sbb
iret
shl
into
and
add
fisubs
xchg
repnz
inc
ret
dec
dec
pop
jb
aad
notl
popa
les
mov
xchg
repz
push
mov
jno
and
test
xchg
inc
xor
push
jecxz
sbb
je
inc
mov
push
ds
xor
pop
and
mov
xchg
pop
and
or
and
mov
pop
negl
jp
and
mov
pushf
pop
adc
fiadds
mov
outsl
cltd
in
js
movsl
std
into
orl
shlb
inc
sub
lret
imul
xor
call
addl
movsl
cmp
sub
and
lahf
ja
inc
out
push
jbe
push
push
or
xchg
inc
sbbl
sbb
jbe
cmp
dec
fs
cltd
dec
cwtl
xchg
cmpsl
jecxz
inc
mov
push
xor
into
pop
xor
mov
fadds
hlt
push
sbb
mov
mov
xor
repz
daa
push
loope
ret
not
rorb
mov
pushf
andl
mov
std
xchg
sbbb
xchg
sub
js
shrb
mov
or
mov
into
and
push
mov
into
cltd
mov
dec
das
pop
into
mov
dec
push
fmul
ds
mov
paddusw
shlb
into
dec
mov
push
das
jae
mov
scas
in
stos
sbbb
mov
scas
xor
xchg
cwtl
scas
imul
or
mov
into
adc
pop
mov
into
cltd
mov
dec
das
pop
into
inc
mov
push
dec
xor
popa
mov
paddusw
shlb
into
fnstenv
dec
hlt
mov
mov
and
scas
addr16
mov
movl
cs
jno
les
lods
inc
adc
adc
xchg
out
mov
inc
sarb
push
popa
jno
jae
jno
xor
inc
mov
mov
loop
push
adc
adc
add
push
mov
popa
shll
les
cmc
rol
into
xor
add
int3
mov
add
rcll
mov
jno
xchg
ja
rorb
cwtl
adc
stc
cmpsl
pop
movsl
dec
fists
cmp
add
into
xlat
xor
fcmovb
mov
xor
jle
push
and
xchg
sti
out
mov
push
sub
jne
shll
popa
mov
jno
cs
in
mov
iret
rcll
dec
push
add
inc
add
xchg
inc
push
repz
xchg
pop
xor
sbb
jae
push
jecxz
scas
mov
dec
lret
shr
bound
out
cwtl
jae
fistl
sub
adc
jecxz
int
insl
push
jecxz
ljmp
mov
or
sbb
ret
shll
cld
into
mov
loope
push
repz
mov
push
cld
test
xor
sub
les
sub
mov
cltd
push
jne
imulb
lret
fsubrs
into
sbb
lock
xchg
shll
insl
ljmp
push
icebp
sub
sub
das
or
dec
inc
mov
and
adc
or
push
push
mov
mul
xor
inc
sbbb
call
jl
ror
addr16
mov
sub
adc
push
mov
cmpsl
cmc
push
mov
cmc
xchg
inc
loope
mov
aam
xor
jae
lock
sub
xchg
addr16
push
jo
int3
or
cwtl
ret
mov
mov
jecxz
lret
jecxz
mov
mov
das
cmc
popa
out
mov
das
push
xchg
ret
cmpsb
popa
out
jle
into
shrl
sub
loopne
push
inc
rol
daa
push
arpl
xor
mov
sub
lds
lds
fisttpll
sarb
mov
pop
test
xor
hlt
dec
mov
xlat
and
sub
hlt
jno
shlb
mov
hlt
sub
mov
cmc
push
out
mov
sub
stc
ss
andb
daa
repz
ds
outsl
sub
push
in
xchg
or
dec
xchg
jae
mov
mov
sub
into
subl
mov
hlt
xchg
xor
cmpb
inc
in
shlb
inc
fldl
hlt
jge
cmovno
mov
ss
add
ss
add
icebp
add
xchg
fsubrl
and
shll
add
mov
jmp
data16
xor
mov
or
inc
into
jmp
add
sahf
dec
push
sbb
aaa
jmp
ret
arpl
and
add
adc
bound
out
inc
rcrl
pop
xchg
les
dec
and
js
cli
loope
sbb
repnz
or
lcall
mov
and
or
mov
pop
shl
adc
loopne
or
jae
bound
aaa
cli
mov
iret
test
jecxz
xor
and
dec
adc
xchg
loope
es
xchg
or
add
inc
xorl
outsb
add
push
dec
add
inc
add
call
aad
andl
jge
pop
enter
repnz
xor
mov
test
shr
popf
inc
in
inc
pop
mov
std
stc
add
cmpsb
and
sbbb
jb
inc
mov
jae
push
mov
inc
mov
pop
jp
mov
sub
movsb
shl
shl
shll
jecxz
mov
jne
test
sbb
test
xchg
or
and
out
xchg
int
dec
inc
xlat
dec
inc
sbb
xor
mov
addb
bound
dec
es
pop
sub
inc
test
sub
neg
and
shl
subb
inc
jb
bound
push
notl
sub
lods
loopne
xor
std
sub
subb
mov
xchg
hlt
xor
sub
js
inc
lcall
sbb
jb
bound
xor
sub
neg
xor
pop
xorb
inc
push
sbb
sbb
mov
fcom
pop
inc
mov
xor
inc
and
hlt
inc
addb
adcb
push
out
inc
inc
mov
xor
inc
and
js
inc
inc
jb
andb
push
out
inc
xlat
mov
inc
hlt
inc
xor
js
adc
lcall
sbb
mov
xor
rolb
and
addb
xlat
add
sub
dec
mov
sub
dec
loop
inc
inc
inc
ret
and
pop
and
and
xlat
cmp
dec
inc
sub
xchg
cmpsl
and
inc
dec
orl
inc
push
addr16
loope
add
xor
xor
xor
or
push
add
cli
pushf
loopne
sub
mov
jg
arpl
das
dec
xchg
sub
sub
sub
sub
sub
sub
sub
sbb
popl
dec
je
inc
add
dec
stos
xor
xchg
mov
ret
adc
rol
mov
popa
inc
xor
xor
addl
enter
mov
dec
cmpsl
add
sbb
push
adc
cmpsb
xor
push
andb
add
pop
or
sub
pop
subb
dec
add
mov
pop
sub
inc
mov
inc
in
incb
push
sbb
out
mov
adc
aaa
orb
cmpsb
xlat
sbb
pop
xlat
jns
and
xchg
dec
sti
push
mov
rorb
lret
mov
pop
xchg
sub
adc
popa
es
jae
or
xlat
add
movsl
roll
int
mov
or
hlt
inc
bound
js
bound
movl
add
sub
xchg
mov
bound
leave
nop
sub
aas
or
jbe
pop
xchg
mov
push
jg
jmp
inc
out
out
in
out
inc
xlat
js
xlat
stos
xlat
sbb
xlat
pop
xlat
mov
das
sbb
je
xchg
mov
xor
mov
inc
cmp
mov
sub
jp
add
inc
sub
or
mov
xchg
adc
mov
mov
in
adc
stos
adc
dec
inc
adc
inc
lahf
loop
dec
jno
mov
jno
mov
adc
mov
scas
jle
jmp
inc
adc
clc
das
pop
inc
stos
hlt
mov
pusha
xor
dec
lock
in
adc
or
pop
adc
xchg
imul
mov
outsl
jmp
enter
cli
in
into
das
shl
outsb
or
sarb
addr16
inc
push
into
or
pop
add
out
adc
pop
xlat
int
mov
inc
dec
sub
cmpsl
lret
incl
in
inc
cmpb
xlat
push
lret
and
xor
loop
call
sub
xor
nop
push
outsl
add
shll
and
and
mov
add
cmp
into
or
out
fwait
bound
dec
dec
int
addr16
add
dec
push
jmp
jno
imul
jecxz
gs
je
xor
into
cmpsl
out
aaa
adc
xchg
shll
push
xchg
pop
add
push
xor
push
sbb
call
ret
and
in
test
inc
or
bound
frstor
bound
adc
inc
scas
and
pop
scas
push
inc
ret
movsb
filds
cmp
lods
std
xor
pop
sub
xlat
stos
and
fisubs
pop
call
pop
pop
iret
cmp
add
xchg
jno
mov
fwait
outsb
imul
ja
and
fs
bound
mov
pusha
xchg
xor
lcall
js
push
adc
sub
push
ret
and
xor
andb
mov
push
and
sub
xor
bound
push
add
push
repz
adc
roll
xlat
mov
scas
mull
mov
pop
add
addl
sub
bound
aam
in
xchg
mov
data16
fistpl
daa
push
xor
repz
inc
roll
adc
rorl
popa
add
cltd
push
jbe
loop
or
shll
mov
push
adc
mov
jae
loop
xor
add
shll
mov
sub
hlt
and
pop
fiadds
in
addr16
and
xor
mov
out
xor
cmp
mov
in
nop
sub
mov
bound
xor
psubw
xor
push
popf
imul
je
add
movsb
xlat
pusha
popa
lret
es
das
adc
cmp
int
push
sbb
loop
repz
xchg
outsl
shlb
inc
and
repz
mov
in
bound
mov
add
adc
ret
or
in
xchg
sub
xor
push
bound
dec
pushf
mov
incl
jo
int3
loop
fisubs
xchg
pop
xor
xor
add
bound
fiadds
push
and
icebp
cmp
inc
and
enter
xlat
inc
repz
dec
and
leave
push
imul
inc
mov
and
adc
pop
rcl
sub
pusha
pcmpgtw
push
mov
inc
in
add
loope
inc
in
scas
pusha
xor
dec
mov
lret
imul
xor
pmulhuw
inc
cltd
mov
addr16
enter
out
or
cltd
dec
clc
loop
xchg
and
mov
lret
dec
mov
lahf
adcb
fisttps
cmpsb
add
ja
push
out
repz
je
fidivrs
push
rol
jo
and
push
lods
pop
out
xchg
test
lea
and
mov
popa
ret
popa
leave
adc
adc
test
mov
jge
add
dec
in
and
pop
mov
mov
mov
arpl
in
and
sbb
jo
dec
lods
pop
inc
push
mov
or
inc
dec
aam
nop
out
insb
sub
lahf
add
pop
xor
jb
mov
das
mov
lock
xor
mov
sub
add
xlat
in
push
or
orb
jle
or
add
call
dec
push
and
mov
cmc
iret
push
pop
dec
push
scas
aaa
sub
movsl
fs
mov
bound
fldl
xor
jo
bound
das
loopne
dec
push
stos
jge
out
inc
mov
popa
add
cwtl
mov
pushf
lods
orl
arpl
sub
imul
loope
icebp
mov
int
roll
jmp
loop
push
mov
mov
scas
inc
lods
scas
aam
push
out
or
xchg
sub
lock
and
lock
push
pop
inc
jae
nop
mov
xchg
int3
aam
inc
dec
push
push
lea
outsl
jp
stos
popf
dec
cmpsl
in
leave
add
cmpsl
push
loop
and
mov
and
and
mov
sarl
xor
inc
xchg
outsl
xlat
mov
mov
cs
push
nop
mov
pop
and
bound
and
ret
and
push
loop
xor
rorl
xchg
xor
leave
jb
push
adc
mov
sub
cltd
ret
push
xchg
jo
cmpsl
adc
and
push
and
xchg
add
div
scas
mov
enter
push
cmpsl
adc
mov
leave
aam
rolb
mov
fwait
inc
jmp
sbb
cmp
bound
ja
leave
bound
out
push
adc
pushf
lds
lea
inc
push
push
sar
mov
pop
dec
mov
and
xchg
dec
xor
aad
out
jae
push
xchg
scas
push
ja
xchg
sbb
inc
xchg
mov
sub
lods
pop
add
leave
outsb
inc
mov
lahf
inc
outsb
loope,pt
movaps
dec
stos
add
nop
cltd
popa
inc
bound
pop
jmp
iret
inc
xor
adc
inc
xlat
addr16
shlb
shrl
xor
or
mov
adc
dec
int
mov
xor
stos
adc
and
popa
xchg
testl
rol
ret
mov
sub
jmp
mov
leave
mov
ja
sub
sub
dec
hlt
mov
arpl
in
fs
lock
stos
sub
inc
push
in
xor
mov
sub
mov
das
pop
adc
dec
mov
test
sbbb
imul
stos
sub
mov
push
xor
sub
imul
test
rol
imul
mov
bound
popf
mov
fisttpl
stos
xchg
jle
sub
ret
insl
mov
or
xor
pop
cmpsl
mov
and
sbb
ret
xor
or
xor
adc
fisttpl
mov
add
and
mov
xchg
mov
push
pop
push
mov
jo
jmp
or
adc
cmp
lahf
addb
stos
jmp
fldl
aad
push
add
jmp
mov
pusha
test
cmp
sbb
xor
and
out
mov
adc
and
jbe
bound
push
ret
nop
pop
pop
sub
push
sti
nop
pop
sub
popa
lea
hlt
ja
mov
push
mov
fs
push
or
xor
and
or
pop
in
out
icebp
add
push
adc
or
ljmp
cwtl
or
nop
ret
xchg
jnp
pop
push
stos
mov
adcl
bound
and
xchg
or
and
test
cltd
inc
add
adc
dec
stos
fwait
push
out
int
js
mov
or
fadds
cmp
sbb
sub
lods
in
orb
in
or
loop
jae
into
stos
or
add
dec
add
sbb
andb
inc
or
insl
ds
iret
push
xchg
out
push
test
push
add
lret
addl
sub
in
ja
xchg
jecxz
lret
or
jmp
cmp
push
insb
or
jecxz
lret
or
mov
ljmp
and
mov
and
push
push
dec
pop
inc
fldt
or
in
leave
icebp
shll
lret
or
lock
push
movsb
insl
fucom
xor
mov
ret
popf
in
js
push
inc
xor
arpl
or
or
inc
cmpsb
pop
mov
xor
inc
shrl
sbb
fcompl
les
inc
xchg
pop
or
push
adc
push
adc
hlt
outsb
add
mov
stos
adc
push
dec
add
movsl
dec
inc
addl
jb
nop
mov
sbb
adc
int3
adcl
aam
cmp
push
scas
movsb
push
andb
push
or
subl
andl
mov
js
in
shll
mov
iret
sbb
int
repz
mov
icebp
in
rclb
out
hlt
inc
leave
xchg
mov
sbb
mov
repz
adc
lods
pop
out
aam
cmp
pop
adc
lods
and
lods
arpl
movsb
ror
push
pushf
pop
cltd
iret
mov
in
add
push
jo
nop
mov
mov
push
imul
sub
mov
fnstsw
sub
inc
mov
ss
mov
mov
xor
lret
push
movb
andl
dec
enter
rcl
xchg
int3
ret
mov
popf
cmp
call
adc
mov
inc
cmp
shlb
rclb
into
hlt
pop
jecxz
inc
ljmp
in
sahf
add
inc
xchg
push
repz
xchg
inc
inc
mov
add
in
and
add
jp
enter
add
out
addr16
icebp
shlb
cmp
sub
mov
andl
mov
mov
or
push
inc
cmp
int3
je
dec
sub
in
add
push
jge
addr16
idivl
loope
in
inc
popf
mov
adc
mov
or
into
sub
inc
xor
nop
shll
es
cmpsb
adc
ss
cmp
inc
int
hlt
xor
frstor
mov
paddusb
testl
roll
dec
inc
enter
fbstp
fisubrs
xchg
jecxz
adc
ret
ds
fdivrp
push
xchg
push
sub
add
cmpsb
lret
adc
mov
cmc
enter
pop
hlt
sbb
or
fldenv
sbb
push
sahf
outsl
jbe
cltd
sub
xor
fldenv
mov
jae
adc
cmpsl
mov
lea
pop
imul
testl
mov
mov
add
and
add
iret
adc
pop
sbb
sahf
push
mov
sub
gs
xchg
je
mov
ret
movsb
push
add
xchg
or
int3
je
sbb
ljmp
mov
js
in
mov
xlat
pop
sbb
hlt
xor
xlat
arpl
imul
or
mov
sbb
xchg
vmovaps
stos
shl
outsb
sub
xchg
jmp
rorl
add
or
dec
push
fisttps
push
mov
push
xor
ret
adcb
jnp
fadds
and
in
add
jnp
sub
out
mov
or
fld
add
test
lods
sbb
inc
xchg
dec
scas
ss
inc
aad
xor
lods
scas
repz
jmp
rcr
in
mov
sbb
cmpsl
or
dec
popa
and
push
adc
movsb
ss
scas
mov
inc
daa
aam
push
es
incl
nop
and
addr16
inc
sub
loop
adc
stos
out
movsb
test
push
or
mov
movb
inc
add
bound
push
cmp
in
mov
mov
mov
aas
das
mov
gs
and
test
dec
fisubrl
mov
pusha
int
mov
or
sub
iret
add
aaa
cmovno
icebp
dec
push
sub
mov
push
ret
lds
sub
jae
popa
insb
movsb
add
arpl
movsb
dec
leave
jb
xchg
sbb
ss
sub
mov
adc
loopne
movsb
js
imul
dec
mov
pop
in
dec
inc
push
jp
in
mov
dec
jne
repz
pop
push
bound
pop
ss
repz
scas
clc
adc
mov
cmp
daa
and
xor
and
push
lea
xor
inc
shlb
cmp
int
ja
add
pushf
shrl
sub
and
push
xchg
xchg
rorl
test
test
xor
je
mov
aam
aad
dec
push
mov
and
adc
stos
sarl
popf
cmpsb
aad
shll
sub
push
sub
xchg
xchg
or
ret
lahf
add
bound
outsb
add
inc
xor
ret
mov
cmp
and
mov
push
fisttpl
lods
sub
pop
xchg
mov
pop
mov
test
dec
loope
call
faddp
insl
movsb
xchg
mov
mov
push
mov
sbb
sbb
push
mov
inc
fldt
icebp
dec
or
inc
bound
dec
int
push
inc
lret
xchg
cmpsl
mov
bound
lods
ret
addr16
fcomps
ret
adc
addl
xchg
xor
loope
dec
mov
adc
nop
inc
push
enter
inc
dec
jg
dec
sbb
adc
scas
xchg
out
jb
mov
adc
xchg
push
adcl
ret
or
jo
test
cmp
movb
pusha
lea
jae
jae
test
cmp
push
lea
ja
pusha
inc
mov
dec
inc
rol
jmp
repnz
jmp
jg
dec
fs
je
call
or
js
gs
in
dec
test
cmp
les
cltd
push
leave
lcall
out
enter
add
add
push
mov
sub
xchg
cmpsl
out
rclb
jb
mov
testl
or
xor
push
int
daa
xor
shlb
lock
cmpb
arpl
push
leave
inc
sarb
jl
mov
dec
repnz
inc
mov
rcr
push
bts
push
cmc
or
bt
shr
push
bsf
mov
rcr
mov
cmc
adc
bswap
mov
push
push
pusha
mov
or
jmp
mov
xor
ficomps
rorb
inc
je
pop
push
and
pop
push
clc
push
stos
xor
push
testl
jl
divb
gs
mov
test
jae
pop
push
rorb
mov
cli
dec
notb
push
stos
xor
jecxz
or
es
faddl
pop
xchg
push
push
iret
cltd
hlt
inc
jo
jno
and
rcr
fs
bound
push
inc
pusha
push
stos
xor
jge
sbb
jns
cld
xor
and
sbb
xchg
mov
pop
jle
or
out
mov
dec
les
inc
dec
push
mov
mov
ret
mov
out
mov
xchg
sbb
lods
mov
shrl
fwait
add
mov
dec
std
rorl
sub
xchg
add
bound
imul
add
pushf
lea
call
push
lea
ja
pushf
lea
jae
call
bt
stc
test
pushf
call
mov
or
xor
popa
cltd
dec
cmpb
scas
out
pusha
cmp
mov
sbbb
ljmp
or
mov
popa
mov
sar
popf
jecxz
daa
push
fsubrl
incl
cmp
jp
imul
or
cmp
jb
mov
pop
pop
xchg
enter
sub
lahf
pop
xchg
dec
xchg
fstps
jne
pusha
popa
jg
pop
mov
ret
fnsave
xchg
jo
into
xor
faddl
xor
mov
add
mov
fimuls
stos
test
cmp
add
lock
ret
or
sbb
mov
pop
push
into
inc
mov
xor
hlt
in
sub
ja
add
lea
call
jmp
call
cmc
movb
cmc
add
movb
test
bt
mov
cmc
cmc
bt
add
movb
cmc
bt
test
pushl
jmp
pushf
lea
je
jmp
mov
clc
bt
neg
test
test
pushf
not
call
call
cmp
sub
mov
rcll
hlt
push
ror
mov
fidivl
int
dec
mov
adc
mov
push
ret
jle
out
fwait
lods
gs
nop
dec
or
push
dec
sarl
jl
daa
dec
rorl
inc
pop
nop
cmpsb
sub
cmp
xchg
inc
mov
std
mov
fcoms
jg
cmpsl
ja
dec
dec
xor
rcr
fistpl
shrl
lock
mov
je
sub
cwtl
shrb
xchg
adc
and
int3
jmp
xorl
add
jae
fs
movsb
pop
xchg
push
xor
xchg
ror
mov
fst
das
dec
mov
mov
dec
cmpl
ret
or
mov
mov
cmpsb
inc
jbe
ja
xchg
sbb
aaa
jmp
mov
dec
mov
ss
fldl
decb
adc
ficomps
fnop
dec
mov
movsl
jno
loop
ss
jb
inc
mov
stc
test
mov
movb
cmp
jmp
mov
cwtl
setnp
mov
lea
jmp
lea
je
bt
jmp
test
bt
stc
cmc
sub
push
call
lea
call
jmp
mov
shl
xor
push
sub
push
aas
shr
ror
rcl
sub
mov
lea
jmp
repnz
pushf
call
cmp
pushf
add
jmp
lea
call
push
lea
jae
cmp
cmc
jmp
flds
cmp
cmpsl
icebp
stos
gs
mov
cmp
sahf
test
xchg
icebp
adc
mov
lcall
arpl
mov
or
clc
hlt
mov
add
mov
cld
jge
int
mov
mov
mov
sbb
sbb
add
dec
test
sub
mov
jne
fildll
mov
sarl
xlat
mov
mov
mov
pop
fwait
js
dec
daa
stos
push
leave
pop
fs
lret
mov
cltd
xchg
or
hlt
mov
mov
or
cmp
pushf
pushf
lea
jbe
call
movl
call
pusha
movl
push
mov
pushf
lea
jmp
cmp
pushl
lea
jb
call
popf
cpuid
nop
jmp
jmp
push
cld
ss
mov
into
test
jae
insl
sub
js
mov
pop
cmpsl
push
scas
sub
cmp
xchg
les
pop
inc
push
and
decl
jno
shrb
fmull
pop
sub
ret
aas
cmp
das
stos
movsl
sbb
xchg
push
cmpsb
shlb
insb
movb
insl
jbe
fs
lock
and
mov
push
mov
mov
jl
sti
scas
jecxz
pop
push
int
ret
sub
iret
xchg
push
adc
push
fisubrs
cmp
sarl
sub
fwait
out
aaa
sbb
test
cmc
dec
mov
mov
int3
in
test
push
add
cmp
pushf
pop
xchg
push
pop
add
addr16
push
adc
flds
push
out
add
test
jle
add
call
lea
ret
call
add
jmp
clc
call
call
jmp
ret
lock
fs
mov
js
bound
sbb
cmp
xchg
insb
aaa
add
inc
cli
ss
test
cmc
cmp
call
loopnew
adc
jbe
cmp
push
out
test
sub
mov
mov
pop
mov
jo
mov
test
jecxz
shll
adc
mov
sub
jp
ficoml
rcr
pushf
dec
sub
mov
aaa
ljmp
jecxz
jnp
sub
mov
leave
sub
arpl
jg
or
icebp
shll
and
push
xchg
je
push
icebp
cs
bound
enter
add
sub
push
add
jmp
mov
addr16
shlb
adc
pop
xchg
gs
pop
inc
stos
mov
je
add
outsb
jmp
pusha
push
leave
aas
mov
daa
jo
lret
pop
and
jmp
adc
dec
mov
mov
dec
inc
jmp
cmc
neg
cmc
call
lea
jae
push
cmp
pusha
jmp
pushf
pushf
movl
jmp
and
xor
xchg
movb
aam
mov
add
shl
mov
jmp
lea
jne
sets
das
btr
shl
sub
and
mov
not
add
sbb
shl
mov
cmp
jmp
sub
movl
jmp
bt
cmp
pushl
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
addr16
xchg
int3
add
and
xchg
int3
and
fildl
push
xor
adc
lahf
sbb
scas
ds
out
stos
adc
scas
push
insl
daa
outsl
sar
insb
jmp
or
pop
sub
ret
aas
cmp
test
sbb
mov
jp
mov
lret
adc
pusha
call
call
mov
pusha
pushf
mov
pushl
ret
lea
call
call
lea
je
bt
add
push
call
pushl
pushf
mov
push
cwtl
lahf
pushl
popl
mov
mov
pushf
movl
pop
lahf
movsbw
lea
jmp
jmp
lea
call
push
adc
pusha
pushl
jmp
lea
jb
cmc
jmp
neg
jmp
cmp
mov
aas
cmc
sub
jl
mov
lods
rclb
popf
inc
mov
xor
jmp
dec
mov
mov
pop
dec
inc
sarl
pop
fwait
push
stc
jno
lea
je
clc
call
clc
clc
bsr
adc
mov
call
mov
addr16
rorl
les
xchg
icebp
sub
inc
mov
out
pop
scas
jl
hlt
scas
call
jo
cmp
stos
push
sti
mov
lods
sbb
mov
cld
cld
cli
aas
push
sbb
mov
pop
outsl
adc
or
lret
mov
pop
lret
aad
andb
nop
rcrl
mov
xchg
outsb
pop
mov
xchg
lods
mov
or
js
lock
in
shrb
mov
inc
fwait
xchg
or
rorb
add
sbb
pusha
jmp
jmp
jmp
xchg
clc
cwtl
not
btc
mov
inc
sbb
pusha
sub
mov
test
pusha
push
cmp
mov
bsr
inc
movsbw
bsr
mov
push
sub
pushf
pushf
rep
push
call
stos
rorb
add
xor
test
jle
ljmp
or
scas
cmpsl
pushf
add
je
cs
or
es
adc
fistpl
jb
mov
in
sub
and
jecxz,pt
daa
cmp
jo
sub
movsb
ljmp
out
dec
les
sbb
jb
cmp
mov
fs
push
or
sub
sahf
push
mov
push
lods
jbe
mov
mov
int3
out
mov
pusha
ss
lret
cmp
rorb
jne
or
fcoml
xchg
clc
out
out
fs
fistl
mov
int3
cmp
mov
pop
leave
pushf
mov
rep
lea
not
jmp
add
clc
jmp
add
add
push
jmp
xor
adc
fs
bound
pop
and
xor
lahf
pop
and
jmp
lods
cltd
push
inc
jge
adc
or
jg
push
and
int3
je
popf
bnd
aad
jb,pt
sub
mov
add
in
out
pop
push
jns
jo
jecxz
add
push
pop
mov
clc
cs
ljmp
and
lcall
mov
mov
jle
in
sarl
mov
lahf
push
dec
inc
push
fistpl
ret
pop
pop
xchg
fdivl
jecxz
dec
inc
movl
mov
sub
int
outsl
hlt
mov
or
je
jo
cwtl
pop
push
or
mov
cltd
jb
popa
mov
pushf
pusha
jno
or
xor
das
mov
fists
mov
adc
cltd
and
jbe
jmp
mov
lea
jne
sar
inc
rol
sub
mov
clc
clc
pushf
add
pusha
movzwl
shl
sbb
shl
sar
mov
cmp
stc
cmc
call
add
bt
stc
movzwl
lea
pushf
mov
cmp
cmp
add
movb
mov
bt
push
test
call
mov
mov
push
mov
jmp
clc
sub
pusha
pushl
popl
pushf
cmp
push
jmp
pusha
lea
jle
je
movsbl
bswap
bswap
push
mov
cwtl
pusha
cwtl
lahf
mov
cwtl
lea
lea
call
mov
lea
jae
pusha
pushl
xchg
pusha
movsbw
push
movl
lea
lea
call
push
sbb
bts
stc
movsbw
push
not
pushf
mov
aas
aad
shl
mov
pushf
test
pushf
mov
pusha
lea
je
and
sar
adc
mov
shl
xor
neg
shr
add
inc
btc
pusha
mov
movw
stc
test
push
jmp
int
mov
fs
arpl
fistl
loopne
iret
mov
cltd
xchg
push
xchg
jp
call
sbb
pop
mov
adc
arpl
out
mov
in
and
div
jmp
pop
dec
inc
mov
je
or
push
call
pushf
mov
pushl
mov
not
mov
push
jmp
movl
lea
call
jmp
mov
lea
jae
pusha
call
pushf
stos
pusha
lea
jmp
pushf
pusha
lea
jne
sar
call
call
pop
jge
mov
mov
sub
sbb
mov
int
mov
lock
stos
shl
xchg
repnz
mov
out
ret
test
je
ret
xchg
sarb
adc
cwtl
pop
push
mov
outsl
push
into
leave
sarl
das
pop
mov
xchg
not
not
mov
push
pushf
mov
movsbw
lea
pusha
push
jmp
jmp
mov
mov
xor
mov
xor
sbb
mov
mov
pop
imul
ljmp
in
push
mov
dec
enter
adc
inc
pop
inc
jo
jge
shll
inc
adc
data16
add
mov
lret
shll
adc
sub
ss
mov
or
fwait
movsb
mov
lea
dec
or
fistps
jp
xchg
addr16
push
ret
hlt
scas
ljmp
addr16
mov
xor
imul
test
gs
inc
jbe
pop
stos
int3
scas
jg
and
xor
xor
mov
loopne
push
rol
xor
cmp
push
add
test
pushf
shll
div
jo
pop
roll
addr16
adc
rcll
jno
add
inc
lock
pushf
movw
lea
jae
ror
bsf
mov
movsbl
pushf
neg
mov
push
cmc
shr
mov
sub
clc
xor
pusha
bt
clc
jmp
dec
push
pushf
cmp
lea
lea
jmp
lea
ja
jmp
lea
jns
pusha
dec
call
pushf
lea
jae
call
pushf
pushl
movl
pushl
jmp
not
mov
lea
lea
mov
pop
mov
pushf
pushf
lea
call
jmp
mov
stos
push
lea
jmp
or
mov
pusha
lea
je
not
call
push
mov
adc
jmp
mov
addr16
push
dec
test
lock
outsl
test
int
or
icebp
or
fidivl
dec
pop
pop
adc
xchg
xchg
insb
pop
mov
add
or
jno
mov
pop
scas
inc
jp
outsb
popa
mov
cli
adc
pop
inc
jae
mov
mov
aam
popf
push
cmp
push
neg
stos
pop
orl
push
cmp
loope
push
repz
pop
dec
jo
fisttpll
sbb
cmpsb
push
adc
pusha
aad
adc
imull
jb
mov
addr16
mov
sbb
stos
enter
mov
jecxz
fsubrs
sub
nop
test
test
sarb
and
xchg
jno
test
data16
subl
repz
mov
add
repnz
push
clc
inc
cld
dec
repnz
or
daa
jo
jmp
fidivl
and
mov
sbb
std
out
cmp
in
leave
bound
mov
std
cld
stc
jb
arpl
sub
mov
add
sub
add
shl
dec
sub
shl
mov
inc
bt
cmp
pusha
mov
cmc
sub
jle
cmc
push
repnz
pushf
lea
jne
push
movb
pushf
call
mov
imul
ljmp
insb
movsl
leave
inc
mov
xor
or
cmp
push
mov
movl
jmp
sbb
imul
rclb
sbb
mov
fcompl
jo
cmp
mov
ljmp
daa
and
mov
dec
mov
cmc
daa
popa
pop
xor
dec
cwtl
xchg
mov
xor
cmpsb
add
in
push
mov
xchg
jno
jns
dec
sub
sbb
lahf
mov
xor
and
std
call
cmp
xchg
jge
in
fcoms
and
lock
out
jmp
imul
sbb
push
loope
fcoml
sarl
mov
add
cmp
mov
fdivl
inc
push
aad
push
fs
xor
adc
push
in
les
gs
pop
jo
test
dec
pop
adc
mov
test
cmp
iret
call
and
xchg
pop
sbb
pop
aam
sbbl
rol
inc
lds
xchg
loop
adc
jmp
push
test
loope
or
icebp
mov
dec
lock
bnd
loopne
xchg
or
fmull
outsb
push
rolb
xor
mov
lds
insb
xor
movsl
sub
daa
test
dec
adc
or
push
and
or
sub
bound
lods
xor
mov
popf
vpsrad
push
push
sarl
cmp
xlat
dec
and
int
inc
adc
jmp
mov
xor
adc
sbb
and
cmpsb
fmuls
notb
push
push
xchg
je
adc
xlat
aad
xchg
popf
bound
push
cmp
outsb
inc
fdivrs
vunpcklps
rcr
inc
jge
jne
in
cmc
adc
test
repz
mov
addr16
and
and
dec
in
mov
inc
stos
jo
outsl
push
xchg
or
sub
sbb
xor
call
xlat
call
scas
test
bound
push
xchg
jne
add
cli
loop
popa
jno
pop
testl
insb
adc
dec
fcoml
mov
xchg
ret
inc
outsl
cmp
popa
sub
sub
out
test
outsl
outsl
movsl
jno
popa
jle
imul
jmp
mov
aad
je
xor
lds
das
in
sti
inc
in
push
mov
xchg
inc
in
and
in
jmp
push
push
in
in
in
and
cs
movsl
sub
xor
aad
xor
and
xor
push
sub
fsubrs
cmpsw
popa
in
and
aad
sub
repnz
ljmp
movsb
mov
mov
loop
lret
gs
sbb
movsl
dec
and
push
loopne
aaa
push
ret
sub
fs
adc
add
fsubr
gs
cmp
push
jmp
stos
inc
aad
jecxz
push
flds
and
daa
mov
insl
jmp
lods
aad
sbb
adc
push
push
popa
mov
and
imul
mov
daa
xchg
in
and
pop
sub
popa
adc
imul
and
sub
orl
jnp
aad
pop
test
push
xchg
pusha
test
mov
out
js
stos
loop
shl
popa
inc
insl
ljmp
sub
sub
xchg
loopne
pop
xor
pop
inc
imul
pop
cmpsb
fstl
mov
add
and
movb
push
inc
sub
push
and
and
push
sub
int
aam
pop
aad
js
loop
insl
mov
and
push
out
ljmp
movsl
daa
xor
dec
aam
in
sub
xor
aad
in
outsl
or
pop
sub
jae
pop
bound
in
push
sub
shlb
dec
nop
addr16
pop
aaa
and
gs
stos
push
xchg
addl
mov
fcom
pop
fsubr
inc
push
push
mov
in
mov
cmpsb
test
fmull
outsl
jns
imul
dec
xlat
cwtl
movsl
test
leave
mov
mov
lods
shll
inc
push
push
xor
test
aad
insb
jae
mov
gs
lahf
sub
mov
in
pop
jp
push
lds
dec
movsl
and
cmp
sub
test
in
or
test
movsl
lret
and
sub
in
loopne
adc
sbb
adc
and
jo
insl
daa
scas
mov
xor
fists
jno
pop
fbld
sbb
adc
test
repnz
push
mov
sub
mov
push
cmp
daa
cmpsl
and
rcrl
push
sub
addr16
insl
pop
sub
pop
xlat
out
push
fucomip
insw
aad
push
xchg
cmc
mov
frstor
xchg
movsl
inc
outsl
dec
sub
cmpsl
test
aad
out
mov
jmp
outsl
data16
out
aaa
jno
cmpsb
in
popa
lods
jmp
push
data16
data16
pop
data16
xchg
pop
xor
sub
mov
mov
push
pop
pop
es
stos
lret
jmp
xlat
mov
xor
sub
or
test
out
push
fcmovbe
xchg
xor
outsb
cmpsb
jo
xchg
push
push
out
lods
out
loop
or
push
inc
shr
popa
cmpsb
adc
xchg
out
jmp
sub
out
mov
push
es
xlat
scas
insl
js
js
stos
fildl
and
test
stos
gs
fsubrs
cs
fs
insl
popa
imul
in
jmp
pop
cmpsb
aad
jne
out
adc
in
cmp
xchg
in
push
fcmovb
das
mov
xor
sub
pop
add
adc
popa
mov
test
and
xor
gs
or
popa
xor
inc
test
push
adc
push
in
adcb
push
cmpsl
add
out
mov
test
imul
and
insl
push
bound
test
push
lods
fnsave
das
and
lods
imul
xor
sub
cld
push
sbb
movsl
pop
out
scas
out
sub
out
aad
mov
gs
push
push
out
xorb
test
rorb
test
sub
dec
movsl
dec
mov
test
jmp
test
scas
dec
sub
dec
out
test
loopne
movsl
adc
inc
fisttps
push
cmpsb
gs
cmpsb
loop
gs
sub
xchg
or
ljmp
imul
sub
sub
xor
push
daa
test
loop
test
fldcw
in
jmp
imul
mov
push
or
mov
ret
sub
push
aad
pop
insl
outsl
sub
dec
push
jno
aaa
out
sub
jo
adc
sub
push
push
aad
sbb
or
sub
xor
push
sub
pop
mov
inc
test
inc
scas
andl
add
bound
inc
xor
in
sub
push
or
adc
xor
add
loope
jmp
push
push
xor
dec
shlb
or
ljmp
repz
cld
out
sub
call
loopne
js
or
inc
xorl
outsb
jl
imul
das
pushf
and
subl
add
mov
jae
in
ljmp
push
and
shr
push
pop
sbb
leave
out
cmpsb
and
inc
sub
addr16
jns
fidivs
xor
lret
push
add
jb
push
sub
push
sahf
sub
dec
scas
sub
jl
imul
divl
daa
mov
xchg
push
daa
in
and
in
fsubrl
adc
mov
pop
lods
in
shrl
fisubs
les
sub
xchg
pop
push
and
xor
in
jae
popa
in
xchg
xor
scas
subl
out
xor
sub
call
push
daa
push
adc
sub
lods
xchg
jns
cld
inc
test
insl
shrb
enter
cs
xchg
out
div
loope
pop
mov
test
adc
in
add
out
es
mov
cmp
gs
call
or
xor
inc
mov
xchg
sub
xchg
aad
inc
daa
add
outsl
in
aaa
test
inc
and
push
pop
orb
adc
test
lods
fmuls
and
xor
cs
sub
lret
xchg
out
mov
out
mov
dec
mov
lods
test
scas
jns
sub
cmp
dec
out
pop
movsl
aam
push
cs
mov
push
xor
rorb
jne,pt
jne
jne
jne
test
cwtl
arpl
xchg
jle
fsubrs
in
les
pop
cs
ficomps
test
fimull
jl
in
mov
ljmp
stos
flds
xchg
adc
lret
and
adc
in
out
frstor
movsl
and
mov
insl
push
clc
sub
xor
pop
bnd
push
push
pop
imul
xchg
pop
out
or
arpl
adcb
stos
out
xor
push
das
sti
pop
aam
mov
outsb
aas
loop
push
sub
stos
mov
out
stos
jae
mov
fsubrs
fisubs
push
adc
push
insl
pop
jae
and
pop
movsl
ja
loopne
jmp
test
xchg
dec
push
mov
scas
push
scas
or
adc
sub
push
jo
ficompl
insb
xor
imul
pop
and
mov
jmp
ret
daa
xor
fsubr
inc
push
insb
sub
insl
push
push
popa
ret
gs
jne
inc
out
scas
jns
cmp
pop
adc
adc
test
xor
mov
call
sub
popa
sub
sbb
dec
cmc
push
push
push
aam
lods
cmp
test
test
das
gs
jo
stc
rolb
out
sub
daa
loopne
daa
adc
cmpsl
movsl
push
jge
aam
jno,pt
movsl
in
imul
adc
sub
pusha
movsl
jmp
mov
xor
and
add
das
fadd
out
ja
imul
je
mov
mov
adc
out
cmpsl
pop
in
push
jne
pop
shll
pop
lods
js
aam
mov
xor
dec
pop
in
aas
and
movsl
mov
outsl
sub
mov
xchg
sbb
inc
jp
xlat
insb
js
xorl
out
xchg
mov
int
sub
xor
push
inc
clc
sub
jae
and
out
dec
out
test
mov
push
pop
imul
mull
sub
insl
mov
insl
rcll
imul
in
aad
imul
in
cmp
and
inc
pop
push
mov
pop
in
bound
push
push
stos
mov
xor
shl
xor
call
cmpsl
mov
insl
in
sub
rorl
jo
test
ja
and
outsl
les
data16
daa
sti
mov
test
push
gs
insl
call
es
pop
lods
gs
push
dec
cmpsl
lret
jne
xchg
stos
sub
stos
inc
aas
mov
and
push
cmp
or
jno,pt
push
and
movsl
loope
movsl
loopne
xorl
lock
sub
fisubl
rcr
aaa
stos
imul
sub
aad
and
adc
inc
inc
movl
mov
outsl
in
sbb
cs
imul
lods
pop
test
and
pop
sub
mov
fucomip
mov
xlat
imul
fld
movsl
insb
pop
nop
aas
popa
sbb
test
pop
mov
aas
gs
push
insb
adc
jmp
xor
aad
mov
inc
and
xlat
mov
mov
xchg
aad
imul
andl
outsb
dec
push
popa
push
sub
jnp
pop
sub
xor
sub
mov
pop
mov
bound
scas
add
lahf
in
add
add
aad
mov
xlat
lods
in
cmp
inc
pop
out
popa
inc
and
bound
sub
cmpsl
in
push
cmc
adcl
cmpsb
jbe
call
loop
adc
mov
cmp
test
xor
mov
sti
scas
lds
rcl
popa
lock
push
pop
xchg
out
inc
out
rolb
insl
cs
ds
lret
mov
jge
out
jno,pt
movsl
rcrb
push
inc
mov
mov
aas
push
int
ret
sbb
out
fwait
lds
ficoms
xchg
dec
inc
pop
fsts
out
and
pusha
pop
xchg
cmp
loop
loope
out
pushf
mov
iret
sarl
sbb
fldl
cmp
jmp
dec
daa
and
in
loope
sub
add
out
test
fidivrl
inc
imul
repz
mov
ljmp
dec
push
popa
pusha
cmp
mov
enter
add
movsb
jecxz
mov
inc
out
das
loope
sahf
xor
sbb
cmp
icebp
sub
sub
and
adc
je
push
lods
loope
cmpsl
jmp
ljmp
int3
imul
sub
and
loope
pop
bound
loop
lods
or
mov
jne
or
or
aad
fsubr
data16
out
call
inc
out
jmp
sub
out
push
loopne
pop
hlt
mov
shrl
jmp
push
adc
data16
loop
loope
fisubs
sahf
inc
stos
jmp
cld
adc
sbb
mov
lods
push
addr16
xchg
jno
out
into
sbb
mov
sar
out
insl
adc
push
dec
test
out
jne
gs
add
insl
fidivrl
lock
inc
scas
movsl
inc
sub
scas
pop
out
stos
adc
xchg
aad
inc
inc
int
jl
and
xor
push
stc
mov
addr16
xlat
sub
xor
cmpsb
inc
sub
imul
call
and
xor
test
xor
test
inc
mov
pop
shlb
aaa
daa
pop
mov
pusha
pop
lods
pop
mov
and
out
dec
jo
lods
cmpsb
loopw
out
rclb
xor
outsl
push
jo
pop
lods
push
adc
ret
push
push
scas
daa
in
popa
das
add
scas
stos
mov
adc
sub
mov
das
shlb
jmp
push
mov
data16
ljmp
adc
lods
inc
sub
insb
cmpsb
insl
call
adc
insl
popa
jo
outsl
xlat
lods
pop
bound
imul
push
gs
dec
push
bound
and
cs
out
daa
lods
popa
jo
das
inc
out
and
in
daa
stos
popa
insw
and
test
out
pop
xchg
dec
rcll
jmp
lods
in
jo
test
push
and
fisubrs
js
out
loop
sub
nop
test
in
in
inc
adc
inc
loop
xor
outsl
mov
insl
ret
and
xchg
mov
lock
gs
xchg
xchg
pop
mov
in
shlb
iret
sbb
cltd
mov
mov
insl
ret
xor
fstpl
cwtl
movsl
and
mov
nop
in
and
stos
in
and
mov
xor
inc
lret
sub
ljmp
and
push
and
and
pop
ja
hlt
mov
call
pop
push
js
pop
sub
ds
mov
jp
subl
dec
lods
js
cmp
es
lcall
inc
lods
clc
mov
inc
sub
push
sub
addr16
push
xor
sub
xor
cs
loope
stos
insl
shll
sub
dec
add
mov
sub
gs
in
push
cmp
movsl
imul
fwait
test
in
bound
adc
dec
scas
pop
sub
sub
lcall
push
jmp
bound
push
fcompl
mov
loope
sub
push
push
arpl
and
daa
insl
scas
jb
and
push
xor
out
loop
outsl
test
pop
insb
dec
imul
das
ljmp
inc
adc
push
inc
and
daa
cli
and
pop
insl
dec
imul
xchg
push
mov
out
ljmp
popa
cmpsb
pop
movsl
jbe
lods
jae
aad
push
in
mov
mov
push
aad
and
insl
mov
push
mov
scas
stos
pop
cmpsb
sbb
stos
test
and
pop
in
outsb
jp
rcrl
addr16
pop
call
imul
sub
scas
mov
jbe
push
inc
push
inc
xchg
jnp
jmp
ret
lods
out
es
push
gs
xor
xchg
xor
pop
and
xlat
daa
mov
stos
pushf
xlat
adc
call
pusha
ret
fdivrs
insb
mov
push
test
push
push
fcmovbe
lret
adc
pop
ret
addr16
in
imul
xchg
imul
sub
in
mov
and
dec
push
test
xchg
jnp
jmp
test
lods
jge
stos
test
sub
daa
mov
cs
shll
cmp
gs
mov
gs
pushf
rcll
jge
call
jge
lods
fwait
rcll
jge
loopne
dec
xor
iret
pop
ret
fstl
mov
in
jnp
dec
xchg
jns
adc
insl
shll
and
ret
dec
xor
stos
stos
pop
ret
insb
mov
adc
in
pop
fldenv
call
bound
inc
outsl
pop
sub
mov
cmpsb
fsub
mov
push
mov
cs
cltd
sub
ret
cmpsb
in
mov
movsl
ljmp
mov
in
das
sub
insb
stos
sub
outsb
push
cmp
gs
cmpsb
data16
fsubrs
cltd
daa
divl
adc
mov
sub
adc
cmpsl
mov
pusha
imul
xlat
mov
adc
pop
scas
push
stos
pop
imul
mov
in
fstl
inc
sub
sub
inc
sub
in
push
stos
and
mov
pop
xchg
push
fistpl
in
fwait
imul
push
call
sub
stos
lods
push
pop
sub
sub
test
sub
cs
xor
jmp
xlat
cmpsl
aad
repnz
adc
insb
cltd
inc
sub
js
jo
lods
adc
pop
repnz
and
ficompl
popa
fadd
jo
dec
test
test
mov
dec
imul
in
aam
aam
ljmp
push
fsub
notl
inc
cmp
gs
push
popa
popa
out
les
lods
call
fdivl
push
out
cmp
gs
push
mov
out
addl
int3
dec
sub
cmp
push
cmp
daa
xor
in
pop
inc
out
push
adcl
dec
lds
insb
adc
call
xchg
fsubr
sub
push
xchg
or
jae
push
movsb
and
sub
cmpsb
gs
fdivs
or
sub
mov
cmp
sub
push
push
loop
das
inc
and
out
scas
xchg
sub
in
bound
sbb
jl
insb
scas
pop
imul
xlat
sub
adc
scas
pusha
imul
dec
push
push
pop
ljmp
out
adc
sub
cmp
out
dec
in
dec
lahf
outsb
leave
adc
insb
cltd
sub
movsl
sub
test
pop
stos
dec
test
cmpsb
in
adc
mov
mov
jmp
sbb
mov
mov
test
insb
test
ret
test
inc
xor
mov
xchg
jae
outsb
push
sub
aad
and
mulb
xchg
in
xor
pop
inc
cmp
lds
aam
data16
cmp
test
scas
mov
in
xchg
xchg
jbe
xchg
mov
gs
addr16
addr16
dec
out
dec
gs
fsubl
adc
jae
enter
mov
gs
nop
gs
popa
addr16
add
dec
fstps
das
fildll
sub
loopne
loopne
cmp
rol
bound
aam
data16
xor
sub
fsubrl
movsl
rcrl
jno
adc
movsl
xchg
xor
adc
movsl
jmp
push
adc
movsl
jmp
push
adc
ret
movsl
addr16
fsubl
dec
add
adc
ret
movsl
out
daa
add
push
nop
xor
cmp
bound
lret
cmpl
bound
scas
and
imul
inc
popa
in
fldt
pop
jne
and
xor
adc
fs
faddl
sub
ljmp
jo
sbb
sub
push
and
data16
ja
mov
lock
imul
lods
push
imul
out
push
pop
test
push
lods
jne
subl
popa
jge
divb
aam
mov
pop
mul
sub
sub
pop
push
and
and
pop
dec
insl
lock
sub
je
pop
data16
sarw
shll
out
pop
adc
in
and
imul
xchg
aad
adc
je
dec
adc
in
inc
fldt
add
popa
dec
outsl
sub
shrl
jae
and
adc
in
mov
dec
aad
subl
dec
sub
push
and
arpl
js
ret
xor
mov
out
stos
out
pop
adc
cs
insb
popf
adc
xor
das
sub
xor
aam
aaa
imul
loope
pop
mov
mov
mov
push
push
lds
push
sub
sbb
ret
loope
sub
mov
je
mov
mov
out
aaa
insl
pop
in
push
js
insb
mov
xor
aad
in
jg
cmpsb
stos
mov
jnp
outsb
mov
dec
xchg
mov
sub
push
xchg
sub
push
xchg
fstl
inc
out
adc
inc
stos
repnz
add
xor
cmp
or
imul
scas
imul
stos
adc
sub
test
push
pop
outsb
mov
xor
in
push
push
dec
data16
and
xchg
popa
shll
fisubrs
fstl
inc
cmpsl
adc
int
shrl
mov
adc
aam
xchg
sub
movsl
dec
cli
nop
in
xor
popf
mov
fsubs
sub
dec
test
fucomp
inc
cmpsb
call
mov
insl
or
test
push
and
adc
adc
daa
out
popa
lods
fnsave
scas
and
sub
imul
and
call
loope
aam
xchg
popa
outsb
sub
dec
sub
sub
frstor
push
es
loope
xchg
inc
xchg
and
scas
daa
stos
popa
test
xor
ret
push
push
arpl
pop
ret
jo
add
scas
mov
bound
pushf
push
negl
insl
inc
sbb
aam
in
pusha
mov
fstl
inc
scas
xchg
out
pop
out
pusha
out
rorl
push
sub
fstl
inc
in
and
cmpsb
insl
in
fisubrs
popa
popa
fstl
aam
xchg
outsb
pop
sub
popa
out
fucomp
inc
jmp
dec
or
cmp
popa
mov
sub
notl
movsl
out
addr16
jno
scas
push
in
loop
loop,pn
sub
and
push
call
gs
mov
stos
mov
in
bound
inc
or
and
lea
call
pop
add
ret
clc
loope
mov
outsb
jae
push
or
inc
cmpsb
xor
push
dec
dec
loope
xchg
ss
dec
in
cld
orl
in
aas
es
sbb
sub
xor
cltd
jno
adc
push
sub
ret
movsl
bound
in
xchg
aam
add
adc
push
movsl
in
mov
or
cmpsl
es
sub
xor
xchg
inc
mov
adc
pop
movsl
pop
popa
sbb
outsb
movl
ret
push
adc
or
add
cwtl
movsl
adc
push
movsl
cmp
mov
test
and
loop
mov
cmp
cmpsl
adc
push
inc
in
in
cld
test
pusha
adc
shlb
mov
xchg
adc
jp
adc
fsubrs
insb
dec
test
cmpsb
outsb
inc
xor
call
push
mov
pop
sub
out
pop
stos
push
and
jmp
cmpsb
mov
sub
jae,pn
xlat
out
cli
sub
cwtl
push
pop
jae
inc
popa
fmul
outsl
jae
aad
push
jae
xlat
sub
outsb
aas
mov
mov
push
adc
pop
popa
push
outsl
test
insl
insb
sar
nop
test
in
fsubs
fbld
mov
push
lret
mov
out
adc
mov
lds
inc
ljmp
outsb
sub
outsb
lods
test
call
aad
push
pop
shlb
fst
movsl
inc
adc
push
push
scas
popa
lods
inc
out
and
sub
imul
in
and
mov
insl
pop
mov
out
daa
sub
push
addr16
mov
inc
xor
lock
pop
imul
popf
gs
pop
fstl
inc
mov
in
dec
scas
dec
mov
cmp
sub
jmp
movsl
add
aad
push
push
dec
cs
sub
inc
test
cmc
sub
dec
mov
fnsave
inc
lock
gs
daa
daa
loop
mov
call
push
fcoms
mov
out
addb
sub
imul
es
je
push
and
popa
daa
adc
aam
out
inc
xor
outsl
push
imul
popf
in
pop
fstl
inc
mov
rorl
daa
xor
jmp
and
call
fstl
and
sub
ljmp
and
xchg
sub
push
addr16
mov
popa
aam
cs
insl
and
outsl
pop
cs
sub
imul
push
sbb
movsl
call
daa
popa
popa
adc
push
inc
scas
and
das
pop
push
imul
mov
xlat
pop
gs
das
sar
sub
je
cmpsl
aad
jo
adc
mov
mov
out
aam
out
stos
pop
jae
out
in
imul
repz
push
sub
call
pop
and
xchg
mov
daa
add
ss
dec
imul
mov
bound
xor
dec
gs
movsl
loope
xor
rcl
and
stos
cmpsb
sub
imul
sbb
jmp
test
shll
sbb
movsl
rcrl
movsl
adc
cmpsl
xchg
xor
push
adc
mov
push
insb
sub
xor
in
pop
fisubl
fldt
leave
aad
in
mov
scas
sub
add
popa
ret
shrl
js
cli
and
push
adc
mov
pop
jmp
imul
pop
not
test
imul
popa
imul
cmpsb
test
inc
outsb
sbbb
push
jno
xchg
adc
jmp
adc
addr16
scas
cmpsb
repz
sub
addr16
cs
or
pop
outsl
sub
outsl
pop
mov
add
hlt
out
sub
sub
scas
shll
hlt
push
adc
pop
outsl
or
movsl
add
gs
test
or
add
sub
mull
fdivr
dec
shrl
cs
push
and
pop
jmp
insl
and
ja
dec
add
clc
mov
mov
cmp
jbe
mov
pop
add
dec
jno
movsb
popa
jecxz
cmp
dec
repz
outsl
adc
insb
lods
je
sub
out
aam
sub
adc
int
aam
and
xchg
push
out
scas
pop
cmpsl
lds
adc
das
sbb
add
jmp
xor
cmpsl
mov
push
or
dec
lcall
cmpsl
inc
aaa
sub
adc
sub
jo
adc
xor
sub
andb
cmpsl
dec
fsubs
addr16
lds
sub
push
mov
dec
sub
clc
sub
mov
andl
insb
out
and
dec
push
lods
sub
cmp
std
adc
insl
loope
mov
lds
aaa
sub
imul
jbe
rcrl
sub
mov
scas
cs
cmp
xor
mov
ret
xor
mov
lods
repnz
das
sbb
cmpsl
daa
lods
in
jb
push
cmp
mov
xchg
movsb
jmp
inc
sub
popa
xor
in
scas
xor
mov
mov
fsubl
js
fdivrl
cmpsl
sub
test
divl
sti
sub
in
test
insb
pop
push
jl
gs
mov
pusha
sub
daa
push
xor
push
pop
pop
push
test
call
add
imul
inc
sub
dec
sub
adc
pop
xchg
test
dec
push
loope
dec
insl
jo
test
and
fcoms
sub
dec
insb
insl
push
test
jno
dec
in
stc
mov
jge
lods
leave
stos
push
imul
scas
and
addr16
adc
vmovaps
shll
hlt
aaa
out
imul
sub
ret
outsb
cltd
popa
push
push
cmc
loop
aaa
pop
jb
mov
in
fnstsw
rcr
daa
js
add
xchg
mov
and
test
es
jno
in
mov
out
inc
and
es
push
inc
bound
js
in
imul
mov
bound
nop
imul
mov
adc
std
sub
fsubs
les
xchg
int
sub
mov
add
jle
adc
in
inc
jmp
fsubrs
scas
cmpsb
add
popa
int
jae
cltd
push
and
test
mov
fstps
mov
arpl
pop
rcll
sbb
push
mov
out
add
or
or
lods
out
mov
and
leave
adc
pop
mov
out
div
inc
lret
sbb
hlt
movsb
test
dec
sti
out
adc
cld
fwait
push
lret
fcoml
and
hlt
ja
js
jl
cmpb
incb
movsl
adc
js
fimull
popa
or
mov
gs
and
pop
das
push
pop
dec
aas
daa
dec
popa
loopne
outsl
inc
jg
add
push
in
aad
pop
cmp
adc
push
cmp
into
inc
mov
adc
or
in
lds
adc
inc
pusha
pop
xor
out
inc
subl
push
xchg
and
xor
ds
adc
pop
stos
addr16
xchg
jne
andl
xchg
faddl
pop
adc
hlt
je
add
push
cltd
mov
jmp
push
stos
xor
movsl
imul
and
jmp
inc
push
sbb
aad
push
iretw
xor
xchg
in
std
or
xor
in
xchg
pop
mov
dec
mov
pusha
daa
inc
imul
jbe
es
imulb
mov
subl
mov
inc
jne
and
fidivrs
fildll
inc
jo
add
std
icebp
inc
scas
push
mov
movsl
jg
and
out
popa
dec
fiaddl
and
jb
or
push
push
xor
and
das
push
sub
sub
adcb
cmp
shll
fstl
insl
mov
push
add
adc
je
repz
imul
adc
sbb
aam
push
push
push
stos
sub
insb
xor
adc
in
sbb
lcall
xchg
inc
ljmp
out
test
shl
or
cmc
xchg
aam
cmpsl
insb
jecxz
mov
lret
mov
pop
ljmp
repz
push
mov
imul
dec
pop
adc
out
add
mov
mov
icebp
inc
xor
test
sub
sbb
imul
or
sbb
mov
imul
outsl
mov
push
cmpsl
outsb
cwtl
ficoml
xchg
adc
subl
push
push
cmc
inc
gs
inc
les
xchg
push
dec
pop
pop
add
insb
shl
cs
daa
repz
ficoml
sub
cmp
push
inc
shll
push
xor
andb
mov
rolb
mov
inc
jae
mov
xor
xchg
arpl
and
cmp
push
push
cs
popa
push
push
mov
cmp
sbb
xchg
sub
aas
pop
or
notl
jge
in
dec
push
out
es
aad
push
rclb
push
xchg
loopne
pop
repnz
jno
aas
cwtl
sbb
xor
loope
out
hlt
cmp
cmp
push
movsb
push
outsl
out
in
mov
add
out
into
cmp
fsubp
lods
push
imul
jne
mov
push
sub
pop
inc
or
xor
and
sub
adcb
rclb
dec
subl
and
bound
inc
aaa
xorl
xchg
push
inc
mov
bound
subb
xchg
cmc
fcmovnu
les
sti
lds
inc
in
imul
imul
insb
in
and
adc
adc
push
sub
pusha
in
sahf
in
sub
cs
mov
xchg
sub
xchg
imul
stos
imul
insl
pop
jl
push
and
rol
outsb
dec
lods
jl
push
sub
mov
dec
xor
aad
push
mov
outsb
js
pop
test
adc
cli
jle
push
mov
outsb
dec
jle
xchg
mov
in
imul
jno
in
adc
enter
gs
repnz
movsl
out
fsubp
loope
jmp
fsubl
cmpsl
lcall
adc
imul
or
fsubs
test
roll
xchg
sbb
pop
or
jmp
adc
data16
jmp
mov
jnp
sub
insl
xchg
ljmp
in
sub
shrl
scas
sbb
mov
xchg
mov
fidivl
gs
aad
inc
adc
push
cltd
aam
dec
dec
imul
clc
push
stos
call
sarl
shrl
insl
aam
aad
daa
push
and
mov
sub
lods
pop
push
in
adc
xchg
mov
xchg
out
fsubl
mov
addr16
jge
mov
xchg
test
sub
fists
ret
shrb
inc
fdivrs
mov
cmc
andl
inc
in
ds
or
in
scas
andb
and
aam
and
push
adcl
sub
scas
aad
and
sub
adc
js
jmp
jae
out
imulb
sub
stos
test
subl
lods
test
mov
xor
std
sub
in
push
xor
xchg
fbld
push
xchg
dec
das
jno
push
and
add
xor
add
fsub
mov
mov
int
cld
outsb
inc
imul
out
pop
adc
loope
sbb
add
push
mov
lods
mov
in
repz
adc
sub
shll
outsl
aad
repz
data16
es
in
bound
ret
inc
sub
xchg
add
jl
icebp
mul
icebp
cmp
js
stc
scas
icebp
ret
and
push
cmpsl
dec
sub
xlat
lods
mov
sbb
inc
sub
fldenv
adc
and
sub
scas
fs
or
stc
jne
test
push
fsubl
mov
mov
imul
xor
ret
pop
test
movsl
dec
mov
daa
dec
dec
and
push
sub
dec
bound
test
mov
data16
dec
adc
insl
popa
sub
daa
sub
mov
sbb
sbb
or
cmpsb
ds
cmpsb
in
fsubrl
andl
push
cs
sub
inc
gs
cs
mov
sub
ret
movsl
clc
in
aam
sub
fsubs
xor
xchg
mov
push
test
adc
sub
sub
popa
shr
iret
and
inc
fdivr
push
cmp
jl
mov
jle
ja
mov
or
in
sub
stos
xchg
int
jecxz
sbb
jns,pn
mov
add
bnd
push
and
out
ljmp
hlt
xor
insl
cmpsb
call
sub
shrl
jmp
sub
data16
aam
dec
imul
aam
out
jp
sbb
mov
dec
insb
adc
es
outsb
incl
loope
and
fsubrs
sub
sub
push
fimull
dec
jno
es
stc
int
or
test
sub
test
scas
stos
ja
jno
adc
outsb
js
pop
data16
mov
pop
and
out
dec
lds
insl
sub
popa
cmc
pop
push
adc
popa
mov
in
cmp
and
in
bound
lret
xchg
in
or
sub
jbe
inc
cmpsb
adc
out
enter
gs
mov
dec
jl
sub
pop
imul
out
mov
aam
in
push
aam
pop
call
fstl
mov
sub
gs
popa
lahf
sarl
xchg
xor
push
mov
jmp
cmpsb
movsl
ja
imul
pop
das
cmp
iret
add
ljmp
insl
addl
lods
call
sub
popa
pop
jae
popa
or
push
sub
push
repnz
adc
lea
adc
sub
mov
adc
add
cmp
cmpsl
jne
insl
sub
insl
scas
insl
sub
jmp
push
out
dec
adc
cmp
sub
test
cmp
mov
jmp
icebp
insl
pop
lods
aad
sahf
sub
stos
lods
or
sahf
bound
mov
xor
mov
in
push
lcall
xor
add
dec
aam
test
repz
jo
lds
scas
push
movl
fsubs
jo
push
push
lock
sub
outsb
lock
jge
gs
test
and
sub
shrl
andl
and
divl
mov
scas
fucomi
out
or
fsubp
mov
push
cmc
dec
pop
jno
movsb
fstl
inc
cmp
cli
dec
jnp
mov
sbb
mov
in
mov
fisubs
lret
leave
adc
adc
sub
pop
push
lods
mov
leave
in
bound
sub
das
es
mov
cs
int
into
xchg
adc
adc
lcall
cmpsl
into
repnz
mov
fists
xor
decb
into
adcl
adc
cmpsl
test
das
push
imul
sbb
jp
push
test
adc
fmul
push
scas
mov
sub
lds
aad
sub
stos
sub
cs
imul
or
addr16
aaa
sub
repnz
sub
in
xor
bound
xlat
adc
cmp
fisubs
push
imul
in
add
call
jo
xor
cmp
jmp
mov
mov
gs
and
or
test
outsb
fnsave
hlt
cmpsl
aas
adc
aam
sub
ss
scas
ss
stos
xchg
mull
cmpsb
sub
dec
fcmovbe
test
sarl
icebp
aas
aam
xchg
pop
in
in
cmp
in
dec
add
hlt
xlat
cs
inc
ljmp
cli
mov
xchg
cli
xorl
jae
aad
push
and
out
pop
jo
shrl
inc
inc
push
xor
insb
divl
push
shll
jmp
add
out
push
adc
out
bound
in
add
test
mov
pusha
xchg
pop
add
lea
aam
mov
inc
push
cmp
mov
push
shrl
in
push
adc
push
dec
stos
jge
addr16
push
in
movsl
fucomi
insl
push
aam
mov
insl
push
adc
xchg
fidivrl
bound
push
inc
fmuls
adc
dec
lock
ret
icebp
test
pop
lret
fidivrl
jl
sub
data16
rcpps
jne
popa
int
and
push
push
addr16
mov
xor
dec
mov
jmp
aad
dec
adcl
mov
sarl
mov
dec
xchg
pop
lds
in
loopne
shrb
sub
test
sub
push
adc
pop
test
clc
hlt
out
pop
sub
das
lods
pop
inc
lock
bound
aad
insl
cwtl
lret
or
outsb
popf
adc
or
call
daa
jl
mov
push
mov
push
icebp
fdivrl
mov
dec
data16
call
push
popa
adc
push
mov
rcrl
sbb
outsb
push
xor
leave
imul
fcmovnb
jmp
outsl
sti
inc
xchg
stos
mov
stos
aam
mov
test
aam
add
pop
jmp
and
pushf
adc
mov
outsl
popf
int3
data16
inc
out
fs
lock
lock
and
icebp
mov
leave
imul
sbb
mov
sub
xchg
adc
out
jbe
gs
xor
pop
mov
jns
sub
das
add
sub
movsl
lret
xor
std
bound
jnp
sub
push
out
imul
in
dec
xlat
bound
push
dec
sahf
loop
stos
xor
xor
sub
cli
pop
sub
lods
lahf
sub
xlat
imul
into
mov
outsl
es
imul
sub
imul
sbb
es
pusha
lods
push
jmp
sti
stc
push
cld
arpl
mov
sbb
sub
imul
daa
or
rorl
adc
cmp
lods
popa
pop
das
pusha
pop
and
aad
aad
inc
aam
cmpsb
test
call
push
jmp
mov
pop
mov
movsl
out
adc
cmpsl
and
gs
push
push
test
sub
push
mov
dec
push
cmp
push
insb
cmpsl
scas
pop
pop
mov
fsubrs
es
sub
rcll
and
and
mov
and
sbb
insl
out
sbb
mov
sti
sub
xor
mov
xor
loope
xor
mull
in
lret
lock
sub
insl
in
sub
jg
sbb
nop
inc
stos
mov
movsb
jmp
and
inc
in
aad
and
pop
mov
in
or
fdiv
sbb
addr16
daa
cmc
mov
outsb
xchg
jge
sub
xchg
stos
outsb
dec
push
loope
subb
andl
jge
jo
and
cwtl
add
adc
outsb
outsb
jo
and
push
nop
sub
jge
sub
xchg
inc
mov
in
push
popa
leave
fldt
sub
jne
ja
pusha
mov
stos
xchg
scas
and
mov
cmc
dec
imul
dec
js
outsb
out
test
jge
aam
ret
jmp
cmp
insl
sub
cs
rolb
push
pop
mov
push
loopne
add
lods
fadds
aam
add
mov
stos
adc
adc
mov
xchg
dec
jmp
loope
dec
pop
lock
dec
jge
movsl
mov
adc
dec
mov
mov
fildll
enter
mov
enter
ja
fadds
push
xchg
inc
movsl
clc
in
das
and
adc
lock
test
jge
scas
mov
push
imul
and
jle
mov
popa
jns
mov
add
js
pop
repnz
and
dec
insb
out
xchg
add
adc
mov
inc
push
pop
mov
scas
pop
imul
and
bound
cmpsl
fldl
mov
scas
aam
fs
fsubrs
pop
sub
and
es
popa
sbb
inc
bound
int
test
xor
sub
push
sub
sub
movsl
inc
adcb
daa
add
frstor
stos
shll
sub
mov
daa
bound
push
movsl
jmp
scas
sub
push
daa
xor
jle
mov
imul
data16
mov
cld
pop
call
popa
sub
ljmp
push
pop
out
sub
in
sub
sub
sub
cltd
ret
addr16
mov
xor
sub
mov
pop
movsl
push
cs
je
out
adc
and
sub
pop
inc
push
and
push
sub
roll
hlt
fcoml
outsb
push
dec
mov
dec
outsl
xor
sub
scas
mov
jge
mov
mov
adc
lods
mov
sub
movsl
loopne
ret
and
xor
dec
push
addw
pusha
in
ret
in
jmp
push
xor
aad
xor
push
outsl
stc
mov
imul
in
push
xlat
movsl
imul
adc
push
push
addr16
dec
sub
test
in
add
das
daa
push
jmp
scas
fsubrs
dec
xchg
adc
push
es
daa
ja
mov
aam
outsb
jl
mov
movsl
jmp
imul
push
stos
cmpsl
pop
mov
pop
ret
popa
push
ret
sub
adc
sbb
mov
push
mov
mov
insb
xor
popf
mov
xchg
cmp
popa
cmpsb
movsl
cmpsb
push
imul
pop
push
scas
test
xchg
mov
lods
imul
adc
adc
inc
fsubr
push
push
sub
cmpsb
std
test
nop
packuswb
popa
sub
aad
sub
adcb
fldt
push
out
xchg
push
cmpsb
mov
xchg
loope
ror
movsl
push
in
add
sub
leave
in
lods
inc
scas
mov
jmp
sub
in
gs
movsl
lret
adc
cmp
aaa
push
push
enter
sub
sub
pop
jnp
imull
ljmp
les
aad
pop
out
outsl
rcll
in
pop
xchg
sub
rcrl
xor
cli
pusha
popa
addr16
and
xchg
sub
test
popa
pop
lock
aad
pop
pop
mov
and
outsb
in
and
ljmp
cld
push
and
lds
in
fcomp
cs
push
fstl
fadds
inc
sub
pop
push
and
stos
jbe
pop
mov
movsl
cmp
dec
xor
in
add
dec
div
xor
in
ja
mov
xor
dec
push
hlt
cmpsl
sub
js
dec
outsl
cmp
mov
leave
shll
imul
aaa
das
scas
push
xor
adc
jle
mov
inc
xchg
test
addb
pop
dec
cmp
sub
mov
outsl
shr
pop
imul
or
lahf
sub
and
les
cmp
dec
test
test
das
sldt
and
movsl
mov
lods
fsubs
inc
sub
xchg
mov
xchg
jns
call
lods
sbb
jo
push
fidivrl
push
pop
xchg
sbb
mov
xor
out
sub
push
sub
mov
or
dec
rcr
mov
outsl
pop
sub
lods
daa
in
xor
aad
scas
test
jge
adc
mov
jle
addr16
out
mov
xlat
push
push
xor
sub
dec
les
sub
dec
test
shrl
inc
out
lods
sub
imul
lock
cmp
ljmp
subl
or
mov
sub
imul
out
sub
lods
mov
sub
test
aaa
sub
bound
push
fstl
inc
jp
mov
jne
inc
mov
frstor
and
inc
pop
jg
mov
fnsave
mov
cmpsb
dec
scas
xchg
aam
mov
mov
dec
xchg
popf
mov
std
sbb
xchg
daa
lods
call
imul
in
lahf
xchg
inc
bound
cli
insl
sbb
push
loop
insl
hlt
xchg
and
test
mov
insl
inc
das
and
cmc
mov
in
movaps
mov
loope
cs
mov
outsb
pop
in
or
lock
daa
addr16
in
jmp
lock
push
stos
add
push
aaa
loop
sub
lret
pop
adc
inc
insl
sti
mov
sub
pop
gs
jb
ret
out
xchg
dec
sub
lock
and
outsb
dec
mov
loope
push
jmp
hlt
xor
insl
inc
adc
jmp
pop
aam
jle,pn
stos
call
insl
sbb
dec
outsb
add
dec
imul
and
jmp
insb
pop
out
pop
and
push
popa
lods
daa
inc
lock
imul
jbe
push
pop
mov
addr16
and
dec
sub
dec
inc
faddl
sub
packuswb
jmp
std
sub
mov
inc
xchg
add
inc
scas
mov
in
rcll
push
scas
jmp
xchg
das
dec
sbb
sub
fsubrl
stos
sub
sbb
sub
lock
insb
loope
aaa
jp
in
stos
mov
loopne
enter
sbb
mov
pop
in
ljmp
orl
out
or
jge
mov
mov
outsb
inc
pop
xchg
jp
call
push
and
rolb
jle
stos
mov
push
dec
out
scas
or
stos
push
dec
daa
sarl
fsub
movsl
sbb
mov
and
and
insl
push
dec
out
mov
aam
push
lcall
les
rorl
fsubp
test
subl
in
xor
jmp
insl
subl
push
loope
jno
insb
les
bound
xor
out
adc
in
daa
in
aad
sbb
test
xor
aad
aad
mov
mov
mov
call
daa
js
loope
jmp
gs
in
dec
push
pop
gs
in
stos
out
ja
sub
pusha
outsb
inc
xor
les
sub
jl
mull
outsl
jno
les
adcl
adc
scas
les
add
push
sub
daa
in
xchg
loop
sub
in
test
sub
jno
cmpsl
cli
inc
push
js
dec
and
aam
and
test
addl
lods
addr16
insb
sbb
shr
jae
push
and
xor
jmp
cmp
fsubs
adc
sbb
jmp
or
xchg
push
jae
ficoml
fildl
xorl
mov
jno
aaa
cmpsb
dec
scas
sbb
mov
sub
pop
insl
push
xchg
mov
sbb
add
pop
les
aam
orl
dec
scas
daa
lds
fdivl
andl
xor
out
push
in
xor
enter
icebp
in
aad
xor
enter
jo
test
in
dec
popa
jle
stos
dec
std
sbb
ljmp
cmpsb
loopne
cmc
mov
lods
or
scas
aad
out
mov
jae
loope
sub
inc
push
and
lock
inc
xchg
push
mov
leave
adc
adc
sbbl
les
rcll
xor
loope
and
jae
gs
push
pop
call
cli
sbb
xor
repz
out
push
test
mov
inc
pop
push
push
je
out
and
call
dec
inc
jge
inc
xchg
cwtl
xor
gs
in
enter
in
cs
aas
sbb
xorl
xor
jmp
push
sub
mov
adc
xor
subl
in
push
pop
fst
cmp
xchg
aaa
out
jmp
sbb
out
jo
add
out
mov
mov
test
jle
adc
adc
popf
fsts
fldcw
cmc
loop
loopne
pop
icebp
jnp
mov
inc
adc
je
jmp
js
push
les
xor
push
dec
test
repz
adc
and
mov
out
add
idiv
dec
out
lahf
xor
stc
aad
shll
cmp
fld
les
xchg
mov
lock
in
out
adc
adc
xchg
loope
push
in
xor
add
daa
xchg
push
jb
push
shlb
call
xor
and
arpl
aas
jecxz
jmp
push
leave
mov
jo
mov
mov
mov
push
push
jae
fsubrs
shll
icebp
lods
dec
adc
cmp
lds
xor
and
subl
dec
sbb
pop
xor
test
pop
adc
inc
cltd
mov
shll
sub
and
lock
cwtl
add
icebp
hlt
and
ds
loop
add
dec
scas
dec
jecxz
repz
in
cli
xor
cmp
js
lock
mov
push
insl
sub
in
popa
xchg
dec
vucomisd
sub
adc
and
and
jo
gs
int3
jmp
insl
sub
xchg
inc
call
and
imul
xor
sti
sbbl
push
xchg
hlt
out
imul
in
xor
imul
lods
xchg
fsubrs
dec
icebp
std
rolb
cmp
aad
mov
call
rol
cmpsb
xchg
cmp
les
mov
or
lea
aam
jae
xchg
test
les
rol
cmp
jecxz
dec
add
pop
inc
dec
gs
arpl
adc
add
fidivrs
mov
sbb
push
out
sarb
and
sub
inc
div
decb
movsl
ret
and
jns
imul
and
iret
call
cmp
das
and
xor
movsb
lock
std
dec
hlt
or
call
stos
dec
inc
dec
into
sub
subl
sarl
and
push
mov
leave
rcl
stos
outsb
and
data16
aam
shrl
jo
mov
divb
push
push
out
push
in
lds
test
popa
adc
dec
outsl
cs
popa
sub
lods
xorl
lods
bound
movsl
dec
stos
dec
and
push
scas
and
call
inc
stc
xchg
pop
and
push
outsb
popf
in
dec
push
out
lock
cs
pop
out
dec
jmp
sub
fsubrs
lds
jle
int
stc
mov
xchg
xorl
bound
pop
inc
push
ljmp
pop
dec
jno
lock
adc
dec
sbb
dec
push
mov
scas
and
adc
test
std
fstl
mov
test
ja
popa
ss
inc
dec
pop
test
mov
in
jnp
mov
out
loop
popa
les
iret
jns
push
aaa
icebp
jmp
in
push
mov
sub
jge
jns
xchg
stos
into
lret
insl
dec
xor
pop
call
pop
pusha
push
lock
sub
dec
imul
dec
inc
shll
xchg
push
scas
add
sub
aad
jns
test
and
movsl
sbb
dec
stos
mov
jge
in
adc
and
xorl
subl
jo
nop
dec
addr16
add
cs
jae
dec
test
cmpsl
adc
inc
mov
insl
sub
subb
inc
xor
dec
jo
test
lods
andl
and
inc
popa
push
push
enter
outsb
scas
test
adc
cmpsl
xor
lcall
shlb
xor
push
imul
jmp
popf
addr16
loope
sub
xor
imul
pop
mov
les
xor
jno
aaa
xchg
and
aam
lcall
or
enter
popa
jo
push
and
shrl
push
add
sub
push
scas
jge
jmp
mov
cld
mov
icebp
repnz
push
sbb
addr16
push
ds
addr16
sub
push
insl
jge
and
mov
mov
and
jmp
rorb
mov
scas
popa
aaa
lods
and
bound
adc
outsb
lret
repz
and
popa
aaa
jo
lock
fidivrl
xor
rorl
mov
scas
jge
test
fistl
xlat
loop
test
popf
in
dec
xchg
add
and
mov
ds
divl
dec
and
xchg
sbb
test
xor
dec
stos
add
shll
inc
adc
and
jmp
test
mov
in
popa
popa
test
lods
dec
push
add
cltd
rcll
inc
and
and
imul
cmc
in
xchg
jecxz
mov
jo
inc
orl
and
popa
aaa
stos
and
bound
std
fst
popa
icebp
sub
mov
pop
cs
sub
fidivl
out
pop
call
cs
leave
cmpl
mov
ljmp
push
push
sub
movsl
dec
insl
add
cmc
or
and
popa
ljmp
jmp
movsb
xor
push
call
cmp
push
test
jae
sarl
enter
bound
push
or
out
and
lods
push
xlat
inc
test
popf
pop
addr16
jne
mov
cltd
fucomp
out
xor
in
mov
std
hlt
fadd
inc
xor
xor
and
mov
push
movsb
addr16
adc
mov
loopne
mov
addr16
in
in
push
and
movsl
xor
stos
lods
xchg
push
aam
adc
mov
push
test
call
in
sub
jns
test
mov
jb
mov
pop
xor
loop
daa
mov
fldcw
adc
in
movsl
das
cs
out
jg
loop
das
lcall
shl
ja
leave
test
add
out
cwtl
sub
ret
in
sbb
pop
icebp
adc
mov
adc
push
in
xlat
mov
sub
xorl
outsb
mov
jg
incb
daa
gs
and
shll
subb
test
sbb
sbb
in
sub
dec
pop
aam
inc
call
or
push
lds
inc
sbb
call
jmp
xlat
insb
adc
data16
gs
je
bound
pop
push
xor
fimuls
shrl
aas
xchg
push
gs
addr16
out
push
es
stc
in
shlb
push
push
call
scas
mulb
or
bound
daa
adc
mov
in
std
pop
out
xchg
xchg
adc
inc
sub
sub
push
addl
ds
sub
gs
sub
scas
mov
push
jecxz
pop
push
adcl
lahf
cmpsl
jno
and
push
in
add
inc
xchg
inc
sbb
pop
int
incl
pop
push
mov
leave
in
xor
mov
jae
adc
adc
xchg
mov
shrl
into
pop
loope
cltd
adc
out
rcrl
lea
in
cmpsl
pop
sub
movl
test
mov
and
dec
loop
in
pop
in
and
adc
mov
sub
add
arpl
push
dec
cs
pop
xor
push
mov
and
ljmp
inc
hlt
loop
inc
mov
pusha
out
mov
das
nop
jl
cwtl
push
lock
pop
and
lret
in
lret
outsb
out
stc
xor
jmp
jo
fcomps
or
xor
sahf
in
mov
insl
and
std
and
or
shrl
push
stos
loopne
out
xchg
adc
mov
rcrl
add
rcrl
dec
sti
mov
sub
inc
daa
dec
inc
iret
adc
xor
sbb
mov
inc
cmpsl
xor
rcl
dec
adc
xchg
and
and
out
pop
cwtl
cltd
divb
cld
add
adc
pop
lods
orb
cmp
es
loop
sub
call
sub
je
outsl
fbld
add
cmp
out
xchg
and
xor
jecxz
add
outsl
and
shl
sbb
xchg
gs
xchg
dec
mov
jo
and
mov
daa
mov
inc
mov
shl
mov
dec
lods
in
mov
in
push
pusha
rep
mov
addr16
nop
and
imul
test
test
ret
fistpl
sub
mov
xor
out
xchg
xor
add
dec
loopne
push
arpl
mov
scas
in
add
sbb
xor
push
roll
xor
arpl
and
and
mov
xchg
cmc
gs
and
aam
adc
pop
add
fs
add
xchg
xchg
add
cs
in
data16
and
in
jmp
adc
sub
popa
aam
out
push
rep
rolb
inc
add
pop
insl
cmpsl
call
push
adcl
jae
jmp
aad
sbb
cmpsl
outsl
xchg
lods
jmp
aam
mov
aam
adc
mov
mov
repnz
and
imull
test
es
xchg
push
push
and
call
movsl
push
add
push
add
lock
xchg
add
sbb
addr16
aam
add
add
es
int
in
jecxz
ljmp
popa
incb
shlb
push
ficoms
fdivrl
mov
in
push
stc
shl
mov
xchg
aam
daa
xchg
loope
movsb
jne
icebp
les
inc
jecxz
xor
dec
push
sbb
inc
pop
and
mov
lock
push
sbb
mov
inc
cli
mov
sbb
ficoml
mov
test
ret
enter
hlt
mov
mov
popa
movsb
or
add
not
aam
arpl
xchg
stos
daa
je
in
in
sub
ficoms
mov
mov
bound
ret
xchg
dec
add
inc
daa
push
data16
or
insl
loope
comiss
pop
sbb
xor
mov
testl
popf
ds
leave
cltd
ret
loopne
push
xchg
ljmp
int
pushf
xchg
and
lret
xchg
push
enter
ja
or
xchg
jge
ljmp
pop
mov
jno
push
shlb
jae
sbb
push
shrl
int
popa
dec
sbb
nop
and
bound
dec
gs
mov
jecxz,pt
xchg
sub
fldenv
xchg
outsb
adc
sub
je
sahf
cmpsl
sbb
sub
cmpl
je
mov
int3
sub
push
bound
daa
int3
xchg
xor
xchg
push
mov
shrl
insl
ds
ja
inc
repz
outsl
test
popf
in
dec
sub
and
rcll
les
stos
push
je
lock
cmp
push
idivb
sbb
pop
cmpsb
aam
adc
xchg
add
sbb
jo
sub
and
movsl
and
rcl
lods
mov
and
adc
mov
insl
jae
lock
popa
loop
sbbl
std
nop
mov
imul
lds
lods
sub
jge
imul
jmp
loope
lods
lods
subl
les
outsb
jae
dec
mov
insl
jo
scas
clc
xchg
shlb
sub
enter
flds
cmp
call
imul
in
pushf
outsl
push
and
dec
imull
adc
gs
es
pop
cmpsb
sbb
dec
stos
adc
mov
jp
out
sub
inc
mov
and
push
jbe
int
into
je
call
cld
in
out
adcl
gs
add
add
sarl
aas
sub
fdivl
imul
pop
and
js
hlt
xor
das
xor
dec
fisttpll
pushf
pop
push
cmp
and
or
pop
mov
xchg
xor
bound
inc
xchg
xor
mov
out
dec
push
fistl
ljmp
mov
dec
stos
popa
das
push
sub
fsubrs
inc
xor
mov
icebp
sub
loope
xchg
out
outsb
ss
and
inc
xchg
jmp
pop
push
dec
push
lret
aaa
jmp
mov
cmp
and
bound
sub
aam
pop
jnp
loope
sub
mov
std
aam
mov
sub
xor
and
rolb
out
fdiv
add
add
je
nop
ljmp
push
out
ret
pop
add
icebp
adc
sbb
loop
inc
jecxz
adc
int
movsl
jno
adc
cwtl
mov
into
movsl
dec
pop
popf
ljmp
shl
gs
scas
mov
cs
pop
xor
and
sub
pop
xlat
and
pop
adc
add
xlat
push
out
ds
int
out
or
movsl
push
sub
mov
jae
ja
lret
call
ds
and
orl
xchg
jmp
and
pop
jp
mov
pop
out
xchg
push
inc
add
jg
lods
and
mov
jg
out
cmp
mov
inc
dec
fisttps
push
xor
popa
mov
fbstp
or
movsl
shlb
cs
or
inc
mov
out
leave
lods
xor
xchg
sub
add
add
repnz
out
pop
and
adc
add
jbe
ljmp
and
shlb
xor
add
push
ja
add
sub
in
mov
call
out
nop
or
insl
inc
jecxz
mov
push
sbb
xor
push
xor
stos
fsub
or
out
rclb
xor
out
mov
mov
stos
inc
sub
out
dec
ret
test
out
and
push
out
out
xchg
popf
iret
push
inc
adc
jle
fisttps
and
mov
ljmp
out
pop
and
and
add
leave
xchg
push
in
and
scas
loope
insl
adc
jns
enter
ret
mov
pop
cmp
mov
bound
jbe
lods
out
cmpsl
div
cmp
lods
add
and
leave
addr16
mov
mov
shll
iret
loopne
movsl
mov
cmpsl
xorl
mov
scas
in
dec
loop
in
cmp
xchg
xor
roll
xchg
pop
xlat
lret
aam
mov
and
add
jmp
mov
mov
mov
xchg
adc
push
jle
xor
and
shl
loop
push
js
adc
bound
push
pop
bound
jb
out
jnp
pop
negl
xor
mov
add
jae
out
add
notl
xor
xchg
mov
and
inc
lods
adc
icebp
mov
loope
insl
call
mov
loope
adc
jmp
pop
scas
jno
mov
sub
shll
pushf
popf
mov
push
sbb
xchg
fs
inc
movsb
sub
fdivs
call
outsb
sub
mov
add
or
add
lret
sub
fisttpll
and
xor
xor
pop
mov
out
sub
in
push
add
outsb
jmp
repz
sub
xchg
mov
lcall
outsl
dec
in
cmpsl
lahf
out
aad
xchg
add
mov
push
push
fcmovbe
xchg
shll
pop
testl
test
loop
sub
xchg
lea
mov
push
mov
xor
addr16
imul
in
pop
test
adc
movsl
push
jbe
or
int
shrl
fs
je
push
gs
in
and
xor
roll
in
mov
mov
pop
insl
popa
push
frstor
imul
out
movsb
idivb
rorb
mov
in
in
and
xor
aad
lods
shl
filds
inc
movsl
xchg
stc
mov
inc
add
bound
fsub
roll
lods
outsl
aam
daa
popa
mov
jo
adc
sub
mov
in
cmpsl
bound
addr16
subl
sarl
mov
scas
or
jae
in
movsl
jns
adc
in
gs
aam
jl
adc
sbb
xchg
gs
loopne
test
movsl
sahf
inc
rcr
ret
movsb
lds
bound
inc
shrl
pop
cmpsl
and
daa
movsl
daa
je
movsl
daa
add
adc
daa
daa
repz
movsl
in
popa
lds
shlb
in
lods
movsl
fdivrs
rorl
out
mov
andb
xor
loope
movsb
inc
out
shrl
xor
out
in
outsb
aaa
ss
imul
mov
xchg
insb
loope
adc
in
push
adc
push
sahf
mov
inc
jns
mov
inc
shrb
call
outsb
sub
in
shll
xchg
in
stc
loope
jne
add
sub
adc
sbb
add
outsb
nop
sub
out
cmp
ljmp
in
ret
in
xor
and
or
push
imul
cmpsb
out
and
insl
in
adc
shl
dec
aam
stos
inc
dec
mov
lods
add
stos
dec
push
dec
cmpsb
shrl
xchg
loope
enter
std
test
in
dec
inc
add
loopne
in
add
add
adc
lds
sub
xlat
mov
xor
int
dec
jle
loope
incb
inc
push
fidivs
xchg
inc
imul
das
and
xor
test
jmp
rcll
loope
ds
out
andl
adc
shll
dec
pop
outsl
int
imul
loope
push
loope
ds
inc
in
dec
mov
mov
gs
dec
loop
pusha
add
jne
cs
or
inc
fisttpl
jp
sub
jg
dec
xchg
scas
rcrl
std
sub
imul
inc
push
out
cmpsl
insb
xor
pop
out
in
mov
xchg
cmp
pop
popf
xorb
sbb
leave
mov
icebp
pop
imulb
imul
sbb
test
inc
push
xor
and
popa
loop
push
movsb
xchg
add
mov
sbb
lcall
xorb
cmpsl
jne
inc
inc
and
cmp
jbe
bound
lods
sub
sub
jmp
frstor
pop
pop
and
outsb
or
xlat
and
add
inc
mov
push
xor
pop
mov
and
pop
test
mov
mov
or
bound
adc
bound
or
scas
or
and
xlat
cmpsl
movsl
and
xor
sub
xor
push
clc
pop
popa
loop
nop
loopne
dec
ret
lods
in
dec
cmp
xor
add
mov
in
push
dec
mov
popa
push
call
xor
push
lcall
frstor
inc
in
xchg
pusha
and
ret
popa
repnz
cmpsl
pop
inc
mov
and
adc
lahf
mov
ss
and
add
dec
push
je
jne
imul
and
mov
dec
out
data16
add
ret
call
ljmp
mov
bound
and
sbb
in
xchg
pop
daa
mov
push
les
and
inc
xchg
mov
or
jecxz
pop
ret
push
dec
sub
push
add
shl
into
bound
data16
movsb
addl
rolb
out
add
xor
mov
in
je
out
out
xchg
ds
repnz
icebp
leave
es
xchg
push
repz
test
mov
imul
ja
movsb
dec
lret
stc
mov
shll
xchg
or
mov
hlt
ficompl
into
loopne
sbb
loop
repz
cmp
jge
lods
sbb
dec
dec
cs
das
xor
adc
and
fldt
data16
cmpsb
mov
daa
data16
bound
test
and
lahf
insl
out
test
sub
test
add
xor
sbb
add
push
movaps
sbb
aaa
bound
dec
mov
pop
in
mov
sbb
push
jge
popa
sub
call
aam
jge
popa
loop
push
adc
inc
out
add
push
popf
push
xchg
push
push
gs
stos
sub
jnp
test
pop
pop
out
repz
sub
outsl
das
pop
test
daa
mov
inc
out
sub
mov
lods
repz
and
push
and
and
mov
and
dec
gs
insl
and
sub
in
stos
jb
in
in
bound
repz
xlat
dec
shr
push
xor
inc
bound
xlat
dec
imul
movsl
fidivs
push
inc
lcall
add
bound
push
cmpsl
fsubs
jecxz
xchg
fcoms
cmpsl
int
je
dec
or
lds
enter
xor
cs
outsb
push
addr16
and
scas
bound
xor
push
loop
dec
scas
push
aaa
jo
aad
and
imul
pop
xlat
fiaddl
in
xor
nop
call
test
xchg
inc
in
stc
and
xchg
jge
lahf
gs
call
inc
xor
jg
xchg
adc
mov
adc
sahf
mov
frstor
adc
push
lea
or
pop
xlat
cwtl
stos
cli
push
push
pusha
sub
add
jb
push
andl
adc
push
add
rorb
dec
xor
rcll
scas
push
xor
xor
call
mov
inc
test
shll
aam
push
movsb
dec
sub
imul
pushf
sub
xor
gs
mov
loop
lods
movsb
or
stc
out
mov
insl
xor
aam
add
and
sub
mov
outsl
push
mov
jno
in
popa
aaa
rcr
in
ds
push
int
mov
add
andl
movsl
subl
lock
inc
loope
push
iret
xor
adc
in
mov
inc
out
mov
out
push
dec
mov
subl
push
xor
dec
adc
daa
nop
inc
inc
xor
dec
jb
xchg
cli
cmp
pop
call
int3
push
movsl
fimull
push
outsb
sub
pop
inc
add
and
lods
movsl
add
es
pop
fs
sbb
pop
cmpsl
je
pop
dec
sub
lea
aam
nop
inc
jmp
push
add
xor
xor
adc
and
das
sub
outsl
jae
dec
xchg
ds
push
push
fisubrl
jecxz
hlt
repz
out
ds
test
add
mov
push
insb
std
ja
rolb
xchg
sub
jae
enter
or
push
in
ljmp
test
out
mov
cmpsl
out
hlt
pop
or
sbb
mov
fisubs
adc
cmp
shll
push
cmpsl
inc
das
aam
mov
out
or
popf
faddl
adc
push
and
stos
lods
cmp
adc
cltd
out
mov
push
stos
lods
cmp
into
add
into
mov
adcl
ja
fisubrl
mov
enter
pop
sub
xchg
hlt
jbe
push
in
aam
aam
and
mov
jo
rcr
dec
repnz
out
inc
adc
icebp
dec
shlb
test
leave
sub
call
test
mov
sbb
int
dec
push
lods
loop
repz
xor
out
shll
loop
mov
xor
sub
cmpsl
push
subl
mov
inc
mov
xor
sub
adc
sbb
daa
addr16
mov
sbb
roll
inc
das
in
test
push
out
fwait
sub
or
cmp
mov
loop
and
je
jno
fwait
aam
daa
push
push
daa
outsl
loope
movsb
or
nop
inc
jmp
sbb
inc
in
adc
inc
addr16
mov
or
test
xchg
xchg
dec
or
addr16
adc
test
repz
out
mov
push
fsubr
mov
mov
xchg
aas
mov
loopne
sub
or
xchg
popa
sbb
lods
adc
daa
xor
andl
scas
adc
stos
popa
and
lds
popf
in
stos
aaa
in
out
mov
loop
and
jge
in
ja
mov
sub
popa
in
ja
std
daa
mov
jmp
in
loope
out
jo
push
and
ja
jge
test
in
movsl
ficomps
or
lds
addr16
pop
add
cmp
inc
and
test
push
xor
in
out
rorl
shll
movsl
test
ds
sbb
out
inc
movsl
sub
push
lods
xor
popa
pop
xlat
cs
lock
sbbb
popf
cmpsl
adc
fsts
sub
sub
inc
and
test
icebp
call
in
xor
inc
ljmp
lahf
xchg
dec
push
scas
aam
push
mov
cmp
and
std
ret
jmp
shrb
sub
stos
dec
pop
jb
in
data16
or
out
testb
fstpl
aam
sub
xchg
push
out
rcll
ss
out
or
jmp
sub
inc
ds
mov
sub
sub
adc
arpl
leave
hlt
xor
subl
inc
jns
iret
imul
sub
ret
adc
imul
lock
sbb
sub
addl
out
icebp
push
adc
push
andb
push
lods
aam
sub
loope
aaa
lds
das
push
mov
xor
test
push
dec
or
aam
mov
xchg
in
add
mov
push
fsubp
out
in
add
popa
jne
inc
jbe
std
xlat
push
mov
in
add
jmp
loop
dec
xor
in
aam
fsubs
movsb
jecxz
in
inc
and
rcl
xchg
popf
inc
mov
add
dec
and
cmp
adc
pop
out
push
xor
sti
xor
movsl
mov
inc
jmp
lock
or
aam
aad
add
xor
lods
std
int3
outsl
inc
vpmulhuw
ret
repz
jae
insl
xchg
push
ret
jo
cmp
sub
gs
fs
outsl
mov
adc
aam
clc
jae
test
scas
daa
in
nop
xchg
popa
out
lret
xchg
xor
test
and
pop
cmpsl
mov
push
xchg
das
dec
mov
lods
xor
in
int
adc
push
pop
fcoml
test
imul
shlb
push
es
fldt
jbe
in
push
std
int
inc
aam
pop
lods
mov
popa
movsl
popa
outsb
popa
loopw
rorl
xchg
in
pop
lret
lret
loope
add
sub
or
and
xor
add
arpl
movsl
call
dec
sub
jmp
adc
jns,pt
push
inc
sbb
xlat
sub
xchg
cmpsb
pop
pop
lock
paddw
cmp
rcrl
andl
or
cmc
dec
xor
arpl
push
mov
scas
sub
add
in
imul
arpl
jmp
adc
adc
rolb
dec
movsb
roll
out
insl
fldenv
sub
aad
addr16
inc
mov
jo
adcl
cmc
xchg
in
cs
inc
dec
rolb
and
mov
gs
shrl
sub
inc
test
mov
stos
in
jae
cs
call
xchg
add
and
push
imul
rcrb
push
inc
push
lds
lret
mov
mov
pop
outsl
xor
test
and
mov
jle
inc
adc
je
jmp
in
push
shrb
test
nop
inc
inc
test
and
dec
popa
fiaddl
xchg
push
jae
push
push
addl
aam
out
lods
xchg
and
movsl
push
js
outsl
loopne
pop
ret
or
leave
aam
adc
mov
imul
jmp
xor
mov
leave
jmp
rol
or
add
mov
jge
icebp
call
push
aaa
imul
mov
push
div
mov
fiaddl
mov
fstl
mov
cmpsl
outsb
and
sub
hlt
roll
out
mov
mov
gs
test
and
mov
addr16
in
mov
sbb
dec
pop
mov
xor
lret
inc
data16
xchg
mov
lcall
icebp
repz
loop
mov
adc
in
xor
push
dec
adc
mov
mov
mov
add
lds
insl
pop
or
lds
adc
lret
int
adc
popf
or
out
dec
add
bound
fisubrl
cwtl
call
inc
repnz
push
cmp
sbb
daa
jnp
call
arpl
hlt
sub
adc
mov
lds
cmpsl
adc
out
bound
pop
cmp
cmp
pushf
and
xchg
sub
xchg
fwait
in
pusha
mov
xor
in
and
loopew
inc
in
mov
pop
jg
fadds
sub
xor
xchg
and
scas
xor
popf
sbb
adc
rcr
adc
in
stos
sub
cmp
rclb
lret
mov
leave
out
fdiv
or
and
xor
je
aam
mov
mov
inc
sub
bound
cmpsl
dec
adc
and
icebp
xor
ret
sti
pop
lcall
movsl
lds
dec
or
cmp
jmp
call
shr
out
xchg
and
mov
loope
mov
pop
daa
adc
loop
shrl
sub
outsb
test
pop
gs
aad
push
je
mov
out
into
push
inc
fdivrs
sub
arpl
sub
fisubl
test
push
out
shll
sub
sub
popa
add
jmp
in
xchg
sub
sbb
dec
test
xchg
xor
cmpsl
sbb
je
pop
gs
arpl
lea
sbb
add
mov
adc
in
lods
push
lea
out
or
sub
mov
jne
in
pop
rep
and
mov
shrl
shll
into
bound
es
pop
sub
and
dec
and
push
pop
xchg
arpl
cmp
scas
loop
imul
xor
bound
outsb
in
data16
mov
mov
nop
ds
dec
xor
repz
adc
test
mov
xlat
and
xorl
icebp
loope
loope
sbb
jmp
inc
ljmp
mov
cmpsl
dec
imul
lea
insl
sbb
and
dec
and
xchg
je
les
mov
dec
popa
push
xor
sahf
iret
push
jp
sbb
out
sbb
inc
call
xchg
in
out
push
mov
cmp
leave
mov
jo
xor
test
in
add
add
adc
inc
in
repnz
push
mov
jo
fisttps
adc
outsl
imul
mov
in
rolb
ds
popf
sbb
push
and
xchg
push
call
ds
cmp
add
dec
push
scas
in
mov
and
or
jo
arpl
movsl
ret
and
push
arpl
cmp
addr16
xchg
and
xor
ret
loop
shlb
loop
mov
shrl
add
inc
fisttpl
cs
call
adc
ljmp
xchg
xchg
or
pop
insl
outsl
add
daa
jge
xchg
enter
mov
popa
mov
nop
push
dec
pop
push
xor
inc
adc
lods
push
outsb
enter
ret
loop
popa
nop
sti
rcrl
and
mov
pop
jo
inc
xchg
adc
push
loope
hlt
cmp
add
ret
das
int
aam
add
adc
xchg
arpl
mov
inc
cmc
xchg
sub
sub
mov
push
ljmp
arpl
push
nop
insl
or
daa
xor
lock
push
adc
imul
lods
jo
and
in
cmp
jae
lods
ja
je
mov
jnp
lock
and
pop
insb
push
inc
adc
mov
sbb
addr16
add
push
pop
movsb
xor
sub
je
insl
inc
iret
push
inc
ret
pop
into
and
std
and
xor
push
cmp
lods
stos
inc
into
mov
leave
outsb
data16
cmp
xchg
xchg
leave
cs
call
repnz
push
scas
adc
outsb
lods
loope
add
popa
jo
pop
icebp
loopne
mov
pop
loop
jo
mov
stc
enter
sub
jns
cmpb
add
js
repnz
outsb
les
push
shl
pop
xchg
inc
jmp
in
in
push
bound
into
jae
or
push
outsb
and
insl
loope
mov
imul
stos
xor
add
in
mov
outsb
bound
in
and
fimull
lret
sub
faddl
push
push
push
in
rcrl
arpl
aam
scas
rdtsc
in
daa
dec
shl
add
ds
sub
in
outsb
lret
enter
arpl
mov
int3
jmp
ds
aad
mov
push
in
and
sub
or
lds
in
xlat
in
jo
inc
dec
push
ljmp
xor
fcoms
sub
shlb
in
addr16
add
and
lret
and
cmpsl
mov
jmp
sub
mov
shll
mov
stos
xor
jp
andl
mov
pusha
rcll
pop
add
int3
pop
or
mov
ret
xchg
push
mov
das
stos
scas
dec
adc
inc
add
sub
and
nop
xor
insb
sub
jo
pop
sar
js
pop
jo
inc
in
add
mov
cli
insl
iret
test
jmp
xchg
arpl
mov
and
cs
das
add
add
ficomps
mov
loope
outsb
sbb
mov
repz
xor
in
sub
pop
es
push
int
add
daa
sbb
and
cmp
mov
mov
and
and
and
mov
in
mov
aas
inc
push
call
push
in
mov
and
ds
mov
dec
mov
xchg
into
mov
xchg
jmp
adc
xor
out
mov
icebp
je
popa
jle
scas
and
in
scas
and
jnp
push
bound
scas
call
subl
arpl
jg
jo
dec
adc
in
or
roll
push
xor
xchg
mov
cs
cmpsb
adc
inc
pop
push
popf
daa
lret
mov
and
popa
rorl
ds
leave
sub
sbb
mov
out
test
xor
idivb
std
daa
push
push
jo
inc
xor
popa
test
aam
daa
jg
add
cli
pop
loop
dec
jo
jp
mov
enter
xor
jecxz
adc
cmp
adc
andb
push
push
cmp
repnz
test
out
adc
lock
mov
sub
test
addr16
add
test
cwtl
or
sub
je
int3
in
mov
push
hlt
mov
call
lods
test
es
cmpsl
mov
int
xlat
ljmp
add
or
mov
pop
sbb
mov
shll
ret
inc
outsl
aaa
mov
xchg
fimuls
and
adc
outsl
cmpsl
pop
mov
imul
loop
adc
out
and
daa
cmp
ret
fildl
pop
or
push
jp
sub
add
inc
test
cmpsl
shlb
nop
stc
clc
js
scas
mov
in
lock
imul
adc
outsl
ljmp
test
push
scas
movsl
push
int
sub
movsl
add
jae
insb
test
loopne
test
mov
inc
sbb
xlat
inc
loopne
push
xchg
mov
adc
ljmp
loop
add
jb
lock
loopne
ret
xor
or
loope
loope
clc
popw
inc
push
xor
cmp
not
gs
push
ja
mov
push
cmp
loop
mov
mov
and
sahf
aam
into
lods
and
cli
insl
imul
mov
adc
cmp
push
lods
out
loop
clc
inc
and
addr16
ljmp
pushf
jl
out
mov
lock
lds
fbld
cltd
out
pusha
popa
jmp
dec
repz
xlat
cmp
adc
pcmpgtw
or
and
insb
ret
jne
push
xor
jo
pop
ljmp
inc
sarl
outsb
in
push
insb
xchg
xor
daa
ljmp
sahf
push
popa
or
in
mov
insl
push
leave
loopne
cmpsl
in
bound
call
jb
lods
push
movsb
sbb
mov
cmp
xchg
test
sub
xlat
scas
dec
gs
sub
push
fisubs
lock
sub
mov
adc
sub
mov
xor
pop
in
push
js
outsl
insl
sbb
xor
outsb
xor
xchg
lock
jne
pop
call
insl
fwait
imul
cmp
and
and
inc
addr16
xchg
push
and
push
ret
sub
mov
int3
sub
or
push
and
push
scas
rol
addr16
cmp
cmp
rcr
movsl
and
mov
lea
es
shrl
insl
or
addr16
data16
add
mov
out
mov
movsl
aaa
lahf
leave
lock
out
jne
sarl
outsl
cmp
mov
imul
stos
xor
in
sub
fsubrl
addr16
cmpsb
and
sub
dec
aam
jae
push
shl
lea
mov
and
xor
aam
mov
inc
outsl
movsl
aad
xor
repnz
lock
jno
pop
jge
insb
or
push
in
popf
jl
xlat
dec
addr16
ret
movsl
adc
fstpl
popa
push
call
cmpsl
xchg
xor
test
mov
and
in
mov
inc
jmp
ljmp
and
loope
jns
lock
jmp
jb
stos
loope
insl
sub
xor
and
cmp
roll
push
xor
test
addr16
jmp
cmc
das
ljmp
push
data16
aaa
mov
sub
xor
shr
aas
xchg
push
aam
and
insl
push
lea
test
daa
outsb
insb
push
and
pop
aad
lret
shr
enter
mov
hlt
push
mov
pop
popa
mov
jnp
out
jo
out
ja
test
sbb
push
or
leave
jmp
arpl
test
pop
paddq
scas
insl
cmp
add
jmp
push
cwtl
movsl
sbb
out
lret
adc
shrb
cwtl
and
test
in
shl
call
fisubl
lcall
pop
repz
add
xchg
mov
inc
xchg
stos
out
stos
rolb
fstl
andl
lahf
jb
xchg
out
cmpsl
add
test
dec
pop
dec
rcr
ljmp
clc
cld
pop
aam
sub
sti
fwait
pop
xchg
ja
pop
out
mov
cmc
jmp
or
addb
sub
sub
out
push
mov
jne
sub
dec
sub
lds
movb
fwait
loop
jmp
jecxz
mov
sub
in
out
jmp
mov
push
loope
roll
pop
dec
and
fwait
sti
cmp
mov
push
pop
test
mov
mov
lock
push
loop
int3
sti
or
push
mov
push
movsb
jl
test
mov
clc
pop
loope
loop
sti
int3
loopne
jbe
and
mov
add
inc
int
scas
out
cltd
out
push
out
cld
sub
mov
out
sub
push
repnz
mov
jp
add
ljmp
ljmp
fwait
or
jae
lock
jno
ljmp
cmc
out
in
mov
insb
and
lret
cmp
dec
jbe
sub
dec
mov
popf
push
ret
insl
push
adc
out
lahf
inc
sbb
scas
inc
jne
mov
jae
xchg
dec
lret
sub
imul
or
jb
out
ljmp
arpl
movsb
inc
mov
add
out
fisttpl
pop
into
xchg
cmp
add
sti
cmp
sub
xorl
dec
xchg
xor
jno
jg
aas
outsb
jp
sub
ret
call
sbb
aaa
clc
or
sbb
xchg
xor
sbb
mov
aad
push
cmp
sbb
insb
adcl
and
out
fcoms
xlat
dec
jl
cwtl
cmpsb
popa
out
sub
ljmp
and
adc
cmp
test
lock
cmp
push
popa
clc
out
fistl
mov
mov
and
sbb
pop
call
arpl
fsts
sbb
scas
call
push
pop
xchg
adc
dec
mov
ljmp
std
repnz
xchg
les
add
lea
int
inc
std
out
mov
aam
outsl
sub
jg
out
pop
mov
mov
dec
imul
xor
in
pop
sbb
xchg
fmull
je
cmp
gs
mov
shll
dec
add
arpl
jo
and
sbb
push
test
push
bound
not
leave
out
and
jno
jmp
ja
adc
fs
push
scas
xorl
gs
sbb
cmp
dec
mov
out
movsb
inc
test
arpl
and
insb
fcoml
push
cld
xor
sub
or
mov
pop
test
cli
aad
dec
pushf
inc
pop
ja
jne
data16
enter
leave
mov
adc
and
stos
inc
lcall
xor
push
pop
or
test
lds
jnp
call
inc
mov
ja
mov
inc
cmc
bound
dec
fld
push
push
xor
out
out
mov
lahf
sub
add
add
mov
shrl
xor
mov
cli
fists
xchg
lods
push
cmp
gs
test
test
test
movsb
and
aad
mov
daa
and
scas
out
push
dec
test
jmp
pop
imulb
xor
cmp
mov
cli
loop
stos
or
xchg
loopne
aaa
cli
mov
imul
inc
xor
add
xor
rcrl
addr16
addr16
dec
push
addr16
inc
test
ds
int
dec
cmp
mov
in
inc
icebp
adc
push
pop
push
test
in
push
in
ret
xor
jmp
iret
mov
sub
rcl
movsl
jmp
or
in
jmp
cmp
stc
rdpmc
xor
push
movsl
and
xchg
mov
shrb
mov
push
jmp
std
jne
jmp
mov
sub
dec
mov
mov
fsubs
in
mov
shrb
mov
jmp
mov
adc
xor
test
popf
and
stc
sbb
aad
mov
pop
les
repz
sti
in
movsl
in
aad
inc
xchg
and
cli
pop
add
leave
dec
inc
jb
xor
push
mov
andl
in
imul
jecxz
out
out
add
and
lcall
test
mov
insb
adc
in
cmp
shrl
in
push
aad
enter
jmp
in
es
fsubr
ret
mov
pushf
aaa
or
sub
loopne
in
aas
fs
testb
stos
cmpsb
and
dec
repnz
jmp
call
ljmp
cmpsl
cltd
inc
cmc
push
push
mov
daa
imul
addb
push
popa
and
and
pop
xchg
fstl
in
push
in
mov
cmp
push
sbb
mov
push
out
sub
push
xor
lock
cltd
stos
xchg
ret
loopne
pop
and
inc
ja
mov
imul
fadds
xchg
jmp
pushf
inc
jp
call
xor
pop
xchg
daa
dec
sub
repnz
sub
gs
in
movzbl
ss
lahf
scas
push
sub
and
xchg
cmp
sub
daa
imul
aad
fcomp
popa
inc
sti
out
or
roll
fbld
cwtl
dec
enter
mov
inc
cld
les
test
loopne
push
mov
enter
push
cmc
push
ds
fistpll
outsl
or
ja
enter
les
jne
dec
pop
aaa
cmp
sbb
out
lret
cmp
insb
mov
icebp
jo
inc
jg
aad
in
mov
mov
xchg
jmp
inc
lea
xor
sub
aaa
call
mov
sub
push
gs
out
push
dec
insb
cmp
call
mov
pop
xor
call
dec
les
sbb
push
stos
cmp
in
daa
add
insl
xlat
fsub
aaa
cmp
aaa
fdiv
sub
out
imul
push
jmp
sub
push
js
sub
cltd
dec
push
xor
sub
fnstsw
push
imul
data16
sti
push
pop
and
test
and
jnp
and
xchg
sub
dec
stos
negl
inc
in
aaa
frstor
jbe
out
fisubrl
pop
mov
dec
gs
aad
aad
and
movsl
push
aad
cmp
insl
movsl
gs
in
or
and
insl
push
rolb
shl
insl
adc
out
inc
inc
sbb
ret
xchg
aad
mull
mov
xor
inc
gs
push
push
imul
pop
imul
cs
ds
pop
and
sbbl
scas
dec
jge
push
xchg
imul
int
xor
mov
jl
mov
jns
sbb
sti
movsl
lds
out
stos
outsb
rolb
out
adc
test
jp
test
ficomps
lods
xor
xlat
aad
dec
lds
out
cmp
cli
cmp
adc
cwtl
test
sub
ds
push
movl
imul
in
push
dec
gs
js
iret
mov
test
test
pushl
inc
cli
iret
leave
stos
push
pop
shl
lods
jne
xor
cmpsl
or
pop
mov
cmp
xchg
cmpsl
nop
filds
sub
cli
and
pop
sub
jl
adc
js
adc
mov
mov
or
cwtl
ljmp
inc
clc
pushf
xchg
xor
mov
and
stc
pop
xor
movsb
movsb
dec
xor
int
mov
out
jne
popa
fcmovnu
imul
adc
dec
inc
shrb
and
xchg
pop
xor
jno
adc
cmpsl
in
pop
push
add
jb
and
dec
inc
push
lods
test
mov
std
lcall
cmc
sbb
movsl
mov
dec
fstp
xchg
test
gs
daa
jne
scas
fcoml
mov
pop
gs
jns
ret
cmc
hlt
imul
jle
or
and
or
mov
mov
rcl
add
in
or
mov
mov
xchg
out
push
cmp
jb
test
dec
and
roll
push
adc
mov
cmp
adc
jno
popf
push
cli
in
lret
jns
sub
aas
inc
jge
hlt
pop
add
jge
js
roll
push
pushf
icebp
das
xor
and
cmp
xchg
int
push
push
popl
outsb
aam
gs
or
test
insb
out
repnz
xorl
rcll
xor
xor
gs
test
movsl
lods
pop
lcall
dec
in
aad
jle
pop
mov
jb
sub
inc
movsl
cmc
js
push
push
xor
outsb
cltd
sub
pop
push
cmp
aad
push
mov
mov
je
scas
testl
cwtl
push
inc
loope
test
rcll
popf
xor
in
lock
cli
dec
lret
jb
sahf
shl
stc
aad
dec
fcom
rolb
jne
ret
sub
loopne
aaa
inc
out
xor
jmp
xor
dec
add
mov
cli
pop
enter
out
push
and
xorb
push
ret
adc
rcrl
inc
mov
and
add
push
inc
mov
out
mov
pop
into
cmp
jge
pop
int
inc
out
and
dec
out
das
pop
jg
pop
iret
out
cmp
sbb
lret
sub
mov
out
leave
dec
cmp
sbb
jl
insb
pop
int3
fmull
sub
out
jnp
pop
lret
fildl
es
xchg
push
push
insb
and
and
std
insb
fst
rorb
insb
mov
jle
aad
and
dec
rcl
jne
ret
call
sub
loop
push
and
sbb
fistl
xchg
int3
mov
dec
dec
jp
push
pop
mov
insb
mov
mov
lcall
mov
add
pop
test
sbb
jp
dec
out
paddsw
and
mov
mov
xor
or
int3
in
icebp
repz
and
out
push
shr
push
lods
notl
jmp
xchg
jno
pop
and
or
test
mov
ljmp
idivl
jno
andl
lods
ja
push
loopne
out
sbb
movsl
shrb
push
outsb
mov
mov
jge
lea
mov
xchg
add
fisttps
inc
repnz
adc
arpl
out
aam
dec
popf
bswap
pop
repnz
popa
jo
fsubr
pop
cmc
in
mov
hlt
in
and
xchg
cmp
dec
cs
pop
xchg
pop
pop
out
in
cmp
sbb
fwait
add
jae
pop
aaa
pushf
mov
mov
pop
pop
xchg
sbb
sbb
cmp
or
cmpsb
dec
mov
xchg
je
jno
sbb
lock
mov
hlt
jge
popa
sub
dec
shlb
push
out
push
push
sbb
push
lds
xchg
pop
sahf
jns
mov
push
dec
mov
dec
sarb
nop
mov
mov
inc
push
push
test
aad
out
jno
cltd
mov
dec
movsl
jmp
or
mov
xchg
test
movsb
popf
andl
or
or
scas
repnz
out
push
aas
sbb
lahf
divl
pusha
dec
inc
inc
out
rorb
dec
out
ds
add
or
jmp
lret
icebp
mov
outsb
out
cmp
xchg
hlt
or
aas
inc
adc
subb
inc
xor
inc
jecxz
out
adc
jb
out
push
sbb
in
lahf
jne
icebp
test
xchg
ja
fistl
xor
sahf
arpl
es
out
inc
xchg
pop
lahf
sub
add
ljmp
mov
orb
push
jle
ret
outsb
fs
stos
lret
enter
orb
pop
sbb
fnsave
sbb
pusha
out
in
lods
cmp
mov
dec
call
or
cmc
loope
mov
out
add
fstpt
out
scas
xchg
adc
call
nop
int3
xor
mov
loop
shlb
out
add
push
stc
repnz
out
in
pushf
xor
sub
push
ljmp
out
nop
pop
sub
jge
fwait
mov
insl
mov
out
mov
out
sub
mov
xor
cwtl
mov
inc
data16
out
or
jo
mov
scas
out
xchg
lahf
lods
xorl
arpl
out
aad
dec
lea
mov
out
ss
imull
addl
pop
push
dec
jmp
out
pop
push
xchg
rolb
call
pop
test
inc
and
stos
jo
push
cmpsb
and
fisubs
pop
mov
cmc
xor
sub
or
mov
sub
in
fsubl
cmpsb
xlat
mov
xchg
out
prefetchw
out
inc
xlat
sbb
dec
cmpsb
mov
dec
test
stos
push
jmp
sbb
js
stc
out
mov
into
clc
mov
lds
insl
scas
sub
stos
out
or
pop
dec
daa
scas
cwtl
std
int3
pop
das
and
and
fdivr
mov
inc
out
pop
imul
pop
outsl
xchg
dec
in
mov
mov
lods
fcmovbe
mov
and
mov
loop
pop
and
xor
jb
xor
mov
push
out
sub
mov
out
ss
jo
lret
js
in
xchg
sti
push
fwait
xchg
sbb
dec
xor
rcl
push
out
addr16
mov
jns
xchg
orl
sbb
mov
xchg
jno
fdivl
push
xchg
cmc
pop
and
cld
jne
mov
mov
loopne
movsb
add
js
add
clc
mov
cmp
pop
outsb
stos
push
cwtl
daa
mov
dec
sub
imul
fiadds
xchg
sbb
dec
jns
lahf
sub
cmp
shlb
xchg
stos
ret
out
push
ret
cmc
dec
jecxz
out
icebp
fildl
cmp
scas
mov
mov
push
jne
lcall
pop
shlb
out
dec
dec
dec
imul
inc
cmpsl
jnp
inc
out
js
xchg
addr16
out
mov
xor
ljmp
out
sahf
in
jmp
inc
out
lods
mov
fisttps
cwtl
jle
bound
je
clc
dec
rclb
cmp
into
in
out
lods
push
dec
loope
lods
mov
lock
pop
enter
sbb
sar
push
pop
ljmp
fcompl
sahf
mov
inc
xor
nop
push
jmp
xchg
adc
dec
pusha
cmpsl
pop
das
fs
fwait
sar
sbb
enter
cli
jle
xor
movsl
rorl
push
mov
dec
or
mov
mov
in
and
lcall
movsl
jle
mov
subl
pushf
adc
out
add
push
push
lea
dec
fsub
int3
or
sub
mov
xchg
data16
out
fdivrl
and
sbb
mov
pop
out
pop
and
movsb
mov
xor
jp
in
mov
push
add
clc
pop
js
jl
out
mov
cmp
xor
inc
insb
inc
out
movsb
pop
rcll
jno
ds
push
pop
push
sub
aad
cmc
xlat
and
jle
scas
insb
adc
sahf
adc
cld
out
adc
imul
inc
or
adc
jne
in
in
xchg
ljmp
andb
xchg
mov
loop
mov
lods
stos
cmp
out
push
jecxz
xchg
iret
pop
out
xchg
push
add
dec
push
pop
adc
jno
jae
push
dec
mov
sbb
out
push
push
in
mov
xchg
sub
out
cli
sbb
mov
push
cmp
aam
clc
xchg
sti
cli
out
push
orb
imull
fsubrl
pop
cmc
mov
out
xor
inc
out
xchg
lahf
sti
lret
dec
push
pop
mov
out
add
sub
push
out
lcall
out
addr16
out
push
add
jne
test
out
sub
test
out
fldenv
idivl
xor
xchg
or
fsubr
test
mov
inc
push
mov
push
xchg
add
out
int3
daa
sti
addr16
out
pusha
xor
aas
jo
pop
jne
mov
sbb
lret
arpl
out
lahf
dec
lods
inc
lret
out
imul
jne
push
addl
xchg
pop
roll
dec
int
pusha
and
call
and
push
push
call
notl
sahf
shrl
or
imul
dec
sub
clc
mov
fmuls
enter
jne
fstps
or
lea
call
mov
js
pop
cmp
out
mov
push
sub
clc
or
lcall
xor
fadd
dec
movsb
mov
arpl
lea
inc
in
repnz
movsb
fiadds
not
repz
es
cmp
test
popa
xor
add
push
or
cmc
daa
mov
aad
test
adc
xchg
gs
push
push
mov
jne
and
gs
cli
inc
in
adc
jne
loopne
je
sub
sahf
mov
cmc
aaa
loope
adc
aas
out
icebp
add
lds
xchg
sub
jg
lds
gs
sub
xchg
inc
les
cmpsl
jmp
xorl
and
movsl
xor
mov
and
adcb
mov
xchg
add
dec
pop
ret
test
jmp
push
roll
xor
bound
mov
inc
jb
xor
adc
gs
fwait
movsl
adc
inc
inc
lds
lds
push
jecxz
sub
daa
adc
stos
mov
sarl
adc
or
shrb
add
fsubrs
mov
call
cmp
test
xor
sub
ja
out
imul
inc
mov
jno
insl
xchg
and
sarl
data16
fsts
stos
push
fsubs
pop
add
pop
and
enter
enter
lea
subl
xchg
inc
in
adc
js
test
imul
test
cwtl
dec
cwtl
cmp
xchg
inc
xor
or
dec
clc
clc
in
rclb
ljmp
or
aas
mov
inc
sbb
sub
jne
popf
add
push
les
test
daa
das
add
sub
jne
ja
dec
loopne
push
adc
vunpckhps
cmp
sub
pop
add
les
imul
mov
ljmp
fxch
pop
dec
imul
pop
xor
fldl
imul
pop
clc
enter
and
les
pop
andl
ficompl
cmpps
pop
inc
testl
jmp
stc
sti
out
or
out
cld
fsubrs
cwtl
sahf
xchg
aam
test
mov
aam
mov
cli
inc
mov
in
jne
adc
mulb
sti
movsl
cmc
sbb
sarl
and
int3
loopw
push
xchg
push
jo
or
in
insl
cmc
jmp
inc
fdivp
and
cmpsl
test
add
movsl
xor
xchg
xchg
inc
xchg
xor
fadd
in
cmpsl
insl
movsl
dec
aam
ljmp
xchg
mov
pop
dec
push
xor
stos
inc
mov
and
xchg
lea
aaa
lds
inc
out
cmpsb
dec
movb
es
ja
mov
rol
xor
jnp
cmpsb
mul
bound
out
rcll
inc
push
adc
push
sbb
lds
imul
xor
int3
add
sub
jno
pop
cs
out
test
aad
mov
mov
gs
lea
aaa
inc
mov
fistps
out
and
push
iret
xor
mov
and
subl
and
cld
in
cwtl
xchg
sub
inc
gs
idivl
or
jl
mov
mov
out
pushw
cmp
xchg
cli
cmpsb
xchg
mov
cmpsl
add
xchg
cmpsl
jle
inc
sub
dec
or
icebp
xor
mov
hlt
ds
out
xchg
sbb
call
call
incb
sub
out
js
movsl
and
and
jno
mov
jae
int
dec
jb
insb
cmp
and
push
mov
clc
lods
add
loopne
lret
repz
mov
mov
push
daa
cmpsb
loop
inc
xor
dec
jecxz
pop
sbb
mov
jb
out
out
jae
cmp
add
and
scas
or
sub
dec
mov
cmp
mov
outsb
incb
loopne
jns
dec
clc
gs
xchg
mov
sbb
pusha
adc
insl
out
and
cmc
pop
fwait
sub
mov
out
inc
adc
imul
enter
push
add
sti
sbb
js
pop
cmp
cltd
push
mov
cmc
daa
out
xchg
out
lcall
out
lods
fldt
mov
pop
sub
push
sbb
cmp
cmp
jmp
sbb
xchg
mov
xchg
sbb
gs
add
xor
stos
out
ret
inc
jge
adc
mov
sub
out
testl
push
pop
cmp
stos
mov
mov
fwait
test
ds
out
sbb
adc
sahf
xor
pop
mov
inc
push
call
cld
in
sahf
fs
adc
inc
fwait
jne
popf
cltd
leave
and
mov
outsl
addr16
clc
pop
or
jp
mov
sbb
push
daa
enter
test
out
fucompp
fistps
mov
xchg
push
call
mov
test
pop
add
fldl
mov
imul
push
pop
xchg
shll
inc
in
test
popf
add
scas
and
jp
xor
test
nop
les
xlat
fs
add
mov
inc
out
mov
dec
cld
das
inc
lcall
mov
adc
sub
xchg
call
std
or
inc
movsl
mov
mov
dec
cltd
xchg
out
pop
xchg
dec
mov
in
dec
xor
jmp
push
push
xchg
add
hlt
pop
push
xchg
inc
push
sbb
inc
cmpsl
shll
inc
cmpsl
gs
pop
pop
movsl
xchg
sub
sub
adc
adc
adc
shr
sysret
cmpsb
mov
xchg
popa
cmc
movsl
add
pop
addl
sub
inc
mov
cmp
ret
or
xchg
pop
data16
inc
push
dec
xor
xor
sbb
inc
lods
in
add
shrl
in
dec
and
insb
push
dec
in
idivl
sub
enter
inc
enter
adc
sbb
mov
idivl
addr16
outsb
adc
bound
or
and
popa
notl
sub
mov
movsl
daa
pop
jne
inc
in
lret
pop
jne
push
insl
push
ja
mov
call
in
add
cmp
popa
pop
out
cmp
lret
out
gs
xor
test
pop
push
das
loope
sub
mov
call
inc
xor
fadds
test
sbb
sub
push
mov
push
clc
mov
sub
in
sbb
dec
test
push
std
hlt
hlt
dec
mov
fst
in
sbb
stc
and
sbb
cltd
imul
imul
push
pop
dec
adc
cmp
cli
out
mov
jg
lret
and
push
push
lret
shrl
xor
addr16
out
cmp
imul
aam
mov
out
hlt
stos
jecxz
aam
jmp
mov
in
sub
test
aam
out
push
dec
sub
mov
add
lahf
cltd
sbb
mov
xchg
mov
out
mov
and
xchg
ds
jns
push
adc
out
mov
jmp
packuswb
outsb
sub
outsl
test
push
dec
sub
and
in
adc
cmpsl
and
pop
sbb
dec
pop
cmc
jb
pop
cmc
in
mov
and
in
sub
je
jecxz
xchg
pop
or
es
dec
mov
and
shrl
addr16
icebp
adc
das
xor
cmpsb
jge
and
ret
clc
stos
xchg
pop
adc
jp
sub
popa
add
cmpsl
jnp
jg
sub
test
mov
dec
adc
dec
popa
addr16
scas
add
lret
pop
mov
add
es
dec
imul
sub
dec
sub
push
sbb
imul
out
pop
ja
cmp
stc
loope
in
inc
jnp
add
loope
cmp
sub
dec
cs
jmp
sub
xchg
test
xchg
adcb
jae
adc
das
jb
imul
pop
add
ljmp
in
fsubl
in
or
or
push
test
imul
jns
xchg
push
sub
je
pop
xchg
ret
fisttpll
imul
push
sbb
mov
dec
cli
stos
mov
gs
outsb
pop
mov
ljmp
xlat
sbbl
sub
aaa
gs
ljmp
cltd
or
pop
pop
cmp
ficoms
mov
cs
stos
dec
gs
mov
lea
sbb
mov
fsubr
xchg
dec
pop
mov
inc
pop
add
mov
fcompl
imul
mov
mov
push
push
dec
ja
push
inc
and
fsubrp
cmpsb
sub
push
mov
scas
stos
mov
push
adc
inc
and
inc
fmul
stos
gs
sub
pop
int
aad
fsubr
dec
inc
or
sti
ret
popf
das
push
dec
in
jle
lods
and
movb
aam
ja
daa
jno
adc
idiv
push
inc
push
dec
dec
adcl
mov
adc
jle
sbb
inc
roll
stc
push
inc
sbb
shrl
sti
pop
fisubs
pop
jne
mov
ja
test
push
push
add
push
adc
pop
jb
jne
adc
sbb
mov
rcll
add
in
jb
repz
movb
mov
pop
jne
jg
in
mov
push
outsl
or
loopne
inc
es
aas
aaa
or
xlat
pop
jne
test
lds
inc
xchg
and
inc
mov
cmp
cmpsl
inc
jne
cmp
fsubl
adc
mov
roll
les
pop
mov
fstl
outsb
mov
add
pop
cmp
enter
cmp
sub
jecxz
aaa
and
and
sahf
adc
inc
add
repnz
gs
push
pusha
je
dec
pop
add
add
jl
adc
imul
out
je
inc
push
push
add
adc
je
add
icebp
mov
out
icebp
xchg
je
inc
testl
add
inc
dec
cmp
dec
mov
hlt
call
insb
aad
lds
insl
inc
and
scas
inc
pop
push
dec
outsb
xchg
loop
movsb
sbb
adc
and
pop
js
sbb
and
test
fimuls
xor
js
pop
push
sbb
insb
out
adc
sub
dec
lods
aas
lret
inc
aad
mov
in
leave
xchg
incb
cmc
outsl
mov
callw
repz
mov
mov
gs
movsl
pop
add
inc
mov
stos
inc
test
or
iret
loop
movsbl
test
mov
lock
push
and
pop
and
daa
andb
bound
call
fiadds
push
pop
fcom
icebp
fisubs
sub
dec
and
mov
in
mov
cmp
xchg
jl
imul
pop
leave
jl
sbb
sbb
leave
jl
in
pop
add
sbb
outsl
dec
loop
aad
int3
mov
dec
dec
adc
adc
mov
jno
add
add
lcall
fs
aad
js
test
xchg
out
pop
js,pn
jb
xchg
mov
test
push
pop
adc
scas
pop
popa
ja
push
loope
push
xor
popa
xor
dec
adc
gs
or
add
sbb
iret
mov
enter
insl
stos
and
mov
outsl
and
inc
call
mov
loope
and
mov
xor
out
xor
pop
mov
in
js
push
hlt
push
dec
inc
mov
dec
or
sub
inc
aad
int3
lods
adc
stc
pushf
xchg
call
lds
jl
stc
mov
dec
jne
mov
fdivs
sbb
adc
stc
fcoms
cmpsb
daa
adc
rol
pop
and
stc
xor
cltd
mov
sub
sbb
cmp
pop
mov
je
pop
xchg
adc
push
out
xchg
daa
aad
out
add
stc
fdivr
rcrl
popa
test
insl
cmc
and
pop
push
ss
cmc
in
fs
dec
mov
jne
cmc
sti
test
sub
push
jo
cmc
imul
call
dec
adc
insb
push
cmp
lds
or
in
cmp
dec
jae
fistpll
aas
out
lret
jl
sbb
xchg
sub
mov
lret
push
daa
lods
iret
pop
push
mov
push
call
incl
fucomi
lods
dec
loopne
lret
add
in
add
jno
int3
sub
rclb
ds
jle
and
ja
xchg
add
out
das
clc
popa
scas
jae
sbbw
jns
int3
add
sarb
add
test
je
dec
stos
mov
ljmp
lods
nop
jne
pop
xchg
imul
pop
jmp
out
adc
test
aad
andb
out
mov
add
shlb
mov
ret
cmp
imul
in
das
mov
xchg
sti
out
out
and
test
or
ret
mov
out
add
adc
mov
or
ds
mov
jl
mov
cwtl
push
pop
mov
mov
sub
adcb
xor
pop
aaa
pusha
mov
mov
cmpsb
xor
ja
ss
sub
add
dec
pop
out
insl
sub
cmp
in
dec
aam
mov
mov
push
movsl
in
jp
out
lock
gs
sub
pushfw
mov
jne
je
cs
push
or
imul
inc
out
fmull
pushf
out
out
dec
lock
cmpsl
push
cmc
add
push
ljmp
je
cvtps2pd
sbb
out
pop
push
or
sbb
sbb
xor
mov
jae
lods
or
pop
adc
imul
out
lret
enter
cld
es
push
jbe
out
js
push
cltd
jb
sti
dec
mov
cmp
sub
mov
rcll
and
ljmp
pop
mov
fucomp
jge
fcomi
sub
movsb
jmp
mov
out
cmp
clc
insl
dec
dec
or
insb
cld
imul
lea
fimuls
cmpsl
pop
add
ss
push
jne
pusha
push
dec
pop
rcll
jl
push
out
scas
mov
sbb
fiaddl
in
mov
lds
mov
fnstsw
fiaddl
pop
pushw
inc
mov
sbb
enter
inc
cmove
mov
out
aad
inc
popa
mov
stc
pop
loop
jnp
adc
pop
scas
rorb
xlat
fidivs
int3
cld
movsb
outsb
fimuls
adc
test
les
jo
shlb
lds
pop
lahf
ljmp
push
sbb
sbb
lret
data16
negl
sarb
jecxz
fadd
loop
add
or
fstps
icebp
pop
testl
push
xlat
outsb
aaa
mov
shl
mov
jmp
out
rolb
popf
daa
add
out
mov
out
xor
sbb
out
jg
rcr
jmp
out
fwait
dec
inc
out
stc
shr
out
mov
sbb
js
cmpsb
clc
outsl
shlb
and
cmp
sub
outsb
sbb
sub
out
cmpsb
push
fdivr
in
pop
int3
fs
repz
das
mov
xchg
push
pop
push
pop
mov
sub
and
inc
mov
repnz
jb
insl
and
jle
jl
pop
cmp
inc
push
mov
imul
stos
fs
in
mov
aam
push
out
arpl
mov
repz
xor
lcall
cmovle
and
in
shlb
sti
ja
or
add
shrl
cmc
jge
xor
ret
mov
addr16
les
inc
jnp
push
lret
or
data16
xchg
push
sub
lret
pop
ljmp
adc
call
andl
rorl
pop
fnstcw
rcll
mov
inc
popf
cli
loop
jno
fsubs
jno
mov
mov
push
daa
movsb
sbbb
in
pop
cld
fnsave
gs
inc
sub
adc
leave
and
or
addr16
in
lock
shll
popf
in
jl
push
jbe
test
pop
push
stos
mov
cmpsb
pop
das
in
cmp
cmp
or
mov
dec
imul
pop
mov
hlt
test
cmp
mov
mov
mov
cli
mov
sub
daa
push
decb
aad
adc
push
imul
pop
jle
and
and
mov
or
ds
lods
mov
ds
out
pop
lods
lcall
idivl
lods
mov
imul
hlt
enter
cmc
sbb
cwtl
testl
outsb
pop
adc
inc
test
test
jbe
mov
aad
imul
xchg
vmread
mov
and
fiadds
pop
in
adc
mov
xor
xor
cld
aad
test
in
lea
int
jp
lock
xchg
push
ja
mov
sub
or
out
or
xchg
mov
adc
xorb
and
ret
testl
add
inc
push
pushf
fmuls
inc
ficoms
push
and
ret
and
popf
daa
pop
rcll
adc
jb
pop
add
mov
jle
loop
inc
clc
jbe
push
andb
or
xchg
mov
inc
lahf
shll
push
frstor
sti
dec
std
into
bnd
fsincos
aaa
out
roll
push
mov
test
push
pop
sbb
xchg
jae
icebp
sbb
cmc
into
and
pop
in
mov
xor
and
inc
add
nop
in
pusha
sub
pop
sahf
mov
push
gs
jmp
ret
push
dec
in
adc
dec
cld
in
fcmovb
push
push
divb
aaa
fwait
push
mov
jmp
adc
lahf
in
les
jns,pt
inc
jp
jbe
sbb
sub
idiv
or
in
mov
add
xchg
or
jnp
jmp
out
mov
pop
cwtl
sbb
in
lods
out
inc
mov
pop
je
push
fdivp
out
jbe
stc
enter
out
adc
out
cmpl
sbb
pop
add
mov
push
pop
out
bound
cmpsl
pop
pushf
outsb
out
sub
adc
imul
mov
insl
fs
push
test
andl
jbe
sub
insb
push
jg
hlt
xchg
shr
idivl
push
jne
cmpsl
cmpsb
cmp
loop
mov
movsl
cli
xchg
add
mov
sarl
cltd
xor
mov
ljmp
mov
xchg
push
out
jge
push
fsubl
out
leave
out
fldcw
push
and
sbb
icebp
out
aaa
dec
movsl
cmp
out
jge
mov
movsb
xor
out
sahf
xor
lret
lahf
push
rolb
sarb
sub
fwait
stos
out
mov
push
dec
out
mov
adc
loopne
jo
jp
or
ret
data16
popf
or
out
or
cmp
icebp
fildll
iret
not
data16
sarl
xchg
pop
and
loop
fsts
popa
jb
out
add
imul
xor
shl
adc
lcall
mov
lret
int3
jmp
xor
into
or
hlt
push
out
sahf
pop
jecxz
xchg
xor
out
or
test
jp
out
cli
adc
cmp
inc
xchg
out
sub
sbb
mov
sub
cmp
or
mov
jne
sbb
sub
push
fstl
inc
out
and
psubusw
pop
dec
int3
xchg
out
mov
cmp
aad
or
pop
xchg
jl
dec
orl
cwtl
sbbl
cmp
lods
popa
gs
subl
lret
xchg
dec
mov
fsts
jns
int3
hlt
pop
dec
push
push
jb
sarb
pop
jecxz
dec
out
add
lcall
mov
dec
and
mov
add
stc
insb
fisubl
std
cwtl
data16
scas
adc
out
fcompl
push
cmp
out
pop
mov
rcr
out
cltd
push
or
mov
call
sub
cmp
sbb
pop
cmpsb
negl
out
stos
jno
xor
xor
push
mov
test
xchg
mov
mov
daa
mov
inc
pop
dec
addl
push
push
cli
cmp
mov
inc
jp
out
and
or
mov
or
ljmp
mov
push
rorb
test
clc
xchg
insb
xor
in
orb
pop
pop
imul
adc
push
std
dec
cmp
pop
clc
jo
xor
test
and
out
dec
int
loop
ss
testl
fsubr
cmp
call
into
jl
cmp
xchg
out
jno
cs
adc
out
test
xchg
jle
out
and
and
int3
lock
adc
addr16
cmp
cwtl
xchg
scas
cltd
loop
mov
dec
or
sbbb
pop
ljmp
sbbl
or
popa
imul
xchg
adc
ficomps
xchg
popf
out
jl
push
cmp
js
mov
pushaw
aas
xchg
xor
fdivrl
mov
cmc
sbb
jle
ljmp
popf
inc
xor
sbb
lock
jbe
add
adc
lret
jns
mov
lea
and
mov
dec
or
dec
out
orl
out
das
cmpsl
xor
add
mov
ret
out
andb
jle
pop
add
in
iret
outsb
clc
je
loope
sub
cmp
mov
sub
mov
push
int3
pop
in
nop
arpl
and
jbe
test
out
and
xchg
repnz
stos
jno
xor
mov
jb
adc
ja
dec
out
dec
pushf
rorb
inc
and
push
sub
cmc
mov
cmp
pop
push
dec
xchg
sbb
int
and
xor
mov
push
mov
inc
daa
cmc
inc
xchg
mov
add
in
jo
mov
mov
dec
addr16
jle
jno
add
jns
ds
lock
int3
cld
lods
sbb
pushf
and
inc
mov
repz
out
mov
xchg
sbbl
adc
mov
pop
dec
je
push
and
and
mov
out
dec
jmp
fwait
mov
in
out
xchg
mov
xchg
lahf
cmpsl
fwait
stc
sbb
leave
push
mov
je
cmp
out
in
xchg
lcall
das
inc
popa
insl
push
ds
cli
mov
ja
fwait
ret
fsubl
lods
sub
clc
out
cld
sbb
or
dec
jecxz
xchg
mov
arpl
or
sbb
mov
out
push
and
arpl
push
jle
add
or
stc
cmpsl
push
lock
mov
nop
ss
sbb
pusha
pop
xchg
movsb
in
dec
std
sub
mov
popf
jmp
out
aad
and
push
sub
jp
push
out
cmp
xchg
and
jmp
push
int3
js
sub
pop
or
add
mov
jmp
push
sbb
shll
fwait
out
popf
add
or
sbb
stos
mov
and
cwtl
data16
cmpl
sub
lahf
outsb
xor
out
fldenv
and
pusha
cmp
sbb
dec
inc
pop
mov
pop
out
scas
stc
cmp
subb
repz
clc
adc
or
inc
call
fstpt
in
daa
nop
out
jae
in
fcoms
std
out
push
rcll
push
dec
mov
xor
and
loopne
jmp
sbb
sub
lds
fsubr
ja
adc
imul
add
inc
scas
dec
push
and
pop
imul
hlt
addl
sub
xor
xchg
xor
imul
add
hlt
mov
in
push
cld
push
cltd
dec
test
dec
orb
and
inc
and
out
ret
in
add
test
ja
fs
int3
mov
and
emms
scas
out
sbb
adc
pop
and
sub
or
daa
loop
add
dec
or
adc
out
mov
xchg
out
decl
mov
addr16
dec
fdivrs
loop
icebp
push
adc
leave
out
lret
aad
mov
sub
dec
mov
test
mov
lret
mov
sbbb
inc
and
aam
lods
out
test
push
xchg
mov
andl
mov
ret
arpl
mov
push
mov
sbb
lret
test
clc
jmp
xchg
mov
xchg
sbb
ja
fcomi
mov
dec
mov
cmp
loop
je
int3
mov
pop
roll
sub
pop
js
cmp
imul
jnp
std
mov
xchg
mov
aas
repz
jg
xor
push
cmp
in
mov
outsb
jmp
out
or
ljmp
cltd
jb
fs
cmp
xchg
fldt
out
xchg
jecxz
sbb
mov
out
xchg
dec
cwtl
out
in
outsl
adcl
fistl
pop
pop
sbb
dec
out
es
js
push
xor
out
push
sahf
aaa
adc
jle
sbb
das
jmp
cmp
imul
test
pusha
ds
out
jecxz
mov
out
nop
iret
adc
jb
out
pusha
pop
test
shl
add
xorb
lds
and
loop
jge
stos
pusha
mov
xchg
xchg
xor
out
outsb
dec
clc
push
push
scas
mov
jne,pt
or
movsb
lock
fnop
out
sbb
and
ss
call
je
sbb
dec
test
clc
sub
or
data16
mov
hlt
adc
out
pop
cmp
je
out
mov
aad
out
inc
daa
add
mov
xor
xchg
lret
and
iret
stos
roll
pop
cmp
jge
cmc
mul
adc
movsl
lret
jp
out
jg
adc
jne
inc
test
mov
int3
out
pop
adc
pushf
add
ret
jno
pop
data16
adc
jns
sub
mov
inc
outsb
cmpb
out
scas
jb
enter
out
or
push
sub
adc
vmovhps
mov
mov
push
cmpsb
outsl
out
sub
mov
mov
out
jmp
pop
scas
adc
out
jns
cmp
jl
out
cmp
repz
out
pop
popf
or
inc
pop
cwtl
lds
loop
ljmp
out
fcompl
sti
int3
lcall
xor
sbb
out
enter
fs
mov
lcall
mov
xor
out
jle
cmp
pop
pushf
daa
xor
xor
dec
gs
js
cld
jge
adc
mov
outsl
add
icebp
fsubl
out
and
jmp
mov
test
cld
mov
jbe
and
clc
cmp
addr16
and
pop
cltd
popfw
jmp
jns
add
xor
mov
and
jb
jl
ljmp
in
xchg
out
inc
xor
test
and
daa
int3
cmp
jne
and
hlt
xchg
pop
sti
repnz
pop
pop
mov
je
notl
push
lret
ds
pop
xor
push
cmp
mov
push
adc
out
adc
lock
dec
adcb
ljmp
out
out
adc
out
jge
ljmp
lahf
out
cmp
cs
rclb
ja
imul
and
nop
jns
add
and
push
dec
ds
addr16
dec
imul
mov
mov
out
add
fistpl
repnz
mov
pushf
mov
push
call
cld
mov
dec
dec
mov
out
cltd
loope
xchg
popf
int3
mov
ret
jnp
jecxz
mov
mov
jmp
fists
shlb
sub
xorb
cmp
pop
cmpsb
orb
inc
pop
add
lea
scas
lret
mov
and
jbe
loope
mov
push
cmp
pusha
cmp
test
adc
push
lahf
stc
mov
inc
xchg
and
lock
pop
xor
aaa
dec
mov
jno
mov
xchg
cmp
jno
cmp
ja
xor
mov
push
xor
movsl
push
push
pop
loop
jbe
mov
xchg
dec
mov
popa
stc
ja
insb
add
add
pushf
sbb
mov
aad
push
std
inc
out
mov
cmc
xchg
adc
or
out
or
mov
sbb
aas
mull
fistps
sbb
int
aam
cmp
mov
test
pop
fildl
stos
adc
shrb
sbb
sbb
out
stos
dec
lret
adc
jp
jne
int
jle
out
cmp
loop
push
mov
add
aam
repnz
mov
and
pop
scas
hlt
xchg
cmp
jno
ds
lods
push
and
jge
add
in
push
mov
out
sub
adc
lea
ret
xchg
loopne
aas
icebp
lock
out
mov
ds
ss
loope
jmp
int3
mov
ret
out
aaa
ficomps
leave
sbb
xchg
xchg
jg
sub
jmp
and
push
stos
jmp
adc
incb
test
push
mov
dec
jb
mov
push
jg
insb
push
adc
cli
gs
out
cmp
mov
out
repnz
mov
daa
fldenv
mov
in
xchg
xchg
aas
xchg
pop
lcall
jmp
inc
sub
pop
daa
nop
fists
dec
out
pop
sahf
mov
imul
gs
cld
inc
out
inc
pop
cmp
mov
push
xchg
popa
xchg
jle
and
mov
cld
jb
mov
scas
mov
aad
add
ljmp
push
aad
imul
or
add
clc
xchg
dec
lret
inc
outsb
push
mov
mov
mov
int3
ficompl
fcompl
setae
lahf
dec
gs
test
xor
inc
xlat
push
test
jle
jnp
push
lahf
lret
hlt
fadd
jecxz
es
out
inc
cmp
and
out
xacquire
add
aam
pushf
das
inc
outsl
out
and
xabort
sbb
jl
cmpsb
outsb
cmp
jecxz
scas
or
sarb
xchg
jmp
inc
into
lret
or
mov
jl
mov
xchg
shll
fiadds
lods
push
out
pop
aad
or
or
jno
out
mov
out
aaa
mov
mov
out
addl
push
mov
or
adc
out
fsubrs
xchg
adc
inc
push
sarb
xchg
lret
aas
lret
out
in
mov
out
inc
enter
into
arpl
insl
xor
loop
fs
mov
cmp
mov
dec
ret
dec
negl
insl
mov
pop
inc
fdivrp
sub
out
mov
loopne
out
div
fdivl
xor
sti
push
dec
std
dec
mov
addr16
mov
pop
out
inc
mov
cmpsb
out
icebp
paddd
fs
adc
xchg
mov
mov
cmp
xchg
cmc
cmpl
mov
mov
mov
pop
cwtl
sbb
xchg
loop
dec
inc
inc
movsl
stos
push
xor
xlat
shr
rcrb
popf
sbb
pop
or
pushw
ret
mov
jmp
pop
out
mov
mov
add
pop
mov
out
sub
jmp
mov
dec
popa
stos
lock
adc
add
aam
cltd
push
jl
out
mov
push
sbb
mov
pop
add
in
cmp
sahf
and
lahf
je
jnp
jp
out
or
shlb
int
push
int3
jb
xor
es
loope
lret
mov
loop
icebp
aad
and
mov
mov
sbb
mov
add
xchg
call
sub
xchg
xchg
mov
mov
sti
out
pushf
pop
jl
or
scas
out
add
dec
lea
add
in
std
stos
dec
pop
xchg
dec
aad
popf
mov
test
mov
out
mov
push
inc
out
mov
mov
sub
and
int3
mov
xor
ret
pop
or
inc
push
scas
sahf
jecxz
sbb
ss
cmp
inc
pop
jmp
mov
cmp
pop
jno
jne
out
dec
inc
int3
fs
push
mov
out
push
xchg
inc
lret
mov
add
call
cmpsl
clc
mov
test
sub
adc
out
lods
pop
fcompl
out
add
mov
incb
aas
xchg
pop
imul
add
or
loopne
mov
xchg
dec
push
push
in
test
push
out
push
sub
sbb
movsl
addr16
pop
fwait
loop
out
loopne
or
fnstenv
dec
aam
mov
out
sbb
rcrb
mov
lret
out
fwait
outsb
jne
insb
cmp
in
jmp
test
es
mov
pop
add
or
clc
fildl
cld
sub
pusha
out
or
and
push
mov
or
push
sbb
sub
dec
adc
push
loope
cli
jnp
pop
in
dec
loope
cmp
mov
scas
inc
outsl
outsb
mov
arpl
mov
lahf
lret
out
xchg
mov
mov
pop
xchg
xchg
out
mov
loop
inc
dec
movsb
push
cmp
cmpsl
out
jg
scas
gs
and
stos
in
out
mov
cmpsl
std
popa
test
out
gs
out
repz
and
mov
mov
push
popa
int3
fdivrs
out
dec
sbb
pop
mov
decl
mov
inc
cmc
test
aam
enter
xchg
fildll
or
bound
and
enter
stc
sub
pop
insl
push
lods
mov
and
jge
cmp
mov
cld
add
add
jne
mov
in
bnd
cmp
mov
stos
adc
jo
sahf
je
idivl
movsb
cmp
pop
or
mov
das
ret
pusha
les
mov
scas
arpl
in
mov
daa
cmp
fmull
sbb
out
stc
bound
adc
sbb
push
movsl
in
ret
mul
mov
jbe
xchg
add
fdiv
sti
xor
xchg
icebp
jmp
jnp
and
imul
sbb
lds
xchg
push
fcomps
pop
jne
mov
lret
call
or
push
inc
bound
xchg
out
popa
xor
aam
jnp
out
inc
and
jmp
ror
fcoml
xor
adc
daa
lea
lahf
or
cmpsb
push
jecxz
jne
fsubr
mov
push
jp
mov
test
mov
xor
xlat
ds
imull
scas
jb
test
xor
dec
call
sub
fs
mov
cltd
out
cli
ss
jp
cld
stos
enter
sub
xchg
and
mov
mov
in
add
pushf
pop
xor
cmpsb
int
inc
mov
pushf
out
push
popf
daa
mov
or
stos
punpckhwd
loopne
repz
lret
mov
lock
ds
push
sub
dec
push
ret
cmp
xchg
movsl
loope
adc
sbb
dec
inc
daa
aad
addb
insl
mov
adc
dec
lret
mov
leave
insb
mov
cwtl
call
loop
push
mov
outsb
xlat
lods
daa
leave
jns
mov
fildll
xchg
add
iret
cmp
pop
xor
ret
jne
xchg
out
std
out
mov
adc
filds
cmp
sub
bound
sub
bound
pop
sahf
pop
cmp
xor
cs
out
inc
stos
mov
and
pushf
jnp
movsl
jnp
adc
xor
addr16
push
ret
jmp
in
cmp
pop
lret
xor
push
add
inc
sbb
dec
rorl
lret
fdivrs
inc
sub
ret
push
mov
movsl
repnz
push
ss
dec
pop
jne
das
push
addr16
sub
dec
cmp
std
repnz
cld
add
call
pushf
sub
pushf
xchg
dec
and
cmc
inc
push
mov
sub
insl
ja
cld
arpl
ret
mov
mov
das
out
push
lds
pop
lock
es
aaa
sti
in
sub
cmp
cmpsb
xchg
inc
insl
xorl
sti
out
jbe
clc
lds
aam
test
and
mov
mov
fldt
or
sarl
loop
mov
pop
xchg
push
add
bound
daa
xor
inc
lock
repz
outsl
rcrl
fistpl
insl
push
pushf
gs
sub
inc
pop
mov
ss
ror
adc
push
pop
xchg
sub
pusha
inc
jb
push
test
mov
mov
repz
subl
jno
mov
jp
loopne
loope
push
js
push
fmull
insb
aam
imul
mov
ljmp
js
mov
repz
movsb
sub
inc
mov
sbb
cli
lods
jb
sbbl
mov
mov
sbb
cmp
jo
fdivl
sbb
fs
cmp
fisubrl
mov
ret
addr16
pop
js
dec
mov
inc
mov
adc
repz
call
cmp
jo
dec
insb
pop
or
mov
stos
mov
mov
push
imul
ds
mov
push
adc
addr16
je
into
daa
pop
push
xchg
inc
in
test
sbb
or
jne
gs
sub
xchg
scas
jne
or
stc
xor
adc
fadds
adc
mov
sti
jmp
stc
add
pop
js
xor
mov
xorl
sahf
sub
add
or
les
adc
int3
pop
cmc
add
add
fadds
in
xor
and
xor
addl
cli
popa
ret
cmp
aaa
jmp
jb
xor
pop
int3
loope
pop
push
and
int
inc
jb
jmp
pop
lods
call
inc
movsb
or
out
jb
gs
fsubl
xor
neg
and
sarl
hlt
sti
gs
mulb
fsubr
mov
aad
xchg
pop
test
pop
movsl
mov
mov
add
shrl
cmc
pop
sub
or
insl
cmc
scas
shl
cmpsl
pop
in
pop
in
xchg
and
xor
mov
dec
insb
leave
gs
shll
xchg
addr16
push
lcall
sti
mov
mov
mov
sub
lret
test
pop
cmpsl
lcall
xor
fisttps
or
inc
push
cmpsl
pop
jmpw
fisubl
loopne
aas
sahf
cmpsl
mov
xor
sub
mov
addl
cltd
mov
hlt
cmp
push
mov
cmpsb
jns
cli
sub
sbb
movsl
in
scas
inc
je
xor
mov
aad
mov
and
push
inc
fsubs
shll
xchg
sub
pop
pop
jp
lcall
pop
cmc
imul
ja
stc
jbe
add
inc
lods
sub
xchg
sub
inc
add
call
inc
lods
jl
dec
lds
cmpsl
mov
lcall
jg
dec
leave
loope
icebp
mov
lods
dec
loop
inc
jno
fadd
in
mov
clc
cltd
fsubr
lcall
pop
out
cmpsb
jmp
adc
out
pop
cmpsl
sahf
mov
mov
movl
jnp
lret
mov
pop
iret
cmp
dec
fwait
mov
add
aam
dec
or
sub
pop
xchg
add
outsl
xor
inc
or
movsb
mov
jge
in
add
cwtl
push
daa
in
sbb
inc
mov
mov
push
xchg
push
dec
sbb
out
inc
and
rcl
imul
cwtl
je
in
outsl
movsl
mov
gs
daa
aas
xor
dec
scas
leave
jns
push
sub
pushf
cmpsl
lods
jle
sbb
dec
dec
fistpll
and
cmp
push
scas
in
add
fsub
in
test
and
and
sbb
xchg
ljmp
inc
addr16
enter
roll
pushf
repz
lahf
pop
sub
int3
sub
fs
xchg
push
sub
xorl
push
sub
dec
add
addl
add
pop
mov
outsb
mull
loopne
push
fiadds
scas
out
imul
mov
ret
inc
dec
stos
pushf
inc
icebp
push
xchg
cmpsb
shrl
insl
jo
insl
sarl
add
and
mov
mov
xchg
xlat
dec
mov
das
out
adc
les
decb
call
mov
cwtl
sub
push
jp
paddsb
stos
icebp
out
in
outsb
and
jp
cmc
mov
sbb
jae
out
or
das
out
mov
lret
pop
int
mov
repz
imul
movsb
mov
in
stos
jne
imull
xchg
loop
push
cs
xchg
sub
out
jo
insb
xchg
out
incl
flds
sub
out
xchg
pop
dec
mov
mov
push
sbb
shl
data16
punpcklbw
push
xchg
adc
mov
lret
sbb
inc
out
outsl
test
stos
cwtl
mov
pushf
jns
ss
out
mov
or
push
lock
mov
out
lcall
mov
imul
fistpll
cs
mov
sbb
mov
and
sub
out
jne
fidivl
xor
fisttps
sub
out
je
xchg
mov
out
mov
ljmp
mov
mov
pop
cmc
pop
out
dec
mov
and
mov
xor
or
out
sbb
pop
in
out
mov
test
jno
ret
lret
dec
cltd
aad
add
xor
and
mov
lods
rcll
andl
push
or
int
ss
cmpsl
mov
inc
in
jae
dec
fisubl
xorb
dec
std
mov
out
push
scas
pop
pop
test
add
gs
adc
lds
imul
clc
sbbl
push
outsb
out
xorb
movsl
xor
or
xor
push
sbb
pop
fs
mov
pop
insl
jne
and
dec
movsb
jmp
cmp
cmp
xchg
outsl
fnstcw
push
adc
rcl
sub
xor
shll
fldcw
fcmove
cmp
sbb
add
test
cmpsb
imul
gs
jne
lods
push
push
mov
fs
add
jnp
loopne
in
inc
sbb
xor
sub
fucomi
jae
pusha
xchg
dec
fimull
mov
add
rcrb
movsl
out
mov
mov
stc
xor
pop
mov
repz
cmp
jmp
inc
mov
jno
out
bound
xor
ret
xlat
clc
shlb
and
inc
jge
push
inc
int3
and
cmp
cmp
mov
insb
fs
ja
daa
xchg
add
ficoms
imul
inc
add
imull
inc
fcoms
adc
mov
inc
dec
fadds
in
mov
adc
cmp
pop
insl
aad
add
or
and
rorl
xchg
xor
push
test
lcall
insb
mov
dec
popa
lahf
lds
jmp
fsubs
dec
imul
jl
aad
jns
mov
mov
mov
jo
cmp
push
int3
add
addr16
mov
mov
cmp
push
cli
iret
mov
sahf
and
int
xchg
dec
or
inc
dec
test
dec
fs
pop
in
call
dec
mov
lcall
out
leave
and
cwtl
scas
pop
dec
xor
cmp
xorb
inc
test
in
enter
mov
mov
mov
mov
rcr
cmp
adc
xor
pop
pop
into
outsl
pop
lret
sbb
xor
int
dec
sub
aam
repz
mov
and
aam
jl
sti
in
xor
cmpsl
arpl
fmuls
ret
and
inc
push
stc
aad
enter
fs
add
and
inc
xchg
mov
movsb
add
pusha
mov
or
or
movsl
mov
imul
adcl
xor
adc
xchg
inc
dec
mov
mov
int3
inc
add
fidivs
addr16
bound
adc
sbb
or
mov
lret
out
mov
add
loopne
hlt
out
cld
daa
ret
cmp
jecxz
cli
mov
mov
cmc
ja
mov
sub
out
and
cwtl
fstps
out
je
repz
pop
xor
dec
sub
or
or
xchg
jl
jp
das
jo
mov
jmp
out
inc
in
outsl
fiaddl
shl
mov
lret
mov
add
aaa
cmpb
add
jl
loop
mov
jle
cmpsb
add
scas
mov
mov
in
icebp
nop
jl
out
mov
shll
out
fnstcw
out
inc
xlat
enter
incl
mov
out
inc
sbb
jmp
loop
insl
adc
jg
mov
and
outsb
repz
push
ret
lahf
push
mov
or
push
nop
idivl
push
ffree
xor
sub
in
jge
call
fcompl
push
mov
out
jmp
xchg
xchg
cltd
xchg
add
js
not
cmp
movsl
adc
shl
inc
out
sub
add
scas
outsb
repnz
dec
mov
filds
pop
sahf
push
mov
bnd
andb
xor
cmp
mov
mov
out
inc
subl
divl
mov
iret
movb
test
adc
pushf
pop
mov
cld
sub
data16
repnz
jmp
lahf
dec
or
repnz
and
jecxz
bound
aam
xorl
fistl
orb
mov
lods
loop
push
xchg
or
sub
sti
imul
decb
out
add
mov
push
fmull
daa
jmp
ds
mov
sti
pop
out
mov
pop
ja
cmp
out
or
push
out
dec
fcoms
call
scas
jmp
or
out
inc
int3
sub
out
lret
nop
shl
sbb
mov
cmp
pop
imul
xchg
lret
insl
dec
cmp
and
inc
jmp
outsb
fcmovnu
in
iret
adc
sub
pop
rclb
pop
sarb
sub
cmp
das
js
out
and
cmp
and
ret
lret
pop
leave
loop
sbb
out
inc
lea
out
mov
stc
in
add
sbb
mov
mov
hlt
pop
adc
inc
out
push
out
jecxz
or
out
loopne
cmp
scas
cmpsb
out
rorl
out
lods
leave
imul
out
test
out
fwait
or
iret
lret
aad
imul
vlddqu
jne
mov
xor
jb
loop
or
or
fwait
repnz
icebp
xor
or
je
pop
in
ret
mov
out
mov
bound
dec
mov
and
mov
out
out
mov
lret
mov
xchg
jno
or
lahf
sub
push
mov
out
paddb
cmpsb
int
jmp
cmpsb
es
aam
xlat
sbb
adc
test
adc
push
nop
rol
lods
faddl
test
mov
sub
rorl
lock
dec
sub
out
add
jmp
cmp
mov
out
xorb
cmc
and
inc
xchg
nop
out
pop
loope
jns
daa
jne
leave
ret
aaa
inc
out
fs
icebp
int3
out
mov
arpl
out
cmpsb
out
fmul
sub
out
sbb
dec
lds
out
mov
aam
out
ret
pop
je
aad
xor
mov
leave
lods
daa
push
xchg
pop
xor
push
xchg
negl
push
addr16
sub
jge
add
xor
dec
call
out
jp
movsb
mov
jecxz
mov
mov
test
jle
mov
mov
jns
pop
mov
pop
lret
lcall
stos
je
xchg
stos
push
sub
sub
add
pop
sub
adc
int
mov
lock
add
mov
jns
stos
mov
out
cmc
fisubrs
sbb
roll
dec
jl
stos
out
call
repnz
sub
pop
push
pop
mov
outsl
lea
mov
jns
adc
rolb
out
int3
hlt
jne
jecxz
fadd
dec
push
add
out
adc
lods
int3
adc
cwtl
jne
cs
xchg
psrlq
js
pop
jne
sub
mov
nop
fcmovb
mov
mov
pushf
inc
stos
jg
jecxz
or
outsb
or
out
lret
push
mov
adc
hlt
jbe
cmp
mov
mov
mov
xchg
jno
lcall
cli
or
fcmovnbe
ds
pop
pop
xor
sahf
add
out
mov
sarb
scas
rcrl
xor
in
daa
nop
mov
adc
inc
fld
xchg
mov
mov
inc
enter
push
push
out
scas
stos
testl
jmp
fwait
mov
adc
out
sti
pop
xchg
inc
in
lods
shl
ljmp
out
das
mov
mov
int
out
push
sbb
xchg
lods
xorl
cmpsb
mov
mov
fwait
into
out
mov
mov
mov
mov
jmp
jl
add
lds
jge
cmp
cmpsb
popa
out
scas
scas
inc
pop
xchg
xor
xchg
jle
jp
pop
dec
jne
inc
aaa
stos
add
jb
xor
out
movsb
jg
cltd
test
insl
imul
jne
or
out
fstpt
lret
lret
dec
mov
ror
or
pop
out
inc
jmp
test
mov
in
in
push
imul
mov
std
inc
out
xor
movsb
and
test
dec
jmp
out
jg
sahf
mov
and
popa
mov
out
xchg
pop
mov
ja
enter
mov
sahf
out
out
push
ficoms
daa
gs
mov
out
clc
sbb
inc
xlat
jmp
roll
das
in
cmp
adc
adc
stos
jecxz
xchg
out
cmpsl
fwait
pop
fsubs
out
adc
xor
pop
inc
sbb
ljmp
cwtl
scas
pop
jmp
jns
jmp
popa
mov
iret
in
lret
dec
jle
out
shlb
or
jp
sbb
hlt
test
aaa
test
xchg
cs
aad
add
scas
out
mov
ja
sbb
std
add
insl
or
jb
into
pop
mov
cwtl
std
pop
pop
sbb
xchg
xor
inc
lea
or
test
inc
mov
stc
shll
xchg
movsb
popa
and
sbb
mov
adc
mov
jl
movb
stos
js
push
fwait
ss
jp
cmp
dec
movsb
adc
out
add
adc
les
das
in
inc
insl
xchg
jmp
jns
cli
inc
aad
inc
push
mov
loop
fnstcw
sbb
cwtl
inc
cmp
out
dec
scas
ds
popf
jl
mov
ret
lret
or
cmp
ljmp
and
adc
sbb
sti
mov
out
push
xchg
sbb
das
shl
fcmovnb
out
xchg
mov
movsb
daa
popl
mov
jno
out
mov
cmp
sti
add
rcll
clc
dec
scas
push
pushf
ret
cmp
fistpl
inc
movsb
loopne
jp
and
sbb
cmp
adc
mov
imul
fsts
sbb
shrb
push
mov
loopne
mov
out
sbb
std
andb
sbb
ja
out
lds
data16
mov
cmp
mov
adc
aaa
push
sub
lret
subb
mov
andb
iret
fisubrl
ja
mov
shrb
push
fdivrs
clc
mov
mov
loop
or
ljmp
xlat
ret
pop
imul
and
and
pop
sub
imul
xchg
cmc
jle
stc
jge
inc
and
out
jne
cmp
and
mov
push
cmpsl
mov
fnstcw
mov
mov
push
out
loope
fdivrs
nop
lahf
pusha
rcl
mov
pushf
movb
jo
aaa
lds
fsubrl
mov
test
faddl
sbb
push
mov
aaa
push
fsubrl
out
hlt
jne
inc
sbb
aaa
addl
sub
ja
push
fisubs
in
push
jp
jmp
adc
test
jp
mov
aaa
aad
jp
inc
aaa
lods
in
aas
dec
aaa
adcb
sub
pop
aaa
add
arpl
xchg
imul
push
ljmp
cmpsl
lcall
lcall
mov
movzwl
add
sub
push
shll
mov
jl
xchg
andb
leave
in
insl
push
sub
mov
add
cmpsb
fs
mov
adc
or
leave
mov
and
push
aam
iret
mov
pop
insb
cmp
das
fsubrl
movsl
xor
scas
cmp
dec
sub
inc
mov
test
cmpsl
fisubrs
or
insl
das
ret
mov
dec
jp
xchg
mov
add
sub
ljmp
loopne
xchg
call
loopne
dec
jl
add
out
add
jbe
jle
data16
ret
out
inc
ja
mov
fs
movsl
clc
call
pushf
mov
mov
mov
fcoml
mov
mov
lahf
shll
repz
cmc
xor
stos
ja
add
dec
dec
sub
bound
or
popa
loopne
sbb
pinsrw
add
adc
xchg
in
rorl
cmp
sti
out
xor
loop
das
shl
fdivl
scas
push
mov
mov
in
dec
lods
insl
mov
jne
cmp
fwait
leave
lods
aaa
and
jmp
aaa
roll
adc
popa
mov
movsl
and
gs
jne
or
in
xchg
std
test
out
sub
mov
cmc
mov
mov
and
ret
or
int
fnsave
add
daa
push
sarl
lock
data16
xchg
mov
jne
cld
lods
cmpsb
movsl
out
pop
sub
and
adc
cmp
push
out
lock
loope
jb
ret
adc
ficompl
push
add
scas
push
fdiv
lea
jge
xchg
pop
loop
jle
fistpll
jnp
in
pop
mov
lea
mov
sbb
or
ss
inc
stos
and
cmp
mov
and
xor
mov
inc
pushf
xchg
insb
add
shl
mov
gs
decb
aad
jmp
adc
mov
mov
mov
repz
fadds
add
out
xchg
pop
dec
neg
push
ret
out
adc
mov
sbb
add
aam
cmp
add
test
jle
outsb
mov
cmp
arpl
cmp
movsb
inc
jne
mov
mov
ss
xchg
enter
dec
out
test
sbb
dec
dec
mov
cmp
push
mov
pusha
inc
mov
outsl
mov
xor
movsb
jmp
out
mov
fildll
out
and
xor
cmp
out
inc
push
jo
xor
fstpt
xchg
loope
add
ljmp
xor
mov
push
daa
out
or
cmp
dec
xchg
out
push
lret
mov
pop
stos
out
add
inc
inc
sub
mull
lods
fsubl
push
lds
lret
rclb
outsb
js
test
xchg
push
push
pop
dec
mov
lods
out
scas
cltd
inc
and
aas
shlb
pusha
adc
cmp
dec
push
fsub
jbe
xchg
imul
js
cli
or
rclb
frstor
sahf
out
iret
test
mov
xchg
int
xchg
test
out
pop
lea
pop
insl
cltd
scas
pop
das
ret
clc
adcb
out
mov
dec
out
mov
daa
ret
fsub
pop
sbb
xchg
jno,pn
out
or
test
mov
inc
mov
icebp
aaa
fistpll
mov
ljmp
sub
jecxz
jmp
jge
sub
push
dec
sbb
mov
or
out
stos
push
adc
pop
pop
out
pop
xchg
xor
jno
int3
add
xor
out
aas
loop
neg
jmp
int3
jecxz
lcallw
jmp
or
ret
out
loopne
insb
data16
shl
dec
mov
adc
rcrb
push
inc
mov
loope
dec
std
addr16
jecxz
test
movsb
xchg
mov
push
adc
pop
adc
and
scas
into
das
stos
add
push
xchg
out
add
les
in
cmp
xchg
in
jo
sub
jne
popf
scas
in
sahf
das
lret
or
inc
xchg
in
cmp
mov
out
pop
ffreep
loope
movsb
inc
out
push
enter
ds
cld
imul
cmp
sub
pusha
std
push
mov
int
jle
sub
repnz
hlt
push
lret
outsl
out
mov
push
dec
cmc
cltd
aas
jns
aam
cmpsl
inc
stos
xor
xor
frstor
fisubl
subb
rolb
cli
push
cmc
sbb
in
repnz
out
sbb
sub
lret
jns
outsl
xlat
adc
test
mov
es
hlt
pop
cmc
cmc
fucom
mov
jecxz
in
jl
loopne
out
xchg
fisttpl
jg
enter
cld
lret
jb
out
stos
jl
sub
fwait
xchg
inc
movsb
inc
mov
sub
jne
repz
xchg
pop
aam
rcl
sub
mov
test
cmp
add
ljmp
out
pushf
outsb
push
scas
mov
push
nop
adcl
aad
outsb
xor
mov
out
mov
ss
out
in
mov
lea
adc
and
data16
lahf
sub
out
pop
rcr
push
mov
mov
insb
sbb
out
fst
dec
test
mov
out
inc
cmpsb
jne
mov
mov
insl
push
mov
rclb
popf
or
jb
add
lock
add
push
cwtl
je
mov
mov
inc
out
repnz
push
rorb
out
mov
jecxz
push
outsb
dec
sti
push
je
out
push
dec
stos
test
out
mov
push
adc
xor
mov
ret
rorl
out
xor
sub
pop
insl
mov
icebp
int
out
cmp
daa
inc
lret
jbe
jne
xlat
xchg
insb
mov
mov
dec
jne
mov
pop
int3
push
out
mov
inc
push
xchg
sub
mov
les
inc
fisttpl
fucomip
les
jp
adc
jo
das
test
cs
stos
je
insb
adc
lcall
push
or
lock
movsb
inc
push
loopne
or
cli
out
cmp
push
test
loop
out
dec
not
outsb
xor
imul
mov
iret
dec
push
jo
out
sbb
xchg
push
mov
subb
out
mov
fldl
aas
clc
mov
cmc
insb
out
fdivr
sub
sub
or
jmp
pop
xchg
lahf
out
jge
fwait
enter
cmp
mov
push
mov
jle
pop
cwtl
adc
inc
out
movsb
jno
mov
xor
xor
jl
push
out
sub
out
mov
xchg
xchg
push
xchg
xchg
xchg
fstpl
adcb
out
aad
mov
dec
icebp
fwait
lret
js
addl
in
pop
and
xlat
adc
ss
mulb
inc
mov
mov
ja
sti
pushf
inc
jge
enter
inc
in
sbb
dec
pop
cli
sub
lret
imul
pop
sbb
gs
xor
inc
dec
fs
mov
loopne
dec
xchg
call
jmp
dec
stc
lock
mov
mov
pop
call
lods
sbb
out
jp
in
dec
inc
popf
jbe
ret
lds
dec
fcmovnu
test
out
test
stos
cmpsb
push
inc
lret
adc
push
xchg
sbbl
xor
pop
lods
imul
outsb
cmpl
and
popa
call
mov
or
mov
popa
push
mov
jbe,pn
push
inc
aad
fimull
sub
mov
cmp
fildll
or
mov
or
jp
push
sub
aad
jp
xorb
jecxz
aaa
in
xor
mov
lea
insl
pop
mov
mov
aaa
aad
jp
push
mov
cmp
aaa
cmpsl
jecxz
imul
aaa
push
ffreep
aaa
jecxz
aaa
jno
fsubr
and
sahf
mov
sar
stos
test
mov
cmp
test
cmp
or
inc
aam
cmp
lods
gs
mov
unpcklps
aaa
mov
jl
aam
cltd
int3
in
cmp
mov
mov
insl
ret
mov
xchg
xlat
xor
cli
xor
adcl
aas
test
hlt
mull
nop
not
lds
push
xlat
out
sti
jns
leave
xor
jne
xor
insl
jb
pop
je
lcall
aas
aam
hlt
aam
pop
not
subb
sahf
stc
in
leave
cmp
add
hlt
orb
ss
mov
and
lds
hlt
fdiv
in
lret
adcb
mov
and
fs
fcomps
xor
lcall
mov
push
push
das
insl
gs
int
lds
insl
arpl
jbe
dec
std
cld
push
insl
inc
or
fisubrs
inc
and
mov
push
or
pop
nop
test
sbb
xchg
les
and
dec
adc
inc
jl
pop
and
dec
fldl
push
adc
sbb
xor
jecxz
xor
stos
push
or
sub
add
mov
push
sub
testb
xchg
or
and
pop
push
sbb
inc
inc
cmp
pop
ljmp
lcall
fsubs
jle
and
pop
inc
addr16
and
aam
mov
dec
sahf
stos
pop
and
sub
sbb
stos
sarl
mov
loope
pop
sti
aad
jnp
inc
or
sti
nop
movb
fidivrl
enter
out
or
inc
out
push
push
out
pop
mov
fxch
add
std
jl
mov
adc
push
pop
cmp
mov
sarl
add
xor
xchg
gs
sbb
int
rolb
jge
js
add
pop
xchg
xchg
pusha
push
imull
cwtl
popf
cli
movsb
push
cmpsl
push
sub
cld
loopne
enter
aaa
inc
test
icebp
push
and
add
pop
in
mov
pop
or
sar
lods
push
xchg
mov
mov
push
imul
xor
and
movsb
stos
inc
gs
xlat
cmp
sbb
lahf
jp
pop
mov
hlt
daa
push
fdivrp
or
dec
xor
movsl
jmp
repnz
in
xor
jno
add
cwtl
pop
fsubl
scas
daa
add
stc
jmp
pop
inc
mov
cld
das
jno
jge
jo
into
stos
sub
popa
dec
mov
inc
pop
jno
inc
movl
scas
mov
popf
cli
sar
fidivl
jle
mov
mov
movsl
mov
dec
stos
rorb
sub
sbb
cs
aaa
xchg
mov
sub
and
lds
jno
outsb
adc
adc
test
or
push
dec
add
xor
icebp
mov
stos
subl
pop
fs
int
xlat
rcll
sahf
faddl
sub
not
jno
lret
inc
add
mov
ret
out
cmc
or
les
sbb
push
or
shl
int
aam
ret
mov
lret
out
and
imul
stc
sub
add
shll
pop
mov
mov
aaa
pop
fcoml
mov
aam
movsl
lods
jg
mov
in
mov
xchg
sbb
out
int
dec
aad
jp
loope
jne
dec
test
aad
gs
gs
fisttps
vorps
inc
or
mov
push
push
mov
dec
pop
sbb
xor
in
cmpsb
mov
cmp
lock
gs
xchg
or
int3
dec
and
ret
add
push
inc
jne
pushf
mov
dec
xchg
jne
out
cwtl
push
test
bound
push
add
push
movsb
fsubr
clc
xor
inc
xchg
and
shrl
fs
xor
lahf
mov
lods
xchg
and
mov
js
or
cs
jecxz
add
stc
lea
imul
xchg
movsl
xchg
sub
mov
movsl
loop
das
fildl
jl
lea
imul
movl
bound
insl
test
cmp
jo
jb
mov
and
and
jmp
out
inc
inc
sub
add
cmpsl
lret
inc
daa
inc
adc
aam
inc
popa
sub
sub
mov
stos
gs
mov
shl
stc
adc
sub
adc
push
inc
mov
jg
mov
inc
mov
mov
hlt
jge
sub
sub
dec
pop
push
mov
jl
jge
shr
and
popf
cli
loope
arpl
movsl
add
or
mov
sahf
sbb
adc
in
dec
mov
test
add
sub
test
xor
mov
loopne
add
scas
imulb
shll
jl
adc
push
adc
mov
lea
in
mov
in
movsl
leave
shlb
sub
add
mov
mov
cmp
rcll
mov
lods
cli
je
push
repz
add
dec
mov
mov
sub
xlat
add
push
addl
mov
cmp
xchg
or
stos
xor
mov
dec
ljmp
cmpsb
xor
adc
and
inc
addr16
test
test
adc
jne
jne
jns
sub
dec
enter
enter
movsl
jae
in
fwait
mov
xor
dec
test
and
xor
insl
cwtl
mov
roll
cs
or
mov
imul
lret
or
and
ret
gs
fdivrs
fadds
add
iret
and
xchg
movsl
pop
hlt
mov
and
aaa
push
mov
je
inc
test
andl
ljmp
lea
fs
pop
hlt
inc
pop
inc
je
push
push
mov
sub
xchg
mov
mov
and
xchg
adcb
mov
pop
adc
xchg
cld
lock
data16
mov
outsb
shll
add
and
js
mov
cld
sub
hlt
fisttpll
icebp
jne
cli
inc
in
lds
sti
vunpckhpd
and
mov
pop
test
je
aaa
movsb
mov
gs
xchg
shrl
test
cmpsl
adc
push
scas
push
xor
mov
pop
sahf
add
mov
sub
aaa
aaa
push
pop
sub
push
xchg
js
out
aam
push
and
ffree
dec
test
mov
ret
or
imull
mov
push
inc
test
push
popf
cli
loope
neg
movsl
aaa
inc
inc
mov
outsl
adc
mov
shll
push
or
call
mov
movsl
clc
std
or
notl
in
jbe
out
outsl
leave
fucomip
dec
sub
and
mov
addr16
or
nop
push
in
push
mov
ja
sarl
imul
mov
cmp
mov
push
lret
sub
pop
scas
inc
pop
repz
fs
mov
gs
aaa
popa
or
and
ja
or
push
mov
jbe
pop
arpl
mov
jle
push
push
pop
repz
jnp
clc
in
mov
in
imul
cmpsl
sbb
jb
push
movsb
iret
xor
cli
lods
xor
xor
xlat
repz
shrb
sub
negl
push
sub
add
jne
sahf
pop
mov
sbb
or
sti
in
mov
xchg
stc
or
mov
xchg
sbbl
or
out
jp
call
es
test
mov
addb
jp
cmc
fdivs
ret
out
sub
inc
movsl
pop
je
push
bound
push
pop
notrack
bound
cwtl
in
add
jb
xor
pop
scas
dec
rclb
cs
cmpsl
gs
sar
push
cld
lret
sbb
jno
adc
cmpsl
cmp
popf
lock
iret
mov
test
sub
iret
push
int3
inc
and
mov
rol
or
imul
cmp
pushf
clc
dec
inc
cmp
sbb
sub
scas
sub
test
sub
mov
cmp
in
jbe
loop
sub
cmp
in
lret
cs
popa
inc
sbb
inc
jp
fnstcw
sub
sub
adc
inc
fdiv
pop
inc
xor
loope
jmp
lret
sub
lcall
mov
and
orl
xchg
jmp
inc
adc
insb
mov
push
cltd
xchg
outsb
jmp
int
movsb
push
repz
jae
xorl
xchg
out
repnz
cltd
cs
jmp
jp
cmp
movsl
gs
sbbb
dec
in
push
ja
fs
mov
aaa
aas
xor
xlat
sub
adc
enter
rcll
add
or
sub
add
rcll
dec
cmp
insl
sub
in
mov
pop
dec
xor
add
call
pop
std
rcll
xchg
pop
adcb
enter
fimull
pop
cmp
inc
testl
das
lea
scas
cmpsl
cmp
icebp
add
push
in
inc
test
push
gs
aad
js
push
push
int
cmpsl
gs
lea
in
enter
push
ja
and
add
adc
daa
lock
mov
push
dec
and
push
sahf
xchg
cmp
xor
sub
mov
shll
clc
pushf
cmp
mov
mov
jmp
aaa
sar
test
inc
sub
mov
clc
xor
and
popa
lret
aaa
sub
add
clc
xor
xchg
aad
js
cwtl
iret
aaa
cmpsl
fiaddl
dec
aam
xchg
lds
mov
pushl
mov
mov
test
lds
mov
xor
push
and
cwtl
add
aam
add
xchg
mov
mov
lret
xor
iret
aad
js
iret
aaa
xor
mov
pop
inc
outsb
inc
xlat
popa
in
fnstenv
xchg
iret
aad
js
pop
cld
test
ljmp
xor
xor
push
sub
dec
idiv
sbb
jno
in
adc
adc
loop
mov
inc
in
test
and
repz
and
pop
adc
xor
out
mov
inc
adc
popa
mov
pop
xchg
negl
ljmp
fcoml
mov
mov
inc
repz
sbb
gs
and
ljmp
dec
fsts
xchg
insl
jne
sub
push
movsl
aad
in
jbe
pop
add
fnstsw
adc
inc
xchg
test
and
push
add
or
rcl
test
mov
ret
xor
je
in
mov
inc
lods
xchg
xchg
mov
or
das
lds
push
jge
in
out
cmp
add
xchg
mov
add
cmp
enter
cmp
sub
push
dec
adc
xor
dec
push
rep
int3
jne
and
mov
fs
jle
cmc
ljmp
faddl
adc
push
aad
bound
mov
rsqrtps
inc
xor
push
mov
inc
ror
out
fbld
bound
mov
cmpl
cli
xchg
dec
and
fcom
dec
mov
sbb
inc
add
popa
adc
dec
bound
mov
push
test
push
or
pop
pop
into
movsl
test
aas
push
lods
inc
pop
enter
xor
rorl
and
lock
push
jmp
lds
mov
mov
xor
notl
pop
das
and
mov
dec
or
mov
fmull
hlt
lret
rcrl
popl
jne
jae
cli
cs
movsb
xchg
imul
gs
cmpsl
xchg
xchg
das
pushf
mov
out
sarl
sbb
xor
hlt
loop
lret
call
popf
jmp
push
lea
fimuls
iret
mov
data16
or
enter
orb
out
adc
cs
jecxz
push
arpl
test
or
xchg
push
cmpsb
pushf
insl
inc
inc
and
repz
lret
sub
imul
pop
fadds
pop
push
stc
mov
loope
xor
xchg
cmc
ds
xor
pop
push
ret
fwait
xor
push
sbb
xchg
push
jbe
daa
loope
mov
mov
pop
loopne
mov
shl
and
or
inc
jmp
aad
in
incb
out
loopne
movsl
test
push
add
sbb
repz
fwait
loopne
mov
push
insl
jmp
sbb
aam
clc
stc
xor
out
adc
in
notl
and
sarl
gs
gs
test
and
dec
inc
shrl
or
adc
icebp
repz
adc
daa
sub
add
dec
xchg
mov
xchg
inc
repz
add
sbb
test
inc
test
pop
out
add
incl
clc
lds
push
xor
and
xchg
addr16
jp
xchg
add
shrb
dec
out
mov
or
sub
xor
sub
stos
inc
or
ret
dec
mov
jl
push
xchg
mov
xchg
into
es
mov
mov
out
lea
out
mov
cmpsl
rcrb
mov
out
das
push
mov
mov
scas
mov
jmp
sahf
fsubp
cs
ja
out
shl
pop
daa
dec
xchg
mov
data16
je
inc
mov
lret
cmp
cmpsb
out
xor
std
out
int3
add
add
mov
insb
xchg
stos
scas
test
push
jne
leave
jmp
lds
sub
mov
add
sahf
test
pop
cmpsb
out
dec
add
mov
sarl
dec
sbb
jp
outsb
mov
orl
xchg
xor
mov
popf
mov
sbb
mov
aaa
mov
jns
add
popf
jnp
cld
insl
hlt
inc
jmp
mov
fdivr
add
aas
ds
pop
sbb
fistpll
addl
sbb
scas
mov
push
lods
xor
aad
inc
push
xchg
sbb
out
addr16
hlt
addr16
push
mov
or
stos
jmp
lahf
push
inc
out
test
jecxz
out
jae
and
inc
mov
jne
ljmp
data16
mov
out
mov
outsb
out
push
out
jp
stc
dec
jbe
lahf
mov
bound
cltd
out
xchg
mov
out
xchg
imul
pusha
lea
pop
dec
push
icebp
out
subb
out
sub
test
mov
out
push
mov
sbb
movsb
mov
mov
and
jecxz
dec
notl
push
out
loope
xor
ds
out
mov
sub
stos
mov
sbb
adc
fildl
mov
loopne
add
movsl
enter
mov
push
fdivs
out
sbb
adc
ljmp
dec
add
ret
xchg
jns
cmp
cmp
out
cmpsb
fs
inc
mov
mov
popl
add
push
notl
movsb
push
sub
mov
inc
inc
shlb
cltd
js
pop
jae
lods
out
das
dec
ss
popf
or
data16
mov
fisttpll
inc
out
inc
dec
mov
dec
cltd
push
or
jnp
jns
sub
mov
test
out
xor
sti
xor
movsl
fcoms
inc
and
mov
ss
mov
out
mov
ret
pop
out
mov
sbb
or
jp
fwait
ds
stos
adc
out
xchg
inc
push
clc
xorb
fcomps
into
in
add
lahf
jecxz
push
mov
cmp
xchg
gs
movsb
sbb
sub
mov
jae
std
mov
xchg
jmp
loopne
cltd
mov
es
mov
xor
ss
clc
int3
into
jb
mov
lods
lret
push
incl
inc
fldt
fwait
je
call
out
enter
add
mov
pcmpgtb
and
out
adc
dec
int
lock
and
lret
xor
jno
add
aaa
imul
add
xor
push
push
cmp
xchg
pop
mov
sub
xchg
addb
xchg
out
dec
int3
stc
mov
dec
or
fistpll
mov
insl
out
popf
sbb
push
jle
out
out
mov
pmaxsw
lret
jne
mov
enter
icebp
mov
adcw
mov
mov
push
inc
sbb
sub
cmpsl
adcb
shrl
clc
imul
out
mov
and
out
dec
notl
movsb
mov
lret
mov
sahf
or
pop
push
dec
repz
xor
xchg
add
out
shrb
ja
pop
daa
jae
out
stc
cmp
sub
scas
rcr
sub
dec
xchg
add
scas
stos
out
clc
insl
or
movsb
push
mov
lret
mov
sub
ret
test
out
sbbl
out
ret
int3
and
pop
out
out
or
out
add
xchg
fwait
out
mov
mov
out
cmp
cld
out
push
addb
pop
js
mov
jo
pop
fwait
lcall
xlat
inc
lods
outsb
add
aas
xor
imul
ret
out
mov
or
mov
int
xchg
jle
into
push
push
rorl
shl
fistpl
cli
arpl
out
or
jne
cld
add
jle
jg
inc
xchg
sbb
outsb
lods
xor
in
pop
inc
lods
cmpsb
pop
cli
out
shlb
frstor
in
bound
or
scas
mov
inc
mov
fsubrl
jo
mov
pop
cs
hlt
pop
stos
mov
mov
std
and
pusha
daa
lret
sbb
out
mov
bound
out
or
add
cmpsb
arpl
add
faddl
subl
dec
ljmp
jg
pop
inc
push
out
xor
mov
lods
out
cmpsl
jmp
daa
out
call
jae
jnp
out
jecxz
xchg
lcall
cmp
push
repnz
jmp
repz
mov
push
pusha
inc
xchg
pushf
add
imul
out
cmc
mov
xor
js
pushw
jnp
out
in
das
and
pushf
jb
icebp
inc
xchg
rcl
or
jecxz
jle
add
cmp
and
mov
add
jns
jmp
lods
push
aaa
jmp
sub
xchg
add
or
stos
jl
jne
mov
aam
mov
push
adc
fwait
jne
je
cld
push
loope
push
sbbl
xchg
and
cli
add
cmpsb
mov
jg
out
pop
cs
out
push
push
es
or
jo
nop
push
daa
je
lods
popa
pusha
out
cld
jle
or
outsb
mov
mov
mov
cmp
push
or
lret
out
movsb
sbb
bound
test
or
out
lea
imul
inc
dec
jg
inc
ja
mov
test
std
mov
js
andl
jb
adc
jle
mov
lret
insl
and
sub
adc
adc
test
test
orb
test
in
sti
gs
and
out
adc
jecxz
insl
inc
jle
imul
bound
nop
inc
inc
scas
xor
stos
or
je
fs
and
cld
in
sti
add
pop
push
dec
loope
ds
fs
jle
xlat
add
push
push
loopne
xor
movsl
leave
inc
xchg
in
mov
roll
orb
dec
fisttpll
loop
mov
int3
imul
inc
inc
or
pop
push
inc
dec
dec
mov
out
add
jbe
bound
test
sub
pop
sub
lds
jp
or
jnp
mov
rol
outsl
xchg
addr16
cmc
loope
xchg
xor
jle
inc
cmpb
push
mov
ret
sbb
lods
inc
sbb
stc
cld
pushf
jmp
jmp
cmc
dec
stos
cmp
popf
jp
or
lock
pop
dec
lret
fwait
fs
jg
out
sbb
lret
aas
sub
test
dec
pop
test
cmp
cmp
jmp
mov
sahf
sub
aad
mov
loop
jecxz
push
dec
in
in
jne
mov
add
xor
lcall
je
ss
mov
cmp
push
sub
xchg
js
and
in
outsb
incl
or
out
adc
in
and
jecxz
jne
jge
out
outsl
movsb
mov
xlat
pop
xchg
adc
mov
out
add
aaa
popa
inc
clc
test
push
ret
lock
jecxz
add
clc
sahf
dec
stc
out
or
jmp
lcall
cmpsb
loop
or
lret
pop
mov
push
jne
lea
push
fsubl
out
popa
js
pop
pop
cs
dec
das
push
jne
fxch
out
shr
std
out
outsb
jno
fildl
lret
loope
mov
jg
mov
imul
inc
flds
aas
insl
xchg
adc
test
daa
mov
clc
loope
cmp
cli
fsubrl
or
pushf
ljmpw
aaa
cld
test
dec
xlat
test
push
jne
xchg
inc
fwait
repnz
int3
in
mov
aas
mov
add
push
out
dec
stos
mov
imul
sarw
cmpsb
jns
out
std
jno
mov
inc
mov
jns
push
cli
inc
shl
test
xor
mov
fisttps
pushf
ja
ljmp
out
inc
adc
xchg
icebp
ljmp
xchg
mov
jge
out
mov
xor
out
scas
pop
dec
and
into
out
shrb
and
mov
test
push
pop
push
mov
out
adc
jnp
ret
clc
adc
mov
add
stos
insl
or
cmp
sahf
inc
mov
mov
and
dec
orl
lds
pop
jmp
addr16
stos
popa
pop
dec
jne
push
stos
cli
mov
testl
jb
lahf
out
or
jmp
or
sub
out
and
popa
imul
and
pusha
shlb
pop
dec
data16
jns
xchg
clc
sub
repz
call
xor
ret
addl
imul
inc
xor
pop
push
fldcw
adc
cmpsl
data16
out
cmpsb
loop
hlt
loopne
xor
fisubrs
add
cmc
fwait
lahf
cmpsb
fsubr
mov
xchg
jp
iret
ret
sub
inc
out
loopne
loop
jo
pushf
pop
fnsave
rcl
out
cmp
or
lds
and
mov
mov
adc
push
jle
test
add
sub
aad
out
cmc
lret
in
pop
adc
sarl
add
add
out
adc
push
mov
cld
test
cwtl
popf
out
lods
and
ret
outsb
outsb
out
rorl
jo
sahf
cli
out
xchg
lcall
arpl
or
fistpl
cwtl
out
repnz
outsb
movsb
sarl
or
or
xchg
out
aas
dec
xchg
mov
xor
push
mov
ret
outsb
inc
daa
jecxz
aam
mov
mov
xchg
stos
add
add
cli
sbb
mov
add
call
xor
add
out
les
lods
fisubl
lahf
sub
popf
out
inc
pusha
mov
push
pop
fdivr
inc
jp
loop
pop
jns
xchg
cmp
mov
out
cmp
sbb
repnz
out
xor
popw
stos
lds
push
sub
dec
pop
and
orl
push
cmpsb
outsb
jmp
jnp
repz
out
ss
push
leave
jne
popf
mov
push
out
daa
lea
dec
out
inc
aaa
mov
dec
pop
in
out
add
cmp
cld
sub
xchg
fdiv
mov
sbbb
jmp
jecxz
jle
adc
out
mov
inc
lret
aad
int3
test
cli
pop
xor
leave
lret
sbb
out
xlat
cs
out
imul
jp
mov
not
out
movsb
sub
push
push
dec
sbb
ljmp
aam
or
out
xchg
adc
xcrypt-ecb
cmpsl
dec
cltd
enter
inc
fisttpl
inc
xchg
shlb
outsl
jmp
int3
push
or
sub
cmp
out
sub
cmc
in
popf
movsl
out
test
push
add
leave
out
daa
jb
inc
loopne
push
push
inc
roll
out
frstor
fsubl
out
js
sbb
push
sti
jge
fwait
push
imul
out
out
jp
lock
pop
push
push
fwait
mov
in
out
nop
xchg
or
clc
cmp
xchg
aaa
fdivrl
mov
lcall
add
sub
jg
sar
lret
ss
mov
pop
scas
xchg
leave
mul
jge
les
xor
int
lret
pop
in
jnp
xchg
out
push
lahf
ja
cbtw
fcoml
sahf
out
icebp
cmpsb
xchg
out
dec
aaa
mov
push
jae
out
mov
mov
cld
jbe
dec
test
out
dec
push
dec
mov
push
cs
scas
mov
sahf
addr16
and
adc
xchg
adc
jne
add
dec
jnp
js
push
pop
in
jns
frstor
fistpll
cli
outsl
mov
fidivrl
stos
cmp
jmp
jg
divb
sub
in
or
pusha
dec
adc
add
add
sbb
add
sub
sub
in
repz
out
sti
mov
dec
mov
sub
sahf
ss
cld
in
inc
loopne
sbb
bound
xlat
pop
lea
das
sbb
push
lcallw
lret
cmpsl
jne
scas
dec
addr16
sarb
xlat
xchg
test
movsl
rcl
pop
fwait
rcrl
adc
sbb
and
or
jno
mov
pop
or
cli
add
push
scas
fisttpll
mov
cmovb
mov
pushf
pop
into
gs
test
out
pop
test
fsubl
fldcw
imul
sub
sbb
pop
sbb
ja
pop
fimull
cmpsl
pop
mov
leave
cltd
mov
fwait
cmpsl
out
cmp
dec
pop
sbb
fcmovbe
or
push
inc
aas
loopne
jnp
push
xor
push
xchg
mov
adc
fists
add
pop
ja
aad
xchg
and
outsb
rcll
sbb
add
ret
gs
daa
icebp
jecxz
jecxz
out
fcom
mov
and
in
mov
mov
scas
xor
jecxz
andl
test
push
jp
outsl
and
push
inc
cmp
inc
jle
adc
push
mov
call
mov
xor
test
div
jmp
mov
xchg
out
cltd
cmp
mov
mov
and
lock
shll
incl
mov
xlat
jle
aad
xor
xchg
sbb
popf
mov
cli
mull
xchg
popf
in
mov
dec
fs
arpl
jmp
dec
push
cwtl
mov
mov
dec
dec
mov
pop
xor
adc
xlat
ficoms
in
rolb
jne
test
pop
out
arpl
pop
icebp
lea
out
in
jecxz
pop
fsubl
out
les
mov
mov
mov
pop
push
inc
in
xchg
or
stos
push
cmp
jnp
sub
push
mov
add
push
out
dec
or
sbb
cmp
cmc
xor
xchg
pop
jo
inc
inc
lock
ds
lds
ret
cmpsl
push
xchg
jge
or
popf
leave
pop
movsl
sub
out
hlt
cmp
sar
mov
out
sbb
clc
push
pop
inc
enter
out
lahf
and
adc
out
data16
popa
mov
lods
test
and
jnp
sarl
popa
outsb
cmp
sbb
fcompl
sub
fs
jnp
popl
inc
movaps
mov
push
mov
jno
push
cmp
rorb
rorl
aam
or
scas
inc
cmp
cmc
test
rolb
ja
jge
lea
ds
cmpsl
xor
outsl
fnsave
mov
movsl
ljmp
inc
and
call
mov
cwtl
dec
popf
mov
cld
dec
jecxz
pop
add
pop
ret
dec
stos
push
in
or
rcrb
out
pop
pusha
sub
mov
stos
inc
jno
inc
inc
out
lods
mov
sub
out
or
jmp
sbb
icebp
jge
xor
movsl
aam
dec
cmp
and
popf
inc
push
or
out
cmpsb
sub
jnp
xchg
sbb
repnz
inc
add
push
push
jno
roll
clc
test
mov
pop
jecxz
std
mov
aad
dec
mov
gs
inc
imull
sbb
aad
in
fistpll
movsl
cmpsl
cmp
into
xchg
adc
dec
jne
cmp
add
xor
dec
call
js
jmp
cmp
dec
andb
std
cmp
add
jmp
frstor
sub
inc
jae
push
mov
lret
cld
pop
cli
mov
and
pop
sahf
mov
imul
lds
mov
adc
adc
mov
jmp
pop
mov
ret
push
cmc
push
js
pop
cli
ljmp
push
sub
add
sbb
dec
mov
jno
fcoms
mov
into
adc
in
xchg
jo
dec
cli
add
scas
mov
or
out
push
pop
das
mov
gs
sub
and
mov
dec
out
add
orl
xchg
mov
out
rolb
sub
xor
ret
jo
jg
clc
ja
mov
sub
cwtl
das
mov
mov
scas
mov
cmpsl
add
addr16
out
clc
inc
cmpsb
xor
adc
cmc
cmp
mov
loop
inc
push
adc
pop
hlt
sub
out
lret
fisubl
out
inc
movsb
push
loopne
std
frstor
pop
out
mov
mov
shl
outsb
cmc
fldenv
sahf
outsl
lock
pop
jne
sbb
push
cmp
push
fldcw
pushf
mov
imul
mov
out
push
mov
add
mov
jge
cmpsl
out
lret
cwtl
fldt
mov
inc
xorl
mov
rcll
add
lock
lahf
test
out
dec
pop
xor
pop
pop
xor
mov
jmp
pusha
mov
mov
cmpsb
jno
jmp
jl
jbe
or
out
xor
stc
sub
dec
xor
inc
call
ret
adc
ljmp
out
mov
in
mov
mov
adc
outsb
out
and
or
xchg
fwait
sbb
push
mov
movsb
jo
mov
xor
out
adc
test
enter
jnp
jl
cltd
clc
out
pop
data16
lock
jle
dec
repz
daa
xor
lock
add
dec
jne
stos
pop
out
xor
dec
inc
mov
out
lret
lods
or
shl
pop
inc
adc
sbb
inc
and
std
ljmp
loopne
pop
jle
add
outsl
movsl
adc
cli
leave
sbb
stos
neg
in
mov
dec
mov
sub
dec
mov
adc
inc
push
aad
enter
inc
mov
mov
insl
add
loop
adc
jl
dec
dec
aas
lret
jp
sbb
cmpsb
ljmp
xchg
push
sbb
outsl
outsb
cmp
daa
push
cmp
movsl
mov
jno
sbb
xor
adc
push
dec
mov
sbb
movsl
subl
in
fsubs
aas
push
and
sub
in
cs
add
xchg
call
jmp
push
jbe
adc
or
lods
xlat
call
and
pop
idivl
adc
fadd
mov
sbb
pop
and
dec
jbe
testb
adc
movsl
adc
sbb
je
pop
adc
aad
out
mov
cld
pop
test
mov
inc
adc
iret
xchg
dec
push
notl
enter
loope
dec
movsl
mov
lods
or
in
push
push
fmul
scas
dec
dec
idivl
stos
ljmp
inc
xor
and
xlat
ret
xchg
push
xchg
mov
xor
mov
mov
loopne
nop
ljmp
decl
adc
or
mov
dec
les
jbe
inc
mov
dec
and
repnz
sbb
or
mov
fsubs
in
xor
and
jns
mov
or
in
push
inc
sarb
shlb
pop
mov
push
sahf
cmp
jge
shlb
adc
pop
sbb
enter
popa
sbb
jmp
daa
negl
cmp
icebp
jmp
mov
pushl
jg
pop
xchg
inc
pushf
xor
mov
ret
aad
jp
sbb
rep
add
jo
inc
mov
icebp
pop
mov
jbe
aaa
in
jmp
dec
test
push
mov
popa
push
add
adc
insb
fistps
cli
imul
ja
xor
test
fildll
incl
data16
push
pop
mov
lods
fmul
std
inc
cmp
arpl
pop
das
mov
pushf
sub
pop
xchg
mov
es
xchg
cmp
and
lock
jmp
cmp
daa
sub
pop
cmc
jno
pop
xchg
push
lret
gs
fdivl
mov
popa
add
shlb
fdivs
dec
es
jbe
mov
push
cmp
fdivs
pop
outsl
std
inc
cmp
stos
push
xor
xchg
xchg
decl
sar
cmp
sahf
inc
and
xchg
mov
pop
stc
test
inc
jecxz
stos
stos
fsubrl
test
pop
xchg
mov
cmc
push
mov
jp
mov
pop
daa
loopne
pop
add
movb
mov
inc
or
jne
mov
mov
cmp
outsl
and
and
mov
subl
adc
notl
pushf
nop
sbb
and
mov
or
cwtl
in
add
push
adc
test
pop
jmp
enter
loop
stos
or
sbb
inc
lds
hlt
push
dec
in
cmp
inc
add
cwtl
ret
pusha
fwait
ret
into
out
fs
xor
fldenv
leave
xchg
cmp
xor
sti
icebp
adc
pop
in
imul
imul
push
and
and
sbb
rcr
jnp
sub
pop
int
lea
or
aas
addr16
std
out
sbb
fwait
gs
cmpsl
dec
inc
pop
ja
push
mov
and
test
dec
pop
dec
jp
mov
icebp
and
stos
cmp
jo
xchg
in
fcmovnu
faddl
sti
or
fcmovb
fsubr
mov
mov
xchg
pop
jns
push
movsl
test
xchg
pop
jmp
push
mov
jmp
push
sbb
dec
in
popl
loop
gs
jmp
insb
and
adc
loop
inc
inc
das
inc
js
mov
xchg
gs
xor
vunpckhps
loopne
cli
pop
fucomi
mov
mov
in
mov
mov
ljmp
pop
mov
push
outsb
movsl
pop
fs
lret
push
xchg
mov
fucom
lock
andl
pop
frstor
push
out
cwtl
pop
xchg
movsl
aas
outsb
movsl
aaa
pop
push
not
add
lock
mov
test
jo
cmc
push
push
enter
add
fwait
xor
mov
stos
mov
jp
cwtl
jmp
scas
pop
popf
cli
shl
mov
push
in
adc
bound
cmc
loop
push
cmp
sbb
xlat
fisttps
pop
push
in
dec
cmc
repnz
xchg
cmpsb
xor
add
dec
pop
jne
ret
imul
dec
sti
cmp
bndldx
sbb
or
or
sbb
push
pop
std
push
inc
ss
std
rclb
and
in
sub
push
xor
aaa
fstl
inc
inc
pop
loope
adc
cwtl
addr16
push
sub
sbb
sub
pop
inc
push
ja
mov
gs
xchg
in
pop
inc
lds
jle
push
dec
and
and
js
in
imul
mov
loop
sub
xchg
jbe
addr16
jo
xchg
sub
pusha
fsubs
xchg
cmp
fsubs
push
and
push
jg
dec
out
or
imul
roll
inc
cli
push
pop
mov
adcl
adc
insb
sqrtps
or
and
aaa
inc
popa
sub
lods
sbb
push
imul
int
out
mov
dec
call
xchg
out
popf
cli
loop
mov
jbe
mov
xor
leave
push
aaa
sub
in
test
mov
aaa
pop
jbe
sbbl
dec
dec
leave
jns
insb
add
sbb
jle
and
data16
out
or
dec
xor
sbb
cmc
cmp
cmp
fistl
adc
loopne
leave
repz
xor
decl
and
cltd
mov
add
popa
lcall
in
jns
add
xchg
pop
leave
mov
bound
leave
gs
jae
leave
lret
test
inc
stos
push
xchg
shrb
lret
into
pop
adc
or
insb
jl
in
inc
push
sbb
xchg
jle
in
rcl
rclb
shlb
and
sub
inc
pop
out
fildll
imul
mov
pushf
or
pop
sub
out
shlb
pop
out
sbb
mov
adc
imul
popa
pop
adc
mov
ljmp
cltd
or
mov
adc
push
gs
dec
sub
lret
sbb
dec
pop
test
test
lock
jne
mulb
or
loopne
scas
cmpsb
dec
pop
daa
mov
or
adc
adc
subb
xchg
ficoml
and
call
adc
jne
add
cvtps2pd
nop
dec
dec
sbb
movsb
mov
mov
mov
dec
and
icebp
in
mov
cmpsl
pop
push
gs
fildl
or
cmpsl
add
and
and
pop
enter
sub
push
sub
sti
movsl
inc
insl
cmc
and
hlt
jecxz
ds
insb
hlt
or
dec
jo
dec
std
xchg
pusha
sbb
movsl
lret
arpl
push
dec
std
inc
fistpll
fisubl
and
mov
idivb
cmp
sbb
lcall
stos
sub
and
ss
lods
add
mov
inc
cmpsl
testl
test
push
add
in
in
dec
aad
xchg
insl
add
cmp
pop
jno
punpckldq
in
mov
aam
fs
scas
pop
sahf
pop
jl
push
add
stos
aad
test
cs
outsl
sbb
push
daa
pop
and
lock
outsl
movsl
dec
or
bound
stc
jmp
push
cltd
adcb
call
jg
sub
fsubrl
adc
call
mov
loop
imul
faddl
gs
cli
rcl
sub
fildl
icebp
ja
sbb
repz
push
fnsave
add
mov
scas
mov
ja
fs
rcr
gs
adc
push
jbe
xorl
lock
fstpl
and
mov
scas
or
sbb
frstor
js
int3
clc
push
ficoms
push
lds
pop
cmpsl
out
in
and
scas
fucompp
fildll
adc
mov
sub
enter
sbb
adc
enter
dec
adc
enter
push
mov
into
fs
sub
adc
lea
lret
and
xor
aad
dec
aad
cmp
divl
dec
xchg
rcll
call
xlat
insl
int
sub
inc
shlb
pop
into
je
add
push
dec
add
lea
and
lea
orb
stos
and
gs
add
pop
iret
stos
jge
jge
daa
push
mov
sbbb
xchg
stos
sub
pop
in
mov
mov
stos
mov
std
xchg
jmp
push
push
jle
popf
idivl
mov
dec
mov
loopne
xor
sub
ror
push
aaa
in
mov
in
js
xchg
cmp
fcompl
mov
ljmp
jne
dec
pop
ljmp
cwtl
std
repnz
sbb
and
loopne
dec
mov
js
in
cmc
pop
sub
pop
sbbb
adc
push
out
in
jno
shll
test
adc
les
push
xchg
and
cmp
repnz
push
inc
xor
pop
insb
je
add
in
cmpsl
ret
jne
movsl
jl
cmc
add
dec
int3
or
add
sbb
cmp
add
sahf
mov
fisttps
sti
cltd
mov
out
jne
push
xchg
sub
pop
mov
movsl
or
lcall
inc
or
aad
in
jl
mov
cmp
stc
sahf
sub
or
jp
repnz
inc
push
mov
in
pop
mov
rol
int
incb
lahf
mov
neg
mov
mov
mov
inc
incb
xor
sbb
fiadds
ret
sbb
popa
jecxz
fisubrs
test
sub
jp
aaa
xchg
jmp
cwtl
jp
repz
sub
shll
jne
push
in
loope
mov
xchg
rclb
loope
movsl
icebp
lcall
out
gs
aad
pusha
push
rcrl
iret
inc
sti
out
dec
cmc
fsubrl
dec
in
pop
aaa
jl
jl
push
jecxz
data16
dec
cli
das
decl
sbb
xchg
rcrb
add
std
sbb
dec
mov
stos
jne
nop
add
fidivrl
xchg
aad
test
decb
mov
dec
pop
cmp
mov
push
dec
fs
or
dec
ljmp
inc
hlt
mov
mov
in
xchg
add
stos
fistl
xor
adc
outsb
mov
adc
xor
bound
dec
popa
insl
xchg
fld
mov
sbb
leave
push
adc
aad
lea
ds
mov
pop
mov
inc
lods
insl
mov
pop
xchg
ja
mov
mov
pop
add
lods
aaa
push
ljmp
mov
mov
addb
repnz
cmc
adcb
xor
cwtl
shll
jne
rorl
lods
repnz
xchg
mov
inc
add
repz
inc
cli
jg
cwtl
inc
pop
pop
inc
test
pop
in
lds
and
aaa
test
test
lea
arpl
jno
lods
lock
scas
push
jns
mov
pop
xor
xor
iret
cmp
ja
clc
ret
sub
insl
adc
cmpsb
scas
sub
xor
ja
aaa
or
shll
xor
adc
gs
les
aad
inc
and
fcom
and
and
shll
insl
jne
jne
ja
mov
clc
push
movsl
lcall
add
xchg
orl
out
in
jmp
loopne
test
sub
aad
cwtl
popa
cs
sub
mov
jle
add
push
dec
adc
jne
jnp
jne
jo
mov
mov
xchg
loop
xor
daa
push
push
inc
mov
jmp
cmp
mov
sub
sti
dec
popa
dec
mov
pop
cmpsl
sub
inc
testl
insl
fdivrs
add
mov
sbb
leave
sub
adc
cld
xlat
ja
mov
fucomp
dec
leave
daa
ljmp
je
addr16
jg
lods
lods
xor
rorl
dec
addr16
push
sbb
ficompl
sti
gs
shll
jecxz
rorl
jl
mov
xor
mov
in
repnz
insb
andb
and
or
sbb
call
ret
ss
dec
pop
sub
stc
outsb
cs
ljmp
xchg
fadds
aad
dec
pop
loop
out
fisubrl
jmp
shll
loopne
and
psubusw
lret
lds
mov
fnstcw
lea
ret
lcall
test
sub
iret
js
in
ds
inc
shr
ffree
jp
inc
and
add
cmpsl
jbe
popf
cli
loop
and
pop
notl
jp
xchg
lods
mov
lods
cltd
mov
mov
inc
test
aaa
frstor
das
mov
mov
xchg
stc
jmp
mov
enter
sbb
add
out
xchg
fcoms
sti
fsubs
dec
fisubs
add
jmp
cmpsl
jae
xor
ja
sbb
cmpsb
pop
sbb
dec
out
and
add
fucomp
jp
mov
insl
movsl
mov
dec
in
shlb
sti
pop
xor
daa
push
dec
fdivs
cmc
je
stos
and
xchg
adcb
sbb
inc
gs
adc
inc
xor
fdivrs
insl
inc
aaa
adc
addr16
popf
cli
inc
shr
imulb
xchg
andb
xchg
jns
mov
cmp
dec
out
mov
in
push
sbb
sahf
movntq
movsb
and
test
mov
jp
cmp
push
or
outsw
fiaddl
gs
adc
bound
out
push
sbb
in
movsl
out
jge
fs
push
test
xor
in
xor
pop
ficompl
imul
das
sti
push
sub
lods
xor
es
stc
xor
ret
pop
pop
pop
imul
popf
cli
mov
dec
insl
lahf
roll
xor
xchg
adcb
in
inc
jbe
push
add
cmp
lods
jo
popf
cli
xor
mov
xlat
andl
fistps
imul
shr
sbb
add
sub
mov
jg
cmpsb
mov
inc
and
sub
and
xor
inc
adc
cmpsl
inc
testl
adc
mov
shll
lcall
jno
push
jecxz
sbb
fadds
fchs
pop
adc
sub
aaa
add
ret
xchg
cmc
cmp
fidivrl
mov
push
inc
iret
push
push
in
mov
xchg
add
fs
js
inc
push
add
or
sbb
mov
imul
add
test
mov
or
imulb
shll
mov
cld
fdivl
out
aad
roll
adcl
jo
fdivl
mov
inc
loop
xorb
insl
pop
and
add
imul
xchg
push
xchg
mov
pop
add
jmp
xchg
in
fdiv
dec
aaa
xlat
jecxz
lret
dec
xlat
pop
pop
pushf
out
xchg
mov
jecxz
daa
pop
gs
arpl
roll
in
xchg
jg
and
push
mov
fldcw
cmp
test
add
dec
das
imul
imul
add
jbe
cmp
call
jl
push
aaa
adc
popa
jno
and
push
mov
sbb
mov
ss
call
pop
mov
in
mov
push
imul
and
xchg
xor
adc
cmp
and
das
popa
jecxz
mov
pop
aam
les
push
scas
pushf
adc
xor
aaa
mov
jmp
mov
aad
dec
sub
imul
cmp
mov
fimuls
inc
add
jne
insb
sub
adc
nop
psraw
lds
xchg
xchg
push
bound
imul
js
es
xchg
std
bnd
scas
xchg
mov
stos
pop
cmc
push
mov
mov
aad
inc
imul
enter
mov
sub
add
xor
inc
lds
sub
inc
push
sub
fcoms
adcb
sbb
andl
xchg
sub
fsubrs
jno
xor
lods
adc
xor
adcb
jp
or
in
outsl
out
movsl
sti
in
and
out
popl
dec
mov
add
aaa
cmp
jmp
test
js
pushf
add
in
fdivs
andl
push
push
dec
jne
xchg
jno
add
sbb
and
add
or
cmp
sub
lea
pop
and
mov
jmp
xchg
out
pop
add
popa
add
gs
mov
push
cmc
and
sti
jmp
mov
mov
gs
ja
fdivs
movl
sti
mov
jb
in
xchg
pushw
cmpsb
movsb
sub
icebp
xor
in
dec
xor
xor
cs
repz
fdiv
xor
add
mov
mov
test
push
or
sub
push
cwtl
sbb
and
pop
and
xor
out
and
sub
push
test
divl
loope
xor
imul
in
xchg
imul
xlat
in
in
imull
in
shrb
dec
pop
push
xchg
test
cmpsb
cmp
push
add
lret
in
cmp
cmp
xor
jge
mov
lds
push
mov
and
daa
bound
inc
mov
mov
shll
jl
dec
mull
pusha
jg
dec
push
aad
ja
fcompp
xchg
or
pop
mov
insl
shll
fsubl
sbb
dec
push
imul
imul
dec
sub
es
sub
mov
movsb
dec
inc
fisttps
in
loopne
jne
jmp
out
inc
fbld
add
daa
insl
fists
mov
and
mov
ljmp
loopne
adc
mov
gs
and
pop
mov
and
aaa
or
inc
lret
dec
lret
dec
xor
pop
jo
xor
mov
mov
lds
inc
add
movl
mov
xchg
es
mov
rol
lods
popf
or
xor
cwtl
jecxz
sub
sub
push
push
adc
addr16
out
jne
pusha
xor
enter
outsb
dec
shll
repz
push
cmc
pop
pop
sti
jmp
subb
ss
nop
cmp
xor
fld
ljmp
sti
sahf
pusha
jo
adc
and
ja
push
inc
xor
aam
mov
pop
adc
aam
pop
push
jle
rclb
jmp
xor
xor
rclb
pop
sub
mov
int
mov
sub
inc
pop
test
das
pop
aas
addr16
pop
cld
gs
xchg
and
fsubrs
aad
sbb
sub
inc
pop
and
lock
pop
loopne
push
adc
movb
adc
lock
addl
or
jno
pop
bound
fcompl
jno
sub
push
test
idivl
aaa
popa
ljmp
stos
add
inc
inc
xchg
lods
lock
pop
jp
mov
insl
push
mov
lods
notl
mov
push
dec
sbb
bound
jmp
std
popf
scas
aaa
and
sbb
mov
mov
pop
dec
inc
add
pop
xchg
or
icebp
clc
call
sbb
dec
jmp
cli
xchg
adc
dec
xchg
fucom
push
dec
xchg
cwtl
in
inc
test
lds
in
xor
rcl
repnz
sbbb
push
neg
loopne
mov
dec
dec
xchg
imul
ss
jmp
fsubrl
lcall
out
and
dec
movsb
std
leave
jno
popf
cli
rclb
inc
dec
jecxz
sub
aam
in
sub
gs
xor
add
out
and
aaa
sub
jmp
cmp
shr
inc
icebp
in
add
dec
lds
icebp
sub
loopw
gs
xor
pop
push
imulb
xchg
jne
push
jp
pop
xor
mov
pop
pusha
imulb
xor
stos
and
gs
ljmp
and
cmc
fisubrs
test
inc
jne
ret
mov
fldenv
ficomps
stos
xchg
popa
adc
sub
fcomps
jb
popf
call
sbb
cmp
pushf
mov
push
test
push
cmpsl
sbb
cmp
sub
or
inc
pop
pop
arpl
in
stc
in
push
cmp
sbb
in
stos
sub
cli
pop
jb
test
dec
adc
mov
call
enter
inc
adc
aaa
mov
movsb
sub
dec
test
in
shll
dec
mov
pop
mov
es
xchg
sub
xor
cld
fsub
loope
test
adc
rcrl
pop
fnstcw
lds
mov
and
push
out
sti
push
sbb
shll
in
sahf
sub
or
mov
mov
pop
or
cs
in
push
cmp
xchg
mov
mov
fwait
pop
bound
mov
inc
rcrl
insl
clc
mov
movsb
ret
test
shr
fucomip
fstl
in
dec
fwait
sbb
movsb
das
adc
data16
pop
cmp
stos
lret
xchg
and
ja
addr16
adc
lock
je
push
imul
fdiv
imul
push
dec
xor
sbb
mov
or
mov
fdivl
mov
and
gs
das
aas
push
mov
dec
and
and
shlb
inc
hlt
shll
jae
test
sub
xchg
mov
adc
lea
adc
cmc
mov
jne
push
xchg
dec
pop
mov
cmc
scas
sbb
repz
mov
bound
mov
mov
push
popf
dec
movsl
inc
push
fdivrp
pop
mov
adc
or
add
ds
push
out
dec
cmp
inc
iret
jecxz
out
cmc
insb
push
jg
cli
push
and
inc
js
mov
cmp
mov
jl
insl
mov
dec
mov
push
and
push
lcall
mov
add
push
in
in
cmpsb
add
aaa
or
sub
xor
cli
mov
jp
sub
inc
push
mov
in
int3
idivl
sbb
bound
inc
lfs
in
and
cmp
js
ljmp
or
ljmp
leave
aad
or
mov
xor
cmp
call
scas
mov
aad
jp
jno
adc
pop
cmpsb
imul
push
adc
pop
into
ds
fstl
lret
aaa
call
inc
mov
jbe
je
sub
popa
lcall
inc
outsb
mov
rorl
fnstenv
in
dec
cmpsl
cmc
inc
ja
roll
sahf
repz
popa
push
mov
xchg
loop
dec
inc
sub
xchg
push
mov
push
cmp
scas
or
sub
pop
inc
xchg
gs
jp
gs
popf
cli
loop
cmc
nop
jg
jbe
dec
and
inc
or
movsb
lcall
jmp
add
xor
outsb
inc
pop
cmp
dec
je
xchg
push
repnz
inc
es
add
xchg
out
gs
or
daa
cld
lock
fdivrs
adc
jns
pop
pop
cmc
or
dec
jle
adc
jnp
aaa
in
jmp
in
adc
mov
cmc
mov
push
or
int3
ret
popf
dec
mov
push
aaa
aaa
mov
arpl
subl
ret
movsl
mov
pop
pop
add
ds
jmp
addr16
gs
mov
or
in
xor
imul
adc
push
lds
jp
loop
xor
jle
mov
test
push
shrl
repnz
jmp
fimull
sub
ljmp
outsl
jns
xor
data16
cmp
jmp
push
aaa
pop
sbb
sti
inc
dec
mov
jns
push
daa
loope
out
lds
arpl
pop
add
cmp
test
loopne
jo
leave
mov
into
lods
push
xor
lea
push
arpl
jno
lea
or
cli
fisttpll
mov
sbb
jecxz
adc
cmpsl
pop
push
xchg
mov
cmpsw
pop
in
test
and
in
testb
cmp
or
xchg
ret
xor
cli
nop
shlb
in
xchg
pop
and
inc
xchg
inc
ss
out
push
and
mov
int3
cltd
adc
jne
imul
and
push
add
jne
imul
dec
dec
sub
add
cld
aam
fisttpll
out
inc
mulb
gs
cli
and
dec
mov
ds
pop
out
add
fmulp
imul
inc
out
sub
movsl
jg
cli
loop
mov
sarl
and
jmp
inc
test
out
test
sub
adc
arpl
in
jne
gs
xor
fs
insl
push
fistpl
fcmovbe
or
cli
cmp
mul
fdiv
lea
pop
push
inc
mov
mov
dec
push
je
out
lret
js
mov
fdivl
jne
inc
int3
inc
jb
mov
out
iret
das
fbld
cltd
scas
out
dec
hlt
add
ret
lcall
test
int
mov
cld
popa
out
filds
ret
or
fisubl
outsl
adc
mov
sbb
out
add
fwait
or
adc
jnp
xchg
jecxz
lcall
xchg
shr
xlat
int3
jns
cmpsl
lea
out
jmp
pop
mov
scas
sbb
push
out
insl
adc
dec
fneni(8087
out
or
pop
in
dec
movsl
int3
push
nop
sbb
daa
inc
add
sbb
jge
stos
push
add
or
call
sbb
push
call
push
out
inc
incb
push
and
in
cmp
aam
xor
xorb
arpl
into
out
jmp
test
xchg
push
xor
int
in
inc
jle
push
int3
aad
andl
pop
mov
adc
imul
scas
jecxz
push
out
dec
enter
or
out
or
arpl
nop
xorl
int3
in
inc
fisttpl
jp
mov
xor
pop
shll
out
mov
push
mov
xor
add
push
sub
sbb
push
cmp
and
jp
push
lock
and
jne
nop
std
mov
adc
imul
mov
add
in
add
lcall
dec
xchg
popa
jb
fwait
xchg
out
jg
dec
dec
xlat
ret
push
fnsave
js
sub
addb
std
push
cwtl
mov
jge
lahf
clc
icebp
xor
jg
jmp
in
xchg
movsb
cmp
ss
rolb
out
pop
int
test
nop
mov
out
cs
jbe
jno
out
int
pushf
jae
or
dec
push
dec
xlat
icebp
or
push
pop
loop
mov
jno
lret
stc
mov
xor
ret
aad
cmpsl
fs
fcompl
enter
jp
cmpsb
mov
sub
out
push
stc
movsl
adc
dec
jne
add
fsts
inc
sub
xor
adc
or
push
out
push
or
in
call
sub
and
frstor
add
ficoms
subb
push
in
pop
popf
imul
out
pop
xor
mov
jp
bound
loopne
adc
insb
push
inc
sub
les
jl
lret
cmpsb
xor
sahf
push
and
dec
in
cwtl
adc
mov
lahf
imul
and
andb
jl
data16
addb
test
jb
adc
inc
inc
imul
insb
into
pop
popf
cli
add
and
sub
push
inc
popf
aaa
clc
fst
out
cmc
insl
add
sbb
cmp
fcomip
cmp
loopne
subl
jno
add
ja
addr16
in
cld
xchg
arpl
int
xchg
pop
add
cmp
pop
jmp
pop
push
dec
inc
cwtl
mov
js
mulb
xor
pop
push
in
xor
aad
mulb
sti
movsl
leave
sbb
jno
outsb
adc
mov
repnz
push
fcomi
fsubrs
xlat
ffree
jnp
xchg
xchg
lods
adc
pop
push
aad
dec
pop
sbb
stc
jmp
jne
inc
sub
jge
or
pop
push
aam
popf
mov
adc
testb
fcomip
pushf
enter
gs
in
stc
dec
das
clc
in
fsubrs
cwtl
popf
fsubr
mov
and
subb
lods
or
scas
push
or
movsl
cmp
gs
repnz
bound
xor
dec
push
aad
out
xchg
pop
xlat
push
inc
dec
xor
and
fldl
fdivl
xor
and
fiadds
push
pop
fcom
jl
push
pop
arpl
clc
mulb
popf
mov
push
sub
jne
divb
fcmovnbe
jne
data16
outsb
adc
outsl
jne
repnz
sar
cmc
movntps
push
in
xor
gs
fdivs
movsl
scas
sbb
inc
push
xor
push
cmpsb
fmuls
and
and
push
in
and
push
cmpsb
aaa
cli
das
mov
xor
mov
rcrb
add
dec
stos
and
test
movsb
mov
mov
leave
fucomip
sub
mov
dec
pop
jp
jg
aaa
imull
push
js
jp
in
inc
adc
mov
insl
sbb
sbb
xlat
aad
stos
mov
sub
ret
addb
dec
pop
add
sbb
movsb
fnsave
cli
fisubl
gs
frstor
in
lcall
mov
fdivrs
dec
scas
xchg
adcb
scas
mov
lea
insl
inc
mov
scas
inc
mov
dec
jge
scas
sbb
xor
mov
insl
sbb
jp
inc
jne
or
rcrl
loopne
data16
aad
jp
push
gs
test
popa
outsb
popf
cli
inc
popa
repz
fsubl
sub
fmull
aaa
jecxz
inc
rcl
mov
out
aad
gs
push
mov
mull
mov
imul
fsubl
scas
aaa
addl
adc
popf
cli
mov
adc
aad
inc
aaa
dec
sbb
inc
and
sub
rcrl
and
daa
repnz
in
subb
pop
push
stc
inc
jb
adc
pop
pop
call
add
mov
push
lods
adc
mov
cli
mov
fmuls
fsubs
or
inc
fsts
add
popf
dec
jmp
cmpsb
out
imul
xchg
push
dec
add
fbld
inc
and
and
push
push
cmc
insl
push
inc
test
fsubs
gs
sti
movsl
rcrl
sub
loope
fadds
lahf
inc
adc
mov
adc
inc
add
js
in
and
xchg
sbb
jno
adc
ljmp
mov
mov
jecxz
push
js
dec
jle
cmp
sub
mov
adcb
or
xorb
ret
push
aad
adc
adc
pop
or
in
gs
pop
daa
sub
test
and
stc
sub
ss
leave
push
fsubrl
mov
repnz
jg
cmpsb
aaa
addr16
inc
push
mov
and
xorl
sub
sub
add
mov
je
insl
inc
cmpsb
dec
fisttpll
mov
jno
add
arpl
inc
shll
sbb
push
std
pop
sbb
gs
fdivr
or
sbb
repz
incb
aad
gs
jmp
clc
shl
in
idivl
sub
adcb
in
push
mov
inc
mov
cmc
add
xor
add
add
ret
neg
addr16
test
in
push
dec
pop
clc
mov
in
bound
subb
dec
add
push
cmp
jb
aad
fcom
and
adc
mov
movsl
mov
inc
adc
jge
mov
sbb
and
xchg
neg
xchg
clc
cmpsl
fsubr
xor
clc
dec
cmp
sarl
rcrl
ds
sub
xchg
movb
add
or
adc
mov
bound
aaa
adc
sbb
js
out
pop
adc
xor
jg
insl
and
rcrb
scas
andl
and
xor
daa
push
mov
cmp
inc
xchg
cli
add
add
sub
shl
fsubrs
fdivr
mov
je
push
fadds
inc
push
and
shll
lds
popa
ja
pop
mov
jmp
stc
dec
dec
test
inc
adc
jne
ja
insl
mov
gs
rcl
pusha
adc
inc
push
insl
gs
jmp
je
and
test
lds
test
jmp
jne
and
in
test
xor
sub
dec
dec
aad
outsb
js
sub
cwtl
xlat
in
mov
outsb
sarl
jmp
pop
call
je
test
sub
rol
jle
call
scas
or
pop
sahf
dec
cmp
cmp
pop
xor
aaa
cmp
xchg
scas
push
sar
rorb
gs
inc
pop
movsl
dec
mov
jo
mov
cs
jp
cmp
gs
jo
pop
or
aad
push
in
subb
and
and
and
mov
loopne
mov
in
and
mov
sti
and
add
jle
gs
dec
sahf
in
mov
dec
ja
hlt
mov
pushl
jmp
sbbb
pop
jle
dec
jle
out
addb
out
and
and
lods
xchg
pop
jle
dec
jne
fs
gs
add
xor
cmp
inc
jno
jo
sbb
push
push
rol
fdivs
ret
movsb
cmpsb
insl
adc
dec
jb
aam
or
outsl
test
out
call
xchg
inc
call
inc
adc
push
or
xor
xchg
inc
or
xchg
mov
insb
push
inc
fadd
pop
mov
inc
mov
sbb
out
cmp
aas
sub
out
and
or
stos
dec
push
push
jmp
es
sub
in
loope
loop
pop
mov
out
xlat
enter
lds
adc
sbb
dec
loopne
icebp
jnp
push
mov
adc
xchg
je
in
mov
jmp
push
pusha
test
jle
out
mov
push
cli
lret
sub
popa
dec
notl
fcoms
inc
addl
xlat
cli
mov
gs
push
inc
inc
xor
scas
dec
mov
orl
ss
loope
and
xlat
aas
insb
jbe
jns
fistl
popf
cli
in
shlb
fadds
fcompl
adc
inc
jae
xchg
jns
fldcw
pop
xor
loopne
inc
std
xor
mov
addr16
daa
inc
xchg
lods
push
xor
das
movsl
sub
popf
jge
dec
and
push
jmp
gs
adc
xor
call
jmp
stc
xor
fs
repz
jle
add
ret
xor
mov
mov
test
outsb
push
mov
inc
scas
aam
hlt
xor
push
jo
stc
test
xor
jg
or
xchg
notb
push
popa
aam
jmp
negb
in
xchg
shlb
add
inc
mov
inc
push
pop
mov
adc
ret
cmc
push
ds
push
test
push
fs
push
fldt
stc
sbb
stc
jg
sub
dec
popf
adc
and
pop
push
pop
adc
sub
pushf
pop
mov
repnz
dec
xor
lcall
es
test
jo
push
mov
fildll
pop
movsl
xor
aad
fmuls
xlat
out
rol
cmp
fiadds
test
data16
out
aaa
daa
sbb
xor
out
dec
dec
fnstenv
jne
push
out
jmp
adc
xchg
inc
adc
out
dec
aas
cmpb
out
add
sub
cmp
xorl
sub
sub
es
sbb
sbb
out
je
mov
mov
arpl
jle
cmpb
jl
and
sub
adc
loope
lea
and
cmp
and
cmp
fisttpll
mov
jno
daa
xor
fdivrl
sbb
das
ficoms
dec
adc
add
add
cmp
add
cltd
jmp
ret
inc
out
mov
xchg
icebp
mov
xchg
out
out
jbe
dec
insb
insl
es
out
int3
sbb
cs
out
stos
mov
loope
leave
sbb
lea
push
pop
mov
aas
into
adc
cltd
dec
mov
lock
xchg
xor
icebp
loope
test
bswap
shll
lea
xchg
jae
cld
push
call
out
cli
clc
adc
jno
out
mov
out
push
cmp
pop
xor
test
daa
mov
jl
jecxz
mov
jne
mov
in
icebp
pushf
sbb
jae
xchg
out
jb
cmpl
jno
or
or
push
ljmp
test
stc
mov
mov
push
xchg
ret
in
xor
mov
push
out
mov
out
mov
jge
cltd
push
shl
ds
mov
push
mov
std
ljmp
push
mov
loop
ret
ja
jne
or
repnz
es
or
pop
push
lods
push
xorl
bnd
dec
jecxz
sbb
adc
lods
jmp
or
push
jge
mov
insl
addl
lret
mov
out
nop
xchg
jge
fildl
mov
jo
mov
dec
xchg
mov
out
jns
sbb
mov
mov
dec
cmp
fildll
mov
xchg
pop
xor
jp
or
aam
aas
fnsave
jno
iret
sub
lock
bound
out
mov
bound
std
push
je
ja
adc
inc
jl
inc
mov
xchg
stos
lahf
mov
dec
stos
push
ds
sbb
mov
addr16
lret
flds
mov
lret
lret
push
mov
mov
clc
sbb
or
out
std
inc
jle
push
repnz
cs
ret
jg
lret
fcmovb
addr16
cmp
loop
jns
lcall
int
movsb
mov
mov
xchg
adc
pop
repnz
jg
sbb
add
inc
and
cmp
push
mov
loop
movb
or
fisttps
out
push
movsb
pusha
and
into
ret
mov
jns
or
cmp
mov
movsl
icebp
dec
cmpsb
out
scas
subl
push
lcall
out
fisubl
mov
push
sub
dec
and
push
ja
or
test
lds
push
sub
nop
sbb
sub
fwait
push
scas
cmp
out
lahf
pop
xchg
push
out
adc
push
daa
outsl
sbb
mov
in
xor
mov
lods
out
repz
cmp
push
loop
out
mov
mov
add
jle
repz
imul
xchg
adc
in
and
push
add
push
lret
pop
scas
jne
add
das
cmp
add
lret
push
adc
clc
cmp
mov
out
jl
sbb
sub
inc
daa
ljmp
push
sbb
push
sahf
out
jg
andl
xlat
out
or
and
in
jmp
cld
es
push
repnz
mov
cmpsl
mov
adc
mov
std
xchg
out
lock
test
mov
outsl
es
pop
out
ret
dec
cmp
lcall
push
cltd
in
clc
sub
and
outsl
add
mov
je
and
cmpsl
aam
insb
out
or
dec
push
cld
out
mov
sub
cmp
jo
clc
movsl
jns
adcb
sti
jno
sbb
dec
out
add
sub
dec
and
adc
test
cmp
int3
dec
jmp
xor
imul
add
dec
stos
incl
dec
push
arpl
sub
push
jne
out
mov
mov
out
mov
sbb
out
stos
lods
jnp
pop
dec
cmp
pop
fnstenv
jecxz
jbe
iret
je
test
out
mov
add
popf
sar
push
sub
out
pop
mov
dec
add
jnp
jns
sahf
push
mov
insb
xchg
cltd
ljmp
jne
rolb
test
rorl
mov
jecxz
insb
sub
out
mov
xchg
ljmp
out
ds
jl
mov
dec
into
das
icebp
pop
out
enter
lods
sub
xor
jae
push
inc
shr
cmpsl
fildll
imul
ss
and
push
test
subb
imul
sub
ret
out
call
out
popa
in
repz
xor
out
jbe
inc
xor
cld
and
mov
sub
dec
les
test
out
ret
cmpsl
xor
repz
cmp
sub
push
pushw
out
imul
sbb
and
pop
or
inc
mov
stc
std
or
nop
sbb
fwait
xchg
mov
xchg
mov
mov
out
push
mov
dec
movsl
sub
addr16
rcrl
scas
and
loop
out
cmp
ja
cltd
pop
pop
out
mov
shll
and
push
rorb
ljmp
out
jge
shlb
mov
les
out
xchg
jbe
imul
jl
std
dec
cmp
stos
pop
clc
pop
lret
mov
iret
rcll
push
xchg
jo
out
push
adc
insl
add
addl
or
or
sub
repz
push
pop
mov
or
gs
pop
hlt
cltd
cld
push
in
xchg
mov
daa
stos
lods
jmp
out
cli
test
push
push
sub
or
jo,pt
out
test
cmpsb
xcrypt-cfb
and
cmp
lods
add
sub
repnz
clc
in
push
fwait
mov
es
mov
cmpsb
xor
sub
xchg
xchg
out
sbbl
loop
outsb
cs
dec
out
xchg
mov
or
xchg
jbe
pop
aam
push
out
xchg
imul
jo
mov
divl
xor
mov
jmp
push
int3
cmp
lret
jns
movsb
cmp
or
inc
mov
sub
pop
cmp
scas
or
sub
and
jp
cmp
out
das
rcrb
outsb
or
cmp
int
adc
mov
adc
push
sti
lret
fs
pop
cmp
mov
out
pop
cmc
or
in
dec
test
pusha
lds
sbbl
mov
xchg
or
testl
inc
inc
and
ss
inc
out
mov
pop
in
jb
xchg
aas
and
mov
xor
insl
out
lods
in
popa
ret
jb
jae
jmp
pop
sub
out
jg
jmp
out
and
fs
cld
icebp
sahf
adc
push
xchg
add
mov
mov
xchg
testl
out
jle
push
out
xchg
xchg
les
mov
icebp
mov
add
and
lcall
add
sub
stos
pop
cmpsb
dec
lock
test
mov
jecxz
sub
shl
mov
pushf
stos
pop
out
or
xor
std
sahf
sub
loope
inc
xchg
repnz
aaa
call
push
hlt
xchg
jno
mov
stos
mov
push
xchg
mov
pop
push
cmp
xchg
jne
jmp
out
mov
je
mov
cmpsb
js
shl
adc
insl
ret
inc
stc
ds
punpckhdq
cmpsb
inc
ljmp
push
insl
out
xchg
jns
push
sub
inc
cmc
mov
xchg
test
iret
lods
shlb
push
inc
into
sub
mov
test
jg
mov
xchg
push
nop
shl
cmc
and
pop
fisubl
jecxz
out
push
adc
fcmovnu
nop
push
out
in
repnz
jns
in
xor
and
pop
addr16
lcall
mov
movsl
std
xor
lods
push
out
inc
mov
dec
out
adcb
add
pop
mov
sbb
outsl
mov
movsl
fs
fidivrl
in
push
out
in
cltd
jl
sbb
out
fildll
dec
jns
mov
push
stc
lock
push
stos
mov
lock
xchg
xchg
mov
addr16
sub
out
lods
cmp
cmp
cmc
jl
int3
cld
lock
out
xor
jae
cli
out
jl
sbb
shl
bswap
jns
cmpsl
or
lock
add
loope
std
adc
xchg
std
cmp
pop
sar
xchg
add
lock
inc
shrl
xchg
cmpsl
out
add
mov
cli
testl
mov
push
out
es
mov
movsl
push
jle
pop
out
adc
fwait
mov
je
and
popa
jl
clc
sbb
lahf
cmp
or
jle
cmpsb
int3
imul
mov
cmp
mov
or
jo
out
scas
mov
sahf
and
add
pop
imul
outsl
sarl
rclb
inc
out
push
out
xchg
jae
jbe
mov
scas
movsl
jecxz
push
cli
jno
repnz
inc
lret
into
pop
push
nop
ds
jns
push
andl
mov
jo
aaa
addr16
sbb
cmpsb
push
out
pop
ss
mov
ja
cmp
mov
daa
and
mov
push
iret
mov
add
cltd
out
jae
je
loop
and
arpl
sub
sub
mov
repnz
out
pop
jecxz
clc
rcll
push
push
mov
sbb
cmp
test
jb
fidivrs
movsl
movzbl
mov
bound
or
shrb
icebp
xchg
shl
loopne
mov
or
xchg
out
push
jnp
xchg
xor
xor
inc
or
cltd
scas
rclb
lods
push
sub
add
sub
or
push
fdivr
mov
xchg
jo
sub
enter
mov
xor
xchg
mov
out
and
mov
scas
inc
push
loopne
xchg
in
aas
push
sarl
mov
sbb
xchg
cltd
aaa
xchg
popf
or
out
sub
push
out
sub
pop
fwait
push
adc
pminub
mov
adc
out
hlt
xchg
jae
insb
dec
stc
out
ret
lret
int3
out
lret
sbb
scas
subb
push
out
ds
jbe
sbb
in
lahf
out
inc
inc
icebp
imul
jae
dec
jg
dec
out
lret
pushf
cmp
repz
and
cmp
or
xor
out
pushl
outsb
inc
sbb
or
push
lahf
movsb
movb
insb
hlt
shl
out
popf
jle
or
mov
pop
ljmp
fwait
xchg
cmpsb
jle
out
inc
jo
mov
mov
pop
inc
push
add
loop
gs
xor
sub
xchg
cmpsl
lahf
lods
prefetchw
dec
adc
leave
jbe
ret
out
scas
jno
pop
aad
and
dec
xor
mov
repnz
jns
push
push
jecxz
ret
cmc
sbb
sti
bound
mov
xchg
mov
or
jne
repz
popf
hlt
jmp
stos
add
es
jecxz
rcrb
push
dec
out
test
inc
sahf
mov
add
jno
shll
out
das
out
sub
repz
jne
xor
fwait
or
outsl
stc
data16
sbb
cli
out
leave
cmp
jno
sub
je
cmp
test
out
jb
cld
cmp
pop
jo
stos
pop
out
cmpsl
mov
in
mov
inc
es
out
call
fwait
add
aam
cwtl
inc
sti
xor
cmp
sbb
rclb
in
push
mov
push
iret
and
aas
pop
out
in
clc
adc
add
movsb
mov
mov
push
ds
mov
es
ss
clc
fistl
inc
out
add
jp
xor
xchg
daa
mov
int3
cmp
cli
pop
push
out
mov
test
mov
sub
sub
loope
or
add
push
call
mov
adc
jg
xchg
jp
push
std
arpl
into
clc
cltd
repnz
dec
push
pop
out
aam
jo
dec
mov
shr
mov
les
cli
or
scas
inc
out
das
push
es
cld
aam
out
bound
stos
inc
repnz
mov
cwtl
popf
sbb
and
stos
es
and
jle
loop
push
xchg
adc
sahf
out
jns
popf
inc
out
xchg
sbb
rcrl
out
cmp
jp
imul
outsb
stc
int3
movsl
adc
arpl
pushf
cmc
mov
jmp
je
insl
dec
popf
out
lock
sti
xchg
jecxz
out
pushf
testl
mov
orb
stc
dec
and
mov
or
loop
icebp
mov
push
test
jb
adc
sahf
stc
lahf
or
push
push
inc
mov
jmp
incb
out
jle
push
mov
test
mov
insb
xlat
cmpsl
out
jp
hlt
bnd
fwait
jne
decl
stos
loop
mov
out
das
test
jecxz
out
imul
out
lcall
stos
les
xchg
sbb
call
div
sub
and
lock
leave
xchg
pop
scas
ss
jl
jmp
pusha
negb
push
iret
cs
adc
lahf
cli
xor
and
push
cld
and
push
mov
or
push
lcall
insb
lods
out
add
ds
push
je
pop
jp
xchg
mov
sub
jns
repnz
out
inc
cmpsb
jnp
movsl
daa
push
inc
iret
out
out
adc
out
pushf
mov
pop
and
push
fidivl
mov
xor
pop
es
loope
adc
pushf
add
test
jne
cli
fdivrl
adc
cmpsb
mov
pop
adc
lahf
inc
xchg
lods
xor
sub
or
push
cli
movsb
cmp
cmpsl
mov
and
fs
xor
in
out
and
arpl
scas
mov
mov
out
hlt
cmc
call
add
ficoml
xor
out
pusha
or
cmp
test
in
dec
xchg
out
pop
ss
xchg
test
dec
call
fstpt
cmpsb
xor
out
adc
pop
cmp
sbb
sahf
add
lock
jg
mov
lods
out
movsb
cmpsl
insb
pushf
mov
push
and
xchg
out
gs
jo
pop
imul
lret
sbb
call
add
mov
mov
sahf
push
cs
push
jb
repnz
xchg
ds
out
push
add
add
mov
xchg
adc
iret
and
or
in
fdivp
cmp
xlat
ss
scas
lret
sbb
xchg
push
mov
jecxz
out
fwait
cli
cld
in
xchg
les
mov
pop
cmp
scas
stc
out
pop
or
dec
mov
fimull
push
xchg
jnp
dec
inc
and
out
add
pop
sub
cmp
lahf
sbbl
rol
jmp
shl
aas
jno
xchg
and
jnp
lds
out
inc
repnz
xor
out
jbe
cmpsb
ja
in
sub
jg
cli
jl
xchg
sub
inc
int
lret
out
popa
out
jge
or
jo
adc
cmp
xor
cmc
outsl
lock
inc
mov
cld
loopne
adc
xlat
mov
pop
dec
pop
xor
ret
dec
add
aad
add
std
push
in
push
test
dec
out
push
mov
pop
mov
sbb
xorl
sbb
dec
shlb
push
hlt
ljmp
add
cld
out
or
jnp
hlt
daa
adc
adc
jns
cmp
and
push
jge
clc
cwtl
iret
dec
ljmp
js
push
jmp
mov
cli
das
push
add
dec
out
push
add
push
subl
lahf
out
aas
jl
mov
test
xchg
inc
dec
lock
popf
clc
out
push
cmp
lahf
out
jnp
pop
mov
test
popf
lock
push
fwait
jge
cld
icebp
mov
fisubrl
stos
or
loopne
sbb
cld
and
inc
cmc
mov
pop
lock
lods
mov
mov
push
mov
repz
cltd
xor
mov
push
popf
pcmpgtb
pop
gs
icebp
cmpsb
jbe
pusha
out
push
ds
sub
and
adc
push
pop
scas
dec
and
cwtl
leave
jmp
jge
xlat
push
andb
inc
push
ds
inc
vmwrite
outsl
lret
cld
aas
jecxz
and
cmp
mov
mov
int3
sti
loope
lret
push
ljmp
je
push
ds
push
data16
fisttpl
pop
cmc
xlat
std
aam
xor
xchg
xor
mov
jno
mov
out
push
lcall
out
fsubrp
dec
shrb
out
ja
in
fs
loop
add
loope
cmp
out
decb
rclb
les
mov
add
in
gs
cwtl
test
orb
dec
stos
xlat
outsb
pusha
fwait
lods
mov
out
dec
jnp
and
sbb
out
int3
iret
push
cli
mov
sub
mov
cmp
mov
ret
out
in
jno
cmp
push
jg
cmpsb
enter
cmp
inc
out
push
nop
jl
xchg
out
cmp
arpl
out
fwait
xchg
xor
pop
dec
out
mov
inc
out
jp
or
fisttps
jno
stc
imul
fwait
sarb
jb
pop
push
push
shlb
fdiv
repnz
mov
mov
cmpsb
pop
xchg
std
out
pop
adc
jnp
mov
lcall
mov
fdivrs
scas
jnp
test
pop
add
or
mov
stos
out
push
inc
cltd
jne
or
mov
jg
xchg
jb
hlt
push
out
xchg
add
fldenv
or
scas
adc
cmpsl
out
decl
inc
adcl
lock
dec
dec
js
mov
lock
out
lods
hlt
ds
jl
jne
pushf
mov
addb
imul
jns
stc
les
repz
enter
mov
out
into
pop
clc
scas
push
cltd
lret
xor
mov
js
les
out
es
xchg
cmc
add
into
push
mov
cltd
jno
sti
adc
clc
fistpll
jecxz
push
ja
ficoml
adc
loope
sbb
add
pop
test
scas
sbb
mov
add
cmc
negl
inc
sbb
out
push
scas
fucomp
out
hlt
pushl
cmp
mul
xchg
jmp
add
repz
mov
dec
xchg
push
mov
mov
out
mov
mov
popa
push
adc
xchg
adc
add
cmp
mov
das
jecxz
push
imul
xchg
jbe
or
xchg
pop
dec
shrb
adc
lea
aam
fldln2
sti
xor
mov
sub
dec
mov
xchg
push
cmpb
scas
std
loope
fistpll
test
test
andb
scas
out
add
jge
push
mov
mov
xor
pop
jmp
jb
xor
in
enter
shlb
sbb
es
nop
into
xor
jae
sahf
push
jo
aam
daa
mov
imul
stc
cmp
pop
leave
fsubl
scas
xor
pop
cltd
inc
js
push
or
inc
mov
ret
in
cld
jmp
or
mov
xchg
push
in
popa
xchg
out
jge
sti
scas
fld
out
add
pop
xor
mov
int3
out
arpl
inc
jne
or
enter
pop
out
mov
adc
out
sti
jg
add
daa
aas
out
mov
mov
dec
mov
push
in
xor
nop
incb
xlat
jns
repz
pop
xchg
lods
je
daa
lods
inc
and
sarb
push
stc
in
pop
adc
out
cld
mov
cmp
jl
ss
dec
fsub
push
les
ret
or
xchg
jne
test
shlb
adc
xchg
xchg
insb
cmpsb
pushf
stos
test
out
xchg
lret
aaa
lret
mov
mov
ss
sub
fsubrp
clc
bound
out
insb
mov
jg
cmp
adc
dec
imul
repnz
adc
std
add
jbe
xor
fdivrl
mov
or
fwait
xlat
movsb
jle
sub
mov
sbb
xchg
rol
sub
out
hlt
out
cmp
jle
mov
je
mov
pop
xchg
rcrb
sahf
ljmp
lret
aam
into
sub
pop
mov
push
xchg
out
mov
aaa
out
pushf
inc
dec
ja
mov
outsb
jecxz
push
cli
or
push
pop
cmp
out
pop
inc
push
mov
mov
mov
loopne
rol
cs
fwait
sbb
stos
es
or
xorb
int3
jmp
mov
sbb
out
fs
cmpsb
mov
repnz
cli
jmp
sbb
or
and
adc
jle,pn
adc
subb
push
pushf
mov
out
outsl
popa
jp
xor
jl
jge
jmp
push
or
stc
pop
jle
lds
add
mov
or
ret
xchg
and
jno
mov
loop
add
lret
jg
pop
std
ss
push
xor
aam
jp
in
jne
cli
jg
cmpsb
arpl
and
pop
adc
out
xor
out
bound
push
xchg
and
in
imul
lcall
xchg
add
andb
or
fstpl
xor
bound
adcb
dec
add
cmp
fdivs
divl
adc
jmp
rorb
int
dec
adc
xor
roll
js
popf
xor
pop
movsl
es
loop
popa
test
or
enter
or
hlt
aad
fcmovbe
fisubs
arpl
adc
sbb
dec
push
outsl
fstps
imul
in
cmp
popa
inc
jge
xor
cld
pop
adc
xor
xlat
rcrl
adc
mov
jno
mov
in
inc
or
and
adc
push
call
flds
add
pop
mov
push
adc
dec
movb
push
and
mov
or
ret
lret
add
sbbl
icebp
mov
les
or
dec
stc
or
pop
rcll
gs
enter
arpl
xchg
out
clc
xor
adc
sahf
popf
dec
inc
xchg
arpl
xor
les
sub
popf
mov
cwtl
push
ds
leave
xchg
mov
pop
gs
js
xchg
pop
push
mov
push
sti
arpl
movl
adc
cmp
stos
ds
int
je
je
divl
xor
cmpsb
pop
nop
test
aad
inc
jno
pop
gs
repz
push
call
rolb
ds
push
aas
lds
xor
mov
shrl
fs
testl
in
bnd
shrl
adc
nop
sub
in
imul
adc
in
fidivs
xlat
inc
test
sbb
test
mov
fcomp
and
jnp
cmc
jne
jne
jne
jne
jne
jne
jne
test
add
push
ds
rcr
pop
aaa
inc
cmp
xor
cmpsb
insl
dec
test
sahf
dec
jmp
add
aaa
rol
imull
ds
movsb
les
and
outsb
jp
jno
jg
or
scas
test
mov
lcall
cs
push
sbb
cmp
out
shll
add
dec
mov
and
out
adc
jne
lds
rcll
in
subl
aam
test
adc
pop
mov
loope
js
push
inc
jo
xor
inc
mov
je
or
adc
mov
adc
sub
xor
push
jle
pop
ror
push
arpl
push
inc
pop
out
cmp
xor
sub
or
push
aaa
ja
addb
pop
sti
cmp
out
repz
call
ds
sbb
les
pushf
outsb
cmp
clc
cmc
jb
lock
xlat
out
push
push
xchg
push
cmp
leave
xchg
lock
and
mov
pop
jb
cmpsb
enter
in
pop
add
sub
enter
dec
adc
pop
and
dec
fiaddl
and
shrb
out
adc
out
loope
push
js
push
and
push
mov
out
xchg
enter
inc
jge
xlat
adc
inc
popf
adc
xchg
add
stos
shll
call
xor
sbbl
std
es
xchg
sub
inc
fsubrl
dec
pop
add
pop
sub
dec
repnz
inc
adc
inc
out
cmc
ret
lret
add
lods
add
aad
sub
ret
push
push
xor
dec
dec
pop
push
pop
sbb
js
cmpsl
sub
inc
dec
sub
dec
add
pushf
add
sub
call
jne
push
cltd
cwtl
xlat
sbb
adc
notl
xchg
rclb
add
bound
testb
mov
xchg
jecxz
sub
pop
xchg
sbb
cs
push
xchg
mov
jno
xchg
jb
adc
repnz
imul
shlb
int3
dec
mov
ret
xchg
inc
lea
jl
test
insb
push
data16
test
mov
add
or
fcomp
add
pop
and
jmp
adc
fwait
pushf
pop
insb
xchg
xor
xchg
addr16
add
pand
insb
cmpsl
ret
mov
inc
lds
add
mov
mov
fsubr
inc
dec
sub
pop
js
std
fnstcw
iret
flds
push
or
lods
fldenv
jle
jmp
repz
lret
fadds
xor
jne
repnz
nop
push
dec
jo
hlt
cmc
aad
cmpsl
daa
dec
test
test
jne
test
lods
mov
divb
xor
fwait
mov
fisttps
xor
xchg
std
test
int3
dec
idivb
add
sub
out
sub
inc
aaa
sbb
out
mov
daa
xor
ret
out
push
loopne
out
xchg
dec
lds
adc
and
dec
fistl
dec
and
adc
cmpsb
hlt
out
dec
dec
dec
dec
inc
out
cmp
aas
cmp
cmp
push
bound
push
js
push
ret
mov
into
mov
mov
sar
mov
in
xchg
xorb
decb
xorb
jl
fdivrl
inc
test
sub
decb
xlat
in
inc
in
cmpsb
js
inc
les
ret
gs
fsubp
aaa
fstpl
xor
xor
daa
pop
out
dec
jmp
fmull
jp
mov
and
and
dec
dec
xchg
pop
adc
adcb
ja
ds
out
out
add
je
sub
ss
enter
mov
jo
addr16
fs
stos
or
jmp
push
outsb
insl
jo
push
out
imul
inc
inc
pop
out
pusha
pop
pop
pop
pop
pop
push
out
ret
mov
int
adc
lret
testb
push
add
xchg
cli
jl
in
or
pushf
inc
lods
outsl
loopne
pusha
mov
mov
into
cmc
pushf
dec
iret
cmp
lock
and
subb
imul
sti
dec
fstpt
or
lds
imul
pop
jo
xor
test
sbb
mov
cltd
out
out
mov
call
ret
xor
add
out
mov
fwait
lahf
pop
mov
xor
movsb
xchg
out
mov
sbb
sti
cwtl
mov
add
and
icebp
daa
in
dec
xchg
inc
or
cmpl
scas
shrb
mov
out
mov
scas
insl
push
or
out
lock
cmc
stos
sbb
inc
add
out
rol
or
mov
js
loope
xchg
mov
or
mov
shll
dec
shll
lahf
out
imul
xchg
jo
mov
adc
jb
out
xor
outsb
jno
fcmovu
jne
mov
cmpsl
aas
pop
hlt
dec
imul
popf
mov
cmc
aas
push
sbb
ljmp
int3
mov
fwait
lock
cmc
cmpsl
daa
hlt
pop
in
adc
ds
xchg
cltd
je
lods
mov
loop
fistpl
sbb
pop
mov
mov
call
pop
shrb
andl
out
ficoml
cs
push
push
clc
orb
out
cmp
out
xchg
popf
cmp
sbb
repnz
inc
scas
push
fstl
subb
daa
dec
jnp
mov
mov
push
add
and
or
xchg
imul
out
ss
mov
mov
pop
adc
push
add
dec
sbb
xchg
sub
cld
rcrl
out
stos
add
aam
lods
mov
add
stc
out
in
aas
inc
pop
lcall
pop
mov
sub
test
pop
and
int3
mov
sub
out
mov
scas
outsl
inc
lods
adc
js
pop
out
jnp
add
mov
out
pusha
mov
divl
out
shll
cwtl
mov
adc
pop
mov
or
loop
scas
dec
mov
inc
ret
push
xlat
cmp
decl
cmp
mov
ljmp
int3
in
decl
add
push
or
mov
sub
aas
push
out
out
insl
fcoms
lock
fdivl
stc
xorl
imul
adc
xchg
xor
scas
sub
add
aad
repnz
fucomip
sbb
mov
out
imul
push
rep
popa
in
push
pushf
and
inc
out
mov
ss
pusha
loop
pop
push
out
sarb
dec
jl
cld
xchg
mov
inc
cmp
in
and
add
nop
jp
fisubrs
les
mov
sbb
out
inc
loope
jne
sbb
std
and
stos
mov
mov
fsubs
out
add
aas
cwtl
sub
push
dec
lea
pop
mov
popa
xchg
or
sbb
ffreep
xor
clc
shll
push
aam
dec
adc
mov
int
push
shr
ljmp
out
mov
mov
add
repnz
imul
out
pushf
test
stc
pusha
pop
push
xor
mov
adc
test
frstor
out
mov
popa
xchg
aaa
inc
push
out
in
cmc
and
shl
out
mov
aad
in
add
and
add
out
xchg
mov
mov
out
xor
std
out
outsb
add
pop
inc
mov
or
iret
pop
insb
nop
xor
inc
mov
mov
mov
push
daa
lods
out
insl
jbe
inc
mov
call
mov
fwait
push
sti
es
sarb
jp
jnp
ja
jecxz
mov
pop
cmp
out
test
and
adc
or
es
shrl
jnp
fidivl
addl
sbb
xchg
mov
dec
mov
jp
sub
jne
mov
mov
jge
and
bound
das
popf
out
rcr
rclb
dec
stos
sahf
out
push
jmp
lea
inc
push
push
pop
xchg
shl
fbstp
in
push
out
in
dec
mov
in
sahf
dec
add
inc
mov
sbb
adc
jae
loop
adc
or
pop
cmpb
cld
js
push
outsl
and
gs
or
push
out
mov
int3
mov
mov
sub
mov
mov
test
loop
xchg
adc
cmpsb
lcall
sbb
mov
out
mov
leave
jmp
lret
xor
sub
loop
cmpsl
orl
lods
lret
fdiv
insb
sub
pop
out
xor
xlat
jnp
or
or
inc
aaa
loopne
push
cmp
xchg
in
pop
shrl
fs
lret
test
push
les
outsb
iret
pop
jmp
push
add
scas
jmp
icebp
inc
aas
xor
dec
add
out
mov
outsb
aaa
out
pop
pop
cmpsl
jb
push
and
popf
sbb
shrl
out
push
jne
cmpsb
cld
arpl
out
popf
fwait
mov
out
inc
and
cmp
cmp
pop
iret
cli
sub
jmp
out
int
dec
mov
xchg
add
xor
sub
fs
nop
daa
cmp
clc
jg
stos
scas
xchg
dec
popf
jle
clc
dec
roll
out
mov
lahf
fidivrs
jne
inc
sub
or
pop
xchg
rorb
adc
arpl
icebp
in
xor
nop
mov
sub
inc
out
sub
loop
repz
cmpsl
jno
and
stos
addb
rcrl
icebp
adc
out
std
loope
mov
ds
loop
notl
leave
sub
shr
jl
out
jb
lcall
int3
fwait
sti
dec
push
add
mov
arpl
ret
cmp
xchg
mov
sti
lcall
push
lret
outsb
out
fwait
lods
or
out
ret
mov
and
add
inc
popa
fbstp
les
jne
xor
pushf
mov
stos
push
loopne
push
jns
ret
sahf
fisttps
pop
out
mov
cmp
pop
sbb
cmp
push
nop
push
out
pop
and
out
cmp
cs
jle
sbb
into
cmc
stos
repz
aam
stos
sub
out
popa
or
pop
out
jns
sahf
add
xchg
out
push
ja
add
out
push
dec
or
test
nop
loop
xor
mov
lods
adc
test
into
jne
scas
adc
xlat
inc
push
push
lret
xor
insl
or
mov
cli
push
push
jnp
addr16
jle
jl
fbstp
aas
cld
mov
pop
out
mov
add
inc
cmc
aas
mull
jns
xchg
jb
xor
sbb
movsb
daa
rcrl
mov
out
subl
rcrb
push
ss
clc
leave
lcall
xor
subb
xchg
bound
aad
mov
dec
sbb
mov
xor
or
lods
sahf
mov
jp
inc
mov
pop
addr16
jmp
in
test
or
and
xchg
mov
jge
mov
adc
adcl
mov
cltd
inc
icebp
mov
and
shr
xchg
push
inc
out
lds
nop
add
out
outsl
pop
test
push
cmpsb
jns
jno
dec
lret
mov
ss
rolb
mov
inc
popf
cwtl
test
pushf
adc
pop
and
xor
aaa
pop
adc
or
xor
cmp
push
adc
int3
mov
aas
cs
xor
orl
inc
outsb
lods
nop
mov
fisubrs
and
call
movsl
out
insb
sub
pop
stc
leave
adc
or
cmpl
xor
out
cmpsl
out
mov
mov
cmp
sbb
enter
les
jne
out
cwtl
jbe
xchg
scas
out
icebp
cs
push
adc
shrb
mov
xor
and
cmp
mov
insl
xor
insb
mov
rcrl
filds
sbb
out
mov
jb
sub
pop
test
dec
cmp
push
sub
pop
and
push
ds
mov
push
test
mov
out
xchg
aam
jecxz
fcomi
out
lods
pop
add
popa
sbb
icebp
and
aaa
cmc
mov
add
push
sbb
stos
pop
mov
add
fisttpl
inc
call
jo
out
inc
shlb
xor
cmp
lock
dec
fs
mov
push
xchg
dec
pop
inc
mov
xorb
and
out
mov
in
out
rcll
pusha
fistpl
jmp
fwait
stos
insl
jne
iret
and
sbb
pop
mov
dec
stos
je
fs
sbb
dec
out
xor
mov
or
cmpsl
mov
out
sub
fsubrs
out
rcl
mov
sbb
out
lret
push
adc
sub
ret
inc
mov
sub
add
arpl
insb
into
push
out
xchg
popa
pop
inc
cwtl
push
mov
sub
or
inc
mov
and
mov
mov
cmp
lea
adc
adc
in
pop
sbb
cmp
push
in
push
xor
jecxz
out
jle
dec
test
xchg
out
repnz
lods
jge
inc
push
xchg
dec
rolb
push
rcrl
sbb
push
int3
mov
xor
dec
dec
repz
je
iret
cmp
aam
out
std
mov
fnstenv
adc
subb
out
mov
sub
popf
lret
out
jnp
dec
xchg
xchg
jg
jne
cmovbe
shl
pop
and
xchg
inc
out
cmp
loopne
mov
mov
mov
stos
test
enter
out
mov
cs
in
mov
mov
cmpsb
inc
dec
jle
jecxz
ds
rcrl
out
mov
imul
aas
pop
push
popa
cld
lock
je
cmpsb
daa
out
push
or
inc
dec
int
sub
mov
clc
in
adc
fdivrl
movsl
out
out
mov
mov
ja
xor
aam
je
lea
out
add
jbe
xor
mov
in
shll
sub
sub
xlat
jae
adcb
addl
and
push
sbb
pop
sti
out
mov
lcall
cmp
repz
jmp
fnstenv
sbb
xchg
nop
jno
jno
sti
push
dec
call
nop
cld
mov
mov
stc
push
sub
pop
push
jle
mov
je
mov
pop
mov
jae
dec
arpl
cmc
in
mov
into
mov
test
sub
inc
je
pop
lret
fcompl
xchg
les
ljmp
xchg
xchg
out
arpl
cltd
in
out
out
adc
and
jmp
jp
pop
push
aam
mov
mov
cmp
jmp
push
subl
fsubr
dec
sbb
xchg
out
in
dec
addr16
icebp
add
loopne
inc
into
xchg
cmpsb
mov
out
loope
jb
lret
or
push
rolb
sti
xor
sub
or
dec
ljmp
out
cs
xchg
lcall
adc
shrb
lret
cmp
movsl
jno
or
data16
cli
add
ret
out
mov
cmp
xor
mov
lahf
ret
mov
jno
out
mov
push
xor
cmp
outsl
pop
out
imul
push
or
lods
mov
ret
jg
stos
mov
fucom
inc
and
pop
out
xchg
adc
sub
insl
jns
cwtl
sarl
add
ljmp
mov
sub
jge
push
xor
push
dec
imul
loopne
pop
and
or
insb
pushf
inc
xchg
ljmp
cmp
lea
xchg
sbb
sub
insl
cltd
repnz
dec
or
lods
fucomi
arpl
cld
mov
fnstsw
out
or
pop
aam
jae
xor
sbb
sub
int
cli
fsubr
inc
fldt
mov
addr16
push
ja
jg
adc
and
roll
nop
lret
mov
cmp
es
add
mov
cwtl
xor
cli
test
stos
and
xor
ror
jmp
xchg
aaa
shll
cmpsl
sub
hlt
out
mov
xchg
ss
jb
in
aaa
repnz
test
out
lds
int3
into
adc
enter
aad
into
pop
out
or
ret
stos
inc
jle
xchg
mov
call
or
lcall
lods
mov
test
lds
out
sub
xor
outsb
out
mov
pushf
cli
test
sub
rorl
add
pop
jne
jns
xchg
add
iret
sbb
stos
out
push
aad
mov
add
aaa
xchg
imul
icebp
nop
loop
sub
dec
out
add
pop
cmp
or
or
xchg
dec
loope
enter
adc
adc
xchg
ficoml
cmc
pushf
jns
loopne
jnp
in
xchg
push
out
sub
push
fwait
add
lds
push
jp
sub
out
ret
push
repz
jb
ds
out
fadd
aad
outsl
xchg
lcall
jecxz
or
cmp
les
cmp
lods
das
cs
adc
cmp
inc
out
xor
xlat
adc
jl
or
mov
sbb
dec
cmc
or
sbb
fistpl
jns
int3
cmc
insl
popa
aam
pop
dec
cmc
gs
into
push
in
mov
sbb
test
add
sahf
int
aaa
jecxz
sub
xor
sbb
push
out
cld
inc
push
sahf
xor
stos
repnz
mov
add
cmpsb
lret
and
imul
xchg
lea
loop
int3
movsl
pushf
xchg
push
push
out
inc
imul
sub
out
lods
fcomps
lret
dec
cwtl
hlt
not
fstps
dec
mov
xor
cwtl
aaa
mov
sbb
stos
cmp
and
xorl
aad
cmc
in
mov
fisubs
out
sar
shll
fdivp
pop
and
push
push
test
out
jmp
add
shll
out
dec
shlb
push
bnd
test
mov
sbb
mov
fcom
cld
sahf
imul
lods
cmpsb
loope
fcomip
inc
cmp
inc
add
add
dec
push
pop
jle
cs
test
outsl
jo
xchg
and
pop
jne
or
repnz
nop
lcall
cmpsl
pop
jae
sahf
repnz
adc
adc
out
test
xor
scas
lret
fwait
or
aam
jo
rol
out
or
mov
lret
out
data16
xchg
push
jl
outsl
mov
inc
imul
lods
xor
jl
cmp
mov
out
xchg
or
dec
stc
out
fiadds
jno
std
icebp
push
lods
scas
inc
out
mov
push
mov
and
js
inc
shr
insb
push
lea
imul
add
out
add
cmp
std
jb
ret
out
xchg
and
cmp
insl
or
and
pop
in
inc
je
cmp
decl
movsl
sti
push
fdiv
mov
out
add
out
ja
mov
xchg
lock
imul
add
sub
out
xchg
or
sub
jne
and
in
push
es
mov
repz
xchg
popa
in
les
mov
cmp
jmp
not
and
sbb
jle
adc
aaa
sub
and
dec
mov
ds
or
out
inc
push
xchg
xor
mov
sbb
arpl
pop
and
out
jno
and
test
xorb
xchg
and
and
dec
mov
incb
adc
pop
pop
out
inc
fwait
lcall
dec
lock
lods
cmp
out
adc
pop
daa
xchg
cli
shl
mov
iret
xor
mov
int3
mov
call
jg
rorb
mov
out
je
daa
lock
cmp
mov
shl
pop
sub
fnsave
mov
xchg
add
enter
pop
iret
jno
out
jbe
add
outsl
js
out
cmp
aam
ret
sub
in
push
outsb
test
out
in
out
sahf
xchg
mov
out
mov
out
lret
mov
mov
cs
ljmp
out
fmull
clc
jne
pop
xchg
fs
cli
inc
inc
addr16
lret
and
movsb
lods
es
cmp
xchg
add
inc
and
fisttpll
push
cs
repz
insl
jo
subl
mov
push
add
test
adc
cmp
jge
loop
mov
incb
jne
mov
jl
jne
mov
sub
out
fwait
pop
pop
cwtl
sti
add
fs
ret
sahf
push
push
clc
sbb
sti
stos
je
std
out
shrb
adc
mov
lret
mov
test
sarl
jb
add
push
out
insb
pushf
pop
xor
jp
mov
inc
out
add
mov
mov
pop
stc
push
mov
xor
movsl
jl
xchg
push
or
mov
std
mov
lret
icebp
orl
lret
and
push
out
sbb
bound
stc
daa
and
in
std
das
inc
clc
xchg
repz
loop
inc
sti
pop
ss
jnp
ret
popa
fadds
cmp
lds
jge
xlat
daa
out
add
shll
push
push
maskmovq
imull
sti
cmp
std
popf
rolb
cmc
jno
mov
add
aas
push
jbe
in
arpl
out
inc
int3
inc
pop
inc
or
out
mov
pop
push
or
mov
cld
pop
repz
stos
mov
sahf
mov
fnstenv
mov
cwtl
mov
movsl
cwtl
jecxz
jbe
push
in
in
test
arpl
xor
lods
into
sub
out
iret
adc
cmp
or
insb
cwtl
xchg
es
repnz
test
cmc
fldl
mov
jge
adc
insb
cmc
ja
jbe
cli
out
lds
add
iret
insb
pop
xor
sub
out
clc
loopne
push
arpl
out
dec
clc
mov
xchg
ss
out
push
xchg
stos
xchg
mov
jmp
out
pop
test
and
jmp
push
fistpll
popf
loopne
scas
pop
rolb
jae
lds
xchg
mov
push
mov
test
imul
xchg
cltd
lret
test
jl
out
inc
fwait
jecxz
mov
shrl
bnd
push
push
cwtl
jmp
adc
adc
mov
fnsave
inc
es
lds
pop
xor
and
xor
mov
jmp
mov
cmp
push
out
mov
repnz
sbb
mov
mov
out
stos
push
pop
call
or
add
mov
out
faddl
inc
push
out
jno
imul
scas
xor
and
stc
out
xchg
mov
leave
out
sub
ret
imul
mov
sti
pop
inc
ljmp
data16
add
jae
rolb
mov
int3
adcb
jbe
stc
pop
mov
test
dec
and
xchg
and
or
xorb
jecxz
cmp
stc
cli
out
cmp
add
jnp
mov
or
std
shlb
call
xor
sub
inc
mov
push
adc
imul
out
dec
in
ficompl
inc
mov
ss
data16
gs
xchg
int
adc
scas
shr
jno
lock
in
mov
adc
cltd
inc
enter
xor
cmp
sbb
push
mov
int
movsb
popa
fistl
iret
ljmp
out
push
adc
test
or
je
seto
jno
out
movsl
and
inc
fmuls
fstps
aam
xchg
or
mov
lret
clc
mov
cs
cmp
mov
adc
inc
int3
fldenv
pop
lea
xor
jae
in
movsl
push
sahf
jne
pop
push
and
mov
outsl
mov
loop
inc
out
xlat
add
lret
push
jne
push
inc
loop
and
xchg
out
jbe
mov
mov
mov
cmp
leave
data16
add
cmp
cmc
loopne
push
add
loope
jmp
es
pusha
push
mov
std
cmp
xchg
sti
fucom
mov
aaa
insb
mov
xchg
and
mov
in
push
std
add
daa
leave
jo
aad
add
pop
jne
and
cmpsl
shrl
or
xchg
xchg
out
jmp
cmpsl
rcrl
pop
aaa
out
cmp
dec
fsubl
mov
out
xchg
insb
push
fistl
mov
mov
push
cmc
lods
cld
mov
call
sub
push
aas
jne
or
and
or
test
xor
inc
ljmp
leave
aad
js
fmuls
out
mov
data16
clc
mov
roll
scas
inc
cmp
in
std
pop
loop
out
icebp
and
fucom
dec
cmc
push
dec
mov
mov
cmp
shl
inc
jb
out
mov
push
loope
xlat
adc
pop
lock
mov
es
mov
mov
push
out
jecxz
and
sahf
out
stos
nop
dec
or
call
pop
xchg
gs
incb
mov
out
test
iret
sbbl
add
mov
movsb
fidivrl
and
push
loope
sti
out
stc
adc
movups
xchg
in
and
insb
pop
fdivs
inc
in
mov
or
push
insl
out
dec
dec
and
pop
out
or
lods
fsts
into
dec
push
shlb
decb
push
xchg
out
inc
fstpl
mov
lods
bound
and
jne
sbb
jmp
cli
nop
jmp
push
scas
sarb
xchg
cwtl
xchg
std
repnz
arpl
xor
inc
lods
pop
add
out
mov
add
sub
mov
jae
inc
rcrb
les
mov
out
insb
xor
outsb
enter
mov
aad
xor
cmp
fdivs
ds
out
or
pop
stos
pushf
repz
add
call
jo
sbbb
push
out
inc
leave
sub
aam
out
cmc
je
cmpsb
mov
mov
or
mov
inc
out
fstpt
xor
mov
insb
pop
mov
mov
in
stos
shl
mov
iret
out
cmpsb
mov
mov
push
pop
push
ljmp
xchg
je
pop
pop
xchg
pop
sti
jmp
adc
shl
out
das
push
icebp
add
mov
ds
out
or
gs
iret
add
out
mov
mov
leave
or
add
xor
cmc
inc
sub
into
jno
leave
aam
inc
lret
jne
mov
pop
cmp
push
vpacksswb
jmp
dec
mov
dec
cmpsb
shll
out
sbb
xor
bound
sub
out
add
adcb
stc
adc
lahf
out
mov
mov
mov
lret
icebp
mov
push
popa
call
mov
lcall
dec
test
outsl
inc
out
ret
sbb
int
ss
ljmp
in
lock
jne
xor
jne
lods
xor
sub
and
dec
out
or
mov
into
out
lds
mul
and
call
adc
cltd
jns
in
sub
push
adc
dec
lcall
adc
mov
pushf
cld
inc
int3
sahf
push
lcall
sub
sub
sbb
xor
mov
fcmovnbe
and
adc
movsb
push
and
icebp
mov
out
mov
cmp
push
out
fsub
jle
std
or
je
sbb
mov
cmp
cmc
lcall
pop
popf
in
jmp
out
dec
ret
push
jg
mov
loopne
cwtl
xchg
cmc
lods
mov
cmpsl
mov
out
cmp
out
xlat
stc
cmp
jmp
outsl
imul
call
mov
jg
jae
inc
mov
push
fstps
out
cwtl
mov
dec
loop
je
out
jp
jne
pop
jns
xor
or
mov
imul
in
mov
xchg
popf
out
xchg
loopne
xor
out
aaa
ljmp
out
lods
jo
cmc
insl
into
test
push
push
scas
nop
fimuls
lock
out
push
push
sbb
cmp
shlb
dec
cmp
push
jle
sahf
sbb
test
addl
aas
lods
sub
inc
out
and
and
inc
sub
and
test
out
lods
dec
ror
pop
nop
pop
loope
adc
clc
jb
mov
or
push
pop
pop
jbe
out
sub
icebp
cmpsl
or
mov
cmp
shr
inc
and
test
popf
xchg
jl
imul
pop
out
inc
in
out
or
mov
in
out
add
fistps
stos
nop
cwtl
test
ljmp
in
pop
repnz
jge
xor
xchg
pop
jne
sub
sbb
aam
mov
sbb
cli
ljmp
push
repnz
dec
out
xorl
xchg
lea
popf
push
testl
sbb
loop
inc
push
cmpsl
dec
gs
out
rclb
xor
pushf
sub
mov
js
cmp
loop
mov
fsub
fstp
bound
mov
test
and
mov
jle
es
out
jno
out
sub
inc
jne
dec
cmpl
out
repz
stos
out
xor
mov
xchg
pushf
push
xor
lahf
cmpb
add
ljmp
jae
out
sub
dec
popa
adc
out
xchg
and
test
sbb
push
xchg
out
add
mov
push
ds
xor
shlb
fbstp
jbe
sti
mul
add
or
xor
xchg
sarb
mov
push
scas
jne
jne
outsb
cmc
jmp
jne
and
outsl
call
repnz
out
cwtl
sbb
sti
stos
hlt
out
xchg
imul
push
enter
mov
push
ret
lret
mov
jbe
and
mov
fsts
out
icebp
movsl
xor
frstor
sub
sub
gs
outsl
enter
push
shll
out
cld
sub
jnp
je
out
sarl
cwtl
nop
inc
inc
jne
rcll
or
mov
cmp
cmp
out
rorb
and
sbb
mov
das
and
icebp
shrb
jmp
rdtsc
jbe
dec
add
pop
scas
xor
sub
in
xor
sarl
js
push
imul
das
dec
aas
out
es
push
faddl
cmc
mov
movsl
rcl
scas
popa
sbb
lea
ret
pop
cli
dec
sub
and
inc
scas
loop
jle
jae
out
mov
jb
shlb
add
push
rclb
lcall
js
cmpsl
das
mov
adc
push
jl
lret
sahf
mov
add
popf
mov
cli
jmp
jl
fxch
or
jmp
jo
xchg
enter
loope
icebp
add
movsb
sbb
movb
inc
push
and
into
mov
in
inc
push
mov
xchg
imul
mov
or
pop
jle
add
and
and
jmp
jno
fdivs
adc
or
mov
cmc
mov
arpl
push
dec
dec
movsb
loope
aad
imul
add
out
xlat
lret
lods
pushf
mov
push
xchg
and
repnz
sub
and
push
cmc
dec
fwait
add
inc
dec
std
mov
xor
sbb
mov
dec
xlat
xchg
adc
jbe
rclb
sub
out
test
jb
cmpsb
clc
out
faddl
mov
popa
out
xchg
jne
mov
cmp
and
jge
iret
mov
jae
icebp
out
into
xchg
mov
or
out
xchg
pop
push
out
adc
imul
cmp
mov
out
cld
frstor
mov
push
add
fwait
cmp
pop
aad
jno
out
or
int
ds
ljmp
mov
and
in
dec
test
mov
out
dec
push
mov
dec
pop
out
test
leave
daa
pop
dec
xchg
out
decb
lds
enter
fbstp
lea
adc
out
fstl
jnp
sub
out
and
out
aad
aaa
xchg
mov
and
jmp
dec
jbe
pushf
mov
mov
int3
enter
push
jmp
inc
mov
jne
loop
es
push
mov
xchg
test
dec
mov
pop
mov
inc
jns
test
aam
cmp
in
out
xchg
shrl
out
clc
inc
add
out
dec
mov
and
or
lret
and
mov
and
stos
mov
imul
jmp
sub
sub
push
cmpsl
push
sbb
shrb
adc
inc
push
adc
movsb
cld
insb
jnp
xchg
nop
out
or
mov
xchg
fs
out
mov
stos
out
mov
orl
out
out
repnz
pop
jl
push
jp
movsb
add
test
out
push
data16
inc
aas
xchg
int
lea
gs
inc
xchg
lds
outsb
adc
pop
sti
cmc
std
movsb
out
xor
pusha
cmc
and
ret
jns
xor
cmc
testl
pop
push
scas
xchg
out
clc
testl
test
sahf
dec
repz
pop
sub
push
jne
dec
push
fwait
ljmp
mov
rolb
out
and
jno
mov
in
jns
or
inc
data16
int
mov
fwait
mov
push
sub
push
imul
stos
cmp
pop
loop
scas
pop
neg
sahf
out
dec
cli
push
ss
loop
out
mov
mov
pop
jle
mov
mov
mov
xchg
cwtl
ljmp
push
frstor
xchg
inc
jecxz
repz
mov
test
cmp
sbb
dec
push
pop
push
jge
cltd
scas
imul
out
cmp
inc
or
lods
hlt
xor
aad
out
sub
push
ret
sbb
lock
scas
in
insb
subb
in
call
jne
add
int
ljmp
mov
xor
xor
daa
add
push
dec
iret
inc
aaa
mov
push
out
dec
or
and
loop
mov
out
adc
push
sub
fldlg2
xchg
lcall
mov
or
mov
js
mov
icebp
jnp
sahf
fidivs
push
rorl
cmp
ja
jg
jle
or
dec
jns
imul
repnz
out
insb
sahf
xchg
std
out
pop
inc
jne
leave
or
push
rolb
jmp
icebp
out
cmp
incb
test
lahf
mov
stc
xchg
je
lods
push
inc
rcl
scas
dec
out
outsl
movl
jecxz
std
cs
xchg
push
mov
imul
sub
cwtl
ljmp
and
jae
nop
xchg
xor
pop
loopne
jmp
das
push
ds
nop
out
sahf
adc
lahf
cli
jg
out
jns
pushl
jbe
ds
out
outsl
sbb
adc
scas
pop
clc
mov
xchg
lret
jne
sahf
and
adc
imul
lcall
mov
test
leave
cmp
xchg
pop
jbe
pop
fwait
stos
out
les
mov
insb
dec
out
sbb
mov
out
sarb
mov
add
aaa
repnz
and
push
mov
out
es
push
out
mov
outsb
mov
xchg
icebp
xor
sbb
mov
push
jg
es
sub
sti
out
call
cmp
out
cmp
aad
es
ja
testl
scas
inc
out
mov
push
xlat
pop
out
jl
fwait
and
lea
mov
enter
outsl
ret
out
pop
xchg
lcall
inc
into
jge
cs
pop
ds
inc
loopne
stc
fstps
mov
icebp
cmp
out
roll
fs
jg
popa
pop
mov
dec
repz
lods
cmp
call
ja
or
push
cwtl
insb
ljmp
xchg
mov
jl
pop
cld
scas
mov
mov
xchg
out
mov
jle
xor
mov
insb
insl
mov
out
inc
sub
out
addb
mov
loope
lock
mov
pop
loopne
xor
ljmp
iret
sti
lods
jp
test
cmp
outsb
in
stc
and
adc
mov
out
push
ud1
push
sub
cmpsb
les
aam
and
jp
push
add
adcl
ret
jne
mov
mov
cwtl
repnz
out
out
xor
inc
cs
cltd
xor
insl
in
lods
dec
aas
out
call
fdivrs
aam
in
es
jecxz
or
cmpsl
add
out
adc
sub
mov
out
repz
ds
jnp
add
jle
out
nop
fldt
and
int
cmp
aas
adc
jecxz
cmc
mov
data16
jge
or
sti
jns
sbb
cmp
xorb
or
mov
int
or
shrl
cmc
push
aas
aaa
aam
sbb
add
pop
popf
shll
inc
stos
icebp
out
ds
ret
out
in
out
or
xor
bound
call
pop
mov
dec
push
lock
stos
mov
out
mov
sbb
loope
xor
std
shlb
or
out
dec
jecxz
lahf
pushl
iret
test
dec
jmp
jle
scas
out
fldenv
aad
and
cmpsb
addl
mov
push
sub
sub
sbb
cmp
xchg
and
int
add
pop
loopne
sub
xor
sub
xor
lret
mov
mov
mov
inc
popa
pop
outsl
sbb
imul
sub
inc
sub
cld
imul
pop
cmpsb
jns
cli
fmul
out
cmpl
cmp
cld
xchg
cmp
lock
in
xchg
mov
lods
add
push
xor
popf
cli
insb
jg
push
out
mov
sub
sbb
out
pop
jge
repz
jp
out
adc
mov
out
je
popa
movsl
pop
mov
add
out
mov
mov
fwait
test
xchg
adc
and
mov
je
out
test
ret
or
adc
pop
mov
or
orl
cli
add
adc
jb
jmp
xor
test
sti
in
xor
push
sub
out
xchg
movsl
push
stos
xchg
adc
std
leave
fldcw
out
and
in
lea
orl
out
clc
int
cmc
in
shl
cmpsb
mov
or
xchg
mov
sbb
pop
pop
out
jl
mov
out
mov
scas
cli
test
jl
cld
fsub
mov
mov
std
fucomip
lea
mov
stos
sbb
pop
mov
push
mov
add
iret
jns
fimull
mov
jle
xchg
out
inc
cmp
sub
int
int3
pop
or
pop
cmpb
push
jmp
jg
dec
cmp
mov
mov
xchg
test
pop
lods
loop
cmpl
ljmp
inc
mov
xchg
lahf
test
lret
pop
out
xchg
out
movsl
xor
adcb
and
inc
pop
pop
fists
or
out
cmp
jnp
or
insb
adc
xchg
inc
push
movsl
mov
cmc
es
aam
mov
out
pop
in
loopne
sahf
ret
cltd
jne
bswap
and
cmpsb
pop
sbb
out
aad
out
sub
outsb
sbb
jne
push
push
js
add
lods
int3
jmp
push
les
movsb
stc
cwtl
add
xchg
andl
sbb
lods
push
pop
test
imul
outsb
dec
frstor
ret
xchg
or
mov
push
and
jne
rcrb
shl
push
iret
mov
adc
dec
sbb
pop
mov
and
les
outsb
xlat
and
arpl
dec
xchg
out
pop
es
push
rcr
out
sti
cmc
popf
adc
ljmp
es
add
call
fldcw
mov
pop
pop
mov
jns
xor
adc
out
pop
cmp
out
cmpsl
jp
mov
pop
mov
fsubl
aam
xor
in
insb
out
add
adc
jb
in
sub
sbb
sbbb
dec
dec
mov
push
fsubs
lea
out
mov
and
and
adc
pop
xchg
je
adc
pusha
into
test
movaps
cmpsb
jns
or
xchg
pop
inc
push
mov
orb
jecxz
sti
push
pop
int
std
out
xchg
testl
push
mov
aam
popa
jbe
and
nop
mov
cmc
jp
enter
mov
mov
pushf
loop
mov
ds
xor
jl
mov
add
adc
mov
mov
cmp
sahf
repnz
or
scas
sbb
dec
inc
mov
ljmp
inc
sti
pop
or
test
shrl
rcrb
jne
imul
add
lock
push
push
push
xchg
xchg
ljmp
mov
add
lock
fistl
aas
push
xchg
out
shll
imul
es
mov
ret
faddl
stc
test
sbb
cld
push
aam
ret
adc
push
out
ss
dec
je
test
and
sub
inc
out
out
pop
add
insb
and
lods
pushf
test
xor
dec
push
mov
jp
lcall
inc
pop
addr16
mov
lods
xchg
imul
out
mov
clc
lea
pop
ljmp
out
and
add
mov
add
and
mov
xchg
pop
jo
jb
mov
lock
adc
jmp
aam
xor
rcrb
mov
sub
lods
jmp
loopne
pop
inc
addl
out
sbb
test
jne
jae
pop
mov
mov
mov
inc
out
and
and
dec
out
ja
rcrl
and
or
pop
adc
adc
out
xor
xlat
jl
ret
fisttpl
pop
add
stos
hlt
imul
ljmp
xchg
mov
cmpsb
mov
int
mov
movsb
stos
test
mov
cmpsb
subl
pop
out
das
dec
fisubrl
sarl
dec
xchg
mov
pop
add
aam
xor
jo
cmova
les
sub
cli
inc
mov
outsl
shll
push
out
sub
out
jge
pushf
nop
fildl
out
rolb
push
out
pop
push
push
fwait
leave
push
mov
dec
dec
push
jmp
out
inc
adc
stos
and
cmp
imul
out
jnp
cmp
out
adc
bound
and
loopne
stos
sub
jnp
test
and
scas
nop
push
aaa
mov
ret
int
and
xorl
lods
push
out
movsb
test
inc
insl
dec
out
mov
stos
xchg
aam
push
jnp
mov
sbb
dec
pop
nop
rcrl
je
xor
or
bound
out
call
xlat
push
out
mov
mov
mov
jge
mov
cwtl
or
ret
cs
pop
dec
fidivl
out
scas
les
mov
lahf
sub
sbb
sub
movsb
push
cmpl
cmc
int3
mov
pushf
in
lcall
out
jle
enter
repnz
jbe
cmp
nop
push
cmp
or
mov
out
mov
mov
out
out
push
into
jae
ret
lret
push
out
dec
pop
jecxz
cli
jbe
xchg
xor
out
jl
int
xchg
popf
out
add
mov
push
add
out
aas
loopne
into
ret
out
daa
lds
dec
cmp
push
xor
fdivrs
out
or
int
mov
sbb
ret
jnp
mov
dec
out
pop
nop
cmp
aaa
jno
cs
adc
cmc
cmp
mov
adc
add
in
pop
sub
jle
sar
and
out
xor
mov
jp
in
std
loopne
daa
pop
jo
loop
and
and
xchg
aam
mov
xchg
shl
push
add
jnp
xchg
testb
fstps
and
mov
adc
ljmp
aam
shll
iret
inc
sub
cmp
jbe
ja
xchg
adc
into
mov
add
mov
xchg
es
out
inc
mov
fimuls
shl
icebp
jo
push
ret
inc
mov
adc
inc
stos
add
mov
aaa
in
ret
dec
push
sub
aas
push
call
cli
push
xor
arpl
shrb
jmp
call
bound
adc
shll
xor
mov
dec
ret
sbb
push
shll
cmp
cli
out
subb
cmp
lods
fldenv
nop
out
dec
testl
rcl
jp
fwait
cmp
out
adc
or
dec
mov
aad
clc
and
fwait
mov
aam
adc
cmp
imul
out
movsb
arpl
cmpsl
mov
lods
sub
lcall
or
pop
arpl
mov
inc
dec
fs
push
cmp
fidivs
jmp
sahf
lock
or
cli
add
outsb
cmpsb
xor
in
jno
and
dec
jo
sbb
arpl
out
mov
mov
cltd
pop
cli
xor
daa
push
pushw
jnp
pop
sbb
insl
mov
fistps
fisubrl
cmp
pop
das
ret
and
ljmp
int
push
mov
mov
jae
ret
mov
out
mov
pushfw
repnz
outsl
mov
add
mov
cltd
xchg
out
jb
mov
ds
imul
jg
push
pop
test
jno
imul
sahf
mov
lret
loop
out
iret
add
cmp
cmp
jne
enter
in
rcll
in
mov
out
sahf
out
arpl
or
pop
adc
xor
sbb
jne
push
mov
fs
xchg
out
xchg
incb
out
aam
xchg
mov
sbb
out
jg
xorb
out
adc
out
mov
sbb
jmp
inc
out
addl
mov
out
xor
cmp
or
sahf
out
ret
jnp
out
mov
rcrl
shl
imul
and
pop
adc
sub
int
push
cmp
out
pop
mov
rorb
mov
xchg
jmp
adc
push
lahf
xor
jns
imul
arpl
in
xchg
aaa
xor
aas
imul
lahf
jecxz
pop
insl
mov
dec
out
mov
hlt
push
jg
cs
out
mov
out
or
lods
in
adc
xor
popa
inc
outsl
dec
out
or
cmc
mov
out
mov
adc
mov
out
sub
pusha
imul
std
out
mov
add
dec
jae
push
jmp
andl
cmp
out
xlat
cs
out
cmp
ret
jecxz
out
inc
pop
icebp
ds
mov
test
sbb
out
pop
testl
xor
jae
cmp
xor
mov
fistpll
iret
jmp
roll
rcl
cmp
xchg
push
daa
popa
scas
push
out
hlt
jbe
sbb
mov
leave
pop
rol
or
into
jle
xlat
loopne
push
mov
xor
ljmp
mov
inc
cli
jp
adcl
push
out
leave
pop
imul
out
jmp
push
jnp
out
pop
pushf
mov
mov
orl
outsl
and
inc
xchg
pop
cmp
and
mov
repnz
test
add
and
out
adc
outsb
daa
in
sbb
out
fwait
cwtl
xchg
aas
jmp
out
dec
cmp
mov
sub
lods
push
out
add
sahf
inc
std
inc
cltd
and
jle
cmp
sarb
and
out
sub
pushw
out
in
cmpsb
mov
jnp
dec
aas
dec
popa
inc
call
ljmp
aam
cld
int3
icebp
jb
sarb
imul
push
out
data16
add
xacquire
pusha
add
rclb
sub
cmpsl
out
xchg
push
loop
inc
notl
xchg
sub
mov
lea
cmp
mov
out
pop
dec
or
imul
jne
rcll
mov
fidivrs
out
jp
xchg
adc
sub
xchg
jns
jbe
pop
xchg
adc
xchg
das
jg
ljmp
mov
add
cs
jns
xchg
out
mov
mov
pop
lcall
out
mov
push
ret
mov
pusha
out
cmc
mov
add
out
outsb
rcrb
pop
repnz
sub
and
nop
call
ss
cltd
lret
mov
xchg
jg
in
out
imul
dec
out
loope
xor
add
mov
mov
cwtl
pop
pop
out
jmp
mov
clc
inc
call
sbb
xchg
inc
jae
push
or
fcompl
shll
push
xchg
add
mov
out
outsl
and
stos
cmp
out
mov
pop
in
sub
ljmp
mov
out
jnp
jb
daa
add
fwait
aaa
sbb
ficompl
mov
dec
xchg
mov
outsl
inc
add
movsl
jne
sbb
out
out
dec
dec
pop
or
push
out
xchg
or
xchg
hlt
dec
ljmp
out
adc
xor
addl
xor
xchg
call
es
xchg
xor
push
or
repz
fwait
cmpsb
mov
xor
insb
clc
mov
pop
out
push
mov
bound
jge
jle
lock
shll
out
adc
shrb
mov
inc
mov
push
push
mov
ds
mov
sarl
test
mov
int3
jnp
lret
push
or
sub
les
sub
hlt
ljmp
sbb
stos
xor
sub
popa
jmpw
cmp
stc
je
rcrb
sub
ljmp
xor
pop
loope
xor
push
jb
packssdw
mov
ja
and
lret
and
loopne
cmp
es
shll
or
xor
xchg
mov
pop
jle
sbbb
mov
movsb
fimuls
push
cmp
clc
loope
dec
push
sub
xor
mov
cwtl
xchg
cwtl
shl
loope
addr16
ror
out
mov
xchg
pusha
cld
sbb
sahf
inc
rclb
aad
sarl
jecxz
out
xchg
pusha
inc
lret
int
out
push
xchg
inc
vmwrite
sbb
sahf
mov
jne
mov
mov
out
arpl
mov
inc
sahf
out
test
int
aad
adc
js
ljmp
lret
mov
pushf
fdivrp
mov
or
fisttpl
jle
ds
loop
inc
push
add
cmp
loopne
inc
out
xor
xor
test
call
or
stc
fwait
addr16
jp
icebp
lahf
sub
mov
adc
popf
out
fisubrs
mov
sahf
xchg
xchg
std
jl
cltd
ja
out
fcomi
mov
pop
sbb
dec
out
xor
out
sub
int3
pop
pop
out
sub
dec
addr16
mov
aad
ss
pop
or
stos
dec
mov
andl
sti
xor
and
in
pop
xchg
mov
lret
pop
fwait
mov
out
cmc
loop
imul
inc
jg
add
inc
cmc
or
jge
pop
or
fwait
add
aam
test
xchg
cli
inc
fisubl
mov
adcl
inc
pop
mov
mov
nop
push
adc
push
jl
das
ret
mov
out
cli
jo
mov
pushf
outsl
adc
jne
arpl
push
cld
jae
mov
pop
mov
xlat
mov
mov
stos
inc
das
lds
inc
mul
mov
dec
fistpl
clc
lahf
out
cs
jno
jae
ja
pop
mov
push
mov
xlat
and
iret
imul
out
pop
adc
xchg
out
or
clc
jbe
or
cs
in
out
aam
mov
xor
lods
add
stos
fwait
sub
out
mov
out
scas
lds
mov
imul
or
add
xchg
push
fisttps
xor
adc
out
jo
out
pop
lock
add
int
push
je
rclb
dec
shll
xor
mov
and
mov
mov
push
rcl
jp
mov
mov
sahf
mov
test
mov
push
mov
out
add
mov
iret
mov
out
xlat
sarl
out
mov
lods
push
cwtl
mov
out
cld
push
or
sub
adc
cmp
or
in
sbb
jg
out
pusha
rcll
addl
sbb
mov
sbb
mov
nop
lock
ret
add
pop
fcmovu
out
jns
push
adc
popa
out
sbb
dec
das
add
lock
repz
mov
add
pop
sub
repnz
out
lock
push
and
out
push
adc
scas
mov
jno
out
push
cmc
int
jnp
xlat
push
fstl
repz
insb
mov
data16
out
dec
push
push
out
aaa
idivl
out
scas
xchg
leave
pop
jbe
dec
cwtl
push
test
jp
cltd
clc
mov
push
mov
decb
je
sub
ds
mov
cmpsl
out
pop
jp
or
jmp
cmp
loop
data16
mov
mov
inc
jl
and
xchg
add
out
in
rclb
xchg
rolb
repz
mov
bound
sarl
inc
fcoml
nop
test
lret
cmc
inc
xor
jbe
icebp
or
xorl
enter
and
or
push
pop
dec
out
and
push
push
sbb
dec
fdivp
rcll
jmp
add
mov
dec
push
call
test
and
test
repnz
std
and
sub
cmc
pop
sar
data16
sarl
sbb
jnp
dec
cmp
push
std
pop
lock
fildll
inc
clc
scas
cwtl
or
out
repz
add
jns
out
pop
les
lock
add
mov
loopne
xor
mov
mov
xorl
inc
adc
lret
out
rcrl
lock
pusha
cmp
mov
insl
lods
stos
outsb
and
test
jnp
push
xchg
add
jle
insb
jp
call
fbstp
xchg
lea
pop
xchg
imul
cld
mov
jp
aas
dec
decl
seto
sbb
lods
lock
cmpsl
inc
out
bound
xchg
lret
stos
mov
push
cmp
out
adc
lods
out
pop
das
popa
pop
outsb
imul
pop
lock
push
push
out
js
jp
and
and
sbb
cltd
pop
jo
repnz
push
out
enter
flds
lods
lcall
lahf
and
lock
in
adc
dec
dec
into
mov
nop
aas
xchg
decl
and
out
pop
push
ja
add
into
sbb
pop
or
dec
mov
adc
data16
out
pushl
push
out
add
scas
fcmovu
cmp
lret
cmp
mov
repz
add
in
out
sarl
lret
icebp
out
push
inc
lods
push
cmpsl
adc
jg
lea
xor
inc
cwtl
xor
mov
xchg
int
jo
stos
fsub
inc
sbb
sub
fs
xor
cmp
in
jmp
cmp
push
ja
popf
imul
out
iret
sbb
aaa
and
sub
jmp
push
jns
test
mov
mov
jae
pop
out
lods
das
sub
xorb
std
leave
inc
sub
push
cs
pop
mov
cmp
out
lret
jbe
push
pop
mov
imul
jb
and
loop
sub
or
mov
xchg
in
inc
loope
sub
scas
es
dec
out
sbb
pop
push
bound
arpl
int3
sub
xchg
cli
in
mov
nop
out
sbb
push
insb
mov
lds
xchg
mov
add
pop
fldcw
out
lcall
out
out
push
sbbl
dec
out
movsl
adc
or
mov
cwtl
movl
jle
fmuls
dec
stos
mov
fidivl
out
outsl
je
out
jnp
and
enter
aam
push
inc
hlt
es
jne
in
pop
sbb
mov
cmpb
xchg
mov
jmp
clc
ja
mov
jae
mov
jnp
add
out
iret
aas
enter
inc
cli
out
cmp
adc
xchg
pop
or
aas
mov
xchg
lahf
cltd
pop
jmp
mov
and
dec
sbb
cli
bound
adc
out
lahf
es
fs
out
in
push
inc
nop
mov
inc
xchg
pop
sub
push
or
jg
push
or
pop
xor
out
mov
lods
rorl
movsl
fimuls
or
js
int
add
shrb
jne
mov
sbb
inc
outsb
out
xchg
movsb
sub
fwait
and
loop
or
adc
add
xchg
cli
jae
popf
push
pop
repz
push
sub
add
test
mov
shl
js
mov
and
jecxz
ds
pop
out
or
mov
ret
inc
cwtl
pop
imul
sbb
out
cmp
mov
push
out
dec
fadds
shl
fiadds
xor
xlat
movsb
out
push
jbe
mov
imul
cmp
insb
ja
clc
lahf
mov
pop
mov
cs
jno
dec
sub
loop
sbb
push
dec
jbe
mov
cmp
loop
mov
out
add
lods
cmp
js
sti
or
and
loopne
and
or
mov
out
sar
xchg
sbb
and
add
mov
bnd
cmpsl
out
cli
sti
movsb
mov
lahf
jmp
add
cmp
lods
xor
out
pop
xor
inc
adc
ds
je
cwtl
mov
fldl
aas
push
lock
aam
bnd
pop
xchg
mov
out
stos
sub
mov
ljmp
sub
cltd
bound
out
fistl
inc
mov
aaa
mov
imul
out
in
popa
sbb
daa
pop
out
push
add
mov
repz
fldcw
dec
push
daa
jmp
in
and
mov
fsub
jp
cwtl
lret
mov
and
mov
out
std
in
hlt
out
ljmp
stos
add
add
mov
push
js
mov
lods
cmp
inc
ror
pop
adc
nop
shl
js
sbb
cmp
out
out
pop
add
inc
loopne
jp
cmpsb
gs
and
or
sbbl
arpl
out
add
sub
adc
mov
add
je
and
or
out
jno
push
or
in
es
sti
in
mov
cmp
cmpb
out
xchg
in
jnp
stc
icebp
nop
out
fidivs
out
cmp
and
stos
mov
xchg
out
xchg
mov
and
and
out
pop
je
loop
jg
ret
dec
incb
rcrl
xchg
repz
and
cli
fidivrl
xor
add
jecxz
out
cmp
add
movsl
mov
add
pop
jae
dec
jle
and
pop
jns
cmp
pop
jnp
xor
jg
movsl
add
jmp
jno
jo
stos
stc
add
jge
cmp
dec
movb
jecxz
clc
sub
shlb
jo
inc
lret
jmp
mov
icebp
xor
loop
lock
out
fdivrp
jg
dec
adc
xor
dec
push
sbb
jle
popa
cmp
jp
sbb
out
adc
movsb
and
lret
adc
fisubrl
out
scas
xor
inc
test
cmp
out
add
aad
data16
sti
hlt
insb
and
mov
push
push
aad
js
cmp
inc
rclb
sub
shl
insl
movsb
xchg
jge
std
int3
mov
sbb
jg
fsubrl
or
cld
stos
mov
stc
aas
push
xchg
in
add
push
xchg
push
std
push
clc
xchg
mov
inc
lcall
int3
shlb
ret
cltd
cli
js
pop
mov
loopne
xchg
pop
push
jl
sub
mov
out
push
cli
fwait
lcall
lea
dec
or
out
ss
mov
out
pop
mov
xor
or
and
fstpl
movsl
jbe
andl
cmpsl
and
cld
out
xchg
sub
aaa
pop
loopne
cltd
sub
pop
jae
inc
out
lret
lret
out
or
repz
jns
xchg
and
jne
push
cs
imul
fstps
mov
insb
jno
sbb
insb
sbb
hlt
out
frstor
negl
leave
outsl
xor
pop
push
out
dec
push
jns
lods
sub
out
int
xor
mov
dec
out
icebp
push
insl
xchg
clc
mov
mov
or
pop
xchg
pop
and
push
out
mov
jno
adc
dec
loope
xadd
test
mov
pop
dec
jg
out
adc
sub
xor
jbe
out
sahf
dec
mov
out
sbb
dec
cmp
dec
popa
or
jne
or
out
mov
out
fwait
mov
leave
cmpsb
pop
lret
add
ja
xor
inc
jecxz
sbb
clc
cmp
mov
jbe
push
scas
jecxz
mov
out
fimull
sti
iret
or
push
mov
test
mov
fnstsw
arpl
fistpl
jne
and
out
xor
test
mov
xor
and
shlb
add
xchg
out
repz
icebp
ret
loop
std
xlat
sbb
jne
pop
sub
out
into
sub
xchg
dec
repz
dec
aam
dec
mov
push
enter
jne
sar
jg
adc
cmp
arpl
cltd
jl
add
push
or
pop
xchg
out
cli
popl
pop
sti
sub
cwtl
pop
jge
arpl
xor
test
repz
fucomp
inc
ss
xor
out
or
rorb
sub
pop
lods
push
ds
jbe
push
nop
addb
mov
or
inc
adc
and
or
es
aaa
push
adc
cwtl
cmp
ljmp
or
jge
xchg
mov
clc
mov
ss
push
mov
xchg
xor
adc
mov
fnstcw
mov
cld
out
and
jmp
clc
stos
cs
cli
pop
inc
cmpsb
outsl
out
imul
cmp
cli
pop
cld
out
cmpsb
nop
add
mov
out
cmpb
adc
push
pop
cmc
mov
sub
lods
mov
xchg
mov
ss
xchg
fs
or
ljmp
hlt
movsb
inc
add
test
ja
xchg
les
out
xor
and
push
leave
out
incb
fsubrl
icebp
shr
or
popa
sub
out
jnp
enter
xlat
or
out
in
dec
push
add
sbb
jmp
push
out
mov
jbe
jne
sub
insl
loopne
repz
add
cmp
clc
and
shr
xor
jno
rcr
loope
cmpsl
test
gs
xorb
out
out
pop
inc
mov
adc
cltd
jg
cmpsl
int
clc
imul
jl
add
out
mov
out
mov
adc
mov
sub
std
xor
in
lock
sbb
subb
mov
xchg
lock
lahf
cli
aam
je
cmp
jno
xor
pop
daa
enter
jg
sbb
push
aad
gs
fistl
andnps
dec
pop
out
test
sub
pop
push
aaa
jge
mov
repz
pop
push
add
pop
shl
loop
dec
dec
xlat
cld
push
shl
jo
into
adc
pop
leave
test
cmp
sbb
es
sbb
add
jmp
pushf
mov
shlb
mov
leave
add
clc
mov
cwtl
ds
nop
shrb
repz
lods
addr16
out
repnz
mov
out
ds
sbb
jmp
out
fcompl
and
das
out
ret
out
mov
sti
push
scas
inc
je
xchg
scas
stos
test
mov
out
push
add
les
or
jno
repz
out
inc
pop
outsl
ds
pusha
leave
test
roll
pop
scas
inc
pusha
fistpl
test
push
leave
mov
aas
pop
push
sarl
insl
scas
imul
xor
cmc
xor
das
cmp
cmp
sbb
test
push
jno
cmc
mov
dec
jg
sbb
mov
jecxz
add
int
repz
sub
lods
jae
cmc
or
test
pop
mov
sub
roll
jne
sub
int
inc
into
or
enter
mov
mov
xchg
out
test
xchg
stos
test
lret
mov
out
push
xchg
fbld
aad
adc
movsl
hlt
adc
cld
out
sbbl
jnp,pt
xchg
inc
out
lods
mov
jae
dec
adc
out
popf
daa
insb
clc
dec
out
cmp
notl
das
std
xchg
out
cmpl
xor
ret
push
cli
pop
sub
mov
lret
and
in
push
shrb
push
hlt
add
cmp
adc
push
addr16
daa
fldl
or
fldcw
out
cwtl
mov
xchg
or
call
pop
out
xlat
leave
popf
pop
in
cmpsb
shl
fldt
shl
mov
mov
sbb
dec
push
jne
cmpsl
sahf
xchg
in
ss
sbb
in
sub
and
mov
push
push
jp
sbb
lcall
xchg
out
test
lods
movsb
pop
out
movq
repz
sub
into
and
out
jmp
fsubs
ljmp
sub
xchg
hlt
xor
xor
pusha
pushw
mov
push
imul
out
insl
enter
jl
xchg
dec
or
aam
imul
call
test
adc
and
push
mov
jno
xchg
imul
sbb
loop
cld
jno
dec
add
call
cli
add
scas
leave
test
cltd
xchg
mov
sbbb
sbb
xor
ret
out
insb
jle
xchg
arpl
add
cmp
or
jbe
jo
out
lcall
xchg
lea
insl
insb
scas
out
bound
xor
sbb
adc
mov
add
outsl
jmp
shl
mov
fcompl
rorb
inc
cmp
and
dec
ljmp
add
jns
cmp
push
nop
rolb
xor
ja
out
fs
pop
rcl
cmp
out
sub
mov
stos
inc
rolb
in
xlat
adc
pop
dec
inc
sub
push
and
fldz
bsf
stc
jbe
fcoml
mov
xchg
sub
call
pop
adc
es
out
cmpsb
fsubrl
fs
ds
cmp
daa
out
sub
sbb
imul
jp
sbb
ds
ss
out
inc
shlb
mov
inc
out
add
lock
das
imul
lds
lret
cmp
mov
push
jle
sahf
lcall
test
lret
inc
dec
cmp
mov
add
inc
lcall
nop
mov
inc
andl
inc
sbbl
mov
mov
mov
bound
out
adc
dec
jno
mov
lds
dec
cltd
adc
and
imul
daa
sub
aam
jg
or
lods
test
nop
faddl
push
ljmp
and
je
fbld
xchg
push
cmpsl
iret
loope
xchg
cmc
or
dec
out
push
jnp
stos
mov
cmpsl
std
add
in
lret
loopne
dec
sti
test
jne
daa
inc
in
or
sbb
pop
std
cmp
imulb
sub
sbb
sub
xchg
add
enter
xchg
mov
test
add
lahf
sti
ja
test
out
xor
out
in
dec
lcall
jne
xor
dec
xchg
ljmp
das
addr16
fisttpl
out
ljmp
out
ss
jnp
mov
js
cmpsb
lret
pop
jns
dec
shrl
out
movsb
cmc
push
jbe
dec
dec
out
jo
negl
addr16
sbb
inc
loop
mov
inc
mov
lock
aam
xor
push
pop
cmp
cmp
out
add
out
mov
mov
cltd
mov
xchg
and
or
cmp
pop
xchg
ret
add
test
out
push
jns
insb
ss
daa
sahf
dec
jle
cwtl
add
aas
jl
dec
or
push
push
frstor
out
jns
out
jnp
enter
out
add
dec
into
inc
fisttps
mov
fsubl
inc
push
loope
mov
outsb
sbb
inc
add
ds
xchg
out
xchg
repnz
out
pop
lock
out
aam
jmp
cltd
and
fstps
lods
leave
fcmovnb
popf
sbb
and
das
test
and
mov
pop
test
or
jb
adc
daa
shlb
jo
jnp
xchg
add
loop
mov
inc
dec
out
mov
add
inc
mov
and
cmp
xor
std
lret
sbb
adc
repnz
mov
or
fildll
out
movsl
imul
aad
daa
jl
push
sahf
jge
jecxz
out
and
ljmp
stos
dec
dec
js
lock
adc
push
sub
dec
lcall
scas
mov
add
call
shl
subb
cmc
adc
inc
nop
mov
add
cmp
add
insb
out
icebp
out
lcall
mov
sbb
add
out
les
icebp
push
dec
out
test
insb
lcall
xor
jg
fistps
and
sbb
hlt
leave
dec
out
pop
and
sbb
mov
mov
cmpsl
xchg
mov
inc
out
fwait
sbb
pop
into
adc
xor
push
test
inc
cmpl
cmp
dec
out
mov
inc
out
push
cmp
pop
sbb
shll
call
jge
ja
loop
aaa
sub
stos
out
push
in
loop
xlat
clc
out
rcll
insb
mov
out
inc
or
sbb
cwtl
ret
out
mov
sahf
movl
outsl
sub
out
cli
mov
out
imul
cwtl
ds
jns
aam
std
out
or
inc
mov
data16
shr
movsl
popl
lcall
scas
jns
cmp
or
cwtl
out
lods
add
mov
adcb
push
xchg
push
jp
mov
in
dec
sub
out
mov
lcall
lods
int3
or
jne
stc
sbb
push
mov
loop
test
aas
mov
fsubs
dec
cld
rcrb
lahf
jl
cmc
add
lock
pop
ret
repz
lock
out
in
mov
into
shll
loop
xchg
jbe
icebp
out
jl
jg
popa
movsb
xchg
cmpsb
and
jne
push
test
mov
pop
sbb
adc
mov
xor
mov
out
addb
xor
gs
jge
in
sbb
shrl
mov
adc
scas
out
dec
clc
jmp
xor
mov
add
or
add
pop
adc
lahf
dec
mov
data16
xchg
cmc
sub
pop
jnp
loop
in
shlb
int3
mov
adcb
push
out
test
lock
je
sub
out
push
jp
sbb
popa
out
xor
push
or
fidivl
rcll
hlt
jmp
addl
stos
test
out
sbb
push
sbb
test
stos
sarb
sub
call
sti
dec
cmp
sbb
out
jns
repz
jg
jo
xchg
iret
mov
outsl
lret
mov
popa
lods
push
out
jno
push
mov
nop
push
shrl
stos
rcrl
out
mov
lahf
mov
mov
mov
xorb
popf
jno
jg
out
pop
fimuls
jle
cwtl
js
fcomi
out
sti
loope
mov
mov
pshufw
jl
out
sub
mov
cmp
out
add
xchg
pushf
mov
jge
mov
addb
sbb
in
or
hlt
out
das
dec
stc
add
shll
je
xor
xchg
bound
fsubp
mov
cmc
test
mov
push
adc
out
adc
lock
and
repz
inc
jno
out
iret
aad
xchg
out
scas
lret
mov
clc
add
loop
fbld
jp
iret
ret
mov
mov
pop
mov
mov
or
cmpsl
and
mov
mov
push
icebp
out
mov
sub
fsubr
sub
lret
repz
lock
out
insb
and
add
arpl
mov
mov
out
jnp
add
out
incb
imul
ficompl
cli
out
dec
fldenv
outsb
imul
inc
cmp
fistpl
cmp
cmp
gs
retw
out
pop
push
inc
mov
jb
pusha
call
and
xor
icebp
lahf
in
xor
cmc
mov
sbb
fs
mov
add
sbb
decb
cmp
push
push
xchg
loop
push
mov
cmovg
lret
or
push
in
lcall
fadds
add
repz
cmp
cltd
push
pop
rorl
sub
outsl
inc
dec
adc
mov
xor
in
sub
jmp
jg
out
mov
lret
int3
push
stc
push
out
stos
sbb
rcrb
jae
lahf
movsb
imul
pop
out
jg
das
xor
push
jo
out
xchg
dec
dec
jno
test
mov
pop
mov
inc
or
mov
rorb
mov
out
int
std
pop
pop
rcl
sub
inc
cmp
or
scas
push
bswap
in
jo
lcall
xchg
movsl
push
addr16
pop
fdivr
and
in
jae
ret
icebp
lods
or
loop
fsub
and
cmpsb
ficomps
jno
xor
fwait
or
ljmp
in
stos
test
test
xlat
or
sub
cmc
xchg
mov
jns
add
push
jp
cmp
sub
xchg
out
dec
stos
fsts
mov
xor
insb
inc
pop
cmpsl
mov
mov
shll
loope
xchg
das
aad
inc
dec
lods
mov
adc
sbb
out
mov
jo
dec
outsl
push
and
dec
push
ja
xor
add
mov
sub
je
mov
sbb
popf
inc
fbld
inc
sub
mov
inc
jae
es
push
dec
mov
aam
icebp
out
loope
xchg
adc
inc
addr16
outsl
mov
pop
add
out
movsl
out
test
sarl
es
jne
add
addr16
rcl
inc
mov
add
push
mov
dec
jne
xchg
sbb
in
les
incb
jnp
jmp
lret
xchg
pushf
js
lcall
out
or
into
jecxz
pop
shl
or
sub
push
cmp
push
ss
rclb
cmp
loop
pop
inc
inc
and
adc
push
inc
out
lcall
out
std
jo
repnz
jmp
inc
mov
mov
ffreep
xor
imul
jp
js
xor
cmpsb
push
shl
ljmp
adc
ss
loopne
cli
test
or
sarb
out
xchg
mov
add
push
and
sarb
adc
dec
ljmp
mov
push
fadds
out
outsb
cmp
out
sbb
sub
adc
pushf
stos
mov
gs
sub
out
scas
push
aas
jae
ja
out
add
inc
mov
xchg
cmpsl
jne
movsb
insb
lock
stos
xlat
push
out
in
rclb
ja
shl
pop
orb
add
mov
ret
mov
lods
adc
shl
cwtl
add
mov
xor
xchg
and
xlat
inc
fidivrs
aas
sahf
push
adc
mov
pop
inc
iret
out
fimuls
das
stos
lahf
out
or
popf
loop
sub
inc
adc
push
jne
pop
test
or
sub
into
mov
mov
or
inc
fldt
rorb
out
adcb
mov
or
clc
sub
push
xchg
jge
mov
mov
or
ja
add
xor
adc
outsl
insl
imul
mov
insl
call
lret
dec
shll
stc
pop
in
out
aas
outsb
mov
in
imul
mov
sub
mov
mov
mov
test
popf
jecxz
mov
xchg
mov
ds
loop
add
divl
or
stos
push
cltd
out
orl
rolb
nop
lods
dec
xchg
pop
ret
int
fcoml
not
ds
add
out
cmp
mov
andl
inc
xor
int
out
sbb
jne
jg
sbb
add
mov
jmp
xchg
outsb
fsts
xor
lods
push
imul
out
jb
jecxz
inc
add
out
mov
sbb
xor
mov
sbb
jp
jo
push
sti
adc
out
lods
mov
mov
sbb
in
out
dec
arpl
test
jne
mov
add
movsb
dec
outsl
scas
int
test
enter
mov
out
pushf
movsb
syscall
stc
or
out
frstor
adc
fwait
pop
mov
call
repz
push
add
adc
cwtl
jle
test
add
mov
push
out
js
push
in
push
add
xchg
sub
jno
in
in
imul
sbb
add
jne
popa
sbb
cld
jmp
xor
sahf
inc
sahf
push
out
sbb
jb
out
inc
sub
adc
push
out
imul
out
jae
push
xor
jecxz
pusha
adc
cmp
in
imul
xlat
add
cld
mov
outsl
popa
js
pop
jbe
xchg
pushf
insb
cmpl
add
cmp
push
es
mov
lods
mov
jns
mov
adc
inc
call
cmp
jns
cltd
out
fnstenv
sub
pop
adc
cs
sbb
mov
dec
lock
aas
aaa
out
repz
std
aam
out
inc
mov
fsub
out
das
fsubp
subb
cmpsl
out
out
jnp
xchg
stos
movl
arpl
out
out
daa
in
add
jne
jno
mov
loope
lock
sbb
adc
lret
data16
cwtl
xchg
stos
out
insb
jp
push
test
popa
jmp
jecxz
cmp
add
ret
lcall
mov
repz
sahf
test
mov
mov
cwtl
xchg
jae
fdivrs
or
stc
sub
pop
dec
lea
scas
test
pop
pop
test
inc
leave
out
xor
mov
shr
mov
aad
inc
enter
sub
jo
stc
scas
push
clc
sbb
ljmp
out
push
shl
out
inc
push
out
ss
mov
out
aas
mov
mov
mov
mov
stos
or
jo
add
mul
addb
push
xor
dec
xlat
pop
jno
and
inc
jne
outsb
mov
adc
fs
shl
dec
mov
repz
adc
add
lea
mov
leave
fdivrp
sub
cwtl
pop
xchg
sahf
cmp
jo
dec
jne
out
in
push
das
adc
sbb
pop
inc
sbb
ljmp
cmp
mov
sub
out
mov
mov
mov
fwait
idivb
or
stos
mov
in
out
dec
lret
mov
out
sbb
lds
adc
mov
jno
repnz
test
jns
cmc
sbb
cmp
jne
ret
adc
inc
out
aad
cmp
cltd
xchg
out
icebp
mov
sbb
push
xor
mov
adc
test
push
pop
sub
repnz
mov
push
push
stc
aas
icebp
scas
mov
push
scas
scas
out
mov
sbb
out
aas
lret
push
add
add
int3
hlt
popa
pop
mov
pop
es
pop
adc
fs
mov
mov
sarl
pop
pusha
out
scas
in
xchg
mov
push
shlb
jl
pusha
pop
mov
jnp
imul
stos
out
insl
scas
popa
sub
out
addl
mov
lahf
int3
subl
rolb
jg
ds
cs
push
sub
imul
lods
sub
loope
jae
js
push
sub
xchg
aam
es
out
sbb
inc
and
lock
xchg
ljmp
popa
fildl
das
out
ss
xor
ret
addb
inc
popf
dec
mov
mov
fldl
hlt
ljmp
movsb
js
jecxz
and
mov
dec
jae
rcrb
inc
jg
mov
shl
mov
push
ds
or
out
daa
mov
xchg
loopne
jne
loop
sbb
sahf
ss
jae
jg
push
aaa
les
mov
jp
mov
jne
rclb
mov
sbb
fstl
inc
push
imul
xor
lea
je
adcl
mov
push
sub
xor
mov
lea
inc
stc
jne
lret
pop
push
sbb
and
outsl
out
dec
adc
lret
jg
mov
cwtl
scas
lea
push
fadds
repz
test
dec
push
mull
sbb
or
add
in
pop
push
mul
xchg
inc
or
sahf
insl
mov
and
and
out
xor
imul
push
out
push
std
adc
and
sub
pop
sbb
in
aad
jg
xor
movsb
out
push
pop
call
jns
inc
xor
sahf
cmc
out
shlb
clc
mov
xchg
out
mov
movsb
pop
aaa
out
sub
pop
and
leave
out
push
aad
lods
or
sub
dec
insb
mov
filds
pushf
cmc
ljmp
es
addr16
xchg
sub
mov
fsubp
rol
outsl
movl
std
cmp
sbb
or
mov
mov
out
sbb
enter
add
movsl
sub
xchg
add
dec
sti
jns
int3
adcl
jg
xor
mov
sub
rcll
sti
out
fwait
lea
imul
and
and
shlb
pop
or
cmp
jbe
in
andb
je
aas
stc
pop
cwtl
inc
cmp
outsl
test
cli
mov
mov
lcall
jmp
fstpt
pushf
xchg
dec
jne
lea
ret
loop
cmp
inc
outsl
and
cmp
icebp
out
cltd
mov
sbb
cmp
adc
ljmp
push
push
sarl
popf
aas
mov
lock
arpl
out
mov
lods
or
clc
add
test
and
or
inc
test
ret
sub
sbb
jns
jnp
shrl
out
fwait
add
mov
cmp
jo
sbb
jne
jge
sbbl
mov
in
repz
xchg
mov
out
inc
push
cmp
xchg
jecxz
xor
pop
jb
xor
jbe
rorl
out
shlb
iret
out
popa
les
enter
out
sti
aad
movsb
sbb
or
out
popl
addr16
out
sub
push
mov
lock
out
sub
pushf
xor
out
addr16
cmp
add
mov
addb
icebp
mov
scas
xor
std
lods
inc
sub
lret
ds
inc
cli
xor
jmp
jno
fadd
fnstenv
jae
out
in
push
dec
cmpsl
jne
insl
lods
icebp
aam
stos
sbb
out
test
push
dec
jb
cli
add
mov
xor
cltd
outsb
sub
aad
and
out
das
dec
push
test
dec
mov
jecxz
cmp
lret
sti
sbb
aas
in
sub
stc
inc
add
sub
fcomp
mov
jg
js
jmp
hlt
cmp
jne
sbb
rcrl
or
inc
outsl
push
push
mov
sti
outsl
push
sti
clc
sbb
inc
mov
ljmp
rcr
pop
int3
xchg
out
xor
dec
test
fdivr
lds
je
stos
inc
dec
lret
repz
decb
out
imul
out
xor
or
pushf
push
pop
ret
sahf
cmp
or
test
push
lret
loop
hlt
mov
push
pop
out
push
dec
mov
ret
out
pop
testl
call
push
push
stc
pop
pop
out
push
xchg
sub
jecxz
mov
and
mov
jp
fstpt
test
cmc
jge
cmpsb
push
sbb
mov
test
sbb
repnz
out
subb
mov
xor
mov
mov
stos
cli
or
pop
pop
jno
jge
in
adc
mov
mov
mov
adc
cmp
fcompl
cwtl
sbb
ret
imul
ret
pop
out
ret
pop
inc
jno
adc
add
lahf
shll
or
push
mov
mov
cli
inc
rcll
jmp
out
pop
ret
popf
inc
push
cmpsl
adc
out
loopne
dec
adc
pop
fnstsw
sbbb
fwait
cmp
ret
movsb
mov
ficoms
jl
fs
push
xchg
or
pop
sahf
out
in
push
dec
mov
sub
into
ss
jmp
cld
fwait
lahf
loope
dec
jbe
add
hlt
lret
into
movsl
es
sarb
in
jmp
cwtl
mov
jae
icebp
push
sub
cmp
add
mov
dec
test
loope
out
jp
push
push
int3
in
out
aaa
dec
or
xor
xorb
movsl
or
cli
adc
call
es
popf
pop
and
pop
mov
dec
test
in
cmpsl
out
dec
lret
jae
into
mov
loope
adc
hlt
mov
out
testl
push
xor
inc
mov
mov
mov
jg
cmp
sbb
inc
out
add
mov
outsb
mov
jmp
shl
ret
popa
scas
insl
cltd
out
add
inc
mov
ret
pop
sbb
aam
cmp
gs
in
adc
pop
and
jnp
lret
jle
inc
mov
add
fs
ret
outsb
xchg
mov
inc
scas
hlt
xchg
cmp
out
add
mov
sbb
rorl
into
cmpsb
mov
notl
sbb
imul
subl
adc
and
mov
popa
push
pop
jne
test
pop
sub
inc
out
mov
nop
jecxz
mov
fwait
sub
std
mov
shlb
out
push
sub
and
push
xor
xchg
mov
stc
in
mov
inc
push
push
movsb
mov
or
repnz
pop
cmpl
add
sub
push
stc
je
sbb
clc
loop
jp
cmpsb
and
pop
test
mov
jb
xchg
aam
inc
rclb
pop
ljmp
pop
mov
das
notl
mov
fld
enter
xchg
fstpl
lahf
popf
xchg
inc
mov
fadd
lret
icebp
lock
adc
ja
inc
out
mov
mov
xor
cmc
add
mov
test
out
ja
ret
mov
shll
jle
and
jge
icebp
sub
ja
int
mov
sbb
dec
loopne
out
icebp
add
inc
negl
cli
pop
adc
inc
enter
xchg
pushf
scas
or
jbe
lds
or
jmp
adc
add
cmp
ljmp
popf
ja
int
out
jl,pn
sub
add
out
lret
jmp
out
idivl
mov
add
push
out
repnz
xor
pusha
pop
stos
push
xor
nop
sbb
xchg
jb
mov
jno
mov
jnp
loop
pop
dec
loop
out
inc
pop
in
das
sbb
xor
or
fiaddl
mov
jp
mov
in
mov
imul
mov
scas
dec
xor
mov
xor
or
add
hlt
sbb
jle
insl
and
mov
out
lahf
sub
repz
sbb
adc
mov
test
ss
sub
mov
dec
inc
das
out
mov
daa
and
sbb
out
cli
pop
xchg
mov
out
movsw
test
push
sbb
jne
sbb
in
sub
loop
ret
cli
xchg
xchg
sbb
lock
mov
adc
jg
or
push
out
imul
push
das
xor
inc
sbb
adc
out
mov
xchg
pop
sets
xchg
adc
repnz
fwait
xchg
push
out
mov
adc
out
je
icebp
cwtl
adc
add
aam
xlat
sub
mov
pop
push
leave
lock
xor
aad
lock
out
testl
movsl
out
sbb
lret
out
fs
lds
std
pop
mov
aas
fistps
push
jl
test
lahf
leave
cmp
pop
mov
or
add
bound
out
xchg
adc
pusha
cmp
ret
imul
mov
sahf
imul
push
out
mov
mov
out
pushf
mov
out
or
mov
jo
icebp
call
xchg
sub
cmpsl
es
push
or
jne
jle
add
stos
xchg
jge
mov
jp
cmp
lods
and
ret
sub
sbb
daa
mov
mov
out
cmp
and
insb
cmp
jne
in
shr
mov
mov
mov
inc
nop
fstpt
inc
outsl
ss
pop
addr16
loop
lcall
and
icebp
out
movsl
shr
xor
jl
xchg
pop
lock
stos
into
movl
xor
mov
cmp
jns
out
loope
xorb
int3
movsb
repz
cmp
jp
mov
sbb
movsb
add
lret
add
out
inc
dec
pop
sub
jno
decl
xchg
pop
ds
lds
mov
ja
call
stos
push
dec
or
out
xchg
sub
fsub
test
lea
jg
cmp
je
push
cmpsb
mov
or
fistps
dec
sub
sub
into
test
ds
ret
pop
lret
cmp
out
loopne
sub
xor
mov
and
pop
fbld
push
xchg
dec
or
out
cmpsb
jp
stos
out
push
enter
pop
dec
shl
cmpsl
fxch
pop
iret
mov
or
push
rcrb
into
addr16
out
push
repz
fcomps
aaa
inc
inc
sbb
cmp
les
inc
add
jns
and
push
rcrl
out
push
cmp
out
addr16
xor
ret
lods
loop
jo
out
sub
lea
jp
out
xchg
ret
sahf
jecxz
adc
push
push
shl
xchg
repnz
mov
je
ret
and
push
out
out
fadd
xchg
jecxz
push
pushf
out
les
out
inc
inc
adc
std
jle
add
push
mov
push
popa
jp
test
push
ja
lods
dec
test
into
testb
push
push
jge
add
arpl
pop
cmp
or
sub
sahf
loop
push
and
and
shlb
std
hlt
iret
inc
rcrb
out
jne
xchg
aam
jge
int
dec
iret
jne
cmp
mov
jno
loopne
adc
loop
jns
dec
mov
xchg
mov
mov
xor
push
pushf
and
notl
push
aas
jmp
out
jp
icebp
das
jb
xor
lods
xor
dec
arpl
call
xor
cwtl
jne
jg
and
ljmp
sahf
mov
lret
push
cmp
clc
aas
mov
out
or
es
out
mov
aas
fwait
ret
jbe
inc
mov
inc
sbb
std
mov
xchg
repnz
dec
add
rolb
fmuls
xor
push
jg
xor
pop
push
adc
mov
out
and
filds
loop
call
adc
in
dec
bound
jge
out
xchg
mov
mov
cld
or
movsl
lods
cmpsl
sbb
cmc
cwtl
pop
outsl
xor
mov
lds
out
cmpb
or
sub
mov
pop
gs
push
lea
xchg
push
jne
movsl
or
fs
adc
ljmp
sbb
dec
adc
lds
jmp
ss
int
aad
out
iret
jo
jg
jecxz
out
std
jno
pop
cmp
out
push
add
cmc
jg
cmp
out
jl
push
inc
adc
addr16
fistpl
out
jecxz
dec
push
mov
xchg
xchg
shll
cmpsl
repz
jo
insb
sarb
xlat
out
and
stos
mov
pop
xchg
mov
call
ret
cmp
inc
push
mov
out
jns
mov
repnz
arpl
sub
inc
loope
pop
mov
ss
ds
cld
arpl
xchg
lahf
std
sbbl
rcl
les
stos
ret
mov
lds
shr
adc
je
cmpsb
gs
roll
clc
in
imul
mov
out
mov
push
out
push
sub
dec
into
rep
pushf
dec
or
pop
call
lock
rcll
jne
bound
dec
out
testl
mov
adcb
fimull
or
fwait
popa
std
push
adc
mov
jnp
add
lods
in
pop
jno
sahf
cs
add
lock
sarl
adc
add
inc
imul
sub
dec
out
repnz
xchg
rorb
gs
xor
fnsave
xchg
sbb
aas
cmc
cmovae
or
pop
mov
lret
je
loope
dec
ret
adc
add
cmp
xchg
dec
add
jmp
data16
aaa
sbb
or
jno
out
mov
jp
mov
out
lea
inc
pop
rorl
aaa
pop
sub
add
out
xchg
daa
dec
dec
stc
push
js
jp
mov
sub
stos
xor
jnp
in
orb
inc
mov
add
out
movsb
xchg
jecxz
cli
les
enter
mov
rcll
jbe
fwait
test
sub
stos
and
or
pop
out
xor
inc
xchg
cld
sbb
sub
xlat
hlt
jg
push
out
dec
sbb
in
pop
cmpsb
in
js
dec
push
fstps
lock
clc
jl
xchg
dec
adc
xchg
xor
push
jge
xchg
out
pusha
addl
cmpsb
out
and
pop
xor
pop
dec
pop
test
ret
shl
outsb
test
or
mov
add
loope
push
and
cmp
xchg
sub
sbb
inc
test
rcl
and
in
gs
iret
divl
xorb
or
hlt
sub
out
or
sbb
mov
out
test
sbb
flds
mov
fildll
int
stc
stos
mov
jecxz
mov
jns
jnp
jmp
inc
mov
movsl
mov
xor
sub
add
mov
jns
lret
mov
jg
sbb
mov
jno
inc
dec
cmpsb
repnz
ret
out
jbe
push
test
mov
xchg
loope
add
mov
mov
fucomi
pop
adc
loop
inc
out
jmp
sahf
ret
cld
fs
aad
ds
inc
xor
scas
cmc
test
dec
call
imul
sub
mov
sub
lahf
shlb
jae
aaa
mov
xchg
cwtl
or
mov
jle
ljmp
jb
icebp
or
and
adc
adc
sbb
dec
clc
out
pop
xor
test
add
movsl
out
xchg
mov
sbb
scas
and
movsl
clc
sub
mov
rorb
loop
xchg
sbb
push
fisubrl
std
out
insl
and
xlat
out
clc
fsub
xor
cmc
rorb
ss
add
inc
aam
lahf
sub
sbb
cli
vandps
sbb
jbe
cmc
shrb
iret
lock
inc
in
enter
pop
xchg
jno
shlb
test
dec
mov
inc
popf
mov
iret
ljmp
xchg
or
jne
mov
movzwl
pop
dec
fwait
out
outsl
les
out
dec
xchg
scas
pop
cmpsl
sub
jge
push
sub
xchg
adc
js
mov
cmpsb
faddp
imul
sbb
push
sbb
fnsave
icebp
push
xor
push
and
addl
cmp
xchg
jns,pn
std
pop
jmp
dec
mov
mov
imul
inc
out
pop
jns
mov
mov
adc
and
pop
lods
sahf
test
clc
jne
es
inc
aam
lret
out
inc
sbb
push
push
mov
leave
add
movsb
mov
sbb
js
ja
out
xchg
repz
test
mov
popa
es
frstor
pop
lods
out
test
ror
movsl
js
mov
loopne
insb
sbb
sub
dec
popf
in
mov
jne
aad
mov
pop
stos
jno
sbb
in
push
pop
cmpsl
and
gs
pop
sbbb
mov
out
cmc
aad
mov
xor
dec
or
cs
rcll
pop
cmp
outsl
pop
pop
cs
push
push
loope
jp
out
adc
jo
add
out
aas
imul
popa
sub
xchg
in
or
pop
or
jno
les
push
inc
flds
ret
dec
push
mov
mov
pop
or
into
cmpsb
jno
jg
push
mov
inc
leave
add
enter
bound
scas
mov
cs
rol
add
lahf
lret
xor
nop
shrb
ss
ds
sbb
dec
repz
popa
out
dec
pop
andl
push
in
xor
add
out
cmp
orb
inc
cmc
pop
jmp
out
cli
sbb
and
pop
fs
fwait
mov
int3
outsb
enter
cmp
lret
inc
jns
shlb
add
mov
rcll
leave
mov
xor
inc
popa
mov
pop
out
xchg
dec
dec
adcb
clc
out
cmp
xlat
push
add
mov
sbb
daa
xchg
jne
mov
pop
and
cld
out
cmp
mov
or
shll
jo
lcall
pop
xorps
or
into
lret
hlt
sarb
jne
mov
or
xor
pop
es
jnp
loope
adc
ljmp
sbb
sub
int3
out
or
pushf
jae
inc
push
cmc
iret
push
cmp
sbb
pop
add
sbb
jl
and
mov
sub
inc
movsl
es
out
fldl
xchg
cmp
aaa
lcall
sub
sbb
ja
imul
out
push
rcl
sbb
daa
int
out
cmp
inc
sbbb
sahf
cmp
mov
scas
test
fchs
lods
mov
leave
scas
mov
mov
test
ficoml
mov
push
out
call
add
xlat
sbb
sub
or
sbb
std
cs
mov
subl
out
sahf
test
dec
lcall
dec
inc
in
pop
mov
dec
cmpsb
xor
in
out
cmp
addb
push
repz
mov
cld
lock
jge
rorl
adc
stos
stc
icebp
out
dec
in
mov
adc
xor
lds
xchg
ret
cli
into
adc
out
fistps
test
mov
fsubr
insb
enter
push
out
xchg
and
push
dec
sub
pop
ja
fmuls
out
pop
sarb
rolb
pop
cmpsb
daa
test
arpl
or
ret
adc
ljmp
xor
and
jp
cmp
mov
out
fmul
pop
leave
lcall
sub
and
js
mov
sub
loope
xor
das
xor
jnp
xchg
out
sbb
inc
popa
jb
xor
and
mov
int
cmp
gs
lcall
sub
pop
out
incb
mov
or
test
or
popa
clc
out
bound
or
inc
adc
aaa
xor
push
push
insl
adc
out
dec
xlat
sbb
xor
xor
adc
out
push
mov
xchg
lahf
jbe
jb
les
adc
jo
pop
and
out
xchg
mov
pop
push
scas
cmpsb
out
repnz
lea
inc
mov
pop
sub
mov
jecxz
add
fildl
out
stos
clc
push
lcall
pop
sub
mov
cmp
adc
mov
int3
lock
ss
dec
aas
stos
mov
out
lods
inc
xchg
or
outsb
mov
xchg
jnp
mov
push
stos
mov
xchg
repnz
out
movsb
mov
sbb
mov
sub
shr
out
inc
scas
imul
loope
int
dec
mov
movsb
repz
aam
mov
cld
loopne
shrb
out
test
xchg
out
mov
pop
addr16
pop
ret
adc
push
pop
fmuls
out
xchg
push
das
std
arpl
lods
xchg
lods
nop
mov
jmp
and
sbb
out
dec
std
jb
rcrl
mov
out
cltd
mov
sbb
in
add
fs
lea
out
xchg
sub
dec
fwait
insb
mov
add
movsl
jmp
aam
int3
pop
xchg
lea
jg
outsl
xlat
xor
call
leave
insl
fadds
or
push
inc
in
aas
cmp
icebp
out
xchg
out
push
ds
and
insb
out
push
mov
repz
out
outsl
decl
mov
in
push
scas
push
mov
add
add
push
xchg
mov
sub
inc
mov
xlat
mov
sbb
outsb
and
inc
dec
pop
and
push
ret
inc
and
les
shl
mov
sub
mov
imul
xchg
ret
dec
out
test
es
repnz
push
lret
imul
push
sub
mov
inc
nop
shrl
sbb
xchg
je
insl
out
mov
jo
lcall
bound
inc
mov
dec
icebp
int3
popa
ljmp
call
jns
cmp
shll
push
inc
pop
lock
test
add
add
cmp
cmp
jmp
mov
mov
ret
pop
xchg
insl
cmp
in
aam
push
jne
idivb
jge
add
ljmp
xor
adc
cmp
jp
in
ja
std
out
mov
shll
cwtl
loopne
jae
out
push
add
cli
or
sub
in
push
lods
nop
jg
inc
sub
fstl
or
dec
xor
cld
out
mov
out
xor
lret
movsl
xchg
out
cmc
cmp
les
push
sub
into
xor
mov
cwtl
sbbl
cs
std
fnstenv
mov
jb
push
pop
push
jg
sarl
mov
lahf
pop
out
xor
andl
mov
adc
out
jb
and
test
in
out
fisttpl
jae
pop
dec
mov
and
into
incb
scas
mov
shl
mov
cmp
clc
fdivr
shll
push
pop
ss
popa
test
das
push
or
out
std
dec
data16
sub
test
hlt
xor
std
das
or
int
cwtl
bound
xchg
aad
xor
inc
adc
push
jne
push
sahf
xchg
xchg
loope
lahf
xorb
mov
push
in
loop
imul
xor
lea
sub
jo
ret
fs
push
push
cmc
pop
gs
out
push
lret
mov
repnz
ret
sub
xchg
lods
aad
jmp
jecxz
push
jp
and
leave
fwait
xchg
into
cmpsb
out
dec
mov
nop
mov
and
jo
jle
and
jne
jns
xchg
inc
test
in
mov
rorl
out
imul
clc
mov
xchg
add
stc
call
push
out
lds
jne
inc
push
push
js
fidivrs
add
push
cmp
lcall
imul
dec
or
pop
das
pop
cmp
imul
mov
sub
dec
add
xchg
cli
repnz
or
stos
repz
push
inc
data16
iret
out
js
add
mov
sbb
mov
std
fmull
inc
xchg
and
jmp
test
adc
push
test
sub
mov
cmp
xor
sbb
clc
sti
push
dec
rcr
push
jne
jmp
ret
sub
int3
cld
icebp
jle
xchg
mov
push
out
jno
outsl
ljmp
cmpsb
push
cli
sti
or
jp
addb
into
cmp
add
push
and
push
in
lods
shrb
out
sbb
add
sub
out
lret
pusha
pop
or
push
repz
cli
jmp
adc
cmp
into
and
movsl
adc
into
pop
ljmp
data16
mov
es
jle
out
jae
dec
ljmp
out
cmpsl
gs
cmc
xchg
out
inc
lret
leave
into
in
out
jl
xchg
shl
or
outsl
lret
lods
dec
aam
mov
add
mov
rcl
dec
mov
lea
push
jns
push
iret
daa
out
dec
sub
leave
das
filds
int
pop
lret
dec
fldl
ljmp
mov
gs
cmc
fwait
xchg
les
dec
iret
out
sbb
out
call
mov
mov
shl
push
sbb
adc
add
pop
dec
xchg
out
rcll
movswl
hlt
movsb
sub
inc
ljmp
test
inc
jo
out
jne
mov
mov
adc
cmp
dec
fnstenv
clc
xor
jne
add
mov
enter
push
ljmp
cmp
xlat
mov
adc
jae
mov
out
nop
mov
add
leave
push
mov
in
pusha
xchg
xor
into
lcall
daa
popa
iret
and
mov
push
push
xor
out
jne
xchg
test
add
mov
or
push
push
lods
xor
pop
xor
fs
adc
ret
sbb
out
jne
idiv
flds
icebp
jbe
or
imul
ret
adc
inc
stos
insl
fnstsw
cmc
mov
add
fwait
out
push
in
mov
push
ljmp
cmp
pop
inc
push
std
push
cmc
jne
loope
xchg
mov
out
mov
test
bnd
out
push
inc
sbb
pop
sbbl
xchg
adc
arpl
pop
mov
int
out
in
pop
or
dec
scas
adc
push
dec
mov
out
sti
cmp
sub
out
xor
fs
inc
dec
lods
jle
out
cld
jae
dec
or
loope
nop
repz
out
add
cld
cwtl
out
mov
out
in
out
into
shl
fsubrs
mov
scas
addr16
xchg
xchg
push
sub
adc
das
mov
add
push
or
popa
out
ds
pop
out
push
or
mov
push
cmp
inc
mov
dec
mov
mov
mov
sub
dec
and
cmpsb
push
iret
jo
mov
adc
mov
or
jle
imul
mov
sub
loop
sarb
sbb
lret
cltd
xchg
out
mov
cmpsl
inc
fcomps
stos
ret
jmp
int3
popa
cmp
mov
mov
out
jne
dec
into
or
hlt
fsubr
push
xchg
push
out
popa
repnz
arpl
mov
xchg
pushf
imul
inc
xor
add
sti
mov
mov
ds
out
aam
pop
movsl
jno
out
test
aas
jne
enter
repnz
sub
adc
cmpsb
or
movsl
push
es
add
ficompl
dec
out
lret
mov
iret
fiaddl
mov
out
jg
sbbl
inc
out
jle
push
rcrl
aam
cltd
packuswb
clc
and
xchg
push
int
jp
and
fs
insl
dec
loope
dec
cmp
out
and
jle
add
xchg
out
adc
sub
sub
mov
lret
rclb
inc
aas
mov
test
sbb
fisubrs
pop
jp
pop
arpl
cmp
add
jmp
xchg
test
xor
scas
inc
pop
mov
adc
inc
xor
in
fsts
out
popa
pop
pop
jmp
aaa
lods
push
clc
and
inc
push
pop
jl,pt
outsl
mov
or
lods
pushf
ficoms
sbb
clc
out
cmp
jnp
out
loopne
aas
hlt
divl
or
push
test
out
pusha
addr16
pop
xchg
into
out
int
mov
dec
pop
cwtl
out
adc
dec
jns
push
push
std
mov
add
out
jg
jo
roll
aas
out
stos
pop
xlat
adc
inc
cmp
xor
lcall
xchg
or
mov
sub
adc
mov
jp
cmp
out
adc
mov
push
gs
lret
loopne
out
jg
lret
pop
movsl
out
into
add
adc
cmpsb
cmp
jge
and
fs
daa
shl
or
repz
mov
out
sbb
and
int3
mov
pop
mov
stos
lods
je
popa
cmp
popf
sub
mov
jge
dec
push
std
jnp
out
fstp
sbbb
dec
rolb
sbb
popa
clc
clc
mov
sbb
xchg
pop
cld
incb
out
ret
rol
sbb
or
jp
aam
das
mov
test
jnp
popf
push
out
sarb
test
lds
xor
std
sub
ficomps
loope
xor
lret
mov
or
xchg
out
lods
sbb
inc
cpuid
lret
push
gs
sub
mov
dec
mov
nop
or
out
popf
push
pop
daa
shl
out
in
fidivl
stc
movl
lret
lret
push
popa
mov
jmp
and
pop
out
outsb
dec
andb
sub
out
pop
adc
out
and
mov
mov
pop
out
inc
fdivp
sbb
hlt
cmp
cltd
ret
pop
cmc
ja
and
cmp
test
add
out
fnstsw
sbb
xchg
lahf
sbb
adc
mov
dec
hlt
popa
ljmp
std
mov
pop
mov
xorb
jno
add
std
in
xchg
hlt
iret
out
push
repnz
stos
sti
ret
mov
movsb
adc
jp
mov
hlt
push
or
or
cmc
int
xor
adc
je
insb
lret
sbb
hlt
push
ljmp
movsb
adc
cmp
inc
dec
fs
cmc
push
stos
dec
outsl
mov
sahf
sbb
bswap
ljmp
push
dec
push
lret
xchg
sub
mov
out
pop
cltd
sub
mov
sbb
rcl
xchg
loope
iret
adc
ss
insb
cmc
aas
data16
out
pop
loope
loopne
nop
sub
dec
cmp
jp
outsl
xchg
jae
out
pop
loope
jmp
pusha
xor
lods
shrb
push
lret
shll
shl
fmuls
cmp
cwtl
sbb
jno
mov
loop
pop
aaa
cwtl
dec
int3
jno
cmp
out
push
cmpsb
stos
ret
andl
jnp
or
jbe
test
int
xchg
aad
jg
sbb
hlt
sbb
out
bound
jae
lods
push
cmp
js
imul
cld
out
nop
jp
adc
cmpsb
out
int
in
scas
out
cmp
mov
mov
mov
sub
lret
out
es
aaa
jae
sahf
mov
sarl
inc
pop
out
sub
setns
inc
bound
inc
scas
add
sub
outsl
loop
xchg
cs
orb
jb
xchg
hlt
and
out
xor
add
stos
icebp
out
add
cli
dec
jns
add
out
push
xor
fs
test
in
inc
out
sbb
xchg
out
stc
cli
jae
add
addr16
iret
mov
out
mov
out
xor
sbb
xor
push
jge
jne
sub
andb
push
shll
mov
out
lea
sub
sub
rolb
add
repnz
rcrb
lock
xor
clc
sbb
sub
mov
insb
lcall
ljmp
std
out
leave
adc
xchg
push
dec
mov
cmp
scas
dec
stos
out
cmpl
pop
insl
add
out
test
adc
cwtl
push
gs
popa
in
mov
out
push
jmp
jle
popf
mov
out
lret
stc
insl
out
das
and
add
outsb
jae
dec
lcall
push
nop
out
dec
js
call
ja
ss
repz
push
out
mov
mov
mov
out
mov
js
mov
out
xchg
fwait
sti
pop
ljmp
out
cmpsl
popf
inc
adc
xor
sti
sbb
aad
dec
pop
and
in
jmp
out
push
xchg
or
movsw
xchg
stos
push
repnz
out
shlb
lods
push
push
pop
jne
xor
lahf
jg
xor
mov
movsb
jo
out
lret
mov
adc
push
add
push
dec
mov
popa
adc
add
xor
push
sahf
inc
out
into
sub
int
jge
es
fstl
push
lret
out
lahf
pop
cmp
cltd
cli
out
mov
mov
xor
dec
clc
ljmp
je
dec
jno
inc
lcall
out
mov
cmp
test
sti
fwait
loop
jo
mov
loope
pushf
sub
les
gs
loop
add
pop
inc
cmp
and
data16
sbb
out
aaa
insb
jae
lods
out
and
inc
sbb
jmp
popa
out
imul
and
int
cwtl
into
shll
test
nop
inc
cli
add
mov
jae
push
mov
stos
stc
fisttpll
dec
imul
jne
fwait
xchg
out
shll
mov
push
add
inc
fisttps
dec
out
inc
pop
imul
repnz
lock
push
mov
into
mov
inc
or
dec
test
push
dec
clc
stc
ljmp
out
xor
cmc
sub
or
mov
pop
lret
adc
jne
pop
cmpsb
sahf
sbb
test
in
out
aas
xor
cmp
fwait
cmp
sbb
imul
xchg
stc
and
inc
cmp
jns
cmpsl
mov
lcall
ds
jo
mov
repnz
insb
fwait
movsl
xor
pop
sub
xor
xchg
out
sti
clc
cmp
xchg
cmpb
cmp
mov
ja
es
mov
sar
stos
test
adc
pop
je,pn
or
mov
out
jo
xchg
cld
xor
mov
adc
lea
scas
insl
out
je
lods
scas
ss
ljmp
xchg
xchg
sahf
cwtl
sub
out
lcall
out
int
test
test
push
test
or
xor
flds
aas
cltd
int
xchg
cwtl
icebp
out
add
inc
cmp
dec
outsl
rclb
inc
mov
xor
ljmp
inc
ljmp
mov
mov
mov
jp
out
aad
cltd
cld
dec
pop
pop
jne
cmp
cmp
dec
add
imul
or
add
mov
mov
ret
std
adc
inc
adc
and
adc
out
sti
mov
out
mov
xlat
or
out
jmp
add
pushf
add
out
mov
cmp
push
fwait
out
or
mov
out
xor
outsb
out
push
lret
and
cmp
shr
call
movups
cmp
xchg
push
cli
rorb
repnz
sbb
clc
jae
aam
outsb
cwtl
xor
inc
pop
ds
mov
inc
mov
push
aad
sbb
cs
jo
hlt
movl
rcrb
in
jbe
mov
jns
xchg
aas
sbb
mov
adc
xchg
cmpsl
loopne
cwtl
xchg
push
or
les
mov
out
mov
mov
add
pop
mov
pusha
mov
inc
arpl
pop
add
outsb
and
rolb
cmp
jmp
pushf
fadds
and
push
clc
out
mov
cmc
aaa
mov
lret
sahf
lea
inc
add
es
xchg
ret
das
mov
pusha
test
cmp
out
std
int3
add
incb
xor
jb
add
std
ja
inc
jg
and
mov
pop
ret
add
mov
push
fbstp
testl
out
popa
mov
cmp
cmp
sbb
mov
xchg
out
or
lods
and
std
fisttpl
adc
mov
scas
dec
test
mov
fisubrs
popf
pop
movsb
xchg
cld
lods
mov
arpl
call
out
cmpsl
mov
test
lds
bound
inc
and
push
add
out
outsl
js
inc
jne
mov
pop
xchg
lcall
sub
out
mov
int
pop
into
cmpsb
out
pop
push
xchg
xor
in
mov
sbb
stc
out
mov
adc
lahf
add
fistps
push
pusha
js
jp
mov
les
out
xlat
sbb
pushf
pop
out
jo
sbb
mov
adc
leave
or
mov
dec
out
cmove
in
push
mov
or
cmp
out
sbb
repnz
xor
ss
and
mov
outsb
dec
jne
add
push
push
xor
int
jmp
jnp
xchg
je
lcall
mov
addr16
mov
mov
adc
lods
in
out
pop
xchg
cmc
fstps
out
lcall
test
or
clc
add
fisttpl
out
jo
mov
outsl
sub
out
jns
inc
and
cmpb
sahf
push
lods
xchg
imul
es
xor
mov
jno
lods
out
dec
pop
dec
jle
cmpsb
xor
sbb
jmp
mov
ja
out
es
jg
out
mov
jno
mov
data16
std
xchg
sub
xor
xlat
jl
mov
pop
out
cmp
cmpsl
cmc
addl
dec
or
aaa
cli
int
jb
cmpsb
fists
gs
in
sbb
jp
outsl
int
movsb
mov
sbb
test
out
sub
jo
lea
out
sti
iret
lods
mov
ds
js
sbb
addb
je
ficoml
mov
call
out
cmpsb
addl
sub
int3
add
jmp
push
out
inc
mov
mov
adc
in
mov
daa
shrl
cmpsl
movsb
push
fsubrl
out
repz
sub
add
inc
add
std
adc
fldt
mov
cmc
sub
mov
mov
or
insb
stc
jecxz
cmc
adc
scas
cmp
jne
lock
out
cmp
dec
insl
and
out
daa
lret
xchg
mov
add
out
mov
mov
or
lock
push
cmc
int3
mov
lcall
das
jmp
fucom
fcompl
mov
movsl
ss
cwtl
add
arpl
jns
in
icebp
push
stos
int3
xchg
or
mov
and
dec
jg
jecxz
or
adc
outsb
mov
jl
bound
jnp
and
sarl
sbb
out
mov
mov
ja
cwtl
sub
xor
mov
leave
stc
sbbl
aam
roll
lds
lret
repnz
dec
mov
adc
out
xor
out
adc
add
jp
cmp
xchg
inc
fwait
lahf
out
test
push
bound
sahf
ficoml
push
xor
out
movsl
mov
les
sbb
jbe
add
out
lea
xchg
outsb
pop
test
or
ljmp
clc
pop
sbb
fstl
cmp
cld
sbb
dec
add
negl
jae
nop
out
cwtl
lea
out
push
lds
fildl
out
adc
pop
xchg
pop
ja
out
jo
test
mov
jp
cmp
mov
js
scas
mov
adc
xor
xchg
stos
test
sub
ljmp
inc
sub
shl
stos
or
push
or
sbb
and
mov
xor
ljmp
out
inc
cmp
jb
std
add
loop
stc
sub
jno
jp
adc
das
cmp
imul
popf
add
lcall
xor
ret
fsubr
mov
sbb
test
ljmp
xor
mov
mov
sub
out
and
jae
movsl
cmc
cmp
int3
dec
loop
jo
mov
out
lods
cli
sbbl
add
iret
aad
movsl
push
mov
dec
or
les
jecxz
cmc
mov
popa
dec
out
pop
pop
repnz
into
out
and
jmp
ret
int3
inc
xchg
lahf
mov
cmpsl
aam
xchg
je
inc
mov
enter
sti
add
jno
xor
and
insb
mov
push
xchg
and
lods
aad
lret
lcall
jo
sarl
imul
push
pusha
pop
je
xor
out
out
sarl
sub
add
mov
popf
jmp
mov
jp
and
xor
es
stc
or
dec
fsubrs
test
stos
mov
push
jo
push
push
out
jp
mov
or
pop
out
or
mov
out
lret
push
inc
push
enter
daa
loope
bound
out
pushf
jns
cmpsl
sbb
insl
xchg
mov
outsl
inc
gs
push
mov
fs
loop
or
out
lahf
call
inc
mov
xchg
in
jns
add
dec
das
mov
adc
out
jbe
sbb
clc
and
pop
add
jmp
mov
or
jecxz
xchg
fwait
push
out
jg
add
mov
outsb
iret
adc
adc
mov
mov
out
enter
or
negl
xchg
mov
mov
adc
stos
or
out
xor
nop
dec
cmc
cmp
out
fldenv
pop
js
sub
out
adc
jp
push
inc
mov
sbb
add
cmp
std
neg
insl
push
icebp
mov
cmp
add
push
xor
jns
outsl
lock
push
mov
jg
cmp
add
and
add
test
cmpsb
push
mov
push
xchg
fldt
xchg
cli
add
xchg
out
pop
pushf
and
jecxz
out
pop
mov
add
push
cwtl
mov
stos
ljmp
inc
pop
into
cltd
sbb
pushf
out
cmp
pop
dec
pop
inc
sbb
mov
xchg
mov
test
push
jae
stos
lods
cmp
inc
cmc
jmp
cwtl
call
mov
mov
out
xor
out
mov
outsl
mov
push
push
out
mov
aam
adc
jmp
in
test
add
or
outsl
popl
add
in
mov
fs
mov
xor
push
jne
push
jp
repz
hlt
sahf
push
dec
out
aas
cltd
jmp
dec
jno
mov
inc
out
or
cli
push
xor
or
jns
adc
sahf
fwait
insb
test
mov
cmp
inc
or
rcrl
out
and
pop
fs
xchg
xor
mov
jnp
out
push
xchg
fwait
ss
mov
jne
sub
rcl
sbb
inc
out
fstpl
dec
in
xor
out
aad
lahf
scas
shrl
out
sbb
sub
loop
pop
aaa
das
push
out
mov
cmp
jo
xchg
cld
pushf
xlat
stos
ret
mov
out
jl
sbb
movsb
out
fdivr
cmp
xor
cld
mov
cmc
push
pop
scas
mov
pop
movsb
mov
mov
add
mov
mov
sahf
inc
das
loopne
push
aaa
xor
outsl
sub
out
dec
sub
pushf
dec
adc
fldcw
cmp
push
les
push
in
lock
or
loopne
mov
xchg
or
pop
fnstcw
or
lods
sti
add
dec
adc
jge
and
push
pop
cmp
out
std
outsb
lods
ds
enter
jmp
out
jmp
sbb
mov
xorb
cwtl
push
mov
outsb
fisttps
test
jl
jo
cmp
out
je
jp
ss
ja
fwait
test
test
out
jmp
adc
outsl
or
xchg
scas
repz
pop
mov
test
in
jg
dec
sub
mov
out
test
enter
xchg
dec
pop
clc
add
movsb
adc
addr16
inc
xor
cltd
imul
ds
std
bound
push
add
push
shrb
cld
cmpsl
or
rcll
subb
out
and
clc
jmp
nop
jns
les
push
popa
lret
jnp
fsub
inc
pusha
xlat
es
inc
fnsave
imul
nop
cmp
pop
test
rclb
push
popa
fucom
sbb
pop
scas
jae
push
shr
mov
adc
push
aad
add
call
jne
push
clc
mov
pop
test
ljmp
mov
jb
inc
out
cltd
cld
jp
lea
or
shrl
jbe
addb
add
into
cmpsl
mov
xchg
lds
and
fldcw
out
iret
or
lds
lock
mov
les
pushl
out
fwait
cli
mov
insb
fadd
out
sbb
aaa
push
pusha
inc
cmc
add
mov
lock
inc
push
in
cmc
adc
test
out
stos
cmpsb
cli
arpl
mov
sub
or
pop
mov
scas
fwait
btc
mov
push
stos
cltd
fimull
adc
or
mov
out
and
mov
mov
lods
fmulp
das
cmp
sbb
sbb
push
jno
and
test
jp
dec
jmp
sarb
cmc
out
push
fdivrs
cwtl
movsl
loop
out
int
adc
add
mov
in
sahf
adc
filds
add
ret
hlt
sbb
jmp
pusha
test
jp
mov
mov
stc
xlat
shr
pusha
gs
movsb
out
cmp
aas
lods
out
daa
mov
mov
adc
out
shlb
pop
sub
mov
jecxz
or
sarb
lret
sub
das
adc
xchg
andb
mov
stos
lods
adc
out
dec
xor
mov
test
or
repnz
iret
shl
add
loop
lret
xchg
xor
popa
cmp
mov
inc
mov
ret
and
and
out
push
sub
call
lock
scas
aaa
pop
jg
out
sahf
lcall
cmp
repnz
cli
hlt
repz
lock
in
loop
jne
adc
mov
sub
stc
out
dec
shlb
dec
nop
out
mov
rcrb
mov
stc
ljmp
outsl
mov
test
xchg
xlat
mov
cli
dec
and
cs
lock
and
testl
cli
out
std
out
cmpsb
mov
xlat
es
inc
imul
imul
xchg
ljmp
incb
or
mov
or
das
add
xchg
xchg
je
jae
addr16
imul
shlb
mov
xlat
cmp
out
mov
mov
out
push
inc
adc
mul
ss
sbb
cmpsb
cltd
or
or
test
ljmp
dec
das
xchg
mov
push
and
shl
call
out
mov
mov
insb
pop
addr16
int3
sub
lea
xor
cmp
out
and
and
jp
push
loop
cld
ret
jmp
jb
lds
test
jbe
in
insl
rolb
lock
aas
fnstsw
and
jae
xor
hlt
out
lret
into
lds
mov
ljmpw
ljmp
es
push
mov
mov
rorb
out
jno
mov
mov
mov
pop
xlat
cmp
scas
out
mov
jmp
inc
into
ret
fsubr
push
mov
cltd
lods
jg
test
out
inc
incb
pop
pop
out
add
rcl
cmp
pop
icebp
mov
jb
or
ljmp
pop
mov
dec
fnstcw
jl
xchg
xchg
xchg
nop
pop
adc
es
in
out
sbb
mov
mov
cmp
sub
mov
xor
out
jbe
jne
je
pop
mov
call
lods
movsl
or
repnz
xchg
cmp
push
pop
push
test
xor
sub
jg
out
push
ror
fwait
out
mov
outsb
insl
inc
adc
or
push
xchg
xlat
mov
and
mov
cmpsb
cmp
shl
sub
in
dec
daa
lods
lods
cmp
add
jns
out
sbb
call
or
and
sub
cmpb
out
or
out
dec
imul
inc
jb
loop
cmpsw
adc
cmp
scas
out
ret
mov
bound
out
arpl
mov
jmp
aam
inc
out
dec
fsubp
add
mov
push
fistpl
lcall
mov
jne
imul
loopne
or
cmp
int
out
fistpl
xchg
clc
std
mov
xor
fcompl
add
push
out
xor
cmc
xchg
jecxz
out
daa
insb
int3
ret
shll
leave
adc
out
lcall
fbld
cmc
std
push
in
inc
test
pop
out
cli
pusha
or
lret
fildll
xchg
xchg
push
in
mov
rcrl
lods
pop
repnz
cmpsl
nop
dec
sahf
inc
pop
or
ljmp
js
shl
dec
push
xchg
mov
dec
sbb
in
jno
out
inc
push
lock
add
or
aas
das
adcl
into
pop
pushf
insl
add
sahf
scas
clc
data16
or
mov
in
jbe
mov
or
mov
pushf
mov
push
iret
ret
jne
in
pop
out
add
aas
dec
cwtl
jae
lahf
jge
sub
push
in
test
jns
ljmp
out
int3
sbb
insb
fisubrl
mov
and
out
lahf
test
push
sarl
adcl
imul
xor
sub
imul
mov
out
xchg
xlat
inc
rcll
out
lods
jmp
dec
pop
pop
lds
push
add
sub
fldl
hlt
out
lcall
xor
std
mov
xchg
aad
or
ret
clc
std
xor
in
nop
pop
das
lods
in
fwait
dec
cwtl
xchg
jecxz
xchg
jp
lods
sub
out
jns
add
jb
mov
mov
push
dec
hlt
out
gs
mov
push
nop
mov
mov
sub
xchg
repnz
push
out
mov
mov
add
shl
and
pop
cmp
imul
jecxz
sbb
mov
lea
ret
mov
jne
mov
out
jnp
nop
out
cld
mov
xorl
push
inc
fldl2t
xor
rcll
dec
out
faddp
scas
cmp
jo
or
push
sub
inc
loope
out
fnstcw
xor
jo
pushl
addr16
out
or
jb
fisubl
in
dec
push
icebp
sub
mov
std
scas
mov
out
mov
inc
addr16
lahf
or
pop
xor
push
xor
cltd
fwait
jo
rol
call
sub
out
iret
das
adc
mov
pop
push
aam
cld
cwtl
jg
inc
out
lods
push
sbb
loop
pop
test
bound
mov
push
xchg
dec
push
adc
cltd
jns
loop
sub
into
cs
jecxz
data16
out
hlt
imul
loopne
bound
out
xchg
jl,pt
xor
mov
adc
inc
pop
shll
repnz
pop
ss
jge
fwait
mov
sbb
out
push
push
add
aad
xorl
jnp
inc
or
in
outsb
ret
lds
cmp
pop
push
out
mov
mov
push
pop
xchg
xor
ret
daa
out
pop
aas
xor
mov
mov
add
inc
mov
push
in
mov
pop
out
cmp
sbb
lret
jb
out
outsb
sbbb
adcl
sarl
mov
rcrl
out
sub
xchg
mov
sahf
or
mov
mov
jmp
aad
push
ljmp
loop
xor
je
in
out
in
ret
cmp
stos
frstor
imul
inc
adc
and
out
sbb
out
mov
icebp
xchg
sti
pushf
and
out
and
sar
push
out
lahf
xor
out
pop
dec
aad
push
push
lret
pop
push
lock
out
dec
loope
in
inc
or
enter
sbb
push
push
or
icebp
je
out
ja
int3
into
and
pop
fdivs
lds
cmp
std
imul
insb
mov
in
push
adc
jne,pt
test
hlt
out
in
movsl
or
out
int3
aaa
push
cmpsl
push
test
sbb
fcmovbe
inc
fisttpll
mov
fimuls
pop
mov
in
or
or
sarb
dec
sub
adc
clc
jecxz
lret
cld
mov
cmp
icebp
out
rcll
add
add
int
out
lea
mov
xchg
nop
dec
lahf
and
or
icebp
out
bswap
cmp
out
pop
std
pop
repz
test
loop
dec
loop
mov
push
test
out
sbb
out
in
lods
jnp
mov
cld
and
fs
insb
js
cmc
mov
xchg
stos
cs
push
cwtl
cld
out
icebp
add
mov
pop
adc
hlt
cltd
dec
out
popf
sbb
data16
popf
mov
sbb
jge
shl
hlt
das
sti
cwtl
pop
pop
mov
and
add
in
or
jns
dec
sbb
xchg
xor
xor
xor
data16
frstor
cmpsl
out
jne
adc
xchg
in
out
dec
rcrb
xchg
inc
xchg
hlt
aad
fmul
push
adc
movb
insl
mov
out
mov
mov
cmc
sti
repz
filds
stos
mov
loop
adc
cli
js
das
ret
pusha
test
mov
mov
cmp
dec
push
adc
inc
cwtl
push
sub
adc
cld
xchg
add
add
mov
or
popa
sub
adc
jle
and
int3
xchg
stc
push
cwtl
andl
jmp
sbb
sbb
out
ds
cmc
mov
mov
aam
fs
lahf
outsb
sbb
cmp
xlat
sbb
xor
xor
xchg
in
aas
mov
mov
int
lds
sbb
xor
mov
cmc
pop
hlt
pop
sub
insb
cmpsl
mov
out
inc
popf
sbb
popa
push
out
fistpll
sub
stos
or
fstps
loop
in
cmc
push
jmp
out
dec
in
sahf
jno
movsl
xchg
aaa
and
gs
insb
out
xor
push
popa
loopne
lret
fsubr
cwtl
push
xor
cmp
pop
out
xor
movsl
cmp
pop
out
jmp
jnp
fidivrl
add
fisttps
out
mov
sub
cli
in
out
imul
lcall
mov
out
mov
jbe
or
jmp
pop
push
hlt
repnz
xlat
sub
adc
js
outsb
push
jmp
push
cmpsl
out
mov
mov
out
aas
fcmovnb
add
int
or
xchg
inc
sbb
scas
xchg
ljmp
fstp
push
xchg
jnp
insl
ds
push
jmp
out
cmp
cs
mov
inc
xor
mov
out
fmul
ja
inc
mov
ret
dec
out
push
xchg
dec
push
pop
sbb
out
nop
arpl
adc
push
adc
lock
push
mov
xor
rorl
cwtl
xchg
in
out
stc
es
into
jle
jge
movswl
inc
cld
test
std
aam
add
or
aam
mov
inc
ljmp
out
push
and
rcrl
cmp
xor
mov
mov
out
add
sbb
incl
jnp
inc
adc
adc
jb
lods
cwtl
cltd
stos
sti
xor
cmp
test
pop
dec
mov
jp
pop
or
popf
sub
xchg
in
jne
inc
aaa
pushf
or
loope
and
mov
ret
out
xlat
inc
jno,pt
or
out
les
push
push
inc
imul
sub
mov
out
incb
sub
out
andl
jmp
xchg
mov
int
sbb
les
inc
inc
fbstp
xor
and
js
sti
out
push
mov
test
adcl
xor
gs
fsubs
sti
iret
out
cld
mov
pop
mov
adc
or
out
lcall
jbe
cwtl
sbb
mov
addr16
push
mov
fsubr
jne
call
and
ret
jno
repz
out
xchg
popa
cmp
jmp
mov
or
out
or
mov
or
subps
ja
xchg
cmp
and
sar
lret
ds
out
stos
cmpsl
fs
xorl
repnz
jle
cwtl
test
dec
mov
daa
pusha
ljmp
out
ret
shll
mov
xchg
mov
and
jbe
out
sti
push
dec
mov
jge
out
les
xchg
data16
lcall
loopne
lea
aad
sub
jecxz
dec
cmp
iret
das
repz
ja
loopne
inc
jbe
push
mov
testl
je
shr
xor
push
jns
jb
repz
dec
push
ja
push
jmp
ljmp
in
mov
xchg
or
fiaddl
fs
mov
fwait
xchg
cmp
or
jl
mov
push
mov
pop
mov
out
sub
out
sbb
adc
arpl
ja
lods
mov
sub
scas
in
out
fwait
jnp
or
xor
add
mov
xor
add
dec
push
in
mov
sub
loope
lcall
mov
xor
mov
jle
ret
mov
xchg
cmpsb
sbb
mov
mov
je
mov
ds
mov
popa
xor
out
cmp
ret
test
mov
jb
scas
in
data16
sti
xchg
jge
fwait
pop
jg
mov
jle
xor
out
mov
cmovo
jge
icebp
xor
mov
mov
xchg
push
fiadds
fcom
jns
and
imul
xor
cld
push
dec
jns
mov
stc
mov
lcall
sub
lock
cli
or
adc
stos
mov
out
icebp
popf
and
pop
std
fidivrs
xor
xchg
xchg
push
mov
xchg
jp
inc
les
test
dec
in
and
xchg
rcl
mov
test
mov
add
sub
and
cmpsb
mov
jp
jecxz
mov
inc
xchg
arpl
xchg
out
movsl
lea
cmp
filds
push
out
or
pop
out
mov
jb
loopne
popf
mov
int3
push
out
stos
mov
pop
addr16
dec
jecxz
fnstsw
mov
push
insb
push
add
aam
daa
pop
dec
jne
lods
cli
lcall
mov
lret
jmp
push
push
cs
gs
sub
test
jl
mov
fimull
jns
or
out
out
icebp
cltd
jecxz,pt
aas
out
inc
cmpsl
jle
movsb
mov
imul
dec
mov
add
ret
out
mov
scas
dec
stos
out
jmp
arpl
xchg
jecxz
out
add
lds
push
lods
out
or
inc
and
pop
inc
xor
arpl
insl
mov
inc
int3
dec
mov
out
cmpsl
pop
aas
lock
les
out
fwait
xchg
jne
pop
aaa
rorb
sub
push
sub
pop
push
ljmp
mov
adc
out
notl
xchg
add
sti
adc
inc
xchg
out
mov
repz
sub
push
loopne
aam
addr16
test
aas
mov
mov
jae
mov
xor
pop
stos
xlat
lcall
add
out
pop
sbb
dec
inc
out
xchg
add
test
iret
fucomip
rorb
subl
mov
lock
push
mov
out
jecxz
add
stos
ja
testl
and
adc
test
push
clc
dec
push
movsl
add
gs
or
out
mov
mov
ds
pop
adc
sbbb
adc
inc
pop
sub
je
out
scas
mov
mov
mov
je
aas
cmpsb
push
out
cmc
or
out
lea
sbb
lahf
mov
mov
dec
cmpl
test
out
add
cli
aad
cmp
movsb
icebp
xchg
call
scas
add
push
sbb
shrb
frstor
out
xor
and
out
adc
out
mov
jne
out
repnz
cltd
test
fstpl
pop
mov
test
out
mov
xchg
dec
jne
orl
and
ds
in
xchg
xor
fstl
add
daa
subb
xor
stc
in
push
cmpsb
sahf
andl
push
or
mov
into
aad
jbe,pt
lods
cs
mov
out
adc
add
mov
mov
push
and
shrb
ja
es
fbld
jg
xchg
jns
aas
pop
sbb
fiaddl
inc
sub
lea
fldl
cmp
mov
aaa
pop
push
xchg
jmp
inc
mov
jmp
ss
mov
ljmp
hlt
add
bound
pop
out
pop
std
lods
in
out
adc
and
stos
into
rclb
mov
adc
cli
cmp
jo
ret
out
loopne
pop
push
mov
insl
arpl
stos
mov
dec
sub
out
mov
scas
push
xor
std
mov
cmc
or
rorl
inc
test
int
adcl
outsb
push
js
popa
stos
xchg
mov
mov
in
cltd
add
jecxz
mov
mov
inc
mov
aas
popf
out
imul
out
sbb
xorb
add
cmp
xor
dec
popf
int3
xor
pushf
in
testl
cli
insl
add
cmp
aad
push
ss
cmp
sub
jmp
sub
cmp
mov
shlb
out
std
push
rcl
dec
cwtl
data16
mov
xchg
lods
dec
out
push
icebp
push
add
mov
enter
add
es
sahf
ret
in
dec
addb
ljmp
push
dec
pushf
repz
movsb
jne
adc
cli
insb
adc
pushaw
out
das
cmp
push
adc
or
inc
cs
lcall
fidivrl
shr
sub
test
mov
out
mov
pushf
int3
out
cmp
std
les
in
mov
loop
fdivp
aas
mov
lods
shl
hlt
pop
std
add
bound
jnp
in
push
shll
movsb
ss
fnstenv
or
arpl
repnz
clc
hlt
dec
mov
jae
and
daa
icebp
or
imul
sub
out
fwait
arpl
cld
or
xchg
jl
inc
leave
lods
out
loop
mov
jne
inc
addr16
and
xor
cltd
cmc
jmp
cmp
out
mov
gs
out
outsb
outsl
xchg
dec
scas
dec
out
xor
sub
insb
cmpsb
in
out
push
lret
call
mull
add
mov
out
pop
cmp
pop
clc
inc
mov
xchg
int
xor
out
cmc
out
push
jno
lahf
ret
mov
mov
nop
xor
outsl
mov
lods
jne
je
aas
aaa
jp
and
xlat
push
jmp
adc
add
and
mov
sahf
and
movb
or
adc
push
pop
mov
sahf
mov
add
push
std
sbb
nop
shlb
aaa
fadd
cmpsb
pop
je
cld
das
out
jb
icebp
mov
out
sbb
adc
outsl
ljmp
fwait
push
out
xchg
push
mov
arpl
mov
inc
into
mov
lret
out
movsl
push
adc
sbb
pushf
shr
or
pop
sbb
sbb
add
nop
push
stos
dec
ja
leave
cli
sub
push
jno
adc
stc
xor
inc
sub
pop
xor
test
ljmp
ds
int3
cmpl
mov
movsb
ds
and
add
lahf
fwait
inc
stos
mov
aam
gs
out
fs
adcl
sbb
push
push
cmp
xor
lock
out
mov
jne
out
inc
push
or
cld
push
out
movsb
mov
cltd
jnp
pop
or
xchg
xchg
int3
out
mov
shrl
ds
mov
repz
out
fcoml
jns
cltd
lods
sbb
mov
xlat
in
cmp
cmpsb
ret
push
dec
nop
or
mov
leave
mov
push
lret
out
cmc
mov
aam
shll
xchg
dec
push
es
mov
into
stos
or
lret
out
cmp
in
nop
outsl
adc
insl
jne
das
pop
clc
ja
pop
lock
adc
add
mov
out
lods
add
sub
mov
orl
dec
xorl
stos
aas
out
lcall
out
daa
and
popa
sbb
xlat
jo
insb
int
ret
out
repz
cmp
pop
inc
mov
test
sub
xor
dec
xchg
outsl
pop
ja
sbb
adc
push
ds
push
and
cmc
dec
lods
jecxz
mov
adc
out
add
rorb
mov
xchg
sbb
std
ss
rcl
cld
sbb
lods
jb
xchg
std
push
lods
out
stos
pop
mov
out
mov
shlb
dec
dec
push
inc
fcoms
inc
sub
out
in
xchg
out
mov
repnz
xchg
data16
or
out
pop
inc
xor
out
or
cs
out
xchg
enter
add
test
pop
jb
hlt
mov
adc
iret
into
test
bound
lods
dec
and
xor
and
mov
push
ret
mov
lock
jge
fdivrs
mov
int3
mov
cmp
add
out
pusha
nop
adc
ljmp
push
xchg
ficoms
shl
jecxz
not
movsb
cmp
adc
scas
in
pop
shr
out
or
and
fmuls
data16
push
bound
call
mov
xor
adc
and
stc
or
loopne
addr16
iret
dec
and
les
xchg
mov
fistpl
jns
inc
loop
shr
sbb
out
pop
pop
inc
mov
mov
js
lock
jg
cmp
ret
in
mov
add
sub
out
inc
rorb
je
ret
in
stos
loop
into
jmp
pop
push
out
dec
jmp
icebp
je
ja
xchg
mov
add
sub
imul
jl
sub
out
je
mov
xor
xchg
pop
jl
mov
mov
pop
adc
loopne
imul
and
push
or
data16
in
cmc
lea
xor
out
inc
scas
push
call
inc
lret
sbb
pop
jp
add
push
js
mov
cmp
jno
mov
fs
cmpsb
pop
push
cmp
xchg
sub
out
mov
lcall
jp
or
add
out
ja
add
xorl
jg
or
lahf
mov
jmp
aam
movsl
and
adc
cmpsl
or
ljmp
add
ljmp
xchg
push
sbb
addr16
enter
call
cmp
mov
iret
xor
inc
stc
cmpsl
jle
std
out
jo
pop
xchg
push
xchg
xchg
test
xchg
lods
pop
test
rorb
add
add
mov
out
xor
mov
ret
es
mov
jl
nop
out
adc
pop
out
mov
fwait
mov
ret
jmp
aam
in
fldl
mov
mov
add
push
subl
cmp
jb
out
lahf
daa
out
inc
mov
std
xor
les
cwtl
adc
push
push
out
jb
or
mov
out
sbb
push
lret
hlt
cli
pop
sbb
inc
out
add
call
mov
into
iret
cmpsl
je
jne
popf
and
xchg
out
sub
dec
out
leave
pop
mov
out
push
xor
sub
aas
pop
lock
or
pop
mov
jl
pop
jmp
cmpsb
out
imul
pop
stos
jecxz
cmc
mov
loop
xchg
cmp
dec
adc
mov
cmpl
jo
cmpsl
sub
nop
out
pop
insb
xchg
jnp
inc
addr16
mov
mov
out
in
inc
push
aaa
movsb
sbb
pop
cmpsl
stos
loop
mov
mov
lods
out
lcall
out
outsb
in
dec
iret
jns
enter
jnp
add
xor
jp
call
sub
lret
add
add
or
push
fwait
out
stos
jb
es
pop
adc
outsb
idivl
out
jp
mov
movsl
xchg
adc
and
sahf
lcall
add
bound
pop
out
rcl
fildll
mov
ljmp
out
xchg
add
push
loop
pop
shlb
fsubr
mov
jne
mov
andl
jp
push
mov
jge
iret
mov
jb
cltd
pusha
jne
mov
sbb
into
jg
sub
mov
stc
shll
fisubs
inc
insb
mov
ret
dec
out
cmp
xor
pop
mov
sub
ret
fistps
and
xchg
sahf
xchg
push
and
mov
jecxz
or
shr
lods
out
lret
test
and
add
data16
xor
movsl
lods
dec
pop
and
popf
test
push
ljmp
jg
std
in
cmp
sub
decb
sbb
rcr
aam
add
mov
ficompl
jbe
in
jmp
cmp
out
cs
negl
add
out
adc
mov
xor
sbb
in
ss
mov
jbe
test
sbb
ffreep
jns
fistl
popl
pushf
mov
aaa
mov
dec
mov
add
mov
ds
cmpsb
popf
loop
jne
push
clc
js
jmp
xor
and
sbb
imul
inc
lea
lret
add
jecxz
daa
lret
pushf
mov
push
arpl
sbb
mov
int3
repnz
push
jp
jbe
out
dec
mov
mov
or
pop
xor
out
icebp
pop
lea
loopne
sub
cld
lret
sub
addr16
xor
popa
stos
aaa
and
add
cmpsl
test
adc
ret
lock
sti
out
sub
sub
xor
adc
imul
mov
xchg
push
sbb
and
leave
out
fstpl
mov
lcall
push
pop
into
inc
xchg
pop
jbe
mov
mov
mov
xchg
pusha
stc
insl
jg
iret
cmc
mov
pop
nop
fimuls
or
lcall
mov
push
ret
adc
jle
leave
daa
inc
adc
out
sub
pop
jne
out
popa
inc
xor
jae
adc
sbb
xor
push
jg
mov
dec
cmpsb
jns
pop
orb
aas
mov
sti
in
inc
pop
popf
out
ljmp
cs
loop
jo
lds
xchg
cmp
outsl
jbe
call
aas
add
add
add
mov
cmpsb
sahf
cld
xchg
pop
test
pushf
out
cmp
xchg
inc
sbb
in
push
out
nop
insl
inc
and
fstl
out
lods
repnz
add
lods
or
scas
mov
imul
out
mov
mov
aas
mov
movsl
mov
rcl
out
mov
fiaddl
jne
rcr
pop
jnp
in
cltd
jbe
xchg
inc
outsb
push
out
pop
and
scas
notl
dec
or
sarb
and
ret
out
add
int
push
xor
jle
leave
lcall
out
add
jecxz
outsb
mov
mov
out
or
int
mov
sahf
dec
cld
mov
xchg
hlt
out
lret
sbb
jae
sbb
sub
outsb
out
testl
and
add
loop
lret
or
out
xchg
mov
loopne
mov
cs
out
mov
ljmp
xchg
cmp
shll
arpl
inc
stos
add
clc
and
in
adc
in
sbb
xlat
mov
mov
ljmp
outsl
pop
insl
and
add
lds
out
and
lea
pop
jb
repz
or
iret
ret
out
test
push
bound
out
jnp
shlb
lret
outsl
jb
jmp
push
adc
or
je
jno
stos
stc
jmp
add
lock
out
lahf
cmpsb
mov
ret
mov
fistpl
ss
push
mov
jne
xor
lods
xor
push
xor
dec
cmpsl
jmp
push
sub
jecxz
cmc
pop
or
pushf
mov
mov
out
and
stos
xor
popa
out
nop
adc
je
sub
cld
in
pushf
sti
mov
cmp
cs
xor
or
out
cwtl
in
inc
xchg
icebp
mov
es
loope
mov
dec
int3
out
repz
sbb
push
mov
int
inc
jae
jp
sub
popa
aas
and
leave
adc
xor
push
jge
jp
in
cs
pop
int
dec
pop
add
ljmp
lock
push
int3
or
lret
xor
lcall
mov
xchg
pushf
mov
sbb
out
sbb
bound
mov
out
inc
cmp
jbe
push
add
jle
add
fadd
add
lret
test
out
add
or
push
out
mov
xchg
insb
pushf
pop
sub
dec
mov
or
out
pop
mov
xchg
out
movsb
jae
jns
sbb
cmp
cmp
nop
out
or
mov
fcoml
or
inc
outsl
stos
icebp
loopne
mov
std
andl
imul
mov
dec
mov
cmp
xor
cli
mov
sub
dec
lcall
test
pop
mov
push
outsb
xchg
pop
lds
out
test
pop
pusha
icebp
mov
repnz
stc
xchg
jns
lods
mov
js
fsubl
jmp
fstpt
stos
out
hlt
movsb
pop
fld
inc
xchg
out
outsl
jae
push
movsl
mov
add
jo
aaa
adc
xor
adc
repnz
out
lahf
cmpsl
jns
xchg
outsl
cmp
lods
sbbl
push
pop
aam
mov
jb
nop
dec
mov
repnz
add
xchg
and
add
fs
seto
int3
shl
icebp
sub
inc
out
ret
dec
xor
jns
sub
fisttps
mov
xchg
negl
out
add
jo
fucomip
loopne
rcrl
out
clc
add
mov
xchg
xor
mov
data16
or
dec
out
fidivl
cmpsb
mov
mov
sub
das
push
cmc
ja
iret
scas
mull
jg
mov
jmp
mov
and
cmp
inc
mov
in
sub
das
push
outsl
fadd
and
or
or
mov
mov
jnp
sarb
push
dec
pushf
add
cmp
and
cs
out
jns
xor
mov
or
mov
pop
pop
xchg
ljmp
out
mov
cmpsb
mov
or
outsb
js
cmc
call
jo
nop
dec
dec
mov
stc
cmp
lods
push
mov
add
pop
inc
out
adc
cmp
sbb
lea
into
add
aam
out
push
pop
dec
ret
push
cwtl
push
sbbb
xchg
push
ja
lock
sub
lret
mov
lcall
hlt
popa
xor
lock
jecxz
mov
aam
sbb
lock
mov
ret
sbb
out
shlb
test
bound
dec
sub
mov
out
fadds
js
xlat
sub
xor
xchg
mov
mov
ret
cmpsl
addl
call
mov
lock
add
ds
xlat
aam
nop
add
aas
andb
or
cmp
ret
ficoms
aaa
cwtl
imul
pop
dec
lods
ret
jg
shll
sbb
ret
push
scas
and
hlt
out
pop
inc
aas
in
pop
jne
pop
cs
das
mov
xchg
out
mov
cltd
lret
and
adc
inc
adc
mov
loop
lahf
shlb
jo
jmp
adc
je
mov
imul
stc
stos
scas
sarl
pusha
out
pop
loope
xor
clc
add
out
push
push
lods
mov
and
jno
jb
or
fwait
out
andl
aaa
shl
mov
add
push
test
test
aam
jno
lahf
jl
in
daa
loop
xchg
sub
push
clc
stc
push
or
xor
addr16
xor
repnz
das
mov
filds
or
lea
imul
pop
fnstenv
int
aas
push
out
add
inc
cmpsl
dec
mov
cmc
dec
ffree
push
inc
data16
jge
sbb
insl
add
mov
test
loop
lcall
sbb
outsl
sbb
loopne
daa
xor
sar
lahf
or
push
mov
cli
mov
adc
pop
dec
or
pop
out
lods
cmp
inc
aaa
pop
je
cmpl
lret
pop
es
and
in
out
cmp
scas
sub
mov
xchg
nop
jb
inc
rcrl
inc
mov
ret
push
mov
pop
cmp
out
jae
lahf
fcmovbe
xor
jmp
insl
out
mov
jge
lahf
pop
sub
adc
pop
mov
fmuls
bnd
rcrl
repz
lds
xchg
push
mov
out
and
lods
push
out
ss
popf
testl
cmp
or
xlat
inc
add
lock
jns
fistpll
mov
out
add
icebp
adc
xchg
and
xrelease
mov
out
lock
sahf
dec
int3
jp
testb
loopne
popf
pop
dec
or
xchg
inc
push
out
push
jno
jnp
jle
push
cld
adcl
sub
mov
push
out
pushf
call
or
jnp
jle
loope
hlt
push
adc
xor
sahf
andb
icebp
aaa
clc
clc
cmp
ljmp
adc
aad
push
cmpsl
into
adc
push
scas
sbb
jmp
dec
push
loop
or
insb
pop
out
push
mov
and
cwtd
mov
aam
or
je
lahf
push
mov
xchg
pop
or
push
aas
jno
pusha
sbb
add
out
cltd
scas
mov
xchg
inc
pop
out
bound
and
dec
mov
lods
addb
out
jbe
or
dec
sbb
inc
pop
js
inc
lods
std
out
cwtl
stos
hlt
dec
sbb
cs
or
scas
popa
xor
push
mov
out
or
outsl
popf
out
sbb
cld
mov
fidivl
testl
jle
jnp
push
aas
stos
xor
into
jecxz
dec
inc
test
mov
in
repnz
ljmp
test
pop
jns
les
lods
sbb
enter
stc
cmp
adc
out
or
int3
out
mov
lret
xchg
andb
out
jns
mov
mov
add
das
in
xor
xchg
out
dec
scas
inc
dec
bound
mov
push
jp
insl
mov
sbb
in
out
pusha
push
in
xchg
add
jge
iret
ljmp
jne
movsb
jnp
inc
and
js
out
jg
inc
cltd
mov
xor
mov
test
push
repnz
sbb
incl
adcl
repz
test
ja
mov
imul
fwait
hlt
cmovge
mov
leave
outsb
rcr
or
out
sbbb
fiadds
test
pop
mov
pop
sbb
outsl
out
fs
insb
out
js
hlt
arpl
jmp
pop
stos
xchg
mov
inc
incl
mov
sysret
std
push
dec
out
jo
pop
mov
lea
nop
inc
out
iret
into
xchg
in
jmp
outsl
jle
repnz
out
push
add
mov
add
cmc
aas
mov
adc
es
sti
add
orps
out
ss
add
dec
das
popa
push
arpl
iret
ret
gs
dec
out
or
lcall
push
insl
jno
add
sahf
mov
and
aaa
jne
mov
cmp
lcall
pop
ljmp
out
jno
cmp
mov
fists
sbb
dec
xchg
xor
jb
hlt
insb
lahf
pop
out
sbb
cmp
leave
xor
movsb
aaa
jno
popf
and
loop
xor
cmp
pop
fisubrs
jl
fwait
pop
es
orl
add
adc
xchg
sbb
cmp
ret
pop
jmp
pop
enter
ret
in
out
adc
mov
push
lock
push
adc
add
call
icebp
aam
fwait
loope
dec
mov
push
out
add
aas
mov
or
ds
jp
gs
cmp
out
movb
dec
and
out
movsb
xor
inc
das
test
fnstcw
and
out
enter
rcr
repz
rcrb
lsl
out
dec
cmpsl
cmp
out
imul
out
sarb
adc
push
sbb
jmp
inc
xchg
add
shr
dec
insl
dec
push
fwait
mov
loopne
sbb
inc
clc
rcll
lret
loope
test
dec
fadds
mov
sub
mov
jnp
sarb
and
jp
dec
lret
mov
jne
fldcw
adc
push
out
jecxz
push
push
movsb
mov
nop
je
inc
les
repz
sub
lea
call
xchg
out
add
in
arpl
shrl
push
fdivl
or
xor
inc
and
repz
jecxz
in
sbb
sub
jg
mov
cmp
out
xor
mov
mov
push
leave
jno
mov
aaa
out
jbe
lods
mov
pushf
jp
leave
or
jmp
out
into
mov
data16
pop
test
pop
push
call
jg
sub
into
sub
out
in
pop
and
arpl
add
out
adcl
jmp
mov
mov
fistl
inc
out
hlt
jle
mov
mov
loope
sub
in
dec
sub
out
aas
push
fwait
jg
out
mov
lret
lods
out
stos
add
sbb
jle
sub
int
imul
and
mov
pop
or
xchg
loope
imul
mov
xchg
xorl
mov
in
mov
loope
or
cmpsl
jns
dec
pop
fwait
xor
cs
lea
adc
lcall
add
icebp
ss
mov
mov
or
sahf
ret
out
das
pushf
xchg
popf
jp
pop
ret
out
fistpll
jae
loope
in
and
iret
lret
out
es
mov
fstpt
ror
mov
scas
iret
or
repz
ret
mov
ret
or
ds
fs
xchg
addr16
bound
mov
out
adc
xor
jne
sub
add
rcrb
inc
pop
les
mov
xchg
push
jp
dec
cmp
push
fwait
xchg
sbb
jo
cmp
inc
pop
mov
aam
aam
sub
cmp
roll
adc
cmp
out
cmp
out
sahf
scas
mov
out
test
int
mov
add
mov
lods
es
clc
cmp
cmp
mov
jae
jne
shl
mov
sbb
mov
call
adc
dec
jbe
fwait
popf
pop
xor
xchg
pop
pop
pop
test
std
jns
lret
and
add
jmp
fistpl
cmp
mov
loop
jae
addr16
lea
das
iret
out
jns
and
out
in
xchg
nop
fiaddl
add
jge
adc
jns
cmp
and
leave
into
loop
or
jne
inc
jecxz
test
lea
or
mov
jb
mov
lods
loopne
aam
sub
out
or
add
out
jg
cli
lods
fwait
int3
mov
xor
cwtl
fisttps
out
xchg
loopne
jecxz
int3
pop
std
out
xchg
cmpsb
sbbb
mov
insb
pushf
dec
mov
in
pop
test
out
mov
xchg
out
cmp
out
movsb
cmpsb
xchg
cmc
jns
and
fs
clc
cmp
ljmp
out
ret
xchg
sub
jmp
pop
out
lds
fxtract
dec
out
pop
push
sbb
pop
loop
xor
out
add
js
cmp
adc
ds
out
jns
in
aas
fcmovne
xlat
xor
lods
xchg
xchg
in
je
mov
push
inc
out
ror
mov
fdivrs
jne
mov
add
inc
out
movsb
dec
insb
adc
cs
mov
into
add
sub
mov
dec
mov
pop
pop
cltd
cli
outsb
jae
std
or
pusha
lret
loop
cld
dec
xchg
jne
pushf
lret
out
cwtl
shrl
mov
mov
or
int
xchg
push
fld
xor
data16
xor
cs
std
in
stos
inc
xchg
sbb
push
push
cmpsl
dec
cmc
push
and
test
pop
add
mov
mul
movsl
sahf
rcrb
daa
push
nop
cltd
pop
adc
pop
sti
inc
pop
icebp
mov
mov
stos
push
test
movsb
out
seto
and
lock
cmp
xor
mov
insb
mov
out
arpl
push
clc
addl
fwait
ljmp
pop
mov
dec
out
repz
orl
xchg
and
and
mov
jnp
je
les
dec
std
sti
jp
add
aas
push
xchg
push
rcrl
push
inc
lahf
push
mov
out
mov
test
out
ret
out
ret
cmpsl
cltd
out
dec
aad
lea
xchg
fsts
jle
mov
dec
mov
mov
mov
mov
sub
dec
fisubs
mov
or
sbb
out
or
out
push
pop
xchg
mov
mov
pop
fmull
jne
cld
in
jb
in
insb
jle
out
in
mov
or
pop
mov
add
adc
sbb
cs
in
sbb
aad
cmc
out
jge
ds
jnp
mov
push
mov
add
int
sbb
pop
lahf
sub
out
xlat
sub
repz
out
push
push
and
inc
gs
mov
cmp
out
dec
mov
out
movsb
daa
xchg
out
pop
sub
test
push
dec
out
xchg
push
jo
push
and
dec
scas
sbb
ljmp
scas
idivl
sahf
xor
or
xchg
inc
jne
je
iret
mov
out
cwtl
sub
mov
add
cmpsb
hlt
push
mov
out
cmp
xchg
mov
jnp
mov
insb
add
add
call
stc
cwtl
filds
dec
andl
mov
lods
in
mov
xchg
sub
lods
fldl
and
dec
es
daa
out
push
jb
out
push
stos
xchg
jae
lcall
fsubl
fwait
lahf
out
sub
xchg
les
pop
popf
dec
and
fisubrs
aas
sbb
sbb
out
imul
iret
lahf
pop
cmpsb
ja
jne
mov
mov
ljmp
xchg
xchg
or
push
push
jge
pop
fldcw
dec
pop
stos
pop
sbb
addr16
push
sbbb
sti
push
jb
arpl
popf
les
mov
out
xor
mov
sub
lahf
push
jb
out
mov
xor
sub
out
or
stos
sahf
jmp
popf
out
out
sbb
insb
and
xchg
cmpsl
xchg
push
jecxz
std
mov
jo
ja
fwait
out
jg
adc
push
adc
fsub
push
mov
mov
out
jge
test
or
lock
xchg
popf
jp
jmp
out
mov
jnp
and
sub
fs
sub
xchg
ret
jae
jne
xchg
add
imul
pop
popf
out
icebp
jo
clc
stos
out
aas
sahf
fistpl
mov
jg
lahf
push
xchg
int3
inc
shlb
insb
mov
aam
in
out
or
int3
xchg
dec
sbb
mov
stos
sbb
stos
mov
fwait
cmp
out
out
das
inc
pushf
hlt
pop
daa
aam
jne
dec
and
lea
jae
mov
aaa
fmull
rorb
pop
inc
out
lret
pop
push
sub
cmp
cmp
out
iret
shll
mov
shll
repz
push
out
xchg
sbb
stc
xchg
test
and
imul
in
cmc
ds
pop
jbe
rcrb
jbe
mov
out
enter
xlat
mov
mov
aaa
inc
outsb
or
fldl
adc
inc
jle
jnp
sbbl
adc
jb
mov
xor
scas
lods
mov
gs
test
cs
out
jp
int3
inc
mov
jg
mov
mov
out
movsb
ja
and
out
out
and
int
std
jp
out
lods
test
xor
lcall
out
jbe
mov
cli
shl
xor
gs
pusha
add
aam
daa
add
inc
jle
shll
sbb
aam
addb
out
or
xor
jno
xor
and
addr16
adc
mov
gs
xor
push
jmp
mov
jp
shrb
xorl
push
out
inc
mov
xlat
mov
imul
mov
fs
push
mov
insb
pop
mov
leave
insl
push
mov
pop
enter
push
add
xor
loop
jno
popa
jb
ret
out
orl
adc
add
pop
fcmovbe
jne
push
cmc
outsl
imul
stos
sub
jmp
cmpl
or
jle
mov
imul
xchg
add
jae
or
and
inc
push
lods
pop
mov
push
out
je
and
cmp
xchg
rcll
mul
mov
xchg
jbe
pop
cmp
sti
out
sub
sub
fst
sub
mov
dec
popa
dec
rolb
dec
xchg
add
ljmp
add
xchg
mov
mov
int3
subl
out
adc
push
push
mov
lret
xor
xorb
sbb
stc
jmp
cmpsb
jp
sahf
mov
out
or
xorb
scas
ss
push
cmp
fld
inc
es
andb
mov
out
cmp
mov
or
ljmp
shrb
mov
dec
insl
sub
clc
jl
inc
pushf
mov
fidivl
xor
lret
mov
out
add
out
xorb
xchg
sahf
adc
shr
insl
pop
dec
and
mov
mov
test
adc
data16
sub
mov
mov
fwait
cmpsl
or
and
scas
test
out
mov
sub
or
push
mov
mov
loope
add
adc
fwait
lret
out
fcoml
push
insb
mov
xchg
lret
cwtl
mov
or
push
sub
mov
and
cmp
inc
loopne
out
in
jno
xorb
add
mov
sbb
push
lret
daa
push
inc
adc
xchg
sahf
lret
mov
dec
test
test
cmpsb
cmpsb
jmp
xor
dec
aas
rcl
xchg
inc
fldl
dec
aam
aam
xchg
sbb
mov
dec
std
iret
pop
jb
fnstcw
mov
rol
xchg
and
imul
out
jge
sahf
iret
and
push
jp
bound
mov
push
inc
add
pushf
sub
sbb
pop
iret
icebp
xchg
sti
mov
dec
xor
push
in
out
push
inc
mov
movsl
pop
pop
popa
sub
jo
out
push
push
movsb
ds
add
mov
jle
inc
xchg
pushf
pusha
add
dec
sub
or
xchg
jbe
out
or
mov
out
popf
loopne
cmp
fwait
je
outsb
sbb
lock
js
lds
or
lock
lds
xchg
cld
sub
loope
fwait
out
adc
sbb
fldt
mov
sti
out
outsl
gs
out
jecxz
push
mov
stos
mov
mov
popf
cmp
pop
pop
out
push
lods
aad
cltd
out
push
gs
nop
loop
out
cmp
fbstp
or
mov
push
mov
cmpsl
ljmp
jae
dec
hlt
and
out
lret
mov
xor
add
dec
mov
out
popa
sbb
jne
cmpl
cmpsl
fwait
test
dec
lods
push
xchg
inc
out
pop
stos
xor
jne
outsb
out
jbe
aam
enter
int
dec
shll
outsb
out
lock
inc
and
lret
sbb
sub
xor
xor
clc
lock
loop
rorb
xchg
out
das
push
push
cs
fldcw
xchg
movsb
mov
jmp
sahf
add
mov
push
out
hlt
and
setnp
popa
mov
repz
xchg
aaa
repnz
data16
jns
fwait
orl
repz
lods
out
mov
sbb
push
mov
push
xchg
add
repnz
sti
jae
loop
sub
xor
push
push
scas
ret
sbb
sbb
fwait
lock
jno,pn
icebp
jbe
test
fsubs
dec
and
shrb
lods
sub
push
lret
movsb
repnz
xchg
sub
cmp
test
add
mov
dec
rep
jbe
movsl
add
insl
dec
loop
out
sarl
in
jns
test
xor
out
stc
sub
movsb
adc
and
push
adc
ret
out
inc
cbtw
inc
xor
std
out
cmp
push
out
in
pop
cmpsl
loopne
insl
out
inc
mov
or
mov
sbb
push
jne
jbe
sbb
and
xchg
cltd
out
dec
inc
fwait
mov
sub
push
add
jns
dec
or
dec
xchg
loope
mov
mov
xor
xor
iret
shlb
movsb
ljmp
dec
test
pushf
pop
icebp
out
or
jbe
movsb
dec
repnz
out
insl
inc
pop
inc
dec
mov
test
jg
es
and
inc
push
leave
mov
in
push
bound
out
int
fbld
repz
pop
pop
add
mov
mov
outsb
aaa
pop
fistl
xor
mov
mov
out
repnz
sbbl
push
sub
cmc
xor
or
lahf
xchg
shll
xor
test
scas
push
add
out
out
mov
test
lret
xor
cwtl
sub
sub
mov
jp
bound
mov
into
inc
pop
mov
icebp
lcall
ffreep
cli
jecxz
and
fwait
out
insl
stc
out
mov
lret
mov
filds
gs
xor
test
das
dec
popa
sbb
sti
push
mov
inc
and
mov
mov
int
in
out
and
or
out
adc
test
out
mov
jecxz,pn
scas
mov
add
adc
mov
gs
insl
cwtl
in
inc
loop
sub
sbb
ror
and
test
popf
adc
mov
jg
pop
dec
jns
sub
pop
std
aam
inc
mov
sahf
sub
fists
add
fxch
insb
addr16
cmp
int3
jns
ret
sbb
xor
xor
out
push
cli
sti
cmpsb
aaa
out
mov
ss
lret
in
repnz
sbb
shl
daa
and
jg
adc
mov
pop
push
loop
dec
pop
out
pushf
or
ss
lods
inc
mov
stos
out
push
jp
xchg
hlt
dec
fisubl
out
xor
scas
mov
addr16
rorb
add
out
mov
mov
pextrw
and
inc
xor
out
sbb
lahf
out
mov
cmpsb
pop
pop
pusha
or
push
jle
enter
sub
in
mov
push
xchg
std
lcall
push
mov
and
jb
add
mov
sbb
out
pop
and
dec
add
enter
inc
lret
pop
xor
xor
adc
cmp
out
mov
scas
popa
jne
adc
ss
jmp
out
inc
push
xlat
pop
insb
arpl
out
xchg
or
leave
add
clc
pop
sbb
lock
outsb
mov
out
push
mov
cmp
sbb
out
daa
outsl
das
mov
adc
pusha
push
out
pop
pop
or
xor
out
cmp
push
adc
out
and
je
stos
pusha
out
jb
xchg
test
in
repz
and
fidivl
sbb
mov
test
loopne
add
jne
lods
iretw
int3
jmp
fmulp
mov
lock
and
stc
cwtl
int
add
test
inc
lcall
bound
out
and
cmp
push
add
jno
and
insb
pop
out
mov
hlt
test
mov
cs
mov
jns
out
pop
add
mov
push
xor
popa
repz
test
fs
out
add
sar
es
pop
lods
adcb
test
mov
aam
mov
cmc
icebp
inc
jg
aam
xchg
dec
aam
iret
cmp
mov
outsl
mov
mov
mov
int
xorb
jo
out
inc
adc
dec
movsb
mov
xor
adc
cwtl
lret
xchg
gs
stc
xchg
repnz
or
sbb
mov
lret
vshufps
mov
jne
mov
mov
out
mov
sub
mov
cwtl
cmpsl
push
xchg
test
roll
out
dec
push
add
sarl
xor
inc
sub
out
add
out
into
dec
lock
and
push
aad
mov
ljmp
push
je
cwtl
push
xor
loop
nop
pop
rolb
jge
or
inc
in
push
inc
pop
xchg
cmp
gs
scas
lods
loop
pop
or
mov
out
and
jno
int3
ret
scas
push
pop
mov
sub
jo
out
inc
jno
stos
int3
jo
xchg
push
loope
inc
out
lock
mov
pop
repz
xchg
lea
sbb
pop
nop
push
ret
cmp
sub
ret
outsb
push
xor
das
outsl
out
and
add
adc
shr
pop
ficoml
mov
lods
mov
xor
inc
add
add
in
sub
push
mov
adc
cmp
into
jl
nop
jecxz
jne
les
sbb
jns
out
dec
movl
incl
pop
cmp
out
dec
mov
pop
dec
mov
dec
out
rorb
popa
clc
sub
sub
add
push
pop
adc
out
adc
lcall
push
aam
xor
xor
pop
ret
out
mov
sar
and
out
or
cmp
out
scas
pop
mov
inc
fcoml
xor
sahf
mov
out
xchg
es
je
sub
ljmp
lock
out
mov
jnp
cwtl
sub
or
outsb
vmovupd
push
out
inc
mov
pop
mov
icebp
repnz
clc
xchg
jo
cli
stos
xchg
loopne
xor
mov
jne
jno
cmp
pop
mov
jg
add
loop
scas
and
sbb
out
push
int
jns
lea
arpl
mov
push
and
push
test
out
mov
push
frstor
and
or
push
shl
in
aaa
cmp
js
xchg
out
jl
inc
pop
rcrb
sbb
jnp
xchg
mov
mov
out
int3
mov
push
lret
and
lods
mov
mov
add
int3
push
xchg
inc
out
fdivs
call
push
faddp
inc
mov
pop
add
push
jae
or
sub
in
push
xchg
out
lcall
add
mov
xor
pop
push
rcl
push
pushf
cmp
xchg
jnp
out
mov
cld
pop
add
out
ja
aas
mov
cwtl
fildl
jge
mov
and
out
inc
jmp
jecxz
mov
mov
out
add
mov
ret
xor
jmp
fwait
int
cmp
mov
mov
repz
mov
pop
xchg
and
cmp
jmp
inc
fwait
pop
inc
push
sarb
out
sbb
dec
sahf
cld
aam
cli
repz
push
test
dec
mov
xor
imul
inc
xor
sbb
jge
in
sub
out
scas
pop
or
pushf
cmc
jb
inc
out
jp
sahf
mov
cmp
sbb
inc
add
out
gs
and
subb
add
or
addb
dec
leave
add
sub
out
adc
push
xor
out
enter
sub
ss
leave
popa
xchg
jp
lock
mov
mov
cmpsl
mov
sbb
dec
mov
sahf
aas
xor
cld
xchg
pop
nop
or
cmp
ljmp
jne
or
inc
push
cmpsb
xchg
hlt
pop
lods
mov
ret
cmc
ljmp
out
arpl
and
repnz
into
or
cld
jne
cltd
ficompl
jb
jl
aaa
cmp
or
imul
ret
scas
sbb
iret
add
cmpsb
cmp
mov
ss
or
mov
out
inc
icebp
push
incl
aas
out
mov
sbb
test
popa
out
mov
gs
test
pop
out
cwtl
roll
pop
cmp
mov
nop
xor
or
cmp
enter
lods
ret
out
lret
and
fwait
jg
sub
and
jmp
repnz
xor
inc
out
fistps
out
mov
jmp
add
fs
push
mov
xchg
insb
xchg
xchg
out
pop
add
xor
jo
out
push
iret
adc
mov
and
mov
pop
mov
mov
push
sbb
out
aas
fistpll
das
movb
icebp
cmp
and
out
loopne
xchg
in
jne
out
int3
jnp
mov
jb
out
mov
mov
negb
sbb
mov
push
mov
out
xlat
aad
xor
repnz
push
out
pop
xor
add
fsts
out
loop
jb
pop
data16
out
jbe
enter
inc
mov
inc
out
out
inc
jns
lahf
pop
out
jl
int
sbb
jo
out
pop
mov
mov
les
and
sbb
js
cmpsl
inc
hlt
xchg
out
repz
dec
jnp
cmc
out
stos
mov
jb
mov
push
movsb
sarl
inc
ds
cmc
mov
or
out
jge
xchg
xor
cltd
add
mov
sub
jb
arpl
mov
nop
pushf
cmp
out
inc
test
lock
and
mov
inc
xchg
xchg
push
xchg
stc
mov
ljmp
pop
dec
outsb
push
fistl
popa
stos
and
out
orl
jmp
push
jbe
int3
cmp
or
or
sbbl
out
sbb
lds
or
popa
dec
outsb
out
lcall
dec
push
pop
ljmp
mov
sbb
addb
call
shl
cli
out
mov
out
push
push
xchg
mov
dec
mov
sti
add
out
test
xchg
sbb
mov
pop
out
aaa
adc
out
or
ret
out
lret
add
fwait
mov
inc
adc
lds
shrb
jbe
sub
test
test
cmp
daa
leave
push
mov
out
seto
das
and
mov
loop
scas
mov
clc
loop
push
lret
mov
ja
insb
jg
sbb
test
and
pushf
jl
int3
and
mov
jb
pop
jno
and
or
mov
leave
arpl
push
stos
push
mov
pop
mov
out
and
fwait
sub
cmp
mov
pushf
push
rolb
es
jmp
rorb
dec
push
adc
shll
sbb
xor
out
adc
adc
pop
pop
out
jp
loope
int3
push
dec
adc
shl
outsl
pop
and
jo
out
in
push
inc
add
es
lods
pop
arpl
inc
movsl
inc
push
cld
pushf
out
push
aas
push
mov
sti
jp
dec
es
cmpsb
aam
jg
out
dec
int
enter
inc
pop
push
pop
mov
xor
dec
push
aam
in
cmp
out
jp
pop
jbe
cmc
jae
cmp
add
push
xchg
mov
clc
rcr
stos
xchg
hlt
outsb
jno
sub
out
xlat
adc
add
pop
repz
mov
lods
push
dec
mov
add
in
cld
out
mov
and
test
mov
fldl
popa
imul
adc
fwait
out
addr16
jbe
mov
cmp
out
nop
cli
into
cmp
and
in
mov
inc
push
inc
adc
xchg
mov
ljmp
mov
shufps
ds
data16
ret
subl
cli
mov
cmc
out
faddl
push
out
incb
int
lods
dec
out
push
inc
push
loope
push
fwait
out
addr16
push
rorl
imul
xchg
or
rolb
xchg
mov
sub
push
lods
inc
pop
out
and
inc
and
sub
cmp
imul
mov
jmp
ret
stc
dec
cmpsl
in
and
mov
pop
add
lods
shl
sub
aaa
add
mov
cmp
test
fistps
shll
sbb
xor
cli
jmp
dec
es
clc
stos
gs
out
sbb
scas
es
dec
jp
sub
in
add
out
pop
aam
enter
or
int
xor
in
scas
std
ret
dec
ds
sahf
inc
rorb
cmpsb
inc
je
aam
adc
cmp
jmp
push
loop,pn
cmp
insl
push
out
jne
mov
repz
andb
jo
ss
sbb
out
test
push
or
xchg
jne
hlt
push
aas
jg
cld
ljmp
add
jecxz
adc
out
push
lods
insb
mov
add
dec
cmp
aam
mov
add
push
out
ljmp
push
jle
pop
lds
push
aam
sarb
out
dec
popa
aam
sub
mov
mov
cmc
or
mov
call
jne
push
nop
cld
loope
adc
stos
js
push
pop
dec
movsb
out
pop
call
cltd
jne
inc
and
call
inc
in
repz
mov
out
push
lods
scas
jp
pushf
out
sbb
subl
fldenv
mov
clc
out
les
loop
cmpl
out
xchg
sbb
movsb
insb
out
jge
cwtl
lahf
mov
out
xchg
jne
mov
out
mov
jae
lret
test
xchg
adc
lea
mov
rclb
lds
das
cs
pop
xchg
fcompl
shl
aas
aam
or
mov
jecxz
inc
xchg
in
out
and
add
xchg
loope
dec
fisttps
cmc
jge
adc
add
mov
lods
push
sti
add
lock
pusha
sets
cmp
adc
fneni(8087
ror
dec
andb
mov
cld
lret
bnd
in
sub
ret
mov
pop
int3
cmpsl
out
jbe
cmc
pop
mov
mov
cld
xchg
adc
adc
mov
mov
mov
imul
lcall
mov
in
repnz
dec
dec
sub
xchg
add
adc
into
mov
or
lahf
dec
test
adc
or
push
mov
xchg
adc
jbe
inc
dec
pop
daa
out
jge
sti
fs
ret
adc
cmpsl
sbb
sub
inc
das
mov
dec
out
push
sub
mov
aaa
sar
mov
mov
test
ss
xchg
and
pop
popf
inc
pop
out
popa
fistpl
jg
gs
scas
faddp
lea
push
int
xchg
push
enter
out
sub
jp
jecxz
ss
jl
repz
loope
cwtl
cmpsb
xor
push
adc
cmc
cmp
js
jbe
pushf
dec
and
filds
inc
mov
dec
xor
or
cmpl
mov
out
sahf
cmp
ss
sub
out
xlat
fucomip
sbb
or
add
loop
nop
loopne
inc
out
and
cmp
test
dec
mov
pop
ljmp
push
jbe
cmp
out
jecxz
fwait
mov
out
pusha
pop
jg
in
add
out
inc
dec
pop
repz
aas
or
mov
sub
dec
leave
mov
loop
in
pop
out
aaa
lock
daa
jle
push
out
sub
clc
movsl
sbb
jge
add
call
push
or
lret
push
out
inc
pusha
pop
xlat
sub
add
or
jmp
push
mov
push
add
cli
or
out
adc
gs
je
out
mov
out
or
xor
repz
push
push
push
les
push
out
push
sub
pop
lock
sub
lods
sti
test
lahf
leave
or
stos
mov
mov
fs
bound
outsl
or
xor
add
pop
push
in
inc
push
jo
xor
out
call
out
pop
mov
mov
jle
out
addr16
mov
pushf
add
push
sahf
adc
lods
out
inc
subl
lods
mov
sub
jmp
ja
cmc
or
outsb
mov
cli
push
xorb
push
push
xor
mov
shl
dec
sbb
xchg
insl
dec
sbb
imul
add
pop
out
and
inc
inc
inc
jns
jp
xor
jle
scas
cmp
jne
icebp
mov
jns
sahf
leave
or
mov
shlb
mov
pop
xchg
lea
dec
out
in
inc
push
out
mov
mov
out
mov
cmp
sub
add
in
sub
xor
idivl
xchg
lcall
loope
add
inc
imul
out
scas
loop
lds
sbb
fdivrl
adc
out
mov
mov
out
adc
andl
and
xor
xchg
xchg
es
cmp
repnz
dec
js
inc
jp
adc
dec
jae
inc
stos
push
aad
iret
repnz
jmp
cmp
cmp
push
inc
arpl
adc
aam
fwait
stos
jne
adc
inc
repnz
pop
ret
das
pop
addr16
xor
dec
pusha
sahf
ret
decl
out
xchg
mov
gs
push
pop
sub
cmp
out
outsb
insb
aam
incl
and
iret
sub
xchg
test
sub
mov
sub
iret
call
cltd
out
and
and
mov
inc
lds
jle
jmp
or
xchg
out
cwtl
fs
adc
das
out
movsb
hlt
std
inc
inc
adc
and
sub
and
daa
mov
mov
nop
mov
jp
dec
pusha
scas
and
add
xor
mov
mov
xchg
repz
loopne
mov
out
ds
push
ret
inc
out
pusha
les
add
dec
out
cmp
mov
xor
dec
or
stc
scas
ds
mov
insl
outsb
and
icebp
pushf
aaa
xchg
jne
dec
push
lds
out
cmc
mov
mov
pop
jne
test
push
shlb
inc
lret
pop
pushf
xchg
std
mulps
mov
push
das
pop
aad
push
push
out
adc
addr16
pop
les
out
add
test
addr16
mov
jl
inc
jecxz
sub
in
cmc
and
out
scas
jg
lret
mov
ljmp
ret
xchg
sbb
and
int3
push
inc
push
lock
push
inc
hlt
sbb
lock
or
cli
ret
out
mov
lea
dec
rcl
out
insl
outsl
pop
adc
es
and
xchg
daa
xor
sub
addr16
js
ror
addr16
inc
or
int
pop
movsl
scas
add
sbb
push
test
mov
or
out
aad
cltd
out
ljmp
add
out
stos
faddl
cmp
inc
lock
out
push
inc
mov
xacquire
jp
jo
sub
out
fmull
push
out
bound
repnz
adcl
lcall
repz
add
mov
lods
push
bound
jecxz
adcl
sar
cmpb
mov
sub
mov
hlt
dec
or
sbb
cmp
nop
mov
xchg
push
mov
arpl
loope
out
and
fmulp
inc
out
add
dec
sbb
inc
je
inc
outsb
in
ljmp
adc
and
out
xor
push
adc
xchg
jmp
cmp
in
incb
bound
pop
and
mov
and
je,pt
out
mov
mov
xor
sub
insl
add
push
or
cld
jmp
gs
jb
into
mov
outsb
xor
lahf
xor
loopne
insl
hlt
inc
out
push
lock
xchg
xchg
lret
add
fadd
push
in
and
inc
cmc
mov
mov
jbe
or
pop
push
out
or
dec
out
call
das
add
fisubs
and
and
xchg
out
mov
nop
mov
jecxz
out
mov
mov
aas
push
imul
cwtl
inc
repnz
out
jae
mov
adc
out
or
pop
xchg
pop
mov
xchg
mov
out
sbbb
out
push
lret
xlat
jne
or
repz
movsb
cs
or
dec
push
out
sbb
xchg
out
jmp
and
outsl
out
aaa
mov
ljmp
pop
std
pusha
xchg
mov
shl
test
jl
fdivl
add
test
iret
ret
es
test
out
ret
pop
xchg
repz
mov
add
adc
out
inc
dec
push
mov
repnz
stos
jp
orb
jns
and
stos
inc
mov
cmpsl
add
adc
and
imul
jmp
iret
out
mov
or
aas
sbb
ror
cmpsl
ret
hlt
out
rorl
ljmp
out
enter
add
out
hlt
cmp
packsswb
cmp
out
jns
dec
mov
lods
stos
test
xor
out
pushf
out
lock
ret
pop
pop
xchg
ret
push
add
jl
push
sbb
dec
cmp
mov
out
pop
out
and
push
std
insb
xchg
pop
call
push
add
lock
dec
push
push
int
pop
add
jg
lahf
xchg
jb
addr16
cmpl
sub
aaa
sbb
orl
aam
add
sahf
out
xor
icebp
and
mov
aas
rcrl
out
insb
cmp
out
jbe
repz
xchg
or
in
xorl
pop
out
cltd
sub
and
mov
ljmp
add
loop
daa
popf
movsl
lock
mov
push
mov
jns
or
push
inc
pop
test
dec
push
shl
imul
push
or
out
mov
fs
out
pop
mov
mov
mov
pop
nop
pusha
test
jecxz
or
xchg
ljmp
out
add
stc
and
aas
jne
loope
fcoms
out
sub
push
out
dec
inc
fcomi
or
pop
ljmp
jp
ffreep
mov
mov
test
push
adc
mov
or
fnsave
test
ljmp
jp
repz
or
nop
leave
fcompl
aam
mov
lds
outsb
test
pusha
push
popa
add
out
clts
jle
cli
jo
out
cwtl
mov
mov
jae
xor
insb
push
scas
mov
mov
jg
xlat
adc
cmp
out
mov
xchg
adc
inc
sub
jmp
daa
lods
sbb
out
push
inc
add
mov
sub
jne
mov
sbb
into
sbb
cmp
push
in
and
pop
adc
sti
out
or
jne
lds
cmp
in
adc
adc
sub
test
lcall
lods
or
cmp
and
jnp
jae
inc
inc
ljmp
mov
sbb
xor
cli
add
je
dec
pop
push
inc
repz
movsb
ljmp
cmpsb
stc
inc
add
pop
mov
or
add
out
mov
movsb
sbb
es
out
sub
fsubrl
push
or
xchg
pop
loop
aas
mov
out
jge
jns
xchg
xorb
or
fs
jg
out
pop
mov
ja
push
test
sarb
xchg
mov
and
out
ds
pop
test
sub
dec
out
and
jp
pop
daa
popa
cwtl
out
aad
xor
jecxz
inc
mov
mov
call
cli
add
std
mov
push
sahf
lret
add
inc
pop
cmp
pop
es
fcompl
inc
pop
mov
shrb
mov
ljmp
bound
sub
scas
test
out
mov
movsb
mov
mov
shrl
out
fisubrl
xor
inc
lret
pop
dec
in
out
mov
popa
lahf
out
mov
leave
loope
pop
jp
mov
cmpsb
scas
ss
inc
movsb
nop
add
out
aam
stos
mov
sub
mov
push
jns
js
shl
mov
sbb
push
movsl
leave
fildll
cmp
lods
xor
add
aam
out
repnz
popa
fwait
cmpsb
and
pop
mov
or
aam
out
jmp
fwait
lods
test
out
mov
cmp
cmpsl
sahf
fidivs
push
shll
cs
in
mov
es
stos
mov
push
push
xor
mov
mov
and
movsb
insl
adc
popf
out
iret
dec
push
out
outsb
ret
std
xchg
adc
sub
sbb
int3
mov
push
je
xchg
inc
sbb
jne
and
arpl
cwtl
out
in
outsl
mov
jns
mov
shlb
in
xchg
out
mov
in
cmc
test
dec
sub
out
pand
sbb
das
xchg
shr
xor
cmp
xlat
mov
into
jnp
and
cmp
jle
pop
adc
stos
push
jne
push
clc
jno
adc
out
enter
or
stos
out
and
xor
sbb
inc
les
out
cltd
mov
cmp
jne
jnp
sbb
in
mov
fwait
sets
pop
push
ljmp
out
jmp
ret
mov
mov
daa
mov
loope
pusha
adc
icebp
dec
lock
ret
xor
inc
int
iret
add
dec
pop
ret
jo
test
in
push
pop
mov
sbb
out
pop
scas
jg
xchg
add
aam
ja
jle
pop
leave
dec
adc
aam
fdivs
mov
les
sar
jbe
daa
jmp
inc
repnz
sub
jge
aam
push
call
out
fwait
ret
pop
mov
test
xor
out
add
sbb
or
or
xor
stos
aad
and
cmp
loope
fucom
test
push
adc
out
movsb
add
aaa
out
cmpsb
adc
int3
sbb
dec
jne
xor
cli
adc
sub
jo
xchg
scas
sbb
pop
add
inc
adc
out
jns
iret
pusha
xchg
out
insb
aam
push
int3
mov
out
pop
xor
cmc
push
mov
cmpsl
loop
jb
ret
push
out
push
scas
pop
mov
cmp
ja
out
mov
ss
xchg
ret
mov
lcall
repnz
pop
cmp
out
mov
mov
xlat
mov
iret
jl
mov
out
jbe
repz
or
fnstsw
mov
dec
xor
daa
adc
out
test
jmp
pop
sub
jg
push
mov
mov
shll
test
xchg
cmpsb
add
clc
jae
xchg
in
cwtl
jge
mov
xor
mov
stos
dec
adc
iret
mov
cmp
dec
push
cmp
daa
pop
add
bound
out
test
out
ret
lcall
ss
fstps
mov
lahf
mov
in
mov
mov
push
bound
xchg
dec
mov
out
xor
shlb
mov
lock
cwtl
imul
sbb
aam
xor
dec
gs
ljmp
std
sbb
out
cmpsb
insb
mov
push
clc
xor
out
sub
insl
and
icebp
add
ljmp
into
push
das
mov
out
mov
xchg
inc
mov
mov
jp
subl
add
dec
movsb
mov
pop
out
adc
enter
pop
jg
mov
xchg
jmp
out
std
rcll
inc
stos
pop
ret
sub
push
adc
inc
out
or
jmp
test
inc
out
pop
fistpll
cwtl
les
icebp
pop
movsb
std
ret
jecxz
add
lods
mov
xchg
aam
jae
push
test
mov
scas
test
enter
sbb
int
dec
insb
pop
call
cli
pusha
jecxz
push
out
aas
je
addb
lcall
sub
outsl
mov
mov
and
imul
push
shll
out
dec
daa
jbe
insb
or
lret
in
xor
xchg
aam
jo
sahf
aas
sahf
push
jne
rorb
pop
adc
mov
rolb
test
mov
out
daa
pop
popa
movsl
jg
jmp
mov
fisubs
fstpt
sub
mov
xchg
add
or
es
push
jle
les
jne
ret
nop
call
mov
mov
add
ljmp
sub
and
add
loope
push
ds
stos
cmp
pop
loopne
pop
fwait
or
js
push
mov
out
mov
int
xor
sub
out
ds
ret
fmuls
out
mov
pop
mov
shl
lret
pop
icebp
dec
lods
mov
out
push
xorl
mov
stc
add
xlat
sbbb
mov
ja
inc
add
out
sub
loope
jmp
xorb
shll
ds
mov
sbb
fsts
adc
loopne
jg
test
mov
sub
fmulp
pop
movsl
rcrl
out
fwait
sbb
insl
add
pop
shll
xor
pop
push
les
push
or
or
or
leave
jl
xor
xor
push
int
xchg
mov
out
out
iret
js
mov
out
add
push
ja
and
cmpsb
or
shl
xchg
cmpl
or
out
inc
pop
jge
dec
add
xor
fbld
in
xchg
pop
mov
or
mov
or
mov
push
es
sub
xchg
pop
and
add
inc
gs
ljmp
fiadds
mov
sti
xchg
and
ret
xchg
inc
jmp
imul
aaa
mov
sti
fwait
out
movsb
out
adc
daa
cli
out
cmc
push
xor
pusha
fiaddl
iret
scas
lock
mov
sar
loop
leave
mov
cmc
out
jecxz
call
xchg
insl
dec
bound
dec
cmp
or
cli
or
pushf
scas
xchg
stc
inc
repz
fsub
mov
out
fdivrl
sbb
in
xchg
movsb
lock
sahf
shl
add
push
out
out
inc
fidivs
dec
or
adc
cmpsb
fucom
stc
mov
scas
out
mov
jl
in
outsl
into
out
in
pop
mov
aad
fldl
jne
jge
lret
lock
push
xchg
test
out
das
loop
stos
in
adc
inc
stos
lret
aas
in
xchg
lcall
inc
pop
int3
dec
dec
out
sbb
cmpsb
popa
cmp
and
add
adc
out
fwait
pop
sbb
out
pop
jecxz
or
outsb
push
cs
sbb
aas
lcall
and
aad
jmp
mov
dec
adc
rcrl
shlb
mov
adc
out
dec
cmp
pop
jg
stc
and
test
mov
lock
int3
jo
lods
mov
xor
std
jmp
imul
xor
pop
das
imul
dec
pop
mov
or
out
iret
stc
imul
fnop
out
arpl
mov
out
in
scas
call
imul
mov
pop
call
jg,pn
or
jp
test
pusha
addr16
loop
jmp
push
clc
dec
cwtl
mov
fdivrl
mov
jmp
dec
mov
and
sub
clc
sub
mov
or
das
cld
sub
fsub
pop
push
cmp
out
dec
push
inc
fwait
rcll
cwtl
out
ds
add
scas
addr16
stos
inc
mov
lret
sbbl
jnp
push
push
dec
sub
punpckhdq
adc
in
or
mov
inc
daa
or
out
mov
sbbb
pop
sbb
mov
int
out
xchg
mov
pop
in
repz
rorl
scas
adc
xor
clc
push
insl
xchg
mov
lret
insl
out
adc
lret
pop
mov
call
popf
ss
adc
iret
rol
mov
ret
stos
xor
cmpsb
fs
shl
loop
push
cmp
testl
sar
mov
mov
out
cmp
cwtl
fcoms
scas
into
lea
push
add
mov
xchg
jb
sbb
out
xor
fwait
mov
leave
sub
xor
dec
cld
pop
out
adc
mov
xchg
int
out
out
jbe
xchg
cltd
stc
movsb
add
out
enter
xchg
das
fwait
cmc
and
rorb
call
xchg
addr16
and
xorl
mov
stos
xchg
inc
pop
mov
insb
mov
enter
inc
adc
add
lock
xor
cmp
out
pushf
xchg
jnp
lods
repz
cmp
adc
mov
dec
das
mov
out
mov
push
loope
repz
adc
or
cmp
dec
dec
mov
xchg
xor
ret
rol
movsl
outsb
lods
out
xchg
test
cmp
out
sub
jbe
sub
lret
es
cli
jle
insb
xchg
std
repz
out
jno
fstpl
cmp
cwtl
mov
jns
cmp
push
out
insl
shll
lret
out
pop
daa
push
push
mov
cmc
jp
pushf
mov
mov
out
mov
inc
inc
dec
das
add
fimuls
addr16
lods
movsl
shl
xchg
adc
inc
cmp
inc
ljmp
out
cli
jb
xor
dec
cmpl
in
enter
test
int3
out
and
cmp
cwtl
push
aas
clc
adc
push
out
inc
lahf
addr16
sbb
stos
sti
pop
push
mov
mov
sub
adc
and
dec
push
cli
flds
out
into
xor
push
mov
xor
and
mov
mov
cmp
jl
fdivl
cmpsl
je
call
out
cwtl
lods
aas
rorl
mov
add
push
mov
ret
pop
insl
ljmp
out
add
fildll
push
push
mov
pop
mov
mov
scas
mov
pop
loopne
out
or
pop
cwtl
push
jbe
mov
pop
out
nop
cmp
jp
iret
push
loop
inc
xor
gs
sub
loop
ret
das
jecxz
add
aam
mov
sbb
ds
jge
out
lahf
cmpsl
repnz
inc
sub
push
in
or
ss
pop
jne
xchg
popf
rol
sbb
mov
dec
xor
mov
insb
push
add
out
add
mov
out
and
jno
add
dec
mov
lahf
sar
shl
flds
xchg
push
call
sbb
enter
sbb
mov
outsb
jo
popf
fucomp
ljmp
mov
lea
adc
push
iret
mov
mov
out
or
jle,pn
mov
mov
test
add
adc
sbb
xchg
pop
cmp
nop
adc
in
xchg
lods
mov
call
jne
call
mov
dec
lahf
inc
imul
dec
add
inc
cmc
xor
out
in
add
aas
sub
lret
cmp
mov
or
push
cmc
cmp
arpl
cltd
pop
sub
test
sbb
jecxz
xor
loope
aam
aam
push
cmpsb
lahf
add
ds
les
cmpsl
out
mov
and
fcomip
adc
jle
cmp
outsb
inc
popa
movsb
shll
push
aam
sbbl
and
inc
and
out
pop
push
addr16
or
xchg
icebp
adc
pop
cmp
and
cmp
add
clc
out
adcl
out
jecxz
shrl
dec
fsubr
test
mov
loop
push
mov
xor
push
xlat
adc
out
fwait
add
clc
cmpsl
jge
pop
or
adc
push
jp
jecxz
xor
or
or
dec
scas
fisubs
xchg
shl
or
mov
xor
or
fwait
test
or
nop
sbb
ljmp
and
cmp
test
adc
lcall
xor
sti
adc
jmp
aad
mov
aas
mov
rcrb
mov
and
in
adc
sbb
add
test
fs
cmp
in
and
cmp
dec
push
xor
scas
or
out
jmp
out
loope
push
out
sbb
mov
dec
inc
aad
insl
or
scas
sub
dec
cmc
aaa
out
sub
daa
ret
jne
mov
stos
dec
add
es
popa
cmp
cmpsl
out
sahf
add
mov
push
dec
cmp
and
out
insl
les
jle
fimuls
mov
out
fwait
jg
mov
out
mov
xor
push
mov
push
cwtl
ja
xchg
ljmp
cwtl
out
xchg
mov
mov
inc
or
rcr
aaa
out
in
test
inc
out
aad
shr
movsl
ret
xchg
adc
jp
pop
icebp
andl
xchg
adcb
lret
push
dec
bound
push
out
fbstp
sbb
in
add
push
rclb
fisubl
inc
push
js
mov
lret
push
jl
out
sti
and
push
into
fldcw
cmp
stos
in
mov
jp
out
pop
or
ret
inc
lret
or
ljmp
out
rclb
sbb
adc
subl
mov
push
and
xchg
mov
lea
jle
out
dec
stos
or
sbb
jge
insl
mov
jl
aam
mov
icebp
jne
sbb
jnp
mov
jmp
add
out
ja
jp
sbb
mov
or
js
jns
pop
inc
push
adc
dec
jnp
pop
mov
xchg
pop
adc
int
mov
add
jmp
push
adc
push
push
insb
call
sub
mov
cmc
icebp
out
repnz
in
pop
mov
cwtl
lahf
cmp
lcall
mov
cltd
jp
add
pop
push
mov
inc
jg
or
aaa
jns
sbb
lods
push
fistl
push
sub
decl
and
in
xchg
sahf
lods
xchg
xor
mov
and
jb
inc
daa
adc
mov
or
jne
stc
lahf
cmc
and
movsb
mov
and
adc
sbb
mov
mov
bound
and
adc
out
mov
add
mov
sub
rclb
out
cmp
mov
push
fistps
sub
ret
test
out
jb
arpl
dec
xchg
pop
xor
jns
repnz
xchg
rcll
pop
xchg
js
or
aaa
enter
dec
addr16
cmc
sub
cmp
jl
inc
scas
mov
jg
mov
lret
xor
mov
movsb
out
push
mov
pop
add
mov
out
popa
ljmp
test
sbb
ljmp
xor
je
insl
icebp
loopne
out
lcall
daa
divl
add
leave
adc
or
sbb
andb
scas
and
mov
jle
sub
mov
ja
test
arpl
out
out
fwait
cld
mov
aas
iret
dec
pop
out
xor
lret
xchg
stc
mov
adc
test
jae
inc
es
pop
in
ret
add
mov
jmp
test
fs
push
cs
mov
js
sub
xor
jmp
and
push
sahf
mov
sbb
shlb
mov
xor
mov
out
frstor
jl
push
xchg
rol
out
sub
xchg
add
push
add
jno
cli
pop
sub
shlb
jmp
xchg
cs
adc
pop
add
ljmp
out
test
std
push
mov
out
push
sub
repz
dec
daa
jge
mov
cmp
fwait
rorb
inc
out
int
out
enter
mov
ss
loope
daa
and
aaa
inc
inc
mov
push
vunpckhps
repnz
mov
xchg
xchg
and
jne
lcall
out
das
ja
push
out
add
in
je
push
fs
mov
out
fs
mov
das
cmp
inc
adc
insb
insl
aaa
xor
pop
lods
shlb
fs
int3
loope
lock
stos
aaa
out
std
daa
jno
movsb
cmpl
scas
out
aad
aas
test
lds
xchg
icebp
ds
movsl
lea
cmp
push
out
repnz
mov
push
sbb
sbb
fs
jnp
xor
sarl
cmpsl
xchg
ret
out
or
jmp
ret
add
out
jle
inc
repz
dec
xchg
pop
inc
out
out
lea
mov
inc
push
push
push
xchg
dec
das
ficompl
adc
fisttpll
and
jge
imul
cmp
jmp
bound
jg
dec
sbb
sub
sbb
addr16
sbb
mov
es
pop
std
or
push
shrl
sub
shlb
data16
repz
icebp
je
lret
xor
ljmp
cmpsb
adc
out
pop
sti
sbb
decl
and
fcmovu
loop
sbb
push
out
and
add
jl
sbb
jecxz
fadds
mov
leave
add
nop
cmc
push
jne
sarb
test
out
sub
outsl
out
out
out
mov
fstl
jae
shl
sub
lock
out
notl
out
jg
and
jne
imul
fcoml
fadds
sub
jns
and
dec
divl
nop
xchg
push
cmc
cmpsb
sahf
push
or
jl
mov
xor
loop
push
xchg
arpl
adc
shl
mov
pop
mov
mov
out
adc
stc
push
pop
clc
pop
sbb
in
inc
jno
imul
iret
sbb
nop
rorb
cltd
pop
leave
dec
push
mov
jne
or
movsl
jle
lret
jbe
xchg
out
cwtl
jp
mov
push
sub
mov
es
xor
orb
out
mov
mov
dec
mov
inc
pop
sbb
inc
xor
imul
mov
fwait
lahf
push
push
mov
mov
or
das
and
adc
cmpsl
imul
jle
xchg
push
pusha
out
push
mov
xchg
out
pop
mov
imul
pop
push
aam
and
cmp
lods
xchg
xchg
out
popf
das
lods
nop
loop
scas
out
mov
push
adc
fsub
adc
inc
jbe
xchg
cmp
arpl
jle
out
orb
mov
insl
out
and
jmp
loop
ret
aad
aas
out
push
shll
mov
cmc
frstor
movsb
out
pop
mov
and
out
inc
mov
mov
push
mov
cs
dec
clc
push
imul
out
popa
mov
out
and
lds
out
xchg
dec
dec
aaa
cmp
into
push
jne
test
sub
jl
in
mov
cmp
jns
andb
push
cld
lods
sub
adc
lret
ljmp
mov
mov
adc
ret
movsl
or
push
mov
push
out
inc
aad
das
std
cmp
pop
sahf
out
in
add
out
lea
xor
loop
ljmp
out
mov
push
sbb
aaa
mov
inc
shlb
js
out
sbb
jns
and
out
or
add
add
out
loope
inc
outsl
cmp
out
ret
and
ret
pop
jne
or
cltd
dec
in
in
mov
xchg
adc
push
jbe
rolb
mov
push
dec
mov
push
bound
into
out
sbb
sub
lret
sti
out
hlt
fcompl
lods
xchg
adc
xor
cmp
or
push
xor
fcomps
add
out
or
jne
arpl
and
stc
ljmp
mov
aam
add
xchg
and
jns
cmpsl
adcl
rclb
jmp
push
add
dec
inc
out
ja
pop
mov
lret
jg
das
loopne
inc
inc
jne
lock
shll
ljmp
jne
cli
mov
jl
mov
out
sarb
iret
or
mov
sbb
inc
jmp
jo
mov
add
lods
and
out
lock
sbb
test
sub
fisubrs
pop
cmp
mov
outsb
jbe
sbb
sub
call
lret
lret
pop
and
add
mov
imul
cmpsb
pop
stc
jge
adc
push
test
xchg
mov
sub
lods
orb
out
pop
fs
push
out
sbb
mov
out
sahf
mov
movsb
jle
je
mov
push
xlat
mov
out
enter
push
pop
mov
loopne
sub
cwtl
add
or
out
mov
fiaddl
inc
cmp
cmpsl
add
mov
push
and
cmp
scas
out
inc
ret
arpl
dec
pop
pop
repnz
lds
sti
out
and
dec
mov
pop
jecxz
push
jle
pop
xchg
mov
sahf
xchg
ss
repz
aad
arpl
inc
out
cld
lock
mov
and
xor
sarl
xchg
xchg
mov
pop
je
sub
adc
mov
out
rcll
out
add
adc
push
and
xchg
jp
fwait
mov
or
add
dec
pop
mov
jns
xor
ficompl
pop
daa
in
shll
movsb
cwtl
je
jge
ss
xchg
add
sub
adc
or
push
pop
rorl
dec
lcall
in
or
test
pop
pop
ljmp
jne
mov
bound
fsubp
push
jmp
push
mov
or
addr16
or
adc
jno
fs
out
and
rclb
ror
into
jb
cltd
mov
mov
mov
out
push
dec
in
add
pop
inc
insb
out
in
sahf
cmp
mov
adc
xor
js
mov
test
outsl
out
out
mov
lods
or
movsb
jl
and
adc
push
fildl
jne
jns
cmp
cmp
ja
pushf
mov
xchg
and
movsb
insl
adc
loopew
push
shr
pop
inc
call
outsl
aas
add
into
out
icebp
sub
out
jne
rcl
aas
push
pop
test
fdivr
and
inc
mov
xor
mov
xchg
and
ljmp
adc
xchg
sahf
ljmp
cmp
jp
xchg
xor
or
stos
out
inc
xchg
int3
cld
push
out
inc
jp
cmp
out
push
sub
sarb
xor
insl
cld
ss
aam
or
fs
mov
push
out
aaa
out
mov
pusha
push
mov
push
pop
scas
sbb
or
pop
push
mov
mov
out
out
cmp
out
in
mov
add
adc
ljmp
out
mov
outsb
inc
ret
xlat
sbb
jnp
xchg
add
popf
daa
insb
in
mov
cmp
cltd
jl
add
jmp
sub
cmp
fsubrl
and
ds
cmp
cmpsb
into
out
xchg
mov
test
movsb
call
jb
mov
jnp
out
test
dec
lods
push
cwtl
pop
test
fstpt
mov
std
pop
xor
test
ss
xor
ret
push
jmp
sub
xchg
lods
push
movsb
push
pop
daa
add
lcall
jge
mov
mov
outsl
add
xchg
dec
inc
mov
dec
mov
and
add
in
jne
daa
out
and
sbb
mov
rorl
in
out
jb
int3
inc
xlat
jle
cwtl
pop
add
sbb
sub
sub
out
add
push
data16
stos
jmp
fstl
sub
mov
out
mov
or
nop
js
fildll
mov
mov
cmpb
or
dec
call
or
jno
mov
inc
jns
fwait
imul
cmp
push
xor
mov
xor
adcb
ret
out
mov
or
mov
push
sbb
lods
movsb
pop
out
addr16
cmp
in
or
nop
push
mov
fldt
je
sub
fs
incb
push
jge
mov
or
xchg
adc
cltd
cmp
jg
out
fidivrs
mov
lret
lods
and
jno
push
out
sbb
add
or
out
rorb
leave
pop
enter
xor
je
rcr
cmpsl
mov
mov
shlb
or
or
sub
pop
push
mov
out
iret
inc
mov
ds
test
loope
inc
inc
jae
cwtl
bnd
xchg
into
out
mov
aaa
scas
out
cmpsl
pop
jae
pop
fsts
out
cmp
lea
xchg
call
lock
pop
out
jl
or
cwtl
mov
sbb
pop
addr16
addb
fcmovnb
outsl
cmp
imul
fwait
mov
push
jmp
out
pusha
int
adc
cwtl
mov
int3
ljmp
out
lods
add
jecxz
cwtl
int
fimull
stos
push
imul
loope
rorl
add
jns
aas
in
aam
pushf
xchg
fsubs
and
dec
repnz
mov
and
shrl
fisubs
int
pop
out
adc
jecxz
push
mov
data16
out
iret
cmp
out
fisubrl
mov
loope
inc
out
cmpl
pop
pop
push
mov
mov
bound
shr
je
pop
ret
inc
jns
shrb
xchg
cmp
push
cmpsl
xchg
push
out
sub
shlb
pop
push
and
stos
sub
cmpsb
pop
mov
inc
pop
push
shlb
cmp
out
ret
in
add
pusha
out
xchg
cmpsl
lds
insb
imul
ja
cld
ljmp
pusha
mov
ja
xor
jp
xor
mov
data16
out
jns
sbbl
stos
dec
cmpb
lods
ja
jo
out
loopne
stc
inc
and
mov
dec
pop
dec
mov
sbb
adc
xor
ret
cld
movsb
or
jbe
xchg
out
xchg
paddq
js
cmp
jae
jge
lods
out
inc
fistpl
adc
rcll
adc
je
mov
nop
out
inc
roll
jnp
sub
aad
jge
mov
jmp
das
aad
or
out
mov
pop
push
out
fcomip
xchg
aas
sbb
out
push
jae
push
and
push
add
out
lea
iret
lods
adc
shlb
out
jno
clc
pop
or
mov
filds
leave
pop
scas
xor
sub
aam
push
out
fcompl
xor
xor
pop
mov
loopne
push
stos
loope
dec
push
ja
out
data16
xor
cmp
jg
incb
in
sub
shl
jg
sbb
jmp
push
aam
mov
out
push
sahf
cmc
dec
imul
pop
adc
divl
bnd
or
rorb
in
pop
movsb
and
lods
stc
jnp
pusha
fsubrl
scas
pushf
je
in
push
mov
xchg
jns
dec
sub
out
or
dec
sbb
out
jp
pop
mov
xchg
xor
bound
pop
sbb
push
insl
or
pushf
divl
addr16
loopne
in
fsubl
push
inc
out
clc
mov
pop
cmp
mov
lock
testl
test
add
adc
jo
out
jmp
cs
mov
call
out
or
xchg
popa
lock
jp
add
jecxz
jns
out
lods
dec
jae
out
orl
sbb
mov
pushf
inc
stc
aad
inc
ja
push
push
imul
jle
push
out
adc
push
filds
xchg
ljmp
in
mov
mov
test
push
aam
loop
pop
or
popa
mov
sbb
mov
inc
je
js
xchg
out
stos
dec
sub
or
aad
scas
popf
in
fmul
inc
rorl
je,pt
add
cmp
out
inc
sub
out
push
fistl
fstps
adc
inc
sbb
popf
aam
cwtl
add
xchg
mov
push
roll
cmpsl
aaa
out
push
int
leave
jbe
mov
jle
stos
xchg
out
mov
push
jnp
sub
out
jge
shrb
ficoml
push
inc
dec
push
xor
xchg
jle
vpaddusb
xor
adc
and
out
lods
ret
cs
sub
test
in
ja
out
dec
or
push
leave
nop
out
adc
in
out
iret
lret
sub
mov
loop
mov
out
shl
lds
sub
jbe
sti
mov
xor
mov
mov
pop
test
iret
sub
dec
sbb
cmpsb
push
out
or
jne
ss
fstpt
mov
aam
out
int
pop
sbbl
out
dec
cmc
push
mov
movsl
add
xchg
mov
pop
inc
dec
fistpll
fucomp
xor
push
add
out
lcall
jne
cmc
adc
lds
sbb
out
fidivrs
and
imul
out
in
out
xor
add
add
and
pop
dec
and
sub
push
out
insl
sbb
jo
sub
sbb
hlt
cli
es
sub
loop
call
inc
jne
xchg
pop
sbb
loope
stc
fs
jge
sti
test
jae
nopl
mov
stos
gs
data16
call
iret
dec
fbstp
xor
pop
psllw
hlt
rorl
out
incl
xchg
out
arpl
inc
fcmovb
inc
fucom
fdivl
push
jmp
jns
push
inc
jae
cmp
or
jecxz
jle
mov
xchg
insl
add
punpckhdq
adc
inc
out
xchg
or
insb
sbb
addr16
push
jb
mov
xor
test
jmp
test
mov
mov
cltd
adc
mov
pop
rol
mov
lods
lahf
nop
in
sbb
repz
mov
xchg
inc
push
out
je
inc
ret
sub
lret
cmp
out
es
mov
push
lcall
xchg
ljmp
out
fs
sbbb
xor
cmp
mov
adc
or
lcall
xchg
mov
mov
fsubrp
movsb
xor
xchg
out
jmp
xchg
mov
hlt
inc
lea
fs
enter
repz
cli
out
je
dec
push
aad
js
xchg
mov
imul
add
xor
mov
repnz
dec
out
xor
adc
or
arpl
jmp
bound
pop
out
dec
out
sahf
jns
mov
adc
filds
fwait
cs
out
sub
mov
out
scas
lret
rclb
out
push
shll
out
gs
xchg
invd
dec
adc
es
mov
add
jl
sub
push
jmp
out
pop
sub
add
aas
xchg
test
iret
jl
bound
mov
out
xorl
in
aas
mov
jge
stos
call
cs
out
and
or
mov
add
xor
and
xor
insl
dec
mov
adc
sti
push
frstor
push
mov
or
cltd
mov
mov
jb
imul
int3
cmp
xchg
fs
in
out
daa
shlb
mov
jo
out
pusha
mov
and
add
ror
jg
sub
xchg
out
call
xchg
out
mov
loope
ret
and
scas
push
mov
out
xchg
lret
mov
in
jne
jo
mov
mov
out
repz
dec
xlat
push
out
fistps
push
or
in
pop
push
cli
jnp
mov
fsubl
lcall
out
int3
nop
gs
js
mov
pop
xor
jp
ljmp
jne
dec
sub
add
sub
cmpsl
das
or
int
push
cli
addb
push
push
push
ret
icebp
inc
call
movsb
inc
clc
inc
mov
mov
fldcw
sbb
out
enter
adc
xor
mov
pop
sub
lcall
inc
clc
dec
leave
jmp
fbld
jne
enter
jmp
sbb
ljmp
out
aaa
lahf
popf
push
pop
mov
push
es
out
fistps
xchg
xor
mov
adc
push
lods
nop
out
lcall
push
xor
fsub
je
pop
and
and
mov
or
iret
scas
mov
out
shrl
bound
and
xor
mov
enter
jo
xor
push
mov
jmp
push
xor
out
add
mov
mov
add
lods
iret
jmp
xlat
add
lret
aam
or
xor
mov
mov
jnp
call
aas
pop
out
sub
movsl
out
loop
loopne
into
add
jecxz
mov
lds
lds
call
dec
movsb
fcmovnb
xchg
stos
sti
shrb
imul
pop
into
insb
inc
testl
push
mov
in
add
cmp
lcall
xor
jmp
or
pop
shlb
cmpsb
ret
jne
and
jno
pop
imul
ret
add
je
and
dec
call
add
cmpl
aad
out
mov
fistl
ljmp
out
in
ret
sbb
out
xchg
call
aas
into
push
dec
mov
xchg
aam
jno
dec
out
mov
into
pop
xlat
inc
and
xchg
in
in
addl
out
lahf
pushf
jg
pop
push
insb
xchg
je
and
jo
mov
fs
out
mov
sbb
lret
pop
cmp
insb
sbb
push
loop
enter
nop
and
not
cmpsl
xchg
mov
test
xor
inc
test
out
push
mov
cltd
xor
fstpt
pop
out
mov
jge
pop
fisttpll
das
xchg
jne
jg
push
out
ret
add
subb
imul
mov
loopne
push
xchg
out
sar
addb
cmp
out
or
mov
ret
jo
lods
mov
inc
jo
out
pop
push
jp
das
jb
mov
out
pop
jbe
rorl
pop
popa
iret
adc
pop
stos
in
frstor
adc
imul
loope
or
pop
cmp
pop
aaa
es
xchg
scas
cmp
or
push
push
jne
sub
or
aam
inc
in
out
decl
arpl
push
cmp
pop
imul
push
out
mov
mov
inc
in
xchg
sar
rcrl
lods
dec
dec
out
jb
sbb
adc
jp
pop
test
inc
lret
aam
ds
ljmp
and
jp
daa
xchg
jmp
std
fcmovnb
in
cmp
clc
mov
scas
lock
std
out
push
pop
pop
dec
enter
subb
js
jo
lret
add
pop
adcl
fsub
out
aam
mov
xchg
insb
movl
mov
mov
ja
sbb
mov
add
jns
mov
ret
roll
adc
out
sub
in
out
cmc
popa
shrl
add
rol
out
imull
or
inc
setb
adc
out
ret
inc
aam
push
adc
clc
xchg
add
mov
sbb
xorb
mov
repnz
out
movsl
mov
pop
mov
fisttps
mull
jbe
mov
inc
pop
jb
ss
iret
out
pop
add
jecxz
fcoms
sbb
fistpll
mov
ja
push
cmpl
es
sbb
clc
out
mov
push
sbb
scas
and
cmp
iret
out
mov
dec
rcrl
pop
xchg
mov
xchg
out
rcl
filds
sti
stos
js
fs
push
jle
mov
sbb
xchg
push
push
adc
mov
mov
fldl
out
scas
lret
mov
xchg
out
movsb
pop
mov
sti
ljmp
inc
pop
adc
dec
out
mov
outsl
pop
test
push
into
or
out
pop
jo
clc
loope
out
push
xor
push
test
jmp
mov
mov
out
jle
sahf
es
and
inc
lret
cmp
dec
and
and
cli
or
cwtl
xchg
cmp
push
dec
cltd
out
inc
test
aas
andl
loop
cmp
pop
das
out
jo
cmp
out
cld
pushf
arpl
push
xchg
xchg
clc
jmp
out
add
sub
inc
cmp
adc
ficoms
xor
adc
fiaddl
out
jnp
jl
mov
adc
cmp
inc
mov
lds
xchg
push
cwtl
or
je
gs
sbbb
jmp
mov
xchg
dec
sti
sbb
pop
clc
and
stc
mov
lock
lods
or
fucomip
jo
insl
ljmp
xchg
mov
and
into
out
xchg
cmp
jecxz
push
or
inc
push
incl
out
or
sub
cmpsl
out
pop
push
test
pop
fsubr
sbb
push
fwait
sbb
js
xchg
xor
gs
pop
cmp
xchg
pop
rorb
mov
dec
sub
add
jg
insb
aam
push
xlat
and
aad
adc
push
out
dec
out
cld
add
push
mov
cld
out
xchg
sbb
push
mov
out
dec
add
mov
out
mov
cmc
lcall
test
fisttpll
std
push
inc
mov
lock
cmp
sbb
lods
jno
hlt
inc
ljmp
xor
xor
out
jl
mov
out
push
ret
and
scas
out
mov
sub
addl
in
int3
adc
out
arpl
inc
fstl
push
out
cmp
lahf
dec
jnp
cwtl
repz
shl
aam
mov
inc
sub
fnstenv
popf
xor
arpl
imul
loop
imul
dec
lahf
aas
out
movsl
std
cs
cmc
lds
cmp
popa
dec
mov
fdiv
nop
test
and
out
dec
cmpsb
enter
jl
adc
ds
pop
add
out
sbb
testl
lret
mov
fmuls
xor
inc
pop
dec
inc
inc
je
xchg
shl
popf
push
leave
repz
dec
inc
stc
pusha
pop
subb
loop
xchg
sub
out
jns
lock
out
out
movsl
ljmp
or
mov
adc
lret
inc
data16
dec
adc
or
dec
roll
inc
adc
xor
adc
inc
sbb
addr16
dec
out
sarl
icebp
test
mov
and
mov
popf
out
or
jns
out
movsl
push
push
mov
ret
or
popa
fimull
pop
push
or
jne
cld
lcall
pop
or
xor
jmp
call
sub
or
jnp
rcll
mov
daa
adc
dec
popa
fidivrs
mov
dec
cmc
push
mov
out
fnstenv
out
jg
clc
std
xchg
test
add
call
and
stos
test
push
out
xchg
jo,pn
imul
out
xchg
je
iret
cmp
out
outsl
mov
fs
inc
xor
in
pop
rolb
mov
push
sbb
mov
dec
out
jge
cltd
jae
xchg
add
lods
mov
loop
loop
lret
out
jg
mov
push
mov
scas
push
mov
insl
inc
sub
mov
jle
or
jbe
arpl
out
repz
cwtl
adc
sbb
imul
repnz
rclb
out
repz
cmp
jo
lock
jno
out
insb
inc
scas
test
cmp
ljmp
nop
loop
outsl
dec
cmc
sub
cmp
xor
pop
mov
fisttpll
jnp
dec
or
daa
out
int3
sbb
sbb
in
out
mov
mov
fcmovnu
pop
iret
iret
out
add
bound
pop
sbb
inc
xchg
or
mov
mov
push
sahf
adc
test
test
lods
push
and
out
out
xor
sub
movsl
mov
repz
mov
jo
sub
cmp
cmp
pop
or
repnz
mov
out
jl
les
sbb
cli
dec
shl
pusha
xor
imul
add
xchg
xchg
popf
xor
pop
daa
mov
add
test
insb
push
out
sbb
std
daa
repz
or
adc
out
sbb
sub
mov
lods
outsl
push
inc
iret
stc
jg
cmpsl
pushf
ljmp
inc
lahf
subb
sbb
mov
mov
out
and
dec
inc
shrl
popa
cli
das
mov
fidivrs
clc
jmp
out
test
xor
inc
rcll
imul
pop
xor
mov
jp
pcmpgtb
cmp
lret
out
repz
mov
repnz
dec
ljmp
popf
test
imul
mov
pop
mov
xchg
and
sarb
stos
xchg
jnp
cwtl
aad
int
sbb
out
inc
fists
pop
pop
out
sbb
push
dec
in
add
dec
test
enter
pushf
or
std
xor
aaa
stos
push
mov
out
adc
imull
mov
loop
lock
sbb
sbb
hlt
out
fsubrl
dec
shlb
xchg
cmpsb
ret
push
pop
aam
popa
addl
repnz
out
dec
adc
mov
std
cmpsb
jns
jno
jbe
adcl
xchg
fs
iret
sahf
cmp
dec
out
movsl
cwtd
mov
out
xor
push
xchg
jp
lods
scas
fs
repz
aaa
jg
stos
or
loope
movsl
mov
jle
out
hlt
xchg
adc
mov
ret
cmp
popa
xor
inc
out
pop
dec
cli
lea
pop
sbb
add
std
nop
imul
shrl
sbb
jecxz
xor
xor
out
xchg
mov
and
leave
mov
test
jne
cmc
sbb
and
xlat
push
cmpsb
js
out
lea
push
clc
pop
inc
mov
and
pop
inc
add
lock
fisttpll
lds
ljmp
sahf
or
cmp
data16
push
dec
sbb
push
gs
daa
out
in
cmovo
rolb
fwait
or
jecxz
nop
xchg
jmp
aaa
sbb
gs
jmp
in
stc
and
out
or
cmc
adc
adc
call
add
dec
insl
add
loop
lret
rclb
and
call
ret
adc
pop
in
cmp
push
adc
mov
xchg
sub
es
cmp
adc
out
add
fstl
jne
addr16
xchg
pop
cli
mov
mov
lea
mov
fcmovnbe
mov
out
dec
pop
clc
mov
dec
push
leave
ljmp
cwtl
push
cmp
mov
aas
lret
mov
sbb
push
jns
fidivs
sbb
test
mov
movl
out
fwait
aas
cmpsl
lods
mov
mov
push
jl
pop
movsb
cmpsb
lcall
sbb
cs
or
out
xchg
add
loop
pop
fimuls
mov
adc
ds
in
lret
daa
movsb
fisubl
icebp
adc
jmp
sub
into
mov
out
stc
aas
fwait
sbb
jecxz
jne
jle
sub
out
shrb
clc
test
out
and
mov
mov
jno
inc
xchg
stc
test
inc
movq
and
fmull
ret
jne
xor
out
pop
xor
sub
out
out
rcrb
out
je
cmp
cs
add
shrl
sub
xchg
push
in
or
out
cld
shr
sbb
cmp
mov
in
fsubp
pop
jnp
cmp
mov
sbb
xchg
and
dec
xor
mov
into
out
movb
out
fs
cli
stos
stc
push
and
push
pop
mov
test
cmc
pop
loop
decb
outsl
sbb
jne
stc
in
add
test
out
pushf
stos
in
pop
inc
out
mov
xchg
test
jno
inc
movntq
out
decl
sbb
cld
push
cmp
rep
lods
dec
xor
in
push
xor
dec
sahf
mov
sub
xchg
inc
ret
push
lret
mov
push
add
xchg
test
and
fcomps
xchg
jl
mov
out
xchg
cmpsl
sbbb
out
stos
sahf
inc
push
icebp
adc
pop
pop
in
dec
jge
aam
or
add
fsubs
outsl
mov
icebp
ficoms
add
cmp
data16
pop
ss
mov
clc
popa
or
lahf
popa
cmp
dec
cmpsl
call
dec
dec
aas
push
push
imul
xor
dec
int
push
jb
ja
outsl
aas
push
inc
mov
mov
rorl
pop
push
int3
dec
fsubrs
fistpl
sub
sub
mov
outsw
fisubs
in
mov
ret
cli
or
out
push
sti
mov
sbb
and
in
jne
fdivl
fdiv
out
inc
mov
jmp
adc
cmp
xchg
and
cmp
repz
and
push
enter
lods
mov
out
rorb
mov
outsl
scas
aam
dec
cmc
adc
shrb
lret
ja
or
cmp
std
cmp
jns
xchg
sub
in
add
jno
jb
loop
leave
out
popa
mov
sub
arpl
scas
sbb
inc
xchg
add
jo
pushf
stos
mov
cmp
inc
inc
rol
jmp
adc
adc
mov
mov
sti
xchg
pop
sub
adc
push
push
jne
repnz
daa
mov
nop
lret
fstpt
pop
lods
push
xchg
dec
pop
out
cs
cltd
aaa
push
movsb
shl
pusha
mov
xchg
out
inc
out
rcll
mov
mov
out
lock
sbb
fimuls
test
bound
sub
out
into
jle
pop
mov
in
xchg
xchg
mov
add
or
mov
cmp
sar
out
mov
aas
imul
cmpsl
sub
xor
mov
or
out
in
test
xchg
ret
cmp
adc
dec
loope
outsl
daa
mov
scas
xchg
out
lret
cld
out
dec
cmp
rcrl
test
add
inc
shlb
push
mov
push
ss
push
movsb
ljmp
out
ret
sbb
adc
or
sbb
push
js
fidivl
test
scas
add
dec
ret
adc
or
sbbb
test
cltd
stc
mov
repz
and
cmp
and
jo
in
in
xor
cwtl
xchg
imul
sbbl
mov
out
push
movsl
or
xlat
pop
insl
lock
ja
xor
and
in
sub
mov
jo
xchg
xchg
push
loop
arpl
clc
add
mov
jg
stos
shlb
rcll
mov
popf
jmp
sub
sbb
out
leave
add
push
mov
and
pop
push
insb
fidivl
jns
sbb
push
out
pop
mov
mov
jbe
mov
out
ret
movsb
jmp
out
dec
sub
cmp
dec
jle
out
aad
push
lock
ret
repz
inc
jno
test
cmp
push
out
or
dec
sbb
shll
out
ljmp
cmp
lea
std
imul
pop
push
in
or
stos
jb
mov
xchg
insb
mov
hlt
mov
mov
mov
pop
arpl
lds
aas
out
sahf
sub
in
and
outsl
xor
int3
or
mov
int
dec
stos
test
jno
scas
repz
cmp
sti
push
out
jo
es
mov
mov
mov
out
jo
mov
mov
xorb
sub
cwtl
and
out
mov
nop
stc
mov
sbb
xor
popl
arpl
xor
aam
cmp
xor
or
sub
repnz
sbb
out
inc
mov
out
adc
std
xchg
dec
out
fists
push
push
int3
sbbb
and
push
decb
cmp
ret
out
ljmp
out
jp
add
daa
or
mov
mov
sub
xchg
xchg
cmp
push
in
fimull
push
cltd
push
loope
les
outsl
ss
into
cs
or
xor
imul
dec
scas
cmp
fisttpll
loopne
xchg
test
out
mov
jno
jge
or
lods
clc
mov
cmp
int
xor
push
in
adc
xor
fs
xchg
icebp
out
mov
scas
fldenv
mov
ja
insb
inc
mov
sbb
pop
adc
xchg
ljmp
sub
das
out
cmp
mov
pop
movsl
inc
sbb
aad
outsl
repnz
inc
jge
movsb
out
out
scas
fwait
add
sbb
repz
mov
dec
jnp
xor
push
mov
das
outsb
mov
mov
sbb
cmp
xor
dec
push
imul
xor
js
out
jo
and
shlb
out
xchg
int
sbb
adc
pop
fisttpl
jle
out
rolb
mov
sti
xlat
cwtl
push
xchg
and
jle
je
sub
xor
jno
fnstsw
test
pop
fcomip
lods
jo
or
dec
cmp
enter
add
ret
push
test
popa
into
loop
cmp
test
out
cmp
ds
out
mov
scas
lahf
mov
pop
xor
mov
out
mov
into
cmp
mov
out
lret
movsb
repz
outsb
out
dec
cmp
sub
mov
imul
or
sbb
xor
leave
out
shrb
pop
adc
popa
test
aam
cltd
out
in
xlat
mov
jg
push
std
cmc
jne
popf
sbb
in
je
dec
add
xchg
or
jge
ss
dec
mov
lret
adc
clc
pop
out
repz
mov
push
and
imul
lock
xor
in
mov
push
mov
mov
sarl
xchg
xchg
xlat
loop
addl
roll
cmp
add
scas
movsb
out
shlb
ret
out
xchg
jmp
mov
jne
and
dec
orb
out
sbb
add
push
lahf
out
cmp
mov
out
lret
jg
jae
add
fstpt
jl
dec
pop
nop
pusha
jmp
cmc
shl
inc
mov
fldenv
movsb
add
pusha
out
pop
push
inc
je
dec
push
out
add
stc
xchg
and
cmpsl
jns
or
in
sti
test
test
jecxz
jg
int3
out
nop
rcrb
lret
out
adc
xor
mov
dec
stos
mov
mov
cltd
icebp
and
test
rclb
out
push
jae
addb
nop
lods
out
jnp
cmp
leave
mov
int
test
rclb
or
fstpl
push
push
push
out
push
test
mov
sub
add
cmc
ljmp
out
into
sub
sub
lret
repnz
pop
mov
add
pop
lcall
cmp
push
or
aas
fsubp
xchg
xchg
add
iret
sbb
xor
cs
out
pop
in
or
popa
rorl
fisttps
fwait
movsb
iret
inc
push
out
stc
lret
enter
inc
jl
mov
and
sbb
cltd
cmpsl
cs
fucom
stos
pop
sub
mov
sarb
shl
push
mov
inc
mov
out
test
xor
ret
out
in
imul
iret
das
in
fildl
movsl
xor
dec
cmp
push
fdivrl
mov
mov
cmp
nop
jle
pop
sti
cmc
jbe
mov
or
xchg
mov
mov
aad
in
mov
out
mov
daa
nop
sub
retw
sub
add
cmpsb
xchg
es
pop
out
lahf
xchg
mov
out
arpl
add
push
repnz
out
in
mov
ret
jne
lock
es
cmc
ja
mov
mov
lret
sub
leave
dec
outsb
out
xchg
int3
lcall
stos
or
lock
adc
out
ret
push
xor
inc
xor
jge
fldt
test
sbb
sub
adc
cmp
sahf
out
sub
cs
das
sbb
cmpl
pop
into
enter
or
rorl
jp
lret
out
andl
xchg
ds
ret
mov
iret
dec
test
sarb
push
adc
sbb
adc
and
xor
mov
mov
mov
in
pop
pop
jl
adc
out
mov
fldcw
bound
push
jp
sti
insl
xchg
aaa
leave
out
int
sbb
mov
adc
xchg
xlat
xor
xor
ret
pop
stos
xchg
out
fs
mov
xchg
push
xchg
test
xor
ret
or
push
mov
out
rolb
out
sub
mov
push
out
mov
jl
lea
adc
dec
mov
in
jmp
bndstx
nop
mov
jle
mov
clc
jl
stos
loop
sub
mov
adc
mov
xlat
addr16
imul
je
push
out
jns
adc
data16
int3
cs
mov
mov
lds
adc
xor
out
push
inc
fcomps
inc
mov
mov
xchg
out
sbb
xor
add
jg
sub
cltd
adc
mov
mov
loopne
inc
out
jle
dec
mov
inc
push
mov
pop
xor
sub
cs
inc
sbb
fisttpl
out
sti
mov
movhps
fiaddl
shlb
and
movsl
lahf
cmp
inc
ret
sub
dec
push
sbb
mov
sbb
clc
mov
or
fbld
stc
out
aam
dec
sbb
jbe
out
sub
or
pusha
test
lahf
rcll
cmp
push
push
push
sub
sub
out
cwtl
lcall
lods
jnp
push
popf
jecxz
aas
xor
out
mov
je
or
scas
fs
pop
push
push
sub
jmp
mov
cltd
mov
push
fwait
sub
out
and
ljmp
loope
inc
push
xchg
cld
pushf
lcall
arpl
mov
js
jle
fwait
lods
out
cmpl
inc
and
dec
out
pop
pusha
push
mov
fmull
adc
inc
and
mov
mov
sub
pop
rorb
outsb
sub
push
add
mov
jmp
cmp
sbb
test
adc
add
fcmovbe
jno
add
call
stc
out
ficompl
repz
nop
out
pop
jle
push
or
ffree
dec
int3
add
loope
ret
loop
sub
push
sti
out
mov
xchg
cmp
add
cmpsb
clc
out
or
out
mov
inc
sub
mov
pop
sub
sub
and
dec
dec
cltd
sbb
out
jbe
mov
sahf
mov
out
adc
out
int
stos
fstpt
sub
out
outsl
sub
insl
xchg
mov
das
jcxz,pn
pop
mov
adc
lock
jae
fisubrs
call
js
jmp
add
sub
pop
icebp
mov
cld
out
cmc
sbb
inc
stc
push
lret
fdivrl
jecxz
xor
sbb
adc
mov
mov
sub
pop
lock
aas
scas
push
add
out
xor
mov
es
push
mov
sti
xchg
out
cmp
hlt
dec
mov
ret
dec
xor
movb
and
repz
stos
mov
add
or
cld
scas
mov
push
push
fisubrl
call
popa
das
mov
cmp
xor
jge
lock
outsb
push
out
out
inc
inc
push
and
std
jl
xchg
mov
and
test
mov
mov
out
shl
test
push
shl
pop
mov
and
in
lea
out
test
adc
std
js
inc
xlat
nop
push
pop
pusha
dec
leave
repz
xchg
add
hlt
fistps
and
mov
test
sbb
in
out
adc
cmp
fadds
mov
out
sub
leave
stos
ljmp
out
and
fistl
inc
rolb
sbb
jge
loop
xor
push
mov
and
roll
iret
inc
lods
or
out
shrb
sub
fidivrs
addr16
rcr
jns
clc
add
push
mov
jo
sbb
call
adc
push
ss
cs
jne
push
pop
jmp
mov
imul
sub
adc
cld
mov
jne
out
mov
fwait
scas
inc
or
or
cli
xlat
pushf
ljmp
jg
ficompl
add
adc
pop
push
jmp
movsl
fistpl
rolb
mov
mov
mov
mov
dec
out
and
sub
mov
cmpsb
cwtl
fildl
xchg
lcall
in
pop
arpl
pop
and
mov
aaa
out
cli
add
cmp
int
push
fdivrp
lret
sbb
fisubrl
cmp
cli
xor
cmpsb
jbe
imul
pop
adc
pop
lahf
xlat
xchg
jne
insb
sub
cmp
mov
repz
sbb
subl
xchg
lahf
jge
sbb
push
add
lock
push
jge
int3
xor
mov
in
mov
divl
rcrb
and
outsl
fiaddl
xlat
jecxz
out
xor
sar
stos
clc
pop
mov
mov
mov
mov
xchg
out
or
fs
add
repz
lock
out
imul
add
aam
add
push
mov
mov
jg
out
mov
xor
jl
sub
push
rcrl
sub
inc
out
dec
and
xchg
aam
dec
out
inc
mov
mov
or
jns
and
push
aam
pop
int
jg
out
push
sbb
cmp
xchg
iret
clc
or
adc
andl
ret
jecxz
jp
mov
out
mov
shrb
push
mov
addr16
pop
in
gs
out
push
js
fcmovnu
lods
xchg
out
inc
dec
loopne
sbb
jbe
sub
lret
lods
mov
mov
or
insb
cwtl
sbb
inc
stos
outsl
jbe
addl
ficoml
cld
push
push
pop
call
mov
imul
or
fnsave
or
mov
pusha
out
push
adc
mov
fwait
hlt
out
test
out
mov
or
mov
sbb
scas
je
in
xlat
out
push
dec
fwait
and
cwtl
add
sub
rcll
mov
mov
cli
jne
movb
test
pop
adc
inc
out
dec
xchg
mov
bound
leave
sub
in
jbe
cltd
xchg
cli
sbbb
fwait
or
mov
out
push
stos
test
imul
pop
mov
out
data16
push
cmpsl
inc
jns
andb
stc
vpsrad
stos
dec
pop
sub
std
and
jbe
or
imul
loop
mov
mov
iret
mov
mov
inc
sahf
xor
stc
inc
xor
jbe
dec
movsb
outsl
divps
fstl
aad
imul
dec
xchg
mov
in
jle
inc
out
out
int
movsl
jecxz
hlt
pop
out
mov
nop
dec
out
or
cwtl
sti
popf
jns
mov
popl
stos
sub
jmp
std
outsl
sub
ljmp
shrb
lods
pop
push
xchg
lret
inc
mov
mov
cmp
inc
push
iret
cmp
bound
pop
test
stos
mov
jecxz
test
dec
daa
stos
kortestw
mov
add
fisubrs
mov
test
cmp
push
pushl
ss
loopne
std
mov
ljmp
out
int3
dec
mov
lea
mov
cmp
fwait
jmp
fisubrl
jns
and
xor
ljmp
mov
add
call
out
fiaddl
jecxz
sbb
aaa
cmc
outsl
jo
jl
mov
pop
jp
jns
pop
pop
mov
les
int3
fwait
sarl
and
arpl
ljmp
push
out
cmp
dec
add
mov
out
jge
aad
cli
jne
out
sub
inc
sub
or
clc
adc
ljmp
mov
fildl
test
inc
pop
mov
out
inc
mov
int3
bound
adc
add
mov
test
ljmp
cmp
in
int3
xchg
call
push
cwtl
dec
or
shlb
jmp
or
aam
mov
jg
fs
pmaxsw
cld
ss
xlat
fwait
mov
mov
xchg
mov
dec
sbb
adc
xor
rclb
mov
mov
lret
decl
dec
pushf
mov
icebp
mov
dec
stc
cmp
das
dec
cmp
aaa
cmp
in
jns
les
pop
int
mov
mov
add
shrb
es
pushf
je
cld
adc
inc
or
inc
add
loop
pop
outsb
mov
imul
mov
nop
jbe
pushf
out
sahf
or
lahf
sbb
add
out
imul
scas
add
sub
out
inc
push
fwait
mull
mov
push
nop
jnp
jmp
cmp
dec
xor
jp
push
jl
out
icebp
in
xor
mov
xchg
bound
out
push
xor
inc
sub
inc
out
jno
aad
sti
lret
in
jbe
jp
cmp
ljmp
mov
pop
add
push
shll
mov
mov
adc
scas
jmp
or
rclb
pop
add
lock
pop
popa
out
jae
push
out
xchg
xor
jle
sub
jg
add
subb
jne
mov
js
mov
out
repz
mov
aas
iret
int3
mov
mov
scas
fistpl
leave
mov
popf
fsub
sbb
push
push
out
addb
jne
ja
test
loope
adc
or
mov
xchg
add
sub
out
icebp
adc
ret
dec
stos
lds
mov
es
pusha
mov
add
dec
scas
mov
lret
orb
inc
rep
and
inc
mov
xor
or
cs
sbb
adc
and
push
add
bound
shl
out
iret
cmp
out
pushf
pop
test
andb
inc
xor
dec
outsb
std
cmp
lods
ja
scas
inc
out
pop
nop
popa
es
mov
or
dec
mov
adc
jg
psrld
popa
xchg
push
out
mov
cmpsl
daa
add
lcall
mov
push
push
iret
out
aaa
adc
adc
sti
clc
xorl
fldcw
cmc
add
dec
or
out
loop
fucomip
out
sub
xor
pop
or
arpl
mov
pop
negb
jbe
sub
pop
inc
cmp
cmpsl
mov
xchg
stos
xor
sub
jle
inc
cmp
cs
orl
and
or
sub
ret
push
clc
iret
in
and
into
out
aas
xor
out
outsl
mov
mov
dec
or
push
fsubl
cs
imul
lcall
pop
mov
lahf
out
pushf
adc
jns
in
leave
out
mov
mov
mov
test
ja
xor
stos
pop
out
inc
jno
int
adc
push
cltd
out
dec
and
data16
shlb
push
mov
pop
xor
sub
cmp
mov
push
iret
mov
nop
in
repz
sub
andb
clc
add
negl
cmp
stc
loop
mov
movsb
out
cli
nop
and
and
dec
cld
test
sub
push
mov
lahf
jnp
pop
in
ret
bound
jo,pt
mov
lea
fwait
hlt
rorb
punpckhwd
pop
fs
inc
es
enter
xchg
subl
sub
insl
sbb
jmp
mov
inc
pop
into
out
scas
int3
pop
dec
mov
mov
test
xchg
out
pop
cmp
pusha
lods
test
xor
sar
in
pop
or
out
cld
mov
or
pop
cmpsb
sub
cwtl
mov
and
adc
push
pop
mov
fwait
out
xor
aaa
inc
and
out
pop
daa
std
adcb
sub
xor
mov
les
push
adcb
mov
jg
xchg
push
inc
mov
adc
push
mov
adc
and
test
fisubrs
out
lock
pop
push
fcoml
xchg
test
incl
daa
ds
xor
gs
out
std
jg
movsb
mov
dec
xchg
fistpll
iret
out
test
xchg
mov
add
enter
jge
out
ret
sbb
dec
sbb
rcll
sbb
cmp
push
out
and
mov
jno
negl
shl
pop
addl
sub
js
jmp
lds
or
sbb
sub
push
jo
cmpsl
mov
lret
insb
add
pop
mov
shll
shl
iret
lods
jae
cmp
ds
jp
xor
mov
push
mov
dec
xor
inc
adc
mov
dec
pcmpeqw
pushf
out
xor
cmpsb
lret
out
sahf
iret
mov
jne
jno
std
daa
push
ljmp
xchg
cltd
sbb
pop
mov
cli
out
sbb
cmp
add
sub
out
pop
add
xchg
xchg
hlt
inc
ljmp
enter
lock
adcb
xor
adc
push
out
mov
leave
loopne
popa
mov
fimuls
jne
test
js
jp
out
jo
lods
fdiv
inc
addr16
leave
sbb
jle
cmpsl
inc
mov
push
out
dec
movsb
mov
or
insb
pop
test
and
je
fs
out
and
mov
icebp
inc
mov
repz
imul
fwait
and
cmp
mov
pop
cltd
jns
mull
out
cmp
adc
and
std
loopne
out
fcos
in
into
xor
jae
sti
jmp
inc
push
out
outsl
mov
inc
cmp
clc
out
rcrl
cmp
out
rorl
mov
add
and
pop
inc
cs
lea
shlb
das
mov
lahf
arpl
into
lret
fsubp
rcrb
aam
inc
out
fnstcw
call
out
fwait
mov
decb
inc
jl
push
sahf
ret
movsl
adc
push
out
mov
push
cmp
repnz
out
jnp
push
out
xor
mov
mov
cwtl
loop
jecxz
sbb
out
in
test
pop
stos
bound
dec
out
mov
push
scas
out
shr
mov
cmp
jecxz
or
arpl
cld
mov
jnp
xlat
mov
inc
shlb
pop
sub
mov
pop
lcall
push
push
mov
push
out
decb
sub
mov
add
dec
push
and
and
fiaddl
pop
fidivs
xlat
out
xchg
scas
cmc
dec
sub
dec
aam
pop
and
jno
leave
push
out
stos
sbb
xlat
out
push
and
dec
jns
daa
outsb
ljmp
mov
sub
cmpl
mov
push
pusha
out
xor
push
lret
and
scas
jb
mov
ret
lock
pop
insb
out
ds
cmp
pop
out
sbb
ss
fisubs
repz
adc
mov
pop
rolb
mov
leave
or
push
lods
cmp
fimull
mov
loop
push
daa
test
mov
mov
ficomps
insl
filds
leave
and
xchg
ljmp
bound
in
dec
push
mov
ret
and
shll
xchg
out
pop
inc
sarb
out
jle
cmpl
in
jno
nop
dec
dec
xchg
lock
sbb
and
inc
inc
pop
jp
xchg
bound
cmp
dec
daa
loope
sbb
dec
xchg
jg
dec
out
nop
push
or
test
xchg
dec
addr16
adc
movsl
sub
xor
ljmp
insl
xchg
ss
out
mov
aad
pop
sbb
jo
nop
dec
sub
xlat
inc
mov
adc
sti
sub
shll
out
jl
imul
movsl
sub
sbb
out
or
cmp
sub
out
adc
mov
xor
or
jle
repnz
mov
out
stos
stc
xchg
fwait
mov
sbb
hlt
repz
out
imul
jmp
sub
cli
lods
sahf
lea
ficomps
pop
mov
std
lods
out
or
mov
xor
adc
shll
ret
jne
add
cli
negb
cld
xor
mov
dec
roll
enter
add
jb
and
add
push
adc
ret
call
imul
aad
call
gs
add
shl
jb
push
out
adc
stos
gs
rolb
cmp
inc
shl
push
je
fistl
and
clc
sarl
in
sub
sbb
inc
xchg
rol
sub
xchg
lds
add
ret
mov
flds
sub
ret
imul
data16
stos
shll
in
repnz
jmp
clc
inc
in
jno
inc
sub
popa
repnz
adc
fstpt
push
xor
mov
push
fwait
xchg
add
xchg
out
loopne
and
imul
push
cwtl
inc
pop
push
inc
mov
out
mov
push
rcrl
out
popa
jge
test
mov
xchg
inc
jns
adc
and
push
popf
roll
gs
lea
out
mov
inc
inc
xor
inc
ds
and
js
arpl
leave
and
test
test
xor
mov
in
push
repz
xchg
sub
hlt
mov
roll
in
xchg
mov
ret
xor
xlat
dec
gs
xor
push
sbb
nop
cld
popa
loope
stos
mov
dec
aad
ret
cs
aad
xlat
push
mov
ds
movsb
jnp
mov
das
adc
xor
and
aam
imul
vandnps
and
test
scas
daa
call
scas
fsub
sub
and
ds
xor
rcr
filds
mov
inc
in
out
xor
mov
std
or
jle
in
iret
in
mov
push
psrld
cmpl
movsl
pop
adc
jne
gs
insb
and
xchg
stos
lods
shl
bound
inc
push
insl
adc
mov
mov
dec
mov
jo
and
fiadds
xchg
xor
pop
fcos
aas
mov
int3
insb
shr
add
mov
fdivrp
cmp
lea
cs
xchg
xchg
gs
jp
mov
inc
push
inc
mov
cwtl
scas
fiaddl
inc
roll
fidivrl
aad
and
dec
inc
movsl
push
ljmp
fsubrs
int
cs
lods
add
mov
cmp
jne
gs
movsl
lds
fidivrl
and
lock
dec
arpl
gs
sub
sbb
inc
movsl
cmc
js
ss
orb
rclb
xor
outsb
jb
xchg
aam
pop
sbb
jb
add
inc
xor
jbe
hlt
dec
mov
call
xor
in
mov
cli
call
xchg
sahf
sarb
push
out
mov
xlat
out
test
rol
jne
ret
out
inc
loopne
aaa
inc
out
ficompl
xor
jmp
xor
dec
dec
into
mov
cli
pop
enter
ja
inc
out
adc
ret
adc
shll
je
push
inc
mov
dec
adc
jae
loopne
aam
push
addb
gs
push
inc
test
lds
dec
aas
test
movsl
xor
test
add
cs
dec
cmp
cs
fmull
pop
lret
fildl
addb
push
fnstenv
aad
lret
jne
mov
aad
and
dec
rcl
jne
ret
cmp
inc
sub
out
jl
aaa
xor
sbb
fistl
enter
sbb
int3
jmp
pop
jmp
mov
ficomps
jmp
cli
pop
imull
cmpsb
data16
mov
mov
pop
fwait
je
push
dec
out
stos
mov
mov
cltd
sub
mov
hlt
shrb
inc
jmp
out
fcompl
outsb
sbb
mov
xchg
dec
sahf
out
fwait
adc
out
mov
mov
fsubs
mov
push
sbb
pop
outsb
sub
and
pop
cmc
popf
repnz
ucomiss
add
out
into
add
testl
inc
xchg
imul
lahf
cs
test
inc
pop
mov
test
lret
pop
out
mov
fists
lret
or
sti
rcrl
cmp
jo
sub
xchg
dec
mov
xor
iret
push
add
movsb
enter
push
adc
fwait
cmp
mov
push
cmpsl
out
data16
test
out
lds
add
lret
popa
mov
push
out
xor
nop
mov
cwtl
stos
sub
out
daa
incl
mov
lret
dec
in
mov
js
mov
sub
stos
sbb
enter
imul
push
inc
jnp
lods
scas
pop
xor
sbb
and
mov
mov
out
or
fistpl
cltd
cmp
out
xchg
push
adc
cs
lahf
mov
les
ret
fsubs
icebp
clc
inc
jp
std
dec
mov
xlat
jno
sub
and
mov
lock
inc
mov
jne
mov
inc
fsubs
aam
xor
add
lods
adc
adc
stc
negb
mov
scas
jb
out
lcall
cs
xor
xorl
daa
shll
inc
loop
test
and
movsl
bound
aaa
and
fsubs
stc
gs
pop
add
lea
out
push
popa
sarb
test
jmp
cmp
mov
mov
mov
leave
repz
or
fildll
xor
xor
pop
adc
insb
push
sub
ja
push
inc
adc
lods
xchg
lea
sti
loopne
pop
sbb
adc
lret
xchg
xor
sub
dec
push
andb
test
fcmovne
mov
in
fildll
neg
push
xor
mov
ljmp
sub
scas
sbb
adc
out
pop
sub
jg
cmpsb
mov
and
fcmovnu
test
pop
adc
xchg
cs
and
and
std
xchg
jne
mov
enter
int3
dec
fcoml
bound
pop
jge
xchg
xor
push
push
ja
sbb
pop
js
popf
gs
sbb
gs
clc
dec
jne
addr16
outsl
fmul
sbb
jne
add
test
adc
inc
push
push
scas
adc
bound
fstl
jl
xlat
pop
adcl
add
lock
iret
lods
scas
pop
inc
mov
add
dec
inc
mov
xor
dec
sbb
jle
sub
ds
in
jg
adc
enter
push
inc
enter
repz
ret
xor
ret
call
das
js
mov
aaa
pop
add
arpl
outsb
lock
cmp
and
dec
pop
in
mov
pop
lds
negl
ficoms
mov
push
xchg
pop
loopne
mov
orl
sbb
pushw
jl
and
jns
daa
xorb
dec
sub
ret
popa
inc
mov
in
xchg
cmpsb
aaa
ret
gs
out
sub
aam
in
jecxz
ja
int3
mov
mov
pop
ss
cmc
mov
xor
clc
out
data16
mov
sub
in
data16
sarl
out
or
cmp
mov
fdiv
jecxz
cmp
jns
int3
repnz
scas
push
shl
enter
mov
cld
jmp
insb
pop
out
push
adc
inc
adcl
out
daa
xor
movsb
pop
aaa
sub
ss
mov
out
cmc
inc
sbb
jmp
adc
lock
jbe
dec
in
data16
mov
jle
ja
bnd
xchg
cmp
add
adc
xor
roll
push
jbe
cld
rorl
pop
das
out
arpl
inc
nop
push
mov
jmp
imul
gs
rcrl
pop
lock
mov
or
or
ss
mov
lahf
out
mov
fadd
out
or
mov
js
cmp
and
mov
fwait
mul
test
xchg
xchg
pop
push
xchg
jb
aaa
mov
inc
cmp
out
imul
add
lock
insl
pop
in
and
push
push
inc
inc
sbb
pop
add
xchg
loop
jg
jmp
out
cmp
or
out
subl
aad
mov
pop
jne
addr16
out
aas
in
sbb
sub
outsl
outsb
out
dec
inc
inc
lret
out
mov
int3
mov
jmp
nop
lret
adc
or
in
test
mov
prefetch
mov
es
and
jl
dec
scas
fcomip
cmp
daa
inc
out
call
daa
int
in
sbb
cmp
lods
or
jnp
out
jge
cmp
lahf
repnz
cmpsb
ljmp
mov
dec
int3
jnp
push
fildl
ss
adc
xlat
cmp
mov
push
jae
pop
stos
int3
add
add
out
mov
scas
fwait
mov
pop
mov
out
int
call
ficomps
mov
pop
mov
cmpsb
sub
cmc
adc
jae
add
or
movsb
gs
sbb
mov
pop
mov
mov
dec
adc
andb
dec
stos
pop
and
imull
in
cmp
scas
xchg
fstpt
and
sub
aam
test
xor
pop
out
sub
dec
pop
mov
mov
test
dec
xor
dec
aaa
test
and
cmp
add
pop
dec
in
sbb
push
jbe
mov
dec
inc
fwait
push
incl
and
cmc
push
les
pextrw
sahf
in
add
iret
cltd
out
icebp
clc
push
fdivr
cmp
xor
inc
cwtl
sub
testl
mov
in
data16
add
adc
enter
es
in
sarl
aad
jle
jmp
aad
shll
in
xor
jne
xor
out
mov
jno
fsubs
aam
in
call
cmc
push
loop
fdiv
or
jle
fldcw
inc
stos
inc
in
in
lcall
sbb
imul
andl
push
and
and
out
aad
inc
push
sub
cmpsl
jne
xor
fs
aam
cli
adc
or
or
push
test
sbb
xchg
cmpsl
push
pop
sub
hlt
sub
ficoml
mov
leave
movsl
push
inc
in
ljmp
aaa
pop
addr16
dec
jnp
inc
loope
sbb
outsb
xchg
mov
addr16
add
inc
popa
adc
test
mov
cmp
in
xor
xchg
cmp
bnd
or
test
pop
pop
lahf
jb
insl
andl
loope
cmp
aam
add
inc
daa
fisubrl
shlb
in
xor
push
imulb
dec
cli
gs
push
fdivl
push
in
dec
dec
xor
das
jge
xor
out
cltd
es
test
add
and
lods
daa
movsl
out
insl
popa
adc
mov
or
sub
popa
xor
lods
dec
outsb
add
push
loop
sub
in
jno
dec
cs
sub
mov
jle
popa
jle
dec
test
loop
es
push
sub
out
push
out
cs
inc
xchg
or
aam
out
jno
inc
mov
loop
das
pop
repnz
mov
outsb
idivb
add
das
subb
push
dec
addr16
or
mov
andb
mov
popf
pop
push
mov
lds
cmp
int
in
push
mov
pusha
addps
inc
cmp
int3
dec
mov
sub
loope
xchg
xchg
jmp
adc
call
andb
mov
mul
dec
dec
xor
popf
and
adc
scas
push
mov
mov
push
fsubs
cmp
test
adc
aaa
js
sbb
and
xchg
fsubrs
fadd
mov
popa
insl
cmp
dec
inc
mov
push
adc
arpl
mov
pop
push
mov
sub
sub
dec
adc
jno
movsl
imul
dec
ja
pop
mov
mov
test
mov
push
es
mov
sub
rcll
xchg
sub
inc
pop
mov
xchg
fwait
inc
cs
inc
mov
jo
jo
mov
xor
xor
xor
or
pop
adc
gs
and
and
jo
aad
loop
cmp
shlb
inc
fdivs
in
adc
repnz
push
adc
pop
mov
scas
and
adc
mov
iret
sub
dec
sub
sbb
lds
pop
pop
push
sub
mov
mov
insl
dec
movsl
mov
mov
mov
addr16
xor
loop
adc
pop
test
lret
pop
mov
push
xor
sbb
sub
push
and
mov
sbb
test
sub
push
jb
in
pop
std
mov
inc
cltd
in
inc
push
addr16
sub
ret
shr
mov
outsb
testb
orl
mov
out
out
enter
inc
xor
push
fdivrl
push
call
in
popf
sub
out
fxam
out
jmp
gs
mov
or
aad
int3
test
sahf
add
sub
adc
fcom
add
sbb
cmc
xchg
jp
and
push
or
adcl
lds
xchg
push
dec
xor
cmpsl
mov
cmp
dec
jmp
pop
outsl
push
filds
pop
xlat
and
fisubl
push
adc
fdivrs
xchg
fcmovu
add
jns
cs
adc
sbb
cmp
scas
gs
jne
cmp
xlat
jge
idivl
daa
and
sub
shrl
mov
jno
scas
push
xchg
adc
mov
lods
inc
aad
inc
std
inc
cwtl
mov
cld
fnstcw
mov
pop
int
pop
cmp
cmp
divb
mov
and
ss
xchg
jge
inc
mov
mov
inc
out
xchg
leave
dec
ret
pop
loopne
insl
lds
mov
int3
xor
xor
shrb
pop
xor
cmpsb
xchg
inc
mov
push
movsl
xor
js
dec
sbb
cmpsb
cmpsb
inc
xchg
popa
mov
das
jp
ret
mov
pop
mov
and
subb
xor
cmp
bound
fsubl
and
and
push
scas
sub
bound
lock
loop
adc
insl
stos
loopne
fsub
popa
push
cld
in
fdivs
mov
xor
push
dec
push
inc
push
cltd
jg
insl
mov
lds
sub
inc
inc
cmc
add
ret
test
adc
gs
xor
inc
jmp
rcll
mov
sub
bound
std
adc
test
add
sub
inc
clc
insl
mov
and
in
xor
cmpsl
movsl
loop
out
xlat
and
mov
in
jmp
aad
hlt
inc
push
cmp
testl
adc
dec
mov
popf
inc
mov
adc
mull
push
xchg
jo
pop
inc
jnp
fcmovnu
movsl
lds
mov
lock
in
jmp
adc
pop
mov
dec
jg
arpl
pop
repz
xchg
fcomps
jno
pop
pop
in
adc
sub
rcll
mov
lds
in
xor
mov
xor
dec
pop
and
mov
jecxz
dec
inc
inc
sahf
out
cmpsb
push
mov
push
notl
cmpsl
lret
adc
js
xchg
adc
mov
mov
mov
xchg
ret
out
fiaddl
ja
aad
xlat
rdtsc
mov
iret
pop
je
or
test
pop
and
cmpsb
imul
cld
fwait
mov
mov
jge
push
enter
add
adc
daa
loope
in
jae
or
jge
jle
in
loopne
clc
jg
and
stos
inc
cs
loope
faddl
cmc
call
and
fwait
lods
test
dec
mov
mov
in
insl
ja
sarb
movsl
lods
mov
cmp
add
push
ds
in
aaa
out
test
and
xor
xor
cmp
dec
adc
sub
xor
dec
outsb
xor
sbb
out
adc
out
sub
popa
lea
sub
scas
sub
outsl
sub
in
dec
aad
movsl
add
and
scas
int3
ja
sub
adc
xor
hlt
pop
add
pop
lods
sub
dec
inc
shrl
loope
and
shlb
inc
daa
jmp
jmp
or
loop
rcrb
aam
into
outsb
lods
fdiv
xor
popl
aam
outsb
adc
mov
mov
sub
enter
sahf
mov
out
out
jmp
push
mov
pusha
jecxz
decl
sub
sub
sub
into
outsb
gs
ss
push
lret
mov
stos
and
push
mov
pop
inc
int
int
adc
xchg
push
push
mov
dec
adc
sub
mov
and
mov
dec
popa
dec
lods
push
bound
jmp
mov
adcl
inc
cmp
jo
adc
push
dec
sub
aaa
rcll
xchg
pop
arpl
mov
add
xor
ror
test
js
xor
dec
gs
mov
pop
mov
inc
pop
cmp
stos
inc
cs
fwait
xchg
or
pusha
iret
enter
das
fmull
inc
rorl
mul
adc
stos
mov
add
cltd
and
loop
fdiv
in
xor
test
mov
enter
adc
and
push
testl
pop
mov
jmp
dec
mov
inc
and
adc
add
gs
test
push
lcall
push
lds
or
mov
bound
cmp
out
sub
dec
xor
pop
cmpsb
shll
repnz
dec
js
xchg
jno
xchg
adc
mov
cmp
shrb
and
adc
mov
xor
mov
inc
adc
inc
pop
push
sub
adc
stos
xchg
add
loope
lods
stos
mov
pushf
loopne
sub
sub
and
ss
xchg
xor
adc
out
push
or
mov
mov
cmpsl
imul
aam
jg
addb
jne
cmp
insl
add
aam
insl
out
sbb
sub
test
mov
scas
xchg
push
jnp
cmp
xchg
call
push
insl
aam
jecxz
mov
test
popa
or
xchg
movsl
pop
aam
ljmp
dec
cwtl
add
out
je
push
sbb
in
dec
jne
adc
test
push
scas
fmulp
sbb
push
adcb
imul
loope
jno
je
outsb
cmpsb
push
out
es
lret
xor
mov
cmp
xor
xchg
jnp
pop
dec
stos
pop
bound
bound
push
fwait
std
push
js
dec
and
cmpsl
sbb
jecxz
adc
fmul
nop
add
sbb
xorb
sbb
dec
jb
test
cmp
pop
and
pusha
and
push
sub
push
sbb
clc
or
sbb
addr16
adc
inc
xorb
scas
lods
nop
xor
stos
inc
daa
adc
adc
das
aad
js
ljmp
cs
mov
pop
scas
repnz
cmpsl
pop
pop
aam
push
push
adc
je
cwtl
aam
xor
mov
ret
mov
sbb
push
pop
jno
or
pop
sbb
aaa
push
rcll
lds
movsl
loop
and
shll
dec
inc
stos
kxorb
lcall
addr16
sbb
mov
pop
jne
inc
ret
sbb
cmpsl
les
test
push
xor
xlat
imul
imul
xor
mov
cmp
aaa
push
int
loop
test
sub
adc
jecxz
aaa
lds
inc
sbb
enter
aad
xchg
xchg
push
push
cmpsl
loope
jo
ficoml
or
arpl
inc
pop
inc
xchg
mov
movsb
cmpsl
into
sbb
aad
xchg
xchg
push
std
out
pop
aam
sub
outsl
ja
aam
cmpsb
pop
mov
add
adc
mov
int
cmp
pop
push
xchg
pop
les
ret
adc
adc
outsb
pop
int3
push
test
adc
mov
das
pop
gs
or
push
cmp
jae
in
js
movsl
es
in
cs
imul
aas
sarb
popf
aad
aam
mov
push
push
sahf
cmpsl
pop
ss
insl
and
lods
pop
and
scas
mov
push
pop
and
mov
jl
push
jge
roll
loopne
pop
jnp
cltd
loope
gs
loop
adc
cli
in
popf
pop
mov
mov
loope
or
popa
fs
push
stc
insl
and
or
scas
stos
cmp
faddl
ljmp
xor
orb
and
fstl
pop
xor
and
cmp
lret
call
sub
ja
outsl
cltd
daa
in
fdivs
cmpsb
mov
adcb
in
fisubl
call
jnp
cmp
sub
jmp
out
xor
dec
shll
shr
test
dec
pop
jae
or
adc
cld
mov
adc
xchg
push
inc
cmpsl
les
push
pusha
shl
int
and
cwtl
mov
jno
mov
cmpsl
test
movsl
aaa
sbb
push
jno
add
or
into
roll
adc
imul
repnz
addr16
loopne
mov
push
add
push
cmp
push
jnp
pop
popf
leave
xor
in
cmp
inc
and
mov
test
imul
sub
adc
mov
jne
addr16
cmp
movsl
fs
xlat
in
pushf
mov
and
ficoms
sub
push
rcl
pop
cmpsb
inc
hlt
jp
dec
pop
in
jg
adc
aaa
jns
test
jae
xor
xor
add
jo
cmp
mov
adc
cmp
in
push
fbld
jl
hlt
push
sub
cmp
xchg
jnp
ret
xchg
cmc
gs
inc
push
mov
pop
dec
push
push
and
mov
stc
or
sub
ja
xchg
xor
xchg
jp
lods
test
lock
scas
out
pop
and
js
mov
jecxz
sub
in
inc
push
and
lds
and
fcmovnb
mov
jne
in
jge
out
and
inc
mov
lods
jle
push
xchg
js
aam
sub
ds
inc
and
rcr
lahf
into
test
aam
xchg
jae
push
stc
addr16
xchg
movsb
push
pop
outsb
ja
add
or
arpl
js
xor
and
push
mov
pop
lret
or
or
int3
lods
shrl
and
enter
fnstsw
inc
xchg
in
push
call
vpcmpeqb
cltd
adc
dec
movsl
cmc
out
mov
notl
pop
mov
push
sub
ret
mov
adc
pop
cmpsl
cld
and
jecxz
lahf
dec
in
adc
test
in
inc
cmpsb
adc
out
push
or
insl
push
mov
mov
test
push
popf
push
or
pop
inc
push
lds
mov
xor
lods
loop
push
std
in
std
test
add
xor
dec
scas
push
mov
fsubs
sbbb
mov
ret
clc
into
cli
push
int
and
mov
into
popa
daa
xor
or
pop
insl
pop
sub
mov
xchg
pop
or
jae
inc
cmpsl
sbb
pop
outsb
jecxz
mov
das
dec
lds
add
stos
cmc
inc
mov
xor
ja
into
mov
addr16
xchg
out
inc
xchg
or
xor
ds
mov
stc
inc
add
adc
cmp
es
push
rcll
push
cmpsl
andb
bound
xchg
js
insb
jae
sub
mov
in
mov
and
push
mov
daa
xchg
movsl
mov
js
pop
lods
pop
sarl
lods
sbb
xchg
jmp
inc
insb
loop
push
icebp
xchg
sub
mov
adc
adc
stos
idivl
sub
dec
push
arpl
fcom
dec
xchg
push
push
loopne
test
mov
sbb
push
and
sub
mov
mov
adcl
sub
movsb
gs
out
sub
adc
xchg
mov
and
pop
test
popf
sub
push
movb
hlt
xor
push
pop
out
sbb
pop
gs
ds
aad
rorb
push
xchg
jb
add
mov
mov
or
ret
xchg
mov
mov
int
pop
out
push
aam
mov
daa
test
out
push
lret
jno
add
mov
scas
cld
stos
hlt
pop
adc
cwtl
inc
lds
or
adc
xchg
ret
repnz
pop
fwait
cmp
adc
mov
pop
nop
mov
sub
mov
push
adc
jge
leave
outsb
aaa
call
mov
xor
test
ljmp
stos
ret
stos
jno
aaa
sub
pop
dec
call
cmc
out
stos
jno
inc
stos
dec
mov
cmpsb
adc
lock
add
or
xorb
dec
iret
push
adc
aam
push
mov
push
or
test
testl
xchg
js
push
das
and
add
sub
dec
test
push
insb
out
in
lods
sbb
xor
lods
adc
pop
cs
mov
lahf
cltd
inc
sub
popf
insl
out
repnz
adcl
int
das
sbb
push
sub
hlt
lret
mov
test
add
leave
jecxz
mov
movsl
imul
ret
ljmp
scas
es
imul
cmp
rclb
loope
and
aad
jg
adc
push
xchg
ja
push
out
sub
and
cmpsb
adc
cltd
lahf
mov
pop
aaa
cmpsl
and
xor
inc
subl
addr16
jae
out
outsl
push
sbb
stos
es
int
cs
ljmp
addr16
shrb
jg
cmp
lods
insb
add
fstpt
mov
add
mov
add
test
cs
dec
int3
cmp
cmpsl
add
rcrl
ja
fisttpl
xlat
push
jb
lret
sub
scas
mov
add
and
mov
sub
addr16
cmc
xchg
jl
add
push
outsb
mov
sub
add
gs
pop
shll
xchg
adcl
hlt
movsl
xor
xchg
cmp
adc
mov
out
mov
in
push
fwait
and
mov
lcall
mov
cmp
in
add
sahf
adc
lds
sbb
pop
push
sbb
bound
daa
mov
test
adc
inc
mov
pop
pop
inc
test
mov
out
xor
push
xchg
mov
ja
ror
imulb
pop
dec
dec
pop
inc
jb
pop
ds
stos
lret
call
cmpsb
les
xor
or
adc
dec
mov
mov
in
into
mov
and
sbb
fs
add
hlt
and
gs
adc
hlt
adc
and
fnstsw
orl
fldl
mov
and
dec
pop
add
lahf
sub
cmp
push
add
out
fists
cmpsl
push
imul
and
addr16
xchg
and
ret
lock
xchg
fdivl
and
iret
push
daa
inc
jb
mov
adc
sub
leave
adc
clc
psubw
ss
mov
mov
and
test
daa
lods
and
daa
sub
lds
add
inc
aaa
cmpsl
aad
add
xor
xor
jp
sub
mov
movb
xor
mov
fiadds
lret
ror
enter
lahf
sbb
mov
gs
dec
pop
push
pusha
pusha
adc
shrl
es
aas
pop
mov
lcall
push
or
in
bound
pop
adc
or
jno
inc
loope
mov
in
ret
pop
bound
outsb
test
aad
cmpsb
cmpsl
in
mov
inc
adc
loope
cmp
fsubrl
dec
cmp
xchg
inc
or
iret
fs
lods
sbb
addr16
and
sub
inc
cmpb
mov
lock
filds
test
cmp
enter
sbb
and
mov
cmc
mov
dec
iret
stos
jb
add
xchg
imul
dec
or
out
ss
and
shr
dec
cs
sub
mov
inc
pop
xor
mov
inc
adc
cmp
lahf
dec
repnz
repz
lahf
out
push
pop
cmp
xchg
enter
shrl
xor
mov
cld
sub
in
push
mov
lcall
pusha
test
mov
sbb
iret
loop
pop
inc
and
repz
push
ja
popa
sbb
push
xchg
mov
arpl
pop
fists
lahf
fcompl
mov
and
mov
lea
pop
bound
in
jmp
es
inc
and
dec
scas
nop
push
call
and
test
js
add
gs
or
ja
fcomps
adc
adc
xlat
inc
fdivs
lods
push
and
mov
cmc
xchg
hlt
lock
push
pop
and
adc
or
inc
lahf
dec
mov
xchg
sbb
pushf
movsl
lds
or
dec
outsl
xlat
cmp
pop
scas
ret
test
pop
daa
lds
fldl
xor
push
push
ficoms
repz
pop
ja
aam
lock
loope
enter
mov
sbb
push
lcall
pop
bound
cmp
and
repnz
sub
inc
xchg
dec
in
test
loop
fsubrs
sub
pop
xchg
add
xor
adc
add
je
cmp
das
lea
add
adc
cwtl
ja
imul
loopne
xchg
pop
pop
repz
sbb
dec
daa
sbb
cltd
jo
les
imul
fbstp
xchg
inc
test
sub
dec
inc
gs
call
xchg
pop
and
ret
sti
add
sub
lds
dec
gs
andb
mov
shl
mov
and
or
xchg
es
xchg
or
pop
and
dec
push
rcll
or
xor
mov
inc
jle
push
and
mov
js
scas
xchg
mov
dec
add
test
repz
aaa
loopne
inc
rol
jns
jbe
xchg
or
movsl
cmp
in
inc
pusha
mov
cmp
xor
cmp
loope
call
xor
push
inc
pop
pop
cmpsb
int
push
cmpsb
lahf
sub
push
push
cmpsl
ret
sbb
dec
and
insl
inc
jo
bound
ds
inc
push
ss
stos
es
loop
in
inc
adc
pop
jo
inc
icebp
aam
mov
lahf
push
xchg
popf
inc
in
mov
push
add
in
cmpsl
xchg
mov
xchg
ret
add
adc
loope
pop
test
addr16
mov
movsl
cmp
mov
xlat
frstor
call
negl
mov
rorl
mov
outsb
shll
cmpsl
dec
mov
test
roll
lcall
in
fdivrs
add
scas
imul
out
sub
in
fcmovnbe
or
mov
jae
adc
jo
push
and
lea
xchg
push
push
ror
addr16
inc
call
xchg
test
lods
ja
or
call
popa
ljmp
cmpl
mov
frstor
mov
dec
push
aad
scas
ret
mov
popl
pop
sub
in
mov
scas
jmp
frstor
xlat
and
xor
jns
xor
icebp
mov
sbb
adc
xor
in
push
sbb
test
inc
test
loope
dec
loop
and
or
fs
lret
test
jmp
or
shll
and
jae
outsb
mov
loop
jne
repz
mov
repnz
dec
out
sbb
fbstp
ja
xchg
xchg
cmpsl
call
sarl
insl
in
jg
movsb
xchg
cs
enter
pop
daa
loope
fcoml
bound
daa
pop
shlb
lods
mov
outsb
outsb
jg
inc
cs
lock
and
test
and
imul
cmp
inc
in
xchg
lds
xchg
push
inc
aam
insb
in
sahf
mov
inc
mov
outsl
fcos
mov
bnd
pop
ja
sub
add
dec
pop
lods
mov
in
jge
push
fwait
daa
inc
dec
ds
std
subb
jo
aaa
jnp
sub
pushf
in
loope
js
sub
push
repnz
bound
inc
sub
adc
aam
addr16
js
out
fsubl
negb
inc
add
mov
or
mov
xchg
test
in
mov
cmpsb
nop
mov
adc
xor
hlt
orb
add
xchg
movsl
mov
push
sti
nop
adc
add
mov
or
sub
out
sarb
sub
bound
bound
xchg
or
lcall
xlat
lods
fstl
inc
stos
xor
cmpsb
push
mov
and
mov
mov
out
in
jle
das
movsl
addr16
in
pop
mov
xchg
adc
test
mov
loopne
cmpsl
adc
adc
fs
sbb
mov
adc
sbb
cmp
adc
in
lock
scas
inc
xor
xchg
in
dec
inc
aam
loop
insl
lods
inc
insb
rcll
xchg
jae
ljmp
jl
andb
aas
orb
push
mov
and
xor
add
test
xchg
enter
xor
je
aaa
push
pop
and
xchg
ret
jnp
cld
xor
mov
push
and
inc
and
lock
mov
pop
jns
inc
nop
push
out
dec
pop
push
fimull
push
ja
add
movsl
addr16
cmp
js
loope
push
sbb
rolb
call
xor
sahf
test
cmpsl
les
add
dec
in
lea
insb
popa
xor
jg
inc
xor
push
lock
mov
mov
cmpsl
mov
stos
xchg
cmp
dec
outsl
imul
loop
xor
mov
or
es
push
out
pop
mov
ja
or
idivl
sub
cmp
and
aad
jge
adc
fsub
fxam
gs
and
push
loop
jl
shl
icebp
in
push
adc
shlb
les
mov
ret
test
add
incl
pop
xchg
jg
add
mov
and
push
adc
xchg
movsb
and
inc
cmpsb
sub
mov
fistl
push
ja
fnstenv
push
jae
xor
xor
pop
and
cmc
fcoms
sub
mov
stos
jge
imul
mov
xchg
lret
or
imul
icebp
jp
in
push
es
sbb
subb
jne
test
and
lret
cld
mov
add
cmp
mov
xchg
inc
lret
mov
stos
sbb
jge
or
mov
fsubs
cli
cmc
jae
stos
in
lods
dec
lds
pop
push
iret
pop
addr16
cmp
jmp
mov
pop
int
cmpsb
adc
xchg
lret
sub
inc
xor
loope
cmpsb
xor
push
lods
test
and
ljmp
sub
in
popa
andb
aad
lods
lcall
in
dec
lods
sbb
pop
icebp
push
push
mov
rdtsc
daa
sub
push
jp
inc
mov
or
and
adc
or
xorb
push
insb
push
andl
test
add
movsl
popf
cmpsb
xchg
das
push
addr16
dec
push
jbe
cltd
or
push
out
adc
push
sub
lahf
out
fisttpll
and
adc
in
jae
and
out
xchg
aad
xor
enter
shll
adc
fisubs
xchg
test
in
jg
push
repnz
stos
mov
push
dec
ja
xor
aad
ljmp
addr16
xchg
mov
sub
cmp
adc
mov
xor
jns
test
addr16
jne
adc
push
aad
mov
xchg
push
movsl
in
mov
iret
das
jg
test
popa
dec
cs
sub
rcll
ja
mov
mov
cmpsb
push
aam
jmp
sub
mov
and
sub
out
xor
add
clc
cmp
push
rep
iret
in
inc
mov
in
rorl
push
imull
repnz
jo
icebp
sahf
cmp
in
dec
aaa
jnp
jo
dec
in
xchg
push
orl
jb
iret
popa
add
xor
or
es
ljmp
imul
popf
notl
sbb
in
mov
fsubrs
aad
push
mov
or
popa
jecxz
nop
xor
mov
cmp
push
dec
daa
cmp
lods
inc
jp
mov
cmp
daa
sub
mov
je
push
jno
xlat
testl
sbb
in
and
popa
mov
call
mov
sbb
jp
call
dec
bound
in
in
push
sub
iret
adc
cmpsb
data16
xchg
ja
jp
pop
repz
dec
shld
adc
fsubs
jmp
cmc
add
adc
jl
scas
pop
xchg
jmp
decl
sub
popf
push
aad
or
int
or
shll
or
pop
sub
das
xor
dec
adc
or
xchg
aaa
sbb
add
sbb
cmpsl
sbb
cmpsl
sbb
cmpsl
sbb
cmpsl
sbb
cmpsl
sbb
sbb
cmpsl
sbb
loop
adc
push
cld
call
addr16
test
insb
jle
xchg
mov
and
mov
sub
inc
test
inc
inc
push
pushf
aas
pop
shll
ret
push
cmp
sub
mov
push
or
mov
adc
hlt
int
pop
aaa
inc
pusha
push
push
jl
dec
aam
mov
xchg
or
inc
repnz
leave
enter
adc
lds
xor
mov
or
xchg
jno
inc
mull
dec
inc
sbb
call
std
push
imul
roll
lock
test
xor
movsb
cwtl
mov
cltd
adc
pop
add
movsb
pop
outsb
lahf
sub
bound
in
hlt
push
out
lea
cmp
loopew
mov
cmp
daa
or
ficomps
icebp
sbb
xor
pop
fs
cmpsl
std
dec
leavew
pop
out
push
push
inc
ja
popf
or
inc
fcomi
xor
add
int3
cmpl
hlt
push
push
cld
xor
sbb
xchg
mov
jae
xchg
xchg
push
rorl
fstl
or
push
adc
jg
loopne
cmpsl
mov
dec
and
insb
jge
push
or
stos
cmp
xlat
mov
dec
in
push
push
and
fstpl
daa
and
jmp
inc
push
inc
cmp
xchg
mov
subl
and
notb
ret
inc
push
in
out
dec
test
or
adc
call
and
jne
rorl
out
pusha
enter
push
sbb
jne
and
fidivrs
mov
jle
mov
ds
insl
das
mov
mov
xchg
test
loopne
lods
int3
out
shlb
add
popa
cmc
addb
daa
in
sbb
pop
inc
mov
sub
popa
lahf
stos
xor
in
fsub
in
add
pop
add
into
fidivs
iret
int
xor
popa
dec
and
sub
mov
icebp
pop
inc
sti
xor
fstpt
popa
es
pop
jp
test
mov
test
pop
insb
push
fsts
xor
mov
inc
sahf
es
fistpll
inc
jbe
scas
jno
push
pop
mov
mov
clc
jae
mov
push
push
ret
leave
pop
mov
out
push
mov
dec
mov
test
sub
jg
xorl
jne
out
push
daa
jne
in
jbe
and
adc
ret
dec
mov
dec
out
push
dec
lock
mov
add
call
testl
jne
jl
sub
fisubrs
fisubrl
cs
jp
test
outsl
mov
mov
in
test
cltd
push
mov
xchg
dec
xor
cs
shll
lahf
mov
xor
addl
sbb
xchg
cltd
dec
pop
dec
sub
inc
sub
jg
es
lret
lret
sbb
insb
shrb
xchg
sbb
xlat
xor
jge
fisubs
fcmovu
or
pop
gs
fsubrs
push
es
fidivs
sti
pop
jecxz
call
sahf
add
sub
sub
xchg
fmuls
inc
test
stos
xchg
mov
sti
and
mov
and
in
loop
imul
enter
fsubrs
ret
dec
push
dec
rolb
and
hlt
add
aas
push
dec
gs
inc
jmp
popa
fdivs
push
mull
imul
mov
ret
mov
cmpsl
or
fstl
mov
sbb
adc
bound
sbb
sbb
pop
adc
fmulp
xor
or
adc
sub
cmp
sub
inc
es
stc
dec
xchg
rol
fimull
sub
inc
inc
pop
inc
pop
divb
dec
mov
sbb
addr16
pop
cmp
jns
aas
xor
pop
mov
or
in
inc
mov
test
pop
xor
inc
add
mov
mov
dec
jne
sbb
test
jmp
loop
and
lods
mov
fisttpll
inc
test
push
lret
xor
sub
in
xchg
pop
movsl
es
es
outsb
ret
imul
xchg
xor
jns
outsl
xchg
negl
or
mov
mov
or
mov
inc
insb
adc
dec
cld
jp
rcrb
dec
adc
pop
xchg
rcrl
repz
cmpsb
pop
xor
xchg
or
scas
adc
dec
shlb
pop
repz
in
sbbb
enter
lcall
inc
and
mov
out
pop
inc
test
dec
loop
xor
jno
push
cmp
adc
fadds
pushl
inc
popa
sbb
cmpsl
adc
pop
or
dec
adc
push
out
inc
xchg
lret
pop
adc
in
add
mov
or
mov
repnz
andl
adc
and
and
dec
add
in
xor
lods
pop
dec
sub
icebp
imul
sbb
dec
sbb
sbb
int3
scas
arpl
rcll
xchg
mov
int3
inc
mov
jbe
lds
mov
jl
or
mov
inc
mov
dec
ret
dec
imull
lea
sub
push
inc
sub
and
pop
sub
lret
out
inc
stos
inc
adc
les
test
sbb
cltd
subl
aad
adc
jae
mov
sub
inc
decb
mov
xchg
dec
bound
dec
or
push
add
shll
cmp
ficompl
mov
int
xchg
aam
cmpsl
lcall
dec
enter
adc
cmp
xor
iret
push
add
sbb
cmp
fwait
xorb
inc
dec
icebp
jo
popa
inc
mov
adc
ret
push
jecxz
xor
lods
mov
and
pop
mov
test
inc
call
lds
clc
mov
fstpt
xor
movsl
repz
shr
jge
sub
add
mov
and
xlat
into
movsl
loopne
xchg
lock
jmp
sbb
or
dec
xchg
dec
xchg
xor
out
ljmp
cmp
testl
pop
fucomi
pop
mov
lods
pop
es
cmp
ljmp
and
xchg
fcmove
lds
pop
xchg
xchg
and
sbb
clc
push
frstor
add
push
push
fdivl
loopne
adc
xchg
arpl
xlat
and
cmpsb
or
dec
add
loopne
cld
push
add
cmpsb
xchg
cmc
cmp
scas
or
push
stos
push
push
lods
orb
sub
out
in
sub
aaa
je
jbe
sbb
gs
jbe
pop
cmp
push
lods
fdivs
push
rcll
es
sub
xchg
jle
cmp
mov
cmpsl
mov
adc
test
push
dec
mov
es
and
fistl
or
hlt
fs
mov
lods
bound
sub
adc
sub
xchg
cmp
out
push
pusha
nop
out
mov
scas
dec
inc
jb
push
mov
imul
cmp
push
imul
pop
add
push
and
pop
mov
lods
movups
push
pop
dec
jnp
neg
out
jmp
es
rcll
dec
and
out
add
cmp
lret
pop
adc
scas
xchg
mov
icebp
jle
or
aas
dec
adc
push
hlt
iret
pop
push
mov
in
dec
dec
mov
sbb
mov
inc
clc
cmpsb
cmp
mov
add
jp
mov
push
jne
js
mov
fs
stos
in
xlat
mov
jge
pop
add
xor
ds
push
in
sub
addr16
pop
and
dec
testl
xchg
addr16
repz
push
mov
inc
gs
in
push
repnz
and
hlt
jb
iret
inc
test
test
iret
xchg
push
mov
xor
imul
ret
and
sbb
adc
daa
lods
cmp
inc
cmp
popa
inc
lods
and
sbb
pop
hlt
push
fnsave
movsb
fisttpl
push
pusha
scas
mov
cmp
in
or
cwtl
cs
pop
es
gs
xlat
in
or
int
and
mov
and
xchg
pop
scas
adc
add
mov
cwtl
fsts
test
mov
repz
pop
icebp
pop
inc
frstor
repz
adc
jae
push
push
xchg
add
cmp
adc
ret
push
mov
cmpsb
and
add
in
add
packuswb
or
sbb
add
sub
mov
lds
rcrl
adc
pop
in
dec
sbb
xor
gs
test
bound
inc
adc
push
inc
mov
insl
testl
cmp
pop
cmpsb
jmp
es
stos
xchg
je
xor
ja
jmp
add
popl
xchg
test
adc
aam
cmovs
stos
xchg
xor
movsb
hlt
hlt
sub
fstl
call
gs
outsb
mov
jae
mov
loop
shrl
es
in
int3
mov
xor
jge
sub
sbb
clc
cwtl
ret
ficoms
stos
mov
aad
lahf
scas
repnz
inc
xor
rcll
mov
pop
ds
push
jg
inc
icebp
mov
fs
cmpsl
call
add
hlt
adc
aaa
xchg
aad
hlt
xor
mov
js
inc
lcall
outsb
push
mov
lcall
out
adc
fs
mov
out
or
inc
and
and
daa
or
jae,pn
cmp
dec
call
popw
dec
fldcw
inc
or
xor
outsl
lret
loopne
adc
std
test
les
and
push
aaa
cs
jmp
inc
mull
xor
mov
lods
imul
movsb
xchg
mov
adc
push
pop
and
or
sub
cld
pop
gs
xor
outsl
jns
and
or
addr16
popf
adc
mov
dec
xor
or
dec
out
ja
inc
or
lds
imulb
sub
aam
aad
in
push
test
into
flds
push
dec
jb,pn
mov
popa
aaa
mov
xchg
data16
cs
das
lds
test
repz
std
adc
pop
ljmp
scas
lods
push
in
dec
mov
push
js
aaa
inc
ret
sub
fcomip
inc
lds
scas
movsb
cmpsl
std
into
fdivl
aaa
outsb
push
mov
rolb
sub
mov
add
sub
and
cs
push
in
mov
fisubs
cmp
pop
cs
ja
hlt
push
movsb
dec
mov
aam
fimull
repz
xor
daa
and
or
mov
dec
push
jb
mov
enter
sub
mov
dec
adc
inc
push
mov
and
jl
insb
es
jno
or
ja
xchg
mov
xchg
lret
out
inc
imul
sbb
mov
inc
push
cltd
adc
xorl
cmp
cmp
mov
dec
cmp
out
lahf
jnp
outsb
and
push
arpl
and
ljmp
push
dec
xor
push
add
xchg
or
sbb
pop
mov
xor
add
outsb
paddsb
clc
cmpsb
jae
xchg
or
call
and
cmc
test
cmp
push
clc
adc
or
cs
je
movsb
sub
xor
mov
cmpsb
std
sub
movsl
inc
mov
iret
ss
notl
pop
loope
add
mov
jecxz
xchg
pop
jmp
mov
dec
push
dec
lock
and
inc
gs
in
ds
std
xlat
add
dec
pop
pop
inc
bound
inc
bound
ret
movsl
or
imul
lds
andl
inc
negl
xor
rorl
pop
icebp
mov
inc
es
bound
popa
or
push
push
mov
sub
mov
add
cmp
gs
loop
xchg
mov
xor
jecxz
jmp
xchg
push
and
mov
popa
cmpsl
pop
xchg
xor
dec
pop
daa
mov
movsb
push
das
xor
push
sbb
popf
jnp
and
jbe
jno
aam
icebp
mov
adc
xchg
jge
jo
bound
jo
stos
jle
mov
and
xchg
jae
cld
xchg
pop
call
in
std
sti
ds
mov
adc
mov
pop
stos
mov
imul
outsb
loope
mov
add
xchg
dec
sub
ljmp
push
add
mov
inc
mov
rcll
out
fcom
cmc
jge
adc
sbb
fnstsw
bound
xchg
aaa
mov
add
mov
push
jns
loope
add
push
in
mov
dec
mov
and
jmp
and
cmp
bound
call
xchg
or
imul
pop
inc
or
fwait
movsb
fwait
loope
popa
das
mov
movsl
popa
shrb
mov
add
jecxz
popf
in
stos
movb
or
adc
loopne
fcoml
mov
inc
scas
jns
xchg
pop
mov
push
cltd
in
xchg
sarb
adc
in
nop
jbe
in
rorl
pop
xor
inc
je
push
sbb
mov
xchg
jnp
push
or
movsl
int
add
loopne
aad
xchg
mov
push
dec
push
lods
lds
ret
movsl
call
xchg
insl
sub
rclb
inc
xchg
lahf
dec
mov
xor
and
push
mov
aaa
xchg
stc
call
push
or
gs
stc
shll
jg
push
dec
repz
mov
icebp
sub
lret
sub
pop
mov
arpl
stos
repz
adc
jmp
int
mov
aaa
xchg
xor
sbb
fxtract
enter
xchg
mov
mov
and
insl
out
and
stos
jl
insl
notl
stos
fdivrs
xchg
and
xor
cmc
push
fld
lahf
xchg
fisubrs
paddd
lods
adc
pop
lret
stos
fcmovu
clts
mov
sub
call
enter
lock
mov
sub
mov
jo
push
xor
in
cmpsl
cmc
cmpsl
xchg
adc
outsb
xchg
clc
pop
mov
add
sub
jg
in
pop
pop
dec
sbb
sub
ss
add
je
sub
jmp
sub
pusha
out
or
das
pop
cmpsl
sbb
mov
xchg
jbe
mov
lock
fcomps
movsb
lcall
loop
adc
roll
addr16
imul
test
call
pop
mull
lds
movsl
and
inc
in
shll
or
hlt
inc
or
insl
movsl
mov
mov
stos
or
enter
fstpl
add
imul
into
into
das
adc
push
call
xchg
sub
imul
inc
test
enter
lods
dec
push
js
in
jnp
sub
and
xor
leave
loopne
adc
out
call
cmpl
ss
sbb
adc
idivl
xchg
adc
shll
push
out
popa
adc
mov
insl
pop
popf
push
pop
lock
mov
fsubrl
pop
sub
fildl
mov
hlt
jne
push
hlt
icebp
in
mov
push
xchg
sub
ja
inc
sub
inc
and
mov
or
jno
inc
daa
loop
test
das
dec
enter
iret
int3
lock
shlb
icebp
dec
jb
arpl
and
idivl
inc
inc
test
lods
negl
mov
scas
lods
call
or
adcb
mov
xchg
dec
xor
or
sub
in
xor
inc
icebp
clc
add
int3
and
loop
sarl
jne
sub
xor
gs
inc
and
in
call
data16
loop
fidivs
insl
movsl
mov
sub
pushl
mov
sub
adc
dec
or
mov
call
xor
inc
ja
js
xor
adc
jge
in
fcom
shrl
mov
dec
xchg
adc
cmc
and
sub
dec
sub
hlt
inc
aaa
pop
sarl
ss
shlb
inc
inc
aas
repz
cmpsb
out
cmp
sub
es
xlat
push
addr16
push
imul
add
sbb
dec
push
or
inc
and
inc
jae
sub
fisubl
rorb
push
sub
ja
dec
mov
loope
push
and
scas
xor
test
cmpsl
pop
adc
jecxz
adc
stos
jnp
mov
es
lahf
movsl
pop
imul
test
enter
push
mov
mov
iret
pop
scas
sub
mov
mov
mov
sub
es
cmpsl
sub
loop
mov
mov
mov
mov
xor
or
xor
mov
or
aam
jecxz
test
fimull
xchg
inc
mov
aad
inc
lock
popa
fsubp
mov
aaa
adc
ja
aad
jp
and
outsl
pop
push
lock
mov
aaa
sbb
jle
test
aad
inc
lahf
addb
orw
and
mov
call
scas
and
gs
pop
sahf
push
or
imul
loope
push
jnp
mov
fwait
out
lds
inc
popa
scas
ljmp
rorl
jge
negl
stos
insb
popf
mov
pop
sti
mov
outsb
push
sbb
enter
fstp
and
pop
js
adc
pop
dec
out
jnp
push
xchg
je
shr
popa
sbb
mov
inc
aaa
out
pusha
mov
jbe
xor
and
add
mov
xlat
dec
ja
pop
xchg
jg
imul
adc
dec
mov
mov
hlt
mov
jg
and
adc
dec
mov
adc
int3
das
mov
pop
cmc
aaa
fcomp
aad
mov
and
jo
cmpsw
pop
lcall
and
dec
fidivs
lods
dec
sub
out
out
test
repnz
adc
or
jne
inc
pop
aaa
add
inc
push
out
stos
cs
push
inc
insl
loop
add
jmp
pop
int3
mov
loop
xchg
sub
in
push
sub
rcll
out
test
and
mov
sub
push
push
adc
pop
dec
test
xor
cld
icebp
popf
xor
pop
enter
adc
aam
mov
xchg
in
outsb
mov
test
inc
pop
test
xchg
mov
test
inc
sub
xor
cwtl
lea
enter
je
add
mov
push
daa
mov
xchg
test
inc
fidivs
push
cmc
insl
jno
popa
data16
cmp
xor
inc
and
xor
ret
cmpsb
push
imull
es
jge
mov
adc
dec
mov
xor
cmp
sub
mov
movsb
mov
adc
inc
inc
aad
mov
fidivs
mov
xchg
es
adc
insl
mov
mov
jecxz
ret
loope
scas
lds
jge
add
dec
fisubrl
aaa
ficoms
jae
shrl
cmp
es
ficoms
dec
inc
pop
movsl
mov
in
movsb
or
jg
hlt
inc
fsubs
cmp
and
sbb
jp
imul
testl
mov
inc
push
sub
inc
lods
sbb
int
inc
push
notl
cmpsl
inc
aaa
push
adc
and
dec
xor
movsl
inc
jg
ja
sbb
push
jle
imul
sti
or
and
jnp
bound
movsb
mov
int3
scas
test
add
lcall
or
fsubs
mov
push
lea
dec
xchg
pop
pop
lds
adc
fcom
in
jg
dec
lea
dec
sbb
lds
adc
xor
enter
imul
popa
rcll
inc
mov
mov
add
shll
mov
dec
or
xor
outsb
push
mov
imul
popa
or
xor
cmp
pop
inc
repnz
and
add
daa
mov
adc
sbb
in
js
mov
dec
mov
add
lds
stos
movsl
sub
cmp
addr16
dec
test
jmp
inc
in
pop
or
pusha
adc
pminsw
mov
mov
sti
mov
pop
call
lcall
jmp
pop
pushf
fists
xchg
shrl
pop
rol
jp
push
or
ljmp
movsl
or
arpl
pop
jno
insl
cmpsl
loopne
adc
xor
cmpsl
pop
xor
addr16
clc
stos
ret
scas
inc
test
push
jae
dec
daa
data16
sarl
dec
addr16
adc
mov
or
or
pusha
xor
movsl
inc
testb
imul
jmp
push
xorl
sub
nop
and
xchg
mov
push
mov
push
sub
es
stos
cld
xlat
test
push
aaa
mov
pop
mov
inc
fnstcw
mov
int3
push
dec
popa
aad
jne
adc
insl
sbb
or
addb
pop
mov
inc
adc
mov
cs
lods
vorps
mov
clc
mov
inc
addl
push
lret
cli
sub
dec
mov
icebp
dec
push
sub
in
sub
xchg
call
xor
xor
cmp
cmc
js
inc
mov
mov
scas
push
ds
in
icebp
ja
stos
pop
dec
push
push
loope
std
scas
ja
int
dec
adc
sub
test
imul
out
scas
in
sbb
dec
push
adc
pop
xchg
in
andb
call
aaa
fisubs
movl
inc
cmp
lahf
adc
xor
divb
jge
in
lahf
out
fildl
pop
mov
mov
pop
pop
pop
or
dec
leave
loop
fists
loope
mov
pop
xchg
mov
shll
and
or
sbb
loop
outsb
add
mov
xchg
xor
cmpsl
in
mov
call
js
sbb
in
outsb
fcomp
sbb
dec
roll
call
test
push
jnp
aad
bound
pop
adc
or
mov
mov
or
sub
jae
stos
push
jl
cli
rcr
sub
mov
and
mov
dec
adc
jmp
in
push
dec
mov
xchg
inc
xchg
mov
pop
testb
cli
incl
loope
test
lds
sub
xchg
mov
outsl
test
pop
sub
sbb
push
push
rorl
or
pop
rolb
push
and
cmpsl
sub
inc
pop
pop
sub
movsl
mov
divb
jae
push
push
lds
cmp
lods
push
into
cmp
mov
sub
movnti
imul
mov
daa
out
cmc
mov
dec
ja
mov
lock
je
xchg
out
xchg
call
fildll
push
ffreep
or
and
loop
or
mov
mov
testb
mov
call
lcall
sub
out
add
sahf
pop
push
outsb
push
add
enter
sahf
xlat
xchg
pop
pop
sub
mov
mov
xchg
test
rol
jbe
movsb
and
mov
rcr
xor
popa
push
add
and
cmp
xchg
in
call
pop
dec
insl
mov
mov
sub
xchg
sti
rorl
sbb
imul
dec
add
repnz
in
adc
fs
icebp
mov
aad
mov
es
and
dec
mov
mov
andl
scas
jg
cmp
push
mov
push
pushf
pop
insb
push
icebp
jp
addr16
in
icebp
or
inc
loope
push
xchg
push
fisubs
movsl
imul
jle
fisubl
dec
mov
and
sub
aad
xor
push
adc
pop
call
daa
pop
lods
pusha
aad
push
addr16
pop
cmpsl
mov
in
into
xor
add
push
dec
repz
jno
fs
in
les
add
mov
lret
xchg
imul
out
in
cmp
bound
push
pop
mov
pop
pop
das
mov
sub
in
pop
popa
fsubs
push
loope
adc
pusha
test
or
sub
xor
les
push
fcmovbe
insb
push
and
and
shll
xor
fwait
add
and
fsubl
dec
and
xchg
mov
pop
add
xor
and
cmc
pop
adc
or
divb
out
icebp
sarl
pop
dec
jno
and
mov
xchg
gs
cmp
scas
pop
sub
push
bound
mov
inc
out
pop
sbb
fsubs
cmp
xchg
imull
adc
xlat
or
pop
enter
mov
ret
xor
fdivs
jmp
rcl
out
stos
shll
movsb
and
add
mov
cmc
loope
mov
mov
add
dec
cmc
or
pop
icebp
lds
add
dec
pop
pop
bound
inc
enter
rcrl
and
es
push
push
fisubs
bound
and
out
sub
rdpmc
push
enter
lods
add
jg
popa
push
push
and
xchg
mov
fsubl
shrb
cli
jae
sarb
pop
pusha
stc
popf
cld
arpl
and
sbb
lahf
addl
push
cmp
sbb
xchg
inc
sub
jle
mov
inc
adc
or
mov
sub
mov
idiv
addr16
xor
mov
decl
dec
cli
lcall
and
cmpl
fstpl
jecxz
jnp
in
xor
aam
xor
insb
fwait
shll
sub
add
pop
add
sub
adc
or
lahf
mov
sbb
mov
or
push
outsb
adc
cmpsb
lahf
sub
sbb
and
and
sbb
stc
mov
sbbb
cltd
mov
pop
adc
test
dec
cmp
fdiv
jno
cmc
shrl
xchg
loope
pop
push
xor
in
les
decb
add
push
movsl
mov
jno
adc
mov
dec
lods
sub
cltd
pushl
and
mov
insb
imulb
ficoms
and
loope
int
dec
pusha
imull
inc
nop
out
jmp
sub
cmp
outsl
bound
das
in
sub
inc
mov
mov
rorl
jle
inc
loope
adc
mov
and
xchg
or
insl
inc
and
mov
fcmove
lds
subb
or
rcrb
and
mov
mov
cmpsl
mov
fbstp
loop
jnp
andb
and
or
or
je
mov
jecxz
pop
jae
pop
mov
pushf
and
scas
push
aam
loope
adc
push
dec
and
sbb
and
loop
push
cli
ds
and
mov
aam
jp
mov
out
lods
jne
cwtl
fcoms
xchg
push
push
inc
push
mov
stc
pop
jns
repnz
fdivl
in
mov
lret
xor
mov
pop
jno
rep
lods
xor
jno
popf
push
mov
and
call
lahf
movsb
arpl
cmp
cmc
jp
cmp
sbb
lahf
ret
adc
outsl
sub
aam
scas
mov
sub
cli
push
cmp
jns
mov
mov
add
add
repz
inc
sub
add
dec
sub
lods
repnz
mov
inc
test
loop
xchg
in
cmpsl
stc
insl
fistpl
push
bound
loop
int
inc
aam
outsb
cld
pop
sbb
popa
cmp
and
sti
push
mov
inc
add
shlb
test
lret
test
and
cmpsl
mov
subb
hlt
mov
jg
dec
rorb
subb
dec
jle
aam
push
pusha
push
mov
push
push
out
icebp
add
cmovb
cmpsl
gs
mov
scas
daa
dec
jns
sarb
and
outsb
les
xchg
sbb
dec
aas
sar
and
test
mov
adc
pushf
repz
mov
hlt
dec
aas
inc
dec
cmp
std
fldl
jmp
xor
xchg
bound
les
sub
cmpsb
adc
daa
js
es
push
xor
rcrl
mov
ja
je
stos
in
mov
ss
add
imul
pop
mov
js
pop
or
rorb
in
shlb
mov
mov
mov
xchg
mov
jnp
mov
xor
or
jmp
fnsave
sub
jne
inc
popa
jbe
push
fs
out
fisubrl
mov
data16
sbb
gs
sbb
xchg
aam
movsl
add
push
bound
daa
jle
stos
es
popa
mov
pop
in
sbb
inc
add
cmovo
int
in
dec
mov
xor
cmpl
cli
mov
emms
or
inc
outsb
push
mov
aad
loope
sub
push
pop
popa
mov
call
push
popa
sahf
mov
ds
dec
pop
jbe
adc
fsubrl
mov
insl
outsb
adc
into
mov
insb
aad
mov
stos
inc
aas
scas
mov
adc
sub
hlt
inc
pop
loope
jge
hlt
clc
fldl
lock
xor
mov
dec
jno
mov
repnz
mov
shll
aad
outsb
inc
gs
outsb
inc
idivb
and
add
sub
mov
test
xchg
and
sub
nop
push
mov
pop
push
imul
mov
ja
sbb
ret
xchg
insl
sahf
mov
enter
mov
ds
scas
lea
daa
push
call
daa
in
loop
cmp
xor
xchg
xchg
aad
ds
mov
adc
xchg
shlb
lret
push
mov
mov
mov
dec
nop
fadds
bound
jo
loop
aaa
cmpsb
adc
subl
and
pop
iret
cmp
movsl
addr16
or
inc
xchg
imul
in
outsl
mov
aaa
dec
xor
in
mov
les
push
loop
loope
mov
mov
daa
pop
andl
out
loope
movsl
xchg
cli
adc
imul
fiaddl
fwait
movsl
sub
jp
mov
and
lret
mov
push
push
mov
pmulhw
ret
aad
xchg
call
mov
sbb
ret
stos
adc
ret
pop
loope
jmp
or
in
shrb
cld
cmp
je
add
mov
inc
enter
sahf
add
jae
mov
ja
mov
adc
mov
repz
and
inc
push
roll
mov
aaa
push
mov
inc
or
push
and
pop
mov
mov
scas
push
pushf
push
jp
jp
aad
daa
and
jmp
hlt
inc
mov
push
and
arpl
inc
cli
in
jl
shrb
test
xor
imul
push
mov
push
sub
out
push
lods
scas
xor
add
hlt
adc
jmp
sub
push
jnp
dec
rolb
and
mov
arpl
in
adc
adc
xchg
popa
cmpsb
push
mov
icebp
pop
xchg
inc
dec
loop
push
aam
xor
loop
mov
push
mov
daa
push
dec
bound
addb
fistl
je
mov
xor
fisubrs
ret
es
adc
sbb
outsl
add
bound
sub
outsl
aaa
adc
adc
sbb
aam
cwtl
push
and
xor
mov
sub
xor
cld
jae
shlb
addr16
dec
rcl
mov
mov
dec
or
sub
roll
pop
adc
cld
and
sti
mov
cmp
adc
adc
cmpsl
aaa
insb
mov
and
xlat
mov
add
xlat
aaa
add
pop
adc
push
aaa
repnz
and
loopne
lahf
mov
fcmove
mov
imul
out
mov
cs
or
daa
pusha
adc
imul
push
test
mov
imull
or
mov
sub
and
lds
out
in
notl
adc
adc
cmc
xchg
into
add
call
test
js
pop
pushf
mov
sbb
mov
and
adcb
aaa
in
lock
xchg
xor
mov
into
stc
mov
push
xor
jecxz
nop
mov
sbbb
inc
mov
mov
out
popa
mov
aad
pop
xlat
stc
lret
jl
lods
xor
and
fdiv
jle
outsl
push
fadds
rolb
loope
inc
mov
cmc
fcoms
push
adc
ret
mov
xor
daa
xor
add
push
inc
xchg
push
push
pop
and
hlt
repnz
add
jb
mov
aas
and
sub
bound
lahf
outsb
push
xchg
fistl
pop
sbb
cld
sti
nop
fcomip
push
dec
ss
jge
test
push
mov
mov
neg
push
and
fadd
fadd
aaa
push
fsts
mov
push
cmp
popa
mov
cmp
push
xor
aam
out
rol
inc
or
fdivs
sbb
mov
sbb
cmp
sbb
inc
jno
inc
inc
xor
fmuls
mov
dec
out
and
pop
or
cmpsb
fcmovnu
aad
mov
icebp
or
inc
mov
sub
aaa
or
xchg
sbb
pushf
and
sub
bound
pop
push
notl
sbb
ret
mov
lcall
adc
mov
lds
add
or
sub
adc
loope
add
test
shll
sbb
mov
inc
ss
int3
fsts
xchg
mov
sbbl
jnp
mov
sbb
in
lods
push
jmp
xchg
jecxz
mov
movsb
sub
adc
xchg
push
or
sarl
lods
pop
les
popa
adc
xor
adc
call
test
imul
xchg
das
xor
pop
xor
add
scas
lods
and
and
lret
mov
lds
lahf
ret
lahf
inc
pushf
cmpl
adc
inc
cmc
loope
sahf
mov
and
jmp
inc
sbb
iret
mov
cmp
or
mov
sub
pop
stos
mov
jecxz
call
sub
cs
xlat
cs
add
test
mov
loope
inc
imul
hlt
clc
xchg
insb
mov
in
xor
xor
in
dec
adc
mov
loope
sub
mov
or
sub
sub
cwtl
mov
mov
test
subb
into
out
or
inc
and
hlt
stos
or
xchg
xchg
xor
loop
addr16
nop
fwait
jno
fmuls
mov
ret
xchg
adc
arpl
imul
inc
fisubs
cmp
jnp
mov
inc
test
xchg
lret
cmp
enter
test
xor
aas
push
adc
mov
dec
inc
cmp
jmp
mov
in
ret
int3
test
cs
cmc
stos
jecxz
add
jae
xchg
sbb
xor
aam
adc
mov
push
mov
enter
pop
test
imul
sub
push
mov
mov
fldcw
pop
mov
mov
push
adc
in
mov
data16
call
test
hlt
mov
adc
dec
jge
pop
push
outsl
dec
in
sub
mov
addr16
jecxz
jb
mov
std
push
inc
pushf
mov
or
out
xlat
pop
xor
in
push
mov
inc
lret
fisubs
mov
inc
movsl
aas
push
sahf
push
out
and
dec
out
pop
add
sub
xor
lret
das
jne
lds
sbb
xchg
add
xchg
mov
inc
rorl
and
outsl
repnz
sub
les
mov
cs
out
aad
negl
xchg
add
pop
insb
mov
and
bound
dec
and
lahf
pusha
sti
addr16
cli
xor
insb
in
push
adc
xchg
sub
mov
rcll
std
cmpsl
in
dec
xor
js
xchg
dec
movsl
call
es
adc
pop
pop
sbb
sub
xchg
xchg
add
popa
and
testl
bound
xchg
aas
push
push
jo
sub
ljmp
rcr
es
vcvtsd2si
aaa
xorb
hlt
lea
sar
stos
mov
push
es
rclb
es
shrb
jb
outsl
aad
rolb
xchg
dec
shl
inc
sbb
out
dec
lahf
ret
loop
sti
mov
mov
imul
popa
push
in
jb
xchg
xor
outsb
test
into
dec
cmpsb
pop
sub
nop
xchg
or
lahf
cmpb
mov
push
filds
cmp
sub
jnp
push
mov
out
loope
sbb
or
notl
je
sub
adc
ficomps
or
xchg
loop
sub
fsubl
fldenv
stos
test
jg
sbb
loope
and
repnz
adc
outsb
dec
mov
and
outsb
inc
pop
add
adc
xchg
ja
pop
mov
daa
jmp
icebp
xchg
test
lock
fwait
test
gs
sub
pop
loope
scas
icebp
jnp
mov
sahf
mov
in
stos
pop
es
or
bound
or
in
subb
mov
addb
xor
mov
push
aad
sti
loop
jo
jbe
movsl
dec
call
test
imul
cmp
lea
mov
es
shrb
inc
insl
or
sub
push
add
adc
in
mov
pop
jmp
test
xchg
shl
push
and
addb
adc
aam
mov
repnz
and
imul
inc
test
inc
call
aaa
scas
int3
pop
js
sarl
cs
loopne
imull
add
in
mov
mov
xchg
push
hlt
imul
in
in
pop
mov
xlat
or
addl
inc
xor
mov
aam
jo
insb
and
adc
push
out
pop
in
cmp
cmpsl
cli
or
inc
aam
loope
shll
gs
and
in
mull
xchg
mov
cwtl
xor
insb
pop
or
mov
xor
repz
jl
jo
out
sbb
jecxz
and
hlt
jae
pop
jle
sub
pop
push
add
and
sub
repnz
xchg
mov
dec
loop
and
arpl
pop
mov
sar
add
dec
lahf
pop
stos
push
mov
lods
mov
pop
cli
fdiv
sbb
ret
aam
sub
daa
xorb
xor
imull
sub
xchg
and
jae
mov
les
lods
hlt
push
enter
inc
adc
stos
adc
pop
ljmp
js
push
sbb
xchg
cmp
jb
scas
adc
mov
add
popa
sbb
adc
in
call
dec
or
outsl
outsl
das
aaa
rcll
push
adc
push
jbe
loop
xchg
add
sbb
mov
mov
sub
in
pop
outsb
mov
outsl
sub
les
push
sahf
sbb
sbb
cmp
and
ds
mov
add
lcall
jg
scas
imul
lds
sbb
dec
insl
sahf
inc
dec
sahf
sub
or
mov
loopne
mov
mov
mov
xorl
jge
inc
fs
and
dec
pop
xchg
pop
clc
adc
and
loope
push
dec
mov
push
call
testb
add
cmpsb
ja
xchg
mov
repnz
daa
js
mov
scas
xor
mov
scas
adc
dec
push
adc
xchg
mov
dec
mov
lss
movsb
loop
stos
mov
sub
ja
insl
mov
jns
cmp
fisttpl
repnz
jbe
cli
dec
sub
cltd
xchg
cmp
fsubrl
push
sub
popa
mov
decb
xchg
loop
loope
add
xchg
in
inc
cwtl
aad
gs
loop
push
fdivp
lds
sub
test
insb
or
push
in
mov
mov
push
sbb
mov
mov
mov
call
scas
enter
jne
push
test
movl
je
add
mov
pop
cmc
test
and
lds
pop
pop
in
pop
in
add
dec
leave
ss
clc
mov
mov
bound
movsl
data16
inc
mov
and
mov
divl
push
inc
imul
iret
push
loop
jb
mov
mov
xchg
inc
inc
scas
call
gs
adc
fstpt
rcrb
mov
loope
in
xchg
mov
loope
xchg
xchg
sub
push
and
stos
mov
das
cli
xchg
jbe
xchg
andb
mov
jne
sbb
sbb
aad
add
ss
popa
adc
pop
test
fstl
xor
movsb
test
pop
cli
jne
adc
mov
sbb
inc
in
sub
cmp
in
lods
repz
ds
movsl
bound
or
dec
je
outsl
shlw
pop
inc
push
jmp
aad
cli
stos
imul
not
gs
adc
pop
mov
ljmp
test
ja
test
push
pop
jo
repz
test
mov
push
je
lahf
inc
arpl
bound
add
inc
cwtl
mov
movsb
ret
adc
and
jb
push
xchg
outsb
xchg
add
xchg
aas
aad
sub
mov
sbbb
sub
jg
shll
ds
loop
push
fsubs
cmp
movsb
xchg
sub
pop
cmp
jecxz
aaa
and
test
lds
cwtl
xchg
xchg
pop
and
xchg
push
aad
std
and
fnsave
lds
mov
push
adc
fisubrl
sub
movsl
idivb
gs
mov
jmp
bound
jno
push
dec
mov
add
es
xor
jno
adc
test
fstpl
xchg
cmc
into
and
insl
sbb
shll
adc
mov
cmpsb
inc
and
dec
xor
dec
mov
cmp
lods
adcl
pop
adc
and
test
adc
and
cmpsb
out
xchg
xchg
inc
mov
test
add
ja
sbb
cs
lret
xor
in
nop
cmp
cmpsl
xor
test
dec
mov
ljmp
sbb
jb
push
cmp
bound
bound
aas
and
adc
loop
test
aad
dec
mov
mov
daa
adc
mov
mov
mov
dec
imul
cli
hlt
iret
dec
jo
mov
bound
sub
push
mov
inc
xchg
sub
das
xor
fabs
sub
stos
push
sub
adc
ss
and
addr16
lock
mov
cli
lods
push
sub
in
pop
addr16
and
jb
mov
sbb
push
mov
cld
int3
pop
adc
xchg
imul
test
es
pushf
je
inc
dec
aam
int3
test
lcall
jno
dec
push
inc
push
rclb
pop
push
repnz
mov
iret
cltd
jne
or
ret
jno
push
sub
cmp
stos
mov
movl
mov
out
repz
test
push
mov
icebp
jmp
pop
jb
mov
aaa
movsl
adc
and
adc
int3
push
lods
mov
in
sbb
jp
inc
and
mov
mov
pop
rorb
dec
adc
add
ja
sub
sub
mov
or
lds
adc
popa
aad
imul
adc
ret
and
rorb
push
push
jl
bound
dec
sub
xor
repnz
pop
insb
jmp
sub
push
inc
and
dec
and
xor
les
vunpckhps
fsubrs
shlb
dec
sub
in
push
gs
jmp
adc
mov
shlb
lds
xchg
push
das
pop
sub
xor
pop
xchg
xchg
loop
push
inc
outsl
int3
jl
in
add
call
push
addr16
add
sub
push
stos
inc
stos
push
or
xor
lea
fadd
and
xchg
dec
pop
sub
insl
out
xlat
and
mov
jle
and
mov
ret
repz
scas
jns
add
js
sub
jge
jge
jb
movsb
cld
mov
fstps
xor
addr16
inc
jbe
rcrb
inc
rclb
pop
ret
dec
push
test
adcb
leave
dec
mov
cmpsb
enter
inc
push
inc
sbb
mov
sub
aas
sub
mov
inc
repnz
mov
insb
push
lret
inc
sub
popf
sub
mov
fsubr
fnsave
mov
pop
cmpsb
xchg
in
xlat
add
js
out
imul
jg
loope
fdivs
push
xor
shll
push
imull
cwtl
inc
inc
xor
inc
mov
push
lea
jo
lds
fldt
push
inc
xchg
mov
adc
or
orb
mov
popf
xchg
mov
xlat
mov
add
test
and
jge
adc
lds
in
cmp
xor
imul
mov
mov
mov
std
mov
xor
bound
sub
add
gs
in
int
movsl
inc
js
out
repz
je
cmc
in
or
aad
rorl
mov
xor
lock
daa
movsl
jmp
inc
pop
mov
mov
stos
divl
inc
add
imul
enter
lock
imul
fsubs
bound
addr16
out
out
inc
jle
aam
cmp
push
je
pop
dec
lcall
push
xchg
out
imul
fnstenv
test
mov
mov
es
js
icebp
sub
addr16
notl
or
fldl
rorl
test
iret
cs
jb
mov
dec
mov
jle
adc
cltd
movsb
and
push
and
push
push
jne
xlat
xchg
into
notl
insb
xchg
cwtl
push
mov
mov
inc
mov
and
test
mov
add
mov
pusha
sub
dec
xchg
popa
outsl
jmp
adc
sti
sbb
les
call
test
shl
xchg
addr16
sbb
dec
cld
or
mov
pop
push
jl
add
hlt
dec
stos
xchg
rorb
pusha
in
jne
dec
pusha
cmp
jne
xchg
aad
out
mov
pop
mov
jo
adc
adc
setge
jge
jbe
mov
scas
pop
mov
sub
push
mov
ret
adc
xor
hlt
shlb
mov
fcoms
mov
jl
es
push
imul
pop
jmp
pop
test
jle
mov
and
in
sub
adc
filds
jbe
adc
sbb
jge
cs
jno
loope
mov
lcall
xchg
fsts
lods
int
sub
push
cmpsl
rclb
pop
dec
andb
mov
mov
sbb
cmp
test
aam
sbb
rcl
js
lret
cs
dec
xchg
and
ja
cs
das
push
sub
inc
cmc
sub
mov
inc
inc
add
popa
push
jno
dec
test
inc
adc
push
sbb
add
rolb
jle
call
inc
pushf
adc
addr16
test
add
mov
mov
xlat
in
xchg
mov
inc
inc
insl
inc
or
mov
ret
jo
cld
shl
xchg
add
inc
mov
test
pop
add
lds
xchg
xchg
and
sub
fcom
jb
test
loope
lcall
and
fmul
push
enter
adc
xor
frstor
stos
xchg
jle
or
addr16
popa
push
xchg
cltd
fiaddl
rcrl
addr16
sbb
arpl
mov
fldenv
lret
lds
dec
xor
fcoml
mov
xor
sbb
push
jb
hlt
fldcw
insl
mov
xchg
xor
shrb
das
add
inc
fisttpll
data16
sbb
mov
jp
adc
inc
out
push
clc
scas
pop
test
gs
es
hlt
push
add
or
pop
and
addr16
or
lret
in
je
add
out
ljmp
fwait
into
loope
xor
cmc
test
xor
movsl
daa
out
adc
es
stos
xor
leave
es
scas
sarl
and
in
addl
fimull
bound
adc
xchg
imul
roll
adcl
mov
dec
mov
adc
scas
hlt
and
jo
dec
inc
fidivrs
imul
notl
out
into
adc
das
mov
xchg
and
rcll
rclb
std
jg
mov
adc
imul
sub
and
dec
mov
incb
iret
fcomp
sbb
fadds
ja
cmpsb
mov
bound
mov
std
mov
add
mov
es
dec
cmp
lret
push
sbb
pushf
xor
pop
scas
sub
mov
pop
das
pop
data16
sbb
dec
nop
jecxz
mov
icebp
cld
mov
xchg
or
inc
cmpsb
lcall
xchg
out
ds
pop
ds
out
sbb
in
cltd
push
mov
scas
cs
cmp
xchg
shll
js
movsl
mov
and
xor
in
imul
shll
xchg
inc
or
in
imul
shl
movsl
xor
adc
fmuls
xlat
outsl
cmp
pop
in
insl
sbb
mov
fmuls
lea
dec
push
pop
adc
xchg
in
pop
outsl
adc
sbb
shll
pop
sbb
sbb
push
imul
sbb
sbb
add
adc
icebp
fdivr
shl
xchg
inc
mov
xchg
sub
inc
or
stos
sbb
xor
js
fbstp
test
addl
data16
push
scas
daa
jge
or
jne
lret
and
mov
insl
xor
adc
dec
mov
iret
es
pop
cmp
sub
leave
ja
subl
mov
and
mov
or
test
incb
rcr
movsl
xchg
pop
jns
mov
adc
dec
bswap
inc
pop
inc
fsub
rol
push
mov
push
inc
sbb
aad
jp
sbb
xchg
and
popf
inc
and
xor
insl
inc
and
pop
scas
push
xor
outsl
add
pop
adc
and
pop
push
add
and
in
or
mov
in
xchg
add
outsb
test
shll
cmp
xchg
inc
imul
xor
adc
stos
fiadds
call
xlat
es
dec
xchg
aad
sbb
je
lret
shlb
and
outsl
jno
adc
bound
insl
arpl
push
mov
stos
cltd
movsl
pop
mov
sub
jecxz
pop
push
lods
fldl2e
lcall
mov
aaa
mov
in
test
cmpsl
lcall
sub
mov
test
push
fsub
bound
or
bound
ljmp
ss
and
xlat
inc
insl
and
cmp
xor
leave
jne
test
lret
stos
jne
mov
dec
push
in
push
inc
fcoms
outsl
adc
pop
mov
lea
pop
push
inc
sbb
popf
in
cli
fsubs
js
jb
and
dec
mov
pop
in
mov
adc
stos
imull
adc
push
gs
sub
hlt
imul
pusha
pop
dec
enter
xor
cmp
aaa
sub
adc
adc
mov
inc
lcall
repz
stc
dec
xchg
push
push
cmc
mov
stc
inc
loope
xor
pop
adc
loope
inc
imul
mov
pushf
jecxz
adc
adc
mov
cmpsl
xlat
adc
add
and
cmpsl
pop
mov
arpl
mov
push
fistl
ret
adc
cmp
xlat
test
in
pop
jg
dec
insl
shl
leave
inc
lods
xor
daa
mov
mov
inc
inc
adc
xlat
outsb
inc
enter
insl
sbb
pop
repnz
pop
daa
adc
cmc
xchg
imul
jb
cmp
or
daa
xor
xchg
adc
cmp
inc
cs
imul
ja
or
in
ljmp
push
sub
jmp
adc
mov
jecxz
pop
enter
addb
loope
adc
pop
ja
shll
mov
adc
test
mov
pop
mov
out
xchg
imul
pop
out
in
xchg
in
aaa
inc
pop
cs
aaa
xor
std
adc
cmp
xchg
loop
adc
and
adc
cmp
insb
xchg
inc
rcrl
clc
lods
fstl
adc
and
shl
or
sbb
ficoml
dec
jle
insl
xor
or
or
mov
dec
mov
in
fdiv
mov
add
push
xchg
aam
xchg
imul
sub
lahf
fs
test
popa
imul
loop
test
cli
pop
hlt
in
pop
add
and
popa
repnz
dec
rcll
inc
add
test
mov
loopne
add
aaa
test
pushw
jne
test
mov
add
outsl
scas
push
in
out
popf
ljmp
jp
xchg
imul
scas
test
stc
dec
imul
add
and
add
push
test
out
and
in
push
imul
push
movsb
call
lods
mov
push
sub
jle
sbb
cli
xlat
test
mov
gs
orb
cmp
repz
and
jo
insb
pop
shll
xor
cmc
ds
loop
sbb
xor
ja
dec
push
cmp
add
roll
xor
and
jmp
xor
sbb
ret
addr16
in
inc
inc
inc
fildl
xchg
xchg
xor
pop
and
rcrb
mov
hlt
push
repz
int3
inc
mov
mov
int3
outsb
sub
mov
fs
test
jne
mov
in
ret
popf
fnstsw
dec
gs
push
jg
inc
sbbb
shrb
push
xchg
movsb
push
cs
aaa
loopne
push
stc
dec
les
mov
movsb
adc
push
imulb
stos
andl
dec
orb
test
es
pop
ret
jmp
imul
push
push
frstor
adc
out
shll
mov
sbb
lcall
imul
xchg
mov
mov
sub
xor
jl
scas
and
data16
cli
add
and
dec
loope
sarl
jnp
mov
pop
jp
js
xchg
inc
jge
sub
and
insb
push
mov
xor
cs
xchg
addr16
xchg
fdivs
mov
int
and
mov
sbb
pusha
orb
cmp
xchg
subl
cmp
push
in
cmp
push
jecxz
lods
pop
xchg
sub
daa
or
jmp
jnp
scas
fistpll
in
gs
movsl
std
lret
push
xor
mov
sub
mov
and
or
icebp
mov
in
xchg
andl
sti
inc
push
sbb
jecxz
cmpsl
rorb
adc
aaa
stos
add
cs
outsb
inc
cmpsb
hlt
adc
insl
lret
inc
push
push
push
mov
shl
cmp
mov
sbb
sbb
push
andl
mov
inc
hlt
push
and
adcb
adc
out
adc
inc
lods
and
push
pop
sub
shrl
dec
and
mov
jnp
add
add
shrl
mov
subl
xor
sbb
inc
clc
sub
mov
adcl
mov
ret
add
lret
aaa
hlt
scas
daa
es
mov
mov
test
xor
pop
outsb
repz
sub
cmpsb
ljmp
jne
push
adc
aas
in
mov
pusha
xchg
push
sub
rcrl
decl
sub
das
pop
xor
out
pop
insb
fsubs
dec
stc
or
leave
dec
dec
and
push
out
dec
in
xchg
or
adc
cmpsl
sub
aam
fcmovnb
mov
dec
orl
test
imul
cs
notl
cmp
imull
dec
cs
notl
fsts
push
xchg
call
inc
xorb
and
bound
es
mov
daa
orl
lock
or
dec
jl
cmc
insl
gs
outsb
in
pop
dec
cmp
add
mov
ret
mov
mov
aas
in
inc
out
gs
push
cli
in
inc
bound
adc
test
sub
testb
xchg
mov
add
pop
enter
xor
test
fwait
ret
dec
pop
dec
lds
shll
in
scas
adc
in
imul
test
in
sub
loopne
adc
xor
aad
nop
bound
fiaddl
call
inc
adc
mov
mov
shll
pop
jmp
jmp
pushf
ja
push
xchg
jmp
dec
aam
loop
mov
mov
arpl
adc
fcoml
fwait
cmp
notl
xor
xchg
or
sub
and
lock
xchg
xchg
gs
sub
loope
test
pop
scas
push
inc
push
sub
out
daa
test
into
shlb
repz
sbb
popa
out
adc
and
inc
ror
mov
in
sub
cmp
gs
in
xchg
cmp
test
jge
push
outsl
cs
adc
add
xor
orl
inc
scas
pop
inc
or
inc
divl
pop
mov
push
sub
pop
imul
loope
aam
push
inc
lods
xor
and
or
test
pop
test
dec
push
mov
into
xchg
lods
loopne
js
mov
adc
sub
sbb
fcmovb
inc
rolb
cmp
mov
push
leave
imul
test
iret
inc
jg
adc
sub
sub
into
loope
mov
jb
add
push
sub
loope
adc
punpckhbw
inc
and
in
xchg
xchg
add
and
inc
sub
xor
adc
cld
xor
sbb
push
mov
cli
mov
arpl
aas
jl
out
xchg
lds
or
addr16
adc
out
mov
inc
xor
xchg
lds
mov
pop
fsub
out
popa
fmul
sub
jp
xlat
ret
xchg
pop
in
mov
fsubs
outsl
out
addr16
std
dec
cmp
cltd
test
cmp
negb
xor
mov
mov
inc
aaa
and
xchg
fcoms
or
int
pop
int
jmp
inc
out
aam
ret
sbbb
push
mov
imul
pop
xorb
and
and
mov
or
fdivs
xchg
inc
rep
leave
fisubs
in
pusha
leave
sub
xchg
xor
call
fcomps
and
mov
shll
dec
mov
int3
jo
add
movsb
push
sub
adc
xchg
jno
int
or
push
fisubs
addb
cmp
lea
xchg
in
push
imul
xor
push
rclb
and
inc
mov
push
jge
add
pop
push
push
hlt
sbb
imul
dec
aam
and
jb
repz
xchg
in
jbe
in
push
push
sbb
scas
movsl
pop
movsl
ljmp
lods
scas
sub
loope
sahf
mov
inc
sbb
add
mov
andl
ja
aad
add
js
xor
pop
and
loop
mov
pop
fwait
les
and
xchg
outsb
lret
inc
xchg
cs
xchg
es
lock
xor
cmpsl
xchg
push
inc
jmp
sub
adc
mov
inc
mov
sub
loop
daa
cmp
xchg
jb
test
test
movsl
mov
sub
inc
adcl
sbb
xor
adc
xchg
jb
mov
cmp
inc
stos
sub
movsb
out
pusha
mov
and
popf
out
xchg
jl
repz
popa
repz
aad
add
xchg
js
or
int
leave
push
sub
in
lds
pushf
divl
dec
fisubrl
addr16
popa
sbb
es
mov
in
xor
repz
roll
add
xchg
in
vpcmpgtd
shll
cmpsb
push
pop
sahf
mov
mov
push
insb
pop
xor
mov
dec
and
hlt
popa
xchg
jno
outsb
sbb
pushf
hlt
inc
sub
xchg
inc
mov
out
push
lds
xlat
fwait
daa
add
pop
imul
jo
dec
cs
jnp
pushf
mov
adc
in
shr
hlt
push
inc
inc
xor
clc
ljmp
or
andb
notl
aad
das
inc
lcall
xchg
mov
and
fdivrs
xor
fcompp
inc
ret
mul
in
in
call
aas
sub
arpl
sub
xchg
inc
shl
pop
outsl
pop
jmp
lcall
cld
xor
daa
pop
and
push
shlb
test
cmpsl
dec
out
movsb
xor
xchg
cmpsb
push
std
lods
adc
stos
jge
xor
clc
xchg
mov
mov
push
lds
insl
xchg
or
mull
or
mov
inc
adc
movl
aad
jmp
inc
sbb
lock
jo
or
adc
daa
sub
lret
clc
lods
lcall
pop
gs
pop
jecxz
pop
adc
adc
mov
lea
push
push
aaa
je
bound
mov
sub
dec
lahf
xchg
cmc
pushf
sub
jecxz
sub
add
mov
cmp
mov
movsl
lods
and
xchg
jp
mov
mov
and
adc
in
das
mov
sub
das
ret
inc
test
imul
xor
cwtl
xchg
dec
movsb
mov
les
add
xchg
das
lahf
fsts
jecxz
loop
stos
movsl
dec
lods
test
jae
push
and
cmpsl
inc
and
aad
push
mov
inc
push
outsb
sub
xchg
xor
xchg
fsub
cmp
xchg
in
dec
repz
scas
inc
dec
int
push
insl
roll
test
mov
sub
ds
mov
and
pop
icebp
cli
aad
push
sub
inc
push
xchg
nop
popf
daa
mov
mov
xchg
movsl
pushf
xchg
repnz
in
dec
or
mov
xchg
pushf
adc
loopne
push
mov
xor
xchg
jg
test
into
imul
mov
jle
lret
insl
sti
jmp
pop
movsb
mov
pusha
out
dec
adc
push
sarl
cli
popf
or
clc
cmp
int
sarb
call
data16
iret
jae
stos
pop
sbb
inc
push
xchg
inc
adc
inc
xor
shrb
pusha
pop
popa
adc
cmp
cmc
pop
loop
vrsqrt28ps
mov
lds
cmp
insl
cmp
pop
das
xchg
or
adc
and
mov
js
mov
loop
data16
and
pop
fwait
lods
mov
in
ss
addb
jle
enter
mov
mov
jno
std
js
lods
pop
adc
repz
mov
in
mov
sbb
or
xor
adc
mov
jmp
test
fadds
sub
dec
adc
out
xchg
mov
mov
sbb
cmpl
fsub
repnz
rcl
enter
shll
cmp
push
sub
pop
dec
enter
into
pop
jge
adc
sub
xor
add
and
adc
in
jbe
push
ss
test
in
aaa
fsubrs
test
dec
sbb
mov
or
repz
pusha
ret
jecxz
sub
ja
aaa
jno
iret
mov
icebp
sahf
pop
leave
jecxz
xor
iret
xor
jle
enter
or
mov
sbb
cmp
aam
cli
stc
lock
stos
lods
mov
decl
mov
das
xor
mov
xor
and
jmp
mov
push
xchg
sub
and
fisubrl
or
fidivs
stos
fistpl
sbb
inc
mov
int
and
clc
mov
arpl
inc
sub
popf
outsl
test
ret
test
lahf
push
xor
pushw
push
jg
push
lahf
push
xchg
sub
inc
cwtl
aam
jne
mov
inc
adcb
mov
mov
sub
mov
push
sub
push
xor
push
inc
and
movl
lods
gs
test
stos
scas
pop
or
add
mov
lods
sub
mov
xchg
push
sbb
sbb
cmpsl
rorl
push
insl
call
dec
loope
fwait
add
popa
addl
and
in
mov
xorl
inc
ret
add
xchg
xor
lods
inc
push
sub
lahf
jle
stos
test
adc
xchg
dec
pop
pop
andb
and
shrl
decl
xor
jle
in
add
push
cld
adc
inc
push
xchg
sub
and
fists
or
xor
push
roll
imul
mov
push
push
inc
insl
mov
sub
aaa
push
mov
and
movsl
xchg
xor
adc
jb
cmp
shlb
mov
sub
ljmp
pusha
mov
jge
sub
repz
pop
sub
sti
mov
lock
sub
out
in
and
out
pop
aas
loop
gs
cmp
iret
faddl
mov
and
std
adc
push
adc
es
fs
push
inc
fadd
lods
mov
inc
call
fsub
xor
jbe
add
push
xor
dec
dec
xor
aaa
inc
jbe
xor
pop
jnp
test
jno
test
data16
imul
lods
aam
cltd
or
mov
adc
inc
mov
sbb
je
insl
mov
jmp
push
and
ds
in
in
mov
aaa
aas
fwait
rol
or
ja
testb
movsb
mov
jmp
pop
subl
ja
cmpsb
icebp
or
dec
mov
pop
or
sbb
lcall
sub
mov
dec
test
xchg
loopne
imul
call
xchg
repz
daa
imul
jge
sbb
sub
xchg
pop
mov
inc
std
push
sub
pop
and
adc
sub
and
xor
or
fdivrs
es
lds
jge
fnstenv
add
fwait
dec
xchg
adc
and
test
out
sub
or
xchg
mov
jo
mov
and
add
loop
cmp
movsb
push
sub
pop
xchg
je
stos
jp,pn
dec
sbb
add
adcl
outsb
jg
pop
cmp
adc
imul
lret
add
in
push
call
mov
mov
lods
cli
xchg
sub
xor
push
inc
adc
enter
stos
rorl
lods
call
adc
push
sbbb
mov
dec
jo
sub
inc
shrl
pop
and
xchg
lahf
mov
or
or
pop
pop
out
cwtl
addr16
push
inc
and
jns
or
mov
mov
test
imul
cmp
mov
in
push
sub
cmpsl
or
cmpsl
xor
jmp
lock
sub
fsubrp
xchg
addr16
pop
out
cs
loopne
into
sub
in
mov
mov
or
addr16
shrl
imul
dec
mov
cmovg
and
lret
stc
daa
int3
enter
mov
ret
dec
xchg
xor
pop
xchg
adc
dec
pop
cli
cltd
addr16
mov
lret
je
mov
sahf
fstl
push
fildll
and
mov
lock
pop
loope
mov
xchg
enter
ret
adc
scas
out
push
lock
mov
inc
lahf
mov
mov
xlat
dec
loope
add
dec
sbb
sub
notl
insb
inc
xor
in
push
pushl
xchg
in
mov
xchg
ja
fdivs
sub
cmp
lods
xor
js
pop
dec
cwtl
or
mov
sbb
inc
adc
pop
xchg
ds
notl
and
test
dec
leave
addb
fcoms
enter
iret
or
xor
sbb
xchg
enter
sbb
cs
test
push
shll
cmpsb
sbb
and
push
mov
aaa
jp
pop
hlt
mov
push
es
jns
jb
mov
test
mov
adc
in
loopne
dec
sbb
shrl
xor
xor
lret
sub
data16
push
das
fs
imul
xor
in
inc
inc
mov
xlat
bound
lret
mov
sub
sbb
lods
push
jl
mov
cmp
xor
mov
movl
sub
es
testl
movsl
mov
xchg
daa
mov
iret
mov
into
insb
mov
shlb
in
ja
inc
mov
push
sub
loop
scas
and
das
pop
in
aas
sub
mov
incb
xor
or
rcl
bswap
lock
in
lea
bound
shll
dec
mov
xorl
mov
jp
loopne
bound
mov
addr16
mov
loop
and
xchg
pushf
call
push
or
in
loope
pop
sub
insl
adc
pushw
ret
out
dec
lcall
sti
leave
movsl
ja
adc
in
xchg
mov
sbb
daa
sbb
popa
test
jae
fildll
push
sub
out
popa
scas
das
adc
pop
loop
mov
scas
ror
push
push
inc
aas
sub
das
inc
jge
pushf
or
pop
ret
sar
cmp
aas
xchg
push
xchg
xlat
popf
jecxz
xor
adc
negl
andl
xchg
cli
aas
lret
imul
mov
test
lea
xor
int
and
fsubr
and
neg
push
sbb
add
hlt
lock
sub
pusha
adc
iret
jb
insl
xor
js
dec
jae
outsl
out
push
shll
adc
mov
mov
jp
adc
pushf
lock
testl
add
jp
and
push
sahf
bound
lcall
xchg
out
aas
adc
push
gs
sti
xchg
xor
test
mov
enter
mul
cmp
xor
push
fdivs
sub
sub
and
push
sub
sbb
outsb
jl
jne
and
rcrl
lret
mov
fldt
xlat
cmp
pop
addr16
div
xor
lock
sbb
fwait
addb
popa
or
and
in
ror
test
and
add
xchg
test
dec
adc
xor
and
cmp
jbe
jl
mov
ss
stos
roll
movsl
jmp
push
fisubrs
outsl
movsl
inc
in
push
fs
jns
push
mov
pop
scas
vmovntps
fs
and
les
cmp
add
inc
mov
loop
movsl
cli
ret
loope
inc
or
clc
aaa
xor
push
mov
mov
push
fsubrl
xchg
xchg
mov
and
gs
insl
in
popa
ds
cmp
int3
dec
enter
jl
ljmp
push
aad
sub
inc
push
add
hlt
jne
cltd
adc
fadds
aas
sbb
sbb
pop
bound
inc
gs
inc
mov
cmpsb
call
push
or
ja
adc
sqrtps
bound
and
add
inc
cmpsl
mov
pop
inc
push
add
andb
mov
fs
xchg
vandnps
ret
xchg
js
dec
lds
and
fmuls
lods
es
inc
sub
pop
jmp
cmp
inc
jae
nop
mov
dec
xor
sar
and
movsb
popa
sub
sbb
push
dec
hlt
add
sbb
jp
push
jnp
cmp
call
fldt
or
movsl
jg
lret
mov
push
sub
mov
lret
dec
and
cmc
std
xor
mov
sub
push
inc
and
push
aaa
mov
xor
movl
das
xchg
mov
stc
aam
popa
cli
popf
imul
inc
das
aas
xchg
push
and
enter
jnp
inc
mov
push
cmp
push
dec
scas
push
inc
pop
cmpsb
push
jp
push
orl
movsl
repnz
push
into
or
ret
out
push
mov
mov
daa
push
dec
jne
sub
inc
xchg
sub
outsb
ja
test
mov
test
addb
mov
mov
ljmp
stos
mov
hlt
mov
aaa
in
inc
dec
pop
aad
test
js
cli
aas
insl
popf
jns
mov
fdivrs
pop
mov
lcall
test
outsl
lds
mov
clc
adc
cmp
test
fcmovnb
inc
movsb
mov
pop
movsb
inc
xorl
mov
repz
int3
and
push
push
ja
fisubrl
mov
popa
sbb
mov
mov
stc
mov
sbb
shrl
adc
fsubp
test
dec
test
addr16
test
out
mov
pop
adc
mov
lret
data16
cmpsl
mov
movsl
push
cmp
in
daa
mov
int
cld
jg
mov
mov
movsb
cmp
stos
test
popa
imul
xchg
icebp
mov
pop
out
dec
push
mov
mov
ret
sub
jnp
cmp
imulb
dec
jnp
jg
mov
addr16
bound
sbb
cmp
sbb
ret
xchg
xor
sub
adc
or
adc
test
shll
popf
test
cmp
xor
outsl
mov
call
or
gs
dec
cmpsb
ror
ja
or
cltd
pop
mov
pop
add
insl
jp
decb
and
aad
or
dec
jle
and
jne
add
jg
add
out
loop
jno
jnp
in
mov
fsts
roll
adc
outsl
out
shr
int3
outsb
insl
mov
jl
jo
inc
stc
jae
aad
leave
jecxz
lds
lds
sbb
out
or
jl
repz
out
and
ret
movsb
and
push
ret
lods
push
ljmp
movsl
dec
mov
jmp
xchg
push
loop
xlat
out
jb
dec
adc
adc
adc
lret
inc
dec
mov
dec
xlat
insl
add
test
mov
insl
gs
in
xor
adc
iret
mull
repnz
cmp
test
pop
jl
dec
vpsubsw
fmul
push
mov
bound
mov
mov
mov
cli
lods
popa
and
mov
pop
daa
pop
adc
xchg
mul
mov
test
gs
fldenv
jp
je
jle
gs
xchg
test
jecxz
sub
aam
pusha
pop
mov
ss
jne
lret
ds
add
ljmp
fcmovnbe
outsl
cmp
jp
push
sbb
lret
into
lea
popa
test
mov
or
xchg
jle
mov
jo
push
adc
adc
inc
pop
or
inc
and
mov
cli
mov
push
xor
rcr
icebp
adc
mov
repnz
xchg
push
mov
movsb
stos
inc
fidivl
push
dec
lods
and
mov
inc
movsb
aaa
fisttpl
inc
xchg
sbb
add
mov
add
sbb
fcoml
mov
ja
adc
and
das
or
stos
out
adc
mov
divb
cmp
sbb
push
popa
or
rcr
shlb
insl
nop
xor
test
dec
pop
cwtl
xor
stos
cmp
iret
test
fldcw
inc
rcrb
imul
stos
push
popf
loope
push
test
add
and
sti
gs
jl
in
mov
xchg
and
inc
lea
enter
push
jne
ret
das
mov
or
adc
jns
xchg
xchg
in
es
pop
loope
xchg
add
pop
in
fidivl
es
jnp
jb
imul
and
mov
push
mov
out
ror
push
mov
dec
mov
inc
aaa
loop
imul
push
pop
and
ljmp
xchg
xchg
pop
xchg
jge
mov
sahf
stos
roll
bswap
shrl
or
pop
adc
test
inc
xor
imul
shll
bound
mov
jg
inc
daa
push
popf
cs
xlat
inc
daa
loope
popl
and
adc
sbb
mov
and
loope
mul
push
ds
sub
insl
push
and
outsb
adc
ret
cs
js
test
push
mov
aam
adc
jg
mov
fistpll
push
inc
andl
andl
jmp
adc
dec
inc
ja
into
pop
pop
arpl
push
push
ja
test
xchg
dec
nop
test
jp
lcall
sub
sub
cmc
jnp
aad
daa
push
mov
mov
test
cld
aas
std
adc
or
rol
and
mov
xlat
xor
sbb
inc
pop
out
in
adcb
adc
or
xor
push
mov
xor
sbb
idivb
in
or
pop
adc
lret
inc
adc
sahf
mov
adc
jo
jo
ficomps
adc
dec
gs
or
fdivrp
dec
mov
mov
out
adc
fsubr
into
dec
push
push
subps
mov
jmp
mov
fisubrs
mov
popa
fdivs
push
sahf
sarl
jns
bound
add
js
fisubs
jne
sbb
and
jne
and
gs
xchg
popl
jo
jae
add
call
mov
mov
jmp
inc
jg
lods
mov
notl
inc
loope
adc
daa
inc
or
fdivp
cltd
adc
fcoms
adc
fsubl
mov
call
push
loope
das
xor
mov
cmpsl
lahf
stos
rol
mov
mov
sbb
jne
cmpsb
inc
ret
inc
xor
dec
jg
clc
in
std
mov
xor
push
fldcw
pop
mov
dec
push
cmp
fstpt
push
aaa
sub
xor
mov
pushf
insl
adc
aam
pop
stos
out
cmpsl
pop
and
mov
adc
add
and
jbe
call
xor
call
loopne
cmpsl
sbb
mov
outsb
lock
dec
cmpsb
xchg
or
sbb
pop
rcrl
lds
xor
sbb
mov
in
ret
jmp
out
and
xchg
into
ret
push
call
cld
int3
jmp
pop
bound
inc
lds
mov
or
inc
or
dec
iret
addb
aam
push
inc
imul
aaa
scas
adc
or
lahf
dec
test
lret
adc
hlt
jno
inc
push
test
mov
aaa
jne
sub
aaa
push
fnstsw
aad
inc
push
push
imul
pop
mov
aaa
mov
leave
dec
adc
lods
inc
movsl
push
mov
iret
aaa
xchg
fisttpll
jae
imul
arpl
mov
cmc
jp
icebp
inc
inc
push
ljmp
insl
inc
aad
imul
fimuls
aaa
jne
mov
ret
outsb
clc
enter
scas
sub
adcl
dec
and
and
push
pop
imul
fmulp
test
lahf
nop
stos
dec
call
into
jecxz
fimuls
push
test
insl
dec
add
test
jg
in
lods
add
imul
and
nop
dec
push
aad
frstor
pop
mov
fisubrs
inc
popf
in
jle
mov
popa
sub
loop
push
or
pop
jno
dec
push
rcll
fmul
in
aaa
mov
lret
cmp
iret
jp
inc
and
ret
xchg
aad
inc
dec
cmp
xchg
lcall
xor
xchg
cli
or
sub
inc
adc
loop
mov
stos
rorl
sbb
inc
add
rcrl
loop
push
clc
call
xchg
cmpsb
je
repnz
push
sbb
repnz
cmpsb
icebp
pop
icebp
mov
stc
push
inc
mov
push
js
loope
std
sbb
inc
cmp
mov
sti
add
sub
icebp
hlt
nop
pushf
into
dec
and
push
icebp
in
out
call
add
je
sbb
add
imul
add
xor
addl
imul
lds
sbb
cmp
jmp
dec
testb
leave
or
mov
xchg
ss
cmp
lret
outsb
and
inc
cmpsl
inc
cltd
js
mov
notl
ds
xchg
mov
xchg
mov
test
xor
rol
lret
or
pop
inc
push
xlat
dec
cmp
xchg
out
rorl
adc
test
pushf
subl
mov
scas
adc
fs
dec
jg
xchg
mov
mov
xor
in
sbb
sub
out
scas
sbb
push
adc
pmulhw
mov
test
shrl
mov
jne
shl
adc
movsb
jecxz
and
outsl
adc
aas
push
sub
pop
lahf
les
inc
adc
inc
enter
inc
in
mov
testl
in
push
addb
add
dec
mov
lea
cli
hlt
and
dec
pop
sbb
dec
dec
std
mov
loopne
jge
xor
lods
push
divb
mov
clc
xchg
adc
inc
push
mov
mov
lock
aad
mov
fsubs
ljmp
jb
jbe
mov
pop
sub
and
sub
or
movsl
inc
ja
xchg
adc
and
and
push
loopne
cli
jae
xchg
xchg
dec
in
rcl
stos
or
mov
mov
mov
and
call
xor
jmp
hlt
push
popa
andl
jmp
testl
jl
into
dec
testl
and
ja
xchg
fmull
mov
imul
scas
push
and
lds
push
mov
stos
xor
insl
and
call
mov
out
inc
xor
hlt
in
push
ret
test
add
or
push
stos
cs
hlt
xor
mov
test
out
inc
or
push
out
xor
int3
rcrl
test
lret
dec
retw
movsl
aad
add
or
push
mov
aam
hlt
daa
icebp
xlat
popf
loop
ljmp
cmp
jmp
mov
fildl
insl
in
das
aas
inc
fdivl
sub
pop
mov
push
jae
shll
sbb
xor
xchg
mov
push
push
add
or
je
loop
xchg
jge
fs
inc
shlb
ror
dec
cltd
iret
mov
loop
fsubrp
roll
lods
xor
insl
jg
mov
movsb
aad
inc
test
cwtl
rol
inc
insl
mov
and
test
jae
rcrl
roll
bound
loope
ds
rcll
push
or
ss
inc
aam
xchg
mov
ret
sub
inc
add
loop
lock
dec
mov
pop
iret
dec
push
int
pop
mov
sub
rcl
and
rcl
pop
int
shll
scas
xlat
clc
inc
push
ret
clc
or
mov
pop
push
jnp
inc
xchg
mov
inc
bound
loop
xor
mov
movsl
adc
repnz
xor
xor
ds
mov
cmp
lret
and
inc
fsubs
sub
inc
andl
faddp
jge
inc
call
ret
and
pop
pop
adc
lds
test
adc
jnp
add
or
pop
inc
pop
pop
adc
int
fadds
mov
adc
pop
loope
push
and
pop
xchg
rcll
mov
xor
mov
subl
inc
pop
aad
inc
and
inc
mov
insl
scas
and
inc
enter
add
call
in
xor
adc
cld
fidivrs
fsubrs
daa
ss
rcrl
inc
das
xor
in
inc
dec
inc
xchg
mov
cmp
pop
sub
cmc
fcomps
icebp
sbb
push
and
iret
cs
cli
stos
lods
pmuludq
lods
iret
outsl
bound
dec
stos
and
mov
cmpsl
mov
add
in
add
jbe
sub
mov
or
or
lds
adcl
push
mov
rcll
pause
push
push
aad
stos
push
jmp
gs
add
jbe
rcr
jmp
gs
shll
lods
pop
test
fadd
mov
call
pop
movsb
pop
mov
push
push
sub
and
lcall
sub
imul
sbb
es
add
stos
push
sub
hlt
lea
ljmp
inc
mov
and
inc
sub
daa
lahf
imul
jmp
test
jge
mov
mov
adc
pop
push
call
into
mov
decb
dec
sub
stos
mov
mov
lods
sub
iret
mov
loopne
gs
ja
addr16
ja
sub
sbb
movsl
addr16
or
test
or
dec
push
movsl
shr
lock
test
or
pop
fcoml
push
addr16
mov
int3
ja
clc
push
xor
sub
les
std
sbb
push
std
sub
mov
sbb
or
daa
jb
cmc
imul
push
js
dec
enter
lods
fsubrs
iret
inc
in
mov
sub
inc
jmp
mov
fwait
mov
sub
push
in
add
mov
inc
adc
lahf
lret
inc
inc
pop
pushf
cmp
xchg
negb
inc
and
aaa
das
shr
mov
or
lea
mov
mov
xchg
arpl
dec
push
jl
and
imul
daa
inc
or
adcb
and
pop
push
fisubrl
mov
mov
sahf
xlat
cmpsb
jmp
push
stos
pop
outsb
mov
xchg
mov
pusha
sub
dec
lods
daa
jmp
dec
stos
and
push
aam
sahf
outsl
shrl
push
adc
decb
stc
and
addr16
inc
sti
addr16
addb
and
xor
inc
cmpsl
and
lods
call
cmpsl
popa
mov
push
mov
insb
pop
aad
pop
movsl
mov
mov
mov
add
push
sub
ss
cli
fcoml
sub
pop
xchg
xor
insl
jne
dec
jne
adc
les
pop
ret
dec
xchg
inc
mov
lea
mov
std
ds
fnstenv
loopne
test
or
into
leave
pusha
inc
popa
dec
rcrb
mov
es
jecxz
cmpl
sub
and
xchg
cmp
ja
lret
shll
mov
int3
sbb
test
hlt
push
xorl
inc
xchg
lds
mov
ffree
push
mov
mov
int
iret
outsl
xlat
and
iret
xchg
sub
popf
dec
adc
ljmp
jne
scas
pop
lds
xor
push
pop
xchg
dec
loop
lock
pop
xor
mov
or
lahf
cwtl
push
jge
mov
push
push
in
inc
and
stc
sub
push
mov
sbb
mov
loop
inc
dec
cmp
je
shrb
pop
bound
push
sub
inc
test
fs
movsl
xor
pop
or
mov
adc
jae
idivl
add
fs
inc
pop
inc
sahf
addr16
popa
adc
and
call
inc
and
dec
mov
popa
adc
cltd
and
pop
test
fwait
out
cmp
out
and
and
push
loope
sahf
jp
daa
add
and
sub
movsl
add
test
mov
out
negl
jbe
test
loop
inc
fcoml
loope
or
xlat
loopne
mov
jo
xor
and
dec
insl
and
cmpsl
lea
test
enter
and
xchg
sub
test
adc
push
iret
jo
mov
push
lock
das
out
mov
lahf
pop
and
xchg
ret
repz
mov
and
push
inc
push
leave
mov
xchg
mov
nop
cmp
add
pop
mov
cmc
push
lods
ja
mov
mov
mov
in
xchg
ret
pop
rorl
xchg
aad
outsb
hlt
cmpsl
in
dec
push
lret
xchg
movsb
jp
cld
jmp
movsb
push
xchg
push
call
sbb
push
cli
stc
add
stos
sbb
add
aaa
movsl
hlt
dec
scas
enter
sub
insb
mov
inc
and
movlps
push
pop
add
xchg
adc
pop
out
xor
add
xor
pop
sub
xorl
add
stos
addr16
xchg
pop
aam
dec
mov
sarl
fs
or
add
imul
insl
pop
dec
repz
cmp
inc
jp
shll
and
push
pop
jecxz
xor
int
push
mov
aaa
in
dec
inc
test
pop
push
daa
xor
stos
push
shrb
push
ds
sub
mov
sub
push
ja
aam
inc
inc
and
sub
inc
aaa
jo
sbb
popa
push
mov
int3
pop
adc
dec
mov
jb
xor
sbb
push
inc
lahf
daa
ret
ljmp
icebp
mov
lock
cmp
insl
push
std
or
mov
add
lret
add
mov
xlat
push
mov
std
int
jns
ret
rcrl
jno
imul
jne
mov
pop
js
aas
stc
or
mov
add
cmp
cmp
and
imul
xchg
in
rorl
in
mov
add
sti
pop
mov
out
push
push
xchg
scas
hlt
and
call
sub
xor
cli
inc
push
daa
mov
pop
mov
sbb
js
push
fiadds
test
dec
push
mov
ja
movsl
sti
cmp
cwtl
mov
mov
cmc
mov
jnp
cmpsl
lock
add
in
scas
mov
xor
loope
xor
jge
add
jg
jmp
sbb
roll
in
pop
cmpsl
jge
fdiv
mov
sub
jp
scas
outsb
pop
rcll
test
or
mov
loope
movsl
push
das
xchg
lods
outsb
popf
push
call
or
mov
arpl
movsb
loope
leave
insl
daa
jmp
addr16
sub
inc
xchg
loope
pop
push
fists
sub
sti
lcall
inc
mov
insl
mov
loopne
pop
insl
jmp
aaa
out
stos
jae
lock
adc
push
shrl
hlt
daa
hlt
orb
add
adc
cmpsl
add
mov
jno
push
xchg
das
and
xchg
jnp
lods
test
adc
mov
fcoml
cltd
mov
cs
lahf
xchg
xchg
in
mov
jne
or
jnp
pop
push
sbb
repnz
mov
fsubr
push
sub
adc
mov
lcall
sbb
jo
dec
lds
imull
mov
inc
jae
add
out
mov
cmpb
pop
xchg
and
ret
outsl
mov
in
sub
or
push
movsb
mov
push
inc
pop
add
enter
and
std
sub
cld
adc
dec
das
push
xchg
hlt
in
jno
outsb
pop
and
subb
mov
aam
ss
xor
daa
xlat
cs
into
xchg
out
lods
jo
jge
and
adc
decl
pushf
inc
scas
and
popa
push
push
mov
mov
lret
inc
push
popa
xchg
lods
pop
push
inc
sbb
mov
push
sti
push
and
lcall
push
or
lock
lods
mov
push
xlat
and
dec
out
push
mov
inc
ljmp
mov
hlt
mov
dec
sub
mov
sahf
pop
mov
sbb
and
fsts
dec
or
leave
test
js
mov
pop
jg
call
and
lock
es
das
sub
lods
pop
in
sub
jecxz
sub
addr16
mov
and
loop
mov
mov
or
test
jo
in
pop
nop
push
mov
in
sbb
mov
pextrw
bound
cmpsl
clc
inc
arpl
arpl
subb
xchg
push
dec
mov
dec
mov
rorl
loop
dec
lret
nop
ss
iret
add
push
ja
insl
push
jecxz
and
js
inc
stos
repz
outsl
dec
sbb
ret
jp
loope
ret
sbb
imul
mov
scas
mov
sbb
dec
pusha
out
js
pop
push
pop
and
pop
ja
lahf
add
cmp
cwtl
jb
imul
ret
adc
lahf
cmpsb
fidivrs
dec
cmp
fstl
dec
loop
cmc
pop
shll
mov
jmp
test
outsb
icebp
pop
adcb
xchg
push
push
and
stos
mov
sbb
in
mov
xor
movsb
push
sub
xchg
add
mov
js
xchg
jp
cmp
jns
adc
xchg
andl
daa
jbe
loope
ja
xor
test
jl
incl
add
push
das
cwtl
pand
mov
add
push
sub
push
adc
jns
and
cmp
aam
dec
mov
sbb
inc
aas
clc
push
fucomp
test
fadds
add
iret
mov
das
loop
fsubl
mov
xor
out
ja
adc
pop
das
fcomps
xchg
aaa
xchg
je
add
dec
sub
sub
mov
mov
cmp
inc
lea
testb
mov
sub
sbbb
rcrl
lods
and
inc
wbinvd
cmpsb
outsb
not
pop
je
jne
jbe
mov
pop
aam
push
out
mov
int
pop
gs
int
adc
sub
cmp
jl
lea
inc
mov
pop
adc
jmp
xor
fldt
movsl
das
std
sub
xlat
adc
or
xor
imul
and
loop
xchg
std
stc
sar
jo
fwait
mov
and
outsb
inc
aad
negl
xor
rcrl
mov
imul
loop
mov
push
fstpt
dec
push
inc
out
mov
mull
test
leave
sbbb
pushf
imul
hlt
outsl
mov
or
test
or
mov
test
mov
and
std
jge
xchg
movsb
mov
xor
mov
rorl
leave
addr16
roll
dec
fs
shrb
aaa
in
aaa
rcll
inc
or
in
cmpsl
pushf
aas
fldenv
fldt
push
repz
in
fisubl
xchg
mov
repz
sbb
xor
cli
test
or
or
mov
cs
mov
pop
test
test
clc
lret
lock
scas
xchg
mov
sub
out
and
dec
shl
add
data16
and
fcoms
sbb
pushf
sub
popf
out
mov
jno
pop
xchg
push
pusha
enter
jo
push
aas
jno
pop
mov
ret
sub
inc
or
data16
addr16
add
out
inc
or
into
push
adc
adc
dec
jmp
out
push
call
mov
ja
sahf
mov
mov
and
movsb
mov
fcomi
and
hlt
js
push
adc
push
int3
rolw
or
or
out
test
pop
mov
pop
sbb
cli
jae
inc
insl
inc
in
inc
mov
pusha
in
jg
cmp
add
call
call
mov
xchg
fldl
sar
nop
push
dec
sbb
mov
push
sub
dec
rcrb
movsb
pop
dec
sub
jnp
dec
out
adc
ret
daa
adc
push
inc
call
aad
out
test
xor
aaa
lock
inc
into
and
insl
inc
adc
push
or
dec
xchg
imul
ljmp
sub
test
xor
inc
addr16
push
adc
fsubs
jl
shll
cmc
sub
inc
cmpl
imul
test
xchg
mov
in
push
sub
adc
xor
call
inc
inc
stos
mov
call
mov
leave
outsl
pop
imul
loop
aam
sub
inc
cld
outsb
xchg
movsb
add
and
xchg
movsl
push
cmc
jmp
dec
add
dec
lds
mov
cmc
sbb
imul
adc
loope
dec
push
jbe
xchg
insl
popa
divb
testb
or
add
push
stc
scas
hlt
push
in
jae
shll
inc
test
in
add
imul
mov
push
dec
mov
sbb
daa
clc
dec
aam
mov
out
cld
int
xor
mov
scas
mov
push
lock
js
les
adc
in
rorl
mov
inc
jbe
inc
mov
orb
inc
jp
xchg
xchg
and
movl
mov
test
cwtl
std
repz
pop
mov
cmpsb
add
xor
into
and
daa
int
pop
daa
dec
mov
jb
push
rorb
out
out
gs
mov
or
dec
movsl
add
xor
cmpsb
push
repnz
test
insl
sub
repnz
xor
and
mov
popa
cmp
add
shrl
bnd
mov
dec
lock
fsubrs
das
test
imul
stos
loop
sub
sub
in
bound
or
or
push
mov
cmp
pop
in
jecxz
xor
inc
mov
xchg
xor
xor
mov
push
lcall
mov
movsb
push
xor
outsl
stos
lahf
cli
xchg
mov
xchg
pop
pop
pop
push
cld
sbb
push
inc
enter
xchg
dec
stos
or
test
cli
aad
lock
push
loopne
mov
fadds
fsubs
mov
pop
jmp
and
push
lret
push
shrb
test
inc
or
outsb
aas
and
xor
fldz
fsubrs
mov
dec
mov
or
push
jge
loopne
sub
jle
jns
sub
or
lods
or
mov
cmp
stos
scas
dec
lods
adc
or
adc
loop
cmp
ss
ja
je
shll
push
mov
push
imul
aam
outsb
movsl
daa
and
sub
das
pop
lock
ret
push
push
sub
or
mov
dec
jno
shrl
hlt
push
in
mov
or
jmp
dec
rcll
data16
mov
mov
frstor
pop
lahf
jp
imul
cwtl
aam
xchg
sub
and
mov
dec
adc
sub
call
dec
scas
lods
inc
ss
xlat
push
cmpsb
adc
add
scas
xor
in
cs
adc
cmp
scas
daa
fs
js
fstl
cmp
mov
mov
mov
rcrb
xor
repz
cld
lds
or
sub
xchg
js
int3
sbb
push
inc
mov
jmp
cmp
roll
and
xchg
clc
jecxz
mov
xchg
dec
lcall
mov
insl
sub
aad
lahf
shl
add
lret
roll
mov
xchg
std
sbb
pop
out
jge
lahf
pop
rorl
jne
pop
mov
scas
roll
mov
xor
int
jle
and
dec
test
jmp
pop
adc
sub
outsb
and
mov
addl
sub
sub
lahf
jge
mov
pop
sub
inc
cmc
and
mov
fwait
xchg
gs
pop
push
sbb
and
cmp
lods
cmp
xchg
mov
loope
cld
sub
imul
sub
and
fisttps
xor
mov
ficomps
push
pop
out
out
movsl
mov
popa
cs
lahf
jge
call
xchg
packssdw
daa
mov
fcoms
scas
lret
jns
add
or
dec
jae
imul
movsb
jnp
lret
dec
mov
imul
sbb
gs
mov
and
and
jmp
rorl
push
or
adc
sbb
inc
gs
dec
shll
jl
ret
fnsave
popf
rep
xlat
rolb
adc
cmc
imul
and
pop
add
sahf
add
xchg
stos
and
add
xchg
outsb
ds
dec
loope
inc
stos
sub
hlt
sbb
xor
push
jno
pop
xchg
mov
add
in
sub
and
or
jge
dec
mov
and
daa
mov
mov
lds
mov
loope
mov
add
xchg
ret
push
lret
icebp
imul
test
xchg
icebp
loope
push
adc
mov
test
jae
popf
xor
sub
xchg
dec
push
and
lock
lcall
dec
clc
mov
out
mov
fucom
xchg
clc
testl
shl
cmpsl
movsl
pmaxub
out
jge
sti
adc
cld
mov
ja
push
out
push
add
cmc
outsl
mov
xor
lock
pushf
push
adc
sub
sahf
std
fstpt
mov
inc
and
mov
xor
out
int3
decb
sti
imul
shr
mov
mov
xchg
test
dec
mov
in
cmp
xchg
add
sub
cmp
jbe
push
inc
cmp
mov
and
sub
imul
add
in
dec
movsl
cmc
jmp
or
push
pop
xchg
gs
pop
adc
ret
rol
xorl
sub
jmp
sub
push
loopne
push
mov
je
stos
mov
std
fimull
addr16
jbe
js
ja
rdpmc
negl
mov
xor
in
sub
adc
pop
sub
andl
aam
lea
cld
push
cmp
out
clc
jo
push
adc
popa
or
subl
jmp
cmpsl
ret
push
jg
pop
adc
xor
setns
mov
push
mov
ds
testl
fsub
inc
mov
scas
jno
loope
shll
xor
sub
add
bound
adc
iret
les
mov
adc
pop
or
xor
and
lods
xchg
xlat
and
sahf
mov
js
mov
jmp
mov
pop
icebp
aaa
and
pop
push
loope
pop
jae
les
add
es
mov
enter
imul
stos
repnz
inc
cli
aaa
adc
adc
loop
or
inc
cmp
addr16
popf
in
or
in
jecxz
dec
adc
sbb
mov
pop
mov
outsb
popa
xor
test
test
or
inc
and
xchg
push
out
or
or
lock
jbe
dec
adc
adc
sub
lods
adc
add
dec
sub
jmp
test
ret
push
and
mulb
sti
or
cmp
rcrl
cmp
mov
lea
sbbb
div
scas
es
cmp
mov
push
push
mov
mov
sub
test
pop
in
sub
in
jecxz
adc
jmp
adc
lret
imul
ror
orb
aam
gs
pop
push
push
and
insb
insl
cltd
in
scas
lret
sub
xor
xchg
xor
push
sub
fs
mov
push
fists
jne
ljmp
cmpsl
ret
loopne
test
outsl
scas
out
jns
test
std
push
adc
adc
cmpsb
rcl
mov
cmp
or
inc
dec
inc
enter
xchg
or
sahf
shll
test
rolb
mov
enter
sub
inc
xchg
lret
mov
adc
adc
mov
aad
push
aas
scas
es
xor
xchg
push
in
out
inc
loopne
and
movsl
fstl
add
jbe
xor
and
out
popa
adc
cmpsb
xchg
jbe
cmpsb
sbb
sub
jge
jle
lds
cmp
loop
test
inc
enter
or
xchg
dec
addr16
jp
rolb
mulb
adc
int
push
mov
add
rolb
mov
fldl
dec
mov
out
data16
jp
notl
and
cmpsl
mov
and
xor
in
repnz
lds
push
inc
fisubrl
cs
xor
aad
cmc
sub
inc
or
shll
mov
add
fstp
sub
jge
lahf
lahf
inc
sahf
test
adc
adc
add
push
pop
out
sub
fbstp
das
sbb
add
mov
out
jb,pn
cmpsb
add
pop
sub
inc
shl
jg
and
shl
lods
inc
mov
push
push
add
or
loop
ja
pop
dec
pop
cld
dec
or
es
sar
mov
push
push
add
lods
sarl
adc
stos
push
sbb
cs
out
bound
mov
push
insb
aas
cmpsl
add
loope
scas
loop
decb
sti
sub
cmp
cmp
jno
fadds
jbe
fisubrl
test
and
pop
sub
xor
pop
push
sub
notl
aaa
xor
fistpl
js
in
sub
mov
gs
fmuls
jno,pn
fadds
shlb
dec
push
or
inc
adcl
sbb
divb
xchg
mov
enterw
mov
insb
mov
push
adc
jmp
stos
pop
in
push
pop
xchg
cli
mov
into
add
dec
and
mov
pop
or
nop
pop
sub
ret
and
xchg
call
inc
cmp
and
subb
mov
mov
cli
in
ror
and
pop
test
pop
lret
adc
pop
clc
rclb
push
mov
ficoms
outsl
js
jp
icebp
testb
sbb
xchg
loopne
jo
jge
adc
scas
cwtl
shr
in
cli
adcl
mov
xchg
mov
iret
push
icebp
repz
push
and
mov
icebp
lcall
lds
jmp
and
lret
mov
or
shrb
pop
and
in
call
sub
mov
mov
test
inc
rorl
nop
movsl
and
scas
in
pop
fsubl
sub
mov
jmp
adc
ds
in
movsb
insl
addr16
xor
sbb
mov
cwtl
sub
inc
cmc
xor
sbb
aam
inc
inc
scas
sbb
daa
xchg
xor
lods
cmc
mov
call
xor
outsb
mov
jge
or
cmp
sub
mov
pop
mov
inc
pop
pop
xchg
sub
push
push
fwait
adc
mov
cmpsb
and
push
or
mov
pop
mov
lret
loope
add
push
mov
aam
mov
cmp
cmp
mov
dec
sub
insb
or
negl
pop
imull
outsb
pop
jae
jmp
out
mov
scas
shlb
sub
es
or
sbb
std
adc
pop
in
mov
outsb
aad
adc
push
inc
jns
sbb
xchg
inc
add
and
cli
lods
scas
jno
and
repz
mov
jo
lahf
adc
push
in
dec
sub
or
adcl
into
push
inc
arpl
sub
inc
and
mov
sbb
enter
insl
aaa
jb
leave
dec
push
cmp
push
gs
ret
daa
cmp
sub
insb
mov
in
lcall
inc
mov
xor
test
out
dec
or
stos
fimull
loopne
pop
xchg
cmpsb
cmpb
pusha
iret
push
xor
jno
mov
fadds
cmpsl
push
and
push
scas
jl
nop
iret
fnstsw
xchg
dec
adc
xor
out
sti
fisttpl
inc
mov
jge
pop
adc
gs
xchg
in
adc
mov
xchg
fsubrl
xor
and
mov
repnz
mov
outsb
dec
aad
pop
cmc
movl
cld
sbb
cmp
or
xor
mov
clc
imul
movsb
daa
iret
inc
pop
shl
test
in
fsub
and
adc
stos
lods
and
inc
cmpsl
or
adc
xchg
rorl
cmc
xchg
in
adc
loopne
sarl
aam
inc
jmp
imul
movsb
in
inc
notb
stc
mov
lahf
mov
idiv
flds
adc
and
xchg
addb
xchg
cli
pop
addr16
lods
ret
pushf
lods
sub
lcall
out
dec
pop
out
adc
repz
adc
mov
fcoms
aaa
add
or
jecxz
mov
aas
jbe
mov
pop
push
out
rolb
lret
gs
fcoms
fcoms
in
adc
and
lret
inc
inc
mov
jnp
aas
sub
mov
stos
aam
gs
ljmp
in
jle
das
in
xchg
and
mov
mov
mov
movsl
call
push
fcmovnu
sub
push
add
movsl
jbe
mov
sub
xchg
imul
adc
xlat
mov
mov
sub
mov
sub
push
mov
test
push
scas
lock
inc
enter
dec
dec
or
push
jno
mov
adc
push
sbb
cmpsl
cmpsb
in
xchg
jne
popa
mov
push
xor
mov
add
jo
mov
mov
decl
mov
enter
ret
or
into
outsl
aad
or
cmc
sub
mov
andb
push
mov
mov
pop
jle
xchg
jb
jb
stos
xor
sub
dec
push
xor
in
inc
aaa
pop
je
or
sub
mov
adcb
and
js
std
lret
and
movl
jg
in
cld
in
and
hlt
xlat
out
xor
inc
testl
mov
shlb
and
mov
jne
outsb
in
aaa
adc
xor
outsl
mov
pop
mov
enter
mov
push
adc
fcomip
iret
inc
xor
mov
jecxz
jg
adc
mov
push
insl
xchg
insb
aas
and
popf
ret
xchg
sbb
push
fstl
mov
mov
repz
popa
and
mov
mov
loope
imul
lret
insl
mov
or
and
pop
push
icebp
push
push
xchg
mov
into
mov
clc
push
adc
cmpsb
push
sbb
push
push
jmp
push
push
xchg
das
enter
ss
ror
icebp
xchg
pop
repz
rolb
push
fsubs
xchg
daa
ret
cmp
mov
pop
jns
sub
shrl
xchg
out
shrl
movsb
xor
and
negb
jmp
ja
pushf
arpl
adc
xchg
pop
push
xor
je
pop
push
sub
adc
xchg
mov
call
pop
jmp
sub
adcb
or
ja
adcb
daa
sub
testl
outsb
fld
push
ja
jbe
cmp
push
xor
adc
adc
lcall
enter
or
movsl
int3
scas
or
cmp
push
push
xchg
icebp
aad
imul
xchg
imul
sub
aad
mov
add
cmp
insl
sbb
jno
outsb
pop
daa
push
push
mov
les
adc
xchg
push
adcl
push
cmpsb
dec
stc
mov
pop
test
mov
shll
pop
sahf
gs
pop
testl
push
jne
cmpb
inc
dec
mov
fistpl
popa
push
ja
push
cltd
in
scas
lahf
sarl
add
fwait
inc
jo
mov
cmpl
outsl
sbb
stc
cld
pop
sub
push
lret
iret
mov
fisubs
xor
insb
lock
add
test
movsl
xor
sub
sarl
dec
jnp
inc
subb
dec
fadd
pop
icebp
dec
sbbl
push
outsl
pop
insl
inc
outsb
ret
in
xchg
loop
mov
push
shll
dec
push
gs
bound
and
dec
cmpsl
pop
inc
xchg
mov
adc
xchg
sbb
aaa
push
add
inc
jp
notb
bound
mov
les
mov
push
xchg
bound
jmp
dec
pop
mov
mov
push
adc
lds
adc
sub
inc
xchg
mov
sub
xorl
push
out
sbb
cmp
dec
testb
movsl
bound
ss
add
divl
mov
dec
je
add
pop
sub
ljmp
cmp
in
and
jp
sbb
and
sbb
repz
bound
mov
pop
shlb
xchg
jae
push
push
push
mov
add
fucom
push
jae
gs
ffreep
xor
or
mov
out
lcall
xchg
pop
out
inc
daa
jle
adc
shll
imul
cs
imul
push
xchg
mov
movsl
ret
mov
imul
lods
shrl
movsw
scas
push
pop
popa
mov
mov
mov
sub
test
mov
bound
xchg
inc
shlb
jo
sbb
aas
enter
fadds
xor
int
mov
pop
rcll
sbb
lcall
mov
sbb
inc
cld
call
adc
insl
jae
cmp
cmpsb
mov
daa
jp
add
data16
iret
jo
iret
pop
xchg
inc
sub
xor
xlat
test
and
mov
test
enter
cmp
ljmp
addb
es
adc
mov
mov
stc
adc
inc
fdivs
sti
jmp
lret
daa
fsubrs
insl
push
push
movl
mov
pop
xchg
sbb
push
xchg
aas
push
sub
inc
jae
adc
xchg
jge
leave
ds
mov
insb
push
mov
insl
popa
not
in
sahf
popf
int3
rol
pop
cli
in
aad
dec
or
or
mov
movsb
xor
fs
xchg
test
push
pop
in
idivl
add
pop
js
jecxz
dec
sarl
xlat
test
int
jns
dec
inc
sbb
inc
fildll
bound
xchg
loopne,pn
jecxz
inc
mov
mov
loope
mov
and
fcomip
hlt
add
xchg
lea
fwait
hlt
ret
mov
enter
aad
imul
pop
enter
jae
fs
xor
out
pop
dec
call
test
sti
aad
push
adc
push
jae
push
cmpsl
scas
inc
fistpll
sub
pop
in
lds
lahf
or
add
out
lds
js
xor
cmp
push
testl
daa
inc
fsubl
inc
shll
repnz
pop
clc
push
sbb
and
mov
push
mov
push
dec
xchg
xchg
adc
gs
add
lods
mov
adc
push
cmpsb
inc
test
and
mov
dec
mov
js
cs
dec
outsb
or
sub
inc
push
push
push
pop
je
xchg
push
je
xchg
dec
repz
fucomp
cld
mov
pop
xlat
cmpsl
les
mov
cmpsl
ret
adc
add
pop
call
mov
inc
sub
imul
dec
mov
xchg
imul
lret
std
jle
mov
aas
std
pop
mov
addl
fcoms
sub
mov
jecxz
and
loope
sti
adc
and
ret
test
shll
imul
jne
roll
mov
or
xorl
inc
or
add
bound
mov
lds
lret
ret
addb
dec
push
movsb
loop
and
xor
push
push
or
sub
aam
test
push
mov
and
aad
imul
add
iret
repz
sub
sbb
imul
jb
int3
sbb
mull
bound
hlt
outsb
clc
xor
test
jns
pop
sub
in
cltd
xchg
bound
pop
adc
jo
outsl
adc
mull
fcmovbe
cmpsl
push
pop
xchg
mov
xchg
xor
sbb
in
insl
out
cmpsl
loope
lds
pop
xchg
je
out
xchg
pop
xor
insl
lahf
push
ret
out
test
adc
jne
jle
xchg
icebp
pop
clc
test
ss
pop
and
xchg
xor
sub
imul
and
jmp
shll
fbstp
dec
mov
pop
jmp
inc
ss
pop
popa
adc
dec
and
xor
mov
call
ret
push
inc
fs
sbb
fadds
movsl
movsl
ja
test
shrl
fdivl
adcb
shll
daa
es
bound
test
mov
out
outsl
inc
push
xchg
scas
jbe
inc
out
cmpsl
jmp
xor
and
lods
or
bound
mov
push
std
pop
addr16
stos
addr16
jno
cli
aaa
addr16
frstor
insl
addr16
push
js
sub
jno
test
fsub
in
inc
aad
and
inc
dec
mov
xor
mov
js
and
jecxz
mov
adc
sbb
pop
mov
fs
adc
stos
sub
xor
ja
mov
negb
dec
cwtl
in
or
mov
imul
jno
dec
or
test
clc
clc
fsubr
and
scas
popf
push
test
mov
pop
es
adc
sub
and
push
repnz
push
mov
pop
daa
aaa
mov
xchg
nop
dec
call
mov
push
stos
test
push
and
xchg
lods
push
jecxz
sub
inc
fcoms
sub
push
mov
add
add
sub
xor
pop
stos
pushf
fwait
int3
push
daa
inc
jle
lods
ds
in
pop
or
push
aas
mov
inc
mov
cmp
push
mov
jmp
add
shll
stos
jle
xchg
daa
sub
loop
or
xor
xchg
in
sub
pop
es
daa
sbb
add
ret
xor
das
js
xchg
outsl
pusha
or
or
sub
sub
testl
das
lods
jge
das
call
enter
and
adc
xchg
adc
daa
cs
test
pop
jo
es
not
jl
sub
or
mov
push
arpl
jo
mov
fs
daa
mov
jl
xchg
stos
cmp
nop
cmpsb
xor
movsl
push
push
gs
xor
imul
push
mov
aaa
pop
adc
xor
dec
int3
or
mov
loope
jl
dec
movsl
cld
shrl
lea
packssdw
int3
cmc
xchg
bound
push
inc
mov
lds
into
inc
stos
repnz
lods
lahf
mov
negl
or
daa
jmp
imul
cltd
pop
inc
imul
and
push
fidivs
shlb
inc
xor
hlt
add
iret
inc
gs
mov
dec
ja
sbb
loope
push
cmpsb
push
stc
test
dec
or
rolb
je
inc
sub
mov
mov
adc
dec
bound
or
mov
mov
repnz
js
popf
js
and
and
xor
and
das
ljmp
test
pusha
mov
rol
push
daa
xchg
jmp
dec
shrb
pop
lcall
pop
xchg
xchg
dec
movsl
loope
lock
and
adc
aad
test
dec
lods
fwait
enter
popf
jne
push
jl
and
cmp
vmovaps
sti
xor
data16
or
cmpsl
pop
imul
and
frstor
jmp
stos
dec
push
in
jns
inc
xlat
popf
imul
and
pop
lods
ret
inc
ljmp
push
test
cmp
pop
adc
sub
cmp
sbb
push
xchg
pop
xchg
dec
ret
add
outsb
pusha
lock
xchg
pop
add
adcl
xor
push
fisubs
stos
inc
push
scas
dec
push
test
test
icebp
int3
out
mov
xchg
in
xor
aad
push
sub
mov
test
sbb
xchg
mov
test
add
gs
cmp
xor
mov
cmpsb
xor
adc
int3
or
cmp
lahf
dec
fs
repz
cmp
outsl
aam
mov
sbb
adc
dec
ja
aaa
xor
js
test
fwait
ja
pop
lds
xor
inc
push
mov
les
testb
sub
imul
nop
mov
aaa
shrl
jge
inc
addr16
fistpl
xor
cmc
out
xor
int
xchg
sub
cmpsb
push
mov
cmp
push
sub
loope
xor
inc
or
cs
xor
aam
shr
xor
adc
and
loop
push
std
inc
pop
addr16
mov
jle
or
andb
mov
hlt
sub
xor
es
sub
xor
cmp
mov
cmp
jp
sbbb
and
lcall
inc
dec
insl
xchg
adc
dec
mov
aaa
xor
jno
shlb
movsb
dec
enter
xor
or
dec
mov
xor
jle
loop
ljmp
pop
sub
negl
sub
add
adc
and
inc
pushf
xchg
out
jl
out
adc
xor
adc
in
addr16
fldl
outsl
push
aas
cmp
aas
inc
lea
inc
mov
xchg
repz
sub
inc
es
add
mov
fwait
imul
or
sbb
push
inc
push
dec
aam
cmpsb
jecxz
insb
pop
in
mov
inc
nop
les
shrb
aas
jge
aaa
sti
je
loopne
xchg
fsubp
test
cmpsb
inc
lahf
xor
sub
xchg
je
sbb
lea
mov
pop
ss
shll
fnstcw
gs
inc
sbb
into
inc
or
mov
outsb
in
pop
gs
jmp
jge
jns
sub
push
cmpsl
aad
xor
mov
mov
or
mov
sub
xchg
orl
rorb
adc
jl
sub
xchg
push
jmp
scas
xlat
pop
lds
popf
in
roll
mov
push
xchg
or
push
xor
inc
mov
adc
pop
mov
rol
jo
push
cwtl
nop
and
lahf
ja
xor
xor
and
adc
sahf
loop
jle
pop
mov
push
jno
scas
out
cmc
test
cmp
ljmp
movsl
test
mov
cmp
mov
out
sbb
jge
jb
aaa
xlat
iret
mov
stos
nop
mov
and
mov
push
cltd
adc
push
insl
sbb
call
hlt
cmc
sub
inc
pop
xchg
mov
testl
ja
insl
sbb
popf
daa
in
pop
pop
packsswb
inc
test
inc
scas
jne
mov
out
mov
aam
cmpsb
mov
insl
jne
popl
add
jns
call
lcall
test
cmp
mov
push
je
push
ret
mov
push
pop
in
jnp
mov
jbe
or
and
rcl
cmp
pop
and
mov
in
pop
sub
shl
dec
aad
hlt
adc
add
icebp
cmp
pop
bound
xor
add
and
cld
pop
and
mov
pop
pop
push
push
addl
sbb
stos
add
fimuls
jge
idivl
push
dec
and
ret
mov
xor
into
mov
ja
outsb
scas
xchg
pop
and
mov
scas
fs
aaa
dec
cmpsb
sbb
or
cmp
cmp
test
inc
mov
mov
push
sbb
fcmovnb
daa
mov
push
push
pop
jo
lret
popa
notb
adc
xchg
icebp
jmp
and
shl
mov
sub
xchg
sbb
push
adc
and
push
pop
daa
sbb
shrl
adc
push
fstpl
call
mov
mov
in
inc
lret
testb
xchg
mov
es
repz
int3
mov
push
lahf
mov
and
lds
insl
call
outsl
dec
imul
xor
lcall
jmp
loopne
mov
in
roll
add
cmp
jb
imul
add
jecxz
inc
cmpsl
xchg
dec
push
lahf
sbb
cmc
push
je
sti
cmc
inc
dec
or
or
enter
inc
shlb
xor
dec
je
push
sub
insl
jne
movsl
clc
pop
add
mov
push
xlat
imul
in
jne
push
and
outsb
add
inc
loope
in
fldcw
and
mov
daa
testb
sub
idiv
push
sbb
lds
fcom
stc
shrl
pop
notb
adc
xlat
in
outsl
lock
jne
mov
mov
scas
das
xchg
and
loope
mov
cwtl
inc
jle
add
das
movb
cmpsl
mov
ja
inc
loop
aad
ret
shrl
dec
les
ret
push
jns
jns
and
cmp
fnstenv
imul
inc
gs
aas
repz
loope
cli
sub
pop
enter
aad
xchg
fisubs
mov
sbb
mov
mov
sub
hlt
sub
mov
jecxz
sub
or
das
insl
cmp
daa
xchg
in
mov
and
mov
xchg
mov
je
in
xor
ret
jo
lods
jge
in
push
jo
jge
inc
pop
icebp
mov
dec
pop
mov
rcr
rcrb
outsl
fildl
cltd
aam
mov
ret
xchg
rcrl
bound
push
int3
inc
mov
push
sbb
pop
adc
lods
fwait
dec
test
xchg
sub
xorl
adc
xlat
popa
cs
das
xchg
je
jmp
mov
jo
shll
je
dec
mov
test
and
or
push
inc
and
sub
adc
and
enter
add
or
add
sbb
std
push
jg
inc
test
and
int3
sub
fidivrs
dec
int3
enter
or
lock
ret
daa
jns
loopne
jecxz
das
aas
fldcw
fs
leave
jne
daa
inc
leave
jne
or
frstor
dec
pop
jne
xor
sub
jne
and
cmp
inc
sahf
loopne
sti
orl
or
xlat
mov
ljmp
cmp
mov
adc
subps
add
nop
mov
aam
jne
push
mov
sahf
mov
xor
movsb
mov
adc
stos
js
lock
aad
sbb
mov
push
aam
push
jmp
js
jne
xor
comiss
scas
aas
shrl
push
pop
fidivl
add
push
and
mov
cmpsl
movsl
insl
xchg
hlt
out
jl
imul
dec
cmpsl
fstpt
cld
xlat
sahf
test
xor
xchg
xchg
pusha
jae
dec
aad
int
fwait
imul
and
inc
mov
test
rol
call
mov
or
mov
stos
movsb
loop
or
addr16
dec
inc
jno
sub
mov
in
dec
push
das
lock
fwait
mov
divl
and
repz
scas
push
push
inc
push
mov
mov
lds
push
sub
inc
adc
bound
adc
int
push
int3
xor
divb
sbb
lds
mov
xchg
adc
push
jo
adc
mov
aad
insl
push
push
ffree
xor
fstps
das
adc
jecxz
or
push
or
es
or
push
inc
outsb
inc
adc
inc
sti
fidivrs
adc
mov
daa
jne
sti
rcl
push
ret
test
sti
inc
cmpl
fmul
loopne
shll
xchg
or
dec
pop
dec
push
add
and
fcomi
jecxz
test
fildll
testl
rcll
xchg
and
xchg
inc
sub
lahf
loope
sahf
or
adcl
jo
inc
lahf
aas
fnsave
jno
iret
imul
mov
lods
mov
repz
push
loope
pop
in
call
sbb
jbe
es
ja
call
pop
out
pop
xchg
cld
add
ja
dec
sahf
cmpsl
jecxz
jne
xor
xchg
arpl
hlt
into
adc
mov
or
cmp
or
or
adc
inc
push
inc
in
push
pop
outsb
inc
mulb
mov
mov
sub
in
mov
adc
hlt
or
dec
mov
adc
jmp
adc
mov
and
flds
xchg
ja
sub
xchg
or
popa
pop
icebp
loopne
adc
imulb
cmp
pop
lcall
inc
aad
push
lea
adc
imul
push
mov
aaa
ret
xchg
movsl
and
jb
movsl
sub
mov
dec
cmpsb
sub
notb
push
or
inc
sub
jmp
push
jp
sub
repnz
jmpw
push
mul
dec
cltd
and
imul
cmp
inc
push
xor
jg
enter
push
sub
adc
sarl
mov
jmp
stos
cmc
pusha
push
push
fimuls
and
and
xor
and
imul
inc
mov
daa
test
xor
mov
ja,pt
and
stos
xor
std
dec
rorb
pop
ficoms
mov
fs
scas
push
adc
int3
adc
jl
scas
popf
addr16
mov
call
je
dec
xor
aaa
push
sub
outsl
mov
cmp
movsl
push
out
push
dec
sbb
rol
sub
xchg
sub
in
mov
in
fcomps
push
jg
lret
adc
or
adc
sahf
subl
hlt
sub
jecxz
inc
xor
mov
cld
test
cmp
or
cwtl
and
mulb
repz
mov
push
or
inc
and
iret
shl
push
or
xchg
aad
imul
mov
imul
sti
jmp
leave
sbb
mov
fsubr
adc
int
aad
inc
enter
xor
cmc
shrl
aaa
mov
jne
jns
sub
insl
xor
pop
roll
mov
or
es
push
addr16
fildl
aas
dec
cmpsb
mov
into
jno
dec
dec
test
inc
mov
adc
add
adc
mov
ss
xchg
fistpl
test
and
dec
mov
xor
xor
sub
sub
add
or
pop
pop
cli
sub
xor
call
test
jne
es
push
inc
insl
ret
and
xor
lods
push
jp
xchg
and
das
das
imul
xchg
and
pop
movsb
mov
mov
into
sub
jns
xor
push
mov
sub
add
inc
xlat
fs
inc
sbb
jmp
in
cs
add
push
or
je
and
loopne
and
jno
in
jp
and
insl
bound
aaa
and
out
inc
movsl
mov
or
mov
lcall
gs
xchg
pop
outsb
lahf
adc
popa
push
dec
hlt
push
jp
test
mov
fdivl
inc
addr16
and
dec
mov
loop
lahf
into
rcr
cltd
gs
adc
jae
in
dec
es
xor
enter
es
or
ja
cmpsb
icebp
lcall
mov
outsl
push
dec
mov
xchg
inc
inc
jl
fldenv
test
iret
mov
dec
rcrl
outsl
add
add
ja
stos
rolb
xor
adc
lret
push
push
dec
inc
push
mov
pop
stc
jae
mov
or
flds
clc
lcall
jae
mov
aam
and
xchg
sbb
movsb
inc
push
jnp
mov
jno
iret
arpl
xor
loop
ret
mov
movsl
jecxz
cmpsl
das
add
arpl
pop
xor
hlt
cld
mov
repnz
js
xor
call
stos
push
dec
and
adc
in
test
push
icebp
fdivr
xor
dec
xchg
sti
in
aaa
mov
pop
inc
jno
sub
out
test
mov
lods
int3
int
out
in
cmp
dec
jecxz
xchg
xchg
xchg
js
data16
rcr
int
mov
pusha
mov
dec
sbb
icebp
cmc
fsub
sub
xchg
pop
cmp
bound
mov
mov
sbb
xor
or
push
dec
call
aaa
and
xor
pusha
fstl
mov
mov
adc
scas
stc
je
dec
mul
push
aad
test
dec
sub
xchg
fcoms
add
je
in
fs
push
mov
xchg
aad
sub
gs
enter
add
xchg
popaw
jge
lcall
outsl
scas
dec
xchg
xor
enter
or
push
jle
jmp
xchg
xchg
sub
sahf
jecxz
imul
sub
and
fdivl
fimuls
fwait
call
xorl
int
sub
push
js
repz
aaa
adc
sbb
rorl
ljmp
int3
and
fmull
dec
repnz
ds
cmpsl
imul
mov
pop
cmp
inc
out
je
inc
in
add
les
cld
xor
lods
or
dec
cmp
cld
sbb
notl
movd
out
adc
test
xchg
jl
sub
mov
lds
sub
xor
sti
pushf
ret
fnstenv
cmp
push
test
pop
inc
xchg
xchg
into
sub
inc
es
pusha
int
inc
mov
ret
dec
add
std
bnd
dec
inc
pop
xor
bound
mov
scas
inc
and
jge
divb
sbb
mov
filds
sub
int
dec
or
mov
mov
mov
lods
push
add
pop
jge
lea
fwait
es
mov
pop
cmp
pop
jb
aad
sarl
aaa
test
or
nop
ja
jl
xchg
adc
mov
sbb
push
mov
cltd
mov
pop
and
mov
shrl
add
cs
ljmp
outsw
fstpt
pushf
push
and
loopne
call
lds
inc
push
sbb
add
daa
fs
inc
mov
inc
repnz
inc
gs
dec
arpl
in
adc
cs
jmp
lret
jne
out
inc
lret
cld
or
int
cltd
cmpsl
repnz
int3
lcall
pushf
into
jb
inc
jle
fs
movsl
loope
out
jb
testl
or
cld
push
mov
hlt
bnd
inc
push
mov
mov
mov
arpl
lcall
dec
imul
mov
pop
and
decl
and
dec
sub
sbb
mov
decb
lea
mov
pop
adc
test
stos
in
push
and
mov
sub
xchg
test
pop
rcll
test
inc
push
fcoms
add
mov
push
sbb
inc
adc
xor
mov
mov
out
lahf
addb
xor
mov
and
pop
push
leave
dec
cmp
test
gs
lock
mov
loopne
cmp
je
imul
or
or
push
inc
and
mov
imul
xor
cli
xchg
xchg
dec
scas
dec
inc
fs
enter
ret
imul
stos
lea
sbb
aaa
inc
dec
jo
jne
pop
js
gs
ret
cld
je
cwtl
insl
mov
stos
pop
sbb
movsl
xor
and
dec
jbe
pop
sahf
pop
push
mov
sbb
fcomps
sub
xor
ret
sti
dec
stos
sarl
dec
call
lods
pushf
daa
out
lret
and
xor
sub
xchg
mov
pop
lock
das
pop
push
mov
inc
out
mov
sub
and
xlat
inc
mov
daa
inc
out
jmp
sub
pop
stos
es
lods
ret
pop
iret
pop
shrl
adc
push
xor
adc
xchg
xor
movsl
lods
sub
or
shlb
adc
mul
push
fs
xchg
push
lods
sarl
addr16
iret
call
add
test
lods
xor
insl
cmc
push
dec
add
ss
in
out
xor
push
rcrl
xchg
fisubs
adc
imul
push
fnsave
js
xchg
aad
lahf
dec
jge
inc
inc
jne
adc
popaw
push
icebp
mov
push
xor
or
inc
data16
lods
emms
mov
add
mov
int3
adc
add
jne
lcall
test
jg
rcl
jb
inc
cltd
cli
xchg
lods
test
stc
adc
in
outsb
pop
stos
push
andb
mov
jns
cmp
in
inc
push
sub
daa
dec
sbb
dec
in
in
push
cmp
cmp
jmp
adc
add
push
aam
xor
out
mov
repz
cmp
mov
push
xchg
faddl
loope
cmc
fwait
mov
inc
sahf
xchg
jo
rorb
lds
fldcw
jae
test
clc
jp
dec
inc
or
push
scas
inc
cmc
insl
xor
dec
sbb
mov
sti
cltd
and
inc
movsl
idiv
sbb
cmp
cs
outsl
lock
push
cmp
inc
shrb
mov
mov
pushf
mov
xor
imul
into
cmp
or
insl
cmpsl
xchg
gs
sub
xor
sub
mov
loop
addr16
and
mov
inc
mov
imul
call
in
sub
fs
pop
imul
pop
sub
insl
call
push
popl
gs
les
sarb
fisttpll
sahf
cs
mov
imul
lods
mov
lds
sbb
in
mov
aaa
adc
sub
adc
leave
mov
fildll
jne
mov
cmp
in
push
push
pop
or
sub
push
insb
adc
cmp
sbb
cli
mov
jp
or
fs
jae
mov
cmc
adc
roll
gs
loopne
and
pop
dec
mov
push
push
out
pop
jl
out
cmp
addr16
in
dec
or
lret
clc
test
addr16
add
sub
push
cmpsb
sub
and
imul
mov
arpl
bnd
das
sub
cmp
test
das
mov
push
pop
and
test
test
adcb
xchg
negl
push
enter
mov
call
repnz
pusha
cmp
stos
imul
lcall
xchg
add
push
pop
test
mov
pop
lret
ret
cmp
test
jne
cwtl
imul
imull
aam
mov
nop
jmp
xchg
push
cld
fcmove
pop
cwtl
imul
in
fdivrs
add
inc
dec
sahf
pop
inc
add
outsl
jmp
xor
push
gs
pop
test
dec
push
push
imulb
shrl
sbb
inc
inc
pushl
mov
outsl
test
cmp
pop
stos
popf
sahf
movsb
push
sub
push
sbb
sub
add
int
sub
adc
jecxz
loope
jle
push
mov
sub
rolb
xor
pop
lahf
test
aad
loope
add
push
into
pop
mov
dec
cmpsb
ss
sub
or
sbb
and
dec
sub
popa
adc
push
fsubs
les
out
push
sub
clc
fucomp
sbb
add
in
mov
fcmovbe
xchg
adc
sbb
push
fadds
adc
popa
in
lahf
xchg
mov
sub
cmpsb
shl
mov
je
outsb
inc
hlt
push
fldt
xor
or
aam
int
test
in
jmp
mov
mov
mov
add
mov
pop
xchg
test
cmp
cmpsb
inc
aaa
imul
sbb
cmp
cmp
adc
gs
addl
xor
mov
insb
inc
and
fs
adc
inc
mov
je
inc
jp
adc
mov
pop
or
or
call
sub
adc
sbb
jl
pop
fs
jno
jno
aad
fsubs
shll
inc
cld
lock
jmp
fdiv
pushl
sub
daa
xlat
addr16
daa
mov
jnp
or
jns
inc
cmc
test
bound
pop
daa
lds
sub
mov
mov
call
in
xor
cmp
jp
movsl
push
popf
aaa
adc
imull
enter
ror
xor
and
jg
dec
shrl
xor
inc
aas
inc
ds
decb
sub
stos
push
pop
lret
dec
xchg
mov
jne
adc
sarl
ss
clc
jns
ror
xchg
loope
and
hlt
adc
push
pushf
sbb
xchg
call
or
and
fwait
in
mov
xor
add
jmp
jg
scas
aaa
jmp
icebp
rcrl
inc
push
dec
bound
inc
xor
and
xchg
xor
aaa
push
sub
mov
stos
or
inc
jo
xor
push
sahf
pop
insb
cmpsl
mov
bound
push
xlat
movsl
inc
gs
push
in
jnp
test
fwait
gs
in
mov
cli
xchg
imul
outsl
sub
or
out
mov
inc
in
mov
push
sahf
std
xor
and
scas
in
mov
flds
adc
fwait
mov
jb
test
and
dec
mov
push
cwtl
lock
mov
rorl
or
push
xor
stc
js
pop
insl
in
mov
ja
adc
pushf
mov
pop
xor
or
sub
cld
pop
jle
repnz
xor
sub
jb
inc
rcrb
mov
inc
inc
ret
inc
jg
mov
test
testl
inc
stc
or
pop
mov
xchg
inc
add
jle
lret
push
mov
xor
xchg
stc
mov
xchg
fwait
rorb
push
js
test
jne
xchg
xchg
xor
and
rorl
inc
enter
push
xor
sub
and
push
xchg
mov
or
cmp
bound
stos
test
js
lods
in
pop
pop
and
lods
in
push
push
pop
and
push
mov
mov
adc
push
dec
dec
xlat
jb
add
repz
jnp,pn
or
and
jge
in
mov
push
mov
popl
mov
imul
iret
xlat
push
sbb
leave
dec
divb
mov
rorl
mov
in
roll
mov
test
xlat
push
mov
cmp
das
adc
lret
rorl
mov
inc
mov
movsl
sbb
ss
movsb
push
decl
je
shrb
pop
jle
mov
dec
push
bound
mov
mov
cmpb
mov
movsb
jne
cmpsl
sbb
test
das
mov
subb
test
fwait
mov
sub
xchg
fadds
add
das
inc
sub
sub
cmp
jne
jnp
mov
sbb
test
pop
xor
movsl
and
mov
aas
mov
shlb
cmp
hlt
popa
mov
pusha
sub
hlt
dec
int
push
daa
jl
lcall
insb
pop
fcomi
adc
mov
push
xchg
add
mov
inc
in
movsl
cmpsl
sub
in
mov
mov
sbb
nop
in
mov
mov
popf
test
loop
adc
call
dec
sbb
and
xchg
inc
js
out
inc
lret
xchg
mov
test
push
popf
jns
dec
in
cld
xchg
dec
jle
jge
loope
and
xchg
clc
push
add
ss
mov
idivb
mov
fldenv
fldcw
loopne
movsb
outsb
inc
inc
lret
hlt
push
mov
sahf
dec
dec
add
pop
shll
xchg
mov
mov
mov
ss
in
mov
fcomps
inc
popa
icebp
sbb
sub
sub
mov
sarb
shll
or
aad
leave
adc
xor
lock
ja
bound
loope
sbb
jl
das
int
les
cld
push
int
fiadds
icebp
add
xor
mov
stc
add
push
xchg
sbb
inc
jno
insl
movsl
sub
adc
pop
xor
pop
jmp
adc
dec
mov
cmp
and
add
jae
and
and
dec
stos
xchg
mov
fwait
aaa
int
mov
ud0
loope
adc
cmc
popa
lock
add
push
pop
dec
movsl
inc
sub
mov
fdiv
mov
ljmp
test
cltd
cmp
popa
movsl
sub
iret
and
sub
lds
clc
int
pushf
andl
pusha
or
xor
or
shlb
inc
lret
sub
pop
mov
call
hlt
sub
into
add
mov
and
sub
lds
sub
jb
call
ret
sbb
push
and
rorl
mov
push
mov
rcll
dec
icebp
push
pop
mov
cmp
ret
xchg
pop
les
imul
adc
fidivl
imul
flds
inc
jne
xlat
insl
and
add
ret
xlat
sbb
and
lahf
jge
and
sbb
dec
mov
imul
jg
or
cs
sar
addr16
lock
mov
and
adc
mov
xor
stos
shl
ljmp
movsb
fisttpl
rorb
stc
xor
sbb
xchg
int
mov
cltd
in
adc
jge
sbb
jp
xlat
test
mov
ret
xchg
mov
push
movsb
xchg
xchg
subl
daa
jae
fwait
mov
je
sub
sbb
push
sub
ds
mov
cmp
push
rolb
cmp
pop
lods
data16
inc
addr16
repnz
xchg
push
pop
xchg
repnz
and
pop
pushf
sti
cs
and
cld
mov
je
dec
gs
outsb
in
ret
daa
xor
jg
pop
mov
add
pop
js
inc
and
es
testl
mov
lea
and
call
cmp
push
pusha
mov
pop
mull
mov
and
in
hlt
pop
lahf
and
pop
popa
mov
bound
jno
fsts
mov
or
jecxz
sub
mov
sbb
pop
inc
mov
jo
add
imul
inc
pop
mov
lds
jb
sbb
clc
shll
add
push
add
inc
ss
loopne
and
push
cmpsl
movhps
dec
cmp
sbb
lahf
hlt
outsb
mov
popa
push
outsl
jne
dec
push
lds
leave
mov
cli
cmp
ret
test
notl
and
rorl
add
adc
jnp
adcl
out
je
nop
push
sti
or
jne
inc
xlat
jp
xor
in
xchg
mov
lods
xchg
inc
call
dec
frstor
push
sub
mov
xchg
sbb
adc
push
in
imul
jl
movsl
inc
outsb
mov
inc
nop
in
inc
sbb
imul
clc
sbb
lcall
cli
cs
int3
push
iret
pop
jbe
addb
loope
add
jp
or
hlt
fsubp
es
inc
xchg
sbbb
xor
xchg
jmp
std
jo
cmpsl
data16
int3
test
push
adc
cmp
sub
or
lods
jae
jp
adc
lds
jl
adc
mov
cmp
add
mov
ja
add
ljmp
lds
add
cmpsl
mov
mov
outsl
neg
xchg
roll
hlt
jns
push
cmp
gs
cwtl
cmpsb
aaa
push
push
jecxz
fimuls
cmpsl
xorb
jge
addb
xchg
test
dec
ss
xor
sbb
aam
mov
add
mov
or
inc
repnz
cmp
sub
add
pop
mov
mov
in
push
mov
jae
addl
rcll
and
aaa
gs
sub
gs
repz
or
popa
or
and
clc
and
call
xchg
call
push
and
imul
adc
hlt
xchg
aaa
xchg
stos
jno
sarl
dec
jmp
std
jge
or
repz
lock
lock
dec
mov
pop
ret
ja
pop
or
les
andb
inc
adc
js
aad
jmp
or
push
ja
sar
pmaddwd
or
nop
int
push
mov
mov
push
mov
mov
xchg
mov
jb
dec
and
dec
out
push
loope
adc
sbb
adc
xor
adc
sub
gs
push
jbe
test
and
gs
idivb
das
mov
daa
mov
cmpsb
in
imul
pop
mov
into
frstor
adc
jbe
jle
add
je
stos
shrl
sbb
sbb
scas
ret
mov
dec
ret
push
sub
loope
ret
in
ja
jle
xchg
xchg
inc
jl
icebp
xor
pop
ret
dec
sub
jle
jmp
xchg
mov
xor
ret
xchg
sub
lea
mov
into
pop
ret
dec
jge
addr16
jmp
mov
ljmp
mov
mov
fcoms
xchg
je
xor
xchg
push
cmp
imul
adc
push
cli
sub
rcll
jno
aad
cmc
jp
dec
addb
mov
ljmp
mov
rcll
sbb
popf
cmc
in
fidivl
jno
add
or
mov
loopew
xor
xor
ret
pop
in
gs
addr16
andl
imul
std
xlat
in
or
ljmp
gs
jg
inc
sub
add
sub
dec
dec
lods
mov
popf
in
and
xor
jmp
aaa
sub
insb
pop
ret
addb
fisubrs
clc
dec
movsb
push
hlt
arpl
gs
adc
pusha
inc
cs
enter
jno
les
push
out
cmc
jae
fdivs
aad
in
cs
sub
sub
ret
sti
outsl
shl
mov
mov
aaa
scas
adc
imul
sbb
das
xor
push
mov
cs
jmp
ret
push
pop
fadds
in
into
loope
neg
xchg
sub
cmc
aaa
call
loopne
imul
push
ret
xor
ret
adc
inc
adc
mov
or
fimuls
bound
aas
andl
xchg
ficomps
pop
insl
mov
or
cmp
sbb
fmul
out
loopne
int
pop
ret
mov
pop
fisttpl
jae
lcall
aad
in
cs
xor
push
xor
adc
add
sbb
fsubs
test
jbe
jae
cs
and
ret
pop
jg
hlt
fimuls
addr16
sub
push
cmp
adc
jo
lcall
insl
int
ret
mov
mov
popa
jae
fdivrl
cmc
aaa
pop
adc
inc
cwtl
clc
jne
mov
bound
in
dec
sub
jge
pop
push
sub
loopne
out
and
add
xor
fisubrs
xchg
jge
mov
sub
imul
jne
xor
pop
or
loope
ds
mov
mov
cmpsl
stos
popf
in
dec
insl
lahf
aad
dec
cmp
cmp
addb
pop
cmp
push
lret
in
mov
add
in
sub
in
ds
fidivrl
dec
xchg
bound
frstor
xchg
aaa
cmpsl
cmp
jae
cmpsl
subl
cmpsl
sbb
push
ljmp
mov
mov
cmpsl
or
jg
loopne
in
jl
pop
mov
adc
pop
int
stos
push
mov
fisttps
imul
ret
push
xor
jns
gs
sub
sub
and
add
push
lret
push
loopne
aad
je
call
inc
and
enter
loop
imul
insl
daa
fisubs
sub
cmpsb
and
pop
cli
mov
pop
inc
jbe
mov
add
rcrl
dec
add
scas
mov
jl
push
mov
sbb
mov
fisttps
add
ret
lods
fldl
lahf
ret
push
mov
out
adc
stos
lock
notl
lods
lea
dec
push
jp
scas
push
std
aas
sti
or
in
ds
xchg
add
mov
inc
sahf
hlt
pop
xchg
out
daa
test
aas
dec
mov
mov
notb
add
sbb
cwtl
inc
xchg
and
fsubr
js
lret
out
lods
test
mov
push
sub
leave
mov
enter
testb
stos
add
hlt
cwtl
and
push
sub
inc
stos
sub
sub
inc
inc
ljmp
jo
mov
add
fiadds
in
xor
out
xlat
test
cmp
push
adc
repnz
jno
sbb
testb
enter
xor
xor
pop
or
bound
sub
movsb
mov
adc
mov
cmpsl
push
pushf
bound
repz
cmp
pushf
call
fadd
mov
or
adc
int3
mov
mov
xchg
cli
ror
dec
pop
dec
rolb
push
mov
cwtl
fnsave
and
ja
adc
in
outsl
xor
out
cmpsl
in
add
mov
mov
adc
sub
pop
fildll
in
sub
xor
das
jl
cli
mov
insb
pop
inc
test
imul
mov
xchg
mov
mov
mov
in
add
inc
aad
shrb
daa
in
stc
push
sbb
insl
das
sub
dec
sub
sbb
add
dec
mov
xchg
fwait
pop
pop
and
stos
ljmp
movsl
lcall
test
rcll
adc
aad
xchg
es
push
test
xchg
push
or
fcom
cmpsl
popa
test
pop
adc
xchg
xchg
jno
das
push
push
out
aad
test
fs
xchg
sub
enter
xchg
out
inc
inc
loop
xor
rcll
and
push
loope
loopne
stos
inc
push
dec
gs
das
or
lahf
hlt
mov
mov
cmpsl
jne
gs
push
push
sub
insl
mov
movsl
call
popa
filds
xlat
push
idivb
hlt
divl
ret
rcrl
xchg
enter
jne
xchg
je
or
cli
jne
mov
or
lahf
mov
das
xorb
jmp
xor
sahf
dec
xor
jae
aaa
pop
movsl
pop
js
sbb
aad
fistps
xchg
lds
ret
xchg
sub
into
xchg
mov
cmpsb
mov
jl
mov
fildl
sub
push
dec
cmp
out
nop
mov
and
mov
fcoms
scas
jmp
nop
inc
push
jne
dec
mov
sub
push
xchg
aam
rorl
and
aad
lds
std
push
xor
or
pop
jle
movb
test
or
lea
xchg
mov
arpl
mov
out
shl
mov
cs
in
add
stos
subb
pop
sahf
fsubs
inc
cltd
addr16
and
jbe
push
pop
dec
ret
notb
or
jnp
inc
mov
add
repz
or
jge
rcl
jmp
pop
push
pop
dec
sahf
fldcw
in
scas
push
xor
pop
push
cwtl
and
pop
out
mov
int3
movsl
scas
push
push
ja
mov
rcl
inc
call
push
xor
movsl
imul
mov
ja
sub
daa
cmp
and
push
rcll
loop
xchg
scas
adc
call
out
pop
add
sub
push
mov
pop
mov
test
or
cmp
mov
push
inc
cmp
in
dec
call
cmpsb
lds
repz
fldcw
or
or
xorl
and
cwtl
out
mov
out
sti
rcrl
mov
and
ja
add
in
addr16
and
pop
or
push
test
and
addr16
push
fldenv
dec
xor
shr
repnz
das
mov
jp
and
fcmovnb
push
stos
aas
mov
pusha
jl
in
sahf
popa
and
es
and
sbb
xor
xor
in
mov
push
pushf
int
pop
push
mov
push
cmp
mov
fsubrl
rdpmc
movsb
cmc
rclb
aad
addl
jne
in
push
cmc
mov
mov
and
addr16
jmp
push
aad
xlat
pop
movsl
mov
les
fldenv
jae
addr16
ja
sbb
ror
hlt
pop
shrl
sbb
stos
jg
bound
test
sub
push
hlt
lahf
enter
xor
addr16
jp
mov
daa
fsubl
jo
loop
ret
push
pusha
mov
gs
cmc
lcall
xor
rcll
xlat
mov
jbe
fwait
test
cltd
sub
enter
fwait
mov
je
in
inc
ljmp
adc
push
sub
adc
sbb
out
testl
add
dec
push
sub
roll
xor
ja
lds
jge
test
addr16
sub
hlt
pop
cli
cmp
sbb
xchg
or
mov
fstl
int
xchg
and
xchg
inc
repnz
fistl
jno
push
int
test
test
stc
and
stc
aaa
sub
fstps
pusha
repz
pop
in
mov
inc
mov
aam
xchg
cmc
jae
push
pop
in
add
or
dec
mov
addl
push
fidivs
aam
jae
fists
mov
in
popl
nop
mull
loop
mov
jl,pt
stos
into
test
push
jmp
xchg
inc
jg
into
and
push
into
fbstp
sarl
stos
dec
les
movsb
push
in
mov
stos
mov
sub
xchg
pop
xchg
cmpsl
aaa
cld
jne
and
loopne
popa
outsb
dec
dec
lcall
push
rorb
movsb
popa
mov
js
sub
add
sub
jns
push
jp
sti
divl
filds
js
loope
add
inc
push
rcl
shll
mov
lods
adc
jae
pop
out
popa
mov
mov
lret
mov
in
imull
xchg
pop
pop
cltd
push
xor
dec
sub
cmpsl
imulb
das
mov
and
test
sbb
dec
call
outsl
xchg
filds
inc
in
test
mov
mov
or
jge
xor
cmpsb
and
rorl
call
bound
popa
xchg
dec
imul
and
mov
xlat
loop
ljmp
call
pop
test
sub
pop
and
push
gs
out
ret
jle
cmp
inc
cmpsl
mov
scas
cmpsl
dec
mov
cld
daa
push
jle
mov
stos
ds
mov
stos
sub
hlt
rcrb
cmp
or
fnstenv
xchg
enter
sahf
ret
and
movsb
out
imul
mov
pop
xor
hlt
das
cli
sub
jecxz
add
pop
add
mov
rcrb
mov
or
test
sub
daa
add
xlat
in
sbb
push
jb
and
sub
gs
sub
sub
sub
int3
xchg
repnz
ljmp
insl
scas
imul
adc
sub
adcl
pop
xor
or
add
addb
mov
scas
mov
push
push
ret
cmc
rcrl
and
addb
jmp
inc
add
add
mov
insb
jo
fstpl
mov
push
dec
loopne
incl
int
pop
xor
xchg
mov
jl
cmpsl
add
in
ja
fldt
in
mull
push
cmp
xor
stc
jns
dec
sub
sahf
xlat
neg
push
inc
cltd
jns
test
xlat
stos
jg
hlt
and
push
mov
insl
adc
ss
or
imul
addr16
xchg
daa
andl
hlt
and
in
pop
testl
mov
pusha
lods
push
sbb
lods
mov
sub
aas
push
or
sbb
xor
or
and
xlat
fadds
mov
xlat
das
out
clc
dec
push
inc
fsubrp
mov
aad
lahf
dec
cmc
push
out
sbb
cmp
outsl
imul
daa
cld
mov
lock
adc
fildll
inc
inc
xchg
push
loope
ret
movsl
negb
imull
icebp
or
adc
ret
rcrl
ret
daa
mov
decb
sub
fsubs
dec
mov
pop
cmp
mov
jecxz
adc
div
jbe
or
pushf
fstpt
push
mov
movsl
and
inc
jbe
mov
fnsave
inc
inc
jnp
out
pop
scas
ss
add
inc
mov
push
fcompl
xor
mov
xchg
repz
xor
test
push
sbb
orl
and
mov
vmovntps
int3
into
pop
xor
mov
pop
xchg
mov
insb
gs
adc
insl
mov
pop
jle
sbb
inc
int3
cli
mov
pop
add
jl
insb
or
lds
sub
xchg
daa
ret
outsb
pop
out
push
test
adc
push
mov
popa
ss
fsub
mov
stos
sbb
dec
pop
sub
mov
fwait
mov
enter
pop
dec
int3
xchg
out
test
popa
pusha
cmc
ja
mov
addr16
icebp
call
sarb
pop
cmp
mov
lea
shll
daa
push
xor
and
sub
in
push
jns
jo
or
jno
push
rolb
mov
je
lahf
cmpl
push
adc
sbb
add
push
sahf
fucomi
out
or
adc
xor
or
jo
in
loop
gs
adc
inc
sub
in
inc
adc
test
or
rcl
mov
push
aam
xchg
push
int
xchg
sub
push
insb
das
jo
loop
popa
push
addr16
mov
mov
adc
cmovp
aas
enter
in
sti
push
sti
icebp
js
lods
jb
insl
in
test
or
loop
mov
jno
outsb
pop
lods
inc
push
aad
cwtl
dec
daa
xchg
bound
xchg
jle
in
mov
or
loop
subl
cmpsb
xchg
lods
fxam
lock
fcoms
out
jno
mov
stos
or
loop
shrl
lods
inc
cs
cwtl
dec
daa
xchg
add
xchg
jle
in
mov
or
loop
and
jno
outsb
pop
movsl
inc
jle
cmpsb
mov
adc
lock
push
lea
repz
scas
inc
adc
mov
dec
daa
lods
gs
scas
jle
in
xchg
fdivs
aad
or
loop
push
sub
cmpsl
inc
adc
test
dec
daa
movsl
gs
mov
push
xchg
jb
sti
aad
addr16
inc
stos
mov
popa
scas
in
insl
mov
aad
lods
inc
mov
scas
stos
and
or
loope
mov
in
insl
test
aad
movsl
inc
outsb
aad
shl
div
sub
sti
aad
and
mov
popa
scas
in
insl
mov
aad
lods
inc
inc
aaa
scas
stos
and
or
rolb
mov
popa
cmpsl
in
insl
test
aad
movsl
inc
xor
cmpsb
push
shl
div
sub
sti
aad
addr16
stos
mov
popa
scas
in
insl
mov
aad
lods
inc
shll
stos
and
or
into
inc
mov
in
insl
test
aad
movsl
inc
ret
aad
data16
div
sub
sti
aad
addr16
inc
stos
mov
popa
scas
in
insl
mov
aad
lods
inc
jecxz
scas
stos
and
or
testl
in
insl
test
aad
movsl
inc
jae
cmpsb
jbe
in
lock
sti
aad
addr16
inc
stos
mov
popa
scas
in
insl
mov
aad
lods
inc
shll
scas
stos
and
or
addb
sub
cmpsl
out
aam
testb
xorl
or
pop
into
pop
mov
shl
rcl
adc
sub
not
fcoms
clc
sub
cmc
rcl
and
rcr
and
rcr
and
shl
and
jnp
pop
dec
jl
pop
dec
jns
pop
dec
jp
pop
dec
jg
pusha
dec
orb
jge
pop
dec
jle
inc
dec
arpl
dec
fs
push
dec
jno
push
dec
jb
push
dec
ja
pop
dec
js
push
movsl
jne
in
xchg
push
out
repnz
xlat
out
imul
fsubr
clc
out
aad
cmc
out
jo
jo
jo
jo
jo
jo
jo
jo
test
loopne
add
fisubs
jecxz
xchg
in
mulb
lods
cmc
push
stos
cmc
scas
push
mov
inc
lods
rcll
test
movsl
cmpsb
cmpsb
push
xchg
stos
ret
test
xchg
push
push
jbe
pop
push
jnp
pop
push
jl
pop
shll
shll
outsb
or
notb
mov
mov
lods
ret
mov
xchg
idivl
imul
push
cwtl
mov
call
scas
sbb
sub
imul
dec
dec
pop
push
idivb
mov
icebp
pop
jmp
in
roll
or
in
jnp
xorb
push
jns
ds
xchg
call
repnz
ja
push
cmpsb
dec
test
pop
lock
mov
jbe
add
icebp
add
and
add
add
inc
fadds
xorl
in
incb
cmp
xor
movsl
adc
test
xor
mov
push
lret
outsb
jnp
push
fcmove
sbb
fcomps
fs
dec
push
and
ja
adc
dec
add
int3
xor
gs
lret
add
addr16
push
jae
mov
pop
lds
inc
arpl
lea
dec
int3
andb
aam
call
scas
or
jno
jb
movsb
add
sub
cmovne
dec
stos
call
xchg
jle
popa
add
jge
and
pushl
cs
cld
and
shrb
push
and
jnp
inc
cs
xor
mov
out
addr16
movsl
decb
sbb
scas
shll
push
test
movsl
sub
insl
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
js
or
inc
neg
scas
mov
dec
movb
outsb
mov
js
or
inc
neg
scas
mov
js
or
push
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
inc
pop
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
js
or
inc
neg
scas
mov
dec
inc
mov
adc
aas
cmp
roll
and
dec
or
out
dec
movsb
iret
jp
rol
out
movsb
insl
sub
aad
sub
aaa
das
stos
and
fisubs
gs
fcoml
adc
shrb
mov
test
pop
and
aad
cwtl
dec
ja
dec
push
jecxz
fwait
jb
jo
es
sub
xor
sub
loop
jno
and
sub
xor
aad
cwtl
dec
daa
cs
adc
in
adc
add
and
hlt
and
cmp
mov
popa
sub
icebp
add
stos
sub
in
push
adc
sub
shl
cmpsl
lock
jno
outsb
pop
sub
aad
cwtl
dec
daa
xor
and
fmul
aad
or
loop
jae
jno
outsb
pop
and
aad
cwtl
dec
daa
sub
icebp
fisttps
hlt
es
sub
clc
and
sub
sub
aad
cwtl
dec
daa
xor
and
fdivs
adc
sub
and
aad
cwtl
dec
daa
sub
icebp
fisttps
mull
pop
jnp
dec
xor
in
in
addr16
sub
aad
sub
aaa
das
stos
and
ficoms
gs
and
sub
in
mov
fidivs
gs
or
push
ja
sti
xlat
dec
es
cmp
mov
lock
addr16
cwtl
dec
pop
sub
and
stos
cmp
sub
fmuls
adc
loop
shrb
and
aad
cwtl
dec
daa
sub
icebp
fisttps
pop
es
outsb
sub
addr16
mov
popa
sub
jb
das
sti
aad
xor
aaa
sub
andb
fisttpl
and
sub
daa
outsb
pop
sub
cmp
es
imulb
lods
fxam
lock
inc
sub
adc
sti
aad
xor
aaa
sub
jecxz
xchg
sub
rcl
repnz
sub
fcom
clc
adc
sub
shl
and
sar
and
sar
and
rolb
and
addl
sub
sub
jg
pusha
sub
jge
pop
sub
arpl
push
sub
jb
push
sub
js
push
sbb
rcrl
jnp
pop
jl
sub
dec
cmc
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repnz
cmpsb
fcoms
jnp
jnp
jnp
jnp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
and
push
inc
inc
adc
movsl
xlat
cmpsb
add
in
jb
nop
sub
xor
ret
and
test
shrl
in
dec
xlat
and
jbe
stc
cld
mov
imul
mov
and
testl
and
iret
rcrb
inc
or
cli
in
into
stos
fdivs
aas
outsl
adc
add
mov
adc
dec
ret
push
cwtl
imul
in
pop
jg
in
sub
mov
imulb
xor
sbb
xchg
jbe
gs
iret
xor
adc
jae
sub
ss
pop
dec
adc
push
mov
out
or
vpmulhuw
loope
mov
dec
and
jmp
mov
adc
or
in
test
mov
sub
stos
mov
xlat
cmc
pop
add
xchg
push
and
jae
push
jne
or
push
cmc
das
and
jmp
xchg
sub
jmp
xchg
fsubs
addr16
fcoml
add
in
inc
add
in
sub
inc
sub
in
jnp
into
cmp
sub
insl
push
das
cmpsl
call
mov
dec
arpl
gs
add
mov
lret
sub
insl
mov
inc
push
fldcw
daa
cmp
mov
sub
mov
mov
mov
rcll
mov
jp
push
inc
push
leave
testb
adc
adc
and
pop
daa
dec
sub
and
das
hlt
inc
push
js
or
inc
neg
scas
mov
js
or
inc
neg
inc
cmpsb
pop
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
js
or
inc
neg
scas
mov
dec
movb
outsb
mov
js
or
inc
neg
scas
mov
js
or
push
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
inc
pop
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
js
in
jo
push
test
xchg
push
mov
sarl
xchg
jns
cli
xorb
sub
push
jnp
jne
mov
dec
mov
pushf
xchg
vandnps
or
in
push
push
cli
in
and
or
sti
mov
arpl
cmc
pop
push
arpl
enter
scas
or
movsl
fwait
cmp
rorl
movsb
push
nop
insb
sub
nop
jg
push
jg
adc
push
in
insl
sub
adc
xor
push
jo
sbb
mov
adc
pop
stos
int3
xor
jnp
ss
mov
loop
dec
call
inc
test
mov
fimuls
and
faddl
cli
lea
cs
out
mov
icebp
jmp
adc
dec
push
inc
test
push
mov
sarl
dec
into
add
aad
insb
jbe
mov
repz
test
inc
and
inc
cwtl
cwtl
push
add
xchg
ret
or
fisubl
push
inc
movsl
clc
sbb
inc
jge
push
movsl
mov
mov
push
xor
bound
imul
dec
add
jecxz
arpl
jmp
cmp
xor
inc
in
outsb
mov
rcl
aad
loope
sahf
and
outsb
fdivs
mov
push
jns
les
mov
mov
outsb
lods
test
dec
imul
mov
inc
in
sub
jg
jl
lret
jb
mov
lods
jne
xor
xchg
shl
adc
cmc
mov
aaa
aaa
fwait
jecxz
push
popa
lods
or
enter
sti
adc
sti
rep
dec
xchg
insb
test
rcpps
sbb
ljmp
inc
daa
mov
int
sub
sbb
pop
pop
push
int
neg
push
mov
dec
int
xor
cmp
or
mov
mov
mov
out
rcrb
movsb
leave
adc
call
cmpsl
pop
loope
adc
sbb
pop
das
ss
jb
lret
inc
push
mov
pop
mov
ds
push
mov
pop
sub
arpl
in
adc
addr16
sbb
sbb
rcr
jp
mov
std
push
test
out
sub
daa
popa
jne
inc
cmpsl
mov
icebp
push
lods
jmp
mov
dec
test
cli
outsl
mov
lds
popf
lret
lods
pusha
shrb
xor
ljmp
shrl
mov
dec
push
push
jne
test
push
sub
dec
mov
jne
mov
mov
mov
xchg
vcvttps2dq
jg
xchg
sub
fdivs
pop
adc
inc
push
mov
imulb
inc
add
or
sub
int3
pop
mov
jg
mov
or
sbb
aaa
es
cmpsl
popa
test
push
int
adc
stos
dec
push
out
negl
sub
ds
jb
shlb
testl
and
bound
rcl
nop
rep
int3
in
sti
popf
in
dec
incl
mov
adc
sub
mov
adc
jle
shrl
jbe
sub
mov
test
xor
push
int3
sbb
dec
in
pop
mov
inc
push
mov
insl
jo
xor
mov
fisubrs
push
jno
into
daa
aas
mov
leave
mov
inc
sbb
or
mov
jg
push
sub
and
loop
movsl
sub
and
mov
push
test
movsl
ja
rcll
idivb
in
icebp
push
inc
lret
dec
daa
sub
push
movsl
jmp
stos
and
pushf
mov
out
sbb
push
in
or
imul
dec
mov
movsl
leave
loopne
jae
add
inc
mov
fs
pop
xchg
incl
loopne
inc
adc
xor
aas
lcall
push
pushf
push
movb
pusha
pop
push
add
std
test
and
gs
in
lahf
sarl
ja
cmp
adc
cs
enter
popf
xchg
dec
pop
fstps
sub
inc
lret
shlb
stos
pushf
jg
or
inc
ret
daa
or
stos
imul
lret
sbb
int
push
and
addr16
dec
pusha
mov
add
add
dec
add
inc
js
mov
add
iret
popf
xchg
jg
push
out
sbb
scas
mov
mov
clc
xchg
jbe
cltd
sbb
sbb
addr16
iret
push
xor
sub
lcall
out
adc
pop
test
call
es
add
mov
loope
and
mov
sub
sub
cs
in
or
arpl
cmc
sbb
pop
xor
or
subl
lret
test
loope
mov
xor
mov
push
push
test
cmpsb
sub
int3
mov
loop
ret
aaa
sub
mov
add
rolb
loop
sub
pmulhw
sub
enter
loop
orl
pop
lret
loop
neg
cs
mov
adc
pop
add
push
loop
or
bound
pop
pop
push
adc
popa
stos
call
mov
mov
lock
sub
iret
adcl
dec
gs
xorl
add
sub
in
imul
add
daa
xor
mov
js
mov
outsl
or
test
cmpsl
lea
ret
adc
mov
in
inc
das
cmpsl
inc
adc
mov
push
test
dec
add
mov
mov
popa
jae
adc
int3
out
cld
gs
lock
rcrl
push
cwtl
pusha
or
out
xchg
cmpsl
cmpsb
cmc
ficompl
xor
aaa
push
js
jle
add
sub
jae
fiadds
adc
mov
xor
xor
sub
ret
xor
mov
jmp
dec
xor
test
xchg
movsl
pop
add
int
movsl
adc
aaa
sbb
shll
push
mov
cltd
and
dec
fidivrs
js
pop
cld
or
imul
decb
mov
push
imul
into
inc
xchg
testb
and
aad
es
dec
sbb
pop
aad
xchg
sub
push
xchg
imul
inc
xor
inc
mov
push
or
push
imul
sbb
pop
outsl
shrb
lret
xor
enter
ret
mov
push
mov
mov
imul
cmp
sbb
movsb
cld
int
vmulsd
repz
loop
cmpsl
fmull
clc
gs
movsl
and
xchg
xchg
imul
mov
shl
dec
xchg
mov
push
loop
bound
stos
dec
pop
loope,pn
fdivr
stos
mov
in
lock
lock
and
ja
aaa
insl
popa
loopw,pn
mov
mov
out
daa
cs
and
xor
inc
das
mov
in
imul
mov
jge
test
xor
in
mov
outsl
popf
lds
lods
jge
movsl
add
cmp
cmc
faddl
push
movsl
movsl
mov
fsubs
jmp
out
xchg
inc
push
fnsave
dec
pusha
cwtl
or
movsl
stc
push
push
add
je
lcall
andb
divb
push
lret
xor
dec
push
adc
in
xchg
neg
ficomps
mov
stos
dec
mov
cmpsl
xor
loop
xor
scas
sarb
sub
adc
movsl
mulb
sub
xchg
and
aam
xor
add
call
mov
pop
inc
outsl
pushf
sbb
shlb
imul
jle
lods
rcrl
out
mov
ja
cmp
idiv
push
std
lds
lcall
add
loope
xchg
sbb
pop
gs
push
sbb
adc
sub
test
sub
adc
jmp
or
add
aad
aas
ja
add
mov
fwait
and
inc
pop
js
js
push
inc
add
push
xchg
fcoms
and
in
sbb
stos
dec
in
std
in
jge
sbb
addl
jne
inc
lcall
sub
push
xchg
xchg
sbb
pop
sub
xor
sub
inc
scas
xchg
jg
in
int
jbe
mov
rol
mov
xor
inc
stc
dec
dec
jb
push
outsl
lods
sub
clc
jbe
and
mov
inc
xor
xor
loopne
xor
push
cmp
lods
test
xchg
push
jge
in
or
cli
sbb
loope
test
icebp
cmp
vpcmpgtd
in
and
std
inc
or
insl
add
or
or
in
xor
add
in
fstpl
mov
subl
fdivrs
xchg
jno
fidivs
push
inc
scas
out
dec
fidivs
fadds
sbb
aad
mov
adc
inc
fcomps
jbe
test
mov
adc
jmp
fs
mov
insl
or
and
fstpt
test
fadds
inc
and
mov
push
jno
mov
mov
jg
aad
push
test
test
insl
stos
pop
test
push
mov
test
enter
mov
jne
pop
jmp
aaa
xchg
insl
push
jne
aaa
pop
jne
rolb
test
sbbl
je
jne
rcr
jne
dec
cmp
pop
xchg
jne
lods
xor
decl
in
gs
push
cmp
call
and
pop
gs
pop
shll
mov
inc
pop
adc
in
gs
fnstsw
sub
push
insl
test
pop
out
sub
jmp
dec
sub
add
push
nop
pop
mov
push
add
jae
xchg
cltd
jae
clc
mov
pop
push
scas
lods
jg
in
lock
fdivs
lds
dec
lods
push
or
dec
pop
loopne
and
fdivr
roll
sbb
cwtl
xlat
cmp
dec
inc
sub
xchg
fsubrs
sbb
aas
insl
ficoml
fisttpll
or
test
cld
mov
mov
xchg
fdivr
push
les
xchg
aas
in
sbb
inc
mov
or
hlt
mov
push
pop
gs
and
push
popf
orb
out
xchg
xor
fsubrs
and
fcoms
shll
sbb
dec
mov
or
jg
outsb
enter
xchg
outsl
sub
xor
sbb
fsubrs
adc
iret
fsubs
ja
data16
xchg
dec
mov
mov
and
mov
addr16
jl
inc
pop
mov
scas
inc
mov
sbb
mov
sbb
xchg
xor
bound
push
mov
add
testb
cmpsl
in
mov
mov
inc
clc
hlt
sub
xor
push
shll
ja
adc
ljmp
push
loope
adc
adc
daa
push
ja
mov
in
sti
int
fmuls
mov
add
cmp
jae
pop
adc
xchg
test
xchg
and
push
mov
call
mov
stos
sub
mull
fisubs
arpl
cli
stos
mov
adc
enter
subb
imul
in
adc
sbb
ja
xchg
mov
aam
cwtl
sbb
inc
and
adc
data16
daa
pop
or
mov
or
cmpsb
jbe
int
sub
push
gs
int3
adc
daa
mov
add
mov
jp
and
dec
sub
orb
dec
and
inc
ret
hlt
jmp
cltd
pop
push
pop
gs
int3
xor
sub
push
fs
mov
cmpb
and
push
cmp
sbb
in
adc
imul
or
xor
adc
xchg
sub
and
fnstcw
or
popf
shlb
ret
sbb
out
push
jbe
adc
jbe
inc
mov
dec
jmp
push
pop
inc
adc
or
mov
xchg
call
jmp
mov
adc
sbb
or
mov
inc
inc
ret
test
imul
push
mov
inc
mov
mov
pop
push
aas
cltd
pop
cwtl
sub
imul
lods
fisubrl
fldl
jmp
xchg
or
xor
adc
lret
pop
enter
pop
lcall
push
or
inc
pop
adc
js
adc
outsb
lods
mov
jno
fsub
or
push
mov
pop
jne
cs
adc
clc
in
std
mov
push
jnp
cs
adc
dec
gs
lcall
inc
sahf
fstpl
mov
mov
aaa
lods
mov
cmp
xor
add
subb
mov
ret
mov
mov
fldenv
fs
mov
adc
lods
mov
nop
mov
or
fs
mov
jne
xchg
jae
cmc
xchg
mov
xlat
rcrb
cmc
adcl
mov
jne
fadds
pop
nop
mov
ss
repz
les
in
into
mov
sub
dec
mov
add
call
loop
call
add
adc
scas
mov
ret
inc
push
sti
std
cmpsl
inc
daa
mov
ja
lock
orb
or
or
cmp
insl
mov
and
incb
stos
decl
xchg
aaa
and
divl
roll
mov
fwait
out
daa
test
jle
clc
xor
cmp
mov
dec
sbb
vpsubusb
stc
mov
adc
test
cmp
in
test
loop
fcoms
xchg
pop
cmpsb
test
movsb
inc
xchg
jnp
jne
gs
inc
or
int3
test
jnp
loop
and
xchg
and
or
inc
addr16
jnp
and
movsb
push
adc
orl
insl
dec
inc
shll
jno
push
lea
add
ds
lods
push
mov
cmp
pop
jb
clc
push
in
and
xor
xor
lods
xor
mov
mov
mov
stc
pop
test
xor
sub
faddl
add
test
cmpsl
push
sbb
repnz
call
stos
std
lods
aad
mov
in
filds
vminpd
mov
pushf
or
adc
dec
xorb
inc
and
imul
dec
mov
enter
inc
sub
pop
test
adc
xchg
test
aad
adc
mov
mov
int
jbe
cmp
xchg
lahf
mov
push
roll
push
push
pop
xlat
popa
sahf
loop
mov
movsb
xchg
andb
mov
mov
iret
push
hlt
into
data16
in
in
jo
mov
jecxz
xchg
dec
dec
outsb
addr16
add
inc
in
scas
inc
bound
addb
or
jne
cmp
aaa
sar
mov
ja
gs
sbb
cltd
inc
fisttpll
sub
sub
fsubrs
inc
cmp
push
dec
dec
sbb
popa
adc
mov
lds
fxam
or
lea
or
jmp
mov
iret
push
xchg
sti
ljmp
int
mov
loope
subb
test
dec
mov
movl
orl
int
add
add
inc
sub
inc
repnz
xchg
movsl
or
inc
aaa
aam
es
enter
mov
leave
fadd
lds
imul
inc
xchg
jg
xchg
loopne
imul
negl
mov
or
in
je
mov
jge
xor
stos
ja
arpl
ja
xchg
imul
lahf
fdivr
test
outsl
nopw
lods
cmpb
pop
sbb
mov
xchg
test
adc
dec
push
mov
push
in
xchg
fisttpl
dec
into
incb
jecxz
ja
push
jecxz
lds
push
mov
int3
adc
enter
in
and
sbb
movsl
shl
loopne
mov
fbld
mov
mov
sbb
ss
cmp
or
cmp
cld
mov
stc
sbb
loopne
jmp
mov
jmp
mov
testl
dec
jmp
or
add
scas
push
rol
jle
cmp
xchg
hlt
pop
xchg
add
int3
ret
add
mov
mov
and
mov
and
mov
xchg
mov
add
mov
loope
add
add
or
inc
dec
ror
setae
test
mov
int3
push
mov
jp
aad
insl
xor
dec
jbe
pop
divb
enter
out
out
adc
add
fwait
and
mov
dec
insl
sbb
xor
lods
xchg
mov
ret
bound
lret
icebp
out
mov
sub
out
mov
push
in
aad
mov
outsb
push
cmc
in
xor
repnz
repnz
out
push
and
cmpsb
sahf
testl
nop
lds
fidivs
fcoms
rcll
std
in
in
insl
mov
sub
xchg
test
and
jb
pop
out
aad
pop
pop
sahf
pop
inc
shl
fwait
and
xchg
lcall
pusha
sti
push
clc
aad
fcoms
popa
ret
ljmp
std
in
iret
insl
add
clc
fsubrs
aad
push
cmp
scas
or
inc
loope
push
inc
adc
fs
mov
push
inc
popa
add
xlat
nop
adc
jp
xchg
clc
mov
mov
sub
loop
test
lcall
test
xchg
dec
mov
out
popa
cli
cs
les
ficoms
out
cwtl
mov
test
sbb
sbb
sahf
sbb
sub
arpl
adc
int3
mov
sahf
add
adc
jle
pop
mov
jg
push
sub
lock
pushf
mov
mov
mov
xor
and
in
push
dec
xlat
vpcmpeqb
cmp
imul
cmpsl
fmuls
leave
xchg
insl
mov
dec
scas
lock
in
mov
add
or
popa
add
cs
mov
mov
test
loop
and
lods
sub
adc
jmp
jmp
pop
lock
mov
dec
jnp
jbe,pt
sbb
gs
push
out
jne
pusha
fnstenv
test
mov
js
and
mov
jne
pop
mov
fists
in
adcb
mov
xor
mov
sbb
adc
sub
sahf
or
daa
pop
movsl
inc
stc
in
in
gs
xor
dec
sbb
cs
inc
adc
add
mov
sub
andb
mov
mov
add
repnz
shl
inc
dec
shlb
inc
sub
fadds
mov
in
mov
jg
pop
rcrl
iret
inc
push
xchg
xor
xchg
jb
and
cltd
call
aad
imul
push
arpl
jb
add
ss
pop
pop
mov
add
fisubl
pop
lret
push
jno
jecxz
push
bound
inc
xchg
or
inc
hlt
clc
outsl
cmp
call
lret
dec
jecxz
daa
in
push
sbb
sub
mov
push
mulb
test
push
inc
test
ja
sub
add
mov
adc
xchg
test
cmc
dec
sub
sahf
fs
hlt
or
jb
xchg
lahf
in
pop
xor
jns
adc
sbb
xor
sbb
or
loopne
pop
jmp
mov
mov
in
std
lcall
fnsave
ja
sahf
adc
jp
add
int
and
packuswb
outsb
jns
jmp
mov
daa
cli
ret
xchg
mov
adc
pop
in
push
pop
imul
cmpb
andb
insl
aam
cmp
inc
gs
pop
pop
lahf
or
pusha
jne
test
inc
or
orb
fadds
ficoms
stos
or
stos
fstps
out
test
pop
inc
mov
ds
xor
mov
jae
jno
push
out
repz
enter
push
add
cmp
iret
shll
or
cmp
mov
stos
insb
pop
int3
test
out
rep
fwait
aas
mov
popf
lahf
push
mov
add
cmpsl
xchg
testl
and
insl
fistl
popa
jne
in
insl
and
and
or
andb
gs
push
das
mov
iret
adc
mov
fcoms
push
ret
or
xor
rcr
in
enter
xchg
mov
xchg
out
stos
add
pusha
or
push
jmp
lock
xchg
imul
inc
adc
daa
mov
sti
push
hlt
outsb
rolb
inc
mov
and
fistps
sub
sbb
cwtl
mov
cmp
mov
cli
and
xor
lret
push
out
xchg
fcomps
aad
lcall
jp
shl
sub
xchg
pop
les
aam
mov
in
xchg
and
pop
adc
test
and
xchg
popf
push
enter
mov
jp
hlt
out
push
ja
push
call
xlat
mov
loop
fs
out
movb
movsl
jge
sub
in
lods
add
mov
mov
mov
sub
daa
mov
and
or
xor
cmp
sub
fsubs
push
add
stc
and
cmp
shrl
insl
add
jns
push
adc
test
mov
mov
sub
jne
mov
jne
inc
stos
inc
data16
mov
popf
dec
mov
mov
inc
pop
xchg
mov
stos
test
sub
cmpsl
push
lods
jbe
and
lret
pop
rcrb
jae
pop
jge
xchg
fsubs
in
jb
push
jp
sub
and
addr16
sbb
mov
mov
push
aas
sub
call
xor
stos
mov
or
lods
aaa
dec
insl
mov
jge
subb
inc
dec
lds
lds
subb
push
gs
ficoms
adc
daa
jg
pop
mov
adc
mov
mov
cmc
movsl
push
icebp
mov
push
push
and
dec
adc
mov
push
mov
mov
popf
sub
call
xchg
pop
enter
cmpsl
mov
mov
fdivs
push
mov
jbe
mov
fwait
adc
daa
test
lods
sub
mov
xchg
gs
out
bound
push
dec
push
mov
aaa
lahf
incl
or
bound
xchg
jbe
sub
dec
cmp
mov
cmp
jecxz
dec
rclb
mov
sbb
aad
loope
or
and
jne
aas
xchg
inc
andb
fcomps
subb
loope
shlb
mov
sbb
dec
pop
mov
popa
cld
das
test
in
mov
cmc
or
ret
mov
stos
repnz
ret
test
cli
ret
fdivs
clc
dec
mov
and
imul
cmovb
mov
call
sbb
fisttps
xchg
movsl
add
add
call
aas
hlt
dec
xchg
jle
aam
lcall
mov
imul
cmp
mov
sub
out
mov
es
gs
xchg
and
in
add
dec
cs
xchg
call
cmp
sub
adc
and
mov
mov
mov
adc
test
in
sbb
iret
inc
xor
dec
sbb
imul
fs
pop
pop
mov
or
shll
js
mov
loop
and
test
out
add
addr16
push
dec
dec
lret
dec
daa
adc
pop
enter
jmp
lods
lods
ja
pop
sub
outsb
push
mov
stc
jp
iret
std
outsl
mov
or
mov
lret
jp
aad
xor
repnz
mov
sahf
gs
adc
sub
shrl
xchg
fisubrs
xchg
xchg
es
stos
or
push
fs
add
adc
inc
das
mov
lock
in
test
daa
rclb
mov
push
sub
loop
push
add
gs
inc
flds
aad
pop
sbb
dec
mov
mov
mov
stc
imul
jl
pop
xchg
cmp
les
test
dec
mov
fmull
lock
das
sbb
add
xor
popa
dec
test
clc
push
xor
inc
flds
xchg
lea
imul
ret
imul
test
fst
push
icebp
dec
je
xchg
dec
mov
adcb
mov
pop
xchg
push
ds
push
lods
push
rcl
sub
lret
push
outsl
iret
jo
push
call
imul
loope
dec
ja
sub
sub
das
int
xchg
in
pop
insb
jl
jecxz
push
test
adc
add
cmc
xor
xor
popa
dec
loope
ret
imul
sub
jmp
sub
xor
stc
imul
movsl
and
int3
jae
xor
xor
dec
xchg
adc
pop
lds
ss
sub
inc
inc
test
out
inc
mov
sub
call
out
cmp
jmp
xor
or
in
fmull
mov
loopne
outsl
loop
in
xchg
fs
pop
push
mov
mov
popf
test
aam
ror
shll
sub
mov
sub
mov
loop
cmp
inc
mov
and
addr16
xchg
shl
imul
test
jne
push
or
andl
pop
jbe
dec
test
sbb
je
aaa
adc
lcall
mov
xchg
cmp
dec
push
push
test
lahf
jg
cmp
test
aam
nop
repz
adc
dec
sub
imul
adc
xor
push
or
adcl
pop
mov
sbb
jp
fbstp
xlat
jns
test
sub
repz
mov
loopne
shlb
stos
add
mov
add
mov
push
sbb
dec
sub
mov
xor
mov
adc
sub
bound
mov
std
add
xchg
cmpsb
jns
or
aad
jp
shl
add
fs
fcom
addr16
xchg
lcall
fsubp
mov
adc
imul
enter
sub
fistl
xor
call
and
push
out
or
movsl
push
aad
clc
call
lods
popf
cli
out
mov
jb
jae
fcoms
fdivr
jg
push
mov
addr16
sbb
xor
es
mov
xchg
dec
push
repnz
dec
pusha
loopne
gs
pop
adc
aam
lock
in
or
adc
insl
and
fs
xor
cli
dec
jnp
add
mov
sub
pop
or
xor
ret
imul
jnp
add
ret
and
aas
sub
push
cmp
mov
outsb
outsl
das
lds
addr16
rolb
jno
int
dec
bound
test
push
outsl
sub
sub
fildll
bnd
lods
jo
adc
repz
mov
sub
adc
push
aaa
aam
rcll
insb
mov
xchg
cs
and
and
test
mov
sub
repz
pop
and
pop
xor
push
mull
movsl
adc
cmpsl
lcall
popa
xor
ficomps
inc
add
gs
adc
xor
mov
mov
divb
das
sub
xchg
or
cltd
rol
xlat
adc
mov
xchg
jns
push
dec
sbb
push
xor
in
daa
repnz
ds
pop
pop
in
dec
test
mov
xor
outsb
dec
addr16
enter
int
push
insl
xor
je
mov
in
push
push
adc
imul
dec
mov
addl
cwtl
inc
push
and
mov
rorb
xlat
rcll
shll
mov
ret
xchg
ror
jp
xlat
xchg
or
dec
ret
testb
scas
pop
stc
push
bound
mov
or
sub
mov
insl
out
mov
aaa
std
pop
mov
add
or
movsb
inc
scas
jbe
adc
inc
push
jecxz
fdivs
test
xor
and
xor
jne
rorb
push
insl
gs
inc
shlb
dec
adc
push
shll
and
cwtl
fsubrs
mov
test
out
in
adc
insb
lods
in
aas
add
xor
pop
inc
mov
mov
jl
inc
lret
call
repz
sti
sub
xor
jp
mov
and
mov
fwait
adc
xchg
lods
fs
sub
mov
std
sub
cmc
cs
jne
dec
mov
test
ret
jne
inc
mov
in
loope
in
orb
mov
xchg
int
fisttps
push
jbe
xlat
mov
pop
test
repnz
jbe
jb
imul
mov
push
xor
fwait
lea
movsb
adc
xchg
sub
push
fldt
or
jecxz
or
popa
or
sub
mov
pushf
fdivl
push
pop
gs
adc
sbb
adcl
fmul
lods
aaa
mov
sub
or
inc
xchg
adc
repnz
push
add
fbld
add
in
cli
push
int3
pushf
lret
arpl
enter
in
lods
inc
sbb
adc
ret
js
mov
fadds
xor
xor
dec
test
adc
sbb
pop
dec
xor
lods
inc
test
jb
enter
popa
cmp
mov
call
enter
jne
inc
jge
jmp
jmp
imul
cmpsl
jnp
push
mov
frstor
test
mov
push
ja
xor
clc
and
rcr
add
mov
xor
in
and
sbb
aaa
int
fsub
shrl
outsb
inc
mov
popa
test
mov
mov
icebp
cltd
add
out
mov
daa
loop
cmp
mov
mov
cmp
adc
xchg
lods
sub
lret
push
jbe
mov
bound
add
ss
add
mov
mov
xchg
shll
inc
loop
ret
jae
push
or
into
loope
jae
insl
lds
scas
test
add
push
xor
push
mov
je
insb
loop
std
aas
rclb
lret
pop
mov
xchg
xlat
lods
lods
in
xchg
inc
xor
icebp
push
push
sub
leave
xor
out
inc
shrb
pop
out
and
fucom
outsb
popa
push
xchg
sbb
jo
push
cwtl
mov
addr16
iret
stos
inc
or
cmpsl
cmp
mov
mov
sbb
pusha
pop
xchg
test
jecxz
mov
pop
or
les
xchg
in
frstor
adcl
cs
add
outsl
dec
dec
mov
lret
aaa
sub
inc
dec
insl
ror
adc
std
cmpsl
loope
jno
dec
cmpl
clc
mov
jp
in
outsl
bnd
test
push
aad
inc
scas
jle
das
hlt
mov
imul
fdivl
in
in
loope
loope
addl
add
aad
les
mov
fistpl
aad
lret
aaa
mov
mov
pop
xor
insl
xor
sub
fcom
jle
mov
lret
outsl
push
add
test
es
add
repz
cmpsb
pop
adc
mov
mov
cmp
mov
filds
and
in
in
in
sbb
or
ret
pop
xchg
pusha
testb
xchg
pop
inc
gs
push
mull
and
pop
jbe
jle
subl
idivl
push
push
cmp
jle
jno
je
test
sub
push
add
rcll
gs
cmp
push
data16
aad
mov
sub
sbb
or
movsl
add
add
stos
int3
xor
repnz
gs
insl
jno
inc
xor
mov
popf
stos
int3
push
orb
js
mov
mov
jmp
xlat
push
xchg
pop
jnp
xchg
lods
lahf
gs
xchg
insl
setne
mov
cli
pop
and
repnz
dec
add
xchg
jbe
xchg
movl
pop
ret
fistpll
movsl
aad
aad
pop
xchg
in
les
ja
popf
adc
fdivs
xchg
mov
lods
inc
aad
adc
imull
gs
mov
popa
inc
adc
ss
cmp
sbb
cmpsb
cmp
test
fcom
cmp
popf
mov
inc
jecxz
push
ss
inc
fs
test
dec
xchg
in
clc
mov
jnp
aad
aad
in
mov
cmc
mov
lea
test
gs
int
in
in
push
sti
cmpsl
sub
test
inc
loop
shrl
pushf
pop
hlt
ret
lods
mov
popa
test
sti
aad
scas
fnsave
jle
jno
outsb
pop
xchg
test
or
mov
gs
and
fcoms
or
lea
inc
or
test
in
inc
ss
adc
xor
dec
pop
inc
cmc
rorl
add
stos
adc
ds
test
aad
movsl
lea
ret
cmpsb
lods
add
hlt
arpl
add
ja
stos
imul
fsubl
add
hlt
pusha
and
fxtract
dec
loope
mov
arpl
test
dec
daa
movsl
gs
xchg
mov
pushf
mov
shl
fsubl
bound
fadds
in
stc
fisttpll
fldenv
add
hlt
lods
and
sub
stc
mov
hlt
dec
outsb
test
sub
in
sub
aas
hlt
xor
add
arpl
imul
arpl
jno
mov
scas
or
loop
pop
sub
mov
fstpt
cmpsl
sub
in
call
or
push
repnz
aaa
stos
adc
imul
enter
mov
inc
sahf
fxtract
dec
outsb
scas
scas
lods
add
hlt
push
imul
hlt
add
jbe
hlt
inc
cmc
bound
rorl
test
in
inc
es
lods
fldl
lods
hlt
xchg
dec
pop
inc
cmc
xor
xchg
hlt
inc
jge
push
pushf
enter
push
cwtl
dec
neg
cld
aaa
stos
adc
icebp
lret
dec
jge
adc
movsl
jmp
push
pop
add
jmp
inc
or
pop
inc
cmc
and
or
aam
ret
inc
add
xor
call
or
je
add
je
movb
dec
mov
loope
pushf
adc
pop
push
in
stos
les
jg
add
inc
lds
xchg
and
in
js
mov
aam
mov
mov
outsl
lods
jecxz
pop
inc
mov
push
fldlg2
jne
out
and
xor
pop
insb
insl
mov
jbe
lahf
mov
adc
xchg
xor
pop
push
dec
jno
and
aas
arpl
xor
out
fs
and
mov
xchg
jo
mov
dec
add
xchg
lds
in
push
cli
adc
inc
adc
lock
aam
jbe
fdiv
bound
mov
mov
repnz
insb
and
inc
in
cld
outsl
movl
hlt
inc
arpl
lcall
dec
test
mov
xor
xchg
testl
iret
mov
cli
enter
push
push
push
add
cmc
or
or
rorb
leave
cmc
inc
js
sub
inc
jns
xor
xchg
lds
push
in
adc
mov
cmp
mov
cmc
out
dec
sub
loopne
test
xchg
add
pusha
inc
lds
push
jmp
xchg
push
pop
clc
sti
and
das
and
in
pop
movsl
test
push
adc
push
rorl
xchg
mov
movsl
daa
inc
inc
fmuls
out
sub
sub
lret
push
insl
mov
mov
pmuludq
adc
fcmovnu
gs
lods
mov
cli
hlt
inc
cmpsb
subl
jl
aas
dec
jbe
test
dec
cmp
ret
sbb
test
inc
lcall
pushf
in
rcrb
sarl
mov
hlt
sti
ds
pop
xchg
bound
mov
loop
lcall
or
aad
inc
cli
orb
xchg
nop
mov
sbb
test
inc
mov
aaa
adc
mov
mov
mov
lock
cmp
mov
lock
jmp
sbb
push
push
ljmp
or
xchg
aas
cmpsl
int
adc
inc
movsb
cmpsl
pop
orb
sub
int
aaa
cmpsl
mov
xchg
test
or
rcrl
xor
mov
insl
in
ror
notl
mov
sbb
mov
ret
lret
mov
fcompl
repz
gs
mov
popf
and
fdivrs
pop
hlt
test
aaa
pop
xchg
cs
inc
enter
mov
gs
orb
sub
daa
sub
xor
test
hlt
fdivrs
inc
vpcmpeqd
xor
insl
fsubrs
lcall
ret
mov
icebp
xlat
sub
or
xchg
inc
fsubl
aam
inc
or
ffree
mov
cs
mov
adc
jae
sbb
test
out
insl
test
outsb
adc
inc
dec
xchg
xor
scas
jecxz
ficoml
aaa
sarl
dec
push
bound
rolb
rcll
test
jns
mov
adcb
aaa
mov
xlat
jmp
adc
sahf
cld
pop
shll
mov
fldenv
leave
pop
divl
or
push
dec
out
imul
fs
decb
xchg
sti
push
xchg
pusha
mov
ret
in
bound
fs
mov
mov
xor
adc
and
xor
adc
pop
scas
popa
xorb
repz
outsb
shlb
dec
xchg
cmp
fnstenv
inc
pop
hlt
or
mov
ret
push
sbb
mov
mov
loope
mov
jge
jmp
ficomps
xchg
fisubrl
mov
insl
cwtl
loope
mov
insl
test
jbe
sbb
sub
or
lods
nop
fsubr
shl
cld
push
daa
xor
mov
ljmp
insb
daa
ret
stos
sub
xchg
imul
push
lods
in
lret
mov
test
mov
testl
fists
gs
add
lret
mov
outsb
hlt
xchg
insb
dec
faddl
jle
pop
sub
nop
dec
inc
pop
fdivs
in
and
mov
xchg
je
outsb
outsl
sbb
in
std
bound
or
imul
mov
bound
popa
or
adc
dec
sub
pop
outsl
imul
sub
pushf
add
push
int
out
fisubs
xor
cmpsb
lea
cmc
outsb
lds
and
inc
std
in
lds
pop
rcll
repnz
or
lds
frstor
push
inc
or
mov
inc
xor
shll
xchg
mov
push
outsb
jmp
fiaddl
inc
in
mov
inc
in
xchg
and
iret
dec
rcll
leave
pop
xor
dec
xor
ds
repz
pop
scas
cmpb
cmp
mov
xor
mov
sub
sbb
inc
test
movsl
mov
push
dec
mulb
aad
pop
push
test
mov
ljmp
inc
faddl
loopne
scas
icebp
lret
aaa
add
mov
push
bound
inc
lock
sub
in
mov
or
imul
scas
pop
lea
push
cs
xor
sub
in
xchg
sub
cli
mov
cmpl
std
xor
adc
imul
orl
cmp
test
xor
mov
pop
push
outsl
js
cmp
bound
aam
jle
es
fsubrs
lds
insl
js
push
add
insl
sbb
mov
pop
xchg
xor
cmp
dec
in
clc
std
fs
or
inc
xchg
mov
mov
push
inc
insl
insl
xchg
mov
fucomp
imul
outsl
in
pop
add
inc
sub
iret
and
push
push
mov
daa
xchg
dec
out
pop
mov
mulb
pop
or
sti
xchg
xchg
fcomp
pop
sub
aad
adc
push
data16
xchg
xchg
mov
or
jge
int
cwtl
outsl
cmc
mov
push
test
push
in
inc
jge
lods
and
sarb
test
mov
test
and
in
mov
cwtl
clc
in
mov
inc
test
pusha
cmp
mov
add
popa
ret
pusha
dec
iret
cmp
xchg
fsubs
dec
loop
pop
xchg
dec
and
fwait
sub
aad
add
mov
divb
jecxz
inc
loopne
adc
cmpsb
inc
cmpl
imull
and
sub
jle
or
subb
subl
xchg
fdiv
test
pop
int
in
xor
imul
notb
add
dec
clc
dec
mov
cwtl
pop
sbb
repnz
pop
sahf
adc
movsl
push
sub
out
add
stc
ss
sahf
repnz
lret
in
xor
rcr
mov
test
adc
and
cld
loopne
jmp
fcomps
hlt
out
mov
inc
pushf
lret
fmull
andb
dec
jl
mov
xor
sub
sub
scas
loopne
aam
mov
call
mov
mov
out
and
aam
lea
xchg
add
rcrl
push
insb
ljmp
sbb
pop
adc
movsb
mov
xchg
add
stos
inc
bound
push
and
fcompl
pop
fstpt
enter
movsl
sbb
cli
mov
call
lods
enter
insl
sbb
stc
xchg
jmp
push
xlat
push
popf
daa
push
jl
cmp
adc
or
lds
mov
and
gs
jne
into
xchg
mov
sub
imul
sbb
out
cmpsb
je
inc
adc
mov
call
xchg
icebp
iret
bound
xchg
sub
mov
in
fs
lods
sub
jmp
mov
call
call
push
rorb
jmp
lahf
test
fcompl
insl
dec
cmpsl
inc
sub
inc
bound
out
in
in
xchg
mov
test
sbb
sbb
sbb
inc
xlat
popa
shlb
dec
adc
mov
fwait
cwtl
sti
jae
adc
addr16
das
leave
outsb
stos
lcall
jmp
mov
imul
in
mov
aaa
movsl
push
pushf
orb
cmp
movsl
subl
mov
ja
inc
jl
pop
add
adc
add
adc
lds
sub
sbb
sub
gs
bound
push
mov
inc
in
test
xor
shlb
js
scas
fimuls
jmp
pop
mov
fcmovnu
in
enter
xchg
repz
enter
loope
xlat
inc
stos
hlt
xchg
mov
and
ret
xchg
mov
ja
fnstsw
out
xchg
jp
mov
les
and
into
xlat
loop
clc
mov
lret
mov
xlat
test
inc
adc
xchg
push
aad
xor
add
adc
jbe
hlt
movsb
inc
or
dec
and
inc
mov
add
mov
pushf
shlb
push
sub
add
mov
jno
int
lds
iret
movsl
mov
subl
insb
or
cmpl
loope
xchg
xchg
sub
xor
dec
jno
mov
fimuls
push
shll
fisubl
ds
and
shll
fldl
mov
loop
sub
mov
push
dec
in
push
inc
and
rol
sbb
and
adc
sahf
das
cld
int
sub
mov
jnp
es
sub
fwait
imul
vminss
pop
sbb
or
xchg
push
lret
jecxz
pop
out
aaa
ja
and
je
lock
rorb
inc
jmp
mov
push
aam
adc
das
push
mov
or
mov
test
aaa
lods
mov
sbbl
adc
hlt
imul
mov
aaa
inc
dec
xchg
pop
shll
into
and
shll
test
push
scas
adc
mov
lds
push
xor
jae
adc
enter
mov
pop
dec
sar
mov
aad
lods
clc
enter
imul
pop
sub
xor
jge
sub
jae
stc
into
dec
std
call
pop
outsl
pop
dec
ja
add
pop
je
leave
adc
jae
xchg
jmp
xor
scas
ss
push
push
lea
es
std
subb
frstor
adc
mov
adc
or
mov
loop
xchg
mov
lds
adc
lds
xchg
es
mov
xchg
pop
mov
inc
leave
repnz
dec
inc
mov
push
fsubrl
lds
push
in
sub
lock
cmc
pop
dec
jb
mov
sub
int3
inc
mov
and
in
aad
mov
inc
js
xor
adc
addr16
fidivl
stos
cmp
jge
and
lea
cmc
test
xor
popa
ret
xorl
call
cmp
lcall
mov
inc
test
std
and
mov
inc
std
loop
mov
sbb
push
add
xlat
mov
xchg
loop
cmpl
xlat
jmp
dec
and
leave
inc
popa
popa
adc
insl
push
addr16
repnz
push
inc
xchg
into
mov
mov
mov
mov
mov
push
js
gs
aaa
mov
push
cmpsl
movsl
fstps
clc
add
or
inc
std
pop
in
xchg
imul
cmc
xor
mov
push
test
pop
add
and
jp
push
xchg
stc
aas
aas
fisubs
in
xchg
imul
jg
in
or
sub
in
jae
xchg
dec
stos
adc
pop
mov
mov
in
dec
scas
jmp
push
adc
lods
xor
inc
popf
fs
push
adc
adc
inc
lods
sub
cmpsl
scas
xchg
call
lods
scas
out
sbb
inc
int
push
movsb
repz
popa
push
and
adc
adc
inc
jp
scas
mov
cmpsl
push
loop
push
mov
add
imul
sub
rcll
sub
stos
push
lret
test
cmpsb
dec
data16
pop
data16
insb
sbb
xor
addr16
hlt
push
xchg
inc
lock
dec
mov
movsb
cmp
xor
loop
push
cmp
shrl
or
cmp
xor
adc
cmc
vpsllq
sbb
push
icebp
jne
je
pop
xchg
mov
xlat
jae
fmuls
popa
and
pop
lods
loope
push
fisubs
xchg
popa
cld
inc
mov
loop
adc
adc
lds
loop
mov
mov
push
shrl
fstl
sbb
pop
test
enter
ds
adc
and
int3
sbb
xchg
cltd
test
fstps
imul
mov
push
ss
add
and
dec
sub
daa
or
jb
std
cmp
inc
andb
lret
sub
and
push
xchg
jl
les
imul
mov
imul
les
mov
outsb
inc
aam
call
outsb
adc
cwtl
les
ds
mov
inc
in
scas
xchg
test
adc
lahf
sahf
das
jl
das
nop
jecxz,pn
mov
sti
icebp
push
out
sub
movsl
popa
add
mov
nop
movsl
and
fwait
repz
pop
lods
test
xor
xchg
lds
call
sarb
push
insb
sbb
lea
dec
fcmovnbe
scas
pop
fcmove
icebp
sub
mov
and
popf
xor
aam
outsb
shrb
push
mov
in
outsb
xor
bound
addr16
sub
or
enter
cmc
xchg
aas
add
pop
sub
loop
sbb
lds
popa
adc
push
daa
mov
or
orb
gs
or
pushl
sbb
sub
dec
test
jae
hlt
mov
shlb
movsl
popa
mov
mov
adc
push
xor
loopne
test
adc
cmpsb
inc
les
out
lret
loopne
in
xchg
and
xchg
jg
and
in
icebp
jmp
test
mov
and
jne
clc
xor
shlb
sar
push
xor
xchg
daa
jl
sahf
mov
xor
inc
call
scas
daa
cmpsl
push
adc
cli
mov
rol
lcall
and
sub
and
loopne
sub
addr16
inc
rcl
sbb
pusha
scas
pop
int
pop
pop
gs
lret
lods
mov
push
out
pop
jl
fucomi
lahf
fsubl
jmp
testl
push
jne
and
or
test
mov
add
and
daa
mov
imul
inc
nop
and
sub
in
aad
and
inc
les
adc
ret
sub
es
dec
inc
add
addb
push
cmpb
push
icebp
cwtl
sub
pop
sub
dec
cmovg
std
xchg
xor
add
leave
inc
add
inc
xchg
and
and
mov
mov
out
dec
push
jne
aam
xchg
js
mov
iret
popa
xchg
xchg
ds
jbe
cmpsb
dec
mul
aas
inc
pusha
pushf
push
inc
mov
call
rcll
or
addr16
mov
in
in
cmpsb
loop
ds
and
in
push
mov
fadds
outsb
mov
dec
xor
addr16
es
push
xor
imul
jnp
scas
rolb
jle
inc
stos
mov
aaa
push
sub
cmpsl
cmpsl
outsb
sbb
mov
enter
arpl
outsb
sbb
sub
jae
fcoml
loope
lods
inc
movsb
stos
shll
test
call
jle
imul
fists
or
jl
lds
sub
leave
pop
in
out
push
nop
and
test
ret
lahf
pop
inc
cmc
cld
movsb
xchg
xor
xchg
cld
ret
pop
dec
push
movsl
scas
sarl
mov
mov
adc
dec
fidivl
lods
inc
mov
dec
cmp
enter
addr16
sbb
jmp
mov
addr16
stos
lcall
jae
shrl
mov
xchg
andb
ljmp
insb
call
out
inc
call
aad
pop
ret
jns
cmc
sub
mov
sbb
or
xchg
jg
fcmovnbe
daa
cmp
icebp
lcall
and
mov
mov
addr16
dec
shr
fdivs
sarb
inc
popa
lret
negl
sbbb
jo
in
fidivrl
fstpt
test
mov
in
mov
test
stos
subl
popa
aad
fwait
adc
xchg
mov
hlt
out
fdiv
mov
sarl
push
jb
add
xchg
xor
imul
pop
imul
jo
sbb
lahf
rclb
ret
movl
mov
mov
iret
inc
inc
shlb
pop
cmp
cmpsl
xor
adc
xorl
adc
mov
dec
inc
pop
test
repz
outsb
lret
stos
testl
adc
jnp
xlat
inc
sub
das
or
and
push
fsubrs
xlat
mov
inc
or
cmp
sbb
add
scas
sbb
outsl
pop
scas
into
push
mov
add
push
fisubl
repnz
mov
in
mov
popa
out
inc
scas
cli
cmp
sub
popa
mov
and
cmp
pop
aam
loop
sub
xchg
and
insb
lock
rcrl
stos
jno
push
pushw
lods
int3
in
push
nop
in
in
insb
xchg
sub
imul
mov
sub
sti
aad
push
je
sub
push
out
jle
sub
fstpt
jle
lods
xchg
lods
fxam
lock
fcoms
xchg
or
mov
inc
mov
in
push
inc
pushw
xor
or
xor
in
jecxz
aaa
stos
adc
loop
cwtl
dec
imull
mov
in
push
pop
jecxz
or
pushw
xor
scas
or
jecxz
sub
or
push
cmp
stos
adc
adc
push
sub
popa
inc
mov
outsb
pop
addr16
or
fildll
lock
inc
lea
dec
imull
sti
aad
fcoms
xlat
or
mov
mov
in
out
push
jb
insl
in
popa
fadd
aad
or
loop
dec
sub
stos
dec
xor
mov
in
push
pop
jecxz
or
pushw
xor
scas
or
and
sub
outsb
or
loop
add
popa
inc
mov
outsb
pop
addr16
or
out
push
lods
fxam
lock
inc
in
or
mov
sti
aad
fcoms
or
mov
push
in
push
popa
test
or
push
or
shl
div
dec
xor
insb
shrb
popa
imul
aad
outsl
hlt
pop
lret
xchg
sub
insl
xlat
and
insl
xor
imul
sub
insl
frstor
push
xchg
fxam
lock
inc
push
inc
loop
cs
outsl
mov
dec
insl
push
outsb
cwtl
dec
ja
pop
fists
sub
popa
leave
jmp
bound
insl
add
imul
sti
testl
sub
sti
aad
rcl
jno
addr16
xchg
sbb
leave
mov
int
mov
int
stc
fimull
int
jmp
dec
add
fimuls
int
jecxz
les
int
icebp
rorb
int
mull
adc
jbe
cmc
in
not
fcmovnbe
jno
push
xlat
jb
push
xlat
ja
pop
xlat
js
push
xlat
jne
push
fdivs
pop
fdivrs
pop
fdivrs
fdivrs
pop
fdivrs
pop
fdivrs
pusha
fadds
fcomps
jle
inc
call
xchg
mov
fnsave
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
enter
xor
add
lods
insb
or
or
xchg
cmpsb
push
insb
mov
push
outsl
scas
jo
insl
push
outsb
push
push
push
push
nop
les
mov
hlt
inc
mov
test
mov
jmp
sub
sbb
pop
ret
fdivrl
push
pop
jo
add
push
test
jle
mov
test
addr16
cmp
mov
rcrl
es
mov
xchg
sub
xor
imul
cmpsl
test
dec
jle
shrb
arpl
mov
push
push
xchg
cmp
loope
addr16
fmuls
inc
cmpsb
loope
das
xchg
xchg
adc
mov
adc
jg
data16
mov
or
push
lahf
mov
insb
xor
mov
lock
lock
adc
adc
invd
lds
adc
adc
insl
loope
mov
push
ucomiss
daa
and
mov
hlt
add
sub
cmp
int3
xor
pop
lods
lahf
xchg
rorl
and
je
cmpsb
adc
xor
jmp
mov
addr16
int
pop
shrl
xchg
push
fmuls
mov
leave
int
jp
daa
mov
push
ret
pop
sub
mov
sbb
sbbb
pop
mov
hlt
dec
popa
pusha
stos
sub
xchg
clc
mov
mov
and
movsl
iret
mov
movntps
and
out
xchg
xchg
call
loope
fisubrs
mov
pop
scas
dec
andb
fcom
mov
pop
mov
out
inc
mov
dec
inc
enter
enter
xchg
push
dec
or
fcmovnu
sarb
sub
push
fistps
inc
outsl
adc
cmp
insb
push
sub
or
in
add
xor
xchg
push
std
flds
xchg
push
sub
xchg
iret
in
addl
je
mov
call
sbb
mov
pushw
dec
rorl
xlat
aad
adc
enter
push
fcomps
xchg
dec
into
push
fldenv
mov
in
push
jno
inc
nop
mov
test
ja
fidivl
frstor
dec
call
dec
pop
push
sub
jo
xchg
fcmovbe
loop
outsl
jne
shl
and
jmp
xor
dec
jp
test
bound
andnps
rclb
dec
test
cs
push
push
movsb
inc
pop
dec
sbb
jbe
scas
out
lcall
lock
std
push
jle
dec
xchg
dec
popa
icebp
sub
push
gs
das
int
out
iret
pop
loope
lea
fstl
popa
into
test
adc
push
into
jl
enter
jnp
push
outsl
sub
adc
rorl
pop
lds
jno
ja
jle
loop
movl
xchg
jbe
lea
aam
inc
out
inc
sbbb
lahf
adc
add
push
sbb
inc
imul
xchg
lods
pop
push
out
scas
add
cmp
push
insb
and
pop
outsl
dec
jo
insl
popa
outsb
fstl
push
and
pop
addr16
push
cmpsb
ficomps
insl
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
js
or
inc
neg
scas
mov
dec
movb
outsb
mov
js
or
inc
neg
scas
mov
js
or
push
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
ret
mov
js
or
inc
neg
scas
mov
js
or
inc
neg
inc
jbe
js
or
inc
neg
scas
mov
js
or
inc
neg
scas
mov
adc
push
mov
adc
jp
xchg
xchg
inc
rorl
pop
ss
aam
loopne
xor
mov
aam
imul
push
loope
mov
shll
ret
ja
push
cltd
ljmp
xor
fdivrl
jbe
adc
lds
fs
add
mov
das
push
rcll
jne
fsubs
in
dec
lds
mov
fsubs
add
cmc
add
xor
insl
dec
jbe
addr16
int
jge
lds
push
and
movsl
movsb
nop
testb
mov
push
inc
movsl
lcall
loope
push
mov
cmp
push
mov
adc
fs
adc
lods
xor
pop
fs
mov
dec
mov
aaa
cwtl
or
cld
and
int3
lods
fidivs
or
iret
push
jo
dec
or
mov
pop
adc
sbb
jo
hlt
es
repz
sbb
clc
or
ja
leave
call
bound
xor
insl
daa
in
pop
bound
fdivs
ja
out
jg
ret
push
or
insl
cld
xor
mov
push
mov
add
pop
in
sbb
pop
lret
xchg
out
div
add
jno
xchg
mov
es
adc
jle
in
int3
jge
push
xchg
call
gs
lods
mov
lods
js
hlt
in
cmpsl
dec
cmc
or
stos
sub
pop
push
test
push
push
or
mov
mov
adc
sahf
in
dec
out
pop
aad
lods
inc
xlat
and
insl
ds
sub
imul
insl
jle
insl
mov
insl
cwtl
push
insl
add
mov
test
jne
adc
sub
aaa
imul
jge
xor
pop
sub
add
std
push
push
addb
in
imul
std
sub
imull
in
sti
imul
es
push
imul
testl
imul
sub
gs
aaa
push
jmp
loop
xor
sti
cmpsl
mov
and
lock
mull
mov
adc
popa
movsb
and
test
push
neg
dec
daa
jecxz
cmp
cmp
and
bound
lds
mov
inc
clc
icebp
sahf
mov
mov
je
cmp
xchg
bnd
popa
and
mov
je
aaa
jp
pop
loop
xchg
xor
in
mov
inc
inc
inc
add
dec
lds
jge
pop
or
and
movsl
and
sbbl
call
idivl
cmpsl
or
insb
add
adc
mov
ret
sbb
adcb
cltd
mov
and
lods
lods
adc
cli
addr16
mov
jno
test
icebp
ror
sahf
aam
xor
dec
sahf
xlat
test
inc
pop
int
xor
fsubrs
in
test
push
hlt
jb
ja
negb
cmc
lcall
sub
pop
adc
jnp
lcall
jecxz
mov
lcall
not
dec
test
inc
jmp
sbb
jge
jmp
mov
sti
bound
bound
sub
and
xor
cld
out
pop
inc
fldl
jmp
inc
lds
adc
fstpt
adc
push
mov
mov
test
and
xorl
test
test
mov
push
mov
push
xchg
call
aaa
daa
and
xchg
sbb
inc
test
push
arpl
add
jns
popf
push
gs
mov
sub
push
loope
das
lret
in
push
or
jmp
cmp
xchg
addr16
adc
int3
xor
mov
and
xchg
fnsave
dec
mov
xor
add
adc
fwait
lret
cltd
xchg
into
cld
pop
in
mov
hlt
jecxz
ljmp
pop
ljmp
dec
popa
push
adc
xor
xchg
and
dec
notb
aaa
mov
add
in
sub
push
fstpl
rorl
movsb
aam
mov
repz
xor
dec
adc
insl
shll
adc
shrl
adc
mov
popa
js
mov
mov
in
int3
scas
xlat
adc
insb
dec
jno
mov
mov
dec
sbb
xchg
sub
stc
inc
jmp
mov
xor
lahf
push
jg,pn
test
push
sbb
and
ret
push
movsl
pushw
inc
xchg
jne
lods
fsubrl
adc
dec
sub
pop
cmpsl
gs
sbb
sub
jne
sbb
loopnew
cmp
push
sbb
or
ss
addr16
xchg
stos
test
fisubs
cltd
ret
loopne
dec
push
and
jno
mov
and
push
mov
or
test
sarl
sbb
jle
or
mov
cmp
inc
push
pusha
enter
test
imul
xchg
orb
addb
push
popa
push
push
ss
or
insb
imul
into
jg
push
dec
push
and
les
pop
cmp
xor
jb
in
arpl
dec
lret
das
mov
dec
out
int3
adc
mov
mov
das
popa
mov
mov
sbb
xchg
adc
pop
xor
cmp
and
in
mov
leave
and
daa
adc
fwait
testb
pop
mov
mov
xorb
jecxz
iret
xor
fdiv
cs
add
arpl
mov
movsl
repz
sahf
mov
pusha
nop
jl
insb
and
loope
and
in
push
sub
mov
enter
jno
ds
jge
pushf
sti
fistpl
sub
fwait
sbb
ficompl
push
movsl
dec
testl
imul
mov
xor
stos
hlt
mov
stos
movsl
sub
push
adcb
or
jp
and
xor
daa
iret
mov
dec
xchg
xchg
or
int3
mov
ret
cmp
xchg
lds
jb
sbb
into
push
sti
popf
inc
in
scas
rorl
mov
jno
fsub
push
sahf
mov
std
inc
pop
pop
mov
xchg
lods
in
jns
imul
xchg
dec
fsubs
mov
add
jae
pop
sbbl
mov
or
mov
leave
daa
das
test
adc
dec
loope
pop
fnsave
ds
arpl
mov
or
ja
pop
mov
cmp
aam
ret
push
hlt
pop
xlat
inc
mov
lods
mov
push
lcall
fcomps
pandn
pop
into
inc
pop
stos
and
clc
fwait
aad
dec
in
scas
push
test
aad
adc
ljmp
lds
leave
and
sub
cs
mov
bound
scas
pop
call
imul
testb
lods
pop
mov
test
enter
sub
sbb
xor
xor
cmp
pop
in
xchg
jns
mov
xchg
ja
loope
scas
or
in
and
sbb
pause
loope
mov
ret
mov
mov
ret
jmp
cmp
sbb
ja
daa
xor
movsl
leave
loope
xchg
xor
icebp
cmp
mov
lret
mov
mov
push
fstl
andl
push
push
out
or
into
das
popf
std
leave
pop
xor
imul
add
xchg
data16
xchg
or
ret
test
daa
bts
rcrl
les
test
sbb
sbb
mov
or
adc
imul
popa
into
lahf
and
push
and
mov
pop
mov
imul
out
test
outsb
jnp
adc
sub
mov
call
and
mov
sbb
js
in
sub
xlat
add
in
ljmp
ficomps
and
js
imul
and
icebp
cmp
cmpsl
or
test
inc
xchg
mov
push
sbb
sub
lock
mov
sub
and
jne
jnp
fs
mov
stos
push
sub
mov
cmp
cmp
loop
adc
test
sbb
outsb
call
or
cmp
insl
stos
lock
outsb
mulb
mov
dec
call
aaa
sahf
mov
push
dec
bound
aam
push
scas
push
enter
and
idivb
inc
jno
and
call
mov
data16
in
loope
jl
jp
mov
inc
cmc
lods
mov
pop
jl
popf
loop
addr16
mov
mov
mov
adc
cmp
push
pop
mov
les
fadd
mov
shll
mov
sub
jb
jno
test
es
shl
mov
mov
add
pusha
jns
call
dec
cmp
mov
cld
or
sub
mov
mov
test
dec
out
sub
dec
cmp
daa
dec
push
aas
loope
adc
push
jmp
into
mov
sub
in
cmpsb
xchg
inc
scas
sbb
out
push
pop
rol
xchg
sbb
xor
xchg
int3
cmpsl
pushf
dec
and
dec
dec
mov
mov
jg
and
repz
inc
test
mov
mov
scas
addr16
pop
inc
ret
push
and
dec
test
lods
loope
ja
push
sti
add
andl
insb
jmp
mov
or
sub
pop
movsb
in
or
cmp
mov
mov
add
add
mov
and
movsb
add
adc
in
sbb
outsb
and
pop
push
or
outsl
scas
dec
dec
icebp
enter
into
call
ret
sub
mov
push
repz
pop
outsb
cwtl
mov
add
mov
push
mov
es
jmp
sub
adc
push
addb
xchg
cld
and
out
push
jno
dec
adc
in
mov
ret
test
sub
call
andl
loop
ret
inc
outsb
push
std
xchg
daa
mov
in
push
imul
mov
push
pusha
mov
loop
fs
jne
xchg
popf
sub
and
daa
pop
jne
scas
addl
push
inc
gs
jae
jno
mov
inc
andb
inc
mov
sub
xchg
lods
iret
call
adc
mov
subb
dec
imul
inc
aaa
shll
lds
sub
inc
mov
test
outsb
fsub
fabs
cmc
ljmp
sub
ret
cli
push
test
ret
roll
sub
test
adc
js
in
xor
adc
daa
pop
ret
adc
sbb
aas
jmp
sub
fisubl
or
imul
leave
in
push
subb
inc
sbb
mov
jae
stos
mov
leave
add
adc
inc
test
sub
sub
xor
mov
push
pushl
lds
mov
xor
xchg
dec
sahf
push
sub
imul
iret
divl
pop
fnstenv
xchg
or
jp
aaa
aaa
call
pop
mov
addr16
push
sub
push
cmp
stc
sub
int3
pop
or
shrl
shrl
fsts
push
mov
scas
iret
sub
add
test
push
sub
mov
add
outsl
push
std
push
test
jle
imul
inc
jns
call
or
lods
pusha
mov
or
xchg
lret
dec
cmpsb
imul
lcall
and
dec
cmp
xchg
js
je
jle
in
es
into
fxam
ret
xor
aas
in
mov
in
xor
jp
cs
insb
inc
push
repnz
fdivrs
lds
lahf
dec
xchg
mov
lock
push
mov
call
dec
sub
inc
push
push
and
adc
push
cmc
mov
adc
cmp
mov
mov
out
cld
dec
rcr
adc
sbb
cli
fistpl
aam
imul
test
ds
ret
in
faddl
add
icebp
dec
aad
aaa
scas
jmp
pop
sahf
shl
jae
lods
hlt
rcr
bound
scas
push
loop
incl
cmp
jg
jp
rclb
hlt
addr16
inc
mov
xlat
sbb
add
ja
jbe
fstpl
pop
jbe
ja
loope
jns
xchg
insl
xchg
xchg
shll
std
push
in
scas
add
xchg
cmpsb
addl
hlt
aaa
ret
inc
inc
pop
ja
daa
addr16
jle
movl
and
mov
imul
cmp
test
inc
mov
mov
xor
cmpsl
clc
scas
adc
xor
sbb
je
sub
ja
pushf
mov
jge
sbb
int
mov
loop
pop
cmpsl
pop
aam
or
ror
mov
jno
lock
add
pop
sub
sub
inc
lods
sub
cmpsl
es
pushf
dec
pop
negb
adc
jbe
in
gs
xchg
sti
dec
xlat
add
adcl
aad
outsl
xchg
lcall
call
pop
sbbb
test
movsl
cmpsb
push
pop
std
in
stos
push
ret
fimull
test
xchg
mov
jb
mov
hlt
mov
imul
notb
gs
test
add
aas
mov
xchg
dec
jp
dec
xchg
inc
cltd
push
ja
or
sub
push
adc
test
fbld
popa
rcll
insl
jne
imul
fiadds
push
push
rclb
addb
dec
lods
jb
insl
push
int
rorl
popa
pop
jne
shrl
jmp
shl
int3
mov
push
mov
mov
push
add
negl
outsl
push
movsl
jo
sub
and
sub
mov
sub
sbb
and
das
adc
mov
xchg
sbb
fadds
push
cmpsb
mov
inc
push
adc
inc
pop
sbb
push
xchg
test
mov
js
repnz
call
pop
adc
enter
xor
rcl
push
out
fcomp
stos
test
leave
xchg
push
adc
mov
aad
xchg
pop
lea
sbb
or
into
in
inc
in
adc
loop
ret
xchg
test
test
daa
mov
shl
add
into
pop
call
ja
lods
mov
enter
and
jne
repz
inc
adc
scas
adc
dec
sbb
jne
test
in
hlt
call
or
push
test
scas
inc
jge
cmp
repz
sbb
or
pop
xchg
bound
gs
pop
shrl
arpl
loop
mov
fists
int3
add
shll
das
repz
in
push
push
xchg
pushf
pop
inc
jg
in
or
test
jns
outsb
or
insb
cmp
rorl
sbb
push
int
push
xor
mov
push
adc
gs
adc
fstl
add
movb
mov
aaa
pop
jmp
mov
cwtl
jbe
push
cmpsl
gs
mov
mov
push
inc
xchg
fcmovbe
push
jne
jno
imul
test
dec
mov
popa
jecxz
inc
pop
push
xchg
push
xchg
push
mov
std
lret
test
popa
popf
adc
mov
lock
lds
cmc
fwait
push
test
loope
inc
in
outsl
data16
xchg
mov
outsb
pop
mov
into
fistpll
cmpsl
aad
sub
test
dec
xchg
jns
loopne
mov
mov
sub
dec
ja
push
cmc
jne
jp
jecxz
jecxz
sbb
jp
inc
push
dec
imul
add
cmp
dec
cmpsl
pop
dec
cmc
fcoms
jp
mov
sub
sbb
add
cmp
cld
dec
add
scas
es
cmp
dec
and
pop
imul
aaa
add
cmp
pop
clc
mov
sub
sbb
xor
inc
mov
push
sbb
fcom
push
xor
sti
fsub
push
jge
es
stc
push
sub
lods
dec
add
pop
mov
sub
mov
sbb
pop
add
ss
push
sub
sub
mov
and
sub
pop
aad
mov
fs
outsl
cmp
test
sbb
add
pop
xchg
loopne
fadds
jle
push
mov
outsb
hlt
js
daa
scas
outsb
pop
push
mov
xchg
push
test
mov
rcll
push
sbb
push
mov
jle
and
xchg
cmpsl
pop
push
test
punpcklwd
jp
loop
xor
cmp
cmp
sub
and
mov
dec
aad
mov
inc
xchg
or
jno
adc
lds
fnsave
outsb
repnz
xchg
or
jno
mov
jno
imul
pusha
push
aad
cmp
dec
scas
cmc
fidivrs
clc
call
repnz
inc
and
js
gs
push
push
pop
pop
es
enter
push
mov
test
and
gs
push
or
xchg
xchg
aad
insl
inc
into
pop
cmp
or
xchg
into
pop
cmp
xor
xchg
into
pop
cmp
xor
adc
xchg
fnstcw
pop
inc
mov
lods
cmp
cmp
xchg
lods
cmp
cmp
xchg
lods
cmp
cmp
arpl
xchg
sub
cmp
aad
cmp
dec
pusha
aad
cmp
cmp
push
sub
dec
xchg
aaa
cmp
daa
xchg
aaa
cmp
daa
xchg
aaa
cmp
daa
xchg
aaa
cmp
inc
push
pop
lds
push
enter
push
mov
test
fsts
cwtl
lds
push
or
scas
push
fildll
out
cmpsb
xchg
aaa
adc
mov
mov
pushf
mov
test
in
stos
cmp
xchg
xor
or
adc
popa
and
cmpsl
cmp
xchg
sub
xchg
test
test
test
mov
js
mov
imul
incl
dec
push
faddp
ret
daa
add
cmp
cmp
jo
pop
popf
loopne
lds
enter
pusha
mov
addr16
outsl
je
jp
imul
aas
jno
mov
aaa
inc
loope
rcrl
pop
aad
pop
jno
pop
shll
lcall
fdiv
rcrl
push
addr16
fstl
jge
mov
test
cmp
xorl
cmc
dec
adc
jo
inc
clc
adc
and
add
sub
fbld
loopne
jl
pop
cmc
dec
movsl
adc
aad
mov
mov
mov
add
pop
popl
sub
push
stos
popf
loop
pop
or
aad
pop
xor
cmp
daa
push
int
pop
aad
test
shll
sub
rcl
loop
jns
pop
pop
sub
dec
aad
je
test
daa
testl
inc
mov
cmc
loope
mov
loopne
xchg
cmp
cmc
dec
push
adc
cltd
clc
adc
jb
add
sub
jge
sbb
sahf
frstor
fwait
in
mov
mov
xchg
loope
pop
fdivrs
pop
xchg
sti
xor
pop
inc
jecxz
jge
movsl
enter
popf
xor
and
popa
and
iret
or
xchg
jge
mov
je
dec
lock
and
popa
in
xchg
dec
sub
and
push
js
addr16
dec
std
imul
das
addr16
popf
loop
stc
or
jge
jne
mov
xchg
dec
lds
inc
shrl
xchg
mov
mov
shr
rcrl
lret
jge
xor
sti
sub
dec
test
inc
adc
adc
and
add
sub
sbb
mov
in
dec
clc
mov
inc
loope
je
scas
sub
inc
push
es
test
nop
cmp
xor
adc
cmp
je
jg
xor
mov
cmp
mulb
push
sbb
addr16
cmp
movsb
add
stos
xor
movsl
std
jge
sahf
es
div
dec
adc
test
mov
icebp
push
outsl
jecxz
imul
cmpsl
faddl
xor
adc
aad
add
repz
in
and
mov
mov
adc
inc
enter
jl
cmc
dec
push
adc
cmp
mov
popf
inc
or
out
fisubs
clc
dec
lods
sub
cmp
lret
inc
sbb
rorb
mov
push
clc
adc
xchg
pop
adc
cmp
mov
mov
push
push
add
int3
mov
mov
adcb
in
mov
and
or
dec
test
enter
ret
adc
outsl
mov
jp
in
mov
movsl
leave
movsl
call
xchg
pop
bound
sahf
ret
push
adc
fidivrl
addr16
movsb
ret
add
pop
addb
pop
in
lods
xchg
mov
mov
sub
cs
and
jecxz
insl
and
xchg
stos
jnp
inc
and
xchg
mov
mull
sub
or
xlat
ror
xor
inc
pop
into
and
mov
ja
inc
adc
daa
into
jb
stc
filds
aas
in
jb
sbb
enter
incb
jg
fcmovb
cmpsl
jecxz
sub
sub
inc
loopne
xor
int3
insb
loop
and
ss
mov
jmp
lds
movsb
test
and
add
xlat
xchg
xchg
adc
int
dec
rclb
jle
shlb
addr16
test
jl
jg
clc
inc
mov
daa
jl
mov
in
ror
push
or
aam
pop
aaa
jb
and
jno
imul
and
inc
adc
outsl
cmp
and
cmpsl
inc
push
jno
dec
or
jno
adc
pop
cs
dec
stos
pushl
shll
mov
sbb
outsb
dec
clc
fwait
in
psubusb
fnstcw
cs
adc
jle
mov
imul
and
repnz
xchg
lcall
fsub
push
xchg
sbb
jb
fcoms
shrd
stos
loope
and
xlat
adcl
xlat
fmul
sbb
and
pusha
ljmp
loope
outsb
inc
inc
clc
ljmp
aas
in
push
imul
test
lods
jno
es
inc
into
dec
lcall
xchg
push
xor
cwtl
lds
push
dec
adcb
xchg
xor
push
stos
sub
fbstp
jle
pop
push
sub
gs
ds
push
mov
in
mov
pop
dec
mov
dec
addr16
fldcw
push
dec
mov
sub
push
into
pop
add
pop
test
push
mov
pop
mov
add
xchg
in
daa
in
jle
rcll
stc
push
ret
xor
add
int3
mov
push
in
mov
mov
outsb
into
mov
and
fcoms
scas
lret
frstor
jns
sub
test
js
fidivrl
mov
imul
xchg
xor
outsb
aad
mov
fs
add
call
add
pop
adc
adc
and
dec
cwtl
sub
pushl
push
std
aaa
les
sub
push
mov
xchg
scas
js
outsl
pop
enter
dec
movsl
pusha
enter
lock
ficoml
enter
mov
sub
lock
sahf
add
fsubrs
mov
cmpsl
js
scas
callw
jl
sar
call
incl
in
jl
add
jb
or
add
or
ja
fildll
incb
outsb
and
xor
test
xlat
xor
inc
mov
sbb
xchg
lret
add
cld
stos
pop
add
fs
mov
or
imul
xchg
jb
xor
xor
push
jge
jl
aaa
push
sbb
xchg
int
cs
shl
inc
mov
js
inc
pop
xchg
shlb
shll
sbb
mov
out
out
or
mov
loope
inc
push
aas
push
push
and
outsl
push
neg
push
push
dec
bound
xor
shll
xchg
inc
xchg
xchg
pop
mov
xor
xchg
adc
cmp
or
test
test
cmovs
jle
sarb
add
push
xchg
fsubrs
sub
data16
mov
cmpl
hlt
faddl
sbb
jbe
push
ret
loopne
jbe
xchg
les
insb
inc
test
mov
sub
in
lahf
xchg
filds
imul
mov
mov
test
mov
call
lods
daa
loop
push
push
loope
mov
loope
adc
lea
sub
fs
push
xchg
mov
pop
mov
sbb
lock
subl
les
xchg
test
xchg
push
jne
adc
inc
cs
or
mov
xchg
push
out
add
adc
mov
sub
shll
es
adc
mov
sub
sub
std
xchg
leave
test
xor
add
adc
daa
aam
cmpsl
and
es
push
pop
dec
add
pusha
jmp
les
fsubs
fwait
jp
mov
orl
mov
scas
push
daa
mov
cwtl
mov
sarl
gs
call
mov
lods
std
sar
cmp
cs
nop
pop
fs
ret
addr16
xchg
lcall
jecxz
aas
push
inc
icebp
lcall
xchg
pop
jb
popa
xchg
pop
jb
popa
xchg
pop
jb
popa
xchg
pop
repnz
sub
sub
pop
push
out
xor
bound
and
imul
out
test
and
xchg
roll
popl
push
cmpsl
mov
push
stos
adc
popa
jo
push
inc
adc
aam
pop
cmpsl
dec
addr16
es
jmp
stos
nop
mov
xchg
mov
in
mov
sub
xor
shll
test
pop
daa
push
adc
or
push
sub
mov
imul
insl
dec
xchg
adc
or
movsl
sub
addr16
xor
mov
shl
push
add
stos
cmpsl
mov
rolb
into
push
insb
out
test
stc
jmp
in
mov
fdivs
sub
andl
push
out
data16
and
and
add
je
movsb
xor
push
gs
jae
xchg
test
imul
dec
pop
shlb
jmp
loopne
jecxz
movsl
lret
dec
testl
test
or
loop
xor
and
mov
pusha
xlat
repnz
adc
adc
movsl
rcll
sub
mov
mov
out
dec
mulb
cmpsl
aaa
jb
movsl
mov
and
inc
jmp
js
shll
xchg
dec
sbb
xchg
inc
xlat
and
xchg
and
sbb
pop
adc
fiadds
movsb
sub
sub
jl
scas
scas
or
mov
xor
lret
inc
aam
insl
push
sub
mov
data16
mov
xor
ret
lds
mov
push
imul
rclb
fcomps
jns
nop
mov
cmpsb
xor
push
inc
repnz
je
lods
cltd
push
xchg
insl
add
insl
mov
aaa
jb
sub
sub
cmpsb
in
jno
test
pop
mov
mov
xor
push
dec
sarl
outsb
or
fcoms
shrl
adc
ret
aad
pushf
jo
xor
cmp
mov
cli
pop
call
xchg
frstor
inc
pop
test
lods
imul
stos
push
cmpsb
push
cmp
mov
push
lds
aaa
push
xchg
sub
mov
arpl
adc
std
in
xchg
data16
push
inc
testb
push
pop
mov
xor
mov
test
mov
and
sbb
inc
pop
std
push
fdivr
pushf
rclb
mov
xor
xchg
pop
push
testb
sbb
inc
dec
test
sbb
push
imul
push
arpl
mov
scas
fnsave
ret
mov
movsl
lea
and
add
movsb
add
add
nop
rclb
fdivs
cmpsb
dec
adc
stos
and
jae
pop
dec
add
aad
in
cwtl
xor
jae
enter
out
fs
push
into
add
lds
stos
ja
or
clc
cli
sbb
sub
adc
push
xor
addr16
mov
inc
xlat
int3
sub
out
sub
cltd
in
sahf
cmp
mov
imulb
dec
push
lock
sti
scas
add
subl
test
movsl
push
cltd
rolb
ret
sbbl
notl
movsl
addr16
stc
in
imul
jbe
testb
mov
movsl
add
jmp
stos
or
sbb
bound
mov
out
scas
in
or
pop
pop
call
push
mov
aaa
or
adc
cmp
jo
pop
stc
sbb
adc
shl
mov
test
push
inc
or
mov
into
xor
mov
hlt
inc
test
sub
sbb
add
add
push
inc
loopne
add
push
mov
icebp
cs
fnstenv
cwtl
call
mov
and
in
mov
jge
mov
in
stos
popa
cmc
jge
js
in
stos
dec
or
hlt
mov
xchg
cmc
hlt
inc
jne
jecxz
imul
inc
in
flds
in
iret
scas
daa
cmp
sub
and
push
xlat
add
into
fstps
cmp
sbb
clc
imul
dec
sub
std
sub
jo
dec
ret
push
sbb
ret
das
xchg
push
outsl
std
outsl
xchg
xchg
mov
unpcklps
test
ja
mov
cwtl
xchg
ja
and
push
repz
data16
dec
add
lods
pop
add
mov
dec
cmp
or
dec
inc
je
and
mov
sbb
and
testb
push
cmpsb
push
clc
xchg
mov
jl
fisubrl
push
repnz
ds
in
cmp
dec
cli
mov
imul
mov
test
daa
js
in
inc
out
adc
imul
push
rcr
xor
add
adc
push
jbe
jbe
inc
dec
enter
xchg
fldcw
clc
fs
and
dec
dec
or
dec
adcl
stc
push
and
mov
call
sub
sub
adc
cmc
xlat
sbb
imul
xlat
mov
mov
mov
popa
adc
mov
popf
dec
scas
jnp
icebp
mov
fcomps
clc
mov
lods
stos
stc
fildl
adc
sbb
xor
jmp
sbb
rcrl
cmp
test
mov
pop
loop
mov
mulb
add
add
dec
fs
fwait
and
push
sub
cmc
sub
insl
jp
sub
iret
loopne
push
pop
or
adc
mov
insl
in
push
enter
into
in
enter
inc
cmp
adc
or
mov
inc
repnz
pop
lock
test
ss
and
add
int
shrl
in
testl
mov
sub
dec
enter
inc
xchg
movsb
xchg
scas
and
test
mov
pushl
bound
adc
adc
push
out
sbb
pop
pop
stos
xor
mov
and
loop
mov
pop
jne
aam
insl
push
xchg
and
push
mov
lret
testl
fst
inc
xor
and
pop
fs
gs
xchg
popa
outsb
fldl
daa
aad
xlat
pusha
stos
fcoms
cmp
inc
aad
adc
test
gs
pop
imul
dec
cmp
cltd
mov
sub
popa
lahf
mov
adcb
add
popa
push
fldl
mov
pop
scas
test
mov
fisubl
pop
push
mov
packssdw
mov
daa
int3
mov
ljmp
jo
mov
leave
mov
lret
jns
stos
fldlg2
add
mov
sysenter
sub
jb
lods
out
lret
mov
cmpsb
xchg
pop
sbb
inc
jae
jmp
loop
popf
cmc
and
pop
cmp
pop
cmp
gs
loopne
push
cmp
lcall
pop
sub
xchg
mov
push
push
jb
dec
cli
jbe
ljmp
cmp
pusha
or
movw
pusha
lea
je
cmc
pusha
pushl
cmp
lea
pusha
jmp
sub
addr16
add
jb
push
jnp
push
imulb
popl
pushf
ret
sub
jmp
lods
push
push
pop
shrl
xor
insl
imul
popa
pop
sub
inc
xchg
aam
movsl
dec
lea
subl
lea
int3
dec
enter
mov
or
iret
sbb
push
sub
pop
mov
xchg
adc
push
or
xor
jp
mov
sub
pop
es
sbbl
fistl
fcmovbe
filds
add
inc
and
or
xchg
xor
in
mov
aas
jae
and
mov
sarb
cld
xor
mov
dec
jmp
xchg
outsl
jo
xchg
push
js
sub
pop
shll
in
or
xchg
xor
inc
in
jmp
cmc
sub
push
sbb
test
test
loopne
data16
adc
push
and
xor
fisubs
inc
mov
or
dec
dec
inc
cmp
test
xchg
push
das
cli
pop
lds
movsb
arpl
pop
dec
scas
divl
xchg
fldenv
sar
fdiv
fcoml
mov
lret
loop
test
jae
cwtl
jecxz
cmpb
mov
call
repnz
test
push
lea
cmp
xchg
mov
ja
insl
adc
inc
inc
mov
dec
dec
add
push
sahf
mov
les
lds
iret
insb
int3
push
push
push
dec
aaa
cmp
shlb
lret
push
ja
in
rcrl
add
loopne
hlt
lock
pop
insb
sbb
repz
scas
push
rcrb
test
push
mov
fisttpll
jl
mov
dec
imul
les
and
jge
jns
xchg
jno
sbb
sub
cmp
addr16
adc
pop
shr
cli
scas
les
xchg
sbb
xchg
jae
vmulss
dec
jne
cmpsb
lret
mov
mov
notl
cli
inc
jbe
pop
dec
scas
add
lods
inc
xor
inc
lods
adc
push
cld
rorl
rcl
add
and
inc
fcoml
notb
stos
mov
jno
sahf
pop
xor
mov
inc
cli
xor
cmpsl
mov
jmp
sbb
mov
jno
mov
dec
rorl
push
jne
xchg
gs
pop
add
loope
sub
pop
xor
pop
pop
scas
adc
pop
xchg
paddq
std
sbb
stos
mov
push
xor
push
push
jmp
pop
xor
aam
sub
mov
or
nop
dec
sub
sub
sub
cmp
or
jl
arpl
sbb
daa
inc
mov
lods
fisubs
mov
mov
xchg
sub
xchg
jo
pop
xchg
fwait
mov
and
xor
lock
push
mov
bound
xchg
mov
sub
fwait
test
mov
sub
jo
mov
mov
and
cs
scas
mov
je
mov
pop
xor
pushf
test
in
push
xchg
mov
adc
mov
pop
into
in
push
loop
ss
cmp
mov
addr16
insl
sbb
mov
std
ficoms
xor
jb
jae
arpl
mull
rcl
xchg
push
sub
jnp
push
sbb
fistl
dec
jl
repz
loope
add
adc
push
sub
jne
sarl
sbbb
push
ficomps
mov
xor
cli
andb
push
pop
pop
popa
fmull
xlat
xlat
mov
cli
test
int
xchg
insb
xchg
fcomi
mov
adc
cmp
or
cs
push
inc
fcomp
adc
addr16
dec
inc
rcrb
inc
test
xchg
mov
in
jge
mov
lahf
test
test
clc
inc
aam
mov
loopne
fnstenv
data16
sarb
dec
outsl
aad
mov
pop
ret
xchg
adc
je
popf
fidivrl
xchg
mov
clc
jecxz
and
loopnew
fistpl
add
adc
aad
sbb
jo
rolb
int3
lds
mull
pop
cmp
and
stos
cmpsb
out
xchg
jg
in
out
ror
in
mov
std
inc
jle
cltd
mov
xor
loop
shlb
push
dec
jno
pop
push
push
ss
mov
shl
repz
adc
jnp
arpl
sub
jbe
in
mov
out
and
incb
pop
cmpsb
cmp
cs
sbb
dec
movsb
outsl
movsl
or
mov
addr16
xchg
andl
lret
fcmovne
push
fildl
or
jmp
cwtl
loop
test
fcomps
xor
scas
in
dec
cwtl
cwtl
xchg
mov
sbb
cmp
in
and
mov
imul
idivb
xchg
les
sub
adc
mulb
xchg
pushl
outsb
mov
shll
jbe
or
pusha
push
and
adc
xchg
jne
xor
xchg
mov
popf
cmp
sbb
pop
aad
aas
pop
pop
jmp
fwait
cmp
test
or
xlat
add
lods
sbb
bound
sub
push
loope
push
xor
ljmp
pop
fwait
sub
push
loope
orb
sbb
fcmovbe
int3
mov
inc
push
gs
adc
out
mov
xor
xchg
add
sar
shld
rcr
sbb
sub
rol
shld
inc
call
xor
pusha
xchg
jmp
movl
push
movb
lea
jmp
cmp
jmp
push
test
cmp
pushf
push
lea
je
pusha
stc
jmp
push
pushf
push
inc
lea
pushf
push
lea
call
pusha
jmp
mov
aaa
mov
mov
inc
pushl
jl
lea
ja
lret
fwait
dec
imul
outsb
mov
xor
mov
fwait
mov
nop
imul
adc
or
ret
nop
fists
out
pop
push
int
leave
inc
aas
mov
and
je
rcrb
jge
pusha
lcall
inc
add
jae
testl
cltd
or
and
and
or
mov
outsl
cltd
out
cmpsb
pop
das
add
xor
xchg
jbe
cmp
sub
js
je
mov
packsswb
stos
sti
xor
push
ror
dec
dec
ret
or
icebp
fsub
arpl
or
sub
add
jmp
call
xchg
push
pusha
movl
movw
pushf
jmp
bt
or
push
pushf
pushl
lea
je
lea
lea
mov
lea
pushf
mov
lea
mov
jmp
loop
popa
out
pusha
xor
shll
mov
cmp
rorl
xchg
mov
pop
cmp
jnp
lahf
dec
gs
mov
sub
sub
or
mov
or
cld
jnp
or
mov
xor
scas
and
lea
cmp
les
test
jo
add
add
inc
gs
outsl
fs
gs
imul
add
test
das
cld
jmp
pushf
lea
jae
dec
push
inc
not
mov
pushl
inc
pushf
pusha
call
lea
je
push
bswap
jmp
movzbw
lea
lea
movzbw
movzwl
call
mov
pusha
pushf
pushf
pushl
ret
push
jge
out
pusha
addr16
fmuls
lret
or
stos
loope
sbb
mov
rcll
pavgb
mov
or
xchg
sbb
stos
insb
aad
stc
cmp
dec
inc
mov
mov
add
js
mov
out
xor
lea
jne
bsr
jmp
and
out
pusha
addr16
sbb
fdiv
in
in
xor
inc
xlat
cmp
ja
in
sub
out
add
out
daa
arpl
jb
xchg
pop
inc
ss
shll
insl
rcl
xor
sbb
ror
jb
jecxz
test
movsl
mov
mov
divb
bound
fsubl
xor
push
push
into
leave
movb
movb
add
cmp
pusha
pushl
call
movl
pusha
push
movl
pushf
lea
jmp
pusha
cmp
pusha
sub
call
dec
clc
btc
push
pusha
movw
lea
movb
sub
dec
bsf
lahf
movzbl
push
jmp
bt
clc
or
pushf
pushf
pusha
lea
je
add
das
sbb
sub
dec
push
dec
mov
test
mov
cmp
shr
lea
lea
btr
cmc
btr
mov
bt
cmc
call
add
imul
dec
or
cld
xor
dec
pop
lds
dec
std
sub
dec
ret
bound
daa
pop
loopne
pusha
jp
xchg
sub
into
xchg
mov
push
test
imul
mov
js
pop
inc
rcll
add
int3
dec
xlat
sbb
jmp
xor
mov
cli
cmpsb
dec
jnp
mov
mov
cmp
adc
pop
mov
and
loop
in
stc
mov
stc
test
test
call
outsb
arpl
addr16
sbb
lea
lock
push
or
pushf
insb
xchg
mov
mov
mov
ja
repz
pop
cmpsl
out
mov
sbb
dec
add
push
push
xor
pop
mov
inc
cwtl
cld
int3
mov
and
fidivrl
pop
xchg
ss
mov
cmc
fs
aaa
pop
mov
das
repz
movsb
in
insb
addr16
xchg
jb
jge
lds
ljmp
out
shl
push
sbb
test
inc
cmp
lods
and
lea
lcall
xlat
lea
jne
jmp
cmp
sbb
pusha
addr16
loop
leave
sti
xor
sub
lcall
std
pop
xchg
call
fsubl
test
out
ja
dec
out
mov
fistpl
cli
or
jns
adc
loopne
movsb
pop
mov
pushf
cmpsl
and
aad
aam
cwtl
dec
pop
add
push
mov
js
mov
lret
sbb
outsl
xor
frstor
mov
mov
lahf
rcrb
pop
jp
lods
daa
xor
pusha
addr16
fs
push
mov
je
pop
xchg
dec
pop
inc
add
mov
out
xchg
ds
mov
aam
rorb
mov
bound
daa
js
rolb
decl
or
sbb
mov
inc
sbb
in
fs
push
rolb
add
or
je
xchg
repnz
loop
shr
xor
add
not
pushl
mov
lods
movl
call
xor
and
and
cmp
and
add
cwtl
je
test
mov
dec
bound
adc
cs
push
or
add
or
mov
in
js
addr16
sub
test
fcmovnb
test
in
dec
dec
aam
adc
mov
mov
push
pushf
clc
sarl
ljmp
pusha
cwtl
int
mov
xchg
adcl
ret
test
out
jbe
dec
bound
les
cmp
stos
jecxz
push
outsl
and
shlb
add
cltd
in
jp
fldcw
dec
mull
push
mov
leave
inc
mov
fwait
nop
mov
fs
jne
pusha
pop
lea
movsbw
movb
lahf
call
pushf
lea
call
call
into
stc
xor
pusha
addr16
push
push
dec
mov
mov
lods
and
add
push
std
fs
fstl
inc
js
arpl
enter
addl
popa
jge
lret
dec
mov
jns
add
pop
pop
test
sub
hlt
adc
inc
jno
rorl
cli
jbe
push
pop
rolb
cmp
shr
push
sti
cmc
lea
or
test
sbb
add
enter
stc
jae
adc
mov
enter
lcall
adc
or
pusha
jmp
lods
cmp
jmp
jmp
lea
jbe
dec
add
pushf
add
mov
bsr
pushf
shr
bt
add
btc
mov
pusha
not
stc
add
sete
cmc
mov
movl
xor
xor
shl
mov
add
pushf
call
lea
jne
xor
shl
mov
rol
sub
btr
shl
mov
cmc
test
cmc
sub
call
movl
mov
pushl
popl
push
pushl
ret
jmp
lea
je
sbb
add
rol
rcl
movzbw
sub
ror
sub
shr
and
mov
shrd
add
neg
xor
bsr
add
neg
ror
mov
jnp
test
clc
cmc
shr
jmp
cwtl
mov
lea
lea
call
shr
xchg
mov
call
icebp
out
out
addr16
sbb
pop
cmp
jp
cmp
idivb
icebp
clc
loope
shrl
pop
ds
adc
scas
insl
inc
shlb
inc
test
into
and
jmp
mov
mov
pusha
test
push
add
mov
fnstcw
inc
xor
inc
aad
cli
sahf
mov
imul
pop
movsb
mov
mov
sub
and
mov
cmp
and
in
data16
jge
push
ss
mov
rcrb
into
sbb
add
rorl
rorl
add
cmp
addr16
dec
push
xchg
push
lcall
nop
icebp
add
les
outsb
mov
mov
jae
jnp
addr16
xchg
lret
and
test
fs
or
testb
pop
inc
ret
dec
imul
ret
or
inc
jo
pop
ficoms
test
sarl
into
adc
scas
add
add
sbb
ja
mov
test
mov
mov
scas
subb
loop
push
shrl
sub
mov
test
in
and
loop
leave
mov
and
or
push
dec
mov
data16
xor
cmp
lcall
push
mov
mov
adc
add
jo
addl
clc
fidivl
movsb
mov
jnp
sbb
mov
cli
pop
lret
xor
fsubs
xchg
push
xor
inc
cwtl
call
pop
push
lret
mov
stos
int
ljmp
mov
push
lea
jb
test
clc
cmp
pushf
pushl
lea
jae
pusha
xchg
mov
pushf
lea
mov
call
jmp
jmp
pusha
pushl
ret
loope
pusha
addr16
xchg
inc
jns
outsb
mov
cmp
lcall
cmp
test
jg
int3
push
and
dec
js
pop
sarl
mov
cmp
mov
pushf
mov
icebp
imul
sbb
push
cmpsb
sbb
sar
push
scas
arpl
jl
jae
out
fs
mov
pop
loope
ret
test
jmp
mov
iret
push
test
jg
fwait
aad
movsb
and
jmp
in
sbb
decb
andl
add
add
xor
and
jne
jmp
add
test
pushf
test
call
mov
cmp
push
call
setno
pushf
cwtl
movsbl
mov
pusha
bswap
call
clc
jmp
jmp
xchg
push
pusha
addr16
xchg
push
or
movsb
scas
cwtl
ror
nop
icebp
push
inc
sbb
out
push
and
mov
sub
into
and
cmpsl
jp
adc
lock
pop
pop
adc
add
jb
arpl
cmp
mov
dec
test
xor
repnz
mov
ljmp
cltd
fcomps
inc
sti
xor
mov
jl
jle
test
shll
ljmp
clc
mov
cwtl
int3
movsb
pushf
std
mov
es
fadds
xchg
xchg
mov
fwait
pop
adc
fistps
lret
lods
jne
inc
pop
rcl
jl
inc
cmp
and
xor
movb
pushl
ret
bt
shl
not
lods
jmp
lea
je
jmp
adc
jmp
bt
cmc
or
jmp
pushf
xor
bt
cmp
test
pushf
neg
test
jmp
call
pushl
popl
pushf
pushl
ret
push
bt
cmp
pushf
jmp
push
cmpb
pusha
mov
jmp
lahf
pop
movl
lea
bswap
cwtl
not
mov
movl
jmp
xchg
lea
les
jmp
in
fcoms
xchg
mov
mov
lcall
fs
fucomip
dec
xchg
test
dec
xchg
sub
and
add
nop
arpl
cltd
bound
mov
jns
lock
push
cmc
mov
mov
aaa
iret
xchg
dec
jns
xchg
jmp
iret
push
mov
mov
dec
aas
mov
mov
addb
daa
pop
mov
in
call
wbinvd
adc
pusha
addr16
jne
ljmp
scas
scas
mov
jbe
inc
xorb
mov
xor
outsl
mov
fadds
shrl
test
ret
xor
dec
inc
jecxz
mov
aaa
mov
jo
jne
int
adcb
loopne
aad
enter
xor
ret
in
mov
mov
jl
cmpsb
scas
loop
addr16
pop
push
adc
or
je
pop
adc
shrb
xor
push
cltd
shlb
and
jns
adc
lods
test
pop
pop
lcall
movsb
xchg
lcall
shrb
cli
xlat
aam
lret
inc
inc
push
popa
xlat
xchg
push
stc
pusha
loopne
in
clc
push
daa
lahf
xchg
test
jp
outsl
in
push
outsl
cltd
ljmp
pop
ja
cmc
pushf
pushl
ror
cmp
sub
jmp
lea
call
push
jmp
ror
stc
cmc
sub
jmp
movzwl
rcl
btc
mov
clc
pushf
add
cmp
stc
clc
jmp
loope
inc
loop
addr16
fwait
push
lea
outsl
sub
es
xchg
imul
jge
nop
xor
fisubs
hlt
les
xchg
xchg
divb
mov
repnz
push
jecxz
sbb
cli
jge
xchg
and
leave
xchg
daa
addb
sbb
push
dec
jp
jbe
and
lret
orb
inc
cmp
andb
loopne
outsb
dec
clc
mov
insb
mov
push
push
rorb
mov
cmp
push
push
rcrb
jo
dec
dec
mov
shl
sets
lods
pushf
neg
push
cmc
clc
xor
cmc
cmp
neg
push
pushf
call
mov
xor
pusha
addr16
nop
movl
ficompl
sarl
xchg
inc
in
aaa
aas
and
test
jmp
pop
cmpsb
repz
jae
pop
push
sbb
aam
sub
mov
stc
repnz
cmp
push
stc
rol
push
fldl
push
mov
mov
shlb
sbb
pop
cmpsb
inc
addr16
fadd
insb
cld
and
xor
xor
test
in
mov
mov
add
push
ss
and
shl
mov
xor
into
int
mov
dec
ja
pop
xchg
mov
outsl
scas
call
pop
adc
shrl
shll
pop
xchg
insl
out
lea
int3
inc
push
xor
popl
sbb
mov
aad
mov
filds
jno
jmp
pushl
mov
movw
lea
jmp
int3
popf
pusha
call
push
sub
lea
jmp
pushf
add
movw
lea
jmp
jo
push
loopne
addr16
hlt
stos
pusha
sbb
dec
xorl
leave
cmpsb
idiv
mov
dec
fdivs
inc
sub
mov
cmp
lahf
jno
push
fdivrs
shll
test
xchg
push
insb
lods
sti
cmp
inc
insl
pop
sub
xor
push
mov
inc
cmpsl
sbb
jo
fcmovnbe
mov
in
aas
jmp
bound
test
push
sub
mov
pop
xchg
in
jmp
dec
lret
sub
ss
ljmp
addr16
ss
mov
mov
es
pop
push
icebp
jb
fists
push
arpl
out
jmp
sub
xchg
fldt
add
insb
int3
sahf
mov
xor
aad
dec
inc
mov
sbb
clc
sbb
outsl
xchg
not
mov
cmp
call
popf
rdtsc
nop
push
jmp
pushf
bt
cmp
call
movl
pusha
pushl
push
lea
jmp
lea
ja
jmp
push
push
pusha
mov
call
scas
xlat
adc
pusha
loopnew
inc
sti
xor
gs
push
adc
std
cmp
jl
adc
or
mov
movb
push
jbe
jmp
pop
push
lret
cmp
rcl
setge
mov
seto
rol
add
seta
bsf
rol
push
mov
rcr
rol
sub
add
dec
inc
movl
neg
mov
stc
mov
mov
cmp
pusha
call
pusha
movl
movl
movl
movl
jmp
not
mov
mov
push
jmp
pusha
mov
mov
pusha
pusha
pushf
lea
jmp
call
addr16
fdivp
in
mov
sbb
push
daa
xchg
inc
xchg
in
push
mov
xchg
xor
sbb
xor
imul
sub
mov
cltd
sbb
imull
popf
mov
mov
add
push
mov
jno
enter
js
adc
gs
cmp
pop
adc
das
lds
mov
pop
incb
adc
push
pop
push
rorb
pop
mov
fisttpll
cmp
dec
out
icebp
mov
pop
adc
out
adc
sbb
ss
int3
stos
dec
cmc
and
add
sub
mov
xlat
push
enter
mov
insb
pop
aas
gs
cltd
frstor
test
mov
push
or
stos
sub
xchg
sti
movsb
aam
out
lret
je
in
jg
adcb
xchg
push
stos
cmc
and
push
rcrl
out
shrl
in
dec
fs
mov
scas
int
xor
stos
fdivp
sub
sub
jecxz
scas
mov
aas
out
das
pop
and
lods
adc
jb
xor
mov
imul
xor
clc
jle
sbb
subb
push
lahf
stos
mov
jns
cwtl
sbb
imul
mov
add
inc
stos
pop
push
sbb
fisttps
outsl
cmp
cmpsb
icebp
cmp
dec
inc
mov
xchg
xchg
or
sbb
outsl
mov
mov
pop
and
sets
lahf
not
lea
pusha
call
mov
mov
jmp
pushf
lea
je
pusha
pushf
pushf
push
mov
lahf
mov
bswap
lea
movb
mov
movl
pushl
jmp
cmc
bt
xor
jmp
mov
not
mov
pop
mov
pushf
pushf
jmp
pushf
lea
je
pusha
pusha
stc
bt
sub
jmp
call
push
mov
pusha
mov
movzbw
movzbl
pop
push
pushl
ret
test
push
cli
scas
bound
div
mov
cmp
jb
xor
dec
popa
dec
cmp
sbb
ret
out
sbb
push
hlt
push
push
rcl
jae
subb
in
dec
adc
xchg
push
xor
mov
nop
mov
stos
cs
sbb
sbb
and
adc
imul
push
jecxz
mov
lea
jmp
push
call
mov
pushf
jmp
neg
cmc
pushl
stc
rol
pushf
call
pushf
push
lea
ja
pusha
not
inc
dec
jmp
pusha
push
test
clc
sub
clc
test
cmp
pusha
pushf
mov
push
lea
jae
pushf
pusha
mov
lea
jmp
call
lea
jmp
cmpb
pushf
lea
jno
pusha
pushf
lea
jne
movsbw
sub
inc
shr
lahf
mov
pusha
sub
not
add
sub
mov
bt
cmc
cmp
test
pushf
lea
je
pusha
clc
sub
stc
pushf
cmc
clc
cmp
pushl
lea
ja
stc
imul
clc
push
pusha
bt
add
push
movw
lea
jmp
push
call
test
cmp
push
pushl
jmp
imul
neg
pusha
addr16
imul
lea
ja
push
xchg
rcl
sahf
cmpsl
repnz
ret
pop
out
mov
pop
adc
cmp
cmp
jns
clc
sbb
aaa
adc
sbb
jbe
flds
lock
int3
pop
mov
cld
xchg
and
icebp
jmp
jmp
pop
jmp
sarl
inc
sbb
imul
inc
pop
mov
dec
insb
add
xchg
fnstenv
jp
push
mov
and
push
gs
push
out
push
mov
fsts
mov
mov
not
pop
pushf
movb
pusha
pushf
pushl
ret
pushf
bt
sub
push
movl
lea
call
jmp
das
sub
fldenv
frstor
xlat
or
into
mov
daa
push
push
sub
popa
and
cli
xor
pop
or
sub
outsl
call
cmp
loope
push
insb
pop
or
adc
ret
call
pusha
call
push
mov
jmp
fadds
cmp
pusha
addr16
push
xchg
daa
push
vmwrite
out
mov
cmp
dec
add
push
mov
rcrl
lds
inc
scas
jmp
out
pop
es
mov
sbb
pop
pop
ljmp
adc
shr
sahf
imul
rorb
cmp
jecxz
arpl
pop
inc
mov
loope
pusha
pushf
pushl
popl
pushf
pushl
pushl
ret
lea
call
pusha
movb
mov
mov
pusha
lea
jmp
bt
pusha
clc
pushl
neg
call
jmp
call
pusha
pusha
lea
jne
jmp
movl
pusha
movl
pushf
pusha
lea
jmp
jmp
push
add
test
jmp
cmp
cmp
jmp
call
lea
mov
jmp
jmp
mov
lea
bswap
movzbw
mov
movsbw
mov
call
mov
pushf
pushf
pusha
push
mov
pushl
lea
call
pushf
mov
pushf
mov
pusha
lea
jmp
pushf
lea
jne
call
movl
mov
push
jmp
jmp
sub
bt
call
lods
push
xchg
xlat
pusha
addr16
or
repz
mov
lods
mov
dec
inc
mov
daa
xchg
push
sar
in
into
mov
sti
outsl
dec
scas
jne
cs
mov
mov
xchg
and
aad
mov
gs
push
mov
xchg
xor
sbb
adc
jb
pop
shr
jns
sub
repz
sbb
rolb
into
aas
or
fidivs
xchg
adc
icebp
jnp
cmp
pop
dec
lods
cltd
xchg
pop
pusha
xchg
in
jbe
leave
out
sbb
add
sub
imul
cltd
jg
mov
jl
jae
fisttpll
lea
add
fsubp
cmp
sbb
jbe
mov
pop
in
aas
adc
rclb
sbb
pop
out
sbb
inc
mov
lea
mov
jecxz
addr16
fcomps
sub
adcb
mov
pop
jge
xlat
aam
stc
cld
xchg
adc
jp
adc
push
xlat
fadds
xchg
mov
xchg
stc
jne
sahf
mov
sarb
loopne
cwtl
clc
xor
xor
push
sahf
xchg
xor
mov
or
and
out
or
sub
inc
cmpsl
movsl
dec
scas
cwtl
dec
mov
jmp
jg
pop
push
mov
subl
mov
sti
insb
mov
into
sub
jb
sti
or
push
jbe
sbb
lret
lcall
pop
dec
sarl
pop
adc
punpckhdq
les
test
addl
shrd
cwtl
sub
pusha
setnp
push
movzbw
mov
movb
pushf
lea
jmp
jmp
mov
xchg
aad
add
sub
in
cmc
lret
mov
cmpsb
mov
cmp
adc
xor
cmpsl
gs
rorb
std
test
into
inc
lods
int3
adcl
cmp
test
jbe
ja
or
shrb
leave
push
adc
fnstsw
icebp
repz
mov
nop
xor
pop
in
jg
inc
std
xor
outsb
dec
inc
pop
imul
jp
inc
popf
outsl
ljmp
sti
push
into
les
lods
sub
cltd
adc
cmpsb
stos
mov
loopne
sbb
insl
adc
cmpl
mov
push
repnz
arpl
int
testl
jg
mov
mov
neg
inc
cwtl
mov
mov
adc
ljmp
jle
das
cmc
pop
add
cmp
adc
into
int3
mov
and
int3
mov
pop
xor
xchg
outsl
mov
push
or
mov
mov
jg
imul
pop
repnz
jns
push
jns
fwait
adc
or
mov
repz
add
faddl
sub
popf
push
lock
dec
not
pop
and
stos
scas
push
cmc
rcrl
adc
cmpsb
in
pop
not
pop
addr16
cmp
iret
leave
rcl
pusha
addr16
cld
mov
mov
inc
ja
jmp
outsl
push
xchg
sahf
test
sub
mov
mov
adc
fidivrl
mov
xchg
mov
loopne
fcompl
mov
dec
mov
je
or
add
mov
clc
cmc
test
test
and
cmp
pushf
add
sub
jmp
jmp
cmp
addr16
stos
mov
cmp
push
adc
push
lahf
sbb
jg
lods
jecxz
sahf
enter
cmpsl
sub
push
gs
pop
lcall
fdivs
fisubrl
mov
inc
inc
lret
lcall
arpl
and
in
pop
cltd
mov
push
cmpsb
lret
push
shlb
andb
jns
adc
enter
in
stos
cmp
and
push
scas
scas
xor
lret
scas
push
inc
xchg
xor
lds
pop
out
inc
aam
aas
test
in
push
or
mov
das
ljmp
sub
leave
xchg
cld
adc
ret
push
out
ret
or
test
imul
stos
rorb
and
cmp
jecxz
movl
pop
mov
shl
mov
mov
pop
sub
sbb
mov
push
and
xor
dec
jge
add
pop
mov
int
enter
add
fstl
add
movsb
jp
loope
std
pop
xchg
pop
stos
and
outsl
aad
test
push
push
mov
fsubrl
ja
xorb
push
jecxz
push
int
mov
mov
loopne
add
jmp
cmp
pushf
push
pushl
lea
je
pusha
pusha
movb
lea
jmp
call
mov
push
mov
movzbl
lea
pop
mov
lea
jns
mov
bswap
movsbw
pop
pushf
pusha
push
pushf
pushl
ret
inc
mov
pushf
inc
push
pusha
lea
jmp
pop
xchg
shll
imul
xchg
lret
test
je
out
lods
out
add
mov
xor
lods
clc
scas
cmp
mov
mov
push
push
rolb
add
or
sbb
sub
cmpsb
std
rep
in
xlat
into
inc
mov
mov
je
lods
push
cmpsb
pop
pop
xchg
imul
fcomps
inc
jbe
mov
loope
fsubp
aas
stos
shll
push
popf
mov
xor
pop
add
aad
ret
and
add
loopne
mov
dec
xchg
inc
insb
lret
aam
aam
dec
popl
out
popf
sbb
adc
dec
push
dec
jecxz
or
out
pusha
jno
dec
sbb
call
fwait
loope
dec
insb
pop
mov
fidivl
lea
pop
and
mov
jle
repnz
pop
push
and
dec
xchg
cmp
cs
aas
or
repnz
jnp
imull
loop
imul
pop
ficoms
adc
into
xor
loopnew
divb
add
loopne
xchg
sti
xchg
pop
out
mov
jg
jae
loop
jno
cld
push
push
ja
mov
int3
dec
rorb
ret
xchg
add
push
jecxz
movsb
or
cmpsl
mov
cld
dec
sub
bound
xlat
mov
pop
and
mov
jecxz
movsb
mov
outsl
sbb
shrb
sub
or
cwtl
arpl
lcall
adc
mov
or
sub
mov
push
addr16
cli
mov
mov
loopne
popf
mov
testl
cmp
mov
cwtl
jmp
sbb
test
jnp
jp
jo
or
clts
xchg
jl
mov
pusha
push
and
sbb
xchg
ja
ret
lret
enter
pop
lds
out
mov
aam
out
aas
leave
xor
pop
inc
insb
incb
insb
mov
cli
jae
out
imul
enter
sbb
jmp
aam
fdivr
movzbw
xor
pushf
mov
stc
rcr
add
pushf
adc
clc
rol
mov
test
test
call
pusha
lea
jne
movsbw
mov
bt
call
lea
je
not
add
lea
adc
cmc
mov
push
mov
add
test
mov
adc
btr
lea
jle
mov
pusha
cmc
movb
pushl
cmp
movb
jmp
setp
setp
sub
not
push
pushf
stos
setge
not
mov
pushf
jmp
push
lock
std
std
mov
xchg
imul
jl
enter
bound
pushf
mov
pop
pop
ss
mov
jo
in
sub
cmpsl
and
aam
pop
lret
add
out
fldcw
test
cmp
xchg
xor
and
or
movsb
push
cmc
add
enter
mov
sbb
inc
call
adc
adc
pusha
addr16
stc
das
call
xchg
add
aad
push
xchg
jo
sahf
inc
add
stos
sub
popa
mov
lret
dec
pop
scas
mov
clc
jecxz
shrl
push
popf
scas
mov
jl
push
xlat
enter
fwait
push
jl
pop
repnz
dec
shll
mov
cwtl
pop
mov
in
or
mov
outsb
fldt
lret
cmp
sub
sbb
jmp
xor
clc
jmp
ja
fmul
pusha
addr16
stc
mov
nop
jb
jbe
inc
jge
aam
pop
sub
mov
stos
adc
in
rolb
mov
ljmp
mov
lret
mov
lcall
in
das
clc
mov
pop
loop
mov
sub
mov
imul
stos
pop
sub
or
push
jae
sub
je
jnp
xchg
push
inc
pop
push
imul
les
xlat
push
stos
roll
mov
insb
lcall
sti
and
xchg
xchg
xchg
push
mov
imulb
shrl
cmp
xchg
push
add
inc
and
jle,pn
add
add
or
test
inc
call
stc
pusha
pushl
add
sub
pusha
movb
call
movl
pushl
jmp
push
jmp
clc
call
outsb
fwait
aad
pusha
addb
jp
ljmp
dec
cmp
xor
adc
les
popf
nop
in
lcall
jns
jno
ret
inc
gs
sub
loopne
movsl
jmp
push
arpl
mov
cltd
imul
sub
adcb
stos
rcl
je
std
pop
rolb
xor
jle
and
fs
cmpsl
movsb
pop
stos
pushf
pusha
lea
jmp
pushf
movb
stos
setns
mov
pushl
call
push
lret
pusha
addr16
xor
cmpsl
loopne
rolb
xchg
mov
adc
adc
hlt
xor
inc
faddl
cmp
insb
cwtl
inc
mov
jne
jecxz
pop
pop
dec
inc
mov
push
add
pop
lock
sti
call
call
jmp
lea
jae
push
pushf
lea
jne
pushf
movw
pushf
stos
pushl
movw
push
pusha
lea
jmp
stos
pushf
mov
lea
jmp
call
sub
lret
pusha
addr16
lds
cmp
sub
testb
es
adc
cwtl
imul
lds
loop
push
nop
dec
jle
xchg
or
or
and
call
loop
jge
sbb
mov
das
lea
inc
mov
push
out
add
stos
cmc
add
jne
cld
pop
out
lret
mov
sub
and
insb
jns
jmp
gs
cmpsb
repz
pushw
std
cmp
pop
jno
inc
mov
out
xchg
fiadds
cmp
push
mov
pusha
imul
push
jmp
xor
cmpsb
pop
sub
movsl
mov
xchg
cltd
xor
mov
movsb
jle
lcall
lods
adc
push
std
ljmp
hlt
push
es
sub
ljmp
sub
xchg
pop
push
dec
xorb
cmpsb
jmp
xor
jle
dec
xchg
fbstp
js
jnp
adc
push
nop
or
ja
je
lock
jle
sbb
out
adc
bswap
pusha
addr16
hlt
sub
cwtl
rcll
enter
sub
mov
sub
mov
sub
mov
mov
push
inc
push
pop
imul
cmp
loope
or
mov
fidivs
xchg
or
std
js
outsl
xchg
pop
scas
cmpsb
sbb
mov
dec
push
aas
jbe
and
les
xchg
int
loope
test
add
in
sub
test
outsl
rorl
mov
int
xchg
xchg
repz
adc
pop
push
and
inc
push
aas
jge
popf
pushf
pop
adc
cli
xchg
mov
lods
sbbb
leave
pusha
addr16
inc
sti
aaa
jno
ss
jnp
jmp
push
inc
pop
jl
sub
push
cmp
mov
push
adc
mov
jns
out
xchg
mov
jecxz
xchg
js
movsb
sub
inc
cmp
jae
mov
gs
xor
mov
push
aam
add
fmull
inc
jnp
out
andl
cmp
push
shrl
or
mov
aas
cs
ror
mov
add
test
pop
aad
mov
mov
stos
es
imul
pop
in
jb
xchg
pop
daa
push
push
sbb
es
stos
cmp
repnz
int
lock
xor
push
inc
cmp
add
lock
fistl
jl
mov
les
leave
sbbl
xchg
mov
dec
aaa
fistps
les
pop
das
loop
mov
mov
out
jmp
or
xchg
cmp
test
add
stc
clc
jmp
sub
sub
pusha
addr16
ficoml
lret
jno
out
xlat
xchg
lret
jl
dec
shll
ds
enter
mov
xor
pop
imul
aad
sbb
fldt
jmp
xor
movsb
sahf
xchg
mov
in
cmp
mov
int
pusha
movsl
dec
mov
push
xchg
cmp
inc
pushf
arpl
mov
je
xlat
cmpsl
popa
cmp
mov
fisttpll
or
jo
daa
js
mov
jg
das
pushl
outsb
out
push
dec
sarb
sbb
shrb
and
pushf
call
push
movl
push
pusha
push
mov
movl
pusha
pushl
pushf
pushl
lea
jmp
add
sbbl
add
add
add
add
mov
jne
add
jne
add
add
add
add
jne
add
stos
dec
xor
mov
cmc
test
mov
cmp
jnp
and
cmc
mov
iret
xor
jb
xchg
adc
lret
push
stos
out
push
sub
inc
mov
div
jmp
sbb
bound
jge
inc
scas
inc
daa
cmp
imul
sbb
ja
or
adc
into
cmp
jle
cwtl
ficompl
cmp
pop
jp
jnp
and
loope
rclb
pusha
mov
sbb
test
jnp
mov
out
lahf
jb
pushf
pop
xchg
lock
cltd
xchg
pop
in
mov
and
js
mov
cli
in
inc
cmp
loopne
insl
ror
adc
xchg
sub
pop
icebp
addr16
outsl
mov
cmp
add
les
in
sti
cmpsb
sbb
cmp
push
jne
scas
pop
xchg
fldl
push
add
faddl
xlat
and
mov
lret
xchg
cld
adc
xchg
sbbl
sub
shlb
add
sbb
push
clc
cmp
repnz
mov
fildll
jmp
decb
adc
aaa
jl
out
movsb
hlt
and
orl
loopne
leave
je
mov
orb
sub
jnp
dec
mov
outsb
xchg
fmulp
cmp
xchg
das
cltd
and
xchg
xchg
xchg
inc
mov
cmpsb
jae
outsb
xchg
decb
and
mov
push
int
loope
movsb
call
movsl
mov
xchg
outsb
sbb
cmp
stos
fst
mov
push
dec
in
imul
incl
popa
jb
fcmovne
mov
adc
jecxz
pop
in
stos
mov
sbb
pop
repnz
test
cmpsb
ja
int3
jmp
xor
inc
lock
sti
or
lock
test
cs
xchg
jnp
cmpl
cmp
jb
and
call
out
adc
sub
xor
lahf
push
sub
imul
xor
loope
repnz
mov
push
and
push
in
sub
out
scas
dec
lds
dec
js
aam
popa
inc
add
sbb
das
or
mov
shrl
outsl
xorl
sbb
js
fcoms
int3
jno
jo
add
test
popa
cmpsb
fnstsw
in
fwait
push
movb
out
sar
sahf
icebp
fcomi
and
adc
loope
jns
cmp
dec
fsubrs
out
movsl
lods
inc
pusha
repz
clc
out
leave
in
xor
shlb
movsl
mov
les
adc
repnz
pxor
jecxz
sub
mov
mov
push
lcall
sbb
cltd
outsb
xor
jg
push
jle
inc
mov
jne
fstps
in
out
cmpsb
xchg
repz
insl
cli
sub
cmp
mov
lds
push
loope
push
addl
sbb
cmc
adc
pop
lret
fdivr
mov
xchg
cmp
push
sbb
lods
inc
arpl
ljmp
mov
push
mov
lods
inc
leave
fmull
adc
fwait
repz
addl
pop
shr
mov
dec
out
mov
popa
call
movsb
cmp
in
shl
in
add
pop
into
cld
mov
push
mov
cmpsb
loope
test
or
mov
les
push
push
inc
mov
dec
repnz
cmc
stos
adc
or
or
js
cli
sub
lret
adc
xchg
jl
inc
clc
mov
pop
insb
jo
data16
push
add
lea
inc
popa
shlb
icebp
push
jne
and
outsl
outsb
pop
pop
arpl
fists
dec
jmp
add
mov
adc
test
jns
dec
gs
pmuludq
ret
adc
jl
dec
inc
call
hlt
mov
fistl
xor
sub
rcll
jne
movsl
lret
mov
pop
mov
nop
mov
xor
inc
andps
push
sar
cmp
jle
jmp
cmp
mov
push
lcall
inc
jae
jmp
cld
jg
pop
les
xor
sahf
cmpsl
fdivs
push
inc
pop
push
out
pop
stos
sti
or
mov
rcrl
call
cmp
xor
pop
movsl
mov
xchg
lods
lods
add
mov
inc
jle
cltd
cli
and
wbinvd
xchg
lcall
or
dec
mov
jecxz
pusha
jl
adcb
mov
mov
les
dec
and
push
jo
xchg
mov
ret
cld
and
andl
jno
sbb
sub
mov
loopne
xlat
sub
sbb
pushf
lret
test
xchg
push
cmp
clc
push
sub
xchg
and
xor
fwait
push
push
sarb
popf
xlat
nop
mov
je
flds
das
jb
iret
jecxz
je
rorl
mov
rol
mov
inc
jne
nop
jg
cmp
mov
addr16
pop
push
push
mov
cmc
add
dec
aas
js
dec
movsb
add
clc
sub
sbb
adcl
mov
lea
nop
outsb
fiaddl
add
subl
clc
movsl
sub
push
ss
jg
imul
pop
icebp
push
lds
mov
js
loop
jp
fdivrl
mov
sub
inc
xchg
int3
jne
in
xchg
fstl
add
xor
sbb
dec
or
mov
jmp
fisttps
negb
in
clc
push
jge
ficoml
jno
adc
mov
clc
push
mov
dec
sub
int3
shl
mov
xchg
xchg
xchg
es
and
xchg
je
mov
sahf
pop
sub
in
sub
gs
jle
xor
mov
rclb
sub
mov
btrl
jge
mov
cld
js
int3
jo
jo
fdivl
daa
push
enter
dec
push
ja
mov
out
aas
adc
es
sbb
enter
inc
sbb
int3
imul
int3
stos
out
cli
adc
mov
fbstp
mov
mov
addr16
iret
add
ret
jo
add
push
daa
shrl
int3
in
sbb
lfs
ficoms
aas
pusha
push
stos
out
cmp
out
dec
std
cs
add
jnp
aaa
fstpl
mov
ficomps
mov
popf
jge
push
xchg
fs
or
xor
xor
jp
cli
jle
or
jmp
imulb
fbstp
push
outsb
xchg
cltd
test
lcall
lock
lahf
sti
or
in
mull
xchg
dec
mov
sarl
sub
lods
sub
fs
cwtl
mov
xchg
or
loopne
inc
xchg
jle
xor
xchg
jne
sahf
gs
imul
push
repnz
dec
push
inc
cmp
sbb
or
sub
inc
inc
ret
mov
lds
aad
xor
push
cmp
xchg
bound
imul
xor
int
mov
rcll
push
and
and
pop
xchg
add
pop
scas
outsl
mov
sbb
pop
and
lahf
outsb
fwait
cli
mov
dec
jnp
cmp
cmp
cwtl
enter
pop
xor
dec
popa
xchg
jae
sub
mov
lahf
inc
rorl
cmp
in
jg
imul
mov
imul
push
out
mov
and
pop
inc
pop
cmpsl
jle
and
scas
and
shlb
xchg
or
std
fcoms
lret
inc
ret
dec
jge
movsl
dec
push
push
scas
sbbb
sub
data16
mov
outsb
inc
pop
and
sti
idivb
hlt
loop
inc
and
xor
es
popf
mov
fildl
into
pop
push
icebp
mov
fnstenv
push
fs
loop
and
sbb
or
push
adc
pop
add
xchg
ja
pop
testb
test
jecxz
push
dec
stos
je
das
or
and
in
lret
addr16
rolb
push
pusha
mov
test
fstps
repnz
jae
xchg
repnz
sub
xor
mov
sbb
cwtl
cmp
in
test
sub
imul
jae
jge
sarb
push
inc
mov
cmpsb
arpl
popf
stc
gs
roll
jne
mov
fst
pop
test
loopne
pandn
mov
jno
mov
mov
xchg
movsl
mov
sub
pushf
nop
mov
lcall
mov
pusha
push
sub
popa
mov
push
push
jmp
orb
sub
movsl
mov
fdiv
push
repnz
cmp
outsl
add
push
stos
xchg
shrb
das
pop
add
pusha
cmp
lods
pop
outsb
adc
sbb
sbb
outsl
lds
outsb
or
inc
pop
jl
lea
mov
in
jnp
mov
push
movsl
cld
hlt
fdivl
cld
pop
jg
cltd
fwait
aaa
dec
jne
xor
adc
push
mov
push
mov
xchg
xchg
aad
inc
dec
repz
mov
sub
xchg
or
ds
jo
push
loopne
test
push
add
jne
scas
and
push
mov
test
jl
rcrl
stc
add
lock
sub
or
mov
data16
in
ja
fildl
dec
push
insl
push
mov
cmp
pop
or
pop
in
mov
sub
sub
mov
lret
cli
fistpll
jg
jmp
sahf
or
dec
xor
xor
or
dec
into
cwtl
push
or
ret
push
loope
mov
scas
aam
adc
mov
inc
mov
jns
inc
insb
cmp
mov
and
outsb
imul
cmp
sbb
cmp
push
std
lret
mov
fldcw
mov
pop
push
jne
popf
add
fisubl
popa
and
andl
cmc
test
sub
push
jmp
mov
sbb
inc
pop
pop
pop
xor
mov
pop
test
push
pop
mov
stos
and
aaa
fs
mov
and
inc
jb
repnz
sub
xor
and
push
pop
mov
xchg
sub
adc
mov
scas
sbb
sbb
inc
push
mov
es
add
insl
fstpl
push
test
push
inc
in
ds
xlat
push
fwait
bnd
and
lret
pop
jnp
xor
mov
pop
gs
push
jb
outsb
imul
pusha
or
mov
lret
add
pop
adc
ror
push
cmc
mov
out
cld
fistpll
lock
or
sbb
in
add
add
stc
test
xchg
pushf
bsf
add
mov
pushl
sub
call
pushf
jmp
sub
cmp
jmp
lea
jne
pusha
bswap
pushl
mov
pushl
pushf
pushl
movb
lea
jmp
push
call
pushl
mov
pushf
cmpb
pushf
jmp
jno
cli
fwait
addl
cmp
cli
je
addb
xor
je
fwait
sbb
fwait
sti
cmc
add
fwait
je
sbbl
cli
jns
clc
je
xorl
cld
idiv
sti
fwait
jne
je
fwait
jne
jp
cld
addb
sbb
mov
add
jmp
pusha
pushf
cmp
pusha
lea
ja
clc
adc
call
mov
dec
pusha
inc
push
push
movb
mov
call
test
call
jmp
pusha
pushf
movl
call
lods
lock
inc
outsb
mov
jnp
in
and
add
fadd
push
shrb
xor
sub
xchg
push
into
scas
sbb
in
sub
push
lahf
jge
add
jns
xchg
mov
jecxz
add
fsubrl
sbb
daa
jmp
sub
push
lea
filds
mov
out
cmp
sbb
testb
in
jns
xchg
dec
inc
aad
cmc
gs
push
addr16
fimuls
stc
loopne
cld
lods
mov
pop
mov
es
aaa
xchg
xor
xor
rorb
jb
dec
bound
in
pop
xor
mov
inc
sti
sbb
mov
nop
movl
lea
mov
sqrtps
out
and
adc
jecxz
pop
shld
adc
xchg
push
mov
jg
in
pushf
lea
call
pushf
pusha
jmp
inc
and
jmp
call
jne
gs
xor
fs
insb
add
xlat
jmp
call
pushl
ror
cmc
sub
movb
pushf
stc
pushw
popfw
push
pushf
call
adc
btc
mov
call
call
add
pusha
test
cmp
pushf
pushf
lea
jb
cmc
stc
pusha
cmp
pushf
pusha
lea
jae
xchg
pushf
call
cmc
out
bound
and
xlat
insb
push
jae
push
pop
fwait
aam
test
sub
jne
cmpsl
ja
out
imulb
daa
movsl
test
stos
out
out
push
cli
out
ja
adc
gs
xor
rorl
jae
or
bound
mov
add
adc
pop
cwtl
in
pop
ljmp
scas
in
adc
push
push
out
cmpsb
repz
pop
adc
out
and
and
lcall
push
popf
iret
inc
clc
or
cmp
cltd
jbe
fstpl
xor
mov
inc
mov
xchg
ljmp
or
popf
dec
xchg
push
aas
leave
loopne
sub
daa
sbb
cmp
pop
jmp
sbb
cmp
adc
xchg
ret
pop
leave
out
jae
movsl
insl
lock
pop
xor
std
add
sbb
pop
xor
jb
or
mov
je
push
out
imul
scas
daa
notb
stc
jo
jl
mov
jns
imul
jge
mov
fcmovne
sub
adc
lea
cmpsb
xor
pop
imul
lods
movhps
fldcw
or
fistl
daa
movsb
imul
es
int3
hlt
popf
cmp
scas
pop
mov
push
xor
add
and
gs
pop
adc
xlat
lahf
aaa
and
dec
test
sub
pop
sbb
lods
pop
cmp
loopne
aas
pusha
jns
imul
jmp
addr16
loope
push
fsubrl
mov
aaa
imul
ret
lds
aam
ret
addr16
or
xchg
movsl
and
cmp
jmp
int
call
popa
bound
in
mov
mov
aam
aam
sub
mov
xor
adc
test
mov
subb
jg
gs
sub
aam
sbb
dec
dec
or
push
inc
cltd
mov
or
out
cmpsl
pop
xor
fsubrl
movsl
pop
call
insl
in
add
popl
pop
jno
jecxz
or
adc
iret
push
push
lahf
push
repz
and
adc
sub
sbb
bound
inc
out
or
push
mov
sub
xor
sbb
aam
sbbl
and
adc
xlat
xchg
pop
stos
imul
sbbl
pop
sbb
mov
mov
inc
mov
fstpl
pop
out
sbbb
inc
xchg
adc
out
imul
and
mov
mov
add
sahf
out
push
int
add
stos
pop
shlb
movsl
dec
pop
xchg
push
sub
or
push
in
mov
lahf
or
mov
cmp
dec
pop
outsl
push
push
in
or
int
push
push
cmpsl
sbb
aam
mov
xchg
sub
add
and
inc
les
lea
jbe
gs
daa
out
push
cmp
repz
test
xor
xchg
in
data16
mov
inc
mov
mov
jmp
adc
outsb
xor
xchg
bound
imul
xchg
jb
sub
in
jp
ljmp
int3
lds
in
lods
dec
ljmp
xchg
insb
push
inc
ficoml
push
out
bnd
ljmp
imul
pusha
push
shl
xchg
rclb
push
popf
stos
dec
repz
sub
push
clc
xchg
rclb
scas
ljmp
mov
inc
push
in
pop
je
mov
and
aam
cmp
and
push
and
lods
in
in
cmp
inc
sub
mov
and
in
test
bound
call
loope
in
mov
clc
loope
loop
call
push
xchg
shrl
xor
dec
xchg
and
fsubp
rorl
jmp
add
cltd
movsl
in
sahf
and
in
aam
dec
movsl
xor
cmc
in
test
dec
out
gs
sbb
in
call
inc
in
insl
jb
inc
pop
push
popa
or
scas
call
xor
push
mov
stos
fisubrs
push
pushf
sub
lock
inc
gs
adc
out
cmp
push
push
in
out
mov
dec
call
andb
add
add
mov
xor
out
lock
xor
in
in
popa
rcr
in
jb
dec
mov
imul
testl
in
sarl
addr16
call
adc
test
add
popa
xchg
call
dec
roll
loope
xor
in
in
in
mov
scas
loop
je
fsts
lea
out
mov
inc
insb
and
daa
xchg
xchg
data16
call
fsubrs
call
mov
adc
shrb
insl
ljmp
imul
bound
insl
aam
sbb
in
mov
call
bound
gs
insb
popa
das
popa
in
movsl
sub
in
lods
push
push
push
das
cmpsl
das
out
call
lock
in
lods
push
push
daa
aaa
out
and
gs
shrl
call
dec
out
in
xor
push
popa
gs
mov
imul
inc
out
xor
inc
inc
ljmp
lock
lds
mov
popa
aam
out
call
in
das
lods
dec
xchg
push
movsl
dec
sub
dec
ljmp
cmp
leave
push
adc
out
push
xchg
inc
popa
in
daa
popa
sub
fisubs
sub
out
lods
inc
outsl
popa
in
pop
daa
loop
lock
sub
imul
xchg
loop
mov
test
dec
ja
in
adc
or
xor
std
pop
test
int3
cmp
loope
sbb
cmp
and
fsubr
lret
call
out
pop
add
xchg
pop
and
push
rcrl
xor
setle
inc
mov
mov
addr16
inc
or
rcrl
loope
push
sbb
xchg
or
inc
imul
mov
in
xor
js
cmp
bound
in
jg
fwait
test
subb
mov
dec
push
leave
mov
mov
xchg
movb
inc
mov
mov
adc
xchg
and
jmp
jecxz
data16
rcrl
add
adc
xor
cli
dec
jge
pop
test
jb
mov
dec
ret
mov
mov
insb
div
pop
sbb
mov
pop
lock
gs
sbb
xor
fcmovnbe
dec
sub
sbbl
shlb
or
fs
or
arpl
mov
pushf
ja
sub
test
sub
cmpsb
jbe
fs
add
js
and
push
out
sbb
pop
jg
mov
and
ret
pop
and
or
mov
jns
cmpsb
insl
int
push
pop
mov
hlt
aam
pop
jnp
mov
adc
test
and
adc
imul
ret
aas
cli
popa
add
jl
jno
fcompl
fidivrs
ror
mov
movsl
bnd
cmp
cmp
pop
mov
push
mov
jmp
dec
pop
out
ljmp
mov
inc
outsb
xor
gs
sbb
sub
in
inc
xchg
push
jg
and
mov
push
push
mov
push
out
subl
repnz
test
daa
decl
dec
mov
jp
mov
xor
out
mov
cmpsl
outsb
dec
push
mov
and
cmp
push
pop
out
add
call
add
into
push
icebp
ja
jb
inc
sbb
mov
in
movsw
mov
movsb
lret
aaa
jg
mov
add
rorl
loopne
xor
adc
cmp
xchg
or
mov
or
xor
lahf
in
mov
sbb
je
inc
jne
xchg
int3
dec
enter
lods
dec
mov
xchg
sbb
sbb
jns
pop
mov
or
inc
cmp
xor
inc
test
dec
push
inc
pop
mov
cmp
repz
push
ss
lret
adc
mov
mov
pop
addl
je
jl
jp
pop
add
push
cmpsb
aad
add
fnstsw
dec
push
in
push
adc
sub
popa
xchg
pop
and
push
cmpsb
daa
mov
lret
ficompl
add
inc
leave
mov
pusha
xor
add
pusha
sub
adc
dec
xor
imulb
mov
ret
jl
adc
xor
dec
mov
in
pop
mov
cmpsl
aaa
pop
jecxz
xor
ljmp
mov
sub
cltd
jno
aas
call
ljmp
rcl
dec
leave
pop
pop
test
add
inc
arpl
sbb
imul
insb
mov
add
mov
inc
aam
call
dec
les
jmp
mov
xchg
inc
xchg
cmp
push
into
jne
movsb
sbb
or
cwtl
leave
and
fs
pushf
mov
testl
loopne
mov
dec
adc
cli
sbb
inc
pop
movsb
mov
mov
out
mov
lock
aam
push
push
addr16
hlt
andb
shlb
fsubl
insb
lret
pop
out
pop
sub
sbb
add
in
mov
cmpsl
mov
fdivp
fsts
and
pop
rcr
sbb
pop
dec
je
pop
fimuls
fldl2e
pop
xor
xchg
out
push
jbe
xchg
out
xor
xchg
cmpsb
in
push
pop
pop
cmpsl
lods
imulb
push
inc
clc
andb
jo
xchg
cltd
cmp
adc
scas
insb
dec
lcall
lret
xchg
loop
gs
sub
rorb
nop
inc
mov
lock
pushf
loope
aaa
movsl
pop
mov
popa
inc
inc
xchg
int
std
clc
mov
dec
dec
pop
stos
inc
push
dec
nop
insl
dec
and
xchg
and
xor
cmc
cltd
jne
sbb
fbstp
mov
pop
test
addl
scas
mov
push
inc
movsl
jne
imul
mov
cmp
call
mov
or
sbb
lods
test
jl
insb
mov
repnz
sbbl
pop
dec
add
push
popa
in
jmp
shr
adc
mov
insl
test
pop
cwtl
cmp
shl
fbld
cmp
xor
pop
add
inc
hlt
push
sub
loop
push
adc
push
jl
pusha
insl
and
jge
outsb
shll
push
dec
negl
cmp
mov
xor
push
mov
mov
out
in
mov
pop
pusha
and
call
insl
cmc
push
push
out
xchg
sub
ljmp
push
imul
imul
xchg
shrl
inc
popf
insl
mov
insb
lods
cmpsl
stos
leave
gs
and
test
loope
fnstenv
dec
dec
cltd
pop
or
addr16
pushf
cmpsl
jmp
inc
ljmp
sbb
and
mov
fistpl
out
movsl
sbb
imul
js
cmpsl
iret
mov
iret
mov
gs
js
sbb
insb
les
imul
inc
mov
popa
out
adc
in
inc
mov
aam
clc
cmp
rcl
pop
call
xchg
ret
cmp
inc
xchg
mov
adc
push
ljmp
imul
imul
daa
jmp
repnz
jbe
push
push
sub
or
pop
push
or
mov
xchg
push
dec
into
dec
imul
sbb
imul
call
and
sbb
inc
incb
ljmp
jl
ljmp
xchg
insl
or
pop
daa
inc
mov
or
xchg
or
adc
inc
jb,pt
dec
mov
imul
adc
or
subl
popa
sarl
inc
stos
cmp
pusha
cmp
in
xor
imul
push
pop
xchg
aad
mov
xor
leave
insl
push
cli
rol
jb
arpl
daa
insl
mov
xchg
jp
or
mov
pop
popf
loope
push
mov
or
addl
jecxz
notl
cmp
sahf
aas
test
xchg
pop
repnz
loope
shrl
inc
repnz
ret
dec
dec
hlt
sub
les
jbe,pn
add
sub
outsl
and
push
imul
mov
jle
inc
lds
add
ret
in
mov
lods
cmc
aaa
ds
scas
aas
adc
cmp
push
add
sbb
movsb
push
movsl
mov
ja
in
cltd
cmp
repz
inc
push
sarl
push
push
pop
fisttpl
outsl
mov
clc
push
push
xlat
sti
pop
xchg
into
pop
dec
imul
dec
notb
dec
add
inc
leave
je
test
pop
mov
mov
push
bound
inc
mov
daa
iret
lock
fisubrs
cwtl
into
fmull
aam
pop
aaa
adc
pop
mov
jbe
pop
insl
outsb
pop
cs
lea
xchg
sbb
sbb
push
cmpsl
or
loope
mov
jno
jp
mov
xor
scas
cmp
and
inc
std
adc
jo
es
sub
cmc
sbb
mov
mov
mov
mov
xchg
es
imul
xor
popa
cmp
and
push
and
dec
ret
mov
sub
std
push
sbb
xor
cmp
fsubl
pop
mov
js
jo
sbb
imul
nop
fcoml
js
aam
cmp
mov
mov
leave
lds
push
in
dec
lret
adc
cmp
fimull
ret
inc
gs
adc
xchg
xlat
mov
xchg
xchg
mov
adc
cmp
and
push
lock
jmp
mov
imul
and
pop
inc
arpl
popf
repnz
pavgb
loope
add
lock
scas
cmp
push
mov
fnstcw
push
jne
pop
pop
pop
cltd
aam
mov
mov
inc
cmp
leave
and
push
add
loop
mov
mov
cmpsb
pop
out
dec
sbb
imul
dec
dec
xchg
popa
sub
call
ret
out
pushf
adc
mull
xchg
jge
sub
xor
push
sbb
jne
jmp
imul
sbb
orl
popa
cmc
xchg
push
jno
lret
ljmp
ret
push
jge
mov
mov
xor
dec
mov
push
xor
dec
push
dec
loop
inc
adcb
ret
popa
adc
mov
push
in
jmp
shll
and
xchg
xchg
sub
xor
xor
out
clc
shll
scas
and
ret
push
push
and
sbb
ret
push
das
pop
hlt
mov
jp
cmc
jge
sub
and
and
mov
cmp
push
ja
mov
cwtl
add
scas
push
rcrb
mov
mov
inc
arpl
pop
cmp
jl
stos
fstps
rorl
jmp
sbb
mov
mov
icebp
loop
sub
push
or
insb
xor
je
out
imul
adc
data16
daa
cmpsb
push
call
imul
cli
push
nop
inc
fcmovb
pop
sub
push
popf
out
popa
jns
or
pop
shrb
push
dec
pop
gs
pop
mov
popa
sbb
inc
das
or
mov
fdivrp
into
or
loop
xor
sub
pop
cmpsl
cmp
inc
push
out
pop
stc
jmp
sarl
sarl
bound
pop
rclb
test
inc
dec
pop
movb
push
nop
testl
int
push
pop
xor
pop
test
xchg
stc
popa
push
jno
adc
aaa
and
lods
test
dec
fnsave
out
jge
dec
fs
pop
ret
das
jl
pop
loope
jnp
mov
je
adc
push
xchg
imul
add
cli
push
adc
lret
scas
inc
mov
pop
mov
jmp
pop
sbb
dec
mov
aam
sub
sbb
lahf
out
fwait
in
xchg
xchg
xchg
xchg
sbb
flds
add
pop
xchg
movsl
cmp
adc
cmc
push
jbe
stos
pop
cmp
push
add
das
and
je
ja
push
adc
cmp
push
and
pop
push
popf
imul
pop
pop
sahf
outsl
xor
sub
in
push
xlat
jge
gs
inc
add
xchg
lods
mov
mov
les
and
popa
incb
test
jp
arpl
jmp
popfw
scas
daa
mov
out
jecxz
shlb
addr16
xlat
test
xor
mov
aam
fwait
cmp
pop
cmp
sub
das
xchg
gs
xor
dec
inc
in
pop
lret
pop
daa
push
imul
call
mov
dec
rcl
daa
rolb
jge
arpl
loop
aam
cmpsl
mov
jne
sbb
orl
push
or
mov
fldl
jg
scas
dec
mov
lds
inc
adc
mov
sub
cmp
imul
cmpsl
and
lret
pop
mov
cmp
bound
xor
popa
ljmp
xchg
sbb
popa
mov
fcmovb
jne
or
sti
mov
rcrl
xchg
in
aam
xorw
inc
xchg
sub
xor
inc
aaa
mov
mov
inc
test
shrl
push
jg
mov
fcomps
lea
mov
jge
cmpsl
push
add
push
push
cmpsb
pop
pop
stc
and
add
loop
cmpsb
pop
push
push
dec
lds
aam
in
push
push
mov
cmc
or
pop
lret
clc
pusha
dec
xchg
movsl
ss
shrb
jg
push
add
aam
xchg
lds
adcb
pop
hlt
cmpsl
in
sbbl
pop
dec
add
sbb
dec
cltd
das
sbb
fnstcw
xchg
jmp
jae
iret
cltd
mov
aad
test
cmpsl
jge
pop
out
rorb
xchg
xchg
daa
lock
shll
xor
pop
sbb
pop
or
sub
pop
push
xchg
jmp
xor
xchg
xchg
xor
sbbl
sbb
bnd
add
mov
call
mov
sub
pop
stos
es
mov
push
call
xor
pop
xchg
inc
jne
cmp
in
push
and
lock
cmpsl
ss
ss
int
repz
dec
sbb
in
sbb
inc
push
pop
xchg
cmp
mov
ljmp
xchg
out
pop
aad
dec
loope
test
cld
dec
and
addr16
mov
push
rclb
jg
js
cltd
sti
push
lret
push
mov
pop
daa
out
rolb
inc
pop
mov
pop
outsl
loope
es
mov
insb
dec
inc
cltd
ss
push
ss
jmp
mov
and
shl
add
stos
mov
push
and
out
data16
aam
xchg
idiv
add
cli
and
mov
stos
inc
test
or
stc
testb
imul
or
fisttpl
cmp
sbb
pop
lds
lock
imul
loope
pop
xor
push
add
test
sub
lock
push
fidivrs
mov
fidivrs
cwtl
mov
or
in
clc
xchg
test
fwait
jae
mov
and
rcll
imul
div
mov
lock
adc
and
ja
push
push
adc
add
faddl
pop
gs
sub
inc
mov
jb
xchg
dec
push
sbb
mov
inc
xchg
adc
aam
mulb
push
je
imul
push
mov
mov
adc
dec
push
jge
push
adc
lret
push
mov
shrl
or
sub
pop
pushf
add
cli
inc
cld
mov
and
hlt
jo
push
cmp
sub
fmul
hlt
mov
pushf
mov
mov
sbb
sub
cmp
sbb
jbe
or
cmp
sub
or
push
push
push
jecxz
lcall
sbb
adc
mov
mov
sub
mov
ja
cmp
stos
sbb
fistps
cmp
mull
aaa
xor
aam
sbb
xchg
and
or
mov
jl
push
mov
cmp
inc
and
scas
pop
cld
mov
jmp
mov
pop
outsb
outsl
jo
insb
push
bound
addr16
ss
xchg
insb
int
divb
les
push
ljmp
adc
push
loope
stos
inc
shlb
mov
les
daa
dec
pop
repz
lods
pop
or
imull
in
call
stos
push
stc
push
sahf
ljmp
lods
in
out
pop
cmpsb
add
or
pop
mov
movsl
gs
cmp
jns
mov
imul
and
and
out
and
mov
lar
dec
ljmp
mov
gs
iret
or
out
cmpsl
addb
xor
sbb
out
pop
push
adc
jmp
sbb
mov
adc
ficompl
xchg
add
xchg
add
mov
adc
daa
xchg
movsl
inc
dec
cmp
inc
pop
int3
out
xchg
aam
mov
push
xlat
cmp
mov
and
fimull
pop
es
mov
sbb
dec
nop
add
lahf
clc
fcomps
movsl
sub
ljmp
or
mov
repz
roll
xchg
or
dec
loope
add
call
pop
out
add
daa
fcomps
fidivs
push
aam
mov
mov
xor
rolb
adc
sub
dec
stos
aas
mov
fimuls
dec
sub
aam
xor
xchg
imul
push
pop
and
arpl
ret
mov
mov
push
pop
enter
jmp
and
pop
fidivs
adc
push
dec
leave
jae
sbb
push
pop
xor
loopne
addr16
imul
into
aam
cmp
mov
fdivs
and
jb
int
inc
movsl
out
and
in
testb
push
testl
int
in
lahf
jmp
into
xchg
or
addr16
pop
mov
cmp
inc
loope
sub
rcl
sbb
mov
in
xor
sbb
xor
cmp
pop
fdiv
int3
mov
mulb
lods
xor
dec
xor
lods
and
ret
jns
notl
rorb
cwtl
xchg
push
icebp
and
jecxz,pn
xor
mov
inc
popf
test
xor
pop
cmp
call
sub
test
out
addr16
ljmp
jo
jae
fs
imul
and
cmp
push
popa
push
jl
lods
out
fs
push
pop
insl
stos
jno
and
pop
in
pop
inc
mov
cmp
mov
jge
ja
dec
pushw
es
xor
mov
push
adc
pop
orl
dec
pop
push
and
adc
sbb
sub
inc
out
pop
cmp
sub
or
mov
test
push
fwait
imul
dec
add
ret
jmp
sub
adc
inc
loope
das
xchg
push
mov
insb
dec
push
lahf
push
shrb
mov
push
inc
mov
icebp
mov
fwait
inc
push
mull
fcmovu
stos
bound
xor
cmpsl
sub
pop
jecxz
jmp
fwait
xor
jmp
out
mov
mov
je
inc
lods
loopne
mov
add
and
movsl
and
loope
jae
inc
mov
bound
sub
stos
mov
cmpsl
cmc
movsl
pop
inc
mov
das
out
sbb
mov
xchg
clc
test
cmp
xor
mov
inc
mov
push
test
ret
aam
jbe
repz
push
sbb
sub
sub
cmpsb
ljmp
faddp
and
push
mov
xchg
popf
pushf
arpl
dec
mov
jecxz
addb
sub
das
out
dec
in
inc
les
cmp
jne
or
aas
movsl
xchg
xor
sub
in
shlb
movsl
mov
inc
aad
mov
in
pop
lds
inc
jg
xor
pop
mov
push
mov
inc
push
mov
dec
lret
icebp
rclb
dec
push
lods
inc
push
imul
int
pop
ret
mov
mov
mov
fucom
rol
pop
cmpsl
push
cwtl
push
mov
leave
test
xchg
jo
imul
dec
add
das
orl
sub
popa
pusha
mov
mov
aam
xlat
dec
aaa
inc
mov
out
push
dec
sarb
call
sbb
fnsave
xchg
mov
and
pop
scas
test
sbb
mov
mov
xchg
jne
inc
notb
les
fcoms
les
xchg
jo
int
bound
je
stos
push
mov
jg
mov
xchg
cmp
push
cmpl
shlb
fisubl
lock
pusha
sbb
out
aad
ljmp
mov
pop
jmp
outsb
jo
popa
stos
adc
mov
notl
popf
and
inc
inc
cmp
mov
and
shll
push
inc
sub
cmpsb
and
push
movsl
mov
push
and
imull
dec
push
mov
daa
mov
subb
mov
fldl
jmp
imul
das
xchg
pop
int3
mov
mov
pop
addr16
mov
sti
fs
push
xchg
or
cmp
lds
or
push
mov
mov
ror
push
or
jns
std
rcrb
push
sbb
lcall
in
icebp
mov
jmp
push
ficoml
out
out
js
pop
sbb
adc
mov
imul
bound
ret
pop
das
es
imul
hlt
lahf
xor
push
push
push
pop
test
icebp
sbb
xorl
enter
ja
dec
mov
aad
add
add
fdivrl
add
insl
mov
popa
lcall
xor
xor
int3
dec
cwtl
xor
cmp
ss
leave
dec
or
push
jecxz
addb
fimull
mov
inc
mov
push
or
insb
fs
mov
aam
mul
sub
xchg
loop
imul
inc
iret
mov
cmp
xchg
ljmp
int3
dec
std
aam
adc
imul
adc
xacquire
addb
js
add
int3
xor
dec
out
movsl
adc
inc
call
icebp
and
mov
daa
inc
mov
mov
aas
add
imul
mov
repz
enter
adc
sub
rorl
inc
mov
movsl
fldz
add
and
or
push
je
or
pushf
sbb
add
pop
jno
mov
sarl
xchg
jmp
cli
xor
push
fbstp
and
aas
sti
jnp
fidivl
notl
imul
aas
ljmp
xchg
rcll
xlat
orl
not
std
or
cmp
sub
mov
add
and
aaa
addb
inc
inc
push
xor
fwait
loopne
xor
dec
mov
pop
push
dec
in
inc
mov
push
mov
sbb
daa
push
inc
lret
pushl
mov
cltd
test
imul
mov
dec
jae
cltd
inc
fs
fbld
imul
cmp
sbb
or
stos
add
push
sbb
push
dec
inc
in
or
imul
paddsb
jg
lods
or
dec
push
sarl
pusha
push
xor
fidivrl
jecxz
and
das
imul
xchg
xor
loop
movb
cmpsb
adc
push
sbb
fnstsw
aam
addr16
lock
push
cs
mov
imul
imul
jmp
mulb
adc
cmp
ss
cmpsl
sub
shlb
cmc
dec
test
leave
push
fsts
sbb
pop
jo
mov
in
pushf
xchg
pop
lret
adc
jge
and
sub
push
das
popa
hlt
jp
inc
ja
push
dec
iret
bound
outsl
leave
jns
push
fadds
stc
push
sub
shl
mov
out
dec
lods
cmc
and
in
push
out
int3
jmp
push
adc
inc
cmp
data16
adc
and
or
add
xor
outsb
sub
cld
jge
inc
popf
sbb
shll
sub
inc
mov
cmpsl
pop
imul
push
mov
outsl
hlt
shll
outsl
and
pop
jmp
jae
inc
test
sbb
dec
aam
addr16
pop
fdivrl
dec
in
pop
cmpsb
sbb
shlb
xchg
into
sbb
sub
in
inc
lret
ljmp
aam
dec
fucomp
mov
lea
and
adc
jmp
mov
subb
movsl
and
adc
add
pop
mov
inc
shlb
fs
mov
pop
adcb
pop
out
jno
cmp
mov
or
sbb
mov
mov
xor
mov
repnz
adc
or
sahf
cmp
data16
aaa
bound
cs
iret
stos
cmpsl
fistpl
cmp
movsb
dec
imul
test
ja
xchg
pop
or
hlt
fsubl
rcrl
add
mov
call
jge
mov
leave
mov
fcomp
popa
mov
push
inc
cmp
dec
faddl
cmp
fbstp
mov
xlat
sbb
pop
outsl
jecxz
jns
push
pop
or
sub
outsl
jno
ret
sub
stc
cmp
or
aam
in
inc
lea
mov
mov
and
inc
pop
rcrb
push
aam
imul
xchg
sub
cli
xor
in
push
inc
stos
movsb
shlb
rol
loop
inc
icebp
jecxz
sbb
jle
roll
movsl
insl
scas
xlat
mov
cmc
push
xchg
mov
sbb
in
inc
cmc
cmp
mov
pop
pop
insl
outsb
mov
dec
mov
sbb
mov
fisttpl
movsl
je
aad
fwait
push
out
inc
call
xor
sub
data16
pop
pop
shlb
out
push
ljmp
call
push
jmp
and
cmc
fcoms
cmp
fistps
and
stos
rcll
daa
mov
jnp
push
cmp
mov
inc
hlt
push
push
mov
les
xor
inc
add
test
lea
push
dec
mov
swapgs
lahf
call
fisttpl
scas
mov
sbb
pop
jns
gs
xchg
or
or
pop
cmp
adc
lret
push
repnz
pop
or
rolb
cltd
inc
inc
imul
dec
lock
test
insl
data16
pop
out
icebp
fwait
imul
lahf
push
mov
dec
repnz
int3
adc
jbe
pop
xchg
and
fists
and
sub
ss
lods
andb
mov
add
mov
push
es
push
jecxz
subl
pop
fldl
aas
andb
push
in
shrl
cmp
pop
lock
data16
lods
int3
aam
xor
jp
rcll
adc
fimuls
in
cwtl
rcl
pop
push
and
sbbl
mov
fisubrs
sub
int3
push
mov
imul
mov
cmc
out
jl
and
mov
sbb
add
mov
add
jne
sar
cmp
or
stos
add
mov
lcall
dec
loope
pop
push
add
out
xchg
mov
scas
in
jmp
and
out
and
fidivl
mov
mov
adcb
push
mov
xchg
aad
loope
clc
loope
mov
out
jo
out
lods
jo
icebp
jmp
pop
insb
mov
push
push
pop
aam
jl
or
addl
or
xor
imul
push
xlat
ljmp
pop
mov
mul
pop
lods
scas
test
pop
xor
jns
call
push
stos
loope
hlt
orb
add
outsb
movsl
outsl
cwtl
cmp
insl
hlt
fisubs
pop
aam
insl
xor
mov
sub
and
push
pop
lods
adc
imul
dec
imul
insl
sub
jb
insl
cmp
das
aam
xor
sbb
sti
out
cmpsb
cmc
stos
shll
and
cmpsb
xchg
jmp
xchg
xor
xor
mov
imul
mov
xchg
popa
mov
fcmove
adc
mov
mov
fistl
add
imul
or
test
in
cli
inc
shrl
cmp
pop
leave
stc
push
sbb
not
inc
cmc
jge
jge
jmp
aaa
pop
nop
mov
cmpsl
cld
mov
cmp
out
imul
nop
lods
mov
faddp
push
sbb
pop
pop
lea
push
cmc
je
dec
cli
aas
add
mov
lret
fucomip
xor
jp
mov
mov
ja
mov
xchg
add
mov
adc
aam
cmpsb
pop
push
push
fcomps
shrb
lock
leave
xchg
int
addr16
dec
inc
sbb
cmp
push
shlb
pop
and
jp
and
out
imul
mov
popa
test
jge
jnp
jno
dec
ror
aas
popa
and
xchg
cmp
mov
or
fcoms
mov
aam
xchg
movsl
outsl
sbb
push
jae
imull
jmp
mov
xor
pop
inc
jl
notb
xchg
dec
scas
and
nop
data16
aas
dec
push
sbb
mov
mov
jg
jbe
mov
inc
xor
inc
gs
or
inc
and
push
popa
mov
mov
jns
push
and
lea
mov
fiaddl
inc
sub
scas
xchg
test
or
add
cmp
mov
mov
and
push
ljmp
aad
ljmp
popa
es
lahf
and
mull
out
fiaddl
dec
jge
in
jbe
lret
outsb
inc
push
or
stos
mov
cs
outsl
es
insl
pop
inc
jg
daa
data16
loop
repz
andl
and
rorb
sub
sahf
mov
shlb
ds
lock
aam
sub
xchg
stos
xlat
ljmp
mov
push
xchg
shlb
xchg
pop
aaa
insl
dec
xchg
stc
int3
out
jmp
cmp
sbb
imul
stos
mov
insl
test
mov
lahf
popa
push
xor
pop
loope
mov
jecxz
pop
pop
fwait
xchg
mov
and
sub
iret
pop
inc
aaa
pop
jo
hlt
add
mov
lcall
xchg
fwait
dec
repz
inc
and
fisttpl
or
add
and
stos
dec
insb
js
aam
dec
test
and
xchg
js
out
push
into
and
arpl
daa
dec
pop
aam
fsubr
decl
inc
mov
out
imul
inc
pushf
out
call
inc
cmc
lea
je
les
lds
sub
out
in
jge
loopne
ficompl
xchg
outsl
sbbb
sub
jb
sbb
popf
cmpsl
adc
sub
lcall
sbb
rolb
or
sbb
push
xchg
xchg
mov
jae
fstpt
sbb
dec
shl
cltd
cmc
or
or
jge
lahf
mov
push
cltd
sbb
xchg
test
pop
loope
in
loope
in
push
xor
xor
cltd
cli
push
push
mov
mov
inc
lcall
mov
mov
pop
xchg
loop
shll
scas
mov
and
pop
mov
jnp
ret
stos
xchg
push
pop
and
lahf
inc
sub
imul
mov
lods
inc
cmpb
and
call
nop
xorb
mov
push
loop
or
pop
lds
xchg
sbb
mov
lahf
orl
push
push
insl
hlt
push
sub
int
and
out
inc
inc
imul
imul
in
adc
inc
arpl
int
gs
pop
cmp
add
and
pop
cli
daa
sti
pop
push
mov
pop
movsb
xchg
mov
addr16
repz
xor
and
test
clc
loope
inc
push
xchg
jne
and
mov
and
push
jb
out
scas
inc
aam
mov
subb
clc
mov
inc
gs
mov
dec
jmp
cmpsb
aam
mov
push
leave
add
dec
cli
cwtl
out
or
or
xchg
nop
xchg
loopne
mov
pop
sub
inc
rorb
movsb
ficoml
nop
test
and
shrb
and
div
movsl
imul
lds
sbb
add
std
xlat
push
cmp
popl
lcall
mov
xchg
sbb
filds
out
das
jbe
cld
inc
shll
outsl
mov
es
jns
pop
bound
pushf
ret
das
mov
lcall
sub
jbe
xchg
and
aad
dec
cmp
and
mov
sbb
sub
faddp
jp
test
fimull
pop
stos
add
mov
stc
mov
push
cmp
out
cmpl
or
int
ljmp
push
xor
fiaddl
icebp
cmp
gs
adc
jg
and
shl
dec
push
out
pop
jnp
push
not
add
arpl
xchg
into
dec
cmpsl
test
pop
test
aam
in
sbb
mov
loopne
xchg
fnsave
adc
add
mov
inc
in
shl
movsb
insl
jno
ja
insb
push
jno
addr16
mov
or
adc
pop
sbb
jbe
add
mov
push
push
pop
mov
testb
sbb
xor
mov
inc
fs
sbb
dec
je
jbe
loop
pop
test
sub
mov
insb
adc
xchg
dec
sub
loopne
mull
rcr
and
pushf
mov
inc
les
xchg
imul
jne
jo
inc
icebp
in
dec
int3
jmp
cmc
jae
jl
pop
xchg
fucom
mov
and
adc
jg
test
pop
add
out
in
xor
std
sub
xor
sub
xchg
loopne
pushw
aam
cmp
mov
rcrb
push
push
jbe
jg
fldl2t
jnp
lcall
icebp
jns
fmull
outsb
ficoml
jne
pop
push
or
mov
cltd
xchg
into
mov
popf
out
and
fiaddl
nop
insb
jecxz
pop
ljmp
divl
ret
fimull
pop
adc
cmc
mov
popa
and
test
dec
ret
rcll
and
lods
imul
pusha
mov
inc
test
jnp
push
icebp
std
enter
les
push
cmpb
inc
loopne
out
leave
add
rcll
mov
and
enter
pop
dec
lods
mov
mov
imul
mov
and
cmp
pop
int
adc
push
cmp
popa
into
sub
and
loope
push
mov
test
and
jns
mov
jp
mov
add
add
mov
adc
lahf
mov
jecxz
fisubl
sub
imul
xor
hlt
stos
and
int3
jecxz
xorb
out
jg
mov
lret
pop
mov
mov
out
mov
je
sub
xlat
insb
jecxz
push
hlt
lret
mov
xchg
je
add
inc
dec
pop
sbb
repz
jmp
xchg
out
ss
xchg
inc
or
ret
sub
lods
mov
addb
icebp
push
hlt
push
dec
lea
call
pop
lock
aad
sbb
cmp
imul
mov
cwtl
popa
adc
jne
push
add
pop
mov
lds
cwtl
or
add
repz
imul
jb
jmp
jne
cmpsb
xor
pop
dec
repnz
in
popa
lods
pop
push
lock
mov
fs
push
adc
xchg
and
or
sub
push
cs
ret
cmc
les
repz
push
imul
shll
test
rorl
push
push
test
bound
aad
lods
movsw
jge
sub
sti
adc
negl
push
jnp
jb
hlt
push
cmp
ss
dec
xor
pop
add
push
mov
ljmp
test
xor
cmc
mov
jp
int
das
call
imul
jp
sbb
cmpsl
frstor
xchg
push
imul
mov
cmp
pop
aam
push
mov
ss
mov
mov
and
or
xchg
sbb
dec
mov
cmp
je
and
les
mov
sbb
lock
test
cmp
out
fdiv
aas
imul
fcompl
loope
mov
cmp
pop
lret
push
scas
sub
cli
jne
xor
insl
and
cmp
or
push
movsl
int
lods
mov
mull
add
adc
aam
lea
lods
xchg
dec
imul
stos
insl
test
mov
popa
sbb
inc
add
push
outsl
lea
rcll
and
mov
enter
mov
out
xchg
mov
ficoml
stos
push
adc
dec
xor
mov
adc
out
mov
out
test
shrl
mov
das
daa
add
or
push
xchg
mov
fstl
mull
mov
mov
adc
push
imul
sub
test
sub
out
imul
pop
mov
and
out
cmc
imul
test
insb
and
pop
insb
loope
inc
std
addr16
sbb
push
popa
push
dec
mov
inc
test
je
popf
mov
lods
out
icebp
push
popa
fnstcw
lret
pop
fldcw
mov
and
call
inc
bound
xor
imull
pop
int
ret
rcrl
and
add
push
add
insl
sbb
cmpsb
insl
loop
hlt
mov
aam
movsl
js
hlt
pop
inc
mov
and
pop
mov
movsl
aam
pop
out
sub
addr16
lcall
inc
cld
loopne
sub
movsb
imul
jmp
ja
mov
mov
push
leave
call
mov
adc
and
movsl
sbb
dec
jo
pop
hlt
cmp
and
cmpsl
push
sub
and
aaa
or
pop
sub
mov
ja
or
sbb
fdivl
lea
fwait
push
nop
in
pop
shlb
addr16
pop
or
gs
sub
sbb
gs
out
inc
lock
ljmp
imul
xchg
push
loope
push
xor
orl
push
fisttps
push
popa
fwait
jg
mov
fsubrl
mov
cmc
push
pop
outsl
pop
enter
jns
inc
pop
xor
pop
shrl
js
sbb
out
mov
dec
dec
lock
hlt
mov
in
push
leave
adc
sbb
push
sahf
inc
pop
rorb
aam
int3
adc
out
and
adc
scas
pop
pop
add
andl
lcall
jnp
in
negb
cwtl
pop
push
fs
nop
je
jo
es
push
pop
add
sub
push
inc
sbb
mov
or
lea
mov
mov
out
push
out
and
xchg
bound
and
jecxz
pop
inc
call
pop
dec
mov
add
and
xchg
or
push
or
loop
fs
push
pop
aaa
lea
mov
jmp
insl
shrb
dec
pop
cltd
out
dec
gs
lret
push
pusha
push
mov
imul
insl
ja
sbb
fsubs
adc
out
push
xchg
pushw
out
mov
pop
scas
push
sbb
jae
ja
jmp
xchg
xlat
addr16
movl
sahf
cmp
mov
add
sarl
jo
ficoml
rcll
out
cmp
stos
scas
push
mov
jl
test
int3
pop
imul
push
inc
dec
bound
pop
xchg
aam
jmp
cmp
je
mov
xchg
popa
cmp
xchg
mov
cmp
fwait
movsl
lods
stc
xchg
fwait
xorb
pusha
dec
lahf
dec
adc
add
xlat
aam
sti
gs
lods
test
jns
stos
mov
xchg
cmp
pop
test
mov
addl
jbe
js
xchg
mov
test
jmp
or
fdivs
push
mov
inc
dec
push
push
mov
leave
push
sbb
xchg
ret
and
loop
imul
xor
sbb
cwtl
add
jmp
cmpsl
push
inc
lahf
lret
out
or
inc
cmp
push
jg
jne
cmpsb
hlt
ljmp
out
and
pop
mov
inc
push
and
call
push
dec
sbb
das
mov
adcb
pop
jb
js
fcmovnu
addr16
sbb
and
enter
dec
bound
inc
jnp
sahf
out
scas
lock
movsb
or
pushf
xchg
fldenv
sarl
add
jo
mov
fnsave
pop
jmp
mov
jns
movsb
mov
lods
or
push
pop
loope
mov
push
push
popf
cltd
mov
sbbl
cmp
mov
cmp
push
jns
adc
out
cmc
scas
sbb
sub
aam
sbb
fildl
dec
push
pop
push
and
movsl
mov
cwtl
jne
in
cld
xchg
add
shll
adc
gs
jb
lds
pusha
xor
mov
cmovne
xchg
out
insb
inc
imul
loop
loop
push
pop
out
dec
mov
xchg
jecxz
into
mov
mov
push
cmp
dec
adc
aam
jmp
lahf
insb
punpcklwd
rorl
cmpsb
mov
push
arpl
xchg
add
pop
inc
movsb
xor
enter
dec
nop
scas
loope
addb
cmp
inc
add
jg
popa
cmpsb
cmp
icebp
mov
fdivrl
xchg
fxch
adc
lock
in
push
and
fildl
jno
add
push
xchg
pop
outsl
ds
fsts
and
aas
push
or
cmc
jbe
ljmp
fisttps
dec
test
push
jae
aad
pop
aam
outsl
popa
in
mov
xlat
push
sub
cmpsb
push
pop
and
add
inc
mov
inc
cmp
and
adc
out
fnsave
push
push
pushf
clc
pop
daa
notb
cli
push
xor
push
mov
xchg
xor
rol
test
add
jns
adc
adc
and
xchg
mov
lret
movsl
push
xor
ljmp
imul
cmp
dec
mov
push
dec
das
sub
xor
mov
sbb
call
mov
mov
enterw
ret
pop
push
int
sahf
mov
fsubp
pop
in
pop
lods
push
adc
and
cmpb
test
xchg
popa
pop
imul
aam
push
pop
imul
mov
das
adc
sbb
mov
mov
loope
lret
adc
sbb
pop
adc
sbb
jns
cmp
push
test
js
fsubs
jb
testl
xlat
icebp
les
add
push
lret
imul
aam
and
push
aam
jg
xchg
mov
jg
dec
call
js
lods
xor
ret
dec
dec
mov
lahf
mov
insb
push
cmp
cli
mov
cmpb
arpl
mov
push
ljmp
sarl
in
out
ret
jbe
jns
jg
xchg
nop
adc
imul
nop
sub
cli
icebp
cmp
gs
lahf
adc
dec
add
push
dec
arpl
ljmp
lcall
js
mov
sbb
xlat
mov
pop
and
cmpsl
sbb
push
pop
popa
loope
mov
push
sbb
xlat
pop
mov
pushf
roll
push
dec
xchg
imul
pusha
inc
call
in
loopne
pop
popa
jnp
notl
mov
aam
or
lret
inc
jo
int
fisubrs
imul
popl
jl
push
dec
pop
mov
xchg
outsl
and
loop
in
and
icebp
sbb
sbb
sar
lock
scas
jge
pop
movl
pop
lcall
repz
imul
mov
xchg
fwait
pop
pop
insl
iret
mov
aam
out
bound
push
cmp
sub
adc
enter
sub
dec
jns
test
pop
mov
dec
addr16
out
nop
cmp
inc
mov
push
stc
in
and
out
es
jb
les
push
mov
adc
aam
icebp
xor
inc
adc
add
jmp
pop
int3
sbb
aad
test
push
aad
sub
jbe
cltd
jge
push
sbb
xchg
arpl
mov
mov
jns
mov
jle
and
in
mov
nop
fdiv
fldl2e
push
inc
movsb
imul
mov
jb
out
cmc
iret
leave
cmp
cmpsb
ljmp
faddl
pop
or
stos
dec
mov
call
xor
lcall
xor
loopne
mov
stos
sub
je
mov
xchg
add
and
pop
testl
pop
pop
adc
mov
xor
adc
cltd
ja
repnz
pop
cmpsb
push
stos
xchg
push
mov
out
outsb
std
push
pushf
adc
pop
push
mov
xchg
cmc
addr16
pop
jo
fs
aam
iret
jno
mov
jb
pop
sub
stos
xchg
dec
jmp
and
mov
sbb
outsl
js
scas
imul
push
imul
int
aam
lea
pop
leave
jmp
mov
adc
jp
add
add
mov
call
repnz
mov
repnz
mov
jbe
loope
dec
dec
pop
sub
mov
lods
aam
imul
push
shrb
test
dec
adc
ds
mov
stos
aaa
test
mov
cmp
mov
push
mov
xor
mov
rorl
dec
push
dec
cs
scas
pop
xchg
push
ljmp
or
push
sbb
cmp
int
or
and
popa
jmp
lcall
fimuls
push
loope
push
jle
add
in
je
icebp
sub
dec
dec
call
push
js
add
pop
les
mov
cmp
cli
mov
mov
mov
and
call
stos
pop
repnz
frstor
test
jo
mov
xchg
xchg
test
loope
and
pop
cmpsl
push
mov
or
ljmp
daa
inc
insl
adc
imulb
push
lahf
sbb
rclb
popf
push
stc
xlat
sub
pop
pushf
or
dec
das
sbb
nop
lods
fwait
add
pop
daa
in
inc
pop
sub
pop
jae
movsl
andb
mov
fimuls
mov
mov
es
les
cmpsl
sbb
mov
xlat
pop
aam
repz
mov
cmp
jo
out
pop
mov
je
sub
jns
or
mov
cmpl
push
stos
mov
dec
andl
sbb
xor
popf
cmpsl
push
cld
orl
inc
in
fwait
repz
test
jb
arpl
bound
sbb
mov
add
aas
shl
jmp
fs
inc
sbbb
imul
adc
sub
push
pop
mov
mov
jmp
stos
lret
out
cbtw
addr16
pop
ljmp
inc
aam
pop
push
push
mov
push
sub
aaa
sbb
mov
cmp
and
jge
fmull
rclb
dec
shrl
mov
lods
std
imul
jne
adc
daa
push
imul
pop
loopne
jns
out
push
stos
xchg
sarb
xor
mov
out
pop
stos
add
xchg
mov
lret
inc
movsb
xchg
push
pop
orl
sbb
pop
sub
jne
into
fstp
inc
aam
push
imul
call
ljmp
inc
imul
pop
jge
push
pop
je
sti
adc
sub
insl
push
into
lock
ja
push
pop
push
cld
mov
push
mov
push
lret
jae
cltd
dec
imul
mov
mov
fwait
and
adc
cwtl
mov
add
gs
add
xchg
scas
xchg
pop
nop
inc
lock
aad
in
cli
imul
or
in
data16
imul
aaa
mov
dec
mov
shll
int3
cmp
jecxz
aas
sbb
pop
test
pop
pop
dec
adc
cmp
ljmp
push
out
jbe
ret
xor
js
daa
jl
lahf
dec
ja
inc
jmp
inc
push
sub
sub
out
push
sbb
adc
out
lock
mov
mov
sub
pop
xor
test
jne
pusha
adc
jecxz
test
lds
cmpsl
shrl
neg
cwtl
mov
outsb
shll
rorl
in
pop
lods
push
dec
hlt
aam
and
dec
aaa
insl
addr16
rcr
sbb
xor
clc
mov
stos
dec
cmp
fnstenv
pop
xchg
aad
movsl
adc
fisubs
xor
push
dec
ret
imul
lods
out
pop
lods
aam
push
jbe
cmpb
js
cmp
mov
test
jo
sub
sti
dec
fidivl
dec
in
cwtl
int
aas
xchg
inc
or
call
hlt
mov
dec
testb
mov
push
inc
xchg
popa
fisubl
call
pusha
sub
subl
dec
jg
mov
hlt
hlt
insl
push
mov
adc
push
sbb
movsl
xchg
arpl
out
jge
sti
dec
push
inc
enter
push
push
rdtsc
daa
mov
mov
cwtl
imul
pop
les
lret
cmp
loopne
cmp
or
dec
leave
xchg
mov
xchg
xchg
jg
xor
fyl2xp1
mov
jne
jae
jbe
cmp
ljmp
push
xor
popf
push
int
jle
lds
xor
pop
icebp
fidivs
pop
addr16
and
push
sti
pop
divb
arpl
xor
imul
mov
xor
loope
pop
sbb
addr16
xchg
lret
arpl
shll
sub
aaa
lds
popf
and
rorl
inc
sub
imul
jne
aad
fmuls
cld
loop
into
jg
mov
fs
sub
in
pushf
dec
xlat
ljmp
and
divb
push
outsb
movsb
and
or
jp
fidivrl
pop
push
cmp
cld
adc
add
lods
test
stc
andl
dec
dec
pushf
call
inc
enter
ja
mov
dec
adc
dec
cmc
dec
mov
cwtl
jns
nop
sbb
mov
sub
cmp
aam
pop
mov
insb
mov
int
push
add
call
push
adc
pop
movsl
and
leave
dec
mov
cltd
sbb
push
jge
mov
cmp
sbb
imul
out
pop
mov
xor
push
fucom
test
xchg
dec
sbb
xor
cmp
fsts
cli
in
and
aas
loop
xor
and
and
negl
mov
push
mov
aas
push
icebp
lock
push
lret
js
fstpl
add
sub
inc
mov
imul
xchg
pop
movsl
popa
outsl
push
push
enter
dec
mov
test
stos
sub
and
imul
out
imul
rcll
dec
lods
sbb
in
cmp
lret
mov
adc
movsb
sub
sti
leave
sbb
call
aaa
aam
ret
xchg
jae
sbb
mov
sub
popa
movsb
and
mov
lahf
push
out
jno
adc
adc
adc
inc
in
cmpsl
test
movsl
aam
inc
mov
pusha
call
sub
lcall
fiaddl
push
sub
cmc
xlat
loopne
jnp
aam
inc
stos
push
dec
push
push
cmpsl
aam
popa
mov
adc
push
add
or
fiaddl
aaa
movsl
cs
xlat
fcom
fstp
adc
jno
out
cmpsb
fisubrs
inc
pop
rcl
clc
subb
in
push
cld
push
hlt
mov
inc
outsl
jecxz
lea
out
inc
repnz
ljmp
jo
push
loopne
into
leave
stos
sub
mov
cmp
or
aam
out
push
ja
cmp
cmpsl
and
xor
dec
or
test
add
or
cmp
mov
pop
pop
les
nop
shll
mov
inc
in
imul
in
ficoms
out
xchg
push
pop
pop
or
fsincos
aam
pop
pop
jg
mov
inc
out
rol
outsl
cmp
dec
test
lret
aas
rcll
push
sbb
adc
push
pop
xor
test
or
in
call
out
add
push
jns
sub
iretw
sub
pop
call
imul
xchg
outsl
adc
jo,pn
add
divl
push
dec
sub
xlat
dec
fadds
sbb
fwait
or
sbb
mov
aas
push
in
imul
inc
sub
push
jbe
imul
xor
push
lds
fmuls
push
fstpl
sbb
imul
je
pop
dec
jbe
adc
pusha
fiadds
jmp
ljmp
sbb
mov
arpl
in
fs
xchg
adc
in
cmp
pop
lods
jle
adc
outsl
lods
mov
imul
jnp
std
mov
adc
mov
cmpsb
shll
or
fsts
push
int3
sub
jns
stc
fimull
jnp
and
lods
pop
mov
stos
jns
xchg
mov
cli
cmpsl
push
cmp
inc
xchg
sub
inc
or
jl
cmp
and
cmpsl
sbb
into
test
out
jo
fcoml
lahf
mov
out
sbb
out
bound
push
or
leave
cld
loop
add
jno
push
mov
inc
jo
out
or
dec
clc
es
push
stos
adc
loop
jo
adc
pop
insl
push
out
adc
lret
pop
clc
outsl
add
call
insl
lds
ficoms
hlt
nop
mov
into
fists
mov
cmp
cli
push
cltd
sti
sti
and
dec
pop
lods
and
jb
aas
ret
or
cli
push
push
xchg
pushl
scas
ret
jge
in
push
push
andb
mov
xchg
out
in
std
nop
sub
or
cmp
dec
sub
mov
pop
push
test
mov
mov
les
shll
popf
dec
xchg
in
push
xchg
popa
addr16
sbb
inc
mov
ss
dec
int
in
testb
nop
push
mov
mov
push
mov
ljmp
and
lea
xor
xor
fimuls
jmp
das
shrb
ljmp
fwait
es
sub
loope
movsl
lahf
in
mov
xchg
sbbb
xchg
cmp
aam
insb
pop
or
and
int
push
mov
shll
stos
xor
ja
and
sub
sub
mov
mov
push
leave
sub
xchg
std
xchg
xor
or
cmp
nop
test
cld
shl
and
mov
mov
insb
imul
inc
fcomps
xchg
jae
fiadds
push
gs
nop
repnz
pop
push
dec
mov
repnz
or
cli
fildll
fimuls
mov
mov
ret
mov
sbb
dec
test
data16
push
test
push
cld
fcoml
sbbb
sub
fsts
repz
ficompl
fdivrl
in
ja
cmpsb
jmp
push
lret
cmp
rorl
loop
aam
sbb
test
jp
inc
sub
push
pop
int3
adc
pop
and
movsb
inc
mov
add
pop
aam
cmpsb
aas
dec
out
sti
jmp
mov
repnz
addb
sbb
xlat
or
icebp
pop
lret
mov
mov
inc
int3
outsb
mov
xor
mov
loop
mov
sbb
pop
jns
adc
add
fsubrl
jge
mov
mov
push
push
mov
or
in
bound
jnp
das
das
stos
mov
mov
fs
test
jbe
jnp
sub
loope
icebp
je
shll
dec
or
in
sbb
xchg
xchg
add
xor
xor
ljmp
repz
in
xchg
adc
xor
dec
jmp
add
arpl
stos
fdivrs
jo
push
stc
out
mov
aam
dec
mov
push
lahf
js
leave
jbe
movsl
sbb
inc
mov
cli
in
jbe
xchg
movsb
daa
push
bound
mov
pop
lods
jnp
mov
push
and
lahf
in
scas
sub
push
pop
cmp
lret
sbb
push
int3
push
mov
nop
xor
aam
add
rcr
lock
mov
push
stos
cli
push
fsts
sbb
jb
nop
es
mov
mov
cmpsl
jg
mov
lret
cmpsl
getsec
mov
pop
in
lret
mov
das
cmp
cmp
lea
jns
ret
insl
and
mov
add
pushf
push
sbb
cmp
mov
xchg
lret
out
sbb
nop
mov
pop
jecxz
out
inc
adc
or
outsb
clc
das
andb
es
push
push
dec
lret
xchg
mov
mov
dec
inc
adc
mov
jae
mov
fwait
lods
mov
cmc
xor
xor
daa
fistpll
data16
cwtl
xchg
mov
insb
jnp
shlb
jbe
adc
gs
loop
cmpsl
mov
sub
aam
adc
push
jp
xchg
push
movsl
imul
das
aam
stos
push
out
fnstenv
arpl
sub
sub
popa
sbb
cmc
out
add
pop
pushf
mov
mov
test
jb
cltd
push
mov
and
in
sub
push
es
pop
nop
and
push
jnp
outsl
mov
ss
fisubs
loop
imul
or
pop
mov
xchg
leave
adc
cmp
insl
add
xchg
shl
fwait
sar
out
fcmovnb
imul
aaa
jae
dec
and
adc
and
pop
rcll
adc
fdiv
jge
mov
add
addr16
cltd
push
mov
sub
sbb
ja
insl
pop
stos
movl
imul
rorb
inc
mov
xor
lds
push
in
xchg
sub
test
cmp
adc
push
mov
cmp
cmp
jns
sub
testb
dec
xor
and
xchg
pop
mov
push
fs
loope
and
sub
jbe
aas
push
or
xchg
push
iret
pop
fxtract
js
pop
xor
cltd
pop
jecxz
sub
enter
push
mov
nop
sbb
push
jb
fisubrs
lcall
ljmp
gs
xor
dec
lds
mov
mov
and
and
rol
imul
sub
xchg
movsl
add
sub
stos
pop
and
mov
out
faddl
icebp
aad
adc
fstp
imul
pushf
inc
jle
inc
xchg
cmpsb
mov
rorl
pop
or
jb
aad
in
jmp
cmpsb
push
cwtl
mov
out
je
mov
and
loope
push
lods
push
xchg
or
jecxz,pn
add
sbbb
and
mov
pop
mov
icebp
and
jbe
loopne
push
leave
clc
adc
lods
or
cmp
push
sbb
sbb
jns
mov
mov
pusha
push
inc
mov
aas
mov
out
inc
jecxz
cmp
das
sbb
cmpl
dec
mov
push
aas
loope
iret
push
xor
ss
xchg
fidivrl
call
push
nop
mov
aaa
popfw
es
xlat
push
mov
mov
dec
pop
jl
pop
shl
shrl
xor
stos
jae
xor
imul
push
imul
outsb
insb
imul
andb
adc
xchg
popf
ret
sub
popa
fwait
jecxz
lcall
jmp
xchg
push
add
add
pop
add
pop
sbb
pop
lods
stc
add
out
xchg
sbb
out
mov
lea
mov
pop
xlat
faddl
ljmp
in
addl
dec
sub
and
jnp
push
add
push
pop
loopne
pop
adc
xchg
loope
fadds
dec
lods
imul
pop
sbb
or
lds
xchg
aam
push
pop
and
dec
mov
xor
jns
mov
add
popf
cmpsl
and
loopne
and
xor
test
cmp
jl
fadd
mov
xor
push
lret
lea
shll
push
je
pop
or
cs
pusha
leave
mov
mov
lret
adc
das
cmc
jb
lods
xchg
cld
ret
inc
mov
jne
sahf
movsl
pusha
mov
das
pop
push
gs
les
adc
aam
mov
pop
mov
rcl
sbbl
cmp
movsl
jae
sub
push
or
dec
scas
imul
out
insb
out
dec
sbbb
mov
jmp
test
or
cmp
pusha
add
out
call
or
mov
outsw
ljmp
push
decb
in
repnz
dec
fidivrs
call
hlt
push
test
fidivl
sbb
repz
cltd
lret
pop
xchg
or
idivl
inc
adc
mov
cmc
inc
xor
push
aam
jae
adc
jnp
cmp
dec
or
jb
pop
imul
xor
rcr
loope
push
loope
inc
inc
jge
aas
adc
push
adc
inc
push
fsubrl
lret
inc
and
inc
push
mov
aam
cmp
push
sub
aas
pop
imul
lea
stos
mov
cmpxchg
inc
sbb
ja
cld
xchg
mov
push
xchg
sti
pop
std
push
and
shl
jl
imul
out
push
or
pop
movsl
and
push
xchg
adc
mov
mov
dec
fwait
popa
push
push
dec
sub
leave
cmpsl
push
out
fldt
dec
or
in
push
mov
sahf
sti
aas
imul
out
add
das
cmp
cmc
cmp
xlat
imul
je
push
add
push
mov
jl
or
or
cmp
sub
mov
inc
jge
mulb
push
mov
pop
xchg
lea
mov
sbb
leave
loope
or
push
and
mov
mov
push
inc
inc
mov
pop
test
add
and
xchg
cmc
or
out
cmp
imul
and
rolb
jnp
pop
fidivl
mov
popa
out
inc
jns
out
cmpsb
repnz
push
es
xchg
bound
fwait
mov
loope
jo
mov
mov
dec
addb
notl
lret
int
popf
call
inc
pop
fs
mov
pop
mov
fld
dec
gs
xchg
dec
mov
jecxz
in
sbb
ljmp
test
or
int
sub
sbb
in
fldt
mov
cld
dec
xor
dec
in
adc
stos
cmp
pop
dec
inc
push
bound
and
test
or
pop
pusha
ret
ljmp
mov
icebp
sbb
mov
data16
mov
jnp
mov
inc
sbb
push
call
dec
imul
movb
aas
in
hlt
add
push
mov
add
xchg
mov
and
fs
push
xor
inc
outsl
jo
mov
fisubrl
ret
sbb
pop
cmp
es
mov
test
cs
pop
das
aam
push
fisubrl
dec
xor
pop
push
xchg
int3
cmp
mov
lods
pop
sub
js
sbb
pop
aad
rcll
sub
fistl
dec
aas
insb
mov
jae
pop
lcall
sub
shll
movsl
rcr
daa
fisubrs
lret
pop
shll
addr16
fwait
mov
pop
dec
inc
mov
ja
fiaddl
sarl
pop
dec
xchg
ffree
movsl
imul
stos
notl
sub
pop
add
or
mov
call
sub
movsl
mov
xchg
jl
daa
and
jecxz
add
hlt
loope
xchg
push
jo
imul
movsl
imul
push
jns
xchg
mov
sub
and
enter
push
imul
sub
mov
fldenv
dec
mov
dec
insl
mov
fstpt
add
push
daa
ret
aas
in
xchg
cmpb
aam
fisubs
inc
addr16
dec
adc
leave
lea
subl
outsb
inc
jle
mov
pop
jecxz
idivl
arpl
faddp
es
dec
xchg
js
fsubr
aas
int
pop
sub
push
dec
gs
mov
adc
and
enter
rorb
pop
leave
inc
insb
and
fsubrs
adc
dec
data16
gs
add
xchg
mov
adc
pop
rorb
fs
sbb
outsl
adc
ja
imul
lea
xor
sub
add
xchg
test
ja
and
int3
nop
movsb
icebp
insb
mov
out
dec
or
pusha
lds
div
xchg
bound
xor
data16
inc
jp
gs
mov
outsb
dec
cmpsl
std
loop
adc
mov
and
fwait
add
jne
and
mov
fisubl
leave
xor
push
out
lcall
pop
mov
sbb
data16
fdivr
cmp
popa
into
pop
shll
roll
xor
enter
out
push
and
inc
push
cmp
in
test
cmpsl
jl
stos
mov
insl
xchg
sub
dec
data16
out
push
xchg
jne
jg
xor
ret
imul
jecxz
rorb
xchg
fsts
pop
add
shrl
sbb
movsb
inc
rorb
call
jg
call
pusha
inc
pop
fs
or
sub
mov
jle
enter
inc
mov
scas
shrb
call
add
lock
push
mov
rorb
push
scas
sbb
inc
or
js
sti
pop
int3
mov
scas
out
stos
push
cmp
lret
inc
xor
mov
imul
inc
adc
lahf
test
mov
das
mov
in
push
incl
idivl
adc
xor
std
push
mov
mov
jl
data16
sub
aad
sbb
xor
xlat
inc
dec
push
mov
sbb
test
pop
arpl
push
cmp
pushf
jb
hlt
adc
push
and
hlt
and
push
push
inc
fnsetpm(287
jno
pop
scas
or
ficoms
xchg
movsl
push
sub
and
loope
nop
pop
pop
or
xor
sarl
mov
out
insl
rol
adc
push
aam
outsl
mov
icebp
push
inc
pop
fs
jne
fmull
dec
cmp
push
sub
adc
out
cmp
test
cmp
sbb
cmp
add
pop
xor
xchg
insb
inc
stc
das
or
fisttpll
mov
mov
mov
test
ret
xchg
xchg
mov
fsubs
pop
mov
dec
jmp
or
cli
inc
dec
mov
aam
loop
fimuls
mov
lcall
pop
or
add
fmulp
jo
and
subl
mov
test
aas
sub
enter
orb
subl
fcmovbe
cmpsl
ficomps
loope
adc
pmuludq
cmp
out
mov
push
add
inc
fcoms
loop
fwait
and
dec
das
imul
xchg
std
scas
out
sub
sbb
stos
mov
cmpsl
aam
ret
and
or
test
mov
adc
out
add
insb
call
xchg
in
iret
xchg
leave
mov
jmp
imul
sahf
and
push
lret
inc
sub
into
cmp
inc
and
jle
fsubrl
mov
lret
into
sahf
add
js
xor
xchg
jo
aas
dec
xor
and
je
mov
jp
loope
ss
mov
push
xorl
and
pop
int3
xchg
push
mul
aas
push
into
shrl
pop
or
mov
inc
dec
xchg
lahf
jecxz
or
ljmp
and
pop
loopne
cltd
call
push
add
ljmp
mov
cs
sbb
push
inc
and
mov
mov
aas
pop
inc
and
jbe
pop
popa
and
imull
loopne
insl
jo
mov
mov
push
push
hlt
aam
shll
call
pusha
sahf
adc
cmpsl
pop
std
dec
sub
jle
adc
test
push
jge
subb
les
pop
or
das
lock
call
movsl
push
push
std
dec
hlt
add
xor
cmpsl
ljmp
mov
repz
and
popa
test
scas
loopne
aas
jge
std
pusha
adc
push
adc
adc
sub
test
sbb
xor
xchg
sub
mov
jl
subb
call
mov
leave
jg
in
cmp
push
inc
fidivrl
jne
xchg
adc
jo
mov
or
pop
xchg
loopew
xchg
dec
mov
cld
inc
push
insl
cmpsl
cmpsb
fidivrl
push
cltd
pop
scas
push
cmp
fsubrs
out
sbb
push
sbb
push
add
cmp
cmp
sbb
dec
mov
aad
push
mov
pop
jbe
mov
jmp
cmp
lret
loope
ja
inc
jo
dec
cmc
xchg
push
cmp
in
movsl
sub
clc
in
cltd
push
pushf
dec
leave
push
sub
loopne
fwait
and
loop
inc
out
call
mov
sbb
sahf
adc
out
shlb
repz
test
imul
icebp
fistpll
rcrl
sbb
imul
cmc
out
sub
mov
fistl
fstps
adc
stos
push
dec
out
push
jbe
sbb
jo
cmp
mov
push
and
sub
lock
mov
fidivl
outsb
in
lods
dec
dec
leave
loop
mov
int3
stc
inc
stos
jnp
je
aas
fisttpl
sub
lods
mov
add
shrl
mov
inc
add
mov
xorl
sbb
fisubl
sub
sbb
data16
imul
lods
inc
push
cmp
dec
stos
jmp
or
adc
cmp
enter
stos
and
mov
xor
pop
enter
mov
mov
inc
icebp
jo
int
not
js
fidivl
rcrl
nop
add
addr16
push
movsl
pop
xor
insb
inc
lods
imul
ret
and
pop
push
pop
adc
leave
cltd
pop
xchg
fisttpl
movsl
adc
pop
out
pop
dec
adc
mov
call
rcll
sbb
mov
xor
pop
out
test
leave
mov
sub
push
sbb
out
sbb
inc
icebp
sbb
jnp
sub
out
push
push
dec
adc
cmc
ljmp
pop
inc
divb
sbb
imul
inc
mov
aam
cli
pushf
pop
pop
mov
jno
push
cs
push
das
in
add
daa
stc
fstpt
in
in
stc
jp
imul
xor
mov
cmp
mov
and
sub
push
loop
push
push
dec
test
data16
data16
nop
out
push
movsb
xchg
inc
lahf
in
cmp
mov
outsb
aad
and
test
lahf
mov
fstl
inc
lret
cs
hlt
cmp
pop
cmp
loope
lea
les
int3
in
mov
addr16
comiss
ret
adc
test
sub
bound
loopne
popa
adc
xchg
insb
test
out
mov
cmp
out
sub
js
sbb
or
adc
dec
add
aam
call
dec
cli
and
lcall
and
pushw
data16
cwtl
mov
stos
pop
rcrb
rorb
ror
loop
bound
daa
pop
mov
push
xor
cmp
xchg
dec
pushl
shr
dec
mov
add
adcb
xor
scas
sub
jae
xchg
jecxz
mov
hlt
lods
jnp
mov
out
xchg
push
mov
js
add
lcall
sbb
addr16
fcoms
bound
stc
jbe
xchg
dec
adc
imul
mov
mov
test
inc
push
sbb
lcall
jl
mov
xchg
and
adc
lods
cwtl
sub
pop
stos
mov
or
pop
ljmp
rcll
lret
inc
inc
js
or
sti
loopne
sbbl
inc
jb
sbbb
adc
or
cltd
dec
shrl
out
daa
cmp
push
lock
aam
dec
lds
or
inc
sub
icebp
pusha
lods
mov
push
in
pop
sbb
rcrb
add
pop
xor
sub
fsubrp
cmp
cmpsb
pop
sub
rorb
stos
mov
test
lcall
mov
hlt
call
adc
gs
in
cmp
sub
adc
mov
call
inc
mov
inc
into
lcall
mov
mov
xchg
cmp
mov
imul
imul
jecxz
xchg
jl
cli
hlt
fcomi
outsb
es
dec
imul
test
add
jmp
adc
push
repnz
leave
shrw
sub
dec
inc
push
pop
cwtl
or
enter
pop
imul
jne
push
pop
stos
xchg
out
push
dec
mov
test
sbb
lock
mov
push
insb
in
data16
ret
in
push
inc
imul
imul
js
push
xor
mov
xchg
mov
imul
mov
dec
pop
jbe
add
loop
mov
sbb
push
imul
xor
int3
xchg
or
push
ret
pop
movsl
xor
mov
add
xor
fcompl
pop
clc
flds
adc
pop
or
jne
add
cltd
popa
jecxz
dec
push
imul
sahf
sub
push
call
test
jmp
rorl
and
in
ljmp
sub
outsb
js
add
ret
aam
pop
mov
nop
insl
bound
popa
sub
or
ja
lcall
mov
xor
mov
xor
xchg
add
es
imul
shll
mov
xor
sti
or
rclb
push
jmp
mov
negb
rol
test
out
adc
test
loop
outsb
sub
add
add
js
shrl
fsubl
mul
lock
push
inc
insl
stos
cmpl
and
mov
xchg
inc
lahf
out
push
rcr
into
mov
adc
dec
out
mov
jbe
pushf
and
inc
std
sbb
or
xor
mov
fcomps
cmp
cmp
scas
lock
ret
mov
pop
or
adc
xor
add
clc
lahf
das
xor
mov
lds
xchg
push
inc
push
or
out
push
test
jo
into
mov
cmp
in
xor
movsb
stos
test
in
fstps
adc
jne
jbe
jecxz
fs
xlat
mov
nop
fbld
or
pop
push
mov
adc
cmp
push
xor
sub
sub
xchg
add
jo
pop
pop
mov
repnz
adc
cmp
mov
aad
loop
push
popa
dec
clc
xchg
sbb
incb
scas
cwtl
xchg
fimull
mov
pop
or
call
out
push
mov
pop
add
cmp
jg
pop
jae
xor
adc
jmp
add
pop
or
pop
insb
daa
out
or
out
popf
jp
xor
shrb
or
mov
cltd
pusha
data16
sbb
sub
loop
pop
movsb
mov
sbb
mov
das
mov
mov
in
cwtl
jbe
push
xor
cmpsb
sti
rorl
lock
inc
aam
cmpsl
mov
push
and
mov
mov
cmp
out
cmpsl
pop
cld
in
insl
dec
imul
inc
into
add
lret
pop
hlt
scas
pop
aas
repnz
pop
inc
adc
and
push
jecxz
pop
outsl
rcr
repz
ja
mov
outsb
sbb
push
pop
and
xchg
mov
in
jmp
push
in
std
cmp
pop
test
mov
arpl
scas
and
sub
cmp
jmp
push
movsl
push
pop
sbb
inc
and
outsl
and
mov
in
iret
hlt
outsl
jecxz
mov
xchg
fidivs
out
fisubrl
ret
push
adc
mov
and
pop
in
adc
loop
sub
sbb
sbb
jmp
lods
and
lds
lea
adc
mov
je
and
insl
lods
sub
clc
imul
and
jae
out
lret
push
lret
xchg
cli
jb
mov
and
lods
ss
and
jne
aam
add
sbb
repz
fwait
lds
imul
lods
mov
push
mov
xor
sub
xchg
mov
and
mov
push
xchg
and
pop
add
mov
loope
and
add
push
ds
mov
add
dec
out
mov
xchg
ljmp
push
cmc
mov
push
aaa
loope
sub
jns
push
imul
jbe
icebp
in
pop
and
pop
scas
add
divb
and
pop
jl
pop
mov
int3
dec
out
xchg
pop
imull
inc
sub
mov
cmp
mov
test
push
out
xchg
sti
negl
inc
into
cmp
cwtl
mov
sbb
or
test
fidivs
inc
push
ljmp
adc
fidivrl
push
hlt
sub
je
cltd
ret
pop
jecxz
xchg
decb
das
jnp
mov
pop
xchg
push
or
loop
jp
shrb
imul
flds
lahf
pop
into
or
hlt
stc
imul
andl
pop
sarl
and
xchg
mov
addr16
push
pop
in
lcall
punpckldq
pop
iret
je
cmp
cmp
ja
mov
cmp
pop
mov
fadd
fisubl
out
fdivp
push
xchg
test
xchg
dec
pop
iret
mov
mov
sti
dec
movsl
sub
dec
xchg
ja
imul
sub
mov
insb
jne
add
and
add
out
pop
into
sti
xchg
addr16
daa
jnp
mov
popf
pop
jecxz
lods
lock
test
pop
aam
adc
mov
sub
jle
or
push
cmp
sub
lods
pop
push
dec
ja
pop
sub
lods
sbb
push
sbb
fstpl
mov
enter
dec
fldcw
int3
pop
insb
mov
jge
jmp
lcall
out
or
out
cmp
mov
les
pop
leave
sbbb
sub
das
xor
pop
mov
popf
mov
in
not
pop
ja
out
adc
push
mov
movl
imul
mov
cmc
dec
test
cmpsb
inc
das
and
imul
loopne
lods
push
cmp
data16
and
pop
push
clc
xor
push
jecxz
mov
push
pop
pop
adc
pop
xor
inc
adc
imul
sti
imul
jnp
xor
and
adc
stos
orl
mov
fs
pop
in
outsb
xorl
mov
fsubs
push
pop
push
std
out
mov
test
lret
shrl
cld
mov
inc
popa
adcl
ja
lret
pop
adc
or
add
jb
inc
mov
lahf
sbbl
sahf
outsl
lds
mov
aam
push
shll
and
mulb
shrl
sub
data16
lds
arpl
icebp
fcomps
imul
insl
cwtl
xor
mov
xor
in
loopne
shl
stos
lods
bound
clc
mov
aaa
xor
sbb
sbb
sbbl
mov
fmul
gs
cmp
neg
in
sub
andb
cmp
addr16
gs
out
mov
dec
dec
inc
test
inc
xchg
call
xor
call
scas
mov
test
call
gs
movsl
stc
lcall
inc
test
cmc
and
inc
movsb
out
cmp
int
call
sahf
call
in
mov
and
das
jmp
adc
imul
outsb
xor
out
add
das
bound
gs
and
in
test
mov
in
sbb
push
xor
mov
bound
stos
imul
loop
jp
mov
xor
push
out
shll
push
out
addr16
push
aas
in
push
out
inc
push
xor
pusha
push
push
lds
xor
mov
addr16
out
pop
lea
dec
push
stos
or
addr16
das
stos
daa
jmp
and
adc
pop
xchg
push
in
shl
inc
sbb
dec
out
gs
leave
call
sub
jmp
pop
int
loope
imul
in
stos
scas
in
pop
out
data16
addr16
mov
addr16
test
test
inc
pop
and
in
sub
xor
sub
out
adc
loopne
bound
outsl
xchg
gs
in
outsl
inc
cs
xchg
out
insb
jae
lods
in
dec
lods
dec
in
inc
xchg
inc
sub
xchg
shll
push
in
lods
and
call
inc
and
call
add
stos
inc
stos
jg
sbb
sbb
jge
pop
push
mov
pop
gs
sub
cmp
sub
inc
and
lods
add
xchg
inc
push
xor
add
inc
popa
inc
cs
and
mov
mov
push
mov
int3
cmp
mov
mov
lahf
hlt
push
xchg
ljmp
jg
pop
fsts
xor
mov
dec
loop
xchg
jmp
lea
ds
mov
movsl
cli
push
or
push
loope
iret
aaa
mov
inc
jecxz
les
inc
inc
jle
inc
jno
popa
pop
imul
pop
js
scas
clc
pusha
push
insl
dec
iret
nop
nop
scas
stos
stos
dec
sbb
outsb
je
pop
inc
mov
sbb
pop
xor
mov
lods
scas
fbld
jne
pop
mov
jo
push
addr16
je
adc
in
jg
push
mov
inc
imul
dec
ret
cwtl
cmp
cmp
dec
test
add
xchg
fistps
out
and
daa
mov
xor
imul
push
adc
scas
xchg
or
cld
test
mov
push
lods
aaa
repnz
sbbb
addr16
in
lock
nopl
sbb
sub
dec
xchg
in
fildl
xchg
rcll
roll
or
lret
add
fwait
or
test
notl
jl
mov
cmp
inc
sub
inc
and
mov
fistps
daa
mov
or
scas
adc
xor
leave
push
push
ret
mov
lret
sub
push
call
mov
data16
popa
mov
pop
push
xor
lcall
push
test
xor
outsb
or
push
scas
xchg
push
fisubl
movsb
sbb
stc
jmp
sbb
or
mov
hlt
dec
ficompl
jmp
stos
xchg
aam
imul
push
mov
jns
fsts
dec
gs
lods
push
lds
push
cmpsb
repz
push
add
add
dec
inc
mov
inc
outsb
lret
loope
mov
pop
stos
jo
fisubl
stos
shrb
dec
dec
jns
jbe
fisubl
jmp
cmp
hlt
jg
movsl
negl
push
popa
pushl
in
or
push
insl
cmc
loope
jp
loop
insb
fdiv
jb
xor
gs
shl
adc
adc
lahf
fstl
adc
aas
pop
mov
inc
sub
xchg
sbb
ljmp
ja
pop
pop
inc
mov
xchg
cmpsb
xchg
lret
jmp
mov
push
mov
aaa
hlt
add
sbb
adc
sub
enter
enter
dec
gs
ret
shll
aam
or
mov
adc
shll
cs
cltd
jp
pop
mov
ja
ja
mov
sub
subb
xchg
push
mov
xor
aad
cmp
xor
arpl
jnp
sbb
stos
dec
insl
in
xchg
jg
addr16
inc
xchg
pop
movsl
mov
pop
adc
daa
xchg
push
pop
inc
xchg
test
jmp
and
cmp
das
loope
pop
mov
push
leave
mov
mov
xchg
adc
pop
xchg
pop
sub
vmwrite
or
dec
or
adc
pop
inc
test
outsl
add
shl
in
mov
pop
sub
imul
sbb
jmp
data16
or
push
das
mov
in
add
sbb
mov
jle
sahf
inc
out
mov
sub
mov
pop
mov
jmp
loop
leave
movsl
out
lret
push
push
pop
imul
lods
fcoms
push
push
cmp
push
aas
sub
sbb
inc
mov
jne
jae
or
loope
idiv
hlt
cmpsb
xchg
in
dec
out
stos
lahf
sub
test
sbb
and
pop
clc
test
jecxz
jns
push
sub
cmp
pop
mov
icebp
pop
cmp
lret
addr16
in
pop
adc
fcmove
jae
mov
push
cmpsb
push
inc
inc
and
ljmp
test
fildl
repnz
sahf
and
dec
test
sahf
in
mov
mov
rclb
scas
and
mov
and
sub
pop
stos
cmp
loop
pop
push
inc
xchg
pop
mov
mov
inc
rcll
popa
pop
and
jp
std
push
dec
push
aam
sbb
hlt
jne
movsl
and
pop
gs
cs
adc
mov
pop
cmc
loope
jne
fs
sbb
fisubrl
cmpsb
dec
pop
mov
sti
lret
jge
xor
loope
ficompl
or
cmp
daa
xor
sbb
jle
jl
inc
fs
and
adc
xchg
jge
incl
add
mov
aas
popf
outsl
in
pop
enter
mov
aad
out
adc
sbb
cltd
pop
xchg
call
cmpsb
mov
pop
hlt
push
mov
pop
jmp
mov
adc
and
xor
mov
xchg
cmc
lcall
pop
int3
and
push
cmp
xchg
fsubrs
cmp
test
adc
or
mov
call
pop
pop
sub
lea
lods
adc
jmp
gs
shrl
imulb
movsl
lcall
inc
dec
test
hlt
mov
mov
mov
mov
push
xchg
push
pop
insl
cmp
sub
adc
sub
call
dec
pop
pop
outsb
dec
xor
aad
ss
test
rorb
les
adc
mov
cmp
pop
in
cmp
out
lret
inc
lcall
pop
inc
hlt
cmp
fiaddl
pop
gs
daa
fdivrp
das
sub
push
pop
into
in
jns
movsb
mov
loopne
out
jne
ljmp
jge
mov
fidivrs
mov
call
sahf
dec
popa
out
mov
into
ss
mov
aas
sbb
lret
movb
insb
filds
xchg
sub
stos
notl
xchg
cld
enter
dec
int3
imul
push
push
push
lock
xor
call
add
lods
mov
pop
call
sub
sbb
pinsrw
mov
xor
push
mov
push
out
outsb
js
insb
xchg
push
cmc
aad
adc
nop
cs
cmp
fwait
add
mov
sarb
loope
xchg
push
and
fldl
inc
cld
in
out
push
stc
pusha
repnz
jmp
lret
and
push
push
push
add
inc
out
cvttps2pi
sub
arpl
cwtl
add
inc
pop
push
loop
mov
stos
xchg
fmulp
ret
and
adc
push
in
xchg
ja
scas
adc
pop
xlat
or
dec
nop
pop
sbb
outsb
mov
int3
mov
sbb
push
ret
cli
outsb
in
push
pop
adc
or
lcall
cmpsl
fidivl
xor
in
xchg
push
or
cmp
nop
enter
xchg
mov
imul
mov
inc
dec
mov
fnstenv
sub
mov
pop
sub
push
push
push
or
fprem
pusha
cld
js
fnclex
and
dec
push
pushf
pop
inc
in
stc
int3
lods
fdivp
dec
mov
sahf
or
shrb
push
or
rcr
or
outsw
pusha
aam
pusha
xchg
adc
fisubrs
dec
push
sbb
push
pop
xor
jae
sub
pop
je
cmpsb
sub
xchg
and
sub
fwait
test
insl
mov
mulb
loope
sarl
cmp
cmpsb
lea
jg
push
mov
jge
mov
lods
in
add
pop
int3
or
pop
iret
xchg
jmp
dec
cmp
dec
loopne
adc
jnp
sub
add
mov
jge
icebp
pushf
dec
lods
es
mov
call
pop
ffreep
lods
push
rcrl
push
jne
hlt
mov
adc
sbb
pop
or
or
nop
or
pop
pop
fidivrs
decl
mov
sub
hlt
add
push
es
dec
lea
repz
in
push
sub
loop
in
jecxz
dec
mov
ja
pop
imul
inc
mov
xchg
imul
stos
outsb
xchg
mov
xor
inc
stos
loopne
ss
pop
dec
testl
jno
push
imul
hlt
jle
mov
test
jnp
repz
push
iret
adc
fisubrs
ss
scas
add
push
add
push
pop
dec
xchg
fldcw
gs
add
lahf
and
lods
call
scas
add
adc
pusha
push
jle
push
ficomps
dec
out
mov
call
cmp
stos
xor
or
stos
or
mov
push
xchg
negl
cmp
pop
inc
daa
outsl
push
add
fnstcw
sub
movsl
xchg
je
mov
out
jbe
pop
fldt
mov
fs
fucomp
adc
xchg
dec
sub
pop
cmc
xchg
out
aad
and
adc
mov
mull
push
dec
sbb
std
mov
adc
dec
mov
add
mov
lret
mov
cltd
xchg
lret
loope
in
mov
js
cli
push
sub
sub
or
in
and
dec
fcoml
xchg
xor
stos
daa
scas
lret
movsl
cli
push
out
test
imul
lret
sbb
inc
xchg
stos
nop
adc
push
out
add
lcall
dec
test
cmp
cmp
mov
dec
jae
pop
insb
xor
data16
xor
rcrb
sti
sbb
xchg
aam
sub
mov
lret
xor
sub
and
dec
arpl
inc
call
loopne
pushf
imul
jl
or
cmp
pop
mov
es
xor
sbb
add
js
imull
test
sub
cmp
xchg
adc
and
sti
aam
gs
mov
dec
dec
pop
add
out
test
push
xchg
and
pop
push
and
mov
inc
out
leave
int
jne
sbb
shlb
mov
fsub
popf
int
sbb
jae
pop
cli
cmpsl
mov
cmp
sbb
arpl
shrl
mov
pop
push
test
fcomi
dec
xchg
cmp
xchg
insb
and
mov
ret
jno
daa
push
mov
xchg
lahf
jge
push
ror
jge
mov
loope
pop
fmul
jnp
push
lcall
inc
mov
and
pop
sub
out
int
lds
cmp
dec
or
xchg
fwait
fs
pop
xchg
cmc
sub
shl
insb
add
push
jo
fs
ss
dec
in
popf
out
sbb
mov
fidivl
cmpsl
bound
aad
aaa
outsb
mov
imul
inc
sti
xor
ja
jg
add
xor
jo
sub
pop
bound
xor
scas
movsb
push
xchg
bound
jne
push
iret
sub
or
fisttpll
add
repnz
sub
insl
or
movsl
call
xor
aam
gs
jne
cmp
popf
test
mov
mov
and
arpl
add
iret
mov
or
and
pusha
ror
add
rcrl
decb
nop
popa
leave
push
ficoml
movsl
adc
out
push
and
lcall
jno
mov
cltd
test
outsb
roll
pop
imul
dec
test
cli
add
sahf
or
fidivl
lds
stc
mov
jl
das
and
iret
mov
daa
mov
pop
adc
scas
ljmp
and
test
shl
cltd
test
dec
ljmp
out
push
in
cmp
scas
jl
and
lods
fs
sbb
pop
sbb
ja
push
repz
push
pop
shll
jno
push
mov
inc
bound
movsb
in
clc
test
dec
into
or
rolb
pop
in
mov
xor
call
ret
xorb
dec
call
sti
mov
and
call
and
xchg
enter
call
xchg
inc
fs
testl
push
add
lods
and
scas
ret
add
sub
lret
dec
aad
pop
xor
movl
hlt
mov
setbe
mov
pop
in
subb
push
int3
nop
out
lret
out
aam
popa
cltd
pop
fisttpll
test
or
lcall
imul
mov
sbb
push
js
cli
push
dec
addb
cmp
cmp
fdivl
jecxz
hlt
lods
dec
cltd
loop
ficoms
adc
dec
repz
or
lds
or
test
pushf
sub
mov
dec
loop
sub
lock
push
jmp
aam
addr16
pop
outsl
fbld
sub
sub
mov
dec
mov
fcmovu
test
das
pop
add
jge
adc
xlat
xor
and
movsb
mov
push
mov
adc
inc
dec
dec
decb
imul
push
rorb
inc
lret
nop
dec
addr16
jbe
int3
stos
dec
aam
jbe
int3
outsb
cwtl
sub
push
stc
xor
xor
pop
in
pop
sub
mov
pop
sub
mov
lods
mov
push
movsb
jo
fs
push
lock
dec
sub
dec
sub
add
inc
rolb
xchg
orl
popa
fsts
js
in
cli
and
or
in
test
mov
repz
ljmp
sub
insl
mov
add
or
loop
fildl
jnp
das
mov
sbb
divb
jb
ficoml
jbe
aam
dec
adc
dec
nop
and
cmp
or
pop
mov
and
lret
push
daa
fnstsw
cs
dec
out
sub
xor
add
jle
scas
and
jo
sub
jbe
js
lods
fisttpl
mov
cmp
pop
cmpsl
xchg
fwait
add
mov
ja
fcmovnbe
aam
roll
rcl
add
push
xchg
and
insb
out
sub
dec
int
mov
cmp
cmpsb
xchg
or
inc
add
orb
test
push
pusha
lds
mov
aam
loope
sbb
movsb
jecxz
xor
out
mov
test
cli
pusha
out
and
hlt
daa
testl
scas
iret
dec
xchg
hlt
fimuls
xchg
sarl
shl
push
or
mov
mov
and
ds
das
sub
cli
adc
xchg
mov
movsl
xchg
and
mov
jle
and
sub
loop
test
test
and
jb
pop
fldenv
imul
jo
pop
mov
pushf
push
imul
or
ljmp
pusha
movsb
fidivrs
xchg
push
fldl
mov
mov
nop
xchg
in
pop
dec
mov
jmp
mov
shrb
call
mov
pop
insb
cmpsl
out
pop
mov
stos
dec
and
cmp
fxch
lcall
push
decl
out
ficompl
add
out
xchg
mov
out
cld
push
or
sbb
out
adc
movsl
pop
push
xor
je
scas
inc
nop
push
pop
xor
cmpsb
sbb
ss
lcall
mov
aam
rcll
push
sbb
or
mov
mov
dec
xor
int3
lret
ret
daa
sub
dec
jmp
inc
call
mov
push
jb
mov
and
push
sub
imul
cmpsl
dec
das
adc
jecxz
xor
paddsb
mov
push
fnsave
out
add
cld
add
jnp
scas
cli
inc
pusha
cli
pop
addr16
addr16
rcll
xlat
data16
dec
ja
dec
or
pop
rcl
in
roll
sbb
dec
mov
fmul
push
mov
dec
in
xchg
push
add
mov
test
call
imul
clc
outsb
mov
add
sub
repz
aam
xor
add
xor
mov
ret
pop
shll
stos
pop
add
xchg
repnz
insb
rcll
and
je
cmp
or
mov
cmp
jecxz
xchg
xor
sub
xchg
imull
inc
push
mov
gs
push
test
stos
outsl
aas
and
push
out
fwait
test
or
xor
out
ds
ljmp
push
sahf
or
out
jecxz
push
jbe
xchg
mov
or
lahf
push
pop
dec
lret
push
popa
xchg
stc
sbb
pop
inc
and
fiaddl
imul
xchg
mov
test
sub
imul
std
xchg
loope
mov
aam
in
repz
loop
inc
jp
pop
imul
dec
inc
jmp
sahf
pushf
lret
xchg
jae
out
cltd
test
ret
pop
pop
cs
sub
push
outsb
shll
mov
push
imul
dec
mov
pop
sti
dec
mov
pushf
sbb
aam
adc
adc
push
xchg
mov
shrb
jl
hlt
push
add
sub
mov
push
sbb
cld
inc
dec
inc
in
cmpsl
mov
jl
xchg
out
iret
mov
je
adc
in
sub
movsb
and
adc
popf
ja
aaa
add
stc
arpl
movsl
pop
push
ret
pop
sahf
mov
xchg
mov
mov
aam
hlt
push
push
repnz
dec
dec
xor
cmp
lret
call
sub
les
cli
popa
imul
add
sbb
cmp
out
shrb
mov
stos
stos
adc
fcmove
in
sbb
ljmp
repnz
xchg
jge
subl
push
mov
out
call
shll
pop
and
movsl
cmpsl
js
xlat
xor
adc
in
fbld
sub
or
sub
cmp
sbb
jne
xchg
push
inc
imul
mov
dec
test
clc
mov
ljmp
pop
xlat
call
pop
add
in
and
movsl
adc
clc
cltd
sti
mov
pop
xchg
jl
rcl
inc
add
movd
push
cmpsl
sahf
dec
mov
mov
lret
and
fdivp
jnp
pop
dec
stos
push
mov
test
icebp
mov
mov
loopne
pop
lcall
push
xor
mov
in
push
jge
std
jbe
and
add
mov
dec
pop
mov
xor
aas
add
push
dec
xlat
ljmp
stc
fsubrs
mov
adc
jmp
add
mov
lahf
pushl
push
out
and
inc
add
push
pop
push
mov
das
cs
and
jge
out
sub
mov
mov
push
sbb
out
ss
and
xchg
push
jg
mov
out
fs
scas
outsl
cltd
imul
add
data16
pop
loopne
or
popa
sbb
insb
and
in
xchg
in
shl
sub
jbe
sbb
mov
flds
in
or
pop
imul
and
cmp
cmpsb
cmp
outsl
ret
sbb
movsl
movsl
xor
gs
and
push
mov
mov
dec
and
push
dec
gs
and
mov
out
mov
ss
loopne
push
lds
xchg
sub
and
add
outsb
jmp
push
scas
das
cmp
and
jp
cmp
ljmp
cmpsb
dec
daa
inc
stos
gs
sub
sbb
scas
shl
enter
popa
popa
sub
imul
dec
loop
aaa
loop
push
and
and
sbb
out
pop
dec
addr16
loop
gs
pop
adc
push
stos
sub
in
outsb
scas
insl
movl
shl
int
pusha
rcll
push
mov
sbb
in
int
mov
shr
xchg
sub
lock
sub
sub
gs
shll
sbb
sub
out
subl
adc
pop
adc
dec
in
scas
test
jo
jl
jo
dec
mov
imul
data16
push
scas
dec
xor
sub
test
stos
sbb
fdivs
lods
mov
pop
addr16
scas
in
in
xor
outsb
fsubrs
adc
pop
outsl
mov
sub
mov
push
push
call
pop
jo
and
fs
ds
push
cmpsl
inc
jle
inc
pop
mov
push
push
loop
in
pop
call
aam
insb
xchg
sub
aas
push
out
and
in
gs
call
dec
dec
call
in
dec
sub
and
or
jnp
or
sub
stos
dec
xor
pop
call
mov
pop
sti
xor
mov
dec
mov
push
ljmp
gs
test
int3
rcl
xchg
insb
mov
in
iret
out
push
dec
cmpsl
loope
xchg
and
xchg
les
mov
ja
adc
test
or
pop
push
rorb
sbb
lcall
fisubl
push
lods
ljmp
fwait
mov
cwtl
or
aam
in
xor
inc
sbb
mov
imul
cmpsb
fidivs
in
cltd
sub
push
jmp
pop
push
aam
push
imul
fdivl
cwtl
out
push
pop
and
mov
sub
je
scas
in
sbb
sub
mov
push
pop
sub
cli
inc
lret
bound
mov
mov
push
push
xlat
mov
xchg
jecxz
lcall
es
cmc
mov
sub
fwait
fsubrs
les
repnz
cli
in
sub
lods
push
adc
test
jmp
push
push
inc
or
repz
push
loope
in
push
loop
lea
pop
inc
jbe
aad
sub
movsl
bound
xchg
or
jbe
fisubrl
gs
push
jmp
fcomps
dec
fildll
dec
out
hlt
cli
push
mov
xchg
inc
xchg
loop
and
test
push
jmp
test
cmc
cmp
loop
test
sti
int
pop
imul
cmpb
aam
repnz
cmc
lods
xor
or
ljmp
fmull
xchg
test
xchg
orb
cltd
ja
jmp
sbb
arpl
aam
aam
hlt
fldt
cmp
push
xchg
push
sbb
jl
xor
inc
sbb
mov
xor
adc
repnz
push
ja
mov
clc
je
mov
mov
and
loop
xlat
insb
lcall
adc
push
repnz
loop
in
push
and
aas
cmp
dec
xor
mov
not
and
out
sub
stos
mov
push
adc
mov
movsb
inc
and
out
movb
call
stc
sub
ds
add
insl
pusha
push
insb
inc
lods
aaa
das
imul
inc
pop
push
mov
push
adc
mov
sarl
pushf
rcrl
pop
inc
cmp
lock
push
cmp
cmp
icebp
js
fsts
xor
call
mov
pushf
pop
mov
imul
dec
ljmp
push
dec
or
test
stos
sub
jmp
sub
stc
xchg
in
fstps
add
in
cli
inc
jns
xchg
mov
adc
push
add
xor
sub
out
ret
mov
shlb
sub
dec
and
outsl
mov
sub
jne
js
mov
cmp
in
out
mov
jecxz
rcl
pushf
roll
adc
jl
and
ds
jae
or
cmpsl
stos
fisubrl
sub
test
push
out
movsl
jle
imul
mov
mov
movsb
dec
loop
imul
je
mov
jbe
insl
sbb
mov
cmp
jg
push
faddl
mov
pop
mov
xor
sbb
sub
pop
lahf
in
xchg
mov
add
cmp
mov
jae
adc
repnz
pop
pop
cmpsl
das
jns
insl
ljmp
inc
lods
mov
jns
inc
sbb
xchg
push
and
stc
sbb
mov
ljmp
fsts
sbb
pop
add
int3
xchg
movsb
inc
mov
loop
fwait
xor
in
and
xchg
out
dec
fildl
push
dec
out
mov
jle
and
push
fwait
negl
xchg
jnp
pop
and
xlat
pop
decl
push
add
loope
mov
test
push
mov
adc
fiadds
pusha
sahf
fcoms
jb
insb
movsl
scas
inc
psrad
in
push
pop
cmc
loope
or
hlt
jbe
pop
gs
pusha
cmp
inc
xor
cmp
pop
fcmovbe
lea
aam
pop
filds
push
icebp
pushf
stos
mov
mov
cmp
mov
movsl
fcompp
inc
or
ficompl
mov
in
mov
xchg
mov
out
lods
imul
rcll
jo
inc
addr16
pop
fstpt
dec
jge
mov
push
in
inc
inc
and
sti
sbb
pop
jno
inc
sbb
pop
sub
gs
xor
inc
stc
and
out
push
xor
call
jg
mov
mov
inc
stos
cld
rol
aam
lcall
sbb
fimull
sbb
pusha
jg
or
sbb
pop
adc
sbb
add
mov
or
fcmovne
sarl
imul
mov
shll
sarb
xchg
icebp
sahf
scas
jecxz
les
test
pop
mov
jl
addr16
jb
and
xchg
pop
cmovno
xchg
xor
jbe
adc
mov
add
insb
repz
inc
push
sub
mov
mov
aam
mov
xor
daa
dec
mov
jmp
pop
out
push
ljmp
and
sub
inc
je
mov
pop
in
lea
cmp
pop
or
lret
pushf
push
dec
sbb
ficompl
imul
mov
and
cli
mov
adc
mov
xor
popa
bound
cmp
hlt
sub
push
xchg
mov
add
mov
ficoms
hlt
roll
jne
sbb
inc
incl
test
dec
enter
or
test
ljmp
jns
or
inc
pop
arpl
push
decb
leave
cmp
xor
loope
fildll
pop
xor
hlt
ja
add
mov
stos
push
ja
add
call
xchg
loopne
push
das
ljmp
out
outsl
add
pop
mov
clc
imul
jo
sub
cmpsl
mov
xchg
data16
roll
xor
out
ljmp
pop
dec
push
mov
leave
divl
xchg
dec
pop
pop
out
dec
push
dec
lods
adc
mov
or
lcall
je
mov
inc
addr16
out
xchg
mov
imul
outsb
adcb
push
loop
aam
call
lods
in
cmove
mov
mov
and
jbe
fldz
sub
or
shl
retw
push
shll
pop
cmc
test
xorl
test
out
mov
fisttpll
cmpsl
mov
lods
test
xchg
sbb
in
loopne
push
jns
or
fdivrl
ja
notl
adc
push
xchg
out
mov
mov
hlt
ss
mov
ret
push
jne
aam
hlt
add
add
outsl
pusha
jo,pn
addr16
pop
jno
dec
xor
mov
enter
mov
jae
adc
add
aam
out
dec
popa
push
xchg
cld
lods
sahf
pop
mov
pop
js
dec
shr
pop
xor
dec
xorb
mov
pop
mov
fimuls
mov
cmc
shlb
outsl
dec
bound
mov
mov
out
cmpsw
push
imul
mov
fld
add
pop
jmp
iret
pop
xchg
inc
enter
push
jle
push
stc
dec
push
inc
dec
push
imulb
fistpl
xor
aam
jnp
stos
push
dec
push
add
jbe
fimull
insl
imul
test
cmp
scas
sbb
jmp
aad
in
pop
jmp
jnp
and
mov
in
loopne
in
inc
mov
insl
mov
push
pop
inc
mov
les
add
ljmp
out
test
cmpb
pop
dec
cmp
pop
mov
fistl
fisubrl
lods
xorl
ds
jl
pop
mov
sub
push
dec
lods
ljmp
stos
test
pop
add
xchg
pop
insb
fnstcw
cld
mov
sub
jo
mov
mov
dec
pop
xchg
mov
shll
cmp
sbb
mov
xchg
push
pop
sbb
int3
inc
test
jg
aam
jmp
shr
movsl
cmc
std
dec
xchg
rcrl
or
sbb
mov
imul
shrb
cltd
in
mov
rcll
mov
cmc
pusha
or
add
ficoms
imul
rcl
aam
sub
mov
inc
jbe
sub
mov
adcl
pop
insl
mov
call
adc
push
je
fidivrl
sahf
mov
dec
sub
jo
cmpsb
loop
pop
sbb
mov
pushf
lods
out
dec
ljmp
push
es
testl
lret
hlt
xchg
push
xchg
sub
int
mov
sub
inc
mov
dec
test
push
pop
mov
insb
aam
imul
sub
daa
mov
adc
jne
add
in
in
push
add
ret
mov
inc
in
ss
iret
fsubs
or
add
fcmovbe
and
dec
ljmp
pusha
sarl
test
es
cld
icebp
cmp
pop
mov
fsubrs
or
mov
pop
dec
fnsave
loop
pop
shlb
cmp
mov
adc
jecxz
repnz
out
aam
add
xchg
inc
movsl
roll
loopne
adc
pop
push
xchg
pop
shll
or
cli
inc
cld
sub
mov
add
pop
mov
push
inc
lock
sahf
pop
push
outsl
es
ret
insb
mov
and
push
and
loopne
mov
enter
pop
adc
daa
xchg
bound
sbb
push
mov
mov
inc
pop
jno,pt
dec
mov
mull
loope
mov
jne
dec
lds
mov
incb
lret
js
jbe
lcall
in
cmp
icebp
aam
dec
int
push
add
fisttpll
shll
lcall
push
inc
jno
imul
mov
icebp
je
pop
into
jmp
mov
sbb
cmp
xchg
imul
dec
jecxz
fiaddl
sub
pop
push
sub
adc
xchg
outsl
test
sbb
repnz
xlat
gs
stos
ret
repnz
jge
sbb
xchg
call
push
pop
add
mov
sbb
pop
add
mov
cltd
idivl
pop
cmp
fbstp
in
mov
insb
sub
insl
inc
ror
dec
repnz
in
jne
ficompl
sarl
aam
cmpsb
jne
dec
xchg
repz
mov
sub
push
cmp
jmp
sbb
mov
daa
sarl
or
inc
mov
pop
mov
js
push
movsb
sub
call
adc
arpl
jge
dec
jae
rol
loop
mov
divb
inc
loop
emms
out
in
lret
dec
loope
sbb
ljmp
xchg
stos
and
daa
sbb
pop
je
loope
xor
outsl
hlt
push
add
lahf
adc
das
lahf
mov
fnsave
pop
add
sbb
divb
dec
or
fistps
dec
xchg
sub
hlt
mov
sub
dec
jge
dec
subl
iret
mov
push
cwtl
or
rclb
xchg
push
cs
sbb
mov
sub
pushl
mov
adc
frstor
and
adc
mov
rcr
dec
inc
sbb
imul
xacquire
cmpsl
idivl
mov
insl
in
mov
daa
dec
jp
pop
lret
bnd
insl
xor
and
inc
int3
aas
lods
xor
sbb
mull
jle
cmp
lds
xchg
movsl
aam
call
push
mov
and
test
ljmp
in
cmc
mov
notb
cmc
shr
jmp
aam
sbb
jmp
int3
inc
int
out
fdivrl
cmpsl
or
push
or
cmp
mov
push
dec
in
lods
jae
outsl
rolb
mov
jp
scas
fisttps
inc
dec
xor
bound
test
jmp
push
xlat
cwtl
add
mov
mov
ror
movsl
pop
sbb
ljmp
movsl
out
mov
jmp
out
cmpsb
out
mov
test
inc
bound
adc
fcmove
scas
and
adc
sub
inc
shll
sub
pushf
addr16
or
das
mov
mov
jbe
pop
dec
cmp
adc
arpl
andb
mov
das
pop
and
in
js
cld
insb
ds
cmpsl
movsb
adc
neg
mov
addr16
clc
movsb
es
mov
imul
adc
xchg
push
mov
push
test
xchg
loope
call
sar
mov
fs
sti
mov
ja
pop
clc
dec
mov
out
test
fstp
sahf
mov
and
push
imul
push
mull
or
dec
sub
pop
shll
mov
cmpsl
das
mov
out
pusha
leavew
fisttpll
or
mov
arpl
call
add
movsl
dec
xchg
cmc
xchg
pop
or
dec
mov
cs
loop
rep
push
lds
nop
fdivl
push
aas
mov
addr16
loopne
out
dec
mov
push
inc
and
pop
pop
dec
inc
rol
aas
xlat
lods
outsl
xchg
pusha
jg
sbb
mov
clc
dec
imul
popa
call
lds
push
sub
jl
dec
sub
sub
xor
imul
mov
dec
push
aad
xor
cld
xor
mov
jbe
cmp
cld
inc
dec
call
cmpsb
stos
lock
movsl
inc
ficoms
inc
in
jge
das
adc
movsl
add
sub
sti
mov
push
and
bound
dec
cmp
jg
and
xor
aam
out
jmp
cli
xor
sbb
ss
xlat
xor
imul
mov
addr16
loopne
addr16
mov
lds
push
adc
inc
pop
rcr
dec
movsl
dec
je
pop
sub
jge
inc
ja
es
pop
inc
iret
or
pop
cwtl
mov
sbb
lock
mov
loopne
jb
in
imulb
div
pop
stc
sub
pop
das
xchg
pop
and
hlt
xor
dec
pop
mov
mov
xchg
add
jl
sub
mull
push
add
daa
fdivs
gs
inc
adc
pop
mov
mov
iret
orb
sahf
sub
sub
rorb
popa
shr
push
pop
pop
into
inc
inc
in
scas
dec
mov
jne
mov
cmp
mov
aam
insb
add
pop
sahf
push
sbb
pop
nopl
adc
stos
imul
mov
test
xlat
mov
jmp
xlat
cmp
push
pop
xchg
push
outsb
ja
push
xchg
xchg
call
popa
and
push
jp
mov
insl
xchg
pop
test
pusha
sub
inc
out
lret
sti
in
int3
dec
and
leave
sub
imul
dec
cmpsb
jo
mov
pushf
mov
jmp
out
jp
out
add
jno
mov
mov
clc
add
imul
inc
pop
pop
ficoms
imul
pop
outsl
scas
and
lock
push
jge
adc
fisttps
cmp
icebp
push
sbb
loop
sbb
push
into
mov
notl
xchg
mov
movsl
cmc
je
bound
push
fimuls
imul
push
add
movsb
fs
or
push
sahf
and
sub
add
outsl
push
cltd
pop
lahf
ret
pop
or
mov
dec
fmul
cmpb
push
pop
inc
sub
pop
inc
cmp
mov
pop
mov
andl
loop
jge
adc
es
pop
inc
dec
mov
pop
repz
cmp
fs
nop
imulb
jmp
jmp
clc
fldenv
xchg
rcrl
inc
xor
test
ds
cmpsb
add
pop
js
or
push
imul
test
lods
fucomip
xchg
push
aaa
mov
into
out
cmpsl
push
inc
loop
imul
add
fstps
iret
push
idivl
xchg
add
pop
inc
mov
out
xchg
aas
vpshld
andl
pop
inc
push
cld
push
movsb
mov
pushw
inc
notb
test
push
imul
jl
push
in
lods
lods
popa
stos
mov
cltd
lcall
jbe
cmpsb
cmpsl
push
adc
sub
xchg
call
cmc
adc
xchg
in
inc
push
and
pop
or
pop
xchg
push
xor
pop
ja
fcomp
mov
pop
stos
insb
inc
cmp
xor
call
mov
dec
adc
loopne
adc
test
call
add
fisubs
addr16
xor
pop
xor
add
ds
ja
insb
or
test
std
xor
adc
inc
in
ljmp
push
xchg
pop
inc
lcall
mov
mov
xor
aam
pop
nop
int3
adcb
push
mov
xor
mov
jbe
cmpsb
add
jae
pop
cli
xchg
sub
push
ret
xor
std
push
xchg
loop
out
test
mov
bound
adc
push
push
inc
loop
shlb
popf
flds
lock
sbb
leave
or
icebp
sahf
adc
fsubrl
push
lret
outsb
loope
cs
mov
ret
mov
inc
jb
push
lds
sub
push
shlb
push
insb
insl
shlb
push
shrl
xor
push
mov
dec
push
sbb
jo
jecxz
push
pop
lock
int
in
push
pop
aam
sub
fimuls
push
adc
pop
add
inc
test
test
jo
les
out
in
push
iret
mov
or
shr
call
into
cmp
insb
repz
imull
ret
cmp
add
and
aaa
fisttpl
fildl
sub
pop
movsb
pop
imul
dec
mov
pop
and
xchg
mov
mov
out
test
xchg
out
add
dec
sub
sti
rcrl
ljmp
or
nop
test
cmpsl
dec
push
dec
xor
bound
lret
and
fwait
aam
mov
in
mov
mov
fidivs
pop
push
inc
insl
push
mov
call
lock
xchg
mov
xor
fistpll
adc
push
lahf
addr16
jg
test
xchg
das
adc
sbb
daa
cmp
mov
imul
in
push
mov
jmp
and
or
je
mov
push
push
sahf
loope
pop
push
xor
sub
dec
hlt
push
je
dec
push
pop
daa
push
sub
vpmulhuw
fistpl
mov
out
xchg
sub
imul
outsb
ljmp
imul
fisubs
mov
jo
loope
ror
inc
imul
mov
popf
fists
pop
xor
mov
or
test
xchg
scas
adc
cmp
or
dec
js
hlt
jns
mov
pop
add
insl
sbb
stos
adc
inc
mov
push
or
mov
mov
lcall
mov
pop
lret
notb
xor
movsl
iret
mov
jne
push
je
cmpsl
pop
imul
fdivl
xchg
push
insl
dec
es
in
xchg
or
test
mov
ret
lods
dec
in
cmp
xor
push
fsts
pop
cmpsl
sbb
pop
inc
into
push
pop
xchg
repnz
bound
push
aaa
mov
pop
jns
jo
adc
push
daa
and
sub
cmp
rorl
icebp
les
ret
mov
cmp
xchg
xchg
stos
sbb
mov
pop
or
scas
pop
xor
adc
cmp
inc
and
jb
adc
outsb
and
out
dec
call
insb
lcall
pop
sub
dec
inc
cmp
cltd
push
movl
or
hlt
sub
pop
inc
std
mov
adc
lods
jg
test
stc
dec
pop
sbb
sbb
pop
xchg
jo
inc
imul
or
mov
inc
insb
add
dec
roll
and
fdivrl
pop
gs
rorl
pushf
sbb
js
lret
push
imul
ds
outsl
xlat
aas
or
push
pop
lcall
xor
mov
mov
repz
loopne
cmpb
cmp
aam
stos
xchg
je
pop
lcall
dec
ljmp
imul
mov
stos
in
jle
or
rcr
hlt
push
push
dec
push
in
ja
sahf
mov
push
cmpsl
lds
int
fsubl
mov
fwait
pop
sub
cltd
das
loope
out
adc
cmc
mov
mov
push
cltd
add
pusha
xchg
xchg
mov
shrb
dec
and
xchg
stc
jmp
dec
es
cs
int
ret
std
mov
xlat
fisttps
sarb
movsl
es
stc
and
mov
dec
gs
adc
push
scas
mov
imul
addr16
shrb
gs
mov
xor
divl
in
add
movsl
aas
out
scas
inc
das
aam
push
sahf
gs
and
daa
jne
lret
sub
shlb
loope
shll
out
gs
xor
movsl
sub
icebp
push
gs
xor
push
insl
sub
adc
addl
out
and
fsubrs
out
addr16
das
sub
jo
in
push
sub
mov
scas
pusha
push
xor
shl
mov
bswap
and
cs
insb
aaa
sub
sub
sbb
in
dec
pusha
movsb
in
and
int3
loope
cmp
je
sub
scas
outsl
adc
push
dec
mov
int
push
imul
push
call
scas
shl
push
xchg
aas
bound
xchg
cmpsb
sti
push
mov
out
inc
addr16
push
in
xchg
push
jae
push
cmpsl
outsl
scas
popa
in
xchg
aam
mov
call
bound
lods
lods
dec
out
sub
dec
dec
outsl
leave
and
adc
call
insl
lods
jmp
call
loopne
mov
sbb
mov
push
mov
jo
aam
les
mov
pop
sbb
shl
cmp
and
call
inc
lock
test
stos
andl
push
in
movsl
shrb
loop
in
daa
mov
and
push
ljmp
gs
sub
das
push
imul
imul
int
or
dec
push
test
cmpsl
jno
in
or
aam
sub
pop
jmp
ljmp
je
add
lea
add
ja
je
and
ss
imulb
xlat
add
or
lods
loope
icebp
jmp
lds
gs
rcrl
idivl
inc
pop
shrb
jmp
ljmpw
imul
jnp
enter
insb
push
mov
jg
fwait
inc
test
push
push
inc
cmp
int3
lock
mov
xchg
sarb
es
add
mov
xchg
mov
sahf
loope
rcrb
iret
sub
mov
imul
jle
push
cmpsl
add
test
imull
mov
push
fnstenv
scas
sti
lds
adc
out
inc
fidivrs
mov
cmpsb
icebp
pop
jl
gs
push
imul
pop
nop
pmovmskb
cmpsb
or
pushl
fabs
arpl
xchg
pop
jns
std
cmpsb
adc
jae
mov
jnp
loop
ficompl
test
iret
movsb
inc
sbb
leave
inc
divl
jmp
add
mov
jno
fs
test
loop
test
push
and
push
jbe
ljmp
dec
in
out
and
aam
out
ficoml
or
jns
popf
sbb
addb
xor
movsl
imul
push
inc
xor
lds
das
and
cmpsl
cmpsb
xor
xchg
jl
mov
into
cmp
in
mov
mov
mov
call
push
push
call
hlt
mov
cmp
rcl
adc
stos
sub
xchg
hlt
mov
sub
mov
fstpl
add
loop
stc
mov
adc
sbb
xchg
sub
dec
push
xor
mov
cli
cmp
push
add
loop
lock
test
imul
or
pop
adc
test
pop
xor
call
mov
lods
test
pop
and
pop
adc
xchg
lods
in
mov
pop
push
xor
add
cmp
pop
mov
adc
mov
cs
call
fs
in
and
sub
repz
insl
inc
out
daa
hlt
push
dec
jo
sti
inc
push
aaa
gs
fsubrl
adcl
lods
sub
loop
in
sub
ficoml
and
or
xor
gs
push
xchg
das
mov
dec
inc
push
mov
imul
and
dec
adc
jbe
push
je
out
sti
mov
imul
sub
mov
in
daa
adc
call
mov
sub
jo
std
dec
in
das
sbb
adc
aaa
iret
movsl
in
xchg
mov
outsl
cltd
insb
pop
stos
and
loop
loopne
fldcw
in
cmpsb
xor
and
push
push
and
adc
pop
lods
in
inc
lock
jmp
out
xchg
cmp
lcall
sub
push
mov
addr16
gs
push
ljmp
lds
loope
scas
inc
call
pop
mov
test
sub
mov
xchg
call
addr16
push
xor
sbb
daa
call
adc
sbb
jmp
lods
adc
and
adc
jae
pop
jl
imul
data16
movsb
and
addr16
pop
out
cmp
jmp
mov
lret
xlat
mov
fwait
negl
pop
mov
or
insl
and
push
push
dec
lock
xchg
fdivp
enter
repnz
imul
mov
cs
out
imul
adc
dec
mov
rorb
gs
lret
xchg
movsb
dec
pop
push
popa
fistl
imull
pop
xor
imul
jmp
movsl
cmp
gs
out
cmpsb
out
cmp
jge
lcall
jo
push
xor
out
movsl
or
xlat
and
ljmpw
adc
insb
sbb
mov
pop
out
out
mov
imul
xor
data16
mov
ret
js
stos
mov
data16
aam
pop
in
push
ss
cmc
sbbb
cmpsl
add
mov
int3
dec
xchg
out
movsl
int
in
xchg
push
fcmovu
sarl
fcompl
rorb
cmpsl
xchg
xchg
enter
add
repz
loope
mov
push
nop
sbb
push
inc
push
jae
cmpsb
aad
cld
inc
or
push
push
lret
lcall
sub
insb
cmpsb
adc
mov
sti
sbb
roll
cmpl
mov
adc
push
add
sbb
movsb
push
xchg
icebp
divb
arpl
std
inc
push
enter
xchg
mov
add
imul
in
dec
flds
xor
movsl
lods
push
push
push
ss
cmpsl
mov
add
movl
ljmp
push
adc
inc
gs
xchg
inc
lcall
cli
jns
cltd
mov
ret
xor
and
xchg
insl
push
sbb
mov
rcrb
push
lods
xlat
mov
jge
push
mov
xchg
fsubrs
adc
push
lcall
call
mov
bound
ret
mov
pop
sbb
into
imulb
xor
ss
sbb
out
mulb
xor
jl
and
pop
out
cmp
mov
int3
mov
imul
pop
push
and
fs
push
push
or
add
mov
pop
in
and
rclb
fwait
jbe
mov
hlt
imul
mov
xchg
fildl
cmp
enter
lods
repz
pop
adc
cs
test
mov
movsl
sbb
add
mov
add
jae
xchg
push
xlat
sbb
pop
cmc
push
shll
push
jecxz
pop
jg
dec
inc
sub
xor
dec
aaa
je
dec
fstpt
cmc
je
pushf
test
popa
ja
mov
xor
aaa
outsl
sbb
popa
adcl
mov
xor
jge
push
xchg
daa
dec
aam
cmp
pop
out
xchg
rorb
subb
pop
mov
fs
inc
mov
adc
fimull
xor
push
push
out
mov
push
icebp
xchg
dec
adc
je
xchg
gs
aad
test
sub
insb
push
adc
pop
or
jp
in
xchg
mov
cmpsl
mov
sbb
sahf
and
lret
mov
xchg
pop
je
daa
popf
cltd
and
cmp
push
xor
sbb
push
fsts
jae
xor
addl
xor
push
push
mov
jno
call
xor
pop
mov
test
adcb
sbb
jne
shlb
aaa
fidivl
inc
inc
pop
or
push
add
mov
shll
aas
dec
push
stc
lahf
outsl
loope
xchg
rolb
fisubrl
out
enter
aaa
div
daa
push
imul
cmp
insb
test
lret
fisubs
pop
mov
inc
in
push
or
lahf
jae
jp
ficoml
ss
std
lods
push
push
xlat
aad
hlt
pop
inc
push
lret
pop
adc
rcll
adc
jmp
push
push
push
cmp
pop
mov
xchg
cmp
out
or
push
inc
or
addr16
sbb
cmpsl
ljmp
mov
mov
and
mov
push
xor
push
stos
jge
aas
mov
jo
mov
pop
xchg
mov
pop
popf
cli
inc
pusha
out
push
sbb
or
mov
popf
xchg
mov
adc
fucompp
in
bound
sub
das
push
icebp
adc
mov
test
cmpsl
cmp
shrl
dec
ror
rclb
into
push
les
cld
push
push
push
xlat
test
sbb
test
outsl
jl
sbb
cmp
and
push
out
mov
mov
sbb
out
aam
pop
dec
sbb
ljmp
adc
mov
notl
fistl
inc
and
pop
repnz
xor
jmp
roll
adc
and
arpl
out
sub
cltd
inc
jge
in
jae
inc
aam
test
sub
fildl
ja
xor
xor
scas
lahf
lcall
popa
mov
or
insb
xchg
push
and
imul
in
frstor
add
xchg
sar
and
xor
ja
int
in
add
fsubs
imul
cmp
aam
aas
pop
syscall
test
insl
movntq
rol
and
mov
dec
lcall
cli
sbb
addr16
ja
xor
sub
sub
lods
jae
loope
aam
jle
push
pop
leave
test
pop
mov
sbb
mov
jg
add
pop
push
pop
push
icebp
orb
dec
jnp
jge
inc
nop
xchg
popf
jmp
cli
es
fstpt
ja
ljmp
xor
pop
dec
stc
add
mov
push
jo
shl
repnz
and
imul
in
adcl
pusha
and
fdivl
sub
je
sub
leave
mov
repz
cs
lahf
in
xlat
adc
sbb
iret
aas
test
push
mov
outsl
pop
pop
pusha
cmpsl
adc
test
popf
outsb
sub
ja
imul
jge
mov
loopne
popa
ja
fstpt
mov
cs
xor
push
imul
push
fs
nop
outsl
xchg
cmpsb
inc
cmp
lret
adc
mov
pop
sub
int
xchg
loope
imul
jge
adc
mov
aad
in
out
push
inc
xor
jns
imul
dec
aam
lcall
jo
xor
cmp
imul
push
xchg
lret
push
pop
jle
daa
cmpsb
xor
mov
repnz
mov
add
sbb
insb
add
jbe
test
push
adc
or
or
int
loop
jle
dec
fs
das
daa
dec
pop
push
shll
arpl
pop
mov
xlat
mov
jmp
lods
ljmp
adc
pop
push
out
jmp
push
outsl
xchg
or
pop
int3
and
jp
testb
out
loopne
lods
cmovnp
je
jmp
adc
ret
data16
imul
mov
cmpxchg
pop
jl
lret
out
imul
out
pop
das
push
inc
jecxz
movsl
and
cmp
js
or
call
pop
xor
lahf
sarl
mov
add
push
and
push
mov
mov
test
xchg
xchg
pop
iret
les
aam
outsb
cmp
mov
imulb
pusha
mov
sbb
stos
ss
pushf
fnsave
add
jle
push
mov
or
push
fmuls
fiadds
hlt
lcall
shll
notl
imul
push
jecxz
cmp
fildl
mov
mov
push
mov
imul
out
ret
xor
inc
addr16
dec
jecxz
sbbb
fcmove
cmp
popf
or
lock
mov
lock
jae
cmpsl
xchg
ljmp
xchg
ja
aas
gs
pop
movb
divb
imul
sub
and
out
in
jne
lock
pop
imul
and
jmp
pop
adc
loop
push
int
push
ja
lret
mov
in
cli
loop
dec
ljmp
jl
sub
xor
lea
mov
scas
mov
lret
pop
xchg
push
dec
fnstenv
cmp
lret
loope
xor
push
adc
rol
dec
add
push
mov
pop
movb
es
lahf
fisubs
jbe
mov
push
push
int3
imul
mov
in
inc
popf
cmp
into
in
sub
pop
pushf
dec
push
push
popa
vpmovmskb
lahf
int3
fisttpll
xchg
ljmp
add
push
ljmp
mov
out
push
addr16
stc
bound
daa
add
mov
mov
push
popf
xor
nop
sub
stos
xchg
push
jo
sub
xor
inc
mov
sub
out
js
cltd
scas
icebp
rcrb
imul
popf
les
rcrl
mov
pop
int
fiaddl
jne
add
adcl
cwtl
mov
add
test
push
outsl
mov
mov
dec
adc
scas
cmp
daa
inc
push
stos
inc
push
scas
lods
and
lcall
pop
and
lea
cmp
push
and
scas
push
cld
push
inc
jae
mov
cmp
lds
add
mov
gs
xchg
jno
data16
push
out
call
push
out
shll
add
ljmp
insb
inc
dec
int3
jae
dec
push
jg
mov
dec
add
mov
leave
mov
jmp
test
adc
dec
adc
cmp
mov
jns
xor
aam
fimull
push
loopne
fcoms
test
dec
insb
pop
mov
push
fnstenv
sarl
mov
push
bound
push
ds
push
idivl
inc
mov
add
push
push
adc
dec
xor
adc
imul
cmpsl
loopew
addr16
adc
pop
dec
test
mov
pop
repz
in
add
sbb
test
ja
insl
dec
pop
xchg
jp
sbb
js
inc
test
pop
rol
lods
stc
sub
loope
cmpsb
mov
sub
nop
inc
or
push
inc
mov
ret
sbb
push
mov
enter
lret
xchg
push
mov
pop
shrb
mov
repnz
pop
add
aam
push
into
dec
nop
data16
push
or
les
jns
jle
push
push
rol
xchg
jae
pushf
jae
xchg
ficompl
pop
popf
lfs
xor
or
insl
lcall
inc
addr16
out
inc
lods
jne
push
lds
insl
dec
mov
jl
add
mov
loope
sarb
pusha
jb
cmpsl
and
add
push
jns
imul
cmc
cwtl
jo
test
adc
popf
and
inc
out
fwait
movsb
sbb
mov
shlb
ret
fsubl
mov
inc
cmp
mov
mov
cmp
or
xchg
loope
lods
push
imul
imull
sbb
push
mov
jo
sub
insl
push
insl
mov
mov
hlt
push
adc
xor
dec
loope
adc
jns
mov
and
mov
fildll
lret
testb
inc
adc
cs
aas
shll
pop
ror
xchg
pop
mov
pop
mov
fimuls
fistpll
andb
nopl
mov
popa
xlat
pop
subl
andb
test
lds
lret
gs
sub
cli
mov
push
jno
inc
jle
and
in
jbe
shrl
lahf
int3
aas
arpl
push
jmp
add
push
or
outsl
fs
cmp
push
mov
inc
jne
mov
icebp
push
xor
dec
out
pop
mov
fcomps
imull
test
mov
pop
pop
add
pop
push
stos
sti
dec
mov
sub
xchg
lods
push
loope
sbb
aad
dec
imul
adc
and
pop
popa
loope
dec
fistps
and
pop
dec
and
jmp
sbb
mov
xchg
fcmovne
test
jg
pusha
sbb
call
xor
imul
sbb
nop
push
push
in
repnz
addl
push
aas
lea
enter
jle
icebp
add
and
jne
iret
hlt
js
sbb
xchg
scas
and
insb
mov
into
jp
stos
sub
fsub
call
or
in
xor
xchg
outsl
repnz
sbb
out
pop
inc
out
lret
lcall
loopne
cs
inc
adc
and
xchg
insl
loop
jmp
test
fs
dec
adc
xchg
shlb
in
pop
sar
loopne
adc
xlat
inc
add
dec
dec
jo
cmpsb
adc
insb
jmp
cmpsl
and
add
test
jmp
pushf
sbb
fiadds
xlat
push
cs
hlt
out
decb
mov
or
sti
mov
jmp
pusha
call
rclb
shl
dec
daa
dec
adc
imul
repz
lods
out
xor
gs
xchg
jo
out
loop
shlb
shll
lods
mov
fsubrs
cmpsb
adc
adc
in
xchg
shll
inc
sub
and
popa
jne
divl
pop
sub
lock
dec
popa
adc
je
sbb
pusha
push
ljmp
mov
push
dec
shr
lock
inc
out
aam
imul
mov
repnz
leave
push
push
out
shr
xor
shrb
scas
das
mov
outsl
out
das
gs
insb
gs
out
out
sub
cs
inc
and
jo
scas
jo
in
xor
test
in
loop
lods
push
adc
sub
outsb
push
bound
xchg
out
scas
loop
xor
insl
loope
popa
sub
and
sub
inc
sub
addr16
aaa
sub
or
bound
dec
push
pop
push
cmp
inc
shll
inc
insb
dec
lds
mov
pusha
sbb
cmpsl
dec
sub
mov
xor
push
pop
hlt
cmp
mov
imul
add
add
or
insl
xchg
imul
inc
xchg
mov
inc
fstpt
fdivl
mull
leave
or
sbb
push
mov
jno
add
xchg
loop
add
push
lea
fcompl
bound
into
mov
lock
push
stos
jmp
cmpsl
pop
mov
pop
sbb
aam
popf
dec
pop
sbb
ret
movsl
ficompl
push
cmp
fnstenv
cvtps2pi
mov
xor
aam
out
popf
call
ja
pop
in
push
inc
pop
sub
push
cli
jp
jmp
pusha
stc
repz
popf
mov
fisttpl
and
push
data16
jae
push
shrl
das
scas
mov
push
out
sbb
or
ljmp
inc
rcrb
xchg
jae
push
call
imul
loopne
enter
cmp
mov
fistps
inc
loope
jbe
inc
cmp
cmp
dec
lret
insl
ljmp
lods
test
jmp
xchg
jmp
shr
jae
imul
dec
push
out
push
xor
stos
cmp
cmp
add
cmp
and
rcll
lcall
lahf
gs
lock
xchg
lcall
cltd
push
mov
ljmp
aam
idivl
jns
mov
stos
push
fs
dec
pop
add
or
aam
mov
insb
mov
push
je
stc
ja
ljmp
lds
mov
imul
xor
add
mov
movsb
cmp
cmp
jp
loopne
xchg
xor
cmc
test
dec
push
pop
std
sbb
sbb
lods
cmp
xor
mov
and
dec
in
adc
push
lret
stc
into
jg
aas
mov
loopne
cmpsb
or
insb
insl
in
adc
notl
stc
push
xchg
pop
clc
fsts
add
ds
imul
or
fnstenv
andl
or
popa
add
sub
dec
repnz
or
gs
icebp
cs
imul
lds
or
stos
push
int3
dec
movsb
insl
das
nop
xchg
mov
mov
or
adc
iret
fidivs
pop
sahf
lea
xchg
lret
std
push
mov
push
pop
js
inc
ret
dec
in
push
loope
imul
push
push
sub
adc
pop
ja
xchg
mov
bound
out
cwtl
cmpsb
mov
cmp
jg
sbb
push
xchg
call
in
and
pusha
xchg
ljmp
pop
sub
adc
push
adcl
inc
js
aaa
repnz
sbb
aam
push
movb
rorl
imul
pop
pop
push
ret
daa
and
jmp
push
xlat
ret
push
call
cltd
add
mov
loop
in
sub
loopne
inc
scas
movsb
clc
jge
push
sub
xchg
sbb
lods
sbb
dec
std
cwtl
xor
mov
loopne
mov
mov
jle
shll
lods
sbb
and
or
inc
dec
push
pop
test
mov
fstp
je
into
daa
mov
pop
mov
cmpsb
mov
mov
push
shl
xchg
mov
mov
outsl
push
adc
pop
jb
mov
imul
out
push
mov
pop
sbb
cmp
xchg
aaa
movsb
sbb
std
and
mov
xchg
sub
scas
and
jnp
sub
out
mov
mov
inc
or
dec
subb
outsl
pop
icebp
push
cmpsb
movmskps
dec
xor
fwait
jmp
sbb
jbe
in
test
xchg
or
cltd
into
sbb
cmpsl
push
mov
add
imul
gs
pop
push
sub
gs
pop
push
mov
pop
push
hlt
jb
pop
xchg
sub
imul
mov
ret
iret
rorl
out
aaa
push
addr16
in
cltd
sbb
push
push
cmp
xor
jge
dec
and
adc
pop
sti
or
jp
add
sbbb
fs
inc
das
dec
bound
xchg
push
cmp
inc
xor
mov
dec
push
fbstp
in
daa
inc
mov
mov
mov
loop
fidivrl
add
lods
mov
movsl
subb
cmpsb
repz
imul
and
test
dec
test
sbb
mov
iret
inc
jmp
jge
mov
cmp
inc
daa
lret
jo
add
mov
sbb
add
mov
inc
push
hlt
cmp
hlt
icebp
bsr
and
inc
rcll
sub
sar
das
xor
sbb
divb
insb
mov
mov
andb
lcall
fsubrs
mov
push
sub
adc
push
dec
add
push
cltd
mov
push
gs
xlat
ja
dec
icebp
mov
lahf
data16
jbe
es
pop
cmp
pop
cld
stos
adc
mov
fmull
ljmp
aas
mov
in
repz
mov
lret
sub
cmpsb
mov
out
jne
imul
fistpll
sti
mov
lret
inc
fs
fs
add
test
add
and
testb
xlat
fucom
mov
mov
and
jns
add
pop
icebp
aam
push
in
rcrl
lcall
mov
neg
dec
imul
test
add
inc
xchg
inc
push
out
mov
sub
and
mov
inc
cmp
jo
xchg
jbe
or
shlb
mov
push
cmpb
inc
sbb
adc
inc
add
or
mov
and
dec
stc
iret
rol
and
mov
notb
mov
cmp
xchg
popa
ret
and
xor
movsl
aaa
outsl
mov
sub
ret
push
xchg
stos
dec
mov
mov
iret
pushf
int
popf
push
dec
lret
andb
inc
out
jae
insb
aas
dec
pop
aam
and
imul
mov
rol
ss
lds
dec
std
or
mov
scas
dec
pop
repnz
push
ljmp
dec
in
imul
jle
cmp
outsl
xchg
adc
int
jne
sbb
lods
pop
push
test
fstl
lahf
adc
jp
cmp
bound
push
jmp
idivl
test
mov
cmp
cmp
push
add
std
pop
stos
or
out
cmpsb
dec
imul
lahf
lock
cmpsb
hlt
add
imul
out
lds
push
lcall
xchg
ret
hlt
mov
hlt
fiaddl
scas
je
lahf
movsb
jnp
or
sub
call
aam
mov
sti
je
in
sti
pop
call
out
rol
sub
in
push
pop
shr
push
jge
hlt
iret
or
in
outsl
out
sub
jl
pushf
mov
fs
lcall
cmpsl
sub
scas
or
movsl
mov
pop
jl
repnz
into
xchg
xor
jmp
mov
xor
and
jae
and
mov
sti
imul
imul
das
fadds
push
out
loopne
jbe
mov
call
ljmp
push
mov
ljmp
jo
aaa
pop
push
jnp
test
mov
jmp
or
pop
call
jl
xchg
inc
dec
or
sti
mov
imul
push
lods
adc
jns
push
sub
adc
fs
mov
inc
rcll
mov
aaa
or
or
cmc
adc
pop
cmc
adc
mov
jbe
pop
cmp
adc
add
push
js
mul
test
push
inc
fcoml
mov
test
mov
cmp
into
pop
xchg
mov
mov
pop
pop
mov
push
dec
push
sahf
test
cmp
test
cli
mov
sahf
rcrl
jb
mov
jb
and
dec
vpcomd
sub
cli
mov
xchg
outsl
dec
xchg
mov
mulb
mov
stos
ss
pop
outsl
js
push
inc
sbb
stos
push
push
in
sub
pop
ljmp
ja
mov
clc
cmp
leave
mov
mov
add
add
jecxz
fwait
shrb
test
imul
inc
icebp
loop
sub
loop
or
mov
pop
adc
inc
jns
js
or
fcoml
fsubrl
jne
orl
in
dec
cld
call
inc
mov
pop
mov
cmpsb
mov
mov
jns
push
stc
stos
sbb
sub
int
fs
jns
out
cmp
in
pop
mov
scas
hlt
mov
fsubrs
adc
les
je
jp
xchg
jle
sub
and
fbstp
mov
jbe
loop
push
testb
sbb
aas
dec
mov
sub
and
sbb
sbb
iret
xor
jmp
shrl
mov
jge
movsb
aam
jb
pop
inc
mov
or
and
pushl
xchg
mov
sub
call
dec
dec
dec
xchg
jl
push
pushf
in
fstpl
fwait
mov
imul
iret
ss
push
push
test
loopne
pop
push
mov
xor
cwtl
add
pop
clc
xor
imul
movsl
sbb
jo
and
cmc
in
fidivrl
sbb
into
push
mov
ja
shlb
inc
dec
push
sbb
pop
cs
add
mov
xchg
pop
jbe
jne
jbe
clc
and
mov
int3
jne
outsb
xchg
test
inc
xor
jl
es
out
dec
sbb
arpl
imul
cs
pop
dec
mov
in
aaa
and
inc
aas
fisttpl
push
test
and
sti
mov
ja
sbb
jns
imull
jl
adc
sub
xor
push
jae
out
push
pop
jbe
loopne
jno
bound
jno
pop
and
adc
icebp
inc
and
pop
xchg
cmp
mov
lcall
inc
push
sahf
or
dec
addr16
xchg
or
push
dec
or
push
loop
popf
fbstp
sbb
and
pop
push
sbb
cmp
je
or
jp
mov
mov
pop
and
cltd
je
sbb
or
cwtl
mov
xchg
add
adc
test
push
push
aam
aad
sahf
mov
jae
adc
jo
jmp
push
sbb
nop
mov
push
jge
mov
sarl
frstor
fcoms
push
aas
cmp
adc
jo
jnp
xlat
lock
movsl
dec
sti
aas
or
mov
imul
adc
jo
pop
adc
mov
inc
sbb
decb
fwait
out
sbb
jne
sbb
outsl
fs
pop
and
inc
push
popl
pop
push
fs
adc
call
and
xchg
cmp
push
lahf
cmp
imul
inc
push
js
push
mov
jbe
push
scas
arpl
push
mov
lret
int
jmp
cmp
aam
xchg
cmp
pop
das
stos
ret
imul
mov
pushf
mov
cmpsb
xchg
insl
pushl
cli
mov
mov
adc
lcall
xchg
inc
in
adc
ja
in
aam
xor
gs
filds
push
je
out
imul
fistpll
scas
ds
in
sbb
mov
jmp
jo
sti
ret
mov
push
stc
stos
aad
mov
dec
call
sub
shrb
insl
std
sub
je
mov
and
aam
test
xor
push
xchg
xor
mov
push
imul
ss
push
xchg
xor
mov
sbb
insb
ficomps
pop
dec
rcrb
and
imul
test
pcmpgtb
out
fisubrl
leave
jbe
jle
aam
push
push
stos
test
mov
cmp
js
adc
ret
mov
push
dec
sbb
fadds
push
cmp
mov
ret
mov
ret
enter
andl
inc
test
cltd
cmpl
dec
addr16
imul
jae
cmp
pop
test
pop
gs
les
sbb
mov
sbb
loopne
mov
jp
rcll
xchg
jge,pn
push
mov
push
xchg
jge
leave
xchg
inc
push
shrl
xchg
out
xchg
in
xor
in
xor
inc
mov
js
jo
loop
inc
and
cmp
in
dec
subb
leave
jnp
fadds
lds
nop
mov
push
sbb
leave
and
imul
xor
or
jae
push
imul
sbb
call
push
loope
jmp
pop
int3
popf
and
pushf
mov
and
dec
and
lret
and
std
cmp
pop
call
loop
test
in
cmc
fucomp
jecxz
or
ret
jmp
rorb
rolb
movsl
popf
out
int3
in
fwait
test
xchg
mov
xorps
jge
popf
scas
fidivs
into
pusha
jnp
enter
xchg
dec
call
jge
cwtl
sub
mov
repz
inc
pop
or
imul
in
sbb
and
mov
jecxz
jg
dec
call
in
or
jg
push
xchg
cs
and
pop
cmpsl
roll
pop
ja
popf
addr16
xchg
inc
out
ss
aad
jl
scas
movsb
cli
mov
inc
mov
rorb
pusha
mov
push
dec
repnz
in
fwait
sahf
lods
shlb
and
imul
dec
jns
inc
mov
jbe
cmp
add
lods
loop
je
bound
sbb
add
push
dec
mov
xchg
notl
ljmp
dec
mov
pop
dec
mov
movsb
push
and
sub
arpl
inc
nop
sbb
xor
ret
sbb
mov
sbb
stos
sub
add
add
add
mov
xchg
xchg
outsl
pop
jmp
out
adc
inc
pop
out
push
and
dec
add
loopne
out
sbb
js
scas
sbbb
js
aas
mov
leave
lods
insl
out
and
enter
sbb
cmp
dec
inc
dec
inc
jae
in
and
lods
push
push
or
push
lock
insl
mov
push
addr16
mov
and
cmp
push
into
imull
lahf
sub
inc
lock
mov
mov
inc
nop
stos
add
test
mov
push
repnz
in
movsb
lcall
in
dec
outsl
inc
jp
adc
or
call
cmc
mov
orb
lcall
mov
insl
or
lods
dec
movsl
cmp
xchg
mov
push
push
add
sub
xchg
rclb
dec
sub
dec
pop
xchg
test
xchg
adc
in
dec
out
lcall
imul
push
popf
cmp
xlat
cmp
ljmp
pop
adc
fs
sub
lret
add
movsb
and
mov
bound
jl
xchg
xchg
arpl
push
inc
xlat
gs
push
sbb
mov
dec
jo
roll
pop
push
vpextrq
dec
jmp
cmpsl
push
xor
push
mov
cs
sub
mov
imul
and
das
dec
gs
push
outsb
dec
je
xor
lahf
mov
xchg
sarl
jle
hlt
push
mov
insb
cmpsl
imul
push
mov
in
sub
dec
mov
add
dec
adc
xor
or
lods
daa
mov
dec
jmp
pop
mov
repz
addr16
es
mov
test
nop
out
fisttps
ljmp
xor
sbb
pop
cmp
mov
pop
mov
jae
inc
scas
stos
cmpsb
adc
int
dec
dec
fwait
lret
fnstenv
imul
insb
les
shlb
movsl
movsb
pop
out
js
sbb
ss
and
adc
dec
inc
mov
into
out
jmp
sarb
repnz
xor
pop
sbb
clc
mov
cltd
inc
bound
in
fisubrs
cs
insl
lahf
cmp
in
aaa
push
xchg
cmp
cld
out
pop
addl
cli
ficompl
loop
jae
mov
adc
xor
sarb
xor
inc
fsubp
cld
pop
xor
outsb
mov
ja
ror
mov
repnz
cwtl
popf
and
sarl
mov
dec
das
test
xlat
cs
out
fcompl
jns
sbb
shlb
cmp
and
mov
xor
imulw
ljmp
hlt
push
call
test
cld
popf
pop
fstpl
mov
adc
xchg
std
cmpsb
jge
adc
sub
xor
jp
and
xchg
xchg
and
push
jl
xor
adc
enter
in
cmp
adc
or
push
inc
cmp
add
stos
adc
or
pop
jbe
xor
jo
mov
aas
mov
mov
andb
rorb
mov
cli
fstl
mov
out
lods
repz
mov
xorb
jbe
imul
add
std
fs
arpl
stos
fsubr
pop
cmc
scas
leave
inc
ljmp
jle
push
pop
dec
sbb
lods
and
push
pop
sub
test
add
mov
imul
and
mov
jge
or
fistpl
mov
shll
push
mov
aas
sub
shrd
adcl
xor
fisttps
mov
out
sub
mov
out
aad
lds
roll
cmp
shll
in
bound
dec
jmp
les
in
cmp
outsl
jp
and
in
out
xchg
and
lods
xchg
fsubrs
cmp
cld
push
push
pushf
sbb
and
movsb
xor
lret
xchg
daa
adc
aas
pop
pushf
xchg
push
ficomps
jle
test
sbb
cli
cmp
ljmp
call
sbb
sahf
hlt
addr16
push
pusha
pop
lahf
xlat
xor
lret
and
cmp
jge
imul
out
push
shlb
imul
in
in
and
fmull
outsl
das
cld
nop
fs
jnp
lret
jo
dec
jbe
xchg
out
addr16
ljmp
dec
sub
mov
mov
add
xchg
mov
daa
mov
pop
test
mov
mov
stos
mov
cmpb
in
mov
aam
leave
add
xlat
gs
xor
in
mov
sbb
loopne
pop
push
jecxz
xchg
jmp
sub
and
outsl
push
in
je
dec
out
dec
call
stos
mov
ret
paddw
sbb
shrl
mov
xchg
and
out
leave
ljmp
test
imul
bound
inc
lret
xor
xchg
popf
sub
jbe
pusha
in
jns
jmp
sahf
push
ret
xchg
mov
push
lock
cmpsl
mov
jp
mov
fcoms
sub
call
mov
dec
pop
dec
popf
add
test
mov
cld
mov
adc
jge
xchg
mov
scas
and
lret
mov
push
imull
xchg
push
mov
je
push
imul
push
leave
test
out
je
lods
ljmp
push
in
cmp
out
xchg
xchg
or
inc
inc
dec
dec
mov
std
cwtl
stos
sbb
jmp
and
scas
adc
inc
sub
sbb
jmp
xchg
ret
ljmp
aaa
imul
rclb
ret
icebp
adc
push
mov
sbb
jno
and
cs
jle
and
cltd
and
notb
pop
imul
loope
xchg
mov
loope,pn
lcall
movsl
adc
and
mov
sub
in
mov
or
pop
lret
jo
jp
pop
cld
mov
pop
xor
ja
outsb
adc
loope
xor
pop
pop
das
push
mov
sub
dec
shr
in
in
and
and
lret
jo
push
js
jecxz
pop
jmp
mov
and
xor
fidivs
in
mov
and
push
add
pop
mov
imul
lods
and
andl
call
clc
out
mov
inc
inc
loope
pop
xlat
push
ss
stos
push
int
mov
mov
sub
pop
out
stos
sbb
push
inc
fs
aam
pop
push
call
lds
leavew
xor
addr16
cmp
xlat
and
mov
or
stos
jmp
jbe
outsb
mov
imul
and
imul
adc
in
out
dec
adc
es
mov
xchg
in
xchg
dec
pop
xchg
in
cld
jns
push
xchg
pop
push
bound
out
and
pop
mov
gs
out
sub
nop
sbb
and
and
pop
mov
cs
daa
std
mov
jmp
daa
out
shlb
cs
scas
jmp
push
mov
mov
push
or
es
call
cmpsb
push
fsubrs
push
inc
and
ret
mov
or
mov
dec
mov
scas
daa
push
call
popa
add
push
xor
pop
xchg
mov
pop
scas
leave
lods
fsubs
dec
scas
adc
dec
sub
stos
call
loop
out
dec
jmp
inc
cmpsl
fsubrs
push
daa
test
mov
gs
push
cmp
shlb
subl
fildll
lods
inc
mov
int
inc
lods
push
lods
xor
shr
pop
cs
daa
dec
xchg
cmpsb
and
scas
adc
dec
mov
movsb
stos
adc
repnz
clc
addl
pop
dec
cmpsl
imul
push
ror
xchg
and
add
outsb
push
jnp
mov
push
mov
cltd
cmp
mov
inc
push
push
mov
in
out
mov
push
stos
in
imul
pusha
lds
mov
jp
inc
loop
in
mov
add
je
mov
mov
lds
mov
adc
xor
mov
inc
in
cmp
add
loop
adc
inc
sub
or
pop
test
push
add
push
lcall
add
cmpb
dec
cli
repnz
push
mov
das
pop
xlat
sbb
imul
div
dec
xchg
and
ret
xor
test
mov
dec
cli
and
lock
ljmp
push
repnz
imul
cmpsl
mov
mov
sub
xor
cmpb
jae
mov
repnz
int3
sub
push
xor
idiv
jmp
jmp
sub
adc
pop
scas
sub
mov
mov
mov
xchg
shlb
xchg
add
call
adc
mov
addb
push
sub
xchg
inc
cs
mov
rcrl
jmp
insl
movsl
xchg
push
xor
insb
test
or
in
js
and
adc
ficoms
dec
adc
adc
pop
mov
mov
dec
rorl
xor
popl
and
rclb
mov
adc
dec
cmc
add
loope
aam
sbb
dec
aam
pop
sub
cli
jle
mov
pop
sarb
popw
ja
in
mov
dec
out
cmc
rcrb
xchg
lret
jno
jo
push
shl
pop
jbe
pusha
sub
push
or
repz
push
sub
int3
lcall
das
lods
popf
cmpsl
pushf
lods
mov
sbb
and
jns
sbbb
pop
popa
out
xor
jecxz
icebp
imul
insl
sub
aad
pop
in
rcll
in
pop
add
fsubrs
xchg
pushf
add
and
js
lret
dec
scas
sbb
mov
gs
lret
es
sbb
cmp
mov
dec
inc
lahf
outsb
mov
fnstcw
int
push
dec
jbe
push
dec
inc
fcoml
xchg
sbb
mov
inc
stos
dec
cld
xor
xchg
mov
es
in
loopne
pop
call
sbb
push
mov
mov
in
incl
cwtl
sahf
fldt
adc
push
dec
pop
sahf
stos
xor
pop
test
dec
pop
imul
popf
xlat
jecxz
das
mov
aam
jae
fisubs
divl
shll
pop
ret
jg
jbe
xor
jmp
mov
push
out
das
add
and
dec
push
loope
mov
add
mov
into
sbbb
push
mov
and
pop
or
push
imul
orb
mov
in
mov
jmp
dec
test
adcb
cmp
mov
fisubs
dec
cmp
test
mov
push
push
push
mov
call
idivb
push
mov
pop
ds
jo
repz
out
add
shrl
insl
xchg
iret
xlat
mov
andl
adc
sahf
sub
inc
movsl
je
push
xchg
adc
push
roll
popa
imul
inc
das
loopne
lret
mov
lahf
inc
scas
inc
sub
dec
in
out
outsl
shr
push
test
xchg
inc
inc
add
lods
xchg
xchg
imul
adc
cmp
jne
out
jo
lcall
jecxz
imul
ja
insl
imul
imulb
xlat
or
adcb
nop
loope
dec
sub
mov
imul
jge
pop
adc
out
nop
and
push
pop
sbb
cmp
rdtsc
pop
lret
mov
repnz
call
pop
xchg
push
fnstenv
cwtl
mov
stos
loop
test
mov
fdivrs
cld
pushf
std
mov
daa
cmpsb
dec
pop
xchg
xchg
push
mov
enter
out
or
inc
push
pop
cmpsl
jge
mov
lds
sti
daa
jmp
cmpsl
movsl
mov
and
idivl
fidivrs
or
xor
les
pop
xor
mov
sti
imul
into
sbb
jge
dec
lcall
jne
ror
pop
imul
dec
cli
dec
sub
mov
imul
mov
mov
decl
insl
adc
pop
rep
and
inc
cmp
mov
js
lahf
mov
xchg
xlat
mov
in
gs
mov
test
jle
out
mov
das
sbb
sbb
sub
out
pop
in
cld
leave
subl
dec
pop
inc
shl
ljmp
push
mov
insl
push
push
js
mov
mov
push
mov
in
insb
cmpsl
clc
movsl
insl
mov
push
mov
out
jo
mov
subb
add
and
sbb
inc
push
jge
int3
sbb
in
adc
rorb
pop
scas
out
imul
enter
and
adc
mov
dec
ljmp
pop
adc
sub
jb
scas
jp
cmc
sub
in
loopne
mov
rcr
jb
loope
inc
push
jnp
in
shlb
ficompl
clc
sahf
pop
aaa
pop
jbe
scas
imul
pop
add
scas
push
adc
sbb
jb
add
adc
or
dec
fbstp
push
mov
cli
rcl
add
jo,pn
cwtl
mov
aaa
push
mov
test
stos
in
cltd
int
filds
mov
pop
and
mull
nop
pop
sub
idiv
out
jb
sbb
pop
pusha
outsl
gs
dec
add
sbb
imul
sub
stc
cli
out
xchg
push
and
mov
push
int
xor
cmc
sbb
jp
dec
ret
xor
push
sti
dec
into
push
rcl
cs
out
insb
imul
mov
mov
dec
mov
push
xor
mov
pop
leave
icebp
jge
or
cmp
in
cmp
test
call
hlt
inc
ficoml
fs
movsl
cmpsb
test
loop
xchg
pop
push
mov
sbb
subb
sub
nop
inc
je
or
movsb
out
mov
jnp
mov
jp
lea
jl
out
mov
nop
stc
xchg
lods
out
cmp
and
int3
pop
mov
movsl
int
mov
test
mov
add
mov
out
jns
and
aad
test
dec
vminps
pop
scas
ljmp
push
pop
and
push
ss
xor
push
mov
mov
xchg
xchg
sub
add
add
faddl
orl
out
fstpl
jo
cmp
jle
call
adc
loop
test
test
pop
inc
xor
push
mov
fisttps
pop
notl
xchg
sbb
addr16
push
ds
pop
dec
mov
mov
pop
sbb
xor
sub
test
clc
and
stos
inc
inc
push
imul
jbe
push
add
mov
icebp
out
sbb
cmp
daa
shll
mov
lcall
ja
jmp
and
jmp
call
xchg
xchg
aam
aam
add
mov
insb
popa
mov
ret
scas
inc
inc
pop
mov
cmp
adc
nop
push
push
imul
lds
sub
mov
and
cltd
out
push
scas
mov
lahf
push
add
and
nop
cmp
sbb
gs
add
stc
pop
pop
mov
adc
push
mov
mov
pop
push
mull
adc
dec
sar
sbb
and
pop
xchg
jmp
cmp
sbb
push
test
lret
imul
lods
aam
lds
dec
rcrl
andb
aas
fdivl
jge
call
imul
push
in
loop
push
inc
cmpsb
shlb
sahf
dec
in
xorb
pop
jns
jecxz
je
imul
xchg
adc
mov
in
sbb
push
aad
pusha
int3
mov
inc
dec
aam
std
sub
daa
lahf
icebp
and
shlb
push
bound
hlt
sti
movl
sub
js
in
hlt
and
xchg
xchg
loop
lret
popa
inc
aaa
int
lret
std
jg
out
js
jmp
or
jns
lods
or
adcl
mov
outsb
jmp
mov
sub
scas
xor
outsb
sbb
mov
inc
cli
mov
lret
mov
out
daa
repnz
call
push
in
dec
shll
stos
push
icebp
pushf
mov
cmp
or
sbb
lcall
cmp
stos
aad
mov
lds
or
push
scas
inc
not
std
in
jb
out
jmp
mov
cmp
ficompl
mov
pop
dec
mov
nop
out
dec
jae
cmpsl
rcrb
jbe
cmc
push
adcb
inc
xor
cli
dec
push
pop
out
daa
jp
out
jae
rcr
xchg
fisubl
push
daa
test
cwtl
mov
xlat
sub
repz
fisubl
mov
in
xlat
popa
xchg
mov
add
ja
mov
arpl
pushf
and
xchg
adc
mov
mov
icebp
cld
in
xchg
mov
mov
repnz
les
jmp
lods
cli
adc
mov
pop
stos
bound
mov
mov
nop
fsubl
jne
lods
jnp
aam
push
push
cmc
insb
sbb
jno
dec
std
imull
cs
loop
cmp
dec
push
pop
mov
xor
ret
push
in
xchg
in
jno
aas
mov
es
push
repz
mov
ss
cmp
push
popa
add
test
push
imul
stos
adc
mulb
mov
add
test
or
pop
insl
rcrl
bound
sub
dec
xchg
insb
sbb
ret
sbb
pusha
jb
or
jmp
in
cltd
fistps
adc
and
ja
sub
daa
mov
rcrl
mov
inc
addr16
jbe
dec
cmpsl
imul
push
lods
jg
xchg
inc
or
sar
xchg
inc
mov
push
repz
push
push
cmp
dec
ficomps
push
out
inc
mov
iret
insl
jno
jo
cli
xor
push
loop
icebp
adcb
push
xchg
mov
out
test
cmp
adc
ljmp
jbe
mov
adc
popa
xchg
adc
rorl
scas
pop
addb
dec
dec
mov
data16
pop
leave
cmpsb
jp
cmpsb
cmp
cmp
test
icebp
test
fldcw
in
push
ret
popf
inc
cld
clc
push
add
adc
cltd
iret
xor
sti
inc
push
popa
push
push
sub
imul
bound
leave
xor
jo
lock
imul
lret
or
xchg
cmp
add
pop
loop
xchg
mov
mov
dec
rorl
sub
mov
cli
in
sbb
in
popf
stos
sub
xor
loope
or
call
xor
xor
xchg
jle
sub
push
fs
psrad
mov
aam
cli
js
cld
jge
ret
ret
imul
push
adc
adcb
call
ljmp
sub
out
idivb
test
pop
inc
xlat
push
subl
arpl
shl
ficomps
ficoms
adc
fstl
fldl
scas
ficoms
push
mov
lods
adc
lret
xor
push
mov
cmpsb
test
loope
dec
loop
pusha
mov
sub
push
in
push
testl
mov
pushw
mov
adc
imul
adc
ret
shl
sbbb
cmpl
rcll
bound
pop
xchg
or
pop
xor
loop
sub
frstor
fcomps
and
push
add
push
mov
scas
or
fwait
pop
xchg
gs
and
xchg
out
xor
push
dec
push
aam
scas
pop
mov
sub
jne
sbbb
cmp
iret
in
imul
cwtl
xor
adc
aas
popfw
test
imul
les
inc
aaa
inc
loope
jle
and
xchg
mov
mov
inc
ficompl
ss
call
adc
xor
or
inc
mov
fs
testb
inc
lcall
push
sbb
test
and
negb
cmc
arpl
call
fldl
jnp
std
pop
push
fwait
pop
sub
test
incl
dec
scas
js
lcall
lcall
push
xchg
pop
and
mov
xchg
push
push
pop
adc
sbb
push
cmpsl
inc
push
sbb
divb
push
sbb
dec
dec
imul
popf
push
std
ja
push
call
adc
push
imul
cmc
stc
push
push
push
add
inc
or
push
outsl
add
mov
in
rorb
xor
jo
jmp
xchg
push
rclb
pop
popa
sbb
xor
lahf
lock
je
mov
cmp
mov
out
pop
xor
sub
add
xchg
rcrb
ds
push
adc
fiadds
adc
sbb
loop
push
pushf
stos
fwait
xchg
jo
out
xchg
and
jmp
and
lret
and
imul
pop
decb
add
mov
push
inc
repnz
das
rcll
test
push
in
sub
add
fistpl
xchg
leave
push
ljmp
gs
aad
mov
movsl
cli
sub
or
push
cmp
push
aad
add
mov
inc
mov
pushf
mull
push
mov
pop
dec
cmp
xor
pop
cmp
sbb
cmp
dec
data16
add
xor
inc
fistpll
popa
add
aam
gs
popf
adc
fsubl
adc
scas
dec
push
pop
outsl
push
incl
fldcw
hlt
les
sbb
push
xor
out
mov
or
int3
mov
cmpsl
gs
stos
sbb
lret
mov
xlat
xor
mov
fcoml
pop
loope
test
push
clc
in
jbe
icebp
push
mov
je
sub
mov
repnz
movsl
imul
in
cli
adc
or
adc
movsb
mov
popa
rclb
dec
xor
pop
sbb
lret
loope
jmp
mov
iret
and
and
mov
push
cli
mov
sub
int
pusha
lcall
mov
call
inc
cmpsl
push
loopne
out
jmp
ljmp
and
sbb
insb
cmp
aas
fsubl
cmovne
pop
inc
pusha
or
nop
inc
push
jno,pt
sbb
pop
fdivp
and
adc
loope
adc
fcmovnu
jle
dec
xchg
push
push
pop
jbe
push
cmpsl
loope
gs
and
pop
stc
xchg
inc
sub
mov
mov
gs
sti
xchg
lds
imulb
fwait
sub
jg
mov
lret
andb
xchg
xchg
adc
push
add
loopne
and
mov
out
ja
popa
push
aaa
sbb
push
sub
fld
lock
push
ror
stos
inc
mov
add
inc
or
mov
fcomps
sub
scas
and
push
cmpsl
mov
pop
pop
call
adc
and
inc
lcall
icebp
addr16
mov
les
jg
xchg
cmpsb
xchg
ret
jne
dec
bound
loop
adc
cltd
mov
push
or
hlt
scas
jae
pop
push
pop
mov
mov
xchg
test
lock
add
bound
fcoms
adc
xorl
push
add
jmp
jno
orl
xchg
iret
fsts
lret
dec
pop
nop
scas
pop
inc
ret
sbb
lods
insl
mulb
cmpsb
into
mov
les
cltd
or
pop
jno
pop
sbb
daa
xor
fdivp
sub
out
lcall
jbe
mov
and
sbbl
mov
aad
in
rcr
test
mov
push
pusha
and
mov
popa
and
pop
cltd
fcoml
and
orb
addr16
jo
cmp
cmc
fs
jns
push
arpl
jb
sub
shrb
lds
lock
xchg
add
inc
push
dec
cli
shll
data16
ds
cmpb
dec
mov
mov
cmpb
pushf
cmp
data16
add
push
nop
call
cmp
mov
sbb
aad
sub
out
idivb
jnp
jne
stos
rolb
in
addr16
mov
imul
jne
sbb
pop
cmpl
loop
push
and
nop
and
jge
es
call
jl
dec
je
shl
aam
xor
sub
fcoml
mov
push
jmp
inc
pop
scas
aad
sahf
adc
movsl
mov
mov
push
in
inc
mov
and
xor
pop
xchg
pop
inc
jl
xchg
aam
pop
cltd
xorw
push
andl
push
mov
mov
inc
jge
xor
loopne
cmp
lret
add
in
out
and
cmp
xor
add
stc
dec
cmp
mov
pop
out
stos
popa
cmp
imul
push
outsl
jle
out
jecxz
cltd
xor
mov
cmp
mov
sub
lcall
xchg
add
cld
out
add
pop
sbb
jnp
call
sbbl
rcr
xor
divl
cmp
push
in
out
jo
into
lock
pop
mov
imul
call
pop
lret
lds
adc
pop
xor
insl
xchg
xchg
cld
cmp
test
xor
mov
sahf
pop
pop
mov
fbld
sub
push
jne
ja
int
out
push
xchg
push
pop
mov
fs
sti
cmp
shr
aam
and
ret
jp
push
mov
mov
std
dec
cmp
xchg
jb
sbb
cmpsb
xchg
lcall
push
xlat
mov
fiaddl
mov
mov
cmp
in
xor
cltd
jae
mov
mov
lds
dec
add
sbb
xor
lea
sbb
xchg
add
mov
mov
gs
aaa
mov
mov
xchg
jns
or
insl
ss
lcall
movsl
or
and
or
bound
ret
int3
out
gs
repz
inc
xchg
jl
lods
and
lods
repz
hlt
mov
into
test
out
and
jge
mov
push
or
loopne
sub
int
push
xchg
add
into
xor
mov
adc
imul
pop
adc
push
mov
fwait
out
cwtl
addr16
fsubrs
shr
mov
fdivrp
loopne
out
push
data16
daa
gs
push
push
or
push
dec
inc
cmc
pop
push
xchg
jl
and
sahf
rorb
mov
fcmove
gs
dec
out
lods
mov
inc
xchg
mov
add
mov
add
cmp
fsubr
ffreep
out
and
adc
xor
fldenv
xchg
loop
mov
adc
ja
mov
lret
push
stos
adc
pop
sub
push
call
jmp
shlb
push
add
xor
ret
xor
inc
jnp
pop
pop
xchg
mov
inc
sbb
pop
and
fsubrs
repnz
hlt
pop
mov
in
dec
xchg
xor
outsb
lcall
repz
std
push
push
dec
or
jb
inc
loop
gs
adc
cmpsb
setle
loop
stc
inc
mov
fnsave
mov
xor
and
jne
sbb
push
imul
mov
lcall
pop
pop
aam
dec
movsb
test
mov
in
push
add
cmp
fldcw
and
or
jge
out
popf
and
test
scas
addr16
jmp
mov
and
cmpsb
lret
cltd
les
xchg
xor
fists
sbb
push
cmp
xchg
imul
dec
jl
sbb
pop
push
stos
cmp
mov
dec
imul
xor
daa
cmp
rcrl
imul
imul
mov
loop
pop
jmp
in
push
mov
dec
cmp
add
or
inc
inc
in
xor
lret
inc
and
dec
xchg
inc
pop
in
push
sbb
ficomps
pop
imul
adc
imul
pop
dec
cmp
ss
or
idivl
sbb
repnz
xchg
clc
outsl
push
xchg
jns
xor
xlat
sbb
cmp
mov
lods
or
rclb
sbb
mov
sbb
cmpsb
sbb
and
add
jle
dec
add
sti
adc
inc
pop
sub
add
cmp
pop
lds
nop
pop
cmp
aam
mov
repnz
gs
push
leave
mov
pop
jp
jmp
cmp
insb
pop
sub
cmp
nop
addr16
jbe
sub
jae
arpl
outsb
mov
arpl
cld
mov
add
xchg
shl
shll
loopne
insl
add
cmp
jo
cmp
push
and
and
stos
mov
fimull
imul
das
mov
jecxz
stos
xlat
push
push
scas
push
sbb
in
xor
pop
fldt
mov
adc
push
cmp
inc
xchg
push
sub
dec
xchg
sbb
in
add
cltd
pop
push
rorl
movsl
dec
cmp
pop
clc
sbb
mov
stos
imul
xchg
icebp
insl
mov
xchg
js
lods
stos
gs
mov
xor
test
jo
ja
mov
push
pop
shlb
scas
mov
pusha
das
inc
lods
neg
xchg
sbb
fs
mov
dec
ss
xchg
imul
push
and
cmp
pop
pavgb
cmp
dec
add
push
loope
mov
fsubrl
push
sub
fnstcw
mov
shr
pop
adc
dec
sarl
push
test
xor
ficompl
leave
fmull
dec
add
movsb
cwtl
cmp
lcall
push
dec
jmp
loop
lret
xor
inc
dec
jno
push
adc
das
pop
push
stos
bnd
test
daa
push
inc
inc
insl
mov
and
push
xor
fisubrl
push
flds
out
pop
test
rcll
mov
and
int3
pop
xlat
nop
inc
mov
or
adc
pushf
call
rcll
lcall
add
mov
lea
sbb
nop
pop
int3
add
or
xchg
in
jo
out
es
pop
push
inc
sub
mov
push
push
adc
shl
test
push
gs
stc
mov
mov
es
jns
gs
cltd
inc
xchg
sub
stos
sub
mov
out
push
pop
icebp
mov
push
mov
pop
sbb
mov
pop
cmpsb
xchg
pop
mov
sub
cmp
cli
mov
aas
push
call
jmp
cmp
xchg
iret
cwtl
push
pop
jbe
mov
or
sbb
hlt
test
in
es
and
sub
and
ja
shl
sbb
dec
dec
hlt
lock
es
dec
loop
mov
adc
call
jb
sub
xchg
mov
cld
xchg
movsb
pop
shl
dec
cmpsb
push
pop
pop
imul
loope
popa
and
leave
out
inc
test
push
js
and
mov
jne
push
mov
imul
bound
cmp
into
jnp
in
sbb
or
xchg
loop
imul
pop
cmp
jg
inc
and
mov
daa
adc
xor
out
sub
mov
in
add
fisttpl
ljmp
cmp
dec
push
fs
divl
repz
jns
scas
bound
sbb
push
mov
and
mov
jbe
stc
movsb
mov
rcr
inc
lret
sarl
xchg
scas
mov
sub
adc
cs
subl
add
mov
pop
jl
sbbl
adc
xchg
lret
dec
push
data16
jae
xorb
xchg
loopne
jg
scas
jmp
push
dec
or
lea
mov
mov
push
sub
movsb
jg
movsl
sbb
mov
push
xchg
leave
dec
out
add
sarl
sbb
stos
out
xor
or
adc
and
inc
inc
jb
inc
mov
push
orb
mov
xor
push
xchg
imul
mov
push
mov
and
cltd
fidivrs
cmc
cltd
jno
mov
jge
movsl
mov
clc
push
bound
pop
cmc
lods
out
je
nop
pop
cmp
in
xchg
add
pop
xchg
outsl
inc
or
in
xor
jecxz
dec
clc
pop
push
mov
cltd
jmp
sbb
mov
push
popf
addr16
or
sub
mov
lret
inc
dec
in
mov
push
cltd
in
jecxz
fcoms
add
or
inc
pop
insl
in
jae
divw
ds
dec
dec
pop
or
and
and
mov
push
mov
cmp
mov
push
lahf
cmp
int3
xor
fwait
xchg
xchg
jno
mov
pop
add
movsl
cmpsl
ljmp
push
push
dec
test
xlat
xchg
movsl
add
into
dec
cmp
xor
sub
movsl
loopne
or
lahf
out
loop
mov
xchg
imul
jnp
adc
popf
cmpsl
or
push
dec
andl
adc
fiaddl
sbb
daa
inc
loope
ljmp
sbb
mov
mov
bound
gs
inc
ljmp
pusha
lods
push
data16
cli
imul
xor
or
and
mov
mov
xor
inc
out
ljmp
or
push
rorl
fisubs
sahf
or
cli
mov
into
cmc
rorl
sub
push
jnp
push
imul
loope
imul
test
dec
scas
ret
insl
pop
sub
repnz
push
pop
sbb
ficoml
adc
aam
jb
sub
xor
call
inc
adc
out
lret
test
outsb
push
daa
cmp
mov
push
cmpsl
mov
adc
shll
loop
add
sbb
aas
jl
mov
out
push
or
cld
mov
pop
xchg
sbb
jno
xchg
fwait
bound
jmp
sahf
scas
lret
test
lcall
add
je
inc
jne
fs
mov
cwtl
pop
mov
imul
sub
mov
aam
and
xchg
les
sub
mull
inc
mov
mov
mov
stos
imul
xchg
jle
shlb
xor
dec
or
add
lcall
mov
ret
push
mov
fcompl
fcoml
jecxz
inc
inc
mov
test
inc
push
rclb
aam
mov
imull
and
and
pop
cmp
movsl
les
jecxz
sub
add
inc
cmp
xchg
sahf
jmp
sbb
inc
out
and
jbe
les
xchg
cmp
and
jne
push
ds
cmp
and
push
sub
cmpl
add
negl
mov
enter
mov
in
xlat
stos
sti
mov
lret
bound
jb
adc
ss
pushf
inc
into
out
je
mov
test
lods
mov
sbb
cmp
mov
call
ret
loop
jl
pop
imull
loopne
or
cmc
loop
inc
ss
xor
cmp
push
jae
ficoml
lods
mov
sahf
adc
sbbb
xor
jmp
into
out
test
gs
cmp
fs
loope
jno
mov
and
arpl
movsl
das
pop
add
out
mov
dec
pop
xor
mov
push
ror
lods
bndcn
aam
mov
test
xchg
mov
inc
daa
test
pop
and
mov
sbb
pushf
sbb
out
mov
inc
aam
pop
sub
mov
inc
out
pusha
xor
stos
inc
ret
push
mov
movsb
push
pop
jecxz
nop
xchg
inc
lret
ljmp
pop
push
int3
js
inc
mov
mov
loope
mov
or
shrl
push
inc
dec
mov
inc
and
sbb
add
addr16
jge
ret
sti
mov
mov
push
out
in
pop
xchg
xor
fadds
xlat
cmp
cmpsb
aam
xor
inc
jmp
call
cld
cltd
pop
jmp
int3
aaa
jo
push
cmp
sahf
pop
out
inc
pushf
pop
push
mov
mov
js
pop
sub
mov
lret
pop
dec
fnstcw
mov
mov
jnp
ficoml
ret
mov
fmul
xchg
cmpsl
mov
add
pop
hlt
pop
sbb
pop
lock
mov
and
ja
push
inc
sarb
push
aad
jb
je
cld
mov
cmp
pop
xchg
push
mov
cmp
inc
cmpsl
imull
popa
test
in
iret
add
and
dec
xor
pop
xchg
repnz
mov
lods
fistpll
dec
xchg
mov
add
movsb
cmpsl
fimuls
fdivrl
scas
push
pop
hlt
mov
jp
pop
push
int3
xor
pop
and
mov
cmp
adc
int3
mov
mov
xlat
andb
add
js
inc
inc
cmp
imul
mov
mov
adc
mov
push
dec
xchg
mov
scas
mov
or
popf
jg
xor
or
xchg
inc
or
std
mov
mov
icebp
daa
data16
mov
addr16
test
sub
les
rclb
dec
iret
push
imul
shrl
in
inc
fmul
ja
push
pop
push
in
inc
push
ljmp
stos
or
loop
add
mov
jno
call
inc
lea
jg
inc
dec
out
or
push
cwtl
aam
sbb
test
pop
inc
hlt
jae
xor
sbb
sub
lds
cmpsl
cmpsb
mov
or
pop
xor
jo
imul
push
mov
mov
pop
inc
lcall
adc
sbb
add
cmc
test
sub
dec
loope
mov
sarb
aas
push
ror
and
sub
pop
cltd
repz
pop
add
stc
ja
jo
in
repnz
pop
test
mov
test
loop
adc
pop
test
jge
fnstenv
sbbl
dec
clc
mov
imul
cmp
decl
lods
fs
cmp
jecxz
aad
mov
ds
shrb
inc
lret
mov
and
mov
adc
movb
push
pop
fldenv
mov
out
loope
out
cmp
sub
out
mov
ljmp
dec
sti
and
movsl
jbe
or
notb
xchg
sub
xor
jl
outsb
cltd
dec
aam
int
ss
popa
popa
push
addr16
mov
in
cmpsb
mov
in
and
mov
hlt
ss
dec
pop
pop
jnp
ljmp
and
imul
xchg
aam
fsubrs
mov
pop
ljmp
mov
lret
jmp
push
dec
cmp
stc
popa
dec
test
repnz
leave
xor
inc
lcall
in
aas
or
pop
xchg
mov
imul
pop
or
and
push
and
test
es
imul
mov
fwait
pop
fwait
sbb
dec
add
inc
cmp
lret
cmp
xchg
testl
sub
mov
decl
imul
jge
sti
imul
xchg
es
mov
std
inc
dec
xor
cmp
cmp
add
inc
iret
test
data16
sbb
fwait
push
pop
mov
shrl
out
xchg
cmc
movsl
mov
pop
icebp
jne
push
cltd
and
push
cmp
or
sbb
adc
mov
cwtl
inc
adc
push
and
push
mov
loop
imul
test
xchg
push
sar
icebp
xlat
iret
and
mov
jg
mov
popa
mov
adc
movsb
aam
mov
push
sub
lock
and
sbb
xor
movsl
das
add
andl
dec
push
inc
andb
lcall
xor
cmp
shrb
and
mov
and
test
inc
out
dec
loop
push
push
lods
mov
iret
sarl
pop
xlat
push
jno
cmpsb
add
or
push
fcmovb
pop
ss
jne
in
cmpsb
loope
gs
xor
das
icebp
scas
sti
xchg
popa
out
mov
or
xor
or
sbb
mov
mull
lcall
repnz
push
out
push
jbe
sahf
bound
imul
cwtl
adc
or
adc
adc
iret
test
idiv
xor
xchg
jbe
push
cld
jno
outsb
lods
je
adc
loope
fisttpll
cli
cmc
push
rorl
jmp
push
dec
les
ret
addr16
in
mov
push
movl
movsb
jne
ret
dec
dec
push
imul
xchg
jmp
cmpsl
mov
push
dec
fstpt
mov
sbb
xchg
test
xchg
push
imul
push
mov
fs
out
xabort
repz
das
ss
sbb
icebp
or
sub
adc
dec
iret
inc
pop
pushf
inc
les
jmp
mov
fsubs
xchg
int3
cmpsb
hlt
cmp
push
cmpsb
pop
sbb
scas
mov
dec
pop
dec
and
ljmp
jb
aam
mov
pop
mov
mov
inc
jae
lret
cmp
cltd
bound
pushf
out
gs
inc
aam
mov
pop
mov
jmp
rcrl
xchg
fstps
out
cwtl
jmp
lcall
add
insl
mov
xor
jnp
fs
adc
pushf
mov
pop
stc
jl
pop
leave
mov
inc
mov
lahf
out
adc
xchg
sar
fcompl
aas
pusha
xchg
into
imul
stos
pop
push
jl
mov
mov
or
and
in
stos
add
nop
ret
mov
lahf
mov
popa
cmc
nop
or
iret
shlb
jge
test
cmc
cmp
or
xchg
mov
mov
cmp
and
jge
push
loopne
xor
jp
sub
adc
push
scas
dec
cmp
aam
sti
jne
jge
inc
or
xor
call
fldl
pop
data16
pop
mov
jb
ds
gs
leave
jne
imul
mov
movsb
mov
pop
mov
and
xor
add
aas
fwait
inc
push
lcall
out
add
outsl
sub
out
push
std
add
pop
sahf
pop
icebp
push
rcrl
jno
sbb
adc
pop
dec
rolb
outsl
xchg
fcomip
fcmovbe
imul
loope
jmp
lret
jne
push
mov
inc
cmp
addr16
xor
lock
xchg
sahf
pop
call
js
lea
aam
pop
jo
lret
lea
lods
frstor
daa
daa
rorb
fnstcw
cld
js
mov
mov
pop
cli
push
jns
ret
pop
mov
pop
or
or
popa
add
repnz
cwtl
and
out
cmp
psubsb
inc
inc
mov
loop
clc
mov
push
push
cmp
loop
xor
daa
data16
jle
in
pop
jmp
dec
jae
call
fnstsw
jne
gs
outsb
call
nop
loop
inc
jmpw
js
ljmp
out
lods
and
jmp
push
sub
ja
loop
xchg
push
shlb
insb
jmp
test
lock
inc
sub
int
in
in
xlat
imul
and
adc
addr16
loop
out
call
stc
push
dec
xchg
gs
popa
mov
addr16
sub
sub
loop
lods
fsub
pop
das
shl
call
in
push
imul
das
call
loope
stos
out
xor
adc
pop
lds
jb
sbb
xlat
in
cmp
mov
mov
loop
in
out
sub
in
in
loop
mov
insb
jmp
repz
dec
adc
movsl
sub
cs
and
dec
insl
movsl
loop
lock
rorb
loop
popa
sub
test
in
push
adc
and
dec
aam
loop
call
shl
inc
imul
in
adc
loope
push
in
dec
push
add
call
loop
push
inc
out
jo
adc
pop
insl
pop
gs
and
aam
rcrl
push
dec
gs
push
sub
popa
es
adc
and
push
and
call
aam
loope
lcall
pop
cmpsl
push
scas
pop
ljmp
mov
insl
push
mov
sub
sub
push
add
popa
in
popa
push
dec
loop
loope
call
in
daa
icebp
jmp
push
out
imul
rcll
call
out
nop
daa
call
xor
out
insl
xchg
cs
int
adc
in
jmp
dec
sub
cmpsb
pop
daa
sub
out
in
movsl
xor
shr
push
sub
xor
shll
xor
push
stos
push
insl
xchg
shrl
out
xlat
ljmp
and
pop
sbb
repz
dec
push
adc
loope
loopne
in
mov
cmc
aad
inc
jle
outsb
xchg
nop
inc
fbld
add
loope
lret
ljmp
xchg
popa
mov
xlat
lcall
gs
sub
push
cmp
xchg
mov
jmp
add
sub
pop
dec
pop
dec
sbb
jb
mov
jp
pop
test
push
mov
in
sbb
aas
pop
pushf
mov
insl
psubusw
insb
adc
dec
sbb
pusha
mov
push
jg
xchg
cmpsl
jo
push
imul
hlt
lds
mov
jecxz
adc
mov
mov
test
sti
sub
add
in
xor
add
imul
aaa
pop
jle
cmpsb
xchg
pop
fsubrs
in
mov
push
out
bound
adc
aam
sub
testl
stc
mov
add
punpckhwd
out
popf
and
int3
xor
sub
jbe
mov
insb
add
testb
lods
outsl
xchg
gs
ss
repz
xchg
cmovno
imul
pop
mov
dec
inc
stc
push
and
pop
fmulp
aam
leave
xlat
push
testb
adc
jl
jb
hlt
in
loop
int
inc
scas
and
push
jnp
fs
push
adc
jmp
gs
push
nop
sbb
add
and
loop
mov
outsl
fisubrs
imul
mov
pushf
loop
jns
cmpsb
push
dec
dec
rcrb
and
cld
fisubl
adc
and
push
or
lahf
fwait
imul
xchg
pop
pop
mov
out
adc
cltd
jo
mull
inc
xchg
xchg
lea
or
mov
dec
sbb
ja
movsb
push
or
faddp
cmc
imul
insl
add
dec
leave
adcl
insl
jbe
add
test
cs
and
sbbb
lahf
push
pop
jnp
and
pop
js
notl
add
aas
dec
mov
lret
adc
ret
test
xor
pop
xchg
push
cmp
iret
dec
xchg
mov
and
jmp
jecxz
hlt
pop
add
aad
mov
data16
test
dec
sbb
mov
pop
cli
push
cmp
cmp
jecxz
mov
cmp
xchg
and
dec
pop
test
insl
pop
xchg
mov
int3
dec
int
insb
push
push
dec
je
orb
mov
mov
adc
sub
iret
fidivs
xchg
jle
jo
stos
mov
loop
xchg
mov
pushf
xchg
mov
lret
sub
inc
mov
test
push
lahf
test
xchg
lret
dec
mov
sbb
int3
cmp
inc
dec
imul
mov
loop
in
or
idivl
subl
loop
lret
add
or
sub
adc
sub
dec
fimuls
mov
int3
scas
sbbb
sub
ljmp
jmp
fsubrl
lcall
out
sbb
inc
push
push
aas
out
sub
cmp
popf
cmp
push
or
imul
jl
and
pop
shrb
inc
sub
dec
fistpl
mov
pop
aam
pop
aas
xchg
imull
dec
jmp
pusha
sbb
push
ljmp
cmpb
jecxz
mul
and
out
push
dec
repnz
les
pop
pop
add
shrl
dec
xchg
lret
mov
out
dec
adc
adc
flds
cmp
mov
inc
dec
movsb
push
xchg
mov
push
fmuls
cmc
int
sub
dec
call
and
mov
xchg
out
rorl
icebp
pop
adc
push
adc
fcomps
push
jg
lret
insl
inc
movsl
mov
jle
and
arpl
sarb
pop
cmp
lock
into
shlb
jo
pop
stos
jmp
das
push
mov
sub
insl
pop
or
adc
xlat
outsb
imul
iret
lock
mov
mov
mov
sub
ja
out
fcmovbe
loop
pop
out
pop
cwtl
mov
dec
inc
sbb
pop
sub
psrlq
stos
imul
inc
ljmp
pop
daa
es
adc
pop
cwtl
js
outsl
sbbb
inc
lea
lret
icebp
je
gs
fbstp
jp
mov
dec
test
add
loop
ja
or
inc
imul
sbb
aam
icebp
pop
cli
fstl
pop
call
adc
inc
xchg
stos
pushw
jl
cmp
out
lcall
shll
or
or
dec
mov
pusha
bound
jge
pop
js
sbb
ljmp
jo
fdivrs
test
sub
xchg
dec
rcrl
out
fs
lret
popa
popf
push
cmp
arpl
fbld
xchg
mov
mov
push
and
jp
fldl
dec
stos
and
out
mov
mov
aam
push
mull
repz
stos
adc
push
pop
scas
jo
inc
scas
in
jmp
aad
inc
call
and
xor
fimuls
lcall
dec
adc
xor
sarl
cld
cltd
adc
incl
mov
dec
push
aam
pop
andl
int
fadds
or
out
mov
std
push
sub
push
adc
movsl
mov
in
inc
leave
aad
add
inc
sbb
out
stc
out
xor
sub
andl
addr16
push
xor
gs
loop
jmp
fucom
and
lret
test
push
rcrb
inc
push
out
jmp
and
arpl
jo
cs
push
mov
dec
outsb
sub
xlat
pop
mov
rorb
out
push
and
in
inc
push
ret
insl
xor
mov
dec
popa
popa
push
movsl
xor
fsub
icebp
or
rclb
pop
es
movsl
xchg
sub
inc
outsl
inc
stc
aaa
mov
in
movsl
sub
adc
xchg
xor
out
fmull
jne
dec
xchg
sub
dec
insb
mov
push
das
and
es
in
and
addr16
loopw
inc
lea
push
outsb
mov
ret
xor
sub
stos
and
xor
dec
mov
bound
pop
pusha
mov
adc
sbb
in
and
aas
imul
or
and
cmpsl
mov
call
lods
sbb
xchg
jmp
xchg
fisubs
in
shlb
inc
cs
sub
outsl
sub
imul
inc
das
gs
mov
cmpsl
imul
in
movsl
sbb
loop
test
dec
push
adc
imul
shll
jmp
loop
bound
insl
pusha
sarl
imul
out
dec
lods
dec
insb
gs
loop
lods
fcoms
and
test
loop
in
sub
subb
popa
rcrl
aad
cmpsb
xor
popa
push
aaa
imul
sbb
inc
popf
sub
mov
xor
push
pusha
mov
mov
pop
xchg
rcrb
inc
dec
mull
fnsave
mov
fdivrl
aam
cmp
rol
mov
dec
mov
test
outsb
mov
fiadds
or
push
dec
pop
inc
outsl
dec
mov
jp
and
push
add
jg
in
push
fcmovnu
sbb
and
imul
lock
cmp
add
dec
les
cmc
pusha
dec
pushf
dec
inc
ja
jno
pop
out
aam
or
adcb
pop
mov
fwait
cmpsb
mov
pop
inc
sub
jmp
push
test
push
push
jae
ljmp
jne
in
pusha
lcall
lods
pop
pop
mov
or
out
jns
test
push
loop
add
xchg
addr16
loope
ja
sub
sbb
orb
cmpsl
sbb
dec
xor
xchg
fsubrl
stc
xor
loope
adc
aaa
pushf
push
mov
rorl
sbb
lret
mov
insb
lock
cmp
mov
or
cmpsl
pop
pop
dec
mov
mov
mov
call
or
or
and
addl
gs
cmp
cmp
outsb
mov
cwtl
aam
test
or
push
and
bnd
sbb
imul
sub
fildll
and
and
sahf
or
cmp
pop
jge
fs
pop
sub
rcr
add
cmpsb
cmp
mov
or
cmpsl
cmp
movsl
call
data16
jnp
xchg
xor
lds
pop
push
fbld
in
arpl
fsubrs
lret
lods
sarb
dec
movsb
repnz
and
nop
sbb
pushf
aas
loope
adc
in
xor
daa
pusha
cmc
mov
test
push
xchg
in
cmpsl
imul
ja
xchg
jbe
movzbl
imull
and
out
xchg
outsl
and
es
loop
xor
shrb
dec
mov
mov
adc
xchg
js
mov
nop
or
and
div
ret
fwait
mov
negl
dec
loop
mov
pop
xor
xchg
jle
adc
lret
fs
xor
or
lds
dec
movsl
ss
insb
fimull
rorl
outsl
aam
cmp
insl
jae
rcll
popf
outsl
xchg
jg
int3
mul
xchg
iret
mov
or
imul
sub
fiaddl
dec
push
sub
in
add
fldenv
push
jp
mov
mov
jo
imul
xor
test
dec
jecxz
push
in
inc
pusha
pushf
sbb
call
pop
xchg
sub
xchg
bound
cli
jnp
into
cmpl
pusha
lret
fdivs
and
add
int3
mull
test
fisttpll
call
push
xlat
fwait
pop
sbb
or
xor
stos
into
inc
add
adc
mov
mov
dec
ljmp
loopne
push
je
cmp
aaa
push
or
mov
or
push
cltd
cmp
cwtl
mov
scas
ja
pop
mov
fnstcw
fcomp
pop
mov
mov
xor
cmp
xchg
imul
sti
add
leave
mov
dec
imul
out
ret
lock
setge
out
lods
lcall
cmp
cmp
mov
inc
orb
sub
dec
sbb
adc
push
cld
sub
xchg
mov
pushf
and
mov
cmpsb
mov
ss
shll
mov
imul
inc
jge
inc
loop
mov
icebp
ficoms
mov
mov
mov
mov
sar
cmp
call
push
dec
test
xchg
jb
scas
lahf
pop
jae
push
leave
rep
push
sub
lret
fwait
ljmp
push
jp
sub
movsb
or
adc
and
xchg
shrb
push
cli
and
push
push
push
or
enter
adc
and
test
fisubrs
sub
test
push
mov
adc
scas
cld
icebp
lock
xor
lods
insl
dec
dec
push
andl
sub
lds
pop
adc
shlb
dec
test
jnp
out
push
cli
or
sbb
mov
push
jmp
xchg
sub
add
daa
repnz
fidivrl
push
imul
jnp
pop
add
or
xor
loope
aam
jo
sub
jne
pop
mov
movsl
xchg
div
pop
mov
sub
iret
imul
stos
pushf
addr16
dec
xchg
xor
mov
ljmp
in
data16
imul
out
push
push
mov
pop
mov
sub
push
push
pop
cld
mov
shrd
push
imul
add
push
pop
or
cmpsb
mov
push
imul
inc
and
movq
lea
shl
cmp
xchg
pop
fisttpll
jle
cmc
mov
cli
xlat
aaa
in
adc
xchg
pop
push
push
adc
lea
push
adc
push
pop
xor
pop
imul
ss
or
pusha
mov
dec
psrld
lret
add
xchg
daa
add
xlat
punpckhwd
mov
rclb
inc
xchg
and
pop
cmp
push
ftst
cmp
pop
mov
clc
inc
incl
orl
mov
lcall
pop
lock
aaa
push
inc
rcll
lahf
pop
adc
pop
ja
push
sbb
sub
cld
pusha
or
stos
push
sbb
stos
sbb
imul
inc
out
pop
mov
dec
sub
xchg
hlt
pop
cmc
cltd
jle
xchg
mov
inc
pop
leave
or
popf
and
mov
out
mov
mov
dec
xchg
or
roll
push
subl
pop
dec
mov
pop
jnp
mov
add
pop
sub
push
fsubrp
imul
push
mov
imul
sub
sbb
icebp
and
out
push
inc
xchg
scas
push
adcb
sub
and
scas
test
push
aaa
int
and
xor
mov
sahf
mov
fs
pop
mov
gs
or
mov
jecxz
test
dec
mov
mov
les
push
into
cmc
mov
adc
push
push
push
fsts
pop
pop
mov
popa
pop
xchg
mov
das
int3
dec
push
inc
fidivs
fs
idiv
pop
push
push
add
jo
loop
add
dec
imul
test
mov
ljmp
insl
dec
das
mov
inc
movsl
imul
cld
mov
xchg
mov
loope
pop
movsb
sbb
xchg
cmp
cld
xor
enter
lcall
jp
mov
fwait
mov
push
bound
xchg
dec
and
inc
add
xchg
jnp
or
mov
or
xchg
roll
or
pop
adc
loopne
cmpsb
mov
pop
test
pushf
jns
dec
jl
mul
cmpsl
out
cmp
out
sub
jo
test
pushf
imul
cmp
and
nop
sub
das
add
hlt
fisttpll
cmp
addr16
mov
faddl
lcall
cmp
dec
div
dec
out
inc
mov
loopne
fnstenv
lods
inc
push
xchg
dec
outsb
ret
mov
push
xchg
pop
push
and
mov
lods
pop
and
shlb
out
ret
mov
adc
dec
mov
fldl
cmp
pop
fs
mov
fwait
scas
cs
ret
orb
sub
loop
xor
or
dec
les
or
mov
out
xchg
pop
xor
pop
mov
lds
cmpsl
jbe
cmp
mov
pusha
fistl
clc
dec
xchg
inc
xchg
sahf
xor
add
movsl
es
and
dec
sbb
mov
sbb
or
mov
lahf
lods
sub
test
or
adc
pop
loop
mov
mov
push
sbb
lret
fcoms
in
lds
xchg
jge
iret
bound
push
cmpsb
std
mov
pop
xor
jecxz
outsb
dec
shrb
lret
lret
ret
inc
in
enter
push
mov
jnp
mov
movsb
push
mov
lret
gs
add
pushf
in
lret
cmpsl
mov
loop
and
les
daa
or
jbe
push
push
mov
push
sti
imul
sub
mov
push
imul
sahf
sbb
xchg
fidivrs
scas
dec
cmp
data16
mov
jbe
ljmp
not
int3
mov
push
jb
loope
pop
pop
fidivrl
push
pop
fistl
push
xchg
push
movsb
mov
xor
insl
stos
imul
mov
sub
sub
xchg
inc
push
pop
pop
jno
or
aam
mov
add
inc
stos
dec
popa
and
xlat
cmpsl
pop
outsb
add
iret
mov
jne
in
in
mov
xchg
push
sbb
inc
mov
mov
into
pop
mov
cmpsb
imul
int3
gs
cwtl
xchg
cs
dec
push
imul
push
pop
inc
nop
scas
cmc
xor
push
jb
sub
sub
sub
pop
lahf
sub
jae
jae
jge
es
cmpsb
daa
pop
in
sub
sbb
and
add
push
push
stos
fwait
int3
stos
pusha
add
push
jl
gs
jne
cmp
leave
cmp
add
push
sbbb
and
call
push
shrb
pop
xchg
sbb
call
rorb
sub
lret
imul
xor
popf
pop
add
aad
mov
inc
jne
xchg
int3
movsb
mov
xchg
sbb
mov
push
out
lret
sub
mov
lods
jns
jge
jmp
adcl
lods
pop
popa
lea
bound
clc
mov
jp
pop
push
jge
js
std
insb
push
mov
in
mov
iret
push
cmp
pop
pop
out
or
sub
jge
sbb
jmp
pushf
push
sub
fwait
xor
cmp
call
push
aam
insb
xor
es
sub
push
call
or
mov
insl
jno
push
ja
add
insl
xchg
lods
sub
outsl
jbe
mov
xchg
mov
lcall
scas
cmp
and
movsl
jmp
bound
pop
movsb
mov
xchg
pusha
faddl
call
in
adc
hlt
test
add
pop
test
out
pop
sub
lock
fs
inc
loope
subb
dec
jp
negl
or
add
mov
jno
xchg
xor
push
fwait
jnp
clc
xchg
shlb
insl
sbb
inc
sub
cmp
add
shrl
mov
jne
or
pop
pop
aam
mov
mov
sub
imul
pop
pop
jae
mov
mov
add
out
popa
out
add
mov
cld
mov
imul
leave
dec
inc
inc
cwtl
cmpsb
mov
adc
push
mov
xchg
dec
and
pop
stos
sbb
imul
mov
movsl
pusha
nop
push
bound
lods
outsb
adc
mov
push
push
mov
ljmp
ds
add
sub
iret
stos
xor
pop
ret
in
pop
push
ss
adc
or
das
pop
movsl
stos
ja
add
mov
leave
in
dec
outsb
movl
out
push
test
lods
mov
mov
cmpsl
push
int3
push
orb
loopne
mov
inc
or
mov
imulb
pop
push
stos
imul
jne
and
aam
cmp
inc
adc
pusha
in
mov
cs
cmp
add
leave
imul
int3
adc
mov
sub
or
out
adc
aam
sub
call
scas
lds
dec
in
add
push
lret
mov
mov
lret
cmp
sub
addr16
andl
jle
in
cli
dec
add
pop
pop
mov
addr16
aas
cs
rcr
jns
mov
incb
js
cltd
sbbl
sbb
lret
fisubs
enter
or
imul
mov
imul
push
sub
movsl
jo
sub
divl
jl
pop
mov
jbe
popf
cli
aaa
insb
jns
jl
adcl
lahf
pop
lahf
out
in
mov
push
rclb
adc
inc
shrl
lods
cwtl
and
mov
mov
jo
fwait
int
dec
adc
nop
jmp
fiaddl
pop
jbe
movsl
mov
test
jo
inc
loopne
lds
inc
shll
jmp
loop
push
pop
imul
mov
cmc
call
jne
imul
out
sbbb
daa
imul
pop
outsl
pop
jle
jns
in
mov
adcb
hlt
sbb
add
in
jbe
lcall
lea
push
mov
imul
pop
push
push
mov
lcall
and
add
out
push
test
jg
pop
imul
mov
jmp
punpckhwd
dec
xor
test
test
push
push
adc
hlt
and
or
lea
cmp
adc
sub
dec
dec
and
cmp
sti
aas
mov
outsb
into
or
in
out
stos
cli
shl
pop
stc
mov
das
int3
dec
inc
popf
fstp
xchg
fs
fcomps
daa
xor
shl
push
insl
sbb
loop
ljmp
out
shlb
lods
sub
xor
lock
pshufw
add
loop
lret
mov
cmc
std
enter
das
xor
push
aam
cmp
fisubrl
add
sbb
loop
push
cld
out
fsubl
enter
pop
jbe
add
push
pop
dec
test
aam
je
xchg
imulb
cmpsl
std
ja
sbb
or
adc
sub
push
adc
nop
push
and
hlt
push
fists
repnz
jle
push
cli
pushl
inc
xchg
sti
sub
mov
in
xchg
dec
mov
add
inc
loop
idivl
add
fs
pop
mov
pop
ja
push
mov
dec
cmpsl
negb
movsb
cwtl
sub
inc
repz
lcall
dec
imul
cwtl
mov
fnstcw
mov
call
xor
sub
test
add
sub
xchg
or
or
aas
aam
call
add
ja
popf
gs
mov
xchg
inc
lret
sub
adc
loope
fiadds
and
push
push
push
xchg
sarb
add
inc
inc
sbb
add
cmc
out
xchg
fcoml
mov
pusha
daa
inc
shrb
mov
daa
push
cmp
arpl
lock
sti
pop
xor
mov
and
or
pop
push
xor
jge
pop
scas
divl
arpl
mov
or
cmp
adc
xor
xorb
imul
addr16
jle
xchg
cmp
mov
lret
loope
ds
vmread
add
imul
popa
xchg
lea
mov
loopne
mov
push
aaa
push
mov
aad
cmpsl
popf
adc
jmp
sbb
add
jl
out
xrelease
fwait
addr16
out
and
jns
mov
mov
mov
lods
loope
sahf
inc
inc
lea
loope
dec
and
mov
iret
jmp
mov
je
scas
xor
fnstenv
jge
imul
push
cmc
shll
adc
mov
adc
mov
iret
movsb
jbe
cltd
mov
popf
jl
lret
cmp
es
jae
add
mov
mov
dec
stos
push
pop
pop
fistl
xlat
mov
arpl
ljmp
in
xorb
sbb
adc
cltd
mov
test
mov
sahf
js
xchg
xchg
shl
jp
xchg
inc
dec
push
xchg
into
popf
out
mov
jmp
ss
jo
xchg
leave
pop
add
ss
leave
add
pop
aaa
push
push
dec
jne
sub
mov
mov
lret
xlat
adc
push
fistl
inc
xor
jmp
push
add
sub
bound
dec
sub
mov
push
xor
insl
xlat
mov
shl
jmp
adc
stc
cmp
lret
out
sbb
pop
mov
cld
cmp
jmp
push
push
sub
fildl
icebp
divb
repnz
cltd
sub
gs
xchg
adc
jecxz
pop
mov
outsb
pop
test
insl
imul
mov
test
and
icebp
aas
push
lret
mov
adc
ror
push
mov
xchg
cmpsl
xchg
sub
inc
add
loope
scas
shrl
mov
ljmp
add
cmovl
adc
ret
ret
nop
or
push
jne
mov
mov
pop
div
stc
jo
or
mov
ljmp
sbb
pop
mov
inc
xor
ret
clc
jg
popf
push
push
pop
aam
stc
sub
in
mul
jmp
insb
insl
stc
ljmp
int
imul
mov
hlt
inc
add
int3
adc
cmpsl
dec
es
iret
clc
dec
lods
movsb
loope
ja
scas
jmp
test
pop
sub
add
inc
fildl
push
push
sti
cmpsb
pop
cmp
divb
jb
ss
das
adc
or
enter
hlt
rorb
mov
cmp
movsl
xchg
xchg
xchg
pop
xor
ficoml
xor
xor
lods
outsl
loope
stos
xchg
jmp
sub
sti
pop
sub
xchg
out
das
push
loopne
push
dec
add
cmpsl
mov
in
dec
push
sbb
call
in
jp
fs
and
and
mov
and
rcl
ja
imul
dec
aad
call
mov
pop
test
aam
adc
scas
jnp
ja
sub
push
lahf
bnd
mov
mov
test
cvtps2pi
std
or
and
movl
les
cmpsl
xor
lret
insb
andb
hlt
imul
lcall
or
fnstenv
cli
xchg
dec
lret
xchg
sbb
repnz
popa
cmc
gs
adc
cmpsb
jle
pop
xchg
mov
jg
bound
dec
icebp
rcl
push
or
movsl
push
sahf
sub
pop
test
in
or
gs
and
xchg
or
gs
or
out
in
xor
sbb
pop
call
push
mov
xchg
adc
in
jmp
add
shll
inc
in
xor
fildll
shrb
jne
mov
push
mov
in
rcrb
inc
outsl
clc
aaa
push
ljmp
add
sub
jmp
rorb
mov
push
and
jg
rcll
pop
push
in
xor
in
fsubs
mov
sub
scas
gs
das
mov
in
movsl
dec
jl
les
stos
out
xchg
push
push
mov
dec
sub
jo
aam
xor
shr
push
outsb
adc
xchg
stos
sub
adc
fsub
insl
imul
dec
and
xor
sbb
push
in
scas
sub
in
loopw
xchg
sbb
stos
shr
cmp
inc
call
cltd
call
push
adc
adc
in
dec
les
rolb
out
stos
cmc
in
insl
or
pop
shl
out
ffreep
ret
dec
adc
sub
pusha
adc
pusha
stos
in
sahf
pop
loopne
in
imul
jo
sub
inc
dec
in
addr16
call
cmp
call
cmp
adc
sub
push
adc
jmp
and
sbb
in
mov
jmp
mov
shrl
sub
sub
xor
pop
and
scas
fsubs
mov
push
enter
es
insl
cltd
xchg
sub
jo
mov
push
pushf
int
mov
mov
in
dec
movsb
pop
mov
lahf
call
inc
mov
lods
mov
stos
add
pop
pop
or
into
and
sarb
jmp
xor
jp
movsb
lret
gs
and
mov
add
je
mov
lods
out
jl
xor
fistpll
imul
cs
ja
xchg
add
je
jmp
ja
mov
sbb
mov
pop
and
es
jmp
add
mov
jnp
adc
pop
fcmovb
adc
sbb
popa
aam
pusha
sub
loope
adc
adc
int3
inc
pop
fs
pushf
pop
and
xor
negl
je
push
push
xchg
adc
push
iretw
decb
jbe
mov
jno
jo
cmpsl
sbb
add
ja
inc
in
je
push
push
mov
aas
push
jne
mov
fsubs
sbb
or
rorb
cwtl
or
or
mov
adc
test
pop
int
add
mov
leave
xor
mov
test
push
mov
imulb
sub
sarl
js
insb
test
mov
cld
mov
test
cmpsl
xor
pop
lea
inc
mov
outsb
icebp
outsl
hlt
and
rcrl
aam
packssdw
mov
mov
and
push
cli
pop
push
fwait
mov
outsl
data16
imul
out
push
inc
mov
aam
imul
dec
cs
push
sub
mov
mov
nop
jg
or
stos
popa
es
pop
push
fdivr
in
xor
jbe
xchg
data16
mov
stos
push
outsl
jge
loope
rcll
mov
ljmp
push
aam
push
ret
xor
das
mov
cs
mov
loopne
clc
cmpsl
sbb
mov
js
mov
das
fisubrl
out
sbb
jns
into
cmpsl
mov
sub
push
test
sbb
repz
sub
es
lret
xchg
mov
fs
xor
mov
mov
es
in
xchg
call
push
push
imul
dec
jmp
sub
xor
sub
and
call
sbb
sub
add
and
push
xchg
sbb
fiadds
sub
aad
loope
frstor
and
int3
lret
sub
out
int3
cmpsw
in
cmp
dec
lock
jbe
mov
adc
rorl
adc
testl
aam
movsb
int
scas
fisubs
adc
mov
inc
dec
orl
mov
sub
or
xchg
out
push
xchg
pop
leave
push
sub
push
lock
imul
lock
xchg
in
dec
push
imul
cld
cmp
stc
enter
xor
sbb
or
rorl
leave
push
mov
in
sahf
mov
pop
fcmovb
cmc
add
clc
or
sti
jmp
test
cli
repnz
ss
cmpb
dec
movzwl
leave
xor
pop
test
jl
mov
jbe
pop
int
xor
push
leave
mov
bound
fidivrs
movsb
not
cmp
sub
loop
push
in
push
int
cmp
addb
dec
iret
jg
in
or
lret
fstpt
sub
fdecstp
out
ficompl
lret
push
ljmp
jl
stos
stos
popf
vorpd
sti
sbb
int3
or
sar
mov
aas
jmp
pop
cli
dec
mov
mov
pop
movsl
xor
out
sub
daa
add
add
ljmp
mov
mov
scas
inc
prefetcht0
out
clc
adc
out
adc
pushf
mov
idivb
mov
dec
imul
in
sarl
jge
bound
jbe
add
push
mov
fwait
sbb
adc
jle,pn
cmp
xchg
mov
les
jb
gs
movsl
lret
xor
scas
dec
jne
data16
xchg
dec
push
hlt
pop
sbb
xchg
xchg
dec
and
push
sub
in
pop
push
mov
or
in
das
cli
mov
das
loope
sbb
mov
jp
adc
lahf
mov
in
mov
aad
icebp
pop
xchg
jmp
std
mov
cmp
pop
sub
loopne
xchg
js
adc
in
outsl
cmp
lret
pop
shll
test
das
sbb
sub
dec
ficoms
sub
push
data16
std
lret
inc
ud2
inc
mov
sahf
popa
shrl
imull
lds
cmp
pusha
movsb
test
cmp
pop
cmp
movsl
aad
or
cmp
movsb
das
push
xchg
in
push
pop
jno
sarb
or
repnz
and
adc
roll
scas
loopne
das
orb
imul
insl
mov
sbbb
or
negl
cmpsb
ficompl
jae
in
lret
fwait
inc
mov
mov
push
lret
mov
push
sbb
div
cltd
iret
aaa
sub
push
add
leave
mov
arpl
in
lcall
mov
lods
popf
cmpsl
cmc
and
lods
and
and
sarb
xor
in
scas
jge
sub
movsl
rcrl
test
mov
mov
addl
pop
ljmp
rcrw
insl
pop
cmc
testl
pop
add
int3
and
xchg
inc
mov
jo
and
jno
je
ja
xchg
ljmp
pop
sub
push
imul
test
inc
int3
rcrl
ljmp
sbb
fistps
sbb
mov
inc
xchg
adc
cmp
testb
dec
push
aam
or
pop
xchg
test
test
push
shrl
mov
xchg
sbb
push
insb
pop
or
dec
scas
in
adc
scas
cmpsb
lea
inc
mov
xchg
shlb
sub
cs
ja
cmp
mov
jbe
and
mov
mov
dec
ss
push
add
cltd
jbe
jl
movsl
sbb
pop
and
fiaddl
adc
sbb
into
inc
clc
adc
jb
xchg
iret
and
cmc
loop
and
jbe
ret
rol
les
push
jae
pop
mov
sub
test
jg
imul
xchg
notw
inc
cs
mov
mov
sub
es
pop
lock
js
sbb
and
or
jle
pop
jo
push
jbe
mov
cmp
in
iret
xor
or
jno
push
inc
xor
ja
subb
ja
aam
scas
rcll
jl
rorl
cmp
imul
in
pop
ds
cld
mov
psubsw
jno
hlt
jae
jne
jle
in
pop
push
mov
push
mov
pop
inc
dec
push
stos
mov
addr16
movsb
popa
mov
rcl
cmp
mov
or
rcr
ja
mov
shll
cmpsb
xlat
subl
and
push
sub
lods
sub
sbb
or
imul
insb
mov
push
xor
pushf
repz
pop
scas
push
pop
inc
xchg
pop
jb
mov
pop
push
adc
loope
and
sub
out
add
pop
mov
mov
out
bound
imul
mov
lcall
test
mov
and
inc
gs
int3
pushf
pop
jle
push
aad
mov
pop
push
shl
jmp
notb
aaa
dec
sahf
pop
fstpt
push
aam
sub
leave
fs
pop
fdiv
ja
out
sub
add
mov
add
data16
jnp
cmc
aas
mov
adcl
imul
or
dec
fadd
enter
pushf
add
stc
inc
gs
loope
and
in
jecxz
out
movsl
fsub
insb
jecxz
and
cmp
leave
jecxz
and
dec
shl
gs
push
dec
xchg
push
lock
xchg
xchg
lods
fdiv
fimull
jecxz
push
xor
in
mov
push
add
scas
ja
insb
out
inc
xchg
rcrl
xor
pop
jne
cmp
jge
cmp
call
cmp
push
push
pop
dec
in
pop
push
in
mov
dec
sub
and
mov
or
insb
mov
xchg
jns
sbb
push
fidivs
jge
cli
push
stc
cmpl
and
daa
mov
xor
in
xor
dec
insl
push
push
not
ljmp
inc
jo
mov
inc
pop
sarb
mov
mov
sbb
pusha
js
or
in
inc
cmp
je
lret
lods
and
xchg
mov
nop
mov
xchg
inc
dec
cmpsl
jecxz
lahf
imul
fwait
push
gs
call
daa
lahf
cmp
inc
clc
data16
pop
test
sub
aad
mov
lock
pop
in
pop
mov
movsl
adc
or
add
in
mov
sub
es
sarl
js
jmp
jbe
fiaddl
mov
push
cltd
bound
and
or
out
rorb
dec
inc
out
sub
xchg
int
jle
xchg
push
xchg
test
mov
inc
cmp
jp
mov
xchg
frstor
lret
mov
movl
jnp
pop
test
pop
fmulp
lds
sbb
movsl
aam
mov
loop
dec
fsubr
cltd
adc
pushf
in
push
cmpsb
out
sub
push
cmc
mov
pop
and
xchg
out
jae
out
push
lock
cmp
pop
popa
sub
pop
inc
cltd
rorl
les
inc
push
mov
iret
pop
jbe
adc
xchg
pop
fbld
mov
test
xor
adc
push
push
out
leave
adc
xchg
jl
inc
pop
or
in
aad
xchg
dec
hlt
push
xlat
call
mov
cmp
inc
subl
sub
cmpb
jmp
imul
jae
lcall
dec
repnz
sbb
sti
loop
ja
imul
pop
mov
pusha
mov
lods
js
es
cmc
sbb
daa
mov
adc
shlb
dec
nop
mov
test
pop
test
movsb
fldcw
lock
dec
mov
mov
adc
rolb
sub
jp
push
inc
sbb
adcl
and
movsl
lahf
sbb
js
mov
inc
push
lcall
repz
and
imul
dec
push
mov
andb
leave
test
pushw
out
push
sub
mov
add
sbb
mov
sub
pop
cmc
jae
imul
push
and
mov
gs
mov
and
dec
inc
push
clc
arpl
js
inc
mov
pop
add
pop
mov
popf
stc
sbb
mov
pop
aam
js
imul
aam
mov
sub
pusha
pop
int3
aad
stc
mov
mov
push
adc
and
jecxz
ljmp
daa
loop
sahf
jg
push
js
orb
xchg
sbb
das
sti
inc
in
insb
add
dec
addr16
repnz
popf
lcall
pop
push
or
jbe
jle
lods
lcall
nop
jbe
movsl
mov
adc
mov
jge
lret
cmpsb
dec
xchg
std
test
or
mov
push
adc
enter
scas
test
sbb
sbb
test
push
in
xchg
fdivs
jp
insb
fistps
movsb
dec
insl
sbb
and
inc
cmp
test
insl
and
stos
iret
ret
out
pop
ljmp
lcall
add
jle
xchg
mov
and
dec
ja
pop
mov
aaa
cmp
jne
movsb
jb
add
adc
loop
pushf
mov
repz
loope
mov
jae
rcr
add
inc
enter
and
and
xchg
or
test
mov
out
dec
fnstsw
xchg
shlb
leave
mov
cmp
dec
mov
jo
adc
xor
dec
and
cld
mov
sbb
aam
push
mov
ljmp
pop
inc
push
popa
sbbl
fadd
flds
in
fsub
sbb
pop
dec
jecxz
adc
dec
hlt
pop
mov
pop
cmp
lahf
daa
mov
mov
cli
sub
dec
pushl
int
andb
test
adc
orl
add
mov
push
movsl
sub
xor
ficoms
imul
mov
push
or
sub
xchg
cmp
lea
sub
push
lcall
ljmp
das
mov
mov
fcomps
cmp
ret
lds
outsl
jl
inc
add
mov
mov
mov
adc
iret
push
xchg
pop
push
push
testb
outsb
ljmp
xorb
or
shll
outsb
or
pop
mov
or
outsl
pop
js
add
lods
add
mov
inc
sbb
cli
popa
fbld
movsb
fiadds
or
es
je
das
and
sub
push
hlt
sahf
cmp
scas
pushf
gs
push
push
mov
scas
call
and
jmp
xchg
aad
mov
and
aad
jge
out
scas
push
lahf
cmp
leave
out
fidivl
in
loop
sti
xchg
push
inc
imul
add
loop
out
xchg
mov
sbb
push
shll
lea
push
add
or
pop
lcall
xchg
sbb
dec
les
dec
adc
push
shrb
in
push
inc
dec
mov
popf
sbb
jl
inc
adc
sahf
dec
cwtl
and
arpl
jl
push
imul
fcoms
pop
rcr
dec
lods
mov
mov
filds
or
gs
lret
lahf
sub
mov
jae
lret
daa
scas
jp
cmpsl
mov
fmuls
das
xchg
sub
push
sub
into
sbb
push
push
sarb
inc
leave
pop
mov
mov
sub
jmp
push
xchg
lret
dec
add
pop
jmp
push
fdivp
imull
sbb
loopne
ljmp
fdivl
cmp
lock
cmpsl
jb
inc
sub
push
push
adc
stos
and
movsb
out
fstp
int3
pop
xchg
inc
or
fiaddl
lea
hlt
push
cmpsb
dec
in
mov
dec
pusha
test
stos
fidivrl
mulb
mov
and
inc
test
mov
and
mov
lret
xor
dec
insl
push
int
cltd
ja
dec
orb
pop
sbb
cmp
clc
ds
in
stc
hlt
outsl
enter
rolb
outsb
mov
shr
dec
pop
push
test
iret
lock
test
push
mov
test
adc
lcall
push
pop
insl
mov
imul
jmp
test
push
sbb
fdiv
fmul
lods
or
in
mov
test
add
loop
mov
pop
out
lret
imul
ficoml
mov
dec
xchg
cmp
sbb
jne
ljmp
mov
pop
or
mov
imul
enter
pop
out
js
mov
push
sub
shrl
insl
fldl2t
cli
js
iret
out
call
mov
hlt
mov
dec
sbb
pop
sbb
rcr
repnz
clc
dec
xor
mov
cs
test
push
ja
fidivl
popf
sub
jno
int3
and
add
out
das
lds
pushf
jb
pop
cmp
hlt
and
imul
mov
pushf
xlat
cmp
data16
mov
lods
imul
jge
out
mov
ficoml
inc
push
push
mov
lods
testl
cld
bound
pop
cwtl
and
mov
out
loop
movsb
jl
sbb
sarb
xchg
cli
xor
aam
pop
or
push
mov
lods
sub
dec
and
arpl
xor
and
data16
in
jle
and
push
add
ljmp
add
sbb
ds
imul
inc
stc
cli
cld
inc
sub
negl
neg
movsb
and
int
cmp
xor
lods
mov
pushf
and
add
add
mov
arpl
dec
sub
addb
mov
mov
andl
fcompl
js
push
sti
insl
adc
js
lret
jbe
adc
pop
imul
or
cmpb
jl
call
push
xor
jmp
xchg
fwait
imul
clc
push
pop
or
in
or
gs
out
mov
cmp
mov
stos
popf
mov
movsb
mov
xchg
popf
sahf
loopne
scas
lret
mov
dec
push
sub
out
jbe
outsl
leave
dec
jmp
shrb
adc
test
fidivrl
jl
ss
and
imul
inc
dec
pop
movsl
xchg
push
paddq
outsl
dec
imul
sub
cmp
in
cmp
pop
aas
in
mov
pushf
or
mov
cld
lock
jp
dec
out
lret
cmp
fstps
into
aam
testb
fldt
sub
fiaddl
mov
in
ja
jp
nop
add
mov
aam
jae
call
mov
lock
inc
xor
mov
or
mov
cltd
xchg
mov
and
push
jns
aam
imul
arpl
nop
push
lret
or
cmp
lds
jmp
adcb
push
shlb
popa
push
data16
or
dec
ja
aad
loope
mov
dec
mov
icebp
push
push
in
inc
xchg
cmp
popa
sti
cmp
and
sahf
ret
loop
pop
jo
dec
int3
sahf
fcompl
pop
mov
je
addr16
mov
fldcw
pop
sub
repnz
sbb
movsl
push
out
mov
imul
push
ret
pop
or
ret
xchg
jle
scas
loope
sub
adc
popa
mov
dec
rcrb
xchg
push
push
inc
insb
mov
sbb
lret
xor
cmpsl
sahf
add
pop
outsl
fists
cmp
pop
sbb
xchg
fisubs
sarb
jl
or
mov
mov
sbb
mov
lret
fcoml
sbb
xor
pop
nop
cmp
push
lock
shlb
sbb
dec
pusha
es
data16
mov
jae
movsb
int3
fdivs
in
test
lret
push
dec
pop
lea
adc
dec
imul
mov
cmp
imul
jbe
test
pop
fwait
sub
clc
or
xchg
mov
call
roll
fwait
pop
pop
pop
push
jl
arpl
pop
mov
insl
imul
ja
out
fs
fsubrl
push
sub
insb
sub
rcrb
push
lret
ret
pop
push
sub
hlt
imulb
add
or
mov
movsl
mov
fs
cmp
into
cld
mov
out
or
add
dec
push
stos
add
stc
pushf
insb
fsts
inc
push
data16
dec
push
jl
cmp
outsl
ret
cmp
xchg
inc
or
mov
imul
cmp
dec
dec
xchg
outsb
adc
jns
rcll
shrl
stos
pop
lods
ja
mov
mov
nop
shrl
dec
stc
jl
shlb
mov
fmuls
inc
call
les
adc
ja
test
pushf
sbb
push
xchg
call
outsl
daa
cwtl
and
pop
dec
cmp
les
dec
cmp
add
mov
ja
jle
jl
repz
inc
push
pop
pop
and
test
inc
mov
insl
pop
cld
xor
push
dec
addr16
sahf
sub
rcrb
add
sbb
xchg
loope
ret
jle
sarb
pop
pop
test
in
push
imul
lods
xor
add
daa
pop
inc
lock
xchg
loop
push
imul
cmpsl
imul
jb
outsl
ljmp
dec
lock
insl
mov
pop
and
roll
repnz
cld
cmp
sub
aam
sub
sbb
dec
dec
sar
mov
in
fstpt
fsubrs
int3
int3
cli
adc
arpl
and
lock
pop
std
push
sbb
dec
push
sub
int
mov
xchg
call
adc
orb
xor
cmp
or
cmp
add
sub
js
repz
mov
dec
dec
pop
pop
cltd
das
into
hlt
call
inc
pop
mov
push
js
imul
bound
out
xlat
ds
adc
xchg
push
andb
aad
xor
mov
data16
fisubrl
jae
in
lcall
pop
pop
adc
jecxz
into
push
cmp
xlat
mov
scas
shll
add
insl
mov
jnp
push
call
pop
or
lahf
and
in
mov
mov
inc
mov
cmp
rcll
jns
je
push
mov
lods
dec
out
mov
outsl
sbb
sub
fucomip
add
sub
push
mov
sub
add
lcall
ds
movsb
mov
push
mov
imul
or
fcmovnb
lock
call
outsl
mull
cmp
sbb
xor
outsl
push
imul
xchg
arpl
cmpsb
negl
push
xchg
inc
or
sbb
shr
ficoml
es
out
push
dec
out
push
jmp
cmp
sbb
push
int
pop
mov
pop
mov
insl
adc
and
js
or
mov
mov
rorl
fidivl
xchg
adc
enter
or
in
jge
shl
add
pop
insl
sub
pop
pop
stc
fs
sbb
int
into
push
and
imul
imul
and
das
fdivl
adc
cld
pop
rorb
mov
mov
adc
imul
sub
lret
daa
cmovns
mov
lret
rolb
jl
insb
dec
xlat
test
out
popf
mov
subb
jo
add
dec
insb
mov
push
out
mov
shlb
mov
aas
nop
mov
jb
ficomps
imul
dec
inc
iret
fisubs
cmp
sub
popa
push
jae
jle
adc
sub
gs
add
or
cltd
sti
pop
xchg
outsb
mov
push
pop
and
movsl
dec
xchg
jns
mov
stos
out
sub
add
mov
xchg
ljmp
daa
and
ljmp
jae
fidivs
pop
and
popf
pop
or
mov
cmp
mulps
pop
lods
and
lods
pop
sti
jmp
dec
testb
rcl
or
mov
jae
mov
pop
mov
int3
push
aam
mov
lods
test
adc
add
subb
add
adc
add
insb
pop
fildl
lretw
push
repnz
fiadds
mov
mov
call
lods
das
adc
xchg
mulb
sti
leave
test
insl
mov
xor
test
jne
mov
pusha
imul
movsb
inc
push
push
xor
mov
cmp
and
rol
push
imul
movsl
imul
dec
pop
xor
in
lret
inc
sub
mov
out
test
ja
push
sub
stos
in
cmpsl
and
jno
scas
sbb
push
imul
push
adc
and
xor
loope
and
fnsave
cmc
xchg
dec
sbb
iret
pop
mov
mov
popa
loope
pop
add
inc
sarb
push
gs
pushf
adc
cmc
xchg
xchg
out
adc
or
loop
in
mov
cwtl
fmulp
push
push
or
test
daa
mov
loope
in
pusha
inc
xchg
adc
jl
or
cmp
dec
xchg
mov
pushf
lds
and
andl
mov
mov
inc
repz
or
les
popa
xlat
insb
sahf
dec
inc
fldcw
ret
data16
xchg
sbb
mov
jae
push
test
pop
mov
in
inc
xor
pop
scas
push
jmp
mov
xchg
popa
mov
mov
jns
xchg
push
loope
vcvtps2dq
or
iret
roll
add
dec
mov
outsb
sbb
cld
aam
imul
add
sbb
push
xchg
sarl
shrl
imul
push
mov
inc
shlb
push
mov
mov
pop
add
aaa
or
xor
lret
xchg
addr16
dec
sub
int3
loopne
xor
dec
cmpsb
pop
jno
popa
mov
mov
fmull
cmpsb
call
je
push
cli
out
scas
leave
mov
aam
push
scas
stc
test
rorl
push
xchg
sbb
push
mov
sub
sti
imul
pop
dec
mov
fs
imul
adc
mov
adc
push
ret
out
push
loop
jmp
add
lds
xchg
push
xor
and
jns
call
push
push
xor
lahf
adc
int3
pusha
add
fiaddl
insb
push
pop
add
sbb
movsb
push
stos
xorb
sub
inc
insb
test
cli
aaa
iret
imul
push
aad
push
dec
fs
loop
cld
out
push
jbe
push
fisubl
pop
dec
out
stos
das
mov
sub
mov
xor
nop
sti
imull
out
addr16
in
and
fs
dec
rcrl
mov
rcrl
fdivr
lock
rorb
mov
or
into
scas
dec
arpl
xchg
xchg
adc
and
dec
loopne
in
out
insb
loope
and
and
bound
in
push
shlb
out
sub
imul
mov
xchg
mov
fs
bound
inc
insl
sbb
lods
mov
inc
ret
nop
jns
in
std
mov
ljmp
popf
push
push
dec
arpl
mov
imul
rol
mov
lret
sbb
call
int
popa
sub
mov
inc
out
hlt
pop
adc
mov
add
push
pop
jl
inc
and
jne
test
lcall
test
repz
push
ljmp
dec
bound
int
inc
iret
jne
push
imul
add
jle
cmp
inc
jmp
popf
push
repz
push
dec
push
stos
incl
sub
outsl
sbb
jg
test
lds
das
popf
push
mov
sub
testl
mov
std
pop
dec
imul
sub
mov
gs
mov
loope
mov
jbe
and
mov
cmpsl
cld
test
testl
pop
std
xchg
gs
lret
pop
xchg
inc
mov
test
xchg
je
scas
leave
test
rorl
jne
lcall
sub
loopne
les
dec
mov
or
pop
idivl
lock
mov
lahf
lods
jp
push
jecxz
stos
faddl
inc
jle
imul
ret
outsl
pop
xchg
or
xor
jnp
pop
jl
xchg
xlat
or
pop
pop
or
pop
mov
enter
hlt
inc
mov
jmp
mov
jae
xchg
pop
mov
sbb
inc
scas
mull
sub
imul
xchg
and
movsl
test
clc
rolb
lahf
lods
repz
aaa
negb
out
pushf
pop
xchg
mov
call
xchg
mov
jecxz
add
xchg
out
dec
mov
stos
sub
fcmovb
cmp
clc
cmpsl
xchg
inc
push
cmp
into
cs
mov
out
xchg
cmpsb
stos
adc
push
mulb
int3
dec
dec
push
loopne
push
sahf
dec
push
lret
pop
sbb
push
adc
enter
jmp
jmp
movsb
xorl
dec
adc
pushf
pop
push
frstor
dec
add
pop
xchg
push
in
leave
roll
jmp
addr16
test
imul
ja
rcrb
push
push
mov
test
push
cli
mov
in
daa
dec
mov
js
and
outsl
push
cld
lods
addb
add
scas
sbb
or
out
aaa
xor
inc
jbe
leave
xor
cli
das
or
push
cli
adc
rcr
cmp
gs
cltd
mov
cs
sub
mov
mov
ljmp
push
push
cld
test
adc
push
lret
ss
pop
mov
push
jbe
xchg
dec
cli
shl
jae
mov
mov
inc
insl
xchg
mov
dec
lret
mov
ja
xchg
push
jnp
in
pop
and
pop
and
pushf
shlb
sbb
lret
inc
arpl
and
pop
adc
test
pop
and
mov
sub
aad
flds
and
outsb
pop
movsb
cmp
or
lcall
pop
lods
pop
lcall
xchg
int
pop
xchg
out
in
cmpsl
mov
ja
jb
add
add
aas
pop
mov
lods
cmp
pop
int
inc
push
nop
leave
dec
jl
movsl
and
lcall
shlb
and
push
scas
sahf
xlat
insl
in
cmp
dec
sub
sbb
loop
push
mov
test
fistpl
pop
mov
test
push
pusha
sub
push
dec
fnsave
mov
leave
jnp
inc
or
mov
fdiv
sti
xchg
sbb
repz
shll
imul
ss
jle
popa
sub
lock
xchg
imul
add
pop
aam
jo
test
mov
sbb
push
subb
lods
dec
inc
movsl
sbb
out
push
shlb
jle
jbe
sbb
pop
mov
pop
xor
mov
cmp
sbb
xchg
pop
push
jmp
add
push
je
aam
fidivrl
mov
xchg
sub
adc
xchg
out
out
mov
xchg
jns
push
dec
xchg
cmpsb
push
mov
add
pop
pop
dec
jo
cs
xchg
ja
push
adc
jg
faddp
ror
push
add
rolb
movsb
xchg
dec
cmp
jmp
cld
fsts
inc
cmp
sub
jne
cmp
push
xlat
mov
lea
push
ficomps
jge
imul
imul
mov
adc
addr16
out
lcall
lret
repz
ja
sub
adc
push
and
xchg
popa
and
xchg
mov
add
jo
add
dec
lods
mov
imul
or
add
jbe
jp
inc
sub
aad
and
int3
dec
jb
roll
stos
add
dec
inc
adc
lock
imul
scas
cli
cmpsl
popf
and
mov
decl
stos
mov
or
adc
outsb
int
xchg
pusha
dec
jl
mov
and
xchg
into
sbb
adc
jle
pop
arpl
push
xchg
and
jne
shll
xor
pop
push
sub
repnz
push
jo
sbb
mov
or
mov
adc
int3
dec
repz
lods
frstor
pop
jnp
or
push
out
jl
js
hlt
pop
arpl
cli
js
nop
repz
out
push
test
call
jbe
pop
cmp
fbld
into
cmpsb
arpl
inc
sti
call
sahf
fnsetpm(287
mov
addl
dec
in
mov
lret
and
in
adcb
mov
jns
pop
stc
pop
add
xchg
lahf
adc
pop
rcr
imul
cmp
cwtl
cld
pop
sar
out
insb
push
push
jb
out
xchg
sub
call
jle
pop
pop
jl
cmpsl
dec
sarb
push
insl
cmpsl
nop
and
inc
loope
das
adc
sti
mov
push
sbb
pcmpgtw
fldenv
call
ja
fimuls
dec
mov
fsubrs
fmuls
leave
mov
sub
push
hlt
enter
fwait
pop
adc
popf
jp
subb
sub
pop
dec
push
mov
dec
xlat
lcall
pushf
addr16
bound
xlat
mov
mov
leave
addr16
nop
sub
xor
push
push
ficompl
jg
scas
push
out
lret
imul
push
dec
mov
pop
xchg
lcall
outsl
xorl
xchg
pop
outsl
cmp
ds
mov
pop
aam
mov
leave
fidivrs
dec
out
push
imul
xchg
icebp
leave
outsl
add
mov
fnsetpm(287
cmc
gs
int3
xchg
sub
push
and
and
cltd
movsl
rcl
mov
cmp
out
popf
mov
dec
imul
loop
and
js
int
mov
cmc
test
out
mov
inc
movsl
mov
lret
sbb
jle
xlat
push
out
sbb
in
lret
imul
mov
xchg
faddp
xor
cmp
mov
and
roll
rcl
sub
cmp
movsb
jge
mov
daa
lahf
into
lcall
sub
dec
in
sub
jecxz
xchg
pop
or
int3
cld
jbe
mov
shl
mov
sbb
push
arpl
jle
test
jp
clc
shl
push
mov
lretw
xor
lods
sbb
out
mov
adcl
ja
stos
xor
lock
idivb
inc
mov
push
ret
cmp
cmpsl
or
pop
aam
push
sti
dec
sbb
inc
insb
dec
aam
fiaddl
fists
pop
jnp
jl
pushw
lahf
inc
inc
fs
sbbb
xor
sub
add
test
and
mov
and
add
xor
divb
loope
test
arpl
hlt
scas
stos
outsl
mov
stos
sub
xor
insb
pop
imul
fcoml
cld
jo
loop
notl
shrl
xchg
mov
inc
push
dec
add
imul
cli
sub
dec
out
movsl
cmc
pop
mov
out
push
loopne
xchg
cmp
js
cmp
adc
add
pop
aam
aam
stos
cmp
dec
ljmp
or
lods
ficoml
add
inc
loopne
test
sub
mov
dec
jmp
insb
rol
push
pusha
cmp
cmpsl
push
mov
and
call
push
das
fadds
inc
add
add
xor
lock
stos
bound
adc
adc
xor
sub
xchg
sub
in
div
sub
jmp
roll
push
addr16
imul
ret
add
adc
and
pop
pop
push
adc
out
add
pop
push
jle
dec
lds
jmp
call
push
sbb
shlb
scas
dec
add
adc
test
mov
popf
jbe
cld
push
test
cmpsb
rcll
imul
repnz
into
in
inc
sub
gs
enter
sub
in
movsl
imul
movsb
aas
xchg
test
jnp
loop
stc
fnsave
pop
add
adc
sbb
or
dec
les
mov
imul
in
dec
fisubrl
push
loop
pop
push
push
xchg
mov
jbe
push
icebp
movsl
jmp
stos
shr
and
push
lret
lods
sbb
push
sub
repz
mov
inc
rorl
inc
sbb
int3
add
clc
bound
popf
in
and
adc
adc
lods
mov
icebp
dec
psubusb
jnp
das
cmp
ljmp
cmp
outsb
pop
xor
ss
lcall
fdiv
bound
cld
jp
call
std
pop
imul
fisttps
sub
stos
dec
fsubrl
decb
xlat
jne
call
flds
iret
aad
loopne
ljmp
pop
jp
fmull
jle
sub
popa
jo
loope
dec
or
push
lock
push
lock
mov
fcomp
adc
stos
in
sbb
lods
or
loop
add
aas
mov
mov
mov
push
neg
fcmovu
test
push
xchg
lret
sbbb
inc
loope
insl
push
and
imul
ret
lret
push
test
scas
pop
ficoms
pop
adc
add
xchg
rclb
loop
dec
in
mov
jb
imul
sbb
fwait
sbb
movsl
pop
sbb
sub
roll
jo
sub
inc
shrl
sub
mov
in
lcall
mov
iret
mov
ds
cltd
data16
sbb
fisubs
add
or
push
stc
andb
adc
jae
sub
imull
mov
mov
mov
xor
jle
hlt
call
sti
xlat
rcr
mov
ds
das
xchg
or
js
fcmovnbe
pop
jge
pop
adc
lock
bound
ljmp
ja
int
jmp
jae
test
pushf
out
mov
push
and
or
inc
jo
add
iret
lods
jae
sarb
and
mov
out
mov
mov
xchg
fldt
imul
aaa
in
inc
fs
add
and
dec
out
or
mov
js
jmp
jmp
pusha
popa
fld
inc
or
xor
insb
lret
pop
scas
lcall
and
jle
idivl
mov
cld
add
push
in
inc
mov
jge
cmp
cmpsl
pop
out
sbb
push
sub
insb
jb
sbb
dec
sbb
xchg
popa
xor
rclb
std
mov
pop
pop
fisubl
cmp
add
xor
js
int
inc
addr16
lahf
lods
packssdw
es
dec
mov
nop
sahf
sub
cmp
dec
movsb
daa
mov
js
xchg
or
add
in
or
jo
std
repnz
mov
pop
imul
jp
adc
les
aaa
ds
mov
mov
int
popa
mov
sbb
jecxz
xchg
adc
xorb
into
aam
dec
push
dec
jmp
popa
and
mov
arpl
mov
xchg
in
adcb
out
pop
out
and
xchg
push
jns
xchg
leave
push
in
fbstp
shll
jo
add
and
stos
stos
and
mov
push
xchg
xchg
mov
mov
push
inc
add
out
mov
adc
jae
jp
jle
sbb
add
sbb
test
loop
andl
push
and
and
cwtl
pop
aas
test
stos
cmp
shrb
jmp
xchg
mov
pop
xor
sbb
pop
insb
je
scas
aad
sbb
in
shrl
in
pop
icebp
imul
movsl
aam
push
cwtl
sub
push
mov
pop
out
push
mov
bnd
jbe
mov
dec
push
scas
mov
pop
shrb
out
push
xchg
imul
das
dec
data16
and
pop
cmp
mov
push
rcrl
jl
scas
push
pop
syscall
cmp
xchg
pop
shll
dec
incb
pushl
into
jl
lcall
sbb
adc
jo
out
jmp
inc
out
out
push
mov
out
add
inc
imul
stc
and
out
mov
jno
lock
sbb
ret
fwait
pop
sub
and
push
pop
and
jno
mov
shl
dec
push
fidivrl
int3
cld
divb
cld
fwait
aam
push
sub
fs
loop
ret
push
dec
add
lret
sub
or
scas
xor
std
ja
xchg
push
out
in
rep
dec
lods
pop
popl
popa
mov
add
adc
inc
mov
adc
mov
lea
out
jnp
pop
aam
sub
into
dec
sbb
dec
add
lret
mul
pop
sub
push
adc
sbb
mov
out
mov
sub
jmp
jno
cli
icebp
out
inc
sub
lock
out
push
push
adc
mov
sahf
and
loop
jb
cmc
cli
mov
cld
pop
push
insl
mov
pop
out
cmpsl
test
out
je
loop
popa
cli
ret
nop
lods
mov
mov
imul
lock
fs
adc
fnstcw
fsubs
enterw
inc
rolb
out
mov
cmp
rolb
fs
lahf
js
and
mov
pop
call
push
mov
pop
test
loopne
aam
psubusw
mov
push
add
lret
call
in
mov
aaa
stos
add
fiaddl
mov
sub
push
faddl
push
push
outsb
aam
sbb
add
pushf
sbb
jg
daa
aam
ja
fnsave
into
pop
out
cmp
sbb
insb
push
mov
sub
sub
in
mov
mov
aad
mov
mov
test
fsts
dec
in
andl
sub
mov
adc
call
in
and
aaa
out
dec
ret
dec
mov
or
lds
out
pop
push
cmp
adc
popf
mov
imul
xor
sbb
xor
loop
ss
cmp
jmp
pop
mov
push
add
sub
lock
push
sub
dec
inc
pop
jae
or
aas
mov
xchg
jnp
and
addr16
cmp
pop
mov
data16
shll
jl
and
hlt
ljmp
mov
jbe
adc
add
cmpsb
aaa
xchg
push
stc
hlt
mov
dec
cmpsl
inc
shrl
shll
sarl
pop
and
lcall
js
jmp
repnz
inc
movl
mov
int
push
or
iret
popf
loopne
push
daa
mov
cmpb
push
iret
les
movsl
gs
sahf
fldt
pop
stos
cmp
movsl
decl
vpopcntd
cmpsl
cmpsb
jl
andl
mov
or
test
add
mov
push
add
sbb
and
jo
stos
lods
cmc
xor
and
out
dec
pusha
sbb
or
mov
cmc
mov
mov
add
xor
xchg
adc
add
lock
loopne
rorb
sub
add
negb
loop
pusha
outsl
or
insb
fs
lret
push
iretw
mov
movsb
stos
mov
pop
out
mov
iret
popl
jge
jns
stos
inc
gs
dec
imul
das
insl
mov
std
push
imul
imul
jns
dec
mov
xchg
pop
jp
xchg
clc
in
fsubrs
bound
cli
push
cmpsl
add
insb
jge
push
std
lock
mov
sub
mov
and
jb
mov
dec
push
mov
jmp
mov
test
jns
push
add
ljmp
or
call
cwtl
lcall
inc
adc
out
rcrl
sahf
ss
mov
jb
fistl
pusha
aam
push
xlat
cmpsb
lods
xchg
adc
pop
rorl
xchg
inc
pop
push
dec
enter
add
xlat
scas
je
inc
in
and
push
fsubl
popa
pop
xor
sub
mov
and
push
shrb
movsl
shl
and
pop
rcrb
pop
push
das
in
mov
add
sub
fcmovnu
imul
loopew
dec
call
das
or
add
jmp
adc
jae
filds
mov
and
cmpsb
mov
adc
andl
xor
out
and
testl
pop
fldt
sbb
call
cmp
call
and
push
cmp
shlb
inc
sti
in
insl
xchg
ror
pop
inc
gs
and
imul
cmpsb
scas
xchg
jno
aam
inc
mov
jo
data16
push
in
dec
mov
jo
addr16
fs
sahf
lea
shrl
pop
aas
mov
jecxz
stc
cli
addr16
insb
mov
cmpsl
popa
xchg
sbbl
inc
cmp
jnp
pop
popa
pop
push
push
dec
or
bnd
inc
push
sbb
mov
test
sub
lret
xchg
and
dec
xchg
dec
sub
rcrl
add
jns
shlb
call
imul
imulb
inc
and
aam
and
rclb
lea
push
xor
xchg
push
push
push
sahf
xchg
inc
ljmp
pop
imul
in
call
or
aaa
and
call
xchg
cmp
xor
xchg
out
fnstenv
movsb
pop
cmp
faddl
cmc
inc
xor
dec
jle
xor
loope
push
adc
mov
pop
inc
dec
loopne
popf
rclb
iret
subps
lds
or
xchg
pop
adc
cmpsl
push
inc
sahf
lret
call
ja
sahf
inc
fwait
imul
adcl
fnstenv
dec
sti
and
inc
sbb
add
xchg
in
scas
or
xor
pop
shll
sbb
out
push
adc
sahf
ficompl
push
xor
mov
push
and
or
mov
pop
mov
push
push
inc
mov
jae
adc
into
dec
push
adc
decb
scas
dec
jge
mov
loope
je
dec
fwait
scas
loop
popa
push
cltd
sbb
fwait
add
ljmp
push
data16
cmp
pop
aaa
mov
inc
std
mov
add
mov
mov
sbb
in
ret
jo
cwtl
push
testl
mov
loop
in
sarb
add
repnz
nop
fisubs
inc
das
sbb
arpl
xchg
shlb
xchg
push
sbb
inc
int
pop
mov
mov
push
xor
mov
loope
jns
addr16
fs
call
and
mov
adc
insl
mov
enter
out
out
jmp
js
mov
fdivs
movsb
xchg
jb
lds
rolb
scas
aaa
bound
das
mov
pop
pop
cmp
shll
imul
bound
jl
outsb
push
xchg
mov
inc
test
and
xor
sbb
repnz
movsl
in
mov
imul
jl
adc
pop
xchg
adc
dec
pop
sbb
das
pop
jb
rcll
xchg
leave
push
nop
xor
adc
cmc
lret
aam
xchg
adc
push
jge
loope
push
loope
xor
in
adc
fcomps
push
movsl
repnz
push
loope
ds
enter
call
in
popa
daa
rclb
pop
mov
out
push
dec
in
call
in
sub
pop
es
jb
dec
int
mov
dec
shld
xor
jno
or
test
lret
sar
adc
fs
das
frstor
hlt
push
push
dec
cmp
fidivrl
sub
jnp
inc
mov
jl
push
dec
pop
add
push
mov
xchg
or
loope
enter
adc
sub
dec
sbbl
adc
out
popf
pop
bound
or
mov
cli
xor
mov
xlat
inc
and
leave
adc
mov
pop
gs
pop
or
push
aad
mov
pop
sub
shl
dec
or
add
pop
mov
cwtl
divb
add
push
imul
divl
dec
pop
loope
cmp
movsl
mov
mov
push
push
or
and
gs
popf
int
dec
pop
pusha
loope
push
mov
sub
jmp
add
adc
ljmp
mov
ja
jmp
and
jmp
dec
ret
repz
in
into
test
imul
stos
outsl
out
push
push
pop
in
mov
es
or
pop
xchg
mov
xor
mov
arpl
mov
add
jbe
in
add
mov
test
insl
pushl
push
push
inc
shrl
dec
pop
pop
jle
fldl
mov
popf
idivb
in
add
std
pusha
mov
sub
sub
cmp
fisubrl
imul
cmp
inc
in
insl
xchg
and
outsb
lds
loope
pop
inc
clc
sti
xor
adc
mov
pop
xchg
call
and
lcall
sbb
loop
push
xor
mov
mov
inc
insl
dec
mov
and
sbb
out
in
notl
ja
in
dec
stos
dec
ljmp
pop
push
stc
push
xlat
inc
adc
insb
push
dec
pop
dec
push
inc
hlt
movb
nop
enter
add
xchg
xchg
jne
xchg
or
aam
xchg
push
mov
dec
fldl
iret
jge
popf
mov
out
xorl
sub
rolb
imul
mov
inc
inc
or
cli
cmp
fnsave
movsl
sub
and
mov
inc
movsl
pusha
outsb
xchg
sbb
xchg
lcall
cmpb
pop
dec
test
sbb
lahf
push
and
scas
push
xor
sbb
or
lahf
call
mov
dec
scas
jns
jne
fdivr
insb
mov
pop
inc
inc
in
sbb
icebp
cmp
push
imul
pop
stc
ret
sahf
pop
cmp
inc
jle
mov
aam
pushf
mov
out
jns
xchg
push
and
lea
loopne
add
popa
daa
shlb
fbld
shlb
adc
in
lahf
jne
xchg
sub
and
mov
mov
ljmp
mov
or
ficoms
xchg
call
int3
mov
pop
inc
lret
rcrl
mov
lcall
mov
in
dec
fcmovbe
adc
cmpsl
pop
jecxz
mov
sbb
stos
cli
roll
xchg
push
xchg
adc
js
push
cmpb
imul
xor
and
push
fwait
loopne
out
inc
scas
dec
js
xchg
xor
pop
or
lahf
xor
andl
ret
ja
push
jle
int
out
mov
out
cmc
push
dec
scas
and
pop
pusha
cltd
negl
push
mov
lret
roll
das
pop
mov
pop
sbb
pop
adc
jb
mov
cld
sti
lahf
jl
pop
pop
and
call
push
shl
inc
sti
inc
or
pop
push
js
call
int3
fdivl
sub
lahf
add
aad
mov
movsl
sbb
sbb
cli
inc
pop
pop
repz
pop
and
testb
pop
js
call
mov
add
pop
push
jno
dec
movsl
js
pop
inc
in
adc
ret
sub
es
push
mov
insl
sub
xor
gs
sti
ret
xor
out
add
mov
fidivrs
and
fnstcw
mov
lods
push
fcoml
push
push
push
stos
daa
arpl
mov
xchg
inc
in
adc
stos
lds
mov
inc
sti
pop
push
sarb
mov
and
cmpsl
and
xchg
xchg
popa
fs
fstpl
pop
xor
mov
mov
sbb
inc
pushf
sbb
lret
cmp
ret
divl
sbb
dec
jge
pop
jns
mov
lock
pop
pop
adc
jne
clc
gs
dec
jge
ret
loop
call
imul
imul
cmc
lods
xchg
fstpl
cltd
loope
mov
and
inc
fs
addr16
adc
mov
test
jbe
addr16
shl
xchg
jge
nop
imul
inc
cmpsb
popf
cmp
in
movsb
fcomps
push
out
push
xor
mov
adc
inc
into
icebp
mov
fstpt
xchg
leave
fwait
mov
adc
mov
in
jbe
pop
xchg
lret
out
push
push
movsl
inc
bound
scas
movsl
icebp
jb
mov
sbb
test
push
jg
and
rcr
aam
and
xor
fdivs
adc
fnstenv
lea
out
incb
jo
popa
mov
mulb
xor
sub
lock
push
subl
dec
add
cli
jmp
jae
jne
mov
mov
fs
pop
stos
mov
ret
add
movsl
push
cmp
add
jg
lret
enter
dec
add
pop
ss
jnp
stos
cmpsb
sub
mov
fadds
mov
dec
jmp
push
sub
div
gs
loop
es
adc
jno
xor
xlat
in
cmp
jmp
push
insl
xor
mov
les
jge
rolb
add
aad
popa
aad
push
add
lcall
ljmp
in
fwait
mov
adc
xchg
call
or
and
xor
cmp
push
or
jmp
in
pop
data16
and
insb
and
gs
loop
stos
xor
adc
out
in
jnp
rcrb
xchg
xor
pushf
cmp
stos
sub
cmpb
clc
sub
sbb
push
or
sub
push
xor
test
lds
cmp
sub
fucomp
insb
add
adc
gs
xchg
dec
loope
ljmp
push
addr16
sbb
popa
test
adc
jmp
das
in
sbb
push
mov
push
jg
call
out
jne
or
and
mov
test
out
test
and
das
dec
cmpsl
loopne
cmp
or
mov
pop
pop
addr16
ds
add
insl
xor
ljmp
sub
lods
xorl
dec
jnp
xor
cltd
sub
cli
in
bound
add
repnz
test
pop
negl
in
mov
sbb
mov
outsb
xchg
in
ss
shr
adc
aaa
hlt
fisubrl
pop
gs
lods
mov
inc
scas
shr
cmpsb
mov
xlat
push
hlt
xchg
mov
outsl
inc
pop
inc
jge
lret
sub
cmp
jmp
sbb
in
cmp
ret
daa
aad
das
in
out
jge
lods
sub
xchg
and
adc
outsl
gs
lock
aad
sub
imul
xor
and
imul
pop
sbb
and
mov
push
mov
sti
mov
push
push
pop
aam
faddl
push
or
cli
xor
rcll
scas
insb
sahf
xchg
js
fildl
mov
pop
or
out
mov
aas
ret
adc
push
loopne
pop
addr16
cs
insl
add
testl
jge
andb
mov
lret
int3
jnp
pushf
inc
pop
xchg
es
aas
test
sub
mov
xor
xlat
push
adc
cmpsl
enter
gs
xchg
into
inc
movsl
sahf
je
dec
ja
fldcw
adc
jae
pushf
mov
adc
adc
inc
adc
outsl
fs
das
dec
pop
add
int3
sub
or
lds
push
push
mov
cld
dec
insb
imul
cs
pop
sub
shll
or
xor
pop
jge
jne
mov
mov
pop
cltd
push
sti
adc
shlb
cvtdq2ps
in
jmp
fsubl
dec
in
je
lahf
pusha
adc
add
push
adc
mov
jno
xchg
mov
sub
in
std
fcmovnb
clc
hlt
fwait
imul
dec
adc
and
push
rclb
cwtl
xor
jns
fidivs
xor
stos
push
cmp
in
inc
sub
lock
cltd
lock
rolb
in
or
cmc
lea
movsb
mov
dec
jnp
xchg
movsl
pop
jb
imul
fs
dec
mov
adc
push
test
pop
icebp
xor
mov
jp
xchg
dec
mov
inc
mov
daa
jnp
sbb
fsubrl
push
leave
out
jl
loop
cmp
push
mov
adc
mov
jno
jnp
ficoms
test
and
sub
out
xchg
xchg
enter
xchg
shld
and
cli
jo
mov
test
ja
ja
push
ret
out
jl
xor
in
pop
out
mov
loope
call
jg
clc
jmp
lods
push
pop
cmp
fdivrl
mov
xor
mov
out
insb
adc
mov
cs
addr16
andb
xor
shrl
daa
inc
scas
mov
jnp
imul
dec
and
sub
xor
out
imul
ja
xchg
int3
nop
fst
jb
pminsw
lea
rcrl
xchg
fs
push
mov
sub
add
pusha
mov
mov
sti
push
loope
outsl
cmp
out
stos
and
mov
inc
pop
sub
push
sub
mov
test
push
inc
in
and
xor
stos
inc
loope
xor
push
mov
cs
ljmp
imul
ss
xchg
bound
fsub
out
xor
aaa
and
cmp
js
mov
push
push
das
add
and
pop
push
cmpb
fcom
mov
pop
imul
iret
xchg
xorb
inc
in
sub
xor
mov
jbe
out
push
dec
icebp
and
mov
jbe
imul
out
lcall
pop
jae
cmp
sub
in
rcr
xchg
lcall
add
arpl
xchg
xor
mov
cmpsl
orl
inc
push
mov
xor
jbe
dec
outsb
push
lea
gs
jb
jp
add
sbb
mov
imul
js
es
push
push
lock
and
pop
les
push
out
loope
sahf
je
mov
or
imul
mov
xor
mov
fsubr
cmpsb
out
call
jo
je
leave
imul
sub
js
in
sbb
imul
cltd
ret
mov
mov
movsl
icebp
pop
sub
fwait
and
out
push
nop
movsl
push
pop
inc
pop
int
cli
add
lcall
pop
fcoml
inc
lret
sti
iret
lcall
je
lahf
in
shlb
dec
adc
jp
xchg
imul
mov
enter
dec
out
pop
fnstsw
xor
mov
mov
fwait
test
fnsave
mov
sub
push
rcrb
xchg
pop
fstp
fs
ja
hlt
gs
imul
ret
mov
dec
mov
mov
inc
and
sbb
mov
iret
adc
lods
leave
pop
mov
scas
xor
jae
mov
rol
dec
orb
jnp
mov
push
dec
movb
rcl
jo
lahf
jg
enter
out
pushfw
pushf
pop
dec
xor
pop
sub
ljmp
and
cwtl
pop
xchg
inc
jg
inc
pop
jbe
sbb
sbb
xor
sbb
dec
in
hlt
mov
popa
jmp
cmp
dec
daa
mov
sbb
push
jg
and
cmpsl
stc
cmp
insl
push
sbb
push
pop
imul
mov
pop
xchg
sub
dec
std
and
add
and
push
pop
stos
es
movsb
sahf
jmp
in
lods
mov
dec
inc
imul
push
roll
xor
push
push
fadd
fwait
mov
jo
adc
inc
mov
add
sarl
mov
sbb
cltd
add
cvtps2pi
inc
imulb
lods
test
xchg
mov
mov
fdivrp
mov
push
add
clc
daa
pop
testl
popa
pop
pop
mov
es
mov
pop
jns
push
mov
mov
mov
push
pop
les
cmp
ret
lods
mov
and
pop
mov
xchg
jb
fs
inc
add
aam
fwait
into
sbb
dec
cwtl
in
cmpsb
add
leave
dec
out
lret
mov
or
mov
fisubl
iret
add
mov
addr16
sbb
fidivrl
pop
push
dec
fwait
push
dec
out
adc
push
ret
outsl
pop
mov
cli
xor
pop
ja
adc
dec
add
fcmovne
fdiv
cwtl
in
sub
cmpsb
jecxz
xor
out
push
xchg
imul
enter
xlat
sahf
push
mov
and
out
and
push
jmp
sub
test
fdivl
or
jo
push
std
adc
sbb
dec
bound
repz
inc
out
inc
xor
rol
mov
scas
rol
xchg
stc
and
push
xor
outsl
test
mov
mov
std
testb
sbb
mov
pop
mov
imul
mov
jo
pop
mov
add
jns
sarb
pop
popa
out
mov
pop
lret
dec
movsl
mov
xor
inc
addr16
ja
dec
addr16
or
js
sbb
shlb
clc
ret
xchg
out
jl
adc
cs
shll
das
test
addr16
xlat
mov
pusha
dec
out
js
adcb
int
out
pop
imull
out
fbld
loop
daa
mov
cltd
and
xchg
sbb
xorb
popf
pushf
adc
aad
pop
out
cld
cmc
sub
xor
loopne
sub
pop
jmp
movsl
sbb
dec
pop
out
mov
shl
out
js
repz
pop
dec
mov
fsubrl
loop
aad
in
js
out
jg
cld
lods
inc
lahf
sahf
push
pop
sbb
out
ljmp
cmp
sti
mov
sbb
je
sub
xor
sub
jae
adc
add
mov
dec
lods
leave
outsl
gs
movsl
aad
aam
arpl
and
rorb
rol
shr
imul
mov
jl
jge
arpl
dec
mov
pop
sbb
imul
cmc
sub
push
push
lods
stos
jl
fcomps
gs
mov
repz
mov
or
sub
loop
std
and
nop
outsl
es
pop
sahf
out
dec
call
in
scas
push
mov
sub
mov
loop
mov
addr16
jecxz
lods
in
js
out
jno
jmp
sahf
push
sbb
push
add
shll
add
in
rolb
lcall
add
orl
cwtl
push
mov
stos
inc
lock
sbb
movsl
out
loop
test
jne
out
into
shrb
lea
jns
lds
ja
xchg
gs
out
es
mov
xlat
sbb
lods
shlb
inc
sub
mov
sub
insl
nop
xorb
out
xchg
add
loopne
imul
or
idiv
push
cmp
inc
mov
gs
mov
push
aam
inc
dec
jecxz
sahf
inc
out
loop
cltd
stc
popf
xor
out
js
sub
imulb
sbb
in
pop
sub
lock
mov
jne
lea
rcr
repz
inc
mov
adc
and
stc
sarb
dec
fisubrs
test
scas
jmp
lahf
pop
adc
out
add
cmp
mov
sub
mov
xchg
pop
cmp
test
shl
cmc
cmpsl
push
mov
push
mov
iret
enter
ds
xchg
push
fnstcw
or
and
aam
xor
cmp
add
inc
rcll
lock
sahf
fcmovb
and
adc
jo
ret
mov
jmp
cmp
int3
add
jne
xor
push
out
pop
bound
stos
pop
mov
out
mov
sbb
adc
lods
and
out
cmp
sbb
aam
insl
out
outsl
loope
ds
sbb
faddl
sub
cmpsb
adc
and
dec
jnp
adc
dec
arpl
add
ljmp
out
out
notb
inc
xor
push
hlt
cld
sar
in
jne
out
and
roll
adc
dec
out
insb
lret
add
adc
xchg
out
test
mov
jle
and
add
leave
or
es
dec
adc
sub
inc
negb
pop
and
out
js
sub
add
inc
jo
out
push
sbb
xchg
mov
mov
call
mov
pop
stos
lahf
pushf
fsubrl
movq
xor
mov
xchg
daa
mov
ljmp
mov
out
clc
jp
jne
orb
aaa
push
jnp
push
and
insb
mov
lahf
and
mov
pushf
loop
ja
out
mov
test
popa
pop
out
out
mov
jge
or
jb
aas
movd
lock
mov
fadds
cmpsl
sub
jne
sbb
sub
xchg
dec
inc
xor
fcomps
mov
in
jnp
sbb
scas
sub
or
pop
mov
out
sbb
jg
xor
jmp
or
std
add
jecxz
loop
mov
lret
adc
in
sti
lock
xchg
and
js
arpl
mov
les
mov
and
out
inc
ret
mov
popa
push
sbb
xchg
imul
not
xchg
sar
out
adc
out
bound
movsl
adc
mov
aam
out
daa
pusha
mov
out
sub
rcrl
jne
pop
hlt
xor
out
imul
out
push
adc
fnsave
hlt
sub
cmp
stos
ficoml
insb
jmp
cmp
leave
sbb
in
push
cmc
fadds
jp
out
dec
dec
xor
out
stos
xor
aam
jg
fimull
rorb
inc
test
xor
sti
fldl
out
xchg
negb
out
sub
scas
aam
inc
lret
mov
cmpsl
lcall
movsb
jge
call
inc
loopne
or
mov
movsb
sbb
jmp
push
int
loopne
and
nop
cmp
insb
xor
sbb
lcall
pop
std
jmp
out
and
dec
cmc
jnp
repz
out
mov
push
out
and
xor
or
sahf
lods
dec
add
imul
jno
jp
data16
xchg
nop
pop
cmp
dec
dec
adc
or
call
mov
jl
xchg
or
out
jne
cmpl
pop
gs
jge
and
dec
testl
or
cmp
in
adc
daa
dec
insb
xchg
out
cmp
std
popf
push
mov
pusha
scas
cmc
push
int3
js
loop
out
jne
lahf
enter
or
pop
fwait
add
jbe
mov
jecxz
mov
std
xchg
xchg
movsb
bound
push
xor
dec
inc
dec
gs
xchg
inc
imul
add
mov
imul
cltd
jg
shlb
mov
ja
repnz
gs
fdivrs
out
jmp
scas
clc
repz
mov
in
pop
sbb
std
out
out
mov
in
jl
push
fdivl
xor
and
aaa
imul
data16
ret
push
sar
in
les
dec
jnp
mov
out
cmpsb
nop
ror
addb
rorb
and
xchg
clc
loop
dec
xlat
mov
insb
push
mov
inc
inc
or
xchg
push
stos
out
adc
ja
lcall
xor
cld
loop
mov
loope
dec
out
fdivrs
mov
lahf
arpl
xchg
faddl
jo
gs
mov
iret
adc
add
lock
jle
mov
inc
inc
dec
xchg
aaa
into
stc
mov
aam
and
cmc
push
adc
loope
out
dec
push
or
stos
xor
jb
sahf
or
xchg
mov
pop
jle
in
dec
and
xor
lret
iret
mov
xchg
out
stc
adc
call
outsb
xor
pop
gs
mov
xchg
lock
pusha
mov
shrb
xchg
test
and
call
gs
faddp
xor
fwait
sahf
ss
das
cwtl
mov
sbb
dec
adc
and
jge
stc
in
out
and
dec
jnp
xor
out
addl
out
lret
dec
adc
pop
or
lcall
call
pop
insl
add
jge
bound
out
cmc
cli
out
ss
enter
and
xor
aaa
jb
and
adc
aad
rcrl
mov
mov
hlt
lock
imul
aad
inc
sub
orb
jb
dec
imul
jne
add
fucom
dec
pop
pop
adc
pusha
dec
dec
mov
imul
push
popf
and
ja
or
jmp
jle
aad
add
in
xor
movsl
xor
adc
jmp
fwait
stos
mov
or
cs
je
sahf
iret
into
jo
imul
out
fiaddl
leave
add
inc
daa
sarb
xor
pop
add
mov
outsb
test
jge
pop
jno
lret
and
add
adc
xor
mov
shll
shl
dec
fmuls
mov
add
out
adc
or
icebp
daa
mov
adc
mov
dec
and
fwait
xchg
out
subl
in
out
jb
ss
mov
and
fbstp
loop
sbbl
addr16
jecxz
and
mov
push
stos
ret
popa
out
xor
mov
out
dec
in
loop
jno
pop
ret
imul
fnsave
dec
jge
or
imul
sbb
fcoml
mov
ja
adc
push
imul
subb
out
or
xor
aad
push
cmp
mov
adc
dec
out
or
and
xchg
cmp
pop
shr
loop
adc
ss
fs
inc
inc
jmp
mov
stc
sbb
ljmp
loop
dec
inc
add
cwtl
push
lret
cmp
repz
inc
or
jnp
into
cmp
xchg
adc
out
sbb
outsb
pushf
cld
out
test
pop
adc
lret
cmpsb
out
mov
sub
sbb
loopne
shrb
pop
mov
out
pushf
clc
mov
dec
pop
sbb
ror
aaa
hlt
out
xor
inc
or
sbb
loopne
xchg
ljmp
sub
jne
xchg
xchg
outsl
ss
dec
sbb
mov
cmpsl
and
dec
call
push
test
jo
cmc
pusha
popa
fwait
mov
notb
mov
es
in
popf
shl
inc
push
add
shll
inc
cmp
inc
aas
aam
or
mov
out
cmc
adc
in
sub
jae
fwait
jg
es
imul
dec
in
adc
fsubs
add
out
sbb
adc
inc
dec
insb
cmc
je
aaa
add
fsubp
les
inc
dec
out
xchg
pop
dec
dec
in
or
dec
enter
and
push
fstpt
or
jge
xchg
inc
dec
lret
gs
adc
cld
lret
js
movsl
out
pop
jns
and
lcall
std
mov
mov
sar
movsb
gs
sbb
rcll
mov
xchg
add
stos
inc
adc
icebp
shr
xchg
dec
and
shr
es
cmc
or
outsb
insl
out
pop
in
push
out
jmp
jge
data16
out
mov
jle
insl
mov
mov
mov
dec
test
xchg
test
cmp
jo
push
loop
sub
xchg
push
dec
mov
cmpsb
lods
inc
cmp
add
cmp
imul
sbbb
push
stc
out
push
ss
push
and
and
arpl
gs
out
call
test
rcll
test
ljmp
test
or
jne
out
loop
xor
into
test
aam
pop
out
addr16
xlat
sub
xor
push
out
imul
out
mov
hlt
push
xchg
mov
ret
sbb
in
loope
loop
out
xlat
inc
out
cmpsb
adc
add
sbb
out
adc
mov
sub
shll
test
xchg
mov
fnstcw
insb
mov
out
adc
cmpsb
jb
mov
loopne
ljmp
xor
in
insb
bound
sub
push
mov
aam
xchg
out
push
xlat
iret
add
mov
mov
jp
push
sub
jnp
adc
push
gs
ja
loop
and
sub
mov
je
jo
or
xor
sub
stos
enter
aam
adc
insb
ret
popa
mov
mov
gs
mov
sbb
xchg
in
lock
and
orb
sub
mov
fdivs
outsb
xor
xor
jmp
jne
imull
jle
orb
in
inc
test
cltd
into
fsubrl
rolb
xor
xor
jb
repnz
dec
out
mov
lahf
add
xor
mov
sub
add
es
adc
into
and
inc
push
bound
mov
movsl
aam
daa
insl
xchg
xlat
dec
dec
pop
test
xor
addb
test
add
push
mov
aaa
sub
loop
mov
addr16
je
sub
roll
xor
outsb
and
mov
or
mov
sub
add
gs
pop
sbb
sub
add
adc
sub
lds
test
jmp
in
inc
xor
dec
push
jb
pop
cmp
out
inc
jo
imul
sub
arpl
mov
jmp
and
ljmp
mov
adc
add
or
in
fisubl
sbb
in
mov
imul
fstpl
fnstenv
insb
cld
xorb
inc
mov
scas
ljmp
sbb
xrelease
out
bound
pop
loope
xchg
adc
jmp
add
repnz
inc
leave
loopne
ret
add
mov
cltd
out
rcll
adc
and
in
adcl
sub
xchg
outsl
mov
call
xchg
jo
add
xor
xor
mov
sbb
stos
rcll
int
lret
add
sarb
lock
sub
stos
call
out
jbe
inc
dec
sub
and
fiadds
mov
and
jb
cmpsl
bound
mov
push
in
scas
jno
aam
ret
pop
sub
inc
shl
inc
addr16
ficoms
inc
dec
repz
popa
jle
dec
ret
and
adc
jne
sub
roll
sbb
mov
rcl
ljmp
push
push
test
sub
add
mov
mov
push
inc
push
add
sar
rol
bts
mov
sbb
mov
test
xadd
jmp
neg
call
movl
call
sbb
add
sarb
gs
push
or
adc
cmpsb
cmp
or
and
cmp
add
xchg
push
sub
and
loop
dec
loopne
fldcw
jle
fdivrs
pop
addr16
add
popw
pop
mov
mov
sahf
mov
mov
sub
jecxz
movsb
icebp
mov
sub
shrl
jae
insl
sti
repz
les
imul
insb
pop
dec
and
xor
jmp
scas
cmpsb
lcall
enter
pop
shll
pop
addr16
xchg
xchg
int3
test
les
sub
addb
push
xchg
mov
sahf
mov
push
mov
or
xor
inc
jnp
mov
push
mov
jae
pop
jae
cmp
mov
mov
adc
leave
fcomip
mov
fbstp
lret
sub
cmp
adc
push
lret
push
add
mov
subb
hlt
addl
cmp
mov
add
jns
sarb
xchg
dec
mov
jns
xchg
lcall
inc
fstpt
mov
add
test
cmpsl
adc
xchg
jmp
pop
and
mov
ds
and
and
add
insl
stos
addb
int3
push
add
xchg
stos
jle
lock
fnsave
cli
dec
fcomps
in
dec
insb
add
or
xor
lahf
out
inc
pop
adc
push
loop
pop
in
test
xor
shl
mov
andl
pop
movsl
out
outsl
jmp
fnstenv
pop
dec
bound
pop
pop
ret
cs
lock
cmp
and
call
push
and
pusha
mov
jmp
adc
cmp
imulb
sarb
mov
mov
xor
fwait
arpl
lahf
jmp
cld
xchg
in
pop
lahf
movl
mov
jge
out
add
jb
dec
inc
lahf
clc
scas
clc
rcrb
lock
push
xlat
fwait
dec
repz
fldt
nop
rorb
push
fldl
xchg
push
jbe
sbb
add
sbb
imul
pop
ror
leave
les
or
sub
mov
mov
and
push
lea
ja
shr
neg
sub
btc
add
and
and
mov
or
neg
mov
jmp
jmp
push
leave
rclb
addr16
repz
cli
fmull
push
sub
icebp
mov
jbe
dec
arpl
rorl
hlt
lods
out
or
dec
into
adc
loop
mov
lea
in
mov
cmc
fnsave
imul
adc
lock
add
ret
bound
or
jns
leave
lods
jns
sbb
fstp
push
aad
mov
das
int3
loope
leave
and
dec
add
mov
add
jecxz
push
ror
dec
dec
fs
or
mov
rorl
call
stos
pop
sub
addr16
or
push
ja
in
pop
shrb
fistpll
fisubrs
dec
outsb
es
adc
cmp
daa
mov
xor
and
js
adc
and
mov
sub
xor
and
adc
pop
pop
sahf
mov
int
shrl
mov
sub
fstpl
pop
inc
lret
lds
gs
scas
shll
aas
lock
sub
and
daa
push
aas
imul
mov
in
add
xchg
xchg
mov
or
pop
dec
dec
mov
xchg
adc
jp
ret
lahf
cli
mov
dec
adc
outsl
push
push
and
dec
sbb
jno
or
cmp
jecxz
cmp
sub
imul
rorl
aaa
xchg
inc
adc
dec
stos
imul
mov
pushf
push
add
loop
dec
inc
push
mov
jno
loope
xchg
cld
dec
cltd
push
pop
lds
rcrl
fsubrl
pop
scas
jno
fmull
incl
fstpt
mov
adc
xlat
popa
clc
pop
into
mov
sbb
push
pop
dec
jecxz
decb
imul
int3
sahf
jo
xor
movsl
stc
jnp
xor
fxch
mov
ss
or
xchg
shlb
jne
stc
into
aam
xchg
out
jg
inc
push
add
dec
in
call
sub
and
imul
out
xchg
std
pop
inc
jl
pop
cli
dec
pop
incb
lea
cs
sub
cltd
fs
rcl
movsb
mov
loope
repnz
mov
aaa
lret
mov
jno
adc
xchg
lea
pop
push
dec
xchg
sti
ljmp
outsb
jmp
dec
stc
cmp
cwtl
bswap
movsbw
movsbw
lea
push
movzbw
bswap
setg
mov
mov
lea
ja
pusha
pushl
mov
jmp
movb
movb
movl
mov
lea
jmp
push
jmp
imul
push
pop
addr16
push
rorl
push
jmp
sarb
push
add
pusha
insl
fsubrl
dec
add
jp
imul
add
call
lcall
idivl
jno
rorb
mov
push
shlb
mov
push
dec
cli
test
cmpsl
pop
mov
cmp
xor
mov
xor
cld
lds
add
cmpl
add
jne
jmp
pop
ficoml
jae
fwait
mov
sub
inc
movzbw
not
mov
pusha
jmp
push
mov
pushf
lea
jmp
pusha
lea
jb
test
pushf
stc
movw
cmp
jmp
stc
cmc
xor
jl
pushf
bt
bt
or
jmp
jbe
clc
push
pop
lods
bound
mov
scas
sub
outsl
shrb
movd
jl
and
jbe
je
adc
inc
jle
hlt
int
cs
pusha
jp
and
xchg
and
ret
pushf
mov
cmp
pop
push
inc
push
enter
insb
scas
jae
or
push
push
ficompl
movsb
gs
cld
fbld
lds
push
dec
mov
loopne
jl
inc
ret
dec
and
and
xor
xor
nop
loop
mov
enter
fidivs
lret
cwtl
push
xor
ljmp
push
inc
mov
or
pop
pop
scas
mov
push
cs
ds
subl
xchg
push
outsb
test
inc
pushl
xchg
fcoml
shlb
sbb
in
lds
or
sbb
daa
fimuls
not
fmull
mov
jnp
dec
push
jnp
mov
in
sub
lret
and
nop
pop
cld
xchg
push
cmp
mov
add
popf
inc
and
xchg
cmp
das
mov
sub
aam
inc
or
xchg
bnd
aad
ret
cmc
dec
dec
shlb
add
push
hlt
movsl
jbe
cmp
lds
pop
dec
sbb
loopne
and
pop
lods
js
push
xchg
fwait
mov
sub
inc
lods
pop
jno
add
mov
scas
lods
fs
shlb
dec
movsb
mov
cmp
hlt
mull
adc
rorl
xor
push
bnd
fcmovbe
lret
add
add
push
pop
addr16
push
xchg
jne
in
loop
dec
and
mov
mov
ret
outsb
lock
and
push
mov
in
int
mov
test
or
rorl
adc
xor
imul
mov
xchg
aaa
xchg
push
mov
sbb
rorb
add
add
xor
add
cmp
sub
test
movl
not
clc
call
sarb
imull
dec
xchg
iret
pop
in
movsb
addl
lret
and
cmp
xor
punpckldq
sbb
inc
sub
mov
mov
or
jns
test
adc
jb
ja
pop
addr16
out
sub
ficoml
mov
ljmp
pop
sub
ljmp
fisubrs
xchg
sti
loop,pn
push
xchg
adc
mov
xor
xor
testb
ljmp
pushf
mov
ja
push
adc
xor
dec
sbb
std
mov
es
adc
shlb
xor
and
xor
xor
push
dec
xchg
in
jmp
mov
sub
sbb
inc
pushf
pop
cltd
mov
fs
int3
aad
pop
addr16
push
mov
jmp
push
xchg
mov
frstor
lock
int
jecxz
repnz
sub
aam
js
frstor
or
cmp
cmp
fs
in
faddl
js
mov
push
fcmove
mov
shl
and
pop
push
mov
dec
mov
sbb
popa
ret
push
out
jne
mov
hlt
rclb
icebp
jbe
dec
aad
inc
pop
pop
pop
adcl
push
ret
loopne
mov
test
push
ret
cmp
jmp
aad
xor
push
xchg
mov
outsl
test
leave
fnstsw
outsb
sub
and
repnz
dec
dec
xlat
inc
popa
test
push
test
ja
dec
inc
shl
mov
inc
inc
mov
out
mov
sub
js
adc
xchg
int3
stos
insl
xchg
sub
rorb
lock
fstpt
andl
aad
jg
pop
popl
out
pmaxub
mov
adc
stos
and
pop
xchg
imul
mov
lahf
pop
add
das
fwait
xlat
push
and
shlb
xchg
invd
jle
mov
mov
add
call
lods
lock
rorl
sbbl
add
fadd
push
lret
cmpsb
add
and
test
lods
sbb
push
mov
jae
insb
add
test
jecxz
add
and
add
adc
cmp
sub
jge
movsl
xchg
cltd
sub
fldt
or
mov
aas
fistl
adc
testb
mov
xchg
leave
dec
inc
aad
mov
outsl
out
fiadds
stc
out
test
mov
mov
in
and
shll
mov
fbstp
push
fcoml
out
insb
subb
add
std
dec
ljmp
dec
mov
xor
and
push
nop
daa
inc
cwtl
pushf
sub
sbb
adc
out
add
fwait
adc
jae
cmp
xchg
lock
xchg
and
inc
and
lahf
cs
ficoms
dec
out
gs
int3
dec
pop
addr16
lds
xor
inc
add
call
jmp
int
es
mov
mov
pop
shlb
and
aas
push
loop
cmp
dec
cmp
cmpl
dec
aaa
je
and
mov
jmp
xchg
pushf
mov
mov
pushf
pushf
inc
call
mov
lea
je
jns
pushf
mov
adc
pusha
lea
jmp
clc
test
push
neg
pusha
call
inc
ljmp
add
add
mov
pop
pop
lret
inc
pop
mov
add
dec
jge
jne
jecxz
fmuls
das
repz
adc
pop
les
ss
xchg
and
sub
mov
daa
stc
es
sbb
fidivrl
cmp
fcompl
aad
dec
ret
test
bound
mov
mov
call
pushf
lea
ja
call
ds
dec
pop
addr16
dec
xorb
sub
repz
pop
mov
jmp
nop
orb
or
sbb
and
mov
inc
pop
push
jecxz
hlt
push
push
into
xor
popf
pop
sbbl
inc
or
cld
test
sti
int
js
out
in
push
mov
xor
cmovns
addr16
cmpsb
pop
adc
or
call
xchg
jbe
fcoms
sbb
add
popf
jg
cld
fldenv
daa
ficoms
sbb
repz
rcr
scas
push
rcll
mov
out
clc
mov
jle
jmp
popf
push
cli
fwait
sub
mov
mov
dec
pop
xchg
loopne
add
ret
jecxz
ficoml
lret
push
enter
and
or
into
popf
pop
jle
adc
loop
aaa
sub
xor
scas
or
push
andb
sar
or
enter
add
mov
addr16
inc
add
outsl
inc
cmp
hlt
sbb
arpl
aam
lahf
mov
out
cmp
and
cmpsl
fimull
dec
or
sub
push
and
jne
stos
add
out
xchg
out
mul
sbb
movsb
xchg
cs
sub
mov
adc
into
cmpsl
xchg
int3
xor
punpckhwd
dec
add
fsubrs
out
xor
lds
adc
test
sbb
xor
fs
jne
push
jmp
rorb
pop
fildl
xor
mov
mov
icebp
sbb
shrl
and
sbb
push
leave
mov
les
addl
lock
mov
iret
mov
xlat
and
and
dec
sbb
jp,pn
insl
push
rorb
mov
mov
pop
lds
leave
mov
adc
sbb
mull
cmp
mov
mov
mov
mov
inc
sbb
mov
mov
xchg
or
jnp
cmp
pop
sbb
add
aad
add
sub
incl
in
add
add
decl
test
mov
decl
xchg
ret
mov
cmc
call
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
or
add
cmc
bt
add
mov
mov
lea
jmp
pushf
lea
call
pusha
cmp
pusha
pushf
lea
jae
bt
call
call
xor
pushl
stc
cmp
neg
stc
stc
cmc
jmp
add
add
push
add
pusha
push
add
add
add
add
enter
add
add
add
add
push
push
jmp
jmp
mov
lea
pop
pushf
push
push
movb
pushl
ret
call
or
ret
jge
cmc
rclb
mov
test
sbb
outsb
adc
push
sbb
lods
in
dec
xchg
push
mov
out
xlat
dec
rcll
pusha
dec
sbb
aad
mov
fldz
fistpl
shll
repnz
sahf
inc
adc
adcl
ds
pop
gs
pop
ret
js
out
aaa
mov
mov
insl
jae
add
sbb
fisttps
sub
dec
push
or
cmpl
loop
xor
mov
ja
and
divb
fs
into
mov
dec
inc
pusha
mov
cmc
rorb
pushf
mov
jmp
dec
jno
dec
pop
addr16
fistl
or
repnz
leave
and
mov
into
pop
or
and
scas
mov
cli
adc
addr16
imul
and
or
in
ds
js
push
dec
les
and
je
xchg
fldcw
push
dec
pop
addr16
cmpb
mov
ss
pop
fstpt
lret
xor
mov
test
jbe
or
jmp
bound
dec
cmp
rorb
subl
out
fstps
int3
adc
push
jp
jnp
out
aaa
dec
pop
cmc
push
add
or
jmp
dec
lahf
lods
arpl
out
icebp
mov
cmpsl
popa
mov
inc
mov
ret
or
push
popa
into
andb
lea
fistps
xchg
dec
mov
xchg
mov
sub
jns
roll
repz
mov
pop
mov
sbb
jp
fisttps
add
mov
mov
fs
jmp
call
push
push
pushf
pushf
pushf
lea
jmp
icebp
jmp
sbb
popf
pop
ljmp
dec
push
fadds
xor
mov
movsl
fstl
dec
sahf
clc
hlt
push
sbb
inc
addb
popa
sbb
cwtl
push
inc
dec
mov
xor
xchg
fisubs
adc
mov
out
jmp
dec
arpl
sahf
pop
add
and
jae
mov
xchg
add
sub
inc
sbb
adc
loopne
add
adc
xchg
and
sub
test
cld
stc
adc
pop
pop
mov
sbb
imul
divl
or
xchg
mov
inc
loop
loop
jmp
jnp
es
addl
mov
push
push
call
jmp
test
pop
adc
sub
es
lret
or
jp
jl
push
xchg
inc
inc
aas
ret
cmp
adc
push
and
mov
dec
inc
mov
mov
dec
movsl
xchg
mov
orps
mov
inc
pop
mov
out
fcoml
mov
cmp
icebp
cmpsl
stc
push
push
int3
scas
and
push
xchg
iret
or
jns
pop
xchg
and
pcmpgtd
cwtl
or
sub
lods
bound
insb
stos
mov
stc
fiadds
test
xchg
stc
ficoms
dec
lret
enter
pop
aaa
popa
inc
mov
loopne
or
sbb
jmp
push
jmp
mov
cmc
shl
pusha
push
lea
je
pushf
pushf
call
neg
dec
pcmpgtd
mov
clc
pushl
pushf
movw
lea
jbe
bswap
bsr
push
sub
shrd
rcr
dec
movzbw
mov
lea
xadd
mov
test
movsbw
add
or
add
clc
shr
adc
shl
xor
rcr
mov
bswap
movzbw
add
call
push
movl
jmp
mov
idivb
clc
sub
and
cwtl
mov
adc
sbb
push
call
lds
jbe
or
stos
arpl
in
test
dec
es
or
mov
inc
push
inc
stc
cwtl
push
xor
xor
jns
cwtl
shll
hlt
imul
es
scas
es
lahf
rcll
nop
dec
cmpsl
mov
test
outsb
out
pop
hlt
push
jge
rorb
or
rol
and
lea
je
cmp
sub
pusha
pushf
stc
cmp
pusha
call
jmp
cmp
cmp
jmp
pop
add
mov
cmpsb
bound
imul
xor
xor
enter
jg
mov
test
mov
in
cmpsl
cmc
cltd
or
lret
sub
lds
push
dec
lds
and
aaa
je
in
das
and
mov
test
pushf
call
call
lea
call
jmp
in
addr16
pop
frstor
ficoms
movsl
fcoml
pop
lahf
sbb
loopne
push
xchg
ja
loopne
movsl
push
mov
mov
into
in
mov
ret
iret
mov
cli
dec
xchg
pop
fcoml
js
jmp
mov
in
inc
push
ss
hlt
push
into
inc
adc
addr16
adc
shr
fs
pushf
pop
bound
sbb
aaa
mov
sahf
outsb
cmp
pop
xchg
vrcpps
push
jno
loopne
sbb
jle
adc
adc
pop
aam
pop
or
imul
push
push
dec
mov
lret
shrl
jge
xor
pop
arpl
pusha
fwait
aad
inc
stc
sub
out
mov
adc
pop
cmpsb
jb
insl
test
jae
icebp
test
sahf
ja
pop
cmp
test
push
insl
popf
mov
xchg
add
adc
mov
mov
xor
ret
xchg
push
cmp
pop
add
movl
out
mov
adc
jmp
mov
adcb
pop
and
iret
pop
xor
lahf
int
pushf
xchg
add
imulb
inc
inc
mov
sbb
jo
lahf
jne
int
xchg
rorb
xor
mov
mov
pop
pushf
movsbw
mov
seta
pop
bswap
push
mov
pushf
mov
pushf
pushf
mov
jmp
not
mov
not
mov
pushf
pushl
push
pusha
lea
jmp
mov
jmp
mov
mov
dec
add
mov
mov
call
push
scas
inc
lahf
scas
and
or
sti
xor
mov
xchg
dec
jp
sub
xchg
pop
mov
lock
pop
sub
js
push
xchg
mov
shrb
xor
push
clc
dec
cmpsb
inc
pop
mull
cwtl
dec
add
add
mov
sbb
mov
test
cs
nop
cmp
out
and
push
scas
adc
and
in
into
ret
lods
stos
test
pop
pop
mov
or
movsl
and
push
dec
xor
inc
dec
dec
add
add
mov
push
push
nop
lret
mov
adc
xor
pop
mov
mov
int
push
sbb
test
or
adc
mov
fwait
pushf
cmp
mov
adc
pushf
lds
test
adc
clc
sbb
imul
popf
push
cs
pushl
cmp
clc
es
stos
mov
jno
xchg
jae
call
ret
cmp
cmpsl
sahf
mov
push
add
into
movl
movl
lea
jmp
stc
clc
test
call
pop
xchg
inc
pop
addr16
sub
sbb
mov
sarb
sub
cmp
jp
mov
push
mov
stos
in
ficomps
cmp
ficoml
sub
pop
hlt
in
out
dec
ljmp
jmp
and
stc
jl
jle
aaa
insb
mov
cmp
push
mov
sbb
adc
dec
add
mov
jle
xchg
loope
dec
dec
rolb
inc
or
pop
mov
push
lret
aam
pop
addr16
mov
mov
pop
inc
rep
jg
das
push
decl
jbe
lret
popf
and
cmovg
pop
in
shlb
push
and
pop
pop
imul
ljmp
stc
inc
xlat
xchg
jmp
mov
pusha
jecxz
cmp
mov
cmpsb
mov
push
sbb
xchg
cli
call
mov
arpl
cmpb
data16
dec
inc
aaa
jge
repz
aam
sbbl
mov
xor
pushl
sub
jae
test
cmp
neg
push
jmp
sub
fisttpll
sbb
adc
pop
mov
and
adc
add
into
and
lods
or
in
adc
or
pusha
and
xchg
aam
lea
orl
lcall
push
cmp
pop
push
lds
stos
movsl
mov
aam
mov
cmc
inc
out
sub
pop
addr16
xchg
scas
pop
arpl
icebp
rcrb
and
imul
xor
fwait
data16
cmp
stos
and
icebp
mov
push
sbb
inc
xchg
jp
mov
sbb
pop
jl
movsl
and
insb
insl
outsb
sub
xor
fcmovnb
xchg
inc
push
inc
or
dec
sub
das
je
mov
paddusb
in
dec
das
je
insl
cmp
add
bnd
arpl
into
xchg
out
dec
int
xchg
sbb
shl
fsubs
xor
mov
pusha
inc
call
xchg
inc
jl
pop
addr16
outsl
and
or
sti
mov
fistl
xor
lods
cld
dec
cwtl
dec
rcrb
in
fsubl
fcoml
xchg
add
or
aam
ret
sbb
insl
sub
mov
jnp
dec
add
outsl
mov
mov
aam
int
adc
push
ss
cli
push
dec
lods
stos
rorb
pop
addr16
jge
jmp
jg
cmpb
repz
std
gs
test
xlat
fucomip
or
inc
xchg
in
pusha
sbb
es
mov
xchg
cmp
lds
inc
jmp
repz
or
xor
pop
inc
add
or
push
cld
into
stos
movsl
scas
fwait
inc
mov
ljmp
js
or
in
mov
jo
insb
pushf
add
push
jns
inc
out
stos
add
and
fisttps
cmp
sub
adc
push
imul
iret
test
dec
leave
aas
mov
jo
adc
inc
mov
push
xchg
jmp
dec
inc
not
push
not
mov
pushf
pushl
lea
call
call
repz
and
lea
aas
jbe
ljmp
push
jle
stos
or
jae
int
nop
sbb
pop
pop
ficomps
mov
and
andl
lret
scas
aaa
or
or
sbb
and
imul
cmpsl
inc
push
cmp
int3
and
and
jae
setns
call
pop
repnz
add
sub
add
add
add
jl
add
sbb
add
cmp
add
dec
sbb
xor
push
push
push
pushl
movl
pushf
pushf
lea
jmp
pop
std
push
cmp
jp
cmc
stos
fists
jl
movsb
jb
adc
jle
push
std
cmp
in
sub
fmuls
mov
stos
mov
gs
and
and
add
ror
shll
pop
adc
ss
out
stos
xchg
addr16
popa
jo
mov
test
mov
lock
xor
cmp
xchg
dec
ret
mov
cmovle
mov
push
call
setne
lods
shr
pushf
neg
cmp
ror
add
ja
not
xor
rcl
neg
push
sbb
cmp
clc
add
inc
not
cmp
xor
lea
jle
ror
jmp
lods
and
fwait
loopne
push
mov
or
pop
outsl
hlt
xor
mov
xchg
sahf
aam
or
ret
xchg
dec
xchg
sbb
mov
fdiv
add
cli
mov
jb
inc
push
sub
fadd
pcmpgtw
sbb
adc
outsl
test
aas
adc
iret
int
rep
jns
cmp
pushf
pop
iret
push
pop
lret
mov
fisubl
into
imul
rcrl
jecxz
xchg
lods
push
push
sub
or
pop
aad
sbb
pop
cltd
or
pop
les
fcoml
inc
jns
push
lods
mov
movd
or
jbe
xor
cmpb
bound
dec
pop
adc
mov
xor
jnp
sbb
stos
stos
mov
aam
lods
ret
fidivrs
int
xchg
fs
mov
outsl
test
loope
jb
jno
insl
adc
mov
mov
pop
push
add
cmc
dec
sub
xor
add
insl
aas
repz
xor
rcr
cli
and
mov
and
xchg
sub
push
rcrl
sbb
sti
cmp
cmpsb
cmpsl
pop
adc
repz
or
lock
aas
repz
pop
jne
data16
cli
jmp
imul
shl
mov
xor
or
or
subb
xor
add
mov
and
xor
push
iret
hlt
and
mov
xor
outsl
iret
jnp
lods
push
addr16
leave
add
pop
js
fistps
adc
xchg
mov
iret
push
fbld
jle
repz
in
fcomps
jns
push
jecxz
or
lds
pop
addr16
lods
ljmp
sbbb
xchg
mov
pop
push
xchg
nop
fucomi
or
jnp
add
jb
iret
stos
sub
and
aaa
cltd
mov
repz
pushf
dec
mov
and
cmp
push
push
pop
sbb
xor
mov
nop
lea
add
jne
inc
and
das
mov
sbb
rcrb
push
fsubs
push
fisubs
jmp
add
aad
pop
addr16
std
mov
and
pop
push
dec
out
rcrl
fsubs
xor
mov
push
nop
int
and
dec
xchg
adc
sbb
mov
or
fstpt
shrl
repz
pop
sbb
jns
div
arpl
dec
fcomip
scas
scas
mov
outsl
mov
mov
fidivl
jb
xor
cltd
js
bnd
mov
jle
mov
pop
pop
pop
iret
inc
cmp
xchg
pop
mov
sub
je
mov
addr16
mov
movsb
fcoml
mov
add
xlat
or
adc
adc
sub
imul
push
cmp
rclb
fsubrl
test
cmpb
pop
iret
lds
out
je
and
xchg
mov
lods
xor
cmp
movb
pushf
repnz
push
pushf
jmp
push
movl
push
pusha
push
lea
jmp
pusha
pushl
call
mov
stc
neg
bt
cmc
not
cmc
add
test
clc
call
lea
call
push
pusha
pusha
movb
adc
mov
lea
jae
jmp
push
mov
lea
pushf
movl
pop
lea
push
pushf
pushf
movl
call
jmp
lods
push
cmp
pop
or
add
jecxz
push
lea
fildll
mov
dec
ss
not
push
js
mov
gs
or
imul
sub
inc
hlt
mov
lods
sub
mov
push
aaa
je
add
cmpsb
push
int3
aad
pop
addr16
xchg
pop
adc
sub
sub
loope
call
dec
in
jl
cmp
xchg
test
xchg
movsl
mull
divb
imul
mov
pop
inc
xlat
pop
cmc
mov
jl
imul
divb
int3
addr16
lret
jle
push
orl
sti
pop
jp
imulb
push
or
into
fidivl
push
add
sub
jno
aad
cmp
mov
mov
lds
pop
mov
dec
pop
cmp
xor
das
ds
hlt
pop
out
inc
and
sarb
xchg
jg
xor
sub
xor
pop
repz
pop
stc
fsubs
cli
ss
push
iret
sbb
repz
icebp
jne
fwait
lret
jp
mov
in
iret
inc
sti
loope
std
xor
pop
jecxz
adc
shll
cli
inc
test
movsb
cmp
rclb
setle
popf
jae
mov
aas
cmp
sbb
sbb
jnp
stc
insl
adcl
pop
fdivrs
inc
imul
aas
or
xchg
bound
test
or
add
jle
pop
jg
aad
adc
fidivl
dec
xchg
or
daa
cmc
mov
add
loop
aad
ret
mov
push
jns
xchg
mov
pushf
pusha
call
call
rol
push
pushf
dec
movw
xor
stc
jmp
pushf
pushf
movl
movb
lea
jmp
jmp
push
lock
std
std
test
fwait
ret
jne
and
ror
sub
mov
pop
xor
xor
nop
mov
mov
inc
push
and
aam
pop
ret
in
adc
test
add
add
test
push
sub
push
push
mov
mov
shlb
jmp
sbb
stos
bsr
or
pushf
mov
pusha
and
call
mov
jae
pop
addr16
out
pop
xchg
int
rcrb
adc
mov
inc
jg
mov
fwait
loop
xchg
jg
sbb
cwtl
dec
jg
push
add
inc
jmp
pop
adc
cmp
dec
repz
mov
adc
les
movsb
test
in
inc
add
or
rorb
mov
pop
xchg
fidivs
imul
mov
scas
inc
shll
insl
mov
loope
cmp
adc
jmp
mov
pop
clc
data16
rcrl
es
sub
shlb
loop
bound
inc
xchg
dec
xchg
push
mov
cltd
and
lock
out
push
in
and
mov
mov
lret
xor
xchg
xor
roll
outsb
aas
imul
aas
pop
mov
add
gs
testl
or
jle
cmc
cmc
inc
popf
arpl
pop
int
sbb
not
mov
add
js
push
call
or
pusha
lea
je
not
mov
call
lea
jne
movsbw
ror
not
movzbw
mov
bsr
push
cmp
push
sub
cmc
bsf
shl
shl
lea
cmp
cmp
sub
pushl
pushl
popl
cmc
call
repnz
mov
push
pushf
jmp
aam
xor
insb
sub
lahf
pop
or
test
ret
cmp
sub
stos
jns
test
xor
add
divl
imul
and
jmp
adc
clc
xor
mov
pop
jl
out
sub
lcall
gs
or
pop
sub
jno
mov
xchg
movsl
jae
mov
imul
mov
faddl
adcl
mov
sahf
xchg
or
cmpsl
dec
aaa
je
dec
movsl
mov
add
fs
jb
bt
cmc
cmp
pusha
pusha
lea
jae
or
mov
bswap
rcr
mov
mov
pusha
pusha
setbe
shld
mov
stc
sub
call
lea
jbe
push
jmp
push
mov
movzbw
movb
cwtl
movl
jmp
lea
jae
push
stc
xor
call
stos
adc
pop
addr16
cli
xor
pop
pop
push
and
stos
adc
xlat
pop
shl
mov
shlb
xor
xor
scas
stc
push
push
mov
fdiv
ficompl
or
pushf
jle
arpl
push
dec
mov
das
jge
shl
pop
sub
dec
shlb
mov
aas
adc
jl
cmp
mov
xor
xor
out
pushf
push
or
mov
test
imul
shl
loope
lods
shlb
mov
sub
sahf
fcomps
jne
lret
inc
push
mov
fisttpl
and
jp
push
xor
mov
lret
mov
sub
rorl
sub
jg
or
add
cltd
jne
dec
ffreep
or
test
cmp
mov
cmp
dec
sub
loope
adc
push
call
sub
fimull
clc
cmp
js
cmp
pop
jecxz
int3
jo
dec
jne
inc
aam
mov
sub
mov
ja
in
in
push
cld
test
push
push
pop
adc
stc
mov
and
adc
ds
push
fcmovne
or
call
test
push
jnp
mov
and
mov
imul
jae
or
mov
xor
xor
in
dec
inc
ret
push
imul
add
push
aas
pop
lea
pop
pusha
pushl
ret
call
pop
repnz
add
sub
add
add
add
jl
add
sbb
add
cmp
add
dec
sbb
xor
push
add
add
add
sbb
pop
addr16
jge
imulb
pusha
adc
mov
gs
lret
lret
jns
adc
pop
hlt
jmp
insb
cmp
rorl
mov
divl
adc
stc
inc
xchg
lock
dec
call
sbb
out
cltd
pop
pop
punpckhwd
or
das
aam
nop
mov
ljmp
dec
mov
pushf
jle
pop
mov
sub
pop
inc
sbb
dec
dec
add
fimull
aas
aaa
lods
mov
jp
mov
in
int3
dec
cmp
orl
jmp
mov
push
lea
call
call
pushf
lea
jne
pushf
movsbw
movb
setl
pushf
movsbw
jmp
xchg
cmp
pop
addr16
adc
mov
shl
adc
xchg
mov
es
mov
add
xor
lods
bound
dec
xchg
sub
enter
pop
das
loop
xchg
mov
lcall
jbe
ffreep
icebp
fistl
lret
fisubrs
lock
cmp
lods
pop
lods
pmaddwd
add
pop
or
orb
xchg
jg
pop
dec
xchg
mov
divb
pop
xchg
lods
or
mov
scas
mov
and
imul
sbb
mov
cmpsb
fbstp
sbb
jl
cld
xchg
loope
fisubrl
jns
sbb
cmp
lds
mov
cmpl
mov
stos
sahf
jmp
lea
jne
ror
stc
cmc
mov
shr
not
sub
btr
cmc
shl
rol
mov
jmp
setae
movsbw
mov
jmp
or
call
jae
push
das
pop
loopnew
jbe
loopne
mov
mov
leave
aam
in
daa
imulb
mov
pop
xchg
push
test
push
movsb
mov
repnz
and
imul
call
cs
addr16
mov
mov
mov
arpl
pop
subb
cmp
jl
jecxz
push
loope
mov
lea
dec
or
xchg
loope
arpl
cmp
arpl
iret
dec
ret
cmp
mov
jns
je
testb
stc
cmp
pushf
jmp
int
mov
pop
addr16
leave
add
xlat
adc
sbb
lods
cmc
sub
into
mov
or
push
jg
mov
xlat
adc
rorb
or
inc
sbb
dec
and
adc
arpl
and
je
push
call
clc
sub
sbb
pop
inc
xchg
lods
sub
fbld
pop
clc
inc
icebp
gs
scas
and
rorl
pushf
rolb
jecxz
mov
push
sbb
ficomps
fs
mov
iret
fistpl
outsb
addr16
xor
push
int3
xchg
pop
mov
in
pop
jecxz
and
les
push
dec
xchg
fistps
lea
push
adc
and
int3
imul
dec
add
mov
adc
in
imul
std
pop
cmpsb
js
dec
movb
pushf
lea
jne
sbb
pushf
sbb
mov
cmp
push
pusha
cmp
push
pushf
push
pushf
lea
ja
pusha
pusha
bswap
mov
xchg
lea
movzbl
call
pusha
pushl
pushf
mov
pushf
call
xchg
pushf
seto
mov
not
bswap
bswap
bswap
lea
mov
pushf
call
pushl
stos
pushf
lea
jmp
movb
pushf
mov
movzbw
movzbw
pusha
pop
mov
mov
pushf
mov
push
pushl
ret
bsr
push
call
pusha
pushf
lea
jne
jmp
mov
push
pushl
popl
movb
mov
pushf
pushl
ret
movl
jmp
jne
call
shlb
sub
addr16
fcoml
sbb
cmc
sub
mov
dec
scas
in
sub
mov
mov
mov
inc
adc
mov
out
lea
outsb
into
push
aad
dec
lea
scas
jg
cmovge
and
fnstsw
add
xor
and
mov
mov
popa
sub
das
int3
movsl
jne
fs
mov
adc
mov
jl
clc
jae
loop
pop
xchg
or
sar
dec
aas
cs
addr16
cld
cmp
test
pop
rorl
rclb
faddp
ljmp
mov
std
add
and
add
loope
imul
int
js
or
push
aas
adc
mov
iret
movl
cmp
push
cmp
cmp
and
outsb
arpl
xchg
int3
sub
cmp
arpl
xchg
mov
jmp
lods
daa
cld
fistpl
adc
cs
sub
rcll
test
lret
sbb
cmpsl
and
lock
or
sub
fs
pushf
stc
stc
xor
jmp
mov
push
lea
jne
call
jle
arpl
pop
xor
jns
bound
paddsb
cmp
sahf
jo
mov
sarb
fsubrs
loop
push
xchg
outsb
push
cmc
and
loopne,pn
lcall
push
cmp
mov
invd
les
push
jg
pusha
fldt
mov
pop
mov
addr16
sahf
lcall
mov
out
push
adc
or
fsubrl
lahf
ja
fldt
mov
popf
fistps
cmovs
cmp
mov
sbb
xor
push
cmc
and
and
shrl
adc
jg
jae
pusha
mov
cmp
shll
push
insb
ljmp
aas
push
adc
inc
sbb
sub
or
scas
into
add
lcall
sub
jae
dec
cmpsl
invd
push
pusha
fldt
addr16
mov
pop
or
test
insl
out
popf
stos
gs
pushf
iret
and
push
push
pushf
cmp
sbb
dec
and
bound
loopne
addr16
jno
nop
loop
and
imulb
cmpsl
leave
lods
jnp
popf
adc
xchg
or
inc
ja
jbe
xor
mov
pop
insb
ljmp
push
cmp
ja
push
mov
cmp
xchg
adc
adcl
mov
pusha
pushf
pushl
ret
pusha
call
push
lret
sub
cmp
mov
push
or
out
daa
jge
add
cli
cwtl
nop
jle
add
add
mov
dec
sub
decb
adc
in
iret
adc
mov
push
ror
shlb
and
fwait
xchg
mov
and
je
je
jno
mov
mov
fiadds
pushf
pop
pushf
mov
jmp
cmp
sub
jae
icebp
test
xor
xlat
sub
faddp
clc
shlb
jge
jns
add
mov
jns
mov
repz
shrb
imul
sbb
cmp
insb
pop
rol
cmp
sub
addr16
je
jbe
dec
shr
sti
jmp
addr16
ljmp
scas
pop
mov
xor
push
in
inc
lods
scas
and
pop
sbb
or
cmp
loope
push
or
pop
mov
notl
shll
push
add
or
stos
xor
adc
es
sar
xchg
incl
and
add
movsl
and
addl
mov
dec
in
mov
mov
xchg
jg
mov
fs
mov
add
arpl
call
call
imul
mull
pop
sbb
mov
jl
mov
jge
call
shll
jb
jge
in
daa
arpl
imul
lea
add
jo
mov
mov
adcl
shll
sub
push
js
in
sbb
jp
add
int
aas
shr
xlat
data16
andb
pop
mov
mov
or
movsb
int3
mov
sub
inc
fnstsw
xor
clc
pushf
or
repnz
roll
sub
adc
popf
jmp
in
clc
jecxz
movsb
lea
mov
jae
arpl
pop
dec
lds
push
or
int3
add
or
je
call
stos
and
daa
pop
addr16
fstl
lret
add
in
and
clc
in
add
movsb
sti
jge
jne
or
xchg
test
sbb
sub
mov
mov
ja
push
mov
cmp
and
les
jae
mov
dec
insl
sbb
cmp
xchg
popl
add
aam
pop
jo
andl
jns
andl
loop
fdivp
mov
int3
pop
es
fmul
dec
add
fs
sbb
daa
add
clc
jbe
jmp
fsts
rorl
incl
fcmovnbe
sub
jmp
addr16
movl
pusha
lea
jmp
push
push
pushf
movl
call
pusha
lea
ja
setnp
pushf
seta
not
inc
lea
pushf
setge
pusha
setge
inc
lea
shl
rcr
rcr
xchg
bt
ror
btc
mov
xor
push
cmp
mov
lea
pushf
cmc
clc
xchg
or
shld
pushf
mov
cmc
sub
call
pusha
call
movb
pushl
mov
push
pushf
pushl
pushf
lea
jmp
push
leave
shlb
cmp
pop
xchg
jae
jecxz
lods
xchg
icebp
push
ja
out
dec
lods
scas
and
sar
jno
arpl
add
call
xor
test
in
mov
pop
lds
or
subl
out
mov
inc
lea
scas
aad
jae
inc
loope
cmp
or
cmpsb
jle
add
jns
stos
cmp
in
test
out
xlat
popf
arpl
nop
stc
inc
xchg
movsl
inc
jg
and
sbb
test
mov
push
jmp
aaa
pushf
cwtl
mov
add
push
xor
fwait
in
enter
in
sub
inc
mov
div
insl
push
xor
mov
xor
and
cltd
iret
add
push
and
mov
mov
pop
and
shrl
imul
mov
adc
mov
sahf
mov
add
mov
xlat
pop
sbb
lods
ljmp
sbb
inc
jg
jae
rcll
sbb
mov
lret
mov
jg
addr16
pop
xchg
stos
mov
jl
aam
push
bound
sub
dec
je
roll
jl
test
in
jno
jo
enter
aas
xchg
out
cli
pop
push
inc
mov
xor
add
in
mov
dec
cmp
rorl
shl
adc
pop
push
test
mov
insl
xorl
sbb
psraw
mov
out
or
dec
inc
cmp
and
cmp
xlat
shll
adc
adc
pop
cmp
imul
inc
xorb
cmp
sti
jne
sarl
or
dec
fists
scas
lfence
mov
dec
add
dec
lret
inc
cmp
es
fistpll
adc
insb
inc
cmp
add
dec
outsl
popa
fs
imul
add
push
push
pusha
movl
push
push
pushl
movl
push
lea
jmp
call
cmp
pusha
call
push
movl
push
jmp
jmp
pushl
popl
pushf
pushl
ret
pusha
lea
jne
jae
jb
xchg
mov
pusha
movb
inc
pusha
inc
setg
pushf
mov
lea
push
pusha
jmp
lea
jae
bswap
mov
bsf
shrd
shld
mov
neg
btr
mov
cmc
pusha
push
xor
cmp
jmp
mov
mov
xchg
movsbw
pushl
popl
lahf
push
setb
lahf
pusha
movl
bswap
jmp
movzbw
mov
cmp
call
das
movsb
lods
and
jl
adc
jge
jne
fs
pop
mov
fistps
andb
sub
in
add
push
mov
movsl
sub
mov
je
int3
cltd
outsb
test
adc
fcoml
iret
mov
sbbl
mov
es
xchg
popa
mov
jmp
incl
lcall
movl
pushf
pushf
lea
jmp
inc
jno
and
jp
push
mov
cld
mov
and
mov
add
data16
insl
mov
subl
out
mov
out
dec
faddl
cmp
scas
xor
xchg
je
loope
int3
mov
push
xchg
mov
jbe
sub
xor
pop
aaa
mov
divb
and
int
inc
cmp
push
pop
sbb
fwait
jno
pop
xlat
aam
dec
mov
inc
push
or
mov
jns
jecxz
and
mov
dec
jle
repnz
pop
stc
jmp
adc
addl
lods
xchg
stos
cli
and
pusha
mov
xor
and
pop
push
dec
dec
inc
mov
jle
movsl
stc
lret
popf
xchg
arpl
filds
shl
ljmp
adc
je
mov
lret
ljmp
xchg
cmpsl
jae
inc
inc
mov
inc
scas
les
push
add
cwtl
push
outsl
shl
sub
adc
lods
sbb
iret
sub
mov
out
test
roll
or
ret
and
lea
inc
adc
xor
aad
and
mov
je
adc
inc
sub
fisubs
or
hlt
push
xlat
add
push
pop
xchg
cmpsl
lahf
and
xchg
jecxz
insb
inc
cmp
xchg
push
mov
aas
lcall
lahf
bsr
and
pop
stos
or
sub
cwtl
jno
repz
mov
icebp
and
push
sbb
mov
mov
aad
shrl
jp
add
shll
lds
adc
lds
xchg
outsb
imul
push
dec
rcrl
or
xchg
jg
addb
adc
or
mov
jmp
cmpsb
orb
fwait
inc
dec
mov
lea
push
out
or
push
mov
shlb
push
daa
and
negb
mov
sahf
ja
sbb
jnp
jmp
or
cld
orl
bswap
or
add
stc
push
sbb
rcl
insb
xor
mov
pop
lock
sbb
out
iret
pop
loopne
test
add
sahf
loop
sarl
pop
shl
insb
test
scas
std
inc
or
cld
scas
in
sub
adc
fistpll
movsb
or
sbb
sbb
jmp
pop
loop
in
imul
leave
les
sbb
and
fwait
nop
dec
pusha
jmp
pushf
lea
jb
pusha
pusha
mov
pushl
ret
in
xchg
rcrl
pop
test
popa
xchg
iret
add
jp
cmp
adc
and
jb
pop
xor
fisubl
imul
flds
add
imul
roll
ds
dec
and
js
icebp
in
out
push
lahf
cli
dec
aaa
je
daa
jg
flds
or
add
cli
sbb
add
or
add
test
mov
sbb
add
lcall
add
add
addr16
xlat
xchg
leave
cmpl
xchg
cmp
je
lret
mov
xchg
leave
mov
lods
outsl
sub
nop
dec
sbb
and
jo
pushf
mov
or
pop
mov
cwtl
stos
cmc
or
mov
enter
push
das
and
dec
sarb
in
nop
jae
into
frstor
loop
pop
sahf
lods
loopne
inc
sub
js
cmp
push
pop
jle
int3
cwtl
fs
into
inc
inc
mov
and
push
sahf
push
mov
cmpsb
push
movl
push
pushf
lea
jmp
lea
call
push
lea
jae
cmc
cmp
xor
jmp
clc
jmp
jecxz
inc
push
pop
addr16
test
inc
jge
push
pop
inc
push
sub
test
out
fstps
pop
sbb
adc
mov
stc
daa
cmp
pop
sub
mov
xor
int3
enter
out
sbb
mov
inc
inc
fwait
insl
aaa
add
ret
cmp
xchg
push
cmpsb
dec
sub
in
in
gs
pop
mov
out
icebp
and
dec
fadd
pushf
call
push
xchg
addr16
mov
and
adc
add
es
adc
bound
dec
jne
sbb
pop
lea
mov
dec
pop
cmpsb
sbb
fisttps
jno
loopne
dec
mov
mov
jae
loop
icebp
out
pop
mov
add
pushf
pop
cmpsl
je
inc
push
fsubl
les
aas
mov
enter
lahf
movsl
sub
pop
in
sti
lock
sbb
add
lods
jmp
mov
inc
fcmovnb
jmp
cld
sub
mov
int
cmpsb
js
sbb
popa
aas
mov
lcall
add
popa
mov
jecxz
movsl
ljmp
add
jns
in
fimull
out
movsl
pushf
mov
rcll
mov
dec
add
icebp
sub
xchg
adc
lea
xor
add
sbb
fimull
sar
call
sub
addl
stos
and
add
add
pop
and
maxps
jb
movsl
xor
pop
push
adc
mov
pushf
outsb
and
test
pop
and
mulb
jnp
dec
push
cmp
imul
das
inc
movsb
loop
gs
hlt
imul
sub
enter
aas
sbb
and
call
jmp
add
stc
cmp
pushf
push
lea
jb
push
push
cmp
pusha
call
bt
xor
pushf
mov
lea
call
pushf
pusha
call
mov
mov
pushf
pushf
jmp
adc
addr16
cmpl
stc
shrb
icebp
mov
out
dec
mov
hlt
ds
dec
or
scas
gs
push
sub
adc
jecxz
dec
dec
sahf
xchg
mov
call
dec
pop
sbb
add
inc
jl
imul
int3
test
aaa
mov
xor
xchg
imul
in
cmp
mov
pop
pop
push
and
faddl
rclb
aam
lcall
mov
mov
mov
out
mov
fnstcw
je
outsb
mov
mov
ljmp
sbb
rcrl
cmp
cld
aaa
mov
pop
mov
push
sarl
mov
fcom
mov
inc
push
mov
fidivl
sub
fwait
imul
shrb
add
sub
xchg
push
add
gs
push
lret
gs
sub
xchg
adc
cmc
add
pushf
lea
jmp
seto
mov
pushf
not
lea
lea
jl
pushf
movl
push
mov
push
movb
pushl
ret
pop
push
pop
sbb
enter
mov
arpl
lret
je
xchg
outsl
mov
test
idivb
mov
je
lret
push
mov
movd
pop
push
rorl
das
es
xchg
fnstsw
aam
je
lahf
in
scas
dec
lea
jno
pusha
movl
pusha
movw
push
lea
jmp
pop
int
sbb
inc
or
pop
push
addr16
insb
push
mov
pop
dec
es
int3
inc
lret
cmp
imull
inc
cmpl
push
or
sub
repnz
pop
sub
aaa
scas
xchg
or
out
gs
aam
pop
repz
or
add
call
and
in
jae
sub
pop
cwtl
push
mov
rcrl
pop
addr16
pop
sar
xorl
mov
data16
incb
ljmp
or
fcmove
daa
push
pop
cmp
mov
clc
jmp
loope
lea
je
push
pushf
cmp
mov
pushf
lea
je
push
pusha
cmp
pusha
push
jmp
jmp
call
stc
jmp
call
call
call
jmp
movw
dec
bt
clc
pusha
xor
cmc
test
neg
pushl
dec
jmp
call
mov
mov
pop
addr16
adc
sub
lret
shl
arpl
mov
out
xchg
xchg
dec
xorl
movb
pop
fstpl
mov
icebp
jl
xor
push
pop
es
stc
fsubrl
jnp
sarl
cmp
fs
cs
lds
dec
add
and
call
int3
enter
dec
jae
or
xchg
xchg
lock
movl
mov
lea
jmp
lea
je
cmc
add
jmp
pushl
pusha
pushl
ret
pushl
lea
jae
call
push
in
sbb
mov
dec
add
icebp
cmpsl
pop
xchg
lret
sbb
inc
jl
cmp
inc
notb
int3
mov
xor
fisubrl
jl
lcall
push
mov
filds
or
cmp
enter
mov
push
mov
ret
fstpl
fiaddl
stos
jbe
cld
rol
cmp
mov
scas
sub
xor
adcb
sbb
int
pop
addr16
inc
addl
add
jb
and
icebp
add
jb
popf
scas
and
mov
jl
out
rorl
jecxz
icebp
ljmp
cmp
and
lret
xchg
push
out
jno
cmpsb
dec
mov
pop
addr16
xorb
mov
cmpl
fcmovne
xchg
cmp
shrl
jl
aam
out
xor
mov
movsb
and
lock
xor
xchg
cmp
dec
mov
lfs
and
mov
sbb
shrl
in
sbb
scas
xchg
cltd
lods
add
pop
push
call
inc
jp
aam
out
add
xor
mov
xchg
lds
rorb
ret
popf
cmpsl
pop
fdivp
dec
dec
insl
aad
xchg
out
fsubl
pop
loope
lods
inc
xchg
arpl
xor
movsb
in
mov
mov
and
push
sti
lret
pop
inc
xor
test
mov
jecxz
and
push
testl
jnp
xchg
jecxz
adc
pop
lods
lods
subl
call
xchg
xchg
pushf
mov
das
and
mov
inc
add
enter
mov
aaa
imul
cmp
inc
std
clc
or
lods
xor
mov
fldt
and
lock
and
jnp
inc
leave
data16
or
xor
xor
test
movsb
clc
push
rclb
cmpsb
adc
mov
pop
xlat
push
ror
mov
cmp
sub
jle
add
jmp
das
adc
cmc
sub
xchg
stc
scas
mov
push
dec
fnstcw
leave
jo
test
rcll
dec
pop
cmp
mov
and
cmpsb
mov
pop
pushf
add
mov
dec
push
sub
xchg
stos
pushf
pop
fwait
stos
loope
adc
jnp
repz
pop
jmp
int
cmp
mov
outsb
addr16
push
inc
adc
pop
cmp
push
daa
imulb
in
iret
inc
mov
out
adc
pushl
mov
cmc
add
call
shr
test
xor
add
lea
sub
xor
rcr
shl
mov
clc
cmp
push
call
lea
jg
stc
pusha
ror
cmc
neg
bt
stc
pushf
not
stc
pushf
clc
add
stc
cmc
jmp
seta
mov
pusha
lea
push
jmp
bsf
mov
xor
mov
call
xor
lods
jmp
cli
mov
movsl
pop
adc
std
cmp
sub
mov
in
js
mov
outsb
jbe
lock
inc
stos
push
sar
sub
inc
fdivrl
stos
inc
mov
mov
mov
adc
insb
mov
cs
push
ss
jmp
out
lret
roll
or
in
mov
setb
add
mov
xchg
mov
int3
adc
xchg
mov
cmp
pop
addr16
dec
xchg
mov
movsl
pop
lea
sub
adc
xchg
cmp
into
dec
roll
loope
cld
xor
cli
in
subl
and
mov
addr16
dec
leave
inc
cmp
lds
pop
inc
imul
add
jae
popa
addr16
outsl
js
add
or
call
jmp
movl
pusha
movw
pushf
pushf
lea
jmp
add
inc
js
je
jb
arpl
jae
sbb
outsl
adc
cmpb
jae
push
das
daa
icebp
pushf
ljmp
mov
jnp
ljmp
dec
pop
ss
mov
out
popa
fnsave
fistps
in
popf
pop
out
xchg
mov
sbb
mov
movntq
out
or
sbb
stos
outsl
sub
sbb
xor
dec
ds
subl
sbb
dec
and
rol
stos
mov
das
int3
jmp
orl
or
sarl
jb
jl
ss
inc
mov
clc
cmp
cld
cmp
addb
xchg
mov
arpl
mov
adc
jmp
inc
in
daa
adc
dec
ret
in
fistpl
push
xor
sbb
xor
fcompl
ja
mov
add
outsb
mov
jne
lods
rorl
insl
sbb
ds
les
dec
pop
jge
add
inc
cmpb
jno
pop
loop
arpl
mov
les
adc
outsl
adc
xchg
adc
jp
push
adc
lock
repz
xor
inc
invd
adc
ja
mov
add
repz
out
or
sbb
cmpsl
ljmp
repz
fs
mov
insb
add
adc
sub
adcb
pop
and
xor
loop
cmp
dec
sub
data16
inc
shl
and
inc
cmp
sub
or
out
xor
mov
jae
adc
orl
pop
pop
push
dec
inc
ret
inc
cmp
adc
adc
in
push
add
add
btr
mov
aaa
push
shr
xor
bswap
mov
cmc
shld
aad
sub
btc
call
movzwl
inc
pop
mov
cmc
add
sub
jl
push
test
stc
mov
call
jmp
ljmp
xchg
push
stc
xor
movsl
loopne
lret
xchg
mov
dec
jne
cmp
add
int3
sub
popa
and
ljmp
out
sub
imul
arpl
inc
pop
addl
inc
cmpsb
sbb
adc
or
push
mov
into
fstl
and
and
adc
scas
and
rorb
inc
add
clc
ss
push
jne
das
out
lods
repnz
mul
rcll
stos
push
cmp
cltd
cmp
add
div
pop
lods
cld
adc
movsl
pop
or
loop
jo
xchg
cwtl
loop
xchg
and
inc
sbb
lcall
adc
or
sbb
adc
cmpl
mov
pop
push
pop
fmul
stc
jb
adc
call
pop
dec
mov
stos
fstl
orl
mov
push
hlt
subl
inc
adc
movsb
pop
sahf
jle
inc
push
or
mov
call
jnp
push
mov
outsb
aad
stos
mov
xlat
fbstp
mov
mov
mov
mov
jb
in
pop
push
lret
or
xor
push
sti
push
movb
lea
jae
pusha
push
lea
jne
call
pusha
call
dec
mov
out
outsl
cmpsb
pop
xchg
dec
cmpl
lds
mov
ja
xor
bound
and
cwtl
dec
call
addr16
pop
push
sbb
aad
lods
inc
mov
dec
jmp
jecxz
xor
mov
popa
stos
or
scas
cmpsb
cltd
adc
imul
maxps
pop
mov
dec
dec
sub
jmp
and
icebp
mov
pop
mov
scas
and
xchg
jge
jb
fcoml
pushl
out
pop
rorb
or
push
iret
xchg
repnz
fsubrp
mov
decl
shlb
and
je
clc
cmp
call
bt
push
ror
call
pushl
push
lea
jae
call
setg
movl
mov
not
pushl
mov
call
ror
rorl
pop
addr16
dec
sub
cmp
dec
cmp
shll
icebp
lret
mov
cmpl
mov
dec
mov
in
scas
idivl
xlat
loope
xlat
fdivs
dec
xor
sub
test
add
mov
sbb
loope
gs
mov
xchg
jns
cld
cwtl
mov
aaa
out
icebp
sub
mov
add
push
xlat
stos
jge
inc
cmp
ja
test
hlt
insb
lods
and
mov
rcrl
push
mov
cmpsb
sbb
xchg
insb
fsubl
orl
xor
and
jae
jmp
lea
jb
stc
bt
cmpb
jmp
or
or
pop
addr16
jp
out
pop
pop
push
adc
cmp
lahf
mov
mov
fldenv
pop
inc
or
xchg
inc
sub
cmp
fsts
dec
inc
ds
popa
test
gs
cld
neg
sub
rcr
xadd
mov
btr
btr
add
rcr
clc
jmp
push
leave
add
divb
enter
sbb
movsl
pop
push
movsb
je
popa
adc
inc
pusha
aad
sbb
je
imul
xchg
jmp
pop
mov
rclb
or
pop
cltd
subl
push
pop
ror
mov
xchg
loop
inc
aaa
je
in
lds
inc
cmp
or
jne
in
jmp
push
icebp
cmp
loopne
mov
dec
fwait
push
cmovs
cmp
xor
or
jbe
xorb
lods
jnp
mov
fsubrl
push
sub
lea
inc
jns
and
lahf
and
jge
lea
xchg
mul
pop
sbb
jl
call
push
mov
mov
hlt
jns
push
aaa
dec
jge
push
mov
pop
mov
mov
cmp
push
mov
xchg
in
add
in
lret
sub
adc
ds
push
ds
and
adc
je
and
mov
cmp
add
pushf
test
sbb
mov
inc
cmp
add
sub
repnz
pop
imull
insl
and
add
mov
pop
addr16
mov
sarb
js
inc
sbb
icebp
movsl
adc
in
sbb
out
and
xor
shll
sbb
sub
sub
mov
cmp
cs
dec
xor
popa
cmp
out
push
xchg
sbb
xchg
push
mov
push
movsb
sub
fwait
push
mov
push
rcll
sbb
pop
push
dec
les
stos
movsb
sahf
cltd
adc
invd
ss
pusha
mov
and
jae
jmp
mov
push
or
in
enter
lods
jecxz
fcompl
nop
inc
outsb
jge
push
cmc
or
scas
fwait
loope
or
or
fisubs
push
call
out
outsl
imul
cmp
jmp
imulb
or
inc
jno
in
and
cmp
xor
mov
mov
pop
pusha
repnz
or
sub
out
lds
je
loopne
stos
clc
add
out
mov
stos
add
out
jecxz
push
dec
enter
inc
jno
inc
je
cmp
je
jmp
mov
xchg
mov
test
movsb
xchg
and
pop
lods
xchg
fs
cmpsl
mov
xchg
js
test
test
bound
jl
cmpsb
inc
movsb
xchg
je
test
cmpsb
xchg
cmp
test
movsb
xchg
jp
movsb
pop
movsl
xchg
pop
add
push
mov
mov
or
js
clc
cmpsl
jl
xchg
mov
mov
pop
mov
test
movsb
xchg
mov
test
movsb
xchg
cmp
mov
out
mov
orb
cmpsb
xchg
pop
lds
jno
loopne
cmp
movsb
test
movsb
xchg
mov
cmpsl
dec
test
mov
sar
outsl
je
push
test
movsb
xchg
jle
cmpsl
out
mov
cmpsl
inc
mov
mov
add
js
pushf
test
movsb
xchg
mov
xchg
insb
scas
test
movsb
xchg
and
add
sub
je
sbb
mov
das
lods
xorl
jne
xchg
jp
cmpsl
xor
cmc
js
lock
jg
xchg
jl
test
add
mov
lock
jmp
outsb
leave
cmpsb
inc
mov
insb
popa
insb
insb
push
test
cmpsb
xchg
pop
mulb
mov
inc
das
je
jg
dec
cmpsl
xchg
adcb
mov
lods
cmp
pop
fisubs
mov
inc
das
js
mov
mov
xchg
jl
cmpsl
mov
test
jo
jne
xchg
dec
jecxz
push
xchg
mov
test
movsb
xchg
test
or
mov
push
add
call
shr
push
push
pusha
cmp
mov
jmp
xchg
or
pop
addr16
std
cmp
inc
pop
push
push
xchg
test
jno
inc
arpl
ret
mov
fs
push
xchg
je
loop
jnp
ss
push
inc
pop
popf
in
in
movsb
gs
push
stos
pop
movsl
mov
xchg
sub
jl
call
sbb
pop
out
push
xorl
push
stos
xorb
pop
mov
sub
lcall
fucomip
push
mov
loopne
push
lods
push
sub
test
daa
fimull
inc
adc
icebp
inc
out
dec
stc
sub
ds
idiv
iret
scas
clc
repz
cli
mov
test
xchg
push
xor
leave
mov
push
and
xchg
fucomip
fcmovb
rcl
mov
cmp
icebp
jmp
popa
pop
inc
cmp
addr16
outsl
movsl
pop
push
lret
dec
les
das
jo
call
mov
mov
mov
rorl
dec
xchg
pop
daa
jp
and
push
or
push
sbb
mov
lods
jnp
jecxz
add
out
push
not
xchg
cld
arpl
insl
in
pop
push
int3
lds
xor
cmpsb
jno
stc
lds
dec
dec
mov
test
call
pusha
or
mov
pusha
stc
test
mov
cmpb
push
movb
jmp
mov
mov
pusha
bswap
movsbw
mov
push
pushf
mov
pushl
ret
or
in
pop
pop
addr16
mov
mov
js
sbb
fsubl
scas
and
imul
icebp
out
fimull
xor
std
sub
xlat
fidivrl
add
mov
jge
rclb
ds
pop
cs
lret
leave
mov
push
adc
pusha
addr16
adc
pop
fwait
imull
cmp
inc
popf
fisubrs
pop
mov
mov
xor
pop
sbb
push
xchg
jb
mov
ljmp
mov
pushf
push
xchg
loop
push
in
scas
pop
cwtl
shr
aam
mov
call
sbb
mov
sub
clc
push
xor
cmp
mov
neg
sub
bsr
push
mov
shr
push
bt
jmp
mov
and
jmp
sar
mov
test
jmp
push
xchg
mov
push
or
or
iret
dec
scas
jmp
xchg
xchg
mov
cmpsl
push
es
sti
scas
out
bound
mov
cli
or
inc
cmp
mov
mov
push
andb
flds
loop
pop
push
or
scas
in
push
or
movsb
out
xor
push
mov
pop
or
xchg
pop
pop
sbb
mov
or
mov
lods
bnd
cmc
rcll
hlt
jns
push
in
dec
and
mov
lds
cmp
pop
ds
jns
es
jle
lret
or
lret
inc
cmp
addl
add
subb
sarb
sub
xchg
pop
jle
jbe
insb
in
iret
dec
gs
jbe
fs
mov
stc
xor
fcoml
add
push
mov
push
mov
das
jmp
stos
push
mov
mov
adc
shlb
daa
and
sub
inc
push
sub
jbe
xchg
xchg
mov
ficoms
mov
leave
nop
out
jmp
outsl
add
push
mov
xorb
dec
jb
inc
cmpsl
ljmp
xchg
jmp
or
in
cmp
fstl
add
out
xchg
pop
rcll
add
cltd
les
rclb
aaa
xor
pop
hlt
sub
hlt
insl
in
push
dec
mov
push
das
mov
or
xchg
les
add
push
mov
js
cld
add
addr16
jo
ficoml
dec
cmpb
lods
out
push
or
aam
add
movsb
pop
cli
mul
jecxz
pop
jnp
popa
insl
push
call
mov
sbb
adc
sbb
inc
fmuls
mov
cwtl
push
syscall
fwait
vpaddd
push
call
lea
jb
pusha
cmp
push
pushf
cmpb
jmp
pushl
lods
clc
bt
pushf
cmc
neg
stc
xor
pushf
neg
test
cmp
cmc
mov
add
test
cmp
xor
pusha
ror
stc
push
clc
jmp
int3
inc
push
add
addr16
inc
jg
jbe
loop
dec
add
in
sub
inc
xor
leave
mov
pop
inc
test
mov
xchg
push
shlb
mov
or
mov
jno
pop
lock
out
pop
rorb
xor
sahf
in
int3
cmp
retw
cmp
and
add
inc
jmp
adc
push
jmp
pushl
movl
pusha
movb
movl
pushf
push
push
lea
jmp
pusha
cmp
bt
cmp
call
jmp
sbb
rorb
int3
leave
lods
imul
test
lods
inc
mov
call
in
mov
rcrb
lods
pop
repz
add
stos
mov
mov
std
lods
cmp
xor
imul
cmp
stc
jb
mov
jg
js
sti
dec
push
add
and
or
jp
push
inc
xchg
cmp
sti
ret
ret
cli
inc
das
mov
repnz
dec
inc
cmp
mov
cmpsl
movsl
pushf
adc
xor
xsaveopt
mov
lea
ja
cmc
push
jmp
pushl
popl
bt
jmp
jmp
aad
aam
pop
addr16
pop
inc
stc
into
cmp
pop
push
ss
outsl
ds
xor
repnz
popf
push
cmp
fcompl
push
nop
inc
fstp
dec
sbb
add
mov
lahf
pop
sbb
sahf
mov
dec
aaa
or
js
out
pop
sbb
dec
loope
gs
jge
fsubs
sbb
scas
jle
and
dec
mov
lret
dec
and
notl
or
xchg
stos
xor
push
movsb
lret
mov
scas
mov
jns
insl
cmpb
mov
inc
adc
pop
pop
fmuls
les
jbe
cmp
repnz
mov
and
xchg
pop
sub
das
xorl
push
pop
rol
mov
int
inc
or
push
mov
decl
add
jne
outsl
cmpsl
pusha
push
dec
andl
sti
inc
mov
out
aas
sbb
jmp
std
dec
xchg
arpl
xor
jnp
pop
decl
push
xchg
mov
stc
stc
out
mov
shrb
repnz
cmp
pusha
mov
jmp
dec
movd
xchg
ret
add
jne
fisttpll
ljmp
cmp
pop
and
mov
rorb
inc
cmpl
jge
mov
dec
movd
push
jnp
aam
daa
pop
add
cld
xor
or
sub
xchg
loopne
add
adc
leave
xchg
je
push
pusha
xchg
push
xchg
enter
dec
in
jl
add
test
mov
xchg
jmp
sub
into
jne
shrl
ret
lahf
push
xchg
aad
mov
addb
ret
fldt
sub
sar
enter
inc
out
pop
mov
pop
adc
sbb
and
js
jbe
cmp
jle
jbe
inc
sub
les
mov
xlat
rolb
sahf
jmp
sub
cmp
adc
add
cwtl
adc
test
lock
bound
cltd
shlb
inc
popf
xchg
mov
add
popa
insb
inc
insb
insb
outsl
arpl
call
sub
mov
pushl
mov
pushl
movb
movb
lea
jmp
jmp
jmp
pushl
movl
movw
movb
lea
jmp
pusha
pushf
mov
mov
lea
push
push
pusha
call
cwtl
movzbw
movsbw
call
mov
bswap
mov
pusha
not
sar
add
mov
bt
add
lea
jp
pusha
push
mov
mov
movb
mov
lea
jmp
pusha
mov
pushf
movl
push
pushf
lea
jmp
mov
mov
clc
pusha
test
stc
add
cmc
bt
stc
sub
pusha
call
call
push
pushl
mov
call
mov
push
pushf
pushl
mov
lea
jmp
pushl
repz
popl
call
push
pusha
call
adc
mov
bsf
bsf
mov
clc
cmc
call
pushf
movl
movl
lea
jmp
mov
pushf
lea
jmp
repz
popl
jmp
mov
pushf
pushf
lea
jmp
clc
movzbl
cmc
stc
test
stc
sub
stc
push
push
neg
bt
clc
test
bt
not
bt
sub
pushl
sub
pusha
mov
jmp
push
jmp
bswap
aaa
das
mov
rcl
not
call
mov
push
mov
call
push
mov
push
jmp
mov
jmp
call
jns
cbtw
mov
jmp
mov
pushf
pushl
popl
call
rcl
lea
cmc
cmp
jmp
movzbw
mov
call
pushl
popl
pusha
push
pushf
lea
jmp
call
mov
push
pushl
popl
push
pushf
lea
jmp
movb
movw
divl
jmp
sub
pushf
stc
pushf
xchg
jmp
mov
jmp
call
shld
rcl
bts
mov
cmp
cmc
cmp
add
push
mov
pushf
pushl
lea
jmp
shl
rol
mov
sets
mov
clc
add
push
mov
pushf
pusha
mov
push
lea
jmp
pushf
mov
pusha
movw
pushf
lea
jmp
lea
jnp
mov
pushf
jmp
lea
push
pusha
jmp
movsbw
mov
adc
inc
cmp
add
setnp
ror
lea
mov
pushf
dec
rcl
neg
not
btr
add
bswap
not
jmp
movl
push
movb
lea
jmp
pushf
mov
mov
lea
pushf
lea
jmp
push
pushf
pushf
push
pusha
mov
call
cmp
cmp
movb
push
pushf
lea
jne
bsf
shld
push
shld
xorb
lea
pushf
movzbw
jmp
movb
jmp
push
pushf
pushl
repz
popl
mov
call
add
cwtl
cwtl
cmp
mov
jmp
lea
jne
jns
push
mov
mov
pusha
lea
jmp
shrd
pusha
pushf
call
call
rcr
daa
lahf
shrd
mov
cmc
stc
cmp
sub
pushf
jmp
shl
pusha
call
call
movw
pushl
popl
call
setge
or
cmp
mov
pusha
or
clc
cmc
add
setle
pusha
jmp
bsf
xor
mov
bt
sub
pusha
bt
test
add
jmp
mov
pushf
lea
jmp
pushf
repz
popl
push
pushf
mov
pushf
call
jmp
pushf
pushf
mov
jmp
clc
mov
btr
pop
bt
mov
pop
movsbl
pop
rol
ror
pop
sbb
shl
btr
aas
popf
movsbw
call
test
clc
add
call
pushf
pushf
mov
pushl
mov
pushl
popl
movb
pushf
jmp
stc
call
pushf
pushf
pushl
popl
movw
push
lea
jmp
bswap
and
inc
jmp
call
das
pusha
mov
test
sub
call
pushf
pushf
mov
jmp
lea
jbe
pusha
mov
mov
mov
mov
pushf
lea
jmp
rol
movzbl
pusha
xor
clc
bt
push
add
jmp
mov
movw
pushf
lea
jmp
jmp
mov
movb
pusha
pushf
jmp
pushf
pusha
jmp
mov
pushl
popl
mov
lea
jmp
jmp
push
jmp
pusha
sub
bswap
sub
shl
cmp
and
cmc
mov
bt
stc
jmp
mov
lea
push
jmp
pushf
jmp
add
cmp
sub
pusha
pushf
pushf
mov
push
lea
jmp
pushl
pushl
popl
call
call
movl
pushf
mov
pushf
lea
jmp
mov
call
movl
push
lea
jmp
cld
mov
bswap
not
movzbw
mov
call
push
sub
call
pushf
pushl
mov
movb
jmp
pushf
mov
mov
mov
mov
lea
jmp
push
jmp
mov
pushl
movb
pusha
mov
pushl
pushf
call
rol
aas
mov
jmp
test
sub
pushf
pushf
jmp
pusha
dec
pushl
stc
neg
movb
cmp
test
test
add
movl
jmp
mov
mov
cmc
movzbl
mov
setno
rcr
movzbw
add
btc
bts
movsbw
cmc
sub
pushf
sub
sbb
rol
mov
call
pusha
push
jmp
bt
mov
lea
clc
cmp
sub
call
shr
mov
xor
cmp
dec
rcr
mov
stc
sub
clc
cmc
pusha
stc
shl
jmp
pushf
popl
movb
pushl
popl
push
push
lea
jmp
pushf
popl
movb
jmp
setle
call
cld
call
mov
jmp
stc
cmc
mov
call
mov
jmp
rep
rcl
cld
jmp
push
add
pushf
mov
lea
jmp
mov
clc
not
cmc
call
mov
pushf
jmp
mov
pushf
pushf
popl
call
pushl
jmp
pushl
popl
pushf
lea
jmp
cmc
call
mov
pushf
call
pusha
jmp
push
mov
jmp
mov
lea
jnp
push
pushf
jmp
add
call
shl
mov
dec
cmp
add
ror
xor
mov
rcl
rol
xor
dec
add
push
lea
pusha
pushl
lea
not
bswap
call
aaa
notl
cmc
mov
cmc
stc
cmp
pusha
sub
bt
call
rcr
call
add
call
shr
mov
clc
setne
mov
cmp
push
not
stc
test
not
cmc
stc
pushf
and
movw
mov
pushl
pushf
pushl
pushf
popl
movb
jmp
lea
jo
pop
jmp
pushf
mov
pushl
jmp
mov
movb
jmp
mov
mov
movb
movb
movb
lea
jmp
pushf
mov
call
mov
mov
pushf
call
pushf
push
push
mov
mov
pushf
pushf
pushf
lea
jmp
push
mov
adc
movzbl
neg
xor
setg
lea
movzbw
setg
dec
bswap
rcr
neg
pushf
bsf
add
sar
neg
xor
sub
ja
mov
clc
add
call
push
jmp
pushl
popl
jmp
test
pushf
and
call
jmp
mov
cbtw
bsr
mov
rol
mov
jmp
pusha
movb
mov
pushf
pushf
push
pushf
mov
pushf
pushf
mov
lea
jne
pushf
lea
push
call
xor
cmp
stc
pushl
clc
add
pushf
add
ja
clc
push
sub
push
lea
jo
pushf
mov
pushf
mov
pusha
call
pusha
pushf
mov
movw
pushf
movb
pushl
popl
pushf
call
add
pusha
pushf
mov
lea
jmp
call
call
call
pusha
mov
mov
call
pushf
popl
call
lea
push
pusha
jmp
ror
pushf
mov
pushf
jmp
mov
pusha
mov
call
lea
push
push
mov
pusha
pusha
pushf
mov
mov
pushf
pushf
pushl
repz
popl
lea
jp
push
movw
pushf
mov
pusha
mov
push
pushl
popl
call
push
push
jmp
mov
pushf
cmc
and
call
pushf
pushf
popl
push
call
mov
mov
jmp
pushf
movw
mov
pushl
push
push
mov
pushf
popl
pushf
pushl
pushf
pushl
popl
pushf
pushf
movl
push
lea
jmp
call
movl
pushf
movl
pusha
lea
jmp
cmp
mov
clc
mov
push
or
movb
call
push
mov
pushf
pushf
jmp
movzbw
not
mov
pushf
mov
pushf
jmp
mov
mov
mov
jmp
test
cbtw
jmp
mov
mov
cld
not
call
jmp
not
test
cmc
add
movb
sub
mov
call
movb
pushf
mov
call
add
test
jmp
mov
stc
bt
add
push
lea
jmp
bt
mov
pusha
add
pushf
pushl
mov
mov
push
pushf
pushf
movb
lea
jmp
pusha
pushf
pushf
mov
movl
movb
pushf
mov
pushf
lea
jmp
jmp
jmp
pushl
cwtl
cmp
pushf
test
lea
jmp
pushf
pusha
mov
movb
mov
pusha
movw
mov
mov
lea
js
pushf
pushf
lea
push
pushf
jmp
cmp
lea
mov
neg
test
add
add
pushf
setns
mov
lea
jp
pusha
mov
mov
pushf
pushf
movb
lea
jmp
add
pusha
lea
jge
push
inc
call
bswap
mov
jmp
mov
mov
pushl
jmp
bsf
sub
mov
bsf
pop
bts
lea
call
call
push
pushf
popl
jmp
pusha
pushf
popl
push
pusha
pop
lea
jbe
push
jmp
movw
mov
mov
pushl
mov
pushf
lea
jmp
jmp
repz
popl
jmp
pushl
pushl
popl
call
push
pushf
pushf
popl
pushf
pushl
popl
mov
movb
pushl
pushf
lea
jmp
call
jmp
clc
sub
jo
not
clc
pushf
jmp
sub
neg
mov
pusha
not
inc
bswap
inc
ror
inc
call
push
mov
lea
jg
pusha
mov
pusha
pushf
popl
push
call
and
rcl
mov
adc
rcl
rol
btr
mov
cmc
pusha
rcl
shl
mov
cmc
movb
add
cmp
stc
shld
call
mov
movb
pushf
lea
jmp
test
clc
cmp
call
clc
clc
sub
jmp
cmp
add
mov
mov
pushl
pushf
lea
jmp
cwtl
mov
push
sbb
btc
mov
call
mov
jmp
call
stc
cmp
add
push
cmp
call
mov
pop
not
pop
pushf
mov
std
pushl
popf
pusha
lea
jmp
movsbw
movzbl
push
mov
inc
push
jmp
mov
call
pusha
pushl
pushf
popl
call
call
call
pushf
call
movl
pushf
push
movb
pushl
lea
jmp
pushf
movb
mov
jmp
call
cmp
jmp
lea
adc
test
add
mov
test
add
push
lea
jmp
mov
mov
call
jmp
push
pushf
mov
mov
lea
jmp
stc
cmc
or
test
pushf
pushf
call
rol
pop
and
clc
mov
stc
sub
push
movb
pusha
mov
pushl
movb
lea
jmp
pushl
popl
push
pushf
movb
lea
jmp
mov
pusha
pushf
mov
push
pushf
pushf
call
mov
jmp
pusha
add
pusha
pushf
lea
jmp
push
call
mov
pop
not
mov
movsbl
lahf
push
mov
lahf
not
xchg
lea
mov
setne
setae
push
not
mov
lea
mov
pushf
pusha
pushl
ret
pushl
popl
movw
mov
mov
lea
jmp
movl
pusha
movb
movb
lea
jmp
add
pushf
not
mov
test
stc
movb
cmp
add
pushf
pusha
lea
jmp
jmp
pusha
repz
popl
call
push
movw
pushf
repz
popl
lea
jo
push
push
mov
movb
call
push
pusha
push
mov
push
mov
lea
jmp
call
call
pushf
jmp
mov
jmp
pushl
popl
pushf
pushl
pushf
mov
lea
jmp
push
call
sub
pusha
bt
add
mov
pushf
popl
lea
js
pushf
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
bt
lea
xor
sbb
lahf
lea
call
pushf
pushf
push
pushf
mov
jmp
call
push
cmp
stc
jmp
aaa
dec
ror
daa
mov
clc
cmp
add
jmp
call
pusha
mov
mov
pushf
mov
pushl
ret
mov
push
mov
movb
lea
jmp
lea
movsbl
pushf
mov
mov
not
movsbw
mov
jmp
mov
push
mov
pushf
pushf
pusha
lea
jmp
call
pushl
movl
pushf
pushf
push
lea
jmp
call
pushf
popl
pusha
mov
jmp
pushf
pusha
pushf
pushl
popl
pushf
movl
pushf
lea
jmp
rdtsc
mov
pushf
jmp
push
pushf
lea
push
pushf
mov
push
pushl
jmp
movl
mov
push
pushf
movw
lea
jmp
jmp
call
pushl
lea
pushl
pushl
mov
mov
lea
jmp
pushf
pushl
repz
popl
jmp
pusha
mov
movb
call
pushl
popl
pushf
lea
jmp
xchg
movzbw
bswap
not
bswap
mov
std
cld
jmp
jmp
pushf
jmp
push
push
mov
mov
pushl
pushf
mov
pushf
push
repz
popl
call
call
inc
movzbl
pushf
add
jmp
movl
push
mov
lea
jmp
jmp
pushf
pusha
mov
mov
mov
pushf
popl
pushf
call
pushf
pusha
inc
call
call
mov
mov
lea
push
call
lea
jge
push
movl
pushf
movb
mov
lea
jmp
push
jmp
jmp
push
mov
push
pushf
pusha
mov
mov
pushf
push
mov
jmp
push
pusha
pusha
push
call
lea
je
pushf
cmp
pusha
jmp
ror
pushf
pusha
dec
push
test
cmp
jmp
mov
jmp
push
mov
mov
mov
pushf
call
repz
popl
pushf
push
push
mov
call
movb
mov
lea
jne
movsbw
mov
push
test
clc
and
clc
mov
call
adc
xor
mov
call
mov
call
shr
mov
mov
push
push
pushf
pushf
pushf
popl
push
pushf
pushf
jmp
bsf
movzbw
or
mov
stc
add
pushf
lea
jb
mov
pushf
pushf
pusha
mov
movb
movw
lea
jmp
aas
bts
movsbw
lea
mov
jmp
mov
pusha
movw
jmp
jmp
movw
mov
pushf
mov
lea
jmp
shl
stc
pusha
cmc
shr
call
pushl
mov
pusha
pushf
pushl
mov
push
movb
jmp
lea
push
jmp
lea
push
push
jmp
mov
pushf
pushl
popl
call
pushf
mov
push
pushf
mov
movb
lea
jmp
pushf
pusha
mov
jmp
call
pusha
mov
pushf
mov
pushl
pushl
popl
call
call
bswap
mov
shld
mov
push
mov
call
pushf
not
stc
clc
clc
sub
jmp
sub
mov
pusha
mov
neg
push
push
ror
call
pusha
lea
jns
push
mov
movb
pusha
mov
lea
jmp
mov
jmp
cld
lea
pusha
movl
jmp
jmp
jmp
lea
pushf
pushl
lea
jmp
add
mov
clc
add
push
lea
jmp
mov
pusha
mov
mov
call
push
push
repz
popl
mov
call
movsbw
movsbw
setno
mov
pushf
call
jmp
jmp
pushf
jmp
movb
add
movb
call
pushf
push
mov
push
lea
pusha
mov
pushf
lea
jmp
pushl
popl
movb
pushf
call
pushf
mov
jmp
push
mov
pushf
mov
pushf
pushf
popl
lea
jbe
pusha
pushl
popl
push
push
lea
jmp
mov
pushf
mov
pusha
push
pushl
movw
mov
movw
jmp
pushf
mov
pushf
call
mov
jmp
xor
jmp
mov
movb
lea
jmp
jmp
pushf
pushl
popl
movl
movl
movw
movb
lea
jmp
movw
mov
pushl
pushl
popl
jmp
jmp
xchg
cmp
mov
stc
mov
cmc
sub
bt
js
cmc
shl
pushf
pusha
jmp
pusha
pusha
mov
push
movb
call
mov
cmp
sub
cmp
pushl
cmc
clc
shr
pushf
jmp
jmp
jmp
push
movb
jmp
xor
pushf
jmp
bt
pushf
sub
mov
pushf
mov
pusha
call
call
shr
test
cwtl
bsr
mov
and
mov
cmp
call
call
mov
push
pushf
mov
push
jmp
mov
pusha
repz
popl
movb
pusha
mov
mov
call
pushl
mov
pushl
mov
jmp
jmp
mov
pushf
jmp
mov
movb
mov
pushf
mov
repz
popl
pushf
mov
pushf
movb
call
call
mov
pusha
mov
mov
push
jmp
movl
lea
push
jmp
mov
jmp
movsbw
mov
pushf
test
add
pusha
pusha
lea
jmp
pusha
mov
pusha
pushf
mov
mov
pushf
mov
lea
jbe
repz
pusha
pusha
mov
pushf
pushf
lea
ja
push
mov
jmp
movb
test
pushf
mov
pushf
sub
jmp
not
mov
push
cmc
jmp
add
call
pushf
pushf
lea
pusha
movb
movb
push
mov
pushf
push
lea
jmp
jmp
call
push
pusha
pushf
pushf
call
jmp
add
jmp
movb
pushf
popl
pusha
push
call
mov
pushl
push
pusha
lea
jmp
mov
mov
pop
setg
mov
movzbl
lea
push
xchg
movsbw
push
movsbw
push
xchg
call
inc
pushf
decl
jmp
pushl
push
pushl
popl
jmp
pushf
lea
ja
add
bsr
call
call
pushl
popl
pushf
jmp
neg
mov
cmp
bt
test
jge
add
push
movb
pushf
push
lea
jmp
cwtl
pop
xchg
push
cwtl
bswap
mov
not
mov
pushf
pushf
pushl
ret
pushl
popl
pushf
call
pushl
repz
popl
rcr
stc
jmp
pushf
pushf
lea
push
push
mov
pushf
push
push
jmp
mov
push
pushf
jmp
cmp
clc
jmp
mov
pushf
lea
jmp
jmp
sub
jmp
pushl
mov
xor
pushf
mov
mov
clc
sub
jmp
pushf
shl
pushf
pushl
call
sar
lea
sar
mov
pushf
add
pushf
lea
jmp
jmp
movl
pushf
pushf
lea
jmp
cmp
sub
clc
stc
pusha
test
shr
call
add
add
rcr
mov
ror
push
rcl
cmc
rol
pushl
btr
sets
push
pushf
ror
mov
bswap
bts
cmc
rol
bswap
bswap
shrd
dec
stc
test
not
pusha
bts
lea
inc
sub
test
stc
jmp
push
call
pusha
pop
mov
pusha
mov
jmp
add
jle
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
bound
pop
push
xor
pop
push
cmp
pop
testb
cmp
mov
add
stos
add
imul
pop
inc
pusha
add
xchg
add
cltd
add
outsl
add
pop
add
jbe
pop
push
add
pop
inc
jmp
add
add
pop
ds
push
pop
inc
nop
add
lods
add
lods
add
add
push
add
stc
add
outsb
add
push
add
enter
out
pop
push
dec
add
mov
pop
push
mov
add
enter
cltd
add
sub
pop
inc
outsl
add
cltd
add
add
push
add
mov
add
add
pop
fs
pop
push
dec
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
faddl
pop
arpl
add
ret
add
cmpsl
add
lods
add
cmpsl
add
icebp
add
nop
add
outsb
add
lods
add
pusha
add
xor
pop
push
add
pop
push
mov
add
inc
add
add
nop
add
add
pop
dec
mov
pop
dec
ret
add
sub
pop
dec
stc
add
mov
add
insb
add
sub
pop
pusha
push
add
ret
inc
jmp
add
stc
add
cmp
pop
inc
jmp
add
mov
add
cmc
add
add
aas
add
push
add
push
add
sbb
add
push
add
inc
add
sbb
pop
inc
stos
add
xchg
add
in
pop
cmp
lods
add
push
pop
push
push
pop
faddl
pop
inc
nop
add
enter
push
add
push
add
cmc
add
ret
fs
add
push
pop
testb
bound
add
sti
add
fildl
pop
pop
mov
add
mov
pop
fs
add
cwtl
add
sub
pop
inc
sbb
add
add
cmpsl
add
mov
pop
push
icebp
add
add
ret
add
sbb
pop
inc
out
pop
inc
nop
add
push
add
dec
add
popf
add
ret
add
inc
add
enter
popf
add
stc
add
icebp
add
add
push
add
add
pop
push
sti
add
push
add
faddl
pop
bound
add
push
add
stos
add
push
add
add
in
pop
push
call
add
xor
pop
push
sub
pop
push
sti
add
xchg
add
push
add
sbb
add
sub
pop
ds
pop
add
insb
add
testb
fs
add
mov
pop
inc
imul
pop
push
dec
add
faddl
pop
push
sti
add
icebp
add
pop
add
ret
add
nop
add
stos
add
lods
add
popf
add
mov
add
lods
add
mov
add
popf
add
mov
add
outsl
add
enter
aam
pop
dec
stc
add
icebp
add
mov
add
icebp
add
pusha
add
add
pop
inc
cwtl
add
sti
add
enter
add
nop
add
mov
pop
inc
imul
pop
pusha
push
add
pop
add
lods
add
stos
add
inc
add
sti
add
nop
add
dec
add
icebp
add
sbb
add
push
call
mov
push
mov
call
pushf
push
movw
mov
push
mov
movw
push
pusha
push
lea
jmp
mov
jmp
push
mov
jmp
jg
push
pushf
pushf
mov
jmp
mov
jmp
cmp
cmc
test
cmc
movzbl
shl
sub
jmp
add
pusha
mov
pusha
mov
lea
jmp
mov
rep
clc
stc
bts
mov
btr
btc
pushl
mov
pushf
stc
pushl
popf
pushf
lea
jmp
bswap
pusha
cwtl
mov
pop
mov
movw
jmp
mov
jmp
movzbw
mov
pop
movsbw
pop
jmp
cmp
pushf
sub
call
pusha
pushl
popl
pushl
pushf
mov
push
lea
jmp
inc
clc
ror
pop
rol
pop
setnp
pop
dec
add
bsr
movzbl
and
or
btr
cmc
mov
cmc
push
bswap
clc
movb
add
mov
jmp
push
pushf
push
pushl
popl
pushf
movl
pushl
mov
pushf
lea
jmp
pusha
lea
push
call
pushl
popl
mov
pushf
push
pushf
movl
pushf
lea
jmp
repz
popl
call
mov
pusha
call
lea
bt
stc
mov
shrd
shrd
inc
mov
cmc
clc
clc
test
add
pusha
pusha
call
cmc
btc
pushl
ror
add
clc
sub
rcl
movsbw
rol
clc
xor
push
and
shr
neg
mov
cmc
pushl
movb
clc
add
call
movl
movw
push
lea
jmp
movb
jmp
cmc
stc
add
pushf
pusha
pushf
mov
lea
jmp
mov
pushl
popl
pushf
movb
movw
push
lea
jmp
movsbw
daa
jmp
mov
pushf
mov
push
mov
pushf
mov
lea
jmp
mov
repz
popl
pushf
pushl
mov
jmp
pusha
pushf
popl
pushf
push
pushl
popl
pushf
push
movb
lea
jmp
mov
jmp
mov
push
pushf
jmp
push
pushl
mov
call
mov
pushf
pushl
lea
jne
pusha
stc
cmc
xor
movb
xchg
pusha
mov
movl
push
mov
pushf
pushf
pushl
ret
test
cmc
sub
movw
cmc
mov
neg
clc
ror
cmp
pushf
push
mov
add
cmc
pushl
test
cmc
sub
mov
jmp
mov
push
push
pushl
lea
jmp
mov
pushf
push
pushf
repz
popl
pushf
pushf
mov
pushf
mov
call
mov
pushl
push
push
movw
lea
jmp
mov
call
pushf
push
mov
call
lea
cpuid
cmc
pusha
stc
sub
test
cmp
test
movw
cmpl
pushf
push
pushl
push
mov
jmp
aaa
aad
btr
rdtsc
push
bt
bt
test
sub
pusha
call
mov
shr
jmp
bts
mov
movzbw
jmp
pusha
mov
mov
pushl
mov
pushf
pushl
lea
jmp
pushl
call
call
mov
movb
pushl
popl
call
mov
ror
bswap
shl
btc
sub
call
cmc
clc
cmp
stc
pushl
clc
push
pusha
pusha
add
cmc
pushl
popf
movw
pushl
movb
pushf
lea
jmp
push
pushf
mov
jmp
pushl
popl
pusha
pushf
lea
jmp
pusha
jmp
sub
push
push
mov
pusha
lea
jmp
push
movl
movw
lea
jmp
pushf
pushf
jmp
pushf
pushl
popl
mov
call
mov
movzbl
cmc
pushl
test
add
cmc
clc
ror
mov
pushl
inc
pusha
dec
call
mov
pushf
mov
pusha
jmp
call
call
test
shr
shrd
btr
mov
jmp
push
pushl
popl
movb
pushf
jmp
mov
pushf
lea
push
push
jmp
not
movl
add
stc
call
push
pusha
jmp
pusha
pushl
mov
call
call
jmp
sub
bt
pusha
add
pushf
call
lea
jae
pusha
movl
pushf
lea
jmp
lea
push
jmp
movl
push
push
pushf
push
lea
jmp
aas
rol
add
mov
call
bswap
call
lea
push
push
pushf
mov
pusha
pushf
mov
call
push
neg
clc
stc
stc
ror
movb
add
mov
sub
clc
clc
bt
cwtl
jmp
pushf
pusha
call
shr
test
and
test
or
bsr
sub
movsbw
mov
call
pusha
pushf
jmp
daa
bt
shr
mov
dec
mov
push
jmp
dec
shrd
bsr
mov
pushf
movb
clc
clc
add
push
lea
jmp
not
mov
shr
rol
cmc
mov
test
push
stc
call
movl
pushl
pushl
push
lea
jmp
jmp
push
lea
call
call
mov
mov
movl
push
push
lea
jmp
pushf
pushf
mov
jmp
push
movw
movl
push
lea
jmp
mov
pushf
pusha
push
pushf
lea
jmp
cmc
bswap
mov
xor
cmp
cmp
add
pushl
movb
cmp
sub
pusha
pushl
jmp
sub
mov
ror
rcr
rcr
sete
mov
stc
jmp
pushf
call
