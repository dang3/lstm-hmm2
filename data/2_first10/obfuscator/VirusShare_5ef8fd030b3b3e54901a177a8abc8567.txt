push
mov
mov
push
test
je
mov
test
je
jmp
pushl
pushl
pushl
call
add
mov
test
jne
jmp
mov
movb
mov
mov
mov
mov
mov
pop
pop
ret
pusha
cld
movzbl
test
jne
mov
sub
mov
mov
add
mov
call
mov
movb
cmpl
jne
popa
jmp
popa
pushl
push
call
push
call
ret
pushl
push
call
push
call
ret
mov
push
mov
push
test
mov
je
mov
mov
mov
inc
inc
dec
jne
mov
pop
pop
ret
mov
test
je
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
mov
ret
push
mov
sub
lea
push
call
test
pop
jne
lea
push
call
pop
leave
ret
push
mov
sub
mov
mov
push
push
pushl
add
push
lea
call
lea
mov
push
push
pushl
lea
call
test
je
cmp
jne
lea
lea
push
lea
push
push
call
test
je
cmpl
jne
mov
xor
mov
lea
push
lea
pushl
mov
mov
mov
call
cmp
jbe
mov
lea
lea
lea
push
push
push
call
test
je
cmpl
jne
mov
test
je
mov
lea
add
push
push
lea
push
call
test
je
mov
cmp
jne
inc
cmp
jb
lea
call
xor
jmp
lea
call
push
pop
lea
call
mov
pop
pop
leave
ret
push
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
ret
push
mov
push
mov
push
mov
push
push
mov
andl
andl
mov
mov
test
jne
xor
jmp
mov
sub
mov
sub
jne
mov
call
test
jne
jmp
mov
cmp
jb
mov
mov
push
add
mov
push
mov
add
push
call
add
add
sub
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
andb
push
mov
mov
lea
mov
add
mov
lea
push
mov
pushl
call
mov
test
jne
and
jmp
mov
sub
mov
mov
lea
push
push
push
mov
add
push
push
call
add
test
je
xor
jmp
andb
lea
push
mov
pushl
call
andl
add
mov
pop
pop
pop
leave
ret
push
mov
push
call
test
pop
jne
push
call
test
pop
jne
push
call
test
pop
jne
mov
test
je
mov
push
mov
add
push
mov
mov
add
push
call
add
xor
pop
ret
push
mov
push
push
mov
push
push
mov
test
je
mov
mov
mov
sub
mov
je
mov
add
push
add
jmp
mov
test
mov
je
mov
andl
sub
shr
test
jle
mov
mov
mov
and
cmp
jne
and
add
mov
add
add
mov
incl
cmp
jl
add
cmp
jb
pop
pop
xor
pop
leave
ret
push
mov
mov
push
push
push
mov
test
je
mov
lea
jmp
add
push
call
test
mov
je
mov
mov
mov
add
test
mov
je
lea
cmpl
je
mov
mov
sub
mov
test
jns
and
jmp
lea
push
pushl
call
test
je
mov
mov
add
mov
cmpl
jne
add
mov
test
jne
xor
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
pushl
call
mov
pushl
push
push
call
add
pop
cmpb
je
pushl
pushl
pushl
call
xor
pop
ret
push
mov
pushl
call
xor
pop
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
mov
sub
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
cmp
jae
add
push
push
call
pop
pop
ret
mov
test
jne
xor
jmp
mov
sub
sar
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
sar
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
sar
cmp
jae
lea
push
push
call
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
sub
cmp
jae
mov
test
je
mov
sub
cmp
jb
mov
test
jne
xor
jmp
sub
lea
test
mov
jge
xor
push
call
pop
mov
mov
mov
jmp
test
je
mov
mov
inc
inc
cmp
jne
test
mov
jbe
mov
test
je
mov
mov
mov
inc
dec
jne
mov
lea
cmp
je
mov
sub
sub
add
test
je
mov
mov
inc
inc
cmp
jne
pushl
call
mov
mov
pop
add
mov
mov
test
jne
xor
jmp
mov
sub
add
mov
add
mov
jmp
mov
mov
sub
cmp
jae
cmp
lea
je
mov
sub
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
mov
sub
add
je
mov
test
je
mov
mov
inc
decl
jne
mov
jmp
mov
mov
inc
cmp
jne
jmp
test
jbe
mov
mov
sub
jmp
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
sub
cmp
je
dec
dec
cmp
mov
mov
jne
lea
jmp
mov
mov
mov
inc
cmp
jne
add
pop
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
mov
pop
mov
jmp
test
je
mov
mov
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
mov
shl
cmp
mov
lea
je
mov
sub
sub
add
test
je
mov
mov
mov
mov
add
add
cmp
jne
pushl
call
mov
mov
pop
mov
test
lea
mov
jne
xor
jmp
mov
sub
sar
add
mov
lea
mov
jmp
mov
mov
sub
sar
cmp
jae
mov
shl
cmp
mov
lea
je
mov
sub
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
mov
je
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
jmp
mov
mov
mov
mov
add
cmp
jne
add
jmp
test
jbe
shl
mov
mov
mov
sub
jmp
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
sub
sub
cmp
mov
mov
mov
mov
jne
lea
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
je
push
mov
add
mov
mov
mov
add
cmp
jne
pop
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
xor
xor
movl
mov
mov
test
je
add
jmp
movzbl
inc
lea
test
je
mov
mov
inc
inc
jmp
xor
mov
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
cmp
jne
mov
jmp
movzbl
add
shl
add
inc
cmp
je
inc
mov
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
lea
test
jne
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
inc
inc
mov
mov
cmp
sbb
neg
add
mov
mov
sub
mov
add
mov
mov
inc
inc
mov
mov
inc
inc
decl
jne
jmp
mov
pop
mov
mov
sub
cmp
pop
pop
sbb
and
add
neg
sbb
and
leave
ret
add
add
add
push
inc
pop
add
pop
add
mov
add
add
sub
inc
add
add
inc
inc
add
dec
pop
add
pop
add
pop
add
add
pop
add
dec
pop
add
add
add
pop
add
add
pop
add
dec
pop
add
add
add
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
add
jo
jb
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
add
xor
aaa
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
addr16
xor
xor
xor
xor
xor
xor
and
pop
xor
adc
sbb
cmp
cmp
cmp
add
lret
add
add
adc
jne
mov
add
add
enter
sub
in
or
add
adc
push
int
mov
xor
push
call
dec
push
ljmp
jbe
jmp
nop
addr16
mov
cmp
movb
mov
insb
xlat
mov
adc
pop
adc
repz
push
jnp
mov
ja
mov
idivb
jo,pt
inc
add
movsl
pop
in
and
adc
mov
jmp
lods
inc
rol
and
xor
lret
lcall
mov
mov
ljmp
or
add
lods
outsb
call
imul
call
mov
mov
shrl
je
int
test
loope
lahf
mov
decl
and
incl
rcrb
out
pop
mov
mov
test
dec
mov
test
nop
cmpsb
add
jb
incl
testl
popa
in
call
xchg
push
xor
js
lcall
fistpl
jmp
cltd
repnz
add
sbb
ficoml
in
int
movsl
lods
shr
fbstp
inc
ds
ret
out
dec
incl
rolb
pop
add
push
sbb
mov
inc
xor
cmpsb
push
cmp
cli
and
sbb
aad
stos
leave
out
cmp
xchg
cmp
mov
add
pop
mov
lock
jo
jmp
jl
adc
lods
add
jecxz
outsb
mov
push
fadd
jmp
jbe
pusha
xchg
mov
mov
dec
scas
mov
xchg
icebp
jge
sbbl
jle
mov
jnp
xor
mov
lods
xchg
jmp
jb
sub
in
incl
mov
fidivrs
imul
jo
add
decl
mov
sbb
inc
inc
loope
sar
and
arpl
pushl
inc
pop
mov
lock
mov
pushl
push
cmpsl
lcall
int3
out
mov
fists
mov
sub
pushl
call
test
inc
shll
aad
nop
cmp
adc
xor
rcll
test
jbe
pushl
inc
or
xor
jge
pop
imul
call
aad
adcl
push
inc
push
call
or
movsb
imul
mov
pop
test
push
lret
cmpsb
inc
scas
mov
add
hlt
out
fwait
loope
test
mov
sar
jne
test
leave
sar
dec
xor
scas
cmp
mov
cmp
dec
dec
push
data16
test
ljmp
inc
lods
loopne
rorl
sub
push
push
ret
sbb
bound
incl
mov
pushl
test
xchg
push
jp
xchg
out
sub
das
jge
sub
xchg
sub
cmp
ljmp
outsb
dec
and
outsb
xor
xchg
sti
leave
xchg
jmp
stos
dec
out
cli
jmp
inc
pusha
sub
push
lcall
retw
jno
rol
subl
fsubs
inc
lcall
shl
sbb
sti
decl
lods
mov
and
cmp
mov
pop
inc
ljmp
and
sar
std
jl
int3
jnp
inc
pushl
mov
aam
dec
test
cmp
imul
mov
cmp
xchg
aam
sbb
pusha
out
jg
push
call
hlt
cmp
call
ret
fmuls
bound
lods
rcl
repz
mov
mov
and
mov
out
add
sub
repz
jl
int3
dec
lods
clc
pop
inc
jb
push
add
bound
outsl
push
push
xlat
mov
mov
jp
iret
mov
lahf
or
pushl
shrl
nop
mov
int3
adc
inc
cmp
jae
stos
mov
mov
push
fs
push
or
imul
pushl
xlat
mov
repnz
in
adc
sbb
sbb
arpl
scas
inc
out
std
iret
ljmp
mov
jmp
mov
cmp
lret
push
cmp
xor
call
inc
repz
inc
in
add
call
aam
mov
dec
and
ret
mov
mov
jmp
fsts
add
sarl
and
lret
decl
lahf
cmp
push
test
hlt
call
out
jmp
decb
mov
xchg
xchg
orl
scas
jnp
ret
imul
mov
jns
call
gs
dec
mov
xor
or
lcall
test
mov
loopne
cmp
pop
jmp
cwtl
sahf
inc
decl
lcall
mov
xchg
sub
dec
movsb
call
adc
scas
inc
lods
mov
pop
jae
fsqrt
stos
pop
inc
dec
insb
pop
jmp
rol
or
std
mov
mov
sub
daa
xchg
daa
ljmp
sarl
push
and
lcall
xor
ret
lods
jmp
outsl
add
dec
in
loop
out
cmp
jo
std
xor
pop
mov
cli
fbld
cltd
insl
psrld
xor
sub
inc
call
bnd
xchg
or
leave
pop
pushf
clc
dec
inc
ffree
test
xorb
rclb
rcrb
lods
pop
decl
loopne
negl
jbe
add
cs
incl
cld
popf
sub
scas
aaa
sbb
sub
mov
mov
repz
fdivrs
call
sub
xchg
test
out
pop
jbe
incb
je
push
and
dec
dec
lret
movsl
sub
arpl
jo
and
hlt
cltd
cwtl
iret
dec
in
incl
jge
xchg
inc
dec
lods
adc
push
xchg
rcrl
outsb
aas
js
jmp
cmc
shl
sbb
mov
enter
sbb
or
jmp
dec
xchg
push
sti
push
mov
mov
mov
jmp
and
pop
inc
sub
or
mov
mov
lods
lock
pop
fwait
decl
add
popa
std
inc
ror
aam
ljmp
push
sbb
mov
movsl
fisttps
call
push
adc
jnp
cli
std
mov
loop
inc
inc
je
pop
ss
fisttps
xor
jne
imul
and
lret
jge
stos
pusha
out
push
movsl
cltd
jmp
rcl
sub
das
or
int
das
ror
std
decl
cs
mov
cwtl
in
inc
sbb
jne
ljmp
xor
imul
cmp
popf
sbb
decl
add
imul
add
out
cmp
imul
xchg
lods
test
lds
jmp
dec
pop
scas
lea
test
lea
sub
mov
inc
jg
inc
pushl
mov
lcall
call
movsl
sbb
mov
mov
pop
adc
scas
decl
mov
ljmp
sub
inc
xor
xchg
xor
push
pop
cmp
mov
sbb
clc
addr16
push
pop
xor
addb
call
loop
subl
int
daa
leave
orl
outsl
jp
xchg
dec
jl
inc
cmp
jg
lcall
mov
mov
mov
imul
cwtl
test
movsb
pop
js
call
xchg
mov
in
adc
inc
das
jnp
push
dec
xor
adc
and
jmp
mov
leave
mov
loopne
lcall
inc
stc
test
fldenv
mov
fcmovbe
jne
sub
imull
mov
push
jg
ret
cmp
sub
pop
add
inc
ds
aam
aad
mov
xchg
xchg
push
pop
int
cmp
xchg
shl
cmp
arpl
aad
push
aam
jns
pop
jns
jge
sti
popf
pop
jle
inc
clc
and
aas
movsl
subl
xchg
insb
adc
inc
sbb
ljmp
loopne
and
fs
ret
repnz
xchg
sahf
sub
jmp
fmuls
stos
jmp
jg
js
adc
adc
sub
stc
fidivrs
jg
lcall
pop
insb
mov
jbe
repz
pushf
outsb
mov
or
arpl
mov
dec
movsl
sub
scas
pop
mov
or
mov
jg
movsb
lock
call
xor
inc
incl
mov
cmc
pop
xchg
lock
lods
and
cli
pop
or
xchg
jns
sbb
int3
js
cmp
add
rorb
decl
and
ljmp
sahf
jmp
xorb
call
pop
pop
jge
sub
push
push
arpl
imulb
les
call
pop
roll
fildl
stc
mov
fimull
jmp
add
xor
decl
das
mov
and
push
out
adc
addr16
aas
test
jge
push
mov
test
fmull
sar
mov
cmpb
xor
ss
lcall
cltd
mov
pop
jecxz
lea
cli
enter
adc
mov
adc
sti
sub
std
cmc
sbb
jg
push
dec
out
mov
inc
or
decl
lret
mov
mov
mov
inc
nop
call
dec
push
xchg
pop
ficomps
dec
cmp
cli
fs
loope
pushf
dec
dec
insb
mov
ret
insl
into
in
inc
cmp
popf
adc
cld
jmp
push
mov
int
fldenv
lock
data16
rorl
push
or
push
dec
test
bound
lret
mov
das
int
inc
xor
xchg
and
imul
call
xchg
mov
pop
mov
xchg
mov
jo
js
xor
sbb
mov
ss
lahf
lcall
push
push
sub
and
mov
rclb
xchg
out
jmp
cmpsl
push
mov
or
mov
roll
out
movsl
pushf
incl
fstpt
dec
enter
jo
dec
inc
dec
lahf
sarl
or
loop
sarb
popa
and
push
ljmp
out
inc
icebp
into
lods
es
outsl
icebp
add
sar
popf
mov
rolb
or
push
mov
jo
push
call
scas
fadds
push
sub
cli
in
mov
xor
push
fimull
shrb
mov
xchg
arpl
aaa
sub
int3
fs
jmp
hlt
or
or
sub
gs
or
in
adc
int
mov
mov
imul
xorb
ud1
inc
mov
pop
cwtl
incl
pop
pop
fldt
xchg
jns
sbb
sbb
movb
push
les
push
iret
pushl
push
popa
ljmp
xlat
shrb
xor
mov
jmp
andl
sub
adcb
pop
or
dec
outsl
adc
adc
mov
push
imul
test
push
and
adc
cli
rorb
mov
pop
jmp
lcall
clc
xor
lret
or
test
dec
incl
roll
mov
push
cmpsb
jmp
and
aas
je
mov
out
jo
inc
cmc
xlat
mov
es
fmulp
mov
xchg
push
out
lahf
or
jmp
mov
stos
or
adc
inc
inc
cmp
int3
mov
jp
pushl
dec
inc
movsl
fbstp
push
jg
popf
inc
cmp
add
imul
mov
das
xor
pop
clc
decl
loope
callw
dec
nop
inc
adc
mov
mov
push
mov
incl
pop
push
sahf
mov
fcos
mov
in
pop
ljmp
jmp
dec
cmp
fdivr
and
mov
pop
jmp
sub
jecxz
test
adc
incb
std
je
loop
pop
call
out
cmp
pop
jecxz
and
cmp
ss
pop
mov
repnz
js
sub
lcall
and
xorl
call
jmp
cmpsb
mov
movsl
sbb
xlat
decl
cmp
decl
inc
iret
mov
test
push
rorb
push
sbb
out
sbb
leave
das
out
add
cltd
add
pushl
add
decl
ds
sub
mov
inc
dec
ss
das
jl
dec
mov
negl
mov
lcall
jb
lods
lock
aad
insl
lcall
and
and
and
scas
cli
les
and
pop
pusha
scas
sar
in
fsubrl
mov
sub
popa
mov
xor
or
shlb
sbb
arpl
or
movsl
pop
pop
dec
in
adc
jne
jg
sbb
pushl
jge
shll
xor
push
in
xchg
and
fs
test
pushl
stos
fwait
ljmp
cmp
call
lods
mov
incl
lds
mov
jmp
mov
int3
inc
pop
mov
sub
dec
push
sub
sub
rolb
fsubl
fimuls
and
aaa
scas
sbb
jmp
loop
or
mov
cmp
add
lcall
pop
pop
call
int
data16
sbb
push
mov
or
xchg
xchg
xor
les
insl
push
aam
ljmp
jne
push
icebp
or
cmp
mov
sub
push
fldcw
or
je
mov
mov
dec
fs
pushl
sbb
push
jae
xor
jmp
jns
outsl
xor
int3
repz
cmp
pop
fucomi
jle
shll
aam
fwait
lcall
clc
cmc
dec
sub
pop
jge
push
data16
mov
push
push
xor
ret
adc
cmp
xchg
or
aaa
mov
mov
in
mov
cli
nop
fcompl
pop
jmp
adc
add
addr16
inc
rol
jnp
in
xchg
repnz
cmp
cli
je
sub
sti
fidivl
push
in
mov
sbb
push
ret
jnp
adc
or
in
call
inc
aas
fwait
imul
repnz
jae
jmp
rolb
mov
call
js
lcall
stos
cmpsb
xor
jecxz
outsb
xchg
mov
and
repz
inc
jno
lcall
icebp
cmpsb
jmp
xchg
xchg
add
mov
vunpckhps
jge
filds
xchg
aam
jg
cwtl
pop
pop
jo
jge
mov
pop
in
inc
or
lods
lret
dec
mov
mov
jp,pt
ja
pop
mov
ljmp
scas
dec
mov
sub
sar
or
in
and
incl
aad
push
lret
inc
mov
enter
subl
lcall
lret
es
enter
ja
and
outsl
mov
dec
cmpsb
adc
pushl
push
add
mov
sbb
or
jns
push
jbe
pop
push
lods
adc
lods
pop
inc
nop
inc
ljmp
pop
cmp
and
call
enter
movsl
movsb
mov
les
dec
mov
ljmp
repnz
jne
and
cwtl
ja
sbb
decl
mov
lcall
stc
jo
fwait
inc
popa
data16
pop
in
mov
jmp
pop
clc
lret
cmpsb
sbb
mov
push
cmp
push
hlt
xchg
ss
cmp
ljmp
popf
jb
jmp
push
lds
jge,pn
adc
jecxz
insb
out
mov
subb
movsb
shlb
jae
dec
icebp
and
jb
das
xor
add
ror
loopne
incl
sbb
lcall
mov
xlat
ljmp
lods
add
push
sub
mov
adc
cmp
adc
dec
cmp
call
movsb
out
icebp
dec
out
push
cmp
nop
push
inc
out
incl
jo
out
sti
outsl
incl
aam
add
xchg
andb
les
pusha
fcoms
cmp
lret
jne
mov
ud0
out
lods
xchg
add
daa
jl
in
aas
jg
mov
dec
arpl
daa
inc
fisubl
call
call
test
sub
call
mov
es
mov
sbb
cmpsb
popa
roll
pop
inc
push
aas
iret
sub
hlt
cmc
outsb
jae
mov
js
std
xor
push
shlb
mov
mov
jnp
cld
es
mov
add
outsl
cltd
loopne
std
jmp
add
pop
mov
cmc
mov
cmc
inc
call
adc
add
add
sub
adc
pop
dec
shlb
pop
sbbb
jecxz
dec
xchg
pop
js
rorl
inc
ret
dec
or
nop
xchg
adc
inc
xchg
sub
xor
add
mov
movsb
outsl
push
jp
ret
mov
inc
test
hlt
push
sbb
roll
mov
jl
nop
decl
ljmp
clc
and
mov
lret
sbb
movsl
das
loopne
mov
pop
test
int3
cs
mov
xchg
mov
clc
shr
ja
aaa
xor
jmp
fisubl
popf
in
dec
and
pusha
decl
jb
outsb
fwait
lods
xchg
jg
sub
mov
push
jbe
dec
or
mov
adc
and
hlt
aaa
ljmp
inc
outsb
dec
ss
sbb
bound
jne
fucomip
daa
in
mov
dec
cmpsb
jecxz
jle
outsl
xor
dec
sbb
bound
dec
out
imul
push
push
adc
pop
add
pushl
push
xchg
mov
and
xchg
decl
ds
and
adc
in
in
and
lock
insl
xor
out
ret
loopne
in
rorb
add
fistpl
xor
jbe
jp
mov
jbe
lcall
cmpsb
adc
push
adc
ljmp
push
dec
xor
call
inc
and
inc
test
hlt
sbb
roll
inc
js
dec
lcall
fnsave
jb
in
push
mov
pushl
fldl
sti
in
mov
imul
dec
loopne
and
xor
pop
test
ret
sbb
mov
xor
pop
icebp
xchg
jno
pusha
das
andl
lock
add
ret
mov
pop
dec
sub
jecxz
jmp
mov
cld
sti
pop
mov
decl
popl
xchg
in
or
pushl
leave
sub
xor
mov
out
inc
or
out
or
adc
pop
in
mov
or
je
test
cmp
cld
lods
cmp
scas
add
xchg
push
ljmp
js
mov
loopne
movsl
sarb
mov
hlt
fwait
jecxz
jno
pushf
sub
lock
mov
push
fimull
push
scas
test
sbb
push
pop
gs
inc
xor
jg
pop
scas
outsl
scas
xchg
adc
jns
pusha
xor
and
cmp
out
dec
lcall
aaa
loop
enter
inc
js
push
mov
hlt
cli
jns
fildll
mov
dec
jl
sbb
cltd
mov
in
cli
outsl
lahf
jge
dec
mov
xchg
push
decl
bound
mov
lret
and
mov
lret
push
out
ja
mov
sbb
push
xor
push
or
std
cs
push
incl
test
jno
mov
push
dec
xchg
cmc
mov
add
or
mov
add
sub
scas
decl
cmp
aaa
and
aam
mov
adc
sahf
dec
test
ljmp
neg
out
jmp
mov
fcomip
dec
loopne
xor
pushl
pop
test
mov
gs
sahf
pop
mov
lcall
pop
mov
int
loop
mov
push
xor
pushl
adc
adc
ljmp
insl
mov
scas
cmp
xchg
inc
jb
cmp
das
jb
nop
sar
or
popa
push
pushl
push
mov
lcall
int
xchg
cmpsb
scas
dec
or
lock
ds
loop
sbb
xchg
hlt
in
adc
decl
xchg
repz
les
loope
xchg
sbb
js
into
dec
pushf
mov
test
mov
cli
andb
sub
nop
pop
jbe
out
mov
xor
in
jge
sbb
aas
dec
mov
jg
stos
xchg
cmpsl
call
sbb
sub
stc
jno
cmp
add
lods
decl
insl
in
test
dec
adc
push
cmpsl
movsl
pushl
xchg
adc
mov
loop
sti
call
jb
ds
pop
sub
pop
sub
xchg
xor
xor
ficomps
push
cmpb
dec
and
inc
mov
jbe
jl
ficomps
mov
gs
je
sbb
push
cld
cmp
cwtl
pop
pop
inc
push
imul
decl
call
jecxz
ret
jg
lcall
andb
repz
xlat
xchg
xchg
push
add
push
addb
popa
ret
add
leave
insl
sti
sub
pushf
inc
pop
push
cmpsl
incl
in
jp
cli
and
lcall
jo
adc
and
sahf
dec
aam
outsl
cld
add
mov
fistps
lret
mov
pushf
sbb
xlat
sub
jmp
inc
sbb
pushf
add
sbb
aad
add
jae
push
sahf
pop
push
addr16
pop
fsubrs
or
std
cmp
dec
outsb
jmp
mov
lcall
lods
dec
fmulp
mov
cmp
xor
aaa
ds
mov
adc
rol
daa
pop
jmp
dec
and
jg
push
sbb
test
lret
mov
icebp
sbb
push
rol
add
xor
aam
jne
ljmp
push
shrl
ret
mov
sbb
xchg
mov
clc
dec
shr
push
push
push
mov
cld
sub
ds
clc
in
imul
xchg
lahf
jmp
insb
movsl
dec
pushl
push
xor
pushl
lods
fcmove
pushl
xor
cmp
imul
sub
fdivrp
test
mov
ljmp
mov
cmc
std
inc
call
mov
fnstcw
sbb
jno
xor
fs
cltd
push
pop
mov
movsl
adc
ljmp
xchg
push
jecxz
test
es
ljmp
loopne
aad
sub
fwait
leave
jns
movsb
call
adc
icebp
push
or
daa
sub
mov
dec
push
mov
sbb
mov
mov
jecxz
add
and
xlat
add
cli
cmpsb
fdivrl
lea
xchg
scas
or
aaa
pop
decl
lea
loopne
pop
je
push
adc
dec
popf
cmp
aaa
ds
lcall
sub
sbb
mov
lea
jae
aam
stos
inc
mov
clc
push
jl,pt
xor
xor
dec
or
and
out
cld
shlb
jg
mov
loop
push
pop
cmp
aaa
or
ret
test
lret
push
mov
push
dec
incl
sub
ljmp
or
nop
hlt
call
into
push
xchg
lret
and
mov
pop
jg
sbbb
mov
outsl
adc
xchg
cltd
or
sub
pop
aas
pop
mov
lea
inc
sti
adc
sar
xor
sub
sbb
incl
aaa
or
mov
je
jns
icebp
cmp
mov
mov
ljmp
adc
neg
test
push
xchg
call
std
orb
loopne
mov
rolb
inc
es
adcl
jmp
out
xor
cmc
fdiv
mov
mov
inc
call
cwtl
sbb
jmp
xchg
push
sub
das
pop
shl
or
in
mov
cmc
adc
fldcw
cmpsb
pop
pushf
les
sbb
out
repz
push
or
call
push
add
mov
mov
call
mov
int
callw
addr16
mov
out
pop
pusha
jae
jo
lcall
stc
aas
add
xchg
fdivrs
roll
push
jmp
push
insl
fdivr
mov
pop
lret
pop
fisubl
inc
jp
stc
add
push
adc
push
scas
xorl
das
fsubrp
inc
sti
jmp
inc
imul
or
sbb
xlat
ret
insb
adc
in
in
out
push
outsl
push
fs
incl
arpl
movsb
out
mov
repnz
jmp
es
stc
cmpsb
xor
cmp
repnz
mov
sbb
testl
push
roll
xchg
xor
jne
gs
dec
dec
pop
shl
js
pushl
imul
fldt
add
rorl
into
in
test
out
outsb
inc
cmp
mov
pop
jmp
push
mov
adc
je
incl
movsl
lds
and
mov
stos
mov
xchg
cltd
xlat
sbb
push
loope
xor
dec
lcall
aaa
xchg
test
decl
arpl
fwait
jl
stos
mov
mov
loopne
pusha
jmp
jp
lock
push
cld
inc
xor
jns
pop
ret
fcoml
call
outsl
jp
fbld
cmp
loope
jmp
subb
and
xor
adc
enter
outsl
pushf
out
xor
cs
xchg
fdivrp
pop
and
jo
cmc
sbb
sub
jmp
not
lcall
or
cld
adc
subl
xchg
mov
mov
push
pushl
rcrl
mov
rclb
ljmp
adc
jmp
lea
mov
es
adc
cmp
lahf
clc
sbb
xchg
ret
insl
mov
jae
das
xchg
dec
jle
inc
add
ds
pop
incb
pop
cmp
or
xchg
and
loope
das
imul
xor
int
bound
insl
cs
outsb
push
popa
fnstcw
jo
xor
mov
and
fisubl
leave
xor
mov
fs
sbb
rorl
mov
push
xchg
decl
mov
cltd
adc
push
les
movsl
sbb
lea
shrb
outsb
mov
data16
int3
into
test
jecxz
mov
jmp
scas
out
xor
insl
call
arpl
das
push
inc
decb
test
xor
out
fs
insb
incb
adc
fcmovnb
call
les
pop
mov
int3
sub
loop
jmp
jnp
inc
xchg
xchg
pop
jmp
out
ret
pop
repnz
push
inc
push
ja
sarb
mov
clc
xchg
xor
jb
mov
adc
xor
xchg
jo
xchg
inc
imul
pop
jecxz
lods
cld
push
out
call
pop
test
jmp
add
or
out
bound
loope
lahf
inc
leave
dec
fwait
cld
add
lret
cmp
cmc
sahf
je
fdivl
inc
decl
jo
mov
incl
lock
xor
clc
popa
inc
and
test
lret
mov
das
stc
xchg
mov
fistps
pop
repz
fcmovnu
lcall
imul
cltd
scas
jo
clc
or
call
ret
sub
in
dec
sub
jb
sbb
inc
in
into
jns
mov
sbb
loop
mov
mov
call
in
jl
lcall
insb
dec
icebp
inc
ret
sbb
push
cld
inc
mov
xchg
inc
sbb
in
add
stc
push
lea
cld
xchg
repz
dec
mov
sub
jne
cmp
inc
jb
xchg
mov
mov
lds
jmp
scas
pop
arpl
mov
test
fdivrl
push
std
cld
mov
das
jl
dec
cmp
stos
mov
jg
pushl
movl
rolb
fstpt
dec
incl
sub
mov
repnz
lea
jb
jmp
sub
dec
pop
outsl
bound
fimull
xchg
inc
mov
xor
push
cli
shl
sub
xchg
arpl
cld
out
fwait
sbb
arpl
pop
mov
lods
jmp
loopne
mov
sahf
int3
decl
jg
fdivr
fbld
push
loope
sbb
or
jo
pushl
and
movsl
call
xchg
out
pop
outsb
insb
add
ljmp
xlat
or
jecxz
lods
jbe
pushf
lds
lds
mov
ljmp
adc
lds
sub
imul
cltd
outsl
insb
insb
sbb
pop
add
sub
test
iret
cld
xor
jo
aam
pop
std
cld
xchg
lret
xor
dec
pop
add
jns
cmp
dec
add
xchg
mov
xor
push
aaa
test
aas
call
push
cmpsl
lret
jmp
mov
cmp
in
fimuls
add
pop
add
and
ljmp
jnp
decl
addr16
inc
mov
arpl
adcb
xor
adc
sbb
cmp
mov
incl
aaa
fsubrs
test
cmp
dec
notl
jmp
mov
and
jle
scas
dec
mov
jmp
outsb
lock
mov
jns
pushl
push
in
decl
or
pop
lcall
mov
imul
xchg
pop
movsl
or
pop
push
and
sub
mov
cmc
mov
mov
subb
push
in
orl
cmp
cmpsb
lock
jne
pop
loop
cmc
sti
mov
aad
sahf
push
les
fisubs
cmpsb
jmp
ss
icebp
stc
jge
aad
je
xor
sbb
rorl
mov
jbe
into
mov
mov
test
jle
out
or
pop
jp
fmuls
outsb
jnp
addr16
decl
jge
jl
pop
sti
leave
lahf
lcall
xor
push
add
mov
stc
mov
push
test
notl
push
decl
pop
cli
sbb
test
mov
imul
test
dec
sub
movsb
jmp
jp
call
dec
mov
pop
filds
arpl
xchg
xchg
mov
or
das
push
lods
xchg
xchg
pop
jg
mov
push
cld
adc
mov
sub
scas
fidivs
pop
or
in
cmc
cmc
icebp
lock
out
sub
orl
push
decl
pop
int3
pop
mov
into
pop
lock
mov
dec
sub
movsl
mov
into
dec
jo
dec
add
sub
stos
rcrl
ret
ds
fstps
stos
xlat
int
loop
les
cmpsb
add
mov
rcr
je
jbe
mov
lahf
lock
decl
cmpsb
mov
incl
add
in
test
push
xor
sbb
jne
jbe
fildll
enter
cmp
add
lret
mov
pushl
sbb
aas
mov
push
jmp
push
repnz
ljmp
mov
mov
xor
sahf
cmp
outsl
cmpsl
push
jmp
movsb
xor
movsl
imul
jecxz
cmp
and
or
dec
lea
push
xor
shll
ljmp
fstl
call
scas
bound
pop
cmp
iret
stos
popf
xor
sub
dec
fcompl
arpl
int
mov
call
push
adc
adcl
aam
inc
adcl
cld
lcall
add
pushl
xor
incl
inc
and
incl
icebp
and
faddl
int3
jge
push
mov
mov
mov
jne
pop
insb
jb
jnp
ds
das
fidivrs
push
pop
mov
mov
lea
out
imul
jp
bound
aaa
jbe
push
dec
jp
es
sar
sub
jbe
mov
popa
sub
sub
mov
es
mov
fdivr
inc
into
rcll
jg
imul
xchg
out
inc
lret
xor
ret
xchg
call
ljmp
call
outsl
jae
mov
imul
or
stc
pushl
add
insb
ljmp
lea
adc
stos
push
push
test
sub
xor
insl
mov
popw
xlat
and
fadds
jmp
das
cwtl
add
lods
push
call
outsb
es
test
adc
gs
xor
imul
pushl
add
adc
jge
pop
fidivrs
scas
lods
decl
mov
jmp
aam
cwtl
mov
push
add
mov
push
cltd
test
xchg
rcrl
ljmp
cmc
movsb
fcmovb
mov
loop
stos
scas
pop
sub
cli
sets
data16
test
inc
sar
xor
mov
jnp
pushl
jns
add
imul
addr16
jae
in
push
mov
in
jno
pop
cmp
ljmp
and
sub
les
and
icebp
mov
incl
inc
mov
aad
jno
fwait
adc
lcall
or
pop
xor
and
xor
icebp
pop
mov
push
ljmp
and
popa
sahf
fldz
xchg
insl
jne
decb
ret
jo
jmp
lds
jge
push
pop
outsb
pop
ss
aas
dec
xchg
mov
pop
ljmp
push
mov
mov
cmp
mov
push
insl
shrl
dec
inc
shrl
pop
pushf
ss
jg
sbb
xor
dec
jo
pop
outsl
bound
adc
shrb
scas
lret
cmc
and
sub
aaa
bound
mov
cmp
cs
imul
xchg
jecxz
or
pop
jns
or
push
jmp
push
cmp
leave
sbb
pop
dec
les
sbb
das
xor
xchg
inc
sub
mov
jmp
mov
mov
xor
sti
addr16
cmpsl
es
sbb
sub
aam
dec
gs
cmp
adc
lcall
std
sbb
add
stos
mov
inc
pop
stc
fstl
jne
shll
mov
incl
jo
pop
dec
cli
inc
jmp
imul
push
inc
cli
into
divb
jmp
dec
cmp
sbb
dec
adc
and
outsl
in
xchg
data16
lock
orb
loopne
mov
pushl
xor
or
test
pushl
aam
jl
outsl
mov
mov
xorb
rolb
adc
cld
sahf
fidivrs
push
fdivr
cmp
rorb
hlt
xor
inc
imulb
and
jmp
adcb
or
les
mov
mov
popa
lcall
jle
jg
push
mov
pop
mov
roll
out
xchg
aaa
inc
push
or
dec
or
mov
jmp
xchg
or
mov
inc
dec
je
cld
inc
jno
jmp
gs
daa
cli
icebp
push
inc
rorl
or
cmp
jmp
lea
call
enter
repnz
movl
dec
test
fisubl
xor
repz
jecxz
push
add
scas
push
scas
xchg
add
enter
std
stos
xchg
cld
sbb
mov
lcall
aas
iret
mov
jne
fcmovbe
mov
fdivl
rclb
test
jge
mov
push
decl
mov
sbb
add
in
xchg
and
sub
xchg
in
sbb
mov
insl
sbb
adc
addl
jge
test
popa
cmc
insl
pop
js
inc
dec
dec
push
xchg
call
cmpsl
in
inc
jp
ljmp
imul
dec
fildll
adc
mov
into
aaa
xor
mov
cmc
test
int
and
fnsave
jmp
xchg
int
adc
addr16
jmp
add
sbb
imul
fnstenv
mov
jae
dec
adc
inc
jmp
fucomip
xchg
nop
cmp
ja
sbb
pop
incl
stos
push
mov
enter
ret
sti
pop
popf
or
mov
sbb
setg
mov
sbb
cmp
jle
xor
mov
and
decl
addr16
pop
cmp
arpl
push
cmp
in
fwait
pushf
xlat
icebp
das
pop
push
data16
mov
stc
aaa
imul
rclb
lret
push
mov
das
dec
mov
cli
jbe
arpl
jle
fisubs
mov
call
inc
adc
jo
in
loope
cld
sbb
push
push
xor
cmpsl
push
aam
int
out
jecxz
push
jmp
sub
jg
mul
insb
or
movsb
pop
xchg
loope
mov
or
push
int3
outsl
lret
lcall
stos
addl
out
sub
ficoms
fsubrl
adcl
jg
xchg
hlt
inc
fisttpll
clc
fwait
outsb
lods
loopne
pop
mov
loopne
outsb
lods
repz
mov
push
loop
dec
test
mov
push
inc
das
pushf
enter
and
add
jnp
out
aam
cmp
xor
jmp
js
pop
into
std
test
sbb
subl
stos
cld
dec
inc
repz
inc
mov
and
mov
lock
push
fcomip
xor
adc
repnz
jp
lea
mov
idiv
rclb
das
push
mov
jl
sub
and
adc
aad
jno
loope
out
decl
xor
jnp
xchg
dec
cmpsb
sbb
je
nop
sahf
fdivs
sub
pushl
inc
adc
mov
shrl
mov
shll
shl
xchg
repnz
inc
jle
mov
insl
push
xchg
ret
and
pushl
inc
push
mov
inc
adc
das
and
lea
out
pushf
stc
dec
sub
xchg
lahf
lcall
jno
int3
mov
xchg
push
xorl
xchg
insl
cld
cmp
cmp
das
push
lock
push
ss
adc
mov
scas
pop
fidivl
mov
fistl
loope
arpl
sbb
cmpsl
roll
inc
ljmp
add
daa
and
orb
movsb
decl
inc
mov
push
jae
cmc
mov
add
dec
mov
rcr
pop
xchg
push
ja
cmp
lret
inc
push
cmp
or
xor
lret
sbb
mov
sub
mov
xor
mov
pop
clc
cmp
sti
sbb
lret
hlt
aad
adc
icebp
hlt
pop
shrl
jmp
dec
push
adc
repz
adc
adc
pop
xchg
mov
fsubrs
and
push
sar
icebp
xchg
dec
std
lods
cmp
pop
xor
inc
fcos
insb
mov
sar
jne
negb
push
mov
push
mov
pop
cmp
inc
and
push
sar
inc
jbe
icebp
xor
repz
cmp
xor
cld
insb
push
cmp
ljmp
cltd
sub
loop
loope
pop
mov
sbb
cmc
mov
in
ljmp
jo
or
jge
push
jg
inc
pop
loopne
dec
jge
cmp
sbb
call
cmp
dec
adc
fs
fcmovbe
push
movsb
xlat
testl
push
pop
add
mov
je
std
adc
nop
dec
stc
bound
incl
or
fwait
cmp
mov
xchg
aas
mov
addl
ret
push
call
test
inc
decl
les
jmp
aam
ljmp
xchg
dec
clc
fildll
push
decl
andl
push
pop
call
jle
shlb
insb
inc
cmp
enter
sbb
pop
std
cli
insl
jge
daa
shrl
insb
stos
scas
mov
cltd
out
mov
xor
cld
hlt
es
sub
outsl
cmp
fildll
mov
pushf
mov
pop
xchg
ljmp
jae
inc
sbb
test
hlt
in
jg
jnp
xchg
js
inc
pushl
sub
aam
test
jns
mov
pop
outsl
jg
gs
lret
call
ret
and
mov
out
or
fidivrs
out
pop
dec
mov
jmp
adc
push
loopne
jmp
adc
fidivl
mov
aaa
incl
cwtl
aas
mov
pop
jg
jns
insb
cld
outsl
daa
adc
in
in
rcrb
in
int3
bnd
out
fdivr
or
push
icebp
jmp
adc
sbbl
push
jl
push
out
movsb
pop
shlb
mov
xlat
incl
or
dec
jle
incl
mov
pop
neg
mov
xor
js
add
cmp
inc
cli
or
inc
jne
mov
mov
inc
push
pop
insb
pop
jnp
incl
jle
pusha
sub
dec
mov
sub
fsubrs
cmc
lret
sbb
push
sbb
fidivrs
adc
xchg
pop
sbb
aas
idiv
fwait
mov
or
das
lea
addl
ss
lods
push
xchg
pushl
pop
push
inc
mov
and
inc
mov
pushl
out
xlat
incl
sbb
decl
sub
mov
in
adc
inc
stos
or
mov
decl
and
repz
cltd
jecxz
ret
adc
xlat
pushl
add
test
push
mov
ja
cmp
mov
mov
sbb
fidivrs
mov
lret
pop
adc
push
lds
mov
aad
cmp
mov
jnp
scas
ljmp
inc
adc
lcall
clc
stos
pop
lock
iret
mov
lock
ja
cwtl
mov
mov
xchg
out
lods
fcos
popf
push
xchg
cmp
loopne
dec
lods
pop
leave
js
call
decl
mov
cwtl
call
inc
mov
jmp
lahf
jo
pop
jnp
clc
push
loope
xor
mov
inc
push
mov
fdivs
insl
inc
pop
and
pop
lcall
pop
or
mov
or
add
xchg
in
push
dec
sbb
jb
jns
cmc
pop
xchg
dec
push
lock
lcall
dec
verr
dec
cmp
je
repnz
or
mov
je
lcall
push
ja
fistpll
mov
aaa
jle
inc
dec
mov
jp
ja
loopne
lcall
cmpl
mov
sbb
or
call
xchg
xor
and
pop
cli
rclb
and
pop
adc
inc
ljmp
pusha
notb
mov
dec
outsb
or
jmp
ss
push
cmpl
inc
push
pop
int3
into
ja
incl
sbb
xor
mov
mov
xchg
cld
sbb
dec
jne
jbe
aaa
push
call
mov
ret
loop
clc
and
stos
add
jp
outsb
cmp
and
jmp
mov
out
jno
stos
popa
fcmovbe
or
sbb
dec
das
mov
push
jge
leave
cltd
jmp
mov
or
aam
dec
adc
sbb
dec
jmp
cmc
aad
lret
add
xchg
inc
cld
xor
push
pop
call
xchg
bts
pushl
lds
repnz
fsubs
ss
aaa
adc
pusha
dec
mov
push
cltd
loopne
movsb
orps
movsl
fbstp
pop
out
lds
call
out
lds
std
aas
push
insl
fiadds
std
lcall
pop
push
imul
cmp
and
daa
pop
das
movsb
add
xchg
fbstp
inc
pop
ljmp
jo
jmp
cs
in
imul
out
dec
popa
add
gs
std
popa
dec
lret
lcall
push
hlt
fcmovnu
cmpsb
jecxz
and
icebp
das
and
adc
inc
cmc
mov
and
enter
fsubrs
shl
mov
pop
mov
or
clc
shrb
jns
lahf
lret
decl
dec
pop
mov
jge
pop
xor
jno
cmp
addr16
flds
sub
mov
jmp
mov
leave
jae
cld
mov
mov
cli
pop
imulb
sub
ret
cld
adc
sbb
repz
sub
inc
inc
mov
ljmp
mov
imul
insb
repnz
sub
test
cmc
dec
pop
rol
ljmp
mov
fidivrl
pop
and
xor
clc
mov
lock
shll
jmp
dec
in
cmp
mov
xor
inc
ljmp
add
imul
jl
ror
mov
rolb
shll
les
rorb
mov
mov
mov
pushl
cmp
dec
xchg
ljmp
pop
cmp
std
inc
test
pusha
es
ds
neg
nop
std
push
sbb
out
out
das
xlat
mov
push
xchg
add
stos
cmp
add
jg
mov
push
std
push
mov
jg
xchg
cmp
xchg
dec
fisttps
jmp
decl
in
sbb
pusha
pushf
mov
sar
inc
hlt
repz
xor
test
mov
leave
push
mov
pop
adc
clc
dec
and
adc
inc
cmp
call
push
inc
add
movsl
stc
je
xor
cmp
cli
pop
out
adc
pop
lcall
add
sbb
adc
mov
adc
ss
pop
into
jmp
sub
push
imulb
inc
push
push
and
xor
std
xor
mov
sub
jmp
and
ljmp
sbb
test
lock
mov
test
movsl
jns
mov
lock
fsubrs
mov
mov
rclb
cmp
push
lods
sub
mov
testl
push
mov
sub
out
cli
cld
mov
push
cmp
push
jle
jmp
push
aas
sub
sub
pop
ljmp
or
mov
or
decl
adc
lock
jmp
cmp
call
imul
mov
stos
ret
fdivrp
xchg
lea
fstpl
mov
cmpsl
std
sub
notl
inc
test
pusha
imul
inc
pusha
enter
or
into
pop
push
idiv
pop
decl
or
call
enter
fwait
in
sti
clc
sbb
in
daa
fidivs
lret
hlt
or
mov
das
jmp
ds
dec
pop
popf
xor
int
bound
mov
adc
decb
mov
sub
aaa
push
mov
test
push
inc
mov
inc
mov
mov
leave
call
jns
call
testb
or
pop
dec
pop
cs
test
sbb
sub
mov
pop
inc
cmp
lods
aas
push
lcall
dec
fsubr
xchg
jecxz
xchg
dec
out
cmc
imul
fmul
add
incb
out
lods
add
notb
jg
call
cltd
movsl
add
and
mov
mov
fucomp
mov
push
sub
mov
nop
jae
gs
push
lcall
add
ljmp
mov
aam
mov
inc
jo,pn
das
fcompl
adc
ret
jmp
int
jecxz
iret
incl
inc
test
call
rorb
cld
jns
js
xchg
jo
clc
das
dec
adc
add
jb
incl
and
lcall
jl
call
ss
idiv
xor
push
sub
leave
mov
dec
adc
and
mov
sarl
pushf
jmp
mov
rcl
cli
cltd
jge
add
std
dec
bnd
test
inc
pusha
adc
out
lds
xor
lcall
push
jmp
xchg
mov
cmpsl
testl
push
xchg
cmpsl
stc
lret
cld
jge
fistpll
repz
fstpl
fists
out
xor
pushf
jl
sahf
call
andb
jo
sbb
push
xchg
int3
dec
dec
arpl
mov
pop
ret
or
mov
fidivs
mov
or
pop
sub
scas
cmp
aaa
mov
cmpb
pop
cmpsl
icebp
lahf
int3
inc
das
das
xchg
xor
xlat
decl
cld
jl
xacquire
jmp
pop
stos
pop
es
rcll
mov
fdivr
mov
btc
pop
aaa
jo
mov
or
lds
mov
addb
mov
scas
adc
ret
rorl
sbb
jmp
xchg
mov
jbe
cmp
sahf
cmp
pop
and
loop
pop
sahf
rcrl
mov
je
dec
push
notb
mov
popf
incl
aaa
push
out
incl
and
loope
loop
sar
xchg
dec
shr
cmpl
jae
int
lcall
sar
add
and
mov
in
xchg
cli
mov
push
dec
mov
stos
mov
scas
add
mov
stc
sbb
mov
jo
loopne
adc
insl
fcos
popa
das
push
mov
test
inc
ljmp
adcl
xchg
inc
incl
xor
out
bsr
ljmp
xchg
test
cs
jmp
out
cltd
jg
int3
xchg
sub
cli
out
jae
mov
ljmp
jae
shrl
xchg
div
sbb
add
pushl
icebp
cwtl
add
fs
mov
xor
and
adc
push
incl
andb
cwtl
push
lcall
stos
outsb
mov
xlat
cmpb
fs
sbb
andl
inc
sub
sar
push
mov
ja
sahf
xor
adc
adc
movsl
ljmp
mov
pop
push
inc
fadds
ljmp
mov
iret
jg
loop
xchg
popa
push
lcall
sbb
cli
stos
push
pushf
jg
add
pop
fs
aaa
scas
ja
mov
mov
in
das
test
push
call
mov
test
call
outsb
xchg
iret
sbb
and
push
arpl
movsl
ljmp
inc
lock
jmp
adc
cmpsb
pop
scas
leave
push
mov
daa
cmp
and
fwait
sbb
mov
mov
incl
testb
call
popa
xlat
xor
dec
pop
mov
sarl
xor
call
scas
jno
lcall
int3
pop
mov
inc
inc
or
push
push
inc
cli
xor
sbb
imul
cmp
aad
fbstp
xchg
cpuid
mov
scas
jg
loopne
out
testb
lcall
into
das
ds
push
jne
mov
ja
push
pop
cs
sub
jge
mov
cld
incb
decl
lahf
pop
ud0
push
ja
testb
stos
daa
mov
test
cmc
cmp
push
add
in
pop
scas
and
pop
lods
lcall
ljmp
push
jmp
jp
js
pop
push
leave
cmp
mov
adc
adc
sub
call
jl
imul
mov
mov
mov
push
and
inc
cld
scas
mov
sbb
xchg
test
je
cmp
outsb
jnp
cmp
pusha
push
jmp
js
push
jecxz
adc
add
hlt
adc
repnz
jmp
cwtl
jge
inc
pusha
xor
sbb
cld
or
das
rcrb
jp
aam
sbb
cs
incl
mov
ljmp
shrb
divb
iret
sub
pop
hlt
fwait
fmul
lret
xor
sahf
lea
or
jns
call
pop
movsb
mov
jp
mov
adc
inc
aam
mov
fwait
cs
cmp
ja
outsb
lcall
mov
sub
mov
add
cmpsb
sbb
ljmp
xlat
test
loop
lea
orl
xor
dec
popa
jp
mov
sbbl
jge
mov
jl
les
jmp
cwtl
iret
inc
call
fnsave
pushl
cwtl
mov
lcall
adc
call
xchg
cmpsl
sub
dec
bswap
push
movsb
lods
xor
xchg
loopne
xchg
outsl
mov
pop
or
sub
pop
dec
mov
pop
clc
lcall
jge
mov
mov
ljmp
enter
xchg
push
push
fsubrs
mov
adc
cmpsl
sahf
mov
inc
add
dec
jp
imul
cmpsb
loope
sub
mov
add
or
shrb
or
jg
in
jecxz
add
sahf
cwtl
aad
pop
pop
push
aam
mov
mov
jge
jmp
outsb
sti
dec
imul
adc
cmp
push
mov
mov
call
mov
mov
outsb
xchg
test
arpl
rol
jo
in
mov
lcall
inc
scas
cmp
call
les
call
jl
xor
push
push
adc
and
cli
scas
test
dec
ss
imul
mov
mov
les
xchg
sar
jmp
outsb
push
add
decl
dec
out
lods
jecxz
xchg
aaa
pop
in
mov
jmp
xchg
andb
stos
cmp
inc
call
mov
mov
sub
test
sub
add
or
push
push
fwait
pushl
add
dec
push
mov
lcall
jnp
idivl
fdivrl
mov
push
push
dec
xchg
sbb
fstpl
add
pop
push
std
daa
push
lods
xor
dec
dec
out
ljmp
test
ljmp
mov
mov
rcll
sub
jl
scas
std
es
jno
incl
inc
mov
push
push
mov
test
incl
xchg
scas
inc
insb
and
and
loopne
int
fimull
cld
dec
fwait
mov
pushl
push
jmp
sub
and
adc
out
into
call
fisttps
dec
std
test
jl
mov
add
mov
add
jmp
aas
cmp
cmpb
insl
decl
and
mov
call
jae
outsl
lahf
xchg
push
in
dec
sbb
dec
cmpsb
fstpt
je
push
push
or
push
add
sub
subl
pusha
rol
dec
cmp
adc
adc
or
std
inc
cmc
loope
aam
hlt
lcall
cmp
mov
push
jbe
js
mov
sub
loope
stos
clc
jp
addl
pop
pushl
test
popf
push
push
push
pop
jo
sbb
call
pushf
mov
ljmp
adc
decl
scas
dec
into
loope
xchg
push
lods
pop
push
les
insb
add
push
cmc
jmp
xchg
orb
xchg
push
sub
shrb
inc
aaa
sar
aaa
ljmp
lret
push
repz
jmp
mov
adc
js
addl
cltd
mov
into
xchg
aad
subl
push
jne
arpl
and
cmpsl
xor
xchg
outsl
pop
mov
fdivr
call
repnz
mulb
setb
ds
push
jmp
cmpb
incl
pop
outsb
test
xor
adc
or
ljmp
sub
xlat
call
push
or
push
mov
xchg
xor
dec
pop
ret
xor
inc
std
pusha
pop
pop
inc
mov
inc
push
mov
pop
sbb
fstl
sub
imul
sti
cli
sahf
out
hlt
out
fs
adc
ja
movsb
imul
mov
pop
sbb
cltd
mov
pop
add
cmp
ret
outsb
mov
nop
sbb
jge
out
cs
push
mov
adc
xlat
mov
push
dec
clc
stc
clc
mov
leave
in
add
sti
out
jns
mov
loopne
pop
fistpll
clc
sub
aaa
xor
outsb
dec
mov
or
and
inc
fbld
dec
popa
or
sbb
movsl
dec
aad
xorl
incl
push
jb
out
dec
or
movsb
ljmp
loop
jne
std
xchg
pushl
data16
mov
icebp
push
jmp
popa
xchg
bnd
pop
sbb
and
out
cmpsb
cld
sbb
test
clc
mov
pop
icebp
sbbl
popf
cmp
cs
decl
ret
out
cwtl
cld
in
movsb
movsl
nop
inc
ljmp
lea
dec
add
and
sbb
jecxz
and
faddl
lret
das
xor
pop
outsl
dec
xchg
cmp
dec
fistps
cmp
pop
jns
gs
jg
addl
fwait
imul
xor
out
je
addr16
fsts
push
jno
xor
and
mov
push
cld
test
push
cmp
cmp
pop
cs
ss
sbb
out
mov
xchg
cmp
call
cli
ja
push
xchg
sbbl
xor
cmp
and
outsl
pusha
lea
jno
dec
mov
jmp
jg
cltd
xor
sub
insl
je
jbe
insb
push
sahf
mov
mov
add
cmp
push
ret
jnp
pop
lods
out
lahf
dec
test
mov
pop
or
mov
xchg
push
daa
pop
fistpl
push
stos
cwtl
xor
jmp
lods
or
cmc
decl
cmp
ljmp
xchg
loope
mov
cs
sbbl
lcall
jb
mov
in
cld
inc
les
enter
out
xchg
int3
mov
mov
int3
stos
popf
int3
pop
push
popf
repz
movsb
insl
incb
mov
sbbb
xchg
and
push
sub
mov
adcl
cs
pop
cmp
decl
stos
sahf
sub
inc
push
enter
inc
or
cld
jmp
pop
jle
test
std
push
leave
out
jns
dec
stos
add
loopne
pop
inc
cmp
pop
mov
jmp
fldenv
ljmp
cwtl
subl
pop
ja
lcall
jb
in
jp
xchg
xchg
js
sti
mull
out
in
subl
test
push
jp
cs
sbb
cmp
test
popa
mov
mov
in
jmp
xchg
mov
hlt
and
cli
out
js
lcall
cmp
add
pop
daa
adc
adc
or
push
jge
jle
icebp
push
xchg
sub
call
jnp
ret
fldt
push
ljmp
sbb
cmp
in
mov
js
rcr
insb
and
call
sub
ret
idivb
daa
or
cmp
sbb
mov
mov
jge
pop
faddl
fs
jmp
rorb
jbe
mov
fcmovu
xor
sar
push
lods
inc
stos
or
pop
sbb
adc
ljmp
or
cmpsl
mov
loope
decl
outsb
and
xchg
sti
sbb
imul
pop
mov
jmp
data16
or
ljmp
in
aas
dec
xor
sbb
pop
aad
or
or
inc
out
mov
add
movsb
and
adc
sbb
mov
push
incb
aam
bound
xchg
fisubrs
lcall
sub
stos
in
stc
lcall
popl
adc
jo
lcall
cmc
test
dec
cmp
lods
out
movsl
mov
lock
cmp
inc
push
mov
sub
mov
out
int
push
cmp
hlt
lds
dec
jo
xor
add
sbb
jmp
mulb
inc
xchg
sar
rcrl
push
xchg
pop
fsubl
inc
mov
mov
adc
mov
imul
ljmp
int3
jmp
add
lcall
jp
mov
loope
shl
pop
or
testl
or
lea
sub
jmp
adc
sub
data16
mov
lods
stos
or
mov
not
pushl
push
mov
mov
dec
cmp
sbbb
outsl
add
xorl
cmp
cmc
mov
incb
lods
fwait
push
lcall
sub
mov
mov
inc
xchg
std
scas
pop
jp
lcall
loop
int3
call
shl
ret
xchg
decl
cmpsb
daa
rcrl
push
arpl
or
outsb
icebp
push
sar
mov
cmp
push
dec
mov
data16
mov
in
mov
mov
in
adc
push
loopne
shl
pop
or
mov
out
ret
dec
stos
lcall
int3
add
aas
and
push
dec
mov
jle
imul
jle
xchg
fdivr
push
in
orb
movsl
mov
xchg
mov
push
int3
push
iret
enter
stos
xor
call
mov
mov
xor
out
hlt
push
decl
movsl
and
fs
js
adc
ret
add
push
pop
xor
inc
mov
mov
cld
call
mov
sbbl
mov
daa
ja
call
sbb
aas
out
data16
mov
add
cwtl
jmp
sbb
std
jp
mov
in
push
sbb
decl
inc
in
xor
push
sar
ss
mov
inc
decl
call
mov
into
mov
lret
call
cmp
jae
sub
sub
movsl
jmp
jo
cmp
repnz
adc
or
mov
scas
pop
lds
or
lret
cld
out
sub
aam
sbb
jae
fdivr
clc
jl
push
testb
dec
rcr
dec
incl
test
cmp
cmc
cmp
pop
aam
ljmp
lahf
sbb
mov
mov
mov
jl
mov
in
incl
mov
cmp
mov
subl
fs
dec
loop
rolb
pop
loopne
cmp
and
push
hlt
add
inc
lea
or
mov
jmp
mov
call
sub
sarl
sub
pop
incl
movsw
ret
mov
outsl
push
and
clc
sub
cmpsb
movsb
dec
add
std
sti
insl
fiadds
loop
rcrl
and
loop
decl
mov
fwait
stos
pop
loop
int
leave
lahf
fimuls
jmp
sbb
lock
incl
into
int3
pop
pushl
sbb
stc
aad
adc
pop
stos
fdivrs
imul
orb
and
cmp
aas
ds
stos
and
sarl
cmp
xchg
adc
pushf
out
pop
cltd
aam
shrl
shl
adc
adc
mov
lcall
xchg
ljmp
sahf
les
adc
repz
dec
movsl
jbe
idiv
fwait
out
mov
xchg
ds
pop
int
lock
push
cmpb
das
inc
aam
dec
ljmp
cmp
fdivrp
cli
pushf
daa
ficomps
lret
add
mov
addb
sub
hlt
cmpsl
push
push
push
jb
call
pop
jno
adc
mov
jb
dec
movsl
mov
cwtl
push
sub
dec
dec
daa
test
outsl
jns
int
call
inc
fldl
jno
fstl
lds
mov
addl
in
inc
dec
push
cmp
dec
aas
mov
cld
adc
outsl
xchg
jmp
pop
push
mov
shl
dec
lods
jnp
inc
add
icebp
in
inc
push
dec
leave
cmp
out
les
cmpsb
push
inc
icebp
je
pusha
jl
fiadds
mov
repnz
inc
mov
and
or
mov
inc
sub
or
jg
test
incl
mov
sub
loope
and
cs
out
sub
add
js
xchg
mov
mov
push
push
or
dec
mov
inc
lods
int
pop
inc
call
lds
movsb
pushl
jae
xchg
mov
push
adc
push
loopne
jb
and
add
mov
add
mov
add
inc
outsl
insl
rolb
fisttpll
pusha
js
or
fisttpl
insl
inc
incl
dec
add
and
ret
in
mov
sub
ret
add
jne
push
xlat
pop
and
fisttpl
loopne
sub
sub
pop
mov
scas
or
inc
pop
cmpsb
mov
jp
jb
lods
ds
je
cmpsl
test
xor
adc
cltd
bound
aaa
inc
mov
lcall
lret
jae
aad
jl
sub
orb
mov
xlat
dec
stc
and
jl
lret
in
out
xchg
pop
pop
cmp
and
mov
ss
jl
scas
sahf
xchg
std
inc
dec
in
xor
adc
jle
pop
movsb
sub
ljmp
inc
push
sahf
arpl
add
jp
mov
call
jmp
ljmp
sub
fsubrl
movsl
mov
incl
sbb
popf
lcall
mov
cmp
mov
std
adc
mov
xchg
shl
mov
jno
inc
pop
std
sbb
fsts
movb
ss
xor
call
clc
test
dec
mov
xor
pop
sub
cmp
outsl
insb
dec
lock
gs
xor
lock
xchg
ljmp
loop
inc
dec
add
clc
mov
aaa
inc
in
daa
push
mov
call
mov
clc
imul
sti
mov
jle
jmp
lds
jmp
pop
shl
adc
fstpl
inc
mov
std
loopne
lahf
push
jecxz
scas
lods
imul
test
or
pop
cmpsl
or
dec
stc
xchg
dec
push
filds
pop
int3
mov
call
stos
push
movsb
aam
lcall
in
xchg
fmul
sbb
xor
and
jg
out
adc
xchg
pop
jmp
in
sub
jmp
push
sub
xchg
or
popa
call
add
inc
mov
xchg
arpl
cmp
mov
xchg
push
sub
mov
stos
add
add
sub
cli
mul
insl
mov
fbld
lock
mov
pop
dec
call
aad
icebp
mov
add
jg
pop
xchg
lcall
je
out
incl
inc
or
stos
mov
rol
decl
frstor
in
xchg
fisubl
jle
call
xchg
mov
xor
idivl
out
add
xchg
mov
repz
adc
mov
fisubrl
lods
jmp
adc
incl
popa
pushl
push
into
or
inc
dec
dec
stc
jge
adc
push
ret
jge
mov
cmp
add
fnstenv
mov
mov
clc
lret
and
dec
mov
xchg
cmpsb
decl
out
xchg
stc
imul
sahf
mov
mov
jmp
pop
ljmp
xlat
pop
ret
sub
jmp
or
cwtl
decl
pop
sbb
jmp
test
pop
cld
sahf
scas
jecxz
sbb
push
add
jmp
in
pop
dec
mov
clc
inc
jle
seta
sqrtps
fildll
dec
or
mov
mov
add
pushl
push
and
jbe
test
dec
pop
or
sbb
loopne
push
scas
ds
sarb
push
call
mov
js
add
call
add
in
pop
pop
xor
lcall
sbb
push
lods
insl
pusha
lahf
push
mov
add
aam
mov
test
call
repz
repnz
jnp
push
mov
clc
sub
inc
aaa
add
call
pop
push
inc
jmp
std
out
loope
pusha
iret
mov
ss
call
jge
mov
lds
out
js
pop
filds
add
and
mov
pop
dec
lahf
xor
cmp
cmpsl
pushl
xchg
mov
fisubl
or
or
rcll
mov
cmpsl
les
push
js
loop
pusha
xchg
ffreep
call
push
mov
dec
adc
das
imul
movsb
mov
stos
dec
dec
jg
lds
or
subl
mov
mov
cmp
lcall
jns
imul
testl
ljmp
leave
or
sti
push
dec
aaa
xchg
aam
and
out
add
incb
xchg
ds
push
leave
test
ljmp
out
xlat
cmpsl
loope
fists
insl
std
aaa
or
rep
push
hlt
sbb
and
stos
test
cmpb
movsl
leave
pop
cli
ds
jp
lods
aaa
imull
mov
add
cmp
fsubr
mov
mov
lcall
gs
lret
outsl
fs
xor
pushl
test
add
sub
das
call
sub
mov
mov
getsec
push
pushl
mov
cld
out
pop
sub
mov
or
movsb
push
test
in
mov
test
jb
fwait
jb
decl
aad
sbb
xchg
push
in
iret
je
ljmp
xorl
leave
or
call
and
push
roll
out
pushf
push
fnsave
dec
lock
ljmp
test
jae
mov
mov
shll
jb
mov
dec
aad
sbb
out
mov
lock
mov
pushf
ljmp
movsb
jg
shr
adc
or
pop
inc
mov
xchg
aad
jmp
test
pop
adc
les
cmp
jb
ret
test
jle
les
insb
mov
lods
test
sbb
pushl
orb
test
jb
scas
inc
int
mov
stos
push
fdivr
sub
pushf
addb
ss
popf
xchg
sub
xor
mov
mov
xchg
pop
ljmp
dec
xchg
js
in
in
pop
std
or
das
je
xchg
ljmp
lcall
jno
in
pop
push
push
or
rcll
pushl
mov
jle
bound
in
adc
fildll
mov
imul
cmpsl
fwait
popf
cld
insl
pop
adc
call
jmp
dec
adc
cs
cltd
adc
mov
out
mov
pop
cmc
rolb
ljmp
xchg
cmc
cmpsl
movsl
dec
jno
sub
loope
ljmp
jmp
lock
inc
stc
loopne
mov
jno
leave
lods
in
int3
pop
insl
cmp
lret
incl
mov
dec
test
xor
popf
xor
out
xor
cld
aam
adc
dec
stc
pop
xchg
push
loop
in
fistpll
jae
pop
enter
outsl
add
lcall
cmp
cmp
hlt
lahf
in
incl
mov
jge
out
aad
adc
outsl
cmc
stos
nop
out
lods
lahf
mov
push
test
insl
inc
sbb
sub
dec
or
push
or
popf
fadd
int
jle
int3
incl
pop
pop
xchg
cld
sub
sub
push
std
cmp
dec
cmp
pushl
pop
sbb
fists
jno
shrl
clc
or
sub
pop
jo
ja
or
and
mov
xchg
fidivl
cs
push
repz
sub
inc
mov
mov
lea
push
stos
or
push
ja
push
pop
cld
cltd
mov
inc
adc
out
pop
sub
and
movsb
test
pusha
mov
inc
adc
mov
pop
add
sub
push
ds
adc
mov
mov
imul
jne
fstl
pushl
pop
pop
ds
decl
clc
orl
cmc
pop
mov
xlat
mov
test
pop
xor
lods
push
jns
pusha
test
or
clc
les
fldt
in
insb
das
xchg
adc
sub
cmpsl
jnp
ret
sahf
mov
test
push
fisubrs
mov
xor
js
xchg
mov
mov
mov
outsl
sbb
xor
ljmp
xchg
or
leave
dec
mov
sub
je
movsl
imul
in
rcll
lahf
fdivrs
xchg
inc
incl
cmp
popf
in
ss
lock
cmp
outsl
fiaddl
inc
ljmp
ja
je
test
or
cmc
or
ret
icebp
jne
cltd
sbb
into
push
jo
iret
jns
in
mov
js
hlt
sbb
lcall
inc
sbb
incb
ds
or
mov
push
sub
mov
pop
mov
push
push
mov
mov
idivb
loop
cs
fildll
xor
into
inc
mov
add
push
outsb
stc
lods
pop
fbld
decb
addr16
push
lea
mov
cmp
or
arpl
push
out
cltd
das
fisttpl
push
hlt
cld
icebp
xchg
das
pop
shlb
test
incl
test
mov
clc
pushl
fs
xor
pop
addr16
cli
xchg
mov
jmp
cmp
sarb
mov
ljmp
daa
or
mov
push
xor
outsl
jno
mov
test
lea
ljmp
test
js
aaa
jno
lcall
xor
incl
int
push
dec
or
jmp
jo
inc
das
ljmp
jbe
subl
mov
pusha
xor
lcall
into
dec
arpl
mov
mov
xor
xchg
xchg
dec
imul
dec
or
enter
ud0
enter
scas
push
xchg
mov
mov
divl
cs
and
out
push
fists
mov
pop
jbe
jmp
sbb
mov
inc
outsl
dec
popf
data16
adc
fsub
mov
mov
jge
ds
int3
imulb
and
loopne
pushl
xchg
cs
mov
cli
xchg
decl
in
push
decl
mov
cli
pop
add
dec
movsl
cmp
shl
testl
mov
test
cmp
mov
add
jns
cmp
mov
add
inc
xor
inc
cmp
leave
ljmp
and
or
jne
ss
pop
ljmp
out
sarl
sbb
pop
jl
cwtl
sub
sub
das
fnstcw
pop
ja
stc
mov
jno
decl
mov
jecxz
sbb
pushl
gs
lock
mov
xor
mov
in
mov
cmpsl
cmp
mov
fs
int
rolb
mov
ljmp
loopne
jp
repz
out
pop
es
jnp
push
xchg
pushl
pop
jp
cld
or
or
dec
test
jmp
fnstsw
jle
mov
incl
mov
adc
jp
fstps
pop
xlat
cmc
mov
push
decl
or
inc
push
fs
mov
cvttps2pi
adc
cmp
addl
cmp
loopne
out
cld
out
lahf
into
leave
cmp
push
mov
stos
mov
mov
xchg
subb
cli
ja
ret
mov
out
repnz
push
lret
sbb
add
lea
jbe
aas
cltd
sbb
insb
xchg
dec
pusha
add
mov
jmp
xchg
sbb
adc
pause
mov
cltd
out
stc
data16
imul
decl
in
sub
into
jmp
mov
cwtl
out
mov
cmp
insl
add
inc
xchg
lods
sbb
insb
dec
std
test
cltd
sbb
test
add
adc
push
test
ret
out
cmp
gs
std
dec
jl
call
bound
mov
or
sahf
cmp
dec
push
out
or
or
mov
imul
and
idivb
test
sub
dec
das
mov
pop
js
cmp
les
jp
mov
test
lahf
adc
or
mov
sahf
sub
test
jbe
sbb
fisttps
shrb
cmp
pusha
sbb
int3
clc
into
pushl
in
mov
sbbb
roll
das
sbb
ret
mov
pop
xchg
dec
fldl
push
cmp
pop
pop
call
in
pop
lcall
neg
jmp
rorl
leave
jmp
sbb
insl
and
push
popf
adc
cli
sar
or
out
pushl
gs
xchg
mov
inc
push
or
cmpsl
pop
ret
pop
push
xchg
pop
add
test
push
xorl
pop
enter
inc
loope
push
insl
es
push
sarb
data16
add
jns
in
cltd
jg
fidivrl
cmpsl
sbb
popa
idivl
jae
es
cwtl
xor
cmpsl
lea
mov
mov
add
xchg
and
cld
pushf
popa
cmp
orb
lcall
movsb
inc
cmp
xor
or
aaa
mov
test
dec
lock
mov
push
jnp
jbe
push
pushf
cmp
es
mov
or
cmpsb
mov
into
jbe
out
sti
inc
insb
xchg
shrl
shll
div
jae
lds
das
lahf
into
xlat
in
ljmp
xor
addl
insb
out
jnp
mov
xchg
movsl
call
or
gs
push
mov
add
rclb
adc
stc
adc
movsb
js
pop
xchg
adc
das
mov
rcl
mov
outsl
push
inc
arpl
cld
pop
sub
jmp
pop
aas
enter
imul
leave
fildll
and
push
lret
jbe
pushl
mov
push
sahf
mov
cli
jge
jmp
shl
sbb
clc
pop
jl
cltd
inc
fbld
xchg
mov
filds
sbb
imul
aam
cmp
mov
mov
and
xchg
outsl
dec
jno
decl
mov
dec
test
outsb
decl
test
loop
xchg
rcr
cmp
lahf
ret
das
push
lock
cmpsb
incl
xor
aaa
mov
push
jno
push
lret
cld
test
das
aam
decl
enter
sbbl
pop
mov
aad
insb
push
mov
das
lds
add
ja
pop
cli
mov
test
mov
incl
popa
mov
jecxz
dec
bound
pop
pop
dec
jg
or
dec
mov
fisubrs
fwait
dec
aam
repz
mov
adc
lcall
popf
sbb
pop
jmp
mov
sbb
lcall
mov
outsb
lahf
push
movsb
jmp
xchg
mov
aas
sbb
out
xchg
mov
fucomip
rclb
sub
pushl
iret
push
ss
repnz
aam
push
cli
cltd
xchg
mov
adc
add
jg
cmp
push
push
and
cmp
mov
mov
cmp
jnp
andl
in
sahf
out
xchg
jne
frstor
aam
in
outsb
xchg
inc
xor
imul
mov
outsb
dec
add
dec
cmpsl
sub
imulb
fucom
decl
aam
pop
lods
pop
out
decl
push
test
pushl
fsub
pushf
mov
gs
push
andb
out
or
decl
add
push
arpl
mov
xchg
mov
in
pop
add
xchg
and
scas
and
dec
xchg
sbb
insl
pushl
lcall
pop
pushl
out
mov
jg
xor
add
jmp
sub
iret
stc
out
pusha
jmp
xchg
mov
jle
addr16
xor
jo
int3
fmull
mov
cltd
mov
mov
xchg
pop
ljmp
xchg
mov
jb
loopne
out
fdivrp
lods
scas
xchg
dec
in
mov
fndisi(8087
jns
popf
mov
push
ljmp
daa
decl
int3
loope
out
popf
xchg
lcall
pop
push
ret
pusha
jbe
xchg
incl
jns
push
cmpl
and
add
adc
mov
dec
push
sbb
gs
mov
and
or
pop
rclb
xor
in
insl
hlt
pushl
sbb
cmp
add
popa
das
out
arpl
rol
fwait
pushf
xchg
pop
stos
lods
ljmp
inc
ss
cltd
pop
decl
push
or
jle
scas
stos
movsl
fimuls
add
mov
and
lcall
add
lods
icebp
or
sbbb
xor
imul
ss
idivb
or
mov
call
pop
cmp
adc
aam
out
dec
mov
push
outsb
inc
mov
decl
mov
ljmp
dec
cmp
sub
call
pop
mov
pop
in
mov
and
mov
mov
test
xchg
sbb
push
jl
pushl
and
xor
xor
roll
inc
lcall
loop
addr16
jbe
dec
add
cmp
cs
mov
push
lock
xlat
inc
inc
int
pushw
test
addb
cmovg
cli
sti
and
jmp
mov
jg
lcall
lds
fdivrp
or
cmp
push
test
test
loope
call
int
test
cmp
cmpsb
sbbl
nop
jo
aaa
lds
je
aad
xor
stc
mov
or
inc
lods
arpl
or
cwtl
lock
popw
cmpsb
mov
mov
fildl
lds
sub
mov
aam
fiadds
cmp
cmp
sub
mov
mov
push
xor
shlb
xchg
cmp
std
test
fistpll
mov
fsqrt
call
adc
mov
hlt
shll
leave
or
ljmp
sahf
int3
repz
mov
das
shll
or
ljmp
ja
daa
rolb
hlt
mov
jne
pop
aam
call
jecxz
adc
stos
mov
push
mov
mov
mov
adc
mov
lods
aas
icebp
ss
call
dec
out
inc
pop
mov
xor
inc
pop
loope
stos
xchg
mov
das
jg
insl
jle
jae
adc
lods
hlt
int3
test
decl
fisttpl
adcl
decl
push
jno
jnp
fdivr
cmpsl
mov
mov
popa
in
add
dec
cltd
sub
jge
into
push
mov
sbb
insb
decl
push
lock
push
call
cmp
les
out
inc
std
in
test
hlt
mov
pop
int
add
clc
call
mov
movsb
std
and
sarb
in
int
mov
mov
push
fmul
fistps
test
sub
mov
lds
jnp
pushf
ljmp
aad
pop
ss
cmc
lret
jle
xor
stos
mov
jnp
pushl
push
stos
aad
lcall
mov
decl
jle
pushl
insb
xlat
xchg
lahf
sub
fs
loop
ja
hlt
outsl
and
rcrl
cld
inc
dec
cmp
js
scas
in
imul
in
outsl
xor
cmp
out
sbb
sub
inc
adc
int
xchg
fstps
lds
and
pop
lret
ljmp
shrb
lcall
xchg
rclb
jg
pop
lret
pusha
lods
fiadds
mov
inc
incl
in
in
xor
cld
dec
xchg
xchg
jecxz
fcmovb
lock
jecxz
xor
inc
cmp
mov
and
movsb
lahf
je
push
in
outsl
add
or
dec
arpl
push
out
jae
xchg
lret
push
sbb
adc
xlat
jg
pop
jo
pushl
mov
and
push
repz
jg
sub
cmp
testl
or
cltd
lahf
xor
mov
dec
adc
inc
das
dec
incl
lods
rorl
xchg
xchg
push
cmp
mov
xor
lea
movsl
movsl
clc
arpl
testl
cmp
loopne
mov
fcomip
adc
or
push
adc
and
loopne
dec
inc
insl
inc
cmp
sub
fwait
decl
sar
jmp
fwait
sub
mov
js
ja
ret
mov
insb
dec
out
mov
mov
adc
adc
pop
out
or
fs
mov
fcmovnu
mov
add
mov
inc
jae
dec
mov
xchg
cmpsl
addr16
mov
push
call
jp
or
bound
das
sahf
lods
cmp
sbb
decl
add
outsb
sahf
adc
pushl
cmp
movsl
mov
jb
cwtl
dec
dec
loopne
lret
jmp
fnstcw
push
xchg
das
call
rep
add
mov
or
nop
call
inc
outsl
mov
push
test
mov
pop
or
and
ljmp
scas
ljmp
jo
lock
add
pop
mov
pop
mov
push
jp
addl
lods
clc
cmp
lcall
movsb
pop
sbb
add
mov
sub
in
rolb
testb
cmp
mov
repnz
ja
stc
rcll
mov
mov
out
jecxz
mov
fisttpl
in
adc
imul
arpl
pushf
out
push
decl
ds
repnz
decl
adc
nop
ljmp
jne
or
ror
pushf
test
pop
sar
pop
bound
pop
mov
jbe
ffreep
out
loop
aas
lcall
scas
test
das
jne
movsb
popa
jg
dec
add
push
fnstcw
xor
push
dec
lea
in
xor
xchg
das
fstp
sti
jns
mov
cmp
dec
sbb
mov
mov
mov
inc
rcrl
test
ret
and
mov
jmp
fisubs
push
mov
ret
shrb
xor
loope
cmp
pop
jg
cld
loopne
fldl
das
push
dec
sub
aad
pop
mov
pop
out
icebp
pusha
and
adc
sub
movsl
movsb
mov
adc
repnz
jmp
mov
xchg
sti
jo
fimuls
jg
or
mov
pop
xchg
out
jle
mov
outsl
pop
decb
icebp
mov
adc
notl
mov
clc
jecxz
cmpl
cmp
mov
jg
sub
cmp
sbb
or
mov
xchg
mov
fists
adc
mov
data16
xor
repnz
sub
hlt
dec
and
outsb
add
xchg
inc
in
jbe
sar
jmp
xlat
test
int3
adc
cltd
repz
adc
cmp
mov
jne
rcrl
xchg
subb
test
or
call
fistps
pushf
push
aaa
call
pop
lret
insl
sahf
sub
int
repnz
mov
push
xchg
into
popa
mov
rcrl
sub
fnop
inc
enter
adc
lcall
jge
cmp
adc
dec
out
nop
xchg
movsl
gs
dec
jmp
jg
cmp
sti
fsubrl
clc
rorb
stc
push
xor
popf
or
mov
pop
call
test
pop
pushl
shlb
and
mov
lock
movsl
jne
enter
mov
in
lods
inc
clc
ljmp
jp
imul
movsb
jp
adc
aam
sbb
std
stos
push
or
outsb
sbb
test
pop
ljmp
hlt
push
xchg
fistl
scas
dec
movsl
cmc
xchg
in
pushf
sub
or
test
roll
jmp
enter
in
and
cmc
push
push
inc
cli
ds
xchg
cs
mov
xor
adc
mov
mov
call
add
adc
popf
data16
push
sar
das
xorl
lods
push
mov
movsl
lods
das
lcall
sbbl
sar
cmovo
jmp
dec
lret
lea
je
and
push
mov
out
cwtl
push
add
clc
icebp
dec
adc
mov
shll
mov
repnz
ret
lods
mov
mov
pop
and
jmp
inc
mov
inc
decl
xor
dec
push
loop
or
incl
setp
mov
popf
fs
push
fwait
mov
repnz
or
repnz
decl
jge
inc
mov
mov
call
fsubrs
ljmp
mov
incl
in
jbe
and
sti
in
push
data16
pop
ja
push
icebp
popa
getsec
jmp
std
addr16
add
add
jmp
sbb
cwtl
add
cmp
add
inc
xchg
jl
sub
mov
sbb
or
pushf
cmpsl
jbe
jmp
xor
call
ljmp
pushl
mov
outsb
and
push
mov
xchg
sbb
fidivs
mov
call
xchg
int
xchg
enter
pop
pushl
fadd
negl
outsb
push
and
or
dec
jmp
ljmp
lcall
xchg
outsl
xor
and
pop
pop
mov
mov
insl
dec
scas
mov
fists
loop
sub
pop
ljmp
adc
dec
jl
jle
call
insb
sarl
mov
aaa
iret
xchg
pusha
std
inc
in
mov
dec
cmp
mov
lcall
popl
int3
shlb
push
mov
decl
loopne
pop
ljmp
inc
jl
and
pop
jmp
arpl
test
subb
lds
stos
repnz
lods
stos
call
dec
fisubrs
xor
jo
jp
stos
hlt
jp
dec
jp
mov
or
pop
nop
xchg
icebp
xlat
sar
dec
jmp
pop
xor
xchg
mov
int
lds
lods
mov
iret
fs
loop
imulb
call
scas
mov
xor
mov
dec
cwtl
imul
xor
ljmp
push
rol
lcall
cli
jp
jae
stos
sbb
andb
adc
lock
sub
loopne
jge
aad
mov
lds
mov
inc
jp
test
addl
pop
nop
push
jmp
xchg
int3
lcall
fistl
inc
test
and
cmp
or
ss
mov
aad
scas
xchg
leave
jmp
fs
out
sub
mov
jp
adc
ficompl
aas
mov
mov
mov
lret
out
aas
ljmp
lret
ljmp
sbb
lods
inc
xchg
lcall
mov
pop
je
xchg
jmp
gs
test
repz
aad
mov
xchg
xchg
add
fisubl
mov
in
mov
push
push
mov
inc
pop
cmp
cmc
gs
or
das
insb
adc
xor
lock
xor
std
fsubrs
push
scas
sar
es
call
add
repnz
dec
lds
add
outsl
pop
dec
xchg
mov
jns
js
jle
inc
popa
mov
es
loope
lahf
adc
mov
test
repz
jl
pop
xchg
aad
push
xor
and
or
cmp
sub
lods
rep
decl
not
loop
and
aam
pop
xor
decl
pop
mov
or
mov
or
mov
shl
sahf
loop
stc
jae
aas
pop
imul
jbe
push
ficomps
lods
xor
sub
xlat
inc
pop
xchg
movsb
and
inc
pop
rcrl
mov
xchg
ja
fisubs
jmp
cmpsl
scas
roll
push
rcll
cs
aad
jb
incl
gs
mov
jg
into
add
lahf
fmull
sub
lret
call
sbb
xchg
imul
sub
mov
popf
fwait
and
enter
lock
into
and
lods
incl
mov
cli
mov
sbb
pop
pop
cmp
aad
sub
ljmp
dec
push
add
jmp
test
cli
mov
jo
mov
push
add
in
cmp
addl
lret
movsl
jle
leave
fistpll
add
or
adc
push
push
sub
mov
dec
dec
in
lcall
je
decl
push
loope
iret
lea
aam
imul
aas
lahf
adc
xchg
jge
push
lcall
add
inc
call
mov
dec
icebp
dec
pushl
js
sub
decl
sub
fidivs
mov
lret
mov
jmp
cmp
sbb
shll
pop
test
or
pop
lcall
ljmp
mov
mov
std
pop
xchg
gs
push
jg
jmp
jp
push
push
adc
mov
xor
imul
and
popa
add
xor
and
popf
call
cmpb
ret
mov
sar
xchg
xchg
pop
jge
push
mov
cmp
test
pushf
iret
cld
or
fistps
imull
rolb
xor
jl
or
les
pop
push
incl
and
sahf
and
loop
adc
imul
xchg
fidivs
loope
add
icebp
loopne
ja
addr16
push
mulb
pushl
imul
inc
mov
jns
add
xor
mov
mov
addl
ljmp
insb
hlt
stc
call
sbb
test
mov
mov
jno
lea
lcall
jge
icebp
loope
sub
outsl
pop
pushf
jne
add
decl
mov
lcall
push
sti
ljmp
sbb
shll
adc
fcompl
out
sar
jno
int3
cs
push
daa
incl
push
jge
jmp
je
add
inc
ljmp
add
ljmp
mov
ss
movsb
add
and
or
stc
movsb
cmpsl
push
ja
mov
mov
jg
rorb
cmc
incb
inc
inc
xchg
xchg
lret
inc
into
ret
popa
outsl
ret
mov
pxor
mov
cs
fcmovu
ljmp
cmp
mov
or
lods
stc
dec
and
shll
incl
testb
jo
jmp
fisubrl
xchg
std
sbb
arpl
jle
scas
and
lea
testl
std
cwtl
inc
fildll
dec
imul
xor
jg
in
push
scas
inc
dec
cmpsb
aas
les
rcl
and
xor
decl
pop
mov
outsl
js
fcoms
fadd
lahf
cmp
add
and
jl
dec
mov
sub
xor
sbb
jno
and
in
stos
data16
fiadds
pushl
xor
add
dec
sbb
xor
xor
mov
fstpl
mov
call
incl
movsb
jae
jmp
cwtl
outsl
jmp
and
ja
or
int3
mov
pop
in
lds
push
xor
jle
sbb
xor
call
sub
inc
jp
sti
rcl
lcall
daa
cltd
or
pop
cs
ljmp
add
push
out
xor
lock
scas
outsl
loope
mov
and
jg
and
sbb
ljmp
mov
sahf
call
outsb
sbb
out
xchg
in
decl
add
mov
pop
mov
repnz
decl
jno
dec
sub
outsl
pushl
fwait
push
mov
std
jno
jmp
jg
xor
or
leavew
cld
mov
cld
push
mov
outsl
test
sub
std
xor
mov
subl
add
decl
xlat
mov
fcomps
xchg
orl
adc
adc
add
cmpsb
out
pop
jge
cs
xor
mov
fisubs
push
mov
push
jno
xchg
push
jne
mov
jle
subl
inc
hlt
xchg
xchg
and
ja
xor
mull
jmp
test
pop
les
iret
and
or
mov
add
or
sbb
pushl
movl
test
mov
enter
jmp
outsl
sub
test
dec
pop
mov
or
fs
sub
movsb
or
push
mov
leave
scas
fs
out
dec
jne
jecxz
clc
sub
in
in
jecxz
daa
pop
test
pop
push
call
cmp
jo
xchg
pop
jp
out
mov
fistps
imul
push
cltd
mov
and
pop
outsl
mov
jnp
stos
inc
mov
mov
stos
or
mov
inc
xor
mov
jle
mov
sub
sub
xor
cmp
xor
jmp
pop
inc
shrl
jmp
xor
xchg
push
pop
decl
pushf
pop
hlt
or
mov
xchg
lea
jns
jno
and
push
xchg
mov
sbb
stos
xchg
jmp
jl
mov
xchg
add
xchg
dec
cli
sbb
pop
or
push
icebp
dec
in
fcmovu
das
pop
inc
push
cld
aaa
xchg
jnp
pop
arpl
inc
pushl
out
sbb
out
pop
cld
psrlw
pop
or
test
sti
jb
push
push
fs
cmp
mov
fdecstp
inc
and
inc
sub
pop
jmp
shrb
adc
jecxz
push
xor
in
test
dec
sti
fbstp
rorb
pushl
mov
lock
das
ret
sbb
test
ljmp
ficompl
test
mov
and
scas
fisubrs
add
and
orb
pop
std
push
cmpsb
jns
scas
es
lcall
into
xor
cmp
mov
movsb
sahf
push
push
xorb
enter
loope
lds
inc
inc
inc
xchg
incl
mov
xchg
pop
outsl
pop
arpl
lret
test
cld
ljmp
jmp
cmp
incl
push
cltd
incl
popa
loopne
xchg
jb
out
mov
bound
adc
add
and
adc
rcll
out
mov
fidivs
int
mov
xor
inc
in
jb
addr16
scas
sbb
or
cs
xor
adc
in
xchg
push
add
movsl
mov
jo
ret
insl
decl
mov
test
js
xchg
fidivrl
mov
mov
std
dec
clc
pop
test
xor
popf
nop
push
lahf
sbb
mov
mov
and
xchg
add
xchg
ljmp
pop
iret
jo
ljmp
fisttpl
xchg
lods
or
xchg
cld
xor
sub
push
cli
cmp
outsb
jae
xchg
jle
xchg
push
dec
push
sub
ljmp
repnz
aam
dec
ljmp
fbld
add
jg
jle
call
push
dec
xchg
cld
mov
jcxz
leave
pop
xchg
stos
decl
fcmovnu
or
ljmp
mov
sahf
cwtl
shlb
sbb
dec
push
lcall
xchg
add
vphaddudq
push
ljmp
cmp
xchg
cmpsl
sub
iret
rclb
lods
mov
cmpb
scas
or
and
jns
fldenv
lret
cmp
movsl
cmp
cmc
jecxz
sub
inc
int3
sbb
adc
sbb
lcall
sbb
pop
loope
push
ljmp
jae
movsb
jnp
jno
das
inc
shll
fcompl
mov
addr16
data16
adc
or
popf
or
dec
data16
inc
cmp
mov
lahf
fs
mov
pop
in
je
jmp
pop
mov
icebp
loopne
jl
das
or
gs
ljmp
lcall
push
lret
lock
std
fistpll
adc
pushl
pop
dec
cmp
push
add
lods
sar
cs
notl
pop
lods
popa
lcall
inc
stos
dec
ljmp
test
aad
push
shufps
outsb
ljmp
mov
jg
inc
loopne
loope
inc
add
jg
inc
icebp
xor
mov
dec
xchg
pop
jg
push
and
pushl
mov
fwait
lcall
fcoml
lret
inc
cmp
jo
mov
in
popa
jg
push
daa
push
imul
pop
jbe
popf
add
mov
add
fsts
cmpsl
sub
jns
fcmovb
jle
cmp
out
inc
push
xchg
jb
js
cwtl
mov
mulb
inc
jmp
fs
dec
and
dec
lcall
adc
inc
mov
outsl
add
sub
xor
test
je
addr16
xchg
sub
push
enter
rolb
add
fdivrl
outsl
fcoml
into
test
ljmp
loopne
adc
adc
mov
aaa
adc
pop
ljmp
mov
std
hlt
mov
xchg
lods
pushl
shrl
mov
cmc
lods
pop
in
inc
ljmp
push
pcmpgtd
fstps
ljmp
jg
std
dec
ficoms
jmp
sbb
ret
ret
push
ud1
ret
movsb
movsl
jne
jp
jecxz
push
push
mov
xor
pop
fistpll
std
inc
pop
mov
nop
xchg
fs
jno
dec
lahf
mov
aaa
call
call
mov
mov
dec
incl
mov
stc
push
jmp
repz
rolb
or
sar
dec
cmc
xchg
and
jmp
aam
xchg
push
ljmp
scas
daa
movsb
mov
inc
pop
xchg
incb
mov
aas
push
mov
inc
dec
aaa
in
in
dec
push
in
sub
jne
fildll
adc
ja
jmp
cmp
jg
dec
out
add
cld
das
fwait
mov
outsl
pop
cmp
xchg
jnp
jmp
lcall
and
adc
mov
ljmp
push
xchg
adc
pop
push
pop
ds
addr16
lcall
jb
ljmp
int
imul
out
mov
mov
cltd
sarl
aam
cmpsl
sub
add
xchg
or
pop
loopne
mov
sbb
xor
xchg
jmp
jg
jle
jp
or
pop
clc
mov
jmp
dec
mov
pop
nop
cwtl
mov
lods
pop
mov
sahf
cs
test
arpl
or
pushf
das
jg
jns
jmp
push
sub
incl
mov
mov
mov
xchg
mov
int
cltd
leave
lahf
call
jp
std
xor
in
push
outsl
jns
roll
enter
loop
jge
mov
pop
dec
das
adc
test
cmc
adc
dec
ja
lods
call
je
cmp
mov
out
sbb
aam
and
mov
add
call
xorb
fidivrl
hlt
decl
jno
stc
sub
xor
mov
hlt
sbb
call
and
adcb
std
test
push
mov
adcl
andb
cltd
push
or
dec
fbstp
jbe
jno
xchg
div
inc
xor
add
es
adcl
dec
test
lret
jns
roll
jmp
mov
call
mov
push
cmp
lcall
jb
push
pop
aam
push
std
or
xlat
sbb
xchg
stos
lret
decw
or
jl
mov
sbb
cli
mov
fldenv
mov
lcall
inc
mov
lea
addr16
call
imul
adc
jecxz
incl
dec
jns
std
jmpw
cmp
daa
mov
xor
fstpl
out
jge
jmp
or
pop
jmp
push
adc
and
inc
icebp
subb
jnp
js
jmp
mov
adc
cltd
add
lods
mov
adc
ljmp
cmp
mov
pop
mov
daa
mov
gs
inc
das
mov
lret
out
gs
sub
add
xchg
sbb
cmc
out
movsb
lcall
jl
call
xor
sbb
ja
cli
pushl
push
aad
mov
mov
lret
loopne
pop
test
jmp
lcall
outsb
mov
lock
pop
mov
dec
rclb
dec
lret
inc
mov
gs
and
cmc
das
xor
xor
mov
outsb
jmp
jle
add
adc
add
nop
pop
ficoms
ljmp
stos
insb
movsb
pop
sub
mov
xlat
leave
push
decl
fiadds
lock
sti
hlt
das
xor
push
inc
mov
cmpsb
in
mov
outsl
push
xor
outsb
icebp
subb
cmp
xchg
cmp
cli
pop
xchg
dec
sbb
sbb
push
clc
lea
ret
push
arpl
mov
inc
repnz
xlat
cmp
jmp
sarl
xchg
and
cli
or
movl
imul
mov
fisubrs
mov
pop
ds
outsl
pop
cmp
outsl
decl
xchg
adc
arpl
sarb
jl
faddl
xor
or
inc
pop
jecxz
in
mov
push
sbb
sahf
popl
sub
stos
cld
push
fdivrl
pop
cltd
clc
int
aaa
jp
xchg
push
jge
movb
sub
and
addl
roll
sub
gs
and
xchg
cwtl
jmp
jg
xor
mov
push
leave
test
aaa
cmp
scas
mov
adc
dec
push
fs
inc
adc
das
das
pop
rolb
daa
cmpsb
adc
xor
mov
shlb
dec
jp
ffreep
dec
xor
mov
inc
xchg
pop
add
inc
out
jmp
shl
mov
dec
aaa
lcall
out
jge
jmp
sub
das
mov
pushf
lret
sti
rol
mov
outsl
aad
fwait
jnp
jecxz
push
stos
add
sbbb
arpl
shlb
in
xchg
inc
mov
pop
fbstp
xor
imul
jbe
sbb
jns
xchg
decl
fwait
jb
lcall
repz
insl
add
pop
das
inc
lea
clc
mov
loope
ljmp
dec
ficompl
inc
loopne
out
dec
clc
pop
adc
out
aas
add
pcmpeqb
ds
into
in
hlt
inc
lcall
pop
cmpsb
mov
sub
cmp
decl
shr
pop
int3
ret
xchg
decl
cmp
jle
out
loope
movsb
fnsave
hlt
or
mov
outsl
push
inc
dec
cmp
mov
test
call
mov
and
sub
jno
stos
mov
lret
incl
adc
loope
ret
cltd
test
imul
loop
mov
sbb
lds
jl
cmp
fldenv
rorb
pop
mov
mov
js
mov
xchg
decb
and
cltd
cmpsb
inc
mov
inc
in
lods
mov
imul
ljmp
inc
int
call
and
cmc
jmp
add
lods
imul
clc
stos
std
pusha
decl
add
pusha
sbbl
out
mov
jl
sbb
call
jmp
cmp
jle
push
aas
xlat
xor
lcall
sbb
scas
lcall
xorb
addl
imul
lods
leave
xchg
call
jno
sbb
loopne
cli
mov
pop
in
call
test
pop
int
add
lret
aas
test
je
je
jmp
cld
sbb
push
js
rclb
push
popf
icebp
add
jl
loope
fs
adc
add
dec
ss
cwtl
hlt
jo
mov
mov
mov
pop
bound
or
mov
das
clc
out
mov
xor
notl
pop
inc
sub
mov
jne
bound
pop
call
mov
in
ss
clc
decl
dec
clc
xchg
pop
ljmp
aad
out
xchg
mov
pop
sub
jg
incl
into
std
fwait
xchg
mov
jmp
lods
rcl
mov
xchg
mov
std
add
xor
out
cmc
pop
mov
and
inc
mov
xor
mov
push
jae
mov
loop
gs
aad
sbb
push
push
test
fcomip
pop
repz
dec
push
cmp
int3
sub
mov
inc
xchg
pop
xlat
sbb
clc
mov
jbe
jnp
mov
xchg
sbb
call
or
lds
jns,pn
scas
xchg
shrb
adc
mov
pop
push
sub
inc
dec
mov
out
sbb
push
ficomps
je
pop
or
push
rcr
and
jg
or
dec
add
sti
mov
mov
mov
cwtl
scas
aas
or
inc
pop
call
inc
imul
out
incl
psubusw
loope
lahf
inc
les
test
pop
loopne
mov
mov
push
dec
cmp
mov
xor
dec
lret
int
aad
mov
dec
inc
lea
data16
fmuls
jnp
mov
jo
mov
push
jmp
mov
xchg
lret
orl
pop
jne
xor
jl
pop
repz
mov
xor
idiv
ret
sub
push
subl
sub
rolb
inc
gs
mov
xor
or
repz
pushf
add
sub
jo
jno
incl
stc
and
pushf
outsl
xchg
nop
loopne
cmc
pop
mov
mov
sub
bound
push
out
mov
sbb
push
test
add
jmp
cmp
les
mov
inc
call
ret
cli
pop
sbb
aad
and
pushl
add
shrl
aaa
daa
loope
icebp
ljmp
push
data16
xor
mov
imul
jecxz
aaa
fbld
stos
add
and
adc
inc
or
adc
mov
das
and
int
lods
lea
jecxz
adc
outsl
daa
mov
jo
test
mov
pop
and
int
jo
stos
js
jg
push
inc
adc
testl
dec
jno
mov
fisttps
cmp
sbb
nop
sub
mov
insb
call
lods
out
push
inc
dec
fldl
subl
mov
call
hlt
sahf
push
push
push
cli
out
call
nop
int3
push
imul
int3
mov
adc
gs
cmp
call
mov
adc
outsb
shl
mov
fisubl
das
xchg
enter
xchg
outsl
push
ljmp
adc
mov
daa
pop
pop
lock
add
testl
arpl
lcall
sbb
in
loop
cmp
fisttps
dec
ljmp
sti
xor
mov
test
xchg
dec
xchg
cwtl
mov
sub
jae
pop
cmp
and
inc
decb
daa
add
cmp
pop
sti
ds
push
or
fistps
notb
add
xchg
xchg
cld
push
jae
fs
das
addr16
in
in
dec
xor
incl
ret
dec
mov
ds
call
xchg
test
inc
cld
mov
adc
jo
mulb
ret
push
outsl
ret
dec
or
or
jmp
xor
jno
fdecstp
add
call
inc
pusha
incl
jnp
push
ds
ljmp
adc
aaa
sti
enter
add
lds
inc
iret
loop
mov
cmp
ud0
jb
mull
xor
xchg
repz
addr16
cmp
pop
adc
ja
lret
les
loope
cmp
dec
sbb
movaps
incl
mov
and
jmp
jne
xchg
cld
rcrb
cli
dec
mov
jp
mov
xchg
xchg
sub
cwtl
push
ret
lret
icebp
das
imul
mov
mov
testb
mov
push
cmp
or
outsl
mov
aaa
mov
lcall
lret
sbb
incl
imul
xlat
insb
cli
repnz
cmpsl
dec
mov
divl
jmp
cmp
in
decl
sub
test
xor
mov
hlt
adc
fcoms
jmp
push
leave
into
xor
jae
pushl
xor
lahf
jmp
out
scas
or
call
push
xchg
test
pop
jg
sub
dec
hlt
in
or
dec
jbe
lds
cmpsl
or
cmp
mov
jp
pushl
stc
insl
repnz
orl
mov
jae
scas
or
jo
or
mov
ds
ja
and
lahf
or
sub
sub
pushl
adc
xchg
ret
ret
js
incl
push
or
into
jecxz
cmp
jle
addb
mov
jne
adc
cmc
out
testb
cmp
movsl
xchg
or
decl
cld
mov
mov
repz
cmp
push
aad
sarb
push
js
stc
into
dec
sbb
jne
ror
repnz
cli
aaa
test
cli
fs
xor
mov
loopne
shrl
pop
sahf
jmp
pop
shr
fisttpl
and
inc
mov
adc
jmp
jecxz
jmp
imul
or
sub
pop
fldcw
test
hlt
je
adcl
dec
lcall
jo
adc
push
pop
testb
xchg
adc
lret
dec
and
push
or
pop
push
or
pusha
inc
mov
adc
jb
lods
mov
inc
jecxz
fisubrl
adc
jmp
fidivrs
cmc
repz
pushl
dec
mov
add
jns
lret
add
adc
jmp
fstps
lcall
sti
idiv
aam
cs
dec
js
lods
sub
push
lcall
inc
sbb
pop
mov
fadd
dec
mov
sub
xchg
xchg
clc
stos
bound
and
pushf
lret
hlt
xor
jg
sub
je
test
fwait
mov
stos
add
loope
lcall
mov
and
decl
decb
or
gs
mov
and
or
pop
or
fld
into
shll
lret
scas
push
sbb
inc
ljmp
in
jecxz
int
inc
movb
and
cs
mov
test
aad
push
jge
ljmp
mov
mov
xchg
xchg
cmp
test
lea
pop
xor
mov
xlat
inc
addl
fistpl
mov
pop
pushl
ss
or
inc
ret
jmp
js
push
mov
decl
je
inc
sub
cmp
mov
mov
and
and
jecxz
sub
sbb
inc
jge
dec
fnstenv
bound
dec
mov
adc
incl
ss
pop
ss
int3
insl
cmp
negb
adc
inc
imul
or
pop
or
or
lcall
push
imul
test
incl
mov
mov
add
cs
pop
push
lcall
dec
adc
decl
hlt
aas
xchg
sub
sbb
stos
add
lret
push
cltd
lcall
mov
ret
ss
fsubs
and
nopl
jo
js
insl
ss
xchg
popa
movsl
movsl
decl
daa
xchg
xchg
pushl
pop
cmp
loop
stos
push
decl
dec
adc
mov
fisubrs
clc
dec
fsubs
movsl
incl
ret
pop
pop
rolb
fcomps
movsb
sar
and
sbb
xchg
sahf
fs
push
mov
arpl
outsl
test
jbe
xor
xchg
adc
ud0
push
dec
sar
sbb
std
cli
scas
imul
sbb
rcr
movsb
arpl
jmp
xchg
out
adc
into
lret
call
inc
arpl
mov
test
sub
or
daa
jg
xor
mov
incl
sbb
xchg
int
shl
scas
pop
popf
dec
das
popa
pop
stos
pop
jmp
ss
call
or
shrb
iret
outsl
xor
dec
cwtl
incl
xlat
pop
inc
and
jl
cld
pop
jmp
add
hlt
cli
stos
enter
call
xchg
pop
idivl
movsl
adc
add
mov
jp
xorb
xchg
ljmp
jecxz
sar
ss
fdivs
cwtl
jns
rcrl
sub
cmpsl
sbb
loopne
xchg
push
in
jmp
dec
adc
andl
xchg
out
mov
inc
cld
ret
lea
add
or
leave
js
xchg
iretw
jmp
test
insl
in
adc
jb
rol
mov
xor
jns
xchg
xchg
and
fisubrl
sub
xchg
cmp
pushf
sbb
insb
adc
in
mov
into
and
inc
aam
jo
jmp
dec
add
int3
call
push
outsl
cltd
pop
jle
jmp
mov
xchg
inc
outsl
das
loop
mov
fsubrs
sub
mov
push
mov
mov
aam
cmc
mov
cmp
mov
aam
pusha
sbb
jmp
hlt
nop
hlt
mov
jb
in
xchg
push
mov
mov
pop
push
sbb
mov
jnp
pop
ljmp
pavgw
int3
xchg
jmp
outsl
imul
cli
add
push
mov
push
mov
nop
xor
inc
mov
and
in
add
adc
add
xchg
or
push
sti
mulb
xchg
fsubr
cmp
std
pop
fidivs
out
clc
decl
dec
dec
mov
mov
xor
xchg
ja
cmp
mov
jl
jg
subb
or
rcrl
mov
divl
nop
popa
mov
sub
inc
dec
push
sbb
jb
xor
pop
mov
cmpl
xchg
push
fiadds
outsb
push
rolb
popf
sbb
outsl
out
stc
mov
test
hlt
into
push
out
xorb
mov
loop
xor
adc
or
je
incl
jb
ja
fists
jge
pop
fwait
aam
push
lods
je
and
push
insb
sub
icebp
imulb
movsl
inc
jg
enter
or
fmuls
clc
xchg
loopne
xchg
adc
dec
test
pop
pushl
cs
incl
scas
es
ljmp
aad
addr16
stos
daa
push
cmp
aas
fidivrs
add
xor
fistl
cs
out
push
lock
test
pop
inc
bound
adc
inc
xor
daa
push
add
dec
cmpsl
push
rcrw
jmp
mov
lods
scas
cmp
mov
dec
cld
push
fcoms
outsl
pushl
adc
push
and
std
mov
mov
inc
in
pop
pop
pop
lcall
mov
imul
stc
dec
pop
jmp
popa
popf
incl
loope
daa
fs
pop
fisttpll
jle
out
fdivrl
dec
mov
pushl
popf
popw
cmp
test
xor
jo
jno
outsl
fidivs
push
or
fcmove
stc
cmpsl
mov
mov
push
sub
fcmovu
jns
movsl
cmp
pop
aad
call
xor
imul
push
jmp
xor
fs
xchg
mov
and
sti
pushf
jg
mov
xor
stos
adc
pop
mov
repnz
in
incb
and
lret
push
xor
pop
les
out
xchg
jmp
movsl
jae
decl
movsl
xlat
jns
mov
mov
out
daa
pop
mov
lcall
cmp
pop
data16
sarb
mov
into
fwait
pushf
jmp
loop
or
into
push
ret
cli
mov
in
mov
jmp
test
mov
pop
lret
outsb
out
jo
cmp
sub
notb
iret
cmp
cmpsl
pop
out
dec
xchg
call
std
jge
decl
stos
movsb
loopne
jmp
lods
or
addr16
xchg
lods
std
xor
std
sub
dec
jo
decl
sub
sahf
sbb
xchg
pop
psadbw
jge
pushl
mov
xchg
add
push
leave
lcall
push
mov
leave
bswap
aas
sub
jae
xchg
testl
push
mov
inc
sub
ret
inc
xor
inc
stos
arpl
or
adc
mov
decl
filds
lock
stos
mov
das
inc
sub
jge
arpl
call
add
aad
and
incl
outsl
sbb
int
stos
outsl
sbb
and
pushl
insl
fstpt
inc
pop
std
mov
aad
cmp
pop
xchg
xchg
popf
mov
lods
adc
das
xchg
adc
pop
push
pop
imul
popf
xor
adc
call
test
inc
cmp
jae
scas
lods
pop
pop
sub
daa
xor
rorl
shr
pop
jo
pushl
sbb
add
lcall
push
fmull
repnz
pop
in
mov
gs
adc
xor
jae
sub
setb
scas
inc
pop
xchg
mov
ret
mov
lds
iret
addl
sbb
loope
sbb
loope
lock
pop
fisubrs
sub
ret
in
sub
incl
inc
inc
and
out
lret
jmp
je
jmp
inc
mov
cmp
subps
push
sub
mov
and
mov
in
inc
push
stos
shrb
mov
aaa
lret
rclb
call
out
in
lahf
cmp
cmp
adc
jmp
dec
out
pushl
jl
int3
call
push
pushf
mov
and
cmc
xchg
test
dec
inc
stos
mov
adc
sbb
movsl
dec
xchg
insl
sub
das
ljmp
inc
mov
inc
dec
cmpsb
jge
shll
int
sub
cmp
stos
stos
xchg
pop
nop
lret
mov
mov
icebp
jmp
mov
loope
call
out
mov
ljmp
insl
or
cwtl
loopne
ljmp
cmp
jp
adc
sar
dec
mov
cmpsl
mov
push
xor
mov
das
jp
clc
xlat
or
jmp
arpl
imul
repnz
ljmp
pop
mov
pushl
and
pop
cltd
push
lcall
sbb
in
pop
aam
loopne
xor
jp
cmpsb
jg
push
hlt
std
and
jp
inc
dec
xor
lods
xor
push
inc
jle
jecxz
pop
lahf
jnp
mov
adc
ljmp
lret
mov
pop
dec
call
shlb
subb
insl
mov
pop
push
js
pusha
call
nopl
lea
jmp
clc
add
lods
andb
xor
jge
roll
decl
dec
not
clc
outsl
add
sbb
sub
jmp
xlat
aad
addr16
xor
ja
roll
xchg
inc
fsubs
adc
mov
popf
aad
bound
jb
push
lea
inc
sub
mov
push
decl
add
mov
ret
jno
jmp
jg
js
outsl
cs
call
ret
pop
xchg
jno
pushl
pusha
scas
repz
fmul
cmp
cmp
or
ljmp
pop
sbb
push
fidivs
das
in
or
mov
xchg
mov
cmc
cmc
sbb
mov
mov
rol
mov
repz
xor
movsb
inc
push
sarl
sbb
or
adc
mov
dec
in
test
cmc
xor
mov
fsub
adc
mov
xchg
mov
lcall
xchg
loop
xor
lcall
popf
jno
inc
mov
movsl
sti
test
into
or
fists
out
test
pushl
out
lea
sbb
jl
fdivr
xchg
aam
gs
mov
int
mov
sub
iret
sbb
adc
pop
outsb
cmc
cmp
outsl
int3
jmp
pop
xchg
xchg
push
bound
ljmp
cmpsb
push
mov
stc
out
arpl
loopne
outsb
xchg
jbe
ret
ljmp
adc
fs
xor
dec
lods
sbb
shrb
xchg
mov
pop
push
jmp
lret
sub
popf
and
mov
mov
push
call
push
and
xchg
sti
push
sbb
call
lea
sbb
pop
push
pop
jmp
stos
jmp
inc
jo
test
movsl
xor
cmp
not
test
mov
inc
out
pop
shll
jg
push
pop
movsb
lds
xchg
jg
mov
mov
nop
arpl
xor
sbb
shlb
xorb
mov
mov
mov
or
mov
cwtl
stos
mov
cs
push
ljmp
ds
fwait
js
xor
pop
xchg
jge
rcrb
jmp
cmpsb
jnp
ror
xor
in
jl
inc
mov
fldenv
push
iret
jecxz
sar
cltd
jns
mov
jl
movsb
incl
mov
sub
test
decl
push
pop
lock
stos
xchg
jmp
andl
xor
std
xchg
stos
fidivrl
sub
jmp
mov
mov
sti
scas
aam
jno
and
rcr
aas
jmp
into
push
push
inc
cmpsb
jmp
data16
pushf
call
jne
or
arpl
and
cmp
push
clc
and
dec
pop
xor
dec
jo
nop
or
fnstsw
ss
nop
cmp
mov
mov
mov
jmp
cmc
xor
sarb
and
push
daa
sbb
loop
pop
test
or
movsb
cli
orb
ljmp
pop
adc
cli
outsb
in
adc
dec
ret
insb
rclb
pop
xchg
push
scas
je
dec
mov
jecxz
cmp
mov
repnz
sbb
sbbl
jle
push
add
fildll
loope
les
jnp
mov
mov
xchg
pop
cmp
lcall
dec
push
cs
in
rorl
dec
bound
hlt
cmp
sub
loop
pushl
lret
jg
mov
cltd
mov
aad
dec
push
incl
inc
sub
push
and
inc
fisubs
daa
ljmp
fidivrs
out
and
jae
cmp
jecxz
jmp
jb
and
jg
xor
fidivl
jg
mov
adc
call
repnz
jns
lcall
insb
xor
jg
mov
stc
es
ljmp
mov
pushl
mov
pop
lock
iret
mov
adc
and
cmp
ljmp
mov
mov
test
jmp
iret
lcall
jg
jmp
dec
test
dec
dec
xchg
adc
cmp
cltd
xor
int
jmp
jb
sbb
call
mov
sub
pop
icebp
call
xchg
pop
int3
push
int
add
arpl
fnstenv
stc
cmp
rolb
cmp
divb
jmp
mov
jp
xchg
cmp
xor
out
in
clc
gs
lea
cltd
stc
arpl
cmp
and
mov
test
stos
std
inc
inc
mov
leave
insl
pop
push
inc
decl
fimull
popf
pushl
scas
js
std
imul
in
decl
inc
add
pop
daa
adcb
outsl
inc
leave
popa
pushl
imull
and
addr16
in
mov
mov
sub
jg
pop
sub
daa
and
mov
inc
pop
pushl
lock
cld
mov
push
call
test
xchg
js
popf
pop
pushl
sub
sub
and
jle
cmp
outsb
jmp
adc
and
dec
movsl
jmp
movsb
jmp
adc
xor
enter
mov
test
fists
ljmp
cmp
and
sub
add
idivb
cmp
or
add
dec
fimuls
cmc
cmp
cltd
xchg
mov
outsl
mov
or
pop
xchg
xor
std
xlat
in
test
fwait
movsb
sub
in
sbb
dec
in
js
jmp
adc
push
sub
lret
pop
cmp
out
jns
das
cmp
mov
insl
mov
and
dec
cmp
shll
mov
fbstp
mov
push
or
in
aas
mov
shr
ljmpw
arpl
add
adc
mov
add
jne
inc
rcrb
decl
mov
out
call
dec
imul
dec
shlb
mov
cmpsb
push
fisubrl
fidivrl
sar
outsl
in
mov
dec
xor
in
mov
rcrl
cli
cmpb
pop
mov
pushl
ljmp
cli
bound
lret
imul
mov
aaa
test
mov
push
mov
or
mov
push
cmp
out
nop
decl
fdivp
mov
xchg
cmpsb
or
clc
push
jmp
jg
rcrl
xchg
stos
cmp
clc
mov
loopne
call
imul
inc
jl
sbb
out
in
cmp
das
dec
lcall
xchg
sub
jno
out
mov
ja
call
addr16
sbb
cltd
lods
test
shl
lret
shll
loop
jb
rorb
mov
jg
incl
push
int3
cld
pop
pop
clc
inc
aas
shl
enter
jle
sahf
cmp
in
pop
sub
call
cs
push
fisttps
mov
fisttps
mov
inc
pop
push
ljmp
mov
incl
xor
and
imul
cmp
and
or
hlt
shrl
incl
inc
in
hlt
sbbb
rorb
call
mov
inc
sub
jge
or
adc
call
mov
das
jnp
jp
mov
arpl
push
or
jg
jns
ja
mov
mov
push
mov
stc
cmp
pop
fidivs
in
decl
dec
sarl
xor
shlb
push
movsb
pushl
push
push
push
xchg
cmp
aas
decl
dec
out
cmpsb
fisttpll
push
pushf
orl
adc
push
in
insl
mov
iret
loopne
fdivrs
adcl
jmp
icebp
mov
jmp
stc
mov
or
pop
xor
repz
lahf
ljmp
js
cli
lcall
jbe
add
jge
or
sub
stc
push
sti
jmp
mov
mov
push
jbe
out
push
mov
call
jle
or
adc
filds
aad
hlt
xchg
lret
inc
jmp
mov
out
dec
iret
sbb
or
sbb
adc
jnp
clc
enter
adc
loope
pop
cmp
adc
mov
cmp
sub
mov
pushf
mov
test
sarl
test
mov
ret
sahf
shrb
lock
stos
jp
and
scas
ljmp
and
xchg
dec
xchg
fildl
stc
in
enter
xorl
pop
jno
sbb
lret
mov
sbb
jmp
sbb
cli
pushl
fsubr
out
or
call
pop
cmpb
loope
and
fsubrp
int3
and
sbb
cld
lret
pop
in
outsl
pusha
inc
push
ljmp
jnp
or
and
lret
xor
stc
inc
mov
jnp
pop
ljmp
jg
mov
xchg
cmp
sti
sbb
add
mov
inc
add
push
xor
adc
sbb
fdivr
outsb
outsb
jp
loopne
dec
pop
int
push
mov
fisubl
out
incl
cmp
inc
push
cmp
outsb
xchg
incl
shll
dec
jle
jecxz
loope
inc
js
cmp
xchg
xchg
push
pop
adc
xor
push
jmp
inc
mov
fnstcw
ret
incl
sub
lds
jp
in
sar
or
inc
dec
and
call
fmul
inc
lods
addl
push
adcl
jae
and
inc
fildl
mov
faddp
sbb
lcall
repnz
call
xchg
call
jmp
ficoms
imul
dec
movsb
repz
inc
fiadds
or
jmp
mov
arpl
icebp
movsb
std
pusha
jl
mov
ljmp
push
into
enter
and
shlb
jge
pop
stos
sub
jg
ss
inc
call
push
jno
jae
mov
and
mov
jle
mov
movd
mov
rcll
inc
cmp
or
push
hlt
adc
scas
pop
mov
sbb
idiv
jl
or
jnp
cld
push
out
sub
or
shlb
mov
subb
adc
shl
call
mov
ror
outsb
ljmp
or
mov
sbb
xorl
incl
push
repz
jmp
xchg
leave
loope
dec
fsubl
popf
xor
dec
push
loop
push
sbb
sbb
jle
int
pushl
popf
call
adc
outsl
into
ret
std
cmp
outsl
xchg
repz
mov
sbb
inc
cmp
es
adc
test
adc
jg
cmc
or
xchg
push
incl
pop
xlat
addb
and
push
sahf
pop
imull
mov
insl
mov
inc
mov
xor
aaa
mov
inc
ud0
dec
cmp
call
push
sub
add
jmp
and
inc
sahf
jmp
out
jns
jmp
cmpsl
incl
mov
cs
or
push
ret
ds
call
lds
jmp
in
mov
cld
jg
cli
mov
pop
push
xor
cmp
popf
rclb
push
test
movsl
ret
in
push
pushl
xchg
adc
jle
jl
jmp
add
push
mov
mov
mov
mov
dec
roll
lcall
xor
ss
jge
ds
ret
stos
ljmp
mov
outsl
into
pop
mov
sbb
lods
and
outsl
pop
inc
mov
pushl
in
gs
lcall
and
mov
cwtl
add
sub
sahf
gs
decl
mov
scas
js
adc
cld
ljmp
xor
ss
bound
and
ljmp
lds
sbb
das
repnz
push
sar
aam
sub
movsb
xor
dec
decl
mov
sbb
sbb
jns
out
jg
add
rcl
xor
or
xor
fdivrp
and
jae
fsubrs
sub
push
scas
and
pop
push
jb
xchg
mov
mov
clc
hlt
mov
das
in
ljmp
iret
inc
pop
mov
fs
scas
std
cmp
and
pop
sub
adc
decl
mov
ds
sub
push
aad
push
hlt
dec
or
mov
lcall
jns
outsb
iretw
inc
jns
jno
in
rolb
mov
xchg
aas
mov
xor
clc
and
add
push
in
sbb
xor
mov
pop
and
out
loope
imul
fcoml
imull
xchg
ret
pop
mov
push
mov
imul
push
mov
imul
sar
sub
mov
out
shlb
lret
cmp
mov
adc
jo
jle
jmp
jb
pop
xor
ja
out
call
xchg
jmp
decl
mov
add
loopne
xchg
daa
into
mov
mov
pushf
sub
hlt
movsl
lret
dec
loopne
xor
loopne
mov
or
and
jge
cld
mov
js
sub
mov
inc
jmp
mov
pushl
pop
cli
pop
mov
mov
test
cmc
xchg
ret
adc
pop
pop
pop
cmpb
jns
jmp
fsubs
imul
fildl
fwait
jae
fisubs
mov
fadds
ss
aas
pop
cmp
pushl
insl
cmpsl
inc
lods
inc
mov
and
fcmovbe
lds
cmp
push
les
mov
adc
pop
pop
push
mov
cmp
aas
mov
int
fs
daa
dec
das
test
and
lock
js
pop
add
cmpsl
sbb
lcall
adc
movsb
cmp
jmp
push
lea
call
movsl
cli
lods
xchg
ljmp
cmpsl
ja
int
mov
jo
jecxz
mov
lahf
and
sar
mov
add
pop
arpl
xor
lods
hlt
lods
jbe
leave
and
or
negb
lcall
loope
jecxz
sbb
nop
sbb
mov
loopne
sarl
mov
jo
add
mov
outsb
arpl
movsl
cmp
sbb
mov
add
jmp
ds
jmp
or
loope
and
xor
jbe
push
fsubr
mov
into
sub
jmp
mov
inc
hlt
and
pushf
das
jmp
fcomps
lret
stos
inc
mov
cld
aaa
xor
sbb
loop
xchg
sarl
rcr
push
mov
jns
pop
jg
ja
movb
dec
push
fdivl
jmp
xchg
inc
add
stos
push
mov
fbstp
ljmp
loopne
ljmp
xlat
or
xchg
sahf
xchg
dec
lcall
cmp
sahf
stos
mov
mov
mov
insl
and
mov
pushl
or
hlt
in
fldl
mov
das
icebp
mov
xor
pusha
mov
sub
or
ret
call
rcrl
xor
int3
and
or
xchg
into
dec
xchg
nop
lret
xchg
mov
xchg
shll
js
cmpsl
dec
test
fs
jo
test
mov
enter
imul
pushf
pop
scas
xlat
mov
push
mov
sub
cmc
push
or
xchg
outsl
test
cmp
pop
imul
in
rcl
ljmp
and
stos
push
decl
push
shll
cmpsb
test
shrl
cmp
jmp
ljmp
xlat
inc
adc
movsl
inc
pushf
mov
mov
add
out
xchg
or
inc
jmp
subl
xchg
jns
cmovne
aam
mov
jae
imul
mov
adc
nop
jp
dec
out
out
clc
gs
push
lret
jns
out
sar
or
shrl
je
mov
cltd
add
lcall
mov
or
roll
and
rcr
push
cmp
pop
ljmp
inc
pushf
in
inc
popa
test
add
pop
cld
push
shll
jnp,pn
xlat
and
inc
sbb
inc
lock
and
mov
jns
mov
inc
cld
mov
push
test
push
add
addb
lcall
mov
insl
icebp
int3
inc
lcall
bound
push
xor
bound
adc
cmc
into
mov
mov
adc
add
lea
xchg
add
mov
lret
std
ja
mov
inc
adc
mov
mov
ljmp
or
pushf
orb
iret
jl
cmpsl
pop
pop
mov
cmp
push
icebp
call
mov
adc
fcmove
jmp
iret
cld
scas
lods
cmp
std
pop
fimuls
sbb
mov
negl
push
icebp
int
cmpsl
in
test
xchg
mov
scas
sub
or
dec
lds
in
je
xor
pop
xor
test
cld
xchg
es
mov
jnp
xor
jg
dec
mov
jne
lahf
jns
add
outsl
addl
movsb
cmp
in
test
inc
stc
in
incl
xorl
xchg
jg
or
add
jmp
out
push
fldcw
pop
decl
mov
imul
inc
fisttpl
test
inc
adc
inc
inc
mov
cli
adc
mov
iret
adc
sti
mov
or
pop
sub
cmpsb
lahf
je
dec
inc
pop
lock
lcall
xchg
out
xchg
enter
add
std
jl
iret
test
outsl
or
cli
repz
push
movb
imul
lahf
test
adc
push
dec
jle
faddl
call
mov
add
mov
cmp
xchg
es
add
push
cmp
outsl
cmp
aas
jge
dec
push
fldl
sbbl
cltd
pushf
fcos
ficoms
cmp
int3
sub
decl
mov
movsb
adc
stos
xor
int3
pop
sub
and
jnp
and
or
shlb
push
fistpll
vpmacssww
mov
incl
dec
inc
jmp
lcall
lods
add
pop
lret
loope
ud0
jo
std
lcall
jno
and
mov
mov
mov
inc
gs
mov
loope
std
lods
aad
imul
sbb
incl
inc
or
and
loop
inc
push
push
mov
or
sbb
cmp
jne
faddl
jle
or
cmp
jg
pop
addb
out
iret
gs
icebp
lret
jge
into
mov
xor
pushl
add
cmpsb
clc
cmp
and
xchg
mov
add
nop
ljmp
sbb
rcrl
mov
mov
inc
jg
mov
xchg
and
mov
mov
dec
in
jbe
daa
add
xchg
pushl
cmp
cmc
dec
cmp
cli
lods
pop
sub
dec
inc
loop
cmp
std
xchg
push
xor
enter
mov
mov
push
or
dec
cmp
scas
decl
je
jp
je
pushl
scas
or
incb
adc
mov
popa
test
and
push
es
mov
sbb
mov
dec
lods
fs
pop
sbb
aam
repnz
push
je
cmp
aam
cmp
jg
lcall
inc
bound
or
clc
repnz
fcmovnbe
dec
enter
add
mov
hlt
adc
decl
test
decl
aaa
test
push
mov
pusha
jo
and
sarl
out
insb
push
mov
pop
in
rcrb
jmp
pushf
mov
mov
insb
pop
sbb
push
scas
push
repnz
pop
pop
push
sbbb
das
lahf
bound
mov
lea
mov
fcmovne
scas
dec
ljmp
adc
icebp
pop
mov
mov
stc
ljmp
fists
lcall
adc
stos
adc
pop
push
and
ret
cmp
cltd
lahf
std
cmpb
imul
ret
jcxz
pushl
inc
dec
movsl
inc
and
mov
xchg
loop
shrb
sar
sub
add
imul
xor
pop
sti
hlt
fxch
scas
jmp
scas
or
adc
sbb
psubd
and
push
outsl
cmp
xchg
mov
movsb
jp
mov
cli
das
cmp
pop
outsl
decl
cmp
bnd
insl
das
loop
dec
dec
fidivrl
sbb
adc
adc
push
dec
cmp
dec
lods
xor
and
cmp
jae
push
jo
gs
fsubrl
ds
sbb
arpl
aam
in
jle
std
jmp
inc
pusha
xchg
mov
pop
int3
fdivs
pushl
out
push
mov
pushl
js
sti
loop
cltd
inc
pop
leave
cmc
in
mov
js
in
lret
jecxz
or
push
push
add
subb
sarb
sbb
lods
pop
in
adc
inc
lods
hlt
scas
dec
stos
mov
mov
test
ret
jne
movsl
jmp
sbb
or
aad
pop
lea
push
decl
push
ret
in
out
fists
add
mov
push
aad
repnz
fiadds
js
mov
mov
dec
mov
mov
push
or
test
les
imul
inc
out
xlat
jne
dec
test
call
test
sub
cmpsb
addr16
jo
mov
outsl
mov
jo
xchg
xor
dec
mov
fildl
test
ljmp
mov
sbb
cli
cmp
dec
adc
call
dec
dec
mov
incl
dec
mov
leave
adc
push
dec
iret
sub
aas
in
test
mov
div
sarb
fldt
pop
adc
test
call
popf
mov
inc
nop
cli
mov
out
icebp
lds
dec
pushl
pop
push
xchg
lcall
add
mov
in
imul
cld
incl
jns
shr
or
mov
mov
test
jecxz
dec
and
cmp
pop
xchg
jl
lods
outsl
aaa
dec
xor
add
call
das
push
and
call
and
lock
jnp
out
jnp
sub
add
incl
dec
mov
pushl
js
jbe
jle
das
pop
out
out
test
jno
in
push
decb
out
or
dec
and
dec
jmp
idiv
jecxz
pop
dec
sub
ja
mov
stc
or
orb
add
jmp
gs
cmp
lock
jmp
cltd
inc
cltd
push
int
or
lcall
mov
sbb
inc
jecxz
pusha
xor
jmp
jne
lods
leavew
adc
ljmp
mov
sub
jmp
scas
lcall
int
xor
pop
jg
das
loop
or
pop
and
pop
xchg
and
incl
jge
mov
xor
inc
je
in
outsl
test
int3
imulb
cli
xchg
sahf
mov
inc
sbb
pop
iret
insl
lahf
mov
shlb
decl
dec
xor
lods
mov
jae
xchg
adc
cli
jbe
movsl
loop
add
dec
mov
lock
test
or
incl
loopne
lods
testl
pop
cmpsb
arpl
ffree
mov
add
out
and
push
rorb
mov
jns
pop
iret
dec
jg
jns
ljmp
icebp
lcall
jmp
mov
loop
pop
cmp
inc
sbb
scas
and
movsl
pop
jmp
cmpsb
sub
call
mov
ljmp
cmpb
outsb
and
sbb
pop
pop
int
icebp
loope
pop
test
push
and
lock
add
and
nop
xchg
pushl
ret
mov
ljmp
clc
push
jmp
xor
push
loopne
test
jae
pop
sub
movsb
inc
notl
xchg
mov
push
or
inc
sti
cmpsb
fmul
xlat
add
or
mov
and
adc
in
fisttps
loop
adc
hlt
jbe
mov
outsl
pusha
xchg
add
jmp
mov
dec
mov
orb
movsb
dec
ljmp
push
lcall
add
or
mov
rcrl
pushf
xchg
call
das
or
test
inc
jmp
pop
mov
xchg
dec
popa
fisubrs
or
repz
jns
shl
jae
das
push
lcall
clc
icebp
test
lret
sbb
daa
pop
imul
pushl
inc
ja
jb,pn
call
sbb
fsubrl
pop
repnz
jge
das
loope
cmp
fnsave
xchg
jne
inc
jg
test
insb
outsl
add
xchg
iret
fwait
lock
dec
ja
nop
test
inc
cmp
push
push
pop
lods
cwtl
mov
pop
adc
cmc
imul
pop
incl
arpl
lock
pop
pop
mov
push
das
jb
mov
fs
push
test
jge
daa
pop
mov
xchg
test
mov
js
aad
mov
sbb
push
lds
out
pop
outsl
insb
mov
outsl
xor
imull
call
mov
faddl
rcr
add
adc
dec
pop
cmp
cmp
push
jmp
imul
lcall
pop
inc
sbb
test
incl
ja
cmp
std
mov
imul
iret
cmp
xor
sbb
inc
add
add
cmpl
xchg
incl
pop
rclb
xor
and
addr16
cmp
push
in
fisubs
adc
xchg
adc
sbb
rcll
in
cmp
push
mov
adc
lcall
jle
adc
jbe
mov
cmpsb
js
cmp
sub
dec
pop
lcall
push
out
mov
sub
addb
cmpsb
sbb
mulb
push
ret
mov
sbb
cmpsb
or
sub
and
clc
xlat
iret
imull
inc
pop
loope
add
fisubrs
dec
call
cmpsl
dec
pop
add
mov
popa
dec
mov
sub
incl
ja
mov
fxch
mov
and
mov
in
outsl
call
dec
lea
push
or
incl
hlt
add
jmp
xchg
mov
adc
shlb
sbb
cmp
add
jmp
lods
pop
xchg
scas
lcall
mov
mov
jb
sbb
or
sbb
xchg
test
xchg
push
leave
cmp
dec
mov
sbb
mov
cmovnp
mov
sarb
jecxz
in
cld
jg
mov
sahf
incl
fdivrp
shrl
cltd
jae
mov
stc
inc
jmp
fisubl
test
sahf
cmp
lcall
cmpsb
pop
stc
test
jae
jmp
rcr
and
jg
sub
sbb
xchg
xchg
sub
icebp
cmp
das
push
mov
pop
call
pushf
stos
dec
call
sub
sub
sbb
add
and
mov
pop
cmp
jne
push
sbb
incb
mov
rclb
mov
cltd
out
jmp
dec
push
sar
xchg
addl
dec
add
pop
push
mov
or
jbe
mov
mov
lahf
jo
dec
adc
inc
xchg
imul
push
hlt
decl
mov
pushl
and
jae
out
imul
test
out
xchg
cmp
mov
pushl
dec
jno
adc
arpl
enter
icebp
sbb
icebp
decl
and
sar
sbb
ljmp
imul
cmp
decl
push
lahf
imul
test
jmp
shrl
aad
test
sub
xchg
aas
movsl
dec
fwait
mov
sub
arpl
jg
or
movsl
pop
add
sbb
inc
aad
rcl
incl
lret
roll
ljmp
inc
xor
or
incl
js
cmp
ffreep
jmp
adc
pop
dec
clc
xchg
mov
enter
push
sub
jle
lcall
or
rorb
stos
dec
movsb
hlt
xlat
notl
ljmp
movsl
cli
incl
xor
incl
in
fxch
incl
mov
cmp
movsb
bound
xchg
stos
bound
inc
xor
loopne
sti
sub
and
xchg
xchg
inc
pop
incl
jle
popa
inc
insl
add
std
in
out
inc
cltd
hlt
sbb
xorl
mov
bound
jmp
sbb
push
inc
hlt
inc
jmp
xchg
mov
fcoml
addb
pushf
aad
ror
outsb
iret
shrb
pop
arpl
dec
and
js
cmpl
push
testb
dec
lods
data16
pop
jmp
sbb
pop
cmc
decl
dec
cmp
xchg
pop
adc
lcall
in
pop
push
adc
dec
ljmp
test
je
nop
xchg
lahf
sub
insb
das
xor
cmp
and
xor
stc
ret
outsb
ret
jg
pusha
mov
sbb
mov
lcall
cmp
dec
lret
out
xlat
pop
xor
movntq
mov
ret
sahf
test
jp
lods
mov
lods
xor
daa
in
jecxz
cmpsb
sbbb
sarl
ja
outsl
add
add
loope
lahf
aam
addr16
fmul
xchg
and
jmp
jg
inc
xchg
ss
fwait
ljmp
dec
and
dec
dec
decl
jno
jl
add
sti
xchg
pushl
sbb
inc
fadd
sub
mov
inc
dec
sbb
jno
jmp
arpl
mov
pop
jg
cld
imul
xchg
inc
mov
cmpsb
and
movsl
xchg
push
or
std
test
lods
jb
popa
mov
cld
cmp
lods
mov
and
adc
incl
mov
add
dec
scas
in
xor
add
pop
js
into
adc
mov
fs
popa
or
jae
pop
lds
mov
scas
sar
outsb
dec
or
roll
and
jg
cmp
rcrl
jp
mov
cmp
mov
test
or
loopne
sbb
xor
mov
add
mov
lea
out
bound
jle
call
call
test
daa
xchg
jmp
sahf
fwait
scas
ljmp
testb
xchg
xor
jmp
pop
or
scas
jbe
decl
ja
push
inc
shll
sub
clc
andb
pop
or
sbb
popf
pop
loopne
push
cmp
test
mov
clc
jnp
cmpsb
xchg
push
pop
xchg
dec
out
mov
mov
jp
stos
shlw
sub
out
inc
push
fsubl
jg
pop
push
js
add
push
pushf
mov
cltd
inc
aam
cli
call
aaa
fsubrs
cmp
sub
loope
jl
mov
jg
dec
mov
jne
jecxz
out
mov
imul
dec
sub
push
std
fs
leave
dec
out
pop
cmc
jmp
mov
xor
pop
inc
rorl
push
addr16
repz
ljmp
popa
xchg
xor
pushl
enter
jae
data16
sub
sbb
push
gs
mov
call
bound
jmp
push
cli
repnz
push
lods
jmp
push
sub
fs
jp
sahf
lret
lcall
mov
pop
add
insl
pop
call
jo
lret
mov
sub
nop
cmpsl
mov
dec
test
mov
lcall
lcall
pop
sti
data16
push
in
xchg
mov
lcall
nop
mov
push
mov
test
jl
inc
push
loope
xchg
jns
dec
sbb
push
mov
ljmp
sbb
repz
mov
add
test
and
aam
jle
dec
outsl
syscall
inc
and
inc
inc
dec
mov
adc
xchg
cmpsl
sbb
shrb
xlat
cld
push
clc
adc
outsl
mov
fsubl
jo
imul
js
dec
clc
add
mov
dec
test
xchg
out
inc
ficoms
outsl
jmp
aas
jg
pushl
add
cmp
ret
xchg
push
sbb
pop
sbb
push
xor
pop
enter
repz
pop
ss
pop
dec
pand
outsl
ljmp
cmp
pushl
mov
cltd
lock
insl
negb
jmp
sbb
jmp
dec
fbstp
imul
call
scas
mov
add
pop
das
cmp
mov
movsl
lcall
jo
idiv
outsl
xchg
mov
fdivr
xchg
lahf
pop
cmpsl
out
mov
lock
mov
ret
cmpsl
inc
mov
and
pushl
push
cmpsb
in
xchg
push
xchg
and
jnp
fldt
call
inc
fidivrl
call
pop
sub
dec
addr16
inc
jmp
or
in
dec
pop
nop
or
cltd
clc
sub
xchg
aad
into
loop
rolb
lret
jge
decl
adc
incl
mov
push
mov
ljmp
stc
out
subb
add
xchg
xchg
cmp
mov
cld
mov
lcall
test
lcall
stos
inc
jg
adc
mov
adc
mov
test
mov
lcall
rolb
push
sub
jge
xchg
push
imul
dec
mov
cli
inc
orb
aaa
cmpsb
mov
or
js
negl
jmp
jge
sbb
mov
sub
pop
aam
test
lcall
cmp
cmp
sahf
pop
ss
add
push
les
movsb
adc
jnp
test
add
loop
or
pop
icebp
sbb
imul
mov
pop
iret
loopne
inc
pop
cmp
pop
shrl
divb
inc
xchg
incl
mov
fidivrs
pop
cmp
notl
push
jbe
jno
out
pop
out
cltd
sbb
test
shrb
lods
fsub
and
lcall
rcrl
mov
and
lcall
dec
arpl
or
sbb
lods
add
test
icebp
ja
cmp
call
call
ret
cld
pushl
xchg
xor
dec
inc
mov
jno
test
cmp
gs
incb
or
lds
jmp
dec
cltd
call
test
dec
outsl
sahf
cmp
pushl
push
dec
push
test
push
adc
mov
sub
jg
sub
push
inc
cli
sub
mov
pushf
or
xor
movsb
sti
jo
leave
cld
div
sahf
sti
add
das
dec
mov
lret
sbb
test
repnz
out
sahf
push
dec
xchg
pop
sub
scas
das
inc
int
or
sbb
push
das
push
jno
or
jmp
pop
mov
jmp
cmp
sbb
lock
call
push
push
mov
std
insb
mov
or
xchg
cmp
pop
sub
sti
cmp
sbb
ljmp
jno
call
ja
cmp
mov
and
adc
aas
jbe
mov
sbb
push
jmp
cmp
jns
stc
loop
shll
or
xchg
test
ret
pop
ret
scas
out
fcmovne
adc
push
xchg
push
lods
scas
dec
xor
and
mov
xor
lcall
xlat
dec
into
mov
cli
cmova
aam
fcomps
incl
xchg
int
insl
jbe
incl
daa
faddp
call
movsl
sahf
in
adc
jae
cld
jb
and
in
loope
mov
add
xchg
or
loope
call
mov
pop
nop
jle
sbb
lcall
sahf
lcall
and
sar
std
pop
bound
loop
arpl
ret
fs
add
ficoml
decl
pop
dec
jle
adc
ljmp
ds
pop
dec
dec
push
ljmp
sbb
cmp
and
cmp
fcos
mov
mov
enter
cmp
cmp
sar
and
cmpsl
push
outsl
pushl
mov
or
pop
jg
xlat
pop
outsl
push
lea
insl
xor
lcall
lahf
sbb
pushl
hlt
adc
ret
pop
push
jo
push
je
dec
je
add
or
jg
mov
sub
fs
lcall
adc
decl
xchg
ds
out
mov
pushl
imul
push
mov
mov
scas
jmp
rcrl
push
int3
pushf
leave
in
cmp
cmpsl
call
adc
loope
lods
mov
or
adc
sub
xchg
cmc
ss
add
inc
mov
fstps
xchg
mov
lret
mov
imul
ret
cltd
in
jmp
loop
js
cld
cmpsb
out
mov
incl
push
mov
lock
out
mov
add
lods
pop
loop
and
incl
cli
and
xchg
xor
incl
xchg
enter
mov
stos
test
fwait
and
stc
and
outsl
xchg
int
or
fisubrl
fmull
enter
xchg
push
stc
xor
out
test
test
mov
xor
scas
nop
push
xchg
add
lds
adc
lea
pop
test
and
push
js
jmp
in
jne
xchg
insb
shlb
mov
icebp
lea
inc
lock
mov
outsl
cmpb
std
cmp
hlt
stc
outsl
sbb
imul
mov
dec
sub
mov
call
and
not
lcall
rcrb
and
adc
jg
iret
arpl
arpl
imul
pop
jl
out
movsb
jmp
xor
loop
idiv
mov
push
mov
lret
pop
rcrl
or
sti
arpl
movsb
jnp
cmp
in
outsl
dec
lea
ljmp
adc
and
xchg
mov
rol
jle
in
stc
jo
push
decl
inc
mov
shl
add
jo
push
and
mov
in
in
xor
sbb
les
repnz
shll
pusha
hlt
jo
mov
or
lcall
lock
mov
xor
xchg
inc
dec
pop
gs
dec
adc
and
das
fcmovu
fnsave
fwait
pop
js
push
popf
gs
jnp
fs
aas
adc
sbb
mov
inc
push
sub
std
push
inc
stos
shl
arpl
fcomip
mov
sbb
ljmp
insl
mov
dec
xchg
lret
mov
std
add
in
mov
adc
fs
sub
loopne
cmp
loop
mov
fcmovnu
call
cmp
sbb
sbb
repz
mov
pop
scas
xchg
pop
lahf
and
out
shrl
push
add
or
repnz
lcall
mov
xchg
inc
adc
fisttpll
aam
testb
inc
dec
idivl
cmc
mov
fildl
test
imul
jno
icebp
push
dec
enter
inc
notb
shll
mov
cmpsb
or
lock
fwait
clc
adc
daa
ss
js
daa
aam
ss
aam
aaa
sub
cmc
xor
outsl
outsl
subb
insb
loop
mov
push
dec
test
sbb
adc
add
out
push
push
add
lea
or
incl
hlt
andb
nop
fnstcw
loop
cld
or
jmp
jg
pop
xor
rclb
imul
jne
mov
fmulp
pop
xor
xchg
cli
pop
call
sbb
jle
inc
cwtl
lods
cmp
jmp
push
fdiv
pop
call
or
pop
sub
mov
cmp
inc
call
aam
fcos
xchg
sti
mov
xchg
testb
les
and
sub
dec
adc
gs
call
aaa
dec
enter
pop
mov
test
adc
jp
or
outsl
rclb
mov
mov
aam
jmp
pop
add
cli
test
pushl
mov
mov
sbb
pushf
mov
fdivr
pop
jmp
sbb
mov
xor
pop
sub
rcrl
mov
sub
push
aas
sub
call
stos
push
out
push
jmp
mov
cmp
lock
lret
push
cld
or
rorl
mov
outsl
and
ficoms
or
sub
dec
dec
fnstsw
inc
dec
inc
xchg
out
cltd
or
decl
pop
gs
test
ret
ljmp
ja
les
dec
or
sti
pop
xlat
stos
xor
mov
stc
stc
loopne
dec
hlt
jg
lret
adc
es
mov
jmp
sti
jle
pushl
or
adc
ja
rcrl
popf
ja
es
outsl
jecxz
arpl
jo
add
sbb
addr16
ljmp
lahf
jg
xchg
ss
or
or
sub
shrb
loopne
jmp
dec
xor
jmp
dec
ja
push
pop
xchg
jl
rolb
aaa
or
sbb
decl
mov
push
filds
pop
or
in
cmp
lock
les
mov
sar
ljmp
movsl
cltd
loop
adc
push
repnz
push
cmp
arpl
push
leave
push
repz
popf
pop
call
in
int
ljmp
xor
lahf
add
incl
pop
cmp
in
adc
xchg
nop
jmp
mov
mov
jno
or
add
testl
and
movsl
sub
jb
cltd
pop
sub
fcos
sbb
daa
pop
loop
fldl
mov
stos
scas
negb
je
insl
cltd
push
iret
pushl
dec
rolb
pop
push
decl
jl
adc
mov
in
movsl
mov
lcall
xor
dec
ljmp
leave
inc
test
cmp
or
mov
pushf
notl
scas
or
call
pop
dec
das
pushl
pop
les
mov
xor
and
enter
fistpl
cmpsl
das
jge
xlat
call
aam
pop
repnz
dec
cmp
add
aam
and
cmp
mov
mov
inc
sub
into
stc
mov
movsb
dec
push
subl
jg
outsl
mov
mov
mov
fistpll
xchg
js
or
mov
xchg
xor
jns
xor
scas
into
and
out
pushl
pop
loopne
ja
popf
sbb
gs
pop
call
sub
sar
inc
icebp
dec
addr16
push
sar
clc
inc
shlb
test
cld
xchg
lods
sbb
sub
movsl
ret
xlat
and
notl
dec
hlt
lret
int3
lods
addr16
inc
repz
cltd
call
div
jmp
mov
mov
fildll
pushl
jge
mov
xchg
arpl
rorl
int3
call
std
cmpsl
ljmp
mov
mov
roll
in
dec
fimuls
shll
adc
dec
xor
or
xchg
test
stos
xor
into
cmc
jg
jp
outsl
lea
sub
sub
stc
jg
mov
enterw
sub
test
mov
jecxz
andl
loopne
xchg
xor
aad
sbb
mov
movsl
arpl
jmp
mov
or
mov
dec
out
aad
in
lahf
jp
pop
loope
inc
das
fwait
in
ret
call
sub
mov
icebp
inc
sub
cmp
xor
dec
lock
pop
das
pop
pop
mov
jmp
mov
sbb
inc
add
ror
mov
subb
pop
pop
call
fucomp
jmp
int3
or
mov
mov
xor
cli
mov
and
ret
mov
push
sub
adc
addb
or
fwait
and
pusha
lea
xchg
jge
mov
add
pushl
cld
movsb
add
mov
les
sbb
iret
lcall
daa
pop
dec
lcall
mov
iret
and
cs
inc
scas
shll
inc
push
and
inc
push
pop
incl
aaa
push
push
adc
or
incl
sub
jle
sub
sbb
ss
cmp
ret
stos
ljmp
fistpl
sbb
outsl
mov
adc
jle
cmp
lahf
mov
aad
and
pop
ds
xor
add
idiv
pop
out
pop
leave
pop
in
outsb
cld
mov
sub
dec
arpl
cmp
cmp
and
jmp
cli
dec
shl
add
xchg
cmp
pushl
rcll
outsb
clc
cmp
lock
fcos
and
repz
in
shll
sub
inc
lret
pop
or
cld
mov
push
ret
scas
cmc
outsl
push
xchg
inc
call
loopne
xchg
lcall
mov
push
ja
and
fstps
mov
les
inc
bound
or
inc
pop
andl
adc
mov
test
push
sub
mov
fbstp
aad
subl
mov
sub
sub
inc
lods
rcrb
jg
push
loop
imul
pushf
fs
push
shll
cld
icebp
mov
push
scas
outsb
or
fcmovb
sub
cli
xchg
mov
sub
dec
jecxz
scas
aaa
add
jb
push
hlt
rolb
dec
stc
pop
pop
pushl
and
inc
pushl
lcall
call
cmp
xor
jae
lds
push
adc
xchg
sub
popa
scas
pop
push
xlat
int
outsb
movsb
pop
xor
pop
or
push
pushf
mov
enter
xchg
les
testb
rcl
fs
add
lcall
in
jge
js
loope
mov
fsubrl
xor
jge
fdivr
fs
xor
es
in
cmp
movsb
loopne
mov
jge
imul
sbb
dec
or
cmp
fisubs
dec
test
sahf
jmp
or
sar
lea
movl
decl
xor
pushl
push
inc
sbb
iret
dec
ss
mov
jno
lock
in
dec
das
inc
sbb
lods
jnp
leave
mov
jmp
mov
push
loop
cmp
psubq
cwtl
aaa
movsb
decl
cwtl
insb
or
cmp
lret
lock
std
jmp
pop
faddl
mov
jmp
sub
mov
fdivr
lahf
sbb
cli
mov
mov
data16
add
ds
add
or
dec
inc
sub
push
das
mov
test
inc
lahf
jb
fadd
add
ljmp
add
ljmp
les
pop
sbb
inc
outsl
in
and
sbb
push
inc
xchg
mov
pop
cmpsb
cld
mov
mov
cwtl
idiv
inc
sahf
int3
push
outsb
mov
sbb
jmp
jg
xchg
mov
insb
push
lcall
jnp
xor
cmp
cli
rcrb
faddl
push
fs
adc
call
test
or
test
cld
incl
loope
add
in
cld
addr16
xchg
cwtl
stos
jmp
xchg
mov
das
imul
fdivrs
mov
pop
sbb
mov
gs
xchg
mov
xor
pop
pop
std
jecxz
sbb
das
inc
ljmp
jae
jle
and
aaa
fcomps
loope
inc
insb
outsl
lods
xlat
and
std
jp
ljmp
ljmp
mov
mov
mov
sahf
out
mov
jne
pushl
dec
mov
sub
add
push
nop
and
stos
jp
sub
cmc
add
incl
sub
lods
and
and
add
scas
mov
jg
add
pop
stos
or
mov
pop
dec
ds
adc
in
roll
jno
cld
pop
int3
add
jecxz
das
cli
mov
int3
push
mov
dec
jno
adc
das
xchg
cld
xor
dec
outsl
sub
imul
mov
insb
cld
jns
movsl
push
decb
add
cmpb
clc
repnz
ljmp
pop
sbb
inc
dec
fwait
jne
push
leave
and
ret
mov
std
push
and
lods
jns
out
and
pop
jne
pop
mov
dec
push
xlat
xchg
jmp
add
mov
lret
jg
rorb
insl
call
cmp
decl
bound
mov
cmp
jecxz
call
in
sar
lcall
pop
sub
call
pop
inc
lods
cmp
xchg
mov
rcrl
repz
cld
dec
sub
inc
lcall
mov
jg
sbb
pop
negl
cmp
daa
sub
stc
lret
cmpsb
aaa
cli
inc
mov
ret
push
mov
outsb
cli
sbbb
xor
xchg
addr16
or
scas
int3
inc
leave
mov
mov
and
lock
mov
cmpsb
adc
mov
jp
aas
fdivr
aad
aad
dec
cmp
jae
mov
sbb
dec
and
xchg
dec
push
loope
mov
shl
mov
push
pushl
sahf
mov
call
mov
fists
jmp
jge
sbb
adc
mov
lock
cmp
arpl
adc
popf
and
add
and
insb
incl
dec
imul
jle
das
cli
push
dec
rcll
mov
cmc
decl
adc
scas
decl
fldenv
outsb
mov
jmp
or
xchg
insl
jp
jle
add
lea
pushl
cmp
dec
xchg
mov
sbb
jnp
dec
jmp
arpl
sbb
jns
data16
jg
lahf
repnz
sbb
xchg
les
jle
lea
loop
repz
ror
mov
xchg
lock
or
jg
dec
sub
mov
adc
leave
lret
ljmp
xor
testl
cli
mov
aaa
out
push
cmpsb
mov
jecxz
and
and
add
xor
adc
mov
xchg
icebp
push
jl
cmp
fisubrs
fnstsw
aas
push
inc
xlat
dec
imul
xor
jmp
mov
xchg
adc
call
in
in
push
incl
repz
sti
fiadds
jge
lahf
sbb
push
loop
mov
pop
je
and
loop
jnp
pop
fdiv
fbstp
push
add
jp
int3
and
xchg
jle
or
inc
std
out
jmp
scas
xor
adc
fdivs
jmp
mov
ds
mov
loope
pop
inc
popl
xor
push
std
ljmp
mov
and
cmp
ja
push
addr16
push
pop
ja
sub
dec
call
aam
jge
cmp
xor
rol
cmc
dec
call
or
xor
or
cmp
fnsave
xchg
pop
test
pusha
decl
adc
aas
push
out
adc
clc
call
test
call
cwtl
mov
daa
test
jae
or
loopne
lret
and
or
in
mov
xor
xchg
test
in
call
add
mov
inc
rcr
sbb
mov
jmp
mov
ja
mov
push
pop
mov
and
or
pop
push
xchg
adc
add
in
pushf
mov
clc
scas
ficomps
in
arpl
sub
decb
pop
lea
push
or
xchg
aas
xchg
mov
sbb
or
inc
dec
adcl
jns
push
sub
lret
cmc
inc
dec
push
incl
push
ret
out
push
sbb
pop
mov
pushf
ret
loopne
sub
cmp
aam
das
jecxz
lods
or
jecxz
add
popa
mov
pop
sub
movsl
xchg
insb
pop
mov
dec
add
ljmp
mov
mov
repnz
xorb
sahf
scas
cmp
jle
ss
lcall
jl
add
fistps
jmp
jne
adc
movsb
jmp
mov
pop
push
jmp
xlat
pop
in
incl
push
jbe
push
jne
jecxz
or
fcmovb
fisubrl
pop
mov
mov
pop
ljmp
imul
divl
sub
inc
mov
ljmp
cmc
stc
mov
icebp
outsl
outsb
ljmp
inc
lahf
iret
std
popf
cwtl
leave
add
loop
mov
adc
cwtl
jmp
stos
loop
out
inc
dec
and
test
addr16
push
jbe
lock
jbe
sarl
add
xchg
mov
decl
lahf
or
incl
cmpsl
cmp
incl
enter
insb
push
pushl
mov
and
shlb
inc
add
pop
mov
lds
push
outsl
hlt
loop
push
cmc
mov
lcall
mov
jmp
test
imul
and
into
jbe
inc
dec
out
call
mov
inc
xchg
fistpll
cmp
xchg
add
decl
adc
leave
incl
dec
fdivrl
insb
fdiv
jne
lods
cmpsl
daa
add
xor
jge
or
and
cmc
out
out
std
aaa
and
ja
cwtl
or
cli
xor
cmp
add
jp
andb
pop
adc
adc
pop
icebp
lret
in
mov
mov
loopne
push
faddl
lock
adc
sub
decl
and
sbb
add
xlat
lods
cli
shll
pushl
stc
or
test
cmpsl
xchg
ljmp
and
fidivs
mov
or
repz
popa
pop
push
sbb
push
sbb
push
jge
enter
jno
fbld
mov
popa
and
dec
push
mov
out
or
fisubl
fnsave
jecxz
call
ds
leave
ljmp
jmp
mov
push
xlat
inc
xor
pushl
inc
and
daa
lcall
movsb
xchg
inc
sbb
add
push
mov
push
sti
fs
jne
push
mov
cmpsl
sar
xor
ds
jne
leave
call
outsb
xchg
loope
jmp
loope
aaa
cmpsl
sti
mov
mov
test
adc
das
aad
out
inc
push
adc
adc
loop
popa
fisubl
cmp
arpl
in
cmp
fcomp
push
in
cmpsb
pop
out
or
push
out
jle
xchg
incl
testl
addl
lcall
je
pop
ljmp
loop
cmpsb
and
std
sbb
std
dec
fstp
jb
jbe
into
in
es
push
add
sub
pop
outsl
jle
fsubs
and
incl
add
inc
decl
icebp
xchg
out
pop
test
cld
pop
jmp
cmp
cmp
mov
push
cmp
aas
xor
push
xchg
pop
mov
mov
test
cmp
lea
nop
cmp
pusha
les
test
into
outsb
jae
mov
jbe
popf
mov
push
xchg
push
jb
ljmp
xor
aas
pop
dec
push
fwait
xor
stos
xor
pusha
push
fcom
lret
push
xchg
mov
xchg
jmp
mov
sub
clc
loopne
scas
push
shrl
mov
mov
cli
mov
jnp
xchg
xchg
jns
incl
mov
rorb
arpl
and
aas
in
push
pop
jmp
cltd
sub
mov
incl
and
and
mov
push
ljmp
lock
icebp
mov
mov
fisubrl
ljmp
incl
cmp
mov
push
mov
and
nop
test
je
sub
rorb
xchg
inc
mov
xchg
jg
jnp
mov
hlt
loopne
psubb
and
js
popf
push
cmp
mov
out
cmp
repz
dec
decb
push
sarb
dec
sub
or
es
lret
cld
in
fmull
xchg
out
jns
test
cs
pop
rorl
mov
movsl
mov
pop
mov
repnz
xchg
fwait
fs
jecxz
outsb
xchg
dec
cwtl
pop
mov
fbstp
cli
pop
mov
divl
enter
mov
in
jle
lock
jmp
clc
adc
lahf
ja
adc
mov
jo
aas
and
sbb
incl
dec
pushf
inc
jns
roll
shlb
mov
cmp
lcall
sahf
xor
repz
lcall
movsb
sub
call
xchg
outsb
int
rcll
fucomp
out
in
dec
sub
scas
stos
int
cmp
stc
rcl
icebp
daa
mov
pop
add
int
mov
imul
pusha
adc
mov
adc
outsb
stc
inc
lcall
das
cld
xchg
imul
into
js
mov
ljmp
insl
incl
call
push
xor
aad
xor
and
dec
enter
test
mov
clc
push
cmp
pop
popf
fnstsw
inc
cld
rcl
jbe
mov
movsb
out
push
nop
cmp
nop
or
adc
adc
push
xchg
mov
aaa
movsl
imul
xchg
add
lcallw
xor
ja
mov
daa
das
xor
push
mov
js
dec
mov
iret
es
jmp
push
push
sarb
add
xor
call
shll
jge
mov
outsb
ret
dec
orb
add
ret
jmp
lock
loopne
pop
sar
xchg
es
inc
es
cmp
pusha
scas
pop
and
push
icebp
addl
pop
push
repnz
movsl
adc
imul
mov
sub
loop
mov
scas
jnp
push
mov
in
lea
xchg
dec
jmp
fisubrl
stos
stos
pushl
mov
xchg
cli
dec
andb
pop
xor
rep
rclb
push
adc
push
andl
jmp
pusha
mov
popf
movb
incl
setns
inc
hlt
add
movsl
ss
das
std
aaa
insb
inc
les
mov
push
orb
stos
es
inc
cmp
daa
or
push
lcall
xor
jo
call
adcb
aaa
popa
clc
cltd
or
xchg
hlt
inc
fwait
inc
mov
mov
lcall
call
xorl
jge
sub
icebp
ljmp
or
je
pop
xchg
scas
lods
out
jmp
add
mov
cmp
sub
add
shll
lea
lods
jbe
les
inc
std
jnp,pt
push
mov
dec
mov
xor
lahf
add
push
leave
xchg
pop
inc
pop
sbb
cmp
loopne
inc
leave
filds
loope
and
jp
mov
cmc
cmp
jg
push
cmp
jg
insb
inc
mov
dec
ljmp
loope
std
xchg
add
inc
or
and
inc
cmp
adc
sub
dec
ss
adc
or
pushl
test
mov
dec
mov
in
xchg
call
fsubrs
lret
sar
ljmp
mov
scas
mov
xchg
fcmovu
aam
imul
inc
hlt
incl
mov
lds
mov
pop
outsb
add
pop
cmp
fists
lcall
ds
sar
js
or
jp
dec
xchg
dec
xor
shll
mov
orb
shlb
test
stos
sbb
sbb
aas
sarb
ljmp
into
add
cmp
pusha
pushf
pushf
dec
int
in
dec
lods
sbb
decl
outsl
stc
inc
incl
sbb
mov
ficomps
andl
dec
aaa
idiv
sbb
imul
jle
jno
dec
adc
mov
and
lcall
inc
loope
pushl
rcrb
xor
sbb
inc
adc
cmp
mov
jnp
push
add
or
inc
decl
in
scas
sti
inc
xor
add
push
lods
or
test
outsl
faddl
gs
fwait
sar
rcrb
add
xor
adc
jecxz
jp
cld
inc
loopne
fistpl
stos
xchg
pop
clc
mov
scas
fidivrl
bound
popa
adc
push
pop
cmc
push
push
enter
dec
pop
ret
cwtl
lds
mov
inc
xchg
dec
scas
mov
sub
mov
aam
aas
mov
bound
ja
inc
mov
inc
pop
cmp
jge
or
arpl
addb
pop
jmp
mov
insb
idivb
cmp
ret
and
sbb
xor
push
std
test
mov
pushl
or
sub
incl
lods
push
inc
call
sub
add
xor
sub
jbe
pop
cmpsb
lcall
insl
inc
mov
mov
or
int
rolb
clc
sub
adc
das
fisttps
ljmp
cmp
cltd
jns
icebp
xchg
pushf
sbb
decl
mov
rolb
pushl
sub
popf
push
inc
insl
jne
sarb
mov
inc
dec
scas
clc
fnstsw
pop
xchg
xchg
in
call
loopne
js
fstpl
addr16
sbb
call
adc
dec
call
inc
xchg
cmp
cmp
sti
out
sbb
jmp
fildll
cli
jg
sbb
cmp
fstpl
add
outsb
push
iret
loopne
fs
add
scas
jge
sub
cmpsb
imul
jmp
ljmp
push
mov
cmp
test
pop
sbb
and
xlat
inc
decl
cmpsl
sahf
push
and
outsb
filds
push
pop
push
sub
aad
int
mov
or
cltd
push
jg
fwait
add
xchg
xor
xchg
xor
outsl
std
sti
loope
daa
jno
int
dec
js
frstor
rcrl
dec
aas
out
aas
nop
xor
loopne
mov
pushf
mov
cmp
lret
call
or
out
jnp
mov
rcll
pop
in
jne
test
dec
push
fisttps
fdivs
inc
dec
icebp
push
push
leave
das
sub
xor
add
lds
idiv
lcall
xchg
mov
jno
sub
inc
dec
call
adc
pop
xor
jo
push
lcall
fsub
push
mov
iret
add
outsl
push
push
insb
lcall
or
pop
call
std
and
ret
stc
lea
call
jmp
sub
dec
pop
incl
daa
addl
mov
mov
jne
loope
pop
add
ret
mov
inc
dec
in
sbb
ljmp
outsl
dec
std
add
xor
outsl
push
mov
incl
loope
add
mov
test
aaa
xchg
leave
pushf
clc
push
push
lods
mov
aaa
mov
fwait
incl
fsubs
mov
push
sub
add
cmc
lcall
pop
mov
adc
pop
inc
mov
repnz
aaa
ds
jmp
jg
adc
notl
call
sbb
cmpb
ja
sbb
and
mov
mov
jg
decl
dec
movsb
mov
pop
scas
call
in
ds
addr16
jmp
call
in
shrl
outsl
dec
jnp
jecxz
dec
test
xlat
cltd
push
dec
adc
leave
or
rorl
ret
xchg
mov
mov
test
mov
in
loop
sub
cld
sub
sub
sub
into
cwtl
sbb
pop
mov
push
aam
cmpsb
das
xor
ja
jmp
jne
das
mov
divl
fistl
mov
cmp
sub
lods
xor
or
sbb
stos
jo
fs
loop
fistpll
fidivl
xor
cld
and
aaa
mov
jmp
jg
jle
push
fdivrs
daa
and
inc
jmp
sbb
mov
sub
icebp
xchg
fistl
mov
dec
mov
js
jno
aaa
xor
xor
ret
sbb
push
loop
sub
adc
lea
outsb
pop
mov
test
sub
and
repz
mov
loopne
inc
ljmp
in
inc
ljmp
aam
mulb
es
cmp
repnz
mov
push
outsb
decl
mov
incb
cmp
pop
lcall
in
aaa
xchg
xchg
and
inc
loopne
xchg
jle
inc
mov
iret
mov
rolb
xor
sub
gs
adc
bound
std
lret
sub
adc
dec
dec
andl
xor
pop
sub
pop
xchg
sbb
lock
sahf
fidivl
icebp
cmp
je
jbe
lahf
incl
loop
sar
push
fstl
jg
xor
incl
testb
imul
jns
hlt
fdivrl
outsl
outsl
rorl
inc
jl
test
push
cld
dec
fnstenv
push
aaa
cmp
daa
jmp
jg
lcall
aaa
sub
jmp
addr16
mov
pop
hlt
incb
mov
sub
xchg
mov
shll
adc
arpl
cmp
insb
or
and
or
sbb
cwtl
hlt
add
in
cmp
mov
dec
stos
repz
flds
adc
in
lret
call
loop
pop
jle
jbe
mov
loope
pushl
jp
push
jmp
adc
scas
push
ljmp
xchg
push
call
cmp
sahf
rorl
and
and
addb
aad
push
inc
incl
mov
mov
push
push
mov
lret
xchg
scas
cmpsb
lcall
add
lcall
mov
stos
incl
fwait
mov
dec
add
imul
popf
cmp
out
jge
test
movsb
jmp
fwait
sub
jg
push
mov
add
add
push
cmpsb
jmp
outsl
push
cmp
daa
cli
sahf
push
mov
pushf
movsl
jmp
ljmp
call
jbe
hlt
sti
stc
jg
outsl
xchg
bswap
mov
cmp
ficoml
mov
or
pop
lcall
mov
mov
aam
sbb
sub
andl
outsb
je
ret
inc
cmc
in
mov
lcall
pop
sti
lret
sbb
jecxz
stos
cwtl
mov
stc
cmpsb
mov
movsl
outsb
inc
das
call
jecxz
js
sahf
pop
jle
pop
cwtl
mov
test
sti
and
aad
or
xchg
ljmp
dec
push
inc
jp
push
mov
icebp
jnp
dec
jecxz
xor
push
mov
cmpsl
fiadds
clc
add
adc
movsl
jns
addl
mov
mov
inc
outsl
sub
sbb
pop
inc
pop
in
and
in
sti
cmp
xabort
jnp
out
insb
pop
jns
mov
dec
clc
adc
fidivs
das
pop
outsb
shrb
in
mov
push
lods
and
fdivrl
sti
ljmp
mov
fisubs
pop
fisubrs
xor
jmp
test
adc
push
and
push
std
es
cmp
cmpsb
das
pusha
sub
outsl
fisubrs
test
lret
mov
jmp
adc
sub
mov
in
test
in
inc
lcall
pop
sbb
es
jns
mov
jp
mov
es
push
aam
adc
pop
sub
jnp
std
and
stos
lods
je
or
ljmp
out
out
ljmp
pop
les
or
lea
mov
adcl
je
or
lods
lcall
push
sbbb
inc
push
ret
pop
mov
mov
cli
repz
cli
inc
and
jecxz
pushl
imul
ds
mov
and
jne
push
fmuls
shll
incl
jne
es
xlat
push
ljmp
bnd
arpl
and
add
rcrb
loope
sbb
push
sbb
popa
pop
adc
sbb
mov
sahf
inc
xor
xchg
cwtl
movsl
cmp
in
loop
lahf
decl
mov
mov
fst
loope
stos
fsubrs
out
incl
nop
fdivr
dec
xor
sbb
shll
mov
pop
scas
pushl
push
adc
ljmp
adc
outsl
sub
sahf
or
loope
nop
mov
pop
inc
push
lret
movsl
fisttps
les
rorl
and
inc
adc
lds
les
aaa
or
fcomip
adc
mov
jg
mov
jp
or
gs
mov
add
incl
mov
cmp
bound
and
cmc
lret
enter
push
lret
fsubs
jae
in
mov
ljmp
mov
xchg
mov
scas
in
iret
xchg
push
insb
and
xchg
sub
and
jle
add
pop
jae
dec
fs
mov
push
fwait
in
add
pusha
decb
lea
mov
aas
incl
inc
enter
mov
inc
dec
aas
incl
lds
adc
jb
out
adc
call
push
pop
mov
lea
and
enter
add
jg
push
lds
cs
inc
out
xchg
int3
xchg
inc
jmp
pop
mov
jne
mov
mov
rclb
push
ja
insb
popa
jmp
imul
inc
sub
loope
cmp
scas
sub
int3
jae
clc
or
mov
rcll
popa
jmp
out
mov
jb
insb
data16
xchg
add
aaa
imul
loope
add
decl
jbe
cs
shlb
add
dec
cmp
jmp
jg
add
jo
and
jae
fdivr
lock
mov
repz
call
adc
icebp
push
fcompl
aad
pop
inc
jg
cmp
adcb
mov
sarl
lock
mov
jmp
push
jl
mov
jo
and
xchg
mov
cld
ljmp
cmp
or
call
xchg
or
incl
sub
call
lea
cld
push
dec
icebp
or
jg
and
add
test
pop
mov
jmp
psrld
je
ds
and
lcall
repz
cmp
movsl
call
xor
mov
xchg
test
js
ss
dec
mov
sub
icebp
or
ljmp
mov
sbb
add
pop
cmp
js
movsb
enter
cs
mov
mov
adc
dec
mov
or
jmp
dec
je
call
jno
jmp
loope
inc
ret
mov
decl
leave
popf
pop
xchg
push
push
icebp
and
push
jg
rcll
std
or
cmp
pop
pop
xchg
incl
push
jmp
sub
inc
jo
xchg
cld
rcrl
push
or
push
incl
out
imul
loopne
std
cmc
xor
cwtl
inc
dec
adc
cltd
mov
call
fcompl
notl
xor
fnstcw
data16
dec
add
push
lods
cs
push
into
mov
dec
dec
call
aam
add
rol
and
lock
scas
jmp
cmpsl
fisttpll
es
push
incl
pop
add
cmc
icebp
cmc
push
or
mov
lds
arpl
mov
push
shlb
test
push
inc
loopne
cwtl
jge
sbb
lret
std
mov
dec
adc
mov
call
adc
sbb
in
js
jle
fbld
call
push
scas
pusha
pushl
jb
jge
outsl
enter
cltd
aad
ret
arpl
mov
or
fistpl
dec
in
call
cmp
jmp
sbb
js
fcomps
jbe
leave
movsl
and
fbld
daa
mov
pop
inc
jle
jbe
nop
lock
out
dec
fcom
bound
fdiv
adc
cmp
jmp
mov
outsl
fcoms
aaa
ljmp
imul
mov
xorb
lods
outsl
sti
fs
mov
sub
inc
mov
mov
and
mov
fidivrl
movb
or
int
pop
push
mov
dec
cmp
sub
les
adc
in
call
clc
mov
loope
incl
or
mov
rorb
pop
pop
je
push
mov
sub
jl
adc
icebp
adc
jg
adc
inc
xor
dec
andb
jg
xchg
clc
sub
mov
pushl
mov
push
cmpsb
cltd
outsl
loop
loop
lods
imul
repnz
bnd
fs
inc
xchg
sub
mov
aaa
xchg
jb
pushl
out
jns
nop
dec
mov
add
mov
cltd
ljmp
pop
inc
dec
xchg
dec
movsb
inc
or
push
nopl
cmpsb
and
out
push
pushl
clc
push
lret
mov
call
pushf
call
pushl
popa
dec
inc
sarl
mov
fimull
or
stos
sbb
cmpsb
jg
cmp
mov
orl
pushl
pop
jns
sti
jp
jl
mov
mov
push
movsl
lea
jg
dec
mov
cmpsl
pop
test
xchg
lds
out
repz
xchg
jmp
sub
or
push
add
stos
ficoms
xor
rorb
xchg
lods
ljmp
mov
add
mov
jmp
xchg
mov
jle
adc
call
pop
add
jle
gs
fcmovnb
pusha
sar
mov
stos
sti
jmp
mov
mov
xchg
mov
and
mov
incl
add
sarl
fs
mov
lods
pop
mov
shll
xchg
sahf
shrl
repz
cmp
cltd
pop
or
and
out
sbb
jp,pt
out
dec
call
stos
mov
lock
mov
dec
ljmp
or
inc
inc
push
mov
jp
adc
iret
xchg
in
pushl
int3
push
mov
add
rorb
lods
xchg
repz
xor
imulb
shr
xor
dec
xor
xor
jmp
pusha
mov
push
sub
cld
in
loope
aad
xchg
jg
or
adc
sbb
std
or
jp
sub
jg
pop
mov
clc
or
inc
xor
mov
push
popf
rcr
lea
lcall
jnp
mov
pop
xor
mov
aaa
call
leave
fldz
call
icebp
std
dec
mov
or
cmp
jle
adc
call
movb
add
sti
jmp
jg
mov
add
cmc
test
rol
mov
mov
or
incl
add
inc
cmpsb
push
or
enter
or
inc
aas
sub
mov
cmp
rcl
mov
pop
or
popf
lret
xchg
xorl
mov
bnd
mov
push
xchg
jge
and
je
jl
es
shlb
pushl
loopne
pop
call
fisttpll
mov
pushl
push
test
ds
and
pushl
mov
mov
out
cmp
add
out
pop
inc
jge
mov
fwait
loop
incl
xchg
es
popf
dec
call
loopne
lea
bound
xchg
dec
adc
pop
sub
jl
inc
mov
xchg
in
cli
push
js
inc
add
mov
xor
or
mov
pop
and
jne
cld
adc
ljmp
out
push
fistpl
jl
ret
scas
add
adcb
daa
jns
dec
call
jmp
ljmp
adc
call
jmp
mov
add
stos
jne
flds
push
cmp
lret
das
add
jmp
cmp
cmp
jo
push
je
pop
jmp
xchg
dec
call
pop
cmc
inc
pop
jno
mov
jo
in
ja
test
shll
inc
and
mov
push
outsl
clc
in
mov
sub
aad
inc
pushf
fidivrs
jmp
adc
jmp
or
movsb
push
out
mov
dec
es
cmp
ja
lcall
adc
inc
jbe
adc
pop
jbe
inc
mov
scas
dec
adc
sti
outsb
into
daa
outsb
lea
add
pop
cmpsl
inc
mov
notb
popa
aas
popf
ljmp
jmp
in
mov
push
shl
cmp
call
pop
imul
icebp
xchg
movsl
inc
ljmp
cmpsb
mov
inc
sbb
test
xor
cltd
xchg
into
in
fcmovnb
es
decl
dec
int
add
cwtl
js
jne
ja
or
dec
mov
xchg
jno
sar
pushf
fstl
push
mov
xorb
clc
adcl
push
cli
mov
xor
push
push
je
sub
jmp
pusha
pushl
ret
dec
clc
mov
dec
pop
sub
jg
es
push
jb
dec
aaa
sti
mov
push
and
jg
xchg
mov
inc
inc
scas
bound
cld
adc
aam
jae
outsb
lret
out
jmp
inc
xchg
and
push
mov
cli
es
out
incl
rcrb
mov
loope
pushf
stc
jbe
shl
xchg
loope
inc
sahf
sbb
jecxz
imul
pop
rorb
pop
idiv
sbb
leave
ljmp
jp
scas
jns
mov
pop
pop
pop
mov
addl
sti
mov
adc
out
jo
into
push
xchg
mov
call
stc
sti
cmp
stc
push
das
aas
mov
jo
filds
and
jmp
call
shl
and
adc
addl
outsb
nop
insl
cld
pushl
push
fldln2
mov
mov
mov
cld
call
mov
sbb
mov
pop
push
fdivrp
sbb
jmp
pusha
cmp
call
es
mov
outsb
or
mov
mov
jecxz
xchg
into
xor
fdivl
pop
adc
adc
inc
jb
mov
push
jmp
stc
or
inc
adc
or
hlt
aad
add
cmp
fucomp
inc
xchg
inc
test
jg
aas
inc
clc
pop
cltd
jp
das
push
call
sbb
push
lahf
add
test
jl
jmp
ss
loopne
xchg
cmp
sbb
mov
sahf
mov
push
je
ret
sbb
cmpsl
xchg
mov
mov
cld
jle
pop
mov
repnz
not
add
pop
cltd
xchg
incl
rcrl
jl
sarl
mov
and
mov
xchg
stos
iret
js
negl
pop
insb
xchg
test
lcall
out
lcall
mov
std
test
dec
push
cmc
or
xor
sbb
call
shl
mov
fbstp
aaa
sbb
outsl
in
cmp
jno
pop
pop
or
xchg
push
scas
out
hlt
sbb
add
incl
dec
xor
push
ds
icebp
mov
and
popa
xchg
scas
xor
rol
dec
xor
add
cmp
cmp
jae
pop
call
jp
jecxz
ret
fdivp
jbe
inc
pusha
fwait
rclb
clc
ss
popf
aas
push
shlb
ljmpw
ss
bound
decl
insl
dec
sub
and
decl
fildll
enter
mov
dec
sub
or
rcrb
mov
decl
adc
or
fcomps
movsl
fisttpll
jns
in
movsl
in
pop
xchg
mov
xor
push
jg
pop
stos
push
sarl
call
push
call
stos
cli
sub
mov
data16
pop
xlat
ret
adc
mov
rorb
orl
sarb
push
mov
jbe
add
cmpsb
out
shll
call
mulb
jecxz
mov
imul
rcrb
call
sub
call
or
fisubl
add
popf
loopne
out
mov
mov
test
jle
out
test
mov
scas
adc
decl
jne
incl
sub
cltd
dec
adc
lock
push
ljmp
ret
outsb
mov
popf
mov
dec
cmp
pop
jbe
push
inc
or
inc
outsl
call
inc
int3
mov
icebp
inc
or
mov
test
xchg
push
popa
mov
dec
test
xchg
cmc
test
in
das
xchg
push
lret
arpl
xlat
mov
push
inc
mov
pop
xchg
decl
mov
jp
pop
andl
nop
ljmp
xlat
or
cld
repnz
pop
pop
jo
cld
jp
xchg
and
or
mov
and
lock
mov
aad
push
add
mov
mov
ret
mov
push
cmp
jmp
xchg
scas
jmp
decl
sub
jno
mov
ljmp
loope
mov
icebp
xor
ficoml
sbb
out
cld
jge
xchg
jle
dec
mov
pop
adc
imul
sbb
out
push
xor
sbb
and
fadds
dec
adc
push
jb
popf
sub
mov
mov
inc
jge
incb
xor
cmpsl
call
add
das
test
cmp
fisttpl
mov
inc
loope
or
xchg
xchg
decl
mov
pushl
xor
rcll
sub
rorl
adc
cmp
fcoml
das
dec
dec
xor
push
iret
or
jae
add
push
mov
jge
mull
shlb
ds
clc
andw
jne
loope
mov
lcall
pop
nop
xor
xchg
jae
mov
pop
and
in
jl,pn
stos
pushf
push
push
clc
adc
call
push
dec
iret
decl
mov
and
jg
outsl
mov
cld
mov
or
jmp
jnp
sbb
shrb
sti
lcall
push
in
ja
out
mov
cwtl
outsl
push
lret
xchg
lahf
cmc
add
sub
ret
lods
clc
mov
mov
cmp
cmp
int3
mov
mov
lods
sbb
inc
cmp
mov
loope
cld
shll
and
das
jp
fadds
inc
outsl
or
pop
decl
outsl
cld
and
dec
jp
das
std
lret
pushl
iret
mov
xor
std
push
ljmp
shlb
nop
in
decl
push
hlt
cmpsl
aas
les
jne
mov
push
sti
dec
cmp
jmp
jg
or
loope
pop
fwait
clc
push
das
lods
aaa
in
inc
neg
sbb
aaa
jno
pop
incl
in
pop
call
ficoml
insb
insb
lock
mov
push
dec
mov
mov
jg
dec
sub
addr16
and
sahf
lcall
int3
call
lds
clc
cmc
cwtl
decl
in
adc
jg
arpl
jg
pop
stc
bound
call
xor
loope
pop
inc
adc
dec
xchg
jo
call
mov
in
cmpsb
pushl
notl
std
jl
add
and
icebp
sarl
xchg
shl
add
pop
jle
pop
mov
sub
push
out
cmpsl
or
sarb
pop
jle
or
mov
inc
test
and
fdivrl
mov
jnp,pt
decl
clc
ljmp
push
xorl
in
outsb
je
scas
xchg
movsl
inc
lcall
lret
or
jno
mov
pop
sarb
cmpsl
or
xchg
cmp
es
decl
sbb
aad
xchg
movsl
pop
into
mov
pusha
mov
xchg
jp
popa
outsl
jmp
inc
sub
adc
or
sub
pop
stc
cltd
mov
push
mov
pushl
cmp
arpl
inc
xchg
mov
sub
sbb
lods
rcl
sub
enter
adc
push
ffreep
push
pusha
fcomps
loopne
gs
mov
sub
call
mov
pop
mov
pop
jecxz
pushf
pushf
insb
cmp
aaa
jg
insl
push
lea
mov
mov
popf
shll
dec
scas
mov
incl
adc
jle
fstp
inc
add
push
sbb
cli
pop
adcl
pop
int3
loopne
shr
dec
mov
sahf
xchg
inc
cmp
outsl
stc
add
xchg
or
push
ljmp
clc
cmp
sub
sbb
in
std
out
and
ljmp
dec
pop
push
jmp
ret
scas
fadds
or
roll
mov
hlt
aaa
hlt
adc
outsl
bound
sahf
idivl
push
dec
incl
lret
movsb
out
dec
fdivrs
ljmp
call
cmc
jg
mov
mov
fisttpl
or
lcall
in
mov
jmp
xor
or
lret
je
pushf
incl
and
mov
sub
call
inc
mov
mov
or
ja
lock
jge
outsl
cmpb
js
adcb
mov
inc
mov
inc
jmp
mov
sbb
sar
mov
daa
inc
pusha
mov
push
pushl
jmp
sub
pop
pop
mov
les
mov
movsl
jb
out
fcomps
push
stos
jno
pushl
sub
mov
jl
popa
rolb
mov
and
inc
cs
sub
decb
mov
out
ljmp
sub
and
lcall
roll
sbb
jmp
roll
sbb
or
jbe
xchg
mov
aas
jno
add
mov
pop
ljmp
popa
testb
ds
xorb
lods
leave
lcall
jecxz
or
gs
lcall
pop
xor
es
sbb
pop
clc
or
mov
aam
mov
jb
out
pop
pushl
ficoms
pushf
or
xor
decb
mov
push
lcall
dec
gs
mov
inc
mov
add
xor
sbb
rep
shll
cli
negb
mov
adc
adc
inc
jmp
pop
and
repz
jne
hlt
jmp
adc
rdpmc
lcall
xor
jecxz
mov
mov
clc
inc
shrl
test
incl
mov
pushf
incl
sahf
jae
pop
sbb
adc
je
cld
stos
push
loope
xlat
lock
jp
inc
fwait
lock
mov
dec
test
cld
mov
lods
dec
addb
fwait
xchg
jge
out
pop
pushl
movsl
ds
cli
hlt
cmp
cmc
cmpsb
mov
lods
push
loop
jp
inc
fsubrs
pop
inc
jl
fldenv
std
push
jns
push
dec
mov
pop
nop
das
xchg
cmp
xchg
lock
sar
scas
mov
pop
sbb
movb
pop
xor
and
and
in
mov
xor
push
popf
inc
xchg
outsl
pop
andl
mov
rclb
mov
loopne
outsl
cmp
leave
into
call
cmc
jno
repnz
enter
or
addr16
push
rorl
jns
sub
dec
xchg
stc
mov
add
adc
lret
in
aas
dec
lds
lods
ljmp
mov
adc
gs
inc
push
sbb
das
fists
cmp
cmp
ret
fdivr
mov
das
std
mov
and
gs
lods
cmp
jbe
jmp
jge
loopne
pop
cld
and
jnp
sti
sub
enter
lcall
mov
mov
flds
sar
cld
bound
dec
and
inc
shlb
mov
mov
stos
jbe
pusha
test
inc
stos
inc
dec
cmp
mov
adc
sbb
ja
test
popf
in
call
push
imul
xchg
adc
fwait
inc
sbb
outsl
sub
push
xchg
xchg
in
mov
js
ret
pop
push
mov
xchg
pop
enter
cmc
aad
mov
or
roll
push
and
std
cmpsl
lret
pop
das
leave
rol
lods
sti
or
scas
and
fdivrp
mov
mov
sbb
fists
jns
sar
in
sbb
inc
pop
scas
lret
mov
lods
mov
data16
push
sub
subb
inc
cmpsl
adc
ljmp
dec
hlt
int3
incl
adc
or
cmpl
push
test
ret
std
mov
das
dec
mov
decl
stc
daa
fdivs
push
push
decl
aaa
mov
pushl
dec
push
push
pop
fdivr
mov
test
push
adc
ffreep
mov
mov
repz
ret
xchg
addr16
outsb
cmp
lds
call
push
std
fwait
hlt
stos
push
mov
jmp
ds
or
mov
push
sub
jmp
pop
mov
cmpsl
out
call
or
lods
or
adc
movsb
mov
sub
adcb
mov
adc
fdivr
movsb
sarl
jb
addr16
push
jg
int3
push
mov
add
stc
and
pop
test
pop
ljmp
test
andb
std
data16
dec
es
das
in
test
int3
push
jmp
cmp
das
adc
push
cmp
xor
dec
and
shrd
fucomip
clc
adc
mov
mov
aas
push
cmp
outsb
xchg
dec
and
cmp
pop
adc
mov
mov
cld
mov
loope
out
incl
sbb
test
cltd
pop
incl
inc
ret
rcr
inc
gs
sbb
imul
inc
cmp
scas
xorl
jl
push
mov
pop
in
sti
inc
cmp
jmp
push
push
add
xlat
les
imul
mov
pop
mov
call
jg
dec
jns
adc
mov
lock
out
iret
mov
mov
incl
inc
stos
leave
mov
sub
outsl
int
popf
lods
div
aaa
push
add
cmp
push
cmc
sub
jl
lods
mov
js
inc
jl
adc
cld
mov
popa
inc
pop
mov
push
adc
mov
pop
fstps
incl
pop
lret
jns
jp
sarl
outsl
mov
mov
mov
jno
icebp
call
ja
inc
fildll
push
lds
or
mov
mov
dec
jmp
add
lcall
out
shrl
sbb
ffreep
sub
leave
ljmp
movsl
pop
ud0
imul
push
pop
push
stc
int
ljmp
icebp
xchg
sub
lea
arpl
jae
lret
loop
sub
test
iret
xchg
ss
negl
incl
and
inc
xor
jge
icebp
dec
mov
loope
xchg
mov
mov
xor
pop
pop
aad
outsl
jle
dec
cld
inc
ret
ss
decl
jle
mov
shlb
push
movsb
push
dec
lods
cmp
rorb
mov
inc
or
inc
imul
xor
mov
lret
shlb
jbe
loop
mov
sbb
or
pop
inc
jae
mov
lods
push
jmp
xchg
and
or
adc
lahf
sub
fistpll
sbb
shll
fisttpll
sar
call
inc
inc
ljmp
data16
sbb
jp
decl
sbb
jle
mov
sub
out
adc
mov
popf
rcrl
cmp
mov
or
incl
pusha
shr
mov
xlat
dec
mov
inc
repnz
sbb
stc
stc
dec
mov
ficomps
cs
mov
bound
push
iret
shrb
and
dec
sbb
sbb
stos
outsb
pop
stos
cmp
pop
pop
adc
push
mov
lds
lcall
aas
loope
pop
or
jl
imul
cmc
in
jne
ficoms
xchg
ret
sar
testb
hlt
or
fs
push
movsl
jle
xorl
mov
imul
aas
lds
outsb
sub
adc
rolb
aad
or
or
out
fcompl
xor
push
push
and
loope
das
mov
jg
mov
out
add
xor
lahf
mov
test
sbb
lods
inc
clc
pop
xchg
call
and
imul
cli
std
xor
push
movsb
movl
pop
mov
mov
int3
sbb
rclb
outsl
orb
sbb
repz
dec
incl
xchg
into
dec
mov
lea
out
pop
xchg
mov
mov
add
jmp
pop
jo
jne
jge
pushl
mov
push
call
and
and
shlb
call
ljmp
sub
shll
xlat
push
mov
lret
nop
hlt
outsl
jmp
lret
in
addr16
adc
sti
adc
movsb
fdivs
scas
ljmp
cmpsl
clc
addr16
imul
cmp
ret
cmp
mov
cs
lcall
ss
mov
push
push
popa
sub
mov
xor
pop
jb
pop
mov
xor
in
enter
dec
lcall
sub
loop
mov
sarl
fisubrs
cmp
push
idivb
push
add
ss
sbb
cld
ret
pop
in
push
sub
xor
fisubrs
pop
push
int
sub
add
jmp
adc
loopne
and
cmp
pop
sbb
les
pushl
cmp
repz
mov
or
mov
mov
adc
dec
outsl
notb
out
cld
or
push
mov
pop
cmp
pop
insb
add
push
lcall
hlt
enter
mov
test
hlt
pop
push
hlt
shrl
test
cld
pop
dec
jno
leave
push
sub
push
ret
jno
ljmp
clc
fs
dec
rorl
pop
scas
fnstcw
jecxz
cmc
outsb
int
jp
pop
jno
scas
int
mov
and
dec
dec
les
fwait
lods
popf
mov
lea
push
cmp
mov
cmp
in
into
mov
jl
mov
jg
ds
in
inc
jecxz
push
cmp
fisubs
loopne
adcb
cld
push
mov
outsl
fistpl
push
xchg
rclb
scas
add
sub
sar
cmc
popf
fstl
fidivs
movsl
aad
lcall
xchg
sar
cli
mov
mov
push
and
mov
movsb
mov
sahf
add
call
inc
fcompp
fwait
add
sbb
in
jae
mov
aaa
or
jp
sub
clc
imul
push
xor
adc
pop
repnz
lods
aam
fmuls
mov
sbb
jge
cmpsb
aad
inc
jns
incl
sub
lcall
xchg
or
mov
push
popa
ljmp
pushl
insl
or
popa
test
mov
xchg
fmul
outsl
insl
pop
jbe
call
loop
aad
outsb
cmp
imul
and
sti
jb
movsl
outsb
mov
sbb
and
dec
pop
mov
mov
push
mov
pop
pop
fidivrl
fnstenv
sub
push
incl
mov
dec
mov
mov
cmp
jecxz
mov
sub
xor
push
adc
icebp
adc
testl
enter
sub
adc
jge
add
xchg
cmc
mov
incl
dec
mov
xchg
int3
pushl
js
ja
sub
fistpl
lcall
repnz
sub
lahf
mov
jecxz
sti
mov
adc
and
pop
push
cmpsl
sub
sub
jg
orb
pop
mov
in
fistpll
std
repz
addr16
jae
repnz
addr16
jo
lret
movsb
xor
repnz
decl
push
pop
out
in
rcrl
xchg
cmp
fwait
int
sub
and
pusha
fcoml
mov
xor
call
imul
sub
sarl
mov
jmp
fidivl
in
out
push
rcrb
sahf
cmp
popa
xchg
roll
jbe
shlb
mov
xorl
lret
std
hlt
cmp
mov
mov
cmp
ljmp
mov
scas
call
shll
jbe
mov
cmp
cmp
pop
jg
bound
into
adc
je
push
push
cli
movsb
add
jge
mov
jecxz
stos
ret
sbb
gs
aas
stc
adc
imul
xor
je
call
and
scas
pop
inc
xor
aam
lea
mov
add
stc
decl
dec
xchg
incl
adc
push
pushl
jle
sahf
inc
orb
push
mov
mov
ss
dec
pop
jmp
outsb
mov
mov
addb
aas
jecxz
pop
mov
das
ret
das
fnstcw
out
jne
cwtl
xchg
fdivr
lods
or
mov
test
aaa
mov
sbb
inc
or
incb
or
dec
adcl
mov
loopne
inc
mov
enter
pop
pop
das
arpl
jo
mov
dec
clc
call
ficoms
out
out
push
pop
jecxz
add
pop
int
aas
sub
test
add
add
shll
xor
jmp
hlt
lods
mull
int
test
or
gs
js
jecxz
cmc
dec
lods
pop
rcrl
scas
shl
inc
sbb
popf
cmp
std
inc
pop
lret
mov
bound
pop
ficoms
jg
das
push
add
ljmp
rol
daa
popa
inc
test
fcmovnb
rorl
iret
lea
add
movsb
jno
call
ret
pop
mov
cld
cmpsb
out
lahf
or
das
lods
add
cmp
jg
xlat
push
push
mov
jmp
push
out
dec
pop
push
jbe
bswap
dec
inc
add
arpl
jle
fdivs
lcall
mov
push
fimull
xchg
xor
or
mov
cmpsb
test
xor
push
dec
xchg
pop
and
test
aam
mov
jmp
outsb
sub
lods
jmp
out
sub
scas
data16
jge
out
pop
lock
notrack
sbb
jmp
in
push
jg
cmp
icebp
test
push
push
mov
jmp
cmp
std
mov
lcall
and
xor
fnsave
mov
fldenv
daa
js
and
add
cmp
or
sar
mov
shlb
and
outsl
cwtl
pop
xlat
ljmp
lds
cltd
lock
pop
cs
xchg
incl
xor
cmp
stos
dec
popa
pop
outsl
das
mov
cmp
jp
inc
push
arpl
mov
aad
pop
jl
std
sub
cmp
sbb
mov
sar
push
push
or
mov
xchg
je
mov
pop
pop
out
pavgw
lcall
loope
pop
jmp
sub
lock
mov
outsl
jg
mov
ljmp
pop
cmp
addb
test
stc
pushl
mov
sahf
pushl
inc
stos
sub
mov
lea
or
sub
mov
out
pop
test
mov
lock
clc
push
push
out
push
mov
test
mov
jmp
iret
cs
fisttpl
mov
inc
arpl
pop
rclb
dec
sbb
hlt
and
in
aam
and
js
clc
imul
pop
jl
jecxz
mov
loope
pop
data16
sbb
inc
mov
or
jns
rcrb
and
lcall
scas
mov
lcall
lds
mov
bound
pop
lahf
ret
push
daa
scas
lea
mov
adc
xchg
shlb
hlt
movsl
loopne
cli
cli
xor
push
mov
jno
call
pop
dec
sub
and
cmpsl
cwtl
cmp
jbe
mov
imul
dec
cmp
aad
icebp
sahf
fdiv
adc
pop
fcompl
and
out
push
cmp
xchg
jmp
pop
ja
clc
ret
mov
out
cmc
mov
xchg
or
decl
jns
jno
inc
or
push
mov
repnz
mov
pop
mov
das
mov
sbb
subl
sahf
dec
xor
incl
ficoms
outsb
test
lcall
shl
sbb
insb
test
rol
subl
cmpsl
xchg
aad
das
jle
testb
xor
in
dec
push
push
lcall
dec
sub
imul
jp
in
scas
decl
mov
dec
sbb
popf
lcall
jg
jmp
in
in
call
mov
fcomip
mov
mov
clc
push
cmpsl
mov
adc
test
imul
or
out
test
inc
lcall
xchg
push
pop
out
fldenv
xor
jp
dec
cli
add
repnz
pop
iret
lcall
adc
sub
jmp
sub
push
iret
out
sub
push
mov
imul
decl
repz
hlt
sbbl
loopne
inc
decl
and
add
add
add
add
cli
add
inc
push
ret
mov
sub
pop
in
mov
add
sub
dec
add
mov
je
sub
icebp
dec
jne
lea
mov
mov
sub
addb
add
mov
shlb
inc
dec
pop
test
shlb
call
je
insb
rclb
incl
push
pushl
call
pop
outsl
pop
add
outsl
adc
pop
push
push
insb
adc
xor
xorl
popa
jne
ljmp
pop
ret
xor
sti
neg
sbb
inc
or
lds
dec
sub
daa
call
jge
ret
inc
jns
pop
ljmp
xchg
stos
enter
call
setl
ljmp
jp
add
adc
dec
adc
div
jmp
xchg
ror
into
out
std
cld
test
mov
jmp
mull
xchg
or
inc
cmp
sub
pop
push
paddusw
pop
add
xor
test
mov
xor
push
sub
movsb
adc
push
adc
cmp
pop
mov
sbb
fdivp
popl
jo
lock
cmp
mov
outsb
and
mov
popa
jmp
nop
outsl
jg
cltd
jp
sbb
int
imul
adc
stc
xchg
mov
std
mov
fstps
xchg
idiv
sahf
imul
loope
sub
fidivrl
dec
test
ficompl
sbb
pop
cmp
and
repz
adc
scas
jmp
arpl
push
pushl
leave
xchg
gs
aas
jnp
cld
clc
add
int3
or
ud0
xor
aam
je
dec
jg
and
div
pop
xor
std
pop
mov
and
decl
in
outsl
sbb
xor
decl
add
fucomi
ja
jno
out
mul
cmpsl
incb
and
mov
gs
push
inc
notb
js
cwtl
cmpxchg
pop
jns
push
gs
imul
fisttpl
test
cmc
jb
adc
loope
ljmp
cmp
mov
sbb
sarl
movsl
sarb
stc
mov
clc
cs
lret
mov
pop
xchg
aas
sbbb
add
or
out
jmp
insl
js
std
xor
ficompl
inc
xchg
xor
xchg
mov
sbb
ljmp
clc
rolb
adc
aam
xor
out
jmp
mov
jmp
jle
sub
adc
mov
push
or
jge
xor
std
xor
mov
rcr
ja
mov
jo
sti
pop
add
jg
mov
jo
pop
push
xor
mov
cwtl
adc
notl
add
jle
hlt
mov
mov
push
daa
jg
jae,pn
shr
outsl
adc
es
fsubp
pop
imul
inc
ffreep
scas
jbe
loop
aam
cmp
jge
test
call
cmc
jmp
jecxz
cmp
add
mov
lds
pextrw
push
mov
mov
cltd
or
lret
adc
inc
lock
jmp
inc
fwait
enter
cmp
cmc
jbe
pushl
rorl
mov
loopne
add
pop
push
rcl
mov
das
mov
mov
mov
test
gs
mov
imul
insl
outsl
out
pop
decl
test
cmp
mov
out
out
outsl
iret
rolb
fdivr
jnp
ret
int
push
filds
fwait
out
outsl
and
movsb
fsts
dec
pusha
dec
cmpsb
push
jecxz
add
pop
add
inc
sub
and
clc
dec
aam
mull
fucomp
pop
jmp
add
popf
call
push
cwtl
fnstcw
jmp
lahf
add
adc
dec
jne
adc
in
lret
sbb
cmpsl
fnstsw
mov
imull
fdiv
pop
jge
test
pop
cmp
lock
pushl
lcall
popf
pop
out
adc
xchg
or
sbb
push
out
loope
mov
mov
movsl
inc
jmp
inc
test
fisttps
jg
sub
mov
push
xor
mov
stos
repnz
daa
shll
pop
mulb
jg
ljmp
ja
sbb
jge
ja
repnz
mov
inc
cmc
outsl
adc
ja
into
jmp
pop
mov
xor
mov
push
jmp
jl
mov
mov
jg
daa
mov
stos
jae
outsb
add
daa
stos
jge
mov
div
out
sahf
inc
jae
fs
pop
loop
es
call
cltd
out
and
cs
hlt
daa
aad
movsb
and
and
cmp
pop
xchg
inc
or
xlat
pop
cmpsl
std
add
mov
and
stos
int3
out
call
icebp
push
bound
rorl
pop
out
lock
cmp
jmp
jne
in
jbe
mov
iret
shll
push
adc
cmc
xchg
popa
or
pop
dec
call
pop
inc
out
add
mov
aam
outsl
test
mov
xchg
mov
lods
call
int
and
and
pop
mov
mov
sbb
orb
cmp
mov
out
jnp
push
das
es
pop
mov
out
jl
subl
pop
shll
movsl
es
add
daa
lea
jmp
pop
in
pop
clc
or
dec
push
push
mov
pop
or
mov
lahf
jle
mov
jmp
cmp
incl
xchg
pop
movsl
mov
ret
sbb
dec
sub
iret
jb
aaa
jno
fs
xlat
repnz
stos
pop
jg
xor
fwait
and
push
stos
jmp
movl
outsl
fmuls
sbb
jg
push
fisttpll
inc
mov
popf
movsbl
pop
push
push
push
mov
mov
xor
lea
lcall
mov
or
loope
fistps
xchg
or
mov
pcmpgtb
or
jnp
xchg
fadds
push
outsl
xchg
sub
jg
inc
inc
addr16
sbb
or
aad
icebp
scas
jo
icebp
fstl
packssdw
insb
arpl
jo
or
and
imul
inc
fisubl
mov
or
loope
in
sub
inc
pushl
or
pop
mov
outsl
or
push
hlt
mov
test
fcomi
call
push
mov
pop
test
push
jae
xlat
mov
jge
xchg
clc
xor
rolb
in
mov
popa
rcrl
inc
dec
or
loope
pop
stc
mov
cmp
xor
in
xor
pop
aaa
cmpsl
adc
ljmp
lea
lds
dec
mov
fistps
mov
or
cmc
popa
inc
sbb
jmp
push
mov
cld
sbb
and
mov
lock
stos
add
jg
leave
aas
inc
cli
push
push
iret
dec
fprem
sbb
pop
pop
mov
cli
mov
sbb
mov
out
push
mov
idivb
fimull
out
call
mov
call
outsl
clc
sbb
nop
lods
movsb
aaa
cli
dec
std
clc
out
rcrb
and
cmc
loop
dec
xchg
mov
cmp
mov
cltd
rcrb
or
push
add
cmc
ss
into
sub
je
sbb
jg
sbb
ss
je
fwait
dec
pop
cmc
pushf
pop
icebp
addr16
sbb
lds
fdivr
jge
pusha
add
adc
std
push
pop
mov
inc
popa
push
mov
icebp
fdivr
fcmovnbe
jp
inc
fidivrs
lcall
sbb
scas
lds
xor
and
aaa
mov
cmpsl
pusha
ljmp
mov
sbb
mov
or
lcall
cld
lret
cmp
cmc
adc
addr16
incl
mov
hlt
call
sub
into
push
xchg
cmc
out
out
arpl
fs
dec
in
outsb
sarb
cld
repz
mov
pop
jecxz
aad
jmp
scas
mov
in
jmp
enter
push
dec
decl
dec
ljmp
repnz
jmp
jbe
out
mov
cltd
cmpsl
mov
lods
pushf
inc
xor
scas
add
push
lock
pop
addl
sub
dec
fldcw
add
sbb
sub
cmp
mov
das
pushf
lret
fldl
mov
dec
sbb
ljmp
filds
out
notrack
cli
lock
pop
popf
xchg
mov
test
push
insl
jmp
decl
loopne
xchg
loop
xchg
cltd
out
aaa
mov
stos
pop
daa
imul
ficoms
xchg
jg
pop
sbb
push
ja
negb
outsl
hlt
adc
cltd
lcall
pop
dec
mov
pushl
push
mov
sbb
and
push
mov
push
push
sahf
decl
jae
inc
inc
cmpsb
jl
sbb
mov
add
hlt
jo
sbb
xor
lods
jo
inc
cmp
push
jle
add
lcall
gs
mov
mov
and
hlt
or
call
les
outsb
aaa
dec
mov
push
dec
mov
test
mov
inc
mov
push
fcoms
inc
arpl
cmp
popa
pop
pop
dec
imul
xor
jecxz
mov
mov
sahf
sub
inc
int
fcmovu
lahf
sbb
pop
std
mov
cmp
jmp
cmp
add
sub
aad
pop
pop
jb
sub
jmp
out
pop
and
test
mov
and
in
aam
das
cwtl
subb
nop
icebp
jg
sbb
lret
aad
add
nop
push
jne
inc
insl
xchg
roll
cmp
add
imul
outsb
gs
xor
xor
fs
insb
push
mov
adc
arpl
inc
fs
jae
iret
adc
fs
gs
popa
outsb
frstor
gs
fists
dec
outsl
popa
fs
imul
ret
or
hlt
sub
adc
shrb
psubd
fmuls
insb
add
or
popa
add
jne
mov
jbe
fdivs
or
outsl
mov
or
fcoml
adc
fcomps
pop
xor
or
shlb
mov
not
inc
sti
popa
je
push
inc
jnp
imul
imul
add
addr16
js
adc
jae
and
je
outsl
outsb
sub
add
fsub
incl
ret
add
push
pop
cmp
inc
stos
mov
sbb
mov
cld
dec
fdivr
and
and
and
inc
push
adc
add
mov
nop
xchg
xor
out
incl
mov
pop
aam
jmp
loopne
out
mov
adc
and
lock
or
sbb
mov
jno
and
ss
cli
roll
inc
and
push
add
scas
jg
addr16
jne
and
clc
push
out
mov
pop
insl
sbb
add
decl
rolb
mov
mov
pop
push
clc
dec
add
gs
je
and
inc
orl
in
jb
mov
mov
mov
and
enter
jb
or
test
lock
cwtl
js
mov
cmp
sbb
and
jmp
pop
enter
jb
add
cmp
dec
push
dec
jle
or
and
xchg
int3
aad
add
clc
sbb
hlt
shlb
incl
in
call
push
addl
mov
cltd
mov
add
clc
or
inc
shrb
sub
lcall
mov
add
sti
lcall
or
cmp
xor
aas
xor
mov
js
and
cmp
nop
fbstp
push
push
mov
mov
cmpl
jne
push
pushf
int3
push
call
mov
filds
pop
lret
dec
add
mov
sub
or
mov
lsl
rorb
es
sbb
inc
cmp
mov
jecxz
sub
nop
das
add
mov
sbb
call
test
dec
incl
add
test
add
ficoms
repz
xor
adc
push
add
mov
mov
mov
scas
push
push
adc
mov
nop
push
push
clc
aas
clc
mov
icebp
popf
adc
mov
push
seta
push
lcall
nop
jmp
cmp
inc
incl
mov
or
call
jne
and
call
frstor
inc
xchg
inc
mov
add
add
jmp
in
mov
lods
dec
lcall
hlt
jmp
jl
jle
sbb
call
inc
add
pop
sub
add
push
je
loopne
mov
sti
add
pop
mov
add
add
dec
xchg
fcomps
int
lcall
jne
ror
add
decw
sub
xchg
clc
xchg
cmp
add
outsl
iret
clc
dec
xor
cmc
iret
inc
incb
sub
inc
dec
fldcw
test
mov
and
sub
jno
iret
xchg
adc
shlb
aam
test
or
les
aam
xchg
inc
sbb
push
pop
xchg
sub
mov
mov
clc
decb
loopne
pop
xchg
pop
mov
into
cmp
mov
pusha
or
adc
cmp
push
push
sti
dec
shl
clc
pop
jg
cmp
mov
mov
lods
shlb
bound
ret
imul
dec
push
clc
stos
lods
test
push
fldenv
mov
push
popa
sbb
adc
addr16
push
mov
nop
pop
jns
mov
lods
std
pushl
test
insb
in
hlt
dec
test
adc
jecxz
incl
roll
call
xor
jecxz
call
lds
sub
in
add
jmp
and
call
sahf
push
add
ja
cld
dec
movb
fdivrs
out
in
je
inc
xchg
adc
imul
jne
xchg
add
xchg
push
or
add
sbb
adc
and
add
cld
fbstp
jl
or
rcrb
cmp
outsl
fsubs
adc
xchg
mov
lods
sub
adc
hlt
mov
lcall
in
push
or
ret
les
and
loope
sub
dec
xchg
dec
mov
je
incl
xor
pop
cwtl
fstpt
testl
sbb
cli
mov
loopne
fistpll
pop
adc
jmp
jg
pop
pop
rorl
xor
adc
bound
cltd
mov
or
lcall
cwtl
mov
repz
out
xor
sahf
adc
dec
call
push
aas
adc
or
sub
inc
movsl
test
pop
and
in
push
mov
push
out
mov
add
inc
shl
inc
add
shrb
dec
inc
je
xor
mov
call
jmp
add
ror
pop
aam
xor
cmp
push
pop
rcrb
dec
aam
inc
add
mov
ja
push
push
dec
pop
lock
lahf
sub
repnz
add
stos
add
add
and
int3
mov
add
inc
repz
pop
and
push
xchg
mov
pop
lcall
adc
jg
cli
aas
sub
inc
bound
push
sbb
scas
add
mov
loopne
jmp
lret
pushf
cwtl
push
call
jle
cmp
and
leave
test
mov
incl
mov
out
push
mov
insl
clc
rolb
jmp
dec
bound
jne
test
cld
lcallw
das
and
imul
sbb
jne
cmp
dec
call
cmpsb
jp
loope
jae
mov
cmp
incl
inc
dec
stos
or
call
les
push
mov
mov
lcall
dec
add
or
cmp
fidivs
hlt
iret
xorl
repz
and
icebp
mov
cmp
pop
movsl
mov
or
mov
decl
fstl
inc
lret
lock
adc
notb
repnz
inc
push
jmp
jp
pop
push
mov
in
rcrb
adc
pushl
sarb
sub
aad
hlt
inc
pop
mov
pop
shll
sahf
scas
roll
subb
pop
das
flds
mov
push
adc
das
aaa
in
popf
ret
push
pushl
leave
mov
add
or
inc
lock
leave
mov
adc
add
mov
jge
add
inc
xchg
sub
xchg
pop
sbb
and
enter
cs
jle
pushl
push
dec
iret
xchg
add
aad
sar
inc
or
mov
mov
call
mov
cmp
hlt
dec
test
mov
dec
mov
pop
mov
add
aas
add
call
mov
add
pop
pop
test
lcall
mov
loopne
or
pop
shl
fistpl
loopne
push
cmp
jl
or
jg
adc
stc
jb
loopne
cmp
add
pop
mov
adc
stc
add
imul
shll
movsl
push
sub
mov
lock
orb
sbbb
xchg
repz
mov
ja
test
pushl
or
addr16
call
adc
pushl
cmpsb
pop
adc
cmpsl
test
add
lret
clc
xchg
jns
add
cli
add
jl
add
jmp
shll
sub
pop
aad
inc
cld
or
outsl
sub
or
incl
rcrb
sub
stos
loop
sti
cld
cwtl
in
jg
jg
sbb
and
and
outsb
or
pop
arpl
sub
rolb
dec
and
mov
dec
call
dec
xor
or
and
icebp
je
pusha
or
fildll
sub
cmp
sub
and
mov
lcall
add
addl
push
sub
cmp
mov
rorl
pusha
mov
add
pushl
fnstcw
fdivr
xor
mov
or
mov
clc
sti
fadds
and
loop
jne
pop
xor
pop
call
lcall
pushl
dec
inc
mov
dec
xchg
call
fsub
je
adc
shl
sub
jns
cmc
iret
fs
outsl
sub
adc
xchg
imul
loopne
mov
push
aaa
jmp
sldt
out
mov
jg
dec
sub
daa
in
xchg
add
sub
mov
loopne
stos
les
cmp
mov
cmc
cld
adc
shr
aas
das
xchg
or
clc
or
into
dec
xchg
xor
mov
sub
call
add
mov
aaa
mov
inc
test
movsb
xor
mov
jmp
dec
nop
hlt
lcall
adc
xor
das
jg
jecxz
fildl
enter
cmp
fs
add
cmp
jl
mov
pop
popa
or
enter
jecxz
xor
aam
mov
mov
pop
pop
cli
and
call
incl
jmp
mov
enter
test
and
dec
sbb
psrad
nop
imul
addr16
sbb
stc
or
movsl
jg
cld
add
or
push
or
enter
cmp
shll
es
mov
add
test
add
das
dec
aam
and
nop
aas
dec
pop
in
pop
sbb
xlat
pushl
mov
fdivrs
adc
sbb
decb
call
ja
ds
pop
incl
adc
xchg
int3
leave
mov
pop
inc
xor
imul
jne
sbb
add
inc
mov
pushf
mov
dec
lea
push
push
ljmp
lods
dec
pusha
sti
popa
sar
and
clc
add
jg
add
adcb
or
test
push
incl
xorb
add
add
sub
pop
mov
or
call
mov
pop
sbbl
es
fbld
pop
push
es
push
xchg
fdivrs
pop
mov
scas
lcall
idiv
cmp
dec
rdtsc
movsb
sub
icebp
and
mov
adc
mov
mov
sbb
fsts
out
mov
xor
mov
dec
mov
cmp
mov
loop
call
xchg
dec
lea
lds
sub
pop
scas
sarb
mov
dec
cld
lcall
pusha
leave
sub
push
clc
mov
pop
sub
pop
aad
or
sub
jmp
sbb
push
pop
push
adc
and
xor
aaa
adc
ret
jbe
call
addb
sub
push
sbb
movsl
int
addb
repnz
cmpsl
inc
inc
das
mov
sbb
sub
cmp
mov
pusha
sahf
and
jg
cmp
std
in
xor
test
sbb
popa
ds
out
cmpl
sbb
add
daa
xor
idivb
enter
jg
sub
lods
push
push
movsl
or
cmp
es
and
sbb
cmc
xor
inc
push
cmpsl
xor
inc
cmp
cli
int3
pop
fs
fbld
dec
push
ss
cli
inc
sub
and
data16
lock
jb
mov
call
inc
jo
and
outsl
pop
lds
icebp
mov
ret
movsl
idiv
add
or
test
jns
inc
decl
mov
mov
lcall
incb
pop
je
mov
ss
test
clc
sub
xchg
es
push
sti
int3
aas
enter
jg
sub
cmp
push
fdivr
and
cmpsb
xchg
or
jmp
jle
xchg
push
dec
or
xor
jo
in
sbb
aam
or
add
jo
xchg
movsl
scas
faddl
mov
adc
pop
ret
sbb
inc
test
and
push
aaa
orl
incl
test
mov
out
js
call
push
cld
rcrl
push
adc
inc
and
mov
lahf
dec
and
rcrb
jmp
cmpsb
fsubrs
pop
add
movsl
call
adcb
in
out
add
dec
mov
cmpsb
ret
xlat
lcall
test
std
add
nop
enter
aam
decb
lea
mov
pop
or
jle
push
sahf
adc
lea
jge
jge
lea
mov
bound
or
idiv
add
add
test
sahf
aam
cmp
movsb
clc
loop
sbb
flds
incb
sar
ds
aam
or
cli
test
pop
jge
sub
cs
jno
jl
cmp
ret
insl
adc
lret
jb
cld
ret
sbb
xor
icebp
push
orl
sub
pop
sbb
rcr
inc
lret
xchg
fistps
mov
xchg
js
pop
ret
mov
cmp
lcall
push
loopne
add
jmp
dec
sahf
movsb
xchg
pop
and
leave
fildll
dec
lea
std
cmp
test
fcoml
outsl
sub
mov
in
outsl
mov
adc
push
xor
in
add
nop
dec
cmc
jmp
lods
cmpsl
or
mov
repnz
cld
loope
adc
or
movl
pop
cld
jmp
add
insb
sbb
sbb
into
cld
in
dec
sbb
pop
clc
loop
adc
xchg
call
jmp
mov
jge
les
mov
cmp
aas
or
adc
xchg
xlat
xchg
loop
ret
incl
fmull
lock
inc
jne
add
fcomip
je
push
sbb
fcomip
enter
lcall
jne
sbb
cmpsl
jmp
call
lods
call
adc
rcl
cltd
push
mov
out
hlt
cwtl
loopne
lock
or
scas
add
call
mov
mov
call
fnstenv
inc
jmp
lret
or
cli
in
into
cmp
mov
lret
pop
push
fidivs
cmc
jecxz
in
outsl
sbb
push
call
cmpl
pop
xorb
movsl
push
push
push
popl
adc
xchg
rcrb
mov
mov
xchg
lret
jge
pusha
xlat
xchg
sbb
div
ja
and
sub
sub
movsl
jmp
aas
and
addl
je
lods
push
add
inc
sbb
std
aas
decl
xchg
cltd
push
mov
cld
cmpsb
inc
or
add
les
push
mov
mov
dec
add
aas
cmpb
clc
cmc
or
jne
jnp
jnp
add
add
sti
out
pop
and
sbb
ss
add
inc
decl
and
lcall
dec
or
in
push
bound
jp
pop
cmp
outsl
inc
test
lock
test
adc
mov
psubb
xorl
or
lea
sub
fildll
enter
cmp
add
push
jmp
pushl
pop
mov
xchg
add
adc
xchg
ds
arpl
loopne
ljmp
pop
enter
jae
ss
inc
test
ljmp
cmp
popw
mov
inc
jns
mov
dec
adc
sbb
pop
loope
pop
movsl
testb
mov
pop
in
or
jo
in
or
pop
fwait
pop
lcall
insb
jl
or
outsb
cld
fstps
add
xchg
les
iret
clc
push
sub
pop
sbb
jo
sbb
jecxz
push
sbb
je
mov
cwtl
nop
pusha
movl
clc
fisubl
inc
mov
pop
jp
aam
cmp
add
inc
add
sub
fiadds
imul
fmul
jmp
xchg
leave
mov
punpckhbw
pop
nop
lds
sarl
inc
cmpsb
stos
daa
and
push
add
in
out
addl
jle
ret
jae
inc
mov
in
adc
std
pop
out
sbb
adc
jmp
jg
and
jmp
add
and
add
pop
lahf
add
mov
jg
or
xor
call
lahf
mov
and
add
aam
sbb
mov
mov
pop
cmp
fs
nop
outsl
loopne
mov
call
loopne
data16
or
mov
xor
or
jbe
outsl
mov
pop
inc
and
and
cld
inc
add
icebp
mov
test
mul
mov
xchg
add
push
jbe
test
cmpsb
jle
in
pushf
pop
or
add
div
xchg
add
adc
add
pop
out
jmp
movb
inc
or
sbb
loopne
push
mov
fsts
mov
mov
rorb
cli
jne
cwtl
add
sbb
inc
popa
stc
inc
push
enter
leave
ljmp
xor
mov
add
cld
je
mov
cmp
das
xchg
mov
or
sub
data16
and
dec
pop
pop
or
pop
decl
xor
dec
push
lods
cld
dec
test
add
clc
pushl
mov
stos
mov
outsl
sbb
add
jb
insb
fcoms
jne
push
out
int
fdivp
jl
add
decl
inc
dec
push
mov
out
ljmp
add
mov
inc
mov
mov
test
je
ret
andb
sub
or
or
adc
lea
ret
or
pop
add
pop
aad
xchg
test
jmp
je
pop
les
inc
mov
pusha
cmp
pop
cmp
jns
aaa
push
push
cli
or
pop
push
cmp
push
inc
xor
ljmp
test
pop
clc
sbb
push
cld
and
in
mov
decl
or
and
setg
pop
pop
loope
jo
nop
jl
mov
loope
dec
pop
or
or
shr
sbb
nop
pushl
mov
cwtl
push
insb
and
push
mov
loopne
add
test
adc
pop
and
rorl
incl
popa
mov
hlt
incl
push
push
inc
and
dec
clc
jbe
call
xchg
push
daa
mov
repz
ljmp
dec
sub
xor
mov
decl
mov
sub
jg
mov
enter
js
repz
add
push
inc
adcb
cmp
add
mov
mov
sub
jg
lahf
clc
xchg
decl
ret
pop
sub
pop
dec
inc
push
push
das
sbb
pop
incl
outsl
jb
popa
cmp
jmp
inc
gs
jo
push
adc
push
mov
add
dec
popa
mov
imul
jno
xchg
aaa
outsl
mov
std
jecxz
rcll
pop
lods
pop
loop
clc
shlb
leave
rcl
das
jne
sbb
test
add
fistl
jmp
je
loopne
cmpsb
jne
mov
hlt
jbe
xchg
mov
xor
sbb
shll
js
ud0
call
lock
cwtl
outsl
ds
push
add
ds
insl
sbb
inc
stc
inc
out
xor
cli
fidivl
notb
xlat
or
add
fcmovb
xchg
push
sbbb
jp
sar
mov
in
leave
outsl
inc
mov
lock
sbb
pop
addr16
lcall
jmp
cmp
call
mov
add
jae
ret
jecxz
or
jnp
incl
cld
dec
jne
sbb
and
or
rcrb
movsb
daa
mov
mov
dec
lcall
inc
rolb
pop
sarl
add
repnz
add
lock
shlb
enter
inc
cld
jns
mov
mov
inc
das
lods
bound
loopne
sbb
or
pop
jecxz
lock
or
mov
call
dec
pop
add
fprem1
pop
loopne
inc
mov
lock
sub
inc
mov
and
mov
outsb
mov
sbb
in
pop
or
or
repz
pop
xchg
inc
dec
lock
or
inc
push
aaa
sub
setb
cwtl
pop
cld
xor
ret
jno
lret
call
cmp
in
add
lret
dec
inc
add
call
sbbb
incb
loope
sbb
adc
xchg
add
add
in
push
mov
int3
dec
sbb
aaa
mov
popa
call
push
push
nop
cmp
andl
shll
loopne
adc
adcb
mov
mov
lock
jle
push
adc
movsl
cwtl
leave
std
mov
subb
jmp
or
jne
or
mov
loop
ret
add
push
addr16
fildll
outsb
inc
loope
pop
decl
loop
adcb
adc
mov
lock
lds
bound
rolb
imul
into
lock
cmp
nop
inc
cmpl
rcll
cwtl
dec
fsubrs
add
das
shrb
mov
lock
push
dec
call
mov
lcall
cli
push
je
pop
stos
movsl
and
loopne
or
jbe
sub
ljmp
push
mov
cmp
stos
sub
or
ja
mov
mov
incl
adc
sub
pop
test
pop
cmp
outsl
loopne
jbe
or
jmp
jg
popa
sbb
out
lcall
push
add
push
or
loop
cli
lcall
and
push
or
pop
test
imul
push
stc
or
lret
mov
jecxz
lcall
daa
or
data16
addl
pusha
shrl
inc
outsb
shlb
jmp
and
mov
rolb
sarl
mov
sbb
mov
dec
clc
lods
cmp
pop
add
incl
xor
inc
lock
mov
incl
pop
aas
je
clc
inc
cwtl
incb
fcoms
cmp
ljmp
int
adc
inc
dec
das
or
je
mov
xchg
jno
jne
rolb
dec
xchg
rclb
lcall
inc
mov
xchg
sbb
xchg
mov
lock
pushf
das
mov
xchg
incl
add
mov
xor
and
mov
sahf
repz
shr
mov
ljmp
popf
mov
andb
mov
das
dec
xor
cld
push
push
pop
or
test
pop
inc
cmp
cmp
sub
push
push
incl
pop
sbb
mov
sub
xor
mov
incl
and
loop
add
movsl
lock
sub
incl
daa
xchg
push
addr16
adc
jno
push
adc
out
ljmp
mov
outsl
inc
lea
add
dec
push
cmp
scas
fs
add
mov
jo
pop
mov
mov
loop
push
loop
dec
fisttps
xor
mov
xor
cmpb
loopne
mov
lcall
pop
xor
cmp
and
jg
jg
repnz
push
ljmp
mov
add
iret
jecxz
dec
rorb
pusha
fstpt
insb
jmp
dec
xchg
mov
imulb
cmp
adc
sbb
shrb
popa
adc
and
jmp
std
inc
inc
comiss
icebp
push
mov
es
in
scas
enter
loopne
push
mov
and
iret
xor
lcall
jecxz
xchg
push
mov
ret
fcom
push
jecxz
repz
or
f2xm1
push
loop
sub
inc
or
and
movsl
push
mov
adc
ret
sub
xchg
repz
hlt
lock
es
add
ljmp
and
std
pushl
or
add
shlb
clc
popl
inc
xchg
fmuls
jne
loopne
pop
sti
pop
aad
mov
or
mov
inc
imul
push
das
jo
aaa
nop
outsl
mov
mov
adc
cmp
sub
jmp
push
inc
stos
or
ja
in
mov
push
mov
push
pop
xchg
test
inc
cmp
jne
gs
push
or
hlt
dec
add
cmc
and
xor
dec
pop
pushf
std
xchg
scas
pusha
ds
je
int
push
or
cld
add
add
test
fstpt
dec
out
xchg
xor
inc
fiadds
call
jg
cmp
and
call
jg
test
std
ds
mov
out
sar
sti
add
dec
xchg
xor
jmp
js
pop
or
sub
cmp
sbb
cmpb
test
daa
mov
in
xchg
cld
pusha
push
adc
lea
les
leave
jg
add
decl
test
pop
pop
xchg
mov
adc
ffreep
ljmp
inc
mov
mov
jmp
and
add
mov
dec
lods
inc
lea
pop
mov
xor
cmp
xchg
xchg
stos
jge
inc
add
adc
cmpl
or
or
add
call
add
dec
ret
and
pop
mov
pop
aaa
inc
inc
lcall
and
inc
pop
add
incl
push
push
mov
icebp
cmc
dec
out
adc
test
dec
test
nop
pushl
add
adc
mov
sub
xor
push
mov
lock
adc
dec
or
repnz
cmp
jno
mov
xchg
insl
pop
jo
addl
fwait
push
mov
call
dec
jg
and
leave
sbb
ja
push
and
push
aaa
dec
ds
loop
cwtl
pop
fists
rcr
sbb
mov
hlt
push
xchg
xor
sbb
cmp
loop
jg
jnp
sub
mov
pop
mov
sar
mov
xor
sti
and
aaa
out
mulb
sbb
test
in
jle
inc
cld
and
push
das
call
mov
scas
and
or
mov
sub
arpl
or
daa
jne
incl
es
sbb
call
fsubs
pop
xchg
add
std
repz
pop
clc
cltd
or
stos
mov
mov
sysret
mov
shr
aaa
mov
je
push
sarl
push
cld
xor
cld
push
sub
or
cmp
mov
add
lret
pop
mov
decl
sub
ljmp
imul
leave
fisttps
push
aaa
mov
push
cmp
scas
ljmp
mov
nop
mov
lods
test
fistl
xchg
inc
call
shrl
sbb
ret
test
movsl
call
lock
sbb
icebp
pop
push
lea
sub
test
pusha
sbb
mov
adc
sbb
inc
add
push
arpl
jg
mov
dec
cld
mov
stos
inc
inc
jg
sbb
pop
incl
jne
daa
add
scas
jmp
adc
pop
pop
notb
cli
xchg
mov
outsb
mov
or
incl
adc
mov
out
rcrb
sbbl
or
add
fildll
pop
mov
add
pop
add
imul
movsl
mov
and
loopne
in
fists
mov
cwtl
jp
push
xchg
pop
in
xor
decl
pop
push
xchg
shl
flds
repnz
dec
mov
addr16
mov
mov
sbb
sub
push
ja
mov
xchg
jle
inc
cs
jmp
sar
fldlg2
mov
cmp
pop
cwtl
push
mov
sub
mov
or
adcl
mov
mov
cli
pop
pop
push
and
cld
xchg
or
in
das
adc
sub
push
pop
cmp
bound
pop
fsubrp
clc
adc
mov
imul
jmp
add
sub
fwait
bound
and
xor
decl
sub
incl
and
dec
call
xchg
and
in
call
push
inc
dec
adc
cmp
and
pslld
add
rcll
xchg
movsl
stos
cld
lcall
shrb
in
xor
repnz
ja
jnp
leave
xor
lahf
outsl
lret
loop
xor
daa
add
jle
mov
xchg
jnp
rolb
hlt
sub
jp
cmp
adc
popl
movsb
cmc
ljmp
stos
add
je
mov
add
adc
pop
rorl
ljmp
sar
add
dec
jmp
pop
mov
ja
lret
add
jne
and
filds
fsubs
mov
iret
mov
mov
arpl
pop
and
push
pop
aas
jae
movsl
or
ljmp
jmp
add
push
call
cmpsb
and
jge
adc
dec
mov
dec
adc
wrmsr
mov
jbe
in
aas
push
aam
fadds
into
incl
push
dec
jne
mov
jle
lods
dec
adc
jg
lea
and
hlt
loopne
decl
pusha
rorb
pop
xchg
push
mov
and
ja
pop
inc
add
sub
push
incl
xchg
pop
and
and
decl
pop
inc
add
movb
lcall
push
cmp
sti
andl
outsl
xchg
or
fdivr
xor
cmp
jg
int3
jecxz
mov
push
push
rolb
loop
popa
jecxz
insl
push
pop
adc
push
call
sub
lods
nop
movsl
lds
sarb
js
testb
adc
fildl
ja
pusha
sub
xchg
pop
std
push
decl
movsb
adc
call
imul
jl
jp
pop
pop
scas
mov
clc
mov
jle
and
aaa
decl
jl
cmp
jge
dec
add
repz
hlt
leave
xchg
arpl
xor
jl
mov
or
adc
cli
cltd
pop
aad
pop
aaa
mov
sub
xchg
adcb
rolb
or
sub
jbe
sbb
outsl
add
lea
jg
shrl
lock
cli
cwtl
movsb
xchg
fildll
xchg
rdtsc
pushf
mov
push
xchg
outsl
xchg
dec
js
decb
icebp
jle
mov
mov
aad
lock
lds
adc
incl
pop
xchg
push
dec
cwtl
xlat
inc
hlt
ljmp
jle
cmp
cld
lret
cld
xor
movsl
sbb
cmp
pop
add
dec
pop
pop
or
lock
or
cmp
sti
and
jle
adc
fdivl
and
ljmp
cmp
push
cmp
mov
jmp
orb
jmp
xor
rclb
sub
repz
cs
pop
and
loope
inc
rolb
mov
sub
sub
lahf
adc
inc
std
sbb
sub
cmp
test
loopne
cmp
loope
scas
push
in
pusha
sbb
xchg
push
or
test
xor
je
dec
loopne
add
jmp
add
lret
push
arpl
in
pop
rcrl
das
rclb
sub
push
cmp
sub
mov
push
test
dec
std
mov
pop
mov
call
enter
cmpsb
adc
bound
dec
xchg
and
cmp
call
test
push
mov
add
mov
cs
rorl
lods
ret
scas
jl
mov
popf
ret
inc
out
adc
ljmp
jg
clc
in
sub
enter
sub
push
xchg
sbb
cmp
je
sub
dec
or
inc
or
rol
cmp
adcl
add
jnp
xor
jmp
add
jmp
mov
adc
or
movsl
pop
cli
sub
aas
xor
outsl
adc
push
jmp
or
jg
pop
in
add
mov
xorl
sbb
stos
sbb
jecxz
cli
cmpsl
pop
movsb
push
lock
adc
ljmp
scas
int3
ret
adc
push
int
cmp
mov
mov
xchg
loop
jmp
loopne
mov
inc
jmp
jnp
data16
mov
lea
dec
mov
or
incl
jmp
nop
or
jmp
js
aas
pop
jge
stos
aas
movsb
repz
sub
pop
clc
or
xchg
sti
filds
mov
int
cli
repz
in
lahf
lods
push
lcall
xor
xor
inc
mov
aas
ljmp
repnz
or
cmp
and
jle
cld
inc
adc
and
lahf
das
pop
push
and
std
xor
cld
xchg
cs
addb
call
nop
dec
pop
sub
test
sub
cli
subb
sarb
adc
inc
sbb
movsb
popa
push
pop
dec
test
push
aas
or
cmp
xor
inc
data16
daa
stos
adcb
gs
aam
lods
mov
lea
jg
outsl
cld
sbb
mov
clc
pop
push
rorl
sub
adc
lock
scas
incl
jbe
adc
addb
cmp
testb
push
cmp
dec
test
inc
gs
push
jbe
pop
in
add
pop
mov
mov
cli
pop
adc
nop
dec
xchg
xadd
jmp
adc
arpl
sub
mov
inc
xor
nop
mov
inc
xchg
test
call
dec
and
dec
sti
call
xor
dec
xor
mov
cli
shrl
xor
nop
adc
mov
incl
stos
cmp
clc
mov
mov
out
dec
jne
pop
test
outsl
cltd
lock
movsb
lcall
iret
subb
mov
inc
cmp
popa
and
jge
call
in
push
loop
dec
not
adc
jne
out
mov
xchg
xor
inc
sub
ret
cmpsb
dec
pushl
ret
data16
dec
cltd
pop
mov
xchg
movsl
add
add
incb
pop
leave
incb
aaa
xchg
inc
ljmp
stc
loop
add
adc
add
adc
ret
in
std
sub
sbb
mov
fisttps
sub
push
inc
in
and
xchg
push
add
fnstsw
cmpsb
pushl
loop
add
int
or
jmp
fiaddl
adc
adc
popa
in
aaa
and
call
mov
and
test
stc
call
jno
cld
jl
imul
or
add
insl
jg,pn
cmp
mov
or
stos
adc
pusha
daa
push
out
ror
add
dec
sub
pop
in
mov
cwtl
fdiv
xor
mov
add
cmp
stos
lock
add
xor
inc
fdivr
out
jno
pop
pop
sbbb
nop
popa
mov
push
dec
xor
ljmp
mov
jmp
jg
dec
sbb
push
sbbl
aam
adc
mov
lds
clc
jb
out
orl
push
adc
and
sbb
loop
loope
fisttps
jmp
ret
mov
lods
outsl
test
nop
xchg
add
call
xorl
aam
daa
pusha
jmp
adc
adc
mov
pop
pop
aas
pusha
cmp
adc
adc
inc
lods
add
or
fwait
lock
xor
outsl
fcoms
psubb
daa
add
push
xchg
in
push
fsubs
dec
sub
mov
in
pop
pop
lods
inc
movsl
xchg
sub
rorb
sbb
jecxz
jnp
xchg
jg
xchg
pop
push
mov
ss
pushl
fcoms
lea
add
xor
aaa
lds
stos
in
adcb
pushf
sar
add
jnp
adc
aam
aam
das
lock
pop
jmp
mov
mov
imulb
call
lcall
inc
std
xchg
push
jno
push
das
fildl
pop
dec
dec
cmpsb
dec
jmp
add
ror
movb
xchg
loope
cmc
add
add
adc
inc
je
xor
push
fst
mov
or
xchg
in
outsb
mov
mov
cmp
pop
clc
cltd
inc
push
or
cld
sbb
loopne
cmpsb
mov
ljmp
sub
cli
mov
std
inc
pushf
and
out
inc
decl
sub
data16
fists
ljmp
test
outsl
shll
mov
imul
ja
ss
sbb
pushf
arpl
addb
fldcw
outsl
or
push
jmp
int3
pop
cmp
add
add
or
test
sub
shrb
mov
idivb
xchg
pop
lcall
inc
add
add
sbb
lods
test
pop
roll
cli
int3
push
orl
or
push
push
arpl
and
mov
aaa
decl
lock
jmp
mov
inc
sar
shl
shll
movsl
sub
xorl
lds
mov
mov
rcll
mov
or
adc
ret
jnp
jnp
mov
mov
sbb
pushl
js
addl
mov
loop
mov
lcall
sbb
nop
cmp
cmp
addb
xor
clc
push
popf
rcrl
pop
mov
aaa
js
lcall
test
pop
pop
mov
mov
pushf
cltd
cmp
sarb
jno
jns
pop
sar
call
ja
or
pop
lea
cmp
call
add
lahf
push
jg
jle
push
cmp
ret
push
rcrb
call
jge
outsl
outsb
cltd
sar
pushl
or
aas
push
cmp
and
or
inc
decb
xor
aaa
cmc
jp
cmc
sbb
sub
push
sbb
add
xlat
imul
xlat
cmp
dec
lock
mov
loopne
push
in
lods
inc
xor
lods
in
jmp
xor
or
clc
mov
push
jg
pop
jg
sbb
lcall
or
hlt
inc
sbb
dec
imul
pop
add
push
cli
cs
adc
incl
lods
jmp
enter
push
cli
js
or
ret
es
xor
cmp
xchg
nop
sub
mov
jle
std
bound
fiaddl
add
sbb
cmp
popa
or
clc
cs
call
or
xchg
push
and
jge
sub
jle
adc
sbb
iret
jle
xlat
incl
aaa
push
dec
jne
out
mov
mov
push
sub
mov
push
call
xor
gs
repnz
ret
popf
cld
push
ret
push
das
mov
xchg
or
and
mov
dec
movl
enter
fistpll
lds
sub
push
inc
imul
mov
sub
inc
pop
sub
add
shl
pop
cld
movsl
cmp
sbb
in
sbb
std
dec
hlt
pmuludq
clc
rclb
in
icebp
push
adc
and
pop
sbb
repnz
std
andb
xchg
loope
inc
or
or
jne
dec
in
ds
xor
jmp
mov
pop
sbb
gs
jne
inc
out
in
sub
pop
lret
sti
ljmp
popl
add
dec
hlt
call
call
iret
je
jge
sbb
sbb
push
cmp
rcll
loop
xor
jecxz
lcall
test
insl
clc
subb
hlt
mov
call
or
cmp
mov
or
js
adc
das
push
jne
adc
mov
popaw
jmp
orb
ret
clc
lea
xlat
test
mov
cld
call
pop
repz
jne
lea
lds
icebp
mov
inc
int3
push
loop
repnz
test
ljmp
cmp
xchg
adc
push
xor
es
repz
jae
jge
mov
pop
inc
addr16
jmp
cli
loop
jmp
add
ljmp
add
and
loopne
xor
movsl
incl
lods
inc
mov
sbb
mov
inc
pop
roll
sbb
add
pop
mov
mov
loopne
cli
je
addr16
popa
mov
insl
add
inc
inc
call
test
inc
sbb
dec
jmp
jo
std
stos
fstpt
leave
sbb
mov
test
pop
lahf
sbb
orl
and
ds
mov
mov
sarb
leave
mov
shr
outsl
or
lods
lds
and
mov
idiv
mov
je
lock
rcll
stos
and
rolb
add
int3
xchg
repz
pop
les
mov
adc
pop
fldcw
repz
jle
fstpl
insl
dec
mov
daa
add
rclb
sub
mov
test
or
insl
inc
mov
push
dec
scas
pop
push
pushl
add
xor
xor
inc
das
lds
idiv
push
es
push
inc
jae
cmc
test
and
dec
sub
je
adc
gs
dec
movsb
incb
aas
jmp
mov
movsl
movsl
sub
mov
pop
xchg
inc
xchg
jg
adc
xor
hlt
add
dec
test
sub
daa
push
jg
push
or
add
or
inc
std
or
and
outsl
mov
jne
cmc
push
xor
je
pop
xor
mov
mov
pushl
dec
adc
pop
hlt
bound
and
cmp
push
inc
cld
clc
cmp
scas
cltd
cs
inc
jmp
mov
cmp
dec
je
inc
add
jne
sub
call
out
sub
rol
imul
daa
cld
jae
add
stos
jnp
adc
cli
loop
mov
mov
in
pop
fs
cmp
pop
adc
mov
dec
xor
cmpsb
decb
sub
xchg
sbb
jns
int3
mov
cli
push
std
mov
stos
test
push
dec
mov
das
pop
xor
das
mov
addb
or
xchg
rcrl
hlt
pushf
fadds
sbb
pop
pop
sbb
sbbb
sti
mov
sbb
sbb
jle
std
sbb
dec
in
scas
outsl
mov
rclb
and
pop
dec
xor
imul
sub
std
popa
daa
mov
lods
dec
xchg
mov
jne
sbb
pop
xchg
pop
inc
or
adc
clc
xor
sub
ud2
decl
and
cs
jg
dec
cmpb
add
sbb
dec
pop
repz
sbb
sarl
sub
push
movups
stos
cmpsl
cs
xchg
test
inc
and
jmp
nop
mov
dec
and
cltd
cli
sqrtps
push
pusha
rolb
xchg
lods
push
add
cmp
and
sub
mov
mov
push
ljmp
je
inc
leave
sub
or
xchg
cs
sbb
push
cmp
stos
sub
jb
add
sti
lea
jl
ss
gs
mov
call
outsb
cld
inc
add
mov
sbbb
and
inc
sub
dec
sbb
mov
pop
and
cli
or
and
aaa
inc
nop
push
call
pop
push
jmp
pop
cmc
call
mov
mov
mov
pop
test
imul
call
test
add
dec
icebp
add
xchg
mov
adc
das
push
and
mov
adc
inc
mov
mov
fisttpl
inc
iret
lds
mov
push
stos
lret
jmp
adc
sbb
fsubr
lahf
int3
inc
insl
sti
andl
bound
pushl
add
outsb
lods
orb
cmp
bswap
jne
dec
sti
push
call
or
incl
mov
xchg
pop
inc
mov
test
idivl
jmp
and
xchg
ret
fdivr
test
ljmp
scas
pushl
sbb
mov
in
push
ds
mov
sub
je
cmp
in
mov
add
incb
es
mov
push
jecxz
fistpll
jmp
adc
mov
inc
xlat
pop
inc
ret
ret
nop
xor
call
mov
mov
pusha
mov
push
repnz
jmp
push
nop
jbe
pop
jmp
adcb
adc
jl
andl
or
lret
das
push
or
out
lock
sarb
das
sbb
xor
icebp
cmpsl
icebp
inc
inc
outsl
aam
bound
cmp
add
dec
adc
fbstp
jl
or
cld
fwait
sbb
outsl
mov
dec
jg
out
jmp
add
sub
mov
popf
add
xlat
into
mov
pop
aam
inc
test
int
pop
ret
or
or
jo
ret
pop
pusha
je
xchg
shl
sub
pop
cmp
jne
decl
mov
mov
test
mov
lock
sbb
jae
mov
sbb
add
cmp
push
jbe
icebp
add
sbb
imul
mov
stos
outsl
and
ljmp
inc
mov
push
and
inc
ror
mov
adc
icebp
push
mov
xchg
inc
or
pop
add
inc
inc
mov
cwtl
pop
shll
add
les
jp
out
and
push
daa
sub
pop
cmp
rcrb
jmp
pop
dec
mov
mov
int
in
mov
rorb
cmp
sbb
jmp
mov
jb
incl
mov
cmp
mov
pusha
call
sbb
mov
shrb
jle
jmp
adc
pop
jmp
icebp
std
pop
pop
dec
sbb
mov
sar
faddl
sub
outsl
push
loope
lds
int3
mov
sbb
out
dec
inc
lock
mov
daa
inc
lcall
lods
lret
push
pop
adc
aam
mov
movsl
pop
inc
cmpsb
pop
ss
cmp
xchg
add
pop
adc
and
lock
out
pop
adcb
inc
arpl
pop
in
sub
fwait
adc
xlat
inc
aaa
inc
aaa
stos
idivb
cmpl
rcll
lea
jg
lock
loop
outsl
push
clc
xchg
fcmovnb
sub
mov
stc
fmulp
inc
call
mov
xorb
jg
shll
cmp
adc
dec
aam
pop
add
ljmp
xor
call
sar
shrb
out
cmc
ret
add
xchg
aas
incl
jp
decl
adc
or
loopne
or
loope
ret
sub
sbb
add
hlt
adc
adcb
and
icebp
imul
idivb
dec
cs
mov
mov
aam
out
add
incb
hlt
sub
mov
or
mov
pop
jecxz
add
mov
mov
mov
sbb
add
cli
jbe
cmp
or
ficoms
jmp
mov
add
jmp
js
jo
scas
cmpb
lock
fcomps
nop
ljmp
inc
pop
dec
ret
decl
aas
push
push
incl
in
int3
pop
into
sbb
sar
dec
repnz
add
jbe
jp
je
enter
mov
loopne
palignr
hlt
loopne
lret
into
outsl
mov
test
cmp
cmp
or
mov
mov
mov
int
call
mov
clc
jl
sbb
jp
or
sub
jg
add
aad
mov
js
lods
mov
cld
adc
lds
cmp
cmp
les
cmovs
stos
or
jg
xchg
call
mov
inc
imul
add
add
divl
jl
xor
call
insl
mov
rolb
mov
popf
sti
pop
mov
stos
push
mov
push
or
mov
aas
incl
repnz
test
or
movsb
lcall
clc
add
ljmp
cli
in
pop
cli
pushf
push
mov
jmp
fs
add
aaa
testl
jp
bswap
shll
loop
pop
fcompl
ds
xchg
decl
add
jecxz
mov
cmp
dec
clc
dec
sbb
cmpsl
xchg
pop
pop
cmp
push
in
sbb
cmp
mov
lock
add
aaa
jmp
in
popf
and
stc
repz
mov
fildll
subb
xchg
and
pusha
les
xchg
lock
aad
jmp
adc
test
aas
stos
xchg
mov
lahf
push
lods
clc
adc
adc
pop
cli
or
outsl
mov
or
rcrl
jmp
dec
bnd
mov
jge
pop
call
insl
pop
aaa
jbe
jne
or
fucomi
inc
pop
adc
jns
mov
addl
lahf
sub
sbb
inc
jecxz
jmp
inc
mov
not
push
inc
clc
xchg
shlb
std
add
aad
mov
movl
or
loop
ljmp
ret
mov
je
incl
lcall
jmp
pop
push
adc
jno
sbb
add
or
sbb
sbbb
or
pushl
mov
sti
mov
and
stos
ljmp
sub
mov
decl
cmp
in
add
enter
ret
cmp
jb
push
add
mov
sub
cmc
repnz
clc
dec
add
das
or
mov
loopne
and
or
stc
push
adc
jl
icebp
shll
lods
lcall
mov
subl
mov
inc
add
sar
mov
outsb
ret
arpl
cmp
mov
push
inc
call
outsl
jnp
mov
cli
lock
push
push
add
xor
call
cmc
mov
pushl
pop
or
inc
xor
lcall
mov
xor
les
loopne
sub
mov
idiv
inc
add
push
call
rolb
js
cmovnp
call
cmp
mov
and
inc
addr16
ja
ljmp
mov
incl
or
xchg
sbb
xor
push
lahf
hlt
es
test
and
jl
add
in
clc
inc
or
sub
loope
call
jp
mov
adc
pushl
jge
jecxz
popa
inc
dec
jg
movq
andl
movsl
sub
push
aas
js
dec
pop
sub
les
xchg
mov
adc
push
out
inc
adc
xchg
add
xor
inc
addr16
or
add
scas
xlat
add
jge
mov
call
sbb
ljmp
inc
adc
dec
stos
lock
jl
mov
mov
dec
dec
in
jns
clc
sbb
lds
cli
add
das
mov
push
js
pop
test
lock
ja
adc
mov
dec
dec
pop
push
sub
sub
loopne
sub
test
dec
mov
mov
add
ljmp
fs
adc
insl
pushf
ret
addb
pop
xor
sub
loopne
hlt
cmc
adc
fldcw
push
mov
rorb
dec
neg
add
mov
fdivs
out
and
or
pop
pop
test
lret
push
or
movsb
add
or
and
or
xchg
mov
lock
cmp
aaa
pop
adc
ljmp
fdivrp
lods
incl
in
aas
xlat
js
adc
and
vcvtsd2si
xor
inc
dec
push
lcall
and
je
enter
pop
pop
xor
loop
sub
in
pusha
cmp
test
and
inc
xchg
jmp
xchg
cmp
or
cmp
mov
and
cli
icebp
cmp
sbb
push
xchg
ret
xchg
mov
jb
adc
ja
addr16
or
roll
test
cld
push
pop
hlt
in
jb
add
cmp
movsb
inc
xchg
sub
adc
xchg
loopne
and
stc
fcomps
aam
mov
repz
ljmp
cmp
test
and
in
pushl
cmp
rorb
or
in
jb
je
cmp
insb
pop
push
fs
pusha
enter
movsl
lock
push
scas
pusha
arpl
cmp
test
ja
mov
or
aam
shrb
int3
std
add
enter
outsb
pop
mov
add
arpl
movsb
and
cwtl
mov
daa
mov
and
test
push
call
pop
setbe
adc
or
add
pusha
call
jmp
add
nop
cmpl
fiadds
dec
add
and
mov
push
mov
push
mov
cwtl
adc
inc
pop
or
incb
adc
loopne
xchg
adc
push
xchg
push
jle
cmpxchg
ret
aaa
movsb
pushf
add
sub
pop
and
ja
jbe
or
add
push
loopne
xor
hlt
xchg
cmc
enter
imull
sbb
and
sti
jle
xchg
std
enter
cli
add
pop
fdivrs
jecxz
xchg
push
outsl
mull
out
out
pmuludq
push
popa
das
aam
or
std
cmp
sbb
in
enter
out
jb
mov
mov
pop
or
outsl
push
xchg
xlat
repnz
clc
fidivrl
fistpl
jne
fldl
enter
jmp
ret
jg
add
adc
lods
xchg
mov
jb
xchg
test
dec
and
and
into
xchg
fstpl
add
mov
cmp
and
mov
mov
inc
mov
mov
mov
ror
mov
jmp
cmc
jmp
gs
ljmp
ud0
push
inc
xor
xor
add
imul
lcall
sti
add
pushl
push
pop
sbb
call
aam
lahf
add
dec
mov
or
mov
outsb
mov
daa
test
jo
loope
xchg
pop
pop
sti
cli
cwtl
ljmp
add
scas
outsl
or
data16
std
sahf
mov
aam
and
push
push
jmp
push
push
jo
mov
ljmp
sti
pop
pop
nop
push
jmp
int3
cmp
sbb
adc
dec
ljmp
jb
push
popa
cli
pop
add
push
shlb
and
inc
dec
outsb
mov
cmp
sbb
pop
mov
mov
fmuls
push
jmp
insb
lock
fcos
cwtl
push
add
inc
mov
test
pop
pushl
xchg
or
decl
xor
pusha
loop
addr16
or
clc
incl
adc
jns
jp
mov
pop
dec
nop
addb
push
mov
mov
and
fimuls
or
test
incb
scas
xor
lods
adc
inc
xchg
fdivl
dec
add
pushl
mov
cmp
rolb
jae
or
jmp
imul
push
testl
pop
xchg
mov
mov
sarb
call
and
sbb
pop
xchg
mov
sub
push
add
call
pop
out
rol
jne
mov
pusha
push
test
insb
test
hlt
add
in
cld
mov
es
jae
jo
movsb
add
or
add
push
mov
fadd
dec
pop
pop
std
lcall
int
incb
mov
push
push
or
popa
leave
mov
cmp
pusha
mov
dec
int3
adc
push
jb
pop
jns
sbbl
pop
and
ja
orb
adcb
arpl
mov
mov
pop
dec
inc
add
jo
sbb
sbb
cmp
cmp
push
popa
inc
or
mov
push
decl
lds
inc
sbb
inc
popa
outsl
xchg
jmp
sub
push
test
mov
dec
add
push
std
mov
lcall
pop
hlt
cmp
sub
stc
cs
sub
dec
mov
pop
lods
add
pop
add
mov
inc
stos
imul
div
inc
cmp
mov
add
outsl
push
adc
int3
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
movsl
mov
xchg
lcall
xchg
adc
xchg
incl
dec
mov
push
push
pushl
addr16
test
lahf
pusha
inc
in
or
push
sbb
ja
jl
dec
sub
shrl
pop
std
pop
loope
adc
outsl
or
jp
push
ja
sub
and
mov
jmp
jmp
and
or
subl
add
call
mov
rol
jbe
clc
fistpll
loopne
pop
sbb
pop
dec
push
lock
adc
das
movl
and
adc
insl
out
in
cmp
sti
je
fmuls
in
mov
push
imul
mov
mov
adc
aaa
push
mov
add
fsubrs
pop
outsl
gs
mov
pop
mov
pop
cmc
lds
jo
lock
dec
call
jl
sbbb
xor
push
aaa
fmuls
pop
lcall
pop
dec
sub
adc
cmc
add
inc
ljmp
jg
pop
xchg
popa
shrl
jne
dec
cmp
adc
xor
mov
jo
xor
insb
dec
scas
mov
test
cli
xchg
fcoml
add
fbstp
jmp
inc
xchg
test
stc
loope
and
adc
mov
or
mov
xor
add
shll
leave
das
ret
mov
insb
fisttpl
adc
and
fistpll
cmp
lea
add
sub
sbb
aas
cmp
fisubrl
xchg
fisubs
test
jns
icebp
in
pop
mov
and
ljmp
ja
aas
mov
stos
push
inc
jle
inc
cmp
stos
popl
fadd
test
rorb
test
cld
insb
js
push
push
or
aaa
ljmp
pop
scas
mov
pop
test
push
test
mov
enter
mov
pop
dec
mov
js
jp
aaa
xchg
cmc
xor
and
xchg
sub
sbb
add
dec
mov
cmp
ret
or
cltd
adc
mov
loope
and
jle
push
negb
adc
jg
dec
stos
enter
call
pop
mov
jnp
add
ljmp
cwtl
imul
sti
pop
sbb
cmp
je
xchg
sub
lods
dec
add
jmp
adc
call
ret
cmp
hlt
jmp
add
sbb
sahf
fdivr
xor
or
push
xchg
callw
adc
stos
xlat
rcl
fs
lock
xchg
fcos
dec
int3
push
into
xor
out
loopne
inc
mov
and
sub
cmp
mov
push
icebp
mov
fnstcw
loop
aaa
mov
adc
test
push
dec
mov
adc
jno
je
mov
cmp
sbb
jmp
jmp
mov
add
les
and
call
and
in
fnstsw
ja
jmp
in
popf
inc
out
es
fdivrp
jg
sub
mov
test
pop
ret
addr16
xchg
orl
sbb
add
loop
push
cwtl
jg,pn
mov
jb
inc
add
or
mov
ja
arpl
adc
lock
es
mov
shlb
lret
push
xor
push
sbb
xchg
test
adc
jl
sbb
test
pushf
cmp
daa
jmp
jmp
test
sub
rclb
call
sbb
xor
add
push
xchg
push
ret
inc
mov
add
cmp
jge
incl
cs
add
pop
jb
dec
push
sub
mov
mov
jp
add
cmp
leave
jnp
mov
xchg
xor
test
inc
rcl
push
lret
inc
es
add
clc
mov
ds
repz
add
insl
lock
cmp
xchg
mov
xor
push
sbbb
icebp
loop
add
push
je
push
hlt
push
aam
jle,pn
nop
aaa
jge
inc
daa
in
fimuls
cmp
inc
movsb
mov
xor
cmp
pop
outsl
adc
pusha
pop
adc
clc
incl
fwait
pop
clc
enter
notb
and
jo
fstpl
pushf
lcall
shlb
push
dec
cld
and
sahf
movsb
pop
xchg
es
sbb
hlt
test
dec
pop
mov
add
incl
fstp
imull
aad
repnz
push
ljmp
mov
enter
xlat
mov
push
cli
incl
jp
dec
lret
cmp
je
add
mov
pop
jg
cmpsb
repz
jbe
decl
lock
and
das
or
out
jns
sub
push
pop
xor
int
mov
pop
push
idivl
push
push
lcall
inc
sub
add
pop
movsl
push
xchg
fs
dec
dec
dec
mov
clc
sar
push
pop
push
enter
sub
pop
std
push
pop
add
movsl
negb
pop
sti
xlat
push
mov
adc
out
xor
pop
ljmp
cltd
jo
add
movb
dec
add
inc
add
daa
xor
jns
and
cli
cmp
in
shr
in
mov
pop
cwtl
test
xorl
jl
fcoml
xchg
inc
push
xchg
fldenv
in
pop
lods
mov
push
push
push
pop
mov
dec
shlb
or
cmp
clc
dec
test
inc
cmp
in
inc
cld
sbb
in
dec
push
sub
cs
xchg
fistpll
icebp
xor
push
lea
outsb
inc
sbb
lods
and
pop
fcmove
add
mov
rcl
add
jmp
pop
stos
clc
cmp
arpl
dec
pop
ds
xor
xlat
xchg
test
sbb
add
repnz
call
int3
or
jo
cmp
call
pop
sbb
call
cld
sti
incl
push
pop
jbe
mov
mov
movl
lret
pop
mov
add
imul
pop
cmp
fcoms
and
nop
dec
push
push
push
imulb
push
add
and
cltd
pushf
outsl
mov
nop
fidivs
outsl
insl
inc
aaa
pop
ficoms
cmp
sahf
imul
xchg
aam
rcl
jae
into
add
loop
inc
mov
mov
and
pop
or
and
inc
dec
incl
aas
sub
sbb
jmp
jle
jg
or
push
decl
inc
jmp
jecxz
jne
cs
addb
movsl
mov
or
xor
and
bound
fists
mov
mov
sub
pop
loopne
jne
rclb
mov
pop
mov
dec
subb
inc
push
fildl
lcall
add
js
shl
adc
lea
push
movsl
or
push
inc
pushl
push
mov
inc
push
push
test
add
mov
shlb
inc
cwtl
cmp
add
mov
rolb
lds
loope
jmp
mov
cli
pop
cmp
ja
in
adc
sbb
mov
jmp
jg
dec
aas
fsubrl
sarl
cmp
iret
and
push
pop
push
mov
push
ud0
mov
popf
decl
jp
incl
into
adc
inc
mov
or
mov
adc
decl
xor
and
and
lcall
sub
adc
jge
aaa
xor
loopne
lret
ds
shll
lea
jmp
inc
cltd
bound
in
push
out
add
int
clc
or
sub
pop
mov
das
sarb
and
testl
je
fwait
sbb
orl
icebp
sbb
clc
lock
mov
lock
ret
cld
fldt
lea
call
es
mov
add
ljmp
adc
dec
adc
xchg
mov
cmp
sti
push
sbb
dec
dec
and
call
wbinvd
pop
bswap
rorb
aas
xchg
sub
adc
add
sbb
sbb
xor
xchg
cmc
pop
adc
test
push
xchg
sub
popa
or
mov
movsl
mov
mov
jmp
lock
push
jg
pusha
loopne
xlat
push
ud0
divb
push
clc
mov
filds
xchg
push
jmp
or
inc
insb
jmp
call
dec
lods
pop
mov
mov
lock
aad
ja
mov
xor
cmc
mov
jp
jmp
aad
pop
mov
divb
mov
cmp
loopne
mov
mov
jecxz
jmp
aaa
dec
stc
std
inc
inc
mov
and
adc
inc
jmp
test
jmp
mov
cmp
and
outsb
mov
inc
je
aas
incl
cmp
inc
mov
ja
in
mov
std
nop
cmc
dec
and
or
mov
cmp
or
add
mov
lret
jbe
adc
cli
lret
jbe
pop
xor
std
mov
orl
cmc
xor
jge
mov
bound
pop
pop
hlt
pushf
iret
iret
jae
inc
aam
mov
in
or
and
cmp
xchg
pop
arpl
pop
mov
mov
or
xor
pop
call
jmp
in
and
mov
rclb
xchg
pop
sti
lods
xor
sub
cli
cltd
loope
jg
movsb
jle
adc
lret
hlt
mov
cmc
outsl
rolb
sarb
lret
lret
jge
int3
cld
jecxz
movsb
jne
dec
dec
mov
test
out
aad
inc
jnp
jmp
push
xlat
sbb
cmp
jl
xorb
rcr
mov
push
cmpsl
dec
call
movsl
add
cmp
adc
mov
arpl
jmp
and
fisubl
cld
mov
das
setb
cmp
xor
leave
and
testb
ret
push
xor
inc
insb
mov
cmpsl
fcomps
aam
push
sub
cltd
dec
ret
insb
std
cmp
mov
out
mov
adc
jmp
nop
mov
fsubs
cmc
xchg
lock
fimuls
add
in
mov
xlat
add
ss
mov
mov
xchg
call
mov
je
jl
das
inc
call
add
jae
or
add
add
pop
inc
das
popl
das
loope
enter
xor
sbb
iret
scas
sarb
mov
add
push
push
roll
or
std
in
fildl
fdivs
movsl
pop
decl
fnsave
sbb
fwait
cmpsl
add
cmpsb
push
aaa
or
push
jo
xchg
inc
push
imul
les
jle
xor
loop
out
mov
loope
aas
mov
insl
pop
xor
call
stos
adc
xor
rcrb
push
fs
pop
rcrb
cmp
enter
test
sbb
inc
xchg
xchg
fs
mov
jg
xor
push
or
xorb
addl
jg
fdiv
sti
pop
dec
lea
dec
ljmp
lret
aad
inc
and
incl
imul
call
divl
rcrb
mov
incl
pop
sbb
cli
adc
inc
fdivrl
xor
loop
testb
mov
movq
xorl
pop
mov
mov
dec
clc
dec
insb
cli
inc
fwait
mov
in
ljmp
call
call
add
lret
incl
xor
push
push
xor
jge
andb
xchg
push
call
jle
add
aas
js
cmp
cltd
sbb
in
in
inc
call
sub
nop
jle
fstpt
pop
pop
dec
incb
lock
imull
jmp
dec
mov
dec
mov
in
imul
loopne
push
add
repnz
sub
inc
dec
mov
lahf
mov
mov
or
daa
out
xor
and
mov
pusha
in
fcom
xchg
inc
incl
add
decl
lock
cli
pushf
add
pop
or
mov
icebp
adc
or
enter
subb
mov
aad
cli
or
push
pop
mov
call
rorb
mov
inc
jmp
xchg
add
stc
mov
add
sarl
cmpb
jno
add
clc
adc
in
and
cli
push
orl
xor
inc
add
or
decl
insl
cmp
jmp
incl
fsubrs
mov
xlat
aaa
jmp
jg
dec
cld
lock
add
das
inc
loopne
dec
insb
sub
lcall
and
push
rcll
outsl
inc
mov
icebp
loope
cwtl
je
jg
dec
dec
stos
mov
lcall
testb
fsts
jmp
fdivrp
mov
and
cmp
or
mov
fldenv
push
hlt
adc
pushf
mov
push
ja
sbb
xor
push
or
add
imul
pusha
adc
orps
pop
jns
icebp
inc
jp
mov
out
icebp
jle
fstl
mov
sbb
xchg
add
dec
ljmp
enter
sub
aam
ffreep
nop
sahf
loope
adc
call
fcompl
or
mov
add
fldenv
xchg
repz
push
dec
mov
and
sub
fcoml
xor
pop
mov
add
pop
shrl
fisubl
cmpsl
in
xchg
sub
xchg
sbb
fistps
push
std
lret
scas
int
adc
loop
call
sbb
add
insl
mov
jg
fldt
xchg
jb
pop
pop
inc
fisttps
shlb
test
test
in
mov
push
orl
mov
arpl
add
lret
xor
add
sbb
shrb
mov
les
adc
add
fimuls
decl
dec
sti
std
pcmpeqb
mov
mov
mov
jg
hlt
js
push
sub
in
loopne
sub
adc
lods
inc
mov
call
push
out
push
jmp
push
adc
dec
repnz
add
out
aad
movb
fldt
jecxz
pop
dec
in
rcl
push
aas
out
dec
adc
popa
mov
ds
outsb
add
jmp
cmpsl
sbb
jo
cmc
daa
sub
jp
outsb
stc
adc
inc
push
lcall
testl
mov
test
lock
pop
xchg
out
popf
loop
popa
sbb
mov
and
push
cld
in
mov
xor
cli
ss
inc
jp
fistps
aaa
pop
dec
lcall
jmp
dec
pop
data16
dec
cmpsb
mov
lea
xchg
call
mov
aad
pusha
mov
xor
jg
call
shrb
add
add
push
xchg
fwait
mov
sbb
mov
dec
loopne
xlat
push
xor
adc
les
fildll
xchg
cmc
decl
push
pop
aas
cld
shlb
das
jg
sahf
mov
adc
cmc
je
mov
xchg
ret
ret
decl
mov
mov
neg
pop
daa
lahf
hlt
adc
inc
test
xor
xchg
incl
xchg
xchg
xorb
nop
clc
enter
jle
or
ss
add
pushl
jg
in
dec
loopne
cli
imul
pop
movsb
testb
and
jne
and
cmp
xchg
pop
push
sub
sbb
enter
jle
arpl
add
pop
mov
mov
lcall
sbb
call
add
and
sarb
mov
adc
sbb
add
cmp
jg
adc
loopne
sti
push
fidivs
mov
popa
out
sub
adc
and
add
pop
sub
ljmp
subb
cmp
xchg
mov
incl
mov
das
incl
jae
stc
and
arpl
stos
je
jg
dec
add
add
call
jae
or
pop
int3
adc
hlt
jne
pop
clc
outsl
jbe
pop
add
mov
adc
xor
add
xchg
orl
pop
and
jmp
mov
add
push
loope
or
ljmp
add
je
cmp
adcb
or
add
lock
call
jg
push
mov
mov
jmp
pushl
add
xchg
pusha
adc
mov
inc
jae
imul
dec
pop
scas
cwtl
add
xchg
rorb
dec
mov
xchg
mov
cltd
mov
aaa
jmp
xchg
cmpsb
hlt
lods
and
jg
mov
sbb
rorb
decl
xchg
leave
nop
out
adc
mov
insb
or
dec
fisubrs
dec
mov
add
sbb
jmp
xor
push
mov
or
adc
lret
les
sbb
inc
cmp
cmp
sbbl
ljmp
jmp
push
addr16
dec
adc
gs
sub
or
call
outsl
pushl
and
repnz
push
mov
sub
pop
jbe
cld
add
and
cmpsl
dec
xchg
jne
lock
push
mov
or
shrl
sub
std
jl
or
dec
add
imul
and
or
mov
lcall
or
out
pop
shr
jecxz
xor
push
inc
rcrl
mov
sbb
pushl
ljmp
clc
mov
insb
mov
adc
jne
xor
add
xor
mov
movsb
inc
push
test
stos
int
arpl
cmp
jo
push
lahf
push
push
in
push
dec
das
xchg
sub
mov
mov
sub
fidivrs
std
adcl
pop
push
icebp
adcb
mov
mov
lods
jle
call
pop
sbb
bound
push
sbb
lret
cs
mov
and
add
pushl
in
test
xchg
mov
push
jne
sarb
jb
mov
std
adcb
and
dec
loope
and
jb
inc
xchg
cmc
ljmp
add
mov
loope
mov
mov
mov
xchg
add
and
jno
das
arpl
xor
outsl
cli
push
decl
inc
int3
movsl
jno
ljmp
add
sarb
lret
mov
pusha
fisubl
lock
setne
scas
icebp
or
and
mov
add
fsub
dec
dec
cld
sub
stc
sub
xor
loope
lret
jg
mov
movsl
xchg
call
fwait
cmpsb
and
pop
pop
sub
push
push
mov
call
or
clc
bound
push
cmc
ljmp
pop
adc
das
jmp
out
cwtl
in
cmpsb
insb
sbb
stc
sbb
stos
mov
pushf
pop
xchg
push
ljmp
xor
cmp
pop
xchg
out
add
add
cmp
push
sbb
lods
add
adc
and
in
repz
mov
mov
adc
add
pop
flds
and
lods
cli
or
mov
push
lea
insl
clc
loop
lret
int
push
xor
loopne
mov
fistps
pop
xchg
incl
and
adc
incl
addb
inc
xor
and
jg
lds
in
lock
cmp
loopne
push
cmpb
add
or
decl
hlt
popf
mov
push
decl
testl
clc
push
xor
jle
out
adc
xor
jmp
add
or
cmpb
shl
ljmp
cmpb
mov
add
shrb
jae
add
incl
mov
sarl
mov
adc
sub
int3
and
inc
mov
cmp
xor
jmp
hlt
lods
sbb
js
test
dec
das
sar
xor
add
cmp
mov
mov
jg
sub
pop
sub
lds
inc
or
push
mov
or
test
imul
pop
mov
xchg
mov
out
ljmp
dec
sbb
adc
incl
add
cmp
push
mov
das
mov
fcomip
hlt
mov
pop
pop
mov
dec
mov
push
sub
movsl
cmp
cmp
sub
je
sbb
enter
cmc
pop
enter
push
loop
or
mov
ret
add
push
inc
pop
sub
jle
xchg
daa
std
ffreep
push
nop
jmp
and
int
push
aad
add
pushl
cmp
and
jle
shl
xorb
mov
clc
inc
mov
xor
mov
jle
test
sub
push
add
jo
mov
push
and
pop
or
aam
out
inc
mov
xlat
sbb
xchg
lock
adc
jne
in
arpl
push
ds
call
cmp
cld
cltd
xor
lea
ret
je
shl
outsl
cmp
out
cld
fmuls
cmp
jle
rclb
negl
outsb
lcall
xor
add
push
lock
jo
push
cld
sarb
adc
call
pushf
and
add
roll
add
andb
add
inc
inc
mov
fstpt
rorb
idiv
pusha
xchg
adc
icebp
sbb
insb
inc
mov
hlt
adc
dec
mov
cwtl
xlat
aad
push
mov
adc
stos
jae
jge
mov
push
out
call
sub
and
mov
add
hlt
test
xchg
cmp
jle
mov
test
or
mov
jg
sbb
pop
sub
repnz
ss
add
das
mov
dec
lock
and
imulb
add
inc
and
xor
cmp
jg
sbb
cli
es
inc
adc
sti
hlt
pop
adc
jne
in
jmp
cmpsb
sbb
incl
hlt
sbb
and
lods
inc
adc
sti
sbb
lock
ljmp
adc
test
dec
dec
clc
jmp
pushl
add
vpunpckhdq
jmp
add
incb
dec
add
je
pop
mov
adc
std
push
sbb
sbb
stos
pop
dec
cmp
enter
xor
das
and
testb
jne
addl
jmp
psubq
jnp
testb
pop
cltd
movsb
pushf
les
inc
std
ljmp
or
ljmp
or
mov
cmc
popa
jmp
lea
mov
inc
or
xorb
push
outsl
jge
xchg
cmp
mov
cli
mov
adc
sub
push
in
in
sbb
incl
fcoms
adc
jmp
mov
fcoml
jmp
push
out
loopne
cmpxchg8b
push
lret
nop
adc
inc
xchg
int3
clc
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
nop
adc
scas
push
js
sub
pop
ljmp
and
out
add
pop
and
jnp
es
xor
add
loopne
sub
sub
mov
incl
push
pop
outsl
fstpt
jmp
dec
lcall
inc
pop
xchg
imul
inc
jo
fadds
mov
cwtl
faddl
xor
or
aas
outsb
mov
push
test
sti
xor
xor
fistpll
test
push
sbb
sub
adc
or
mov
pop
cmpsl
les
fiaddl
call
lret
stos
or
aam
or
mov
mov
mov
decl
cmpsl
or
inc
js
testb
push
sbb
call
mov
add
inc
in
sub
pop
cwtl
xchg
ja
aam
psubusw
outsl
js
cmp
add
fldl
incb
dec
push
xchg
adc
inc
test
sbb
xor
sbb
push
cwtl
xchg
adc
gs
inc
cmpl
jne
mov
in
shlb
clc
pop
loope
nop
add
sub
test
mov
xchg
xchg
incl
jb
push
sti
xcrypt-cfb
cmpsl
and
jg
fs
xor
sub
pop
ds
loopne
xchg
add
les
or
js
in
ljmp
mov
call
shlb
ljmp
inc
mov
xchg
lods
aas
sub
add
and
jmp
jnp
test
fadd
shlb
ljmp
fwait
clc
in
int
in
cmpsl
mov
out
and
daa
add
ret
dec
in
dec
outsl
imul
nop
mov
jg
push
pop
add
cld
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
push
adc
xchg
sti
mov
hlt
sbb
mov
and
inc
das
sub
movsl
loopne
stos
les
ss
xor
adc
jne
add
inc
nop
sbbl
cwtl
mov
in
adc
push
cmc
xchg
adcb
xor
jno
dec
inc
mov
and
push
test
jo
loopne
push
adc
popf
and
jae
cli
and
pop
xchg
xor
mov
pop
sbb
cmp
negb
ret
jle
mov
adc
leave
pop
das
lock
ljmp
in
dec
mov
jl
sub
fistpl
lcall
sub
rclb
push
int3
dec
pop
add
lahf
ret
clc
popa
add
jg
jl
sti
jo
lcall
pop
mov
nop
aam
jnp
or
ljmp
popw
sar
xlat
add
dec
decl
enter
or
xor
es
das
ss
mov
hlt
rcll
push
add
jne
adc
sub
inc
das
mov
jnp
sub
mov
mov
mov
dec
sbb
das
pop
in
repz
loope
in
adc
sub
cmc
dec
lcall
mov
or
adc
lods
push
stos
push
pop
jle
add
fdecstp
rcl
inc
lcall
mov
mov
push
mov
fwait
sub
sub
add
jmp
shr
sarl
pop
aad
imul
xor
loopne
idiv
mov
dec
xor
hlt
lcall
pop
xchg
insl
mov
lea
add
mov
cmp
fdivl
pop
insb
inc
jmp
ljmp
push
and
incl
xor
push
call
pop
dec
in
aas
jb
inc
clc
jmp
pushl
sub
test
jl
je
orl
add
pushf
sbb
pop
jnp
jmp
adc
jle
pop
xchg
pushl
add
pop
into
in
sub
adc
cmp
loopne
jns
adcb
into
lock
add
cmp
mov
lock
cmp
imul
rorb
xor
incl
jne
out
cmp
std
mov
aam
and
fistpll
and
cmc
dec
mov
dec
push
out
or
lea
or
pushl
dec
lds
daa
mov
add
xor
inc
shlb
call
pop
cld
fnstenv
adc
mov
jg
mov
sbb
add
adc
out
cli
sbb
jne
cmp
shr
sub
int3
pop
sbb
mov
cmp
into
mov
mov
or
call
add
test
dec
inc
ficomps
cmp
add
push
subb
hlt
add
ljmp
pop
lahf
addr16
sbb
mov
mov
fadds
out
insl
pop
xchg
outsl
inc
adc
mov
popf
das
or
cli
mov
int3
adc
jno
outsl
dec
xchg
mov
pop
dec
insb
mov
and
incl
rorb
or
rol
jg
and
xchg
dec
sbb
xor
mov
inc
jmp
push
out
lds
sub
adc
pusha
add
imul
mov
sub
add
push
xchg
jg
or
popf
icebp
mov
and
pushl
rolb
test
fsub
popa
ret
inc
cld
add
xchg
cwtl
mov
jl
cmc
push
shrb
mov
je
push
je
mov
bound
or
leave
add
das
gs
mov
pop
cmpsl
jle
in
jmp
push
incl
dec
loope
jmp
cmp
lea
fdivr
xchg
cmpsl
stos
xchg
jp
add
aam
js
cli
inc
out
or
lea
or
pop
cmc
clc
or
imul
adc
add
mov
push
sub
mov
jg
cld
xor
fucomp
clc
outsl
mov
push
loopne
adc
lock
call
fisttps
lock
jle
dec
xlat
clc
push
std
add
xchg
pop
inc
fmuls
pop
pop
lock
adc
lcall
call
loop
popf
push
outsl
pop
sub
jb
adc
mov
xchg
std
ja
jne
cld
adc
stc
loopne
add
stos
inc
jg
dec
icebp
iret
push
lea
fcoml
mov
clc
std
adc
mov
inc
cld
mov
pop
or
aam
mov
dec
or
push
leave
cmp
inc
sbb
mov
lcall
jbe
pop
push
lock
pop
hlt
jl
push
adc
mov
mov
dec
es
movsb
aaa
xchg
mov
call
and
test
loopne
fst
icebp
std
inc
lahf
xor
decl
shrb
stos
mov
call
pusha
or
incl
pop
xchg
pusha
cmpsl
int
ljmp
jne
mov
and
mov
fsubrl
lods
adc
pop
inc
sbb
xchg
xlat
adc
mov
push
and
add
in
stc
sbb
aas
add
jae
aaa
and
inc
inc
xor
or
mov
jg
adc
pop
push
push
incl
mov
testl
or
mov
dec
or
lock
mov
mov
inc
adc
es
dec
cld
jno
nop
decb
push
sbbb
decl
xor
ds
mov
push
add
leave
es
jg
decl
and
movsl
dec
sub
mov
pusha
loop
pusha
jae
xchg
sbb
jmp
or
sub
or
jge
lock
cmovnp
xor
adc
cmpsb
das
mov
je
xchg
cld
mov
jg
push
lea
cs
inc
cmp
pushf
jp
add
dec
fwait
inc
jp
clc
mov
cmp
and
leave
aam
enter
lcall
or
xchg
xchg
mov
inc
lods
mov
sub
shl
dec
pop
jmp
add
xchg
inc
xchg
and
adc
dec
pushf
and
enter
pusha
ret
nop
jmp
out
push
or
movsb
mov
mov
cmpsl
inc
mov
inc
add
outsl
mov
aad
jge
scas
jne
stos
cltd
pop
adc
cmp
fsubl
cld
pop
dec
rclb
add
std
or
lret
or
rcrb
rorl
fistps
add
pop
ret
ljmp
imul
sbbl
into
je
icebp
pop
or
lock
sti
ljmp
sbbb
int3
adc
pop
push
push
xchg
pop
cmc
sub
add
sahf
in
shr
lahf
mov
jnp
repz
sub
sub
mov
aam
popa
cmpsb
out
ljmp
or
sbb
push
mov
cli
inc
ret
sub
push
std
cld
lcall
or
test
push
nop
movsl
loopne
xchg
mov
xchg
cmp
rcl
call
in
sub
or
inc
jbe
mov
call
cmp
mov
cmpsb
mov
in
push
pop
and
or
add
jg
outsl
pop
push
mov
bound
mov
push
xor
xchg
add
push
fimull
mov
mov
loopne
jl
nop
incb
incl
mov
call
add
cmp
dec
and
repnz
movsb
or
inc
inc
fdivrs
ljmp
xchg
cmp
mov
lcall
fistpl
adc
xor
or
sahf
jp
pusha
out
add
adc
insb
stos
insb
icebp
dec
nop
outsb
das
push
jmp
mov
testl
jl
mov
jno
add
and
jb
ljmp
es
add
lcall
jne
mov
adcb
lret
pop
jg
inc
insb
xchg
mov
stos
ret
pop
mov
hlt
std
addr16
jno
aam
dec
jecxz
call
xor
leave
add
sub
adc
add
clc
cmp
mov
add
pop
or
push
or
test
popf
jle
jp
cmp
add
shrd
and
sub
sbb
incl
dec
adc
sub
xor
pop
push
dec
fs
outsl
pop
dec
pop
daa
inc
add
mov
mov
fwait
in
mov
inc
mov
jmp
jns
add
imul
das
inc
loope
jne
sbb
xor
mov
ja
mov
imul
idiv
inc
std
movsl
leave
dec
in
inc
call
outsl
int3
cs
in
and
and
inc
cwtl
clc
dec
pop
cmp
addr16
mov
outsl
jp
pop
mov
xchg
decl
decl
pop
add
cmp
lock
push
mov
outsb
lcall
jge
or
mov
cmc
icebp
cmp
xor
dec
loope
cltd
ja
jg
cmp
hlt
adc
jno
pop
test
pop
cmp
jg
inc
mov
mov
add
shl
cwtl
jnp
ljmp
andl
jmp
dec
and
clc
jge
lea
pop
aas
mov
shl
lds
aad
ljmp
addr16
push
cmp
test
dec
icebp
mov
push
aaa
das
xchg
cmp
pop
add
je
add
shlb
sbb
loopne
jno
clc
sub
or
pop
lock
incl
add
loopne
ret
sbb
xor
call
or
add
jbe
cs
clc
jg
dec
xor
dec
add
lock
sub
push
adc
cmpsb
jle
dec
adc
mov
push
incl
outsl
xor
test
in
les
pop
call
movsl
lcall
shll
inc
icebp
jecxz
dec
push
mov
shl
call
mov
call
into
inc
push
or
call
icebp
inc
inc
jmp
add
lret
add
incl
mov
pushw
pavgb
dec
addb
leave
inc
inc
lds
mov
mov
add
shlb
popf
cmp
stos
shrb
movswl
inc
mov
rcl
incb
mov
lcall
sub
jb
push
jmp
mov
cld
xor
sarl
fcomps
pop
adc
jne
push
decl
repnz
lods
or
sub
jle
int3
int3
stos
das
sbb
rclb
icebp
orl
cmc
push
cmp
scas
or
dec
decl
imul
loope
movl
cs
add
mov
dec
imul
add
xor
inc
addl
mov
fwait
mov
ret
push
std
mov
push
and
cmpsl
jo
mov
jg
cmp
call
add
lcall
repnz
movsb
repz
push
in
jmp
sbb
add
mov
mov
sub
pop
scas
faddl
js
pop
xor
out
or
in
lret
rorb
jg
cmp
aam
mov
or
lea
fcompl
aas
clc
sbb
pop
sarl
mov
divb
xchg
call
shl
add
cli
scas
jle
xor
lods
sbb
sub
sti
mov
ljmp
pop
clc
xor
dec
xchg
dec
scas
rolb
in
jmp
hlt
ds
lret
les
fwait
sbb
pop
xor
jmp
xor
cmpsl
mov
sar
rcll
enter
sahf
bound
hlt
inc
and
mov
rclb
sti
xchg
cld
push
adc
mov
mov
comiss
jb
incl
rorb
or
js
cltd
call
gs
ljmp
xor
pushl
and
jo
je
test
jle
repnz
sub
push
mov
add
jge
mov
dec
adc
push
aaa
and
adc
bndstx
addr16
nop
sbb
into
xchg
ss
jae
adc
mov
mov
ljmp
xchg
mov
icebp
fisubrl
lret
das
stos
nop
mov
jg
pop
add
dec
jne
loop
icebp
insb
mov
mov
icebp
mov
mov
pop
pushf
jg
jno
adc
std
outsb
push
sarb
std
imul
mov
jle
sbb
fisttps
pushl
cmp
xchg
decl
aaa
and
shlb
lret
adc
xchg
inc
pop
dec
jo
mov
pop
mov
aam
test
dec
add
xor
movsl
call
xor
decl
in
rdtsc
js
clc
fiadds
and
ljmp
push
adc
shrl
mov
push
fs
call
dec
add
cmp
inc
jmp
roll
in
call
lahf
sbb
pop
xchg
cmpsl
jbe
repz
push
or
mov
in
lcall
mov
clc
and
or
popa
pop
push
mov
pop
dec
les
sub
push
mov
add
jp
push
movsb
or
loopne
inc
push
xor
fsubrl
mov
fadds
aam
adc
jge
xchg
inc
int3
sti
ret
enter
or
les
cmp
cmp
mov
mov
push
in
test
sub
cmpsb
decl
test
jno
sar
mov
mov
and
cwtl
arpl
xchg
ljmp
nop
cmp
cmp
inc
icebp
sbbb
mov
jl
out
fists
sahf
push
or
sahf
je
movsb
cmp
jo
jecxz
insb
loop
in
jg
or
dec
mul
negb
pusha
outsl
adc
push
out
mov
mov
adc
mov
cmp
aam
call
push
loop
scas
lods
cmpsl
gs
cmp
or
addr16
or
cmpsl
cld
fsub
das
adc
pushl
je
mov
es
mov
mov
stc
orb
orb
sub
mov
mov
or
ja
xchg
cmpb
add
daa
jb
outsl
pusha
cmp
call
dec
leave
add
sub
add
sbb
enter
mov
mov
daa
jl
test
movsb
ds
mov
movzbl
xor
add
popa
outsl
push
add
or
insb
cmp
pushl
and
lcall
ffree
decb
sub
dec
and
jle
push
les
shlb
loope
pop
pop
inc
decl
sbb
sub
leave
cwtl
dec
arpl
loopne
xlat
cli
pop
rcrb
addl
cmp
jg
add
lret
sbb
decl
and
icebp
div
outsl
fnstcw
sbb
shrl
je
adc
loop
or
or
xor
push
stc
pop
pusha
or
jg
incb
jp
push
in
daa
bound
and
and
dec
fcoms
xchg
decl
ljmp
pushl
out
jo
sbb
fwait
stos
les
fstpt
imul
push
cmpsl
push
add
mov
mov
add
les
or
mov
xor
push
dec
outsl
test
mov
pop
pop
lcall
ret
xchg
jae
bound
cmp
adc
jb
mov
fbld
mulb
jle
push
mov
pop
or
mov
notb
pushf
faddl
inc
mov
dec
inc
daa
hlt
mov
xchg
popa
ljmp
jecxz
add
pushl
loopne
inc
loopne
movsb
fldt
out
idiv
ret
les
jge
es
dec
push
int3
mov
nop
test
and
add
mov
std
cmp
insb
mov
jo
fwait
adc
cwtl
mov
cmp
je
test
and
sub
add
movsb
clc
jg
pop
xchg
out
pop
or
pop
inc
loop
outsl
test
pop
cmp
movsb
push
test
loope
dec
cld
or
and
cmp
dec
das
push
pop
sti
lods
lock
sub
sub
mov
out
push
aas
jl
fstpt
decl
jg
test
sahf
std
mov
lea
adc
ljmp
adc
ljmp
dec
sub
mov
rolb
mov
ss
outsl
imulb
mov
stc
stos
mov
pop
test
cmp
jmp
jmp
arpl
push
out
adc
push
dec
testl
dec
call
and
push
lcall
pop
add
clc
lock
mov
xchg
pop
cld
mov
cmc
les
push
sarl
lahf
cld
xor
stc
fsts
jle
xlat
and
push
mov
mov
mov
mov
inc
xchg
jmp
xor
ret
push
push
mov
xchg
je
and
pop
jecxz
lcall
push
or
lahf
add
call
dec
dec
mov
in
inc
and
rcll
out
loop
cmp
mov
sar
inc
or
fldt
dec
lods
rcl
sbb
jmp
inc
ljmp
test
data16
add
call
clc
push
addb
sbb
push
and
sub
jl
imul
popl
loope
shlb
jg
xchg
icebp
inc
orl
inc
lcall
aaa
lret
sti
clc
xchg
lods
sbb
pop
cli
push
in
lahf
pusha
loopne
mov
mov
test
scas
xor
xchg
sub
mov
mov
out
rol
sti
add
xchg
pop
in
test
sbb
ds
clc
je
dec
sub
mov
or
aad
push
push
in
push
pop
ret
sub
lock
pop
jns
pop
adc
or
or
jmp
sub
push
jmp
lods
in
fimuls
lret
arpl
lea
ret
clc
or
stc
pop
mov
add
decl
mov
loopne
sbb
xchg
and
mov
aam
lcall
mov
icebp
sub
pop
pop
outsl
lahf
es
sbb
or
xor
ret
dec
incl
mov
movsb
stc
mov
int
incb
mov
sub
lea
xor
mov
movsb
sub
mov
dec
or
std
cld
xor
mov
dec
hlt
insl
shl
or
in
mov
xor
jg
jle
stos
inc
add
add
inc
xchg
pop
or
sti
mul
cld
xor
mov
insb
cs
push
sahf
sub
push
incl
and
sub
mov
pop
leave
adc
lea
jne
push
mov
dec
xor
and
icebp
add
mov
cmp
pop
pusha
mov
add
cltd
cs
lea
dec
je
inc
mov
cmp
incl
testw
adc
addl
ret
cmpl
fistps
rolb
das
mov
or
imul
mov
jle
or
jp
aaa
jle
cmp
fcmovnu
divb
cmpsl
fdivr
in
fnstsw
cmpl
mov
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
inc
adc
test
or
data16
jno
mov
mov
iret
push
fildl
out
push
cmpb
or
hlt
cmp
cmp
sub
jae
inc
fmull
inc
loope
push
push
jge
js
adc
add
shrb
cmpsb
xor
jmp
pop
adc
xchg
xchg
and
and
cmpsl
icebp
hlt
adc
push
fnstsw
mov
add
mov
add
pop
shr
pushl
mov
add
lret
mov
imul
out
xchg
in
imul
pop
repz
cli
jg
and
pop
mov
inc
inc
or
or
cmpsl
add
fidivl
jae
bnd
nop
mov
lock
sarb
outsl
out
adc
jmp
add
fidivl
bnd
fwait
scas
add
mov
cmp
or
in
add
and
pcmpeqw
cmp
bnd
dec
sub
decl
sbb
lods
and
call
ds
rorb
add
push
pop
cli
aad
inc
aas
rcrl
stos
mov
mov
stc
sub
leave
push
mov
pop
xor
xchg
push
mov
jae
fistl
fnclex
shrl
loopne
call
incl
add
and
into
call
xchg
add
add
sub
jg
inc
pop
cmp
xor
je
mov
sbb
mov
sub
add
rolb
fmul
lods
mov
cwtl
or
stc
push
pop
rcr
push
movsb
movsb
fists
fistpll
jmp
lcall
test
pushl
lock
nop
test
dec
lock
cld
xor
outsl
mov
dec
out
sub
loopne
pushf
pminub
dec
or
adc
ljmp
lret
mov
ret
stc
sub
call
mov
hlt
cmp
sbb
incl
mov
or
cmp
mov
cmpsl
ud0
xor
decl
push
call
aas
clc
sahf
mov
addr16
pop
and
inc
icebp
and
scas
adc
out
mov
add
mov
sub
cmp
mov
dec
das
ja
daa
pop
icebp
fdivr
pop
pop
add
je
mov
enter
xrelease
jae
mov
and
jno
cld
outsl
push
inc
clc
enter
jmp
and
cli
jmp
mov
fmuls
adc
hlt
xor
loopne
xchg
pop
sti
add
mov
hlt
mov
sub
cmp
xor
mov
insb
pop
pushl
cmpsb
add
xchg
lahf
movsl
outsl
les
and
xor
ret
decl
or
ss
sti
pushf
ret
daa
adc
mov
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
xchg
mov
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
test
lcall
pop
add
rcll
cmp
or
loopne
add
incl
fistpl
out
lods
out
test
popa
mov
mov
jmp
js
stc
fdivs
cwtl
jae
outsl
aaa
adc
jl
lea
popa
imul
mov
rcl
aas
out
decl
mov
lock
xchg
repnz
mov
aaa
cmp
in
addb
cmpb
decl
shlb
cmpsl
mov
clc
mov
and
aad
fsts
push
add
cli
jae
ds
rorb
call
xchg
and
bound
ds
cmp
sbb
sbb
add
xchg
mov
add
data16
cli
adc
mov
in
pop
jne
decl
xchg
inc
inc
fsub
adc
jmp
jns
jge
lret
outsb
add
sbb
adc
mov
pushf
jb
into
nop
call
dec
loope
ljmp
jmp
xlat
mov
enter
mov
sahf
sbb
mov
or
aad
jmp
adc
aaa
add
lea
sbb
incl
fisttpll
lret
add
pusha
test
jbe
cmp
sbb
sub
add
add
or
xor
add
sub
pop
test
rcrb
sbb
xor
cmpsb
xchg
cmp
add
jne
fildll
les
jbe
xchg
jl
test
repz
sub
dec
inc
push
movsl
notl
test
scas
popf
filds
in
push
xorl
jge
sbb
or
xchg
push
inc
jo
mov
movsl
pop
int3
scas
test
arpl
shl
popf
fbstp
cmpsb
adc
adcl
les
xchg
push
aaa
lea
stc
test
das
jne
lods
incl
mov
pop
bnd
xchg
ret
push
decl
inc
inc
adc
mov
jo
xlat
call
or
mov
icebp
mov
xchg
sub
out
dec
mov
dec
cmp
decl
add
adc
loopne
inc
push
ja
fldenv
add
add
jle
push
sahf
in
add
lea
int3
pop
mov
jo
add
call
into
fisttpll
shll
decb
or
lds
mov
mov
adc
clc
pop
scas
ljmp
add
mov
pop
mul
rorl
mov
cmp
adc
xor
cs
jp
and
pop
sbb
dec
jecxz
pushl
and
jne
inc
push
std
sbb
pop
lcall
bound
fildll
cltd
dec
in
stc
xchg
jle
jecxz
xchg
jno
pusha
cmp
cmp
push
dec
clc
inc
fists
inc
cmp
popf
and
imul
ret
mov
push
adc
push
pushl
ljmp
cli
dec
in
sbb
bound
add
jle
dec
add
test
test
addr16
cmp
jge
cmp
jae
push
mov
pop
sub
mov
hlt
rcrl
mov
xlat
and
jg
and
jns
incl
push
sub
pop
out
hlt
in
in
mov
inc
rcll
lcall
das
jecxz
inc
mov
fcoms
je
clc
jmp
push
jl
jno
mov
mov
inc
incb
push
inc
inc
inc
inc
aaa
fimuls
ret
clc
decb
add
push
test
call
mov
pop
pop
popa
push
test
add
gs
cmp
add
outsl
jo
jno
jb
je
jne
lds
mov
xor
pushl
xor
add
cmp
ljmp
das
add
ljmp
sarb
sub
fstpt
sub
and
nop
mov
or
sar
dec
xor
inc
pop
mov
xchg
aaa
mov
xchg
jmp
gs
lea
inc
cld
test
and
ss
test
rcrb
cmp
insb
outsl
aam
pop
add
popf
jmp
ss
adc
push
add
rcrl
sub
sbb
push
jmp
dec
mov
add
and
push
cmp
rcrl
mov
sub
cmpsb
mov
inc
mov
adcb
mov
dec
mov
push
add
sub
fmul
add
inc
rolb
aaa
hlt
daa
sub
sub
jmp
mov
jbe
imul
pop
les
stos
xchg
into
jg
shl
sbb
loopne
cld
inc
dec
dec
dec
cmp
call
mov
mov
mov
sub
jmp
add
dec
cmc
mov
pusha
ljmp
cmp
mov
lahf
jg
inc
dec
mov
jle
mov
stc
and
or
fnstenv
mov
stos
add
aam
lds
dec
clc
inc
add
jg
or
jae
lcall
and
daa
loope
lcall
sub
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
mov
add
pop
clc
addl
jl
inc
fcom
test
insl
adc
clc
cmpsl
cltd
adc
leave
pushl
jmp
xorl
xorb
jne
rcll
jge
je
add
cmp
or
add
sbb
and
popf
jo
insl
neg
dec
lds
fldcw
nop
xchg
insb
push
pop
dec
clc
mov
jo
lock
jp
sbbb
mov
bnd
jg
push
lcall
add
lds
in
outsb
jp
iret
sub
call
mov
adc
mov
push
hlt
adc
push
sbb
add
xchg
repnz
add
mov
lods
xchg
dec
dec
jno
sbb
ret
cld
mov
mov
add
cld
cltd
lods
clc
fbstp
scas
fs
jecxz
add
xchg
adc
mov
jnp
pop
xor
or
pop
decb
or
mov
lods
inc
pop
dec
test
call
outsb
dec
fbld
ud0
mov
or
loopne
out
mov
loopne
icebp
push
mov
and
pop
cmpb
shll
sub
outsl
mov
push
mov
adc
dec
xchg
add
ss
and
inc
pop
lcall
dec
test
push
incl
aam
fs
add
lahf
outsb
mov
xor
aam
pop
incl
cltd
sbb
nop
pop
add
cmpsb
push
or
add
loop
and
adc
clc
aas
jb
out
pop
negb
xchg
lods
lcall
mov
cmp
lods
test
je
movsb
iret
clc
ljmp
or
hlt
mov
cmp
mov
mov
pop
in
or
cwtl
xchg
cmp
add
imul
out
int
jnp
and
sar
cli
outsl
dec
mov
add
push
outsl
insb
mov
sub
add
sahf
cmp
xchg
pop
mov
not
jb
js
pushl
mov
push
or
add
cmp
add
dec
sub
jle
add
les
adc
add
push
movsb
stos
repz
inc
mov
decl
jne
out
icebp
inc
or
das
into
sub
cmp
ljmp
fldt
jbe
fsubp
ret
aas
xchg
stos
adcb
fisubrl
sbb
mov
cmp
or
incl
ret
mov
popf
xchg
push
lcall
inc
pop
push
call
aas
xchg
paddb
andb
dec
pushf
or
pop
inc
outsl
cmc
add
loop
xchg
pop
push
pop
stos
js
jle
loopne
pop
push
fbstp
loopne
dec
pop
loopne
sahf
add
scas
jno
mov
mov
pushl
xchg
pop
pop
lret
push
stc
xchg
in
add
mov
test
incl
cs
pop
aad
pushl
jb
jle
inc
pop
jle
jo
hlt
pop
mov
xchg
inc
outsb
int
das
ss
xchg
inc
mov
decl
pop
mov
scas
shrl
mov
fsubs
sbb
mov
xchg
cmpl
js
insb
call
fs
pusha
xchg
add
rolb
pop
dec
push
jns
cld
shll
sbb
out
test
sub
jecxz
pop
pop
dec
in
jl
clc
pop
dec
pop
lock
xchg
scas
enter
mov
push
hlt
lock
dec
sub
pushf
pop
sbb
hlt
out
fsubl
push
leave
add
inc
fstpl
idivb
xor
mov
fists
mov
mov
inc
cmc
js
dec
xchg
outsb
mov
mov
nop
mov
adc
call
dec
lods
cmc
adc
sub
int
add
aad
jb
pop
adc
lea
paddb
adc
and
adc
iret
mov
les
mov
bound
and
movsb
jns
mov
mov
outsl
jl
cmpsb
nop
mov
cmc
fstl
pop
clc
mov
push
loop
lea
ja
aaa
adc
pop
xchg
fs
adc
mov
and
std
cmp
xor
push
jae
add
jbe
and
in
mov
xor
pop
sub
cli
dec
push
ljmp
adc
cmp
cmp
and
ljmp
add
push
pop
clc
iret
mov
repz
cwtl
std
jo
pop
lock
addr16
xlat
jae,pn
jns
xor
jb
adc
or
hlt
cmp
pop
push
pusha
mov
xor
js
daa
inc
jb
push
pop
subb
xor
mov
xchg
add
mov
lcall
rorl
jmp
push
fmul
std
or
pop
pop
repz
mov
jne
divb
inc
enter
aad
pop
pop
mov
inc
hlt
ljmp
fwait
aam
popa
test
sub
incl
push
dec
in
cli
popa
mov
or
mov
cmp
inc
outsb
sbb
inc
fwait
jmp
add
adc
sbb
mov
mov
xchg
dec
fsubr
in
push
pop
filds
jae
jecxz
xchg
in
ja
xchg
cli
dec
loop
shlb
and
call
in
mov
add
jecxz
inc
xchg
xlat
in
xchg
jmp
cmp
pop
lods
icebp
fadd
sbb
shrl
add
iret
ljmp
pop
loope
xchg
cmpb
mov
clc
into
jmp
pop
inc
or
fcomi
fld
pop
aaa
fldt
fistps
sti
cmp
dec
dec
in
rol
or
mov
xabort
jb
loopne
push
das
pop
test
decl
add
test
icebp
mov
pop
adc
add
adc
xor
jecxz
lock
mov
imul
not
sub
out
mov
pop
jp
push
iret
jne
stc
lret
pushl
xor
fdivs
clc
add
das
xor
dec
push
lods
jecxz
jge
sbb
pop
and
nop
xor
push
lods
push
test
decl
lock
jns
lock
and
dec
inc
js
push
lcall
test
and
fwait
shlb
mov
mov
lahf
sub
fcomps
movsb
outsb
mov
call
xchg
add
js
mov
pushf
mov
call
pop
imul
lea
repz
xchg
movsb
fildl
inc
cmpsl
fdivrs
push
pop
rolb
movsb
repnz
push
ljmp
addl
popf
add
test
inc
or
call
call
stos
adc
mov
mov
xor
decl
xor
sub
push
fadds
cmpsl
loopne
and
mov
test
paddd
decb
lea
adc
jmp
shlb
popf
push
and
aam
filds
adcb
jg
cmp
decl
xor
loope
pushf
clc
add
lcall
ret
mov
push
lret
addb
mov
out
shl
or
addr16
xchg
orb
pop
loop
pop
xchg
pop
div
fldpi
add
lahf
out
ljmp
sbbb
push
add
int3
or
clc
mov
jge
imul
xchg
xchg
rorb
and
aam
inc
mov
push
inc
or
push
dec
adc
ss
es
je
sub
inc
das
je
imul
and
jae
mov
fnstsw
pop
sbb
xor
adc
std
push
movb
push
sarl
outsl
outsb
and
decl
bnd
fimuls
lret
sbb
inc
cmpsl
jnp
sahf
cld
aas
arpl
jge
pop
or
inc
pusha
xchg
push
mov
js
sbb
adc
sbb
mov
push
repnz
mov
xchg
cmp
adc
inc
aam
xchg
test
decl
and
fimull
push
test
inc
clc
add
dec
stos
enter
das
ds
sbb
aas
test
jg
cwtl
outsl
shll
mov
sub
mov
testb
ret
jmp
popa
lock
aam
dec
inc
push
cmp
hlt
sub
and
loopne
push
jb
push
sar
popa
sbb
ret
jle
sbb
xchg
mov
mov
test
mov
out
outsl
test
sub
dec
inc
dec
decl
inc
lock
push
add
push
out
or
or
jo
jmp
pusha
and
testb
cmpsl
aad
cmp
ljmp
cli
push
and
mov
inc
adc
jbe
aas
jmp
adcb
das
call
xor
test
sub
jnp
add
jmp
enter
and
jmp
idiv
dec
add
ds
xchg
xor
scas
xchg
hlt
out
xlat
aam
filds
inc
or
sbb
clc
call
pop
add
cmc
leave
in
pusha
xchg
outsl
div
inc
lock
sbb
sbb
movb
fstpt
test
js
or
pop
or
loopne
decl
enter
lahf
outsl
fldt
dec
jp
jmp
push
cs
sbb
test
call
cwtl
push
in
das
jae
or
in
push
ficoms
daa
and
push
push
or
mov
movsb
xchg
sti
add
and
adc
loop
icebp
adc
jmp
push
out
dec
enter
ja
push
std
push
and
das
jo
or
jle
das
incb
push
test
ret
pop
push
clc
xor
call
pop
mov
lcall
cmpsl
dec
add
sbb
inc
xlat
pusha
cmc
pop
mov
jne
mov
jmp
mov
fwait
hlt
jp
add
outsl
cld
cmp
adc
call
jl
insl
dec
jecxz
andl
outsl
movsb
inc
or
or
lods
clts
xor
jmp
mov
js
incl
cwtl
sub
jnp
ret
push
mov
xchg
add
xchg
test
out
mov
lock
pop
mov
fcomps
mov
pop
mov
push
mov
xchg
pop
scas
add
adc
clc
dec
call
mov
and
clc
adcb
lcall
fldcw
sbb
gs
adc
jmp
aam
adc
jle
push
xor
imul
and
outsl
mov
in
cmc
push
pop
cmpsb
flds
mov
jg
call
cld
test
sub
ss
leave
icebp
rcrl
in
mov
push
outsl
mov
push
xor
dec
jecxz
fstpt
cmp
push
loop
xchg
int
subl
out
in
inc
adc
inc
fisubrl
push
test
jle
ss
and
pop
pop
sub
jle
std
fisubl
dec
sub
orl
lds
or
les
cmp
pushl
mul
lock
clc
xchg
add
sarl
push
add
dec
push
dec
inc
pop
mov
loopne
cmp
lcall
adc
or
adcl
adc
orl
outsb
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
incl
test
aam
imul
and
adc
out
call
cltd
fistl
mov
pop
dec
xchg
cld
ss
pop
in
inc
das
sub
inc
clc
sub
sbbb
mov
test
inc
pop
fiaddl
sub
popa
pushf
loope
and
mov
mov
notb
sahf
jb
jmp
jg
or
jmp
sbb
push
in
add
xchg
xor
aad
mov
in
mov
sbb
lcall
or
lahf
mov
cmp
add
xchg
mov
push
movsb
pop
push
sbb
jmp
lods
pop
test
xor
outsl
jnp
hlt
shr
repnz
push
mov
adc
popa
imul
fdivrp
sarb
test
shrb
decl
add
or
adc
mov
adc
mov
lock
push
push
fs
xor
jo
std
mov
in
xor
pushf
and
fildll
add
enter
mov
sti
scas
cltd
nop
jae
cmp
jmp
sub
mov
adc
ja
mov
add
xchg
xchg
outsl
jmp
adc
add
cmovnp
testl
movsb
js
mov
ret
mov
adc
call
mov
push
sub
incl
mov
fldl
int
add
clc
loop
outsb
sbb
jge
or
adc
test
and
mov
sbb
xchg
fwait
sub
adc
ret
sbb
mov
add
cmp
push
or
mov
cmp
and
pop
add
mov
inc
xchg
lahf
push
gs
push
lock
and
pop
dec
lahf
sahf
cld
dec
mov
push
pop
sbb
mov
xchg
and
in
cld
adc
shr
sub
les
add
mov
js
inc
call
sahf
js
lock
mov
jnp
sbb
rorb
leave
add
or
adc
mov
aad
ljmp
fildll
inc
test
dec
ljmp
aaa
int3
pop
cli
cmc
jg
pop
cmp
testl
test
and
adcb
add
test
fstp
dec
or
pop
repnz
psubq
lods
jg
loopne
jp
dec
xorl
jg
mov
repnz
pop
lret
mov
inc
cli
insb
popa
jae
jno
push
leave
sbb
inc
mov
xchg
mov
mov
sub
inc
mov
bound
jmp
xchg
xchg
dec
sarb
add
mov
dec
push
enter
or
jmp
mov
add
lcall
lods
and
test
jo
mov
mov
xchg
or
sub
xor
hlt
jmp
mov
xchg
pop
sub
sahf
lahf
pop
movsl
dec
ds
incb
movsb
push
fmulp
dec
ror
and
dec
pop
add
mov
movsb
lds
cmp
fsubrl
decl
jle
ljmp
jp
add
lahf
sarl
fistl
adc
mov
int3
or
and
das
call
dec
into
cmp
and
mov
lea
sbbl
in
stos
inc
nop
and
std
cmp
jecxz
xor
inc
mov
lock
xchg
cmp
xor
push
push
into
dec
xor
cmp
mov
js
out
push
insl
and
imul
call
xor
mov
mov
rcrl
out
in
mov
movsl
inc
mov
fbld
cmp
ret
cs
incl
add
push
cmpb
in
cld
push
cmpsb
sbb
pop
call
or
pop
pop
lcall
cmp
xchg
incl
and
sar
pop
jg
fs
add
into
mov
sbb
cmp
pop
or
aad
or
call
jne
ja
add
cli
and
adc
rcrl
mov
icebp
push
outsb
pop
je
lods
stos
not
or
repnz
xchg
xchg
sbb
and
das
fcmovbe
in
cli
mov
fbstp
adc
cld
clc
pop
dec
inc
jl
dec
movsb
push
daa
or
call
push
push
decl
inc
push
shl
mov
fistpll
xchg
fildll
fdivrl
sbb
jae
adc
call
sbbb
pop
cmp
out
in
fstpl
jns
pop
inc
fnstenv
ljmp
dec
mov
add
mov
pop
jb
lcall
sub
dec
inc
or
bsf
xorl
pop
pop
push
or
movsb
jmp
shll
es
adc
cmpsl
fs
or
push
xor
mov
push
dec
lcall
cltd
xchg
jl
lods
push
mov
adc
call
push
fistpl
push
cmp
sbb
mov
mov
dec
sbb
lea
and
mov
lahf
test
lret
es
clc
or
incb
lcall
and
push
or
push
fsubrs
or
fstpl
clc
mov
fmull
lea
int3
clc
xchg
adc
xor
jmp
mov
push
or
cs
sbb
push
jg
hlt
inc
dec
incl
jmp
and
add
cmp
dec
push
push
decl
jge
cld
pusha
cmpsl
pop
xchg
sbb
in
adc
sbb
les
add
adc
adc
jmp
or
push
les
xchg
dec
and
mov
lods
mov
jmp
mov
push
mov
mov
fildl
push
push
or
xor
fsubl
sbb
scas
call
sbb
inc
outsl
and
mov
decl
adc
in
out
int3
add
loope
fdivs
mov
xor
or
cmp
loopne
jmp
clc
pusha
add
xor
push
aad
pop
mov
cmp
xchg
mov
inc
mov
push
mov
test
xor
or
ljmp
xchg
lds
inc
sub
add
pop
test
test
jmp
mov
sub
jg
dec
out
and
pop
aaa
mov
inc
or
movsb
or
jne
pop
jae
jnp
iret
decl
adc
adc
call
sar
fists
mov
pop
icebp
mov
arpl
bound
mov
add
or
sbb
std
loope
inc
mov
dec
gs
cld
push
mov
dec
hlt
lcall
enter
data16
mov
push
pusha
rol
notb
jg
in
and
hlt
xor
sub
test
leave
dec
cltd
movsl
fcoms
decl
repnz
push
mov
xchg
cmc
push
pop
xor
outsl
ret
jo
fsubr
jg
mov
clc
or
sub
fisubrl
jg
and
in
sar
push
xchg
adc
sub
or
add
repnz
into
rol
mov
cltd
lcall
pop
mov
jmp
sbb
loop
clc
pop
add
cmp
mov
rolb
lcall
rolb
pop
cli
cmp
mov
or
sbb
push
pop
jno
lcall
clc
push
or
mov
pop
xchg
nop
or
aaa
jbe
mov
add
outsl
inc
addl
xchg
cmp
fdivrl
jecxz
adcl
push
fwait
mov
hlt
lret
and
je
pusha
sbb
ja
or
icebp
jb
or
mov
andb
test
push
adc
testl
pop
into
pop
popa
mov
sbb
ljmp
push
lret
jno
dec
fcmovnbe
jp
std
rolb
push
imul
push
cmp
sub
lods
sbb
mov
or
mov
fnstenv
pushl
cwtl
sbb
dec
pop
sub
or
lret
cli
repnz
in
cld
push
es
testb
or
mov
push
adc
inc
ljmp
xlat
jmp
or
enter
sbb
pop
orb
loopne
into
fwait
sbb
insl
inc
lret
push
sbb
lea
and
mov
testl
pop
cli
das
pop
pop
mov
jns
dec
flds
jno
add
jp
sbb
and
jecxz
adc
push
ljmp
aaa
dec
incl
xor
decl
add
cltd
sub
call
sbb
das
mov
call
and
jecxz
add
xlat
cld
xor
sbb
loop
popf
in
xor
sub
aaa
jo
pop
decl
jbe
xchg
aad
pushf
mov
in
das
cmp
add
dec
ljmp
xchg
mov
loopne
out
sub
and
inc
adc
mov
inc
jl
jg
push
mov
pusha
repnz
cmp
mov
dec
push
pop
fcoms
ljmp
fidivrs
call
pop
xor
xchg
jne
je
int3
insl
adc
imul
sub
push
out
mov
scas
xchg
cmp
mov
loop
and
push
faddl
dec
add
push
aad
or
mov
mov
out
adc
xchg
jb
decl
je
mov
pusha
add
iret
incl
jmp
out
or
jo
cmp
sbb
xchg
les
pop
test
cmpsb
andl
inc
pop
dec
mov
jo
dec
dec
loopne
mov
ficoms
rorl
out
lods
leave
or
adc
jle
mov
pop
lods
fdivrp
add
fisttps
pop
xlat
xchg
movsb
dec
fyl2x
sti
push
scas
mov
mov
dec
pushf
push
fwait
aaa
inc
mov
lahf
dec
xchg
fsts
jle
sbb
mov
mov
ljmp
js
es
stos
mov
add
push
cwtl
mov
fwait
enter
lahf
decl
cmpsb
jo
test
jmp
hlt
icebp
xor
mov
loop
shrb
mov
jns
jmp
shll
mov
les
add
add
roll
fdivs
insb
aaa
xor
adc
test
add
and
stc
push
mov
cmpsb
sbb
iret
call
test
jno
shrb
cmc
loop
add
in
mov
or
mov
leave
inc
cmp
and
adc
mov
cld
push
les
mov
sahf
call
add
and
sbb
mov
incl
add
loope
pop
push
loopne
cmc
adc
mov
ja
sub
mov
repz
sbb
cld
incl
and
ds
or
add
mov
jmp
pop
in
mov
popf
inc
repnz
or
push
pop
out
enter
incl
xor
loop
mov
lods
insb
pop
dec
xlat
decl
pop
in
xchg
add
fwait
imul
cmp
pusha
add
mov
and
cld
inc
mov
add
jg
test
insl
push
and
mov
repnz
aaa
mov
aaa
push
hlt
xchg
pushl
jmp
mov
mov
incl
xor
in
dec
push
pop
std
jle
cld
es
gs
clc
decb
jmp
inc
test
adc
adc
mov
add
loop
inc
enter
daa
xor
and
sub
lcall
push
dec
das
iret
mov
rolb
ss
aaa
test
mov
mov
outsl
data16
sbb
call
decl
pop
sub
mov
testl
pop
movsb
lcall
mov
xchg
adc
push
clc
xchg
lds
pop
cmp
incl
adc
sar
and
xchg
fists
incl
adc
ljmp
add
jbe
jge
inc
xchg
ljmp
dec
rcr
jg
dec
cli
adc
stc
add
sbb
mov
inc
jns
pop
mov
sar
lock
decb
ret
popa
pop
call
adcl
and
mov
flds
sub
dec
movsbl
lea
or
cs
sub
shl
inc
or
jle
mov
enter
pushf
add
lcall
adc
push
rcll
inc
adc
shlb
pop
loope
outsb
adc
push
push
mov
daa
inc
lcall
out
andb
sbb
das
cmp
ficoml
mov
push
ret
nop
jmp
sbbb
jmp
pop
inc
std
repz
decl
nop
or
xlat
sbbl
push
jmp
sub
sub
xor
mov
fmull
pop
ja
add
rcrl
xchg
xorps
adc
iret
neg
xorl
add
ret
lea
or
rorl
sahf
incl
or
inc
incl
les
add
push
movswl
out
pop
imul
ljmp
jno
add
loopne
mov
inc
sti
out
xor
cld
or
ljmp
mov
loopne
test
test
imull
push
popa
and
jecxz
addl
pop
mov
xchg
inc
add
std
movb
cmp
dec
insb
daa
ja
push
in
xchg
cld
leave
cmp
js
inc
cmp
ja
add
pop
hlt
jg
adc
fdivrp
xor
add
and
rclb
and
mov
inc
test
jecxz
xchg
jl
jbe
popa
pop
outsb
cld
in
xchg
gs
es
cmp
outsl
in
jl
lock
fs
sub
add
test
enter
xchg
fsubs
das
loop
cwtl
nop
cmc
mov
js
aas
ljmp
pusha
lahf
pop
push
std
pop
notb
call
mov
cltd
adc
sar
enter
nop
cld
and
inc
fcomp
mov
pop
mov
sbb
xor
movsb
dec
in
jmp
mov
adc
adc
icebp
hlt
cs
and
ja
add
add
add
into
nop
out
incl
xchg
in
push
mov
cmp
ljmp
ljmp
call
xchg
pop
mov
mov
imul
inc
cmc
iret
roll
scas
pop
add
and
std
mov
and
add
cmc
daa
mov
outsl
out
push
js
test
cmc
add
pop
ud0
pusha
mov
insb
cli
iret
jo
je
xchg
stos
jl
lcall
fistpll
mov
mov
enter
sbb
dec
rorb
add
dec
jg
and
adc
adc
scas
icebp
sbb
and
movsb
test
adcb
cmp
incl
dec
jl
push
in
inc
incb
dec
cmp
dec
sbb
xor
mov
mov
xor
inc
inc
je
iret
dec
imul
sbb
jb
mov
nop
add
push
incl
je
in
xor
and
push
mov
sbb
inc
pop
lock
nop
pop
rep
pop
std
les
outsl
mov
pusha
xor
inc
jp
sub
dec
xchg
cmp
test
pushf
mov
add
aad
lods
and
and
cmp
mov
and
push
das
dec
sub
dec
xor
add
adc
cmp
sbb
lret
jnp
sub
jg
dec
adc
leave
push
test
push
stc
inc
test
fisttps
push
icebp
and
jmp
sub
sti
shll
or
and
adc
add
jno
jmp
out
cmc
inc
in
rolb
jb
push
das
pop
and
and
pop
add
inc
add
addl
push
pop
sahf
call
pop
mov
add
add
divps
jmp
das
test
or
jecxz
sti
mov
push
inc
mov
sbb
push
add
push
pop
cltd
pop
sti
cs
or
ljmp
call
jl
push
dec
add
adc
pop
inc
sbb
test
pop
or
xchg
icebp
xchg
add
jl
xor
inc
ss
insb
test
pop
decl
pop
jns
rcrl
test
inc
pop
pop
sbb
pusha
cmc
adc
loopne
add
outsl
je
adc
rorb
jmp
nop
push
ffreep
mov
adc
aam
idivb
add
enter
add
pop
int
addb
mov
lods
push
pop
add
or
adc
pop
adc
mov
sbb
test
mov
out
dec
hlt
dec
push
inc
das
push
out
or
decl
adc
cmp
incl
cmc
std
push
call
lock
and
dec
decl
sub
or
outsl
pop
xor
test
cmpl
jg
sbb
cmp
xchg
call
fdivrs
inc
inc
adc
mov
mov
icebp
jnp
adcb
addr16
or
mov
mov
loope
rep
int3
popa
sub
pusha
cmc
or
js
jg
rcrl
xorb
loop
add
stos
add
test
push
lcall
int
loopne
pop
pop
push
push
outsl
push
mov
mov
ds
shll
call
sbb
adc
sub
nop
sbb
xor
in
ret
add
push
xlat
push
mov
imul
shl
subb
mov
jbe
movsl
jmp
inc
push
adc
cld
cwtl
hlt
or
cltd
aas
ljmp
lea
not
stos
lock
ret
mov
add
sub
int3
sti
call
and
jns
aam
out
cld
in
push
ljmp
cli
inc
jb
test
pop
arpl
jp
inc
gs
out
iret
dec
lcall
mov
call
jg
or
push
call
enter
xor
lods
sbb
sbbb
faddp
aam
dec
roll
mov
mov
jg
outsb
icebp
inc
dec
mov
dec
jmp
fists
movsb
mov
loope
pop
int3
jl
push
das
jbe
popa
adc
aad
adc
jo
ss
in
xchg
call
xor
cli
xchg
cmp
mov
js
lods
mov
add
cmp
sub
mull
inc
bound
mov
jg
mov
and
add
ss
jg
js
inc
adc
jo
mov
mov
popl
sub
push
mov
popa
dec
in
nop
xchg
in
add
push
jnp
rolb
mov
jmp
dec
int3
push
and
test
adc
adc
decl
orb
ret
xor
cmp
aas
mov
pop
decl
xor
pop
lds
cmp
jmp
pop
aas
fsubs
add
pop
push
dec
push
pop
cmp
mov
mov
add
adc
adc
aaa
or
call
xor
mov
loopne
les
pop
ljmp
les
mov
jno
adc
pop
js
shrb
outsb
fs
add
xor
xchg
shlb
addr16
sbb
loopne
sbb
cmp
mov
rol
stos
mov
mov
dec
add
lock
cmp
ret
movsb
pop
xor
inc
mov
lods
cmp
mov
pop
sub
jge
ljmp
test
xor
pop
stos
hlt
loop
lcall
mov
sbb
sbb
pop
inc
or
lods
pop
sbb
mov
fiaddl
sbb
inc
jecxz
push
pop
dec
mul
push
pop
aas
inc
mov
push
jmp
mov
add
add
iret
rorl
out
sub
lock
cli
pop
and
std
fcmovnu
ror
pmaddwd
out
or
jmp
clc
mov
inc
mov
add
mov
insb
in
clc
jmp
adc
jae
insl
push
fadds
out
cltd
out
adc
sbb
lea
js
jmp
add
jp
inc
fbld
cmp
sbb
mov
push
jae
or
cmp
adc
cs
incl
adc
js
mov
popa
iret
adc
push
sbb
mov
pop
xchg
mov
in
loop
das
xchg
cmp
decl
test
sub
daa
shrb
inc
add
shlb
xor
pusha
enter
dec
repnz
cmp
pop
jo
pop
mov
das
nop
adc
pop
jns
pop
jp
scas
jg
es
pop
popa
xchg
testl
jae
mov
shr
insb
sub
ret
insb
ljmp
lock
and
sub
call
inc
mov
das
jecxz
lds
cmp
in
mov
push
inc
out
pop
das
cli
push
mulb
mov
gs
push
adc
xchg
xchg
shl
cmp
in
pop
xor
adc
enter
jp
notb
cmp
sub
out
push
inc
xor
stc
or
push
std
add
cmp
inc
ja
mov
setp
and
adc
sbb
sbb
inc
and
mov
inc
xorl
clc
cmp
cltd
add
outsb
xor
nop
clc
call
add
dec
or
ss
cmp
jae
cld
nop
inc
das
call
or
jg
mul
pop
xor
add
std
mov
jmp
push
clc
imul
jg
bound
add
pushl
jl
xchg
xchg
mov
sub
add
add
test
mov
push
fistl
sub
xchg
push
icebp
les
xor
sbb
imul
out
xchg
sub
mov
or
lcall
jno
incl
insb
fcoms
sbb
add
or
call
inc
pop
clc
xor
inc
pop
inc
lods
dec
ljmp
cmp
clc
xchg
adc
aaa
test
add
pop
imul
xchg
popf
jns
decl
ljmp
es
das
testl
imul
jbe
mov
pop
mov
and
orl
mov
lcall
cwtl
pop
cmp
adc
loope
ret
pop
pop
pop
mov
push
pusha
cwtl
mov
or
pop
dec
mov
loopw
inc
and
leave
insb
nopl
dec
rcrb
mov
sbb
pop
loopne
aas
xchg
and
and
enter
push
push
outsl
pop
aam
call
lea
mov
jnp
std
jp
mov
mov
push
movl
sbb
cld
pop
fsubrs
mov
mov
rclb
pushf
add
scas
aad
ja
out
inc
aas
flds
adc
sarl
outsl
outsb
xchg
pop
in
incl
pop
outsl
add
add
cmc
std
cmp
xor
push
jp
and
xchg
push
add
cmc
inc
scas
lcall
mov
sbb
loopne
loop
pop
pop
cmp
out
icebp
ffree
add
mov
jl
decl
jmp
add
fdiv
lds
push
push
or
xor
hlt
lahf
movsl
nop
mov
movsb
push
lea
call
inc
fiadds
sbb
and
inc
decl
pop
stc
add
shll
loope
mov
call
icebp
mov
pop
dec
inc
or
sbb
sbb
dec
or
and
imul
js
hlt
sarb
mov
loope
xchg
ja
jg
adc
add
hlt
int3
push
call
push
sahf
mov
cmc
mov
push
push
ja
les
or
mov
loopne
stos
icebp
pop
mov
rolb
adc
pop
push
test
int3
aad
shll
xorl
repnz
adc
mov
divb
xchg
lods
or
add
lock
and
xor
push
or
aaa
test
adc
xlat
pop
mov
clc
jnp
lock
js
mov
adc
nop
imul
mov
or
xor
mov
les
into
cmp
adc
and
decl
mov
xchg
pop
lock
mov
pop
pop
rolb
adc
imul
test
adc
push
enter
loop
mov
sub
or
pop
js
push
xchg
pop
pop
add
cmp
sub
and
cmpsb
cwtl
adc
imul
xor
iret
add
jmp
rorl
mov
js
pop
adc
sbb
lods
xor
std
mov
adc
loop
sbb
fcmovnu
push
hlt
mov
mov
in
mov
inc
add
outsl
sub
jo
add
and
jmp
movsb
pop
cmp
push
out
daa
inc
mov
push
das
sub
sbb
jg
pop
clc
aaa
pop
ret
decl
fs
fsubs
mov
or
adc
aad
and
mov
std
cmpl
dec
and
lock
xor
mov
enter
aam
in
das
jecxz
mov
or
js
test
call
flds
outsl
jne
add
and
and
pop
nop
xor
add
lahf
inc
repz
sbb
or
cli
pop
jmp
push
cmp
pop
adc
std
pop
jno
hlt
outsl
test
xor
inc
adc
pushf
sub
hlt
test
mov
and
cmp
orb
mov
or
lock
and
js
pop
adc
cld
mov
das
lods
jecxz
icebp
incl
test
sbb
mov
mov
mov
push
pushl
cmp
rcrl
adc
fwait
sub
popa
inc
add
adc
add
xchg
pop
out
inc
daa
subb
or
outsl
jo
jo
pushl
and
pop
aam
mov
push
sbb
add
fcmovnbe
add
add
rcl
fnstenv
pop
movsb
addr16
ljmp
fisttpl
das
fdivr
and
outsl
aas
lcall
or
test
adc
les
dec
push
out
and
lds
mov
sbb
push
orb
adc
xchg
pop
ljmp
mov
shl
decl
jmp
xchg
cmp
cmpsl
and
xchg
stos
mov
xchg
add
in
jmp
jg
adc
cmp
loopne
jmp
lock
mov
ss
cmp
adc
gs
mov
mov
push
mov
or
xchg
das
aam
sahf
mulb
dec
repz
call
popa
jge
hlt
out
cmc
adc
and
rcrl
jne
pop
cs
adc
jo
and
dec
lcall
push
pop
inc
insl
fwait
enter
lock
sub
outsl
lret
cmp
movsb
movsl
inc
js
incl
mov
decl
mov
mov
and
bound
mov
lret
mov
repnz
mov
aas
daa
xor
add
xlat
sub
jg
mov
push
pop
call
jmp
fcomip
mov
pop
mov
ljmp
arpl
test
sub
fidivrs
mov
cmpsb
push
inc
lock
sbb
sub
push
dec
mov
jl
add
aas
clc
cld
test
lock
pop
add
and
push
lret
and
outsl
rcrb
lcall
or
lahf
xlat
push
cli
adc
imul
or
pusha
aad
in
lds
adc
mov
js
mov
pushl
call
sub
jg
pop
int
adc
or
ljmp
inc
pop
lea
sbbb
test
ljmp
sbb
mov
xchg
loopne
aas
xchg
pop
adc
ljmp
and
icebp
loop
jns
incl
movsb
xlat
and
cmc
inc
or
roll
pop
enter
mov
mov
sub
xor
or
push
or
cmp
sbb
lret
out
cmpsl
xlat
into
hlt
xchg
add
or
rcl
sahf
pop
idiv
aam
orb
add
hlt
adc
jno
jle
mov
mov
jecxz
jecxz
mov
push
cmp
incl
sbb
or
cwtl
cmp
push
cli
testl
mov
adc
insb
mov
enter
jl
add
and
xchg
jp
decl
adc
jae
push
test
and
fnstcw
pushl
xor
mov
sarl
jmp
sahf
cmp
adc
decl
imulb
or
sbb
pop
adc
mov
repnz
jecxz
push
aaa
and
pusha
or
ja
icebp
mov
add
or
lea
decl
mov
test
mov
hlt
cli
sbb
sub
xchg
or
sub
sarb
and
incl
add
add
aas
adc
in
or
push
xchg
lds
test
lock
or
mov
or
std
cmp
lods
sbb
decl
or
sub
jle
xchg
mov
cmp
les
push
sbb
in
popa
sub
ret
dec
push
cwtl
divl
cld
and
inc
or
adc
jecxz
mov
rorl
jmp
sti
sar
ds
push
or
sbb
and
fnsave
jg
add
cmp
adc
push
xchg
mov
addr16
xor
push
and
cli
jl
sbb
cli
mov
sti
and
outsl
xor
jbe
ja
fisttps
or
jmp
leave
mov
sbb
and
adc
out
loop
or
adc
push
pushl
cmc
lock
push
call
mov
xchg
push
adc
dec
xchg
shrb
mov
inc
aaa
sbb
or
aas
incb
lock
daa
mov
imul
incl
enter
push
adc
call
xor
mov
add
sub
decl
or
ljmp
outsb
dec
imul
xchg
mov
inc
call
popf
mov
adc
lret
scas
add
or
call
incb
fdivrl
aas
pop
loop
pop
jmp
mov
xor
mov
or
mov
lahf
add
clc
mov
mov
sub
movsl
inc
push
add
inc
and
out
shr
mov
outsb
push
movsl
jbe
test
xor
inc
in
fucompp
jb
cli
mov
call
adc
and
pop
jmp
xchg
mov
mov
cs
or
xchg
mov
arpl
or
push
outsl
es
jmp
add
add
xchg
in
inc
ljmp
cmp
incl
rolb
cltd
adc
inc
pushf
and
roll
mov
or
arpl
dec
jg
and
sub
push
sbb
dec
cmpxchg
adc
xchg
mov
push
mov
out
cmp
and
cmpsb
xor
outsb
xor
adc
jecxz
push
and
cs
push
test
call
daa
push
js
sbbl
sub
cwtl
xor
minps
incl
outsb
pop
aam
mov
les
je
sbb
and
adc
cmp
loop
loop
push
add
pop
mov
pop
and
daa
aad
cld
sub
bound
mov
push
sbb
and
mov
dec
and
lods
jle
neg
pop
loope
inc
inc
inc
xor
std
shrl
mov
sub
and
pop
ret
dec
add
sub
filds
sub
jg
and
fsubrl
or
fstps
mov
jg
inc
xor
psubd
call
push
add
or
inc
or
ret
je
ftst
pop
add
call
and
xchg
xchg
in
leave
call
mov
dec
adcb
add
nop
jg
cld
cmp
inc
test
dec
adc
lock
mov
xor
mov
dec
sbb
and
pop
iret
jmp
xchg
loop
lods
ds
pushl
add
loope
and
add
lds
jb
inc
add
fldt
xchg
popa
loop
dec
add
dec
xchg
pop
aas
adc
inc
jnp
mov
pop
or
mulb
jp
gs
xor
xchg
out
nop
lahf
jg
popa
mov
inc
std
movsl
es
lcall
push
std
and
inc
daa
stc
and
rorb
imul
adc
mov
call
bnd
unpckhps
inc
or
out
stos
icebp
std
or
rcr
cmp
loop
add
iret
das
jg
xor
mov
daa
cli
dec
sub
pop
mov
sbb
movsb
add
shll
dec
pop
add
and
xchg
mov
cmp
cli
test
jg
pop
cmp
lds
sarb
jecxz
dec
call
sti
lea
sub
sbb
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
les
jb
loop
xchg
xlat
and
dec
jg
ljmp
das
hlt
and
sbb
sub
enter
add
pop
sbb
bound
add
sbb
cmc
lahf
add
jmp
call
sbb
mov
jmp
out
dec
in
dec
jmp
add
rcll
cmp
inc
loopne
dec
jbe
pop
sub
inc
adc
clc
jecxz
add
repz
insl
add
jg
mov
icebp
mov
sub
mov
insb
mov
in
pop
ds
xor
add
pop
cli
decl
push
push
stc
arpl
hlt
loopne
aas
dec
mov
xor
call
stos
rolb
mov
xor
incl
or
cld
mov
mov
pop
movsl
repnz
mov
dec
sub
cmp
movsl
mov
and
cmp
xchg
imul
std
cmp
mov
jecxz
xchg
pop
pushl
sub
js
shlb
lret
subl
fsubrl
cs
sbb
add
dec
push
mov
pcmpeqb
and
out
lahf
inc
jle
notb
pop
push
xor
test
ret
rorb
push
stos
mov
filds
test
cli
pushl
sbb
mov
je
jmp
push
das
jle
add
andb
jns
push
imul
outsl
sahf
cli
into
in
ljmp
lea
add
push
mov
movsl
pop
incl
or
cli
and
das
pop
aas
mov
aaa
fs
sub
aas
imul
call
cmp
inc
xchg
dec
enter
clc
xor
push
mov
shlb
jmp
loope
cld
lods
and
push
push
sti
push
and
imul
mov
sub
jg
dec
sub
xlat
incl
adc
iret
subb
push
push
add
icebp
adc
fimuls
cmp
xor
dec
mov
shl
sub
jne
cld
mov
cwtl
or
jmp
jecxz
add
mov
addb
cld
sub
jg
andl
inc
cmp
xchg
int3
pop
mov
in
incl
xor
lea
xchg
cli
inc
pushl
pmaxsw
cmpsb
in
cmpsl
lock
das
adc
in
mov
int
cmpsb
push
loop
int3
stc
sub
adc
stos
push
jp
push
ret
in
cmp
pushf
incl
jns
xchg
fsts
jg
lds
test
mov
jno
call
inc
test
mov
sub
test
ret
inc
cmp
daa
adc
scas
inc
push
incl
loop
adc
cmc
test
hlt
pop
or
inc
incl
jp
push
pop
sub
adc
fucomip
mov
or
es
xchg
mov
adcl
xor
cli
sbb
jg
pop
in
add
dec
adc
mov
mov
mov
push
jns
stos
pmaddwd
shl
xor
lret
sbb
dec
outsl
pop
dec
adc
popf
or
fwait
rorl
aas
call
inc
push
sbb
jo
push
aas
mov
jg
les
pushf
ret
jg
push
ss
jle
das
mov
addl
cmp
jge
xchg
scas
dec
mov
xchg
incl
inc
sar
in
jne
jmp
jecxz
adc
js
adc
push
in
int3
pop
scas
add
cmp
roll
inc
rcll
pop
call
xchg
push
lret
in
std
add
lea
mov
inc
loop
push
dec
jo
mov
add
pop
inc
mov
dec
into
inc
das
dec
add
call
and
xor
or
pop
repnz
lock
outsl
push
out
call
pop
sti
add
jne
cli
rolb
xlat
sub
aaa
or
cld
pop
leave
xchg
add
outsb
inc
incl
push
out
add
hlt
mov
jmp
out
outsl
cmp
dec
or
outsl
add
lods
test
or
movsl
incb
repz
imul
push
into
push
cmp
testl
lcall
xor
push
mov
adc
mov
jecxz
push
incl
mov
repnz
cli
cmp
push
and
sbb
push
mov
icebp
mov
dec
into
add
cld
inc
sbb
and
cld
enter
sub
pop
dec
fistpl
push
cmp
stc
cmp
mov
inc
pop
jmp
enter
xchg
decl
push
push
inc
push
add
lods
push
clc
jb
pop
or
cmp
enter
sbb
clc
push
hlt
push
mov
cs
xchg
ret
fs
hlt
psrad
std
dec
mov
dec
test
pop
jo
mov
fldl
call
pop
mov
cmp
and
push
and
pop
pusha
dec
mov
sbb
stc
jge
mov
out
scas
aam
scas
dec
push
or
jg
cwtl
xor
mov
adc
pop
loop
inc
mov
pushl
and
xor
test
mov
scas
fbld
ljmp
or
movsb
or
xlat
outsl
incl
push
pop
sbb
gs
lds
inc
lods
or
or
aad
imul
test
int
sub
pop
sub
in
nop
mov
mov
and
rolb
lret
jl
xor
xchg
call
inc
bound
sbb
inc
ret
scas
std
inc
push
and
pop
je
pop
pop
fdivr
jmp
mov
add
mov
mov
daa
shll
cmpl
arpl
outsb
daa
xor
in
jp
loopne
xor
outsl
loop,pt
mov
add
jg
mov
sbb
sar
add
sub
call
pop
mov
push
push
push
cmc
jbe
or
hlt
xchg
lcall
adc
cmp
adc
dec
and
inc
test
xchg
icebp
and
cmpsl
add
adc
sub
and
mov
adc
sbb
push
cs
out
ret
icebp
inc
shlb
imul
jnp
out
or
pop
pop
push
or
sub
sbb
dec
call
lcall
enter
decl
add
call
or
or
and
fwait
jg
rcr
ljmp
out
inc
cmp
call
cld
loop
add
hlt
adc
push
das
outsl
repnz
jecxz
adc
push
jns
clc
push
add
lock
push
cmp
dec
sub
and
cs
mov
rorb
loop
fdivl
adc
inc
pop
cld
or
sbb
ret
mov
mov
pop
push
scas
std
inc
pop
sub
jmp
or
call
nop
jle
dec
mov
inc
ret
sbb
pop
cmp
or
sub
hlt
jle
or
outsl
adc
or
or
xchg
pop
shrb
jmp
cltd
jg
jno
inc
enter
std
sbb
adc
and
sbb
incl
fildl
push
lcall
add
add
ffree
sbb
inc
faddl
adc
aam
aad
mov
xchg
jno
rclb
push
inc
js
mov
call
jo
add
adc
lock
push
popa
xor
shlb
rcll
repnz
in
call
add
shr
xorb
jo
cld
sarl
stos
jg
add
aas
cmpb
inc
cmp
cli
cmp
cmp
add
sar
addl
sub
es
xchg
push
jmp
jnp
pop
sub
lock
cmpsl
jg
in
popa
out
loopne
clc
inc
int
sub
in
inc
add
jmp
loopne
addl
lock
jmp
shlb
and
mov
mov
arpl
stos
mov
bound
hlt
or
add
andb
movsb
sbb
shrl
inc
stc
shrb
nopl
scas
pop
stos
fdivp
push
imul
iret
imul
test
push
cmp
add
nop
call
mov
sbb
jg
mov
adc
inc
inc
fidivs
inc
addr16
loopne
into
mov
mov
mov
pushl
and
mov
pop
jno
jo
mov
push
rol
nop
idiv
inc
push
or
xchg
rclb
incl
push
xchg
ja
xchg
rcll
mov
xchg
xorl
and
pop
sbb
xchg
cwtl
pop
sar
sbbl
daa
fwait
inc
pop
mov
pop
sbbb
std
decl
fmuls
into
mov
orl
jmp
pop
dec
add
lea
incl
mov
or
xchg
inc
cld
addb
xchg
sbb
pusha
cld
push
out
pushf
or
ret
push
int
mov
in
pushf
filds
pushl
bound
popf
call
mov
mov
cmpsb
mov
sbb
mov
or
cpuid
fsub
pop
add
fidivrs
mov
filds
dec
pop
mov
and
inc
fs
or
and
sub
filds
cmp
mov
cmpsl
out
mov
push
arpl
movl
lea
incl
push
rcll
test
xchg
in
pop
scas
insb
decl
xchg
pop
incl
and
fistps
xchg
pop
xchg
push
iret
incl
xor
push
push
add
decb
shr
data16
mov
pop
sar
scas
fsubrs
push
cld
mov
das
mov
jb
decb
lods
xor
ret
dec
ljmp
repz
add
jne
imul
leave
std
loope
add
call
push
ljmp
ds
ljmp
add
cmp
shl
ljmp
hlt
aaa
in
cmp
cmc
cld
movsb
and
adc
out
xor
sar
ss
add
jo
verw
stc
inc
inc
jmp
andl
lcall
lea
xchg
or
inc
xchg
sbb
push
sar
test
jg
cwtl
add
decl
mov
push
pop
add
addb
xchg
push
xchg
andb
push
mov
xchg
outsb
jbe
andb
frstor
add
sbb
call
jecxz
push
nop
addr16
aaa
sbb
dec
hlt
add
xor
shrb
fsts
cmp
adc
push
test
sub
pop
jg
aaa
je
mov
ljmp
add
or
les
mov
xchg
leave
inc
decb
repz
lods
loop
and
fidivrs
jmp
add
pop
xchg
push
std
add
ret
jecxz
mov
icebp
push
stos
lods
sti
jg
call
call
or
cmp
jno
dec
repz
movsl
popf
mov
into
fists
adc
or
jg
sub
aad
icebp
dec
xchg
push
fadd
addr16
fdivp
lock
push
stos
fsts
out
pop
dec
add
outsl
and
sub
fdivrs
ljmp
push
je
sbb
push
adc
mov
push
out
pushl
dec
aas
test
and
les
adc
jo
fwait
in
xor
adcl
cmp
incl
daa
dec
repnz
subl
dec
fiadds
mov
xor
cmpsb
push
pop
ret
pushl
xchg
pop
push
sti
lods
mov
push
pushl
enter
xor
stc
ret
sub
adc
lcall
push
and
cmp
scas
call
add
push
movsl
cmc
sbb
cmp
lods
call
and
das
adc
pop
dec
mov
jmp
inc
out
xchg
incl
int
jb
xor
or
mov
add
push
repnz
clc
repz
and
pop
push
leave
lock
arpl
or
xchg
pop
pop
in
mov
and
adc
jl
es
out
push
inc
push
rclb
dec
push
xchg
cmp
mov
inc
push
and
fcoml
lods
sarb
dec
dec
cwtl
mov
adcb
repz
and
inc
or
dec
pop
sbb
mov
adc
jecxz
and
orl
and
cmp
stos
mov
or
cld
pop
xor
pop
pop
lcall
nop
push
adc
sbb
mov
fnstenv
andb
jp
into
arpl
pop
cmp
xlat
sar
sub
xchg
mov
sbb
test
push
or
xor
pushf
jmp
jg
sbb
jns
stc
inc
add
out
push
loopne
xchg
adc
jmp
dec
sbb
test
loope
andb
decl
repz
push
lret
jmp
sub
xor
pop
jmp
push
mov
cld
les
adc
push
cmp
pop
push
das
mov
cmp
push
or
push
or
mov
push
cmp
dec
inc
push
je
decl
or
and
leave
daa
lock
pop
add
jmp
jo
and
or
dec
mov
repnz
or
cmp
shr
insb
lcall
xor
push
lcall
xor
dec
jmp
mov
nop
jg
aad
sbb
mov
repnz
pop
mov
inc
dec
jmp
xchg
mov
cmpsb
push
pop
push
loopne
and
pop
push
jmp
jg
add
jg
popa
ret
jo
pop
test
jnp
vunpckhps
andb
xchg
mov
clc
pop
lods
jne
pop
and
scas
xor
push
and
pop
aas
fists
xchg
push
sbb
js
xor
mov
push
inc
cmp
lea
faddl
mov
inc
add
loopne
sub
mov
mov
mov
xor
pop
pusha
dec
test
clc
loop
lds
sub
into
aad
mov
cmpsl
add
inc
and
movsb
jne
mov
xchg
insl
lahf
aas
mov
mov
add
add
sbb
test
sbb
daa
incl
or
xchg
bound
insb
add
loopne
cmp
sbb
mov
jp
pop
sub
call
ljmp
out
push
or
and
lock
lods
xchg
clc
xchg
dec
incb
inc
jecxz
bsr
mov
push
adcb
decl
sarb
dec
aad
jb
push
cs
adc
inc
loopne
mov
pushl
ficomps
mov
add
xchg
jl
and
add
arpl
xorps
xchg
xor
pop
jo
lock
jmp
repz
in
jnp
cmp
add
pop
jo
adc
repnz
ljmp
jne
add
xlat
jmp
xchg
aaa
sub
add
mov
and
call
add
sbb
sbb
add
pop
or
xor
pop
xchg
in
add
sahf
mov
sub
adc
movsb
es
das
aam
movsb
mov
or
dec
add
jns
inc
lcall
add
cmpsb
shll
inc
mov
lcall
jae
sub
sti
push
cld
ljmp
inc
arpl
fdivrp
add
sub
es
push
pop
add
or
les
call
pop
aam
decl
jecxz
les
aas
push
decl
les
sbb
cmp
add
sub
lock
lret
dec
shrb
mov
stos
shl
std
icebp
cmpb
mov
sarb
adc
fstl
lcall
data16
add
sti
ljmp
aaa
xor
cmp
and
sbb
sub
cld
outsl
adc
adc
mov
in
push
fcmovnu
sub
adc
dec
xor
repz
aaa
inc
pop
pop
clc
mov
sub
mov
sbb
movsl
out
mov
mul
ret
sbb
add
repnz
add
rcll
push
sbb
shlb
stc
sbb
ja
out
mov
mov
push
inc
cmp
pop
gs
decl
aad
and
sti
lock
dec
fnstsw
outsl
scas
add
dec
imul
cwtl
cmp
add
pop
dec
xor
js
or
adc
and
decl
mov
xchg
insb
sbb
pop
nop
add
mov
jne
jnp
jecxz
lret
pop
mov
clc
mov
fucomi
mov
in
les
imul
ljmp
cmp
sub
pop
in
loop
add
mov
clc
je
scas
pop
mov
dec
adc
scas
dec
add
lcall
into
add
sub
ror
mov
cmc
movsl
pop
xchg
in
das
xchg
mov
adc
cli
outsb
stc
in
push
adc
mov
cmp
jp
movsl
or
clc
or
sbb
pop
aaa
sub
incl
fiadds
mov
jl
add
and
sbb
fidivrl
in
xchg
out
test
xor
push
mov
push
out
and
add
cld
push
push
pop
addb
pushf
and
mov
shlb
cmp
dec
add
dec
incl
pusha
jl
add
gs
adc
mov
movsl
pop
jmp
daa
bound
incl
and
or
mov
add
scas
add
mov
add
cmc
push
jne
ljmp
test
fwait
mov
rsm
push
loopne
div
xchg
xor
ljmp
pop
rorl
call
loop
mov
adc
clc
jnp
jecxz
sbbl
call
dec
push
xchg
and
scas
and
sbb
js
mov
dec
outsl
mov
aam
loopne
ror
and
fnstsw
call
pusha
push
sbb
xor
icebp
add
data16
push
jmp
inc
dec
jne
imul
addb
test
in
cmp
sub
fists
das
cli
mov
dec
lcall
or
xchg
negb
add
inc
sbb
mov
clc
jge
in
adc
stos
addb
sbb
cmpsl
jecxz
lcall
add
decl
mov
cmpsb
in
jne
decl
mov
inc
movsl
decl
loopne
sbb
add
shrl
xor
pop
sbb
adc
repz
mov
imul
mov
incl
or
sbbb
cmp
dec
pop
int
call
add
cmp
jge
push
lret
pop
stos
sbb
decl
xchg
in
mul
sbb
add
mov
loop
jo
sub
sbb
mov
stc
out
push
xor
xor
xchg
hlt
add
cmp
jge
pop
and
mov
bound
je
xchg
js
movsb
je
jle
or
mov
xchg
inc
mov
sub
cwtl
lock
or
and
testl
lret
fcomip
push
pop
call
jmp
and
pop
sbbb
bound
ljmp
add
xchg
mov
xchg
xor
mov
pop
jns
jo
dec
xor
sub
push
adc
decl
pop
or
cld
jo
shlb
and
sbb
and
ljmp
test
pop
mov
cmpb
dec
pop
popf
xchg
inc
jb
imul
cmpsb
or
mov
dec
les
and
dec
push
add
dec
sbb
pusha
sub
xchg
fistps
xorb
stos
xor
sar
jo
mov
lods
test
ljmp
sbbb
cmp
fidivrl
movsl
mov
mov
and
pop
xor
cwtl
adcl
jle
insb
mov
push
cmp
push
cmc
ficoml
bound
fsts
mov
fisttps
inc
cmp
mov
call
inc
sub
btc
dec
mov
popa
mov
aas
jg
adc
inc
mov
incl
lea
test
mov
jnp
push
sar
add
out
aaa
mov
cld
adc
cmp
std
cmc
adcb
push
push
pop
sbb
adc
jns
pop
inc
jecxz
icebp
test
std
aad
outsl
movsb
lcall
cmp
add
mov
idivb
pop
add
jg
lahf
xchg
dec
aaa
sbb
data16
cltd
es
mov
mov
sti
add
push
mov
pop
out
pop
out
enter
pop
stos
mov
cmp
and
xchg
mov
mov
inc
outsl
cltd
or
and
dec
stos
or
add
lahf
sbb
dec
jl
adc
dec
mov
xchg
pusha
rclb
rcr
dec
mov
add
std
add
cmp
sbb
mov
adc
jmp
xorb
mov
add
les
je
lcall
jbe
or
cmc
cmp
xor
das
push
inc
add
or
pushl
push
and
mov
test
shr
xor
daa
or
call
or
jmp
pop
aas
lods
sbb
push
inc
in
pop
xor
loopne
adc
ljmp
dec
and
mov
popa
sbb
push
sbb
cwtl
loope
push
sub
mov
pop
jl
push
call
mov
out
rcrl
pusha
jmp
xchg
into
ljmp
push
test
lahf
hlt
pop
test
call
jge,pn
int
mov
aas
adc
es
jg
dec
push
dec
fsubrl
scas
xchg
adc
and
test
add
pop
lcall
dec
frstor
shlb
cs
push
arpl
pushf
call
xor
jb
push
cmp
jbe
mov
jg
dec
push
inc
push
pusha
les
mov
outsl
ljmp
je
mov
fbstp
push
push
cmp
pushl
lods
jl
dec
inc
orb
fistpll
stos
pop
adc
pop
test
outsl
ljmp
ljmp
pop
pushf
fisubrl
jbe
push
pop
jmp
call
in
scas
stc
lock
add
mov
clc
inc
movsb
incl
mov
mov
inc
inc
clc
test
mov
cmp
mov
in
jns
outsb
loope
and
pop
leave
clc
cmc
mov
mov
mov
cmc
lahf
std
cli
insl
sbbb
inc
fbld
cmp
lcall
movsb
pop
jmp
data16
hlt
call
cli
add
test
xchg
fidivrs
pop
incb
sbb
adc
add
inc
push
sub
fistpll
push
or
fcomps
push
adc
rorb
ud0
mov
es
pushl
sbb
adc
sbb
adcb
rorl
cld
rorl
out
mov
dec
outsl
push
jmp
fsubrl
push
mov
add
add
cmp
dec
pop
shl
add
mov
ret
ljmp
xchg
mov
lock
dec
mov
imul
nop
ds
push
incl
mov
pop
push
lcall
aad
cmovp
popa
fimuls
hlt
push
and
das
mov
cli
xor
andl
xlat
cli
movsb
mov
int3
or
jns
xor
arpl
insb
inc
jb
cmp
jne
mov
dec
jb
adc
call
lret
cld
cmp
pop
out
sub
xor
loop
mov
outsl
xchg
out
popf
sbb
movb
icebp
pop
mov
call
fiaddl
pop
or
cmp
js
or
mov
xor
dec
fistps
adc
ds
int3
incb
iret
dec
dec
cmp
les
filds
ljmp
cwtl
in
add
push
shlb
sub
cs
inc
in
aas
loopne
jecxz
dec
icebp
push
jle
adc
dec
orb
stc
js
or
scas
jne
or
add
push
mov
xor
pop
in
inc
loopne
repz
fistpll
mov
xchg
js
das
outsl
inc
jns
lcall
stc
pop
mov
and
mov
cmp
push
pusha
call
aam
inc
or
mov
dec
ret
aas
rclb
dec
clc
pop
adc
cmp
pop
xchg
out
add
mov
pop
mov
sete
inc
insb
mov
call
pop
je
pusha
shll
add
cmc
jecxz
jo
mov
sbb
inc
pop
pop
fnstsw
or
stos
add
add
mov
loopne
dec
or
push
add
mov
insl
adc
mov
add
add
call
xchg
xchg
gs
push
and
jmp
sbbl
mov
jo
jp
sarl
mov
pop
call
push
jae
fbstp
fnstsw
and
pusha
add
xchg
popa
push
xor
xor
sar
outsl
xchg
call
cmc
inc
sbb
daa
outsl
in
in
inc
inc
push
jmp
mov
aam
clc
dec
jge
mov
jl
fcoml
xor
cli
xor
xor
xchg
xchg
roll
mov
jl
clc
addr16
ljmp
clc
mov
pop
cwtl
push
jge
mov
mov
push
jmp
sti
add
sbb
xchg
loope
jo
jbe
sub
sbb
loopne
push
ja
or
shl
mov
or
push
fmul
cltd
inc
imul
cwtl
or
mov
mov
xor
sub
push
push
dec
cmpsb
decl
jbe
and
icebp
push
leave
mov
adc
xchg
add
cltd
cmp
adc
jmp
push
insb
pusha
and
incl
clc
cmp
rcr
mov
std
or
inc
divb
adc
pop
test
lods
pop
pusha
incl
enter
inc
add
daa
pop
add
movsb
sub
roll
outsl
adc
xor
repnz
adc
jge
mov
enter
hlt
add
pop
or
les
test
jg
xor
pushl
dec
aad
clc
cwtl
scas
push
mov
xchg
lret
push
add
pushf
cmp
ds
xchg
fnsetpm(287
or
gs
jmp
inc
orl
jg
jne
adc
push
movsl
jg
push
pop
ret
int3
xor
cmp
lock
or
sub
aam
mov
bound
mov
iret
inc
lcall
hlt
repnz
cli
push
sbb
jne
imul
aad
loopne
outsl
xor
or
movsl
add
ljmp
mov
push
mov
aad
mov
mov
lock
jnp
das
xchg
sub
hlt
pop
in
enter
add
incl
xchg
jbe
pushf
jmp
movsb
push
in
mov
data16
push
aam
pop
loop
mov
enter
xchg
or
push
add
mov
push
fdivrl
stos
and
enter
outsl
scas
ret
or
push
fisttps
cld
sarl
add
sub
pushl
or
je
cmpsl
push
addl
popa
add
std
mov
mov
ljmp
cld
push
test
mov
lret
mov
inc
dec
loope
add
xchg
ss
cmp
pop
xor
clc
hlt
sbb
pop
xchg
push
orl
dec
push
subl
in
pop
out
fisubrl
adc
daa
lret
movsl
or
xchg
pop
loopne
inc
test
jne
jmp
push
push
stos
pop
fnstenv
and
ret
mov
shrb
mov
push
adcl
test
jmp
and
test
pop
ljmp
mov
jns
outsl
jo
cmp
subl
data16
sub
mulb
je
push
sar
pusha
pop
jne
dec
inc
out
cld
adc
or
movb
cld
mov
adc
or
std
inc
in
scas
loopne
les
stos
or
push
mov
das
outsb
loope
loopne
xchg
jg
leave
imul
sbb
lock
sub
rcrb
aaa
sbb
loop
add
lods
pop
vxorps
add
pop
out
mov
rcll
lret
les
outsl
call
adc
jp
push
mov
jbe
mov
pop
mov
add
xchg
subl
lcall
sbb
push
ret
pop
mov
sub
or
xor
bound
or
incl
movsb
shl
mov
push
ljmp
and
test
mov
push
jno
add
lds
cld
or
xchg
lock
nop
mov
inc
push
pop
cwtl
ljmp
adc
addr16
fstps
outsl
fs
push
ljmp
push
lahf
lods
mov
sub
aad
mov
xor
cli
cmpl
push
int
adc
call
pop
pop
stos
cmc
fisubl
mov
cmovb
leave
add
xor
jecxz
and
sbb
clc
out
pop
add
imul
cld
ja
aad
in
pop
notl
xchg
and
push
push
ud0
and
fildl
sahf
cmp
or
or
int
lock
adc
xor
ret
or
or
ss
pop
sbb
loop
xchg
mov
dec
mov
push
add
sbb
popf
push
ret
add
xchg
popa
movsl
lcall
inc
cltd
jo
mov
mov
or
mov
jmp
data16
mov
push
cmp
hlt
xchg
ret
pop
inc
mov
and
jmp
mov
inc
jge
pushf
fs
dec
mov
std
loope
es
push
and
push
test
mov
and
pop
dec
inc
push
icebp
fsubrl
mov
sar
hlt
stos
mov
mov
test
hlt
popa
mov
hlt
sub
and
or
mov
jno
test
pop
mov
push
imul
lock
stos
mov
lods
rorb
data16
ret
clc
loope
jae
rcl
adc
call
push
pop
jbe
mov
mov
jne
add
jecxz
ss
adcb
push
or
fsubs
add
and
jp
mov
lods
hlt
je
bound
das
sahf
ror
cli
fdivrs
repnz
fdivrs
pop
andl
cwtl
mov
in
mov
sub
mov
and
aam
rorb
hlt
je
mov
mov
pop
mov
movsl
push
clc
rol
push
aaa
xor
mov
shrb
cmp
mov
adc
add
pop
stos
xchg
mov
or
mov
mov
pop
or
ds
aad
mov
mov
sub
sub
les
jne
push
jae
push
add
add
mov
push
push
pop
test
push
loopew
mov
mov
and
das
das
pop
mov
jbe
adc
or
jg
push
arpl
add
stos
std
sub
std
test
xabort
pop
incb
push
inc
js
add
ljmp
pop
sub
movsl
jns
jmp
fadds
aaa
or
and
inc
add
cmpsb
or
dec
lcall
fsts
std
and
loope
test
xchg
orb
jl
adc
clc
lods
dec
dec
pushf
mov
pop
pop
cmpsb
jmp
mov
mov
repnz
nop
inc
adcl
jb
pushl
fwait
xlat
repnz
jl
push
icebp
out
push
das
cmpsb
xchg
jge
push
cmp
pop
xchg
clc
inc
inc
push
add
mov
jb
add
push
adc
cmpsl
clc
ud0
or
outsb
xor
incl
push
hlt
and
ja
test
lock
push
das
xor
mov
fildll
xor
jae
mov
mov
jo
stos
sub
pop
ss
icebp
inc
add
lods
outsl
pop
add
clc
cltd
mov
xchg
ja
pushf
jmp
je
stos
outsl
int3
mov
cltd
shrb
hlt
lcall
xor
pop
je
mov
cs
mov
idivb
stos
xchg
les
lock
push
mov
ret
ljmp
jge
adc
imul
hlt
or
adc
lahf
cmc
mov
fbld
js
mov
jo
sbb
stos
lds
outsl
in
out
push
ret
lock
popf
and
jmp
sub
aad
and
mov
mov
movsb
add
in
push
and
aam
std
imul
pop
stos
loope
cmp
or
cmp
ds
push
lcall
add
push
call
pop
jl
mov
add
and
adc
in
je
cld
inc
or
dec
incl
adc
lds
jno
divb
call
les
repz
push
incl
push
stos
and
lahf
jp
stos
mov
and
pop
pop
stos
mov
repz
jmp
push
add
imul
jnp
xor
daa
dec
or
cmp
outsl
mov
pop
xchg
test
mov
call
sbbb
js
sub
adc
repnz
mov
std
fildll
pop
ficompl
outsb
add
or
mov
aam
add
jno
inc
xadd
pop
testb
add
jl
mov
int3
add
mov
adc
int3
stos
test
jns
inc
or
push
je
cmp
adc
outsl
in
adc
jmp
adc
jp
nop
xlat
incl
inc
inc
push
xor
push
out
dec
mov
sub
stc
cmp
popa
ljmp
jg
ret
lock
add
loopne
in
decl
insb
dec
cs
out
ret
or
xchg
push
pop
inc
cli
jae
call
stos
pop
and
aaa
and
mov
sub
sbb
outsb
add
jge
fimull
pop
jbe
cmc
jle
mov
mov
adc
mov
mov
and
pop
xchg
xor
stc
jg
div
jnp
dec
or
decl
pop
ljmp
pop
pop
and
jno
pop
hlt
lret
clc
xor
shr
xchg
pop
movsl
cmp
cmp
loopne
sub
mov
aas
sub
outsl
jbe
mov
xchg
shlb
push
fisttpl
push
je
mov
pop
and
ret
sub
bound
adc
jg
pop
lcall
ja
cli
xchg
les
push
cltd
cld
fidivl
cmpsl
insl
add
leave
or
jle
pop
xchg
incl
push
push
jg
cmpsb
dec
test
test
add
xchg
inc
push
and
in
push
or
aam
call
jno
jo
inc
xorb
or
xlat
in
ss
and
cld
sub
insb
and
push
sub
add
test
pop
out
in
movsb
incl
mov
and
pushl
icebp
pusha
test
push
call
push
hlt
cmpsb
rcrb
add
and
and
and
sbb
test
aad
sub
and
pop
mov
cmp
rcrb
mov
subl
in
aam
in
push
mov
pop
andb
cmp
mov
jno
add
call
mov
inc
in
decl
sub
and
adc
jae
mov
imul
adc
mov
repnz
clc
xchg
pop
scas
dec
mov
test
and
or
cmp
add
mov
jb
rcll
dec
sbb
push
and
sbb
test
lret
xchg
cmpsb
imul
or
jns
and
mov
dec
cs
push
lods
hlt
bound
add
sub
xchg
lcall
call
lods
repnz
inc
mov
mov
cmc
clc
and
movl
pop
sub
push
pop
pushl
ds
cmp
jp
xchg
rorl
les
push
inc
or
aaa
fimuls
pop
leave
adc
jno
dec
lahf
jmp
add
outsl
test
mov
mov
loop
das
je
in
jmp
adc
scas
addb
jbe
bound
inc
mov
int3
loope
add
mov
cmp
int3
add
cmp
out
jmp
mov
addr16
add
cmp
mov
pop
or
clc
sbb
test
cmp
xchg
sbb
xchg
sub
push
stos
pop
fcomip
cmp
rolb
sub
hlt
call
cmpsb
cmp
jge
adc
mov
lock
xor
addb
or
sbb
adc
scas
cmp
mov
imul
xor
pop
jmp
dec
or
and
pop
mov
mov
xchg
lock
sbb
cld
mov
test
imul
mov
lea
sbb
hlt
clc
lret
mov
xor
jge
ds
inc
mov
das
leave
std
xor
rcll
iret
and
into
rcr
test
cld
jp
xchg
xor
fsubr
shll
in
pop
pop
mov
add
shr
in
xor
cmp
cmp
call
lcall
ret
jns
ret
adc
fildll
inc
pop
mov
inc
push
scas
shrb
cmp
adc
xchg
mov
xchg
mov
mov
movsb
inc
ja
mov
test
xchg
js,pt
movsl
sbb
xor
ficompl
pop
or
push
pop
cld
add
js
fwait
add
and
inc
fldln2
mov
aam
sub
jns
jae
clc
inc
fstpt
pop
sar
sti
sub
and
rol
sbb
xorl
rcrb
dec
ret
cli
jp
dec
loopne
aaa
add
pop
xchg
fists
lock
outsl
mov
adc
div
lock
or
addr16
jle
std
push
xor
sbb
ljmp
pop
out
push
mov
pushf
andl
cmc
add
aam
inc
push
pop
les
daa
mov
test
jnp
aad
je
into
and
incl
popf
adc
enter
jge
sarb
outsl
push
cmp
and
mov
arpl
cmp
mov
test
ljmp
push
jns
popf
ror
add
mov
outsl
cmp
fs
pushl
scas
adc
aas
mov
test
or
xor
ret
orb
mov
sbb
jae
cmc
movsb
loope
adc
mov
and
lret
sti
push
out
jbe
pop
sub
div
adc
and
int3
xchg
mov
or
incl
mov
cmp
inc
lods
mov
in
push
sar
in
push
mov
or
adc
in
pusha
mov
jne
add
ja
out
and
pop
xchg
pop
or
popa
inc
cmp
dec
xchg
jbe
outsb
addr16
or
dec
hlt
push
pop
inc
je
ljmp
sahf
popf
dec
cmc
fdivrl
imul
and
sub
inc
push
ja
sbb
jge
add
outsb
lock
cld
mov
in
les
inc
inc
mov
aas
jno
cli
push
mov
push
inc
sti
push
and
jns
movsb
das
mov
mov
ja
mov
movsl
in
push
or
adc
daa
test
insl
popa
jb
dec
shll
mov
jl
decw
fmuls
inc
jp
adc
push
mov
adc
cwtl
iret
jg
scas
pushf
jl
jg
outsb
sbb
decl
shll
call
mov
or
push
shrb
xchg
or
imulb
bound
push
lods
ja
add
inc
aam
das
pusha
jb
inc
add
push
mov
jns
inc
je
and
pandn
outsl
xor
mov
icebp
push
pop
jmp
inc
jg
and
push
dec
shlb
movsl
jbe
xchg
cld
roll
jge
and
pushl
pusha
dec
iret
in
mov
dec
mov
xchg
xor
pop
into
adc
dec
inc
addr16
jbe
pop
jmp
sbb
shlb
or
jge
cmp
jp
sbb
lods
pushl
adc
imul
call
jmp
jecxz
enter
imul
movsl
pushl
sbb
insb
loope
mov
dec
jle
jno
popa
imul
rolb
lret
insl
jnp
inc
ret
ret
lods
hlt
adc
or
xor
mov
add
jge
das
push
loopne
sbb
call
mov
orl
les
and
pop
jl
adc
lods
push
xchg
and
cmp
js
adcb
xchg
testb
int3
daa
roll
mov
dec
cli
popa
sub
adcb
lock
dec
or
inc
add
rcll
and
push
mov
js
cwtl
lcall
mov
jo
lahf
adcb
xor
mov
xor
jg
std
shrl
jecxz
test
insb
push
lea
xor
leave
or
pop
lods
out
nop
popf
pop
clc
jnp
stos
mov
jg
mul
cmp
push
incb
pop
xchg
ret
decl
cmpb
mov
das
ret
pushl
and
push
inc
in
scas
imul
jmp
push
jle
pop
stc
pop
mov
dec
jmp
add
push
call
clc
rolb
mov
mov
push
bswap
fnstcw
cli
and
cmp
repnz
mov
pop
hlt
hlt
xor
loopne
in
enter
inc
cmp
sbb
pop
push
decl
mov
psubb
leave
clc
dec
or
adcl
lret
in
mov
or
fcmovb
push
jmp
xor
and
pop
sbb
push
lds
mov
inc
icebp
add
push
outsl
mov
into
xor
cmp
and
lock
adc
mov
inc
sub
xor
push
rolb
and
xor
out
and
inc
pop
mov
fmul
sub
sarl
repz
add
and
sub
jg
push
or
pushl
fs
lock
jmp
add
mov
in
shr
je
sbb
sar
adc
in
sbb
and
fisttpl
aam
enter
inc
xor
cmp
cmp
inc
xor
dec
decl
dec
or
lcall
clc
mov
aam
push
ljmp
jmp
inc
cmp
loopne
mov
xchg
in
inc
xchg
xlat
push
out
movsl
mov
pop
pop
pusha
ljmp
and
push
enter
je
xchg
js
xchg
cli
jl
mov
mov
push
pushf
jecxz,pt
xor
mov
fs
lods
xchg
inc
mov
rcrl
mov
mov
adc
inc
sbb
test
or
add
push
fstl
jecxz
xchg
imul
into
cli
mov
cmpsb
sub
enter
insb
pop
in
lahf
leave
fsubrp
add
mov
lods
and
sbbb
push
ljmp
aad
xor
mov
sbb
add
mov
insl
cli
and
test
enter
mov
or
mov
xchg
iret
pop
add
enter
pop
call
out
fcoms
loopne
loop
nop
cs
stos
and
in
rol
jp
nop
lock
scas
push
popf
cmp
call
jle
push
sar
or
mov
lods
call
sub
test
mov
cld
mov
add
inc
lcall
cld
add
loop
aas
clc
cmp
aam
cmp
movsl
xor
loopne
cmp
sbb
mov
inc
adc
adc
call
roll
cmp
lea
loop
pop
rcrb
test
incl
adc
and
daa
xchg
cmp
jge
sub
or
fistpll
dec
pop
popa
add
xor
pop
imul
or
scas
lret
pop
ljmp
push
or
aaa
or
adc
inc
xchg
inc
popa
sbb
ljmp
xor
lea
pop
sub
xor
lock
pop
xchg
add
out
push
jg
add
cmp
pop
aad
mov
inc
outsl
cmpsb
decl
mov
pop
shrd
mov
pop
fldenv
dec
add
fcoms
jne
pop
roll
in
add
aaa
pop
xchg
cli
sarl
stos
mov
mov
adcl
scas
cmp
shll
sar
sbb
lods
lret
mov
push
nop
and
xor
mov
mov
add
outsl
push
sub
decl
cmp
jne
pop
add
inc
or
jmp
add
iret
cmp
jp
jno
insl
cmpsb
mov
das
adc
push
lcall
push
sub
incl
push
cmp
jb
jle
movsb
cmp
sub
pusha
aam
fnstcw
lods
lret
pop
call
push
mov
jne
ljmp
insl
pop
push
or
shlb
pop
popf
lret
decl
lret
test
mov
shrb
cmpb
aam
pushl
xor
push
lods
aaa
lret
clc
movl
ds
add
loopne,pn
jmp
sbb
or
pop
shlb
std
mov
loope
je
clc
pop
roll
xchg
cmp
js
pop
test
mov
cmp
lcall
jno
or
clc
mov
das
sub
push
add
cmp
mov
repz
pop
jo
cmpsb
or
lods
loope
mov
ret
gs
push
je
push
push
outsb
test
hlt
outsl
jne
das
cmp
jb
xchg
std
or
in
dec
and
push
dec
add
sar
mov
jmp
jae
xchg
ret
mov
cwtl
int
jge
mov
test
aas
rorb
clc
jl
or
and
idiv
es
insb
xor
std
cmp
call
mov
add
xchg
jg
push
push
mov
frstor
add
xlat
xor
clc
es
outsb
xchg
xor
test
mov
push
fcoml
dec
out
dec
xchg
inc
add
call
add
out
nop
mov
push
out
jmp
mov
leave
je
mov
icebp
mov
clc
addl
push
lret
mov
cld
testb
cmpsb
sub
lcall
jmp
ret
add
clc
subl
popa
pop
mull
mov
loopne
dec
clc
int3
jno
or
or
stos
aam
les
rcrb
loop
call
pop
xchg
cmp
lods
pushl
or
adc
xchg
movsl
das
push
pop
push
jo
sub
and
mov
pop
add
sub
dec
push
sbb
push
jo
mov
and
lods
decl
cmp
cmp
jg
bound
dec
adc
cli
imul
add
dec
cmp
jae
nop
lods
add
ret
fldl
les
cmp
pop
leave
mov
shr
add
cmp
es
xlat
lcall
jg
add
xor
std
sub
fdiv
mov
stos
decl
add
jae
add
cmp
in
inc
mov
add
mov
mov
test
xor
add
sahf
xchg
clc
jns
cld
or
pop
rcrb
int3
pop
inc
push
pop
pusha
cli
shll
arpl
push
cmp
and
cli
aaa
inc
mov
xchg
jmp
stc
gs
sarb
rcll
add
sbb
sar
add
mov
sbb
dec
call
es
stc
and
jb
ja
pop
outsb
xchg
fwait
pop
xchg
test
cmpsb
decl
mov
test
inc
std
or
outsl
pop
xchg
add
mov
inc
je
sahf
call
mov
test
lcall
mov
out
xor
lahf
and
push
ljmp
in
movb
decl
sbb
nop
stos
lcall
add
popf
jmp
jno
je
aad
and
call
push
nop
test
mov
movsb
add
cs
das
sub
cmc
sub
push
sbb
gs
pop
ljmp
hlt
cmc
les
mov
rol
cld
getsec
outsb
orb
imul
adc
sbb
test
call
or
add
add
add
push
pop
jbe
pop
cli
std
push
inc
clc
jo
xchg
lcall
pop
lods
inc
mov
or
sbb
jne
nop
imull
fisttpl
add
mov
inc
sbb
and
xor
aaa
pop
cmp
pop
xchg
pushl
pop
shl
mov
mov
sbb
mov
lods
pushf
jp
mov
push
push
mov
xor
cmp
es
or
cmpsb
jmp
pusha
jge
pop
jne
xchg
jle
xor
inc
call
cli
push
mov
add
ss
lea
push
lcall
nop
sbb
bound
jnp
cwtl
mov
outsl
sub
insl
ljmp
xlat
int3
adc
std
mov
dec
adc
popf
std
xchg
add
rorb
test
cmp
rorb
add
lock
rcrb
roll
xor
add
call
jne
inc
push
ret
inc
test
sub
daa
loopne
incl
cli
inc
pop
dec
sub
cld
shlb
lea
leave
insb
pop
cmp
loope
pop
shl
divb
sub
loope
jb
inc
mov
stc
jg
push
pusha
lcall
or
hlt
popa
clc
inc
push
lcall
and
push
dec
decl
jbe
decl
mov
and
cmc
and
lock
jo
mov
aad
push
push
add
jecxz
fistl
xor
adc
outsl
repnz
jne
clc
pop
adc
daa
push
and
push
add
cmpsb
or
decl
cmp
lock
fs
cmp
cld
decl
imul
jle
pop
lahf
into
in
lret
in
jb
jbe
test
cmc
xor
mov
dec
mov
popa
ss
sub
mov
lea
dec
push
adc
movsl
dec
rolb
mov
mov
call
loope
lret
jmp
idivb
pop
xchg
aam
push
jg
dec
sbb
lcall
mov
aas
push
outsl
sbb
pop
pop
jg
adc
sbb
or
add
fs
out
aas
and
nop
jle
mov
gs
sar
xor
dec
fisubl
inc
cmp
jmp
dec
repz
outsl
insb
cltd
cs
sub
rorb
push
dec
jmp
xchg
scas
sub
ja
pop
movsl
scas
nop
outsb
xor
cld
repnz
add
je
or
or
fisttpl
bound
jg
jge
pop
ret
xchg
loop
sub
add
mov
popw
popf
popa
jg
adc
pop
cmp
cmp
cmp
or
jne
lock
xorl
adc
push
clc
lldt
sub
xchg
jecxz
ret
push
clc
xor
outsl
mov
inc
jmp
or
int
mov
cmp
pusha
jmp
and
mov
ds
xchg
sbb
inc
out
and
sub
pop
mov
subb
jg
addl
test
ret
dec
rorb
mov
sub
push
pop
lcall
jbe
decl
mov
mov
pop
or
std
pop
jp
loopne
das
push
pop
dec
in
inc
xchg
leave
lcall
jl
inc
cli
jne
pop
dec
mov
sbb
mov
pop
addb
cmp
call
dec
cli
cltd
icebp
inc
xor
test
mov
scas
rcll
inc
andl
pushf
jg
aas
sbb
push
jmp
notb
add
jo
dec
call
fbld
push
sub
loopne
jne
push
das
iret
lds
ljmp
cmp
mov
out
scas
xchg
jg
push
add
incb
xchg
xor
xchg
push
call
idivl
mov
shl
add
pop
js
mov
imul
add
push
add
fstpl
das
std
sbb
jne
les
sbb
gs
dec
pop
sub
pop
adc
mov
ret
mov
imull
mov
push
lahf
pop
adc
push
das
jmp
xchg
sbb
mov
pop
sbb
loopne
ljmp
dec
jmp
mov
add
push
out
pusha
jno
shll
mov
loope
shll
imul
adcl
inc
and
lcall
sub
mov
std
shlb
lea
fistps
fadds
sub
dec
out
xlat
cli
test
loopne
xor
xchg
pop
jne
sarb
or
imul
sub
sbb
ss
aas
mov
xor
sbb
pop
pop
in
out
pop
call
cs
lods
pop
dec
jl
push
mov
push
dec
ret
sbb
les
push
out
dec
cmp
imul
cmovb
mov
movsb
test
mov
add
fistl
mov
gs
push
jecxz
add
adc
jne
adc
outsl
mov
repnz
xchg
sarb
sub
test
add
sar
ljmp
bnd
jg
sub
sbb
sbb
mov
call
lock
cmc
push
or
enter
mov
jo
cmpb
mov
test
push
cmc
mov
enter
mov
xor
and
mov
jae
mov
fsubr
imul
out
jb
test
sbb
add
adc
pop
inc
testb
fsubp
or
add
jle
pop
jbe
pop
jecxz
int3
rorb
pop
adc
in
add
repz
ret
xchg
jmp
push
pop
jge
sti
pop
arpl
cmp
add
push
mov
or
cmpb
int
push
dec
in
jmp
jns
lock
or
cmc
jle
icebp
jne
sbb
push
pop
fs
sbbb
or
xor
clc
por
mov
push
mov
mov
cld
push
mov
outsl
mov
stc
sub
cmp
sub
mov
insl
xor
loop
addb
fidivrs
add
adc
mov
xchg
jmp
inc
std
mov
push
dec
pop
push
adc
sbb
idiv
pop
and
movl
add
ljmp
test
xchg
jmp
sbb
mov
mov
xchg
ret
jno
ret
je
add
rcll
int3
jmp
dec
adc
adcl
inc
jne
fadd
shrl
lock
cmp
movsl
lock
push
pop
inc
xor
lahf
adc
inc
fldl
mov
mov
loop
clc
mov
pop
ret
repnz
test
mov
js
push
and
jmp
pop
mov
ljmp
jl
test
mov
int
int
mov
mov
jmp
es
dec
sti
add
addr16
movsb
rorb
leave
sbb
sub
lcall
sbb
and
push
push
mov
add
or
xor
jp
mov
sbb
rcr
scas
int
push
incl
into
ljmp
jbe
mov
aad
mov
repz
sub
xor
stos
sbb
inc
scas
dec
lods
add
js
mov
loopne
fadds
es
xchg
dec
xor
or
cmpsl
lahf
sbbb
fadds
adc
je
and
cmp
jmp
in
jg
jp
aaa
jbe
ljmp
and
stc
xchg
sub
mov
or
rclb
xor
movsb
lock
add
pop
and
sarl
add
xorb
or
pushl
ret
hlt
xchg
add
movsb
in
pop
jle
cli
hlt
add
call
xor
into
aad
sub
fcmovnb
aaa
inc
adc
xchg
jg
jmp
pushl
stos
or
incl
fwait
or
push
xchg
test
testb
dec
dec
push
jae
mov
push
loopne
in
mov
jg
jbe
and
loop
test
inc
test
mov
fsubs
repnz
dec
xchg
jno
mov
lahf
jle
nop
mov
jb
roll
add
xor
add
add
mov
inc
push
hlt
xchg
push
ret
or
xchg
sub
sub
lds
jmp
mov
shlb
or
lods
repnz
rol
mov
push
mov
orb
int
and
cmp
xchg
push
cvtpi2ps
xchg
andb
ja
sbb
inc
inc
sub
sar
add
cmpl
subb
dec
jg
test
popf
mov
leave
out
mov
lea
cwtl
fildl
inc
movsl
push
lahf
das
xchg
xor
daa
roll
push
xor
inc
incl
leave
xchg
inc
outsb
sub
pushl
add
movsl
or
sub
sarl
mov
mov
inc
cmpb
mov
scas
pand
dec
stos
movsb
mov
mov
aam
outsl
lahf
out
xchg
or
jo
adc
inc
fdivl
aas
lds
mov
movsb
je
jg
jo
fsubr
pop
repnz
adc
shrb
and
pop
addr16
stos
les
call
lods
add
cmovns
icebp
inc
pop
pop
sbb
adc
in
jg
cmp
or
xorl
int3
cmpsb
adc
je
lods
cmp
fadds
fsubrl
xchg
ficoms
mov
rcrb
sbb
test
add
cmp
decl
push
loope
decl
addl
sti
into
es
in
gs
pushf
shrb
xor
mov
and
insb
add
xchg
push
fisttps
ds
jne
sub
and
push
cld
and
test
loope
mov
jl
pop
xadd
mov
mov
inc
add
rcl
mov
mov
js
std
push
adc
rcrl
repz
jmp
or
cmpsl
scas
sub
add
aad
jle
mov
loopne
out
popf
mov
jmp
mov
jae
iret
push
jmp
arpl
gs
hlt
adc
cmp
sarb
cs
mov
adc
jns
cld
or
pushf
cwtl
hlt
add
sarb
popf
pushl
repz
mov
sub
dec
mov
popa
scas
inc
lods
std
and
push
lret
call
xorl
cwtl
pushl
inc
mov
rcrb
push
adc
add
add
push
dec
int3
incl
aad
inc
xchg
shr
sahf
loop
pop
test
fistps
mov
mov
adc
pop
pop
or
aaa
mov
jmp
push
cmp
inc
mov
rorb
mov
add
cmp
xor
sbb
sete
daa
out
loopne
mov
ja
shlb
sub
das
inc
sub
or
mov
add
push
mov
sub
inc
sub
pusha
incl
pandn
rolb
inc
call
fs
fs
adc
and
cmp
out
sbb
lock
mov
daa
pop
xchg
decl
dec
rclb
add
out
cmp
shrb
mov
arpl
decl
add
jo
loope
pop
and
jg
sub
dec
ret
and
mov
mov
pop
push
add
jne
cmp
call
std
dec
test
sbb
jno
or
std
or
in
dec
lods
mov
in
hlt
cld
test
incl
add
test
mov
mov
cmp
movsb
lret
call
adc
mov
outsl
loopne
rcrb
push
jl
fdivs
into
and
and
or
or
dec
inc
decl
in
ficoml
add
pop
and
and
movsb
jl
dec
inc
adc
push
mov
in
stos
clc
xchg
loope
jge
pop
jecxz
pop
dec
loopne
cwtl
mov
add
lcall
out
testl
je
lock
lods
cli
jge,pt
fwait
adc
icebp
push
mov
jmp
add
pop
ljmp
incl
add
dec
sub
dec
jmp
enter
pusha
shll
and
insb
cltd
outsl
sub
test
mov
dec
fcom
cwtl
shll
orb
push
daa
add
jmp
jbe
mov
mov
cmc
call
xchg
mov
push
inc
imul
xchg
subb
es
fs
sub
cld
mov
call
les
clc
add
push
clc
outsb
outsl
fists
or
dec
scas
fwait
lds
xor
sar
cltd
and
mov
cli
push
add
xor
jmp
add
add
xchg
jb
fildll
jnp
jmp
pop
push
xchg
add
ret
mov
inc
inc
sub
sbb
pop
cwtl
add
fsubrp
dec
fdivp
mov
or
call
dec
stos
xchg
decl
jecxz
pop
aaa
mov
xchg
cld
enter
dec
stos
das
jb
jnp
hlt
lret
pop
push
stos
out
andb
mov
mov
mov
cmp
mov
outsb
ljmp
popa
and
push
mov
adc
repz
xchg
rclb
lds
iret
das
push
lret
add
call
adc
push
call
sbb
and
xchg
sbb
adc
call
das
push
in
mov
out
jg
add
or
xor
call
cs
and
cwtl
jg
cmp
fisttpll
lods
adc
pop
js
mov
adc
mov
out
cmc
aaa
cmp
inc
popa
jae
gs
outsl
dec
mov
cli
je
and
das
mov
push
inc
mov
arpl
shlb
decb
popa
mov
or
jp
push
adcb
jns
aaa
push
sbb
jae
jg
lock
adc
sub
iret
call
ds
leave
add
cmp
movsl
addb
cmp
sahf
in
adc
insb
dec
loopne
lret
cmpsb
mov
sub
sub
cmp
add
push
mov
adc
mov
mov
pop
lods
cmp
xchg
les
daa
incl
inc
mov
sahf
call
test
lods
int
sbb
incl
jo
mov
fwait
fs
andb
add
scas
mov
xchg
push
dec
xchg
in
cmc
mov
pushf
or
call
fisttpl
call
xchg
or
stos
out
jnp
add
stos
movsb
aam
jecxz
xor
subb
clc
pushf
out
shll
enter
fsubrl
cld
jb
cmp
lock
sbb
imul
push
rorb
jnp
pop
push
sbb
ljmp
daa
jmp
jg
dec
jp
inc
inc
loopne
jo
fildll
push
pop
sub
popa
xchg
lock
jge
dec
sbbl
movsb
enter
jge
adc
xor
aad
xchg
sbb
les
mov
test
in
adc
mov
add
or
sti
lods
test
jo
pop
dec
cwtl
add
fdivrp
mov
addr16
or
rcll
mov
dec
sti
les
sbb
pop
bound
pop
cmp
dec
repz
je
xchg
pushf
dec
subl
cli
or
mov
inc
daa
hlt
out
idivl
popa
add
rcrb
sub
jg
dec
xlat
jbe
push
orl
jmp
test
pop
jbe
add
xor
lcall
cli
les
sbb
ljmp
pusha
or
into
incb
fnstcw
out
dec
outsb
fnstsw
mov
xor
rol
mov
mov
in
mov
es
jg
push
je
int3
jmp
cld
fdiv
pop
cmpxchg
lods
call
leave
rolb
lea
sbb
stos
jae
hlt
dec
push
pusha
imulb
or
jge
je
jg
and
sti
add
sbb
test
aad
insb
sub
cli
or
clc
jmp
hlt
mov
sbb
cmovbe
outsl
shr
jmp
mov
cld
jbe
jae
mov
push
inc
xchg
mov
jg
xchg
lea
call
push
pop
adc
sub
push
mov
pop
push
stc
or
sbb
or
add
jbe
movb
incl
pusha
shll
mov
jge
aad
push
mov
sbb
sub
add
inc
mov
lret
repz
mov
repnz
add
clc
ret
push
cwtl
xchg
mov
xor
or
lea
pushl
xchg
push
cmp
dec
cwtl
xor
mov
push
pop
dec
or
jns
mov
nop
push
mov
xor
call
add
mov
mov
mov
push
jne
dec
imul
dec
and
pushl
andl
dec
add
mov
stc
or
cli
call
aaa
push
push
xchg
movsl
mov
lds
dec
cmpsb
xchg
icebp
pop
jecxz
inc
imul
ret
xor
ds
and
decl
lret
stos
cltd
nop
inc
jmp
and
insb
cmp
mov
incb
imul
dec
jmp
sbb
inc
dec
push
sahf
call
push
jne
movsl
jbe
ljmp
push
bound
aam
cli
cmp
repnz
add
mov
das
cmc
addl
jae
dec
adc
inc
add
mov
sahf
repnz
dec
loop
cmpsl
ud1
xor
in
adc
cmp
sub
scas
xchg
shrl
aam
xchg
decl
pop
adc
incl
push
shll
loop
and
xchg
ret
jo
inc
nop
pop
faddl
xchg
dec
outsb
jg
int3
sbb
cmp
pushl
mov
inc
pop
ss
inc
sub
das
jmp
push
push
inc
jle
pop
and
shlb
das
mov
pop
inc
movl
loopne
pop
or
sarb
xchg
std
ljmp
inc
sbb
cmp
cmc
js
add
incb
loop
call
xchg
fs
fdivrl
and
testb
lret
adc
sub
jo
ret
xchg
cwtl
mov
adc
movsl
push
dec
push
cs
jne
push
les
dec
out
mov
movsl
inc
mov
add
xchg
hlt
pop
and
jne
pop
pop
aas
push
lea
pop
sub
js
pop
xchg
cld
cli
cmpsb
mov
jno
clc
lock
jg
mov
mov
or
mov
outsb
inc
or
sub
ljmp
pop
subb
xchg
loop
cltd
inc
push
xor
add
and
mov
out
cmp
and
ficoml
sub
or
mov
sbb
and
add
jg
push
cmp
in
sbb
decl
ljmp
adc
xor
aam
and
stos
lods
cmpsl
push
loop
scas
mov
mov
jmp
or
or
insb
fstpt
mov
mov
sub
xchg
clc
lds
pop
inc
insb
fbstp
lret
outsl
jg
push
ret
mov
xchg
xor
imul
hlt
jnp
aas
cli
mov
jmp
mov
dec
pop
mov
xlat
cs
lret
push
rcr
lea
insl
lcall
movsb
pushf
sbb
lods
lds
sub
and
cmp
pusha
or
jmp
out
add
aad
lahf
loope
sbb
add
loopne
aaa
out
fisttps
dec
add
enter
or
test
jne
push
outsb
mov
adc
call
cmp
mov
mov
movsl
icebp
imul
pop
cltd
mov
xor
jg
push
or
or
std
or
or
popa
mov
test
push
nop
add
lcall
or
jg
aas
js
or
ljmp
adc
shlb
fisubl
or
jmp
mov
mov
repnz
pavgb
mov
adc
jg
jno
inc
outsb
pop
cmc
call
in
mov
lods
mov
lods
nop
adc
jge
lcall
and
mov
push
cltd
add
push
cld
ds
dec
in
inc
jmp
xor
jno
jb
add
push
mov
pop
and
aaa
cmp
sar
jne
and
pop
pusha
sbb
pop
hlt
out
cmpsb
push
fst
pop
in
and
incb
inc
aas
loope
in
add
or
lods
dec
in
call
inc
mov
loop
jg
or
mov
dec
push
std
aam
mov
xchg
hlt
incl
mov
out
mov
into
idivl
and
ret
xor
in
out
enter
ss
mov
inc
mov
mov
dec
cmp
into
fsubl
lock
pop
loop
pop
rcrl
push
mov
sbb
sahf
pushf
pop
mov
jo
sub
aam
addl
popf
jecxz
decl
mov
mov
in
lds
nop
jecxz
fstps
jg
push
lea
push
xchg
mov
pop
xor
lahf
out
xlat
shlb
js
jnp
pop
cmp
pop
movsb
adc
testb
add
push
cmp
push
je
pop
aas
push
push
mov
adc
fsubr
cmp
cwtl
mov
je
pop
mov
dec
inc
dec
adc
idivl
lds
push
cld
xor
or
loop
fldl
lret
leave
fcmovne
push
mov
test
inc
pop
lds
sub
gs
fnstsw
std
outsl
push
rolb
outsl
pop
outsb
pop
add
mov
dec
loopne
dec
add
and
jae
add
incl
cmp
sbb
ret
inc
cltd
je
sbb
mov
cli
xor
sub
and
mov
lea
das
sub
pop
adc
call
lret
lock
xbegin
xchg
mov
lea
call
imul
or
in
lret
push
lcall
adc
test
in
push
nop
mov
or
rolb
push
sub
dec
push
sub
inc
test
movsb
cmc
and
fbstp
rorl
jmp
jl
jmp
das
dec
adc
imul
icebp
or
enter
in
rolb
repz
std
dec
hlt
adc
and
inc
push
mulb
lcall
icebp
addr16
sbb
dec
sbb
mov
adc
jp
inc
sub
ja
dec
jmp
sbb
push
mov
rclb
jb
jp
fldcw
adc
mov
inc
pop
adc
jmp
push
lods
add
je
test
cmp
imul
jge
add
scas
pushl
push
mov
sti
aam
mov
rorb
dec
call
movsb
push
mov
lock
into
push
in
ret
cmp
or
lea
in
cld
lock
and
hlt
out
repz
in
adc
or
inc
xchg
add
jo
mov
arpl
push
stos
imul
decl
adc
not
sub
adc
fidivrs
or
xchg
ljmp
mov
call
pop
lods
pushf
jmp
xchg
push
jo
aaa
or
cmp
xchg
mov
lret
jge
inc
jge
outsl
sahf
mov
cmp
sub
pop
xchg
cld
test
out
das
lods
adc
push
jecxz
daa
xor
inc
repz
jl
add
outsl
insl
mov
cmp
add
stc
imul
shll
add
inc
mov
out
dec
je
pop
dec
ret
cmp
loop
test
inc
iret
stos
xchg
push
sub
mov
fistps
adc
pop
outsb
aaa
push
insb
or
mov
mov
test
xlat
dec
push
jmp
adc
cs
sub
decl
int
lods
jp
ljmp
pusha
daa
xor
push
pop
cld
xor
push
gs
adc
incl
bnd
shrb
inc
into
sbb
adc
les
daa
mov
cmc
cmp
mov
inc
jno
sti
pop
mov
call
test
outsl
push
out
pop
clc
stos
iret
rclb
icebp
std
sbb
fstpt
jmp
pop
insl
iret
mov
pop
cld
xchg
test
outsl
dec
push
mov
icebp
cmc
pop
pop
mov
fmul
jge
mov
add
jg
fwait
ret
pause
mov
sub
or
fs
loop
ror
pop
lock
rcr
clc
test
shrb
lods
jmp
mov
nop
push
sub
push
mov
pop
out
push
pop
jecxz
js
js
mov
push
jno
movsb
sar
les
repz
mov
mov
mov
arpl
jbe
cs
ljmp
jge
adc
or
rcrb
cli
movzbl
loopne
fbld
pop
adc
icebp
shlb
int
ss
mov
stos
and
pop
aas
int3
fs
dec
jecxz
scas
mov
jg
repz
movsb
push
ljmp
sub
mov
dec
adc
adc
jp
push
outsb
std
adc
dec
sbb
push
mov
add
out
aaa
pop
jae
stos
cli
pop
and
cltd
sbb
icebp
add
xchg
test
adc
mov
pop
lea
pop
pushf
sub
push
dec
push
xchg
push
ljmp
call
dec
std
mov
sub
jnp
pop
xchg
pop
push
sahf
cli
xchg
pop
cmp
fbld
shlb
mov
test
mov
outsb
and
or
shlb
mov
push
cmp
cmp
pop
sub
inc
jbe
add
add
or
into
jmp
loope
push
sbb
push
xchg
sar
call
lea
nop
mov
mov
or
mov
sbbb
sarl
movsl
test
shl
and
jo
outsl
push
or
inc
icebp
pop
push
jae
mov
je
add
sbb
pushl
and
push
jg
cmpsb
cmp
sub
std
test
ret
icebp
push
inc
dec
push
push
push
mov
shll
divb
addl
xchg
je
push
test
pop
les
inc
aaa
jmp
call
aam
push
add
mov
add
rolb
les
loopne
and
dec
dec
sub
fsubrs
decl
or
push
jl
sbb
test
jg
pop
add
fnstsw
mov
test
cmpsb
pop
loopne
stos
mov
ljmp
and
dec
and
cld
loopne
xchg
mov
adc
mov
scas
jmp
xchg
out
and
fs
cld
add
leave
testl
lcall
xchg
nop
sbb
imul
fisttps
sub
adc
rolb
loop
std
mov
or
pop
adc
push
mov
ret
in
cld
bound
push
ja
dec
pop
and
jp
out
pop
mov
push
jmp
das
dec
jle
leave
cmc
mov
mov
stos
lods
cmc
xor
sbb
sarb
call
std
sbb
pop
das
les
push
adc
jno,pn
xor
adc
inc
xor
mov
je
stos
clc
cmp
jns
hlt
insl
xchg
jns
pop
ja
mov
mov
jg
sub
inc
push
cmp
lcall
pop
cmp
std
ljmp
jne
jnp
cmp
xor
insl
icebp
jp
adc
pop
loopew
cmpsl
inc
pop
movsl
mov
mov
cmp
mov
in
gs
or
ficomps
ljmp
push
inc
hlt
outsb
inc
loop
das
outsb
inc
mov
ja
mov
enter
cmp
test
js
cmp
mov
pop
inc
push
cmp
mov
int
outsl
test
or
sbb
test
mov
xchg
mov
shlb
mov
lds
shrb
and
divb
in
mov
sub
jle
jg
inc
and
fcom
incl
and
daa
mov
lret
fists
jl
jg
scas
jg
fildl
sbb
inc
fs
or
xchg
je
push
outsl
orl
dec
inc
dec
dec
mov
decl
inc
push
pop
pop
inc
dec
out
inc
movsb
incl
pop
in
sbb
incb
jne
and
and
sub
dec
das
add
inc
aas
cld
xor
add
pop
outsl
mov
jb
fisttps
rcrb
push
incl
test
cld
test
fdivr
sub
fldln2
or
sub
lret
pop
les
paddd
sub
shld
add
out
mov
xor
repnz
sbb
pop
inc
in
xor
or
sbb
outsl
mov
pusha
mov
pop
mov
sub
incl
or
add
scas
arpl
imul
in
or
sub
dec
or
adc
scas
xor
jecxz
in
mov
enter
adc
fs
add
push
jne
hlt
mov
or
das
aaa
xchg
jbe
pop
pop
daa
pop
iret
cmp
inc
das
fstps
aas
cmp
dec
pop
push
ljmp
or
mov
or
repz
push
call
adc
adcb
test
xchg
jle
push
and
and
es
das
fldcw
sub
clc
or
jg
inc
cmp
push
add
loopne
pop
fs
pop
clc
dec
std
inc
icebp
sbb
or
mov
insb
sbb
daa
loopne
ljmp
and
or
cmp
jo
pop
flds
inc
pop
adc
loop
dec
ret
fdivl
ret
imul
cmpsb
push
subb
js
jge
pop
jns
clc
sbb
in
jle
movsb
fstl
cmp
cmc
mov
add
pop
test
inc
sbb
addl
cld
in
adc
sbb
enter
push
adc
inc
das
test
test
lods
lods
scas
scas
cld
hlt
jo
lock
mov
sbb
rclb
mov
jmp
enter
adc
int
lret
iret
rcl
rcl
adc
pusha
fisttps
aam
add
mov
sbb
in
pop
jmp
out
jmp
out
add
sub
icebp
repnz
negl
cmp
testb
cld
std
xchg
add
decl
add
xchg
or
les
pushl
sbb
jmp
sub
and
in
bound
es
sti
lcall
add
js
pusha
pop
jae
loope
ja
incl
jnp
cmp
xor
addl
xchg
xchg
lret
iret
add
nop
xchg
cmp
mov
xchg
lcall
les
in
out
xchg
movsl
das
cmpsb
cmpsl
lock
mov
mov
adc
jmp
pushl
sbb
lds
add
lret
lcall
add
pop
pop
sbb
add
test
lds
add
cli
std
mov
fsubr
xchg
push
ljmp
sti
stc
incl
cwtl
enter
in
mov
incl
or
or
dec
or
pop
jns
leave
and
add
and
jo
xchg
rorb
std
mov
jge
test
lcall
mov
movsb
inc
mov
or
rol
lock
xchg
push
fstl
sar
add
add
aad
loopne
and
ds
ret
or
mov
iret
icebp
mov
push
push
incl
mov
jecxz
xchg
addr16
mov
aam
ss
add
icebp
imul
inc
outsl
mov
pop
loopne
stos
adc
lods
je
dec
pop
decl
dec
inc
loopne
adc
cmp
idivb
cmp
test
mov
fistpll
lds
inc
push
push
rolb
cmpsb
jne
mov
or
add
aam
xchg
mov
sarb
loopne
fwait
inc
mov
mov
xor
cmp
aam
sbb
test
fcompl
lea
dec
xlat
aad
add
insl
jp
mov
mov
cmp
in
scas
pop
mov
vmovddup
enter
xchg
mov
inc
adcb
outsl
ror
andl
adc
push
cmpb
xchg
loopne
xlat
shl
incl
jo
jecxz
out
xor
outsb
cmp
pusha
addr16
mov
in
das
in
jge
je
roll
xchg
aam
pop
std
dec
jmp
sub
mov
nop
adc
mov
rclb
or
push
mov
movl
leave
and
loope
inc
push
movsl
xlat
cmp
xchg
inc
mov
jae
jg
jp
decl
sub
push
pop
add
ljmp
adc
or
daa
pop
adc
pop
leave
adc
int3
sti
decl
cmp
fwait
clc
or
aaa
daa
inc
push
lcall
mov
lods
outsl
dec
jo
push
xor
cmp
and
sub
or
jle
push
push
or
inc
mov
push
dec
fsubrl
filds
jmp
adc
pop
ret
ja
sub
mov
out
jbe
lcall
push
cmc
les
inc
mov
pop
pop
jmp
and
psrlw
inc
mov
outsl
mov
sbb
clc
scas
mov
aas
ret
pop
jno
fwait
push
mov
xchg
or
lret
add
xor
stos
ret
add
pop
jle
xchg
mov
fisttps
cld
push
repz
cmp
dec
mov
inc
mov
jno
add
out
incb
data16
sbb
xor
jo
call
push
cmp
pop
inc
inc
decl
in
sar
mov
adc
lret
xchg
jle
shll
inc
mov
push
lds
mov
push
xor
fists
mov
cmp
adc
sub
inc
je
popw
mov
jmp
add
repz
push
ret
xlat
in
mov
mov
mov
fdiv
loop
adcb
lcall
pop
shlb
movsb
pop
jl
push
mov
and
add
adc
jne
aaa
mov
push
cli
out
cmpsb
mov
notl
ja
adc
in
mov
dec
jp
dec
sbb
icebp
stc
push
out
add
scas
pop
test
scas
lcall
je
stos
adc
sahf
pusha
dec
lcall
fdivrp
push
stos
jae
jg
loop
mov
push
sub
add
jecxz
lock
fdivl
sbb
fs
aaa
inc
cmp
mov
adc
scas
testl
mov
pop
push
mov
pop
dec
es
sbbl
dec
mov
sti
in
std
ljmp
xor
jl
mov
jle
xchg
jecxz
les
inc
outsl
out
xor
dec
and
call
mov
mov
jmp
mov
xchg
add
shlb
mov
sbb
push
jle
jmp
sbb
adc
das
mov
lret
sti
cmp
test
addl
out
add
clc
and
and
repnz
fildll
add
jg
rorb
imulb
cmp
xor
stos
and
outsl
imul
movsl
pushl
add
clc
orb
xchg
add
out
incl
pop
inc
adc
hlt
pop
out
aaa
push
je
js
sbb
mov
std
add
inc
fisubrs
pop
and
xchg
loope
sub
jo
pop
and
decl
push
add
jmp
inc
iret
popf
mov
mov
dec
add
icebp
mov
pop
insl
push
or
loope
int3
push
jle
jg
add
incl
adc
shrb
jno
cmp
xorl
mov
insl
lods
mov
push
sbb
loop
jne
jo
ja
das
sub
cmpsb
cld
js
ret
mov
mov
loop
lret
push
sbb
leave
in
mov
in
loop
jmp
out
in
and
dec
and
ljmp
push
xchg
ss
mov
sub
mov
nop
xchg
add
push
call
mov
dec
cmc
inc
cld
mov
out
outsb
loopne
ds
movsl
jle
js
and
or
sarl
repnz
enter
xchg
je
jle
jb
imul
lods
and
andb
xchg
insb
jg
dec
loopne
cmp
sbb
subb
mov
insl
pop
cld
pop
lds
test
sbbl
pop
lahf
nop
xchg
dec
shr
rolb
leave
call
aad
scas
movsb
lret
push
pushl
outsl
xor
ljmp
enter
inc
jo
jmp
add
cmp
mov
les
arpl
rolb
mov
call
jo
fistl
mov
fidivrl
sbb
or
mov
push
or
lcall
cmc
mov
adc
fisttpl
pop
mov
mov
test
and
ljmp
and
std
in
cmp
roll
aam
outsl
xchg
subb
fstpt
jb
mov
jle
add
decl
bound
cmp
add
sub
call
int3
pop
test
cwtl
pushl
mov
jp
add
or
rclb
mov
rcrl
add
mov
lods
imul
jecxz
xchg
lods
jg
rep
and
jb
pop
bound
mov
rep
cli
cld
sbb
fsts
lock
insb
cmp
pop
xchg
mov
xchg
xchg
mov
ljmp
sub
mov
jg
mov
std
lds
push
pop
outsl
aad
sub
add
jl
jle
lds
add
add
adc
push
fdivr
inc
and
aas
and
ja
lea
cld
iret
hlt
rorl
repz
mov
incl
adc
mov
mov
jb
hlt
sahf
pop
and
negb
mov
mov
pop
mov
or
shrl
xlat
pop
mov
xchg
or
incl
add
xchg
data16
clc
mov
cltd
mov
xchg
sub
cmpb
rcrb
jmp
insl
ja
mov
inc
add
aad
std
jmp
or
xadd
mov
xchg
push
sub
cmp
push
repnz
pop
and
test
dec
pop
sti
aam
dec
aas
jecxz
jg
xchg
dec
cmpsl
call
enter
leave
adc
ja
add
incl
add
adc
popf
add
add
sbb
ljmp
dec
mov
jmp
pop
pop
jecxz
mov
mov
decl
jle
xchg
mov
shr
in
push
inc
xchg
xchg
enter
int3
sbb
pop
lea
sbb
and
call
push
jle
fsubs
flds
mov
sub
int
jne
adc
sub
or
jmp
mov
shlb
fisttps
push
mov
cmp
cmp
fsubl
cmp
jns
jmp
adc
fdivr
push
call
add
or
jne
loopne
jne
fs
decl
inc
xchg
out
cmp
cmp
push
call
iret
cmp
xchg
add
pop
pusha
pop
popa
pop
mov
divl
cmp
movsl
xor
fstl
push
dec
pop
lahf
fistpll
movsl
jne
in
push
mov
and
test
popf
fsubs
or
ljmp
mov
testb
ret
repz
cmp
dec
jmp
sete
adc
ds
add
imul
repnz
out
cmp
sar
das
xor
roll
fbstp
mov
jle
sub
incb
sbb
sbb
xchg
flds
stos
mov
shlb
rolb
mov
mov
sbb
incl
aad
test
add
int3
je
incl
jo
pop
dec
mov
idivl
imul
loope
hlt
dec
repnz
aam
stc
cmpsb
incl
mov
or
fdivrp
add
mov
or
sbb
and
push
mov
xchg
jbe
pusha
test
fdivrp
push
jmp
sahf
inc
lea
sar
xchg
fmull
add
push
cmpsl
in
fldl
dec
lock
pushf
jne
add
pushl
incl
repnz
pop
add
leave
pop
scas
mov
bswap
push
inc
out
pop
std
fsubrl
in
aaa
lcall
and
sbbb
pop
pop
sbb
icebp
mov
enter
gs
adc
sub
and
sub
inc
mov
je
fwait
adc
jne
loopne
js
and
int
or
mov
adc
and
inc
pusha
fadds
aam
dec
mov
cmp
ljmp
jns
pop
adc
adc
push
add
pop
ljmp
push
ds
roll
sub
ljmp
dec
clc
adcb
pop
cli
inc
add
lahf
or
shrb
mov
movsl
mov
lock
clc
shlb
das
out
or
push
loop
das
mov
cs
stos
shlb
push
cmp
xchg
cmp
add
int
and
test
imul
add
loope
shlb
push
add
jl
adc
inc
jge
insb
call
cld
push
add
xchg
and
es
cmp
sbb
mov
pop
jg
xchg
lock
notl
cmp
add
add
or
add
ds
insb
ret
stos
lds
aaa
icebp
dec
add
adc
dec
sbb
incb
dec
rcrb
loopne
add
inc
insl
lods
mov
add
ja
fdivs
addb
andl
loop
sbbb
std
icebp
pusha
mov
jno
test
mov
int
loopne
sub
ljmp
enter
jle
mov
cmp
add
jp
mov
inc
mov
or
adc
adc
rclb
xlat
mov
jne
lcall
clc
cmp
aaa
and
incb
shll
aaa
fildl
xchg
cmp
test
push
jo
lock
pop
dec
mov
aad
incl
leave
inc
ret
add
addr16
add
sub
rcll
leave
fwait
ljmp
sti
cmp
lcall
dec
mov
jo
jg
xorb
and
orb
mov
nop
rolb
les
fistl
loope
xchg
mov
icebp
mov
cmp
cmp
scas
mov
inc
inc
hlt
xlat
ja
xchg
outsb
popf
sbb
and
subl
push
dec
arpl
pusha
and
xchg
mov
or
incl
jle
dec
inc
sbb
mov
cs
imul
nop
clc
mov
dec
jbe
push
lea
push
nop
jne
lock
mov
jns
pushl
jmp
pop
cli
call
sbb
or
pop
arpl
mov
sub
inc
ljmp
jg
jecxz
loop
and
mov
scas
call
sbb
or
sar
repz
push
and
mov
adc
inc
rorb
adcl
add
add
dec
ds
adc
test
xchg
adc
or
lock
mov
in
pushl
imul
push
push
lcall
mov
cs
test
shll
xor
add
and
testb
call
inc
cltd
inc
jnp
add
inc
pop
inc
or
jae
test
lds
mov
xor
rorb
or
inc
les
add
and
out
scas
adc
inc
jmp
enter
lods
mov
sbb
loopne
or
or
test
add
xchg
movl
push
jl
aam
in
cmc
movups
outsl
pop
popl
lcall
mov
rclb
mov
out
mov
outsl
mov
and
ds
imul
movsl
push
lock
sub
enter
pushl
pop
in
movsl
decl
xlat
js
out
ljmp
inc
cli
mov
lock
sub
fwait
mov
dec
lods
outsl
in
adc
mov
aaa
daa
hlt
push
inc
mov
pop
sub
stc
mov
leave
adc
jl
xor
xchg
aam
test
add
cmp
das
addb
and
mov
ljmp
mov
sub
push
dec
insb
add
mov
xor
push
imulb
push
mov
icebp
fs
cs
push
imul
aad
mov
mov
jne
jmp
sbb
clc
jmp
ret
add
or
jo
bound
and
mov
pushf
jmp
jecxz
jl
loopne
add
decl
jge
cmp
loopne
dec
adc
mov
inc
pop
lea
cld
sbb
lahf
in
loopne
ljmp
inc
fmul
lcall
mov
cmp
pop
dec
stos
aaa
xor
xor
icebp
jb
sub
sbb
es
push
dec
ja
std
rcrl
cmp
mov
lret
sbb
or
movsl
jge
pop
std
sbb
mov
add
sbb
clc
std
mov
mov
fildll
sub
inc
das
add
mov
mov
or
cmp
lods
testl
addb
out
add
inc
jg
test
xchg
dec
dec
lock
imul
loope
shlb
mov
mov
jmp
add
lea
sub
mov
js
test
push
lahf
and
sar
lea
in
inc
or
jg
mov
push
adc
push
pop
sub
push
outsb
jns
int
jne
mov
pop
mov
mov
cmc
lcall
jno
scas
stc
pushl
jne
icebp
popf
leave
les
lods
clc
sbb
sbb
pop
test
mov
add
incl
pop
mov
xchg
adc
out
adc
je
decl
mov
les
pop
addl
adc
mov
ljmp
repnz
loopne
nop
sbb
sahf
mov
xchg
xor
in
stos
loope
add
sub
push
lcall
cmp
cmpb
pop
mov
mov
hlt
fdivrl
imul
ljmp
arpl
push
rcl
mov
mov
push
stos
add
inc
xor
vunpcklpd
jo
lock
mov
aaa
rorb
loopne
inc
xor
add
repz
push
or
xchg
pushl
pop
pop
shlb
into
jo
adc
clc
loopne
shufps
pop
fdivr
andb
mov
cmpsb
pop
clc
divb
jne
jle
xor
cli
jmp
lret
pop
loopne
or
sub
hlt
filds
clc
or
jnp
add
dec
sub
lods
lock
or
lea
mov
adc
incl
add
shlb
fldt
mov
jne
repz
test
jno
out
subb
pop
jbe
lret
inc
push
add
ljmp
andb
arpl
and
adc
mov
mov
dec
rolb
rolb
push
lock
pop
das
or
cmpsb
jle
mov
scas
dec
ja
pushl
lock
movsl
inc
or
stos
xor
or
insl
cmp
add
xlat
pop
ss
mov
or
push
sub
leave
mov
mov
jo
ja
sahf
pop
icebp
inc
pop
cli
add
filds
xchg
mov
das
mov
clc
scas
jnp
sarb
inc
and
jmp
call
pop
setae
jbe
jno
inc
cs
sub
fcmovne
add
sub
push
loopne
cmp
cmp
rol
or
add
fnsave
mov
mov
inc
jl
clc
jg
mov
inc
rcl
repz
das
xchg
ret
lahf
movsl
frndint
cmc
loopne
sub
and
add
test
clc
mov
xchg
lahf
loop
pop
aam
lock
pushf
das
inc
and
loope
jg
sbb
or
mov
int3
jmp
jmp
jmp
pop
addb
xchg
xchg
push
cltd
add
decl
xchg
pusha
imul
movsl
cmp
sbb
jecxz
pop
jg
jg
loopne
xor
call
jbe
sub
in
dec
or
jb
push
ffreep
fadds
cli
sub
xchg
sub
std
xchg
jno
es
into
mov
adc
or
cmp
dec
jns
out
sti
pusha
jo
add
and
or
pop
sub
out
jmp
sbb
add
cltd
ss
add
push
outsb
cld
jb
shrb
outsl
les
sub
mov
das
imul
loop
add
mov
mov
fwait
jg
push
xor
mov
rclb
mov
mov
add
lods
add
inc
xor
or
push
xchg
pop
pushf
add
hlt
jmp
and
mov
sbb
stos
dec
in
test
jmp
push
jnp
icebp
test
xadd
adc
push
push
loop
xor
pushf
in
inc
jmp
inc
or
mov
sub
adc
pop
adc
sbb
mov
sbb
dec
test
insb
lods
in
push
pmaddwd
xchg
int
and
jp
outsl
sub
inc
xchg
or
addb
add
test
sub
pop
push
inc
incl
inc
scas
and
add
push
xchg
inc
stc
lods
sub
jnp
sub
pop
sub
xor
or
push
lcall
stc
mov
imul
leave
sbb
add
faddl
imul
push
aam
std
jmp
aaa
das
lcall
in
daa
add
in
adcb
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
sub
clc
cld
cli
jmp
pop
sti
in
insl
stos
push
jg
and
stc
paddb
lret
jmp
sbbl
mov
out
incl
push
mov
jmp
ds
cmp
negl
push
jne
loop
push
aaa
pop
dec
std
push
xor
jmp
shl
ret
inc
sbb
mov
nop
pmullw
fdivr
stos
mov
sbb
inc
inc
addb
test
dec
xor
clc
aad
mov
inc
nop
mov
pop
setg
dec
push
push
icebp
add
test
mov
out
lea
xchg
push
pop
cli
add
jge
lock
test
test
aam
adc
xlat
cmp
data16
add
rcrb
or
lock
cmp
push
push
sahf
shrb
daa
mov
sbb
jb
mov
outsl
adc
adc
sub
mov
add
subb
daa
sub
cmp
jne
mov
mov
and
add
push
jg
xor
loope
movsl
mov
stos
fcomip
push
mov
jmp
cld
cld
xchg
jg
cmp
jb
add
sbb
push
inc
lock
mov
in
mov
outsl
push
mov
imul
fbld
decl
jb
mov
cli
add
or
adcb
je
push
pop
ljmp
and
lret
ds
cmc
inc
or
mov
sub
push
cmp
push
in
fwait
add
push
iret
in
pushl
add
sbb
push
nop
jle
inc
popf
sub
and
push
mov
pushl
repz
adc
dec
mov
fs
nop
call
sbb
cld
stos
loopne
ror
test
imul
pop
and
push
dec
jns
add
push
dec
sti
imul
mov
cmp
sti
ljmp
mov
fsubr
xor
push
pop
mov
inc
push
sbbb
incl
jmp
sbb
dec
jne
jo
das
out
xchg
mov
push
in
push
lahf
pusha
into
add
cli
mov
mov
jmp
mov
mov
xor
imul
add
repz
mov
out
cmp
pop
rcr
dec
jg
lods
mov
fmull
xorl
fdivs
inc
jmp
add
inc
mov
and
mov
mov
icebp
add
jnp
add
mov
jp
cli
sbb
outsl
mov
movl
or
pop
mov
hlt
test
jo
das
mov
mov
addr16
push
xchg
aam
push
xchg
enter
int
add
add
test
jne
aam
dec
outsl
adc
xlat
loop
lret
pusha
and
sub
xchg
loopne
jge
or
mov
mov
and
daa
push
inc
mov
jnp
loopne
aas
lret
mov
cmc
ja
jg
outsl
arpl
xchg
outsb
decl
or
mov
jns
clc
xor
into
adc
mov
mov
addl
pusha
fsubp
loopne
cmp
add
cs
jmp
cmp
shll
fdiv
pop
clc
ja
das
fsubrl
mov
loopne
das
ffreep
dec
sub
push
ficompl
inc
ds
hlt
push
and
jle
subl
xchg
data16
xor
lahf
jo
mov
neg
inc
inc
mov
lods
loopne
sub
ffreep
fsubrl
adc
imul
push
jecxz
ljmp
pop
pop
iret
fs
cmp
ljmp
negl
xchg
out
jg
push
jb
pop
inc
add
decl
cmc
sub
cld
mov
mov
add
xchg
dec
subps
test
sbb
bound
in
jge
pop
mov
push
push
dec
clc
add
shl
negb
push
outsl
mov
aaa
sbb
xor
cmp
filds
sarb
mov
mov
in
sub
mov
cmp
push
jmp
inc
popf
js
clc
xchg
cld
pop
cmp
adc
dec
bound
cmp
cmp
mov
push
cmp
sbb
inc
out
jmp
adc
fwait
adc
push
icebp
sahf
jl
dec
mov
dec
stos
cli
xchg
nopl
mov
js
in
cs
adc
push
cmp
mov
sub
inc
mov
sbb
xor
shrl
cltd
in
leave
pushf
sub
rcrb
inc
test
call
mov
jo,pt
jbe
inc
sbb
les
mov
cmc
or
sar
mov
sti
sbb
push
sub
ret
jle
pushl
jne
cmp
jne
push
xor
scas
or
shlb
and
mov
adc
mov
mov
xchg
cmc
xlat
test
jg
xchg
and
shrb
push
ds
mov
stos
push
sub
add
das
pop
xchg
mov
cld
pop
jb
and
sbb
out
stos
add
sti
cmp
dec
mov
adcb
or
adc
jno
stos
sbb
ret
xor
mov
sbb
repnz
push
sub
aam
add
sub
jmp
test
jge
mov
push
rcrl
outsl
add
inc
lock
add
pop
add
sub
cwtl
rolb
mov
mov
shl
movsb
mov
mov
call
loop
pop
pop
pop
sar
add
mov
daa
mov
outsb
mov
push
ljmp
dec
fimull
int3
pushl
rorb
lock
and
test
pop
sarb
cmp
pushl
in
cld
imul
je
pop
pop
call
enter
out
cmp
sbb
imul
dec
add
ljmp
add
add
out
loope
mov
mov
mov
incl
dec
add
adc
and
filds
clc
xor
hlt
cmp
pop
or
movsb
outsb
push
add
sub
sar
scas
jecxz
les
jmp
cmp
mov
movsl
lea
pop
and
hlt
inc
lock
add
xchg
or
and
bound
cwtl
adc
inc
ret
clc
lea
ds
jb
es
nop
icebp
lret
unpcklps
idiv
loopne
or
fcomip
cmp
sar
jle
cltd
sbbl
stc
and
les
call
stos
sub
decb
add
fadds
push
lock
adc
call
or
and
adc
add
inc
lcall
mov
adc
pop
jae
cmp
or
fstpt
pop
add
and
push
lods
loope
jg
jno
imul
dec
out
push
mov
mov
cmp
std
in
movsl
pop
sub
cmp
jge
push
sbb
stos
sub
icebp
push
daa
mov
jae
sub
add
pop
jbe
dec
add
je
jle
cmpsb
nop
bound
or
dec
lret
adc
xchg
incl
adc
mov
pushl
clc
test
add
nop
std
insl
inc
adc
pop
push
mov
adc
pop
fdivs
filds
roll
outsl
cmp
stc
ljmp
ljmp
out
jle
cmc
fbstp
incl
dec
pop
pop
mov
inc
and
and
add
pop
and
incl
iret
fwait
cmpsl
lock
outsl
mov
outsl
cli
pop
pusha
or
ficomps
or
out
std
jo
mov
jl
jmp
sbb
pop
jne
or
clc
or
jae
fucomip
or
add
cld
jmp
loope
fadds
fimuls
dec
jmp
mov
pusha
pop
cmp
cli
mov
mov
int3
out
mov
orb
prefetch
aas
add
add
push
jle
dec
xchg
mov
push
pop
lcall
lods
in
add
mov
sbb
aas
fwait
pop
push
push
push
pushl
jnp
cmp
push
push
outsl
xlat
pop
sbb
adc
call
inc
and
cs
xchg
add
adc
ficoms
pop
or
loop
ja
pop
jg
inc
and
lock
mov
push
jg
repz
adc
imul
xchg
cmp
cmp
adc
enter
clc
sbb
dec
add
or
mov
or
call
inc
lea
mov
xor
add
test
push
or
push
or
dec
lea
xchg
pop
jmp
outsl
ljmp
fcomps
movsl
adc
sub
daa
push
lods
dec
xchg
xchg
mov
or
sti
and
mov
cmp
into
lods
jmp
movsl
mov
push
add
std
xchg
nop
sbb
dec
jle
inc
dec
jne
inc
je
and
cmp
lcall
es
out
pop
xchg
jle
cmpsb
and
incb
mulb
lcall
xchg
add
shrb
xchg
jmp
test
jge
shlb
xacquire
inc
clc
clc
and
inc
sub
mov
sub
sbb
dec
jnp
pushl
cmpsl
push
xchg
sbb
lcall
xchg
stos
aam
jg
dec
ds
adc
push
mov
xchg
loopne
outsl
outsb
andb
es
lea
or
sub
jmp
hlt
pop
mov
loopne
dec
add
adcb
mov
xchg
rcr
mov
fisubrs
and
pop
lock
aaa
xchg
jno
call
pushl
icebp
sub
inc
add
and
ret
mov
lods
inc
jle
pop
sbb
add
addr16
sbb
in
incl
mov
cmp
loope
fsubrp
mov
and
fnclex
je
pop
fists
pop
push
push
mov
cmp
dec
insb
pop
lods
fstpt
and
cli
lock
adc
jne
and
pop
inc
add
lock
pop
icebp
dec
jge
jl
das
mov
mov
inc
sbb
adc
mov
roll
pop
pop
jo
and
pop
sti
push
lahf
rorb
pop
cmp
and
push
mov
sti
push
icebp
loop
inc
add
flds
jg
imul
addl
ljmp
outsb
ud0
add
dec
jne
cmc
bound
xlat
cmpsl
outsb
loop
ja
or
ret
dec
pop
or
add
jecxz
or
mov
xchg
cmpsl
call
mov
inc
subl
gs
icebp
lock
cmp
pop
jbe
add
xchg
push
das
int
xchg
push
aaa
cld
jo
fdivr
in
into
outsb
ret
pop
leave
call
mov
xchg
add
mov
push
stos
or
adc
cli
subl
cmp
pop
adc
cmpsb
pop
mov
mov
lahf
mov
andb
dec
or
add
bound
or
pop
addr16
shlb
icebp
call
or
or
movb
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
mov
rorb
and
sub
andb
jg
cmp
mov
jne
neg
inc
mov
push
sub
xor
push
cld
das
adc
nop
dec
xor
push
mov
ret
popf
out
popl
lcall
subb
inc
jns
xor
sbb
rolb
pushf
sbb
je
sbb
fistps
loop
and
fildll
push
cwtl
in
xchg
mov
inc
and
das
bound
cmp
ret
out
pusha
sbb
das
or
fistl
sbb
shl
mov
pushf
pop
test
fdivr
rclb
sbb
add
or
add
mov
or
std
out
aas
or
std
addb
decl
dec
test
adc
mov
cmp
or
inc
add
add
cmc
inc
inc
fisubs
sti
add
inc
sar
les
loopne
xor
inc
push
xorl
add
or
jno
mov
add
jmp
pushf
pop
and
mov
jl
jg
mov
jmp
push
pop
or
test
lods
mov
sub
push
pusha
decb
ds
adc
dec
mov
push
into
fstpt
notl
mov
jmp
add
mov
or
call
sbb
jle
jbe
push
gs
sub
xchg
mov
pop
lahf
or
add
mov
out
fstps
pop
sbb
mov
fmull
in
sbb
sbb
pop
orb
icebp
out
pop
fwait
xchg
add
icebp
jne
cmp
mov
cmp
shl
mov
divb
mov
out
pop
call
push
pop
rorl
lock
inc
adc
hlt
jl
iret
adc
add
cmp
cs
imul
mov
pop
add
dec
hlt
sub
mov
in
ds
pop
xchg
dec
mov
daa
ja
pop
or
or
mov
mov
pop
ja
js
push
lock
xchg
add
push
stos
in
movsl
outsl
fnstcw
push
lock
pop
ret
dec
mov
mov
lret
cmp
sub
jle
sbb
jmp
jo
mov
cld
mov
push
add
mov
push
loop
xchg
cmp
data16
pop
jmp
test
sbb
insb
pushf
add
sarl
test
add
pop
cltd
sbb
outsl
dec
in
cwtl
das
incl
ss
and
lock
mov
add
cmp
les
mov
es
jmp
out
or
cli
or
sbb
sub
xor
je
dec
or
sbb
loope
mov
loopne
cmc
pop
sbb
jg
je
std
mov
push
das
nop
fs
icebp
mov
das
test
xor
push
call
arpl
jp
fidivrs
and
sarb
sub
clc
call
add
xchg
push
flds
lock
aaa
outsb
outsb
test
sub
add
sbbl
pop
and
test
pushl
push
dec
push
jle
adc
inc
push
incb
inc
sarl
lods
clc
jmp
or
andb
and
xchg
ds
push
and
pop
xchg
add
incl
jo
call
mov
add
push
in
mov
incl
cmp
fisttps
test
fbstp
sub
pop
sbb
rcrl
and
ljmp
dec
dec
push
clc
add
lea
and
add
adc
inc
push
jmp
pop
inc
xchg
or
xchg
lods
push
clc
cwtl
lret
popa
mov
push
fxch
dec
neg
jmp
std
mov
dec
xchg
fwait
decl
sbb
inc
cmpsl
adcl
cwtl
adc
sbb
jecxz,pt
adc
mov
cmpsl
out
mov
or
push
inc
add
fdivr
xchg
cs
cltd
cmp
addr16
test
add
std
icebp
shl
adc
fisttps
xor
cs
mov
mov
sub
mov
adc
mov
movsl
cltd
ljmp
adc
nop
adc
clc
jno
lods
mov
and
sub
jb
test
dec
rcrb
jmp
pop
and
dec
mov
cmpsl
pop
mov
mov
cmpsl
and
dec
inc
aas
pop
fsubrs
cmp
loop
js
sbb
and
and
push
dec
mov
pop
call
ret
pop
adc
add
in
dec
or
in
push
push
add
inc
stos
fcomip
mov
mov
jmp
movb
jle
adcl
jmp
lcall
or
cli
mulb
lods
push
push
xchg
push
add
add
sbb
pusha
push
lcall
daa
push
nop
and
incl
push
mov
adc
test
and
inc
dec
fidivl
dec
inc
sbb
inc
cli
push
add
call
cltd
mov
mov
scas
stos
sub
fistl
idiv
add
mov
jecxz
xor
mov
pushf
decb
jg
xor
dec
push
lock
xlat
in
push
and
sbb
push
incl
fdivrl
call
and
sbb
jp
push
cmp
mov
push
std
mov
loopne
pop
mov
or
pop
movsb
push
sar
or
jne
pop
pop
cmp
cmp
push
mov
xchg
adc
mov
loopne
mov
out
cli
popf
sbb
adc
test
pop
int
clc
setae
fistpll
push
and
push
inc
mov
mov
push
dec
out
add
and
dec
js
inc
add
dec
das
push
cmp
cmp
cwtl
aam
push
pop
xchg
scas
ljmp
sub
add
sbb
xchg
clc
xchg
push
inc
jmp
cmp
call
add
mov
loopne
inc
mov
mov
mov
sub
enter
sbb
lret
call
sbb
inc
add
mov
and
cmp
cld
es
arpl
jne
mov
add
and
lock
or
pop
stc
adcb
sahf
mov
out
aad
mov
aad
xor
xchg
in
decl
dec
pop
adc
sbb
dec
jbe
mov
add
add
das
sbbl
movsl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
pop
inc
jecxz
decl
mov
jne
fimuls
add
xor
mov
fildl
loop
and
pop
ret
mov
fisubrl
lea
jno
movsb
aaa
mov
subb
lret
hlt
movsl
lahf
fildll
lock
ds
push
inc
ss
adc
orl
pop
push
inc
clc
jp
call
jmp
aas
lcall
jb
notb
incb
inc
adc
fldenv
and
ljmp
lret
jmp
jo
inc
lcall
inc
sbbb
xor
adc
aas
std
inc
push
sbb
xor
cmp
sbb
adc
cltd
clc
mov
incl
mov
fsubr
push
pop
sbb
mov
dec
pop
adcl
mov
cwtl
add
roll
jmp
popa
or
cmc
inc
std
sti
mov
movsb
mov
sub
mov
push
enter
stos
fmuls
pop
jno
popf
mov
mov
jmp
add
cld
xchg
lds
jnp
das
scas
enter
mulb
jecxz
shrb
decl
test
add
fsubrs
shr
xchg
mov
mov
mov
jg
jne,pn
xchg
incl
xchg
out
pop
cwtl
lods
xorb
xchg
insb
mov
aaa
adc
idiv
xchg
push
dec
addr16
jbe
lods
std
jb
pusha
push
jmp
cld
jge
cwtl
cmc
or
loope
dec
inc
aad
xor
mov
sub
mov
rclb
pop
mov
jge
add
mov
sbb
lods
or
mov
cld
jmp
lods
lcall
cli
test
xchg
adcl
mov
push
cli
test
add
add
sbb
inc
push
sbb
pop
stos
cmp
jmp
xor
cld
sub
dec
cld
or
mov
xor
jae
adc
ret
scas
push
outsl
shll
add
mov
divl
mov
sbb
adc
cmp
pusha
pop
rcrl
leave
jne
mov
or
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
popf
and
jg
add
loope
loop
dec
sbb
aas
dec
jge
push
or
inc
mov
jl
add
lea
and
inc
outsl
jns
add
movsb
sbb
sbb
std
movlps
sub
mov
mov
out
mov
imul
adc
shlb
sub
cld
add
loope
adc
jecxz
xor
xor
call
repnz
jb
ds
lcall
repz
mov
jl
cmp
sbbb
dec
inc
inc
push
or
add
out
andb
and
call
mov
int
jmp
js
xor
aaa
cs
into
imul
ljmp
popa
loop
sub
cmp
mov
jle
mov
mov
sbb
icebp
or
jns
adc
and
bnd
or
inc
call
jne
jo
pop
add
fildll
mov
mov
xor
inc
or
or
add
sbb
outsl
mov
sbb
cltd
adc
dec
xchg
decb
cmp
sub
jg
lods
mov
mov
sub
mov
pop
mov
cltd
fdivl
test
jg
cmp
push
jmp
adc
ss
sti
outsb
test
add
push
sbb
cvttps2pi
or
lock
or
jp
lods
decl
pop
cmc
add
sub
js
add
scas
push
jp
push
loop
stc
pushl
xlat
int3
rcr
data16
adc
sub
mov
or
int
cmp
loopne
or
sbbb
and
fucomp
push
adc
in
clc
fcoml
mov
fisttps
dec
test
push
test
cld
adc
pop
inc
pop
subb
das
dec
pop
ljmp
sub
jecxz
movsl
mov
pop
inc
adc
in
mov
loope
loopne
lcall
arpl
inc
cmc
out
shr
mov
hlt
mov
push
pop
add
inc
add
cmp
jecxz
and
test
fucom
push
ret
insb
out
js
movsl
add
push
sar
call
jg
cli
dec
rep
test
push
into
sub
popa
lcall
pop
lock
adc
xchg
fmuls
das
mov
sub
mov
add
jge
add
fbld
incl
mov
subl
cwtl
out
incl
fldl
scas
mov
lea
sbb
aam
test
sub
lock
aad
das
repnz
mov
lods
in
lea
inc
lcall
add
sar
mov
adc
push
mov
in
cli
and
mov
lret
pop
xor
adc
push
cmc
bnd
push
movb
pop
jecxz
adc
lea
test
inc
xchg
fsub
mov
sub
push
lods
add
decl
cs
lock
add
outsl
push
jmp
sar
lods
imul
clc
cmp
cltd
and
xor
call
nop
dec
or
mov
shlb
gs
add
xchg
or
outsl
lods
push
adc
popa
inc
clc
ja
jb
decl
movsl
and
push
mov
iret
sbb
rorb
dec
xchg
iret
pushl
dec
stos
push
pushf
in
movsl
dec
jmp
cmc
in
scas
fucomp
ljmp
or
pop
iret
adc
movsl
mov
cs
pop
scas
ljmp
and
loopne
and
lock
pusha
movl
shl
cli
and
int3
incl
sbb
mov
fistl
hlt
test
mov
mov
decl
popa
aam
jp
stc
add
xor
jmp
dec
inc
sub
outsl
inc
mov
push
stos
clc
xor
mov
push
push
jmp
pushf
adc
repnz
adc
in
repz
jle
or
sub
push
cmp
call
cmp
faddp
iret
mov
dec
pop
das
enter
cld
test
clc
push
imul
pop
sahf
or
jmp
push
adc
add
add
push
mov
pop
dec
push
mov
mull
in
push
cmp
stc
in
lahf
lods
fists
and
shlb
xor
mov
push
dec
lods
pop
push
lcall
lahf
shll
dec
jl
incl
dec
push
sub
shlb
pop
sbb
fdivr
cmp
push
dec
cmp
mov
push
xor
or
lret
and
enter
call
add
pop
jb
or
cs
add
jo
call
in
push
inc
xor
les
or
in
lcall
lret
jmp
ljmp
aam
movsb
jp
aaa
push
fcoml
pop
popa
dec
cmc
sar
adc
out
jg
inc
imul
cmp
push
ljmp
add
pop
mov
dec
clc
dec
clc
movsb
mov
test
hlt
mov
fisttpl
jmp
jg
ret
and
add
cmpsl
xor
cld
and
loop
test
pop
fmull
lds
mov
and
call
hlt
jmp
or
inc
xor
leave
call
sub
add
movsl
sbb
incl
je
mov
xchg
test
mov
mov
jg
cmp
mov
jecxz
clc
and
loop
jecxz
mov
xchg
mov
ficoms
dec
pop
push
repz
mov
xchg
decl
test
lcall
dec
jo
or
jmp
or
fsqrt
mov
push
inc
shll
dec
pushf
push
jmp
clc
cli
mov
and
xchg
xor
pop
jg
jo
sbb
push
jg
mov
aas
inc
mov
adc
repnz
jp
stos
or
daa
cmp
or
add
out
xchg
and
clc
inc
xor
add
mov
push
ret
fcmovb
pop
push
mov
lock
mov
adc
jb
or
mov
xchg
aad
add
pop
popf
xor
cld
push
imulb
pop
push
lcall
xor
lods
cli
inc
sbb
or
xor
or
fistpll
fsubl
add
dec
test
aas
add
icebp
call
adc
ljmp
mov
fisubrl
push
xor
add
es
loop
testb
pop
pop
mov
pop
push
clc
add
and
mov
sar
mov
in
pop
inc
incl
mov
dec
adc
inc
test
decl
xor
incb
mov
sbb
add
movsl
or
or
adc
pop
mov
popa
or
push
fs
pop
mov
sbb
pop
loop
rcl
xor
push
std
cwtl
jns
inc
daa
and
inc
pushl
shrl
xor
sar
mov
mov
mov
or
xchg
jne
cmp
and
in
xchg
ret
int
mov
xorb
roll
sub
into
or
jae
clc
and
push
fdivrs
in
pop
mov
enter
jp
add
dec
pop
lcall
lock
leave
sbb
add
fmul
inc
negb
pop
inc
mov
or
int3
push
add
js
mov
xchg
popf
call
ljmp
mov
sar
jmp
orb
and
cmpsl
add
push
mov
add
ljmp
jno
movb
xchg
add
les
push
pop
test
and
xchg
aad
mov
add
push
push
fisubrs
sarl
je
or
addl
add
push
pusha
xchg
lret
jmp
adc
add
pop
xor
sub
in
mov
jge
lahf
movsl
incb
sahf
and
aam
add
pushf
aam
pop
js
jmp
add
add
fidivrs
pop
add
cmc
hlt
orl
sbb
cmp
rorl
sub
adc
sub
push
out
ljmp
aas
and
mov
pushl
inc
sbb
cmpl
ljmp
cwtl
stc
inc
pop
test
mov
adc
cli
jmp
xchg
xchg
lock
rorl
xor
add
jne
cli
or
adc
andl
mov
fsub
repz
mov
or
mov
dec
ret
sbb
movl
mov
jmp
or
pop
inc
adc
add
test
int3
call
xor
loopne
pop
or
xchg
sar
pop
call
cmp
dec
push
push
xor
sbb
std
or
les
jb
icebp
inc
mov
or
mov
mov
cs
insb
xchg
adc
das
inc
std
or
xor
cmp
push
push
pop
mov
adc
lcall
jae
or
pop
lods
jo
leave
jg
dec
sub
push
mov
mov
pop
gs
incl
rcll
in
imul
or
outsb
push
popf
push
xchg
shlb
push
sub
lods
cltd
dec
fmuls
shrl
pop
xchg
adc
ficompl
inc
mov
loopne
ljmp
add
jl
inc
loopne
inc
jbe
add
fwait
cmp
in
fs
clc
in
int
iret
add
inc
pushl
push
and
imul
jmp
cmp
scas
rol
mov
dec
mov
jp
lret
dec
ret
cwtl
incl
jb
out
inc
inc
jno
ret
xlat
inc
ud0
jecxz
jge
xchg
mov
jo
hlt
lock
mov
ss
jge
cmp
xchg
xchg
fwait
or
xchg
xchg
jg
mov
inc
sarl
lock
push
sbb
js
or
push
mov
add
mov
cmpb
pop
aaa
jnp
push
clc
les
dec
add
xor
adc
pop
rcl
mov
add
fsubrl
incl
lcall
xor
mov
int
add
je
add
shl
fistpll
mov
movl
add
push
iret
jg
aad
shl
cld
loopne
add
test
andb
outsl
adc
insb
xor
jb
fistps
xchg
inc
repnz
mov
dec
inc
movsb
jo
push
pop
pop
out
xchg
sti
nop
push
incl
push
cmc
je
out
push
mov
sbb
les
ljmp
or
fdivrp
or
push
xor
lahf
mov
sub
push
sti
popa
icebp
mov
adc
mov
jecxz
xor
inc
out
push
pop
jmp
icebp
popa
jp
outsl
mov
add
pushl
cltd
bound
int
add
cmp
or
test
push
sahf
jecxz
setae
jg
mov
sub
test
mov
sub
xchg
andb
aaa
aaa
mov
xchg
fcmovnb
gs
js
cmc
sub
adc
iret
push
sbb
dec
cmc
adc
pushf
pop
test
fmulp
jg
mov
std
add
arpl
mov
push
pop
mov
jo
pop
icebp
mov
stos
sbb
test
dec
leave
sbb
mov
lds
out
add
mov
jg
cmc
push
inc
push
or
dec
push
scas
hlt
sti
cmpsl
pop
mov
cli
add
xlat
xor
ret
inc
stos
aam
loope
testb
dec
xorb
jo
jb
addl
mov
cmp
lods
add
std
cwtl
ds
and
loopne
dec
push
push
clc
mov
fmull
stos
mov
mov
in
fstps
pop
ret
mov
jbe
mov
in
std
sahf
mov
jnp
sbb
and
aaa
pop
or
std
sub
call
sets
bound
jo
incl
sbb
dec
push
jp
inc
jmp
ljmp
mov
or
xor
add
dec
nop
inc
pushf
shlb
push
add
hlt
sub
int3
clc
rcr
mov
jno
inc
add
mov
mov
stos
or
sub
rcll
pop
xchg
ljmp
sbb
cmpl
mov
jnp
push
test
jmp
subb
pop
jne
adc
incl
inc
pop
jbe
adc
loopne
xchg
push
add
and
int3
nop
cmp
inc
call
mov
xor
pop
movsl
xchg
push
cmpb
lock
inc
mov
das
mov
clc
inc
sbb
pop
xor
dec
sub
aas
stos
or
std
adc
outsl
dec
mov
call
mov
mov
or
and
and
or
xchg
jne
push
push
ret
add
jnp
repnz
push
sub
dec
lods
call
test
push
jmp
add
fstps
cmp
push
jmp
add
push
cmp
add
or
jae
stos
sbb
inc
aaa
dec
cltd
dec
dec
adc
flds
lods
test
add
mov
jecxz
sbb
out
mov
loopne
mov
cs
xchg
lea
in
inc
repz
dec
test
push
mov
pop
push
cmp
and
sub
cmpsb
or
das
test
ja
push
or
hlt
xor
test
aam
jae
iret
mov
inc
mov
ljmp
pop
push
rcrb
sub
push
in
lds
sahf
adcb
add
jae
hlt
call
das
ss
push
push
les
loopne
jp
push
lcall
stos
push
call
in
adc
enter
test
rcrb
shlb
cmp
push
jge
aam
js
xor
add
lret
inc
dec
mov
or
insl
in
es
inc
aam
mov
out
xchg
lea
cli
movsl
push
in
mov
mov
in
jmp
fwait
mov
xchg
aas
mov
jmp
xchg
imul
and
push
jg
add
dec
shlb
loope
lea
aam
inc
faddl
jg
inc
mov
jle
fiaddl
loopne
xor
nop
add
pop
sbb
xor
aad
das
notl
call
lock
push
cmpl
inc
jo
sub
inc
push
mov
sub
or
icebp
xchg
ret
das
mov
je
dec
rcr
mov
lds
pop
adc
adc
cmpsl
into
mov
fbstp
add
mov
das
cmp
loopne
push
jg
fmulp
ja
shlb
push
aaa
push
add
or
dec
push
repnz
push
inc
jl
pop
and
cmp
pop
arpl
test
incl
mov
insl
ret
stos
call
mov
and
std
sub
adc
ljmp
adc
inc
xor
sahf
sub
or
ficoml
shl
adc
jl
pop
push
test
mov
dec
loopne
cwtl
and
je
pop
out
mov
insl
or
jb
jle
xchg
sahf
shrb
and
mov
xor
outsl
dec
pop
jecxz
rorb
loopne
push
test
and
mov
icebp
rcrb
lea
mov
inc
add
lds
sub
inc
rcl
mov
adc
adc
jns
xor
add
pop
lock
aas
jl
xchg
into
mov
je
dec
add
repz
test
jo
xor
adc
cld
sahf
pop
ret
cmp
pop
outsl
cltd
loope
adc
in
call
mov
decl
sbb
inc
test
add
inc
push
push
pop
jmp
pusha
hlt
rorl
mov
fsubr
rorb
mov
loop
xor
xchg
fcompl
mov
decl
test
orps
cmpsb
xor
adc
or
sar
mov
or
fildll
loop
lahf
in
pop
daa
jg
pop
dec
fwait
lock
lock
mov
in
cld
and
clc
pop
or
push
add
and
std
inc
adc
add
dec
decl
push
je
rolb
jae
jmp
xchg
xchg
mov
jg
repz
aas
jnp
jmp
push
loop
dec
and
xor
xor
adc
sbb
sar
add
xchg
pop
sub
fwait
movsl
pop
ljmp
pop
pop
dec
dec
fcoml
fs
aaa
jbe
out
mov
loope
jmp
cmpsl
lcall
dec
xor
mov
mov
jg
xlat
mov
lahf
push
mov
dec
jg
add
mov
lds
pop
cmp
inc
mov
popa
std
sub
das
test
lock
pushf
dec
add
lds
ja
jns
push
push
das
or
call
mov
imul
jmp
bnd
adc
adc
fs
inc
or
out
loope
imul
push
xchg
adcb
xor
mov
sbb
hlt
jnp
lock
das
test
jmp
sbb
std
fs
jb
ret
das
add
lcall
mov
inc
adc
adc
call
or
inc
dec
jns
cmp
dec
stos
adc
incl
pusha
jno
dec
jne
loop
out
sti
xchg
xchg
pop
mov
mov
lods
cmp
std
mov
test
outsl
icebp
inc
add
push
scas
outsl
add
or
inc
mov
into
jmp
rolb
dec
into
inc
inc
jae
mov
adc
sub
lods
mov
jmp
js
rolb
mov
repz
jge
rcrb
mov
sub
jno
rolb
pop
cmpsb
fcoml
pop
pop
xor
cli
pop
das
mov
mov
mov
mov
pushl
or
leave
test
and
pop
pop
sub
mov
adc
cld
je
lcall
mov
jg
movsl
daa
js
lods
cli
rclb
push
sti
pop
loopne
and
ret
xchg
call
xchg
inc
dec
cmp
mov
pop
fidivl
mov
lods
test
test
shr
xchg
mov
lea
out
ljmp
ljmp
mov
add
push
mov
das
loopne
flds
mov
cmc
gs
xchg
or
mov
iret
movl
pop
imul
jg
cmp
cmp
mov
hlt
movsl
mov
pop
adc
stos
in
mov
add
incb
jg
movb
push
pop
icebp
push
rep
outsl
and
and
lea
cld
scas
cwtl
cmpsl
or
cli
cmp
cmp
js
std
sbb
jo
je
and
iret
dec
and
das
push
xchg
aaa
cwtl
cmc
sbb
mov
and
jecxz
sub
inc
aaa
incb
jae
add
and
add
jmp
xlat
inc
daa
dec
adc
imul
inc
out
pop
std
or
sub
call
pop
cmp
or
sti
inc
cmp
daa
in
xlat
mov
add
adc
sbb
lds
hlt
sbb
jnp
add
inc
adc
cmpl
sbb
dec
adc
pop
add
cmp
adc
and
jnp
add
sub
decb
and
pop
and
test
stc
lock
fstps
xor
xchg
leave
adc
inc
in
add
aad
lret
stos
jg
and
sbb
daa
add
jo
xchg
sar
or
daa
jnp
cli
push
dec
push
push
jmp
fnstsw
enter
mov
and
sub
cmc
push
jo
enter
xchg
xchg
insb
inc
sbb
js
std
mov
push
mov
js
push
orl
lock
test
xchg
add
mov
ja,pn
adc
pop
out
lret
clc
xchg
call
jnp
inc
movsl
pop
push
sub
mov
mov
nop
jne
pop
cmp
call
and
loopne
js
push
cmpb
inc
adc
dec
das
add
ficoml
jae
das
movsb
scas
sub
outsl
xor
dec
hlt
scas
call
or
pop
push
cmc
lock
adc
mov
loop
addb
or
lahf
cmpsb
add
pop
sub
in
lret
shr
xchg
dec
xlat
orl
addr16
mov
adc
ret
lock
les
ss
mov
imul
cmp
movsb
in
sti
std
pop
int3
cmp
or
call
pop
mov
loopne
inc
clc
aaa
sahf
add
call
mov
and
jge
in
jg
inc
mov
dec
mov
cli
mov
pop
dec
dec
out
mov
incl
test
jg
lock
shrb
xchg
cli
lock
xor
incl
popa
inc
sar
leave
and
shlb
lods
mov
test
cmp
out
cmpsb
dec
dec
xor
mov
pop
push
or
test
icebp
cmp
mov
aaa
sub
add
add
dec
add
ljmp
jge
outsb
cmp
repnz
adc
push
das
jge
adc
add
xlat
das
aad
pop
out
cli
jb
push
push
hlt
pop
jae
dec
popf
ret
jg
pop
sbb
inc
insl
cmp
push
and
inc
push
jg
add
cld
push
push
dec
fdivrs
clc
in
adc
mov
add
or
loop
loopne
and
je
and
dec
call
mov
mov
pop
loop
mov
adc
cmp
mov
dec
inc
sub
xchg
mov
mov
sub
std
cmc
xlat
mov
popa
push
gs
int
adc
mov
loopne
lods
jne
pop
jnp
iret
xlat
std
adc
adc
lea
pusha
cli
push
movsb
and
fists
mov
in
xchg
add
inc
push
clc
xchg
ds
insb
adc
icebp
xlat
call
sub
xchg
or
movsl
jne
das
cmpl
mov
fs
cmp
adc
pop
inc
das
push
dec
sub
mov
cmp
les
call
out
clc
in
push
dec
cltd
mov
mov
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
stc
movsl
ljmp
movsb
add
decl
mov
pop
stos
sub
test
outsb
fldcw
cmp
xchg
pop
in
and
cli
xor
or
dec
das
mov
or
jle
lret
in
lea
jbe
or
or
roll
and
das
sbb
cld
dec
fisubl
pop
movsl
outsl
int
mov
fcomps
icebp
jns
xchg
sub
add
cmp
pushl
add
jl
cmp
push
lock
sub
enter
add
inc
add
test
cld
rorb
pusha
aam
add
outsl
sbb
sar
mov
pushf
call
sbb
lcall
and
mov
sbb
cli
jno
pop
xchg
inc
pop
push
movsb
push
cli
xchg
dec
cmp
cmpsl
aaa
sub
ret
mov
mov
mov
mov
inc
push
dec
inc
or
add
xchg
addr16
mov
idivl
das
sbb
cmp
xor
or
dec
cmc
jno
xor
push
or
movb
call
jns
movsb
setne
jns
add
sbb
push
push
mov
dec
xchg
decl
pop
shll
or
sbb
sub
mov
aas
mov
lahf
dec
lcall
xchg
pop
cmp
xor
jg
in
inc
stos
mov
and
add
mov
dec
pop
dec
add
mov
add
decl
push
mov
mov
in
in
add
inc
sub
insl
dec
add
push
ljmp
out
xor
arpl
clc
jmp
fidivs
pop
lahf
pop
xor
xchg
pushw
mov
sbb
mov
sub
fdivrs
xor
add
in
es
xorl
imul
pushl
clc
add
pop
mov
sti
daa
mov
adc
cmpsl
cwtl
jmp
push
jbe
leave
fadd
jmp
ds
pop
push
in
daa
mov
mov
mov
lcall
push
in
cld
push
dec
and
fdiv
outsl
cmc
push
dec
mov
push
subl
mov
cmc
mov
inc
mov
push
clc
add
sub
push
loope
or
adc
in
inc
in
icebp
xor
mov
mov
jg
sti
jle
add
fidivrs
int
push
sub
jl
and
test
das
pop
pop
xchg
and
rcll
jbe
dec
add
out
jmp
cmp
call
and
das
gs
cmpsl
icebp
mov
adc
das
mov
fs
pop
sub
popa
outsb
pop
scas
leave
mov
and
sub
cmp
xor
jns
pop
and
pop
xor
adc
mov
push
lahf
jmp
jb
cs
loopne
or
add
push
sti
shll
mov
outsl
addr16
arpl
dec
not
scas
or
icebp
adc
outsl
inc
movsl
movsb
in
lock
fmulp
push
outsl
jns
lcall
or
pop
add
fmuls
push
lea
xor
sahf
scas
fsts
pop
incb
push
aaa
loopne
clc
dec
movsb
stos
dec
aaa
cmpsb
lcall
lret
sbb
in
decl
mov
push
stos
cmp
aad
add
cmp
and
es
jmp
xchg
stos
add
fdivrl
add
not
addr16
bnd
lock
add
loop
mov
in
daa
or
pop
mov
jge
push
hlt
pushl
outsl
xor
insb
push
cli
inc
adc
or
jno
out
push
and
in
jae
pop
xchg
rcl
into
mov
sbb
jl
fs
js
cmpl
pusha
jbe
and
cmp
int3
push
shll
adc
sbb
sbb
adc
jge
movsb
cli
mov
add
mov
inc
and
pop
inc
mov
or
inc
leave
xlat
jbe
dec
iret
icebp
out
xchg
in
sub
pop
loop
in
push
in
repz
or
gs
or
dec
xor
fsubrs
push
dec
sub
mov
xchg
cmpb
inc
push
fsubs
mov
sbb
lea
hlt
jnp
fstps
outsl
call
add
dec
psubd
dec
movsl
push
mov
push
decb
scas
adc
cmc
lahf
rcr
adc
dec
adc
pop
ljmp
cmp
jl
lock
inc
jne,pn
mov
xchg
std
fs
adc
cmp
decl
mov
idivb
ljmp
in
shlb
or
fisttps
cs
mov
lods
mov
rolb
sbb
fadds
and
pop
add
rorl
pop
mov
cmp
cmpb
daa
push
das
cld
jbe
clc
xchg
mov
loopne
pop
nop
xor
or
adc
push
das
push
or
jbe
loopne
pusha
scas
jmp
add
clc
in
pop
and
divb
aas
or
cmpb
incl
subl
pop
sub
popa
call
add
pop
test
sbb
fs
pop
push
daa
in
mov
xor
in
aas
gs
cmp
das
fs
lds
andb
cmp
sar
mov
js
and
rcrb
movsb
mov
pop
aad
jo
repz
or
push
sti
jno
add
xor
cld
mov
xchg
or
or
pop
cmp
call
add
mov
pop
clc
cmp
cmpsb
xorb
inc
and
jle
es
js
add
inc
iret
lea
incl
dec
das
jne
mov
pop
mov
in
hlt
imulb
cld
pop
lock
jl
cmp
cmp
lret
or
decl
jg
xor
adc
fnstcw
mov
dec
shl
lock
sub
test
or
fiaddl
push
xchg
xor
ja
ljmp
cmpsl
popf
push
lods
jl
or
std
jmp
dec
test
adc
adc
cmp
and
cmc
pop
push
repz
sub
xchg
scas
pop
test
dec
sub
pop
cltd
sub
xor
dec
rorl
incl
adc
jmp
std
sbb
mov
dec
outsl
or
repnz
push
sbb
push
decl
push
dec
jg
int3
inc
mov
clc
es
mov
push
adc
and
aas
cltd
in
call
or
testb
fnstsw
shrb
ret
jb
out
cmc
sub
cmp
adc
loopne
insb
dec
jg
outsl
jle
lock
cmc
pop
repz
mov
sub
into
xchg
in
pushl
inc
sbb
fisttpll
adc
movsl
in
mov
xchg
int3
mov
sbb
pop
das
hlt
adc
idivb
in
jmp
push
out
das
adc
sbb
mov
js
out
test
pushl
lea
inc
push
loopne
mov
test
aam
call
xchg
or
pop
inc
nop
add
clc
repnz
dec
inc
orb
or
and
incb
jecxz
push
pop
xor
push
inc
dec
xor
pop
out
sbb
arpl
imul
fwait
add
and
cs
add
das
jo
xchg
adc
add
xchg
cs
mov
cmp
cld
call
mov
xor
mov
add
push
sbb
add
or
stos
call
adc
dec
repnz
addr16
icebp
lock
pop
inc
mov
test
or
xchg
flds
mov
add
inc
or
mov
adc
pop
pop
ja
cld
ud0
les
push
xor
mov
jo
and
push
faddl
les
push
xlat
mov
and
cmp
dec
or
push
jmp
or
push
daa
mov
icebp
call
jmp
arpl
test
adc
shlb
lods
and
add
and
push
je
call
push
or
xor
cmpl
mov
mov
icebp
sub
subb
mov
out
ljmp
aad
pop
cmpl
xor
pop
push
iret
lock
scas
incb
inc
orb
popf
pop
pushl
dec
xor
clc
repnz
ret
mov
sub
test
adcl
iret
adc
or
pop
dec
pop
movb
mov
ja
add
adc
sub
push
xor
mov
lock
hlt
lods
ret
jne
add
mov
mov
bound
xor
or
fucomp
in
in
push
aas
icebp
pop
adc
push
outsl
sbb
xor
pop
push
xchg
or
hlt
loope
pop
xchg
decl
or
pusha
and
or
pop
cld
mov
cmp
ljmp
adc
sbb
push
cwtl
fisttps
pop
add
adc
into
lret
lea
push
xchg
int3
xor
mov
call
adc
idivl
movsl
dec
dec
std
or
mov
dec
or
lds
call
fldl2t
je
pop
cli
inc
inc
das
negb
pop
scas
cli
call
pop
lods
and
pop
inc
sahf
dec
lods
cmp
fldcw
inc
mov
popa
adc
sub
add
mov
inc
add
or
mov
xchg
cli
mov
mov
xchg
jmp
imul
mov
mov
inc
xor
pop
lds
das
out
or
icebp
iret
mov
fists
dec
in
das
ljmp
push
inc
xchg
in
inc
dec
xor
inc
push
lods
sbb
or
dec
test
lea
shl
mov
icebp
jp
cli
ds
inc
andb
dec
bnd
dec
mov
outsb
cli
cmp
jl
rcll
fmuls
dec
xchg
jecxz
adc
pop
inc
sbb
clc
ret
lcall
test
dec
jmp
jl
enter
and
push
inc
adc
lcall
insl
xchg
jl
mov
inc
lcall
incl
mov
adc
test
leave
adc
xchg
xchg
lcall
outsl
jmp
inc
pop
repz
mov
subl
in
addl
jecxz
inc
cmp
cli
add
jne
cmp
jnp
pusha
push
xchg
orb
jae
stos
and
incl
sub
xchg
push
js
call
shl
mov
sbb
and
push
daa
sbb
adc
test
or
pop
mov
xchg
cmp
lcall
sbb
shl
adc
sbb
dec
jge
ficoms
cmc
jecxz
lods
mov
xlat
idiv
mov
add
and
mov
mov
xor
gs
icebp
push
sub
mov
lock
test
pop
sahf
das
jns
lock
je
in
mov
jb
roll
mov
mov
icebp
mov
mov
insl
add
addl
je
sbb
sbb
sar
pop
xlat
mov
clc
mov
cld
jne
cmova
test
aad
daa
ret
loop
cwtl
scas
inc
std
pop
ret
cwtl
sbb
add
mov
jg
mov
loope
xchg
or
push
add
mov
cli
out
add
ljmp
in
hlt
dec
gs
sub
xor
jp
mov
ljmp
add
mov
fistl
test
jge
mov
sub
add
imul
or
and
jo
bound
shlb
cmp
push
pushf
std
test
inc
xorb
jnp
rclb
pusha
jg
push
jmp
sahf
xor
push
fwait
lock
shrl
or
lcall
call
adc
sbb
sbb
scas
push
pop
inc
movsb
and
ja
movsl
call
lgs
mov
sub
decl
popa
xchg
push
sub
cmc
inc
repnz
movsl
inc
cmp
mov
daa
pop
push
repnz
pop
inc
pop
test
add
jne
fcomi
push
adc
int
popa
aaa
bound
push
inc
xor
outsb
dec
lret
xchg
inc
or
mulb
gs
or
mov
lea
lcall
mov
outsl
inc
in
sbb
pushf
add
mov
test
dec
nop
clc
or
sbb
xchg
and
incl
adc
jmp
sbb
xor
sub
dec
jmp
daa
add
loop
jge
or
sub
xor
icebp
inc
shld
das
fwait
stc
rcrb
ljmp
push
adc
mov
adc
jg
add
das
sub
cld
pop
andb
lods
sti
pushl
pop
fs
call
mov
imul
jmp
cmp
mov
cmp
pushl
aam
push
lcall
test
push
ret
popf
ljmp
add
and
adc
in
lea
jmp
movsl
cs
cs
or
mov
push
jle
mov
cmp
dec
cld
mov
pop
or
jge
test
jg
push
clc
je
pop
in
aaa
lods
xorl
sub
pop
mov
dec
int3
pusha
call
cltd
sbb
jmp
add
jmp
sub
scas
mov
and
add
dec
jmp
dec
inc
pop
mov
in
ss
lcall
mov
loop
pop
stos
mov
fimuls
sbb
or
add
add
push
inc
cld
mov
mov
fstpl
xchg
mov
adc
sbb
push
js
mov
and
fsubr
mov
xchg
fisttps
es
cli
jo
ja
icebp
mov
or
cld
mov
jbe
icebp
rcrl
call
sbb
fs
add
dec
incl
ja
ljmp
test
in
ret
push
jb
sbb
dec
inc
adc
push
popf
or
stos
mov
mov
jmp
lcall
pop
je
test
jp
inc
out
and
dec
call
mov
dec
push
or
inc
pushl
and
adc
or
add
test
and
adc
enter
in
mov
les
add
jg
push
cld
push
cwtl
fildl
mov
dec
sbb
dec
hlt
and
pop
mov
dec
pop
cmp
jmp
inc
movsb
inc
loop
cmp
call
out
xchg
enterw
add
add
out
jg
shrb
mov
jne
fcos
push
gs
add
xor
das
inc
pusha
ss
add
sbb
push
push
outsl
cmp
add
jmp
push
ds
push
mov
jl
rorb
jne
fidivrl
pop
es
in
and
rolb
pop
in
push
cli
mov
insl
cmpsb
jo
test
mov
inc
push
jmp
in
daa
push
jno
es
add
dec
add
add
add
and
nop
std
add
and
adc
xlat
sbbl
inc
mov
aad
sbb
jnp
cmp
stos
mov
out
mov
hlt
push
sub
push
loop
sbb
rclb
xchg
fldt
xor
popa
or
stos
dec
jne
or
jbe
push
inc
movsl
mov
xchg
and
shlb
add
pop
je
push
rorb
inc
hlt
cld
inc
jg
xor
into
cli
imul
add
xor
ljmp
hlt
push
popa
xorl
push
movsl
xor
add
mov
clc
jge
sub
call
sbb
add
imul
adc
jo
jg
mov
push
xchg
mov
jmp
sub
fcoml
pushl
and
call
cmp
adc
idiv
mov
scas
in
int
sbb
dec
and
push
cli
lcall
aam
pusha
sub
add
shrb
push
add
jmp
push
add
pop
cmp
sahf
and
sub
jae
cmc
faddl
push
dec
mov
pop
push
clc
adc
out
cmc
add
lock
adc
pop
mov
or
shll
mov
inc
xbegin
jmp
outsl
aam
add
jb
out
leave
loopne
sbb
sub
test
mov
test
lds
or
lods
daa
sub
inc
adc
insb
int3
or
and
addl
call
pushl
add
pop
add
addr16
incl
sub
sub
lock
pop
add
mov
hlt
sbb
mov
add
setnp
adc
inc
decb
xchg
xchg
aaa
popa
imul
push
jne
out
mov
bound
rclb
add
test
dec
push
sti
sub
cli
jns
mov
inc
mov
cltd
mov
dec
in
pop
das
add
shlb
je
xor
adc
repz
xor
push
sbb
sbb
nop
fsubl
imul
and
or
decl
out
adc
insb
add
jns
sbb
mov
enter
and
xor
loop
fcmovnu
or
cltd
mov
push
fcom
cmp
mov
push
movsl
dec
in
incl
xchg
push
add
mov
mov
pop
outsl
int
cs
and
or
lock
pop
mov
add
pop
fistps
and
gs
push
sarb
sti
js
jge
cld
or
sbb
add
es
jb
decl
xchg
mov
cmp
shrb
mov
add
ljmp
push
pop
sub
decl
in
add
nop
push
mov
pushl
incb
roll
add
pusha
jns
adc
sub
xlat
adc
cwtl
sbb
jmp
jb
dec
shrl
pop
sbb
andb
lods
ja
push
or
mov
les
std
incl
cmp
adc
jge
dec
repz
pop
cmp
movsl
mov
xchg
or
pop
sub
push
inc
or
mov
mov
push
sub
jbe
cwtl
add
cmp
call
jmp
das
adc
sub
fs
bound
push
cmpsb
addb
xor
dec
and
sbb
ud0
sbb
mov
add
pop
inc
add
pop
in
xchg
sbbl
hlt
and
inc
scas
outsl
jne
cmp
repz
add
jne
cld
mov
jbe
gs
lods
mov
sub
inc
rcrb
sbb
add
dec
adc
mov
jg
mov
mov
hlt
add
lods
inc
ljmp
xlat
pop
add
mov
push
loope
lcall
and
add
sbb
in
sub
stc
sub
and
imul
mov
jno
fucomip
sbb
ud0
insl
cld
xor
and
and
sub
fistps
incl
xchg
push
add
mov
lock
fidivrl
jecxz
lahf
jnp
call
sbb
add
mov
in
dec
sbb
test
clc
push
push
adc
or
mov
dec
outsb
incl
ss
cmpl
dec
inc
test
mov
std
jb
adc
jmp
adc
add
cmc
or
xchg
inc
mov
and
mov
pop
popf
ljmp
inc
jl
xchg
mov
icebp
jle
call
f2xm1
mov
sbb
or
mov
mov
les
addr16
jbe
cli
xchg
stc
loop
test
xor
add
cmp
lds
lods
aad
jb
mov
add
cmp
mov
call
hlt
cmp
cld
mov
decl
out
dec
hlt
sub
jmp
inc
gs
cmp
enter
xchg
test
negl
insb
jmp
mov
mov
daa
inc
incl
add
or
jge
imul
mov
inc
and
or
popa
xchg
fisubl
lahf
xchg
roll
ljmp
adc
mov
lock
leave
ret
test
rcll
ds
out
sti
xchg
ljmp
inc
in
add
jg
add
push
pop
mov
and
aam
xchg
call
loopne
cmp
stc
mov
movsl
inc
mov
sbb
test
or
inc
std
jle
lods
fs
adc
mov
mov
mov
and
sbb
les
aam
and
inc
dec
ljmp
shlb
ficoms
fbstp
jmp
fsubs
loope
or
pop
nop
loop
push
icebp
fists
pop
push
xor
pop
adc
ljmp
mov
not
and
xchg
push
cmp
fiadds
mov
cmp
ret
mov
cmpsl
loopne
les
hlt
add
add
dec
pop
in
and
lcall
mov
jmp
add
insb
std
xor
ss
shlb
sub
outsl
cltd
cmpl
aaa
mov
popa
pop
imul
dec
push
std
push
lret
hlt
xchg
jmp
cmp
pop
movsl
cli
add
scas
jmp
jnp
loope
inc
push
int3
jg
jmp
mov
divb
adc
loope
pop
xchg
addl
add
addr16
add
pop
inc
dec
dec
call
fst
sub
xor
lcall
sub
stc
addb
call
sbb
cld
push
and
in
bound
sbb
mov
mov
fstl
jmp
lcall
and
test
ret
outsb
adc
shrl
test
xchg
jns
pop
jb
and
cmp
dec
xorb
sub
das
and
std
popa
jmp
inc
stos
push
sub
jmp
add
adc
or
stos
fsub
rcll
mov
jg
dec
stos
xchg
mov
mov
in
cmp
hlt
enter
pop
pop
jno
testl
xor
clc
push
sbb
cmp
mov
loope
xor
mov
bswap
dec
movsb
pop
add
sub
clc
inc
push
ret
xchg
dec
testl
pop
and
jmp
add
outsl
loopne
xchg
cmpsb
push
in
rorb
push
ds
clc
xchg
xchg
push
inc
dec
hlt
adc
outsl
inc
pop
sub
lcall
inc
push
xchg
ljmp
movsl
lret
sbb
adcb
aam
cmpsl
ficoms
ljmp
dec
movsl
xor
mov
adc
add
in
dec
shrl
sub
clc
fcomp
insl
lods
and
inc
mov
adc
cmp
cmc
rcrb
jg
xchg
andb
add
cmp
sbb
into
lret
pop
outsl
adc
or
and
sub
sub
push
inc
dec
std
mov
or
push
dec
or
lds
cmp
pop
aaa
mov
jle
jmp
ljmp
call
movsb
aaa
push
mov
pop
lcall
push
sub
js
and
inc
mov
cmp
or
add
jmp
adc
pop
jae
pop
ljmp
daa
repnz
outsl
shr
jmp
out
xor
xchg
fstps
hlt
add
sti
mov
add
in
and
das
clc
inc
xchg
mov
std
cmpsl
imul
iret
jmp
pop
cli
add
push
pop
or
iret
mov
cmp
and
cld
inc
push
rorb
ret
push
inc
push
fists
dec
nop
pusha
add
popf
mov
incl
lea
mov
sbb
fbld
icebp
inc
dec
test
push
mov
scas
das
movsl
pushl
arpl
popf
cmp
js
pop
and
movsl
mov
pop
lea
pusha
inc
outsb
pop
dec
cmpl
test
jae
ret
jge
movsb
jg
cwtl
fs
dec
incb
jg
add
sahf
sbbl
sub
xchg
enter
pop
mov
orb
jl
hlt
push
out
test
jp
or
fwait
xor
jmp
test
loop
mov
pop
dec
enter
sub
pop
add
das
fdivrs
loop
pop
xchg
fbstp
add
pop
ljmp
aas
xchg
mov
loope
inc
adc
daa
jns
jl
adc
sub
movsl
adc
mov
dec
ficomps
out
aas
and
decl
cwtl
sub
ja
div
hlt
and
mov
rorl
lds
xor
add
lods
push
es
and
mov
fs
outsb
push
clc
and
jne
or
das
scas
or
jle
jge
nop
and
in
out
test
lret
adc
or
das
jmp
push
mov
lcall
add
loop
js
and
pop
sbbb
mov
rorb
dec
mov
out
sub
cld
hlt
mov
inc
jne
jns
inc
movsb
mov
mov
outsl
or
decl
sahf
sub
enter
pushf
mov
lcall
decb
je
stc
insl
shll
cmp
inc
ja
incl
dec
jmp
cli
stos
or
jo
inc
or
mov
cmp
out
adc
lds
fwait
sar
leave
pop
nop
mov
call
jmp
adc
lds
clc
inc
rdseed
test
inc
hlt
mov
jnp
jle
cmc
jne
ret
cld
cwtl
popf
rorb
incl
shll
mov
adc
sub
je
fbld
imulb
sahf
sub
movsl
mov
inc
or
ffreep
cs
pushl
jle
add
call
out
nop
aas
pop
aam
idivl
or
mov
pop
test
ror
scas
test
dec
addl
inc
ficomps
loop
loop
cmp
imul
test
pop
xchg
sub
lock
stc
fwait
dec
pop
adc
jl
or
test
mov
inc
leave
pop
add
inc
pop
pop
clc
cmp
loop
push
fbld
ret
push
incl
lahf
addr16
and
pop
loope
fadds
mov
sbb
arpl
adc
jo
mov
je
and
loope
rcrl
mov
adc
rcl
xlat
jbe
and
add
lcall
fdivrs
in
call
movsb
stc
add
rcll
std
movsl
or
add
imul
loopne
pop
pop
add
dec
cs
inc
adc
push
loope
add
mov
xorb
stc
pop
add
pop
pop
lock
cld
fdivrs
movsb
dec
adc
jg
cmp
sahf
std
mov
pop
or
stos
pop
les
dec
loope
sub
cmp
mov
call
loope
int
fadd
xchg
xchg
test
out
mov
lods
xchg
cmc
in
leave
pop
icebp
sub
std
call
add
push
mov
loopne
add
int3
orl
call
sbb
cmpb
xchg
push
pushl
and
leave
xor
test
push
push
and
loope
and
lock
or
rclb
adc
ret
loop
mov
loope
call
std
int
shll
lcall
adc
call
fucomip
sub
add
in
push
test
inc
lahf
shr
or
mov
rolb
dec
pop
dec
inc
outsl
fcmovb
je
xor
cmpsl
inc
jle
or
clc
decl
push
mov
loopne
and
leave
xor
inc
jns
cmp
add
mov
xchg
sti
pop
mov
lods
out
pop
fs
adc
call
adc
mov
cmpsb
and
cmp
data16
aad
add
leave
or
cwtl
mov
mov
add
std
inc
lods
mov
sar
xchg
addl
cmpl
in
mov
cmp
mov
cmp
and
inc
lcall
sbb
inc
ss
das
ror
adc
incl
je
dec
and
cmpb
out
jl
hlt
out
push
push
lcall
cmpsl
add
pop
add
pop
mov
adc
sbbl
jno
fsubrs
jne
test
sti
inc
push
jmp
jnp
sbb
adc
add
dec
stc
icebp
ret
into
decl
in
scas
jne
test
out
mov
xor
xchg
dec
cli
inc
idivl
ret
mov
xchg
incl
ja
jmp
shrl
mov
decl
in
ljmp
mov
adc
adc
das
xor
cli
push
or
cltd
add
loopne
push
cld
push
lock
je
add
cmpl
outsb
cltd
pop
lods
sar
xor
jmp
push
push
add
cli
inc
fsubs
ljmp
inc
push
call
pop
push
ljmp
xor
inc
packssdw
fwait
pop
inc
cmp
sbb
scas
xor
test
adc
out
mov
ljmp
test
std
fdivs
and
aas
popa
dec
add
hlt
lods
sbb
call
out
push
decl
cld
in
es
mov
leave
mov
add
aad
jp
inc
pcmpeqw
dec
sbb
shlb
incl
push
sub
push
shrl
clc
outsb
subb
int
jmp
or
cltd
fbstp
dec
xlat
icebp
sar
mov
scas
mov
mov
pop
jle
daa
cmp
and
jne
jno
decl
test
mov
das
loop
add
cld
or
outsl
jnp
aaa
jmp
jne
popf
idivb
hlt
sub
and
idivl
sub
xorl
adc
pushf
sti
cld
mov
push
sbb
incl
adcb
adc
cmc
xchg
shll
or
inc
push
inc
les
pop
popf
fbld
data16
lods
lds
clc
mov
ljmp
jp
outsl
or
jl
pop
pop
fsubrs
lods
inc
call
or
ss
std
shrb
pop
or
shll
movsl
xchg
push
incb
inc
and
leave
jle,pt
fldcw
add
jae
cmp
in
dec
clc
jg
dec
std
jge
pushf
dec
mul
outsl
mov
xor
ret
mov
and
jne
cmovo
pushl
cmp
decl
jg
jmp
mov
call
inc
sbb
jecxz
cmp
add
imul
mov
sarb
xlat
xchg
inc
loop
mov
sub
pop
push
sbb
jmp
jo
movsl
das
hlt
aaa
pop
sar
jns
sbbb
sub
or
das
xchg
mov
add
adc
sbb
push
or
div
js
int
pop
adc
stc
nop
cmp
je
mov
sbb
sub
push
daa
or
test
pop
cld
sbb
inc
push
lcall
enter
mov
cwtl
xchg
and
pop
mov
int3
jae
andb
mov
pusha
sbb
and
test
or
les
lcall
lods
mulb
pop
jmp
cli
push
shlb
call
call
cmp
pop
aaa
ret
cli
sub
mov
adc
cmc
dec
xchg
int3
cmp
xor
sar
add
add
pushl
cmp
in
fs
incl
adc
xor
push
inc
lcall
insb
adc
push
xchg
dec
orb
lods
movsl
in
cmp
test
mov
ljmp
and
mov
mov
add
cmpsb
sbb
push
ds
test
in
sub
sti
and
loop
jg
je
insb
sub
imul
outsl
test
scas
sar
mov
dec
sbb
cmp
daa
jne
in
andb
xchg
mov
dec
scas
lret
mov
jp
mov
add
push
add
pop
jmp
mov
mov
rclb
hlt
add
inc
lods
dec
repnz
jmp
adc
dec
sti
je
xchg
cmp
push
adc
ds
mov
mov
push
ja
or
std
jns
adc
or
adcb
pop
movsl
ljmp
adc
sbb
pop
out
mov
pusha
cwtl
shll
jnp
hlt
jb
enter
dec
add
icebp
push
jo
mov
push
adc
add
outsl
jmp
mov
mov
outsl
jecxz
dec
out
enter
add
xchg
cli
fs
jnp
sub
mov
adc
and
pop
or
adc
fbld
fisttps
incl
pop
xchg
das
and
arpl
call
jae
push
and
adc
or
sbb
push
push
outsl
movsb
fwait
pop
cmp
pop
test
mov
test
xchg
add
sbb
jp
sub
mov
fisttpl
pop
shlb
jne
sarb
std
nop
pushf
sub
sub
jmp
xchg
cmpsb
push
cli
jnp
add
cmp
lcall
incl
loop
stc
ds
mov
adc
std
push
adc
xchg
jmp
inc
lea
jg
into
or
lahf
aas
incl
ljmp
add
dec
test
push
call
loopne
hlt
std
popf
xchg
lcall
or
pop
mov
loop
jmp
pop
ds
les
add
mov
xor
cmp
adc
sbb
pushf
mov
add
mov
xchg
jae
push
pushl
pop
push
shlb
mov
add
in
lds
push
stos
xchg
cld
shr
in
dec
test
outsl
rdtsc
push
lahf
incl
jbe
or
sahf
inc
sar
push
add
cld
adc
xor
pop
dec
jg
push
icebp
negl
push
xchg
mov
mov
xor
test
lods
jno
lods
outsl
cmp
fidivl
int3
data16
incl
test
add
pop
movsb
scas
dec
loop
inc
in
sub
cli
add
outsb
jbe
add
dec
jmp
call
xchg
pop
xor
jno
outsb
lcall
ljmp
cld
pop
adc
push
push
ud0
inc
jg
std
sbb
jle
popa
outsl
mov
mov
sbb
push
scas
pop
xchg
mov
call
xchg
clc
les
mov
andl
xor
stos
mov
jmp
jmp
arpl
sbb
dec
pop
lret
jg
mov
aas
int3
inc
idiv
ss
dec
pop
push
sub
std
cmp
xchg
movsl
popf
cmp
mov
clc
aas
icebp
flds
cmc
cmp
pop
jne
icebp
das
movl
jecxz
adc
clc
repnz
loop
xlat
mov
jl
das
std
cmp
mov
xchg
and
pop
mov
jp
cmc
test
push
jnp
dec
movsb
inc
mov
add
sub
and
sbb
addb
roll
mov
cld
push
lock
add
push
push
add
cmc
inc
stos
sub
sub
jmp
jno
lds
mov
or
movl
je
iret
cmp
enter
aam
jmp
cmp
ds
mov
mov
ret
xchg
pop
sub
mov
pop
repz
push
push
jno
cmp
aas
mov
clc
xchg
xor
cli
lods
lea
cltd
xchg
and
sbb
pop
in
nop
mov
jg
sbb
js
shrb
push
aad
xor
cli
xlat
or
daa
push
popf
dec
mov
jl
adc
enter
lret
scas
push
fwait
push
negl
movsb
or
or
push
outsl
rorb
cmp
and
mov
jne
lods
cmp
add
sbb
inc
mov
push
push
decl
cmp
inc
pushl
cs
mov
or
cwtl
add
adc
mov
pop
mov
add
add
pushf
out
aas
adc
std
clc
adc
call
mov
cmpsl
cli
es
pop
lods
mov
iret
jg
les
pop
sbb
inc
adc
jbe
mov
not
stos
cmp
mov
push
mov
pop
pop
fdecstp
mov
push
cmp
push
int3
xchg
test
loopne
lcall
clc
imull
and
nop
sbb
jnp
and
mov
inc
gs
adc
test
clc
aam
testl
int3
ljmp
lock
fwait
loopne
dec
cld
out
adc
cmp
sub
jne
or
fnstcw
mov
adc
sbb
dec
out
and
or
fisubs
pop
adc
xchg
js
xchg
push
mov
loop
lock
add
sahf
faddl
xchg
cmp
dec
and
mov
sbb
cmp
dec
jmp
add
adc
add
fadds
pushl
add
clc
call
push
add
out
or
mov
adc
push
sbb
shl
pop
jo
je
repnz
push
xorl
stc
dec
dec
cmc
dec
repz
xor
sbb
add
push
cli
shrb
sbb
sub
add
test
fimull
pop
push
jp
cwtl
xchg
cmpb
aaa
rcrb
test
mov
adc
push
aaa
and
movsl
lcall
inc
pop
dec
pop
dec
cmp
dec
jle
jbe
flds
xor
bound
push
add
add
fildl
sti
incl
cmpsb
xchg
cmp
mov
xor
mov
push
cltd
lock
inc
push
aam
test
scas
dec
sar
cmp
push
jmp
inc
add
inc
or
or
jmp
and
inc
std
lcall
enter
jl
cmp
addl
sbb
add
daa
notl
mov
fists
adc
mov
cmp
mov
inc
inc
xchg
cld
pop
sub
hlt
sbb
inc
push
push
ljmp
pop
and
inc
data16
stos
mov
mov
or
les
bound
das
pop
lcall
cmpsl
in
push
mov
fadds
or
lret
jmp
jl
into
mov
jae
adc
std
movsb
sbb
mov
js
mov
push
andb
pop
pop
std
test
jno
mov
or
push
addr16
pop
xchg
sbb
fdivr
pushl
out
and
mov
call
jmp
fadds
jmp
mov
imul
icebp
mov
sar
das
in
mov
lcall
outsb
lret
test
cmpsb
jmp
insl
call
std
cmc
lods
fildl
jmp
loopne
lret
fs
outsl
dec
test
adc
sub
cld
xlat
lret
in
sbb
sub
xchg
jl
hlt
jmp
cld
in
out
dec
mov
pop
out
add
pop
jnp
mov
in
stos
add
sub
shl
sbb
push
pop
shlb
inc
pop
mov
rcrl
adc
push
movsb
cmc
das
jecxz
jb
lcall
cmp
inc
lcall
nop
pusha
lods
adc
pop
aam
dec
add
rcl
or
xor
mov
sbbl
cmp
orb
add
in
aaa
lret
dec
add
fs
sar
fsubrl
insl
inc
inc
decl
push
shl
mov
mov
mov
adc
mov
or
repz
mov
add
test
jmp
sbb
xchg
mov
cmp
pushl
jne
add
icebp
mov
ret
add
xchg
incl
pop
or
out
push
dec
lock
push
jmp
int3
mov
mov
jp
sub
pop
loopne
mov
js
outsb
sahf
clc
or
fcomps
sub
sbb
pop
mov
inc
inc
add
js
das
cmp
add
jae
xchg
jns
xchg
xor
cld
out
jmp
adc
fwait
and
lods
popa
ljmp
les
cld
push
ss
mov
jmpw
push
lret
out
mov
repz
xchg
out
push
cmp
ss
les
adc
repnz
push
mov
or
pop
jo
mov
test
idiv
outsb
shlb
mov
push
add
es
das
and
ud2
cltd
xchg
out
lds
add
mov
inc
xor
test
push
mov
decb
pop
sahf
dec
xchg
xchg
outsl
stc
mov
dec
clc
dec
mov
call
adc
push
pop
cmp
popf
mov
mov
ja
or
jbe
das
dec
in
ficomps
adc
add
test
xchg
push
mov
xchg
mov
cmp
push
adcl
cmpsb
testb
add
fimuls
dec
and
ss
jg
rcr
push
pop
inc
cmpl
mov
dec
jecxz
or
sar
jg
or
or
lahf
jbe
pop
les
cwtl
push
pop
cmc
scas
cmp
rcl
add
jg
or
imul
push
sub
incl
jmp
dec
call
rclb
mov
je
sub
dec
and
jle
fwait
inc
push
cmp
sar
mov
ret
loope
in
inc
inc
mov
dec
movsl
outsl
icebp
mov
mov
sar
adc
aaa
mov
hlt
test
cmp
int3
sar
cmp
mov
mov
and
loopne
dec
add
push
leave
stc
jecxz
mov
orb
xor
sbbb
loopne
push
cmpsb
sbb
or
xchg
mov
and
jg
aam
xchg
in
push
hlt
ja
xor
add
or
sbb
nop
or
jbe
incl
sbb
cmp
ljmp
incl
data16
mov
push
addl
hlt
add
icebp
outsl
jmp
leave
data16
idivb
call
inc
cmp
add
cld
dec
sbb
out
sbb
sbb
or
sub
icebp
rcll
test
dec
call
rclb
jge
mov
call
repz
pop
pop
ja
clc
int3
in
incl
into
adc
std
or
mov
aad
inc
pop
add
clc
push
mov
xor
or
inc
out
dec
int
fbstp
stc
jge
inc
sbb
xor
test
xchg
movsl
stos
adc
mov
adc
outsl
nop
mov
mov
mov
decl
inc
or
orl
nop
push
cmp
jp
pop
bound
mov
mov
les
cmp
decl
mov
sbb
cs
sbb
cmpsb
test
rclb
and
push
dec
aaa
pop
inc
lock
and
pop
in
jne
adc
ss
dec
sbb
ljmp
fsts
mov
imul
add
and
fisubrl
in
loop
pop
xchg
aam
das
movsb
or
jo
aas
movsb
mov
call
adc
shlb
fdivl
aas
pop
pop
cmp
cmp
adcb
incl
fcomi
stos
add
jg
dec
hlt
lods
mov
or
cs
or
cmp
mov
loop
jae
mov
nop
aam
pop
mov
mov
ljmp
test
or
jmp
jl
add
adc
push
cli
xchg
jb
push
into
xchg
ds
and
pop
aaa
lret
push
in
test
sub
dec
cmpsb
insb
inc
mov
rclb
xchg
jne
daa
int
and
sbb
adc
jp
dec
les
add
jnp
ss
or
push
add
decl
subb
enter
jp
mov
cmp
push
jmp
movsb
sarl
jne
lds
mov
jo
call
in
movsb
incl
rcrb
cwtl
sub
mov
or
maskmovq
notl
jmp
bndldx
cmp
mov
add
sub
push
pushl
ret
cmc
add
pop
inc
das
inc
jne
mov
xor
xchg
call
cmpsb
mov
push
push
decl
mov
aam
dec
mov
add
jno
pop
int
call
imul
jg
jmp
add
mov
cmc
test
sub
or
lock
or
in
stos
cmp
mov
mov
jb
dec
testb
cwtl
test
mov
call
call
add
sbb
pop
mov
loop
or
mov
test
cmp
push
or
mov
add
xor
loopne
std
stos
ret
push
adc
sub
gs
or
fildl
hlt
incl
or
push
call
sbb
add
xchg
cmp
sbb
fidivs
lock
pop
jmp
sub
sbb
mov
std
bound
roll
dec
imul
mov
lcall
mov
mov
mov
hlt
push
push
xchg
fs
mov
sub
push
lea
adc
push
rorl
fcmovnu
jae
and
iret
sarl
jg
dec
call
testl
addb
out
mov
push
sub
pusha
cli
jle
arpl
lret
incl
cld
sbb
adc
xlat
ds
notl
push
paddb
sub
mov
popa
add
repnz
mov
lods
rolb
or
jb
lea
adc
xchg
mov
or
pop
hlt
mov
out
mov
mov
cmp
pushl
mov
scas
push
push
fcos
sbb
addr16
jmp
xor
jns
decl
and
loopne
pusha
sar
sbb
stos
push
or
fdiv
sub
mov
lods
mov
add
out
mov
jl
push
sbb
shrl
mov
outsb
dec
loopne
xchg
add
addl
add
shrb
add
lock
fdivrs
add
int3
pop
add
ja
pop
sbb
jbe
dec
out
cs
test
cmpsl
or
imul
shrb
mov
gs
lock
mov
xchg
and
incl
fcom
push
cmc
or
jge
or
rcl
mov
mov
xor
add
adc
mov
add
add
or
insb
cwtl
pop
das
fdivrs
jne
popl
outsl
cld
rcll
add
rolb
or
xorl
out
stos
add
std
mov
dec
pop
mov
add
mov
in
mov
lock
fldl
shrl
loop
or
outsl
fnstcw
lcall
cltd
jno
cltd
add
jmp
jmp
add
in
ljmp
mov
and
sub
jecxz
adc
aaa
fldcw
adc
stos
add
jne
sbb
xor
loop
jmp
push
xchg
cld
aam
notb
pop
dec
aad
call
mov
scas
add
fdivr
imul
out
inc
add
outsb
sbb
mov
jo
jmp
jae
jb
pushl
loope
cmp
dec
and
xchg
sbb
fdivrl
data16
popa
add
pop
mov
xor
incl
xchg
adcb
mov
je
arpl
ss
loop
mov
lret
xlat
mov
loopne
les
hlt
sub
cmp
mov
lcall
dec
sbb
adc
push
icebp
mov
xchg
inc
mov
push
add
clc
dec
mov
out
mov
mov
inc
xor
call
or
ret
enter
fistps
leave
das
rcrl
cli
pop
sub
out
jno
dec
sbb
inc
push
cs
xor
push
scas
mov
push
sahf
add
out
outsl
jge
or
call
push
cmp
push
ret
sub
lods
leave
jmp
in
incl
jl
mov
sahf
call
xor
decl
jo
mov
decl
inc
cwtl
jns
sahf
sbb
adc
shrb
gs
ljmp
je
lock
jae
or
push
jb
pop
add
dec
mov
add
ret
mov
cs
jle
inc
out
inc
adc
push
js
inc
xor
push
icebp
pop
cmp
adc
mov
push
push
sub
and
or
mov
push
and
fstpl
push
inc
mov
push
and
incl
add
dec
adc
mov
adc
push
pop
inc
in
jmp
adc
dec
jae
in
push
adc
rcrl
mov
imul
call
data16
jns
mov
adc
pop
push
inc
scas
icebp
mov
pop
in
insb
fiadds
daa
dec
cmp
out
push
jo
mov
xor
lret
gs
inc
es
ljmp
ror
inc
add
mov
arpl
ret
lcall
mov
add
mov
stos
dec
aad
lds
or
inc
pop
xchg
fildl
mov
inc
xchg
cld
xor
das
sbb
adc
out
cli
mov
push
mov
aaa
adc
aam
leave
outsb
gs
mov
dec
or
mov
jmp
out
add
insb
add
push
or
mov
mov
out
decl
sar
gs
ljmp
repz
test
sbb
enter
and
adc
mov
inc
jno
mov
clc
and
mov
addb
pop
ds
or
cmp
mov
adc
stos
ljmp
mov
inc
in
mov
adcl
push
das
sahf
adc
test
aas
inc
add
pop
mov
and
xchg
mul
jmp
outsb
cmpl
jne
pop
mov
jg
insb
or
or
pushl
mov
add
addl
insl
mov
cmp
push
int3
mov
fimuls
pop
loop
pop
daa
pop
or
sub
outsl
pop
emms
push
fdivs
push
mov
lds
inc
out
mov
xchg
xor
or
femms
adc
and
sbb
add
cwtl
cs
pop
xlat
shl
add
mov
mov
mov
xor
jp
add
sub
nop
cmp
pop
mov
fs
xchg
fdivrs
loopne
xchg
dec
out
push
shl
test
xor
mov
scas
mov
shrb
mov
inc
sub
sbb
mov
cltd
call
cmp
test
add
imul
add
loopne
fnstsw
fbstp
xlat
inc
loope
fucom
add
loop
jecxz
shlb
sti
adc
aam
xor
mov
cld
cmp
mov
test
mov
pop
ljmp
or
mov
push
sbb
mov
cmp
subb
cmc
aaa
rsqrtps
cmp
dec
inc
test
es
dec
insl
aaa
sbb
pop
mov
iret
call
lods
dec
inc
jmp
sar
testl
push
adc
mov
xchg
stos
and
pop
sbb
das
fnstenv
fsub
call
jmp
ficompl
out
loopne
les
movsb
mov
insb
mov
xchg
aas
xchg
addl
out
repz
scas
scas
mov
aaa
iret
mov
les
sar
repnz
ljmp
repz
loope
sarb
icebp
call
mov
mull
pop
aad
in
dec
dec
push
dec
out
movl
mov
icebp
xchg
push
nop
orl
fistpll
cwtl
insl
jo
push
je
add
imul
push
dec
add
adc
inc
push
push
insb
loop
out
pop
movsb
pop
mov
ljmp
pop
pop
in
aaa
push
push
fdivrl
js
xchg
insl
popa
and
imul
insl
in
add
cmpsl
cmp
add
sbb
push
cmp
pop
or
loopne
push
pop
subl
lret
aas
jae
mov
push
enter
jo
or
js
sahf
jmp
in
out
fimuls
ljmp
xchg
out
add
add
andl
add
mov
pusha
jno
push
outsl
les
clc
xchg
lcall
out
ljmp
std
add
pop
xchg
mov
ds
call
cmc
pop
push
icebp
outsl
inc
jmp
test
shll
jno
mov
sbb
pop
lret
test
out
fidivl
pop
test
pop
cld
cli
fldt
fcompl
sbb
or
add
pop
movsl
shlb
mov
lods
in
mov
loopne
or
jmp
lea
cmp
xchg
or
pop
add
pop
cmp
popa
aaa
sub
add
ja
aam
mov
sub
cwtl
mov
inc
out
xchg
out
nop
pop
in
sarb
xchg
adc
fdivrs
decl
push
jno
shrb
pop
mov
pushl
pusha
mov
lcall
dec
mov
push
mov
jo
or
push
push
std
push
push
mov
mov
mov
jo
int3
pop
orb
xor
lahf
mov
add
xor
movsb
add
pop
stos
inc
decb
ljmp
clc
shrb
mov
sbb
inc
push
inc
add
jl
sarb
js
fcompl
lea
cld
pop
ret
jbe
out
das
cmp
add
fiadds
outsl
sar
jmp
clc
movsl
fdivrp
mov
test
cltd
mov
lcall
mov
jmp
pusha
jmp
movsl
pop
adc
pop
jb
fucomi
jge
fcos
jecxz
adc
cmp
add
push
bound
jns
jge
cltd
jg
xchg
test
mov
pop
in
mov
insb
jo
add
sub
mulb
popf
outsl
fs
jmp
shr
jae
stos
int
mov
xor
jno
push
out
incl
add
jmp
in
pop
adc
clc
gs
out
pop
out
es
sbb
jo
pop
push
inc
pop
shll
push
mov
pop
aaa
adc
cltd
test
dec
inc
in
jle
mov
popa
sbb
loopne
sahf
dec
test
cmp
and
cmp
sub
mov
inc
ror
push
push
lock
pop
in
mov
jmp
jmp
pop
rolb
mov
les
jne
icebp
push
sahf
insb
lods
inc
or
movsb
mov
aaa
cmp
add
test
dec
jp
inc
fldenv
xchg
xlat
cmp
fsubrl
ljmp
lods
mov
int3
pop
cli
mov
sbb
mov
in
in
push
iret
f2xm1
pop
in
lods
inc
lcall
call
sub
add
jmp
push
mov
xor
adc
mov
gs
fcompl
fstl
movsb
decl
mov
jg
fsubl
ret
shlb
loopne
xchg
xchg
lcall
sbb
push
hlt
xchg
cmpsb
loop
outsl
out
lahf
out
icebp
decl
mov
decl
aad
push
cli
shll
rol
pop
mov
outsl
jae
fstpt
jb
call
xor
aaa
mov
sbb
lods
iret
aad
std
lahf
dec
loop,pt
hlt
sbb
repnz
jg
into
arpl
xor
fwait
push
or
and
add
mov
xchg
mov
cltd
mov
cmpsb
idivl
mov
addl
call
aam
aad
loopne
out
shl
jo
das
inc
mov
loopne
dec
push
stos
pop
add
cs
pusha
jb
add
stc
clc
fs
cld
adc
aaa
jmp
inc
xchg
xchg
xor
nop
push
aad
popa
cmpl
dec
decl
pop
and
add
jecxz
sub
push
insb
lods
jp
aas
movsb
incl
jae
push
stos
xorl
jg
mull
sbb
ret
out
leave
lret
mov
mov
and
aaa
xor
hlt
loope
cmp
je
fiadds
inc
ret
mov
enter
add
popa
cltd
lcall
jns
cli
inc
mov
in
dec
fbstp
adc
or
hlt
add
sbb
scas
push
push
stos
and
jns
in
mov
mov
loop
jo
or
jmp
stos
mov
cmp
and
pop
dec
jnp
dec
inc
inc
jmp
add
jo
inc
ja
je
pop
out
and
sbb
inc
dec
mov
addb
cmp
add
and
lods
mov
mov
push
test
mov
std
add
mov
add
add
es
mov
mov
xor
pushl
push
rcrb
sbb
push
xor
jbe
xor
jge
cmp
lods
adc
add
sbb
push
push
dec
inc
mov
outsl
out
mov
clc
jecxz
lcall
ret
mov
cmp
xchg
ret
add
pop
loop
fs
lds
or
cmp
mov
pop
cmpl
and
xor
mov
mov
mov
loope
jae
mov
dec
xchg
mov
test
mov
ja
mov
fucomp
out
fstpt
xchg
dec
incl
sar
jecxz
fildll
inc
mov
int
cmc
mov
rolb
xor
incl
call
cmpsl
test
arpl
lcall
inc
pop
adcl
lock
sub
cmc
xor
add
icebp
mov
mov
dec
je
aad
add
test
in
cmc
jmp
adc
call
aad
mov
sbb
scas
mov
xor
mov
cmp
add
and
jmp
mov
call
dec
test
loopne
pop
xor
inc
push
jg
and
cwtl
xchg
push
pushl
lock
call
push
inc
cld
lcall
ret
sub
stos
pop
dec
xor
add
js
repnz
je
jmp
out
mov
pop
ja
mov
cmp
mov
pushf
xchg
add
sar
lcall
sub
push
and
icebp
mov
jp
js
jbe
add
mov
addb
mov
seta
aas
ljmp
iret
in
les
les
mov
arpl
xor
xchg
mov
fwait
dec
std
jle
mov
sbb
aas
ljmp
sub
push
inc
jecxz
or
call
sbb
pop
ja
fadds
jo
fldt
dec
stos
dec
and
push
outsl
test
mov
les
pop
mov
jl
lds
mov
rcrl
inc
leave
inc
test
mov
lock
mov
out
push
out
decl
fbstp
push
push
mov
xlat
int
add
lret
aam
test
mov
lcall
pop
sub
dec
or
inc
push
inc
inc
cmp
cmp
cmp
out
addb
push
or
push
mov
out
sbb
nop
xchg
ror
and
push
movb
std
filds
or
push
subl
sbb
sbb
pop
mov
add
cld
ljmp
push
mov
in
jmp
pop
push
mov
insb
mov
fwait
vshufpd
pop
mov
dec
arpl
mov
insb
ret
stos
stos
add
aaa
loope
jno
and
out
xchg
movsb
insb
or
xchg
jg
lahf
push
xchg
leave
pushl
adc
lret
int3
mov
add
sub
pop
cld
dec
mov
pop
popa
idiv
xor
ds
cmp
shl
subb
aaa
les
stos
outsb
call
push
sub
jne
xchg
stos
jg
in
shrl
shrb
cwtl
pop
jmp
loop
rol
and
jmp
pop
mov
jnp
loop
push
dec
call
sti
jo
data16
or
mov
sti
push
ja
pop
sarb
fldenv
add
xchg
mov
mov
into
xchg
ljmp
fbstp
add
jmp
pop
int3
lods
push
mov
int
dec
cmc
add
fcoms
push
xor
push
out
lahf
imul
in
cmc
add
data16
push
rolb
mov
in
jle
aam
and
faddl
pushl
adc
lods
out
clc
or
outsl
mov
std
push
push
jnp
dec
adc
mov
ret
xor
mov
cld
shlb
das
mov
and
call
sbb
and
lret
mov
lods
sbb
stos
call
push
jl
hlt
jae
xor
jmp
mov
mov
aad
movsb
mov
pushf
and
cli
rclb
push
std
add
sbb
push
ret
das
xor
dec
jle
add
clc
ds
mov
cmp
iret
in
incl
ds
lods
ljmp
add
jmp
push
loopne
rolb
call
sub
popf
sahf
add
push
sub
xchg
aad
jg
xchg
insl
je
mov
sub
push
movsl
push
jle
pop
add
cmp
add
dec
pop
jle
loop
push
out
roll
mov
jno
dec
or
data16
mov
adc
and
add
lock
es
inc
sbb
rclb
push
xor
sarl
lret
dec
sub
call
fsubl
jb
add
jae
or
cwtl
jb
imul
pop
push
pop
push
test
lods
push
adc
fdivrs
data16
subb
call
and
adc
xchg
inc
jae
ja
add
addb
arpl
mov
cs
push
adc
mov
and
lods
sub
sbb
mov
outsl
xor
mov
dec
fdivrp
cmpsb
cmp
add
cmc
jne
clc
fsin
sbb
fs
lods
cld
rolb
and
std
mov
ja
lods
popl
mov
mov
sbb
xor
enter
addl
add
pushl
out
push
or
push
jmp
rorb
adc
dec
clc
adc
mov
inc
jno
lret
decl
jmp
push
std
inc
shl
cmp
xor
stos
lock
jo
cmc
sbb
mov
fiaddl
int3
aad
pop
mov
add
and
sbb
aaa
lods
xor
mov
adc
mov
dec
cmp
inc
addl
call
data16
mov
push
push
das
out
mov
and
jo
jbe
out
push
pop
incl
pop
test
lcall
das
fadd
ja
mov
sub
lea
push
daa
enter
lcall
sub
jmp
add
or
call
call
push
xor
push
out
pop
or
inc
fsubrl
mov
pop
lret
loopne
test
inc
jge
mov
icebp
stc
and
adc
dec
movb
jmp
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
or
mov
scas
decb
mov
jg
loope
sbb
xchg
orl
int3
pop
lods
lcall
sub
sbb
inc
clc
push
jns,pn
pop
lcall
jno
into
sahf
xchg
pop
mov
mov
fsubrl
sti
cmp
std
adcb
mov
add
and
sub
movsl
mov
jl
or
icebp
stos
outsb
add
sahf
fs
jmp
or
fcmovnu
rolb
or
decl
or
cmp
jns
pusha
pop
je
dec
movsb
std
pop
adc
ljmp
shll
es
mov
ds
flds
xchg
cmp
in
lcall
out
add
push
pop
mov
xor
ror
fists
jne
push
call
or
adc
loopne
adc
outsl
add
jb
add
jge
rcl
adc
das
fadds
aaa
xor
in
mov
ss
mov
inc
push
xchg
aad
dec
adcb
rorl
call
je
add
push
pop
mov
sbb
jg
icebp
mov
insb
hlt
push
sti
add
mov
test
ds
int3
inc
push
pushf
and
inc
mov
jmp
loope
incl
int
filds
xor
cli
leave
lret
cli
pop
add
out
loop
mov
incl
loope
jecxz
adc
bound
cmc
rep
roll
loop
inc
sbb
fisttps
mov
jb
mov
out
idiv
sahf
add
jae
popa
jne,pt
hlt
movsl
xchg
std
cmp
fs
out
das
popa
out
lret
jle
sar
push
insl
jmp
sbb
and
leave
cwtl
jne
sbb
pop
sub
cmc
jae
cwtl
or
loope
mov
push
std
bound
jb
cmp
ljmp
cmpsb
xchg
sub
cwtl
add
or
xchg
cmp
sbb
call
push
outsl
call
sbb
mov
push
xchg
clc
or
xor
mov
push
sbb
stos
lods
fdivr
inc
int3
add
das
push
or
shrb
fistps
lret
pushl
or
add
pop
in
jle
jle
andb
sbb
push
adc
jg
das
into
clc
jo
incl
xchg
loope
cmp
movswl
inc
push
test
dec
clc
mov
dec
scas
ret
aas
loop
push
fildll
add
mov
or
jge
push
mov
push
je
cli
add
sub
sahf
das
pop
movsl
sub
lcall
cmp
rolb
mov
mov
xor
clc
sub
add
xchg
and
push
sar
cltd
test
mov
add
mov
insl
push
subb
test
adc
adc
sahf
jmp
mov
dec
dec
push
dec
cmpsb
sbb
jg
sar
pop
lds
xchg
rorl
ljmp
jg
jle
in
and
xor
or
sub
sar
xor
inc
cmp
or
cli
adc
and
lock
push
mov
pop
add
xchg
aad
lcall
imul
clc
test
mov
inc
std
movsl
mov
ljmp
adc
dec
xor
sti
incl
incl
pop
fldenv
mov
cwtl
mov
push
sub
push
push
mov
decl
lods
pop
movsl
movsl
fwait
adc
sub
in
stc
das
push
pop
ja
push
adc
test
xor
dec
mov
push
outsl
push
imul
fnsave
shlb
sub
loope
lcall
aaa
sbb
jmp
push
jo
push
cmp
cld
mov
mov
sbb
cmp
cli
mov
fs
sbb
pop
les
mov
aas
push
adc
test
mov
and
push
cmp
push
psubd
pushl
pop
aam
lea
mov
not
scas
cld
mov
leave
xor
push
sbb
adc
testb
aam
lock
fsubs
testl
in
test
daa
incl
not
sbb
call
mov
pushl
xchg
roll
mov
pop
aam
inc
push
stos
dec
fistps
movsl
xor
nop
or
ljmp
fists
inc
mov
outsb
cs
loop
jmp
mov
xchg
mov
lcall
mov
outsb
or
testb
call
adc
jecxz
aam
sbbb
outsl
or
cmp
inc
add
cmc
cmp
clc
push
mov
pop
mov
movsl
jg
les
ljmp
shrl
dec
lea
test
cmp
incl
sbb
repnz
sbb
adc
dec
movsl
cmp
dec
push
loope
xor
decb
push
adc
xor
in
in
xor
push
ljmp
scas
xbegin
test
sub
jmp
in
lret
repnz
jno
pop
in
pop
shlb
das
xchg
lock
hlt
push
sub
pop
adc
sub
ljmp
push
push
dec
arpl
xor
cli
les
scas
shlb
jne
mov
push
mov
jo
add
rep
mov
decl
cmpsl
data16
mov
jge
pop
ss
jmp
push
lea
cli
std
sarl
push
push
jmp
mov
add
aaa
call
outsb
push
mov
cmp
das
movl
sbb
mov
mov
add
popa
pop
dec
lcall
push
fcoms
add
fldcw
std
and
loopne
inc
pop
inc
sub
add
test
cmp
push
aad
mov
or
call
xchg
xor
push
lods
cld
sbb
cmp
lods
adcb
hlt
pop
lret
aam
outsl
mov
mov
xchg
test
xchg
lea
fnstenv
add
push
and
popf
mov
mov
int3
add
int
popf
aad
sub
or
add
push
mov
cmc
mov
nop
mov
orb
dec
mov
xor
shrb
push
mov
pop
jnp
add
ficoml
ffree
loopne
lods
jno
lea
jmp
push
lcall
sti
dec
ja
sbb
cmp
rolb
out
fiaddl
mov
adc
mov
aaa
dec
faddl
add
push
test
filds
ljmp
push
pusha
test
jg
xor
sub
in
cli
push
mov
cmpl
mov
mov
fiadds
clc
push
jg
jge
incl
insl
inc
lret
jecxz
mov
call
aam
and
cmp
or
cltd
daa
mov
ror
push
cmpsb
ljmp
push
ljmp
or
pusha
in
cmp
pushl
pop
inc
push
or
push
decl
mov
je
cmp
leave
adc
or
push
outsl
fdivrl
mov
mov
sbb
call
hlt
pusha
or
icebp
cmpsb
in
xchg
bnd
mov
cmp
cvtps2pi
cmpb
xor
shl
fistpll
ljmp
dec
das
cmp
add
push
xlat
cmc
stc
dec
adc
inc
jae
or
sub
cmp
ljmp
pop
incl
shlb
mov
mov
push
cli
cmp
shll
cli
sub
lret
ret
pop
into
loop
incl
add
testb
fsub
or
sbb
mov
cmp
leave
mov
es
aam
mov
push
mov
sbb
jge
dec
cmp
and
cmp
aam
inc
push
xlat
pop
xor
sar
push
mov
mov
idiv
xor
or
pushl
pusha
adc
pop
clc
jmp
and
adc
pop
stc
ja
adc
cli
decb
push
test
mov
andb
cmc
jge
lods
cmp
dec
sti
cltd
inc
sub
add
daa
xor
inc
push
loopne
call
pop
or
jg
jae
mov
push
decl
add
jo
subb
push
push
cmp
in
js
inc
mov
sub
pop
sbb
adc
push
xorb
test
dec
dec
pop
jb
inc
leave
cld
aas
stos
xor
pop
cmp
jmp
mov
pop
lock
iret
out
sub
pop
insl
shll
mov
leave
loope
sar
addr16
cld
icebp
pop
fwait
ljmp
shr
cmp
add
enter
add
pop
xchg
rcrb
xor
adc
arpl
sub
lods
push
adc
es
inc
inc
sbb
pop
jns
in
mov
jg
jmp
fs
push
sbb
ud0
jle
sbb
jmp
or
adc
cmc
ret
outsl
dec
mov
out
loopne
hlt
xor
call
rclb
popf
pushl
adc
test
ja
pop
jg
out
popf
imul
and
dec
daa
xchg
xor
inc
push
enter
sub
dec
pop
cltd
sbb
xchg
ljmp
fsubl
xchg
mov
add
outsl
jb
mov
xchg
xchg
push
insb
call
enter
inc
fs
repz
xchg
inc
push
test
arpl
pushf
pop
pusha
outsl
jle
insl
add
inc
imul
or
or
insb
pop
sbb
mov
bound
xchg
dec
ja
xlat
jmp
cld
scas
lock
xchg
mov
sub
lret
xor
mov
incl
addb
movzwl
mov
xor
fcom
in
adc
jae
mov
cs
imul
test
lods
push
movsb
mov
dec
adc
stc
push
inc
xchg
sbb
mov
mov
sahf
gs
js
inc
push
ds
out
incl
mov
sub
pop
add
push
inc
dec
outsl
decl
pop
fs
es
fldcw
inc
sbb
lds
orl
lahf
sti
ret
stos
xlat
fdivr
mov
jl
lret
decb
mov
filds
mov
in
lret
jbe
mov
mov
jne
sub
rorl
lods
aam
ret
xchg
mov
dec
imul
mov
rorb
je
orb
movsl
pop
mov
rcll
jne
in
daa
jg
push
call
dec
incl
dec
add
inc
add
xor
add
push
je
push
push
loopne
mov
sbb
bnd
clc
cmpsl
mov
and
mov
ret
movsb
aam
pop
inc
cs
daa
test
das
sub
je
cmp
mov
adc
jge
pop
mov
ret
adc
cmp
mov
sar
add
cli
int3
jne
jmp
lahf
sub
add
daa
sbb
cld
cld
hlt
les
cwtl
adc
jo
push
enter
xchg
inc
bound
inc
fcompl
adc
fmuls
inc
test
mov
int
jecxz
push
or
adc
test
das
loope
dec
aas
or
into
jle
dec
das
fwait
or
bnd
sahf
js
xchg
mov
call
add
outsl
add
push
mov
pop
push
test
and
cld
mov
aaa
outsl
arpl
add
decl
dec
pop
jecxz
in
hlt
loop
sbb
sub
push
lret
pop
enter
sti
movsb
aaa
pop
mov
push
les
incl
push
sub
js
xor
jb
pop
inc
lods
or
hlt
push
sub
xchg
adc
jo
clc
ss
mov
cltd
or
inc
lods
jg
sub
inc
mov
adc
ret
loopw
mov
sub
mov
xor
xchg
mov
call
jnp
imul
xor
loope
inc
sbb
movsb
mov
loopne
inc
jnp
push
cmp
fdivs
mov
mov
std
mov
mov
cmp
aam
mov
mov
outsl
dec
inc
add
mov
sub
jne
lods
sub
repz
rolb
pushl
inc
mov
ret
incl
sub
cltd
xor
or
decb
and
sub
mov
pop
std
and
dec
fiadds
cmp
call
mov
add
mov
repz
sbb
pop
or
mov
mov
sarb
jno
jl
jmp
testl
lea
mov
mov
add
lea
nopl
ret
movsl
jno
das
pop
sub
inc
loope
xor
jg
or
or
ja
pop
xor
clc
loope
jno
sahf
mov
inc
das
test
dec
ret
ljmp
cmp
pushf
neg
adcb
mov
jg
sub
adc
sbb
push
sub
xchg
adc
in
daa
mov
aad
loop
sub
mov
push
jae
push
pop
outsl
inc
or
hlt
cmp
das
mov
addl
xchg
fidivl
lods
or
mov
lock
push
mov
sub
jp
jns
faddl
adc
add
and
inc
fistpll
cld
pop
push
or
inc
dec
pop
sbb
jne
repnz
sub
inc
je
dec
cmc
rorl
adc
inc
movsl
xor
add
jmp
inc
mov
int3
fwait
mov
ss
cmp
cmp
and
push
inc
jno
mov
cltd
dec
sbb
jnp
sub
mov
fistpll
ret
arpl
mov
push
lcall
push
pop
or
add
das
sbb
sti
push
mov
push
std
mov
clc
dec
mov
mov
mov
pop
rol
or
test
outsb
or
adc
ljmp
std
add
mov
xchg
mov
mov
pop
adc
dec
sub
xchg
adc
das
inc
sub
shl
les
movsl
push
or
or
sbb
fnsave
cmpsl
adc
mov
push
ljmp
push
fsub
andb
or
jl
mov
push
pop
adc
and
and
jecxz
mov
stos
cmp
mov
and
lcall
cwtl
dec
add
insb
mov
push
adc
stos
ss
lock
mov
or
je
in
cwtl
scas
add
leave
icebp
mov
add
dec
xorb
repnz
call
andl
cli
nop
lock
jmp
or
and
aad
and
jne
sbb
sub
xor
ss
add
dec
cs
out
scas
pop
xor
pop
jmp
scas
sub
out
sub
mov
sub
imul
fbld
push
jmp
add
pop
push
ljmp
jne
adc
add
xor
dec
shl
dec
pop
decl
loopne
lret
outsb
mov
aaa
pop
mov
xor
xchg
and
enter
adc
hlt
lock
mov
dec
mov
hlt
xchg
fsubr
cli
mov
dec
lods
shrb
jbe
adc
mov
enter
es
inc
in
adc
inc
clc
inc
cmp
add
loopne
testl
adcl
pop
sub
mov
mov
mov
mov
push
nop
pop
es
clc
jo
imul
inc
jg
test
push
inc
dec
dec
dec
pop
adc
jl
cmp
adc
pop
dec
in
call
in
mov
mov
mov
mov
test
add
js
lret
out
jmp
pop
dec
xor
cmp
inc
subb
outsl
pop
cmp
fdivr
mov
or
mov
add
movsl
fucomip
dec
pop
aam
add
add
lret
ret
pop
call
push
mov
adc
inc
xor
jp
idiv
cmc
pop
mov
and
js
adc
cmpsb
push
jge
mov
add
loopne
sbb
jmp
add
cmp
hlt
and
adc
inc
sub
testb
mov
xchg
mov
vpperm
inc
cltd
cld
lds
cmc
cld
out
push
clc
lock
jbe
cwtl
xor
mov
nop
and
add
dec
inc
inc
mov
cmp
adc
mov
add
test
addb
out
and
stc
inc
test
stos
gs
mov
insl
mov
add
and
add
push
sub
ret
cmp
cmpsl
push
jg
pslld
pop
in
pop
xor
xchg
icebp
xchg
inc
test
popf
add
shll
out
xor
js
mov
in
pushl
imul
incb
cmp
xchg
ret
mov
cmp
mov
mov
push
jb
cmpb
lahf
sbbl
push
push
and
outsl
in
ja
add
call
stos
loopne
or
or
pop
xchg
movsl
pusha
add
inc
rorb
insb
sub
adc
add
bound
sar
stc
js
mov
add
jl
sub
pop
icebp
test
mov
inc
mov
push
and
mov
add
sarb
jns
xor
scas
popf
push
xor
or
fistpll
pop
xchg
jp
cmp
sbb
pop
mov
mov
mov
push
push
filds
mov
sti
das
das
into
decl
xchg
sahf
lea
jno
jmp
iret
dec
inc
xchg
push
je
pushl
mov
and
xchg
cmp
mov
add
inc
pop
rorl
pop
fdivs
mulb
fs
add
adc
orb
and
inc
adc
mov
cs
xor
jns
sarl
mov
cmp
orb
and
push
jg
mov
testb
jl
and
mov
pmaddwd
lods
inc
jae
push
jg
add
je
cld
cmpl
pushl
jmp
sub
ss
push
sub
dec
outsl
sahf
out
adc
push
mov
addr16
sahf
pop
mov
mov
push
or
repnz
and
mov
inc
push
test
add
mov
sub
add
outsb
lret
pop
in
xor
rorb
addr16
pop
insl
in
jmp
gs
cmpb
or
jge
add
test
stc
push
out
shll
pop
push
fnstsw
pop
js
inc
andb
pop
pop
dec
mov
xor
push
push
pop
ljmp
dec
pop
inc
vmovntps
mov
add
or
inc
test
or
repnz
clc
push
sub
cmp
rcrb
sub
cwtl
orl
test
jmp
dec
shr
mov
push
cmp
sbb
adc
mov
loopne
aaa
mov
lds
shrb
loopne
lods
cld
filds
incl
hlt
in
pop
pop
pop
sbb
inc
pop
int
call
std
add
sbb
mov
lds
std
dec
decl
lea
in
push
mov
jmp
cmc
sbb
add
mov
inc
pop
adc
out
in
enter
repz
and
das
sbb
jno
out
add
pop
xchg
push
sbb
test
test
mov
decl
pop
pop
dec
push
shll
inc
and
das
xchg
popa
push
pop
jmp
pop
mov
adc
lea
cwtl
cmp
push
mov
std
and
add
jmp
cmc
jb
add
test
push
pop
mov
add
xchg
arpl
mov
aaa
jb
dec
sahf
and
jae
outsb
rclb
jecxz
les
icebp
add
out
push
popa
lea
add
mov
or
mov
add
pushl
pop
clc
sbb
rorb
lock
inc
adc
icebp
lret
movsl
loope
cld
adc
jmp
sub
pop
push
xchg
lcall
push
cmp
lds
and
xlat
add
pushl
pop
in
xchg
decl
aaa
enter
xor
aaa
cli
cwtl
jnp
add
jb
jnp
test
call
repz
iret
cld
clc
fcoms
jmp
jbe
pushf
mov
sub
adc
rolb
and
push
push
xchg
pusha
pop
clc
test
lret
adc
dec
sub
and
repz
div
inc
sbb
test
or
lock
mov
pop
push
dec
pop
jle
or
and
add
lahf
test
adc
add
jae
cmp
sbb
mov
jl
mov
or
mov
add
dec
fists
mov
and
mov
adc
add
cwtl
pop
inc
pushf
push
pop
pop
repnz
dec
xchg
pop
xor
icebp
lods
nop
incl
clc
sbb
icebp
lods
add
das
ds
xchg
jp
xchg
pop
out
dec
mov
aam
cmp
mov
aaa
call
jns
pop
add
jmp
data16
sahf
and
dec
fldt
push
cmp
call
cmpsl
inc
fists
push
rclb
mov
lods
dec
mulb
enter
pop
dec
or
xchg
fs
sar
push
and
jmp
jle
or
push
movsl
pop
lds
mov
inc
in
aad
pusha
mov
or
das
pop
mov
sbbl
cmp
dec
clc
cwtl
xlat
ljmp
loop
push
out
pop
xor
mov
sbb
ja
or
push
dec
add
pushl
idivb
add
cmpsb
pop
call
pop
push
popa
add
imul
fisubl
outsl
inc
xchg
not
decl
mov
mov
cld
mov
jmp
jmp
push
data16
sahf
adc
jnp
fbld
push
jp
ljmp
mov
xchg
cli
cld
mov
repnz
push
mov
push
scas
or
mov
nop
lcall
xor
mov
push
inc
lock
xor
pop
idivb
inc
fimull
and
and
inc
push
push
push
lods
loopne
mov
sbb
sbb
incl
lea
mov
lret
addl
or
loopne
lea
loop
lds
cmp
incb
cld
jmp
test
pushl
dec
mov
addr16
pop
ljmp
or
mov
mov
sbb
mov
jg
in
xchg
stos
outsb
rclb
pop
dec
repnz
cmp
mov
test
push
jg
or
outsl
inc
outsl
insl
xor
ret
xor
test
clc
les
bound
mov
jns
aad
push
mov
outsl
mov
dec
xchg
outsl
loope
aaa
movsb
jmp
dec
test
test
call
mov
call
and
pop
add
les
xchg
add
sub
xchg
or
inc
aam
lret
mov
dec
or
add
jb
ljmp
cltd
push
fs
lret
mulb
and
jo
pushf
nop
ds
jmp
adc
jns
sbb
cmp
imul
das
mov
sub
pop
das
and
inc
adc
push
lea
push
cld
pop
sar
mov
test
push
lock
xchg
inc
fdivr
rcrb
add
sub
mov
fs
mov
test
jg
xor
lds
mov
dec
push
add
add
add
or
cltd
filds
add
or
call
and
pop
and
adc
inc
sbb
inc
sbb
loope
sbb
clc
inc
jg
cld
pop
roll
sub
call
fs
call
sub
incl
pop
push
cmpsl
xor
nop
call
iret
inc
incl
rolb
and
cmp
sub
cmp
jbe
dec
stos
lds
mov
jae
imul
stos
add
sti
push
mov
xchg
sub
divb
cmp
xor
movsl
icebp
xchg
ljmp
lahf
aas
jg
cmp
mov
cld
push
push
add
sub
mov
fs
sbb
aas
jg
xchg
pop
cmp
xchg
push
dec
cld
scas
aas
or
hlt
ud0
mov
inc
xor
mov
imul
sbbl
loopne
fwait
shll
je
incl
inc
lds
insl
ret
in
mov
decl
and
out
cmp
clc
ja
testl
ficoms
and
jge
add
incl
inc
aad
movsb
cs
cld
inc
or
adc
std
lock
adc
adc
mov
imull
xchg
sub
hlt
movsb
push
insl
in
insb
mov
add
inc
out
push
lds
jle
inc
adc
repnz
aad
inc
mov
cli
mov
mov
lods
pushf
cmpb
call
lret
scas
add
push
sarl
dec
clc
les
aam
push
dec
cld
jmp
ljmp
or
aaa
add
or
jl
add
mov
pusha
or
cmpsb
ja
sbb
mov
pop
push
mov
clc
stos
mov
adc
fwait
xchg
mov
sbb
add
fcmovbe
fbstp
in
test
mov
xchg
sub
inc
inc
mov
lcall
sarb
push
test
adc
push
mov
dec
jle
sbb
icebp
push
cli
add
lock
scas
adc
push
push
decl
mov
stos
pushl
pop
add
add
and
pop
push
push
and
les
addr16
cmp
jmp
xor
ret
xchg
xchg
rcl
mov
mov
mov
and
cmp
xor
pop
mov
pop
pushw
dec
hlt
repnz
aaa
test
cmp
jae
fistps
mov
xchg
inc
xchg
pop
cli
cli
push
nop
pop
push
mov
fs
out
jne
lods
pop
lock
mov
mov
jle
pop
fistpll
test
incb
pusha
adc
imul
mov
into
decl
inc
and
xor
pop
iret
out
clc
popf
or
sahf
shrl
out
mov
mov
pop
imulb
mov
arpl
nop
mov
outsb
mov
adcl
push
lock
mov
push
xchg
xchg
adc
jo
xor
add
xor
outsb
sub
pushl
loop,pt
rcrb
push
add
push
jmp
loop
js
sbb
adc
adc
adc
mov
and
mov
mov
out
sub
sbb
jg
mov
mov
mov
and
clc
mov
and
pusha
pop
addl
and
jg
dec
loope
sub
fiadds
bound
jle
add
das
test
call
aaa
and
cmp
and
xor
push
std
jnp
pop
stos
comiss
hlt
leave
cmpl
das
jl
jae
mov
jg
ss
mov
incb
sub
fildll
inc
enter
jo
dec
jp
pop
and
fsubl
aaa
insl
fmuls
mov
or
jp
cmp
adc
sahf
inc
incl
lea
int3
xlat
fcmovnbe
aam
enter
adc
dec
cli
out
loopne
mov
fisubs
shl
data16
mov
mov
pushl
ljmp
mov
daa
sbb
add
pop
push
movsb
sbb
inc
pushf
or
xchg
and
push
cmp
push
xchg
mov
sbb
fisttps
pushl
in
add
jmp
ja
push
cld
xchg
or
cli
and
jb
and
insb
sbb
fwait
push
push
pop
xor
jle
sub
push
call
pop
imul
dec
incl
sbb
outsl
sbb
cmp
pop
ret
sar
ljmp
test
das
cmpsb
jl,pt
lds
idivb
inc
inc
orb
inc
push
jae
movsl
lds
mov
gs
loop
mov
dec
incl
cmp
bt
in
adc
mov
pop
repz
rclb
cmp
fcmovnb
or
pop
add
add
add
adc
call
adc
xchg
incl
jecxz
das
push
roll
incl
or
inc
mov
sub
mov
sub
lret
rcll
rorb
pusha
xchg
inc
mov
jp
pop
mov
cmp
cmp
add
mov
orb
lds
aad
sbb
xlat
sbb
stos
scas
pusha
jo
sbb
push
or
adc
dec
std
lret
xchg
shl
hlt
cld
add
xor
inc
lock
les
fmuls
pop
aas
or
lock
xchg
fdivr
add
test
sbb
shrb
mov
hlt
pop
add
mov
jbe
sbb
aas
test
sbb
faddl
add
mov
jmp
cmp
sbb
push
mov
pop
or
jmp
pop
xor
mov
jmp
call
push
jg
js
dec
jne
add
icebp
movsb
stc
jmp
pop
inc
sbb
xchg
outsb
jnp
dec
cmp
sub
sub
or
add
sbb
mov
jae
add
test
mov
sbb
or
das
sbb
mov
ljmp
or
mulb
mov
ret
clc
sub
jg
insl
and
int
outsb
lods
repnz
mov
inc
adc
add
adc
data16
aad
incl
rcr
jge
popa
decl
mov
jmp
and
push
in
adc
lcall
sbb
and
inc
sbb
or
adc
test
or
decl
out
adc
add
decl
sub
lret
xor
jp
mov
pop
repz
call
cmp
ljmp
add
aaa
dec
pop
out
shlb
or
xchg
packssdw
call
sahf
mov
xlat
push
pushl
mov
movsb
dec
dec
and
and
aas
and
pushl
add
push
xlat
sarl
add
xchg
sbb
ret
nop
popf
repnz
push
test
jge
jg
and
sub
push
je
add
xchg
decl
sti
mov
das
sbb
cmp
add
xchg
lods
clc
and
dec
pop
test
push
push
push
imul
lock
mov
test
cmp
clc
das
pushf
hlt
je
nop
lods
xchg
ljmp
xor
mov
mov
adc
test
jp
fucomip
mov
mov
pop
inc
push
jo
add
cmpsl
or
std
rclb
mov
sub
fbld
pop
imul
in
ljmp
aas
movsb
imul
and
mov
xor
sub
neg
add
je
or
mov
add
adc
push
pop
pop
pop
loop
fbld
or
push
out
jl
arpl
incl
jno
dec
mov
sbb
push
xchg
nop
jnp
xchg
or
mov
addb
pop
sub
pop
es
push
mov
inc
jmp
or
js
sub
stos
lea
pop
adc
sub
fsubs
mov
mov
shlb
nop
dec
mov
add
pop
add
and
mov
dec
xor
push
pop
jb
mov
sbb
aas
jmp
out
arpl
and
pop
mov
call
lea
cmp
pop
push
ljmp
orb
mov
and
mov
sub
or
sub
mov
push
xchg
cmp
mov
or
cli
ss
sbb
jno
mov
jmp
push
or
and
add
decl
movsb
aam
cmp
dec
fs
out
je
ja
mov
inc
cmp
add
ja
push
jae
xchg
adc
push
cli
imul
ljmp
or
inc
cmp
lcall
addb
daa
and
call
mov
imul
les
add
jle
mov
mov
xor
fbstp
inc
sub
mov
addb
pop
movsl
sar
cli
mov
int
push
jg
clc
clc
jle
aas
sub
incl
jo
mov
jp
stos
insl
push
scas
mov
fwait
adc
dec
lea
dec
ja
js
clc
andb
inc
aaa
dec
cltd
jnp
jle
adc
mov
shrl
jp
fimuls
dec
cld
sub
pop
lods
and
xor
pop
jno
ljmp
adc
cmp
mov
jo
loop
cmpsb
pop
call
push
push
jb
das
dec
cmp
int3
add
mov
cmc
fimuls
out
pop
mov
leave
clc
cmp
scas
into
pop
sub
mov
add
gs
and
decl
mov
lret
lcall
lock
inc
xor
mov
cmp
and
popa
idivl
out
rorl
rcrl
int
and
mov
lods
psllw
mov
das
cmp
lahf
repz
inc
cli
jb
cltd
fsubr
pop
testl
xchg
xchg
popa
out
shl
mov
jae
cs
sbb
cltd
adc
test
mov
mov
addr16
push
js
add
xchg
insb
scas
aad
cmpsb
mov
and
cmp
dec
sub
cmp
adc
jp
outsl
pop
inc
pop
loop
lret
push
hlt
addr16
mov
decl
push
pop
fstpl
push
leave
adc
push
jne
add
xor
add
outsb
ret
or
add
imul
dec
inc
adc
cmp
std
mov
iret
mov
push
jg
mov
and
or
ljmp
fcoms
jg
loop
lret
push
adcb
testb
inc
mov
rorb
lret
xor
push
add
fs
movsl
hlt
loopne
clc
addb
mov
add
testl
cld
mov
xchg
jnp
inc
pop
les
lcall
incl
push
jns
shr
inc
mov
ret
jae
inc
fcmovbe
and
mov
mov
shrb
mov
je
push
adc
and
cmp
inc
dec
popa
nop
inc
pop
ljmp
pop
or
movsl
mov
mov
cmc
and
jge
outsl
cmp
cs
jae
mov
add
decl
mov
push
outsl
sub
ljmp
mov
add
push
mov
xor
adcl
sub
jo
sub
mov
push
add
cmc
shrb
push
xchg
test
pop
mov
shl
jle
push
sahf
pop
pop
add
aaa
xchg
notl
jg
add
aam
pop
icebp
leave
mov
lea
and
jns
imul
xchg
jmp
mov
loop
xchg
enter
sub
or
jle
decl
lea
push
mov
incl
xchg
xchg
add
lahf
hlt
push
mov
in
and
loop
sub
push
ss
nop
cmpsl
incl
out
sbb
mov
add
mov
adc
add
aas
sub
lcall
addb
sahf
and
sti
jmp
inc
jg
add
xchg
push
ret
imul
jne
xchg
dec
and
or
mov
push
xor
dec
ds
mov
icebp
sub
roll
pusha
lds
mov
push
in
paddb
dec
sub
ds
fildll
cld
xchg
add
add
fidivrl
inc
sub
sbb
minps
dec
mov
lahf
addr16
fdivs
mov
cmc
out
sub
mov
or
jmp
inc
sub
inc
enter
orb
jle
stc
cmc
daa
loopne
jno
dec
aam
push
xchg
ffreep
inc
cli
sbb
xchg
sub
jle
cmp
cmp
or
mov
ds
push
pop
adc
les
inc
mov
idivb
loop
sbb
inc
hlt
jnp
std
rcr
push
jo
dec
daa
movsb
icebp
stos
mov
mov
addr16
push
adc
dec
daa
adc
loope
mov
sbb
mov
sub
shrb
xor
pushf
push
xchg
push
xchg
fs
push
clc
push
orb
xchg
dec
data16
cmp
pop
pusha
push
addr16
insb
pop
clc
bound
sbb
mov
add
jg
addr16
repnz
and
scas
loope
mov
cmp
jmp
andb
mov
inc
sbb
mov
lock
mov
lods
and
inc
test
xchg
movsb
das
daa
sbb
sbb
add
and
xor
add
and
cmpsl
xchg
test
fs
cmp
insb
pusha
decl
cmp
pop
mov
fdivs
roll
popa
push
jne
imul
jns
clc
cmpsb
decl
add
arpl
test
jae
fmul
adc
jecxz
jne
pop
jg
imul
and
xchg
and
sqrtps
add
pop
push
call
lret
decl
xor
add
ja
aas
jle
sbb
and
decl
add
pop
jmp
or
test
aam
jbe
mov
subb
in
add
mov
cmc
in
mov
inc
push
rclb
mov
adc
das
jl
aaa
jbe
cmp
sbb
sub
dec
sbb
mov
sub
inc
jne
add
aas
cltd
mov
push
pop
push
sar
mov
aam
pop
mov
add
xchg
add
xor
inc
add
pusha
jmp
jg
dec
mov
xor
push
push
cwtl
cmp
adc
cmp
add
mov
inc
in
int3
ljmp
jne
sbb
xor
jne
push
sbb
adc
push
add
pop
lds
std
imul
insb
and
cmc
jg
add
sub
clc
mov
aam
mov
arpl
jg
pop
nop
fs
pop
dec
jge
pop
sub
cmpsl
add
dec
xor
clc
ret
push
fcompl
and
xchg
mov
aad
jno
mov
in
push
ja
fadds
divl
ljmp
push
mov
fdivrp
popf
add
or
pop
and
or
and
xchg
bound
test
mov
add
push
fistpll
mov
or
pop
call
pop
xchg
pop
incb
ret
or
jg
mov
lcall
lods
and
jmp
or
mov
inc
pushf
mov
inc
push
call
outsb
dec
test
cmp
pop
loope
cmp
sub
jae
xor
aaa
pop
and
pop
aaa
leave
xchg
clc
repz
xor
lea
bound
icebp
cmc
rorb
push
and
jno
insb
dec
mov
lcall
dec
hlt
arpl
add
jae
pop
ja
shll
jno
mov
inc
pop
mov
pusha
jg
std
cli
adc
cmpsb
push
add
and
sub
ljmp
dec
xchg
mov
hlt
and
lock
add
lds
pusha
dec
call
adc
dec
ret
test
mov
mov
cmp
pushl
dec
push
adc
push
mov
ljmp
pop
pop
negb
cld
jmp
xor
dec
push
daa
cs
adc
call
repz
mov
dec
lods
in
sub
outsb
lcall
adc
sti
imulb
movsb
cmp
pop
jg
nop
lods
insl
push
xchg
call
pop
jbe
add
mov
inc
jge
ss
pop
add
mov
shl
clc
in
mov
mov
mov
incl
jae
leave
rcll
movsl
add
pop
movsb
int3
sub
mov
mov
and
cmp
add
hlt
inc
jo
insb
mov
out
mov
fldl
ficoml
cmp
jp
push
push
scas
les
stc
fldt
dec
cld
and
ss
adc
jmp
fldl
jg
mov
cli
cmp
xchg
clc
fstpl
xchg
aaa
lock
add
pop
js
xchg
lret
clc
add
mov
stos
movsb
ret
cmp
in
mov
and
push
fdivrp
add
jnp
and
loope
aaa
add
dec
imul
nop
dec
leave
add
sbb
push
pop
icebp
push
adc
mov
mov
lock
repz
cmp
dec
ss
xor
push
in
pop
inc
std
jle
cwtl
xor
xor
inc
cmp
lock
jo
outsl
mov
inc
inc
bound
loopne
insl
fildll
call
sbb
mov
inc
add
outsl
test
pusha
gs
sti
push
add
bound
jnp
loop
sar
xchg
cltd
push
mov
leave
mov
and
sub
and
pop
dec
dec
pop
or
jmp
or
push
stos
and
jmp
push
movsl
out
add
jno
ds
push
daa
jb
xchg
or
jo
push
push
das
cmc
jno
ja
add
jbe
push
fistps
jl
sub
fwait
nop
in
ljmp
sbb
or
jnp
mov
aaa
jg
sbb
push
pop
and
add
stos
and
ret
adc
mov
jmp
mov
push
gs
cltd
std
sub
subl
imul
mov
push
mov
into
test
daa
adc
push
push
outsl
iret
inc
add
mov
jg
das
pop
insl
cmpl
adc
and
std
daa
roll
xor
stos
add
cmp
sbb
stos
jmp
inc
pop
adc
jp
xor
dec
ds
adc
int3
sbb
or
dec
inc
ljmp
test
pop
in
popl
mov
and
mov
mov
ljmp
cmp
ljmp
incb
mov
call
jmp
push
adc
dec
clc
push
adc
popa
push
ss
call
cld
dec
test
mov
cmpl
test
mov
mov
mov
adc
cmp
aad
cmpb
mov
std
inc
add
mov
sub
mov
xchg
and
inc
cli
add
mov
sbb
mov
push
in
inc
inc
inc
mov
aaa
inc
test
mov
mov
pop
shrl
inc
xor
sub
lock
mov
notl
xor
pop
jg
and
orl
mov
push
mov
scas
test
inc
jecxz
pushf
adc
cmp
fsubl
dec
imul
mov
sub
cmp
add
jl
nop
aad
pushl
sub
add
mov
ret
sub
push
cmp
pop
inc
add
js
popa
icebp
ss
jo
enter
ljmp
fwait
push
les
add
lock
push
loopne
shll
es
xorb
add
pop
sbb
inc
aas
clc
mov
mov
gs
or
adc
test
syscall
mov
rclb
jmp
cmp
and
mov
lret
call
xchg
xchg
and
incl
dec
mov
jmp
lcall
or
ja
inc
roll
imulb
adc
cmp
ds
data16
mov
adcb
fisttpll
pusha
test
add
adc
jnp
or
mov
mov
incb
add
mov
xchg
scas
test
push
ss
xlat
and
push
cwtl
dec
scas
add
aam
les
loopne
cmp
add
cmp
dec
arpl
outsl
mov
and
jg
mov
mov
cld
xor
leave
dec
cmp
js
or
pop
rcrl
int
das
enter
adc
orb
mov
aad
idivl
sar
inc
mov
pop
popf
enter
movsb
mov
mov
mov
lret
sti
ss
add
mov
jecxz
decl
add
pop
xor
push
call
aaa
out
push
xor
add
decl
loopne
or
repnz
ljmp
jne
clc
mov
add
fsubrl
pusha
mov
push
fs
mov
or
shl
add
fsubr
std
xor
inc
fisttpll
cltd
movb
incl
and
or
pop
push
sar
fucomp
or
std
push
xor
mov
repz
clc
add
jge
mov
testb
aaa
jmp
shlb
inc
test
add
or
cmc
cld
int3
call
fcoml
scas
dec
pop
xor
jns
pop
jecxz
nop
cld
sahf
sti
mov
cmpsb
adc
out
decl
push
test
xor
dec
mov
sbb
add
pop
testl
sbb
add
shlb
fmull
dec
and
cli
and
scas
in
cld
movsb
add
cmp
rorl
adc
daa
inc
jl
pop
mov
and
add
movsb
xchg
pop
das
sbb
mov
incl
cld
lock
jmp
int3
daa
clc
jo
add
xor
mov
fiadds
add
dec
add
fcompl
test
push
cmp
loopne
or
adc
add
in
xchg
pop
inc
nop
out
aaa
sbb
pop
incl
xchg
push
rolb
mov
or
inc
orl
adc
pop
or
add
call
jns
aad
int
pop
fdivr
xchg
pushf
mov
inc
out
fmull
imul
push
mov
inc
sbbl
jg
pop
or
repz
push
ljmp
mov
js
test
xor
inc
call
sar
test
adc
mov
das
insl
mov
sub
out
dec
dec
sti
lcall
daa
loop
filds
repnz
mov
cmp
je
test
pop
mov
out
fucom
pop
stos
jg
or
ljmp
out
lock
jp
pushl
add
rcrb
cwtl
loope
ds
jg
enter
loopne
and
dec
push
test
ljmp
xchg
add
xor
fildll
cli
pop
aam
xor
les
cs
xchg
inc
subb
aas
or
push
push
fistpll
sahf
cmp
mov
adc
loopne
or
push
and
call
decl
jge
pop
push
sti
decl
xchg
inc
in
xor
mov
inc
inc
adc
jmp
jmp
or
aas
test
test
stc
incl
cmp
call
enter
inc
adc
jbe
jp
adc
mov
scas
nop
sbb
inc
inc
jmp
push
ja
lods
sbb
jnp
mov
test
push
xchg
ljmp
xchg
imul
push
jg
mov
sub
mov
dec
notb
xchg
jecxz
stc
lock
in
mov
mov
mov
icebp
stos
aam
push
mov
or
rclb
inc
fcoms
pusha
mov
jnp
mov
in
dec
test
cmpsl
js
lahf
add
xorl
aam
pusha
pushl
mov
mov
jne
incl
pop
add
sbb
dec
mov
pop
xchg
push
jecxz
call
xchg
les
sar
inc
fst
mov
push
sub
call
pop
push
jb
jecxz
mov
add
xchg
cli
push
enter
jbe
cmp
mov
mov
and
push
lcall
cld
or
lahf
mov
or
mov
cmp
adc
mov
xor
sub
test
pushf
pop
lea
cmp
lcall
lock
and
pop
and
add
fildll
icebp
das
mov
pop
add
mov
out
sbb
or
icebp
inc
sub
mov
jnp
rcl
mov
xor
incl
sbb
loop
loopne
sub
mov
cwtl
mov
ja
sti
fwait
add
add
jl
lods
push
or
decl
fldt
inc
jne
dec
nop
dec
xchg
sti
test
orb
push
lds
rcll
imul
mov
sbb
mov
jno
mov
mov
cmp
mov
mov
mov
push
and
push
fstpt
sbb
xorb
fisubs
mov
or
mov
pushf
inc
imul
xchg
pop
movsl
dec
inc
pop
add
add
mov
test
pop
push
cli
sarb
xchg
inc
incl
inc
sub
inc
mov
add
icebp
jae
cmpxchg
pusha
dec
push
adc
outsl
fbstp
push
push
test
cld
movl
std
xor
push
das
call
mov
jbe
mov
movb
outsl
dec
pop
cld
jne
shrl
in
movsl
jle
pop
ret
and
decl
cld
clc
add
mov
inc
adc
inc
xor
stc
cmp
xor
sbbb
sbb
and
mov
inc
push
ljmp
sbb
push
clc
int3
xor
movhps
into
adc
inc
sub
lock
dec
addr16
sahf
jno
test
mov
ljmp
sub
pusha
out
daa
add
call
lret
sub
sbb
xchg
cmp
jne
sbb
in
ljmp
cli
pop
test
rcl
sub
pusha
fwait
mov
fildll
sub
outsl
push
jmp
cwtl
mov
push
outsl
into
imul
inc
xlat
mov
add
test
mov
jae
push
sub
dec
sbb
adcb
icebp
add
in
jmp
push
incb
inc
inc
jmp
fildll
loopne
jmp
dec
pop
rclb
adc
add
cld
xor
cmp
call
clc
xchg
psubsw
les
cwtl
test
lret
xchg
dec
pop
jbe
jl
mov
hlt
jge
push
jne
sbb
adc
out
in
fadds
ss
cmp
jmp
add
aam
cmp
call
fcoml
mov
cmp
aaa
lock
dec
lods
mov
or
mov
xchg
dec
cmp
mov
sub
push
mov
dec
sbbl
mov
add
adc
mov
adc
fists
lock
aam
clc
push
pop
push
into
add
incl
dec
loop
push
sahf
insl
xchg
loop
jp
mov
and
pop
jle
add
je
je
idiv
inc
aaa
inc
dec
sub
jecxz
repz
test
push
push
mov
test
xorb
pop
push
pop
icebp
mov
pop
add
arpl
pop
push
clc
pop
orl
inc
mov
ret
call
sbb
cmc
cmp
dec
outsl
popf
gs
push
incl
lods
jl
xor
jg
in
sti
loopne
xchg
movsb
sub
nop
xchg
cwtl
xchg
pop
sar
jmp
rolb
sbb
lcall
clc
testb
pop
icebp
outsb
cli
inc
cmp
or
lcall
cld
jmp
addb
mov
movsb
loop
lods
mov
push
decl
jmp
call
je
lret
or
add
repnz
mov
test
test
incl
ret
mov
cmpsl
mov
add
lea
cmpsb
cmc
test
aaa
cs
or
mov
fildl
mov
scas
clc
repz
jne
in
idivl
or
jo
dec
xchg
adc
push
inc
dec
jmp
sub
loopne
mov
pop
mov
jl
fidivrs
pop
popl
sbb
pop
rclb
or
test
filds
and
jmp
push
fildl
sbb
sarb
or
es
aaa
mov
fsubr
fldl
out
mov
jge
add
outsl
fisttps
int3
inc
clc
xchg
sti
test
outsl
js
roll
push
outsl
push
add
adc
push
mov
push
cmpsl
inc
aam
dec
aam
sarl
mov
add
std
xchg
rolb
test
ret
fs
clc
outsl
aas
adc
hlt
mov
jne
mov
jmp
cli
lods
dec
ja
push
mov
in
lahf
pop
insl
ja
or
pop
jg
imul
sub
loope
in
std
jg
aaa
into
popf
push
shl
iret
push
push
jg
xor
sarb
mov
loop
in
pop
lock
sar
shlb
outsb
mov
jecxz
scas
xchg
aaa
mov
pop
sub
inc
mov
dec
test
xlat
movsb
adc
outsb
mov
jge
sti
decl
mov
lcall
ret
loope
mov
jp
xchg
jmp
cs
or
jae
lcall
mov
push
enter
add
xor
push
mov
adc
lods
jle
test
cli
mov
mov
xchg
call
decb
stos
adc
dec
jmp
push
into
cwtl
incl
and
inc
sbb
imul
popa
sbb
inc
mov
push
lock
sbb
movsl
cwtl
jno
dec
add
enter
sub
test
loope
mov
and
loop
and
je
or
cmp
pop
push
jmp
xchg
mov
push
fdivs
add
cld
fwait
inc
mov
in
lret
xchg
call
lret
push
or
cli
mov
aaa
inc
xor
dec
add
push
repz
xchg
loopne
repnz
mov
add
jl
adc
pop
std
lcall
sarb
push
call
ljmp
pop
jmp
je
sar
sub
test
sbb
mov
ret
jbe
push
aas
loope
cmpb
inc
fisttps
push
addr16
jp
cmpsb
das
fcoms
sbb
decb
sbb
test
repnz
push
scas
repz
sbb
sbb
inc
push
outsl
clc
lea
xorb
lods
pop
faddl
xchg
add
adc
xor
outsl
into
cmp
inc
out
sub
add
incl
inc
mov
test
adc
pusha
add
xchg
pop
inc
mov
cmp
sub
dec
call
xor
mov
pop
addl
or
mov
jmp
pop
push
aaa
jne
int3
icebp
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
jmp
inc
enter
jl
inc
das
jge
jne
daa
push
pop
lcall
mov
xor
test
ret
inc
jmp
sahf
fwait
andb
mov
pop
pop
xlat
dec
mov
push
push
popf
and
cmp
sbb
call
shr
or
cmp
subl
movsb
decl
pop
xor
jecxz
or
lret
lea
pop
loopne
sub
das
sub
cltd
sub
mov
es
pushf
xchg
out
loopne
pop
jmp
mov
mov
push
mov
js
hlt
ljmp
mov
stos
mov
pop
lods
sbb
or
cmp
mov
push
loopne
lock
rcrl
sub
xchg
push
inc
xchg
cli
xor
adc
cmc
pop
and
adc
cli
jg
loopne
adcb
mov
push
add
ljmp
fdivrs
pop
or
xchg
mov
aad
decl
ret
incl
sbb
sub
cmp
je
rorl
cmp
imul
scas
mov
fiadds
dec
jl
lahf
mov
adc
add
jecxz
fiaddl
aad
mov
and
dec
push
hlt
pop
add
xchg
sub
pop
out
cld
pop
lds
shll
arpl
lods
jp
cmp
lock
sbb
js
vphsubbw
out
loopne
pop
inc
popa
pop
or
cld
mov
sbb
shrb
mov
push
filds
scas
fnstcw
cmp
loope
enter
jnp
jno
stos
dec
add
inc
jb
stc
pop
cmp
or
pop
pop
jmp
inc
mov
repz
pop
cmp
lods
mov
dec
data16
out
mov
cmp
add
dec
insl
clc
xor
xchg
addr16
sbb
lock
push
pushf
lock
sbb
test
call
mov
pop
arpl
add
out
jns
icebp
stos
scas
cmp
sub
add
enter
les
adc
and
divb
aam
mov
cmc
imul
ret
or
push
lock
loopne
or
loopne
add
fcmovb
loopne
xor
sar
cmpsl
add
divw
or
inc
push
jge
mov
or
sbb
test
add
ret
add
xchg
mov
pop
in
cmp
lods
pop
imul
add
leave
adc
loope
icebp
mulb
mov
bound
sub
pushf
arpl
outsl
xor
adc
or
push
std
mov
dec
fwait
xor
mov
lods
hlt
xor
decb
sbbl
xorb
sub
mov
pop
fs
arpl
stos
mov
and
orl
adc
aaa
pop
mov
jle
add
mov
dec
call
cli
push
add
xor
pop
bound
sub
jmp
mov
repnz
add
test
pop
clc
mov
jmp
mov
test
shl
pop
fwait
cmp
sbb
aam
push
mov
scas
hlt
repnz
pop
xor
rcl
mov
cmp
jne
lcall
nop
inc
mov
cld
push
add
push
aas
cs
sbb
jnp
arpl
bnd
add
pop
push
popf
jno
lcall
pop
lahf
std
fadd
or
mov
test
pusha
mov
hlt
fiaddl
movsl
call
mov
ljmp
cmp
cmp
or
mov
cltd
fistl
xchg
add
lcall
gs
into
popf
sti
sub
jg
pop
mov
shrb
test
jb
adc
hlt
add
fcmovbe
add
push
mov
pusha
add
cmpsb
stc
mov
bound
or
adc
decl
push
clc
ja
xor
inc
addb
inc
pop
lcall
loopne
add
jb
mov
cmp
test
sub
mov
ljmp
pushl
clc
lcall
fs
dec
cmc
add
pop
push
dec
loope
mov
mov
testl
jns
pushl
test
cli
xchg
iret
xor
pop
xchg
out
shrb
setae
mov
jp
mov
test
bound
adcb
push
pop
loopne
or
dec
add
add
dec
faddl
pop
mov
sbb
xlat
imul
push
cmp
mov
jg
xchg
sub
sub
mov
lret
lods
pop
mov
jmp
pusha
and
ja
pop
iret
loop
push
xchg
pop
pop
push
inc
sbb
jg
jnp
add
cmp
inc
add
inc
and
sub
pop
cmpl
inc
das
push
cld
hlt
xor
add
inc
outsl
push
into
inc
and
rcrb
sbb
push
ret
pop
lods
jp
inc
popf
testl
xchg
mov
jmp
jmp
jg
fsubr
push
paddusw
lock
sbb
cld
cld
nop
sahf
outsb
rorl
sbb
mov
cmc
jle
pop
or
pop
add
in
or
pand
inc
mov
push
push
mov
mov
outsb
mov
xor
push
inc
cmp
push
pop
xor
mov
sub
shlb
call
arpl
sub
rolb
add
inc
push
mov
imul
sbb
sbb
cld
pop
cmp
push
inc
mov
mov
push
push
ljmp
jae
rorb
xor
sbb
or
inc
ffreep
xorl
in
pusha
pop
test
jmp
mov
add
xor
mov
add
add
scas
hlt
movsl
cmp
hlt
jmp
dec
sarl
sub
cmc
pop
and
hlt
add
push
add
or
mov
call
push
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
xor
mov
lret
push
pop
jmp
sbb
jg
cld
sbb
movsl
and
notl
xor
repnz
lea
cwtl
call
mov
cmp
rol
sahf
negb
ds
in
pop
sub
movsb
add
movsl
cmp
mov
cmp
pushl
daa
mov
insb
psrlq
inc
orb
std
cmp
aam
jg
push
cmp
lcall
sarl
lods
xchg
aam
xchg
test
std
mov
sar
mov
xor
push
add
add
je
std
mov
and
or
scas
mov
loopne
and
adc
push
cltd
call
mov
jge
jle
mov
insb
je
rorl
inc
pop
or
rcr
or
mov
fs
mov
dec
mov
das
inc
cs
and
fbstp
sub
decl
and
int3
pop
call
ret
inc
sub
and
mov
lock
cmp
jge
rolb
cmp
ja
xlat
out
or
popa
push
fcmovnu
jmp
test
je
xchg
aas
sbb
test
push
decb
sbb
adcb
cmc
ret
mov
jle
shr
and
mov
xchg
ds
aam
icebp
shrb
out
cli
cmp
pop
mov
inc
jnp
adc
cld
dec
jbe
mov
pop
jg
mov
inc
mov
push
mov
push
imul
mov
mov
loopne
push
es
mov
inc
pop
or
js
or
mov
xchg
push
subb
pop
jp
scas
dec
mov
and
dec
jbe
adc
mov
lcall
pop
cld
inc
mov
mov
add
xchg
sbb
out
cli
jg
ret
cld
pop
aaa
mov
push
les
sub
into
call
xor
loopne
pushf
mov
adc
inc
pop
push
add
or
das
mov
idivb
xchg
mov
cmp
add
cld
std
and
sbb
push
mov
push
push
and
testb
fdivr
divl
cmp
and
mov
xorb
addr16
outsl
mov
dec
push
inc
xchg
sub
fidivrs
insb
sbb
pushf
pop
ljmp
add
movsl
inc
push
mov
jbe
int3
pop
push
sbb
mov
mov
cld
test
cli
nop
negb
and
xchg
icebp
test
adc
pop
in
jg
stc
lret
inc
add
push
cmpl
inc
filds
shrl
out
xchg
insb
pop
sub
add
fisubl
iret
fistpll
mov
jno
repz
and
out
sbb
cmpsb
pop
xchg
sub
movsb
rclb
or
aaa
lods
pop
pop
dec
mov
mov
pop
mov
jmp
cmp
mov
inc
inc
push
sub
testb
out
or
adc
cmp
inc
add
cmp
imul
decl
xchg
xlat
push
lcall
pop
das
sbb
sbbb
aad
mov
fldcw
cltd
mov
cmp
dec
out
aad
repnz
mov
or
pop
std
mov
push
pop
xchg
sub
mov
cwtl
roll
bnd
inc
adc
in
or
les
daa
sahf
sub
das
xor
xlat
pop
loopne
cmpsl
dec
pop
lods
jns
xorl
pop
mov
xor
pop
cmpsb
sbb
add
push
outsl
imul
xchg
fs
call
fnstcw
movsb
dec
shl
cmpl
nop
push
idiv
std
push
insl
orb
dec
je
out
addr16
dec
adc
and
pop
inc
std
sub
fwait
das
test
xorb
icebp
cli
sbb
jl
lods
aad
cld
sub
fisubrl
mov
cmp
stc
inc
cld
jae
and
fidivrl
xor
dec
pop
ret
cmc
jecxz
jl
push
pop
inc
pusha
or
nop
lock
testl
ljmp
ds
add
jmp
push
sbb
and
fistpll
ljmp
lsl
sbb
cmovne
dec
leave
push
mov
int3
add
lods
jmp
mov
inc
aam
mov
dec
daa
decb
pusha
xor
xor
test
int3
arpl
cwtl
dec
jnp
lahf
push
push
rcrb
mov
pop
outsl
mov
int3
cmp
push
adc
sbb
js
jmp
lock
out
jecxz
push
repnz
sub
call
loope
mov
cld
jg
dec
add
mov
fiadds
mov
pop
call
push
jl
and
push
call
repz
and
test
fs
in
sarl
xchg
jmp
cli
jecxz
shrb
test
daa
std
inc
ud0
aaa
mov
aas
fistpll
insl
lea
mov
rolb
pop
cmc
xor
adc
sub
xchg
movsl
out
test
negl
pop
fldenv
xchg
lcall
imul
inc
or
cmpl
push
ret
test
dec
stos
add
jno
mov
dec
mov
mov
sar
sub
dec
mov
outsl
pop
mov
add
pop
push
add
cmpsl
pop
dec
aad
and
inc
sub
ja
decl
mov
mov
pmulhuw
mov
mov
cwtl
jb
dec
push
add
movsb
dec
add
ljmp
fs
call
repnz
add
lock
sbb
add
add
loopne
enter
xchg
lock
andl
mov
adc
cs
or
push
sub
jbe
xchg
fcomps
jmp
jg
xor
inc
inc
and
enter
ss
or
mov
adc
nop
sub
movsb
push
lods
js
decl
xchg
adc
je
cmp
shrb
insb
sub
or
jne
cmp
jmp
incl
add
or
adc
inc
pop
insl
sahf
inc
push
sbb
push
cli
xchg
lods
push
xchg
jbe
or
cmpl
push
sub
push
xor
add
sbbb
popa
add
inc
and
jl
pop
lcall
push
add
jnp
jmp
dec
popf
nop
xchg
aad
push
add
lahf
xlat
pop
loopne
or
leave
pushl
cmp
aam
clc
push
pop
pushl
mov
cmpsl
fs
xchg
cli
test
pop
jmp
add
ljmp
xchg
mov
mov
xor
ljmp
scas
sub
idivb
loope
repz
jmp
test
mov
xor
or
fildl
fucomi
lods
sub
pop
mov
dec
cld
sbb
negl
negb
add
mov
add
fs
sahf
mov
shl
push
ret
mov
inc
xor
cli
pop
mov
fldl
fnstcw
or
test
mov
movsl
cmpl
push
pop
mov
add
xor
fisttps
add
or
pop
es
jecxz
movsl
fists
cmp
adc
ljmp
pop
xor
xor
or
sbb
and
and
enter
out
cli
fldenv
add
xchg
je
mov
fadd
xchg
pop
movsl
dec
std
mov
andl
mov
xor
add
pushl
pop
xchg
incl
dec
std
cmp
xchg
int3
daa
clc
popa
dec
inc
fsubrl
cmpl
add
pop
jecxz
andl
outsl
cmp
push
add
addr16
add
lret
pop
sub
fcomps
jne
mov
in
inc
sub
scas
fdivl
add
fbstp
mov
mov
adc
push
mov
imul
loop
icebp
inc
les
rcll
dec
and
aad
pop
dec
movsl
ds
sbb
shll
mov
xchg
ljmp
jp
mov
pop
sub
and
mov
aaa
sbb
nop
add
addl
or
or
lea
xchg
pop
cmp
xchg
ljmp
bound
incl
hlt
sti
bnd
cwtl
mov
push
cmp
mov
push
pop
shll
das
lcall
addl
sub
dec
ljmp
add
pop
std
add
pop
jmp
scas
inc
test
shlb
or
bound
jns
dec
add
add
sbb
aam
lds
stos
hlt
mov
and
mov
mov
rolb
call
imul
and
pop
and
ss
ljmp
adc
call
lret
incl
mov
das
lcall
mov
jbe
in
call
mov
inc
mov
xchg
pop
lods
inc
inc
fsubr
jg
mov
xchg
or
std
scas
pop
xor
xchg
add
jmp
xchg
jle
in
incl
mov
dec
iret
push
in
mov
repz
inc
lret
lock
jg
sub
lret
ret
ljmp
movsb
js
and
aaa
test
xchg
pop
stos
jb
lods
pop
std
ljmp
or
decb
movsl
addr16
aaa
sbb
rclb
aas
sub
jns
cmpsl
sub
leave
cmpsb
adc
aam
adcl
xchg
ds
xchg
into
add
insl
ret
clc
pop
pusha
sbb
sub
lret
pop
adc
cwtl
nop
add
adc
push
add
lahf
incl
adc
pop
ljmp
push
xchg
xchg
add
out
scas
mov
test
in
pop
divb
mov
decl
and
movsb
pop
leave
cli
fidivrl
addl
sbb
xor
or
jmp
cld
dec
stc
enter
mov
and
addr16
jp
mov
and
cmp
add
das
cmp
incl
mov
mov
adc
mov
incl
adc
es
pop
and
clc
clc
mov
fcoml
xor
push
inc
adc
rcll
rcrb
jmp
loop
test
xchg
mov
add
out
add
and
xchg
and
xchg
pushl
je
fisttps
jmp
in
cli
dec
in
push
pushf
das
cmpsb
outsb
dec
push
testb
dec
mov
lods
sbb
dec
popf
sahf
and
aam
movsl
sarb
xor
jmp
jmp
inc
dec
mov
add
or
xor
pop
pop
sti
ds
lock
aas
add
add
std
stc
test
or
inc
pop
inc
dec
call
xchg
hlt
divb
dec
jg
dec
stos
mov
test
call
sbb
les
sbb
int
xor
stc
cmp
insb
movsl
cs
sbb
pop
and
test
je
adc
cmp
sub
mov
mov
je
mov
mov
shl
jmp
mov
inc
push
cmc
jmp
scas
test
mov
fs
mov
fiaddl
pop
scas
dec
cwtl
mov
mov
adc
add
movsl
cmp
lret
arpl
pop
incl
mov
mov
loopne
cmp
adc
inc
lods
mov
pop
and
add
mov
inc
adc
hlt
mov
dec
jb
jp
in
sarl
pop
call
add
lock
lea
outsl
xor
dec
adc
push
dec
mov
test
pop
jmp
xchg
ljmp
dec
leave
inc
cli
notl
dec
nop
mov
add
pop
add
sub
sbb
xor
inc
cmp
and
outsl
scas
psrad
add
sbb
nop
push
icebp
dec
nop
in
pop
das
divl
sti
cli
jo
inc
lcall
jge
pop
push
mov
into
int3
push
hlt
hlt
ds
imul
lea
nop
icebp
pop
movsb
stc
outsl
lea
mov
sbb
pop
push
push
or
lods
dec
jecxz
push
or
jle
push
insb
push
xchg
test
xchg
and
sti
mov
cmp
add
cmp
sti
mov
addl
mov
sub
out
inc
pop
das
loop
lret
aad
outsb
sbb
shlb
std
mov
sub
push
jae
stc
roll
push
add
mov
into
sub
sub
xchg
adc
mov
lea
aam
outsb
sti
insl
shll
lods
jp
adc
pop
jmp
insb
std
cs
add
and
pop
mov
pop
ss
jmp
addb
sbb
lcall
jns
addr16
add
xor
test
push
mov
cwtl
xchg
jmp
sub
or
lcallw
add
and
js
shrl
cmp
call
mov
push
mov
fisttps
cmp
adcb
test
enter
hlt
mov
dec
jecxz
push
pop
incl
and
jp
xor
popf
xchg
jmp
jl
out
ljmp
jg
pop
out
pushf
rcrb
pop
lret
push
icebp
call
fdiv
pusha
fdiv
mov
repnz
jmp
and
in
in
push
push
lret
add
dec
enter
sub
mov
jg
sbb
inc
daa
sub
or
cmp
mov
push
scas
jp
and
and
cld
inc
pop
ret
stos
xor
cs
inc
and
aas
add
add
sub
repz
push
inc
pusha
xor
lcall
inc
and
push
cmpsl
arpl
subb
decl
pushf
inc
xor
scas
test
and
push
div
sti
cmc
dec
test
decl
ljmp
loope
jmp
hlt
rclb
ds
xchg
cmp
adc
orl
jno
das
xor
and
dec
jmp
adc
pop
pop
add
adc
enter
aaa
or
mov
lcall
xchg
ljmp
aad
fdivrl
mov
lods
fcos
sbb
cs
adc
ret
loope
lock
dec
rcrl
mov
dec
or
maxps
jecxz
ret
mov
movsl
pushl
je
or
dec
jno
and
sub
xlat
stos
repnz
inc
pop
mov
or
push
add
jo
add
xchg
filds
mov
push
jecxz
sub
add
cmp
cld
mov
lock
xchg
fildll
aad
out
clc
cmp
outsb
or
cmpsl
push
adc
lahf
pop
mov
cmp
jle
test
mov
mov
sbb
push
lahf
incl
mov
mov
iret
out
loopne
mov
xchg
push
pop
dec
clc
test
inc
das
sahf
dec
xchg
popf
cmp
stc
cld
pop
orb
add
jns
pop
ljmp
xchg
lcall
rolb
jb
sub
divb
mov
dec
dec
add
inc
and
add
jmp
das
call
xor
push
divb
daa
jmp
fcoms
cmpsl
and
insl
xor
cmp
mov
into
lock
sbb
mov
je
jmp
loop
inc
dec
fbld
adc
les
xor
inc
push
icebp
sub
popa
sub
test
mov
inc
in
lods
shrb
decl
in
xor
mov
add
dec
pop
ret
dec
rcr
cmpsb
adc
add
sub
xor
stos
cmp
jo
push
dec
sub
std
or
push
cmp
mov
test
dec
fucomip
popa
adc
and
inc
test
outsb
xchg
xchg
mov
xlat
add
incl
mov
lcall
sbb
xchg
xchg
incl
push
xor
push
adcb
inc
jmp
mov
add
clc
movsb
dec
das
jne
push
roll
cmpsl
pusha
inc
and
or
jmp
xor
aaa
dec
scas
adc
or
insl
inc
cmpsl
outsl
or
movsl
adc
push
xchg
adcl
pop
jb
add
or
sub
sub
jp
fstp
dec
cld
inc
jb
not
xchg
outsl
add
lea
xchg
mov
cmp
inc
jb
lock
ss
fmull
xor
daa
dec
xlat
pop
lcall
mov
add
mov
xchg
fisubrs
mov
flds
ss
clc
push
mov
cli
dec
lahf
loop
loopne
clc
and
fbld
incb
sub
subl
and
or
mov
fmul
fsubrs
pop
jmp
mov
decl
xchg
outsl
cmp
pop
lock
insl
jl
das
mov
mov
mov
jmp
mul
add
or
mov
daa
adc
or
cli
dec
adc
xor
cmp
cld
jae
mov
mov
xor
mov
and
mov
mov
and
xor
sbb
or
and
and
std
fcompl
dec
push
xchg
push
mov
xchg
sub
cmpsb
std
cmp
pop
outsl
leave
xor
popf
xchg
push
shl
cs
scas
pop
bound
or
sbb
add
jmp
add
cmc
sbb
sti
push
mov
das
mov
jmp
mov
jge
out
lcall
sbb
decb
fimuls
pop
xor
xchg
or
movb
cmp
fsubl
add
mov
pop
std
or
sbb
mov
int
fcompl
jg
call
icebp
add
pop
orl
shll
stc
or
ljmp
movb
daa
in
jae
subl
push
mov
sbb
add
push
sbb
push
or
push
jns
loop
push
lret
pop
roll
xorb
fucomip
pop
dec
and
icebp
dec
mov
or
fcompl
mov
adc
lea
inc
sahf
ljmp
mov
add
dec
xchg
or
fiadds
decb
xchg
in
mov
jmp
in
adcb
jae
das
push
dec
xchg
xchg
shlb
xchg
mov
sub
mov
repz
dec
test
xchg
leave
lret
ja
cld
pop
add
push
xchg
or
add
lds
nop
cmp
dec
nop
push
loop
push
or
push
push
mov
test
jne
add
cld
cmpsl
xchg
clc
dec
or
dec
adc
sbb
mov
mov
mov
loop
inc
pop
pop
in
cmp
or
inc
cmp
mov
js
push
insb
out
test
into
cli
arpl
dec
aad
mov
jne
bound
int
daa
addr16
mov
pop
xor
mov
inc
mov
fcoml
push
decb
xchg
xchg
les
push
cli
lods
push
popf
inc
fbld
or
sti
int3
jle
jb
call
dec
cld
aaa
pop
aaa
fwait
repnz
andb
pushf
cs
cmp
fmul
sbb
rol
jmp
lods
out
incl
es
jg
incb
jmp
daa
or
imul
add
sub
lahf
dec
pop
testl
nop
shll
mov
pop
adc
js
in
jmp
jg
scas
test
add
jo
outsb
lahf
sbb
pop
popf
arpl
pop
sub
push
call
jmp
ret
jmp
xchg
ljmp
repz
aas
imul
and
sbb
je
adc
rcrb
fists
jmp
int
mov
push
push
repz
adc
add
pop
das
in
cmpsl
pop
scas
test
jbe
int3
mov
xchg
int
xor
mov
or
out
inc
pop
jne
xor
prefetch
adcb
xchg
cmc
hlt
movsb
ds
outsl
je
stos
cmp
xchg
dec
mov
push
xchg
pop
bnd
ficoms
int
jp
das
sub
jno
push
shrb
push
fwait
insl
cmp
daa
popa
pop
insb
xchg
pop
outsl
mov
mov
xor
push
push
stos
or
or
push
gs
jbe
bound
add
cld
xchg
sarb
negb
xchg
cld
xchg
in
xor
and
adcl
mov
xchg
and
inc
sbbb
movb
or
xchg
add
xchg
incl
inc
and
ficomps
cmc
jbe
out
stos
stc
add
inc
xlat
aam
outsb
mov
popf
adc
test
lods
mov
mov
sub
clc
sub
cmp
add
mov
stos
push
aad
mov
ret
jle
adcl
dec
pusha
es
or
sub
sarb
enter
cmpsl
data16
sub
mov
pop
dec
cwtl
push
and
jb
adc
add
push
das
dec
or
mov
and
or
mov
aad
lds
add
adc
movl
mov
test
mov
andl
mov
and
decl
inc
cmp
jmp
pop
push
clc
insb
adc
pop
lcall
cmp
mov
mov
sub
dec
sti
scas
clc
pop
jl
push
fidivs
push
adc
rorl
push
call
add
push
mov
mov
sbb
xchg
pop
cmp
stc
psrlq
call
or
add
dec
pop
mov
adc
jmp
icebp
das
pusha
pop
jmp
cmp
or
add
scas
arpl
xlat
mov
mov
mov
outsl
pushl
in
add
daa
int
int
jo
push
push
push
rclb
cwtl
add
push
and
inc
add
xor
scas
cld
pop
and
adc
lcall
push
popf
add
push
add
mov
mov
divl
in
xchg
push
mov
or
aas
test
cmpsl
sbb
cld
add
mov
mov
orb
and
out
lret
xchg
gs
push
inc
stos
cwtl
shlb
imulb
dec
adc
ret
call
in
mov
lock
and
or
or
cltd
add
xor
mov
rolb
loop
sbb
mov
jae
cld
aas
dec
mulb
std
test
or
or
sub
notb
hlt
xor
add
pusha
mov
sub
pop
xlat
push
sub
jge
out
mov
in
repnz
popf
ja
cwtl
scas
sbb
sub
imul
mov
dec
mov
or
fs
push
std
jl
push
nop
lret
orb
mov
clc
arpl
push
test
leave
enter
in
mov
mov
adc
testb
mov
dec
test
jo
or
jb
loopne
mov
add
fisttpl
aaa
test
mov
and
cmp
daa
dec
je
add
push
jns
jg
test
lcall
mov
jmp
mov
js
jb,pt
loop
and
pop
ljmp
rorl
cmc
push
test
mov
mov
pop
or
jnp
daa
mov
sub
sahf
lahf
rolb
cmpsb
scas
jl
or
fucom
cs
sub
cmp
pop
cmp
mov
add
inc
add
pop
mov
pusha
mov
inc
subl
mov
fdivl
outsl
scas
mov
add
pmuludq
or
and
push
lock
push
lcall
call
jbe
jp
add
movsb
clc
or
and
mov
push
add
pop
add
inc
outsl
adc
sub
pop
dec
enter
ljmp
pop
sub
mov
or
push
out
jg
sub
sar
movsb
push
adc
inc
shr
ljmp
and
clc
lods
push
js
repnz
call
not
int3
insl
push
and
call
push
pop
jl
pop
lock
call
iret
mov
pop
dec
aaa
adc
xchg
cmc
dec
shrl
outsb
je
repnz
adc
jne
mov
xor
mov
jg
inc
push
mov
jae
rol
repz
mov
mov
cmc
ljmp
aaa
add
push
sbb
xorl
bound
incl
iret
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
pop
mov
xor
lock
cs
adc
loop
mov
fstpt
pop
add
jmp
lcall
out
leave
pop
jno
cmp
repz
rcll
rorl
insb
push
icebp
incl
daa
jae
dec
jge
push
sar
dec
adc
pop
and
push
arpl
sbb
push
adc
data16
sbb
mov
lea
cmpsb
add
jb
push
adc
xchg
rclb
call
push
and
lods
dec
mov
mov
adc
xor
xchg
cli
arpl
jb
aaa
cwtl
or
rolb
test
mov
mov
inc
mov
pop
jg
adc
orl
pop
call
dec
push
mov
ljmp
add
dec
push
jmp
dec
fwait
jl
iret
lds
ds
xchg
and
rorb
add
and
jns
pushl
inc
sbb
mov
pop
lahf
mov
decl
cmp
sbb
cmp
push
cmp
xchg
ja
mov
xlat
inc
call
jns
push
adc
movsl
pop
lods
in
mov
adc
dec
pop
xchg
imul
outsl
jg
mov
cld
je
push
mov
xor
cwtl
jmp
aas
xor
jne
sahf
mov
test
dec
test
sub
pop
pop
or
js
pop
adc
sub
pusha
arpl
scas
ret
mul
mov
mov
filds
and
ficoml
std
roll
push
push
pop
sub
and
or
cld
inc
push
mov
xchg
xchg
or
cmpl
jnp
incl
lds
xor
add
leave
das
cmp
mov
mov
test
cmpsl
xchg
fcomp
test
inc
hlt
loope
cmovns
lock
fidivrs
adc
jne
pushl
hlt
ss
adcl
lock
mov
mov
outsl
std
and
ret
ss
push
das
ds
sub
cld
or
lret
cmp
xorl
jg
mov
call
or
inc
test
rolb
mov
mov
in
push
adc
repnz
xor
xchg
lock
push
push
pop
out
leave
inc
bound
push
imul
mov
xlat
out
cli
lret
add
sti
adc
jle
fiaddl
das
xchg
mov
mov
hlt
clc
cmp
cmpl
lcall
push
lcall
push
scas
repnz
cmc
sbb
mov
fistl
inc
mov
sub
imul
in
in
repnz
mov
lcall
sbb
mov
or
out
or
mov
mov
mov
push
ljmp
jp
clc
fistps
inc
dec
stos
push
gs
mov
push
mov
push
das
jnp
pushf
or
stc
sub
jbe
mov
mov
std
add
lcall
out
cltd
incl
mov
jno
mov
shrl
lock
cmp
pop
dec
sub
pop
and
ljmp
daa
xor
mov
outsl
jge
inc
and
add
mov
outsl
xor
dec
pop
ljmp
jnp
mov
xchg
mov
mov
in
test
stc
cld
mov
jmp
adc
and
aad
dec
jecxz
clc
outsl
test
jno
xchg
dec
pop
inc
shll
sti
sbb
cmp
sbb
push
js
sbb
pop
ja
icebp
jnp
dec
mov
arpl
xchg
daa
mov
sbb
hlt
mov
sbb
xor
adc
xchg
clc
ljmp
xchg
inc
aam
stc
pop
jmp
dec
push
pop
fdivl
rcrl
cli
pop
enter
xchg
pop
incl
inc
mov
andb
inc
mov
push
or
and
sbbb
xchg
jle
aam
in
lcall
jne
sbb
imul
push
and
push
and
or
lock
fdivrp
pop
pop
inc
dec
mov
aad
ret
xchg
incb
dec
adc
ljmp
sub
mov
jnp
ret
stos
decl
rorb
lds
mov
mov
ja
popf
jecxz
dec
pop
ret
movsb
subl
pop
dec
icebp
mov
pop
lret
mov
hlt
scas
call
pop
mov
mov
lcall
cld
movsl
xorl
or
mov
add
loopne
sub
std
imul
hlt
or
aaa
dec
inc
aas
icebp
push
test
or
cli
adc
mov
sti
xchg
add
cmp
fiaddl
xor
sti
or
sbb
lcall
jmp
loopne
xor
xchg
or
jmp
test
decb
mov
ret
add
ss
jae
add
dec
mov
movsb
and
ret
jg
dec
pop
ret
lcall
dec
ljmp
cmp
push
jmp
cwtl
cmp
sbb
mov
xor
xchg
mov
sbb
and
pop
xchg
mov
sbb
stos
add
and
test
xlat
sbb
dec
jae
sbb
ja
call
outsl
jo
test
xbegin
imul
pop
fs
add
pop
ja,pn
dec
lods
xor
mov
pop
out
loop
push
jmp
or
or
dec
jb
incl
jo
lock
jle
pop
xor
std
pop
cs
dec
or
incl
adc
add
xor
cli
mov
pushf
imul
fiadds
mov
icebp
cmp
repz
call
subb
inc
inc
push
js
mov
or
and
fld
mov
pusha
popa
mov
incl
pop
add
or
aam
adc
outsl
mov
sbb
scas
inc
inc
lahf
xchg
in
decl
repnz
sub
and
add
inc
sbb
ds
dec
adc
xor
xor
cmc
add
xor
sbb
cmp
push
pop
outsl
jb
pushl
jnp
cs
add
mov
pusha
je
fisttpll
arpl
mov
fidivrs
loopne
pop
ja
stos
add
hlt
push
or
add
pop
mov
mov
out
loop,pt
add
push
cli
ljmp
add
inc
mov
xchg
mov
add
idivb
ret
icebp
cld
test
test
sbb
inc
adc
jnp
test
inc
inc
fsubs
cwtl
hlt
imul
in
and
fists
jge
inc
decl
dec
sbb
adc
mov
insl
pop
in
shlb
push
inc
aaa
dec
and
popa
jg
cmp
call
inc
and
pop
fisubrs
inc
shl
pop
cmp
xchg
cmp
mov
mov
das
fsts
push
stos
out
jg
xchg
divl
cmp
imul
dec
push
pop
arpl
jle
sbb
shll
mov
inc
mov
xor
notl
enter
outsb
add
fstps
or
and
adc
mov
out
cmp
fistpll
test
push
loop
mov
inc
and
xchg
cld
test
push
scas
leave
outsl
pop
add
or
js
add
sub
xor
sar
repnz
fcoml
jp
in
ret
fnstsw
aad
inc
movsl
xor
pop
lods
stos
or
jle
aas
or
call
testl
sar
adc
jle
fsubr
push
cwtl
inc
add
mov
or
das
mov
jnp
and
sar
data16
adc
sub
xchg
xchg
std
mov
adc
mov
imul
les
clc
push
clc
fisttps
push
iret
rcrl
loopne
arpl
ret
fdivrs
sub
sub
mov
pop
pushl
lea
insb
adc
and
dec
lea
and
int
aad
xor
pop
sbb
sub
rorb
lock
mov
or
adc
loopne
inc
lods
xor
lea
mov
rorb
inc
inc
mov
or
or
enter
push
inc
mov
sub
es
ret
jo
jp
dec
push
push
test
pop
jno
pop
lds
mov
pop
enter
int3
mov
mov
mov
movb
push
inc
clc
cmpsb
adc
fistpll
cmpsl
fisttpll
decl
incl
out
jne
sti
push
ss
data16
or
jns
adc
jae
ja
fmuls
lock
outsl
inc
jge
mov
jnp
jg
test
sub
mov
xchg
test
mov
and
daa
mov
aaa
aad
enter
into
shl
stos
cmp
push
pop
pop
sub
push
cltd
js
cs
add
mov
mov
cwtl
sbb
add
pop
inc
lret
lea
jge
lock
rcrb
cli
int3
inc
das
mov
in
inc
push
outsb
pop
inc
lret
xor
lcall
sahf
cmp
jae
lods
pop
cmp
inc
add
xchg
test
aas
pusha
xor
push
in
repnz
in
fwait
clc
addb
hlt
out
mov
jno
insl
dec
mov
jl
mov
add
leave
cltd
mov
movzwl
add
mov
mov
lock
pop
pop
insb
mov
adc
popf
loop
sbb
and
scas
xlat
mov
adc
adc
jg
adc
aas
push
es
dec
daa
repnz
cmp
add
dec
pushf
sahf
mov
and
pop
push
jae
dec
sbb
out
inc
je
insb
iret
lock
or
sub
or
gs
fcoms
mov
sub
dec
mov
mov
ret
jns
movsb
fwait
std
sar
push
push
jp
adc
movsl
pop
jns
mov
repnz
jno
dec
imul
xor
xor
ljmp
cltd
dec
sbb
mov
jg
pop
xchg
or
imul
add
cld
stc
pop
mulb
xchg
push
sbb
push
jmp
dec
push
lret
call
add
xchg
pop
sbb
out
add
add
call
sbb
lods
xor
cmp
fimuls
mov
out
pop
and
int
ret
inc
in
cli
push
call
lcall
cmpb
mov
lcall
mov
in
fsubrl
js
mov
in
sbb
add
cmp
adc
movsb
fimull
out
movsl
sar
dec
push
xlat
xchg
fistpll
add
test
mov
pop
sub
push
inc
xor
dec
xchg
push
xor
int
fildl
pop
and
inc
add
mov
shll
or
and
cld
stos
mov
or
movsb
mov
decl
jmp
ret
call
sub
cmp
js
rcrb
std
lcall
mov
cld
lock
clc
inc
das
orl
rcrb
loop
sti
pop
add
cmp
sar
pop
jmp
fildl
ja
jne
push
add
lock
push
sahf
roll
pop
sti
scas
add
gs
mov
scas
push
shrl
cmc
mov
std
hlt
sar
lea
adc
mov
loope
and
test
imul
movsl
aam
add
or
je
push
ret
pushl
xchg
dec
jnp
lret
and
push
clc
push
mov
mov
movsl
jne
ret
mov
xchg
test
sbb
adc
fucom
sarb
outsb
cmp
pop
mov
or
sub
jle
and
loop
dec
sbb
pop
inc
stos
jp
mov
pop
jmp
add
jmp
stos
cmp
cli
dec
adc
call
inc
lods
jp
ja
sarl
and
adc
xorb
add
fnsave
movsl
push
push
addr16
sbb
xchg
pop
jmp
loopne
lahf
lock
movsl
push
sbb
pop
pushl
push
out
inc
sbb
repnz
inc
cmp
sarl
incl
adc
add
xlat
xor
xor
popa
lret
jne
ds
mov
cmp
mov
nop
outsl
inc
clc
mov
add
inc
adc
sub
leave
jl
xor
jp
sbb
incl
in
push
mov
dec
ret
mov
js
inc
inc
fcmovb
decl
jg
jl
add
cld
jge
jmp
pusha
mov
push
mov
adc
jmp
mov
mov
fisttps
ret
cmp
mov
adc
pusha
hlt
jo
push
fwait
decb
mov
pop
xor
xchg
call
add
xor
cmp
das
leave
xor
les
stos
fidivrs
hlt
jns
repnz
mov
jmp
jg
sub
adc
int
lcall
push
pop
call
add
or
mov
add
loop
sbb
clc
adcb
lcall
out
stos
xchg
pushl
mov
cmp
daa
adc
pop
int
adc
push
and
and
pop
ret
loop
mull
filds
call
jmp
std
pop
lock
push
cs
cmc
fdivrp
xchg
pop
lds
incl
push
cli
adc
sub
xchg
test
stc
jmp
mov
shl
stos
cwtl
loopne
inc
das
cld
jge
add
rclb
push
add
sbb
ret
add
and
lret
iret
mov
inc
not
sub
push
xor
je
dec
add
add
xor
jb
adc
inc
clc
cs
cmp
mov
rorl
test
push
movsb
push
sub
add
daa
call
mov
je
mov
incl
les
dec
add
mov
jle
les
and
outsl
xchg
in
add
add
dec
adc
incl
dec
mov
fmulp
pop
mov
or
sub
hlt
push
jmp
sub
add
mov
cld
ret
les
xchg
mov
pop
xor
mov
fsubs
movsl
pop
enter
das
mov
test
sarl
or
jmp
mov
mov
and
add
daa
call
cs
sbb
inc
lcall
add
movaps
mov
xchg
dec
popf
pushl
mov
das
shlb
sbb
mov
inc
dec
sub
and
mov
mov
shrb
call
aaa
or
jp
daa
jg
sbb
rclb
in
pop
test
add
sub
xor
dec
pop
pop
or
cmp
pop
jge
stc
sbb
fs
or
xchg
mov
inc
aad
dec
jns
call
aad
mov
inc
pop
leave
push
loop
add
dec
ds
clc
jmp
dec
add
ljmp
cli
fldl
fwait
mov
mov
inc
pop
inc
or
stos
mov
cwtl
sub
adc
bswap
adc
filds
mov
jge
loope
std
imul
incb
adc
push
shll
add
mov
add
and
sub
adc
imull
push
icebp
push
ljmp
xlat
std
pusha
adc
mov
data16
pop
ss
add
unpcklps
and
cltd
lock
popf
or
addr16
jno
in
fs
xchg
mov
mov
cmp
adc
mov
push
mov
xor
lods
leave
hlt
dec
jle
aam
xchg
mov
les
mov
mov
pop
jmp
test
fsub
repz
jne
mov
in
leave
pusha
cmp
mov
xchg
add
or
adc
loop
inc
iret
mov
shl
pusha
dec
ja
sub
jb
and
lds
in
sub
stos
pop
and
dec
in
push
cmpsb
imul
fsub
cld
dec
js
mull
lock
lret
sbb
cli
into
call
insb
xchg
por
dec
cld
dec
hlt
dec
lods
sbb
incl
jl
cmp
incl
rorl
leave
or
push
stos
in
arpl
inc
pop
cld
fcom
cld
xor
int3
pushl
lock
jecxz
lock
pop
lods
lea
pop
lret
pop
movsl
pop
clc
std
cs
dec
pop
pop
inc
add
push
bound
add
jmp
adc
cmpsb
push
cmp
mov
imulb
call
adc
std
outsb
aam
aad
loop
sbb
lock
mov
call
imul
ret
mov
addl
mov
test
js
call
push
add
call
shrb
mov
pop
mov
add
or
lahf
loop
inc
popa
fisubrs
pop
jb
xchg
xchg
adc
mov
lsl
cmp
jg
sbbl
dec
das
lcall
mov
dec
aas
das
ds
decb
push
sub
pop
xchg
push
in
pop
and
aam
paddb
in
dec
lock
cld
inc
dec
pop
addl
mov
sbb
lods
push
xchg
push
lds
movsl
pop
inc
int
mov
lcall
or
test
clc
out
adc
shlb
rcrl
adc
outsl
sub
xor
jbe
inc
push
lcall
out
mov
fadd
shll
decl
add
sbb
pop
and
jmp
stos
cwtl
add
movsl
roll
dec
cmpsl
fnstenv
add
add
jg
add
push
ja
bts
loopne
pop
clc
and
mov
pop
movsb
jmp
cmp
sub
clc
cmpsb
or
pop
add
pop
sti
je
jbe
incl
fsubrs
mov
std
adc
xchg
adc
pop
dec
mov
push
mov
add
cli
xchg
mov
sbb
push
std
xor
mov
fwait
les
inc
cli
decl
cmp
jge
rolb
push
mov
jne
adc
inc
sbb
adc
and
xlat
std
lea
inc
or
mov
jne
mov
xchg
push
cld
out
subb
add
nop
movsl
pop
adc
fldl
ljmp
cwtl
rcll
dec
xor
adc
push
pop
mov
and
hlt
adc
stos
sbb
cmp
inc
outsl
ret
je
or
test
xorb
dec
call
sbb
adc
loop
xchg
adc
cmp
or
adc
jo
lock
push
hlt
mov
lds
sub
dec
jne
sub
jmp
cmp
aad
add
pop
stc
fadds
testb
and
and
xchg
ret
push
dec
outsl
sub
psubw
int3
add
cld
jne
sub
cli
cwtl
movsb
incl
push
jne
ret
xor
or
pushl
mov
lods
dec
shrb
jne
pop
das
add
in
in
jns
fisttps
call
pop
daa
pop
ljmp
jno
lods
inc
adc
out
cmp
aaa
out
and
clc
pop
push
lock
pushf
pop
clc
push
jp
or
addr16
adc
std
xor
xchg
mov
mov
pop
xchg
imul
push
mov
jge
clc
shrl
xlat
dec
xchg
mov
in
cld
cs
insb
inc
cwtl
or
push
loop
ret
pop
push
pop
mov
pop
mov
ljmp
daa
jmp
ret
movsl
mov
pop
mov
pop
sub
or
mov
loopne
sub
jge
clc
in
pop
cmp
adc
mov
xchg
test
sahf
add
or
jge
cmc
js
xchg
aad
rcrb
roll
ret
test
cmp
cld
sahf
outsl
insb
xchg
aam
hlt
and
nop
faddl
pop
iret
fs
in
loopne
xlat
add
mov
adc
int3
pop
call
pop
lret
les
movsb
jp
mov
sub
push
adc
inc
cmp
sbbb
jne
pushf
incl
jmp
xchg
loope
paddw
mov
clc
adc
outsw
sub
lret
cmp
cli
je
or
add
add
test
push
ret
inc
lods
cltd
dec
jmp
call
mov
decb
shlb
mov
mov
cmp
adc
shlb
or
cmpl
rcr
jmp
dec
add
or
cmp
das
push
sbb
inc
pushl
sub
mov
nop
xchg
movsb
inc
cmp
dec
call
lods
jb
or
jg
add
in
inc
iret
sbb
cld
add
add
jbe
fimull
xchg
divl
adc
jne
add
inc
rorb
decl
pop
call
and
mov
xlat
decl
nop
jno
test
add
loope
call
cwtl
jg
pop
es
js
push
xchg
mov
pop
loope
mov
cli
rolb
mov
dec
or
push
sbb
sub
pop
mov
and
push
loopne
and
iret
pop
bound
jo
push
fisubrl
push
xchg
cld
lcall
mov
call
mov
push
mov
push
cmc
xor
add
dec
jmp
das
jnp
testb
inc
inc
ffreep
cmc
dec
insb
ret
inc
ds
add
inc
xor
xchg
std
dec
jo
jae
adc
push
mov
jo
out
loope
cmp
lock
out
xor
jl
clc
pop
xchg
aas
loopne
sub
orb
hlt
rorb
xorl
in
mov
cli
int
pop
pop
ja
add
add
push
arpl
mov
out
aaa
arpl
dec
cmc
cs
fcmovnb
mov
scas
mov
std
clc
sbb
das
inc
out
push
inc
jmp
push
leave
mov
or
cltd
pop
clc
in
clc
test
inc
sbb
aam
or
jg
bound
aam
pop
jge
shrb
sbb
mov
jl
jl
xor
pop
lock
jmp
fwait
pop
jg
sub
add
fistl
les
adc
adc
add
jg
repnz
scas
aam
xchg
lods
add
call
stos
jl
push
jl
call
pushf
and
enter
mov
aas
es
movlhps
sti
fsub
icebp
divb
mov
loopne
fbld
cmpsl
jg
inc
add
xlat
jns
adc
adcb
cwtl
mov
pop
insl
sub
lock
sbb
andl
push
sub
int3
push
std
cmp
push
cmp
xor
push
push
ljmp
adc
mov
jo
jle
dec
inc
sbb
pusha
jg
push
push
pop
clc
daa
incl
cmp
sub
xorl
dec
push
call
cmp
pop
daa
sbb
hlt
sar
add
js
sub
cli
mov
adc
xor
push
arpl
test
andl
imul
shlb
cld
cli
jl
and
pop
or
mov
inc
daa
cmp
dec
inc
mov
jnp
mov
test
call
dec
inc
mov
push
pusha
incl
les
jne
shlb
idivb
lock
aaa
icebp
pop
lret
lock
push
aaa
enter
jo
pushf
ljmp
add
dec
cmp
mov
adc
test
sbb
jmp
inc
stos
jbe
push
ret
xor
lock
dec
hlt
outsl
orb
leave
dec
in
push
and
sti
or
inc
lret
add
test
loope
jp
lea
mov
cmp
loopne
addb
xchg
loope
out
lods
hlt
jecxz
push
call
cli
dec
dec
in
lret
std
cmpb
call
les
test
mov
in
aaa
shrb
fadds
fdivrl
ds
cmc
fildll
aam
adc
out
sbbb
popf
insl
add
lahf
mov
xlat
orb
pushl
add
sbb
or
sub
bound
and
add
cwtl
dec
mov
and
add
mov
jmp
les
jnp
dec
clc
iret
cmp
fbld
mov
cld
ja
nop
add
cltd
ljmp
sub
jle
dec
addr16
in
xchg
in
mov
mov
jo
dec
nop
das
or
and
bswap
mov
lret
sub
lods
in
or
aam
repnz
mulb
rclb
add
mov
inc
outsl
outsb
push
adc
movb
rorb
cmc
ficompl
movswl
mov
or
add
shll
and
outsl
push
pop
mov
jmp
add
jg
cld
sub
inc
mov
push
pop
inc
pop
decb
stc
inc
pop
jp
push
and
xchg
icebp
xor
add
aad
fadd
incb
and
ljmp
movsb
sub
ljmp
mov
fildl
ljmp
fsubr
push
mov
aad
add
or
sbb
loope
adc
cwtl
add
inc
in
add
jmp
in
pop
or
add
std
das
cmpsl
pop
sti
scas
das
dec
adcb
jnp
stos
nop
cmp
add
mov
js
sbb
add
stos
mov
addb
mov
cmp
ljmp
cmp
pushl
inc
pop
jmp
cmp
sub
adc
stc
mov
call
push
sbb
push
xchg
and
imul
shrb
push
das
sbb
mov
adc
rcrl
jns
iret
data16
sti
mov
int3
bound
inc
add
mov
push
adc
jp
sub
sbb
mov
or
sbbl
hlt
aad
call
flds
cmpsl
mov
adc
pushl
add
cmp
inc
sarb
aam
pop
sbb
xor
loop
cmp
pop
pop
sub
mov
mov
sub
rcrb
pop
pusha
cmpsb
std
mov
xor
push
pushl
and
int
andb
pop
xchg
fbstp
stos
icebp
add
les
cmp
fimuls
push
jbe
cmp
test
add
add
std
sti
fisubs
jg
inc
mov
or
pop
cmp
cld
push
lds
adc
inc
inc
in
push
das
mov
adcl
pusha
js
pop
mov
mov
outsb
fst
out
je
fiadds
and
inc
enter
cld
or
rcrb
mov
add
ja
cmp
push
push
cmpsb
or
aas
sbb
sub
sbb
jge
mov
call
dec
pop
lods
pop
cli
movsb
incl
aam
xchg
jno
rcrl
cmp
xchg
rcll
or
pushl
and
fbstp
ret
pop
in
xor
jmp
or
sub
enter
lcall
and
decl
push
cli
call
pop
xor
addl
pop
mov
incl
add
std
mov
div
cmp
inc
cmp
outsl
stos
push
mov
sti
push
and
mov
push
test
cmp
mov
rclb
jg
dec
sub
mov
and
test
hlt
fimuls
inc
int
call
movsb
pop
xor
adc
pop
pop
cwtl
adc
cmp
sub
push
iret
outsl
addl
jecxz
int
decl
jae
ror
in
jmp
add
jg
mov
clc
mov
sarb
aaa
out
faddl
loopne
xor
mov
sub
jg
js
mov
dec
incl
mov
jno
sbb
jmp
test
xchg
cmp
xchg
dec
stos
lock
cmpb
sub
mov
call
add
jl
mov
addb
mov
call
pusha
inc
subb
jg
mov
lahf
out
and
inc
movups
mov
or
cwtl
rcrl
jge
push
leave
aad
aas
bound
xor
sti
mov
xchg
jmp
mov
mov
int3
adc
jae
inc
outsl
xchg
sti
and
add
sbb
enter
add
movb
adc
sti
pop
jecxz
int
push
sbb
xor
jecxz
pop
sub
mov
push
mov
add
push
adc
mov
push
inc
aad
test
mov
shll
mov
mov
lock
push
and
cli
test
daa
mov
pop
shrl
fstpt
sub
jl
sahf
add
fsubrl
inc
movsl
add
in
nop
push
sbb
adc
aaa
cltd
mov
inc
jae
xchg
push
test
shrb
pop
mov
and
adc
adc
ljmp
aaa
ret
shll
addb
outsl
addl
mov
pop
pop
imul
mov
adc
call
fisubrs
mov
cld
jle
cmp
popf
test
test
add
incl
incl
adc
outsl
leave
insb
and
insl
mov
pop
or
cwtl
xor
jbe
pop
loop
xchg
and
cs
sub
andb
outsb
movsb
orb
jge
inc
int
sbb
daa
sbb
std
inc
incb
fs
or
xor
xor
rcrb
pusha
cmp
jl
scas
loopne
pop
xor
rcrl
incl
int
pop
clc
mov
pop
push
lret
push
add
sub
lcall
inc
inc
call
sbb
mov
pop
outsl
sar
jl
cld
addl
cmovo
or
or
add
call
je
xchg
push
shr
loop
int
jg
add
xor
mov
or
aas
jecxz
inc
fisubrl
shrl
test
dec
jmp
add
jae
roll
decl
push
mov
pop
lcall
jne
or
cli
mov
mov
test
mov
xor
sbb
adc
mov
or
adc
inc
sub
std
cwtl
dec
push
or
mov
insb
pushf
dec
fcomps
cmc
jl
inc
es
outsl
mov
mov
mov
add
mov
mov
add
jbe
jp
loope
outsb
add
xchg
jmp
fimull
mov
mov
adc
or
pop
incl
out
sarb
loopne
xchg
outsl
mov
and
call
dec
sbb
daa
cmp
xor
mov
ljmp
rcrb
and
xor
mov
mov
push
sub
mov
xlat
decl
rorb
sbb
cmp
push
lcall
push
hlt
shlb
cmc
adc
jge
lcall
inc
pop
test
jne
jae
das
jl
push
push
hlt
cld
lcall
sbb
jl
or
test
stos
pop
and
mov
jl
dec
jb
cmpsl
sub
shl
dec
stos
add
dec
andl
fucomip
add
push
mov
fnsave
mov
xor
pop
cmp
orb
movsb
cmp
pop
inc
jmp
add
jo
xchg
jg
or
lock
add
fwait
stos
push
push
fmul
xchg
decl
out
or
in
enter
inc
add
sbb
dec
pop
add
and
adc
or
call
outsl
lea
push
sti
mov
dec
jg
das
out
into
dec
mov
lock
push
dec
or
cs
fldl
clc
in
add
std
or
jo
add
call
add
fyl2x
cmp
pop
add
add
jle
sti
inc
ljmp
pop
shrl
mov
incl
sbb
lea
cli
fimuls
mov
pop
mov
cmp
fsubl
add
xchg
adcb
push
lcall
shrb
mov
pop
test
dec
lods
in
loopne
add
scas
aad
jae
push
subl
jbe
pop
sti
or
jg
int3
mov
and
inc
pushf
inc
loop
sar
jb
pop
xchg
mov
pop
arpl
mov
aaa
sbb
loope
je
lahf
jg
scas
nop
xchg
push
mov
mov
mov
sbb
call
add
ret
test
ljmp
sub
pop
mov
mov
pushf
jp
cmp
daa
fbld
add
mov
andb
cmpsb
hlt
pop
push
inc
sbb
sahf
mov
or
dec
pop
lcall
nop
xchg
mov
and
push
cli
ret
add
cmc
cmc
sub
cmp
or
daa
mov
xlat
push
mov
cmc
ljmp
dec
lock
fbld
or
int
sub
pop
adc
std
pop
push
add
or
mov
mov
mov
xor
lock
jg
sbb
xor
push
xchg
lock
cmp
lock
outsl
loopne
fadds
mov
xor
sbb
fmull
ss
pushf
lea
sub
mov
and
inc
jge
inc
jg
mov
inc
das
add
push
stc
fildll
pop
mov
jle
pop
or
out
lea
add
cld
push
insb
sbb
mov
arpl
or
pop
rep
jmp
or
cld
sbb
mov
and
jg
mov
jo
lods
mov
lock
jns
ljmp
imul
roll
fadd
sbb
mov
push
lret
movsb
pop
jae
sbb
cmp
cmpsb
hlt
repnz
arpl
fcomip
js
dec
xchg
sbb
push
and
insl
subl
and
dec
insb
incl
loope
mov
cmc
add
subb
jmp
sbb
aaa
mov
inc
in
cld
sbb
movsb
aas
jo
incl
adc
test
xor
sbb
push
or
scas
push
pop
pushl
sub
in
add
pushf
pop
mov
push
and
xor
dec
sbb
mov
push
jnp
rep
push
add
mov
or
call
data16
mov
les
mov
int3
lods
incl
clc
jne
xorb
call
mov
aas
add
add
push
lock
das
dec
and
inc
adc
push
dec
pop
mov
pushf
and
fisttpll
int3
sub
pop
push
dec
call
ss
inc
das
jae
lock
xor
add
out
psubd
adcl
les
std
inc
and
or
jns
push
daa
inc
aam
xor
cli
sti
jae
pop
insb
add
add
pusha
lock
fbstp
cld
aas
fisttpl
insb
jecxz
test
shr
sub
loopne
pusha
loopne
inc
push
pop
push
push
mov
rorl
and
lcall
sarl
mov
add
rcr
sub
push
sub
mov
push
jg
sbb
inc
jg
cwtl
nop
or
ret
xchg
add
les
jl
sbb
mov
pop
pop
and
cld
insl
call
inc
shrb
add
jg
pop
js
mov
jmp
add
or
mov
in
cmp
pop
les
lea
adc
fistl
incl
lcall
jmp
jmp
lock
cld
lods
push
pusha
or
or
pop
call
jg
mov
adc
xchg
mov
jg
int3
subl
cmp
test
mov
mov
call
add
cmp
push
jb
or
incl
jp
ljmp
out
das
sbb
inc
lock
cmpsb
ja
push
mov
out
imul
hlt
std
push
dec
add
cmp
outsl
xor
call
add
adc
movsb
pop
jmp
add
jl
fsubp
push
pop
mov
adc
cli
dec
bound
xlat
pop
mov
add
add
ds
nop
push
or
add
pop
xor
mov
call
inc
daa
push
cmp
add
bound
xchg
incb
cmp
es
mov
xor
fisttps
mov
ljmp
xchg
adc
hlt
jge
xchg
or
adc
pop
cmp
mov
mov
mov
lea
sub
pop
rclb
ss
adc
fists
rol
mov
shll
lret
pop
mov
add
popa
add
mov
jne
into
icebp
mov
incl
out
adc
cmc
sub
xchg
ret
push
call
add
andl
pop
jns
jge
rorb
jmp
mov
add
adc
negb
daa
xor
hlt
pop
mov
rcrl
jmp
xchg
mov
push
addb
jns
fcomps
and
aaa
dec
sub
mov
jge
inc
fbstp
sub
dec
mov
add
jbe
pop
je
xor
push
cld
push
or
jne
ds
rcll
sub
inc
test
fwait
xchg
ffreep
adc
pop
or
add
xor
mov
sbb
iret
xchg
ficompl
repz
enter
lcall
cwtl
xorb
and
cmp
das
push
jns
xor
push
shlb
sub
lods
addb
sbb
adc
xor
add
negl
pop
jne
test
cmp
cmp
push
cli
int
fsubrl
mov
std
xchg
mov
aaa
mov
scas
push
or
sarb
sbb
ffree
lgs
in
ss
pop
mov
ja
xor
outsb
jecxz
jge
dec
jne
inc
and
cld
xchg
imul
cli
pop
xor
pop
jmp
vmovddup
push
add
mov
inc
adc
dec
push
rcl
xchg
mov
ds
outsb
dec
or
sbb
sbb
aas
mov
adc
shl
movsl
mov
in
cltd
xor
sbb
pop
loop
outsl
mov
lahf
add
lcall
bswap
pop
push
ja
mov
adc
enter
push
aam
jb
mov
mov
mov
test
cltd
or
cmpsb
jecxz
or
imul
ljmp
lea
rol
sbb
dec
pop
ds
mov
arpl
std
sbb
stos
push
fsubrl
sub
sahf
xor
rcl
std
add
loopne
add
das
or
mov
mov
and
mov
test
cltd
sbbl
xchg
adc
sbb
jl
rorb
call
lock
jb
pop
in
fwait
jmp
sahf
out
cmp
pop
sbb
sub
mov
sub
stos
sbbb
inc
mulb
cwtl
out
fistl
jmp
adc
incl
stos
jge
cmp
mov
lods
jge
pusha
aas
in
loopne
lcall
test
jo
mov
clc
test
jg
xor
rolb
andl
lahf
ljmp
or
mov
mov
mov
les
push
outsl
add
and
loope
mov
gs
pop
ss
add
clc
dec
pop
lea
inc
add
mov
add
divl
sbb
or
and
es
cmp
shll
ljmp
das
inc
jmp
aaa
adc
mull
or
or
xchg
cmp
cmp
nop
pop
mov
js
loop
movsl
xchg
cmp
push
loopne
add
es
lea
sub
fmuls
fisttpll
dec
add
jmp
ss
jo
sbb
add
js
in
int
inc
pop
inc
xor
mov
lods
scas
push
mov
push
rcl
mov
push
mov
rcrl
mov
stos
cld
and
pop
cmp
in
lret
pop
jp
or
jecxz
xchg
add
pop
in
out
sbb
test
arpl
or
pop
adc
aad
das
cmpsb
add
pop
rclb
mov
ficoms
vmread
jle
scas
cwtl
dec
mov
rcrl
lods
das
movsl
pop
mov
fcmovnb
and
add
mov
mov
hlt
jne
push
sub
pushf
push
cmp
or
push
ret
popf
or
repnz
sbb
add
stos
notw
mov
mov
aam
cld
jno
sub
or
das
daa
out
nop
int3
aam
je
mov
pop
test
insb
aad
in
outsl
mov
nop
test
cld
ret
out
dec
arpl
in
xor
mov
decl
jno
scas
lcall
rolb
adc
sbb
dec
aaa
jg
repnz
mov
adc
dec
cltd
lock
stc
xchg
movsb
pop
jo
incl
out
test
and
or
and
xchg
sub
mov
add
rclb
inc
das
enter
shll
mov
or
xor
jl
pop
dec
inc
ljmp
je
nop
das
ret
ljmp
pop
sub
pop
jmp
jnp
or
decl
xchg
mov
xor
ljmp
in
jne
call
push
mov
sub
adc
jb
inc
cmp
jmp
adc
push
idiv
push
insl
add
inc
add
stos
inc
enter
xor
lret
inc
or
or
jle
mov
or
mov
ret
cmp
cld
aam
mov
pop
mov
movsl
and
xchg
cmp
out
mov
sbbl
jo
sbb
call
mov
add
ljmp
dec
divl
movsl
arpl
cmp
rcll
push
xchg
jbe
sub
and
ficomps
aas
and
xchg
add
mov
call
add
dec
sub
pop
adc
faddl
sbb
mov
mov
push
push
mov
shl
call
shl
add
call
xor
andb
add
pop
cmp
jecxz
xchg
das
dec
jb
pop
cmp
aas
add
sbb
sub
inc
neg
lret
lcall
scas
mov
rorb
sub
loopne
fisttps
dec
test
mov
and
pop
repnz
mov
add
decb
jb,pt
mov
pop
jge
xor
jnp
incl
and
fisttps
add
pop
int3
sbb
sub
add
lahf
lcall
add
test
adc
lock
add
add
cld
cmp
xor
les
jg
cwtl
incl
xchg
cmp
das
push
sbb
adc
imulb
aad
jnp
mov
pop
fists
out
insl
push
add
ds
xchg
dec
aad
push
cmp
dec
xchg
hlt
xlat
nop
lock
add
ss
daa
mov
lods
cltd
pop
stos
cld
push
das
mov
inc
mov
sbb
adcb
jnp
in
int
test
pop
push
nop
jbe
push
call
jae
mov
shr
cmpsl
idiv
jge
xchg
movsb
fistpl
mov
lods
or
addr16
pop
push
sbb
ror
add
pop
pop
das
dec
or
hlt
call
sub
fsts
add
popf
xchg
dec
dec
xor
shlb
clc
mov
inc
lods
in
jle
repz
jno
or
fdivr
jmp
cmp
mov
loopne
jmp
sahf
aad
dec
sub
je
sbb
and
dec
ja
ljmp
add
sbb
movsb
or
or
or
pop
dec
mov
pop
adc
cltd
je
dec
xor
jb
clc
push
aad
loope
mov
push
xorl
xchg
mov
add
sub
decl
movsb
testb
xchg
dec
inc
jmp
cmp
jmp
sbb
cmpsl
fstl
push
je
and
imulb
push
test
clc
xchg
mov
xor
aam
out
jmp
jg
add
aam
jmp
xor
lret
add
call
jnp
or
repz
pushl
mov
inc
dec
pop
mov
and
out
or
addr16
adc
mov
or
sbb
or
add
and
push
cmpb
pop
add
sbb
pop
es
mov
aad
add
mov
cmp
add
pusha
push
jbe
clc
adc
repz
dec
ret
mov
jg
jnp
jae
jne
fdivrp
daa
fwait
adc
jb
push
sti
call
cmp
pop
and
adc
xor
mov
test
or
pop
lcall
and
inc
adc
adc
aad
pop
xchg
adc
or
ds
fucomip
adc
jb
loope
jns
hlt
jg
shlb
xor
and
pop
adc
aaa
ret
ss
arpl
push
icebp
push
in
jp
mov
cli
daa
hlt
xor
in
xor
lock
decb
call
and
mov
pop
push
inc
add
pusha
xchg
rclb
inc
jmp
mov
xchg
jo
lcall
les
adc
and
clc
insl
inc
or
add
sub
inc
ljmp
sub
adc
inc
aam
fists
adc
jmp
mov
movsl
jb
jle
mov
jbe
add
mov
push
adc
or
and
xor
jmp
test
add
dec
loop
mov
pop
inc
cmp
push
mov
movsl
jmp
call
aaa
adc
decl
cmp
mov
xor
cli
inc
rcrb
mov
imul
loopne
or
fisubs
cmp
ficompl
getsec
jbe
sar
sub
xchg
inc
jb
shlb
fidivs
jmp
testl
cld
lahf
pop
add
insw
pushl
add
jne
outsb
adc
rorb
cmp
add
mov
fcoml
xor
jo
mov
or
jge
cwtl
xchg
in
rcr
das
scas
cltd
xchg
cmp
testb
add
sbb
add
sbb
push
mov
enter
cmpb
sub
xchg
cmp
inc
pop
ret
loope
add
add
loopne
cli
jne
push
pop
enter
in
sbb
lock
jno
adc
clc
jmp
jae
mov
jl
add
pop
or
hlt
push
fsubr
scas
adc
sbb
sub
daa
mov
js
ficompl
adc
mov
cmp
mov
stc
adc
clc
cmp
dec
xchg
dec
loope
dec
xchg
cld
jmp
js
cmpsb
push
ljmp
push
and
outsl
dec
sub
lock
clc
cld
dec
mov
cmc
push
in
mov
push
outsb
xchg
jl
stos
aaa
lahf
in
lcall
pop
repz
mov
jb
pop
dec
inc
xchg
inc
stos
shlb
ljmp
stos
subl
cmp
iret
mov
lock
hlt
mov
insb
xchg
test
add
pop
inc
inc
lcall
jmp
push
in
lcall
jo
decb
int
xchg
cmp
cmp
xor
push
xor
pop
pop
jb
hlt
adc
and
sbb
clc
pop
push
je
inc
sub
fldl
mov
cmc
or
mov
pop
sub
aam
add
aaa
add
loop
mov
pop
icebp
loop
dec
xor
xchg
xor
push
out
mov
lock
fdivrs
das
xchg
pop
and
ljmp
and
cli
mov
add
inc
cmp
into
daa
outsl
insl
add
mov
inc
or
mov
sub
filds
pop
push
cmp
incl
cs
test
mov
xor
add
xor
inc
mov
ja
stos
js
inc
clc
std
mov
add
loopne
inc
outsl
loopne
pusha
adcl
mov
decl
sbb
lock
sbb
loop
cld
mov
pop
or
push
mov
mov
sbb
out
mov
imull
and
add
inc
test
jg
push
sbb
sbb
dec
xlat
add
sub
or
xor
inc
call
test
popl
sub
mov
and
das
and
aam
les
pushl
loope
sti
xorl
rcr
xchg
decl
cmc
pop
mov
jnp
mov
aam
pop
incl
mov
stos
incl
mov
les
mov
in
cmp
fiaddl
jp
mov
sysret
cmc
les
pop
mov
in
call
sub
add
incl
in
iret
daa
xorl
adc
add
fisubrs
add
lds
loopne
cmc
pop
sar
mov
clc
or
add
rcll
add
cmp
inc
or
shlb
add
stos
add
dec
jle
loop
jo
ffreep
jecxz
adc
clc
popf
bnd
pop
add
sbb
push
jge
std
test
push
xchg
cwtl
sub
shl
pushl
in
inc
shr
ret
movsl
js
push
arpl
add
adc
repz
ficompl
or
hlt
add
and
dec
mov
mov
je
pushf
sub
pop
sbb
fnstcw
xchg
das
sub
xchg
push
sbb
or
xor
mov
sub
scas
jg
jmp
cmp
ret
jmp
inc
shrb
jge
xchg
pop
cmpsl
or
das
js
push
pop
push
and
and
insb
test
inc
dec
lea
xchg
lret
mov
outsl
xchg
lods
sub
into
mov
fldl
jg
sub
lret
mul
xchg
add
inc
push
sub
dec
cmp
push
pop
fsubp
sahf
test
mov
andb
test
mov
cld
clc
sub
xchg
dec
lcall
call
sahf
leave
sbb
lcall
fcompl
cld
ffreep
push
dec
les
cmp
out
ljmp
insb
xor
mov
ljmp
xchg
pusha
adc
mov
or
cmp
inc
cmc
enter
call
inc
mov
inc
cmpsl
add
dec
mov
loope
sbb
xchg
push
push
loop
pop
or
sub
clc
dec
dec
dec
xor
mov
adc
daa
popf
das
test
push
cmc
aas
or
add
sbb
popf
int3
lods
jl
in
add
fdivrl
lock
push
je
scas
pushl
fs
push
cmp
das
push
cld
sub
mov
mov
xchg
decb
and
push
mov
enter
adc
sub
mov
or
pop
inc
les
in
int
mov
jg
xchg
dec
add
pop
mov
mov
and
ljmp
or
clc
lock
test
mov
adc
lret
add
adc
addb
lods
pop
mov
dec
out
push
bound
mov
push
xchg
dec
jno
cmp
jmp
cmpb
fistpll
and
mov
loop
incl
dec
out
decl
ja
xchg
psubusb
jno
bound
push
mov
ss
jnp
mov
dec
xchg
loop
jbe
pop
punpckhdq
insb
dec
clc
lahf
ret
fsts
ret
enter
add
add
mov
std
ds
cld
fdivl
push
pmuludq
dec
mov
sbb
mov
jg
ljmp
add
sub
and
call
fistpll
pop
sbbb
bound
decl
loope
sub
jo
and
divl
test
lea
or
jmp
mov
jg
or
popa
cmp
and
repnz
dec
mov
xchg
daa
test
movsl
lahf
cld
jo
mov
and
mov
call
pop
rcrb
inc
outsb
popf
loope
mov
mov
mov
push
fsubrs
pop
push
loop
jp
or
inc
paddd
int3
jle
mov
cli
loopne
out
fbld
xchg
dec
sub
pop
add
incl
cld
dec
aas
incl
popf
mov
mov
xor
cmc
pop
cld
cld
push
or
outsl
xchg
pushf
jns
mov
cmpsb
and
test
ret
ss
inc
adc
add
lock
mov
pop
push
adc
ljmp
sub
add
or
push
rcll
sbb
adc
pop
fstp
loopne
inc
xchg
fucomip
push
add
sbb
sbb
test
mov
push
adc
jmp
orl
test
pushl
sbb
add
dec
jl
mov
and
push
aam
or
das
incl
inc
sti
call
hlt
or
or
outsl
sbb
push
outsl
jnp
xor
incl
aas
pusha
jo
andb
test
add
into
pop
add
add
orb
jbe
push
add
decb
or
pop
icebp
adc
dec
sub
mov
mov
loopne
mov
cmp
add
xor
clc
cli
mov
add
adc
pop
call
lods
inc
inc
add
in
mov
pop
outsl
rcrb
or
mov
or
das
jmp
jg
shll
stos
shlb
mov
into
xor
dec
sbb
dec
or
add
dec
and
lock
pop
xchg
leave
pop
inc
push
cmp
das
popf
arpl
ds
sub
or
mov
add
lods
into
cmp
xor
mov
inc
sbb
push
lock
stos
mov
inc
out
pop
xor
jecxz
adc
mov
mov
dec
je
add
dec
out
xchg
lods
dec
cmc
mov
xchg
ret
fincstp
push
inc
loop
adc
or
enter
mov
pushl
or
sbb
sub
ficoms
push
fiadds
clc
rolb
jmp
js
fnstenv
jle
outsl
push
pop
pop
incl
ret
cmp
out
shr
inc
shlb
popf
out
outsl
ficomps
pushf
push
andb
jg
adc
add
and
inc
push
jle
mov
inc
mov
pop
in
cs
xchg
dec
adc
jmp
lret
jecxz
and
stos
jp
or
pop
inc
inc
dec
cli
mov
fists
jno
or
sub
fwait
sub
lea
xchg
aas
push
jmp
mov
add
adcb
test
and
adc
mov
xchg
mov
sub
mov
hlt
test
and
aaa
xchg
ss
aaa
loop
loopne
and
push
add
enter
lods
mov
mov
jo
xchg
push
icebp
push
cld
aam
pop
js
jge
movsl
xor
inc
mov
adc
aaa
popl
adc
sbb
pushl
pusha
xchg
test
cs
add
movsl
jnp
lock
pop
stc
add
push
lahf
lock
ljmp
ds
icebp
sbb
ljmp
and
push
cli
inc
fs
mov
enter
movsb
add
push
ja
jo
cmp
inc
sub
pushl
addb
rcr
xchg
icebp
cld
iret
outsl
clc
jmp
add
and
sbb
inc
or
clc
inc
cmp
or
punpcklbw
out
aaa
cli
mov
or
sbb
loop
call
lcall
orl
push
sbbl
sub
lcall
decb
pop
mov
ret
call
jecxz
pushf
add
or
cmp
xchg
mov
push
decl
push
push
add
repz
sub
jg
pop
push
or
jg
adc
rolb
xchg
movsb
imul
cmc
movhps
fwait
jmp
and
adc
xchg
and
in
outsb
mov
lcall
andb
xchg
sbb
mov
inc
inc
incl
outsb
out
std
and
pop
push
inc
outsl
mov
or
lcall
add
inc
rolb
or
test
sub
lea
lret
call
repz
lcall
pop
mov
push
stos
pusha
mov
sbb
adc
mov
jb
decl
push
repz
decl
xchg
or
cltd
fcompl
cmovne
insb
xor
adc
sbb
pop
jmp
pop
push
cli
lods
pop
into
scas
fdivrl
pusha
jne
aas
sub
pop
test
xor
jle
cmp
cmc
cmpb
pusha
dec
xor
decl
jmp
dec
mov
mov
in
gs
outsl
push
add
sub
push
pop
push
xor
ja
adc
pop
test
rolb
lret
inc
incl
mov
adc
hlt
cmp
adc
das
dec
push
stos
call
and
xor
mov
and
std
push
cmovs
aam
push
inc
loopne
adcl
sbb
pop
les
push
pusha
add
pop
lcall
and
aas
test
gs
dec
in
jmp
mov
adc
stos
sub
mov
mov
call
fcoml
cmp
inc
inc
sbb
in
aad
test
call
int3
add
push
mov
push
in
mov
add
movsb
jmp
push
incl
jns
xchg
push
add
xor
arpl
cli
push
inc
push
cmpsl
pop
ret
and
jmp
rolb
int3
incl
add
or
shr
or
mov
inc
cld
jne
dec
mov
mov
jge
mov
and
enter
sti
lret
and
shl
pop
addr16
or
cmp
push
jo
test
ret
cmc
pop
xor
jp
inc
xor
iret
jo
call
fldl2e
loopew
hlt
jno
in
movsl
insl
and
pusha
mov
mov
adc
in
lret
dec
lock
mov
pushf
scas
inc
push
xchg
nop
addl
lock
cld
cli
add
incl
ja
out
icebp
pusha
push
outsl
std
outsl
xlat
pop
sbb
cld
push
add
lds
aad
imul
or
rclb
add
add
or
push
scas
push
mov
cmp
jae
iret
jns
xchg
inc
loopne
enter
sbb
out
and
out
mov
mov
std
jg
negb
jmp
lcall
or
movsl
insb
inc
fimuls
inc
inc
mov
lcall
xor
add
push
sbb
or
fsubs
shlb
add
jg
add
mov
ljmp
xor
in
arpl
aas
jmp
lods
xchg
test
adc
mov
or
divb
fnsave
sub
cmp
adc
lea
and
dec
frstor
roll
jg
mov
loop
decb
jnp
xchg
test
push
repnz
into
cld
imul
rolb
std
lcall
pusha
cli
insb
decl
in
les
sbb
int
dec
adc
lret
add
mov
or
sbb
into
arpl
loopne
jae
mov
jb
mov
lar
sbb
add
movsb
add
clc
dec
enter
mov
addr16
jg
fs
xchg
notb
int
push
inc
mov
or
cs
inc
inc
popf
cld
or
adc
pop
jae
loopne
rcrl
sar
push
test
add
pusha
pushf
pop
or
sbb
sub
ljmp
arpl
mov
pusha
es
cwtl
adc
and
sarb
dec
std
rorl
movl
and
jle
fadds
insb
testl
adcb
add
add
or
add
dec
push
sbbl
add
push
es
rcll
or
call
push
pushf
adc
arpl
or
inc
ljmp
or
clc
xchg
xor
test
movsb
push
or
sar
rcl
fcomps
in
or
lcall
sbb
pop
lcall
cltd
add
cli
and
mov
loope
jne
and
sbb
sbb
cmc
push
mov
and
inc
mov
aas
call
add
push
dec
sarb
cbtw
jl
mov
inc
adc
jecxz
jmp
cld
test
cmp
pushf
jmp
nop
xchg
jmp
mov
popf
incl
cmp
jo
loop
jg
push
rolb
int3
rorb
addr16
in
lods
out
mov
mov
in
fistl
incl
stc
ret
lds
cld
leave
pusha
call
and
decl
inc
lret
arpl
push
int
push
jns
sbb
jmp
nop
repnz
push
idivl
jmp
mov
sub
mov
outsl
shl
enter
cld
std
sub
fcomps
loopne
decl
cmp
inc
mov
add
lock
cld
cmp
inc
mov
inc
mov
fs
decl
cmp
xor
jmp
lock
in
mov
mov
shlb
mov
dec
ljmp
and
sbbl
flds
loope
loope
push
jg
push
or
or
xor
das
and
and
or
mov
xchg
andb
xor
or
rcrl
das
fs
and
call
in
ss
jmp
mov
pop
dec
sbb
adc
in
or
fistps
mov
fmuls
shlb
add
div
xlat
les
rcrl
mov
pushf
inc
shrl
push
mov
add
sbb
sbb
call
mov
icebp
cmp
adc
outsl
mov
xor
dec
rclb
xorl
jb
outsl
incb
out
addl
loopne
test
arpl
sbb
and
aaa
sub
inc
inc
andb
add
or
dec
mov
or
pushf
test
xor
stos
adc
xor
jo
mov
enter
ljmp
lock
clc
cld
das
pop
outsb
jo
pushl
adc
subl
adc
mov
sub
xor
lds
int3
mov
and
incl
adc
xchg
inc
and
add
and
sub
xor
decl
push
clc
pop
mov
je
cmp
xchg
xchg
and
mov
ret
or
sti
int3
sti
aam
fdivr
in
add
stos
das
lock
enter
gs
cmp
push
push
cmpb
in
movsl
fdivr
push
xchg
mov
mov
pusha
adc
adc
das
in
and
mov
mov
fdivl
sbb
mov
add
dec
dec
push
hlt
dec
dec
dec
push
outsl
pop
push
push
push
inc
add
pop
pop
push
lcall
pop
gs
push
adc
shlb
push
outsl
mov
push
in
imul
in
lock
jae
das
sub
jbe
inc
jmp
imul
add
divb
movsl
inc
and
xchg
outsb
out
aaa
jno
sub
jae
add
pop
inc
push
cmp
adc
pop
jo
push
outsl
aas
xchg
aad
sbb
cwtl
std
loopne
add
fadds
outsl
clc
adc
and
ret
jge
push
je
pop
loopne
jb
push
pop
mov
fwait
jae
icebp
jno
ja
pop
mov
mov
cmp
hlt
int3
dec
mov
jmp
jg
fsubrl
mov
push
mov
cwtl
insl
inc
or
test
enter
jae
push
pop
adc
lea
sub
adc
push
arpl
push
es
sub
inc
mov
mov
cld
pop
insl
sub
clc
adc
or
pop
mov
out
leave
in
ret
pop
xorb
jle
mov
mov
test
jbe
or
mov
sbb
xchg
add
and
push
cltd
sbb
xor
jo
push
push
push
sar
sbb
or
dec
clc
ja
sub
mov
pop
push
sbb
pop
inc
stos
pop
fmuls
dec
sbb
idiv
rep
cs
ja
push
arpl
inc
enter
hlt
mov
jge
jmp
ret
ud0
mov
jno
jge
mov
inc
lcall
adc
pop
sbb
cmp
call
mov
nop
sbb
fsin
int3
and
or
jno
adc
sub
nop
and
or
dec
lcall
das
icebp
fisubrs
hlt
adc
add
cmp
mov
add
cwtl
test
or
pop
lcall
shll
out
stc
test
movsl
movsl
push
incl
add
add
mov
sbb
or
and
lfs
jp
mov
mov
sub
xor
cmp
pop
test
push
dec
movsb
add
mov
mov
or
inc
int3
mov
mov
sarb
rclb
mov
jns
adc
or
and
loop
lods
call
repnz
push
inc
data16
vsubps
add
mov
xchg
pop
cmpsl
dec
call
fs
mov
or
cmp
push
stos
push
call
pop
push
cmp
inc
movl
pop
sbb
cmp
pusha
rorl
aad
movsb
sbb
cmp
mov
or
add
xor
or
push
test
call
pushf
jbe
add
dec
sbb
stc
and
push
std
movsb
jl
sbb
sub
inc
mov
sarb
fidivl
mov
pop
lock
imulb
mov
roll
shlb
repz
bnd
xor
sbbl
mov
pop
inc
and
cmp
enter
sub
int3
ss
sbb
add
mov
sub
cmpsl
clc
flds
ficoml
inc
mov
and
fiadds
lock
fmuls
push
aaa
das
nop
sti
ucomiss
test
je
inc
das
mov
mov
pop
and
inc
jl
dec
mov
mov
adc
xchg
inc
sahf
out
aaa
push
pop
shlb
cmp
icebp
les
and
inc
sub
sbb
and
cwtl
mov
loopne
fsubrl
xor
cmp
ljmp
adc
inc
sbb
or
lods
test
imul
xchg
popa
fdivrs
xchg
cmpsl
mov
lcall
ljmp
outsl
push
inc
sub
std
mov
mov
adc
ljmp
sbb
jl
adc
stc
and
mov
cwtl
outsl
adc
and
pop
xor
or
pop
push
cmp
lea
xacquire
shlb
leave
sub
adc
imul
decl
test
lods
mov
inc
jmp
orb
call
or
cld
bound
test
add
pop
xchg
push
pop
loop
add
xchg
inc
pop
sub
inc
mov
xor
fsub
cs
stc
add
loopne
mov
add
mov
pushf
pop
aaa
imul
rclb
inc
call
xor
mov
loop
add
fildl
shrl
add
sbb
push
call
jg
data16
push
mov
or
adc
fidivl
int3
dec
clc
mov
add
add
pushf
mov
nop
jbe
pop
pushl
xor
out
aas
popa
subl
and
decl
mov
add
cmp
add
add
sbb
push
or
inc
jns
lock
and
adc
shlb
mov
aas
in
ds
adc
mov
and
mov
leave
das
into
jl
inc
int
inc
mov
pop
xchg
lcall
sarb
loopne
jns
mov
dec
lock
mov
loopne
loopne
rcr
outsl
shll
js
and
mov
adc
cmp
add
mov
andl
push
adc
and
mov
push
and
mov
mov
ja
dec
cmp
dec
inc
pop
outsb
jns
cwtl
out
pop
push
mov
mov
cld
mov
sub
sbb
sbb
and
jnp
jl
sub
inc
sbb
push
push
lcall
cmp
cmpsb
repnz
lahf
lods
sti
aam
cmp
pusha
ljmp
mull
into
neg
lock
loopne
leave
movsb
mulb
sbb
cmp
add
pusha
mov
lcall
clc
lock
adc
jbe
gs
movsl
xchg
cltd
push
adc
add
adcb
into
std
loop
hlt
das
bswap
lret
push
inc
dec
es
inc
outsb
insb
test
sahf
xchg
lods
fistpll
sub
push
lea
decl
xchg
inc
and
insb
decl
mov
jmp
aaa
add
clc
loope
rol
mov
mov
lods
jg
adc
mov
decl
lea
fiaddl
out
mulb
or
add
sbb
dec
sub
push
outsl
or
data16
mov
jg
lods
push
lret
or
sar
add
sbb
cmp
cs
loopne
push
dec
push
call
out
aam
jmp
clc
mov
pop
push
rclb
add
xor
dec
cmp
je
mov
xchg
hlt
pushf
dec
and
and
loopne
add
xor
mov
pop
push
test
shlb
push
fdivrp
xchg
jb
dec
or
loopne
push
push
dec
lea
push
aam
jb
gs
arpl
push
cli
push
fnsave
mov
cltd
xor
inc
ja
pop
dec
pop
fcompl
inc
call
xor
fbld
outsl
xor
jb
jne
por
inc
in
adc
push
inc
xchg
outsl
call
dec
aad
sbb
cmc
sbb
test
lret
adc
push
sbb
cmp
adcl
insb
movsl
sbb
sub
inc
aad
pop
clc
and
or
jmp
dec
or
jo,pt
or
std
xchg
je
ljmp
bound
push
inc
and
js
jmp
add
and
adc
mov
loop
data16
outsl
inc
loopne
push
xchg
sbb
pushl
into
push
jae
cwtl
cmp
xchg
xorb
outsb
stc
pop
inc
inc
dec
adc
incl
or
push
insl
les
push
mov
call
inc
jb
sbb
mov
pop
xchg
mov
xor
sbb
loop
fs
jg
shlb
inc
pushf
inc
xor
sub
rcrl
stos
mov
sbb
sbb
cmpsb
jecxz
out
dec
jg
inc
sbb
andb
call
xchg
inc
adc
sar
lcallw
incl
rcr
jge
pop
push
sbb
jnp
stos
add
push
mov
fs
cwtl
dec
add
jmp
inc
cwtl
mov
jns
mov
imul
lock
test
decl
push
cmp
xchg
aam
dec
call
jb
lret
pop
pushl
jns
inc
mov
callw
xor
outsb
jmp
rorb
sahf
add
mov
dec
cmpsb
add
lcall
or
jo
imul
addr16
push
inc
xchg
and
fldcw
dec
lcall
adc
mov
and
xchg
add
sub
jo
sarb
lock
jne
pushl
push
sub
pop
nop
add
pop
dec
adc
in
call
push
pushf
loope
cmp
mov
push
lcall
add
pop
ficoml
addr16
pop
inc
mov
sub
ds
ss
and
fisubrs
jnp
hlt
xchg
jbe
iret
mov
xchg
movsb
push
and
clc
lcall
shrb
popa
ret
lods
icebp
clc
in
jmp
xchg
imul
adcb
out
cs
lcall
inc
mov
outsl
fcos
jns
xor
push
pop
push
aam
or
ja
movntq
jno
addb
test
lods
add
inc
jne
jecxz
scas
lods
cmpb
dec
mov
inc
add
loopne
sub
mov
sbbl
test
push
jp
stos
sbb
adc
outsl
push
push
loopne
stos
sbb
int
sbb
lcall
ss
leave
pop
lock
icebp
aad
push
jns
dec
sbb
sbb
js
ja
jmp
sarl
push
call
mov
in
dec
ljmp
cmp
xchg
cmpb
adc
mov
jl
call
adc
out
andl
hlt
cld
or
test
jmp
add
inc
decl
das
mov
imul
mov
out
mov
xchg
sub
sbb
push
pop
cmp
ficoml
fiadds
add
cmc
xchg
in
lcall
outsb
ljmp
movsb
rolb
cmp
jle
testb
and
dec
pop
and
subb
fidivrs
adc
adcl
inc
or
xchg
and
dec
mov
sub
adc
mov
loopne
fwait
xchg
lods
inc
loopne
sbb
jmp
out
sub
xchg
stos
sarb
inc
dec
inc
cmp
jo
mov
inc
mov
inc
mov
xchg
add
push
sub
or
mov
roll
push
sub
incl
mov
push
hlt
mov
push
and
jo
and
xchg
fwait
cld
add
jle
jno
lods
adc
pop
addb
sbb
jg
sub
jecxz
loopne
daa
push
ficoms
lods
dec
sub
push
push
add
mov
fwait
jbe
sbb
add
jne
sti
pop
or
test
hlt
cmc
int
pop
push
sub
xor
add
and
cli
pop
mov
stc
callw
sub
rclb
idiv
enter
adc
and
lock
loope
mov
adc
mov
fbld
inc
push
jp
loopne
sbb
mov
inc
clc
stos
ljmp
dec
and
cmpsl
or
das
xlat
mov
push
aas
clc
xor
cli
add
mov
cld
inc
lcall
sbb
mov
mov
cmp
xor
test
mov
mov
mov
xor
incl
or
and
cmp
je
push
ja
imul
xchg
out
mov
push
in
out
mov
jle
inc
inc
sub
pop
xlat
jl
movsb
sbb
nop
lret
lods
adc
sbb
mov
outsl
pop
inc
in
dec
adc
out
lods
repz
adc
mov
mov
xor
jo
stos
sbb
dec
outsb
add
lods
pushl
fildll
ljmp
add
cmp
mov
dec
or
push
and
lods
inc
cmp
rolb
xchg
les
out
dec
je
jbe
push
js
jp
jl
adc
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
clc
jle
jle
jle
icebp
cli
loope
add
or
adc
push
sbb
fldenv
subb
cmp
cmp
aad
inc
stos
sbb
adc
jp
in
jl
jle
or
out
jle
fildll
push
xor
push
je
clc
jbe
push
es
push
push
mov
jle
cmp
add
sbb
sysenter
xchg
xor
push
adc
add
hlt
pop
leave
imul
aaa
cmc
sbb
cmp
lret
aad
fstpl
dec
sti
incb
add
clc
push
dec
clc
push
pop
add
jbe
cmpb
popf
jl
jle
jle
jle
ret
jle
jle
scas
lods
hlt
je
xchg
cmp
pop
inc
push
pushl
cmpl
fimull
hlt
movb
push
shll
xlat
or
jb
sbb
cmp
add
sahf
dec
push
lock
lahf
pop
pop
mov
jns
negb
std
sti
push
xchg
stos
popa
test
pop
iret
leave
sub
xor
loope
jmp
ret
clc
in
mov
inc
and
inc
mov
jbe
pop
ja
jp
jl
xchg
jle
fisttps
mov
dec
rcrl
and
lods
lcall
pop
jbe
push
iret
pop
pcmpgtb
or
rcl
inc
mov
or
add
xchg
pop
pushf
call
add
or
adc
and
cmpsl
add
in
call
lock
mov
insl
xor
leave
call
xchg
loopne
xor
ret
das
xchg
dec
mov
cmp
mov
fisttps
fwait
aaa
mov
xlat
nop
cld
out
inc
inc
jns
or
int
mov
xor
cmp
inc
jo
mov
icebp
hlt
inc
ljmp
cld
rol
push
ds
lods
call
lock
nop
sbb
cmpsl
std
fcompl
mov
sarb
shlb
incl
xchg
add
add
clc
bsr
arpl
jle
repz
out
cli
clc
add
js
jo
jl
mov
push
popf
sub
inc
jp
popf
inc
adc
incl
xchg
mov
sahf
xchg
xlat
cmp
out
push
inc
clc
daa
pop
inc
ja
fists
inc
xchg
out
cltd
inc
es
sahf
iret
lahf
mov
ss
leave
pop
push
shrl
fldcw
loop
cmpsl
adc
pop
sub
inc
add
add
jg
push
sysexit
add
decl
subl
mov
pop
xchg
inc
sbb
sbb
cmpsb
call
incl
dec
rcrb
cmp
xchg
aas
cltd
add
testl
add
ja
ret
imul
or
cmp
outsb
xor
leave
adc
pop
add
int3
popf
xchg
sbb
adc
mov
cmpsl
jae
inc
shl
jle
dec
mov
shl
cmc
in
lock
or
shl
sub
xor
test
pop
icebp
in
dec
in
pop
call
outsl
hlt
ja
jge
add
adc
dec
test
mov
mov
jmp
out
decb
push
in
call
add
cld
jge
leave
xchg
shll
call
pop
xor
movntps
pop
and
in
jp
aas
jbe
mov
test
mov
push
jne
loop
dec
adc
push
sbb
and
ljmp
dec
xor
jmp
add
add
lcall
mov
mov
idivb
jp
jl
mov
ret
add
or
xor
cmp
and
das
xchg
mov
ja
iret
fimull
iret
ljmp
pusha
xchg
out
xor
add
test
lea
dec
out
in
incl
lret
push
lods
or
lock
sarb
mov
inc
lahf
decl
jmp
jmp
ljmp
sbb
sarl
jmp
sbb
stc
in
stc
hlt
clc
cld
lock
incl
or
adc
sbb
jmp
sub
xor
cmp
cmc
jb
je
mov
nop
mov
outsl
mov
test
sbb
dec
sub
add
iret
icebp
cmp
cmp
hlt
and
jmp
pushf
or
adc
xor
sahf
lock
xor
orl
fsubrs
in
sub
xor
pushf
push
inc
ljmp
jl
jle
jle
jle
incl
dec
mov
adcb
dec
cmp
pusha
ds
scas
test
js
mov
nop
push
jle
cwtl
mov
mov
jne
in
shr
lock
in
call
dec
jg
add
sbb
inc
cmove
decl
xchg
push
icebp
pop
popa
rcrl
icebp
xchg
stc
add
outsl
jg
movsb
clc
test
pop
decl
loopne
lahf
mov
mov
call
cmp
clc
add
out
pop
aaa
add
cld
or
inc
or
adc
mov
cli
and
inc
xchg
xor
push
mov
cmp
out
out
out
movsb
out
mov
mov
repz
repz
lock
cld
pop
je
mov
adc
add
aas
and
push
ret
lcall
jecxz
repz
jo
je
js
loope
repz
repz
mov
dec
es
nop
sub
cmp
leave
adc
clc
sbb
sbb
and
jmp
stc
sub
pushl
sbb
push
jo
je
js
stos
jl
jnp
jle
cmc
jno
mov
mov
ret
shlb
inc
fsubrs
jg
add
mov
sbb
and
mov
inc
cmp
stc
cmp
adc
jo
je
js
jl
orb
mov
decl
js
cmp
in
call
jl
and
push
sub
test
xor
mov
decb
popf
xorb
notl
mov
jecxz
test
repz
das
mov
and
sub
fimull
in
jbe
daa
jg
adc
cmp
pop
incl
mov
cmpsl
dec
movsl
and
in
sarl
das
jg
mov
cwtl
call
mov
aas
enter
es
cmp
cld
xchg
pop
add
decl
or
or
adc
mov
inc
sub
aas
dec
and
cmp
and
insb
filds
cmp
pop
shrb
test
cli
idivl
or
sahf
cld
adc
sbb
xor
cmp
lock
hlt
pusha
lcall
dec
xchg
js
daa
xchg
xchg
mov
jl
sub
leave
gs
dec
fsubs
push
and
mov
mov
pop
add
sub
imul
stos
xor
cmp
xchg
mov
sahf
xchg
push
dec
aam
lcall
mov
jg
incl
mov
repnz
ret
lret
daa
cmp
cs
mov
cmp
rcrb
lcall
rcll
xor
insl
popf
xchg
mov
or
inc
pushl
ret
es
ret
and
sar
inc
leave
enter
xor
popa
mov
fistps
hlt
jno
pop
pushl
jns
push
or
dec
lea
iret
cltd
iret
popf
rolb
aad
mov
xor
lret
in
add
push
cmp
mov
loope
stos
call
sub
inc
cmp
push
pushf
lcall
xchg
dec
mov
addl
call
minps
add
cs
sub
call
mov
insb
jl
add
and
mov
arpl
add
iret
inc
loopne
outsl
mov
call
xor
jnp
in
mov
js
and
shll
mov
jbe
shl
push
or
cmp
aaa
mov
xchg
in
call
stos
push
lahf
cld
pop
push
cmp
decl
daa
insl
dec
mov
cmc
xlat
ret
push
pop
fcoml
pop
mov
orl
push
inc
mov
add
or
pop
push
js
dec
dec
push
or
cmp
loopne
test
push
shll
mov
call
aas
jb
std
pop
push
cld
mov
add
sar
mov
pop
ljmp
sbb
adc
dec
pushl
roll
cmp
cmp
sbb
cs
jbe
cld
push
dec
icebp
sub
sub
or
xor
in
dec
pushl
mov
xor
push
fs
push
pop
mov
pop
fidivl
jmp
aas
decb
cld
add
or
mov
or
sbb
and
outsl
mov
and
pushl
movsb
cmp
call
cs
pushl
mov
mov
dec
sub
enter
and
psrlq
clc
outsb
inc
cwtl
out
mov
jecxz
lock
sub
inc
in
add
add
pop
fidivl
sub
pop
in
pop
cmp
std
filds
push
or
sbb
mov
aas
iret
push
cvtdq2ps
jbe
mov
popa
sahf
fdivrp
sahf
repnz
clc
adc
adc
paddb
test
push
popa
xchg
out
mov
dec
sbb
cmp
inc
mov
aas
outsl
dec
mov
iret
leave
jg
dec
adcb
daa
popa
fsubs
sub
sar
aam
fdivrs
xchg
in
call
lock
mov
inc
mov
jl
add
ud0
or
add
cmp
jp
sbb
cmp
and
sbb
decl
daa
pusha
inc
fs
push
lea
and
data16
daa
int
and
stos
pusha
lea
mov
add
or
lock
push
js
sbb
xor
pop
jne
cmc
push
xor
test
cmpsb
pop
inc
call
cmp
mov
lods
push
inc
mov
jo
loop
aas
movsb
add
mov
mov
int3
sbb
iret
rcrb
sahf
loopne
outsl
push
in
xchg
jl
mov
or
adc
sbb
sbb
lret
incl
xor
into
aas
inc
and
rcrb
in
jmp
movsl
bound
addb
mov
insb
lds
push
mov
add
negl
filds
sti
das
repnz
test
mov
dec
cmp
aas
push
pop
out
das
cmp
inc
add
pop
pop
and
jbe
jp
clc
loopne
cltd
pop
add
scas
ljmp
int
fadds
mull
adc
dec
xor
cmp
outsl
sarl
fadds
rol
dec
movsl
repz
in
call
or
sbbb
or
aas
jnp
fimull
jl
rcrb
decl
pop
xor
dec
add
mov
push
xor
sbb
inc
xor
jg
pop
icebp
or
xor
test
sti
leave
xor
dec
outsl
inc
pop
cmp
incl
cmp
xor
sbb
push
xchg
add
sub
je
fstpt
loope
cmp
cwtl
jl
inc
add
std
movsb
xchg
mov
ret
sbb
call
mov
mov
incl
xor
addr16
cmp
cmpsb
cmp
dec
shrb
mov
movsb
mov
mov
aam
aaa
push
jle
cmp
push
in
mov
xchg
inc
repz
idiv
cmp
outsl
jmp
add
xchg
incb
call
subb
jne
leave
mov
jmp
jg
clc
push
das
cmp
dec
mov
or
ljmp
xchg
lock
lcall
sub
es
rcrb
add
jne
mov
jecxz
stos
jb
dec
push
movsb
incl
fcompl
mov
dec
sbb
daa
lock
jmp
cmpsl
cmc
leave
push
pop
mov
loop
xchg
mov
cmc
addr16
subl
adc
test
stos
cmp
ret
sahf
decl
mov
pusha
imul
jl,pn
mov
popa
pop
loop
fsubs
sub
jg
xchg
dec
mov
mov
loopne
stc
pop
in
sti
test
repz
xor
push
xor
lret
cmp
stc
inc
inc
ljmp
and
pop
mov
popl
push
and
cwtl
leave
mov
lock
in
push
mov
stc
cmp
je
jbe
mov
pop
sbb
mov
sub
inc
lret
adc
or
jg
or
xor
jmp
jg
xor
push
ror
repnz
mov
daa
imul
xlat
clc
stc
clc
loop
mov
jb
cli
dec
mov
mov
jmp
dec
int
decl
cwtl
add
inc
cli
loope
xor
push
cmp
pop
out
mov
arpl
add
xchg
ljmp
pusha
shlb
ljmp
into
add
inc
out
in
xchg
mov
ret
clc
enter
arpl
and
btr
rclb
shl
sbb
sbb
jg
popf
daa
sbb
jmp
hlt
adc
clc
aas
outsl
and
mov
dec
stc
dec
xchg
push
mov
rcrb
and
enter
add
jb
repnz
std
in
enter
jbe
sbb
hlt
dec
dec
push
roll
cs
lcall
add
rorb
aaa
xchg
cvtdq2ps
sbb
in
and
sbb
rclb
fdivs
mov
or
into
mov
fiaddl
stc
xorb
in
nop
or
pop
or
inc
sub
pop
rorb
jle
cltd
dec
insb
adc
or
mov
jnp
inc
mov
insl
lock
mov
das
jg
repnz
les
int3
sub
jge
cld
sub
js
push
lret
incl
pop
rcrb
jmp
test
sub
lods
sbb
les
into
push
cmp
rolb
cli
and
pop
xchg
sub
cwtl
adc
add
sbb
rcrl
jno
pop
decl
fs
sub
cmp
fimull
ret
jl
pop
orb
cmc
xchg
lret
mov
loop
rcrb
stos
loopne
inc
lods
mov
add
clc
or
xor
cmp
jmp
jg
cmp
fldt
mov
incl
negb
inc
adc
push
test
loop
mov
fists
scas
adc
aaa
ljmp
add
test
mov
fdivrs
lock
out
clc
outsl
mov
incl
pop
in
add
cmpsb
shll
inc
rorl
pop
lea
dec
sbb
add
leave
outsb
decl
js
dec
add
and
ljmp
shl
add
and
hlt
fldl
dec
shl
aad
adc
popf
push
inc
call
xor
pop
xor
pop
jle
dec
jo
jmp
add
incl
mov
and
in
fadds
jg
xchg
jle
pop
xor
push
sbb
popf
adcl
cmc
dec
cmp
add
aaa
sub
filds
repz
push
rcrl
mov
cmp
arpl
mov
lcall
in
jnp
call
cmp
clc
adc
cmpl
stos
hlt
cmp
fs
pop
shll
je
clc
pop
mov
sbb
push
cli
mov
aaa
shrb
jo
mov
xchg
idiv
jbe
sbb
xor
cs
decl
popf
push
fimuls
xor
fstl
cmc
push
sarl
outsl
pushf
xchg
add
jle
adc
test
mov
sub
lods
incl
sar
je
add
loop
pop
pop
cmp
push
cmp
test
fstpt
pop
mov
pop
push
mov
jl
lods
dec
sar
jb
nop
cmp
decl
pusha
jno
roll
aas
call
test
cmp
insb
popa
lock
in
shl
add
and
mov
scas
das
or
clc
add
clc
or
xor
fists
sbb
xor
pop
dec
dec
in
adcl
das
mov
mov
test
push
cmp
xchg
cmc
inc
jmp
jae
ja
or
mov
xchg
or
ficompl
push
test
pop
sub
add
xchg
xchg
shlb
jg
mov
xor
jne
movsl
cmp
sbb
call
add
pushl
pop
shll
outsb
test
iret
lahf
leave
stos
sar
lret
xchg
add
push
andl
cmc
pop
sbb
inc
push
pop
xor
push
add
js
dec
add
jo
push
mov
out
mov
add
lock
inc
hlt
add
outsl
add
not
call
dec
fadds
push
cld
adc
mov
mov
pop
ljmp
cmpsl
hlt
add
or
shlb
dec
dec
clc
and
push
repnz
mov
ret
xor
sub
pop
sub
inc
cwtl
push
movlps
sub
and
aas
test
fadds
hlt
and
cmp
lock
pushf
mov
mov
fisttps
inc
mov
mov
insb
xchg
nop
decl
mov
lcall
mov
sub
orl
cmp
sub
scas
ds
loope
jmp
xor
xchg
add
ret
shl
stos
and
mov
decl
pop
ja
test
test
outsl
and
push
ljmp
dec
sbb
push
add
imulb
leave
out
pop
loopne
push
xor
jmp
addl
fcompl
inc
jno
ljmp
push
dec
mov
mov
or
cmc
push
adcb
xchg
incb
add
ret
push
cmp
clc
xchg
sbb
push
outsl
incl
adc
dec
test
add
pop
push
lcall
aaa
incl
aas
shlb
sets
loopne
or
clc
lret
mov
movsl
adc
mov
mov
pop
mov
and
mov
pop
cmp
icebp
cltd
adcb
callw
sbb
inc
adc
xor
pop
jle
and
mov
mov
or
push
dec
xor
push
ss
pushl
mov
call
or
aas
incl
lock
incl
mov
mov
std
les
mov
loop
mov
jns
sbb
in
lock
pop
cmp
or
xchg
mov
xor
popf
push
mov
outsb
cmpsl
xor
out
in
aad
hlt
ret
and
popa
mov
or
mov
inc
jne
mov
test
out
cmp
or
aam
ret
mov
push
push
pushl
hlt
lcall
jg
aam
xchg
in
jmp
or
loopne
and
lds
cmp
inc
xor
mov
out
cmp
popf
loopne
cli
mov
cmp
pusha
rcrl
out
xchg
testb
cmc
mov
sub
filds
push
sub
std
sbb
int3
jl
or
pop
insb
add
neg
jae
rclb
xor
mov
add
sbb
rorb
nop
aaa
mov
cmp
vucomisd
or
push
or
hlt
dec
sbb
pusha
pop
jmp
jg
cwtl
test
incl
mov
push
xchg
mov
dec
sbb
mov
lahf
jp
rclb
mov
arpl
cmpl
rclb
lcall
loopne
push
ljmp
pop
sahf
loop
clc
xlat
fcmove
gs
movsl
test
in
loop
jb
fisttps
clc
movl
xor
stos
roll
xor
in
aaa
cmp
xchg
jmp
sbb
push
ljmp
ljmp
xchg
clc
xchg
and
outsl
adc
add
pop
incl
imul
pop
subb
fildll
lahf
lcall
ret
dec
pop
rcr
mov
sbb
dec
adc
xchg
mov
pop
add
paddsb
inc
cli
shlb
xor
fadds
hlt
pop
push
cmp
mov
loop
push
fsubrs
ret
in
shl
push
sub
xor
pop
dec
jg
add
incl
sbb
xor
jg
jecxz
and
clc
shlb
call
jl
xorb
push
cmpb
aaa
adc
xchg
shrl
mov
divl
sbb
lods
mov
push
sahf
push
lahf
pop
clc
stos
pusha
adc
add
test
mov
cmp
fidivs
imul
fwait
or
and
hlt
mov
adc
jg
mov
mov
in
add
aam
pop
mov
cmp
jmp
imul
icebp
mov
bound
mov
dec
jg
shll
jecxz
repz
cmp
cmp
jg
hlt
movsb
dec
aas
push
das
std
repnz
xor
cmp
add
push
xor
mov
in
sub
mov
sahf
imul
push
ja
test
pushf
jmp
jb
mov
pushf
lcall
sbbb
das
add
pop
xchg
xchg
aaa
sbb
andb
imulb
scas
add
lock
push
std
mov
ds
mov
mov
jmp
dec
pop
cld
rclb
and
push
popf
add
in
call
adc
js
sar
outsl
pop
hlt
cli
xchg
dec
dec
lret
cltd
cmp
test
pop
addr16
pop
test
add
inc
sbb
cmp
push
lret
push
lods
popf
incl
repnz
and
mov
call
jmp
jp
addl
jae
mov
xchg
rcrl
mov
dec
sub
js
jle
das
fnstenv
test
pusha
mov
jg
dec
mull
or
icebp
push
push
cmp
dec
jnp
push
and
sub
jb
je
cltd
jbe
popf
js
add
lods
leave
mov
mov
fnstcw
lock
pop
leave
cmpsl
push
shl
aad
stos
rcl
insb
pop
movq
push
sbb
in
cmc
and
xchg
popa
pop
lods
int
stos
cmp
and
and
inc
out
cltd
xor
nop
inc
inc
jmp
xor
sbb
xor
decw
inc
xor
jmp
decl
aaa
sbb
push
push
hlt
sub
mov
cmc
xchg
decl
ds
leave
cld
push
rclb
adc
or
cmp
bnd
les
outsl
lock
pop
arpl
lock
call
push
and
cmp
mov
add
nop
loope
js
ljmp
add
lods
jmp
icebp
hlt
dec
jg
xor
jp
lret
clc
ljmp
mov
shr
icebp
lods
sub
mov
outsl
cwtl
inc
push
cmp
cmp
and
xchg
insl
dec
add
je
sar
xchg
mov
repnz
std
push
add
pop
orb
inc
cmp
inc
andb
or
leave
shlb
jle
dec
imul
and
repz
pop
mov
jb
cmpsb
sarb
push
out
nop
xchg
rcrb
ret
mov
or
cs
jmp
jmp
push
push
aas
sbb
inc
rclb
fdivrl
dec
sti
mov
mov
dec
inc
mov
xor
rclb
into
ret
dec
call
pop
je
vmread
jmp
add
add
adc
pop
clc
adc
fucom
in
push
loopne
adc
add
mov
push
jmp
ret
loopne
sti
rcrl
leave
and
ret
clc
call
inc
push
popa
ljmp
scas
das
mov
pop
fdivr
loope
push
ret
ds
mov
add
mov
pop
mov
loope
xor
leave
push
pushl
sarl
inc
inc
loop
inc
push
xchg
incl
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
pusha
fimuls
icebp
sub
xor
sbb
dec
insl
inc
insb
std
xchg
jge
rolb
or
std
and
jo
xchg
ss
cmovne
pop
shlb
clc
mov
cmp
mov
jb
movsl
push
inc
hlt
dec
pop
cmp
orl
nop
repz
xor
xchg
sub
mov
loopne
sar
add
fwait
xor
dec
sar
addr16
hlt
std
xorb
popa
out
das
js
loop
lock
ret
xor
je
mov
js
xchg
and
xchg
mov
xchg
roll
or
adc
mov
stos
add
jl
cld
daa
or
lock
mov
clc
loopne
mov
std
ret
dec
cmp
fdivr
mov
sub
add
sbb
ljmp
pop
dec
subl
outsl
lea
inc
pop
inc
inc
decb
mov
mov
xchg
js
jle
in
add
ud0
ror
enter
jmp
cs
or
adc
push
mov
dec
cli
xor
adc
hlt
pushl
idivl
sbb
aas
lahf
cmp
sbb
pop
jl
sub
pop
cs
mov
push
inc
lock
hlt
mov
sbb
add
sahf
sbb
ret
loope
dec
jmp
fldln2
lret
int
mov
inc
xor
pop
cmc
bound
aaa
movsl
test
jmp
ss
sbb
cli
pop
cld
xchg
aaa
ds
push
inc
stos
pushf
bound
mov
xchg
popf
mov
fdivrp
psrld
les
push
adc
in
mov
es
sub
sahf
xor
out
jle
cmp
inc
add
call
mov
in
cmp
or
sbb
push
sbb
jbe
test
cmc
jmp
sbb
in
or
dec
into
mov
cmp
add
lock
mov
jle
jg
adc
xchg
ljmp
popa
fadds
push
fsts
push
pop
mov
sub
jae
mov
adc
clc
push
jle
nop
dec
jmp
int
roll
dec
test
mov
leave
pop
shrl
movsb
cli
pop
or
or
rorl
out
and
stc
fwait
inc
dec
incl
inc
cmc
loopne
in
outsl
das
lock
mov
xor
test
push
sub
inc
cmp
mov
insb
or
mov
xchg
arpl
mov
and
cmp
rcrl
jl
mov
call
and
hlt
sbb
clc
and
push
pop
ret
bound
mov
add
jo
addl
fdivrl
shr
mov
add
cld
cmp
mov
push
fisubrs
and
fcmove
jno
or
in
aas
dec
mov
dec
push
adc
enter
lea
xchg
or
sub
mov
cmc
jg
jbe
js
add
xchg
sbb
push
mov
incl
xor
test
ja
loopne
cs
add
jp
test
push
and
lret
lods
push
inc
mov
outsl
sub
loope
jl
fcompl
sub
movsl
jno
dec
mov
fstps
adc
repz
shl
mov
aam
call
xor
add
inc
loop
jns
adc
mov
mov
jmp
testl
arpl
incl
add
push
clc
or
aas
bound
mov
xor
sbb
push
icebp
jo
loope
jge
and
movb
dec
mov
jns
and
das
mov
stos
mov
inc
fstpl
and
loopne
in
add
ret
outsb
je
call
iret
mov
jmp
mov
and
inc
int
in
incl
xor
xchg
jge
lock
jmp
push
decb
test
pop
int3
repnz
sub
jmp
jg
test
mov
movsl
and
sbb
pop
pop
fmull
pop
jnp
call
add
cmp
or
outsb
test
sub
aad
insb
stos
cmpsb
pop
nop
dec
sbb
shll
cmp
push
pop
jae
xorb
leave
neg
xor
and
sub
add
lcall
repz
clc
repnz
fcoml
mov
icebp
adc
pusha
insb
cmpsl
mov
sbb
decl
xor
push
rorb
idivb
je
xor
jp
mov
and
dec
stc
push
loop
pop
bnd
sbb
sub
mov
mov
gs
roll
loop
negl
xor
nop
in
mov
dec
cli
push
popa
loopne
call
fcomp
clc
incl
lock
sbb
les
push
dec
jne
icebp
lods
mov
popa
add
leave
aam
sbbb
jl
sbb
ljmp
add
jge
sbb
outsw
es
dec
call
sbb
hlt
fidivl
loop
aam
dec
mov
sub
mov
push
adc
orl
pop
mov
das
xchg
mov
lock
push
das
sub
cmc
mov
lret
stos
and
aas
lret
faddl
or
fwait
jmp
mov
xchg
rorb
call
orb
dec
pop
jecxz
inc
in
and
sub
jg
jmp
inc
inc
jo
ss
mov
inc
add
xchg
lock
stc
and
pop
mov
negb
decb
aam
iret
push
jne
sub
sub
mov
stos
mov
dec
inc
or
lcall
sbb
jno
in
dec
adc
push
les
dec
add
das
clc
xor
dec
in
push
mov
addr16
inc
subb
shlb
mov
call
pushl
dec
push
enter
shll
mov
pop
hlt
push
push
in
mov
dec
cs
loop
roll
aas
cmp
sbbb
adc
hlt
repnz
es
cmp
ds
push
clc
call
ret
xchg
push
add
or
scas
xchg
and
xor
add
sub
dec
das
ffree
arpl
lock
mov
mov
fsubs
insl
test
mov
loop
pop
jg
sarl
sub
test
hlt
mov
stos
bound
push
cld
xchg
add
pop
in
stos
push
jnp
movsb
or
dec
cmp
cmp
pusha
mov
push
push
incl
sub
sahf
add
push
push
mov
repnz
sub
push
sbb
loop
and
pop
sbb
pop
sarb
dec
add
mov
xchg
mov
loop
add
inc
add
push
das
into
xchg
push
pop
incl
ret
je
inc
dec
push
sub
and
jmp
mov
incb
in
call
mov
cli
jb
xor
xchg
pop
adc
je
lea
daa
fadds
xor
mov
sbb
jnp
pop
adc
call
imul
sub
mov
call
add
in
call
fdivrs
dec
dec
xor
popa
fidivrl
ds
loopne
repnz
adc
imul
cmovo
ja
or
adcb
test
mov
call
jp
add
xchg
inc
pop
js
rcrl
sub
xchg
loope
enter
sub
fisubrl
mov
jns
jns
jae
or
xor
mov
inc
loope
lret
sub
fcoms
stc
test
push
lcall
clc
add
adc
lcall
sub
jl
add
cmc
nop
dec
pop
cmp
or
mov
sbb
xor
jg
add
inc
movsl
dec
aad
pop
stos
das
outsl
xor
pop
ret
shl
imul
clc
dec
xor
push
push
or
inc
arpl
jae
js
pop
jnp
jg
dec
cmp
cld
mov
sbb
cs
add
and
das
sbbb
leave
mov
pop
jge
xchg
stc
je
pop
cmp
pushl
in
out
and
sbb
inc
out
gs
test
sub
loopne
daa
cld
js
sbb
shll
and
pushf
dec
js
or
daa
push
xchg
dec
pop
in
fs
mov
cld
enter
daa
das
mov
orb
dec
xor
mov
xchg
inc
adc
cs
std
cmp
arpl
mov
mov
inc
push
jmp
fdivp
xor
pop
movsl
adc
mov
ljmp
sub
xor
std
xchg
add
das
repz
pop
pushl
push
in
mov
call
stos
mov
movsl
decb
std
mov
outsb
dec
jmp
cld
cmp
jo
pop
dec
mulb
call
mov
pop
loopne
insb
sub
pushf
sub
lock
and
and
daa
fists
hlt
insb
push
mov
pop
adc
jbe
sub
insb
aas
xor
aaa
mov
pushl
adc
in
mov
loopne
xchg
test
in
cli
pop
pop
cmp
shl
push
addr16
in
mov
in
outsl
iret
lods
and
mov
inc
adc
push
popa
incb
pop
or
fdiv
xlat
mov
jp
sar
cld
cmp
loopne
nop
add
xor
lahf
and
add
xor
mov
cmp
das
popa
decl
je
jbe
xchg
mov
sub
and
lret
rol
push
mov
inc
push
mov
xchg
lahf
or
subl
faddp
lret
out
inc
das
xlat
popa
dec
imul
jg
icebp
xor
cmp
mov
rolb
cmpsl
pop
in
mov
push
sub
or
xchg
int3
clc
es
push
loopw
jae
cli
fisubrs
subl
aas
int
pop
test
mov
inc
lcall
mov
jp
inc
pop
inc
ret
mov
lcall
or
call
ss
mov
fcompl
out
or
mov
das
jp
and
or
out
pop
mov
dec
stos
test
xchg
adc
pop
pop
imul
mov
in
xchg
add
add
call
adc
inc
cmp
xchg
add
loopne
cmp
adc
popf
xchg
in
or
incl
dec
pop
sub
inc
mov
outsl
pop
xor
loopne
xchg
push
fbstp
ret
lcall
lret
aad
scas
cli
cli
decl
loopne
pop
hlt
data16
xchg
xor
mov
cwtl
add
std
mov
in
pushf
pushf
sti
cmp
xchg
push
dec
fistpll
dec
push
jp
mov
add
jmp
inc
push
fnstcw
incl
and
push
inc
add
call
ja
jle
aaa
cmp
clc
ljmp
ljmp
add
test
loopne
pop
cmp
in
xchg
cwtl
call
pop
rolb
dec
cmpsl
push
mov
dec
bndstx
sarb
xor
or
and
mov
jp
popf
mov
mov
pop
daa
into
loopne
test
mov
data16
sub
cwtl
dec
movsb
andb
aas
outsl
xlat
call
lock
xchg
add
pop
pop
lcall
add
pop
inc
clc
das
aas
lods
mov
xchg
jecxz
mov
pushl
das
push
sbb
cvttps2pi
js
pop
outsl
dec
inc
pop
in
outsl
mov
cmp
and
stos
aam
cs
jp
push
mov
xchg
xchg
dec
adc
xchg
fwait
call
mov
mov
or
fbstp
fildll
test
cmpb
cmc
pop
clc
push
mov
dec
pop
lcall
cmpsb
or
cmp
xchg
jb
sub
data16
sbb
and
cmp
sbb
clc
movsl
pop
out
decb
ret
repnz
sahf
iret
js
mov
push
loopne
bound
mov
or
push
out
call
mov
xor
pop
cld
subb
loope
outsl
and
leave
cs
pop
add
cmp
movsl
adc
and
pop
add
dec
pop
mov
push
rclb
jb
pushf
sub
ret
lcall
fadd
movsl
leave
aad
enter
mov
mov
xchg
pop
pop
mov
fsub
pop
sub
cmp
lahf
jecxz
in
addr16
mov
add
jae
jb
je
ljmp
xchg
xchg
mov
dec
stc
jge
das
push
and
iret
stc
add
lods
jecxz
icebp
in
cld
push
and
jno
es
push
add
push
les
clc
sub
xchg
or
pushl
add
add
ljmp
repz
and
push
xchg
dec
out
in
daa
push
ret
orl
cmp
cld
lcall
aaa
sbb
mov
xchg
bound
je
push
add
sbb
or
mov
outsl
mov
cwtl
dec
shl
sub
fdivs
inc
aas
call
test
filds
sbb
sbb
stc
and
and
sub
mov
push
cmp
ret
pusha
incl
add
repz
adc
js
ljmp
mov
jp
jo
pop
xchg
xchg
mov
mov
pop
call
dec
das
cld
and
add
mov
leave
jl
mov
test
mov
nop
mov
mov
dec
movsb
ret
xor
lods
and
mov
pop
scas
mov
push
icebp
and
outsl
cs
cmp
or
mov
int
pusha
rcl
adc
add
fcompl
out
fs
scas
loope
in
jnp
jg
pop
add
mov
loopne
xchg
les
test
lahf
notb
test
and
test
pop
cli
cmc
inc
mov
cld
das
sub
sbb
shrl
inc
sbb
incl
dec
int3
subb
mov
push
xor
popf
cmp
and
cmpb
push
jne
mov
frstpm(287
es
mov
or
nop
pop
xchg
adc
clc
pushf
add
mov
aad
loop
push
cwtl
sahf
or
add
jno
jg
jg
jmp
dec
daa
jb
add
mov
bound
jg
in
push
sub
scas
movsl
pop
sti
incl
pusha
xchg
fs
mov
adc
sub
test
lods
decb
clc
mov
loop
insb
pop
mov
mov
cmp
and
pop
inc
inc
pop
cmpsb
inc
jo
add
cld
stc
xchg
leave
pop
mov
movsb
xchg
or
mov
push
mov
or
dec
les
adc
cmp
jle
adc
push
adc
lahf
sbb
subb
dec
xchg
inc
cmp
xchg
aas
gs
lret
sub
xchg
mov
jl
gs
std
frstpm(287
js
push
mov
mov
lahf
mov
es
leave
add
int3
ds
lock
add
xchg
cli
int
add
jmp
sub
popf
insl
inc
sbb
das
push
add
adc
cs
pop
stos
dec
lock
loope
popf
jno
adc
cmpl
dec
ljmp
or
loop
loopne
pop
pop
call
mov
fcompl
push
mov
loop
popf
in
or
xor
jns
cli
jmp
push
adc
jge
in
inc
rorl
mov
push
lods
inc
stos
xrelease
push
xor
sub
push
call
dec
cmc
mov
sbb
push
rep
sub
lret
ss
push
test
out
addb
mov
loop
arpl
pop
call
sub
push
adc
mov
pushl
int3
and
mov
xor
xor
test
push
add
popf
push
insl
mov
or
fcomi
je
or
outsl
in
test
sbb
out
mov
test
inc
inc
mov
shl
push
push
cmp
lcall
or
sub
sbb
repnz
sub
cmp
xchg
mov
lcall
orb
ret
pop
jmp
cld
ljmp
loop
push
outsl
fdivrs
xor
orb
cli
jg
sbb
sbb
or
inc
dec
and
in
mov
add
jbe
cli
jmp
or
int
dec
les
push
or
add
movsl
fndisi(8087
ja
cmp
movsb
pop
push
mov
push
movsl
cld
test
dec
jp
call
pop
add
imul
push
dec
ja
xchg
sbb
sub
je
lock
das
lock
mov
addr16
adc
pushl
push
mov
jae
jmp
lret
push
ljmp
sti
dec
mov
mov
mov
das
cmp
clc
jns
cmp
add
aam
pop
mov
decl
lea
jmp
mov
popa
dec
decl
pusha
or
inc
and
jno
add
fdivs
and
sub
pop
push
push
lock
clc
add
dec
dec
mov
inc
add
test
inc
data16
cli
push
sbb
sbb
cli
mov
or
jmp
add
iret
jle
lds
mov
lods
mov
push
mov
add
outsl
cmpsb
and
mov
cmp
sub
inc
fsubr
lcall
push
ss
aaa
push
fmull
clc
pop
rorl
rclb
adc
jmp
jl
jnp
adc
pop
lcall
fisubs
push
pop
push
push
and
pop
sbbl
mov
add
jmp
loope
dec
xchg
add
or
jmp
mov
call
push
cmp
incl
adc
add
popa
jne
or
dec
cmc
sub
jne
call
mov
push
call
rcr
push
jbe
push
fiadds
dec
pusha
mov
daa
add
fistl
cmp
rcr
sarb
push
adc
dec
sbb
inc
loop
mov
je
sub
mov
add
arpl
test
sbb
int
paddb
mov
xchg
or
jg
ret
pop
std
test
add
dec
mov
mov
fiaddl
out
ds
jns
xor
repnz
aam
getsec
xorl
dec
sarb
mov
dec
mov
mov
in
mov
pushf
sbbb
shll
lds
fwait
clc
inc
inc
inc
add
ljmp
sbb
fnsave
mov
lock
iret
dec
add
sbb
call
test
jne
cmc
fbld
subl
add
sub
cs
ret
mov
inc
mov
dec
jle
test
and
int
repz
rorl
mov
mov
add
xor
jmp
jns
incl
or
testb
je
pop
pop
pop
xlat
push
inc
and
jl
sti
lcall
pop
mov
inc
or
dec
sbb
jmp
mov
mov
pop
push
lcall
cmp
std
jmp
ljmp
adc
pusha
dec
leave
lahf
sti
cwtl
daa
punpckldq
jg
loopne
ror
movsl
push
int3
incl
pop
mov
mov
test
lock
xchg
les
sarl
dec
push
movsl
xlat
cld
mov
rclb
cltd
pop
mov
lahf
pop
mov
or
test
mov
add
ds
imul
or
mov
mov
add
inc
scas
pop
das
shl
mov
or
fsts
xor
ds
add
xor
dec
dec
xor
pop
add
bound
imul
push
sti
or
cli
xlat
pop
mov
fdivr
sbb
sub
rolb
notl
and
cmp
lahf
mov
rclb
das
imul
jg
push
ja
add
jge
aad
pop
enter
data16
inc
les
sub
insb
insl
stos
pop
push
sahf
hlt
cmp
push
loopne
pushf
or
add
and
jo
dec
rcrb
fists
movb
jnp
mov
mov
mov
into
add
stos
pop
mov
test
mov
repz
pop
ds
mov
testb
ret
jae
cmp
cmpsb
add
dec
popa
push
add
and
adc
inc
fsub
push
enter
mov
dec
cmpsb
fistps
mov
bound
mov
xchg
aaa
enter
jl
jg
ja
scas
cmp
les
xchg
dec
fsubs
lcall
adc
pop
lcall
add
rcrb
inc
mov
insl
mov
or
jg
stos
pop
imulb
data16
cmc
in
stos
std
das
loop
pop
mov
sub
mov
pop
xlat
mov
popa
mov
or
push
test
mov
and
nop
xor
loopne
jecxz
insb
std
mov
sbbl
call
ret
icebp
xor
das
lods
push
frstor
gs
xchg
or
aas
sbb
into
pop
fcoml
sbb
xchg
test
mov
and
sub
jnp
pushl
xor
jge
or
stc
mov
shlb
hlt
mov
push
out
or
mov
hlt
adc
add
mov
push
sub
loope
pop
pop
mov
jbe,pt
jb
sub
std
or
mov
dec
and
je
cmc
push
xor
pop
jmp
mov
mov
call
cmp
fs
push
add
inc
adc
lock
mov
add
std
roll
adc
xor
leave
rcr
je
mov
jno
out
add
loopne
es
adc
ret
pushf
jns
inc
loop
jo
sar
outsb
into
std
adc
scas
outsb
pop
loopne
imul
inc
mov
push
outsl
arpl
lcall
or
push
outsl
jg
inc
sbb
inc
js
clc
mov
incl
jecxz
mov
dec
ljmp
xchg
inc
loopne
ja
subb
loop
inc
arpl
mov
daa
loope,pt
jne
pop
jg
inc
lea
jl
aas
and
pushl
pushl
rcl
sti
cmp
jg
std
fistpll
js
jns
insl
clc
arpl
cs
imul
fistpll
call
sub
gs
jne
inc
add
jg
inc
insb
rclb
sbb
push
lahf
inc
mov
mov
sub
stos
shrl
aas
outsl
inc
lods
inc
daa
decl
cmc
rclb
mov
mov
movsb
aad
incb
sti
out
cmp
push
adc
or
jg
pop
jne
gs
mov
jge
lcall
mov
ret
mov
cmp
jae
pop
ljmp
test
sbb
cmp
sub
mov
cmc
mov
sub
or
jg
or
xchg
call
adc
mov
insl
xor
jo
sub
mov
test
nop
loopne
ret
xchg
xchg
push
and
addr16
mov
jo
leave
test
or
xchg
inc
sbb
out
and
outsb
mov
repz
and
add
lcall
lods
jb
xchg
or
jmp
aaa
adc
inc
daa
mov
pushl
mov
jle
scas
cmpsl
decl
popa
push
inc
loopne
aad
js
loop
mov
mov
call
jnp
cli
icebp
pop
cld
js
test
pop
dec
inc
rdmsr
sar
lret
cwtl
push
rcl
lea
adc
sbb
and
pop
mov
mov
sub
fidivrl
or
add
dec
cmp
and
insl
inc
mov
sub
cmp
mov
mov
decl
mov
push
cmc
fistps
cld
clc
ja
and
dec
jbe
mov
jne
xchg
repnz
ljmp
cmp
xor
rcl
incl
xor
pop
test
decl
aaa
mov
iret
jp
aam
or
movsl
push
call
inc
push
xchg
mov
pushl
inc
test
and
or
outsb
mulb
cwtl
inc
dec
imul
push
xchg
xor
cld
in
jbe
ffree
xchg
das
jecxz
push
incl
stos
pop
mov
inc
das
call
movsb
call
lds
xchg
jb
dec
lcall
lret
and
push
cmp
sbbb
and
pusha
mov
sbb
pop
mov
clc
jo
sbb
xor
sti
or
pop
lcall
or
dec
scas
jmp
icebp
inc
mov
lock
scas
fistpll
add
push
stos
xchg
mov
pop
arpl
popf
push
push
jmp
test
incl
xchg
and
pop
popf
lods
stos
es
mov
ljmp
stos
sbb
data16
les
incl
sbb
rcl
cs
fucomi
lahf
fstpt
inc
pop
jns,pt
and
mov
inc
dec
lret
movsl
mov
sub
clc
jns
jno
lea
and
jg
jmp
fldt
jns
es
out
inc
inc
jg
mov
ljmp
aaa
das
mov
adc
dec
mov
xor
cmp
sar
and
jae
pop
inc
fmulp
imul
into
cmp
pusha
lea
dec
subb
cmp
jge
lea
mov
jno
sbb
and
jmp
adc
push
mov
hlt
mov
push
aaa
mov
sbb
jmp
orl
lcall
or
xchg
xor
aas
sub
popf
nop
call
add
lods
je
imul
lods
mov
push
mov
push
into
ret
pop
shrb
sub
jg
push
xlat
loopne
push
mov
test
pop
dec
xchg
fidivrl
dec
add
push
incl
cmpsl
cs
jg
jmp
dec
xor
lahf
inc
lcall
or
sbb
xchg
lock
or
mov
test
out
adcb
xchg
nop
pushl
iret
aas
mov
cld
pop
add
add
add
jecxz
cmp
sub
pop
jbe
and
pop
xor
push
lahf
pop
adc
inc
adc
sub
scas
adc
call
pusha
pop
test
sahf
pop
xchg
sahf
fdivs
jmp
mov
fwait
lods
sar
sqrtps
dec
xchg
push
in
dec
dec
es
call
or
mov
jnp
jp
loop
out
push
je
cmpsb
roll
movsb
movsl
stos
jp
adc
cmc
imulb
std
clc
stc
insb
test
cmp
fs
out
push
push
add
inc
testb
cld
ficompl
ljmp
or
leave
jmp
sub
dec
mov
jnp
mov
pop
fcmovbe
mov
push
cmp
sub
xchg
pop
xor
in
scas
sub
jmp
jecxz
add
fucomip
sub
jne
mov
fsubrl
and
mov
ficoml
subl
fisttps
outsb
xchg
and
lods
xor
xor
mov
lahf
xchg
fiadds
lahf
nop
lret
mov
cmpsl
jbe
mov
sahf
loope
push
inc
lea
test
int3
ljmp
mov
dec
sbb
cmpb
mov
jecxz
mov
stos
mov
ss
movsl
loop
lret
mov
jl
cli
mov
xchg
iret
adc
loopne
push
push
sbb
testb
mov
cmp
clc
out
dec
mov
fildll
ret
fnstenv
mov
adc
leave
mov
xor
or
mov
sub
add
mov
add
jg
les
iret
mov
imulb
push
int
jo
or
test
inc
cmp
stos
nop
cld
sbb
mov
cmc
pop
pop
lret
jg
mov
cld
in
aad
pusha
ljmp
ret
scas
or
xchg
rcpps
punpckhwd
pushf
scas
test
dec
ljmp
movsl
shlb
out
movsl
pushl
adc
sti
jmp
pop
out
dec
xchg
xor
xchg
push
dec
in
into
xchg
add
into
push
sbb
inc
icebp
lcall
mov
adc
pop
cmp
or
sbb
movsb
into
stos
cld
iret
xlat
es
xor
mov
and
ret
xchg
dec
mov
movsb
out
mov
insb
push
sub
call
mov
push
mov
lods
xchg
mov
js
into
add
pop
mov
ljmp
sarb
test
cs
adc
push
mov
test
jecxz
test
mov
fdivl
push
mov
ss
push
dec
mov
sti
stos
test
rorb
repz
ret
jo
out
fistps
movsb
or
jmp
and
mov
sbb
je
dec
pop
xchg
xchg
pop
adc
sbb
icebp
inc
push
jns
xchg
inc
shlb
out
aam
adcb
jne
adc
ljmp
test
mov
sti
in
jecxz
sbb
imul
xchg
push
lea
xorl
push
lods
fldl
stc
sbb
cmp
lcall
jb
stos
xor
imul
gs
lcall
lret
test
stos
adc
xchg
jae
ret
push
loop
xchg
fsubl
repnz
or
imul
dec
jmp
orl
mov
mov
adc
cmp
insb
aam
dec
movsl
mov
xorl
lret
xchg
sbb
psadbw
ja
outsl
jmp
pop
outsb
jecxz
jo
mov
or
out
movsl
ret
jmp
aaa
cmc
mov
push
jl
enter
jle
add
sub
lcall
adc
jne
rclb
jmp
or
push
sub
cli
cwtl
aam
sbb
or
mov
movsl
add
inc
idivb
aam
sbb
push
dec
pusha
mov
cmp
or
pop
ss
scas
or
ljmp
inc
mov
mov
mov
jno
sbb
xorl
ja
pop
xor
lcall
jnp
test
jbe
lahf
das
ds
decl
pop
sub
call
push
mov
jg
gs
stos
lock
call
mov
test
fiaddl
fwait
aaa
xor
jmp
test
mov
pop
push
stc
cmp
jp
or
jnp
inc
mov
push
cli
call
lret
outsb
arpl
das
inc
push
fnstsw
mov
stos
mov
fchs
js
sbb
cmp
push
ffreep
dec
mov
stos
call
cltd
scas
xor
jmp
or
je
fdivrs
pop
cli
sbb
es
jnp
nop
pop
mov
mov
lcall
cmp
mov
pop
lock
cmp
push
dec
lock
out
out
call
pop
inc
shll
push
lret
cmp
cmp
lea
mov
push
jecxz
xchg
dec
call
mov
xchg
fsubrs
xor
sbb
mov
outsl
cld
aad
xor
adc
shl
cltd
hlt
inc
decb
lret
cli
and
xchg
mov
cltd
pop
clc
ss
push
movsl
js
mov
push
mov
dec
test
adc
pop
push
pop
xchg
imul
test
lock
push
sub
aas
cmc
jbe
dec
imul
push
cltd
and
cmp
call
stos
jo
decl
inc
shll
jbe
lods
rorb
jo
in
pop
jo
sar
mov
idivl
scas
fsubr
gs
into
call
js
jb
inc
ljmp
sub
fucomip
add
jmp
sub
mov
call
rorl
outsl
add
sub
aam
pushl
mov
cmpsl
aas
push
xor
xlat
js
dec
jmp
jg
out
ret
call
aad
jbe
sub
mov
dec
lret
jb
aas
push
dec
cmc
incl
xchg
xchg
cmp
jl
push
test
or
loope
xor
enter
xor
gs
push
jmp
addr16
adc
jecxz
inc
dec
call
daa
out
adc
fistpll
add
push
repz
daa
and
mov
pop
jg
mov
mov
and
pop
repz
dec
xchg
incl
mov
outsb
jmp
fwait
dec
jg
not
adc
dec
mov
jmp
xchg
aaa
cs
sub
mov
inc
pusha
cli
add
sbb
scas
dec
mov
xor
popa
mov
test
lock
ljmp
jl
sbb
push
adc
pop
dec
and
mov
jp
push
push
inc
or
add
add
out
js
mov
int
mov
push
test
cs
jg
adcb
fbstp
inc
add
std
scas
mov
mov
mov
xchg
sbb
pop
jo
std
and
and
outsl
pop
insl
jo
inc
mov
call
movswl
cmpl
add
sti
fcomip
insl
fwait
clc
xor
adc
dec
lcall
push
or
fwait
pop
divb
out
out
cld
ja,pn
or
pop
stc
pushl
fisubl
push
xor
imul
fistpll
jmp
repnz
mov
and
decl
pop
jae
pushl
xor
lock
popa
out
das
shrb
outsb
scas
mov
jmp
add
loop
test
shl
and
jmp
mov
mov
ljmp
or
paddd
dec
jo
jp
imull
xor
xor
popf
mov
push
mov
sub
ljmp
ja
mov
or
mov
xchg
lds
inc
mov
daa
test
sbb
xchg
lcall
jmp
sub
loopne
orb
mov
jbe
pop
loopne
aas
mov
mov
mov
and
pop
cmc
sbb
mov
loopne
add
xor
cmp
imul
mov
fsts
dec
mov
jne
addr16
pop
push
push
ljmp
jno
jns
enter
outsb
in
fimull
mov
push
bound
adc
mov
or
call
cmp
aas
imul
mov
sub
sub
call
cmp
ljmp
outsb
lods
mov
scas
or
test
test
xchg
data16
retw
jnp
inc
jle
push
mulb
jo
sahf
jmp
jp
test
jae
pusha
lock
pop
sub
pop
add
adc
mov
or
jae
inc
nop
lea
std
xchg
jg
push
std
sbb
subb
ret
mov
out
dec
jl
cmc
sbb
out
ljmp
dec
lahf
daa
or
ljmp
cmpsl
xchg
sbb
pop
leave
nop
mov
call
jnp
sbb
in
aam
mov
and
sub
mov
sub
aaa
and
sub
xchg
xor
and
mov
inc
dec
insb
jge
pop
cmp
lret
jl
sbb
lahf
adc
imul
ljmp
mov
jg
lea
mov
fwait
sbb
decl
mov
push
in
push
pop
or
test
xor
adcl
pop
jg
cs
aas
cmpl
and
int3
sbb
mov
mov
push
decl
rorb
fsubr
add
or
xor
and
mov
daa
popf
test
lcall
lods
call
push
or
or
sub
pop
cmc
jo
xchg
push
jmp
jae
pop
jmp
mov
nop
cmp
int
in
cmp
lahf
pusha
dec
xor
shll
ljmp
shrb
cmp
movsl
pop
mov
lds
pop
mov
mov
pop
dec
and
cld
mov
and
push
pushl
sti
popf
add
mov
scas
sub
fidivs
cwtl
hlt
pop
jmp
das
repz
dec
xchg
fucomi
iret
lock
jle
jns
push
fisubrs
sub
sahf
push
ljmp
cs
or
or
pushl
rorb
sub
addr16
ljmp
and
sub
mov
call
cli
mov
nop
lock
ret
inc
ljmp
cwtl
fldenv
mov
lock
aad
pop
mov
xchg
add
cmpsl
mov
dec
in
add
adc
fbld
out
pop
rcll
jns
mov
cmp
mov
mov
mov
es
lcall
fstpt
incl
add
dec
incl
add
js
test
inc
cmpsl
shrl
lods
mov
pop
dec
loopne
sub
add
add
test
hlt
clc
les
loopne
dec
incl
jg
cmc
jb
and
or
call
aad
shll
das
sti
scas
and
and
add
mov
mov
inc
loop
adc
jle
dec
cli
lock
jb
xchg
pop
inc
insb
pop
loop
je
and
xchg
jae
outsb
mov
pushf
sbb
mov
jmp
adc
es
jecxz
lret
jmp
pop
and
imul
inc
rorb
inc
sbb
fsubr
mov
hlt
fbstp
ljmp
or
xor
pcmpeqd
dec
clc
or
adc
pop
xor
mov
xor
mov
sbb
jmp
mov
jg
adc
std
mov
int
stos
js
jae
movsb
mov
mov
aam
xor
sbb
aam
adc
jae
popf
and
push
decl
lret
dec
xchg
sar
test
cwtl
ljmp
test
jbe
aaa
and
cmc
sbb
cmpsb
icebp
das
std
add
xchg
inc
add
mov
fldt
ljmp
out
and
mov
mov
fwait
jbe
xor
pop
mov
jmp
aaa
clc
fidivl
mov
insb
dec
push
mov
cmp
mov
sub
sbb
outsl
fldenv
cltd
add
repnz
jo
jb
scas
popa
loopne
shl
pop
mov
pop
arpl
ljmp
xchg
jnp
pop
and
in
dec
dec
push
fmull
mov
fdivr
cmp
jg
mov
decl
je
mov
sub
incb
pop
mov
cmp
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
sar
fnclex
dec
loopne
and
mov
add
outsb
movsb
xchg
mov
push
push
mov
push
out
inc
jne
and
pop
cmp
std
and
scas
inc
or
outsl
push
sub
fs
cmp
pop
in
popa
cli
pusha
lods
dec
es
jp
hlt
pop
ds
sbb
fdivrp
mov
jns
mov
sub
leave
jae
inc
jmp
sbb
decl
jecxz
xchg
jo
jecxz
outsl
pop
cmp
daa
rclb
dec
js
jno
fnstsw
jg
call
stos
arpl
sub
roll
scas
lcall
cld
inc
jmp
push
in
cli
lods
imul
es
ss
inc
jo
es
push
push
loopne
decl
sbb
imul
icebp
mov
mov
mov
inc
cli
jbe
mov
dec
jg
sti
incl
loop
lds
pusha
dec
dec
pop
sti
jecxz
mov
shrb
cld
out
mov
shlb
pop
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
xchg
cmp
xchg
xlat
mov
lock
fbld
lock
bound
add
jle
pop
int3
and
decl
xchg
inc
decl
push
sti
mov
or
adc
into
hlt
push
xchg
popa
and
xchg
sbb
pop
push
decl
jle
out
fistps
xchg
inc
icebp
push
jo
xchg
std
arpl
inc
jo
sbb
test
jo
inc
aas
jb
jle
xchg
xor
imul
inc
in
addr16
mov
or
shrb
das
xchg
xchg
imul
sar
es
fsubl
addl
mov
ffreep
cmp
test
das
cmp
cld
pushl
xor
pop
mov
mov
imull
incb
push
cltd
mov
jo
cmpsl
and
call
adc
aas
sub
cmc
repz
in
outsl
pop
movsb
scas
add
fldenv
leave
popa
cmp
lret
dec
sbb
xor
xlat
shl
aaa
sti
into
fidivrl
xchg
fists
neg
sbb
pushl
inc
into
mov
sbb
mov
xlat
sub
stos
out
pop
ss
aad
fbld
fisubrl
sbbb
std
repnz
in
xchg
jle
add
xchg
or
sbb
daa
mov
repz
call
lods
icebp
and
mov
jne
dec
xchg
dec
pushf
incl
addr16
xchg
mov
fimuls
stc
call
xor
push
shrb
stos
sar
sbb
mov
push
sbb
sub
shrl
ljmp
fidivl
dec
lock
mov
mov
jb
pop
inc
loopne
mov
test
ljmp
mov
imull
cltd
call
outsb
jmp
xchg
mov
out
call
iret
loop
dec
ss
leave
add
mov
add
push
push
push
stc
shr
js
fbstp
cmpsl
jg
pushl
mov
inc
mov
stc
stos
call
ja
mov
clc
and
orb
jle
shlb
aaa
mov
repnz
out
pop
das
or
lods
ret
xchg
fstl
fcmovu
jb
out
add
adc
cmpsb
shl
xor
shll
lcall
lret
adc
sbb
pop
mov
xor
scas
push
pushw
dec
push
in
test
nop
sbb
popa
cmp
js
jle
dec
test
lods
pushl
sti
mov
jmp
stos
in
scas
pushf
cmpsl
inc
add
ret
add
ljmp
lahf
pop
ds
outsl
lahf
jns
push
cmp
push
fstpl
push
add
sub
push
leave
add
xchg
push
cmc
mov
xchg
das
sbb
orl
popa
out
xor
js
std
push
push
pop
aaa
pop
shrb
imul
cmc
in
jmp
mov
xor
sbb
add
mov
xchg
cltd
nop
sahf
insl
lcall
mov
cli
inc
das
fimuls
mov
fsts
and
cld
stos
sbb
loop
fcomps
jge
jo
and
in
and
dec
or
in
sbb
pushl
add
ud0
gs
push
pop
lahf
cmp
test
insl
in
outsl
imul
pushl
pushf
repz
sbb
cmp
or
or
outsl
add
sar
fld
xchg
ficomps
mov
imul
jl
decl
pop
inc
xchg
fnstenv
add
repnz
adc
mov
lods
dec
lret
leave
cli
and
adc
inc
hlt
or
cmc
sub
push
out
clc
insl
pop
fidivrl
filds
mov
adc
std
mov
xlat
insl
lcall
or
out
mov
dec
cmp
pusha
mov
or
roll
inc
fiadds
and
xor
xchg
enter
add
hlt
add
mov
scas
scas
jmp
cmp
sarl
out
das
out
repz
pusha
jns
adc
in
pop
lock
popf
xor
or
mov
scas
call
add
call
inc
cmp
lcall
ljmp
mov
pop
outsl
adc
ljmp
scas
or
lret
adc
lcall
mov
or
std
fistpl
vdivpd
fstps
or
and
add
pushl
imul
rcr
inc
cmp
mov
mov
in
fistps
out
sbb
dec
std
call
push
push
and
aad
sbb
loop
add
xchg
add
cmp
cli
fdivr
mov
lods
mov
mov
ljmp
decl
sahf
lock
inc
mov
and
pop
push
and
jg
jnp
jmp
adc
xchg
outsl
loopne
aaa
mov
pop
cmp
fstpt
mov
and
cmovns
test
in
ret
mov
ficoms
mov
mov
lcall
ja
inc
push
adc
fcmove
fisttpll
jg
std
push
jl
mov
loope
push
cs
jg
push
fucomip
jns
dec
add
out
popf
cmc
or
add
loopne
js
pop
dec
sub
in
decl
push
aaa
push
dec
jns
rcll
testl
and
cmp
pop
lret
mov
pushl
jbe
rol
push
dec
jmp
in
imul
out
mov
add
int3
pop
loope
std
sbb
call
add
pop
ljmp
aaa
stc
mov
xor
sub
jno
cmp
mov
pushl
cmpsb
insb
lods
stos
jns
jmp
mov
lret
xor
mov
pushf
iret
decl
test
mov
sub
lock
jle
add
push
sub
call
loop
lret
xchg
outsl
push
int3
popa
fdivr
lcall
sbb
inc
push
cwtl
dec
push
xchg
aad
lahf
xchg
std
pushl
dec
test
inc
mov
call
xchg
or
sti
push
aam
idiv
aam
lret
and
adc
dec
std
adc
bound
aam
sbb
jmp
inc
pushl
jge
add
pushf
cmp
pop
add
rcrl
mov
addl
cli
pop
jmp
cmp
shl
ficoms
aaa
pop
xor
cmp
in
inc
push
jg
inc
pop
les
inc
cli
mov
mov
inc
and
test
movsb
mov
ss
cwtl
inc
jns
clc
lods
outsl
call
dec
jg
fldcw
or
clc
rcrb
sub
call
aas
stc
test
imul
ljmp
push
sub
mov
nop
mov
add
loop
incb
pusha
or
xor
mov
push
popf
xchg
push
add
mov
dec
push
mov
dec
mov
loopne
inc
pop
pop
jne
push
pop
mov
jno
out
int3
mov
inc
push
xchg
fdivr
clc
sub
cmp
sbb
je
cld
cmp
lahf
movsb
jmp
incl
ljmp
sub
cwtl
cmpsl
sub
jp
lret
call
call
cmpsb
hlt
sar
shl
in
jbe
jle
decl
jg
inc
dec
int3
loopne,pt
test
mov
mov
add
call
adc
call
rorb
call
repnz
call
loop
mov
test
sub
jo
cmpsl
mov
sub
push
push
mov
add
cmp
and
decb
fnstcw
orl
ljmp
mov
inc
stos
fcmovne
jg
gs
xchg
push
jmp
fsubrs
decl
cmp
push
dec
insb
js
push
push
add
fdivl
mov
les
and
jl
pop
outsl
push
fisttps
ds
jmp
jg
push
cld
mov
mov
lods
shrl
sti
aam
jle
push
mov
pop
or
cmp
iret
popa
lods
jge
dec
das
xor
mov
sbb
shrl
loopne
aam
pushl
jns,pt
fsubrl
xor
mov
cmp
insb
sub
lret
jae
fistpl
xlat
sub
data16
jnp
sbb
mull
mov
jmp
xchg
shlb
sub
jle
lods
sbb
es
test
daa
rcll
imul
push
jmp
inc
pop
call
dec
pop
cmpsw
ljmp
fnstsw
xor
adc
jns
fdivr
mov
jae
inc
test
pop
and
clc
incl
adc
sar
cmp
pop
pop
lock
jecxz
xchg
stos
pop
dec
ljmp
xor
pop
and
push
insb
and
adc
dec
push
mov
movsl
lcall
ljmp
inc
jecxz
scas
and
dec
fcos
jge
loopne
jmp
adc
jns
ret
xchg
das
idiv
lods
sbb
mov
mov
ljmp
mov
aas
lahf
dec
sbb
push
jg
out
sub
fists
sub
push
push
cli
ljmp
incb
push
xorl
sbb
push
xlat
clc
jecxz
and
lcall
mov
mov
sbb
leave
lcall
inc
push
jg
mov
out
inc
outsl
dec
fists
incl
jle
leave
decl
xor
xchg
and
mov
jnp
incl
lret
ficoms
adc
arpl
inc
jno
xor
cmp
push
popf
lods
shrl
push
das
stos
add
fwait
dec
jmp
push
ret
add
pop
outsl
and
loopne
pop
data16
rclb
inc
push
into
ljmp
sub
aam
or
mov
loopne
dec
loope
adc
add
in
jb
jbe
loope
incl
cmp
into
mov
dec
incl
scas
sub
pop
pop
adcb
fildll
adc
call
fisttpll
cli
cmpsb
js
data16
adc
adc
pusha
lods
cld
xchg
cmpsb
push
jb
inc
adcb
movsl
mov
rclb
mov
stos
add
das
sbb
mov
clc
mov
ss
addr16
mov
les
mov
sahf
add
iret
pop
sbb
ret
testl
ljmp
fiaddl
stos
jae
aaa
aad
sbb
in
or
stos
std
xor
or
dec
std
outsl
cmc
pop
pop
loopne
mov
push
aaa
std
pusha
push
inc
pushf
ja
push
xor
aaa
jb
movsl
inc
out
rol
outsb
int
jmp
jmp
iret
cli
push
sbb
inc
xchg
adc
lock
aaa
or
dec
jge
aaa
add
outsl
out
push
mov
jo
mov
ljmp
cmp
mov
dec
sarl
sub
or
pushl
arpl
mov
lods
fcoml
js
out
cwtl
aas
lcall
push
cmp
clc
jno
and
mov
xchg
insl
popf
test
daa
subl
pop
mov
jmp
addr16
outsb
mov
int3
psubusb
out
jo
imul
pop
mov
hlt
cwtl
jne
aas
mov
rorl
lret
mov
aam
in
xchg
icebp
sub
mov
hlt
add
inc
ja
push
mov
stos
sbb
fwait
lds
pop
incl
out
dec
clc
or
ljmp
push
stc
aas
aad
add
popa
icebp
shl
sbb
jge
jns
cli
dec
xor
add
push
data16
or
fstpt
push
pandn
jne
out
dec
push
mov
xorl
faddl
decl
pushf
mov
adc
pop
in
and
add
dec
enter
call
add
xchg
std
pop
or
into
insb
dec
imul
jb
pop
sbb
call
sbb
adc
cs
icebp
in
scas
mov
call
rcr
xchg
cli
inc
sbb
mov
cli
mov
xchg
add
lcall
cmp
add
pushl
jae
and
cmp
push
in
dec
mov
incl
push
ficompl
jo
ret
ret
push
aaa
gs
add
loopne
daa
adc
loope
mov
dec
fcmovne
fcomi
notb
jo
and
and
arpl
mov
fimull
das
mov
cs
std
arpl
aam
cmp
push
inc
mov
ret
jne
pop
outsl
cmp
inc
jle
clc
xchg
daa
xor
mov
out
sarb
mov
lahf
in
pushl
shrb
fsubr
xchg
dec
sti
inc
jbe
and
mov
and
decl
mov
fwait
decl
fucompp
pushf
negl
clc
push
fildll
xchg
insl
sub
shll
movsl
cmp
cwtl
rsm
or
cmpsb
call
xchg
xor
ret
popa
jle
sub
call
lret
push
fnstenv
sub
mov
adc
mov
inc
fstl
in
xchg
mov
stc
test
lods
and
add
aas
sbb
inc
dec
dec
lock
dec
mov
add
rclb
mov
jle
popf
sub
fmull
xchg
pop
push
fisttps
dec
cmp
aad
mov
into
pop
sahf
aad
jae
add
inc
icebp
pop
std
jnp,pn
lcall
lods
mov
pop
xor
or
test
xlat
cli
repnz
or
mov
cmp
dec
leave
pop
into
and
jmpw
leave
push
addr16
xlat
pop
les
ljmp
rcll
push
adc
fidivl
xchg
rclb
mov
lea
idiv
inc
push
fcoml
inc
lret
test
js
mov
icebp
mov
mov
dec
lods
push
sar
mov
into
inc
mov
loop
insl
mov
and
sbb
mov
add
das
xchg
and
ret
es
ds
fwait
cmp
and
cmp
sti
pushl
xchg
sub
repnz
hlt
or
inc
xchg
das
xor
ficompl
loopne
popf
and
mov
call
int
icebp
xor
mov
mov
test
movsl
inc
add
stos
stos
jp
jge
pop
js
popf
fsubr
adc
outsl
int3
fadds
inc
daa
dec
cmpsl
mov
jmp
jmp
pop
xorl
fmull
cmc
mov
cmpsb
idivl
aad
icebp
fstpl
arpl
pop
ljmp
stos
or
inc
inc
outsb
aaa
call
test
cld
lahf
sbbb
add
pushl
es
sub
pop
cmp
aas
out
lret
iret
mov
call
dec
popf
sub
addr16
pop
jg
rcrb
lods
xchg
mov
icebp
inc
push
adc
or
or
fidivl
push
cmp
cmpsb
mov
js
call
inc
repz
sar
hlt
arpl
lods
mov
xchg
jae
hlt
adc
testl
fistpll
clc
outsl
mov
sbb
pop
jp
cli
ret
insl
jmp
lods
decb
sbbb
rol
pop
jp
lret
pop
mov
adc
xor
loope
addr16
jbe
jg
mov
or
mov
dec
or
outsb
push
data16
push
jo
mov
iret
decl
pop
in
iret
jnp
and
std
iret
jl
add
add
ljmp
jl
fwait
mov
les
test
cmpsb
call
js
xlat
jmp
xchg
and
es
xlat
arpl
jo
aas
cmp
pop
fs
sub
pop
add
pop
jl
ret
cld
stos
xchg
xchg
aas
outsl
fcmovnb
xorl
push
or
shlb
idiv
pop
xabort
adc
ficoml
inc
icebp
pop
scas
push
ret
shll
jge
xor
lcall
mov
std
sbbl
enter
push
jle
pop
and
test
imul
test
sbb
jae
cmp
test
mov
pushl
imul
fimuls
in
shrl
dec
lcall
loopne
test
cmpsl
sbb
rcrb
outsb
rorb
sar
sarb
pop
test
lods
roll
and
xchg
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
inc
incl
push
dec
lcall
jp
mov
fldenv
mov
test
std
ret
nop
loop
pop
mov
inc
jns
gs
test
xchg
scas
or
je
sbb
sbb
inc
in
lock
push
or
aaa
imulb
adcb
cmp
int
les
mov
loop
ljmp
push
fisubs
aad
icebp
mov
pop
leave
ljmp
pop
notb
xchg
pop
sub
push
stos
decl
std
shll
pop
xchg
mov
cmpsb
lods
sub
xchg
insb
shll
pop
hlt
sub
stos
adcl
test
mov
lds
sub
movsl
cmc
les
test
outsl
cmp
add
jmp
cmp
push
inc
sub
sbb
stc
clc
xchg
sbb
jmp
inc
icebp
jle
mov
xchg
mov
cmp
xor
cmp
push
and
lea
inc
rclb
adc
push
stos
lock
xchg
jb
aaa
pop
jg
test
pop
lods
mov
ljmp
push
mov
add
into
and
js
xchg
subl
dec
xchg
incb
test
mov
scas
aam
jmp
imul
fnstenv
jl
sbb
ljmp
popa
dec
inc
cld
sbb
or
xchg
movsb
incl
xor
jecxz
call
dec
out
arpl
inc
xor
gs
outsl
arpl
idivb
mov
jg
idivb
gs
movsl
aad
les
jbe
mov
xor
push
idivl
arpl
mov
sbb
mov
mov
repz
sahf
xchg
int3
xchg
js
insl
push
pushl
loope
or
clc
in
ret
xor
imul
add
lods
aam
out
fs
push
inc
aaa
sbb
movsl
xchg
dec
loopne
inc
or
test
insb
cmpsl
adc
incl
push
adc
sbb
push
gs
shll
popa
cltd
cmovs
loopne
or
mov
mov
sbbb
and
decl
lock
loopne
jp
pop
add
sahf
add
mov
iret
pop
mov
lods
dec
mov
pop
loopne
push
inc
adc
or
cmpl
add
rcll
mov
dec
jae
sub
dec
ds
test
jg
mov
jmp
ret
lods
inc
add
jl
in
mov
loopne
popa
mov
stos
arpl
lahf
pop
cmova
fimuls
pop
out
inc
jg
hlt
decl
push
andb
xchg
dec
jge
inc
xchg
inc
mov
jg
jmp
mov
mov
ja
dec
push
das
add
popf
hlt
popf
incl
mov
orb
insb
lahf
fistps
jp
dec
fbld
xor
inc
shll
fwait
ror
sbb
js
int3
cmp
ret
xor
insl
sbb
loope
or
aam
sub
xor
aas
cmpsl
fcomip
or
mov
fidivrs
ret
pop
pop
add
and
inc
outsl
je
lods
sahf
lcall
dec
push
xchg
jnp
in
out
xor
test
mov
ljmp
test
pop
test
adc
ud0
pop
cld
cmp
cmpsl
lret
sar
and
enter
jbe
pushw
cmpsb
push
call
cmp
cli
xchg
stos
mov
xchg
xchg
mov
call
jecxz
xchg
sbb
shll
mov
aam
ljmp
daa
popa
inc
fnstsw
loope
mov
clc
push
push
sbb
rclb
in
xchg
adc
mov
out
sbb
popf
ljmp
jmp
das
xchg
incl
pop
fists
mov
lret
call
inc
fdivl
jp
das
sar
or
sbb
orb
in
xor
push
jge
and
rcrb
fwait
sbb
es
movsb
insb
aas
lcall
mov
mov
ret
jg
lock
stos
aad
or
out
jne
das
lock
icebp
out
outsl
adcl
enter
in
mov
dec
cmp
push
xlat
leave
jns
call
sub
mov
and
lods
push
xor
dec
cmp
repz
dec
jbe
ss
add
mov
jmp
sbbl
inc
inc
mov
sub
mov
fdivrl
ljmp
sub
in
jge
cmp
imul
leave
shrl
push
lea
incl
in
push
mov
cli
loopne
jbe
ffreep
jge
push
xchg
xor
pop
pop
mov
cmp
icebp
mov
in
decl
daa
les
add
in
cmp
ret
roll
jl
and
daa
xor
mov
jg
insb
ljmp
shl
adc
adc
fsubp
mov
repnz
adc
loopne
movl
xor
bound
mov
mov
sbb
in
mov
outsb
push
sbb
insl
push
scas
adc
sub
pop
sbb
int3
sarl
lcall
adc
test
mov
pop
loop
sbb
and
dec
je
popa
mov
loopne
aaa
pop
mov
out
xchg
in
es
mov
popf
call
addr16
dec
push
push
call
pop
es
mov
lcall
dec
repz
cltd
jns
popf
ret
fcos
mov
mov
sbb
test
aam
mov
dec
push
sbb
jno
cld
mov
mov
aad
adc
and
mov
and
test
aam
lcall
repnz
mov
push
std
sti
test
push
mov
mov
mov
xor
insb
sub
push
mov
inc
push
pushf
xlat
sub
test
fdivrp
fldcw
test
movsl
or
cmpsl
stos
outsl
mov
pop
cmc
inc
sub
xor
in
pop
movsl
push
scas
mov
fdivrp
jle
fbld
cmp
pop
jg
ss
mov
call
xchg
iret
push
mov
iret
aas
ficoms
shrl
sar
iret
std
pop
jecxz
lods
pushl
mov
sbb
incl
xor
jecxz
add
daa
jl
shrl
icebp
sub
xchg
in
dec
add
xchg
pusha
sahf
mov
in
stos
fs
das
inc
pop
xor
xchg
daa
pushl
dec
bnd
in
and
jecxz
or
test
aad
xchg
cmpl
or
push
jp
fstps
sbb
test
jbe
daa
cmp
jo
mov
and
inc
mov
mov
in
imul
cmpsl
push
jnp
add
outsl
cmc
out
in
addr16
lea
pop
push
jmp
in
mov
cmp
test
insl
dec
add
add
pop
jecxz
xchg
arpl
mov
lret
push
mov
add
in
mov
or
sub
push
jp
mov
ljmp
push
jmp
xchg
movb
push
scas
mov
aaa
ret
jbe
hlt
cmp
dec
ljmp
outsb
sbb
call
adc
fstpt
push
enter
jbe
dec
fildll
stc
lods
subb
dec
add
push
js
fdivp
pop
addr16
cmc
xchg
lcall
xor
pop
call
arpl
bnd
or
sub
clc
cmp
jmp
jb
jbe
push
pop
mov
cmp
lcall
dec
push
jnp
test
inc
add
jo
shlb
hlt
aaa
into
iret
hlt
pop
sarb
jecxz
inc
sub
fnstenv
xchg
jg
xchg
pop
in
cmp
sub
stos
inc
inc
cmpsl
insl
mov
xor
or
jbe
lret
add
in
jae
cmpsl
jb
cmc
jns
push
dec
jno
dec
incl
push
cmp
push
call
rol
add
and
arpl
std
fwait
popf
jmp
jp
jmp
mov
sbb
fldln2
adc
frstor
cmp
mov
mov
sbb
enter
les
pop
outsb
xchg
mov
mov
mov
pushl
in
test
and
jmp
jg
jg
fs
insl
shll
inc
mov
adc
dec
mov
sbb
data16
pop
inc
adc
cmp
cld
addb
jg
dec
cmpsl
mov
fs
mov
lcall
lock
mov
jnp
cli
pop
xchg
mov
nop
xchg
loopne
mov
inc
mov
aaa
andb
mov
aas
inc
mov
mov
xchg
outsb
test
in
mov
push
inc
loopne
mov
outsb
dec
repz
sbb
jnp
sarb
int
stos
xlat
jg
test
mov
stos
sarb
dec
shrl
inc
and
cli
fsts
mov
daa
incl
cmc
insb
push
push
adc
clc
jmp
jg
adc
rorl
sub
and
cmc
aaa
aaa
gs
dec
cs
in
and
ja
and
push
sbb
pop
ljmp
dec
lcall
mov
arpl
imul
add
popa
std
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
adc
add
and
add
lcall
pop
loopne
inc
jmp
shr
pop
popa
aas
notrack
lcall
call
movsl
jnp
imul
mov
lcallw
xchg
jle
jmp
or
psubsw
xchg
and
cli
and
mov
mov
and
test
call
ds
int
xor
aas
sbb
push
mov
stc
fdivrl
and
or
dec
mov
mov
fs
loope
cmp
ss
or
sub
jl
dec
aaa
lcall
in
sub
mov
cwtl
cmp
and
cmpsb
dec
pushl
xor
cmp
test
clc
mov
cli
iret
adc
adc
mov
je
xchg
mov
incb
push
lods
jae
push
dec
lods
test
mov
std
in
ljmp
lret
cld
cld
ja
push
daa
push
push
push
idiv
add
outsb
jecxz
ds
inc
mov
in
pushl
icebp
lds
movsl
dec
dec
ljmp
popa
adc
jmp
push
xor
pushf
ljmp
and
mov
and
mov
loopne
xor
mov
jmp
insb
fiadds
jae
into
rcrb
mov
push
call
ret
leave
int
sub
sbb
call
mov
mov
fcos
and
lahf
scas
incb
push
fimull
lods
and
lock
xor
adc
cs
cld
jno
in
nop
shll
xor
jmp
or
push
int
pushf
jge
lcall
add
cmp
jp
loope
push
sub
xor
sub
shl
adc
sub
jno
push
in
mov
fdivrs
dec
call
in
jb
stc
lock
sbb
and
decl
sarb
jno
cmp
lods
mov
mov
xorl
es
adc
mov
dec
movsb
push
pushl
arpl
mov
fs
repnz
std
ret
ds
adc
pop
lods
or
scas
out
fcmovb
mov
push
cmpsl
das
sti
sbb
push
cs
xorl
xorl
xor
dec
in
pop
xchg
push
mov
fdivr
notl
int3
mov
sub
sub
adc
ret
and
addl
inc
repz
mov
jbe
repz
mov
or
std
sub
inc
mov
inc
into
xchg
mov
pop
adc
rorl
frstor
scas
movsb
dec
call
cltd
sbb
pushl
xchg
fcoms
cmp
flds
loope
clc
dec
mov
cli
mov
dec
inc
sub
cli
cmc
aad
lret
insl
sub
add
mov
or
rcrl
and
inc
xchg
jg
hlt
xchg
js
sub
mov
popl
stc
cmp
jns
cmp
jl
mov
inc
sub
jmp
xchg
lea
popf
and
mov
mov
xchg
mov
dec
fdivrl
push
push
lcall
loopne
xor
mov
ljmp
cmpb
or
inc
xchg
mov
sahf
jp
and
adc
movsb
pop
mov
lcall
pop
ljmp
in
and
sar
hlt
or
stc
jnp
jmp
test
and
jmp
ret
cmp
cmp
xor
and
lcall
xchg
inc
int3
clc
clc
ds
leave
or
lcall
jno
insb
aaa
ss
clc
xchg
fimuls
sbb
or
and
js
aad
fwait
cmp
xchg
stos
mov
fldl
add
cld
sub
test
dec
out
adc
mov
mov
decl
loop
jp
mov
pushl
loope,pn
mov
jb
pop
cmpl
ja
cmp
adc
out
pop
movsl
mov
xchg
iret
cltd
sahf
das
stc
push
in
mov
dec
jno
xchg
mov
das
cli
cmp
hlt
enter
das
repz
mul
decl
mov
je
es
pop
aas
hlt
cmp
clc
pop
lcall
or
js
test
stos
mov
mov
pop
jmp
and
outsl
jl
cs
ja
in
mov
jno
test
dec
jg
add
fldl
lods
aaa
rorb
inc
adc
popa
mov
pop
adc
outsb
lods
insb
add
ret
in
sub
pop
dec
popf
mov
cmp
loop
mov
mov
lea
mov
or
mov
sub
sbb
adc
and
sbb
cli
std
mov
popf
out
add
dec
cmp
stos
jmp
fdecstp
push
jmp
mov
repnz
pop
or
dec
push
nop
and
push
or
push
ljmp
pop
mov
scas
aad
loop
cmpsb
xlat
and
jmp
push
sub
mov
jo
inc
idivl
and
in
rcrb
cmp
ja
cmc
in
pop
push
call
lcall
mov
pop
xchg
mov
mov
test
and
push
adc
jg
rorl
data16
push
ret
fwait
outsl
insl
sub
incl
pop
andb
ret
jne
add
insb
in
mov
mov
cli
jnp
mov
mov
hlt
call
sbb
decl
pop
insl
nop
call
cld
dec
fdivr
popf
fisubrs
pop
test
dec
jnp
push
or
das
mov
inc
inc
sbb
jmp
push
cmc
in
mov
outsl
sbb
adcb
pop
repnz
into
out
test
pushl
mov
pushl
push
push
dec
pop
inc
imul
enter
insl
push
data16
lods
or
cmp
push
arpl
and
push
inc
insl
mov
cli
jge
clc
jmp
aaa
out
mov
push
loopne
push
shlb
jp
bound
out
cld
test
dec
pop
add
lcall
aad
xor
adc
out
lret
incl
imul
inc
or
filds
mov
pop
incl
xor
push
mulb
fdivr
ficompl
call
push
fstl
scas
jp
add
mov
jnp
sbb
pop
aam
mov
and
incl
mov
cmp
lock
sbb
leave
fnsave
push
adc
xchg
rcr
ljmp
je
lcall
sbb
lcall
xchg
cmc
xor
lock
repnz
or
inc
pop
loope
push
mov
call
out
adc
cmp
mov
aam
cld
pop
mov
jp
push
push
mov
fbld
xor
sbb
mov
mov
test
fisubrs
ret
cmp
dec
das
rol
xchg
enter
dec
xor
mov
leave
push
mov
popf
mov
push
repz
xor
push
or
jmp
cmp
mov
jl
test
inc
pop
test
rorl
jecxz
aad
pop
add
arpl
jp
xchg
mov
outsl
adc
push
mov
aad
xchg
sbb
cmpsl
pop
fnstenv
test
cltd
xor
pusha
inc
rcrb
pop
sarb
fists
jp
lds
lea
stos
sbb
jp
push
inc
incl
mov
inc
sar
pop
outsb
iret
dec
fsubp
or
fcmovbe
inc
aaa
fucom
xchg
incl
push
loopne
adc
dec
pop
std
das
mov
fcompl
shlb
and
pusha
mov
in
adc
dec
dec
push
clc
lods
out
loop
mull
scas
mov
movsl
and
inc
cs
and
push
test
pushf
or
mov
inc
dec
outsb
hlt
mov
mov
aam
push
pop
mov
bound
rcl
cli
cmp
sbb
or
ror
push
dec
dec
scas
ljmp
imul
inc
in
jp
jle
and
mov
sbb
orl
sbb
addr16
dec
aam
jmp
inc
add
test
sahf
lods
and
addr16
inc
sub
mov
sahf
ljmp
shll
cli
out
jo
jg
pop
mov
mov
call
movsb
popa
popf
outsb
push
jmp
push
outsl
mov
ds
push
push
sar
adc
into
popf
je
add
dec
test
roll
pop
jnp
and
call
adc
cmp
push
imul
out
mov
popf
or
jmp
and
mov
mov
push
jg
data16
push
in
sub
mov
adc
mov
xchg
dec
jbe
incl
ljmp
xor
and
test
lret
add
mov
xor
mull
xchg
ljmp
mov
inc
iret
call
out
xlat
mov
push
pop
add
icebp
xor
das
push
and
ror
dec
dec
jmp
mov
arpl
pop
mov
sub
dec
test
popa
xchg
mov
adc
repz
ret
decl
xor
xlat
jae
xorb
ja
je
mov
adc
pushl
xchg
jmp
frstor
jle
jno
lret
decl
adc
xchg
call
out
popf
ja
inc
jg
mov
cmp
sub
sar
sbb
xchg
movl
jge
sbb
comiss
movsl
cmp
xchg
bound
sub
dec
out
enter
push
mov
inc
pop
pop
add
and
sarb
push
mov
ljmp
pop
pop
repnz
mov
mov
rolb
mov
inc
or
push
pop
dec
jge
out
call
lcall
inc
jg
sbb
ljmp
xor
jns
xchg
popf
jmp
push
lea
das
aad
cmp
inc
add
or
mov
ja
stos
rclb
loope
aad
decl
out
sbb
scas
shlb
repnz
cmp
add
rcr
decl
and
dec
call
icebp
out
sbb
mov
adc
mov
rep
and
mov
lcall
xchg
jle
and
xchg
icebp
div
insl
inc
sbb
cmpsb
movsb
jp
decl
xchg
ss
in
sbb
lcall
je
push
call
mov
adc
dec
insl
sbb
jl
cmp
jmp
stos
mov
shl
ljmp
pop
adc
pop
jmp
cltd
shrb
mov
and
sbb
outsl
mov
mov
ret
pop
filds
jg
sub
repnz
loopne
jge
sub
clc
mov
int3
jbe
ljmp
sub
push
xchg
aam
dec
mov
in
mov
jno
adc
xor
movsl
in
mov
sbb
sahf
inc
adc
decl
arpl
push
xor
mov
lcall
adc
push
inc
cld
sub
fwait
inc
call
inc
and
clc
outsl
mov
or
inc
push
xor
ljmp
loope
pop
jns
push
jl
in
jo
lods
insb
push
enter
cwtl
popa
cmpb
sar
cmp
or
lcall
xor
or
dec
addr16
dec
push
les
or
stos
vpunpcklqdq
jno
icebp
pusha
pop
jbe
mov
cld
std
call
pop
jno
nop
cld
push
repnz
ljmp
and
adc
nop
imull
push
sub
add
dec
in
test
out
mov
in
mov
dec
pushl
pop
cmc
lret
clc
rcll
xchg
adc
test
jae
cltd
mov
cmpsl
pop
or
scas
stos
add
cmp
sub
fcomps
add
add
cmpsl
mov
test
test
je
mov
mov
lahf
lock
insb
cmpl
cmpsb
out
seta
pop
pop
call
jb
jne
out
xchg
xchg
movb
cld
inc
popf
movb
decl
xor
fcomip
push
cmp
shlb
aaa
jno
push
mov
xchg
dec
cli
sbb
adc
das
aaa
adc
cmp
inc
sbb
push
call
cmp
fcmovu
add
jmp
jecxz
mov
mov
lret
push
cmc
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
decl
bound
ljmp
cwtl
or
mov
stos
mov
sbb
and
sub
loope
pop
and
es
xor
and
fildll
push
push
arpl
xlat
lcall
adc
jge
incl
xchg
sub
sub
pop
test
xlat
jmp
jg
fisubrs
hlt
adc
add
lahf
shl
fcomip
sarb
lods
mov
pushf
xor
push
mov
das
adc
das
cmpsb
lcall
or
pushl
sub
sti
jno
add
dec
ret
push
clc
ret
sub
or
js
fstpt
mov
add
push
mov
pop
out
test
cld
popf
aam
lcall
mov
shlb
daa
cwtl
ud0
insb
aas
sub
xchg
mov
cmp
xor
cmp
xchg
or
cmp
cmpsl
je
lock
jmp
lea
lahf
aas
and
movsl
cmpsb
push
xchg
xchg
es
push
mov
sti
mov
jmp
mov
adc
cmp
out
mov
out
mov
nop
call
push
repz
movsb
sbb
rcl
mov
mov
jg
jge
mov
and
in
inc
xchg
shll
repz
sub
dec
sarb
clc
adc
adc
out
push
mov
addr16
std
inc
outsb
mov
pop
fdivr
xchg
jl
mov
or
jb
mov
ret
add
test
fisttps
mov
mov
and
arpl
push
das
ret
test
mov
push
and
mov
and
test
mov
inc
mov
sbb
push
call
adc
pop
mov
inc
mov
lock
xchg
adc
mov
push
fisubrl
ds
pop
jo
popf
incl
mov
add
movsl
cld
jg
xchg
adc
or
add
xorl
in
jl
inc
adc
adc
cmp
ljmp
cmp
push
data16
push
insb
ljmp
into
or
add
xchg
aaa
outsl
das
push
push
imul
jle
loopne
nop
xchg
in
aaa
movsb
jecxz
mov
popf
and
fst
scas
ljmp
in
adc
mov
gs
lahf
cmp
mov
loopne
lock
jmp
inc
loop
roll
mov
jge
out
dec
mov
repnz
popa
inc
rol
repz
loop
cmp
sbb
inc
arpl
cli
xchg
pop
xor
cli
out
cmpsb
test
fbld
sbb
mov
les
jnp
mov
sbb
mov
out
or
shrb
pop
sub
les
jbe
sahf
imul
das
sbb
insl
xor
jge
lds
mov
lret
inc
scas
das
mov
dec
xchg
ja
push
jmp
stos
das
testl
jne
lcall
xor
sub
aam
aam
idivl
testl
inc
out
or
repz
pop
out
and
mov
adc
or
adc
dec
xor
pop
addb
loopne
dec
int
sub
mov
sub
sbb
xor
sub
pushl
jne
sbb
idivl
jg
andb
xchg
aaa
in
inc
and
ljmp
stos
bound
rclb
fwait
sar
arpl
js
in
push
data16
mov
sub
jnp
shlb
push
pop
pop
or
jmp
stos
dec
or
and
mov
cltd
push
jecxz
sbb
mov
and
dec
stc
pop
fcoms
mov
mov
flds
mov
fiaddl
push
mov
inc
movsb
pop
mov
not
jmp
decl
jge
cmp
jo
pop
pop
in
or
dec
mov
xor
das
stc
std
arpl
or
dec
call
scas
inc
mov
roll
jle
xchg
sbb
arpl
sbb
adc
add
insb
cmpsb
push
push
and
pop
mov
fdivr
pop
pop
push
adc
dec
mov
dec
out
mov
sbb
xchg
daa
lock
int
or
sahf
je
push
jae
scas
inc
sbb
orb
mov
push
lret
mov
int3
scas
push
dec
stos
fisttpl
addr16
jge
sub
lods
cmp
dec
fsubrp
and
cmpb
arpl
or
popf
imul
scas
mov
rorb
push
or
xor
mov
dec
mov
or
fisubs
pushl
cmc
sub
fistpl
lea
dec
mov
aaa
jne
clc
outsl
mov
ss
cmp
jecxz
adc
in
xlat
gs
repz
insl
dec
sbb
inc
out
xchg
fldt
mov
lcall
out
push
addr16
stos
gs
pushf
and
in
mov
push
jne
or
and
fldl
push
inc
mov
mov
jg
jecxz
mov
fdivr
inc
outsl
in
dec
out
pop
daa
clc
cmp
mov
xor
adcl
pop
push
enter
inc
sub
jo
mov
xor
dec
fldz
aaa
pop
sti
aam
out
enter
adc
xor
jns
and
rcl
rorb
out
pop
mov
sti
lahf
mov
imul
dec
or
mov
and
movsb
ljmp
cmp
mov
pushl
popf
pop
gs
sub
aad
repz
sub
xchg
imul
mov
fs
pop
lods
jno
stos
dec
clc
jnp
insl
insl
mov
scas
movsb
outsl
aad
icebp
mov
in
xor
addr16
pushl
sti
push
inc
call
mov
add
sar
gs
in
mov
and
push
rcrb
jle
testb
lods
xchg
into
inc
pop
cmp
mov
sbb
adc
leave
cmp
lock
mov
add
test
test
sarb
inc
jnp
xor
pop
cmp
int3
negl
std
inc
aaa
mov
cmp
outsb
icebp
mov
and
and
bound
cmc
mov
mov
jnp
mov
jle
jne
cmp
add
popa
adc
fwait
aaa
fwait
lea
push
mov
inc
sbb
cs
jge
mov
pushl
loope
shrb
pushl
sub
xchg
in
idivl
pushl
sub
std
lods
hlt
rol
test
sbb
aaa
jge
xor
decb
aad
movsl
xchg
hlt
lcall
bound
scas
hlt
pop
xchg
cmp
xchg
push
ljmp
cwtl
aas
adc
add
lock
testl
pop
cli
dec
mov
adcb
pop
mov
movsb
gs
jg
ljmp
xchg
jp
fistps
cli
pusha
cmc
jno
sbb
pop
stos
pop
cwtl
mov
aas
call
es
xchg
je
data16
lcall
mov
popa
mov
iret
and
dec
out
mov
in
cmp
sti
or
iret
jb
inc
test
ret
push
arpl
scas
sbb
stos
lock
in
cwtl
inc
imul
pop
pop
adcb
mov
arpl
xchg
or
or
adcb
ljmpw
call
not
add
cli
sub
adc
adc
and
sarl
sbb
ja
xchg
in
adc
int
dec
rclb
incl
sub
std
inc
jmp
push
outsl
xor
lea
dec
lahf
imul
xchg
mov
stos
inc
jg
dec
dec
mov
cwtl
fwait
and
xor
inc
movsl
enter
es
xchg
push
push
testb
mov
call
jecxz
cmpsl
test
and
in
and
push
sbb
and
in
cmpsl
call
pop
inc
push
ljmp
jb
cmc
sbb
xor
fidivrs
out
jl
aaa
and
out
sarb
bound
pusha
xchg
mov
pop
fdivs
mov
and
inc
loopne
add
cli
xchg
mov
in
int3
das
js,pn
sub
and
jp
sub
lret
testl
ds
sar
mov
sub
aaa
in
lcall
xchg
icebp
push
xchg
lcall
and
sbb
mov
outsl
sahf
dec
jae
decl
sbb
int3
dec
shlb
loope
aaa
pop
cmp
not
jbe
shlb
das
out
inc
pop
or
push
ljmp
outsl
sbb
mov
aad
incl
mov
sub
insl
mov
pop
jb
cli
test
adc
pop
pop
sbb
mov
xchg
cmc
dec
lcall
mov
fbld
outsl
mov
call
pop
jnp
inc
fwait
mov
jg
mov
lret
jmp
addb
outsl
inc
cmp
adc
dec
add
cmp
xchg
mov
inc
ud1
int
jl
call
ret
cmp
adc
aaa
mov
lods
adc
jg
pop
push
cmp
aas
pop
idivb
xchg
sbb
push
es
rcl
stos
fildll
mov
decl
jecxz
sti
test
cmpl
pop
int3
adc
aad
frstor
std
cmp
das
push
mov
shr
cmpsb
test
jmp
dec
call
mov
add
daa
mov
cld
aaa
push
iret
in
aad
repnz
aaa
je
jge
sbb
dec
insl
push
jmp
je
test
in
hlt
aaa
movsl
in
into
ljmp
pop
in
and
cmp
mov
in
test
ljmp
int
add
lods
mov
xchg
imul
jmp
lods
cmc
xchg
inc
push
cld
test
or
xchg
out
imul
cmp
stc
or
cmc
adc
aaa
in
mov
stos
push
je
xlat
iret
test
call
nop
lods
lret
cmc
add
jo
mov
inc
mov
ds
mov
mov
js
mov
addl
std
and
or
sbb
ljmp
xchg
jo
jg
jl
cwtl
xchg
les
pop
push
xor
imul
push
bound
adc
sarl
add
pop
jmp
pushl
cmp
les
pushf
cmc
mov
test
ss
jmp
ficoms
test
loopne
jnp
mov
test
adc
cmp
cli
and
arpl
mov
jmp
repz
xchg
loope,pt
push
mov
sub
dec
cmp
lret
xlat
fcomp
call
sbb
mov
aas
add
ds
pop
mov
rcrb
ljmp
jge
push
xor
jae
fsubrl
bound
std
adc
scas
jnp
sbb
add
pushl
push
dec
mov
pushf
sarl
or
test
pushf
imul
sub
mov
fildll
ljmp
in
lock
jp
fwait
shr
sbb
fbstp
stos
mov
push
jg
sub
pop
push
xor
clc
aam
call
cmp
push
xor
call
jl
mov
aam
mov
push
dec
sarb
std
jnp
cmp
xchg
pop
fistl
pop
push
mov
std
pop
add
aam
mov
lcall
pop
lock
adc
inc
sti
call
and
cmp
adc
shlb
js
ret
push
add
cmp
cmc
lods
rolb
sub
test
jb
lret
jmp
dec
fcmove
decl
and
ffree
xchg
orl
jno
or
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
incl
xchg
js
push
mov
subb
mov
in
mov
cmpsl
ror
sub
loope
cli
shrl
stos
stos
insl
inc
stos
xchg
mov
sbb
call
fsubrs
fdivp
das
lret
stos
xchg
xor
inc
sbb
fistps
in
dec
cmp
mov
dec
inc
cmc
jmp
inc
sbb
lcall
loopne
sti
jnp
mov
mov
push
mov
stc
leave
insb
in
inc
xchg
adc
pushl
cmp
decl
jmp
insl
fmuls
dec
push
mov
insl
repz
mov
push
fidivl
and
pop
std
jmp
sbb
ljmp
jmp
sub
call
sbb
gs
dec
and
pushf
push
mov
aam
sarl
test
cld
add
or
inc
or
xor
xchg
cmp
mov
in
mov
call
pop
jmp
cmp
loopne
xchg
jmp
mov
incl
ficoms
fsub
or
pop
enter
call
lret
fdivr
mov
xor
push
fs
pop
enter
ljmp
pop
decl
sbb
jmp
inc
xor
repnz
mov
lret
push
pop
dec
mov
push
jmp
jmp
lcall
fbstp
fistpl
adcl
decl
shll
ret
push
inc
cmp
jmp
stos
insl
inc
decl
pop
sbb
cmp
insb
loop
lahf
mov
out
vshufpd
call
jo
jecxz
jo
pushl
push
addl
inc
or
add
or
aaa
repz
call
lods
or
xor
inc
jg
int3
inc
mov
pop
adcb
aad
outsb
adc
xchg
lds
stc
mov
loopne
stc
je
imul
flds
incl
jne
popa
pop
stos
cmp
hlt
jno
sbb
pop
std
xchg
ret
fdivp
or
dec
incl
xor
xlat
pusha
ja
inc
call
xlat
jp
outsl
lcall
add
and
jnp
lea
fcmovnu
xor
cld
into
call
sbb
leave
push
jg
lods
mov
mov
clc
fdivr
add
dec
outsb
jg
leave
xor
fcoms
decl
cmp
xlat
into
lahf
icebp
lcall
imul
add
lea
pop
clc
push
jo
out
pop
pop
add
sbb
in
pushl
ds
dec
jno
jg
iret
xor
mov
popf
xchg
xor
in
adc
icebp
push
pop
pushf
xor
lcall
je
ja
adc
fwait
adc
mov
sti
mov
mov
test
ljmp
hlt
add
or
add
aaa
rcrl
or
push
mov
call
pop
addr16
sbb
vxorps
jg
adc
fistpll
pushl
mov
dec
decl
mov
jnp
dec
mov
cld
xchg
or
mov
fisubs
add
mov
lods
or
insb
movsb
sar
insl
stc
sub
jo
shll
movsb
push
push
inc
in
sbb
sbb
cmpsl
lds
cmpsl
out
jno
mov
push
cmp
in
mov
pop
cmp
push
xchg
icebp
jge
fwait
inc
push
add
pop
mov
insl
adc
and
je
jle
mov
aad
out
movsl
mov
jp
jne
in
adcl
push
jbe
mov
xlat
fcoms
call
out
cs
enter
xchg
jae
int3
sti
push
mov
push
mov
pop
mov
les
sbb
stos
and
push
ja
mov
add
incl
cwtl
jnp
xchg
repz
xchg
movsl
mov
mov
mov
mov
and
les
xor
out
incl
xchg
lret
jge
call
cmc
in
pop
add
sub
test
sbb
das
cli
aam
xchg
nop
inc
xchg
cwtl
dec
sar
leave
testl
jge
aam
imul
jae
inc
nop
pusha
inc
hlt
inc
add
fldl
bound
cmp
movsl
mov
daa
int
adc
ret
lea
jbe
rcll
stos
incl
mov
incl
xor
pop
stos
inc
iret
fsubr
xchg
jbe
scas
sub
xchg
adc
sub
ret
add
lods
and
decl
int
mov
clc
test
xchg
lds
inc
mov
jnp
cmp
scas
std
jle
mov
aam
sti
in
push
call
js
mov
pop
pop
pop
cs
mov
pop
or
mov
inc
pop
pop
cmp
ret
addr16
in
lock
cmp
sub
mov
fstpt
sti
je
xor
movsb
jmp
or
and
jb
call
xlat
frstor
aas
dec
sbb
repz
push
aad
cmp
shl
xor
or
cwtl
pop
aam
decl
mov
fscale
mov
sbb
pushf
incl
insb
xchg
int
mov
inc
and
inc
inc
cld
adc
notb
xchg
mov
pop
gs
data16
in
jae
fsubrl
into
dec
pop
js
adc
fildll
mov
mov
mov
ljmp
fldenv
fstpl
xchg
xchg
cmc
decl
fnstsw
push
lods
sbb
sub
repz
testb
xacquire
std
test
rcrl
sbb
mov
sti
xor
stos
sti
call
movsl
inc
sub
fs
add
cmpsl
pop
inc
lahf
dec
adc
clc
fsubl
jne
call
ficoml
pop
decl
fstpl
stc
push
mov
fcmovnbe
mov
cld
roll
imul
add
outsl
cld
out
ret
pop
lret
jg
ds
pop
and
push
sar
pop
cwtl
and
or
ja
repz
mov
or
ja
sbb
cmp
sbb
test
xchg
fs
cmovnp
rorb
or
das
incl
jl
jle
addr16
xchg
lock
pop
out
push
pushl
xchg
outsb
loope
jp
repnz
arpl
je
mov
sarl
test
add
jae
cs
pop
loopne
pop
movsb
fidivs
mov
dec
insb
decl
aam
aam
lahf
pushl
out
fldcw
cmc
push
lods
cmpsl
sbb
fstl
cmc
ljmp
xor
icebp
push
mov
shlb
subb
cmp
cmp
adc
int3
inc
outsl
cmc
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
hlt
add
cld
mov
decl
mov
nop
incb
push
rcr
pop
cmp
inc
xchg
adc
push
and
daa
ljmp
sbb
jmp
insl
mov
mov
dec
lea
mov
scas
inc
rcl
jecxz
insb
incl
inc
xchg
outsl
leave
les
call
sti
dec
xchg
jmp
js
insl
sub
lea
pop
test
call
mov
shl
lahf
push
xchg
adc
and
mov
cmp
sbb
in
movsl
dec
das
aad
or
dec
add
sub
xchg
test
xor
shrl
sti
das
lock
repz
push
dec
push
std
test
outsl
add
imul
cmp
and
pushl
std
sub
mov
mov
pop
call
popf
scas
jmp
test
out
or
aaa
sbb
cmpsb
jns
mov
add
in
pop
mov
je
ficomps
or
mov
out
adc
xor
in
loopne
fisubrs
fstpl
aaa
lahf
sub
sbb
popa
sbb
out
hlt
ljmp
mov
xchg
decl
imull
scas
pop
call
adc
mov
out
test
bnd
fcoms
lahf
add
hlt
notl
pop
pop
xchg
sahf
ljmp
enter
fsincos
es
pushf
aaa
jp
jb
lock
les
std
dec
shrb
outsb
inc
shll
mov
pop
mov
ret
inc
call
mov
lea
mov
jg
sub
mov
cmp
cli
xchg
mov
adc
mov
and
call
or
fdivrl
push
icebp
fcoms
pushf
jecxz
push
and
push
push
iret
push
aad
fstl
popa
jg
sub
inc
mov
push
mov
out
xor
insb
and
mov
xor
sub
es
jb
mov
aam
sub
fildl
lods
cli
jno
mov
fistpll
out
or
push
ret
sbb
lods
femms
cmc
in
das
pushf
xchg
jbe
mov
xchg
sti
insl
loope
ficoml
mov
pop
dec
xchg
dec
popa
cmpsl
pop
push
sub
xchg
aaa
mov
addr16
mov
jo
pop
mov
mov
ljmp
das
push
xor
inc
aaa
add
and
iret
lods
in
test
js
adc
idiv
inc
xchg
ja
mov
cli
flds
jae
loop
iret
hlt
pushf
loop
sub
rcrl
mov
shl
into
lea
mov
cmp
fdivr
mov
daa
jle
xor
repz
jge
xorl
adc
sbb
xor
mov
aaa
cmp
xor
sub
jb
add
mov
add
imul
popf
incl
mov
in
ds
incl
push
jg
and
cli
push
pop
call
and
orl
addr16
sti
xchg
fucom
sti
xor
incl
repnz
push
ds
lcall
mov
jb
rorb
sbb
push
mov
lahf
test
pusha
pushl
mov
and
das
and
js
jecxz
jecxz
aam
and
push
jb
push
push
je
loopne
cli
pushl
fwait
xor
mov
xchg
add
pop
xchg
jl
ds
clc
adc
xchg
bound
mov
inc
push
xchg
nop
dec
lcall
xorl
sbb
jecxz
pop
cli
cltd
push
sbb
add
movsl
in
gs
repnz
sub
aam
xchg
ja
aam
cltd
push
test
jns
jl
ljmp
xchg
ret
cmp
cmc
push
js
jne
dec
shl
lock
xor
outsl
lret
ss
or
add
inc
notl
adc
mov
mov
xchg
insl
lods
fimuls
sar
call
int
lods
in
pop
pop
fisubrl
mov
dec
cmp
cmp
dec
hlt
pop
sbb
lods
cmp
lods
pop
outsl
or
pushf
fs
jl
pop
cld
mov
mov
or
stc
stc
xor
movsl
push
enter
mov
cld
jg
jge
js
add
mov
out
decl
dec
jne
in
inc
leave
jae
sarb
ret
and
inc
mov
inc
clc
or
in
adc
mov
sbb
jge
in
daa
stc
incb
in
jb
push
fcomip
loope
add
add
pusha
fmull
adc
xor
pop
or
pop
pop
popf
stc
mov
lds
jbe
repnz
bound
nop
sub
das
sbb
mov
sub
lahf
stc
fcmovb
movsb
rorb
incl
in
aad
jl
out
ljmp
leave
push
sbb
iret
out
and
push
add
mov
rcrb
ret
fsubrs
jmp
lret
ds
mov
decl
outsb
xor
std
mov
inc
in
mov
decl
lds
and
mov
inc
cmc
mov
inc
sbb
adc
loop
scas
int3
das
repnz
xchg
sbb
mov
lock
inc
negb
std
mov
pop
mov
push
sbb
inc
pushl
std
les
adc
outsl
fstpl
or
in
std
fcmovnbe
jo
sbb
loop
or
jg
fwait
test
jo
mov
xchg
inc
insl
cmpl
jo
fdivrl
mov
sub
add
inc
jecxz
cld
xchg
jmp
mov
sub
sar
or
and
loop
cmp
inc
sub
jmp
push
ror
aaa
mov
inc
pop
lret
sar
in
push
iret
out
in
movsb
cld
adc
or
jmp
aam
shrb
and
int
lret
insl
cmp
out
imul
andb
incl
push
mov
fdivr
sahf
lods
mov
dec
xor
scas
xchg
ja
out
mov
lret
sbb
gs
outsb
and
sti
sub
cs
test
imull
test
sub
or
call
lea
jecxz
addr16
add
lock
jns
adc
or
adc
jp
push
shll
dec
insb
lods
sub
inc
clc
sbb
pushf
outsb
je
lock
push
inc
xor
inc
xor
lods
cmp
xor
cwtl
mov
jg
xor
mov
scas
fcoms
subl
scas
jp
arpl
clc
pop
ja
sub
and
push
fs
sub
imul
inc
incl
repnz
lds
clc
push
mov
dec
pushl
shrb
jmp
and
mov
inc
ljmp
dec
mov
cld
and
nop
add
or
pusha
cmpl
mov
adc
mov
gs
imul
icebp
lret
test
js
xchg
fs
push
cmp
mov
sti
andb
push
es
imul
mov
idivl
cli
xor
mov
rcr
decl
pusha
daa
xchg
imul
pusha
jmp
sub
pushl
andl
icebp
add
push
and
mov
mov
pop
les
inc
sub
adc
mov
dec
in
push
jnp
call
xlat
mov
idiv
sub
cwtl
lcall
adc
stos
nop
inc
pushl
adc
cmp
inc
sub
jmp
mov
rclb
ljmp
jecxz
jp
mov
stos
cs
cvttps2pi
push
call
push
xor
mov
inc
inc
mov
stos
outsb
idivb
dec
sbb
pushl
loopne
jmp
xchg
push
jo
sub
inc
jg
xchg
mov
mov
dec
inc
mov
inc
outsl
pushl
sub
jno
or
mov
push
lcall
int
scas
sti
pop
xor
jmp
fcomip
pushl
or
es
sub
dec
aaa
sahf
repz
mov
mov
call
mov
lock
aad
cld
addb
push
jne
repz
pop
sbb
shlb
mov
fcomp
or
sbb
cld
and
mov
xor
xor
int
xchg
cmp
fcompl
fildll
pop
adc
cmp
mov
sarb
pop
mov
scas
inc
call
sbb
shl
cs
insl
sbb
mov
out
push
repnz
pop
mov
in
js
xor
add
xchg
pusha
inc
push
sbb
jns
call
pop
inc
rcrl
push
fs
lcall
mov
xor
cli
cmp
subb
jg
fbstp
sahf
decl
enter
mov
incl
iret
das
xor
clc
leave
filds
cmc
and
test
inc
adc
loopne
ficoms
dec
insl
lret
fmul
hlt
insl
pop
ljmp
jne
adc
es
mov
incl
and
mov
dec
stc
or
inc
pushl
push
sub
push
inc
inc
inc
jbe
aaa
or
pop
xor
cli
xchg
data16
cmpb
dec
lea
push
pop
and
pop
lcall
test
stos
adc
jmp
xor
adc
push
push
lret
mov
cmp
xchg
lea
pop
adc
lcall
push
in
js
cmp
cmc
and
aas
int
das
push
clc
mov
add
aaa
fisttpll
mov
hlt
xor
or
loope
insl
decl
mov
jp
lcall
loop
add
pop
ljmp
test
xor
cld
push
in
imul
in
jl
ds
xchg
test
imul
pop
adc
stos
incb
mov
ret
and
mov
je
repnz
das
xchg
call
push
test
data16
popa
inc
mov
and
repnz
jmp
mov
fs
out
sbb
in
push
pop
incl
inc
and
call
data16
mov
mov
cmp
lret
adc
leave
sbb
sub
ljmp
sahf
add
call
enter
sahf
out
mov
adc
add
jno
scas
stc
mov
adc
pop
popf
sub
adc
call
xor
pop
or
pushl
cmpsl
jecxz
ret
call
dec
scas
push
movsl
jge
pushl
xlat
clc
scas
je
addl
fiaddl
mov
inc
cmp
dec
adc
insl
lcall
ds
jmp
mov
sbb
or
cmp
inc
sbb
add
hlt
push
add
cs
out
cld
jnp
xchg
addl
push
test
std
push
rol
or
enter
cli
add
mov
inc
call
fsubr
jns
push
xchg
sahf
mov
sub
es
jns
xchg
adc
xchg
fbld
incl
xchg
popa
data16
in
and
push
mov
dec
cwtl
dec
jb
sub
and
dec
jg
dec
mov
pop
call
imulb
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
hlt
fwait
dec
mov
pushl
arpl
in
jnp
xchg
mov
pusha
mov
adc
cmp
fiadds
aas
or
sub
jnp
mov
fisttpll
pop
or
pop
inc
lahf
jmp
call
jmp
pop
xor
push
or
xorl
push
cmp
les
mov
scas
add
test
ljmp
xchg
mov
lcall
cmp
in
call
mov
cltd
cs
loopne
pop
pop
pop
jb
adc
clc
imul
leave
or
ljmp
insl
xchg
js
dec
xchg
cli
out
js
aaa
mov
sub
push
and
push
insl
mov
cmp
xlat
mov
jo
pop
loope
adc
idiv
loop
push
jmp
mov
jmp
aaa
pushl
xchg
call
push
dec
repnz
jp
dec
jae
xchg
mov
loopne
mov
jne
or
call
movsl
aam
jmp
xchg
mov
mov
xchg
jp
loop
out
in
rorl
jmp
mov
xchg
mov
decl
ljmp
mov
lcall
mov
mov
and
push
jmp
stc
mov
js
in
fdivrs
sbbb
jns
mov
loope
sub
push
mov
rolb
pop
rcll
cmpsb
xchg
pushl
fsubl
mov
sbb
popl
pop
mov
xor
dec
lcall
test
and
jmp
adc
movsb
sbbb
jecxz
cmp
shrb
mov
stos
fists
mov
sub
data16
sbb
cld
ret
mov
dec
imul
mov
xor
and
and
ljmp
gs
push
data16
cld
add
daa
lock
mov
cmp
call
stos
rol
push
and
mov
sub
ret
int
ljmp
mov
gs
add
test
in
mov
jg
in
mov
pop
decl
cmp
fdiv
xchg
xchg
daa
cmc
outsl
out
xor
lcall
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
mov
pop
sub
add
mov
inc
sub
or
stc
fldt
das
loope
and
inc
sahf
sub
or
push
or
std
adcl
add
sub
mov
sti
inc
pop
push
inc
bnd
mov
mov
mov
clc
negb
int3
clc
enter
inc
cmc
sbbl
es
lods
call
sbb
xchg
xor
dec
cmp
inc
outsl
fsubl
sbb
sbb
pushl
cmc
das
fidivrl
inc
xor
xchg
push
push
pusha
shlb
mov
or
outsb
hlt
push
clc
out
inc
push
lcall
ds
rcrb
je
sub
mov
leave
cmpb
decl
add
inc
sbb
popa
loop
pop
cmpsl
fucomip
cmpl
xchg
jae
mov
xor
push
jbe
fmul
shl
sbb
dec
bound
xchg
sbbl
movsl
jmp
mov
inc
jl
or
in
pop
pop
push
sub
fistpll
mov
les
cmc
outsl
mov
push
ljmp
and
xchg
cs
orb
mov
decl
xchg
xchg
push
enter
out
in
jecxz
mov
adc
xchg
add
aam
stos
dec
pop
add
mov
xchg
loop
dec
int3
movsl
mov
ljmp
mov
jae
push
cmp
into
mov
pop
in
mov
outsl
sub
incl
jp
std
inc
pop
incl
mov
jae
mov
repz
push
adc
mov
sub
push
fdivl
fistpll
dec
dec
adc
test
pop
cli
js
std
or
loope
jg
mov
inc
roll
adc
lods
movb
decl
xor
push
mov
inc
pop
jmp
jne
lds
out
cmp
dec
sbb
pop
add
scas
hlt
mov
andl
ljmp
pop
xchg
cmovns
adcb
idiv
sub
pushl
push
jnp
dec
in
fs
fldcw
fidivrl
pushf
into
pop
mov
jmp
cli
adc
xchg
call
dec
clc
jp
test
stos
and
cltd
lcall
iret
dec
or
mov
mov
es
les
push
aaa
xchg
push
cwtl
jb
stos
aad
mov
dec
pushf
jp
lods
or
sbb
in
mov
add
call
lock
sbb
xchg
jns
popa
ljmp
in
mov
insl
xor
cmc
mov
mov
call
test
and
cmp
sub
pop
out
dec
xchg
mov
pop
mov
int
pushl
lret
leave
loop
adc
outsb
pop
imul
mov
lahf
ja
dec
js
push
jbe
loopne
rcrl
mov
adc
cwtl
jecxz
test
lea
mov
mov
stos
xor
sbb
nop
inc
fdivl
cmp
xor
mov
xchg
dec
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
decb
pop
out
repnz
xchg
and
jl
and
jno
andb
xor
cmp
xor
inc
int
mov
js
shl
jmp
test
lcall
push
movsl
mov
cld
xchg
sub
dec
and
fisubl
mov
sbb
mov
mov
incl
ficomps
cmp
and
inc
test
loopne
xor
std
cmc
popf
push
sbb
mov
scas
aam
scas
mov
jnp
inc
ss
mov
lea
lods
inc
dec
arpl
nop
add
loopne
push
and
in
rorb
jbe
push
mov
and
mov
xchg
jg
jns
outsl
test
push
outsl
fistps
pop
and
out
fnsave
das
inc
dec
mov
incl
and
call
pop
push
adc
outsl
dec
jle
jg
jnp
daa
add
aas
scas
jbe
add
push
or
incl
cmp
clc
out
outsb
mov
pushl
cmpsb
mov
nop
call
push
aad
or
sti
lcall
dec
and
jbe
cmpsl
loopne
sbb
out
xchg
nop
out
jge
adc
cmc
nop
mov
xchg
jmp
xchg
mov
not
fcmovu
ss
sbbb
xchg
aad
outsb
cmpsl
lcall
mov
push
jne
dec
inc
loope
pop
add
loopne
fwait
loope
mov
sub
decl
dec
lods
or
addr16
incl
sti
test
out
into
sub
mov
sbb
lds
pop
cmpsl
xchg
pop
pushl
lock
orb
add
incl
push
cmc
xor
dec
mov
adc
test
lea
jecxz
jmp
invd
fimuls
out
daa
sbb
ret
call
mov
jne
dec
out
pop
inc
sbb
jge
mov
pop
out
pop
jbe
icebp
in
arpl
push
lret
bound
nop
fstpl
shll
sti
ficomps
mov
call
mov
cmp
mov
cmc
fnstcw
clc
xchg
xor
adc
mov
adc
imul
std
mov
in
push
pushl
addr16
xchg
jb
xchg
pop
xor
jle
or
pop
inc
loopne
js
dec
sbb
movsl
pop
mov
jg
lds
mov
or
iret
jl
aam
ljmp
jmp
jg
or
sbb
mov
inc
lods
add
add
in
les
pop
mov
mov
mov
mov
inc
adc
xor
out
mov
mov
test
mov
inc
mov
inc
aad
sahf
adcl
inc
mov
rcrb
fadds
push
pop
decl
mov
adc
cltd
outsl
xchg
ljmp
xchg
mov
xchg
addr16
je
daa
les
insl
lcall
cmc
iret
stos
adc
push
mov
fimuls
call
xor
jmpw
test
lock
push
jge
pop
cmp
popf
cli
mov
or
in
into
ret
jmp
xchg
lea
adc
loopne
jne
cmp
lcall
loope
les
xchg
aam
push
loop
lock
popf
cs
std
mov
outsl
mov
in
mov
mov
adc
inc
add
bound
loop
xchg
mov
nop
xchg
push
in
das
push
sbb
call
movsl
mov
decl
stos
lea
cld
xchg
mov
push
sti
push
outsl
cmpb
pop
push
mov
mov
mov
in
loop
sub
mov
cmp
mov
sub
mov
arpl
add
pushf
mov
cmp
incl
jns
in
aam
jg
pop
mov
decl
pop
aad
adcl
push
clc
and
pop
jbe
mov
mov
clc
dec
jbe
mov
inc
les
xchg
mov
ret
lret
sub
mov
rorl
incl
jnp
aad
bound
movsl
popa
xor
outsb
jg
frstor
add
fcoms
sub
ljmp
das
xlat
dec
scas
insb
add
clc
xor
mov
mov
mov
add
or
shrb
jmp
loop
mov
fisttps
add
push
or
add
das
jne
sbb
lock
ljmp
fsubrl
xchg
push
xchg
jecxz
mov
cld
pushl
sbb
in
jbe
inc
pop
aam
mov
andl
mov
outsl
clc
jmp
in
insb
ds
insl
push
stc
xchg
jg
iret
sub
push
clc
xor
cli
inc
push
and
jno
lock
ud0
cwtl
dec
or
xlat
rep
xor
sbb
lea
scas
cmp
cld
sbb
ret
jne
ljmp
jmp
das
aaa
mov
xor
mov
push
lahf
aaa
test
int3
ljmp
xchg
add
jmp
cli
mov
dec
std
add
subl
sub
and
or
mov
pop
and
cli
xchg
mov
push
das
sub
mov
mov
das
pop
cmp
daa
sub
push
stos
xchg
xlat
int3
lea
sbb
sbb
mov
dec
mov
das
sarl
or
cmp
out
push
pop
dec
adc
cmc
pop
xchg
xchg
and
inc
push
mov
testl
xchg
mov
push
test
fistpll
jb
les
mov
jnp
mov
mov
mov
pushf
mov
jnp
cmp
imul
and
xor
dec
mov
jmp
xchg
into
pop
call
addr16
int3
add
lds
push
mov
jmp
adc
pop
das
pop
jae
or
incl
and
jg
pop
mov
cmp
and
sbb
call
lods
movsl
in
cs
pushl
addr16
push
push
rcll
dec
cmc
std
lcall
inc
push
pop
popa
lock
mov
pushl
sbb
cmpsb
pop
imul
insl
sbb
add
lea
mov
xchg
xchg
mov
pop
lcall
faddl
ljmp
inc
mov
jmp
mov
decl
lret
dec
out
or
scas
sub
loope
lcall
xor
fdivr
xor
inc
push
sahf
das
notl
mov
stc
outsb
xor
pushl
pop
and
sti
jbe
call
sbb
jmp
lcall
or
mov
in
ja
das
add
loopne
roll
add
dec
jmp
jp
jecxz
js
ljmp
int3
mov
popf
incb
mov
add
push
mov
sub
cmc
and
inc
stos
incl
gs
int3
sti
idiv
lds
push
outsl
sbb
hlt
cli
incl
in
shll
incl
dec
int
pushf
int
faddp
fldl
lret
xor
push
push
hlt
cmp
xor
mov
pushl
pop
add
sub
adc
dec
insl
lret
movsbl
cli
loop
pop
pop
adcb
pop
jns
jl
je
dec
movsb
das
add
lcall
jle
add
dec
xchg
lcall
movsb
imul
ljmp
addr16
enter
jne
sub
hlt
xchg
dec
xlat
clc
xlat
push
dec
icebp
inc
mov
ja
lea
adc
or
xchg
call
sti
sarl
sti
lahf
pop
pusha
loopne
or
jne
mov
ret
je
in
jg
sbb
adc
ffreep
mov
stc
pop
mov
mov
xchg
std
ljmp
pushl
insb
cwtl
jbe
ret
mov
cmp
pushl
mov
jmp
test
stc
in
jg
out
call
aam
pop
mov
cwtl
sbb
or
jbe
pop
and
sub
lock
jae
rcll
add
call
je
sbb
dec
adc
jb
ljmp
add
mov
fsubr
pop
call
push
sbb
imul
pop
loop
fmull
jg
lds
fdivs
lcall
adc
incl
aas
stc
sub
test
lds
dec
lds
fldl
fbld
loope
mov
fmull
test
std
clc
cmp
cld
pusha
or
push
out
lcall
cmc
pop
add
outsl
dec
cmp
lea
pop
cmp
jnp
pop
sub
repnz
add
jno
mov
sti
mov
fcomi
fnsave
or
das
dec
in
cmpsl
pushl
mov
pop
shufps
fbld
ret
aas
ljmp
ljmp
aad
jle
adc
mov
xor
and
decl
xor
sbb
pushf
dec
push
pop
loopne
rcr
pusha
pop
xchg
lcall
out
sub
or
add
and
mov
sub
into
mov
int
xchg
aaa
mov
loop
xor
adc
fs
add
jmp
shrl
inc
movsb
ja
in
int
out
stos
xor
adc
jg
sbb
pop
aaa
test
nop
test
ret
pop
sar
aad
xor
fbld
pushf
push
cmp
std
mov
push
push
orl
ret
das
ja
data16
std
dec
repz
lods
fisttpll
jne
cmc
cmpb
inc
daa
pop
and
sahf
pop
xchg
sbb
lcall
mov
xor
jg
sarl
lcall
cmp
std
inc
push
in
push
dec
ljmp
pop
pop
cltd
add
cmpsl
jmp
lods
js
or
incb
sahf
ret
mov
addb
dec
pusha
inc
ror
push
mov
xchg
xor
mov
fldenv
in
fdiv
dec
push
dec
mov
sarl
sbb
push
loopne
divl
mov
icebp
push
jl
pop
decl
jns
stos
push
dec
adc
clc
cmp
repnz
jmp
in
push
ficompl
cmp
push
cmp
pop
push
xor
adc
xor
add
ljmp
push
and
pushf
int3
incb
jae
inc
or
sub
loop
mov
mov
lock
test
or
shr
push
lock
or
aad
sbb
adc
cmc
enter
in
je
hlt
inc
add
int3
loope
fimull
icebp
subb
inc
mov
lea
mov
out
lods
inc
push
pushl
lods
jo
decl
pushf
sub
mov
test
scas
call
sbb
cmp
fbld
or
jg
loope
cltd
cmc
jmp
mov
mov
cmp
bound
cwtl
add
mov
cmp
or
pop
or
movsb
test
xlat
jmp
mov
or
dec
inc
or
in
xlat
jno
push
mov
inc
scas
cmp
movb
mov
mov
cmp
xchg
pop
or
pushl
test
xor
mov
mov
in
stos
pop
daa
scas
dec
mov
into
cmpsl
adc
fmuls
pop
lcall
mov
movsl
push
inc
sbb
or
nop
fbld
adc
out
clc
push
ja
fisubl
xchg
mov
mov
shll
adc
mov
test
fcom
js
data16
mov
adc
inc
call
mov
dec
push
icebp
jecxz
call
jne
mov
in
pop
sub
movsl
jmp
jle
inc
pushl
popa
adc
call
mov
call
lret
fcompl
bound
jmp
jno
jg
lret
jp
movsl
inc
js
lods
test
pushl
in
xchg
ja
and
jl
xchg
leave
aaa
mov
in
push
mov
loop
aad
inc
inc
pop
jmp
fisttpll
push
out
stc
add
xchg
pop
enter
leave
lods
sti
mov
mov
mov
jmp
pushl
popf
mov
mov
and
rolb
in
imul
shll
out
pop
js
cmp
adc
mov
lea
aam
push
mov
push
call
es
hlt
add
dec
pop
push
shll
cmp
adc
dec
adc
mov
jge
jno
add
xor
push
pop
decl
rcpps
test
jmp
adc
test
xor
call
mov
test
mov
outsl
pop
cmpsb
repnz
hlt
fisubrs
ljmp
jns
fcoml
call
rorb
pop
cli
movsb
xorb
or
dec
sti
adc
jne
sub
fiadds
dec
dec
jmp
or
inc
dec
les
push
call
mov
sbb
sub
pop
push
adc
jne
insb
adcb
xchg
ljmp
jl
cli
sti
stc
out
repnz
adc
mov
clc
jmp
sub
dec
mov
xchg
pop
pavgb
mov
push
mov
pushl
rcrb
push
out
cmc
test
xchg
and
cmpsb
inc
out
movsb
ljmp
cmp
or
sbb
push
pushw
mov
ljmp
mov
xor
sahf
xor
mov
sbb
aam
in
into
or
and
jmp
loopne
mov
sahf
cmpsb
gs
hlt
addb
testb
sbb
test
mov
hlt
pop
mov
hlt
daa
jmp
mov
lret
cmp
ljmp
xchg
adc
sbb
inc
xlat
push
stc
clc
jmp
lods
arpl
add
es
cltd
sarl
lea
pop
cs
insl
std
mov
xchg
adc
incl
pop
mov
sub
fisttps
lcall
in
sbb
push
ljmp
mov
mov
add
sbb
pop
sub
or
pop
push
pushl
or
lods
push
inc
ret
jle
or
xchg
incl
push
and
jecxz
sbb
imul
or
cld
pop
add
out
and
cmc
dec
or
xchg
pop
arpl
sahf
jg
loope
das
outsb
jbe
jae
mov
xlat
pushl
cmp
xor
pusha
dec
aas
sbb
decl
dec
fucom
ja
insl
cmp
mov
fs
mov
call
or
mov
lcall
arpl
imul
rol
sbb
mov
jno
mov
push
insl
cltd
hlt
das
in
loopne
aas
leave
test
jb
ss
fstpt
addb
xchg
dec
les
adc
rclw
xor
pop
or
pop
cmp
int
jg
mov
inc
push
mov
pop
ljmp
clc
mov
pop
test
adc
adc
jmp
pop
repnz
mov
cli
sbb
in
in
lods
lret
xor
imul
test
hlt
ret
in
cltd
inc
cli
pop
push
sbb
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
sub
dec
ljmp
imul
nop
adcl
sub
cmp
sarl
dec
sbb
and
jo
dec
mov
mov
mov
out
mov
sub
cmp
pop
pop
dec
sti
add
test
or
stc
aad
pop
mov
mov
popf
push
lock
cld
sbb
outsb
pop
pop
lcall
and
das
jle
push
jnp
test
addb
pop
mov
iret
in
mov
sarl
call
push
adc
decl
in
popl
hlt
adc
inc
inc
das
sbb
jmp
pop
mov
ret
add
cmpsl
jnp
xchg
out
cwtl
lcall
pop
mov
sbb
les
or
fdivrp
add
or
pusha
pop
adc
push
outsl
fists
aam
cld
je
sub
or
mov
dec
loope
enter
cmpsb
in
sarb
or
or
mov
dec
insb
mov
ret
fnstcw
push
fcomip
pop
ret
push
adc
add
gs
inc
xchg
lock
inc
sub
jmp
jg
lods
push
xor
jmp
push
mov
bound
ret
add
dec
and
pushl
jo
fidivrs
pushf
xchg
call
cmc
ss
fcmovbe
int3
hlt
and
cmp
adc
arpl
adc
in
jl
dec
movsb
shll
pushl
aas
and
mov
dec
cmc
xchg
lods
push
xchg
mov
jnp
incl
jns
mov
cmp
pop
mov
mov
aad
dec
dec
cmp
arpl
cmp
into
push
loopne
add
pop
mov
mov
data16
sub
aad
mov
push
outsl
inc
and
in
aaa
mov
cld
in
dec
lret
xor
inc
adc
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
fisttps
ret
inc
clc
or
les
mov
movsl
mov
out
add
arpl
shlb
std
mov
mov
stc
fbld
andl
dec
pushf
in
lcall
sub
mov
inc
testl
mov
int
inc
or
mov
shr
icebp
mov
mov
jp
pop
sub
clc
cmpsb
insl
inc
mov
adc
sbb
lock
lock
mov
sbb
mov
jmp
jg
into
out
ficoms
sub
int
mov
jno
xchg
mov
lea
sub
lods
mov
outsl
in
testb
out
lods
and
or
cli
andb
mov
incl
xchg
fs
insl
mov
pushf
or
sbb
push
inc
lock
imul
lcall
bound
add
repnz
cmp
xchg
repnz
popa
lcall
xchg
orl
lods
aas
push
ljmp
mov
fisttpl
call
popf
fdivs
shl
lret
push
xorl
push
jmp
xor
call
test
lahf
hlt
jl
sahf
cltd
clc
add
xchg
fs
pop
jo
pop
decl
pop
ss
shl
jge
mov
or
cmpsl
das
std
inc
fsubl
test
test
pop
sbb
sub
mov
test
adcl
rclb
js
fmulp
imul
sbb
dec
lret
std
lret
sub
mov
mov
fadds
es
cmc
in
lcall
push
push
leave
xor
mov
inc
in
fbld
insl
cli
insl
cmp
jbe
aad
iret
xchg
hlt
call
push
sub
dec
dec
inc
das
hlt
js
sub
jae
je
cmp
iret
ss
or
insl
cli
into
xchg
movb
fucompp
jmp
sbb
sub
push
push
cmp
mov
fwait
mov
mov
push
call
cli
dec
ret
mov
hlt
jp
mov
inc
imulb
sbb
pop
pop
call
xchg
or
outsl
adc
adc
into
lock
out
pop
cmp
aam
adc
out
loopne
fldt
cli
cld
xor
push
pop
add
push
cmp
add
mov
hlt
stos
ja
mov
sti
mov
lret
scas
jle
fdivr
jle
mov
fimuls
add
jne
xchg
fdivrp
aam
out
clc
push
test
scas
insb
mov
shlb
cli
inc
pop
xor
adc
dec
insl
fmuls
sbb
aaa
push
pop
cmc
jge
out
fldcw
push
rep
cmc
lcall
or
push
addr16
jmp
xchg
dec
dec
mov
xorb
iret
loopne
xchg
fisttpll
xlat
jle
ret
in
call
mov
fdivrp
xchg
adc
call
sub
loop
add
clc
mov
sbb
inc
xor
or
mov
push
cmp
cld
test
pop
test
xor
inc
xor
inc
in
push
lcall
test
adc
push
and
movsl
lret
clc
arpl
inc
loop
incl
lret
cmp
lcall
imul
movsl
call
mov
aas
jmp
daa
adc
sub
rorl
adc
fwait
pop
sar
push
inc
xchg
loopne
lods
fiadds
add
dec
add
mov
xor
cmp
nop
out
push
jmp
js
in
icebp
lock
adc
loop
arpl
jmp
inc
sbb
and
in
mov
xor
xchg
aad
in
mov
sbb
add
mov
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
adc
js
dec
pop
decl
xor
cmp
pop
call
ljmp
inc
in
fdiv
lret
jbe
inc
sub
stc
leave
sub
outsl
xchg
inc
inc
mov
or
ret
inc
jecxz
push
push
mov
cmp
and
cmp
fstl
sahf
pop
mov
push
into
mov
bound
shlb
outsb
mov
cmp
incl
xor
or
js
popf
mov
pop
xchg
test
jbe
stos
xchg
aas
inc
jmp
loop
iret
paddusw
js
adc
and
fildl
mov
popf
enter
lds
incl
sahf
mov
sub
mov
movsl
mov
movsl
les
cli
imul
incl
pop
out
xlat
push
push
ljmp
inc
pop
leave
mov
dec
fisubl
test
add
mov
mov
js
call
xor
lcall
push
test
divl
add
inc
push
push
inc
mov
iret
pushl
cli
ret
push
ljmp
test
icebp
jns
cmp
lods
sub
arpl
mov
mov
out
sbb
dec
jge
ljmp
pop
in
data16
jge
xchg
adc
leave
add
pop
aas
loop
rolb
jnp
stc
mov
jo
jmp
cmp
jno
jns
ror
jle
cld
adc
mov
inc
outsb
icebp
dec
add
test
into
cmp
and
lcall
repnz
push
insb
leave
pop
xor
mov
lcall
push
stc
mov
es
insl
scas
incl
testb
inc
icebp
xor
nop
add
fs
jecxz
cmpsl
dec
pusha
xchg
orl
lds
mov
faddl
imull
dec
adc
and
scas
sbb
mov
dec
xchg
xor
mov
sti
insl
int
cltd
mov
clc
xchg
push
mov
ds
pop
inc
sbb
and
pop
sbb
mov
xchg
jb
inc
jecxz
push
mov
mov
data16
cmc
push
xchg
fwait
adc
mov
iret
dec
xorl
ja
mov
mov
mov
test
cld
imul
or
and
lock
lcall
aaa
push
lret
mov
pop
je
cld
in
popa
xchg
ret
fcmovnb
dec
enter
insb
ds
xor
or
lods
add
loopne
add
xchg
cli
addb
lcall
push
push
cmpsb
std
ret
inc
ljmp
icebp
mov
insl
lock
pop
mov
lock
mov
dec
imul
lods
jle
jle
fwait
jmp
jp
aad
push
and
cmp
push
ud0
and
jmp
cwtl
or
lea
fbstp
lods
xor
lret
sub
mov
ret
icebp
push
dec
jmp
inc
sub
adc
jne
mov
xchg
mov
es
dec
push
mov
mov
in
jg
nop
sub
ja
jmp
inc
inc
jp
ss
test
mov
fsts
jp
cmpsb
enter
dec
jmp
adc
push
andl
pop
push
pushl
jo
xchg
ja
xchg
push
popf
cmpsl
testb
insl
jns
add
in
decl
pusha
ret
sub
dec
sub
fstl
dec
xor
arpl
repz
fildll
push
out
lods
das
shll
cmp
sub
sbb
insl
cmpb
in
push
push
sub
je
xchg
adc
add
das
mov
nop
push
cs
pop
jge
sub
sbb
mov
rclb
scas
and
xchg
or
out
lods
mov
incl
mov
push
inc
mov
jge
leave
adc
scas
xchg
mov
jmp
sar
mov
mov
xchg
mov
push
pop
scas
mov
sub
mov
lahf
push
or
push
sub
insb
bound
les
or
add
subl
das
mov
decb
cli
jb
jae
push
fildll
dec
push
in
movl
mov
xchg
jg
mov
fistpl
fists
out
fs
bound
fsubl
orl
xchg
mov
inc
pop
jmp
mov
idiv
jno
ss
ret
push
test
or
cmpsb
pop
dec
test
mov
pop
aad
jmp
lea
in
lock
cmp
pop
cmp
jge
cmpsb
xor
jnp
pop
inc
divl
add
ret
cli
cli
ja
push
pop
data16
mov
xchg
jg
test
fnstsw
or
inc
jle
and
stc
push
mov
push
das
mov
sub
repnz
xor
std
stos
imul
mov
lods
ret
jmp
aaa
add
cwtl
sub
xor
adc
mov
mov
pop
icebp
inc
sarb
outsl
sbbl
push
pop
mov
lods
sbb
dec
repz
cwtd
jmp
inc
and
mov
fcmovnb
adc
cs
xchg
aad
jecxz
cmpsl
jno
lret
add
jg
insb
and
sbb
clc
das
call
and
adc
or
and
xor
mov
jecxz
mov
dec
rcl
adc
or
js
dec
inc
mov
into
inc
hlt
lea
into
mov
and
xchg
xchg
xchg
repnz
call
nop
sbb
incl
dec
decl
mov
pushl
movsl
int
inc
aam
int
cltd
push
push
or
add
ljmp
and
pushl
ds
or
mov
jmp
mov
js
hlt
jle
mov
push
pop
mov
testb
outsb
push
lret
cmp
call
push
mov
inc
pushl
out
aad
jns
icebp
in
xorb
lods
sbb
fdivrp
mov
mov
sbb
mov
decl
mov
divb
push
jl
stc
sub
push
insb
mov
pop
es
mov
xorl
dec
mov
sub
outsl
je
xchg
and
and
out
scas
sbb
dec
inc
xchg
push
loop
jno
movsl
lcall
mov
jo
lcall
out
or
cmp
jmp
call
mov
lea
pushl
mov
movsl
lcall
xor
aad
cli
mov
push
mov
insl
xchg
das
lret
daa
aaa
ja
in
or
jno
leave
push
or
add
fcmovnb
cmc
xlat
fstpl
xorl
push
sub
xchg
mov
stos
pop
adc
das
mov
inc
xor
test
mov
ss
int
mov
cltd
jg
loop
adc
ljmp
loopne
jns
lahf
mov
xlat
imul
scas
inc
outsb
push
lret
std
push
insl
addr16
iret
or
ret
das
sub
outsl
sahf
jnp
jle
inc
and
cmp
jp
jnp
fldenv
push
mov
adc
pop
ss
lret
push
mov
call
add
or
adc
jno
mov
xor
xchg
or
clc
xor
jl
lock
xchg
dec
xorb
js
insl
mov
adc
decl
imul
jno
add
in
jmp
add
idiv
cmp
aas
fmul
repz
mov
or
jmp
add
lcall
adc
or
cmpsl
and
dec
fisttpll
insl
fs
pop
lahf
dec
call
dec
imul
pushf
aas
push
push
jns
or
cli
lea
ss
jmp
sub
add
rcr
test
cld
cmp
add
lds
sub
test
add
in
lcall
lea
add
loop
outsl
call
add
cmp
mov
lcall
cmp
shll
mov
inc
jae
adc
mov
cmpsb
les
pop
fwait
mov
cmpb
xchg
sahf
pop
push
cwtl
daa
lcall
sub
adc
pop
push
push
dec
std
mov
sub
xchg
sbb
mov
flds
fnstcw
addr16
pusha
and
mov
pop
mov
xor
cli
xor
in
jg
ds
filds
inc
sub
pop
aas
and
pop
je
aaa
sub
jle
mov
push
push
mov
sub
out
aam
mov
push
aas
push
fistps
xor
mov
bound
scas
jmp
movb
sub
pop
loopne
mov
jmp
pop
adc
inc
daa
add
dec
xor
sahf
aas
jge
sbb
cmp
pop
sbb
loopne
sub
or
mov
push
cld
add
outsl
leave
fistps
imul
lret
hlt
pop
inc
shlb
dec
push
sti
decl
test
ljmp
je
xor
stos
nop
inc
push
arpl
or
ss
sbb
repz
sbb
das
push
xchg
jg
or
bound
xchg
lods
decl
push
pop
xchg
adc
incl
pop
insl
push
xor
cli
jg
mov
imul
adc
jnp
add
outsl
push
repnz
shrb
sbb
xchg
jmp
mov
cmp
cmp
mov
xchg
push
arpl
std
loope
xchg
ljmp
mov
scas
or
mov
jmp
imul
sub
call
adc
adc
leave
jns
jne
out
or
mov
loopne
pop
inc
jnp
dec
pop
add
add
ficoml
push
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
cmp
sbbl
in
inc
xchg
cld
subl
push
push
jge
out
dec
int3
mov
sti
add
xchg
dec
dec
cmp
pop
sbb
mov
xchg
into
mov
dec
clc
inc
dec
xor
mov
pushl
jl
addr16
cmpsb
mov
loopne
and
jge
mov
pop
mov
negb
push
and
push
or
aas
add
push
jmp
test
push
xchg
rcr
int
mov
sti
jmp
cld
rcl
fidivrl
pop
push
sbb
adc
lahf
incl
mov
andb
sbb
in
cwtl
mov
in
adc
call
arpl
fdivrp
lahf
aas
adc
inc
incl
jl
jns
push
incl
cmp
xor
sub
mov
clc
in
test
pop
pop
fwait
adc
stos
int3
filds
mov
loop
mov
pop
lods
mov
push
add
inc
mov
mov
adc
test
push
bound
dec
sub
jne
dec
and
shrl
sub
cmp
jae
cmpl
mov
cli
pop
adcl
daa
push
in
inc
ljmp
cmpl
jge
shl
or
or
mov
pushf
das
cmpsb
fwait
mov
cmc
pushl
ret
sub
stos
sub
std
adc
call
dec
pop
push
sbb
or
call
jecxz
repnz
sub
mov
and
std
and
outsl
popf
jb
cmpsb
lcall
or
loopne
dec
inc
mov
shl
fildll
pop
or
push
or
das
in
mov
xchg
ret
movsl
int
dec
push
sub
push
adc
jmp
dec
loop
decl
lods
xchg
mov
out
inc
std
hlt
xchg
enter
js
adc
arpl
iret
mov
adc
leave
xchg
aam
mov
pop
inc
jnp
fisttps
arpl
and
test
iret
rol
jmp
les
dec
aas
mov
mov
mov
into
hlt
lock
pop
inc
push
dec
ljmp
incb
clc
sbb
mov
sbb
out
loop
fwait
std
aas
xor
std
inc
xlat
jno
test
pop
push
incl
mov
pop
push
pushl
std
fildll
and
adc
xchg
and
and
pop
ja
jnp
dec
aam
mov
incl
data16
sub
imul
sub
out
sbbb
std
je
sbb
jns
ljmp
sub
insb
out
inc
jecxz
sbb
sub
add
jbe
lret
jo
mov
jns
dec
mov
arpl
fisttpll
test
mov
enter
call
loope,pn
cmc
aad
cmp
mov
jmp
push
mov
shll
ljmp
nop
jg
mov
push
mov
mov
scas
add
cmpsb
loopne
pop
add
jmp
sub
cmp
fsubl
xchg
popa
jmp
mov
mov
fildl
idivb
decl
mov
or
dec
add
and
pop
adc
mov
fldenv
aas
pop
sbb
adc
or
outsl
aaa
push
sub
lds
push
mov
test
jmp
aaa
mov
jg
mov
sub
ljmp
stos
stc
xor
xchg
or
std
adc
shr
push
cmp
mov
fstpt
dec
xchg
jmp
cmp
fcoml
or
gs
fbstp
jmp
pop
jp
push
cmpsl
dec
in
sahf
jl
and
mul
adc
dec
enter
jbe
cld
dec
insb
imull
outsl
inc
iret
test
cld
lahf
into
sub
pushl
dec
jo
fcmovbe
fstl
mov
mov
das
dec
cltd
cmpb
sub
idiv
data16
data16
and
fistps
cld
outsb
in
sbb
clc
xor
movsl
pop
cli
adc
push
push
pmaddwd
popf
adc
das
dec
in
loope
cmp
outsl
jge
sbb
loopne
call
mov
mov
ljmp
mov
add
incb
lds
movsb
jmp
mov
movq
cld
pop
xor
dec
sbb
cmp
mov
rcr
call
mov
ds
and
xlat
adc
jg
lds
loop
fistl
mov
jo
and
cwtl
and
orb
aad
sub
mov
leave
out
add
jno
rcll
idiv
pop
push
inc
inc
cld
inc
pop
jmp
push
sbbl
cs
pop
sub
ljmp
movsb
add
cmp
jg
xchg
outsl
inc
push
cmp
adc
negb
or
call
or
fildll
and
repnz
pop
xchg
xor
fdivrl
cmpsb
cmp
and
dec
pop
sbb
cmp
std
repnz
rcrb
call
popa
mov
mov
xor
lret
dec
fdivrp
jg
das
lock
imul
loopne
pop
dec
je
scas
hlt
and
out
fdivrs
movsl
jns
push
das
pop
adc
sub
ds
pusha
inc
std
mov
cli
xchg
jle
outsl
cmp
test
mov
lds
mov
rcl
dec
mov
mov
out
cmp
mov
scas
rclb
mov
mov
mov
xchg
daa
cmp
test
mov
loope
loop
repnz
stc
or
notb
add
pop
test
xor
add
cmp
fbstp
mov
decb
std
push
mov
loope
mov
shrl
filds
cmpsb
and
in
std
xchg
sub
popa
clc
push
cltd
ja
jne
mov
jg
sub
lds
out
fcompl
ljmp
call
jmp
pop
mov
incl
push
xchg
mov
mov
jno
mov
bound
in
push
cmp
mov
sub
cli
subb
fildl
leave
pusha
mov
add
pushf
xchg
les
stc
inc
loop
loopne
cld
adc
xchg
popl
incl
sbb
or
xchg
icebp
jg
sbb
pusha
mov
cmpl
pop
add
xor
psubd
test
imul
xchg
xor
pushl
mov
mov
jle
push
dec
call
sub
and
les
mov
scas
push
xchg
scas
decl
sub
das
mov
add
pop
jne
movsl
mov
xchg
cwtl
jno
xchg
aaa
fs
add
iret
lcall
insl
mov
cwtl
out
mov
xchg
and
cwtl
mov
int
cmp
add
pushl
push
xlat
push
je
push
sar
ja
adc
jmp
stc
fsubs
adc
sarb
loopne
mov
sti
inc
aad
xor
jge
nop
insl
icebp
jns
add
jle
push
mov
sbb
dec
iret
cmc
and
ja
push
stos
or
push
and
or
or
fdivrp
imull
out
test
inc
pop
insb
cs
and
mov
push
ljmp
pop
sar
sbb
add
cmp
lret
mov
fs
jge
test
mov
sbb
or
into
jmp
scas
push
cld
and
sub
xor
mov
or
int
outsl
mov
jmp
rorb
inc
push
shrl
push
aad
jbe
and
int
xchg
cwtl
dec
int
les
fwait
icebp
cs
call
and
jmp
fidivs
faddl
decl
scas
loope
push
jle
dec
push
hlt
or
aam
lods
mov
jg
orb
mov
mov
cmp
call
scas
cltd
pusha
cwtl
jae
aad
or
decb
addr16
jo
aaa
shrl
aas
mov
and
sahf
test
xor
xchg
mov
imul
test
mov
fstpl
lods
fbstp
lea
adc
xor
imul
sbb
inc
jno
int
sbb
js
mov
lds
push
inc
dec
xchg
pop
or
or
dec
lcall
or
or
incl
paddw
jae
call
dec
ret
push
pushl
adc
mov
mov
fldl
call
lods
jmp
icebp
sub
test
xor
inc
fisubs
adc
pushl
insl
jmp
sbb
call
add
cmpsl
ljmp
leave
fildll
sub
adc
sahf
jge
xor
and
clc
mov
insl
cwtd
incb
lret
xchg
rorb
lret
incl
push
rclb
sub
xchg
scas
push
nop
lock
push
push
push
jae
cli
add
repz
cld
pop
mov
xchg
pushl
add
call
add
sbb
mov
cld
out
xchg
mov
into
cmp
fdivp
sbbl
ja
lret
sub
mov
add
fs
movsl
fdivr
repz
mov
mov
and
cmp
fisttpl
pusha
ljmp
mov
aas
add
jmp
std
adc
mov
arpl
call
mov
in
enter
dec
ds
lahf
mov
dec
cld
aad
push
sti
lea
clc
outsl
jecxz
pop
mov
mov
add
adc
or
dec
jmp
mov
cwtl
lcall
and
mov
inc
das
ret
lcall
push
xchg
ffree
xchg
das
inc
aas
pushl
jne
pushf
pop
dec
adc
fistpl
scas
into
dec
jmp
cli
stc
mov
stc
add
jmp
mov
data16
stc
cmp
push
incl
out
pop
mov
sub
jmp
stc
push
lahf
jne
insl
lcall
or
leave
jge
mov
clc
xchg
jmp
or
inc
leave
in
and
xor
rolb
pop
orb
adc
xchg
sar
inc
sub
out
add
mov
xor
xchg
gs
cs
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cli
cltd
adc
push
fsubrs
stos
xor
mov
xchg
mov
push
inc
mov
shll
ljmp
xchg
inc
and
roll
std
push
pusha
cmovs
bound
dec
movsl
les
hlt
inc
mov
push
ret
shrb
lret
fstps
pop
dec
push
mov
dec
cmp
inc
push
fiaddl
decl
mov
shl
cmp
pusha
incb
mov
out
adc
cmp
cmp
sarl
pop
dec
sar
iret
fstps
sbb
jg
jbe
dec
pop
mov
or
lock
and
cmpsb
push
adc
es
cmp
inc
adc
pop
fcoml
mov
test
sbb
inc
sar
loope
adc
mov
ljmp
mov
jb
sbb
xchg
mov
lods
inc
test
cmpsb
xorb
lcall
subl
incl
aad
sbb
ret
mov
adc
lock
dec
push
pop
inc
out
clc
mov
xlat
cmp
mov
mov
std
fdivr
xchg
or
repnz
inc
cmc
cmp
js
or
mov
and
push
mov
mov
inc
push
xor
arpl
mov
add
add
jmp
bound
idiv
adc
lods
inc
shll
outsb
dec
cmp
push
fcos
xchg
insl
mov
das
call
xchg
cltd
pop
decl
sub
and
cmp
push
cmp
cmp
pop
incl
shl
mov
sbb
jecxz
inc
inc
sub
push
push
sbb
adc
push
inc
or
pop
pop
int3
lods
xchg
aas
adc
add
aaa
push
inc
push
cli
xchg
and
add
lahf
xchg
push
jmp
push
arpl
imul
ds
ret
xchg
jg
scas
jl
sub
add
jb
pop
aaa
incl
icebp
or
iret
js
lcall
add
and
daa
out
or
out
pusha
add
int3
cltd
xlat
jne
mov
daa
inc
push
aaa
incl
cli
push
shufps
or
ja
adc
xchg
jnp
out
movsl
call
pop
cld
in
clc
or
movsb
js
jp
mov
jle
ret
mull
push
shrl
clc
jae
pop
fdivrl
call
xchg
sahf
decl
pop
jnp
inc
inc
pop
ds
mov
dec
pop
sbb
xor
mov
mov
sar
adc
repnz
mov
sbb
decl
dec
rclb
xor
push
fdivr
lea
sub
movsb
loope
inc
cmc
gs
outsb
outsl
out
outsl
lcall
or
dec
lret
add
mov
loop
push
cld
ret
pop
cmp
movb
pop
std
insb
int
fcompl
mov
xchg
lds
push
xchg
mov
or
jb
mov
movsl
fs
out
push
adc
inc
push
outsb
dec
dec
pop
push
mov
inc
fwait
dec
or
es
mov
xorl
jae
mov
mov
rorl
cmp
and
mov
xchg
js
fldl
jp
outsb
mov
in
mov
jae
movsb
call
mov
dec
dec
stc
pop
push
jmp
and
push
mov
mov
jmp
pop
scas
mov
mov
pushf
xor
jle
pop
mov
or
loopne
mov
push
inc
cmp
ljmp
jecxz
je
push
mov
in
push
and
lds
mov
pop
js
std
inc
xchg
mov
add
incl
sti
cwtl
jmp
pop
push
inc
ds
mov
jmp
enter
inc
repnz
stos
nop
std
addr16
aas
mov
mov
jle
mov
dec
enter
dec
push
adc
dec
aas
incl
fldt
lahf
push
mov
shl
cmpsb
pop
jmp
jmp
jmp
ljmp
arpl
cmp
mov
jne
fucom
std
cmp
sbb
das
loop
hlt
xchg
cmp
push
mov
cmp
call
enter
lock
sub
cmp
test
mov
pop
ds
lret
sub
push
add
cmp
repz
mov
push
ret
aam
sub
fildl
mov
mov
adc
dec
mov
push
xor
xchg
testb
ljmp
mov
mov
add
in
adc
cmp
jb
jne
out
push
sar
imul
sub
mov
cmp
imul
and
imul
pop
loop
pop
xchg
jmp
add
gs
xchg
adc
std
cmp
pushf
pop
mov
add
scas
call
mov
xchg
jg
push
fiadds
push
jg
add
imul
cmp
mov
xor
xchg
sub
inc
cmp
jo
push
push
sbb
mov
xchg
mov
cmp
ljmp
cmp
dec
out
hlt
sub
out
mov
xchg
sbb
cmc
push
mov
xchg
das
adc
sbb
mov
cmpsb
bound
xchg
sub
push
ljmp
push
jmp
ja
or
dec
inc
mov
jle
push
cli
mov
pop
popl
jg
je
aaa
fbld
pop
insl
cmp
gs
das
cmp
inc
ljmp
rcll
sub
sub
cld
xchg
push
mov
or
pushl
xchg
mov
call
dec
jnp
inc
fsubl
jge
fwait
jmp
je
js
ljmp
ljmp
stos
stos
dec
aad
call
sbb
adc
push
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
jecxz
int3
push
xchg
and
jge
imul
mov
push
cli
fnstcw
leave
fstp
scas
imul
push
cltd
push
adcb
pop
loopne
dec
jge
test
fdivs
jbe
ss
icebp
sub
sbb
fistps
in
dec
pop
pop
std
dec
and
sahf
mov
ljmp
aaa
sub
pop
add
iret
lret
loopne
mov
repz
lock
incl
ret
fisubrl
or
pop
mov
fs
rol
mov
loopne
xchg
sbb
add
pop
mov
mov
lods
ror
push
xchg
xchg
faddp
sub
pushl
insl
or
pushf
xchg
mov
mov
inc
pop
ja
lods
lahf
jmp
inc
jns
cmpsl
imul
mov
cld
ljmp
jp
mov
ss
call
jl
cmp
mov
das
test
inc
jl
bound
xor
cmpsb
lret
negb
or
gs
ljmp
bound
sub
push
fldenv
pop
adc
pushf
cli
in
cmp
das
mov
addr16
mov
mov
lcall
jb
dec
iret
repnz
mov
scas
jmp
adc
insl
idivb
decl
adc
leave
ljmp
fdivp
dec
out
mov
jns
or
pop
ljmp
clc
insb
xchg
sub
ljmp
mov
fcmovnu
lea
lahf
repz
push
jl
push
gs
incl
mov
addb
pop
sub
pop
jg
xor
pop
outsb
mov
xchg
xchg
repz
fldt
ljmp
decl
jno
cmp
mov
inc
aad
pop
cmp
call
xchg
iret
cld
mov
and
call
aas
arpl
cmp
adc
pop
dec
enter
push
inc
push
shrl
out
lcall
mov
lods
and
xchg
fsubs
add
jp
jp
ljmp
cmp
dec
call
pusha
sbb
test
std
enter
mov
mov
jmp
dec
icebp
repz
pop
sub
je
loope,pt
push
call
out
mov
arpl
ljmp
pop
cmp
sub
leave
loope
cmp
sbb
jmp
jbe
test
ret
cwtl
aas
mov
or
fistl
sbbb
in
sub
sub
mov
dec
jge
fs
into
pop
mov
push
call
popf
sbb
and
out
dec
clc
cmp
or
mov
int
dec
leave
ljmp
add
mull
cs
pushl
push
out
sbb
pop
scas
call
mov
mov
mov
jge
out
sarl
shl
mov
aad
xor
jg
arpl
aad
dec
jmp
sub
mov
ljmp
lcall
add
lahf
pop
sub
outsb
pop
cld
das
enter
push
xor
mov
out
rclb
adc
stos
stos
jae
ljmp
inc
pop
push
enter
jmp
pop
mov
sbb
or
aaa
pop
pop
callw
hlt
out
ljmp
loop
push
ljmp
adc
jmp
jg
js
addb
pop
scas
je
mov
fstpl
jnp
scas
mov
jae
jl
add
adc
incl
test
mov
and
cli
push
scas
inc
xorb
test
jg
mov
cmp
stos
test
mov
xchg
mov
mov
mov
lret
in
call
pop
faddl
jmp
aas
lcall
int3
or
pop
mov
cmc
dec
push
lretw
stos
sbb
pushf
lahf
lock
push
pushf
mov
in
mov
cs
aaa
imul
cmp
pop
loop
xchg
rcrl
xlat
xchg
scas
xorb
imul
ret
sbb
push
call
inc
lret
mov
aaa
mov
iret
jmp
jg
popa
sbb
mov
mov
pop
adc
roll
pop
out
ljmp
xor
adc
adc
call
push
mov
mov
xchg
pushl
rclb
push
outsb
ljmp
or
out
mov
xor
jnp
int
jmp
ljmp
mov
fmull
pushl
dec
scas
mov
pushl
cltd
xchg
clc
jnp
xchg
and
mov
sahf
sbb
cli
dec
mov
inc
loop
mov
lcall
ljmp
out
cmp
scas
fildll
loopne
ljmp
test
push
jae
sbb
mov
decb
inc
xchg
lahf
xchg
add
loopne
arpl
mov
jg
imul
dec
cld
xchg
lret
testl
mov
pop
inc
cmpsl
loop
lcall
push
cli
fsubs
addr16
clc
sbb
dec
add
scas
pushl
popa
push
icebp
pushl
in
lock
jge
sarb
push
inc
mov
add
stos
lods
mov
aaa
pusha
outsb
cmp
add
jb
fst
mov
fbstp
jne
fnstsw
add
mov
gs
xchg
fildl
cmp
daa
into
lock
mov
outsl
inc
lea
cmp
adc
and
or
data16
mov
inc
mov
xchg
fs
adc
xchg
xor
mov
repnz
or
push
call
mov
adc
dec
push
add
add
mov
movsl
pop
imul
sub
addr16
pop
pop
jmp
lcall
xchg
or
or
mov
jne
dec
jnp
pop
dec
stos
cwtl
mov
movaps
push
mov
dec
pop
fdivp
add
cmc
fistpl
xor
mov
in
ljmp
xor
mov
adc
xchg
xor
cmp
dec
std
imul
aam
mov
push
mov
mov
adc
cmp
jg
add
mov
adc
push
pop
and
jl
mov
out
fsubs
mov
mov
sub
mov
cmp
adc
push
dec
addr16
mov
sbb
cwtl
xor
jno
mov
pop
inc
inc
leave
push
sbb
inc
pusha
ljmp
mov
mov
mov
mov
dec
inc
ret
jmp
mov
push
mov
xor
push
fdivl
pop
mov
mov
push
decl
push
movsb
jb
setg
jge
insl
mov
add
lcall
pop
fldenv
cmp
iret
add
cmp
out
movsl
insb
xchg
jb
leave
sub
inc
xchg
and
cmp
fs
int3
call
jg
mov
fdivr
sub
addl
outsb
flds
inc
jecxz
sbb
jg
sbb
mov
sti
xor
adcb
call
or
add
iret
xchg
mov
pop
icebp
cs
inc
ljmp
lcall
int3
cmc
cmp
pop
cmp
xor
jb
iret
xor
adc
jge
xchg
sbb
fcomip
shll
movsl
and
incl
shlb
jecxz
jp
jo
xorl
sbb
cmp
out
cmp
xchg
mov
in
inc
dec
xchg
lret
pop
dec
push
lcall
push
iret
in
xor
push
ret
cmc
fisubs
shlb
negb
stc
shlb
push
in
data16
fcompl
adc
inc
adc
xchg
cmc
fists
push
xchg
ja
mov
pop
mov
loop
in
mov
mov
inc
dec
cmp
jmp
lods
mov
xchg
pop
lret
decl
ja
sub
sub
sub
addr16
xchg
cmc
xor
jbe
or
int3
jbe
data16
incl
or
js
mov
in
call
ljmp
mov
sar
ljmp
iret
pushl
or
and
push
adc
cmp
leave
jns
xchg
sub
ret
jmp
add
cmp
incl
repnz
mov
mov
cltd
pushf
lea
int3
mov
and
sub
imul
into
push
outsl
mov
jmp
push
mov
push
jp
jns
xchg
cmc
add
fdivr
add
cmpl
stos
jmp
sub
fistpll
outsl
xchg
test
sub
rorl
cmpb
shll
mov
push
decl
out
push
lcall
mov
or
lret
jecxz
push
ljmp
cli
push
popa
adc
mov
fsubs
pop
pop
and
inc
mov
adc
incl
out
push
call
sbb
daa
es
jle
incb
pop
pop
out
jo
adc
add
dec
cmpsb
add
fsts
rcrl
stos
aad
pop
incl
xor
orl
iret
lea
push
xor
xchg
call
je
jmp
scas
adc
decl
aas
in
dec
mov
pop
inc
xor
jae
jge
data16
sbb
out
dec
data16
xor
dec
pop
call
mov
fdivrp
out
lock
dec
stc
mov
movb
and
in
imul
pusha
imul
aad
test
pop
pop
shll
and
cmpsb
push
mov
in
jecxz
sub
out
push
and
scas
lret
decl
pop
cmp
adc
pop
call
test
imul
ljmp
inc
lea
stc
aad
jecxz
decl
xorl
sbb
fs
outsb
shlb
push
sbb
lcall
xchg
outsb
cmpsl
pushf
int
cmp
outsl
iret
js
jbe
mov
call
mov
decl
or
or
xchg
or
dec
sub
mov
cmp
negb
dec
xchg
movsb
incl
add
fsubrl
cwtl
push
mov
fists
cmp
aam
xchg
imul
push
xchg
mov
movq
mov
mov
stc
popf
xlat
inc
fistl
aas
loope
adc
inc
push
cwtl
xchg
inc
sbb
cld
jmp
jg
nop
in
mov
insl
scas
pop
push
std
push
jmp
cs
jo
loop
addb
mov
test
clc
sbb
inc
add
dec
in
testb
inc
call
les
loopne
add
nop
fimuls
jmp
js
pop
jp
addr16
stos
insb
sahf
std
scas
leave
adc
mov
outsl
stos
loopne
push
and
push
lods
cmpsb
xchg
xor
or
in
int3
sub
cmpsl
cmp
loopne
sub
mov
call
lcall
pushl
out
outsl
pop
and
out
je
mov
pushl
testb
pushl
or
push
cmp
movsl
jns
sub
cmp
mov
mov
sub
adcl
imul
and
pushf
fcoms
cmp
das
cs
adc
push
jmp
push
xchg
lock
jne
or
or
jge
shrb
jmp
pop
mov
jp
add
dec
jno
or
inc
dec
mov
aam
push
pop
xchg
mov
dec
pushl
xchg
out
lcall
mov
jmp
je,pn
testl
and
mov
mov
mov
and
sbb
stc
ljmp
shll
inc
loopne
sub
jge
js
sub
mov
subl
cmp
push
fiadds
mov
sbb
jmp
dec
or
jg
test
out
pop
inc
mov
inc
cmp
xor
ficomps
stos
popa
jmp
out
push
stos
js
jle
and
cmp
into
in
mov
js
adc
mov
pop
adc
arpl
movsb
incl
pop
jae
dec
fs
ljmp
inc
or
loop
mov
xlat
fiadds
dec
pop
lea
add
loop
sub
test
incl
cmp
xor
js
call
in
fwait
jmp
jmp
xor
lcall
ror
arpl
test
call
mov
jnp
insb
stc
dec
xchg
idivb
dec
aas
call
fisubrs
mov
xor
inc
insl
xchg
mov
adc
mov
aaa
rorb
mov
sti
push
push
iretw
icebp
jmp
push
inc
lcall
das
inc
cmp
jb
int3
cli
push
cli
fcompl
mov
adc
mov
insl
xchg
add
pop
add
jns
incl
js
jmp
mov
loopne
rcll
sbb
sub
cmc
decl
jle
pop
jmp
pop
cmp
pushl
enter
insl
push
xchg
subb
pop
std
inc
repz
repz
jl
xlat
decl
gs
cmp
jmp
push
lret
iret
jle
leave
nop
ret
cmp
and
jae
test
push
outsl
mov
mov
adc
push
loopne
cmpsb
ljmp
cli
xchg
into
dec
cmc
insl
push
jg
and
sub
push
call
ds
inc
stos
or
mov
aas
push
mov
sub
jae
fmul
dec
cmpl
imul
sub
decl
cmp
js
jnp
cmp
push
pop
repnz
lcall
sahf
out
scas
mov
lret
xlat
pop
push
inc
icebp
ljmp
cli
mov
aam
jmp
popf
out
cltd
adc
insl
test
pop
xchg
dec
inc
cmpsl
decb
dec
pop
xor
xchg
pushf
add
mov
sbb
or
pop
dec
jg
mov
adc
ror
hlt
xchg
and
jb
iret
adc
jnp
icebp
loope
xor
and
dec
ljmp
mov
pop
dec
mov
mov
je
or
cmc
shrl
dec
adc
arpl
int
push
cltd
incl
and
inc
sub
loope
call
mov
xor
sbb
jmp
pop
shr
in
and
clc
dec
inc
dec
inc
fildll
inc
pop
arpl
jb
mov
shll
xorb
and
fstps
mov
xor
mov
cmp
cmpb
xor
xchg
mov
dec
std
mov
cmp
push
insl
sub
loop
sub
mov
cmp
adc
mov
xor
std
jno
dec
ficoml
pop
test
xorb
adc
nop
fnsave
inc
lret
adc
ss
movsl
lcall
in
gs
jl
jl
adc
sbb
pop
push
lea
and
into
xchg
fcoml
cli
arpl
mov
sbb
pop
lahf
and
or
and
sub
mov
pop
ds
jae
push
enter
xchg
pop
jns
nop
xor
add
jbe
mov
rcll
jecxz
pushf
sub
imul
add
mov
scas
fld
fprem
mov
aaa
mov
sub
and
pop
sbb
mov
lcall
clc
sti
jl
insl
gs
outsb
repz
sahf
shll
imul
adcl
sub
iret
cmp
inc
push
dec
or
or
jmp
push
test
xchg
out
push
inc
push
jmp
shrl
in
ljmp
jne
mov
lcall
mov
outsb
daa
dec
mov
adc
mov
push
and
xor
push
insb
sbb
inc
add
dec
inc
mov
push
sbb
push
shl
sbb
sar
jno
out
inc
and
test
das
cli
mov
shl
rcrb
jns
addr16
add
or
mov
push
mov
ss
mov
mov
test
jb
mov
sbb
jmp
mov
fisubs
stc
loope
in
cmp
out
sti
incl
jnp
outsl
push
cwtl
incl
jle
or
add
call
sahf
add
decl
pop
xchg
sti
popf
movups
pop
aam
shlb
xchg
sarl
xor
mov
out
jg
sub
push
mov
fbld
pop
scas
mov
out
aas
mov
pusha
mov
mov
je
sbb
pusha
repz
mov
mov
mov
cmpsb
cli
xchg
xor
test
push
xor
sbb
jge
es
xchg
hlt
xorb
cmc
push
repz
andb
out
mov
ds
mov
jecxz
scas
and
hlt
stos
or
das
mov
out
ss
mov
sbbl
add
test
adcb
std
inc
sub
incl
idivl
jns
sti
pop
pop
aas
and
mov
fldln2
ja
ffree
lcall
mov
call
int3
movsb
out
xchg
int
aad
cmp
mov
push
push
je
int3
rcll
mov
pop
mov
inc
mov
push
ret
test
out
lahf
xchg
add
ficoml
and
sbb
push
cmpl
ret
lahf
sar
or
xchg
pop
pop
scas
or
jp
push
xorl
movsl
test
ljmp
pop
test
xchg
insl
dec
add
cmp
inc
adc
sbb
xlat
jg
out
mov
mov
out
incl
dec
or
push
mov
dec
ja
jae
or
lds
pushl
es
scas
mov
sbb
jb
cmp
hlt
std
popf
sti
aas
lcall
lods
inc
ja
ds
lcall
or
decl
mov
stos
test
inc
pop
jne
xor
dec
xor
sbb
loop
mov
fbstp
imul
mov
outsb
inc
enter
call
clc
jbe
imul
jmp
cli
ficoms
mov
ret
dec
outsb
fmull
jbe
jbe
pushf
xchg
stos
jl
mov
dec
aas
sbb
jmp
cmc
push
mov
aaa
mov
and
lds
dec
push
inc
decl
xchg
shll
or
xorb
pop
sbb
out
add
add
and
outsl
xchg
adc
loop
adc
and
jno
sub
dec
aad
sar
mov
int
lret
mov
inc
aad
out
sbb
inc
es
inc
daa
xor
xlat
sti
aas
lods
push
or
sbb
lret
push
imul
incl
iret
scas
nop
mov
mov
test
cmpl
cmpsl
sti
mov
je
leave
insb
insl
sbb
mov
insl
push
xchg
jae
call
shl
jmp
mov
mov
jmp
lcall
fnstcw
movsb
mov
add
aam
pop
mov
push
sub
pop
jle
decl
cmp
ljmp
roll
sti
shll
mov
push
jns
stos
or
push
mov
outsl
stc
jmp
cltd
jl
xor
mov
pushl
jne
subl
xor
sarl
movsl
mov
jmp
jecxz
xorb
jg
push
jle
outsl
pop
lcall
cltd
aam
push
popf
loopne
pushl
lods
mov
fbstp
icebp
popf
jmp
add
push
xor
and
push
test
jle
mov
adc
add
movsb
cli
adc
shrl
and
pushl
or
push
movsl
dec
in
clc
mov
xchg
add
mov
insl
ja
mov
repz
xor
lods
sbb
aas
call
repnz
aam
incl
pop
push
lcall
loopne
mov
js,pn
out
inc
aad
mov
aaa
mov
addb
add
or
push
sub
icebp
pop
imul
jge
inc
pusha
pusha
mov
dec
lock
jmp
out
test
pushl
fs
sahf
idivb
push
mov
xor
sbb
push
or
in
adc
cmp
es
dec
cmp
call
cmp
lcall
mull
je
mov
xchg
inc
jmp
lea
push
jb
incl
adc
cmpsb
jp,pn
fsubrp
jmp
mov
popa
jns
popf
clc
fcmovne
and
or
mov
jno
or
mov
pop
mov
or
movsb
xor
and
arpl
jle
test
shrb
or
addb
sub
shrb
stos
das
lcall
inc
jg
dec
lahf
std
call
sbb
pushl
mov
daa
and
xor
dec
push
mov
jbe
ja
mov
cld
cld
out
jl
push
sahf
lret
jge
call
xchg
sarb
cmp
call
ss
das
xor
jl
add
xchg
dec
lea
js
sarb
test
insl
mov
lea
lcall
cmp
mov
xor
pushl
iret
lds
push
test
clc
fcmovne
mov
in
dec
cmp
mov
mov
or
call
jge
inc
loopne
pop
fcmovu
sub
pushl
jmp
movsl
mov
mov
decl
rol
mov
cmc
aas
incl
inc
cmp
imul
test
jb
pop
testb
lcall
dec
mov
dec
pushf
pop
push
pop
cli
cmpsb
xor
lahf
push
add
bound
sub
ds
sub
mov
or
movsl
cli
mov
cli
inc
pop
sub
das
mov
fcompl
xor
mov
push
mov
incl
mov
test
icebp
inc
jns
mov
inc
push
loop
lahf
push
sub
mov
and
sub
daa
fists
jb
das
inc
rorb
and
lcall
vcvtss2sd
les
decl
test
xchg
fldcw
xor
xor
sti
add
outsb
mov
mov
fsubl
ja
loop
jle
lcall
push
pop
xchg
jmp
lahf
call
out
xchg
mov
pushl
fldcw
lcall
les
or
stos
jb
or
add
test
and
cmp
adc
sub
mov
pushl
xchg
xor
sbbb
imul
sbbb
adc
xchg
orl
fimuls
and
loope
jl
sub
or
neg
add
dec
jmp
stos
imul
rcll
popa
sti
jle
gs
or
mov
ror
xor
adc
stos
mov
xor
push
adc
dec
pop
shlb
gs
mov
cmp
dec
mov
arpl
movsb
and
les
dec
dec
jecxz
adc
mov
mov
clc
sahf
xchg
rolb
xor
clc
xor
iret
mov
mov
add
sar
push
icebp
mov
lock
pop
pop
insb
mov
decl
out
push
jge
icebp
jmp
pop
mov
mov
cli
jle
jle
pushl
cmpsl
daa
inc
mov
mov
mov
imul
mov
push
fucom
pop
insb
add
pop
add
mov
scas
dec
xchg
cltd
aad
pushl
jle
xor
in
xchg
jl
ret
inc
insl
pushl
adc
popa
xchg
add
ret
jecxz
jle
cld
mov
sub
and
or
mov
mov
pop
mov
dec
adc
ljmp
cmp
add
add
pop
cmpsl
lods
dec
rorl
enter
sub
jl
std
mov
movsl
test
int
cltd
xor
jmp
xor
push
xchg
movsb
mov
ljmp
jne
mov
inc
and
dec
push
jmp
pop
mov
mov
shlb
pop
ret
ljmp
push
sub
adc
sahf
adc
lea
decl
movsb
jge
jo
jg
pop
rcr
sbb
mov
loopne
or
mov
outsl
sbb
lock
insl
fistpll
decl
jae
outsl
pushl
or
sub
jne
pop
mov
dec
jp
sbb
push
mov
arpl
adc
ret
mov
mov
ljmp
outsb
dec
lahf
popf
lret
push
insb
icebp
andl
mov
das
pop
or
jecxz
jg
mov
xchg
jp
clc
fstps
and
stos
or
pop
ret
sbb
adc
adcb
incl
loop
fs
push
int
pop
mov
ret
pushf
adc
ljmp
mov
jmp
call
jns
sbb
sbb
idiv
ja
pusha
mov
incl
push
inc
and
pushl
sub
std
out
jb
out
mov
sbb
call
test
call
rcrb
jmp
sub
js
out
mov
addr16
mov
dec
sub
aas
test
je
lods
xchg
jmp
cmp
mov
js
and
xchg
sarl
sahf
je
mov
lcall
decl
fildl
cmp
movsl
push
notl
and
cmp
push
leave
jno
mov
mov
mov
pop
cmc
sub
mov
call
fwait
mov
mov
popa
push
aaa
lcall
cmc
push
cmpl
mov
icebp
jbe
pop
adc
or
or
out
jae
movsl
jbe
dec
je
xchg
test
sbb
pop
shl
lret
sbb
aaa
or
shl
jmp
jge
and
push
rol
in
test
mov
cmp
jb
fmull
incl
lods
push
aaa
enter
push
inc
call
shlb
mov
arpl
rcrb
fcomp
incl
scas
cmpsl
lret
cmpsb
incl
mov
mov
pop
push
jmp
into
mov
xchg
ret
loopne
mov
imul
add
mov
lcall
fbstp
je
sti
aaa
xchg
pushl
and
cmpsl
pop
sub
xor
lret
sahf
in
add
inc
out
orb
movsl
cs
mov
sbbl
fcmovnb
imul
mov
mov
fstpt
je
ljmp
inc
lcall
in
loopne
inc
test
jmp
and
cmpsl
je
cmp
pop
and
pushl
sbb
inc
cmp
in
mov
pop
dec
mov
rclb
into
adc
inc
inc
mov
data16
loope
add
movsl
jg
push
mov
cmp
fbld
xchg
mov
mov
push
push
pushf
xchg
call
leave
push
ja
negb
in
push
jne
jmp
shl
pop
cmpsl
outsl
or
pop
pop
mov
cmpsl
adc
call
mov
cmpsb
xchg
mov
xlat
lods
incb
or
adc
pop
fidivs
pop
mov
call
imul
out
add
push
fmull
punpckhbw
in
inc
fsubs
mov
pushf
push
movsb
fisubs
test
daa
pop
cmp
sub
loop
push
mov
sub
adc
mov
es
mov
pop
das
js
outsl
inc
fnstsw
mov
inc
sti
adc
pushf
ret
xor
fstpl
mov
jb
or
ljmp
outsb
fisubrl
mov
jns
pushf
gs
dec
jle
add
sub
jnp
das
push
aas
add
bound
mov
mov
mov
pop
enter
repnz
loope
iret
mov
das
mov
cmp
xor
add
jb
outsb
mov
mov
fdivr
popa
out
psubsw
pop
jnp
cs
repnz
cmp
mov
or
push
push
xchg
ds
dec
or
outsl
or
pop
hlt
mov
add
jl
ljmp
push
mov
lods
cmp
ja
nop
push
cmp
adc
stc
xor
leave
jmp
and
jnp
adc
hlt
mov
shrb
sbb
jmp
mov
inc
ficoml
lock
adc
pushl
pop
push
arpl
in
dec
std
xor
sti
sbbl
add
jle
mov
sub
cltd
mov
imull
mov
nop
or
movsb
ja
or
lret
inc
daa
shrl
pop
push
shll
clc
jne
cmpsl
nop
fists
call
adc
arpl
cld
ljmp
insb
sbb
test
adc
out
jmp
cld
mov
idiv
pop
leave
xor
lods
mov
pushf
aad
pushl
adc
call
cltd
sbb
repz
dec
xchg
push
push
movsb
icebp
or
push
xor
adc
icebp
popa
sbb
push
sbb
cmp
bnd
pop
gs
cs
mov
idiv
sub
add
jg
push
nop
in
mov
lcall
jne
sahf
fimuls
sbb
pop
inc
add
incl
out
stos
std
rcrb
mov
adc
fcmovbe
pop
push
es
mov
dec
xor
lahf
lea
sbb
xchg
fisubl
pop
dec
sbb
mov
divl
call
jge
dec
sarb
aad
push
jmp
shrl
out
sub
or
pop
push
outsl
loop
push
incl
xchg
outsl
lock
jmp
push
ss
xchg
sub
mov
jle
or
test
mov
insb
inc
pushl
cmpl
cs
lahf
inc
pop
cmp
mov
imul
fildll
ss
clc
outsb
push
rclb
pop
std
sbb
push
mov
sbb
jp
les
mov
xor
mov
sbb
repnz
fistpl
rcll
stos
out
repz
xchg
call
test
pushf
sub
mov
and
jne
sahf
add
add
lods
cmp
inc
shr
adc
or
rcl
mov
xor
sub
xchg
pop
ljmp
cmp
dec
adc
push
call
xchg
cmp
mov
lods
daa
call
mov
mov
scas
add
dec
decl
jle
decb
xlat
movsb
jmp
pop
mov
ljmp
aam
and
leave
jg
frstor
xor
fimuls
sub
add
fcompl
shl
mov
lcall
add
int3
inc
and
jmp
or
sbb
xor
fldt
int
push
push
test
adc
push
pop
mov
sahf
jmp
int
mov
cltd
lds
hlt
int3
addr16
mov
pop
adc
mov
sbb
aam
in
and
pop
push
hlt
lcall
test
adc
aam
shl
or
decl
jg
sahf
jmp
scas
inc
call
cmp
lds
ljmp
das
stc
dec
iret
fwait
xor
decl
aas
fadd
mov
sbb
xor
dec
out
mov
mov
adc
stos
push
push
mov
lret
cmpsl
movsl
xchg
pop
dec
sbb
ljmp
sbbl
aad
mov
movsl
inc
mov
ss
insb
xchg
push
sbb
scas
idiv
push
xchg
out
pop
aaa
mov
jbe
pop
pop
mov
inc
mov
mov
in
lahf
cli
ljmp
adc
add
jmp
mov
sbb
imul
and
mov
mov
pop
xor
movsbl
test
insl
and
push
mov
lret
ljmp
sbb
out
ljmp
add
aaa
test
gs
mov
fistpl
sbb
mov
cmp
adc
sarl
jb
jmp
jl
pushl
mov
adc
das
push
stos
pop
push
stos
enter
jnp
sarb
mov
out
adc
incl
pop
push
xchg
jmp
fwait
roll
fisttpll
incl
xchg
mov
push
data16
das
dec
cmp
mov
call
push
ret
int3
dec
dec
xor
xchg
lcall
cld
mov
or
nop
pushl
imul
pushf
jle
jmp
mov
out
pushl
or
push
mov
cmpsl
inc
mov
sbb
incl
fs
cwtl
call
jns
jbe
mov
adc
shlb
ud2
dec
mov
cld
loop
pop
inc
push
divl
mov
inc
call
loop
cli
xchg
test
aaa
or
lock
mov
std
pushl
lcall
adc
mov
lret
xor
sbb
or
jmp
cwtl
jle
jmp
mov
roll
call
es
test
and
ljmp
push
cmpsb
lcall
inc
lock
data16
in
sub
out
in
and
dec
inc
test
jg
int3
lahf
mov
jg
addr16
cmp
jnp
incl
sub
cmpsb
lcall
push
movsl
mov
or
je
das
dec
arpl
icebp
push
jae
xor
aaa
aas
push
clc
mov
or
repz
push
lahf
in
ds
mov
jmp
fsubrs
sbb
jmp
add
lods
in
filds
outsl
mov
mov
jl
add
hlt
mov
fdivs
sbb
xchg
mov
sar
sti
lds
cmp
jecxz
inc
repz
jl
cmovo
rcl
fidivrs
fsubs
xor
jno
fnstcw
inc
xor
cmp
mov
sub
push
pop
outsb
and
sbb
cltd
loopne
xchg
imul
mov
or
jmp
mov
jne
push
pop
or
or
jmp
js
pop
bnd
mov
sbbb
mov
mov
and
push
inc
rol
cmpl
outsb
add
xchg
aas
mov
cmp
and
xchg
and
shrl
mov
ljmp
push
jmp
and
nop
iret
cmp
inc
cs
push
das
sub
mov
push
rcr
aas
sbb
out
mov
pop
popa
push
cmp
cmp
sbb
cmp
sub
and
repnz
dec
and
ret
scas
sar
jecxz
cmp
push
and
clc
call
stos
mov
jge
ja
sbb
inc
xorb
or
jne
inc
enter
sbb
in
dec
cmpsb
fnstcw
aad
xchg
mov
fmuls
xor
loope
ljmp
xor
sbb
fs
pop
out
pop
pop
pushl
adc
push
outsl
imul
jecxz
lock
and
iret
push
inc
cld
mov
call
xor
mov
jmp
inc
lcall
scas
pop
je
gs
mov
xor
cmc
icebp
cmp
pushf
jmp
ret
not
mov
add
outsl
incl
in
pop
jmp
xor
arpl
xchg
lcall
sti
sbb
lret
scas
sbb
push
pop
jb
xchg
mov
push
pop
sub
addr16
pop
clc
fimuls
push
xor
mov
jl
in
cmpsl
add
pop
mov
daa
mov
mov
iret
xor
test
cmp
ljmp
mov
or
lahf
dec
add
call
add
xor
test
cmpsb
in
mov
gs
and
sbb
in
pushl
add
sbb
push
cmp
mov
loope
mov
adc
push
push
sarb
or
bnd
das
rcl
pushf
movsl
sub
lret
push
mov
jmp
out
mov
cmp
stos
push
les
mov
mov
cli
inc
xor
test
aaa
es
cmp
mov
dec
stos
ficomps
push
sub
xor
cs
mov
add
sbb
cmp
add
dec
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
push
frndint
adc
jae
ret
dec
mov
incl
in
ret
loopne
imul
shlb
adc
test
xchg
jg
ss
das
xchg
rolb
push
cld
ret
mov
outsb
imul
das
dec
jo
repz
xchg
mov
mov
enter
ljmp
scas
rol
adc
add
test
xchg
and
rolb
adc
movsb
push
jae
mov
decl
aas
or
cmc
dec
xchg
incl
cmpsb
iret
jmp
imul
jg
inc
adc
into
dec
xor
push
cmp
push
sbbb
inc
jecxz
mov
mov
xor
or
push
mov
iret
jns
xchg
mov
mov
call
cs
mov
jns
stos
jmp
jge
movsl
out
outsl
andb
mov
dec
adc
fldl
sub
ss
sub
jecxz
hlt
dec
mov
add
jg
in
xor
jle
mov
adc
pop
sub
jle
inc
and
out
ljmp
sbb
les
inc
pop
or
fcomip
mov
dec
inc
mov
xchg
push
cmp
jle
xchg
fistpll
lret
pop
stos
cltd
or
mov
adc
popa
pop
outsb
aad
call
mov
punpcklwd
imul
jmp
ds
test
movsl
loopne
rcr
add
jns
dec
add
decl
mov
paddsb
and
cmpb
ja
sub
fsubl
test
and
fstps
pushf
sbb
data16
pop
aas
js
xor
mov
ljmp
jge
cmp
mov
push
add
or
mov
sub
push
mov
push
leave
ffreep
xchg
out
cld
adc
hlt
dec
scas
mov
sahf
and
sbb
sub
cmp
sub
adcl
addb
add
jmp
lcall
sbb
sbb
call
xor
cmp
jmp
and
lcall
inc
pop
outsl
mov
push
call
adc
testb
pushl
mov
lods
hlt
mov
fs
dec
sahf
xchg
call
repnz
std
inc
das
mov
mov
data16
mov
jge
call
data16
push
ljmp
leave
sub
inc
xor
cmp
lret
push
jg
gs
repz
sub
lds
out
incl
pop
push
mov
mov
fbstp
add
lret
imul
dec
pop
mov
movsw
dec
decb
loopne
fildl
add
ljmp
movsb
inc
jb
pop
decl
orb
and
or
or
adc
pop
pop
rol
aad
mov
scas
pop
call
sub
sub
ljmp
aad
nop
ljmp
sub
mov
gs
xchg
in
rclb
mov
int3
ljmp
lock
and
data16
sub
cmpsl
imul
addr16
sbb
pusha
pushl
lods
cmp
inc
dec
hlt
lods
ret
shll
mov
mov
movsb
mov
mov
mov
and
insl
call
jb
sub
jecxz
dec
push
leave
push
popf
outsb
in
push
push
xchg
or
test
mov
mov
jmp
adc
sbb
push
out
sub
xor
sahf
cs
jmp
ss
lods
pop
inc
test
jno
call
xlat
cltd
jo
add
mov
inc
idivb
xlat
loopne
jmp
fimuls
call
cmova
sbb
and
dec
push
push
mov
or
lret
incb
pop
gs
loopne
pop
movsl
cmp
lods
pushf
js
fidivs
and
ljmp
test
xlat
jle
sbb
vaddsubps
jp
add
cs
jns
jae
add
es
loope
mov
fidivrs
rorb
movsl
std
decl
test
mov
jecxz
mov
out
jg
and
mov
jns
pop
adc
xor
adc
push
decl
hlt
jecxz
incb
xor
dec
scas
inc
call
xchg
mov
ljmp
jno
pop
stc
pop
in
xor
jp
movsl
xchg
sbb
shrl
pop
test
pop
cli
into
ret
andl
cli
xchg
test
mov
dec
stos
push
jnp
mov
xchg
inc
das
push
fbstp
nop
cltd
jg
lret
mov
das
std
inc
fdivrl
pusha
lahf
das
sub
cmp
jmp
les
aaa
mov
out
iret
std
sbb
lds
add
insb
mov
incb
jbe
and
jno
mov
xchg
aad
or
in
cld
jmp
pop
shl
das
ja
mov
hlt
shll
mov
sahf
cld
inc
push
out
int3
mov
jecxz
cwtl
fs
fwait
call
mov
movsb
dec
cmp
sub
cli
jecxz
or
mov
sti
sti
dec
xchg
cmpsb
lret
ret
mov
lret
cmp
std
inc
in
das
pop
push
jg
imul
stos
ret
ljmp
xor
push
push
outsl
imul
pop
fcomip
incl
mov
inc
enter
sahf
dec
inc
or
stos
notl
xor
cld
pop
divb
mov
lcall
sub
lods
stos
sarb
inc
popf
es
lock
mov
pop
push
hlt
jle
clc
hlt
lods
outsl
xchg
call
das
dec
cmp
fisubrl
mov
cli
mov
cmp
inc
fimuls
or
cs
push
decl
pop
mov
fdivr
sub
mov
pushl
push
test
cmp
jge
mov
pop
loop
add
das
ljmp
mov
nop
aad
jne
aad
int
and
cli
outsl
idivl
pop
lret
ljmp
jns
mov
jo
mov
push
sarl
adc
stos
and
xor
gs
cmpsl
shl
push
das
xor
lods
mov
xchg
jmp
dec
dec
divb
jmp
pop
cmp
jns
or
cld
mov
aas
stos
testb
sbb
jo
idiv
pop
stos
inc
mov
movsb
xchg
scas
jne
scas
mov
mov
fs
inc
mov
dec
orb
shr
mov
lods
pop
inc
pop
mov
ljmp
jne
pop
add
repz
dec
fs
clc
ficoml
fbld
ret
incl
pop
sbb
dec
and
enter
cli
xchg
mov
fists
fstpl
jno
xchg
adc
sarb
xorb
int
adc
scas
lods
pop
pushl
fdivp
or
ficomps
jmp
inc
sti
jge
shlb
cli
pop
test
ret
fisubrs
in
stos
jmp
inc
ljmp
jo
jo
lret
and
cmpsl
fiadds
mov
aam
ljmp
and
imul
pop
xor
mov
mov
loopne
xor
or
and
cmp
inc
in
movsb
cmp
cmpl
out
rcrb
adc
incl
sub
incb
xor
mov
test
jmp
lret
push
mov
jg
xor
xchg
xchg
dec
ljmp
cmp
jmp
cltd
retw
cmp
icebp
and
clc
sahf
mov
shl
sar
pop
cmp
sub
jns
aaa
cmc
in
push
fdivrs
xor
and
dec
loop
jne
int
jle
mov
js
mov
add
jl
ds
mov
test
ret
pusha
mov
sub
bound
xchg
rcll
ljmp
mov
movsb
ret
cmp
and
out
lret
in
and
and
or
movl
icebp
sub
xchg
sbb
add
fadds
cmp
dec
lret
mov
add
xchg
fldcw
fidivrs
jle
xchg
repz
testl
inc
adc
mov
fsubl
sbb
dec
imul
clc
push
popf
shrb
cmp
dec
in
mov
cmp
imul
call
sti
sub
cmp
mov
jns
lcall
mov
stos
ss
xchg
pop
addr16
loope
sahf
jmp
jg
xchg
loope
aam
decl
lock
push
sub
add
fidivl
and
add
sbb
xchg
add
mov
jb
decl
mov
sub
adc
lret
cmpsl
popa
jp
lods
lods
fcompl
sub
push
test
std
andl
aaa
or
fldenv
int
nop
mov
push
addr16
loope
shll
cmp
xchg
call
movsb
out
lcall
sub
fsubrs
cmp
repnz
mov
mov
dec
push
enter
movsl
testl
fdivrp
lcall
repnz
jbe
push
in
xchg
cmpsl
lret
push
adc
or
jg
pop
xchg
in
iret
cli
mov
ds
ja
cli
je
call
and
ret
std
std
cwtl
stos
pop
pop
loopne
out
movsl
or
xchg
inc
mov
aad
pushl
pop
mov
ret
pushl
xor
cmc
push
outsb
dec
pop
jmp
jmp
jg
and
frstor
lret
mov
out
inc
xchg
mov
add
push
enter
sti
popa
ud0
xchg
add
push
orb
scas
icebp
adc
pop
sbb
adc
inc
mov
incl
ja
in
adc
aas
mov
xchg
dec
jg
mov
int
std
xorb
adcb
inc
movsl
shll
xor
out
jg
fistps
lea
cld
fdivrp
cmpsb
cmp
lds
inc
dec
hlt
xchg
mov
int
or
xor
push
pushf
mov
cld
or
pop
imul
xor
sub
lods
jno
jge
std
mov
xlat
imul
lahf
sub
or
push
ljmp
pop
aam
mov
or
mov
roll
aas
shll
sub
in
pop
and
cmp
dec
sub
sub
fwait
ds
jo
push
call
int3
mov
mov
call
cmpsb
es
in
push
movsl
sub
decb
add
jb
fwait
movsl
lods
jmp
jp
stos
decl
es
push
test
and
mov
fcom
xchg
inc
xchg
scas
cltd
imul
lea
shrl
lea
scas
icebp
add
jge
leave
mov
out
imul
adcl
inc
orl
mov
mov
aad
pusha
daa
fdivr
das
movsl
pop
pop
out
mov
dec
icebp
xchg
cmpsl
test
insb
add
repnz
mov
cwtl
jg
dec
outsl
in
ljmp
pop
mov
inc
outsb
cmp
add
adc
insb
incl
push
add
inc
cli
pop
xchg
push
adcb
aaa
outsl
or
stos
loop
ja
ffreep
test
or
jb
add
stos
dec
enter
mov
inc
jae
gs
mov
incl
xchg
mov
or
hlt
rclb
ljmp
push
xchg
dec
leave
xchg
and
xchg
xor
repz
jb
lea
push
pushl
sbb
mov
incw
in
icebp
sbb
test
fldl
sub
xchg
push
sbb
test
inc
pop
lcall
imul
insb
mov
push
test
sub
sbb
dec
jmp
push
in
xchg
negl
add
pop
outsb
or
stos
incl
popl
decl
subl
jb
xchg
pop
dec
mov
cltd
jle
pop
pop
in
mov
cmp
dec
out
jne
mov
mov
iret
sar
call
sbb
les
cs
loopne
xor
sbbb
pop
pop
gs
sbb
or
mov
test
sub
push
in
cmp
cmpsl
addr16
xchg
or
into
mov
fstpt
sbbb
xchg
hlt
inc
inc
sbb
movsl
dec
call
pop
pop
fs
call
sbb
cmp
rclb
xchg
jmp
xor
mov
jl
shrb
inc
cmpsb
sti
mov
loop
xchg
or
popf
lahf
hlt
mov
outsl
mov
imul
stc
sub
mov
fs
or
dec
mov
add
shl
lcall
sbb
aad
mov
test
ja
gs
inc
pop
lcall
adc
xchg
ret
mov
adc
sti
sahf
mov
ljmp
push
cmc
insb
lcall
movsb
inc
mov
and
cltd
cmp
mov
lcall
adc
lret
jnp
fiaddl
dec
push
xchg
fisubrl
stos
mov
jle
or
ljmp
jecxz
push
rcll
inc
push
ljmp
out
push
cmp
pushl
lods
mov
decl
cmp
xor
sbb
ja
xchg
pop
insb
inc
mov
jmp
jno
jo
cmpsl
sar
lcall
pushl
inc
and
mov
or
mov
inc
es
dec
aas
inc
pop
ja
test
dec
rcrb
movsb
sub
mov
loopne
cwtl
push
xorl
cld
lds
push
push
insl
cmp
add
rorl
jae
daa
adc
aad
shrl
call
out
fidivrl
pop
pop
mov
ljmp
jg
aaa
or
dec
dec
sub
inc
dec
rcrl
imul
call
adc
sbb
jmp
jae
hlt
cli
and
and
adc
add
jg
movsl
test
cmpsl
xchg
test
daa
lret
pop
inc
je
decl
push
and
outsb
dec
fwait
mov
inc
lcall
mov
pop
incl
xchg
jns
lahf
dec
dec
loopne
mov
inc
jge
adc
push
test
loope
cld
jbe
test
add
cmp
jnp
fwait
cmp
scas
in
mov
jle
stos
xchg
sbbb
or
notl
adc
mov
mov
cmp
outsb
clc
jno
shl
pop
aaa
lahf
jb
inc
cmpsb
enter
loop
call
adc
mov
das
dec
je
adc
xchg
mov
fistpll
dec
add
ljmp
pushl
mov
inc
inc
add
stos
xchg
aam
sub
push
push
dec
out
mov
in
lock
xchg
push
or
test
xlat
cmpsl
mov
pushl
fstl
push
jb
repz
lcall
adc
pushf
std
dec
jge
jns
fcom
pop
fisubs
lea
mov
inc
push
inc
pop
sub
mov
xor
dec
dec
push
fiadds
or
daa
pushf
pusha
lods
add
enter
push
mov
xchg
xor
das
mov
into
sub
inc
dec
rorl
movsb
imul
outsl
adc
repnz
cmpsl
dec
inc
push
mov
cmp
xor
inc
add
pushf
bswap
cmc
add
cmp
mov
imul
xchg
lock
dec
das
int
test
pop
ljmp
sub
or
jmp
mov
loope
js
fldcw
sbb
jns
loope
pop
and
dec
scas
stos
add
mov
fisttpll
pushl
clc
mov
dec
jl
push
adc
adc
mov
pop
jg
stc
push
nop
inc
pop
cli
push
bound
jl
pop
in
jb
dec
lret
jl
dec
nop
cmc
mov
xor
shlb
inc
jae
add
pop
and
add
mov
sbb
xchg
movsl
jmp
pop
mov
out
mov
adc
jge
jns
loopne
mov
stos
inc
adc
dec
push
fnstsw
cs
fadd
cltd
and
call
xor
lods
dec
jbe
dec
or
mov
inc
mov
jg
outsb
push
int3
mov
lcall
mov
cld
addl
adc
pop
cmpl
push
adc
and
mov
push
addr16
int
clc
lcall
mov
test
xchg
jge
push
loop
into
pop
mov
rolb
and
cwtl
xchg
jmp
mov
sub
pop
xchg
imul
rclb
aam
in
cmp
cmpsl
inc
mov
stos
cmp
jmp
in
lea
in
jecxz
xor
push
jg
jg
pop
fidivl
call
bound
jmp
stos
push
push
sub
sbb
xchg
outsl
out
push
shll
scas
push
dec
mov
cmpsl
mov
call
sti
data16
push
lret
fstps
adc
mov
test
adc
mov
fistpll
ljmp
xor
incb
push
sub
popf
sub
movsl
lea
xchg
xchg
sbbl
jno
jns
shl
mov
cmc
sub
jmp
push
xchg
jne
das
scas
mov
shrl
ja
test
das
clc
jge
je
mov
stos
pop
popf
imulb
int
popa
scas
adc
xchg
ljmp
push
hlt
mov
aad
add
xor
xchg
inc
mov
jl
cmp
movsl
lods
lods
mov
or
jl
push
or
or
xchg
scas
mov
cmc
flds
inc
pop
outsb
js
fs
mov
add
pop
in
add
mov
stos
dec
fstl
pop
cmpsb
arpl
test
or
daa
sub
mov
ljmp
fildll
lcall
dec
push
outsb
push
iret
fcmovbe
ljmp
lods
and
incl
lods
pushf
and
test
adc
pushl
sbb
insb
add
jl
push
push
mov
jg
es
ss
jmp
cwtl
jnp
xor
cmp
inc
add
and
out
push
pusha
repz
mov
xor
pop
hlt
pop
rorb
push
pop
jo
lret
or
roll
jb
pop
pop
jle
incl
cld
repz
pop
adc
sti
icebp
xor
push
push
mov
mov
shl
jns
xchg
rcrl
in
sar
mov
and
out
dec
popa
das
in
cmp
ljmp
or
cwtl
je
stos
dec
incl
int3
cwtl
pop
cltd
push
cmpsb
mov
mov
test
lcall
push
test
xchg
add
push
das
mov
sub
jnp
aam
xor
pop
insl
adc
dec
jmp
push
int
push
in
jno
mov
xor
xchg
cltd
jnp
das
clc
sbb
mov
dec
rcrl
mov
jbe
loopne
scas
fbstp
out
lods
push
aaa
lcall
cmp
int
sub
jno
mov
imul
push
and
rcrb
shrl
sbbb
in
movq
fistpl
and
outsl
sbb
bound
movl
mov
pop
ss
jecxz
mov
sbb
xor
movsl
jbe
cli
push
nop
mov
push
mov
jo
pushl
fnstcw
loop
jmp
enter
test
pop
je
das
in
leave
mov
mov
cltd
mov
incl
aas
mov
sbb
cmp
addr16
je
add
pusha
hlt
rcll
ja
push
adc
pop
fbld
add
push
mov
inc
les
sar
lcall
int3
decl
jno
ret
test
mov
jmp
adc
dec
dec
fsubr
nop
pop
sbb
mov
stos
call
pop
mov
ret
dec
mov
inc
cld
ds
mov
int
push
push
push
call
mov
sbb
mov
mov
sbb
sar
adc
xor
mov
or
ficoml
push
xor
push
test
imul
fstpt
jmp
sbb
movsb
mov
or
fs
xchg
jmp
xchg
mov
push
cmp
mov
add
mov
mov
push
pushf
pop
repnz
adc
scas
push
dec
das
lcall
jg
jg
icebp
into
mov
jecxz
push
mov
jge
xchg
mov
lods
arpl
int3
jg
out
pop
cmpsl
cmp
xchg
icebp
insb
jo
insb
decl
insb
jmp
push
cmp
clc
sbb
mov
mov
ja
call
push
out
cmc
hlt
jecxz
data16
imul
bound
xchg
popa
inc
sbb
into
mov
std
loope
xchg
jne
or
gs
aam
pop
sub
lock
sub
cltd
sar
add
add
add
decl
and
add
ja
xchg
mov
xchg
pop
out
repnz
shl
cld
jl
in
ds
fldl
inc
ljmp
jb
jg
mov
outsl
out
sbb
push
jg
fwait
ds
es
mov
in
adc
jo
jo
cmc
xchg
add
cmp
jo
jecxz
mov
pop
ds
push
push
cmc
into
jl
push
lret
sub
pusha
and
int3
push
std
jl
jmp
jle
das
push
mov
aad
mov
jmp
sbb
sub
lods
movsl
push
fstpl
cmpsb
jbe
jg
mov
stos
mov
ljmp
aas
fsubrs
stos
jmp
arpl
mov
jmp
jmp
andl
push
shl
push
scas
xchg
push
arpl
adc
test
and
int3
push
ja
call
jo
mov
rorb
jmp
push
mov
call
popa
push
or
fists
or
or
cli
and
or
lcall
sti
popf
and
jecxz
adc
sub
lahf
push
mov
and
or
repz
test
js
and
out
and
inc
cmp
inc
add
popf
add
cmp
inc
pushl
add
jb
mov
add
jp
movsb
in
sub
mov
in
xchg
pop
icebp
sub
jmp
fistps
dec
divb
mov
pushl
aaa
jmp
repz
divb
jp
pushl
add
or
jle
mov
outsl
sub
pushl
or
ud0
dec
repnz
stos
call
pop
push
jmp
imul
sbbl
cmp
mov
lret
sub
int3
push
lret
xor
call
out
jp
jnp
popf
sbb
xchg
jb
inc
mov
cld
push
mov
adc
mov
dec
xlat
cmpsl
bound
movsl
lcall
add
pushl
sub
jae
mov
ljmp
push
xor
mov
das
sbb
ljmp
and
hlt
daa
mov
lcall
push
sub
out
adc
mov
nop
push
jnp
aam
mov
pusha
jb
repnz
jbe
cmp
sbb
jle
mov
mov
push
insb
jecxz
ljmp
xor
rorb
lcall
xchg
popf
mov
shll
call
aad
or
gs
cli
bound
loopne
mov
pushl
pusha
addl
test
les
imul
sbb
xchg
nop
pushl
testb
pop
and
sbb
divl
pusha
cmpsb
in
add
fwait
add
cmc
mov
xchg
push
inc
shrb
ljmp
pop
or
adc
xchg
fs
or
sbb
xchg
in
push
leave
incl
dec
out
jmp
ficoml
add
test
xor
fstpl
ds
rcrb
cmp
mov
cmp
fidivrl
cmp
mov
xor
jg
jmp
push
clc
adc
inc
ja
rcrl
or
call
fldt
mov
mov
add
mov
clc
jmp
cmp
push
gs
arpl
mov
pop
jp
pusha
and
rolb
lcall
jno
xor
jp
push
js
mov
icebp
testl
sahf
mov
subb
adc
xchg
inc
call
pop
cmp
int3
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
pop
incb
testb
and
decl
fwait
lcall
je
aad
mov
xor
xchg
pop
decl
dec
xchg
push
jb
pop
jmp
pushf
out
jmp
popa
or
ljmp
jno
mov
stc
scas
cmpsb
fisttpll
mov
ss
or
cli
dec
clts
icebp
pop
dec
cli
xchg
mov
into
pop
imul
repz
decl
xchg
dec
sbb
std
jmp
push
push
fistpll
xchg
call
push
scas
adc
pushl
pop
out
or
jnp
sbb
loop,pn
inc
fcom
test
or
sub
xchg
push
push
incl
add
lcall
cmp
and
mov
jl
xor
movsl
incl
mov
xor
sub
pop
jae
dec
pop
adc
adc
cld
mov
cpuid
jmp
insb
mov
mulb
cmp
div
test
andl
pop
addb
loope
rcrb
imul
ljmp
orl
test
push
xchg
pop
inc
gs
jmp
icebp
in
sti
xchg
jno
push
adc
cmp
lret
sahf
push
mov
clc
jae
inc
mov
in
mov
test
xchg
fs
and
repnz
daa
ret
or
pushf
xchg
cld
test
adc
pop
incl
das
scas
fnstsw
ljmp
push
enter
push
inc
mov
jl
leave
sahf
imul
dec
jge
mov
out
sub
out
sub
xchg
arpl
adc
or
sub
call
push
mov
incl
int
dec
pop
insl
cmp
call
leave
dec
mov
push
in
inc
pushf
mov
fcmovu
lcall
popf
mov
frstor
jge
jle
loope
sbb
inc
pop
jb
dec
fldenv
lahf
imul
and
inc
testb
sub
pop
out
sbb
icebp
mov
xor
push
call
cli
loop
cltd
fwait
in
mov
mov
fwait
jo
out
mov
arpl
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
decl
or
subl
or
lods
decl
fwait
xchg
push
popf
icebp
jmpw
inc
push
jmp
mov
lock
arpl
xchg
cmp
orl
add
sub
cltd
mov
cmp
stos
ret
inc
cli
cmp
scas
adc
add
insb
jg
mov
repnz
rorl
movsl
rorb
inc
lret
incl
add
cld
pop
addr16
cmp
dec
out
cmp
push
and
movsl
mov
lahf
dec
decl
mov
inc
jecxz
sub
inc
std
call
aam
inc
outsb
popa
in
lahf
mov
jg
xchg
aam
dec
push
incl
fistpll
and
lcall
out
aad
leave
jp
call
cmc
jl
arpl
lods
mov
xchg
fs
and
mov
lock
sub
mov
test
jmp
push
mov
aad
inc
scas
in
mov
sar
das
arpl
lret
gs
test
push
adc
nop
cmp
nop
addl
decl
test
mov
aaa
xchg
push
in
sbb
in
xchg
andl
std
aaa
jge
xchg
outsl
sbb
mov
fldenv
dec
fisubrl
jmp
dec
sub
lods
mov
outsl
sub
fcos
mov
test
sbbl
xor
sahf
in
mov
push
inc
pop
sahf
cld
xlat
outsl
scas
mov
xchg
jmp
adc
add
notrack
fidivrs
repz
imul
sbb
in
cmp
push
xchg
lret
lods
xlat
int3
xor
call
dec
in
or
in
lcall
imul
jb
inc
test
incl
dec
dec
pushl
or
pusha
call
cmp
call
add
push
into
jmp
add
xchg
aam
roll
rcll
sub
cmp
mov
sbb
gs
push
lods
insl
or
lahf
push
das
aas
hlt
test
imul
push
call
int3
pop
cld
ljmp
sub
mov
popa
pop
aad
jae
js
jns
adc
add
jnp
xor
or
jne
in
and
mov
jle
int3
inc
divl
std
imul
and
fiadds
call
movsl
inc
mov
filds
decl
ss
add
int
inc
pop
xor
stos
inc
das
adc
aas
jmp
pop
outsb
xor
decl
sbb
add
add
cli
xor
mov
xchg
push
call
fprem1
int
add
fwait
in
repnz
lret
push
sub
movb
pusha
ljmp
out
loopne
cltd
ficomps
or
pop
pop
mov
mov
cmpsb
out
xor
enter
inc
push
stc
add
in
pop
or
inc
cmp
cltd
incl
push
inc
inc
out
clc
mov
decl
sarb
inc
mov
cmp
idiv
call
jnp
scas
lcall
dec
repz
pop
addr16
movsl
aad
lock
sbb
ds
add
scas
repz
enter
lock
sbb
mov
jmp
fcmovnbe
out
popf
dec
out
outsb
fwait
cltd
cmp
jne
das
xchg
or
xchg
pop
or
nop
fisubrs
ss
xor
lds
fnstcw
mov
pop
sub
andl
movsl
in
lock
sub
sub
outsb
in
ljmp
pop
mov
xchg
pop
insb
xchg
jle
add
xchg
xchg
aaa
jb
inc
decl
mov
mov
mul
clc
in
ss
ds
cwtl
loopne
jmp
cmp
clc
mov
cmc
xlat
mov
xchg
je
or
and
cmpb
jg
out
xor
les
jmp
imul
cs
cli
mov
outsl
fs
mov
jle
icebp
data16
jle
mov
stc
jne
out
pop
sub
mov
mov
jecxz
jge
mov
mov
ficomps
sar
pushf
jbe
push
lds
and
lcall
fisubrs
loop
add
jno
hlt
jno
mov
call
or
lcall
movsb
fsts
rorb
popf
sbbb
dec
jl
mov
xchg
ljmp
add
aad
repz
popl
pushl
push
xchg
lods
inc
pushl
cwtl
or
loop
mov
push
mov
jae
cmc
xchg
cmp
aam
push
sbb
mov
jmp
jle
int3
and
imul
add
out
cli
ret
pushl
mov
mov
insl
add
decl
sbb
xchg
hlt
sbb
cmpsb
mov
and
std
int
pop
out
and
incl
and
loopne
int
pop
cmp
cli
xbegin
mov
mov
cltd
cmc
jle
xor
lret
call
mov
xlat
sub
repnz
rol
cwtl
xchg
test
incl
stos
pop
cld
sub
ja
sbb
pop
jmp
clc
and
enter
jnp
stos
cmpl
enter
movsl
into
incl
ja
repnz
or
scas
jp
stos
sbb
jnp
cmp
xor
call
push
enter
hlt
xchg
mov
xlat
incl
outsb
addr16
adc
fadds
mov
mov
pop
sub
movsl
mov
and
adc
dec
rcl
xor
push
push
jns
mov
mov
and
xor
sub
inc
cwtl
test
aam
mov
mov
cmp
sbb
movsb
out
adc
fsubl
push
stc
add
bound
xchg
stos
fcomip
pop
fdivs
mov
inc
sti
jae
sub
pop
mov
fcompl
das
incl
adc
lret
cli
mov
fstps
or
insb
cmp
aam
ss
pusha
mov
jns
aad
mov
jae
loope
lcall
aaa
adc
jo
or
js
flds
mov
jp
push
push
lret
push
fiadds
add
lock
pop
jl
in
sub
movsb
std
pop
and
inc
jb
mov
sub
lret
fidivl
adc
xchg
push
imul
je
pusha
add
or
mov
mov
rclb
adc
ljmp
out
add
fiadds
sub
jmp
mov
fadd
mov
hlt
ret
lods
lcallw
cmp
xchg
call
push
jg
lods
mov
in
cwtl
dec
push
jmp
cmp
cmp
sbb
dec
addr16
sub
xchg
mov
cmpb
add
cmp
xlat
cltd
sbbb
fnstcw
test
jae
aaa
push
pop
leave
sub
es
sbb
jp
add
mov
dec
jne
inc
xor
dec
fsubl
movsl
stc
pop
repz
rolb
and
decl
xor
into
std
cmc
pushf
fimuls
faddl
jge
mov
pop
add
jnp
popa
insl
ljmp
jae
mov
jmp
imul
sub
testb
xor
inc
jge
lret
rorl
in
mov
stos
pop
lcall
roll
sbb
jg
pop
mov
cmp
push
pop
mov
std
sub
xor
lret
dec
push
loop
inc
xchg
mov
jmp
adc
in
lret
insb
stc
mov
sub
fsubl
add
jns
lods
sub
jo
jle
iret
xchg
clc
jmp
push
or
jg
pushl
adc
movsb
pop
mov
in
sbb
xor
mov
stos
gs
jp
add
test
sub
outsl
into
jne
fisubrl
insb
add
lret
dec
mov
insl
mov
pusha
jae
pushf
jmp
mov
ljmp
adc
shrl
mov
dec
xchg
push
push
sub
jno
popf
xchg
xchg
jmp
jmp
xor
shl
scas
sti
insl
sbb
cld
fwait
cmp
mov
jne
xor
and
and
ljmp
inc
jg
call
inc
add
dec
out
lea
pop
aad
sbb
add
xor
xor
je
aad
sub
lahf
mov
ret
fnstcw
push
jecxz
cmp
incl
mov
das
mov
lret
dec
popf
jns
jl
pop
aaa
adcb
jo
mov
adc
dec
push
and
mov
stc
mov
iret
fs
inc
leave
sbb
fs
dec
pop
lcall
mov
fldl
sbb
jne
add
jle
add
ljmp
imul
icebp
fwait
sbb
mov
dec
bound
loop
xchg
inc
mov
ret
pop
or
cmp
clc
inc
rorb
aaa
iret
int3
and
push
xor
test
push
aaa
dec
jl
jge
sub
adc
and
or
sahf
pop
rcl
mov
jl
adc
push
clc
jmp
and
sub
mov
loopne
mov
or
adc
cmpsl
sub
mov
or
outsl
pop
pop
dec
mov
inc
push
sti
xchg
stos
cli
mov
xor
cli
pop
std
leave
stos
jecxz
mov
xlat
incl
lock
mov
std
stos
xchg
jg
lods
or
jmp
pop
push
clc
out
push
sub
rolb
insl
pop
pop
push
pop
mov
aad
stc
sahf
stc
mov
call
sbbl
cmp
mov
sahf
mov
shll
je
fnstenv
jb
lods
push
js
dec
sbb
sub
cmpsl
pop
ret
test
pop
jl
xchg
mov
xchg
mov
sarb
push
inc
popa
faddl
rcll
stos
nop
daa
ud0
push
jne
xchg
mov
int
loope
cwtl
push
fwait
call
leave
push
aad
iret
je
dec
movsb
mov
sbb
fstps
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
lret
shrb
cmp
xchg
js
leave
ljmp
sbbb
outsl
outsl
inc
sub
shl
nop
pop
movsl
js
sub
and
nop
sahf
outsl
std
gs
incl
fs
call
inc
push
jae
add
cmp
or
arpl
cli
and
pusha
sar
aam
pop
in
pusha
loope
inc
mov
push
test
test
jp
mov
mov
lcall
xor
lea
nop
aas
lcall
cmp
mov
insl
fs
push
int3
movsb
cmp
fbld
jae
mov
xchg
fs
adc
pop
mov
fmull
inc
jmp
bound
adcl
cmp
loopne
or
pop
jmp
mov
mov
aad
inc
pop
test
hlt
or
cmp
jb
cld
jg
movsl
sbb
call
xchg
pushf
sti
loopne
repnz
aam
icebp
push
lods
ljmp
add
mov
mov
push
xchg
lret
loop
jo
iret
pop
test
mov
fdivr
repnz
push
iret
addl
xlat
lods
mov
mov
into
mov
mov
fstl
dec
rolb
mov
cmp
and
std
inc
inc
rcl
mov
out
cld
pop
dec
cmp
pop
xchg
inc
pushl
cltd
sub
inc
mov
dec
in
je
pusha
jmp
mov
dec
daa
dec
jmp
xchg
push
rolb
push
mov
or
inc
pop
std
sbb
sbb
inc
call
xchg
test
mov
adc
in
stos
jbe
incl
pop
nop
cmpsl
lcall
inc
jp
mov
and
jg
cs
jmp
xorb
dec
pop
test
mov
xchg
in
pop
jp
dec
mov
ror
movsb
fiaddl
pop
fcompl
shlb
xor
ljmp
inc
and
divb
movsl
mov
add
mov
rcll
negb
xor
dec
pusha
push
push
cli
cmp
jl
add
cmp
cwtl
jb
add
sub
mov
or
call
or
jmp
clc
cmpsb
push
cld
cli
cmp
cmp
ret
mov
sub
inc
sbb
cmova
gs
sbb
les
bswap
ret
dec
icebp
scas
outsl
popa
movsb
pop
pop
lcall
dec
inc
and
mov
sbb
add
add
xchg
aas
push
leave
loopne
adc
adc
dec
fistpll
jmp
cs
div
xchg
sti
pop
cld
incb
adc
shll
xchg
sarl
decl
pop
inc
fnsave
ficompl
enter
pushl
xchg
push
or
data16
dec
cmp
adc
mov
mov
mov
mov
mov
cli
icebp
clc
sbb
lock
pop
xchg
inc
sti
jo
pop
sub
pop
jge
mov
incb
xlat
out
loope
lret
add
call
adc
and
clc
xor
pop
mov
dec
scas
imul
pushl
sub
or
in
and
add
xor
cld
pusha
outsl
mov
mov
stos
ljmp
adc
mov
lret
out
int
pop
push
cmp
test
into
sti
outsb
inc
es
shll
jp
es
lcall
xchg
decl
loopne
outsb
dec
imul
xlat
sbb
xor
hlt
jmp
cmc
cmp
popa
loope
xchg
imul
or
sbb
lret
dec
cld
rorb
fcmovnbe
dec
cmp
pop
outsl
rolb
push
sti
xor
popl
mov
xchg
pop
std
mov
in
cmp
push
xchg
dec
rorl
mov
bound
popa
imul
inc
ret
test
stos
aaa
pop
cmp
mov
das
mov
pop
xlat
outsl
jl
push
jmp
or
call
jl
fbld
jmp
pushf
lea
clc
or
cli
dec
jecxz
dec
lcall
mov
add
pop
cwtl
out
mov
add
in
decl
cmp
inc
pop
or
hlt
pop
sbb
mov
pop
xor
ret
icebp
push
xor
ret
sub
mov
rol
cld
xchg
rcrl
ret
cs
arpl
jp
icebp
fistps
insl
pop
fwait
pop
rep
clc
sbbb
sahf
mov
or
imul
dec
adc
add
sbb
imul
pushf
cwtl
cli
call
ljmp
pushf
test
ljmp
mov
push
lock
mov
cwtl
adc
mov
cmp
adc
sub
push
jle
in
jbe
int
imul
clc
jbe
mov
lret
sub
and
fdivs
incl
in
ss
inc
push
cwtl
lds
xchg
test
fists
jno
and
pop
roll
fbstp
mov
ljmp
adc
mov
xchg
inc
pushf
das
aas
xor
mov
cmpsb
outsl
pushl
dec
mov
mov
pop
push
loope
aad
call
aaa
mov
ss
mov
incl
dec
dec
jmp
mov
ljmp
cli
fnstcw
xchg
hlt
mov
xor
dec
aas
mov
fldcw
enter
sub
xchg
xchg
push
pushf
test
jo
lcall
int
or
adc
lret
add
nop
aad
and
lods
sbb
or
jmp
aaa
int
jg
int3
mov
loop
jecxz
mov
cmp
sbb
les
incl
cmp
loopne
cli
pop
inc
pop
inc
pop
ljmp
cli
loop
fldt
lea
sub
incl
mov
push
jmp
cmp
into
mov
fwait
out
stos
mov
jl
sbb
insb
test
or
push
pop
addr16
xor
outsl
incl
add
rcrb
ds
leave
leave
xor
xchg
aad
jp
loopne
sbb
xor
push
test
cli
mov
xchg
push
insl
jae
jo
sub
mov
and
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
dec
lds
flds
loop
lcall
jp
rol
jl
fnsave
jae
sbb
test
inc
out
shr
dec
outsl
out
lock
leave
sub
rorl
dec
pop
push
stos
mov
inc
inc
fiadds
mov
lcall
sarl
dec
mov
dec
insl
decl
jmp
lcall
insb
dec
and
mov
mov
call
jmp
xor
sub
pop
pop
xchg
inc
jb
nop
icebp
sub
cmp
das
pusha
repz
jmp
jns
aad
or
movzwl
push
ljmp
and
pusha
loop
xchg
adc
push
mov
aad
ljmp
aam
jp
mov
call
mov
cmp
stos
mov
js
jmp
pop
inc
sbb
or
icebp
mov
mov
xchg
sbb
das
daa
popf
push
js
add
jp
test
mov
push
fstpl
cli
lds
sar
imul
cmp
pop
inc
or
outsb
lods
adc
jle
cltd
popa
mov
push
icebp
or
cwtl
pop
sbbb
movsb
inc
push
cmp
popf
dec
cs
cmc
xchg
lret
out
movsl
je
mov
sarb
sbb
mov
fwait
inc
movsl
pop
xchg
jns
dec
pushf
push
add
test
mov
adc
dec
lcall
movsl
aaa
sbb
shr
and
pop
xor
lods
cmp
xchg
les
sbb
jns
and
jo
jne
or
jge
out
xchg
sbb
aas
stos
cmp
xor
lea
inc
cltd
inc
or
imul
repnz
stos
out
lods
pushf
jp
mov
mov
xor
mov
pop
jae
daa
decl
mov
sti
pushl
inc
fdivp
inc
xchg
xchg
das
jne
sub
mov
test
aas
data16
adc
iret
frstor
lea
cmp
out
cmp
les
pop
cmpb
incl
sub
cmc
and
and
add
sbb
xor
incl
out
sbb
sar
dec
pop
sub
leave
cmp
jmp
call
jmp
movb
cmpsb
push
jge
sar
shl
mov
push
mov
movsl
int
jle
sub
ss
sub
jne
xor
idivl
cmp
pop
push
inc
into
lret
scas
rcrl
sub
ret
sbb
daa
lods
lcallw
dec
mov
fdivrp
addr16
dec
rcrb
xor
push
sub
repz
xlat
fstpl
sbb
xchg
push
pushl
lock
jb
lcall
xor
popf
push
push
fisubrs
push
movsl
testb
sub
in
mov
es
das
xor
stc
lcall
fwait
lcall
testb
pop
int3
pop
cmc
shlb
outsl
das
mov
dec
lds
mov
leave
xlat
pushl
xchg
and
andl
mov
mov
pop
or
outsl
fwait
lahf
adc
inc
or
and
mov
cmp
adc
leave
sbb
std
and
push
movsb
mov
push
add
stc
mov
fisubrs
adcb
icebp
push
cmp
clc
mov
mov
mov
inc
adc
lods
loop
push
mov
push
mov
in
push
pushl
inc
push
mov
pop
loopne
inc
adc
aas
repz
push
jo
dec
lcall
mov
mov
pop
jmp
push
cmpsb
add
lahf
in
call
inc
fwait
add
cmp
mov
stos
mov
ljmp
sbb
lret
or
in
lcall
ficoml
push
mov
movsb
and
mov
cmp
add
fsubl
icebp
and
cwtl
mov
jo
jbe
test
jb
in
scas
mov
in
out
in
pop
mov
cmc
pop
fcompl
dec
add
and
fidivl
xchg
push
bound
sbb
testb
mov
sar
cmp
jns
test
insl
fisubrl
mov
add
sbb
fistps
xchg
mov
js
dec
or
inc
adc
stc
dec
daa
cld
add
daa
lds
mov
inc
push
push
scas
lcall
jge
call
mov
xchg
push
jns
mov
jb
imul
lcall
das
xor
mov
sbb
mov
jge
nop
cmp
call
adc
call
push
gs
fdivs
push
push
insb
sub
clc
scas
loop
jg
pop
adc
out
mov
das
xchg
xchg
rcrb
inc
std
lahf
xor
in
test
dec
add
or
add
fdivrs
lcall
leave
or
mov
out
loopne
sbb
pop
xchg
sbb
mov
xor
out
fisubrs
jno
dec
jmp
jne
loope
mov
js
sbb
adc
mov
sbb
mov
dec
pop
repz
pushl
inc
cmp
sbb
pushl
adc
cmp
sbb
enter
add
mov
dec
fs
cmp
dec
dec
or
adc
pop
clc
pop
outsl
dec
test
test
decl
icebp
add
mov
sar
and
jp
outsb
fwait
jmp
imul
pop
jmp
test
push
std
add
lahf
outsb
lcall
mov
mov
nop
mov
popf
cli
mov
push
jmp
push
mov
mov
xchg
pop
jns
into
fidivs
cmp
imul
fdivp
stc
test
jns
sbbl
push
mov
sub
das
pushf
jo
mov
mov
mov
inc
add
enter
incb
je
dec
dec
xchg
fdivs
adc
jo
jl
mov
mov
daa
loope
movsl
jae
mov
lods
mov
fwait
incl
jmp
lret
pushl
add
push
mov
ljmp
jp
jnp
mov
es
enter
jo
dec
cmp
sbbl
or
gs
jmp
dec
lcall
lcall
xor
mov
out
cmp
mov
mov
pushl
aam
shlb
push
decl
pop
mov
jmp
popf
mov
lahf
push
push
and
xchg
addr16
cmp
mov
adc
lret
in
std
dec
and
xchg
and
inc
sbb
call
pop
adc
or
das
xor
jmp
inc
jns
jg
in
pop
pop
ret
aad
es
stc
out
call
leave
or
ljmp
dec
push
roll
mov
or
decl
lea
clc
into
repnz
or
jo
mov
sbbb
call
cmp
pop
aad
mov
push
sub
out
xchg
faddl
fcompl
mov
xchg
inc
pop
pop
push
sub
mov
imul
dec
cli
xor
xlat
lcall
and
mov
adc
dec
adc
and
les
mov
cltd
mov
popa
lcall
jl
sti
xchg
incl
pushf
ljmp
ds
xlat
cmp
dec
out
stos
imul
clc
jle
int
xlat
xlat
cmp
inc
sbb
ljmp
addr16
jecxz
ds
pop
jno
cmpb
add
std
ds
sbb
pop
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
fscale
fwait
add
push
incl
icebp
lret
sarl
rcrl
xor
jmp
mov
ret
lcall
jno
xor
add
lods
orl
jg
mov
mov
push
mov
pop
adc
and
pop
inc
add
ljmp
loopne
scas
xchg
sub
xchg
dec
outsl
test
lcall
sti
mov
fwait
aam
icebp
fildll
aaa
outsl
mov
push
mov
aam
pushl
stos
mov
ljmp
cmp
call
cmp
mov
mov
and
cmp
rorl
fs
xchg
push
out
into
decl
jg
xchg
mov
or
js
mov
jg
push
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
mov
stos
and
fucomp
out
loope
fs
in
jg
sub
icebp
jge
fst
jae
push
in
ljmp
fcomp
movsb
add
push
xchg
push
imul
ljmp
scas
lahf
cmp
adc
cmp
xchg
and
test
jecxz
xor
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
decl
imul
imul
jecxz
add
in
mov
jg
cltd
cld
lods
sbb
mov
push
jp
jmp
std
call
jge
xor
dec
sar
shll
jbe
mov
std
mov
xor
cli
ljmp
call
stos
sub
test
pushl
cld
adc
add
out
xchg
cli
xchg
popa
jmp
mov
jmp
popf
inc
lret
test
jg
jle
lahf
and
pop
into
mov
lods
jbe
stos
jge
or
jnp
incl
stc
mov
inc
fwait
clc
adc
imul
cmpb
mov
call
lahf
push
aam
sub
repz
fmull
sub
loop
inc
lahf
inc
dec
jg
cmp
pop
test
push
and
lcall
out
ja
mov
sti
push
mov
mov
add
inc
add
inc
ljmp
cmp
call
cmp
out
and
sub
pushl
ret
enter
call
jns
push
mov
lds
pop
mov
push
fildl
dec
or
fadds
ret
push
lahf
test
jle
push
inc
inc
mov
mov
mov
incl
sbb
jp
decl
shrl
aam
call
push
repnz
loope
pop
ljmp
adc
xchg
pop
cmp
lcall
cmc
inc
adc
or
popa
cld
lret
dec
mov
pop
insl
arpl
ljmp
push
dec
out
jmp
mov
dec
ret
incl
push
or
rorb
in
jecxz
mov
call
inc
mov
std
fidivs
js
pushl
cli
or
adc
push
call
xor
push
pop
rolb
jne
mov
out
sub
mov
sbb
in
outsl
mov
lea
ficomps
jmp
cmp
iret
outsl
inc
pop
jnp
dec
leave
cmp
mov
mov
ret
in
call
add
mov
mov
and
sarl
decl
sub
dec
mov
in
out
pop
dec
lods
mov
stc
cwtl
outsb
shlb
ret
ljmp
decl
jecxz
cmp
sub
loop
xor
mov
and
das
decb
sub
loope
iret
lcall
sar
rol
sub
jnp
or
mov
sbb
sub
icebp
repz
and
push
inc
pop
or
wrmsr
jmp
orl
and
add
or
cmp
mov
dec
data16
lret
or
aad
xchg
jg
fdivl
mov
call
jbe
je
inc
cmpb
jmp
jge
cld
std
leave
jge
repz
das
outsl
insb
or
fbld
adc
and
mov
sub
mov
lea
sub
pushl
sbb
out
mov
mov
pushl
in
popa
fucomip
lret
fs
lcall
lods
push
mov
push
test
xor
jbe
aaa
pop
cmpsl
jnp
xor
outsl
cmc
imul
les
jne
aaa
das
mov
and
sub
xchg
scas
push
in
call
sub
cs
call
push
or
outsl
or
push
lea
sub
mov
mov
jecxz
mov
and
pushw
push
jl
xchg
cmp
call
dec
pop
repz
jns
test
inc
movsl
test
adc
std
jg
add
push
pop
mov
fmuls
push
lahf
bound
sub
out
loopne
call
push
dec
fsts
pop
jmp
and
bound
stc
add
inc
push
sar
sbb
ret
jle
sbb
aas
jmp
lods
sbb
xchg
in
ret
or
imul
nop
jne
call
lds
sti
andb
fxch
jg
cmpsb
lods
cmpsb
pop
icebp
jmp
xchg
ljmp
mov
push
mov
cltd
ljmp
mov
aaa
js
push
xor
jnp
xor
mov
test
sub
sbb
dec
cld
sub
outsl
out
mov
je
inc
xchg
jg
xchg
dec
cltd
fwait
push
jmp
inc
dec
add
mov
and
out
xchg
sub
mov
mov
sbb
les
and
jo
aam
jb
mov
xchg
sbb
aas
add
jb
ret
stos
mov
jg
loop
sti
xor
jge
xchg
int
cmp
jns
xchg
fndisi(8087
test
jnp
ljmp
aad
pop
aad
sbb
call
push
sub
das
sbb
xchg
mov
scas
cs
xchg
jbe
and
jmp
jb
test
sbb
mov
pop
gs
or
or
fldt
add
jns
add
call
imul
das
dec
es
outsl
sbb
sbb
adc
mov
out
push
jno
adc
aam
add
pavgb
fdivrp
in
cld
jae
sbb
mov
push
pop
jge
inc
rclb
sbbl
cld
iret
idivl
inc
test
push
clc
insb
nop
mov
ds
cld
dec
in
pushf
cmp
test
addb
ret
mov
outsl
and
and
jns
adc
sbb
iret
inc
pop
inc
test
out
inc
sbb
lcall
ds
xor
xchg
nop
and
fmuls
cmp
std
sbb
push
sbb
imul
xchg
into
push
mov
clc
jg
xor
movsl
pop
mov
dec
jno
and
daa
push
cwtl
and
inc
sub
mov
xor
out
fisubl
pushl
push
jns
ljmp
loopne
xorl
sbb
insl
pop
fxtract
decl
es
ljmp
ret
testl
test
push
push
pop
jle
pop
jmp
and
mov
jl
pushl
int3
sub
lock
or
mov
xchg
lods
call
movsl
pop
pushf
push
mov
sarb
call
je
test
ja
xchg
mov
mov
and
std
fdiv
jbe,pn
das
pop
jb
rcl
adc
ljmp
scas
lcall
mov
jmp
stc
pop
or
addr16
sbb
adc
jp
pushf
mov
daa
sub
stos
das
xor
pushl
fsubrs
test
incl
fsubs
sti
jo
or
int
jg
bound
adc
pop
mov
dec
mov
or
or
rorb
push
pop
rclb
idivb
jge
iret
sub
repz
adc
inc
in
jb
test
xchg
xor
cli
fsub
decl
mov
icebp
mov
call
xchg
jno
stc
dec
lds
enter
ljmp
test
out
js
dec
xchg
or
jnp
adc
ljmp
int
loop
andb
decl
sbb
stc
jae
enter
pop
ljmp
sub
mov
xchg
push
and
lahf
outsb
int
adc
mov
cmp
decl
loopne
sub
ss
cmp
push
push
ljmp
mov
fwait
mov
or
cmpsl
clc
and
inc
ret
decl
sub
or
rcrl
iret
in
xchg
jmp
push
loopne
inc
addr16
int3
pop
push
add
out
rolb
push
test
xchg
loope
push
sbb
call
mov
mov
fimull
in
pop
nop
inc
in
xor
sub
popa
mov
aaa
insb
cld
jo
outsb
imul
out
iret
pop
push
pushl
sbb
mov
mov
mull
jle
stos
int3
das
mov
inc
nop
insb
jne
ret
cmp
rcrl
dec
shrb
lock
insl
fidivs
inc
mov
lret
xchg
decl
ficoms
std
lea
outsl
or
stc
mov
popf
add
call
jecxz
fdivl
mov
xor
xchg
cli
mov
mov
pop
cmp
jge
or
sar
xor
lods
sbb
bound
mov
push
lcall
fcoml
dec
xor
xlat
mov
push
xchg
out
jle
imul
cmp
leave
andl
adc
sbb
loop
test
mulb
cmp
sbb
dec
sarl
daa
mov
cltd
adc
push
movsl
push
xchg
mov
push
pop
into
movb
test
push
leave
and
lods
cmc
sub
lret
cmpsb
insl
andb
pop
mov
mov
out
pop
fsubrp
jmp
repnz
notl
jp
leave
fs
test
sub
cmp
dec
push
incl
out
nop
jp
mov
insl
popa
mov
leave
cmpsb
sbb
mov
aas
call
sbb
lock
dec
jae
inc
add
stos
mov
outsl
bound
mov
fbstp
lcall
or
pop
sbb
mov
out
mov
sub
sub
cmp
jmp
std
sub
std
dec
jb
jmp
les
scas
mov
movl
repnz
mov
lcall
test
loop
clc
push
xor
aad
aaa
pop
sub
ret
xchg
je
sub
lods
add
jns
aas
push
mov
sbb
std
fnstsw
and
rorl
jmp
jg
xlat
xor
add
clc
rclb
cmp
test
sbb
decl
ljmp
cmpsb
push
mov
div
dec
jl
stos
xor
shr
je
mov
data16
and
pusha
imul
aam
mov
add
call
pop
jecxz
inc
dec
mov
xchg
and
inc
clc
jmp
scas
icebp
pop
repz
out
sub
fiaddl
and
js
loopne
mov
inc
ss
mov
movsl
jle
orb
pop
std
cmp
jp
and
pop
movsl
popf
ljmp
adc
cmpl
and
adc
dec
sbb
push
sbb
cmpsl
clc
and
push
fstpt
arpl
jns
fnstsw
cmpsb
mov
dec
incb
mov
sub
push
movsb
cmpsl
xchg
mov
daa
dec
lcall
jmp
stc
push
dec
outsl
and
cmp
mov
sub
ljmp
cmp
mov
mov
pop
jg
pop
mov
sbb
sahf
imul
adc
nop
call
int
pop
addb
jne
or
adc
test
pop
and
ret
adc
pop
jb
and
call
push
mov
mov
adc
in
cmp
mov
jp
fcmovbe
je
icebp
lcall
clc
loopne
lcall
mov
daa
xchg
lods
ljmp
daa
ja
clc
jno
clc
mov
test
jmp
fmul
and
decl
cwtl
pop
addr16
pop
sub
sbb
cmpb
fxch
cmp
lea
mov
dec
les
sbb
fdivrl
dec
adc
and
cmpl
mov
add
or
leave
and
test
repnz
pop
enter
movsb
decl
and
mov
inc
xchg
xchg
mov
sub
xchg
das
and
dec
or
mov
or
push
push
sbb
ja
gs
fsubrs
cmp
adc
dec
jmp
or
mov
cli
loope
sti
jmp
incl
mov
cmpsl
jmp
pop
sub
push
mov
jmp
bound
popa
shll
fisttpll
std
inc
pop
inc
jae
std
outsl
mov
outsb
cmpsb
decl
ja
ret
or
mov
incl
addl
call
jl
mov
fwait
in
push
in
lret
jmp
into
jecxz
aas
test
push
mov
pushf
decl
popf
jmp
cmc
fdiv
negb
fsubrs
call
lods
out
sub
xchg
sbb
test
jne
cli
jg
sbb
push
ljmp
cs
fildll
call
aad
outsl
cmp
xlat
jbe
sbb
mov
incl
popf
pop
dec
repz
mov
bound
mov
sahf
xchg
lret
fmull
call
xchg
jno
aad
lcall
setle
rcl
push
jae
call
xchg
add
test
cmp
add
lea
imul
pop
ja
out
fimuls
nop
sub
xchg
in
testl
add
je
pop
pushl
mov
call
sub
gs
popf
cld
mov
mov
cmpsb
jb
lahf
sbb
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
pop
and
pusha
call
dec
into
lock
int3
arpl
mov
test
push
insl
leave
fidivrl
pop
or
cmp
push
push
xchg
mov
sub
sbb
dec
mov
sti
adcb
push
call
jnp
int3
sub
mov
lret
adc
inc
mov
pushf
add
fsubs
xchg
cmc
adc
push
mov
push
outsl
jns
clc
xchg
pushl
sbb
in
ljmp
jecxz
sbbb
cltd
loopne
sub
fidivs
mov
jmp
jg
scas
pop
push
movsl
popl
mov
push
jmp
pop
pop
and
inc
testb
pop
mov
mov
push
push
and
jne
test
loope
xchg
and
add
cmp
dec
loopne
fnstsw
pop
sbb
mov
mov
mov
mov
decl
mov
clc
in
and
xchg
sub
lcall
lea
push
pop
call
adc
cmp
xor
ja
loopne
push
stos
pop
push
sbb
cmc
cmpsb
push
pop
pop
das
fmuls
mov
pop
or
jb
pushl
xor
into
decl
js
cwtl
lcall
frstor
jmp
fsub
mov
pushl
and
in
ljmp
push
dec
add
inc
pop
les
les
xchg
lock
pushf
xor
out
fwait
sbb
cmp
push
sti
and
out
out
cmpsb
ljmp
pop
aaa
mov
fwait
cld
cmp
repnz
pop
pxor
xchg
andl
mov
fs
int3
or
push
push
sbb
das
ljmp
sbb
pushl
lcall
or
shl
stc
inc
pop
stc
pop
aam
mov
stc
mov
dec
das
call
xchg
pusha
movsb
mov
mov
sti
cld
gs
das
test
test
mov
pop
out
adc
imul
pushl
outsl
pop
jo
aaa
rcll
call
in
sub
xor
and
lcall
ljmp
ljmp
pop
and
or
or
fimull
iret
decl
in
or
cli
stos
in
adc
pop
and
mov
mov
sbb
jo
incl
mov
stc
aad
dec
in
pop
sub
std
xor
in
test
xchg
cmc
fstl
daa
fdivr
adc
pop
test
xor
jmp
pop
sbb
jbe
and
iret
scas
mov
pop
jmp
icebp
enter
add
and
lods
repnz
std
pop
push
sub
inc
or
call
mov
sbb
insl
adc
jmp
jnp,pt
push
sub
dec
fisubl
pop
loope
test
jg
cli
xchg
xchg
sbb
jg
sbbl
push
add
and
pusha
sahf
icebp
ss
jl
inc
insb
push
pop
loopne
in
jmp
ficompl
pushl
push
lret
xor
push
lret
cmp
mov
sub
ds
mov
add
shrl
nop
mov
mov
push
loopne
adc
add
mov
inc
cmp
pusha
add
incl
sbb
inc
mov
sub
xor
mov
sbb
cs
mov
ljmp
roll
cmp
cmp
sub
pushl
loope
inc
rclb
mov
add
cld
fdivrs
mov
cmp
inc
loopne
inc
out
shlb
in
push
fnstenv
push
pusha
ljmp
push
int3
mov
add
mov
mov
mov
mov
pop
push
test
in
loope
fldenv
dec
inc
jg
cmp
pop
hlt
call
jmp
lret
ja
pop
outsl
sbb
shlb
sub
shl
and
outsl
cmp
lcall
mov
sbb
and
sub
jbe
pop
adc
pop
sub
fdivr
scas
push
lock
mov
bound
sbb
cld
arpl
jg
je
fsubrl
fstpl
fcmovu
ds
lock
addb
mov
insb
test
cwtl
ljmp
clc
call
lock
stos
xchg
scas
sub
sarl
xchg
addr16
xor
or
pop
adc
fdivrl
decl
test
in
fldenv
sub
fnstcw
sbb
loope
or
push
out
add
aaa
fildl
mov
mov
ret
and
jne
pop
xchg
adcb
incl
pop
movsl
test
ret
or
imul
mov
cli
sub
in
xchg
mov
cmp
ljmp
pop
push
pop
jb
aam
cwtl
out
jecxz
in
pop
ret
enter
push
add
pop
push
into
lcall
or
jns
xor
adc
bound
jp
sub
inc
aaa
pop
cwtl
jns
fmuls
lahf
sub
push
test
mov
jne
mov
pushf
sarl
inc
mov
js
pop
fisubrs
pop
sub
adc
mov
add
push
rcrl
mov
adc
mov
inc
mov
lcall
mov
inc
xchg
lahf
jne
jb
loopne
mov
aaa
and
jmp
clc
inc
clc
shlb
dec
pop
mov
cltd
adc
sbb
call
pop
call
lcall
int
mov
adc
je
push
loopne
mov
sti
ret
mov
jae
mov
rol
les
incl
repz
gs
lods
cld
dec
out
or
cli
insb
jl
adc
sbb
pop
call
mov
xchg
jmp
dec
neg
push
cli
dec
or
or
fs
popf
ror
ljmp
inc
cli
push
decl
popa
fwait
rclb
pushl
mov
add
test
jmp
xchg
jne
adc
cmp
dec
push
cld
sbb
pop
sub
jg
mov
ljmp
jmp
jno
mov
mov
std
lahf
add
lds
call
mov
int
test
cs
dec
sub
adc
jno
add
sbb
cli
dec
jb
dec
data16
inc
fwait
test
pop
cmc
xchg
stos
push
test
out
lods
inc
das
enter
pushl
js
lcall
mov
mov
inc
aam
push
dec
std
or
sbb
and
mov
lcall
dec
loop
clc
cmp
pop
jl
cwtl
mov
out
aam
mov
cmp
das
xchg
dec
shr
pushl
push
jae
inc
rcrl
mov
mov
or
mov
dec
out
add
sub
dec
clc
mov
aaa
add
adc
push
pop
pop
out
bound
incl
loop
ss
stos
sbb
aas
cmp
inc
xor
mov
std
jp,pt
mov
or
aam
adc
out
lods
lcall
enter
mov
add
add
pop
and
cli
ret
push
loop
stos
insl
movsl
inc
rcrl
jb
adc
dec
fsubrp
sub
pop
icebp
inc
sub
std
repnz
sub
or
mov
inc
pushf
dec
enter
cmpsl
xor
push
popa
sbb
xor
stos
bnd
call
movsb
lcall
data16
data16
and
stos
push
xchg
fbstp
push
dec
sub
call
jmp
lret
mov
lcall
inc
lea
push
cld
insl
xor
shrl
mov
mov
jg
into
shrb
cmp
nop
sub
or
sbb
dec
movsl
fisttps
adc
push
sub
test
xchg
scas
mov
inc
gs
xchg
js
cmpsb
xor
cmp
rcll
fldt
cmp
mov
or
adc
pushf
rclb
pushf
mov
lcall
lods
xchg
fmul
loope
cmp
adc
jnp
push
pop
cmp
and
out
mov
fldl
das
dec
lcall
test
push
cli
stc
rorl
add
outsl
add
fsubs
jecxz
std
mov
xor
mov
add
fsubrp
jmp
sbb
and
fs
mov
xchg
scas
scas
hlt
adc
movsl
push
pushl
cmp
mov
inc
push
call
testb
inc
dec
es
adc
lcall
or
std
faddl
test
dec
or
sbb
iret
call
pop
xlat
out
mov
push
add
fisttpll
pusha
sti
jg
cmp
incl
push
jg
jne
jbe
push
pop
out
ficoms
add
aam
xor
insl
sub
mov
fisubs
and
add
prefetch
cmpsb
and
dec
xor
sbb
mov
jno
push
cmp
add
add
jns
xchg
sub
ret
arpl
daa
movsl
mov
or
repnz
ljmp
sbb
inc
mov
pop
sti
mov
movsl
dec
decl
cmp
dec
sbb
sub
mov
int
add
in
cs
mov
cld
mov
fs
push
mov
jb
mov
movsb
mov
adc
pop
jl
mov
mov
shlb
outsl
sbb
clc
popf
fldt
mov
incl
sub
xor
dec
xor
js
popf
adc
and
mov
pop
ret
mov
shrb
xchg
je
mov
jg
je
fwait
mov
mov
add
ljmp
pop
leave
aaa
kmovw
or
sar
lcall
add
xchg
add
xor
jecxz
cmp
lods
dec
inc
repnz
cwtl
arpl
clc
mov
pop
cmp
jg
fidivs
adc
pop
or
popa
mov
jmp
jge
ret
clc
lods
jnp
inc
jbe
mov
inc
call
mov
hlt
cs
cmc
in
jnp
lcall
les
outsb
pop
pop
mov
std
loopne
inc
mov
jmp
xor
push
imul
fists
dec
inc
push
push
xchg
xchg
ss
stc
pop
out
adc
pop
aad
shlb
push
repz
lds
jbe
mov
jb
bound
and
incl
xchg
lock
dec
pop
lahf
xor
xor
lock
push
aas
pop
dec
xchg
jne
ljmp
out
cmp
push
sub
lock
loopne
incl
pop
rcl
clc
sub
popf
mov
ds
call
dec
std
dec
outsb
into
push
add
mov
incl
xchg
cltd
dec
lock
in
dec
das
mov
out
std
movsl
ds
mov
lock
cmp
leave
cmp
lcall
popa
mov
jge
dec
pop
scas
cmc
jg
lret
fwait
std
mov
dec
sbb
aaa
inc
clc
add
sbb
clc
int3
push
addr16
cmpsl
aaa
mov
es
mov
push
mov
adc
aas
out
incl
dec
jmp
inc
pop
push
loope
mov
add
xor
int3
or
dec
andb
dec
lds
add
mov
stos
dec
or
xchg
inc
jmp
jns
aas
jmp
xor
insl
push
cmp
cmc
jl
fwait
pushf
decl
or
push
fcmovu
inc
stc
lds
jecxz
mov
jne
imul
ljmp
mov
sar
aaa
adc
dec
pushl
movsb
push
jmp
rcrb
lcall
loop
mov
and
std
push
rclb
pusha
shlb
or
inc
outsb
outsl
fldcw
adc
pop
les
aaa
and
jae
stos
lcall
ret
roll
std
cmp
cmp
subb
incl
xor
in
incl
pop
xchg
mov
sahf
adc
mov
jns
cmp
ret
push
fsubs
dec
mov
icebp
jmp
sbb
xor
inc
push
mov
pop
int
pop
sti
push
lods
dec
push
push
jmp
xor
jb
inc
cmpsb
mov
inc
lds
fdivrs
fsubp
cmp
lods
repnz
jns
shl
mov
mov
pop
mov
test
fistpl
adc
push
fistps
js
popf
cmp
decl
hlt
call
jmp
fistl
insl
rolb
mov
add
scas
cmp
jmp
shll
xor
push
lcall
mov
xor
hlt
jge
jp
fmul
iret
js
xchg
incl
cmpl
pop
dec
jb
in
sub
pop
push
lret
clc
daa
sub
jb
negb
pop
mull
inc
les
call
fisubrs
clc
dec
and
cli
in
or
lcall
ret
or
jp
and
pop
bound
scas
decl
or
push
fisttps
pop
fs
mov
das
ss
in
and
bound
mov
test
push
cltd
fildll
bound
pop
stc
sub
xorb
lcall
sbb
pushf
incl
sub
hlt
repnz
imul
xchg
bound
adc
sbb
jnp
adc
lods
stos
js
dec
test
lcall
push
pop
loop
fld
xchg
add
icebp
cwtl
sar
popl
addr16
call
adc
jae
imulb
ljmp
ljmp
push
add
pop
aad
into
je
out
iret
pop
mov
in
dec
sar
cmp
aas
sbb
fbstp
dec
xorl
adc
int3
jle
inc
frstor
stos
inc
pop
cmc
int3
jecxz
loope
mov
add
and
or
popf
cs
mov
insl
mov
push
ljmp
mov
xor
push
outsl
add
mov
xbegin
pop
cmc
inc
jnp
imul
hlt
sbb
sbb
and
cmpsb
jae
movb
sbb
jmp
mov
pusha
mov
mov
ljmp
pushf
call
add
cli
inc
addr16
add
pop
psllq
outsl
jmp
dec
jle
mov
ss
out
jmp
nop
subl
arpl
xor
sub
jno
inc
cmc
ljmp
jp
and
stos
in
cltd
pushl
xchg
outsb
lret
mov
mov
das
add
fdivrl
jg
and
pop
jns
add
popf
push
in
lds
push
cmp
xchg
mov
pusha
cmpsb
or
ud0
mov
in
out
xor
lret
xor
scas
icebp
cltd
jb
jmp
mov
xor
add
dec
cs
mov
pop
out
pushl
lret
mov
add
add
mov
xor
inc
cmpsl
pushl
mov
dec
adc
xchg
lret
in
fbstp
ret
loopne
fcomp
xchg
cmp
lcall
pop
ss
dec
pushl
sbb
cmp
div
fwait
mull
or
cmp
inc
hlt
add
inc
jg
ret
push
daa
pushl
mov
cmp
pushl
dec
jg
std
xlat
adc
test
cmp
sub
mov
cltd
lods
in
jl
push
pop
aad
jmp
les
inc
je
and
mov
lods
pushl
mov
fiaddl
loop
cli
rcl
enter
push
jne
push
mov
call
decl
rcrl
mov
pushf
cmp
imul
cmp
xchg
push
cmp
jne
xchg
clc
shl
bound
sub
scas
push
lods
out
push
add
jo
testl
sbb
xchg
int
callw
mov
add
push
mov
pop
js
cltd
ror
inc
cli
in
mov
xchg
sub
xchg
movsb
icebp
dec
mov
inc
lret
cltd
mov
pusha
lods
fmull
push
sti
jl
movsb
mov
cmp
imul
stos
dec
cli
jbe
dec
xlat
cmpsl
push
jns
mov
shll
sbb
bound
call
adc
pop
pop
or
jmp
mov
inc
popf
into
adc
jbe
mov
nop
std
pop
pop
sti
cwtl
in
mov
mov
cmpsl
js
push
lock
jbe
inc
jp
inc
nop
jae
push
bound
add
mov
repnz
push
lcall
pusha
cwtl
and
loop
shrb
mov
insl
pop
ret
pushl
hlt
xchg
cmpsl
je
decl
or
loope
mov
adc
push
inc
lcall
adc
repnz
imul
sub
mov
lds
fcomi
sbb
mov
mov
cli
in
inc
or
pushl
pop
stc
pusha
mov
fs
iret
xchg
fwait
or
shlb
mov
sub
sahf
fiaddl
adc
mov
sbb
fistps
lock
addr16
ds
push
sbb
hlt
mov
out
mov
xor
xchg
sub
xor
es
shlb
push
scas
incl
in
out
outsl
sbb
movsl
incl
jne
inc
pushl
pusha
ds
test
inc
shll
mov
arpl
xchg
das
popf
pop
mov
sbb
negb
out
xchg
call
mov
inc
dec
jae
decb
mov
mov
mov
cmp
cmpsl
sub
dec
xchg
cli
mov
mov
lock
clc
ja
jp
ja
out
inc
sbb
popa
jl
mov
jns
inc
fsubrs
iret
mov
xor
mov
decl
sbb
pop
call
insb
cmp
inc
jmp
adc
ljmp
fwait
lds
lods
in
jmp
add
mov
clc
decl
push
push
inc
jl
cli
mov
mov
xor
call
inc
pop
push
andl
jbe
shrl
aam
cmp
add
pop
push
push
movsb
jae
fnsave
jp
and
adc
dec
jmp
pushl
into
test
cli
dec
dec
stos
lcall
mov
clc
mov
icebp
inc
call
lds
pop
incl
pop
jp
push
fldenv
fnstenv
aaa
scas
sub
aas
dec
incl
loopne
add
test
xchg
je
callw
notb
and
adc
movsb
push
in
test
push
stos
adc
mov
pop
inc
mov
clc
push
out
mov
add
lahf
or
fadd
xchg
mov
mov
lods
mov
inc
mov
sbbb
scas
out
push
pop
mov
idiv
push
aad
and
push
incl
popa
and
hlt
mov
cmp
xor
cwtl
or
neg
mov
xchg
cmp
xchg
lods
mov
push
jmp
push
fsubs
mov
stos
xchg
subb
scas
lock
cld
lock
aaa
rorl
lock
int3
js
mov
or
push
call
mov
lret
mov
xchg
xchg
inc
mov
xor
negl
call
int3
inc
in
dec
mov
ficoms
mov
popa
mov
das
push
cmp
or
lods
shrl
das
mov
add
push
add
in
shlb
shlb
scas
int3
fimull
sbb
pushl
xchg
and
push
sbb
rorb
jmpw
or
xor
popa
sub
daa
push
int
test
mov
xchg
xor
pop
out
mov
and
mov
sbb
jge
daa
adc
adcl
test
push
cli
fnstsw
std
sbb
lcall
jge
aas
jmp
mov
fmull
imul
xor
xlat
ret
fldenv
mov
or
jb
das
pushl
test
cmpsb
iret
ljmp
xor
test
ja
fcmovnbe
dec
and
ljmp
pop
adc
test
ds
std
shlb
outsl
or
lock
cmp
in
jmp
gs
hlt
cld
xor
fnstsw
mov
sub
dec
pop
push
pusha
call
push
xchg
pushf
xorl
loope
arpl
pop
aas
push
dec
xor
jp
add
scas
test
shrl
lock
pusha
movsb
outsl
out
add
sbb
sbb
or
decl
xor
lcall
ljmp
mov
adc
sbb
inc
xchg
ret
jae
data16
andl
sub
dec
in
sbb
sub
leave
cmp
mov
cwtl
popa
jecxz
push
mov
sub
or
inc
jmp
out
out
push
sub
stc
inc
fcmovnbe
cmp
pop
rcll
xor
sbb
xchg
jp
loope
mov
sti
pop
scas
test
jno
xchg
add
dec
push
sub
call
pop
out
insl
dec
pushl
sbb
sub
clc
lock
ljmp
sahf
sbb
hlt
mov
or
das
filds
cli
out
std
sbb
out
popf
lods
xor
in
push
sbb
out
fsts
cld
clc
and
mov
pop
rcr
add
ja
mov
jecxz
xor
dec
lock
adc
xchg
mov
sub
push
loop
jo
lret
xchg
jg
fwait
pop
lods
jmp
xchg
ljmp
and
sahf
xorl
and
and
stos
loop
xor
or
jnp
add
mov
negl
pop
mov
hlt
jbe
sub
pop
push
dec
enter
dec
aad
mov
std
dec
cld
pop
push
add
ja
mov
mov
jns
mov
adc
lcall
push
lods
in
dec
cli
xor
pop
pushl
mov
jno
mov
adc
dec
xchg
call
es
out
fstpt
jp
lcall
add
ljmp
dec
repz
cli
sub
mov
xchg
mov
add
dec
das
jmp
and
neg
das
mov
pushl
in
mov
mov
addl
dec
movsl
sbb
subl
mov
roll
push
ds
xor
mov
punpcklbw
pop
mov
mull
sub
cmpsl
and
mov
pop
loop
ljmp
cli
fisttpl
popf
mov
cmpsb
adc
dec
aas
lahf
adc
and
dec
push
or
insl
sub
push
mov
aas
jg
lret
jne
adc
mov
xlat
lock
scas
cld
int
xchg
nop
gs
xorl
inc
inc
jp
lcall
outsl
push
xchg
jmp
pushl
stos
insl
jg
pop
fcos
movsb
sti
pop
cmp
sarb
jg
adc
outsl
fxch
and
push
sbb
mov
add
idivb
inc
clc
lcall
fildll
daa
push
lret
inc
dec
hlt
fimuls
pop
mov
pop
add
fsts
ret
cld
imul
or
inc
adc
push
cmp
sar
pop
jge
mov
sbb
or
sub
adc
jmp
in
jp
jns
add
lret
add
sarb
in
sbb
sbb
push
jmp
jg
cmpsb
jg
scas
cwtl
std
lock
inc
dec
insb
outsl
pop
shr
inc
test
cmc
test
lea
addb
nop
lcall
cmpsl
lods
fisubs
lret
fs
mov
pop
add
incl
sub
jmp
roll
cli
cltd
pop
fistps
inc
scas
lcall
cwtl
mov
call
jp
mov
mov
cmpsb
mov
push
ror
inc
call
fisubs
adc
xchg
sub
lret
mov
aam
dec
movsb
xchg
cmpsl
cmc
lock
jo
mov
inc
hlt
push
jae
and
insl
adc
pop
adc
in
rcr
daa
jbe
mov
dec
in
jns
mov
or
mov
sub
pop
stos
inc
decl
or
subl
jns
sub
pop
jg
adc
incl
shl
mov
jmp
push
aaa
mov
incl
mov
out
sar
mov
or
cmp
jo
ret
aaa
xchg
mov
inc
add
out
scas
jmp
xor
pushf
jmp
xchg
cli
int
fwait
mov
jmp
push
push
call
push
idivb
or
pop
pusha
into
test
loop
cmp
test
xor
push
into
pop
dec
jecxz
decl
fwait
xor
fdivr
jmp
jbe
pop
mov
xchg
inc
jo
aam
mov
fwait
lods
cmp
sub
and
shll
sti
call
out
insl
or
jmp
jle
adc
iret
lcall
cmpsb
pusha
xchg
sbb
call
fisubrl
repnz
popl
ljmp
hlt
cmp
outsb
jp
pop
dec
frstor
flds
call
jle
jmp
cmp
dec
lcall
jb
nop
jecxz
xchg
lea
or
xor
lret
push
rcrl
incl
lret
popf
pushf
jbe
test
jecxz
adc
das
int
mov
fimull
and
add
sub
xchg
push
mov
inc
mov
cmp
movsl
aam
mov
push
jns
cli
add
mov
lods
jmp
cmp
or
sbb
mov
test
cs
icebp
clc
inc
scas
mov
jne
repz
push
stos
pause
addr16
fldl
fbstp
mov
sub
out
cmc
add
xchg
rclb
push
lcall
lods
xlat
cld
lcall
dec
cmc
inc
divl
cwtl
pop
out
popa
cli
jmp
jg
mov
xchg
mov
push
jb
add
nop
push
ljmp
or
decl
mov
mov
movsb
jmp
mulb
jecxz
inc
lcall
pop
or
cmp
or
cmp
cmp
cltd
movsl
sti
lcall
and
mov
jmp
xor
mov
jge
add
daa
repz
incb
jecxz
pop
shlb
jmp
popl
insb
shll
and
pop
mov
das
movq
lret
rorb
dec
int3
jns
in
cmp
inc
rorl
ljmp
movsb
popa
test
inc
pushl
enter
mov
xorl
adc
pop
decl
inc
sbb
push
sbb
outsl
ret
ror
dec
xchg
cmpsb
sarl
and
pop
fsubrl
jle
loopnew
sub
sub
jmp
icebp
inc
fdivrl
stos
pop
inc
jg
decl
testb
xchg
jle
mov
push
jnp
loopne
sbb
shr
jge
sub
xchg
sbb
in
sarb
decl
sub
lcall
sub
pop
loope
add
mulb
movsb
xchg
call
dec
hlt
inc
push
mov
push
jmp
add
in
in
fnstcw
cwtl
dec
ficomps
cli
mov
mov
std
int3
jae
rcll
dec
mov
loopne
fisttps
clc
push
mov
sub
out
mov
mov
popa
sahf
incl
sbb
rorl
add
jbe
pop
jno
decl
mov
cltd
call
cltd
outsb
loope
ss
jmp
mov
pop
pushl
repnz
fcom
cmp
int3
fisttpl
xor
cld
mov
sti
ret
data16
pop
sub
int3
cld
sbbb
out
mov
adc
aam
out
mov
push
jmp
add
pushl
dec
stos
std
rclb
jnp
jl
mov
adc
dec
push
sbb
pushl
bound
or
sbb
imul
mov
pop
jne
and
ret
push
enter
mov
out
pop
sub
cmp
cld
incl
aaa
cltd
cmp
in
cmp
daa
icebp
idivl
cli
or
rcll
push
add
pop
adcl
pop
shrb
or
xor
daa
mov
inc
insb
inc
cli
in
stos
add
in
fildll
push
pop
xor
pop
inc
loop,pn
and
movsl
push
xchg
add
cmp
aaa
xchg
adc
cld
jne
fists
push
loop
movsb
fs
repnz
cmp
inc
std
scas
dec
fsubs
jae
xchg
sbb
rcll
loopne
adc
jmp
daa
dec
cmp
xor
cmpl
mov
push
jb
dec
push
mov
sub
sarb
xchg
incl
push
stos
and
fbstp
lds
mov
and
nop
pop
xchg
call
pop
fwait
sbb
les
xchg
test
test
in
pushl
xchg
push
rclb
mov
ljmp
jg
push
mov
hlt
sbb
out
sbb
inc
xchg
in
mov
mov
dec
aam
test
cmc
ljmp
mulb
adc
sub
popa
dec
push
call
ljmp
dec
movsb
mov
xor
leave
jo
ljmp
pop
inc
add
arpl
sar
mov
std
push
sub
js
cwtl
adc
sub
jns
mov
dec
imul
mov
mov
or
jle
insl
pop
pushf
push
inc
outsl
adc
add
xor
push
in
jg
insb
insb
imul
decl
fstpt
lea
cmc
inc
mov
adc
int3
test
lds
mov
xor
jmp
xor
dec
or
pusha
sub
xor
or
mov
cmpsl
aas
inc
xor
call
mov
adc
dec
int
jmp
and
bound
je
or
dec
hlt
ret
icebp
adc
xchg
xchg
out
mov
inc
fdivr
mov
iret
mov
pop
mov
xor
rclb
add
push
xor
dec
js
inc
inc
rolb
mov
les
push
js
les
mov
out
test
outsl
adc
ds
pop
xorb
lcall
or
decl
rcr
std
insl
aad
push
cmp
mov
xor
inc
lahf
jne
popf
dec
jp
std
dec
lret
or
push
pop
sub
aam
jmp
add
xor
pop
mov
dec
xchg
call
mov
testl
dec
xor
loopne
xchg
call
mov
fwait
sub
push
or
sbb
sbb
je
stos
hlt
xorw
testl
ljmp
fwait
pop
xlat
stc
aas
rcll
decl
dec
jmp
pop
out
jne
mov
add
adc
call
test
call
mov
popa
into
mov
mov
fistl
push
cwtl
decl
test
cs
test
and
lea
jmp
lahf
lock
or
mov
stos
gs
mov
cwtl
cmp
ljmp
inc
clc
inc
mov
xor
out
jmp
sbb
ljmp
push
repnz
call
out
add
jo
cld
clc
jnp
aas
jp
outsl
test
push
cmp
cltd
mov
icebp
xor
mov
xor
fwait
adcl
jg
es
movsb
jmp
jg
cmpsb
jb
outsl
and
lock
push
ficoms
inc
jbe
out
decl
je
add
jl
pop
and
lret
decb
loop
and
aas
mov
push
jns
call
ljmp
mov
push
and
mov
testl
sub
pop
out
sahf
addr16
bound
inc
xchg
pop
lcall
cli
dec
ret
lods
lock
inc
out
dec
push
mov
insb
loope
xlat
mov
lcall
pop
push
mov
out
sbb
push
or
adc
mov
repnz
stos
fdivl
ud2
loopne
mov
push
dec
dec
mov
test
dec
push
lods
hlt
call
enter
xchg
incl
les
sub
or
or
pop
in
mov
inc
fidivl
jmp
lea
sahf
insl
les
cmp
xchg
add
dec
loope
dec
sub
dec
outsb
sti
push
mov
std
jns
mov
ljmp
jmp
adcl
pusha
mov
stos
jbe
push
lock
scas
decl
mov
pop
jns
idiv
movsl
jae
sub
sub
dec
rolb
imul
repnz
push
mov
lcall
inc
movsb
adc
gs
aad
out
push
test
ljmp
sti
dec
mov
inc
cltd
pop
jge
pop
inc
lcall
fdivl
xor
cmp
loopne
hlt
push
xchg
out
jnp
rcrb
inc
xor
nop
mov
nop
lds
mov
repnz
call
sub
incl
loop
mov
cld
xchg
mov
or
test
cmp
es
cmpl
leave
addr16
mov
dec
rol
test
fcmovnbe
jmp
out
fnsave
cmp
imul
in
testb
add
xlat
mov
loop
xchg
mov
mov
sarb
push
pop
aas
push
in
xor
pop
xorb
stos
mov
fcoms
in
adc
loope
fwait
pop
xor
les
popa
mov
fsts
stos
mov
faddl
jo
stos
insl
rcl
xchg
scas
pushl
in
jmp
sub
cmp
push
dec
cmp
mov
and
dec
pop
sbb
arpl
hlt
jns
cs
lret
cmp
popf
cmp
sbbb
inc
mov
pop
mov
fldl
imul
jnp
mov
rorl
aam
xlat
fisubrl
jnp
xchg
push
mov
insb
dec
or
fnsave
stc
int3
add
leave
adc
icebp
incl
fidivrs
repnz
loop
mov
incl
mov
xorl
or
jg
mov
mov
test
sbb
das
sub
or
scas
mov
pushf
push
ja
inc
mov
xor
or
daa
dec
pop
dec
sbb
lcall
adc
adc
imul
sub
add
cmp
mov
mov
xchg
add
sub
jle
or
fdivrp
mov
imul
in
div
xor
movsl
xchg
insl
ret
pushl
dec
sub
jmp
lret
fs
xor
roll
mov
les
jl,pt
xchg
jae
fildll
in
sti
pop
fwait
in
jmp
cmpsb
adc
jp
scas
mov
rcrb
xchg
jmp
cli
push
ret
sbb
ret
push
faddl
mov
xchg
mov
popf
in
inc
mov
mov
std
pop
orb
hlt
lcall
cli
xchg
leave
jmp
push
cltd
test
shrd
mov
sbb
leave
mov
mov
fists
fildll
adc
jb
xchg
lret
dec
icebp
pushl
leave
pushf
cmp
sbb
rep
sub
sub
imul
sar
or
or
jmp
pushf
shll
repz
xlat
push
sahf
push
adc
sbb
ljmp
es
adc
ja
call
xchg
lods
lcall
mov
adc
ret
ds
mov
movsl
out
lcall
xchg
adc
mov
sbb
inc
dec
push
mov
in
pusha
fisttpll
xchg
add
dec
lds
xor
out
int
sub
jl
inc
std
jmp
fldcw
das
loope
std
xor
mov
cld
jle
pop
dec
call
test
and
fdivs
popf
sbb
or
mov
cmp
and
cmp
sub
paddd
scas
and
rol
sti
xchg
mov
add
cs
scas
dec
dec
dec
sub
mov
call
mov
and
test
and
jg
mov
cld
xor
test
dec
das
jl
dec
cmp
imul
mov
popa
xchg
inc
out
das
pop
xor
lcall
fcoms
lock
outsl
pushf
and
mov
cmp
incl
cmp
push
jmp
or
jmp
push
jnp
call
enter
popa
roll
jg
hlt
dec
mov
outsb
mov
xor
inc
sub
lret
popa
push
push
jge
pop
fbstp
push
pop
data16
jns
mov
xchg
lods
sub
push
incl
cs
stc
sbb
push
lods
outsl
and
jmp
test
testb
add
mov
push
loope
ljmp
push
flds
xchg
repnz
shll
sbb
pop
out
adc
mov
outsl
lea
in
jne
ja
mov
xchg
ljmp
int3
jnp
mov
int3
pushf
decl
jo
mov
xor
je
sub
insl
ss
jg
loopne
int3
mov
decl
jmp
cmp
push
into
std
repnz
cmp
lcall
dec
ffreep
cmp
daa
mov
sub
nop
sar
mov
xor
sub
lret
xlat
dec
jmp
rorb
dec
std
aaa
mov
pop
sbb
jns
in
jmp
push
jae
hlt
mov
adc
mov
dec
inc
or
in
std
hlt
outsl
rcrb
hlt
jne
or
mov
clc
outsb
insl
addb
pushf
fidivl
mov
pop
mov
inc
mov
sarb
lcall
fists
incl
sti
adc
jmp
jecxz
sbb
jmp
cmc
fimull
inc
sub
hlt
movsl
push
data16
outsl
xchg
std
outsl
xchg
call
dec
dec
mov
lahf
imul
test
jl
mov
jecxz
mov
aas
jg
adc
jmp
aas
fmuls
mov
add
cltd
sbbl
call
repnz
sub
das
cmp
jo
cwtl
repnz
jg
jg
lret
lock
lret
rorl
leave
mov
jno
adc
sbb
mov
paddd
sar
stos
mov
fists
out
cli
mov
or
jbe
add
fnsetpm(287
pop
lods
jbe
loope
imul
xchg
pop
out
xor
sar
pop
aam
movsl
push
sbb
decl
fldt
pop
loope
insl
jle
ss
shr
cmp
push
inc
call
or
loope
pusha
pop
fdivrp
decl
adc
xchg
fidivl
incl
cmp
adc
and
jg
cmp
out
dec
cli
add
pop
push
and
push
mov
xor
pop
je
lea
pop
jns
mov
jb
mov
mov
test
scas
hlt
ljmp
lcall
jb
xchg
lret
cmpl
in
aas
dec
jge
stc
out
test
incl
push
cwtl
jmp
ret
inc
test
lret
inc
pop
lods
call
hlt
stos
int3
add
jmp
dec
add
cwtl
scas
adc
das
mov
pop
rcll
repnz
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
pop
cld
cmp
cli
sub
inc
test
popa
inc
and
pop
rcrl
jecxz
fs
sub
fimull
fdivrp
pusha
aam
or
xchg
add
ret
fcmovnbe
xchg
test
or
ja
mov
idiv
mov
sub
cmp
pop
lea
popf
pop
rcrl
pushl
getsec
inc
mov
cmp
in
std
push
incl
add
call
clc
and
pop
popf
test
call
mov
and
vrsqrtps
fisubrs
adc
xor
iret
xchg
push
das
jl
jge
jo
out
jle
test
mov
inc
test
pop
push
loopne
xchg
xlat
inc
or
repz
mov
loope
or
loopne
cmpsl
test
rolb
ljmp
lcall
stos
jp
pushl
xchg
xchg
gs
and
icebp
leave
add
fdivrs
cmp
in
adc
dec
movsl
test
call
dec
inc
cmp
jp
insb
jmp
scas
loope
test
gs
into
pop
adc
ret
jb
or
push
call
xchg
movsb
rorl
loopne
pop
divb
pop
movsb
sbb
jmp
stc
push
gs
dec
push
or
xchg
loop
cmp
decl
and
sub
sbb
loope
mov
mov
pop
adc
or
jae
mov
xchg
mov
lret
lock
incl
or
ljmp
sub
jecxz
ja
dec
sbb
loop
jle
dec
adc
inc
sbb
sub
lds
fdivrl
out
xchg
test
sub
sub
lcall
ret
pushw
loop
mov
dec
cmp
pushf
fimuls
pop
lret
jmp
imul
jecxz
in
adc
mov
push
pop
mov
pop
lret
and
incb
or
fwait
mov
mov
inc
bound
pop
fldcw
cmp
lock
aad
stc
push
lret
lcall
mov
mov
adc
jnp
jl
mov
mov
xlat
cltd
push
jbe
pop
ljmp
jns
outsb
push
push
lds
mov
arpl
stos
jg
int3
loope
clc
pop
incl
cmp
lcall
jo
call
loop
jmp
push
add
and
ljmp
xor
cmp
hlt
inc
xor
cmc
decl
loope
ss
mov
js
lret
daa
dec
add
mov
div
bound
dec
in
push
es
imul
adc
jge
add
fsubrs
in
add
sub
push
xchg
out
mov
pop
jg
adc
pop
call
ja
sti
inc
add
jecxz
push
jmp
loop
push
jmp
xchg
push
lret
cld
out
xchg
pop
sbb
out
fimuls
mov
cli
and
iret
cwtd
dec
ds
inc
aas
ljmp
sbb
mov
xchg
cld
ds
jne
add
dec
nop
aam
sahf
dec
movsbl
xchg
int3
xor
outsl
fstps
sahf
and
popf
mov
ret
add
incl
cmpsl
adc
xor
sub
call
fwait
add
sub
inc
push
add
cmpsl
inc
jno
movsl
jge
movsl
jg
call
sbb
in
je
pop
jmp
shrb
dec
aas
cmc
test
in
xchg
jge
test
cmpsl
call
dec
je
sub
mov
push
cmpsb
dec
xchg
dec
in
push
insb
insl
sub
mov
cmpsl
jge
decl
outsl
mov
scas
add
bound
or
call
lods
cwtl
lcall
shll
push
inc
clc
fwait
push
push
mov
decl
popa
and
or
xchg
cwtl
fstpt
sbb
cmc
jg
xor
rcrb
ret
mov
push
ljmp
movsl
jle
incl
hlt
fdivrl
sub
mov
aas
lahf
sub
cwtl
adc
incl
mov
mov
in
hlt
mulb
mov
jno
pop
push
cs
xor
outsb
aad
add
jecxz
adc
aaa
push
call
sub
mov
pop
lods
ss
imul
rcrl
adc
mov
leave
stos
call
sub
push
enter
inc
adc
cmp
inc
iret
loop
mov
scas
flds
jns
jo
lcall
lcall
dec
imul
xchg
jl
jno
loope
jbe
jp
in
lcall
mov
cmpsb
icebp
movsb
mov
or
push
add
xchg
decl
fimuls
add
mov
imul
push
ljmpw
sub
fstpl
dec
imul
cmpsb
xchg
lcall
mov
lcall
popf
scas
js
or
cmp
push
fdivl
add
in
into
fldcw
loop
test
xchg
sbb
ljmp
cmp
xor
arpl
ljmp
xor
fdivr
cmp
mov
jo
and
jmp
dec
pop
subb
andl
incl
in
ret
popf
hlt
test
jmp
add
ljmp
add
test
scas
aaa
jnp
mov
sub
inc
mov
jg
ljmp
stc
inc
jbe
push
incl
adc
ljmp
lods
sub
sbb
insb
rcll
dec
inc
sar
std
inc
jbe
sub
test
cltd
dec
push
js
popf
jo
inc
adc
cmpsl
xchg
mov
inc
push
in
push
pushf
xchg
mov
xchg
push
adc
jne
mov
pop
fs
les
stos
lahf
incl
enter
xchg
adc
lods
std
adc
call
cli
icebp
push
adc
rcll
lock
mov
jg
enter
sub
es
push
xchg
cmp
sbb
ret
xor
enter
ret
out
mov
scas
sbb
add
popa
pop
call
loope
lods
and
pop
stos
sbb
data16
or
dec
mov
daa
in
sub
js
cmp
aad
pop
outsb
dec
cmp
call
xchg
notb
dec
shrb
out
lcall
xchg
push
call
cltd
mov
or
arpl
mov
or
xchg
imul
mov
fnstcw
in
add
mov
or
jae
das
adc
mov
mov
lret
and
sub
mov
icebp
xchg
mov
and
test
js
and
or
xchg
sbb
cli
in
xlat
out
aaa
je
stos
mov
pop
jbe
addr16
mov
xor
adc
leave
dec
xchg
xor
ja
dec
or
leave
xor
sbb
xchg
rol
lcall
push
jg
adcb
mov
incl
out
in
cmp
inc
pop
or
sub
sbb
jmp
dec
decl
in
dec
scas
dec
pushl
ret
mov
stos
lcall
jo
repnz
inc
sbb
loopne
stos
decl
inc
xchg
mov
incl
adc
xchg
dec
dec
inc
addl
jg
pop
aas
out
and
fistpll
mov
jbe
call
or
ret
lcall
adcl
ret
decl
scas
cmp
fldt
xchg
pop
cli
fs
stos
pop
dec
in
dec
sti
mov
int3
add
jg
enter
adc
int3
jne
add
mov
add
jmp
jb
xor
lea
aam
call
scas
sub
mov
and
stc
bound
test
push
clc
mov
shll
call
int3
mov
fbstp
repz
cwtl
leave
dec
mov
add
decl
sub
popa
mov
inc
inc
popa
cmpsb
outsl
test
push
sar
aad
mov
mov
sbb
mov
ret
ret
mov
idiv
jge
mov
jecxz
fnop
jae
ret
or
decl
inc
and
scas
into
outsb
jmp
loop
push
xor
adc
pop
mov
mov
pushf
mov
leave
mov
test
inc
pop
outsl
mov
cmp
sbb
cmp
jg
add
mov
cmp
sar
movsb
or
lret
imul
lcall
dec
aad
xchg
loope
cld
inc
fisttps
shlb
shlb
mov
jo
je
stos
aam
jb
ret
sbb
pop
repnz
xlat
inc
pusha
mov
jmp
inc
pop
jge
shll
sub
pop
cmp
gs
pop
fdivs
pop
lret
pop
ret
ret
mov
add
inc
imul
inc
xchg
mov
incl
xor
insl
enter
out
jle
pop
sub
xchg
mov
repz
incl
pop
dec
decl
js
push
out
fsubrp
pushl
jp
or
nop
jo
jmp
loop
in
push
enter
pop
iret
fisttps
add
dec
dec
int3
lcall
flds
pop
repz
gs
inc
mov
cmp
shlb
push
test
pop
xchg
inc
call
push
iret
mov
mov
jmp
or
mov
mov
push
cmp
inc
sbb
jno
pop
test
adc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
pop
je
add
sub
mov
fcomip
jmp
les
loopne
sub
or
pop
stos
xchg
lock
pop
shrl
incl
sub
cltd
fstps
mov
cmp
sbb
gs
shrb
inc
sub
insb
add
push
jmp
xor
mov
adc
pop
shll
divb
outsl
test
sbb
fidivrs
ljmp
xor
enter
mov
mov
call
push
and
add
sarl
into
pushl
mov
cld
xchg
or
sbb
outsb
aam
int
cmpsb
push
pop
addl
aam
mov
ss
mov
xor
cmp
dec
adc
sti
xor
shl
sbb
aaa
xchg
pop
aad
xor
leave
and
lcall
jbe
sub
push
cmpsb
lret
hlt
adc
arpl
push
filds
clc
sbb
hlt
cmp
shrl
adc
jg
inc
ds
mov
mov
lods
dec
push
mov
inc
fstp
inc
mov
es
jmp
insl
mov
je
jge
push
pop
pop
push
sub
push
rcll
hlt
mov
add
pop
mov
jl
jmp
dec
std
rorl
movsl
inc
inc
hlt
ss
movswl
repz
sti
hlt
addl
inc
or
add
sbb
sub
stc
cwtl
and
jb
add
dec
cld
fdivrs
jle
stos
leave
rclb
adc
jns
inc
mov
add
out
lret
jge
sar
mov
fstps
ret
pop
loopne
xor
fists
bnd
mov
mov
scas
out
js
out
jg
ljmp
int
push
add
lcall
repz
jbe
mov
mov
mov
push
jecxz
lret
mov
push
cld
icebp
xchg
adc
testl
mov
lods
cmp
push
mov
jb
push
push
fucomp
cmpsb
int
mov
dec
rcrl
cmp
pusha
jp
pop
es
dec
loope
jg
movl
dec
sub
out
sbb
das
lcall
fldenv
push
xor
pop
and
divl
jl
outsl
pop
arpl
call
aas
sbb
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
int
xchg
xor
scas
fildl
call
fstpl
add
sti
hlt
lea
add
mov
lret
pop
lea
pop
call
lock
iret
mov
or
std
cltd
insl
pushl
lods
ds
idivl
inc
insl
outsb
add
std
inc
jp
mov
movl
lock
lea
push
in
fs
sub
inc
mov
pop
ljmp
sar
ds
pop
inc
jmp
sub
cmp
dec
pop
ret
int
in
in
mov
inc
mov
fstl
sbb
cmc
jne
std
xchg
push
mov
loope,pt
int
ljmp
sahf
mov
ss
mov
repz
sub
in
push
push
jns
or
lcall
pushf
ret
js
popa
ds
pop
xchg
ret
jmp
pop
add
cld
nop
dec
ljmp
outsl
sub
decl
cmpsb
stos
adc
pop
scas
ja
stos
int3
xor
jg
les
fwait
jl
inc
data16
dec
mov
iret
divl
hlt
push
nop
jmp
mov
int3
cmpsb
packssdw
push
cmp
scas
out
xlat
xchg
call
add
popf
fistps
xchg
sbb
pushf
mov
rclb
xchg
xchg
pushl
push
sbb
pop
and
call
lock
inc
ljmp
mov
jo
push
mov
mov
in
sub
mov
into
add
cmp
pop
ljmp
call
and
orl
push
stc
das
cmp
jp
arpl
scas
dec
js
scas
xchg
test
xor
and
push
mov
test
das
cmp
jle
xor
or
xchg
xor
repz
stos
lock
add
je
jmp
lahf
lcall
outsb
jg
add
test
aas
lret
out
mov
pop
les
aas
sarb
repz
dec
aas
ret
xchg
adc
pushl
jl
push
mov
sbb
sbb
and
push
fstpt
movsl
fcompl
mov
hlt
mov
jb
mov
int3
and
movsb
push
sar
mov
nop
insl
jmp
or
cmp
cmp
xchg
xchg
fdiv
bound
shl
mov
pop
and
outsb
jp
jg
fcomps
popa
pop
test
lock
and
sbb
adc
lcall
scas
clc
push
pop
decl
dec
push
xchg
lahf
rcr
xchg
push
adc
loop
popf
add
leave
bound
mov
cld
imul
frstor
call
ljmp
aam
dec
push
idiv
or
xchg
jmp
mov
test
lock
lret
push
add
fptan
pop
adc
test
inc
ss
test
incl
sbb
mov
shlb
loopne
cmpsb
jmp
in
pop
in
rclb
xchg
dec
cmp
add
daa
inc
lcall
cs
fldcw
sbb
js
ja
mov
in
jmp
jmp
mov
aas
add
cli
call
push
lcall
jae
test
loop
divb
cmc
add
hlt
pusha
outsl
repnz
scas
jne
pop
inc
mov
xchg
xchg
sbb
add
incb
adc
popf
rclb
fucomi
aas
aam
fstl
sbb
dec
lock
aas
push
icebp
or
rcr
mov
sarb
arpl
add
inc
rcrl
mov
dec
pop
sub
jmp
pop
xchg
mov
sar
test
mov
mov
icebp
mov
or
mov
pushf
lahf
clc
push
and
mov
in
ljmp
mov
jmp
adc
into
cmp
sar
cmpsl
in
outsb
xchg
enter
data16
cmp
push
xor
jge
outsb
sarb
movsl
es
fisttps
xchg
sbb
mov
movsb
inc
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
push
sbb
aaa
out
xchg
incb
dec
cmp
inc
lods
sbb
loope
addr16
daa
out
std
in
adc
data16
icebp
xor
xchg
mov
jl
jbe
sar
lods
xchg
pop
es
sub
push
out
xchg
mov
iret
push
and
outsb
pop
pop
cmp
cmpsb
cmp
cmp
outsl
js
pop
mov
lcall
jo
dec
iret
cs
xor
sbb
cli
adc
sbb
aas
es
fcompl
std
in
sub
mov
in
jl
sub
dec
add
fcos
or
fsubl
jae
lods
repnz
cli
jae
hlt
inc
mov
push
in
xchg
js
call
adc
ret
in
call
rcll
mov
mov
std
mov
cld
mov
sub
fiadds
scas
lock
cwtl
dec
jmp
test
sar
cmpsl
mov
or
repnz
in
js
mov
lock
cwtl
int
rcrl
pusha
repnz
ja
lahf
push
movsb
movsl
mov
enter
das
mov
dec
jmp
push
mov
call
xor
daa
push
std
adc
pushl
dec
push
insl
cmp
addr16
push
test
stc
sub
fs
push
filds
inc
jmp
xchg
in
mov
clc
push
subl
xorb
lcall
sub
cmpb
xor
pushl
sub
in
inc
mov
cmc
xor
out
das
jle
fmuls
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
push
faddp
jbe
jg
cmp
jno
daa
pop
jmp
shlb
das
pusha
cmp
inc
lcall
ljmp
inc
test
pushl
stos
mov
nop
movsl
inc
incl
mov
dec
into
bound
lods
xor
xor
jmp
iret
sbb
pusha
sahf
loope
jmp
push
pop
imul
test
cmpsl
rolb
adc
sbb
mov
mov
ficoml
mov
mov
cmp
lcall
inc
mov
inc
sbbb
dec
sub
adc
jg
xchg
jg
jbe
jl
lret
aam
push
mov
aam
daa
rolb
mov
dec
xor
xor
pop
lcall
je
cltd
clc
aad
dec
fmull
mov
jl
and
and
test
movsl
or
or
ljmp
mov
xchg
les
push
dec
fisubs
sbb
pop
sub
lret
pusha
out
call
sub
ljmp
stos
adcl
mov
mov
lock
mov
call
bound
cli
imul
ss
lcall
mov
ljmp
ds
stos
decl
pop
or
fmulp
insb
add
cmc
jo
jbe
imul
repz
pop
loopne
jle
add
lods
mov
jmp
js
lock
std
xchg
jmp
jg
xchg
stos
pop
sbb
mov
jmp
stos
mov
sub
pop
pushl
mov
xor
and
sbb
imul
inc
pop
aas
inc
pop
fs
arpl
sahf
lea
ds
mov
mov
fucomip
xchg
xchg
or
les
adc
push
test
pushl
repnz
or
pop
lea
mov
popa
cli
cmp
sub
je
stc
arpl
mov
sahf
cmp
call
out
lock
sub
sbb
or
sbb
mov
jl
in
dec
cmc
mov
jmp
es
xlat
pop
aaa
push
pop
push
aas
dec
xchg
sarl
fwait
pop
or
lods
movsb
pushl
adc
add
addb
testb
or
stc
mov
sub
insb
test
movsl
insb
in
pusha
decl
outsw
cmp
jne
cld
pop
dec
jle
fildll
aam
xchg
das
xchg
or
jmp
ljmp
xchg
sbb
insb
dec
push
imull
in
movsl
pop
dec
mov
outsl
out
xchg
pop
sahf
inc
sub
mov
dec
les
lret
pop
mov
mov
adc
faddl
aad
and
xor
pop
call
pushf
dec
hlt
or
insb
inc
xor
push
sbb
and
add
mov
add
decl
or
push
icebp
cmpsl
xchg
mov
outsb
stos
sbb
jge
ljmp
push
cmp
mov
or
incl
stos
icebp
arpl
leave
xchg
rcrb
icebp
jo
aaa
aad
xchg
test
sub
and
test
push
loop
fcoml
out
sub
idivl
jmp
clc
imul
mov
pop
and
and
in
out
sbb
sub
enter
imul
loop
pop
imul
xor
dec
jbe
mov
insb
dec
decl
push
scas
in
repz
cmc
xor
imul
popa
xchg
mov
ret
int3
sub
jae
mov
repnz
rcll
insb
jo
dec
jnp
adcl
or
gs
std
sub
enter
mov
fsubrl
jg
test
fistl
dec
cltd
push
roll
test
incb
inc
out
gs
mov
ss
filds
pop
cmpsl
test
push
mov
aad
dec
fchs
aaa
mov
fstpt
mov
cld
cltd
or
notb
push
mov
pop
pop
test
push
adc
jb
and
lcall
mov
andb
xchg
add
pop
pushl
jnp
or
add
push
aam
and
movsl
mov
mov
outsb
mov
jge
inc
not
inc
inc
sub
pop
out
dec
test
mov
outsl
and
push
jbe
sahf
ds
cmp
int3
push
mov
loope
fmulp
mov
mov
sbb
icebp
cwtl
mov
hlt
call
movsb
push
enter
mov
mov
call
cmpsl
subl
xlat
jmp
lods
call
out
inc
push
inc
push
insb
mov
add
jmp
cmp
push
dec
les
nop
js
jo
ja
subl
arpl
dec
test
sti
scas
roll
push
xchg
jl
dec
jmp
and
pushl
mov
jns
mov
sahf
jmp
adc
fildl
mov
inc
ljmp
push
sbb
out
xor
ficoms
jmp
leave
xor
mov
jno
sti
fisttps
mov
inc
jmp
cmp
decb
fisubrl
insl
mov
stc
or
xchg
out
inc
jg
and
mov
mov
xor
enter
xor
cmc
sbb
addr16
loop
mov
ret
les
lret
in
lcall
loop,pt
xor
vinserti128
push
sub
lock
das
mov
das
into
idivl
and
sub
shlb
and
call
jp
movsl
js
lcall
mov
pop
push
push
jmp
decl
sbb
mov
arpl
cmp
leave
out
jmp
push
das
and
lea
stos
sub
lcall
mov
repnz
inc
stos
dec
movsb
lahf
mov
add
stc
shlb
testb
enter
rcrb
call
pop
lea
aaa
add
mov
lcall
lds
or
sahf
decl
mov
sbb
stos
cmp
push
loope
and
stos
lea
incl
lea
xor
dec
sbb
aad
jno
repz
insb
jnp
loopne
push
xchg
clc
les
aaa
cmp
inc
clc
sbb
data16
xchg
jg
in
adc
jbe
rclb
cmpsl
pop
xlat
adc
lcall
repz
ret
dec
cld
ljmp
in
std
xlat
add
inc
inc
dec
mov
xchg
ret
dec
pop
jle
hlt
lods
scas
pushl
insl
add
ret
xlat
js
and
sub
mov
pop
mov
inc
xchg
sbb
ss
push
pop
push
ljmp
incl
orb
movsl
add
loopne
pop
fidivl
test
stos
push
test
incl
or
mov
call
pushl
pop
data16
push
jle
movsb
ds
pop
ljmp
in
bound
and
inc
ret
xchg
cli
scas
nop
je
clc
dec
xchg
lods
daa
push
xor
xchg
xlat
xor
dec
jbe
decl
inc
xchg
subl
aam
xorb
push
movsb
lds
testb
mov
loopne
rol
inc
or
jne
add
adc
xchg
aas
mov
stos
mov
adc
enter
jno
mov
popf
fldcw
inc
das
and
mov
jb
or
jmp
cld
rcrl
imul
and
icebp
add
push
divl
loop
hlt
xor
pop
fnsave
incl
imul
xchg
inc
add
std
jmp
out
adc
outsl
adc
dec
call
scas
pop
mov
adc
cltd
addr16
push
dec
ljmp
xor
out
lea
loopne
repz
dec
aad
pushf
dec
xor
push
mov
sub
call
clc
rcll
test
jnp
mov
clc
inc
xchg
sti
dec
aaa
inc
les
lret
popa
fsubl
test
push
inc
aad
dec
loopne
mov
test
cmp
lds
push
aaa
out
dec
call
rcrl
test
ja
decl
xchg
adc
ja
adc
mov
sbb
notl
push
inc
fstl
mov
outsl
filds
sbb
pop
addl
mov
add
clc
pop
mov
loopne
xchg
and
lods
incl
sbb
and
push
xlat
decl
cmp
or
lods
cli
push
pop
sub
shl
lahf
add
mov
dec
push
rcrb
je
pushf
shlb
std
push
mov
push
pop
loope
add
pop
adcl
or
insb
sti
pop
inc
call
sahf
stos
lds
mov
test
stc
rcll
mov
stc
ja
and
mov
pop
pop
push
lahf
mov
sub
xor
or
popa
pop
std
mov
test
lahf
cmpb
incl
cmpsb
xchg
sub
pop
pop
incl
cmp
cmp
jnp
fdivl
jae
ljmp
push
xor
add
mov
icebp
cltd
mov
jne
dec
int3
insb
cs
clc
les
test
adc
gs
ljmp
addr16
jnp
jmp
sub
pop
cmpsb
xchg
shl
cld
mov
in
xchg
test
pop
jecxz
clc
ljmp
repz
fstl
or
mov
test
xor
mov
inc
jae
sbb
ds
mov
call
or
hlt
push
add
gs
push
jg
inc
fwait
pop
outsb
dec
decl
xchg
popf
push
lcall
in
lcall
lods
aam
push
jmp
loope
adc
into
out
xchg
add
rcr
decl
jp
imul
ljmp
ds
pop
loopne
pop
mov
loop
adc
lods
push
icebp
push
adc
mov
add
push
outsl
sbb
scas
adc
cmp
xor
test
and
mov
shll
xlat
jno
clc
movsb
sub
out
mov
sbb
fdivr
and
jae
dec
push
cld
or
push
rorl
in
inc
loopne
clc
sbb
aaa
aad
jo
push
cmpsl
call
decl
push
mov
mov
jecxz
shl
and
jp
push
sahf
jns
xor
aam
movsl
adc
cmp
ror
inc
mov
cmp
ljmp
lcall
xchg
jmp
jp
and
or
out
sub
mov
ja
cmpsl
call
xlat
mov
sarl
xchg
mov
add
aam
aaa
loopne
scas
fnstenv
pop
adc
cltd
cmp
int3
mov
xchg
pop
mov
mov
pop
sbb
call
push
fdivrp
icebp
mov
jae
mov
decb
rorb
jo
fists
mov
adc
pop
lds
ret
push
cltd
in
dec
mov
mov
push
mov
shrb
lcall
ret
adc
imul
cwtl
adc
rolb
clc
add
pop
add
pushl
mov
jmp
inc
dec
push
cpuid
mov
lods
ret
dec
lods
call
push
xor
fisttpll
inc
pop
decb
and
jecxz
or
mov
adc
and
mov
xchg
sub
push
sub
int
pop
imul
mov
xor
lods
xor
imul
jg
in
sub
mov
mov
in
or
xor
sub
inc
scas
pop
pop
pop
add
ljmp
cs
cltd
xlat
jae
push
jge
cmp
daa
xchg
push
incl
adc
mov
jae
pop
addr16
push
scas
and
sti
testl
jae
lea
cs
ja
pop
ljmp
push
xchg
mov
mov
decl
repz
xchg
int
lods
clc
cmp
adc
mov
sarl
lock
mov
cmc
inc
cmp
mov
cmc
loop
jmp
gs
fstpl
dec
cmp
sbb
ljmp
out
into
mov
xor
mov
loope
repnz
aas
pop
jne
and
inc
sti
enter
mov
pushl
cwtl
pop
cld
mov
mov
gs
shl
pop
es
dec
add
dec
jg
and
call
shlb
aas
stos
adc
inc
adc
stc
daa
movsl
jg
sbb
test
xchg
mov
fiadds
out
cs
sub
lcall
push
xchg
add
jecxz
jae
xchg
xor
notb
out
jecxz
mov
lea
mov
jg
sub
mov
cmp
jp
push
mov
cmp
and
pop
sub
pop
lods
and
mov
or
dec
rorb
dec
add
jmp
pop
fstp
aaa
pop
adc
or
stos
loopne
mov
out
in
pop
xor
xchg
data16
adc
cmpl
xchg
cs
incl
fmull
out
push
dec
fildll
pushl
sbbb
decl
cmp
jns
adc
lea
popf
call
ds
push
call
mov
or
pop
xchg
lods
adc
xor
mov
divb
lcall
outsb
ds
test
dec
mov
xor
jb
fisttpll
lret
cmp
sbb
cmp
out
jno
out
sbb
shrb
hlt
test
sub
mov
shrl
xor
test
pushl
inc
mov
sahf
mov
push
aas
xor
push
sbb
rcl
loopne
sub
push
imul
mov
xchg
xor
jle
aas
mov
adc
aam
in
adc
mov
lret
lea
rcrl
inc
add
jne,pn
cmc
xlat
sbb
inc
lcall
decl
xchg
jmp
fwait
xchg
es
mov
sub
jne
lea
mov
or
jno
cmc
cwtl
inc
nop
fdiv
jmp
sbb
int3
mov
sbb
xor
cli
loopne
mov
aas
fstpl
lcall
dec
dec
xor
pushl
inc
jecxz
pop
movsb
lret
loop
ja
nop
call
cld
fwait
in
fcom
xchg
push
mov
sarl
enter
shlb
dec
test
or
mov
jbe
push
lods
outsl
sbb
adc
or
push
outsb
push
inc
pushl
out
jns
shr
mov
fisttpl
repnz
xor
clc
dec
jno
stos
inc
fildll
add
lcall
test
mov
sub
ljmp
xor
adc
fnstcw
test
push
and
lret
push
cli
icebp
movsl
testl
call
ret
inc
mov
mov
pop
or
call
or
daa
or
adc
notb
push
nop
ret
sbbl
inc
jg
mov
jp
ljmp
mov
sti
ss
test
insl
out
sti
fiaddl
ja
adc
imul
popa
and
or
or
mov
dec
push
nop
shrl
mov
in
and
push
xchg
dec
ret
insb
push
int
sub
add
shl
out
jge
pop
inc
jecxz
mov
test
sbb
mov
call
rorb
and
adc
jl
mov
fistpll
xor
repz
notb
js
hlt
invd
icebp
imul
cwtl
mov
into
pop
movsb
movsl
decl
int3
enter
arpl
std
cmp
mov
mov
sub
addl
pushl
cmp
push
or
lods
xor
jb
bound
adc
call
xor
mov
fistps
ss
sbb
jl
sbb
in
in
aad
mov
push
lahf
adc
call
dec
nop
fdivrs
sub
mov
insb
ret
je
jp
dec
cmp
sbb
xchg
clc
adc
test
loop
pushl
push
decl
lea
adc
lahf
clc
rcrl
sbb
jbe
insb
push
push
xor
mov
push
inc
push
nop
pushf
cli
nop
fldcw
dec
push
adc
pushf
and
add
and
dec
adc
int
mov
sub
jo
es
xor
in
cmp
inc
fstpt
pop
push
push
imul
cld
xchg
sar
mov
in
cmp
jo
mov
jge
and
aam
scas
repnz
mov
mov
mov
pushf
cmp
xor
cmp
repnz
cli
stc
cwtl
xchg
incl
mov
cmpsl
cwtl
and
hlt
ds
inc
pop
aaa
je
stc
call
mov
aam
popf
xor
aaa
ja
scas
incl
cmc
push
movsb
xchg
into
inc
xor
push
push
inc
stos
push
hlt
adc
pop
dec
dec
bound
cmpsb
rcr
rcr
pushl
adc
mov
push
mov
and
lcall
repnz
ret
popl
add
jbe
adc
popa
cmp
pushl
in
or
inc
xchg
sti
jbe
push
je
xchg
ljmp
sbbl
test
andl
push
cltd
pop
push
pop
sub
push
jg
and
test
pop
lea
hlt
inc
cmc
shll
xor
jns
jne
cmpsb
dec
incl
push
out
pushl
in
mov
cld
daa
cs
mov
adc
xchg
xchg
xor
daa
dec
inc
incl
into
mov
fdivl
lret
mov
pop
fs
insb
fwait
pop
addr16
mov
in
or
push
cli
jbe
jnp
pop
xchg
stos
pusha
add
ljmp
mov
mov
lcall
or
ret
cld
cmp
lods
mov
mov
cld
or
dec
imul
cmp
incl
add
js
bound
pushl
mov
mov
jo
xor
sub
pop
pop
xchg
add
xchg
loope
or
lods
rol
hlt
ret
imul
jne
ss
loope
mov
add
mov
jmp
inc
dec
and
mov
movb
mov
fsubrs
push
stc
fwait
fwait
mov
dec
loopne
call
fsub
and
fsubs
adc
outsl
or
pop
dec
outsl
push
mov
ljmp
xor
jae
jecxz
add
sbb
lock
mov
inc
loop
mov
out
into
incl
out
sub
fbstp
cmpsb
decl
jae
push
sbb
cmp
xchg
iret
gs
sbb
call
push
push
jnp
data16
adc
cld
mov
pop
or
insl
negb
jno
and
lcall
imul
fcmovu
std
xchg
or
push
mov
jg
leave
mov
out
cmp
and
inc
and
adc
out
lods
iret
sub
adc
xchg
mov
shlb
ljmp
or
stos
in
lcall
in
lods
pop
lahf
repz
incl
ljmp
add
loop
mov
pop
fisttps
mov
jne
dec
out
push
pop
xchg
or
adc
outsb
test
loop
jbe
mov
inc
decl
mov
ret
xchg
mov
cmp
and
dec
inc
pop
decl
test
sti
or
fs
movsb
jmp
dec
inc
sub
mov
movsb
ljmp
decl
shr
push
pop
push
jge
fcom
xchg
pop
fnstenv
repz
ljmp
mov
xor
das
sub
xchg
lock
sub
out
push
mov
and
pusha
std
cmp
das
jle
pop
arpl
lds
jae
jp
jg
pop
cmp
push
lcall
adc
jnp
inc
add
jo
pop
pop
mov
xor
hlt
mov
cmp
push
pusha
mov
ret
add
pop
loope
ljmp
cmpsl
jg
mov
aaa
decl
mov
mov
mov
or
clc
lock
das
mov
sbb
addl
pushf
lods
adc
xchg
incl
and
sbb
cld
sub
inc
and
imul
mov
orb
pop
jns
ret
icebp
sbb
ljmp
push
incl
mov
add
cmp
pop
sub
lcall
pop
lea
cmpb
lahf
mov
sar
repnz
jecxz
xlat
call
ja
inc
mov
sbb
pop
jbe
test
mov
incl
aas
xchg
xor
xor
xchg
mov
inc
cmc
fldcw
stos
adc
jnp
loope
mov
dec
jg
aas
pop
sbb
addr16
or
adc
jne
mov
jmp
push
mov
cld
out
pop
dec
mov
dec
push
ljmp
lret
cmp
fdivrs
lret
jle
mov
test
mov
adc
pushl
into
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
call
or
add
xor
mov
mov
mov
inc
fs
cmp
xchg
jge
stos
out
jg
and
push
icebp
cmc
in
bound
mov
frstor
cmp
mov
and
ljmp
daa
stc
xor
stc
fidivs
aad
dec
test
mov
adc
sbb
and
std
je
xor
inc
sub
repz
dec
or
sbb
lret
or
xchg
sbb
ja
inc
std
ret
les
xchg
push
faddl
std
sub
cmpsl
push
adc
push
incl
inc
bnd
out
jmp
fistpll
test
pop
lock
lcall
jo
lahf
lcall
jae
test
sbb
std
mov
mov
pop
call
pop
dec
mov
or
aam
stos
sahf
ret
xchg
mov
jmp
dec
add
filds
int
xchg
sbb
pop
ljmp
xchg
mov
and
lcall
adc
jb
lock
jge
scas
outsl
sbb
test
cld
lds
les
subl
inc
and
mov
lods
aam
sub
pop
sub
add
pop
cmpsb
jge
fcoms
decl
cltd
ficompl
loop
insb
int3
add
mov
xor
ret
jb
clc
adc
cwtl
adc
xchg
xchg
stos
nop
call
and
aam
decl
jbe
mov
jp
fists
mov
je
arpl
outsl
xlat
pop
mov
cld
arpl
sbb
imul
ljmp
inc
inc
in
mov
mov
or
sahf
loop
in
xchg
push
test
fisubrl
xchg
fdivp
push
or
adc
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
fmul
mov
jge
push
repnz
xor
or
xchg
ljmp
adc
out
xor
rolb
fdiv
mov
lret
aaa
jnp
mov
sub
mov
jmp
in
std
pop
cmpsb
pop
addl
sub
add
inc
testb
mov
shr
mov
movsl
lcall
cmp
pop
and
add
loope
incl
cmc
xor
mov
outsl
xchg
ret
mov
pushl
inc
mov
andl
in
and
ret
clc
sar
cmc
and
xor
loop
mov
out
ficomps
call
sbb
jbe
mov
jmp
inc
add
jmp
jge
stc
jp
mov
call
jg
dec
fcomi
sub
js
loopne
out
repnz
jo
jecxz
mov
jns
in
mov
mov
dec
xor
push
test
cmp
xchg
js
shll
pop
push
movsb
adc
sub
inc
icebp
jne
and
sar
jg
mov
and
cmpsb
in
sbb
xchg
mov
int
icebp
and
into
shll
stos
push
ljmp
outsb
xchg
sub
push
in
out
lea
push
cmp
mov
je
push
xorl
dec
fcmove
adc
out
xchg
pop
mov
andl
outsb
pop
push
mov
int3
pop
incl
shrl
addb
into
jg
call
push
out
je
jg
and
sahf
cmp
xchg
adc
cmc
lods
js
cltd
sub
pop
push
aad
mov
xlat
adc
pusha
jmp
rclb
sar
data16
push
int3
jne
cs
dec
jnp
jmp
push
mov
je
loop
rorl
clc
xchg
and
or
mov
out
or
std
jo
jp
mov
cmp
cmc
xor
cmp
mul
incl
aam
push
xchg
cwtl
xor
arpl
mov
rorb
fmull
fisubrs
idiv
xchg
jne
dec
push
xor
out
add
aas
mov
cmp
call
pop
inc
sbbl
lock
add
clc
pop
jb
push
out
sti
repnz
dec
lahf
int3
pop
sub
aaa
cmp
jl
ljmp
mov
and
lea
loop
aam
xor
cld
aaa
mov
loop
cmp
mov
push
fxch
cmp
pop
mov
outsb
jb
and
jp
dec
sahf
mov
mov
mov
pusha
xor
std
mov
sbb
ret
jnp
mov
inc
nop
aad
inc
into
aam
decl
movb
loopne
aaa
call
enter
cmpl
test
out
pop
shlb
popf
clc
sub
dec
jecxz
add
mov
mov
xchg
mov
or
call
incl
jp
std
in
cs
cmp
push
arpl
ret
pop
mov
fbld
rorb
or
repnz
aas
push
stc
jmp
popa
pushf
add
mov
pop
jae
ljmp
or
ljmp
movsb
mov
decl
add
incl
or
mov
sub
iret
sar
ficompl
fstl
mov
xchg
pop
loopne
xchg
sti
xchg
push
iret
decl
xor
push
fcmovb
out
sub
fmul
pop
mov
sbb
adc
js
jecxz
shlb
nop
mov
mov
jmp
cmpb
inc
rol
adc
or
dec
dec
sbb
add
pop
lock
mov
xor
sar
xchg
pop
mov
or
jno
cmp
es
imul
lcall
push
jae
cmp
cmp
dec
shll
mov
outsl
movsl
ret
pop
sbb
pop
add
xor
pusha
stos
jnp
pop
cli
hlt
jbe
adc
pop
dec
ja
fninit
push
jns
add
mov
mov
mov
and
mov
mov
xchg
outsb
ljmp
cmpsb
mov
je
jmp
repnz
pop
ficompl
rcl
pop
aaa
cmp
ret
int3
mov
lds
std
mov
ss
xchg
pop
addr16
push
sbb
jp
into
jl
jmp
rclb
xchg
clc
into
incl
jle
inc
dec
or
test
and
das
ret
in
pop
cs
decl
in
fs
dec
mov
push
fisttpl
pushf
pushl
clc
stos
push
mov
mov
fwait
test
dec
adc
cmp
or
fwait
incl
jo
xor
scas
shrb
out
inc
int3
call
adc
lret
lds
cmp
call
sbb
rcrl
xchg
mov
push
out
cmp
ljmp
inc
fcmovnu
das
and
mov
add
je
dec
lcall
dec
sbbb
addr16
adc
loope
loop
ljmp
mov
push
aam
arpl
sub
call
sbb
pusha
sahf
xchg
vpshufhw
add
test
test
mov
and
push
pop
add
cmpb
inc
call
enter
push
adc
incl
push
test
jge
cmp
imul
das
test
dec
cmp
sbb
movb
stos
jecxz
cmc
lret
je
push
inc
lret
cmp
sub
sbb
cmovne
sbb
daa
ret
mov
push
and
and
iret
cmp
push
fwait
decl
loope
ljmp
iret
xor
call
stc
test
jg
mov
push
and
outsl
jmp
xor
inc
xchg
pushf
icebp
sahf
pop
faddp
decl
mov
pushl
stos
movsb
sar
outsb
sub
dec
or
hlt
inc
push
fdivs
jmp
cs
loope
mov
push
jnp
dec
lea
nop
and
sub
mov
aam
push
adc
dec
data16
inc
xor
jb
mov
adc
fdivrs
pop
bnd
insb
insl
cwtl
pmaxsw
aaa
push
jae
es
iret
and
and
inc
inc
lcall
inc
hlt
pop
sub
clc
mov
pop
adc
jecxz
std
dec
push
lock
adc
lcall
push
je
mov
pushf
enter
mov
inc
jl
mov
fldcw
das
iret
movsl
stc
imul
pop
pop
mov
in
jge
cmp
ss
pop
cwtl
in
mov
sarl
call
xor
pop
decb
ret
icebp
ljmp
popa
xchg
ljmp
cmp
mov
mov
sti
pop
ja
sbb
ljmp
dec
hlt
sbb
outsl
jo
rcll
dec
xchg
in
adc
cmp
sbb
in
fisubs
iret
mov
inc
cmp
fs
inc
shlb
imul
cmpsl
ffree
xor
test
push
cmp
pop
iret
jo
loope
insb
daa
jg
jo
sbb
or
mov
mov
xor
in
sbb
int3
push
lcall
mov
clc
ljmp
inc
fcomps
decl
lea
in
cli
inc
push
faddp
mov
jg
out
imul
icebp
pop
rclb
pop
daa
sub
xchg
dec
xchg
in
mov
cmp
inc
es
adc
lock
jecxz
repz
push
cmp
std
gs
test
cmp
push
icebp
inc
in
sub
dec
in
ljmp
fxch
inc
jmp
aas
mov
push
call
pop
test
xor
ja
int3
imul
xor
aad
xchg
popa
stos
push
xor
mov
fidivs
nop
fisubrs
jnp
push
mov
fildll
out
scas
adc
lods
movsl
mov
imulb
xchg
in
nop
mov
loopne
decl
mov
push
xchg
inc
lcall
loope
sbb
xor
stos
bnd
jae
xchg
pop
sbb
jb
mov
lcall
in
add
pushl
test
xchg
mov
xor
add
scas
pop
or
mov
xor
movsb
push
int3
cli
decl
push
dec
ljmp
shl
aas
icebp
mov
push
xchg
inc
mov
outsl
inc
int
push
js
or
push
pop
and
mov
scas
fcmovnbe
js
hlt
mov
jg
inc
in
out
cwtl
cmc
jge
or
sbb
push
ret
js
cwtl
std
sub
test
mov
and
or
movsb
inc
pop
call
jmp
and
add
mov
jmp
sbb
dec
inc
jmp
mov
daa
fsubr
push
ret
mov
sub
mov
xorl
test
cli
mov
imul
jle
xor
decl
test
mov
add
in
cmp
jg
pop
fs
rcl
imul
dec
jg
mov
test
xlat
ss
sbb
addr16
pop
test
call
rorl
jp
dec
push
cmp
loopne
mov
jle
pushl
das
push
clc
pusha
clc
mov
sbb
test
lahf
decl
es
jo
sti
add
jnp
pop
addr16
leave
outsb
xchg
test
out
jmp
daa
in
cmc
cs
mov
or
sub
test
mov
test
icebp
arpl
cmc
aam
jbe
aad
push
ret
call
aam
outsb
inc
xor
xchg
sbb
das
cmp
xchg
pop
inc
mov
jecxz
jne
lret
pop
insl
jg
xchg
loop
fstl
loop
or
aas
call
loopne
arpl
xor
mov
pushl
repnz
pushf
dec
jmp
push
cmp
imul
inc
cmpsl
out
jns
in
mov
lds
sbb
cld
cmpsb
fs
pop
lods
idiv
push
lahf
mov
jb
cmp
sub
decl
xchg
xor
cmp
fadd
shll
lahf
addr16
xlat
jb
outsl
or
aam
jno
rcrb
dec
sti
mov
pop
mov
add
mov
xor
arpl
ret
test
ja
add
inc
std
lods
mov
das
test
test
xchg
fidivs
mov
xlat
call
or
sub
filds
cld
jns
pop
xchg
mov
rclb
mov
adc
jmp
js
out
xchg
pop
das
outsl
adc
pusha
shrb
incl
jnp
mov
sub
jecxz
fmull
jge
push
rclb
ret
mov
mov
inc
aaa
insl
rorl
sbb
jp
ret
cltd
jle
aad
lods
repnz
incl
jns
mov
out
lods
xor
add
ds
dec
and
sbb
inc
add
scas
fs
push
outsb
out
lahf
repnz
imul
lret
xchg
push
sar
and
adc
and
inc
mov
popa
fwait
inc
aam
mov
xor
cltd
cmp
pushl
adc
outsl
roll
es
rol
xchg
cli
test
pop
mov
adc
pop
ljmp
ljmp
int3
dec
in
inc
dec
mov
test
insl
mov
insb
stos
les
and
push
int
lock
inc
push
and
xchg
mov
bound
jbe
jg
aad
fdivl
cld
pop
shl
push
or
lods
das
std
fbstp
mov
mov
addl
clc
insl
push
pop
test
pop
mov
and
loop
push
sbb
ds
push
fucomip
push
jmp
fstps
cld
mull
pop
pop
sar
mov
pop
lahf
jmp
mov
mov
jae
inc
test
in
inc
decl
fdivr
daa
xchg
fldenv
xor
or
mov
rcll
dec
mov
cltd
dec
cld
push
jmp
sbb
cmp
rcll
dec
into
jo
pop
dec
jg
sub
xchg
imulb
mov
fnstcw
mov
decl
dec
popf
mov
cs
arpl
icebp
ds
cmp
add
idivb
stos
inc
mov
xchg
inc
xor
das
pop
lcall
and
and
cwtl
loope
aad
mov
dec
or
idiv
adc
pop
and
mov
rclb
push
dec
lods
outsb
add
jmp
jbe
and
imul
mov
or
js
jne
cltd
or
jle
jmp
fisttps
push
sahf
jne
dec
mul
mov
or
sub
push
sub
jge
pop
xchg
sub
loop
xchg
add
inc
or
decl
cli
push
mov
xor
pusha
cmp
cld
sbb
call
jle
add
adc
sub
cmpsl
bound
sub
ret
call
xchg
loop
xlat
scas
cmp
mov
xor
mov
jecxz
fsubl
jmp
pushf
cmp
adc
fwait
lds
lahf
iret
daa
sbbb
mov
inc
iret
cmp
xor
mov
mov
loopne
add
pop
or
mov
mov
outsl
jle
idiv
ljmpw
xchg
pop
fidivrl
addl
pushw
mov
mov
test
dec
and
lcall
scas
jbe
ret
xor
imul
lcall
into
scas
xor
sar
push
test
inc
aaa
ret
call
test
imul
adc
fsubr
lret
xchg
inc
ljmp
push
push
insl
push
mov
dec
mov
cmp
in
mov
and
call
inc
mov
jo
push
or
aad
leave
pop
std
adc
gs
fs
and
xor
add
pop
xor
in
jno
pushf
pop
push
daa
mov
jae
lods
std
hlt
mov
pusha
adc
ret
cmpsb
cmc
dec
inc
pusha
das
mov
repz
clc
inc
push
xor
pop
sti
or
lods
pop
and
mov
in
jle
in
ret
ljmp
ss
std
cli
cmp
mov
jbe
pop
outsl
sub
mov
rorb
nop
stc
inc
call
pop
adc
int
incl
out
inc
andb
incl
mov
popf
fucomi
or
bound
jl
push
ljmp
jmp
in
insl
jmp
xor
mov
sub
aad
imul
add
in
dec
or
xor
movsb
dec
sub
aaa
cmpsb
push
mov
lcall
call
sub
dec
nop
pop
fbld
fistps
jg
stc
cltd
incl
mov
decl
or
jo
jmp
push
ljmp
jl
sub
mov
out
incl
lret
in
sbb
sar
gs
fisttpll
add
mov
and
and
std
pop
andl
xchg
push
std
jl
pop
pusha
arpl
fdivr
push
inc
mov
aas
push
mov
mov
jmp
lret
incl
xchg
add
add
or
sar
test
fisttps
mov
xor
js
or
cli
hlt
mov
addl
sub
ja
clc
cmpsb
ja
or
sti
sbb
or
jne
inc
mov
adc
jle
je
pop
inc
dec
jp
or
push
mov
ljmp
not
jo
xor
push
in
std
jae
idiv
addb
adc
decl
cmpsb
dec
dec
out
gs
ljmp
xor
xor
testb
pop
lret
pop
cli
push
xor
adc
das
sbb
cli
inc
mov
mov
jne
fdiv
pop
dec
loopne
mov
ljmp
push
xlat
sbb
push
sahf
jns
mov
xor
outsb
loopne
sub
and
cmp
mov
jp
lcall
and
pop
gs
xchg
or
ja
xor
dec
pop
pop
les
bswap
lret
decl
inc
loop
subl
js
push
cld
dec
ja
inc
call
loopne
sub
mov
es
leave
int3
xlat
jno
dec
test
adc
cld
cmpsl
mov
std
cmp
pop
pop
xchg
or
incl
adc
mov
rclb
pop
dec
int
push
movsl
lock
hlt
mov
mov
push
sbb
sbb
call
adc
fiadds
mov
mov
mov
scas
mov
pusha
test
imul
mov
inc
rorb
sub
add
or
jns
ds
scas
mov
pop
xchg
decb
movsb
decl
int3
in
jecxz
cmp
mov
push
jle
outsl
cmpl
enter
mov
cmc
cmp
and
hlt
out
pushl
bound
ljmp
les
jmp
add
add
jg
loopne
cmpsl
cwtl
aas
out
sub
repnz
sbb
mov
jle
sbb
stc
add
les
jo
cli
bound
lock
cmp
ja
adc
push
mov
das
cmp
dec
jg
cmpsb
fnstcw
aaa
mov
dec
sbb
aas
mov
mov
loope
ja
sub
loop
adc
or
call
mov
pop
jge
cmp
leave
pop
stos
jmp
loope
xor
rsm
imul
push
add
inc
push
push
push
in
jle
call
jmp
cmp
into
adc
incb
and
jb
insb
sub
imul
push
add
lea
cmp
roll
push
not
jle
push
lods
cltd
jno
xchg
sbb
lods
cmp
adc
push
sbb
dec
decl
xchg
xor
clc
scas
ret
pop
clc
fs
popa
loop
mov
aad
sti
ljmp
mov
jge
jl
shl
pop
dec
sti
incl
das
xchg
out
mov
dec
pushf
and
clc
repz
gs
repz
push
jmp
jmp
jge
jle
add
sbb
pop
outsb
pop
cmpsl
fldenv
pop
lcall
push
pushl
lods
dec
lds
fnstcw
das
ja
scas
pop
dec
adc
in
push
loopne
test
adc
jb
call
dec
loop
jle
pop
pop
mov
add
pop
popf
enter
inc
dec
jno
push
outsl
jle
imul
mov
subb
pop
sar
push
lret
mov
popa
daa
das
mov
daa
call
mov
xchg
push
cwtl
divl
jle
out
inc
sahf
dec
stc
xchg
push
jo
mov
outsl
push
mov
mov
jno
push
lcall
aaa
in
push
inc
add
out
push
mov
stos
cs
sar
mov
pop
repz
stos
pop
out
int3
pop
sbb
or
mov
jle
sarl
jmp
lcall
fwait
sbb
ljmp
pop
arpl
daa
mov
bnd
pop
push
stos
and
cli
cmp
and
fwait
ljmp
mov
adc
lcall
dec
or
pushl
mov
decl
mov
jl
dec
pop
jbe
or
or
push
jbe
fcos
xchg
mov
int3
pop
stos
add
rorb
sbb
inc
mov
mov
dec
fbld
icebp
into
cli
stos
clc
iret
dec
mov
pop
cmpsl
out
add
add
lret
aas
lret
lret
push
cmc
xchg
mulb
imul
sub
add
adc
mov
lret
std
push
shll
dec
and
lds
mov
sbb
call
fnstsw
sar
mov
cmp
repnz
incl
pop
popf
mov
jo
call
hlt
sub
push
dec
mov
sti
jmp
repz
dec
xor
icebp
cmp
pop
es
pop
ret
loop
xchg
stc
fistpll
mov
in
loopne
or
push
xchg
inc
insl
dec
lcall
mov
enter
out
inc
add
scas
mov
adc
mov
test
jg
mov
pop
inc
xor
mov
out
push
add
dec
ror
sbb
sub
mov
loop
cmc
adcb
or
clc
lcall
xchg
lods
cwtl
cmp
das
std
adc
mov
dec
call
pop
pop
push
incl
lds
adc
jae
lea
int3
aad
sbb
out
mov
or
ljmp
aad
nop
scas
or
ret
mov
xchg
into
push
sbb
cmp
pop
aam
aam
inc
pop
pop
mov
cmpsl
adc
pop
call
mov
xor
push
cmp
lds
mov
js
sti
inc
pop
cmp
addl
lods
inc
xlat
push
mov
dec
sbb
inc
inc
add
push
add
loop
mov
pop
fbstp
jmp
lcall
pushf
dec
addr16
xor
xor
push
xor
outsl
push
mov
lcall
jg
les
stc
adc
or
xchg
xchg
test
or
add
jns
dec
movsb
in
filds
mov
dec
inc
decl
fmul
sbb
int
mov
push
jno
jmp
pop
mov
inc
stc
xchg
incb
push
and
aad
xchg
cmp
decl
out
scas
and
aaa
xor
dec
shlb
jecxz
push
test
jle
nop
sub
adc
add
pop
ret
or
das
inc
xchg
inc
inc
jmp
mov
cld
test
push
dec
cmp
mov
mov
insb
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
rcr
push
or
in
insb
ret
mov
sbb
and
mov
dec
ret
push
call
test
or
mov
cmp
je
cmpsl
mov
jbe
sar
adc
inc
sbb
cmc
jl
ljmp
or
and
push
mov
pop
outsb
aas
fisubrs
bt
in
testl
movsb
xchg
ljmp
test
push
jge
pop
mov
lcall
add
sahf
xchg
and
push
inc
jae
and
mov
daa
xchg
daa
inc
rcl
xor
inc
insl
jmp
jbe
fistpl
adc
push
jmp
sbb
jo
push
std
ret
adc
xor
sub
pusha
sbb
mov
je
push
dec
repnz
lock
and
mov
decl
cmp
dec
mov
cmp
inc
rep
mov
mov
decl
inc
pop
lret
cmp
test
mov
push
pop
decl
out
cmp
jmp
fisubl
out
gs
push
sahf
loop
insl
push
fbstp
mov
sub
fldenv
push
mov
inc
jns
lock
cmp
or
inc
rcr
mov
or
mov
mov
cmp
add
fdivrs
fstps
mov
lcall
jg
adc
push
incl
lahf
js
repnz
ljmp
mov
pop
outsb
outsl
jo
out
clc
sbb
int
shlb
xor
incl
jbe
push
push
cld
test
loop
xor
sarl
lds
inc
cmp
pop
pop
push
sbb
mov
sub
cli
je
fs
repz
pop
push
mov
push
cld
je
mov
or
clc
mov
inc
xor
cld
mov
mov
fstpl
movsl
stos
loopne
mov
cmp
decb
int
push
stos
and
adc
dec
rclb
fldl
lcall
adc
pop
pop
jmp
jae
pop
sbb
cmp
cmpl
push
aas
test
inc
push
cmpsl
stos
mov
shll
test
or
gs
shrl
jnp
pop
jae
xchg
icebp
or
jge
lahf
mov
rcll
jne
xor
ljmp
inc
ljmp
or
call
jb
test
sub
psubw
incl
rcrb
push
test
pop
inc
cmc
xchg
shl
enter
std
mov
adc
or
xchg
ljmp
or
incl
ja
sub
push
add
sbb
xor
push
or
jnp
adc
dec
std
push
inc
pop
in
outsl
jp
sub
mov
mov
shl
movswl
lret
jl
xchg
stos
and
dec
leave
pushl
xor
jo
test
ljmp
rcll
jns
pop
or
out
js
ljmp
and
cmp
jp
pop
pushf
inc
mov
jae
int
push
sbb
into
mov
mov
jnp
add
mov
xor
out
pop
or
ss
push
decl
lods
stos
testb
scas
repz
popf
jno
pop
lods
testl
adc
pop
pop
sub
std
fistl
in
or
decl
es
sahf
mov
jg
mov
dec
pop
cmp
mov
lods
outsl
ja
dec
insl
sbbl
fdivr
adc
and
pop
insb
pop
decl
or
inc
mov
call
fwait
pop
fcom
mov
jne
out
push
int3
inc
call
rcll
hlt
clc
std
popf
mov
jb
sar
je
out
insl
sbb
xor
lods
int
pushl
shr
inc
pop
out
mov
sbb
mov
jmp
stos
push
in
loop
jmp
add
fwait
jle
add
rep
xor
mov
aaa
in
sub
stos
loopne
cmp
pushf
cmp
adc
mov
decl
inc
or
test
test
adc
push
movsb
push
mov
repz
lret
in
mov
jl
lcall
jne
jno
jle
decb
pop
add
mov
data16
sbb
gs
aad
mov
popf
inc
cwtl
sbb
lock
daa
outsl
adc
enter
lods
mov
inc
fnstcw
loop
jbe
sub
mov
mov
stc
mov
stc
mov
test
xchg
lods
insl
fbstp
fistps
add
out
andb
mov
push
ljmp
notb
popl
push
sub
pop
fidivs
sti
xor
push
subb
dec
lahf
js
jne
pop
add
jns
ja
and
jmp
jnp
mov
add
rcll
jns
push
shlb
inc
dec
into
inc
inc
or
xor
mov
and
jmp
and
push
inc
mov
cmp
leave
jg
and
or
imul
or
xchg
jmp
hlt
popf
xor
mov
pushl
mov
jp
ljmp
in
lea
jg
pop
mov
loop
in
mov
loopne
iret
pushl
jg
jg
dec
push
pusha
std
popa
ljmp
dec
sbb
js
nop
xchg
adcb
in
jmp
and
ljmp
aaa
cmp
lods
lahf
imul
call
cwtl
call
cli
fdivrl
dec
add
leave
decl
fcomip
scas
adc
dec
icebp
andl
adc
mov
fs
hlt
adc
adc
loope
imul
jg
pop
xorb
mov
jne
xor
inc
je
mov
pop
movsl
insb
jbe
cmp
rcll
sbb
inc
xor
or
dec
inc
shll
fidivrl
inc
mov
gs
stc
insl
xchg
scas
xchg
ljmp
mov
mov
cmpsl
xchg
aad
scas
mov
leave
inc
pushl
cs
sbbl
pop
ljmp
call
xchg
jno
cmpb
aad
cmpl
mov
enter
fwait
data16
push
arpl
fldt
push
xor
add
pop
adc
push
inc
shll
or
push
xchg
jmp
inc
int
mov
pusha
mov
mov
mov
std
movsl
inc
decl
push
movsb
adcl
mov
inc
jnp
and
call
ljmp
push
repnz
das
out
jne
and
add
rcr
lds
ds
test
int3
mov
lcall
mov
decl
rcrl
jge
repnz
mov
imul
and
jl
insl
mov
sbb
daa
xor
mov
mov
lds
cmp
mov
and
mov
sub
inc
push
out
sbb
dec
xor
lcall
push
adc
xlat
xchg
int3
call
cmp
xchg
or
decl
inc
scas
and
fstpl
subl
inc
mov
push
push
xor
inc
cmp
adc
pop
jne
out
pushl
fidivs
mov
jg
pushl
arpl
gs
in
add
mov
decl
dec
mov
ror
xor
lock
dec
outsb
loop
mov
mov
pop
scas
clc
call
or
add
cmp
mov
pop
jecxz
mov
mov
sub
decl
fucomi
or
insb
clc
mov
xor
mov
cmp
xlat
ljmp
call
and
pop
cmpsl
out
ljmp
stos
sub
xor
xchg
repz
test
sub
add
popf
cli
outsb
jns
aam
sti
mov
imul
lods
out
sub
sub
mov
popa
mov
lods
dec
and
inc
mov
daa
add
mov
add
push
stc
jmp
pop
jle
lret
mov
addr16
data16
pushf
daa
fildll
jmp
int3
mov
inc
repz
ss
ret
mov
hlt
fidivl
sti
decl
add
pop
imul
fsubs
mov
div
xlat
fisubl
stc
out
mov
jmp
fisttpll
outsl
pop
fs
mov
movsb
push
sub
cmp
enter
scas
dec
scas
js
or
sbb
fstpt
daa
repnz
cmp
stos
aam
adc
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
aas
cs
aad
jae
shrb
or
jle
push
xchg
or
sub
add
nop
xchg
push
ja
out
ret
jmp
dec
mov
cli
test
mov
pop
adc
call
fwait
lock
and
pushl
ficoml
loope
xchg
clc
fcomps
push
add
xchg
outsl
sbb
lahf
or
and
xchg
mov
push
jle
imul
popf
pop
jmp
xchg
pusha
movl
fwait
daa
dec
cmp
and
cs
fwait
lock
js
shl
jae
jmp
cmpsb
stos
fwait
out
adc
lcall
test
sub
jp
cmp
jl
ret
call
lahf
sbb
pop
jmp
push
jnp
ret
push
lock
dec
iret
scas
xor
inc
dec
push
sub
mov
out
sub
test
adcb
ss
xorl
es
das
xchg
mov
outsb
into
jle
icebp
jmp
dec
xchg
loope
mov
and
cmc
rcr
jmp
stos
enter
xchg
insl
shrl
mov
push
call
push
cs
outsl
stos
xor
or
imul
mov
and
pushl
xor
scas
call
dec
sbb
add
push
cltd
incl
icebp
or
ljmp
aaa
cmp
sbb
cmp
mov
rcr
mov
cmc
mov
mov
jne
adc
and
jmp
imul
jmp
lret
in
mov
xchg
cmpsb
jg
mov
cli
outsl
xor
imul
add
sub
stc
xor
or
sbb
fistps
lods
jmp
loope
aaa
mov
mov
movsb
xchg
and
out
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
pop
hlt
sbb
loope
lret
and
inc
sub
jg
fs
enter
shll
mov
or
and
push
pop
add
stc
insb
or
sub
inc
sarb
decb
mov
test
lea
adcb
in
imul
repnz
lahf
mov
pushf
cmp
pop
pop
sbb
cmpb
xchg
add
or
mov
pop
or
call
cld
out
jg
jns
call
sub
jge
pop
sbb
pop
cmp
xlat
clc
loope
std
out
xchg
mov
jl
call
cmp
clc
mov
mov
push
xchg
jmp
jmp
mov
xchg
xor
add
jno
repz
test
frndint
xchg
and
arpl
and
add
fwait
out
pushl
jl
sub
dec
outsb
mov
ljmp
lods
xchg
ljmp
inc
inc
test
pushl
je
cmc
aaa
push
jecxz
fcos
xchg
test
into
js
outsb
jg
mov
adc
mov
add
and
jns
test
sbb
fucomp
jle
mov
lds
mov
mov
fisttpl
and
mov
lret
sarl
cli
xor
ret
inc
in
loopne
ljmp
push
movsl
cli
xchg
jne
mov
push
fistps
data16
stos
sub
in
outsb
roll
mov
decl
fmull
nop
add
mov
lea
sub
movsb
test
nop
mov
aam
sbb
pushl
bound
lea
repnz
pop
xchg
in
loopne
out
fildll
lcall
pop
jp
mov
inc
jmp
pop
hlt
jbe
out
daa
inc
mov
jg
fstps
sarl
pop
ret
mov
add
bound
iret
in
xchg
add
inc
rolb
inc
jp
push
push
unpcklps
movsl
jmp
paddusb
gs
int
lods
mov
push
inc
xor
and
test
incl
push
mov
cmpb
dec
icebp
data16
stos
outsl
pushf
js
xchg
lock
ds
sbb
jne
shlb
jmp
push
inc
outsb
dec
jne
mov
jmp
cmp
stc
loopne
cmp
jmp
xchg
mov
jmp
jmp
jns
sarb
insb
out
or
or
ss
mov
inc
mov
and
or
push
adc
mov
xor
mov
in
leave
pop
sub
push
out
or
sti
mov
fs
iret
add
adc
mov
pop
pop
ljmp
add
jmp
cli
xor
jp
mov
mov
and
xor
and
cmc
ljmp
inc
push
xlat
cli
and
inc
rcll
sbb
push
orl
das
push
mov
addb
loop
sub
and
push
aas
incl
fcomi
ljmp
rorb
call
loopne
xor
cmpsl
sub
loop
xor
mov
inc
mov
jb
stc
lea
mov
jbe
cltd
jl
and
mov
pop
das
ljmp
xchg
loope
adc
push
scas
outsl
or
lods
out
clc
orb
fwait
mov
sbb
xchg
out
idivb
movsb
jns
mov
insb
jge
out
dec
xchg
fs
jne
ljmp
cmp
jno
cmp
inc
dec
icebp
fstl
cmp
mov
pushl
push
je
jge
xor
sub
out
cmp
jge
and
lret
sub
xchg
inc
sub
movsb
xchg
adc
mulb
cli
movsl
xor
dec
call
cld
inc
ret
jge
xlat
lret
cli
or
ja
ja
jne
xchg
add
rcl
test
push
clc
cmpsb
push
sbb
xchg
inc
dec
xchg
ret
ja
pushl
jns
adc
jp
mov
sbb
jmp
movl
xchg
jno
xchg
push
rcr
pop
sbb
adc
inc
pusha
sbb
xor
mov
sub
lock
cmp
cmp
mov
call
jl
out
int3
insb
pushl
negl
scas
test
ljmp
xor
jno
scas
cmp
sub
push
lcall
and
mov
dec
ljmp
mov
jbe
ljmp
movsl
call
add
pop
test
mov
rcrl
popf
cmpsl
add
jno
clc
push
fisubs
shl
pushl
and
or
mov
ret
mov
dec
ds
lcall
mov
adc
cwtl
mov
stc
sbb
decl
pop
pop
and
pop
sub
pop
cmp
dec
pop
sub
bsf
or
fdivrp
jbe
dec
pop
insl
and
ljmp
vmovntps
mov
mov
mov
mov
lcall
fdivs
call
sub
cmp
mov
aam
stos
xlat
xorl
mov
ss
sbb
fistps
mov
bnd
jl
fisubs
ljmp
mov
mov
mov
aaa
sbb
cld
adc
das
mov
pop
orl
ds
and
push
jbe
lcall
mov
hlt
call
lret
ficoms
lret
mov
fmuls
int3
movsb
lcall
imul
movsl
sahf
sar
scas
sub
sbb
cmp
xor
int
das
jbe
shrl
pop
stos
mov
dec
jnp
xlat
lods
imul
ret
call
call
jmp
icebp
scas
incl
fiaddl
inc
push
out
loopne
adcb
test
mov
and
cmp
stos
lcall
decb
push
pushl
inc
insl
stc
xlat
and
stos
decl
test
push
fsubr
call
imul
imul
and
inc
flds
sub
mov
push
sbb
mov
mov
loopne
das
icebp
xchg
hlt
sub
les
push
pop
loope
mov
iret
ss
xchg
sub
iret
cltd
mov
lcall
jl
decl
cld
outsl
inc
push
call
and
xor
jg
sub
call
ficoml
pop
push
lods
dec
lcall
lds
jge
xchg
adc
adc
adc
pop
jmp
lods
test
jge
cmp
loope
and
decl
popa
push
imul
add
pusha
ljmp
xchg
inc
inc
mov
sub
xchg
cld
sub
das
jmp
xor
test
lock
fdivr
lret
inc
call
movsb
pop
test
fwait
daa
jmp
jle
jle
dec
or
out
in
ffree
ss
add
ds
sbb
js
decl
adc
es
cmp
mov
in
sub
mov
pushf
stc
cmc
pop
sbb
out
xchg
mov
iret
cmpsb
add
dec
push
mov
icebp
mov
sar
fcompl
incl
adc
add
cmc
in
fnstenv
push
sar
cmpsl
push
fsubrs
aam
mov
mov
jo
arpl
push
mov
jle
mov
int
sbb
or
dec
lcall
push
inc
mov
add
and
jne
mov
jge
hlt
mov
sbb
xor
pop
bnd
js
into
imul
enter
xchg
rorl
dec
dec
cmp
or
dec
mov
hlt
mov
daa
subb
adc
mov
xor
pmaxsw
imul
lods
aaa
fs
scas
sti
icebp
lahf
xchg
mov
lods
ds
shl
jns
test
lcall
lahf
out
xor
in
inc
add
movsb
dec
dec
test
incl
sub
fnsave
daa
imul
decb
popf
mov
arpl
jecxz
and
add
jl
int3
add
mov
roll
and
inc
pop
dec
pop
in
or
fdivrp
shrl
rorl
xor
incb
rcrl
jmp
call
xor
movsl
sbb
dec
call
stc
pusha
sbb
imul
fcomi
lock
sbbb
push
add
fstpl
pushl
dec
movsb
jmp
inc
icebp
test
out
or
jb
shll
jp
decl
pop
mov
cmp
ljmp
push
mov
push
sub
sbb
push
xchg
dec
jmp
push
sub
sub
mov
icebp
clc
cmp
pop
scas
jnp
cmp
and
mov
adc
cmp
sbb
scas
clc
sbb
ds
jno
xor
ljmp
inc
lds
inc
scas
shll
lcall
cmc
inc
cmp
push
xlat
push
jb
cmp
movsb
add
xor
jl
push
aas
enter
jecxz
xchg
lret
cmp
loopne
xor
test
xchg
das
push
dec
decl
fisubrs
cli
sar
xchg
mov
xor
decl
ja
sub
xor
dec
jle
fwait
xor
jle
js
push
add
adc
dec
data16
rolb
gs
loope
test
or
add
mov
mov
fwait
cmp
mov
pop
jp
shll
xor
push
fdiv
call
out
adc
xchg
aas
mov
and
adc
idiv
jmp
in
into
incl
fimull
dec
sub
ret
scas
cmp
decl
je
int
cmp
sbb
inc
loopne
sbb
fbld
dec
cwtl
inc
pushl
lret
push
enter
cmp
xor
cmc
dec
fwait
in
push
xchg
fildl
inc
and
repnz
xchg
adc
dec
call
mov
sbb
xchg
clc
ljmp
cltd
loope
xchg
jmp
sub
decb
in
xor
pop
sbb
add
sub
stos
mov
les
and
inc
stos
sub
inc
sub
jmp
adc
or
movsl
js
sbb
mov
sbb
shrb
decl
insb
xlat
jecxz
jecxz
out
in
push
movsl
dec
jmp
cmp
mov
hlt
repnz
decl
sar
and
into
cmpsb
and
aaa
mov
out
jg
test
pop
scas
inc
fbstp
xchg
lods
pop
ljmp
mov
xchg
mov
mov
mov
adc
add
incl
push
cmp
jbe
cmp
pop
rol
push
adc
dec
sub
scas
sahf
mov
aaa
push
mov
or
flds
orl
cli
fisubrl
pusha
sbb
clc
loop
ds
call
adc
sub
test
mov
imul
push
dec
sti
call
sub
jmp
ret
enter
mov
mov
in
push
inc
sahf
dec
out
or
ljmp
in
imul
pushl
lret
pop
ja
lcall
bound
mov
mov
or
incl
jmp
in
fnstsw
ja
add
push
cld
fldcw
icebp
xchg
push
cltd
push
das
test
std
aam
sub
pop
stos
jle
call
adc
jns
ljmp
push
dec
mov
xor
inc
adc
incl
lret
jnp
insb
ja
lcall
loope
inc
cltd
fdivr
incl
stos
mov
pushf
and
pop
dec
loop
inc
orl
jg
in
pusha
sub
mov
adc
call
test
outsb
or
sti
out
das
inc
testb
mov
jg
scas
inc
sbb
lods
adc
sbb
push
ljmp
loop
data16
ss
clc
pushf
cmp
fucomp
mov
clc
les
lds
mov
xchg
mov
mov
lcall
xchg
pop
mov
mov
lcall
jecxz
adc
movsl
test
ljmp
into
pop
stc
test
loopne
cltd
rcrb
adc
xchg
jb
jmp
mov
fisubl
push
xor
push
subl
int3
outsl
cmp
incl
mov
adc
jae
daa
adc
jg
push
rcll
call
cmp
lret
mov
mov
push
or
in
lcall
daa
push
sbb
es
icebp
outsb
cmp
idivb
gs
rcll
lcall
incb
xlat
call
loop
daa
push
into
shlb
cs
jbe
in
lcall
lods
xor
ljmp
dec
aaa
popa
call
mulb
dec
adc
iret
push
add
dec
xor
sarl
pusha
rorb
stos
xor
fisubrl
mov
pop
repnz
bound
ds
clc
daa
bound
dec
push
jmp
adc
pop
ud0
imul
jo
cmc
jnp
xor
lahf
test
cmp
jb
adc
aam
loop
fcompl
push
inc
dec
jp
call
and
push
mov
incl
pushf
aas
pop
cld
sbb
xor
jo
pavgb
ss
lock
popa
lahf
xchg
cld
lcall
dec
aaa
aad
enter
sbb
nop
inc
lea
scas
push
fisubrs
xor
into
lcall
adc
pop
adc
inc
mov
cld
out
ret
test
jbe
pushl
xlat
xor
inc
aam
outsl
data16
sar
mov
xchg
mov
inc
push
out
pop
lcall
pop
clc
lock
mov
fistpll
dec
push
inc
mov
inc
out
hlt
outsb
pop
sbb
out
mov
jb
cmc
cmp
call
mov
dec
subl
mov
jno
push
in
clc
jmp
push
jl
xchg
inc
test
in
or
bound
sbb
cmpsl
pop
add
lods
cmc
inc
push
addr16
mov
or
cmp
sbb
and
pop
movsb
idiv
mov
jg
lcall
lds
jp
je
sub
cmc
stc
mov
in
repz
or
bound
mov
mov
sbb
xchg
inc
pushl
fistps
int
push
dec
sahf
sub
rclb
adc
adc
xchg
rcll
mov
push
xchg
inc
push
dec
dec
aam
jmp
or
andl
dec
mov
ds
push
dec
out
js
sbb
fsubrl
loop
lods
aam
fcos
and
nop
add
sub
sub
pusha
gs
xchg
mov
lcall
inc
out
add
sbb
xchg
sbb
mov
jae
add
clc
lret
pop
aad
aad
aaa
addr16
rcrl
ljmp
pushf
insl
jnp
push
push
adc
xor
jns
orb
in
inc
syscall
adc
sub
and
insb
sub
imul
call
dec
xor
mov
dec
sub
in
push
notb
call
mov
cmpsb
mov
inc
sahf
rcrb
and
call
sub
xor
or
pushl
mov
je
int3
mov
popf
js
out
push
fnstsw
inc
pop
pop
push
jae
pushl
pop
xchg
pushl
xor
call
mov
jne
push
dec
inc
lock
es
insb
repnz
mov
aad
jg
mov
hlt
push
pusha
ret
ljmp
inc
rclb
sarl
insb
cs
rcl
fnstsw
or
sarl
lea
imul
out
and
call
jl
jno
insl
clc
jge
addr16
mov
cs
sub
inc
adc
pop
jo
fldenv
cmpsb
jo
cmp
or
jmp
and
testl
pop
out
mov
decl
push
jns
jl
xor
xchg
outsl
dec
or
mov
or
pop
and
scas
mov
rorl
mov
mov
fbld
push
lcall
dec
cmc
js
mov
movsl
test
cmp
sub
inc
iret
incl
adc
rcrb
mov
stos
ds
jg
push
je
sub
jnp
pushf
pop
lds
jecxz
ljmp
push
mov
ja
out
mov
pop
and
into
adc
outsb
clc
scas
push
jge
mov
arpl
push
or
test
je
orl
xchg
jne
pop
dec
jnp
outsl
decl
hlt
test
xor
test
into
aas
sbb
lcall
jmp
js
fistl
dec
iret
stc
rcr
xor
pop
push
jmp
mov
jl
sbb
or
shll
bound
pushl
pop
cs
adc
mov
pop
fsts
cmp
test
add
sahf
sbb
mov
jg
push
test
and
arpl
or
jb
ljmp
iret
add
dec
push
mov
lret
pop
std
cmp
mov
ljmp
sbb
sbb
pop
sahf
mov
jmp
adc
and
mov
pop
cmp
fimull
decl
ljmp
fidivrl
push
jmp
divl
pop
decl
cmpsl
pusha
jl
jnp
clc
aaa
incl
int
inc
movsb
scas
shrb
scas
test
inc
in
jb
dec
adc
or
hlt
mov
pop
lods
cmpsl
decl
repz
ljmp
xorb
mov
jmp
xor
iret
lcall
mov
adc
in
test
or
add
fstp
cmp
mov
stos
pop
lret
mov
and
adc
cmp
dec
sub
add
clc
xchg
jg
gs
pop
push
rorb
mov
inc
repnz
aad
out
mov
daa
aam
xor
adc
jle
ljmp
test
inc
add
clc
sbb
sub
in
ljmp
out
pop
xor
pop
fsubs
add
cmp
add
ljmp
lods
subl
je
inc
jae
aam
decl
pusha
cli
add
push
pop
mov
loop
pushl
mov
insl
dec
inc
pop
pop
mov
xchg
mov
mov
mov
and
aam
fistpll
push
jo
cld
add
filds
enter
fisubs
jnp
mov
sbb
mov
testb
orl
and
call
and
pop
hlt
std
dec
xchg
mov
mov
push
ja
lock
lret
jge
lcall
and
mov
mov
fdivrp
push
loopne
arpl
add
cmp
dec
cmp
push
pop
lock
or
jl
adc
lds
ss
lret
mov
shll
push
mov
xchg
cli
jne
xchg
mov
mov
daa
mov
inc
xor
jge
rorl
cmpsl
incl
popa
sub
push
loop
jge
sub
std
outsl
mov
mov
jg
in
cld
pop
movsb
loopne
aaa
leave
jnp
stos
lods
adc
les
je
push
add
jmp
fwait
loopne
push
mov
push
mov
mov
push
dec
adc
aaa
leave
push
test
jle
mov
jp
out
cld
or
mov
dec
ljmp
incl
aam
stos
pushl
int
popa
inc
ja
fidivrl
pop
jecxz
inc
adc
jb
fadds
jmp
jnp
jb
cmpsl
sub
pop
scas
pushf
mov
incl
sbb
push
push
in
scas
dec
lcall
inc
dec
data16
orl
and
out
push
ljmp
aaa
pop
jmp
mov
loopne
push
push
test
ljmp
lcall
mov
popa
bound
jge
push
push
pop
push
jmp
daa
lcall
jo
cli
cli
gs
add
sarb
and
adc
jl
hlt
xchg
fistl
aas
es
mov
mov
sbb
push
fwait
imul
cmp
repz
sub
je
xor
inc
dec
sbb
sti
mov
adc
addl
add
int3
fs
ljmp
iret
jp
es
cmp
push
adc
xchg
shll
aas
imul
mov
data16
cmp
pop
jmp
pop
movsb
and
dec
test
stos
add
xchg
outsb
inc
jb
test
pop
and
cmpsb
call
ja
mov
jo
mov
xchg
push
jb
mov
ja
ljmp
mov
push
pop
jns
decl
mov
jmp
bound
adc
aaa
lcall
cmp
in
cld
mov
insb
pop
add
cli
jo
negb
xchg
jmp
cmp
pop
call
es
mov
or
lods
cmpsl
fs
jae
inc
mov
mov
inc
inc
jb
sub
cmpsl
mov
dec
icebp
mov
xchg
mov
adc
cli
outsl
lcall
test
dec
inc
push
inc
inc
rcll
and
imull
cmp
xchg
cmp
inc
pop
pushf
addr16
pop
cmp
mov
pop
inc
sti
mov
outsl
add
lock
in
jne
inc
mov
cmp
fsubp
aas
xor
lcall
pop
sahf
sub
pusha
movsl
outsb
or
jp
jmp
mov
ja
pop
ror
mov
mov
cld
sbb
lods
aam
pop
cltd
adc
jo
push
and
jecxz
cli
mov
push
movsb
hlt
jb
dec
fdivr
in
mov
wrmsr
into
call
idivb
nop
pop
cmp
add
xchg
push
mov
pushf
xor
clc
ja
std
dec
arpl
xchg
mov
shll
loop
jg
or
push
sbb
xchg
or
int3
inc
xor
sbb
decl
and
test
mov
inc
or
ret
stc
cli
jne
pusha
jae
sar
mov
lret
fsubrs
cmp
lret
mov
imul
dec
cmp
dec
mov
add
mov
xor
cmp
mov
cmpsb
mov
call
add
leave
lea
or
mov
cmc
sti
cmp
sub
xor
mov
cli
xor
adc
mov
icebp
push
cmp
mov
mov
mov
in
jns
pushf
faddl
sub
pop
imul
sbb
les
popf
inc
jmp
sbb
lcall
lock
lcall
cmp
je
lahf
mov
inc
pop
pop
call
push
dec
sbb
lcall
cltd
out
xor
sub
xchg
fcmovne
cmp
ja
and
cli
push
pop
pop
test
lahf
jg
std
enter
jle
xchg
ss
cmp
jecxz
xor
outsl
lret
sub
xor
xchg
cltd
push
pop
rcrb
das
dec
into
pop
stos
std
and
mov
adc
jno
std
sbb
xchg
aad
in
push
imul
iret
jae
jo
mov
sub
test
filds
addb
add
leave
aas
out
adc
lcall
fcmovne
int
push
pop
fcos
cmpsl
out
divl
addr16
je
fprem1
cmovne
xchg
mov
mov
rorl
push
mov
mov
jne
push
lods
pop
add
ljmp
push
outsl
mov
pop
mov
push
pusha
insl
outsl
and
cmp
mov
xchg
cmp
test
mov
inc
test
decl
mov
cmpsb
pminsw
jecxz
jl
lods
jmp
fs
jmp
mov
pop
repnz
sbbl
mov
inc
out
pop
and
or
or
sub
mov
dec
icebp
mov
mov
cmp
dec
out
fstp
or
xor
scas
fistpll
sub
loopne
adc
ljmp
adc
mov
xchg
dec
xorl
clc
outsb
mov
jmp
ja
pop
add
mov
pop
ljmp
incl
jle
push
cmpsb
sbb
mov
insl
add
pop
mov
mov
pushl
jge
sbb
or
incl
xchg
adc
out
cli
rcrb
xchg
pop
inc
or
pop
or
pushl
test
jp
lds
out
mov
int3
pop
clc
mov
jae
lods
aaa
stc
push
cmpsb
aam
sub
das
sarl
addr16
push
jmp
orl
jmp
dec
xchg
pushf
xor
mov
mov
leave
cmpsl
and
push
xor
jns
repz
in
mov
and
lods
sub
rorb
lds
push
or
jecxz
mov
loop
mov
and
lcall
or
mov
xchg
imul
mov
leave
test
xchg
lahf
add
and
xchg
mov
pop
arpl
cmp
inc
xor
stc
mov
shll
push
xchg
jmp
adc
sub
std
mov
mov
add
pushl
adc
call
les
imul
sub
mov
add
std
out
xor
loop
pop
dec
ds
mov
xchg
push
jnp
call
adc
call
pop
pop
lret
xchg
inc
jmp
adc
shlb
add
pop
test
xchg
pop
incl
scas
cmp
push
dec
mov
loope
cmc
push
cmpsl
and
mov
dec
jg
aaa
pop
sbb
aaa
or
cmp
cmp
xchg
arpl
pushaw
cmpsl
jl
movsl
inc
adc
dec
pop
xor
xchg
pop
push
mov
pop
mov
incl
aas
sub
jmp
push
push
std
hlt
xor
incl
add
popa
jmp
adc
jge
inc
mov
mov
add
dec
push
and
fisubrs
addl
lcall
add
xor
push
jae
je
iret
mov
test
sub
and
stos
dec
incl
add
in
aad
or
fsub
cmpsl
lcall
shrl
popf
inc
arpl
and
mov
fisubs
push
rcll
and
cltd
enter
shlb
lcall
psrlq
inc
fildll
incl
loopne
push
decl
push
fs
incl
mov
add
mov
pop
repz
enter
push
inc
fistps
xchg
push
pop
test
call
push
sarl
sbb
inc
dec
push
pop
mov
jge
clc
in
and
mov
incl
jp
jns
jns
dec
decb
adc
jmp
hlt
call
daa
call
dec
jb
arpl
or
lcall
test
call
xchg
popa
fwait
mov
lds
insb
cld
das
shl
jne
ljmp
std
jb
sahf
mov
int
mov
sub
jbe
movsl
data16
jmp
cwtl
lock
decb
sub
jmp
pusha
or
js
scas
aad
sub
jmp
cmp
mov
loope
ja
hlt
add
sbb
js
xor
test
jno
jg
add
ljmp
leave
movsb
jg
jmp
mov
jmp
dec
cmpsb
fistpll
mov
lahf
pop
call
inc
flds
nop
icebp
sub
test
popa
pop
add
adc
adc
inc
push
ljmp
stos
mov
mov
loope
rorb
mov
inc
mov
dec
mov
dec
cmc
jbe
inc
push
cld
mov
adc
cwtl
xor
xchg
in
push
jb
pop
call
arpl
mov
leave
in
ljmp
sub
call
stos
mov
lahf
jle
fistpl
lods
push
faddl
pop
jnp
out
mov
pop
sbb
dec
in
adc
or
push
push
mov
clc
test
incl
jge
fs
rcl
imul
push
xchg
jae
scas
cli
fwait
sbb
enter
jmp
add
scas
incl
mov
fdivp
in
sbb
xchg
scas
cli
je
pusha
clc
rcll
jb
mov
pop
movsb
test
push
mov
cmp
jmp
pop
vfrczsd
sbb
pusha
movsb
outsl
push
loopne
imul
mov
xor
pop
call
divb
pop
inc
test
cli
push
jns
rcll
dec
push
decl
repnz
jnp
pop
call
mov
in
in
lods
add
push
lods
mov
into
ljmp
insb
enter
jl
xor
xlat
movb
bound
fisttps
pushl
mov
inc
in
in
mov
sbb
je
add
cli
mov
aas
dec
mov
enter
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
std
dec
and
inc
incl
lock
mov
ret
dec
cwtl
std
push
and
pop
stos
shlb
push
mov
xchg
hlt
fadds
xchg
cs
dec
out
ja
cmc
push
cmp
push
fists
enter
iret
rcrl
push
stos
call
mov
mov
fnstsw
arpl
cltd
push
or
aad
sbb
dec
das
jnp
jp
fstpt
cmp
call
add
xor
ja
jae
cltd
mov
push
xchg
lds
loope
adc
jp
mov
aam
insb
int
mov
adc
rcl
sub
test
filds
add
fs
lret
xor
ret
call
xchg
mov
xchg
dec
mov
lret
cmp
mov
movsb
mov
into
shl
leave
es
sub
and
cmp
movhps
xchg
lret
popf
sub
and
rcrl
popf
cmp
loope
int
jb
mov
mov
fbld
dec
enter
lcall
xor
fcmovne
mov
lcall
adc
adc
loopne
lcall
xchg
push
or
popf
jb
call
pushf
jae
movsb
std
fisubrl
aaa
std
movsb
inc
data16
ficoms
xor
xor
jo
movsl
lret
ud0
jl
es
pop
adc
popa
jmp
out
push
faddp
fcmovnu
je
mov
add
sub
sbb
cwtl
inc
outsl
xchg
or
mov
in
sbb
xor
ret
xor
dec
stos
push
je
push
mov
loop
sti
decb
iret
cmp
jbe
out
ficomps
cld
loopne
xor
lret
dec
cmp
ficoml
jmp
mov
ret
data16
and
ljmp
aad
mov
fldt
inc
incl
jns
jbe
pusha
fimuls
xor
cmp
xor
imul
ss
push
push
test
cwtl
lret
pop
cli
mov
pop
pop
scas
rcrl
clc
call
pop
inc
mov
fstps
out
sub
gs
sub
clc
ja
mov
mov
cli
out
adcb
aaa
mov
xor
dec
outsb
divb
jb
cmp
aad
les
jg
sbbb
pushl
push
mov
pop
incl
in
sbb
or
pop
sub
daa
inc
jmp
and
mov
mov
cwtl
fstps
nop
or
mov
aad
cmp
and
ljmp
add
sub
les
outsb
pusha
jecxz
lret
mov
inc
xor
icebp
fdivl
loop
mov
add
sarb
fsubrl
pusha
das
sbb
xor
jb
nop
sub
dec
jne
jmp
dec
push
push
dec
je
pushf
inc
xchg
ss
inc
call
push
and
lea
add
jno
lock
xchg
clc
cs
cmp
mov
in
test
sub
sbb
and
jmp
cli
sti
aad
sbb
jne
outsb
xchg
mov
or
mov
push
fdivrs
cltd
mov
lea
fstp
adc
add
gs
divl
sub
pop
jns
mov
incl
fstps
lcall
cmp
jecxz
shr
jl
call
dec
cmp
xor
loop
pushl
sbb
xor
sbb
inc
jle
das
dec
mov
lds
imul
xchg
inc
adc
lea
pop
shl
stos
sbb
mov
push
jp
shr
xchg
sub
cli
push
pusha
or
enter
adc
mov
xchg
addr16
push
pop
sub
mov
inc
and
call
jnp
mov
and
leave
popf
mov
test
shrl
cli
mov
gs
daa
push
push
call
movsb
mov
mov
js
loop
add
sub
mov
xor
out
mov
ja
pop
mov
dec
sub
sbb
decl
mov
xor
pop
fdivr
loope
inc
pop
push
dec
sar
xor
mov
or
xchg
dec
fdivrp
call
stos
lcall
add
insl
incl
test
stos
jmp
lods
mov
scas
popf
sarl
dec
outsl
cli
lods
sbbb
pop
jle
out
leave
pop
or
adc
xor
and
lods
xor
jne
mov
mov
sub
call
mov
pop
pushf
test
cmc
xlat
aam
loope
adc
push
popf
pop
xor
leave
pop
cmpsl
mov
imulb
add
sbb
mov
je
shll
add
adc
idiv
leave
mov
js
out
mov
faddl
mov
idiv
adc
arpl
sbb
test
in
fmull
dec
call
ss
ljmp
push
adc
mov
cmpb
imul
dec
cmp
repz
icebp
cmp
or
outsb
loopne
xor
enter
aad
sbb
mov
test
pop
mov
loopne
imul
daa
sub
scas
pop
jmp
cltd
cmc
cmpsl
add
push
fadd
adc
xchg
mov
daa
mov
pop
xchg
in
in
mov
cmp
mov
das
jae
xor
dec
cmp
je
lcall
mov
decl
mov
ror
in
jmp
dec
dec
xchg
mov
mov
inc
cmp
and
popf
jmp
mov
outsb
sub
mov
movsb
and
adc
call
call
xchg
mov
cld
lret
repnz
xor
popa
into
jl
push
mov
icebp
fdivrp
jecxz
dec
sbbl
jp
xor
add
xchg
or
fisttps
lea
cmp
xor
gs
mov
roll
add
call
fldt
cmp
pop
clc
bound
adc
pop
loop
xlat
cmc
repz
push
outsl
add
xchg
outsl
sub
or
lods
push
test
xchg
xchg
mov
decl
notb
push
iret
insb
or
ja
lds
lods
jbe
inc
repz
adc
xor
xchg
jmp
lcall
in
sub
stc
aas
mov
mov
xchg
dec
sub
mov
jns
ds
pop
decl
pop
add
decl
mov
mov
scas
mov
scas
pop
sar
cmp
push
pop
outsb
inc
jne
cmp
imul
dec
addl
dec
add
in
push
fcmove
cld
mov
daa
test
sub
add
sbb
sbb
std
loop
dec
xor
test
inc
pushf
cld
add
xchg
ficoms
xchg
inc
incl
lock
shr
lcall
out
sub
mov
mov
pop
scas
sub
xor
dec
cli
adc
jge
ret
dec
cmpsl
xchg
lock
addb
fneni(8087
jnp
and
pop
pop
mov
mov
and
orb
popf
sti
out
aam
xor
aad
jle
pop
jns
lcall
mov
dec
ljmp
ss
jecxz
dec
mov
sbbl
add
xor
xor
xchg
jl
stc
mov
sub
push
jle
add
icebp
inc
mov
sbb
aam
xchg
decl
push
inc
inc
jmp
dec
adc
clc
jb
in
inc
aaa
cltd
ja
pushl
scas
mov
push
cli
pop
mov
lcall
pop
sbb
jno
xchg
call
jp
data16
or
sbb
in
mov
jmp
aaa
aas
mov
aam
lahf
lock
ja
and
cmp
int3
inc
and
inc
mov
add
lods
clc
ljmp
mov
mov
js
mov
jno
int
sbb
mov
aad
in
sub
sbb
fdiv
xlat
and
fidivrl
lds
out
mov
outsl
sbb
dec
sub
lcall
and
inc
sahf
add
in
adc
push
scas
add
xchg
dec
incl
pop
or
popa
cmpl
mov
sti
mov
lods
and
dec
sbb
pop
push
frstor
fwait
incl
and
les
cmp
cmp
in
inc
cmp
sarl
add
xor
jge
lahf
rcll
stc
inc
xchg
ljmp
fdivrs
test
jns
aam
adc
dec
xchg
mov
clc
int
push
and
mov
lock
enter
mov
mov
cmp
stc
call
out
add
and
aaa
hlt
inc
pushl
rep
stc
push
bound
pop
push
xchg
mov
test
mov
fcomps
ljmp
js
movsl
ljmp
sub
mov
bnd
call
lcall
and
push
dec
xchg
pop
mov
in
sbb
mov
rcr
pop
or
dec
mov
sbb
cmp
loope
enterw
clc
mov
in
jp
xor
fbld
pop
int
cli
cmc
sub
mov
jmp
or
loopne
scas
fcmovne
sub
push
fwait
incl
or
je
jmp
arpl
sub
mov
aad
sbb
push
mov
sbb
mov
lods
out
fcompp
sahf
sbb
daa
imul
hlt
outsl
orl
movsl
sbb
call
mov
in
jne
mov
xor
jo
and
int3
push
clc
stc
jp
add
popf
pushl
cs
call
sbb
and
mov
sbb
ss
xchg
mov
lret
mov
in
jmp
dec
jl
jae
pushl
add
fs
scas
test
and
xchg
cwtl
or
mov
mov
pop
push
pushf
mov
int3
jae
out
dec
call
inc
addr16
sbb
pushl
mov
in
mov
imul
test
lods
pop
movsl
adc
add
aaa
pushl
test
mulb
cld
imul
or
sbbb
adc
sbb
in
dec
out
inc
lcall
inc
sub
inc
shlb
cmpsb
mov
int
add
dec
pop
mov
cmp
dec
lods
insb
adc
lcall
je
jg
icebp
cmp
xlat
in
pop
es
add
stos
xchg
sbb
add
stc
movsl
pop
or
mov
cmp
pop
std
lea
das
outsb
inc
and
decl
inc
arpl
or
int3
pop
mov
call
decl
rclb
fwait
pop
lahf
call
xor
std
pop
imul
aas
mov
sbb
xchg
dec
cmp
shl
ds
call
decl
pop
sub
sahf
call
arpl
xor
inc
fldl
add
jle
xor
mov
jmp
aaa
jle
pop
icebp
js
adc
pop
movsl
ret
movb
fisttpl
jl
dec
cmp
icebp
push
fildl
mov
push
test
jb
faddl
out
stos
mov
mov
push
jg
neg
mov
in
dec
bound
or
or
mov
loopne
decl
inc
hlt
call
scas
mov
in
vpextrw
lds
mov
sub
push
or
mov
cmc
leave
mov
cmpb
dec
mov
loop
adc
clc
ljmp
mov
outsb
fadds
fisttps
call
sti
cmp
pushl
cmp
ret
pushl
cmp
jle
adc
jo
lea
pushl
mov
add
adc
addr16
xchg
lahf
decl
stc
mov
adcb
lock
sub
mov
push
movsb
jno
jmp
stos
inc
pop
lea
lahf
ficoms
or
clc
lahf
jp
cltd
adc
mov
pop
and
cmp
lret
sub
mov
icebp
sbb
aas
pop
xchg
call
enter
cli
inc
jecxz
out
popf
fwait
sti
call
shlb
inc
loope
cmp
stos
cmc
jecxz
and
sbb
ret
mov
jbe
repnz
idiv
scas
test
leave
jbe
lock
mov
cmp
lcall
pop
cmp
mov
movsb
outsb
fwait
cli
shl
push
decb
ret
fstpt
adc
cli
incl
sbb
pop
lret
lcall
sbb
sbb
clc
cmp
lock
imul
fwait
inc
fiadds
mov
inc
lahf
add
jmp
sbb
pop
mov
push
lods
cmp
das
cld
lcall
in
ljmp
mov
pop
ljmp
pop
jg
jp
mov
mov
push
lea
cmp
testl
aad
scas
mov
xchg
mov
decl
fisttpll
testl
idivl
cld
push
imul
incb
iret
and
mov
jmp
mov
push
xchg
test
call
dec
movsl
mov
sahf
enter
adc
les
add
or
cld
int3
sbb
ss
das
in
adc
dec
out
jo
jo
loope
xchg
stos
int3
or
dec
incl
loop
loopne
sub
or
add
and
dec
dec
inc
inc
add
xor
adc
test
cmp
add
inc
add
cs
lea
cltd
jmp
sbb
push
std
leave
dec
jnp
rcrl
das
xlat
scas
sub
jbe
pop
dec
outsb
jnp
lds
in
jno
cld
mov
test
add
stos
push
cmp
int
pop
cmp
in
dec
pop
es
mov
decl
sahf
aam
clc
push
pop
insb
shlb
add
sti
jmp
incl
jo
jmp
leave
pushf
xor
inc
out
es
mov
jg
inc
sub
mov
sbb
push
sti
ds
ds
xor
ljmp
push
fbld
lds
sbb
rcll
mov
ror
xchg
sti
imul
mov
fmuls
sbb
mov
daa
mov
icebp
insl
aaa
fcomi
xchg
lcall
cmp
sub
pop
sahf
scas
scas
movsl
push
push
mov
aam
dec
mov
jg
jmp
inc
rcl
ljmp
call
push
jmp
sub
jmp
jp
mov
mov
ret
icebp
lahf
mov
call
inc
out
xlat
jp
pop
js
or
gs
jmp
mov
cmp
ljmp
xchg
push
incl
pop
aam
das
ror
adc
add
cld
mov
dec
pop
outsl
cwtl
fwait
xor
jmp
cmpl
insb
dec
push
pushf
ljmp
repz
shl
insl
dec
cld
mov
dec
outsl
and
and
xchg
push
push
inc
jmp
jg
out
pop
fildll
jno
das
and
mov
sub
decl
push
dec
pop
pop
cmpsl
mov
pop
push
push
outsl
mov
fstpl
xchg
mov
jg
or
pop
inc
push
push
xor
mov
jno
push
push
adc
std
and
xor
scas
dec
ret
decl
xchg
and
mov
sbb
add
cmp
lcall
and
pop
cmp
mov
in
adc
addr16
cmpsb
lcall
jp
movd
in
loope
popa
fwait
std
lret
call
xor
ja
fdivr
or
add
or
outsb
lcall
scas
sub
cmp
adcl
pushl
sub
adc
inc
mov
cmp
clc
les
call
inc
shlb
mov
call
push
xor
testb
jne
mov
fabs
and
pop
dec
xor
imul
lock
maxps
inc
in
mov
call
or
cmp
cmpsl
clc
dec
js
incl
sbb
mov
les
call
loopne
adc
pavgw
pusha
pushf
mov
cmp
rcr
bound
mov
les
pushl
and
test
inc
jb
loop
or
jmp
scas
or
ljmp
mov
push
or
pop
jmp
pop
add
ljmp
fs
dec
add
ja
jne
into
jnp
add
loope
mov
out
ja
fistl
push
add
jnp
icebp
pop
jbe
inc
inc
outsb
jb
mov
ficoml
cld
push
subl
std
adcl
test
sub
arpl
ds
ds
push
mov
iret
dec
call
sub
pushl
sbb
mov
inc
add
test
cld
jo
mov
in
daa
sbb
stos
mov
mov
push
repz
in
lahf
push
dec
cli
and
rcr
cmp
clc
orb
mov
decl
sbb
lcall
in
jl
sbb
pop
enter
es
ret
mov
inc
cmp
fcomp
lods
iret
jae
decl
iret
cmp
dec
xchg
lcall
fs
cs
mov
sub
imul
ret
pushf
call
push
out
sub
inc
adc
in
ljmp
lds
ljmp
clc
push
cmp
movsb
push
cli
sub
add
dec
ds
rol
cli
popa
inc
push
cmc
insl
push
fisubl
xchg
incl
loope
dec
push
xor
mov
add
inc
and
les
mov
lret
movsl
mov
xor
aad
jae
cmp
add
sar
xor
xchg
push
jge
jle
pop
shrb
fadd
push
test
and
dec
cld
jmp
and
stos
gs
xchg
lret
add
sub
sbb
decl
lods
cmp
push
push
xchg
int
mov
mov
or
fadds
outsb
int
sahf
daa
decl
mov
out
hlt
cmc
pop
or
xchg
sub
mov
jb
jmp
pop
enter
into
lods
sbb
inc
leave
arpl
andb
fwait
lahf
xor
sub
out
fcmove
jno
inc
addr16
daa
ds
xor
xor
test
mov
arpl
mov
insb
mov
adc
mov
inc
sar
outsb
mov
xchg
ds
shll
outsb
xchg
pusha
adc
hlt
icebp
out
enter
xchg
imul
cmp
xchg
ljmp
sbb
dec
pop
push
ret
scas
pushl
jns
incl
xlat
outsb
shl
sub
dec
adc
mov
cwtl
jmp
push
mov
mov
push
sarl
cmpsl
push
loop
mov
clc
aad
hlt
pop
push
je
xchg
pop
dec
lods
test
mov
daa
dec
jne
jl
repz
sub
dec
pop
in
call
xchg
test
scas
ss
scas
sbb
add
outsl
sahf
mov
push
mov
insb
int
shlb
mov
incl
jmp
push
fcompl
sub
lret
decl
xor
and
repnz
popf
mov
or
jg
pop
add
jp
mov
xchg
jp
xchg
cltd
push
clts
ljmp
xchg
add
pushf
adc
call
call
shlb
mov
scas
inc
pop
inc
icebp
inc
jmp
lods
pop
lahf
in
sbb
aam
mov
mov
lods
mov
test
and
pop
cmp
push
rorl
cld
loope
mov
clc
es
aam
ret
lcall
adc
mov
inc
les
pushl
dec
les
imul
ret
xor
fadd
push
cs
lock
cmc
pop
pop
sub
aam
insl
add
das
addb
push
adc
test
pusha
sahf
pop
incl
mov
mov
ljmp
push
or
sbb
data16
loopne
jae
fbstp
adc
pop
mov
sahf
or
in
xchg
mov
add
jmp
and
mov
cli
fcmove
icebp
xchg
or
adc
scas
clc
sbb
cmp
std
dec
cmp
and
sub
aaa
mov
jns
fldt
arpl
push
imul
test
add
mov
mov
xchg
xchg
decl
repz
lcall
push
jl
sbb
jmp
push
and
adc
sarl
movq
jge
dec
push
cmp
mov
and
icebp
fimull
dec
pop
mov
loopne
incl
jnp
cmpsl
notb
aaa
dec
outsb
mov
loop
jge
push
imul
ljmp
mov
sub
rcrl
lods
lcall
in
jnp
add
jbe
jmp
mov
aas
cmc
decb
pop
mov
or
hlt
out
pop
sub
lret
icebp
fnstenv
mov
or
daa
sub
imull
jle
add
icebp
xchg
imull
aam
mov
mov
stos
sub
mov
les
pushf
jae
loop
cld
push
aad
ja
mov
mov
ljmp
adc
fisubrs
pushl
es
cmpl
scas
popf
push
xchg
incl
inc
gs
jnp
pop
cli
ljmp
lods
fiaddl
mov
movsb
lods
or
mov
xlat
ds
sub
test
movaps
dec
outsl
push
sbb
push
call
int
leave
out
and
out
mov
inc
test
aad
xchg
pop
and
xchg
shl
pop
inc
adc
inc
xlat
sub
cmc
pop
andl
lcall
jnp
xchg
inc
stos
ss
stc
jns
imul
xchg
adcl
icebp
pop
adc
sbb
test
jecxz
mov
sbb
or
repnz
jge
lcall
outsl
bound
push
enter
iret
push
hlt
mov
push
cli
cs
cli
or
cmp
dec
or
data16
xchg
xchg
das
sbb
ret
stc
adc
popa
jno
lcall
pop
sbb
ret
cmp
call
mov
mov
das
fmul
xor
imul
insl
adc
mov
dec
dec
sti
lret
jge
insb
call
mov
sbb
rcrb
negb
pop
push
and
inc
mov
das
add
lret
cmpsl
movsl
dec
and
push
push
mov
arpl
pushl
push
pop
adc
jecxz
loope
inc
cmp
mov
cwtl
or
cmp
xchg
arpl
lcall
adc
nop
lcall
dec
push
out
push
clc
out
xchg
jmp
test
shl
pop
stc
jecxz
dec
cmp
and
popf
jg
arpl
jg
cld
mov
lret
jl
pushl
addr16
and
adc
hlt
stos
cmp
xor
push
or
pop
xorl
loopne
icebp
aam
jae
mov
scas
xlat
ljmp
mov
stc
lahf
jne
and
lock
mov
call
sub
dec
and
test
fnsave
lods
xchg
ret
sub
pop
jmp
out
lret
adc
mov
adc
outsb
pop
shl
xor
or
std
in
push
scas
xor
outsb
jl
push
inc
cmp
ret
mov
fidivrs
adc
pop
xchg
pop
fisubrs
sbb
jp
jmp
inc
push
cmc
cld
pushf
mov
out
popf
es
xchg
scas
dec
decl
mov
cmpb
cmp
aad
mov
jg
pop
rcl
lcall
mov
mov
dec
dec
cli
int
adc
fistl
ljmp
jnp
in
ljmp
xchg
insb
pop
imul
je
fchs
jp
test
ljmp
scas
mov
fidivrs
cld
mov
pop
rcrb
shl
pop
sub
sar
cs
adc
incl
jae
out
scas
jmp
cmp
jmp
and
pop
popa
or
inc
mov
imul
int3
insb
jl
jp
adc
movl
mov
loop
mov
clc
std
in
inc
into
in
inc
das
mov
stos
push
or
mov
or
or
lods
jmp
or
loop
pushf
lret
cltd
setae
out
call
daa
mov
sar
mov
cmp
cmp
aaa
mov
cmp
cmp
iret
icebp
js
and
mov
or
repz
arpl
cmpsl
decl
loope
cmpsb
les
jo
jne
sbb
sub
negb
aam
mov
push
mov
cwtl
pop
jo
or
bound
out
jmp
sti
inc
xor
cmpb
jmp
lea
sti
lea
iret
in
jl
in
repz
je
imul
lds
js
out
decl
xchg
shlb
cmp
das
ss
xlat
xchg
inc
decl
push
mov
sbb
push
lods
push
cmp
cld
xor
flds
cmp
addr16
and
push
mov
mov
out
push
dec
outsl
sub
or
pop
xchg
test
mov
std
call
mov
mov
dec
notb
pusha
pushl
pop
test
sbb
ds
push
cmc
decl
jecxz
movsl
addb
jmp
in
movsl
jmp
loopne
pop
jns
sahf
decl
jp
ljmp
mov
adc
sar
inc
ret
popf
inc
mov
lods
adc
stos
andb
xorl
pop
sar
xchg
leave
test
pushl
inc
mov
inc
sub
mov
addl
out
xor
lcall
pop
add
inc
cwtl
and
sub
push
fidivrs
pusha
sar
test
push
les
das
mov
test
repnz
fsubl
sbb
sub
jge
mov
push
in
or
lcall
fistpl
sbbl
rcll
dec
mov
add
ret
cli
les
testl
xchg
incl
add
adc
push
adc
sar
jg
fistpl
ljmp
fildl
pop
push
insb
jp
mov
xor
cmp
xchg
mov
jae
pop
mov
xor
cmp
adc
in
es
test
ds
jno
decl
sbb
subl
mov
stos
movsl
sub
xchg
in
dec
shl
fists
js
or
jg
out
xchg
icebp
fisttps
mov
inc
xor
out
aaa
sub
pop
lea
cmp
pop
sbb
pusha
pushl
dec
outsb
jmp
into
lock
push
jg
cmp
push
jne
stos
jg
ss
add
sbb
pop
out
std
lahf
dec
stos
cld
or
jnp
lcall
out
push
ret
lahf
inc
sbb
or
xchg
cld
xor
jns
addb
outsl
push
outsl
jo
xchg
in
inc
lcall
xchg
pop
popf
std
lret
js
adc
fdivrl
cs
decl
fs
movsb
lcall
aaa
mov
stos
cmpsl
lcall
hlt
out
repnz
sub
pop
jmp
movsb
pop
sbb
cli
rolb
nop
sbb
sarl
cmp
movsl
mov
insw
adc
pushf
call
or
mov
ljmp
push
call
mov
add
test
mov
fisttpl
imul
sbb
and
sar
sbb
mov
incb
cmc
mov
mov
or
add
sub
into
call
xchg
push
std
iret
and
mov
clc
jns
decl
aad
ret
lock
push
rol
cmpsl
mov
rolb
test
mov
mov
push
sbb
push
push
out
stos
call
data16
lcall
mov
push
fnstenv
mov
lds
dec
pop
mov
ds
adc
xchg
fdivrp
hlt
mov
add
movsb
cli
les
scas
testl
negb
sub
ja
test
daa
xchg
mov
pushl
fdivl
cmp
add
stos
dec
clc
lcall
or
lcall
test
sbb
mov
adc
lods
cltd
pop
sarl
mov
out
dec
clc
hlt
lret
iret
cmpb
cmp
std
scas
rcll
mov
mov
insl
jl
cmp
dec
call
rclb
inc
popa
jmp
cld
andl
cmp
mov
ljmp
jae
jge
lods
dec
int3
or
pop
mov
call
movsl
repz
push
ds
add
roll
cld
sbbl
jno
outsb
sahf
ret
test
aas
and
andl
pop
adc
push
mov
movd
jmp
outsb
sbb
sbb
dec
cmpsb
dec
aad
xor
add
add
arpl
or
jae
jge
jl
push
sbb
mov
sub
ret
inc
outsb
lods
movsl
sbb
push
out
and
std
fs
jmp
loop
xorl
roll
leave
cs
jge
test
ljmp
lds
dec
jg
outsl
cltd
mov
sbb
jecxz
cmovne
outsb
lods
lods
mov
mov
imul
adc
call
fildl
out
xchg
sub
jp
mov
pop
mov
insl
xchg
call
dec
pop
movsl
sar
es
cmp
ds
pop
adc
pop
pop
stc
decl
insb
stos
dec
test
popf
icebp
in
push
xor
pop
mov
cld
arpl
pop
and
aam
fnstsw
xor
xchg
shrb
dec
andb
mov
ret
int3
jmp
sub
dec
ljmp
jne
imul
rcl
mov
inc
pop
push
rorb
mov
dec
lret
mov
cltd
cwtl
mov
xor
xchg
adc
jg
test
and
aas
ljmp
pop
fnstcw
std
pop
pop
imul
cld
or
jecxz
lcall
and
cmp
lock
fstl
scas
incl
ss
jb
add
lahf
clc
cmp
int3
and
pop
and
jbe
icebp
insb
pop
jge
cmp
dec
pop
inc
mov
jo
ljmp
sub
mov
sub
clc
lret
dec
mov
ret
xor
pushf
ljmp
or
insb
stos
cwtl
mov
inc
jge
in
inc
push
jp
adc
decl
repz
dec
add
mov
leave
jmp
ljmp
test
in
cmc
jmp
ss
jns
mov
cmp
jmp
and
dec
enter
xchg
mov
hlt
xchg
xor
addl
pop
inc
jl
add
popa
jge
cmp
std
sbb
and
idivb
shl
clc
mov
jg
cmc
pop
adc
cmpsb
fcoml
mov
mov
aas
iret
lock
js
dec
mov
mov
and
mov
test
xchg
dec
inc
ret
fildll
out
aad
pop
mov
insl
push
cltd
dec
sbb
fcmovne
in
xchg
jns
inc
imul
outsl
test
cmp
mov
dec
subb
repz
lret
ror
sti
mov
lret
mov
push
jns
in
int3
pop
adc
rclb
dec
xlat
pop
aam
insb
test
cmpsl
call
cmp
mov
cmc
out
in
stos
mov
in
pushl
sbb
in
pop
cmp
jmp
push
in
jecxz
push
sub
jg
cmp
fs
mov
push
outsb
decl
lret
je
cli
jg
add
xorb
lods
mov
sub
adc
mov
push
mov
or
fcos
lret
cmp
pushf
xorl
in
push
int3
lock
add
in
lcall
push
pop
sub
or
xchg
inc
js
xchg
add
mov
fistps
in
test
incl
out
pusha
aas
rorb
out
popa
sub
decl
mov
inc
popf
int
in
xor
dec
xchg
pop
mov
cmp
int
imul
xor
jbe
call
pop
xchg
aas
std
push
test
fdivrp
in
push
push
xchg
sar
adc
subl
dec
mov
and
inc
lds
pop
dec
repnz
pop
mov
adc
mov
inc
sbb
cmp
and
adc
in
xchg
mov
and
jmp
cmp
imul
xor
or
loopne
add
cld
or
inc
call
scas
fbstp
mov
in
xor
lahf
in
cmp
push
icebp
cmpl
adc
ss
call
mov
decb
leave
xchg
dec
lret
pop
inc
pop
or
aas
and
pusha
mov
push
push
loope
dec
xchg
test
adc
in
and
fcomip
rcrl
or
mov
call
shll
push
cs
lahf
mov
jecxz
sub
sub
repnz
cmp
xchg
pushl
and
xchg
cltd
call
sub
jmp
push
mov
dec
outsl
inc
call
push
push
cmp
mov
and
enter
and
rorb
jmp
insl
int3
loopne
mov
add
sar
in
cmpsl
xor
xchg
mov
jmp
add
cmpsb
call
in
cmc
and
enter
push
sbb
pushl
or
xchg
mov
cmp
test
cmp
sti
cmp
xchg
les
out
mov
mov
xchg
cmc
sarb
pop
fisubs
std
xchg
jns
std
insl
mov
mov
sahf
insl
aaa
fisubrs
xchg
push
push
imul
mov
movsl
cwtl
aam
mov
incl
roll
mov
mov
cmc
fs
cmpsl
dec
call
loope
cmp
jo
xor
mov
xor
clc
andb
push
or
push
cmp
sbb
lcall
loopne
sub
adc
adcb
icebp
push
mov
popa
add
stos
mov
orl
dec
mov
out
lea
outsb
lahf
adc
loopne
outsl
xchg
outsb
mov
adc
xchg
xchg
cmp
push
clc
and
cmp
mov
out
ret
into
ljmp
jmp
lret
popf
pop
push
ljmp
std
xchg
dec
or
call
add
cmp
push
push
jmp
lcall
jmp
mov
in
jmp
xchg
cld
inc
jg
add
addb
dec
jbe
fildll
pushl
mov
jne
test
dec
shlb
mov
cli
das
add
je
xchg
dec
mul
adc
sub
push
out
je
sahf
decl
mov
sar
lds
jbe
clc
jg
popa
popf
sbb
shrl
imul
lcall
imulb
push
call
inc
rcll
inc
inc
push
ss
push
mov
dec
push
xchg
mov
add
mov
sbb
ljmp
negb
cli
dec
fwait
adc
in
jo
and
lret
or
aaa
cld
popa
call
xchg
push
das
aaa
lcall
mov
int
leave
decl
mov
sarb
in
enter
imul
push
jmp
xchg
lahf
popf
dec
push
pop
decl
les
nop
enter
mov
enter
mov
imul
mov
loopne
sub
mov
enter
cmp
out
out
xor
jge
dec
pop
pop
inc
push
orl
push
xor
adc
sub
mov
mov
pop
fmuls
repnz
jnp
mov
or
dec
mov
daa
add
ljmp
sub
loope
pop
adc
call
aam
inc
jns
dec
sbb
dec
mov
das
pop
mov
je
mov
push
cmp
pop
mov
mov
cli
rorb
addr16
push
dec
fstpt
pop
or
or
outsl
sbb
stc
mov
mov
push
in
sbb
into
push
orb
jg
shrl
mov
jmp
pop
lds
cltd
loopne
test
aaa
ljmp
mov
incl
imul
cltd
lahf
push
in
call
je
insb
mov
pushf
call
dec
and
cmc
xchg
lcall
push
xchg
stos
mov
adc
dec
sbb
int
daa
fstpt
jmp
dec
xchg
adc
sbb
jnp
dec
mov
sahf
imul
mov
mov
sub
loope
sbb
mov
cmp
shll
test
push
mov
dec
xor
ljmp
lahf
push
cmc
sbbb
outsl
je
add
call
xchg
jl
or
inc
xlat
mov
jo
and
hlt
push
aaa
js
call
jmp
dec
inc
nop
pushl
out
pushl
xor
dec
cmp
negb
mov
add
mov
sahf
xchg
sub
aaa
pop
cwtl
ffree
jae
jb
mov
or
mov
call
xchg
jp
add
pop
lcall
mov
dec
loop
cmp
incb
mov
jg
stc
loop
out
fdivp
xchg
cmpsb
ror
cli
dec
mov
xchg
jmp
or
lret
cmp
push
mov
or
vsqrtsd
pop
out
lcall
bound
pushl
fiadds
add
lret
push
jbe
xlat
sbb
decl
pop
mov
repz
mov
xor
cli
jns
aam
mov
and
cmc
mov
add
loope
jb
inc
jg
pop
xor
cmp
ror
outsl
loopne
stc
push
sbb
and
push
stc
and
lahf
add
sti
lds
jp
lods
popa
add
out
mov
addr16
call
loop
sti
addr16
mov
fnstsw
push
scas
lock
lock
cld
cld
outsl
mov
and
push
and
add
push
lcall
add
loopne
xchg
pop
pop
cli
mov
inc
push
pop
lea
or
cmpsl
imul
xor
imul
dec
adc
mov
aad
cld
inc
adc
jp
idivb
pop
cmp
xor
or
out
test
lret
call
and
into
out
lret
cmp
add
cmp
enter
rol
aas
in
mov
push
lret
iret
sbb
ljmp
aam
cld
js
jp
test
xchg
ljmp
imul
xchg
aas
shll
rol
xor
cwtl
sbb
call
into
div
and
stos
sub
mov
or
push
aam
cmp
dec
aad
lock
xchg
xchg
jmp
inc
iret
into
cld
lahf
xlat
lock
pusha
lcall
and
in
imul
clc
ret
insb
mov
clc
mov
jns
mov
mov
lea
popf
fcmovbe
add
push
fcmovnb
out
aaa
stc
jl
call
sbb
jmp
ficompl
icebp
pop
out
out
outsb
popa
mov
call
mov
and
stos
jae
inc
cmp
cmp
sbb
std
and
jg
dec
push
push
lcall
lds
ljmp
xor
xchg
js
shrl
jmp
cmp
aas
jecxz
icebp
inc
xchg
xchg
cmp
mov
enter
es
push
incl
cmp
xchg
pushl
dec
adc
loop
sub
roll
dec
sbb
push
sahf
or
gs
cmp
pop
out
pushf
scas
pushl
cwtl
iret
xchg
sub
cmc
mov
lea
adc
and
mov
les
decl
inc
cld
aam
cld
cmpsb
fucomip
and
mov
cltd
mov
gs
ljmp
int3
stos
or
mov
rorb
cmc
ljmp
push
test
incl
push
test
mov
sbb
cld
dec
mov
cmpsb
movsb
ret
dec
mov
scas
inc
testb
movsl
test
ljmp
jge
das
ljmp
das
leave
mov
into
sub
lock
or
adc
add
std
mov
movsb
xchg
adc
mov
test
andb
pop
insb
mov
leave
ret
dec
arpl
lcall
pushf
cmpsb
add
cmp
popf
jns
ja
arpl
rorb
in
lret
sub
adc
jmp
jmp
inc
movsb
ljmp
fmuls
ljmp
adc
enter
pop
pushf
jecxz
cli
push
cld
iret
popf
adc
adc
xchg
or
pusha
imul
out
call
pop
push
push
jmp
dec
pop
sahf
cli
xchg
mov
mov
sbb
xor
mov
arpl
insb
sbb
dec
mov
sub
sub
adc
out
adc
mov
add
ret
dec
mov
jle
lds
ljmp
pop
cmpsb
fadd
push
in
xchg
decl
mov
xchg
jge
inc
add
test
ret
outsl
int
sub
mov
outsl
push
adc
cmp
in
sub
push
iret
sarb
dec
jns
cmp
sahf
lcall
fld
lock
repz
insl
push
js
andl
or
push
in
jmp
jno
pop
call
fdivr
xchg
cld
mov
and
sbb
dec
push
mov
movsb
popa
addr16
cmp
aam
fwait
xor
adc
pushl
pop
js
call
xor
into
incl
iret
test
outsb
test
pop
push
int3
ljmp
mov
jmp
jg
jle
lods
pop
cwtl
dec
outsl
testl
stos
fldl
sarb
mov
stc
pop
out
xchg
add
jg
and
fstps
xlat
stc
call
push
cmp
jg
push
jp
xor
insl
jg
lods
push
test
call
scas
mov
xorl
fucomi
das
jne
inc
out
or
mov
or
pop
xor
xor
iret
jno
mov
add
inc
pop
je
dec
xor
cmp
fwait
jno
jb
pavgb
cmp
jecxz
fisttps
dec
mov
add
lcall
roll
dec
mov
adc
sbb
ljmp
xchg
mull
mov
js
outsl
into
into
mov
mov
push
jecxz
push
mov
cmp
jns
jg
xchg
pop
pop
decl
test
inc
fistpl
stos
movsl
bound
push
mov
pushl
cmpsb
mov
popa
addl
inc
std
add
and
or
xchg
stos
inc
test
fadd
movsl
mov
pushl
and
cwtl
push
sub
push
sbb
push
pushl
popf
in
pop
push
cmpsl
lcall
xchg
add
mov
and
clc
dec
bndldx
push
ljmp
fbld
int3
adc
jmp
je
xlat
push
mov
loop
addb
call
cmp
scas
in
jnp
add
add
popa
sub
jmp
jg
mov
lods
dec
popf
lcall
sbb
cmpsb
jno
imul
int3
popfw
mov
stos
push
rorb
add
inc
adcb
jg
js
xorl
loop
add
jg
out
lods
xor
sub
imul
pop
int3
push
decl
enter
lods
leave
dec
lcall
es
fwait
cmc
cmp
int
outsl
rol
jmp
and
ja
imul
test
dec
mov
shlb
add
cmp
popa
call
jbe
ljmp
adc
adc
inc
ljmp
pop
ja
call
inc
and
xchg
pusha
push
mov
rclb
ss
mov
loope
js
xchg
xor
outsb
cmp
gs
mov
ja
push
dec
and
adc
mov
add
sbb
shll
outsl
mov
in
ljmp
loop
mov
mov
dec
fwait
lcall
orl
xchg
push
pop
test
lcall
push
outsl
xchg
xor
call
inc
jne
lods
call
insl
mov
xlat
out
notb
scas
decb
das
mov
lock
inc
cld
clc
pop
or
lock
in
es
lcall
in
cmc
lret
scas
enter
lcall
mov
mov
jp
out
sub
mov
gs
push
and
jae
fmul
inc
lret
lods
cmp
ljmp
lods
xchg
fdiv
mov
test
pusha
pushl
pop
mov
push
sub
mov
add
pop
inc
push
sub
mov
mov
fimull
push
pushl
imulb
pop
sar
mov
in
push
rcrl
jmp
out
ljmp
sar
fdivs
lods
xchg
lcall
inc
sahf
mov
pop
jno
push
inc
mov
push
sub
xor
pushl
test
push
decl
jecxz
xchg
ljmp
int
adcl
pushf
xor
mov
push
mov
ss
clc
mov
mov
test
les
ficoml
xor
or
call
sti
dec
jbe
sub
push
push
inc
jbe
mov
xor
sub
loope
sti
shrl
xchg
sbb
ds
jp
call
lods
xlat
out
lcall
mov
sahf
mov
sbb
xchg
jbe
push
xchg
mov
xor
sub
push
mov
pandn
cltd
ja
outsl
std
add
dec
jbe
rcr
adc
push
pop
jmp
mov
aam
icebp
push
sbb
das
pop
sbb
call
int3
pop
inc
in
or
repnz
cltd
fsqrt
loope
rcrb
aaa
mov
int
lret
shrl
push
hlt
std
in
or
dec
add
into
mov
inc
dec
cmp
ret
arpl
sub
jle
fdivrs
push
sbb
add
out
sbb
add
inc
sub
popf
xor
jge
jmp
int
scas
xchg
mull
aaa
jge
jb
push
shrl
fcmovu
loope
jnp
loope
jle
push
inc
lods
mov
mov
mov
cs
lock
loope
outsl
mov
stos
inc
loope
xchg
sbb
cld
sub
cmc
or
lcall
dec
insb
jg
in
cld
mov
cmc
inc
pushf
icebp
push
out
outsl
mov
loop
or
pop
imul
das
dec
pop
int3
mov
test
push
inc
push
fwait
pushl
xor
scas
xchg
xchg
jmp
and
sti
lods
jg
shlb
ja
mov
mov
jg
fmulp
lret
jne
inc
call
incl
scas
jb
or
and
gs
xchg
mov
mov
gs
cmp
push
sar
xchg
into
mov
dec
lock
int
and
or
pop
sbb
pop
xor
idiv
xor
cmp
xor
cmp
mov
iret
push
xchg
clc
and
std
pop
pop
xchg
icebp
iret
shl
sahf
jge
dec
inc
mov
and
ljmp
xchg
call
cltd
aam
mov
pop
pop
cli
pushl
mov
add
inc
mov
into
pop
cltd
mov
call
icebp
sub
push
mov
std
out
int3
pusha
pusha
bound
push
insb
call
pop
in
sbb
in
xor
jge
dec
aaa
fdivrl
xor
ljmp
fldl
mov
sbb
jmp
addr16
pop
fiaddl
push
mov
enter
ds
mov
loopne
ret
leave
cmp
incl
aas
pop
mov
mov
lcall
fdivs
push
fwait
jge
arpl
or
fisttpl
add
and
into
cmp
push
in
sub
xchg
jns
dec
cwtl
stos
lcall
out
sar
iret
repz
dec
cmc
lret
test
mov
loopne
xchg
pop
xchg
ljmp
pop
push
ret
stc
pushl
mov
scas
sti
aad
add
or
call
mov
xchg
lahf
cmp
xor
aam
jmp
mov
mov
fnsave
mov
add
ret
sub
rcr
lods
cmp
pop
shll
pop
hlt
push
jae
pop
mov
insb
or
xor
sub
push
mov
js
movsl
cmpsl
and
nop
xor
loop
mov
add
mov
sub
clc
mov
inc
or
adc
popa
jmp
push
xor
loopne
mov
dec
xchg
out
lcall
lods
mov
pop
dec
call
mov
int3
call
sbb
pop
nop
jae
sbb
dec
es
decl
pop
roll
pop
add
push
push
inc
js
adc
lcall
je
dec
push
cli
pmaddwd
incl
sbb
mov
push
testl
mov
adc
aad
pop
icebp
imul
mov
push
cmp
fdivrl
mov
decl
shlb
sbb
jp
adc
popa
out
inc
mov
ret
push
xchg
dec
call
dec
into
decb
std
ss
daa
lock
or
mov
testl
popf
leave
push
mov
xor
mov
das
inc
xor
movb
push
add
test
and
xor
sbb
jae
insl
jg
aas
decl
add
mov
push
add
sbb
push
jg
mov
adc
and
and
rcrb
pop
inc
mov
loop
push
mov
stos
in
mov
push
sbb
jmp
or
xchg
or
outsl
cmp
xchg
xchg
arpl
or
nop
repnz
push
cmp
sbb
hlt
inc
sub
mov
data16
hlt
out
shl
call
icebp
sbbl
insl
mov
jg
stc
or
adcb
les
sbb
adc
mov
dec
jmp
test
and
cltd
js
test
frstpm(287
mov
ljmp
scas
pop
ss
adcl
jp
pop
xor
adc
push
sar
or
ljmp
xorb
and
call
lods
aas
adc
mov
mov
sub
push
and
cmp
mov
addl
push
test
decl
andl
clc
or
popf
movsb
mov
nop
and
push
xchg
iret
sub
lret
xchg
or
push
jg
and
cmp
pushl
clc
call
push
xchg
and
addr16
pop
mov
jmp
push
cmp
adc
xor
mov
lret
jmp
sbb
iret
jmp
inc
loop
xor
mov
popa
and
out
lret
decl
cmp
incl
mov
mov
xor
and
push
and
add
pop
sub
or
orb
fldenv
add
test
xor
mov
or
mov
fdivr
push
mov
xor
loope
pop
rcll
lock
orl
dec
aad
jo
out
adc
dec
ljmp
mov
shl
push
lea
mov
into
cmc
scas
shl
frstor
mov
inc
push
mov
push
jbe
in
adc
push
test
scas
cmp
or
add
and
mov
mov
cld
sub
pop
sub
push
jmp
jp,pt
jg
xchg
xor
test
ljmp
ljmp
cs
sarb
incl
pushf
cmpsl
stos
push
filds
inc
sar
add
in
into
adc
xor
mov
loope
loop
push
and
ret
daa
pop
pushl
rolb
test
jmp
lahf
insl
test
mov
icebp
stc
push
das
push
outsl
cltd
in
pop
pop
lcall
leave
mov
ljmp
divl
jnp
incl
mov
adc
ss
pusha
aam
addr16
enter
jge
cmpsb
xchg
faddp
imul
in
cltd
xor
and
mov
xchg
arpl
sub
daa
push
sbb
cmp
enter
jg
stc
es
lcallw
lea
das
xor
mov
shlb
bound
mov
adc
xlat
xchg
adc
push
icebp
outsl
shlb
cmp
add
insl
xchg
jmp
shl
shlb
xchg
outsb
xor
sar
jns
pop
and
incl
in
loop
dec
cmp
gs
inc
xchg
push
cmp
jae
fistps
scas
ja
fwait
xchg
daa
pop
xchg
xchg
or
sub
pop
mov
add
incl
inc
iret
filds
outsb
cli
xchg
adc
ret
xor
add
adc
addr16
jmp
pop
nop
jp
fadds
addr16
ja
mov
jmp
and
jg
adc
and
jo
dec
push
out
dec
adc
scas
jae
mov
add
and
xchg
sub
cs
loope
call
push
mov
lcall
icebp
int
sti
std
aaa
decl
mov
insb
loopne
not
fists
arpl
adc
iret
inc
dec
sub
cwtl
cmp
into
loopne
adc
sub
sub
xor
filds
mov
icebp
loop
ret
in
push
fnstenv
test
incl
dec
ror
cmpsb
sub
jge
cs
jmp
inc
ljmp
out
ret
lcall
mov
rcll
out
out
in
aaa
cltd
jmp
out
aas
fsubp
add
push
cmp
pop
inc
incl
rclb
inc
js
sahf
mov
xor
daa
lock
lds
mov
outsb
mov
sub
das
dec
pop
aad
cmp
fwait
movsl
sub
push
out
scas
mul
pop
ret
ljmp
loop
inc
sub
mov
dec
adc
push
adc
cs
adc
or
js
and
xor
push
hlt
jmp
push
push
cmpsb
fcos
add
lds
imul
lock
mov
pushf
leave
call
call
adc
dec
aam
cmp
outsl
sub
js
xor
pop
jge
negl
xor
movl
push
cmp
rorl
xchg
in
pop
jne
dec
clc
out
fisubrs
push
test
push
stos
ds
incl
mov
popf
call
jp
mov
inc
mov
call
pop
bound
jnp
inc
call
dec
das
mov
adc
and
stos
jle
sbb
push
into
js
and
call
data16
adc
xchg
mov
jo
dec
mov
lret
adc
or
mov
pop
les
out
repnz
push
imul
jmp
mov
add
call
in
adc
sbb
jmp
xchg
sarb
or
sub
ljmp
push
pushl
jne
cld
in
adc
lcall
push
into
test
inc
imul
sub
call
jg
pop
pop
jb
jmp
and
dec
in
outsb
popf
in
dec
rcrl
mov
outsb
xor
adc
pop
int
test
test
add
jns
lcall
lret
dec
data16
clc
call
repz
sbb
incl
push
push
mov
idivl
xorl
mov
nop
inc
out
ret
push
pop
sbb
jp
adc
incl
adc
inc
xor
dec
mov
iret
mov
lret
dec
mov
insb
dec
call
xor
sub
or
inc
sbb
mov
incl
push
adc
dec
call
mov
adc
clc
ja
aas
cmp
cmp
adc
rcl
push
mov
imul
push
inc
dec
mov
or
jmp
xchg
ss
aad
aaa
jae
add
sahf
ja
ds
and
imul
jne
out
stos
sbb
shl
in
adc
loope
std
repnz
std
movsb
hlt
push
sbb
ficompl
es
incl
jns
inc
rorb
inc
sbb
lea
sti
pushl
fsubrs
lret
imul
les
loop
icebp
xchg
imul
xchg
pushf
fists
jmp
add
fsubl
popa
pushl
jp
or
mov
cli
or
shlb
push
xchg
push
fisubrl
movsl
pop
and
outsl
clc
test
mov
cmc
adc
dec
push
pop
jno
jmp
ja
rorb
into
xor
cli
jle
push
or
jge
and
pusha
xor
notl
push
push
clc
and
out
jne
inc
push
push
das
pop
in
lret
mov
and
add
mov
cmp
pop
rcll
sub
adc
or
jnp
pop
inc
bnd
pop
mov
call
test
push
sbb
int
cld
cltd
test
cmpb
push
push
test
inc
js
out
insb
xchg
jle
jmp
mov
lcall
xchg
jo
xchg
insl
je
shlb
movsl
js
sbb
add
cmpsl
dec
mov
in
push
mov
mov
add
ljmp
mov
aam
daa
lcall
mov
adc
shl
repz
out
sub
jnp
pop
call
inc
add
pushl
jb
sbb
and
add
stos
and
icebp
clc
push
or
lcall
stos
loop
pop
decl
nop
rolb
lods
lcall
sub
call
xlat
pop
out
fsub
incl
push
popa
jnp
mov
les
push
pop
out
sahf
lods
call
xor
add
std
push
call
cmp
add
sub
xor
ret
outsb
pop
decl
cmc
sub
push
aam
int
and
loop
sar
push
sub
insl
scas
cmp
dec
sub
inc
std
rcrl
mov
sbb
in
push
out
lock
adc
push
mov
xchg
loopne
enter
fstp
pop
fucomip
ds
sbb
pushf
test
push
scas
mov
jmp
jnp
outsl
fwait
or
cmp
jns
dec
jmp
rclb
jmp
sub
lea
in
jb
or
fld
push
xchg
cmpl
mov
call
xor
sahf
inc
pop
das
mov
fcoms
cmp
jmp
jle
xchg
jns
call
push
nop
je
mov
lea
test
jle
loop
push
fildll
dec
outsl
shrl
aad
mov
push
mov
push
jecxz
push
and
int3
and
cli
jg
mov
out
sar
mov
xor
jbe
dec
push
sbb
xchg
xchg
push
mov
xchg
xlat
jne
repnz
fs
imul
push
xchg
lahf
adc
stos
xchg
inc
adc
fisttpl
loope
ret
and
pop
push
or
dec
repnz
call
pop
adc
outsb
das
incl
ljmp
jo
sub
andl
ficomps
push
mov
xor
adc
repnz
dec
ljmp
fisubrs
jmp
add
test
out
dec
jbe
sub
push
xor
dec
adc
sub
lcall
inc
loope
int
inc
mov
cmp
ret
lock
test
in
mov
push
jo
jnp
jnp
call
jno
mov
add
nop
jno
or
int3
adcb
les
std
in
testl
call
ljmp
cmp
arpl
cmp
dec
call
mov
cli
pushf
add
rol
mov
gs
lcall
push
ret
mov
push
xor
or
mov
sbbb
push
cmp
xor
lcall
mov
scas
push
xor
adcl
jmp
ret
cmp
or
cs
cli
add
out
dec
dec
pop
push
fdivrs
inc
mov
loope
xchg
and
arpl
decl
ftst
mov
cmp
or
sub
pusha
fisttps
aaa
lods
aaa
cltd
out
jmp
add
xor
aaa
cmp
mov
lds
cmc
repz
movsl
jmp
jg
iret
push
repz
std
ljmp
insb
push
jns
sti
movsb
lds
js
push
xor
stos
rcr
es
outsl
ss
sar
scas
out
jge
or
outsl
mov
fwait
and
mov
xchg
jl
cmp
sahf
cmp
jne
and
pop
sarl
js
fnsave
les
mov
lcall
jecxz
push
sbb
imul
cmp
cmp
pop
sbb
cli
lret
inc
mov
sbb
lods
leave
push
mov
mov
scas
popa
mov
clc
fisubrl
mov
lret
sub
imul
jmp
in
shl
pop
jmp
decl
mov
insb
mov
cwtl
ljmp
mov
mov
inc
dec
mov
sub
or
mov
mov
or
xchg
cmc
leave
and
sub
jnp
xchg
jge
cmp
dec
inc
mov
sub
ss
or
pop
pop
push
fcos
mov
push
shlb
hlt
dec
or
fstpl
leave
push
call
xor
arpl
dec
jmp
das
int3
gs
ss
pop
incl
sbb
cmp
xchg
stc
pop
add
add
xorb
jecxz
dec
imul
sti
push
jle
xor
ss
jmp
jo
scas
decl
inc
push
cmp
mov
rorl
push
dec
jnp
gs
jo
mov
pop
pop
leave
pushl
imul
in
sub
mov
insl
test
out
sbb
pop
add
cmpsb
mov
mov
mov
mov
test
div
cmp
and
sar
sahf
orl
lret
adc
sub
push
sub
pop
push
cmc
mov
fdivr
stc
loope
sbb
stos
jnp
and
jp
xchg
shll
sub
cmp
int3
mov
cmp
and
clc
xor
inc
inc
mov
xchg
clc
push
mov
and
stos
xchg
cmp
cmp
outsl
imul
cmp
ret
inc
call
push
lcall
add
std
pop
mov
subl
pushf
sbb
push
lcall
push
push
bound
cmc
pop
les
push
inc
cmp
pop
sub
adc
mov
jge
fwait
lahf
inc
sbb
jp
jmp
call
out
jle
dec
lcall
xchg
jns
leave
and
incl
psubb
or
repz
adc
xchg
aaa
dec
push
fsubrs
mov
or
mov
ja
sub
mov
test
clc
or
inc
mov
addl
nop
dec
sar
lret
out
or
outsl
mov
sub
incb
xchg
and
mov
decl
sbb
cltd
adc
ss
xchg
test
cmpsb
out
mov
pusha
cmp
es
jne
testb
stos
dec
or
or
xchg
dec
aas
xchg
call
int
cld
xlat
xchg
mov
dec
call
out
comiss
ret
or
cli
inc
pusha
es
adc
in
sub
fcomps
dec
cmp
push
addr16
fdivl
mov
std
mov
leave
inc
jmp
adc
xor
imul
push
or
push
sub
push
jge
adc
pop
mov
rclb
push
mov
sbb
aam
clc
sbb
cltd
dec
sub
and
jecxz
xchg
or
sub
jbe
mov
aas
inc
adc
inc
jae
or
jbe
mov
scas
int
cwtl
fwait
nop
inc
xor
pop
loope
mov
fnstsw
clc
das
call
xchg
cmp
push
out
cli
lret
push
jb
inc
pop
leave
xor
loopne
adc
sub
insl
sub
mov
jmp
aam
roll
cmp
mov
jg
xchg
push
scas
mov
aaa
dec
cmpsl
pop
cmpb
jbe
es
incl
cmp
aam
cmp
sbb
mov
movsb
jmp
jg
and
inc
stc
movsb
stos
sub
call
jge
pop
jecxz
mov
test
lea
xor
lcall
inc
jl
mov
call
shll
inc
cmp
xchg
int
and
icebp
arpl
adc
lds
aam
lds
xchg
ja
pop
inc
push
pushf
gs
dec
outsb
sar
arpl
inc
popa
inc
mov
push
push
or
jmp
mov
adc
jne
imul
lock
mov
mov
mov
pop
fnsetpm(287
call
xchg
icebp
inc
cmpsl
jmp
mov
lahf
jmp
xor
jmp
clc
xor
testb
sub
out
jmp
xlat
cli
add
and
jecxz
mov
fisttps
imul
sub
mov
and
popf
call
mov
adc
xchg
dec
sub
push
call
fsubrp
and
js
jl
sti
sbb
lods
mov
call
or
mov
jmp
pop
cmp
sub
push
out
out
test
jge
mov
cmp
pop
inc
imul
inc
loopne
jno
sbb
push
dec
int
jb
add
jne
pop
pop
pushl
inc
nop
xchg
adc
inc
smsw
add
add
add
or
int
das
je
sbb
call
adc
push
imul
inc
clc
cmpsb
cmp
out
call
mov
fildll
sar
dec
inc
mov
call
scas
adc
scas
cmpsb
mov
out
repz
push
xor
and
loope
and
aam
es
test
jbe
pop
adc
xchg
jne
mov
in
call
out
xor
cmp
ret
push
cmpsb
lcall
sub
mov
push
inc
lock
jge
in
inc
call
push
outsl
jmp
dec
imul
mov
cmpsb
xchg
push
int3
aas
enter
jmp
test
jg
ljmp
xor
jne
rorb
icebp
jb
ljmp
repz
push
decl
sub
lret
fadds
ljmp
dec
and
call
mov
mov
dec
rol
int
enter
push
aaa
jmp
adc
jbe
insb
or
xchg
inc
mov
ja
jmp
popa
cmp
add
mov
sti
shll
pop
or
aaa
xchg
jecxz
ljmp
movsb
jo
or
xchg
or
ljmp
clc
ljmp
data16
fdivrl
cli
pushf
arpl
insl
add
lahf
sti
out
shl
push
popf
cli
jae
bound
pop
stos
xchg
and
mov
pushf
dec
add
ljmp
dec
outsl
inc
pop
pop
mul
lcall
gs
pushl
enter
add
cmp
mov
ss
mov
or
fwait
pusha
mov
xlat
pop
lods
mov
mov
mov
iret
sarl
jge
mov
cwtl
jecxz
mov
and
push
inc
aas
decl
jge
cmp
push
shl
lock
xchg
call
jnp
je
and
xchg
jmp
mov
adc
jmp
ret
lock
mov
movb
movsb
jno
stc
stc
jg
cmp
cltd
pusha
ljmp
xor
push
sub
xor
pop
inc
lahf
test
cmp
shlb
ror
jecxz
dec
mov
jo
and
inc
imul
dec
pop
inc
cwtl
popf
enter
push
icebp
imul
inc
mov
or
xchg
in
xor
inc
inc
sub
or
pushf
dec
stos
xchg
sbb
aaa
idiv
xchg
stos
and
jle
aaa
or
loopne
add
test
pop
stos
ds
ss
adc
mov
popl
gs
mov
jb
outsb
in
cmc
xlat
adc
outsl
testl
icebp
xor
movsl
hlt
ljmp
pop
sub
mull
and
add
mov
sub
push
test
inc
push
push
aaa
fs
popf
cli
push
xchg
dec
pushl
fistps
jmp
popf
scas
sar
and
dec
lods
cld
fwait
pop
mov
inc
ljmp
adc
and
sbb
mov
push
clc
jns
adc
inc
pop
ret
in
std
sbb
sbb
decl
xchg
es
popa
or
lret
fadd
push
xor
imul
std
iret
or
imul
add
xchg
adc
decl
jmp
push
and
mov
jns
sbb
mov
fwait
popa
adc
leave
lods
call
enter
and
idivb
mov
lcall
or
mov
subl
ljmp
ja
mov
add
sub
jne
jns
mov
or
jmp
xchg
ljmp
mov
aaa
sbb
cmp
popf
faddp
pop
je
jmp
mov
pop
addps
in
aaa
push
jg
mov
pushl
enter
mov
daa
xor
lds
pop
mov
inc
or
cli
add
sbb
outsl
cmp
je
mov
fnstcw
das
movsb
sar
nop
cmp
adc
outsl
xchg
xchg
xor
subl
insb
or
push
pop
enter
xor
mov
sbb
sub
cmpl
je
jmp
cmp
ljmp
and
pushf
in
es
fisttpl
in
aaa
pop
push
push
adc
push
mov
lcall
daa
pop
pop
insl
lret
mov
rcll
push
sbb
icebp
decl
mov
mov
scas
hlt
lock
out
mov
sub
cmp
incl
les
lods
mov
ret
cmc
nop
mov
cmp
inc
adc
shl
pop
lcall
cmpsb
lret
bound
mov
mov
hlt
mov
adc
test
call
je
ljmp
fstpt
adc
sti
mov
pop
fwait
test
jg
js
fsubrl
cltd
call
mov
inc
push
clc
mov
repnz
mov
inc
call
xor
mov
adc
xchg
addr16
or
je
stos
inc
outsl
dec
mov
das
mov
clc
push
insb
push
jecxz
ret
pop
sbbl
jmp
jb
lahf
mov
popf
incb
dec
cmp
mov
push
rcr
data16
sti
jg
je
inc
ja
sbb
arpl
je
les
lahf
test
cli
mov
mov
jmp
ds
push
pushl
rcl
sub
pop
mov
xor
jmp
sub
or
mov
dec
lds
mov
hlt
cli
xchg
pop
pusha
sbb
je
in
fistpll
decl
fcmovu
inc
enter
push
pop
adc
cmp
scas
movsl
sub
mov
cmp
dec
jmp
int
out
push
addl
push
pop
dec
pushl
sub
notrack
iret
mov
jns
mov
dec
add
jp
mov
adc
in
mov
test
lods
shll
call
cmp
push
push
sbb
push
addr16
xchg
mov
and
insb
pop
xchg
adc
cmc
insb
mov
loop
jge
mov
and
jle
ret
repz
sub
repz
lds
pop
xor
inc
jp
sbb
out
xchg
cmpsl
cmp
push
ror
enter
jl
jle
cwtl
jns
xor
fwait
push
pushl
es
cld
stos
test
jnp
call
pop
cs
sub
dec
push
push
cmp
mov
cli
dec
pushl
dec
aaa
rorl
rol
in
mov
mov
test
popa
int
mov
adc
push
mov
cld
imul
sarb
subl
or
mov
mov
push
dec
bound
nop
jo
clc
std
dec
and
daa
or
jle
cmp
leave
inc
lds
pushf
das
push
std
push
fiadds
test
cmp
cli
dec
vpmaxsw
ret
test
pop
pop
call
and
and
pop
jmp
jno
icebp
sarb
push
gs
sahf
fwait
inc
xchg
cwtl
xchg
shrl
outsb
popa
hlt
jp
jmp
and
decl
jno
xor
iret
decl
mov
lahf
mov
out
and
std
push
cmpsb
sbb
lcall
pop
test
add
mov
fistps
inc
xor
jecxz
mov
pop
in
jp
ljmp
mov
dec
sar
pop
rorl
lcall
lret
iret
dec
mov
and
lods
mov
test
mov
cs
mov
jo
faddl
lea
pop
shrl
pop
push
cli
and
pop
mov
jmp
pop
sti
lret
outsl
lcall
cs
mov
inc
ljmp
xchg
jge
mov
cwtl
test
test
adc
sub
xchg
inc
and
cmpsl
aad
sarb
stc
lahf
loope
pop
call
cmp
sbb
jmp
mov
jno
cmp
push
pushl
movsb
xor
jmp
mov
in
cld
das
lret
lcall
lods
xor
into
out
int
mov
lea
test
testb
ret
mov
xor
ficompl
pop
lods
fisubrs
xlat
test
out
mov
movsl
cmpsb
incl
mov
push
add
loop
xchg
gs
cmp
pop
xor
mov
cs
mov
cmp
cwtl
push
add
hlt
stos
into
jo
fcompl
cmpb
movsb
jns
dec
js
rolb
jae
lock
popa
call
dec
push
jge
mov
push
dec
jg
lcall
sbbb
lock
inc
outsl
add
stc
pop
sti
dec
lret
mov
aam
mov
and
cmpsl
call
nop
xor
cmpsb
or
jge
pop
imul
mov
inc
mov
ds
icebp
call
icebp
addr16
lods
stos
jmp
xchg
inc
ret
in
mov
jb
mov
mov
jmp
decl
inc
cmp
lea
and
mov
mov
dec
sbb
xchg
mov
das
call
mov
addr16
outsb
popf
mov
or
add
cli
stc
insb
sbb
mov
fsubrs
adc
jmp
dec
inc
fisubl
aam
dec
shll
push
loop
jae
lcall
std
sub
call
and
xlat
incl
arpl
lcall
xchg
in
insb
jns
pop
stos
cmp
and
sarb
cmp
das
in
insb
mov
cmp
shll
mov
ud0
popa
js
mov
loop
arpl
mov
pop
pop
mov
call
lahf
pop
daa
ljmp
sub
inc
aad
inc
mov
cs
ljmp
pop
xchg
adc
lret
inc
fstpl
jne
cs
fcoms
pop
cmp
sbb
dec
shl
push
xlat
fldcw
dec
mov
lcall
jg
or
and
sar
mov
jno
mov
mov
add
call
decb
mov
js
sbb
dec
add
xlat
test
jmp
xlat
rcll
jg
lahf
cmp
bound
pop
ljmp
out
jae
and
rcll
aam
pop
es
outsl
push
cmp
scas
ljmp
stos
cmp
xchg
call
or
push
lock
addr16
mov
mov
incl
mov
mov
pop
mov
imul
mov
jg
inc
movsb
mov
lods
cmp
jnp
imul
xchg
inc
or
shll
arpl
iret
ljmp
test
inc
xlat
adc
cmp
ficoms
sbb
push
insl
lods
xor
pop
stos
jns
adc
loop
leave
or
inc
cmp
lret
cld
jns
ret
jno
dec
pop
or
cmc
in
mov
push
stos
push
sbb
sub
call
inc
repnz
test
cmp
push
mov
lcall
out
das
daa
or
push
dec
jmp
add
push
cmp
mov
aas
inc
lock
sbb
push
gs
add
ret
push
fsts
xchg
inc
inc
jg
dec
add
sar
ss
imull
push
jp
test
add
pop
mov
pushf
mov
jne
mov
mov
cmpsl
adcl
pusha
xchg
adc
add
bound
sbb
incl
mov
test
sbbl
lcall
cmp
inc
jne
sbb
decl
push
pop
sar
adc
adc
movsb
arpl
mov
mov
pop
cwtl
mov
das
lock
xchg
dec
cmpsl
popa
cmp
roll
out
xchg
lcall
jo
inc
lods
shlb
mov
dec
aaa
jge
test
cmp
test
push
stos
cmp
lock
mov
jmp
mov
pop
and
inc
cli
ja
ljmp
aaa
hlt
out
scas
out
inc
pop
and
cwtl
mov
rcrl
orl
jp
dec
lret
xlat
push
imul
dec
int
cmpsb
ljmp
jp
clc
inc
filds
mov
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
decl
les
jae
sub
sbb
push
adc
in
jbe
pushl
jbe
stos
xor
call
rcrb
aad
xor
roll
ret
ret
inc
sahf
out
dec
mov
push
push
and
xchg
and
xchg
jo
jmp
and
decl
scas
in
hlt
xor
lea
incl
inc
imul
mov
sub
add
mov
jle
or
aad
cmp
mov
sbb
mov
aad
movsb
inc
es
aas
push
pop
lret
das
push
insb
pop
clc
xchg
cli
cli
adc
lods
mov
or
lcall
outsl
mov
sar
ljmp
sub
cmp
test
pop
les
sbb
sti
aaa
lcall
mov
scas
scas
mov
dec
sub
adc
pushl
xchg
mov
xlat
subb
or
adc
aad
mov
pop
cmp
xchg
dec
inc
fcomi
ja
mov
xchg
push
nop
mov
pop
rcr
jb
insl
aam
cmpsb
inc
leave
cld
out
nop
cmpsl
mov
mov
mov
jmp
xor
jg
lds
aam
jg
and
mov
sub
ss
scas
sbb
aaa
mov
cmpsl
decl
jmp
push
clc
in
out
pop
lcall
jg
imul
inc
mov
aam
dec
outsb
dec
test
inc
push
ret
jnp
dec
stos
push
call
repz
inc
push
test
gs
lcall
xchg
mov
rorb
jmp
cmc
rcll
outsl
pop
mov
jg
cli
ss
mov
cmp
fcomps
cli
test
jp
test
mov
cmp
push
jmp
jmp
sub
and
imul
js
or
mov
inc
or
ljmp
pop
pop
push
imul
push
mov
and
ja
lcall
or
jmp
rcll
xchg
ljmp
scas
cmc
adcl
sar
fwait
xchg
dec
test
ljmp
mov
repz
pop
je
call
pusha
mov
jg
mov
icebp
push
pop
fisttpll
insl
jne
cmp
dec
test
mov
ds
lods
rcrl
dec
jg
out
nop
call
jns
fistps
jns
adc
cmp
daa
mov
pop
jge
mov
add
xchg
cmp
sub
sub
out
negl
dec
flds
mov
push
movsl
fcoml
cmc
or
das
imul
jo
jb
jle
adc
push
cmp
fsubl
xor
lea
enter
pushl
jnp
mov
int
jbe
lock
mov
sub
mov
popf
out
mov
loope
loope
imul
cmp
das
sbb
call
shll
inc
mov
push
dec
cmc
push
pop
addr16
sub
sbb
xchg
lahf
scas
pop
cld
xlat
icebp
mov
push
sub
lock
jle
into
sub
sar
cmp
lods
insl
stc
mov
loop
or
mov
ljmp
sbb
incl
inc
pushf
add
lock
addl
cmpsb
sub
push
out
lods
mov
loop
xchg
leave
pushl
lea
and
fcompl
cmp
pushl
nop
cmpb
nop
mov
xor
dec
les
movsb
mov
dec
push
lcall
insb
movsb
cmpsb
out
sub
pop
lret
fistps
xchg
mov
xchg
cmp
adc
push
sbb
cmp
lods
push
cld
dec
dec
mov
inc
jnp
xor
inc
int
xchg
out
fdivrp
adc
jp
mov
add
decl
out
inc
daa
aas
push
push
call
cli
loopne
lcall
push
adc
cmp
scas
dec
sub
push
std
fildll
lret
call
cltd
inc
shrb
add
add
pop
scas
outsb
dec
push
inc
sub
mov
pop
jge
push
jecxz
adc
mov
or
mov
out
mov
jmp
cmc
repz
cld
cwtl
xor
or
aaa
mov
data16
push
das
inc
sbb
adc
dec
mov
pop
in
jl
rorl
push
add
fisubl
pop
sub
loopne
jno,pn
pop
mov
decl
je
sbbl
pop
mov
mov
sbb
fdivrp
repz
cli
rclb
push
mov
decl
das
and
scas
inc
call
loop
jne
or
decl
std
ret
ret
jmp
shrl
jmp
loope
fidivrs
mov
ljmp
repz
insl
in
ljmp
and
mov
stos
pop
addr16
inc
data16
jl
fwait
out
hlt
test
and
adc
ljmp
sub
mov
add
lahf
pusha
repnz
pop
push
or
or
pop
adc
clc
scas
das
test
ja
and
popa
push
pop
cmp
js
ret
push
mov
movsb
aaa
clc
int3
sti
or
loopne
mov
aad
hlt
notl
call
nop
pushl
jns
out
and
call
sub
and
iret
xor
mov
je
or
pushf
jmp
xor
push
stos
dec
jno
push
inc
add
mov
lret
lret
adc
add
cltd
aaa
les
cmp
cwtl
cli
mov
mov
popa
cs
mov
jg
push
xor
pop
cmpsb
outsb
test
loop
movl
out
cmp
xlat
stos
lcall
gs
mov
mov
mov
outsb
jge
inc
adc
aam
pop
xor
incl
xchg
arpl
jns
test
or
add
lds
jb
inc
imul
pop
stos
cmp
sar
in
out
mov
or
add
or
adc
das
loope
popf
ret
jmp
aam
and
add
pop
push
jmp
and
dec
dec
pushl
or
idiv
movsl
add
mov
popa
cmp
clc
jo
mov
out
jmp
mov
sahf
out
xchg
xchg
jne
mov
lret
fwait
jmp
inc
inc
xchg
ljmp
bound
mov
mov
push
leave
mov
adc
or
mov
mov
lcall
mov
dec
aad
aas
push
outsl
outsb
hlt
sti
testb
in
outsl
outsl
cwtl
xchg
rorb
lcall
and
sub
movsb
pushl
add
incw
fdiv
sub
jle
cli
int
or
out
inc
mov
in
ret
test
cmpsb
notb
mov
scas
outsl
jmp
repz
cmp
pop
pop
or
cld
adcb
xlat
xchg
test
add
xchg
push
dec
repz
and
push
inc
jecxz
inc
dec
in
cltd
cld
push
cvttps2pi
shrl
xor
decl
pop
sahf
fisubs
clc
pop
inc
test
fsts
cmp
cli
mov
ficoml
push
or
sbb
xchg
jecxz
cmpsl
shrb
test
das
clc
stos
and
push
fisttps
arpl
mov
mov
sbb
test
movsl
scas
icebp
cmp
jbe
xorb
lea
fldcw
sub
mov
imul
arpl
push
std
outsb
pop
cmp
test
adc
mov
push
ljmp
out
movsb
mov
push
xchg
and
push
jb
push
ret
loopne
jno
pop
dec
pop
xchg
dec
jo
jmp
jno
das
jmp
inc
je
loopne
call
mov
xor
cmpsb
pop
lods
cmp
mov
cwtl
loopne
fs
adc
sti
mov
filds
jl
stos
int
xor
iret
mov
out
pop
icebp
ljmp
out
sbb
jmp
test
mov
inc
dec
lock
test
repnz
and
std
incl
jo
mov
mul
je
rcrb
jo
mov
sbb
test
xorl
bound
pusha
jbe
stc
push
lcall
jge
jl
inc
rcrl
fs
xchg
sbb
lcall
push
mov
call
fcmovnb
jg
pop
rclb
cwtl
push
cli
jo
mov
jg
stc
jecxz
decl
mov
jge
dec
repnz
cmp
cmp
mov
lods
pop
push
push
jg
fcomip
inc
cmp
sub
or
pop
jno
or
jns
cmpsl
pop
pop
and
ret
lods
in
inc
insb
aam
push
cmpsb
push
cmp
lods
inc
outsb
scas
cmp
call
or
xor
mull
cmp
notl
mov
fucomi
push
mov
in
xor
outsl
mov
pushl
dec
cmp
jmp
call
push
subb
pop
xchg
lods
ljmp
push
xchg
pop
out
cli
or
loopne
es
sbb
push
aad
lcall
dec
dec
call
mov
jmp
pusha
and
gs
jbe
adc
pushl
loop
push
test
repz
add
sbb
jns
mov
scas
or
or
inc
inc
aam
push
or
push
ljmp
lods
cli
scas
inc
sub
sbb
sahf
jo
lea
dec
push
rcrl
adc
ror
mov
sahf
pop
loopne
xchg
cld
pop
rcr
inc
fildll
mov
jg
addb
ja
push
imul
outsl
mov
dec
add
jmp
sbb
xor
imul
lcall
filds
test
out
cld
scas
fnsave
or
push
loopne
ss
sub
cld
aam
lret
jmp
clc
dec
popa
add
mov
sub
fdivr
push
je,pn
jmp
jbe
andb
dec
xchg
pop
icebp
pop
aad
cmp
pushl
rcrb
popf
mov
cli
iret
ljmp
xor
loope
cld
jne
jg
inc
inc
gs
add
dec
adc
sub
scas
mov
pop
pop
out
std
and
cld
sbb
mov
nop
arpl
mov
xchg
add
pushl
cmp
lock
mov
jne
incl
ss
mov
lods
mov
add
jg
sahf
push
call
cmpsl
jbe
jp
jo
mov
cmp
scas
fisttps
mov
pop
lock
xchg
lcall
punpckldq
inc
insl
add
call
or
mov
push
adc
or
and
std
mov
dec
imul
imul
ficompl
xchg
jns
push
or
jae
ljmp
fdiv
lea
es
push
jmp
cmp
clc
ror
inc
mov
fucomi
cli
push
add
sbb
clc
pop
std
stos
cmp
cmc
in
inc
pop
push
jmp
in
pusha
ljmp
jmp
xchg
mov
imul
push
or
loop
pop
fdivr
hlt
jbe
and
xorb
decl
mov
mov
xor
clc
jmp
mov
mov
fmull
adc
ljmp
cld
fisubl
lcall
push
push
adc
jmp
add
scas
incl
lret
pop
mov
jmp
cmpb
aaa
subb
jmp
mov
scas
je
mov
and
jmp
mov
mov
outsl
int
push
rcll
pop
call
xchg
add
cmc
shll
stos
mov
popf
push
inc
jb
call
lock
add
outsl
dec
xor
xor
ds
mov
cmp
pushl
mov
inc
andb
sbb
sarl
fldcw
cmp
call
cmp
and
jecxz
mov
rorl
or
sbb
hlt
lods
into
pushl
sbb
adc
ret
add
dec
scas
mov
roll
test
je
add
sbb
dec
mov
sub
jmp
push
cld
ljmp
inc
and
movsl
imul
decl
les
sarl
adc
pop
fsubr
icebp
out
ljmp
jbe
pop
mul
fsubp
icebp
outsl
pop
or
jle
nop
add
push
mov
sbb
imul
pushl
bound
rol
ja
out
sbb
mov
pop
jle
loopne
cwtl
inc
push
aaa
pop
adc
pushl
ss
inc
int3
hlt
dec
ljmp
jmp
sbb
jecxz
test
rcr
mov
push
test
cwtl
hlt
mov
idivb
fldt
xor
insl
ljmp
mov
outsb
ljmp
xor
loop
jp
cli
sbb
push
cmp
sub
ljmp
imul
jmp
bound
add
push
jge
jmp
decl
dec
test
clc
push
lahf
aas
sub
int3
fsub
xchg
mov
mov
adc
sti
fisubs
mov
cld
aad
fisttpl
dec
mov
push
shll
stos
ud0
mov
aaa
daa
push
pop
add
cs
movsl
dec
cmp
loop
mov
add
incb
mov
pusha
lods
sub
cld
into
or
xor
inc
inc
leave
scas
scas
mov
jle
or
clc
add
test
mov
idivb
stc
cs
add
sub
stos
ds
stos
mov
jg
inc
xlat
inc
inc
pop
call
mov
fnstcw
mov
push
iret
pushl
lods
sbb
imul
ret
fcmovb
out
jp
xchg
out
decl
scas
adc
xchg
pop
loope
ret
lahf
aad
stos
ljmp
aaa
jmp
jnp
in
ffree
mov
mov
and
fnstcw
pop
je
push
xchg
popf
jge
sbb
push
pop
mov
mov
das
dec
cmp
cltd
inc
test
mov
cmpb
int
xor
std
js
mov
repz
stc
lods
push
stc
pushf
adc
cmpb
ja
jbe
idiv
or
std
fsubrl
pop
andl
push
sbb
imul
push
insl
and
fisttpll
push
lcall
movsb
mov
inc
sbb
inc
mov
cmpl
call
nop
shlb
push
mov
inc
sarl
cwtl
call
stos
mov
addr16
jne
mov
adc
push
xchg
test
nop/reserved
xchg
sbb
int
loope
in
test
sub
jmp
jns
jg
sbb
sbb
aam
fucomi
pop
xor
sub
pushl
icebp
jb
pushl
push
mov
push
out
pushl
orb
addr16
fistl
dec
jno
xchg
cwtl
fcomip
movsl
jg
cmp
sbbb
mov
cmp
jne
sbb
inc
push
inc
jmp
mov
xchg
inc
xlat
out
push
dec
icebp
rcrl
outsl
in
push
inc
xchg
dec
cltd
int
mov
cmp
dec
adc
sub
les
mov
pusha
lcall
fistps
jmp
pop
sbb
lcall
out
ljmp
or
test
and
loop
loope
ffreep
xchg
sbb
call
movsb
xor
and
hlt
adc
jge
add
xchg
jb
cmp
or
fwait
jg
popa
sub
jbe
mov
fwait
push
stc
pushl
mov
sub
adcl
in
arpl
mov
popa
push
mov
incl
imul
xchg
mov
decb
pushf
xor
icebp
sahf
jmp
pop
shr
cwtl
xchg
sbb
imul
xchg
and
fwait
lcall
ja
nop
clc
das
stos
int3
int3
mov
gs
xchg
int3
ja
sbb
lcall
lret
mov
jmp
jg
mov
sub
lock
and
jmp
sbb
int
into
rcrb
xor
imul
dec
movsl
call
ret
or
in
icebp
mov
ficoms
push
jne
sub
sub
push
xchg
xor
in
jp
pusha
insb
cmp
lods
mov
in
cmc
xor
das
das
shlb
cmp
bound
das
and
call
clc
cmp
decl
mov
int
aad
mov
fwait
out
dec
mov
mov
sti
push
lcall
popa
les
popf
fsubrl
jnp
inc
aam
movsb
mov
lahf
inc
ljmp
inc
dec
into
call
mov
ss
call
lret
pop
cli
fcmovu
ljmp
scas
inc
test
xor
sahf
cmp
adc
pop
push
pop
call
adc
push
sti
divb
push
cwtl
into
stos
xor
cmpsl
imul
out
mov
lret
lcall
lock
call
mov
jp
mov
adc
push
or
popa
pushl
mov
jmp
aam
lcall
push
adc
jns
popf
call
mov
fs
jl
xor
arpl
xor
ljmp
out
aaa
adc
decb
mov
sub
cmp
fsts
sub
xchg
pushl
fsubs
jmp
fisttps
push
popf
jnp
mov
cmp
cmc
lea
cmpb
outsb
mov
incl
sar
jmp
ljmp
jle
enter
lds
push
test
imul
and
movsb
xor
jmp
inc
jne
mov
es
dec
fists
loop
cli
shl
lahf
fprem
inc
mov
fidivrl
adc
jg
inc
ret
cwtl
popf
mov
dec
fs
pusha
dec
sbb
mov
jle
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
sub
xchg
inc
mov
cmp
pop
lea
mov
and
add
clc
aaa
or
jmp
out
adc
and
jecxz
dec
jbe
or
pop
popf
mov
int
inc
dec
push
adc
inc
mov
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
aas
pop
push
mov
decl
insl
xor
dec
lock
mov
sub
idiv
cs
xchg
cmp
adc
and
les
sub
loopne
inc
sbb
jmp
jno
fwait
xchg
outsl
out
incl
mov
sub
pop
lret
adc
mov
ss
outsb
enter
push
push
inc
pushl
push
aaa
push
cmc
mov
jge
inc
or
push
int3
jne
int
loope
incl
stc
or
ret
std
pop
in
pusha
inc
push
dec
pop
dec
test
or
adc
push
icebp
cmc
int3
sub
notl
adc
adc
mov
sbb
xchg
nop
inc
push
jmp
addr16
cmp
xchg
or
cmp
inc
push
mov
mov
inc
lcall
and
ret
ds
std
sub
shrb
imul
jmp
js
mov
mov
add
cmp
incl
sbb
out
ljmp
mov
xor
dec
faddp
rcrb
push
xchg
inc
dec
mov
sub
mov
clc
xchg
sbb
das
pop
and
or
jno
fstpl
pop
jecxz
arpl
insl
push
decl
mov
call
sub
aaa
or
negl
jg
iret
mov
cli
test
es
adc
out
loop
push
jl
setae
pop
and
js
jbe
pop
shrb
push
xchg
leave
std
mov
cmp
imul
pop
rcl
lahf
xchg
aaa
dec
push
xor
stos
adc
addr16
fstl
mov
xor
mov
test
lcall
push
leave
xlat
add
sbb
sub
cmp
dec
jae
inc
dec
fsts
add
add
mov
ds
cmp
movsb
std
stc
mov
xor
sbb
sub
pushf
adc
xchg
incl
push
pop
dec
decl
sub
push
test
mov
push
fsin
fwait
or
bnd
sti
ret
adc
jns
scas
push
jge
dec
leave
lcall
xor
ljmp
sub
es
and
pop
xchg
lock
jns
xor
and
mov
lock
std
mov
mov
lcall
lret
insb
sub
jbe
test
in
xor
jmp
jg
lock
add
jecxz
js
mov
mov
iret
xchg
dec
mov
inc
mov
fistps
ret
jbe
int
imul
mov
mov
fdivrp
rol
lret
mov
lcall
xor
call
or
push
mov
outsb
jmp
call
jmp
outsl
div
xchg
das
scas
adc
xchg
fstpl
aaa
out
in
xchg
add
rol
leave
outsl
idivb
ud0
aaa
or
inc
lock
mov
pushf
xchg
test
dec
lret
fcompl
ja
mov
insl
call
ret
add
repz
dec
jle
pop
into
icebp
xor
pop
scas
out
pop
lea
pushf
push
xchg
xor
cmp
lods
adc
decl
or
or
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
mov
and
sub
fildll
popf
incl
jb
mov
in
adc
das
mov
lods
stos
inc
jp
scas
imul
std
into
mov
jae
jp
gs
or
xchg
inc
stos
pop
push
pop
incl
or
mov
test
pop
incl
test
ljmp
xchg
jae
mov
movsb
jg
std
push
and
addr16
loopne,pt
xchg
jnp
jecxz
loopne
imul
lret
pushf
lds
pushl
sub
js
stc
mov
fimull
shlb
pop
xor
pop
sbb
inc
xor
pushl
cli
subb
fisttpll
lcall
in
ljmp
mov
dec
out
pop
mov
jmp
std
cmp
add
jae
adc
imul
pop
imul
testb
bnd
cmpsb
mov
push
test
test
jb
lds
sahf
loope
loope
adc
xchg
lret
clc
lret
ret
loop
movsl
jmp
aas
sbb
repnz
pop
pop
xlat
lcall
push
dec
sti
inc
jo
dec
and
and
adc
imul
add
fdivr
jae
add
call
arpl
rclb
mov
lret
loope
repz
sub
fldt
and
cmp
add
mov
xchg
lods
push
dec
mov
dec
push
or
jle
mov
and
jmp
imul
jmp
and
dec
lcall
lahf
and
popa
push
imul
das
add
inc
stos
and
gs
mov
or
call
push
and
cli
add
aaa
mov
cmp
mov
xchg
cmp
sti
cmp
clc
outsb
aaa
add
call
lods
push
arpl
subb
pop
je
std
push
push
stc
lcall
je
dec
mov
aas
sbb
jg
push
loope
sub
clc
shrl
sbb
pop
pop
idiv
roll
cli
js
das
out
adc
add
test
push
mull
jmp
mov
or
lret
cmp
mov
xor
and
add
pop
std
sbb
mov
scas
int
or
out
sub
xchg
ljmp
aam
xor
xor
jmp
loope
mov
cwtl
icebp
sar
fwait
repnz
jno
in
dec
or
push
lret
sub
fnstsw
pop
mov
jp
into
cmp
lds
in
mov
inc
ret
idivb
loope
dec
pop
xor
fcoml
filds
jg
ds
arpl
lahf
shll
mov
mov
cmp
lret
pop
jmp
mov
imul
sarl
repz
xchg
inc
mov
cmp
aas
das
and
jmp
cmp
in
add
ja
inc
stc
cld
icebp
xchg
sbb
iret
outsl
out
mov
loopne
mov
jne
addr16
fwait
test
das
incl
ficompl
mov
call
daa
dec
mov
xlat
cmc
ret
xor
ljmp
sbb
dec
call
jl
or
pop
fmull
xor
lea
dec
mov
in
xchg
push
mov
out
mov
xor
int
lcall
scas
shl
shlb
fnstsw
inc
daa
call
sub
or
iret
pop
jae
ljmp
addr16
mov
jg
adc
or
cmc
xchg
jne
sar
mov
push
cmp
fstl
mov
call
sbb
xor
mov
push
sub
lock
repnz
cs
in
xlat
lods
adc
mov
lahf
ss
out
adc
outsl
lcall
cwtl
decl
jmp
imul
mov
jp
fisttps
sahf
sbb
int
cli
decl
push
jb
gs
lahf
inc
adcb
push
xchg
mov
in
inc
not
jo
sti
xchg
or
daa
pop
dec
jecxz
lods
call
mov
adc
or
sbb
outsb
sbb
push
sbb
pop
xlat
cmc
pop
adc
inc
outsl
adc
test
jae
ret
incl
sub
pushl
push
adc
aad
jg
cltd
jns
pop
icebp
mov
call
dec
dec
mov
call
adc
stos
ljmp
imul
xchg
jbe
inc
mov
arpl
mov
lock
jae
mov
pushf
add
nop
pop
xlat
bnd
lds
dec
test
inc
jge
sbb
aas
pushl
mov
lds
lds
mov
stos
xchg
inc
std
icebp
xchg
hlt
lcall
pusha
mov
mov
cmp
xor
gs
add
fnstenv
das
pop
jb
and
jb
gs
call
cld
cwtl
pusha
inc
aad
call
jmp
inc
xor
stos
mov
clc
or
stos
test
jge
mov
lcall
mov
fcmovbe
fcmove
mov
imul
ja
pop
loopne
lret
decl
dec
retw
adc
aas
jmp
mov
pop
adc
mov
call
outsb
cmpsl
dec
jg
xor
loopne
ja
ss
lret
ljmp
push
push
sahf
pop
inc
pushl
scas
mov
mov
daa
pusha
add
ljmp
push
lcall
push
roll
sub
jmp
pop
jl
mov
adc
mov
test
addr16
clc
sub
push
lcall
aam
imul
test
push
sub
add
sbb
inc
incl
hlt
jmp
inc
jl
movsb
popa
add
lods
ljmp
jnp
mov
sar
je
stos
insl
data16
or
hlt
jns
dec
jae
cmpl
push
das
ss
or
inc
xchg
mov
std
clc
sti
pop
pop
andb
and
xor
mov
inc
xor
cmpb
adc
cs
incl
sbb
inc
and
addr16
in
dec
aas
jecxz
and
mov
and
daa
clc
mov
xchg
pop
sbb
mov
rorb
adc
lcall
mov
cmp
push
test
call
push
mov
mov
adc
lods
and
dec
cli
fwait
push
lock
data16
hlt
outsl
int
rcrl
test
inc
push
push
popa
into
cmp
ds
and
dec
es
ds
mov
mov
stos
adc
shll
adc
rol
dec
mov
cli
decb
lods
js
jno
addr16
fisttps
cmp
sti
mov
or
rcll
lock
into
lods
cmp
std
push
ja
push
or
jecxz
out
or
out
push
mov
cmp
scas
lcall
sarb
inc
popf
aas
mov
xor
pop
pop
xchg
cmp
incb
lock
mov
ljmp
in
out
or
scas
lahf
loopne
inc
sbb
adc
mov
lea
dec
insb
cld
sub
loope
inc
decl
andl
inc
sub
mov
aad
negl
test
clc
mov
fistpll
lcall
ljmp
out
out
cmp
push
leave
arpl
mov
decl
push
decl
ja
addl
mov
fcoms
pop
or
dec
cmp
xchg
push
xchg
icebp
movb
mov
xchg
test
cmp
jo
and
adc
jg
inc
inc
int
mov
sti
push
mov
mov
push
leave
out
fimull
jmp
jae
mov
jnp
sub
jns
loope
xor
add
cmp
cmp
cld
mov
repnz
inc
mov
inc
and
lds
incl
ljmp
divb
in
cli
jno
mov
mov
je
mov
popf
sub
adc
mov
add
mov
push
xchg
xchg
push
sub
clc
cwtl
mov
dec
insb
es
pop
sahf
xor
jne
mov
push
test
sbb
jmp
ljmp
push
arpl
js
inc
fldl
cld
lods
ficompl
fwait
xchg
rcrb
or
mov
mov
xor
jns
loope
into
cld
outsb
push
std
jb
sbb
nop
add
jmp
jg
pop
nop
add
fwait
xorb
aam
add
sbb
sub
jns
xor
shll
sub
cmove
int3
cli
push
pop
int3
ja
sbbb
cs
pop
pushf
lahf
ret
mov
dec
outsl
push
lcall
jb
test
xchg
sub
jo
aas
stc
xlat
sbb
ret
xchg
shrb
push
sti
sahf
dec
push
insl
lea
jmp
mov
sar
scas
jp
cmp
jmp
hlt
mov
mov
mov
pop
repnz
loopne
adc
loope
incl
xchg
push
mov
dec
stos
into
add
jmp
push
jae
sub
jle
pushl
loope
imul
xchg
add
aaa
pushl
sbb
scas
lcall
and
adcl
clc
push
jno
jp
aaa
imul
movsl
nop
int
mov
nop
cld
or
ljmp
popf
dec
xchg
cmc
pushl
nop
cwtl
adc
inc
inc
leave
cs
adc
stos
sarb
jno
outsb
scas
xchg
daa
adc
into
sbbl
pop
pop
test
lcall
negl
xor
test
sbb
cld
fistpl
xor
pop
loopne,pt
cwtl
xchg
movsl
stos
xorl
popa
inc
call
pop
cld
push
aas
out
and
movsl
out
loop
jle
fisttps
push
ljmp
outsl
push
pop
cmp
and
dec
addl
xchg
cmc
sub
pop
std
mov
enter
push
outsb
ljmp
ja
mov
mov
push
roll
jns
in
mov
xchg
mov
aaa
in
jb
cmpsl
decl
cli
ror
popa
dec
jmp
xchg
xor
dec
popf
mov
das
push
ja
mov
xchg
inc
or
les
sbb
xor
into
decl
xlat
rorl
mov
popf
test
xchg
mov
push
jmp
pop
std
pop
test
hlt
pop
mov
jae
call
inc
push
mov
gs
mov
cmp
incl
xor
loop
js
divb
push
cli
loope
pop
push
icebp
push
mov
xchg
mov
add
mov
mov
mov
fidivrl
mov
or
mov
and
in
fs
xchg
jmp
dec
push
iret
jo
mov
mov
push
jg
mov
outsl
clc
shlb
hlt
dec
incb
je
fadds
mov
cld
jne
lcall
mov
adc
xchg
aad
pushl
call
out
push
ffree
movq
out
mov
jae
inc
dec
mov
std
jl
std
into
jp
ja
push
mov
jge
enter
mov
enter
inc
scas
leave
add
push
cs
cmp
in
pop
aam
jl
mov
jl
mov
int3
call
cli
mov
addr16
decb
call
sahf
add
pop
push
mov
lods
adc
and
fdivrl
bound
xor
and
jg
js
icebp
mov
cmpsl
and
or
mov
xchg
daa
dec
pop
sahf
and
jmp
ljmpw
je
mov
inc
mov
push
mov
cmp
sub
or
sti
pushf
pop
lret
dec
push
mov
and
std
pop
cwtl
jl
shl
ljmp
fsts
lods
ljmp
xor
or
shll
xchg
adc
xchg
loopne
pop
call
dec
test
cmpl
push
and
xchg
ljmp
add
mov
decl
and
fwait
decl
xor
or
jne
push
mov
push
ficoms
stc
mov
out
cmp
lds
hlt
ret
pop
sti
xchg
outsl
adc
pop
ud0
repz
inc
dec
xor
sub
loope
push
push
cmp
xor
rorl
int3
push
icebp
out
jno
bound
cmp
xor
pop
scas
add
hlt
sahf
cmp
data16
jmp
popf
add
adc
mov
jmp
ss
inc
std
push
jle
dec
push
es
dec
imul
xchg
jl
push
daa
sub
outsb
in
loop
clc
fwait
adc
mov
js
cmp
xlat
cmp
cmp
mov
loop
cmp
in
add
lcall
push
subb
push
mov
es
loop
addl
decl
mov
cmp
sub
shlb
mov
nop
je
cmc
add
into
int3
mov
rorl
dec
pop
adc
fucomi
mov
mov
incl
sti
cltd
in
das
int3
popa
icebp
or
into
mov
xchg
cmp
call
lret
test
imul
les
jl
imull
inc
shll
hlt
mov
insb
pop
pop
rcrl
jecxz
mov
jae
fstpl
and
mov
insb
rcr
or
mov
fcomip
mov
sbb
je
fisubrs
dec
cwtl
cmpsl
addr16
xchg
cmc
lods
xchg
lods
push
jmp
test
xor
jle
int3
jo
and
test
sub
rcrb
fs
jecxz
dec
and
sbb
xchg
int
js
out
fiaddl
hlt
add
cld
cmp
pop
outsb
adc
dec
xchg
mov
inc
in
lcall
xchg
and
jns
jg
mov
sbb
in
dec
and
loope
sar
divb
add
std
in
pop
mov
jno
ret
jg
mov
rcr
sbb
ret
xchg
call
dec
std
mov
and
call
call
divb
mov
pop
sbb
mov
aas
push
aad
stos
sub
popf
loop
ds
jb
sti
sub
das
je
bound
ljmp
sti
mov
pop
jbe
ljmp
fdivr
fisubs
shrb
out
inc
das
mov
push
mov
sub
and
call
pop
int
pop
xchg
xchg
call
mov
pop
shl
test
lods
adc
adc
jecxz
fistpll
dec
xor
bound
dec
xchg
test
shrb
fdivl
or
xor
jmp
orl
mov
sbb
sbb
mov
mov
pusha
cmp
xor
or
decl
jne
jmp
mov
pop
mov
orl
ret
and
ljmp
xor
sar
popf
mov
push
xchg
insb
jp
push
popf
mov
adc
cmp
call
daa
jmp
sahf
aam
fisubrl
sti
inc
dec
ss
xchg
gs
sub
cmp
inc
imul
es
leave
jmp
pop
dec
mov
insl
add
cmc
insb
push
inc
in
and
incl
bound
pop
jl
push
call
cmovns
je
arpl
inc
lea
adc
push
outsb
mov
icebp
outsb
je
dec
das
xlat
stos
pop
and
push
test
mov
out
sub
imul
js
pushf
sub
sub
cmpsb
lods
movsl
jl
inc
movsl
outsb
clc
mov
mov
cs
call
aam
ljmp
sbb
add
and
cmc
dec
in
xor
inc
and
mov
sahf
xor
mov
mov
cmpsb
push
jmp
mov
call
xlat
inc
sarb
ljmp
cmp
sbb
sub
pop
mov
test
neg
or
mov
scas
sbb
fmulp
cmpsl
pop
and
call
imul
rcll
sti
xor
or
mov
jbe
loop
push
call
or
cmp
xchg
or
loop
std
jns
xchg
clc
mov
or
out
inc
fdivr
jmp
cmp
sbb
push
lahf
shlb
testb
and
dec
pop
push
jae
lea
insb
mov
dec
incl
ja
inc
sub
test
out
cmp
int
pusha
add
ljmp
aam
push
aaa
cmpsb
mov
inc
addb
fcmovnu
dec
jne
stc
push
jecxz
mov
xor
sbb
call
sbb
push
dec
test
mov
inc
push
test
das
stos
cmp
fisubrs
test
push
call
cmc
iret
xchg
pop
test
aam
dec
jp
std
sbb
pop
lahf
ja
sbb
sar
imul
xchg
ss
inc
and
sub
sub
push
mov
mov
cs
or
ret
dec
or
push
cmp
std
lock
mov
or
push
mov
in
rolb
addr16
xor
jg
out
lds
cmp
cmpsb
scas
fwait
jle
movsb
push
dec
lea
call
mov
fwait
push
fcomip
cmp
scas
decl
cmp
pop
insb
clc
xchg
outsl
pushl
nop
lds
test
mov
or
out
mov
hlt
adc
rorl
fcoml
inc
icebp
daa
adc
push
lcall
in
xor
mov
xchg
sub
decl
cmp
fst
push
rcr
mov
and
rcl
mov
sub
cld
in
pop
jo
cmpsb
sbb
push
add
dec
shlb
popf
inc
mov
insl
push
and
xchg
sbb
xor
pop
movb
xor
dec
add
popf
popf
ljmp
ljmp
shr
cld
mov
cwtl
or
xchg
fisubrl
add
add
mov
nop
inc
lcall
adc
hlt
push
mov
sbb
dec
enter
std
hlt
std
fadd
in
sub
and
xchg
bound
mov
popa
shll
dec
push
xor
ret
pop
or
orl
pushl
leave
sub
cmp
lods
sub
add
jp
aas
call
jl
push
or
ret
push
ret
sar
xchg
lahf
lcall
jb
jle
sar
scas
push
mov
jmp
dec
push
sbb
dec
stos
call
mov
xchg
jp
js
ljmp
jge
mov
push
insb
decl
cltd
inc
or
out
test
sahf
and
or
pop
aas
push
jb
in
data16
xchg
ret
arpl
cli
movsb
leave
inc
je
mov
dec
sub
or
push
cld
aas
ja
insb
lcall
add
cmc
jecxz
jo
mov
or
cli
dec
test
daa
imul
xlat
jnp
mov
popa
decl
inc
and
adc
addl
dec
mov
adc
and
push
decl
lret
push
lock
mov
and
mov
into
push
iret
push
loope
jne
enter
xchg
aam
inc
mov
or
call
jnp
and
fcos
mov
imul
fcoml
stos
cmpsb
cli
into
pop
pop
add
pop
lret
lods
jecxz
lret
ljmp
lret
adc
jne
popa
test
cmp
test
dec
stos
pop
xchg
outsb
pop
sbb
arpl
movsl
dec
lock
cmp
scas
mov
loop
mov
mov
xchg
into
adc
dec
xchg
add
rolb
sbb
add
jne
mov
ljmp
ret
xor
pop
aas
call
incw
and
psubd
adc
dec
out
incl
or
xchg
int3
decl
outsb
cmp
outsb
addr16
jnp
mov
lcall
dec
lret
int
push
ds
movsl
push
lcall
in
inc
sar
lret
outsl
ljmp
or
sbb
or
jns
decl
cmpsb
adc
cmp
out
in
mov
inc
cli
dec
outsl
mov
dec
push
push
cmp
mov
out
mov
pop
repz
mov
popf
lahf
hlt
test
rcrl
add
inc
shlb
call
add
jp
mov
pop
adc
mov
add
pop
xor
jmp
adc
aam
daa
fdivr
cmp
push
aas
pop
lret
lcall
sbb
hlt
cli
std
sti
pop
incl
sbb
pop
dec
int
jmp
xor
mov
push
test
push
lds
push
jmp
daa
add
inc
inc
push
outsl
and
call
call
lds
sub
xor
cmp
lahf
lahf
push
in
jmp
jecxz
lcall
cs
incl
scas
jmp
in
enter
push
pop
inc
clc
dec
sub
arpl
jmp
aaa
test
ret
int3
call
and
rcll
push
mov
into
adc
lods
xchg
push
or
and
add
jmp
stc
fidivrs
movsl
ljmp
mov
adc
call
sbb
mov
add
arpl
sub
outsl
cmc
mov
ja
sub
push
cmpsl
fisubs
insb
jmp
pop
stos
ret
fisttpll
adcl
ja
jmp
inc
inc
cmp
mov
outsl
das
fadds
icebp
mov
sbb
int
test
lahf
and
lcall
cltd
or
jg
pop
jmp
sti
pop
and
mov
fbstp
lcall
cmp
and
into
and
fcmovbe
jmp
dec
stc
jne
sbb
decb
xor
hlt
pushl
call
stos
dec
push
cli
arpl
xor
clc
call
push
inc
mov
call
in
cmp
in
jmp
filds
movsb
ljmp
fisttps
hlt
faddp
push
pop
mov
jecxz
inc
mov
add
xlat
jbe
adc
call
aad
xor
fsubr
ljmp
sar
add
xor
adc
mov
dec
rcll
sbb
ljmp
jne
push
inc
arpl
shrb
std
sahf
xor
aaa
gs
dec
aam
jo
mov
loopne
cmp
dec
xor
call
or
jns
test
sbb
push
sbb
cmpl
cli
std
lods
in
pop
adc
xorl
clc
sub
jp
add
mov
pop
loope
dec
xchg
jg
xor
std
fcos
sarl
xor
push
jbe
stos
fisttpll
xchg
hlt
inc
inc
incl
mov
mov
sbb
js
call
inc
inc
cmc
stos
inc
xchg
cltd
lcall
dec
lret
add
clc
push
xchg
jp
xchg
imul
clc
mov
fstl
cmpsb
mov
cld
sub
xchg
mov
sub
push
cmc
ljmp
leave
pushl
in
mov
mov
hlt
stc
clc
aaa
mov
jmp
enter
xchg
stc
cmp
cmc
arpl
outsb
adc
xor
add
ret
sub
lret
popa
adc
xor
push
dec
sbb
mov
std
push
inc
inc
outsb
xor
clc
repnz
subb
outsl
mov
rcll
cmovle
inc
pop
jge
outsl
bound
in
cmpb
pushl
out
mov
pop
jg
rep
mov
jp
std
repz
sahf
cmp
jecxz
mov
jbe
adc
imul
mov
mov
ljmp
jmp
cld
mov
les
jle
addr16
pop
push
sub
mov
repz
xor
add
sub
jmp
loope
xor
not
dec
inc
xchg
lods
add
mov
shrb
sbb
adc
imul
inc
pop
jg
pop
or
or
adc
mov
fistpll
out
or
clc
cmp
in
or
add
rcrb
mov
roll
push
outsl
dec
cmp
fs
out
or
decl
sub
aas
cmc
xchg
add
and
pushl
popf
sbb
jo
jmp
mov
lods
jmp
repnz
clc
insl
lcall
fistpll
leave
incl
data16
sahf
fistpll
call
fisubrs
das
cmp
int3
cmp
pop
xchg
jmp
out
call
imul
ljmp
jns
test
pop
js
push
xor
xchg
stc
mov
mov
sarl
mov
mov
ljmp
test
or
mov
inc
aas
decl
mov
sub
lcall
dec
inc
mov
dec
jl
push
pop
sub
insb
sub
fsubl
pop
cltd
or
std
stos
mov
xlat
mov
pushl
xlat
add
scas
into
and
pop
xlat
pop
or
jp
imul
push
xchg
gs
ljmp
andb
in
cmp
push
xor
shr
lds
jle
or
test
cmp
into
cmp
pop
incb
cld
jmp
mov
push
or
cmc
and
lea
addb
lock
add
jge
cmp
mov
sti
mov
call
or
sbb
lret
call
mov
repnz
std
imul
stc
rcrb
sub
outsl
out
cmp
ficompl
xchg
in
push
hlt
cltd
or
ret
cld
add
mov
ds
xor
push
lock
lock
in
fisttpl
ljmp
sub
out
loop
or
sub
push
imul
jmp
jmp
mov
xchg
lcall
std
imul
lret
adc
imul
add
sbb
cmp
aas
pusha
notb
popf
adc
imul
daa
call
pop
xor
jo
outsl
lret
sub
pop
mov
ljmp
sbbb
pop
call
out
cld
cmc
pushf
lret
div
jl
jg
adc
ja
push
mov
das
xchg
and
xchg
pop
mov
aas
call
mov
test
cmpsl
incl
dec
out
incl
add
mov
dec
inc
lret
mov
inc
in
popa
fwait
or
inc
icebp
cmpsl
daa
inc
dec
jno
lock
into
sub
fcoms
adc
iret
or
and
mov
mov
rcrb
enter
fdivrs
jne
hlt
jmp
ds
dec
ljmp
and
incl
adc
cmp
inc
pushl
mov
jg
orb
xchg
adc
lock
mov
stc
mov
mov
sahf
repnz
fidivrl
clc
std
mov
roll
or
xor
loopne
lret
xchg
add
mov
adc
repnz
lcall
mov
mov
cmpsl
ret
dec
xchg
mov
incb
mov
pushl
push
scas
sbb
jg
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
es
lcall
inc
subb
lcall
mov
sbb
xbegin
icebp
jnp
sub
stc
xor
scas
cli
out
mov
sub
in
lcall
ds
dec
ja
inc
mov
pushl
loop
imul
and
xor
negl
test
mov
incl
mov
mov
cmp
std
std
lea
bound
pop
mov
cmp
jg
mov
or
mov
call
test
inc
cmpsl
sti
enter
not
or
add
flds
addr16
sbb
loope
cwtl
enter
inc
dec
dec
cmp
dec
inc
fdivrs
push
xchg
andb
call
dec
leave
sub
mov
cli
inc
mov
pop
rcrb
clc
je
and
ss
dec
inc
lcall
cmp
lret
divb
xchg
lcall
call
inc
jge
dec
rcl
cmpsl
jecxz
pop
cli
push
gs
ljmp
push
xchg
pop
pushf
pop
and
push
adc
xor
xor
pop
arpl
pop
xor
mov
lods
mov
dec
sub
imul
pusha
popa
aad
int3
ret
sti
ret
sub
push
jmp
in
shlb
dec
lret
xor
jae
fucom
push
mov
jmp
call
mov
shl
rcrb
push
pop
or
mov
repnz
xor
in
call
aas
push
mov
repz
mov
inc
fdivrp
cmp
dec
insl
push
adc
movsl
pop
jge
popa
decl
popa
mov
adc
rcrl
mov
decl
test
out
dec
scas
xchg
or
jge
sub
daa
mov
add
filds
jg
aad
push
hlt
stos
movb
clc
test
adc
fbstp
gs
lret
pop
adc
pushl
popa
mov
lcall
inc
dec
andl
daa
mov
sub
enter
bound
cwtl
decl
imul
sub
insb
call
in
jnp
xor
and
pop
or
stc
stc
ss
movsb
pop
dec
aas
call
pusha
repz
das
mov
loope
call
incl
xchg
add
loopne
mov
and
inc
dec
idiv
sbb
not
dec
ljmp
sub
mov
mov
cmpsb
sbb
xchg
add
mov
decl
jae
clc
pop
and
jb
pop
jnp
incl
shlb
sar
enter
daa
ds
and
loop
sbbb
incl
fistpl
movl
jmp
inc
xchg
inc
or
loope
cmp
les
ss
mov
jp
adc
jge
or
dec
add
mov
push
inc
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
pop
stos
in
inc
jmp
push
mov
mov
mov
mov
pop
ljmp
aad
pop
lods
in
ljmp
xchg
cmp
call
mov
cmp
cld
jmp
mov
sub
cli
push
loopne
push
pop
pop
sbb
sbb
xchg
clc
in
mov
repz
orl
jl
and
sub
mov
pop
rcrl
call
mov
loop
std
fnstsw
sbb
imul
add
rcr
fsubl
mov
repz
incl
pop
mov
lret
xor
jge
push
cmp
pop
xchg
lahf
sub
int
xchg
mov
cwtl
jl
call
inc
dec
jecxz
sub
cmp
push
test
outsl
cs
cmpsb
cmpsl
movsb
mov
fstps
mov
in
jmp
scas
xor
xor
movsb
scas
xor
mov
add
push
jmp
test
sub
in
je
jb
mov
xor
decl
cmpsl
xlat
cmp
xor
xor
rorl
fs
mov
xchg
sbb
data16
mov
push
das
loope
add
ficoml
notb
add
jae
xchg
jle
test
incl
in
jp
cwtl
mov
push
cmp
stc
jp
ja
enter
mov
mov
in
ljmp
adc
jg
std
jmp
dec
loop
ds
jno
aam
xchg
mov
mov
clc
jo
mov
out
pushl
andl
hlt
lods
mov
add
std
or
fstps
mov
adcb
test
jge
jmp
shl
or
insb
xor
sub
aam
fsubr
pop
mov
xor
sarb
in
imul
cld
push
xchg
pop
adc
sub
pop
outsl
add
jae
ret
lcall
pop
sti
jne
mov
pop
out
clc
and
mov
mov
daa
aas
sti
decl
sbb
sub
or
inc
arpl
push
adc
cmp
push
dec
and
push
lahf
pusha
sub
sbbb
dec
mov
stc
push
mov
test
call
cli
push
dec
push
mov
mov
lret
mov
lds
or
lret
xchg
dec
push
incl
leave
mov
sbb
sub
push
pop
cmp
or
lea
adc
sub
pop
or
scas
xor
icebp
decl
mov
inc
and
adc
sahf
or
rcrl
cli
mov
jle
push
cmpl
jl
decl
shlb
jns
xchg
dec
mov
shl
mov
pop
test
subb
and
ljmp
loopne
push
popf
pop
mov
cld
mov
decl
lahf
stc
jg
push
lock
pop
mov
xor
hlt
pushl
in
gs
shll
jmp
xor
inc
bound
call
pushl
lods
jg
fsts
clc
es
add
orl
in
sbb
add
adcl
imul
outsl
sbb
test
lahf
mov
out
push
in
pop
xchg
mov
movsl
mov
lret
ljmp
lahf
sbb
xchg
mov
mov
stos
jge
add
xor
push
xchg
push
and
mov
jmp
sarb
in
imul
mov
jg
loop
inc
push
addps
jae
adc
mov
mov
test
dec
lea
call
pushf
outsl
add
aad
pop
mov
jp
shlb
sub
mov
rolb
scas
call
mov
jmp
dec
inc
push
jl
aam
mov
inc
sbb
in
dec
inc
add
call
outsb
ja
add
jecxz
cli
push
inc
cmp
ret
scas
pushf
ljmp
push
and
fwait
popl
adc
jmp
ljmp
and
and
ja
iret
cmp
mov
notl
sub
cmp
dec
iret
pop
pushl
xchg
mov
inc
sbb
ret
xchg
incl
jle
mov
out
xor
lahf
out
cmp
and
incl
std
jbe
pushl
cmp
mov
xor
jbe
out
sbbl
pop
enter
xchg
mov
cmc
cld
repz
inc
mov
push
mov
xlat
dec
shr
call
in
adc
cld
sar
dec
and
sbb
push
inc
jbe
jle
pop
out
cmp
ljmp
jge
xchg
mov
lcall
ljmp
mov
sbb
insb
addr16
or
lods
js
xorl
jo
dec
es
les
sti
inc
jbe
decl
mov
decl
push
js
incb
loopne
popa
das
dec
fnstsw
ljmp
cmp
jl
mov
and
lods
jno
pop
fcoms
movsl
cwtl
jmp
fmul
scas
es
test
filds
test
jbe
dec
cmpsl
movsl
add
mov
sbb
jbe
sub
shrb
adc
or
aas
and
xchg
ret
mov
cld
in
cwtl
pop
lcall
add
dec
daa
cmp
arpl
add
lock
std
dec
ret
aam
adc
decb
test
iret
xchg
jg
movsl
mov
push
xor
inc
add
decl
xor
addb
outsl
aaa
add
jae
mov
push
out
sbb
loopne
hlt
ljmp
or
push
sbb
xor
sahf
incl
rcrb
or
psrlq
and
jge
dec
lcall
ret
mov
out
pop
cmc
test
fldt
ret
inc
stc
xchg
addr16
push
jl
bextr
frstor
cli
sub
pop
imul
sar
insl
adc
mov
mov
lods
lret
jge
mov
mov
jne
push
in
decl
sub
cmc
push
jne
ljmp
lret
mov
pop
xor
jg
sarb
pop
inc
ficomps
sti
mov
xchg
mov
decb
enter
inc
es
push
sub
cmp
lret
incl
fsts
int
pop
adc
push
or
lcall
popa
hlt
je
call
fstpl
out
sub
add
dec
lcall
les
loop
incl
wbinvd
dec
jmp
mov
ja
ljmp
mov
mov
gs
dec
push
dec
xchg
je
cmp
mov
mov
ljmp
inc
mov
inc
add
xlat
push
jns
cld
inc
leave
jmp
or
call
push
nop
dec
pop
pop
cli
mov
pop
dec
mov
test
test
and
fucomp
int3
into
sbb
add
and
leave
clc
fdivr
dec
push
shl
mov
cmp
ss
mov
adc
scas
decl
cmpb
scas
in
int3
mov
or
push
adc
xor
inc
and
sarl
jg
sub
cmp
loop
jg
aaa
cmpsl
shlb
ljmp
push
bound
popf
jno
idiv
inc
gs
cld
inc
xlat
jmp
cmpsl
iret
lcall
repnz
sbb
or
cmp
mov
inc
mov
insb
loope
or
mov
mov
and
add
decl
mov
scas
mov
test
lret
mov
stos
xchg
add
pop
xor
add
rolb
dec
mov
cmp
loop
lods
stos
fildll
lcall
xorb
jae
lods
dec
inc
or
loop
sbb
cmp
pop
jns
shrb
les
inc
mov
jnp
loop
push
fucomip
andl
cmpsb
aad
pop
fldl
dec
push
clc
lret
repz
aaa
cmc
and
mov
mov
inc
call
filds
jb
xchg
int3
and
adc
out
inc
loope
dec
in
sahf
sub
mov
inc
test
or
outsl
pop
mov
lcall
jg
les
push
inc
ljmp
das
sub
jle
call
hlt
jns
pushl
in
cmp
xchg
pop
jmp
mov
or
out
or
mov
aad
mov
fwait
gs
lcall
xchg
fs
lret
adc
mov
stos
outsl
aas
sbb
add
cmpb
jns
lret
and
iret
aam
pop
mov
jmp
dec
mov
incl
dec
inc
jno
cmp
cmp
imul
fxch
jbe
pop
decl
and
dec
std
sbb
mov
enter
pop
push
and
pop
or
add
jmp
jg
jmp
lcall
test
decl
andb
test
cmp
ljmp
or
jns
aam
pusha
clc
push
int3
movsl
cmp
decl
jbe
outsl
mov
dec
lret
adc
repz
push
stos
jmp
mov
mov
faddl
add
jno
loope
movsl
mov
lcall
inc
iret
inc
push
jo
lcall
pop
pop
lret
xchg
pop
cld
js
adc
jnp
xor
mov
add
jecxz
push
or
pop
jo
jne
xchg
adc
std
inc
mov
dec
movsl
pop
lret
inc
push
data16
cmpsl
ljmp
push
xchg
pushw
lcall
mov
js
shrb
ja
sbb
dec
fstps
scas
sarl
jle
enter
add
incl
jg
outsl
pushl
inc
pop
inc
dec
jo
jmp
clc
iret
sbb
bound
sbbb
hlt
enter
push
sbb
mov
clc
xchg
inc
test
mov
ss
mov
sti
mov
xchg
mov
cld
jge
lcall
mov
aad
cmp
push
sbb
mov
xchg
test
mov
and
negb
mov
jno
ljmp
aas
lcall
fnstenv
loop
sbb
fst
xor
call
imul
lcall
push
ljmp
sub
pushl
sub
sbb
sub
jg
shlb
cmp
loop
daa
mov
lret
lcall
enter
pusha
inc
call
xchg
ljmp
xor
xor
xor
jbe
mov
mov
cmp
xchg
mov
or
dec
in
push
lret
ljmp
adc
jne
mov
fdivl
mov
jns
gs
das
mov
int
mov
mov
repz
cmpsl
nop
adc
jno
mov
repnz
aad
scas
push
aad
xchg
das
jae
pop
sub
clc
das
sbb
mov
ret
insl
ljmp
out
and
fcompl
mov
lret
leave
push
test
dec
jp
fwait
lahf
jmp
xchg
push
adc
insb
in
les
js
call
loopne
je
out
movl
xor
loop
lahf
dec
pop
test
cli
nop
pop
fsubr
pusha
dec
std
pushl
lret
inc
scas
sti
add
addr16
cmpsl
sub
add
mov
adcb
fcoml
decl
dec
cwtl
jg
cmp
fs
fdivrl
push
scas
incl
hlt
les
xor
jl
hlt
clc
sub
fsubrp
pop
fisubrl
call
mov
jb
test
decl
fs
ret
mov
mov
sar
movsl
jbe
sti
aaa
push
xor
mov
fildl
rcrb
sub
jo
aad
cli
sbb
dec
jg
push
rolb
lcall
push
aad
ljmp
inc
cmp
add
aas
out
icebp
jb
loop
jbe
and
mov
inc
jb
sarb
add
push
jge
cmp
jmp
std
cmp
pop
call
orb
push
call
xor
mov
jl
ss
sbbl
test
jmp
pop
mov
pop
jmp
insb
insb
lea
mov
stos
aad
loopne
lds
jp
cmp
xchg
pop
add
leave
into
movsb
jmp
inc
xchg
daa
in
push
adcl
pop
mov
jp
fdivrl
cli
iret
or
ljmp
movsl
mov
mov
mov
cmp
dec
sbb
jp
shll
push
scas
fcos
pop
push
fsubl
dec
out
xor
push
insl
mov
fs
jmp
lcall
cmp
repz
xor
aas
dec
jmp
adc
inc
adc
inc
mov
aaa
mov
xchg
jg
fs
call
xorl
enter
decl
lret
out
adc
cmp
mov
dec
cmp
test
jecxz
mov
cltd
shll
dec
jmp
leave
incl
push
aas
cli
movsb
xor
or
jne
insl
jne
arpl
pushl
arpl
sarl
popa
idiv
add
rcl
cld
or
pusha
jge
andb
shlb
cld
bound
sarb
les
mov
idiv
add
imull
in
cs
inc
das
addl
pushl
dec
mov
outsl
adc
mov
incl
cwtl
sub
mov
insl
call
cmc
cmpsb
and
add
dec
xchg
sub
incl
stos
cmp
ret
mov
inc
jno
push
leave
mov
jmp
std
adc
mov
inc
out
andl
sbb
cld
out
dec
pop
nop
sahf
or
jmp
inc
das
xchg
rcll
sub
int3
aaa
ja
adc
cmc
addl
inc
dec
push
push
jg
pop
mov
dec
inc
movsb
cmp
mov
test
ucomiss
xor
add
jg
repnz
nop
sbbl
mov
add
ljmp
or
jg
enter
cmc
mov
das
push
mov
insb
pop
into
xchg
out
adc
hlt
xor
icebp
pop
ljmp
lds
loopne
mov
icebp
mov
and
mov
mov
dec
mov
push
and
sub
popf
dec
mov
and
cmc
call
mov
sub
pop
adc
sbb
pop
push
aas
mov
mov
mov
call
xor
and
pop
cmpsb
das
push
clc
lret
test
mov
decb
dec
xor
in
sub
pusha
test
adc
add
dec
icebp
jbe
and
ss
sarb
cmp
mov
jmp
ja
cld
mov
and
push
mov
pushf
decl
push
mov
add
enter
aam
fisttps
icebp
mov
dec
lock
ljmp
xchg
scas
sub
adc
jmp
lock
cmpsl
pop
mov
jb
mov
pop
dec
cs
cld
dec
int3
and
xchg
stos
xor
outsb
loop
sub
call
sarb
data16
lret
inc
jge
roll
sub
shrb
icebp
pushl
call
call
jmp
imul
nop
mov
insl
fisttps
and
fildl
adc
ror
mov
jno
das
xor
movsl
dec
incl
aam
hlt
pushl
lock
jp
cltd
decl
push
or
lahf
xchg
lahf
mov
mov
rcrb
sub
adc
test
sub
push
xchg
stos
fs
sti
bound
inc
in
adc
scas
pop
pushf
mov
jae
dec
daa
pop
movsl
adc
jl
or
sub
adc
call
jns
mov
aam
push
out
pop
inc
sub
sar
mov
outsl
mov
pop
ja
popa
jae
xor
andl
dec
les
mov
jl
mov
sbb
jmp
xor
jmp
fistpll
sbb
dec
xchg
mov
pop
cmp
cmc
ljmp
iret
pop
xchg
out
lods
cli
or
jmp
outsb
sbb
cmpsb
lock
adc
loopne
out
inc
mov
ret
lcall
dec
loopne
ljmp
cmp
sbb
sub
and
sahf
dec
fldl
cmp
lret
into
or
arpl
icebp
aam
and
mov
adc
fld1
shrb
iret
ljmp
sbb
sbb
sbb
push
fists
inc
mov
inc
dec
cmp
or
mov
cmp
or
ud0
repnz
xchg
popa
addr16
in
lea
jae
xor
sahf
sub
adc
decl
aam
ror
in
call
xor
jmp
das
lds
in
mov
pop
xor
pop
inc
mov
mov
loopne
decl
ret
cmp
call
push
mov
and
xchg
ljmp
mov
xor
inc
mov
icebp
test
lock
in
mov
jne
jge
cmp
jnp
cmp
decl
into
out
js
lods
mov
hlt
push
pop
addr16
sub
mov
jne
adc
decl
pop
das
repz
popa
cwtl
cs
sbb
jp
cmc
incl
rcr
fwait
cltd
std
xor
dec
or
adc
aam
movsl
fs
call
icebp
dec
and
push
jb
enter
mov
sbb
test
xor
pop
pushf
decl
test
xchg
rolb
xor
sbb
in
lods
sub
mov
adc
decl
sub
or
jg
ds
lahf
lret
mov
jnp
scas
mov
inc
mov
dec
hlt
dec
out
fs
popf
jmp
and
out
pushf
pusha
cmp
push
sbb
mov
fistpll
jmp
dec
rcrb
and
popf
xorl
nop
pushl
fcmovbe
fwait
jmp
push
sub
aas
cmc
jg
xchg
mov
add
scas
jns
faddp
jb
ljmp
cmpsl
push
mov
jg
cmp
repnz
dec
sbb
bound
jmp
mov
mov
in
repz
inc
or
mov
dec
movsl
adc
int
and
sbb
insb
incl
enter
lds
inc
jg
add
inc
sbb
outsb
negl
test
push
out
add
cmp
int3
sti
out
dec
cmc
and
and
mov
add
faddl
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
jmp
mov
in
jmp
test
sar
fbstp
pop
jmp
loopne
icebp
push
pop
fisubrs
fisttps
xchg
nop
outsl
leave
out
fdivr
daa
inc
xchg
out
orb
mov
sub
xorl
in
jmp
test
fdiv
loopne
fstpt
xor
mov
jns
adc
lea
cld
mov
xchg
andl
les
ret
jmp
test
cmp
bts
jg
sub
xchg
push
xor
sahf
xor
enter
lcall
or
clc
shlb
mov
fs
stos
dec
aad
mov
xchg
sbb
adc
xchg
mov
inc
inc
push
adc
cmp
ret
lret
adc
out
inc
jle
xor
lcall
mov
pop
test
jbe
incl
mov
nop
test
inc
scas
inc
mov
adc
decl
call
notl
das
sbb
stos
inc
stos
mov
mov
test
and
ud0
aas
xor
pusha
lds
dec
ljmp
push
cmpsb
cld
push
into
fmul
xor
adc
cmp
sub
mov
loope
mov
ljmp
jl
lea
andl
push
mov
dec
movsb
mov
push
adc
call
jo
and
aam
popa
std
or
lea
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
stos
in
popa
pusha
xchg
loop
cli
fiaddl
push
aaa
bound
incl
push
xor
xlat
pop
lock
fcomps
pusha
push
adc
xor
push
aaa
loopne
dec
incl
inc
test
sub
lea
test
lcall
mov
mov
adc
ljmp
imulb
lcall
fstpl
mov
incl
or
jb
sub
bound
jg
mov
add
jmp
jp
ret
js
xchg
sbb
int
push
imulb
shlb
xchg
cltd
sub
mov
clc
pushl
xor
pop
incb
push
mov
cmp
mov
dec
rcrl
subb
push
int3
or
ds
test
fistps
aaa
xchg
adc
rcr
mov
and
jno
incl
jne
push
loopne
mov
pop
inc
mov
pop
scas
bound
jecxz
decl
xorl
sub
outsl
repnz
sbb
or
pop
xor
lret
ljmp
dec
lods
inc
pushf
dec
pushl
pop
orb
dec
dec
ljmp
sub
outsl
mov
jno
push
or
sub
cwtl
xchg
jge,pn
das
sbb
insl
mov
std
lods
xor
dec
imul
jo
imul
xor
imul
mov
insb
test
js
test
aad
pop
dec
lods
test
mov
mov
outsl
loope
push
push
dec
mov
imulb
xchg
or
mov
mov
clc
in
sarb
pop
and
xchg
fiaddl
dec
lcall
orl
fs
arpl
sar
cld
rcrl
and
add
or
pop
fcoml
fidivs
call
outsb
inc
inc
add
cmp
jmp
int3
cltd
mov
js
inc
jmp
stos
sbb
mov
loope
cli
popf
fdivs
xorb
and
loopne
xchg
add
xlat
hlt
pushf
mov
jg
push
pop
lds
and
jns
cmp
insb
mov
sbb
dec
push
mov
sub
mov
call
popf
sbb
jp
dec
push
jmp
loop
mov
cld
out
sbb
ljmp
mov
icebp
sub
sbb
pop
adc
or
lret
add
pop
aad
inc
cli
dec
jge
fcmovbe
jmp
cltd
sarl
pop
cld
divl
jne
or
in
push
fs
mov
call
pop
xor
fs
pop
dec
dec
mov
in
incl
xlat
outsb
sub
and
jl,pn
cmp
jno
lret
cmpsb
pop
cli
sub
outsb
call
adc
cwtl
mov
push
lds
mov
cmp
cwtl
orb
dec
sub
incl
push
push
in
incl
cmp
iret
add
push
repz
push
stc
pop
dec
ret
les
sti
mov
fdivrs
xor
iret
cld
jle
mov
cmp
jle
cli
test
jo
scas
pushl
adc
mov
push
sub
mov
jnp
mov
mov
cmpsb
mov
mov
out
sub
or
sub
ljmp
jne
xchg
jno
mov
adc
cli
hlt
aad
repnz
outsl
push
sub
int3
jns
cmp
pop
cmp
adc
push
cmpsl
xor
sub
stos
int
and
xlat
popa
sub
add
std
shl
jne
popf
pop
jnp
rclb
push
sub
mov
jno
cli
and
fisubrs
sbb
hlt
push
lahf
sbb
das
cwtl
dec
dec
call
mov
lock
push
sub
sbb
mov
shlb
es
xor
lock
xchg
adc
mov
inc
lods
push
mov
push
aam
xchg
mov
jecxz
mov
idiv
loope
es
loopne
add
in
das
and
or
sbb
dec
fcomi
fdivr
std
push
push
aad
add
out
adc
mov
jnp
cmp
nop
stos
sub
xor
cwtl
jns
imul
call
lcall
in
lcall
int
ljmp
lea
call
mov
inc
xor
push
mov
dec
jl
cmp
and
adc
inc
mov
xchg
icebp
rol
aas
fcos
repnz
adc
es
ja
hlt
getsec
les
mov
sti
adc
xchg
dec
xchg
je
leave
push
mov
aas
sub
jmp
rcrb
fcos
sbb
jo
push
lcall
dec
mov
in
pop
pop
mov
push
js
pop
mov
or
loope
and
mov
cmp
sti
jl
jbe
pushl
in
popf
jmp
shlb
shrb
mov
jecxz
sti
out
mov
xchg
les
jmp
fadds
push
cld
lods
xor
inc
insb
adc
ljmp
inc
and
or
cli
rorl
jnp
pusha
sbb
out
fwait
and
cli
dec
push
add
sub
outsl
mov
xchg
sub
mov
sbb
cltd
decl
rorb
ljmp
add
adc
jmp
sbb
xchg
or
insb
jb
aam
xchg
jne
insb
xor
call
cmp
in
jg
lcall
ds
aas
cmp
loopne
pop
sbb
hlt
jb
or
jg
aad
mov
push
mov
or
incb
inc
fiadds
jl
mov
mov
std
xor
lock
lods
mov
push
pop
dec
idiv
addr16
jecxz
dec
xor
lcall
jp
je
xlat
sub
xchg
lcall
mov
aas
icebp
aad
mov
mov
sbb
ds
ljmp
in
xchg
out
jmp
loop
test
sub
pop
subb
shll
inc
mov
out
mov
add
inc
mov
cmp
stos
add
and
outsl
mov
pop
pushl
pop
clc
mov
xor
sub
mov
jne
add
test
lcall
add
lea
shlb
mov
out
lahf
jb
test
call
mov
rorb
jp
out
ljmp
std
int
adc
push
lea
js
mov
inc
lcall
subl
adc
sbb
aam
loope
cld
xlat
in
jmp
int3
dec
repz
insb
jg
jmp
test
aam
inc
pusha
rcll
cld
mov
lods
jle
sub
test
rol
fucomip
loopne
sbb
cld
jecxz
mov
fwait
fwait
lcall
in
cmpsl
mov
ljmp
sbb
add
adc
ret
inc
and
insl
into
add
jae
mov
or
test
loope
jg
inc
mov
mov
mov
dec
inc
pushl
mov
jecxz
decl
mov
dec
fidivrs
push
push
push
push
lea
and
mov
mov
push
xchg
mov
mov
pop
lock
call
mov
xchg
lods
iret
jmp
xchg
xchg
in
lcall
loop
call
fs
pop
js
and
or
aam
push
mov
cs
push
rcr
ficomps
add
pop
fs
cmp
pop
decl
lock
lods
cmp
cwtl
decl
sti
lock
repnz
rorb
cli
jle
stos
test
cli
popa
out
cwtl
lahf
xchg
test
xchg
in
jl
and
rcl
xchg
out
jmp
loopne
sarl
repz
daa
sub
aad
int3
sub
inc
gs
dec
shlb
adc
dec
fwait
stc
lods
pop
lcall
mov
mov
adc
inc
in
ret
xor
mov
negl
lcall
incl
iret
push
cmpb
mov
vpaddsb
lcall
js
stos
jl
jl
mov
je
hlt
in
add
jge
add
jle
jg
test
shr
push
mov
mov
enter
outsl
mov
pop
adc
inc
push
repz
pop
jb
iret
and
push
fcmovnb
and
dec
mov
xlat
cld
mov
andl
mov
jae
jle
inc
cmp
or
dec
lcall
adc
out
stc
call
in
mov
push
xchg
rorl
icebp
mov
fs
ljmp
mov
imul
lods
je
pop
xchg
shrb
clc
cmpsb
cmp
jb
in
jns
mov
pop
ljmp
push
pop
jbe
lcall
sti
lods
test
decl
mov
decl
sub
les
popf
cmp
in
or
scas
incl
xor
sar
leave
dec
fbld
jmp
mov
in
pop
mov
pop
rolb
mov
data16
and
xchg
jl
adc
inc
pop
aas
imul
cmp
rcr
inc
ljmp
and
and
inc
push
add
dec
lods
or
and
sbb
dec
adc
jmp
push
mov
lods
pop
in
fisubrl
sub
movsl
outsb
mov
outsb
mov
fdivs
loop
xor
pop
push
gs
jge
clc
aaa
lcall
xchg
popf
jmp
leave
movsl
lods
imul
or
ret
mov
inc
stos
insb
out
pushl
es
mov
icebp
decl
and
ss
cmc
movsb
jne
and
push
or
call
xchg
adc
xchg
cmc
pop
jp
cmp
dec
fisubrs
jnp
cmc
aaa
test
icebp
push
rcr
cmc
xchg
push
imul
das
ret
test
push
in
push
jb
lods
sbb
shll
sub
jmp
les
and
aaa
enter
popf
loop
pop
mov
push
pop
std
jg
mov
jnp
or
mov
shl
lahf
lcall
imull
mov
sahf
arpl
mov
movsb
stc
decl
jns
cmp
mov
cltd
xor
mov
xchg
or
cmp
cmp
leave
dec
fwait
mov
dec
jg
ret
mov
inc
pusha
jge
ljmp
jb
inc
inc
call
test
sbb
std
js
sbb
jmp
mov
cmpsb
loop
dec
inc
js
jl
cli
mov
fidivrs
sbb
xchg
stos
adcl
push
mov
xor
jae
ds
fs
sbb
fisubl
lcall
mov
jmp
mov
ljmp
mov
test
xchg
ljmp
push
scas
cmp
std
dec
push
out
mov
shlb
sbb
mov
ljmp
or
pop
aas
pushl
jp
xor
loopne
cld
inc
pop
or
rorb
jbe
mov
mov
loopne
imul
inc
popf
lret
cld
inc
xlat
nop
pop
xor
popa
idivb
popf
loop
imul
mov
mov
shlb
js
in
xor
dec
out
mov
and
and
inc
sub
rep
decl
mov
cmp
mov
lcall
scas
addr16
inc
jmp
dec
xor
dec
cmp
test
movsl
cli
aam
xor
repz
push
mov
test
cmc
adc
ffreep
add
cli
scas
jl
loopne
stos
xchg
add
nop
push
xlat
std
dec
jo
sub
jle
call
pop
jae
xchg
inc
xchg
add
lods
and
test
pop
aam
andl
out
ret
int
mov
mov
jne
xor
dec
fidivrs
jae
push
imull
pop
jo
and
pushl
jge
pop
inc
das
stos
decl
push
mov
leave
dec
stos
inc
dec
lods
inc
xchg
inc
rol
mov
icebp
cmpsl
pop
in
roll
aaa
adc
test
outsl
fldt
hlt
cmp
dec
arpl
push
stos
and
aaa
mov
movsl
test
das
cmpsb
xchg
call
add
dec
icebp
cmpsl
shrb
outsl
mov
mov
jmp
call
push
add
push
aam
mov
xchg
cmp
faddl
and
xchg
ljmp
mov
inc
xor
pop
popf
xor
incl
pop
xor
mov
xchg
shrl
ret
add
xor
dec
xacquire
js
pop
sbb
cmp
xlat
cmc
lock
inc
mov
mov
sbb
icebp
xor
pusha
fisubrs
jp
jle
call
lcall
jmp
sub
nop
lcall
in
cmpb
jmp
lcall
mov
jno
xorl
lods
wbinvd
dec
fnsave
mov
je
mov
out
mov
in
gs
stos
sub
jg
lods
xchg
jbe
inc
jmp
data16
adc
push
pop
clc
jne
repz
inc
pop
xor
fistpl
mov
pop
call
ljmp
pop
nop
push
movsl
loopne
inc
mov
incl
sub
pushl
push
add
ja
dec
dec
mov
ljmp
lds
cmp
sbb
test
xor
lods
pushl
add
ja
cld
sbb
jmp
push
js
jmp
mov
push
outsb
aad
and
jo
lret
inc
dec
pop
jmp
xchg
fdiv
decb
pop
xchg
inc
pop
repz
shl
pop
iret
or
lods
jmp
adc
lahf
xchg
mov
pop
and
arpl
call
adc
dec
jmp
pop
sbb
xor
incl
add
std
jnp
adc
lock
pop
aam
pop
jmp
ret
inc
mulb
jne
das
or
shl
jno
push
lret
mov
inc
xchg
int
push
decl
cmp
cli
imul
call
in
pop
fucomp
rcr
arpl
xchg
ljmp
arpl
add
ja
mov
lock
or
test
inc
loopne
dec
inc
ffreep
xchg
mov
and
scas
outsb
pop
or
loope
xlat
pop
xchg
or
mov
pop
jg
in
adc
jge
imul
mov
fnstenv
xchg
mov
rcrl
mov
lods
push
pop
add
fadd
test
lock
mov
cltd
cltd
xchg
ud0
lret
stc
movsl
ud0
adc
fdivr
cmpsl
pop
cmp
mov
inc
inc
pop
mov
jo
or
adc
stc
jb
xor
jg
fxch
fisubrs
sub
pushf
mul
push
cmp
cld
leave
cld
insb
scas
dec
leave
ret
fisttps
cld
xchg
dec
ds
cmpsl
pop
cltd
mov
sbb
decl
xor
adc
or
movsb
es
sahf
mulb
pop
cmp
mov
data16
decl
mov
mov
jg
arpl
xlat
shl
scas
mov
fcmovnu
push
xor
add
test
xorl
sub
xor
in
in
fidivl
pop
cmp
mov
sub
jmp
divb
fidivl
or
add
imul
mov
xor
sbb
gs
inc
mov
xchg
ficomps
sbb
cmp
adc
xchg
jge
jno
inc
inc
sbb
jp
aas
mov
pop
sub
movsb
pushf
cmovle
or
adc
sbb
sti
pop
test
movsb
hlt
test
or
aas
pushl
mov
mov
push
loopne
push
push
out
and
push
jne
roll
das
dec
mov
and
mov
call
push
add
jmp
int
clc
hlt
addr16
out
mov
adc
sub
lock
add
xchg
add
ficompl
mov
xlat
mov
jp
aam
xchg
mov
aas
mov
pop
mov
push
pop
pop
rolb
add
data16
in
or
mov
lret
clc
pusha
dec
jmp
movsl
lds
ljmp
sbb
shll
mov
das
sar
leave
xor
and
push
out
dec
mov
test
dec
daa
xchg
mov
push
mov
and
call
test
int3
insl
fsubs
out
roll
mov
pop
xchg
jg
push
inc
pop
iret
pop
lcall
in
or
xlat
ljmp
ljmp
sbb
popf
dec
mov
sub
pop
jnp
call
cmc
sti
es
shlb
jmp
inc
cmpsl
xor
sti
adc
movsb
ret
jmp
fsubr
in
jge
push
xchg
out
or
and
xor
popf
pop
pop
dec
cltd
add
lcall
in
shl
xor
rorl
and
inc
sti
call
jnp
ds
jg
cmp
push
xor
add
in
add
or
lods
xchg
sbb
jg
cld
clc
add
mov
jb
ljmp
sub
sub
or
and
mov
add
lcall
cmpb
cmp
es
add
jne
inc
sbb
sbb
xchg
into
sub
pop
jle
pushf
dec
rorb
mov
ds
xchg
add
sbb
mov
and
pushf
outsl
add
fwait
sub
aad
xor
les
push
mov
ficomps
inc
out
or
std
popa
dec
out
addb
jp
cs
pop
inc
icebp
rol
xchg
js
cld
data16
xchg
decl
clc
mov
push
push
ja
incl
sbb
pushl
nop
mov
repnz
jmp
add
adc
and
pushl
and
out
fdivs
and
xchg
inc
push
xor
call
outsl
stos
insl
jo
sbb
xchg
lea
iret
dec
negb
pushl
push
aas
in
std
call
sub
rorl
or
dec
and
cmp
sti
decl
sub
cmpsl
jp
imul
sub
imull
arpl
stos
push
mov
xchg
imul
lret
loope
inc
outsl
lcall
cmp
decl
cmpsb
lret
repz
sbb
call
pop
daa
push
mov
jge
xchg
xchg
aas
fidivrl
in
jnp
ficoml
stos
push
inc
iret
cmp
outsl
mov
and
inc
mov
jl
mov
cwtl
ljmp
out
into
jecxz
fs
lcall
imull
loop
leave
push
mov
xchg
jecxz
fucom
lods
out
and
adc
rcr
insl
decl
psrld
decl
shl
cmp
repz
inc
int3
decl
iret
jbe
adc
mov
mov
and
and
lcall
jo
mov
fbstp
aaa
lds
out
and
ljmp
and
jns
cltd
add
push
pushf
incl
jb
mov
adc
sbbl
imul
cmp
mov
stos
dec
xchg
push
data16
in
pop
stc
add
mov
inc
sar
loop
ds
add
stc
out
popl
jg
je
cmc
and
pop
mov
sbb
mov
in
leave
jmp
and
in
pop
int
pop
pop
mov
jns
mov
pop
xchg
dec
fdivrs
in
cld
enter
jbe
das
sbb
mov
xchg
jmp
inc
lods
xor
and
pop
mov
dec
mov
fwait
or
out
xor
out
gs
ds
in
stos
lahf
cld
inc
mov
xor
incl
mov
adc
cs
push
and
sahf
jbe
adc
adc
decl
push
fimuls
or
ss
jns
decb
mov
sti
and
leave
frstor
push
rcrb
out
xchg
jb
xchg
lret
push
fwait
add
out
jp
add
push
lea
mov
ud0
xchg
and
sahf
xor
cwtl
jne
stc
mov
stc
add
mov
loop
pushl
cmp
sub
movsb
mov
jmp
rcrl
sti
sar
outsb
pop
ds
cli
ficoms
test
cmovo
clc
decl
outsl
aaa
mov
sbb
or
dec
pop
fmuls
push
lea
cmp
daa
mov
xlat
idiv
stc
call
mov
in
rorb
test
fsubrs
fucomi
call
sbb
sub
xlat
xor
sbb
pushl
sub
pop
dec
fcos
enter
shr
sbb
jp
jb
dec
sbb
cmp
ja
call
into
mov
fcmove
ljmp
in
adc
leave
push
sbbb
adc
jp
rcrb
mov
movsl
iret
cmp
loope
movsb
sub
call
cmp
fidivs
dec
in
or
sbb
incl
pop
sti
or
jmp
sbb
add
ljmp
ret
out
jnp
outsl
sbbl
xor
cmp
mov
sbb
ljmp
xchg
jo
icebp
cmp
dec
scas
aaa
je
call
add
dec
lock
nop
mov
test
jmp
xchg
sti
jb
or
mov
addr16
iret
nop
js
je
pop
mov
fptan
cmc
pop
pop
arpl
insb
inc
jmp
dec
fstl
jne
add
sbb
and
in
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
stc
mov
outsl
xchg
aam
in
clc
test
lcall
pushl
mov
jno
jl
mov
cmp
inc
add
mov
mov
ljmp
add
cli
mov
push
push
test
cld
lret
js
xchg
dec
js
sbbl
in
jae
insb
xor
int
cld
jle
push
pop
add
inc
mov
outsl
jmp
ret
mov
jmp
cwtl
fwait
ja
pop
loopne
mov
stos
cs
push
lock
add
push
mov
jg
in
mov
jns
push
adc
insb
cmc
ljmp
mov
jg
pushf
xchg
push
mov
inc
mov
test
dec
xor
les
lret
les
mov
repz
cmpsl
add
int
ror
inc
mov
and
pop
or
je
lret
stos
jae
xchg
dec
std
xchg
mov
pushf
jo
movb
jmp
mov
test
aas
cmpb
push
sbb
movsl
pop
into
fistpl
push
push
add
call
outsb
mov
cli
data16
jp
cmc
pop
cmpsb
inc
xchg
test
pop
pop
jmp
divl
lods
mov
cli
sub
add
or
imul
sub
shr
cmc
pop
orb
aaa
repz
pushl
int
stos
mov
sub
jl
sti
jecxz
ds
push
mov
ficoml
ret
mov
mov
loop
rcll
shll
dec
shrb
or
push
push
mov
sub
pushl
test
loop
cs
cmp
adc
cmpsl
add
pop
mov
pop
call
aad
int
imull
decl
sahf
push
movsl
sub
jns
lcall
jg
mov
sub
dec
fadds
mov
test
test
aas
repz
daa
in
jno
and
lods
jp
jne
ljmp
fldcw
mov
loopne
int
mov
mov
cmpsl
add
sbb
call
inc
outsl
es
pop
jne
lods
adc
cmp
int3
arpl
mov
incl
repnz
sbb
cmp
dec
jp
in
in
movb
dec
xor
push
xlat
das
rorb
sub
call
aaa
mov
adc
movsb
add
aad
cmp
xor
mov
lods
and
mov
divb
iret
cli
lods
inc
dec
mov
mov
call
mov
jnp
and
xchg
imul
push
repz
in
rolb
test
push
fs
jmp
pop
adc
inc
jmp
xchg
fadds
incb
test
std
cmp
out
arpl
push
filds
out
ret
push
inc
add
jb
ret
inc
cli
out
mov
mov
and
test
andl
repnz
cmpsb
popa
lcall
les
ljmp
loopne
hlt
xor
and
cmpsl
jmp
cmp
jo
movsb
dec
call
mov
cld
push
icebp
pop
mov
sti
adcl
sub
xor
add
daa
adc
jae
xchg
sub
loopne
push
fcompl
in
loopne
add
xchg
xchg
pop
mulb
inc
inc
xchg
loop
repnz
and
jg
stc
or
jno
jge
jmp
out
push
or
jmp
pop
xor
jae
dec
xchg
push
mov
push
incb
out
cmp
push
or
pop
inc
mov
call
sbb
scas
enter
jle
es
mov
pop
lds
call
js
sti
dec
dec
or
insb
inc
fiaddl
ds
jecxz
jecxz,pn
loopne
pop
decl
add
push
lds
pusha
xchg
add
sbb
adc
fbld
cmpl
out
rolb
decl
mov
xlat
ja
xchg
mov
mov
aas
lock
xchg
subl
pop
cmpsb
push
push
push
add
mov
fildl
pop
mov
loopne
fiadds
jnp
ret
aad
popa
or
movsl
scas
mov
push
in
in
cmp
xor
mov
shlb
cmp
dec
insb
add
push
jo
clc
sub
inc
dec
imul
push
test
bnd
xor
daa
icebp
mov
push
mov
mov
fiadds
mov
ja
icebp
pop
xor
mov
adc
dec
mov
mov
push
xchg
mov
cmpsl
fdivr
in
sub
and
xchg
insb
lahf
jae
mov
mov
mov
call
scas
xchg
insl
dec
mov
scas
pop
push
cmp
test
ljmp
test
sti
cmp
data16
cli
jp
adc
pop
push
incl
divl
ret
cmp
add
or
pop
cmp
incl
popa
jbe
xor
mov
jne
pop
inc
adc
xchg
ljmp
lods
mov
cli
add
popa
pop
pop
dec
push
scas
mov
jg
mov
fisubl
xchg
jg
push
fdiv
aaa
pushl
orb
jns
mov
adc
push
xchg
sti
xchg
mov
mov
mov
out
lcall
loopne
imul
and
stos
dec
xchg
lds
or
xchg
xlat
push
push
inc
fisubrl
lods
outsb
mov
lods
fstps
shrb
pop
out
or
incl
inc
mov
std
xchg
mov
ds
or
push
sub
mov
mov
adc
and
cltd
add
cmc
mov
dec
cmpsb
imul
lea
adc
mov
lods
scas
insb
mov
icebp
aaa
adcb
push
clc
jo
pop
fiaddl
sbb
sti
lcall
xor
sub
jle
push
rol
adc
call
ljmp
pop
testb
fsts
lock
or
jecxz
rcrl
mov
test
lahf
sbb
out
jmp
daa
outsl
jb
outsl
xchg
add
adc
xchg
push
sbb
std
dec
mov
push
mov
pusha
cmpsb
mov
inc
ljmp
sbb
inc
fisubrl
or
jo
add
cmpsb
inc
out
in
fcomip
xorb
xor
fstpt
or
incl
mov
xchg
out
in
xor
jmp
call
fdivr
mov
mov
add
aas
es
nop
enter
call
lret
mov
cmp
and
mov
sarl
jo
dec
jge
mov
pushl
xor
dec
std
jbe
stc
loope
lods
pop
daa
pop
cli
push
test
dec
cltd
mov
xchg
pushl
aaa
add
sbb
push
cwtl
xchg
icebp
sub
mov
adc
xlat
enter
mov
enter
jge
call
lcall
insl
pop
shll
inc
add
insb
and
loop
jo
mov
dec
jae
pop
push
dec
jns
pusha
or
sbb
dec
jno
lock
jl
outsl
push
mov
call
cmp
cwtl
fiadds
push
mov
repnz
dec
jmp
idivl
into
ljmp
cmp
jmp
jg
sbb
clc
push
and
into
aaa
cmp
out
jg
inc
cld
inc
stos
shrb
cwtl
and
push
jbe
and
std
ret
in
mov
icebp
and
cld
mov
pop
jae
jmp
popf
mov
mov
pop
fidivrs
adc
decl
sbb
lods
cmc
mov
outsl
pop
int
in
add
mov
mov
lret
jecxz
lcall
push
sti
xchg
xorl
ljmp
pop
inc
dec
aas
rcl
call
cwtl
nop
push
outsl
adc
clc
mov
dec
decl
leave
xor
lea
scas
call
imul
jecxz
pop
jnp
push
pop
out
test
aas
mov
in
push
xor
inc
adc
and
jmp
in
cmp
mov
xchg
sbb
xchg
hlt
pop
xor
testb
call
jl
pushl
rcrl
inc
mov
scas
sbb
scas
test
sbb
cmp
sti
ss
filds
push
push
push
sbb
dec
lcall
sub
push
test
mov
stc
das
adc
mov
aam
cmpsl
movsl
rorl
or
imul
mov
adc
cmp
and
and
xchg
loop
jmp
mov
lods
inc
mov
stos
and
add
imul
ljmp
mov
aam
ljmp
mov
pop
push
mov
and
mov
lock
and
cmc
ret
in
mov
or
ficompl
int3
idiv
xchg
lods
push
scas
push
iret
sub
sub
sar
mov
push
cli
outsl
icebp
outsl
arpl
push
mov
fldenv
aaa
jns
and
aaa
sti
mov
cmp
dec
or
or
lcall
in
pop
filds
addb
cmpsb
xchg
push
dec
cli
addr16
dec
mov
lcall
std
push
jp
push
lret
push
inc
and
inc
add
add
cmp
sahf
lcall
inc
cld
xchg
jp
mov
popa
adc
pop
outsb
sub
pop
fbstp
inc
pushf
das
sub
aas
in
fs
dec
pop
decl
into
add
push
dec
call
inc
jmp
lcall
jne
pop
ljmp
movsb
sahf
daa
inc
lret
orl
test
cmp
js
fdivl
sub
cli
out
adc
ds
decl
mov
jl
sub
loopne
jbe
ret
int3
mov
xor
sub
icebp
pusha
push
mov
call
dec
fisubrl
ljmp
shr
frstor
fwait
jb
jnp
dec
call
xor
sar
clc
mov
and
mov
loope
rorb
jg
sub
andb
adc
incl
xchg
cld
xchg
mov
arpl
inc
das
mov
aam
xor
jg
inc
enter
dec
ljmp
push
or
lret
cmp
call
cmp
ret
icebp
mov
fstps
lret
mov
jle
loop
xor
xor
or
lock
mov
jg
sub
add
adc
push
int
or
push
stos
icebp
mov
decl
adc
pushl
adc
cmc
mov
imull
xchg
lret
les
incl
sub
cmpsb
lret
sbb
jecxz
lahf
mov
or
jb
add
adc
cld
sahf
fstpt
mov
scas
xchg
gs
dec
xchg
dec
into
es
hlt
mov
ljmp
mov
mov
mov
in
lcall
mov
lret
or
push
hlt
lods
js
sub
mov
cmp
dec
pop
clc
pop
ds
sbb
fsts
xor
lock
sarl
aam
fsubrl
lcall
add
mov
lcall
push
pop
push
jo
decl
test
mov
mov
dec
stos
repz
test
hlt
add
fsubl
aas
imul
fildll
mov
call
into
jl
movsl
adc
orl
out
inc
pop
pusha
lcall
subl
jl
mov
out
in
mov
in
xchg
inc
repz
mov
pushl
aas
sub
cwtl
int
mov
fstps
idiv
faddl
ret
dec
lcall
stos
sub
jmp
imul
mov
cmp
lret
and
lret
inc
pop
pop
int3
fmul
mov
das
dec
mov
xchg
pop
insb
sahf
in
test
popa
fdiv
dec
jbe
xor
pop
ljmp
dec
icebp
cmp
cs
xchg
nop
xor
test
mov
mov
mov
leave
cmp
xor
dec
sub
sbb
dec
movsb
jnp
ds
loop
pop
ss
push
loopne
aas
push
or
sarl
lcall
pop
mov
mov
or
cmp
sub
int
xor
and
or
push
xchg
mov
cmc
sbb
movsl
cmp
add
xor
jp
cld
adc
in
add
xor
lds
ljmp
mov
in
inc
scas
inc
adc
popf
je
dec
dec
mov
inc
mov
cmp
into
loope
lods
mov
sub
decl
dec
ret
xchg
add
push
mov
xor
mulb
mov
xchg
int3
xchg
cld
push
jno
jmp
and
jmp
or
aam
aam
call
lds
fisubrl
push
or
mov
lods
add
and
movsl
xor
push
sub
stos
enter
call
xchg
cmp
jecxz
dec
jp
xlat
dec
dec
or
pop
in
xchg
jp
fs
inc
xor
addr16
ficoms
mov
fcoml
popf
popa
jg
cld
adc
movsl
clc
mov
pop
adc
inc
xor
decl
sbb
lock
fildl
push
repz
incl
add
xor
ljmp
lods
stc
pop
int
and
ljmp
fsub
mov
addb
jmp
or
push
ljmp
and
ljmp
push
incl
pushf
dec
leave
mov
scas
pop
cmpsl
cli
ja
dec
jl
mov
or
mov
lea
sub
insb
je
dec
jecxz
cmc
call
jl
mov
ret
mov
subb
std
push
xchg
cmp
mov
test
std
fwait
add
adc
mov
int3
inc
or
mov
mov
mov
dec
dec
jg
mov
sub
sbb
pop
mov
cld
cmp
mov
add
std
push
call
outsl
fidivs
or
scas
gs
int
in
les
or
push
mov
push
out
out
adc
arpl
in
jnp
mov
mov
outsl
cmp
out
test
mov
aaa
pushl
mov
sbb
inc
int
add
or
cwtl
push
dec
mov
push
jno
ljmp
outsl
lret
mov
sbb
mov
ljmp
push
sbb
hlt
mov
femms
mov
xchg
or
out
and
push
mov
inc
mov
sub
push
jo
shr
push
jnp
and
std
add
clc
and
into
pop
dec
cmpsb
mov
test
sbb
add
inc
lret
cmp
cmp
xchg
sub
stos
pushl
or
fadds
inc
pushl
mov
nop
es
adc
clc
jmp
ss
pop
mov
shll
lea
jns
xchg
aas
test
gs
clc
inc
sub
icebp
jo
and
mov
pop
ret
mov
std
pushf
in
fnstcw
outsb
aam
cmpsb
dec
xor
cmp
cmpsl
enter
xchg
mov
icebp
mov
sar
jmp
repnz
cmpsl
inc
dec
or
and
and
push
jno
jns
scas
or
inc
divb
sub
add
repz
aaa
jno
push
fsubrs
jp
jne
imul
stc
adc
test
cmp
add
outsl
xchg
ljmp
pop
fscale
clc
repnz
pop
pushl
adc
push
notb
pushf
std
pop
lea
mov
stos
xorl
sahf
xchg
ds
js
in
jo
dec
in
xchg
adc
or
dec
repnz
pop
loope,pt
xchg
xor
mov
mov
es
adc
xchg
clc
ljmp
cmpsl
ljmp
mov
insb
mov
pop
test
fists
std
mov
lods
call
call
mov
lock
push
mov
xor
stos
clc
inc
mov
mov
mov
pop
pushf
jg
dec
xchg
jmp
dec
loope
out
xchg
cmp
setle
out
scas
jmp
lcall
cmp
mov
jmp
in
cmp
daa
lcall
es
movsl
dec
les
les
outsl
fsubl
sub
push
pop
cmpsl
push
cmp
adc
mov
mov
pop
add
xor
xchg
mov
cli
xchg
cmpsl
mov
xor
jns
dec
movsl
lcall
xlat
xchg
pop
mov
scas
nop
sbb
sbb
push
insl
pop
jmp
mov
xor
call
fadds
xchg
fwait
out
mov
mov
and
fs
fcomps
inc
xor
mov
sbb
mov
push
jg
cmp
push
cmp
pop
sarl
into
cwtl
dec
cmp
out
xor
call
fdivr
push
test
jne
mov
push
add
test
lcall
pusha
inc
pop
push
aad
jmp
scas
push
loopne
mov
fidivrl
cli
ja
js
push
aaa
inc
pop
mov
mov
lock
mov
inc
icebp
call
jp
lret
mov
xchg
inc
xor
leave
cld
cli
cmp
mov
mov
ljmp
addb
aad
xchg
fcmovbe
pusha
adc
enter
xchg
xchg
and
lahf
dec
push
int3
int3
ror
mov
jg
mov
xor
loop
repnz
mov
mov
ds
cltd
outsl
sbb
jae
add
out
pop
and
lret
xlat
std
and
repz
lods
outsl
in
lcall
stos
jp
xor
incl
pusha
mov
decl
out
push
insb
push
cwtl
lcall
jae
cmp
dec
out
ljmp
std
mov
loopne
mov
xor
jmp
clc
push
mov
mov
fdivs
insb
xlat
mov
sarb
mov
xor
call
cmpsb
enter
outsb
decl
or
insl
inc
inc
incl
imull
decl
repnz
and
ret
mov
outsl
mov
sbb
fldt
je
scas
sub
pusha
test
or
es
idivl
mov
popl
adc
ljmp
cmp
call
mov
sbb
into
movsl
pop
push
mov
fsubr
cmp
cs
dec
outsl
dec
js
mov
add
les
xor
out
aaa
inc
adc
stc
popa
fwait
ja
dec
jmp
popf
push
xchg
sub
xchg
xchg
mov
divb
dec
xchg
lcall
jp
sbb
incl
mov
lds
push
pop
mov
mov
jp
inc
jg
fcoms
mov
shrb
pop
cmpsb
fwait
mov
mov
scas
mov
push
je
outsl
ljmp
xchg
and
clc
jb
cli
xchg
mov
push
sarl
repz
push
pop
rorl
dec
fmuls
aaa
sub
mov
arpl
mov
addr16
pop
pop
sbb
clc
addl
mov
cmp
xlat
movsb
push
in
xor
and
sbb
dec
pop
outsb
dec
cwtl
mov
leave
out
jmp
jmp
dec
mov
call
mov
stos
jg
js
insl
fildl
lds
ljmp
test
popa
test
scas
cmp
mov
clc
out
popf
or
inc
call
xor
mov
sub
sbb
cli
push
loopne
incl
mov
ljmp
sub
inc
out
fadds
loopne
or
adc
in
iret
and
inc
mov
cld
ss
cmpsl
sub
iret
pop
enter
jbe
and
jbe
stos
mov
push
jmp
cmp
or
jmp
inc
push
call
xor
mov
add
mov
fmull
mov
inc
push
jbe
mov
adc
sti
orb
add
dec
pop
mov
xchg
xor
sub
mov
js
and
push
sahf
ljmp
push
or
mov
icebp
jnp
push
xchg
shlb
and
and
orl
nop
repnz
xchg
movsb
inc
mov
sbb
jge
sar
xchg
ret
fdivrs
arpl
jl
dec
and
mov
sti
adc
aas
ja
push
lods
mov
and
xor
dec
pop
add
sbb
js
stc
xor
stos
sarl
xlat
sub
mov
test
jg
int3
dec
mov
push
iret
dec
outsb
daa
roll
das
mov
pop
pop
je
jo
jmp
dec
dec
clc
dec
repnz
xchg
lock
das
jmp
int3
test
mov
fbstp
imul
push
cmp
incl
inc
or
pop
xchg
call
jb
sub
jbe
rcrl
mov
dec
or
mov
dec
push
sarb
jmp
addl
popf
sub
pop
movsl
lods
ss
lret
cmp
push
mov
mov
inc
repnz
bound
or
rolb
lods
inc
loop
shlb
xor
faddl
movq
outsb
lret
xor
mov
gs
js
sahf
jge
adcl
or
xor
popf
fadds
jbe
pop
mov
and
jb
jle
mov
add
lcall
jl
test
add
outsb
orb
mov
cmpsb
pop
call
jmp
dec
fldenv
inc
imul
sarb
adc
inc
and
xor
popa
es
mov
xchg
sub
int
jmp
mov
mov
imul
cmpsb
das
add
mov
lds
out
decl
cs
negb
cmpsl
addr16
decl
bound
mov
out
jmp
fsubs
jmp
dec
in
and
in
sar
lret
cmpsb
inc
imul
adc
call
jg
jo
jno
je
push
ficomps
push
lcall
popa
and
or
push
xor
repz
in
ret
ss
pushl
xchg
nop
push
notrack
les
inc
out
repz
or
xor
fisttps
incl
mov
mov
sar
leave
xor
stos
out
jne
decl
push
and
lock
cltd
jle
sbb
mov
xor
mov
sbb
idiv
pop
sbbb
xchg
pop
ret
jmp
jo
decl
xor
stos
hlt
divb
cwtl
pop
test
cmp
dec
outsl
ja
mov
ficomps
or
inc
push
stc
dec
mov
iret
dec
push
cmpsb
call
cs
lock
dec
or
mov
pushl
je
mov
in
movsl
sbb
xchg
mov
incl
mov
or
dec
fsubp
setae
adc
and
daa
lahf
push
orl
mov
movsl
adc
sti
push
pop
mov
fsubrl
jle
lret
pop
push
shrl
les
iret
mov
jns
js
dec
incl
mov
repnz
roll
mov
cld
mov
bound
jo
rcl
mov
xor
mov
cli
ss
xchg
xorl
div
mov
inc
shlb
aad
mov
aad
adc
jg
inc
cmp
cli
sub
shll
xor
pusha
mov
cmc
sub
daa
inc
lods
ficomps
call
das
jo
mov
mov
loopne
sub
adcl
enter
mov
sub
test
out
jecxz
pop
fistps
fdivr
inc
dec
push
lret
push
jmp
push
cmp
notb
js
cmp
sub
test
movsl
ljmp
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
push
or
mov
or
xlat
jp
fidivrl
out
sub
add
mov
out
repnz
bound
or
sub
push
jb
es
lods
or
xchg
mov
cltd
push
lcall
dec
fistl
ljmp
jg
orl
or
jg
cmc
insb
jne
mov
push
mov
in
repz
fdivrl
call
cwtl
dec
addr16
jno
leave
sub
xchg
push
incb
jecxz
or
out
lock
sub
pop
repnz
inc
stos
rcrb
xor
mov
fildll
push
orb
ljmp
inc
and
lea
lret
aaa
sub
push
sbbl
data16
aam
mov
lea
sbb
decl
in
push
sti
push
sub
jg
pop
out
dec
adc
fisttpl
push
jle
add
xor
incl
insb
stc
jle
xchg
decl
and
sbb
test
adc
in
loop
in
ret
mov
call
mov
les
sub
mov
or
ss
adc
out
fwait
pop
mov
or
dec
popa
cmp
cmc
xchg
mov
shl
call
cli
cmpsl
push
clc
cmp
push
ds
popf
call
pop
int
int
add
pushl
call
lds
sbb
add
sbb
insl
jg
mov
cld
popf
pop
cwtl
outsb
sbb
xchg
faddl
call
clc
push
sbb
pushf
xchg
xor
outsb
inc
aad
cli
das
decb
imul
pop
fdivr
add
call
cmpsl
in
cmc
sbb
aam
push
insl
out
outsb
mov
and
xchg
aaa
mov
fldenv
xor
in
cltd
adc
push
sbb
push
jmp
test
test
lret
mov
mov
mov
fsubl
or
pushf
or
int
cmp
mov
pop
pop
pop
ds
and
add
rcr
xor
jg
and
mov
dec
adc
out
cmp
cs
mov
xchg
jl
ljmp
mov
mov
jnp
xchg
cmpsl
out
inc
xor
inc
inc
aas
scas
mov
dec
xor
jmp
inc
incl
dec
xchg
push
xchg
jle
fwait
or
das
cmp
push
fisubrs
ljmp
mov
in
fcoms
leave
or
xor
idivl
int3
sbbl
sbb
pop
mov
mov
adc
inc
mov
and
out
cmp
pop
rorl
adcb
dec
int3
pop
pop
loopne,pn
fadd
int
mov
lcall
push
xlat
push
cli
xchg
xchg
jmp
cmp
test
mov
sub
daa
xor
repz
xor
negl
xor
scas
cmc
jl
or
mov
mov
cmpsl
xchg
and
pusha
inc
insl
aas
hlt
pop
insb
dec
aaa
push
std
call
loope
jae
nop
ja
mov
lods
imul
pop
flds
jmp
dec
pop
imul
mov
cld
movsl
dec
xchg
outsl
les
jle
add
jmp
sti
xchg
mov
lea
jmp
inc
shrb
out
push
out
dec
push
and
pop
cmp
std
or
rolb
xchg
popf
push
push
pushl
into
js
mov
push
lea
enter
or
push
ds
push
call
sbb
pop
xor
pushl
insb
mov
clc
cli
movb
pop
frstor
hlt
sub
and
ret
mov
sahf
xor
xor
ljmp
cmp
mov
je
push
ret
dec
pushf
sub
pop
mov
mov
push
pushf
jmp
jg
leave
push
test
jle
cld
xchg
je
adc
mov
mov
xlat
je
call
bound
xlat
mov
cld
rorb
pop
scas
mov
push
leave
arpl
jmp
lds
push
mov
cs
into
mov
push
mov
xchg
pop
xor
dec
sbb
fmuls
inc
loopne
jmp
push
inc
xchg
jmp
mov
push
adcb
jp
sub
outsb
insl
ret
mov
call
imul
push
incl
pop
das
jge
in
adc
pop
sbb
mov
das
sbb
inc
cmp
gs
ss
mov
adc
callw
in
lcall
xchg
call
pop
jle
outsb
pop
incl
loop
fdivrp
in
push
or
outsl
stc
add
push
mov
push
pop
imul
pop
mov
cmp
adc
pop
jp
pushl
movsl
je
sbb
icebp
or
aaa
test
xor
add
dec
scas
fcoml
xor
adc
jbe
dec
ret
mov
or
decl
int
push
sbb
push
mov
mov
cmp
jo
aam
and
lcall
mov
sub
cmp
movsb
fildl
lcall
inc
pop
lret
js
stos
pop
sbb
leave
fsubrl
sbb
test
test
outsl
pop
jg
push
dec
jmp
and
clc
outsl
inc
scas
jo
loop
cli
dec
fistps
outsl
fidivrs
or
inc
mov
mov
jmp
sarl
mov
xlat
mov
pop
push
mov
push
jne
test
pop
xchg
lds
sbb
sub
aas
pop
sub
dec
sub
sbb
mov
movl
mov
cs
mov
push
inc
dec
push
xchg
sbb
pop
cli
outsl
push
sub
mov
mov
test
adc
aas
aaa
pushf
test
dec
lods
lcall
push
gs
call
cmp
repnz
enter
adc
pop
push
sub
xor
push
lea
jo
dec
adc
mov
out
mov
mov
ljmp
bound
stos
repz
jle
lods
fisubrs
pushl
sub
cmp
je
sub
pop
sarl
xor
aaa
cmp
enter
cmp
and
push
and
and
pop
rol
and
clc
call
test
pop
cmp
pop
shlb
push
pop
sub
std
add
shrb
cmp
jmp
and
mov
or
ljmp
jns
fcoms
imul
scas
xor
movsb
xor
decl
adc
loopne
add
loopne
ja
or
push
jecxz
rclb
pop
or
push
gs
mov
mov
test
fwait
mov
or
jg
lahf
and
aam
jmp
sub
push
sbb
xor
js
xchg
sbbb
or
sti
stos
xchg
in
and
sar
dec
dec
sub
in
add
out
push
adcl
sbb
jae
add
pop
cmpsl
cmp
testb
dec
push
clc
jnp
mov
int
mov
rol
mov
push
in
decl
jmp
jecxz
ffreep
pushl
loopne
xor
jmp
cmp
xchg
mov
cwtl
insl
adc
mov
lock
cli
in
out
jecxz
imul
enter
hlt
jmp
cmp
aam
stos
mov
add
incl
push
lret
jns
push
mov
test
jg
sub
mov
jle
out
imul
test
iret
sbb
pushl
out
jmp
cmp
dec
pushfw
jle
test
out
les
mov
sbbl
and
sub
xor
lcall
inc
push
mov
call
aaa
inc
inc
add
ret
rorl
mov
mov
sbb
aaa
lods
dec
inc
cmp
inc
or
adc
fdivrs
mov
lea
push
ds
stos
sbb
xor
mov
add
inc
xorl
mov
orl
jg
inc
mov
notb
mov
es
out
xor
lret
sub
int
lods
pop
adc
xchg
inc
fdivrp
jle
cltd
std
add
ja
imul
mov
or
rorb
add
mov
sbb
nop
jp
test
call
int
jge
jecxz
insl
sbb
testb
adc
sbb
cmp
aam
std
ja
adc
xchg
aaa
ljmp
das
ds
adcb
out
daa
mov
jle
mov
push
push
inc
dec
outsl
and
outsb
std
test
jmp
xor
scas
in
hlt
xchg
push
fcmove
roll
repz
jno
in
dec
sub
add
inc
inc
jb
add
or
sar
lds
xor
popf
cmp
jmp
dec
jo
fnsave
push
mov
mov
outsl
loopne
pop
pop
jno
cmpsb
mov
fimull
sbb
xchg
and
push
cmp
test
divb
push
push
fmull
ljmp
mov
decl
cmp
int3
jmp
icebp
js
adc
fidivrs
cmp
lret
stc
lcall
push
orl
cmp
sub
cmpsb
jae
sub
pop
int3
inc
fxch
xor
dec
or
aam
cmc
push
les
stc
inc
aam
sbbb
clc
cmp
add
mov
nop
imul
insl
xor
movsb
cli
dec
int3
push
pop
push
pop
and
ljmp
clc
movsb
adc
add
and
xlat
pop
adc
xor
sbb
cli
dec
sbb
cmp
js
push
into
dec
pop
push
ret
sbb
push
das
adc
push
into
push
mov
cmp
xchg
lea
inc
push
push
jmp
xchg
sbb
pushl
sub
loop
notl
mov
in
ds
add
pop
dec
stos
popa
outsb
mov
lea
inc
push
sub
pop
xor
decl
lret
jmp
stc
or
mov
and
mov
pop
fistps
push
pop
sub
movsl
test
incl
jmp
mov
ss
lods
jmp
jg
js
lahf
andl
adc
fldenv
repz
inc
mov
push
das
ror
repz
cmp
mov
test
add
sbb
incl
fwait
or
sahf
arpl
cmp
push
incb
xchg
aad
mov
fdivr
jne
or
int
dec
cmp
rcr
or
sbb
aas
or
mov
ljmp
mov
mov
adc
iret
out
stc
jp
fidivrs
fs
and
pop
js
mov
push
call
sub
mov
dec
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
dec
test
mov
lea
mov
cmpsb
mov
loopne
jo
fisttps
push
mov
adc
cmp
scas
gs
cld
mov
repz
xchg
inc
stc
inc
mov
pop
push
sbb
sar
push
fldl
jge
popa
adc
nop
xchg
dec
mov
andl
bnd
pop
mov
inc
jl
mov
lret
in
add
sbb
testl
mov
jae
sub
mov
scas
call
xlat
inc
loope
inc
pop
decl
sub
push
mov
mov
movsb
adc
and
cmc
inc
xchg
clc
fldt
cmpsl
je
fstl
or
jmp
arpl
mov
std
incl
in
xor
cmp
in
push
mov
mov
and
xor
adc
fdivp
testb
xchg
ljmp
mov
ficoml
fldt
daa
ja
jecxz
xor
add
ja
adc
stos
jbe
out
mov
shl
xlat
pop
mov
sub
repz
shlb
daa
xchg
pop
dec
lahf
mov
sub
fldl
add
aas
mov
xor
icebp
mov
lret
sub
dec
jg
je
stos
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
mov
pop
pop
frstor
mov
ljmp
inc
aad
add
iret
shl
xchg
jge
pushl
inc
mov
call
push
add
and
and
push
gs
mov
push
outsl
pushl
push
loope
roll
mov
mov
mov
push
pop
mov
mul
sbb
xor
mov
fsubrl
dec
and
cld
call
cs
mov
or
mov
shlb
testb
xor
mov
in
shl
cli
cmp
decl
cwtl
mov
push
xor
icebp
and
and
push
outsl
rolb
pushl
sub
dec
div
shll
pop
out
idiv
lock
or
mov
outsb
jno
ljmp
icebp
mov
jge
das
aaa
xchg
iret
loope
je
and
jbe
pop
pop
clc
add
je
push
std
pop
movsl
fstps
cmpsb
jmp
jae
jecxz
das
adc
xchg
mov
ficompl
icebp
flds
lret
fildll
scas
sbb
push
incl
inc
mov
mov
xor
cmp
fnstcw
xchg
les
imul
jecxz
sti
jg
xlat
hlt
das
pop
push
fndisi(8087
clc
cmpsl
lods
ljmp
sbbl
dec
sbb
pop
lods
vcmppd
inc
or
inc
call
test
jmp
dec
pop
and
or
ret
adc
fidivrl
push
mov
adc
test
lcall
sub
cli
fnsave
fsubrs
mov
xor
ja
add
es
loope
inc
stos
xlat
leave
add
mov
sub
hlt
cli
xor
jns
outsl
and
daa
adc
pop
aam
aas
lcall
or
in
decl
mov
xchg
loope
das
or
push
xchg
cmpsb
mov
mov
pop
xchg
lods
adcl
dec
push
push
dec
fmull
pushf
push
sti
aas
push
fdivrl
and
decl
mov
mov
std
cmpsl
incl
out
mov
les
mov
cmp
jp
xchg
and
fdivr
fcoms
jge
pop
dec
pushl
push
imul
xor
repnz
gs
add
fsubrp
pushf
inc
std
pop
es
or
sbb
mov
movsl
addb
ljmp
movsb
fs
shrl
mov
mov
std
sub
mov
xchg
pushl
xchg
cltd
call
xchg
movsl
sbb
enter
mov
pop
cs
mov
ficoml
fstpt
fisttps
ljmp
shlb
lock
idivb
out
leave
inc
les
jecxz
adc
xchg
test
out
fs
fwait
push
xchg
loopne
and
cmp
int3
popa
incl
andl
and
inc
sar
jnp
lret
ja
adc
ret
in
outsl
dec
pop
sub
push
in
and
bound
outsb
into
test
mov
sti
popl
push
int3
clc
ffree
sti
test
ficoms
xor
sub
fstl
fprem
repnz
fisttps
adc
movsb
jnp
nop
jg
inc
mov
add
cmp
std
pushl
loop
push
lcall
adc
jne
adc
mov
fistpll
pop
ss
and
mov
aad
sahf
inc
call
lock
ljmp
fisttpll
in
std
or
mov
lret
cmpsb
call
push
test
sub
sbb
lods
lret
in
sub
xchg
jge
or
test
cmp
jno
imul
dec
xchg
test
movsl
loope
dec
sub
lcall
pop
xlat
pushl
inc
gs
aas
lret
sbb
adc
sub
test
js
sbb
std
jle
cmp
xchg
add
pushf
sbb
leave
inc
push
addb
inc
std
push
mov
xchg
arpl
lcall
mov
cmpb
dec
addr16
adcb
mov
jo
mov
xchg
cmp
mov
std
in
call
cld
jmp
sbb
pcmpeqw
push
xchg
mov
fdivr
movsb
cmpsl
jnp
stc
jge
or
xor
and
jb
sbb
jo
loopne
mov
adcb
pop
idivl
aas
mov
or
repz
icebp
dec
pushl
jecxz
mov
push
xor
mov
lock
mov
repnz
adc
dec
xchg
outsl
mov
cmc
ret
in
xlat
ljmp
adc
lods
mov
mov
dec
sbb
popa
mov
cmp
lcall
out
jp
imul
cltd
push
mov
cmp
sti
and
xchg
pushl
add
popa
dec
push
mov
or
adc
jmp
lret
inc
sbb
aaa
push
lcall
cs
xchg
into
lcall
stc
repnz
and
imul
push
mov
sub
or
clc
jmp
pop
aaa
mov
push
and
in
rcr
and
call
lahf
js
and
jmp
stc
daa
scas
adc
notl
mov
lcall
dec
jbe
cmp
cli
jle
ror
adc
sbb
add
xchg
ficoms
std
add
ss
decl
xor
mov
pop
xorb
jne
fistl
clc
imul
push
inc
or
adc
iret
mov
xor
add
push
pusha
sub
pushl
xor
out
cmpsb
push
push
dec
dec
call
mov
iret
ud0
ds
mov
test
xor
loop
das
pop
in
cwtl
incb
leave
mov
or
cmp
int3
cmc
lret
out
cld
mov
int3
jmp
daa
xchg
gs
fisubl
lcall
call
mov
stos
rorl
aaa
das
push
and
jmp
es
mov
jle
and
pop
push
pop
cmp
pushl
sbb
mov
aaa
icebp
insl
repnz
fnstcw
pusha
sub
sbb
iret
ljmp
lahf
mov
enter
cmc
xchg
xlat
lcall
push
ljmp
add
int
lds
leave
and
pop
daa
and
inc
into
out
fbstp
cmpsl
mov
sar
cmpsl
call
xor
dec
incl
xchg
dec
jle
fs
int
jg
adc
pushf
pop
inc
mov
rcrb
mov
test
test
xor
xor
dec
das
aaa
adc
addr16
fcmovbe
mov
cmc
xchg
sahf
lcall
insl
mov
xlat
add
ljmp
addr16
inc
xchg
nop
test
mov
jo
cli
call
push
push
pop
cmp
addr16
incl
sbb
sub
add
or
stc
cmc
loope
push
gs
jg
mov
inc
sub
popf
and
add
out
ljmp
add
pushl
xchg
lea
test
sub
call
les
incl
jg
and
jbe
sub
imul
pop
out
mov
cmc
mov
outsl
jl
cmc
test
les
and
loop
xchg
mov
sub
in
fdiv
insl
jle
add
and
xor
rclb
inc
stc
add
dec
not
pop
xchg
lcall
adc
std
aam
incl
jp
cld
ss
mov
lret
push
aaa
mov
jp
popa
mov
jmp
cmpsl
dec
push
mov
or
lcall
pushf
xor
jl
insl
sbb
and
icebp
jl
xor
outsl
jmp
leave
push
std
js
jo
rcrb
lcall
daa
dec
and
call
mov
sub
decl
outsl
lcall
dec
out
mov
sub
adc
jl
repnz
push
cmpsl
movb
mov
das
inc
pop
clc
pushl
jnp
ljmp
lea
jo
cmc
pushf
out
inc
xchg
xchg
aaa
pop
call
pop
flds
stos
inc
xchg
and
call
pop
loope
call
aam
and
jp
sub
ljmp
mov
imul
idiv
cmpxchg
xor
clc
in
stos
sbb
inc
shrl
sub
in
clc
pop
popf
push
movsl
test
outsl
cmpsb
mov
movsl
mov
mov
push
orl
mov
in
repz
dec
ret
pushl
mov
add
pop
std
sbb
out
lock
push
test
sar
push
adc
push
inc
mov
dec
fwait
sar
lea
stos
imul
mov
aad
inc
mov
add
call
pop
xchg
mov
mov
cmp
test
pop
enter
xchg
dec
mov
jns
cmc
and
insl
mov
sub
popf
push
jp,pt
bound
jecxz
mov
sbb
mov
jg
mov
mov
inc
add
ljmp
or
aam
stos
dec
sbb
pop
test
sbb
movsl
sar
daa
imul
jl
inc
je
mov
jge
lea
add
aas
jle
decl
jle
dec
outsl
aam
dec
cli
xchg
sbb
aad
test
movsl
mov
mov
div
xchg
insb
mov
fstpt
fiadds
lods
mov
inc
ljmp
sub
dec
orl
cltd
incl
in
les
bound
sub
push
dec
outsl
icebp
xor
addr16
adc
push
cmpsl
cmp
sub
adc
mov
inc
cmp
add
dec
sbb
ret
call
cmp
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
mov
sbb
xchg
idiv
rclb
sbb
dec
loopne
or
fbld
aaa
add
mov
std
adc
subl
decl
dec
stos
inc
push
shll
and
mov
sar
cmp
and
test
mov
std
and
shrb
dec
fcos
pushf
xor
xor
or
outsl
xchg
mov
cmp
cmp
or
sub
loope
pusha
mov
test
pusha
js
dec
lock
pop
push
inc
dec
aaa
xchg
aad
mov
shll
jl
jmp
cli
lock
jno
mov
jmp
ljmp
orb
test
cmp
and
das
push
adc
xor
xor
incl
outsb
adc
imul
sti
movsl
sbb
cltd
mov
pushf
inc
jmp
mov
inc
std
push
xor
aad
adc
add
or
call
sbbl
loop
jno
fistpll
pop
out
ret
imul
fdivrs
lds
dec
in
pop
faddl
arpl
pop
jp
sahf
cmp
push
dec
ss
mov
in
mov
scas
inc
pop
inc
cmp
icebp
adc
mov
test
in
icebp
imul
dec
mov
movsb
iret
adc
rorl
mov
aam
loopne
cmp
sub
adc
and
push
pop
xchg
dec
jmp
stc
mov
mov
inc
xchg
call
and
cmp
imul
jmp
dec
mov
pop
push
jge
in
cmpsl
jmp
aas
test
push
out
call
cmp
xchg
mov
lcall
mov
fsubs
icebp
jg
xchg
jne
pop
jnp
or
fisubrl
js
divb
arpl
pop
daa
ja
dec
pop
clc
decl
dec
inc
leave
int
dec
cld
stc
icebp
jb
cmp
or
sub
pop
jle
xor
mov
push
incl
dec
and
mov
push
test
pop
fisttpll
jle,pt
mov
cs
std
rcrl
aam
sbb
inc
cld
sbb
out
adc
pop
lea
jl
fnstcw
or
jno
pop
mov
sar
and
pop
mov
jo
mov
push
call
mov
lock
sbb
bnd
bound
imulb
adc
clc
addl
jg
mov
mov
jle
cmp
xchg
decl
sbb
sub
cwtl
fldl
push
ja
test
shrl
dec
inc
xor
sahf
notb
or
mov
andl
out
inc
mov
pop
test
dec
call
fistpl
lret
pop
add
imul
test
add
cld
jecxz
int3
xchg
icebp
cmp
das
ja
outsl
adc
repnz
int3
mov
push
clc
jle
mov
pop
xchg
sub
popa
pushf
scas
inc
push
adc
into
dec
jg
test
fists
inc
cltd
pusha
and
incl
or
call
subl
out
out
mov
pop
pop
imul
push
movb
clc
out
ret
lea
lock
xchg
inc
xchg
das
test
jo
lret
dec
push
jge
lods
cli
dec
push
jge
pop
xchg
mov
frstor
add
lods
xor
es
jno
pusha
push
aad
mov
idivb
lret
mov
mov
rorb
jmp
pushl
cwtl
lcall
sti
test
aam
xor
aas
or
fidivrs
mov
lcall
add
dec
adc
xchg
pushl
xor
xchg
add
sarl
call
lods
test
xchg
jmp
das
icebp
imul
inc
push
add
js
push
or
roll
mov
pop
jmp
scas
into
inc
jg
pop
movb
xchg
and
jle
pop
cwtl
into
aam
mov
add
sarl
sbb
dec
sbb
mov
or
mov
aaa
hlt
fstl
fcomip
pop
arpl
xchg
bound
gs
dec
mov
inc
mov
ljmp
cmpsl
jb
lea
mov
mov
sarb
mov
lds
inc
inc
dec
sbb
call
xorb
dec
fdivr
inc
jmp
or
mov
ret
call
fstpl
fisttps
inc
sub
dec
jb
inc
fnstenv
ss
sar
mov
and
clc
stc
mov
das
sub
idiv
lds
les
mov
test
dec
insl
inc
out
and
xchg
xchg
sahf
xchg
dec
jne
adc
aam
or
add
inc
push
inc
mov
pusha
inc
scas
cmc
pop
ljmp
jmp
shl
or
and
or
stos
jecxz
int3
xor
cltd
movsb
and
xchg
ss
enter
push
cmp
sub
in
incl
and
xchg
xchg
sub
psubq
insb
mov
and
xor
inc
ljmp
andb
in
xor
std
nop
fwait
cld
sub
das
push
cmp
outsl
inc
inc
ret
add
idivb
add
add
js
jmp
fcmovb
xorb
sbb
mov
das
or
and
aas
inc
jae
jge
in
stos
sar
loopne,pn
decl
add
insl
std
ret
outsl
pop
push
divb
cld
scas
ret
movsl
and
ss
mov
test
jmp
es
mov
aas
mov
nop
int
cmpsl
inc
push
cli
lods
pop
dec
push
pop
loopne
jl
xor
mov
xchg
in
call
lock
aas
movsl
xor
subl
xchg
movsl
mov
fistps
shl
dec
sahf
pop
iret
and
cli
fcmovnbe
sbb
scas
pushl
push
dec
scas
call
jnp
scas
push
mov
adc
and
sarl
inc
push
movsb
ds
mov
and
call
not
mov
lods
shll
push
pop
hlt
sub
cld
iret
aam
movsb
sub
push
in
rcll
mov
sbb
sbb
xor
xchg
xchg
add
add
mov
jmp
fcompl
cmpsl
mov
sub
xor
hlt
mov
iret
std
das
test
shll
inc
lds
mov
inc
pop
lods
pushl
out
loop
pop
pop
cld
jl
push
pop
inc
fldcw
adc
jp
pushl
push
daa
fcmovnbe
fldcw
dec
ljmp
dec
daa
mov
cmpsb
mov
pop
dec
icebp
push
loopne
mov
pop
test
rcrl
pop
mov
aad
movsl
push
scas
aam
ror
mov
add
push
ja
das
xchg
loope
lret
mov
jecxz
inc
rcrl
push
mov
cld
xlat
inc
cmpsl
dec
inc
dec
insl
mov
pop
sub
aam
std
ror
xchg
out
test
inc
insb
pop
mov
cld
imul
mov
ss
rorl
sti
mov
mov
ret
pusha
mov
std
or
add
jp
mov
jno
cli
test
out
mov
incb
or
lds
aaa
xchg
dec
pop
dec
mov
cli
insb
daa
clc
lods
push
test
cli
push
stc
jg
dec
movsl
clc
mov
sbb
or
decb
test
sbb
in
scas
arpl
mov
pop
xchg
cmp
popa
jmp
mov
jbe
push
dec
cli
mov
incb
outsb
call
mov
pushl
inc
sub
shrb
sarl
out
sbb
test
cmpsl
push
sub
decl
out
call
or
push
fcos
in
sarl
sbb
adc
out
dec
test
sbb
xchg
frstpm(287
lock
cmc
in
lcall
add
push
das
lcall
iret
jmp
and
cwtl
and
or
mov
jge
xchg
ljmp
mov
test
imul
jle
cmp
mov
jecxz
rolb
sbb
jno
test
mov
aad
das
push
cwtl
enter
negb
and
pop
and
pushl
test
fsubrl
aaa
push
sbb
cli
js
sub
leave
xchg
orb
or
fnstsw
std
push
stos
mov
or
mov
repz
adc
sub
xor
leave
adcl
cltd
jmp
jbe
in
inc
xchg
dec
das
pop
push
jge
decl
push
sbb
xor
std
and
sub
sbb
jecxz
arpl
std
mov
imul
fcom
movsb
mov
call
js
into
roll
ret
jne
push
mov
cmp
jcxz
sbb
psrad
xchg
jle
mov
pop
pop
add
adc
je
es
mov
adc
inc
les
jecxz
lcall
jnp
jno
iret
mov
and
pop
mov
mov
daa
aam
popa
js
mov
iret
ljmp
outsb
adc
arpl
mov
sti
xor
mov
in
adc
cmp
mov
test
mov
sti
dec
stc
push
jecxz
fisttpl
pop
es
sbbb
icebp
fsubp
andl
push
mov
fistps
mov
sub
sbb
lods
mov
sub
inc
pop
dec
mov
pop
mov
push
dec
in
pop
xchg
inc
push
cmpsb
in
pusha
and
inc
mov
popf
xlat
inc
incl
popa
jecxz
sub
jl
sub
shrb
push
hlt
ret
test
aas
xor
xlat
pushl
and
je
sub
decl
arpl
or
add
ja
lret
insb
add
push
leave
xchg
mov
iret
fnstcw
adc
add
gs
xchg
add
addr16
imul
inc
ss
inc
ffreep
repnz
sub
xor
push
inc
div
mov
fs
out
cwtl
jg
cmp
test
repnz
lcall
aas
xor
cmp
cmovnp
fwait
sub
inc
sub
mov
stc
les
push
call
lods
ficoml
ljmp
mov
xchg
jecxz
fdivr
add
sbb
fistps
cld
fwait
out
int3
push
ud0
push
jp
lock
push
mov
outsb
cli
fcomps
xor
mov
add
pushl
and
push
hlt
jecxz
xor
out
mov
cmc
inc
xchg
jle
add
or
test
xchg
sarl
cmp
xor
and
fwait
in
jmp
xchg
outsl
in
add
imul
inc
lds
cmpsl
leave
ljmp
out
jmp
push
adc
pop
fcmovu
mov
sub
mov
test
addl
mov
leave
test
mov
std
stos
sbb
mov
lcall
sbb
xor
pushl
adc
adc
jmp
and
xor
cmpsl
dec
mov
ljmp
push
outsl
mov
sub
hlt
push
call
loop
fbld
fsts
ret
cmp
repnz
insl
lock
mov
push
xchg
adc
in
mov
jmp
fdivl
insb
mov
ljmp
pop
dec
jge
and
push
clc
idivb
test
clc
cmpsb
xchg
repnz
pop
fistps
icebp
rorl
outsl
cmp
les
outsl
and
cs
cmpsb
nop
loopne
mov
pop
sbb
mov
pop
add
mov
xor
adc
xchg
pop
aas
cmp
xchg
add
lods
fisttps
incl
or
and
repnz
pushf
dec
stos
dec
das
lds
cld
std
inc
mov
sbb
and
xchg
dec
xchg
push
mov
inc
ljmp
or
test
int
cmp
aam
bound
dec
incl
lea
fsubrl
cld
rolb
pop
jno
pushl
jno
fdivrp
loop
mov
mov
rcrb
ja
decl
jbe
mov
jo
call
sbb
sar
gs
jp
mov
mov
adcb
cmp
jb
lahf
pop
sbb
scas
add
inc
fstl
cld
test
cld
ljmp
dec
les
andl
in
call
fcompl
jns
cmp
adc
stos
iret
loop
jg
pop
aad
or
das
mov
orl
lcall
xchg
call
aad
or
sar
mov
inc
cmp
es
shrb
or
movsl
rcr
adc
xor
jne
mov
in
adc
mov
fadds
mov
pop
movsl
call
inc
add
xor
insl
shrl
mov
jle
gs
ja
and
add
sub
test
aaa
std
popf
movsb
pusha
lahf
add
popl
imul
adc
or
and
inc
std
leave
mov
stos
or
cmp
adc
add
mov
lcall
mov
inc
lret
sbb
xor
sub
mov
mov
pop
push
xchg
ljmp
pop
ljmp
cltd
loop
add
in
jge
jns
pop
mov
icebp
push
jbe
fs
in
loop
sarl
and
outsl
das
jbe,pt
mov
pushl
shl
adc
popa
ljmp
sarb
mov
jnp
call
and
push
inc
xlat
ja
jmp
mov
pushl
mov
incl
mov
jmp
and
mov
add
push
mov
jmp
jg
aad
rcrb
call
movsb
dec
scas
cld
int3
loop
sbb
and
inc
addr16
idiv
adcb
fcmovnbe
cli
mov
nop
pushl
sbb
or
mov
flds
int
ds
loopne
sub
iret
decb
cld
add
fisttps
into
cmpsb
gs
sbb
mov
mov
insb
pop
inc
test
inc
xor
xchg
hlt
jo
mov
cmp
dec
push
addr16
adc
or
dec
std
out
jo
adc
dec
cmpsb
js
dec
sbb
mov
mov
fcoml
mov
inc
scas
jmp
adc
call
imul
inc
call
mov
cmpsl
incl
or
cmp
cmc
xchg
sti
bnd
xor
popa
cs
sub
xor
fldt
incl
cmp
mov
jno
jle
mov
dec
enter
adc
jae
jne
out
roll
sbb
xchg
ret
loop
ds
lahf
push
jg
mov
movsb
mov
seto
fstp
add
stc
or
dec
loop
mov
js
jmp
xchg
mov
cmp
pop
xor
sub
sahf
push
xor
js
loope
loopne
mov
popa
adc
icebp
add
loopne
lcall
xchg
jle
mov
aas
jmp
stos
mov
and
cmp
dec
cmc
jne
aas
xchg
or
push
dec
icebp
idivl
dec
pop
das
das
ret
ret
inc
cld
cltd
cmpsl
lods
mov
incl
mov
push
ljmp
sub
add
test
outsl
adc
popf
pushl
das
movsb
sub
jae
decl
pop
enter
clc
out
iret
push
sbb
mov
insl
ljmp
stc
ljmp
js
out
mov
xor
lea
jmp
or
xchg
add
popa
dec
out
ds
loope
dec
inc
in
ret
pop
aad
push
mov
push
ss
imul
icebp
ret
mov
mov
mov
cmc
aaa
incl
adc
lcall
imul
arpl
sub
jo
sti
lods
incl
mov
xchg
incl
add
orl
mov
test
rorb
rol
or
push
pushf
test
ret
scas
sub
jno
xor
out
inc
int
jg
mov
jbe
jae
mov
pop
rorb
stos
scas
aad
je
decb
fucomip
jecxz
pop
xchg
fidivrl
mov
pop
das
int
nop
pop
push
jecxz,pt
decl
pop
ret
mov
mov
decl
pop
fiadds
call
repz
cmp
popa
push
sahf
inc
sbb
sub
pop
movsb
xchg
lds
cld
pushf
pop
mov
arpl
cld
ljmp
jmp
lods
lret
push
jne
xchg
inc
stc
mov
dec
mov
cmc
bound
gs
ret
add
mov
inc
lods
lcall
pop
enter
movsb
repz
adc
rolb
or
mov
testl
cmpsb
dec
mov
lcall
aam
aam
divl
jl
call
jle
aaa
mov
mov
adc
xchg
pushl
push
nop
xor
sbb
lcall
add
add
xchg
cmp
sub
push
in
loopne
pop
lods
test
jmp
roll
ljmp
mov
lcall
ljmp
push
jno
inc
in
imul
test
push
aas
test
jns
imul
xor
js
mov
lea
inc
inc
jecxz
call
scas
pop
fisttpll
dec
pop
add
xchg
lods
mov
adc
decl
cmp
pushl
fwait
pushl
insl
or
fldcw
aad
repnz
aad
adc
mov
jmp
into
loopne
sti
inc
jns
mov
inc
fsqrt
push
std
inc
xchg
aaa
lret
sbb
sbb
call
jbe
jo
lcall
push
jo
and
incl
or
decl
xchg
adc
es
fadd
fs
in
jne
mov
mov
cmove
mov
data16
mov
mov
nop
jecxz
cmc
int3
jg
mov
or
mov
ljmp
cmp
xor
mov
call
test
decl
jno
nop
ds
int3
xlat
add
rorb
sub
arpl
pop
lea
mov
push
mov
inc
sahf
jmp
jmp
pop
aaa
call
jo
std
out
jno
movsb
in
sti
sub
lock
jg
inc
push
mov
cmovs
cld
lods
stos
lahf
xchg
push
out
dec
incl
mov
sbb
sub
push
inc
cli
pushf
in
mov
int3
dec
js
cmp
xorl
call
bound
or
divb
sub
jmp
ds
mov
cwtl
mov
pop
data16
test
and
aam
in
mov
inc
ret
sahf
dec
repz
jmp
jg
jbe
jb
sar
fisubrl
loope
in
pcmpgtw
lock
in
sub
mov
addr16
or
pushf
test
and
mov
xor
cmpsb
outsl
ss
and
out
inc
sar
lods
pop
fstps
dec
call
xchg
rolb
and
das
jl
lcall
sub
inc
add
dec
ds
jp
pop
insb
ljmp
movsl
fisubrs
xchg
popf
std
dec
loope
xchg
test
and
adc
addr16
push
add
dec
push
jp
lahf
mov
out
cwtl
call
jmp
mov
decl
add
jl
std
gs
call
dec
leave
iret
mov
test
inc
clc
loop
enter
jmp
into
hlt
cli
nop
sub
push
int
test
push
mov
mov
mov
imul
push
inc
mov
fs
xchg
rolb
sub
repnz
movsl
daa
lcall
inc
push
idiv
insb
mov
mov
mov
call
fidivl
shrl
jmp
adc
test
lcall
aaa
pop
dec
or
cwtl
cmp
mov
cs
scas
dec
ljmp
aam
mov
pop
sub
dec
cltd
jge
jle
sbb
push
push
daa
and
lds
loop
mov
xchg
mov
mov
imul
lahf
mov
inc
sub
idiv
cmp
inc
rcrb
lcall
dec
pop
inc
fadds
sar
gs
xor
add
mov
jb
repnz
jecxz
negl
loope
sbb
jbe
addb
jmp
pop
mov
stc
pop
cmc
daa
jge
adc
arpl
sbb
mov
int
popa
cltd
decl
nop
dec
imul
aaa
or
lahf
inc
cmp
pop
push
lds
aam
sub
push
push
stos
xchg
mov
leave
jmp
inc
jae
xor
sub
dec
movsl
or
mov
mov
add
rolb
arpl
jmp
push
xchg
xchg
loopne
add
iret
in
lock
mov
mov
in
xor
xchg
lahf
mov
or
movsl
lcall
cmp
sbb
decl
jnp
nop
popa
inc
pop
hlt
leave
cmpb
das
push
clc
aaa
pusha
dec
pop
repz
testb
mov
pop
adc
clc
lea
pusha
inc
mov
lods
adcl
mov
inc
mov
rcr
inc
negl
xlat
ljmp
repz
outsl
cmp
jo
fsubl
lret
push
inc
lcall
add
les
and
jmp
pusha
dec
mov
mov
pop
inc
aas
adc
jp
std
inc
and
pop
cmp
jno
mov
sbb
jg
and
into
imul
scas
cmpsl
jge
imul
imul
test
insb
pushl
jb
leave
incl
jb
jnp
mov
push
incl
sbb
cmp
dec
std
lock
sub
cmpsb
decl
jl
dec
sbb
test
test
into
imul
add
test
ljmp
and
and
stos
jmp
shll
leave
mov
cmpsl
jg
pop
mov
mov
push
aad
lods
dec
pushf
addl
and
incl
xor
xor
aaa
jecxz
adc
out
adc
lods
adc
push
decl
mov
mov
stc
jmp
imul
iret
jmp
add
push
push
mov
nop
popa
cli
jbe
in
es
outsl
sub
jo
lods
pop
or
vpmacsswd
xchg
fisubrl
decl
xchg
xor
mov
mov
into
shrb
jmp
iret
lahf
ljmp
aas
js
push
xchg
or
leave
dec
subb
mov
fldt
dec
inc
loopne
jge
outsl
mov
rcrl
enter
stc
and
sub
fnstenv
dec
fstps
ljmp
pop
cwtl
mov
dec
out
pushl
rclb
je
jo
cld
stos
and
das
pop
jmp
cmp
dec
rol
mov
cmc
xor
pop
add
imul
cmp
idivl
jnp
mov
xchg
dec
fimull
mov
ret
adc
or
cli
ja
xlat
cmpsb
rclb
imul
push
cmpsb
push
add
jnp
lds
pop
notb
cmp
and
xchg
mov
sub
xchg
or
pop
incl
or
sub
iret
push
mov
aaa
arpl
pop
inc
pop
call
jl
sbb
add
mov
stos
sbb
and
daa
push
xor
ljmp
in
gs
inc
lods
repz
aaa
pop
push
mov
pop
cwtl
fdivr
add
pusha
push
lahf
loopne
in
mov
call
lret
pushl
bound
loope
add
cli
fldenv
inc
sti
xor
inc
in
std
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
or
and
int3
xchg
pop
sbb
aaa
scas
push
sar
in
out
sbb
mov
cmc
dec
add
push
mulb
les
mov
mov
and
cltd
pop
or
lcall
mov
leave
test
jg
pop
mov
jns
or
pop
and
leave
insb
mov
add
cmp
fucomip
imul
lods
int
mov
inc
push
incb
stc
inc
push
and
pusha
jg
dec
push
inc
pushl
aad
adc
sbb
ljmp
mul
fbld
add
pop
shlb
clc
sub
jmp
sahf
enter
jl
outsl
push
pop
scas
mov
aad
pop
mov
or
test
and
es
ljmp
adc
jb
popa
mov
inc
cmc
jmp
cmp
es
push
lahf
dec
sbb
insb
add
mov
push
outsb
mov
mov
fistpl
inc
adc
sub
cmc
adc
sub
pop
xor
sarl
das
loope
test
inc
sbb
lock
fs
xchg
and
pop
decl
jl
nop
clc
das
pop
push
and
mov
lret
insb
lock
and
hlt
mov
out
gs
fnstenv
rcr
iret
jecxz
aaa
push
test
mov
add
call
pop
and
xchg
nop
jmp
jnp
push
lcall
call
outsb
fisttpl
loop
inc
mov
cmp
lock
sarb
mov
ljmp
and
fs
dec
decb
cmp
mov
movsl
jg
loop
adc
leave
inc
or
in
test
add
gs
inc
push
loopne
test
mov
int
cwtl
lock
iret
and
or
test
or
jl
movsl
les
icebp
push
mov
lods
add
sbb
cmp
mov
std
jae,pn
icebp
jle
jno
std
aas
stc
cmp
lods
push
ud0
jo
and
or
sbb
push
addr16
mov
mov
cwtl
clc
jne
ret
push
fdivs
sub
cmp
stc
shrl
mov
push
call
jl
inc
jmp
leave
or
out
adc
fldenv
loope
leave
int3
mov
in
inc
mov
sub
dec
cmp
inc
push
stos
jbe
push
stos
pop
movsl
movsl
mov
pop
pop
mov
scas
xor
jmp
js
mov
cld
push
dec
fildll
std
cmp
iret
shlb
cmp
dec
dec
sti
pop
pop
cli
addr16
sbb
daa
mov
dec
sub
cs
movsl
stc
lcall
jae
cwtl
ljmp
cmp
sti
fnstenv
ror
xchg
repz
mov
cmpsb
or
push
push
das
cmp
lods
call
dec
dec
sbb
sub
jmp
jg
pop
add
cmp
cmpsl
push
icebp
jge
ds
inc
decl
inc
addr16
ficoml
iret
std
and
inc
test
in
repz
scas
sarb
pop
fmul
mov
aam
sti
mov
push
mov
ljmp
jmp
decl
rcrb
and
or
orb
sbb
mov
mov
movsb
decb
push
xor
mov
push
adc
les
sbb
lcall
dec
movsb
stos
outsl
imulb
cmpsb
push
nop
mov
or
add
nop
std
insb
jno
lcall
xor
stos
dec
xchg
cmp
fisubl
jne
cli
incl
push
mov
jecxz
xorl
inc
mov
and
or
mov
mov
daa
inc
andb
and
xor
in
inc
or
pop
xlat
ds
push
and
or
stc
stos
pop
dec
stos
add
cltd
cli
nop
pushf
mov
arpl
and
imul
sub
xor
or
dec
in
mov
dec
in
pop
xchg
pushl
ljmp
cld
cmp
scas
mov
mov
mov
cvttps2pi
in
sbb
lods
stos
push
xchg
fbld
cmp
sub
aad
pop
aas
out
push
ret
dec
pop
pop
jg
push
jnp
outsl
adc
dec
out
popa
cld
mov
aam
lcall
jno
xor
pop
lcall
call
in
push
pushl
push
das
idiv
jmp
add
mov
mov
dec
or
jmp
mov
pop
lcall
xor
fwait
jmp
xchg
cmc
inc
mov
adc
and
push
lcall
movsl
je
sub
cmpsb
mov
negl
sub
lret
iret
imul
lods
push
mov
sbb
push
inc
test
pushl
iret
jg
mov
lcall
inc
lock
mov
sarl
sub
idiv
negl
sbbl
decl
push
inc
inc
les
rorb
lcall
cwtl
ret
in
jo
mov
or
cmp
incl
leave
dec
lret
mov
add
dec
cs
adc
push
xor
sub
dec
or
outsl
mov
dec
push
repz
call
jp
mov
icebp
xchg
ljmp
jle
aas
mov
dec
call
dec
divb
daa
dec
mov
stc
out
sbb
fdivr
mov
lods
add
sbb
pop
cltd
sub
movsb
gs
daa
fcmovnu
in
sar
mov
mov
push
mov
fiaddl
inc
xor
pop
add
ljmp
xchg
mov
lcall
xor
sub
and
std
xor
ljmp
imul
jmp
jno
out
int
push
cli
mov
rorl
fistpl
outsl
lret
mov
mov
in
jae
xor
ror
inc
dec
and
push
adc
arpl
outsl
or
int
xor
and
xlat
in
stos
pop
xor
mov
mov
push
dec
mov
in
xor
fnstsw
jge
fucomip
adc
dec
mov
dec
cmova
lea
pop
lea
dec
cltd
decl
mov
add
cmc
xchg
mov
inc
jmp
jmp
ds
push
out
shll
dec
std
pushl
movsl
sti
add
inc
inc
mov
movsl
jmp
daa
bswap
lcall
dec
mov
enter
das
mov
cld
jle
push
jb
mov
jmp
or
stos
fcoml
popl
cmp
xlat
xchg
lcall
sub
in
cld
testb
pop
pop
outsl
mov
xor
int3
inc
enter
jmp
push
flds
push
pushf
cmp
call
dec
mov
test
std
jae
shll
pop
dec
clc
orl
and
pop
adcl
xchg
incl
mov
jl
scas
pop
incl
pop
xchg
adc
inc
ljmp
mov
push
push
push
sbb
call
mov
pop
test
fisubrs
pop
mov
push
in
call
mov
scas
test
enter
push
lcall
hlt
pop
jno
mov
or
jne
mov
xchg
rcll
or
jae
fldl
daa
das
fisubl
ljmp
adcb
mov
stos
stos
fcmovnu
loope
incl
add
rcrl
call
imul
imull
decl
xor
out
jns
pop
shll
fnstsw
ljmp
popf
roll
repz
xlat
xchg
mov
pop
in
jb
pop
xchg
loope
cmp
mov
mov
aaa
push
lahf
std
mov
int3
sti
push
inc
mov
decl
cmpsl
jl
cmp
xchg
or
in
inc
dec
gs
or
cmpb
aam
lods
ljmp
ret
fisubs
ljmp
jo
pop
cmp
ljmp
pop
dec
dec
aad
repnz
jae
ljmp
xchg
std
cmp
dec
insl
fwait
test
aam
cmp
icebp
sbb
out
sbb
fwait
outsl
outsl
pop
mov
mov
sub
jb
lret
sub
or
push
out
mov
test
xchg
push
or
aaa
or
div
inc
in
pop
jmp
pop
jge
decl
sub
ljmp
jmp
jbe
outsl
andb
xor
rclb
fidivrl
xchg
and
xor
cwtl
lret
cmp
scas
xchg
xorps
mov
out
inc
mov
aad
dec
les
loop
lods
pop
in
insl
arpl
mov
dec
movsb
jo
loopne
leave
pushf
test
outsb
add
inc
or
cmp
jnp
mov
decl
mov
rol
mov
aaa
lcall
inc
divb
mov
lcall
lcall
jle
sbb
test
sbb
in
into
adc
ds
mov
dec
sti
mov
or
xlat
dec
pop
pop
lahf
sub
or
xchg
dec
and
dec
xchg
adc
cli
sub
mov
lds
aaa
jle
pop
xchg
cld
mov
mov
leave
js
inc
mov
enter
and
repz
inc
mov
mov
mov
movsl
jl
ljmp
das
out
out
arpl
jb
loopne
sbb
js
mov
lds
pop
xor
jmp
jne
nop
call
nop
das
mov
cmp
in
xchg
ds
mov
lods
mov
jmp
jns
out
adc
add
test
inc
outsb
lcall
add
loopne
ds
dec
xchg
push
push
cmc
cmp
clc
js
add
sub
lahf
lcall
cmpsl
mov
call
sbbb
sub
push
fldcw
cli
cmc
das
cltd
dec
push
lods
xor
jne
dec
aaa
xchg
pop
fdivrp
inc
lahf
pop
jl
push
fs
and
mov
sub
aaa
dec
or
sarl
jmp
cmp
push
fidivs
sar
sub
cmpsb
push
add
dec
pushl
inc
shrl
ret
jmp
jg
adc
cwtl
and
jmp
jl
push
pop
mov
icebp
subl
push
mov
nop
lahf
rolb
cwtl
push
jno
clc
xor
fwait
subb
inc
and
jbe
ret
fldenv
movsb
cmp
mov
cmp
pop
adc
dec
xchg
icebp
inc
fdivr
jp
loope
mov
ja
add
test
hlt
sahf
mov
lods
das
push
cs
push
je
lea
and
loope
scas
pushl
lret
leave
inc
incl
mov
dec
push
rclb
and
arpl
and
sub
repnz
hlt
or
add
sub
in
in
daa
and
sub
mov
sub
cmp
in
mov
mov
pop
pop
cs
or
inc
xor
xor
add
mov
or
cmp
in
ds
icebp
mov
mov
cwtl
sahf
adc
dec
inc
mov
push
cmp
sbb
clc
stos
sti
dec
jle
ficoml
aad
test
decb
sub
aaa
loopne
dec
call
scas
mov
movsb
incl
xor
add
test
dec
jmp
xchg
mov
adc
mov
call
loop
movsb
mov
nop
sub
imul
add
mov
add
lock
adc
int
sbb
scas
mov
fstl
rorl
cltd
xor
xchg
stos
imul
sub
outsb
lret
xchg
adc
aam
cmp
jge
lea
call
push
ror
cmpl
inc
mov
shlb
pop
mov
push
push
pop
add
mov
pushf
adc
dec
fists
lods
pushw
lock
adc
fcomip
pushl
repz
mov
sahf
sbb
adc
js
and
inc
xchg
scas
push
sar
or
sbbb
inc
ljmp
cmpsl
and
xor
or
ficompl
inc
xlat
addr16
push
dec
sub
mov
push
in
and
rclb
cmpsl
jecxz
jno
adc
idivb
inc
pop
imul
dec
adc
cli
repnz
jmp
in
cmp
ds
xchg
sbb
mov
ljmp
dec
cmp
mov
sub
or
pop
adc
loopne
push
jl
cmp
mov
ficompl
and
addr16
mov
daa
sbb
nop
ljmp
dec
ljmp
pop
jmp
dec
sbb
mov
sti
mov
addr16
xor
and
inc
sti
leave
mov
jb
jl
adc
push
jb
sbb
jmp
add
push
arpl
imul
orb
or
mov
mov
push
inc
gs
sar
ret
into
aaa
push
das
sbb
cmp
add
fbstp
fisttpll
cwtl
mov
mov
sbb
mov
jo
mov
cmp
cld
mov
cmp
jne
incl
ss
jmp
into
xchg
fdivr
mov
mov
aas
pushf
xor
cwtl
mov
cs
pop
call
insb
insl
sbb
outsl
cmp
xchg
ret
cld
lahf
mov
dec
faddl
xlat
rorl
call
mov
ficompl
pop
jmp
cmpl
aad
pop
mov
loopne
repnz
jge
fbld
cmp
mov
mov
imulb
pushf
push
into
jmp
into
mov
and
cmp
xor
dec
xchg
mov
fdivrp
add
decl
cli
adc
xor
pop
mov
or
cmp
mov
inc
and
pop
mov
sub
jmp
xor
jno
stos
jmp
out
sbb
decl
cmp
sbbb
fistpll
call
jmp
mov
jmp
orl
jns
shlb
jmp
inc
incl
mov
add
adc
dec
sbb
fucom
decl
fldl
adc
xor
test
loopne
es
fs
scas
shlb
pushf
inc
cwtl
mov
mov
mov
jg
cmp
lcall
jmp
adc
popf
sbb
xchg
and
fwait
mov
filds
inc
popl
dec
jae
dec
jl
or
cld
or
sbb
or
incl
push
add
mov
jmp
pop
xor
incl
mov
adc
cmp
aas
or
loopne
enter
out
mov
or
incb
xchg
mov
mov
test
pop
outsl
lea
lods
call
sti
imul
jmp
iret
jmp
out
movsl
test
and
shlb
aad
mov
mov
test
push
pop
cld
fwait
dec
sub
mov
aas
jp
mov
adc
mov
ljmp
imul
inc
mov
xor
jmp
xor
sbb
in
bnd
jle
fnstcw
stos
mov
cmp
xlat
adc
test
sub
add
ljmp
in
in
adc
push
rcll
incl
adc
push
filds
xchg
mov
insl
in
icebp
push
das
insl
scas
mov
lret
jno
dec
pop
outsl
insl
shrb
data16
fwait
cs
cmp
in
decl
inc
sub
stos
fsqrt
incl
jg
in
push
sub
pushl
inc
sub
js
xor
cltd
jno
test
sbb
xchg
outsb
jmp
insl
clc
cmp
mov
ffreep
in
and
jmp
jbe
mov
mov
daa
mov
jmp
nop
xchg
call
sub
dec
pop
in
xchg
dec
mov
cmp
es
add
loope
mov
mov
in
sub
fisttpll
daa
mov
shr
xor
lods
sahf
mov
mov
sbb
jg
inc
push
lods
cld
push
call
mov
cltd
in
scas
icebp
add
ja
jecxz
pop
xorb
dec
popa
sar
js
jb
bound
ljmp
sbb
and
pop
inc
ret
jl
decl
xor
insb
call
outsb
mov
push
pushl
xchg
push
fucomp
in
adc
and
icebp
loopne
lret
adc
mov
daa
mov
sub
pushl
and
mov
mov
decl
in
int3
or
push
cli
fidivl
mov
incl
in
insl
pop
inc
adc
and
add
imul
fnstsw
xor
push
or
aaa
cmc
into
jb
pop
add
cmp
das
daa
xor
adc
jns
fadd
xchg
outsb
loopne
lcall
xor
or
mov
pop
call
pop
loope
jbe
dec
adc
loopne
jl
popa
mov
lock
jmp
shrl
pop
dec
mov
jle
lcall
inc
lret
adcb
and
dec
push
sbb
out
jmp
ljmp
fmull
jge
mov
fdivrl
stos
sub
jl
lock
mov
outsl
in
jge
pop
in
fsubrp
lods
sub
sbb
incl
cmc
je
push
orb
lret
jns
jecxz
mov
repnz
shlb
push
jmp
scas
pop
mov
adc
test
sbb
fldt
movsl
inc
dec
cli
dec
cmp
inc
rcl
mov
dec
add
lcall
filds
add
dec
repnz
jbe
pushl
lods
mov
inc
rsqrtps
daa
inc
mulb
jnp
aas
pop
and
fistps
cs
movsb
call
andb
mov
mov
in
xor
pop
popf
fcmovu
cmp
sbb
dec
sub
cld
pop
sub
repnz
hlt
mov
mov
inc
jo
sti
fisttpl
es
addr16
das
xor
mov
cld
pop
imul
xor
adc
xchg
pop
xchg
repz
mov
out
daa
out
jmp
adc
int
lods
mov
inc
ja
cmp
pop
add
push
cltd
repnz
leave
mov
mov
test
and
mov
std
sub
fsub
ja
sub
jmp
cmp
test
jmp
push
xchg
add
or
jecxz
pop
sbb
sbb
mov
jmp
pop
inc
push
popf
mov
loope
iret
int
stc
inc
fwait
sbb
ljmp
mov
add
mov
insl
adc
xor
sbb
and
mov
sub
dec
jp
cmp
out
fmulp
in
hlt
jno
js
pop
test
incl
adc
push
mov
ljmp
cmc
pushl
filds
ljmp
sbb
cmp
dec
fwait
add
sub
loop
rcr
push
out
cmp
ljmp
mov
mov
das
mov
lods
pusha
mov
push
xchg
push
repnz
je
add
add
sti
xchg
fdivl
notl
jle
int
push
pop
cmp
mov
cmp
push
shrb
dec
int
pusha
decl
sarb
call
dec
enter
mov
cmpsb
xor
cmpsb
add
lods
xor
push
out
xor
dec
stos
aas
dec
orl
cld
ss
adc
push
or
fimuls
xlat
jl
stos
ror
dec
push
pop
push
mov
pop
pop
stos
add
push
imul
out
push
fdivrs
std
hlt
pop
sbb
inc
das
mov
inc
jecxz
cmp
push
scas
je
loopne
repz
test
adc
pop
jg
mov
pop
fwait
popa
mov
dec
jmp
jno
loopne
stos
sub
repz
xor
lcall
jns
mov
aaa
in
pusha
sbb
push
into
mov
adc
sub
or
jbe
push
add
or
mov
js
jmp
fs
sar
bound
dec
sbb
sbb
incl
ret
mov
jmp
ficoml
aad
and
rclb
or
nop
pop
push
mov
in
inc
cmpsl
fbstp
sarb
or
pop
call
rcll
lods
cli
sub
lcall
sbb
in
outsl
adc
dec
stc
stos
jmp
fnsetpm(287
inc
sbb
xchg
pop
std
insb
xchg
ret
inc
mov
int
jl
mov
movsl
mov
iret
lcall
lock
stc
sub
cmpsb
jbe
xchg
mov
test
xor
out
pop
xchg
mov
and
aas
jmp
pop
fnsave
xchg
sbb
jp
push
inc
jmp
ret
mov
sub
lods
aas
rorl
test
jp
xchg
insl
nop
sbb
mov
sbb
incl
sub
or
sbb
and
sub
orl
movsb
movsl
pusha
ljmp
jno
mov
adc
pop
push
fistpll
icebp
add
out
je
xchg
push
mov
ret
pop
ficompl
cmp
lret
adc
mov
sahf
or
insb
sbb
mov
add
scas
pushl
push
mov
cli
daa
push
sub
out
jno
lock
call
pop
lods
test
call
jge
mov
lock
jne
pop
jp
add
arpl
xchg
mov
push
pusha
aas
rcrb
push
sahf
mov
fdivrs
push
incl
inc
test
inc
mov
pop
cltd
mov
adc
mov
popa
out
mov
imul
and
and
test
in
add
sbb
inc
ljmp
lcall
xor
aad
sub
jbe
idivl
adc
jp
pop
sub
mov
imul
repnz
push
shll
jg
mov
inc
jns
cld
dec
pop
lret
call
in
adc
push
xchg
push
fdivr
imul
inc
cmp
pusha
add
mov
out
es
add
pop
pop
movl
loop
xchg
jmp
movsb
call
repnz
lock
push
icebp
mov
push
repnz
aas
mov
sbb
incl
cmp
in
xor
hlt
stc
push
cmc
int
sub
sub
dec
test
imul
clc
sub
pusha
xchg
call
fistl
cli
stc
bound
repnz
mov
add
mov
mov
or
test
or
arpl
inc
and
xor
jle
std
popa
movsb
pushf
lcall
inc
das
dec
cwtl
jns
hlt
add
movsb
cltd
das
xor
pop
repz
ret
divb
das
lcall
incl
popa
jmp
or
outsl
push
test
and
jmp
movsl
cmp
jno
loopne
inc
mov
divl
xchg
out
pop
cmp
movsb
fnstcw
cmpsb
inc
shl
iret
call
inc
xor
insl
pop
arpl
sahf
iret
enter
insb
popa
imulb
aad
ds
cmp
repz
xor
out
fcomps
dec
stos
lods
sub
inc
out
cmc
outsb
cli
outsl
int3
cmp
inc
dec
and
or
daa
pop
dec
das
add
dec
lcall
or
pop
mov
aaa
mov
mov
sar
incl
scas
dec
les
or
movsb
mov
in
jg
stos
cwtl
sub
dec
add
cmp
popa
mov
jg
inc
cs
pop
pop
ljmp
dec
shl
sti
popf
lret
into
stos
adc
sti
dec
push
decb
fwait
cmp
loopne
xchg
jp
push
ljmp
es
lahf
movsb
sbb
xchg
sti
sbb
mov
jecxz
add
in
ret
push
jns
pop
inc
mov
cli
stos
jl,pn
out
inc
ret
addr16
loope
rclb
adc
jns
sub
in
mov
ljmp
dec
call
les
pop
and
and
inc
out
cli
pop
lea
xchg
sbb
or
adc
dec
aad
add
scas
jmp
cltd
push
addl
sarb
int3
dec
inc
mov
hlt
jle
icebp
or
mov
sub
cld
jmp
shrb
mov
ja
dec
xor
and
and
pop
call
iret
add
ljmp
bound
sbb
repnz
repz
stc
mov
pop
nop
outsl
push
imul
mov
aad
fisttpll
bound
stos
jbe
in
mov
and
in
ljmp
sbb
cld
ljmp
cmpsb
add
ljmp
adc
push
push
into
out
or
addl
mov
repnz
mov
mov
ljmp
out
incl
movsb
dec
xor
xchg
push
dec
mov
enter
inc
aas
int3
pusha
aam
iret
adc
sbbb
pop
fs
xor
cmp
jg
dec
lods
faddl
mov
xor
stos
ret
insb
pop
out
dec
ret
and
ds
push
sarl
inc
mov
sbb
lcall
jecxz
push
cmpb
mov
notb
or
data16
push
test
and
xor
stos
outsl
pop
lock
loopne
cmc
std
xor
mov
out
imul
sbb
and
aas
mov
sub
das
out
je
mov
decl
in
cs
inc
mov
shrl
sub
fdivrs
test
pop
jnp
enter
ss
fmuls
mov
mov
mov
dec
xchg
out
mov
xor
push
daa
jno
dec
idivl
mov
decl
push
out
push
or
push
ret
cmp
cmc
pushf
imul
xchg
dec
lock
mov
scas
loopne
and
mov
stos
xor
popa
pop
nop
call
fmull
les
and
pop
xchg
decl
fwait
jb
cwtl
sarb
test
movsl
inc
outsl
daa
pop
lods
push
ljmp
xchg
lret
repz
das
adc
jb
dec
ljmp
inc
cli
lds
incl
jne
mov
incl
jg
cld
or
mov
xor
sub
mov
inc
adc
add
xchg
inc
lods
js
and
insb
mov
call
or
jmp
lock
orb
mov
in
sbb
ljmp
loope
stos
cmpsb
loop
incl
lods
loop
cwtl
sbb
fnstcw
test
fsubr
std
push
dec
sub
add
jmp
sti
sub
mov
pop
and
xchg
push
push
cld
add
pushl
and
cmp
ret
stos
add
mov
sub
mov
jmp
paddusb
jae
ds
pop
out
add
inc
scas
in
int3
daa
scas
das
sub
cwtl
andb
jg
add
loop
ret
xorb
test
xor
fdivl
inc
add
sbb
mov
dec
sub
loope
dec
mov
mov
fcompl
inc
dec
push
cli
imul
nop
loop
je
filds
ljmp
sub
pushl
pop
dec
daa
dec
sub
jecxz
out
sbb
imul
je
sbb
rcr
pop
cli
scas
cmp
fsubrp
ljmp
push
jb
test
icebp
inc
enter
inc
mov
xchg
clc
sbb
push
outsl
push
ret
jg
mov
out
pop
in
xchg
lcall
aas
push
mov
push
jbe
pop
ljmp
call
sbb
mov
sbb
mov
pop
sub
or
cld
mov
push
pop
incl
dec
push
cli
pop
pop
ret
outsb
loope
in
gs
fistl
xor
add
fs
jecxz
pop
xor
cmp
add
imul
insb
xor
les
in
cmp
out
jl
lret
and
andl
xchg
push
loopne
jg
and
jl
ds
test
xchg
fs
call
inc
cmc
fldl
sbb
push
mov
sbb
mov
fcomp
cmp
push
into
mov
ljmp
dec
push
fs
loopne
add
icebp
int3
pop
ret
jb
aam
je
ficompl
jle
incl
jnp
cs
das
add
pop
mov
test
pushl
jno
mov
cmp
or
lcall
popa
test
incl
jnp
notb
loope
in
pop
fsubl
xor
out
xor
cmpsb
clc
scas
add
clc
xchg
dec
jmp
add
jmp
jp
jb
rolb
jg
sbb
ljmp
fdivs
mov
add
std
add
push
push
sub
mov
sub
pushl
and
jae
add
sub
inc
lcall
cmc
aaa
add
sbb
xchg
fisubrl
cs
pop
pop
mov
push
jl
icebp
fisubl
in
outsl
inc
ret
dec
cs
incl
and
fldenv
sub
push
sub
enter
push
aaa
mov
imul
mov
enter
ror
dec
icebp
iret
pop
lcall
xor
push
in
inc
in
mov
pop
fdivp
nop
popa
inc
xchg
adc
mov
xor
inc
pop
mov
addr16
call
sbb
and
not
mov
frstor
rcr
push
int
incl
cmp
mov
fildl
xchg
movsl
repnz
pop
cwtl
xor
pushf
decl
sub
hlt
pushl
out
adc
mov
push
or
mov
cmp
dec
xchg
cld
mov
ljmp
stos
pushf
inc
fmul
pop
push
outsb
and
mov
ljmp
fwait
push
ret
jecxz
inc
or
mov
aam
pop
incl
xchg
cltd
arpl
mov
and
mov
ljmp
sbb
jmp
mov
mov
jmp
dec
mov
addl
mov
cmc
jo
add
sarl
xchg
pop
and
out
addr16
inc
sub
lcall
bts
leave
add
lds
push
cwtl
jne
push
pusha
loop
jp
fists
jl
push
sbb
mov
push
cld
sbb
mov
pusha
pop
mov
cmpsb
iret
mov
outsl
enter
jmp
arpl
stos
xor
sub
shr
pushl
rorb
stos
push
ljmp
loope
and
add
ljmp
pop
insb
cmp
pop
xor
pop
adc
mov
out
mov
adc
mov
clc
ja
icebp
adc
fisttps
cli
into
jl
mov
mov
lahf
dec
jns
inc
fstl
cmpsb
mov
sbb
jno
out
and
mov
in
inc
es
cltd
sub
mov
cmpsb
adc
dec
push
idiv
in
jecxz
jno
jne
add
and
mov
fcmovnb
or
push
mov
sub
fisttps
cld
into
jo
inc
pop
imull
jb
outsl
incl
pop
out
jae
outsb
arpl
xchg
cmpsl
add
pop
push
popa
pop
mov
decl
lret
jmp
pop
mov
scas
inc
movsl
js
lods
mov
mov
pop
cli
xchg
scas
sub
and
aam
aaa
mov
pop
imul
adc
jp
cmp
sub
lods
jmp
test
mov
jmp
cmpsl
mov
aam
adc
cmpb
fsubl
jne
movsl
add
dec
pop
dec
sub
mov
add
ss
test
lock
mov
adc
mov
decl
mov
inc
jg
xor
test
cmp
insb
insb
add
dec
fcomps
lret
or
mov
inc
inc
xor
jle
ljmp
dec
xchg
ljmp
imul
lea
dec
mov
lcall
pop
adc
push
mov
sbb
inc
xchg
pop
and
dec
repz
xor
jae
outsl
in
or
dec
pop
leave
mov
pop
ljmp
jmp
jmp
pop
lahf
ljmp
dec
adc
jmp
push
dec
inc
add
sbb
xlat
push
mov
call
xor
inc
out
adc
cmp
push
mov
or
ljmp
movsl
filds
aas
aad
inc
hlt
decl
fnstcw
int3
test
xchg
push
adc
insb
lea
incl
std
and
out
or
sbb
pop
jmp
push
lcall
xchg
icebp
and
cmc
out
incl
ror
lcall
scas
cmp
push
test
lds
inc
mov
or
out
mov
mov
xchg
imul
xchg
popf
fdiv
mov
inc
setl
rclb
xchg
movsl
dec
mov
or
pop
clc
and
sahf
mov
pop
xchg
in
cmp
bound
fsub
fucom
or
cmp
mov
inc
xchg
pushl
add
sbb
movsb
mov
mov
sbb
or
add
jnp,pt
mov
xabort
sti
dec
addr16
sub
dec
push
mov
mov
jo
jmp
lea
jl
scas
incl
cmp
idiv
aas
push
and
xchg
mov
lods
inc
jb
inc
pop
pop
inc
call
xchg
or
incl
fwait
rcll
sub
jmp
push
cs
dec
mov
rcll
lret
lcall
out
ja
jle
sar
testl
aas
push
call
cmc
mov
dec
xchg
scas
or
mov
shl
fcos
lods
fwait
stc
adc
cmpsb
adc
call
aaa
jns
std
std
dec
repz
das
dec
jg
jnp
or
mov
imul
fdivr
mov
lea
shll
jmp
sub
mov
bound
dec
add
iret
xor
mov
and
mov
push
ficoms
dec
in
xor
add
shr
push
pushl
mov
pop
mov
pop
mov
xchg
inc
inc
mov
movsl
sub
call
sbb
xchg
cmp
xor
sub
stc
mov
lock
jne
mov
js
push
push
stos
or
insl
ud0
dec
xchg
shll
jp
aas
fistpl
cmpb
outsb
mov
sahf
dec
shrl
jmp
push
xlat
push
jae
xchg
inc
cwtl
jmp
lods
mov
add
ljmp
ds
cli
mov
push
repnz
adc
xchg
aad
lods
in
inc
adc
and
mov
in
adc
pop
decl
mov
xlat
pushl
sbb
push
adc
leave
adc
add
and
cmp
mov
shl
addr16
into
test
fistl
out
add
xor
call
enter
pop
adcl
js
lea
push
jg
pop
mov
adc
and
jl
adc
call
in
and
popf
jg
cwtl
gs
xor
lods
cmp
fsubp
push
mov
adc
inc
pop
mov
mov
xlat
into
cmp
icebp
add
mov
imul
sbb
clc
stc
pop
cmp
cld
bound
fwait
pop
or
push
jmp
xor
dec
jg
cmp
insb
js
xchg
adc
pop
cmp
cwtl
ljmp
pop
lock
cwtl
hlt
scas
nop
mov
ljmp
push
lds
and
mov
lcall
and
das
xchg
test
in
mov
call
rcrb
mov
sbb
and
fbstp
and
inc
jle
das
or
push
mov
out
inc
or
cld
repz
scas
leave
repz
out
cmp
xor
adc
inc
std
insl
add
mov
lea
jne
orl
adc
in
mov
outsb
shll
jg
loopne
cli
mov
mov
in
xchg
sbb
stos
xor
adcl
in
call
mov
adc
cmpsb
push
pop
xchg
xor
and
lods
iret
rcll
jp
out
fisubrl
mov
arpl
cmp
push
mov
and
inc
add
cmp
arpl
vxorps
pushf
sub
add
pop
xchg
inc
add
push
xchg
mov
jns
jno
adc
mov
cmc
ds
bound
xchg
aaa
lret
cmc
loop
jbe
das
cmp
jecxz
clc
adc
ja
lock
and
das
push
out
int
lods
dec
mov
ljmp
sub
in
jmp
fadds
adc
repz
insl
sti
jo
loop
rcl
add
jg
xor
pushl
shll
sub
dec
push
scas
cli
incl
cli
inc
repnz
cmpsl
mov
xorl
lcall
mov
pushl
cltd
roll
fwait
shl
adc
pop
fsubrs
lcall
das
popf
or
pusha
mov
jo
cmp
lret
jb
push
pushf
lcall
in
jne
sbb
decb
xor
or
xor
mov
cmp
icebp
cmp
lock
pop
adcb
add
mov
xchg
ljmp
int
call
std
mov
add
and
stos
das
mov
shlb
jg
push
pop
fldenv
mov
sahf
test
push
jbe
and
ja
adc
or
jle
push
pop
adc
push
jmp
push
orl
scas
push
or
jnp
lahf
frstor
mov
xor
xchg
jecxz
pushl
jecxz
adc
cmp
pop
pushl
pop
adc
test
lret
mov
shlb
adc
mov
xchg
mov
sahf
sub
les
daa
cld
lock
enter
jns
std
rorb
dec
negb
jp
xor
sahf
jnp
xor
aaa
aaa
shrl
cmp
jmp
mov
inc
fisttps
push
int3
in
push
push
cwtl
mov
icebp
xchg
ret
mov
decl
repnz
or
fcoms
jle
jb
fiadds
push
mov
mov
dec
jg
iret
add
xor
push
mov
push
out
push
dec
std
movsb
push
mov
cmp
stos
jp
inc
fstpl
and
insl
jl
push
jmp
test
call
push
jg
in
or
pushl
adcb
inc
fwait
aas
mov
xor
mov
fcmovu
adc
xchg
pop
adc
inc
push
sbb
movsl
dec
fsubrs
incl
aad
repnz
cs
pop
add
call
rcrl
fstpt
lcall
js
push
pop
dec
aad
incl
sbb
cmp
push
in
mov
outsb
inc
cwtl
nop
lahf
dec
stos
push
ret
jge
mov
push
repnz
pushf
jmp
jne
repnz
xor
jnp
xor
sub
das
pop
jns
ds
jno
clc
lahf
mov
test
jnp
xchg
rol
movsl
mov
mov
negl
mov
decb
cmp
test
fistl
cmc
test
shl
cmp
add
dec
dec
jecxz
call
cmp
mov
mov
hlt
or
push
js
mov
adc
aad
lahf
stos
lret
fdivl
sahf
cmpsb
xor
and
pop
mov
call
in
push
incl
out
or
adc
or
sbb
addb
out
sbb
js
insb
popf
scas
jmp
enter
rdmsr
lcall
popf
scas
mov
dec
push
out
pop
add
xchg
or
sub
fists
or
xor
cmp
cmpsb
roll
shlb
incl
cmpsl
addl
out
mov
ret
mov
lret
sbb
mov
ror
cmp
loopne
outsl
lcall
mov
mov
push
push
add
jbe
lea
ljmp
ja
movsb
jno
pop
mov
ds
inc
scas
push
cmp
push
ret
icebp
push
xchg
call
ret
decl
outsb
test
adc
out
push
nop
add
mov
into
xor
push
push
stc
roll
icebp
pushf
imul
insl
lea
jmp
jmp
pop
inc
lcall
data16
sub
lcall
pop
in
xchg
mov
das
stos
loop
loop
pop
lcall
imul
or
dec
daa
mov
aas
pushl
rol
jge
mov
xlat
mov
ret
inc
mov
and
sub
mov
mov
decl
stc
jl
jmp
mov
push
call
push
gs
add
std
incl
adc
sub
aad
popf
je
mulb
dec
pop
decl
sbb
call
cwtl
sbb
xchg
aam
mov
addr16
pop
fdivr
jge
mov
sbb
into
mov
and
jmp
mov
pop
cmp
outsb
movsb
stos
mov
jmp
pop
cld
push
jg
xchg
xchg
adc
pushl
xor
fiaddl
adc
outsb
int
into
adc
call
js
add
sar
xchg
ret
pop
mov
stos
test
iret
clc
jo
push
ret
ja
ja
pop
jmp
lods
add
call
mov
mov
mov
outsl
jbe
iret
inc
cmc
lahf
es
cmp
je
push
inc
jae
loopne
dec
mov
ljmp
inc
andl
imul
cmp
push
outsl
mov
xchg
and
addr16
int3
mov
data16
mov
icebp
rolb
ljmp
and
or
mov
push
movsl
call
test
dec
or
not
sbb
pop
pop
loopne
mov
gs
jmp
jno
loop
outsl
shrl
pusha
xchg
call
aaa
lods
out
idiv
insb
shlb
clc
shrl
test
add
add
xor
loopne
hlt
or
cli
dec
xchg
addr16
fbld
dec
inc
out
mov
pop
js
xchg
ds
lods
addr16
mov
mov
mov
cld
ljmp
outsb
jb
inc
bound
sti
jg
mov
rolb
stos
in
movsl
push
jg
test
cmp
jg
jno
sti
aaa
stos
pop
loope
mov
cmp
pop
notb
xor
mov
jmp
push
lret
icebp
push
mov
pop
xlat
jecxz
mov
incl
lcall
test
xor
pushl
insl
out
lret
movsl
imul
xlat
cmp
xchg
cmpsl
jg
pop
mov
xchg
in
clc
mov
inc
push
sahf
mov
sub
fdivrs
xchg
call
jae
add
push
out
add
and
decl
lcall
and
insb
inc
addl
cld
cmp
inc
push
aas
incl
loopne
rcl
test
stos
lret
cmpsb
xchg
orb
jl
bnd
test
mov
fsubl
scas
ljmp
roll
jg
inc
adc
sub
and
mov
mov
loope
and
lcall
sahf
bound
fsub
jno
xor
mov
jmp
mov
mov
cmpsl
ficompl
idiv
pop
inc
sub
push
imul
cmc
aad
pop
pop
mov
lea
repz
pop
xor
mov
scas
mov
and
inc
pop
mov
dec
daa
stos
mov
bound
mov
mov
orb
lahf
and
ljmp
xchg
stc
inc
shrl
mov
push
ja
or
mov
out
ljmp
das
cmp
jge
inc
dec
aad
jmp
out
push
inc
add
out
outsl
out
xor
mov
ljmp
ljmp
loop
ljmp
pop
stc
pop
xor
dec
and
pop
rcr
rorb
ffreep
push
gs
loopne
sbb
andl
aam
call
mov
mov
loopne
lods
push
je
push
pop
jno
loopne
push
adc
mov
pop
mov
mov
mov
test
mov
sbb
add
push
test
cs
outsl
jl
or
loopne
xchg
ja
mov
jbe
push
jne
test
in
in
mov
pusha
out
jmp
cmp
cmp
sbb
cmc
xchg
xor
fidivs
pop
push
cmp
sub
decl
cld
sub
inc
repnz
shrb
hlt
loopne
ljmp
mov
and
ljmp
fbstp
adc
pushl
mov
pushf
cli
pushl
incl
jno
mov
mov
rcl
decl
fstpl
into
outsl
cmp
jb
mov
jo
mov
rcl
stc
mov
outsl
je
xchg
add
xchg
lods
fidivl
decl
dec
mov
data16
jns
pop
aaa
mov
adc
cmp
xchg
mov
pop
imul
sub
addr16
insl
add
mov
dec
and
fiadds
xchg
sbb
lock
dec
popa
jnp
sbb
mov
mov
push
popa
decl
es
in
cltd
decl
xor
repz
call
push
ret
test
orb
jle
insb
sub
lods
popf
call
lahf
imulb
punpckhbw
enter
test
outsl
das
and
pop
adc
mov
xchg
rcrb
sub
dec
test
xor
into
decl
inc
std
aam
decw
sub
pop
pop
cwtl
add
xchg
pushl
inc
or
mov
lret
add
dec
push
aam
pop
mov
cmp
ljmp
xchg
decl
lret
add
push
frstor
mov
addr16
jge
sbb
lcall
mov
lds
mov
pop
mov
fwait
incl
adc
stos
lea
xor
lods
cmp
lea
mov
das
lock
incl
bound
mov
in
pop
xor
dec
imul
pushl
jb
jne
or
sbb
inc
xchg
fstpl
outsb
and
stos
push
push
dec
iret
jnp
test
mov
mov
cmp
outsl
pop
test
push
add
push
fldt
dec
dec
jmp
loope
ljmp
test
add
cmp
and
ljmp
je
aad
or
rolb
jb
jecxz
stc
bound
jge
cli
ret
scas
pop
int3
xchg
mov
call
mov
sub
rorl
xor
fwait
jb
addb
mov
movsb
dec
fs
fdecstp
mov
aad
test
shll
rclb
pop
cmc
je
dec
insl
or
cs
push
push
xchg
or
decl
and
aas
dec
and
stc
cwtl
or
into
sbbl
adc
lcallw
leave
popa
mov
push
mov
pop
cwtl
xchg
loopne
mov
je
ljmp
or
icebp
js
call
xchg
cmp
inc
fcomps
push
decl
mov
cmp
loopne
ret
inc
jmp
filds
out
fsubrs
sub
add
mov
adc
cmp
adc
lcall
and
or
dec
into
jmp
enter
xadd
incl
test
lcall
mov
push
and
in
call
cmpsb
leave
dec
shll
xchg
mov
ret
decl
mov
jmp
mov
jo
movsb
ljmp
idiv
xor
cwtl
sbb
incl
pop
daa
inc
incl
lock
pop
jl
push
inc
outsl
pusha
fnstenv
jmp
adc
shrb
test
in
stos
mov
inc
mov
lret
pushl
fucomi
pop
lcall
pop
and
sar
pop
aaa
in
xor
adc
ret
pop
insb
sti
jp
fwait
lcall
jns
mov
inc
das
js
lds
aaa
lods
cmp
call
or
and
jecxz
jae
cmpsl
jmp
jae
hlt
jg
push
cli
mov
mov
pop
int3
sahf
pushl
sbb
ret
aam
stos
and
jp
adc
push
outsb
shr
mov
cmovns
ret
or
pop
lea
mov
les
mov
repz
dec
loop
pop
inc
cmpsb
cmc
push
pushl
int
sbb
xchg
daa
pushl
fists
fisttps
icebp
mov
gs
in
push
fists
mov
cmp
pop
mov
cmp
push
jb
das
shlb
imul
out
sbb
mov
xchg
sbb
popf
adc
adc
pushl
mov
icebp
imul
popa
mov
cs
loop
jl
xchg
adc
push
dec
add
scas
mov
xchg
ds
push
or
xor
xor
ljmp
cwtl
inc
in
mov
addr16
faddp
mov
mov
mov
mov
xor
insl
mov
pop
in
imul
loop
adc
add
movsl
imul
xor
dec
jb
clc
xchg
mov
dec
cmp
cli
in
mov
decl
insb
mov
xchg
loope
decl
or
mov
add
jmp
pop
negb
shrb
jecxz
pop
imul
icebp
clc
mov
cli
dec
pop
icebp
dec
dec
test
push
and
or
in
sar
je
test
mov
incb
or
aaa
add
popa
call
fwait
mov
je
mov
fisubrl
leave
mov
mov
and
adc
xor
adc
test
sti
mov
je
xchg
push
lret
or
or
xor
mov
pop
inc
jmp
add
rcrl
ds
jg
xor
fs
dec
insl
cmp
incl
ret
lea
jecxz
inc
int3
ja
sti
call
xchg
loopne
pushl
cwtl
das
call
xor
dec
dec
test
std
ret
dec
xchg
push
in
popf
jno
mov
pop
push
xor
sahf
xchg
call
mov
mov
roll
jge
outsb
add
push
sbb
out
xorl
jb
cld
mov
adc
jl
divl
xchg
scas
lds
lret
xlat
cmpsl
xchg
push
shrb
push
out
loop
mov
ret
add
orl
js
std
in
xchg
xchg
fisubrs
xlat
iret
call
inc
pop
popa
mov
and
mov
mov
adc
sub
jl
jmp
leave
std
jecxz
sar
dec
mov
ud0
mov
or
call
int3
xchg
ss
inc
lcall
jge
sar
pop
scas
add
adc
insl
pop
xor
or
sbb
out
lods
push
push
add
push
test
inc
ja
enter
pushl
fcomps
fsubl
int
dec
clc
decb
pop
in
xchg
cli
mov
cs
call
mov
fld
push
and
ror
jb
decl
movsb
dec
test
stos
inc
scas
dec
dec
call
cli
roll
ljmp
ds
pop
push
jmp
xchg
inc
jnp
sub
sub
int
cmp
lods
mov
je
decl
pop
in
xor
jle
mov
imul
icebp
push
add
outsl
pop
bound
cld
push
ret
out
xor
inc
mov
add
incl
jl
std
mov
xchg
mov
cmpsl
mov
movsb
add
fadd
ret
cmp
movsl
push
dec
lock
ds
fnstcw
data16
jmp
jl
icebp
inc
mov
aam
push
push
decl
pop
iret
decl
mov
mov
jo
mov
and
xchg
out
sbb
outsl
cmp
roll
lret
pop
stc
into
fistps
pop
ret
mov
popf
xchg
je
lods
xor
mov
ds
jecxz
jo
loopne
mov
and
lcall
mov
sti
incl
es
adc
add
mov
jmp
adc
jge
jbe
xchg
mov
xor
out
xlat
sub
ret
push
cmp
mov
xor
mov
push
push
call
movsb
pushf
dec
adc
cmpsl
sub
std
sar
inc
pop
jbe
lcall
or
mov
xor
scas
incl
shl
push
and
xchg
jmp
xlat
sub
sti
mov
mov
shrl
xchg
loop
push
inc
adcl
cmp
stc
jne
popf
lret
push
aad
xorl
fs
cmp
push
js
fistpl
pop
pushf
into
popf
fisubrs
pop
lcall
inc
roll
movsl
pop
roll
mov
cmp
cmc
mov
cmp
shlb
xchg
pop
mov
jno
lret
sub
stos
call
mov
xor
xchg
lret
outsl
sbb
or
jge
nop
add
icebp
dec
add
push
fcoms
loope
jl
fldl
int
mov
aam
iret
outsl
sub
push
aam
fildll
ja
mov
push
repz
pop
stos
push
and
xchg
sti
stos
mov
jb
popf
jae
mov
ds
pop
imul
mov
lea
mov
cmp
leave
and
call
jmp
xchg
lea
mov
dec
into
dec
push
push
jmp
jg
mov
jmp
inc
and
test
jg
leave
sbb
fistps
movsl
dec
xchg
sub
mov
incl
jmp
dec
psrlw
daa
xchg
push
stc
fsts
incl
pop
gs
aam
hlt
lahf
dec
fs
insb
testl
mov
push
jns
mov
das
outsl
jns
pop
lcall
xlat
lea
add
in
dec
xlat
scas
mov
mov
sbb
jbe
ss
push
fsubrs
out
xlat
jmp
sbb
iret
xor
dec
jmp
in
cmc
les
xor
decl
repz
pop
pop
cmp
mov
jno
xor
rcl
sub
mov
loope,pn
add
in
adc
std
fmulp
inc
jl
mov
sub
pop
call
sarb
outsl
sub
push
aad
push
cmp
lret
and
sbb
or
loop
pop
daa
mov
jmp
and
sbb
mov
pop
outsl
push
test
jle
pop
mov
repnz
dec
push
or
push
lods
mov
add
cld
lock
das
adc
test
es
scas
aaa
cmp
mov
adc
test
jne
cmp
or
mov
jnp
decl
fwait
in
sbb
mov
dec
xchg
xor
pop
movsb
cmpsl
mov
and
in
divb
mov
pop
mov
cmp
jmp
mov
or
cmpsl
xor
imul
pop
xor
push
lcall
cld
sbb
stos
scas
aam
sbbl
sub
hlt
pop
movsl
pop
insb
ss
lea
or
mov
stos
xchg
call
mov
add
loope
loop
mov
mov
mov
ret
jg
lock
loope
jmp
sub
popa
push
test
decl
data16
jge
ljmp
push
cld
lods
sbb
test
js
cwtl
or
vorps
or
and
into
cli
hlt
decl
push
xchg
mov
lcall
sbb
mov
xor
lahf
adc
je
push
sbbb
les
mov
pop
pop
add
cmp
lret
mov
inc
pop
aad
push
pop
pop
dec
mov
daa
mov
shl
inc
mov
xchg
arpl
fucomp
adc
outsl
lock
mov
leave
and
sbb
call
bound
in
xor
xor
push
pushl
dec
cmp
xor
test
inc
leave
pop
out
addr16
into
inc
popa
xchg
decb
fdivr
push
repz
je
mov
test
outsl
jg
lcall
mov
push
lret
cmp
sbb
sbb
dec
incl
nop
insb
mov
xchg
leave
aas
clc
jle
lcall
inc
fldt
shl
push
jmp
push
mov
jb
std
shlb
jmp
mov
loop
jmp
ds
int
in
lcall
bound
clc
cmp
lock
outsl
cmp
sbb
dec
push
daa
adc
clc
push
or
sbb
jge
sub
jg
ficoms
xchg
stos
push
shlb
rol
inc
pop
out
lcall
dec
cmp
sub
lcall
popf
aaa
bound
fiadds
or
fdivr
sbb
xor
lea
aad
sbb
idivl
mov
sar
xchg
shrb
mov
jns
into
loopne
adc
ss
iret
jg
enter
mov
jae
mov
jp
pop
dec
filds
add
jo
dec
pop
aaa
mov
sbb
or
inc
lcall
jge
or
cld
push
cld
jmp
jo
xor
add
imul
inc
ds
clc
test
fildll
fiadds
add
add
add
add
incl
