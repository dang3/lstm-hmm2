repnz
mov
movsl
mov
nop
fbstp
sbb
jno
mov
addr16
std
sub
and
out
mov
adc
mov
daa
cmp
or
adc
jl
enter
scas
loop
cmp
sub
or
jg
je
insl
xor
jge
jb
mov
inc
push
mov
adcl
jae
pop
repnz
mov
dec
pop
cmpsb
xchg
cld
jecxz
dec
add
repnz
movsl
movsb
mov
cmp
pop
addb
sub
and
xor
sbb
mov
push
pop
inc
pop
mov
dec
pop
pop
and
std
shll
xchg
jmp
adc
int3
cmp
leave
test
sbb
mov
xchg
mov
scas
into
lods
jge
adc
fs
push
stos
mov
clc
arpl
je
imul
sti
add
out
mov
xor
push
out
sbb
fdivs
in
cmpsb
lret
xor
test
mov
dec
dec
int
dec
and
dec
loopne
ja
or
pop
inc
repz
adc
repz
mov
mov
cmp
lods
sti
dec
into
fcmovu
gs
mov
dec
lds
or
in
pop
xchg
pop
pushf
outsb
inc
add
or
lock
adc
jg
jne
lcall
jne
and
inc
dec
sahf
mov
sti
fcomps
mov
push
pop
xchg
cmp
ss
push
cltd
call
sahf
cmp
movb
or
movsl
shll
inc
dec
lahf
ss
mov
sbb
sbb
lahf
shrb
sbb
call
cmp
add
xchg
int3
push
ds
sbb
fistpl
push
pop
fwait
bound
lea
jae
and
lds
fwait
das
test
dec
mov
push
ret
jp
and
adc
mov
add
jae
pop
push
daa
xlat
push
aad
and
mov
push
sub
push
sbb
mov
shlb
outsl
out
jl
subl
test
sbb
cmp
stc
mov
cld
in
daa
mov
into
shll
fyl2xp1
add
fdiv
jns
xchg
lods
xchg
pushf
test
out
xchg
outsb
out
gs
jnp
inc
sbb
or
dec
pusha
js
xchg
jecxz
pop
adc
adc
add
dec
sbb
or
stos
cmp
dec
cmp
mov
cmp
shl
or
mov
lods
mov
cmpsb
mov
fldenv
dec
or
lods
cmp
ljmp
repz
and
sbb
test
mov
dec
mov
fwait
push
cmp
fwait
cwtl
fcoml
push
adcl
fwait
mov
roll
jle
ss
sahf
xchg
xchg
jbe
jle
in
xchg
jecxz
push
aas
mov
mov
loop
scas
iret
inc
sbb
adc
sbb
call
push
repz
lock
ret
lods
push
sub
inc
and
inc
cld
lcall
push
in
cmp
or
sti
sbb
lahf
mov
lcall
sarb
xor
push
xchg
sti
adc
popf
inc
adc
mov
add
fiadds
mov
adc
lcall
pop
out
movb
cli
xor
rcrb
jecxz
into
mov
repz
xchg
pop
in
pop
sub
dec
mov
xchg
cmp
iret
jns
mov
sub
pop
cmp
ret
imul
sub
out
lahf
jp
adc
xor
pop
jmp
bound
and
adc
aad
mov
daa
push
or
push
adcl
jg
outsl
lret
push
aaa
jae
inc
ds
in
lea
mov
push
xchg
and
mov
push
mov
pop
in
xchg
clc
sbb
outsl
and
push
mov
lods
add
fidivrl
pop
pop
mov
ret
inc
or
cmp
pushl
outsb
cli
dec
push
or
seto
mov
adc
pop
pusha
int3
xchg
adc
stos
xchg
jecxz
or
enter
gs
outsl
fs
gs
imul
add
xchg
or
mov
fisubrl
in
pop
arpl
sbb
xor
scas
jl
inc
into
in
xor
stos
and
sub
inc
mov
mov
jecxz
xchg
jle
xchg
pusha
push
jns
out
mov
js
or
sahf
lret
xchg
outsb
pop
cli
sahf
jecxz
nop
in
mov
lods
and
push
cmp
sbb
inc
jns
cmp
lods
popf
iret
imul
in
test
pop
cwtl
cmp
sub
outsb
pop
xchg
jecxz
popa
cs
je
or
mov
push
add
inc
and
mov
lea
jmp
lea
jne
lahf
mov
pusha
pushf
lea
jmp
push
mov
push
mov
call
jmp
clc
jmp
popf
cpuid
nop
pushf
jmp
call
lret
mov
bound
test
jbe
int3
or
ljmp
roll
pop
push
cmp
jne
enter
pop
in
adcb
mov
and
movsb
ss
lods
std
sarl
cld
fmull
adcb
jl
add
mov
into
mov
call
mov
jnp
stos
arpl
mov
sbb
mov
jb
cmc
push
cmpsb
cmpsl
sbb
inc
stos
cmp
sub
add
pop
popaw
leave
or
in
push
in
mov
fs
movsl
outsb
arpl
mov
push
mov
insb
fldenv
sbb
adc
sbb
imul
inc
add
jmp
pop
xchg
sti
lret
jmp
mov
ss
mov
adcl
faddl
aas
das
add
dec
add
xchg
push
sbb
scas
inc
jno
outsb
movsb
loopne
mov
into
mov
lock
std
mov
adc
enter
jno
pop
or
xchg
xchg
inc
xchg
out
setge
mov
in
and
jg
clc
cld
sbb
out
scas
mov
jp
adc
js
push
mov
arpl
push
inc
in
into
les
jb
mov
movsb
sbb
xor
pop
mov
xchg
inc
cmp
jp
add
mov
stc
rcl
mov
in
jecxz
cli
movsb
sub
test
lock
enter
clc
std
cmp
test
pop
push
pop
adc
mov
daa
xchg
rcrl
push
repnz
cmp
sbb
insb
xor
addb
mov
push
or
mov
bound
add
jmp
in
or
push
cs
gs
xor
sahf
mov
xchg
das
mov
xchg
jg
xlat
gs
lds
shlb
add
mov
adc
nop
loop
cwtl
and
rclb
jns
jl
add
cld
inc
push
pop
sti
dec
insl
aad
xchg
ror
icebp
popf
cs
insb
jae
xchg
rcl
push
int
enter
push
xchg
lret
lret
sub
xchg
pop
mov
adc
sti
adc
test
push
xchg
test
dec
jecxz
mov
add
or
mov
jb
add
or
dec
jp
jecxz
jmp
pop
test
cmc
jp
mov
gs
push
subb
sbb
jp
rclb
lods
scas
and
outsb
and
test
pushf
enter
loope
cltd
mov
cli
inc
add
and
decb
jge
mov
push
jbe
adc
out
imull
pop
adc
add
lds
add
push
push
push
das
cmp
mov
test
sbb
inc
or
cmp
sub
aas
mov
add
inc
mov
es
push
icebp
cld
lods
jo
xlat
pop
fbstp
pop
push
inc
and
lcall
andl
iret
popf
testl
inc
movb
out
add
fmull
sub
call
jecxz
test
rcrb
lea
call
push
pushf
mov
lea
jae
pusha
mov
not
inc
seto
pushf
mov
call
call
rol
pushf
dec
jmp
or
shll
xor
xchg
jae
shlb
xchg
or
or
int
mov
adc
roll
lods
call
mov
aas
or
dec
stos
xchg
xor
adc
enter
nop
mov
xchg
es
jecxz
cwtl
pop
jmp
push
push
cs
insb
add
xor
pusha
pushf
lea
call
jmp
insl
cmpsb
gs
addr16
gs
aaa
pusha
mov
jo
mov
pushf
inc
pushf
movb
mov
lea
jmp
movl
pushf
movb
lea
jmp
pop
daa
bswap
sbb
or
movsb
lds
loope
pop
jne
clc
push
xchg
push
xor
cmp
scas
jo
xor
adc
ja
test
scas
mov
in
mov
xchg
stc
mov
mov
lea
fisubs
adc
into
loop
xchg
rcr
jbe
pop
push
xchg
cmp
or
pushl
call
mov
lods
dec
inc
stos
jns
fisubrs
loope
sbb
pop
outsb
shrb
fstp
movsb
cmp
lahf
iret
cmpsl
mov
xor
xchg
jecxz
mov
imul
stc
movw
bt
add
movb
pushf
lea
jmp
call
or
pop
inc
arpl
cmpsb
popa
cmp
adc
addr16
mov
xchg
aad
adc
les
loope
ljmp
in
jne
iret
shrl
stos
jmp
pop
repnz
rcl
push
dec
jbe
add
inc
fisttpll
fadd
fstl
lds
jge
pop
push
iret
adc
mov
xchg
jecxz
dec
ss
push
pushl
popl
push
push
pushl
ret
sbb
inc
faddl
lcall
mov
dec
sub
hlt
fsubr
je
xor
ja
push
stos
pop
dec
cli
cmc
ror
clc
pushf
ss
jle
and
mull
or
push
aas
mov
shl
arpl
or
inc
mov
repnz
mov
mov
cmp
pop
mov
mov
daa
sub
out
aad
adc
dec
sbb
mov
int3
mov
fwait
lret
leave
mov
sub
jnp
cmp
shlb
arpl
add
xor
xor
sbb
mov
loop
idiv
and
outsb
clc
es
sbb
shrb
out
call
js
outsb
xorl
in
fwait
dec
movsb
xchg
rcll
out
and
inc
sarb
dec
insb
dec
nop
inc
scas
pop
movsl
xchg
jge
or
pop
cmp
lahf
mov
add
jmp
jl
repnz
xor
and
jno
dec
mov
aas
jge
sbb
cmpsb
into
push
les
mov
pushf
cmpsb
dec
flds
test
lahf
data16
scas
jl
or
dec
jae
dec
fnstsw
jl
int
in
pop
lret
jo
test
rclb
sti
callw
mov
fisubrl
sbb
sbb
out
xchg
negb
out
push
inc
cmp
lret
pop
mov
pop
int
xor
or
jno
push
adcb
loop
dec
push
movsb
insl
sub
gs
jo
add
aaa
sbb
adc
pop
pop
mov
ret
dec
scas
cmpsl
lock
notb
mov
and
push
push
add
int
je
das
adc
fildl
out
jb
fwait
xchg
or
lret
adc
mov
cmp
jle
notl
jp
aaa
sbb
pop
mov
cmp
pusha
test
testl
mov
int
jmp
lods
lock
inc
mov
cmc
out
cmp
and
jbe
and
sub
jp
xor
sub
cltd
jb
add
scas
sbb
dec
push
cmpsl
push
inc
sub
pop
pop
scas
jne
xchg
mov
sub
jno
or
cmp
sub
pop
in
test
fldt
fildl
mov
leave
mov
das
or
adc
testb
mov
or
fs
rolb
push
xchg
inc
mov
mov
push
add
cli
adc
adc
adc
add
pusha
mov
incl
cmp
shlb
inc
push
jl
inc
or
fcomps
xlat
push
cmp
push
ds
mov
mov
mov
nop
xlat
dec
mov
mov
push
cmpsl
arpl
xchg
out
and
push
lret
into
push
popa
pop
or
xchg
cmp
inc
adc
dec
std
and
dec
sub
push
arpl
ret
ficoms
call
add
faddl
cmpsb
in
adc
xchg
mov
shll
dec
pop
mov
shll
leave
out
push
push
jl
inc
push
jnp
lea
push
gs
scas
inc
sti
jno
jmp
jge
sub
insb
dec
enter
sub
outsl
enter
js
imul
cld
dec
adc
data16
adc
rorl
add
mov
push
cmp
lret
les
inc
jg
negl
stos
iret
imul
mov
or
popa
jne
adc
cmp
js
sbb
or
pop
in
in
add
data16
cmp
in
sbb
fs
jmp
lea
bswap
movzbw
mov
call
push
pushf
mov
push
pusha
lea
jmp
xor
pushf
push
jmp
pushf
lea
jbe
movsbw
mov
sub
bts
add
neg
or
shl
mov
bsr
btr
add
bswap
shld
pushf
movl
xor
sbb
ror
mov
sub
cmp
pusha
pushf
bt
cmp
call
or
movsbw
mov
cmc
bsf
pushf
rcr
mov
pop
test
btr
mov
pusha
movb
pusha
push
or
push
call
pop
mov
pushf
push
pushl
pushl
pushl
ret
pop
mov
adc
inc
pop
icebp
sbb
stc
add
mov
or
ret
inc
xor
push
cmp
sbb
nop
mov
mov
jmp
inc
lea
and
mov
cltd
dec
out
jmp
xchg
jecxz
ret
mov
insb
js
rorl
cld
adc
mov
inc
xlat
out
add
sbb
ja
xchg
insl
nop
xor
adc
push
push
cmp
out
aam
mov
add
push
sbb
sub
es
mov
gs
xor
shll
jp
jl
pop
lods
mov
rcrb
stos
xchg
pop
mov
pop
fwait
sbb
fists
pop
imul
cmp
jb
mov
sbb
cmp
sub
push
xor
push
xchg
push
lahf
ret
stos
sahf
out
pop
es
sub
jbe
pop
xchg
sub
lahf
dec
orl
lret
sbb
rcll
lahf
inc
sub
mov
imul
jae
push
je
out
imul
mov
jb
jnp
adc
sarl
nop
cs
aaa
lods
lcall
xchg
pop
lret
add
mov
jns
jb
add
sti
xchg
fwait
out
pop
cltd
lahf
adc
mov
mov
mov
pop
pop
xchg
xor
mov
lcall
xor
divl
sub
lcall
sti
int
xlat
mov
sbb
xor
icebp
cmc
out
sti
lret
sub
push
pop
sbb
dec
cmp
and
sbb
add
pop
fnstsw
pop
pop
cmpsb
push
out
inc
cs
repz
push
pop
stos
aas
retw
cwtl
sbb
or
xor
andb
stos
sbb
out
fwait
scas
mov
mov
xchg
pop
xchg
sbb
stc
mov
mull
fnstcw
repz
cmp
mov
dec
cmpsb
lods
lea
pop
sub
sub
sub
and
idiv
xchg
into
repz
or
sti
inc
mov
pop
jp
mov
push
pushf
dec
arpl
sti
push
cmp
test
or
jbe
pop
jl
cmc
xchg
fwait
sub
lock
lds
add
xor
scas
jmp
sub
sbb
inc
fisubs
xchg
mov
sub
cmpsl
ret
cmp
sbb
pop
mov
pop
cmp
leave
sbb
mov
icebp
fldcw
cmc
push
lods
and
or
inc
test
xchg
mov
negb
enter
jnp
xorl
mov
cmpl
sbb
inc
stos
xchg
sbb
cs
adc
sub
out
sbb
cmp
mov
fwait
inc
test
lea
cmp
ja,pt
and
sbb
outsl
fwait
xchg
mov
jbe
outsl
and
daa
aaa
jnp
sbb
jmp
adc
cwtl
lcall
mov
inc
mov
lock
aaa
mov
stos
das
add
and
mov
cmc
inc
aad
addr16
outsb
mov
int
mov
dec
outsb
mov
or
jp
fisubs
scas
xor
push
push
cmp
jae
sub
loopne
inc
push
out
jg
xor
xorb
fldt
push
inc
inc
push
push
add
mov
pop
arpl
sti
push
xchg
xchg
and
inc
push
mov
cmp
push
push
push
fwait
push
inc
lods
inc
jbe
andb
or
shl
scas
ffreep
jp
je
xchg
mov
or
nop
movsl
ret
jo
popa
mov
sub
mov
cs
mov
cwtl
inc
dec
pop
mov
pop
test
jnp
or
mov
inc
sbb
mov
repz
push
push
or
cmp
jmp
filds
fcmovnb
cwtl
cli
adc
outsl
jae
adc
sub
iret
cmpsb
xchg
jnp
and
scas
push
sbb
imul
jae
cmp
daa
cmp
adc
gs
sub
leave
lret
cmp
jp
orl
mov
ljmp
hlt
jnp
outsl
mov
fsub
push
repz
incl
aaa
jo
mov
hlt
sbb
push
ret
jo
pop
dec
jnp
and
adc
pop
cmp
movsb
jle
stos
mov
mov
xor
pop
sbb
cmc
icebp
adc
add
pop
lcall
xchg
pop
xlat
add
loope
pop
call
cli
popa
pushf
dec
xchg
repnz
xchg
push
out
dec
push
sahf
test
and
pcmpgtw
push
mov
pop
leave
or
addr16
outsl
mov
cwtl
subl
ljmp
push
add
pop
mov
cmp
inc
pop
adc
add
pop
pop
imul
cli
fdivrs
ljmp
pop
fists
mov
pop
dec
cmpsb
adc
dec
push
pop
adc
pop
pop
out
mov
fdivrl
inc
ret
dec
jecxz
pop
imul
inc
test
rcrb
out
ds
je
add
idivl
sub
in
std
xor
push
dec
lds
js
cwtl
stc
xchg
pop
test
in
pop
or
popf
or
sbb
mov
pop
pop
into
and
dec
arpl
adc
cmp
pop
movsb
and
and
pop
jge
in
ret
imul
mull
sbb
les
icebp
mov
popl
dec
sti
sbb
sub
xchg
fcom
cwtl
jmp
dec
cmp
faddl
out
push
mov
mov
pusha
dec
cmp
loope
dec
xchg
xor
adc
dec
pusha
call
cmp
or
imul
or
mov
push
adc
cli
pop
pcmpeqd
jnp
jecxz
call
popf
fwait
data16
cmc
pop
lahf
rol
in
push
cmp
pop
cmpsb
push
fiaddl
pop
pop
mov
adc
pop
mov
sbb
ja
popf
sub
lods
shll
popf
fmuls
scas
and
fildll
pop
fimuls
inc
or
pop
pop
out
cmpsb
loopne
scas
mov
pop
mov
nop
pop
stc
pop
outsb
mov
pop
pop
mov
dec
mov
aas
repnz
sahf
push
bound
lea
fcoms
pop
pop
cld
mov
cltd
inc
and
jae
pop
sub
adc
ret
xchg
jge
ss
daa
sub
pop
bnd
sbb
jno
pop
inc
pop
and
aas
mov
mov
pop
cmp
lea
aam
dec
xor
pop
mov
iret
xlat
pop
fisubs
cmp
push
ret
jnp
cltd
icebp
pop
in
mov
mov
jecxz
push
fcompl
jo
pop
mov
jbe
mov
push
mov
cmp
andl
or
mov
cmc
movswl
jmp
orb
pop
pop
inc
outsl
jnp
loope
pop
std
in
mov
and
sbb
pop
mov
jecxz
sub
mulb
out
loop
cmp
xchg
scas
pushf
pop
rcll
int
dec
pop
aaa
iret
xchg
stos
sub
mov
cmp
cld
pop
ss
movsl
sub
loopne
mov
mov
inc
pop
jb
bound
mulps
add
push
jnp
xor
mov
fistps
stos
sti
and
shr
xchg
mov
scas
sar
pushf
pop
sub
pop
pop
enter
gs
daa
je
cs
repz
cmp
aam
mov
jnp
mov
cld
js
dec
lret
cmp
pushf
push
jno
out
lds
sti
pop
adc
loop
fdivrs
sbb
mov
fsubrs
es
pop
shrb
xchg
mov
sbb
add
insl
lds
subb
jmp
popf
mov
dec
jg
adc
out
and
stos
test
xchg
adc
sets
das
es
scas
les
out
cmp
xor
clc
xor
pop
insb
jmp
mov
negb
repnz
fidivs
sub
pop
out
cld
xor
inc
jl
dec
jo
fisubl
add
push
mov
xchg
xchg
neg
mov
mov
push
int3
sbb
sub
ss
pop
inc
ljmp
out
or
mov
mov
loopne
sub
lock
arpl
or
hlt
xchg
lret
jbe
pushf
repz
pop
fcomps
clc
inc
stos
mov
loop
cs
loopne
mov
aam
repnz
hlt
je
inc
ss
sub
ret
push
adc
js
dec
jbe
int
cmc
sub
in
mov
leave
shr
aaa
push
pusha
ds
divl
arpl
lods
mov
test
or
test
sbb
fildll
pushf
add
js
xchg
hlt
cld
fildl
sarl
pop
cld
or
pop
push
push
gs
pop
mov
cmc
pop
pop
pop
xchg
int
xchg
repz
dec
pop
jnp
sbb
scas
add
pop
mov
fistpl
in
adc
call
je
mov
pop
xor
out
pop
push
jo
inc
dec
dec
mov
bound
test
or
pop
sbb
dec
dec
add
jb
xchg
xor
clc
sub
icebp
scas
addl
insb
xchg
mov
sbb
stos
sub
lahf
les
jno
pop
repnz
jg
out
pop
or
pushf
aas
lds
push
mov
mov
xlat
int
xchg
fdivr
fidivs
xor
sbb
sub
push
dec
adc
inc
les
stos
pop
jbe
inc
int
mov
lods
add
insl
loop
mov
rol
cmc
and
imul
jb
xor
ficompl
jne
dec
js
lods
stc
push
out
test
clc
icebp
mov
scas
scas
sbb
xchg
inc
jl
sub
stc
rcrb
pop
int
jb
mov
pop
popf
dec
jmp
mov
xor
sbb
nop
pop
push
int
movsb
mov
or
lods
pop
push
inc
js
sbb
and
cli
or
lret
neg
pop
inc
push
push
cmp
jl
outsb
fcmovb
pop
in
in
sbb
and
mov
jae
xchg
xchg
hlt
ss
push
andb
inc
xor
cs
push
sbb
xchg
mov
pushf
ds
xor
pop
gs
rorb
sbb
das
push
mov
outsb
cmp
and
pop
adc
or
mov
xor
adc
lock
cli
jo
gs
iret
in
jge
fistpll
pop
vpminub
sbb
dec
xchg
rcr
ret
jbe
stc
mov
lret
icebp
mov
xchg
test
sbb
push
sub
ret
push
jmp
sbb
xchg
imul
in
pop
mov
inc
clc
jo
test
add
lods
push
pop
mov
sub
mov
push
movsb
jno
bound
mov
mov
cmp
sti
pushf
out
jmp
cld
mov
addr16
jb
outsl
in
push
pusha
or
outsb
pop
lock
fcomps
pop
scas
repnz
pop
loop
mov
insl
pop
sbb
jno
and
fbld
cld
mov
lods
mov
fiaddl
shr
mov
cmp
mov
movsb
pop
jae
sub
mov
pop
xor
insb
mov
xchg
aas
push
and
pop
adc
aam
fwait
popf
pop
js
mov
lcall
lock
pop
test
lea
jmp
mov
rcrb
xchg
bound
mov
sbb
push
jne
pop
and
aad
sub
jecxz
dec
hlt
pop
adc
mov
or
push
add
xchg
pop
pop
adc
sbb
icebp
and
xchg
pop
movsl
imul
pop
ret
adc
push
inc
insl
jo
hlt
add
lcall
test
mov
jg
movsb
imul
cmp
mov
sub
mov
jns
jl
sub
mov
icebp
mov
lcall
insl
sub
push
cmp
pop
pop
movl
sbb
lea
dec
pop
jecxz
cs
sbb
lret
pop
mov
outsl
sub
inc
les
or
push
sbb
xchg
movsb
pop
jl
mov
push
sub
in
mov
in
sbb
xor
pop
mov
sbb
ljmp
aam
loope
adc
lds
lret
push
icebp
popa
sahf
rorl
mov
pop
adc
and
int
ljmp
ficoml
fcoml
in
pop
inc
bound
loopne
lds
sbbb
fiadds
lahf
jmp
pop
and
pop
sbb
loope
vcvtss2sd
xchg
pop
dec
mov
imul
jae
mov
mov
push
mov
cld
mov
mov
pop
inc
push
cwtl
ja
pop
jae
sar
pop
repnz
mov
or
sub
fistps
jecxz
addr16
sahf
sub
scas
outsl
dec
popf
push
or
inc
mov
stos
xchg
or
adc
test
adc
rolb
lahf
mov
and
add
pop
movsb
insb
sbb
pop
divl
in
adc
jle
push
stos
dec
bound
movsb
test
ret
icebp
xor
pop
xchg
cwtl
add
jge
lahf
fisubs
and
pop
inc
jb
mov
mov
pop
pop
leave
cltd
test
test
push
and
adc
or
dec
leave
mov
inc
pop
cmp
ja
stos
xor
pop
hlt
xor
ror
lcall
pop
fwait
daa
je
dec
pop
mov
cwtl
xchg
popa
icebp
inc
adc
or
int
inc
mov
pop
mov
dec
push
adc
pop
mov
in
add
cs
js
cmpsb
movsb
pop
push
pop
dec
lret
incb
cmp
pop
repz
lret
inc
cmp
cwtl
lods
push
pop
js
xorb
sub
into
mov
cmp
int3
sbb
or
lods
popa
adc
adc
jge
scas
iret
jns
aas
dec
stos
cmp
push
mov
shrl
es
xchg
sbb
std
jbe
or
outsb
mov
pop
and
in
aam
inc
test
lcall
mov
pop
clc
or
pop
les
testl
in
div
mov
pop
lock
insb
ror
pop
or
jb
mov
in
push
adc
push
pop
xlat
xchg
push
faddl
aas
jecxz
lret
pusha
popa
mov
inc
fists
pop
ss
loope
cmp
pop
push
add
pop
ljmp
add
fldl
xchg
mov
and
push
lahf
dec
push
ret
sbb
sub
pop
inc
sbbl
mov
jbe
inc
mov
xchg
pop
out
rcl
stos
lods
test
pop
mov
scas
xlat
pop
pop
sub
or
subb
mov
aaa
pop
push
cmpsl
outsl
dec
mov
nop
mul
mov
xor
fcoms
mov
fwait
lock
lret
xchg
fcmove
leave
sahf
pop
push
mov
or
pop
ds
cmp
pop
add
lahf
ficomps
or
outsb
pop
mov
xor
lcall
int
mov
fs
add
loop
das
pop
adc
mov
and
jno
xchg
or
add
addr16
pop
xchg
js
cmp
sub
clc
and
pop
jae
mov
das
mov
outsb
sbb
pop
push
xchg
push
pop
scas
dec
aam
sbb
mov
cwtl
pop
call
xchg
popa
lds
push
xor
jmp
inc
aas
aam
mov
testb
or
add
pop
mov
push
add
scas
or
mov
insb
sub
jne
je
dec
mov
pop
mov
cmp
scas
cwtl
jno
test
push
adc
pop
js
mov
ficomps
xor
enter
add
shlb
mov
xor
pop
test
mov
pop
xor
sub
ljmp
and
into
mov
inc
mov
stos
mov
int
xchg
cltd
ret
prefetcht0
pop
cmc
or
or
in
mov
out
pop
push
sbb
mov
pop
iret
or
cli
and
mov
js
jp
cltd
in
push
inc
add
cmp
xlat
pop
pop
lcall
mov
rcr
fmulp
dec
sub
ds
and
xorl
xor
sub
cltd
scas
mov
jmp
hlt
lret
add
cmp
mov
sub
and
pop
adc
or
inc
ds
inc
js
mov
pushf
int
cmp
dec
lret
sbb
cmp
scas
in
pop
xchg
lods
test
leave
cmp
out
sar
fnstcw
pop
enter
sub
mov
inc
shrl
les
ret
push
leave
mov
imul
es
fdivr
in
pop
mov
subb
cwtl
pop
aaa
fstp
pop
mov
dec
scas
push
test
pop
mov
xchg
pop
roll
sbbl
bound
pop
lahf
es
ss
repz
fldl
mov
aam
dec
sub
pop
mov
lods
sbb
push
popa
add
or
cwtl
push
lcall
inc
sub
pop
adc
push
lahf
dec
jbe
sbb
cld
fisubs
mov
inc
call
pop
call
lret
pop
arpl
pop
xor
mov
pop
jnp
pop
push
add
adc
mov
inc
aad
jg
insb
mov
das
jl
and
arpl
inc
cmp
add
cld
dec
mov
fdivl
rep
add
push
jmp
daa
jge
dec
and
loopne
enter
subl
jge
enter
fisubl
je
dec
adc
out
cmp
lods
push
add
cmpb
push
outsb
mov
pop
adc
mov
fsubs
pop
shrb
xor
adc
pop
leave
pop
mov
jecxz
in
stc
push
push
clc
fucomi
aad
pop
push
cs
pop
sub
mov
mov
lahf
es
xchg
jno
dec
cmp
in
cmpsl
out
fcoml
mov
scas
leave
lea
test
mov
rorb
cmc
movsl
pop
test
sbb
ffreep
fwait
jg
jnp
xor
mov
mov
dec
rcrb
cmp
sub
cmpl
fiadds
lahf
sbb
pop
enter
fldcw
sbb
sub
pop
inc
push
sbb
cltd
movl
pushf
cs
adc
pop
mov
daa
imul
pop
enter
bnd
pop
and
nop
pop
fwait
pop
je
ret
jg
ss
or
xchg
push
pop
int
popf
loope
pop
notl
inc
pop
fidivs
test
ss
rclb
ret
jnp
add
mov
mov
push
ds
jle
fwait
aaa
stos
pop
pop
in
movsb
aam
shlb
icebp
pop
xchg
mov
cmp
or
ficompl
jge
data16
jmp
mov
xor
adc
pop
dec
popa
cld
xor
stos
cmp
dec
insl
imul
dec
scas
adc
mov
push
mov
and
hlt
pop
out
imul
mov
push
xor
mov
add
mov
stos
inc
mov
and
shl
xchg
out
mov
lret
cmp
mov
add
cmp
xchg
jnp
pop
scas
clc
push
sub
or
mov
cwtl
bnd
mov
pop
nop
scas
stos
dec
inc
sub
jle
add
lods
sahf
lahf
cmp
xchg
and
sbb
adc
xchg
popa
pop
inc
jg
js
cmp
sub
pop
and
and
call
pop
mov
insb
pop
and
dec
mov
call
dec
fsubs
shll
pop
xchg
xor
sbb
xchg
adc
mov
daa
scas
mov
movsl
lds
mov
mov
fnstsw
aas
and
test
dec
add
jl
in
push
cmp
js
dec
lods
shrb
pop
and
outsb
fcmovne
xor
jle
push
jge
mov
icebp
push
cli
jno
inc
adcb
mov
pop
inc
in
sarb
jo
lcall
cmc
pop
mov
out
or
mov
cmp
xor
sbb
mov
pop
sahf
jp
mov
repz
and
pusha
cmp
dec
pop
pop
je
int
sbbl
outsb
cmp
fadds
data16
in
not
sahf
pop
pop
inc
jl
ret
xor
pop
and
pop
dec
inc
fwait
or
incb
ret
repnz
pop
shlb
dec
loopne
imul
xor
pop
data16
push
mov
fsubr
pop
sbb
pop
push
and
imul
int
pop
pop
sub
dec
imul
add
push
insl
aas
sbb
mov
test
fnstenv
mov
sahf
ficompl
jo
dec
mov
lea
mov
outsb
imul
push
ret
sbb
and
inc
or
sbb
push
stos
pusha
test
out
jb
pop
lds
pop
insb
in
mov
push
jg
cwtl
pop
mov
adc
pop
and
in
sar
and
jecxz
testl
mov
sub
sub
adc
fld
cltd
loope
scas
pop
in
popf
xchg
lahf
fiaddl
cmpb
sub
stos
jle
sub
and
cmp
mov
dec
sti
jae
outsb
sbb
pop
push
mov
mov
cmp
pop
aaa
imul
lods
or
xchg
es
mov
scas
inc
jl
outsl
js
cmp
push
rcrl
data16
vmulps
fnstcw
out
adc
or
imul
enter
stos
lahf
popa
jo
pusha
fsubs
pop
dec
js
je
rclb
pop
cmc
icebp
mov
test
shll
add
das
mov
sbb
lcall
sub
cli
loope
test
dec
cmpb
pop
cmp
in
mov
dec
lahf
fldl2e
cmpsl
jmp
sub
pop
fdivr
sub
inc
insb
cltd
fildll
cmpl
in
push
je
cmp
clc
fists
pop
clc
mov
and
sbbl
sub
push
cmp
xchg
or
cmp
xchg
pop
leave
cmc
icebp
movsl
mov
jmp
jnp
shll
pop
jo
and
lret
xchg
mov
out
and
pop
jle
mov
pop
dec
aaa
or
mov
and
sbb
stos
les
test
or
pop
push
pusha
jns
ret
pop
pop
xchg
or
mov
cmp
cli
mov
arpl
scas
mov
cmp
nop
in
mov
mulb
pop
xchg
pop
fnsave
aad
mov
add
stos
movsl
negb
push
pop
jmp
inc
sbb
nop
lods
lea
inc
push
test
aaa
cmp
mov
add
cwtl
out
in
jne
xor
dec
mov
xor
pop
call
sahf
mov
xchg
xor
scas
lock
push
shlb
pop
call
xchg
in
cli
pushf
popa
ss
ljmp
jp
and
lret
mov
cs
jle
ret
subl
shrl
sti
mov
les
sub
movb
sbb
mov
mov
and
fistpl
in
jae
pop
repz
mov
sbb
pop
mov
pop
mov
jl
pop
test
dec
xchg
or
stc
pop
movsb
pop
adc
jns
repz
push
mov
lods
jmp
pop
test
pop
pop
movsb
out
repz
stc
jmp
out
fldt
jl
pop
jle
push
jae
mov
pusha
dec
out
xchg
push
and
pop
push
pop
test
movsb
leave
xchg
jl
cmp
pop
xlat
mov
sbbl
pop
pop
add
mov
mov
test
jge
mov
das
daa
icebp
scas
aaa
shrb
mov
lods
and
push
scas
cmc
and
mov
mov
clc
pop
push
and
mov
or
repnz
adcl
cmc
jg
add
lds
inc
pop
mov
orl
in
sbb
movsb
fdivrl
arpl
pop
sbb
mov
mov
insl
pop
cltd
adc
nop
ret
or
sub
xchg
cwtl
sbbl
jg
fwait
stos
pusha
pop
out
sar
adc
xchg
mov
call
xchg
push
add
pop
das
je
shll
jnp
pop
pop
cs
dec
cmpsb
test
pop
add
scas
cld
out
push
sub
pop
cwtl
jge
mov
pop
test
pop
mov
adc
jmp
iret
add
push
jns
push
push
pop
push
movsl
fldenv
pop
fsubs
add
pop
dec
daa
gs
mov
inc
sbb
inc
in
shr
sub
adc
jno
loope
fsts
add
mull
test
jl
pop
xchg
and
adcl
cmp
inc
jecxz
pop
and
cli
xchg
shrl
jo
dec
inc
mov
or
mov
cmp
repnz
sbb
adc
add
xor
sub
and
sbb
leave
pop
es
pop
adc
cli
inc
xchg
shrb
test
push
call
cwtl
sub
sub
pop
pop
jle
fstp
dec
cmp
or
jae
sti
pop
jo
push
pop
mov
jp
jge
addb
das
mov
leave
fidivl
scas
sub
mov
enter
push
adc
add
ja
imul
cs
mov
dec
insb
shlb
mov
lret
mov
sti
push
xchg
aaa
sar
mov
jno
lret
sbb
mov
fsubs
imulb
lcall
cltd
push
mov
sub
or
sbb
fsub
pop
sub
push
xor
incb
inc
push
bound
pop
into
cltd
jns
gs
dec
lds
mov
pop
add
xchg
cwtl
xchg
xchg
mov
inc
adc
mov
sbb
shrb
popa
lock
inc
dec
cltd
mov
pop
and
sarl
pop
mov
ljmp
pop
adc
jo
push
stos
das
mov
jecxz
and
pop
or
sub
add
in
movsb
clc
xchg
jno
repz
mov
rcrl
sbb
stos
rcrl
pop
fnsave
push
pop
mov
cmp
insb
adc
mov
pusha
shlb
push
sub
sbb
push
pop
in
sub
pushf
jl
xchg
push
add
mov
mov
aaa
jno
sub
fxch
in
or
mov
lds
cmp
lcall
xchg
pop
push
xor
pop
mov
mov
imul
mov
jg
adc
pop
xor
cltd
adc
pop
lcall
scas
adc
or
or
test
lcall
pop
xchg
and
mov
ljmp
mov
xor
cmp
mov
mov
out
sub
xorb
mov
mov
aas
mov
cwtl
pop
jno
xchg
inc
es
pop
mov
gs
lds
cmp
out
rorl
push
pop
sbb
in
or
mov
ja
mov
mov
pop
rcr
fwait
inc
mov
dec
dec
push
movsb
cltd
mov
pop
fcomps
pop
imul
pop
sbb
mov
pop
in
push
test
lock
imul
cs
stos
nop
add
movl
pop
data16
push
add
ljmp
or
ds
mov
xor
dec
push
lcall
pop
fs
lock
and
jmp
cmp
mov
xchg
or
dec
fcomps
xchg
ss
stc
mov
je
testl
sbb
cmp
sbb
jns
loopne
pop
das
int3
xchg
stos
cwtl
xchg
inc
sbb
dec
fwait
pop
mov
or
dec
pop
sbb
lcall
popa
mov
cmpsb
mov
dec
xchg
and
test
lock
out
lret
test
pop
xchg
out
frstor
mov
popf
push
pop
mov
sub
xchg
xchg
mov
pop
sbb
push
xchg
stc
mov
out
add
ds
dec
mov
scas
scas
lret
and
daa
sub
mov
pop
dec
jae
xor
arpl
pop
int3
sub
mov
lcall
fldt
lcall
sbb
sahf
xchg
stos
pop
popa
and
fldl
aaa
cmc
push
ficomps
xorl
fwait
in
mov
pop
ljmp
mov
sub
fsubrs
in
pop
sbb
ljmp
push
push
into
ret
lcall
out
mov
enter
fisubrl
mov
xorb
pop
jns
xor
sub
xchg
push
xchg
dec
pop
dec
push
dec
pop
xchg
jno
mov
mov
pop
cmp
scas
shrb
push
repnz
sbb
xchg
pop
xor
ljmp
test
gs
jmp
pop
add
out
stc
pop
mov
out
dec
sbbl
mov
mov
push
shl
dec
inc
out
mov
mov
cmp
mov
inc
push
aad
js
imul
pop
stos
adc
scas
push
jae
stos
adc
pop
jo
push
cmp
outsb
pop
fwait
dec
mov
sbb
sub
cs
imul
loope
lahf
scas
mov
add
lcall
xor
cmc
xor
clc
mov
push
addr16
in
fcmovb
inc
pop
sbb
int
jecxz
fcmovne
pop
mov
pop
pop
mov
not
inc
mov
fadd
push
ds
inc
sbb
pop
call
jge
pop
cmp
std
xor
hlt
xlat
scas
aam
popa
sarl
mov
add
jle
in
iret
aas
bound
pop
mov
pop
mov
adc
push
out
or
pop
nop
pop
icebp
xchg
popa
inc
scas
fbld
out
mov
pop
mov
and
push
pop
in
cmp
cltd
and
leave
sbb
pop
pop
mov
mul
mov
out
repz
lahf
pop
clc
cmc
je
movsb
pop
dec
mov
cmp
add
in
xchg
push
jns
in
inc
das
aaa
mov
pop
push
ss
sbb
loopne
inc
ret
in
pop
out
and
dec
ja
fldcw
cltd
mov
mov
fistl
inc
ja
lods
inc
mov
jns
out
cmpsb
out
fcmovbe
mov
dec
pop
int
lock
mov
repz
stc
jg
inc
test
loopne
pop
scas
nop
jge
xor
outsb
lahf
ljmp
mov
call
shlb
shr
push
inc
pop
mov
mov
leave
dec
sub
rep
or
outsb
mov
in
in
dec
xor
jmp
mov
pop
lds
pop
mov
or
mov
push
cwtl
leave
mov
aad
mov
test
sbb
push
fwait
lret
stc
lods
push
mov
mov
js
cmp
push
dec
or
filds
test
sbb
imul
jecxz
push
push
mov
inc
pop
pop
xchg
stos
adc
xchg
mov
test
clc
jne
mov
mov
ret
mov
pop
jb
fimuls
mov
add
mov
adc
mov
aad
add
jnp
and
inc
cwtl
mov
aas
adc
scas
cmp
sub
stos
push
ja
fimull
test
push
xchg
orb
cmp
pop
push
fimull
lods
gs
pop
adc
adc
sbb
adc
push
pop
inc
sub
out
data16
and
add
out
adc
popf
pop
mov
in
imulb
mov
pop
xlat
xor
dec
inc
push
jnp
xor
int3
in
pop
sub
jnp
ss
jne
push
lahf
adc
cmp
sbb
leave
adc
into
pop
dec
adc
xchg
jg
or
add
outsb
js
adc
mov
pop
les
fiaddl
shrb
mov
mov
call
mov
mov
inc
and
and
push
lret
xchg
test
push
pop
imul
or
pop
aam
mov
rcrl
cwtl
jnp
pop
rcll
je
in
in
and
add
push
out
mov
jne
std
add
pop
mov
pop
mov
popf
loope
fisttpl
jmp
jmp
imul
lds
icebp
pushf
ret
cmp
es
push
rorb
mov
xorb
loop
clc
or
push
mov
shr
jnp
mov
fdivrl
pushf
adc
leave
pop
imul
call
cmp
cli
pop
xchg
ja
lret
mov
ljmp
pop
mov
out
leave
push
aaa
lahf
cmp
adc
pusha
dec
ljmp
pop
push
cwtl
xchg
lahf
and
mov
and
or
pop
and
mov
mov
fiadds
ljmp
dec
pop
cld
add
stos
xchg
mov
pop
addr16
mov
repnz
fildl
xlat
lods
cmpsl
hlt
fadds
in
faddp
pcmpgtb
lds
add
jno
hlt
lret
sub
sbbl
pop
jge
mov
mov
pop
les
inc
sbb
pop
xlat
push
scas
add
sbb
xor
iret
fwait
xchg
aad
call
pop
adc
sar
ljmp
xchg
mov
rorl
jne
pusha
aad
shlb
or
lahf
test
adc
inc
mov
cli
ficompl
pop
lahf
mov
lret
leave
imulb
popa
lea
arpl
lahf
mov
ret
stc
jge
push
fldenv
inc
cli
pop
aad
cmp
out
and
fmull
lcall
pop
ficompl
leavew
mov
sbbb
bound
cwtl
ret
mov
imul
out
mov
jno
fsubs
jmp
fmull
ds
jmp
sbb
pop
pushf
push
mulb
pop
xor
pop
mov
sahf
scas
push
lcall
loopne
push
in
outsb
pop
mov
pop
xchg
pop
imul
jno
mov
or
sub
sub
cmp
out
jae
stos
sbb
dec
sub
pop
mov
fldl2t
adc
aam
sti
insb
pop
xor
adc
xchg
hlt
ret
ret
dec
inc
into
jmp
mov
clc
push
dec
jno
pop
xchg
mov
xchg
stc
xchg
xchg
or
testl
adc
cmp
dec
vpmacsswd
xor
stc
sbb
sub
stos
push
push
aam
out
pop
dec
push
arpl
sbb
dec
pop
pop
and
cli
imul
push
ja
ljmp
lock
hlt
cwtl
movsb
pop
mov
mov
adc
sub
push
stos
fwait
mov
pop
ficoml
and
repz
xchg
cmpsb
jne
add
sti
mov
mov
pop
or
stos
sbb
cmp
cwtl
mov
shll
pop
xor
cmpsl
mov
cmp
aad
ja
push
add
loope
or
and
xchg
pop
dec
pop
out
push
cld
pop
xor
test
popf
pop
inc
fisubs
fneni(8087
gs
xchg
fldenv
sti
mulb
in
mov
pop
sub
roll
push
lret
cmp
lods
pop
outsl
or
in
popa
pop
outsb
lock
rorl
sbb
dec
mov
mov
jae
adc
outsl
sub
dec
insl
dec
push
cs
push
out
mov
cltd
out
pop
in
push
jo
fwait
mov
mov
pop
jae
dec
pop
mov
mov
pop
insl
incb
mov
xchg
cmp
fcomps
add
mov
rolb
mov
inc
mov
fwait
gs
into
jl
dec
pushf
or
ss
mov
iret
adc
out
dec
pop
sub
inc
out
xchg
jmp
xor
outsb
mov
popa
or
test
sub
xchg
pop
mov
lods
xchg
std
pop
dec
sbb
mov
mov
push
sub
pop
int3
pop
movsl
mov
mov
pushf
push
pop
out
mov
push
add
popf
dec
sbb
daa
mov
push
fadd
jge
fcomps
push
ss
add
xor
sbb
pop
es
mov
fstpt
pop
pop
mov
int3
fwait
dec
leave
xchg
out
mov
mov
dec
pop
movsl
aad
mov
fwait
lods
or
ret
mov
mov
inc
mov
mov
fwait
dec
stos
adc
jmp
fiaddl
cmp
repnz
inc
dec
xchg
pop
pop
inc
dec
adc
cmp
popa
pop
mov
dec
cmpsb
nop
stos
jg
pop
xchg
scas
pop
sbb
fidivl
dec
inc
lahf
rclb
dec
scas
add
pop
ljmp
fisttpll
lret
mov
icebp
lret
or
cwtl
jne
mov
pop
mov
push
scas
daa
adc
insb
dec
adc
xor
pop
arpl
clc
dec
ds
imul
push
adcl
mov
jmp
mov
adc
repnz
int3
mov
scas
cmp
pop
lret
push
inc
pop
call
sbbb
xchg
rolb
push
mov
mov
stos
lcall
push
loopne
sti
pushw
stos
imul
inc
lret
push
sbb
mov
fstp
sbb
shll
pop
dec
out
fcompl
mov
cmp
bound
pop
aam
ljmp
popa
pop
jno
out
sarl
dec
out
js
cmp
mov
jmp
mov
sbb
cmp
daa
lock
pop
subb
add
inc
ror
mov
mov
icebp
pop
or
arpl
scas
pusha
add
sbb
inc
xchg
lea
mov
xchg
mov
inc
push
sbb
movsb
pusha
inc
dec
rcrb
jno
mov
pop
rolb
test
mov
mov
insb
das
ficompl
sti
xchg
mov
cwtl
pushf
rclb
dec
fstpt
mov
outsl
xor
cmp
sbbb
cmp
orl
dec
lea
inc
call
pop
and
mov
lcall
pop
outsb
xchg
fbstp
mov
xor
clc
adc
pushf
shrl
cld
mov
pop
imul
cs
ljmp
xchg
cmp
fs
pop
cwtl
cmp
in
xchg
mov
mov
jo
push
mov
push
stc
push
xchg
xor
pop
ja
popf
sbb
in
scas
lcall
lods
in
jno
pop
mov
fsts
xor
adc
push
sbb
rclb
xor
and
int
push
pop
and
scas
test
or
xor
test
pop
fistpll
das
aas
sbb
xlat
jns
pop
jno
fcmovb
xchg
xor
paddq
mov
rclb
jno
pop
leave
jns
xchg
jno
mov
pop
jbe
incb
cmpsb
pop
stc
mov
repz
mov
mov
sub
fwait
pushl
push
sbb
mov
cmp
in
push
leave
inc
cmp
add
fwait
jae
les
lods
cmpsl
es
lret
jecxz
push
and
mov
add
cmp
icebp
sbb
lahf
fdivrp
rcrb
enter
pop
push
push
xor
scas
and
into
das
test
cmp
push
mov
push
xchg
push
gs
and
xor
sbb
fcom
test
insb
sub
jmp
testb
cmp
stos
sub
or
stos
out
mov
add
fwait
iret
inc
shrl
cmpsl
mov
cmp
mov
add
jbe
out
repnz
ja
push
fisubl
cmpsl
sti
pop
mov
jo
pop
fistps
int
call
pop
push
gs
js
jns
jmp
test
or
sbb
ss
dec
add
dec
sub
adc
shr
jl
xor
pop
leave
sub
mov
or
xlat
dec
xchg
je
lds
xchg
push
outsb
push
dec
mov
ss
pop
jo,pn
loopne
in
add
xchg
xchg
scas
scas
pop
iret
xchg
sbb
repz
aam
pusha
or
xchg
mov
pop
mov
fwait
mov
jecxz
mov
stc
push
sub
out
push
call
pop
sbb
cltd
fdivs
mov
and
adc
xor
lahf
nop
popa
sub
cld
pop
add
mov
pop
or
repnz
daa
pop
scas
out
jb
fsubrl
xchg
push
jns
cmp
inc
into
add
outsb
pop
sahf
lret
ljmp
push
mov
cmp
leave
lret
mov
aam
orb
adc
bound
pop
idiv
les
sbb
xchg
pop
lcall
mov
pop
ret
adc
js
pop
ja
loopne
mov
sub
loope
or
ss
push
and
lahf
pop
mov
call
xchg
leave
pop
pop
pop
adc
das
repz
call
js
sbb
fidivl
lahf
jge
fistps
mov
cmp
push
jno
sbb
stos
mov
fcoms
sub
jp
mov
std
jbe
testb
pop
mov
pop
xchg
rcrl
mov
ja
pop
adc
lahf
inc
stos
lea
loop
pop
xor
cwtl
push
pop
pop
jge
in
and
sub
fildl
push
adc
mov
cmp
pushf
in
mov
movsl
mov
pop
xor
mov
mul
mov
out
pop
and
aam
das
jle
daa
mov
loopne
leave
cmp
xor
test
cmpsb
call
cmp
push
int
mov
jb
cmp
fdivrl
scas
jns
pop
fucomip
stc
lcall
lods
imul
outsl
repnz
fbld
mov
lods
loop
mov
pop
cwtl
xor
mov
mov
ljmp
or
pop
movsb
loope
adc
mov
mov
xchg
sbb
xchg
dec
pop
imul
add
incb
sub
sbb
dec
xchg
pop
in
iret
pop
lahf
movsb
loop
sbb
pop
loopne
out
fadd
dec
pop
sub
in
mov
arpl
cld
daa
inc
cmp
mov
cwtl
pushf
xor
and
in
adc
mov
sbb
pop
scas
xchg
xabort
push
mov
jl
sbb
ljmp
int3
sbb
pop
fsubl
and
sub
test
outsb
repnz
lret
shlb
pop
hlt
jmp
dec
mov
and
sarl
add
push
pop
repz
push
xchg
jmp
lret
sub
enter
movsb
sbb
sbb
cltd
push
mov
movsl
mov
add
push
addpd
pusha
jno
pushf
inc
pop
cltd
mov
popf
pop
andl
xchg
pop
outsb
add
push
jp
and
push
cmp
sbb
es
into
jne
test
xchg
pop
mov
add
push
sbb
pop
cmpsb
dec
test
enter
xor
pop
jg
cmp
ret
int
pop
nop
add
stc
in
or
jg
pop
pop
jecxz
sarl
push
outsl
pop
es
enter
add
pusha
mov
xor
jnp
test
loop
xchg
sub
lods
or
and
jg
cltd
pop
mov
mov
cmpsl
jl
icebp
mov
jnp
xchg
adc
bound
jo
jne
addr16
repz
sbb
dec
xor
jb
fistpl
daa
mov
dec
pop
cmpsl
cmp
adc
lods
dec
push
cmp
stc
xchg
pop
test
ja
adc
mov
sahf
mov
std
jecxz
sub
mov
cmp
scas
add
adc
mov
leave
fstpl
mov
mov
cmpsb
out
and
pushf
and
pop
aad
leave
push
js
pop
cmp
pop
xor
enter
pop
xchg
cltd
sub
add
cmp
push
mov
adc
cwtl
jbe
mov
xchg
pop
es
mov
xchg
xchg
sbb
ds
jmp
jne
dec
pop
je
adc
scas
cmpb
idivb
cmp
jns
mov
rcr
xchg
cmp
inc
sbb
mov
lcall
pop
sbb
out
repz
addr16
nop
mov
rcrl
idivb
cld
push
jae
into
xchg
pop
mov
sarb
pop
mov
imul
pop
dec
push
pop
imul
jo
xor
jnp
bound
or
lock
stos
icebp
fsubs
insb
pop
inc
xor
ja
pop
insl
mov
cld
cwtl
mov
scas
sbb
dec
inc
ret
or
or
pushf
inc
in
mov
xorb
addr16
mov
or
push
jecxz
neg
pushf
insl
inc
pop
paddusb
mov
inc
imul
int3
inc
xlat
pusha
xor
ror
pop
les
shrb
je
pop
adc
cmp
inc
pop
jne
arpl
push
xchg
xor
inc
les
push
movsb
pop
and
adc
inc
pop
imul
cs
xchg
addl
adc
lcall
xchg
in
mov
sub
push
aad
sub
xor
pop
in
aas
sbb
or
outsl
jge
dec
push
push
ret
ljmp
xchg
push
adc
sbb
cmpsb
inc
add
mov
rclb
outsl
leave
jb
mov
sbb
outsb
lret
xchg
sub
test
xchg
scas
mov
je
in
dec
cmp
inc
mov
pusha
enter
jg
mov
fcompl
lea
xchg
cmpsl
js
addps
movl
adc
mov
xchg
add
aaa
pop
sub
ja
cmp
aas
lods
and
dec
cld
push
pop
leave
pop
nop
insb
loopne
or
pop
mov
lret
adc
add
adc
cld
cmc
fdivr
imul
outsl
xchg
pushf
out
mov
jbe
mov
mov
xchg
mov
addl
pop
dec
test
test
popf
or
jnp
add
pop
dec
pop
iret
call
fildll
das
pop
adc
in
cmp
mov
push
mov
pop
ljmp
xchg
push
xchg
jecxz
cmpsb
aad
loope
lahf
xor
xor
push
sbb
lret
pop
push
and
adc
inc
mov
cmp
sub
in
shl
mov
pop
or
inc
movb
push
aaa
in
out
gs
fistpll
pop
stos
loop
mov
jne
jns
mov
or
je
int
fstl
rcrl
les
insl
or
jo
aam
dec
mov
xor
mov
sub
mov
stc
push
inc
outsl
shrb
pop
or
ret
mov
out
repnz
cmpsb
pop
jb
adc
stos
pop
mov
sbb
jo
popa
pop
pop
push
sub
fldt
pop
inc
jmp
add
mov
outsb
xchg
sub
pop
int
jns
xlat
mov
lods
inc
scas
sub
pop
and
cmp
sti
lods
daa
xorl
call
sbb
xchg
pop
mov
sbb
fstl
sarl
add
jo
mov
mov
jp
push
push
mov
repz
cmpl
lock
in
pop
adc
mov
cmc
and
mov
scas
fistl
dec
fidivl
scas
cmpsb
sbb
xor
lahf
sbb
lea
mov
sub
mov
adc
jae
pop
xchg
mov
ret
inc
jp
shll
test
pop
les
cmp
fcmovnbe
int
sub
mov
out
xchg
cwtl
cmp
dec
inc
andb
mov
fs
lods
std
push
jmp
adc
repnz
jmp
mov
or
fstl
pop
mov
cmp
adc
and
jmp
mov
jno
sub
pop
and
adc
push
js
sbb
mov
icebp
scas
pop
jbe
pusha
mov
xchg
outsb
push
xchg
pop
cmp
out
ja
push
cmp
push
xor
movsb
and
jne
xor
dec
outsb
dec
pop
sbb
mov
insl
imul
adc
fcmovne
pop
xor
iret
fadd
pop
fldenv
sarl
xchg
mov
cmc
jo
add
sub
stos
mov
adc
mov
js
xor
inc
lods
test
mov
inc
sbb
push
lods
inc
ret
cmc
inc
rcrb
jl
sbb
js
stos
js
test
adc
pop
pop
jecxz
ret
mov
or
jnp
mov
mov
insb
xchg
push
mov
cld
lds
ret
push
or
icebp
mov
es
pop
add
daa
or
mov
push
push
push
xchg
mov
ret
cmpsl
pop
sub
jnp
push
sbb
xlat
inc
out
adc
pop
xchg
pop
jg
pop
push
mov
mov
fsts
lds
daa
jecxz
mov
pop
dec
push
inc
repz
pop
xor
push
pop
jmp
stc
es
clc
or
dec
jmp
sahf
mov
je
pop
adc
in
loop
xchg
jnp
test
ret
scas
xor
dec
mov
call
pop
jle
out
aas
pusha
ss
pop
sbb
test
fdivl
xor
push
mov
rorl
dec
mov
adc
ds
lods
push
js
pop
cmp
leave
mov
icebp
in
inc
inc
xchg
adc
xor
adc
push
xor
fcmovb
sub
test
ja
mov
add
xor
adc
xchg
or
shl
leave
jbe
mov
out
or
or
stos
xchg
push
mov
push
pop
test
aas
in
daa
xchg
loope
fwait
mov
jl
pop
and
pop
psubsw
mov
imul
dec
aas
stos
push
xchg
and
or
repz
or
lcall
inc
out
push
mov
sbb
in
or
loope
lret
cmpsl
movsl
stos
pop
sbb
int3
dec
pop
jg
lahf
movsb
inc
push
xchg
inc
lret
jle
cmp
lods
or
add
out
hlt
mov
cwtl
mov
je
push
pop
pop
out
repnz
jae
in
mull
cmp
loopne
jp
mov
hlt
sti
sub
scas
sbb
lcall
loope
adc
pop
cmp
inc
cwtl
pop
jmp
mov
mov
in
pop
sub
cltd
mov
pop
cli
nop
imul
es
sub
inc
insl
jae
cmp
pop
pop
iret
inc
sbb
pop
adc
push
or
pop
sarl
push
mov
fscale
add
jl
mov
pop
mov
call
sbb
xchg
inc
pusha
jns
add
or
pop
enter
pop
mov
dec
popa
xchg
or
mov
push
cmp
neg
in
icebp
xchg
mov
leave
fnstenv
lds
xchg
cld
js
push
sbb
hlt
lock
lret
jo
mov
es
jl
mov
scas
xchg
inc
push
or
inc
sbb
jne
xor
mov
dec
repnz
ja
adc
pop
and
fs
dec
imul
sbb
dec
lds
iret
stos
mov
aam
sbb
js
cltd
mov
mov
sti
cmp
mov
data16
mov
call
mov
xor
lods
scas
ds
stos
sbb
fistpl
inc
adc
stos
lret
arpl
test
dec
mov
cltd
loope
pop
pop
jbe
sbb
imul
int3
or
lret
std
pop
push
jnp
fmull
and
mov
xchg
pop
sub
push
and
inc
xlat
pop
insl
out
inc
mov
inc
es
mov
add
mov
adc
xchg
push
in
pop
es
jmp
sub
and
iret
andl
mov
push
rcl
xor
dec
arpl
mov
fwait
adc
pop
sbb
mov
pop
inc
ja
and
popf
dec
repz
mov
shll
and
adc
mov
pop
cmp
dec
notl
mov
lea
push
inc
mov
mov
or
push
es
mov
push
leave
sbbl
scas
push
mov
sbb
icebp
pop
mov
and
xor
xchg
dec
pop
sbb
jp
cltd
add
xchg
pop
or
mov
aaa
mov
mov
lahf
sbb
rcll
mov
les
imul
push
test
fwait
sbbb
repnz
fsincos
nop
mov
dec
xor
mov
ljmp
sbb
popa
insb
je
xchg
mov
add
sbb
clc
jg
mov
add
lahf
and
mov
push
pop
xor
repz
lahf
push
xchg
pop
lret
mov
inc
cld
mov
pop
lcall
aas
aaa
or
scas
gs
jne
sbb
pop
mov
adcl
pop
cmc
bound
into
sbb
pop
and
xor
out
mov
movsb
xchg
xchg
cmpsl
xchg
pusha
mov
xchg
mov
xor
mov
xchg
or
cmp
inc
pop
dec
push
push
sub
push
rorb
or
dec
mov
mov
pop
aas
cld
daa
stc
dec
pop
cmp
push
std
nop
stc
loope
cmp
jns
movsl
pop
je
fcoms
pop
mov
test
cmc
mov
mov
xor
dec
mov
insb
cmp
pusha
repz
xchg
cmp
mov
inc
fidivl
xchg
and
leave
add
fsubr
fidivrl
out
add
pop
enter
xchg
fiadds
pop
jg
lret
jecxz
push
cmp
fmul
cmp
mov
xorb
jnp
pop
in
adc
ljmp
lret
popf
and
dec
inc
lds
pop
jecxz
mov
addps
fcomp
jns
xchg
mov
pop
mov
jl
push
fiadds
aas
jb
sub
stos
push
out
pop
adc
aad
nop
mov
iret
pop
std
pop
inc
lock
ret
cltd
jbe
dec
pop
call
scas
pop
push
test
arpl
adc
pop
pop
push
rolb
jae
lret
pop
sbb
mov
pop
pop
scas
jmp
sbb
je
pop
std
mov
int3
jo
cmp
xchg
inc
push
push
mov
mov
cmp
pop
lahf
and
ds
test
xchg
idivl
repnz
adc
je
jmp
push
ss
xchg
cmp
loop
std
mov
sbb
and
pop
mov
mov
movsl
mov
lret
in
call
sub
add
mov
pop
xchg
and
pop
xchg
and
lcall
mov
mov
lods
loopne
and
fidivrs
arpl
adc
aad
sti
and
ret
jp
pop
lcall
pop
mov
adc
js
push
mov
fs
adc
movsl
mov
jns
pushf
mov
cld
rcrb
push
ret
xor
adc
and
dec
in
loopne
orl
jo
hlt
adc
jecxz
out
scas
in
cmp
dec
in
fidivrl
loopne
push
lret
mov
mov
sbb
push
add
not
test
sub
stos
pop
mov
lahf
adc
fcomi
add
jge
pop
jns
lahf
xor
cld
fnstcw
mov
jo
push
lret
lahf
xchg
push
mov
inc
adc
sub
pop
fcomps
testl
bnd
cmpsl
sti
inc
pusha
mov
inc
jbe
jns
jg
jl
pop
xor
xorb
mov
mov
sahf
ja
mov
lods
stos
push
sbb
adc
jecxz
repz
pusha
pushf
scas
sbb
sub
lea
sub
mov
aaa
decl
fdivrl
sbb
mov
imull
adc
dec
inc
shll
pop
xchg
adc
xchg
pop
mov
jo
sub
test
test
call
pop
in
aam
mov
dec
lret
inc
addr16
stos
or
cltd
xchg
pop
mov
jbe
or
fstps
out
jmp
jno
sbb
int
sub
fildll
pop
rorb
jns
xor
into
xchg
push
movb
ja
fstps
sbb
rcrb
sbb
fisttps
hlt
pop
mov
pop
pop
movsl
xchg
inc
mov
jns
insl
pop
xchg
ss
or
scas
aam
dec
movsl
mov
xchg
pushf
jbe
mov
pop
enter
aas
and
dec
add
inc
pop
inc
fsubr
imul
pushf
rol
test
mov
test
and
pop
sbb
push
lahf
adc
icebp
imul
sbb
xor
mov
inc
lret
adc
iret
xchg
dec
pop
add
shr
jbe
mov
movb
lcall
fwait
aam
xorb
inc
addr16
inc
pop
out
cmp
xor
ret
mov
sbb
test
dec
dec
pop
outsl
lahf
push
repz
lcall
lret
or
xor
sbbl
fistpl
leave
xor
pop
sbb
shll
jle
pushf
divps
fisttpl
stos
and
jl
xor
mov
push
ffreep
popf
xchg
mov
fcmovnu
loop
push
pop
cmp
cmpsb
push
jle
in
pop
sbb
int
dec
lcall
pop
cmp
cltd
mov
sbb
inc
jno
sahf
mov
xchg
xor
popa
mov
fldcw
mov
fisubl
pop
in
jo
pop
inc
jmp
daa
pop
jecxz
gs
adc
xchg
push
repnz
stc
add
daa
mov
xor
adc
xchg
jp
mov
pop
iret
jae
scas
xor
ja
flds
push
int
cmp
pop
sub
dec
push
xchg
fadd
push
sbb
mov
jmp
pop
insl
rolb
faddp
push
ss
jae
test
in
fmul
fs
jmp
sbbl
inc
mov
push
ret
out
fdivrl
lea
add
jno
mov
daa
push
pop
in
bound
sub
pop
lret
xchg
lods
adc
pop
adc
push
xchg
imul
pop
pop
andl
inc
adc
fnstenv
ss
shrb
push
arpl
in
fnstcw
ret
lahf
pop
inc
sub
pop
in
mov
add
mov
fcomps
fs
jae
outsl
and
pop
ja
pop
push
push
bound
jmp
push
loopne
pop
jmp
or
pop
push
mov
loop
jge
or
dec
mov
cli
sub
xchg
dec
mov
ljmp
pop
inc
sbb
adc
in
aaa
mov
icebp
pop
push
cmpb
add
bound
xor
inc
fildl
mov
fadds
adc
cs
xchg
cmp
xor
push
mov
mov
adc
push
inc
icebp
pop
ret
inc
cld
insl
notl
shrb
mov
ja
or
bound
test
stc
out
push
pop
rcr
and
insb
and
mov
cltd
repz
cmp
or
inc
cmp
inc
sub
addr16
popa
stos
push
mov
and
jl
loope
jecxz
push
sbb
sahf
insl
push
xchg
mov
fstpt
jb
push
cmp
cmp
inc
pushf
sbb
scas
add
sbbb
fldt
mov
mov
pop
ss
movsb
xchg
mov
add
pop
sub
add
pusha
mov
mov
sub
pop
test
jae
pop
ret
rcrb
addr16
jmp
sbb
subb
mov
inc
dec
cmp
sbb
pop
sub
jg
xor
pop
xlat
xor
out
hlt
outsb
cli
pop
pop
das
fidivl
arpl
pop
stc
cmp
dec
add
add
pop
shlb
cwtl
cwtl
adc
addb
xchg
mov
cmp
sti
mov
iret
fimull
stos
cmp
or
test
mov
and
pop
sub
fimuls
jle
adc
jae
stos
das
in
mov
ljmp
inc
adc
mov
ret
dec
pshufw
fstpt
icebp
sub
mov
dec
adc
mov
xlat
inc
mov
iret
pop
lods
add
push
xchg
add
or
imul
xchg
mov
enter
sarl
sub
leave
stos
pop
fnstsw
lret
rolb
mov
push
sub
pop
mov
repz
pop
lahf
or
cmpsl
lcall
scas
data16
mov
stc
lret
pop
push
enter
cs
push
mov
xchg
mov
push
daa
pop
out
mov
jb
lret
pop
das
xor
sti
js
stc
out
insb
add
sub
cmpsl
inc
pop
es
and
test
adc
jno
fmull
outsl
aam
cmc
shll
cltd
aas
test
shlb
test
pop
cmp
pop
and
mov
xchg
pop
cmp
add
inc
and
jecxz
sbbb
xor
fstps
xlat
adc
dec
fisttps
mov
mov
negl
pop
sub
and
scas
fsubrl
pop
stc
mov
pop
jmp
in
decl
push
repnz
lcall
mov
aad
sbb
cmp
pop
rcll
lahf
cltd
xchg
push
lret
push
ret
jl
outsb
inc
pop
inc
clc
das
out
pop
jge
pop
sbb
push
jae
jecxz
mov
add
cmpsl
test
xor
leave
aaa
add
mov
pop
lret
stc
or
popf
add
js
pop
xor
mov
pop
mov
fstps
lods
push
and
push
cmc
sub
or
shll
pop
lods
sub
push
pop
inc
jno
mov
into
cmpb
pop
pop
and
cmp
lret
pop
and
pop
sub
add
adc
pop
dec
test
lahf
clc
pop
jle
jae
adcl
lock
scas
pop
fstpt
xor
mov
aam
inc
in
test
sbb
adc
out
pushf
inc
outsb
cmp
jp
outsb
incb
in
mov
aaa
outsb
lcall
movsb
sub
push
mov
fdiv
insb
lock
ret
ljmp
out
fcompl
enter
sub
pop
inc
aad
pop
xchg
fists
fstpl
push
cmpsb
fistl
xchg
ss
pop
insb
adc
xor
stos
bound
mov
xor
inc
or
and
xor
pop
inc
xchg
insb
cmp
inc
pop
ret
mov
imul
mov
aas
xor
xor
insb
sbb
cs
mov
pop
mov
divb
repz
popa
sbb
xchg
xor
jge
pop
imul
adc
cli
mov
rolb
push
orl
jecxz
movsb
lods
dec
inc
scas
leave
stos
jg
sahf
ficomps
push
lock
add
push
cwtl
cmp
dec
xor
pop
sub
inc
add
icebp
jp
pop
repnz
int3
sub
clc
push
int
lret
cmp
sbb
inc
push
std
push
ja
subb
fadds
or
inc
mov
loope
xchg
es
int3
mov
out
iret
popf
mov
ljmp
std
pop
data16
adc
cmp
pop
xlat
xor
add
jmp
push
pop
lds
and
cmpsl
lret
outsb
xor
gs
pop
jge
fidivl
in
jbe
mov
push
loope
lcall
or
mov
mul
rcl
and
sbbb
enter
pop
mov
xor
cld
pop
jo
mov
sahf
xchg
filds
pop
insb
jecxz
rcll
adc
pop
pop
mov
and
xchg
aas
iret
fcmovnb
imul
mov
add
xchg
pop
sbb
lods
test
cmpsl
xor
inc
js
mov
cli
cld
pop
fnstsw
in
pop
outsb
sub
scas
dec
jl
bound
cmpsl
das
mov
mov
mov
test
cmpsb
scas
push
and
test
movsl
enter
fimull
jnp
inc
fcmovnbe
dec
jecxz
cmp
movsb
test
cmp
inc
push
xorl
xor
fcoml
das
or
ret
mov
cli
sub
mov
test
push
xor
jp
pop
movsl
cli
test
arpl
int3
push
repnz
mov
push
fldt
dec
in
pop
sbb
mov
scas
ss
js
pop
les
jmp
rorl
sbb
call
jns
neg
aas
stos
popa
inc
inc
or
or
mov
dec
jns
mov
lds
xchg
adc
outsl
jbe
sub
negb
and
sub
pop
stos
rolb
mov
pop
jnp
es
xchg
pop
cltd
xor
pop
pusha
adc
outsl
inc
jecxz
push
mov
inc
inc
fcmovnu
scas
pop
sbb
shl
daa
ret
xchg
scas
aas
testl
mov
stos
and
mov
addb
sti
pop
pop
mov
push
aam
jg
sbb
fbstp
lret
lahf
inc
int
jno
sbb
ret
push
lods
or
lods
xchg
lahf
enter
push
es
pop
cmp
mov
push
mov
repz
push
mov
mov
cs
fiaddl
lcall
sub
pop
mov
shr
faddp
fsts
mov
cmc
scas
fs
mov
cmp
addr16
aas
call
and
inc
push
and
pop
movsb
cltd
cmp
mov
push
xor
mov
nop
sbb
xchg
addps
lret
test
lcall
aad
dec
sbb
sahf
pop
insb
pop
icebp
add
dec
jp
or
inc
cmp
not
or
aaa
jg
dec
sarb
push
push
push
pop
and
lcall
shrb
dec
inc
cmp
pop
sbb
lock
mov
mov
lods
in
pop
cmp
or
pop
bound
in
call
int3
push
push
push
hlt
lcall
mov
subb
push
pop
pusha
test
fs
aaa
jge
pop
push
fisttpl
lcall
lret
jmp
pop
lods
cmp
clc
mov
in
loopne
sbb
outsl
daa
fwait
ja
je
lret
out
cmp
fucomp
xchg
or
cld
cmc
pop
lea
cmpl
fsubl
lcall
inc
jl
jne
mov
pop
nop
cmp
and
pop
notl
adc
mov
jb
int
pop
jg
dec
loop
xor
mov
out
pop
shlb
pop
jb
or
push
dec
push
xor
sub
iret
flds
xchg
pop
mov
dec
aas
inc
pop
pop
dec
sbb
dec
dec
cmp
jo
mov
adc
pop
out
xor
adc
pop
xor
ljmp
popl
scas
mov
push
lods
or
insl
movsl
inc
jnp
icebp
push
or
outsb
js
pop
loop
adc
pop
xchg
das
sub
subl
mov
jnp
sub
adcb
imul
clc
or
movsl
pop
xchg
ljmp
pop
in
int3
out
add
es
aad
cmp
mov
mov
addl
pop
and
jge
add
inc
pop
pop
mov
scas
sub
clc
mov
sbbl
pop
adc
mov
sbbl
fmull
pop
sbb
pop
inc
pop
sbb
jecxz
ja
lahf
stos
sahf
xchg
pop
cmp
aam
or
cmp
out
out
sti
add
movzwl
rolb
cmp
repnz
daa
dec
jecxz
pop
and
push
std
shrd
jnp
inc
adc
dec
lods
sti
mov
int3
sub
ret
popa
add
dec
lret
and
mov
scas
sub
pop
pop
cmc
out
xor
sbb
fisttpl
push
test
data16
dec
mov
sub
mov
jne
test
inc
push
les
pop
and
imul
icebp
and
cltd
add
xchg
nop
pop
sub
mov
add
leave
mov
or
jb
fisttpll
jmp
pop
aam
push
rcrl
testl
pop
rcrb
insl
cltd
sub
jl
mov
jmp
lock
cmp
jge
mov
fildll
dec
pop
inc
jbe
pop
mov
push
aam
int3
imul
or
enter
loope
mov
imul
divl
dec
inc
pop
loopne
and
pop
sub
sbb
xor
mov
cwtl
sbb
pushl
inc
arpl
ja
in
cmp
filds
test
push
dec
add
push
push
ja
ficompl
in
pop
xorl
test
push
jecxz
outsl
xchg
js
dec
xor
fiaddl
push
test
cmp
hlt
js
lahf
sbb
cmp
cmp
rcrl
push
lea
xor
jno
pop
jl
mov
pop
jo
js
inc
out
mov
mov
dec
in
shlb
sbb
stos
adc
pop
lcall
cwtl
jecxz
or
out
fiadds
gs
int3
mov
es
push
pop
xor
add
adc
lret
dec
js
test
sbb
hlt
xchg
int3
sub
loope
rcll
jbe
stc
in
adc
push
pop
por
push
sbb
lret
pop
leave
push
cmp
dec
jb
je
jmp
mov
fwait
sarb
ret
stc
adc
sti
or
or
pusha
lea
pop
scas
vmread
bound
adc
imulb
mov
fiaddl
pop
int3
outsb
inc
insl
cmp
jle
lcall
mov
pop
loop
xor
inc
sbb
inc
jae
push
cmp
push
cmp
pop
data16
mov
sub
fnstsw
enter
cmp
sbb
outsb
mov
mov
scas
das
sbb
in
sbb
negl
sub
data16
lret
lock
jmp
aas
adc
mov
fcompl
mov
rcr
pop
stos
gs
arpl
pop
pop
out
movsb
add
les
pusha
pop
sbb
cli
loop
iret
pop
and
lret
negl
jno
shll
xor
dec
cmpsl
aam
push
js
leave
stos
mov
mov
mov
add
mov
xor
pop
lods
pop
jle
and
fdivs
jge
sbb
push
cmp
mov
popa
pop
sbb
fcomps
pop
xchg
pop
in
and
push
test
icebp
jp
mov
pop
mov
imul
mov
dec
or
push
or
in
out
pop
inc
inc
insb
hlt
push
pop
rdpmc
nop
jno
push
xor
sub
push
pop
movsl
pop
je,pn
pop
data16
scas
mov
daa
fcomip
or
pop
add
xchg
outsl
push
mov
sbb
jnp
sbb
inc
push
cmp
ret
xor
leave
xor
dec
xor
mov
out
je
pop
pop
in
sbb
sub
sar
jle
mov
fnstcw
stos
mov
lds
leave
idivl
pop
pop
and
ds
cmp
pop
roll
and
pop
aas
and
in
adc
pop
fimuls
imul
push
lock
add
mov
repnz
lahf
lods
nop
or
pop
movl
lcall
sahf
mov
pop
jns
pop
mov
inc
rorl
push
aaa
jae
adc
shlb
pusha
mov
jg
pop
adc
push
pusha
enter
mov
xor
ret
pop
das
lods
paddq
push
dec
mov
jae
out
outsl
leave
pop
or
mov
xchg
pop
cltd
xchg
or
bound
xchg
mov
into
and
sbb
or
pop
push
and
mov
pop
xchg
lods
or
pop
pop
fistps
xor
shl
pop
scas
add
pop
out
fwait
cli
jge
sbb
sub
inc
or
shlb
push
pop
loope
scas
shrl
inc
cmp
outsl
mov
clc
inc
cmp
jp
pop
sub
push
lahf
aaa
pop
leave
adcl
pop
mov
sub
cmc
mov
out
das
xchg
pop
mov
jmp
add
cmc
mov
push
lret
int3
mov
jmp
fidivrs
add
aas
outsb
push
mov
fmull
fwait
add
mov
sahf
cmp
and
push
push
cmp
sbb
rolb
sub
loopne
mov
push
xor
pop
pop
lea
mov
xor
xchg
jle
jae
imul
lret
in
jb
cmp
inc
mov
jl
push
test
mov
push
cltd
mov
daa
mov
xchg
scas
mov
pop
xchg
fcompl
xor
movsl
sbb
das
sbb
ret
into
pop
stc
pop
out
mov
test
dec
add
jmp
xchg
repz
std
pop
lret
jae
aas
adc
nop
loopne
pop
outsb
clc
xor
or
out
lahf
jmp
mov
cmpsb
test
sub
inc
sbb
gs
in
jmp
pop
mov
lcall
fmuls
fs
pop
mov
call
xchg
scas
xchg
xchg
jl
pop
in
adc
sub
add
xchg
push
sub
pop
imul
jnp
mov
xchg
xchg
insb
in
push
jns
lods
adc
insl
pop
arpl
mov
pop
pop
pop
mov
xor
sahf
mov
sbbb
ffreep
mov
icebp
frstor
sahf
pop
fistpl
popl
or
scas
fistpll
push
adc
fwait
out
aaa
test
or
shl
cmc
pop
mov
or
jmp
shll
mov
mov
cmp
add
stos
es
cmpl
out
push
fdiv
cs
jbe
pop
or
xor
or
pop
mov
cmp
inc
pop
stos
jg
or
pop
lahf
pop
pop
leave
add
mov
fwait
mov
imulb
pop
rcrb
aas
mov
nop
mov
loopne
pop
mov
lods
xor
movsb
add
pop
cwtl
mov
pop
jge
cli
pop
sub
dec
pop
dec
cmp
stos
sti
inc
mov
adc
inc
sbb
enter
pop
bound
lcall
mov
mov
or
lds
dec
pop
in
repnz
out
xlat
cmp
adc
imul
mov
ret
shrl
mov
in
fsub
add
popa
pop
out
push
imul
test
inc
push
push
das
mov
fcmovnb
xchg
and
das
jl
jmp
push
jbe
inc
leave
add
pop
out
in
notl
mov
loopne
lds
out
lret
jle
mov
cwtl
mov
cmp
xor
dec
jge
pop
cli
aaa
xchg
sbb
adc
out
loope
and
pop
insb
dec
jmp
xor
or
lcall
xor
push
or
add
pop
scas
jg
in
sub
pop
in
rcrb
dec
push
xor
pop
mov
pop
imul
fs
mov
out
push
and
fldl
mov
cmp
cs
ficoml
mov
dec
test
sub
add
out
lahf
cmc
jae
mov
adcb
aas
lahf
pop
das
ljmp
pop
and
xlat
test
pop
mov
iret
pop
push
into
call
jge
fidivrl
enter
leave
jp
mov
cmc
add
pop
mov
popa
push
and
in
inc
or
fstpl
aaa
dec
enter
add
pop
mov
sub
dec
sbb
xlat
xchg
sub
mov
idivl
xor
faddl
jbe
and
outsl
pop
sbb
jae
pop
jge
data16
sub
and
or
inc
decl
cltd
leave
add
pop
fildl
mov
mov
jno
ja
cmp
pop
mov
jns
aas
push
ficompl
out
dec
inc
pop
popf
pop
rcrb
lods
mov
mov
ss
pop
mov
pop
pop
aaa
popf
ret
push
mov
lahf
lret
daa
ficoml
bound
fnstsw
push
jae
mov
in
lods
push
mov
mov
sbb
mov
dec
clc
scas
jle
or
sti
scas
inc
jecxz
cmp
sbb
ret
xchg
pop
int
cmp
fidivrl
push
testl
jmp
pop
push
js
fwait
je
hlt
mov
inc
fisttpl
dec
pop
daa
aas
shll
ret
push
mov
mov
lahf
push
mov
dec
dec
adc
pop
inc
add
or
sub
mov
sub
scas
sub
out
nop
popf
cmp
pop
jae
jmp
mov
or
lods
jo
mov
js
jle
pop
and
shr
xchg
in
andl
push
pop
mov
mov
pop
fsubrl
fdivrs
test
sub
lods
dec
mov
adc
lock
push
scas
xchg
mov
sub
out
and
mov
pop
pop
test
loope
adc
or
setb
pusha
mov
pop
pop
cmp
pop
jmp
jmp
or
test
add
or
mulb
or
imul
test
pop
ret
jge
pop
mov
fwait
pop
js
arpl
hlt
leave
fistps
cmpsb
ffreep
or
xchg
jecxz
cli
cmpb
pop
ret
dec
dec
pop
out
mov
repnz
pop
push
leave
fcmovb
pop
sti
adc
rorb
dec
lret
inc
mov
pop
jge
mov
outsl
nop
test
aam
pop
xchg
ljmp
mov
out
push
mov
lods
jnp
pushf
pop
popf
add
push
and
or
cltd
movsl
repnz
ret
pop
mov
mov
adc
aas
pop
pop
add
lds
out
and
cld
fldt
push
scas
rorb
mov
xchg
lods
movsl
pop
xchg
or
xchg
push
in
ja
and
mov
mov
cli
rorl
jmp
scas
shlb
das
call
or
int
pop
push
stos
in
mov
pop
ret
add
sarb
jno
loopne
ret
out
fisubrl
movsl
mov
push
dec
nop
pop
fcmovne
js
mov
push
bound
pop
shlb
sbb
call
cmp
lds
dec
sbb
popl
les
fnstcw
imul
cli
repnz
int
cmpsl
push
adc
popa
add
jmp
sbb
ss
movsl
movsb
cmp
xchg
pop
xchg
or
pop
arpl
inc
mov
push
mov
ss
mov
jl
arpl
stos
add
push
pop
pushf
outsl
push
out
mov
xor
mov
mov
out
add
inc
out
lcall
push
pop
lea
notl
insb
mov
arpl
lret
dec
push
cld
xor
dec
mov
fisttpl
cmpsb
mov
jecxz
stos
pop
loope
icebp
dec
or
add
dec
push
sub
add
mov
adc
das
xrelease
inc
xor
arpl
lods
or
mov
leave
pop
xchg
in
push
rcr
xchg
enter
adc
ja
sbb
jge
cmp
pop
push
test
adc
adc
fnstcw
jno
pop
cmp
dec
jle
or
push
out
add
sub
mov
pop
enter
inc
mov
jecxz
pusha
xor
outsb
pop
mov
aad
lahf
rolb
ja
xchg
jae
xchg
pop
out
add
xchg
xor
jo
popf
mov
insb
pop
iret
enter
jmp
add
scas
pop
adc
xchg
pop
cli
xor
cmp
sub
rcrb
xor
gs
scas
add
pop
sbb
fmul
jp
inc
mov
xadd
pop
inc
out
xchg
scas
pop
jno
or
fdivr
cmpsl
add
mov
icebp
bound
sbb
ret
inc
fsubrs
xor
add
pop
pop
jmp
andb
pop
scas
mov
mov
scas
sbb
adc
xor
xchg
mov
or
cwtl
mov
mov
adc
fwait
jnp
and
mov
lock
popa
inc
int
xor
jns
sahf
test
mov
mov
dec
enter
add
and
or
in
xchg
dec
lcall
cmp
pop
push
test
ljmp
pop
sbb
clc
movsl
jns
adc
pop
mov
push
mov
dec
mov
mov
ja
loopne
adc
sub
sbb
into
ret
jbe
mov
sbbb
scas
mov
int3
arpl
pop
sar
push
fldt
fisubs
inc
mov
push
cwtl
js
mov
sbb
leave
pop
cmp
jg
mov
add
mov
mov
lret
jmp
sbb
mov
sbb
out
or
pop
lret
cli
adc
dec
ja
cmp
sub
and
xor
mov
pop
into
mov
aam
or
inc
fcompl
push
test
or
push
mov
fld
sub
jmp
pop
popl
pop
jnp
call
outsl
push
lcall
inc
outsb
xchg
sbb
idiv
pop
int3
pop
out
push
or
mov
pop
lret
pop
sbb
inc
xchg
and
bound
pop
andl
push
mov
pop
scas
clc
add
js
and
out
ljmp
dec
cld
dec
stos
imull
pop
jb
lret
mov
pop
cmpsl
cli
inc
insb
inc
xor
addps
in
call
jg
pop
mov
lret
and
mov
ja
sarl
aas
and
dec
inc
sbb
jne
idivl
mov
jp
daa
ljmp
rcrb
cmp
mov
mov
mov
adc
mov
outsl
inc
pushf
jbe
pop
fstpt
testl
lcall
xchg
test
pop
xor
dec
fstl
or
and
outsb
push
sub
jo
lock
scas
in
mov
pusha
call
sbb
dec
push
pop
and
into
lock
dec
and
sbb
push
xchg
pop
add
scas
inc
lahf
cmc
cmp
stc
cltd
clc
push
jns
push
xor
sbb
dec
test
popf
js
jo
xchg
mov
mov
jmp
inc
insl
mov
push
ret
mov
shlb
mov
jecxz
and
pop
andl
je
repnz
adc
inc
test
pusha
xchg
jns
dec
imul
lret
pop
pop
clc
cld
lock
pop
mov
mov
lcall
jae
ja
dec
push
test
ja
imul
out
mov
push
cmp
xchg
cmp
arpl
xchg
pcmpeqw
or
or
movsl
rcrl
jmp
gs
add
repnz
push
je
pushf
mov
mov
mov
xchg
mov
jg
add
mov
mov
enter
mov
cltd
mov
mov
pop
fs
add
add
pop
lcall
add
push
xchg
ja
cmp
mov
mov
mov
inc
pop
fucomp
or
mov
int
mov
jns
push
lcall
cmp
pop
pushf
mov
lcall
dec
in
pop
xchg
loop
mov
mov
pusha
cmpsb
call
out
sahf
insb
scas
popf
xor
je,pt
leave
pop
xchg
data16
sbb
push
adc
pusha
cmp
mov
jp
pop
orb
add
je
ss
xchg
cmp
xchg
push
or
sbb
dec
adc
push
jge
scas
add
ljmp
xchg
pop
add
push
push
and
pop
insl
pop
loopne
leave
cmp
mov
ret
and
aas
push
nop
js
pop
sahf
pusha
ret
stc
adcb
fsub
rorb
push
jle,pn
lret
push
mov
fisubl
sub
popf
inc
leave
xor
mov
cltd
xchg
stos
out
xor
in
ja
cmpsb
push
jg
add
inc
aad
mov
pop
rol
test
mov
dec
insb
dec
aas
push
sbb
je
add
pop
mov
jg
dec
or
mov
iret
popf
jbe
mov
insl
out
ret
lret
dec
inc
adc
xchg
push
je
pop
test
pop
sub
adc
add
mull
mov
pop
sub
push
insl
int3
cmpb
shrb
lret
shrl
xchg
inc
js
mov
aaa
push
aad
jle
pop
or
fcomps
icebp
sbb
mov
fsts
mov
loope
mov
in
lds
inc
mov
dec
insl
loop
add
xchg
push
imul
pop
ret
jo
out
jp
mov
cmpsl
stos
loope
push
aas
pop
aaa
cmp
mov
and
popa
test
lcall
stc
sbb
jnp
push
sub
pop
mov
mov
pop
or
mov
pop
mov
and
outsl
sbb
and
pop
pop
fstpl
xor
sub
fwait
dec
dec
add
pop
add
adc
ljmp
cltd
test
xchg
jmp
leave
pop
jmp
sbb
fdivrs
sarl
sbb
pop
scas
sti
test
lahf
cmp
andl
jnp
lcall
pop
stos
and
pop
cmc
arpl
cmp
clc
mov
mov
leave
mov
fsubrs
dec
pop
or
dec
scas
or
lods
mov
push
mov
in
pusha
ljmp
adc
sub
gs
or
mov
scas
dec
mov
fnstenv
cmp
cltd
add
jp
loope
push
add
enter
inc
adc
mov
js
xchg
adc
adc
mov
enter
test
adc
and
dec
add
roll
mov
test
sub
mov
ds
jmp
out
adc
push
insb
pop
pop
mov
in
rcrl
imul
push
iret
leave
jmp
jle
fcom
fucom
dec
mov
dec
mov
leave
hlt
jbe
pop
dec
push
orl
sub
cmp
lcall
mov
lahf
dec
mov
repz
push
test
pop
fbstp
pop
add
js
and
mov
dec
jb
pop
mov
flds
ret
dec
mov
pop
shl
mov
mov
outsl
xlat
idivb
into
cmp
aam
adc
pop
xor
stos
and
imul
lret
aaa
mov
mov
cmp
jmp
pop
cli
pusha
cmp
rcll
sub
dec
xor
push
push
cmp
mov
sbb
scas
in
aad
ret
clc
push
and
push
xor
into
or
hlt
mov
cwtl
xor
add
dec
and
pop
xchg
push
inc
mov
pop
outsl
shll
in
and
mov
test
jne
dec
je
outsb
cmpsl
pop
fdiv
loopne
inc
mov
sub
mov
xor
ret
mov
pop
mov
sub
mov
js
lahf
shl
mov
into
mov
add
sub
adc
mov
mov
mov
xchg
push
ficomps
fldt
stos
clc
dec
sub
push
and
add
imul
test
pop
mov
imul
push
insb
into
aas
and
leave
mov
cmp
mov
fcmovu
cmpl
mov
decb
mov
mov
leave
cmp
mov
ret
out
insl
adc
sti
lret
les
dec
imul
mov
out
jo
idiv
dec
lcall
mov
int
lahf
mov
xchg
pop
dec
and
mov
dec
test
pop
test
or
rcll
shlb
push
xchg
fcomps
xor
imul
imul
movsl
stos
fcompl
test
scas
dec
out
xor
in
in
or
inc
xchg
add
mov
repnz
pop
mov
xchg
cltd
shll
fxch
jp
sub
push
or
cmc
xchg
movsl
mov
pop
cmp
add
mov
dec
adc
push
mov
push
jmp
insl
hlt
xchg
shrb
out
mov
out
xchg
sbb
mov
cmc
aam
mov
mul
cmp
inc
pop
popa
xchg
sub
popa
push
cmp
mov
jl
aaa
fmull
cmpsl
adc
fs
pop
jle
aam
leave
cmp
pop
mov
scas
lock
xchg
fiadds
mov
mov
jns
arpl
lds
test
fiaddl
xor
jno
fisttpl
stc
idiv
dec
mov
adc
iret
add
std
pop
dec
mov
dec
mov
pushf
adc
pop
sti
jmp
lcall
or
rcrl
inc
add
inc
xchg
jne
lcall
mov
pop
push
fmuls
pop
adc
mov
lahf
nop
ret
loop
or
bound
jnp
xchg
mov
mov
jns
jne
adc
mov
jmp
mov
icebp
lahf
xchg
mov
pop
push
pminub
inc
dec
xchg
xchg
sub
cmc
aad
mov
or
call
jecxz
sbb
out
xchg
cmp
mov
aas
cwtl
mov
fists
pop
sub
xchg
jmp
cmp
push
je
ss
jno
and
mov
add
pusha
inc
outsl
lahf
xor
adc
mov
pop
dec
mov
clc
pop
mov
rorl
mov
add
sti
pop
data16
pop
fcmovne
aaa
xchg
jbe
pop
add
jl
cmp
pushf
addl
and
cmp
push
pop
mov
out
adc
fwait
mov
cld
pop
pop
test
inc
mov
xlat
repnz
idivb
jb
mov
push
movsl
and
les
or
xor
and
xor
push
sbb
fadds
mov
add
cmp
jecxz
xchg
ret
push
mov
pop
mov
loopne
mov
xchg
imul
popf
adc
xchg
mov
cli
pop
loope
out
stos
mov
mov
ds
pop
push
cwtl
dec
stc
push
inc
addr16
mov
jae
incb
arpl
dec
dec
jb
or
cltd
ret
sub
pop
and
icebp
xchg
roll
mov
pop
sub
jge
or
mov
out
and
leave
dec
es
xchg
sub
punpcklbw
sahf
fs
into
push
adc
mov
dec
mov
push
mov
stos
leave
pop
cmp
shlb
arpl
les
sbb
cltd
push
movl
incl
sti
aad
sbb
inc
lahf
jecxz
or
dec
cmpsb
js
cmp
fisubl
ja
inc
sbb
add
repnz
adc
adc
mov
jae
jns
stc
mov
xchg
pop
sbb
mov
pop
xor
pop
pop
enter
sub
push
lods
pop
jno
adc
pop
pmuludq
xchg
aam
fistpll
add
jmp
xor
sub
or
andb
pop
sub
jne
or
push
cmp
ret
xchg
jno
mov
mov
rcrl
cmp
popa
push
mov
sub
int3
pop
out
inc
arpl
mov
pop
pushl
and
and
pop
sub
jl
jbe
fstl
int3
inc
ffreep
or
out
jnp
or
pop
imul
test
pushf
adc
cld
jb
sti
xor
dec
xchg
loop
lods
adc
dec
mov
inc
cltd
pop
mov
push
pop
inc
sub
xchg
fiadds
icebp
pop
pop
insl
pop
test
jmp
pop
xchg
ret
stos
and
mov
adc
fcomip
rolb
fidivrs
std
and
cmp
sub
dec
sahf
xchg
cmc
rcrl
scas
push
jl
lods
add
pop
ror
inc
xchg
subl
push
sbb
mov
mov
lea
pop
jle
popa
push
sbb
mov
arpl
xchg
xor
sbb
hlt
pop
xlat
xchg
jne
mov
push
inc
popf
pop
int
adc
xor
add
and
sbb
mov
hlt
adc
fstl
mov
dec
xor
jbe
cmp
jg
leave
inc
movsb
jno
jo
cmp
ret
popf
sbb
push
imul
ja
dec
aaa
leave
fs
loope
imul
lcall
stos
pop
jg
rol
xchg
lahf
pop
mov
cmpl
fidivl
jecxz
cmp
enter
lds
jecxz
stos
cmpsb
cmp
mov
xchg
sub
insb
add
pop
sbb
xchg
push
push
mov
inc
xchg
mov
repz
xor
mov
jne
add
mov
mov
int
inc
and
lods
pusha
or
sub
jbe
push
xor
xorl
inc
xor
push
adc
add
in
pop
lret
mov
dec
dec
arpl
inc
ficompl
inc
aam
cmp
push
ss
jns
pop
add
pop
cltd
test
and
inc
pop
pop
push
adc
lret
mov
lahf
addr16
test
mov
and
xchg
or
sbb
ftst
or
pop
push
scas
or
push
cwtl
negb
sub
jbe
stos
push
dec
mov
mov
push
adc
sahf
cmpsl
gs
es
imull
jns
movsl
scas
pop
out
cmc
or
mov
pop
sbb
arpl
add
inc
jmp
hlt
mov
mov
push
pop
and
int
lret
pop
ret
inc
into
daa
or
mov
xchg
hlt
push
pop
pop
repnz
arpl
call
dec
enter
jg
gs
pop
adc
push
push
xor
das
jge
mov
push
pop
cltd
ret
xchg
pop
ret
bound
fs
pop
sub
arpl
fisubrl
shrb
fmull
sti
xor
out
cli
adc
dec
pop
mov
pop
icebp
jbe
pushf
push
clc
pusha
pop
fcmovnb
cs
pop
pop
ss
xor
std
ljmp
out
mov
mov
mov
sbb
adc
jbe
addr16
loope
out
sub
mov
add
mov
outsl
addr16
ss
sub
mov
test
cmp
js
pop
cwtl
shl
jbe
lret
jo
scas
lods
cmp
inc
cmc
test
arpl
inc
addr16
mov
cmp
mov
incl
dec
cmp
leave
jo
xchg
fbld
cmp
cmp
mov
ds
ljmp
loopne
dec
stos
sub
sbb
mov
vorpd
into
dec
lea
lret
inc
aaa
scas
dec
or
pop
lcall
imul
push
dec
aad
cmp
mov
inc
jns
jb
movsl
lahf
pop
sti
fwait
mov
cmp
adc
sbb
inc
mov
ret
sub
push
push
jle
sbb
jno
insl
pop
frstor
pop
or
cmp
test
add
inc
lods
shr
pop
fdivl
mov
fcoms
adc
pop
adc
sbb
sbb
mov
sbb
xor
jle
add
mov
lds
je
shl
enter
js
into
les
adc
iret
cltd
pop
fs
jl
shll
jp
mov
sub
jbe
adc
push
sahf
mov
xor
xchg
in
int
jg
and
fisubrs
sbb
xchg
lret
sbb
mov
test
pop
lahf
aad
push
jl
aam
jmp
pop
movsb
mov
int3
and
in
xchg
add
rep
repz
aam
loope
fdivs
mov
fdivrp
fsubs
jnp
inc
cmp
mov
lods
or
add
adc
lret
or
sahf
arpl
movsb
bound
lods
shlb
loopne
leave
pop
mov
mov
pushf
ja
add
aad
inc
rcr
je
popf
pop
inc
lock
pop
jae
jo
cmpl
sbb
popf
pop
sub
in
nop
stos
sub
ficoml
mov
inc
stos
add
mov
pop
imul
add
inc
movsl
push
dec
ret
mov
jne
sbb
mov
push
daa
test
sub
movl
push
dec
jge
and
push
pop
pop
push
fildl
xchg
and
jecxz
repz
aam
stos
inc
sti
pop
and
je
add
xor
jp
xchg
pop
sti
mov
ret
xor
pop
push
arpl
test
lods
insb
pop
lret
mov
pop
pop
stos
adc
mov
fdivs
mov
mov
jo
pop
rolb
dec
mov
lods
jno
outsb
stos
cmp
sub
pop
test
int3
scas
sbb
push
pop
pop
fcomps
in
jmp
shlb
xchg
imul
out
pop
jmp
or
mov
insb
cmp
cs
xchg
mov
inc
sub
sub
pop
lods
and
jb
sbb
add
add
out
in
sbb
iret
fisubs
lahf
dec
arpl
repnz
inc
pop
in
add
inc
or
jmp
pop
pop
pop
out
or
rcrl
pop
cmpsb
std
xchg
sub
hlt
mov
mov
xor
jbe
stc
pop
push
xor
movsb
dec
jb
xchg
push
lahf
das
icebp
dec
insb
jns
mov
ds
mov
outsl
or
pusha
pop
sub
int3
jbe
mov
mov
mov
bndstx
or
push
dec
scas
fists
lahf
iret
aas
mov
movsb
pop
xor
mov
int
mov
fsubs
data16
pop
mov
jnp
nop
pop
mov
repnz
ljmp
and
into
or
add
mov
pop
and
cli
movsb
out
pop
sbb
lret
push
sbb
sub
mov
cmp
dec
sub
sarl
ljmp
jecxz
cmp
lods
fdivrl
inc
loopne
ja
sbb
int
icebp
mov
dec
push
pushf
inc
sbb
pop
shlb
js
iret
rcr
out
cmpsl
cld
mov
mov
push
sbbb
xor
push
fcompl
or
sub
xor
adc
lret
in
pop
mov
pushf
xor
out
xchg
pop
vpxor
or
push
pop
cmp
xchg
sbb
pop
out
inc
dec
push
test
jne
add
xor
jns
mov
lods
add
pop
jae
pop
push
push
fldt
pop
ret
fcoms
call
pop
lods
mov
mov
add
enter
loopne
dec
add
pop
xchg
push
mov
pop
inc
or
aam
pop
arpl
mov
leave
test
aaa
pop
push
or
cmp
mov
push
push
data16
icebp
iret
push
roll
scas
roll
jns
pop
jbe
mov
rcr
mov
dec
shlb
cmp
jmp
inc
lds
fidivrl
pop
ja
pop
call
dec
es
icebp
stos
xchg
cwtl
js
sbb
mov
sub
jmp
xchg
xchg
mov
mov
test
pop
shrb
or
scas
lods
call
fdivr
and
pop
test
dec
jmp
jle
mov
jno
jnp
ds
jb
sahf
inc
pop
xor
mov
insl
pop
test
mov
pop
push
nop
mov
ret
scas
or
shrb
pop
mov
nop
jmp
orb
mov
xor
xor
aad
stos
mov
jmp
mov
sti
cwtl
cmp
add
in
add
test
inc
lret
cmp
fmull
out
sti
xchg
pop
add
fsubl
mov
sub
rcrl
xchg
cmp
into
push
push
mov
dec
dec
pop
xor
adc
int
hlt
inc
pop
ret
daa
inc
pushl
xchg
adc
sbb
cmp
ficompl
aaa
test
js
mov
cwtl
xchg
lcall
dec
mov
lahf
stc
pop
mov
mov
lods
fstpt
mov
sbbb
xchg
push
mov
out
leave
fidivrl
pusha
push
cmp
sbb
stc
jmp
cmp
cmpl
fstpl
in
and
push
out
pop
jp
fiaddl
subl
popa
pop
adc
mov
pop
cltd
sub
aaa
out
in
mov
or
jle
pop
sub
mov
push
xor
mov
pop
xor
hlt
jge
test
cmp
jne
js
lods
sbb
pop
rorl
pop
xchg
push
add
adc
cmpsl
add
xchg
gs
jnp
cwtl
xlat
mov
aad
js
pop
dec
in
mov
sub
xchg
and
dec
aad
push
nop
and
mov
jp
pusha
xchg
pop
sub
add
push
add
mov
outsb
cld
cmpl
sub
scas
pop
jno
push
das
mov
pop
sub
xor
bound
call
scas
imul
fucom
xchg
frndint
mov
adc
fistps
jecxz
insb
add
lods
leave
das
gs
sub
cwtl
rcll
pop
xorb
enter
lds
insl
inc
sub
dec
insb
mov
out
xchg
lcall
movsb
cmc
shll
dec
popf
push
adcb
movsl
mov
sbb
xchg
into
pop
insl
sub
ja
es
mov
pushf
pop
add
outsl
xlat
sbb
jne
bound
int
fidivs
leave
test
add
push
push
pop
cmp
jl
cmp
pop
js
mov
inc
in
shrb
mov
adc
subps
pop
lahf
js
mov
pop
mov
push
push
movsb
test
ss
int3
mov
dec
out
inc
test
js
cmp
push
out
push
clc
lahf
jb
pop
mov
test
sbb
adc
inc
movsl
xor
std
pop
mov
pop
lcall
cwtl
sub
mov
sbb
lods
pop
fcoms
sub
fistl
mov
int
or
pop
push
xlat
popf
int3
mov
pop
es
fsubs
add
sub
xchg
mov
push
mov
pop
loopne
aam
lahf
scas
test
mov
push
lds
xor
push
stos
mov
aad
fldenv
sbb
aas
sarl
pop
hlt
insb
mov
fldenv
sbb
mov
insb
and
ljmp
mov
fs
daa
cmp
sbb
lcall
cmp
iret
push
jbe
test
add
dec
inc
shlb
sub
ffreep
fildl
repz
dec
ljmp
pop
jbe
lahf
xor
stc
movsb
mov
repz
dec
push
sahf
jecxz
decb
jl
or
je
into
leave
and
push
sub
mov
dec
cli
mov
cmp
pop
and
push
inc
in
cmp
sbb
mov
leave
xor
push
mov
sti
mov
adc
jp
dec
fcomps
pushf
sub
in
mov
inc
pop
imul
push
sub
pop
int3
movsb
jl
add
test
or
inc
aam
mov
sub
inc
push
out
test
out
pop
add
pop
lods
popf
jle
in
mov
mov
inc
sub
repnz
and
lret
pop
and
inc
jmp
and
jnp
push
pop
out
sub
cmp
pop
sahf
pop
scas
cmp
pop
int
xchg
ja,pn
sub
or
into
mov
cli
idivl
cmp
pop
sti
mov
and
js,pt
jle
xchg
outsb
push
lods
cs
ficomps
cltd
xchg
outsb
addr16
ret
lret
lods
jecxz
sbb
mulb
data16
mov
xlat
push
pop
xor
mov
pop
scas
and
mov
adcb
jnp
mov
fadd
mov
shl
pop
inc
jno
mov
cltd
stc
inc
pusha
std
sti
sub
mov
mov
mov
xor
add
push
movsl
xor
nop
mov
or
jo
sbb
inc
sub
je
je
adc
stos
xor
jo
scas
dec
lret
pop
xor
fldenv
jge
scas
pop
cmp
jns
dec
cmp
pop
mov
imul
stos
leave
pop
adc
mov
push
dec
fisubl
out
movb
jmp
daa
inc
fdivl
das
sbbl
cmp
push
aaa
fisttpll
leave
push
pop
cwtl
ljmp
loop
hlt
mov
pop
xor
stos
jg
mov
aaa
pop
mov
andb
xchg
cmpb
or
pop
add
cs
inc
fmuls
cmp
fidivl
rolb
call
sbb
pop
stos
pop
jbe
mov
negl
xchg
dec
mov
mov
or
pop
xchg
xchg
mov
xor
jno
adc
cld
nop
pop
push
lea
addb
sbb
popa
fadd
and
pop
xor
pop
inc
imul
mov
push
sbb
cmp
lahf
pop
mov
addr16
fadds
jo
movsb
push
in
pop
imul
push
sbb
loope
adcl
in
ffree
push
and
mov
sub
imul
fstl
mov
nop
sbb
enter
pop
cmpsb
stos
mov
orl
stos
test
xchg
pop
int
inc
fnsave
adc
cmp
sub
xor
pop
mov
cmp
cmp
ljmp
fcoms
and
scas
pop
pop
cmp
sbb
cwtl
imul
or
pop
mov
add
xchg
mov
cmp
mov
fildll
mov
lahf
incl
add
mov
cmp
dec
ret
ds
mov
dec
roll
fcmovbe
ss
mov
scas
je
into
sub
push
ret
aad
mov
push
clc
pop
mov
out
mov
xor
ficoml
or
push
or
dec
fsubl
cmp
fcmovu
sub
pop
adc
leave
rcll
repnz
sbb
and
ljmp
into
jae
gs
inc
pop
dec
jp
xor
jle
jl
ss
xchg
adc
sbb
cltd
movsb
mov
jb
xchg
incb
pop
fs
adc
inc
mov
pop
hlt
jge
mov
cmp
mov
leave
icebp
pop
cmc
sbbb
jp
jecxz
nop
dec
pop
ljmp
or
pop
pop
daa
push
cmp
jle
push
fs
insl
inc
push
lret
jo
pop
pushf
imul
pop
xor
test
inc
jne
xor
sbb
pop
add
inc
lret
xlat
xchg
pop
mov
jno
sub
jle
cmp
lea
mov
sbb
pop
fdivrp
lds
lahf
mov
cmp
adc
mov
shrl
stc
and
or
enter
sbb
je
ret
mov
js
in
mov
mov
sti
cmp
fdivrl
xchg
sbb
mov
sbb
xorb
push
test
cmp
cmp
jnp
pop
pop
sahf
ja
fadds
fldenv
lahf
add
or
push
lahf
movsl
cli
cmc
icebp
lods
in
jnp
cmc
int3
cmpsb
js
mov
ss
int
pop
lods
lea
mov
jp
sbb
mov
scas
mov
adc
cld
mov
mov
xchg
inc
add
fidivrs
bound
pop
mov
mov
push
xchg
fisubl
xchg
dec
rcr
pop
sbb
xchg
sbb
jg
dec
mov
dec
add
xchg
mov
mov
lret
mov
divl
pop
data16
mov
add
ror
dec
pop
repz
push
sbb
push
sub
pusha
mov
ret
adc
xchg
push
sub
or
mov
pop
push
mov
pop
insl
or
outsb
jl
jb
je
jno
jbe
pusha
sbb
sbb
ss
xor
aaa
inc
pop
int3
pop
and
scas
lret
mov
loopne
sub
inc
xchg
push
pop
test
rcll
rorl
lret
cld
jbe
sub
jae
mov
pop
sbb
jbe
mov
pusha
out
pop
inc
pushw
imul
adc
fmull
pop
out
push
sbb
xor
jl
ss
loopne
mov
push
int
pop
push
jae
je
and
rcrl
rcr
pop
imul
and
mov
ficoml
xchg
outsl
insb
cmp
sbb
test
shrl
mov
dec
cmpsl
test
daa
fidivrl
mov
fsubrl
cwtl
dec
inc
pop
pop
xchg
mov
mov
lret
pop
push
mov
test
pop
and
jl
push
int
rep
out
mov
lret
addb
pop
or
push
aad
xchg
sbb
pop
cmpsb
mov
repz
jno
inc
jmp
push
pop
in
mov
mov
pop
jns
lret
test
pop
jae
lahf
pushf
pop
mov
outsl
andps
mov
mov
dec
fsubr
push
rol
push
popa
cmp
stc
ret
push
bound
sbb
hlt
and
mov
rcrl
pop
mov
lock
or
adc
data16
mov
insl
mov
pop
jne
mov
pop
push
in
inc
xchg
sbb
pop
into
sbb
sbb
cmp
hlt
cmp
lds
pop
sbb
xor
add
sbb
int3
jmp
pop
or
mov
mov
ja
incl
xchg
or
subl
fs
int3
fabs
mov
pop
pop
movaps
cmp
std
jb
pop
inc
mov
lahf
dec
loope
jbe
sbb
cmp
fs
cltd
icebp
pop
jb
inc
mov
pop
push
jbe
jge
cmp
mov
sub
fcompl
pop
cmc
mov
mov
mov
data16
mov
push
dec
aad
cmp
pop
xor
mov
fdivl
test
test
push
aam
adc
push
enter
xor
mov
xchg
cmp
adc
mov
stos
cmp
pop
mov
cltd
je
sub
rcrb
fnstsw
push
add
pop
divb
xchg
sub
mov
bound
sbb
rcrb
xchg
pop
insb
cli
outsl
fcomip
pop
imul
outsb
pop
push
jb
sbb
sbb
addl
and
pop
mov
push
inc
pop
sub
fsubrl
insl
and
or
push
mov
pushf
mov
inc
adc
cmc
out
std
pop
cmp
in
fsubl
insb
pop
in
mov
std
add
es
dec
aam
inc
dec
or
outsb
mov
dec
xchg
fnsave
leave
xchg
and
aad
pop
pop
out
pop
xor
mov
push
mov
fsubr
mov
subl
lods
pop
popa
mov
insl
pop
test
xchg
pop
out
jmp
pop
inc
push
sbb
cltd
rcrb
mov
pop
repz
cmpb
fwait
cvtps2pi
popf
adc
push
jns
mov
nop
aam
fwait
shlb
mov
fadds
add
push
in
sarl
pop
xchg
push
dec
test
hlt
lods
sub
pop
test
adc
pop
mov
ds
dec
icebp
hlt
cli
call
adc
dec
cwtl
ds
mov
ficompl
mov
pusha
lods
stc
mov
jbe
nop
out
add
pop
pop
sbb
je
negl
xchg
push
lret
jo
add
pushf
fsin
dec
pop
mov
jge
scas
pop
adcb
js
mov
mov
pop
aam
sbb
inc
pop
in
push
mov
pop
dec
addr16
mov
cmp
and
push
jecxz
mov
pop
fadds
mov
cltd
lcall
call
inc
sbb
es
dec
jbe
mov
jle
adc
jge
sub
dec
js
scas
testb
adc
dec
push
insb
jbe
mov
inc
xchg
inc
adc
inc
push
popa
ss
in
pop
cmp
andb
loopne
cmpsb
pop
stc
inc
dec
mov
and
inc
pop
adc
int3
lcall
out
mov
push
dec
in
inc
and
xchg
sbb
mov
jp
lods
ficomps
leave
jbe
fwait
cmp
jns
mov
rorl
pop
mov
aad
and
stc
mov
cmp
js
jb
cmp
pop
mov
lods
add
cmc
xchg
dec
pop
nop
shrl
xor
imul
cmp
jne
iret
fists
je
xor
sbb
pop
sbb
test
rcr
je
mov
insb
sbb
dec
fs
pusha
pop
int3
mov
pop
out
inc
push
dec
pop
leave
into
repz
pop
push
add
repz
or
int
dec
pop
lea
out
pop
popf
aas
push
pop
es
xchg
pop
lret
jbe
mov
pop
int3
xlat
lds
stos
lcall
push
in
fmull
fsubrs
push
jo
pop
mov
aam
idivb
repnz
les
pop
insb
lret
test
out
mov
xchg
andl
dec
icebp
sbb
sbb
mov
pop
ja
ret
out
iret
pop
sub
pop
mov
sub
outsb
jne
mov
jbe
das
lahf
movsl
fadds
shlb
fisubl
cmp
lods
inc
test
jl
inc
mov
test
scas
jge
daa
shll
lods
imulb
inc
push
inc
pop
test
pop
or
mov
in
pop
push
push
loope
aam
in
pop
pop
fldcw
mov
lahf
mov
mov
sbb
test
pop
lods
bound
or
loope
and
inc
inc
ja
je
dec
pop
or
test
xor
pop
mov
jg
shlb
movsl
or
in
lret
loopne
loope
sbb
rol
dec
jp
int
mov
decl
adc
xlat
insb
pop
and
cs
mov
neg
pop
xchg
mov
std
pop
xlat
mov
jecxz
xchg
int3
cwtl
push
test
push
imul
fwait
pop
loopne
cs
clc
push
add
scas
hlt
lods
push
mov
xchg
aaa
pop
in
sub
mov
out
inc
cmp
popf
mov
xor
je
jne
pop
test
lahf
fcoml
pop
pop
push
sub
cli
adc
mov
pop
xchg
or
jo
outsl
ljmp
xchg
cltd
stos
lret
imul
popf
popf
mov
pop
ret
outsl
sahf
int3
pop
adc
push
or
mov
lret
push
inc
sbb
xor
scas
sub
std
pop
push
pop
fdiv
ret
ror
pop
jl
push
mov
pop
int3
jae
lret
mov
add
sbb
and
cmp
pop
or
data16
xlat
xchg
pop
ss
pop
pop
shr
cmp
mov
testl
pop
testb
insb
pop
fists
pop
ds
inc
jnp
enter
sbb
pop
and
mov
ja
pop
add
pop
push
mov
mov
add
adc
shll
pop
cmp
mov
lea
nop
and
sub
lds
pop
cmp
pop
sub
adc
pusha
mov
test
mov
jmp
or
adc
and
push
xchg
mov
mov
in
int
imul
out
pop
cmp
ds
mov
and
jmp
pop
fwait
push
mov
ds
ljmp
jns
test
rorb
sbb
pop
pop
pop
push
jno
mov
lods
sbb
mov
sbb
pop
dec
int3
aam
mov
ffree
ljmp
sbb
test
mov
in
sbb
sbb
mov
pop
cmp
jge
jb
addr16
lock
cmp
lahf
cli
and
pop
shlb
pop
popf
outsb
sti
pop
push
ret
jmp
insb
add
lock
sbb
add
inc
pop
push
fwait
sbbb
adc
pop
inc
cwtl
sbb
mov
cmp
popf
xchg
mov
jecxz
and
and
subb
pop
sub
das
repnz
mov
negl
and
lods
out
pop
sbb
push
jno
das
pop
dec
icebp
fsubl
sub
lret
pop
mov
test
and
mov
out
or
mov
mov
inc
fwait
mov
xlat
sbb
out
xchg
pop
mov
cmp
mov
pop
loop
movsb
push
mov
fcmovnbe
fildll
cwtl
sbb
sti
mov
pop
xor
pop
push
int
insl
paddusb
add
out
mov
and
push
push
xchg
pop
mov
imul
pop
insb
xlat
out
jmp
neg
cmpsb
cmp
fildll
jl
push
mov
and
popa
stos
sbb
lods
mov
aaa
mov
xlat
cmp
or
out
push
cmpsl
int3
jbe
pop
fcompl
adc
pop
sub
pop
repz
sub
pop
fadds
xchg
fisubrs
lret
pop
jle
mov
cmp
mov
shll
sbb
mov
pop
icebp
sub
fistpll
ljmp
mov
pop
sti
int
sbb
cltd
xor
iret
xlat
imul
pop
add
scas
mov
add
or
shlb
sahf
loopne
scas
mov
inc
mov
mov
call
push
fst
add
mov
pop
fwait
aad
xchg
pushf
adc
pop
test
cmpsb
sub
mov
mov
add
xor
mov
dec
daa
lock
lret
dec
loope
insb
xchg
xor
xchg
inc
xor
in
fisubl
cwtl
xlat
mov
test
scas
sbb
je
lods
or
outsl
lcall
jecxz
sbb
inc
cmp
mov
out
scas
cmp
popf
stc
add
pop
fsubrs
or
sbb
pop
int3
incb
pop
aaa
lahf
inc
xor
and
mov
cmp
mov
sbbl
push
loopne
fwait
inc
sub
js
popf
adc
ljmp
fnstcw
push
out
cmp
mov
inc
mov
adc
and
mov
pop
jp
xor
testb
sar
sbb
icebp
pop
sbb
mov
imulb
cwtl
out
add
js
pop
pop
std
xchg
fs
pop
imul
mov
pop
in
xchg
push
jl
popa
mov
adc
dec
and
std
mov
pop
pop
test
xchg
fsts
pop
add
jb
pop
pop
lahf
or
mov
inc
add
push
aas
xchg
sbbb
dec
xor
pop
pop
xchg
outsb
lret
dec
pop
push
pop
xchg
mov
adc
jnp
cmp
inc
scas
or
jecxz
or
pop
xlat
test
scas
aad
cmpsb
jmp
adc
dec
mov
test
cmp
mov
jns
and
inc
jb
pushf
fdivr
sbb
pop
add
les
pop
mov
out
jae
or
test
mov
sub
xchg
popa
pop
daa
pop
je
pop
popf
sbb
mov
jbe
repz
add
testb
mov
in
pop
into
test
xor
jge
loope
pop
add
enter
sbb
cmp
mov
add
mov
lods
jmp
test
jl
mov
cwtl
add
or
cli
xchg
push
mov
sbb
popf
pop
sbb
fcoml
jno
xlat
cwtl
popf
lret
ds
xor
les
test
xchg
and
sbb
mov
mov
std
hlt
stc
repz
dec
jmp
imul
sub
jecxz,pt
mov
in
lds
leave
pop
sbb
fdivl
negb
insl
cmp
int3
inc
bound
mov
inc
pop
popf
out
adc
loopne
imul
jmp
inc
into
pop
repz
dec
scas
mov
xor
jo
or
icebp
sbb
pop
xchg
cmp
and
lcall
test
in
cmp
repnz
mov
jecxz
clc
pop
jmp
dec
mov
ss
pusha
pop
sbb
xchg
jecxz
rcll
pop
sub
mov
jne
aaa
cltd
adc
inc
jecxz
jbe
fucomip
pop
mov
add
mov
push
xchg
fldl
cmp
mov
push
cmp
cwtl
frstor
pop
clc
movl
insb
pop
sbb
mov
fisttpll
jp
jmp
push
scas
push
mov
in
sub
les
clc
sbb
mov
bound
pop
push
or
add
push
pushf
pop
push
jne
ret
mov
test
in
negl
push
and
ret
ret
das
aas
cmp
mov
and
lods
cmp
cmp
pop
out
mov
aad
insb
dec
fstpl
jae
lea
daa
cwtl
pop
cmpsb
es
arpl
adc
xor
pop
cmp
cwtl
pop
and
sbb
push
ds
xchg
jl
mov
pop
add
mov
fstpl
cmc
dec
pop
insl
outsl
pushf
rorb
xchg
stos
jne
mov
sub
pop
rcr
cwtl
pop
int
fs
rcl
xchg
inc
push
adc
fstl
cwtl
or
sbbl
xchg
addr16
push
push
add
mov
outsl
sbb
flds
lea
or
lds
sbb
aam
mov
push
adc
in
mov
loopne
mov
mov
lds
xor
pop
pop
dec
negb
sub
push
js
scas
or
mov
xchg
mov
test
mov
cwtl
xchg
in
cmpl
mov
inc
jle
pop
adc
mov
notb
mov
add
js
lahf
mov
xor
daa
dec
scas
cmpsl
fsubrs
ja
test
mov
fld1
jmp
adc
aaa
dec
into
gs
pop
pop
cmp
jecxz
pushf
or
xchg
adc
inc
fstpl
aaa
in
jbe
cmp
enter
arpl
and
fcomps
stos
pop
mov
push
cmp
fucomp
mov
sahf
mov
jb
cld
xchg
bound
cmp
pop
dec
jg
test
dec
jge
cli
mov
mov
pop
je
sbb
inc
pushf
fbstp
pop
pop
test
inc
lahf
aaa
fldl
fcoms
jne
push
mov
cs
pop
sbb
pop
test
mov
bound
mov
leave
push
and
arpl
fnstcw
xchg
daa
mov
pop
cmc
js
jbe
movsb
push
add
xchg
shr
sbb
or
sbb
lret
sbb
stc
push
ds
aam
dec
pop
cmc
fstpl
sahf
pop
cmpsl
cld
test
lea
mov
lock
das
sbb
inc
in
gs
sbb
je
outsb
int3
and
and
fwait
dec
pop
ss
jne
mov
mov
insb
pop
sbb
push
test
xchg
vcvtss2sd
aad
xchg
adc
pop
fadds
pop
and
insl
daa
jle
xorb
mov
pop
popf
outsb
cmp
dec
add
call
inc
mov
ja
add
pop
lret
jecxz
pop
call
cmp
pop
lahf
mov
xor
insb
out
xor
outsb
out
cmp
cmp
pop
lahf
pushf
je
mov
es
adc
aas
pop
js
push
mov
rorb
pop
xor
lds
popf
arpl
mov
and
pop
mov
dec
pop
adc
insb
movsl
sbb
lea
push
pop
sub
movsb
loopne
lret
mov
adc
dec
ret
sub
jbe
mov
jne
sub
out
mov
mov
cli
mov
sbb
testb
fwait
mov
pop
or
cmpsb
repz
mov
cmp
lock
add
lcall
mov
sbb
fs
in
and
insl
pop
mov
xchg
sub
orb
mov
pop
repz
rcrl
mov
adc
pop
hlt
mov
xor
dec
xchg
xchg
mov
cld
pop
sbb
xor
ret
pop
pop
sbb
pop
in
fnsave
cmp
fdivr
insl
mov
pop
pop
sbb
adc
hlt
data16
pop
push
jl
mov
mov
in
mov
pop
divl
ficoml
pop
jbe
cltd
fmul
pop
jle
mov
mov
dec
or
test
mov
popf
mov
lds
ja
in
sbb
cwtl
inc
mov
jns
out
or
je
sbb
lcall
dec
jns
pop
and
xchg
push
int3
dec
cmpsb
push
pop
or
push
lock
xor
adc
stos
pop
dec
add
pop
jns
jne
and
mulb
cmp
icebp
jb
mov
hlt
les
lahf
aam
mov
ljmp
mov
pop
add
dec
pushf
pop
imul
push
pop
dec
mov
mov
pop
xlat
dec
es
lods
popf
cmp
scas
xchg
ret
jmp
dec
jmp
mov
mov
xchg
int
mov
sub
push
lea
je
mov
pop
dec
nop
sbb
mov
xchg
or
and
push
pop
imul
push
sbb
fsubl
fnstenv
scas
ja
adc
jbe
loope
enter
outsl
pop
mov
sbb
dec
jbe
imul
dec
sub
adc
jecxz
jb
push
xchg
mov
stc
sbb
jge
pop
mov
fistpll
int3
push
out
cwtl
jbe
pop
pop
mov
pop
sbb
pop
cmp
fcoms
mov
pop
ljmp
jp
popf
nop
fdivrs
and
scas
push
xor
xor
stos
push
imul
jl
int3
add
jnp
mov
mov
push
gs
je
fstpl
xchg
les
in
bound
fdiv
push
jl
loopne
andb
push
push
xchg
in
insl
ret
fs
into
jb
inc
xchg
icebp
pop
push
ja
cmp
mov
subl
imul
pop
pop
ret
mov
fisttpll
pop
ja
andl
sbb
push
es
adc
je
aas
sub
adc
outsl
push
xchg
scas
repnz
nop
pop
fs
cs
cmp
jns
inc
cmc
imulb
pushf
adc
cli
jo
andb
or
orl
fs
xor
pop
je
imul
hlt
add
leave
fisttpll
pop
pop
and
cmp
xorl
test
add
loope
daa
call
cmp
pop
or
js
pop
jnp
outsl
add
dec
sbb
mov
push
fisubl
jne
mov
divb
inc
dec
sbb
lea
pop
add
pushfw
jno
push
pop
push
outsb
lret
nop
push
repnz
je
hlt
pop
cmp
fdivrs
pop
xor
in
or
clc
ss
or
adc
mov
lock
jbe
pop
pop
add
pusha
mov
mov
cmp
mov
loopne
mov
mov
sub
mov
sbb
mov
hlt
fcomps
test
or
inc
pusha
dec
push
push
cmpsl
call
lods
jle
mov
pop
sbb
mov
cli
ret
mov
xchg
fs
imul
cmp
icebp
pop
aam
mov
inc
push
and
pop
notl
lods
xor
pop
xlat
inc
xor
pop
mov
inc
dec
mov
pop
or
jb
icebp
push
pop
sub
push
fdivrl
in
add
push
fstpl
sbb
adc
fmull
jo
or
bound
mov
sbb
gs
inc
inc
sbb
xorb
insb
mov
cmpsb
cmp
sub
mov
scas
or
inc
jns
jmp
movsb
adc
pop
xchg
pop
xor
fsubrs
ficoml
dec
add
push
je
pusha
fdivrs
mov
loop
divb
movl
out
aam
popa
scas
xchg
xchg
push
mov
clc
out
cwtl
mov
fnstcw
xchg
sbb
mov
rcr
jecxz
push
imul
add
data16
pop
paddsb
lret
push
add
inc
pop
popf
sbb
jge
jbe
roll
jg
pop
cltd
xchg
stos
ss
jp
mov
hlt
pop
fldl
idivl
adc
test
outsl
pusha
mov
jbe
lcall
push
ffree
mov
rclb
xor
mov
sub
xor
pop
add
pop
adc
add
scas
sub
popf
scas
bound
incl
lods
out
pop
loope
adc
movsb
scas
fxch
popa
imul
inc
ja
push
cs
pop
cld
adc
pop
push
mov
xor
pop
call
dec
insb
repz
das
inc
lret
out
sbb
jbe
inc
and
adcb
push
repnz
out
sub
pop
sbb
mov
or
inc
mov
imul
push
pop
aad
jle
dec
daa
pop
out
imulb
movl
pop
dec
xor
jbe
repz
leave
stos
jecxz
pop
cmp
dec
and
mov
xchg
push
pop
or
xchg
xlat
lods
jo
enter
mov
inc
je,pt
psubusb
pop
orl
jge
adc
call
and
dec
lods
data16
cmc
mov
mov
mov
out
jbe
cmp
fisubs
js
pop
add
cltd
xor
scas
or
stc
push
popf
fdivl
dec
cltd
pop
jge
sbb
sbb
mov
sbb
inc
cmp
jo
sbb
cmc
popf
out
pop
pop
push
mov
push
push
mov
mov
insl
push
in
push
lahf
jmp
in
addr16
sahf
int
aaa
sub
int3
push
pop
add
cmp
xor
sub
xchg
cwtl
ss
mov
pop
cmp
mov
pop
mov
fcoml
adc
jbe
fs
popf
and
inc
fldl2t
es
mov
add
mov
mov
cmp
shlb
sbbb
outsb
mov
mov
test
pop
bound
in
add
and
cmp
clc
insb
iret
cld
jbe
lret
push
adc
pop
ds
sub
movsb
push
das
ret
pop
out
cmp
push
jb
mov
push
mov
push
adc
pop
or
xchg
xchg
cmp
inc
cmp
sub
fldcw
mov
cmp
js
es
mov
gs
lcall
dec
dec
stc
loop
adc
or
pop
xlat
popa
cmp
pop
jns
cltd
scas
push
add
rcl
out
inc
cmc
negl
aaa
push
mov
popf
pop
aas
pop
mov
adc
inc
and
je
es
in
jnp
mov
ss
add
pop
add
sarb
xchg
push
pop
jne
xchg
add
scas
push
jmp
mov
lret
mov
test
lds
in
jns
xor
pop
fnstsw
mov
sbb
dec
xchg
adc
hlt
mov
or
cmp
xchg
push
sbb
mov
push
sbb
test
sub
and
and
arpl
lret
xchg
lahf
sbb
push
incb
mov
cmc
call
xchg
or
aas
dec
test
out
adc
lods
push
fstps
cmp
clc
negb
arpl
mov
mov
pop
fdivrl
scas
mov
sbb
test
adc
pop
cwtl
jne
add
jb
jmp
int
inc
pop
lods
mov
jge
inc
mov
sub
lret
mov
mov
in
fbstp
aaa
inc
mov
add
xchg
lret
push
lods
mov
cwtl
add
pop
push
repz
or
ljmp
mov
daa
mov
pop
dec
mov
shl
lahf
stos
arpl
push
ss
mov
push
or
xor
sar
pop
sbb
adc
bound
insb
dec
jne
aam
lods
xor
rcll
pop
adc
push
fwait
in
xchg
mov
mov
inc
in
dec
add
jmp
push
sbb
test
push
adc
mov
insl
js
mov
in
sbb
jg
cld
push
cmp
pop
cmp
or
xchg
lret
pop
leavew
iret
sbb
out
jne
les
hlt
and
pop
adc
fistps
cltd
xchg
jge
gs
jne
pop
lea
pop
pop
scas
scas
sbb
push
mov
xchg
stc
xchg
sbb
scas
mov
mov
inc
ds
mov
sbb
and
pop
faddp
clc
insl
lcall
iret
hlt
pop
aam
push
inc
xchg
pop
arpl
mov
pop
lahf
sub
lds
loope
int3
pop
adc
sbb
in
flds
pop
outsb
movl
test
pop
stos
lods
loopne
push
fs
xchg
mov
jae
and
mov
negb
out
int3
bound
je
js
fs
jne
negl
test
add
xchg
dec
addr16
mov
cwtl
pop
add
jg
pop
das
scas
add
fdiv
adc
xchg
pop
fidivrs
fisttpl
out
pop
adcl
push
pop
ret
mov
inc
sbb
into
rcrl
pusha
jbe
cs
fnsave
les
pop
lods
add
cmc
rcrl
xchg
out
sahf
cmp
mov
inc
movl
sbb
sbb
fcomps
pop
jp
xchg
and
xor
sahf
jb
int3
mov
adc
jnp
sub
mov
mov
lahf
mov
shll
fidivrl
add
add
jns
jbe
jp
mov
push
xor
adc
pop
pop
cmp
call
out
lds
pop
mov
and
dec
lods
bound
pop
mov
pop
mov
scas
cmp
dec
pop
test
shrb
out
push
dec
and
push
test
sub
mov
data16
pop
or
mov
aaa
mov
fisubl
sbb
mov
pop
push
mov
lea
push
lds
mov
add
sub
push
or
cli
sbb
sbb
jb
aam
clc
xor
pop
pop
mov
ret
mov
es
imul
sbb
mov
or
mov
cmp
adcl
bound
daa
sbb
pop
ret
test
or
jg
imul
mov
xchg
in
pop
fcomi
xchg
xchg
inc
pop
sbb
data16
push
insb
dec
push
dec
adc
pop
cld
inc
pop
jle
sbb
adc
sub
fwait
int3
jl
jbe
jne
pop
cmp
push
pop
ret
pop
adc
lahf
cmpsb
push
out
pop
inc
cmpsl
push
aam
adc
lock
popf
leave
pop
push
push
test
nop
mov
lret
mov
jl
cwtl
mov
int3
dec
jo
pop
push
fidivl
push
xchg
ret
inc
mov
popf
rorb
lret
je
xlat
pop
inc
push
pop
dec
inc
pop
mov
ret
ret
pop
repz
scas
adc
insb
jb
mov
xchg
js
pusha
sbb
cmp
jo
pop
lcall
movl
lock
sarb
pop
and
jno
bound
push
dec
mov
cmpsb
ljmp
pop
fidivs
in
pop
xchg
sbb
pop
sub
ja
sbb
je
pop
sbb
xchg
pop
enter
subl
fdivs
mov
mov
jo
enter
out
mov
dec
mov
push
cmp
jnp
lods
pop
push
pushf
and
js
pop
in
push
sub
fst
pop
xor
dec
mov
gs
mov
pop
push
or
fdivs
pop
mov
pop
mov
fwait
dec
add
out
jg
je
xchg
in
sbb
mov
push
sahf
repz
inc
xlat
popf
pushf
lret
pop
sbb
sbbw
mov
scas
js
test
in
add
xlat
les
in
fisttpll
xchg
fimuls
fidivrl
out
outsl
push
std
stc
pop
sbb
in
cmp
fadd
dec
jle
pop
bound
daa
or
push
add
xchg
pop
movsb
jl
pop
test
cs
push
scas
lahf
xor
insl
pop
fdiv
pop
push
xor
out
faddl
mov
stc
inc
adc
pop
dec
push
add
int3
sub
add
pop
and
test
fadd
push
lods
mov
dec
push
jne
sbbb
mov
pop
pop
cmpsl
pushf
lahf
or
adc
js
mov
mov
pushf
mov
mov
cs
lea
xchg
pop
cmp
test
mov
in
pop
lods
xor
push
pop
in
arpl
call
inc
filds
mov
pop
xchg
lods
je
sbb
xchg
pop
lods
xchg
jns
jnp
and
test
dec
lods
push
add
adcl
scas
sbb
pop
jbe
loopne
repz
std
lahf
xchg
mov
test
inc
jl
xchg
into
arpl
iret
fimull
fbld
fwait
jbe
xchg
out
pop
test
push
push
xchg
inc
pop
popf
test
loope
pop
pusha
push
pop
clc
add
sbb
movsl
pop
stos
imul
wbinvd
loopne
lds
jl
pop
adc
mov
lods
cmp
out
cltd
xor
xchg
les
push
fbld
pop
test
je
icebp
cmp
push
push
mov
jo
leave
adc
in
sbb
je
fstl
mov
arpl
pop
mov
and
popa
daa
fwait
roll
insb
sbb
scas
fcomps
into
inc
cmpsb
scas
push
loopne
pop
in
test
inc
pop
jnp
pop
mov
jecxz
gs
mov
push
enter
repnz
mov
nop
adc
pop
cmp
mov
and
cmpsb
popf
pop
es
std
ss
pop
mov
add
fistps
push
les
pop
dec
leave
jb
pop
adc
add
xorl
inc
mov
js
push
sbb
int3
xchg
mov
xor
sbb
push
pop
or
aad
push
in
pop
mov
es
push
enter
adc
pop
sbb
shl
pop
imul
sub
and
arpl
les
scas
pop
mov
jnp
fdivrs
pop
mov
mov
add
repnz
pop
jno
outsb
jo
or
lock
mov
aad
pop
cmp
ss
loope
lods
gs
fwait
cmp
outsl
mov
mov
cmp
ret
push
jecxz
pop
cmc
test
in
cmp
cwtl
pop
mov
mov
pop
popf
gs
cli
sub
push
mov
xchg
add
add
pushf
je
and
sahf
shrl
mov
jns
jb
popa
xchg
mov
add
loop
jb
mov
jae
push
pop
pop
add
lahf
imul
pop
pushf
jle
sbb
cmp
int3
pop
mov
xor
jae
rcll
cmpl
push
cltd
lahf
pop
cld
fs
lock
dec
xchg
ret
scas
fwait
orb
fadds
jbe
mov
jnp
aad
sbb
dec
and
bound
in
push
sub
push
std
adc
jl
lret
cmp
sahf
lret
ret
sbb
in
jb
push
cltd
fcompl
out
dec
in
and
lret
mov
cwtl
stc
xor
pop
aam
jbe
mov
mov
fldl
inc
inc
xchg
pop
shlb
repnz
repz
inc
insl
test
lret
push
push
pop
mov
test
rol
daa
lds
outsb
in
notl
cmp
mov
out
daa
mov
movsb
sahf
divl
and
cli
test
sbb
mov
cmp
pop
dec
cmc
push
jno
xchg
pushf
ja
in
sbb
imul
push
jo
xchg
pop
sbb
mov
inc
pop
xchg
sarb
dec
ret
cli
xchg
xchg
lods
mov
sbb
pop
faddl
cmp
cmpsl
out
hlt
mov
add
jb
inc
or
inc
shrl
pop
repz
int3
mov
outsb
mov
fsubr
jge
cli
or
inc
sub
mov
pop
ffree
adc
das
mov
pop
testl
jl
rep
jo
jnp
lods
int3
pop
xchg
mov
sub
fistps
and
jecxz
sub
mov
lods
outsl
jle
pop
ja
loopne
mov
popf
mov
fcoms
movsb
push
cmp
das
mov
insl
or
inc
dec
mov
addb
repz
pop
rcr
rorl
std
dec
sbb
pop
test
int
frstor
cmpsl
inc
pop
mov
sbb
js
cli
pop
pop
fldenv
push
pop
inc
jbe
jecxz
or
cmpsb
mov
fnsave
sahf
imul
pop
cmc
mov
pop
mov
lods
in
aaa
fnstsw
pop
std
sti
rclb
add
ficompl
xor
xchg
lea
sbb
sub
mov
loopne
fcomps
negl
int3
pop
push
mov
jnp
pop
sbb
and
mov
pop
loopne
ficompl
pop
repz
jo
mov
lods
pop
cmp
inc
cli
jmp
fcoms
pop
adc
inc
loopne
in
dec
aaa
and
adc
sbb
dec
sti
int3
pop
iret
jl
sub
pop
lea
outsb
push
in
and
pop
xor
dec
fcompl
add
in
or
jns
pop
pop
pop
sub
mov
test
fisttpll
xchg
adc
scas
negl
ret
mov
fnstenv
lahf
dec
loope
or
in
mov
fnsave
mov
shlb
pop
fsubl
scas
mov
stos
xchg
mov
movsl
sbb
and
push
das
pop
xor
js
mov
fs
lret
je
fistpl
lods
lea
loop
out
std
mov
leave
pop
lcall
out
sbb
cltd
pusha
fldcw
pop
lods
nop
movsb
sbb
mov
flds
jmp
and
pop
jg
loop
ss
dec
cmp
pop
outsb
jne
lret
xchg
pop
mov
pop
fildl
add
jnp
jno
pop
push
jmp
in
pop
sar
fldl
xchg
lods
jl
jecxz
pop
scas
pop
adc
out
xchg
es
mov
fisubrl
pop
xchg
cwtl
sbb
test
push
shlb
test
jl
pop
xor
loopne
outsl
xor
jo
pop
cmp
sbb
mov
es
sahf
xchg
sub
or
scas
push
mov
shr
ret
lea
scas
add
decl
sbb
loopne
xchg
subb
add
pop
mov
jbe
scas
in
xorl
dec
push
pop
rolb
sbb
mov
xchg
pop
and
adc
sbb
mov
arpl
jecxz
sahf
pop
cmp
lahf
shlb
jbe
xchg
inc
cmpsl
adcl
dec
aas
or
or
inc
mov
shrl
in
fimull
pop
cmpsb
lods
push
push
xchg
sbb
cmpl
aad
imul
rcrl
pop
pop
inc
sbb
out
iret
pop
pop
inc
pop
inc
push
mov
pop
inc
jo
pushl
add
es
mov
mov
scas
mov
out
inc
pop
push
pop
jmp
adc
lahf
xor
or
movb
pop
int
out
pop
mov
jbe
jle
stos
pop
jno
push
repnz
mov
fisubrl
inc
pop
call
mov
pushf
pop
pusha
xchg
adc
mov
imul
data16
adc
xchg
pop
or
pop
repnz
push
push
sbb
fsubrl
mov
pushf
lcall
sahf
bnd
out
pop
mov
cmp
lods
int
mov
jae
mov
add
hlt
pop
pop
adc
push
sbb
pop
shll
mov
std
push
popf
adc
push
repz
sbb
out
rcrb
aaa
push
mov
aad
insb
jecxz
pop
out
sbb
mov
outsb
js
rcr
dec
pop
arpl
scas
shll
out
leave
jnp
jl
xchg
mov
outsl
pop
int
pop
popa
xchg
scas
add
mov
test
scas
push
sti
into
sbb
pop
pop
cmp
push
and
or
sbb
bound
xor
sub
sbb
sti
mov
sbb
mov
pop
mov
fs
ret
jp
pop
add
test
mov
push
inc
stos
je
les
inc
add
jbe
xchg
adc
mov
loope
pop
arpl
push
scas
pop
push
or
int
dec
outsl
js
in
sbb
add
sub
or
loopne
lret
mov
lock
imul
imul
test
jmp
cmp
pop
test
lods
fstpl
call
lds
int3
push
xchg
ret
dec
rclb
mov
cltd
push
sbb
pop
stos
notl
mov
pop
push
cmc
mov
mov
push
mov
mov
rcrl
sbb
dec
lea
sti
and
pop
dec
aad
adc
std
negb
lea
dec
les
sub
jecxz
jp
aas
imul
jle
faddl
lods
or
push
stos
inc
ds
in
mov
xchg
nop
pop
mov
lahf
xchg
pop
sub
jecxz
leave
pop
mov
add
lahf
scas
mov
or
and
cmp
inc
dec
loop
push
jo
fwait
add
or
aad
cmp
mov
xor
es
push
add
lods
xchg
sub
xor
cld
popf
pop
mov
movl
adc
pop
dec
mov
int
push
mov
sbb
jbe
mov
sbb
cmpsl
mov
in
rorb
sti
adcb
movsl
into
vmovd
add
mov
xchg
pop
aad
cmc
push
incb
and
push
mov
cwtl
out
cmp
or
jbe
je
dec
in
push
sbb
fnstenv
fcomps
ret
cli
mov
adc
fucomip
lock
in
insb
and
pop
jecxz
lret
jne
pop
mov
loop
mov
cwtl
ret
fs
out
push
sub
ds
insl
mov
fcomp
and
dec
jbe
cmp
fidivrs
jns
add
movsl
push
scas
jp
xor
mov
gs
es
lahf
lods
sub
aas
jmp
shr
out
scas
mov
in
xor
stc
fcmovbe
je
xchg
aad
lock
push
sub
mov
insb
hlt
sbb
sbb
sub
lds
sahf
gs
jle
mov
pop
adcb
in
fadd
pop
bound
xorl
sub
jno,pt
or
jbe
add
dec
mov
xchg
sbb
mov
pop
test
cmc
cltd
int
fsubl
add
mov
lea
mov
jmp
fistpll
sbb
xchg
mov
sub
pop
sbb
lcall
add
dec
pop
je
fcomps
push
popa
pop
sbb
jg
mov
sarl
mov
imul
fdivs
add
hlt
xor
cmp
push
aam
lds
cmp
cmp
xchg
icebp
pop
in
push
inc
pop
sahf
clc
jecxz
mov
dec
mov
fcomps
and
inc
sbb
in
loopne
lahf
mov
mov
dec
mov
sbb
test
pop
out
lds
jnp
adc
ret
mov
in
cmp
push
in
mov
dec
cmp
sbb
sbb
mov
and
add
sbb
inc
and
pop
lret
es
jecxz
mov
in
mov
mov
pop
mov
pop
or
inc
dec
cmp
cmpsb
int3
pop
jl
call
jb
sbb
std
xchg
pand
sbb
pop
pusha
scas
lods
mov
adc
sbb
dec
sub
cltd
add
mov
xchg
pop
xchg
fcomps
jp
mov
mov
xor
or
cmp
add
inc
sub
adc
addr16
jae
jle
dec
je
jo
mov
lods
mov
testl
insl
cmp
inc
pop
je
gs
pop
or
mov
cli
xchg
movsl
pop
loopne
mov
pop
sbb
lret
mov
lds
adc
fwait
test
pop
in
mov
inc
cmpsl
and
je
dec
aad
push
lds
or
cltd
aaa
fists
mov
gs
fldenv
push
mov
mov
clc
cltd
dec
dec
push
aas
mov
pop
or
lret
push
push
out
movsb
lret
insl
cmp
lahf
mov
adc
addr16
sbb
scas
pop
pop
dec
clc
jne
into
mov
jp
jge
xchg
mov
or
sub
lcall
ss
test
or
mov
loope
jle
pop
es
push
test
push
inc
sbb
sarb
bound
flds
dec
dec
scas
push
stos
pusha
mov
adc
xchg
cmp
mov
je
lret
sbb
test
mov
adc
fcomps
cmp
dec
push
ja
cmp
insb
js
mov
and
fwait
or
fisttpll
je
faddl
inc
jbe
pop
jo
mov
popf
ds
jne
lahf
fldt
or
dec
pop
inc
mov
push
jo
add
stc
mov
ret
sub
fistpll
rclb
filds
sub
int3
xchg
roll
cmp
mov
pop
outsl
jb
pop
adc
mov
nop
mov
cmc
lret
les
pop
mov
repz
stc
mov
jg
rep
mov
pop
imul
dec
and
xchg
maskmovq
adc
pop
push
pop
aam
inc
mov
in
adc
fstps
dec
jne
rcl
scas
fwait
lret
sbbb
push
rcll
int
sbb
add
lods
sqrtps
scas
cmp
fdivp
insb
jmp
push
push
hlt
decb
lods
cltd
jae
lret
int3
jmp
cwtl
pop
xor
pushf
aam
mov
add
jl
das
mov
ja
dec
mov
in
dec
nop
std
jmp
je
jbe
stos
jne
out
aas
ss
push
pop
sub
sub
xchg
pop
hlt
or
and
mov
jmp
mov
addb
jne
lods
jbe
ja,pn
jns
and
lds
jmp
or
sbb
jbe
pop
mov
std
mov
pop
mov
das
mov
sub
sub
pop
outsl
dec
jno
into
stos
pop
pop
fimull
pop
inc
sarl
push
test
pop
popa
push
pop
sbb
jmp
and
or
stos
pop
pop
outsb
lahf
jmp
dec
repnz
mov
adcb
sbb
aad
daa
outsb
movsb
call
mov
scas
fistps
insl
jbe
mov
inc
in
enter
sub
push
pop
sub
sti
test
andps
repz
lret
mov
out
pop
inc
pusha
push
push
sub
or
jno
xchg
scas
jb
rorl
dec
xor
scas
pop
nop
cltd
aas
es
cmp
mov
iret
lea
sub
sub
int
xor
push
lea
fiadds
dec
cltd
and
in
fstl
jecxz
lret
enter
mov
ja
xchg
jle
mov
pop
adcb
jo
pushw
pushf
repnz
inc
pop
jmp
fistps
xchg
pop
ja
jl
ljmp
test
aas
int
push
faddl
mov
test
mov
sub
jmp
add
sbb
cmp
daa
rorb
push
mov
pop
rcrl
lock
ret
or
call
sbb
sbb
pop
mov
mov
fstps
sarb
mov
dec
out
sbbb
mov
mov
pop
in
pusha
xchg
xchg
outsb
pop
adc
fcoml
fisttpll
push
xchg
fidivs
pop
mov
or
test
pop
xchg
jo
out
in
xchg
push
in
mov
mov
cmp
lock
push
lahf
pop
push
lret
mov
xchg
pop
mov
xchg
mov
hlt
jecxz
scas
mov
jge
aad
xchg
adc
and
push
pop
jns
sbb
or
xchg
leave
pop
mov
inc
and
push
ss
mul
shrb
xchg
sub
popf
inc
lahf
pop
in
inc
leave
xor
sahf
repz
mov
movsb
jne
or
sbb
fbld
xchg
jns
cmp
pop
lahf
sbb
shr
jmp
negl
ljmp
pop
test
fmull
mov
aas
mov
test
outsl
jge
in
pop
sbb
pop
addr16
adc
lcall
or
pop
jecxz
repz
pop
nop
ret
popa
mov
aad
pop
adc
add
lret
fdivrs
push
mov
pop
popa
pusha
or
negl
fcompl
and
fnstsw
pop
xor
jmp
rcrb
pop
pop
push
fbstp
out
fstpl
out
lea
mov
mov
cmc
pop
xchg
mov
mov
cmp
pushf
pop
repz
shlb
ret
jne
inc
cwtl
jge
pop
or
xor
pop
adc
pop
lret
cmp
jge
or
pop
pop
and
adc
pop
sbb
arpl
dec
bound
pop
test
and
stc
pop
pop
pop
test
mov
pop
jb
mov
in
add
xchg
mov
imulb
pusha
fdivr
insl
mov
mov
inc
mov
cmp
movsb
je
jae
cmp
lret
movsl
test
xlat
inc
pop
mov
outsb
lcall
pop
enter
push
lret
or
arpl
movl
pop
mov
in
dec
pop
pop
hlt
in
push
mov
pop
out
vmread
sbb
test
sbb
jmp
lea
mov
mov
add
cmp
jne
cmp
jl
or
sub
mov
mov
push
out
clc
stos
mov
mov
pop
bswap
fsubl
rclb
daa
dec
dec
adc
cmp
add
fisttpll
pop
insl
test
mov
sub
mov
adc
sbb
insb
add
mov
cmpb
in
xchg
pop
xchg
repz
mov
flds
mov
dec
jb
mov
pop
je
fcoml
shll
aad
arpl
xor
cltd
jne
mov
pop
mov
lahf
pop
daa
push
pusha
mov
jmp
test
loope
mov
fcom
jge
lea
outsl
jno
push
pop
mov
sbb
ss
pop
sahf
xchg
push
loopne
jbe
test
adc
rclb
fnstenv
push
pop
ss
xor
or
insb
lea
xchg
rorl
jbe
in
mov
xor
ret
xchg
inc
int3
sbb
mov
in
jl
repz
ja
negl
pop
sbb
xor
add
pop
or
mov
insb
xchg
pusha
mov
jne
fcomps
pop
ss
push
push
lcall
int3
pop
jne
mov
js
mov
sub
jb
pop
das
nop
ljmp
sbb
hlt
xchg
lods
shrb
fcompl
adc
mov
jmp
jp
pop
pop
xchg
inc
xchg
mov
sbbb
dec
sub
fstpl
push
push
fcmove
pop
add
add
ficomps
pop
pop
push
sub
movsb
lock
and
stc
push
repz
xchg
mov
sub
pop
in
adc
adc
ret
repnz
cmpsb
mov
jecxz
pop
push
jae
dec
jb
push
hlt
ds
ljmp
adc
pop
lock
cltd
test
scas
pop
and
fcmove
fdivs
mov
mov
fucom
push
js
loopne
jbe
pop
fadds
lock
push
loope
push
add
xchg
sub
lea
push
jge
xchg
test
loopne
inc
cmp
pop
pop
mov
pop
imul
xchg
pop
stos
add
js
in
lcall
sbb
mov
mov
mov
or
cmp
push
push
cmp
out
dec
jg
dec
ds
lret
sbb
in
push
cli
lods
pop
aas
push
stos
push
jecxz
negb
pop
jecxz
adcb
push
cmp
insl
out
iret
xchg
mov
pop
xchg
and
dec
dec
adc
xchg
js
pop
fisttps
daa
push
stc
mov
push
enter
push
das
pop
dec
nop
push
daa
ss
sbb
pop
test
scas
pop
add
push
pusha
cmpsb
sbb
add
bnd
pop
sbb
std
jbe
insb
add
mov
cmp
cltd
jae
and
clc
jb
insb
icebp
pop
out
mov
leave
mov
test
cmp
add
push
pop
push
or
sbb
sub
sub
in
xor
xor
add
pop
xor
repz
imul
push
mov
xchg
lret
xor
inc
push
stc
lock
fcomps
pop
mov
clc
cmp
dec
jne
lods
imul
cmp
jecxz
inc
mov
inc
addb
into
or
pop
je
les
pop
inc
lods
jbe
mov
xchg
cmp
push
pop
aaa
push
xchg
out
dec
lods
jecxz
push
push
add
dec
mov
test
pop
pop
xor
mov
sub
fldenv
mov
fldln2
jno
std
dec
pop
cmpsl
ret
or
xor
pusha
pop
sti
test
cmp
sbb
pop
fsubs
lods
pop
je
jae
mov
es
scas
jno
xlat
sahf
inc
jecxz
xchg
adc
pop
sub
movsb
jne
cltd
fcomp
mov
add
pop
lret
pop
push
pushf
inc
and
in
pop
lahf
sti
repz
fcmove
andl
subb
jbe
fprem
repnz
addb
jne
clc
shl
push
rorl
inc
mov
fimuls
add
pop
pushf
in
cmpsl
in
push
xor
push
mov
jno
movsl
jl
adc
in
jecxz
ret
inc
jmp
mov
lcall
mov
sbb
cmc
jne
loopne
pop
pop
ljmp
ja
inc
loope
add
inc
shlb
mov
pushf
mov
jl
repz
push
aam
inc
sbb
pop
subl
pop
adc
repz
pushf
pop
stc
js
pop
xor
insl
lods
pop
pop
adc
clc
add
mov
pop
adc
data16
xor
cs
pop
call
es
mov
dec
sbb
adc
fidivrl
arpl
add
adc
scas
adc
pop
adc
enter
data16
pop
dec
mov
pop
or
pushf
repnz
cmpsb
sbb
in
repz
js
mov
jne
add
push
push
xor
daa
lea
pop
jbe
mov
pop
or
sbb
bound
dec
and
mov
loopne
dec
mov
lahf
pop
dec
lcall
pop
hlt
jmp
xor
mov
sub
out
fcoml
push
sub
mov
mov
out
push
into
sbb
mov
and
pop
push
mov
xchg
clc
es
dec
jo
pop
mov
stos
push
pop
and
pop
push
pop
in
jp
testb
add
jge
aad
mov
mov
and
mov
fcompl
xlat
fs
adc
xchg
mov
pop
add
lea
sub
arpl
ficomps
pop
mov
dec
cmp
pop
sub
push
out
pop
xor
adc
pop
fisubrs
test
xor
js
out
lock
repnz
das
jg
mov
out
ret
push
repz
pop
xchg
sbb
insl
pop
stc
jecxz
adc
mov
xchg
mov
mov
jle
loope
sbb
stos
xchg
xor
cmp
push
mov
sahf
push
pop
mov
sub
outsb
adc
sbb
jmp
out
in
mov
test
xchg
pop
into
dec
xor
mov
gs
lods
push
dec
mov
fsubr
sbb
mov
fcomp
mov
ja
les
fwait
js
repnz
inc
movl
mov
jbe
test
fdivs
jge
fcompl
in
xorl
dec
nop
out
sbb
stos
cmp
mov
out
fstps
mov
mov
fsubs
push
ljmp
in
fsubrs
pop
mov
xorb
or
pop
sub
lock
loop
pop
test
jae
xchg
cmp
aam
push
leavew
pop
ficomps
int3
push
inc
jl
jb
lret
scas
xor
inc
pop
cmp
mov
pop
pop
out
cmp
jne
xchg
insb
mov
push
dec
sbbb
fdivrs
mov
rolb
cwtl
outsl
and
pop
cmp
adc
enter
pop
push
shr
cltd
cmc
pop
add
ljmp
cwtl
stc
or
mov
and
ret
pop
inc
and
mov
mov
nop
and
ret
pop
pop
fimull
pop
sub
lock
rcr
pushf
shlb
dec
fcom
enter
inc
xchg
add
rcr
repnz
pop
insb
iret
clc
ficoml
push
and
test
xor
mov
lock
add
and
inc
pop
fs
test
repz
outsb
enter
mov
pop
inc
mov
push
into
pop
pop
cmp
lret
jle
je
push
pop
pop
and
int
shrl
std
clc
in
pop
mov
xchg
inc
ficompl
inc
mov
xor
xchg
sbb
inc
lea
nop
push
jb
push
out
push
pop
mov
mov
mov
dec
dec
push
lea
fs
inc
rcr
mov
addr16
aam
cltd
and
sbb
lock
pop
inc
pop
mov
cmp
inc
adc
mov
pusha
rcr
inc
mov
cli
pop
insl
xchg
adc
pop
xor
clc
sbb
push
pop
fisttpll
mov
xchg
clc
cmp
mov
mov
or
lea
fdivrl
sbb
xor
mov
xor
sbb
mov
icebp
cmc
xchg
adc
sbb
cwtl
mov
fbstp
cwtl
lret
dec
sbb
into
cltd
adc
pop
arpl
arpl
push
cli
and
dec
divb
cmp
shlb
int3
lret
out
mov
sbb
xchg
les
das
fnstcw
cmp
ja
xor
cs
aam
sub
pop
xchg
pop
ja
mov
jmp
pop
sti
push
out
pop
mov
repnz
mov
in
xor
push
pop
jbe
mov
add
cwtl
inc
js
shlb
push
add
mov
cmp
mov
clc
pop
shlb
mov
xchg
push
push
jecxz
pop
mov
mov
popa
mov
adc
cltd
jb
jae
pop
adc
ds
clc
aas
jle
add
pop
pushf
test
scas
cmpsb
cmpb
inc
movsb
dec
pop
push
pop
jo
push
and
inc
lret
pop
outsb
sbb
mov
aad
insb
pop
insl
add
loopne
sub
fcmove
inc
filds
cmp
fsub
je
int3
das
pop
xor
in
push
arpl
pop
pop
inc
cmp
inc
inc
add
sbb
pop
push
add
lods
jmp
adc
fildl
jge
fnstenv
sub
pop
nop
das
loop
lods
orl
cmp
inc
adc
outsl
sbbb
mov
js
sbb
sub
data16
and
xchg
pop
pop
push
xchg
xchg
dec
push
mov
fstl
pop
xchg
pop
sbb
pop
loop
xchg
cmp
rcrb
cmp
pop
or
ret
adc
pop
xchg
mov
cmp
je
push
mov
and
insl
cmp
jge
ret
push
mov
push
push
sbb
call
inc
jg
inc
mov
pop
jle
pop
add
cltd
outsl
jne
jle
xchg
sbbl
dec
push
roll
pop
je
add
clc
xchg
sbbb
cltd
mov
ss
dec
sbb
inc
sub
mov
sti
clc
int
sahf
and
mov
xchg
mov
xchg
sbb
aam
xchg
mov
loop
js
inc
pop
pop
pop
pop
fst
fcompl
cmp
cmpsb
pop
jb
mov
stos
pop
mov
mov
cmp
loopne
pushf
in
cmp
xchg
fst
pop
push
sub
and
int3
sbb
pop
cltd
test
dec
pop
or
add
cmp
mov
bound
or
stc
sbb
dec
jne
pop
lods
imul
int
push
jae
sbb
pop
mov
scas
mov
mov
pop
or
shrb
in
out
ret
flds
mov
pop
rorb
int3
add
leave
ss
pop
mov
add
mov
gs
call
ss
mov
cmp
inc
mov
cs
negb
mov
inc
aam
mov
pop
pusha
int3
cwtl
inc
and
sub
cs
jns
ret
je
xor
cmpsb
repz
and
inc
cmp
mov
cmp
lret
push
andl
lods
push
sub
jecxz
adc
js
cmpsb
mov
mov
test
test
pop
sahf
sbb
jmp
pop
addl
in
mov
pop
xchg
cmp
push
sub
add
cmp
pop
lret
pop
mov
lods
nop
cmc
mov
cltd
or
pop
mov
and
dec
lahf
adc
dec
pop
sbb
fisubl
inc
insl
adc
ss
sbb
jne
and
pop
test
mov
sbb
aaa
mov
sub
gs
stc
pop
lea
pop
scas
sub
cwtl
repz
and
xchg
xor
pop
or
dec
pop
cmp
mov
lret
or
push
xor
sub
bound
pop
cmpsb
aad
xchg
jl
fcompl
fisttpl
fnstcw
pop
jo
cmp
into
pop
sbb
fcompl
dec
pop
aaa
pop
sbbl
repz
mov
adc
in
pop
fisubl
sbb
jne
push
loopne
pop
inc
xorl
inc
pop
sbb
pop
ret
lea
push
rcrl
fisttpll
or
out
inc
dec
fldt
in
pop
shlb
fsubl
fstl
dec
sbb
add
push
fistpll
pop
fsubl
push
ficomps
shrb
sbb
int
pop
mov
or
add
fwait
jb
sar
pop
xlat
hlt
cmc
bound
pop
call
mov
jbe
in
mov
xor
data16
divl
fistpl
mov
xor
pop
xor
subl
add
pusha
sbb
popf
push
idiv
repnz
or
insl
out
sbb
lods
pop
mov
push
pushf
leave
xor
clc
xchg
test
mov
push
pop
repz
or
imull
rcrl
mov
out
or
pop
std
ds
mov
fsubr
xchg
xchg
cmp
pop
cmp
in
or
sub
orl
inc
or
xchg
jbe
scas
ret
fbld
and
test
fmuls
jecxz
repz
push
fsubl
lods
or
lods
lock
lahf
inc
xor
mov
cmc
in
sbb
push
flds
pop
add
out
dec
mov
std
addr16
jl
xchg
mov
arpl
pop
sub
outsb
pop
pop
repz
shlb
outsb
adc
or
ss
movsb
sub
outsb
push
adc
pop
in
ret
xchg
jns
sbb
lea
mov
and
pop
sbb
jg
inc
sbbb
inc
subl
lea
mov
sti
fcoml
pop
ss
mov
mov
sbb
inc
pop
pop
aaa
sbb
and
nop
pop
mov
fsubrs
push
dec
lock
push
lods
jmp
jp
jl
sub
cmp
and
adc
or
lods
jno
stc
sbb
in
cmp
dec
rcrb
mov
sbb
pop
and
sbb
inc
testl
sub
push
push
test
push
jno
pop
pop
std
cmp
push
ljmp
mov
out
dec
pop
jp
mov
int
and
add
add
movl
cld
cmp
leave
xor
mov
pop
loope
mov
sbb
jg
ffreep
out
pop
dec
dec
push
pop
inc
and
mov
pop
outsl
int3
outsb
adc
xchg
mov
fld
popf
mov
inc
inc
push
add
or
mov
add
fcomps
outsl
mov
inc
jmpw
dec
lea
pop
push
stos
imul
out
mov
sub
pop
bound
cltd
outsb
pop
sub
jbe
jae
inc
mov
pop
in
sub
pop
adc
roll
test
or
sbbb
and
fnstenv
mov
pop
es
push
fnstcw
leave
cwtl
test
mov
stc
ja
or
jecxz
add
pop
lods
fnstcw
test
cmpsl
pop
push
xchg
rorl
jne
mov
ss
dec
sti
sub
or
sub
int
jp
arpl
std
pop
sbb
ficoms
mov
ljmp
mov
pop
sets
pushf
sahf
dec
pop
cmp
outsb
pop
aam
sbb
mov
xchg
scas
or
in
xorl
call
hlt
into
xor
out
and
aas
sbb
int3
pusha
mov
adc
dec
rol
pushf
and
xchg
mov
sub
dec
mov
lahf
into
jbe
inc
scas
sysenter
jmp
jb
xor
je
outsb
movsb
rcr
pop
sub
pop
test
lods
inc
xchg
sbb
int3
inc
pop
shll
mov
xor
rorl
sbb
into
inc
outsl
add
fwait
imul
xor
and
setge
xor
pop
adc
push
in
lret
xchg
mov
scas
stc
pop
sbb
outsb
es
xchg
sbbb
repz
or
pop
sbb
fimuls
mov
push
dec
push
xchg
scas
jg
bound
fcom
pop
aas
pop
xchg
cmpsb
lods
test
out
cmpsl
xor
sbb
pop
sar
jnp
ss
gs
out
pop
lods
fucomp
cmp
adc
imul
or
pop
pop
xor
xor
fdivrl
pop
cwtl
sbb
pop
std
imul
adc
stos
mov
push
pushf
inc
mov
add
pop
in
inc
ljmp
mov
pop
repz
scas
lea
sbb
mov
fdivrs
out
pop
adc
pop
cmp
test
mov
outsb
xchg
fldl
daa
adc
xlat
rcrl
stos
pop
call
les
and
pop
stc
xor
lret
cmc
sti
pop
clc
divl
scas
adc
jmp
imul
lahf
bound
sbbb
into
jmp
cltd
loopne
dec
or
inc
pop
cmp
and
js
sbb
pop
fsts
pop
orb
push
aam
pop
push
sbbl
xchg
jbe
stc
push
mov
and
lret
cmpsl
mov
loopne
stos
xor
fdivs
or
and
cmpsl
dec
scas
lea
repnz
adc
xor
data16
xchg
iret
pop
mov
pushf
sbbl
ja
xchg
add
cmpsb
pop
negl
lret
es
lds
scas
jne
mov
testb
jge
fsubl
push
mov
pop
sti
jns
sbb
pop
negl
test
inc
mov
push
push
pop
les
pop
push
sbb
aas
outsb
pop
sbb
add
pop
loopne
mov
and
stos
popf
xchg
aad
and
imul
or
in
cmovge
or
push
pop
xchg
cmp
leave
xchg
inc
std
pop
jbe
test
je
aam
frstor
aas
mov
mov
mov
out
adc
sti
inc
test
cmpsb
xchg
dec
push
cwtl
test
ja
sbb
jbe
pop
lods
data16
inc
xor
loopne
and
push
outsl
push
cmc
pop
jne
cmp
cltd
add
loope
sub
mov
hlt
fstpl
scas
test
mov
sbb
pop
adc
in
pushf
insb
popa
out
sbb
mov
fnstsw
lods
cmpsb
or
sub
lods
test
cmp
sbb
fidivs
add
fdivl
cmpsl
jl
and
pop
fdivp
dec
fsubrs
in
push
jge
stos
push
sbb
add
inc
in
mov
ljmp
sbb
out
sbb
mov
sub
inc
pop
push
push
pop
dec
inc
pop
ljmp
fdivl
fldl
insl
popf
push
in
fnsave
xchg
mov
sub
adc
pushf
mov
pop
flds
ret
cli
push
mov
insb
mov
mov
loope
sbb
mov
pop
mov
out
pop
je
inc
fbld
insb
cmp
std
sbb
pop
dec
cmp
fwait
outsb
xchg
inc
into
pop
cmp
in
in
sbb
lea
pop
mov
enter
pop
xchg
fisubl
pop
pop
add
push
pushf
mov
gs
mov
cld
sbb
cltd
xlat
lods
pop
int3
lahf
pop
lods
sbbl
insl
xchg
imul
fs
arpl
repnz
pop
mov
push
popf
fcmovnu
mov
inc
sub
out
cltd
in
pop
lret
pop
es
idivl
jbe
sub
inc
nop
pushf
pop
xor
or
pop
sbb
flds
and
dec
inc
xor
clc
jmp
mov
mov
data16
cmp
jbe
jle
or
jmp
cmp
int3
lcall
or
mov
xor
stc
in
ja
test
sti
cmp
flds
push
mov
stos
sarl
pop
cmp
popf
pop
jne
or
pop
jp
pop
jae
lds
fmull
xchg
mov
icebp
push
test
push
dec
in
pop
lods
and
repz
jmp
xchg
in
add
dec
decb
ljmp
mov
xor
mov
sbb
sbb
sbb
mov
loopne
sbb
push
in
mov
mov
mov
pop
jbe
push
insl
mov
mov
dec
ret
push
sub
call
xor
sbb
or
pop
push
insb
hlt
or
cmc
ret
fistpl
repnz
sbb
fwait
xor
lds
cmp
xchg
xchg
flds
jnp
into
or
imul
bound
sbb
pop
push
jmp
mov
pop
clc
and
jns
pop
aam
adc
leave
je
shl
rcll
sbb
outsl
xor
mov
movsl
push
addr16
repnz
xchg
sbb
mov
shll
in
sub
xchg
jno
pusha
xchg
push
sub
arpl
mul
xor
cmc
pop
xchg
push
imul
adc
pop
mov
pop
lahf
mov
mov
pop
pop
sub
or
stos
cmpsl
push
pop
pop
pusha
pop
sahf
push
push
dec
xor
xchg
jl
pop
or
mov
mov
jnp
inc
les
lcall
mov
pop
pushf
aad
inc
inc
addb
jg
loop
and
movsl
das
dec
or
xor
fsubr
sbbl
xchg
push
pop
repnz
out
xorb
pop
lcall
cmc
pop
jno
add
push
pop
imul
xchg
mov
iret
mov
test
mov
jp
inc
out
or
lea
cmp
sub
or
push
int
pop
adc
mov
mov
add
dec
push
mov
daa
insb
pop
repnz
cli
or
dec
cs
or
fldenv
pop
add
xor
adc
push
fstpl
movsl
jnp
push
je
mov
pop
mov
or
test
push
out
push
sub
lahf
hlt
lret
xor
ficompl
std
inc
cmp
pop
into
outsl
rorl
pop
or
shrb
xchg
xchg
xchg
mov
or
test
push
inc
ds
push
sbb
mov
cmc
mov
movsb
and
lods
jmp
xchg
sbb
ret
cs
jb
jp
js
jmp
inc
and
arpl
mov
sub
mov
dec
stos
mov
outsl
pop
sub
test
imull
add
cmp
call
pop
lods
push
stos
call
sbb
jle
cmp
mul
pop
adc
stos
pop
sbb
in
xchg
mov
or
filds
pop
mov
cmp
int3
jb
es
inc
stos
ret
sbb
faddl
add
pop
xlat
mov
inc
mov
xor
adc
adc
pop
pushf
lock
add
rcrl
lahf
test
adc
stos
pop
mov
xor
imul
pop
pop
lahf
ret
and
loope
mov
call
add
stc
jp
cli
dec
lret
imul
cmp
xor
dec
push
scas
imul
push
mov
std
mov
cltd
push
pop
xchg
fsub
pop
mov
inc
lret
stc
ja
jp
and
pop
push
aam
xchg
or
fbld
ljmp
add
js
inc
mov
dec
mov
jns
cmp
or
out
and
sub
dec
cmpsb
inc
push
fsubr
fisubl
xchg
adc
mov
cltd
mov
pusha
mov
xor
int
fwait
imulb
mov
mov
ds
stc
out
and
mov
xchg
cltd
adc
jle
mov
dec
cwtl
mov
out
dec
bound
dec
inc
sbbb
mov
test
out
js
or
pusha
movsb
ja
xor
bsf
fsts
adc
fisubs
imulb
ds
jae
adc
sub
rcll
jmp
insl
or
pop
inc
mov
adc
pop
sub
inc
sbb
pop
push
jle
xchg
bound
jbe
cltd
insl
xchg
mov
pop
out
lock
xchg
fstps
xor
pushf
and
or
mov
mov
cli
fs
test
mov
pop
lret
pop
jo
lahf
adc
sbb
stos
jno
pop
lock
mov
push
push
or
adc
and
rcr
or
dec
test
rolb
lods
outsl
mov
xorb
sbb
ja
pop
xchg
ret
pop
jmp
cmp
mov
ja
nop
insl
fcmovu
mov
dec
jae
push
push
mov
dec
push
sbb
clc
fsubr
inc
rcrl
xchg
cmp
sbb
pop
push
jns
push
and
sbb
pop
sbb
jb
pop
addl
jb
imulb
mov
push
xor
xor
imul
and
test
xchg
outsb
ss
pop
in
xor
je
push
int3
mov
xor
dec
jecxz
lahf
mov
dec
cmc
scas
pop
pop
loopne
or
and
lods
enter
mov
lods
dec
sub
int3
pop
bnd
or
pop
notl
cmp
jmp
cmpsl
repnz
mov
clc
xor
aam
mov
sbb
sub
adc
pop
jnp
cmp
adc
ret
cmpsl
sbb
jno
lock
cltd
das
push
imul
pop
pop
std
push
sbb
pop
cs
fiadds
lret
inc
pop
int3
scas
test
sbb
sti
cs
sbb
test
repz
jo
push
add
inc
mov
cmp
adc
xchg
lret
lret
jo
jns
lods
pop
cmp
stos
mov
push
jmp
dec
and
sbb
jae
lea
cmpsl
test
jmp
mov
pop
fs
fdivrs
pop
or
and
cmpsb
in
outsl
flds
jp
xchg
test
popf
sarb
cmp
pop
fcompl
fcmovbe
lods
stos
lahf
xchg
xchg
scas
xor
lds
popa
and
adc
divb
pop
sbb
dec
ss
pop
aaa
shr
adc
and
pop
xlat
cld
nop
xor
xchg
or
cmp
mov
arpl
mov
pushf
cmp
add
aas
jecxz
scas
cmp
pop
scas
mov
out
outsl
mov
outsb
sbb
ljmp
jb
sti
jo
out
lods
mov
push
and
leave
adcl
sub
add
int
sbb
push
push
test
pop
push
inc
adc
jbe
mov
and
jo
or
adc
frstor
leave
lods
jl
and
dec
sbb
mov
fsubrl
jne
mov
xchg
mov
and
xchg
loopne
imul
sahf
xor
add
lods
cmp
ljmp
mov
pop
ret
jbe
movsb
add
pop
mov
aas
xchg
scas
ja
int3
pop
mov
addr16
adc
pop
adc
add
pop
cmp
subb
xor
pop
icebp
or
mov
xchg
jmp
sub
xchg
jo
popa
test
gs
dec
rolb
cld
pop
push
mov
add
mov
or
mov
pop
jge
dec
add
int
js
out
cli
js
pop
jge
inc
push
pop
cs
jl
xchg
addr16
test
pop
jge
mov
ficoml
pop
sbbl
inc
inc
lds
mov
jne
das
imul
pop
ret
in
into
sbb
stc
xor
dec
jo
cltd
jp
mov
lds
test
cmp
imul
mov
push
xor
dec
mov
adc
jne
cmp
sahf
cmp
in
jge
inc
pop
arpl
js
fdiv
mov
lahf
je
cwtl
push
push
cmp
outsb
cmp
jb
pop
pop
and
mov
rcrl
xchg
inc
fsubrl
cld
pop
arpl
pusha
add
stc
push
pop
nop
inc
sti
jle
ds
rorl
push
adc
adc
rcr
pop
roll
fstpl
sbbb
push
xchg
inc
test
pop
sub
sub
inc
dec
inc
lcall
sbb
f2xm1
std
sub
mov
out
pop
lcall
dec
repz
push
adc
xchg
mov
popa
scas
test
in
pop
repnz
rcrl
pop
cs
lods
jl
mov
negl
aam
in
sahf
xor
xchg
dec
jo
mov
mov
dec
insb
push
test
jl
stc
xor
mov
dec
ljmp
pop
mov
in
cmc
leave
xchg
call
lock
inc
mov
lret
aas
fimuls
idivb
mov
jp
das
mov
sbb
ret
lcall
int3
sbbb
cmp
pop
xor
pop
push
lahf
jb
fsubs
lahf
add
and
aaa
add
mov
out
rcll
lahf
jg
fiadds
in
jecxz
shlb
scas
pop
sub
cmpl
pop
sub
push
fwait
testb
xchg
pop
cmpl
pusha
pop
mov
xorb
xor
cmp
jnp
jp
jg
mov
mov
inc
sbb
lods
or
stc
pop
dec
push
leave
dec
lcall
in
pop
lahf
lods
daa
cmp
mov
add
std
cmp
and
mov
xchg
out
adc
xchg
mov
arpl
pop
or
mov
xchg
cmp
pop
pop
add
mov
out
sub
lock
leave
rclb
stc
fstps
adc
rcrl
test
cmp
xchg
push
add
mov
cmp
xlat
pop
mov
jo
pop
lret
hlt
sbb
jl
pop
add
test
pop
scas
xchg
xchg
mov
flds
outsb
clc
push
mov
daa
aam
pop
ficompl
xor
shrb
jo
stc
sbb
pop
xchg
lock
ja
andb
shl
cld
data16
mov
add
pop
js
jmp
rorl
out
xchg
aas
mov
or
mov
pop
test
mov
mov
push
gs
test
and
arpl
enter
pop
or
sub
pop
ds
pop
push
in
or
inc
pop
inc
lret
or
mov
cmp
fdivr
inc
in
or
sahf
movsb
pop
jo
repz
pop
xchg
std
ds
call
clc
sbb
stos
cwtl
jg
dec
pop
ret
or
es
sbb
xchg
mov
jecxz
and
movsl
inc
pop
mov
mov
jp
push
adc
push
fldenv
xlat
inc
lea
mov
cmp
pop
jnp
cltd
repz
xor
gs
xchg
int
pop
jmp
pop
aam
lods
outsl
mov
xchg
xchg
wrmsr
rcrb
pop
push
arpl
push
pop
mul
jns
popf
add
pop
xchg
lcall
inc
or
int
rorb
pop
in
and
sbb
mov
cmp
jo
daa
jns
pop
pop
fwait
dec
inc
mov
movsb
clc
scas
sub
xchg
pop
jmp
cmpsb
push
fsts
orb
inc
in
push
or
xor
dec
mov
jg
nop
mov
fwait
test
out
int
pusha
pop
test
mov
iret
add
mov
pop
xor
push
cld
fisubrs
notb
jne
push
popf
iret
xor
lds
outsb
xchg
cltd
and
mov
jno
cmp
push
push
pop
outsl
lcall
sub
jnp
push
mov
and
pop
jb
adc
mov
fdiv
test
xor
sbb
iret
adc
mov
pop
inc
mov
add
stos
jne
pop
fbstp
cltd
xor
xor
leave
ret
xchg
pop
pop
add
inc
xchg
setb
or
imul
mov
pop
in
loop
in
lea
mov
xlat
sbb
mov
fnstsw
movsb
imul
pusha
stc
xchg
fmuls
lock
cmp
jnp
push
add
add
cmp
adc
cli
stos
dec
jbe
aad
pop
jmp
fsubl
leave
jle
mov
pop
inc
mov
out
repz
fistpl
pushf
lahf
test
fucomi
dec
push
shll
jle
scas
adc
popa
sub
push
mov
or
scas
cmp
fdivs
mov
ficoml
adc
into
adc
push
sti
sub
fiadds
inc
pop
test
pop
loope
out
pop
add
enter
rcrl
cmpb
shll
daa
repnz
in
adc
pop
ret
jp
fs
jbe
pop
sbb
xlat
jge
dec
mov
pop
pop
xchg
add
or
cwtl
call
push
xor
pop
xchg
sbbb
pop
cli
repz
adc
mov
nop
dec
sub
bound
call
pusha
mov
jne
pop
mov
cmc
mov
pop
jbe
pop
or
int
inc
pop
lods
iret
pop
ret
mov
inc
add
and
lods
jne
cmp
xchg
test
adc
cmp
adc
cmc
popa
mov
popa
js
shrl
mov
sbb
lds
sarl
sbbb
jne
sub
mov
xchg
push
lods
lret
adc
or
xchg
enter
cwtl
push
lcall
sahf
adc
cmp
int3
jno
out
aas
cltd
xchg
inc
outsb
ja
sbb
pop
scas
cld
fwait
mov
adc
sbb
aam
out
pop
sbb
sbb
pop
jg
les
lret
push
leave
pop
push
shlb
push
pop
mov
add
push
or
mov
inc
aas
xchg
leave
mov
shrl
mov
stos
or
sub
stc
pop
push
int
cltd
fsubrl
stos
fidivrl
mov
sub
pushf
cmp
or
arpl
and
and
idivb
mov
fcompl
in
push
or
and
and
jno
ret
cmp
dec
scas
mov
jbe
lret
cmpsb
mov
mov
push
push
lea
out
or
loope,pn
clc
sbb
pop
filds
xchg
xchg
cltd
xchg
cmp
pop
in
xchg
pop
jge
stos
xchg
je
jbe
stos
sbb
add
pop
dec
and
movsl
scas
arpl
out
int
add
pop
pop
mov
inc
push
mov
mov
and
push
movsl
pop
cmp
cmp
pop
std
nop
mov
jbe
mov
hlt
pop
pop
dec
add
icebp
push
inc
popf
jl
pop
scas
pop
mov
in
pop
sti
pop
mov
or
popa
mov
test
cmc
in
in
pop
lret
lahf
lcall
loope
xchg
lahf
dec
xchg
icebp
xor
loopne
mov
fdivrs
inc
adc
xchg
or
fdivr
cmp
lock
cmp
cmp
adc
and
push
dec
jae
inc
mov
push
xchg
lahf
data16
fstps
mov
movsb
or
ljmp
mov
lret
push
nop
sbbl
lea
out
mov
aam
in
push
popf
cmp
adc
insb
pop
test
sbb
jp
jg
jnp
pop
or
push
cwtl
test
in
call
test
ss
mov
popf
mov
mov
outsb
pop
pop
pop
insb
push
outsl
xchg
push
rcrl
push
jo
xchg
sbb
sub
sbbl
jmp
es
jno
outsb
mov
outsb
cli
pop
jmp
pop
ret
flds
imul
loopne
mov
inc
adc
subb
push
pop
mov
imul
arpl
mov
push
call
je
dec
jo
pop
stos
sub
lock
inc
and
dec
push
sbb
mov
pop
push
mov
out
and
add
inc
and
xchg
das
nop
fldenv
sub
fdivrl
fmuls
mov
jge
stos
xor
andl
or
into
arpl
testl
test
stc
add
adc
imul
ret
mov
xrelease
andl
mov
add
jbe
jno
rcrl
mov
add
mov
imulb
pushf
sub
std
fs
scas
cmc
sbb
andl
arpl
xor
mov
mov
sub
pop
jge
add
jnp
mov
pop
sbb
test
pop
pop
pusha
or
sub
stos
and
push
sbb
scas
sub
or
pop
push
pop
adc
jge
sbb
sahf
aas
bound
cmc
push
scas
push
notl
xchg
shrl
pop
fstp
enter
insb
pop
lahf
jnp
xchg
scas
cmp
rclb
pop
lret
jmp
cmp
outsb
mov
and
fcomps
or
fwait
insb
ljmp
lret
xor
pop
sahf
dec
xor
xchg
pusha
rorl
repz
fisubl
gs
pop
int3
repnz
push
data16
cltd
ss
imull
repz
mov
rorb
fs
pop
pusha
imul
pop
lahf
jp
into
jo
cltd
push
pop
push
mov
flds
dec
pop
dec
inc
mov
repnz
pop
cmp
push
aam
push
mov
pop
push
fisubrs
sbb
fs
mov
test
filds
sub
add
rorl
pop
int
cmp
adc
mov
cmp
repnz
dec
add
mov
loop
xchg
lds
cs
lret
mov
aam
dec
pop
cmc
pop
push
aad
mov
pop
lret
push
in
mov
scas
push
inc
push
cmc
pusha
mov
adc
dec
mov
fnstsw
repnz
cli
push
sbb
add
sub
add
nop
mov
xchg
aam
mov
mov
xchg
push
daa
test
push
xchg
icebp
rorl
les
outsl
mov
pop
xor
mov
xchg
loope
repnz
mov
out
inc
pop
xchg
rcrl
sub
popa
gs
mov
pop
add
dec
mov
pop
stos
int3
pop
mov
and
cmp
js
pop
decl
xchg
fisttps
pop
iret
pop
pop
outsb
mov
and
add
mov
gs
jae
loop
cli
dec
xchg
jmp
pop
mov
loop
xchg
cwtl
mov
pop
sbb
adc
pop
cld
dec
rcrl
divl
pop
pop
jo
xchg
cmp
mov
lods
sbb
ret
pop
rcrb
pop
fistpll
inc
pop
pop
or
in
push
inc
stos
int
out
movsb
lods
out
jno
rcrl
adc
mov
popf
es
sbb
mov
sbb
jge
mov
inc
cs
out
sbb
in
out
cmpsb
js
pop
pop
rcrl
xchg
scas
or
pushl
int3
pop
stc
loop
hlt
pop
mov
and
je
out
add
and
shll
mov
icebp
nop
ret
cmpsb
jl
mov
and
aam
mov
pop
mov
adc
sti
or
ror
inc
pop
pop
inc
mov
sub
pop
pop
cli
add
jge
cmpsb
push
push
xor
pop
in
ret
pop
lds
icebp
xchg
pop
movsl
rcrb
popl
lret
push
cmp
das
pop
adc
sbb
pop
cmpl
fdivl
xchg
mov
mov
xchg
push
aad
mov
xor
inc
bound
sub
fildll
pop
je
xor
int3
mov
adc
pushf
pop
and
imul
sub
movsb
hlt
repz
cmc
pop
mov
dec
lret
mov
xchg
pop
jl
pop
iret
lods
mov
inc
ss
jp
mov
inc
xor
pop
pop
repz
cld
imul
jb
and
insl
and
fnsave
lods
push
mov
fistpl
repz
mov
aas
sbb
pop
fistpl
lds
lock
sbb
aaa
cmp
sbb
mov
xchg
xor
xor
push
jns
xor
adc
jle
enter
mov
orb
cld
add
push
sbb
xchg
ret
mov
adc
aad
cli
imul
jg
sbb
jae
in
dec
mov
pushf
cmpsb
adc
mov
out
mov
or
add
out
mov
lahf
mov
mov
mov
cmp
pushf
nop
lahf
repz
jmp
fisubl
add
jecxz
stc
push
pop
ficomps
push
sub
arpl
cmp
or
fmuls
pop
loop
and
mov
dec
pop
test
into
mov
add
sbb
or
inc
cli
hlt
cmp
sahf
xor
push
sbb
xchg
pop
xorb
mov
pusha
pop
push
cmp
xor
mov
decb
cltd
ds
sbb
dec
bound
xor
movsb
cmp
pop
sarb
inc
mov
inc
sbb
cmp
lock
mov
jl
xchg
mov
add
data16
loope
sbb
test
push
shlb
lea
cmc
sahf
xchg
pop
out
pop
aaa
imul
into
pop
daa
mov
adc
or
mov
stos
cmpsl
add
inc
jg
out
jb
insl
add
mov
push
mov
pop
xchg
push
fnstcw
cmpsl
test
mov
stos
mov
mov
loopne
sbb
push
and
mov
cmp
ficompl
or
daa
aad
fmuls
pop
adc
xchg
cs
pop
fwait
mov
imul
sub
loopne
lock
pop
out
pop
inc
je
mov
xchg
sub
push
xchg
pop
or
dec
ret
add
xchg
je
movsl
add
dec
orb
test
pop
shll
xchg
mov
bound
int3
pop
pushf
call
ljmp
cs
cmp
lcall
lahf
and
push
addr16
inc
cmpsl
shlb
fidivs
int
outsl
lcall
mov
cltd
pop
std
bound
pop
inc
lret
mov
out
imul
movsl
mov
jne
outsb
lcall
jo
or
pop
mov
test
cmc
pop
cwtl
ja
mov
sub
mov
repz
jae
mov
pop
sub
fs
fisubrl
mov
lds
pop
test
inc
pop
out
sbb
jbe
fcoml
pop
adc
dec
aam
inc
lea
mov
clc
push
xor
pop
icebp
test
sahf
xchg
mov
add
outsl
pop
cmp
push
insl
arpl
cmpsb
lret
sahf
jns
fisttpll
xlat
mov
gs
insb
mov
mov
push
add
loop
mov
mov
mov
xor
loop
pop
add
inc
lret
mov
xlat
cmp
adc
pop
add
sbb
in
dec
mov
xchg
and
arpl
mov
pop
fbld
repnz
mov
dec
nop
lock
jno
sbb
cmp
jnp
xor
or
addr16
sti
xor
in
sarb
enter
sub
cli
mov
call
mov
fildll
dec
and
jb
shll
mov
out
mov
xor
call
pop
xor
pop
pop
ja
ja
icebp
pop
das
out
mov
data16
mov
pop
push
call
je
mov
fildll
pushf
adc
test
xchg
jle
gs
cmpsl
daa
aam
jp
pop
inc
mov
xlat
cmp
dec
mov
pop
fwait
insl
and
jne
in
scas
add
cmc
scas
popf
fdivrs
jbe
shll
push
mov
outsb
test
and
xchg
lahf
mov
fnstcw
js
xchg
jbe
xchg
jno
negl
xchg
std
dec
cli
adc
aas
scas
mov
and
test
push
scas
add
xor
pop
and
daa
mov
xor
cwtl
pop
inc
and
sub
cwtl
mov
jno
sbb
fidivrs
mov
xor
sti
cmp
sub
xchg
cwtl
test
cmp
mov
sbb
pop
xor
push
mov
or
dec
js
push
stos
notb
icebp
out
lcall
mov
ss
cmp
repnz
xchg
in
scas
or
cmp
cmc
lock
add
fwait
test
fsts
mov
aad
jno
lret
mov
and
jl
shrb
dec
pop
movsl
mov
mov
popa
mov
inc
lea
pop
mov
cmpsb
arpl
cmp
sbb
lea
das
xor
cltd
mov
lods
mov
adc
loop
test
xlat
push
cmp
xor
loope
fistpl
pop
scas
adc
mov
or
ja
or
pop
sti
int
mov
mov
out
or
sub
jo
repnz
push
test
stos
and
jecxz
test
dec
insb
fsts
das
add
jae
js
xchg
fwait
or
xchg
inc
in
ja
ja
add
pop
inc
aaa
leave
ret
push
call
in
fwait
sub
sbb
stos
add
lods
push
mov
mov
imul
pop
fstpt
add
int3
rcr
stos
aad
rorb
mov
ss
leave
scas
out
xor
sbb
jo
notb
sub
out
mov
inc
push
cmp
gs
iret
sbb
mov
bound
cmp
adc
mov
mov
movsl
ds
sbb
sub
std
jge
mov
xchg
sub
scas
mov
adc
dec
call
pop
popf
outsb
jle
scas
jbe
cltd
stos
fimull
jmp
push
push
imul
mov
xor
in
addr16
adc
pop
ss
cmp
pop
pop
ret
btc
das
jns
pop
enter
lods
xchg
xor
pop
ss
nop
negb
sbbl
mov
pusha
lds
jnp
pop
iret
jmp
mov
stos
mov
mov
jns
sbb
test
ljmp
mov
out
inc
pop
sbb
mov
insl
pop
pop
xor
movsl
push
sahf
mov
rol
test
clc
mov
mov
xchg
js
dec
pop
in
jg
roll
inc
addr16
and
lea
and
insl
push
mov
scas
in
pop
jmp
fs
test
pushf
pop
sbb
ficomps
pop
cmpsb
fmuls
int3
mov
outsb
mov
jns
lock
xor
cwtl
push
cmp
xchg
mov
pop
fdecstp
fwait
mov
xchg
inc
or
cmp
pop
mov
mov
pop
lahf
das
cs
aam
bound
movsb
dec
sub
xlat
and
pop
idivb
jecxz
jl
insl
jnp
or
jns
dec
pop
call
sub
push
sbb
dec
sub
push
dec
lcall
pop
int3
aas
pop
rolb
imul
sti
add
pop
xchg
adc
xlat
jg
ffree
sahf
ret
outsl
pop
or
fadds
pop
in
gs
pop
xor
fsubrl
push
or
jecxz
pop
cltd
cmp
mov
adc
push
mov
ficompl
arpl
cltd
mov
pop
pop
out
call
mov
jecxz
shll
push
and
pop
push
pop
mov
outsl
dec
dec
scas
scas
out
mov
pop
fcompl
push
psadbw
lea
mov
and
in
dec
pop
test
out
mov
or
stc
jmp
dec
add
xchg
movsl
jg
adc
pop
das
pop
adc
jl,pn
cmp
xchg
xor
mov
pop
mov
mov
jbe
pop
dec
push
inc
xor
fwait
jo
in
jl
pop
pinsrw
lret
arpl
inc
dec
imul
jmp
push
stos
mov
pop
adc
leave
fimull
mov
ljmp
or
xchg
das
cltd
repnz
or
mov
cmp
ds
xchg
sub
pop
sbb
sbb
inc
mov
pop
push
ret
mov
das
leave
mov
ljmp
and
in
dec
jnp
fstpl
int
push
and
and
sbb
mov
lret
pop
mov
inc
lds
nop
pop
ret
fstps
sbb
shrl
scas
pop
stc
sub
fists
mov
inc
ja
sbb
cmp
enter
shll
test
and
loop
jns
jnp
pop
sahf
scas
xor
cld
pusha
nop
pop
or
lock
pop
dec
xor
sbbb
pop
mov
mov
pop
nop
test
dec
jne
or
pop
addr16
data16
ja
loopne
jmp
test
fs
inc
popa
pop
and
fildl
int3
xorb
xchg
pop
xor
sbb
add
mov
xorb
pop
in
les
pop
jo
lret
aad
mov
das
add
jbe
pop
push
cmp
pop
dec
cmp
mov
jecxz
pop
xor
rcl
pop
pop
scas
pop
and
push
ss
jge
adc
add
dec
stos
and
sbb
and
mov
subl
sbb
dec
pop
cmc
pop
add
xchg
and
mov
loopne
jl
cmp
mov
cmp
shr
pop
sub
aam
lret
stos
sub
adc
or
js
aas
ds
inc
mov
and
push
je
clc
adcl
pusha
push
xchg
pop
test
scas
push
daa
inc
std
stc
cltd
clc
int
ficompl
push
fldenv
add
add
or
mov
testl
popa
dec
pop
adc
mov
cmp
push
mov
out
shl
pop
lds
dec
mov
std
xchg
into
fidivrl
jmp
jmp
pop
pop
mov
movsl
shlb
sub
cwtl
mov
enter
adc
push
mov
lods
mov
cmpsl
pushf
int
mov
dec
lret
pop
mov
mov
push
sbb
dec
add
cltd
jmp
loope
test
sub
sti
fiadds
dec
ja
jo
adc
pop
fnstcw
movsl
jae
pop
and
push
xchg
mov
outsl
in
jnp
xchg
lcall
nop
lahf
jmp
sbb
or
das
out
pop
xor
inc
fwait
pop
mov
or
iret
mov
rcrl
pop
loopne
cmc
xor
mov
mov
lea
iret
dec
pop
cmp
pop
mov
sub
das
lcall
pop
out
leave
pop
mov
mov
dec
mov
into
pop
and
push
stos
cmp
xchg
mov
sbb
pop
inc
mov
loopne
rol
ss
mov
xor
pop
test
inc
jo
add
in
aad
outsl
popf
sub
cmp
pop
dec
xor
xorb
mov
jmp
jp
cli
jecxz
pop
or
push
aam
mov
mov
cld
sub
or
mov
dec
pop
jo
jnp
ret
fidivrs
pop
repnz
cmp
int
jecxz
sbb
inc
xchg
les
hlt
rol
sahf
cltd
fidivs
fwait
rcll
and
mov
xchg
jle
cltd
cmc
mov
dec
sbb
sub
jbe
cmpsb
mov
sub
sub
xchg
stos
push
decb
leave
pop
adc
scas
cmp
stos
adc
add
push
inc
jae
cmpsb
in
pop
inc
adc
push
mov
dec
pcmpgtw
cmp
sbb
pop
roll
or
pop
and
dec
xchg
add
mov
mov
in
arpl
and
sahf
pop
xchg
in
cld
lret
add
xchg
out
mov
pushf
out
pop
inc
xchg
cmc
pop
adc
push
jo
jbe
sub
dec
mov
inc
pop
iret
push
popf
stos
ss
push
lea
icebp
enter
call
cmp
or
jns
sub
jnp
mov
push
repz
movsb
je
cmpsl
enter
nop
test
int
jmp
inc
cmp
ja
cltd
mov
push
arpl
in
or
cmp
add
and
lock
mov
mov
mov
std
call
into
add
into
es
jecxz
jl
fbstp
mov
pop
xor
add
and
bound
in
mov
xor
call
dec
xchg
shll
fldenv
pop
pop
mov
cmpsl
xchg
andl
call
inc
xchg
mov
je
sbb
pop
int
push
add
pop
push
push
pop
inc
mov
cltd
pop
mov
push
scas
xchg
js
mov
push
jecxz
xlat
xor
imul
or
dec
pop
xor
lods
sub
cwtl
loop
decl
pop
pop
ja
mov
out
std
movsl
pusha
xchg
pop
aad
push
in
int3
add
pop
test
das
cmp
pop
int
sub
mov
jae
pop
outsb
sub
gs
pop
push
cltd
lods
leave
popa
adc
mov
int3
jbe
jl
fnsave
pop
jmp
mov
cltd
fprem
call
int3
sbb
xor
mov
test
jae
pop
sbb
xor
pop
sbb
stos
xchg
cmp
rol
pop
jae
bound
lods
dec
in
pop
adc
xchg
movsl
adc
movsb
ss
subb
sbb
addr16
adc
adc
xchg
xchg
rcrb
pushf
popf
mov
pop
insb
les
pop
in
push
adc
mov
aam
xor
mov
pop
clc
idivb
xor
das
or
push
push
cmp
aaa
movsl
scas
lcall
icebp
jle
fnstcw
jb
int
rcl
and
pop
push
push
mov
sahf
dec
lods
lcall
lock
shlb
gs
stc
call
pop
cwtl
out
pushf
cmpsl
imul
fstpl
repz
mov
xchg
push
add
lds
jge
pop
cmp
add
lods
mov
sti
xor
dec
call
gs
lret
in
test
and
cmpsl
lahf
mov
insb
scas
in
push
bound
mov
pop
mov
pop
fcmovnu
es
outsb
mov
stc
loop
ret
xchg
sahf
jns
push
cmpsb
ffree
out
sbb
jnp
out
loope
push
pop
mov
lret
je
enter
mov
pop
mov
out
jp
mov
cmp
xchg
fwait
push
lahf
push
pop
pushf
mov
lcall
push
push
jg
pop
js
fiaddl
or
mov
pop
push
jnp
pop
mov
aad
jl
sub
pop
push
mov
mov
pop
mov
aam
mov
mov
in
cwtl
pop
xchg
in
mov
add
push
mov
out
mov
das
clc
shlb
xor
addr16
aad
test
pop
pusha
pop
mov
push
fmuls
pop
imul
mov
mov
or
divl
ret
inc
cmp
push
pop
dec
sub
xchg
pop
mov
pop
jge
pop
dec
xor
outsb
repnz
pop
lods
jg
jecxz
push
push
inc
pop
imul
mov
jp
sub
cmpsb
in
fdivrs
xchg
push
out
lret
fcoms
push
sub
pop
inc
in
mov
adc
cmp
pushf
cmpl
fcmovbe
cli
jno
mov
pop
loope
pop
loopne
js
push
jo
jmp
int3
lods
jno
orb
and
filds
xchg
pop
psllq
out
pop
sub
pop
out
jo
sbb
nop
adcl
mov
fcoms
sub
fisubrl
gs
xor
lods
pop
push
sub
pop
mov
call
in
sbb
jno
adc
xor
pop
stc
adc
fldcw
or
mov
lret
pop
insl
cmpb
push
push
leave
pop
sbb
mov
push
inc
push
fstps
data16
xchg
mov
and
jae
sbb
mov
and
enter
adc
push
ja
adc
mov
sub
jnp
pop
pop
mov
sub
test
or
pop
cmpsl
into
imul
sbb
shrb
mov
jns
mov
cmp
fcomps
jno
inc
mov
push
cmpsb
pop
and
sub
out
cmpb
movsl
push
pop
xchg
fwait
push
cwtl
dec
pop
jae
xchg
iret
pop
out
mov
xchg
mov
cmp
dec
pop
sub
push
test
cmp
sbb
sbb
adc
iret
or
pop
int3
pop
and
mov
sub
and
lds
add
xor
sti
xor
and
in
mov
xchg
int
outsl
pop
lahf
sbb
fst
add
mov
push
mov
pop
sub
or
test
pop
xor
scas
fcmovnbe
and
cltd
mov
orl
pop
inc
mov
lds
rclb
adc
add
cmp
push
sbb
shll
sar
ror
mov
mov
inc
dec
xchg
imulb
pop
jge
leave
scas
add
or
mov
cwtl
enter
pop
orl
shll
sbb
sahf
test
pushf
jle
clc
loope
dec
mov
enter
lahf
inc
push
mov
lcall
lds
mov
mov
aaa
jge
pop
jne
add
fidivrl
pop
push
mov
repnz
push
inc
jge
mov
mov
jns
into
sub
adc
or
mov
jmp
mov
lret
bound
std
pop
movsl
mov
scas
or
pop
push
jae
pop
rolb
and
mov
aas
stos
pop
shll
and
push
fdivs
scas
mov
sti
cmp
scas
rorl
inc
in
into
sbb
ret
stc
adc
pop
lock
jnp
pop
mov
fdivs
addr16
xor
mov
add
mov
adc
push
inc
or
fists
jb
movsl
lods
adc
jnp
popf
clc
dec
xchg
leave
pop
and
mov
and
iret
mov
mov
cs
movsb
imul
shrl
rcr
mov
jg
cs
sbb
insb
in
es
mov
call
jg
push
out
sbbl
dec
xor
in
fdivr
adc
xchg
mov
imul
lods
cmp
scas
jbe
fists
int
pop
adc
lcall
rcll
dec
loop
cmp
cli
cwtl
pushf
cmp
pop
inc
loope
adc
aam
sbbb
pop
sub
pop
outsb
cmp
sbb
lds
push
xor
mov
std
push
and
das
aad
notb
stos
ss
pop
pop
sbb
or
pop
sbbb
rcrl
xor
push
sub
cmp
add
rcr
test
shl
push
fcomps
arpl
in
shlb
das
pop
jnp
daa
mov
push
into
mov
cltd
inc
int3
dec
pop
xchg
inc
sub
jmp
outsl
mov
or
cltd
adc
jo
cmp
stc
hlt
pop
or
sub
pop
fidivrs
pop
push
xchg
jb
daa
iret
sbb
mov
sti
ret
fcomp
ja
and
das
jg
adc
xchg
out
push
or
in
xchg
jb
lret
mov
pop
sti
mov
mov
push
out
lahf
fisttps
pop
enter
mov
mov
scas
inc
xor
dec
or
imul
out
jne
inc
cmp
or
pop
das
popa
push
xchg
pop
xchg
dec
xor
mov
stos
pop
xchg
inc
mov
push
loopne
cmpsl
fs
fisubl
cmp
fbld
leave
lods
in
sbb
mov
xchg
lods
insl
std
aad
hlt
aad
pop
xchg
xor
into
sub
out
xchg
sbb
stos
stos
ds
dec
movsb
cmc
xorb
add
jge
lods
paddw
adc
into
inc
and
fildll
jbe
fcompl
adc
sbb
mov
and
xchg
cmp
add
push
mov
cwtl
or
stos
ljmp
shlb
pop
mov
or
add
push
jp
pop
or
push
mov
das
fwait
jl
add
fsubrs
das
jns
adc
in
shlb
movsb
push
xor
sbb
mov
out
ss
lods
cmp
lret
pop
xor
movl
cwtl
movsb
bound
jne
std
push
mov
add
mov
lahf
cmc
push
mov
mov
pop
sbb
cld
pop
mov
aas
addr16
hlt
jmp
les
dec
pop
aad
in
clc
int3
inc
lods
daa
xor
cmp
cmp
xchg
cli
xchg
aad
jb
pop
pop
xor
push
cmc
lahf
pop
cmpsb
mov
dec
sbb
mov
pop
dec
out
enter
call
mov
call
das
js
and
pop
rorl
dec
pop
filds
adc
mov
pop
cmpsb
lods
xor
sbb
sbb
or
push
pop
in
pop
mov
push
xor
enter
mov
and
int
jecxz
in
fs
decl
inc
rcrb
insb
dec
pop
inc
test
ficomps
fcos
jo
out
into
pop
pop
xor
cmp
pop
es
sbb
notl
cmpsl
mov
xchg
daa
xor
mov
pop
add
cmp
fwait
push
jb
pusha
sub
mov
add
dec
fmul
in
shlb
out
cmp
cwtl
push
add
scas
pop
inc
push
pop
in
pop
data16
jp
imul
sbb
fnstenv
incb
or
shll
mov
fsubrs
inc
jo
mov
sbbb
stos
push
xlat
xchg
and
cltd
outsb
imul
in
xorl
jbe
xchg
xchg
add
pop
aas
daa
or
adc
negb
cli
push
outsb
push
xchg
out
push
mov
mov
mov
cmc
dec
add
dec
and
push
mov
xorl
push
incb
sahf
cmp
arpl
inc
fstpt
pop
sub
movsb
scas
mov
pop
dec
out
pop
sbb
addr16
das
pop
mov
push
pop
xchg
insl
int
hlt
popf
movsl
rcrl
pusha
ret
je
jmp
dec
pop
cmpb
sti
pop
popf
orb
fsubrs
iret
fnstenv
and
and
pop
mov
fidivs
cmp
jg
xor
mov
mov
out
je
daa
pop
sub
pushf
insl
cmp
ja
jecxz
dec
push
pop
data16
jb
pop
cmp
jnp
adc
push
pop
popf
cltd
push
adc
movsl
mov
mov
lds
adc
jecxz
icebp
cmc
push
pop
lcall
lea
fstps
cwtl
imul
sub
fsubp
rolb
pop
lret
addr16
fcomps
mov
adc
addr16
pop
mov
cmpsl
inc
pop
aaa
in
push
inc
enter
jl
pop
mov
and
pop
lods
or
in
in
jae
push
movsl
xor
lret
jne
xchg
pop
aad
iret
arpl
jo
mov
fiaddl
mov
mov
jge
testb
jecxz
sti
fs
mov
enter
ret
sub
or
dec
mov
pop
mov
repz
xchg
pop
pop
loope
cld
dec
js
std
pop
loop
and
mov
inc
jmp
enter
lea
pop
xchg
pop
test
les
sub
mov
mov
jnp
stos
xchg
in
dec
stc
push
pop
sbb
mov
mov
sbb
pop
mov
test
pop
fucom
cmpsb
cltd
pop
aam
xchg
pop
push
xorb
inc
mull
or
arpl
daa
dec
inc
fsubrs
mov
sub
mov
fisttpl
jle
pop
and
popa
sub
ja
out
cmc
adc
lret
jge
mov
pop
mov
jae
adc
mov
xor
pop
imul
pop
mov
cli
shll
pop
inc
and
mov
pop
inc
pop
xchg
movsl
lret
inc
mov
sub
pop
pop
cmpsl
jl
mov
sub
iret
hlt
sbb
fistps
mov
sbb
daa
std
fsubrl
or
and
loopne
insb
pop
rolb
jl
inc
jbe
pop
cwtl
or
mov
jnp
push
bound
in
arpl
xchg
cltd
adc
sbb
sub
pop
inc
push
sbb
and
pop
fldenv
int3
dec
ret
cmp
lret
cmp
shl
jmp
dec
cmpsb
xor
pop
sub
sbb
pop
loop
cltd
pop
sub
sbb
pop
dec
fstps
imul
mov
push
ljmp
fadds
hlt
add
pop
rorb
pop
in
fisubs
push
pusha
cmp
pop
jae
fbstp
mov
or
sub
fs
dec
inc
mov
mov
loopne
mov
or
xlat
jne
sub
xchg
and
repz
popa
pop
outsb
mov
xchg
push
mov
js
mov
pop
dec
shl
push
jno
les
push
mov
dec
adc
mov
mov
dec
adc
dec
push
ficomps
mov
adc
mov
pop
into
movsb
imul
push
pop
out
sbb
das
hlt
mov
out
pop
jbe
test
xlat
xor
pop
mov
dec
scas
xchg
lahf
inc
mov
and
les
pushf
rcrb
mov
js
fcomps
nop
or
pop
inc
add
dec
cmc
mov
sbbl
lock
lret
or
sbb
mov
cltd
out
dec
sarl
push
pop
jns
cmp
mov
loopne
or
mov
pop
fnsave
mov
dec
loop
clc
jmp
sbb
scas
pop
rep
jne
je
fistpl
cmpsl
pop
ja
inc
fstps
push
add
and
pop
cmp
arpl
es
leave
dec
sbb
fcoms
lods
std
dec
xchg
out
pop
or
inc
out
push
pop
mov
mov
loopne
pushf
sub
cmp
jle
mov
mov
push
orb
addr16
imul
data16
mov
add
inc
das
mov
pop
fwait
dec
jo
cmp
out
dec
test
rcrl
pop
incl
insl
mov
jno
cs
dec
pop
push
loope
clc
pop
or
sub
int3
mov
mov
ret
rcrb
pop
mov
mov
loope
cmp
adc
sbb
pop
jecxz
push
mov
pop
enter
sub
lahf
xor
mov
fadds
lods
adc
pop
push
ror
mov
dec
cs
or
jne
mov
fwait
aaa
sbbb
cmp
pop
or
xor
aad
icebp
pop
pop
jl
mov
sahf
fwait
iret
jg
pop
sbb
pop
xor
or
xchg
fsubr
and
sahf
lahf
add
lea
clc
xchg
or
dec
xor
xchg
negb
xor
insb
mov
std
movsb
mov
test
in
stc
dec
pop
mov
cli
pop
push
sub
mov
mov
inc
pop
imulb
in
add
loopne
ret
out
fistpl
loope
fwait
cwtl
and
push
pop
inc
idivl
dec
pop
mov
pop
pop
pop
imulb
mov
orl
jne
push
inc
jp
dec
mov
push
loope
ficomps
cmpsl
test
jg
loop
xor
and
lret
lahf
jae
or
sbb
push
aad
pop
sbb
mov
stc
iret
outsl
fs
or
mov
test
das
sub
sub
fidivs
mov
lcall
in
pop
iret
jne
adc
addl
sbb
das
dec
mov
clc
or
jecxz
push
cmp
in
or
pop
call
lahf
push
or
dec
pop
xlat
out
fsubl
std
adc
mov
imul
clc
fnstcw
loop
mov
mov
pop
jmp
pushf
push
jl
inc
andl
pop
outsl
in
and
and
adc
lods
push
sbb
stc
aad
fcomi
add
push
xchg
xchg
adc
xchg
jns
repz
imul
inc
repz
mov
daa
jge
xor
ficompl
dec
popf
jns
dec
loop
sub
sbb
lahf
jp
pop
scas
mov
ljmp
sub
cld
push
pop
loopne
sbb
pop
adcl
enter
movsb
rol
into
push
pop
inc
push
sarl
aad
adc
dec
ficomps
ficompl
stc
pop
mov
dec
cwtl
adc
in
out
cmp
or
push
leave
insb
jp
pop
mov
dec
xor
lahf
push
jns
sbb
cwtl
jno
jmp
cmp
repz
or
inc
jns
icebp
mov
and
neg
es
scas
das
sbb
mov
inc
cmp
fidivl
ljmp
mov
or
mov
pop
in
jne
jp
mov
jmp
sub
or
fstpl
and
add
and
and
sbb
cld
fsts
pop
andb
jmp
movsl
pop
xchg
das
testb
loope
push
mov
daa
push
sub
and
int3
daa
enter
mov
push
rcrb
mov
pop
ss
sbb
adc
pop
arpl
adc
push
iret
scas
es
mov
sub
sbb
hlt
jnp
or
test
jns
xlat
xchg
icebp
aas
mov
mov
loop
mov
push
pop
mov
imulb
xor
rcrb
pop
jne
out
push
idiv
fisubl
and
incb
arpl
mov
ds
cli
sub
cmc
jae
mov
sbb
xor
sti
pop
iret
repz
jnp
pop
sub
mov
stos
lcall
daa
aad
pop
les
in
mov
lods
outsl
notl
rcrb
cmp
stos
pop
dec
shll
lret
pop
shrl
xor
aad
pop
inc
pop
or
pusha
jge
mov
popa
mov
sbb
shlb
adc
jge
movsb
leave
pop
repnz
add
das
mov
pop
sbb
lock
fld
stos
mov
xchg
pop
es
cmc
push
cwtl
sbb
mull
popf
lods
push
sub
mov
mov
std
lret
cmpsb
sti
in
pop
repnz
pop
or
mov
scas
repz
out
pop
push
add
and
fucomi
mov
inc
mov
and
xorps
ret
cmp
mov
loop
mull
out
fs
pop
lea
lcall
in
mov
dec
pop
mov
pop
pop
jecxz
dec
sbb
mov
cmp
rorb
rcrl
adc
cwtl
jo
pop
fbstp
jae
shll
xchg
ret
leave
dec
xchg
adc
aad
es
xchg
popl
pop
rclb
push
std
pushf
test
xchg
lret
pop
xor
test
out
aas
lcall
orb
fidivrl
bound
lds
xor
pop
fcmovnbe
sub
mov
pop
jnp
pop
sub
add
dec
inc
pop
sahf
lret
fs
xchg
pop
fldl
dec
ficompl
sbb
sarl
mov
aam
sub
fstpl
imull
out
mov
pop
jge
pavgb
incl
enter
dec
xchg
fisubrl
dec
push
ret
mov
or
test
add
out
fnstsw
jnp
push
pop
vmovd
xlat
mov
cmp
movsl
xchg
movsl
mov
mov
and
dec
inc
pop
adc
add
xlat
pop
fcmovu
xor
nop
push
sti
out
pop
jnp
mov
jne
xor
adc
outsb
shll
mov
sbb
jae
mov
push
add
mov
inc
xchg
sbb
mov
push
loopne
or
mov
sbb
stc
xchg
pop
push
lea
shlb
lods
aad
imul
jp
fst
popf
push
pop
rorl
fbstp
pop
ds
repnz
stc
pusha
push
jbe
pop
leave
cli
mov
sti
mov
pop
jmp
rcrl
xchg
pop
adc
jg
sbb
loope
mov
jae
and
pop
imul
in
mov
jge
xchg
pop
mov
sub
loopne
and
mov
pop
and
inc
mov
lahf
sbb
popa
daa
neg
fistl
repz
pop
or
icebp
jnp
rcrl
mov
sbb
sub
lds
dec
adc
pop
add
sbb
mov
inc
pop
push
pushf
fs
mov
fildl
pop
aad
pop
mov
mov
shlb
or
pushf
mov
fsubrs
fidivrs
out
pop
and
mov
dec
sub
pop
inc
das
dec
fdivs
incl
jnp
repnz
test
jb
mov
or
pop
adc
pop
sti
aaa
test
mov
out
adc
mov
pop
popf
xorb
cmpsl
xor
sub
mov
scas
add
mov
outsb
adc
mov
mov
mov
stc
push
sub
ret
jne
lds
lahf
lea
dec
pop
add
adc
fs
ret
mov
inc
aaa
mov
cmp
fistps
mov
pop
shl
nop
not
jle
lret
add
in
mov
iret
lds
pop
ret
ss
bound
pop
pop
pop
xchg
ljmp
repnz
adc
mov
pop
push
xor
test
es
pop
divb
std
pop
and
xchg
mov
xor
insl
into
push
mov
inc
in
jb
icebp
jbe
mov
mov
int
jle
pop
enter
jecxz
dec
sub
push
rcr
in
pop
insb
in
dec
sahf
in
sub
add
pop
fimuls
leave
jecxz,pn
push
xlat
lods
pop
fistps
pop
adc
sar
mov
popa
in
push
aaa
pop
mov
out
test
xchg
mulb
sbbb
aad
sbbl
es
adc
mov
test
sub
test
adc
xlat
dec
and
fwait
sbb
pop
test
fnsave
hlt
shll
fdivrl
inc
fsubrs
nop
lcall
fmuls
push
fistl
mov
stc
jle
mov
sbb
pop
pop
push
fcompl
cmpl
pop
cmpsb
push
out
inc
jge
pop
sbb
mov
pop
jmp
nop
dec
cmpsl
pop
loop
xchg
push
fcmovbe
lret
sbb
xchg
stos
sub
and
xor
push
cmp
mov
mov
popf
mov
xchg
adc
lret
xor
int
movsl
adc
pop
ret
shr
lret
clc
nop
or
mov
in
push
lret
or
and
pop
ret
inc
mov
scas
pop
pop
scas
repnz
rclb
lds
sbb
adc
cmpb
rcrb
out
xlat
or
fmull
mov
and
js
push
leave
jecxz
scas
push
lahf
dec
cmp
mov
inc
xchg
lret
inc
lcall
inc
mov
sbb
jne
or
pop
xlat
pop
ret
mov
xchg
xchg
sub
cld
or
push
mov
fdivrl
jl
pop
xchg
mov
inc
dec
into
negb
daa
cltd
inc
ja
push
xchg
repnz
inc
xor
dec
dec
mov
push
mov
pop
ficompl
pop
mov
lods
dec
xor
jmp
lods
add
mov
sbb
scas
push
cmp
daa
imul
aad
adc
ret
fdivrl
sbb
push
pop
push
mov
movsl
dec
loopne
pop
mov
dec
inc
cltd
dec
push
pop
push
jb
mov
pop
clc
mov
cmp
bound
lahf
shl
jbe
ficompl
lock
inc
pop
push
xor
mov
push
mov
push
aas
jmp
ror
lcall
jg
sahf
mov
adc
arpl
and
hlt
dec
or
push
enter
cmp
pop
xchg
adcb
repz
rcrl
add
in
dec
das
out
jae
aas
adc
lcall
adc
fistl
push
stos
xchg
pop
cmc
out
pop
lds
repnz
lcall
push
aaa
push
sub
fisubl
in
xchg
fnstenv
xor
lods
xchg
jno
loop
cmp
rcr
dec
repz
cmpsb
pop
repnz
adc
and
stos
push
and
les
cmp
ds
mov
divl
pushl
jns
xchg
mov
add
add
mov
jnp
pop
repnz
popl
jecxz
inc
pop
fidivrs
push
fs
xchg
sbbb
outsl
inc
mov
sbb
add
out
sbb
pop
insb
cmp
inc
pop
loop
add
jl
ss
add
sub
imul
repz
xor
pop
jmp
add
adc
lcall
lea
pop
sub
test
mov
pop
xor
ljmp
aaa
mov
pop
pop
fisubs
ja
xor
push
in
adc
pop
fs
xchg
std
cmp
xor
xchg
ret
jp
pop
repnz
mov
cmp
pushf
pop
pop
adc
out
pop
and
movsl
call
leave
incb
xorl
mov
jle
mov
cmp
into
and
inc
lahf
mov
aad
or
adc
orb
cmpb
std
mov
mov
mov
xchg
pop
pop
sti
repnz
scas
rcl
sbb
ss
fadd
bound
mov
leave
out
in
stc
in
insl
pop
fs
aad
add
mov
mov
xchg
mov
add
jecxz
lahf
in
add
lods
xchg
rep
mov
pop
arpl
ss
inc
lahf
lock
mov
dec
xchg
in
test
lds
pop
lcall
insb
add
gs
mov
push
outsb
ret
mov
cwtl
inc
out
out
icebp
jo
dec
mov
dec
xchg
or
lods
mov
xor
ljmp
dec
test
pusha
fsubr
mov
rcrl
fadds
daa
sub
cmp
pop
test
cmp
dec
mov
jae
pop
dec
lock
aaa
nop
xchg
negb
cmpsb
dec
inc
lret
jecxz
and
push
scas
stos
push
out
ljmp
dec
mov
cmp
sub
ficompl
sti
adc
xchg
adcb
scas
xchg
js
lret
cmp
sub
fistps
jo
jle,pn
movsb
or
ror
sbb
fs
xchg
jmp
scas
mov
pop
xchg
dec
lods
test
call
fcmovu
jns
pop
or
ret
pop
dec
inc
and
das
and
shll
ds
xor
in
xor
stos
cmp
addl
lcall
test
sub
mov
pushf
fadd
fmuls
xor
and
adc
pop
imul
mov
popa
lds
sub
mov
push
adc
xchg
jle
push
jns
cmpl
pop
pop
cmpsl
pop
and
stc
inc
push
in
shrb
cmp
scas
out
scas
mov
mov
mov
sub
sub
pushl
fisttpll
test
lahf
adc
jmp
pop
ja
mov
in
mov
xlat
sbb
pop
xchg
jmp
pop
dec
sbb
jecxz
cld
mov
pop
and
or
lock
out
dec
cli
adcb
int
scas
lods
les
js
cmp
clc
pop
je
or
push
lods
mov
and
out
in
xor
push
nop
add
movsb
movlps
aaa
mov
fmuls
mov
mov
repz
jecxz
xchg
mov
stc
sti
mov
fnstcw
adc
cmp
cmc
jns
mov
repnz
cmpsb
js
lods
jnp
aas
sbb
inc
pop
lahf
cwtl
dec
mov
dec
push
dec
cmp
pop
xchg
das
rcrb
pop
jno
lahf
jle
les
nop
mov
lods
out
sar
lcall
sbb
stos
pop
adc
rcll
pop
mov
jbe
int3
or
cmp
dec
negl
sub
jecxz
sbb
pop
sbb
and
not
cmp
fcmovne
mov
pop
xchg
in
in
push
or
xchg
pop
push
repz
xchg
mov
sub
mov
or
enter
test
cs
push
sub
pop
jecxz
or
xchg
pop
lret
xchg
lods
js
in
mov
push
sahf
inc
lcall
movsl
sbb
pop
mov
or
sbb
push
pop
adc
js
shll
jle
cmpsb
dec
xor
cmp
addr16
xchg
inc
mov
add
adc
and
and
dec
sahf
mov
aad
es
sti
cltd
loop
pop
or
je
test
mov
stos
push
frstor
dec
pop
or
cld
pop
pop
cltd
sahf
pop
out
sar
sub
and
pop
fildl
out
in
push
or
stos
inc
push
or
fiaddl
lahf
lds
std
push
mov
repnz
inc
xchg
lods
mov
mov
icebp
mov
fidivl
rolb
scas
pop
stc
cmp
xchg
sbb
clc
pop
mov
enter
movsl
pop
cmp
dec
stc
xchg
sub
mov
cld
mov
pop
int
cmpsb
pop
into
shlb
test
mov
fbstp
sbb
inc
cltd
cwtl
pop
repnz
int
sbb
pop
pop
test
inc
or
mov
cmc
push
mov
push
scas
xchg
pushf
dec
pop
add
scas
pop
repz
xchg
lock
xchg
pop
loope
cmc
push
ret
mov
aaa
movsl
popf
shl
and
xor
cli
rcr
clc
xor
ret
nop
xchg
push
outsl
fwait
xchg
pop
movsl
bound
call
jg
xchg
stos
sti
adc
xchg
pop
inc
add
mov
mull
pop
pop
xchg
dec
add
pop
popf
cmp
lods
push
jp
mov
dec
inc
adc
dec
cmp
sbb
cld
jle
out
lahf
pop
xchg
mov
fmuls
clc
xchg
pop
aad
call
inc
push
sbb
push
dec
mov
push
sahf
jmp
xchg
pop
jne
jecxz
out
movsb
mov
or
ja
pop
add
push
fcmovu
cmp
pop
pop
test
ret
pusha
cmpsl
and
pop
adc
int
and
jo
mov
mov
lods
mov
mov
jne
xor
xchg
lods
ret
pop
popa
inc
adc
pushf
and
cmpsl
stos
dec
subl
cwtl
jl
fsubs
pop
jnp
hlt
xchg
imul
and
push
cmpsb
and
mov
test
stc
es
mov
mov
xchg
stos
mov
pop
ret
xchg
jbe
mov
mov
pop
mov
push
jge
testb
sub
pop
inc
ret
sub
ret
pop
cltd
call
dec
dec
pop
out
scas
push
lock
lea
pop
push
jle
xchg
fwait
test
fcoml
iret
xor
pop
xchg
movsb
pop
cmp
push
pop
sbb
jecxz
sbb
imul
xchg
shrl
loop
fbstp
lahf
mov
arpl
mov
pop
scas
dec
dec
or
pop
jmp
cltd
aam
sbb
js
jge
mov
mov
xchg
inc
adc
sbb
cld
aaa
repnz
addr16
add
sbb
int3
pop
cmp
or
movsl
call
pop
scas
mov
out
or
mov
inc
outsl
stc
mov
jle
xchg
cmc
push
xor
cmp
pop
inc
data16
fildll
jecxz
mov
pop
movsl
mov
subl
jnp
jae
stos
gs
pop
stos
and
mov
pop
cmpsb
inc
ret
dec
adc
cmpb
mov
mul
push
repz
push
scas
mov
jmp
mov
push
aaa
rcrl
sbb
rclb
pushf
cs
cmpsl
gs
mov
fmul
mov
fwait
pusha
pop
xor
movsl
mov
enter
cmp
push
dec
pop
rcr
pop
rcr
repnz
repz
insl
mov
lret
pop
jle
adc
mov
inc
mov
mov
adc
lds
scas
scas
jge
cli
out
js
xchg
in
mov
sbb
mov
enter
pop
bound
push
mov
out
call
pop
lretw
cmpsl
pusha
je
and
jnp
or
xor
mov
fisttps
jns
dec
dec
les
inc
into
push
adc
pop
xor
outsl
notb
inc
loop
insl
mov
cmp
sahf
mov
sub
js
mov
dec
or
out
mov
cmp
lods
adc
push
scas
out
push
fisubrl
inc
mov
mov
sbb
es
das
mov
pop
loop
xor
jns
pop
inc
ss
inc
inc
rcrl
lcall
andl
add
sbb
vmovsldup
pop
test
xchg
mov
pop
push
in
xor
mov
mov
mov
leave
sub
icebp
adc
pop
pop
popa
mov
mov
inc
cmp
enter
pushw
sub
and
xchg
mov
xor
mov
mov
lcall
repz
aas
pop
xorb
out
pop
pusha
xor
push
aaa
je
addr16
bound
and
mov
or
and
insl
push
popf
mov
or
mov
xchg
xor
dec
outsl
push
std
cltd
sbb
inc
mov
pop
mov
icebp
mov
jns
adc
and
inc
jecxz
lods
dec
mov
jne
fistps
inc
adc
sub
xchg
jb
lds
cs
xor
pop
mov
outsl
daa
sbb
mov
lds
and
fidivs
setg
sub
pop
xchg
fdivs
sbb
leave
pop
scas
jne
cmp
arpl
push
lods
xchg
outsl
pop
push
pop
arpl
adcl
xchg
add
jo
fadds
pop
fsubl
bound
add
repnz
test
clc
xor
jmp
adc
imull
pop
sahf
cmp
xor
test
ret
pop
cmp
fs
pop
and
jp
pop
mov
je
lock
jno
lret
and
mov
ret
xlat
lret
or
jo
pop
sbb
jg
pop
dec
add
inc
sbb
xchg
sti
outsl
push
loopne
jne
ret
addr16
jle
mov
loop
inc
pop
lea
add
fwait
lods
adc
fdivr
ss
jbe
push
adc
rcrb
sub
dec
sti
or
dec
pop
es
add
pop
mov
lret
xchg
hlt
pop
into
jg
and
outsb
int3
popf
cs
outsb
push
lahf
mov
cwtl
stc
mov
movsl
insl
into
xchg
repz
adc
fcmovne
adc
mov
mov
jae
inc
outsb
push
xor
fisubrl
jb
jecxz
dec
test
inc
pop
mov
test
js
pop
sar
and
cmp
dec
add
lods
iret
mov
pop
addr16
pop
das
push
xchg
jmp
dec
sub
rcll
pop
xor
idivb
test
sahf
sbb
inc
stos
add
add
add
mov
out
addr16
and
jo
andb
int
pop
lock
in
jno
pop
cmpsb
in
dec
xor
adc
fs
testb
adc
fmuls
aam
and
pop
icebp
and
mov
mov
xor
insb
mov
arpl
pop
dec
pop
and
jecxz
repz
add
pop
jecxz
push
add
loopne
sbb
test
lret
mov
inc
ja
push
in
mov
rcrl
dec
cmp
insl
adc
repz
cmp
mov
add
mov
cwtl
adc
push
sar
shll
push
je
gs
mov
or
bound
mov
sbb
jmp
lret
daa
dec
pop
roll
sub
jnp
pop
mov
cli
movsb
sub
dec
cmp
loopne
lcall
pop
fcomps
and
mov
xchg
popa
jg
out
pop
out
mov
movsl
push
pop
lds
lret
mov
pop
fs
adc
xchg
fwait
xlat
sub
mov
outsl
push
out
sub
aas
push
pop
fmul
adc
repz
loop
testb
cwtl
mov
popf
jp
mov
ror
add
adc
dec
mov
mull
inc
mov
cmpsl
cmp
pop
cmp
add
pusha
iret
pop
add
push
jns
sbb
pop
xlat
jne
sbb
mov
ret
jbe
sbb
scas
sbb
jo
adc
pushf
mov
and
inc
shlb
mov
test
mov
sbb
sbb
cwtl
repz
lea
sbbl
adcb
ret
and
mov
clc
mov
pop
xchg
dec
push
ja
mov
add
jmp
hlt
jmp
mov
mov
popa
jl
inc
pop
adc
sbbb
scas
pop
dec
sbb
inc
mov
mov
mov
adc
jl
mov
mov
fcomps
ss
jmp
clc
jp
bound
outsl
push
enter
pop
pop
out
cmpsb
aaa
pop
push
repnz
gs
inc
mov
lds
cmp
imul
sbb
shlb
pop
mov
or
movsl
data16
cmp
sub
outsb
ljmp
push
aad
pop
or
orl
pop
and
lret
in
pop
mov
sub
mov
daa
mov
testb
mov
fcoml
and
lcall
push
mov
out
inc
xchg
mov
repz
mov
add
jl
sbb
fisubs
dec
ret
movsl
pop
sub
call
jbe
mov
lret
jmp
xor
push
and
pop
or
jno
stos
fwait
add
push
rcrb
pusha
scas
fidivrl
jno
sub
jnp
pop
and
inc
icebp
cmpsb
pop
in
jg
inc
cs
sti
popa
or
leave
insb
inc
inc
lods
push
pop
xor
into
dec
lahf
jbe
mov
shlb
fcmovnb
push
pop
push
xor
addps
in
hlt
ret
adcl
mov
mov
dec
mov
lock
fs
pop
es
cmp
jae
test
cmp
imul
jecxz
call
aas
bound
adc
sbb
adc
push
pop
push
nop
jecxz
insl
mov
into
pop
call
gs
cmpsb
es
pop
rcrb
sbb
push
hlt
jns
sbb
lahf
lahf
push
mov
mov
divb
enter
sbb
jbe
pop
pusha
add
mov
nop
scas
js
adc
pop
mov
push
inc
jo
mov
adc
jmp
xchg
jnp
in
loop
popa
cmp
mov
dec
lods
ss
xor
dec
sbb
fcomps
dec
stos
out
inc
lahf
subl
cmp
test
hlt
addr16
shl
movsl
mov
int3
jge
or
mov
lcall
jmp
mov
pop
push
cli
inc
js
aas
outsb
xor
add
test
mov
rcrb
adc
push
jns
js
test
lret
stos
mov
pop
in
push
and
or
sar
cmpsb
and
add
ret
sub
jnp
mov
lock
nop
cs
cmp
jmp
loop
fstl
or
push
cld
lock
stos
mov
lahf
aad
jns
push
sbb
xor
cwtl
cmp
mov
xor
cmp
pop
jg
xchg
add
pop
imul
hlt
dec
fsubs
push
loopne
shll
push
mov
je
enter
imul
mov
pop
shrb
scas
add
mov
pop
sub
je
push
mov
pop
andb
mov
lret
mov
lods
jmp
pop
add
mov
push
ja
inc
out
pop
or
cmp
xor
gs
xchg
xor
sar
push
in
mov
fldenv
rcrl
inc
xchg
sbb
sbb
pop
xor
cmpsl
lcall
adc
int
pop
aam
rcrl
shrl
lods
cmc
jecxz
mov
pop
mov
mov
inc
insb
and
test
adc
enter
or
pop
sub
mov
xchg
jecxz
cmp
pop
push
mov
inc
xchg
lret
mov
mov
mov
pop
pop
test
sti
mov
push
ffreep
pop
pop
mov
xor
lcall
mov
inc
xchg
push
pop
loop
scas
arpl
std
icebp
pop
jnp
pop
rcll
out
mov
mov
aas
mov
imull
pop
stc
mov
dec
add
out
mov
movsb
adc
iret
push
sbb
je
sbb
lcall
dec
popl
pop
mov
loope
mov
mov
negb
and
xor
mov
iret
icebp
mov
mov
cmp
adc
push
pop
ret
pop
lcall
aam
pop
pop
js
rcr
cmp
fs
lock
lret
icebp
bound
lods
cmpb
cmpsb
push
sbb
mov
pop
negb
pop
and
lock
mov
into
mov
fwait
pop
notl
mov
outsl
pop
and
xlat
scas
mov
cwtl
lret
push
mov
sbb
and
add
mov
jns
rcrb
data16
ret
pop
xchg
dec
jecxz
movsl
hlt
or
pop
lods
dec
xchg
out
mov
pop
dec
test
cmc
fdiv
mov
mov
fdivrs
mov
in
scas
cs
adc
pop
and
cmc
pop
mov
aas
enter
mov
int3
xchg
nop
sbb
fidivrs
add
mov
jne
mov
dec
pop
sbb
out
xlat
jne
rcll
sub
add
sub
pop
mov
xchg
addr16
int3
call
jnp
pop
mov
addl
mov
dec
sub
lcall
push
imul
nop
mov
dec
lds
stc
cmp
push
jno
scas
push
or
call
cwtl
push
and
enter
je
pop
mov
add
push
lods
inc
jp
cmp
nop
sarb
js
pop
sub
dec
mov
xchg
sbb
sti
pop
push
sub
aad
cmp
clc
jb
aam
xchg
dec
scas
imul
mov
mov
je
fdivs
cmp
jbe
pop
or
xchg
das
dec
aas
sbb
inc
adc
cmpb
out
mov
dec
test
push
inc
fmul
out
scas
roll
push
lds
lods
fisubl
jno
pop
adc
jo
jp,pn
movsb
pop
aad
jg
cmp
mov
push
push
pop
push
sbb
lret
arpl
xor
sbb
push
andb
jge
cmpsl
fsubrs
or
pop
mov
daa
sbb
mov
xchg
rcl
sbb
adc
push
pop
pushf
movsl
pop
adc
mov
mov
ja
xchg
mov
fcmovnb
add
stc
sbb
sbb
xchg
xor
or
pop
or
test
and
push
and
dec
pop
cmp
mov
add
xchg
mov
cmp
push
dec
lds
jae
leave
cmc
pop
push
jl
dec
int
mov
insl
sub
pop
pusha
sbb
jo
adc
adc
mov
or
cs
dec
pushf
sbb
divb
fldt
dec
xchg
les
pop
ret
mov
jb
pop
or
jns
sbb
pop
pop
jle
sti
fistl
dec
dec
pop
jb
shl
jo
or
test
lds
jbe
sbb
pop
cmc
jle
push
pop
pushf
sbb
push
int3
sbb
ss
pop
inc
cmp
jg
jecxz
mov
pop
inc
sbb
adc
lods
dec
fisttpl
pop
dec
lock
dec
jp
push
pop
dec
push
and
mov
cld
pop
inc
pop
repnz
int
call
and
sbb
xor
dec
shl
pop
clc
lock
out
mov
or
sub
ret
xchg
mov
inc
out
sub
push
ja
inc
jmp
mov
pop
outsl
push
mov
scas
int3
xchg
lds
insb
sbb
arpl
pop
sbb
mov
push
repnz
dec
call
dec
in
fistpll
jbe
jo
mov
mov
jge
cmp
scas
lods
movntps
pop
pop
adc
xor
cltd
pop
adc
daa
xlat
unpckhps
cwtl
inc
aad
jno
inc
inc
fldenv
xor
out
mov
cltd
mov
dec
jl
pop
data16
xor
jne
mov
push
cltd
pop
testl
jg
ds
aas
ss
cwtl
or
enter
or
jge
test
add
popf
inc
jecxz
fnstcw
insl
pop
out
cltd
nop
pop
in
jbe
lods
mov
sbb
fsubr
stos
and
loope
clc
push
push
xor
cmpsb
sub
dec
or
jb
jne
das
jno
addb
jg
pop
lds
js
popa
mov
pop
xor
sbb
xorl
push
cmp
int
lods
inc
daa
in
stos
dec
test
stos
cmpsl
iret
jl
jne
arpl
mov
adc
pop
mov
push
jecxz
jecxz
pop
mov
push
mov
sbb
push
push
pop
cli
dec
repnz
lods
inc
lret
loope
dec
sbb
cmp
and
mov
shll
mov
or
add
xchg
sub
and
mov
flds
push
jno
pop
lcall
push
mov
nop
lods
test
mov
add
mov
inc
fstps
jns
pop
and
push
sub
pop
ss
or
xchg
jecxz
push
cmc
jno
popf
mov
xlat
push
jge
pop
xchg
sub
mov
pop
jb
lahf
fcoml
pop
daa
arpl
adc
jecxz
push
mov
cmpsb
inc
jbe
and
fldl
pop
test
rcrl
jecxz
dec
push
movsl
dec
bound
ror
int3
cs
or
jg
test
adc
fwait
jo
sbb
pop
lea
enter
push
add
repnz
movsl
shlb
int3
cmp
jecxz
xchg
jl
lods
mov
push
pop
fidivl
outsb
pop
mov
inc
push
sub
lret
jno
adc
fst
ficoml
xchg
aas
add
sub
lcall
in
pop
pop
and
int
dec
fdivrs
aas
cli
and
push
loop
dec
dec
out
imul
test
adc
add
fistpl
xor
js
sbb
mov
dec
or
pop
rorl
jle
popf
fst
fistps
in
pop
cs
lods
loop
daa
mov
sahf
int3
pushf
adc
sbb
pop
push
push
jbe
cltd
rorb
pop
jp
xchg
clc
bound
pop
jbe
and
popf
lea
addr16
into
xchg
xchg
dec
lods
fstpl
push
pop
jbe
scas
ja
insb
lods
int3
pop
pop
sbb
hlt
insl
lods
xchg
pop
cmp
push
pop
cld
inc
cmp
outsl
enter
movsb
jp
out
mov
sbb
pop
xchg
push
in
mov
xchg
hlt
fiadds
lods
insb
lock
cli
addps
fldl
iret
repnz
aaa
pop
clc
xor
cmp
ret
cmp
push
push
xchg
scas
gs
push
cmp
mov
pop
pushf
or
pop
or
test
pop
sub
in
mov
and
and
pop
xchg
and
pop
sahf
mov
xchg
xor
pop
sub
aas
push
icebp
es
js
ss
inc
pop
mov
int3
arpl
push
push
add
adc
shl
fs
scas
icebp
sub
and
and
outsl
mov
in
ds
jo
pop
je
jl
pop
xchg
sti
inc
hlt
adc
mov
nop
push
sub
mov
pop
push
js
xchg
mov
pushf
adc
cmp
test
sbb
sbb
fdivs
pop
fdiv
fdivrs
in
jl
pop
push
fdivrl
lds
sbb
sbb
sbb
adc
lahf
fcomps
in
xor
pop
xchg
pushf
xchg
mov
mov
mov
fs
fs
pop
fs
dec
and
imul
pusha
clc
pusha
inc
pop
loopne
mov
xchg
mov
pop
in
lock
pushf
pop
xchg
xchg
mov
adc
adc
pop
in
test
loopne
es
pop
hlt
dec
int3
dec
adc
push
addr16
mov
jl
mov
cltd
cmp
sub
mov
xor
nop
pop
jne
xor
js
xchg
cmp
pop
test
aaa
push
leave
mov
je
push
js
mov
jle
mov
push
outsl
repnz
and
dec
es
pop
cmp
sbb
cli
cmp
fldt
fidivl
xor
xorl
inc
and
repnz
out
dec
cwtl
ret
mov
in
pop
xor
out
mov
icebp
loope
dec
pusha
lods
hlt
into
pop
bound
or
cmp
cmp
in
repnz
adc
mov
or
stos
cmp
sbb
mov
xor
stos
daa
pop
sahf
mov
mov
cmp
adc
js
sbb
ja
jno
or
mov
ret
dec
pushf
std
gs
xchg
sti
clc
int3
inc
mov
mov
pop
cmpsb
std
xchg
call
pop
cmp
mov
jnp
pop
icebp
pop
scas
and
push
jle
dec
std
ficomps
mov
adc
lahf
dec
mov
pop
and
ret
pop
sub
stos
mov
inc
xor
cwtl
pop
sub
mov
sub
sti
add
push
xor
add
pop
inc
loopne
sub
pop
jl
shrb
pop
pushf
pop
popf
bound
fnsave
pop
jmp
arpl
cmc
pop
movsl
icebp
test
mov
adc
jnp
xlat
xchg
fs
xchg
jb
les
jae
neg
xor
mov
xlat
jmp
mov
int
inc
shl
cmpsl
push
pop
stc
jo
test
arpl
icebp
mov
push
xchg
stos
lods
out
dec
push
je
lds
dec
lahf
push
das
movsl
push
rcrl
xchg
mov
cld
pop
popf
idivl
std
push
sub
pop
arpl
jecxz
cmpsb
pop
mov
mov
jmp
movsl
jp
shr
and
xor
shrl
mov
in
cwtl
jns
mov
mov
push
pop
cmc
mov
xor
xchg
cld
jmp
enter
jmp
jne
push
sbb
mov
xchg
scas
insb
add
sahf
jne
pop
xor
xor
jno
pop
in
xlat
dec
cmc
insb
dec
cltd
gs
and
sbb
cwtl
outsb
jae
pop
fidivl
push
loope
push
adc
addr16
inc
enter
push
pop
icebp
cmc
gs
mov
sub
lahf
adc
xor
lds
test
ja
sub
mov
push
lcall
add
movl
jmp
gs
adc
jge
fxch
push
pop
push
mov
jnp
int
std
cltd
fistpl
pop
push
xlat
jns
pushf
or
cmp
xchg
insl
dec
pop
pusha
fcomip
andps
popf
int
sbb
mov
jne
dec
dec
out
push
jg
dec
insb
push
lods
pop
movsb
je
pop
das
gs
int3
mov
addr16
dec
push
in
sti
mov
je
int3
dec
jmp
pop
data16
testb
scas
addr16
xchg
and
add
lret
or
mov
rcrl
adc
mov
or
cwtl
ret
lahf
out
add
cmp
data16
pop
mov
ret
sbb
sub
or
lea
fcomps
mov
dec
int3
mov
cmc
mov
mov
shrb
add
in
adc
sbb
sub
mov
fnsave
jle
mov
cld
pop
mov
and
add
jmp
xchg
pop
mov
in
xorps
stos
mov
push
mov
mov
jno
jno
and
xor
sbb
mov
xor
lret
hlt
mov
and
test
pop
jg
cltd
dec
dec
int
shrl
gs
aad
add
push
pop
in
sbb
fidivrs
or
sbb
or
push
pop
xor
xchg
adc
mov
push
dec
fisubl
popf
pop
add
cmp
mov
test
pushf
pop
pop
cwtl
or
lock
pusha
mov
pusha
loopne
inc
pop
movb
dec
ds
pop
cwtl
push
cmp
pop
int
fsubrs
loope
das
lods
dec
out
add
inc
and
push
scas
or
and
stos
pop
ret
pop
incb
es
insb
sar
mov
cs
movsl
mov
out
int
and
and
ljmp
cmp
ret
outsb
int
cld
pslld
dec
xchg
and
pop
mov
mov
pop
int3
mov
out
pop
test
xor
pop
dec
movsb
fistpll
fistpl
xorb
jae
addr16
push
in
mov
xchg
mov
jecxz
rorb
jmp
pop
mov
or
int3
pop
pop
mov
gs
jge
lcall
std
sub
pop
xchg
sbb
rcll
fistps
mov
pop
test
jbe
divl
lcall
xchg
pop
xor
cmpb
push
repz
jne
mov
in
xchg
sbb
les
je
gs
in
xchg
pop
pop
push
pop
movsl
test
mov
les
mov
sbb
sti
jp
pop
pop
jae
test
or
hlt
lahf
cmp
dec
pop
std
imul
movsl
adc
mov
in
scas
jl
or
cmp
add
push
lods
cmp
je
lds
lret
dec
jl
pop
mov
es
mov
mov
stc
sbb
mov
jb
pop
je
in
xchg
cmc
mov
xor
jecxz
pop
and
imul
scas
fsts
sub
cld
pop
xchg
sbbb
jne
mov
sub
insl
out
or
sbbl
mov
sbb
cs
test
cmpsb
int
and
xchg
or
push
sbb
mov
or
adc
mov
aas
aad
xor
mov
dec
jno
sub
push
lret
test
enter
in
jo
mov
mov
int
test
sub
jbe
xor
lcall
dec
sbb
or
pop
push
adc
hlt
jbe
pop
add
aam
jns
mov
pop
cmp
xchg
in
cmp
imul
pop
mov
repz
adc
xchg
fcompl
push
xor
aaa
cwtl
jge
popa
pop
jl
push
push
insb
loope
cmp
orl
dec
lods
mov
jb
fcoms
jp
sub
mov
mov
mov
pop
pop
pop
test
lods
jmp
mov
repnz
dec
jo
pop
cmp
test
jp
aam
mov
pop
xor
out
ss
pop
sbb
xorb
sbb
lret
adc
pop
mov
mov
imul
test
pop
or
fsts
jns
ja
arpl
imul
movl
std
push
insb
in
xchg
es
pop
sub
dec
enter
and
aad
pop
pop
pusha
adc
xlat
sti
mov
popf
pop
outsl
or
add
addr16
mov
cmp
imul
lahf
xor
cwtl
cwtl
xor
int
hlt
jns
dec
out
fstps
sbb
in
or
mov
lea
sbb
insl
gs
pop
insb
jb
sbb
scas
push
push
mov
mov
pop
mov
scas
and
push
mov
pop
hlt
xor
cli
sbb
pop
addr16
xchg
ficompl
pop
int3
jl
sbb
lcall
mov
adc
xlat
lret
test
cmp
in
sbb
loop
shlb
clc
les
pop
dec
mov
sbb
push
pop
xchg
adc
add
mov
adc
xchg
jbe
pop
mov
cmp
pop
or
and
popa
lods
cmp
sub
sbb
ficompl
xor
shlb
cmp
or
call
inc
ds
jecxz
pop
rorb
xchg
lahf
cmp
jo
push
pusha
testl
add
andl
jo
pop
add
cli
add
mov
pop
cld
sti
or
inc
pop
adc
ja
add
pop
sub
cmp
pop
or
hlt
mov
dec
jnp
or
push
filds
cmp
pop
add
xchg
jne
lds
push
pop
xchg
adc
stos
popl
lods
rcll
pop
gs
js
or
xchg
xor
pop
sub
mov
pop
hlt
lods
or
shlb
mov
and
fs
je
leave
push
cmp
push
fisttpll
xchg
pop
shl
cmc
xchg
add
pop
lods
bound
test
or
out
ds
cmp
nop
es
hlt
bound
adc
js
fidivl
jns
pop
popa
pop
or
imul
jl
lcall
mov
mov
sub
add
fcomps
sub
and
stc
cmp
pop
xchg
popf
push
pushf
daa
fwait
push
mov
push
xor
insb
push
xor
or
fs
cwtl
jo
fdivrs
cmp
outsb
inc
pop
xor
dec
jno
loopne
xchg
dec
or
push
xchg
dec
jge
pop
cmp
hlt
adc
inc
xchg
je
test
aad
jecxz
out
fs
idivb
cmc
xchg
adc
push
push
inc
pop
sub
cmp
inc
mov
adc
inc
cmp
mov
and
adc
xchg
les
jb
push
js
push
out
popa
sbb
dec
xlat
out
pushf
mov
daa
fdivs
imul
divb
pop
xchg
adc
fimull
or
fsubs
cmp
mov
pop
das
and
es
jnp
pusha
lahf
add
sbb
btcl
sbb
adc
js
xchg
cmpb
daa
pop
pop
push
lret
dec
lods
js
mov
pop
xchg
jl
dec
xchg
xorb
add
lods
lahf
xchg
daa
pop
jle
dec
sbb
notl
adc
out
popa
cmp
pop
loopne
push
in
mov
push
out
push
insb
pop
pop
cmpsl
push
test
scas
inc
mov
aad
outsb
or
dec
leave
lret
pop
lret
add
aaa
pop
daa
add
dec
jns
push
jns
pop
addr16
push
jne
adcb
jae
or
push
xchg
dec
xchg
lret
movsl
pop
cmp
push
mov
inc
popa
inc
cmp
outsb
mov
test
mov
push
inc
ss
ja
test
stos
scas
scas
xchg
push
add
shll
fsub
mov
xchg
and
sbb
addb
stos
xchg
mov
lds
or
gs
addr16
imul
out
jl
enter
jmp
arpl
push
enter
sub
ficompl
das
int
mov
lret
test
pop
lock
shlb
fisubrl
xchg
jne
test
inc
cli
sbb
fdivl
int
adcb
pop
sbb
dec
dec
mulb
and
loopne
jb
cmpl
pop
inc
jmp
xor
jne
int
ljmp
dec
mov
arpl
mov
dec
or
mov
pop
cld
das
pop
lea
and
adc
xchg
mov
lcall
inc
jg
lret
in
dec
pop
mov
pop
push
jbe
pop
push
xor
imul
cmpsb
int
push
xchg
mov
stos
xchg
jns
jle
mov
test
pusha
dec
xchg
lock
pop
repnz
jo
scas
mov
pop
arpl
mov
std
add
push
or
mov
xchg
fdivs
mov
into
cld
jo
data16
pop
scas
or
mov
jns
lds
dec
pop
and
sbb
cwtl
mov
repnz
dec
fcoms
adc
cmp
add
shl
dec
xchg
mov
fildll
pop
cmp
ret
movsl
nop
xchg
pop
pushf
cmc
and
mov
iret
push
inc
pop
pop
pop
fisubs
pop
test
out
xchg
mov
mov
push
pop
lods
mov
pop
jo
adc
js
scas
idiv
xor
pop
pop
rcl
cmp
sbb
out
clc
ss
mov
xor
int
dec
gs
scas
das
sbb
push
cmpsl
mov
pop
in
clc
inc
int
pop
inc
cli
jecxz
sbbl
push
pop
push
je
xor
sbb
repz
inc
pop
gs
sub
pop
push
jmp
outsl
scas
pop
loopne
mov
inc
pop
int
int3
out
cmp
and
jo
push
imul
sbb
pop
popl
dec
int3
outsl
pop
mov
pop
pusha
cmp
out
in
sbb
filds
mov
inc
jb
cltd
mov
and
int3
cmp
pop
scas
mov
jl
int
dec
pop
lock
divl
pop
dec
cmp
std
mov
into
mov
insb
inc
sub
sbb
in
mov
push
pop
mov
dec
sub
popf
sbb
mov
sbb
scas
adc
daa
pop
fstps
test
pop
add
insb
scas
and
mov
mov
mov
pop
pop
adc
pushf
dec
setg
mov
and
mov
xor
arpl
and
xor
ret
ljmp
leave
insl
stos
adcl
sub
loope
mov
in
fnstcw
cmc
lock
sbb
pop
mov
sbb
or
popf
lods
inc
shl
and
cmpsl
mov
fwait
push
sub
lea
inc
daa
cmp
jecxz
gs
cmp
sahf
out
xor
sbb
movsb
loop
mov
push
dec
pop
mov
ret
scas
rcll
adc
push
xor
jbe
jo
movsb
fcomps
mov
lea
cs
int3
insb
pop
mov
int
jae
mov
and
hlt
inc
jbe
lahf
dec
out
jo
pop
push
pop
nop
dec
mov
outsl
cmp
or
jb
xchg
mov
lret
xor
sbb
punpckldq
adc
pop
add
or
es
jbe
mov
mov
repz
clc
pop
jns
sub
popa
ds
cmp
mov
daa
jo
fistpl
mov
pop
or
push
mov
pop
and
je
mov
dec
dec
cmp
mov
or
imul
subl
pop
push
jg
stos
and
mov
add
pop
divl
jl
and
je
cmp
pop
inc
add
cli
adcl
jnp
jge
xor
movsl
mov
add
dec
pop
ds
jb
dec
shrl
sbb
or
mov
pop
push
int
pop
dec
enter
gs
jb
fdivp
mov
adc
nop
iret
xlat
scas
or
sub
pop
in
add
pop
aaa
pop
insb
je
fs
pop
push
jae
out
lret
sub
repz
adc
mov
pop
dec
ret
and
pop
and
pop
ror
scas
movsl
jecxz
jb
jle
call
idivl
cs
aas
dec
cmpsl
pop
jmp
sahf
les
and
xchg
jmp
lret
jnp
int
sub
mov
pop
movb
clc
sbb
pop
push
adc
leave
pop
push
inc
sbbb
sbb
pop
jecxz
movsb
call
addr16
pop
sub
add
adc
insl
pop
es
clc
xchg
mov
in
xchg
mov
cmpsb
push
pop
mov
mov
movsb
out
fistps
sub
mov
push
dec
cli
pop
cmp
ret
sub
push
pop
movsb
jbe
out
xor
popa
mov
lahf
pop
jb
in
cmp
jl
sub
cmp
in
pop
seta
in
inc
int
arpl
cmpsb
sub
mov
add
cmp
xchg
call
cmc
lret
test
setnp
dec
add
mov
cltd
imul
imul
sub
fs
pop
repnz
adc
stos
mov
mov
rcrl
cmpsl
mov
mov
aad
int
out
pop
xor
fsubr
sub
icebp
xchg
mov
in
push
cltd
add
mov
mov
jp
in
dec
lods
ret
mov
mov
cmpsl
pop
inc
push
mov
ss
aad
pop
jp
and
adc
cmpsb
add
fstps
mov
inc
in
and
mov
dec
inc
push
pop
adc
jno
and
pop
xor
and
iret
leave
adc
pop
push
lahf
loop
xchg
pop
sub
pop
cli
sub
fildll
or
stos
cmpsl
mov
add
dec
push
sbb
fcmovnbe
mov
icebp
add
dec
mov
or
in
pop
roll
pop
mov
test
shl
aad
dec
pop
into
int
sbb
in
cmp
mov
pop
arpl
cmc
mov
aam
dec
xchg
out
rcr
push
bound
pop
pop
test
lcall
ret
lods
fsubrl
dec
sbb
scas
xor
int
xchg
mov
mov
xchg
insb
pop
or
pop
imul
mov
mov
lods
jno
push
mov
inc
dec
add
xchg
cs
xchg
pop
ret
fisttpl
scas
fisubs
xor
test
jnp
in
adc
icebp
fdivrs
iret
mov
sbb
jg
fstps
dec
mov
rol
mov
sbb
inc
fsub
push
pop
iret
mov
scas
xor
test
sub
mov
fldt
cltd
pop
mov
jecxz
pop
shl
and
faddl
int3
cltd
dec
adc
pop
ds
or
insb
addr16
fucomip
int3
test
movsb
sub
mov
ret
mov
jbe
jns
push
fsubrl
loopne
pop
jo
push
flds
adc
mov
dec
mov
push
jb
pop
cmp
ds
mov
pusha
fstpl
out
or
lcall
inc
mov
sub
mov
xchg
sbb
sbb
sbbb
lea
nop
rep
pop
dec
mov
add
add
pop
adc
push
push
popf
push
pop
dec
leave
adc
mov
outsb
cmpsb
sbb
lcall
cmp
mov
adc
bnd
pop
or
push
push
inc
dec
pop
jo
jg
mov
push
jp
cwtl
repz
xor
push
pop
and
std
or
pusha
mov
jp
xchg
pop
pop
xor
xchg
adc
mov
sbb
pop
or
insl
cmp
pop
mov
fs
pop
pop
mov
mov
shlb
inc
xor
jle
pop
cli
pop
cmc
push
sbb
aas
pop
inc
stc
mov
aam
mov
xor
lea
inc
pop
and
jnp
dec
fwait
xor
and
pop
adc
ljmp
xor
mov
sbb
in
scas
lods
pop
mov
inc
jle
sbb
mov
jl
cmpl
es
pop
xchg
lea
jnp
xchg
mov
iret
jbe
mov
popf
xchg
pop
jmp
xor
pop
add
push
ret
pop
mov
cli
mov
aas
jnp
loopne
fwait
cld
pop
pop
stos
popf
nop
xchg
adc
fisttpll
xchg
imul
lea
add
mov
xor
cld
xor
cwtl
pop
or
shll
pop
or
pop
movsl
jl
mov
fsts
xor
add
cmp
xchg
or
fldcw
lret
pop
adc
test
aam
ja
add
lahf
sbb
mov
aaa
pop
shll
inc
xor
fisttpll
xchg
sbb
jns
dec
mov
fwait
nop
lahf
mov
fcoms
mov
jo
movsl
scas
test
call
pop
pop
cld
cmp
push
pop
fnstcw
add
sbb
dec
fwait
inc
cmpsb
push
jecxz
lahf
test
mov
stos
pop
sub
cltd
adc
lahf
test
scas
mov
mov
addr16
js
lret
not
inc
and
aam
test
mov
add
sti
lcall
add
xchg
aad
stc
pop
daa
cmp
clc
add
dec
loopne
fsubs
cmp
mov
pop
insb
cwtl
mov
pop
pop
jg
jo
cmp
push
int
pop
mov
insb
and
fidivrs
sbb
into
repz
js
cs
andl
adc
add
pop
ret
push
std
cmp
mov
pop
stc
push
cld
insb
dec
cmp
aad
sbb
repz
lods
cmp
arpl
dec
jle
mov
test
jmp
mov
add
test
in
sbb
mov
addb
pop
jnp
out
fldt
cmc
pop
dec
cmp
xchg
xor
mov
pop
push
adc
mov
cmpsl
sub
xlat
ss
cmpsl
mov
adc
fidivl
inc
pop
sbb
cmp
enter
push
cwtl
inc
fidivrl
fcmove
sti
cmpsb
out
add
or
in
int
shlb
dec
pop
icebp
mov
aas
je
cld
sub
xchg
fidivl
adc
pop
or
lret
sub
aad
mov
ret
push
pop
cmp
push
add
sahf
mov
cmp
pop
les
sbb
jle
pop
fimull
scas
mov
jecxz
sbb
cwtl
pop
lcall
fwait
pop
cld
stos
push
push
sbb
mov
adc
movsl
cmp
pop
aad
sbb
jo
mov
leave
sub
mov
repz
mov
sbb
dec
or
out
pop
scas
mov
lret
idivb
mov
lcall
xchg
mov
jmp
insb
jne
ret
pop
pop
cli
mov
in
mov
mov
andb
cmc
mov
push
dec
and
daa
inc
lcall
xchg
jns
mov
int3
fcomps
jae
fldenv
in
in
xchg
pop
das
sti
jnp
dec
pop
inc
pop
fnsave
push
dec
cmp
pop
and
push
jg
mov
loopne
xchg
pop
jmp
sti
pop
aam
in
mov
and
rcrb
add
aad
push
pushf
jae
xchg
pushl
mov
xor
je
mov
lahf
xlat
xchg
inc
cmp
mov
push
sbb
loopne
fidivrl
mov
cmp
pop
mov
es
mov
in
push
orb
jmp
test
dec
cltd
in
xor
pop
stos
adc
xchg
ret
jmp
xchg
enter
jmp
test
push
sub
mov
cli
cmp
gs
dec
inc
mov
lock
sbb
adc
xchg
inc
scas
sbb
mov
mov
int3
push
daa
ds
or
dec
jb
sub
jbe
mov
pop
cmp
jecxz
inc
dec
or
sbb
sahf
movsb
inc
and
or
or
jge
outsl
sub
sbb
negb
lods
fsubrp
and
fstps
jle
adc
xchg
jae
mov
aam
stc
sub
cld
pop
imul
pop
and
popa
cmp
jno
add
inc
xchg
dec
dec
pop
dec
or
jge
sbb
pop
inc
insb
fdivrs
pop
pop
sub
add
pop
push
in
pop
ss
jecxz
cld
movsl
or
sbb
adc
pop
loopne
cmp
mov
mov
jle
out
mov
mov
jo
inc
pop
push
add
cmpsb
sbb
jmp
dec
inc
icebp
cmp
push
xor
pusha
dec
ficompl
mov
inc
jg
dec
pop
fsts
hlt
adc
int
shlb
mov
and
dec
mov
aas
add
pop
mov
fstpl
push
daa
adc
and
xchg
arpl
outsl
jns
pop
cmp
mov
mov
fwait
subl
pop
push
ds
addr16
dec
jnp
xchg
sbb
and
jne
mov
lods
clc
pop
pop
jl
lahf
fxch
jmp
lds
cmp
adc
pop
jo
aas
int
and
mov
xor
test
pop
jae
jne
fisubrs
mov
xor
bound
repnz
pusha
sbbl
ljmp
roll
dec
aaa
xor
inc
sbb
sub
in
fstpt
dec
lds
repz
out
stos
xchg
pop
lods
adc
clc
lcall
inc
pusha
insb
lcall
sbb
pop
pop
ss
int3
icebp
cltd
movsb
cs
cvtpi2ps
pop
test
in
sbb
sbb
xor
mov
mov
sbb
push
push
scas
and
mov
pop
adc
push
inc
rorl
aas
mov
mov
cmpsl
cmp
out
test
mov
stc
adc
jns
je
fstpt
fstpl
push
in
insl
iret
cltd
inc
mov
pop
mov
or
gs
jbe
stos
js
mov
int3
fistl
orl
cmpsl
test
repnz
test
inc
dec
mov
mov
jnp
in
and
sbb
mov
pop
sub
xchg
cltd
mov
pop
pop
es
arpl
jge
mov
pop
nop
loop
pop
int
cli
clc
cs
pop
mov
inc
or
mov
xchg
sub
or
fldt
pop
xor
pop
or
pop
push
scas
push
mov
pop
push
pushf
xor
fcmovnbe
add
lcall
and
or
fdivrp
and
ret
pop
test
mov
pop
loopne
inc
mov
out
mov
dec
sub
jno
lret
outsl
xlat
imul
inc
or
inc
adc
jle
xchg
testl
mov
xchg
xlat
and
int3
push
pop
or
into
ret
dec
pop
jb
mov
jnp
xchg
gs
pop
movsb
rcl
jmp
fnstcw
jecxz
jle
sbb
and
push
loopne
jbe
sbb
jecxz
pop
aad
popa
or
rcll
lods
inc
xor
out
mov
xchg
pop
les
faddp
jnp
push
pop
and
adc
and
xchg
mov
pop
adc
pop
aam
inc
inc
int
adc
pop
in
xchg
rorb
lea
dec
pop
push
and
inc
push
mov
add
inc
ds
xchg
imul
inc
push
jmp
xor
and
adc
call
loopne
or
mov
jno
xor
mov
outsb
mov
cmp
xchg
jg
pop
mov
outsl
xor
int3
inc
inc
and
ret
fsubl
imul
pop
and
xor
test
ljmp
call
cmp
mov
mov
cmp
jb
ret
cmp
pop
mov
std
push
icebp
mov
fsubr
jp
pop
scas
cld
enter
loop
jecxz
arpl
pushf
imul
andl
ret
pop
jmp
pop
scas
or
ss
cld
inc
pop
xor
xor
dec
in
push
imul
mov
add
out
xor
mov
fcoms
lret
arpl
repnz
pop
push
jge
es
popf
rol
jae
fldcw
mov
pusha
test
mov
cmp
mov
sub
add
and
pop
mov
lods
lcall
movl
adc
xor
mov
pop
mov
aaa
jp
fcmovb
iret
xchg
mov
jg
xor
mov
dec
fs
mov
inc
sbb
lcall
cmp
mov
cmp
inc
inc
and
out
lcall
adc
push
adc
mov
in
mov
bound
sti
stos
lret
mov
pop
push
shll
xchg
lock
aas
cmp
out
cmp
lret
and
jb
leave
adc
in
push
pop
dec
cmp
scas
mov
xchg
push
pop
xor
cmp
sub
pop
adc
jmp
lods
pop
mov
push
addr16
das
ss
push
cmpsb
pop
nop
test
lret
pop
xchg
or
inc
imul
mov
fiaddl
and
pop
mov
jo
push
fldenv
shl
out
push
pop
aaa
jns
xchg
mov
scas
jp
jle
jns
mov
push
dec
adc
fmul
popa
inc
mov
cmp
and
in
dec
pop
in
imul
dec
xchg
mov
flds
pop
mov
stos
jbe
mov
jb,pt
das
mov
mov
mov
push
xchg
xor
cmc
pop
cmp
js
sub
adc
push
out
xor
add
lock
cmp
idivl
xchg
pop
push
pop
cmpsl
fidivl
imul
mov
cltd
mov
popa
lods
or
mov
test
loope
pop
adc
or
int3
repz
jns
out
mov
add
loopne
push
dec
fistpl
or
lahf
arpl
clc
pop
add
sbb
inc
add
mov
test
sti
or
fldt
inc
mov
insb
pop
xchg
out
xchg
and
outsb
pop
test
daa
lcall
mov
ds
cmp
jbe
mov
addr16
sub
int3
pushf
arpl
inc
mov
pop
and
pushf
sub
adc
push
push
pop
daa
xor
mov
fistpll
dec
roll
mov
sub
inc
pop
int3
pop
jbe
cwtl
out
test
fcompl
ficomps
iret
sbbb
cmp
fwait
in
pop
push
leave
mov
scas
lea
push
shll
mov
dec
push
sbb
and
jle
jp
lret
je
stc
call
inc
cmp
pop
pop
adc
push
and
ret
pop
jg
pop
je
pop
dec
xor
ret
cltd
cmp
data16
imul
xchg
add
and
out
sbb
loopne
mov
pop
dec
shlb
cmp
mov
mov
mov
mov
sbb
sub
mov
mov
pop
fstps
xor
repnz
mov
push
lds
jge,pn
pop
push
or
imul
mov
lret
add
ret
pop
cmp
pop
cli
sub
jle
xor
clc
ficompl
mov
pop
cwtl
dec
test
rorb
xchg
ja
pop
mov
test
xor
mov
leave
cmp
cmp
push
fistl
jg
and
pop
mov
pop
xchg
push
out
cmp
out
sbb
adc
mov
rclb
pop
pop
add
mov
outsb
cltd
xchg
mov
test
or
aam
rorb
dec
movsl
inc
pop
stos
sub
outsl
mov
and
cmpsb
pop
leave
adc
daa
push
cwtl
pop
test
inc
mov
out
xor
push
es
xor
xlat
mov
adc
rcrl
dec
ficomps
or
test
jle
pop
mov
outsb
push
xor
jns
adc
mov
mov
outsb
xchg
sahf
sti
dec
pop
fcoms
pushw
cmp
ficomps
das
pop
outsb
sbb
sbb
imul
mov
cmp
pop
jmp
shlb
or
sahf
inc
sbb
sub
mov
scas
sbb
aas
xchg
sbb
lods
xchg
jns
and
sbb
sbb
fidivl
push
je
lret
loop
jmp
inc
pop
xor
sbbl
mov
scas
adc
jl
pop
sub
in
icebp
pop
pop
mov
dec
scas
lret
jno
pop
and
sbbb
notl
pop
sub
enter
icebp
fistpll
je
add
leave
loop
push
pop
lock
pop
adc
xchg
jge
rorl
cwtl
adc
popa
clc
pop
cmpsb
xchg
loop
sbb
mov
mov
cltd
xorb
cs
out
fimuls
stc
mov
stc
mov
xchg
pop
inc
jnp
pop
pop
call
push
inc
jne
aam
mov
push
test
and
lahf
clc
inc
rcrl
mov
repnz
push
mov
cmp
jno
sub
push
xor
push
mov
mov
lahf
pushf
mov
add
js
orb
test
and
push
or
mov
mov
sbbb
jo
ficompl
inc
pop
pop
sbb
adc
xchg
imul
push
push
mov
lea
sbb
imul
fldpi
mov
repz
inc
int
sub
pop
push
pop
jnp
js
adc
jb
jg
das
push
pop
sub
dec
and
hlt
cwtl
fmul
push
aad
imul
lcall
pop
dec
pop
int
js
pop
and
ret
sub
cmp
sarl
dec
pushf
jo
fs
outsl
or
sbb
mov
mov
fistpll
mov
lods
or
scas
sub
lock
adc
aad
xchg
add
andl
mov
lahf
mov
mov
xchg
addr16
rcrb
ds
mov
scas
cmp
jb
std
fiaddl
js
push
pop
iret
inc
fwait
add
adc
je
mov
ficoml
inc
je
cmp
lea
repz
mov
jns
adc
pusha
pop
pushf
mov
and
adc
test
mov
jl
iret
adc
dec
adc
xchg
jb
xor
pop
mov
inc
xor
pop
xchg
cwtl
xor
je
sbb
mov
fmuls
cmp
xor
mov
clc
mov
fisttpl
jp
std
jecxz
loop
pop
cmp
sub
xor
or
idiv
pop
stos
sub
fs
cmp
cwtl
pop
pop
xor
lahf
or
xchg
sbb
pop
stos
mov
sub
mov
sahf
or
jp
push
pop
mov
shlb
in
inc
pop
lods
pop
std
pop
mov
mov
pushf
out
repz
insl
les
xor
jne
sarl
xchg
nop
insl
push
out
add
ffree
add
sub
jecxz
mov
pop
rcr
dec
pop
or
dec
sbb
xchg
adc
dec
lea
outsb
mov
add
xor
sbb
lea
pop
sbb
leave
mov
jnp
arpl
mov
in
mov
xor
or
sub
icebp
pop
roll
push
add
xchg
push
xor
cmp
lods
in
sbb
out
notl
jg
aad
scas
add
pop
dec
mov
cmc
int3
pop
xchg
jmp
sbb
int
das
clc
scas
inc
sub
loopne
imul
test
mov
add
shrb
mov
repnz
clc
inc
mov
nop
pop
fcmovnbe
pop
mov
sbb
popa
pop
or
xchg
mov
int
xchg
pop
sub
dec
les
push
pop
nop
xor
or
pop
inc
adc
mov
test
or
jp
ficoml
cmp
xchg
dec
mov
repnz
xchg
int
or
lcall
test
cltd
jl
addl
movsl
pop
stc
pop
jne
sub
into
in
fdivr
mov
pop
lcall
push
pop
or
lea
sbb
fnstcw
lods
cltd
mov
fcompl
fists
adc
jg
pop
cwtl
mov
cmpl
mov
cmp
lret
push
js
fs
and
push
xor
add
cltd
mov
movsl
jo
out
dec
leave
das
xor
inc
xchg
ret
call
iret
mov
roll
test
push
push
sub
jns
and
movsl
in
pop
pop
adc
mov
lds
xchg
std
add
sahf
enter
push
aad
iret
dec
and
mov
dec
pop
dec
paddb
ja
pop
push
ret
push
mov
cwtl
jns
mov
mov
mov
pop
and
lods
or
out
movsl
adc
pop
sbb
repnz
dec
out
mov
xchg
lock
pop
ds
and
pop
loope
subb
pop
add
mov
rorl
xor
pop
jmp
enter
cltd
out
jbe
out
sbb
pop
into
cmp
int
pop
dec
pop
mov
movsl
push
lods
movsb
subb
or
int3
fwait
les
jno
pop
xor
push
fxch
mov
outsl
cmp
inc
aam
repz
and
mov
sbbb
jecxz
dec
fwait
loope
lock
xor
rolb
pop
arpl
dec
dec
aaa
popf
fwait
aad
pop
lea
jns
pop
std
sub
int
jmp
dec
inc
cltd
fstps
jb
test
pop
cmp
sub
shll
insl
mov
shl
popa
and
dec
pop
cld
in
mov
mov
es
lock
lret
or
cmp
xchg
lods
into
sbb
pop
xor
sbb
cmpb
jbe
int3
sbb
jge
dec
int
push
pop
rolb
decl
les
cltd
add
jnp
enter
cmc
pop
into
stc
out
insb
sti
mov
mov
inc
fsubl
jbe
fistps
pop
lock
mov
inc
test
xchg
adc
mov
pop
cld
lret
ss
pop
or
sbb
popa
daa
jecxz
rcrl
stc
sarb
pop
mov
push
out
shl
push
dec
fstps
mov
pop
stos
pshufw
xor
dec
scas
sahf
or
cmp
jns
mov
out
jecxz
fucomi
dec
ljmp
jo
pop
push
rcrl
xorb
sbb
loop
scas
jo
stc
pop
xchg
jle
adc
bnd
pop
std
cltd
mov
lret
pop
sbb
stos
jbe
push
pop
shrb
pop
dec
xchg
sbb
dec
xor
push
pop
cmpl
pop
sub
push
xlat
mov
mov
push
cs
inc
jae
pop
insl
loopne
pop
push
test
lea
push
cli
fcompl
mov
cltd
ss
mov
loopne
and
stos
adc
and
mov
insl
adc
fidivrl
imul
pop
pop
ljmp
les
in
push
mov
pop
sbb
inc
push
int3
stc
cmp
and
repnz
hlt
cmpsb
xor
arpl
jmp
pop
pushf
jge
xchg
mov
and
hlt
inc
shrb
push
mov
fsubrp
mov
mov
and
loope
sbb
es
sbb
lods
inc
or
adc
cmp
jbe
xchg
mov
aaa
inc
add
xor
xor
cmp
or
sbb
mov
pop
push
in
jbe
ror
mov
movsl
xchg
cli
int
mov
aam
out
dec
fdivr
sbbl
xchg
mov
pop
pop
jge
xlat
pop
or
fcompp
push
or
orl
jmp
dec
add
or
mov
pop
adc
js
bound
pop
in
push
lcall
add
pop
pop
orl
xor
in
push
lahf
jno,pt
sbb
push
aaa
mov
repz
pop
stc
and
mov
sub
xchg
cmp
ljmp
out
int
pop
or
mov
loope
fistpl
mov
jne
dec
xchg
cld
fadds
fldenv
mov
jb
or
sbb
fldcw
or
pop
imul
out
push
ljmp
add
ret
and
xchg
pop
fidivl
mov
js
pop
insl
lret
push
mov
cmp
sub
aam
fucomi
iret
xor
inc
movsl
sahf
popa
jp
xchg
pop
xlat
cmp
mov
sbb
dec
sbb
push
mov
lock
adc
jnp,pt
cmp
mov
push
mov
cltd
repnz
ret
int
sti
mov
stos
fistpl
lods
cmp
out
jnp
adc
arpl
aam
cmpsl
test
mov
xchg
cmp
scas
cmc
fs
or
jb
pop
mov
cs
pop
ficompl
test
rclb
dec
push
xlat
jns
push
out
ret
aas
clc
popf
in
xorl
pop
fwait
mov
lea
jo
leave
pop
mov
inc
fcoml
pop
ljmp
pop
lcall
ja
adc
je
negl
sub
pop
sbb
movsl
insl
shr
pop
push
int
and
inc
cmp
fimull
loop
sbb
dec
stc
pop
mov
es
int3
adc
rolb
scas
pop
cmp
adc
push
adc
pop
icebp
daa
stos
insb
pop
mov
cmp
popf
cmc
jg
xchg
mov
adc
loope
sub
mov
clc
mov
pop
pop
pop
jecxz
xlat
lods
pop
mov
and
mov
bnd
cmp
mov
mov
sbb
push
pop
shrb
jb
inc
pop
in
imul
or
fldenv
pop
shlb
negb
push
pop
mov
pop
mov
jb
sar
dec
das
adc
repz
lcall
in
inc
mov
int
pushf
pop
adc
leave
jle
cmp
lret
xchg
xor
scas
data16
xchg
enter
in
cltd
cmpsb
pop
dec
repz
pop
inc
imul
pop
or
negl
cltd
dec
mov
jae
int
inc
jmp
dec
and
cmpsb
scas
and
jo
ret
dec
lock
mov
mov
cs
push
dec
popa
push
insl
inc
cmpb
outsb
stc
jecxz
inc
dec
dec
mov
pop
and
sub
lea
pop
dec
jbe
out
aad
pop
dec
fwait
pop
mov
pop
xchg
ret
fcmove
push
inc
insl
sbb
sbbb
clc
stos
push
or
xchg
mov
sarb
movb
cmp
dec
cmp
mov
jb
insb
ds
gs
in
or
inc
imulb
mov
mov
sbb
jmp
inc
lcall
jno
mov
ret
loope
cld
test
rcrb
cmpsl
nop
mov
lret
mov
movsb
daa
dec
mov
lea
jae
jl
scas
lds
jecxz
outsl
sti
jno
sbb
jle
out
mov
popa
xor
inc
sahf
arpl
pop
aas
cli
repz
mov
jae
mov
pop
insl
push
xor
mov
cmpsl
inc
jb
push
loope
movq
loop
push
mov
je
loopne
fists
cmp
mov
or
pop
imul
aaa
jbe
adc
mov
scas
jo
into
shr
mov
popl
stc
xor
shll
adc
mov
enter
or
mov
je
fwait
scas
orb
dec
pop
push
popa
or
clc
xor
int3
dec
jne
cmc
jp
aam
out
sub
test
pop
lods
pop
dec
outsb
push
xor
adc
mov
dec
pop
push
cmpsb
int3
shrl
fldl
clc
push
jo
pop
std
mov
sub
incb
dec
repz
aaa
mov
sub
xchg
jp
pop
aas
or
sbb
fcomi
mov
out
pop
pop
pop
rclb
mov
xchg
mov
jbe
aaa
push
jge
jne
push
mov
add
fldpi
pop
cmp
outsl
insb
pop
inc
dec
mov
cwtl
cmc
xor
xchg
iret
pop
mov
cmp
jge
int3
fwait
lock
nop
pop
pushf
addr16
mov
push
ljmp
pusha
pop
addl
jbe
sbb
mov
ret
mov
mov
dec
pop
xorb
xchg
dec
or
push
cli
int
sub
into
or
stos
repz
ret
pop
popf
scas
andb
cltd
xor
adc
stos
pop
ret
mov
mov
out
push
mov
mov
add
out
push
clc
jecxz
pop
fbstp
lods
loop
jmp
into
test
jbe
shlb
cmp
pop
test
int
sbb
jg
pop
mov
push
push
cwtl
or
fiaddl
xchg
int3
in
fisubrs
ret
neg
xchg
int
sub
lock
mov
pop
leave
adcb
and
popf
enter
test
jae
aam
push
push
pop
ja
outsw
adc
sti
negl
xchg
fnsave
mov
lods
and
add
pop
jbe
in
and
subb
jo
repnz
xlat
fiadds
cmp
jl
cmp
int
fiaddl
pop
xchg
dec
shlb
cmpsb
xor
jb
aaa
add
sbb
fsubrs
mov
mov
sbb
rcrl
orb
pop
loope
imulb
pop
les
xchg
enter
repnz
scas
cmp
add
xchg
movl
test
cmpsb
test
lods
dec
push
sbbb
aaa
hlt
fcomps
push
push
push
pop
out
gs
je
inc
or
jo
pop
repz
and
out
push
leave
dec
inc
pop
push
stc
jmp
movsb
jo
mov
sub
jo
sub
lcall
pop
sub
add
fcompl
repnz
pop
call
sahf
jo
pop
ljmp
xor
jecxz
inc
adc
lcall
adc
pop
jne
push
aad
pop
xor
in
sbb
mov
pop
and
add
dec
loop
fnstsw
inc
dec
xchg
adc
jecxz
fs
pop
adc
mov
pop
cld
add
mov
mov
mov
popa
cmp
flds
incl
fwait
push
mov
int3
rclb
mov
jl
cmp
insb
pop
cmp
test
cmp
into
pop
xor
sub
cltd
rcll
pop
frstor
cmc
mov
in
movsl
pop
adc
lea
push
lock
jmp
imul
std
mov
and
or
inc
movsb
repz
cmp
ficomps
pop
mov
jns
pop
insl
dec
push
inc
mov
js
or
lods
jge
rorl
push
sbb
lahf
test
dec
xchg
orl
pusha
inc
xor
cmp
push
mov
inc
scas
call
bound
scas
pop
adc
inc
out
js
mov
pop
in
fldcw
push
push
jno
mov
nop
dec
aas
push
dec
pop
inc
daa
pop
adc
inc
lods
push
pop
mov
int
scas
sub
mov
pop
cld
adc
inc
jae
mov
out
cwtl
mov
sbb
sub
dec
jge
ficoml
stos
pushf
mov
enter
pop
fildll
xchg
data16
jnp
add
fsts
pushf
ret
out
shlb
xor
push
and
mov
pop
dec
out
cld
stos
pop
sub
xchg
pop
iret
cmpsl
in
icebp
dec
sbbb
push
int
inc
sti
mov
mov
jns
dec
jb
or
adc
pop
test
popa
jbe
loopne
pop
cmp
cmp
mov
fs
ret
int
sub
mov
adc
fcomp
pop
aad
and
mov
cwtl
adcb
pop
cmp
mull
fidivrl
sahf
mov
mov
jg
jle
pop
out
in
adc
mov
pop
ja
xor
adc
insl
fisttpl
xchg
cmp
pop
popa
pop
xor
aaa
imul
stos
and
pop
lret
into
inc
pop
fwait
sub
int3
inc
cmp
add
pop
xchg
lcall
sbb
cs
imull
movsl
mov
int
pop
imul
out
push
and
jbe
pop
rcll
mov
cmp
je
scas
imul
xor
xchg
mov
into
jb
ds
pop
cwtl
jae
adc
sub
mov
test
dec
cmp
loopne
mov
jecxz
fldenv
xchg
dec
clc
sbb
jnp
fwait
dec
mov
mov
gs
push
inc
mov
cltd
pop
test
push
cmp
pop
mov
repz
mov
fisttpll
lea
xor
inc
xchg
lahf
lods
jo
sbb
pushf
fcomps
scas
jmp
jnp
loope
clc
test
mov
test
dec
mov
cmp
ficomps
xor
sahf
in
lret
xor
mov
lahf
js
cmp
imulb
jnp
sbb
pop
jae
mov
sbbb
fscale
dec
inc
and
rcll
mov
lret
add
fsubs
cmp
cmp
pop
pushf
and
pop
inc
js
or
leave
pop
outsl
test
fs
xchg
push
std
mov
aas
iret
sbb
mov
ret
dec
insl
fcmovne
test
sar
sub
cld
idivb
mov
inc
xchg
xchg
pop
ljmp
push
mov
mov
fsts
pop
ljmp
mov
adc
cmp
mov
int
or
mov
push
jb
sub
and
in
dec
faddl
pusha
mov
idivl
jmp
jnp
fwait
push
lahf
mov
mov
out
pop
fs
movsl
dec
cmpsl
test
add
int
or
repz
aam
pop
xor
incl
scas
jbe
nop
pop
pop
sbb
movsb
inc
mov
cmp
xchg
ret
or
inc
fistps
into
pop
jns
lret
push
and
mov
mov
jle
or
sbb
mov
sbb
pushf
push
cmp
xor
stc
mov
pop
xchg
jge
and
dec
xor
popa
pop
or
repz
pop
pop
pop
mov
pop
jbe
add
pop
dec
adc
cmp
ror
inc
popf
lock
scas
push
into
mov
insl
pop
jbe
pop
movsl
sub
pop
stc
daa
push
sub
or
jns
push
test
out
push
js
jno
inc
pop
sarb
cmp
addr16
mov
push
xchg
pop
negb
call
es
jecxz
dec
push
out
push
in
jmp
cltd
or
std
mov
imul
pushf
inc
or
push
pop
js
mov
sbb
sbb
mov
push
push
adc
fcmove
int
pop
lcall
test
and
gs
mov
push
jmp
jg
add
pop
mov
dec
lea
mov
sub
jbe
inc
cmp
mov
push
pop
dec
mov
adc
jp
cli
add
pop
add
pop
ja
shrl
stos
mov
push
mov
mov
test
inc
addr16
in
pushf
and
std
xchg
jnp
pop
int
mov
add
test
mov
hlt
pop
push
jae
mov
sbb
and
xchg
imul
pushf
jge
add
shr
sub
ror
sub
fisubrs
push
pop
add
cmp
push
mov
pop
and
adc
pop
movsb
mov
cmpsb
xor
divl
mov
xor
adc
lock
addr16
xchg
je
mov
pop
jl
ds
aad
lret
or
sub
sub
mov
dec
iret
push
xor
pop
inc
sub
lcall
cmc
cmp
popf
jo
inc
fs
dec
sbb
and
sbb
push
pop
mov
sbb
leave
pop
sti
int
or
out
lahf
dec
or
mov
pop
arpl
aaa
xchg
pushf
ficompl
push
fsubrp
cld
mov
mov
pop
dec
adc
pop
lret
or
outsl
sbb
push
icebp
pushf
sbb
cld
ds
jae
push
clc
fstpt
cmp
xchg
mov
mov
inc
mov
jl
jbe
fimull
pop
pop
cmpb
pop
pop
and
adc
jmp
es
int
dec
cmp
addr16
in
stos
scas
cmp
lret
pop
push
push
lahf
pop
pop
ret
dec
dec
out
pop
jp
scas
sahf
jecxz
adc
cmc
or
pop
shlb
dec
pop
xor
lcall
and
add
cld
stos
adc
sub
xchg
es
shlb
sub
pop
dec
add
in
sub
int
scas
dec
cld
sub
sti
mov
fcoms
sub
cmc
scas
arpl
bound
js
mov
mov
lahf
cmc
pop
cltd
push
or
fs
sbb
ja
out
repz
lea
cmp
dec
pop
push
out
cmp
inc
mov
fsubs
out
inc
mov
xchg
lods
push
pop
push
jo
fwait
mov
dec
rcll
and
pop
les
push
pop
mov
sbb
push
bound
aas
sarb
fsubrl
mov
pushf
cltd
push
sbb
dec
shll
sub
pop
mov
sbb
pop
add
mov
arpl
or
mov
pop
adc
jl
xchg
in
dec
fimull
lahf
mov
mov
cmp
add
sub
dec
aad
mov
pop
sub
or
mov
pop
jl
pushf
jecxz
push
cmp
lcall
imul
out
push
loope
push
cmp
dec
adc
insl
jnp
lahf
jae
push
stos
sub
lcall
pop
scas
sub
movl
sti
dec
add
sub
sti
loopne
dec
lahf
cmp
pop
jg
dec
mov
cltd
rcrb
xchg
mov
js
sahf
test
sbb
sbb
or
pop
std
icebp
and
mov
rol
push
dec
mov
loopne
ficoml
je
cli
and
popf
pop
scas
lods
loope
popa
cwtl
mov
lea
mov
xor
insb
inc
pop
cmpl
pop
adc
mov
mov
lock
test
pop
rorb
add
iret
add
inc
fdivr
mov
pop
in
fistps
popf
out
out
push
mov
fcoml
dec
mov
or
jns
add
push
int3
pop
mov
or
icebp
int
js
pop
rolb
push
fisubl
cmp
dec
jecxz
mov
js
scas
pop
pop
lods
loopne
mov
mov
jl
cmc
pop
dec
and
inc
in
gs
hlt
fsts
xchg
dec
dec
das
or
pop
jl
push
jle
icebp
push
push
pop
add
imul
imulb
mov
xchg
icebp
es
inc
sub
pop
iret
ljmp
arpl
stos
pop
push
fsubrl
mov
push
ljmp
add
xor
pop
sbb
pop
outsb
loopne
inc
jmp
jecxz
shll
test
dec
jle
fisubrl
inc
dec
dec
pusha
lock
jg
pop
addl
cmp
mov
mov
ds
ss
sbb
popa
adc
push
sub
pop
adc
push
int3
fisttpl
lcall
and
and
rcr
mov
push
xlat
inc
out
sbb
aas
pop
pop
mov
addr16
pop
sti
cwtl
xlat
xchg
push
cmp
jns
lret
jge
es
pop
fiadds
xchg
xor
int
mov
and
and
jp
std
andb
mov
data16
pop
push
pop
add
sbb
andl
icebp
lcall
scas
lods
mov
sbb
les
and
dec
and
pop
int3
xchg
mov
pushf
std
test
pop
js
xchg
fisubs
jg
out
dec
dec
ss
cmp
fdiv
and
out
xchg
mov
push
popf
mov
fmul
xchg
lcall
lock
xchg
mov
dec
pop
mov
pop
sub
and
dec
pop
int3
xor
out
in
rcrl
mov
mov
pop
movsl
scas
xor
adc
pop
cmpsb
xchg
insl
xchg
and
mov
lea
pop
xchg
mov
jbe
pop
mov
mov
gs
std
dec
ds
fwait
jp
xlat
xchg
rcll
int
pop
jo
pop
fidivs
push
lcall
nop
int3
loopne
jb
adc
add
ret
mov
pop
mov
ja
lock
pop
int3
inc
jbe
sbbl
dec
jbe
cli
adc
addr16
pop
and
pop
push
outsb
add
xor
test
pop
lods
test
pushl
push
mov
in
icebp
scas
fcomi
sub
out
mov
fidivrl
push
in
or
lahf
fidivs
xchg
fcmovnu
jmp
lea
pop
push
enter
int3
mov
cmpsl
inc
sub
pop
mov
idivb
inc
and
pusha
add
or
mov
cmp
shll
inc
mov
ficomps
stos
rcrl
jmp
mov
pop
jle
clc
inc
mov
xor
test
sbb
pop
or
add
jns
pop
fists
icebp
sbb
pop
inc
and
cmpsl
cmp
sbb
clc
in
xchg
add
adc
mov
jmp
pop
popf
cmpsb
bound
shl
in
pop
test
scas
inc
loop
inc
pop
ds
icebp
adc
push
jo
push
fsubp
loop
pop
pushf
push
out
int
add
lcall
mov
movsl
mov
pop
xor
push
push
pop
mov
or
and
mov
stos
fs
addl
pop
adcb
negb
xor
fidivrs
sub
pop
cld
ds
int
addr16
in
fildl
jecxz
jae
pop
mov
push
ficoml
mov
rorl
jmp
into
nop
mov
out
adc
shrb
adc
sbb
ret
pop
xor
ret
lea
mov
into
dec
or
fsubrp
sbb
pop
adc
call
adc
out
pop
pop
shr
loope
push
pop
dec
ja
sarb
cmp
sbb
adc
jge
sbb
pop
pop
push
cmpb
int
sbb
in
iret
pop
sahf
xchg
insl
and
mov
xor
pop
push
popa
cli
insl
xlat
or
xchg
mov
push
xor
mov
pop
icebp
std
into
and
pop
dec
jno
lea
fxch
adc
cltd
pop
mov
insb
jo
pop
jmp
es
les
inc
xor
fisttps
repnz
mov
pop
cltd
outsl
loop
push
pop
das
fs
cmp
setl
xchg
jb
gs
loope
mov
mov
inc
mov
jo
mov
daa
repz
int3
loop
pop
inc
data16
fstp
pop
ljmp
add
jge
jle
cmc
or
pop
leave
push
inc
lret
jb
fisttpll
mov
leave
jge
int
add
lcall
frstor
lds
movsl
dec
popa
cmp
aam
and
cmpb
adc
mov
jecxz
pop
rcl
add
pop
cld
popl
pop
shlb
mov
scas
movsb
pop
int3
pop
fmuls
fwait
dec
inc
js
pop
shll
or
sbb
dec
pop
pop
cmp
sti
pop
cmp
jns
jp
fwait
mov
dec
bound
test
inc
sub
sbb
mov
pcmpeqd
pop
add
gs
jo
or
fidivl
push
scas
mov
xor
pop
jo
call
cmpsl
ftst
xchg
xchg
jb
cmp
les
inc
int3
push
dec
jno
rcrb
mov
loop
inc
fcomi
aad
fstpl
arpl
movsb
adc
xor
subb
addr16
push
ds
arpl
pop
pop
lret
sbb
int3
add
pop
pop
aam
sub
jo
shll
lret
mov
dec
xlat
rol
mov
scas
mov
jae
dec
adc
outsb
jecxz
sub
pop
sub
jbe
push
xchg
add
cmp
cmp
mov
pop
jne
lret
cmp
pop
push
out
scas
stos
es
mov
test
and
mov
sbb
sub
and
add
xor
je
sbb
fdiv
dec
js
xchg
mov
outsl
pop
inc
pop
test
jae
iret
int3
shr
leave
sbb
sbb
insl
mov
lcall
daa
jmp
pop
pop
push
sbb
sub
mov
in
xor
faddl
pop
xchg
sarl
push
push
rcrb
es
jbe
mov
jecxz
mov
pop
test
inc
pop
scas
jb
cmpb
mov
mov
bound
sbb
cmc
mov
mov
pop
adc
aas
lcall
cmpl
mov
scas
and
lods
call
mov
leave
sbb
paddq
jl
jecxz
jle
sub
fists
popf
pop
push
add
insl
js
xchg
pop
adc
int
lds
dec
or
mov
sub
or
test
pop
or
adcb
pop
dec
fnstcw
xor
pop
ror
lock
or
sbb
data16
out
mov
sbbl
mov
mov
pop
sarl
mov
cwtl
aad
pop
pop
dec
aaa
cld
dec
out
mov
pop
mov
jl
cmpsb
and
mov
stc
rcll
popf
sahf
fisttpl
or
negl
nop
hlt
mov
sbb
int
sbb
fisubrl
pop
xchg
dec
and
cmp
pop
adc
cmpsl
idivb
aas
pop
xchg
popa
pop
add
aad
in
mov
fwait
jne
add
push
or
stc
and
icebp
mov
std
scas
add
stos
jno
fmuls
and
leave
loopne
dec
jmp
hlt
mov
or
outsb
rclb
jb
aas
pop
mov
es
loop
pop
js
mov
test
ret
push
int3
jae
movsb
sbb
out
xchg
mov
mov
aas
add
pop
dec
mov
jno
out
push
mov
loopne
mov
ret
jo
mov
mov
pop
cmp
mov
mov
sar
stos
dec
xchg
or
and
cmp
xor
xchg
push
or
es
push
cli
leave
int3
jle
pop
cmpl
int
xchg
and
jns
adc
flds
pop
or
int
mov
mov
cmp
es
aas
stc
sbb
push
daa
shl
add
mov
rcrb
sub
pop
cmp
sahf
aam
loope
sub
xchg
stos
jne
mov
cwtl
pop
jb
nop
mov
and
pop
xchg
leave
lret
lahf
push
fistpl
loope
rcrb
inc
push
jb
cli
xchg
mov
xchg
scas
pop
or
sub
lret
fbstp
jno
imul
xchg
pop
bound
and
popa
and
and
cmp
pop
dec
pop
ljmp
lock
sub
push
jl
jb
jno
stos
imul
fidivl
lret
xor
pop
lret
pop
pop
pusha
ret
pop
dec
jl
pop
mov
inc
xchg
dec
push
rcrl
push
cmp
out
and
daa
xchg
adc
pop
adc
adc
popa
xchg
shl
pop
cld
adc
dec
repnz
or
test
mov
pop
pop
test
pop
jnp
or
sarl
push
std
push
pop
mov
xchg
xchg
cmp
test
repz
imul
jbe
jge
inc
pop
sbb
outsb
cwtl
fwait
inc
pushf
xor
daa
xor
mov
shll
pop
clc
loopne
push
cmpsl
fistpl
jnp
ret
pop
sarb
gs
test
sub
add
push
sbbb
cmp
jbe
out
jns
sub
cltd
pop
int
call
pop
pop
add
adc
ja
jns
pop
es
push
sahf
mov
outsl
cltd
out
cmp
les
jbe
xlat
iret
pop
js
cmp
pop
add
pop
and
addr16
and
mov
out
ret
mov
sub
jmp
mov
pop
sbb
int3
pop
pop
push
rol
out
movsb
sbb
push
and
cmc
pop
in
and
ret
dec
mov
pop
int3
std
jecxz
call
lret
test
repz
sbb
xor
sub
lahf
data16
fimull
fucomi
xor
mov
jge
jne
pop
push
push
jmp
sti
xchg
push
mov
repz
cmp
das
outsl
jl
lods
dec
sbb
je
in
mov
insb
add
lret
pop
dec
popa
sti
jecxz
push
sbb
movsb
ljmp
in
stos
stc
push
jne
pop
cmp
mov
or
add
pop
js
cmp
stc
mov
mov
nop
js
and
mov
mov
jl
data16
xor
cs
stos
xor
ret
fists
and
pop
add
imul
out
pop
outsl
addr16
insb
pop
adc
jl
mov
pushf
xchg
mov
lock
pop
fisttpll
sarb
pop
xlat
pusha
xchg
cltd
dec
mov
sbb
pushf
pop
shrb
test
push
sub
adc
aaa
fsubl
lods
push
jecxz
sbb
mov
addb
pop
jns
int
ret
jecxz
sbb
imul
test
push
mov
jae
push
notl
dec
int
sbb
in
lcall
pop
sub
cmp
xor
int3
inc
repz
or
scas
cmpsb
pop
jae
shll
jnp
jbe
outsb
jns
xor
push
add
push
insb
rolb
inc
int
pop
fisubs
ret
ja
stc
dec
negl
or
xchg
clc
rorb
xlat
mov
sti
fdivs
cltd
pop
scas
repz
daa
cs
arpl
sub
aaa
jge
adc
sbb
mov
push
pop
cld
pop
aas
mov
popl
sub
mov
mov
cmp
xchg
cs
push
sub
pop
xchg
dec
dec
scas
or
divb
mov
addr16
fildl
adc
push
push
mov
mov
or
lret
or
int3
cmp
sbb
movb
ficompl
and
mov
mov
add
mov
pop
dec
lds
or
sbb
stc
sbb
fiadds
pop
dec
fsubs
jne
xlat
dec
cmp
lret
xor
sbb
inc
lods
push
pop
dec
adc
jbe
lcall
cltd
dec
repnz
lahf
adc
shrb
mov
out
xchg
mov
sbbl
insb
push
sub
mov
pop
mov
and
fistpl
adc
cmc
dec
lret
pop
aad
and
movsb
stos
inc
cltd
pop
pop
into
test
insl
cli
sbb
pop
sub
mov
sti
mov
popa
pop
mov
jo
push
pop
lcall
mov
imul
cwtl
mov
cmp
out
pop
jno
aam
pop
mov
dec
sbb
mov
sbb
or
cmp
pop
movsb
mov
mov
out
xor
leave
pop
jb
loope
jbe
arpl
xchg
push
inc
lea
pushf
pop
pop
les
fsubrp
lahf
pop
jmp
mov
int
adc
push
or
push
add
jbe
pop
sbb
pop
pop
stc
and
add
pop
mov
jmp
out
jne
adcl
inc
xor
cld
aad
xor
testl
out
jecxz
hlt
insb
pop
and
pop
rol
lret
lret
pop
test
sbb
fsubr
pop
stc
lock
arpl
mov
jl
adc
fs
cmp
or
subb
lods
jb
imul
and
push
add
xlat
push
sub
adc
test
fs
stos
imul
pop
call
sahf
jg
mov
sub
dec
imul
jmp
mov
pop
inc
sahf
rcl
scas
sbb
imul
lret
mov
pop
pop
push
popa
test
dec
repz
rcrb
dec
sbb
daa
enter
nop
dec
pop
ja
xlat
aam
mov
mov
adc
enter
mov
mov
xor
fidivrl
push
jmp
ja
push
inc
mov
nop
add
jo
emms
push
cmp
pop
push
dec
and
inc
sbb
add
fs
data16
and
int
xorb
loope
xchg
pop
pop
inc
dec
jge
jns
lcall
dec
js
mov
sub
push
cmp
xor
inc
cwtl
jnp,pt
das
jecxz
rcrb
sti
ljmp
in
les
mov
jb
pop
sbb
loope
ret
cmp
fistps
int
icebp
pop
xchg
sti
out
iret
aad
pop
into
dec
push
adc
mov
das
pushf
cld
int
pop
pop
cmp
add
lcall
in
aas
vpshufhw
pop
pop
sti
jl
pop
sbb
movsb
in
add
and
test
or
pop
sbb
cwtl
lret
repnz
sti
in
push
pop
mov
scas
dec
inc
add
push
xorl
cmc
pop
fmulp
fidivrl
fs
stc
pop
bound
adc
pop
dec
cmp
mov
dec
stc
pop
shlb
dec
out
pop
insb
sbb
arpl
pop
fistps
mov
int
xchg
xor
dec
fsubl
bound
repz
sub
subl
mov
push
jae
fimuls
and
gs
jecxz
cmovb
mov
or
sbb
mov
push
push
cmp
push
pop
shrl
fisttpl
test
mov
sbb
pop
mov
lcall
pop
ja
dec
mov
subb
pop
sbb
adc
neg
dec
adc
xor
bound
outsb
loop
push
dec
mov
mov
sub
sbbl
sub
scas
adc
add
mov
ret
inc
pop
push
sbb
dec
pop
gs
jb
pop
sbb
stc
pop
rcrb
mov
xchg
les
sbb
pop
int3
pushf
insb
roll
add
lahf
gs
jl
fcmovbe
sbb
int
xchg
cmp
pop
inc
or
pop
test
pop
movsb
jo
pop
xchg
xor
ds
in
pop
mov
rcrl
dec
jge
scas
dec
xchg
mov
jno
ljmp
stos
add
out
adc
inc
pop
mov
sbb
repnz
pop
scas
testl
push
cmp
add
mov
dec
pop
mul
push
lcall
in
mov
int
push
push
pop
je
xor
pop
out
mov
mov
add
jle
xor
pop
and
inc
mov
inc
scas
sub
lcall
or
cmpsl
sub
inc
lea
in
sub
pop
in
and
dec
cmp
mov
stc
push
sub
mov
mov
repz
or
icebp
lock
test
mov
cmp
dec
lahf
adc
lods
enter
or
js
pop
ret
and
imul
sub
dec
adc
pop
pop
flds
stos
and
jp
pop
jns
lds
pop
aad
jb
jo
adc
insl
outsb
sbb
jns
inc
les
xchg
cmp
ds
pop
rorl
hlt
vunpckhps
stos
es
jo
pop
cltd
xchg
imul
xchg
xchg
adc
das
xor
jp
lahf
cli
pop
inc
mov
mov
mov
jecxz
inc
or
jle
sub
pop
das
mov
fcoms
sub
mov
fimull
pop
dec
cltd
push
pop
pushf
sbb
ss
xchg
lock
fsubrs
stos
mov
pop
mov
ret
adc
test
pop
fsubrl
lret
xlat
xchg
mov
or
movsl
in
adc
sub
out
outsb
push
cmp
push
test
xchg
jo
pop
inc
dec
ss
xchg
jnp
dec
addps
aam
pushf
sbb
pop
loopne
icebp
push
dec
ret
dec
insb
mov
lods
pop
movsb
je
pop
pop
push
jmp
jbe
subb
sub
pop
adc
pop
fstl
xchg
add
mov
lret
inc
and
cltd
pop
lds
sbbl
mov
xlat
pop
adc
clc
adc
sbb
lcall
imul
and
fimuls
pop
push
std
nop
cs
or
ljmp
mov
cltd
and
int3
mov
outsl
cmp
pop
sbb
dec
sahf
enter
pop
call
cltd
pop
cmp
dec
test
lds
jmp
pop
or
mov
cltd
fwait
mov
inc
int3
mov
xchg
fsubrl
enter
cmpsb
dec
pop
ret
mov
je
sbbb
lods
add
addr16
adc
sbb
mov
sbb
imul
fiadds
cmp
jb
das
rcr
loope
and
sbb
pop
mov
sub
sbb
out
in
ja
inc
fdivrs
sbb
jge
pop
int
aas
insl
mov
inc
int3
pop
sbb
setl
cmc
push
es
loop
dec
pop
sahf
pop
loopne
xchg
fcompl
mov
notb
mov
hlt
sahf
and
add
dec
outsl
xchg
scas
repz
fcoml
inc
pop
test
and
outsb
and
pop
or
test
fidivl
push
cld
pop
sbb
dec
loope
pop
outsb
mov
roll
pop
stc
sbb
cli
pop
sti
pop
fistps
dec
mov
add
pop
int3
out
fcompl
xchg
dec
ss
cmp
jl
pmuludq
push
mov
add
adc
cltd
inc
mov
loop
movsb
pop
fisttpl
pop
orl
cltd
insb
popf
mov
pop
adc
out
loope
out
outsl
pop
push
sahf
repz
pop
mov
push
pop
stos
jb
fcompl
mov
sbb
mov
xchg
sbb
mov
pop
push
subl
pop
jb
inc
arpl
push
jo
mov
or
pushf
movsb
mov
mov
push
lea
jns
lods
outsl
xor
movsl
push
adc
mov
pop
mov
dec
push
insb
mov
and
or
orb
scas
push
fmull
mov
das
pop
movsl
popa
shl
jmp
pop
adc
faddl
mov
pop
repnz
xchg
rclb
nop
cld
pop
stos
iret
adc
jo
xlat
rcrb
xchg
pop
xchg
jb
call
adc
adc
pop
in
jge
mov
pop
ja
sahf
jecxz
in
xchg
cltd
jbe
sub
rcll
inc
test
inc
and
xchg
scas
hlt
cltd
dec
inc
jle
pop
sbb
addr16
pop
adc
mov
je
jae
lds
ret
add
aas
adc
and
sub
fdiv
jp
pop
cmp
loop
insl
or
mov
cmp
pop
pop
inc
lds
mov
xchg
ret
jo
xor
pushf
jmp
cmp
inc
mov
mov
pop
stc
dec
mov
inc
enter
jecxz
fstpl
jb
sub
fsubl
add
jp
pop
jmp
sbb
pop
pop
subl
lods
cltd
push
divb
mov
or
insl
bound
xchg
sbb
add
out
int3
ljmp
mov
add
scas
jne
mov
jp
or
sbb
pop
xchg
loop
in
pslld
sbb
sbb
arpl
dec
mov
pop
bnd
pop
pop
push
scas
pop
mov
mov
adc
es
notl
xchg
mov
lods
inc
mov
int3
pop
pop
mov
pop
and
ret
push
in
pop
push
mov
cltd
bound
out
je
cmp
test
cmp
jge
push
movsl
hlt
push
repz
xchg
mov
hlt
fiaddl
inc
mov
xchg
loope
scas
call
mov
mov
pop
or
popf
jmp
pop
mov
hlt
and
xchg
adc
adc
sbbl
jne
add
ret
pop
mov
mov
xchg
pop
jno
push
xlat
hlt
call
adc
je
xor
mov
pop
fcoml
or
pop
or
inc
cmp
shll
pop
xchg
mov
negb
loop
xor
add
add
pop
mov
mov
pop
xor
idivb
pavgw
push
stc
pop
je
pop
cwtl
test
inc
mov
fldpi
fsubrl
adc
pop
insb
jle
roll
lods
inc
shrb
lea
int
int3
mov
push
cmc
mov
gs
cmp
adc
pop
dec
inc
ljmp
mov
fsubrl
push
mov
xor
sub
dec
out
outsb
pop
mov
insb
jg
sbb
cwtl
cmp
ret
cmp
and
push
pop
cmpsb
inc
push
sbb
inc
insb
jle
gs
cmpsl
inc
jmp
sub
add
xchg
mov
dec
je
jge
mov
out
pop
cmp
sarl
rcrb
test
lahf
popa
sub
pop
inc
sub
and
data16
push
subl
aaa
repz
fnsave
lret
sub
pop
mov
inc
loop
pop
notb
xchg
shlb
fwait
pusha
int
mov
jae
xchg
or
jo
jne
mov
sub
pop
mov
jnp
jbe
adc
repnz
pop
sub
sbb
mov
pop
lea
lret
jne
add
sbbb
int
loopne
sbb
enter
mov
clc
xor
cmpl
enter
cmp
jecxz
pop
pushf
mov
fistps
jl
and
int3
test
out
int
mov
mov
mov
icebp
lods
sub
xchg
fldt
sbb
xor
pop
adc
sub
mov
xchg
adc
fbstp
stc
sub
mov
popf
lahf
fstpt
jmp
xchg
pop
and
test
nop
pop
jo
pop
es
in
jb
mov
dec
sti
int3
mov
dec
aam
dec
arpl
and
pop
or
loopne
pop
adc
fldt
mov
jo
test
pop
sub
jle
pop
out
cmpsl
jbe
int3
leave
call
push
mov
insl
aas
jb
pop
or
inc
outsb
repz
andb
sbb
inc
dec
add
addr16
adc
mov
add
cmp
mov
pop
mov
fstl
mov
pop
lea
and
mov
add
leave
mov
fdivs
aaa
add
dec
push
pop
or
or
adc
add
mov
insb
mov
adcl
add
lds
mov
jno
mov
fsubs
pop
int3
iret
dec
popf
rorl
pop
lods
scas
sbb
add
sub
cmpsl
call
fcomps
mov
or
arpl
dec
xchg
mov
call
or
aas
adc
push
pop
inc
ja
repnz
lret
pop
ficoml
pop
loopne
psubusw
jo
rol
push
negb
jbe
fnsave
stos
sbb
addr16
adc
insb
fcoms
mov
xor
lods
add
scas
sbb
arpl
xor
cmc
ffree
sbb
push
cmpsb
or
test
cmp
in
mov
out
andl
sbb
call
std
mov
sub
leave
loop
pop
loopne
inc
add
jbe
push
pop
in
adc
mov
subb
out
xchg
out
push
mov
sahf
int3
int
les
es
incl
fcomps
fucom
inc
xor
push
sarb
push
dec
mov
mov
stc
sbb
pop
add
jl
or
in
insb
nop
mov
out
lcall
fwait
mov
pop
xchg
lret
mov
sbb
pop
lods
xlat
test
icebp
addl
aaa
inc
sub
push
int3
mov
out
hlt
mov
adc
or
into
inc
in
fidivrl
pop
cmp
in
jne
jmp
mov
ljmp
movb
sbb
aas
push
call
xlat
fsubrl
pusha
popa
dec
fisttpll
pop
mov
cli
sub
xchg
pop
movsb
scas
mov
lds
mov
data16
pushf
pop
testb
fstpt
idivl
push
std
add
xchg
xor
sbb
fmul
lahf
mov
push
out
xor
jno
cli
pop
sbb
sub
mov
mov
dec
sbb
sbb
inc
jo
stos
push
pop
stos
jae
jl
jb
sbbl
dec
lds
mov
pop
cwtl
in
rcrb
inc
stos
mov
and
sbb
add
cltd
outsb
cmp
pop
inc
add
dec
sahf
out
lcall
test
iret
mov
cltd
xchg
jl
and
lahf
pop
shlb
jae
cltd
push
push
nop
mov
sbb
je
ret
sarl
cmpb
pop
pop
leave
movl
sub
mov
rcrb
or
xchg
fstpl
push
dec
mov
orb
mulb
pop
and
or
and
xor
mov
cmpsb
push
adc
ds
adc
scas
addr16
pop
dec
nop
sub
sub
pop
cmpsl
sbb
pop
mov
cmp
pop
aam
int
sub
dec
and
mov
sub
jg
pop
ds
loope
jecxz
xchg
xchg
jbe
mov
adc
cmp
cli
aad
pop
dec
add
cwtl
fisttpl
lret
jbe
mov
sub
mov
int3
and
pop
pop
push
pop
addr16
xor
cmp
lea
mov
ljmp
and
data16
xchg
iret
jl
mov
push
cltd
movsb
or
dec
lahf
mulb
fildl
mov
cli
mov
and
jnp
nop
push
jp
cmp
pop
jmp
and
cwtl
rol
sub
lahf
push
pop
or
imul
xchg
sbb
stc
pop
fistpl
scas
jp
fwait
push
lret
fisttpll
push
dec
lds
lds
jne
sbb
arpl
pop
lret
cld
fucom
mov
jmp
js
sbb
jle
repz
xor
xchg
pop
in
in
cmpsb
pop
xor
popa
sbb
adc
lods
das
pop
out
shr
popf
dec
xlat
mov
cld
cltd
lock
cmp
pop
xor
pop
mov
jno
ret
sub
pop
faddl
clc
pop
mov
std
in
sbb
mov
mov
fs
dec
pop
sbb
mov
dec
pop
and
jne
dec
pmulhw
pop
testl
fildl
in
stc
rcrb
fstl
mov
sub
jno
fstps
adc
push
pop
in
push
movsb
rcrl
jnp
fldenv
sbb
pop
jbe,pt
jmp
lcall
adc
fsave
enter
popf
scas
inc
push
or
cwtl
mov
pusha
pop
js
jbe
int3
sahf
jecxz
ja
push
push
pop
push
mov
mov
sbb
mov
xchg
pop
sub
push
jae
lds
mov
pop
repz
loopne
test
sarl
imul
push
pusha
mov
inc
mov
jb
scas
cmp
fstpl
jge
xchg
mov
jae
sbb
fcmovnu
test
add
mov
pop
push
mov
cmp
cmp
pop
mov
rolb
aaa
mov
xor
push
mov
jl
mov
movb
sbb
cmp
pop
fistps
push
int3
dec
clc
pop
sub
es
jno
lea
xlat
shll
mov
dec
lret
mov
jp
mov
aas
fcomps
pushf
mov
jo
mov
push
popa
sub
xchg
pop
cs
jno
movsl
and
pop
sbbb
in
stc
push
scas
shlb
sub
jge
push
ljmp
dec
push
je
lea
fstps
orb
fidivs
sbbb
lret
int
xor
jno
mov
fldz
xor
add
rcll
push
xor
outsb
call
push
pop
pop
ret
popa
insl
in
mov
jo
pop
xor
pushf
aas
repz
ljmp
dec
jbe
mov
pop
es
ficompl
fptan
pop
mov
adc
add
repz
mov
jl
mov
rcl
into
cmp
pop
pop
cmpl
mov
mov
mov
mov
push
and
or
adc
sub
xor
lods
data16
int3
xor
lds
aad
scas
xchg
cld
sub
int
sbb
faddl
ss
repz
push
cli
fs
adc
lods
inc
pop
dec
xchg
dec
jno
ja
push
mov
cs
aad
aad
mov
shrl
pop
xor
push
and
mov
loop
dec
dec
gs
sub
push
sub
pop
in
inc
jmp
push
int
ds
jae
cmp
cli
sbb
inc
mov
test
leave
fbld
cmp
int
mov
adcl
jb
jl
cmp
mov
lcall
jmp
int
sub
loope
mov
jno
push
popa
push
dec
in
sub
aaa
mov
lea
mov
jo
push
mov
icebp
or
xchg
and
adc
add
call
or
scas
imul
fildl
cli
mov
outsb
cltd
push
shll
lods
push
cmp
pop
popa
sub
andb
push
jns
pop
rclb
sbb
jmp
or
mov
sub
push
xchg
add
lds
and
cli
pop
and
fs
in
pop
adc
and
cmp
mov
cltd
pop
cmp
in
cmpsb
mov
pop
mov
lahf
js
inc
pop
xor
push
out
dec
pushf
adc
adc
xor
fldt
out
test
xor
lds
pop
in
push
lahf
cmp
into
xchg
pop
push
pop
mov
pop
mov
xor
lret
pop
insb
and
outsb
inc
js
pop
or
pushw
cld
xor
lods
inc
out
int
add
mov
xor
dec
test
ret
xchg
push
dec
pop
cmp
mov
fisttpl
inc
jp
push
js
in
loop
clc
dec
mov
repnz
pop
int
mov
stos
push
aad
cmp
subl
mov
jnp
sbb
sub
into
sar
mov
cmp
sarl
sub
loop
push
sbb
int3
pop
cmp
dec
cmp
pop
adc
insl
cmpsl
push
dec
mov
clc
dec
scas
ficoml
fnstenv
repz
or
pusha
sbb
into
incb
rcrb
insl
mov
loope
rcrl
mov
icebp
dec
pop
in
fcoml
cmp
jbe
sub
and
lods
inc
and
scas
push
jno
inc
pop
dec
and
pop
cmp
xchg
jp
sbb
in
and
mov
pop
out
push
sbb
mov
hlt
sub
call
xor
and
sub
or
and
jp,pn
int3
jne
and
aad
imul
pop
or
mov
cld
popf
ss
mov
dec
lods
inc
mov
mov
mov
pop
push
shrb
ds
jbe
pop
push
imul
sbb
data16
push
push
jo
pop
out
shrb
mov
xor
xchg
in
add
pop
push
insl
andl
pop
mov
inc
xor
jmp
lahf
mov
and
dec
cmp
movl
into
sub
dec
xchg
lret
shrb
cld
cmc
fstps
pop
or
jb
pop
out
xor
push
int3
lret
fbstp
mov
in
sub
loopne
pop
gs
sahf
xchg
test
push
jl
outsb
loop,pn
stc
mov
xchg
pop
pop
jne
and
aas
dec
xchg
dec
out
push
cmc
dec
pop
add
nop
jo
mov
mov
sbb
add
pop
cmc
sbb
lock
adc
xchg
jge
arpl
insb
pop
pop
in
push
mov
rorb
fs
in
addps
mov
sub
lods
into
mov
and
push
pop
sbb
dec
pop
dec
cld
dec
xchg
aas
jbe
mov
test
xchg
lret
pop
aaa
sbb
jb
pop
pop
fnsave
sbb
sbb
std
mov
pop
ljmp
pop
sub
cmp
inc
cmpb
int
insb
enter
fs
xchg
pop
aaa
outsb
sti
js
fidivs
mov
mov
sub
dec
pop
push
stos
sub
push
mov
jns
mov
jmp
mov
leave
scas
and
insl
stos
inc
mov
mov
cltd
cmpsb
fistpl
lret
sbb
inc
daa
mov
mov
cmp
push
sub
mov
jo
pop
mov
mov
fxch
xchg
and
pop
in
cltd
xchg
mov
mov
mov
pop
popf
scas
push
in
inc
jl
mov
gs
add
dec
sub
inc
mov
sbb
popf
or
mov
mov
sbb
pop
xchg
mov
or
lahf
xlat
fstpt
or
sub
pop
daa
mov
jnp
sbb
sar
inc
push
push
pop
push
add
int
imul
xor
pushf
jl
pop
jns
shlb
mov
mov
in
jne
cmp
outsl
and
push
pop
jbe
pop
subb
arpl
mov
sbb
sti
call
pop
adc
in
push
loopne
or
push
pop
inc
mov
out
test
and
lret
fdivs
in
je
rcr
dec
movsb
jle
mov
sbb
inc
jno
fisubl
pop
loope
jmp
pop
mov
stc
lods
sbb
pop
push
lcall
and
pop
push
int3
adc
dec
sbb
js
out
or
pop
fsubl
mov
int3
xchg
adc
clc
xorb
xchg
lcall
push
cmp
test
pusha
bound
in
mov
mov
cmpsl
subl
ljmp
mov
sbb
sub
sbb
pop
and
mov
sbb
jge
inc
inc
in
imul
pop
lahf
push
aam
add
pop
pop
push
test
int
sub
loop
pop
jbe
rorl
into
fwait
sub
cltd
int
aas
out
jg
lods
adc
mov
daa
pop
out
dec
sti
sub
add
int3
ljmp
ret
jo
divl
add
and
int3
pop
pusha
iret
in
pop
sub
mov
dec
lahf
loope
scas
test
jg
dec
fisubrl
jne
adc
loopne
jmp
lahf
push
iret
lea
dec
pop
and
cs
adc
push
lahf
stos
cmp
mov
test
and
movsl
pop
dec
lret
mov
imul
push
cli
push
xor
sub
pop
push
xor
insl
or
mov
lret
push
mov
dec
push
pop
xchg
push
sub
fcomps
fstps
dec
clc
xchg
mov
adc
pop
iret
loope
in
pop
and
movsl
int
add
int3
pop
outsl
adc
mov
loop
je
mov
push
sbb
jecxz
out
cltd
jle
adc
sbb
jp
stos
out
insl
incb
pop
movsl
cmc
mov
ds
sub
mov
clc
lret
out
push
pop
sbbb
negl
lret
int
mov
mov
popf
pop
int3
mov
mov
out
push
inc
jecxz
push
arpl
pop
xor
mov
iret
cs
in
pop
jo
add
stc
mov
int3
pop
inc
mov
mov
jb
clc
pop
int
and
int3
jmp
push
pop
cs
ss
mov
lods
sti
xchg
cmp
inc
rcrl
mov
dec
and
push
fidivrs
xchg
repnz
jge
pop
repz
cmpsl
pop
fisubs
das
mov
dec
push
xor
ficompl
jbe
pop
mov
mov
sti
lea
pop
loop
push
adc
mov
arpl
je
xor
sbb
push
xchg
push
jmp
xor
addr16
pop
stos
out
push
in
fs
stos
fldl
pop
loopne
popf
enter
mov
xchg
mov
ja
add
xor
arpl
push
lahf
in
xor
pop
and
mov
pop
add
push
lock
arpl
jmp
pop
jbe
clc
rcll
hlt
es
sub
popa
sbb
mov
test
inc
shl
cli
imulb
pushf
jns
outsb
xor
das
mov
cmc
outsb
test
sbb
stc
pop
mov
mov
push
or
fistpl
mov
cmp
inc
cmp
cwtl
shll
pop
stos
add
fwait
pusha
push
mov
out
xchg
xchg
push
lahf
fstpt
lret
push
leave
pop
repz
push
xchg
xchg
je
adc
ret
mov
pusha
ja
fimull
jno
cmp
fsubrl
dec
sahf
pop
sub
jb
mov
outsb
popf
dec
cmp
iret
jbe
dec
pop
adc
fisttpll
pop
mov
out
popf
jbe
mov
or
sub
adc
push
bound
cmpsl
fucomp
ficoml
cli
ficomps
mov
rorl
mov
iret
fadds
movsl
insl
pop
repz
or
pop
int
inc
hlt
cmp
push
dec
push
pop
in
jbe
jb
repnz
dec
pop
lods
ret
inc
dec
std
loopne
jp
mov
insl
out
inc
pop
and
mov
imul
jnp
out
pop
adc
fmul
jg
or
aad
hlt
mov
shlb
and
mov
jmp
mov
adcb
inc
std
sbb
mov
xor
and
lahf
iret
gs
pop
fstpt
jecxz
shl
pop
popf
divb
push
loop
aas
out
iret
xchg
out
sahf
pop
popa
jbe
js
cwtl
fdivrs
nop
pop
scas
cmp
push
rolb
adc
popf
rcrb
sub
sbb
jno
scas
mov
sbb
sbb
lret
call
pop
push
mov
sbbl
hlt
or
xlat
jecxz
mov
fildll
pop
pop
icebp
sbb
insl
sub
jge
adc
stc
pop
xchg
test
jns
pop
mov
mov
or
jp
int
push
adc
or
add
pop
sub
shl
in
mov
mov
sbb
dec
cld
mov
pop
sbb
ret
or
mov
push
gs
and
sbb
mov
cli
insl
sbb
in
jnp
sbb
mov
hlt
pop
outsb
or
add
sbb
cmp
pop
sahf
pop
out
dec
fsubl
sbb
fsubrs
aam
jno
dec
pop
mov
nop
loop
push
jne
inc
add
cmp
enter
pusha
fiadds
imul
adc
mov
adc
dec
pop
mov
fdivrs
add
dec
mov
in
or
in
popf
mov
test
mov
data16
les
or
mov
add
jge
ja
sbb
mov
add
cmp
das
fcmovnu
je
push
cltd
movsb
stos
repz
push
inc
pop
pop
or
in
pop
or
enter
sub
xlat
pop
mov
stos
mov
insl
dec
mov
das
cmp
hlt
pop
test
inc
or
adc
cltd
pop
clc
ljmp
jbe
push
xchg
adc
adc
fstps
jo
daa
lea
inc
nop
add
mov
or
jb
pop
cld
cmp
or
inc
outsb
stc
pop
fwait
sub
enter
repz
push
mov
js
cmp
pop
jns
mov
in
pop
sbb
jle
cmc
movl
add
popf
sahf
test
imul
pop
mov
jo
sub
push
xchg
stc
jo
pop
lcall
jb
mov
cmp
pop
and
and
out
insl
int
cmp
outsb
fdivrl
sbb
cmp
add
aaa
loope
xchg
mov
ja
test
jno
sub
cmp
mov
or
or
pop
add
mov
lea
pop
jbe
outsb
mov
sub
ret
pop
or
imul
lods
in
frstor
sbb
pop
push
and
push
adc
rcr
dec
mov
test
rol
pop
mov
subl
or
pop
jecxz
sbb
int3
cmpsb
pop
clc
ds
int
mov
es
xchg
dec
jecxz
std
or
out
fildl
arpl
mov
stos
add
fistpl
scas
pop
scas
jle
push
aad
add
mov
and
popl
sbb
pop
movsb
call
inc
sbbl
pop
sbb
js
loop
frstor
andl
dec
cltd
cmp
int3
add
mov
pop
lahf
inc
cltd
fidivl
mov
lock
sbb
dec
pop
pop
inc
jle
cs
lods
fimull
sub
pop
or
pop
incl
popf
andb
or
sbb
fadd
mov
add
loopne
lahf
or
sbb
pop
cmc
jns
xor
or
add
jl
sbb
pop
rcrl
jb
fs
and
or
pop
jge
xor
push
lock
daa
cwtl
test
sti
pop
pop
ror
sbb
in
popa
stos
dec
es
in
jp
lahf
sbb
nop
fldt
mov
push
push
add
or
jge
sahf
pushf
cltd
or
cli
scas
pop
mov
clc
dec
ror
mov
orb
daa
or
int3
jp
xchg
mov
mov
popf
aad
sub
or
xchg
sbb
cmp
mov
push
lret
inc
jno
pop
ficoms
shr
aaa
jbe
push
lds
sub
mov
pop
lcall
sbb
sbb
repz
mov
into
push
fcmovbe
sahf
pop
jg
xchg
addr16
sbb
sbb
testb
sbb
mov
inc
cmpsb
ljmp
scas
shl
push
stos
pusha
test
mov
cld
cltd
nop
or
cmc
pop
mov
dec
adc
iret
lea
and
dec
dec
repz
test
cltd
sbb
in
lret
pop
push
add
int
inc
sub
sub
sahf
ret
pop
dec
jo
sub
sarb
push
mov
inc
repnz
movsl
bound
mov
mov
jo
cmp
hlt
fcomp
leave
pop
sub
movzwl
or
cmc
sub
aam
lret
xchg
or
pop
pop
insb
shll
pop
xor
mov
les
xchg
lds
in
dec
pop
push
std
sub
cld
stos
adc
mov
pop
lods
dec
push
mov
dec
bound
push
pushf
and
xchg
fimuls
outsl
pop
popa
cld
mov
sbb
xor
push
pusha
xor
inc
mov
rcl
lock
pop
adc
jno
sbb
test
jbe
leave
hlt
xchg
cltd
fcmovbe
das
pop
push
xlat
lock
dec
fstpl
mov
test
cld
addr16
fcompl
hlt
and
adc
add
shl
dec
test
call
repz
es
pop
sub
push
jne
push
jo
dec
js
dec
lret
sahf
test
pop
jg
je
mov
pop
pop
mov
cmpsb
mov
roll
stc
or
mov
aas
ret
fsubrs
add
fs
scas
dec
lea
mov
jb
in
aaa
popf
sub
out
pop
mov
int3
cmp
scas
jp
push
xor
mov
inc
push
test
orb
imul
cmp
stos
push
push
std
inc
jbe
lods
pop
push
ficoms
iret
pop
ficoml
les
xchg
sti
pop
sahf
int3
subl
cltd
test
pushf
mov
sub
push
mov
dec
mov
sub
pop
fcmovbe
cmp
jns
lret
adc
sub
cltd
dec
pop
ja
push
aad
jb
push
insb
mov
jae
clc
cmp
lods
push
jecxz
in
pop
les
jb
fdivs
insl
push
lock
pop
dec
outsl
rcl
xor
xchg
mov
cld
pop
mov
xchg
inc
push
clc
jle
pop
lea
jo
sub
lret
movsb
xor
scas
jmp
ja
popf
inc
pop
test
pusha
inc
pop
jae
push
bound
pop
xchg
xor
cltd
mov
lds
dec
fldcw
lock
sbb
nop
cli
pop
insb
jmp
ret
xchg
dec
aam
lcall
cmp
jo
std
push
mov
xchg
and
add
cld
nop
ljmp
jge
cmp
adc
cmp
pop
pop
pop
or
mov
subb
push
xchg
std
xchg
xor
pop
out
clc
dec
add
in
pop
sub
inc
jecxz
dec
shll
data16
sbb
push
aad
sbb
jg
pop
xchg
xchg
jbe
cmp
dec
add
test
int
add
inc
hlt
dec
mov
push
mov
sub
addb
movsl
push
movsb
sub
pop
push
add
pop
jg
test
lea
inc
pop
outsb
dec
jl
sbb
shlb
in
add
mov
popf
mov
push
and
push
dec
loope
jp
andb
iret
adc
pop
jbe
jge
sub
mov
pop
mov
push
test
mov
dec
fwait
in
pushf
test
xor
pop
in
jecxz
sub
iret
lcall
add
clc
loope
aam
pop
addl
mov
jnp
mov
cltd
or
icebp
lahf
movsb
push
loopne
pop
pop
ficompl
jmp
pop
xor
enter
dec
jecxz
push
pop
mov
or
and
sbb
cmpsb
mov
and
iret
fisubl
repnz
pop
mov
pushf
shrb
push
aam
and
pop
lcall
arpl
lock
testb
push
stos
sub
loope
daa
cli
mov
jge
sti
mov
push
jecxz
ss
xchg
es
pop
cld
adc
popa
sbb
lret
test
pop
dec
fistpll
inc
sbb
pop
xchg
int
push
jp
mov
dec
mov
icebp
pop
xor
add
sti
jo
add
jl
pop
cmc
aas
std
xchg
or
in
mov
jo
enter
sbb
or
jecxz
lcall
cmp
dec
cli
loop
pop
cli
cmp
pop
push
xor
lahf
inc
mov
daa
das
dec
std
or
push
cmp
inc
int
lock
push
pop
aad
fcompl
fstpt
je
punpckldq
cwtl
jbe
test
lahf
icebp
adc
dec
aas
cmpsb
mov
push
pop
push
negb
fwait
scas
pop
sub
dec
repnz
test
clc
mov
mov
add
xchg
negb
xor
jecxz
mov
pop
int3
int
sub
mov
fildl
xchg
adc
into
dec
fnstsw
jge
mov
mov
jp
and
pop
add
sub
adc
pop
inc
int
test
nop
loop
pop
hlt
mov
repnz
jb
or
jle
xchg
jmp
pop
push
cmp
nop
fnsave
push
cmp
pop
inc
ja
xchg
cli
mov
jne
and
int3
mov
adc
movsl
pop
jno
mov
dec
jo
mov
dec
call
push
cmp
sub
into
mov
nop
iret
ficomps
sub
and
cmp
pop
mov
xchg
out
pop
stc
test
sub
dec
or
orl
jmp
dec
mov
sub
cld
rorl
mov
sub
bound
es
pop
lods
mov
mov
dec
mov
dec
pop
dec
mov
mov
push
mov
ja
das
push
sbb
daa
inc
std
cwtl
aad
icebp
xor
pusha
in
addr16
sub
cmp
adc
mov
mov
inc
hlt
fstps
add
adc
jecxz
je
pop
jle
test
pop
arpl
jp
xor
sbb
mov
pop
ss
mov
pop
sbb
push
jmpw
sub
outsb
and
mov
jne,pn
stos
mov
mov
fistpll
adc
sub
out
mov
sub
repnz
mov
pop
lcall
adc
inc
lahf
inc
push
out
fildl
dec
xchg
pop
loopne
cmp
mov
outsb
sbb
pop
dec
ret
test
scas
dec
decl
js
or
jbe
pop
pushf
ja
aam
addr16
cmc
daa
pop
push
mov
push
cs
add
popa
cmp
int
shll
jns
xchg
push
pop
xlat
lret
je
pop
lock
jb
int3
push
aaa
pop
mov
int
cli
mov
mov
icebp
stc
sub
mov
jl
and
pop
jnp
mov
sub
repz
pop
aad
inc
jb
mov
mov
dec
push
sub
int
insb
pop
push
cmpsb
ds
pop
sahf
je
push
push
pop
cli
insl
jmp
push
pop
insl
pop
and
pushf
out
adc
mov
sbb
cli
int
pop
sub
addb
xchg
pop
fistps
push
mov
test
test
sarl
pop
jbe
insb
and
inc
mov
and
or
in
je
xor
imul
lahf
leave
mov
cmp
mov
mov
jnp
sbbb
cld
mov
outsb
lahf
cli
inc
stos
cs
orl
add
loope
push
dec
je
int3
and
sti
xor
rcrl
mov
stc
or
inc
cmp
lds
pusha
mov
add
xchg
and
or
mov
cwtl
out
jmp
pop
pop
dec
inc
inc
mov
push
cltd
jecxz
mov
pop
test
lds
mov
cmpsb
inc
or
dec
push
adc
mov
xchg
push
xor
dec
daa
mov
and
jmp
pop
and
cmp
adc
mov
xchg
jnp
or
daa
push
xchg
xor
fwait
mov
fdivr
stc
cltd
add
cli
sbbb
sub
jg
jl
scas
into
add
and
pop
movl
dec
xchg
push
cmp
xor
or
sbb
js
mov
push
lea
sbb
push
pop
mov
jecxz
inc
adcl
inc
fnsave
mov
xchg
cld
iret
mov
pop
loopne
lea
xchg
jb
pop
dec
inc
pop
test
pop
or
insl
or
clc
dec
pop
mov
cmc
mov
mov
test
pop
push
cmp
push
sub
add
pop
sbb
adc
jo
pop
push
dec
jo
pop
inc
aam
mov
loop
fadd
insb
inc
cli
and
mov
out
dec
call
testb
pusha
dec
jmp
sahf
pop
test
out
adc
adc
mov
repz
pop
push
xchg
add
decb
pop
int3
inc
push
aas
cmpsl
dec
mov
cmp
pop
lea
sbbb
mov
push
pop
jae
add
cli
clc
sbbb
les
sub
cli
enter
adc
xchg
out
jae
pop
sbbb
pop
in
mov
and
repnz
sbb
pop
adc
divl
scas
pop
into
nop
adc
mov
and
ljmp
or
or
cmpsb
dec
pop
dec
aam
add
and
ss
negl
js
lods
sbb
cwtl
pop
jbe
and
pop
aad
cmp
xchg
ficomps
ret
dec
repnz
rorl
pop
pop
inc
adc
jbe
das
xchg
mov
dec
jp
jl
sti
mov
lret
mov
fcoms
jne
inc
pop
dec
inc
jle
push
je
pop
pop
sub
mov
sbb
xor
inc
sbb
into
or
and
jmp
mov
test
mov
pop
ja
xchg
lret
mov
sti
adc
pop
mov
call
add
sbb
mov
xchg
sbb
adc
ror
lea
pop
jge
mov
inc
es
pop
scas
dec
xchg
addl
sub
out
jo
xlat
int
outsl
pop
push
lahf
adc
icebp
call
sbb
lock
stos
pop
and
push
sarl
lds
pop
adc
dec
or
cltd
push
sbb
adc
mov
inc
inc
xchg
dec
sbb
repnz
fcoml
outsb
sti
inc
cmpsb
sub
clc
loope
sahf
iret
into
adc
cli
xchg
fistpll
xchg
pop
sub
push
pop
sti
in
imul
push
popf
or
pop
dec
jmp
add
push
pop
test
push
lea
gs
dec
les
dec
cmp
aad
lock
mov
dec
aam
pop
stos
adc
jb
jp
scas
addr16
dec
add
int
fdivs
aam
enter
jg
pop
movsb
ror
loop
push
out
pop
cwtl
jbe
out
jecxz
cmp
dec
or
lret
pop
mov
push
inc
xorb
jbe
xchg
test
sub
push
in
pop
pop
jmp
dec
push
das
hlt
mov
mov
insb
xor
mov
sbb
lods
dec
inc
lret
loopne
mov
insb
inc
popa
into
mov
iret
mov
cmp
jp
pop
mov
xor
cltd
pop
mov
sbb
test
sub
outsb
mov
mov
push
or
push
mov
popa
and
mov
mov
fcompl
loop
in
sbb
adc
cmpsb
pop
xor
pop
mov
sub
insl
rcrl
cli
mov
pop
cmp
mov
in
dec
or
cwtl
xor
jecxz
loop
push
add
addr16
shrb
push
fsubrs
mov
je
xchg
xchg
sbb
rcrl
cmpsl
add
pop
arpl
sbb
jl
pop
sbb
jp
aas
mov
mov
icebp
cmp
add
mov
enter
and
pop
out
or
push
push
jb
pop
fisttpll
mov
int3
cs
adc
movsl
pop
mov
xor
pop
inc
mov
mov
sbb
daa
push
fcompl
inc
shrb
out
add
jl
pop
fmull
ss
xorl
pop
xchg
andb
jmp
pop
bound
pusha
popa
add
pop
or
push
faddl
mov
mov
inc
fisubs
dec
adc
push
mov
xor
dec
cmpsb
imul
or
shl
pop
adc
dec
xchg
xchg
fs
mov
jmp
lahf
add
dec
inc
mov
sahf
pop
repnz
lahf
jo
add
pop
or
cmp
fdivrs
sub
dec
mov
jg
dec
mov
js
pop
mov
scas
mov
and
pop
dec
das
es
mov
push
fstpl
iret
lock
cmp
mov
xchg
or
mov
xchg
jo
mov
fnstenv
cld
mov
mov
pop
jg
pushw
xor
xor
mov
mov
pop
pop
push
lret
pusha
divl
push
imul
daa
pop
mov
push
inc
sbbb
mov
icebp
push
sub
arpl
jns
pop
jl
das
ljmp
and
into
cmpsl
push
pop
mov
or
idivl
out
fldt
pop
mov
push
data16
fldl
pop
inc
mov
int
lahf
cmp
sub
sbb
push
mov
jge
sbb
pop
loope
aam
pop
mov
jno
int3
pop
pop
mov
push
int
mov
xor
jo
mov
fmull
pop
inc
push
aas
and
call
std
adc
dec
cmp
repz
adc
xchg
mov
mov
jb
push
daa
in
rcr
sbb
lret
ret
fnsave
pop
xchg
repz
push
fcmovbe
pop
adc
jp
stc
inc
iret
xchg
jo
dec
pop
testl
dec
dec
pop
adc
ficoms
rcrb
mov
dec
dec
push
pop
pop
xor
xchg
pop
les
jbe
lds
add
pop
mov
push
sahf
mov
int
xor
mov
push
sbb
sbb
pop
pushf
icebp
dec
dec
fwait
mov
mov
pop
jbe
insl
sub
icebp
negl
jmp
frstor
and
pop
imul
insb
mov
mov
push
jae
in
pop
and
add
fcoml
mov
int3
sbb
icebp
pop
fstpl
ret
mov
jecxz
and
pop
xchg
lock
jg
inc
pop
inc
cmpsl
loop
aaa
ror
outsl
mov
xchg
frstor
push
lods
adc
mov
pop
dec
push
adc
cli
or
repz
mov
mov
inc
push
repz
in
inc
insb
jns
push
pop
inc
push
and
pop
push
sub
mov
mov
outsl
cli
inc
ds
cmc
push
leave
push
adc
add
in
dec
sti
ret
inc
mov
call
sbb
jbe
add
mov
out
imul
pusha
pop
insl
sbb
push
xchg
fidivs
sub
pop
ret
or
int
pop
pop
imul
jo
test
popa
les
faddl
adc
sbb
das
fstps
daa
xchg
movsb
ja
push
std
pop
fdivs
mov
mov
orb
push
sub
adc
insl
daa
jmp
jp
hlt
call
dec
sbb
xchg
scas
sub
ljmp
pop
aas
adc
push
rcrb
mov
sbb
ret
add
lds
jp
xchg
pop
insl
or
ljmp
add
pop
dec
push
sbb
mov
pop
sbb
cmc
hlt
pop
and
dec
pop
pop
and
out
mov
leave
fwait
in
outsb
mov
mov
pop
test
imul
movsb
mov
jb
and
pushf
ds
pop
lcall
movl
or
jns,pn
mov
ret
out
xchg
shll
iret
xlat
cltd
mov
pop
fcmovnb
into
aaa
scas
mov
out
loopne
test
push
xchg
loop
test
pop
xchg
mov
aaa
cld
xor
jp
sbb
sub
pop
jecxz
mov
filds
sub
xchg
bound
call
adc
xlat
fistps
int
out
jns
roll
cmp
push
les
sub
pop
jne
pop
mov
pop
sbb
add
pop
or
xchg
sbb
int
mov
push
stc
cltd
mov
sahf
add
sub
pop
enter
pop
sub
dec
cltd
pop
pop
dec
aam
xor
xchg
pop
jae
int3
jb
jne
loope
aas
xor
sbbb
mov
xchg
pop
push
add
pop
out
adc
ror
lods
and
aas
je
mov
mov
jecxz
jne
stos
adc
pop
inc
outsl
cmp
cmp
push
dec
pop
sbb
adc
jno
and
fistps
push
jo
mov
xchg
pop
and
in
xor
arpl
inc
mov
push
pop
mov
movsb
addl
mov
adc
movsl
add
inc
loope
push
jge
fdivr
sahf
scas
mov
pop
xor
outsb
ret
cmc
pop
add
push
xchg
addr16
pop
addr16
sbb
sbb
out
xchg
and
inc
dec
pop
xchg
out
mov
repz
movsl
jb
hlt
cmc
call
push
add
pop
jo
in
push
das
jmp
mov
aad
lret
pop
mov
add
lea
jp
pop
lods
adc
and
hlt
sahf
fsubp
sbb
mov
add
pop
push
or
xchg
pop
sbb
or
dec
jle
test
std
inc
lods
xchg
aam
mov
pop
addr16
arpl
pop
jno
sbb
andl
pop
or
sti
adc
ss
sub
negb
pop
or
std
pop
arpl
ja
and
fidivrs
xlat
movsb
pop
mov
and
mov
inc
nop
inc
imul
fstpl
dec
ret
jp
scas
stc
pop
dec
sbb
jb
imul
mov
dec
fsubl
mov
mov
sbb
push
mov
pop
stos
jnp
inc
scas
pop
aaa
imull
leave
and
out
xchg
adc
je
add
jecxz
cmp
loop
push
scas
fstl
inc
xchg
mov
xchg
stos
jl
sbb
sbb
test
pop
sbb
aad
inc
adc
pop
je
and
int3
mov
out
rorb
sbb
mov
add
sub
pop
in
fldl
std
decl
int3
jecxz
push
fsub
hlt
adc
pop
insb
inc
repz
lods
sub
lret
adc
leave
pop
vmread
int3
fcoml
bound
push
pop
pop
or
sub
xchg
in
aam
mov
enter
inc
sbb
cmp
sbb
pop
in
dec
sbb
jo
pop
std
movsl
xchg
or
cltd
sbb
bound
loope
xchg
iret
aas
or
xchg
jge,pt
mov
xchg
repnz
and
fidivrl
mov
cmp
mov
dec
mov
mov
or
xor
jmp
and
pop
push
int
mov
and
cmp
add
or
pop
ret
xchg
or
pop
insl
mov
popa
sti
rcrl
sub
test
stos
cs
lea
pop
adc
into
int3
or
mov
sti
int
and
pop
out
cmp
setbe
and
rcll
mov
lds
push
mov
adc
adc
out
pop
push
pop
jne
jge
mov
aam
pop
hlt
in
mov
test
xchg
mov
jne
jl
mov
jecxz
fsubl
in
lret
arpl
or
or
adc
mov
jl
ret
and
and
add
lahf
dec
insl
mull
out
ljmp
hlt
fdivrs
aad
sub
scas
cmpsl
into
pushf
mov
mov
scas
fisttpll
arpl
clc
hlt
jo
pop
xorb
insl
mov
stos
mov
fdivs
pop
fldenv
test
add
pop
pop
xchg
lret
hlt
pop
dec
xchg
or
pop
mov
icebp
lcall
int
lods
stos
push
and
pop
cmc
mov
scas
jl
jns,pn
cmp
jb
pop
sub
pop
loope
mov
dec
sbb
fimull
push
pop
sbb
xchg
xor
mov
sbb
jg
xorl
fucomp
addr16
mov
mov
cmpsl
cwtl
sbb
cmp
cmp
pop
jp
add
sbb
xchg
push
cmp
xchg
inc
sub
pop
sub
mov
dec
dec
adc
or
push
outsl
add
hlt
pop
es
pop
arpl
push
push
test
imul
xor
inc
sahf
pop
or
pop
sbb
sub
pop
dec
pop
push
push
inc
stc
aad
cltd
push
mov
in
cmp
insl
fcoml
xchg
xchg
inc
sbbb
imul
ljmp
cli
mov
pop
push
sub
push
push
dec
jmp
daa
jo
lret
mov
cltd
inc
or
pop
iret
adc
dec
mov
jb
jl
push
xchg
dec
dec
sti
fnstcw
or
pop
xchg
and
stos
int
bound
mov
dec
pop
push
test
aam
decb
push
mov
ret
in
inc
icebp
punpckhdq
xchg
mov
pop
pop
in
iret
daa
out
lret
mov
mov
fstpl
mov
dec
sbb
or
mov
pop
outsb
test
daa
and
scas
cmp
dec
ljmp
add
repz
mov
cltd
sti
xchg
xchg
enter
push
ds
int3
das
cmpb
lea
sbb
gs
jns
dec
pop
jo
arpl
flds
cmp
pop
lret
mov
inc
push
xchg
and
push
or
push
pop
test
mov
jno
add
stc
pop
test
xlat
jb
jne
sbb
and
and
jg
pop
addr16
pop
pop
pop
insl
jne
cmp
pop
scas
adc
out
dec
outsb
mov
adc
cmpsb
pop
leave
pushf
cmp
cmc
sbb
or
ss
cwtl
push
and
in
icebp
int
stos
jl
pop
sub
jo
sbb
je
fisttpl
sub
lret
mov
insb
pop
mov
jl
sbb
gs
fmulp
test
xor
pop
mov
fsts
xor
fldt
jecxz
dec
mov
mov
mov
cmp
dec
xchg
xchg
pop
mov
push
sarl
imul
xchg
std
pop
xorl
popf
int
lahf
pop
adc
ljmp
pop
nopl
dec
pop
repz
xor
int3
pop
adc
pop
ret
cmp
lea
mov
jecxz
sti
inc
pop
mov
dec
mov
pop
ds
sar
sbb
dec
minps
jge
pop
lods
fdivrs
out
xor
fstpt
adc
pop
mov
enter
pop
cltd
popa
and
mov
xchg
dec
adc
mov
sti
xchg
rclb
pop
pop
nop
call
dec
into
sbb
mov
stos
inc
scas
pop
test
dec
movsb
xchg
jecxz
cmp
pop
cmp
notl
add
sbb
enter
sbb
lods
fildl
jl
repz
and
addr16
mov
mov
pop
test
xor
icebp
pop
xchg
or
ret
fistpl
shl
add
pop
pop
pop
mov
sub
and
in
aad
cmp
pop
pop
imul
mov
xchg
pushl
pop
fsubs
lcall
leave
mov
mov
arpl
testb
stc
int
sbb
filds
pop
or
pop
sub
cltd
jno
in
lahf
imul
gs
es
push
jbe
ljmp
arpl
sbb
inc
jecxz
xchg
mov
jo
ror
push
xchg
and
xchg
sbb
mov
icebp
pop
orb
pop
pop
dec
loop
jbe
fcmovnbe
scas
and
push
push
xor
mov
shrb
repz
pop
repnz
pop
jb
lods
pop
hlt
xchg
cwtl
in
inc
push
sbbb
gs
or
jnp
add
jnp
jno
inc
jb
pop
adcb
lcall
les
push
mov
test
dec
pop
repz
cmp
push
push
xchg
lds
pop
add
dec
cmpsl
sahf
pop
out
sbbl
xchg
repz
inc
ss
rcrl
xor
out
out
pop
push
pop
pop
sub
lahf
mov
dec
sbb
ret
mov
scas
cltd
pop
sbb
stc
out
jno
inc
fidivrs
shlb
jle
xor
dec
out
xchg
fcmovb
popa
ljmp
pop
sbb
mov
in
iret
dec
push
imul
push
pop
add
inc
fists
pop
sbb
jns
or
mov
add
add
iret
int3
jp
pop
lods
icebp
cmp
js
lods
pop
dec
pop
popf
fnsave
push
mov
cmp
int
lret
loopne
lods
mov
in
bnd
pop
jl
int3
push
and
xor
into
aad
jbe
scas
pop
lahf
jg
xor
mov
movsb
jecxz
test
cmp
arpl
jle
sub
push
xor
and
add
pop
fwait
xchg
in
push
or
pop
into
pop
jb
pop
cmp
xchg
mov
ror
pop
leave
inc
fisubl
cmp
mov
fs
ret
cmp
or
jle
movsb
push
cmp
inc
pop
push
pop
and
bound
push
jns
lret
dec
js
pop
push
sub
int
xchg
mov
push
inc
aaa
add
mov
sub
inc
and
or
repnz
and
adc
pop
dec
call
or
jecxz
das
addr16
mov
sbb
add
pop
aas
ficoml
out
mov
enterw
xorb
shl
scas
into
pop
pop
mov
inc
dec
pushf
movsb
pop
cmp
fisubs
dec
scas
push
pop
sbb
sub
jecxz
movsb
cmc
pop
adc
adc
cmp
pop
xor
xor
xchg
int3
pop
into
xor
test
sbb
jmp
in
movsb
push
pop
xchg
or
or
fs
cmpl
jg
mov
cmp
enter
pop
push
xor
xchg
mov
icebp
sbb
stc
test
fnsave
cmp
fidivs
repnz
xchg
pop
cmp
pop
mov
push
pop
mov
in
out
lahf
aam
gs
js
movsb
lock
rcll
push
inc
mov
aam
sarb
sbb
xchg
dec
xchg
push
js
adc
cmp
fcmovnb
mov
fcomip
sbb
add
shl
mov
adc
pop
lods
out
xor
push
cli
cld
lcall
add
sbb
loope
neg
or
repz
into
cmp
xor
push
mov
pop
adc
icebp
inc
imul
xchg
arpl
xlat
pop
sub
mov
push
shlb
int
mov
inc
inc
sbb
jns
mov
mov
pop
clc
insl
fstps
aas
or
pop
xchg
pushf
dec
inc
jle
and
ret
dec
sub
ret
das
lea
pop
mov
lret
jecxz
pop
aam
add
pop
mov
mov
pop
add
pop
sbb
add
jo
mov
pop
cld
bound
fwait
xor
imull
roll
jl
std
mov
xchg
out
push
cmp
int
cmp
je
loop
sbb
pop
ljmp
pop
aas
int
lds
sbb
adc
pop
in
add
cmp
sub
mov
pop
sbb
loope
jb
jl
pop
fadds
ja
shll
std
jg
push
jo
sti
dec
pop
mov
cld
mov
inc
idivb
pop
popf
ss
sub
pusha
lahf
shll
jno
cs
cli
jg
mov
shlb
pop
ss
enter
lea
push
push
pop
or
jns
pop
shll
int
fchs
sub
fadd
arpl
negb
jmp
sub
sub
mov
outsl
and
mov
cmp
faddl
dec
sbb
lahf
ffreep
mov
jb
test
addl
pop
clc
dec
idivl
adc
pop
adc
xchg
sti
loope
jbe
insl
jecxz
sarb
je
int
aaa
leave
mov
cmp
mov
push
push
adc
and
daa
xchg
imul
scas
pop
cld
mov
and
lret
cli
out
call
pop
xlat
add
into
jmp
mov
fs
lret
dec
or
stos
inc
pop
lds
mov
scas
pop
cmp
adc
divl
xchg
sub
pop
pop
outsl
fstps
dec
pop
div
jb
mov
adc
ja
ss
je
sbb
mov
inc
and
sbb
jmp
xchg
cli
sub
mov
movsb
pop
setp
and
or
rcll
mov
pop
out
pushf
stc
sbb
jbe
int3
or
imul
push
data16
pop
rcl
push
imul
test
fstpl
jl
push
jae
outsl
mov
dec
pop
fimull
add
pop
push
add
orl
lret
cwtl
dec
xchg
pop
push
xor
jbe
pop
loop
icebp
fadd
pop
fnsave
int
lcall
or
mov
cmp
mov
leave
mov
mov
loop
adc
loopne
sub
xorl
rcll
fwait
sbb
lret
jle
xor
or
mov
cs
int
ljmp
imul
cld
jnp
mul
jns
pop
jmp
je
sbb
out
mov
enter
pop
xor
lret
int3
bound
loop
imul
fdivl
and
sub
jno
mov
shll
fadds
pop
xchg
pusha
int
lahf
dec
es
add
pop
pop
jbe
sub
adc
jnp
std
xchg
out
aam
cld
jle
add
lahf
daa
mov
mov
pop
cmp
jbe
xchg
pop
sarl
dec
mov
mov
outsl
movsb
mov
js
inc
pop
test
dec
pop
inc
or
pop
in
xchg
out
add
jp
push
stos
xchg
mov
cmp
fcmovne
in
in
pop
je
into
push
push
scas
push
add
mov
pop
jmp
mov
je
lods
push
loopne
jl
pop
clc
and
dec
decl
cmp
or
inc
aas
pop
in
jb
aad
inc
ja
lcall
or
mov
jl
cmp
jb
pop
sub
std
add
xchg
mov
sbb
adc
and
dec
fldl
pop
jmp
lret
sbb
dec
cwtl
insl
pop
jb
lods
out
test
xchg
nop
or
int3
movsl
push
ss
xchg
inc
scas
dec
sub
clc
pop
std
adc
mov
push
adc
jg
and
setne
mov
es
sti
addr16
dec
lret
pop
mov
mov
xchg
mov
je
mov
push
mov
lock
mov
mov
pop
fcoms
xchg
lcall
cmp
in
pop
cltd
jb
jl
bound
popf
pop
mov
icebp
int
ljmp
out
cli
cs
and
movsl
cmp
jge
pop
cmp
or
pop
xor
jbe
lret
pop
sbb
out
lock
pop
dec
out
or
outsb
dec
mov
nop
out
pusha
inc
sbbl
or
xchg
xchg
test
or
stos
sbb
and
sbb
or
loope
pop
int
out
cmp
ljmp
mov
pusha
jne
lods
jo
mov
jg
push
insb
mov
pop
and
adc
in
pop
lahf
loop
cmpsl
lods
loopne
cmp
and
pop
xlat
and
int3
aam
sub
xor
add
loopne
jo
mov
cmpsb
or
into
mov
pop
lret
mov
mov
mov
and
mov
jg
out
comiss
es
cmp
dec
and
sub
cmc
cmp
cltd
jnp
sti
dec
jb
fadds
mov
outsb
mov
sbb
scas
pop
nop
int3
xor
cmp
stc
mov
xchg
outsb
lret
mov
fwait
pop
inc
pop
cmp
dec
push
nop
hlt
insb
rolb
pop
dec
push
pop
mov
mov
shlb
in
pop
dec
das
or
add
mov
loope
lods
sbb
clc
hlt
cmp
lods
push
lock
int
pop
and
aam
repnz
sbb
fucom
cmp
int3
adc
push
int
in
pop
push
out
xor
jb
pop
and
daa
in
adc
test
mov
mov
dec
sbb
sub
and
enter
jecxz
xor
adc
add
push
sbb
inc
sbb
out
pop
nop
push
sub
xchg
jl
enter
jle
stc
xchg
sbb
pop
mov
dec
push
fs
pop
sarl
insb
je
jbe
aad
cs
pop
das
jecxz
iret
sbb
sub
pop
inc
mov
cmp
or
mov
out
adc
lds
jnp
clc
cmpsb
insb
jg
fcmovnbe
cmpsl
pop
add
sar
les
mov
cltd
cmc
lods
loop
mov
sarb
pusha
sub
jbe
fwait
add
or
lds
pop
xor
xchg
addr16
pop
jnp
movsl
int
push
sub
pop
dec
adc
enter
out
pop
sbb
into
ffree
pop
jnp
jmp
flds
pop
add
sub
and
jne
fs
cmp
hlt
pop
jae
xchg
loope
addl
jo
mov
or
cmpsb
jb
xor
dec
cld
pop
sub
aas
cli
mov
inc
icebp
insl
mov
mov
in
scas
mov
sub
push
push
adc
push
jb
ljmp
jnp
cli
pop
pop
mov
idivb
sub
int
xor
loopne
push
jle
push
in
shll
pushf
lret
repz
sbb
dec
nop
dec
jbe
scas
cmp
cwtl
jnp
js
fstpl
sbb
jbe
iret
add
adc
sti
cmpsl
outsb
aad
pop
test
jbe
add
mov
push
fldl2t
pop
inc
or
sar
ljmp
mov
mov
je
movsb
dec
out
ja
stc
add
jmp
adc
mov
sbb
mov
lcall
loopne
jb
pop
and
outsl
xchg
inc
adc
cld
mov
loope
or
or
pop
aaa
lcall
push
stos
and
cmp
or
outsb
pop
int
cmc
loop
pop
hlt
sbb
sbb
mov
mov
sub
mov
sbb
stos
lods
jmp
in
add
inc
mov
push
xlat
mov
cmp
adc
lods
insl
mov
sbb
fs
lahf
add
ljmp
cmp
jecxz
incb
cmp
cwtl
ja
mov
repz
or
mov
fisubrl
inc
mov
aam
pop
dec
sub
add
sub
repnz
pop
stos
cld
lea
mov
push
cmp
data16
fiaddl
jecxz
cmc
pop
pop
inc
dec
or
std
mov
addb
mov
fstpl
pushf
and
mov
imull
inc
scas
popf
pop
sbb
int
and
and
pop
fldenv
pop
mov
cwtl
ret
int3
pop
pop
shlb
pop
dec
dec
mov
into
pop
loop
xchg
pusha
out
xchg
pop
movsl
ja
jbe
push
jne
stos
stos
ret
xchg
pusha
pop
outsb
xor
rolb
cwtl
mov
or
loopne
lea
mov
sbb
sbb
pop
out
sub
jp
stos
dec
bound
cld
pop
mov
xor
imul
pop
mov
pop
test
stos
add
pop
ffree
rcrl
cld
ds
aaa
loopne
lcall
js
pop
movsb
test
dec
mov
lock
in
push
std
sub
int3
pop
push
add
sbb
dec
dec
rcr
xor
pop
int
mov
push
lahf
push
dec
cs
mov
imul
pop
sbb
jbe
jecxz
stos
pop
pop
and
cmpsl
cmp
push
adc
repnz
ror
jnp
repz
out
add
jge
add
dec
dec
cld
mov
pop
xchg
stc
imul
ret
pop
lods
fisttpl
pop
push
aad
in
or
lea
sub
push
pop
xor
push
and
call
pusha
jbe
pop
jo
loope
test
inc
pop
cli
sub
sub
pop
daa
lock
pop
xchg
jmp
or
outsb
mov
push
xor
rorl
ficompl
mov
sbb
jo
sbb
mov
push
push
pop
and
int3
jl
or
mov
dec
int
lods
jg
in
xchg
dec
js
sbb
sti
ficomps
inc
or
xor
mov
pop
in
je
aad
xchg
sbb
adc
int
add
adc
stos
pop
mov
cmp
push
or
or
subb
mov
dec
sti
rclb
in
cltd
shll
pop
pop
dec
adc
pop
pop
in
mov
ficomps
pop
mov
pushf
lret
movl
mov
and
clc
adc
or
mov
sub
cmc
mov
scas
and
bound
inc
mov
test
fwait
inc
mov
cld
scas
out
lods
push
aad
sbb
test
pop
xchg
daa
imul
lock
pop
leave
cltd
out
push
pop
adc
icebp
push
pop
shll
mov
pop
mov
xor
ret
mov
pop
sbb
xchg
push
repnz
pop
push
dec
push
shlb
test
hlt
xchg
rorl
push
mov
sub
cmc
stos
aaa
fucompp
pushf
adc
pop
aad
xchg
ljmp
pop
mov
or
stos
cmp
lret
pop
mov
rcll
imul
inc
sbb
pop
adc
pop
mov
insl
repnz
inc
inc
pop
out
outsl
clc
xor
lods
stos
pop
scas
shrb
push
ss
add
ret
pusha
test
mov
jno
xor
int
ljmp
ret
shrb
pushf
mov
arpl
lods
adc
mov
pop
outsb
dec
in
aam
sub
mov
mov
push
lret
mov
xchg
xor
in
scas
int3
jp
leave
cli
pop
nop
int
push
js
aam
dec
inc
pop
pop
xor
sbb
jae
jmp
add
pop
lods
and
fstps
scas
cmp
ds
pop
gs
inc
insb
sbb
test
add
popf
fdivrs
pop
and
jns
lahf
pop
jg
inc
adc
push
push
pop
mov
cmpsb
repz
adc
inc
xchg
call
js
insb
add
jge
mov
fldt
fcomps
lretw
pop
lcall
lcall
daa
push
or
pop
shlb
test
jo
pop
inc
xor
scas
mov
xchg
in
add
fs
repnz
xor
rclb
adc
and
loopne
sbb
push
movsb
inc
and
rcll
pusha
lret
add
cmpsb
dec
push
sub
out
push
pop
xor
push
imul
decb
pop
int3
stos
jno
out
mov
pop
notb
dec
mov
cmpb
add
jl
xchg
das
mov
push
lds
jns
jae
inc
mov
stos
sarl
aad
mov
and
std
and
pop
outsb
xor
lods
pop
or
pop
mov
mov
aad
test
dec
fucomp
cmpsl
shl
push
and
adc
pop
push
mov
in
int3
fisubl
push
adc
jae
fdivrl
insb
jg
data16
cmp
stos
push
stc
pop
leave
push
scas
sahf
cld
hlt
dec
int3
add
ja
pop
scas
je
dec
pop
add
in
push
cmp
mov
std
out
jo
int
mov
mov
dec
pop
mov
push
jb
fdiv
jns
sbb
dec
les
pop
pop
push
cmpl
lahf
fisubrl
pusha
test
dec
pop
or
inc
xor
xor
hlt
aam
or
out
sub
mov
jbe
aaa
cmp
scas
jp
pop
add
je
jb
cmp
fnstcw
in
pop
mov
int
cmpsl
mov
jecxz
clc
pop
idivl
lret
sbb
pop
cmp
pushf
pop
xlat
xor
mov
jl
push
mov
sub
pop
adc
sub
xchg
int
out
push
add
mov
xor
mov
push
or
inc
jle
pop
or
xchg
push
jnp
push
pop
xor
movsb
mov
int3
mov
cmp
pop
adc
mov
push
pop
outsb
sahf
je
mov
int3
pop
push
cli
mov
sbb
out
push
popa
notb
inc
fcomi
fistps
aas
pop
xchg
xchg
out
mov
lds
mov
push
je
out
jmp
idivl
ss
dec
lcall
sub
sbb
dec
sbb
or
fnclex
xchg
fdivs
mov
mov
jno
sarb
pop
ret
mov
aad
pop
sub
cli
xor
sbb
fldcw
dec
xchg
sbb
mov
xchg
or
jne
call
mov
lods
sti
int3
pop
mov
xlat
sbb
pop
cwtl
sub
in
inc
pushl
add
and
sub
test
jo
jb
add
xor
fcmovnu
int3
xor
sbb
pop
fs
ret
pop
adc
sahf
mov
adc
inc
sbb
lret
mov
cwtl
jge
jno
pop
movsl
or
add
xlat
adc
push
int3
pop
adc
orl
int
sarb
mov
test
jecxz
fwait
int3
adc
xlat
fidivl
lea
sub
pop
jo
fnsave
jnp
mov
sbb
dec
xchg
inc
push
pop
pop
jo
inc
pop
pop
std
fsubrs
int3
popa
cmpl
add
xor
jmp
xchg
mov
mov
jb
pop
jnp
ret
cmp
pop
ja
xor
imul
outsb
mov
mov
shrl
fisubs
enter
adc
mov
lret
aad
sub
push
outsl
leave
popa
mov
sbb
lret
add
adc
or
pop
and
mov
sbb
movsb
pop
in
jb
int3
pop
add
pop
ficoms
fisubrl
fdiv
arpl
xorb
aas
lret
lods
pushl
sbb
pop
jp
fsts
rcrb
fsub
imul
int3
pop
or
jns
xlat
repz
sar
or
xchg
pop
jbe
jmp
cmp
sbb
sbb
testb
dec
mov
mov
and
push
int
nop
repnz
and
pop
mov
lods
dec
mov
push
icebp
cli
vaddsd
inc
ret
repnz
pop
addr16
xchg
push
stc
mov
xor
push
prefetch
arpl
sahf
mull
jno
mov
imul
xchg
add
fidivl
mov
pop
test
dec
pop
inc
int3
icebp
adc
or
pop
jb
pop
sbb
adc
je
xlat
push
push
orl
lea
sti
icebp
lret
or
pop
imul
pop
cmp
add
mov
leave
pop
jl
rclb
mov
lods
fldcw
mov
mul
lret
pop
jecxz
xlat
daa
dec
xor
inc
sbb
pop
stc
mov
pop
fadds
jo
dec
dec
pop
adc
sub
decb
rcrb
lods
xor
add
cmp
adc
lret
mov
or
mov
dec
pop
push
mov
ja
pop
sbb
push
jno
mov
fisubrs
enter
xlat
clc
cli
cmp
shlb
inc
ds
into
in
and
jns
sub
lods
fstpt
jne
dec
sbb
gs
stos
xor
pop
push
idivb
or
dec
xchg
in
je
repz
xor
cmp
bound
pop
out
mov
lahf
pop
dec
hlt
nop
fstps
int
jo
mov
push
imul
or
jl
adc
out
clc
fcompl
stos
xchg
jne
dec
aam
pop
or
pop
bound
loop
adc
shrl
sbb
cmp
xlat
popf
std
jp
pop
fs
popa
pop
push
mov
out
or
ja
dec
outsb
dec
mov
pop
imul
addr16
cmp
and
pop
hlt
inc
pop
pusha
aas
das
int
fiadds
int3
out
mov
mov
mov
out
cli
scas
jecxz
in
loope
adc
pop
dec
fimuls
jp
inc
jmp
movsl
jnp
int
mov
jp
mov
cmpsb
sti
cs
dec
testb
pop
xor
test
and
pop
cwtl
pop
int3
sbb
ss
inc
out
jecxz
xchg
test
dec
mov
loopw
pop
sub
fs
std
pop
lret
lea
xlat
sbb
inc
loopne
int3
add
repz
inc
in
out
fistpl
ror
inc
popf
or
dec
ret
or
cltd
adc
negb
lcall
inc
fs
push
jp
dec
leave
mov
add
pop
cmp
and
sbb
pop
mov
and
pop
mov
and
bound
cmp
dec
pop
mov
movb
ja
cmp
adc
negb
inc
ret
out
stos
fwait
pop
stos
mov
mov
dec
and
cltd
jge
push
mov
sub
scas
pop
xchg
setb
mov
cmp
sbb
pop
lret
mov
arpl
mov
sbb
pop
outsb
arpl
popa
iret
dec
jnp
jb
addb
xor
jg
mov
fcom
sahf
orl
out
in
mov
hlt
adc
pusha
xchg
add
pop
and
cmpsl
jp
or
sbb
push
jbe
pop
sub
rcrl
movsl
fs
mov
add
jno
jo
mov
cmp
pop
pop
ss
jg
repz
dec
cmp
push
mov
pop
incb
push
ss
pop
ret
adc
iret
icebp
pop
popf
xchg
mov
les
pop
or
inc
xchg
pop
push
hlt
jp
pop
push
mov
sbb
testl
mov
ljmp
nop
stos
jns
pushf
or
lds
ss
mov
push
jp
pop
jge
jns
jmp
jno
sbb
mov
pusha
jmp
sub
pop
mov
jl
inc
lea
fwait
pop
mov
cmp
loop
repz
dec
movsl
add
in
sub
ljmp
daa
pop
sbb
fcompl
xor
push
repz
jae
xchg
push
popf
dec
lods
lcall
int3
sbb
in
mov
mov
pop
dec
inc
pop
outsb
dec
sysexit
negb
or
lcall
test
dec
insl
pushf
cmp
push
jnp
repnz
pop
mov
cltd
jns
pop
data16
hlt
out
pop
les
pop
pop
addr16
sbb
or
pop
push
inc
imul
pop
xchg
sbb
dec
repnz
pop
out
notb
pop
jl
int
fs
in
jecxz
dec
out
pop
cmp
fildl
dec
ljmp
jno
mov
pushf
or
sbb
and
out
cltd
mov
sub
pop
mov
inc
inc
std
push
add
inc
jae
sbbb
push
sub
ret
sahf
call
sub
sub
jb
sahf
mov
jo
xchg
fcompl
or
xor
dec
jbe
scas
and
lcall
sbb
ret
stos
jge
pop
pop
inc
pop
fneni(8087
or
push
mov
data16
cli
add
adc
sbb
fadds
jb
nop
pop
mov
sbb
mov
mov
pusha
xor
sbb
dec
outsb
adc
cli
call
sbb
pop
loopne
cmpsb
cld
nop
lahf
mov
loopne
xor
add
or
sbb
enter
inc
int3
xchg
cmp
xor
test
dec
jle
jb
cmp
and
shll
fstpl
imul
push
push
sti
cmp
les
cmc
fisubrs
popa
adc
fldt
sub
push
cltd
hlt
dec
or
lahf
clc
fdivp
adc
mov
out
adc
inc
mov
jecxz
pop
push
into
ret
lahf
mov
pop
add
adc
inc
sub
jnp
ret
test
and
jp
insb
and
pop
imul
rcll
rcrl
mov
repz
scas
cmp
insb
jmp
mov
scas
fucom
bound
mov
inc
push
outsb
mov
leave
jl
jno
cwtl
xchg
ds
pop
xor
outsb
popf
cmc
mov
pop
fstl
in
dec
in
pop
jle
loop
jne
or
pop
jns
stos
arpl
inc
push
loope
lea
pop
addr16
dec
ret
sahf
fadds
mov
test
hlt
lds
fisubl
or
mov
cmc
sbb
mov
pop
fs
xor
xchg
imul
loopne
aad
clc
pop
cli
add
je
and
rcr
popf
pop
mov
ja
xchg
push
out
xor
jl
inc
bound
sub
sbb
pop
aaa
add
aad
ja
pop
xchg
mov
sbb
pop
adc
inc
mov
sub
fisttpll
sub
popa
in
pop
jo
sbb
arpl
or
jb
data16
in
mov
adc
cld
mov
sbb
mov
or
shrb
push
aam
rclb
sbb
mov
clc
and
cmp
fdivs
dec
xor
sub
jp
aam
mov
pop
jo
cmp
out
pop
mov
je
fildl
int
jns
push
rcrb
ljmp
mov
jle
cmpsl
cwtl
sti
int3
lea
icebp
lcall
and
loope
rorb
out
fld
cltd
pop
mov
cmp
xor
mov
orb
iret
jo
outsl
movsl
js
aad
pop
mov
out
or
pop
jo
std
pop
jae
test
in
cmp
out
loop
popl
dec
xchg
fbstp
sbb
pop
popa
pop
jp
in
fsubrl
sbb
mov
adc
imul
pop
pop
outsb
or
xchg
idiv
test
addl
push
pop
jb
xor
outsb
jle
divl
out
ja
push
pop
aaa
rorb
push
addr16
mov
inc
pop
or
add
jns
xchg
pusha
int3
cmp
dec
or
test
cmp
je
cld
mov
frstpm(287
scas
push
lock
test
xchg
pop
daa
loop
jle
sbb
sub
push
lret
pop
aas
mov
add
inc
xor
pop
push
pop
enter
xlat
and
inc
int
xor
sub
cmpsl
iret
sbbb
dec
lahf
je
mov
xor
jg
shll
push
loope
aaa
inc
pop
nop
dec
push
cmp
out
or
cwtl
xchg
adc
mov
aaa
pop
idivl
pushf
pop
imul
mov
push
pop
add
pop
jbe
mov
lcall
pop
fdivp
in
xor
push
rorb
mov
pop
repnz
lods
testl
loopne
push
arpl
mov
in
cmp
out
incl
fsubr
jo
sbb
sub
es
mov
fnstenv
mov
das
mov
push
inc
pop
mov
jecxz
dec
pop
mov
inc
ja
and
test
lods
pop
sbb
lods
pop
push
imul
int
fbstp
inc
mov
cmp
lcall
jl
sub
pop
testl
dec
pop
add
aam
clc
movsb
pop
jbe
add
pop
into
hlt
push
pop
sub
and
mov
cmp
out
stc
add
sbb
xchg
imul
jo
sbb
sbb
xchg
loop
int3
pop
xor
shl
xchg
dec
je
inc
mov
es
pusha
pop
js
sbb
test
xchg
adc
pop
or
xlat
sbb
mov
pop
imul
lock
pop
std
ja
and
push
adc
mov
addr16
pop
mov
add
push
mov
cmp
aas
in
fsubrs
roll
sub
add
mov
mov
jns
mov
orl
jbe
fiadds
sbb
xor
mov
sbbl
fwait
aaa
ljmp
xchg
lds
and
ja
cmp
lahf
xor
add
scas
jge
call
mov
icebp
pop
xor
les
or
sbbl
ret
pop
loope
test
dec
pop
std
mov
jge
inc
cmp
aad
mov
dec
sahf
pushf
sbb
aaa
gs
xor
xchg
jecxz
pop
dec
dec
pop
popf
dec
test
push
push
orb
pop
jge
ds
scas
rorl
pop
adc
sbbl
dec
mov
iret
pop
out
pop
cmp
and
mov
pop
dec
jmp
cmp
pop
aas
dec
idiv
jg
sbb
dec
xor
xchg
mov
call
sbb
ja
pop
ds
dec
jle
push
pop
inc
xchg
dec
test
pop
xor
std
mov
jecxz
or
ret
mov
jns
pop
int3
out
inc
xchg
leave
in
jge
xlat
call
cmpb
je
fidivrs
adc
pop
jo
mov
insb
sbb
stc
aas
xor
pop
jbe
stos
scas
mov
or
xchg
mov
sub
cwtl
push
dec
nop
xor
shll
inc
xor
test
pop
stc
adc
dec
pop
sbb
fwait
in
jb
sbb
pop
mov
les
out
push
shrb
orl
and
sub
mov
mov
inc
push
fistps
lock
pop
aas
or
int3
cs
jnp
aam
fdivl
push
mov
icebp
lcall
lds
dec
jmp
ror
pop
or
fdivl
pop
out
sbb
out
pushf
adc
push
and
lds
test
sub
dec
and
jg
or
subb
pop
cwtl
cltd
jb
cmp
push
int3
inc
push
data16
mov
mov
and
adc
xor
cmpsl
pop
mov
push
xor
shll
out
scas
and
pop
jne
repz
testb
xor
insb
addl
loopne
in
mov
sub
dec
jbe
pop
sub
stos
mov
jle
jae
rcll
mov
xlat
int
mov
fmull
pop
inc
mov
mov
adc
mov
jecxz
pop
negb
and
popf
mov
test
mov
jb
sub
cmc
ljmp
jbe
imul
mov
mov
in
pop
pop
aad
jbe
icebp
jmp
scas
jecxz
push
xchg
ljmp
mov
fsubp
sub
clc
movsb
dec
rcrl
lock
jns
pop
mov
mov
push
jo
pop
jle
adc
mov
jns
insb
nop
int3
lock
dec
int
fbld
pop
mov
stc
iret
mov
mov
mov
arpl
dec
divl
int
aaa
sbb
mov
inc
cld
dec
flds
orl
sub
dec
jo
in
lret
repnz
pop
or
xchg
push
and
jno
xlat
xor
in
xchg
lods
scas
sbb
push
mov
repnz
or
daa
pop
mov
sub
shll
cmpl
push
inc
int3
adc
pop
dec
rcrb
int
xchg
or
mov
xchg
adc
fs
setbe
sub
and
cli
pop
mov
cmp
and
add
push
pop
into
cmpsb
dec
roll
aas
mov
xchg
iret
sbb
negb
xorl
or
pop
fisubs
add
xor
rorb
jbe
lods
jecxz
ljmp
imul
sub
lahf
xchg
and
inc
mov
xchg
push
pop
lock
cmpsb
xor
pop
fldcw
imul
push
loop
jp
dec
pop
sbb
add
rcrl
pop
rcr
cmp
jbe
js
test
adc
dec
popf
mov
mov
pop
shlb
jbe
test
inc
pop
add
ret
iret
sub
sub
mov
pop
sbb
add
xor
shll
mov
sbb
jge
jno
sub
xor
dec
mov
int3
lods
push
adc
push
pop
ret
mov
mov
int3
or
pop
movsl
or
sbb
sbb
mov
pop
adc
lcall
fnsetpm(287
adc
loope
jmp
fwait
cmp
nop
pusha
les
sub
lods
mov
and
movsl
pop
mov
or
lcall
insl
jl
push
das
jo
pop
cmc
stos
dec
shrl
pop
addl
mov
pop
jge
dec
subb
dec
js
mov
inc
outsl
int3
sub
pop
jnp
cltd
pusha
testl
nopl
ja
es
xor
fcom
aas
pop
sbb
frstor
pop
test
pop
mov
pop
leave
lds
dec
or
lock
call
orb
cmp
lahf
insl
jbe
aas
sbb
fcomps
inc
cmpsb
xchg
movsl
cltd
outsb
mov
push
cmp
js
sub
pop
jnp
or
xchg
pop
pop
fwait
mov
jmp
pop
push
jb
fsubr
sub
arpl
pop
cmc
and
pop
mov
daa
loop
fcomps
data16
aas
in
xchg
stc
jno
mov
and
addps
lods
mov
cmpl
scas
mov
jne
stos
adc
or
or
or
inc
mov
mov
pop
int3
fdivl
gs
shl
push
push
cltd
sub
dec
std
jb
mov
push
cmpsl
outsb
pop
sbb
mov
dec
add
jb
xchg
cmp
aas
inc
cmpsb
push
sbb
push
das
pop
adc
testb
add
mov
pop
stc
mov
mov
jbe
lea
arpl
sti
push
pop
scas
push
fdiv
add
rcrl
orb
mov
xlat
pop
sbb
insl
frstor
pushf
mov
push
pop
or
push
pop
mov
sub
pop
loopne
inc
jno
in
and
cmc
je
xchg
gs
mov
repz
mov
sbb
pop
sub
pop
rcrb
mov
aaa
cli
xchg
pop
sbb
ja
daa
dec
imul
sbb
int
mov
faddl
mov
pop
adc
in
inc
sbbl
mov
push
pop
insl
inc
add
xchg
lret
xchg
dec
pop
mov
cmp
loop
fnsave
mov
icebp
pushl
xchg
push
dec
lahf
les
fstpl
pop
stc
sti
mov
fmulp
out
dec
xlat
data16
aas
bound
jns
mov
mov
fs
movsb
jbe
mov
dec
sbb
ret
addb
sbb
jns
pop
xchg
lds
sbb
sbbb
mov
test
cmp
mov
xchg
gs
in
and
adc
pop
sti
movsl
sbb
jge
xchg
xchg
or
sahf
lcall
mov
ficoml
mov
mov
fstp
ds
in
pop
inc
std
mov
mov
cmp
cli
lea
test
in
out
mov
gs
dec
lret
pop
lds
je
mov
into
ficompl
pop
popa
ret
sbb
xchg
jmp
dec
in
cmp
mov
out
bswap
scas
pop
jae
lcall
pop
fldl
inc
jmp
fs
cmp
add
outsb
jmp
test
cs
pop
pop
mov
add
shrb
jae
rcll
xlat
xchg
cmp
cwtl
scas
dec
ss
jnp
add
fcoms
jmp
mov
pop
scas
ret
out
pop
data16
dec
xbegin
sub
es
push
push
lahf
pop
out
cmc
fildl
mov
jae
adc
scas
mov
rcr
mov
adc
mov
dec
jmp
xchg
enter
mov
ds
stos
and
arpl
push
xchg
stc
enter
push
ret
iret
in
repnz
or
add
cwtl
jge
xchg
int
cs
mov
jo
mov
mov
dec
je
scas
stos
dec
cmpsl
je
fistpll
pop
stos
and
and
cmp
mov
out
sbb
fs
pop
cs
iret
mov
cmp
sbb
pop
mov
fildll
mov
pop
cmp
int
mov
xchg
mov
pop
ret
loop
mov
pop
cmp
unpcklps
mov
dec
clc
ret
pop
insl
mov
add
pop
lahf
popa
inc
jle
es
push
out
cmc
inc
pop
popf
loop
lret
lret
sbb
test
stc
lock
add
std
shll
cmp
jbe
cmp
fcmovbe
fdivs
jp
les
and
aad
sub
dec
in
mov
pop
xlat
cmp
out
push
andl
dec
sahf
jne
fimuls
pop
cmp
fadds
mov
subb
mov
mov
push
pop
cwtl
sbb
mov
cmp
dec
pop
das
jb
inc
sti
mov
cli
pop
in
hlt
lods
es
call
xor
pop
mov
mov
mov
push
je
sahf
test
sub
sti
pop
ror
xlat
std
movsl
xor
ss
add
pop
ds
imul
pop
lods
push
add
pop
clc
sbb
inc
jo
mov
imul
repz
lahf
mov
dec
jle
xor
mul
negl
pop
movsb
sbb
aas
dec
and
shrb
inc
jecxz
mov
pop
pop
adc
cs
mov
fdivr
jne
pop
pop
sub
repnz
cmp
pop
and
aas
int3
jecxz
cmp
aam
mov
rcrb
or
in
fstpl
mov
int
outsb
cmpsb
lods
lahf
mov
loope
jmp
ficomps
cmc
repz
pop
push
in
sbb
mov
out
jmp
pop
addr16
adc
daa
mov
scas
je
outsb
out
push
cld
scas
xor
xor
shl
imul
xor
pop
mov
push
cltd
xchg
addr16
sub
arpl
fcompl
mov
orl
cld
fcompl
add
fidivrl
call
loopne
pop
pop
jmp
into
adc
fnstenv
mov
addb
jae
jle
mov
mov
fdivrs
add
movsl
pop
into
fbstp
add
sbb
imul
cmp
mov
test
fwait
mov
fs
xorl
push
stos
pop
pop
push
lock
or
cmp
pop
mov
ficoms
and
xchg
jns
in
inc
and
cli
fadds
sub
int3
int
mov
xchg
push
dec
loope
xchg
sub
and
insl
movsb
jnp
sbb
mov
pop
ss
scas
lock
mov
inc
pusha
rolb
decl
mov
or
jl,pt
cmp
cmp
mov
mov
xor
or
push
mov
addr16
pop
jmp
popa
stc
push
stos
xchg
sub
lods
pop
mov
pop
jns
jecxz
es
cmp
int
daa
in
jl
cmp
test
clc
dec
addr16
mov
lods
mov
mov
ret
xor
cmp
icebp
mov
fstps
xor
out
das
lahf
mov
push
cmp
add
fistpl
pop
aas
pop
loop
enter
pop
scas
adc
bound
jae
in
int
mov
test
cmp
sbbb
mov
sbb
fcomps
ret
cmp
mov
pop
adc
cli
aas
movsb
mov
add
mov
jmp
xchg
fcmovnbe
sbb
test
repz
lret
push
mov
pop
cltd
outsl
ss
xor
xchg
pop
cmp
mov
pop
cmpsb
ret
adc
jge
and
sub
int
mov
cmpb
mov
push
sbb
inc
pop
shr
idiv
mov
cmpsb
f2xm1
test
sub
int
repz
mov
addps
xchg
test
mov
pop
faddl
xchg
mov
inc
lods
xchg
push
lret
out
or
pop
popf
adc
adc
out
mov
xchg
mov
jl
dec
pushf
in
fcomps
or
jp
pop
mov
mov
mov
in
mov
in
dec
lds
imul
sti
leave
xor
adc
stos
sahf
mov
dec
push
pop
adc
ret
add
lahf
pop
fisubs
enter
mov
addr16
mov
mov
test
outsb
aaa
push
dec
stc
into
mov
add
inc
lock
sub
daa
dec
pop
fnstenv
inc
imul
out
sbb
pop
popa
add
cmpsb
cmp
xor
adc
out
push
scas
pop
fsubr
jb
jns
call
sbb
pop
jge
int3
cmp
inc
lahf
subb
inc
movsl
fwait
scas
mov
xchg
push
push
mov
pop
xor
sbb
jne
mov
xchg
push
pop
adc
insl
dec
inc
mov
or
cld
or
aad
mov
sbb
mov
int3
scas
jnp
rorl
and
stc
add
sbbb
add
cmpsl
mov
mov
push
imul
pop
shlb
mov
gs
fisttps
push
imul
mov
sub
xchg
pop
mov
pop
mov
cwtl
sti
mov
stc
dec
xchg
or
mov
jo
sbb
push
jecxz
es
cltd
and
or
xchg
or
sbb
jo
sbb
sti
cmpsb
and
cld
cmc
mov
xchg
insl
xchg
nop
gs
sub
mov
lahf
xchg
lahf
lret
je
call
stos
daa
jecxz
adc
mov
shl
adc
mov
iret
mov
into
jns
xor
sbb
loop
mov
push
adc
mov
into
add
prefetch
mov
pop
sahf
or
xor
mov
fisubrl
sbbl
stos
jae
sub
sbb
test
in
or
inc
js
inc
add
int3
pop
imul
sbb
arpl
pop
cs
outsl
sub
mov
add
insb
dec
pop
sbb
inc
repz
mov
mov
mov
stos
and
pop
sti
xor
fstp
mov
push
pop
fdivrl
es
mov
mov
pop
ret
enter
scas
push
adc
ficomps
jo
incl
sub
outsl
mov
pop
clc
jno
mov
aaa
ds
mov
mov
pop
adc
add
dec
jl
jns
xor
jp
cltd
fwait
mov
dec
lahf
imul
mov
jge
add
shll
mov
add
popf
sbb
pop
pop
jbe
pop
lock
js
pop
mov
cs
insb
into
lea
xor
inc
xchg
dec
mov
mov
popf
lods
pop
scas
xor
divb
mov
sub
inc
cmpsl
in
pop
push
pop
lea
jb
lret
sti
pop
js
pop
daa
adc
cmp
sbb
sbb
scas
xchg
dec
inc
rclb
push
cmp
fidivrl
cmp
xor
push
mov
pop
outsb
js
or
addr16
push
iret
mov
fisubl
sbb
pop
in
jns
stos
imul
aad
hlt
repz
dec
clc
shrl
orb
int3
dec
rorl
xorl
rcrb
rcr
jb
pop
pop
mov
push
notb
pop
test
andl
inc
xchg
pop
mov
ficompl
divb
rcl
sbb
pop
dec
jnp
lret
jns
insl
pop
push
inc
out
in
jmp
fldt
cmp
cltd
mov
push
lcall
xor
push
xorl
icebp
pop
test
out
cmp
cli
lds
ja
push
adc
popa
push
sti
sub
sbb
in
pop
mov
in
int
jge,pn
inc
pop
leave
pop
cli
icebp
jle
mov
cmp
sub
inc
shl
mov
adc
cmpsb
jns
addr16
fldcw
dec
pop
fs
or
outsb
jo
pop
adc
rorb
adcl
sub
jo
mov
addr16
pop
fbld
and
dec
lcall
loope
sbb
lods
sbb
dec
mov
fstpt
pop
pop
popa
into
cmp
pop
mov
mov
xchg
fldl
das
pop
mov
int
pop
sub
scas
call
pop
mov
mov
lods
pop
fidivrs
add
pop
mov
sahf
faddl
pop
int
mov
xchg
push
repz
pop
xchg
pop
inc
jge
mov
sbb
dec
sbb
xor
cmp
pop
pop
call
out
pop
jbe
xchg
or
test
and
and
or
je
sarb
jl
inc
dec
out
lret
sbbl
imul
inc
imul
push
adc
hlt
cmc
xor
add
ljmp
pop
xchg
lret
fstpt
pop
mov
pop
push
sbb
movsl
imull
and
sbb
push
pop
sbb
daa
scas
int
int3
xchg
cmp
jne
mov
sti
fistps
int3
pop
or
imul
and
cli
add
lea
clc
pop
push
dec
xchg
shlb
dec
aam
ja
sub
insb
xchg
cmp
xor
jbe
scas
adc
lds
pop
outsl
dec
out
fsubrs
pop
xchg
or
icebp
and
inc
mov
addr16
mov
add
add
enter
push
lods
js
mov
jno
jne
mov
imul
jp
xchg
outsl
xchg
sbb
cli
inc
pop
dec
and
adc
or
dec
scas
iret
push
jbe
in
sbb
add
sbb
jnp
pop
dec
je
mov
or
fsubrs
add
and
xor
stos
insl
arpl
push
push
xchg
fildll
ja
add
push
mov
push
call
push
mov
fiaddl
lahf
jb
cmp
int3
push
ret
test
insl
scas
push
xlat
xor
pusha
fmul
cmp
rcll
out
pop
xchg
add
push
leave
mov
rcrb
and
sbb
pop
add
ss
cld
pop
mov
add
xchg
push
outsl
pop
cli
into
inc
in
cmp
fcomps
mov
movsb
out
aaa
ss
and
xchg
xor
in
scas
pop
mov
and
stc
orb
cmp
fdiv
dec
cltd
xorl
mov
cli
pop
adc
fucomp
or
int
adc
push
adc
fcmove
cmp
xchg
hlt
pop
pop
lock
or
mov
pop
ret
pusha
jae
add
mov
cli
lret
fucomp
cwtl
les
jb
xchg
pop
lahf
adc
shr
pop
mov
pop
xchg
dec
mov
pop
xor
sbb
and
test
int
dec
mov
and
or
adc
push
lock
or
or
dec
inc
jecxz
popf
scas
cmc
pop
cmp
jb
ret
mov
int
repz
repnz
push
or
push
roll
stc
aas
pop
insl
jo
movsl
loope
dec
stos
cmp
decl
repnz
mov
jo
adc
insb
pop
dec
adc
lods
and
imull
sub
inc
int3
dec
pop
in
jns
pop
pop
sti
repz
dec
stos
or
mov
cmp
xchg
ret
pop
aas
push
jecxz
mov
mov
sbb
push
fcomps
lcall
jb
out
dec
test
xor
mov
jnp
mov
jl
adc
pop
add
call
pop
jbe
pop
dec
lahf
xchg
jg
pop
lea
hlt
sbb
dec
fnstsw
fdivrl
int
pop
movsl
adc
mov
adc
inc
sbb
dec
mov
sbb
movsl
mov
adc
push
adc
push
mov
mov
hlt
ss
outsl
sti
pop
push
fistps
pop
and
clc
pop
inc
lret
adc
sbb
jo
mov
dec
fiaddl
lcall
mov
xchg
pushf
or
xor
push
xor
fsubs
out
das
cmp
nop
inc
imul
dec
into
lahf
int3
xchg
mov
jl
int
addr16
mov
jo
leave
inc
pop
adc
sub
lret
mov
sub
sbb
dec
out
jne
mov
adc
pop
jbe
sti
lods
push
dec
inc
push
dec
lret
mov
cmpsl
outsl
mov
sub
mov
icebp
jbe
inc
cmp
in
ds
out
pusha
jnp
sub
movsl
mov
mov
stos
fisubs
bound
mov
jbe
shrb
sbb
mov
xor
dec
mov
mov
jg
in
push
pop
cwtl
sbb
and
add
or
stc
jne
jmp
rcl
dec
jno
mov
push
sbb
lock
shr
pop
sbb
call
movsl
push
stc
and
pop
add
or
add
fsubs
mov
mov
dec
fstpt
xor
sub
scas
inc
outsb
or
sbb
dec
stos
stc
aad
and
or
call
adc
jne
push
pop
or
test
cmpsl
int
test
cmp
jo
pop
mov
add
add
or
sbb
mov
or
lret
mov
mov
cld
push
or
sub
out
pop
sub
shlb
pop
lea
popl
emms
ljmp
fcomps
and
pop
jmp
mov
inc
leave
loop
dec
dec
dec
pop
daa
push
mov
cmp
popa
pop
fistps
jo
pop
movntps
das
dec
rcrb
pop
scas
mov
xor
insl
insb
fstpl
popa
sti
jb
sbb
dec
ljmp
int
jecxz
sarb
xlat
lahf
nop
ret
add
jge
and
adc
inc
sbb
xchg
mov
cwtl
lcall
repnz
jp
inc
lret
notb
jge
in
sub
sub
pop
filds
lds
dec
inc
loopne
pop
clc
movsb
pop
xchg
pop
in
popf
lods
js
cmpsb
and
ja
gs
scas
cs
mov
and
pop
movsl
addl
cmp
in
cltd
test
sub
fisttps
addl
xchg
dec
push
mov
cltd
pop
int3
push
push
jmp
stos
push
jb
inc
insl
scas
xchg
push
cs
cmp
mov
jge
and
lods
cltd
and
push
lahf
inc
dec
sahf
sub
and
mov
std
dec
pop
pushf
int
fwait
inc
nop
jmp
xchg
and
loope
dec
hlt
lds
pop
movsl
fwait
dec
addl
int
dec
or
pusha
std
ficompl
pop
shlb
push
mov
pop
gs
fs
fistl
mov
mov
pop
mov
imulb
stc
test
jg
pop
mov
fwait
xor
inc
dec
mov
call
aad
or
mov
fcoms
pusha
cs
pop
pop
adc
jbe
out
pop
icebp
stos
jne
mov
cmp
cmp
sti
mov
jecxz
rclb
add
push
xor
add
pop
push
inc
imulb
push
jo
inc
pop
bound
fbld
xor
jb
or
mov
mov
mov
mov
or
lcall
insl
xor
repz
pop
xor
es
pop
lods
push
rorb
xor
push
xchg
and
jmp
pop
or
add
pop
push
pop
bnd
xchg
mov
ja
fstpt
jecxz
enter
inc
out
pop
jbe
or
pop
push
jns
fsts
pop
xchg
adc
rolb
mov
mov
fisubrl
scas
inc
fldl
push
mov
cli
loopne
mov
sub
jo
fadds
mov
mov
pop
js
xor
fsubr
aam
jb
lock
mov
out
sbb
fisttpl
fisubl
or
mov
rcrb
xchg
jg
and
xchg
mov
mov
sbb
scas
popa
lahf
cwtl
or
push
pop
shll
push
pop
mov
jg
sub
shrb
cltd
mov
sbb
es
lret
mov
ret
in
mov
sub
and
lods
negl
jp
mov
mov
xorb
pop
and
ret
dec
arpl
adc
in
int
cmpsl
mov
jp
and
sbb
cmp
mov
mov
mov
addb
mov
mov
push
push
and
data16
mov
cmp
cmp
fcoml
stc
pop
cmp
mov
push
sbb
mov
cmpl
pop
lock
std
mov
xor
jae
pop
push
dec
mov
inc
inc
fs
sbb
addb
push
jle
inc
jbe
cmp
loope
pop
jns
push
nop
pop
js
pop
pop
mov
popf
pop
mov
sbb
inc
cmp
pop
dec
jl
in
sti
mov
pop
push
divl
or
rep
std
add
push
sbb
jecxz
stos
fcompl
loop
mov
leave
or
jle
sub
pop
mov
xchg
cltd
push
out
cld
pop
xchg
push
jno
pop
fwait
aaa
mov
daa
js
in
sbb
xchg
stc
inc
jmp
stos
mov
push
jne
dec
pop
out
jb
sbb
dec
jno
popf
shlb
popa
sub
dec
pop
lds
inc
enter
pop
lret
mov
cmpsl
push
adc
addps
shlb
push
sub
lock
in
inc
mov
mov
outsb
les
mov
scas
andb
push
xchg
pop
mov
lret
push
inc
mov
fwait
or
ja
push
xor
lea
pop
cmc
into
fwait
int
test
sbb
pop
push
scas
repnz
or
shll
shl
adcl
push
mov
int
notl
gs
xor
cltd
jo
andb
scas
enter
out
lds
mov
jbe
pop
int3
jne
flds
inc
add
pop
cmp
xchg
jns
adc
and
fs
mov
mov
pop
jb
pusha
sub
mov
fwait
pop
xor
repnz
xor
in
arpl
cmc
fldcw
xchg
or
scas
es
cmp
dec
jge
pop
es
lea
vmovapd
sbb
xchg
inc
sub
sbb
jbe
pop
ds
mov
xchg
scas
xorl
outsl
xor
es
cmpsb
adc
call
pop
xor
fidivrs
ret
pop
inc
ja
jns
xchg
movsb
dec
aad
out
jge
popf
jb
pusha
mov
mov
rcrl
mov
sti
orl
in
xchg
int3
pop
pop
mov
pop
test
xor
sbb
stos
cmp
stos
lret
dec
punpckldq
sbb
dec
aaa
or
rcll
sub
sbb
cli
ljmp
cmp
in
xchg
ss
adc
cld
movsl
mov
push
push
pop
jne
dec
inc
add
pop
xor
and
or
call
dec
pop
jp
int
aaa
in
mov
jbe
out
mov
lock
jns
pop
fldl
mov
dec
fildll
lods
jo
mov
test
shrl
pop
cltd
inc
jecxz
and
pop
mov
out
jbe
or
js
lahf
lcall
cs
jl
mov
cmp
jno
mov
xor
xchg
aad
test
je
in
xchg
or
pop
ret
pop
call
stc
push
pop
divl
or
jae
sub
jns
fcoml
mov
dec
cld
mov
mov
je
mov
jae
jle
out
loopne
dec
divl
lahf
inc
ds
pop
adc
push
jno
and
sub
lcall
in
int3
sbb
cli
xchg
rorl
pop
or
fcompl
fildl
pop
xor
mov
fldenv
scas
sbb
xchg
dec
sub
cmp
sbb
add
pop
aaa
xor
movsl
dec
pop
jmp
je
int3
mov
pop
inc
out
insl
mov
fldl
stos
sbb
aam
sub
pop
mov
jp
pop
pushf
adc
dec
clc
pop
mov
jg
sub
push
and
xor
lcall
insb
pushf
jle
test
xchg
scas
adc
lret
aam
jno
in
sub
xchg
adc
add
jbe
stos
movsl
cltd
lods
or
push
inc
cmp
out
inc
or
js
insb
cli
int3
jno
sbb
scas
inc
icebp
xorb
sub
lods
call
pop
sbb
xchg
inc
pop
xor
data16
nop
dec
xor
mov
stos
addr16
mov
pop
clc
push
inc
xchg
daa
lods
xchg
mov
cmp
popf
icebp
pop
ja
jbe
pop
push
ds
stos
jne
sahf
adcl
fstl
popf
inc
and
mov
js
adc
mov
dec
mov
rcll
int3
inc
sbb
fsubr
pop
sub
or
push
xor
xchg
andl
lods
pop
insl
cmp
into
arpl
mov
test
mov
jns
pop
insl
pop
cmp
push
inc
jmp
test
jge
jp
cs
aas
scas
pop
jbe
cmp
mov
sub
jle
scas
inc
add
add
cs
xchg
add
repnz
cmpsl
mov
addb
insl
jle
cltd
stos
pop
sar
imul
mov
test
sbb
loop
lret
int
or
xor
cmp
fidivrs
add
pop
add
fistps
push
cmp
xchg
outsl
lea
imul
cmpsl
jno
xor
cmp
dec
xchg
pop
enter
shll
push
inc
mov
jnp
mov
int3
fsubrl
mov
fcoms
push
pop
shlb
insb
imul
stc
loop
pop
jne
mov
sub
imul
mov
pop
dec
lods
in
pop
jp
pop
adc
fisttpl
or
push
add
adcb
xor
sbb
mov
adc
sub
into
lret
mov
mov
push
sbb
mul
cli
in
jmp
mov
xchg
int3
xchg
pop
and
cmp
push
clc
xchg
dec
push
dec
pop
cmpsl
xchg
pop
shlb
testb
js
pop
rcll
fnstcw
xchg
pop
je
mov
or
adc
push
push
pop
les
mov
mov
into
and
rorb
es
push
stc
lahf
jl
out
sub
pop
pop
inc
cli
mov
inc
jo
inc
inc
je
push
xchg
cmpsb
mov
xchg
das
pop
pop
mov
jno
dec
push
adc
stos
add
adc
cld
gs
sub
clc
std
mov
dec
icebp
or
fsubrs
sbb
daa
dec
in
pop
cmp
mov
inc
stc
mov
fdiv
jnp
pop
push
xor
pop
pop
sbb
sbb
jbe
loope
lods
sub
mov
imul
push
repz
dec
xchg
cmp
pop
and
int3
or
pop
xchg
pop
sbb
pushf
lods
push
cmp
pop
add
mov
lahf
sti
push
mov
pop
xor
pop
inc
jbe
adc
call
lods
and
mov
xor
psubw
lea
sbb
adc
mov
fs
adc
sub
call
pop
sahf
jo
stos
xlat
shlb
lds
mov
xchg
sbb
sbb
jns
dec
adc
sbb
clc
cmp
std
add
mov
int
cmp
dec
sbb
pop
sarl
cmpsb
lret
out
leave
pop
dec
jb
jo
iret
push
test
push
int
or
cmp
pop
rcr
add
outsb
dec
data16
add
sbbb
add
stc
fisubl
and
lcall
pop
loop
mulb
in
fistps
mov
adc
add
pop
mov
pop
pop
mov
add
dec
pop
movsl
jne
jl
mov
sbb
loope
xchg
test
sbbl
lods
ret
inc
or
daa
cmp
cmp
clc
pushf
scas
pop
arpl
xlat
std
inc
stos
or
adc
add
aam
fadds
js
pop
add
dec
fisttps
cmpsb
int
pushf
ljmp
add
mov
nop
push
inc
dec
xchg
pop
ret
test
mov
and
pop
fcmovne
mov
pop
aad
in
repz
das
dec
pop
inc
sti
push
mov
mov
mov
js
pop
sti
cmp
pop
sbb
mov
cli
mov
rcr
or
and
arpl
fiadds
xor
xor
mov
fs
dec
mov
jns
or
stos
mov
inc
enter
negl
aas
sbb
fmul
icebp
les
aad
jae,pn
repz
popf
pop
dec
pop
fdiv
leave
and
pop
sub
sbb
xor
and
xchg
out
jno
lods
sbbb
decb
or
dec
jecxz
pop
cmp
movl
mov
inc
rep
lret
pop
xor
push
lds
pop
push
loope
and
mov
dec
mov
pop
xchg
lret
out
pop
repz
nop
mov
dec
cwtl
test
insb
mov
popf
sub
add
jmp
mov
mov
pop
es
xor
in
xchg
cld
lahf
in
out
rcrl
dec
dec
inc
pop
sbb
movsb
rolb
fs
mov
scas
popf
push
or
add
inc
dec
lret
insb
stc
pop
out
jbe
enter
popf
fsts
pop
int
mov
into
mov
pop
out
jb
jo
push
adc
mov
pusha
mov
es
mov
insb
sbb
xchg
mov
jmp
sub
ret
xchg
xchg
push
mov
xor
stos
mov
pop
and
sbb
mov
jge
xchg
inc
fsubl
push
test
aam
add
dec
push
pusha
pop
sub
movsb
stc
mov
in
enter
rcrb
aam
jle
push
ret
lods
shll
scas
xchg
test
lods
faddl
and
pop
dec
jge
mov
addl
jo
and
or
cltd
lds
pop
push
mov
stos
shlb
push
sbb
and
repz
stos
xchg
and
mov
inc
cmp
js
jge
and
lods
push
mov
ss
mov
mov
pop
hlt
jne
gs
iret
jb
pop
pop
lret
std
pusha
out
aam
jnp
test
mov
mov
and
xchg
fadds
sbb
push
mov
add
addr16
scas
clc
jne
xchg
sbb
je
pop
inc
or
popf
mov
xor
xchg
sbb
sbbl
cmp
jno
xor
jb
daa
pop
add
insb
mov
push
fistpl
adc
scas
or
push
in
mov
dec
sbb
jns
dec
pop
sub
fnsave
mov
loopne
push
mov
and
dec
addb
pop
insb
sub
push
aad
scas
push
xchg
movsl
mov
and
pop
or
rorl
fsubrl
xor
mov
cwtl
xchg
rorb
pop
mov
ret
call
insl
inc
and
fnstcw
in
jb
pop
cmp
inc
pop
mov
xchg
and
rcrb
or
pop
testl
pop
xchg
jb
pop
test
lea
push
pop
sbb
add
mov
out
and
xchg
pop
scas
dec
xchg
lahf
cmp
and
sbb
jb
xchg
or
cmp
cld
iret
arpl
pop
fnstsw
xor
in
xor
stc
pop
jp
shlb
xchg
sbb
sub
mov
je
sarb
pop
addl
fisttpll
dec
loope
cmp
inc
mov
inc
lret
xchg
lahf
fdivrs
adc
pop
sbb
mov
jo
inc
rorl
test
rorb
cmp
bound
lea
mov
push
adc
inc
rcr
mov
fwait
xchg
add
sti
mulb
jp
mov
adc
cmp
ret
pop
dec
push
and
add
scas
inc
mov
sbb
mov
es
sub
fadds
mov
in
push
dec
daa
iret
pop
repz
pop
cmp
fnstcw
or
mov
xor
jp
sbb
pushf
mov
popf
cltd
jns
inc
rcrl
pop
aam
mov
dec
sbb
jne
add
xor
stc
pop
cmp
xorl
xor
in
push
add
movsb
sbbl
clc
int
loop
dec
sti
pushf
fwait
ljmp
cmp
push
sti
scas
xor
in
mov
jp
sbb
add
andl
mov
pop
mov
shll
pop
inc
int3
in
unpckhps
mov
pop
dec
stos
jb
xor
xchg
inc
push
mov
push
ss
mov
lods
jbe
sbb
and
pop
insl
push
jae
jo
lahf
push
fmuls
xchg
mov
mov
out
jl
jmp
or
cmp
fsubrp
xchg
add
sbb
xor
xchg
stos
pop
or
cld
bound
jmp
xor
sub
mov
adc
dec
pop
sbb
loope
mov
pop
pop
sub
adc
xorl
movsb
imul
in
cmp
pop
pop
sub
out
mov
cmp
std
in
clc
and
mov
in
and
dec
pop
pop
scas
and
dec
in
ret
xchg
pop
sbb
addr16
jns
sbb
test
mov
add
push
pop
mov
push
pop
nop
in
jbe
outsb
arpl
or
ja
fwait
push
adc
mov
xchg
sub
add
ret
pop
or
dec
jecxz
inc
sbbl
fcoms
fmull
pop
ror
repz
or
lods
inc
pop
in
push
inc
das
cmp
mov
js
jge
pop
mov
cmpsl
out
dec
lret
xchg
pop
add
pop
pop
lods
jb
sub
xor
jo
pop
or
xchg
or
jae
sub
xlat
cltd
push
rcrl
clc
lds
jbe
adc
add
inc
ja
xor
pop
iret
ss
jecxz
sti
in
pop
or
leave
lahf
add
inc
mov
push
sub
or
dec
into
inc
jns
push
cmp
push
and
test
jge
sbb
shll
mov
pop
pop
test
nop
pushf
jb
or
inc
notl
pop
mov
pop
loop
loope
sub
pop
mov
or
fistps
pop
mov
out
or
ret
add
jbe
sub
decb
stos
cltd
scas
in
push
pop
test
lods
repz
int3
into
iret
jbe
mov
sub
std
xor
inc
lea
pop
pop
int
aaa
mov
mov
ret
mov
pop
and
bound
mov
xchg
sbb
out
fsubrs
mov
pop
dec
cmp
dec
ret
fbstp
jge
out
sbbl
int
cmp
into
imul
cmp
clc
cmp
and
xor
insb
aas
mov
sub
dec
pop
push
jg
inc
mov
cmpsb
fdivrp
pop
fcomp
popf
bound
cwtl
sbb
insb
jecxz
rcrl
daa
pop
and
push
scas
pop
shrb
sahf
dec
adc
jo
pop
out
and
xchg
mov
or
dec
jbe
pop
shl
loopne
cmp
fs
cltd
mov
lods
or
cmpsl
or
pop
dec
lcall
jo
roll
pop
pop
sub
out
int3
dec
ret
and
adc
and
pop
dec
jo
xorb
pop
int
add
int3
pop
sbb
dec
jo
jg
fldt
push
les
frstor
and
push
jno
dec
insb
xchg
dec
lods
pop
outsb
cmp
pop
mov
out
in
xchg
mov
iret
imul
fidivl
movl
mov
loope
cmpb
mov
pop
pop
pop
shr
dec
jne
pop
fmull
popa
aas
xor
shll
push
pop
fstl
inc
xchg
pop
fimuls
nop
xlat
int3
pop
insb
pop
sti
repz
stos
sbb
xchg
cli
loopne
int3
shl
pop
inc
or
cmpsb
cmp
arpl
in
fstl
mov
pop
js
lahf
fwait
sahf
in
aam
pop
push
jge
lods
xor
pop
test
jle
fwait
lods
aam
jne
push
or
mov
mov
rol
jge
pusha
lahf
and
mov
sbb
mov
decl
mov
xchg
shrl
cld
push
addr16
sahf
pop
pop
pop
mov
test
pop
haddpd
mov
jo
shl
pop
mov
fcomps
les
int3
pop
gs
xlat
mov
das
pop
pop
add
jg
rcrl
mov
imul
fisttpll
xchg
pop
adc
rcrb
xor
mov
and
addr16
cmp
mov
push
nop
pop
js
pop
mov
xor
pop
dec
push
lock
fldcw
sub
aam
pop
es
or
push
pop
pop
lret
lock
push
stc
xor
push
mov
and
rcr
data16
pop
insl
jno
jo
pop
cmpsb
push
int3
cltd
xchg
mov
pop
mov
sbb
pop
xor
cmp
in
arpl
pop
mov
in
lods
pusha
int3
pop
or
add
cmpsl
and
dec
inc
clc
pop
ss
xchg
jno
mov
xchg
fiadds
mov
xor
ret
fistl
loope
xchg
imull
std
mov
pop
sub
stos
test
sbb
jbe
pop
imull
ss
xchg
int
sbb
sbb
stos
lcall
mov
cmp
or
mov
pushf
push
out
lahf
jns
lret
pop
loopne
jne
mov
mov
sar
bound
sub
stos
orl
sti
push
xor
pop
adc
mov
or
mov
cmpsb
pop
stos
mov
imul
shll
sub
adc
pop
push
adc
stc
add
aaa
and
xchg
inc
loopne
push
out
lret
enter
je
pop
call
pop
inc
mov
cmp
jns
mov
jle
mov
lea
or
aam
cmp
mov
jo
pop
mov
adc
xor
loope
arpl
add
fiaddl
mov
xor
orl
dec
dec
sti
mov
push
fsubrp
not
dec
or
ljmp
sub
cmp
cmp
in
rorb
add
repz
pop
pushf
cmp
mov
mov
rcrb
movsb
jno
pop
jmp
or
sub
in
inc
inc
jbe
pop
cli
push
xchg
mov
and
repnz
lret
je
scas
push
sbb
pop
push
lcall
pop
sub
and
jge
fwait
lea
jle
out
cmpsb
cmp
stos
jnp
and
fwait
pop
sub
lret
xchg
pop
test
jmp
and
sbb
sbb
pop
jge
jnp
decb
mov
fcmovb
outsl
and
jae
adc
jb
sahf
sub
mov
jle
iret
pop
dec
mov
pop
rcrl
test
mov
int
mov
jbe
push
push
fcomps
ret
sub
pop
jge
push
dec
mov
mov
cld
lods
lea
dec
in
mov
jmp
xchg
mov
mov
icebp
mov
sti
push
int
loopne
cwtl
pop
roll
pusha
sbb
push
ret
jb
add
lods
shll
push
pop
sbb
push
push
pop
insl
xor
ja
jbe
xchg
mov
jns
jo
pop
sub
orl
incl
pop
mov
inc
pop
scas
or
and
adc
mov
fsubrs
xchg
pop
dec
xchg
mov
dec
pusha
jo
popf
lods
inc
fidivl
ret
pop
lea
jbe
mov
cmpsb
and
mov
enter
pop
pop
adc
idivl
pop
aam
cmp
lahf
and
test
dec
sub
mov
cltd
scas
dec
out
test
sahf
push
jecxz
xor
sbb
gs
ficompl
xchg
js
int3
push
add
xchg
pop
aaa
call
and
iret
push
mov
pop
inc
mov
std
mov
mov
mov
xacquire
fldcw
pop
xor
and
mov
fcmovnbe
xor
dec
sub
lahf
cli
cmp
pop
bound
aaa
and
movsl
sub
ljmp
data16
sub
jae
clc
pop
pop
mov
lahf
sbb
jle
jo
add
test
mov
mov
fsubs
mov
inc
or
lahf
inc
stc
stos
mov
lret
sub
in
ss
loope
rcrl
in
sbb
xchg
nop
cltd
mov
daa
pop
pop
cmp
int3
imull
push
adc
lods
lahf
pop
mov
sti
cltd
sub
hlt
dec
pop
ror
fwait
sub
out
in
int3
neg
mov
xor
xor
sbb
mov
das
dec
jecxz
pop
movb
test
lea
pop
dec
loopne
imul
into
clc
lea
and
ret
add
pop
sbb
lcall
lahf
fldl
jne
push
push
sbb
fwait
movsb
enter
int
loop
imul
adc
pop
sub
lea
arpl
mov
add
outsl
sbb
std
scas
jo
mov
push
arpl
bound
pop
sti
dec
lds
shrl
cmp
sub
cwtl
add
andb
push
daa
push
call
cmp
cmpb
scas
push
adc
mov
into
cwtl
mov
lock
out
cmp
ffreep
pop
jne
mov
lret
pop
jmp
adc
pop
in
mov
pop
mov
pop
jae
cld
jb
pop
mov
ljmp
mov
int3
pop
jne
iret
idivb
adc
sbb
aam
cmp
data16
arpl
pop
cmpsb
cmp
fsubrl
pop
and
sbb
lret
dec
insl
mov
xchg
sbb
call
rcll
pop
in
scas
jbe
sub
jg
ret
push
jns
add
call
cmp
add
pop
shlb
mov
xchg
pop
or
or
gs
cwtl
xchg
cmpsl
pop
xchg
fs
jnp
lods
and
or
sbb
cmpsb
pop
mov
out
mov
pop
sub
inc
insl
leave
sub
cmp
adc
call
adc
jl
cmpsb
pop
lcall
jb
push
imul
mov
pop
shl
dec
push
cmp
pop
pop
arpl
pop
sti
rolb
mov
mov
decb
lahf
testb
aas
jo
pop
iret
xchg
sbb
push
daa
adc
inc
cmp
lods
lcall
std
or
mov
mov
add
mov
je,pn
in
cmc
sbb
sub
inc
jp
jl
ja
repnz
pop
fildll
add
sbb
pop
std
scas
sub
cmp
lahf
js
ret
pushf
add
out
pop
mov
xor
mov
xchg
mov
mov
jb
sahf
stos
pusha
mov
pop
jbe
cmpb
in
addl
cmp
cmp
xor
ret
adc
movsb
pop
fcmovbe
xor
cmpsb
xchg
pop
in
xor
out
das
mov
mov
dec
fistl
pop
xchg
dec
pop
es
xchg
roll
and
mov
subb
xchg
loopne
lock
xchg
int
mov
mov
loop
test
in
nop
inc
lret
pop
fldt
pop
pop
push
popf
aam
pop
xchg
sub
and
dec
fucom
pop
movsl
push
clc
cli
shlb
mov
dec
cmp
int
lahf
pop
scas
xor
lock
sbb
jb
mov
test
out
cmp
out
xchg
mov
iret
sbb
je
paddusb
mov
pop
mov
mov
xchg
lret
dec
xor
jle
push
sti
lcall
fisubl
sets
fmul
jmp
cmp
gs
scas
rcrb
pop
int
fists
cmp
decl
iret
adc
lock
jns
dec
pushf
es
pop
cld
cli
jo
pop
subl
int3
mov
daa
inc
jmp
test
mov
inc
cmc
pop
sarb
ror
inc
pop
jae
sbb
stc
push
mov
dec
push
enter
lahf
data16
sub
xchg
stos
push
rorb
mov
jle
pusha
pop
in
mov
fcoms
dec
popaw
ss
pop
insb
adc
jno
add
mov
ficompl
imul
pop
pop
xchg
sub
push
pop
rcll
jae
jg
out
pop
mov
sbb
pop
adc
fucomi
jns
mov
gs
jmp
pop
push
pop
sar
sbb
or
mov
movsl
pop
bound
cmpb
pop
aad
jmp
xor
xlat
dec
cmp
mov
mov
out
clc
pop
ret
dec
xchg
addr16
jo
pop
or
mov
scas
pop
pushf
add
jmp
mov
sbbb
imul
or
push
inc
mov
mov
aas
movsl
sub
lds
les
fdivr
pop
jbe
cli
cmp
sbb
pop
mov
repz
incb
dec
fiadds
mov
and
cmp
cmp
sub
mov
xorb
mov
inc
gs
and
rorb
xor
es
jmp
mov
pop
push
dec
dec
mov
pop
jo
mov
fs
cmpsb
lret
inc
test
jp
xorb
and
in
pop
push
mov
fadds
sbb
add
jb
inc
pop
pop
push
xchg
xchg
iret
pop
pop
in
cld
dec
push
test
lcall
cmp
and
cmpsb
inc
out
dec
sub
xchg
shrb
add
scas
and
lret
fstpt
mov
in
pop
mov
ja
pushf
dec
int3
fisttpll
rcl
mulb
scas
stc
int
xor
or
stos
pop
pop
mov
les
andl
fxch
sub
pop
or
fldl
or
in
int3
jge,pt
jno
js
pop
push
or
lret
mov
or
sub
leave
mov
pop
std
xchg
pop
jecxz
testb
lret
insb
xchg
jle
jecxz
shrl
or
ss
int3
mov
dec
sbb
pop
dec
in
lods
sti
lea
xor
lcall
jg
pop
dec
jb
test
cld
mov
jno
pop
pop
sbb
push
cli
jnp
pop
js
repz
jb
pop
mov
rolb
pop
insb
jbe
sbb
popw
push
jb
jnp
lds
sahf
sbb
jbe
stos
mov
out
push
inc
fistps
test
pop
addr16
push
or
sbb
pop
and
mov
aad
dec
mov
jmp
pop
jmp
jbe
fbld
inc
dec
incb
jge
sbb
dec
pop
imul
jecxz,pt
pop
push
mov
xchg
pop
dec
pop
pop
cmp
sahf
xchg
pop
fwait
ds
cmp
dec
push
enter
xchg
fdivl
jmp
mov
filds
push
nop
pop
push
fmull
cltd
jbe
adc
xor
insb
mov
mov
mov
adc
pop
jo
inc
jle
dec
jbe
pop
cld
xchg
int
pop
add
lahf
repz
cli
xchg
xchg
push
mov
mov
pop
roll
sbb
lods
test
pop
sub
insl
mov
pop
xlat
dec
jae
push
mov
sbb
pop
pusha
sub
stos
mov
xchg
push
or
lahf
loope
ret
inc
fstps
push
dec
adc
fs
cmp
outsl
loopne
add
push
insl
pop
adc
adc
in
jle
pop
fucomp
icebp
jp
imul
sbb
mov
xor
inc
or
pop
push
and
cmpsl
movsb
pop
leave
fxam
sti
jb
dec
aam
adc
adc
popl
jo
add
aas
mov
mov
jge
add
pop
test
mov
fdivrs
inc
iret
jge
mov
push
push
mov
adc
dec
pop
jae,pn
ja
push
mov
mov
cmp
clc
sbb
lock
sbb
movsb
and
and
push
punpckldq
lock
or
fisubrs
pop
int
sahf
movsl
ja
lcall
pop
adc
cld
pop
test
jl
or
lods
or
mov
dec
in
mov
lods
ja
ret
jbe
rclb
adc
pop
pop
outsl
jl
push
out
xlat
xor
jnp
out
test
enter
sbb
mov
adc
push
sbb
lcall
in
mov
xor
pop
lret
divl
decl
jge
push
pop
lea
fdivs
pop
push
push
jmp
inc
or
sahf
call
int
push
aad
push
adc
out
xchg
repnz
inc
lahf
push
dec
testl
mov
inc
pop
icebp
or
sbb
push
jg
xchg
mov
xchg
jo
add
inc
data16
pop
cld
aad
loope
xor
mov
arpl
pop
mov
adc
lcall
scas
mov
and
push
dec
ret
cmp
aam
mov
mov
movsb
sbb
aad
mov
push
sub
pusha
mov
test
daa
xchg
pop
dec
mov
mov
mov
sbbl
jbe
stc
aam
sub
cmpsl
mov
mov
pop
pop
repz
icebp
pop
dec
imul
mov
jns
jge
fstpl
call
jecxz
mov
sbb
pop
mov
into
int3
enter
jbe
cmp
loopne
fwait
jl
lods
lea
and
mov
add
jb
pop
js
test
xor
jle
enter
stc
sbbb
das
repz
stos
scas
fs
repnz
xor
test
sarb
mov
pop
add
mov
mov
sbb
lret
mov
or
sbb
sbb
pop
shll
add
sbb
inc
leave
mov
mov
lods
lret
dec
adc
cmp
movsl
pop
pop
cwtl
stos
ja
lods
pusha
cmp
in
pop
add
mov
imul
xchg
xchg
xchg
cs
push
jmp
pop
stos
repnz
sbb
push
pop
push
jb
add
add
in
pop
lret
inc
push
popa
mov
mov
ja
out
jnp
adc
ret
pop
addr16
in
cli
push
pop
mov
xor
enter
fs
xchg
pop
movsb
hlt
jbe
dec
insb
push
negb
testl
int3
in
mov
cmp
push
mov
test
sbb
jns
pop
insb
shrb
jecxz
mov
and
dec
je
hlt
pop
inc
mov
dec
xchg
int
adc
pop
xor
push
in
and
lock
mov
sti
lds
jbe
pop
aas
sub
dec
sahf
out
cltd
aam
fsts
mov
adc
xor
xchg
aas
pop
icebp
sub
roll
dec
mov
leave
and
jbe
cmp
jmp
mov
rcrl
mov
lods
dec
pop
or
int
fidivrs
pop
das
push
fistpll
sbb
jo
rcrl
or
jne
mov
add
mov
adc
jbe
outsl
ja
cli
jns
pop
adc
jo
or
scas
cmp
jae
mov
push
sub
mov
aas
mov
pop
xorl
sbbb
mov
mov
pop
sbb
pop
pop
cwtl
or
sbb
and
leave
mov
jb
mov
loop
or
mov
sbb
fisttpll
in
mov
adc
addb
pop
dec
sub
in
mov
xchg
dec
pop
pop
push
jmp
popf
cli
mov
test
push
jns
sti
pop
fwait
je
jae
sbb
mov
pop
inc
mov
and
xchg
cmpsb
cli
mov
fnstcw
mov
test
pop
inc
xchg
pop
in
xor
scas
sti
repz
dec
mov
test
je
ds
in
cld
sbb
aaa
aas
pop
or
pop
or
lahf
fcompl
pop
jns
pop
pop
test
ss
mov
pop
sahf
pop
cmp
push
rcrb
les
pop
icebp
pop
pop
mov
shrl
mov
fstps
pop
mov
aas
or
xchg
mov
into
dec
jbe
orl
leave
jle
sub
and
flds
push
pop
into
dec
dec
cld
dec
sbb
mov
cmp
cmp
int
fsubl
cmc
add
cmpsb
xchg
adc
pop
das
xor
push
pushf
mov
jle
pop
daa
jb
cmpsb
mov
stc
lahf
pop
mov
sbb
js
lret
sub
inc
add
mov
in
jg
or
dec
sti
std
pop
and
fucomip
repz
ror
pop
iret
push
jb
arpl
mov
cmpsb
or
dec
int3
push
pop
jbe
cmp
call
and
pop
ljmp
arpl
xchg
inc
call
gs
mov
mov
dec
insb
outsb
out
xor
lods
jbe
dec
pop
adc
iret
fisttpll
cmp
sbb
mov
lret
stos
cmc
pop
aam
push
pop
add
stc
js
mov
arpl
pop
pop
jns
cmp
pop
inc
sti
xor
push
push
pop
sti
insb
adc
cltd
scas
out
je
test
mov
xorl
dec
enter
call
adc
mov
pop
adc
xor
xchg
outsb
lods
pop
repnz
push
lock
dec
pop
jo
pushf
adc
sbb
pop
mov
jb
ds
in
insb
pop
jne
rcrb
push
push
mov
test
push
cmp
pushf
cmp
adc
sub
sbbb
or
test
push
rcrl
out
push
repz
movsb
pop
or
ficomps
ret
cmp
sbb
stos
or
mov
add
lret
inc
je
or
das
mov
dec
aaa
lods
pop
ja
daa
lea
loop
push
std
pop
test
or
pop
sbb
insl
daa
sub
aas
ret
jns
jo
jo
pop
in
stos
das
insb
xchg
or
sbb
xchg
sub
stc
pop
xchg
repnz
adc
jne
push
imul
mov
lret
pop
cld
in
jno
cli
pop
pop
sti
mov
xor
mov
out
pop
roll
push
pop
add
sub
stc
daa
pop
ss
mov
popa
xor
cli
ss
mov
popf
sbb
inc
divb
shrb
je
pop
ror
xchg
jp
fbld
xchg
cmpsb
shrb
jns
pop
call
repnz
aad
dec
pop
outsl
mov
xor
xchg
inc
pop
xor
mov
sbb
test
cmp
xchg
lea
sub
pusha
push
mov
ja
stos
sbb
xlat
inc
adc
inc
pop
shrb
ja
mov
roll
pusha
sbb
mov
inc
lahf
mov
pop
push
mul
popf
inc
sbb
test
mov
je
sub
mov
out
fdivl
and
ja
dec
add
push
xchg
dec
jae
cs
pop
mov
inc
in
mov
mov
xchg
inc
xchg
cmp
loopne
rcr
pop
and
movsl
stc
mov
lods
fs
es
sbb
xchg
inc
mov
aaa
fnstcw
insl
pop
imul
pop
adc
testl
shll
pusha
sbb
sbb
dec
mov
movb
loopne
pop
jns
mov
cmp
cmp
lahf
and
pop
imul
loope
and
mov
mov
mov
shll
pop
ljmp
pushf
jo
xlat
sub
cmp
int
mov
pop
inc
xor
lcall
mov
mov
test
adc
jb
in
pop
dec
xchg
bound
jecxz
dec
addr16
add
sbb
mov
mov
popa
dec
add
sbb
pop
mov
insl
inc
sub
scas
test
fsubl
pop
adc
cmpsb
imul
mov
mov
ljmp
mov
pop
pop
nop
dec
push
js
pop
repz
sbb
pop
jb
pop
in
mov
call
cmpsb
xchg
fiaddl
aas
lds
pop
sub
fbld
test
test
xchg
lret
pop
fnstsw
dec
jns
xor
jae
or
push
into
dec
jb
mov
or
iret
fimuls
lds
cmpsb
scas
sbb
movsl
inc
pop
pop
ret
adc
jne
insb
pop
mov
aas
xchg
pop
cmp
or
lret
xor
loop
popf
testl
cmp
mov
int
push
fwait
or
jb
test
adc
pushf
mov
lcall
pop
mov
stos
rcl
je
data16
aam
leave
xchg
cld
mov
and
incb
jo
fidivrl
pop
jl
jne
int
mov
inc
push
push
mov
jge
loop
movsl
pop
jns
inc
xorb
xor
or
ret
lea
sbb
mov
adc
xchg
rolb
scas
repz
enter
jl
nop
in
pop
sub
je
mov
dec
mov
ficoml
pop
sete
fldenv
fstl
sub
adc
ja
pop
pop
lds
adc
pop
test
clc
ret
cltd
lret
and
jns
in
addr16
sub
mov
add
dec
pop
leave
xor
cmp
mov
push
push
pop
scas
lret
pop
cmp
in
xchg
lods
and
mov
xor
int3
sub
pop
fwait
mov
pop
nop
mov
xchg
push
xchg
stos
jmp
outsb
lret
movl
mov
xchg
outsl
sub
push
imul
jns
jle
sbb
or
mov
cmc
mov
cmp
sbbb
sahf
cmp
ficoml
pusha
or
hlt
pop
pop
lock
ja
jns
nop
pop
dec
fsub
lods
iret
dec
sbb
fdivp
jp
repnz
xchg
dec
xlat
dec
lret
adc
sbb
loop
call
pop
shlb
and
jecxz
push
in
xor
add
gs
cmp
dec
pop
mov
int3
loope
mov
push
daa
fmuls
mov
pop
in
shl
movsl
pop
xlat
jecxz
lods
pop
pop
mov
mov
inc
sbbb
lahf
fidivrl
insl
pushf
pop
in
int
stos
fldl
cwtl
stos
xchg
jecxz
cwtl
cmpsl
push
mov
jno
push
mov
js
inc
jle
pop
cmp
ja
push
cmc
pop
mov
sub
lea
inc
ljmp
add
dec
push
mov
and
sbb
mov
clc
and
movsl
mov
scas
cmpl
fimull
js
clc
lds
pushf
inc
jbe
scas
or
push
ja
jo
push
adc
cli
fmuls
mov
mov
stos
sub
pop
pop
iret
adc
pop
or
enter
fidivrl
xchg
and
fnstcw
pop
pop
pop
jns
pop
fbld
fstpl
add
pop
lahf
adc
or
sub
mov
leave
push
and
lock
mov
ja
push
jne
ficompl
mov
inc
int
mov
inc
xchg
sarl
or
fstpt
dec
and
int
mov
pop
nop
pop
je
dec
add
xor
xchg
sbb
fisttps
jmp
lret
and
aaa
xchg
imul
fldcw
sbb
lret
mov
dec
pop
adc
test
scas
mov
xchg
inc
movsb
jge
fisubrl
cmc
xchg
pause
mov
negl
push
in
or
pop
push
insb
fisttpl
jo
pop
aam
or
xchg
sbb
jne
iret
mov
bound
pop
adc
pushf
mov
out
into
mov
enter
cwtl
outsl
sbb
scas
cmc
fists
fildl
xor
adc
or
aad
fs
lds
pop
aad
aam
mov
repz
inc
incb
iret
sbbl
loop
sub
or
cli
mov
pop
std
mov
xchg
inc
in
dec
ss
jo
xor
pop
and
jp
test
dec
pop
iret
lea
jg
cld
cmp
ja
push
sub
popf
clc
push
or
fld
loope
sub
sub
sub
jbe
pop
lock
sahf
and
add
pop
inc
xchg
push
lahf
aam
sbb
pop
push
adc
jecxz
cld
sub
pop
sbb
loopne
cmp
mov
lods
mov
push
enter
fistpll
popa
mov
sub
fmuls
adc
jb,pt
mov
add
push
leave
fnstenv
mov
sbb
rcrb
jb
cmp
cmp
dec
mov
mov
adc
push
mov
cs
lret
loopne
cmc
clc
mov
fcompl
and
inc
jno
jp
in
fldt
scas
dec
mov
hlt
pop
push
sub
mov
or
cmp
pop
stos
pop
int3
pminub
pop
pop
int
imul
xor
pop
dec
cwtl
pop
mov
sarl
stc
test
mov
movsl
mov
and
jo
pop
cmpsl
xor
insb
arpl
cli
data16
pop
cltd
add
fiadds
iret
adc
mov
dec
sub
pop
loop
outsl
scas
fisttpll
xchg
and
shrd
int
sahf
scas
jns
pop
mov
cwtl
mov
call
cltd
mov
xchg
sub
aaa
mov
xchg
les
push
shll
ficompl
sub
or
outsl
pop
cwtl
dec
fdivrs
adc
xchg
loop
pop
push
mov
cmp
cmp
inc
std
mov
call
dec
add
mov
pushf
clc
into
dec
xchg
mov
mov
xor
xchg
jae
pop
mov
shll
push
inc
jns
mov
xchg
shrb
pop
gs
stos
lahf
popf
addr16
in
pop
mov
push
mov
pop
out
jge
fsubrl
sti
add
mov
mov
cmp
push
push
iret
movsl
pushf
fdivr
mov
mov
outsb
pop
lock
fimuls
jbe
adc
xchg
jl
sahf
int3
or
cmp
and
xor
pop
xor
push
adc
lock
pop
or
ja
ret
dec
mov
push
jmp
lea
mov
mov
popf
imul
arpl
pop
sti
pop
adc
sbb
loope
jb
adc
and
inc
cwtl
xchg
lahf
stos
fisubl
inc
pop
mov
fmul
xchg
pop
test
sub
mov
pop
sbb
bound
or
leave
mov
jb
jge
test
sbb
adc
jno
sbb
push
stos
lahf
sbb
pop
scas
in
sbb
pop
rorl
mov
adc
arpl
sbb
pop
je
cmp
ret
add
loope
pop
jg
jmp
lahf
or
out
fstps
pop
popa
hlt
jle
inc
jl
push
pop
mov
mov
xchg
mov
or
mov
pusha
jb
cmp
dec
fcmovu
mov
mov
pop
test
popa
stos
pop
or
data16
mov
inc
sbb
fisubrs
mov
in
sub
mov
bound
ret
pop
jae
rcrl
test
sub
dec
inc
pop
mov
aad
sbbb
jbe
les
xchg
cmpsb
pop
mov
cmpsl
jno
pop
jl
addb
or
pop
sbbl
js
sbb
adc
pop
jp
sbb
sbb
sbb
jl
xchg
lret
loop
jecxz
sbb
pop
push
andl
mov
jae
jb
mov
xor
mov
repz
push
sub
jno
pop
cld
jno
out
stc
cmp
int
mov
and
push
data16
xor
adc
jnp
mov
pusha
out
repz
or
sbb
mov
mov
and
jne
push
pop
mov
aam
sti
lret
add
pushf
mov
pop
mov
adc
aaa
push
pop
mov
fxch
mov
mov
pop
arpl
into
fcmovb
rcrl
push
mov
shl
orl
adc
imul
add
xchg
pop
or
int3
ficompl
inc
add
sti
pop
scas
int
ret
test
repnz
jbe
adc
pop
movsl
cmp
aaa
or
nop
cltd
js
and
out
out
mov
mov
movsb
add
adc
int3
fsubrl
pop
mov
xor
jbe
jne
rep
adc
int
sub
aas
leave
cmp
inc
icebp
lcall
adc
mov
jge
cmc
pop
pop
test
sub
pop
push
or
lahf
lods
pop
or
cmp
xchg
pop
push
mov
dec
popf
jecxz
fwait
test
jo
or
into
sti
push
test
dec
stc
pop
xchg
mov
pop
pop
pop
mov
xchg
ret
imul
shrb
pop
cs
pop
jg
sub
xlat
addr16
enter
lea
int
cmp
mov
ja
ficoml
inc
shll
scas
xchg
xor
xor
cld
push
sbb
adc
pop
pop
jb
cmp
lock
lods
lcall
xchg
out
idivb
and
adc
fdivs
lret
jl
mov
xor
pop
push
sbb
push
rcrl
int3
lea
lds
es
sbb
nop
scas
and
shl
int3
pop
pop
inc
stos
pusha
or
mov
xor
dec
cmpsl
ror
xchg
pop
fsubl
mov
lea
repnz
add
fldl
or
inc
mov
pop
aas
xor
stc
jo
pop
pop
xchg
xor
call
pop
adc
mov
inc
jl
and
insl
jb
int3
popa
pop
in
cmp
add
mov
pop
xlat
sbb
stos
jno
leave
lea
bound
cmp
fcompl
fnstcw
in
lea
aaa
mov
test
inc
lret
push
adc
movsb
lret
adc
pushf
mov
push
mov
cli
inc
ficompl
mov
pop
addb
stc
and
mov
les
pop
push
push
push
xchg
mov
or
outsb
jl
pop
add
lods
lahf
adc
jnp
fstpt
sahf
testw
inc
pop
push
inc
inc
stc
mov
out
pop
inc
fdivrp
cld
lret
movsb
push
mov
arpl
aas
pop
jo
mov
or
jp
enter
add
lea
ljmp
lods
pop
xchg
enter
neg
fistps
adc
mov
das
pop
out
push
jg
and
cs
add
jb
add
sub
out
std
xchg
pop
mov
out
lahf
lea
aad
inc
arpl
pop
jo
inc
xlat
int
sub
mov
mov
int3
add
dec
lods
jp
cmp
cmc
rcrb
xchg
xlat
imul
ja
pushf
xchg
jge
ret
pop
iret
ss
sbb
adc
xchg
lods
pop
std
jb
xorb
mov
push
jae
call
int
pop
imull
clc
ret
push
and
fwait
mov
out
pop
adc
push
pop
xor
inc
fcomps
pusha
inc
int
ret
mov
jp
xor
and
test
xchg
aad
dec
mov
adc
mov
mov
ficomps
sbb
dec
das
ljmp
and
pop
fdivp
lods
movsb
push
andb
mov
pop
push
dec
jbe
mov
jae
shrb
cmp
or
out
mov
lret
pop
dec
test
xor
push
fsts
push
loop
mov
mov
mov
or
and
bound
fcmovnb
scas
mov
loopne
pop
mov
inc
mov
in
adc
push
loope
sbb
dec
push
out
cld
inc
pop
mov
pop
mov
js
in
dec
and
das
int
jge
push
popf
mov
pop
aad
sub
pop
and
popa
lret
mov
mov
pop
jbe
xor
pop
pop
jne
das
inc
cwtl
int3
or
jo
sub
sub
sbb
pop
out
scas
xchg
jb
push
and
sbb
pop
mov
ljmp
std
jge
fstpl
inc
arpl
sub
ds
pop
jle
xchg
mov
push
xchg
pop
dec
or
jae
fisttpl
mov
subb
dec
cmp
jge
pop
int
lock
lea
pop
cltd
pop
mov
mov
sub
xchg
in
cs
shrb
cmp
or
inc
or
aam
pop
fcoml
je
out
pop
arpl
ljmp
hlt
pop
pop
orl
add
ret
cmp
movzwl
sbb
add
out
jo
pop
inc
sbb
les
xchg
mov
popf
jns
orl
ja
pop
adc
cvtps2pd
std
ljmp
add
in
push
lods
pop
fcompl
push
or
scas
mov
scas
adc
in
inc
cmp
jbe
test
int
or
leave
negb
push
jmp
push
and
lods
cmp
mov
in
adcl
sar
std
dec
sbb
ds
outsl
int3
je
gs
jnp
sub
insb
inc
test
ror
pop
lret
mov
jle
jns
mov
pop
test
fisubrl
pop
mov
sub
pop
jbe
dec
push
movsl
mov
add
dec
pop
mov
dec
outsb
sar
ficoms
dec
or
lret
cld
into
mov
gs
fistps
or
cmp
shll
mov
fiaddl
adc
jae
fldcw
xlat
mov
in
imul
cmp
pop
js
pop
lock
pop
rcll
pop
jno
clc
sub
out
pop
icebp
aam
cmc
lods
pop
pop
cld
sbb
mov
dec
inc
repz
push
in
push
int
lcall
out
adc
pop
jo
xchg
jmp
lahf
cmp
in
fimull
pop
arpl
in
push
dec
pop
dec
mov
idivb
je
xchg
insb
add
or
dec
or
adc
pop
or
and
mov
mov
push
sbbl
movsl
pop
int3
mov
inc
into
pslld
ja
pop
in
stos
les
jmp
pop
xor
ljmp
sbb
cmp
pop
lds
mov
pop
jnp
icebp
dec
jbe
mov
sub
cmc
cltd
aas
int
pop
movaps
pop
jbe
mov
push
sub
addr16
mov
popa
cltd
ret
mov
pop
pop
xor
or
icebp
pop
and
inc
sbb
orb
fistl
jb
lret
add
jbe
int
add
cld
add
pop
insb
pop
addb
pop
xchg
int3
xchg
mov
xor
addr16
jbe
aam
mov
push
lcall
js
adc
test
cli
dec
mov
imul
mov
pop
add
sbb
or
pop
jb
out
dec
arpl
std
sub
dec
pushf
adc
ss
test
pop
icebp
push
and
jg
test
scas
xor
rcrb
lret
xchg
cld
xchg
or
verr
mov
push
sub
sub
mov
jb
decl
mov
movsb
mov
mov
jbe
jle
fwait
fs
pop
int3
push
mov
xor
pop
stc
sbb
sahf
dec
outsl
loop
in
stos
pop
and
icebp
sub
pop
lahf
adc
jp
fprem1
sti
cmpb
pop
fistl
pop
xchg
rcll
xorb
add
jne
xor
cs
adc
sbb
aad
or
rcl
mov
xchg
jno
pop
out
fidivrl
test
push
aad
sti
adc
pop
bnd
mov
or
pop
adc
sahf
popa
into
pop
ret
cmp
pop
fistpl
cmp
sub
jl
iret
sub
test
cld
sbb
cs
pop
mov
fcmovu
aad
loope
out
in
shrl
sbb
push
repz
push
pop
push
or
mov
xchg
adc
add
jle
sub
push
and
test
addr16
jo
in
cmp
pop
cmp
addb
jno
fcmovne
xchg
add
cli
mov
pop
xor
and
pop
sbb
xchg
pushf
test
sbb
dec
int
add
jg
and
insl
ficompl
xchg
pop
arpl
cltd
hlt
adc
cmp
xor
mov
faddl
push
sbb
mov
daa
cmpsl
xor
mov
bound
sbbl
push
jae
cmp
pop
add
fldcw
insb
rcr
sub
lahf
jg
dec
lods
lock
pop
inc
pushf
ja
cli
enter
pop
js
cwtl
xchg
adc
pop
sub
out
mov
pop
sbb
int3
cmp
gs
or
cmp
xchg
mov
jge
pop
jbe
or
mov
in
int
fs
pop
inc
lret
test
popf
jbe
cmpsb
cli
pop
lret
pop
pop
ret
dec
int
pop
mov
mov
jb
mov
fmuls
cmp
mov
or
cli
loope
and
ret
pop
shll
adc
and
sbb
sbb
loop
mov
or
xor
cli
and
adc
stc
mov
add
push
push
pop
sbb
xchg
mov
int
add
outsb
clc
or
inc
xor
mov
jecxz
cmp
adc
mov
leave
mov
inc
repz
push
test
mov
pop
aaa
pop
and
sbb
xchg
dec
push
aaa
push
mull
mov
xor
mov
cmpsl
xor
sbb
lahf
lea
cmpl
xor
or
add
adc
setns
adc
sbb
or
jo
imul
mov
sub
and
add
dec
lret
in
inc
adc
test
fisubrs
aaa
negl
pop
inc
sub
aad
xchg
jl
lcall
push
pop
jecxz
cli
clc
xor
push
sbb
jo
push
cwtl
pop
test
pop
lock
mov
jno
sub
jecxz
push
imul
pusha
or
or
jo
mov
add
xchg
cmp
mov
paddsb
xor
xchg
pop
sbb
add
imul
mov
into
lea
pop
fmul
out
jo
add
subl
cmp
adc
int
cmc
pop
mov
push
add
test
xchg
out
fstpt
in
addr16
cmc
jl
cmpsl
std
aaa
or
inc
in
pop
out
stos
add
arpl
mov
xor
js
fiaddl
rcrl
imul
out
pop
es
jp
cmp
ja
lds
popf
fnstsw
and
out
pop
test
jns
mov
outsb
dec
mov
test
sbbl
out
lret
xor
dec
loopne
in
mov
cmp
in
cmp
popf
stos
dec
pop
dec
fdivl
pop
sti
int
push
sbb
pushf
iret
sbb
pusha
pushl
pop
rolb
insb
add
int3
adc
into
adc
or
cmpsl
or
mov
mov
sub
test
stos
mov
cmp
movsl
loope
lahf
in
subl
cmp
push
pop
sbb
and
test
xor
pop
sbb
cmp
jp
pop
or
push
jbe
and
fsubr
int
add
inc
jge
jb
hlt
pop
jae
mov
mov
pop
daa
cwtl
xchg
movsl
mov
or
cli
in
and
mov
sbb
stc
xor
pop
fcmovbe
adc
int3
into
loope
mov
int
repnz
push
jae
pop
mov
lcall
sbb
aas
mov
add
out
mov
mov
les
dec
pusha
pop
ss
or
lock
and
into
mov
inc
jmp
adc
jno
dec
enter
push
pop
rclb
sbb
mov
rcl
dec
push
scas
cmp
mov
jcxz
int3
testb
mov
mov
add
jbe
add
aaa
pop
dec
subb
pop
sub
scas
sbb
aas
adc
std
sbb
pop
movsb
subl
sbb
rorl
add
mov
pop
orl
int
xlat
lods
pop
pop
fxch
push
xor
sbb
dec
addps
mov
pop
mov
fsubrs
int
push
pop
nop
jecxz
jae
xor
movsl
adc
or
mov
test
loop
adcb
fstps
in
cmp
movsl
mov
lahf
bound
dec
pop
cmp
xchg
or
xor
pop
lea
inc
fisubrl
jne
jecxz
and
gs
outsl
js
jae
pop
xchg
xchg
cmc
and
add
mov
mov
ficoms
scas
sbb
jne
int
shrb
lret
out
mov
adcb
insl
sbb
sahf
pushf
xor
dec
push
mov
push
cmpsl
sub
mov
int3
leave
xlat
sub
and
push
loop
lahf
add
jnp
pop
pop
inc
dec
scas
mov
call
fisubl
jmp
je
pop
mov
xchg
xchg
outsb
sbb
pop
xchg
or
mov
pushf
sti
pop
mov
sbbb
inc
loop
js
es
pop
sub
mov
outsl
cltd
jmp
mov
enter
cmp
pop
fcomps
call
adc
cmpsb
in
push
adc
fldt
nop
xchg
pop
pop
dec
fs
mov
std
cmc
pop
push
jb
insl
dec
rcrb
add
ja
mov
and
icebp
push
jbe
hlt
sbb
mov
notl
pop
scas
mov
xchg
pop
int3
lcall
addr16
xchg
call
lret
pop
movsl
sbb
push
cmc
pop
mov
pop
and
mov
sbb
sahf
andb
rcrb
je
and
xchg
inc
std
push
lahf
arpl
lods
sbb
dec
pop
pop
test
add
cmc
jle
int
pop
lds
popf
lcall
shll
sbb
push
sub
pop
mov
mov
mov
ret
mov
pop
mov
repz
xor
leave
out
scas
enter
cwtl
inc
mov
jecxz
std
push
adc
jp
insl
enterw
add
sub
sahf
mov
sbb
pop
jmp
inc
ss
xchg
sbb
mov
outsl
rorb
cmp
ret
adc
inc
arpl
dec
jge
adc
insl
stc
cmpsb
dec
jne
pop
aam
fists
pop
pushf
jl
inc
and
popa
pop
js
loop
sub
mov
ret
fstps
scas
divps
mov
jo
sbb
fwait
cli
cltd
insl
pop
aam
leave
add
mov
inc
pop
les
push
push
pop
stos
sub
mov
add
int3
xchg
adc
jo
jae,pn
jecxz
mov
sbb
sbb
sub
add
adc
daa
xchg
pop
cmp
cmp
jns
out
inc
lea
scas
imul
mov
mov
arpl
repz
rcr
and
xchg
insl
push
pop
les
jmp
addr16
mov
add
sub
or
scas
cmp
pop
movsb
inc
or
jecxz
shl
mov
mov
mov
sbb
jg
pop
pop
outsl
outsb
fnstsw
xchg
pop
inc
aam
add
dec
hlt
jo
ja
out
xchg
sar
fistpl
xor
or
aas
inc
pop
leave
jle
or
fsubrl
std
xlat
pop
or
fwait
int3
daa
xor
fcompl
pop
andb
sarl
loopne
sub
jb
jge
repnz
and
xor
push
ja
stc
mov
push
insl
fwait
mov
neg
call
test
sbb
mov
arpl
sub
lcall
mov
mov
pop
pop
add
or
pop
cli
push
pop
int3
xlat
xor
hlt
pop
jbe
fsubrp
dec
inc
inc
sti
mov
pop
sub
jns
sbb
pop
jmp
je
cmc
sbb
sti
cmp
jge
mov
inc
xchg
lahf
bound
adc
fstpl
mov
push
jl
dec
stos
or
jl
out
cs
jecxz
pop
push
jp
mov
sbb
dec
in
pushf
les
repz
rcrl
push
and
lods
pop
mov
jecxz
sar
pop
jge
add
in
test
mov
xor
sti
xor
pop
in
mov
or
in
sbbb
xchg
idivb
inc
lcall
pop
aas
aam
jbe
pop
ret
pop
xor
xor
xor
popa
pop
std
int3
hlt
pusha
bound
pop
sub
sbb
sarb
pop
stos
int
push
lahf
sub
add
fiaddl
push
imul
push
sbb
sti
fildll
popf
sbb
stc
dec
push
mov
dec
out
aad
pop
xchg
mov
pop
adc
cmp
mov
cmp
or
mov
push
jo
mov
jne
dec
dec
mov
aad
movsb
jmp
lahf
mov
scas
adc
mov
or
mov
and
fbld
jg
pop
adc
or
icebp
int
adc
jb
jecxz
push
popa
scas
clc
int3
and
into
mov
lods
dec
dec
out
lock
cmp
xlat
mov
test
lret
out
add
pop
or
cmc
int
mov
mov
loope
mov
fildl
jo
call
out
rclb
pop
push
jns
cmpsl
or
dec
pop
xor
int
cmp
jno
xor
pop
adc
ja
scas
push
xor
scas
mov
dec
lea
sbb
push
mov
negl
fsubr
jo
push
mov
ja
sbb
rcrb
and
out
xchg
push
inc
cmp
inc
push
cmp
fwait
out
dec
test
dec
xchg
pop
and
clc
cld
add
pushf
pop
inc
pop
int3
movsl
daa
sub
pop
xor
xchg
jecxz
pop
leave
pop
subb
jge
push
aaa
push
dec
icebp
movl
pop
dec
add
or
pop
nop
movsl
mov
cmp
pop
cmp
cld
movsb
push
mov
xor
stos
cmp
mov
outsb
adc
test
mov
jmp
xchg
int
enter
lock
outsb
xlat
mov
sub
pop
push
icebp
insb
jno
dec
cld
in
pop
rcr
push
push
lods
bnd
mov
arpl
xchg
cmc
in
aas
int3
mov
lds
pop
add
push
push
pop
lock
cli
insb
mull
bound
mov
into
addr16
jg
mov
stc
sbb
lcall
mov
pop
popa
outsb
push
testl
int3
ds
fidivrs
xor
fdivrl
and
fwait
jne
cltd
xchg
xor
pop
pop
fdivrs
jp
dec
leave
call
sbb
dec
fimull
insb
mov
out
imul
pop
pop
lea
lock
loope
int
mov
push
aas
sbb
lret
xor
fiaddl
inc
add
or
sbb
imull
mov
arpl
rcrl
les
adc
dec
xchg
pop
imul
xchg
mov
sub
dec
lock
sub
frstor
or
das
mov
mov
push
dec
sbb
inc
fcompl
mov
repz
push
test
ss
push
ret
insl
int
or
in
and
cli
out
das
dec
or
int3
fwait
adc
inc
jnp
imul
mov
xchg
repz
sbbl
leave
pop
pop
movsb
pushw
les
push
pop
fcomip
xchg
jle
nop
out
sub
cmp
pop
stos
insb
push
cmp
mov
inc
pop
mov
pusha
sbbl
push
push
xchg
sbb
clc
popf
adc
or
or
cltd
lds
popa
mov
mov
js
mov
sbb
out
pop
enter
cmpsb
inc
inc
jnp
sub
jb
das
mov
fstp
sbb
inc
scas
divb
cmc
lret
fcompl
test
repnz
add
dec
lcall
in
adcb
pop
pop
mov
lret
je
or
insb
sbb
mov
fistpl
lahf
inc
sbb
mov
out
push
je
shl
lods
fisubrl
xchg
out
sub
sub
jb
push
mov
xor
stos
int
cmpl
mov
jb
aad
fs
adc
sbb
pop
and
mov
fcomps
dec
sahf
cmp
outsl
inc
cltd
pop
sbb
inc
push
jae
push
mov
or
stos
cmp
sahf
pop
adc
jmp
sub
cltd
lahf
add
or
jne
add
sti
pop
mov
xor
cltd
xchg
mov
xchg
jns
push
neg
imul
pop
push
push
pop
xor
pop
das
testl
pop
mov
test
pop
int
stc
mov
arpl
dec
push
lret
fldenv
int3
push
imul
aaa
xor
enter
dec
mov
mov
pop
sahf
movsb
jbe
test
and
mov
cmp
cmp
pop
jmp
xchg
leave
or
lret
push
mov
push
push
imulb
mov
cmpsl
pop
icebp
or
hlt
push
mov
loope
pop
rorl
sbb
aaa
pop
mov
ljmp
push
leave
dec
es
jbe
pop
dec
inc
movsb
xor
cltd
sub
pop
push
int
jecxz
shll
pop
mov
dec
xor
pop
adc
repz
sbb
pop
dec
adc
das
push
dec
enter
mov
xchg
pop
arpl
xchg
in
icebp
lret
jo
inc
in
mov
adc
je
dec
jae
sbb
int3
pop
xor
dec
mov
cmp
fisubrs
dec
ljmp
int
dec
inc
daa
in
jbe
sub
lret
ds
mov
jo
inc
lds
adc
sbb
push
fnstcw
mov
pop
outsl
test
jbe
xor
sub
inc
pop
push
mov
jo
pop
out
fwait
mov
jbe
dec
sub
ds
pop
je
rcll
push
lahf
lret
jecxz
nop
fmulp
inc
pop
sub
mov
xchg
shll
scas
sbb
pop
cmpb
pop
mov
iret
lea
pop
int
cmpsb
mov
add
pushf
lret
sbb
sub
cmpsl
mov
cmp
sbb
daa
movsl
mov
mov
into
leave
pop
or
aam
loope
or
sbb
jmp
and
in
sbb
les
mov
leave
and
push
and
lahf
loop
inc
mov
les
out
icebp
or
jne
cmp
daa
add
aaa
mov
adc
push
aas
fsub
sbb
pop
ljmp
push
pop
xchg
pop
pop
lcall
hlt
pop
jmp
adc
bound
or
xchg
pop
repnz
aas
or
cmp
stos
orb
pop
repz
pop
ret
inc
popf
aas
pop
cld
rorl
cltd
inc
cmp
xchg
cwtl
int
ljmp
les
mov
cmp
sub
dec
mov
add
js
shrl
adc
fistpll
inc
int3
dec
ja
ss
and
out
pop
jl
test
lahf
stos
sbb
push
sbb
ja
lods
fs
mov
sbb
mov
push
add
fldt
inc
outsl
fisttpl
or
fldt
dec
fbld
mov
add
insl
out
sbbb
sarb
shll
popf
pop
mov
pop
lahf
out
pop
xchg
mov
dec
inc
nop
int3
jo
cltd
pusha
bound
push
imul
test
sub
adc
cmp
in
mov
inc
jne
push
arpl
pop
loop
adc
pop
jecxz
cmpsl
out
push
rorb
int3
pop
jle
ficompl
imul
mov
cltd
dec
loopne
movb
fdivrl
movsb
pop
jp
mov
push
mov
mov
mov
call
movsb
xor
add
mov
cmp
sbb
int3
stos
jmp
add
pop
dec
scas
sub
mov
xchg
cltd
add
ficoms
jmp
pop
xor
mov
add
mov
pop
std
rcrb
cltd
mov
daa
in
mov
popl
pop
fildll
in
or
dec
jge
and
pop
call
sbb
shll
xor
lea
mov
xchg
popf
stos
pop
cmpsb
xor
cmp
adc
out
lea
sub
add
pop
add
sbb
fsubrl
lret
dec
dec
leave
addr16
movsb
int3
cmp
stos
or
mov
mov
data16
pop
push
inc
fwait
sub
in
jb
cmpl
and
jae
inc
inc
pop
test
or
push
pop
or
jbe
je
push
mov
sbb
push
fmuls
incl
insl
ret
dec
popf
mov
sbb
pop
inc
lods
shll
xchg
nop
bound
iret
int
mov
outsl
adc
and
aas
push
je
pop
pop
push
xchg
cmpsl
adc
dec
mov
sahf
xchg
scas
ja
fiadds
lret
negb
cmova
roll
es
jnp
enter
lods
xor
dec
inc
push
push
inc
add
rcrl
adc
xchg
jbe
fdivrs
adc
sbb
pop
daa
int3
mov
pop
jle
pop
sub
mov
addr16
mov
sbb
dec
sub
popa
pop
jmp
mov
push
pop
jno
outsl
dec
dec
cmp
adc
cld
in
push
call
and
pop
sub
sbb
pop
xchg
iret
xor
xchg
lret
push
loopne
pop
dec
sbb
fs
mov
adc
mov
int3
sbb
fildl
dec
sbbl
or
loopne
lahf
xor
dec
mov
jnp
call
dec
cmp
int3
inc
inc
mov
insl
sbb
jge
pop
je
fstpt
pop
xchg
int
xchg
insl
fdivl
pop
xchg
iret
fstp
mov
and
dec
adc
out
not
fstpl
inc
mov
fcomps
int3
xchg
std
jb
pop
imul
stc
lock
push
inc
test
sbb
jp
adc
pop
add
sub
dec
and
pop
lret
xor
int
and
pop
xor
push
mov
jle
pop
aas
adc
jne
dec
filds
mov
push
dec
test
pop
push
outsl
xchg
pop
inc
cmp
insl
pop
mov
and
inc
dec
xor
incl
aad
jno
mov
mov
scas
pop
clc
out
xor
adc
sbb
dec
repz
cld
pop
popl
jmp
pop
add
pushf
pop
and
mov
mov
push
or
jmp
cmp
xor
cmp
jmp
lahf
test
data16
repnz
aam
pop
out
dec
insb
fwait
inc
mov
xchg
lock
pop
mov
das
xlat
inc
jb
sbb
fwait
popf
mov
pop
je
lods
ja
dec
pop
pop
clc
insl
mov
ljmp
jp
sub
or
int3
sar
and
fiadds
and
movsb
pop
dec
add
nop
jle
push
in
push
data16
cmp
jo
mov
call
pop
sub
pop
cmc
inc
dec
and
leave
sbb
lods
mov
outsl
out
inc
aam
pop
jbe
cmp
dec
xor
mov
xchg
sub
rolb
jge
arpl
or
daa
mov
fisttpl
mov
dec
jne
lret
adc
mov
pop
xchg
fwait
jmp
and
mov
cmp
add
push
pop
cmp
jns
pop
mov
ljmp
incl
pop
add
mov
rep
int
cmp
mov
inc
sub
fdivrs
and
je
roll
sbb
mov
scas
mov
imul
addr16
and
cltd
mov
dec
popf
les
push
or
leave
pop
lret
sarl
cmpsl
pop
addb
stos
xchg
out
pop
xlat
lock
ret
cmp
mov
mov
int
dec
pop
shl
jbe
loop
mov
lea
int
call
out
or
insb
jecxz
call
pop
stc
icebp
mov
push
or
xor
lret
pop
xchg
ret
jns
dec
gs
pusha
add
mov
push
lds
jg
nop
xchg
repnz
or
pop
insl
jnp
and
outsb
mov
pop
ja
js
insb
mov
inc
cli
push
add
ds
add
pushl
or
imul
sbb
dec
fidivl
adc
add
int
inc
pop
mov
sbbl
or
jo
mov
repz
jle
shrb
imul
push
jno
jo
test
pop
mov
mov
fisttps
leave
pop
mov
mov
jno
dec
push
dec
dec
xchg
push
pop
lret
fsin
nop
cli
pop
in
xor
sbbb
pop
test
jge
xchg
pop
xchg
int
stos
inc
lahf
cmpsl
movsb
dec
fwait
cmp
into
dec
pop
cmp
aad
mov
xchg
xor
jo
pop
and
xorl
lahf
lahf
mov
fisttpll
adc
test
or
testl
cli
pop
aaa
sub
test
push
push
aas
fsubr
mov
mov
sub
xor
pop
push
pop
scas
sbb
pop
test
das
pop
inc
hlt
aad
fxch
lret
xchg
pop
adcl
aas
mov
in
cmc
mov
push
dec
add
ja
imul
movsl
decb
cwtl
inc
lds
or
rcrl
mov
shll
sbb
int3
fdivrl
les
push
mov
push
hlt
inc
and
shll
cwtl
sbb
mov
in
sub
cld
mull
jmp
mov
scas
cltd
lea
outsl
jbe
xchg
cmpsl
xchg
adc
call
jecxz
popl
lahf
lods
xor
add
sti
add
lret
sub
inc
push
inc
fisubl
jge
sti
pop
int3
dec
in
jnp
pop
mov
xchg
fnstsw
nop
int
xchg
jmp
negb
jb
add
lods
pop
jo
xor
and
push
jle
pop
jg
jbe
or
add
jno
enter
ficoml
pop
int
je
sub
cld
mov
out
pop
outsl
sbb
lcall
mov
pop
dec
pop
inc
pop
in
fimull
fiaddl
lret
dec
sbb
xchg
push
pop
mov
xchg
mov
mov
les
mov
popf
xor
fs
pop
int3
fiadds
sub
arpl
pop
int
or
pop
sahf
xor
pop
test
sarb
outsb
sbb
pop
lods
por
or
popf
dec
iret
mov
stc
ret
std
fld
mov
int
mov
repnz
xchg
jno
pop
sbb
testl
mov
pop
fnstenv
xchg
insl
pop
adc
pop
jns
xlat
je
fsubs
lods
lret
adc
and
mov
in
arpl
stos
xchg
pop
xchg
pop
jmp
adc
ror
push
mov
push
fimuls
push
pop
nop
ret
ds
pop
cmpsl
adc
outsb
or
insb
sbb
jmp
adc
cli
xlat
imul
jbe
ljmp
popf
stc
jl
repnz
mov
out
jecxz
dec
dec
pop
xchg
std
or
iret
push
sbb
mov
push
ficomps
pop
fistl
jecxz
mov
mov
mov
push
or
add
dec
cs
xchg
xor
lret
in
cli
mov
pop
andl
pop
das
mov
out
jns
mov
fwait
add
ret
cmpb
xor
mov
pop
std
xor
shl
cltd
push
mov
pop
pop
xor
pop
or
xchg
and
rorl
shl
mov
dec
xchg
fistpl
enter
push
lahf
out
add
push
mov
and
mov
push
pop
jecxz
jbe
das
ret
stc
in
pop
hlt
add
sbb
sub
cmc
mov
sbb
nop
shrl
out
daa
jnp
pusha
push
jecxz
pop
add
dec
rol
pop
xchg
or
mov
dec
popl
or
jae
mov
movsl
pop
xor
in
jo
mov
out
call
pop
cmp
cmp
cmp
je
pop
or
lahf
add
nop
int3
mov
data16
push
or
pop
push
push
repz
push
fimull
sbb
xchg
cmc
xor
cmp
xor
in
push
jecxz
rcrb
pop
int3
mov
push
int
push
out
sbb
jb
pusha
jmp
out
lret
test
push
das
int
inc
add
sbb
push
xor
xor
adc
dec
movsb
nop
inc
xchg
adc
popf
fcoms
aas
pop
ja
aam
stc
je
dec
pop
inc
xchg
out
mov
pop
js
pop
rcl
leave
mov
pop
ljmp
jge
in
push
mov
and
pop
lods
pop
or
mov
lcall
xor
mov
sub
adc
add
movsl
je
or
shlb
gs
sbb
mov
mov
sub
lds
int3
inc
jmp
lods
xchg
iret
push
mov
inc
in
ja
pop
das
mov
icebp
lcall
shrb
add
outsl
popa
test
fsub
fistps
sub
push
out
stos
dec
mov
int
inc
mov
movsb
adc
lcall
cmpsb
add
rcrb
sbb
lret
pushw
mov
push
pop
push
dec
adc
pop
jae
pop
insl
or
sub
in
jp
insb
les
push
lods
cmpb
sbb
addr16
mov
sbb
xchg
fstpl
pop
sbb
push
shlb
and
pop
mov
fucomi
mov
inc
inc
cmc
jmp
pop
pop
ja
dec
cmpsb
push
vaddsd
lcall
dec
fstpt
test
repz
xor
add
dec
push
daa
pop
xchg
add
or
popf
adc
bnd
push
xchg
pop
or
in
pop
push
imul
xor
mov
pop
push
shr
nop
sub
xorl
leave
push
mov
cltd
or
adc
xchg
hlt
ret
push
cmpsl
imul
dec
pop
sbbl
dec
stos
pop
cltd
or
outsb
mov
cmp
cwtl
mov
rclb
sbb
call
inc
push
aad
fxch
pop
mov
mov
sub
ror
mov
cmpsl
pop
push
idiv
sub
xchg
mov
pusha
orb
icebp
pop
je
adc
aaa
jl
cwtl
pop
jno
cmpsb
sbb
fdivr
pop
dec
ficompl
cs
mov
cmp
xchg
xor
add
add
in
lret
sbb
jno
sub
cmc
pop
sub
mov
inc
movsb
repz
popa
in
adc
notl
sbb
mov
in
pop
inc
jno
and
mov
popf
loopne
daa
int3
notw
and
in
and
mov
jge
movsb
mov
scas
repz
lock
cmp
xor
pop
sbb
int
cmp
dec
sub
jns
mov
or
jne
dec
mov
push
sbb
jbe
pop
dec
scas
sbb
popf
pop
jb
lea
lods
mov
test
mov
fucomp
mov
or
mov
int
xchg
pop
mov
pop
in
arpl
adc
pop
and
push
jae
sbb
or
pop
and
dec
pop
jo
stos
adc
lret
inc
insb
pop
jl
and
test
movsb
pop
push
xchg
ljmp
stos
jns
xor
fcoml
sbb
mov
pop
inc
jns
mov
cmp
fstp
insl
dec
int3
in
and
dec
nop
sbb
fs
inc
jp
pop
inc
pop
enter
xchg
xchg
jo
sub
pop
or
rcll
and
fbstp
cli
test
sbb
push
and
xchg
movsb
push
lahf
fistl
lods
push
negb
mov
lods
ror
add
sbb
jg
in
push
int
mov
nop
scas
fwait
pop
and
jnp
scas
xor
push
mov
inc
repz
aam
xchg
pop
sbb
dec
popf
mov
fwait
dec
pop
pop
mov
fiaddl
cmpsb
pop
and
call
stc
mov
jmp
adc
sbb
xchg
sti
pushf
xchg
or
cld
xchg
das
mov
loopne
sti
cmp
fistps
or
js
dec
and
or
aad
sbb
adc
mov
lods
adc
shll
pusha
sti
dec
sub
lods
pop
mov
hlt
adc
sbb
fiadds
loopne
pop
pop
aam
pop
inc
imull
mov
rcrb
inc
jle
jge
outsl
mov
jnp
add
jno
and
xor
insb
aam
pop
adc
lahf
jle
les
in
pop
or
mov
repz
lds
mov
mov
cli
cmp
pop
add
lahf
adc
cmp
mov
mov
popa
and
mov
push
lcall
pop
insb
ret
add
sbb
pop
subb
pop
stos
add
pop
ljmp
pop
pop
clc
adc
xchg
mov
lret
pop
sbb
inc
add
outsl
xor
xchg
sarl
jle
test
push
inc
jecxz
icebp
ja
je
dec
shr
mov
pop
js
int
ret
and
daa
pusha
aas
fucomi
pop
dec
mov
stc
popa
jb
xchg
push
sahf
fwait
pop
cmpsl
fldl
stos
je
pop
jae
lock
jl
mov
jecxz
pop
cmp
les
lcall
push
jbe
xor
and
rorl
jae
push
hlt
cli
pop
fistpll
int3
mov
jo
shrl
mov
inc
lods
add
dec
pop
frstor
int
mov
cmp
inc
push
imul
out
pop
xchg
inc
clc
xchg
pushf
push
pop
leave
sbb
negl
push
or
addr16
je
mov
dec
xchg
dec
idivl
lea
pop
sub
jecxz
decl
mov
inc
mov
pop
lahf
out
int3
mov
das
dec
pop
pop
pop
int
rcr
cli
mov
daa
sbb
pop
mov
je
sub
dec
pop
push
fsub
ret
pop
out
outsl
jno
roll
mov
aad
pop
je
add
xor
jl
stos
jge
sbb
jb
xchg
rcrb
call
pop
xchg
adc
stos
cmp
mov
mov
or
jnp
pop
cltd
fsubrl
inc
stc
scas
pop
cmp
inc
mov
mov
data16
movsb
push
and
insb
sbb
mov
lock
cmpsb
xchg
mov
ja
imul
sbb
shlb
pop
and
pop
aaa
int3
mov
stos
inc
fmull
js
mov
leave
ja
ljmp
es
adc
repz
fildll
mov
mov
aaa
cli
pusha
aad
push
out
outsl
call
jnp
inc
jge
into
lcall
add
pop
xor
jo
stos
dec
push
jae
lret
pop
adc
pminsw
fstpt
daa
add
pop
orb
xchg
ljmp
es
mov
fadd
or
pop
lds
repnz
adc
xchg
loope
imul
loop
pop
mov
imul
ljmp
xchg
negb
sub
scas
pop
fcoms
pop
aaa
mov
xlat
cltd
or
fs
mov
jnp
loope
pop
cli
sbb
mov
add
mulb
fistps
insl
pop
pop
mov
fs
xchg
push
and
mov
or
and
xchg
sbb
test
lods
push
imul
and
cmp
cltd
test
arpl
inc
movsb
int
lds
mov
sub
lahf
mov
xchg
aaa
push
bswap
add
cs
lret
movsl
icebp
js
mov
jb
or
pop
iret
jae
ret
lret
mov
sbb
out
cmp
dec
jge
insl
pop
pop
and
test
hlt
pop
mov
xchg
or
xor
outsl
js
xorl
nop
xor
addr16
stos
std
es
fistpl
icebp
cwtl
push
mov
mov
imul
mov
cld
out
pop
pop
adcb
sbb
aaa
xchg
pop
cmc
int3
or
psubd
sub
ljmp
fildl
leave
popa
jge
mov
rolb
rclb
outsl
call
jecxz
and
dec
mov
pop
add
jecxz
mov
pop
push
fs
push
mov
int3
lret
or
repnz
in
lods
pop
bound
push
jo
pop
loopne
inc
ljmp
fmull
out
push
shl
mov
inc
adc
sbb
pop
andl
int
push
fdivr
test
ficompl
mov
jg
or
inc
pop
loopne
and
es
jns
pop
add
pop
dec
push
pop
negb
scas
dec
jle
mov
adc
mov
mov
lret
aas
mov
mov
sub
mov
fdivrl
push
sub
cmp
ja
sbb
shrl
mov
sbb
pop
pop
insl
cltd
test
inc
inc
lahf
push
add
fstpt
push
lea
mov
arpl
pop
fs
pop
cmpsl
bound
popf
fnsave
jl
jo
pop
sub
jle
adc
push
int3
cmp
pop
xor
in
pop
int
lret
das
dec
xchg
mov
pop
mov
mov
cltd
cmp
xlat
pop
fwait
mov
data16
jmp
push
pop
pop
mov
into
and
jo
gs
imul
enter
or
lods
rcll
pop
jo
pop
mov
pop
fmul
cmc
xor
push
xor
inc
sbb
pop
push
pop
scas
mov
pop
inc
mov
inc
pop
andb
add
sub
mov
pop
xor
mov
lahf
sbbb
cltd
call
enter
mov
negl
jbe
pop
push
pop
sbb
rcrl
jnp
xor
mov
test
push
sub
dec
xor
lcall
push
scas
aam
js
pop
pop
orl
sbb
gs
push
ja
pop
call
scas
add
and
pop
push
clc
xor
pop
andl
fstl
mov
outsb
std
movsb
push
sub
jecxz
mov
lret
pop
movsl
das
sub
scas
pop
and
pop
lock
add
sbb
xchg
xor
pop
mov
jb
scas
xchg
int
pop
ljmp
jo
mov
push
pop
add
mov
ljmp
aam
dec
and
clc
cmp
pop
stos
xor
rcrl
testl
xor
pop
scas
lcall
sub
pop
fimull
stc
add
mov
push
mov
loope
pop
xor
and
push
add
xchg
pop
movsl
out
lahf
vpshuflw
push
pop
subl
and
push
neg
fwait
dec
pop
or
and
mov
jbe
loop
add
mov
flds
insb
push
les
sarl
shlb
ds
cmp
xor
pop
adc
xorb
or
xchg
sbb
aam
pop
mov
mov
ret
jo
dec
sub
rcr
arpl
stos
adc
xlat
jns
dec
aas
dec
stos
jge
add
pop
mov
jns
pushf
ret
orl
and
lret
into
jmp
pop
pop
dec
mov
mov
jno
fdivs
stos
pop
dec
sub
push
mov
shll
xor
in
stos
insb
in
pop
mov
mov
scas
shll
addr16
jno
jae
pop
repnz
adc
mov
inc
js
in
fdivs
sbb
lods
dec
jnp
pop
in
pop
xchg
frstor
int3
pushf
cmpsb
push
xchg
fsubr
pop
pop
call
mov
pusha
bound
dec
push
fsubrs
add
sbb
adc
mov
shll
pop
pop
mov
jecxz
cmp
and
clc
pop
lret
sub
sub
icebp
cmp
bound
clc
and
pop
mov
jns
aad
in
push
icebp
addr16
mov
cmc
mov
frstor
push
dec
push
cs
fcmove
adcl
xchg
pop
sbb
mov
lods
loopne
or
movsl
mov
mov
lcall
mov
fistpl
pop
xchg
xchg
in
adc
pop
orl
rcll
int
inc
enter
xor
pop
sub
jo
add
pop
pop
hlt
cwtl
xor
cmpsb
sub
pop
mov
pop
or
stos
int3
mov
loopne
pop
fstpl
pusha
test
fucomi
loop
cwtl
mov
pop
push
pop
test
loopne
xchg
in
jmp
push
dec
mov
arpl
sub
stc
jp
and
scas
fidivrl
add
leave
push
pop
pop
inc
int3
pop
jb
adc
repz
pop
int
or
adcb
push
mov
ficomps
scas
mov
inc
mov
aad
loope
add
pushf
sbb
mov
push
and
or
and
push
push
pop
mov
gs
pop
out
int
cmp
mov
inc
les
xchg
inc
xor
push
movsb
pop
imul
pop
gs
sbb
lahf
jne
mov
movsb
fadds
test
subl
xor
lahf
cli
aaa
inc
outsb
stos
lret
dec
add
addl
sahf
cmp
xchg
push
mov
in
dec
cmp
adc
xchg
inc
mov
mov
rdpmc
pop
push
sub
in
mov
add
sbb
icebp
adc
dec
pop
aas
mov
cmp
imul
dec
xchg
pop
cmp
int
out
ljmp
pop
and
movsb
arpl
mov
fisubl
shl
scas
pop
mov
lea
pop
pop
pop
test
mov
jb
int3
stc
mov
sbb
sbb
test
cmpsl
das
aaa
hlt
fldl
dec
pop
inc
cld
cli
dec
xchg
pop
shlb
jo
stos
jbe
cmpsl
push
aam
pop
pop
out
and
mov
cwtl
jecxz
loope
pop
jge
push
ljmp
jns
rorb
pushf
in
adc
shlb
mov
pop
lds
push
xor
pop
fnstcw
mov
push
lods
cmp
fstpt
jecxz
push
outsb
jecxz
les
daa
dec
repz
and
pop
orb
xchg
stos
inc
sbb
es
mov
mov
ds
insb
cld
dec
subb
leave
pop
lahf
popl
mov
mov
adc
pop
pop
mov
xchg
arpl
push
add
outsl
and
and
pop
pop
roll
push
and
lret
sub
adc
push
sahf
inc
push
pop
and
repnz
or
or
popf
insl
add
mov
int3
pop
sbb
pop
rcl
xchg
mov
pop
xchg
xor
pushf
sbb
leave
push
outsb
add
fstp
jbe
pop
outsl
data16
jg
or
pop
inc
icebp
or
mov
in
pop
ret
fs
test
loope
push
push
cmp
fs
sbb
xor
int
sub
outsb
fstpl
mov
mov
std
xchg
sbb
jmp
popf
cmp
mov
and
mov
loope
mov
jp
inc
dec
cmp
xchg
cwtl
sub
pop
aas
mov
or
pop
push
push
push
push
icebp
dec
push
cmpsl
pusha
arpl
mov
xor
fsubr
std
xchg
mov
lock
pop
out
xchg
mov
inc
jo
push
subb
icebp
inc
test
movsb
push
leave
arpl
ljmp
or
out
pop
cwtl
sbb
dec
pop
inc
inc
int3
and
sar
mov
cltd
or
pop
xor
mov
jecxz
push
js
addl
cli
mov
add
vcvtdq2ps
scas
stos
pop
sub
dec
daa
pop
sbb
xchg
stc
testb
dec
fcompl
pop
mov
push
dec
dec
pop
aas
movsl
or
frstor
mov
test
push
in
xchg
in
loope
xchg
loope
pop
clc
sbb
add
sbb
add
pop
xlat
mov
ficomps
pandn
dec
pop
adc
pop
in
test
dec
aam
mov
nop
mov
and
lods
sbb
leave
outsl
sbb
mov
pop
lcall
pop
stc
ljmp
inc
test
jns
pop
int
dec
aam
inc
xchg
mov
cmp
sbb
pop
pop
mov
and
lods
mov
in
shlb
adc
pop
andl
mov
jl
rcll
cli
rolb
pop
int
iret
in
dec
dec
std
in
jns
pop
inc
inc
cmp
test
pop
pop
fdivrl
scas
sub
mov
add
mov
mov
pop
stos
mov
jnp
lret
mov
xabort
mov
sbb
andb
mov
xlat
in
adc
out
pop
inc
or
mov
ret
mov
jne
jo
mov
push
xchg
adc
pop
sub
scas
mov
rol
jl
pop
mov
scas
cmp
mov
out
sbb
insl
shrl
mov
arpl
dec
jmp
cwtl
lcall
popf
imul
xchg
addr16
and
mov
sbb
pop
je
outsl
mov
cmpps
in
mov
fldt
lods
leave
adc
repz
xchg
lret
lret
xor
adc
jmp
pop
jne
clc
jb
in
scas
mov
daa
cltd
sbb
movsb
mov
sahf
pop
fdivr
fs
pop
cmp
imul
pop
xchg
cmpsb
sub
dec
test
pop
sbb
negl
int3
pop
add
mov
int
lret
enter
ss
loope
jge
xchg
jbe
xchg
pop
inc
jmp
lret
cltd
fnsave
pop
mov
pop
es
repz
adc
call
push
pop
pop
add
icebp
std
out
mov
gs
mov
rolb
pop
popf
in
add
sbb
cmp
pop
mov
and
pop
stos
xchg
js
push
cmpl
pushl
cltd
pop
ret
push
int
sub
xchg
cltd
sti
xchg
pop
lahf
in
mov
ret
jp
sti
ret
fxtract
cmp
fcompl
jmp
scas
ret
inc
pop
dec
sbb
mov
cld
pop
adc
fldenv
pop
push
inc
and
sub
mov
xchg
push
sbb
pop
insl
mov
xor
scas
jns
in
je
arpl
mov
or
leave
pop
sbb
add
mov
fsubs
mov
mov
sbb
push
pop
jp
cmpsb
add
mov
mov
nop
outsl
repnz
push
jno
popa
negl
cmp
adc
push
clc
cwtl
sbb
xor
pop
aaa
sbb
pop
ljmp
mov
or
mov
mov
inc
int
mov
sub
movsl
cmp
ret
sbb
stc
stc
lcall
xchg
inc
mov
dec
jb
repz
in
jmp
mov
cs
or
add
rol
xchg
mov
sub
bound
cmp
or
mov
stc
out
jb
add
imul
gs
repnz
push
dec
add
adc
incl
repz
loop
xchg
jge
pop
pop
nop
dec
int
xchg
xchg
inc
in
les
pop
mov
or
mov
fstpl
je
pop
and
fwait
cmpsl
mov
cwtl
jno
pop
pop
int
cmp
das
add
mov
outsb
pop
pop
rorb
es
push
sbb
xor
imul
dec
push
orb
loopne
pop
cltd
movb
bound
dec
adc
aam
jecxz
xchg
lds
lods
mov
into
mov
ss
sub
pop
xchg
lret
scas
xchg
ljmp
xchg
xchg
clc
mov
adc
push
int3
sub
stc
lcall
popa
cmp
inc
push
iret
sbbl
lods
inc
mov
daa
xor
jmp
inc
or
pushf
pop
leave
xchg
int
stos
aaa
popf
rcrb
sbbl
fwait
pcmpeqw
sub
inc
pop
dec
sti
add
xchg
pop
mov
loop
pop
roll
test
jbe
and
mov
clc
leave
inc
test
repz
mov
xchg
jecxz
push
int3
pusha
enter
or
push
sbb
dec
addr16
or
pop
jle
in
addps
push
dec
sub
push
and
adc
and
mov
mov
lds
mov
add
pop
or
or
mov
sbb
std
sub
rorb
sbb
rcll
mov
js
pop
mov
jecxz
cld
or
sti
push
cmp
icebp
scas
test
pusha
scas
fistpl
jnp
pop
scas
cmc
cli
cld
stc
cmp
mov
cmpsb
jb
push
sbb
inc
add
pop
mov
sub
sbb
insl
adc
add
jl
lea
shll
sub
pop
frstpm(287
inc
pmuludq
and
pop
roll
jecxz
jb
mov
and
pop
out
call
jo
pop
xlat
sub
and
mov
fildl
fcomip
out
sbbl
and
testl
test
xchg
pop
int3
data16
or
sbb
mov
fisttpll
push
lret
and
mov
pop
inc
mov
dec
cwtl
out
scas
or
jae
xchg
and
dec
lock
mov
divl
mov
std
push
push
pop
xchg
adc
pop
pop
mov
cltd
jl
mov
sbb
add
jb
push
xor
sbb
jge
xchg
bound
cld
mov
pop
inc
and
lahf
int3
dec
rcpps
mov
mov
cmc
add
mov
insl
pop
jb
mov
int3
scas
xchg
gs
jmp
jns
pushf
dec
out
loop
sbb
fadds
inc
sub
lods
mov
jmp
pop
mov
ja
scas
and
int3
and
leave
aas
or
cmp
pop
pop
call
sbb
pop
lods
in
mov
mov
xchg
jecxz
in
pop
imul
test
mov
jge
push
loope
jl
push
call
or
int3
sub
pop
scas
andl
fs
xchg
cli
stos
adc
ss
dec
jl
jo
pop
pop
pop
pop
adc
stos
daa
sbb
in
jno
mov
int3
pop
lcall
adc
lods
bound
movsl
mov
imul
lahf
pop
add
push
fs
mov
adc
clc
pop
int
push
test
sub
rcrl
dec
jg
or
scas
test
ret
dec
add
fidivrl
inc
mov
jnp
mov
and
orl
push
test
outsb
fistpl
pop
pop
insl
fbstp
jns
es
ljmp
jno
pop
mov
push
ret
inc
pop
xchg
rcll
std
shlb
fsubs
pop
repz
cmp
insl
pop
cmp
cltd
imul
pop
gs
xchg
test
or
scas
data16
cmp
xchg
popf
pop
push
jbe
pop
test
sbbl
or
xchg
scas
jle
out
lcall
lret
jbe
xor
into
sub
pop
das
cmp
test
pop
jb
add
xor
cmp
xchg
or
dec
sub
mov
push
inc
jecxz
loop
pop
push
adc
icebp
cmp
push
in
sbb
mov
push
imul
stos
dec
jg
das
stos
pop
push
push
loop
pop
jo
pop
jbe
lods
pop
scas
icebp
dec
cmp
and
or
jb
push
fidivs
ret
lahf
data16
jecxz
pop
cmp
cli
xchg
shrb
pop
arpl
inc
mov
inc
adc
dec
cmp
xchg
call
cld
and
sbbb
cmpsb
stc
jo
test
push
or
mov
pop
scas
aas
pop
js
xchg
inc
cmp
int
mov
clc
push
xor
and
das
js
pop
dec
inc
pop
gs
cmc
pop
cli
pop
testb
push
fcoms
movsl
mov
and
mov
sub
and
jle,pn
cmp
dec
and
pop
outsl
in
movsb
cmp
or
pop
out
inc
jno
mov
mov
cs
int
sahf
gs
fcompl
and
pop
xchg
or
adc
ret
gs
mov
sub
sbb
push
aad
pop
jle
int
xor
add
popf
mov
movsl
int3
pop
inc
push
test
lock
cmpsb
pop
jge
cwtl
out
mov
xchg
cmp
mov
pop
out
popa
pop
xchg
lret
int
das
adcb
cltd
mov
push
ret
jbe
pusha
sbb
cmp
clc
sub
pop
psubq
inc
push
xchg
push
fidivl
xchg
fstl
mov
int3
mov
pop
adc
lods
pop
xor
sub
sbb
inc
adc
vmread
mov
fbld
cmp
fnsave
rorl
xchg
push
pop
dec
jo
fdivrl
cmpl
ja
xchg
hlt
pop
push
js
inc
pop
and
dec
pusha
pop
test
les
pop
cmp
ret
dec
mov
loop
inc
int
hlt
push
adc
push
push
cmc
and
cmp
iret
add
stos
pop
test
mov
pop
movsl
inc
movsb
jbe
loopne
lcall
sbbb
xchg
pop
mov
ss
jb
lahf
gs
fnclex
pop
xor
in
mov
or
jns
mov
push
sti
jbe
add
sbb
lds
xchg
jo
nop
or
int
mov
shlb
pop
stc
insb
xor
mov
fnstenv
lds
sahf
out
push
or
movsb
adc
jmp
pop
dec
mov
int3
lret
mov
pop
std
jb
or
clc
sub
inc
out
pop
adc
cmp
pop
cld
test
sub
ds
fdivs
pop
pop
mov
gs
jge
adc
out
shll
mov
mov
push
ror
or
pop
push
mov
gs
mov
fdivs
fisttps
mov
das
aas
lcall
enter
pop
shll
cmpsb
add
xchg
pop
leave
pop
mov
adc
enter
or
stos
pop
mov
insl
sbb
fidivrl
pop
push
push
inc
pop
add
fiadds
jnp
adc
cmp
dec
ljmp
jg
mov
lock
fsubr
add
cmpb
push
dec
dec
cmc
pop
data16
mov
jnp
add
popa
sbbl
jne
adc
mov
loope
dec
adc
in
addl
and
mov
sub
dec
add
jg
mov
in
sub
leave
xor
mov
jecxz
push
movsb
inc
jb
mov
mov
mov
mov
test
sub
push
sbb
mov
cs
jecxz
xchg
data16
dec
mov
mov
cmp
stos
dec
icebp
int3
ss
js
pop
mov
fcomps
das
pop
test
jl
cmp
ljmp
out
pop
jecxz
in
dec
cwtl
cmc
addl
dec
add
and
pop
fwait
pusha
out
dec
cmp
mov
inc
mov
fidivrl
sbb
stc
ss
das
rclb
push
mov
push
dec
pop
jno
adc
into
add
sbb
mov
sub
sbb
fstpl
int
mov
or
jl
sbb
cs
sub
add
pop
decb
mov
int
pop
push
sarl
or
pop
cmp
and
rcrl
mov
xor
flds
pop
int
inc
mov
cmp
lahf
jmp
mov
xor
into
test
and
pop
fbld
cwtl
sub
dec
ljmp
pop
add
push
arpl
sbb
aam
ds
cwtl
cmp
lcall
mov
out
sub
sbb
push
cmp
fisttpl
inc
pop
push
xchg
add
cld
pop
jbe
pop
jecxz
inc
jne
pop
and
sub
or
mov
sbb
inc
pop
add
outsb
add
ljmp
mov
push
jae
cmp
mov
test
ret
xor
aam
in
imul
fists
movsl
gs
dec
add
repnz
cmp
jnp
mov
cltd
outsb
lahf
xchg
call
lock
inc
xor
fdivl
pop
fsqrt
pop
shrl
pop
fs
fwait
mov
mov
cmp
imul
pop
popa
test
scas
mov
sti
cld
xchg
rcll
cmc
jp
repz
mov
cmp
pop
mov
cmpsl
in
inc
mov
sub
outsl
popl
mov
dec
popa
je
xchg
in
ficomps
mov
jmp
pop
xchg
js
sbb
xor
mov
lea
ficoml
add
push
iret
xchg
sti
scas
inc
mov
in
fwait
or
dec
push
repz
dec
pop
loopne
mov
jp
sahf
pop
scas
adc
ret
data16
mov
popf
mov
stc
aad
adc
sbb
or
fidivl
out
ds
lock
and
imul
mov
xchg
fiaddl
mov
scas
inc
std
jl
push
hlt
mov
and
dec
fbstp
dec
mov
test
insl
cli
cld
clc
cwtl
pop
imul
lahf
lea
cmp
out
mov
outsb
sbb
xor
rcrb
int3
cmp
test
mov
sbb
pop
mov
inc
stc
add
pop
sbb
cli
inc
mov
jmp
fst
and
fstps
rorb
out
push
sub
mov
push
imul
add
pop
ror
nop
mov
or
leavew
pop
pop
jno
cmp
pop
pop
hlt
bound
xchg
cld
xor
sbb
test
push
iret
cwtl
pop
das
jecxz
loopne
int
in
mov
mov
ja
mov
pushf
cltd
out
imul
or
test
ret
push
lock
std
mov
pop
sbbb
and
mov
in
xchg
pop
xchg
ds
jno
sbb
outsl
stos
daa
push
push
or
jecxz
ljmp
xchg
ja
insb
pop
imul
cli
int3
jns
xor
and
je
pusha
xchg
mov
xor
outsb
jo
pop
lret
pop
movsl
sbb
or
mov
into
inc
cltd
imul
pop
adc
sub
rcrb
sub
pop
sbb
or
push
adcb
movsl
fstps
std
int3
rcl
loope
pop
lahf
and
xchg
andb
pusha
fsubrs
push
jg
scas
adc
loopne
sbb
cmp
sbb
pop
pushf
xor
xchg
mov
and
jg
dec
pop
xor
cld
sbb
fidivl
dec
dec
pop
jo
mov
dec
or
sbb
cmp
rcll
int3
outsb
out
pop
imul
out
mov
lret
pop
xchg
adc
xchg
vmovntps
mov
fcmovnbe
loopne
sbb
js
jecxz
or
sti
push
shlb
mov
dec
cmp
int3
mov
pop
inc
int
lea
scas
insl
pop
aad
sbb
mov
inc
repz
jno
loop
pop
jbe
or
imul
inc
mov
call
mov
ret
sbb
loopne
lcall
ds
add
sbb
mov
xor
mov
insb
cwtl
jbe
aad
inc
incl
mov
mov
xor
push
fstpt
pop
mov
outsb
ret
movsb
pop
fdivs
fs
pop
jg
stos
push
dec
mov
stos
sbb
push
cltd
sahf
popl
pop
xor
mov
jb
ss
xchg
sbb
test
mov
pop
pop
loope
sub
dec
jmp
mov
mulb
pop
cmpsl
xchg
lret
or
xchg
pop
adc
adc
lret
xchg
mov
sub
add
sbb
pop
call
pop
jno
mov
fwait
mov
dec
lahf
fisttpl
leave
cmpsl
mov
pop
mov
adc
xchg
mov
sub
in
pop
add
test
mov
int
mov
push
aad
mov
bnd
add
pop
clc
ja
movsl
pop
ss
outsb
jb
out
enter
dec
shl
sub
mov
lds
mov
mov
inc
bound
pop
mov
nop
syscall
int
mov
cltd
aad
and
and
loopne
jp
dec
out
dec
pop
cmp
sbb
xor
mov
sbb
int
and
sbb
mov
bnd
test
inc
push
push
xor
pop
int3
jne
movsb
enter
push
aad
clc
mov
lahf
push
mov
sub
adc
jno
ds
cmp
cltd
popa
pop
jns
sub
std
loope
mov
mov
mov
ret
loopne
jg
nop
incb
inc
add
and
pop
movl
mov
ds
dec
lahf
or
scas
fs
cwtl
jns
aaa
mov
add
fnsave
cmpsb
xchg
jmp
push
lcall
xor
ja
sbb
jl
xchg
pop
mov
sahf
dec
scas
lock
jg
popa
cmp
ds
pop
fbstp
pop
outsl
adc
mov
push
adc
push
lcall
lahf
outsb
jno
pop
pop
jbe
stos
lock
fists
and
das
jl
xchg
dec
cmpsl
shlb
sbb
clc
adc
mov
and
fists
xor
fsubrs
imul
mov
sub
popf
dec
pop
pop
pop
int
or
xchg
inc
inc
scas
push
jecxz
icebp
negb
xchg
push
and
mov
lods
sbb
pop
and
and
push
adc
aas
pop
es
xor
jp
and
sti
adc
mov
mov
mov
sbb
mov
jo
cmc
js
fistps
shrl
mov
repnz
imul
jb
cli
mov
xchg
sbb
push
pop
push
cmp
dec
pop
inc
or
in
push
repz
test
rcrl
daa
clc
jb
mov
les
ret
xchg
imul
push
fisubrl
pop
or
sub
pop
je
fdivs
into
mov
stos
int
ss
xor
pop
in
push
mov
fcoms
mov
incl
sub
int
push
lahf
subl
and
nop
or
jle
adc
lahf
inc
inc
int
push
iret
out
mov
xchg
pop
loop
mov
cs
ficompl
dec
stc
jne
mov
addr16
sbb
pop
int3
jp
ret
xor
cmp
pop
dec
xor
imul
dec
stc
jge
mov
lahf
push
mov
adc
add
fistpll
mov
lods
aad
pop
pop
cmp
xchg
out
mov
loop
movsb
sub
pop
sbb
mov
xor
pop
and
add
cmp
popf
push
or
push
xchg
pop
out
dec
adc
pop
push
or
cwtl
outsl
mov
cmp
arpl
inc
int
sub
mov
jp
dec
mov
pop
pop
mov
add
xlat
sbb
cmp
dec
ret
pop
and
stc
insl
pop
jge
int
push
scas
outsb
js
lock
sub
cltd
mov
gs
and
xlat
push
stc
jo
sub
in
pop
mov
mov
sub
dec
push
cltd
cltd
mov
lahf
xor
pop
daa
dec
and
or
mov
inc
imulb
fcmove
nop
cmpsb
fcmovu
pop
adc
pop
sub
and
negb
stos
jbe
dec
push
fsubs
adc
incb
insl
lret
sub
dec
cld
push
sbb
mov
mov
in
lcall
loopne
pcmpeqb
or
test
sub
test
cmpsl
jnp
mov
nop
pop
jecxz
fldt
and
pop
sub
out
pop
subl
sub
sbb
mov
jp
xor
push
jnp
int
xchg
push
jmp
xlat
les
add
xor
pop
lea
test
push
pop
shrb
jbe
sti
fistpll
pop
mov
or
sub
int
inc
iret
fs
pop
mov
cmc
pop
jmp
xchg
inc
fldcw
cmp
sbb
xor
fst
pop
mov
mov
mov
dec
je
mov
scas
mov
mov
xor
pop
and
jmp
and
lahf
sbb
scas
jmp
ret
sub
loope
and
aaa
mov
jns
sbb
jns
pop
orb
aam
sub
mov
mov
add
sub
idivb
mov
mov
pop
cmp
movsl
test
pop
shrl
xchg
int3
idivb
xchg
pop
dec
sub
pop
jb
and
sbb
or
pop
jl
sbb
push
insb
pop
jp
pop
push
lods
mov
pop
ret
movsl
xchg
pop
add
push
pop
adc
imul
mov
cltd
lcall
sub
fs
cmp
mov
xchg
js
mov
mov
pop
dec
jns
sbb
pop
int
rep
mov
orb
xchg
add
pop
sub
mov
sub
lds
lahf
push
jecxz
sub
xor
and
sbb
xor
hlt
pop
push
sbbb
cli
xchg
jbe
outsl
mov
sub
cmp
jl
stc
sbb
mov
cmp
aas
pop
fsubrl
iret
aam
lods
hlt
push
leave
jbe
mov
inc
loope
dec
testb
mov
mov
cli
shrd
fcoms
mov
xor
in
sbb
sahf
adc
ror
and
pop
sub
out
mov
les
outsb
add
int
in
push
mov
jo
pop
sahf
pop
mov
in
test
pop
test
fst
add
or
or
push
or
push
push
xchg
lea
and
inc
aad
ror
jmp
dec
js
mov
pop
pop
cmpsl
push
stos
and
movsl
pop
shrl
push
add
into
nop
cmc
dec
inc
divl
dec
mov
and
pop
test
aaa
xchg
pop
jne
or
ss
pop
mov
aas
into
inc
mulb
lcall
pop
int3
fadds
int
jl
mov
test
scas
xchg
clc
icebp
popa
aad
test
ja
pop
data16
sahf
mov
int3
sbb
pop
ss
popf
pop
stos
sub
push
mov
jle
out
mov
xchg
sub
ss
cmp
out
push
jl
sbb
dec
sahf
mov
daa
js
fimull
sti
xchg
xor
fcompl
fcmovnbe
jp
jo
jmp
pop
add
mov
fmuls
repnz
repnz
mov
test
mov
jecxz
xchg
mov
enter
pop
dec
fimull
mov
dec
pop
dec
fistpl
inc
or
fwait
mov
pop
int
lahf
dec
mov
jl
out
insb
sub
rcll
fxch
mov
mov
das
dec
or
and
push
adc
push
dec
pop
inc
push
movsl
mov
sbb
bound
dec
fcomps
out
lahf
stos
mov
adc
fstpl
icebp
pop
adc
out
je
test
fs
stos
int
inc
lods
mov
mov
dec
pop
lock
dec
ds
cmp
loop
insb
outsl
lret
scas
andl
sbb
orl
cltd
push
add
addps
and
pop
sbb
pop
lods
jl
cmp
xchg
stc
adc
cmp
ds
mov
cld
aam
adc
inc
sbb
xchg
pop
addr16
repz
xchg
ds
mov
jnp
pop
sbbl
in
nop
stc
cmc
rcll
xlat
or
int
les
dec
mov
dec
cwtl
inc
pop
sahf
dec
push
pushf
and
sbb
mov
outsb
cmp
mov
aas
jp
in
stc
sbb
and
adc
mov
clc
subb
sahf
adc
jno
pop
xchg
ss
mov
fidivs
insb
dec
adc
mov
popf
fimull
aad
mov
lock
sub
pop
inc
and
hlt
and
mov
sbb
fadds
fs
ret
out
jns
bound
adc
mov
mov
jmp
jge
repnz
mov
and
dec
jg
inc
mov
or
add
inc
test
ficoml
push
pop
xor
int
mov
inc
scas
or
push
rolb
push
repz
mov
push
jg
inc
sbb
mov
stos
outsb
test
lcall
xchg
call
add
loope
xor
lret
pop
jmp
pop
dec
mov
cmp
ljmp
mov
mov
pop
lahf
add
adc
jge
xchg
dec
cmp
sub
push
pop
xor
stos
xor
dec
cmp
arpl
mov
mov
out
pop
shrl
cs
fistl
cmpsb
mov
call
int
push
paddsw
lret
bound
sbb
mov
lods
in
daa
cwtl
jbe
and
push
hlt
mov
js
sbb
pop
out
insb
lahf
mov
not
xchg
adc
insl
int3
jnp
sub
sti
jl
or
lcall
test
imul
mov
mov
jnp
inc
jecxz
push
fwait
loopne
clc
jnp
test
sub
fisttpll
push
pop
aaa
jmp
add
cli
jg
call
daa
adc
sbb
jae
dec
or
push
sbb
cld
enter
lcall
iret
xor
ficomps
mov
or
cmp
dec
pop
scas
jnp
pop
jbe
js
sub
lea
pop
aad
test
push
push
push
cltd
or
pop
enter
aas
mov
out
int
call
mov
and
cmp
lock
into
pop
push
pop
mov
sbb
mov
aaa
adcl
mov
adc
pop
movsl
sbbl
pop
lock
outsb
iret
push
pop
inc
mov
push
sub
je
in
movsb
ja
jo
mov
outsl
xor
push
sbb
mov
and
sti
pop
pop
pop
lcall
jge
leave
jns
jle
mov
loope
push
orb
pop
mov
sbb
into
lahf
xchg
push
mov
dec
push
inc
sti
roll
addr16
inc
add
loop
enter
push
dec
push
mov
dec
pop
shll
repz
insl
push
fmul
adcb
lahf
push
cmc
xchg
cmp
inc
repnz
adc
clc
mov
sbbl
xchg
scas
sbbb
or
sbb
int
dec
and
pusha
mov
cmpsl
sar
ss
mov
pusha
pop
pop
lods
adcb
fidivrs
or
jmp
push
mov
adc
inc
jg
sbbl
lret
cmp
and
cwtl
fcomip
clc
aam
jb
push
sbb
dec
mov
inc
add
ficoms
pop
pop
test
outsb
enter
in
mov
divl
pusha
pusha
lds
mov
sub
test
mov
fstpl
faddp
cmp
pop
adc
and
sub
pop
jmp
push
mov
pop
lcall
pop
in
mov
jmp
sub
jl
or
popf
stc
lods
pop
mov
adc
int
pop
iret
jle
js
dec
inc
add
fimuls
lods
pop
aaa
mov
ror
dec
mov
push
push
pop
insl
xor
lret
add
push
pmulhuw
faddl
push
jo
pop
dec
cmpsl
cld
pop
int
jno
pop
ret
and
xor
js
sub
lods
sub
or
ficoml
fdivl
lds
into
jb
sub
fcomps
popa
sub
mov
lock
pop
mov
adc
sbb
cltd
mov
mov
sbb
pop
xchg
lods
je
push
lret
push
stos
lcall
inc
stos
mov
fdivrl
fsubrs
or
jns
dec
imul
aad
repnz
mov
pop
xor
mov
lock
xchg
inc
imul
cmp
in
insl
pop
repz
out
stos
fwait
xor
add
test
adc
fdivl
mov
outsl
adc
cmpsb
insl
xchg
adc
inc
cli
xor
pop
sahf
stos
fimuls
movsb
stos
inc
push
xor
negb
fdivl
sbbl
hlt
jno
scas
xor
dec
aad
or
add
xchg
std
pop
lock
cmp
les
sbb
cmp
xlat
add
and
aaa
pop
inc
mov
adc
cmp
fmull
pop
mov
out
imul
icebp
or
outsl
inc
or
imul
repz
lds
xchg
jae
lahf
pushf
xor
xorb
je
dec
sbb
mov
mov
les
fiaddl
xchg
xchg
cwtl
lcall
dec
inc
pop
push
jbe
out
pop
or
sbb
scas
subl
push
ficompl
mov
mov
scas
fisubl
dec
icebp
pop
jecxz
lret
xchg
pop
std
pop
gs
pop
mov
jl
xchg
jp
fcompl
sub
inc
std
cmpsl
push
scas
shl
cmp
loope
js
insl
cli
or
imul
cmpsl
shll
adc
lcall
jne
in
pop
mov
scas
jo
imul
ljmp
sbb
outsl
orl
lods
jne
jmp
pop
jbe
mov
sub
lods
lret
push
pop
cwtl
mov
icebp
pop
push
ds
dec
pop
ror
push
pop
pop
mov
pop
lea
lock
out
jbe
adc
scas
sub
inc
mov
int
mov
xchg
imul
dec
or
lret
sti
leave
or
stos
jg
push
jp
pop
pop
aas
pop
sbb
imul
das
sbb
pushf
sub
jo
cli
jb
in
lods
pop
mov
andb
pop
stos
cmpsl
mov
lret
popf
mov
fucomip
mov
stos
adc
sbb
pop
sub
inc
fldcw
imul
mov
jl
sti
xchg
inc
xchg
cmc
fsubs
pop
adc
in
scas
sbb
enter
cmp
adc
mov
mov
outsl
movsb
out
pop
xor
ficomps
push
rcrb
scas
movsb
ret
dec
add
mov
mov
pop
cmp
cmpsb
push
pop
sbb
and
movsb
mov
add
pop
jp
dec
je
cli
mull
icebp
inc
jb
mov
rclb
out
jo
pop
mov
sub
pop
scas
fimuls
aad
add
repnz
dec
enter
mov
clc
sar
out
into
lcall
xchg
nop
pop
mov
test
add
cmp
daa
cs
add
hlt
sub
repz
in
push
imul
xor
mov
fs
push
mov
loopne
hlt
sbb
mov
or
sub
out
sbb
fcmovnb
mov
fs
pop
push
add
mov
loopne
lahf
jle
xchg
loope
nop
arpl
fcomps
movsl
mov
dec
stos
stc
pop
cltd
sbbb
sbb
test
mov
sti
or
mov
stc
xor
ja
addl
int
jae
pop
pop
xchg
jo
pop
or
and
fcomip
enter
sbb
std
stc
pop
cmpsl
pop
es
push
xlat
int3
pop
mov
sub
xchg
into
pop
rolb
xchg
jecxz
cmpsl
lahf
in
movsb
sub
rep
mov
inc
pushf
clc
ja
mov
pop
sbb
push
pop
imul
andl
inc
add
pop
mov
mov
mov
xchg
out
jo
lods
adc
sarl
mov
pusha
adc
mov
fisttpl
jne
mov
scas
aad
stos
addb
pop
movsl
inc
xchg
mov
pop
mov
sub
mov
stos
lea
mov
in
ret
int
fwait
scas
ret
fldl
push
mov
mov
xchg
cltd
or
enter
not
call
or
cmp
pop
cmpsl
add
insl
mov
lds
pop
fdivs
xchg
pop
sub
repnz
cmp
xchg
lods
lahf
lea
test
pop
popa
sub
push
fdivs
sub
inc
pop
push
in
dec
pop
push
pop
jo
cmp
rorl
ljmp
fwait
pop
xlat
xor
leave
int3
lods
cmp
adc
in
and
inc
cmp
rcll
add
mov
aad
je
mov
call
pop
bound
xchg
movsb
add
pop
jbe
dec
sbb
push
xchg
test
scas
out
or
call
pop
imul
in
imul
ja
add
lods
xchg
cmpsb
arpl
sbb
in
mov
xor
lds
xchg
pop
outsl
das
mov
adcb
push
push
into
movsl
inc
inc
dec
cltd
in
sbb
and
rcrl
adc
dec
dec
pop
test
dec
pushf
pop
mov
pop
lock
and
pop
pop
mov
dec
xlat
cmp
mov
cld
inc
push
jge
fcomps
mov
or
pop
call
int3
leave
ja
gs
jne
mov
add
fcomps
push
enter
rorb
pop
pop
push
adc
pop
stc
dec
nop
and
mov
inc
inc
sbb
cmpsb
stos
sub
and
popa
add
pop
inc
add
sbb
stos
mov
pop
push
in
inc
mov
inc
jb
rcrl
lret
jge
pop
pop
push
sub
dec
mov
cld
nop
or
arpl
pushf
xor
ss
sub
pop
rcrl
pop
or
push
call
push
cmp
mov
mov
lds
test
scas
dec
sub
aas
fwait
mov
int3
mov
insl
push
imul
pop
repz
dec
jnp
pop
in
push
sar
lock
lcall
mov
and
push
xchg
mov
clc
lret
dec
das
jo
push
pop
shll
and
add
jno
pop
icebp
jo
mov
jb
lods
pop
and
mov
call
dec
pop
sub
sbb
adc
sti
scas
jae
mov
cmp
insl
out
out
push
jns
pop
sbb
lret
aas
xchg
dec
lcall
xchg
insl
mov
fstpl
out
pop
iret
xchg
mov
mov
pop
push
sbbb
rcr
adc
neg
out
lret
xor
int
loopne
pop
enter
mov
data16
push
dec
jo
mov
das
ror
dec
cwtl
ret
shrl
pop
pop
mov
mov
cmc
push
dec
lock
jns
pop
adc
shrl
dec
mov
or
and
inc
sub
push
mov
jne
jae
incl
lcall
repz
and
pop
rcrb
jb
arpl
sbb
lea
or
pop
push
loope
mov
jbe
mov
and
dec
xchg
nop
cmc
pop
lods
subb
int
leave
mov
stos
loop
outsl
pop
pop
cmp
jge
xchg
xchg
lcall
cltd
pop
dec
sub
mov
inc
in
xor
pop
sahf
dec
cmp
sub
shrb
xor
stc
pop
pop
mov
je
int3
pop
jbe
in
xor
roll
sub
js
cmp
pop
mov
add
pop
cmpsb
dec
push
jmp
pop
mov
jecxz
sbb
aaa
into
repnz
mov
cmp
lods
fldt
sbb
jb
or
cmp
loope
sbb
jle
pop
jecxz
mov
in
out
aam
repz
inc
dec
cwtl
push
cmpsl
jnp
adc
loop
stos
in
int3
dec
xor
dec
pop
xlat
push
dec
or
ljmp
outsb
ret
adc
fimull
popf
aas
jmp
pop
and
jmp
cmp
stos
or
iret
sub
or
js
fidivl
pop
movl
jb
adc
dec
dec
aas
aad
sbb
pop
inc
sbb
mov
sbb
clc
pop
cmp
loopne
mov
push
jp
xor
push
ds
push
orl
pop
int3
sub
int
pop
arpl
scas
mov
das
lret
mov
negb
ret
test
clc
sub
cmp
pop
add
sbb
adc
xchg
ret
sbb
ret
push
pop
jae,pn
sub
add
mov
and
push
pop
mov
and
fcmovb
insb
std
pop
inc
adc
jb
popa
test
shl
addr16
mov
pop
imul
mov
sbb
inc
sbb
sbb
sbb
xchg
xlat
jnp
cmp
test
mov
popf
add
mov
and
add
pushl
xchg
sub
fsubrs
inc
pop
and
dec
push
push
mov
mov
out
adc
into
fisttpll
mov
pop
adc
andb
das
fs
pop
pop
mov
and
pop
cmc
adc
mov
sub
jnp
out
jbe
pop
sbb
push
adc
shll
negb
inc
fcmovu
jb
pop
push
daa
cmpsb
das
sbb
int3
cltd
and
sub
addr16
lock
loopne
rolb
rolb
enter
mov
jno
ss
out
pop
lret
popa
les
jbe
lods
mov
pop
sub
leave
pop
stos
lcall
and
pusha
sub
push
mov
sbb
pop
das
inc
out
aaa
inc
int
aam
nop
jnp
fmull
dec
push
sbb
sbb
lcall
sub
fistpll
insb
cmp
or
aam
leave
pop
iret
fs
fmulp
sbb
outsl
cmp
std
adc
fdivs
mov
pushf
or
addl
cmpsb
pop
push
add
test
mov
call
pop
call
pop
pop
xchg
or
jge
lock
pop
insb
pop
xchg
mov
fnop
imul
inc
movsb
decl
pop
jecxz
sti
lea
pusha
lds
lret
pop
in
pop
fsubrs
sub
test
clc
bound
lret
pop
jecxz
fnsave
leave
mov
int
dec
loopne
mov
ja
stos
inc
xor
pop
out
fwait
stos
lea
bound
paddusb
pop
adc
mov
mov
pop
cmp
mov
sub
pop
sbb
dec
jns
stc
mov
or
test
mov
inc
int
dec
lock
pop
add
mov
loop
pop
loop
mov
add
or
mov
pop
jmp
dec
nop
mov
int
pop
imul
sbb
ret
mov
rorb
xor
ss
mov
dec
aam
xor
mov
mov
sahf
lea
pop
sub
mov
fcoms
or
and
pop
ja
inc
es
sub
out
jns
adc
push
hlt
fidivl
lahf
int
decl
inc
push
fistps
hlt
fisubrl
in
rolb
call
xor
jo
sub
pop
mov
shl
pop
jge
leave
pop
jbe
or
jmp
cmpsl
sbb
cs
outsl
xchg
push
ja
lret
pop
xchg
movsl
cmp
xchg
pop
jle
jg
cmp
pop
sub
or
pop
insb
arpl
jo
flds
mov
push
cmp
push
jnp,pn
jbe
fsubp
inc
jge
pop
pop
call
pop
test
push
inc
sbb
int3
add
sub
mov
jl
push
scas
inc
imul
cmp
jns
nop
stos
mov
fsts
es
test
sbb
add
push
fwait
pop
sbb
pushf
in
pusha
mov
ret
int
lds
push
fmul
push
pop
or
icebp
pop
in
push
inc
shll
out
xchg
mov
pop
ja
dec
mov
pop
gs
std
fsubrs
push
xchg
sbb
pop
push
inc
lcall
rcrb
sub
adc
shlb
cmpsb
int
push
scas
gs
pop
and
mov
dec
add
mov
lahf
dec
arpl
iret
mov
fwait
adc
mov
lahf
xchg
addr16
fs
lods
scas
not
pushf
mov
xchg
mov
in
xor
pop
in
cli
dec
cmp
inc
pop
jne
jb
sub
pop
adc
pop
push
scas
cmp
pop
cwtd
lods
imul
add
lock
pop
lock
repz
jle
enter
xchg
and
int3
imul
and
int
lahf
mov
dec
pop
or
sbb
fdivrl
pop
ds
jb
push
cmp
pop
or
stc
insl
in
clc
fcomp
int3
int
pop
xor
or
pusha
jbe
stos
pop
jle
in
xchg
xchg
dec
sbbb
mov
push
aas
sub
and
fsts
jl
pop
orb
mov
sbb
mov
pusha
mov
adc
outsl
jo
xchg
inc
lret
pop
movsl
das
daa
jbe
and
cltd
repz
and
dec
pusha
xchg
dec
cmpsb
ja
or
mov
dec
into
rcl
es
jg
add
mov
add
pop
insl
test
jmp
lea
lods
dec
mov
xor
mov
inc
bound
xchg
or
cltd
mov
or
pop
fildl
jne
jnp
cmp
jmp
fcomip
rcl
push
repnz
xor
xor
jb
loopne
mov
xlat
xchg
popf
pop
xchg
xchg
pop
mov
inc
clc
add
fadds
stc
mov
lret
pop
out
xor
lret
fnstenv
lcall
pop
rorb
inc
test
inc
or
xchg
aad
and
pop
ret
push
and
pop
stos
sbb
ljmp
repnz
jb
iret
lds
push
xlat
mov
ds
inc
pop
mov
data16
stos
sti
mov
stos
adc
outsb
pop
cltd
mov
pop
enter
cmp
call
dec
jb
pop
jo
rcrl
push
xor
pop
push
pop
and
sub
sub
mov
in
push
pop
rolb
adc
lds
hlt
add
xchg
out
jle
sbb
xchg
negb
out
mov
cmp
pusha
jmp
push
fwait
add
lea
mov
push
insl
pushl
pop
dec
pop
ss
mov
addr16
push
aaa
sbb
push
and
xchg
push
cmpsl
in
sbb
sbbl
dec
lcall
fldt
mov
xchg
push
cmp
and
push
push
dec
data16
js,pt
pop
fldt
leave
fcompl
sar
push
fidivrl
jae
mov
loopne
addr16
fsts
sub
pop
int
mov
stos
sbb
mov
mov
add
jae
fsub
jmp
add
mov
pusha
dec
andb
or
xor
aad
in
inc
pushf
ficoml
adc
stos
sub
or
int3
inc
loop
inc
int
add
inc
sbb
pop
cwtl
jge
repnz
ret
in
dec
or
fdivs
clc
push
out
mov
cmpb
xor
add
loopne
mov
mov
mov
int3
pop
jecxz
pop
sahf
dec
stos
aas
dec
sub
mov
insl
cmp
out
out
sti
sub
lahf
fcomps
cmp
lahf
xor
flds
dec
and
cvtdq2ps
push
ret
mov
aaa
test
cld
mov
sub
or
cli
sbb
pop
testb
mov
mov
imul
xchg
sbb
or
cltd
push
movsb
mov
pop
insl
scas
testl
pop
rorl
mov
cs
lret
scas
and
int3
mov
or
scas
jle
cli
mov
repnz
dec
pop
add
movsl
mov
pop
ficomps
mov
in
and
push
push
dec
xchg
imul
pop
sub
push
orb
lods
push
ret
je
lea
and
leave
sub
mov
ja
shlb
pop
and
repnz
push
xchg
loop
xor
cmpsb
pop
sub
cmpl
stos
add
sahf
stos
or
lods
pop
jecxz
ja
sti
xor
aaa
cmc
aad
sbb
pop
xchg
sbb
mov
push
sti
dec
pop
adc
je
pop
mov
pop
inc
sub
lret
cmp
ja
pushf
xchg
cmp
add
cmc
pop
mov
cmpl
jae
mov
push
std
out
dec
cli
and
xlat
enter
xchg
pop
dec
jl
and
je
cld
ficomps
fsubr
xchg
stc
sub
cmp
int3
dec
pop
je
mov
mov
addps
pop
mov
gs
mov
pop
test
subb
inc
add
icebp
je
jge
jmp
push
jo
sub
xor
adc
add
mov
sub
lock
or
int
xor
stos
test
mov
sbb
dec
mov
cmc
cwtl
fcmovnu
or
and
je
aad
scas
fcmovu
or
pushf
adc
pop
cmp
pop
dec
test
outsl
sbb
leave
add
pop
int
lcall
insb
sbb
pop
vpsrad
jge
divl
pushf
mov
cmp
lea
mov
add
les
pop
gs
xlat
cld
insb
pop
rcrl
or
and
ljmp
push
sti
imul
movsl
jnp
mov
cmp
dec
pop
push
mull
jecxz,pn
les
pop
frstor
dec
clc
or
and
dec
out
sbbb
scas
mov
imul
mov
imul
jmp
popa
lods
das
js
pop
mov
mull
adc
jae
jl
dec
call
fimuls
or
fwait
cltd
insb
les
jo
imul
stc
sbb
adc
dec
cmp
fst
pop
addr16
aad
jmp
popa
inc
insl
jb
sbb
jne
push
jbe
int
mov
xchg
test
rcr
mov
dec
mov
jmp
mov
mov
and
pop
ds
sar
int3
add
inc
jo
mov
lcall
and
mov
negb
push
int
shlb
mov
bound
outsl
ret
sbb
stc
sbb
in
mov
mov
pop
sub
movsl
les
dec
mov
pop
xor
cli
pop
pop
aas
jecxz
push
jbe
lcall
inc
movhps
les
xchg
aam
cmp
int
test
pop
sbb
jl
stos
cmp
pushf
mov
jmp
fldcw
dec
sbb
mov
arpl
inc
or
xor
jbe
nop
fs
out
shl
jo
pop
pop
xchg
out
and
jecxz
xchg
pop
pop
out
sub
aam
pop
pop
sbb
cmpsl
sub
pop
lock
dec
test
das
out
mov
test
fldt
nop
or
mov
adc
dec
push
mov
fcoml
pop
lds
pop
inc
ja
adc
insl
ror
mov
aad
cmp
cs
pop
push
repnz
test
or
lret
outsl
cmp
mov
mov
cli
sbb
jge
pop
pop
pop
insl
xor
pusha
sbb
dec
pop
fdivs
mov
lret
loopne
bound
lahf
jns
inc
mov
push
orl
imul
sbb
pop
ljmp
enter
aaa
xchg
push
in
out
ja
push
bswap
icebp
jecxz
mov
jge
outsb
fcoml
fstps
mov
mov
pop
mov
hlt
inc
push
outsb
sbb
rcrb
cmpl
adc
pop
pop
lret
and
sbb
bound
in
mov
sbb
fdiv
pop
sti
xchg
cmp
jecxz
pop
lcall
xchg
mov
pop
inc
or
addr16
xlat
sbb
shrb
xchg
das
pop
fwait
int3
push
cmp
pop
jge
push
xor
cmp
ja
daa
loopne
scas
mov
jp
out
pop
xor
into
pop
jle
dec
out
inc
stos
add
mov
rolb
adc
imulb
mov
inc
call
xchg
movsl
and
inc
pop
xlat
dec
inc
nop
pop
outsl
push
jecxz
jge
xor
loop
and
aam
push
push
stc
pop
mov
cmpsb
test
push
adc
sub
pop
push
pop
mov
xorl
adc
jecxz
aad
jcxz
cmp
pop
daa
xchg
leave
cli
pop
mov
and
insl
mov
rcrl
sbb
lea
push
int
pop
fildl
mov
aam
cli
pop
jmp
mov
pop
into
mov
or
dec
int3
jnp
gs
xor
pop
std
ficoms
pop
and
sbb
pop
cltd
inc
in
rcrb
jbe
dec
add
mov
pop
push
push
push
adc
andb
int3
pop
xchg
lods
inc
lahf
cmp
fcmovb
xor
lods
clc
ds
pop
mov
pop
xchg
xchg
lcall
jo
mov
push
lahf
adc
int
fsts
lahf
push
out
and
mov
orl
loope
lahf
adc
jnp
insl
es
enter
sarb
js
jns
mov
fmuls
lret
inc
cltd
into
daa
loop
pop
repz
or
pop
aad
sub
push
sub
and
popf
das
and
add
sbb
cmpsb
pop
arpl
mov
pop
imul
fnstsw
into
pop
stc
sti
inc
jns
sub
fs
cmpsl
int3
ret
cs
mov
js
sbb
lods
xchg
dec
mov
int
mov
mov
jecxz
inc
pushf
pop
lcall
sub
movsb
pop
add
and
daa
dec
lods
pop
bound
and
cld
jge
pop
mov
pop
loop
insl
outsl
xor
mov
push
pop
jbe
imul
lret
push
cmp
cmovge
lds
push
jle
aaa
fwait
pop
mov
es
xchg
inc
push
ret
roll
int3
loopne
pop
lds
sbb
sbb
dec
pop
mov
add
mov
lock
xchg
in
pop
jb
push
into
push
sub
dec
pop
adc
adc
push
adc
cltd
mov
push
xchg
mov
push
pop
cld
mov
cwtl
cmp
mov
ljmp
and
int3
test
pop
and
sbb
movsb
add
rcl
pop
dec
sub
dec
jb,pn
stc
fnstenvs
lret
mul
or
jg
push
jns
xor
dec
fisttps
test
in
call
or
or
dec
cmp
fstpt
aam
mov
mov
cli
in
add
mov
jnp
mov
pop
fwait
pop
arpl
lret
js
dec
mov
imul
push
cmp
push
pop
jbe
sbb
fisubl
loop
sbb
imul
cltd
pop
lds
call
test
mov
lahf
pop
outsl
pop
sbb
adc
in
jl
stos
xchg
xchg
jle
push
pop
mov
mov
mov
mov
dec
mov
insb
and
scas
repnz
inc
xor
ret
mov
pop
adc
stc
cmpsb
pop
lret
dec
cmp
jo
mov
icebp
inc
ja
rcr
xchg
sbb
inc
test
hlt
arpl
pop
fadd
add
insl
pop
lret
push
out
setg
lea
push
push
mov
and
stc
fwait
mov
rolb
jl
dec
test
int
popl
sub
mov
in
ss
jo
sub
cmp
push
dec
int
jecxz
les
lods
call
mov
cmp
sub
repz
stos
fcmove
movsb
push
jb,pt
pop
mov
jge
mov
or
pop
arpl
ja
mov
loopne
cmp
jmp
jge
movsl
or
add
pop
xchg
aaa
divb
mov
movsl
and
fsts
mov
pop
sbb
xorb
bound
insb
das
pop
sbb
fidivrl
int3
fldl
stc
xor
les
fimuls
decb
pop
clc
mov
xchg
out
jmp
inc
popf
mov
decl
insb
mov
mov
mov
in
mov
push
sub
fdivl
dec
pop
adc
xor
roll
rcrb
popa
dec
inc
pop
add
inc
or
bound
push
mov
dec
xorl
cmp
push
sbb
shl
addr16
lcall
jl,pt
stos
jns
gs
pop
ret
fisttpll
call
add
stc
mov
aas
jl
sbb
cltd
add
out
xor
dec
cmp
adc
mov
lods
test
imul
sahf
daa
xor
xchg
stos
into
mov
imul
pop
and
push
fcoms
pop
cmpsl
in
jb
adc
js
xlat
std
popf
sti
les
pop
pop
jns
test
loop
lahf
cwtl
push
cmpsb
mov
push
out
pop
mov
adc
outsl
adc
into
int3
aas
lret
cwtl
inc
or
lret
pop
jle
dec
das
jns
sarl
add
nop
jns
pop
cmp
test
jo
pop
repz
cwtl
xor
popf
movsl
and
and
mov
pop
sbb
mov
add
cld
pop
lcall
mov
push
pop
sbb
lcall
idivl
outsl
gs
adc
sbb
or
mov
mov
pop
pop
stos
add
imul
push
into
jmp
or
pop
int
pushf
push
adc
sbb
fcmovbe
or
pusha
aas
fiadds
lea
fistpll
jge
cltd
aam
pop
lret
push
push
pop
sbb
pop
stc
cmp
sub
mov
aas
jge
lret
dec
popf
sbb
ud2
pop
dec
and
adc
lret
fadds
push
scas
add
insl
repz
mov
clc
cltd
movsb
adc
add
cltd
dec
jns
jbe
pop
add
xchg
jbe
imul
mov
lock
int
mov
cld
sub
call
inc
mov
jno
movsb
lahf
or
push
xor
insl
repnz
fsubl
pop
cwtl
push
or
pop
sbb
xchg
lock
mov
jb
gs
bnd
call
adc
icebp
sbb
popf
dec
sti
mov
dec
adc
pop
and
in
dec
push
test
add
jmp
cmp
stos
sub
bound
sub
cltd
fld
sub
mov
fwait
dec
out
jle
pop
out
das
xchg
int
loopne
into
pop
push
sbb
pop
pop
xchg
add
ror
sbb
insb
xor
test
adc
dec
mov
push
push
mov
and
fistpl
orl
pop
mov
je
cmc
test
arpl
aad
jmp
pop
xchg
add
repnz
sub
fstl
pop
dec
scas
sub
dec
lret
or
add
pop
or
rcrl
mov
pop
sbb
dec
and
push
jae
bound
sarb
xor
and
aas
ljmp
sub
pop
ret
or
xor
pop
sbb
int
stos
loopw
lcall
icebp
mov
xchg
mov
call
inc
pop
jbe
loop
push
pop
push
xor
out
and
xor
aas
mov
test
pop
xchg
leavew
sbb
or
pop
repnz
insb
pop
pop
jo
sbb
loope
dec
dec
xchg
ss
pop
fsubrl
xchg
mov
repz
cmp
cmp
adc
fistpl
imul
test
pop
decl
in
add
ficomps
sbb
or
rcrl
mov
jle
xchg
scas
mov
pop
addr16
pop
pop
push
adc
outsl
arpl
dec
mov
xchg
cmp
loopne
pop
sub
icebp
cli
mov
pop
dec
or
jo
in
dec
lahf
sbb
xlat
cmpsl
pop
ds
int
or
mov
mov
cmp
les
lock
add
mov
pop
imul
xchg
cld
mov
push
cli
int3
adc
xor
cltd
cmp
pop
test
mov
adc
inc
orb
push
pop
shlb
shlb
pop
dec
ss
mov
mov
jb
jo
add
sbbb
fildll
sub
pop
out
in
push
or
pop
pushf
xchg
mov
mov
cmp
sbb
pop
jns
fdivrl
xchg
scas
pop
outsl
dec
sub
gs
mov
xchg
adc
sub
lock
stos
hlt
xchg
mov
pop
and
in
loopne
je
jecxz
in
mov
xlat
sbbl
dec
add
pop
jo
cld
out
fnsave
test
cmp
sbb
faddl
ret
pop
add
stos
imul
sub
mov
aas
pop
push
mov
fs
push
lahf
int
mov
pop
mov
pop
jb
fldenv
pop
push
add
push
adc
mov
daa
dec
mov
lahf
leave
adc
cmp
sub
cltd
pop
xchg
push
je
fdivr
sti
cmc
in
fidivs
jo
jmp
pop
xorl
pop
cmp
or
cltd
jle
sbbb
adc
push
jbe
std
scas
test
pop
inc
push
int3
mov
repnz
daa
add
aam
pop
in
jnp
and
pop
adcl
mov
xor
out
xlat
pop
jae
ret
mov
inc
int3
lcall
fiaddl
in
stos
mov
or
stos
cmp
pop
hlt
jp
mov
idivb
lret
inc
addr16
scas
adc
and
sub
mov
outsb
cmp
cmc
ficompl
or
imul
mov
ja
cmp
mov
scas
js
scas
push
add
adc
dec
pop
cld
push
out
dec
and
push
mov
imul
pop
inc
cmp
sub
mov
inc
pop
push
jecxz
out
loop
pop
jno
and
dec
push
pop
int3
sti
mov
lret
pop
push
and
or
push
pop
sub
leave
push
jecxz
sahf
pop
pop
out
sbb
inc
adc
mov
icebp
dec
lods
decl
pop
cmc
call
xor
xor
cli
push
lret
push
or
jno
jecxz
mov
push
xchg
xchg
shr
mov
pop
pop
imul
jg
out
pop
xor
test
shrl
pop
arpl
test
push
add
enter
push
dec
push
sbb
fimull
lcall
insl
sbb
sbb
lods
push
mov
pop
jl
mov
jmp
sahf
mov
add
inc
cmpsl
xchg
mov
insb
push
icebp
lahf
daa
js
dec
inc
lods
rcrl
lock
jge
rcrb
dec
mov
roll
loop
dec
pop
jo
pop
imull
lahf
aam
in
ficoml
mov
leave
sbb
xlat
stc
pop
sahf
cmp
loop
shl
loopne
movsl
sub
dec
pop
loope
test
je
std
pusha
popa
pop
add
jns
add
sbb
and
ja
jg
add
jmp
adc
fs
push
xchg
inc
cltd
pusha
push
pop
or
mov
clc
pop
mov
data16
in
int
cltd
pop
add
lcall
int3
pop
fs
movsl
pushf
in
xor
cmp
out
mov
push
popa
jecxz
xchg
ficoml
pop
insl
jae
sbb
pop
shrl
mov
outsl
mov
cwtl
cltd
xchg
sbb
repz
lods
or
divb
mov
pop
adc
push
xchg
insb
inc
or
ret
push
dec
fbstp
mov
int
cmp
addr16
jecxz
add
ja
mov
push
jne
push
pop
push
sub
jb
out
xor
scas
pop
xor
adc
sbb
pop
xor
das
mov
scas
cmp
push
inc
cltd
mov
iret
fsubs
pop
jns
mov
out
cld
or
popa
jecxz
xchg
sub
mov
mov
lahf
cmp
xlat
pushf
cmc
mov
test
pop
jge
les
add
int3
pushf
or
adc
pop
lock
push
mov
test
jne
push
fsin
or
aam
pop
into
sbb
pop
push
fs
xchg
enter
xchg
push
dec
or
inc
loop
or
pop
ja
rcll
dec
push
cld
add
ret
int3
out
outsb
sub
pop
ds
jg
jb
movl
xor
pop
jns
sbb
pop
push
int
mov
mov
push
pop
enter
dec
adc
pop
pop
insl
or
push
lods
lahf
jnp
push
pop
gs
das
jmp
enter
xor
es
mov
in
sbb
mov
scas
sbb
xor
push
jns
cltd
or
xchg
loope
sbb
push
lods
cmp
mov
pushf
movsl
bound
negl
cmp
mov
test
mov
popf
pop
loop
int
or
pop
pop
mov
stos
add
pop
into
inc
aaa
xchg
mov
and
add
nop
add
addr16
pop
lret
pop
shll
movsl
lea
push
mov
push
lret
lock
mov
mov
insb
push
pop
aad
dec
test
adc
dec
pusha
push
pop
mov
or
shrl
in
pop
and
loope
jle
push
ret
xchg
fstpt
adc
movsl
cmp
fcoms
fbstp
sub
pop
dec
mov
int
and
lahf
imul
add
iret
mov
pop
adc
add
sbb
fucomp
dec
scas
xchg
sbbb
and
roll
cmp
mov
clc
scas
fiaddl
sarb
mov
pop
mov
xor
and
ficoml
jo
mov
mov
stc
ficoml
sub
push
loope
and
arpl
addr16
out
jl
enter
mov
mov
ficomps
push
icebp
ds
lods
sahf
out
pushf
iret
inc
pop
jbe
add
sub
inc
mov
test
xor
ss
stos
push
outsl
hlt
std
jp
pop
xor
clc
pop
mov
scas
mov
pop
sbb
ljmp
push
lret
xchg
pop
les
dec
adc
pop
fists
scas
insl
and
xchg
dec
enter
out
mov
lcall
pop
cltd
mov
cwtl
fcomi
addr16
clc
test
or
pop
lea
mov
scas
push
mov
ficomps
sahf
pop
push
in
popl
shlb
outsb
xchg
insl
cmp
jb
sbb
popf
sub
pop
mov
cmp
xchg
psrld
xchg
push
push
cltd
or
lea
jne
pop
fidivs
sbb
inc
sub
scas
leave
nop
or
pop
sahf
dec
xor
mov
and
sti
lcall
xchg
leave
adc
ret
pop
cmp
xchg
mov
push
cltd
and
add
mov
fdivs
sub
cmc
push
jp
imul
inc
je
mov
mov
xor
or
shlb
jo
inc
mov
sti
fisubs
and
pop
mov
push
fisubrl
jmp
insl
int3
cmp
mov
sbb
nop
adc
cwtl
jo
fstpl
mov
mov
push
into
jns
in
or
xchg
scas
adc
adc
inc
mov
mov
push
pop
and
add
ret
pop
idiv
mov
xlat
pop
pop
dec
jp
adc
int
mov
pop
leave
insl
or
bound
mov
pop
adc
aas
int3
add
lret
nop
mov
add
andb
mov
jl
in
je
repnz
or
sub
mov
aam
sbb
roll
aam
in
fwait
arpl
adc
and
xor
ss
xorl
hlt
outsb
pop
or
adc
lret
push
popa
and
pop
cmpsb
fcom
sbb
pop
lcall
ficompl
pop
ret
dec
das
xchg
int
pop
test
jne
adc
add
pop
in
sbb
mov
pushf
mov
or
pop
loopne
jmp
ds
jmp
arpl
pop
int3
jp
sub
test
add
pop
in
mov
mov
loope
adc
add
pop
push
lods
enter
out
cmp
mov
mov
dec
cmp
addr16
cltd
scas
fnsave
iret
in
pop
jo
insb
ljmp
mov
inc
dec
loop
jle
mov
iret
add
insl
shlb
loope
icebp
fdivs
imull
pop
xchg
lret
fdivs
pop
cmp
adc
pop
xor
icebp
sbb
outsl
fcmovne
mov
sbb
ret
sahf
rorb
or
in
cld
fs
pop
icebp
in
push
dec
out
aaa
or
add
sub
out
add
mov
mov
mov
pop
je
inc
cmpsb
xchg
and
pop
enter
mov
jp
cmp
mov
out
mov
test
sbb
popf
rorb
mov
jle
test
int3
or
ret
ja
pop
pop
mov
lods
xchg
int3
push
pop
lahf
into
pop
or
add
pop
sahf
cmp
loope
pop
into
add
lods
push
fcompl
adc
pop
mov
mov
xchg
dec
or
notl
add
sahf
inc
pop
pop
pop
or
sbb
dec
gs
add
push
sub
ljmp
mov
mov
push
pop
std
jle
inc
rcrb
push
pop
loope
pop
dec
sbb
jae
sbb
test
fsubl
adc
shlb
aam
loop
push
mov
cs
movsl
mov
test
mov
pop
sub
sbb
pop
push
fsubr
push
cmp
das
ss
test
test
ljmp
jl
sti
pop
fwait
fs
fucomp
push
pusha
sbb
mov
out
dec
sub
shlb
outsl
inc
insl
pop
push
jb
mov
dec
pushf
push
mov
push
add
stos
mov
mov
mov
push
jecxz
fmull
mov
and
jecxz
add
pop
inc
rcrb
fistps
or
jle
and
dec
xchg
mov
cmp
sub
pop
sbb
cmp
decl
dec
negl
dec
mov
loopne
xchg
outsl
pop
push
ja
sbb
xor
pop
fsubl
call
push
jb
orl
mov
daa
int
mov
repz
xchg
dec
pop
adc
sbb
and
cli
xor
or
ljmp
lea
in
mov
push
pop
adc
inc
movsb
stos
rolb
rclb
pop
pop
xchg
jge
push
fimull
sub
jbe
psubusw
test
stos
dec
mov
inc
add
dec
pop
int
cs
lea
push
mov
xchg
das
sbb
mov
ss
sbb
pop
ds
bound
shll
pop
adc
in
fcoms
out
int
test
mov
push
subl
adc
pop
cli
cmp
popf
pop
test
cwtl
add
dec
push
adc
xchg
int3
adc
loopne
lods
pop
dec
dec
sbb
push
int
push
or
loopne
jbe
fstl
jle
clc
movsb
out
push
mov
mov
int3
dec
jb
mov
lret
mov
sar
pop
int
push
loopne
sub
rcrb
jb
xor
nop
mov
in
repnz
ret
mov
dec
and
push
mov
inc
pop
push
or
jmp
int3
orl
and
iret
push
addb
sub
cltd
mov
dec
movsl
cltd
pop
lahf
mov
pop
out
or
icebp
cmp
enter
fbld
pusha
add
mov
dec
mov
or
and
sbb
scas
jno
dec
bound
or
jns
xchg
ret
int3
mov
xor
jnp
adc
fwait
mov
pop
mov
cmp
sbb
jbe
sti
iret
sarl
add
pusha
nop
outsb
pop
sbb
ret
bound
fmuls
jecxz
insb
mov
lret
pop
scas
cmpsl
sbb
stos
jno
add
dec
bound
int3
jmp
repnz
mov
sti
push
loop
xor
xchg
and
mov
pop
dec
jge
sub
lahf
jl
mov
fisttpl
pop
inc
cmp
or
push
loopne
pop
ljmp
mov
scas
ss
outsb
pop
rcrb
xchg
dec
lods
loopne
gs
sbbl
cltd
mov
and
jle
pop
mov
into
mov
sub
mov
xchg
fldt
les
lock
out
jns
pop
fstps
lahf
pop
out
insl
clc
fimull
lods
mov
push
push
pop
jns
mov
cs
test
fnstsw
pop
fdivl
mov
jae
inc
mov
mov
jb
pop
push
pop
jp
jnp
and
cmp
idivb
sub
fisttpll
pop
lahf
push
in
fsts
lret
push
jae
repz
dec
addps
sub
jb
icebp
mov
negb
movsb
lahf
addr16
flds
pop
or
jg
pop
mov
xor
add
fisubrs
push
jb
mov
mov
pop
jo
xor
rorb
loop
pop
sub
ret
out
pop
stos
cli
push
xchg
into
std
xchg
push
out
scas
mov
in
sbb
cmpsb
sbb
sub
sbb
mov
lock
cmp
in
fnsave
push
pop
fdivs
pop
mov
mov
aas
fcoml
mov
pop
js
pop
jb
int3
jecxz
xchg
stc
bts
push
enter
pop
jle
pop
xchg
cmp
jge
sbb
push
xchg
mov
pop
xchg
ja
cmpsb
push
jb
pop
jno
push
popf
mov
inc
data16
sets
adc
add
jg
jbe
fstpl
sbb
out
ljmp
mov
push
pop
sbb
pop
or
nop
pop
mov
mov
cli
cmpl
sbb
xchg
sbbl
adc
sub
je
outsl
scas
dec
inc
repz
stc
sbb
cmp
jmp
and
mov
mov
lea
pop
lods
push
je
xchg
in
or
xor
sti
imul
push
sbb
inc
xchg
cld
int3
sbb
das
dec
push
pop
sarl
rclb
mov
adc
lret
sbb
adcl
jp
pop
inc
or
push
mov
scas
inc
sti
ja
fwait
iret
js
leave
ret
pop
or
rcrl
out
push
pop
push
jbe
loop
jle
sub
retw
cli
je
popf
mov
fisttpl
pop
pop
jne
mov
jb
mov
stc
fiaddl
lahf
xchg
fisubl
sub
dec
pop
mov
add
jae
dec
pop
aas
push
pop
mov
push
sbb
dec
adc
pop
lcall
pop
pop
int
mull
lret
sub
mov
in
js
ficomps
and
xor
dec
pop
rclb
test
push
mov
mov
std
loop
pop
mov
xor
lods
jbe
ret
sub
xor
push
cld
pop
push
icebp
shl
pop
test
daa
jbe
pop
gs
repz
dec
xchg
or
int
jnp
sbb
pop
and
gs
aad
mov
insl
jecxz
xor
sahf
cmp
xchg
cmp
inc
dec
pop
mov
or
lods
pop
mov
int3
pop
out
jecxz
dec
dec
pop
jbe
xchg
cltd
lahf
jo
pop
popl
pop
push
jnp
add
mov
lcall
ss
pop
icebp
mov
add
pop
and
jmp
sub
int
cmpsb
nop
cli
lcall
mov
out
xchg
fstpl
push
sub
dec
mov
add
lea
in
jne
inc
lahf
popa
cltd
pop
fisubrl
push
mov
mov
or
jb
lcall
adc
mov
movb
sbb
inc
ss
jbe
in
mov
ja
iret
int3
pop
les
loope
lret
pop
mov
clc
cmp
int
sbb
or
xlat
fsubs
int
inc
fdivrs
push
mov
jl
mov
arpl
setg
sub
fldt
jecxz
shll
pop
cli
dec
aaa
dec
call
mov
fcomp
stos
test
fiaddl
in
mov
jns
bound
shl
dec
xchg
lahf
es
xor
lock
lret
bound
push
das
repnz
inc
mov
imul
inc
aam
addb
or
ret
pop
push
insb
out
push
xor
mov
xchg
pop
insl
jl
fmul
je
mov
pop
pop
int3
mov
fistpl
and
lret
leave
lods
mov
mov
pop
test
imul
sbb
push
pop
push
push
das
frstor
shr
jecxz
into
cmp
sbb
inc
jno
or
stos
loop
push
sar
and
jle
push
add
and
filds
in
dec
push
fistpl
jb
jp
push
pop
mov
fs
pop
enter
pop
in
mov
cmpsl
xchg
pop
push
pushf
shrl
aaa
mov
pop
cmc
or
sub
cmpsb
dec
pop
lods
and
ljmp
pop
jo,pn
or
sub
and
push
sub
and
mov
sbb
xor
arpl
add
sbb
adc
or
pop
adc
jmp
sbb
push
jmp
int3
mov
add
negl
sahf
loop
mov
sti
pusha
mov
pop
sub
bound
mov
xor
pop
push
mov
and
add
push
push
test
inc
pop
insb
scas
jns
push
repnz
nop
fldt
out
xchg
mov
pop
shlb
sbb
jns
mov
icebp
add
sub
push
test
das
cmpsl
mov
ds
jmp
jp
imul
fisubrl
mov
mov
iret
adc
dec
aam
sbb
pop
xor
lods
faddp
in
cli
imul
mov
ljmp
std
mov
mov
mov
pop
test
das
out
int
leave
pop
mov
testl
sbb
push
xchg
fmul
pop
or
xchg
jecxz
rcrb
ljmp
pop
push
std
pop
or
pop
fcmovb
int
sti
xchg
fstps
lods
je
cmpsb
aam
push
test
xor
push
stc
clc
pop
gs
test
ret
dec
cmpsw
pop
xchg
mov
xlat
lahf
push
add
in
pop
popa
push
mov
mov
xchg
mov
push
push
mov
pop
or
test
pop
mov
sti
cmp
xor
push
sbb
mov
ja
cltd
test
sbb
or
pop
data16
int
sub
mov
jno
mov
jne
scas
sub
adc
mov
aam
push
cmp
lahf
push
gs
push
and
loope
fcom
rcll
cmpb
cltd
jl
mov
mov
cmp
adcl
or
dec
xchg
mov
adc
imul
mov
mov
mov
xlat
push
stos
lret
sbb
adc
pop
js
xchg
pop
jb
mov
or
andl
mov
cmp
dec
sub
pop
pop
adcb
jmp
imul
cmp
mov
mov
lahf
xchg
inc
pop
adc
push
stc
sub
sbb
pop
jnp
iret
outsl
and
in
movsb
ljmp
sbb
adc
outsl
pop
sbbl
fstl
inc
mov
jb
pop
cmp
pop
addl
jecxz
pop
push
dec
test
cld
jl
xlat
pop
mov
mov
lret
lds
movsb
pop
add
or
mov
cmp
dec
fsub
mov
mov
pop
aad
ret
fstpt
pop
rorl
sbbl
insb
pop
mov
ss
out
popf
aas
mov
loop
sbb
cmp
push
outsl
inc
ljmp
xchg
and
inc
arpl
push
lds
fwait
lods
or
pop
ss
adc
test
dec
insb
pop
xchg
mov
shl
mov
mov
jge
in
adc
pop
nop
sub
or
xchg
inc
and
jbe
pop
mov
loope
inc
add
push
ret
pop
data16
xor
mov
jle
mov
push
fcmovu
js
cmp
int3
cmp
sbb
sub
push
sub
mov
hlt
int
mov
loop
push
lret
pop
lds
pop
icebp
cs
jo
push
xchg
dec
pop
aaa
pop
ja
inc
sbb
shrb
pop
movsl
mov
sti
fistpl
cmpsb
dec
push
push
xor
mov
pop
subb
or
pop
lock
xchg
cmp
push
mov
pop
dec
mov
push
sbb
jmp
lcall
das
cld
nop
jnp
sbb
aas
jo
push
push
dec
xchg
mov
mov
repz
fnstenv
cmpl
jbe
or
in
stos
ds
jmp
std
pop
and
pop
fs
mov
add
and
rcrl
rcrl
mov
call
jmp
rcrb
mov
mov
jbe
push
lcall
imul
aad
aas
jecxz
lds
dec
mov
pop
call
inc
mov
sub
mov
lea
add
cmp
or
lds
rcrb
sahf
cs
dec
lcall
xor
into
fisttps
pop
mov
pop
jecxz
pop
push
int
pop
xor
mov
pop
add
pop
adc
loop
decl
pushf
pop
mov
lods
pop
push
inc
inc
pop
mov
lods
cwtl
repz
out
pop
xchg
push
mov
lret
jge
loop
cmpb
fisttpll
xlat
fldcw
or
pop
mov
std
call
xchg
inc
mov
pop
jo
test
sbb
mov
int
movsl
popa
and
daa
inc
pop
inc
push
out
je
mov
push
jle
int
rcrb
mov
or
call
dec
adc
into
xchg
pop
sub
lock
loopne
int
mov
dec
inc
cmp
out
mov
and
int3
inc
cmp
lock
pop
mov
popa
mov
call
inc
rcr
mov
pop
push
mov
push
jb
xchg
mov
add
and
es
xchg
inc
stos
sahf
xchg
jb
push
cmp
arpl
and
sahf
inc
out
test
pop
sbb
pusha
popa
dec
outsl
inc
test
sub
pop
sub
pop
popf
aam
jb
repz
fnsave
test
inc
pop
pop
push
es
push
pop
sbb
push
xchg
jbe
sub
loopne
icebp
mov
mov
push
call
mov
pop
gs
mov
dec
mov
popf
dec
mov
sbb
mov
and
mov
add
inc
pop
jl
sahf
iret
ficomps
push
fsubl
pop
lds
jge
push
insl
mov
test
xorl
inc
pop
dec
jbe
js
fucom
push
pop
and
adc
add
mov
in
sub
mov
push
ss
bound
neg
mov
je
push
mov
push
cltd
pop
mov
pushf
int
scas
xchg
les
stos
int3
push
pop
hlt
dec
dec
pop
scas
pop
dec
rorl
xchg
lret
ja
dec
push
mov
pop
cmp
fs
ficomps
mov
out
insl
jb
pop
shlb
jne
rcr
das
pop
lea
fs
xor
out
pop
jbe
scas
pop
or
push
subb
sbb
push
adc
adc
lods
add
popa
in
pushf
sub
push
call
dec
mov
mov
adc
int3
mov
xchg
or
or
loope
inc
adc
pop
js
jbe
push
fwait
dec
repz
or
lods
lahf
xchg
xor
fistpl
jecxz
mov
pop
andb
and
sbb
pusha
sub
inc
gs
aam
xorb
outsl
push
sbb
pop
dec
jmp
test
pop
ret
lret
jo
pop
mov
and
imul
cmp
or
jl
push
dec
pop
ficomps
and
cmp
mov
push
lds
pop
pop
sbb
dec
mov
sbb
pop
push
push
aam
or
xlat
out
lock
push
xor
jb
repz
mov
jecxz
int
and
add
mov
pushf
lcall
jg,pt
xchg
fsub
movsl
sub
pop
push
into
xor
lcall
shl
xor
adc
jecxz
sbb
pop
orb
gs
xchg
lcall
pop
cwtl
sub
lret
adc
sbb
jl
fcom
ds
inc
mov
xor
scas
jb
jne
outsb
mov
push
mov
add
lahf
outsl
mov
cld
jne
inc
test
sbb
jge
pop
xchg
sub
inc
xchg
fs
jns
pop
addl
mov
pop
pop
mov
mov
std
or
cltd
outsl
pop
fistpll
pop
leave
mov
dec
jns
jecxz
lock
addb
mov
adc
scas
xchg
pop
mov
jo
dec
jb
pop
push
notb
cs
mov
mov
pop
iret
mov
into
sbb
cmpsl
pusha
mov
dec
pop
cs
mov
lds
and
pop
jnp
xchg
adc
je
xchg
movsl
dec
sbb
das
loop
mov
arpl
pop
cs
pop
jno
jbe
sbb
sti
shlb
cmp
mov
cmc
dec
jb
in
push
das
xor
pop
mov
pusha
mov
inc
scas
mov
and
mov
mov
iret
lahf
adc
loop
fildl
js
cs
pop
mov
jns
rcrl
lret
dec
lock
jbe
cmp
inc
push
mov
jnp
mov
int3
adc
cli
mov
add
popf
jb
or
dec
pop
mov
dec
int
ljmp
inc
fcmovnbe
cmp
fmuls
rol
nop
fstpl
in
les
pop
add
push
or
push
in
fsubs
pop
pop
mov
pop
add
pop
xchg
sbb
xlat
aas
aaa
cwtl
push
ret
gs
dec
scas
cmpb
shlb
pop
int3
pop
cmpsl
xor
fwait
xor
xchg
lcall
jbe
mov
add
scas
push
add
xchg
adc
rorl
push
inc
ficomps
mov
mov
mov
shll
out
frstor
fiaddl
inc
xchg
sbb
pop
in
cld
aaa
mov
js
lods
xchg
aam
pop
cmp
aas
inc
sbbb
xchg
push
sub
jo
xchg
and
testb
push
stc
mov
ss
data16
xor
ret
push
mov
fisttps
inc
pop
and
std
mov
inc
mov
clc
and
int3
mul
arpl
outsb
int
ficoml
xorb
call
mov
das
dec
push
and
pop
pop
and
add
fstpl
mov
int
mov
lea
or
push
pop
inc
cmc
cmp
pop
pop
test
insl
mov
or
push
inc
and
mov
pop
test
inc
and
pop
pop
ljmp
test
xor
jg
and
jae
or
pop
pop
aaa
sbb
and
loope
in
pop
rclb
mov
or
sbb
cmp
xchg
int
outsl
in
fxch
adc
sub
inc
lods
cmp
int
pop
adc
cs
mov
and
in
pop
dec
in
push
adc
imulb
je
lock
enter
ret
adcb
add
push
pop
rorl
addr16
out
pop
xchg
mov
pop
sti
int
rolb
loop
pop
jb
je
fdiv
scas
pop
pop
repz
fnsave
jae
int
ror
sub
fisubs
adc
pop
out
das
jmp
add
adc
sti
sbb
mov
lds
std
stc
jecxz
daa
add
cmpb
jo
inc
ljmp
cmp
sbb
sbb
or
jg
cmp
dec
pop
xchg
inc
mov
imul
xor
mov
ss
xor
lea
adc
pop
repz
mov
out
mov
loop
vcvttsd2si
and
pop
into
mov
and
jbe
jge
es
fcomp
lods
pop
cs
int
ret
lret
shlb
pop
mov
scas
cmp
dec
test
dec
popf
scas
mov
mov
aam
repz
std
popl
es
in
push
inc
pop
cmc
fsubrl
pop
pop
adc
sti
rcrl
imul
js
test
mov
cmp
push
mov
jo
mov
push
int3
scas
fildll
fadds
rcrl
pop
mov
ds
pop
int
rorl
pop
adc
xor
out
leave
fcomps
mov
scas
nopl
scas
cmpsl
sbb
and
mov
jmp
add
out
jge
jle
pop
mov
inc
push
sarl
mov
xor
dec
lock
pop
sub
push
out
test
rclb
dec
dec
mov
jns
mov
xorb
pop
negl
std
ds
test
insl
aad
cli
int
mov
pop
pusha
outsl
mov
aaa
lret
xlat
inc
stos
sbb
pop
enter
push
pop
xor
push
mov
push
aad
mov
adc
and
mov
lea
jns
int3
cld
mov
mov
or
dec
fisubs
les
pop
xor
jbe
out
repnz
xor
imul
adc
and
push
ret
out
fadds
mov
xor
add
jmp
and
xor
push
pusha
arpl
shrb
cmpl
and
xchg
pop
jnp
pop
adc
pop
add
and
add
lret
mov
das
gs
push
in
sub
dec
stos
push
out
adc
fstpt
mov
insb
mov
loop
fstpt
and
pop
negb
test
hlt
push
mov
pop
pop
xchg
pushf
mov
repz
and
pop
or
flds
clc
movsl
scas
cmpsb
lods
int3
xchg
movsb
pop
mov
sbb
cltd
push
mov
mov
sahf
sbb
and
pop
pushaw
in
mov
or
cli
pop
mov
dec
push
outsl
pop
add
jns
scas
pop
inc
push
mov
jne
mov
sbb
or
pop
fnsave
int
xchg
lods
push
cmp
jae
jmp
adc
sbbb
sbb
ljmp
jl
or
sti
scas
sub
cmp
pop
jbe
pop
jb
pusha
cmp
sub
push
data16
mov
push
pusha
xlat
fstps
cmpsl
pop
pop
mov
ret
jbe
jecxz
xor
pop
aam
not
add
add
jb
cmp
mov
ret
iret
pop
dec
js
xor
dec
mov
adc
ds
je
sbb
lahf
sub
shll
pop
test
push
add
stos
sub
ds
add
xor
xor
or
int
mov
testl
dec
repz
xor
fisubrl
pop
xchg
imul
pop
bound
mov
pop
xor
sbb
mov
add
fbstp
or
jb
dec
scas
stos
or
cmp
sbb
scas
pop
cmp
mov
fdivrl
inc
inc
pop
mov
insl
dec
aaa
pop
cmpsb
jp
int
or
les
push
push
aad
mov
inc
push
daa
pop
jne
or
sahf
loop
mov
iret
pop
in
and
jecxz
inc
cld
lods
xchg
and
jo
stos
test
or
mov
insl
out
sbb
sub
sub
int3
imul
fstpl
gs
sbb
repz
jge
ficomps
insb
pop
imul
jecxz
addr16
loopne
pop
and
dec
aas
xchg
pop
sub
mov
mov
pop
movsl
jne
inc
dec
sbb
adc
jmp
push
in
or
popl
dec
sub
fnsave
mov
insl
push
notl
or
mov
push
adc
cli
mov
das
mov
jl
and
fs
lret
imul
pop
hlt
mov
insb
mov
sub
stos
jbe
pop
in
addr16
fidivrl
test
cltd
call
pop
fisttpll
addr16
lcall
shl
pop
mov
xchg
pop
lret
fs
pop
int
mov
aaa
pop
aad
sub
jb
imul
lock
dec
xor
push
or
jns
add
sub
jno
cltd
sbb
cmp
int3
mov
adc
and
or
push
pop
adc
jl
dec
loope
das
lahf
icebp
pop
pop
stc
jae
movsl
or
push
jbe
jns
jne
fidivs
test
inc
fiaddl
outsb
data16
pop
lret
andb
pop
icebp
dec
and
or
mull
ljmp
or
sub
jp
stos
mov
adc
loopne
mov
cs
pop
xchg
int3
mov
mov
inc
adc
inc
cld
insl
fdivl
lcall
cmpsl
sub
nop
mov
push
fstl
sbb
dec
xor
xor
outsb
jb
inc
sbb
cmp
mov
fnstenv
repnz
aam
in
arpl
leave
push
fcoml
rorl
outsb
push
bound
scas
dec
mov
dec
pop
sti
iret
imul
mov
or
rcr
jge
stos
idiv
jns
inc
and
test
dec
push
xor
ret
scas
push
push
imul
mov
jbe
pop
mov
mov
xchg
aad
sbb
pop
or
inc
cmp
pop
mov
lods
push
fwait
jo
mov
mov
cmp
cmp
imulb
ds
dec
inc
mov
xor
fdivs
cmp
jbe
jle
jge
pop
jg
std
push
sbb
add
cmp
cltd
test
jge
pop
stos
and
enter
adc
lods
cmpsl
outsb
test
and
aad
and
mov
push
lods
mov
cwtl
add
ljmp
enter
or
cltd
cmpsl
stos
mov
fxch
adc
stos
fstpl
int
test
in
cmp
pminub
jecxz
adc
xor
pop
popf
imul
js
sbb
sti
jno
mov
xor
popa
cli
shll
mov
rcrb
cmc
rol
xor
cs
pop
xchg
pop
gs
push
testl
das
in
loop
mov
mov
jnp
dec
pop
int
inc
cmc
or
test
iret
insl
jge
fistpl
mov
cli
adc
mov
jns
xchg
mov
and
mov
mov
int3
adc
mov
scas
push
popf
sbb
cmpb
in
pop
sbb
dec
fstpl
pop
xlat
push
xchg
gs
mov
arpl
sbb
dec
stos
mov
std
xchg
cltd
jb
scas
gs
movsl
rorl
clc
xchg
leave
mov
mov
popf
pop
test
shll
pop
cmp
cmc
push
cmp
or
inc
add
push
jb
pop
push
mov
pop
sbb
bound
dec
xchg
ficoml
pop
mov
sbb
fisttpl
in
add
int3
and
cmp
pop
or
pop
pushf
sbb
push
iret
pop
popa
xchg
push
pop
jmp
outsb
sbb
pop
bound
add
jb
cmp
enter
sbb
push
or
bound
sbb
push
les
xor
push
add
pop
jnp
jle
divb
out
loopne
push
jb
xor
sub
neg
pop
jge
loope
jecxz
hlt
test
jb
push
fcmovbe
ja
int3
das
pop
adc
fwait
sub
lods
loop
popf
and
lcall
push
fadd
repz
call
fwait
pop
mov
lret
adc
stos
mov
sbb
je
sbb
xor
imul
pop
imul
mov
test
pop
mov
inc
mov
iret
sbb
inc
dec
test
int3
and
sbb
int
mov
mov
std
pop
shlb
mov
je
mov
pop
outsb
pop
arpl
rorl
mov
cmp
lds
sbb
dec
pop
cmpsl
cmpsb
add
mov
into
stos
pop
int
lcall
addr16
pop
pusha
jge
cmp
jb
push
dec
les
pop
lret
std
ja
out
and
sarb
push
pop
dec
pop
add
pop
mov
ljmp
mov
add
cmpl
inc
push
xor
pop
mov
fstpt
sub
in
pop
test
imul
adc
adc
dec
xor
into
pop
and
xchg
aad
mov
sub
pop
rolb
xor
stc
sub
mov
add
push
pop
push
cmp
pop
ret
aad
scas
mov
mov
mov
sti
pop
jmp
sahf
test
and
insl
cwtl
and
jbe
ja
pop
or
or
cmc
shlb
push
xchg
pop
hlt
pop
imul
inc
push
mov
gs
mov
cmp
push
stos
xchg
stos
jl
loopne
dec
vcvtpd2psx
bound
pop
push
xlat
ret
jbe
xor
xchg
in
inc
arpl
pop
lea
in
push
pop
or
popl
xchg
jb
xchg
adc
sub
or
push
mov
pop
adc
xor
push
dec
adc
jne
adc
jle
pop
push
pop
ljmp
adc
sbb
loope
mov
sub
shl
fstps
loopne
mov
jns
icebp
push
mov
into
jae
rolb
dec
jmp
movsl
lret
and
add
pop
lds
xchg
dec
test
jnp
jmp
adc
jmp
xor
mov
insb
mov
repnz
popf
loopne
xchg
lcall
ficoml
sub
bound
outsl
mov
push
inc
sbb
sti
pop
gs
jbe
fsubrp
ljmp
cs
xor
adc
mov
xchg
or
push
add
pop
mov
sbb
or
inc
xchg
movsb
xchg
push
add
dec
aas
cwtl
pushf
fsubrs
xchg
negb
test
lods
test
in
pop
dec
dec
sbbb
lahf
in
icebp
sub
stos
test
mov
bound
bsf
push
mov
pop
lods
outsl
insb
dec
jnp
pop
lds
fwait
sub
jbe
insl
pop
inc
mov
xor
pop
mov
dec
shlb
pop
int3
int
aad
fwait
cmp
dec
cwtl
jo
mov
adc
xchg
push
mov
or
pop
sbb
movsb
es
data16
or
mov
movsl
loopne
scas
mov
mov
jecxz
aad
sbb
jg
add
test
xchg
dec
pop
in
gs
int3
setg
mov
out
xor
lock
mov
jno
pop
sub
mov
inc
pop
mov
outsb
clc
pop
inc
fsts
scas
pop
and
add
xchg
test
dec
int3
pushf
dec
or
sarl
dec
test
pop
insl
xchg
adc
or
pop
mov
insb
sub
cwtl
jns
icebp
adc
mov
add
or
outsl
ret
jmp
push
pop
loop
cmp
pop
popl
sbbl
jp
pop
out
xchg
test
lods
mov
outsb
xor
pop
cmp
sub
pop
cwtl
je
ret
mov
stc
mov
xor
sub
dec
inc
mov
jno
ret
xor
dec
inc
mov
sbb
fsqrt
vpmacsswd
scas
add
inc
sub
pop
cld
dec
int
dec
pushw
dec
jecxz
repnz
push
lock
sbbl
div
sti
stos
loop
or
jnp
in
xchg
jo
cltd
gs
pop
mov
adc
mov
pop
leave
bound
dec
mov
mov
dec
fidivrs
mov
pop
ds
push
or
and
pop
push
popa
sbb
outsb
push
xor
rorb
pop
sbb
clc
pop
shrl
int
loopne
fistps
mov
call
pusha
pop
test
push
imul
pop
cmp
sti
jo
dec
out
add
mov
pop
shrb
add
bound
filds
or
dec
xor
pop
lret
adc
jo
cltd
or
insl
clc
pop
adc
pushf
add
ds
daa
scas
cs
hlt
push
sub
mov
divb
push
lret
je
sub
insl
int3
scas
push
mov
and
dec
xor
jno
mov
sub
fmuls
mov
mov
cmp
push
les
je
xchg
mov
orb
pop
or
and
push
gs
daa
sbb
xchg
pop
fildll
jle
mov
pop
push
inc
mov
xor
push
leave
mov
and
jecxz
jne
pop
loope
rcll
aam
jmp
xchg
pop
repnz
stc
mov
jae
mov
int3
and
pop
mov
mov
sbb
xor
add
add
mov
aad
lea
pop
jb
dec
fnsave
mov
fldpi
fcomps
imulb
mov
bound
dec
lret
and
mov
call
lock
lret
dec
clc
cmpsb
mov
sbb
pop
add
sub
pop
inc
mov
lret
inc
ja
push
jecxz
cmpsb
inc
pop
ljmp
add
or
dec
mov
arpl
jbe
lea
leave
mov
sti
bswap
push
pop
push
mov
cmpl
mov
cmpsl
les
adc
push
pop
ss
popa
lods
int3
jp
jmp
jge
adc
push
in
pop
add
push
out
divl
jnp
fsubs
sbb
mov
jbe
lods
cmp
js
mov
cli
xchg
pop
aam
adc
or
jb
lock
fldenv
mov
adc
enter
pop
mov
test
loope
ror
add
jnp
add
lods
push
cltd
sbb
das
sbb
pop
test
push
shrl
aad
mov
push
je
add
mov
mov
out
xchg
dec
pop
pushfw
jle
popf
mov
roll
sub
cmp
sbbb
mov
cmp
sbb
sub
das
sbb
addr16
inc
pop
outsb
sbb
lcall
lock
popl
dec
shl
ds
clc
or
mov
xor
jo
pop
jg
xchg
pop
movsl
ja
jb
adc
mov
aaa
stos
sub
and
jle
sbb
pop
mov
iret
xlat
and
xor
scas
cwtl
fwait
xchg
dec
cmpsb
mov
cmp
inc
or
jnp
scas
ja
mov
int
pop
push
insl
aam
jns
js
pop
jmp
lods
insb
adc
mov
pop
xor
sbb
xchg
lock
xchg
adc
pop
xlat
push
test
std
mov
mov
sub
xchg
xchg
mov
pop
sbb
pop
xchg
and
push
icebp
push
jbe
out
test
sbb
testl
pushl
xchg
dec
mov
fbld
pop
xor
sbbb
dec
sub
adc
pushf
pop
dec
pop
int
mov
push
aas
or
xchg
sbb
mov
sub
jge
pop
jbe
scas
push
lods
dec
mov
sbb
out
mov
cltd
dec
xchg
pop
xchg
out
adc
rcrb
cmpsl
popf
out
jecxz
mov
pop
addr16
mov
lret
pop
dec
popa
into
pop
imul
jg
inc
mov
pusha
jne
aaa
loopne
pop
mov
mov
xchg
sahf
add
sbb
gs
xchg
adc
fs
fadds
sti
cs
mov
mov
and
insb
lods
out
lock
jg
dec
and
dec
int3
lods
jbe
cmp
aas
stos
xchg
push
mov
pop
adc
cmp
stc
pcmpeqw
scas
mov
pop
push
pop
push
jl
lahf
in
and
xlat
mov
mov
or
jbe
xor
lds
in
stos
js
jg
int
push
loope
mov
js
sbb
in
lahf
cmp
pop
pop
push
addb
dec
pop
dec
pop
fidivs
add
incl
inc
sti
xchg
pop
cmpsb
xlat
mov
ds
int
push
negb
fcoml
test
test
nop
es
scas
or
pushf
xchg
outsl
orl
adc
int
jge
mov
cmp
sub
lds
je
outsl
popf
mov
jle
adc
sub
push
jo
stc
pusha
jmp
dec
mov
cmp
in
push
int
ret
cltd
mov
cmp
lods
xchg
add
scas
or
sub
jl
sbb
inc
repz
lea
aas
hlt
leave
int
inc
scas
shr
add
xor
out
sbb
fnstsw
jge
fstpt
aas
sub
or
pop
stc
in
movsb
fs
push
cld
pop
add
gs
loopne
pop
sub
dec
or
popaw
pop
or
mov
out
xchg
clc
lret
int
mov
cmc
jle
cmp
outsl
sub
inc
popf
xorb
call
stos
mov
pop
mov
addr16
inc
es
stc
addr16
sub
sti
dec
lea
xchg
and
add
test
fcoms
in
xlat
daa
mov
sbb
cld
mov
push
arpl
fldl
mov
mov
lret
pushf
dec
xchg
out
jnp
adc
je
cmc
dec
jge
jle
sbb
pop
aam
out
imul
popf
aad
jmp
jnp
mov
repnz
lods
test
push
cs
lahf
mov
test
jns
sti
push
rol
jno
outsl
inc
or
pop
bnd
pop
out
int
cld
cmc
cmp
test
cmp
add
add
mov
adc
insl
iret
pop
and
mov
test
pop
rol
imul
pushf
inc
xor
lock
pop
cld
pop
or
mov
or
pop
dec
sti
data16
lock
lods
pop
aaa
ds
push
or
xchg
jns
adc
lds
sbb
sbb
sti
test
stos
push
sub
std
xor
pop
pop
jecxz
cmc
cmpsl
in
mov
sarb
in
xor
inc
ljmp
mov
dec
and
pop
adc
lret
dec
jns
cld
pop
inc
inc
int
test
or
xor
mov
ss
fcomps
lock
js
int
negl
ret
ficompl
adc
dec
push
lcall
mov
cmp
dec
addr16
popa
mov
xor
rclb
sbb
and
test
test
jecxz
or
pop
push
mov
loope
fisttpll
xlat
add
imul
xchg
aas
loope
sbb
insl
in
dec
pop
mov
push
sbb
mull
fcoms
pop
inc
jge
xor
pop
leave
adc
jp
dec
pop
mov
in
cmp
repnz
stos
push
xor
adc
add
jecxz
mov
ja
arpl
insl
in
jbe
jae
mov
frstor
dec
sub
jecxz
in
mov
add
push
addps
sbb
jp
lods
push
in
pop
add
sbb
push
sbb
mov
mov
negl
je
push
shrb
mov
mov
mov
pop
inc
lods
adc
dec
pushf
stc
mov
sub
dec
sub
js
out
cmovl
xchg
jb
push
das
sbb
xchg
ret
cmovp
cltd
movsb
aas
iret
push
scas
shlb
sbb
daa
and
pop
cmp
push
cmp
sbb
scas
jmp
sahf
mov
lods
mov
mov
pop
jle
test
scas
ss
pop
call
inc
mov
push
rcrb
dec
fstl
js
xchg
mov
mov
ja
rcll
loopne
pop
mov
repnz
fstpl
pop
cmp
cmp
jnp
pop
mov
ds
mov
add
sub
sbb
dec
add
dec
stos
inc
popf
mov
mov
inc
sbb
jb
icebp
fdivl
sub
stos
sbb
inc
push
shlb
jmp
jbe
iret
lret
cmp
pop
pop
sti
daa
xorl
pop
ljmp
jge
repnz
and
pop
jle
cli
cmp
in
mov
xchg
push
sti
xor
mov
xchg
fstps
repz
pop
sti
roll
sahf
adcl
sbb
dec
imul
enter
mov
lock
into
loope
pop
xchg
sbb
sbb
dec
push
mov
pop
mov
ljmp
popf
fcmovb
add
push
loop
pop
pop
cmp
dec
sub
add
popf
sarl
cmp
dec
pop
outsl
aaa
xor
cmp
push
out
inc
add
inc
jb
cltd
jp
addps
sbb
rcrb
jbe
stos
lret
imul
push
movsl
inc
mov
popa
jae
mov
pop
pop
and
mov
mov
mov
xor
orb
mov
mov
das
loop
scas
test
jae
adc
dec
push
push
aad
and
pop
je
mov
sbb
data16
js
pop
js
push
add
xor
dec
popf
push
xchg
das
xor
mov
lods
in
test
pop
adc
push
mov
lods
lcall
and
jecxz
lea
mov
stc
imul
adc
cs
sarl
fildl
lods
add
mov
mov
mov
pop
lret
jne
jae
pop
sub
add
xchg
dec
pop
jb
repnz
fs
std
jle
scas
or
mov
pop
cmp
ljmp
cltd
rcr
in
lahf
inc
repnz
fildl
sbb
pop
dec
jp
jb
xchg
push
lret
fwait
add
cltd
cmp
jp
jle
repnz
pop
scas
push
aas
pop
loop
and
pop
pop
jnp
dec
pop
jp
cmc
push
mov
outsb
pop
ret
or
neg
pop
lods
clc
pop
push
int3
mov
in
int
ret
push
aaa
lcall
jecxz
lret
pop
and
test
hlt
mov
jo
adc
cmp
out
sbb
test
bound
jmp
or
push
neg
sbb
push
mov
sti
and
sub
jo
pop
pusha
sbb
cli
sbb
out
push
mov
dec
mov
pop
dec
sahf
inc
fisubrs
dec
adc
fldcw
mov
cmp
and
lock
repnz
stos
mov
mov
out
xor
push
xor
fldl
mov
jo
scas
dec
adc
xchg
dec
xor
and
bndldx
loope
aad
pop
fmuls
rorl
xchg
mov
in
push
mov
pop
pop
pop
mov
lret
pop
lods
fimuls
pop
ja
outsl
inc
pop
shll
int3
mov
stos
mov
add
mov
dec
test
fsubp
sbb
pop
adcb
mov
int
dec
mov
pop
iret
jge
fdivs
mov
inc
sub
pop
out
ret
lcall
mov
mov
sahf
repnz
shll
jecxz
add
shl
mov
adc
add
dec
scas
xchg
push
mov
pop
test
push
sbb
pop
lea
rorb
push
mov
push
xchg
pop
sub
push
jg
add
cmp
mov
cltd
pop
leave
sub
repz
pop
xchg
sub
aas
lret
popf
sub
xchg
push
fldt
jmp
pushf
or
inc
xor
test
jb
xchg
pop
sub
dec
pop
sarb
pusha
out
shll
and
push
lcall
sub
aam
int
push
mov
mov
outsl
xchg
test
fs
pop
push
pop
adc
test
dec
ret
push
stc
int
mov
cmp
mov
cwtl
pop
xor
pop
ret
stos
mov
cmpsl
sub
gs
and
shrl
pop
jge
mov
mov
stos
sbb
jg
outsl
test
inc
pop
cwtl
fldt
xchg
imulb
cmp
jns
pop
imul
in
push
popa
adc
sub
jecxz
jecxz
jne
pop
mov
add
subb
cmp
push
inc
pop
pushf
mov
lahf
pop
push
mov
and
push
xchg
icebp
add
cwtl
push
mov
jmp
pop
push
pop
mov
outsl
cmpsb
pop
loopne
push
jbe
sub
es
pop
rcl
scas
jl
movsl
fidivl
jb
fistpll
inc
cmpsl
int3
sbb
clc
mov
dec
or
jp
daa
pop
dec
in
push
or
mov
lret
add
add
mov
pop
in
sti
pop
ret
dec
shrl
jbe
pop
test
push
sub
gs
scas
sbb
xchg
inc
dec
shrl
int3
stc
out
mov
mov
ss
cli
nop
or
sbb
pop
pusha
jge
add
int3
push
pop
pop
jae
ficoml
dec
sub
xchg
out
fcomps
add
pop
lods
push
cmp
ja
arpl
mov
pop
int
jl
adc
into
add
in
xchg
lds
pop
fwait
mov
mov
aaa
fisttpll
gs
bound
push
popl
imul
out
fdivrp
mov
mov
lret
sub
lahf
pusha
pop
leave
or
stos
int
jo
xor
mov
pop
mov
fcoms
pop
fdiv
lea
movsb
imul
lds
jg
jle
pop
stos
adc
lods
pop
shll
push
pop
and
xchg
sbb
dec
push
sub
pop
xchg
add
pop
pop
mov
xchg
jg
or
jns
pusha
movsl
push
xchg
sbb
xchg
std
fcomps
daa
pop
sbb
je
fbstp
pop
pop
cmp
sbb
insl
iret
repnz
fidivrl
int3
mov
jp
and
sbbb
xchg
mov
stc
movsl
mov
xchg
fstp
outsb
rcr
inc
aad
sbb
jmp
push
mov
jmp
lcall
jno
fwait
and
outsb
push
scas
xor
cltd
fimull
dec
ja
dec
sbbb
jnp
add
push
jo
loop
xchg
out
ds
stc
rcrl
sbb
js
dec
lods
cmp
sbb
pop
push
jp
daa
jbe
cmp
adc
out
sub
pop
sarl
xchg
out
mov
push
int
push
cmc
and
or
iret
pop
lea
pop
ljmp
das
jo
jmp
pop
cmc
inc
cmp
int
sub
int3
cwtl
sub
mov
xchg
dec
mov
pop
lret
sbb
mov
or
lret
add
jne
lea
or
imul
dec
test
shlb
into
jbe
mov
cltd
fisttps
fwait
pop
add
jo
adc
cmp
inc
stc
pop
lcall
int
fsts
pop
lcall
je
push
adc
or
push
es
popa
rcll
bound
dec
sbb
arpl
pop
cmp
sbbb
adc
pop
pop
lock
aad
xchg
jge
jnp
cwtl
in
aaa
pop
add
and
pop
mov
lret
pop
cld
lods
push
mov
or
in
pop
bound
int
add
lahf
pop
xor
and
adc
sbb
nop
daa
or
sbb
sbb
pop
lock
pop
pop
and
loopne
in
movsl
push
lea
int
cmp
mov
jo
mov
xor
pop
nop
pop
fstpl
sti
popf
ret
jno
sahf
and
and
xor
pop
jl
sbb
pop
int
insl
std
scas
add
push
jnp
dec
movsl
sbb
jbe
or
mov
sub
pusha
negl
jb
imul
mov
mov
pop
push
xchg
test
add
imul
fistps
xchg
or
wbinvd
bnd
pop
test
insl
xor
push
dec
lds
pop
push
dec
mov
lahf
xchg
iret
cwtl
test
lods
pop
pusha
test
sub
xchg
call
cmc
pop
xchg
movsl
jp
ret
mov
mov
or
and
inc
push
jnp
lret
sbb
adc
dec
mov
test
dec
in
push
pop
cmpsb
push
into
loope
add
xor
and
mov
addr16
cmp
lret
pop
lcall
and
mov
jbe
pushl
mov
push
stos
gs
std
pusha
cmp
jnp
cwtl
insl
popf
insb
sbb
mov
les
pushf
orl
fisttpll
jge
xchg
out
rorl
pop
push
adc
and
aam
jecxz
pop
cmpl
mov
pop
sti
ljmp
pop
es
xor
in
shrl
pop
leave
push
insl
cmp
adc
mov
dec
sbbb
aas
cld
int
sub
lahf
mov
bound
xor
std
or
insb
dec
sub
add
and
ja
mov
dec
mov
mov
sbb
inc
inc
push
lahf
push
dec
pop
mov
cmp
pop
mov
cmp
test
sub
fimuls
out
mov
cltd
lret
cmp
fcompl
shrb
sub
ljmp
out
sbb
stos
sub
pop
cli
or
cmpsl
jbe
data16
pop
sub
ss
pop
repnz
push
nop
mov
loopne
push
sbb
lahf
pcmpeqb
fnstcw
mov
into
pop
jno
or
pop
repz
fucom
ljmp
or
lea
arpl
fucomp
pop
xor
and
sbb
out
pop
dec
inc
sub
pop
sti
punpckhbw
pop
push
push
mov
mov
or
cmp
xchg
pop
mov
jmp
xchg
sbb
inc
mov
mov
jg
scas
and
cltd
inc
ss
stos
push
mov
pop
scas
clc
fstpl
push
in
push
mov
or
pop
lods
or
mov
pop
pop
lahf
push
mov
fst
js
repnz
mov
ret
pop
mov
sub
dec
pop
xor
mov
pop
inc
mov
jg
sbb
pop
sub
inc
out
mov
pop
sbb
pushf
ss
sub
scas
adc
pop
mov
fmul
dec
fldcw
mov
outsl
push
dec
mov
mov
mov
sbb
aas
mov
lods
push
ds
mov
int3
cmp
and
add
scas
mov
and
ret
add
or
pop
xor
mov
pop
sub
idivb
pop
jb
add
sbb
rcrl
repnz
fsub
cmp
pop
sub
movsl
scas
mov
mov
imul
or
hlt
inc
pop
cwtl
dec
daa
cmpl
and
push
jb
sbb
adc
pop
lahf
sub
jbe
jle
fscale
push
in
mov
lods
dec
ror
andl
jns
pop
jecxz
popf
pop
incb
sbb
dec
fidivl
in
sub
jo
ss
stc
enter
stos
inc
push
pop
cwtl
ljmp
pop
rorb
dec
aaa
and
int3
sbbl
test
add
lods
mov
sbb
lea
pop
pop
outsb
inc
dec
mov
pop
xor
mov
xor
and
test
and
enter
in
pop
cmp
and
lret
cld
aam
pushf
rolb
jb
subb
inc
and
int3
mov
movsb
div
adc
jmp
and
pop
xor
rcrl
fdivr
mov
pop
push
fimull
cmp
dec
hlt
jo
pop
mov
repz
push
mov
dec
js
jae
stos
xor
pop
stc
inc
or
cli
or
pop
int
cmp
mov
test
adc
pop
fwait
push
lret
jne
jo
call
rcr
pop
adc
pop
dec
and
test
or
cmp
stos
pop
adc
jns
or
dec
aaa
pop
add
mov
and
xor
outsb
fadds
pop
test
fldt
scas
pop
lret
xorb
fcmovnu
dec
jg
test
jbe
xchg
je
jo
mov
push
fsub
dec
or
jb
pop
lahf
punpcklbw
sbb
cmpsl
imul
mov
jbe
rcrb
fsts
ja
pop
dec
sbb
stos
scas
cmp
mov
inc
arpl
sub
cmc
inc
pusha
sti
lcall
xor
jecxz,pn
nop
sbbl
push
loop
push
push
and
je
push
mov
into
in
pop
mov
cs
xchg
jbe
scas
inc
lock
mov
or
pushf
jge
pop
sbb
sub
pop
sti
lret
push
int
sbb
xorb
movsb
mov
xchg
or
jg
adc
cwtl
lods
pop
in
loop
call
xchg
pop
pop
scas
imul
scas
sub
pop
ror
push
jb
pop
adc
movsb
shll
xchg
pop
cmp
scas
adc
adc
dec
outsl
ss
lahf
xor
pop
push
rcrb
sbb
add
pop
push
pop
mov
push
dec
adc
dec
adc
stos
mov
outsl
out
pop
jno
xor
jle
sarb
jge
inc
xchg
ret
push
test
jmp
pop
sbb
push
push
in
sub
out
add
pop
jp
mov
or
adc
enter
cli
mov
fiadds
insl
mov
fisubl
loopne
mov
fiaddl
mov
scas
sbb
imul
mov
stos
mov
add
xor
cli
cltd
pop
icebp
not
push
pop
xor
or
adc
and
mov
pop
lret
adc
arpl
jp
roll
push
or
stc
inc
shlb
push
insb
mov
sub
into
mov
cwtl
pop
call
sub
lret
sbb
aaa
mov
cmc
pop
mov
mov
rol
std
out
sub
into
push
in
repnz
sahf
push
cmc
sbb
cmp
frstor
test
sub
int
daa
push
sbb
pop
shll
mov
adc
lcall
mov
push
and
adc
movsb
pop
sub
sub
ret
daa
pop
adc
std
mov
leave
cmp
pop
shll
pop
cli
call
jne
ret
xor
jmp
int
inc
pop
inc
movsl
cmp
adc
inc
pop
scas
dec
dec
xlat
push
pop
pop
int
sbb
icebp
in
push
mov
inc
push
mov
mov
mov
dec
rclb
lahf
div
xor
sti
push
adc
loope
inc
mov
fstpl
or
or
or
push
cmp
add
xchg
test
inc
movsl
dec
lahf
fucom
ficomps
cld
or
pop
incb
xor
repz
lret
inc
fdivl
sbb
or
int
stos
loope
sub
mov
fisttpll
std
cli
pop
stos
mov
push
push
dec
pop
imul
cltd
add
jbe
pop
pusha
jecxz
imul
ja
pop
or
dec
cmp
sub
ss
cmpb
je
pop
or
pusha
in
fcompl
mov
mov
ds
or
xor
sub
and
ja
and
pop
nop
testb
mov
fists
pop
arpl
jae
loopne
test
push
xchg
jle
sbb
aam
sub
push
in
pop
movsl
lret
aaa
out
pop
lds
sahf
mov
inc
mov
pop
lahf
addl
call
and
lret
inc
mov
fstp
mov
pop
arpl
sbb
push
xchg
jecxz
xor
outsl
xchg
dec
lea
repnz
dec
mov
push
adc
pop
pop
fidivrl
jl
jns
pop
jle
pop
inc
push
push
out
and
cli
orl
pop
push
mov
pusha
out
scas
cmpsl
mov
dec
pop
jl
push
and
sub
ja
fsubrs
jp
sub
cld
jo
fldpi
mov
cwtl
mov
pop
mov
mov
insb
cld
fsubrs
idiv
decl
or
nop
ficoml
fs
mov
mov
and
ljmp
add
repz
dec
js
sub
std
fistps
jne
sbb
xlat
jmp
in
push
pop
fdiv
push
cs
lcall
cmc
into
mov
pandn
mov
insl
fdivr
or
and
loop
pop
mov
mov
and
fisttpl
xor
mov
push
and
pop
sbb
pop
mov
inc
sahf
hlt
mov
pop
mov
push
dec
sbb
sbb
dec
cld
pop
push
jl
shll
mov
push
into
js
sub
cmp
add
stc
loop
or
pop
add
inc
int3
add
stos
cmp
repnz
and
mov
lcall
jl
dec
pop
sbb
xchg
call
mov
pop
cs
push
std
pop
addb
pop
incl
xor
inc
or
dec
call
scas
pop
cmp
mov
pop
sarb
int
cmp
push
lahf
mov
sbb
cmp
mov
adc
fwait
lods
andl
fildl
repz
pop
mov
ret
scas
lcall
mov
cmp
sub
pop
mov
bound
pop
pop
imul
add
cmp
pop
push
test
sbb
xlat
pop
mov
pop
sbb
out
add
xchg
scas
dec
push
mov
adc
xor
jge
pop
movsl
dec
pop
mov
sbb
sbb
scas
mov
clc
jo
in
dec
loop
adc
jns
lcall
dec
cmp
daa
iret
mov
pop
or
inc
dec
pop
out
jbe
clc
mov
adc
cmp
pop
test
movsl
xchg
pop
scas
arpl
mov
cmp
xor
addb
or
pop
push
es
dec
mov
push
out
fldl2t
lea
pushf
jge
jae
decl
pop
sub
jl
mov
fbstp
stos
lock
adc
pop
mov
loop
sub
push
pop
or
cmc
mov
stos
sub
fwait
pop
cltd
je
and
rcrb
push
js
pop
sbb
fimuls
imull
xor
sbb
push
cmpsl
mov
and
lods
int3
cli
cmp
push
pop
jb
pop
mov
mov
fidivrl
and
adc
jl
rclb
or
mov
pop
stos
rcrb
sub
xchg
dec
je
sub
mov
shrl
sbb
jmp
in
insl
push
pop
adc
outsb
sub
test
xchg
push
int3
addr16
pop
adc
jmp
mov
xchg
sbb
xchg
sub
push
sbb
pop
and
cmpsb
sbb
xchg
mov
mov
pop
inc
movsl
push
int3
lds
pop
cwtl
lret
mov
push
test
xchg
pop
scas
int
xchg
pop
mov
push
sub
int3
jmp
ret
mov
xor
pop
in
push
fs
add
adc
fldcw
pop
std
scas
pop
fnstsw
mov
movsb
mov
out
sub
xchg
das
in
dec
xchg
cmp
dec
pop
jg
pop
xchg
pop
gs
shll
pop
pop
jae
mov
jns
xlat
jecxz
adc
fs
sbb
xor
mov
jo
sub
insl
or
inc
mov
in
repnz
arpl
cs
sbb
xorl
ljmp
clc
bnd
push
cmp
pop
out
push
xor
pop
adc
mov
pop
and
jbe
inc
stc
out
cmp
push
rcrb
jo
cltd
pop
push
dec
mov
cmp
dec
add
out
adc
inc
jns
sub
scas
mov
push
dec
mov
push
fcompl
movsl
mov
icebp
push
lock
pop
mov
mov
or
jno
jge
je
sbb
mov
es
aas
pop
mov
into
jecxz
call
sbb
fsubrp
xor
stos
sbb
rcrl
sbb
pop
outsl
jb
js
test
adc
jo
push
mov
or
pop
lods
and
ret
dec
and
xor
xchg
scas
xchg
mov
loope
cmp
dec
sbb
int3
cld
leave
test
or
pop
mov
jae
xchg
jge
loopne
dec
or
xor
add
jp
or
mov
fadds
adc
shr
int
dec
nop
shlb
mov
pop
pop
in
test
cltd
push
mov
les
pop
xor
sti
arpl
ljmp
push
lock
mov
popa
lret
out
jo
mov
test
leave
sub
test
or
xchg
in
bound
jp
jmp
fildll
insb
pop
stos
mov
xor
adc
xchg
xchg
dec
es
and
scas
cld
fsubr
adc
jns
sub
push
cmp
test
in
sbb
aad
pop
xchg
jae
sub
seta
repz
dec
sbbb
xor
loopne
mov
lcall
pop
mov
sbb
adc
jb
cmpsl
jbe
dec
je
inc
mov
push
dec
pop
leave
rcll
pop
inc
in
sub
icebp
xor
cli
pop
pop
addl
pop
sbb
add
jp
movsb
xchg
mov
outsl
orl
sub
stc
push
in
fdivrs
insl
pop
sbb
test
int3
sbb
sti
sub
pop
cmp
jmp
or
jno
jle
adc
xchg
mov
pop
sti
int3
pop
iret
lret
insl
andl
pusha
xor
in
cmp
ret
inc
push
xchg
enter
shll
inc
mov
repz
insl
inc
pop
insb
aad
pop
movsl
mov
scas
sbb
jp
data16
push
cmp
add
cmp
pop
fstl
lret
xchg
pop
adc
push
and
mov
pushf
lock
rorl
mov
push
insl
out
xor
dec
nop
adc
cli
push
sub
inc
push
cwtl
pop
mov
xor
inc
js
xchg
fistpl
pop
out
dec
xor
pop
mov
xchg
pop
dec
aam
lea
enter
xchg
lds
sub
cmp
push
pop
das
inc
push
loope
cwtl
pop
jno
out
xchg
dec
outsl
outsb
xor
xchg
int
pop
cltd
test
pop
movsb
pushf
leave
int3
inc
out
jno
shl
xor
cmp
add
or
add
and
pop
pushf
stc
mov
sub
mov
pop
lret
pop
js
push
cld
pop
adc
icebp
dec
xlat
jo
lret
push
cmp
mov
adc
call
dec
lea
xor
jbe
fcmove
in
stos
dec
mov
popf
negl
lahf
mov
push
cmp
arpl
lret
stos
jecxz
xchg
data16
int3
lahf
sbb
aaa
insl
pop
sbb
lods
dec
pop
pop
lcall
cltd
addr16
pop
mov
outsb
das
fs
pop
mov
pop
dec
sbb
sbb
xchg
cmc
or
xchg
orb
sbbb
addr16
es
test
andl
call
loopne
shlb
shll
and
mov
aam
mov
mov
lahf
fs
cmp
ret
adc
pop
pop
xchg
fwait
cmp
ud2
cli
out
pop
cld
loopne
rolb
push
sbb
xchg
int3
fidivl
push
pop
mov
adc
pop
dec
shrb
jbe
adc
lds
mov
int
les
fs
pop
movsb
gs
ret
cmp
rcrb
and
pusha
stc
scas
sbb
mov
jns
subb
pop
rolb
pop
jbe
repnz
or
jle
daa
ds
add
mov
push
out
adc
mov
dec
dec
jecxz
pop
fildl
and
fsubrl
arpl
mov
mov
xchg
sbb
and
sub
xor
icebp
repz
inc
cmp
and
cmp
push
add
fnop
ja
pop
cli
jmp
add
pop
cmp
bnd
mov
pop
insl
bound
lods
sub
adc
fiadds
pop
mov
rolb
add
sahf
negl
sub
movsb
aaa
pop
test
cmp
add
les
call
lahf
mov
mov
adc
pop
jo
pop
std
cs
dec
pop
jmp
mov
mov
add
add
xor
stos
pop
inc
inc
bound
add
or
pop
test
sub
pop
adc
or
jmp
das
push
fistpl
pop
pop
test
aaa
pop
int
rclb
mov
adc
sbb
jle
rclb
pop
and
mov
sub
lea
pop
mov
fdivs
inc
jns
mov
clc
sbb
sub
pop
aas
test
push
mov
out
pop
aam
mov
or
fnstcw
or
push
dec
pop
dec
adc
pop
cmpsb
leave
pop
adc
scas
inc
mov
xchg
dec
idivl
into
outsb
cmp
clc
pop
jge
dec
scas
sbb
inc
pop
and
mov
lahf
mov
repnz
arpl
sub
pop
push
mov
dec
in
pop
cltd
icebp
dec
dec
fwait
push
int
scas
jns
xchg
sahf
popa
jp
pop
sub
lods
ljmp
outsb
mov
sbb
push
jle
sbb
pop
mov
mov
xor
dec
jbe
and
sub
pop
xchg
ficoms
repz
mov
push
pop
inc
mov
out
pop
mov
in
outsb
sar
pop
sub
pop
icebp
xor
lret
mov
push
insb
mov
jb
lcall
sub
pop
add
frstor
push
jb
pop
xchg
xchg
test
dec
ret
scas
adc
pop
sub
jle
mov
rcrb
sbb
jno
or
lods
jmp
cld
outsb
add
inc
dec
pop
pop
aaa
xchg
fucom
dec
sub
and
pop
push
xlat
imul
fidivs
or
push
pop
std
add
pop
sbb
lret
int
sarl
pusha
out
arpl
std
pop
insb
fs
icebp
xchg
shl
pop
and
cltd
gs
lea
sbb
scas
xchg
idivb
stc
push
sti
pop
subl
ret
add
icebp
mov
adc
adc
lods
sbb
mov
pusha
out
loope
mov
sbb
repnz
mov
insl
fstl
mov
int3
jmp
dec
inc
and
std
pop
jl
sahf
dec
fstpl
repz
lahf
ror
loopne
pop
test
sbb
jecxz
insl
jg
aam
fmuls
dec
mov
jo
out
pop
inc
popf
xor
adc
cmp
cltd
mov
lods
pop
and
dec
add
pop
mov
aad
sbb
push
add
add
pop
or
frstor
pop
jns
out
add
loope
pop
add
pop
mov
enter
adcb
mov
cwtl
jp
pop
icebp
insb
es
cli
hlt
mov
pop
pop
xor
mov
cmp
mov
imul
lahf
push
push
inc
addr16
rorb
enter
mov
outsl
pop
mov
fisttpll
xchg
mov
sbbb
sub
test
lds
imul
in
leave
and
mov
mov
int3
or
dec
fcmovbe
fstpl
adc
insl
pop
jl
pop
mov
lret
pop
pushf
xchg
adcb
xchg
inc
lahf
jge
fdivrl
mov
mov
jno
inc
je
int
mov
xchg
inc
pop
outsb
jb
xchg
shrl
call
mov
jne
fnstsw
xor
mov
mov
sahf
pop
pop
iret
int
les
jo
std
pop
lods
mov
add
sub
inc
add
icebp
scas
push
shll
sbb
mov
xchg
fistpl
loop
pop
sarb
pop
fdivp
inc
fsubl
add
aam
imul
mov
cli
rcrb
enter
inc
icebp
push
mov
pop
les
dec
scas
sbb
sub
sahf
xor
daa
and
lods
or
sbbw
adc
mov
aaa
idivl
int
xchg
push
xchg
pop
sarb
jo
pop
fcomps
sub
insl
cltd
cmp
fldl
pop
jbe
mov
loopne
dec
adc
icebp
and
pop
jmp
mov
mov
pop
outsb
pop
inc
enter
pop
jb
cmp
jo
add
sbb
inc
aaa
jno
sbb
or
push
push
jmp
or
andb
jecxz
or
lcall
cli
lock
fmul
xchg
mov
int3
pop
fimull
xor
dec
mov
lcall
pop
cmpsb
push
outsl
push
xor
jp
filds
sbb
jge
mov
mov
pop
imul
fs
out
mov
jnp
jp
mov
in
mov
jns
pop
or
jmp
loope
fldenv
mov
cmpsl
fstl
rcrb
fcomp
icebp
inc
pop
pop
out
cmpsl
add
mov
and
lret
dec
cmp
imul
into
sub
cwtl
fistl
cmc
push
adc
movsl
stc
ret
pop
mov
pop
pop
mov
int
mov
mov
pop
out
sub
or
fstl
xor
lcall
add
or
pop
cmp
push
sub
pushf
pop
dec
cmpsb
jbe
pop
test
inc
imul
je
int3
and
xor
mov
push
lret
cmp
jb
push
vpmuludq
mov
dec
stos
iret
push
xor
pop
push
fistpll
mov
pop
ror
adc
aas
mov
ljmp
dec
lds
sbb
xchg
pop
adc
lea
movsl
lods
cltd
pop
popfw
sub
mov
push
daa
pop
es
fnstsw
sbb
or
sub
jmp
pop
mov
int3
pop
cmp
jle
dec
pop
in
not
mov
sub
fcomps
pop
mov
xchg
push
sti
js
xchg
mov
ja
lods
add
pop
mov
xchg
sbb
out
int3
outsl
and
pop
mov
inc
hlt
mov
daa
cmp
addr16
pop
int3
and
in
xchg
dec
push
jne
lret
std
fdivrl
inc
test
jmp
sub
jl
sub
movzwl
out
and
add
sbb
fcomp
dec
popf
imul
jge
lcall
jae
insl
pop
add
mov
lahf
je
mov
out
or
mov
sub
sbb
dec
cmp
cwtl
sub
adc
cs
insb
clc
or
sub
les
xchg
pop
sub
test
mov
jae
lahf
loopne
leave
movsb
pop
arpl
andl
nop
inc
dec
mov
cmpsl
outsl
pop
lret
xor
test
mov
mov
jle
push
pop
pop
jae
addl
rorl
fsubs
scas
xchg
pop
leave
push
sbb
inc
fistps
sbb
pop
movsl
insb
sub
dec
mov
gs
or
jno
pop
xchg
jl
pop
xchg
pop
and
xchg
lret
insl
jnp
pop
push
popa
xor
pop
enter
add
das
xorb
loope
xor
sbb
inc
sbb
push
inc
fwait
pop
mov
mov
mov
jecxz
sbb
pop
cmp
jne
lea
dec
in
pop
out
push
test
mov
clc
testl
pop
and
sub
scas
js
inc
lret
mov
add
mov
cmp
int3
sub
nop
je
sbb
in
ror
ret
repz
dec
int
loope
ds
push
mov
and
mov
jl
int
or
nopl
into
icebp
js
xchg
fs
jno
pop
je
pushf
int3
dec
mov
sbb
mov
test
xchg
test
fdivrl
or
jg
popa
ss
aad
or
add
pop
sub
push
add
int3
sub
cmp
test
pop
int
sub
push
sahf
mov
jae
ds
stos
cmpsl
dec
xchg
mov
pop
mov
mov
jp
or
push
xor
cmpsb
inc
andnps
mov
add
ffreep
add
add
testb
pop
pop
jo
scas
jle
pushf
mov
mov
call
dec
fidivl
sbb
test
push
pop
outsl
adc
lods
dec
add
xor
mov
push
es
ror
loope
pop
lret
inc
cwtl
or
mov
jge
add
push
pop
outsl
mov
sti
pop
pop
push
sbb
push
into
jb
dec
pop
insl
jno
clc
int
mov
test
lret
aam
jo
pushf
cmpsb
mov
push
jg
gs
cs
ljmp
out
and
add
pop
or
sbb
mov
clc
adc
jecxz
pop
aad
int
mov
dec
or
push
pop
test
pop
mov
daa
popf
into
cmc
sub
outsl
pop
dec
stos
and
int
pop
lods
out
ds
pop
imul
insb
add
pop
pop
or
dec
loop
pop
lods
sar
lods
stos
lahf
push
cli
testb
sub
jo
scas
jmp
rorb
dec
mov
pushf
stc
mov
xor
mov
mov
mov
jle
fsts
mov
jae
into
sub
add
pop
xor
inc
in
outsb
aas
mov
pop
pop
xchg
lods
add
orb
fiadds
mov
adc
dec
jbe
mov
in
int
leave
mov
xchg
mov
xchg
pop
mov
fstps
sti
jns
push
mov
bound
shlb
js
in
xor
push
xchg
out
pop
xchg
sti
sbb
dec
xor
inc
cltd
les
xchg
imul
mov
pop
int3
in
xchg
cmpl
out
jnp
aad
pop
jecxz
fmuls
scas
cmp
sub
add
or
jg
adc
movsl
pop
int3
dec
push
pop
cmpsb
gs
xchg
data16
pop
js
mov
and
iret
fwait
xorb
stos
fists
mov
or
adc
cmp
scas
sbb
loop
hlt
inc
mov
std
repnz
int3
fsub
sbb
movd
and
loope
js
jge
movsl
mov
in
xchg
out
outsb
cld
ret
pop
repnz
jge
pop
popa
loopne
sbb
mov
test
add
scas
xchg
fdivl
sbb
shrb
add
cmp
push
mov
xor
icebp
lods
sbb
pop
mov
fprem1
inc
sti
popf
pop
rcl
arpl
lcall
fistpll
jecxz
sahf
inc
sub
xor
roll
loopne
or
pop
pop
addr16
mull
pop
mov
mov
imul
lret
sub
jb
lea
inc
jle
cmp
pushf
or
add
pop
dec
lcall
cmp
pop
adc
dec
and
pop
push
mov
jae
popf
jl
leave
mov
mov
xchg
hlt
lea
or
inc
mov
pop
bound
jne
cmp
add
ja
movsb
lcall
loop
add
add
mov
je
repz
cmp
mov
sub
mov
xchg
push
lcall
aad
inc
mov
scas
insb
pop
sub
mov
les
stos
and
pop
sbb
test
mov
fs
jmp
cmpsb
pop
sbb
rcrb
cld
pandn
rcll
dec
sbb
or
fidivrl
pop
sub
pushf
in
cltd
into
mov
cltd
and
into
mov
sub
popa
scas
push
jmp
mov
out
stos
insl
arpl
iret
or
mov
scas
mov
sub
enter
stc
repnz
call
scas
cmp
xchg
lcall
ror
xor
shl
scas
sti
dec
ret
dec
lea
pop
push
or
sbb
loop
testb
test
test
repz
rcrl
mov
adcb
iret
int3
pop
pop
es
sahf
mov
or
xchg
dec
cmpsb
fistl
test
loop
pop
pop
push
enter
aaa
or
mov
dec
cltd
je
xor
pop
mov
sbb
jmp
mov
movsl
pop
mov
movsb
sub
jns
pop
psrlw
adc
jl
dec
lret
pop
repnz
sub
push
xor
pop
xchg
sbb
out
outsb
sub
nop
mov
inc
or
pop
inc
stos
xchg
lods
ss
push
scas
push
adc
int3
pop
adcl
fistl
outsb
jno
cltd
jbe
iret
or
mov
sbbb
pop
lret
stc
pop
pop
or
xor
and
jecxz
fistpll
cmpl
add
je
pop
leave
mov
jns
xchg
dec
insl
aas
or
lcall
push
fistps
scas
xchg
data16
jge
loopne
jnp
mov
push
shlb
sbb
lock
pop
jecxz
jb
aas
bound
sbb
cld
dec
and
sbb
add
test
sub
pop
push
aam
mov
jno
mov
or
jecxz
js
iret
jecxz
add
imul
and
jp
pop
adc
xchg
jae
cltd
outsb
pop
daa
shrl
xchg
outsl
repz
jns
stos
sti
test
inc
dec
adc
dec
pop
fwait
pop
adc
pop
outsb
and
xor
mov
jo
cmp
out
fsts
cmpsl
pop
outsl
mov
sbb
idivb
jecxz
shll
pop
ret
mov
arpl
std
push
xchg
dec
icebp
clc
mov
hlt
mov
fistps
pop
enter
aaa
jge
push
mov
sub
mov
iret
jg
fst
scas
xorb
mov
in
jge
xchg
scas
rclb
imul
fisttpll
je
pop
ljmp
loope
int
in
std
popf
dec
push
cmp
pop
jns
cmpsl
add
lahf
insl
shll
mov
push
ss
sbb
pop
add
fsubrs
inc
xchg
cmp
mov
stc
mov
or
scas
push
add
sbb
mov
jle
fisubs
fstps
shrl
sub
pop
pushf
jmp
mov
pop
es
xchg
or
sbbb
and
into
aad
rcrb
jp
sub
out
mov
scas
pop
jns
mov
mov
xchg
jbe
mov
dec
lods
cltd
mov
iret
sbb
sbbb
int3
mov
pop
int
or
das
shll
mov
cli
and
fstl
xor
fsubrs
push
pop
xchg
and
mov
mov
mov
cmc
int
sub
cmp
xchg
pop
pop
cli
mov
cmpsl
ja
es
push
jecxz
mov
adc
mov
cmp
js
ret
pop
add
test
adc
fdivrl
push
call
fstl
jnp
pop
gs
cmp
cmpsb
sub
mov
sbb
fwait
pop
sti
iret
loop
pop
int
cmp
mov
stos
pop
jbe
lock
adc
jno
mov
faddl
jb
repz
pop
hlt
cltd
fldl
dec
pop
imul
ja
dec
lea
aaa
inc
divb
fcomi
enter
inc
lods
cli
mov
mov
out
jb
sub
jmp
in
pop
adc
xchg
aas
cmp
mov
inc
call
in
je
pop
mov
push
lret
pop
mov
test
sbb
stos
xor
push
sbb
in
mov
cli
or
xchg
mov
inc
jp
in
pop
les
sbb
sbb
sbb
int3
outsb
fwait
lahf
pop
mov
icebp
pop
fmuls
insl
and
test
addl
xchg
cmp
mov
out
jbe
push
jg
jb
lea
in
xlat
inc
int3
sub
jecxz
vcvtdq2ps
test
inc
push
jbe
daa
cwtl
mov
adc
add
incb
inc
mov
ljmp
push
pop
dec
dec
jle
aad
movsl
pop
ret
rclb
pop
push
mov
mov
mov
popf
mov
adc
inc
shll
leave
dec
xor
mov
pop
in
clc
mov
mov
cmp
ja
cmp
js
pop
push
push
jle
adc
scas
cmp
dec
dec
fcoms
pop
int
and
pop
adc
int3
push
pop
xor
test
adc
push
or
jbe
nop
stc
in
popf
fnsave
xchg
dec
inc
ret
sahf
pop
icebp
cmp
push
push
fucomip
jbe
pop
jno
sbb
cli
or
pop
pop
fwait
mov
leave
sbb
pop
int3
loopne
std
jno
sbb
xchg
mov
fcmovb
int
or
mov
fistpl
mov
pop
or
int
mov
add
cmpsl
pop
ds
mov
lcall
mov
pop
int
add
mov
pop
cwtl
cli
sbb
mov
mov
pop
push
loopne
test
scas
sbb
mulb
rclb
fs
xlat
enter
xor
xrelease
dec
mov
mov
test
jnp
rorl
idivb
sub
movsl
in
and
lret
jo
leave
pushf
mov
push
sarb
or
inc
xor
pop
bound
int3
adc
popa
inc
jno
pop
negl
test
cmp
cmp
shl
mov
cmp
lods
ds
mov
mov
sbb
hlt
mov
jmp
mov
mov
pop
scas
or
dec
xchg
jo
cmpl
int
dec
pop
mov
adc
cmp
ret
scas
mov
or
outsl
out
xchg
call
mov
sbb
xor
iret
repz
mov
mov
mov
in
push
sahf
scas
jns
loope
test
mov
and
jb
mov
inc
mov
int
push
and
dec
sbb
push
mov
push
test
xchg
pusha
ficompl
mov
mov
mov
daa
shlb
mov
pop
jbe
add
scas
adc
fstpt
int
cmp
test
sbb
sub
nop
ss
bound
arpl
int
je
sbb
mov
imulb
sbbb
stos
ja
mov
mov
imul
or
jecxz
insl
adc
roll
pushl
add
xor
icebp
int
jg
mov
and
ds
sbb
dec
sub
mov
cli
pop
cmp
sub
or
inc
sbb
adc
ds
into
les
inc
mov
mov
pop
out
mov
int
jo
or
mov
xor
push
adc
xchg
and
xor
mov
mov
inc
jne
and
xor
cmp
jecxz
jmp
mov
or
mov
fsubrs
cltd
pop
test
or
lahf
fildll
or
repnz
xchg
xchg
fsubs
pop
push
shll
push
pop
insl
les
sbb
shlb
mov
and
imul
jge
insb
mov
test
mov
stos
pop
cmpsl
jecxz
cmp
push
adc
dec
test
scas
pop
ret
mov
pop
jb
cmp
and
pop
add
dec
js
mov
lods
das
mov
scas
pop
popa
fimuls
xchg
and
fdivr
sbb
pop
subb
xchg
movsb
aas
lret
shll
and
sub
aam
fsubr
rcrb
push
inc
inc
aaa
int3
das
repz
ficomps
ja
pop
in
dec
iret
sub
roll
movsb
jb
sbb
xorb
mov
lds
stc
pop
cmp
cmp
repnz
fldcw
inc
jno
sbb
dec
filds
pop
mov
lcall
fbstp
or
clc
mov
ret
mov
jecxz
fstp
pop
pop
imul
pop
cmc
roll
mov
mov
pop
pushf
mov
and
jae
pop
jb
add
fistl
or
cmp
add
jns
cmp
sbb
out
mov
push
popf
pop
dec
inc
int
aaa
fdiv
jmp
jbe
cmp
sub
out
test
mov
xchg
cmp
data16
pop
inc
pop
dec
sbb
xchg
xchg
out
mov
pop
xchg
mov
inc
mov
subl
push
fbld
or
les
xchg
mov
sub
pop
sbb
jbe
ud1
jae
jno
dec
sub
pop
mov
jb
jbe
push
lods
pop
push
xchg
mov
sbb
mov
insb
stos
stos
dec
mov
fisubl
add
mov
pop
or
push
push
inc
dec
cltd
pop
repnz
lahf
push
fistpl
push
jne
pop
test
inc
jb
xchg
aaa
out
daa
xchg
xorb
ds
mov
pop
les
test
pop
sbb
or
pop
mov
fs
pop
call
lds
adc
sbb
mov
push
xchg
pop
addl
jge
dec
pop
arpl
xchg
jns
ret
data16
sub
mov
mov
pop
cs
inc
or
into
push
int3
pop
pop
out
sbb
mov
stc
or
pushl
dec
xchg
lods
add
pop
and
push
fdivp
scas
sbb
mov
jnp
js
test
mov
add
or
scas
dec
push
mov
jge
jne
je
fucomp
mov
mov
fcoml
xchg
xchg
pop
cwtl
imul
inc
in
add
ja
pop
sbb
jle
adc
inc
dec
pop
call
add
int
rcrl
pop
fcmovnb
cmp
pop
xchg
fcoms
mov
mov
sbb
sbb
es
push
push
pop
mov
imulb
sub
inc
sub
pop
xor
or
xchg
cmp
out
into
cmpl
or
cmp
mov
mov
cmp
sbb
ret
inc
xchg
jbe
ret
pop
imul
mov
mov
mov
int
mov
xchg
mov
xor
pop
ljmp
or
int3
mov
mov
pop
push
mov
cwtl
push
lock
icebp
pop
dec
sub
sbb
les
add
push
lcall
and
sbb
xchg
int3
pop
mov
pop
pop
sbb
pop
shr
push
pop
sub
push
pop
mov
int3
lea
out
lret
int
aam
add
outsb
mov
mov
les
and
flds
js
pushf
imul
jp
adc
cmp
jg
jne
sub
adc
sahf
cltd
mov
outsl
test
fildl
pop
or
fimuls
cmpsb
hlt
pop
int3
pop
or
int
pop
imull
in
pop
sbb
mov
dec
sti
sub
jno
mov
cltd
and
adc
scas
int3
add
pop
jl
fdivs
aam
pop
sbb
shl
pop
xchg
jge
pop
hlt
xchg
dec
dec
lahf
push
pop
out
aaa
adc
test
xchg
sub
or
xchg
cld
pop
pusha
jne
and
jp
pushf
or
jo
pop
mov
push
sarl
pop
add
lock
cmp
pop
jbe
lret
adc
mov
aam
pop
scas
ja
cmpsb
add
add
cli
fdivs
jecxz
mov
pop
imul
mov
jge
loop
fwait
gs
hlt
mov
movsl
cmp
scas
jge
dec
fs
xchg
dec
movsb
lods
pop
out
mov
mov
and
mov
hlt
scas
cmp
jmp
and
cmp
call
xchg
push
push
cmp
loopne
mov
xchg
mov
dec
jne
lahf
fnstsw
mov
adc
int3
shr
inc
jmp
mov
inc
pop
or
test
xchg
ljmp
lahf
push
insl
pop
lret
lahf
loop
mov
out
hlt
jl
and
mov
push
dec
push
fs
int3
pop
popf
cmp
dec
addr16
pop
mov
cmp
adc
fidivl
xlat
mov
cmp
loope
fiaddl
int
or
fstpl
fdivp
repz
in
mov
sahf
das
mov
inc
fidivl
mov
sbb
sahf
mov
mov
shlb
push
sbb
cmpsb
scas
sub
jg
dec
loope
or
loop
push
gs
push
je
push
xchg
pusha
push
mov
pop
push
stc
mov
and
xchg
mov
enter
xchg
lahf
mov
decb
lahf
shrb
mov
lock
popf
mov
outsb
pop
push
xor
mov
lcall
ss
sub
bound
cmpsl
xor
stc
mov
fisttpl
dec
and
mov
subl
inc
push
pop
xchg
out
movsb
pop
sub
mov
mov
jp
mov
dec
popf
add
ss
mov
inc
nop
in
sub
pop
and
fwait
sbb
arpl
mov
push
dec
loop
cmp
dec
sarl
test
jno
xchg
mov
pop
jbe
pop
sarb
push
rcll
jle
rcrl
fnsave
push
out
mov
pop
cmp
pop
xor
jno
sbb
loopne
cmp
scas
inc
mov
cmp
xchg
leave
xor
mov
pop
jp
test
or
adc
movsb
daa
dec
xlat
cmp
arpl
cmp
push
cwtl
sbb
or
insl
cmp
pop
gs
pop
or
test
sbb
out
sub
pop
enter
loopne
pop
jno
insb
sub
pop
je
xchg
ja
jnp
cmp
cmpsb
pop
pop
mov
pop
pop
outsl
dec
jbe
adc
pushf
jg
pop
pop
rol
inc
jmp
and
sbb
jg
repnz
pop
push
dec
or
pop
fstl
mov
outsl
int3
pop
ljmp
loopne
adcb
sbb
or
mov
mov
out
les
dec
mov
test
pop
mov
fisttpl
leave
mov
cli
add
mov
lock
lds
dec
pop
add
mov
xor
or
sub
sahf
ret
xchg
dec
pop
scas
pop
cmp
jp
push
push
xlat
sub
fwait
pop
add
jle
insb
jo
pop
inc
jmp
dec
negl
pop
lods
mov
pop
mov
sub
sbb
pop
iret
mov
mov
xchg
adc
daa
lret
lods
mov
mov
inc
mov
push
sub
daa
fstps
adc
pop
inc
push
ds
std
xchg
push
das
loopne
push
imulb
sbb
and
clc
mov
lret
adc
push
mov
mov
xor
jg
sbb
mov
stos
sbb
pusha
mov
mov
sbb
jnp
negl
push
sub
jae
stc
xchg
jno
xchg
pop
roll
and
mov
mov
xor
adc
inc
pop
insb
outsb
scas
xor
pushf
inc
sbbb
test
sti
int3
adc
pop
adc
and
adc
cmp
pop
cltd
dec
aas
js
add
mov
stos
jbe
push
ss
mov
loope
inc
xor
pop
enter
aas
jb
xchg
lahf
adc
bound
adc
mov
jbe
enter
ds
lret
push
pop
pop
int
jmp
pop
into
stos
orb
sub
cs
mov
jp
pop
inc
lcall
pop
mov
rolb
xor
jmp
sub
jns
mov
pop
lds
int
push
imul
dec
js
mov
and
jbe
pushf
adc
std
add
jb
jle
pop
and
adc
pop
sbb
and
lock
imul
push
jb
pop
dec
mov
mov
xchg
pop
repnz
or
mov
les
fistl
sub
pop
testb
xor
xchg
cltd
xlat
xchg
jo
mov
jle
lods
mov
dec
sbb
cmp
or
pop
jno
or
int3
xchg
adc
iret
bound
in
inc
or
pop
rcr
dec
push
test
pop
ret
daa
mov
inc
lahf
adc
inc
ds
andl
inc
pop
xor
jmp
or
data16
stos
test
fstpt
adc
cltd
daa
pop
add
lahf
popf
xor
js
jp
repnz
pop
jmp
pop
fnsave
add
mov
jbe
pop
mov
ja
cwtl
mov
scas
cwtl
int
sbb
mov
xchg
cmpsl
loop
and
std
jae
out
ljmp
pop
mov
addps
js
mov
fs
movsb
pop
incb
data16
ja
xor
out
dec
mov
pop
pop
test
cwtl
and
add
pop
jl
fwait
dec
add
mov
pop
cs
and
scas
loop
insb
in
stos
in
movsl
dec
loopne
mov
sbb
jl
repz
add
in
sbb
xchg
movsl
push
xlat
fcomi
cltd
repnz
out
xchg
xchg
mov
pop
hlt
hlt
or
orl
pop
pop
mov
out
and
dec
push
int
pop
dec
das
sti
addr16
sbb
dec
xchg
xchg
push
or
mov
xor
ret
inc
xchg
adc
mov
cmp
fcmovb
sub
jns
push
cmp
aam
push
mov
cmp
sbbb
insl
inc
jo
lea
in
dec
bound
pop
int
mov
call
scas
pop
mov
fists
adc
mov
mov
mov
testl
loope
aam
pop
jge
out
ret
movsl
sbb
mov
shl
or
lret
adc
sub
xlat
xchg
or
cmp
popa
pop
ret
clc
xchg
push
mov
pop
push
ret
jne
outsl
xor
or
or
ds
out
push
jg
lret
sub
jns
imul
xor
jbe
jne
sbbl
out
pop
or
adc
test
addr16
mov
or
pop
xchg
jb
inc
pop
aas
mov
mov
in
xor
or
jo
fcoms
aad
clc
push
dec
pop
sti
shrb
jmp
movsl
sbb
stos
into
pop
mov
aas
pop
fs
ljmp
lods
xchg
clc
mov
inc
cmp
jb
ficomps
mov
aas
xchg
jae
stc
pop
lret
in
mov
pop
xchg
or
int3
addr16
pop
cmp
sbb
push
xor
push
mov
lds
push
add
xor
pop
or
scas
xchg
leave
les
sbb
inc
das
outsb
loopne
pop
movl
push
fistps
gs
shrl
in
mov
insl
cwtl
jno
push
mov
sbb
sarb
jb
adc
push
pop
adc
loop
jge
add
or
mov
sbb
into
out
inc
xor
mov
stc
pop
pop
int
cmp
cmpsb
push
test
add
outsb
je
pop
push
pop
mov
or
ljmp
xor
add
xchg
fidivrl
pop
jb
jle
fstpl
cld
push
push
sbb
mov
clc
inc
jno
sbb
fs
dec
or
mov
clc
inc
pop
pushf
push
mov
xor
jp
lret
pop
out
int3
insl
in
scas
aas
mov
sub
dec
ror
icebp
mov
lcall
add
pop
repnz
cld
aaa
pop
ds
vandps
xchg
out
sar
fisubs
int
out
sub
push
stos
xchg
adc
adcb
movsl
pop
clc
addr16
fldcw
adc
or
jecxz
scas
or
mov
repz
adc
push
or
out
mov
lahf
xor
lods
ficoml
arpl
leave
pop
mov
sbbb
adc
inc
cmp
add
mulps
int3
mov
inc
pop
imull
cmp
sarl
pop
jbe
cmpsl
pop
aas
sbb
sub
jl
pop
mov
movsl
push
movsb
pop
and
mov
cwtl
cmpsb
negb
lret
cmc
adc
pop
nop
les
xchg
lret
lods
pushf
outsb
or
jge
sbb
fmuls
xor
mov
and
cli
sbb
pop
fnstsw
add
dec
lret
xor
adc
or
std
pop
add
jb
inc
and
push
insb
sti
jo
adc
pop
in
sbb
aad
int3
add
pop
cmp
mov
mov
mov
int3
lds
adc
adc
mov
pop
sbb
ror
fimull
pusha
mov
push
mov
push
into
enter
fcompl
jnp
xor
dec
scas
add
push
sbbb
fwait
lods
sahf
or
mov
pop
inc
mov
adc
or
xchg
xor
lods
cmp
loopne
mov
adcl
mov
popa
mov
insl
cli
aaa
mov
in
or
int
enter
pusha
push
data16
aam
mov
lea
mov
aaa
xor
nop
pop
add
push
gs
out
xchg
lret
and
or
pop
adc
push
cmc
pop
and
ljmp
aas
pop
add
pop
push
pop
or
add
int3
decl
mov
lahf
mov
dec
mov
rcrb
jecxz
push
dec
push
lahf
lret
xchg
cmp
pop
rolb
inc
and
adc
sbb
dec
in
pop
js
pop
loopne
out
cld
push
dec
stos
or
jbe
mov
daa
pop
push
push
sbb
mov
fstps
xchg
or
pop
add
xor
pop
sbb
fs
sbb
sbb
mov
cs
lods
sbb
sub
pusha
push
ret
pop
cli
mov
sub
out
jbe
pop
cwtl
lods
fidivl
and
xchg
psubusb
stos
mov
ljmp
in
mov
js
sub
pop
stc
mov
test
mov
pop
xchg
dec
subl
int
fistps
jmp
jb
jnp,pn
popa
cmp
fdivrs
lea
adc
push
outsl
cwtl
lds
iret
push
add
jge
icebp
jl
pop
cmp
in
mov
int
or
adc
inc
sub
pop
mull
jbe
jge
pushf
pop
in
je
rclb
movsb
inc
sub
or
imul
dec
jns
pop
ja
stos
add
fs
adc
mov
pop
inc
lcall
or
rclb
pop
dec
scas
addr16
lds
call
fwait
or
scas
stos
mov
jg
or
nop
mov
out
mov
icebp
lretw
push
inc
pop
cmp
pop
dec
mov
or
andb
or
loop
push
pop
pop
cwtl
or
and
test
sbb
flds
gs
mov
fdivrl
push
sbb
inc
mov
stos
jno
icebp
or
push
lods
scas
fldl
jne
fnstcw
dec
xchg
sbb
or
cld
shll
xchg
stos
insl
scas
lea
dec
fnsave
sbbl
xor
pop
loopne
les
pop
jnp
jecxz
insl
mov
adc
adc
sti
scas
mov
xchg
mov
lods
pop
and
pop
mov
mov
gs
aaa
ljmp
lret
or
repnz
pop
pop
dec
push
loop
or
and
cmp
cmpsb
jno
pop
adc
sbb
pop
mov
xchg
leave
pop
sub
add
mov
lock
sti
sbb
inc
push
inc
pop
jne
sti
lods
and
or
sub
lret
jo
out
push
push
int
mov
push
jns
mov
mov
cltd
in
fimull
xchg
jb
ss
xchg
jp
cmpsb
xlat
mov
ret
mov
in
inc
int
sbb
jmp
xor
arpl
loopne
push
jo
pop
jmp
pushf
pop
adc
xchg
xchg
arpl
and
cwtl
lods
scas
cmpsb
mov
mov
rcrb
mov
insl
pop
out
dec
shrl
mov
adcb
rcrb
mov
sbb
xchg
pop
icebp
scas
lods
outsb
dec
xchg
mov
add
pop
nop
mov
push
push
pop
dec
push
sbb
nop
fiaddl
enter
push
pop
xor
scas
push
mov
jmp
or
mov
pushf
cmp
sbb
pop
addb
inc
xchg
jecxz
and
pop
jb
add
inc
xlat
pop
jno
loope
xchg
mov
pop
cmp
mov
sub
xchg
sub
mov
mov
pop
rolb
pushf
pop
push
lock
lahf
push
jns
pop
cmc
mov
fisubrs
push
add
cmp
sbb
adc
xchg
repz
int
pop
inc
aam
es
repnz
test
outsb
pop
xor
in
mov
mov
add
xchg
fwait
jns
mov
ficoml
leave
add
dec
popf
outsl
sti
setbe
cmp
and
rcrl
lods
push
mov
bound
aas
pop
cmpsl
dec
fcoml
leave
push
into
scas
rcll
hlt
dec
ret
dec
pop
cmp
jbe
cmp
jmp
mov
sub
or
data16
mov
ret
andl
jnp
fisubrl
add
movsl
add
mov
cmp
iret
pop
and
roll
xorb
pop
push
je
stc
call
push
lahf
pop
sub
addr16
pop
mov
xor
out
and
jae
popa
cmp
inc
mov
leave
cmp
test
addr16
in
push
lcall
pusha
cmp
mov
pop
jp
or
scas
pop
mov
jne
sbb
pop
mov
cmp
add
pop
gs
and
adc
dec
pop
adc
and
pop
push
xchg
jl
push
pop
sbb
flds
jns
mov
movsb
xor
sub
rcrb
ja
xchg
push
mov
scas
mov
fcomi
bound
pop
repnz
pop
stos
push
sbb
mov
inc
sbb
xchg
mov
pop
sub
int
add
imull
hlt
lcall
gs
inc
jns
cmp
pop
cmpsb
in
scas
negb
fsubrp
adc
mov
into
mov
pop
push
leave
jnp
mov
push
ds
sbbb
pop
and
jo
scas
pop
mov
inc
jb
fs
insl
xchg
jmp
pop
push
add
iret
xor
xchg
test
roll
orl
fs
push
imul
pop
aam
fdivs
sbb
and
sub
daa
leave
out
int
sbb
mov
mov
fisubrs
cmp
push
ss
lods
mov
movsb
pop
inc
add
push
sti
pop
add
sub
insb
cltd
insl
pop
inc
jp
fidivrs
sbb
or
into
int3
mov
mov
pop
jns
push
ja
xor
and
add
pop
pop
ss
int
xor
mov
dec
addr16
mov
inc
iret
lcall
das
jl
push
pop
lea
int
mov
mov
add
call
cmp
dec
pop
mov
pop
push
sbb
pop
mov
pop
mov
dec
mov
mov
sub
pop
mov
xchg
inc
mov
das
jb
dec
pop
cmp
addr16
movsb
and
inc
int
insl
fcomip
mov
imulb
sub
mov
dec
pop
enter
pop
push
lcall
inc
jne
xchg
ret
xchg
push
cmp
lods
int
mov
adc
mov
out
push
jo
scas
jge
or
enter
and
and
pop
stos
popa
aas
cld
push
dec
add
pop
mov
dec
xor
and
sarl
or
jbe
call
jns
pop
in
ficomps
js
movsl
dec
mov
mov
lock
cli
in
or
dec
filds
sub
pop
pushf
das
incb
pop
push
add
mov
sbb
mov
out
and
push
mov
fdivrs
pop
lock
ficoms
sti
pop
xor
mov
cmc
data16
pop
jnp
cmp
pop
xor
lret
pushf
cmpsl
jb
mov
js
pop
addr16
loope
push
fidivs
add
mov
pop
popa
adc
pop
jmp
and
movsb
sbb
mov
fcos
or
pushf
sti
dec
dec
jg
out
mov
repz
daa
iret
sbbb
push
xor
mov
lods
ljmp
cmp
push
or
sub
dec
mov
add
pushl
cld
jne
test
jecxz
push
pop
pop
inc
jmp
mov
popf
push
fistl
sub
ret
f2xm1
push
lods
pop
sahf
cltd
cmp
sbb
jbe
pop
xchg
xchg
mov
push
fstpl
int
repnz
add
sub
rorl
pop
add
sbb
or
aam
fcoms
or
pop
adc
pop
cli
xor
jb
push
ret
pop
dec
test
call
xchg
fs
cmpsb
mov
mov
imul
pusha
push
insb
lret
pop
pop
cmpsl
jp
int
lods
idiv
adc
pop
and
imull
mov
pop
push
xchg
cmc
insb
xor
jbe
mov
std
push
cmp
scas
stos
push
int
pop
push
call
mov
xor
ret
arpl
pop
jno
dec
popa
sahf
cmp
lret
xchg
jge
push
pop
jae
ds
pop
mov
cmp
jp
push
add
enter
push
dec
push
pop
movsl
adc
jo
ret
jne
pop
int
ljmp
and
pop
xlat
fildl
pop
stc
cmp
pop
or
inc
dec
pop
mov
sbb
pop
int
add
and
out
pop
jmp
add
pop
cmpsl
movsl
sbb
in
jbe
rcrl
jge
test
cltd
and
test
xchg
jg
pop
jne
int3
mov
rcrb
jbe
xor
mov
lcall
sbbb
and
xlat
loopne
dec
push
jge
shlb
jae
negb
ja
and
pop
xor
mov
mov
mov
cmp
xor
pop
dec
push
aad
dec
jge
mov
dec
int3
mov
adcb
mov
push
dec
mov
fistpl
and
pop
cmp
sbb
fcomi
jmp
adc
lahf
fs
cltd
fiaddl
dec
popf
pop
into
aad
mov
mov
mov
cmpsb
outsb
add
lahf
aas
int3
rolb
icebp
clc
out
cwtl
cltd
sbb
call
adc
arpl
fdivrl
ja
xor
adc
mov
xchg
dec
dec
std
das
pop
xor
test
add
bound
pop
int3
mov
xor
pushf
psllw
mov
cmp
fxch
dec
lock
pop
cmp
daa
sbb
ja
mov
push
in
roll
cmc
jo
pop
bound
jp
pop
push
int
sbb
stc
cmp
sahf
dec
aam
leave
sub
xchg
hlt
push
push
mov
pop
dec
add
xchg
adc
pop
imul
mov
cmc
scas
loop
pop
push
ficomps
pop
jmp
adc
push
add
inc
adc
out
xchg
ret
je
addr16
pop
int
es
mov
js
insl
lret
jb
inc
clc
out
sub
jns
cmp
rorl
pop
mov
ret
add
add
pop
mov
or
nop
sbb
std
ficoms
add
sbb
push
or
pop
loop
xchg
dec
pop
ret
pop
sbb
into
inc
pop
lea
test
or
mov
mov
in
stc
xchg
push
iret
mov
movsb
mov
mov
insl
mov
out
jae
pop
jbe
push
mov
xchg
dec
pop
mov
inc
jne
mov
lods
sbbl
pop
out
lret
je
cwtl
pop
and
cmc
enter
fdivl
mov
and
adc
pop
and
je
leave
jle
movsb
pop
gs
fcmovbe
push
jmp
cmp
arpl
add
lcall
jecxz
jo
pop
cmpsb
scas
or
sub
mov
add
cli
mov
push
jno
and
add
leave
pop
mov
pusha
pop
in
push
test
mov
mov
xor
pop
loop
mov
lds
push
in
ja
ficoms
cwtl
add
jb
cmp
mov
mov
push
xor
mov
aaa
pop
aad
dec
lahf
or
mov
dec
xchg
mov
pop
sbbl
jl
mov
push
jo
insl
aam
fiaddl
inc
rcr
or
repz
sbb
mov
jl
subl
pop
clc
mov
pop
add
cld
popa
fisttpl
pop
add
xor
pop
mov
or
popa
pop
cmp
jmp
fwait
test
neg
adc
outsb
add
pop
sub
mov
fcom
scas
xchg
push
inc
out
data16
jp
pop
xchg
pop
je
call
jl
scas
mov
pop
push
xor
sbb
jg
int
pushf
xchg
push
lahf
xchg
scas
and
mov
jp
out
lcall
in
pop
jns
pop
arpl
mov
inc
mov
pop
pushf
mov
jmp
insl
lcall
add
dec
lods
ficompl
xchg
je
fsubrs
pop
and
pop
les
jno
inc
pop
inc
mov
mov
pop
sbb
aas
movsl
push
pop
in
inc
outsb
loope
enter
adcb
jo
iret
mov
mov
cmp
sti
or
out
fistpl
push
mov
mov
loope
jge
movsb
imul
jae
pop
xchg
and
cmpl
repnz
out
sbb
ret
mov
dec
sub
push
pusha
pop
mov
jle
mov
mov
out
and
pop
test
inc
and
xchg
pop
lods
js
stc
dec
mov
xor
pop
in
cmp
lock
pop
lods
scas
jne
lret
mov
scas
aam
rorb
sbb
ficompl
dec
pop
pop
and
dec
jl
mov
icebp
sub
jns
sub
or
stos
stc
leave
pop
dec
add
aad
ja
jo
sahf
mov
dec
inc
aas
pop
fs
jns
jb
and
into
add
pop
pop
sbb
mov
dec
jge
int3
addr16
jne
inc
mov
fnstsw
lea
adc
dec
pop
int
cvtps2pd
repz
cwtl
pop
repnz
sbbl
adc
jo
mov
fisubrs
cmp
fldcw
jle
mov
repz
arpl
testb
inc
and
lds
push
dec
movsl
sar
jae
in
data16
or
push
sub
daa
decl
and
repz
pop
mov
jbe
pop
pop
push
lock
in
add
and
pop
loop
pop
or
pop
push
sub
inc
clc
hlt
cmp
pop
imul
cltd
lods
jl
pop
pop
mov
pop
mov
adc
pop
or
mov
mov
adc
mov
test
in
mov
arpl
shr
scas
sti
addl
and
inc
sbb
xchg
push
or
dec
ds
pop
mov
shl
pop
sub
jae
push
or
pop
dec
cmpsl
cwtl
rol
and
mov
int
push
pop
sbb
stos
lods
js
pop
test
mov
jae
fisubrl
pop
xchg
negl
adc
adc
in
push
jecxz
test
mov
mov
mov
fidivl
shll
lret
fmull
orl
sbb
push
mov
add
data16
es
jb
mov
mov
pop
jge
mov
inc
movsb
sbb
jl
dec
mov
pop
inc
pop
inc
pop
fdivrl
pop
and
and
add
jmp
aaa
mov
and
mov
pop
arpl
jnp
shll
pop
jmp
lahf
adc
pop
sbb
sub
add
pop
pop
mov
push
cmp
sub
add
sbb
subl
mov
push
ret
mov
push
sbb
or
push
cld
and
pop
and
in
dec
popf
fs
cmpsl
lahf
test
pop
and
fdivrs
fdivr
shlb
sub
jno
pop
insb
popf
pop
stc
pop
and
hlt
clc
loope
add
inc
mov
enter
popf
adc
rcrl
loope
adc
cwtl
or
das
into
loop
pop
bound
pop
sub
aas
or
popa
arpl
adc
pop
and
inc
jl
and
pop
clc
movsl
jp
or
xlat
add
mov
fistpl
rorl
js
cmp
cmp
mov
lahf
jl
mov
stos
dec
mov
cmp
sbb
jae
pusha
lea
mov
cmpsl
pop
iret
xchg
dec
adcb
pop
ret
adc
cld
push
dec
int3
mov
insb
xchg
inc
jge
popf
xchg
or
pop
push
in
xor
dec
pop
pop
push
mov
out
sub
pushf
lock
mov
add
push
mov
sbb
jo
ss
jbe
fnsave
pop
dec
rolb
xchg
fldln2
dec
pop
mov
and
pop
push
fistl
mov
nop
mov
mov
xor
in
xor
or
sub
push
adc
test
pop
inc
pop
cmp
das
and
daa
sub
mov
pop
in
cld
mov
mov
and
iret
in
pop
shlb
stc
negl
mov
loopne
add
sub
data16
xchg
popl
sbb
xchg
inc
aam
fistl
jno
jb
xor
fimull
popa
jne
lods
in
dec
sub
mov
sub
testb
and
lock
adc
pop
pop
leave
and
jns
push
clc
data16
pop
lea
lods
cmp
stc
stc
rcrl
rcll
test
add
dec
add
hlt
or
push
sub
sub
dec
fisubrs
inc
mov
ljmp
sbb
push
fistpll
jne
stos
xorl
movsl
shlb
sti
mov
incl
icebp
mov
or
dec
mov
pop
repnz
xchg
or
pop
int
shlb
or
gs
js
scas
xchg
mov
pushf
jno
pop
sbb
or
test
sbb
mov
je
adc
insl
pop
push
movsl
dec
int
out
daa
xchg
lods
nop
xlat
mov
fcomi
jmp
jmp
imull
mov
pop
or
les
adcl
jmp
scas
hlt
cmp
test
data16
adc
out
or
stc
xchg
pusha
jbe
xchg
lods
pop
push
scas
sub
pop
int
mov
ds
inc
push
daa
pop
and
push
or
call
leave
icebp
outsb
dec
std
pop
jbe
push
aas
out
cmp
cli
inc
push
pop
pop
test
jb
and
stos
jecxz
mov
cmp
lret
lcall
ret
cs
mov
shr
mov
cli
fisubl
loopne
movsb
add
bound
cld
int3
jbe
cmp
lea
sti
adc
popf
cmp
jne
mov
repz
jo
or
aaa
jp
pop
pop
int
xor
xlat
pop
mov
sbb
nop
pop
fs
pop
dec
dec
lock
dec
jb
cli
pop
aaa
lods
xchg
pop
or
dec
xor
pop
inc
das
jmp
pushf
dec
dec
int3
pop
xchg
mov
cld
mov
pop
dec
add
scas
jecxz
std
jp
pop
mov
jns
cmpsl
jo
xlat
xor
xchg
mov
sub
out
cltd
and
aam
scas
mov
push
ficomps
and
aaa
hlt
pop
lods
es
daa
movl
cmpb
and
ss
inc
cld
or
mov
pop
arpl
cltd
mov
pop
popa
icebp
int3
or
xor
dec
sahf
pop
xchg
jno
pop
and
sub
int3
sti
fnsave
sub
cmp
pop
in
pop
pop
bound
movsb
repz
jnp
xchg
pop
rcl
ret
push
and
xor
js
movsb
imul
mov
cmp
jnp
push
add
std
in
xchg
jmp
aad
pop
lcall
cmpsl
rorb
in
xor
loopne
loop
jnp
add
frstor
mov
pop
mov
dec
test
mov
je
pop
push
rorb
mov
jp
sub
sub
std
int
shrb
add
xor
push
std
testb
and
sub
add
stos
sbb
xchg
dec
and
idiv
cmp
sbb
jnp
sbb
jl
push
push
ret
lods
and
jg
pop
cmp
xchg
lahf
mov
dec
jge
sbb
in
adc
xchg
pop
ljmp
add
mov
mov
aaa
sahf
jle
jnp
fldt
pop
into
test
and
pop
repz
sbb
aad
xor
lret
test
and
sub
outsl
insl
sahf
out
dec
lcall
and
pop
lret
clc
inc
mov
pop
dec
testb
pop
movsl
int
or
fiadds
mov
in
pop
addr16
and
lods
adc
pop
in
cmp
xchg
or
int
shlb
ljmp
push
outsl
icebp
lahf
pop
pop
jo
pop
dec
xlat
in
jae
outsb
push
jbe
hlt
mov
mull
ss
push
inc
or
mov
add
mov
push
cld
jle
fcoms
xlat
pop
mov
jmp
lcall
push
cmp
adc
pop
sbb
cld
adc
sbbb
xor
mov
mov
mov
dec
dec
pop
adc
lods
movsl
inc
xchg
jo
pop
lea
decl
sub
mov
hlt
sbb
lock
mov
pop
jge
xchg
cs
pop
lret
rcll
push
fcomp
stc
sti
mov
pusha
cli
test
push
imul
pop
sbb
flds
pop
je
loopne
int3
std
pop
addr16
xchg
mov
sbb
fdivrs
scas
pop
mov
and
lret
xchg
push
testl
or
mov
and
pop
and
mov
andl
fwait
pop
cld
mov
pop
les
xor
pop
insl
rcrb
inc
dec
imul
cltd
sub
les
mov
fisubrs
dec
insb
sbb
pop
popf
std
cs
pop
ja
xchg
roll
cmc
pop
xor
in
loope
xor
dec
or
mov
out
jne
and
sbb
xorb
mov
or
and
dec
pop
jo
leave
add
xchg
int3
jb
and
je
fdivrs
in
aad
sub
jns
fiadds
push
in
fsubr
mov
and
dec
dec
ret
pop
pop
jo
inc
mov
sbb
orb
pop
add
cltd
je
inc
mov
and
sub
repz
rcr
repnz
pop
sub
mov
pop
insb
push
dec
into
cli
orb
mov
gs
int3
or
sub
dec
int
dec
stos
stos
clts
push
jle
fs
fcomps
fidivl
pop
adc
imulb
mov
xchg
lret
enter
sub
mov
and
xchg
add
sub
into
aaa
sub
call
mov
mov
dec
cmp
push
adc
ss
out
insb
cmp
jns
pop
test
in
call
int
push
lret
xor
sbbb
and
xchg
jbe
insl
dec
sbb
clc
int
scas
cmpb
sbb
pop
mull
sti
pop
add
ret
and
sub
adc
mov
pop
int
sub
pop
jmp
jb
stc
f2xm1
mov
xchg
sahf
dec
std
cmc
pop
repz
addr16
add
pop
in
loopne
push
and
fistps
jge
pop
es
lds
pop
dec
jo
cli
scas
jecxz
loope
or
pop
mov
pop
xor
stos
mov
mov
imull
inc
fcomi
loopne
cmp
xchg
bound
sub
mov
pop
les
lods
mov
fs
mov
xchg
mov
ds
inc
mov
lret
sti
push
sbbl
in
jb
jne
jmp
imul
mov
push
pop
jb
xchg
ds
ror
xchg
pop
mov
dec
inc
push
adc
arpl
cmp
sub
dec
jecxz
mov
xlat
adc
mov
jns
or
pop
lahf
fmul
inc
inc
jp
pop
mov
mov
sub
aam
mov
dec
popf
push
loopne
in
pop
jbe
and
fistpll
mov
pop
lret
xchg
and
jmp
xchg
mov
jns
pop
pop
mov
lea
xchg
imul
std
scas
jmp
mov
pop
sub
lret
enter
pusha
jmp
icebp
pop
rorl
movsl
pop
push
and
pop
lahf
pop
enter
jge
pop
push
mov
test
pop
jle
inc
jbe
cmp
pop
push
jl
sbb
xlat
cmpb
lds
add
and
or
sbb
loopne
dec
inc
lods
add
pop
andl
push
and
dec
rcrl
fldcw
push
and
jecxz
xor
jae
push
push
adc
outsl
jmp
mov
xchg
dec
frstor
in
adc
pop
movsl
mov
xchg
inc
and
pop
sahf
mov
or
xor
sbb
mov
insl
ficoml
mov
push
adc
test
andl
and
xchg
call
je
cmp
sub
notb
leave
pop
adc
popf
loopne
test
subb
mov
jns
mov
and
inc
adc
xchg
iret
mov
or
pusha
incl
fidivrl
repz
jne
xorl
std
fsubl
shll
mov
dec
aaa
sbb
sbb
mov
in
pop
push
adc
js
mov
loop
enter
push
fsts
dec
pop
and
mov
fbld
xchg
xor
shr
lahf
push
jbe
int3
sub
and
pop
or
lea
dec
xor
push
pushf
mov
pop
jo
push
dec
ss
ret
xchg
in
bound
pop
cmp
lahf
iret
sub
fstpt
mov
jno
xchg
inc
hlt
lcall
fstps
movsl
dec
out
out
push
test
pop
jp
pop
jge
test
jp
xorb
scas
outsb
ret
fnstsw
lods
pop
dec
popf
int3
ret
movsl
mov
inc
in
push
push
fcmovbe
fidivrl
scas
pop
lods
mov
and
lods
addr16
and
and
int3
mov
mov
xor
mov
pop
outsl
sbb
or
mov
push
int
es
pop
loopne
sti
pop
bound
dec
pop
scas
lds
cmp
scas
adc
add
sar
dec
in
pop
sub
ja
add
sahf
sbb
push
je
pop
pop
dec
mov
jae
pop
push
loop
jb
fdivrs
fldl
cmpsl
adc
cld
ror
aas
adc
movsb
push
pusha
flds
push
cmp
dec
fidivrl
andl
mov
icebp
fsub
push
cmp
fistpl
xor
adc
pop
pop
inc
cmp
pop
mov
push
lret
aas
mov
aam
xchg
fimull
leave
sbb
pop
and
movsl
pop
outsb
jb
cli
fnstsw
subl
mov
or
mov
sti
nop
jo
cmp
xor
mov
pop
mull
mov
scas
mov
in
in
inc
add
push
sbb
fwait
lods
adc
nop
pop
inc
xchg
jle
adc
pop
pop
subb
clc
inc
mov
mov
xorl
sbb
inc
int3
pop
fidivrl
cwtl
pop
dec
push
mov
push
in
scas
test
js
dec
pop
cmp
pop
cmp
mov
fnstsw
jo
or
push
fsubl
xchg
cmp
pop
rclb
xchg
dec
in
pop
test
loop
leave
int
pop
sub
pop
lahf
lahf
clc
fisubl
aam
sbb
adcl
pop
or
or
xor
bnd
mov
outsb
dec
pop
push
stos
dec
sub
pop
fs
sub
leave
push
pop
add
aad
aaa
int
js
popa
sahf
test
fucomip
mov
pcmpeqd
aas
sbb
pop
xchg
fstpt
dec
icebp
jg
cld
jae
pop
outsl
jo
scas
jp
pop
push
mov
imul
shlb
pop
in
add
adc
inc
jl
mov
mov
push
outsl
lods
lock
push
pusha
xor
sahf
pop
in
pop
int
mov
mov
test
adc
dec
add
iret
pop
xor
mov
movsb
fisttpl
xor
out
mov
or
adc
push
test
pop
out
fucom
pop
or
mov
inc
xor
rolb
repz
ficomps
mov
sbb
mov
or
int
mov
pop
xchg
sbb
dec
lods
test
sbb
insl
inc
scas
dec
add
pop
outsl
sarb
fistps
in
xor
bound
mov
mov
jecxz
mov
mov
pusha
add
icebp
jns
pushf
jno
cltd
mov
cmp
mov
push
stc
pop
pop
xchg
xor
pop
sbb
sbb
pop
push
leave
xor
sarl
out
mov
stos
mov
and
lea
mov
in
or
mov
xchg
test
jmp
mov
dec
pop
mov
or
mov
adc
pop
mov
mov
into
fidivl
or
jmp
pop
scas
cmc
repnz
push
or
add
push
stc
pop
mov
add
push
pop
out
xor
loope
sub
or
insb
dec
add
sti
xchg
mov
aad
xchg
or
int3
dec
subb
inc
mov
dec
ret
pop
and
push
cmp
int3
addl
xorb
popf
pop
popa
je
push
clc
mov
jl
pop
push
adc
int
pop
xorl
add
pop
lret
pop
cmpb
lds
int
pop
stc
xchg
dec
cmp
xchg
sbb
cmp
cli
mov
in
sbb
scas
mov
fdivr
insl
adc
mov
cmp
pop
or
inc
cmp
call
jle
jl
ret
push
imull
shl
pop
fcoml
int3
pop
xor
std
ss
jo
mov
mov
pop
sub
adc
pop
int3
or
loop,pt
js
rclb
jmp
sub
es
bound
pop
ds
dec
mov
cmp
inc
inc
mov
int3
xor
pop
outsb
int
les
push
fs
jnp
sbb
adc
jns
mov
ds
ja
pop
insb
dec
andl
xchg
roll
mov
xor
pop
cmp
inc
gs
sbb
jecxz
rorl
push
pop
pop
lock
jae
std
out
test
mov
and
pop
popf
repz
lds
repz
lods
pop
dec
cmpsl
and
dec
sbb
lock
aas
popa
scas
cmp
stc
je
sub
test
out
les
mov
lret
xchg
sub
not
pop
xor
fxch
jb
xchg
lea
fcmovnbe
pop
push
inc
push
dec
pop
cltd
gs
add
pop
sti
cmp
fildll
roll
sbb
loopne
stos
mov
outsl
or
int
xchg
testb
pop
roll
pop
popa
mov
imul
mov
dec
les
pop
pop
adc
rolb
inc
int3
cs
pop
xchg
xor
adc
add
dec
xor
xchg
cld
sub
lods
xor
xchg
pop
jb
inc
rcll
mov
jnp
repz
out
mov
popa
jo
lds
pop
icebp
stos
push
lahf
pop
lcall
sbb
pop
call
in
jo
pop
dec
push
pop
sub
in
sbb
pop
lea
into
mov
int
push
cmp
les
lret
dec
into
push
pop
xchg
sub
es
push
cmc
je
imul
mov
dec
das
pop
push
lret
cld
cli
fstps
aaa
stos
and
xor
ficompl
and
mov
popf
dec
or
sub
pop
aad
sub
jb
aas
mov
movsl
pop
mov
enter
sbb
hlt
rolb
xchg
fs
lcall
repz
das
or
and
mov
cmp
sub
xchg
pop
or
ss
pop
lods
dec
mov
mov
push
pop
in
mov
dec
sub
dec
jb
adc
out
pop
inc
xchg
and
inc
lds
adc
js
shr
sbb
pop
or
mov
xor
bound
mov
lods
push
sub
pusha
enter
mov
xchg
or
jmp
inc
fwait
add
jb
aam
xor
movsl
mov
in
sbb
push
hlt
mov
mov
les
out
jo
jae
mov
jp
jne
cs
push
jecxz
gs
fisubl
lods
stc
lea
pop
adc
shll
jo
mov
jle
jge
mov
pop
xchg
cmpsl
mov
jno
cmp
xchg
std
outsl
ror
mov
clc
xchg
mov
jno
sbb
inc
add
pop
pop
stc
and
sbb
in
pop
lret
jbe
sbb
xchg
mov
adc
mov
stos
lahf
js
mov
xor
cmc
pop
out
dec
cmp
pop
pusha
fwait
add
repz
pop
incl
pop
sbb
or
mov
lahf
int3
psubusw
stc
in
mov
dec
gs
lods
es
std
fldln2
aas
dec
xchg
pop
out
int3
aaa
loopne
mov
lea
addr16
pop
test
mov
aad
sub
mov
arpl
push
pop
dec
loopne
repz
pushf
pop
mov
dec
lock
cmp
fcoms
jns
adc
jle
out
push
xchg
xchg
mov
cli
pop
lcall
call
or
pop
ret
filds
xchg
add
sar
mov
int
fnsave
pop
add
pop
movsl
pop
out
nop
cmc
dec
jo
mov
icebp
mov
push
aas
pop
int
cmpsl
adc
mov
sbb
jbe
xchg
inc
movsl
dec
popa
push
pop
adc
push
js
pop
pop
std
adc
int
stc
scas
fstl
mov
mov
push
push
sbb
pop
imul
insl
pop
jmp
icebp
jl
xlat
mov
xchg
jo
ja
xchg
pop
int
xchg
mov
sbb
push
pop
pop
xor
sbb
pop
sbb
jns
call
mov
pop
lret
int3
mov
mov
out
xor
mov
subl
jnp
cmp
jle
pop
xor
sbb
xlat
incb
push
adc
stc
and
jp
or
add
mov
sti
push
add
dec
popf
insb
jbe
cmp
fidivl
insl
ret
fdiv
fldenv
mov
mov
rorb
pop
gs
fistl
sti
push
add
xor
fcom
sbb
in
jge
rorl
pop
int3
xor
inc
xlat
sbb
cmp
dec
push
inc
jl
pop
pop
in
aas
pop
jp
pop
int
lods
pushf
cwtl
movsb
mov
pop
fiadds
cmpsl
jecxz
lods
in
pop
push
fstps
pop
jl
jp
out
dec
pop
dec
pop
and
sub
mov
mov
dec
inc
jmp
lahf
movsb
pop
ret
fldenv
jl
arpl
cltd
mov
pop
test
stos
notb
rorb
mov
mov
stos
call
add
dec
and
sub
push
hlt
addr16
jmp
cltd
gs
add
push
ret
out
lea
sarl
add
pop
inc
mov
xchg
dec
jnp
pop
mov
jb
dec
leave
jl
jo
inc
sahf
mov
jbe
xchg
xchg
adc
mov
enter
std
xor
pop
jo
lea
rcr
fsubs
xor
inc
cltd
jle
mov
scas
mov
stos
clc
rorb
iret
adc
leave
fmull
jnp
pop
cwtl
cmp
sub
pop
lret
hlt
push
mov
ret
dec
fstps
repnz
mov
mul
test
pop
pop
nop
jb
outsl
lahf
lret
jecxz
mov
out
in
xor
pop
arpl
jb
inc
and
mov
pop
sub
add
lret
mov
sbbl
pop
xor
dec
lods
mov
int
mov
in
sbb
and
aas
shlb
or
pop
jnp
mov
sbb
xchg
pop
out
aaa
xor
rcrb
push
lahf
and
pop
mov
push
adc
inc
dec
dec
pop
ret
into
mov
fstpt
pop
cmp
push
ret
adc
pop
sbb
cmpsl
mov
ds
cmp
insb
lods
fldl
pop
cltd
std
jbe
mov
cmp
add
xor
dec
in
pop
decl
fs
add
push
sub
pop
leave
xchg
out
add
imul
ret
add
xor
mov
adc
dec
andb
jbe
pop
adc
out
mov
sub
hlt
add
push
lock
imul
sbb
lahf
in
mov
pushf
pop
xor
int
lock
rolb
mov
sub
mov
xchg
insb
fstl
test
dec
push
lods
int3
stos
aad
sbb
mov
outsl
xchg
rcll
mov
pop
pushf
das
lret
or
mov
aam
aad
in
movsl
inc
loope
int
sub
inc
int3
daa
jbe
pop
imul
in
push
xor
pop
test
and
mov
pop
add
fmul
mov
pop
adc
nop
jbe
std
jecxz
push
or
stos
stc
fmulp
cmp
push
sub
std
scas
sbbb
notl
mov
jb
pusha
inc
in
fimull
mov
xchg
mov
repz
scas
inc
cld
sahf
shl
stos
shll
xor
cmpb
cltd
popf
sti
dec
pushf
pop
mov
adc
je
push
pop
dec
fisubs
sub
adc
aam
fldenv
jb
and
adc
dec
sbb
pop
ja
test
pop
add
xor
mov
sub
sbb
mov
fadd
xchg
mov
scas
loope
sub
sbb
cmp
and
jns
pop
ljmp
popf
mov
push
mov
and
in
pop
xchg
mov
loop
fldt
inc
xchg
insb
pop
jnp
std
push
pop
mov
jmp
jg
add
pop
sbb
fnsave
stos
push
lea
mov
pop
adc
mov
dec
mov
jo
out
frstor
xor
or
cmc
sub
xor
mov
mov
fs
clc
dec
sbb
sbb
sub
int
lcall
fwait
jb
jns
fcomip
mov
icebp
jg
xchg
iret
enter
xchg
jecxz
mov
jge
movsb
xchg
loop
cmp
lock
js
inc
mov
add
pop
testb
or
jbe
mov
pop
fdivs
jno
push
mov
int3
xor
call
pop
adc
cwtl
mov
dec
cli
jb
pop
cltd
jle
mov
xor
sbb
and
inc
mov
pop
adc
and
loopne
popa
add
sub
icebp
fdivs
cmpsb
xor
push
mov
lock
lea
popf
inc
pusha
pop
pop
jge
int
mov
mov
pop
pop
jne
insb
shrb
mov
mov
sub
mov
xorl
lods
mov
repnz
fstps
jecxz
cmp
in
xchg
sbb
fs
addr16
mov
mov
shrb
imul
xchg
or
cmp
pop
ljmp
ret
push
lea
cltd
imulb
xchg
shrb
inc
or
dec
pop
mov
xor
sbb
pop
sbb
int3
cs
or
cmp
mov
ficoml
mov
lock
leave
pop
push
mov
pop
mov
cmp
dec
mov
int
sub
add
in
pop
dec
pop
jne
xchg
mov
lds
mov
dec
push
jl
adc
shll
cmp
negl
sysenter
popf
in
int
scas
fwait
mov
cli
lods
pop
mov
xor
jp
and
xchg
cmpsl
dec
dec
pop
mov
sub
pop
loop
lea
popa
sub
mov
xor
xor
fidivl
and
inc
pop
mov
in
inc
xor
pop
fwait
std
aaa
dec
jns
push
adc
pop
xchg
dec
xchg
push
mov
pop
fbstp
push
xor
or
jo
mov
mov
pop
sbb
stos
or
daa
jecxz
lcall
push
and
sub
lret
add
sti
dec
out
rcrl
pop
jl
and
pop
lds
and
pop
lcall
inc
jecxz
mov
jae
lret
xor
mov
fnstcw
pop
sub
xlat
mov
pop
fisubrs
cmp
das
mov
xchg
pop
arpl
pop
sbb
mov
ja
push
lahf
jge
pop
mov
add
mov
push
fidivrl
add
data16
rep
mull
xor
dec
sbb
outsb
movsb
std
cs
xchg
stos
pop
cmp
xor
and
jns
pop
out
hlt
sub
lods
push
repz
inc
aam
es
xor
sub
pop
pop
push
pop
mov
jl
outsl
or
sbb
dec
mov
cmp
and
sbb
pop
cltd
push
push
add
mov
push
test
pop
sub
mov
pop
insb
into
imul
pop
or
dec
mov
je
pop
xor
xor
in
decl
lret
aas
jbe
jecxz
xor
sahf
inc
sub
scas
pop
cld
aam
mov
mov
insl
jno
xchg
xchg
dec
fstpt
dec
push
pop
ds
insl
pop
adc
pop
mov
inc
add
pop
loop
xlat
mov
shl
mov
pop
xchg
scas
call
mov
push
rorb
insl
xor
or
inc
jb
mov
fs
xchg
pop
std
dec
scas
sbb
ss
mov
stos
cwtl
fsubl
xor
rcr
mov
rcrb
xlat
pop
scas
sub
pop
pop
lea
or
js
int3
mov
or
imul
pop
in
adc
ret
cltd
mov
xor
in
push
jbe
pop
mov
test
push
cld
mov
adc
push
jge
out
cmp
pop
jo
pop
mov
pop
jmp
xor
xchg
push
lods
mov
pop
jae
or
jmp
test
and
jb
dec
lahf
lret
call
jbe
pop
cwtl
or
or
loopne
cmc
fdivrl
cli
pop
movsb
adc
and
mov
mov
nop
fisttpll
push
sub
imul
fcom
mov
dec
fdivrl
dec
sbb
push
fwait
or
or
push
out
pop
ja
jns
jmp
lret
mov
sahf
pop
mov
xor
mov
xchg
mov
adc
xchg
mov
cmc
pop
dec
adc
pop
js
stc
jge
mov
xor
lahf
jnp
mov
xor
pop
out
je
jbe
cmpsb
add
leave
std
aas
adc
add
pop
cs
push
and
mov
out
test
mov
js
push
sub
push
xchg
fdivs
popf
mov
lcall
fisubl
es
out
pop
loop
mov
outsl
loop
test
in
aad
push
fstl
int
push
cmp
jb
dec
sub
cwtl
xchg
scas
sbb
lods
mov
jg
adc
fs
add
sbb
jp
pop
ljmp
sub
dec
or
xchg
loop
mov
sub
jb
jno
sbb
sbb
repnz
movsb
jp
pop
sarl
xlat
in
int3
sub
aas
lods
dec
sbb
pop
loope
and
clc
pop
insl
xor
out
nop
inc
xchg
icebp
mov
lret
lahf
inc
iret
jecxz
pop
in
cmp
pop
rcrl
aas
mov
fnsave
cs
inc
sub
pop
enter
sbb
mov
push
jb
and
bnd
sbb
xor
cmp
sti
add
push
pop
dec
add
inc
push
stos
lods
insl
fcmovnu
inc
fcompl
xchg
add
push
out
pop
inc
mov
mov
dec
outsb
pop
xor
jbe
les
in
xorl
and
or
mov
add
mov
adc
xchg
sub
sbbl
lret
sbb
add
jg
mov
enter
pop
sbb
sub
add
dec
pop
push
stos
push
xchg
push
adc
fstpl
fs
fists
lods
scas
dec
pop
les
inc
cmp
fcomps
push
jmp
insl
jo
repnz
adc
push
add
xchg
add
fld
scas
mov
sarb
push
adc
cmp
lret
nop
pop
mov
cwtl
mov
push
xchg
sbb
fbld
lds
test
push
push
cmp
pop
or
pop
imul
pop
inc
repnz
rcrb
push
fst
mov
cltd
xchg
ss
fwait
jmp
scas
pop
daa
cmpl
fnstenv
inc
out
mov
movsl
sub
fldt
or
mov
adc
dec
icebp
or
scas
jne
and
inc
in
pop
push
lcall
pop
mov
orl
lret
jp
stc
add
loop
and
adc
mov
dec
adc
push
fnstcw
arpl
dec
add
or
and
out
jbe
scas
cmpsb
movsl
fnstsw
pop
mov
pop
cltd
ror
lods
pop
push
ljmp
add
cld
cmpsl
mov
cmp
arpl
pop
faddl
pop
inc
stos
cmp
pop
jbe
insb
push
addr16
dec
popfw
ss
pop
movsl
lock
push
jne
out
pop
push
jns
and
xchg
pop
jl
push
fdivl
pop
shr
xchg
cs
dec
xchg
push
or
orb
pop
sbbl
and
push
sbb
pushf
loop
insb
mov
push
pop
sbb
pop
arpl
pop
pop
inc
xor
adc
mov
pop
sub
push
cmp
ja
pop
mov
xchg
out
xchg
pop
pop
pop
imull
push
popf
outsl
inc
ja
or
or
scas
mov
sbb
sub
cmova
pop
xchg
or
xor
outsl
mov
mov
pop
pusha
push
xchg
jb
cwtl
inc
lds
pop
push
pop
jne
ss
xor
int3
cltd
cmp
add
nop
push
add
adc
dec
std
pop
nop
mov
repnz
and
pop
mov
pop
fsubl
pop
arpl
jl
xchg
int3
dec
pop
sbb
aas
shl
adc
in
movsb
shll
inc
xchg
mov
ss
and
pop
into
test
daa
mov
mov
cmp
rcrb
cmp
lret
xchg
mov
fidivs
push
pop
fcmovne
ret
scas
in
test
add
push
mov
xchg
lods
xchg
das
pop
xor
cli
cltd
insl
xchg
mov
pop
adc
outsl
push
bound
adc
or
fstps
dec
icebp
inc
ret
call
inc
mov
mov
fdivrs
pop
push
lcall
pop
pop
or
bound
jb
int
mov
and
out
mov
cmp
sbb
dec
pop
and
cmc
rcl
mov
jg
push
insb
sbb
pop
mov
fildll
and
pop
es
nop
loope
xor
or
inc
int
out
pop
jno
outsb
sbb
scas
mov
bnd
adc
or
dec
cmp
pop
or
push
dec
ret
popa
and
out
pop
push
pop
mov
push
and
jae
std
push
mov
int3
push
add
les
popa
pop
sbb
pop
mov
mov
cmpsb
iret
jl
scas
dec
pop
fisubl
and
enter
arpl
imul
mov
lret
pop
dec
mov
sbb
fld
shl
pop
mov
jb
pop
adc
repnz
ljmp
cmp
push
cli
movsl
shr
loop
pop
js
mov
xchg
adc
jbe
dec
in
mov
sti
orl
add
pop
mov
pop
mov
jbe
or
out
fwait
nop
sub
xor
xor
pop
lret
cmp
bound
mov
dec
sbb
outsb
mov
cltd
or
xchg
movsb
stc
sarl
sub
lahf
and
imul
ja
mov
loop
mov
ret
mov
jg
mov
in
adc
dec
dec
add
xchg
imul
inc
or
xchg
push
jb
addr16
mov
int3
movsl
aam
jmp
fisttpl
lahf
xchg
add
fcmovnb
jne
in
mov
pop
pop
pop
push
add
or
xchg
jb
je
push
ficoml
inc
sub
mov
cmpb
aad
hlt
leave
pop
pop
xor
cmp
pop
jp
mov
addb
int3
hlt
in
jo
pop
pop
int
aas
jmp
inc
cmc
push
fdivl
xchg
sbb
in
enter
test
cmp
pop
fucomi
loopne
cltd
ja
test
jne
and
mov
imul
jae
movsl
stc
jp
sbb
hlt
cmp
loope
std
xor
pop
xlat
int
add
jbe
popa
pop
pop
push
lea
lods
cmp
fcoms
push
stos
mov
jmp
sbb
pusha
cltd
jg
xlat
lahf
punpckhbw
push
jno
jecxz
nop
pop
pop
pop
adc
repz
aad
xchg
sbb
adc
push
popa
push
gs
jbe
or
pop
jo
inc
sub
dec
cmpsb
pushf
pop
repnz
std
jb
lds
pop
cmp
inc
dec
and
pop
inc
cmp
cmp
sbb
sbb
sub
add
jbe
push
pop
cmp
mov
int
or
scas
push
lahf
cmpsl
add
lea
mov
dec
gs
rcrb
lods
pop
int
push
loopne
cli
lcall
pop
iret
cmp
jge
push
xor
scas
mov
cmp
add
repz
push
mov
ret
sar
pop
inc
test
cmp
sub
fsub
dec
rcr
pop
pusha
and
ja
lahf
pop
mov
inc
aam
aad
pop
pop
leave
sbb
push
or
jecxz
clc
pop
imul
aad
shll
pop
jg
mov
dec
frstor
mov
les
pop
cmpsl
aad
sbb
pusha
ds
insl
in
iret
int
int3
fiaddl
cmpsl
xchg
xchg
mov
dec
sbbl
jae
mov
push
in
push
mov
dec
xchg
mov
aaa
sti
pushf
push
daa
loopne
movsb
pop
pop
xor
xlat
add
sbb
inc
cltd
cmp
subb
inc
popa
aad
jbe
push
xchg
mov
add
pop
dec
test
int
mov
test
js
dec
sbb
jl
pop
jmp
dec
lds
fs
fnstenv
ret
pop
xor
adc
mov
popf
mov
cld
mov
je
jecxz
sub
jp
fwait
mov
mov
cld
mov
adc
adc
clc
pop
aad
lret
cmp
stc
jnp
mov
xchg
mov
pop
popf
or
hlt
sbb
rorb
out
in
push
cmc
mov
fistpl
sub
lret
pop
xchg
adcb
mov
repnz
inc
int3
cmp
insl
push
stos
out
inc
adc
loope
ja
ret
lods
and
push
mov
rcll
mov
mov
cli
xchg
sarb
pushf
lret
int
in
fwait
dec
pop
push
mov
stos
lret
adc
cmp
or
mov
cli
aam
lcall
add
dec
js
or
pop
jmp
sbb
pop
and
loopne
pop
andl
mov
lods
lcall
sarb
cmp
negl
push
sbb
adc
rcl
in
or
and
jp
jo
mov
fs
sub
or
rol
mov
adc
xlat
pop
jge
jl
andb
pop
xchg
xor
xor
cmp
push
out
mov
mov
xor
or
insb
jbe
jl
sbb
pop
or
repz
and
mov
cli
rcrl
jle
pusha
push
sbb
fisubrl
loope
ja
sub
arpl
das
je
loop
lcall
jbe
out
add
pop
xchg
jae
shlb
int3
stc
arpl
cmp
mov
push
cltd
dec
sbb
fsubrs
sbb
xchg
fs
fmul
ficomps
and
sbb
pop
cmp
dec
dec
pop
popf
cwtl
out
inc
mov
sub
sbb
jmp
sbb
or
sub
dec
dec
cmp
pop
call
divl
mov
sub
leave
adc
cltd
pop
aad
shl
push
or
pop
aaa
xchg
pop
out
mov
inc
es
int3
xchg
sarb
int
addr16
rcl
mov
xchg
cmp
mov
outsb
pop
push
lret
adc
mov
inc
jne
push
jle,pt
leave
jns
and
or
pop
jl
jns
push
and
pop
dec
and
push
fildl
dec
cmp
xor
mov
jno
mov
shrb
mov
push
dec
jb
mov
adc
jns
push
sbb
jge
pop
lret
dec
mov
lahf
mov
adc
ljmp
js
test
cmpsl
dec
dec
dec
or
push
fistpll
pop
xchg
inc
add
jo
xlat
std
fidivrl
lods
pop
movsb
repnz
outsl
dec
out
ret
jle
pop
std
or
cld
adc
jp
fcomp
bound
pop
ljmp
popf
sbbb
mov
iret
jns
pop
mov
aad
mov
cmpsb
pop
out
pop
dec
lahf
push
shr
fwait
dec
xchg
leave
jnp
stos
ret
loop
jmp
or
bound
pop
adc
push
push
pop
mov
push
or
mov
int
jg
jo
mov
dec
pop
inc
outsl
add
dec
pop
mov
xor
pop
jb
xchg
mov
or
dec
adc
cltd
enter
push
xchg
pop
addl
fistps
xchg
pop
push
loop
fwait
jnp
mov
cld
int
pop
scas
rcll
jne
mov
jle
in
mov
and
sub
dec
dec
sub
pop
cmc
mov
pop
xchg
rcrl
jne
inc
sbb
rol
pop
jmp
xor
or
out
incl
data16
sbb
fisubrs
push
out
mov
lods
add
movsl
das
cli
in
sub
xlat
pop
inc
out
shr
fisttpl
popf
pop
aad
push
push
ja
js
push
pop
pop
pushf
mov
pop
stc
push
adc
xlat
int3
pop
mov
inc
mov
lcall
mov
and
popf
mov
or
loopne
out
pop
mov
push
xor
js
pop
push
lcall
pop
cmp
push
rcll
push
pop
test
iret
pop
lret
out
inc
pusha
es
cli
in
add
insl
repz
jo
jnp
outsl
mov
mov
add
push
xchg
mov
lahf
pop
push
rclb
mov
pop
mov
pop
pop
imul
ret
jge
insl
mov
mov
stc
mov
inc
int
pop
aad
xchg
fs
out
fcompl
adc
inc
lret
xchg
pop
loope
out
sar
cwtl
push
je
mov
push
cmp
xchg
push
push
inc
fstp
sbb
push
sub
dec
aad
fcmovnu
mov
mov
xor
pusha
dec
lock
rcl
loope
test
xlat
mov
mov
decb
adc
mov
les
fcmove
jmp
sub
and
fsts
jb
dec
movsb
mov
jge
mov
push
cltd
mov
mov
sub
jge
pop
iret
int
push
and
jecxz
sub
pop
jecxz
mov
cmp
add
pop
sbb
inc
push
sub
movsl
mov
jo
pop
popf
pop
ret
repz
scas
ds
lods
stos
mov
pop
mov
or
pop
sub
out
push
jno
adc
orl
fisttpl
push
les
stos
or
cltd
push
jnp
scas
adc
mov
sarb
sbb
sub
pop
mov
lahf
push
mov
adc
std
out
cltd
sbbb
shll
filds
nop
inc
xchg
pop
pop
jo
repnz
add
xlat
mov
fwait
dec
add
in
sti
outsl
xchg
fnstcw
push
cltd
dec
add
loopne
bound
mov
jl
mov
dec
xor
sub
mov
pop
dec
and
sub
fs
pop
pop
dec
cmp
jecxz
and
pop
lret
enter
iret
pop
jmp
jbe
arpl
or
inc
add
pop
cmp
xor
push
imull
jo
pop
hlt
orl
mov
sbb
push
or
fnsave
lahf
cmp
scas
pop
dec
mov
icebp
pop
in
movsb
sbb
addr16
and
ret
pop
pop
lahf
and
dec
pop
pop
lret
cmp
out
cwtl
pushf
movsl
int
pop
call
sbb
inc
pushf
cmp
xchg
addr16
cwtl
pop
addr16
xchg
jge
or
fidivrl
scas
cmp
in
int
or
pop
xchg
sbb
dec
push
cmp
stos
mov
xchg
mov
int3
lock
mov
in
fisttpl
pop
arpl
insb
add
mov
jb
inc
lods
mov
pop
cmp
pop
or
gs
pop
dec
adc
push
mov
out
ja
adc
pop
mov
mov
dec
dec
jl
mov
mov
aad
cs
in
cmc
xchg
adc
jno
or
xor
xor
pop
dec
jg
dec
je
add
lahf
mov
push
pop
lea
sub
test
pop
mov
js
cmp
subl
mov
sbb
push
clc
lret
stos
aam
cli
ret
cwtl
cmp
xchg
outsl
push
sbb
iret
mov
pop
je
jp
sbb
lahf
jbe
lods
cli
ss
push
ret
repz
fbstp
rcrb
outsl
dec
jno
add
mov
addr16
pop
stos
dec
into
out
cmpsl
xchg
js
and
pop
div
jae
fisttps
and
sbb
add
cltd
sub
call
fstpl
rcrl
jo
sti
pop
addr16
pop
div
jno
cltd
in
test
cmp
cmc
or
xor
pop
stos
fnsave
jb
je
out
xchg
push
out
mov
sub
xor
push
and
cmp
nop
test
push
jnp
push
iret
lret
xorb
pop
pop
pop
mov
jno
fcoms
mov
fisubl
jge
adc
inc
mov
dec
pop
pop
cmc
sahf
and
sbb
out
fwait
in
sti
adc
mov
inc
add
jl
es
xchg
pop
add
xor
in
xor
pop
inc
loop
cmc
imul
int3
xchg
pop
push
cmpsb
and
mov
mov
dec
je
inc
xlat
pop
rcrb
sbb
sbb
push
dec
mov
dec
pop
push
pushf
dec
and
mov
inc
inc
ja
repnz
cli
sbb
pop
int
sub
es
lods
dec
jbe
mov
xor
mov
pop
push
stos
fistl
or
cs
dec
lcall
sub
adc
and
mov
adc
jae
arpl
cwtl
inc
data16
mov
push
outsl
int
scas
jnp
lahf
sub
aam
pop
pushf
xor
push
jbe
loope
mov
roll
mulb
mov
mov
mov
jecxz
out
pop
mov
loopne
cmp
pop
push
pop
in
movsl
notl
ret
inc
jns
and
pushf
les
and
sbb
mov
cmpsl
sub
xchg
pusha
cwtl
jmp
hlt
mov
mov
cmpsb
jecxz
dec
mov
pop
rorb
aaa
mov
insl
xchg
push
mov
das
mov
mov
outsb
fimull
mov
cmpsl
lret
inc
add
cltd
ljmp
mov
mov
pop
mov
ja
lds
data16
pop
push
arpl
pop
fbld
xlat
mov
adc
jae
dec
insl
fiaddl
jb
mov
pop
repnz
mov
cmp
mov
in
xor
push
or
pop
adc
pop
fidivs
pop
test
xchg
pop
jecxz
or
insb
orl
divl
xchg
inc
imul
jns
pop
sub
shll
jo
pop
adc
pop
pop
adcl
pop
sub
pop
int3
inc
aas
lea
stc
addr16
mov
push
gs
xor
rorb
cmpsb
sbb
mov
pop
or
and
cli
iret
loop
pop
or
inc
jnp
add
add
aam
push
jmp
pop
xchg
pop
dec
jnp
jo
subb
cltd
sbbl
inc
jecxz
into
adcl
push
leave
pop
sbb
lret
mov
imul
int3
popf
pop
dec
cmc
enter
outsb
inc
push
pop
xchg
outsl
loopw
inc
dec
and
js
jns
inc
divl
or
pusha
movnti
cmp
sti
add
ficomps
xchg
jg
push
and
pop
xor
fdivl
cli
fidivrs
idivb
mov
dec
stc
fidivl
jmp
imul
repz
push
mov
cmp
pop
xlat
fiadds
in
sbb
pop
sbb
out
fs
lods
decl
pop
lods
xor
sbbb
or
dec
sahf
mov
cwtl
aad
pop
cmp
xchg
lahf
adc
addps
push
mov
sub
xchg
or
mov
shrl
sub
pop
ds
sti
loope
iret
pop
pop
push
das
jbe
sub
mov
xchg
sub
jo
scas
stc
pop
mov
lea
pop
xor
fcmove
scas
mov
jmp
jb
jle
and
sbb
lea
mov
cltd
adc
sbb
pop
fiadds
cltd
pop
ret
sub
out
sbb
pop
js
jb
iret
jecxz
cmp
pop
push
outsb
lods
lds
leave
sbb
sbb
fdiv
loopne
xorl
dec
fcomps
inc
xor
add
andl
dec
fs
pop
inc
nop
dec
test
ss
jecxz
jge
pop
dec
mov
jge
add
in
mov
repz
and
loopne
data16
daa
aaa
in
pop
dec
xor
out
mov
call
lods
jb
or
test
xor
xchg
int3
ret
mov
pop
sbb
jp
sub
push
mov
mov
cmp
jge
sbb
inc
cltd
dec
push
jnp
in
and
push
test
dec
sbb
push
addr16
jns
pop
shlb
cmp
inc
pop
adc
xchg
jbe
cs
mov
lods
sub
cmp
hlt
ss
sbb
xor
ret
out
lods
pop
sub
add
sbb
lock
movsl
dec
arpl
xchg
xchg
fbstp
dec
mov
inc
push
mov
pop
addr16
fld
mov
push
pop
dec
test
pop
stc
inc
lahf
jecxz
jns
popa
mov
ljmp
sbbl
xor
rcr
cmp
out
mov
sbb
lds
sub
push
jae
ds
cmp
mov
sub
js
add
push
nop
cwtl
sar
dec
pop
mov
pop
mov
mov
rcrb
ljmp
inc
ja
das
mulb
pusha
sbb
fdivrl
loopne
add
pop
mov
scas
imul
sbb
push
mov
test
xchg
hlt
imul
and
faddl
or
sub
pop
mov
mov
xor
lret
pop
add
jl
hlt
mov
sbb
inc
ret
lahf
outsl
int3
pushl
hlt
inc
pop
les
pop
scas
sub
mov
out
pop
ss
mov
jbe
mov
xchg
out
frstor
dec
sbb
jecxz
pop
bound
xlat
aaa
loope
and
mov
mov
cli
pop
jbe
lahf
orb
jo
mov
into
fildl
mov
ficompl
mov
pop
sbb
jge
cmpb
xchg
mov
lret
into
dec
lods
pop
jns
xlat
mov
addr16
dec
pop
or
insl
or
dec
mov
sbb
repz
mov
aam
jne
mov
cmp
adc
outsl
mov
dec
adc
mov
or
and
ja
mov
rolb
mov
rcl
fildll
out
shll
pop
push
je
dec
cmp
imul
pop
in
sbb
sahf
add
jb
mov
add
mov
add
mov
sub
mov
out
push
jnp
xchg
lods
bound
scas
push
push
cwtl
xchg
pop
leave
adc
xchg
pop
rolb
pop
and
adc
lds
or
pop
int3
cld
and
pop
bnd
pop
fwait
jle
sbb
mov
call
pop
fldenv
sub
dec
sbb
jmp
fsubrs
jb
lahf
je
pop
test
nop
pop
fldl
insl
inc
in
fstpt
int
sbb
push
cmp
pop
add
adc
fdivrs
pop
push
or
inc
sbb
out
mov
mov
lods
and
dec
mov
int3
pop
mov
out
repz
mov
sbb
cld
and
sbb
pop
jb
arpl
xchg
mov
movlps
popf
inc
stc
pop
rcrl
mov
pusha
lds
mov
push
ds
aad
les
inc
jnp
pusha
pop
mov
jle
enter
loope
ret
pop
adc
cli
sbb
mov
scas
lods
nop
xor
lock
sbb
xor
jbe
inc
mov
push
pop
cmpsb
sahf
int
add
das
sub
and
arpl
lods
xchg
ss
in
sub
aas
pop
xor
fcoms
mov
in
dec
sbbl
js
pop
icebp
pop
push
fcoml
jb
pop
stc
or
mov
jns
enter
je
adc
pop
pop
mov
push
dec
fbstp
pop
test
inc
int
inc
outsb
sub
dec
movsl
pop
mov
sbb
ljmp
push
pop
int
pushf
stc
pop
jne
mov
cld
pop
and
int
sub
mov
mov
sub
add
mov
jno
cltd
xchg
push
jb
pop
mov
int3
lods
inc
pop
adc
xchg
mov
arpl
mov
mov
cmp
dec
push
pop
mov
int
mov
jmp
pop
popa
popa
repz
fsubrl
pop
xchg
jo
inc
mov
pushf
xor
aas
mov
popa
pop
test
repz
rcrb
dec
adc
bound
scas
push
clc
mov
out
fildl
mov
sub
enter
push
dec
xchg
int
mov
pop
jmp
pusha
aaa
sbb
cmp
ret
pop
sbb
cltd
or
sub
rep
lahf
mov
fs
pop
mov
pop
fxam
sub
xrelease
pop
jns
lock
lahf
xor
cmpsb
insl
or
sbb
aad
dec
and
sbb
mov
fildl
jo
and
pop
jae
adc
pop
and
imul
ljmp
in
data16
mov
out
cmpsl
xchg
adc
aam
adc
sbb
pop
into
scas
clc
aas
fs
jecxz
jo
mov
cmp
imulb
jl
ret
scas
std
lret
xor
mov
adc
sbb
popf
dec
cmpsb
ljmp
pop
jp
mov
pop
or
mov
mov
int
out
ror
lahf
xor
pop
sarl
fs
mov
subb
inc
bound
imul
sub
stc
ret
jo
mov
xor
cmp
inc
cwtl
scas
push
mov
bound
mov
xchg
iret
js
enter
adc
dec
shll
mov
fstpl
or
mov
rorl
into
int
outsl
pushf
std
lods
ss
bnd
pop
enter
sti
cmp
jbe
ja
movsb
xor
gs
pop
jnp
int
ds
fs
pushf
xchg
pop
inc
fisubl
push
outsb
pop
adc
bound
pop
jo
fmull
pop
jbe
movsb
xchg
lret
cmpsb
pop
lea
add
add
gs
dec
test
jmp
test
aas
ret
mov
pop
sti
adc
push
cmp
sbb
mov
push
aas
mov
pop
mov
aaa
or
fidivrl
sbb
mov
lahf
sarb
push
cvtps2pd
jb
lret
lret
ret
cmp
sbb
mov
or
jg
std
test
sub
mov
and
repz
mov
imul
cmp
insl
jae
repz
pop
es
call
inc
xor
push
cli
cli
mov
and
jbe
imul
test
inc
daa
ficomps
jecxz
popl
lret
sub
stc
pop
test
enter
xor
stos
outsb
pop
mov
xchg
test
sbb
pushf
leave
adc
jb
outsb
jns
mov
je
fisubrs
add
mov
mov
mov
add
or
cs
das
push
test
imul
test
fyl2x
jb
sub
dec
lret
mov
pop
int
add
loop
and
inc
jo
sbb
mov
mov
lods
jno
hlt
pop
jmp
jg
dec
je
push
pop
sub
jbe
stos
scas
fisttpl
imul
in
pop
in
orb
lea
xchg
pop
aaa
popf
pop
aad
imul
scas
fsts
bound
sbb
leave
imul
cwtl
fidivs
pop
test
repz
pop
adc
push
rclb
mov
add
xchg
pop
ja
mov
add
stos
xor
pop
cmpsl
ret
stos
and
lahf
ficompl
mov
mov
fstps
push
test
fsubs
mov
sahf
cltd
addl
gs
pop
or
outsb
sti
pop
enter
bound
xchg
and
sbb
out
mov
inc
ljmp
jbe
jecxz
subl
xchg
in
xor
push
sbb
xchg
ja
orl
cmc
in
xchg
in
ss
test
addb
std
xlat
stos
jo
add
stc
jmp
xchg
int3
sar
mov
pop
xor
mov
xchg
sub
inc
dec
scas
js
pop
push
pop
or
dec
xlat
ret
inc
arpl
out
and
pop
dec
lret
loope
shll
repnz
ficompl
add
pop
int3
add
push
pop
xchg
pusha
loop
clc
jbe
shll
pop
cmpl
pop
jnp
int3
in
mov
mov
pop
and
push
mov
das
and
std
add
mov
imul
xor
adcl
xor
adc
ficompl
jle
aad
loope
xchg
lret
dec
rcrb
int
pop
xor
std
fldcw
fistpl
xchg
dec
lahf
pop
daa
lret
scas
cmp
mov
repz
stc
pop
pop
add
inc
movsb
pop
orl
vmovddup
lods
fistl
pop
pusha
sbb
imul
popa
jmp
test
pop
insl
mov
adc
jl
jae
pop
fsubrl
ljmp
dec
lahf
mov
fdivrs
stos
or
mov
push
fdivrl
inc
fsubr
jne
les
xchg
cmp
lds
mov
mov
ficoml
fisubl
mov
test
adc
jo
mov
cwtl
push
sub
es
sbbl
mov
nop
out
arpl
mov
and
jae
gs
or
scas
push
data16
pop
dec
pop
fcoml
push
and
int
mov
or
pop
cmc
jb
mov
and
scas
pop
jmp
pop
jne
adc
and
sbb
scas
and
mov
lock
fldt
cltd
lods
xchg
dec
xchg
or
mov
daa
lock
pop
dec
sarl
stos
mov
pop
addb
gs
jg
lahf
outsb
loop
call
xorl
pop
and
cli
scas
push
inc
sbb
test
sub
test
jno
negl
pop
xchg
jne
leave
jbe
push
pop
push
stos
out
fneni(8087
cmp
pop
ljmp
int
inc
lret
pop
rcr
out
lahf
dec
cmc
and
fyl2x
stc
lods
out
jecxz
test
pop
adc
jp
lock
je
xlat
adc
and
push
mov
pop
dec
push
mov
int
cmpsl
aad
pop
jle
das
fcom
mov
or
cmp
sub
add
xchg
or
pop
faddl
mov
cwtl
fstp
cmp
les
loop
dec
sub
dec
cmpl
int3
flds
test
xchg
addb
sahf
push
iret
insl
scas
or
xchg
push
cmpsl
lcall
jns
push
pop
rclb
sub
xor
dec
xchg
outsb
movsl
dec
adc
mov
dec
xor
jns
mov
sub
fcmovb
ficomps
fistpl
jecxz
fcomip
pop
rorl
cmpb
dec
xchg
add
adc
das
inc
icebp
push
ret
sbb
repnz
fidivrl
out
lahf
in
mov
pop
fcomps
stos
cmp
xor
dec
pop
lret
dec
jae
adc
sub
int
push
ljmp
cmc
xchg
cmp
or
mov
push
pop
cmpsb
dec
push
lds
sub
sbb
in
pop
inc
leave
pop
and
std
pop
mov
adc
jge
arpl
sbb
xor
loop
cltd
pop
mov
dec
fisubrl
cmp
test
bound
fistps
adc
sub
gs
cltd
jnp
jmp
stos
inc
dec
stos
std
ret
in
rclb
jo
movsb
ljmp
arpl
lcall
movsl
jnp
xor
pop
sbb
or
stos
dec
lods
pop
stos
mov
mov
sbb
ficompl
mov
iret
sbb
inc
in
or
call
test
in
adc
rcll
pop
pop
imul
popf
test
enter
push
cmp
xor
jb
mov
sti
pop
pop
out
pop
adc
ss
adc
sub
jl
stos
dec
in
repz
pushf
test
mov
cld
orb
jp
mov
ja
dec
push
je
fmuls
xchg
hlt
js
push
xchg
pop
push
pop
fidivrl
loope
xor
pop
dec
xor
out
add
xchg
lds
cltd
pop
pop
pop
jae
lods
xchg
test
push
pop
adc
cmpsb
xchg
sbbb
ja
or
or
pop
arpl
xor
xchg
testb
pop
jae
sbb
xor
cltd
fbstp
mov
and
rorl
pop
test
sbb
pop
loop
jp
push
mov
inc
pop
and
jmp
pop
adc
pop
scas
push
out
or
mov
out
lods
stos
js
scas
lcall
rcrb
mov
jo
lahf
dec
sbb
insl
pop
cmc
sti
xchg
repnz
jecxz
mov
pop
jb
mov
pop
cld
jmp
rcr
pop
mov
out
dec
loopne
in
push
adc
sbb
aas
inc
pop
mov
sub
test
or
sar
mov
pop
pop
cmc
arpl
fwait
push
sbb
pop
aas
or
int3
pop
dec
lds
test
push
sbb
repz
shll
les
jle
jp
mov
sahf
ret
test
sbb
hlt
std
scas
int
mov
sub
sub
ss
ds
mov
pop
mov
push
aad
xor
outsl
xchg
scas
cmp
pop
mov
xor
inc
mov
lahf
pop
mov
xlat
and
ljmp
pop
jb
cld
fsubs
int3
bound
sahf
hlt
pop
orb
pop
push
xchg
dec
lock
mov
test
mul
pop
push
movsb
mov
mov
add
pop
pop
test
shll
js
xchg
dec
jbe
jecxz
pop
push
sub
inc
sub
adc
cld
jle
mov
out
and
or
mov
movsb
lock
push
sbb
and
adc
pop
in
push
xor
mov
pop
or
add
pop
dec
fwait
imul
sbb
add
divl
jo
loopne
dec
dec
ficompl
and
nop
leave
push
test
ja
mov
es
add
aad
xor
mov
fdivrs
lock
fcmove
insl
mov
or
fcompl
mov
or
pop
sub
push
pop
popa
sbb
dec
add
pop
out
xor
pop
out
shrb
lea
pop
mov
je
int
xchg
pop
fcoml
imul
jmp
fidivs
ret
xchg
push
jecxz
cltd
cld
mov
pop
repnz
mov
cmp
pop
cli
xor
mov
add
stc
popa
mov
rcrb
das
orl
jnp
adc
mov
pop
pop
cmpsb
and
sub
loop
pop
imul
cmp
pop
mov
ret
fidivl
adc
out
or
mov
pop
outsl
inc
jb
lea
dec
ds
adc
rorl
add
test
rolb
jnp
shll
add
mov
dec
out
insb
jbe
inc
adc
loop
cwtl
pop
int
adc
pop
pop
arpl
lods
test
or
xchg
push
push
dec
arpl
jp
push
jo
inc
dec
stos
mov
mov
inc
adc
xchg
icebp
pop
push
inc
pop
out
mov
loope
pop
int
sub
iret
or
cwtl
mov
mov
add
movsb
add
jecxz
sar
pop
cmp
dec
lret
repz
add
add
fcomps
jge
adc
sub
push
mov
or
cmp
pop
sub
sarb
mov
popf
sub
scas
push
jmp
mov
jmp
mov
xchg
add
fstps
mov
adc
sbb
lahf
data16
fdivr
xchg
rcr
xlat
mov
mulb
pop
lahf
stos
cs
mov
out
loope
clc
push
outsl
sub
xlat
pop
xchg
and
in
dec
fcoms
je
pop
pop
sub
mov
sbb
mov
dec
cld
js
push
dec
and
in
int
xor
pop
or
mov
jno
jecxz
pop
and
jnp
cltd
dec
and
jns
sbb
stos
cmp
nop
pop
cmp
jne
inc
sbb
pop
bndldx
add
scas
mov
pop
loope
lcall
pop
hlt
ljmp
pop
lods
std
xchg
add
push
int
mov
lret
cmp
lret
pop
ret
pop
xchg
imul
jo
cmp
pushf
add
out
test
dec
jecxz
pop
pop
int3
push
pushf
mov
sti
pop
loope
les
sarb
mov
push
enter
jecxz
xchg
movsl
pop
lret
and
fimull
pushf
pop
subb
fdivs
cmp
jmp
or
xchg
pop
push
out
sub
pop
dec
mov
sub
pop
insl
inc
mov
int
xor
pop
adc
mov
pop
mov
lahf
sbb
fcmove
out
mov
cmc
cmovno
pushf
in
xor
pop
jb
jge
inc
xchg
pop
pop
pop
lea
int
aaa
cli
and
jmp
pop
xchg
loopne
pop
lods
inc
pop
sbbl
mov
xchg
pop
int
mov
pop
or
movsl
jl
xor
cmp
pop
add
imull
fucom
lock
out
enter
jl
bound
ficompl
or
std
mov
xchg
jb
pop
sub
roll
add
loopne
push
sbb
pop
push
or
and
mov
dec
pop
roll
pop
sbb
pop
data16
in
dec
insl
xor
pop
push
jbe
or
out
adc
xchg
test
mov
mov
adc
mov
pop
xor
jge
or
outsb
inc
pop
or
and
jb
sbb
dec
imulb
xor
lods
pop
xor
mov
sahf
out
fnstcw
ss
add
test
push
lods
and
jb
pop
repz
in
insl
aad
int
pop
sub
mov
shll
adc
pop
pop
popf
mov
aad
push
jl
in
fs
mov
jo
xchg
test
int3
dec
out
test
mov
inc
sbb
movl
das
mov
fldcw
sub
scas
leave
mov
mov
nop
sti
call
or
lahf
fists
mov
in
pop
cmp
xchg
push
cmp
ja
inc
adc
mov
test
int
lock
mov
sbb
pop
stc
xchg
addr16
sub
data16
je
lods
jmp
push
stos
repz
jbe
pop
stos
in
outsb
pop
or
push
mov
sahf
xor
xchg
jnp
pop
sbb
aas
pop
int3
inc
lret
int
in
fdivs
pop
out
jbe
mov
in
mov
sub
out
inc
cwtl
mov
pop
jae
fisubrs
jo
jbe
clc
mov
out
xchg
lea
xchg
adc
cli
dec
pop
aaa
mov
sbb
dec
out
rcl
xor
push
ffreep
push
js
dec
ret
pusha
xchg
cltd
push
and
mov
mov
clc
nop
mov
out
mov
test
cmpsb
sub
pop
jmp
lods
push
pop
or
cwtl
adc
inc
and
pop
adc
add
sbb
dec
enter
fmull
pop
bound
or
js
mov
inc
add
mov
jmp
js
pop
cwtl
mov
and
dec
push
enter
addb
pop
xchg
push
test
adc
leave
decl
xchg
into
pop
test
sub
mov
cmc
mov
bound
or
push
outsb
pop
test
mov
mov
lds
les
pop
jno
mov
fists
jbe
jae
cmp
lret
lea
inc
pop
int
push
lock
jbe
fidivrs
xchg
lahf
repnz
in
pop
scas
mov
aaa
popf
pop
rolb
or
lcall
pop
movsb
int
rcrb
test
addr16
sbb
es
mul
jle
pop
call
or
ljmp
cmp
cwtd
or
adc
out
dec
cld
scas
pop
cmp
negl
cmp
push
sub
fs
daa
loop
adc
mov
lods
sbb
jecxz
into
mov
push
sbb
sbb
imul
xchg
sbb
jmp
fistl
xchg
pop
cmp
int3
mov
mov
jl
inc
popf
push
pop
push
in
xchg
pop
cmp
and
pop
push
outsb
fldt
movsb
xchg
std
pop
loope
jae
out
mov
dec
push
jo
pusha
add
mov
out
mov
pop
xchg
mov
or
dec
cmp
lds
lret
hlt
sub
sbb
jp
test
aas
push
inc
mov
sub
or
xchg
mov
scas
pop
jns
mov
loope
repz
dec
mov
mov
mov
cmp
mov
cli
sbb
add
sarl
pop
jmp
gs
xorb
movsb
dec
jno
pop
rolb
jb
adc
push
mov
pop
pop
jns
adc
pop
dec
mov
mov
test
pop
and
jle
popf
stos
or
pop
mov
mov
push
mov
fdivs
jo
push
mov
push
loopne
push
xchg
jge
fistl
sti
out
outsl
nop
pop
cmp
ds
xchg
mov
pop
clc
mov
idivl
subb
neg
mov
dec
fcoms
je
pop
inc
sbb
dec
frstor
int
jl
rcll
popa
sahf
fdivr
jo
dec
lsl
jmp
jb
pop
jg
test
push
sti
pop
es
into
lea
and
mov
xchg
xchg
sarb
fistps
lret
stos
shl
lea
jecxz
pop
jbe,pn
sub
xor
push
pop
mov
mov
int3
pop
sub
lcall
sti
clc
push
sbb
mov
outsb
pop
lods
push
fnstsw
lahf
lret
fnstenv
cmp
and
repnz
add
pop
cltd
je
lods
enter
cmp
pop
adc
cmp
xchg
repnz
xchg
inc
jo
adc
call
pop
in
call
out
pop
push
fwait
mull
xchg
sti
xor
cmpsl
mov
sbb
cmp
fisubrs
push
cmp
or
test
cs
movsb
mov
fdivrl
pop
outsl
push
lea
pop
enter
inc
jbe
ret
pop
nop
mov
push
in
push
jl
fs
and
iret
jns
out
xor
imul
xchg
mov
xchg
icebp
cmc
mov
ds
adcl
cwtl
push
std
and
inc
ficompl
les
push
jge
in
mov
je
push
shll
xor
hlt
jge
loop
lcall
repnz
popf
jecxz
cltd
ret
push
stos
add
nop
jecxz
adc
xchg
subl
pop
dec
mov
push
jns
fstpt
pop
inc
incl
jbe
pop
mov
mov
add
add
adcb
jbe
outsb
xor
mov
add
dec
add
jp
adc
mov
outsl
aad
icebp
pop
xchg
pop
xchg
cli
jl
scas
or
dec
lds
xor
fisttpll
rcrb
popa
imul
dec
call
shlb
subl
nop
jb
lods
inc
sub
xchg
lcall
test
mov
jp
push
or
fsincos
stc
stos
xchg
aas
pop
adc
dec
movsb
cltd
int3
lret
ficompl
cli
lea
pop
adc
lods
ror
xor
aad
push
cmpsl
pop
ret
imul
sbb
pop
pushf
popf
mov
inc
scas
jmp
sbb
aad
movsl
and
scas
rolb
jb
mov
xchg
push
mov
les
insl
pop
hlt
gs
add
sti
lods
mov
pop
jl
mov
loop
pop
outsb
icebp
pop
jne
adc
stos
insl
cltd
inc
out
rcrb
add
mov
inc
fwait
add
push
dec
jmp
mov
ds
pop
test
arpl
in
pop
rcll
repz
cmp
aad
bound
pop
stc
and
into
push
cmpsl
shlb
lock
fidivrl
sbb
out
scas
stos
jo
je
lahf
ss
fchs
ds
std
pop
ljmp
int3
lea
ljmp
push
cmp
jbe
rcrl
lahf
imul
sub
insl
sbb
push
lea
aas
pushf
push
pop
lret
mov
repz
pop
mov
or
fnstsw
add
int
mov
and
psrld
shlb
lcall
in
lds
pushl
xchg
sbb
jecxz
mov
jbe
inc
stc
inc
xchg
lcall
lahf
cmp
jmp
jne
xor
mov
pop
push
imul
jmp
pop
mov
mov
pop
dec
int
xor
es
loopne
inc
mov
imul
ret
pusha
jb
into
sub
ds
cmp
or
test
inc
push
mov
loope
inc
xor
jecxz
mov
inc
fs
push
jmp
xor
or
mov
daa
cmp
pop
push
movsl
adc
xchg
jmp
imul
dec
sbb
in
xchg
jp
xchg
in
dec
push
shl
mov
pop
pop
mov
mov
push
add
addb
std
jecxz
in
mov
dec
xchg
or
rcrb
mov
mov
xchg
dec
adc
inc
jg
xchg
cmpsb
dec
sbbb
scas
xorb
arpl
mov
push
mov
push
rorl
pop
push
ret
pop
mov
addps
jb
mov
pop
jmp
pop
cmp
push
pop
int3
inc
test
faddl
xchg
lret
mov
mov
addr16
fistpl
cmp
out
push
lods
inc
shl
adc
cmc
push
mov
push
test
push
mov
push
pop
shrb
pop
mov
daa
pushf
rorb
cltd
pop
jg
mov
idiv
pusha
xor
enter
mov
sub
gs
cmp
xchg
idivl
lock
stos
clc
mov
jb
fisubl
pop
jbe
cmp
adc
push
xchg
jb
pop
mov
insl
orl
inc
jecxz
add
mov
repz
xor
jns
stc
arpl
cld
stc
pop
pop
stos
lret
shlb
mov
push
sbb
or
addb
scas
jmp
clc
or
pop
pop
or
stos
mov
pop
push
pop
mov
jecxz
inc
sbb
xchg
cld
iret
adc
pop
cmp
sbb
push
dec
push
xor
in
cli
jne
adc
leave
push
cmp
adc
pop
inc
jmp
sub
dec
add
lret
les
fs
push
icebp
repz
sbb
mov
jb
mov
fildll
addr16
sti
sub
dec
add
jmp
pop
mov
push
inc
shlb
mov
cli
scas
xor
sub
je
pop
xchg
xchg
pop
pop
sbb
scas
pop
inc
add
test
dec
movsl
push
stos
sub
add
pop
mov
or
pop
jno
call
pop
sarb
adc
aam
shll
in
cmp
lock
fistpl
lea
adc
call
mov
mov
sub
in
mov
jo
nop
lea
mov
push
inc
pop
int
stos
sti
add
mov
pop
adc
xor
stc
xchg
outsl
in
pop
adc
sbb
xlat
std
loopne
insl
pop
jg
cld
add
ror
pop
pop
int
sub
cltd
push
pop
popf
xlat
mov
fnstenv
pop
mov
pop
dec
mov
jno
mov
into
ss
push
fistpl
cmp
stos
inc
adc
stc
pop
repnz
scas
ds
add
nop
xor
dec
mov
mov
je
cmp
dec
test
lea
jle
mov
lcall
push
loope
jmp
mov
dec
shrb
pop
push
inc
lret
pop
xchg
ret
or
xor
pop
scas
jne
sub
inc
pop
mov
repz
cmp
xchg
xor
mov
mov
push
pop
test
cmp
xchg
cwtl
pop
test
xchg
imul
addr16
stc
xchg
sub
jle
pop
lods
lahf
fidivrl
icebp
jae
sbb
int3
sub
hlt
pop
ret
cmp
sbb
pop
popa
repz
dec
cmp
cmpsl
int
xchg
push
not
pop
arpl
and
mov
ret
sbb
xor
mov
pop
out
xchg
xor
int
daa
loope
outsl
push
pop
adc
adc
xor
imul
leave
loope
pop
jnp
mov
lods
lock
pop
fistpl
fiaddl
mov
fstps
mov
lds
mov
punpckhbw
pop
out
fsub
int
outsl
push
mov
or
pop
fstpl
int3
sar
xchg
test
out
adc
inc
inc
enter
sbb
cwtl
divb
lods
fwait
mov
cmp
movsb
popf
clc
loop
stos
sub
lahf
push
leave
pop
in
repnz
stos
ljmp
lods
daa
and
outsl
sbb
out
pop
xchg
fs
xchg
add
xor
sbbb
cmpsb
insl
mov
fisubrl
outsb
repz
roll
mov
pop
es
fidivs
pop
mov
jae
cmpsb
push
int
pop
addr16
out
pop
push
out
mov
ja
adc
add
es
sub
jae
sbb
aam
ret
mov
jp
adc
or
lahf
popf
icebp
adc
cmc
xchg
xor
jecxz
push
sub
call
pop
xchg
mov
aad
pop
dec
sub
or
lea
sbb
test
in
arpl
cmp
sbb
clc
mov
jns
and
lcall
in
hlt
out
pop
jle
push
int
sbb
sub
lock
jb
xchg
les
leave
xor
lds
outsb
or
jnp
jbe
mov
loope
out
ret
push
pop
sti
pop
jae
mov
repnz
mov
clc
push
push
pop
pop
cmp
dec
mov
sbb
or
out
int3
mov
or
outsb
xlat
pop
xor
lret
cmpsl
pop
push
fxch
inc
cmp
adc
mov
mov
std
sti
xchg
inc
mov
mov
pop
push
push
js
lds
cmp
adc
sbb
out
and
sub
dec
cmpsl
xchg
out
loope
pop
dec
fadds
in
test
mov
rcr
lcall
push
pop
jbe
std
add
fmull
dec
pop
mov
mov
pop
pop
mov
dec
inc
adc
pop
int
ljmp
dec
inc
jb
lea
fldl
inc
int
sub
mov
icebp
cltd
repnz
mov
cmp
pop
mov
push
lret
dec
xlat
test
pop
ja
loopne
xchg
pop
push
add
and
mull
push
xor
pop
inc
popf
jecxz
sbb
bound
out
xchg
dec
enter
cmp
es
and
pop
pop
sbb
dec
stc
pop
mov
pop
lds
push
fcmovbe
mov
dec
cltd
jp
std
fwait
pop
jo
mov
xchg
fisttpll
int
out
push
data16
mov
adc
push
dec
jno
dec
stos
jne
ss
call
cmp
adc
and
mov
lods
jnp
pop
fs
xchg
mov
inc
push
xchg
or
in
dec
cmpsb
rcr
push
addl
fldt
frstor
dec
pop
out
enter
fcoms
mov
cmp
lock
jg
jecxz
loope
popf
pop
sbb
inc
jmp
pusha
inc
pop
stc
jbe
cmpb
cmc
clc
out
shlb
jg
sbb
mov
pop
push
mov
push
das
and
fsubrs
inc
lock
jle
push
adc
mov
push
jb
cmpsb
jnp
jo
pop
mov
ds
lods
cltd
loopne
pop
xor
jge
in
cmc
pop
inc
sub
lret
insl
int
lahf
outsb
movsl
in
fwait
mov
lahf
jne
sub
ficompl
mov
inc
pop
inc
mov
add
je
dec
mov
adc
dec
pushl
sbb
add
mov
and
das
scas
cwtl
sbb
ret
fldl
out
dec
push
push
dec
int
psubsb
sti
pop
xchg
sbb
cld
fsubrs
mov
inc
mov
call
lea
add
js
int3
inc
mov
mov
pop
dec
push
jg
jecxz
das
and
call
xchg
sbb
xchg
popa
cmp
daa
popf
mov
fnstsw
dec
mov
mov
fcmovb
ljmp
jo
jg
jecxz
dec
aas
rcrb
cmp
mov
add
dec
xor
xchg
push
pusha
or
add
scas
fdiv
ficomps
lock
jb
int3
mov
lea
clc
out
ss
sub
jle
pop
xor
adc
pop
or
inc
out
mov
cmpsb
cltd
shlb
push
stos
cmp
cltd
mov
dec
mov
in
xor
xor
mov
cmp
shrb
mov
je
rolb
or
adc
pusha
push
jnp
mov
sub
adc
xchg
pop
cld
mov
pop
sub
add
out
ds
push
rclb
xor
add
pop
std
sbb
adc
pop
mov
mov
inc
ret
jge
int3
mov
push
xchg
setne
pop
dec
cmp
jo
pop
loop
add
inc
push
xchg
pop
rorb
gs
pop
cmp
aam
push
jb
je
xlat
mov
insb
dec
pop
xor
notl
int
in
outsb
aad
mov
pop
pop
loopne
rclb
test
mov
pop
mov
inc
loope
ficomps
in
pop
icebp
jb
aaa
mov
and
fsubr
out
push
pop
in
cmp
movsl
xchg
jo
fcomp
pop
lret
cltd
out
mov
and
pop
cmp
cmovnp
test
xchg
pop
pop
or
sub
shlb
int
jne
in
pop
inc
test
lcall
dec
xor
adcb
push
addr16
lea
mov
stos
cmc
pusha
jns
xor
ficoml
lods
dec
sub
sbb
inc
cmp
jge
clc
jb
push
add
xorl
loopne
jecxz
lcall
jge
test
stc
pop
adc
shll
push
fwait
pushf
pusha
jecxz
movsl
in
sbb
add
lahf
add
mov
stos
xchg
xchg
movsl
mov
cmp
jcxz
movsb
dec
pop
fisttpll
lock
and
loopne
pop
int3
test
push
add
jo
or
mov
stos
mov
jno
lea
leave
imul
jo
sub
sahf
sbbb
sbb
xor
sub
mov
jl
add
mov
outsl
stc
mov
sub
scas
sbb
std
mov
dec
mov
mov
inc
scas
pop
sub
pop
sub
jge
add
mov
xor
fnstcw
or
clc
mulb
pop
iret
jnp
fiaddl
cli
inc
pop
jb
loope
push
inc
pop
inc
push
sbb
or
addr16
out
mov
pop
sahf
cmpl
aas
lea
in
push
subb
aaa
inc
push
movsl
jmp
ds
out
push
sbb
gs
test
pop
aaa
idivb
out
into
ror
rol
pushf
inc
pop
jg
cld
jbe
stc
push
pop
jmp
mov
aas
mov
addr16
jb
ret
pop
icebp
hlt
mov
pop
std
mov
xlat
sbb
push
bound
ljmp
pop
movsb
push
in
clc
mov
pop
int
lret
xor
les
adc
xchg
lahf
and
fwait
aas
int3
jnp
imul
and
fwait
mov
sub
pop
rorb
mov
pusha
mov
jo
leave
sti
mov
subb
jle
xchg
inc
and
in
or
pop
cltd
add
fisubs
xor
or
pop
int
xchg
cwtl
les
push
stos
pop
push
xchg
subl
out
dec
fyl2x
pop
mov
jb
cli
pop
pop
mov
daa
sarb
mov
dec
dec
mov
pushf
pop
shufps
adc
sbb
mov
ret
int
dec
jmp
mov
xor
xorb
je
and
sub
arpl
test
xchg
mov
sahf
das
add
lock
pop
mov
push
rcrb
and
idivl
xor
lahf
jno
dec
movsl
mov
lods
inc
xor
pop
nop
inc
add
rcrb
push
jp
faddl
clc
loopne
push
cltd
push
mov
pop
push
lret
dec
clc
int
iret
pop
test
inc
mov
jp
xchg
adc
imul
out
testb
pop
push
xchg
sub
lahf
pop
or
call
pop
movsl
outsl
out
int
adc
arpl
std
es
push
mov
sbb
pop
jne
ja
adcl
mov
movsl
stos
fistps
sbb
popa
xor
cmpsl
pop
int
xchg
xchg
push
cmc
or
push
outsl
mov
jmp
pop
lea
rolb
jl
shrb
loope
lea
mov
jb
bound
lret
mov
jae
pop
data16
mov
inc
xchg
popf
xchg
push
fsubrp
imul
adc
add
add
out
dec
dec
repz
pop
lret
sbb
mov
pop
mov
adc
std
out
scas
mov
lock
mov
and
ret
or
pop
cmp
lods
in
xor
in
in
or
sbbl
jbe
addps
pop
leave
mov
cli
in
scas
mov
jb
mov
sub
cmpsl
lods
jno
mov
fs
leave
loope
pop
std
and
xor
mov
mov
cmp
or
pop
push
test
cmovg
adc
jmp
pop
adc
mov
sahf
out
dec
pop
push
or
dec
pop
int3
loope
lcall
std
pop
jmp
popw
scas
xor
pop
int3
aaa
les
pop
sti
sub
jb
insl
mov
pop
dec
dec
out
ss
sbbb
mov
rclb
jne
scas
push
sbb
mov
sbb
xchg
lret
pop
mov
jae
pop
leave
dec
loopne
jmp
or
int3
movsl
jecxz
sbb
add
clc
lfs
out
or
lods
pop
std
sbb
scas
mov
sti
mov
cmpsl
or
test
cmp
sbb
pop
adc
mov
pusha
lret
cmpsl
xchg
stos
cmpsb
mov
je
loopne
pop
or
push
sarl
lea
pushw
pop
test
pop
pushl
lret
push
sbb
xchg
dec
and
lret
or
stos
fiaddl
frndint
mov
in
insb
push
xchg
orl
adc
cmp
adc
jae
inc
insl
jae
pop
jg
sub
pushf
pop
mov
cmp
xchg
aad
popa
ret
push
cmp
in
jb
pop
xor
fstps
cltd
out
mov
pop
adc
scas
cltd
dec
xor
pusha
sarl
iret
cmp
pop
xchg
divb
xor
inc
pop
dec
into
pop
addb
imul
cmp
pop
jl
ja
mov
pop
mov
mov
xor
in
or
pop
icebp
pop
jo
out
inc
pop
cmp
rcrl
in
out
int3
cmpl
jmp
adc
sub
jecxz
cmp
pop
lahf
and
iret
test
in
cltd
push
mov
movsb
dec
mov
scas
aam
pop
fiadds
cltd
xchg
outsl
xorb
stc
add
jmp
cmpsb
arpl
mov
out
test
add
inc
into
pop
repz
push
call
out
outsl
inc
xor
jbe
mov
mov
lea
stos
int
dec
sub
sub
loop
aad
enter
xchg
pop
pop
data16
in
movsl
jnp
mov
fwait
dec
sbb
jecxz
lahf
faddp
dec
les
push
mov
cmp
addr16
out
xlat
push
dec
pop
sbb
mov
pop
push
mov
jp
cmpsb
dec
xchg
pop
es
xchg
dec
lcall
jge
push
out
arpl
pop
cli
pop
and
fisubl
dec
outsl
cmpsb
pop
jbe
sbb
or
pop
rol
lock
out
js
xor
jle
xchg
jge
pushf
fimuls
mov
in
push
fmul
jb
xor
test
sbb
xorl
push
sbb
rcrl
and
pop
pusha
xlat
and
sub
hlt
iret
pop
dec
mov
sub
insl
cmpsb
sbb
rcrb
int3
divl
daa
cmp
loop
pop
mov
inc
jle
xlat
push
addr16
and
andb
rorl
movsb
jb
mov
inc
pop
push
pause
pop
mov
sub
mov
and
inc
xchg
pop
negb
xorb
xor
pop
test
int
add
cmc
stos
push
add
sbb
int3
pop
add
mov
and
ret
jg
stc
cmpsb
stos
adc
in
jo
pop
push
call
mov
mov
cmp
lds
aaa
movsl
sub
and
imul
popf
mov
or
and
adc
pop
mov
jl
and
das
mov
pop
lds
or
pop
adc
mov
gs
inc
int
add
popa
mov
cltd
ret
imul
out
andl
loopne
xlat
pop
lods
loope
int3
inc
jnp
fcompl
pop
cmp
mov
inc
jo
mov
xor
sbb
or
sub
xchg
add
mov
sbb
dec
popa
sbb
mov
push
sub
sub
dec
sub
pushf
sbbb
or
mov
inc
imul
pop
int
mov
loopne
xchg
leave
inc
clc
jb
sub
cmp
pop
fwait
pop
fisubrl
xor
push
cmp
pop
leave
xchg
or
pop
jl
jno
xchg
sahf
pop
or
enter
int
ss
pop
call
jbe
and
inc
popf
hlt
cmp
movsl
addr16
pop
cld
jne
ret
leave
sbb
gs
mov
push
pop
jo
es
scas
or
rcll
les
fcmovnu
inc
push
push
daa
push
repz
dec
pop
xorb
repnz
cmp
popf
jecxz
rcrl
mov
ret
rcl
int3
js
inc
cli
jmp
test
ret
cmovae
and
pop
dec
pop
arpl
push
leave
mov
mov
mov
jbe
int
in
adc
int3
lret
fstl
sbb
adc
in
push
insb
push
xor
jno
fcoms
ret
mov
jmp
pushw
mov
fcoms
jmp
lret
vaddps
insl
aad
fnsave
scas
out
cmp
mov
js
and
mov
cmp
mov
loope
or
arpl
fsubrs
mov
cmp
pop
sti
adc
ret
sbb
lea
fcom
inc
cli
cld
mov
out
mov
fnstenv
pop
mov
mov
enter
loop
cwtl
addr16
rcrb
push
pop
sbbb
cltd
xor
mov
xor
pop
sub
push
mov
inc
pop
sbb
sbb
mov
adcb
and
jl
pop
pop
scas
adc
sbb
pop
mov
je
out
ja
push
pop
push
and
shlb
lods
in
lcall
mov
add
xchg
das
lret
jbe
pop
pop
nop
negb
mov
pop
push
and
sbb
jo
xchg
in
pop
or
insl
clc
ljmp
push
out
push
es
daa
mov
cmp
mov
cltd
mov
into
inc
js
mov
imul
test
in
sbb
int
test
stc
push
pop
sub
mov
sub
lret
enter
pop
addr16
out
mov
imul
fnstcw
pop
faddl
xor
push
ret
inc
mov
pop
outsl
pop
cwtl
mov
xor
out
sbb
imul
adc
sub
mov
int3
cmpb
rolb
into
or
jne
and
pop
xor
push
cmp
or
jmp
jnp
jmp
push
adc
les
fdivr
sbb
loop
ds
sbb
in
stc
jl
insb
sbb
int
sub
cmp
pop
inc
outsl
popa
push
icebp
addr16
mov
in
mov
lcall
repz
scas
dec
or
mov
pop
rcrl
and
cmc
pop
sub
ss
pop
insb
out
pop
ljmp
repz
sbb
movsl
aad
pop
insl
mov
fdiv
mov
jnp
shlb
test
fdivs
mov
sub
cmc
cmp
pop
inc
add
jle
bound
sbb
imul
cwtl
pop
pop
jo
cmpsl
cmpsb
xchg
sbb
jae
xor
leave
mov
cmpsl
movsb
pop
rol
and
insl
or
lret
rcrb
adc
pop
into
mov
adc
jo
aad
cmc
loop
pop
pop
scas
int
mov
mov
jl
xchg
jecxz
dec
pop
push
lahf
notb
cli
dec
shl
pop
mov
repnz
movsl
fsubrp
pop
icebp
and
jnp
notl
inc
int3
xchg
pop
int
lock
loope
pop
test
cs
push
xor
lcall
sbb
dec
mov
dec
push
int3
pop
mov
xchg
test
push
sbb
jl
idiv
xor
or
scas
cmpps
sbb
pop
xchg
jle
cmp
add
popa
mov
push
push
jmp
arpl
sub
pop
pop
adc
cltd
ret
mov
inc
fidivrl
daa
rcrb
jno
mov
mov
add
push
dec
jno
clc
mov
dec
sbb
or
mov
or
movsb
pop
ss
test
jmp
pop
loope
int
aad
dec
or
outsl
gs
pop
arpl
dec
icebp
add
in
addb
std
pop
repnz
xchg
or
push
pop
xchg
rcrl
lcall
adc
mov
leave
jo
fidivrl
adc
pop
or
aad
push
cli
aam
pop
xor
daa
mov
test
sub
in
fisubl
inc
pop
enter
lods
inc
fnstenv
dec
cli
push
jns
lret
xor
add
adc
adc
and
ffreep
dec
pop
sbb
jge
lcall
stc
int
jmp
and
fildll
lea
push
loop
xor
out
dec
scas
pop
add
repz
mov
and
in
adc
sbb
scas
and
mov
test
insb
jp
pop
ja
sub
and
pushf
mov
mov
ljmp
out
sbb
js
pop
inc
sahf
push
imul
jo
scas
out
dec
push
loop
pop
or
sub
inc
push
push
sti
cltd
daa
pop
fstl
xor
xor
mov
mov
adc
dec
push
jb
and
cli
mov
ret
sub
into
pop
fsubrs
and
or
call
inc
mov
fwait
and
cwtl
mov
fisubl
pusha
push
xchg
outsl
push
sub
push
cmp
pop
rcrb
int3
sub
dec
scas
push
andl
jmp
sbb
fcoml
xchg
or
aam
scas
push
mov
xchg
sub
movsb
cld
pop
in
cltd
mov
xor
fstpl
int3
mov
and
dec
mov
sarl
stos
dec
xlat
mov
jo
scas
arpl
cmp
pop
out
dec
mov
mov
mov
fwait
sbb
jge
scas
sub
inc
sbb
dec
pop
icebp
push
jle
or
xor
jecxz
mov
pop
dec
and
pop
sbb
or
sub
sbb
incl
inc
movsl
pop
sbb
jle
fstps
pop
enter
xlat
bound
mov
adc
mov
cs
xchg
pop
pop
pop
idivb
fsts
mov
pop
jns
mov
pop
lcall
push
pop
xor
push
insl
and
xchg
andb
sub
shlb
rcrl
sbb
cmp
pop
and
sub
add
js
pop
in
pop
dec
and
dec
scas
jae
loope
int
mov
out
mov
push
xlat
pop
cld
mov
or
inc
pop
stc
mov
in
clc
jae
mov
push
adc
pop
dec
loop
cmp
pop
dec
call
cmc
dec
pop
mov
inc
ss
pop
cltd
fcomps
ja
mov
leave
inc
mov
pop
and
mov
pop
jmp
rcrb
in
fistpl
add
push
cs
lcall
adc
scas
jne
ret
stc
mov
outsl
jg
xlat
push
std
sbb
mov
sbb
mov
adc
into
xor
jne
cli
mov
jo
mov
push
cmp
and
stos
sub
pop
daa
ja
push
pop
sbb
rolb
std
fdivr
jl
enter
jbe
inc
xlat
sbbl
jmp
pop
ds
sub
dec
jo
inc
or
shrb
xchg
lea
push
cmp
jbe
dec
pop
fdivl
ja
out
pop
in
ss
icebp
int
add
mov
pop
mov
repnz
stc
adc
mov
jge
sub
dec
stos
push
pop
inc
mov
std
jae
jg
pop
popf
into
sbb
dec
sub
pop
fs
sbb
aaa
inc
pop
or
int
cmp
mov
xchg
imul
or
test
xchg
fnsave
push
int
mov
and
in
pop
daa
xchg
out
lahf
into
les
jo
dec
pop
cmp
mov
sub
mov
ret
mov
sbb
sub
mov
push
cmp
outsb
dec
scas
in
fcompl
jbe
xor
es
lret
icebp
out
sub
loope
pop
add
test
pop
pop
nop
xchg
lahf
mov
gs
or
push
inc
and
cmpsb
cltd
inc
sbb
ficomps
fwait
inc
xchg
jb
cltd
dec
pop
aas
ja
fstl
aaa
in
dec
mov
push
inc
lahf
hlt
sub
xor
sbb
fldl
sbb
jbe
addr16
xchg
iret
popa
mov
shll
pop
out
loopne
negb
sub
mov
push
xchg
xchg
pop
int
jnp
sbb
jmp
loop
cltd
pop
jae
popa
dec
jecxz
pop
jo,pt
aas
inc
sbb
out
dec
inc
iret
xor
out
and
je
push
das
and
add
mov
xchg
ljmp
out
clc
mov
les
jbe
loopne
push
scas
xor
in
out
jecxz
int3
dec
dec
pop
movsb
mov
jl
pop
testl
xchg
jo
pop
cmp
shrb
push
dec
adc
xchg
sbb
sbb
sbb
mov
jo
mov
sbbb
mov
or
test
shll
shl
pop
sbb
fwait
pop
lret
dec
js
pop
mov
sbb
or
adc
cmpsb
rorb
adc
pop
fidivl
lret
xor
lods
mov
scas
sbb
jae
xor
jle
pop
pop
push
mov
mov
jne
sbb
push
dec
inc
dec
enter
mov
lods
jns
mov
mov
rcrb
mov
movsl
sbb
xlat
mov
sti
pop
or
jg
int3
setnp
fistps
int
hlt
orl
outsb
cmpsb
das
sbb
xor
repz
xor
je
lret
pop
inc
lahf
inc
mov
sar
fwait
pop
pop
cmp
mov
pop
jns
push
dec
add
jne
pop
dec
ret
hlt
int
ja
lods
aas
mov
adc
in
pop
clc
stos
frstor
pop
orb
xor
lcall
out
sub
dec
push
jns
or
xchg
dec
or
jbe
pop
and
mov
ds
div
arpl
pop
mov
cmp
sti
cmp
push
and
dec
aaa
jo
gs
cmp
inc
sub
pop
lods
inc
psubb
push
inc
inc
mov
adc
inc
jbe
dec
insl
popf
mov
push
mov
sub
dec
roll
mov
lods
shll
les
loope
enter
repnz
mov
pop
dec
push
int3
lcall
ror
in
cmp
pop
dec
adc
subb
cli
lret
xchg
dec
sub
jmp
int
pop
push
fcomip
mov
and
aas
adc
jb
popa
mov
mov
std
fs
in
imulb
roll
push
inc
jg
inc
scas
and
repz
sbb
cmp
jb
sub
jnp
adc
ss
int3
cmpsb
jp
mov
jno
sbb
pop
lahf
push
movl
xor
in
sub
loopne
pop
add
sbb
ds
adc
jb
jmp
fmul
mov
xchg
jmp
push
pop
push
mov
sbb
loop
xor
dec
xchg
sbb
cmp
xlat
xchg
aam
pop
sub
fcomps
in
push
cmp
mov
adc
out
mov
pop
lods
inc
sub
mov
cmp
add
xor
fcompl
push
sbbl
scas
int
jmp
sbb
pop
push
push
jle
push
cwtl
lret
jo
scas
imulb
pop
push
cmp
pop
cmpsb
rcrb
and
xlat
mov
cmp
pop
imul
in
aaa
mov
jbe
pop
fildll
or
xchg
cmp
dec
pop
imul
subb
jle
sbb
cmpsb
pop
out
dec
jb
dec
imul
inc
xchg
sti
mov
js
int
sbb
mov
mov
cmp
pop
in
jmp
xlat
mov
adc
xchg
sbb
pop
jb
loopne
inc
shlb
jbe
xor
pop
jne
xor
jnp
stos
pop
push
add
push
jb
rorb
fstl
loopne
pop
push
push
xlat
pop
es
dec
cmp
in
mov
mov
fxtract
inc
mov
loopne
sbb
loope
xchg
push
fistpll
stos
push
pop
lods
pop
and
dec
fwait
and
inc
sbb
sbb
adc
aas
stc
pop
out
fsub
mov
std
mov
rcrl
rcrl
aam
int
test
lea
scas
push
xchg
or
and
mov
push
outsl
mulb
jne
scas
xchg
push
cltd
add
std
mov
cmp
mov
xchg
mov
stos
jno
stos
dec
mov
pop
sub
repz
pop
clc
or
jne
nop
sbb
mov
mov
out
call
adc
jb
pop
jg
scas
call
pop
add
lods
rorb
push
sub
loopne
or
or
in
and
lods
sti
negl
pusha
shrl
jge
mov
imul
pop
fistl
pop
aam
jge
loopne
dec
scas
lds
cltd
insl
sub
scas
inc
cmp
pop
add
jb
sbb
scas
dec
push
lret
add
push
inc
sti
in
xor
lret
fstps
cmp
fmull
pop
lds
jo
mov
dec
insl
fcomps
fimuls
pop
lahf
push
ret
fs
pop
add
jge
out
lock
adc
or
jl
mov
aaa
or
stc
pop
insl
sub
outsl
inc
repz
jb
stos
pop
aas
jmp
mov
lret
cmp
fiaddl
movsb
pop
add
jo
mov
mov
pop
loopne
lcall
jns
ficompl
imul
pop
jbe
adc
or
mov
add
jb,pn
das
data16
rcrl
and
push
push
sbb
mov
push
mov
pop
sbb
shlb
xchg
repnz
ret
in
sbb
sub
push
stos
scas
jle
mov
lcall
cwtl
xor
aas
cmp
xor
pop
pop
scas
adc
test
sbb
or
jbe
fidivrs
aas
test
sub
fadds
int
insb
push
test
lcall
rcrl
xchg
test
sbb
lods
cmp
add
pop
pop
sub
test
jo
mov
or
add
gs
mov
push
arpl
pop
dec
cwtl
mov
pop
push
clc
repz
push
pop
xor
mov
int
xor
mov
dec
add
cld
sbbb
insl
mov
mov
or
les
dec
sbb
pop
insl
lock
dec
and
or
sub
pop
pop
mov
int3
test
mov
cmpsl
xchg
in
pop
out
test
aam
test
or
mov
lcall
cmp
pop
mov
rcl
pop
jb
pop
sub
jmp
cmp
popa
divl
inc
cld
pop
lock
loope
cltd
mov
mov
sbb
mov
xor
pop
cmp
mov
xchg
mov
and
mov
nop
pop
inc
jno
int3
fcmovnbe
dec
gs
inc
cwtl
mov
dec
xlat
adc
pop
in
fisubl
and
and
mov
lea
push
fimull
lret
push
orb
pop
mov
hlt
fwait
dec
repnz
into
sbb
sbb
in
fidivrl
imul
sahf
pop
lret
mov
xor
faddl
xchg
sbb
adc
jl
ja
subl
inc
cltd
int
rorb
repnz
cmc
ds
add
arpl
cmp
inc
pop
push
sbb
push
nop
mov
fisubrl
mov
pop
and
pushf
jge,pn
int3
mov
and
pop
add
push
xlat
fiaddl
ljmp
mov
fs
pop
adc
jmp
cmp
pop
inc
fldcw
mov
cltd
mov
cmp
ret
push
iret
ret
adc
add
int
outsl
inc
mov
xor
fistps
cmp
cmc
aaa
in
fistpll
pop
push
loope
dec
xchg
sarb
movl
adcb
jmp
adc
std
sbb
fistps
out
dec
bound
dec
cli
out
scas
pop
pop
repnz
mov
pmulhuw
mov
sub
bound
pop
out
adc
and
dec
aas
imul
pop
ficoms
jne
push
mov
sbb
xor
mov
cltd
inc
pop
sub
stos
inc
rcr
sbb
icebp
jno
mov
outsb
lret
pop
and
and
sub
out
sbb
out
ds
sub
in
stos
add
pop
or
xlat
ljmp
pop
inc
shll
in
pop
add
sub
or
fiaddl
pop
cmp
orb
dec
pop
outsl
int
jns
ja
pop
mov
aas
pop
mov
ror
cmp
movsl
lods
sbb
dec
popa
jno
dec
int3
sub
pop
fistl
int
cs
xchg
fwait
jecxz
vcvtdq2ps
sbb
push
jbe
pop
mov
out
sbb
sub
push
fs
gs
int
call
scas
dec
pop
pop
std
push
pop
push
inc
cmp
dec
pop
push
mov
movsb
test
and
pop
mov
push
mov
gs
xor
pop
mov
dec
mov
loope
pop
sbb
sar
lea
mov
jns
shr
mov
pop
pushf
pop
subb
pop
jbe
dec
adc
movsl
daa
mov
jle
jnp
pop
fcmovu
xor
pop
xor
fsubl
scas
loope
fcomip
call
sbb
into
mov
mov
sub
les
adc
pop
sbb
pop
sarl
fcomip
arpl
sub
push
adc
pop
pop
mov
add
mov
xchg
dec
aad
sub
adc
int3
movl
jns
lods
loope
lret
add
mov
test
dec
lcall
xchg
pop
push
pop
xchg
jge
jb
dec
enter
les
ret
frstor
sbb
and
shrl
imul
jecxz
int3
insb
fsubrl
aam
out
cmp
cmp
je
mov
xchg
inc
test
sbb
pop
sbb
sbb
mov
jns
fcompl
ja
xchg
loope
xchg
pop
mov
enter
sbb
scas
and
sarl
lret
mov
push
lcall
mov
pop
data16
adc
add
jge
idivb
jmp
scas
add
mov
cmc
add
push
fstpl
push
in
inc
call
mov
pop
test
dec
jp
sub
fsubp
push
pop
js
mov
mov
jae
or
mov
mov
faddl
pop
shll
pop
push
pop
push
stos
popf
push
addl
push
mov
nop
pop
fucomip
rolb
arpl
xor
leave
dec
fidivrl
mov
mov
jae
int3
out
push
test
data16
dec
ja
and
mov
jecxz
adc
pushf
push
pop
mov
data16
sub
push
test
loopne
xchg
fcomps
pop
or
pop
inc
insb
int
cmpsb
xchg
push
cmp
pop
pop
and
xchg
inc
lods
mov
repz
push
push
pop
dec
fimull
push
data16
rorl
jp
test
pop
inc
xchg
pushf
arpl
and
fistpl
adc
and
fcoms
and
pop
cli
fs
dec
xorb
or
mov
lea
inc
xor
push
adc
int
js
jge
lock
dec
push
xlat
pop
movsl
pop
aaa
cld
jbe
pop
out
mov
mov
dec
sbb
pop
mov
bound
sbb
mov
movsb
mov
mov
pop
and
in
lahf
cmpsb
outsl
cmpl
arpl
mov
xor
jo
mov
mov
outsl
dec
fdivrs
loopne
cwtl
insl
out
jae
repz
adc
jg
mov
bswap
lret
pop
add
pop
imul
add
aas
pop
inc
mov
outsb
fbstp
inc
inc
pop
stc
xchg
movsl
jbe
in
sbb
jnp
mov
xor
add
mov
pop
add
test
shl
jbe
mov
outsl
mov
imul
mov
pop
mov
sbb
dec
xor
divl
int
push
loopne
pop
jno
push
arpl
mov
repnz
fcmovnbe
pop
int3
lds
mov
cld
fnsave
loop
lahf
aam
xchg
int3
add
jg
pop
int
orl
cmp
sarl
cli
pop
pusha
sbb
adcb
mov
jp
jbe
das
pop
lret
add
pushl
pop
sub
dec
mov
jle
ds
aaa
mov
xchg
jmp
int
sub
ja
jb
cmp
mov
mov
mulb
lcall
jae
dec
ret
jbe
ret
popf
in
out
lahf
in
clc
push
into
ficomps
stc
rcrb
es
gs
in
pop
movsb
enter
dec
lds
pop
cmpsl
inc
bound
xor
pop
mov
sub
pop
jbe
mov
shlb
shrb
xchg
pop
push
fisubl
cli
pop
movnti
aaa
mov
pop
scas
xchg
or
add
sahf
cmp
inc
pop
inc
and
or
mov
xchg
dec
push
imul
orb
ljmp
test
lea
hlt
mov
adc
xchg
std
ss
pop
scas
xchg
jle
cmp
roll
leave
mov
fstps
stc
jb
ret
xor
sbb
rcll
enter
bound
lock
mov
inc
lea
stos
mov
loopne
or
bound
cltd
movsl
and
push
lods
repnz
pop
lods
pushf
out
out
leave
jecxz
xor
lret
cwtl
xor
ja
sti
jno
xor
jnp
and
dec
mov
pushf
cmp
xor
outsb
dec
dec
add
xchg
mov
xchg
pop
dec
xchg
aas
mov
int3
push
lahf
out
xor
inc
int
pop
hlt
js
dec
xchg
push
and
outsb
push
in
fstpl
xor
ret
fsubr
nop
les
leave
xor
out
lahf
into
cmp
outsb
jo
mov
pop
ja
mov
pop
mov
and
scas
jb
sbb
lds
xchg
push
pop
cmpsl
lahf
xchg
push
sub
pop
mov
inc
test
xchg
sbb
js
jmp
mov
sbb
lahf
fistps
mov
insl
sub
pop
add
test
int3
fsubrs
jne
inc
es
outsb
pop
sarb
add
ljmp
bound
mov
fistpl
mov
push
xor
xchg
lcall
xor
pop
mov
cmp
mov
push
xchg
jae
test
pop
cltd
push
sbb
jle
fnstsw
inc
sub
inc
mov
idivb
pop
pop
add
sub
xchg
xorb
jnp
jne
pop
jp
cmpsl
mov
lcall
mov
pop
les
in
rcrl
pop
stos
and
inc
dec
push
jecxz
sbb
xor
push
mov
inc
and
cmc
lds
push
pop
sub
daa
cmp
pop
jb
inc
cmpsb
dec
dec
xlat
std
xor
or
cli
mov
xor
or
mov
negb
add
pop
rcrb
cmp
mov
dec
xor
movsb
or
rcr
push
pop
shrd
in
sub
cmp
jne
mov
pop
frstor
repz
pop
insl
pop
or
pop
jb
pushl
pop
icebp
mov
call
dec
aad
fsubl
pop
or
hlt
pop
push
repz
lahf
pop
inc
fdivl
pop
and
scas
popf
lcall
clc
je
sti
and
iret
pop
cmp
fldl
xor
aaa
lahf
pop
add
push
fcmovne
sub
mov
std
fucomi
pop
fwait
and
into
mov
cltd
stos
int3
push
in
jp
mov
mov
mov
xor
pop
and
adc
jg
fcoms
push
popf
mov
mov
cmpb
pop
push
jb
sti
div
mov
cvtdq2ps
pop
mov
in
jp
mov
cld
sbb
loopne
outsb
or
xchg
stos
test
ss
stc
pop
lds
das
cli
pop
ret
xchg
negl
or
mov
fnstsw
sub
in
and
dec
jle
inc
push
pop
movsl
push
mov
inc
lods
clc
add
pop
sbb
mov
sti
push
testb
aas
int3
xchg
les
mov
sub
mov
sub
push
add
lods
test
jns
pop
jl
or
pusha
movsl
shl
mov
icebp
pop
stos
int
push
lahf
mov
sub
ss
xchg
pop
add
lret
arpl
sub
pop
sbb
inc
mov
pop
dec
adc
sub
or
fistpl
adc
mov
jns
mov
push
mov
mov
sti
mov
jo
mov
adc
or
movsl
lods
mov
fadds
iret
or
outsl
xor
push
pop
in
mov
adc
iret
sbbb
lret
sbb
inc
jne
bound
mov
mov
sub
sbb
lea
loope
mov
inc
cmpsl
lods
xchg
xchg
inc
jp
sti
xchg
and
arpl
xchg
sbbl
inc
out
aaa
sub
pushl
jg
fwait
test
inc
pop
cltd
ss
stos
lahf
or
repnz
cs
sub
pop
cli
and
add
mov
mov
bound
repnz
nop
in
lahf
rcrb
fldcw
test
jne
push
sbb
dec
push
lret
in
add
add
adc
pop
mov
pop
ss
adc
cmp
insb
mov
gs
sub
mov
pop
sbb
and
rolb
pop
xor
mov
jge
push
jbe
mov
popf
ror
cmp
add
push
xor
pop
aad
fsubl
pusha
push
sbb
fdivs
nop
lret
pop
jbe
jno
call
in
mov
jge
sbb
das
dec
cmpsl
dec
mov
loopne
ret
push
jo
cli
lock
xchg
stos
and
pop
sar
dec
or
pop
mov
les
pop
xchg
dec
popa
popf
lods
dec
inc
pop
inc
mov
call
pop
imul
dec
int3
jecxz
loop
pop
leave
gs
xor
jno
fsubrs
jle
pop
mov
inc
jae
pop
pop
inc
lret
outsl
arpl
pop
inc
aaa
and
xor
and
pop
ljmp
mov
sbb
mov
dec
or
out
in
cmpsb
push
fnsetpm(287
push
vpsrlq
xchg
adc
adc
shrb
mov
xchg
mov
stos
int3
dec
stos
adc
pop
pushl
pop
lahf
stos
sahf
loope
fsubs
or
mov
sub
stos
lret
mov
xchg
movsl
stc
incb
pop
sub
adc
int3
sar
pop
mov
ret
in
gs
and
xchg
out
xchg
mov
pop
jb
mov
pop
clc
stos
pop
lock
pop
pop
repz
loope
inc
cltd
loop
shll
clc
pop
mov
mov
movl
pusha
std
mov
les
dec
adc
aas
push
test
pop
stos
or
xor
xlat
cmp
xchg
fsubl
mov
out
sbb
mov
jns
mov
jecxz
shl
push
pop
cmpb
lret
insl
cmp
pop
daa
ficompl
in
xchg
mov
or
call
jbe
mov
xchg
int
add
lods
sub
push
push
vsubps
scas
inc
dec
aas
mov
xor
pop
or
arpl
lea
ficomps
imull
cmpsl
push
pop
outsb
push
lock
or
out
pop
push
cmp
cmp
outsl
xor
inc
andb
jb
ret
adc
xlat
cmp
fcoms
cmp
es
scas
sbb
mov
pop
lods
stos
scas
sub
bound
dec
int
and
and
sti
push
inc
xchg
dec
mov
test
mov
js
inc
movsl
push
aad
push
mov
sub
repz
in
mov
sbb
insb
in
enter
aad
push
add
or
sub
jle
popf
fucomi
mov
scas
lock
bound
jns
fists
mov
cmp
mov
xchg
push
mov
adc
pop
xor
pop
or
clc
jns
jo
cmp
fincstp
or
inc
pop
sbb
mov
mov
sbb
loopne
int
sub
dec
pop
data16
lret
sbb
pop
clc
mov
mov
popw
je
and
enter
push
out
fnstenv
mov
pop
int
pop
out
or
sti
icebp
pop
or
sbb
dec
and
fldenv
inc
insb
jb
ds
aad
shl
or
push
jbe
xchg
pop
cwtl
ficoms
fisttps
pop
mov
sub
inc
pop
dec
repz
int3
call
int
jmp
repnz
aaa
jns
pop
lret
mov
dec
sbb
pop
sub
arpl
fistl
aad
cmp
jbe
fldcw
mov
mov
clc
mov
fdivr
mov
or
and
insl
stos
add
pop
xor
rcrb
mov
adc
jl
arpl
push
mov
sbb
les
pop
lcall
pop
xchg
adc
add
out
in
jecxz
int
sbb
adc
ret
xor
pop
jmp
pop
inc
mov
enter
pop
cmpsl
shl
popf
cltd
test
insl
dec
sti
loop
xor
push
dec
xor
mov
sbb
xchg
in
and
push
dec
push
adc
xchg
clc
or
mov
movsl
add
test
pop
lods
insb
add
mov
pop
mov
fstpl
adc
pop
or
jb
push
xor
cmp
rcrl
jmp
pop
xchg
imul
negb
ljmp
inc
jae
int
cmp
mov
fcmovne
cmp
jg
sti
mov
adc
fwait
scas
mov
cmc
push
fmuls
add
mov
pop
dec
scas
lea
aad
in
push
dec
xlat
mov
pop
inc
sub
sbb
pop
mov
iret
or
fisttpl
test
jecxz
jns
mov
popa
mov
es
mov
sbb
push
and
mov
rorb
xor
mov
insb
in
dec
dec
mov
and
cltd
imul
xchg
jns
cli
or
sub
sub
clc
xor
push
pop
dec
push
lods
push
adc
pop
dec
addr16
fistl
push
mov
cmp
sbb
mov
xorl
and
pop
sbb
sub
sbb
popf
adc
imul
in
mov
lahf
andb
pop
int3
mov
in
pusha
outsb
fnstcw
mov
pop
mov
aam
enter
sbb
pushf
pop
jns
push
pop
lea
jecxz
jecxz
sar
pushf
clc
xchg
pop
jle
sbb
pop
pop
push
mov
xchg
dec
lret
mov
lods
lods
dec
sbb
sub
rcrw
lcall
push
in
push
pop
cmp
adc
sbb
sbb
inc
inc
pop
pop
enter
mov
sbb
mov
pop
arpl
add
popf
repz
pop
pop
in
sub
pop
pop
xor
dec
dec
sti
shr
cmpsl
pop
nop
repnz
sub
sub
add
cli
jne
mov
adc
fs
jg
fcomps
fcompl
sub
push
lahf
pop
out
scas
shrb
jo
mov
add
bound
test
or
mov
iret
adc
les
pop
flds
sub
rcr
mov
fs
jb
in
pop
xor
push
call
dec
mov
insl
jge
clc
cmc
xchg
add
mov
flds
pop
sub
ret
lock
iret
jb
adc
fsts
movsb
fstl
pop
add
pop
jg
mov
mov
leave
lea
jo
mov
push
jno
adc
inc
mov
jge
mov
outsb
adc
sub
scas
std
aam
and
xchg
mov
or
hlt
jle
sahf
mov
push
pop
dec
lods
pop
dec
cmp
jg
cmpsb
pop
mov
dec
stc
stc
pop
mov
call
hlt
test
push
jb
pop
das
subl
xchg
pop
xor
decl
dec
in
pop
les
xchg
cmp
cmp
pop
aad
pop
jg
bound
inc
pop
pop
dec
pop
jb
loop
outsl
sahf
pop
scas
sub
and
scas
inc
mov
jne
pop
outsl
mov
cmc
les
adcl
cmp
addr16
xchg
xchg
imul
add
inc
or
js
sbb
sub
roll
scas
and
mov
in
out
push
repnz
jne
push
dec
pop
push
enter
scas
pop
in
xor
or
adc
fistpll
getsec
push
rcrb
in
test
fsubrl
mov
push
jo
jle
mov
cltd
test
shll
in
add
sub
sbb
push
dec
icebp
pop
xor
or
ja
fstpl
cmp
neg
ror
jne
lcall
ss
cmp
cltd
clc
mov
push
sub
std
enter
sti
pop
push
or
clc
or
mov
aam
mov
dec
pop
scas
xchg
shr
mov
mov
orl
loopne
pusha
fadds
movsl
pushf
add
pop
xchg
sbb
cmp
or
fsubr
cli
pop
orl
xchg
testb
fildl
mov
leave
sub
mov
adc
popf
arpl
daa
int3
roll
pop
xorl
addr16
and
pop
sub
inc
sbb
jae
sub
mov
cli
add
jmp
rcrb
jbe
adc
repnz
aam
or
leave
in
int
stos
call
movsb
int3
fiaddl
dec
movsl
mov
rcrb
jb
push
sbb
add
pop
sbb
dec
xor
sbb
adc
add
out
aad
jg
pushf
pop
inc
mov
adc
dec
lcall
jns
push
dec
pop
jmp
mov
pop
xor
test
lret
pop
xor
cmp
lea
inc
jbe
movsl
das
mov
push
pop
add
lret
cmp
pop
call
adc
push
bound
cltd
and
test
or
xchg
je
aas
jg
pop
stc
mov
dec
xchg
pop
pop
jl
sbb
pop
mov
pop
daa
jbe
imul
sti
pop
jp
int3
inc
sub
and
pop
xor
sbb
int
jl
cmp
jecxz
gs
mov
addl
xchg
xorb
mov
test
es
movsb
sbb
mov
sub
xchg
mov
dec
inc
xlat
insl
and
loopne
outsl
pop
and
dec
sbb
jb
ret
lret
pop
push
int
fists
dec
or
into
icebp
mov
xchg
aaa
lock
dec
pop
mov
jo
movb
mov
je
in
rcrb
int
enter
jns
pop
xor
cmp
rcrb
mov
fbld
sbb
sbb
shrb
add
stos
fs
scas
int3
pop
fnstsw
repnz
or
dec
stos
pop
jnp
inc
jbe
jo
mov
pop
loope
out
dec
int
mov
mov
pop
pop
loope
lahf
lcall
mov
xchg
mov
sub
inc
push
sbb
inc
and
clc
cmpsl
adc
xor
sub
pop
fwait
mov
in
mov
sbb
or
in
sub
dec
sbb
test
mov
and
push
add
push
sub
mov
cmp
daa
loop
and
jmp
cmp
mov
adc
pop
xchg
ret
pop
movsb
xchg
test
sahf
pusha
fwait
dec
int3
adc
sbb
popa
in
mov
aas
cltd
in
pand
jae
movsb
pop
sbb
fwait
sub
push
ljmp
and
and
mov
jmp
jg
add
mov
pop
inc
mov
jns
and
pop
arpl
mov
call
and
lcall
lds
mov
insb
iret
frstor
dec
addr16
pop
int3
movsl
lea
xchg
aas
pop
out
roll
movsb
cmp
pop
mov
jb
push
sub
mov
inc
outsb
cmp
pop
ret
push
divps
add
pop
xchg
fs
or
jbe
mov
push
cwtl
xor
xchg
fists
pop
pop
inc
shrl
in
subb
int3
out
push
scas
mov
fstpt
adc
inc
stos
insl
mov
or
and
aam
fwait
mov
or
into
lahf
inc
add
jnp
sub
add
fsubr
add
jl
imul
mov
addr16
in
and
jecxz
xor
inc
sub
cmc
pop
ja
add
pusha
out
or
les
mov
jb
pop
aas
and
jno
mov
lock
int
lods
gs
shrb
cwtl
iret
sti
mov
lret
inc
or
pop
pop
cmp
dec
inc
stc
leave
pop
or
jg
aaa
out
test
aas
cmp
out
jae
jno
fisubs
dec
lret
pop
mov
int
icebp
inc
mov
pop
loop
nop
aam
sbb
lret
int3
lods
es
jb
fadds
int
pop
lret
cld
call
jbe
mov
gs
lea
or
stos
mov
fimull
into
pop
xor
push
push
int3
fstps
and
dec
push
mov
aad
add
cmp
daa
jmp
or
mov
mov
add
sti
popa
pop
lods
push
fcomps
into
test
scas
nop
and
cmpsb
popf
cmp
mov
fisubrs
dec
mov
pop
int3
out
pop
xchg
mov
and
jmp
fprem1
daa
imul
cmpb
sub
push
test
movsl
insb
imul
test
out
pop
pop
xor
lods
pop
bound
pop
ljmp
mov
xchg
in
cmp
jbe
pop
pop
fwait
mov
out
int
mov
mov
insl
jnp
into
pop
dec
push
ret
popf
popa
arpl
sbbl
adc
add
int
xlat
mov
sbb
pop
fadd
or
dec
lock
adc
jbe
inc
clc
outsl
add
mov
xor
pop
jmp
enter
pop
ret
fidivrs
push
aaa
mov
in
js
sbb
aam
cmc
lea
push
xor
pop
inc
add
pusha
cmp
leave
int
pop
cwtl
or
loope
out
sbb
pop
adc
icebp
sti
mov
iret
xor
std
xor
jecxz
or
sub
sub
into
sbbl
add
push
sub
leave
mov
adc
dec
jecxz
xchg
xor
data16
sub
pop
mov
test
push
xchg
fidivs
pop
fwait
aas
ret
es
insl
pop
mov
or
sbb
int
shlb
mov
cmp
shll
imul
push
pop
pop
mov
mov
pop
push
loopne
test
lcall
push
jecxz
or
pop
mov
push
in
jne
out
xchg
rcrb
sub
add
mov
call
mov
sbb
mov
add
fwait
and
jae
cltd
and
sti
xchg
pushf
scas
sub
cs
sbb
mov
int3
test
outsl
push
pop
das
int
cmpsb
in
inc
inc
mov
inc
into
sbb
int3
pop
jae
ret
rclb
arpl
pop
inc
or
push
jp
pop
cmp
pop
imul
push
push
push
pop
xor
xchg
aaa
dec
jne
pop
mov
push
xchg
add
ja
ss
outsl
sub
mov
mov
cmp
add
xorb
icebp
ret
jae
xor
popf
lahf
pop
jp
sbb
inc
dec
jmp
sbb
rcr
jno
pushf
and
pop
cmp
fisttpl
pop
test
lret
out
add
ret
out
jge
pop
lahf
mov
and
xor
aas
lock
sbb
push
leave
sbbb
inc
mov
sub
lock
sbb
pop
or
mov
data16
jecxz
mov
out
fsubrs
jb
pop
out
add
fstpl
push
int
mov
mov
pusha
rolb
jb
pop
scas
push
shl
iret
negl
mov
xor
jb
xor
scas
dec
lar
jbe
repnz
aas
adcb
push
push
jl
psubq
pop
gs
movsl
pop
pop
cwtl
mov
jae
dec
mov
insb
pop
enter
push
test
lods
test
mov
dec
scas
fildll
mov
jmp
cmp
std
sbb
inc
in
and
bnd
push
xlat
mov
out
clc
movsl
lods
cld
enter
add
xchg
and
mov
adc
outsb
cwtl
sub
ja
jo
sub
or
mov
sbb
ret
test
in
xlat
jb
pop
stc
enter
pop
mov
hlt
pushf
dec
int
fwait
insl
mov
jge
push
cmp
out
push
pop
pop
xor
stos
mov
sbb
into
stc
mov
shll
movsb
ret
nop
wrmsr
cmpsb
cmp
dec
pop
mov
iret
dec
repz
repz
pop
popf
out
push
and
stc
or
dec
and
lock
mov
mov
std
inc
cmpsb
push
stos
mov
jae
inc
push
jecxz
cld
rolb
cmc
ret
mov
bound
dec
cld
cltd
jne
mov
lahf
cmp
movsl
lock
and
add
xor
pop
repz
rcll
daa
std
fmull
pop
aad
inc
jo
pop
add
out
jmp
pop
inc
jo
push
jb
mov
mov
xchg
movsl
push
repnz
jnp
cwtl
adc
push
aad
jle
push
mov
mov
add
pop
aam
nop
xchg
add
stos
stos
adc
xchg
xchg
mov
aad
mov
mov
jg
addr16
sbb
jecxz
pop
push
enter
in
jnp
xlat
push
sbb
rcrb
dec
add
pop
in
dec
dec
test
in
cmp
aam
jmp
dec
xchg
fsubs
sti
push
out
pop
cld
pop
rolb
or
xor
in
in
cli
stos
or
pop
push
ds
mov
data16
pop
adc
mov
icebp
mov
inc
cltd
cwtl
pop
lods
sti
mov
das
xor
ljmp
xchg
push
into
or
jns
sub
lods
addps
push
nop
shlb
ja
xor
dec
jno
int
repnz
in
push
dec
xchg
das
sbb
jns
icebp
rcll
pop
shlb
cmp
mov
adc
cli
lcall
popa
mov
dec
pop
popf
adc
xchg
add
clc
stos
cmc
pop
dec
mov
jns
aad
add
cmpsl
pop
lods
movsl
push
adc
xchg
dec
jg
pop
imul
aaa
jno
scas
jecxz
cmp
sti
adc
orb
xchg
and
loopne
dec
lcall
repnz
sbb
adc
cmp
fmull
sub
stos
inc
stos
pop
rcll
loop
mov
jmp
jge
imull
and
andl
scas
addb
and
int
cmpl
and
pop
and
jns
adc
sub
in
out
or
sbb
jo
mov
xor
pop
shl
cltd
popl
xchg
sbb
pop
fcmovnu
xor
loop
incl
ljmp
insl
and
sbbl
iret
test
or
outsb
in
out
push
mov
cmp
pusha
xchg
adc
mov
int
xchg
enter
cs
xchg
jge
add
dec
jae
pop
int3
outsl
dec
cmp
int
fidivs
negl
pop
pop
jbe
mov
cmp
mov
mov
mov
inc
inc
adc
pop
aam
jl
cmp
xchg
loope
int
mov
xchg
pop
cmp
xchg
int3
icebp
pop
dec
jmp
movsl
pop
dec
pop
push
fildl
es
movsb
loope
mov
fistps
mov
out
pop
jp
pop
mov
fisttps
xchg
cmp
push
mov
adc
xor
mov
testl
stos
int3
xchg
sub
adc
jl
out
les
dec
loopne
pop
cmp
hlt
jmp
mov
fimull
gs
mov
sub
fs
mov
dec
adc
jb
movsl
fildl
xor
cmp
inc
pop
popf
cmp
fcomip
pushf
push
bound
cmp
jne
fldenv
pop
mov
adc
repnz
pop
imul
mov
das
dec
jb
jmp
sbb
push
pop
int
adc
jle
cmp
dec
ja
shr
xchg
in
xor
cld
mov
jae
stc
cs
je
inc
push
lods
fisttpll
and
aaa
mov
shll
push
fwait
pop
cwtl
movsb
inc
bound
stos
je
sbb
push
sbb
pop
adc
pop
mov
pop
sbbl
data16
je
pop
mov
loopne
shll
adc
and
add
jo
xchg
dec
xchg
and
outsl
jb
pop
in
in
jmp
pop
mov
mov
cmpl
pop
cmc
jno
lods
push
adc
mov
enter
fists
je
push
jmp
push
pusha
dec
inc
push
mov
sbb
lock
sub
fstpl
fldlg2
pop
adc
pop
mov
out
setae
mov
xchg
push
sbb
mov
enter
cmp
push
subl
pop
ja
inc
in
dec
icebp
ljmp
jo
inc
mov
sub
xchg
pop
jmp
jp
fstps
mov
pop
sbb
adc
mov
int3
adc
repz
shrb
lcall
or
push
and
popa
jbe
mov
int3
cli
sub
push
push
pop
push
add
sbb
pop
out
cmc
insb
xor
push
adc
mov
add
sub
lahf
test
fildl
xorl
pop
push
or
dec
mov
lcall
ret
xchg
adc
xchg
call
pop
sub
inc
and
adc
cmpsl
hlt
xor
in
lods
lret
mov
jecxz
jno
addr16
or
sbb
loope
je
pop
sbb
nop
pop
int3
and
ficompl
xchg
inc
pop
push
adc
add
repnz
xchg
pop
or
pop
push
adc
in
cmp
pushf
repz
negl
sbb
sub
inc
or
mov
lds
addr16
pop
rorl
pop
xchg
sub
hlt
jno
inc
or
xchg
jo
and
loope
lret
push
inc
sbb
xchg
test
jg
test
sbb
pop
hlt
testb
push
and
lahf
int
out
xchg
shlb
pop
scas
jmp
adc
jecxz
in
cli
pop
push
sub
inc
iret
pop
xchg
xor
mov
xor
sbb
shrl
pop
lahf
fiadds
aas
jecxz
fs
add
dec
movntps
das
fwait
int3
mov
push
lods
fnstcw
pop
ficoml
ljmp
dec
mov
enter
js
pop
xor
push
pop
jbe
sti
ja
or
shlb
aaa
fiadds
pushw
pop
fbld
mov
cli
cli
scas
pop
jmp
rcr
pop
imul
cltd
xchg
sbb
orb
cmp
inc
push
cmp
push
push
add
fdivrs
pop
fstl
and
pop
ja
aad
inc
mov
movsb
sbb
jns
fsubr
xchg
cmp
mov
ret
add
or
ret
sbb
push
popf
out
pop
mov
pop
mov
mov
sahf
jl
pop
mov
xchg
lcall
pop
push
or
out
divps
jo
adc
out
inc
inc
pop
sbb
adc
sbb
scas
dec
cmp
sub
mov
dec
add
dec
xchg
mov
outsl
pop
push
sub
daa
pop
repz
mov
ret
lahf
mov
mov
dec
rcrb
jle
sbb
xchg
fsubs
push
ror
pop
xorl
out
add
aad
out
push
mov
push
inc
or
xor
jmp
je
imul
dec
sbb
push
pop
fs
xlat
mov
in
adc
pop
rolb
cwtl
fcmovne
jne
push
lcall
mov
push
or
lods
jmp
mov
outsb
mov
ja
pop
push
jnp
mov
mov
adc
cmp
mov
mov
pop
sbb
fadds
pop
xchg
lds
sbb
fucomp
popa
push
pop
outsl
sbb
jns
addr16
rorb
test
aam
xor
xchg
pop
mov
decl
push
aad
mov
mov
xor
pop
pop
mov
mov
stos
dec
jge
jg
pop
inc
out
xor
xchg
cltd
mov
push
insl
aaa
negb
es
or
popa
mov
cmp
cmp
stos
sub
ds
pop
pop
pop
xor
xlat
xchg
mov
int3
or
jle
fcmovb
arpl
fldcw
or
adc
cwtl
mov
or
push
xlat
cmp
movsb
and
enter
outsb
loopne
or
xchg
add
sbb
daa
in
ljmp
pop
inc
inc
cltd
sub
push
sub
stc
jbe
aam
adc
loope
lock
add
sbb
push
fistps
push
pusha
add
out
pop
xor
loopne
push
pop
ljmp
bound
mov
adc
jle
xchg
pop
dec
sahf
test
pop
add
inc
cmp
mov
pop
adc
fs
xchg
int3
mov
jl
sbb
mov
pop
call
or
dec
pop
xchg
in
in
xor
pop
std
mov
cltd
icebp
pop
aam
push
cmp
and
int
flds
loopne
lret
addb
mov
inc
sbb
cld
xchg
cs
or
mov
push
fnstenv
fistl
insb
loopne
pop
insl
int
fsubrp
or
mov
jle
mov
mov
xor
pslld
int
dec
ret
mov
out
mov
cmp
data16
dec
add
xchg
jns
dec
sahf
inc
pop
jae
loope
outsl
pop
push
ficomps
daa
ret
sub
pop
or
scas
jp
and
outsb
pop
in
ja
sub
adc
pop
add
cmpsl
inc
jge
pop
fwait
pop
sbb
xlat
int
mov
cmp
jb
pop
dec
rcl
inc
sahf
scas
pop
jns
xlat
dec
sbbl
leave
pop
jle
and
xchg
pop
and
aad
stc
push
divb
jns
pop
das
pusha
push
sar
sarl
test
add
aas
aam
mov
mov
inc
fisttps
pusha
rcrb
inc
or
lds
test
pusha
xor
rolb
sub
pop
and
xchg
testl
cmp
push
sbb
pop
cmp
jl
push
mov
pop
push
lret
popf
dec
fidivrl
outsb
pop
jecxz
sbb
jmp
mov
or
arpl
into
sbbb
pushl
daa
fistps
stos
xlat
mov
mov
dec
jg
sti
jl
xchg
loope
lcall
leave
push
jecxz
mov
xchg
sub
dec
mov
push
lret
push
dec
sbb
mov
mov
pop
pop
cmpsl
pop
clc
pop
or
es
push
pop
imul
nop
je
test
or
scas
dec
mov
sbb
xchg
jmp
rcrb
sub
jb
sub
lods
ljmp
repz
in
dec
repz
pop
jae
repz
pushf
stos
gs
iret
fistl
sbb
mov
mov
pop
sbbb
xchg
cli
or
inc
mov
sub
insb
add
fsubrp
lea
push
cmp
lret
mov
int3
dec
pop
pop
test
and
push
sbb
pop
testl
xchg
pop
roll
mov
mov
fcoms
test
adc
ret
and
add
dec
imul
int3
cmp
ljmp
mov
movsl
dec
loop
jns
pushl
je
pop
imul
push
sbb
sti
pop
dec
test
pop
inc
jmp
clc
add
lds
pop
shrb
and
xor
mov
les
dec
cmp
pop
inc
pop
lea
pushf
sbb
sbb
sbb
pop
sti
jae
mov
pop
aam
xor
rol
lahf
xchg
sub
fimull
stc
addl
mov
fsts
pop
mov
sbb
push
outsb
lock
push
pop
mov
push
xor
jo
mov
sub
pop
icebp
insb
xor
xchg
xchg
mov
push
enter
fisubrl
dec
cmpsl
mov
ja
pop
add
or
sbbb
mov
enter
dec
mov
out
mov
aaa
or
sbb
or
pop
insl
jge
xchg
out
fwait
adc
xor
mov
xchg
pop
in
sbb
mov
inc
push
mov
jb
mov
insb
push
and
in
aaa
mov
test
add
fistl
addr16
inc
mov
pop
sub
pop
cmp
xchg
sbb
sub
pop
outsb
xor
fcom
xor
cmc
jg
mov
sarl
sbb
jl
or
inc
push
test
je
mov
movsb
std
mov
mov
aaa
mov
dec
cmpsl
fcompl
loope
mov
cmp
mov
cld
pop
push
mov
jb
lock
pop
fisttpll
dec
pop
dec
sbb
aad
pop
adc
pushf
inc
fstpt
stos
add
fdivr
pop
sbb
mov
mov
ljmp
pop
dec
mov
xchg
or
sub
sbb
push
xchg
or
sbb
scas
mov
jbe
pop
cs
jae
int3
inc
int
mov
and
sarb
lods
mov
pop
pop
les
lcall
jecxz
adc
sub
cmpsb
int3
je
jmp
pop
rorb
jg
add
sbb
dec
shrb
jns
fsubl
pop
xchg
mov
cvtps2pd
dec
enter
fbstp
push
adc
sbb
insl
xchg
out
jecxz
push
cld
adc
pop
dec
clc
sbb
stos
loop
fs
pop
sarb
cs
push
xchg
cmp
pop
data16
jmp
pop
cmp
mov
mov
inc
mov
pop
pop
xchg
arpl
pop
mov
mov
jle
pop
bound
sub
rcrl
in
movsl
stc
mov
int3
pop
incb
xor
mov
fidivrl
dec
fwait
pop
lcall
inc
pop
xor
jl
lcall
into
pop
sbb
lods
push
sbb
dec
test
adc
je
pop
mov
add
int3
repz
fsubr
push
scas
and
in
pushl
sbb
mov
pop
test
dec
lret
test
pop
pop
mov
nop
pop
data16
push
test
es
stos
sbb
pushf
sbbl
pop
jp
scas
push
fists
jbe
arpl
lods
fdivl
jae
aam
dec
xchg
popf
sub
inc
pop
fwait
lea
bound
jb
add
dec
pop
mov
xchg
inc
sub
ficompl
leave
jbe
push
and
stos
xchg
int3
xchg
inc
push
pop
mov
bound
pusha
jmp
sbb
add
add
pop
addr16
jne
sbb
push
xor
in
in
mov
sub
pushf
sbbb
pop
scas
inc
pushl
push
mov
push
pop
ss
xchg
fistl
jp
pop
hlt
or
dec
push
ljmp
dec
inc
add
pop
nop
pop
outsl
sbb
out
inc
mov
cltd
testl
mov
and
or
fsts
ficompl
mov
push
or
sub
sub
fiaddl
pop
adc
sub
pop
cld
push
xchg
xchg
mov
xor
jae
mov
mov
and
push
insb
hlt
stos
pop
int3
mov
leave
cmpsb
mov
inc
mov
loopne
shr
pop
and
xchg
add
bnd
xchg
int3
pop
jge
mov
and
or
jno
and
push
add
hlt
mov
dec
stc
sub
insb
fbstp
sbb
inc
jmp
cld
jp
int
sub
mov
pop
mov
or
mov
pop
imulb
stc
pop
dec
sahf
js
movsb
cmp
sbb
push
cmp
leave
mov
push
in
pop
int
out
pusha
cmp
and
leave
inc
repz
jb
cmp
inc
in
popf
inc
pop
lods
scas
int
call
out
jg
pushf
pop
fiadds
xchg
and
test
and
pop
jb
pop
xor
in
sbb
jo
nop
push
jnp
subb
stc
inc
in
add
and
test
ret
inc
xor
fstp
pop
dec
mov
aas
sbb
faddl
insl
mov
push
xchg
sbb
enter
fmull
imul
mov
fxch
pushf
sub
pop
fmull
jnp
pop
jle
fs
mov
iret
pop
pop
cmp
sub
mov
hlt
and
mov
fstpt
jl
add
push
pop
in
xlat
dec
je
mov
mulb
sub
fnstenv
jno
inc
addr16
int
outsl
int3
and
mov
mov
push
jl
pop
pop
sbb
pop
movsl
mov
clc
xchg
iret
fidivl
loopne
sahf
call
sub
pop
addl
add
rorb
jo
and
movsl
mov
rclb
enter
fldt
pop
fistl
jbe
xchg
sub
push
ss
fstpl
mov
fildll
mov
pop
shrb
jbe
pop
pop
or
std
push
mov
and
cmc
push
jg
loope
mov
xchg
and
mov
ret
pop
cmpsl
clc
cmpsl
or
mov
hlt
jae
pop
ja
xor
dec
pop
lcall
pop
lret
push
adc
cld
pop
bound
sbb
fnstenv
and
call
mov
sbb
jecxz
mov
std
sub
testb
sbb
sbb
sub
stc
enter
out
insl
cmp
sub
push
or
push
lcall
cmp
sbb
scas
dec
mov
stos
ror
pop
js
scas
in
sbb
cmp
dec
push
dec
fcmove
pop
mov
push
mov
das
mov
lock
pop
push
add
insl
mov
out
fbld
cs
cmp
pusha
sub
lock
inc
mov
test
xchg
lcall
pop
fmull
and
aam
idivb
inc
jmp
pop
sbbb
jle
lea
sbb
test
pop
cld
jns
int
pop
push
in
pop
push
ficompl
lock
fistps
mov
cmp
pop
lcall
fs
lea
sbbb
sbb
sbb
sub
pop
add
lods
loope
icebp
in
or
pop
aam
pop
mov
xlat
sbb
pop
inc
shrb
into
dec
dec
jo
fadds
or
pop
mov
movsl
xor
pop
xor
mov
stos
std
int3
cmpsb
jns
pop
pushf
int
pop
scas
push
addr16
mov
push
sub
mov
push
push
push
mov
and
jb
daa
push
xlat
fdivs
adc
add
lcall
mov
cwtl
xor
pop
mov
jg
lea
sub
and
mov
xchg
dec
inc
mov
mov
test
mov
mov
or
push
mov
loop
js
dec
adc
pop
mov
cs
sub
xor
cli
sbbl
int
push
jle
push
xchg
notl
pop
jl
leave
sbb
dec
pusha
sbbl
loope
xor
xor
mov
ret
cs
inc
add
scas
in
mov
push
sbb
xor
stos
int3
pop
pop
ljmp
mov
jb
pop
lods
bound
mov
dec
mov
push
mov
pop
gs
filds
mov
mov
adc
pop
mov
push
sub
xchg
scas
cmp
mov
xor
data16
pop
fnsave
jmp
divb
xor
pop
iret
xlat
popf
pop
js
push
adc
xchg
aam
sbb
subl
inc
in
popa
pop
test
adc
std
add
jg
or
push
or
pop
loope
dec
pop
fstpt
test
rolb
lret
sbb
rcrb
test
pop
in
fimull
outsl
dec
adc
pop
mov
mov
fisubrl
inc
pop
data16
sbb
enter
mov
int3
das
inc
add
pop
je
or
sub
in
test
jecxz
insb
xor
jg
mov
cmp
or
arpl
mov
pop
shlb
sbb
scas
cmp
pop
cld
repnz
sub
dec
out
inc
int
gs
scas
andb
sarl
mov
cmp
xor
mov
arpl
pop
mov
out
mov
aad
dec
mov
bound
pop
jbe
call
pop
out
or
xchg
mov
jb
push
jae
cwtl
divb
pop
xchg
inc
sahf
sub
pop
aas
adc
mov
pop
shr
dec
jmp
fstpl
decb
dec
lret
cmpsb
pop
mov
xchg
pop
or
jb
prefetcht0
movsb
fisubl
pop
push
fcmovne
ret
das
inc
pop
insb
sarb
mov
lret
xor
dec
mov
pop
and
mov
and
inc
jle
ds
in
mov
pop
jp
add
mov
and
cld
pop
pop
das
arpl
push
add
mov
pop
fisubs
or
pop
scas
and
dec
fdivrl
lret
int
shll
pop
gs
jge
add
or
mov
adc
cmpsl
adc
mov
inc
pop
push
jbe
lret
pop
sti
ljmp
mov
stos
popf
xchg
fldt
sub
pop
push
popa
je
in
fimull
pop
add
inc
fstpl
mov
fnstenv
push
sub
push
mov
test
in
ret
mov
add
xchg
pop
jecxz
or
push
add
jmp
pop
adc
idivb
pop
cmc
lock
and
push
cmp
mov
scas
int
popf
out
pop
cmp
cmp
fstpt
jge
mov
pop
mov
flds
inc
pop
sub
mov
add
inc
outsb
pop
mov
adc
fstpl
xchg
mov
cmp
shll
dec
scas
push
pop
jmp
push
jmp
ljmp
stos
mov
push
pop
pushf
and
scas
mov
dec
or
add
jb
fisubs
dec
pop
cwtl
jmp
mov
test
fmull
shl
out
mov
jbe
rolb
pop
sub
or
cmpsl
pop
xor
or
sub
mov
cld
test
xchg
sahf
adc
jne
inc
jmp
mov
xchg
stc
mov
xor
push
lods
ja
out
cmc
mov
xchg
cltd
pop
int3
and
jp
int
ds
pop
push
push
push
es
shrl
sbb
push
mov
scas
push
cld
mov
inc
jae
xchg
add
jecxz
shr
mov
movsb
jge
fistpl
and
jl
sahf
inc
dec
loop
mov
and
mov
mov
sub
add
insl
in
dec
and
cli
data16
dec
pop
mov
std
pop
sbb
and
js
xor
stc
add
and
fwait
aaa
push
lcall
jno
subb
leave
lea
out
int
roll
sbb
push
add
pop
outsb
out
dec
xchg
or
cwtl
movsb
outsl
xchg
sub
ficoml
loope
add
or
test
and
add
rorb
mov
mov
xchg
pop
in
jb
dec
push
cs
in
int
fcoms
mov
pop
fists
jnp
mov
and
push
xchg
mov
int
mov
mov
add
inc
pop
or
adc
mov
or
adc
in
pop
subl
lea
rolb
pop
pop
int
roll
jmp
xchg
add
add
cmp
pop
push
fcoms
fstps
pop
in
lds
divw
scas
xchg
hlt
bnd
aad
cmp
dec
lds
and
lods
shll
jns
push
inc
mov
inc
cltd
pop
mov
jno
lock
mov
subb
mov
dec
pop
js
int3
jle
push
adc
pop
jbe
add
arpl
shl
mov
jne
loopne
loop
pop
xchg
mov
mov
mov
scas
mov
inc
xor
sbb
mov
xchg
adc
in
lret
leave
jecxz
insl
stc
pop
add
cli
add
pop
sbb
sub
mov
xor
dec
pop
stos
subb
fdivrl
xor
jno
pop
outsb
lea
push
xchg
pop
and
jne
into
arpl
int
lods
iret
mov
fisubrs
orl
lret
sbb
or
movsb
jne
cld
xchg
push
lret
test
pop
ja
inc
out
push
mov
add
mov
pop
and
pushl
xchg
int
inc
clc
xor
shrb
add
sti
sub
cltd
js
mov
out
lods
xor
cltd
enter
add
mov
subl
lret
rcrb
dec
lods
xchg
lds
xchg
sub
mov
call
int
data16
bound
xchg
or
pop
push
imul
out
pop
fistpl
and
lahf
icebp
outsl
cld
fildl
sarl
aad
call
cmp
sub
imul
mov
xor
scas
inc
pop
mov
and
subl
cmp
adc
repnz
jp
fwait
pop
inc
test
pop
negl
fiaddl
jmp
or
out
mov
sbb
xchg
mov
scas
pop
cmp
test
rcrb
jg
push
xor
je
pop
inc
jecxz
xor
int3
jae
mov
jo
loop
int
inc
es
sbb
sub
out
xor
scas
stos
mov
jo
cltd
cmp
icebp
pop
fs
add
into
push
push
pop
int3
pop
stos
xchg
inc
jmp
and
inc
xchg
mov
addr16
in
xchg
js
push
mov
sub
sub
fstpt
jl
jno
dec
mov
pop
jge
bound
cltd
aam
pop
loope
mov
cmp
cmp
or
js
inc
pop
mov
adc
sub
insl
popa
sbb
cmp
push
xlat
mov
sub
mov
pop
push
pop
stos
int
and
push
ds
or
jge
out
inc
add
in
jl
divl
push
jne
pop
cmp
jae
mov
lods
aad
jnp
insl
or
mov
push
pop
add
xor
jle
pop
and
add
jbe
mov
pop
iret
lret
fmull
pusha
sub
gs
ja
xor
pop
in
mov
int3
testb
in
pop
dec
test
cmp
pop
xchg
add
push
sbb
jle
inc
sti
ret
xchg
mov
sbb
stc
fisttpl
aam
push
cmp
pusha
add
dec
adc
int3
mov
inc
pop
movsl
int
xor
cmpsb
out
sub
cmp
pop
stos
fldenv
test
sahf
xchg
mov
test
push
mov
or
adc
dec
xchg
pop
int
mov
lcall
mov
xchg
cmc
sbb
adc
inc
js
popa
jns
mov
mov
fsubrs
mov
inc
subb
or
xchg
pop
notb
mov
lcall
int
cmpsl
pop
into
push
sbb
repnz
mov
pop
ret
xchg
mov
imul
add
dec
aam
pop
jg
pop
pop
lods
jmp
sub
mov
insl
sbb
push
pop
cmp
push
pop
lahf
jmp
lock
mov
dec
shll
pop
xor
adc
mov
test
lahf
jb
xor
fistpl
inc
cmpsb
lahf
out
and
inc
jmp
sahf
repz
push
pop
popf
push
je
stc
push
xchg
xor
sbb
std
jns
inc
cmp
mov
and
scas
cmp
mov
and
jnp
xchg
in
daa
inc
fisubrl
mov
in
ret
loopne
sbb
pop
push
adc
xor
pop
pop
mov
cmp
pop
add
cltd
push
sub
cmpsb
dec
stc
pop
ffree
mov
aaa
jg
repz
pop
in
test
outsl
dec
movsb
test
inc
lsl
jbe
mov
xchg
pop
out
pop
mov
dec
rcrl
mov
mov
imul
outsl
jbe
jno
leave
adc
hlt
cmc
gs
or
adc
outsb
aaa
fimuls
sbb
pop
leave
es
lret
add
outsb
cwtl
xchg
pop
mov
and
loopne
frstor
ja
and
ds
adc
jg
cmp
enter
pop
pop
in
gs
inc
push
jbe
sbb
lcall
fimull
pop
insb
in
jecxz
sti
cli
or
mov
mov
and
lods
movsb
sbb
ss
sbb
test
nop
push
lea
mov
lcall
jecxz
lahf
xor
mov
loope
or
test
jecxz
xchg
pop
les
and
repz
jns
pushl
in
mov
mov
xor
mov
pop
and
lahf
sbb
sub
inc
lahf
mov
ret
xchg
mov
sbb
and
fmull
pop
dec
mov
mov
push
lods
cli
pop
dec
ljmp
stos
xchg
dec
mov
mov
mov
je
sti
cmp
sbbl
inc
dec
out
inc
addr16
mov
ss
mov
sub
shl
pop
repz
jecxz
out
scas
iret
xor
fcoms
popaw
mov
add
mov
pop
out
mov
or
loop
lret
pop
sub
es
popa
jo
mov
sbb
dec
loop
pop
fwait
scas
fwait
xchg
lds
add
pop
cld
fs
cmpsb
sub
daa
pop
mov
sbb
pushf
mov
push
sub
add
inc
ja
mov
xchg
int3
jne
out
outsb
mov
int
imul
add
jo
mov
mov
fiaddl
adc
es
xchg
cmp
pop
sbb
or
enter
mov
outsb
inc
push
sub
int3
stc
pop
jb
lods
repnz
fmul
sbb
js
cmp
lock
xor
lods
orb
cld
ftst
add
scas
mov
int3
jb
leave
mov
fs
xor
mov
std
das
mov
pushf
pop
ficoml
mov
test
or
leave
xor
cmp
out
dec
mov
clc
cmp
pop
outsb
je
in
lea
and
mov
gs
xchg
pop
inc
popa
fldcw
sub
inc
dec
xlat
aad
jmp
jo
lods
in
ss
je
mov
lahf
mov
sbb
add
in
inc
xchg
push
pop
sub
repz
cmpsl
pop
dec
mov
insb
or
sub
dec
and
mov
cmc
inc
dec
arpl
mov
scas
sbb
dec
xchg
inc
mov
pop
push
sub
enter
and
jge
mov
data16
pop
std
push
add
sbb
jo
jl
jae
rorl
adc
pop
adc
cmp
lcall
xor
mov
lahf
ret
std
pop
and
aam
and
inc
sbb
and
movsb
repnz
sbbl
and
adc
sti
shlb
or
xor
aam
mov
jecxz
sub
sbb
nop
cmp
jns
pop
xor
orl
dec
and
int3
movsl
pushl
push
mov
pop
jne
scas
pop
pop
sbb
inc
std
dec
jge
js
pop
sbb
shll
inc
enter
into
add
insl
mov
pop
ljmpw
cmp
es
int
rcll
popf
mov
push
rcrl
sbb
pop
pop
inc
xor
mov
lea
imul
pop
mov
shrb
cmc
lods
call
test
ficomps
sub
fldcw
sub
icebp
sbb
lea
int
nop
jb
pop
adc
sbb
leave
lcall
mov
lea
test
fnstenv
in
lret
inc
or
and
inc
cmp
sbb
lea
je
gs
sbb
fsubr
out
pop
xchg
pop
mov
leave
mov
lds
fbld
arpl
lods
mov
jl
push
dec
popf
fadd
cmc
pop
pushf
inc
imul
jno
sbb
pop
andl
aam
mov
sbb
sub
add
cmp
outsl
pop
movsb
in
scas
dec
inc
lret
fcmovnu
push
loope
pop
popl
ljmp
cmc
pop
or
out
sub
pop
and
pop
fiadds
and
sub
xor
pop
adc
or
mov
mov
xor
lods
xor
dec
lods
pop
add
pop
inc
in
daa
jb
pop
cmp
xchg
cli
jno
mov
xchg
jae
mov
mov
xlat
jp
cmp
inc
pop
lcall
jl
push
mov
xchg
jns
dec
pop
xor
pop
push
out
hlt
stos
ficompl
test
arpl
int3
mov
mov
loope
cmc
pop
mov
cli
scas
cltd
jmp
add
mov
push
mov
jb
lods
ret
sbb
lods
and
test
dec
pop
mov
push
push
bound
ljmp
sub
sbbb
ja
jg
lahf
insb
add
rolb
stos
mov
jno
and
pop
inc
sbb
cmpsl
lods
pop
mov
mov
iret
push
jmp
inc
fcmovnu
jne
inc
or
outsb
out
mov
jo
sbb
dec
pop
pop
sub
repz
inc
push
fwait
repz
cwtl
cmp
mov
inc
aad
movsb
jbe
idivl
pop
mov
add
xor
dec
arpl
data16
sahf
or
mull
subl
aad
cltd
cs
scas
bound
mov
sbbb
add
into
imulb
shl
negl
ret
add
repz
repz
call
lods
stos
arpl
mov
stc
xchg
mov
xchg
pop
aad
fsubl
dec
inc
cli
sbb
sub
xchg
les
push
int
mov
pop
stos
pop
xchg
pushf
push
das
and
sub
pop
sub
adc
in
push
mov
lea
in
shll
test
inc
push
in
push
cmp
pop
stc
sub
mov
mov
pop
dec
repnz
xor
lods
lret
andl
jg
xor
and
sbb
xchg
call
pushf
pop
mov
xchg
push
outsb
in
xchg
jnp
cs
pop
add
pop
or
jecxz
jbe
xchg
dec
pop
pop
and
and
dec
inc
xchg
jge
jae
xchg
in
jo
inc
stos
pop
bound
pop
and
ret
lock
pop
stos
popa
out
loop
inc
lret
in
push
repz
pop
cs
scas
and
nop
jne
and
pop
jbe
dec
xlat
xchg
cli
adc
pop
in
sbb
mov
xorl
das
pop
add
push
lret
pop
test
dec
cld
out
dec
mov
stos
cmp
jnp
mov
stc
out
test
and
sbb
inc
or
xor
ret
jecxz
mov
mov
dec
push
pop
scas
pop
out
ss
jl
push
mov
add
sbbb
mov
or
sbbb
or
lret
push
addps
dec
inc
arpl
in
outsb
pop
int3
adc
pop
call
les
dec
pop
test
xor
outsl
lahf
mov
cmp
ja
pop
subb
imull
aas
lahf
dec
sub
out
jg
push
pop
jge
push
mov
mov
pop
arpl
xchg
js
and
pop
pop
int
sti
loop
fucom
popf
lahf
sbb
jmp
inc
ret
imul
mov
ds
xor
repz
mov
lods
jno
pop
or
imul
mov
push
in
adc
dec
mov
pop
les
dec
push
pop
outsb
popa
inc
cmpb
push
sub
in
sbb
mov
cmp
xchg
mov
and
testl
mov
mov
add
dec
pop
imul
push
lods
outsb
dec
scas
adc
pop
and
pushf
xor
fbstp
inc
test
inc
test
pop
adc
fsubrs
dec
insl
mov
pushf
pop
xchg
and
add
fdecstp
mov
pop
repz
inc
cmp
push
ficomps
xor
enter
or
fdivrl
scas
shlb
sub
push
pop
pop
shl
jbe
cmpsl
sub
lcall
mov
sbb
pop
addr16
dec
add
pop
cmpsl
int3
mov
adc
mov
jecxz
or
adc
mov
dec
lea
out
pop
cmc
xor
int
adc
sbb
pop
cmp
pop
and
lret
pop
sub
dec
mov
inc
rcrb
mull
dec
cmp
pop
sub
pop
push
sahf
push
in
std
scas
iret
lret
pop
mov
mov
pop
xchg
add
cs
data16
mov
inc
insl
bound
stc
dec
cmpsb
fcompl
inc
out
push
outsl
or
xlat
fnstcw
nop
pmuludq
mov
mov
push
out
mov
inc
out
or
xchg
aas
and
push
pop
fisttpll
aam
outsb
subl
jns
mov
sahf
push
mov
test
pop
sbb
call
pop
aaa
out
or
arpl
push
pop
idiv
aad
and
adc
xor
outsb
jle
dec
inc
icebp
pop
sub
int3
mov
movl
xchg
pop
imul
mov
mov
movsb
mov
inc
pop
dec
lea
sub
repnz
pushf
outsl
dec
mov
pusha
pop
sbb
push
popf
loop
pop
mov
std
inc
jg
push
cmc
pop
cmpb
insl
inc
adc
pop
pop
add
int3
adc
cs
mov
pop
pop
loopne
je
push
fisttpl
and
ret
mov
aam
gs
outsb
lods
fstp
dec
pop
movsb
mov
xchg
mov
sub
decl
mov
cld
jl
cmp
xchg
lret
or
fistpl
inc
dec
pushf
adc
iret
pop
aaa
test
mov
pop
push
and
ja
xchg
cmpb
sbb
sub
pop
xor
mov
pop
and
sarl
cmp
mov
dec
mov
push
in
pop
inc
fwait
cmp
mov
pusha
add
or
inc
xor
add
mov
lahf
sti
pop
iret
aas
cmp
sbb
mov
pop
testw
ja
fcoml
sub
push
outsb
jnp
popf
daa
push
mov
movsb
sbb
xchg
insb
pop
xchg
cmc
jb,pt
test
cmp
out
ror
push
push
pop
lods
repz
sub
nop
movsl
lahf
dec
xchg
daa
mov
xchg
sarb
dec
pop
clc
mov
das
scas
sbb
loopne
fwait
js
add
or
aas
popa
int
and
pop
pop
lahf
cmp
mov
adc
inc
xor
jecxz
test
ljmp
cmp
mov
lods
cltd
jns
pop
lds
mov
mov
ss
add
and
sbb
hlt
call
shlb
mov
pop
adc
lahf
lret
int3
mov
gs
int
cmp
sub
mov
jo
xchg
mov
es
mov
sbb
fsubs
sub
push
daa
add
jb
pop
sbb
repz
pop
enter
mov
sbb
or
das
cmp
filds
daa
cmp
mov
xchg
pop
int
pop
xor
pop
sub
pop
in
addps
and
dec
sub
mov
xchg
out
pop
test
test
pushf
jle
pop
loope
ja
or
or
incl
cld
mov
sti
mov
sbb
lahf
jl
sub
adc
push
adc
mov
out
pop
mov
bound
dec
call
adc
or
leave
and
pop
imul
stc
jmp
or
mov
in
xchg
sarb
pop
shrl
frstor
mov
pop
adc
aad
int
push
mov
pop
mov
or
clc
mov
mov
mov
stos
je
pop
out
fsubl
movhps
jbe
insl
pop
xor
xor
sbbb
mov
add
pop
test
jmp
lahf
adc
rclb
in
dec
wrmsr
xchg
popa
out
into
inc
mov
sbb
or
mov
stos
orl
inc
adc
dec
pusha
aad
test
pop
sbb
loope
mov
mov
adcl
sbb
iret
stc
das
mov
scas
sbb
mov
jb
push
xchg
and
pop
jb
int3
hlt
pop
sarl
out
idivb
rcrl
jmp
in
adc
icebp
jbe
push
idivb
pop
jmp
pusha
mov
inc
int
ss
fsts
hlt
or
hlt
mov
sti
fimull
or
sbb
stc
ss
sub
sbb
xchg
inc
adc
sub
dec
hlt
pop
repnz
outsb
mov
mov
mov
int
pop
out
repnz
out
add
cli
les
in
test
mov
or
out
pop
pop
sbb
pop
test
in
xchg
mov
xor
pop
loopne
or
ret
pop
int
mov
mov
push
sbb
mov
lods
pop
jb
cld
pop
cmpsb
mov
sub
add
pop
mov
jmp
pop
mov
push
sbb
loope
pop
ljmp
insl
pop
push
pop
in
aad
jecxz
adc
lret
xor
jbe
das
fisubs
push
lock
in
or
cld
pop
aam
dec
pop
mov
test
mov
adc
inc
rcll
pop
sub
pop
or
jo
mov
clc
xlat
adc
mov
stos
and
mov
or
int3
inc
mov
int
sub
sbb
mov
fcmovne
fsubr
sub
mov
fildll
pop
sbb
sub
jmp
insl
dec
pop
xchg
xorb
les
xlat
loop
add
idivb
pushf
cmp
test
pop
mov
rcrb
scas
in
insl
jmp
pop
popa
rcrl
adc
inc
pop
ljmp
fdivrs
stc
lods
bound
pop
mov
ja
pop
inc
shlb
dec
adc
lahf
mov
out
mov
mov
mov
pop
fnstenv
dec
pop
xchg
or
dec
mov
mov
pop
dec
sub
ja
pop
stc
jmp
fnstenv
fildl
scas
mov
fistpll
dec
dec
mov
out
sbb
test
gs
cmp
aam
xlat
icebp
xchg
lcall
xchg
test
dec
cli
mov
push
mov
enter
cld
add
pop
fidivrl
imull
mov
bound
push
jbe
sti
repnz
lahf
pop
cmp
je
sub
jns
pop
not
add
into
sete
mov
rcrb
sub
and
sbb
sub
sbb
pop
cwtl
and
jns
mov
add
mov
or
nop
mov
popf
enter
mov
std
inc
scas
xchg
je
or
mov
pop
sub
xlat
mov
add
or
dec
and
pop
cmp
mov
test
loopne
or
inc
pop
lcall
pop
mov
jnp
inc
dec
cmpsb
in
bound
dec
fnstcw
rcrb
or
lret
shl
repnz
push
pop
mov
std
out
mov
hlt
negl
loope
gs
lret
pop
sub
cmpsb
es
cmc
adc
mov
pop
movsl
insb
dec
pop
jae
and
jge
imul
pop
jle
push
push
mov
fs
sub
fstpl
fidivl
xchg
lret
pop
mov
add
sbb
sarl
ret
push
mov
cwtl
cltd
insb
data16
pop
sbb
sub
adc
jge
dec
mov
pop
pusha
std
enter
int
mov
cmpsl
mov
adc
in
pop
loopne
push
jnp
pop
jo
adc
pop
loope
or
hlt
sbb
or
push
imul
inc
icebp
mulb
roll
pop
cld
sub
stos
sub
lds
push
mov
pop
dec
add
mov
pop
enter
hlt
mov
leave
mov
and
fwait
push
cmp
outsb
mov
sub
test
mov
dec
in
pop
dec
mov
rcr
sub
clc
sbb
pushf
add
pop
cmpsl
jmp
jo
mov
cmp
push
clc
ss
sub
scas
sahf
sbb
outsb
daa
aad
or
movsl
mov
sbb
pop
dec
xor
jae
add
push
scas
popf
idiv
inc
adc
cmp
iret
pop
inc
int
fsub
and
pop
dec
jae
leave
fstp
repz
lret
je
test
or
cmp
fcmovne
stos
fildl
arpl
pop
mov
push
int3
lahf
lret
mov
add
iret
and
fcompl
mov
pop
mov
jl
push
shl
pop
jmp
xchg
push
or
sti
dec
jge
out
or
pop
vdivsd
pop
scas
sub
insl
mov
push
push
addr16
sbb
cwtl
cmp
lds
out
and
pop
push
daa
pushf
rclb
cmp
scas
insb
pop
cmp
mov
test
lods
pop
mov
stos
jecxz
aam
adc
call
int3
adc
push
dec
insb
inc
pop
sbb
in
cmp
pop
push
insl
cmp
fwait
int
fists
pop
andl
negl
popf
aam
inc
add
sahf
insl
jg
push
inc
and
push
lds
adc
scas
mov
jbe
lret
int3
lods
std
popf
jl
popl
pop
add
inc
mov
int3
addl
lret
lods
mov
fcomps
out
repz
mov
xchg
call
pop
loope
jge
sbb
jbe
cltd
mov
mov
sub
jnp
xor
jmp
mov
inc
push
jbe
mov
inc
pop
mov
dec
cltd
inc
or
iret
pop
addr16
jecxz
repz
pop
dec
js
jbe
add
imul
mov
dec
push
push
xor
cwtl
call
sbb
pop
rorb
int3
inc
or
scas
pop
psubd
inc
jl
cmp
pop
pop
pop
je
xor
in
pusha
test
daa
mov
lcall
aad
jno
fcmovb
mov
pop
cmp
xlat
daa
iret
push
sbb
jo
mov
pop
into
sub
cmpsl
mov
leave
add
enter
pop
mov
mov
popa
jecxz
jg
pop
inc
push
pop
imul
test
pop
aaa
adc
mov
or
aam
pop
int
xor
sub
adc
pop
inc
mov
push
scas
cmc
pushf
jo
loop
fsub
jb
mov
pusha
bound
add
loopne
cmc
scas
mov
nop
mov
stos
sub
mov
sub
jo
orl
test
mov
aas
outsl
inc
stos
dec
or
popa
call
mov
mov
sub
mov
and
test
xchg
or
dec
jecxz
std
int
jbe
adc
push
mov
or
hlt
pop
and
fnstenv
out
je
pop
loop
lea
pop
add
mov
popa
test
ja
outsl
cmp
mov
cmp
mov
fbld
fdivs
add
daa
and
sbb
dec
xchg
rcrl
adc
lock
sub
jmp
mov
pop
and
imul
jne
or
add
dec
mov
insb
mov
add
cld
mov
and
cmp
sub
in
mov
xchg
decl
pop
and
jp
jo
pop
dec
add
notl
in
mov
stc
pop
xchg
sbb
mov
aaa
loopne
scas
dec
je
call
xor
pop
sub
cld
arpl
jle
pop
repz
lea
je
pushf
inc
and
push
fldt
or
mov
cmpsb
cwtl
cli
pop
int
imul
divb
dec
pop
push
push
arpl
inc
cmp
or
xor
hlt
cli
lret
jl
stc
bound
out
inc
cs
adc
fwait
jmp
pop
push
sarl
insl
int3
pop
pop
mov
int
sbb
pop
adc
dec
and
loop
int
jg
cmp
enter
pop
out
lea
inc
and
scas
sbb
adc
mov
sub
fxam
scas
pop
or
cmpsb
pop
push
into
pop
cmpsl
shr
and
mov
mov
imul
repnz
mov
pop
push
and
in
add
sbb
mov
sub
lds
adc
pop
pop
inc
push
mov
jecxz
movsb
outsb
mov
pop
inc
ss
call
and
ret
or
push
dec
das
jns
jae
xchg
mov
ror
pop
push
fidivrl
inc
and
push
cltd
pop
cwtl
repnz
adc
push
mov
nop
dec
push
testb
mov
cmp
iret
sub
mov
pop
cmp
fsts
sti
pop
dec
xor
adc
pop
in
mov
int
sbb
pop
sub
and
subb
inc
in
adcl
pop
and
sbb
stos
sarl
adc
imul
push
ret
pusha
jae
dec
sub
or
cmp
sub
clc
cmp
xchg
mov
push
and
dec
scas
inc
pop
popa
cmp
jp
in
loop
or
mov
pop
pop
sub
cmpsl
add
nop
pop
mov
int
hlt
dec
push
pop
mov
mov
call
pop
test
push
xchg
int
out
dec
aam
or
sbb
adc
fstpl
cmp
stc
push
pop
mov
shl
push
pop
push
mov
out
rcr
mov
int
arpl
mov
cli
std
push
pop
xchg
add
push
mov
push
sbb
or
flds
inc
lea
pop
loop
mov
out
dec
stos
and
and
push
sbb
jbe
dec
cmp
push
insb
mov
add
pop
pop
stos
push
or
jne
pushf
pop
mov
and
cmpsb
cmp
fcoms
add
mov
pushf
add
xchg
lock
lahf
insl
jb
sub
sbb
sbb
stos
mov
dec
test
out
mov
int
fisubl
cmp
test
shlb
cli
outsb
push
scas
mov
jns
xchg
xchg
jae
or
rcrb
lcall
enter
adc
movsl
pop
sbb
rcrb
add
push
js
sti
pop
clc
jbe
adc
adc
cmc
xor
fnop
push
mov
xor
inc
cli
ljmp
xchg
sbb
jns
xchg
xlat
cli
sbb
and
mov
and
lahf
jge
cmc
pop
fcomi
scas
dec
fisubs
pop
jbe
test
sub
into
int
andl
aas
popf
aam
sbb
dec
shl
lahf
lods
push
jb
fstpt
mov
mov
push
adc
jg
or
sub
lret
pop
mov
and
cltd
insl
mov
dec
in
push
adc
fwait
ror
shlb
dec
sbb
in
adc
pop
and
imul
jg
outsl
mov
shlb
enter
mov
and
adc
cld
push
loop
out
mov
pop
subb
shlb
pop
mov
cs
mov
mov
pop
out
cmp
ja
scas
adc
js
dec
xchg
jbe
mov
movsl
xchg
pop
sub
and
sbb
cs
cmp
jo
push
ret
sarb
pop
jl
xor
cwtl
sub
push
mov
cmpsl
inc
pop
push
pop
out
xchg
arpl
mov
insl
cmp
out
pop
jbe
push
aas
ret
leave
std
push
pop
xchg
mov
fmuls
test
pop
clc
mov
insb
push
mov
and
fcompl
daa
lcall
add
pop
jg
sahf
ret
aas
insl
ficoml
cli
pop
dec
stc
jbe
scas
pushf
cwtl
mov
pop
fmuls
pop
loop
or
mov
dec
mov
pop
out
daa
je
dec
adc
xchg
int3
or
rcrb
mov
adc
fisubrl
mov
mov
xchg
cld
jbe
fsubr
fucomi
or
daa
xor
pop
cmpsl
ret
pushf
sub
stos
jl
or
imul
cltd
in
sbb
scas
fdivrl
add
inc
jmp
cmp
pop
shll
inc
mov
lahf
loopne
pusha
sub
lock
fsts
pop
or
pop
cli
sti
mov
xor
js
je
pop
movsb
dec
jbe
mov
pop
adc
std
push
cld
sbb
xor
mov
test
add
movsl
test
lahf
mov
cmpsl
xor
add
dec
and
pop
jp
push
lods
mov
pop
std
xchg
ja
int3
dec
in
jo
mov
jg
aaa
add
mov
pop
bound
nop
adc
adc
jne
pop
mov
mov
bound
mov
push
popa
mov
jo
push
xchg
insl
jge
dec
sub
lods
jo
call
push
pop
and
scas
sbb
lds
mov
jns
pop
stc
add
add
push
jo
mov
or
sub
sub
dec
pop
adc
mov
sub
pop
xchg
lods
and
movsb
push
pop
jecxz
cwtl
outsl
pop
loopne
adc
aam
je
or
fsubp
jp
push
in
pop
mov
inc
js
fadds
cli
mov
xor
pop
jp
outsb
fnstcw
gs
inc
push
hlt
add
cmp
push
jns
js
jne
out
ret
mov
sub
mov
bound
pusha
jp
fnsave
insl
imul
adc
cmp
fcos
mov
pop
xchg
mov
mov
cwtl
test
inc
jb
movsb
int3
add
mov
ljmp
pop
mov
in
mov
jbe
adc
xchg
pop
test
or
mov
sbb
movsb
shlb
or
and
sbb
push
jno
mov
stc
sbb
ss
pop
call
and
lea
xor
mov
jp
pop
xor
push
fdivr
pop
xchg
pop
clc
add
sti
push
pop
pop
sub
movsb
ret
or
pop
je
mov
sbb
dec
ficoms
insl
cmpsb
cld
pop
fimull
and
lret
adc
jbe
mov
sbb
or
push
je
jp
and
js
pop
pop
or
sub
mov
int3
jno
call
inc
sbb
rorb
xchg
add
loopne
inc
pop
int3
pop
pop
sahf
mov
pop
or
push
nop
push
xor
xchg
inc
jmp
je
movl
jp
scas
sub
jo
mov
xchg
jo
mov
rorb
or
arpl
ficoml
pop
dec
jno
repz
pop
insl
rorl
xlat
push
and
adc
ret
mov
cmp
int3
orl
and
pop
cmc
bnd
inc
mov
addps
out
sti
pop
push
mov
push
mov
mov
iret
lret
pop
arpl
and
adc
aaa
pop
mov
sbb
lret
cmp
fisubrs
int
mov
pop
mov
mov
push
repnz
sub
rcll
inc
icebp
fwait
cld
sub
xor
fnstsw
aad
jae
inc
mov
sbb
adc
pop
inc
cmp
pop
enter
mov
mov
or
xchg
scas
nop
xchg
fisttpll
insb
ljmp
jbe
mov
or
xchg
ds
shrb
push
sbb
adc
or
lock
push
loope
rolb
sbb
pop
aam
clc
pop
cmp
pop
jb
inc
test
loope
pop
mov
int
repnz
ss
inc
int3
mov
pop
ret
adc
pop
movsl
adc
ss
ja
cmp
pop
jbe
push
rcrl
sti
mov
ds
cli
data16
pop
loop
pop
mov
sub
jb
xor
ret
jno
insl
enter
pop
orb
insb
mov
vmwrite
pop
das
push
test
mov
mov
push
dec
pop
cmp
sbb
fidivrs
pop
inc
pop
pushf
sahf
xor
sbb
stos
jo
or
xchg
sbb
pop
sahf
mov
leave
dec
xchg
stos
mov
cmp
mov
sub
mov
cmp
jmp
loop
lods
sbb
adc
cld
fisubs
and
sbb
adc
cmp
mov
pop
xchg
int
loopne
pop
stos
mov
sti
nop
pop
mov
pop
mov
movsl
popf
fistpll
mov
sbb
sub
aas
lahf
and
ja
pop
jae
and
sub
rclb
xor
fimuls
xor
cmp
test
jbe
mov
pop
lret
in
sub
cltd
mov
sbb
fs
pop
push
push
xchg
inc
mov
pop
mov
mov
inc
into
lods
pusha
push
dec
xor
sbb
jecxz
shll
das
xchg
lock
int
cmc
movsl
adc
xor
ljmp
fwait
sbb
adc
cli
lahf
inc
insb
call
stc
in
ficompl
add
xchg
int3
inc
pop
mov
div
push
mov
ja
mov
mov
rcrl
push
rolb
jbe
xor
arpl
fstl
push
pop
cmc
sub
xorb
push
repz
cld
dec
jo
cmp
mov
lods
pop
lret
test
imul
pop
sub
dec
pop
popa
or
or
and
xchg
jle
pop
pop
jmp
jbe
push
xor
push
sub
xor
xor
pop
int
push
arpl
in
push
dec
xchg
out
sbbb
int3
inc
inc
mov
fwait
loop
mov
es
or
push
dec
rcr
lret
pop
icebp
adc
mov
adc
xor
inc
and
shlb
cmc
sti
mov
in
cmp
jo
xchg
test
pop
and
add
sub
fwait
sbb
or
push
fisttps
les
and
into
jmp
negb
jmp
pop
dec
inc
das
pop
pop
mov
out
jg
pop
repz
cmpsb
imul
lret
and
rcll
inc
test
imul
cmc
cmpsl
fiaddl
pop
int3
push
xorl
testl
mov
mov
mov
cld
dec
push
bound
pop
pusha
jae
inc
insb
push
dec
negl
adc
test
std
cmp
rcll
scas
int
mov
es
inc
push
pop
shrl
lods
push
cmp
fistps
push
fildll
xchg
in
xor
mov
fwait
test
addb
test
insb
mov
cmp
jae
xor
sbb
hlt
jmp
sbbl
cmpsb
nop
insl
adc
popa
ret
lods
les
notl
inc
out
jp
sub
insb
or
mov
jmp
pop
or
addr16
adc
dec
jl
add
mov
mull
lods
in
fidivrl
insl
repz
or
mov
pop
mov
dec
add
pop
int3
push
mov
test
pushf
adc
or
push
sbb
rcrb
int3
push
movsb
push
xor
scas
cld
nop
dec
test
sub
or
mov
adc
mov
pop
xchg
lcall
jb
lret
and
mov
stc
mov
push
insb
push
dec
pop
mov
out
pop
mov
pause
jp
sbb
push
imul
inc
sub
cld
leave
mov
push
sbbb
dec
mov
or
pop
sub
inc
xchg
jp
pop
clc
mov
mov
pop
jmp
fwait
es
out
push
rcrb
cmp
mov
jne
push
sti
pop
jmp
jp
mov
adc
inc
pop
xchg
mov
sub
cmpsl
imul
incl
xchg
mov
mov
cmp
pop
notb
pop
bound
lds
push
lea
add
inc
lods
dec
jae
fmuls
xor
pop
std
xchg
scas
cmp
call
dec
mov
lret
out
leave
cltd
ret
sub
shrb
pop
jge
jbe
pop
pop
dec
lret
cltd
jns
rcrl
jno
iret
lea
and
sbb
sbb
lahf
mov
sti
loopne
adc
pop
into
shll
scas
push
pop
sub
cs
scas
mov
cmp
pop
cld
pop
outsl
int
insl
clc
xchg
sbb
dec
xchg
pop
in
dec
jns
pop
cmp
add
mov
push
pop
dec
pop
jp
repz
call
pop
pop
popa
jbe
mov
sbb
stos
pop
jo
ret
pop
adc
lds
sarb
fnsave
jb
popf
in
cld
cmp
rorl
push
js
xchg
push
pop
rol
fldt
nop
sahf
fwait
pop
dec
sub
subl
jno
lret
bound
mov
iret
in
mov
ret
dec
push
pop
xor
jge
fstl
dec
xor
jbe
loope
in
sub
jp
insl
add
push
aam
js
sbb
inc
add
nop
loope
dec
xor
loop
mov
inc
or
or
int
mov
adc
xchg
push
sbb
mov
lcall
ljmp
lods
or
mov
jb
jl
repz
std
push
add
arpl
jnp
sbb
jnp
sub
repz
jbe
lock
xchg
sbb
jns
fcomps
pop
scas
push
xchg
scas
dec
pop
test
inc
or
inc
or
jns
pop
and
xor
add
cmpsb
aad
ja
je
mov
lea
sub
int
cmp
gs
pop
push
push
add
pop
xor
ffreep
std
fnstcw
pop
out
pop
push
pop
xchg
or
fdiv
pop
scas
inc
les
scas
dec
push
pop
jle
mov
outsl
popf
repnz
pop
dec
ror
mov
dec
jns
pop
jmp
in
dec
push
daa
loop
pop
movsb
adc
fldt
cmpsl
jno
pop
insl
xchg
das
jbe
xor
mov
add
lret
adc
sbb
adc
mov
test
lods
gs
pop
pop
adc
ret
je
mov
mov
mov
dec
adc
jl
adc
frstor
pop
mov
sbb
pop
out
inc
dec
mov
inc
stos
gs
dec
cmp
mov
sbb
jo
leave
into
fisttpl
icebp
test
ret
sbb
lds
mov
fucomi
xor
das
mov
inc
mov
xchg
adc
adc
pop
mov
loope
enter
pop
outsb
pushf
scas
or
mov
push
and
mov
xchg
dec
adc
stos
pop
fidivl
mov
dec
fistps
mov
inc
sbbb
lahf
pop
int3
mov
mov
lods
xor
sub
stc
inc
andl
mov
fsubr
cmc
jne
or
das
sbb
insl
adc
test
adc
les
adc
dec
xchg
mov
mov
stos
fnstenv
js
inc
sbb
or
mov
cltd
test
in
sbb
shr
in
sub
xor
pop
jb
sub
mov
inc
jne
mov
fidivl
sub
mov
mov
pop
mov
jo
inc
in
loope
cmp
pop
icebp
popa
pop
mov
lcall
rcrl
fcmovu
repnz
sbb
aam
subl
fmul
nop
mov
dec
inc
pop
lret
xchg
pushf
jb
outsb
das
insl
stos
xor
dec
pop
aam
daa
dec
jp
pop
enter
or
jae
pop
mov
popa
inc
ss
int
dec
adc
push
lret
pop
adc
sub
inc
inc
push
leave
pop
popf
jns
mov
repnz
cltd
orl
rcr
pop
and
adc
sub
mov
pop
movsb
push
pop
out
jmp
scas
cli
cld
jge
sub
pop
push
jo
pop
mov
int3
stos
mov
push
jo
lods
cmp
pop
mov
mov
int
inc
cmpsl
repz
mov
mov
ffreep
idiv
sbb
les
loopne
xor
sbb
cmp
cmp
jmp
shr
fstpl
push
inc
mov
lods
lcall
pop
sbb
pop
jo
mov
movsl
sub
fcmovne
jne
xor
insb
hlt
mov
dec
sbb
mov
lods
xchg
mov
loopne
scas
mov
mov
mov
sub
iret
test
xchg
orl
xlat
rcrl
ds
mov
lret
pop
jbe
mov
xchg
xchg
lods
jns
or
pop
xor
addl
jo
outsl
lea
fstpl
jnp
inc
sub
jae
stos
mov
sub
lret
xchg
repz
mov
add
lcall
push
pop
in
movsb
popf
pop
dec
xchg
ja
aas
jbe
xor
out
inc
stos
add
ror
rcrb
in
lahf
mov
inc
sub
jb
lock
shlb
pop
sbb
dec
scas
lds
mov
mov
mov
pop
push
sbb
cmp
jge
mov
pop
adc
sub
sub
jge
inc
fstps
out
ja
inc
fisubs
stos
sub
mov
cmc
fldl
jb
xor
sbb
adc
mov
sbb
cmp
pop
lahf
nop
add
sbb
or
lods
dec
cld
fbstp
scas
pop
pushf
mov
ficoms
sub
sar
cs
or
cwtl
dec
es
sub
pop
jbe
xchg
jns
dec
mov
aad
cmp
jg
jnp
fsubl
loope
jbe
fdivs
jo
fwait
sbb
pop
adc
xchg
xor
pop
inc
adc
stos
add
dec
pop
dec
ljmp
cltd
inc
mov
in
iret
dec
xor
push
push
cmpsl
dec
arpl
rorl
pop
sbb
shr
jmp
fmull
enter
push
aas
fs
idivl
pop
xlat
shlb
mov
mov
cltd
hlt
pop
push
rcr
out
sbb
mov
sbb
int3
cmp
jo
flds
xor
mov
in
sbb
fdivl
es
pop
mov
pop
rcll
jnp
int
sbb
push
sti
mov
test
bound
repnz
sti
arpl
in
mov
pop
push
or
pusha
stos
daa
add
nop
pop
cmc
lods
sub
adc
adcb
pop
inc
inc
int
dec
add
push
pop
jl
sub
into
dec
popa
enter
push
enter
dec
scas
or
ror
pop
mov
jl
cmp
sti
out
add
movsb
outsb
stc
out
sbb
int
push
out
and
sub
pop
dec
push
mov
pop
mov
jae
push
pop
ret
sbb
pop
or
sahf
int
scas
pop
cltd
fcomip
or
fildl
in
fisttps
pop
mov
mov
jo
jmp
xorb
lods
cmpsl
add
cmpsb
imul
jp
in
xchg
pop
add
mov
mov
pop
or
push
orb
xchg
mov
or
push
jecxz
push
cmpsl
fistpl
clc
popa
pop
arpl
sbb
lea
fnstcw
pop
dec
ror
push
xor
or
sub
sbb
add
sbb
jecxz
cmp
cld
movsl
mov
push
dec
cmpb
jo
mov
mov
add
fsubs
and
scas
shlb
or
or
fldt
pop
mov
mov
push
repz
lods
lea
mov
add
push
pop
ljmp
adc
xor
jns
aas
jb
mov
ret
push
test
or
inc
mov
fdiv
scas
push
iret
pop
fimull
scas
out
notl
inc
or
mov
inc
xor
sbb
or
mov
ret
xor
lods
nop
pop
mov
in
and
sub
or
pop
xor
and
scas
arpl
add
pop
flds
test
clc
cmp
addr16
repz
fs
inc
nop
jg
pop
stos
es
cwtl
aam
lods
lds
fstl
js
bnd
jo
mov
filds
and
sub
dec
iret
push
outsb
mov
adc
mov
imul
jae
pop
xchg
xchg
dec
mov
inc
or
cmpsb
xchg
adc
and
dec
test
mov
leave
xor
pop
pop
lret
fistl
lods
pop
mov
inc
sbb
pop
je
sub
fdivrl
pop
push
int
ja
hlt
lret
mov
xor
rorb
pop
pop
sbb
xor
and
dec
xchg
movzbl
pop
and
inc
mov
ss
push
pop
insb
dec
fistl
ret
xor
sarb
in
add
mov
clc
sub
test
pop
cltd
jg
scas
std
repz
mov
loop
xchg
cltd
add
push
pusha
pop
jb
mov
jbe
clc
inc
pop
or
xchg
in
test
pop
sahf
add
adc
inc
jno
pusha
leave
insl
out
push
sbb
mov
or
je
pop
fs
clc
sbb
push
pop
sub
test
int
and
or
pop
cmpsb
jno
inc
lcall
push
movsl
pop
mov
pop
call
arpl
rcrl
insb
jns
into
lds
mov
dec
sbb
pop
mov
sub
sbb
ja
and
pop
les
xor
cmp
cltd
int
pop
jle
jecxz
jl
stos
cmp
jb
mov
mov
in
fcompp
and
pop
leave
daa
int
out
xchg
or
cmp
dec
adc
pop
inc
fwait
and
xchg
lcall
insl
lcall
test
pop
pop
mov
fsubs
pop
lahf
lret
into
sbb
pop
pop
pop
divl
test
xchg
pop
repz
or
bnd
cmp
stc
mov
sar
cmp
mov
push
add
lcall
pop
cmp
and
adcl
pop
jecxz
repnz
jmp
sbb
mov
mov
ficoml
mov
pop
push
sbb
and
pop
adc
call
pushf
jle
stc
sbb
pop
fsincos
popa
scas
movsb
jb
pop
ds
icebp
pop
int
or
dec
mov
push
inc
pop
iret
repz
rolb
pop
sbb
cmpsb
mov
pop
dec
repz
xchg
aam
dec
cltd
fs
fmul
jae
pop
adc
jg
inc
int
ret
bnd
insl
cmp
pop
dec
int3
fyl2x
into
testl
and
int
mov
test
call
lock
xchg
mov
bound
jbe
shlb
jne
aad
loope
sub
mov
mov
jnp
push
mov
push
insl
mov
fists
clc
jb
lods
pop
sbb
sub
pop
rcll
jecxz
xlat
xchg
pop
cltd
jno
and
and
es
and
pop
jle
push
mov
js
mov
dec
xor
inc
fldt
jecxz
pop
data16
test
mov
sub
mov
sbb
dec
or
pop
or
insb
je
xchg
lret
int3
inc
bound
int
cmp
xchg
fisttpl
dec
outsb
sbb
xchg
test
pop
fidivl
sub
push
lea
pop
cli
lret
push
sub
pusha
and
add
cmp
or
sbb
dec
fucomp
sub
jno
fdivs
push
mov
in
in
dec
xchg
xor
mov
pop
mov
cmp
sbb
pop
and
dec
push
pop
dec
int
outsl
mov
lret
add
xlat
lcall
jns
sbb
add
pop
pop
xchg
mov
fnstenv
decl
pushf
stos
sbb
aas
cli
xlat
sbb
call
aad
inc
daa
jae
enter
mov
sub
inc
adc
in
push
pop
lds
xchg
adc
test
inc
cs
fstpl
int3
aad
pushf
pop
xadd
fistps
out
add
cmp
outsl
jb
dec
jle
aaa
lret
cmp
pop
pop
mov
mov
add
inc
cmp
pop
inc
jg
addr16
ret
rcrb
cmp
xchg
adc
lock
int3
in
jecxz
mov
pusha
stos
and
mov
pop
bound
sbb
test
inc
mov
cltd
and
mov
fnstsw
mulb
incl
pop
inc
scas
mov
insb
adc
je
cmp
lock
movsl
or
jmp
jno
sbb
push
pop
lahf
repnz
and
xchg
clc
adc
sbb
fld
lock
xchg
mov
andl
mov
enter
cld
pop
or
xor
sbb
adc
out
pop
sub
cmp
pop
mov
cmc
lods
lcall
fsubrl
mov
jbe
lea
cmpsl
mov
xchg
adc
loopne
pop
out
or
lds
jmp
ljmp
adc
and
stos
pop
pop
xchg
push
lea
mov
or
sub
pop
cli
mov
fwait
addr16
das
lcall
push
and
pusha
aas
mov
bound
dec
pop
mov
sbb
sbb
jae
cmpsb
push
cmp
je
fdivrl
stos
mov
mov
cli
lcall
pop
addr16
xor
fldt
pop
out
jecxz
jnp
pop
ja
push
sahf
ret
inc
or
pop
pop
cmpb
xlat
decl
mov
js
ljmp
jecxz,pn
ds
mov
fwait
cltd
addb
mov
jnp
cwtl
stc
pop
ficompl
stos
mov
jb
push
pop
xchg
mov
test
pop
sbb
popf
xchg
loopne
adc
push
jnp
ret
push
add
in
adc
lock
orl
jae
adc
mov
sbb
add
mov
lret
dec
cld
popf
in
fadd
int3
jg
jne
fstpt
push
pop
and
fadd
pop
push
stc
outsl
pop
pop
test
clc
mov
cld
sti
sbb
xor
inc
hlt
and
test
pop
mov
jmp
push
jbe
push
test
xorl
pop
push
cltd
ret
sub
cmpsb
pop
shl
inc
sub
jmp
ss
pop
mov
adc
mov
pop
jbe
sub
mov
inc
dec
pop
xchg
movsb
mov
mov
fcmovne
pusha
out
stos
fpatan
sub
push
pop
mov
cli
cmpsl
clc
inc
xchg
cwtl
dec
dec
cmp
xchg
jo
stos
inc
cmp
out
int
xchg
mov
daa
inc
lahf
pop
and
add
push
dec
out
movsb
pusha
enter
sbb
jg
cmp
pop
mov
fdivrs
push
shlb
add
jmp
enter
sbb
mov
adc
mov
gs
pop
pop
xor
xchg
or
and
sbb
movsl
lret
fcomps
lcall
mov
bound
pop
push
out
mov
test
pop
push
int3
loop
pop
arpl
xor
fnstcw
push
pop
push
xchg
lcall
add
sbb
dec
popf
add
push
stos
add
loop
pop
cmp
icebp
mov
js
pop
push
jle
mov
aad
dec
fmuls
movsl
outsl
mov
pusha
iret
xchg
pop
decb
sbb
pop
in
mov
shlb
pop
xchg
mov
out
jae
or
pusha
pop
cmpl
sbb
push
mov
testb
jecxz
clc
pop
and
or
xchg
in
mov
cmp
mov
je
add
ret
int3
repnz
pop
sub
stos
mov
sbb
dec
test
roll
or
cltd
sahf
pop
clc
cmp
movsb
insl
pop
push
lea
dec
or
dec
pop
test
and
cmc
pop
sbb
fsubl
pop
fnstenv
out
imul
dec
mov
in
test
rcrb
xor
jo
pop
lea
lock
jae
loope
in
pop
push
pop
repnz
xor
fstpl
addr16
loope
das
or
pop
pop
fnstcw
inc
lret
loop
mov
out
dec
insl
lahf
xor
mov
jp
sub
popf
out
push
sahf
dec
push
dec
pop
xor
mov
ret
fistpl
sub
nop
jge
push
popf
out
pop
test
add
xchg
dec
sti
stc
push
pop
xchg
lea
cmpsl
cmp
int3
stos
pop
cmc
jge
push
pushf
pop
mov
mov
xchg
idivl
pop
xchg
adc
sub
pop
bound
lcall
into
pop
mov
mov
mov
xchg
pop
mov
imul
loop
std
jle
jo
xchg
inc
and
push
test
fs
movzwl
mov
sub
adc
fcmovbe
xchg
sub
pop
cltd
add
fcoms
in
int3
test
sub
js
or
push
jbe
icebp
dec
sbb
jl
divl
loopne
xor
lea
loop
ficomps
jp
call
cmp
cmpsb
or
jns
push
pop
mov
int
xchg
xchg
mov
pop
std
mov
inc
sbb
shrb
clc
fdivs
pop
rcrb
int
imul
fs
es
push
mov
lods
jnp
out
int
cmp
push
mov
sbb
aas
in
mov
sub
mov
dec
or
push
or
int
lahf
jge
cs
fistpl
ds
movsl
scas
fptan
cld
mov
sub
dec
add
flds
mov
or
sub
pop
sub
cmp
or
pop
sub
mov
add
push
xchg
sub
cmp
xchg
sbb
pop
cmpsb
shr
subl
pop
sahf
jno
fdivrl
insl
cltd
sub
mov
lahf
fsts
sti
xlat
jbe
pop
loopne
dec
jb
mov
mov
loope
mov
hlt
cwtl
push
lret
fcoml
pop
ds
dec
jl
int3
mov
adc
dec
pop
lods
pop
or
push
pop
inc
mov
pop
lret
sbb
cmp
outsb
rorl
repz
add
push
addr16
xchg
dec
dec
cltd
mov
mov
test
gs
stos
movsb
and
pop
ja
jne,pn
test
fsub
pop
lahf
or
xchg
sub
pop
mov
sbb
into
xchg
pop
pushf
mov
pop
mov
jno
std
jecxz
xchg
and
xchg
insb
and
dec
pop
and
shr
dec
cmp
mov
pop
xlat
sbb
testb
imul
pop
pushf
mov
in
pop
adc
outsl
es
pop
xchg
rcrl
lods
adc
pop
xchg
cld
jo
dec
adc
clc
subl
out
js
les
and
fwait
or
test
mov
pop
sub
scas
cmpsb
rcrl
jge
pop
fs
lahf
dec
lcall
mov
dec
fsts
push
stc
or
xchg
xor
mov
xchg
out
pop
hlt
insl
xor
pop
mov
dec
mov
out
pop
mov
jg
leave
cmp
cli
adc
jo
sub
inc
pop
pop
gs
inc
adc
outsb
repz
lods
dec
aam
mov
mov
pop
hlt
mov
sub
inc
lret
pop
mov
and
xor
pop
push
sbb
adcb
lret
loop
inc
jmp
xchg
pop
ss
pop
leave
stos
inc
lahf
pop
cltd
push
push
pop
ja
clc
in
jecxz
arpl
pop
and
cmp
and
adc
dec
mov
jbe
pop
cmc
fnsave
or
ja
mov
and
pop
rcrl
aad
jbe
push
cli
pop
sub
rcr
xchg
jl
sti
dec
and
sub
adc
inc
jg
addps
push
cld
shl
aad
jmp
push
xchg
dec
mov
sbb
and
push
push
dec
sub
addb
incb
mov
jmp
push
bound
into
sbbl
jmp
xchg
xchg
or
sti
mov
stos
orl
loop
sbb
pcmpeqd
in
push
outsb
mov
cld
in
fiaddl
int
and
jns
or
leave
test
mov
adc
xchg
dec
fcomps
add
data16
sbb
jno
push
adc
adc
xchg
and
inc
pop
sbb
aaa
lcall
jg
jno
iret
xlat
jp
pop
dec
dec
faddl
scas
lods
cs
cmp
sub
negl
cmc
out
shlb
repnz
or
pop
sub
inc
cmp
rolb
jne
stos
fimull
out
scas
push
fimuls
jecxz
jl
or
je
fcomps
jb
jae
mov
gs
mov
mov
ret
andl
dec
mov
fwait
jge
mov
fdivs
pop
into
push
sbb
enter
or
dec
or
jb
aaa
inc
lds
adc
lods
idivb
adc
pop
outsl
shl
xchg
xchg
in
sub
loope
out
sub
mov
pop
test
cwtl
gs
mov
iret
pop
sbb
je
sub
pop
popf
mov
and
out
pop
rcr
mov
lods
lcall
sub
xchg
pop
movsl
rolb
std
and
xor
adc
rcr
je
pop
jb
push
sbbl
mov
mov
jecxz
dec
pop
rorl
fst
mov
int3
inc
inc
push
fmuls
testl
out
pop
sub
push
push
sarl
hlt
pop
cmp
sbb
pop
cmp
movsl
cld
nop
cmp
jl
sbb
hlt
pop
jecxz
xchg
mov
inc
addb
push
dec
sti
lock
push
dec
lahf
outsb
pop
push
out
push
scas
je
enter
fdivr
add
mov
fimull
inc
mov
mov
cmp
or
xchg
dec
and
pop
pop
fcmovbe
lahf
stos
jno
mov
xor
fnstsw
fmull
pop
sub
pushl
adc
pop
lock
fnstenv
mov
xor
pop
into
xchg
int
stos
adc
mov
je
xorb
loopne
pusha
icebp
sahf
mov
pop
hlt
push
fwait
push
sub
sbb
mov
push
fstpl
and
push
sub
in
lea
jo
jle
pop
ret
mov
int3
test
inc
mov
int
bound
xchg
idivl
fsubrl
lods
or
fmuls
jno
pop
in
addb
jl
cli
push
lods
fs
sbb
lahf
leave
cmp
and
cmpsl
in
cmp
jecxz
add
jp
stos
xchg
dec
or
jl
out
inc
cli
movsl
outsb
pop
mov
ret
jo
jne
dec
aad
jecxz
leave
inc
pop
sub
mov
scas
bound
xchg
cmpsl
or
inc
ljmp
dec
pushl
std
cmc
xor
mov
jae
xchg
stos
lret
pop
sbb
pop
xchg
inc
mov
popf
xchg
pop
or
pop
mov
pop
xor
lret
iret
adc
leave
stos
aad
jmp
mov
dec
les
fisttpl
icebp
push
stos
inc
pop
out
jb
lret
cmpsb
mov
lods
push
call
xchg
xchg
cmp
pop
add
jns
out
int3
inc
stc
pop
js
lret
adc
dec
jnp
hlt
lret
fsubrl
mov
push
mov
or
aad
bound
sti
pop
pop
sbbb
leave
gs
out
in
inc
mov
rclb
add
aam
daa
add
and
mov
lock
mov
dec
aas
lahf
xchg
push
mov
int
in
add
jl
pop
movsb
mov
hlt
jo
mov
jo
push
jno
sub
pop
adc
das
add
lock
jb
xor
lcall
xchg
scas
jge
ljmp
jnp
cmp
shl
lahf
pop
xchg
push
jle
int3
out
pushf
rorb
or
add
xchg
pusha
pop
or
mov
mov
mov
test
lock
push
and
pop
and
jae
icebp
insl
scas
pushf
nop
push
jne
stc
daa
mov
fcomp
mov
inc
jl
cltd
sbb
ljmp
pop
add
push
pop
lea
mov
pop
out
jmp
xor
das
or
fs
arpl
push
fistpll
out
pop
stos
mov
movsb
sub
ret
jae
jnp
sti
test
in
mov
pop
push
pop
push
mov
imul
xchg
pop
pop
inc
sbb
mov
mov
push
jo
ud1
sbb
cmp
stos
and
and
jle
or
inc
jo
fistpl
xor
jae
dec
mov
testl
inc
lret
pop
jbe
je
addr16
pop
mov
adc
push
nop
test
fsts
fs
push
pop
subb
jbe
push
cwtl
xor
mov
in
pop
loope
sbb
sbb
sbb
jns
fisttpll
push
push
out
lea
mov
insl
in
add
fisttps
arpl
xor
cltd
insl
pop
ss
lea
scas
and
test
cmp
pop
mov
sbb
outsb
sub
jle
pop
jo
push
fwait
pop
xor
pop
and
inc
test
jo
mov
rolb
dec
test
and
pop
and
test
divl
repz
pop
sbb
es
clc
mov
push
aad
sbb
lds
out
repnz
fdivrl
adc
mov
inc
call
ds
and
jb
pop
nop
jp
cmp
jmp
sbb
outsl
mov
ret
xchg
stc
pop
adc
mov
data16
mov
setge
lock
jo
sbb
outsb
lea
push
ror
sub
xchg
sbb
inc
pop
xchg
jp,pn
pop
aam
int
ss
repz
sahf
pop
push
jno
es
sub
ljmp
dec
aad
push
xchg
adc
jb
lcall
mov
loop
or
pop
cmpsl
scas
add
aad
fnsave
inc
repnz
lea
xor
in
and
aam
push
push
imul
in
pop
mov
adc
loope
fiadds
and
xor
adc
insb
pop
or
xchg
push
jbe
mov
stc
mov
mov
call
lods
xchg
mov
sahf
enter
outsb
or
jne
pop
int
lahf
pop
cmc
lahf
mov
push
repnz
shr
mul
ljmp
icebp
sub
dec
jecxz
pop
inc
push
pop
sbb
movsl
cwtl
pop
out
mov
ja
fldz
pop
jo
sarl
or
call
mov
add
sub
ret
int3
in
mov
pop
addr16
enter
cmpsb
out
mov
rcrb
rcr
push
mov
das
int3
sbb
cmp
addr16
sub
pop
daa
and
sbb
dec
sarb
dec
cltd
pop
test
dec
lahf
mov
mov
out
xchg
mov
adc
rolb
and
aas
std
pop
xor
xor
xor
pop
pop
ret
fs
jg
inc
dec
stos
add
pop
cltd
mov
lahf
xor
xchg
push
xorl
push
cltd
jns
and
std
addr16
dec
mov
push
rol
scas
xor
in
clc
sbb
push
mov
dec
mov
ret
shll
lret
sub
daa
scas
mov
mov
xor
mov
push
cmp
pop
jmp
sub
repnz
fiaddl
dec
pop
sbb
mov
popf
pop
mov
ja
aad
mov
dec
es
sbbl
or
push
call
and
jne
cmpsl
cmp
inc
in
jae
jge
repnz
mov
sbb
jne
leave
xchg
pop
cmp
test
std
mov
aaa
int
mov
in
dec
pop
xor
push
inc
and
and
pop
sub
sbb
sbb
sti
rcrl
dec
or
pop
mov
push
xchg
lea
jle
int
xchg
dec
inc
shr
imul
insl
pop
lods
dec
stos
lock
mov
pop
pop
cmc
inc
push
popf
shlb
daa
and
adc
xchg
stos
jne
add
mov
lret
js
ficomps
orl
lea
xchg
inc
mov
pop
push
iret
xor
jae
aaa
pop
int3
or
pop
lahf
or
inc
sbb
idivb
cmp
int
ret
push
or
mov
ljmp
and
pop
sub
test
pop
dec
pop
bound
xor
cmp
mov
std
out
xchg
mov
sbb
je
fstpt
popa
cmp
or
jecxz
sbb
inc
and
sbb
clc
sub
fnstcw
xchg
and
and
je
in
jbe
mov
sbb
push
fstpl
xchg
jl
push
cwtl
aas
in
mov
and
lods
dec
sbbb
test
jl
push
mov
mov
sbb
addr16
cmp
push
scas
pop
in
fwait
xchg
jno
push
mov
stos
cmp
insl
push
sub
int
jmp
shl
frstor
ficomps
cmp
jge
inc
pop
cmp
and
pop
in
lahf
xor
xor
mov
xchg
ds
out
pusha
jo
pop
sahf
cli
insl
jnp
sbb
addr16
cmc
mov
push
pop
cmpl
dec
outsl
shrb
movsb
mov
pop
mov
out
pop
sbb
and
stc
imul
or
or
push
in
aas
int
jg
pop
sti
stos
jb
je
mov
xchg
jno
xor
fiaddl
sbb
ljmp
aaa
sbb
mov
icebp
xchg
push
mov
ficoml
popf
adc
or
push
jnp
xchg
jge
lods
pop
fnsave
mov
xchg
test
dec
sbb
sbb
pop
fidivs
push
push
sti
dec
std
pop
loop
mov
loope
pop
and
outsb
leave
sbbb
jg
pop
arpl
stos
es
das
cmc
mov
lea
cmp
js
mov
int
loopne
popa
or
test
pop
jns
mov
sti
scas
adc
lock
fcoms
pop
pop
sbb
inc
jecxz
xor
cld
popf
stos
mov
movsl
pop
lea
aad
pop
jp
mov
fs
ja
call
mov
inc
mov
jbe
pop
mov
mov
pop
iret
inc
sbb
xchg
mov
lahf
cmp
push
jl
shrl
pop
xchg
inc
mov
xor
mov
pop
dec
ljmp
pushf
dec
test
push
jge
xlat
adc
repz
xchg
sub
loop
arpl
ds
addl
xor
add
dec
enter
or
stos
lock
xchg
jl
in
sbb
jne
scas
mov
out
insl
jns
fdivp
pop
adc
sbb
push
int
pop
inc
pop
lahf
stc
xor
rorb
mov
mov
pop
andb
xor
mov
cld
inc
test
push
mov
xor
mov
pop
cmp
mov
add
adcb
addb
mov
icebp
lret
aam
xchg
mov
adc
jmp
jp
loope
sbb
cwtl
mov
out
stc
or
mov
mov
mov
pop
subl
add
jb
mov
cmc
mov
cmp
fisubrl
imul
daa
jg
dec
icebp
mov
data16
repz
movsl
lea
push
into
or
int
jne
dec
xor
xchg
mull
scas
data16
and
scas
mov
out
mov
push
cmp
sbb
sbb
pop
mov
xchg
or
pop
inc
outsl
shrb
jns
pop
or
mov
jo
cmpsl
push
pop
or
or
push
mov
cmp
enter
fiadds
fimuls
ret
cmp
negl
ficompl
ss
out
mov
test
push
arpl
stc
push
jbe
sbbb
call
and
roll
lods
sbb
sti
cmp
mov
pop
sahf
fnstenv
xlat
pop
int
jne
enter
stc
in
pop
iret
mov
cmp
push
pop
mov
pop
inc
and
lds
fcomps
addr16
mov
stc
sub
jae
or
dec
into
dec
mov
mov
jbe
cld
jmp
fdivrs
movsb
adc
sbb
adc
lea
divl
insl
int3
addr16
xor
int
mov
in
sbb
mov
test
call
cmp
dec
std
push
popa
mov
loope
jb
pop
testl
dec
pop
xchg
shll
pop
int3
sbb
lret
sarl
js
rorb
aam
push
sahf
xor
pop
pop
sbb
dec
pop
sarl
inc
insl
push
add
test
xchg
cmp
in
xchg
cmp
ficoms
dec
sbb
pusha
jae
sbb
rcrb
mov
fstps
sub
mov
cmpsb
pop
lods
clc
mov
aam
cmpsl
data16
xor
aas
pop
jge
pop
mov
scas
pop
pop
shll
arpl
lea
sub
jne
xor
popf
mov
pop
xchg
dec
lahf
out
push
mov
push
adc
xchg
cmp
pop
mov
dec
ja
dec
sub
outsl
fs
cmp
mov
rol
loope
cld
icebp
faddl
jns
ss
add
fldl
mov
xor
xlat
mov
lods
mov
pop
mov
push
xchg
inc
push
popa
mov
and
push
mov
xor
pop
cmp
cs
ret
shrl
clc
xchg
xchg
fisubrs
pop
cmc
enter
pop
add
lods
cld
adc
pop
sahf
les
push
sbb
aad
dec
pop
mov
inc
scas
popa
cpuid
mov
pop
jge
mov
test
int3
pop
bound
das
sbb
mov
std
data16
imul
mov
mov
sbb
cwtl
adc
pop
lea
inc
aas
mov
sbbb
arpl
mov
aam
jecxz
cld
cli
pop
cltd
fadd
negl
add
ret
or
mov
call
push
add
jne
cmp
add
sub
or
pop
lods
inc
xor
mov
sbb
inc
push
stos
lcall
pop
or
add
pop
or
cli
xchg
push
lea
scas
jne
xchg
pop
pushf
cmp
jg
lds
push
sbb
roll
repnz
js
stc
cli
jo
pop
stos
cmpsl
ss
out
int3
enter
mov
ret
es
mov
mov
jmp
cmpsb
mov
cmp
stc
mov
pop
and
mov
xor
dec
movsb
lods
jp
cmc
jbe
add
jo
clc
iret
or
mov
mov
gs
fmull
cmp
mov
movsl
sub
and
adc
fucom
pop
pop
ret
std
orl
out
jb
inc
scas
jg
adc
adc
pop
mov
lock
pop
jl
repnz
add
icebp
push
xchg
inc
sub
test
mov
push
int3
in
pop
out
lea
int
mov
mov
xor
mov
mov
fidivs
push
sbb
aas
lcall
pop
pop
outsl
out
adc
call
and
or
negl
aas
ja
sbb
ljmp
and
idivb
and
xlat
push
pop
push
mov
lret
lahf
mov
sub
sbb
mov
sbb
jbe
sahf
pop
push
pusha
lods
adc
pop
sbb
add
in
and
in
dec
xor
das
pop
jp
les
outsl
add
icebp
mov
adc
pop
fbstp
mov
jecxz
sbb
cmp
push
or
push
pop
in
mov
popa
xchg
sub
scas
cmp
aam
movsl
sti
sub
fstps
cmp
jg
cmpsb
push
dec
scas
xchg
mov
lods
pop
rep
das
scas
int
dec
push
fmull
mov
xchg
cmp
aaa
lea
rcrl
mov
pop
add
mov
loopne
mov
test
pop
inc
push
jno
sbb
int3
pop
aad
fcomi
or
jne
mov
xchg
in
fisubl
pop
int
nop
sbb
lcall
or
lret
stos
xor
add
dec
push
pop
pop
aaa
mov
pop
imul
add
or
cmp
xchg
pop
sti
int
jno
gs
pop
fisubrs
xchg
mov
mov
pop
dec
xchg
dec
fcompl
add
inc
adc
daa
xchg
xchg
pusha
mov
mov
loop
mov
loop
pop
jne
mov
push
ds
jb
inc
fstpt
pop
int3
shrb
dec
jp
sbb
xor
or
mov
inc
or
stos
jg
pop
xchg
or
lods
pop
jecxz
sbb
pop
pusha
loopne
or
lahf
jl
rcrb
fisubl
pop
loop
clc
push
sub
xchg
pop
jae
ficompl
pop
ss
dec
adc
dec
pop
shr
in
mov
xor
xchg
mov
xorb
dec
int3
cmp
jl
and
xchg
cmp
pop
dec
dec
or
scas
add
jmp
pop
pusha
sbb
inc
or
cmp
pop
pop
je
cmpl
rolb
insl
in
jp
je
das
push
adc
and
fsubs
imul
cmc
dec
xchg
cmp
pop
lds
xchg
enter
rolb
daa
push
mov
pop
int
cld
repz
jl
add
pop
lock
mov
mov
inc
push
test
fsubl
xor
pop
das
push
sti
xchg
push
xchg
jbe
out
mov
xchg
jl
sbb
add
mov
mov
sarb
pop
jecxz
sti
and
sbb
jno
xor
push
out
in
or
cmp
stc
aad
fidivrl
into
inc
xor
insl
ja
sub
pop
hlt
sub
fstps
push
inc
pop
pop
jp
pop
or
jbe
or
xchg
pop
sbb
adc
orb
xor
divps
jecxz
test
mov
faddl
in
pop
adc
mov
xor
jo
inc
mov
in
mov
jbe
inc
cmpsl
xor
js
pop
mov
or
xchg
xor
fwait
or
jle
daa
dec
sti
out
ljmp
ljmp
icebp
insl
pop
mov
cmp
sbb
xlat
pop
xchg
add
stos
js
int
out
jo
mov
dec
sbb
in
scas
push
and
repnz
push
test
dec
std
push
dec
xor
or
push
pop
sahf
insl
ds
das
subb
xchg
in
mov
push
scas
ret
push
jge
je
push
mov
daa
jb
or
into
dec
or
fmul
mov
pop
mov
cmp
push
jl
sub
pop
rcrb
pop
testl
mov
jecxz
pop
mov
adc
jge
push
sbb
jecxz
pop
hlt
pop
jno
jbe
lret
fisttpll
insb
pop
or
scas
adc
fisttpl
dec
inc
orl
into
pop
addb
sahf
pop
mov
lock
flds
inc
lahf
push
repz
mov
xchg
dec
lods
xchg
outsb
dec
sbbl
xor
or
mov
xor
pop
sbb
int
out
enter
push
movsb
pop
cwtl
push
cltd
pop
popf
xor
jo
mov
andl
xchg
mov
addl
mov
or
jb
jg
pop
outsl
or
mov
dec
sub
pop
adc
fistps
into
mov
pop
fidivrs
out
pop
pop
shlb
ljmp
pop
pop
push
dec
xlat
cmp
lods
jbe
ja
mov
enter
push
mov
repz
adc
xchg
dec
jo
inc
cmp
sbb
outsl
dec
in
pop
std
pop
ljmp
inc
sbb
stos
stos
pushf
mov
test
inc
pop
popa
dec
shll
pop
fwait
aam
xor
frstor
lret
xchg
imul
mov
jg
sub
push
shrl
pop
inc
bound
sub
and
int3
sarl
lcall
pop
shlb
loopne
or
sbb
mov
xor
lahf
sbb
loop
xor
mov
jbe
xlat
xchg
sub
pop
add
jp
push
in
scas
mov
sarl
outsl
push
pop
scas
mov
clc
xchg
aas
mov
mov
inc
add
lret
test
xor
push
ds
jmp
push
inc
cwtl
jbe
push
in
pop
imul
je
pop
and
sub
mov
sarl
mov
insb
pop
fnstsw
stc
mov
inc
lds
or
repz
pusha
xchg
pop
xlat
sbb
sbbl
dec
mov
repz
enter
or
sahf
clc
dec
hlt
or
pop
repz
fnsave
test
icebp
fcos
add
in
and
outsb
nop
js
mov
cltd
test
outsl
push
rcrb
fsubs
lret
gs
out
movsl
inc
cmp
mov
in
and
fistpl
enter
mov
push
stos
mov
mov
frstor
mov
mov
pop
sbb
and
int3
push
dec
pop
dec
push
lock
push
fbstp
or
aam
ja
sbb
pop
int3
roll
pop
xor
cltd
je
cld
pop
lret
inc
xchg
mov
jg
rcl
push
push
xor
pop
jne
or
mov
test
sbb
pop
faddl
test
insl
pop
inc
sbb
in
fdiv
mov
ja
pop
pop
mov
pop
stos
sbb
inc
jmp
mov
sbb
dec
pop
out
lahf
or
fidivl
add
in
pop
outsl
faddp
dec
xlat
push
push
pusha
pop
fs
mov
add
and
mov
loop
add
inc
pushf
cmpsl
mov
frstor
mov
cmp
out
in
push
pop
adc
popf
dec
cmp
ljmp
pop
sarl
or
pop
xlat
mov
mov
pop
push
mov
pop
scas
jecxz
insb
sbb
mov
movsl
dec
mov
pop
mov
loop
stos
es
popf
jb
nop
cmp
and
add
adc
cmc
in
daa
aad
insb
inc
pop
fisubrs
lods
xchg
lods
xor
mov
push
or
push
cmp
jns
scas
mov
test
movsl
enter
mov
aaa
in
sub
ss
pop
pop
shrl
movsb
sbb
insl
cmpl
mov
int
jns
insl
aam
stc
xchg
jo
xor
jp
mov
cmp
cwtl
xor
pusha
jle
insl
jno
xor
mov
xchg
jne
lret
mov
pop
idivb
in
int
pop
scas
add
imul
sub
xchg
das
sarl
int3
fwait
bound
scas
or
loope
test
sbb
pop
jo
mov
mov
lret
xor
movsb
pop
pop
inc
sbb
sbb
pop
or
fmul
cmp
int
push
xor
cmc
xchg
and
or
xorl
aaa
fcmove
pop
imul
mov
fldt
negl
shrb
sahf
sbb
in
fnstsw
cmp
in
pop
push
mov
mov
lret
adc
push
push
push
push
adc
inc
pop
dec
jecxz
sbb
pop
lods
mov
sbbb
pop
mov
inc
in
pop
xor
xchg
push
and
scas
sub
outsb
je
nop
inc
ret
pop
pop
push
fnstsw
xor
dec
xchg
dec
cmp
mov
lahf
xchg
addr16
xor
es
int3
pop
cmp
pop
test
hlt
mov
dec
mov
xor
xchg
cltd
outsb
lds
pop
sbb
int
pop
sbb
xchg
push
xor
inc
push
xchg
mov
push
dec
pop
dec
js
dec
pop
jnp
lds
and
sbb
pop
or
enter
mov
xchg
leave
pop
push
mov
lret
cmp
mov
xchg
shll
add
pop
add
ret
pop
jecxz
sbbl
stc
dec
xchg
mov
mov
dec
popf
mov
aaa
or
lods
int3
repnz
cmp
enter
jl
add
jmp
or
mov
enter
and
lret
sub
bound
sub
sbb
dec
and
adc
mov
insb
cmp
lret
stos
cld
fsubrs
out
pop
rclb
xchg
adc
pop
mov
in
gs
sbb
int3
cmp
stos
pop
xor
dec
or
sbb
pop
push
xor
adc
ja
xchg
cs
pop
ss
scas
xor
iret
shll
je
inc
or
jo
les
inc
sbb
loopne
divb
or
dec
ss
sub
pop
lods
out
outsl
jb
jecxz
xor
sbb
pop
int
xlat
das
or
scas
sbb
mov
lock
pop
xchg
arpl
sub
dec
mov
dec
pop
lods
frstor
pop
lea
ja
and
adc
xchg
jb
outsb
xchg
cli
aad
pushf
sub
int
int3
push
sbb
xor
shlb
sbb
fcmovb
xor
gs
cmc
fcom
out
push
test
or
int
pop
inc
pushf
aas
inc
sbb
movsl
jmp
rorl
ficompl
inc
push
jno
mov
mov
jns
inc
push
loopne
aad
je
mov
fdivs
pop
and
push
arpl
mov
pop
sbb
mov
daa
ljmp
ds
dec
rcll
in
sub
add
stos
test
pop
inc
lret
or
pop
scas
movsb
popf
mov
push
cmp
cmc
pop
mov
cs
jb
and
xor
xor
add
jl
lock
lods
cli
xchg
pusha
popa
pop
push
pusha
clc
aaa
dec
sbb
pop
and
int
pop
xchg
and
fcmovne
loopne
outsl
cmp
aam
add
mov
xor
or
sub
pop
adc
pop
mov
inc
in
mov
fidivrs
adc
push
or
mov
sti
xchg
popf
aas
icebp
xor
js
dec
inc
pop
addr16
add
insb
mov
mov
xlat
in
pushf
lods
stc
and
negb
mov
or
adc
xchg
dec
mov
pop
imulb
jnp
cltd
icebp
mov
mov
loope
popf
fildl
adc
xchg
shrl
mov
mov
pushf
add
jl
mov
dec
movb
nop
jno
pop
mov
dec
pop
pop
sbb
dec
pop
mov
insl
pop
push
mov
add
divl
cs
out
js
jns
xchg
ficoms
push
dec
pop
ss
int3
lret
mov
sub
int
lret
pop
mov
mov
adc
pop
ficoms
pop
xchg
outsb
jmp
ret
imul
pop
int
add
add
pop
js
jge
sbb
aam
stos
xchg
dec
xor
pop
and
mov
fbstp
pop
jns
xchg
pop
jno
jbe
or
dec
mov
pminub
jo
mov
lcall
mov
cld
mov
es
and
push
dec
mov
mov
icebp
out
pop
push
jns
xor
add
aaa
clc
jmp
pop
mov
fiaddl
pop
xchg
sbb
es
lret
jp
adc
rolb
mov
sbb
xlat
std
pop
rclb
aas
in
cld
movsb
or
test
pop
inc
outsb
or
negl
pop
lock
cmpb
xchg
int3
stos
sub
and
pop
sbb
push
pop
xchg
aad
sub
push
jnp
scas
pop
xor
in
int
mov
push
push
inc
hlt
sub
mov
movl
adc
jecxz
rep
pop
sub
ljmp
mov
mov
inc
sub
ret
jb
pop
and
in
mov
pop
sbb
jae
adcb
int
dec
mov
fcoms
mov
fstl
test
dec
mov
filds
pop
xchg
leave
xor
push
pop
cwtl
test
or
out
mov
mov
shr
mov
and
imul
sub
inc
cwtl
inc
out
push
pop
pop
xchg
xchg
jae
adc
add
or
mov
xor
sub
test
out
push
adc
outsb
hlt
pop
mov
add
pop
jbe
lahf
dec
dec
push
pop
xor
lcall
pop
sbb
out
cli
mov
mov
int3
adc
mov
pop
bound
insb
in
jnp
jo
pop
pop
and
in
push
sarb
mov
pop
mov
shr
xchg
xlat
lods
mov
les
int3
mov
popa
pop
js
int
mov
cmp
fsubr
test
add
pop
push
push
mov
fucomp
pop
ret
les
inc
orps
mov
push
push
pop
dec
or
mov
push
pushf
mov
out
js
mov
push
fstl
rcll
lcall
in
jmp
and
sbb
daa
mov
inc
stos
pusha
inc
shlb
sub
mov
mov
bound
jp
ds
pop
jbe
std
mov
pop
lds
int
or
cmp
lahf
movsb
and
mov
pop
insl
cmp
add
bound
dec
mov
push
mov
test
dec
mov
scas
push
decl
lahf
fs
pop
insb
pop
sbb
lock
dec
dec
ret
push
mov
les
mov
pop
stos
mov
int
jae
dec
push
mov
outsl
lahf
mov
xor
pop
imull
pop
pop
mov
mov
jb
in
bound
jnp
orl
lret
nop
fstpl
sbb
sub
pop
dec
inc
das
pop
pushf
mov
dec
sub
idivl
mov
jecxz
cld
push
pop
cmp
std
dec
pop
xor
xorl
sarl
mov
pop
idivl
sub
jge
int
pop
pop
and
inc
dec
mov
jb
pop
mov
popf
push
rcrl
fsubrs
imulb
adc
std
sbb
jbe
mov
ret
int3
mov
jecxz
repz
sbb
xchg
fcmovnb
je
lea
inc
popa
pushf
out
jg
cs
mov
sub
pop
cmp
sbb
adc
add
lret
or
pop
outsb
add
pop
push
cmp
pop
cld
mov
pop
pop
or
pop
popa
xor
rol
jo
pop
gs
in
dec
insb
add
dec
add
stos
repnz
push
addr16
iret
xchg
mov
in
xchg
mov
cwtl
jge
lahf
filds
cmp
scas
loop
pop
lahf
test
js
dec
and
and
pushf
in
jge
inc
push
cmp
pop
or
push
mov
pop
lods
jae
loopne
pop
pop
pop
stos
int3
jmp
aam
inc
cmpsb
push
cmp
jl
dec
outsl
negl
test
sub
pusha
ljmp
addr16
inc
aam
mov
test
adc
jb
mov
push
pop
outsl
sub
fs
adc
sti
flds
mov
xchg
xor
jo
loop
cmpsb
test
pop
out
insb
xor
dec
sbb
jno
pop
mov
and
or
data16
int3
mov
outsl
push
pop
push
sarl
sbb
in
addr16
repz
push
pop
pop
popa
mov
xor
loop
jecxz
fisttpl
mov
test
and
pop
dec
cmp
int3
ja
dec
fisubrs
dec
mov
hlt
outsb
in
mov
nop
je
lahf
std
cs
fadds
ret
dec
pop
sbb
dec
jg
xorb
fnstcw
jb
outsl
std
sti
mov
dec
jns
add
pop
ljmp
pop
add
int3
cs
insl
jecxz
pop
push
repz
xor
cmpb
stc
inc
mov
xchg
inc
loopne
cmp
sub
aad
pop
pop
cmp
and
clc
pop
es
inc
repnz
xchg
data16
adc
ja
mov
adc
pop
cmpsl
movsb
sbb
in
idivb
inc
jnp
aaa
pop
icebp
pop
lcall
movsl
mov
push
cmc
or
mov
pop
lods
aad
flds
imul
mov
mov
dec
sbb
aam
xor
inc
mov
sbb
push
mov
jp
sbb
or
pop
icebp
mov
fcmovnu
leave
pop
jno
push
dec
aam
mov
or
fdivl
mov
scas
pop
rcrb
std
xchg
pop
repnz
dec
dec
jnp
or
pop
test
int
or
push
nop
push
pop
ja
inc
add
and
addr16
stos
aam
jne
pop
in
insl
cld
shrb
movsb
add
fistpll
push
sub
jecxz
movsb
mov
jne
xchg
jl
mov
inc
mov
xor
and
test
sbb
pop
xchg
add
and
jmp
pop
mov
dec
roll
idivl
pop
outsl
lret
pop
sbb
mov
cmp
xchg
jno
pop
imulb
mov
gs
jne
addl
pop
cld
into
mov
jbe
jns
pop
sbb
xor
pop
iret
mov
cmp
sub
dec
pop
pop
stos
call
pop
aas
sub
inc
dec
pop
sbb
out
aas
sbb
dec
xchg
stc
lea
jp
sbb
inc
lahf
cmp
ficoms
ss
pushf
push
fisubl
pop
dec
or
repz
mov
adc
pop
fnsave
xchg
dec
jl
and
cmp
mov
push
push
xchg
mov
jl
sbb
mov
bswap
xor
add
call
pop
jnp
xor
sbb
iret
pop
out
and
mov
mov
push
cli
xchg
inc
pop
mov
les
jb
in
fistps
movsb
inc
aaa
scas
je
test
dec
mov
xlat
pop
in
pusha
ret
or
int3
dec
lods
jae
add
mov
pop
nop
sti
cs
fildll
pop
test
pop
cmp
fimuls
push
mov
lods
pop
mov
pop
cmp
push
cmc
aad
or
pop
inc
int3
adc
pop
cmp
outsl
xchg
fldl
mov
or
fldcw
sbb
jb
pop
aas
mov
fcmovu
xchg
dec
sub
sub
pop
push
test
jo
loopne
mov
lds
mov
aad
adc
sbb
cmp
pop
arpl
or
test
xchg
push
pop
pushf
add
pop
lds
cmp
push
pop
adc
push
xchg
cmp
vandps
aas
mov
pop
push
ss
in
dec
inc
cmp
or
out
stos
fmulp
mov
out
inc
jecxz
sub
inc
jge
mov
adc
sbbb
xchg
xlat
sbb
pop
push
cmp
stc
cltd
pop
push
popf
stos
add
mov
pop
sbb
or
test
rorl
pop
sahf
mov
and
xchg
sub
in
sub
jle
imul
jns
push
cltd
dec
sub
and
test
mov
int
push
jl
pop
or
std
shr
mov
sbb
dec
sbb
push
mov
xchg
shll
sar
sub
sbb
arpl
pop
pop
stc
lret
dec
push
je
cmp
sub
inc
mov
fimull
pop
cmc
adc
fdivrs
mov
xor
xchg
test
push
and
lds
pop
jae
dec
ret
cltd
mov
and
cmc
pop
loope
ss
mov
and
sbb
cmp
mov
adc
pop
xchg
cld
pop
int
test
aad
mov
mov
aaa
pop
and
jbe
cltd
inc
push
push
stos
push
pop
xor
inc
pop
sbb
jg
sbb
sbb
es
mov
in
push
jecxz
inc
mov
dec
rcr
pop
out
push
loop
mul
sti
pusha
push
mov
mov
imul
pop
jo
ret
pop
mov
roll
rclb
jb
pop
inc
sub
je
lods
xchg
xor
shlb
push
jo
mov
mov
and
dec
ror
test
cmpsl
pop
inc
inc
fstpl
adc
rcrl
divb
inc
or
repnz
add
mov
xchg
push
or
dec
jno
inc
add
test
xor
js
mov
lods
cltd
ja
lret
adc
sbb
mov
add
pop
fidivl
pop
out
pop
pop
pusha
mov
xlat
pop
dec
pushf
je
and
inc
jae
or
pop
dec
loop
stc
pop
fcmovne
aaa
sbb
mov
pop
clc
mov
add
pop
ret
jbe
and
test
bound
mov
int
xor
jmp
push
int3
xchg
insb
sbb
inc
out
lods
fdivl
ds
push
push
test
int3
fcomi
lock
fcomi
xchg
mov
rcrl
cltd
jmp
mov
dec
dec
add
ja
imul
and
mov
lret
sub
jl
or
pop
jo
add
cmp
loope
mov
add
mov
or
call
lods
sub
test
add
xor
stos
in
js
pop
mov
rcrl
loopne
pop
jl
dec
cmpsb
mov
xor
paddd
test
testb
add
shrl
popa
mov
cmpsl
faddl
lret
mov
je
add
add
sbb
inc
es
sbb
mov
ljmp
subl
scas
xlat
fcoms
adc
mov
test
push
pop
int3
jge
mov
popf
jo
pop
fsubs
cwtl
push
pop
popa
dec
fucompp
mov
xchg
mov
inc
fdivs
sarl
mov
mov
xor
mov
fcoml
cmp
pop
cmp
sahf
lea
and
jne
xchg
inc
arpl
pop
dec
pop
mov
sbb
mov
insl
xor
lea
mov
adcb
sbbl
jnp
ja
in
clc
les
scas
sti
or
fidivrs
sbb
inc
test
adc
fsub
cld
lods
inc
fstpl
pop
into
ljmp
cmp
outsl
int3
ss
jmp
lds
js
mov
mov
xchg
je
xlat
add
pop
mov
push
pushf
into
pop
ret
mov
lahf
cmp
xor
mov
je
push
xor
inc
fdivrl
fadds
xor
pop
pop
ja
and
pop
pop
inc
xchg
je
hlt
dec
push
or
pop
jg
sub
sbb
adc
mov
jno
mov
fidivrs
cmp
add
arpl
ss
lret
std
test
popf
pop
pop
and
dec
lods
jns
inc
jo
movsb
jbe
jle
fcompl
cmp
jp
cltd
cmpsb
insl
dec
dec
dec
and
jnp
xor
fldl
dec
pop
jb
in
iret
pop
sbb
mov
mov
ret
or
shl
popl
xchg
fs
leave
test
jmp
mov
or
pop
fnstsw
sub
xchg
loopne
mov
int
mulb
jbe
call
inc
mov
xchg
pushf
fnstsw
lcall
xchg
adcl
movsb
arpl
fistps
cmp
iret
pop
sbb
push
push
pop
icebp
pop
sbb
push
or
and
mov
inc
pop
push
je
fidivrl
pop
cld
inc
jle
sub
jmp
int
lods
ror
pop
fsubrl
enter
pop
ret
xor
gs
int3
xchg
sbb
sub
add
repnz
je
popf
fsubrl
pop
pusha
std
jge
xor
adc
aam
or
jb
mov
xchg
pop
sarl
pushf
jge
inc
scas
cld
dec
ja
sub
stos
mul
pop
jne
lods
sbb
mov
sti
shl
mov
pusha
stc
mov
cmpsl
add
push
add
jno
negl
xor
cltd
in
mov
jp
sbb
and
pop
cmp
sub
int3
in
push
lahf
inc
mov
stos
inc
push
pop
ret
aas
outsl
jp
sbb
mov
or
popa
push
cltd
sub
xchg
ffreep
dec
cmp
pop
pop
js
jbe
ja
cmp
jecxz
flds
mov
mov
adc
imul
push
call
pop
loope
or
pop
lock
jnp
adc
push
int3
jmp
jns
pop
ja
sahf
fisttpll
addl
xor
xchg
fiaddl
outsl
mov
imul
scas
inc
pop
sbb
mov
testl
rep
sar
pushf
xor
pop
jle
int
adc
xor
pop
and
mov
aaa
out
sahf
dec
xchg
jle
js
push
and
push
xchg
lahf
or
pop
push
das
adc
loope
mov
xor
rcr
loopne
addr16
and
int3
rclb
call
pop
popa
imul
scas
int3
mov
jnp
icebp
push
or
cmp
fcomps
or
dec
fnstsw
mov
subb
fcmovb
mov
pop
lahf
or
mov
pop
loop
repnz
pop
mov
aad
mov
cmp
push
cmc
aas
jbe
xor
push
mov
sbb
mov
cmp
lds
decb
lcall
and
popf
pop
scas
mov
xchg
cmp
fmul
sbb
rcrl
pop
adc
scas
daa
cmp
jae
mov
rorb
into
cmpsb
sbb
rcr
and
cwtl
push
pop
notb
int
pop
jb
cmp
pop
aad
clc
dec
cld
repz
xchg
xchg
and
sbb
mov
stos
loop
adc
pop
mov
lahf
cli
pop
push
out
xor
mov
xchg
int
jae
scas
lahf
lahf
fdivl
test
es
add
repnz
xchg
mov
xor
mov
into
lea
inc
int
jns
pop
daa
sbb
out
and
xchg
pop
test
push
lea
pop
pop
add
clc
movsl
dec
sahf
pop
cld
xor
push
scas
inc
nop
cltd
ret
cmp
mov
sbb
mov
shl
sub
fldcw
jb
cltd
and
sarl
dec
mov
fsubs
mov
xchg
push
ljmp
mov
add
cmp
imul
lods
pop
testb
int3
push
and
pop
cmpsl
test
int
daa
push
lds
sub
jo
pop
adc
es
lea
dec
xchg
ljmp
push
pop
imul
mov
sbb
cmp
rcl
mov
xor
fldl
push
stos
pushf
hlt
stc
sbb
cld
mov
jg
test
sti
pop
xchg
mov
int3
jbe
pushf
pop
cmp
mov
or
mov
mov
sbb
cli
hlt
dec
push
pop
aas
jl
xchg
js
or
add
frstor
movswl
ljmp
ds
test
cltd
jg
test
mov
fs
sub
pop
out
lods
or
add
stc
dec
test
pop
int
add
dec
and
pop
lcall
lret
pop
dec
das
sub
mov
pop
aam
push
xchg
popf
mov
mov
aad
scas
cmpsl
add
rcl
mov
mov
pop
in
movsl
mov
dec
sbb
lds
pop
aam
and
push
push
xchg
lea
dec
xchg
test
cmpl
pop
test
icebp
dec
jo
adc
stos
xor
lods
xchg
pop
sub
clc
cmp
pop
adc
mov
jnp
sbb
cmpsl
lods
cmp
xor
int
jb
mov
repz
shl
arpl
scas
mov
xor
xor
or
mov
pop
cltd
inc
cld
pop
mov
inc
fistl
jecxz
sub
jo
sbb
ds
pop
addr16
dec
mov
push
pop
pop
push
shrl
cli
mov
je
xchg
push
cmpsl
dec
mov
xchg
mov
cmp
sbb
mov
or
jecxz
mov
pop
fsubrs
and
mov
jmp
js
pushf
int3
std
cmc
jmp
ror
dec
push
xor
out
pop
mov
dec
sbb
jp
pop
jns
push
lcall
pushl
or
fwait
cli
addb
loope
movsl
pop
xchg
psllq
pop
mov
xlat
arpl
notb
pop
fcompl
jns
pop
sahf
mov
fnsave
repz
lret
dec
mov
push
jl
sbb
xchg
mov
andb
pop
lcall
sub
pop
stc
push
pop
mov
mov
pop
imull
stc
pop
leave
into
push
mov
and
sbb
hlt
jge
pop
dec
bound
dec
lret
or
sti
sbb
int
pushf
xchg
xor
dec
ret
out
mov
mov
and
jl
dec
and
fisubrs
xor
test
mov
cmp
dec
pop
pop
pop
push
ss
jl
leave
pop
subl
and
pusha
inc
nop
sub
jns
dec
sbb
mov
xchg
loopne
xor
adc
fadds
xchg
sub
enter
xchg
ds
aam
push
imul
je
mov
and
xor
pop
xor
xor
gs
mov
sbb
fcmovbe
inc
push
xchg
loopew
mov
call
test
scas
pop
sbb
lea
test
dec
cli
adc
add
push
or
movsb
lahf
mov
adc
pop
jo
jb
mov
xchg
scas
pop
repz
loop
pop
jae
int3
sbb
icebp
xchg
mov
cmp
ss
pop
sub
inc
bound
ret
mov
jnp
jecxz
in
dec
lahf
mov
sbb
add
bound
stos
cmp
ret
ljmp
insl
or
ror
xor
mov
jbe
mov
test
into
or
xor
add
add
data16
icebp
ret
lea
dec
and
pop
inc
hlt
mov
out
mov
sbb
pop
xor
sarl
pop
pop
add
mov
std
pop
rcrl
or
es
pop
add
rclb
pop
and
jae
data16
inc
popl
je
int3
sub
adc
mov
ljmp
pusha
jle
mov
pop
xor
imulb
sbb
xor
lods
lea
pop
sbb
sub
xchg
sub
decl
pop
jns
mov
bnd
dec
sub
pop
mov
xchg
out
jne
xchg
pop
pop
mov
xchg
pop
push
mov
xor
push
daa
fcoms
test
xchg
mov
shll
sbb
pop
add
mov
dec
xchg
mov
push
pop
orl
lcall
ror
rorl
inc
aad
aaa
dec
ja
mov
xor
push
adc
pop
xchg
stos
push
cs
pop
ja
fiadds
inc
mov
insb
xor
or
in
mov
ficoms
lahf
lods
and
cltd
incb
nop
mov
pop
insb
pop
push
dec
rcrb
xchg
sbb
testb
lcall
cwtl
outsl
add
repnz
pushf
xor
call
out
inc
add
xor
add
in
shrl
pop
inc
mov
push
inc
mov
inc
dec
jle
pop
or
lods
stos
scas
pop
negb
cwtl
jmp
xor
int3
pop
adc
xchg
int
inc
jae
pop
repnz
iret
xchg
popa
push
pop
sbb
dec
jmp
pop
in
inc
sahf
test
or
sub
dec
xor
jbe
push
pop
nop
push
pop
jb
jo
jne
repz
mov
push
testb
pop
dec
xchg
inc
mov
jo
add
mov
pop
and
stc
mov
aaa
pop
fimuls
pop
xchg
mov
bound
les
xchg
cmpsl
pop
mov
pop
mov
push
add
int
add
jae
fisubrl
or
lcall
pop
data16
sub
or
jns
pop
jecxz
ret
sub
adc
lods
sbb
test
inc
xor
mov
rorb
pop
enter
and
sti
rcrb
inc
mov
pop
fdivrl
jnp
loop
fistpl
into
jno
incb
adc
pop
pop
int
mov
sub
cmp
jne
adc
aam
pop
lock
mov
iret
mov
dec
int
fs
jns
dec
es
negb
loope
cltd
mov
adc
iret
fistpl
jns
xchg
andl
out
push
mov
insb
pop
push
push
jb
cmpsb
push
out
cmp
push
mov
mov
scas
mov
jmp
xchg
scas
insl
cmp
aam
or
pop
mov
jne
or
lds
mov
mov
inc
mov
xchg
loopne
outsb
nop
es
cwtl
pop
jno
xchg
cmpsb
out
sbb
inc
sub
fwait
cs
jl
dec
sar
bound
pop
stos
stc
fucomp
dec
xchg
adc
out
or
push
jb
pop
pop
jl
iret
divl
ffreep
sub
sbb
sbb
outsb
push
cwtl
int
std
scas
mov
mov
push
scas
pop
sti
xor
nop
mov
jl
sar
sbb
push
cmp
pop
or
push
jg
addr16
xchg
lods
and
mov
xor
push
xchg
pop
int
loop
test
test
testb
and
in
inc
sub
xchg
add
mov
mov
mov
jp
adc
push
arpl
mov
cs
stc
jo
test
xchg
lods
push
or
cmpsb
int
pop
add
sub
cltd
dec
cmp
mov
xor
pop
dec
dec
sub
sub
mov
lret
repnz
mov
imul
ficompl
jecxz
dec
aas
pop
pop
je
test
test
mov
xchg
or
xchg
jl
cwtl
push
dec
push
jbe
adc
sub
mov
es
lock
pop
inc
scas
jl
or
sub
bound
mov
test
jae
test
mov
pop
jecxz
adc
test
pop
outsb
push
int3
lahf
or
cwtl
mov
mov
adc
mov
pop
repz
in
pop
in
test
pop
mov
stc
mov
mov
xor
mov
add
jmp
jnp
data16
sbb
and
push
dec
sub
lds
xchg
mov
adc
in
addps
rorb
ss
pop
std
dec
shrb
decb
inc
out
pop
dec
or
push
test
rclb
xorb
pop
push
cmp
stos
cmpsl
in
pop
or
pop
out
repz
stos
pop
arpl
lret
pop
pop
xchg
pop
cmpsb
mov
negl
ja
sub
dec
std
pop
push
sbb
mov
sub
mov
xchg
addr16
lret
adc
sbb
scas
sti
inc
xor
or
fldenv
sub
push
mov
sbb
ja
pop
sbb
outsb
std
pop
popa
les
int
out
push
lea
or
pop
push
mov
inc
push
movsl
pop
fwait
data16
sbb
fldcw
scas
mov
xor
mov
or
addr16
push
xchg
jp
add
orb
xchg
mov
inc
test
adc
mov
in
pop
dec
call
insb
mov
mov
or
xchg
jne
repnz
and
flds
imul
pop
inc
out
pop
insb
mov
test
outsl
pop
xor
push
dec
bound
dec
ljmp
adc
or
push
test
test
sub
pop
mov
push
cltd
cmp
aam
ds
xorl
iret
xor
push
sub
adc
stc
push
fiadds
mov
stos
push
pop
int3
test
jmp
sti
movsb
imul
insl
dec
incl
pop
xchg
sbb
mov
out
fistpl
mov
cs
cmpsl
add
xor
xchg
pop
dec
lret
insb
push
clc
mov
mov
jo
test
xchg
push
mov
push
pop
or
push
ss
and
int3
movsl
adc
xchg
and
jo
pop
pop
jge
dec
dec
inc
push
push
pop
movsb
mov
mov
pop
aaa
sub
fidivl
in
inc
sarl
adc
pop
push
inc
loop
cmp
mov
sbb
test
pop
outsb
cmp
je
xor
xor
mov
xchg
cmp
lock
faddp
pop
cld
insl
or
int3
pop
fcoml
std
imul
and
icebp
jne
jno
jb
pop
pop
movsb
or
adc
mov
mov
pop
pop
data16
cmp
adc
push
pop
pusha
sub
cmpsb
pop
or
loope
std
pusha
adc
inc
dec
insl
pop
lret
push
xor
mov
lds
jo
int3
fildl
test
std
fs
xor
mov
pop
inc
int
mov
cmp
jns
std
sbb
jbe
stos
pop
lret
adc
int
push
pop
push
jae
mov
mov
mov
in
and
xor
pop
imul
loope
pop
pop
cmp
cmpsl
lahf
xor
dec
xchg
dec
adc
sbbl
daa
pop
mov
cli
ret
jae
pusha
or
pop
push
sub
cmp
rcr
cmpsb
sbb
jle
pop
in
lods
jge
insl
out
jmp
setns
adc
mov
int
or
dec
fisubl
jne
lods
push
mov
push
ret
fisttpll
fdivrs
push
mov
stos
sbbb
pop
in
or
test
mov
int
cld
pop
aam
lds
shrb
jns
popa
movsb
mov
ss
mov
dec
xchg
push
lea
cmc
andb
push
jle
mov
js
sbb
cmp
xor
lcall
repnz
cld
in
cmpsl
int
lcall
add
sbb
pop
or
push
xlat
dec
lock
nop
in
pop
mov
out
pop
arpl
outsl
inc
outsb
pop
jb
pop
xor
sbb
int
inc
scas
push
je
dec
cltd
jb
pop
fmul
cmpsb
mov
in
sub
jmp
fcmovne
sub
cmpsb
or
push
cmp
jo
add
popa
jecxz
testl
push
inc
ficomps
cmp
add
pushf
push
jl
mov
arpl
shlb
cmp
sbb
xor
scas
sahf
loop
clc
pop
mov
mov
pop
aam
jo
pop
divl
xchg
inc
sbb
bound
mov
pusha
in
clts
xlat
fnstsw
sbb
and
push
sbb
lret
pop
out
ret
mov
jmp
pop
add
xchg
daa
cs
int3
pop
xchg
repnz
sub
leave
mov
call
pop
test
push
pop
sub
mov
and
push
adc
xor
add
dec
xor
iret
or
or
and
dec
stos
jb
pushl
pop
jmp
sub
sub
icebp
pop
push
bound
movsl
pop
bnd
inc
mov
fcom
lea
mov
add
jae
sub
je
and
roll
pop
adc
lahf
jo
inc
shlb
mov
divb
dec
stc
mov
imul
mov
imul
add
pop
cs
mov
adc
bound
mov
dec
mov
add
hlt
add
jl
ja
xchg
jbe
cwtl
test
shll
add
int
test
sub
cmp
jmp
sbb
push
sbb
stos
add
pop
lahf
push
out
addr16
push
dec
dec
lret
push
pop
jae
mov
pop
insb
jb
scas
inc
mov
stos
push
int
pop
inc
fistpll
les
popa
ds
push
mov
popf
int
jecxz
adc
sub
stos
pop
sahf
and
xchg
std
xor
subb
push
int
mov
idiv
popf
shlb
cli
xor
test
inc
pop
movsl
jbe
pop
and
cmp
jns
mov
add
test
lods
pop
pusha
sbb
mov
xor
pop
int3
rclb
mov
das
sub
outsb
iret
lds
test
pop
in
in
dec
push
jmp
mov
sub
test
imul
pusha
out
shll
xchg
inc
pop
out
out
rorb
daa
xchg
ret
add
sbb
je
in
mov
and
mov
adc
sahf
das
out
cmp
sti
nop
sbb
xor
xchg
sub
bound
push
ficoms
pop
adc
add
clc
aad
jecxz
in
hlt
lods
cmovle
mov
cld
fisubs
movsl
adc
pop
push
pop
cmp
fldenv
lea
cmpsl
std
sub
mov
xor
pop
icebp
in
jb
lret
lahf
dec
out
negb
scas
xchg
dec
jp
xor
das
add
mov
into
adc
pop
roll
lret
test
adc
pop
inc
jmp
test
out
insb
or
sub
clc
mov
stos
cmp
pop
jmp
add
pop
imul
jmp
lret
pop
movsl
pop
cld
mov
int
mov
enter
xchg
or
push
pop
pop
lahf
repz
mov
mov
scas
pop
mov
mov
in
ret
aam
scas
jb
mov
jns
cmp
add
sbbb
cmp
adc
jecxz
enter
ja
cmc
cmpsb
mov
pop
lods
rcrl
negl
adc
jl
adc
int
jnp
adc
xchg
add
insb
dec
scas
test
jne
mov
pop
inc
fistpll
sub
mov
dec
cltd
mov
ds
shl
loop
out
lret
pop
push
nop
scas
in
aam
dec
sbb
lea
fnstenv
inc
pop
xchg
push
pop
andb
dec
mov
push
adc
imul
shrl
cmp
xor
and
push
push
dec
sub
lea
sti
push
repz
mov
cmp
adc
test
bound
mov
jno
fists
xchg
stos
cmp
imul
stos
ds
lds
adcl
lahf
fdivrs
sub
fdiv
xor
loop
clc
or
loopne
dec
jae
ds
clc
lods
test
pop
and
je
sub
push
and
clc
pop
loopne
in
test
dec
dec
jae
mov
pushf
pop
sub
fwait
mov
jecxz
ds
scas
movsb
rcrl
cld
int3
and
imul
scas
addpd
dec
pusha
inc
pop
dec
leave
jo
rcl
scas
popf
adc
sbbb
in
into
pushf
enter
or
mov
pop
inc
std
loop
or
or
cmpsb
pop
cmpsb
pop
out
jle
loope
mov
add
jo
mov
inc
loopne
jecxz
mov
or
cmp
mov
jae
pop
or
pop
loopne
in
mov
mov
imul
fbstp
imull
mov
inc
pop
adc
outsl
arpl
mov
dec
mov
fistpll
test
mov
mov
sbb
pop
push
xchg
jne
mov
jb
ficompl
pop
mov
cmp
out
mov
fisttpll
and
into
rolb
cmp
test
mov
and
inc
mov
sub
out
mov
roll
out
ss
pop
sub
jns
adc
inc
jl
ljmp
xchg
mov
mov
cwtl
sbb
pop
fwait
pop
out
inc
push
lea
lret
pop
popa
rorl
pop
dec
repz
dec
pop
ja
lea
xchg
sbb
lret
cmp
mov
insb
add
scas
out
pop
jno
imul
int3
cli
pop
sarl
loope
dec
aad
pop
pushf
sbb
arpl
adc
xchg
outsb
push
pop
xor
imul
movsl
adc
mov
mov
and
add
xchg
xchg
mov
pop
jge
xchg
nop
repz
out
pop
repz
cmpsl
ret
inc
cvtpi2ps
pop
out
aaa
loop
lret
pop
les
dec
push
push
test
sahf
hlt
push
inc
test
push
pop
mov
xor
inc
pop
popa
cmp
bound
adc
pop
pushf
cltd
add
pop
pop
sahf
mov
xor
pop
mov
jne
add
cltd
pop
out
push
or
fcoml
or
pop
ret
mov
xchg
xchg
fmull
inc
sbb
into
clc
popa
stc
sbb
pop
cmp
cmpsb
jbe
inc
jb
pop
sbb
jmp
cmp
dec
dec
loopne
pop
push
jecxz
fstl
xchg
cmp
dec
leave
mov
pusha
sbb
out
mov
pop
push
and
mov
in
xlat
jns
pop
fstps
sti
shrl
mov
stos
test
in
xchg
pextrw
mov
fadd
lahf
dec
lret
xchg
bound
lret
stos
mov
pop
mov
je
pop
test
test
fbld
lcall
push
fdivrl
addr16
pop
outsl
cmp
jecxz
icebp
pop
dec
push
jo
jae
jle
ljmp
pop
repz
mov
std
das
push
fistpl
cmp
mov
or
int
mov
lahf
pop
fucomi
arpl
adc
push
sti
les
pop
sbb
add
pop
pop
and
ret
pop
lea
rcrb
xor
out
call
dec
int3
sub
mov
pop
insl
push
add
stos
cmp
push
pop
xor
mov
push
cmpsl
mov
dec
mov
sbb
cmp
adc
xchg
repnz
pop
in
stos
adc
pop
dec
pop
popa
push
lea
add
cmpsl
mov
adc
jbe
call
rclb
fadds
shlb
and
aas
xchg
add
pop
in
call
pop
loop
push
cmp
mov
push
pop
rcrb
sub
xchg
arpl
mov
repnz
sbb
sbb
sub
mov
push
lahf
push
push
enter
ljmp
mov
scas
adc
pop
sub
mov
rorl
jne
sahf
ret
imul
in
inc
pushl
pmulhw
cmpsl
cs
fmul
sti
mov
ja,pt
flds
jo
inc
add
pop
dec
jmp
mov
sub
pop
jbe
push
cmp
sbb
loopne
outsl
rorl
in
out
rcrl
dec
mov
lahf
movsl
out
xchg
mov
mov
pop
in
inc
push
je
pop
adc
mov
pop
ror
mov
mov
adc
aad
mov
pop
push
pop
sub
hlt
sub
pop
loop
sbb
lods
testl
push
dec
sub
push
cmp
xchg
xchg
inc
mov
xor
pop
push
stos
enter
push
push
pop
xchg
dec
int3
jne
sbb
push
stc
movsb
ds
jge
fcoml
popf
movsl
icebp
ss
daa
int3
insl
pushf
sbb
adc
or
int
pop
push
xor
or
in
jbe
pop
jge
lahf
xor
push
pop
fists
xor
jo
mov
dec
lods
adc
mov
sub
sbb
pop
and
lds
pop
cltd
out
pop
imul
sub
or
movl
adc
mov
adc
jb
or
cli
pop
mov
fs
pop
pop
sbb
jecxz
in
int
test
xchg
cwtl
pop
insb
or
push
jbe
enter
aas
or
pop
int
mov
fnstenv
push
mov
xor
adc
jecxz
xchg
cmp
mov
scas
cmp
add
lds
fsub
cmp
int3
adcb
pop
sub
dec
pop
push
dec
and
sbb
mov
pop
inc
cltd
stos
int
adc
mov
xor
pop
gs
cmpsb
xlat
enter
push
repz
pop
jno
es
pop
or
xlat
ss
dec
sbb
add
jp
pop
scas
fnstcw
mov
and
inc
mov
imulb
cli
push
dec
bound
mov
jp
add
scas
pop
call
js
jle
pop
lock
lea
sbb
pop
xor
dec
daa
lahf
ss
lea
fimull
mov
jb
mov
push
or
mov
hlt
outsl
aam
imul
insl
ja
mov
pop
inc
push
int
popf
inc
or
jecxz
jbe
pop
xchg
lea
mov
pop
xchg
test
scas
sbb
lock
mov
xchg
das
int
dec
scas
jb
jo
jnp
mov
mov
xchg
pop
mov
jg
lods
pop
lahf
sti
pop
cs
jne
jecxz
lds
mov
jo
cmp
sbb
hlt
popf
loope
mov
fsts
dec
push
ficompl
xchg
inc
jb
fstpt
or
and
jns
popf
mov
mov
flds
xchg
data16
jmp
gs
aad
hlt
pop
inc
into
mov
imul
xchg
sub
scas
fildll
cltd
or
pop
mov
sbb
mov
cmp
cld
dec
xchg
mov
pop
in
ss
cmp
xchg
into
fs
pop
divb
mov
jmp
pop
pop
dec
js
into
fisttpl
insb
arpl
jg
fdiv
repnz
fidivrl
jbe
cli
pop
and
mov
scas
cmp
adc
pusha
dec
cmp
sub
pop
jae
int3
jbe
arpl
imul
fldt
push
mov
mov
jae
mov
aas
cld
scas
cmpsb
ror
mov
mov
mov
and
pop
jge
mov
jbe
in
pop
outsl
xchg
sbbl
inc
into
and
inc
pop
dec
lods
xchg
int
cld
mov
xchg
mov
dec
scas
into
lods
rcrl
in
xchg
xor
cmc
cwtl
dec
pop
cltd
movsl
mov
mov
push
push
ljmp
sub
fcoml
dec
xchg
fisubl
or
pop
jne
popf
adc
xchg
pop
loop
pop
inc
lret
lock
pop
mov
lods
push
push
ret
test
out
pop
sti
mov
add
cld
lcall
decb
adc
pop
mov
insl
into
push
pop
xchg
ss
lcall
inc
push
add
adc
js
stos
mov
mov
and
xlat
leave
xor
cs
addr16
adc
mov
loop
in
xor
add
cli
dec
lods
mov
sub
mov
jle
jns
mov
xchg
xchg
pop
shld
sbbl
or
cmpsl
jl
std
pop
ja
ror
movsb
or
mov
mov
jae
dec
pop
adc
hlt
push
test
shrb
pop
cmp
xchg
jmp
lods
scas
dec
and
aad
sbb
push
mov
test
imul
jb
pop
pop
and
pop
shlb
test
mov
decl
mov
pop
nop
fnclex
push
push
int3
add
and
inc
xor
add
pop
jb
adc
aas
add
cltd
dec
shrl
aad
fildl
jecxz
cltd
jo
xchg
pop
addb
pop
push
fistpl
mov
fwait
pop
jg
bound
lods
sti
pop
dec
aam
cmp
ja
mov
inc
xor
pop
cmp
pop
xor
add
push
sbb
call
mov
mov
popf
mov
fldt
roll
pop
mov
pop
int
jp
int3
fsubl
gs
stc
jmp
jle
dec
adc
pop
pop
repnz
out
pop
inc
jbe
sbb
cmp
ljmp
scas
fwait
scas
adc
jbe
dec
daa
or
lret
mov
pop
or
in
push
pop
fisttps
ret
xor
mov
inc
in
out
pop
int
lret
punpckhdq
jns
xchg
inc
xchg
sbb
xchg
xchg
cmpsl
int
mov
shl
shll
xchg
push
mov
sbb
das
xchg
fcomps
mov
clc
cltd
pop
inc
inc
pop
pop
add
xor
pop
fwait
pop
and
pop
and
inc
pop
pop
inc
mov
mov
pop
pop
rorb
bound
mov
stos
outsl
adc
pushf
jb
loop
in
cmpl
inc
and
pop
lods
jbe
pop
pop
into
mov
int
lds
xor
int3
mov
push
pusha
arpl
pop
out
mov
std
cmpsb
or
clc
scas
in
lods
stos
push
call
inc
inc
pop
fs
int3
sub
ret
hlt
lods
pop
leave
popf
dec
mov
adc
pop
popa
out
mov
je
lock
jecxz
jb
fdivrp
add
es
mov
sbb
outsb
xchg
pop
mov
push
adc
pop
cli
cmpsl
and
mov
sbb
fs
push
cmp
xor
xchg
inc
lret
stos
and
mov
jo
out
nop
repz
imul
daa
cmp
push
pop
xor
fstps
cmp
hlt
sbb
add
fucom
pop
int
stc
mov
adc
pop
in
sbbl
pop
inc
and
imul
mov
mov
psubb
or
xchg
mov
jmp
mov
mov
sbb
jbe
lods
mov
cs
test
pop
sbb
rcrl
sub
push
mov
adc
sub
out
stos
push
adcl
cli
pop
pop
movsl
int
das
call
xchg
fbstp
mov
or
std
dec
cmp
int
dec
mov
mov
jae
inc
pop
out
adc
cmc
mov
pop
xor
cmpsl
ljmp
push
inc
xchg
in
dec
negb
loope
dec
icebp
mull
cmp
pop
insb
jl
jns
dec
ffreep
pop
mov
jmp
push
dec
pop
cmp
pop
sub
jecxz
mov
xchg
std
shl
mov
mov
ret
add
add
cli
pop
clc
sbb
pop
xchg
pop
lcall
pop
insl
pop
mov
pop
fstps
xchg
or
cwtl
inc
push
addr16
mov
lods
pop
sbb
fldenv
repnz
sahf
inc
mov
mov
jmp
out
mov
mov
loopne
mov
sbb
sub
push
rcrb
fs
shl
mov
cmp
pop
fcomps
mov
ficoms
out
mov
loop
jbe
or
fmul
cs
cmp
das
icebp
mov
call
xchg
sbb
sbb
jno
ret
negl
lret
pop
mov
adc
sti
enter
js
test
dec
aad
aam
icebp
fistpl
cld
cmp
lock
jo
pop
push
mov
flds
sbb
mov
sbb
orl
jb
or
add
pop
insl
cli
imul
xchg
pusha
and
cwtl
fucom
sub
pop
or
inc
pop
cmp
or
sbbl
add
int3
pop
push
pushf
mov
jno
int
add
mov
pop
mov
test
sbbl
pop
in
mov
pop
jmp
cltd
jbe
jns
mov
sbb
outsb
pop
aas
or
scas
stos
pop
in
aad
sbb
xlat
lods
clc
dec
pop
xor
jle
pop
pop
pop
cltd
sahf
mov
push
jecxz
leave
insl
fdivrs
sbb
jle
pusha
sbb
mov
mov
outsl
fcomi
xlat
mov
push
ret
and
sub
push
pop
call
and
add
jge
pop
jbe
aas
sbb
pop
sub
into
int
mov
push
test
adc
das
lcall
popf
and
mov
andb
subb
push
ja
aam
jno
add
or
pop
out
or
adc
inc
cmp
xchg
out
ds
or
jmp
fistpl
jo
or
xchg
dec
pop
cltd
int
sbb
mov
leave
dec
hlt
push
pop
insl
mov
push
push
mov
xchg
ret
call
xchg
dec
jmp
push
enter
pop
in
scas
push
or
sbb
stos
pop
sbb
or
push
jbe
mov
jno
push
outsl
pop
dec
test
sarb
cltd
movsb
insl
jl
pop
adc
mov
mov
fnsave
jmp
sub
dec
es
pop
jns
js
pop
or
sub
cmp
call
test
fisubrl
inc
inc
jnp
xor
jge
push
mov
int3
sub
fxch
mov
add
mov
gs
pop
inc
and
cli
mov
fisttpl
sub
pushf
xchg
jge
addr16
ficomps
rclb
pop
ja
dec
adc
data16
in
mov
sbb
imull
mov
jns
mov
cmp
in
lock
pop
cltd
lcall
pop
inc
enter
mov
push
cld
push
sub
jbe
xchg
test
cmc
sub
fisubs
pop
pop
negl
popa
enter
dec
pop
out
int3
push
jne
sbb
pop
adc
test
xor
sbb
dec
push
and
out
jg
cmpsb
pop
mov
sub
add
pop
rcrl
imul
inc
loopne
jno
cmp
fs
int
xchg
sahf
enter
mov
sub
pop
pop
jl
push
sub
dec
testl
xchg
ds
cmp
mov
mov
pop
add
fimuls
xchg
adc
repnz
iret
fistl
pop
sbb
sbb
mov
jns
pop
mov
std
int
sbb
pop
push
adcl
mov
cltd
data16
add
adc
pop
test
in
xchg
inc
sub
add
dec
mov
pop
pop
mov
popf
pop
add
jb
dec
jno
or
enter
cmp
out
jl
lret
imul
lea
add
sub
lock
push
sub
pop
xchg
cltd
or
lahf
pop
dec
mov
es
stos
das
mov
testb
aas
scas
shl
daa
sub
pop
cli
popf
leave
inc
fsub
push
xor
shlb
fadds
jns
jno
pop
jecxz
pop
lahf
pop
cwtl
xchg
cmp
lods
arpl
mov
jb
sar
mov
inc
jp
mov
xlat
pop
fldcw
push
pop
movsb
mov
inc
sbb
int
insl
xchg
xchg
out
aam
sub
test
std
rorl
rcrb
adc
add
loop
xchg
data16
mov
je
lret
inc
mov
push
mov
call
pop
mov
int
sarb
aam
inc
stc
xchg
xor
push
sub
inc
and
movsl
int3
iret
jmp
mov
int
repnz
lret
pop
roll
mov
cs
addr16
mov
xor
mov
arpl
cmp
lcall
mov
lods
xchg
pop
adc
bound
dec
lret
jno
or
pop
mov
cmp
sub
loop
pop
out
outsl
mov
push
mov
dec
lret
call
mov
push
inc
xchg
cmc
pop
std
or
pop
sub
pop
mov
icebp
sbb
pop
sbb
mov
fstl
cltd
ret
int
push
push
add
pop
and
adc
cmp
jge
fcompl
int
dec
push
mov
cvtps2pd
add
aas
ror
jge
shlb
jne
js
rolb
pop
lcall
mov
dec
push
sbb
cmp
in
xchg
pop
xchg
jo
repz
dec
icebp
push
stc
xchg
pop
stc
mov
testl
std
mov
sub
scas
lcall
push
and
and
out
pop
xor
push
pop
jbe
sub
push
dec
and
test
int3
or
jmp
mov
daa
jp
cs
mov
jecxz
scas
addr16
fs
jnp
pop
pop
jno
jl
add
jg
dec
sahf
scas
cmp
pop
push
lds
mov
mov
or
and
movsb
sarl
fwait
pop
mov
roll
and
ljmp
xchg
ds
dec
pop
lds
int3
inc
mov
jns
dec
xchg
out
pop
movsl
sub
mov
mov
nop
cltd
ljmp
dec
xor
lods
testl
push
add
dec
push
popf
cmc
add
mov
sbb
jge
sub
repnz
adc
stos
mov
sub
imul
ss
xor
push
adc
leave
inc
jo
ret
or
pop
xchg
leave
sub
jmp
push
dec
jo
data16
pop
jno
mov
sbb
pop
in
out
mov
pop
xor
std
fiaddl
cltd
hlt
sub
mov
adc
in
sub
mov
fimuls
cltd
repz
mov
notb
sbb
jbe
xchg
pushf
int3
repz
and
xor
stc
lcall
andb
or
cld
gs
xor
push
mov
pop
pop
cwtl
mov
pop
mov
movsb
pop
aaa
inc
sub
and
pushf
stos
dec
jb
pop
test
loope
add
fs
dec
mov
lcall
mov
pop
icebp
xor
jne
mov
divb
sbb
pop
sub
test
mov
xor
or
gs
push
icebp
sub
sbb
mov
mov
popf
lea
pop
aam
int3
test
lret
adc
xchg
lods
icebp
xchg
pop
pop
and
ljmp
popa
stc
pop
mov
clc
fdivrs
lahf
pop
xor
and
cwtl
mov
xchg
push
fcomp
pop
cmp
pop
inc
jae
call
pop
pushf
xchg
mov
stc
movsl
push
subl
mov
mov
inc
cltd
fdivs
mov
daa
pusha
push
sbb
push
cwtl
cmp
pop
adc
adc
pop
in
out
xor
adc
jne
int3
pop
pop
testl
daa
fs
mov
jns
mov
aad
xchg
jg
pop
pop
out
or
cmp
dec
movsl
inc
dec
pop
jb
cmc
out
mov
cmp
adc
inc
push
pop
mov
cmp
js
mov
pop
pop
addr16
movsl
outsl
sbb
call
mov
lahf
stos
add
fimuls
pop
cs
jbe
pop
push
adc
movsl
dec
mov
std
cmp
add
pop
scas
mov
into
push
arpl
loopne
mov
andl
data16
stc
mov
mov
sbb
pop
fdivs
xchg
pop
adc
ja
or
jae
mov
mov
cmp
cld
pop
addr16
aas
shlb
enter
scas
das
push
jo
pop
fstps
pop
dec
outsb
int
cmp
lock
sbb
lahf
inc
loope
enter
pop
inc
cmp
das
lret
pop
and
push
pop
jne
insl
js
dec
xchg
pop
or
in
dec
ret
pop
pop
ret
repz
js
mov
jne
sahf
jecxz
test
pop
pop
add
cmpl
push
les
pop
add
loop
and
daa
lods
mov
mov
imul
or
cwtl
ret
push
mov
mov
mov
subb
mov
mov
fstps
clc
jns
scas
adc
push
cmpb
fistpll
jbe
in
or
pop
cmp
out
pop
cltd
inc
pop
inc
pop
rep
adc
stos
jo
sbb
in
push
mov
dec
insb
xchg
and
mov
fldl
in
jo
mov
push
test
xchg
subb
icebp
xor
cmp
sbbw
mov
add
ds
push
jb
mov
inc
loopew
pop
aad
dec
sbb
pop
fnstenv
mov
sbb
sbb
mov
les
aam
cld
cltd
pop
leave
cmp
mov
aas
sub
xchg
cmp
xor
mov
pop
leave
add
pop
out
xchg
push
sbb
push
mov
stos
pop
mov
aam
push
icebp
ja
sub
push
jne
insb
or
sti
lods
addl
jb
call
das
test
xor
fdivr
mov
adc
sbb
pop
or
imul
xchg
fwait
or
sub
cld
mov
test
popf
out
pop
aaa
push
or
pop
imul
or
adc
dec
pop
call
sub
cmc
loop
push
push
mov
outsl
fistl
movsb
iret
sbb
push
loope
cmp
sbb
jnp
arpl
ja
stos
jge
mov
inc
cltd
jbe
cmpsb
rcrl
mov
push
insb
adc
add
jbe
out
adc
sub
ds
ljmp
pop
in
add
jp
adc
aas
mov
sub
pusha
jo
pop
clc
in
pop
jns
jge
jno
xor
fcompl
imul
loop
ficoml
xchg
cli
pop
stos
jbe
pop
bound
imul
xor
mov
dec
lcall
mov
mov
pushl
subl
popf
lret
mov
mov
mov
addr16
movsl
sarl
adc
cmp
xchg
jae
mov
lahf
add
mov
call
adc
adc
mov
cmp
or
adc
out
sbb
pop
push
movsl
mov
pop
and
pop
inc
or
inc
xchg
adc
pop
inc
pop
nop
push
sub
js
adc
les
mov
mull
repz
pop
xchg
mov
dec
rcrb
cmp
andl
jecxz
or
push
aam
mov
jns
dec
fimuls
std
pop
sarb
sub
and
xor
pop
mov
dec
add
push
add
lcall
pop
jb
and
pop
mov
cwtl
push
bound
ja
out
pop
imul
pop
scas
pop
arpl
pusha
sbb
xchg
jnp
lahf
xchg
fstp
pop
daa
jmp
cmp
sarb
test
jl
insl
jnp
xchg
push
inc
fcomps
test
cmpsb
jbe
mov
outsl
int3
jg
inc
pop
and
add
jb
push
sbb
adc
mov
imul
mov
mov
push
dec
mov
outsb
ftst
jae
in
pop
clc
adc
push
test
loope
pop
popf
scas
inc
adc
pop
and
inc
cmpb
stos
movsl
xor
fildl
pop
mov
outsb
xor
inc
mov
mov
ret
push
mov
pop
sarb
cltd
dec
ljmp
inc
adc
test
jmp
add
adc
dec
leave
pusha
mov
or
inc
fsubp
lcall
mov
loop
aaa
ljmp
sti
jle
inc
push
mov
out
es
and
sub
pop
jns
pop
ja
cwtl
test
cltd
pop
sbb
pop
loope
in
lock
sti
jo
pop
insl
mov
inc
lods
rorb
cwtl
jo
icebp
test
loopne
pop
leave
pop
mov
mov
fnsave
mov
aad
je
sub
jne
sbb
sbb
jge
xchg
mov
mov
adc
int
test
pop
add
fistpl
push
cltd
xchg
sub
mov
lods
sbbb
jl
int3
and
pop
int
lret
repz
sub
dec
mov
and
inc
sbb
lret
aaa
jbe
pop
adc
imul
out
mov
cwtl
add
cld
ja
sub
lds
rorl
gs
xchg
xchg
sub
bound
pop
int3
mov
int
dec
pop
aaa
inc
inc
cmp
dec
bound
inc
out
xchg
fst
int
sub
enter
movsb
jo
mov
cmc
ret
adc
scas
xchg
shl
test
or
or
jbe
xor
outsl
in
test
xchg
testl
lcall
push
mov
lret
popf
fcomp
mov
pop
hlt
in
jmp
jecxz
cmp
cmp
dec
or
pop
adc
dec
sbb
mov
mov
sub
insb
jnp
mov
ljmp
cmp
dec
and
mov
in
and
repnz
pop
dec
push
ret
pop
sbbb
ds
jo
jp
xchg
test
movsb
pop
fucomp
xchg
xlat
mov
leave
popf
mov
adc
das
mov
scas
lahf
icebp
cltd
xor
stc
hlt
jecxz
stos
jl
test
push
push
push
rcrb
es
push
int3
xchg
aas
pop
xchg
cmp
dec
out
cmp
push
test
in
pop
push
bound
sub
shlb
mov
stos
shlb
int
pop
or
fs
pop
aas
sbb
negb
mov
jno
mov
and
fcoms
andl
pop
jecxz
cmp
push
pop
daa
jno
jb
fidivrl
pop
dec
pop
push
outsb
popf
hlt
add
lods
or
push
clc
jne
in
pop
jb
in
insb
mov
mov
int
enter
shrl
divl
pop
addr16
xor
push
or
dec
scas
js
mov
xchg
push
addl
and
stc
aaa
repz
sbb
add
push
mov
push
push
mov
adc
std
mov
pop
cmp
jb
mov
pop
dec
jnp
arpl
int
ljmp
or
negb
test
jno
shrb
inc
mov
ret
stos
ficoml
pop
xor
daa
mov
mov
push
movzbl
movsl
mov
mov
mov
inc
ja
push
pop
pop
pop
loopne
insb
pop
sbb
scas
test
cmpb
inc
pop
or
and
adc
out
mov
fiaddl
int3
mov
pop
push
fdivs
sub
out
mov
pop
pop
loope
mov
and
cltd
cmc
cli
cmp
cmp
jbe
int3
mov
lret
pop
push
int
inc
ljmp
pop
and
add
and
sub
mov
inc
test
js
int
cmp
fnstenv
cmp
pop
xchg
lea
sbb
push
add
cmp
pop
loope
mov
xchg
inc
inc
jns
xor
pop
test
adc
dec
fwait
pop
in
jo
xor
loop
push
insl
int3
or
mov
pop
mov
in
jg
pop
cmpsb
int3
push
outsl
cmp
push
out
vmovlps
pop
mov
std
sub
cltd
xor
pop
jge
aad
push
mov
mov
or
mov
pop
data16
cmpsl
inc
sbb
testl
ja
xchg
sbb
mov
pop
mov
jle
std
cmpl
in
les
sub
mov
add
mov
rclb
pop
aad
sbb
jno
stc
pop
push
fisttpll
push
ja
rcrb
in
pop
mov
xchg
and
cmp
popf
inc
lods
xchg
mov
sub
divl
dec
inc
pop
inc
mov
test
add
push
lret
fcmovu
out
lcall
sbbb
jge
insb
inc
pop
pop
sbb
cmp
mov
lock
dec
xor
adc
dec
int3
sarl
or
loope
inc
pop
add
cmpsb
mov
int
into
es
pop
dec
movsl
mov
pop
jne
int3
loopne
xchg
jbe
pop
cld
and
inc
rcrb
rolb
sub
cld
mov
cmp
and
or
pop
and
push
aas
popl
lds
in
pop
dec
xor
repnz
negl
pop
movsl
pop
icebp
xchg
fadd
mov
pop
aad
xor
int
ljmp
sahf
pop
push
adc
mov
pop
iret
out
mov
push
xchg
push
pop
pop
xchg
dec
adc
ljmp
or
pop
or
sbb
scas
jns
xor
dec
jp
pop
sbb
imul
inc
scas
mov
int
xor
negb
or
xchg
lock
pop
sbb
scas
cwtl
sbb
push
adc
push
aas
and
stos
popf
fcmove
fcomps
lcall
sbb
cwtl
pop
sahf
push
js
pop
mov
ljmp
jmp
jecxz
sub
pop
bound
popa
mov
pop
in
loop
cs
mov
xor
arpl
jle
out
aam
pop
mull
pop
push
lret
xor
lods
imul
fdivp
cmc
dec
dec
jle
out
mov
rolb
cmp
sub
in
and
outsl
lock
cmp
pop
inc
fldcw
dec
arpl
pop
add
js
test
addr16
pop
pop
fs
fisttpl
sti
xchg
ds
test
frstor
or
dec
pop
jno
outsl
sbb
mov
lds
addr16
divl
push
enter
clc
gs
and
sti
sub
imul
into
push
jg
push
sbb
in
subb
inc
lods
inc
jb
add
mov
icebp
push
mov
cmpsl
bound
xor
cmpsb
mov
add
pop
pop
daa
cmc
push
mov
pop
dec
xchg
pop
mov
pop
jb
adc
testl
imul
pop
xor
pop
enter
ss
sar
dec
inc
sahf
pop
sub
xchg
sarb
out
cltd
insb
sbb
in
adc
pop
mov
lret
pop
cmpps
adc
cmp
ds
jo
stc
xchg
lea
mov
aam
pop
lret
and
dec
pop
fimuls
arpl
fadds
lods
sub
repz
adc
push
push
outsb
pop
xor
adc
pop
and
mov
imul
push
mov
push
repnz
sbb
fwait
sub
out
pop
and
push
pop
cwtl
dec
mov
mov
das
je
xchg
sbb
fcoms
sub
outsb
es
ds
dec
pop
cmp
fidivs
movsb
jae
hlt
sahf
int3
fsubl
fcmovu
shrb
mov
push
sbb
push
ss
mov
xor
fmuls
dec
stos
and
dec
ret
push
adc
inc
jbe
mov
add
notb
mov
jecxz
push
or
imul
aaa
cmp
cmpsl
sbb
mov
pop
or
mov
mov
je
xchg
sbb
into
stc
lahf
sbb
pop
jo
dec
dec
ljmp
pop
sub
imul
pop
lret
pop
cld
fistps
movsl
adc
inc
pop
ret
jbe
cmp
add
mov
pop
pop
sub
rcl
pop
fsubrs
xor
sub
push
loop
add
add
dec
lret
addr16
pop
cmc
jno
lcall
leave
mov
mov
ror
mov
imull
xchg
push
rcrb
pop
xor
insl
pop
jbe
in
and
mov
movsl
dec
aas
cld
xor
and
pop
jnp
outsl
push
icebp
xor
stc
push
sub
stos
leave
cltd
adc
jbe
mov
imul
negl
mov
xlat
cltd
or
sub
fsubs
pop
in
rcrb
lahf
jmp
adc
mov
mov
out
or
ret
adc
repz
cltd
mov
or
and
xchg
push
pop
or
sbb
pop
pop
sti
lods
mov
add
pop
cltd
les
fldl
ret
cltd
rorb
pop
imul
jbe
call
sbb
inc
pop
int
push
adc
into
pop
loopne
jl
pop
int3
xchg
pop
mov
imul
mov
jno
dec
cmp
sub
fucomp
dec
pop
push
popf
cld
xor
xlat
lret
pop
cltd
sub
dec
sbb
fsubr
fdiv
arpl
pop
push
testl
roll
cmp
rorb
dec
ret
push
jmp
and
repz
aaa
rcrb
xor
ret
mov
push
jns
pusha
loope
add
dec
cmp
xchg
leave
inc
in
xchg
roll
dec
pop
pop
mov
leave
pop
xchg
push
dec
std
outsl
test
or
push
inc
movsl
repnz
cld
ljmp
loope
pop
int
insl
in
jbe
mov
sub
cli
test
std
mov
or
cwtl
xchg
aaa
icebp
sub
stos
xor
mov
lahf
and
xor
xor
push
mov
pop
insl
es
push
scas
pop
pop
sbb
shll
xor
pop
sbb
or
cmp
testb
int3
jns
jge
fcmovu
mov
stos
pop
cmp
xchg
scas
stos
add
pushf
mov
xor
pop
adcb
dec
mov
je
dec
std
push
int3
push
out
adc
js
sti
xor
shll
cmpsb
mov
and
in
outsl
ffree
jno
pop
push
shll
mov
scas
mov
enter
xlat
jp
pop
in
push
aad
pop
mov
pcmpeqb
fiadds
int
nop
es
dec
in
sub
fdivrl
in
cmpsl
inc
add
ficomps
and
jge
push
out
push
pop
int
repnz
inc
push
popa
mov
sub
lock
cmp
psubusw
pop
outsb
pusha
xchg
jbe
xorl
pop
add
nop
pop
xlat
cmc
jmp
mov
mov
mov
sbb
push
jecxz
sub
sti
rclb
addr16
dec
sub
movsl
jmp
mov
fs
js
pop
jmp
jo
test
inc
daa
popf
scas
jl
cltd
dec
pop
and
mov
pop
pop
incl
mov
movsb
ficompl
cltd
jle
mov
shlb
sbb
and
lds
dec
lahf
mov
clc
xor
aam
fists
pop
imul
sahf
mov
pop
fldcw
cmp
pop
and
aad
pop
ljmp
insl
orb
and
repz
sahf
lahf
lahf
jge
fisttpl
icebp
std
rcrl
movsb
in
xchg
lock
pushf
sar
lds
nop
int
scas
pop
cli
sub
mov
ss
sbb
pop
jno
stos
iret
or
out
std
xor
in
push
imul
xchg
aaa
jb
jae
add
xorl
cmp
shrb
stos
push
lcall
stc
pop
dec
mov
bound
push
jge
jb
gs
and
jno
int3
packssdw
mov
popf
ds
sub
ja
rcrl
pop
and
inc
lret
aam
in
pop
jbe
data16
push
pop
je
mov
mov
sti
pop
jne
mov
out
mov
cli
into
adc
or
mov
sarl
mov
cmp
sbb
fcomi
scas
jl
repnz
shrl
es
sub
or
enter
test
gs
or
data16
jmp
mov
inc
push
shl
pusha
jb
pop
xor
cmp
mov
int3
sub
loop
xchg
dec
or
pop
inc
jbe
cmpsl
xchg
xor
and
jb
push
movsl
pop
not
rep
lcall
jne,pn
je
and
and
cltd
mov
inc
int3
mov
outsl
pop
popf
daa
jb
leave
std
inc
push
cmp
adc
pushf
mov
test
loopne
notb
lods
clc
push
pop
das
sub
adc
mov
jbe
sti
dec
add
rcl
int
xchg
dec
aaa
lahf
fmuls
sbb
ret
dec
xor
mov
pop
pop
mov
sbb
test
cld
dec
add
cmp
pop
xchg
mov
and
cmp
jns
push
fisubrl
mov
inc
nop
mov
mov
scas
rcl
aad
pop
mov
js
mov
inc
push
jnp
add
sbb
pop
lea
inc
testl
pop
jb
pop
inc
or
cmp
std
sub
jbe
xchg
inc
fildl
pop
in
sbb
or
dec
pop
and
and
pop
dec
cmp
iret
fstps
adc
add
hlt
pop
xchg
push
mov
scas
pop
sbb
stos
ss
cmp
push
lods
pop
sbb
jecxz
jmp
stc
movl
cmp
nop
mov
push
or
mov
gs
mov
cwtl
xor
and
lahf
mov
mov
pop
dec
repz
hlt
out
cmp
cmp
mov
neg
pop
or
jmp
pop
shl
jbe
sbb
jnp
insb
dec
and
roll
lea
dec
int
inc
and
mov
jnp
add
xchg
or
repnz
lock
sub
mov
and
pusha
test
mov
pop
xor
sub
pop
pop
ja
jbe
push
repnz
lods
fisubl
pop
add
std
stos
push
inc
xor
pop
pop
cmpsb
ficomps
sub
mov
mov
outsl
sub
rcrl
data16
mov
hlt
jl
sub
mov
pop
cmp
jo
xchg
push
cmp
xor
insl
mov
arpl
sub
sub
dec
pop
rcl
pop
outsl
ja
cmp
pop
fildl
xor
mov
ljmp
jns
movl
ret
mov
mov
movsl
pop
pushf
loop
add
pop
bnd
xchg
sbb
dec
jb
lods
fnstsw
rcrl
cmp
stos
or
jl
aad
jmp
stos
mov
mull
inc
and
int
xor
ja
pop
imul
dec
jp
inc
sub
and
jge
out
sbb
sub
mov
mov
mov
out
lcall
cmp
adc
jbe
mov
mov
int3
xchg
pop
cmp
lret
jno
sub
or
pushf
pop
cli
mov
add
mov
call
pop
test
stos
add
pop
sub
outsb
xor
fcomi
lret
xor
or
adc
mov
popa
mov
aaa
jmp
lahf
je
or
mov
pop
or
pop
dec
push
ljmp
cmp
push
js
dec
or
sub
out
pop
add
subb
mov
jns
inc
sub
pop
lret
jbe
imul
pop
lods
mov
stos
mov
lods
pop
test
xchg
pop
jno
std
ret
push
jecxz
loopne
pop
push
cld
jo
push
jle
or
jne
push
jge
shrl
jno
pop
mov
xorb
negl
dec
mov
dec
cmp
pop
mov
cmpsl
daa
je
scas
cmp
iret
sbb
shrb
inc
sub
pop
pop
shl
imul
mov
out
arpl
test
pop
pop
sbb
aas
imul
out
adc
int
push
scas
pop
xchg
xor
pushl
jbe
es
stos
push
jae
rcrl
sahf
pop
pushl
cltd
loope
ja
dec
pop
popf
loop
aas
mov
mov
mov
lods
and
mov
mov
imul
cmpsb
daa
out
js
ret
mov
sbbl
loope
xchg
xor
push
mov
fwait
lcall
int3
fmuls
lret
and
mov
dec
aas
pop
test
sti
jno
in
pop
bound
push
mov
jb
out
outsl
pop
or
mov
mov
push
cmp
add
stos
dec
add
jle
pop
test
push
lret
sub
ror
jne
negb
lods
adc
outsb
rcrb
push
lahf
in
adc
jecxz
inc
stos
daa
cmc
jle
pop
ja
jno
and
icebp
out
jb
rcrb
lret
in
dec
fcmovne
dec
pop
sub
addr16
cmp
inc
test
mov
in
pop
xchg
std
inc
mov
mov
mov
adc
mov
add
pop
cmp
fisubl
adc
dec
jl
imul
mov
xchg
adc
xchg
int
repnz
cmp
ja
xor
arpl
cld
popf
pop
aam
mov
and
sub
push
pop
jbe
scas
cmpsb
sbb
push
incl
lds
std
mov
pop
add
pop
push
or
int3
mov
sub
and
loop
lods
loope
add
cmp
xchg
mov
push
or
je
jecxz
sbb
xor
fstpl
and
or
pop
add
in
aad
ds
mov
fisubrl
js
lret
dec
mov
pop
imul
sub
adc
lea
or
and
out
jno
dec
sbb
mov
int
in
pop
insl
push
rcr
xor
cli
ja
mov
lcall
insb
in
int3
scas
ret
pop
mov
aas
jno
add
jmp
fstpl
insl
ds
jb
cmp
sub
mov
mov
movsl
gs
and
int3
stos
imul
pop
int
or
xor
cli
insl
ficomps
hlt
popf
les
fistl
mov
add
rorb
and
sbb
frstor
mov
inc
pop
bound
out
adc
popa
repz
inc
cmpsl
pop
ret
addr16
adc
scas
push
dec
jmp
iret
jmp
mov
mov
or
ficompl
mov
aas
popa
xchg
push
xchg
pop
pop
pop
or
movsl
out
xor
sub
cld
xchg
shrl
jns
mov
cmp
rcll
push
push
dec
pop
cmp
idiv
lea
test
bnd
sub
dec
arpl
pop
adc
sbb
pop
test
mov
mov
jle
push
rcrl
int
andb
or
mov
xchg
lret
inc
fisttpll
cmp
pop
jae
bnd
stos
mov
inc
in
xchg
dec
nop
dec
stos
adc
and
sbb
mov
dec
pop
jecxz
aaa
push
int3
pop
rcll
push
ja
xor
sub
lcall
and
dec
outsb
mov
rcl
enter
mov
pop
int
nop
jae
leave
add
mov
enter
pop
dec
push
lret
sbb
xor
mov
pop
pop
sbb
jo
pop
mov
add
mov
int
push
adc
mov
ja
movsb
push
pop
mov
jo
pop
jo
dec
dec
enter
jg
pop
xorl
pop
lea
shl
js
jo
mov
daa
mov
out
xorb
repz
pop
pop
stos
mov
mov
jo
pop
out
fsubs
add
notl
jnp
shll
int3
jne
in
jle
inc
pop
xchg
adc
jae
mov
int
les
jns
arpl
out
adc
push
cs
ficompl
jne
dec
and
jo
add
inc
xchg
aad
xor
xor
mov
xor
pop
jbe
leave
pop
xchg
and
arpl
jae
jno
mov
pop
jb
lcall
dec
stos
int
in
scas
pop
jnp
jae
pop
fstpt
into
stos
stc
popf
mov
hlt
mov
sub
adc
das
pop
repz
pop
push
or
scas
out
jmp
dec
xor
inc
rcrb
fldt
in
jecxz
mov
jl
fidivrl
ret
int
pop
cmp
test
mov
push
jmp
cmp
sbb
arpl
rorb
shlb
or
sub
push
mov
movsl
fadd
pop
fs
gs
int3
hlt
repnz
pusha
out
or
mov
jo
jbe
pushf
jg
pop
push
inc
mov
fstpl
in
sub
lods
xchg
stc
test
enter
lds
pop
mov
cli
mov
pop
popa
cli
aaa
pusha
lock
xor
pop
mov
cmpsb
jno
pop
xchg
sub
push
ds
pop
mov
dec
pop
jl
mov
jne
dec
scas
lret
fstpt
outsl
std
shrl
popf
out
add
sbb
push
or
cltd
scas
xlat
xchg
mov
inc
pop
mov
movsl
pop
jno
fwait
jmp
outsb
lods
jo
arpl
sub
dec
inc
or
incl
push
lea
loope
int
rcr
mov
je
scas
xchg
mov
adc
push
jo
dec
inc
jmp
in
pop
sub
jno
mov
cli
mov
fucomip
sbb
stos
aaa
jp
test
sub
pop
sbb
stos
cmpsl
xchg
or
dec
std
push
sti
cmovns
push
pop
lahf
mov
dec
push
add
push
inc
sub
stc
insb
pop
popl
pop
cmpps
fistps
pop
jbe
or
mov
stos
sbb
push
icebp
jecxz
dec
loope
sbb
pop
pop
cmp
xchg
lcall
push
test
mov
movsl
movsb
hlt
outsb
xor
pop
ret
imul
xor
adc
xlat
aaa
adc
fisubrs
or
pop
sbb
or
ret
sbb
out
push
nop
ror
clc
popa
fs
repz
mov
push
add
xor
pop
pop
dec
out
mov
in
mov
incb
jo
mov
mov
in
or
sbb
mov
pop
xor
out
or
out
ja
sub
pop
mov
xchg
ss
xchg
dec
cmp
lods
inc
leave
pop
mov
add
or
data16
mov
je
jg
jmp
push
or
pop
lock
imul
test
int3
mov
pop
sub
pop
in
pop
push
mov
repnz
or
xor
scas
xchg
out
jns
mov
adc
xchg
xchg
mov
scas
xor
out
nop
das
sbb
jge
xor
cltd
xchg
cmpb
int3
push
leave
cmpsb
scas
fstpt
inc
cmp
lods
rorl
mov
int
pop
pop
xor
movsl
into
fistpll
mov
out
inc
sub
pop
aaa
mov
outsb
std
sti
jae
fsubrs
jno
pushf
notb
pop
or
mov
lds
push
fnstenv
pop
das
mov
pop
frstor
or
pop
ja
add
insl
mov
pop
jle
jbe
cmp
cvtps2pi
pop
sbb
sbb
pop
movsb
inc
mov
adc
push
test
stc
or
fsubs
xchg
cmp
mov
aad
inc
pop
mov
pop
fucomi
dec
outsl
lea
dec
rcrb
sahf
fwait
jmp
cli
cmp
pop
inc
lret
out
mov
xchg
test
sbbb
ja
cltd
aad
lea
mov
jo
jbe
adc
dec
lret
pop
idiv
fnstsw
fcomps
pop
sbbl
out
mov
jecxz
aad
pop
arpl
cld
push
adc
xchg
jo
mov
pop
mov
popf
pusha
dec
sub
mov
daa
enter
add
push
pop
lea
dec
cli
mov
stos
and
pop
dec
sbb
dec
je
pop
pushw
pop
sub
xor
jb
lds
push
rorb
aad
ficompl
jle
in
push
iret
xor
testb
push
add
imul
cmp
mov
out
out
sbb
test
jecxz
push
scas
sbbl
mov
cltd
insb
xor
jb
daa
push
push
xchg
cmp
sbb
clc
cltd
ficomps
pop
push
filds
gs
dec
lret
mov
je
lods
and
int3
xor
pop
add
movsl
mov
pop
lods
mov
hlt
and
cli
inc
pop
mov
pop
xchg
ja
pusha
sub
scas
out
sarl
pop
out
fdiv
pop
jne
cli
insl
mov
push
mov
int
jle
js
inc
or
scas
xchg
out
pop
insb
inc
xchg
pop
adc
lock
jecxz
cltd
or
aad
fsub
bswap
scas
lock
out
stos
mov
aam
enter
mov
push
pop
adc
aaa
ret
daa
xor
pop
jne
or
fnstsw
std
sahf
pop
pop
and
push
cmp
jmp
ljmp
lahf
fildl
sub
mov
xor
pop
pop
ret
fldenv
pop
mov
dec
push
sub
sbb
sbb
sbb
dec
insl
aam
cmp
cmp
jo
pop
sub
mov
mov
and
pop
xchg
jl
jmp
inc
mov
jo
ja
clc
adc
pop
jbe
daa
cld
repnz
lock
lods
test
shll
push
mov
in
mov
sbb
movsb
fwait
mov
pop
mov
sbb
mov
cmp
rolb
add
cmp
outsb
xchg
and
pop
out
push
repz
xor
and
jne
push
bound
or
xlat
push
mov
call
and
out
vmovups
repnz
sbb
mov
leave
jns
cwtl
aam
sub
pop
imul
pop
or
cmpsl
push
sbb
pop
stos
insb
xorb
jmp
scas
sub
js
cli
enter
mov
jmp
mov
js
dec
pop
fsubrs
int3
nop
push
push
iret
aad
add
cmp
xchg
popa
push
cld
cltd
pop
jbe
jbe
xor
clc
mov
fwait
push
pop
in
mov
pop
insl
out
in
xchg
pop
gs
sbb
daa
lock
pop
dec
pop
cmpl
fdivrl
jle
dec
inc
cmp
pop
jb
inc
cmpsl
aaa
dec
mov
subb
outsb
jno
or
pop
fldt
jo
mov
cmp
dec
push
fsubs
fistpl
push
fcoml
pop
iret
mov
jge
test
pop
pop
rcr
fwait
stc
xorb
ficompl
cmp
pop
xchg
in
stos
or
inc
sti
into
xor
fmul
pop
cltd
pop
dec
ret
jb
pop
test
sarl
scas
jl
mov
xor
inc
mov
sbb
or
gs
rcrl
lahf
int3
and
jecxz
sub
pop
mov
push
cmp
lea
das
aad
ljmp
mov
xchg
pop
fstps
push
cmp
ja
repnz
push
inc
pop
out
gs
imul
or
mov
pop
push
sub
mov
in
pushf
cltd
inc
mov
imul
xlat
mov
adc
xchg
xchg
cmpsb
fcoms
sahf
sub
and
push
fwait
int3
stos
cs
dec
mov
sti
xor
fimull
inc
and
faddp
ret
leave
daa
jecxz
cmp
jns
push
xchg
mov
sahf
in
pop
xchg
loop
lret
movsb
inc
pop
mov
dec
jbe
push
pop
fcomps
int
incl
inc
adc
ja
sub
icebp
pop
jnp
dec
movsb
arpl
jb
shrl
pusha
sbb
nop
jns
sahf
push
jbe
jge
lods
lock
sub
or
sbb
jo
clc
xchg
push
xchg
jl
mov
int
loop
or
dec
pop
cmp
ror
inc
out
mulb
xor
jne
les
pop
fsubrl
adc
pop
pop
imul
or
add
jmp
aad
cmp
xor
and
jp
mov
das
jl
and
shrl
jp
mov
push
xchg
in
ret
in
or
and
cltd
imul
out
pop
jbe
sbb
pop
repz
aad
mov
fwait
xlat
scas
sbb
pop
in
shll
out
cmp
in
push
fs
or
lcall
pop
pusha
pop
test
and
xor
sbb
cmp
sbb
xchg
and
mov
push
aam
loop
jl
pop
test
pop
lds
jbe
bound
js
imul
sbb
sbb
fistl
sti
xorl
xchg
push
adc
pop
dec
daa
repz
mov
cmp
loop
ss
dec
adc
sbb
int
mov
scas
push
jmp
sub
cmp
mov
cmp
inc
lcall
in
mov
mov
pop
stos
sbb
pop
lock
dec
sub
mull
mov
lret
add
sbb
mov
orl
sub
jg
ja
push
adcl
mov
movsb
jg
jne
sub
mov
xchg
xchg
lcall
fists
or
out
dec
pop
sbb
into
scas
loop
or
mov
imul
dec
cmp
sbb
dec
mov
sbb
or
inc
pop
mov
xor
loope
lahf
pop
push
aad
pop
mov
sbb
pop
lahf
pop
mov
lock
popf
xchg
cld
xlat
pop
jno
bound
lret
add
mov
fcoml
add
pop
mov
fsts
mov
cmpsb
mov
pusha
xor
mull
fsts
es
cmp
sbb
fstp
aad
int
cmp
pop
dec
dec
in
mov
scas
pushf
pop
inc
int
out
repz
xchg
push
lods
lahf
push
jnp
pop
ss
repnz
jo
or
dec
sub
pop
pop
xchg
mov
jmp
int3
add
int
rorb
push
les
hlt
js
cmp
sbb
sub
loopne
and
pop
daa
dec
jbe
aas
movsb
xchg
icebp
popf
loop
fisubl
mov
xchg
push
pop
jecxz
push
push
and
ss
mov
test
pop
fs
mov
push
xor
fistps
push
pop
pop
test
push
scas
mov
into
cmp
adc
sub
pop
mov
fs
xchg
out
int3
push
pop
sbbl
mov
lahf
pop
test
lahf
pop
dec
pop
xchg
dec
les
int
mov
idivl
loopne
dec
mov
pushf
push
jg
jnp
xchg
sbb
sbb
pop
dec
aad
ljmp
stos
jp
pop
and
pop
add
dec
jecxz
insb
imul
mov
or
lods
sub
rorb
sbb
add
enter
or
scas
fs
jl
mov
inc
cltd
adc
mov
lcall
mov
es
sbb
mov
or
lds
xchg
enter
add
mov
lcall
xchg
add
aam
fwait
ret
and
mov
mov
enter
ret
xchg
jge
mov
pusha
lahf
pop
pushf
mov
pop
mov
pop
inc
aas
sbb
mov
xor
lret
push
push
cmp
mov
ljmp
jl
push
mov
mov
jne
mov
adc
pop
in
enter
ds
setns
cmpsb
dec
adc
jbe
loop
mov
test
mov
aad
push
cltd
int
pop
mov
shl
fnsave
pop
lret
loop
ljmp
xlat
mov
iret
xor
fmull
out
mov
dec
jbe
bound
mov
xchg
mov
inc
pop
fwait
sbb
stos
mov
fists
adc
pop
movsb
cmp
xor
pop
sub
inc
push
adc
pop
inc
in
push
cmpl
sbb
lock
xor
jnp
js
pop
xor
pop
or
inc
mov
lret
jle
negb
ficompl
fcomps
je
jp
int3
xchg
pop
cmp
dec
pop
sbb
push
sbb
sbb
pop
jl
sub
or
xchg
pop
dec
inc
jb
lock
jecxz
sub
loope
and
sub
adc
pop
loopne
addr16
pop
jbe
lods
mov
fs
push
mov
pop
cmp
cmp
cmp
fcmove
jg
mov
rcrl
lahf
mov
jnp
push
jecxz
fxch
pop
ljmp
mov
imul
cmp
pop
and
testb
mov
pusha
call
ds
pop
out
fsubrs
adc
xchg
ja
xor
rcl
mov
adc
lods
test
int3
pop
or
inc
sbb
and
int
pop
fsub
call
out
int3
sbb
push
pop
mov
xchg
loopne
sbb
mov
pop
sbb
mov
enter
jg
or
pop
xchg
inc
pop
fs
daa
mov
pop
jg
inc
rcll
lea
push
xchg
xchg
pop
loopne
or
mov
es
dec
sub
sbb
pop
add
je
xlat
mov
notb
pop
in
xchg
in
gs
pushf
cmp
xor
adc
push
xor
and
pop
inc
xor
lahf
inc
xchg
gs
mov
push
lock
lea
xlat
nop
jns
jo
pop
mov
xchg
sbb
add
lea
pop
cltd
int3
daa
push
jae
or
loope
testl
int3
pop
call
in
push
pop
sbb
push
ret
pop
xchg
jp
xchg
popa
pop
rcrl
inc
decb
pmulhuw
sahf
dec
pop
pop
out
push
mov
inc
or
sbb
sub
div
pop
iret
insb
dec
loope
mov
int
push
sbb
int3
lods
sbb
cmp
mov
dec
dec
pop
aam
sbb
mov
xor
mov
andb
mov
sbb
testl
xchg
insb
leave
pop
call
xchg
adc
subb
xor
ja
cld
mov
cmpsb
xlat
scas
in
jo
mov
mov
sbb
pop
or
lahf
cmpsl
mov
mov
fildll
pop
adc
hlt
fildll
mov
clc
add
inc
je
add
int
mov
call
imul
pop
mov
cltd
or
push
push
in
repnz
cld
test
mov
mov
pop
push
out
vcmpps
sub
into
scas
cmpsl
add
pop
jecxz
mov
roll
adc
rcr
pop
add
pop
into
and
int
lret
xlat
sub
pop
mov
cs
pop
jns
pop
jge
adc
dec
mov
jae
fsub
or
pop
clc
mov
mov
data16
das
push
stc
and
andl
add
fstpl
fcmovnbe
cli
xchg
dec
sbb
mov
pop
jp
push
cmp
cltd
jg
hlt
arpl
daa
imul
imul
call
and
addr16
in
icebp
mov
pop
ficoml
inc
out
jg
or
add
insl
pop
pop
xor
data16
xchg
adc
popl
pop
jbe
inc
sub
pop
rcrl
add
cli
popf
je
xchg
pop
sbb
stos
push
int3
dec
sbb
mov
dec
mov
dec
push
or
pop
xlat
stc
or
mov
loop
pop
push
int3
xchg
in
jne
pop
xchg
push
in
sbb
mov
fsts
or
xor
movsb
outsb
lahf
sbb
pop
inc
push
popa
pop
mov
sbb
sub
add
pop
inc
daa
repnz
int
xchg
mov
jne
mov
jle
sti
mov
loope
xor
cmp
lret
arpl
repz
xchg
mov
js
aas
loop
lods
enter
sub
ficomps
dec
pop
pop
dec
les
cmp
mov
pop
xchg
mov
pop
testb
dec
pop
push
mov
lds
xor
fidivrl
js
mov
dec
pop
iret
imul
add
push
pop
jns
push
ret
jae
sbb
lods
mov
negb
mov
pop
mov
sub
push
sbbb
rcr
cli
mov
push
fwait
iret
aas
movsb
pop
pop
jbe
cmp
pusha
dec
mov
int
pop
das
sbb
cmp
jno
mov
ret
lea
fists
fisttpl
push
fsubr
jae
out
pop
leave
in
push
sbb
push
fs
sahf
pop
mov
scas
add
cltd
jg
pop
mov
mov
mov
cltd
lahf
icebp
mov
pop
in
xchg
push
jb
add
pop
ljmp
lods
and
stc
cli
cmpsb
jge
aad
mov
jo
mov
fsubrp
popa
cmp
mov
test
push
andb
adc
pop
sub
stos
das
inc
push
mov
inc
mov
cmpw
outsb
pop
shrl
das
lea
fisttpl
shrl
push
pop
rep
gs
imul
pop
in
jbe
pop
sub
int
jg
xchg
leave
xor
decl
pop
push
xchg
jbe
pop
xor
int3
pop
pop
daa
cld
jmp
mov
insl
pop
imul
out
jbe
xchg
xchg
push
inc
mov
pop
je
or
mov
outsb
pop
int
or
pop
andb
jecxz
aam
pop
stos
xor
jmp
das
orb
les
jecxz
int
mov
cltd
cli
rcr
imul
ret
xor
or
sbbl
mov
data16
nop
ret
push
rorb
pop
test
shll
xor
aad
movsb
pop
mov
addr16
push
jo
pop
cli
sbb
push
jb
cmpsb
and
lret
sahf
jno
push
push
jecxz
lret
or
adc
mov
ss
sub
mov
lahf
repnz
pop
shl
dec
and
adc
mov
stos
and
pop
pop
mov
clc
in
lahf
mov
rcr
adc
pop
insl
ret
xor
mov
pop
adc
int3
push
sbb
cld
das
mov
loope
lock
and
dec
test
addr16
movsl
testl
aam
imul
sub
push
dec
pop
negb
lcall
popf
jbe
xor
in
sub
sbb
sbb
jns
mov
int
xor
loopne
jbe
sbbb
jecxz
lahf
adc
call
jmp
or
jnp
or
int
sbb
mov
jmp
in
stos
push
dec
pop
test
fsubrp
jb
in
jecxz
sub
test
daa
xchg
dec
mov
es
pop
jg
pop
scas
aas
jmp
pop
cli
stos
iret
daa
xor
mov
xchg
arpl
nop
mov
jp
pop
rorb
push
jl
sahf
sbb
jne
dec
movsl
inc
and
jb
cltd
dec
js
imulb
out
mov
in
and
sbb
push
sub
or
sub
int
or
fstps
inc
hlt
scas
jo
pop
cmp
lods
or
aam
out
mov
gs
jb
or
rcl
movhps
pop
jge
mov
mov
xchg
int3
mov
out
clc
jle
cmp
pop
mov
call
cmp
mov
mov
push
cmp
inc
sub
mov
cld
push
cmc
daa
sub
mov
pop
mov
or
sbb
scas
aam
testl
sbbb
test
fistpl
adc
xor
in
push
add
popf
adc
pop
lods
push
xor
mov
xchg
repz
pop
cmc
xor
lds
pop
mov
mov
dec
fistps
pushf
outsb
dec
pop
mov
arpl
rcrb
jmp
xchg
int
mov
jbe
cltd
adc
imul
xor
das
pushf
pop
push
xchg
int
push
xchg
cmpsl
fisttpl
mov
ret
pop
fistps
push
adc
xor
stos
arpl
dec
mov
pop
idiv
lods
test
dec
sbb
pop
pop
inc
add
push
push
jmp
pop
inc
inc
mov
or
data16
push
pop
lock
sbbb
aam
push
outsl
pop
add
cld
adc
mov
inc
je
xor
add
dec
sbb
lea
sbb
loope
mov
push
cli
out
pop
insl
fildl
mov
xchg
adc
jb
cmp
out
outsl
stos
dec
pop
mov
push
aam
aas
mov
pop
mov
push
popa
sbb
xorb
pop
sahf
push
lea
sub
pop
sbb
icebp
std
mov
leave
int
push
mov
mov
imul
in
negl
shll
xor
sub
js
jbe
fisttpll
fcompl
loop,pt
push
int
pop
fisubs
cmp
into
xchg
push
mov
repz
adc
stc
cmp
sub
dec
pop
and
data16
pushl
scas
outsl
mov
pop
cmpsb
jbe
jp
and
ja
mov
fidivl
dec
cmp
jl,pt
inc
clc
and
dec
and
push
ljmp
mov
mov
pop
mov
mov
stc
pop
dec
add
dec
int
dec
out
gs
pop
xor
addr16
pop
mov
xchg
rcl
outsl
add
test
xor
ljmp
or
fdivs
push
mov
pushf
repnz
jb
dec
daa
dec
mov
add
lods
inc
sbb
les
adc
js
pop
pop
hlt
cmpsl
loopne
cmp
mov
je
cltd
inc
shlb
jno
aas
xchg
shll
pop
in
cmc
mov
mov
je
push
aad
adc
cmp
neg
pop
insb
lea
int
stos
lahf
pop
adc
neg
inc
pop
cltd
pop
dec
inc
int3
mov
xor
cmpsl
lcallw
cmpsb
dec
mov
int
and
jecxz
or
pop
sarb
call
mov
insb
cbtw
or
mov
sbb
xchg
xchg
push
push
bound
sarb
into
mov
dec
stc
scas
out
cmp
add
mov
fsubrs
into
fnstsw
aam
jb,pt
inc
mov
out
mov
cmp
ret
pop
mov
repnz
shrl
mov
dec
push
ss
adc
pop
loop
jl
push
dec
cmc
mov
jae
call
push
inc
pop
lods
and
jno
lahf
or
scas
and
or
jb
mov
jecxz
pop
imul
sub
in
pop
cmp
pop
xlat
adc
fistpl
or
stos
pop
int
data16
nopl
loopne
ret
scas
xor
addr16
repnz
int3
mov
pop
int
dec
inc
push
adc
in
lods
sbb
cmp
mov
icebp
push
dec
sub
add
jae
mov
mov
out
push
cmp
inc
jmp
pop
xor
pop
stc
push
fsincos
jp
pop
jbe
push
dec
ret
pop
mov
mov
sbb
cld
inc
jae
test
mov
out
mov
push
pushf
movl
pop
fsts
es
and
cs
aaa
pop
dec
cmp
add
pop
adc
dec
sbb
sub
sub
and
out
pop
push
cli
mov
mov
insb
pop
sub
push
test
popa
ret
sbb
or
cmp
hlt
scas
test
imul
mov
outsb
dec
push
ret
dec
pop
fcomip
inc
cmp
mov
pop
das
sahf
stos
lea
cld
mov
fidivrl
int
pop
shr
xchg
lods
imul
xor
push
icebp
jl
int3
xor
int
jle
add
inc
aad
dec
lret
fwait
movsl
mov
xchg
loop
scas
arpl
out
call
sti
fdivs
jecxz
jns
pop
lds
sbb
jp
dec
pop
inc
pop
sub
mov
lea
sbb
mov
cmpsb
pop
mov
adc
adc
mov
cmp
sbb
insl
xchg
iret
mov
push
pop
lret
sub
dec
dec
cmp
mov
adc
in
sbb
sub
fnsetpm(287
xor
or
sub
in
ret
and
mov
pop
or
mov
cmpsb
pop
je
mov
cmp
lods
add
jmp
ds
pop
push
mov
imul
or
pop
out
test
jecxz
cld
mov
or
mov
inc
fwait
or
mov
in
rorl
pop
pop
cmp
ja
mov
sbb
push
dec
push
pop
dec
sub
aaa
pop
mov
test
push
xchg
xchg
dec
adc
pop
jmp
dec
insl
push
and
outsl
pop
ret
cwtl
mov
int
add
sbb
rcrl
fadds
sbb
xor
addb
stos
in
jl
fptan
pop
adcl
pop
mov
jne
dec
int3
add
sub
cmp
pop
ret
sarl
jge
pop
mov
imul
cli
mov
imul
inc
inc
pop
test
push
dec
add
mov
cmp
xchg
fnstenv
loope
pop
jne
jns
pop
and
cmp
sbb
mov
lret
lock
pop
sbb
dec
aaa
repz
xor
pop
sahf
lea
insl
fstpl
jle
jb
not
scas
pop
mov
dec
ja
add
data16
arpl
jle
xor
push
in
mov
add
xor
fwait
pop
les
jg
fs
lea
push
sub
sbb
out
pop
fdivr
mov
lods
out
lret
jb
loopne
lahf
aad
or
pop
sets
push
push
pop
xchg
jl
mov
xor
pop
xchg
sub
addr16
pop
xchg
ret
outsl
and
mov
jo
insb
paddd
loop
xchg
pop
pop
mov
int3
lods
pop
addr16
push
sbb
and
and
mov
imul
pop
test
pop
aam
inc
sbb
or
lahf
mov
seta
lret
lret
insb
push
fisttpll
and
pop
mov
outsb
jge
pop
inc
in
sub
je
cmp
push
xchg
pop
inc
pop
cli
inc
jmp
mov
lret
cmp
xlat
mov
mov
mov
dec
and
push
iret
out
loope
mov
pop
fistpl
aas
pop
nop
push
out
shlb
dec
mov
enter
int3
stos
push
shll
mov
pop
fcomps
push
pushw
jmp
stc
adc
addr16
jmp
jno
shlb
ficoms
stos
shrb
mov
mov
add
cmpsb
cli
mov
ret
push
mov
sbb
sbb
and
loopne
xchg
cli
pop
int3
adc
subl
jb
lds
push
in
sbb
mov
lahf
dec
pop
adc
repz
mov
cmp
pop
rol
je
scas
or
lret
stc
adc
mov
fildll
aad
xchg
fucompp
int
into
pop
movsl
test
repnz
loop
bound
cld
jb
scas
xor
dec
mov
add
add
jb
mov
cmp
push
jno
or
or
pop
or
sbb
inc
pop
jg
inc
insl
and
inc
mov
fidivs
sub
jp
pop
test
sub
in
lods
pop
std
sbb
imul
inc
int
es
jp
xchg
dec
movsb
ds
adc
xchg
pop
mulb
adcl
fsts
mov
jmp
fildll
dec
inc
mov
loop
push
push
std
pop
jmp
or
fcomps
mov
loopne
dec
pop
cli
pop
mov
fmuls
pop
pop
lcall
xchg
bound
loop
push
mov
mov
cmp
pop
dec
loop
dec
inc
inc
std
jb
xchg
int3
fadds
repnz
pop
insb
mov
dec
pop
xchg
pop
ds
pop
adc
bswap
xchg
xchg
popa
pop
jbe
sbb
pop
xchg
sarl
pop
in
inc
add
movsl
xor
pop
adc
loopne
cmp
sbb
mov
or
mov
jbe
lea
in
subb
addl
xchg
jmp
pop
stos
int3
mov
mov
mov
jp
insl
mov
cmc
bound
mov
xor
cli
add
xor
out
adc
or
insl
rcrb
mov
stc
push
pop
and
mov
and
iret
imul
pushf
pop
mov
mov
jbe
mov
arpl
or
sbb
jg
imul
sbb
fdivrs
in
pusha
sbb
jns
mov
scas
aad
cltd
cmp
adc
ljmp
data16
iret
fldt
pop
sbb
pusha
mov
sbb
push
in
xor
mov
jle
pop
pushf
push
mov
pop
fwait
or
dec
sub
sbb
aas
pushf
cmp
pop
ficoms
dec
or
ja
mov
pop
xchg
mov
mov
inc
iret
mov
inc
adc
test
mov
push
sbb
outsb
xchg
dec
or
mov
pop
pop
xor
mov
cmpsl
orb
push
inc
jns
mov
mov
stos
in
xor
adc
ds
pop
and
dec
lcall
adc
in
mov
and
mov
cltd
mov
sbb
aas
shlb
rcrb
out
stc
movsb
ret
aad
sub
mov
add
adc
dec
lds
aam
adc
xor
push
and
sub
adc
loopne
sarb
sbb
mov
pop
pop
int
lea
xchg
pop
mov
cmp
lcall
scas
lahf
jecxz
std
jle
mov
mov
cltd
cmp
jae
lahf
pop
cmp
arpl
das
mov
bnd
jae
push
mov
adc
in
aaa
pop
sbb
adc
out
outsl
lods
test
or
lds
or
es
add
pop
xlat
xor
mov
nop
je
pop
gs
in
adc
push
int3
push
fmul
stos
movsb
push
stc
dec
sti
adc
pop
jbe
push
and
je
aam
leave
movsb
dec
pop
loope
add
inc
pop
pop
inc
xchg
sbb
pop
es
fbld
adcb
leave
xchg
pop
xor
cmp
jb
add
pop
mov
mov
pop
js
jecxz
mov
mov
stos
dec
stc
xor
pop
and
jnp
iret
ret
int
mov
daa
mov
imul
adc
das
pop
scas
push
sub
gs
and
jg
loope
pop
dec
xchg
pop
negb
bound
pop
and
mov
sbb
stos
jp
xorb
dec
jle
xor
pop
mov
jno
push
or
sub
testl
adc
push
mov
lods
outsb
sub
cmc
cmp
push
and
scas
dec
test
pop
pop
add
mov
cmp
sbb
dec
sti
pop
in
lods
js
sub
lret
pop
sub
sub
push
jo
clc
add
mov
sbb
mov
sbb
cltd
ret
lea
and
pop
and
repnz
in
cltd
sbb
sahf
adc
je
sub
dec
xor
jo
add
jbe
cmp
insb
push
jne
add
push
ffree
nop
pop
pushf
test
jo
scas
outsb
in
or
inc
fisubrl
jp
pop
test
dec
pop
push
leave
xor
ret
jge
fstps
adc
inc
lea
mov
xchg
lcall
mov
push
outsb
inc
jecxz
lods
fistpl
lret
and
std
ficompl
fmull
adc
cmpsb
push
call
mov
cmpsl
loop
adc
pop
test
fidivrl
pop
cld
test
pop
jp
pushf
int
hlt
roll
adc
mov
xlat
stos
mov
fldenv
outsb
pop
xor
fwait
imul
jg
inc
cld
mov
test
sbb
fcompl
mov
jecxz
mov
cmpsb
cmp
add
or
pop
icebp
aaa
popf
and
orb
pop
je
enter
rcr
lahf
inc
xchg
lea
jmp
mov
adc
add
pop
sub
push
fbstp
and
inc
and
movsl
mov
mov
add
pop
inc
add
lret
shll
inc
pop
dec
fwait
cmpsb
push
sub
jno
out
push
sub
push
pop
jmp
cs
jo
andl
adc
mov
dec
sbb
adc
mov
ret
cli
adc
pop
popa
jle
add
pop
add
push
pop
xlat
outsb
das
pop
movsb
inc
int3
cmp
jle
popf
in
leave
jb
mov
pusha
mov
cmpl
push
adc
sub
sub
xchg
loopne
ret
cmp
sbb
xor
or
dec
lret
xchg
pop
add
inc
js
fnstsw
pop
dec
xchg
stos
sahf
pop
daa
cmc
pushf
cmp
jle
inc
pop
sbb
dec
sub
sbb
aad
xchg
fcompl
clc
int
and
cmpsb
pop
out
je
sbb
or
pop
ds
fmull
pop
jmp
inc
pop
imul
jns
xchg
sahf
gs
enter
rorb
les
jle
mov
lods
cld
jae
sbb
pop
xor
mov
pop
sub
bound
sarl
aaa
mov
hlt
mov
test
or
sahf
into
mov
fcomps
pop
sbb
mov
pop
pop
jnp
cltd
in
dec
cwtl
flds
jl
mov
in
or
and
and
push
pop
push
or
loop
clc
hlt
xchg
dec
cli
xchg
sbb
popa
cmp
ret
adc
fdivs
dec
pop
pop
xor
and
fbstp
pusha
adc
dec
movl
pop
and
xor
sarl
xor
or
mov
arpl
adc
scas
aas
pop
insl
sub
mov
lahf
or
je
imul
dec
xor
jbe
push
outsb
mov
jge
or
pop
fiaddl
lahf
jb
jmp
inc
std
sbb
testl
pop
pop
pop
xor
inc
push
sbb
cmpsl
dec
and
or
mov
mov
pop
les
scas
ds
xor
or
sub
int3
or
jb
push
jno
pop
push
inc
int
sarl
xchg
test
mov
fstl
fsubrp
pop
adcl
dec
mov
inc
outsl
aam
in
lods
push
inc
inc
sarl
pop
sti
pop
aas
jnp
fnstsw
dec
pop
xlat
xchg
cwtl
mov
pop
pop
inc
aaa
stc
cmp
loope
andl
in
dec
mov
rcrb
ret
cmp
aam
aas
fcomps
ss
popf
pop
and
pop
jno
jo
xor
cltd
pop
rcr
ss
int
movsl
inc
pop
pop
mov
vmovaps
cmpl
mov
int
xor
sbb
pop
popf
cmp
out
fcoms
jle
sbb
out
lret
test
scas
int3
lea
rcll
xor
mov
mov
and
push
inc
pushf
sbb
fsts
pop
outsl
jge
xchg
int3
pop
push
fcompl
add
mov
and
pop
pop
add
xor
scas
jmp
movb
pop
pop
aaa
fisttpl
rcrb
push
push
hlt
dec
adc
pop
inc
xchg
lahf
icebp
int
addb
mov
pop
pusha
push
lods
jecxz
inc
mov
jmp
dec
repz
pop
pop
jno
dec
lret
pop
aas
rcrl
fmul
icebp
nop
cmp
dec
cld
xchg
ja
in
shrb
mov
fs
popf
xor
push
pop
pop
mov
outsb
mov
xlat
std
pop
cld
int
scas
add
repnz
push
add
xorb
test
fidivl
cmc
pop
shr
fdivrl
mov
mov
repnz
pop
js
lods
xchg
mov
mov
out
xor
xchg
pop
ret
inc
aad
imul
dec
ss
push
sub
add
ds
inc
mov
stc
push
push
inc
adc
pop
je
orl
out
mov
pop
xor
ja
jbe
inc
int3
hlt
mov
push
shlb
in
pop
mov
dec
mov
out
sbb
shrl
stos
mov
pop
sbb
inc
push
test
in
hlt
frstor
fidivrs
mov
popa
sbbl
jge
lahf
adc
xchg
pop
mov
adc
std
jbe
repnz
add
int
inc
loopne
and
mov
jns
pop
insl
andb
pop
sbb
xchg
xchg
jnp
int3
repnz
outsb
dec
xlat
fsubs
xor
cmp
dec
daa
lcall
sub
and
loop
cld
or
pop
mov
xchg
inc
call
xchg
in
imul
pop
xor
mov
cmp
pop
or
jbe
shlb
push
movsl
xchg
and
and
cmp
aad
pop
and
jecxz
dec
out
mov
pop
movsl
shrb
pop
sti
sbb
cmp
cmc
pop
dec
loopne
sub
inc
cmp
push
mov
push
or
insb
xchg
mov
test
jle
out
pusha
fisttps
imul
addb
cmp
pop
loop
or
mov
sbb
push
and
jb
inc
cltd
scas
pop
dec
shrl
cmp
sbb
and
jg
dec
jo
and
popf
das
int
pushf
leave
and
adc
sub
and
fld
sub
or
cmpsb
push
push
sbb
arpl
sti
add
jecxz
sbb
jne
cmp
movsb
inc
xor
sbb
pop
jo
adc
jecxz
mov
out
loope
repz
add
cmp
aad
xor
sahf
adc
ss
popf
sub
xor
pop
dec
js
push
jae
data16
push
lret
pop
mov
mov
iret
pop
sub
push
sbb
outsb
adc
sbb
int
gs
inc
or
popl
pop
pop
arpl
pop
push
jo
sbb
push
cmp
or
mov
stc
cmpsb
fsubrs
call
pop
fstl
push
inc
and
in
orb
test
mov
iret
mov
fimull
inc
or
jge
lods
call
popa
dec
gs
movsb
imulb
scas
mov
pop
clc
aaa
enter
cmp
jno
pop
movsl
push
lds
dec
bnd
test
sbb
adc
mov
jne
pop
repz
sub
cmpsl
cmp
sub
cmpsl
fcoml
lret
daa
adc
push
pop
or
inc
xor
xor
stc
sbb
pop
in
int
push
mov
into
out
jns
lret
fcomps
stc
cmp
xchg
jnp
sbb
stos
jle
lcall
out
mov
or
jbe
jnp
aam
pop
rorl
cltd
inc
sbb
jl
pop
push
scas
sub
int
fcoms
mov
sbb
sbb
ss
cmpsb
jg
jno
imul
nop
sarl
jne
dec
pop
cltd
pop
mov
push
sti
arpl
dec
scas
or
dec
lahf
dec
pop
or
lcall
das
into
push
pop
adc
mov
sub
xlat
pop
jg
xchg
inc
mov
pop
ret
dec
stos
scas
iret
cld
pop
pushf
mov
fcoms
sbbl
mov
xchg
or
lcall
xor
jle
jmp
stos
inc
pop
outsb
pop
cmp
int3
dec
lods
pop
pop
sub
push
inc
inc
xchg
mov
pop
outsl
sub
jbe,pn
sbb
stc
xor
fadds
push
jae
mov
mov
sbb
fbstp
xchg
jb
jle
jp
sahf
aam
rorb
pop
out
hlt
jmp
push
jp
or
pop
ret
jbe
mov
inc
and
add
pop
lods
pop
push
ljmp
cli
and
xchg
pop
jg
xchg
xchg
adc
fnsave
outsb
mov
int
lds
je
mov
fistpl
insl
sbb
std
lods
jbe
cs
xchg
scas
jmp
mov
out
inc
xchg
pop
mov
push
inc
lods
mov
int3
and
cmpsb
iret
pop
mov
fwait
negl
cmp
insb
push
pop
mov
mov
xor
neg
pop
add
add
rorl
dec
xchg
iret
pop
lahf
mov
mov
test
ds
pop
xchg
adc
and
mov
outsb
jb
xchg
movsl
xchg
enter
lods
pop
movl
scas
push
jbe
mov
mov
dec
cmp
mov
push
sub
jb
jp
ret
popf
pop
fldl
bnd
push
jle
inc
out
ss
popa
sbb
push
insl
rorb
jbe
pop
test
mov
int
bound
pop
into
pop
orl
inc
pop
int3
or
cmpb
cwtl
pop
or
pop
int
shr
insl
xchg
fwait
push
aaa
pop
call
cmp
mov
dec
fcoms
mov
pop
arpl
adc
pop
jb
cs
jle
dec
jecxz
pop
lods
das
lret
adc
cmp
pop
mov
fwait
fcomps
push
xor
ret
mov
mov
int
xchg
jae
mov
repz
clc
or
negl
leave
sahf
fcomps
insb
shll
pop
ficoml
xor
mov
pop
pop
cltd
dec
mov
popa
lcall
sub
pop
adc
jbe
dec
mov
pop
in
jge
jecxz
mov
mov
inc
jecxz
std
and
inc
sbb
pop
rcrb
dec
jae
inc
popa
pop
cmp
ja
pop
stc
mov
lods
cli
cmp
push
push
fildl
or
add
push
cmp
aas
jo
mov
and
int3
push
sbb
lock
aad
int
sbbb
lahf
cld
adc
lret
mov
xchg
or
pop
test
add
stos
pop
xchg
inc
ljmp
iret
test
adc
cmpsl
pop
clc
mov
pop
jnp
imul
lods
jo
das
imul
jge
adc
cli
push
hlt
test
in
pop
mov
mov
out
mov
pop
rcrb
sahf
and
movsl
lock
lret
fs
xor
mov
xor
jb
jns
in
pop
aad
sbb
ja
mov
pusha
pop
shrb
fdivrl
in
pop
cltd
jo
gs
mov
addb
cltd
stos
mov
add
ss
pop
aam
imul
add
add
stos
cmp
hlt
outsl
arpl
movsb
icebp
sbb
xchg
sub
call
mov
adc
ds
fs
xlat
jge
cmp
loope
xchg
pop
jnp
int3
mov
pop
rorb
xchg
push
sbbl
loope
frstor
adc
lret
mov
int
pop
in
xor
outsb
lret
popf
cmpsl
pop
mov
pop
je,pn
or
aaa
mov
pop
int
sbb
inc
jecxz
jg
pop
lods
stc
enter
cli
xchg
jno
scas
inc
lret
cmp
pop
or
sub
jne
jns
mov
roll
lret
rcr
cmp
call
cmp
push
mov
hlt
sub
outsl
clc
pop
imul
js
int3
push
lods
inc
pop
sub
sbb
cmp
lea
xchg
pop
int
testl
push
push
pop
xchg
aam
xor
mov
ja
sub
pop
add
jmp
fbstp
aad
bound
popa
xchg
pop
xor
dec
les
push
adc
jb
inc
pop
cmp
mov
jns
jo
scas
jmp
pop
and
outsl
out
shl
pop
xchg
mov
gs
sub
sbb
mov
pop
and
inc
int
pop
decl
adc
inc
lock
pop
scas
dec
pop
int
arpl
dec
pushaw
pop
pushf
and
lcall
push
stos
lahf
test
push
enter
mov
fbld
jbe
loopne
test
mov
jmp
scas
jecxz
clc
out
sbb
mov
jo
mov
adc
xchg
sub
pop
inc
int3
or
mov
mov
bound
into
clc
mov
jge
add
adc
movsb
repnz
xorb
test
js
and
jno
es
movsb
sbb
out
mov
sub
adc
cmovp
fadds
mov
pop
cmc
xor
cld
sbb
ja
add
adc
push
push
push
xor
lods
push
adc
xchg
lcall
jo
adc
push
inc
fists
ss
into
or
mov
fldt
mov
arpl
lock
mov
mov
adc
popa
jb
mov
rol
inc
int3
xor
jge
int
push
or
sbb
pop
lea
xor
fucomi
sub
dec
sbb
clc
sbb
mov
pop
in
dec
sub
adc
dec
push
sbb
pushf
xor
icebp
iret
push
ss
push
push
pop
inc
mov
sub
pop
push
mov
mov
pop
xchg
or
push
jo
cmp
pop
adc
mov
push
pop
ficomps
or
pop
xchg
ljmp
stos
popf
push
jae
hlt
push
sub
clc
movsl
pop
mov
mov
dec
cwtl
pop
out
xor
sbb
scas
repnz
jecxz
jge
pop
pop
or
andb
pop
xor
add
mov
mov
js
mov
shrl
in
xchg
mov
jnp
imul
lcall
pop
mov
pop
xor
pop
stos
aad
adc
push
push
lret
mov
cmc
dec
add
scas
test
pop
jae
aaa
cmp
sbb
push
xchg
pop
sbb
mov
jo
pop
jno
fldl2e
adc
and
sbb
shrb
xchg
clc
pop
int
movsl
cwtl
rolb
addps
adc
fbld
fnstenv
inc
les
sbb
pop
pop
push
addl
pop
jbe
jb
ds
dec
add
pop
pusha
adc
arpl
mov
movsb
add
jecxz
pop
lds
pop
pop
cmp
int3
fists
pusha
ret
mov
fwait
movsb
jo
pop
xor
push
imul
sbb
sbb
sub
scas
cld
pop
sub
fidivrl
cmp
adc
mov
mov
ret
pop
movsb
pop
xchg
sbb
out
insb
inc
gs
lods
pop
jecxz
xchg
jb
pop
lret
loopne
insl
jo
pop
test
stos
mov
xchg
enter
sbb
dec
xlat
scas
lret
lcall
inc
mov
push
pop
mov
mov
test
and
push
pop
aam
lods
call
mov
cmc
dec
sub
scas
xor
inc
test
cmp
out
in
clc
mov
and
hlt
ret
push
fwait
dec
jmp
orl
dec
jo
and
xchg
imul
push
adc
test
xor
scas
rcrb
cmp
sbb
pop
bound
fisttpl
mov
out
sbb
std
push
insl
and
fcomps
xchg
push
outsb
mov
pop
push
mov
iret
pop
insl
dec
push
ficoml
ficompl
or
or
lahf
push
mov
aaa
addl
xchg
idivl
pop
adc
pop
xchg
pop
inc
sbb
jp
imul
clc
repz
pop
mov
xchg
push
pop
inc
gs
mov
int
pop
mov
sbb
cmpsb
pop
cmp
pusha
test
sahf
mov
push
mov
jg
cmp
jl
xchg
gs
push
add
cld
adc
in
sub
mov
pop
fs
or
pop
scas
inc
lock
push
mov
repz
nop
adc
sub
and
sub
and
push
sbb
lea
jg
and
jp
jo
pop
xor
fimuls
or
daa
sbb
scas
lahf
dec
mov
movsl
insl
fcomps
rcrl
push
shlb
pushf
xchg
dec
arpl
push
mov
and
mov
jecxz
ret
push
push
leave
iret
sub
lahf
in
out
inc
ficoml
adc
adc
out
add
dec
pop
jo
ss
popa
cli
jne
pop
mov
fs
out
pop
insl
adc
idivb
lods
mov
lds
out
jo
sub
pop
and
icebp
mov
inc
jmp
inc
fildll
mov
sub
xor
xor
fcoml
test
inc
mov
push
movsb
dec
pop
lds
js
push
bound
ret
shll
arpl
or
mov
pop
mov
jo
pop
sub
rcl
pop
cmp
cmp
pop
js
fwait
insl
cli
dec
fs
iret
sbb
ds
mov
rclb
pop
dec
push
jl
ret
shrd
insb
leave
mov
dec
xchg
xchg
pop
cmp
pop
out
ljmp
stos
pop
xlat
into
lea
or
movsb
jl
jns
add
aam
sub
fbstp
push
pop
in
xlat
jp
cmp
mov
pop
jbe
mov
fldenv
sbb
test
orb
lahf
jae
xor
xlat
adc
cmpsb
dec
imul
pop
pop
xchg
cmp
add
pcmpeqb
push
pop
int
dec
lahf
inc
mov
and
or
jecxz
shll
or
lods
xchg
test
mov
ret
std
gs
scas
cmp
sarb
fsubp
jbe
dec
pop
lcall
push
shl
jo
pop
call
ror
lods
es
das
mov
sbb
jl
mov
xchg
scas
pop
ja
gs
pop
xor
mov
lea
add
sbb
insb
mov
sbb
dec
scas
inc
adc
dec
or
pop
sbb
mov
pushf
push
push
scas
imul
pop
cmp
adc
jne
pop
jb
and
sub
mov
lahf
insl
inc
dec
cld
fimull
xor
fwait
scas
cmc
sbb
loop
dec
cmp
lahf
les
insl
jb
fsubrs
xor
pushf
fcompl
cwtl
sbb
mov
lock
jmp
in
cmpsl
mov
sbb
mov
incl
lock
push
adc
lahf
jl
pop
pop
add
es
add
pop
push
cmpsb
lods
xchg
mov
test
sub
adc
and
push
scas
push
lret
add
pop
pop
jmp
mov
push
imul
or
sbb
ja
mov
pop
test
sbb
xchg
in
aaa
jecxz
ss
out
mov
mov
mov
imul
outsl
mov
loop
std
fdivl
mov
mov
in
rorb
push
mov
cmp
movsl
mov
lods
add
jl
test
fst
scas
mov
adc
mov
or
lahf
repz
insl
cmp
pop
mov
mov
sbb
inc
fstpl
pusha
jno
test
in
mov
jbe
pop
rorl
scas
test
jb
pop
clc
mov
icebp
and
push
sbb
sub
sub
out
movsb
mov
mov
rcrb
and
pop
ja
imul
sub
pop
dec
cmp
ljmp
dec
hlt
lods
sub
jmp
je
scas
pop
cwtl
roll
cmp
sbb
ret
xchg
in
fwait
pop
dec
mov
dec
cmc
jg
mov
aaa
test
pop
enter
mov
lods
adc
jecxz
pop
mov
dec
lcall
lcall
pop
adc
in
mov
int3
push
jne
shlb
sub
sub
mov
inc
js
hlt
lods
jl
in
push
and
xor
or
and
pop
xchg
jb
push
pushf
shll
xor
fcompl
mov
mov
add
mov
push
clc
and
rcrb
dec
lods
mov
sub
ja
inc
repz
inc
and
fstps
outsl
pop
push
mov
cmp
lds
mov
pop
hlt
pop
outsb
and
data16
sub
push
repnz
cmp
mov
mov
and
jnp
insb
or
push
fcom
ss
out
enter
mov
pushf
mov
push
es
push
imul
add
test
in
movsb
inc
jp
push
insb
lahf
add
test
mov
pop
cld
dec
inc
sub
pop
negl
jne
push
outsl
cmc
lret
mov
je
pushf
mov
xchg
lcall
pop
out
addr16
mov
pop
fnstcw
cmp
mov
mov
aad
fiadds
sub
mov
sub
and
push
mov
dec
cmp
mov
out
in
int3
clc
or
bound
sbb
lods
cwtl
sbb
jl
dec
sbb
sub
adc
push
lods
xorb
mov
cs
and
push
shrl
pop
mov
xchg
icebp
scas
rcrb
cwtl
lds
pop
jg
cmc
lock
jns
inc
push
fildll
fnstsw
sub
and
xchg
pop
xchg
xchg
pop
sbbb
push
mov
mov
or
in
cmp
adc
pop
xor
xchg
push
stos
adc
mov
lahf
xor
or
mov
mov
pop
pop
mov
mov
xor
or
pop
mov
in
dec
notb
jne
and
les
dec
mov
mov
cmp
int
jnp
and
out
fidivrs
stos
sub
mov
cmp
mov
shlb
enter
out
lods
andb
push
test
and
xchg
insb
bound
push
fldenv
out
mov
jp
xchg
arpl
aam
cmp
add
mov
cwtl
lods
cmc
dec
insb
pop
pop
cmp
mov
jp
lods
push
in
cmc
pop
dec
fsubs
scas
or
clc
nop
test
stos
lea
pushf
sbb
sbb
inc
pop
in
pop
pop
mov
dec
jo
jp
outsl
sahf
aas
fildl
jne
cmp
xor
mov
addb
mov
sbb
add
jg
pop
sbb
fwait
push
mov
xchg
insl
cwtl
jecxz
cmp
pushf
jge
les
adc
ffreep
pop
or
jo
lock
inc
sbb
test
mov
and
adc
xchg
sub
and
cmp
push
movsl
xor
jno
mov
fsubl
push
in
and
andl
push
or
fdivrs
and
pop
xchg
pop
mov
inc
fwait
insl
mov
je
popf
mov
xchg
inc
icebp
idivb
aad
dec
pop
and
adc
jge
int3
cld
mov
fistpl
mov
mov
adc
cli
dec
mov
hlt
pop
imul
xor
jg
ficompl
inc
dec
inc
pushf
jb
adc
xchg
inc
clc
adc
sbb
cltd
imul
push
ja
hlt
mov
push
int
lods
cmp
add
insl
cwtl
push
divb
aaa
pop
sub
pushf
sahf
mov
pop
scas
cmpsl
push
addr16
cwtl
insl
or
pop
cmp
mov
test
pusha
lcall
xchg
mov
and
dec
inc
mov
pop
les
xchg
mov
lods
pop
cmp
sub
inc
call
aad
ljmp
movsl
adc
mov
jne
mov
sub
sarb
or
push
sbb
pop
les
ret
jg
mov
push
scas
sbb
pop
pushf
and
mov
or
xor
jp
pop
sub
pop
test
mov
push
scas
sub
jne
dec
mov
loopne
lods
cmp
xor
bound
ja
jge
les
dec
das
mov
lock
sbb
cltd
push
scas
mov
xor
and
pop
cmp
cwtl
lods
mov
mov
in
pop
add
xchg
sub
mov
stos
imul
bound
aam
cmc
jmp
xor
sar
mov
ljmp
or
adc
rclb
pop
push
pop
push
pop
addb
cmp
sti
mov
incb
lret
int3
pop
dec
sbb
pop
stos
mov
in
pop
insl
addr16
sbb
pop
add
pop
int3
pop
xchg
jp
mov
or
popa
in
pop
pop
mov
hlt
push
in
pop
xor
lods
movsb
xor
xchg
fwait
test
mov
and
insl
adc
pop
sub
jb
sub
movsl
xor
adc
lahf
in
insb
outsb
fldpi
mov
bound
mov
pop
adc
add
rorl
scas
outsb
outsl
pop
lret
popa
xor
in
sbb
imul
bound
xchg
lahf
push
pop
in
sub
push
xchg
cltd
imul
and
lock
mov
fdivl
rol
insl
out
xor
cmp
aad
dec
xchg
ficompl
lds
cmp
in
push
cld
mov
das
pop
pushf
dec
int3
mov
cs
lods
dec
in
jbe
test
stos
mull
fnstcw
sti
mov
inc
pop
xchg
or
sbbl
or
jb
pop
ss
icebp
mov
xlat
jge
dec
mov
sbb
push
out
cmp
pop
xabort
stc
sbb
and
pop
mov
pop
jl
push
jno
cmp
jge
pusha
pop
fdivrl
push
sbb
cmp
pop
cmp
adc
jno
push
xchg
push
in
inc
jl
sub
daa
mov
lods
pop
xchg
push
ret
mov
loopne
push
sub
pop
inc
hlt
push
or
lcall
in
cmp
out
adc
cmpsb
rolb
mov
shrb
add
dec
pushf
outsl
fsubs
sub
pop
movsb
jl
ret
inc
out
cmp
mov
pop
cmc
pop
movsb
sbb
push
insb
pop
scas
stc
ja
sbb
cmp
int3
pop
fldenv
sub
adc
stos
mov
js
pop
test
pop
sbb
nop
dec
in
push
test
mov
sub
jecxz
lds
gs
pop
mov
adc
fcmovnbe
mov
scas
test
sbb
xchg
pop
add
pushl
aad
dec
fcompl
int3
dec
js
adc
lahf
loop
dec
cwtl
push
loope
mov
nop
pop
cld
or
pop
clc
jns
call
repz
mov
lock
or
dec
lahf
insb
aaa
or
fstp
pop
lock
insl
mov
call
pop
pop
movsl
jp
mov
jns
mov
icebp
pop
aas
pushf
push
and
out
xlat
inc
or
dec
jne
imulb
mov
fistl
aam
cmp
or
sub
pop
jo
aad
loop
fcoms
sub
push
jbe
jae
out
lcall
stos
nop
data16
insb
jb
das
loop
sbb
jns
adc
mov
mov
pop
pop
mov
and
xor
push
jnp
sbb
insb
in
mov
repz
or
dec
lea
into
repz
add
push
jmp
test
sbb
mov
and
cmp
mov
in
int
scas
daa
mov
jne
aad
mov
cli
clc
icebp
pop
pop
sub
scas
repz
mov
cmp
cltd
in
mov
push
lcall
inc
pop
pop
xchg
sbbl
inc
xchg
outsl
aam
dec
adc
pop
add
add
fstps
pop
inc
in
push
push
pop
inc
jns
pop
add
mov
cmp
movsb
in
adc
or
xchg
cmpsb
lea
bound
clc
sub
aam
adc
scas
out
out
and
lods
sbb
loopne
sub
mov
shll
sbb
pop
ss
adc
fisttpll
pop
insb
sbb
or
scas
pop
xchg
pop
and
sub
gs
add
push
jle
fadd
xchg
inc
and
outsl
pop
fidivrl
adc
lahf
movsb
xor
cmp
pop
outsb
inc
jmp
mov
xchg
jnp
mov
xlat
int3
pop
lret
add
in
insb
pop
pusha
ja
jge
scas
outsb
adc
adc
test
adc
stc
add
dec
outsb
lods
popa
mov
test
lods
daa
mov
pop
nop
fidivl
mov
insb
inc
xor
sbb
ficompl
shrb
jle
pop
ja
cmc
popf
mov
insl
xor
daa
pop
xchg
insb
lret
push
mov
cwtl
lea
dec
pop
lds
mov
push
test
xor
test
je
mov
out
and
cmpsl
mov
popa
gs
xor
aad
push
lcall
test
mov
icebp
cld
rclb
add
pop
jl
mov
mov
push
lods
fists
sarb
call
dec
std
dec
pop
jecxz
cmp
cmpb
xchg
pop
or
adc
adc
outsb
lret
xchg
scas
loope
xchg
hlt
add
mov
pop
mov
add
jns
pop
push
dec
movsb
push
and
mov
or
sbbb
cmp
dec
pop
je
jne
adc
sub
dec
mov
repz
cltd
push
mov
mov
and
sbb
mov
pop
pop
mov
jbe
pop
pop
sbb
jne
stos
xchg
add
dec
jbe
jnp
sbb
ja
lods
or
mov
inc
xor
mov
mov
fistl
mov
lret
xchg
sub
or
in
fldz
and
int3
fistpl
mov
insb
cld
mov
in
pop
lods
and
nop
lock
jge
test
add
int
xor
mov
movsl
pop
lock
cmp
shll
pop
push
pop
sti
lcall
aad
lds
pop
push
xor
adc
add
data16
in
out
insl
loop
mov
leave
fwait
lock
test
lea
cmp
push
inc
cwtl
fsubr
test
mov
testl
dec
popa
sahf
xchg
lea
mov
xchg
pop
lahf
mov
pop
pusha
data16
sbb
repz
or
push
xchg
sbb
mov
shl
jb
or
pop
inc
cld
jne
push
mov
push
test
push
pop
xor
insb
mov
mov
sub
jge
xchg
cld
push
es
mov
andl
test
ret
push
adc
xor
or
pop
fstps
pop
sub
adc
and
push
pop
cmp
pop
mov
lods
adc
inc
lds
pop
pop
sbb
xchg
insl
add
sbb
arpl
pop
inc
pop
add
inc
cmpsl
mov
cld
cmp
mov
add
jne
in
push
movsl
push
pop
xor
fwait
sbb
loop
xchg
lcall
cwtl
dec
add
fs
insl
cmp
lcall
inc
je
aaa
adc
pop
or
push
xchg
nop
mov
dec
sbbb
mov
inc
movsb
aam
pop
adc
ja
into
mov
add
or
mov
sbb
in
pop
lock
jo
pushf
or
and
mov
or
xor
je
ja
xchg
andb
pop
rclb
mov
inc
mov
mov
imul
inc
mov
dec
hlt
ljmp
xor
mov
cmp
test
xorb
iret
call
test
mov
insl
gs
jb
inc
pop
inc
fwait
pop
mov
pop
mov
lods
bound
fmull
and
std
hlt
addr16
mov
loope
sbb
sbb
stos
mov
push
pop
dec
nop
push
add
mov
mov
sbb
fstps
mov
xor
mov
cltd
adc
add
jbe
fimuls
and
xor
movsl
pop
cwtl
pop
jmp
mov
je
or
dec
pop
ja
dec
int3
ljmp
xor
jne
and
sbb
sbb
sbb
arpl
test
xchg
sbb
cltd
add
je
std
jb
int
sahf
sbbb
jns
jb
inc
mov
movsb
stc
in
xchg
gs
xchg
sub
xchg
push
xchg
mov
scas
movsb
cli
filds
fiaddl
mov
sbb
dec
sahf
jb
je
int
cmc
dec
mov
sbb
sbb
fnsave
dec
cmp
mov
gs
call
mov
and
sub
sbb
pop
mov
aad
lahf
sub
repnz
cmp
sti
mov
jb
cmc
sbb
jbe
mov
notb
ja
scas
insb
fnstenv
pop
movsl
jmp
and
sub
pop
dec
mov
or
cmp
xchg
cld
jns
or
je
mov
add
imul
pushf
popf
gs
pop
lcall
lods
pop
jo
lret
ret
mov
dec
in
int
xchg
adc
cmc
aas
in
push
push
mov
push
movsb
sbb
xchg
pop
test
aaa
sbb
pop
jl
mov
jo
lret
push
pop
fists
in
test
insb
clc
adc
int
jae
in
pop
cmp
jbe
pusha
sbbb
xlat
lea
xor
pushf
pop
adc
mov
stos
lcall
adc
pop
dec
mov
mov
sbb
in
cmp
sub
popf
test
mov
data16
stos
mov
inc
lods
mov
enter
and
pop
push
es
call
jecxz
jmp
sbb
push
popa
mov
mov
pop
lcall
mov
cmp
mov
mov
pop
ljmp
lods
mov
int
aam
pop
mov
test
popf
mov
lcall
cmpsb
add
outsb
dec
adc
js
cmp
jl
int3
loope
add
jle
insb
cmp
int
pop
fildll
ljmp
sbb
popl
pop
cmp
jl
jmp
into
pop
stos
dec
inc
popa
mov
ret
xchg
shlb
cld
pop
adc
int3
repnz
pusha
js
insb
sub
cmc
or
inc
lock
clc
in
negl
fmull
jns
or
xor
or
mov
pop
and
pop
jne
add
cmp
ficompl
sbb
bound
popf
mov
or
lods
sbb
mov
mov
in
push
xchg
pop
fistl
inc
push
hlt
insl
sub
pop
pop
std
aam
in
ljmp
or
aas
sbb
mov
mov
inc
cmp
negb
sub
xlat
mov
gs
xchg
mov
dec
fistpll
sub
jge
xor
daa
or
adc
push
filds
xchg
mov
loop
dec
xchg
sti
cli
xor
aam
pop
inc
lahf
push
push
xchg
push
push
insl
andb
icebp
rorl
jmp
scas
adc
mov
dec
inc
dec
pop
xchg
loopne
fwait
cld
inc
pop
dec
cmpsb
push
add
mov
sbb
pop
movsb
sbb
rclb
roll
js
mov
fistpl
shlb
xchg
jge
lods
pushf
pop
lods
pop
push
push
out
cmp
mov
mov
xor
sahf
inc
jecxz
mov
into
push
hlt
jbe
rclb
pop
stc
fmul
adc
push
pop
aaa
cmp
inc
cld
mov
ret
ja
in
pop
xor
outsb
sbb
ficoml
pop
sub
in
test
jne
jmp
jbe
mov
pop
inc
hlt
int
outsl
popa
movsl
add
pop
inc
stos
pop
and
mov
loope
xor
ja
cmp
cmp
dec
cli
test
push
xchg
or
pop
push
ja
cltd
popf
push
cmp
arpl
test
cld
je
lock
jne
aam
and
push
call
pop
cmp
pop
pop
ret
push
pop
test
inc
cmpsb
loopne
mov
mov
push
aad
fdivs
pop
popa
stos
sti
inc
mov
imul
mov
frstpm(287
fidivl
pop
mov
sbb
cmp
pop
pop
pop
fnsave
pushf
cmpb
sbb
jne
jb
les
lcall
hlt
fsubrl
mov
xchg
mov
cmp
test
popf
sbb
cld
stc
xchg
adc
daa
aas
pusha
mov
adc
mov
mov
mov
mov
pop
push
movsl
dec
sub
lahf
les
fcmove
pop
or
mov
aam
jbe
sub
xchg
int
out
pop
add
cmp
int3
rolb
arpl
cmp
pop
std
jo
mov
xor
push
mov
jno
mov
or
lock
sbb
fcomps
stos
insl
dec
adc
nop
cmpsl
xor
movsl
imul
lret
jo
sbb
and
dec
mov
xor
in
ja
cmp
cli
sahf
sbb
in
xchg
jo
pusha
mov
push
add
xchg
add
testl
push
pop
or
fnstcw
fcoml
test
mov
mov
jne
aaa
cmp
pop
inc
pop
push
sbb
sub
pop
cmp
pushf
int
mov
jns
mov
xor
xlat
out
test
enter
pusha
push
pop
xor
push
pop
xchg
sbb
out
mov
cmc
pop
pushf
push
dec
push
adc
dec
call
and
cwtl
sbb
adc
jbe
out
leave
sahf
or
pop
add
xchg
xor
ja
push
push
pop
shlb
jge
sbb
ds
rcrl
dec
insb
insl
lds
gs
xlat
push
mov
xchg
data16
mov
cmp
enter
sub
in
pop
adcb
hlt
cltd
dec
cmp
mov
pusha
mov
pop
das
fcomip
fxch
dec
xor
mov
fucompp
movsb
scas
pushf
and
in
pop
cmpsb
enter
fsts
rolb
shlb
inc
mov
pop
fdiv
mov
aam
cmp
out
xor
fistl
pop
pushf
je
xor
int
ror
cmp
or
dec
fsubl
push
in
aaa
jnp
or
adc
xchg
jg
ja
test
xlat
sbb
aam
ret
ret
lahf
sbb
mov
insb
jl
lret
push
sub
xchg
jb
dec
movsl
movb
pop
mov
hlt
xchg
lods
cs
xchg
test
stc
cmc
pop
aam
adc
insb
in
push
cmp
dec
pop
cltd
add
mov
mov
jecxz
inc
ret
push
push
ss
sti
imul
insb
dec
in
jnp
mov
cmp
pop
adc
and
ret
mov
or
mov
push
mov
and
xchg
mov
inc
add
shrb
pop
pop
add
or
movsb
adc
xchg
enter
jne
sbb
jge
jns
pushf
lods
not
enter
int3
fdivl
pop
lods
sahf
pop
adc
push
orb
lods
push
popf
lds
pop
scas
aad
sbb
cmp
push
dec
mov
pop
je
cmp
pop
pop
cmp
cmp
pop
popa
mov
std
push
and
lahf
hlt
pop
shl
call
cmp
mov
pop
ja
cmpsl
push
fcomi
pop
pop
pop
mov
rol
and
pop
mov
add
jmp
push
pop
popf
imul
fxtract
ret
orb
dec
imul
insl
sbb
pop
add
je
pop
scas
dec
aam
pusha
xor
mov
or
xchg
pop
lahf
push
push
mov
or
fbld
cld
jl
jne
xchg
les
ss
xchg
lods
pushf
out
mov
movsl
fsts
je
jecxz
popa
mov
pop
ja
aaa
inc
sub
fsub
push
sbb
pop
and
scas
pop
dec
pop
and
shr
mov
and
lret
pop
leave
pop
mov
pop
pop
cmp
push
jb
out
aad
jne
xorb
mov
adc
lcall
pushf
bound
lock
pop
aaa
mov
sbb
mov
lea
add
pop
mov
mov
loope
mov
mov
add
aad
xchg
addr16
pop
fadd
call
jmp
imul
cmc
lea
imul
cmp
inc
mov
lods
loope
fsubrl
sbb
aam
pop
in
mov
sbb
cli
out
ja
in
dec
xlat
stc
cltd
sub
cld
imul
xor
jbe
jns
cmp
ljmp
imul
sbb
lods
mov
pusha
movsl
in
adc
or
out
mov
movsb
pop
lock
push
add
pop
cmp
and
mov
mov
cmp
xlat
inc
adc
cmc
adc
pop
jecxz
sub
pop
lahf
or
xchg
add
sbb
pop
fdivs
nop
cmc
xchg
inc
movsl
jb
ja
jns
gs
pop
pop
xchg
dec
int
inc
loope
aam
cld
cmp
xor
sub
outsb
adc
lods
sbb
sar
imul
test
jl
aad
push
sbb
mov
inc
mov
sub
push
ja
dec
imul
lret
lods
push
sahf
pop
push
jne
add
ret
mov
xor
icebp
cmp
pop
pushf
xorb
lea
pusha
pop
pop
incl
imulb
repz
mov
cmp
or
pop
sarl
xor
movsl
sbb
cmp
sbb
add
pop
outsb
mov
dec
jne
sbb
repnz
lea
pop
in
mov
movsb
pop
xchg
cmp
cmp
scas
repz
data16
daa
add
out
xchg
je
aaa
sarb
push
dec
push
fdivs
cmp
test
mov
xchg
fdiv
pushf
pop
add
imul
lods
fstps
or
gs
mov
cmp
fcmovu
notb
pop
pop
add
fldt
sub
pop
sub
ror
jne
inc
pop
mov
xor
inc
fists
dec
pop
mov
sti
in
mov
add
add
pop
leave
in
rcrb
std
pop
jg
jmp
mov
and
add
mov
pop
push
sub
jl
lods
pop
pop
xor
icebp
inc
mov
jae
mov
pop
aad
mov
int
mov
jnp
add
jmp
aaa
pop
xor
enter
hlt
mov
pop
stos
call
dec
incl
xor
xor
lea
pop
out
xchg
nop
aam
scas
subl
mov
out
stos
mov
pop
push
xor
rorb
sbb
repnz
bound
mov
dec
int3
mov
pop
pop
sbb
push
xor
inc
lret
pusha
xchg
stos
mov
push
testb
ret
adc
call
stos
pop
xor
dec
cmp
es
jecxz
jge
cld
sub
adc
pop
sti
lods
mov
mov
pop
sbb
mov
int
xchg
mov
out
fcom
sbb
xchg
scas
test
jno
xlat
xchg
ja
rcrl
jecxz
dec
mov
test
pop
jns
jnp
pop
in
std
cmp
mov
or
mov
insl
push
xlat
mov
xchg
jno
sbb
ja
ljmp
mov
lods
jl
negl
fcomps
aam
xchg
dec
add
pop
cmp
data16
lret
pop
pop
popf
sbb
jg
pushf
mov
aam
idivl
mov
outsb
mov
in
and
daa
adc
inc
outsl
xchg
lret
ficompl
xlat
jmp
shrb
cmpsb
jg
flds
push
pop
push
sbb
mov
rcrl
pop
popf
adc
jecxz
aam
pop
pushf
fsub
sahf
dec
outsb
mov
fildl
lock
mov
cmp
aam
lds
test
inc
jnp
xor
popa
dec
push
je
add
xchg
adc
jns
inc
insb
push
xchg
jg
pop
aaa
fadd
hlt
in
xchg
fildll
pop
xor
movsb
pop
aad
sarb
pop
push
inc
lods
inc
fnstsw
lds
nop
pop
inc
dec
jno
mov
mov
pushf
push
pop
shll
add
cmp
in
dec
call
xor
fsubr
pop
mov
sbb
iret
fistps
test
out
scas
xor
enter
inc
or
jae
pop
test
stc
cmp
hlt
pop
sub
lods
mov
adc
xchg
ret
jb
mov
je
dec
sub
pop
or
pusha
popa
push
pop
mov
jne
pop
jecxz
inc
mov
inc
pop
jecxz
push
sub
xchg
fs
add
sbb
xor
dec
push
pop
dec
xchg
movsb
sbbl
movsl
jl
pop
int3
dec
imul
cmp
aaa
mov
mov
push
mov
mov
pop
adc
fucomi
mov
movsl
dec
movsb
pop
pop
bound
pop
cmp
cmpsl
xchg
jb
jecxz
or
mov
movsb
flds
popf
cmp
fiaddl
pop
imul
add
mov
test
pop
mov
or
cltd
sub
int
mov
adcl
lret
push
sbb
sub
pushw
cmp
sub
pop
test
dec
test
add
js
les
lcall
mov
ja
mov
add
loope
add
sbb
jno
cltd
or
pop
nop
hlt
cmp
jnp
or
insl
int3
and
sub
dec
mov
test
ficoml
mov
mov
mov
cmp
arpl
pop
movsb
or
jbe
test
cs
xchg
int3
lea
pop
and
dec
std
add
xchg
pop
jge
cmpb
mov
sbb
hlt
pop
or
xchg
xor
pop
in
push
push
mov
cmp
inc
pop
ja
sub
in
push
imul
xor
icebp
je
xchg
fwait
dec
pop
mov
add
push
xor
adc
xchg
popf
or
mov
cltd
or
lahf
pop
xchg
clc
jbe
cmp
cld
and
stos
cmp
popa
in
mov
subl
pusha
mov
push
cwtl
mov
xor
jno
in
js
jecxz
movsl
push
into
call
jge
xor
push
jp
sbb
cltd
movsb
insb
loopne
jge
dec
pop
xchg
rolb
push
pop
push
lock
loop
movsb
add
add
push
jecxz
pop
add
and
pop
pop
movsb
dec
nop
mov
scas
xor
cmp
pop
push
cwtl
cli
sub
lock
repnz
sbb
mov
mov
ret
cmp
fwait
lcall
jl
jb
mov
repz
or
dec
push
fstpt
pop
pop
inc
mov
pop
mov
or
sub
cwtl
inc
pop
sbb
and
pusha
pop
or
jge
push
sahf
sub
sbb
enter
jg
pop
pop
cltd
stos
cmpsl
push
inc
inc
pusha
cltd
mov
pop
lea
insl
push
ss
stos
xchg
pop
pushf
pop
lcall
int3
lods
sub
push
hlt
test
sbb
mov
xchg
les
and
cmp
xchg
jb
mov
pop
mov
push
cmp
cmp
mov
pop
insb
mov
xor
mov
lea
repz
add
pop
notl
pop
xor
jp
cmp
aam
xchg
sahf
sbb
jle
insl
ret
es
cld
xchg
and
inc
fcoms
pop
sbb
andl
cmp
pop
dec
cld
pop
out
and
lock
jmp
push
jbe
pusha
fisubs
out
push
xchg
or
orb
pop
and
sbb
int3
nop
jl
ficoml
pop
sub
jne
jge
push
inc
xchg
mov
jge
dec
pop
or
pop
and
ds
jo
insb
jmp
pop
lea
push
mov
sbb
cmpsb
adc
lahf
fxch
aaa
inc
pop
aas
cmc
std
cltd
pushf
pop
mov
ss
mov
and
rcl
pop
lea
popf
ljmp
cmp
xchg
adc
sub
mov
aad
lea
fdivrs
mov
and
in
xor
cmp
pop
imul
aam
je
mov
fists
in
sarl
push
mov
push
push
imul
shrl
cwtl
mov
adc
cmp
aad
in
in
xchg
xor
mov
lret
xchg
sar
and
pop
push
pop
mov
jne
test
pop
mov
addr16
or
mov
adc
popf
lods
jle
pop
aad
or
pop
cmpsb
shl
cmp
mov
or
lods
cwtl
push
sbb
adc
mov
or
pop
cld
and
imul
outsl
cmpb
ficompl
jg
loop
in
inc
jne
mov
fs
inc
cmp
mov
int
mov
nop
push
test
mov
cmp
pop
movsb
mov
in
lods
int
fmull
fsubrs
or
iret
xchg
cli
mov
and
pushf
or
cmp
cmc
xorl
mov
mov
jl
arpl
pop
mov
cld
scas
xchg
adc
and
stos
cmp
xchg
js
jmp
pop
and
mov
popa
je
loope
lods
xchg
and
filds
std
nop
rorb
hlt
aam
stc
pop
dec
jnp
pop
sbb
lds
dec
or
lahf
int3
sub
mov
cwtl
push
pusha
in
loope
out
cmp
dec
inc
ret
cmp
insl
ds
or
xchg
pop
pop
int
into
cltd
mov
ja
mov
lods
mov
or
and
xchg
iret
xor
fcomip
adc
imul
shl
fcoms
fidivrl
pop
inc
je
lahf
pop
cmp
fbld
mov
dec
int3
sub
cwtl
fscale
mov
aas
xor
pop
pop
jns
sbb
call
jp
pop
mov
pushf
out
lret
sti
pusha
xchg
fs
add
mov
sahf
sub
pop
lods
movsb
lods
pop
mov
ss
shl
aad
and
sbb
in
cmpsb
int
pop
dec
push
loop
jae
jl
pop
test
ss
jle
stos
dec
xor
pop
mov
dec
adc
movsb
in
pop
pop
sbb
repnz
pop
cli
not
cmpsb
sub
insb
mov
sub
jecxz
pop
lock
lods
call
fnop
xchg
pop
insb
pop
fmuls
rolb
lods
enter
subb
xlat
mov
std
sbb
sub
cmp
cld
hlt
cmp
jge
aam
xchg
inc
fcoms
les
call
cmp
stos
xchg
pop
cmp
dec
jae
dec
xor
adc
leave
arpl
int3
xor
flds
fwait
ss
test
or
adc
pop
outsl
push
inc
adc
pop
mov
cmp
inc
in
push
add
ds
lcall
and
stos
mov
and
mov
xor
adc
pop
repz
sbb
xor
add
cs
lea
sub
pop
mov
push
pop
push
cld
ja
lods
hlt
jae
pop
shll
push
dec
js
pop
mov
xor
arpl
xchg
stos
dec
add
xchg
les
dec
arpl
js
cmpsb
mov
mov
push
loop
pop
fdivs
cmp
orb
or
sub
pop
fcompl
push
mov
pop
ja
mov
movsl
or
jne
pop
mov
test
scas
mov
dec
mov
sbb
jae
ja
sbb
xchg
mov
fcoml
mov
jne
add
dec
ja
cmpsb
xchg
outsl
or
dec
pop
int3
in
and
sbbb
cmp
les
adc
scas
and
pop
repz
pop
mov
pushl
js
fmuls
pop
jne
enter
icebp
cld
scas
xchg
pop
pushw
xchg
movsl
out
mov
push
pop
inc
rcrb
in
xor
pusha
pop
push
out
scas
dec
mov
arpl
push
pop
inc
sbb
in
je
sbb
scas
fsubrp
xchg
mov
push
pusha
pop
and
pop
in
or
sbb
cmp
hlt
xchg
inc
cmp
clc
inc
pop
pop
int3
adc
jns
cltd
and
inc
jno
mov
jecxz
adc
test
and
test
lea
shl
xlat
enter
insl
push
and
mov
and
in
inc
lret
in
les
xchg
scas
lea
mov
jnp
ljmp
and
pop
dec
sub
push
fwait
insl
lcall
inc
cmp
and
pop
mov
mov
xchg
jbe
push
pop
std
loopne
out
sub
pop
addr16
jg
adc
jb
add
jge
cli
sub
jl
pop
jecxz
cmp
mov
pop
sub
inc
and
cmp
lahf
cli
repz
repz
jmp
sub
int3
inc
enter
xchg
in
jae
sbb
dec
aad
rcll
sub
std
insb
pop
jne
dec
lret
cmp
outsb
xor
lods
push
jp
push
xor
mov
int3
insb
pop
fadds
pop
in
mov
adc
dec
add
insl
pusha
dec
pop
adcb
pop
or
in
pop
out
fcomip
mov
stos
xchg
bound
pop
sub
pop
testb
xchg
inc
stc
mov
insl
pop
jae
mov
lahf
jl
pushf
mov
xchg
xor
sbb
pop
jne
test
pop
mov
and
push
shll
pop
pop
sbb
arpl
pop
in
or
push
pusha
push
mov
insl
test
xchg
scas
das
xor
test
scas
lahf
inc
in
xchg
mov
lret
and
inc
sbb
cmp
pop
outsl
jb
xchg
sub
push
jbe
adc
int3
bound
fdivrs
arpl
stos
mov
pop
popa
call
inc
adc
scas
and
lret
pop
js
xchg
scas
sbb
pop
mov
pusha
lods
mov
in
pop
lcall
sbb
in
sbb
pop
in
push
mov
and
add
push
fmull
push
sar
jb
mov
jp
pop
fildll
loop
inc
mov
push
fnstsw
pop
out
int
test
insb
lods
das
pop
adc
in
push
pushf
cmp
mov
stc
xchg
int3
sbb
pop
sbb
test
pop
movsb
or
lea
popl
dec
lds
inc
add
lods
pop
fnstsw
cmp
mov
adc
ds
mov
dec
adc
scas
cld
mov
insb
pop
ljmp
pop
pop
xchg
or
push
pop
hlt
push
out
mov
negb
mov
ret
mov
hlt
lds
pushf
fisttpll
pop
sub
mov
pop
shll
rcrl
mov
and
mov
popf
adc
pop
test
sub
pop
sbb
out
subl
mov
xor
insl
xabort
lods
fdivrs
movsb
pop
push
cmp
ja
jl
pop
lahf
mov
icebp
bound
mov
pop
out
shl
in
aaa
mov
xor
out
fsubl
jb
scas
sahf
icebp
jl
into
sbb
sbb
imul
xor
mov
pop
cmc
arpl
mov
pop
pop
jmp
adc
fmuls
xchg
adcb
mov
inc
push
cmpsl
mov
pop
cmp
jno
xchg
pop
cmpsb
xchg
inc
test
pop
push
fstl
movsb
scas
int3
je
lret
pop
add
jl
pop
mov
pop
dec
out
pop
mov
icebp
lea
insl
xor
testb
dec
sbb
inc
lea
jnp
pop
and
jecxz
js
sahf
mov
mov
sbb
cwtl
stos
push
xchg
add
in
or
jbe
je
push
dec
pop
xor
dec
and
ja
fsub
sarb
sbb
lds
adc
xchg
xchg
push
loope
not
fsts
int3
insl
pop
jb
cltd
mov
aaa
icebp
popf
xchg
inc
movsl
sbb
mov
hlt
lret
pop
jbe
and
enter
inc
adc
aad
lret
addr16
int
lahf
inc
jno
es
lret
clc
cmp
cltd
dec
data16
pop
fisubrs
mov
movsl
push
insb
or
pop
popa
and
pop
je
cmpsb
mov
push
call
movsb
mov
imul
fwait
les
pop
lea
test
push
pop
das
lahf
addl
cmp
dec
cltd
test
mov
xor
cltd
mov
mov
mov
sub
data16
pop
mov
mov
mov
sub
stos
test
lods
pop
lds
push
xchg
add
jns
xor
pop
cwtl
jp
cmp
mov
pop
or
pushf
cli
lahf
fcoml
jl
fcomp
dec
jo
inc
push
cltd
test
mov
mov
pushf
in
data16
pop
fdivr
sbb
pop
mov
hlt
das
pop
mov
test
pop
sub
pop
mov
and
mov
inc
mov
push
pop
dec
pop
jp
ret
add
push
lahf
xor
push
in
pop
popl
mov
pop
cmp
in
mov
pushf
pop
adc
pop
push
nop
xchg
cmpsl
insb
fstpl
jnp
inc
mov
cltd
mov
sbb
cmp
dec
aas
movl
fistps
adc
lods
dec
inc
dec
scas
fisubs
lahf
mov
pop
add
sub
pop
mov
add
fcom
mov
mov
pop
pusha
pop
adc
pop
cwtl
push
pop
pop
inc
mov
push
cmp
pop
mov
popa
xor
loopne
test
out
push
dec
inc
cmp
pop
in
fmul
mov
lea
jecxz
cs
lret
and
mov
mov
dec
or
jecxz
jnp
cli
inc
jne
push
in
loopne
pop
std
pushf
or
pop
ret
jle
xor
pop
push
movl
pop
in
inc
push
sub
clc
pop
mov
pop
mov
dec
popf
pop
pushaw
cld
stos
xor
and
js
jb
mov
mov
lods
sub
out
jle
pusha
push
pop
dec
ret
hlt
pop
shl
cmp
aam
std
pop
sub
lods
pop
pop
adc
inc
sbb
pop
push
add
add
mov
xchg
xchg
jne
hlt
pop
adc
lret
out
movl
mov
pop
lods
and
or
mov
xchg
adc
ret
push
pop
mov
mov
ss
fsubrs
mov
lods
arpl
pop
or
push
xor
in
inc
imul
inc
aas
push
aaa
in
js
mov
pop
push
int3
xor
stos
mov
pop
and
mov
ja
jecxz
pushf
jne
dec
jnp
cmp
sub
pop
inc
repz
lds
fistpl
xchg
aam
sbb
xchg
leave
out
in
clc
adc
pop
rcl
cmp
push
and
pop
les
cld
pop
pop
sub
popf
out
cmp
js
push
jge
fidivl
daa
pop
mov
push
lcall
pop
xor
adcb
sbb
lods
js,pt
push
sbb
aam
mov
adc
xor
jge
dec
fldcw
inc
push
cmp
nop
scas
sbb
movsl
movsb
fidivs
insb
aaa
pop
fcomps
pop
xor
jns
mov
xor
ss
jae
mov
movsb
aas
mov
pop
sbb
sahf
lret
jle
cmpsl
out
fcompl
leave
mov
inc
xor
cld
pop
mov
jnp
jge
add
nop
adc
test
mov
mov
lahf
mov
cmp
jne
and
fcompl
call
pop
mov
jne
fists
jl
push
stos
mov
adc
out
mov
jp
pop
push
cmp
and
pop
and
inc
lock
mov
push
mov
mov
cmp
sbb
aas
mov
enter
sbb
mov
les
fscale
xor
sbb
sub
out
push
hlt
dec
pop
insl
lcall
dec
jae
pop
sbb
adc
cmp
sbb
dec
mov
lds
pop
inc
test
push
sub
je
jns
into
adc
xchg
ss
test
dec
cmp
push
fnsave
cs
mov
mov
sub
pop
pop
mov
loop
pop
aaa
xchg
add
pop
je
xchg
sbb
in
pop
sbb
lcall
lods
js
jbe
dec
out
popa
sub
mov
jl
pushf
ljmp
sbb
sub
pop
cmp
mov
leave
pop
lahf
push
sbb
outsb
and
std
jge
dec
push
jnp
inc
sbb
mov
pop
xchg
push
stc
movsb
jne
mov
adcl
aas
add
fbstp
in
popa
adc
sub
cmp
in
loop
pop
fcom
data16
scas
jecxz
out
jg
inc
js
jecxz
pop
push
pop
pushl
jnp
lret
pop
hlt
cmpsl
cld
sbb
mov
je
popf
movsl
loope
clc
adc
gs
mov
sub
push
mov
jl
jns
pop
push
mov
shrb
inc
jnp
cld
pop
jb
jmp
cmpsb
sub
pop
pop
es
jge
xor
pop
add
cmp
pop
pop
sbb
insl
pop
push
int
cltd
gs
push
aas
aam
dec
pop
or
cmp
je
out
sub
dec
mov
out
repnz
pop
pushf
clc
xor
nop
icebp
lods
lods
pop
adc
in
dec
mov
mov
cmp
inc
and
popf
sbbl
in
lds
addr16
jns
loop
scas
xor
test
sahf
popf
fsts
sub
insb
push
mov
adc
add
shlb
add
pop
arpl
xlat
shll
inc
cmc
aaa
inc
mov
loop
cmp
movsl
fistpl
lods
xchg
sbb
xor
xchg
xchg
mov
les
mov
lods
add
mov
fistps
clc
je
push
sub
jl
or
mov
mov
push
mov
sub
lods
mov
pop
pop
andl
sbb
mov
rcrb
push
sub
dec
xchg
jae
jl
mov
push
nop
gs
sbb
popa
mov
xchg
les
push
push
add
or
pop
daa
xor
cmp
enter
cmp
sbb
in
pop
jno
sub
dec
mov
mov
xor
inc
lret
pop
or
je
daa
push
pop
sub
popf
or
cmp
aaa
sbb
gs
sbb
loop
or
fsubs
mov
xchg
sbb
inc
dec
pop
push
pop
xchg
mov
inc
lahf
xlat
mov
int3
dec
add
mov
test
lods
idivb
pop
nop
fld
cmp
lds
and
in
dec
adc
mov
push
jbe
cmp
or
adc
mov
push
mov
jbe
mov
adc
ja
out
mov
fadd
stos
pushf
test
pop
int3
inc
dec
or
in
jg
dec
inc
pop
jo
or
adc
pop
or
xchg
int
pop
jno
inc
and
ja
cmp
pop
mov
push
insb
pop
dec
mov
cmp
or
pop
jl
cwtl
adc
xor
add
and
pushf
std
dec
dec
inc
lahf
add
insb
or
and
or
js
pop
xor
repnz
fstpl
lods
cld
fisubrs
add
pop
pusha
test
and
je
sbb
sub
pop
aaa
push
lock
in
cld
sub
sbb
pop
mov
dec
jecxz
push
xchg
xchg
cmp
and
sbb
jl
sbb
test
int3
inc
rcrb
mov
stc
incl
jno
mov
in
pop
xchg
inc
and
jge
pop
lock
sbb
push
aas
fsub
push
rcr
arpl
xor
pop
jmp
out
sub
cld
pop
jl
popf
xacquire
flds
rcll
stos
pop
fisubl
lods
bound
jnp
int3
scas
pop
test
adc
mov
push
jo
cs
dec
push
cmp
pop
jge
push
mov
mov
pop
cwtl
in
sbb
int3
in
cmp
stos
scas
mov
insl
xchg
divl
pop
ljmp
add
ret
xchg
test
mov
scas
outsb
loop
xchg
dec
repnz
jo
jb
mov
int3
pop
aam
movsb
sbbb
jne
dec
lods
xor
mov
mov
fmul
ja
pop
xchg
inc
xor
sub
testb
lret
insb
sbb
ja
sub
sbb
in
push
insl
dec
mov
sub
sub
xchg
adc
or
mov
jg
cli
aaa
push
out
movsl
sub
push
push
cmp
sub
pop
int3
push
sbb
out
sbb
cmp
mov
pop
sub
sbbb
jg
cmpsb
std
lahf
iret
pop
pop
mov
cmp
adc
popa
xlat
in
sbb
test
and
psraw
lret
scas
jg
jne
push
das
pop
xchg
jbe
cmp
push
lahf
inc
pop
mov
es
gs
cltd
pop
xor
sbbl
xchg
push
dec
and
sbb
mov
cs
outsb
out
leave
ja
jnp
pop
mov
dec
lahf
cmp
loope
out
mov
sub
fcompl
sbb
cmp
pop
pop
in
xchg
cmp
imull
icebp
pop
mov
jmp
gs
in
lret
pop
mov
xchg
cmc
jle
sar
cmp
pop
mov
pushw
sub
cmp
or
fcoms
inc
inc
and
pop
fcmovne
std
adc
stos
sbb
stc
sub
in
loope
lods
in
in
lret
cmp
ds
mov
mov
xchg
cs
pop
dec
pop
mov
add
das
mov
popf
insl
xor
xchg
lds
std
lods
pop
test
idivb
cmp
mov
sbb
inc
popa
cli
pop
enter
mov
mov
out
pop
mov
fisubrl
inc
clc
adcl
pushf
xor
push
cmp
insb
cmp
mov
xor
adc
rcrl
pop
or
pop
and
es
int3
inc
or
jae
pop
out
inc
mov
pop
cmpsl
lds
aad
xor
mov
cmpsl
pop
fs
pop
je
aaa
in
mov
test
mov
gs
leave
push
pop
insl
dec
mov
push
clc
mov
mov
or
scas
push
pop
xlat
pop
xchg
jl
stc
pop
pop
scas
cs
push
idivb
jmp
mov
idivl
jo
scas
movsb
mov
fdivr
dec
push
pop
inc
sub
jl
pop
jbe
fnstsw
cld
sbb
out
sahf
lret
int3
xor
mov
aad
mov
mov
enter
std
subb
popf
xor
out
xchg
mov
push
pop
int3
pop
add
test
cmc
je
mov
mov
sub
push
sub
inc
js
clc
incb
out
jbe
scas
adc
ficoms
push
stos
xchg
mov
and
xchg
add
dec
pop
lods
xor
popf
push
pop
or
add
add
pop
sbb
sub
lds
mov
jl
in
cmc
pop
push
sbb
lea
pop
pop
mov
pop
lahf
les
or
and
ret
push
pop
mov
cmp
aas
movl
inc
mov
rol
xorb
bound
xchg
or
mov
test
loopne
sbb
sbb
mov
xchg
stos
add
lods
loopne
xchg
or
mov
dec
aam
jg
orb
mov
in
negb
cs
out
mov
test
pop
pop
jno
out
sbb
adc
jbe
pop
mulb
lods
cmp
pop
dec
into
in
pushf
stc
inc
inc
pop
in
dec
xor
mov
mov
stos
xchg
xor
cmp
cmp
xor
pop
jbe
je
jp
sbb
pop
movsb
shr
fwait
add
pop
mov
lods
gs
pop
cmp
pop
ja
mov
inc
mov
pushf
cmpb
pop
pop
jl
loop
inc
jne
je
inc
out
loope
pop
call
and
xor
cmpsb
pop
pushf
aad
int
pop
loope
dec
lds
and
jp
into
ljmp
icebp
sub
and
insl
cmp
push
hlt
dec
pop
fildl
lock
aam
inc
out
loop
jecxz
pop
ret
sub
pop
jge
mov
je
sbb
addr16
in
sbb
xorb
out
xlat
jns
or
aam
lock
adc
cld
xor
stc
pop
cmp
fidivs
mov
and
push
pop
rcll
pop
xor
fadd
mov
lods
dec
xchg
fadds
mov
dec
push
or
out
divl
mov
mov
insl
mov
movsb
pop
push
fsubrl
sbb
lock
pop
ret
mov
and
loopne
mov
jl
dec
sbb
pushf
jb
pop
lods
pop
cmp
addb
stc
ret
sub
pop
stos
sbb
pop
lret
into
insl
mov
sbb
popf
lret
fimuls
sub
xor
lods
test
fistl
fadd
pop
jne
loopne
push
mov
insb
xchg
inc
fcomp
inc
mov
outsl
pop
mov
jne
sti
jl
mov
test
sbb
aad
pop
scas
mov
bound
xor
push
or
mov
fdivs
test
je
and
pop
sbb
in
mov
adc
mov
ffree
movsb
pop
int3
fadds
sub
jbe
lret
mov
dec
xor
jge
adc
mov
mov
jecxz
test
cmp
sbb
mov
sbb
push
ss
test
jbe
aaa
pop
push
pop
add
and
lahf
scas
ljmp
pop
jge
int3
jg
fsts
and
dec
hlt
or
pop
pop
call
pop
cmp
jmp
rcrb
xchg
scas
cli
into
mov
mov
and
in
int3
cld
idiv
cmc
test
mov
andl
pop
or
mov
cld
pop
daa
test
negl
pop
cmpsl
sbb
mov
pop
push
sbbb
aam
scas
cmp
mov
lea
or
clc
sahf
cld
pop
repnz
gs
and
shll
xchg
pop
fiaddl
adc
call
mov
ret
sub
jecxz
ja
mov
cmp
adc
mov
xchg
pop
int
cld
xchg
movsb
inc
inc
mov
mov
fcmovu
ljmp
dec
repnz
lahf
mov
cmp
fisubrl
jecxz
sbb
mov
pushf
sbb
ficomps
lock
mov
int
daa
enter
dec
adc
insb
pop
dec
sbb
jae
sbb
sti
ret
popa
adc
xor
shrl
pop
movsl
pop
fidivrl
mov
fcmovnbe
hlt
lret
pop
sbb
ficompl
jle
pop
out
mov
lods
inc
pop
push
sub
jg
insl
cmc
addr16
lahf
mov
inc
push
std
push
in
push
pop
xor
xchg
pop
call
ja
sahf
mov
sub
pop
push
jb
add
scas
les
cmp
stos
jns
adc
in
pop
pop
mov
dec
pop
lahf
pop
je
xor
lea
loopne
popf
pop
cmp
out
int3
lcall
xchg
xchg
jne
mov
lock
dec
xchg
arpl
int
fisttps
push
pop
aam
push
cs
push
cmc
fisubl
sbb
clc
call
pop
faddl
pushf
pop
das
xchg
xchg
mov
and
add
mov
fstpl
and
sub
pop
sbb
daa
sti
xor
cmp
sti
add
nop
pop
xchg
pop
pop
out
mov
mov
subb
xor
sahf
or
mov
daa
mov
ljmp
mov
or
jae
ret
push
xor
mov
ljmp
fdivr
fsubs
pushf
mov
mov
push
push
pop
jge
in
jbe
mov
mov
mov
mov
adc
sub
pop
inc
sbb
hlt
les
pop
in
shll
cmpsl
pop
sbb
ss
xchg
pop
push
jbe
lods
fildll
sub
test
adc
aaa
mov
mov
lret
in
cmp
sub
jne
mov
in
inc
pop
or
js
aaa
mov
fistpll
sbb
mov
movsl
mov
mov
mov
push
xor
adcb
xchg
in
xchg
pop
sbb
call
rolb
mov
aam
mov
inc
mov
insl
je
pop
orb
or
add
cltd
pop
sub
shl
in
enter
mov
or
jno
dec
pusha
rorb
pop
jns
mov
les
dec
adc
cltd
data16
xor
scas
pop
es
fwait
imul
ljmp
mov
popf
aad
push
pusha
cmpsb
or
fistps
scas
jecxz
sbb
leave
jae
inc
and
push
lahf
out
test
mov
stos
cmp
xor
pop
sub
add
in
int
mov
stos
dec
pop
add
orb
push
pop
and
pop
in
sbb
mov
pop
add
jg
lret
jle
sbb
testl
mov
pushf
push
sub
lods
cltd
pusha
mov
inc
cli
pop
in
int
xchg
scas
divb
add
das
outsb
adc
sbbb
lods
jbe
add
push
scas
pop
push
cmp
test
mov
mov
lret
pop
and
hlt
lahf
add
sti
insb
mov
mov
test
ljmp
insb
push
pushf
mov
fidivl
and
mov
lods
or
cmc
insb
jp
xchg
and
add
cmp
testb
dec
iret
pop
je
pushf
dec
pop
outsl
mov
enter
jne
cmp
in
dec
lock
in
data16
orl
sbb
fisttpl
loopne
inc
prefetch
mov
jb
pop
cmp
push
hlt
je
mov
mov
fisttpl
push
nop
ja
daa
pop
xor
pushf
inc
cmp
and
pop
or
push
shlb
adc
cmp
mov
sbb
ss
pop
scas
enter
imul
insb
push
jl
int
cltd
insl
sub
int3
pop
push
sub
pop
push
iret
mov
pop
adc
xchg
insl
xchg
inc
lods
add
pop
cmpb
lods
cmp
ficoml
jge
js
jbe
dec
inc
js
test
lods
pop
push
mov
cmp
mov
push
clc
mov
lock
xlat
in
insl
dec
push
sbb
outsb
cwtl
mov
xor
and
sarb
std
scas
push
inc
inc
lods
and
push
ds
daa
cmp
sub
divb
xchg
jne
fcmovu
pusha
pop
aad
lcall
sub
fmull
dec
inc
mov
inc
push
jo
pop
fisubrl
cwtl
mov
aaa
cmc
push
and
pop
int3
lea
aas
pop
mov
pop
sub
pop
xor
pop
jbe
dec
adc
inc
jecxz
test
cmp
mov
or
dec
pop
out
adc
cmp
std
pop
mov
cmp
push
sub
adc
outsl
dec
int3
sub
cmpsb
pop
std
or
pop
sbb
lock
loope
mov
int3
movsl
je
adc
sub
sbb
rcrb
pop
pop
inc
aam
cmp
fdivrp
fists
in
xchg
push
pop
inc
inc
pop
jnp
ds
test
jne
int3
jl
jg
ret
xor
add
dec
fs
pop
mov
int
mov
scas
inc
jo
lret
add
cwtl
dec
jne
sbb
notb
movsb
lods
pop
in
pop
xor
push
or
test
mov
cmp
jmp
ret
scas
xor
test
imul
dec
pop
mov
in
cmp
js
inc
test
or
fimull
sub
cmp
sbb
pop
ljmp
mov
sbbb
push
loop
pop
mov
subl
int3
pop
dec
mov
xor
mov
pushf
push
andb
or
bound
mov
cmp
je
fldt
stc
out
fdiv
pop
jne
add
bound
pop
imul
fnstsw
jle
loopne
push
jp
mov
cwtl
movsb
pop
mov
mov
mov
dec
insl
mov
ljmp
iret
pop
pushf
icebp
or
mov
popl
std
outsb
int3
sbb
stos
hlt
inc
pop
xchg
pop
and
daa
mov
pop
iret
mov
loop
pop
fmuls
dec
mov
cmp
std
in
or
aaa
pop
arpl
test
in
add
loopne
mov
test
xchg
mov
lods
sbb
arpl
cmp
mov
xchg
pop
mov
rolb
stos
scas
push
pop
je
movsl
das
lods
add
xor
pop
lods
mov
js
jno
pop
jne
int3
pop
dec
frstor
cmp
cmp
pop
insl
imul
or
inc
pop
add
mov
sub
and
mov
xchg
nop
add
fnsave
lret
xor
cmpsb
sub
lods
push
pop
mov
test
pop
xchg
orb
inc
pop
int3
mov
lods
push
pop
les
mov
jb
push
fisubl
inc
push
call
and
lahf
sub
pop
jb
and
into
cld
test
js
mov
pop
repz
adc
jb
insl
pop
jbe
idiv
int3
test
out
mov
out
xchg
popf
xor
and
cmp
pop
push
mov
pop
insl
movsb
in
mov
pop
aam
jae
dec
stos
cmpsl
cmp
mov
xchg
aaa
mov
push
rcrb
cld
sub
int3
pop
mov
dec
sbb
sbb
in
push
dec
int
pop
pusha
push
rcll
scas
out
fisttps
and
pop
lods
adc
js
mov
pop
loopne
bound
dec
cmpl
in
or
push
aam
insl
lds
add
mov
pop
adc
test
in
mov
dec
dec
sbb
ss
inc
mov
lods
cmp
ja
hlt
pop
mov
pop
cmpb
lret
test
dec
add
adc
adc
stos
cltd
mov
pop
sbb
pop
lea
pop
and
xchg
in
cmp
repz
jbe
cmpsl
in
add
pop
ficompl
test
inc
adc
int3
pop
js
out
and
lds
xchg
into
pop
mov
mov
frstor
ret
fildll
mov
mov
cltd
in
add
lret
xor
and
adc
sahf
ret
jge
pop
adc
fmull
jecxz
xchg
xchg
and
adc
cltd
dec
arpl
in
pop
mov
cltd
mov
inc
fistpl
mov
int
leave
stc
loope
xchg
mov
sbb
popf
xor
fcompl
push
push
sbbb
mov
xor
adc
lods
xor
int3
mov
rorl
and
stos
aam
hlt
or
jo
scas
cld
add
sbb
aam
and
xor
pop
sub
pop
je
enter
xor
in
mov
in
push
repz
pop
ja
fdivrs
pop
xlat
jo
xchg
sub
mov
push
lea
xchg
dec
and
jne
dec
mov
xchg
push
pop
incb
sbb
ljmp
int
mov
lret
mov
mov
dec
jl
cmp
sub
xlat
xchg
add
rclb
in
in
push
popa
add
std
fbld
dec
clc
bound
xor
add
popf
aaa
mov
jnp
pop
inc
pop
pop
push
push
mov
sahf
xor
in
mov
popf
sbb
jl
cmp
adc
mov
jae
mov
pop
dec
mov
rcr
pop
adc
stc
ret
lret
insl
mov
scas
lds
jl
pushf
xor
clc
iret
call
mov
xlat
aad
daa
cmp
add
adc
xchg
mov
dec
into
jecxz
lods
pop
jo
push
insl
out
xor
pop
jge
aas
pop
jmp
dec
sbb
pop
pop
mov
dec
xor
sbb
or
out
stos
cmpb
hlt
pop
scas
aaa
in
cmp
and
out
int
lea
adc
jp
cmpb
and
enter
mov
add
pop
pushf
jbe
ficomps
dec
in
enter
pop
push
arpl
push
gs
addr16
pop
mov
sub
les
xchg
lods
mov
xchg
or
pop
gs
dec
ds
arpl
imull
movsl
and
mov
lods
push
sub
xor
sbb
in
test
cwtl
and
pop
sbb
out
loopne
mov
out
jecxz
lahf
cmpl
jmp
into
mov
arpl
fdivrs
jns
cmpsl
fdivrs
xchg
data16
or
xchg
lods
jno
inc
pop
pop
lret
sahf
rolb
int
insl
push
rcrb
pop
addr16
sbb
adcb
icebp
cmc
adc
mov
jb
filds
and
in
mov
push
or
mov
std
ja
cmp
mov
notl
scas
fcompl
push
sbb
cli
mov
pop
pop
push
lods
pop
jb
sti
daa
dec
aam
pop
in
sbb
cs
mov
les
jns
cli
test
lcall
cmpsb
xor
in
int
sbb
jb
push
add
ret
mov
jge
inc
inc
or
lods
addr16
mov
or
sbb
pushf
inc
cld
mov
pop
popa
pop
mov
xor
ja
aad
js
push
pop
movsl
jne
xchg
bound
jbe
cmpsl
mov
mov
fsubrs
out
leave
xchg
fcmovu
addb
aam
scas
push
pop
dec
pop
mov
int
cmp
frstor
lock
add
scas
hlt
ja
int3
pop
sub
insl
mov
icebp
lcall
mov
sbb
shlb
jo
cmp
bound
ljmp
mov
adc
ret
inc
or
cmp
imul
xor
mov
setb
jo
lret
pop
ss
inc
test
insb
pop
mov
xchg
jae
add
dec
adc
outsl
fsubs
sub
iret
popa
test
sbb
jl
fcomps
pop
push
cmc
shrl
pop
call
and
inc
xchg
jge
push
dec
jmp
xchg
adc
in
fmuls
mov
jg
pop
mov
daa
fsts
shr
xchg
loop
mov
imul
ja
fmuls
ds
push
arpl
cmp
add
fistpll
lret
mov
mov
mov
fcomps
pop
mov
xchg
xchg
pop
pop
push
sbb
mov
or
out
lods
in
mov
in
sbb
dec
pop
addb
lea
push
test
jno
pop
xlat
mov
sbb
std
hlt
mov
je
pop
or
roll
in
dec
sbb
hlt
ss
fst
popa
mov
bound
sahf
adc
scas
or
pusha
adc
lret
pop
mov
lods
je
push
dec
lret
xor
dec
pop
mov
add
outsb
xchg
cmp
xor
scas
jo
fisttpll
cmpsb
mov
xchg
ficompl
push
xchg
pop
leave
dec
cmpb
jne
ss
mov
lods
dec
rcrb
xchg
pop
stos
adc
call
lret
jne
jge
mov
pop
in
mov
or
sti
lods
pop
nop
sub
out
cli
idivl
lea
in
push
dec
imull
sbb
test
test
pop
outsb
mov
fidivrs
les
pop
inc
sbb
mov
pop
inc
jle
fs
cmp
or
mov
jb
or
pop
inc
into
flds
mov
scas
ds
push
sub
cmpsb
cwtl
sbb
sbb
ret
in
dec
movsb
mov
pop
fsubrs
in
adc
je
push
pop
mov
push
and
jp
mov
pop
fmulp
lods
cwtl
ja
ljmp
lds
iret
pop
push
push
xor
js
pop
mov
ss
dec
jge
clc
pop
xchg
out
imul
xor
inc
pushf
sbb
gs
dec
push
pop
jge
sbb
xchg
jg
rcrb
pop
insl
cmp
in
mov
fldcw
out
cmpsb
in
adc
aas
test
cs
and
roll
adc
mov
dec
mov
pop
out
test
js
cmc
inc
cmp
jmp
push
cltd
jle
jp
ja
cli
add
pop
repz
cld
lods
lret
imul
push
addr16
insl
shll
pop
xor
movsl
sub
push
les
sbb
pop
fistl
mov
testl
sti
push
popa
mov
mov
sub
insl
sbb
mov
cmp
in
mov
mov
pop
adc
xchg
sbb
pop
dec
test
sub
add
dec
adc
and
and
mov
dec
cmp
mov
mov
and
pop
leave
jbe
cwtl
into
gs
mov
stos
insb
cmp
and
in
cmc
pop
hlt
xchg
out
mov
pop
dec
cmp
cwtl
jecxz
stos
mov
pop
mov
jp
outsl
popf
jno
insl
pop
fwait
jns
pusha
jecxz
inc
pop
inc
or
hlt
jbe
lret
into
and
dec
insb
mov
cmp
mov
sbb
arpl
add
out
cmp
imul
insb
dec
pop
out
repz
pop
inc
fcoml
dec
pop
add
xchg
ret
stc
int3
mov
jbe
gs
adc
addb
sbb
sbbl
sbb
enter
andb
push
outsb
insl
pop
sbb
es
scas
sbb
outsl
pushf
pop
xchg
dec
das
out
imul
jne
sub
mov
cmp
dec
scas
xchg
cmp
popf
stc
adc
or
mov
cmp
mov
pop
and
je
push
andb
xor
andb
fdivr
scas
xchg
cmp
aas
pop
sbb
sbb
pusha
pop
xchg
mov
loopne
movsl
and
jl
push
in
inc
pop
scas
inc
ja
je
inc
pop
dec
clc
out
rcrb
fidivrl
pop
inc
cmpsl
cld
inc
sbb
icebp
mov
cmp
cmp
in
movsb
cwtl
int3
jbe
sbb
sarb
lods
cmp
lock
pop
mov
int
dec
scas
mov
xchg
mov
jmp
cltd
fwait
jnp
pop
cli
ret
add
loop
add
adc
call
inc
pop
adc
jo
pop
dec
cwtl
pop
test
sub
jg
jecxz
sub
mov
pop
add
pop
lods
inc
pusha
pop
push
int
push
add
and
leave
fstp
movsl
xchg
pushf
ret
sbb
aas
cs
dec
dec
bound
mov
xchg
pop
xor
ja
jp
scas
and
inc
push
or
sahf
or
pusha
in
push
cmp
pop
and
adcb
rcr
ficomps
stc
sub
jb
cmp
dec
push
xor
sbb
rcr
adc
fimuls
int
xor
cmp
cs
sahf
and
push
xor
add
addr16
adc
ds
xor
adc
cmpsl
ret
jp
pop
cmp
jns
pop
or
mov
clc
outsl
inc
out
ss
scas
sub
mov
bound
in
cmp
jb
xchg
push
js,pn
in
jo
lret
and
pop
int
lods
fstps
cmpsb
pop
jbe
sbb
mov
std
lret
test
dec
dec
imulb
mov
jmp
jb
or
pop
out
aam
stos
dec
int
mov
sbbl
xor
mov
dec
mov
push
jb
mov
lods
in
cmp
push
or
hlt
lock
enter
cwtl
mov
ljmp
xor
dec
out
pushf
mov
push
pop
loopne
loope
aaa
out
jae
adc
cld
pop
inc
int
xor
cltd
xor
mov
mov
in
sub
adc
sbb
fcmovbe
mov
push
pusha
test
lret
jae
mov
cltd
push
pop
fnsave
loopne
sub
cltd
jns
mov
dec
outsb
pop
hlt
sub
ja
sbb
pop
push
in
sbb
repnz
jb
pushf
mov
enter
sub
shlb
inc
cmp
ficoml
adc
insl
int
sbb
mov
pop
test
add
mov
aad
test
add
fistl
sbb
cmc
inc
int3
dec
mov
lahf
pop
cmpsb
dec
jnp
outsl
lods
or
getsec
lods
mov
mov
inc
int
sub
mov
xchg
pop
cmp
repnz
sti
into
push
test
je
add
mov
int
or
mov
cmp
pop
adc
pop
les
push
pop
pop
sbb
lods
adc
pop
arpl
xor
add
pop
lret
push
mov
int3
negb
adc
subb
mov
popa
cli
fildl
pop
shl
aam
xchg
fs
jbe
in
xor
or
jb
int
push
push
or
dec
mov
and
lret
aaa
sub
dec
nop
sub
mov
cmp
jb
dec
or
roll
in
sbb
pop
mov
je
dec
es
jns
sbb
nop
dec
imul
pop
add
popa
push
xchg
and
jo
xor
fimull
test
xchg
xchg
pop
adc
dec
or
in
mov
rcrb
jle
out
sbb
scas
scas
and
fdivl
pop
push
gs
push
xchg
inc
pop
in
jns
pop
ror
mov
pushf
std
int
lds
and
push
xchg
adc
rorl
testb
lea
pop
sbb
sti
pop
mov
in
dec
pop
adc
cmp
sub
adc
push
or
xor
int3
cli
out
jecxz
push
mov
lods
test
pop
cltd
incl
sub
jmp
cmpb
data16
sbb
push
scas
fwait
sti
jmp
ret
and
outsb
sbb
pop
pop
xchg
int
loopne
adc
jb
loope
pop
push
adc
mov
sbb
les
inc
pop
lea
cli
std
fdivrp
aam
pop
push
rcr
int3
fsub
sub
pop
xchg
and
shll
addr16
sarb
inc
xchg
cwtl
sbbl
aad
inc
mov
jb
rorl
mov
mov
push
and
ljmp
iret
mov
mov
pop
mov
fistl
mov
jp
xchg
push
push
enter
fs
push
push
fnsave
lahf
loope
in
mov
or
pop
mov
push
sbb
pop
testl
pop
mov
dec
aad
adc
jbe
sahf
nop
addr16
pop
fsubs
mov
ss
sub
jnp
cmpsb
mov
mov
lods
mov
ds
mov
jnp
addr16
pop
add
pop
pushf
mov
mov
sub
fcompl
aas
mov
xor
xchg
add
ret
adc
adc
movsl
rcrl
cmp
mov
inc
rcrb
cmc
pop
movsl
mov
push
inc
cmpsl
pop
movsb
xchg
or
jb
cld
pop
adc
int3
xchg
xchg
or
pop
in
mov
insl
inc
std
pusha
pop
sbb
dec
lds
arpl
jno
negb
and
in
jo
sub
xchg
dec
cmp
push
dec
std
pop
int
scas
pop
mov
fcoml
pop
ret
push
push
lret
arpl
xor
add
push
clc
fisubs
in
adc
mov
xor
jae
stc
and
pop
out
sbb
or
leave
sub
pop
or
cwtl
mov
stos
and
sbb
fnstenv
jbe
xor
js
repz
pop
cmp
and
mov
adc
ficompl
mov
cmp
jge
les
pop
pop
adc
das
stos
push
mov
in
insb
pop
addl
gs
negl
lret
cwtl
or
mov
pop
movsl
sub
subl
lock
and
jecxz
enter
int3
lret
pop
push
dec
ficompl
push
adc
and
loope
mov
out
cltd
sbbb
ror
xchg
push
inc
pop
cmpsl
fwait
pop
fstps
jnp
loopne
mov
cld
addr16
xchg
aad
imul
pop
inc
data16
fsubr
push
sbb
test
les
inc
rorl
mov
outsl
bound
inc
data16
xlat
rcrb
repnz
hlt
leave
fucomi
cmpsb
cli
test
lcall
jmp
shll
jp
mov
pop
cmp
out
push
mov
outsl
inc
cmp
jg
xor
mov
xchg
addr16
lcall
stos
jecxz
pop
sbb
xchg
lret
sbb
pop
mov
xchg
int
pop
jbe
in
cmp
jo
mov
rorb
pop
pop
lahf
in
fcompl
xchg
mov
mov
testl
scas
jbe
fldcw
jp
dec
xlat
jo
rcrl
jmp
mov
mov
imul
imul
xor
pop
test
stos
mov
lock
lds
test
scas
add
xchg
repz
test
jmp
popf
mov
jb
dec
pop
fneni(8087
loop
mov
rcl
adc
rcrb
sub
ret
vaddss
jecxz
rcrl
mov
sub
jns
pop
or
sbb
lret
dec
aad
pop
arpl
lock
pop
or
sbb
rcrl
sub
lret
pop
cld
push
call
jns
pop
test
and
aaa
das
jecxz
cwtl
mov
fisubrs
std
sbb
pop
subl
popl
out
movsl
pop
enter
add
aad
pop
jns
xchg
inc
inc
mov
mov
xchg
mov
pop
ret
sbb
pop
out
jecxz
stc
dec
jo
mov
ja
push
sbb
mov
cmp
jns
jae
pop
lret
or
dec
int
pop
jp
mov
sti
adc
leave
pop
mov
cld
test
pop
nop
xor
jmp
mov
mov
dec
mov
adc
adc
int3
jnp
sbb
stos
pop
or
inc
cmp
sub
jb
ljmp
mov
icebp
scas
int
pop
and
mov
push
adc
mov
out
pop
mov
out
clc
adc
scas
lods
or
ret
jb
and
lods
ss
pop
push
sbb
cmp
pop
mov
pop
mov
mov
cmpb
jecxz
daa
testb
xlat
outsl
cmp
test
mov
mov
mov
int3
cmpsl
repnz
shrl
jp
xchg
lret
xor
pop
dec
push
fistps
into
ljmp
pop
xchg
jo
push
rcrl
and
push
pop
test
cmc
fwait
pop
icebp
rorb
ffree
adc
stos
outsl
lcall
shlb
xchg
mov
jge
pop
dec
test
jl
outsb
cmpsl
clc
pop
cmc
cmp
lcall
sahf
fistps
nop
int3
pop
pop
xchg
mov
int
pop
jne
ja
cwtl
leave
imul
cmp
pop
cmp
jb
scas
popf
mov
xchg
mov
sub
and
xchg
mov
jae
addr16
in
adc
stos
add
pop
fsub
mov
icebp
mov
lea
add
in
lock
pop
pop
dec
add
sbbl
sbb
pushf
mov
sti
call
jl
jl
repz
ds
xchg
inc
mov
sbb
sub
nop
push
pop
sub
sbb
ret
dec
test
fwait
lock
xor
arpl
idivb
int3
or
pop
adc
cld
sub
fmull
lock
vphsubwd
xor
push
jb
xchg
jo
insl
jno
dec
pop
test
sbb
ret
mov
cmpsb
in
sub
scas
inc
xor
jne
jo
mov
movsb
das
aam
xchg
sub
stos
mov
pop
mov
add
stos
pop
faddl
iret
andb
mov
outsl
mov
inc
fimull
pop
xchg
push
pop
pop
lret
fisubl
inc
int
aad
xor
jbe
inc
sub
and
ss
std
jae
insl
pop
int
pop
sti
negb
push
das
call
out
fmull
mov
stc
cltd
cmp
xor
xchg
mov
es
out
xchg
cmp
int
cltd
add
inc
sub
lods
jb
loopne
negb
popf
lock
int
add
cmp
cmc
push
xchg
pop
int3
enter
adc
mov
mov
lods
scas
mov
clc
aam
movl
xor
test
pop
sarb
ds
mov
xor
mov
or
lock
jl
xlat
inc
sbb
dec
int3
dec
mov
out
pop
adc
bound
mov
jge
mov
addps
xchg
lret
cmp
pop
pop
cltd
or
push
jl
cmpsb
pop
ja
fistl
jmp
fwait
mov
or
adcb
mov
repz
lock
mov
pop
pop
test
mov
and
pop
lcall
and
sub
pop
pop
pop
int
xor
or
inc
pop
stc
sub
mov
scas
jle
das
or
lahf
mov
xchg
xor
or
rolb
pop
and
cmc
inc
pop
push
std
push
int
cmp
inc
dec
into
ja
push
ficomps
lret
xchg
cmpsl
or
pop
xchg
pop
dec
pop
ljmp
stos
mov
subl
jle
fidivl
mov
in
mov
or
pop
cmp
sub
push
pop
test
dec
lds
lods
sti
repnz
cmp
jnp
dec
sbb
add
or
out
lcall
int3
fnstenv
iret
jne
inc
lds
inc
and
cwtl
subl
pop
and
xchg
lods
mov
loop
rcrl
xchg
lods
aaa
dec
xchg
mov
es
and
xchg
outsl
stos
in
cli
movsb
sbb
adc
data16
pushf
ret
sub
scas
movsl
cltd
lea
xchg
fcomps
or
adc
push
lcall
lea
jnp
mov
mov
fs
pop
push
mov
xlat
push
cltd
orb
jp
int3
xchg
mov
inc
cltd
push
adc
jle
dec
mov
loope
testl
sti
fwait
xchg
dec
inc
and
dec
add
pop
or
push
pop
pop
fdivr
out
int3
push
fxch
sarb
pop
and
and
pop
jge
mov
shl
insl
sbbb
xorb
data16
pop
or
ljmp
adc
lahf
xchg
pop
fcomps
scas
cmp
cmp
loopne
mov
jb
int
push
adc
mov
inc
jecxz
xor
pop
cmp
jg
lods
lret
cli
fidivs
pop
dec
rcrl
xchg
inc
pop
movsb
jo
xchg
mov
mov
pop
test
lcall
and
push
pushf
sub
push
stos
inc
rcrl
xchg
jb
mov
add
repz
call
pop
push
lds
scas
jg
test
lahf
mov
jmp
aaa
stos
mov
mov
fldcw
mov
and
int
loop
and
and
mov
jne
aam
mov
sub
stos
adc
pop
js
mov
stos
cltd
sahf
inc
in
mov
jle
shll
scas
add
insl
imul
inc
pop
jnp
adc
leave
fiaddl
xchg
sahf
out
or
xchg
int3
add
mov
adc
lret
addr16
pop
add
xor
repz
dec
jno
lock
sub
sub
scas
pop
xlat
imul
pop
pop
fbld
mov
cs
leave
adc
jmp
sbb
sbb
push
jg
loopne
out
push
and
jo
dec
mov
mov
fisubl
mov
arpl
les
mov
ss
mov
scas
mov
cli
aaa
and
pop
inc
xchg
mov
push
push
pop
stos
dec
push
mov
mov
jp
scas
sbb
ja
jno
push
aas
jo
call
jp
insb
xor
mov
adc
fldenv
das
lret
dec
or
stos
pop
ret
int
outsl
xchg
pop
xor
inc
gs
and
ficoml
ss
jg
pop
cld
jb
xchg
pop
xchg
out
mov
jns
pop
push
daa
push
xor
sbb
pop
and
popa
xor
std
idivb
call
xchg
xchg
pop
mov
jecxz
cmp
cltd
dec
adc
out
jl
rcrb
mov
inc
pop
iret
ja
decl
stos
inc
sbb
int3
inc
lock
int
mov
loope
gs
pop
jecxz
enter
push
ficompl
sti
jb
dec
push
shrl
insl
loope
in
pop
jae
jbe
mov
inc
xor
fs
pop
mov
gs
mov
cld
mov
fbld
lcall
mov
or
pop
xchg
mov
mov
iret
jns
mov
dec
fnstenv
jge
mov
and
mov
cltd
sub
shlb
jg
jb
pop
cmpsl
and
sub
jmp
out
addr16
mov
inc
mov
pop
loopne
push
push
inc
dec
pop
int3
pop
and
lahf
jmp
xor
dec
pop
movsl
lcall
fmuls
pop
pop
sbb
leave
mov
aad
sub
dec
add
cmc
inc
addr16
dec
and
sub
or
sbb
stos
mov
fcoml
adc
mov
xor
mov
jmp
pop
pop
jp
xorl
lods
into
mov
cltd
icebp
data16
mov
imul
xchg
adc
out
and
stos
outsb
xor
sub
jg
jle
mov
in
add
repz
pop
mov
cmpb
insl
cmp
fcompl
inc
mov
inc
xchg
mov
pop
mov
ljmp
out
dec
aaa
rcrl
int3
xchg
push
xchg
or
adc
sti
pop
fcompl
inc
push
jb
cmp
or
jecxz
mov
aas
pop
aas
sub
fimuls
sbb
cld
xchg
cli
jbe
sbb
push
cvtps2pd
cmc
gs
je
enter
xchg
mov
pop
sbb
xlat
imul
in
cli
jp
pop
test
mov
push
repnz
add
lret
xchg
pop
xchg
fldenv
or
insl
mov
push
pop
mov
dec
mov
adc
mov
mov
jnp
xchg
imul
arpl
pop
xchg
cmc
int3
sub
outsb
mov
sbb
rcll
imul
lret
pop
test
or
jl
add
cltd
cmp
mov
fdivr
sbb
adcb
outsb
adc
ret
jg
and
sub
out
pop
xorl
push
push
jecxz
aad
pop
ja
arpl
mov
cmp
jbe
retw
daa
fstl
add
in
cmp
mov
pop
sbb
rcll
mov
addb
sub
fldenv
pop
pusha
repnz
pop
push
cmp
lds
pop
rorl
jecxz
adc
mov
ds
sub
xchg
clc
insl
and
dec
mov
sbb
insb
push
sbb
jmp
mov
jb
and
cmc
mov
ds
sbb
fisubl
adc
pop
aam
add
insl
lahf
jno
add
mov
pop
ja
inc
jbe
arpl
dec
and
orl
fwait
push
clc
or
int
mov
repz
xchg
xchg
jo
xor
bound
insl
xchg
pop
int
pop
xchg
cmp
js
pop
lods
dec
mov
dec
inc
imul
mov
mov
fs
cwtl
or
addb
int
xchg
mov
pop
dec
add
and
xchg
jmp
ret
dec
pop
inc
lods
sub
in
adc
test
sub
ds
dec
dec
mov
pop
add
jp
in
mov
or
mov
xchg
scas
pop
xor
cmp
jbe
mov
mov
inc
mov
jp
mov
fsub
inc
inc
or
sbb
jmp
pusha
pop
inc
dec
insb
push
push
push
xchg
les
push
sub
adc
lock
jge
pop
and
std
mov
sub
cmp
jecxz
cwtl
aad
add
mov
and
std
and
pop
daa
xor
int
shrb
jns
in
pusha
sbb
dec
push
aas
and
xor
in
pop
cmovno
inc
pushf
std
movsb
repnz
fmul
dec
xchg
hlt
imul
out
mov
mov
pop
lock
mov
jbe
int
test
cltd
push
push
cmp
orb
movsl
jne
xor
cmp
sbb
mov
push
and
arpl
test
inc
pop
scas
adc
pop
fwait
dec
cli
loope
cld
and
dec
add
pop
xchg
xchg
add
jae
jo
pop
xor
into
popf
std
xchg
fsubs
pop
jae
lods
fldl
sub
mov
sbbb
gs
mov
pop
push
jnp
jbe
enter
jp
hlt
or
sbb
ja
pop
mov
jo
loope
cmp
pop
jae
xor
adc
inc
out
enter
inc
cmp
mov
fnsave
fildll
mov
xor
pop
xor
loop
je
push
inc
es
add
cmpsb
shrb
bound
jge
es
pop
fisttpl
sbb
sub
dec
stos
push
stos
in
hlt
and
pop
or
cltd
call
lods
cltd
jmp
daa
xchg
fstpt
pop
add
cs
vandps
and
mov
std
orl
fcompl
int
outsb
cli
hlt
lret
lret
pop
xbegin
aad
jle
push
into
stc
insb
addr16
or
ficompl
ds
jecxz
mov
fwait
pop
push
clc
imulb
stos
push
cmc
add
cmp
push
jmp
pop
fdivs
adcl
pop
adc
add
push
pop
xor
cmp
mov
shll
jmp
add
pop
jnp
ret
inc
push
out
mov
fmul
dec
dec
sub
xor
popf
adc
or
adcb
or
cmp
mov
xor
add
mov
or
mov
jge
xchg
push
mov
in
fs
jl
mov
aaa
pop
call
push
and
push
cld
jno
push
inc
mov
fwait
add
push
xchg
lcall
sbb
js
imul
cltd
out
push
ds
pop
dec
mov
sub
adc
pop
xchg
sub
pop
or
std
mov
sbb
push
mov
shr
lret
mov
and
nop
push
mov
cld
dec
cltd
leave
jge
pushf
pop
xchg
jb
jns
cmp
stos
add
push
pop
imul
js
add
or
test
pop
push
jp
aaa
int
jmp
sahf
xor
inc
mov
mov
adc
sbbb
mov
sbb
mov
xchg
rcr
mov
pop
arpl
hlt
cmp
repz
ret
popf
jle
pop
rcr
sbb
data16
nop
cli
push
mov
jp
adc
or
in
sbb
scas
fcomip
push
lahf
loopne
push
add
jb
push
xchg
dec
arpl
inc
add
sbb
sti
mov
mov
repz
or
cmp
mov
shll
xor
popa
pop
jbe
cli
inc
js
xchg
mov
in
or
add
int3
sarb
lcall
or
pop
movsl
int
fwait
cmc
or
jl
cmpsl
jp
pop
mov
push
sbb
mov
shll
pop
mov
mov
push
pop
mov
popf
mov
mov
add
adc
adc
addr16
xor
test
call
dec
dec
ja
sbb
add
clc
sbb
jne
pop
jbe
cmpsb
dec
push
rorl
pop
enter
nop
loop
ljmp
add
ja
lea
int
mov
mov
mov
cwtl
das
pop
sub
pop
sub
jb
adc
pop
lcall
movl
pop
int3
sub
jg
jne
jno
aad
add
sbb
inc
in
sbb
loope
pop
xor
inc
pop
scas
pushf
sbb
push
xor
lret
xchg
int3
in
bound
mov
pop
scas
xchg
add
xchg
pop
rcll
dec
scas
jmp
std
stc
sbbb
in
sub
xchg
jns
mov
mov
pop
sbb
les
and
insb
ss
negl
cmp
adc
std
push
mov
xchg
and
jnp
jns
pop
push
sub
dec
jne
aaa
xor
mov
sbb
jmp
in
lea
pop
or
xor
add
ret
scas
lods
movsb
mov
inc
mov
and
mov
gs
cs
cmpsl
lea
pop
mov
scas
scas
add
mov
adc
push
jo
dec
xchg
aas
xor
rcrb
in
test
xlat
int
movsb
push
in
inc
adc
adc
insb
jg
test
out
divb
decl
call
cli
pop
je
pop
mov
inc
stos
int
lcall
push
fists
xor
push
dec
sbb
insb
les
push
mov
repnz
sbb
xchg
jp
pop
xor
sbbl
fsubs
inc
in
dec
push
jno
mov
pop
loopne
repnz
lahf
lahf
scas
cmpsb
stc
das
and
pop
inc
jae
push
popf
pop
mov
inc
ret
fnstenv
cmp
mov
addr16
int3
xchg
inc
sarb
stc
push
mov
push
cmp
lea
loope
push
push
icebp
lret
fisubrs
fimull
pop
jnp
inc
jbe
out
pop
shl
cltd
mov
pop
cmpsb
lods
xchg
sub
or
jmp
jp
insb
mov
mov
lds
pop
and
sti
pop
and
lahf
inc
pop
jb
push
jle
mov
pop
sub
int
fdivrl
hlt
or
xor
leave
mov
int3
bnd
pop
add
cli
insb
stc
push
pop
dec
cmp
test
xchg
pop
mov
mov
mov
pop
bound
xchg
pop
ret
aam
jle
icebp
cmp
sub
dec
into
add
mov
mov
stos
sbb
cmc
pusha
pop
roll
js
ficompl
int
dec
outsl
jle
dec
xor
jo
inc
xchg
add
in
out
leave
mov
fisttpl
lret
shrb
push
pop
xor
das
jo
push
sub
or
fiaddl
pusha
pop
out
cs
xchg
js
pop
adc
mov
jb
mov
call
out
pop
fcoml
lea
mov
lds
jo
cltd
add
cmp
adc
int3
cld
add
lret
xchg
pop
jo
mov
xchg
mov
pop
fisubrs
mov
in
das
xor
pusha
adc
ret
jp
dec
and
add
sub
xchg
add
loop
fcomps
and
sbb
int3
push
push
mov
xchg
pop
jbe
fwait
jns
xchg
xor
and
in
mov
pop
push
in
pop
fistpl
mov
jecxz
repnz
add
div
mov
jmp
sti
je
movsb
mov
or
out
sbbb
pop
fsts
leave
fists
insb
out
fucomi
pop
jp
cmp
int
cmp
push
inc
decl
pusha
sbbb
popa
cmpsl
orb
jb
in
leave
mov
jbe
test
inc
pop
adc
xor
mov
sub
mov
adc
ljmp
and
add
cli
push
test
fidivrs
rcll
push
mul
mov
inc
punpckhdq
pop
jecxz
fisubrs
inc
je
popf
jl
cld
dec
mov
call
inc
rol
mov
cmc
ret
jae
cmpsl
pop
xor
mov
add
push
sbb
sub
mov
pop
mov
xchg
add
dec
mov
pop
and
dec
mov
sub
xor
pop
xor
outsl
pop
dec
icebp
push
mov
sub
bound
rcl
adc
outsb
clc
cltd
imul
pop
push
mov
pop
es
jbe
pop
nop
adc
xor
std
xchg
dec
sub
pop
ja
push
int
mov
pop
cmp
stc
stos
jb
lcall
mov
cli
pop
cs
ds
push
pop
shlb
push
and
dec
stos
arpl
int
mov
in
cmpl
ljmp
jno
pop
jle
add
inc
popf
pop
xlat
push
dec
dec
cmp
fxch
fcomps
loope,pn
sbb
fldt
ficoml
xchg
cmp
jb
mov
mov
int
mov
mov
pusha
leave
or
add
mov
mov
sub
mov
pop
and
lcall
aam
jb
jo
enter
rcrl
inc
or
movsl
int
leave
sbb
or
repz
jno
pop
xchg
dec
shll
inc
fstpl
ret
shr
daa
pop
or
stc
es
or
push
pop
mov
pop
xchg
enter
out
add
push
cmpsb
and
sti
add
cmp
sub
sbb
test
roll
push
xchg
add
jae
aas
ficoml
pop
push
inc
and
in
test
or
scas
push
call
mov
popa
sbb
adc
orl
xor
out
clc
sub
fcomps
lods
mov
ret
pop
decb
mov
adc
xor
or
repnz
enter
cwtl
arpl
sbb
cmp
dec
pop
add
jae
fidivs
test
pop
fdivs
mov
mov
jo
mov
fbld
imul
lods
scas
loop
ret
xchg
mov
mov
cltd
cmp
mov
jge
fcmovnb
add
in
mov
sbb
ja
adc
insb
hlt
push
mov
cmpsb
pop
imul
jmp
inc
mov
insb
jns
cwtl
mov
imul
mov
mov
fdivrl
ret
mov
fistl
pop
lcall
adc
sahf
int
scas
mov
xor
sbb
or
int
mov
mov
fcomps
lahf
hlt
adc
add
addb
ret
roll
pushf
pop
bound
test
sarb
gs
cmp
adc
dec
pop
add
ds
addr16
sub
push
stos
test
rcrb
sub
adc
jle
jno
dec
jo
xchg
faddl
pop
fwait
popa
sbbl
push
dec
jecxz
fwait
jns
lret
push
adc
pop
fsts
js
scas
das
cmpsl
mov
push
enter
push
xchg
iret
pop
mov
mov
pop
pop
xlat
mov
enter
or
pop
mov
fwait
mov
xor
xchg
lds
pop
xchg
sub
pop
or
lock
aad
cld
scas
je
mov
adc
mov
push
pop
add
lea
cld
int
arpl
dec
xchg
xchg
fs
inc
std
in
popf
cmp
cld
pop
ds
lea
bound
mov
jp
mov
aam
push
call
cmp
iret
pop
add
mov
inc
pop
mov
or
jns
add
ror
bound
mov
fcompl
adc
inc
jae
pop
mov
mov
pop
mull
adc
cwtl
jbe
nop
mov
mov
fisubl
mov
mov
adc
dec
sbb
dec
and
or
sbb
fwait
xchg
sbb
mov
push
out
int
decl
push
icebp
and
cltd
test
les
into
bound
mov
jo
rcrl
push
dec
pushl
or
pop
xor
mov
inc
xor
cld
cmp
fildl
mov
fldcw
lea
and
or
adc
push
outsl
test
jnp
sbb
cltd
mov
push
stc
test
jmp
jl
and
aad
xor
arpl
rorl
enter
orb
cmpsl
pop
fmull
pop
push
mov
ljmp
or
dec
add
inc
ja
rolb
int3
push
adc
or
push
ret
fwait
pop
fldcw
inc
xchg
cmp
stos
mov
cli
out
pop
in
dec
or
adc
int
pop
sbb
dec
and
sbbb
jo
sub
mov
add
ja
dec
xchg
jecxz
mov
pop
xor
mov
out
sub
jbe
or
pop
add
mov
jl
add
int
fbld
mov
add
ljmp
dec
sub
jg
cmp
jle
mov
pop
int
pop
out
inc
push
jae
xlat
adc
jnp
arpl
es
pop
aaa
outsl
cltd
jb
sbb
cwtl
pop
cs
insl
mov
and
lret
dec
repz
pop
xchg
fsts
dec
scas
mov
imul
jbe
in
sahf
push
por
je
repz
hlt
or
pop
mov
scas
xchg
rol
mov
cmp
or
jmp
sbb
int3
xor
ficomps
daa
adc
jmp
inc
mov
sbbl
xchg
dec
lods
xor
jb
pop
movsb
ret
push
pop
hlt
in
sbb
pop
pop
ds
or
dec
jo
mov
lret
jmp
repnz
js
pop
adc
push
sbbl
emms
lock
out
mov
sub
xchg
js
mov
pusha
lret
sbb
lock
lds
sbb
call
call
pop
rorl
dec
negb
pop
repz
mov
ljmp
mov
rol
sbb
adc
pop
in
xor
sbb
cli
fcoms
mov
adc
test
pop
dec
xorl
testl
data16
enter
in
pop
fsubrl
fimuls
jmp
loop
fdivs
sbb
fisubs
push
movsb
sahf
sub
cmp
mov
push
movsl
mov
pop
add
jno
mov
loop
pusha
addl
inc
outsb
mov
sub
jge
in
add
inc
add
mov
es
dec
fists
cmpsb
negl
cltd
mov
push
jb
dec
insl
insb
pop
outsl
fisttpll
pop
cmp
stc
scas
mov
xchg
out
shlb
mov
jecxz
mov
es
fisubl
fmuls
fdiv
clc
shl
outsb
xlat
pop
mov
adc
ja
pop
jecxz
test
out
mov
xchg
lods
jecxz
into
sbb
dec
aam
lahf
pop
add
jbe
xchg
cmp
test
pop
leave
xchg
lock
jnp
dec
cli
push
jp
scas
cmp
ss
dec
cmc
fs
sbb
icebp
lock
xor
pushf
ret
mov
lahf
xorl
es
iret
dec
adc
jle
add
cmp
mov
mov
pop
insl
xor
cmp
iret
lret
pop
jb
fstpl
pop
add
mov
or
add
xchg
mov
outsl
and
in
inc
and
sbb
pop
xchg
fisttpll
pop
aaa
sbb
dec
jge
push
lahf
mov
cltd
jae
lret
arpl
sub
sti
xlat
outsb
mov
insl
jbe
xchg
adc
fs
int3
std
outsb
pop
inc
or
imul
movsb
lret
int
outsl
xor
int3
xlat
push
iret
sub
or
xchg
fsubrl
mov
dec
icebp
mov
jge
mov
push
pop
and
sbb
mov
pop
stos
xchg
cmp
or
inc
scas
arpl
xor
sbb
pop
clc
add
pushf
pop
push
addr16
popa
cmp
hlt
or
mov
mov
add
movsl
xchg
pop
or
jb
pop
fs
pop
mov
inc
lret
pop
cltd
jno
xchg
mov
filds
imul
scas
int3
pop
push
lret
pop
sbbb
jo
adc
pop
xchg
mov
xchg
sub
shlb
fnsave
cltd
adc
mov
jns,pn
push
test
int3
sbb
xchg
sbb
inc
sbb
jnp
dec
or
and
adc
mov
pop
imul
enter
pop
div
sbb
fistps
cwtl
jg
or
dec
mov
daa
pop
inc
ret
lret
jo
push
pop
je
push
test
int
mov
imul
mov
cmp
scas
subb
pop
dec
mov
mov
lea
lret
in
stos
and
xor
and
pop
mov
ret
es
lds
shl
sahf
adc
ret
lods
insb
stos
pop
jo
pop
xchg
inc
mov
pop
jo
mov
pop
dec
imul
ret
std
pop
pusha
out
adc
in
sub
outsl
je
fbld
mov
sbb
leave
and
in
cwtl
lahf
mov
push
mov
mov
cmp
lods
jge
xchg
not
mov
in
sarb
or
jle
popa
mov
pop
xchg
call
das
push
and
pop
lea
cmp
fsts
and
mov
out
hlt
call
or
scas
push
xchg
and
pop
sarl
mov
cmp
pop
xor
aaa
mov
jmp
ljmp
dec
ret
dec
add
aas
movsl
or
popf
fnsave
and
and
pop
xor
sbb
xchg
sbb
insb
les
pop
sbb
addr16
pop
push
sbb
xchg
push
out
inc
out
test
dec
pop
cltd
sbb
stos
loope
jo
mov
add
mov
sbb
add
xorb
jns
or
xchg
mov
and
mov
cmpl
scas
enter
fstp
cmp
in
pop
or
outsl
addr16
lods
filds
xchg
imul
add
loopne
mov
xchg
ljmp
pop
out
cmp
out
je
negl
divb
mov
sbb
mov
pop
mov
lret
shrl
pop
pop
popf
je
mov
xchg
inc
inc
push
xchg
mov
lret
pop
inc
stos
bound
scas
push
xchg
sub
lock
fnstcw
sub
sbbl
and
mov
fisubrs
jbe
mov
lds
lods
mov
cmpb
or
dec
cmp
push
dec
sbb
pop
sbb
gs
push
jb
rcll
xor
in
aas
mov
imull
inc
or
push
fcompl
adc
enter
xchg
mov
rcll
push
pop
insb
dec
xor
clc
divb
stc
arpl
lret
std
pop
aaa
notl
inc
ja
or
mov
push
shrl
rorb
cli
mov
xor
std
jle
inc
test
in
sub
dec
pushf
pop
pushl
cmp
mov
add
imul
mov
flds
pop
ret
adc
outsl
loopne
int
addl
or
insb
lret
mov
je
lods
int3
pop
addr16
stos
adc
faddl
out
and
xorl
insl
pop
in
xchg
mov
fsub
fwait
ret
mov
sub
lods
adc
sbb
dec
mov
stc
scas
stos
cmp
dec
lahf
shrl
sbb
adc
dec
push
mov
mov
jg
and
decb
repz
xor
jp
mov
fmuls
pop
popf
and
jb
outsl
arpl
mov
pop
inc
iret
jnp
ficoml
xchg
orb
mov
push
xchg
mov
ret
bound
and
sub
shl
push
pushf
add
inc
pop
jp
ret
push
lret
gs
lahf
int
out
xor
sbb
dec
arpl
pop
fwait
test
pop
lahf
call
mov
xchg
dec
ficomps
jo
fldl
sub
mov
add
xor
imul
sbb
imul
cmpsb
xchg
push
adc
push
inc
sub
inc
sub
adc
mov
es
hlt
pop
fdivrs
jbe
sbb
fmul
lahf
into
mov
push
pop
sub
pop
popa
stos
jecxz
mov
ss
scas
jae
sti
lods
cmpsl
fldl
add
inc
sbb
xchg
cmpsb
mov
jno
sub
arpl
int
fldcw
push
lahf
mov
pusha
xor
mov
cltd
test
gs
push
iret
xchg
inc
jb
into
xor
ss
cs
in
enter
push
mov
jge
test
cmp
mov
mov
dec
fdivs
in
popf
pop
jecxz
fs
add
dec
mov
sbbb
push
pop
fldenv
push
dec
or
fisubs
mov
mov
jo
mov
or
xchg
fcom
addb
mov
fldlg2
sbb
jnp
jp
pop
lret
bound
call
push
lcall
adc
int
sti
and
fsubs
xchg
and
push
clc
pop
mov
leave
sbb
fsubs
push
push
loopne
idiv
jbe
popf
jmp
pushl
inc
and
arpl
out
push
rcrb
loopne
mov
push
dec
testl
scas
xlat
mov
out
aaa
lods
mov
adc
add
cltd
fisttpl
pop
fwait
push
scas
jno
sub
and
outsl
sub
mov
pop
cmp
mov
mov
pop
jl
std
pushf
int
aaa
sub
ljmp
jno
pop
pop
mov
shll
jmp
or
js
adc
out
mov
or
jnp
pop
dec
pop
xchg
jno
xchg
pop
and
sahf
pop
fxch
push
cmpb
cltd
repz
sbb
jge
jbe
stos
jecxz
add
cmpsb
push
cmc
fisubrl
add
mov
sbb
mov
jge
pop
lds
or
jnp
pop
pop
push
sets
adc
cld
testb
xor
cmc
sahf
stos
mov
xor
int
mov
adc
sbb
sti
test
sbb
jno
dec
jnp
dec
inc
add
cmp
mov
loopne
pop
mov
mov
notb
aas
push
lret
int
or
gs
fwait
mov
xorb
incb
pop
movsb
stos
add
inc
push
sub
pop
mov
jo
mov
sub
mov
push
lods
scas
or
cmc
mov
divb
clc
push
mov
int3
sub
pusha
movsb
pop
pop
mov
mov
pop
mov
int3
mov
testb
sbb
mov
loopne
push
repnz
xor
sub
cltd
test
push
mov
and
lods
das
cmpsl
mov
or
mov
sti
push
aaa
pusha
test
cmp
mov
mov
andl
mov
add
push
jno
sbb
jecxz
pusha
scas
int3
pop
ret
dec
push
aad
divl
jg
mov
jo
leave
pop
inc
pop
ror
dec
push
pop
mov
scas
inc
sar
imul
adc
cwtl
pop
pusha
dec
incl
xchg
mov
mov
pop
inc
jecxz
fcomi
inc
scas
movsl
imul
jp
sbb
rcrl
add
scas
sbb
hlt
mov
push
clc
pop
mov
dec
sti
icebp
pop
or
outsl
push
ss
xor
or
out
fldl
loope
test
in
mov
int
mov
mov
mov
aaa
cltd
cltd
xchg
xor
mov
dec
jecxz
mov
adc
jge
push
jnp
in
dec
dec
test
imul
add
pop
lahf
cmpsb
imulb
add
sbb
mov
pop
insb
fcmovne
pop
mov
nop
out
inc
pop
adc
xchg
inc
stos
sbb
mov
lds
mull
dec
pop
cmpsb
adc
shlb
mov
sbb
mov
pop
js
xor
mov
sahf
clc
dec
sbbl
push
push
bound
cmp
test
pop
inc
movsl
mov
cmp
push
bound
xchg
aaa
test
pop
or
mov
mov
sbbl
and
imul
cmpb
shlb
cli
cmp
pop
add
mov
pop
lahf
mov
pop
or
add
sbb
inc
cmp
lock
mov
dec
mov
pop
xchg
dec
mov
or
or
mov
mov
call
mov
xor
sbb
aam
ljmp
jp
mov
xchg
pop
mov
jbe
pop
ficoms
ss
push
sbb
pop
or
jbe
nop
decl
jb
xor
in
lock
lret
pop
hlt
es
push
stc
pop
clc
dec
shll
jae
mov
icebp
pop
bound
pop
pop
jno
imul
sbb
jne
inc
xchg
push
popa
imul
cmp
jb
push
repz
inc
pop
aad
pusha
cltd
pop
fbld
sub
sbb
outsb
lahf
clc
cmc
pop
push
pop
mov
xchg
dec
pop
cli
inc
cmpsl
mov
pop
popa
xchg
in
mov
call
repnz
ljmp
pop
into
and
cli
dec
push
scas
fsubl
mov
sti
mov
test
xor
or
repnz
mov
xchg
pop
iret
adc
push
pop
dec
or
int3
jg
mov
or
cmp
lahf
call
jbe
inc
imul
cmp
bswap
pop
cld
int
push
push
jmp
scas
mov
jnp
xor
xchg
fs
inc
jge
sbb
or
lahf
pop
lock
dec
mov
pop
stos
int
and
test
imul
pop
mov
cwtl
sbb
and
pop
xchg
out
inc
mov
add
mov
jno
aaa
jecxz
pusha
mov
ret
mov
pop
pop
mov
test
test
mov
pop
sbbl
adc
pop
dec
stos
pop
xor
adcb
cltd
adc
or
dec
daa
pop
lcall
pop
inc
cmp
inc
sbb
test
in
or
dec
rcrb
cltd
mov
pop
or
outsl
inc
dec
add
dec
lret
jle
jo
sbb
push
or
aad
adc
or
in
add
iret
sub
int
lods
fcoml
fisttps
rcrl
std
dec
popa
orb
loope
repz
lret
inc
jo
mov
call
clc
sub
pop
or
mov
pop
and
daa
fidivs
lahf
mov
mov
jae
std
xchg
add
in
xchg
pop
inc
mov
icebp
dec
ficompl
push
push
mov
push
aas
fcmovnb
pop
jo
aam
pop
jg
pop
pop
loope
sbb
pop
add
mov
pop
cmp
mov
clc
fucom
mov
lock
and
push
jns
mov
insl
fsubp
mov
adc
cltd
cmp
pop
cmpsl
or
xchg
inc
jae
mov
shr
aad
jg
sub
fmul
pop
ds
sbb
adc
jge
sbb
pop
roll
in
pop
sub
mov
into
fsubrs
xor
pop
mov
in
or
addr16
int3
divb
dec
popf
pop
lods
jnp
scas
in
outsl
pop
sbb
dec
push
mov
popf
xlat
jg
hlt
xchg
in
pop
xor
aaa
push
add
ds
das
rolb
push
cmp
pop
mov
jecxz
repz
pop
pushf
mov
jge
pop
loopne
jb
aam
dec
lret
insl
subl
mov
adc
add
arpl
sub
pop
xchg
push
sar
dec
pop
mov
leave
xchg
test
aad
mov
pushw
add
cld
outsb
or
xchg
imul
xchg
push
push
pop
sub
shr
testb
sub
mov
jge
push
sub
scas
outsl
dec
jns
ror
mov
jnp
pop
imul
push
mov
add
sub
or
stos
imul
xchg
lret
pop
lock
out
test
jo
fstpl
int
lahf
lret
push
test
pop
shll
lret
pop
jb
and
nop
int
push
popa
mov
arpl
pop
mov
lods
mov
lcallw
orl
xchg
aam
jmp
dec
jecxz
mov
dec
sub
or
js
loope
inc
lahf
lcall
jb
mov
jmp
loop
adc
xchg
pop
adc
scas
add
pop
jecxz
fistl
xor
cwtl
jb
adc
add
cmp
andl
pop
mov
aad
out
insb
arpl
out
push
adc
test
jnp
icebp
jns
ljmp
lret
push
ss
mov
fldt
pop
leave
gs
pop
jae
lds
adc
iret
lret
ja
cmp
push
sbb
pop
mov
mov
cmc
ja
adc
xchg
pop
jl
xor
pop
negb
xlat
loopne
sub
mov
jae
mov
daa
je
dec
stc
jb
xor
stos
out
jecxz
mov
pop
data16
je,pn
ljmp
negl
add
mov
sbb
movsl
push
sbb
xchg
sbb
mov
hlt
sbb
mov
fcomps
or
mov
xchg
pushf
mov
out
lea
mov
dec
jbe
xlat
mov
sub
jmp
mov
sbb
in
repnz
out
ret
gs
jle
mov
or
mov
jl
dec
mov
aaa
push
popl
dec
pop
roll
push
out
pop
xlat
outsb
and
rcrl
xor
mov
pop
outsl
dec
shrl
jo
pop
dec
orl
mov
and
les
push
pop
jbe
adc
fldcw
push
pop
pushf
add
shl
xchg
hlt
pop
repnz
inc
mov
cmpsb
sti
mov
pop
inc
jb
popa
xorl
cmp
mov
lret
pop
stc
mov
jns
mov
repnz
jo
pop
int
lds
fsubl
mov
scas
pop
movsb
dec
cmp
pop
popf
xchg
inc
inc
pop
ret
mov
adc
add
stos
vxorps
add
pop
pop
xchg
and
and
jge
lods
pop
ss
xchg
push
inc
nop
pop
ret
inc
mov
int3
vaddps
cmpsb
add
mov
lods
pop
fstpl
pushf
mov
mov
imul
int
adc
fnstenv
pop
xor
pop
cmpsb
mov
push
pop
mov
fwait
clc
imul
jecxz
xchg
add
lret
addb
fdivrs
movsb
mov
int
jg
lea
pusha
lods
popf
pop
jnp
sub
mov
xchg
rcll
sahf
fs
inc
out
jge
adc
xchg
pop
xchg
mov
mov
mov
push
jbe
xchg
pop
test
repz
int
xor
out
scas
lahf
adc
inc
flds
jle
pop
in
lcall
pop
or
leave
lret
push
or
push
pop
dec
jbe
xor
sbb
pop
aam
mov
pop
frstor
sub
adc
scas
dec
ljmp
fsubs
sbb
das
pop
int
adcb
or
insb
aaa
lock
inc
mov
icebp
lret
add
mov
in
pop
inc
push
adc
fadds
movsl
pop
fisubs
lret
loope
lods
mov
ficomps
shl
sarb
push
jge
cwtl
fnop
cmp
pop
stos
mov
sub
push
jecxz
testl
mov
and
xor
inc
add
pop
arpl
stc
adc
pop
dec
int3
fistpll
les
jge
int
inc
cmp
pop
xchg
test
mov
scas
dec
and
pop
mov
sti
add
pop
xchg
iret
int3
mov
sub
pop
pusha
pop
and
rcr
pop
pop
cmp
aaa
jbe
ficomps
lret
sbb
lret
pop
pushf
cmp
jecxz
inc
ror
or
in
pop
int
mov
addr16
rcrb
jo
mov
pop
test
mov
mov
stos
je
dec
mov
inc
divl
lock
icebp
cmpsl
movsb
mov
sbb
stos
dec
pop
add
test
fdiv
pop
pop
repz
insb
out
out
mov
jb
lods
and
jp
pop
scas
in
push
sub
test
jnp
fstps
loope
sbb
fldt
jecxz
inc
mov
jns
adc
sbbl
bnd
adc
push
in
sbb
add
pop
std
adc
mov
imul
negl
jge
sub
cltd
dec
mov
and
inc
push
scas
add
imul
mov
sbbl
enter
add
pop
and
cmp
dec
and
jmp
into
cld
bound
xlat
je
inc
xchg
mov
lods
pop
insl
adc
cltd
pop
and
icebp
mov
jns
dec
cli
jecxz
arpl
lret
insl
mov
push
mov
mov
mov
jmp
pop
fmul
fwait
mov
xor
pop
mov
or
fidivs
int3
cli
mov
xchg
frstor
add
lods
lock
jg
sbb
add
pop
sub
sti
mov
imul
pop
inc
stos
xchg
je
inc
sbb
mov
inc
adc
test
int
fnstsw
fidivs
lret
inc
insl
mov
cmp
mov
add
arpl
pop
call
xchg
inc
add
jl
lds
xor
scas
lahf
adc
inc
sbb
imul
pop
pop
sbb
lret
test
loopne
lcall
cs
push
ja
lahf
inc
inc
and
negl
pop
test
cmp
lcall
frstor
mov
pop
dec
or
jo
add
and
xor
in
pop
lods
outsl
pop
jbe
push
push
loope
jmp
test
inc
cmpsl
out
mov
imul
sbb
mov
sarl
xchg
addr16
fs
push
pop
lea
jns
pop
or
aad
imul
xor
jp
dec
sbb
ss
xchg
fsub
test
outsb
scas
cmp
and
out
sub
pop
sahf
pusha
roll
imul
mov
push
mov
cmp
movsb
inc
rclb
test
rolb
aam
rorl
cmp
dec
cs
lock
or
add
pop
call
popf
andl
lea
fistps
imull
cmp
jp
aas
call
pop
mov
fs
inc
test
xchg
out
or
out
pop
daa
dec
push
cwtl
aad
arpl
xor
testl
es
lods
pop
push
stos
fstpl
add
insl
fsubs
cli
mov
pop
jns
xor
adc
push
mov
hlt
cltd
fildll
clc
pop
pop
push
xchg
daa
testb
sbb
ficoml
xor
pop
mov
rcl
or
jbe
ds
frstor
jl
adc
pop
je
cmp
je
mov
rcrb
je
repz
int
or
jle
sbbl
stc
fisttps
lret
jecxz
inc
pop
mov
cmp
ds
push
movl
xchg
adc
cmp
inc
mov
pop
mov
insb
push
pop
dec
or
popf
out
jge
pop
sbb
dec
jns
xchg
sbb
sbb
mov
and
cmp
fdivrl
pop
mov
adc
pop
popa
inc
outsb
fnsave
lods
and
jle
adc
rcll
popa
adcl
int
arpl
push
cmp
mov
es
and
outsb
pop
pop
clc
jae
add
xor
sbb
jo
pop
loope
mov
cmp
mov
jge
in
lea
jecxz
mov
xchg
adc
pop
and
adc
fdivrl
cli
in
pop
xor
je
nop
add
pop
sub
ja
mov
xlat
mov
cmp
aad
sbb
xor
pop
aad
xchg
std
pop
cmp
outsl
arpl
inc
mov
dec
mov
enter
filds
je
mov
push
fcoms
test
lret
push
xor
xchg
mov
sti
stos
mov
add
lcall
repnz
pushf
int3
fs
js
jbe
outsl
mov
or
clc
pop
push
dec
fidivrl
leave
scas
pop
data16
outsb
dec
inc
pushf
mov
imulb
stos
push
sbbb
add
shrl
pop
mov
sbb
int
lahf
andb
fsubs
and
pop
test
cmp
adc
imulb
xlat
xor
mov
fstps
jp
adc
inc
xor
and
sbb
push
push
jp
sub
in
pop
xchg
data16
inc
daa
sub
repz
xlat
pop
add
cmpsb
pop
sub
pop
out
pop
rcll
push
lcall
lahf
dec
add
mov
ficoml
ret
cs
movsl
sbb
clc
orl
pop
movsl
mov
pop
insb
xchg
mov
cmp
or
add
scas
sbb
cwtl
lcall
call
shll
je
mov
pop
les
imul
out
jno
pop
ds
fs
inc
fdivp
push
stc
pop
cmp
dec
scas
jo
add
pop
mov
mov
pop
mov
je
fucomp
or
jl
and
xor
or
adc
int
sub
cmp
pop
inc
test
cltd
out
pop
xor
mov
test
lea
je
push
das
inc
fisttps
rcrl
stos
in
cmp
mov
sub
ret
cltd
adc
xor
add
pop
lods
jne
roll
cmpxchg
pop
in
and
jne
stc
je
push
inc
int3
pushf
add
ficompl
pop
dec
pop
aaa
or
adc
push
fs
in
xchg
dec
int
es
in
cs
adc
mov
sbb
repz
fistps
mov
dec
sbb
arpl
int
aas
xchg
leave
xor
js
insl
pop
jae
and
inc
xor
jecxz
in
pop
jp
sub
cmpsl
dec
repz
pop
test
pop
jne
fiaddl
push
arpl
or
lahf
mov
xchg
dec
lods
daa
sub
movsl
pop
ds
rcrl
mov
arpl
mov
int3
insb
scas
sub
mov
out
push
mov
cltd
mov
call
push
lods
aad
rclb
stos
push
ljmp
jne
inc
mov
rcrl
dec
jl
jmp
int
pop
repz
adc
pop
inc
or
das
stos
jb
sub
aam
lret
lods
mov
sub
int
pop
push
les
lock
das
mov
lea
xchg
mov
pop
and
iret
hlt
xor
xchg
add
mov
mul
pop
ficompl
addr16
mov
push
rcrl
fiadds
push
jns
cmpsl
fsub
sub
shll
sbb
jmp
and
scas
in
or
jl
loop
inc
out
xchg
pop
fsub
cmp
js
lahf
cmpsl
mov
mov
pusha
sar
mov
out
pop
std
dec
jl
pop
fistl
xchg
push
fistps
mov
rorb
inc
fsubs
mov
pop
leave
xor
and
pop
enter
pop
int3
ds
pop
sahf
ja
jae
int
push
pop
jp
cwtl
enter
movsl
pop
clc
mov
sti
push
pop
aad
mov
mov
push
pop
fnstenv
out
add
movsl
push
jmp
cmpb
cltd
jmp
in
fmuls
fimull
popf
mov
cmc
arpl
pop
in
jno
test
iret
dec
lret
pop
and
inc
roll
sbb
mov
xchg
hlt
add
jo
jns
in
repnz
cmp
std
sbb
xchg
add
xchg
cwtl
push
popf
dec
dec
add
imulb
out
cmp
aad
xchg
cmp
and
pop
cmc
mov
int
mov
in
pop
lods
and
jb
nop
dec
mov
inc
and
ljmp
in
aaa
lods
in
cmp
ficompl
imul
xor
or
xor
lock
jae
dec
adc
int
pop
xchg
fs
xchg
fdivrs
das
dec
or
add
pop
mov
xchg
jle
lcall
cltd
jmp
push
xchg
pop
push
xor
jp
insl
push
adc
call
mov
sbb
adc
xchg
aas
jl
pop
sahf
mov
add
dec
cwtl
cmp
int
mov
sub
jo
pop
pop
pop
mov
les
pop
out
pop
outsl
add
daa
inc
dec
and
repnz
lcall
mov
push
pop
jnp
jbe
adc
jp
xor
testb
adc
sti
decl
push
push
out
pop
dec
add
cmc
mov
pop
addr16
aam
stos
inc
mov
xchg
fnstsw
jge
and
lret
mov
pop
sahf
stos
lret
dec
pop
outsl
and
loope
pop
or
sbb
mov
cwtl
pop
cmp
sub
lods
fdivrl
xchg
pop
adc
xchg
dec
rolb
jno
jle
and
add
arpl
jnp
outsl
push
pop
and
xor
pop
jl
xchg
push
in
ja
and
aam
mov
test
rcrl
loopne
sub
jne
pop
test
push
out
cmp
mov
sahf
jo
jecxz
pop
cmp
test
fisttpll
xchg
fldl2t
shrb
pop
aaa
dec
ss
test
sub
insl
push
ret
dec
and
push
dec
ss
adc
jmp
dec
pop
pop
jb
dec
push
aas
xchg
mov
ja
lods
jg
pop
shll
mov
sub
out
xchg
jecxz
or
fstpt
enter
cld
sti
sub
pop
loop
mov
iret
pop
je
jno
aam
inc
mov
cmp
jmp
int
icebp
xlat
sti
xchg
cmc
bnd
rcrl
push
int3
xchg
ja
pop
pop
pop
stos
loope
notb
data16
fiaddl
test
xchg
pop
adc
movsb
and
rcll
push
lods
jle
add
dec
lret
add
push
in
cmp
mov
adc
pushf
xchg
fsubs
cltd
sbb
xchg
pop
add
jp
cmp
scas
inc
pop
cmp
sti
adc
stos
fisttps
pop
faddl
jp
aad
sbbb
pop
outsb
or
mov
push
pop
add
inc
push
push
mov
ja
jo
cmp
xlat
mov
pop
sbb
int3
dec
mov
dec
xor
fstpt
lcall
lahf
clc
or
jne
lds
and
out
lods
frstor
loope
int3
push
add
mov
insl
jecxz
jmp
mov
push
stos
jne
clc
push
scas
jne
fmuls
fsubs
mov
cltd
xchg
jp
outsb
and
sbb
test
jne
insl
stc
hlt
cmpsl
test
loopne
xor
pop
js
mov
fs
push
movsb
mov
mov
jg
test
mov
jb
xchg
stos
pop
mov
icebp
scas
int
sbb
xlat
in
aas
aad
sbb
mov
test
pop
push
data16
add
sbb
mov
inc
adc
mov
inc
cltd
bound
scas
lret
xor
mov
push
jbe
not
pop
pushf
mov
in
clc
int
dec
xchg
aas
fld
jbe
push
das
mov
mov
lret
mov
arpl
inc
push
xor
fadds
dec
mov
and
push
cs
icebp
clc
negl
bound
jecxz
or
stos
incb
jmp
pop
rorb
movsl
or
jne
pop
jecxz
cmp
ss
jb
out
dec
bound
dec
sbb
test
pop
xorl
into
popa
repnz
pop
cs
lods
sbb
push
dec
and
loope
cli
dec
mov
pop
and
int
mov
mov
shlb
cwtl
dec
mov
add
pop
int
arpl
ds
cli
mov
fs
out
cmp
lahf
pop
xchg
mov
movsb
repnz
push
mov
sub
popa
mov
push
cmc
sbb
mov
xlat
xchg
pop
sbb
cmpl
pop
mov
popf
cmp
jb
mov
inc
pop
xor
jne
add
mov
pop
xchg
push
jp
js
mov
mov
cmp
pop
ret
sti
insb
jbe
add
mov
fstps
enter
mov
push
nop
pop
in
dec
arpl
subl
dec
xlat
fcomps
add
pop
xchg
cld
or
mov
mov
push
gs
fnstenv
mov
lcall
pop
lods
test
dec
pop
mov
jno
sbb
cmp
inc
xor
dec
mov
ljmp
and
dec
add
stos
sbb
addr16
ret
jmp
push
outsb
jnp
repz
pop
je
xor
jbe
sbb
add
sub
pop
cltd
shlb
sbbl
stc
test
pop
aaa
outsb
pop
sbb
ret
jne
ret
sbb
out
lcall
sbb
leave
sbb
mov
test
xor
mov
fidivrl
cmc
lret
sahf
add
cmc
pop
test
sub
jbe
dec
les
pop
xor
ds
inc
pop
in
or
cs
and
fdivs
adc
fiaddl
fimuls
xchg
jae
ja
add
inc
pop
xchg
cli
jno
jb
xor
pop
adc
xchg
mov
mov
push
add
sbb
pop
lahf
out
hlt
jp
data16
lds
mov
arpl
and
and
or
push
daa
mov
and
mov
js
in
mov
int
inc
jp
test
pop
mov
push
stc
pop
mov
int
aam
and
pop
in
stos
push
mov
jne
gs
sbb
scas
lea
jl
and
jno
enter
leave
mov
mov
hlt
gs
pop
shrl
cmc
lds
dec
pop
xor
push
jb
int
test
das
cmp
imul
sbb
pop
xor
pop
ret
jecxz
movsl
rol
sub
and
jbe
scas
inc
mov
arpl
mov
mov
sub
xor
sarb
scas
push
mov
cwtl
mov
popf
mov
ficompl
pop
xchg
ja
mov
mov
jge
in
pop
mov
adc
pop
int
mov
sub
cmp
rolb
sub
out
gs
dec
stos
jae
pop
jns
and
dec
in
addps
lahf
test
xor
pop
or
das
pop
mov
and
pop
mov
rcrb
shl
cltd
mov
fidivs
je
dec
mov
jb
pusha
outsl
jmp
xor
or
cmp
push
cmp
dec
mov
in
and
push
pusha
cmp
pop
add
aam
rcrb
leave
fstpl
sub
dec
rcll
push
in
lods
and
sub
out
lahf
jecxz
sbb
or
fdivl
jge
int
pop
sub
stos
dec
pop
inc
scas
int3
or
push
inc
adc
jb
or
jmp
repz
pop
xor
xor
add
mov
inc
pop
outsb
lret
cmp
pop
xchg
hlt
xchg
push
cmp
sbb
clc
xor
xor
cltd
fwait
int
pop
mov
jnp
orb
inc
pop
or
call
sub
xchg
pop
xorl
push
sub
das
pop
int
daa
jo
insb
jmp
mov
push
and
out
mov
dec
adcl
cwtl
jmp
gs
xor
fldl
pop
push
in
jp
adc
dec
dec
sahf
pop
test
mov
cltd
lods
pop
jl
fnclex
mov
jo
fists
gs
mov
jbe
xor
and
sbb
out
loope
sbb
jmp
je
ret
sbb
push
add
or
pop
or
cwtl
push
je
pop
and
int
jl
mov
xor
stc
or
sbb
mov
cmc
repz
fcoms
je
xchg
mov
pop
sub
lea
pop
adc
mov
pop
popf
jne
lods
ja
dec
mov
aaa
int
imulb
js
icebp
mov
xchg
inc
fsubrs
xchg
pop
cmp
dec
mov
ss
xchg
sub
out
fnstenv
stos
sbb
pop
mov
sub
lds
hlt
dec
jecxz
lods
inc
out
movsb
arpl
stos
jg
das
xor
sbb
clc
dec
and
loope
lods
cmp
add
outsl
std
ljmp
dec
bound
mov
pop
hlt
mov
das
cmp
push
icebp
ret
or
pop
fs
int
call
fnstcw
daa
ds
sub
cmp
popf
dec
pop
sarl
enter
popa
je
inc
lcall
xor
mov
pop
push
sbb
imul
pop
adc
xchg
or
dec
mov
inc
pushf
push
arpl
fadd
push
pop
pop
dec
lret
fistpll
mov
or
int3
pusha
mov
sub
and
xchg
loope
incl
sub
add
stos
or
adc
or
and
out
pop
fdivl
loope
inc
loop
fnstenv
hlt
dec
push
sub
pop
scas
cmp
push
pop
jbe
pop
fcomip
lds
stc
mov
add
in
bound
ss
xchg
imul
test
repz
dec
add
cmp
loope
imul
add
ja
ds
push
xor
mov
jbe
sti
and
mov
pop
cltd
adc
std
clc
fdiv
sub
clc
outsl
dec
dec
pop
dec
cmp
js
rcrl
lcall
loopne
cmovp
pop
cld
xchg
das
in
push
out
imul
ja
jge
pusha
adc
mov
pop
push
test
inc
cmpsb
notb
push
pop
or
xor
pop
cmp
in
xchg
jns
addr16
sbb
movsl
clc
inc
mov
pusha
add
mov
pop
sub
inc
sarl
pop
arpl
xlat
pop
leave
xor
es
or
scas
push
inc
mov
inc
mov
ret
xor
mov
bound
push
fldt
mov
mov
lret
popa
ds
outsb
and
imull
xor
or
and
clc
mov
inc
subb
bound
jne
mov
push
pop
xor
mov
popf
pop
xlat
pop
xchg
stos
cmp
inc
aas
iret
mov
insl
repnz
daa
clc
pop
adc
imul
jb
pop
inc
popf
mov
cmp
jp
mov
cmpsb
lea
test
mov
pop
subb
pop
or
in
shrb
inc
pop
cmp
mov
iret
add
cmp
pop
and
cmp
sbb
cmpsb
mov
inc
inc
jle
sub
pop
jecxz
xchg
iret
aaa
cmp
int3
sti
mov
dec
cmp
add
pop
gs
mov
push
pop
lds
and
out
popf
and
mov
out
lds
shrl
sub
adc
int3
push
and
or
movb
pop
fsts
stc
pop
dec
test
sub
jmp
gs
or
mov
int
movsb
jecxz
jmp
sub
adc
mov
cmp
lock
xor
jg
add
or
clc
loope
mov
mov
aam
fcoms
push
inc
pop
clc
cmp
dec
test
sbb
cmp
mov
add
in
jge
mov
pushl
das
mov
lods
es
xchg
jp
pop
call
mov
clc
pop
mov
xchg
negb
xchg
jbe
mov
adc
js
popf
pop
or
fisubrl
pop
push
xchg
mov
xchg
imul
push
int
stc
mov
fsubrs
or
js
jecxz
pop
jb
arpl
pop
add
pop
or
adc
pop
mov
sub
push
inc
push
jno
xchg
and
sbbl
ss
and
adc
adc
fwait
jo
ja
add
sbb
hlt
setl
fnstsw
dec
into
pop
jbe
iret
cmp
aad
inc
xchg
add
xchg
pop
sub
scas
std
xchg
push
je
insb
sbb
mov
pop
xchg
fnsave
xor
loope
pop
movsl
scas
xchg
pop
das
in
addr16
inc
outsl
xchg
dec
neg
mov
mov
je
pop
jmp
push
jge
notl
nop
mov
add
inc
pop
adc
scas
xor
int
and
jmp
nop
add
adc
pushf
lret
add
add
mov
out
pusha
cld
cmp
dec
repz
and
lret
fiaddl
jo
xchg
add
pop
or
ja
sub
pop
and
or
push
xchg
ficompl
push
xchg
mov
dec
pop
mov
jmp
push
pop
scas
xor
outsl
out
pop
pop
jns
cltd
xlat
or
or
sahf
pop
pop
lods
cmp
sbb
call
sbb
pop
popa
fcoml
and
outsl
int3
mov
mov
fistpl
inc
or
pop
push
nop
mov
sbb
dec
mov
pop
scas
in
leave
xchg
not
pop
inc
dec
dec
jbe
mov
xor
lock
cmp
ja
jno
test
and
imul
in
je
cmp
pusha
xchg
sti
jno
out
mov
and
or
pop
aaa
out
fsubrs
lods
cmpsb
int
pop
adc
in
hlt
arpl
in
sbb
pop
out
sub
out
sub
test
lret
xchg
sbb
xchg
mov
pop
hlt
shlb
mov
mov
dec
jo
pop
and
ljmp
shll
or
xor
aad
int
xor
xor
je
add
call
jno
out
pop
xchg
fsts
inc
cwtl
pop
in
cmp
stos
stc
push
pop
xchg
xor
jo
pop
pusha
adc
jmp
pop
sbb
gs
push
or
nop
mov
cmp
pop
rcrl
rolb
out
pop
mov
sub
int3
scas
push
daa
fwait
imul
pop
or
loope
cld
ljmp
xlat
jecxz
pop
pop
std
hlt
imul
jno
mov
dec
fwait
dec
adc
sbb
cmp
pop
orl
call
out
sub
lahf
flds
lret
movl
out
pop
xchg
gs
cmp
fcoms
fsub
pop
jnp
mov
inc
int
cmp
cmpl
jl
adc
js
pop
cmp
xor
dec
sbb
jl
push
testl
jbe
pop
push
lock
out
jb
and
lcall
fisttpll
outsb
fwait
pop
sbb
std
cwtl
out
mov
ds
push
stc
out
sub
imul
ja
mov
aad
test
push
pop
cltd
or
lods
pop
mov
jp
pop
mov
imul
jo
pop
rolb
mov
leave
ss
enter
out
jbe
fdivl
lahf
sub
pop
int
dec
outsb
leave
pop
stos
sub
fistpll
pop
out
fdivs
and
mov
arpl
test
mov
shlb
in
fstpt
ds
sbb
into
repz
cli
pop
sub
shll
jecxz
jecxz
pop
lret
test
pop
jns
push
cmp
insl
mov
xor
cmp
aas
pop
popf
jbe
int
mov
lahf
add
xchg
fcmovnbe
xchg
jb
adc
mov
shll
jne
lds
pop
cli
les
xchg
cltd
mov
icebp
lret
pop
negl
dec
add
push
mov
mov
bnd
jo
pop
xchg
ret
in
adc
fistpl
pop
jb
loopne
sbb
gs
pop
outsb
adc
cmp
pop
int3
pusha
push
fwait
idiv
lods
push
push
push
mov
fsts
pushw
pop
out
jle
add
push
pop
and
push
lea
fstps
pop
jns
mov
in
pop
setge
insl
xchg
xor
mov
adc
out
jle
stc
into
jbe
xor
push
dec
lods
test
and
popf
inc
inc
sbb
les
cmp
fs
mov
imul
aam
xchg
movsb
xchg
orb
pop
std
xchg
push
ljmp
sub
int
scas
adc
movlps
cmpsb
ds
repnz
mov
les
push
dec
or
loop
sbb
pop
and
rcrl
mov
outsb
xchg
cmp
test
aad
dec
pop
pop
mov
out
push
dec
pop
outsl
sub
into
pop
cld
xor
xchg
in
adc
sub
xchg
cltd
ss
sti
mov
push
pusha
pop
sbb
into
loop
push
mov
mov
pop
fidivrl
lea
push
roll
add
pop
mov
xlat
xor
or
out
pop
pop
mov
scas
cld
xchg
cmp
sbb
scas
sub
insl
cmp
rorb
fcoml
push
dec
pop
cmc
mov
jae
or
xchg
arpl
pop
sbb
mov
mov
or
dec
int
test
xlat
lret
sub
ficoms
pop
cmpsl
jae
jo
cmp
out
sbb
test
dec
or
add
jo
ret
sub
dec
insl
outsb
inc
scas
pop
pop
int
mov
inc
push
ja
xor
or
sbb
pop
mov
sbb
xor
aam
pop
pop
lahf
mov
loopne
cmp
xor
sub
test
pop
fisttpl
in
les
xor
je
mov
jo
int3
xchg
or
pop
add
cli
sub
loope
sbb
adc
bnd
in
pop
mov
pop
push
aaa
add
pop
mov
es
cwtl
inc
daa
sbb
jbe
mov
imulb
pop
call
int
mov
test
xchg
call
gs
pop
in
adc
frstor
mov
mov
leave
bound
sbb
pop
inc
mov
dec
scas
mov
push
popl
or
xchg
or
fistpll
or
lock
mov
fistl
cs
push
xor
popa
gs
cmp
or
lcall
and
pop
cmp
aam
andb
mov
push
sbb
fwait
dec
pop
jle
dec
incb
pop
sbb
inc
mov
pop
fnstsw
mov
movsb
sbb
pop
stos
leave
ret
pop
lods
xlat
sub
inc
xorb
pop
arpl
ffree
hlt
push
scas
lret
pop
scas
pop
negb
jge
imul
es
lcall
pop
ljmp
mov
insl
aaa
pop
call
das
pop
push
adc
pop
inc
mov
mov
jne
jp
pop
leave
mov
bnd
cmp
jbe
lret
pop
pusha
rorl
iret
jecxz
stos
mov
mov
gs
ds
test
jmp
ret
pop
mov
dec
xchg
movsl
add
cltd
push
ret
movsb
out
orb
pop
or
addr16
aad
pop
adc
fstpt
push
jl
xchg
pop
mov
mov
addr16
nop
xor
push
ds
scas
inc
pop
sbb
ret
cmp
incb
sbb
arpl
loop
aam
int
fcomps
fisubrs
insb
xchg
in
cltd
sub
in
lahf
push
mov
lods
mov
divb
orb
popa
fisubl
das
xchg
and
shlb
pop
push
outsb
into
inc
arpl
xchg
neg
sbb
lock
int3
repz
mov
mov
loop
stos
pop
popa
dec
add
pop
push
xchg
xor
enter
je
arpl
xchg
mov
mov
sub
pop
rolb
cld
rcrb
lods
push
aaa
jnp
pop
pop
jbe
int3
nop
in
imul
dec
in
aad
cli
push
int
insb
ds
outsl
popa
daa
cltd
lahf
cmp
jle
xchg
shlb
push
in
pop
sti
fidivrs
es
pop
shrl
xor
test
pop
pop
aas
hlt
cmp
pop
pop
outsb
pop
out
loop
je
xor
repz
jo
pop
cmp
xor
lock
xlat
pop
mov
lcall
fstpt
cltd
dec
fdivs
cmp
mov
test
shll
inc
sub
test
push
sarb
pop
xor
pop
lret
push
mov
jo
scas
sbb
and
imul
adc
rcr
fadds
jle
jns
stos
cld
jg
fcomi
pop
outsb
push
call
fldcw
pop
xor
test
dec
ljmp
jbe
arpl
imul
and
xchg
jmp
das
push
push
xchg
pop
lea
test
jecxz
push
imul
mov
and
rcl
jmp
nop
cltd
js
jl
in
pop
jb
pop
xor
call
movsb
sbb
int
jp
lahf
shll
cmpsl
pop
les
loop
pop
dec
push
jmp
imul
xchg
pop
xor
sbb
jmp
mov
pop
int
xchg
out
and
jbe
jne
sub
cltd
mov
mov
pop
les
jb
addb
pop
pop
gs
xchg
repz
pop
fmul
das
inc
pop
xlat
mov
cmp
stc
xchg
pop
cmp
pop
jmp
aam
pop
pop
test
ret
inc
jl
dec
movsl
addr16
jmp
lea
xchg
mov
and
push
ljmp
out
sub
lea
lahf
stc
mov
dec
push
sbb
mov
sub
cli
fisubrs
push
dec
js
mov
mov
aam
xchg
sub
into
test
sbb
jbe
pushf
pop
mov
or
fistpl
xchg
mov
mov
dec
pop
rcr
or
mov
pop
ficompl
mov
push
jno
pushf
lahf
sahf
lea
insl
shl
fs
clc
js
inc
outsl
iret
mov
jp
mov
pop
int3
pop
ljmp
mov
pop
pop
test
mov
jmp
inc
sub
mov
imul
adc
out
clc
push
mov
adc
jo
mov
std
sti
fs
add
fwait
mov
add
jno
sarl
or
sub
jbe
push
ret
xchg
lea
bt
int3
fisttpll
jnp
movsb
bound
mov
iret
int
lret
jne
imul
mov
and
pop
sbb
cmp
scas
leave
pop
out
sbb
mov
imul
push
movsb
fstps
push
and
stc
push
push
xchg
cmp
je
xor
dec
add
pop
push
stos
pop
adc
test
pusha
pop
mov
fstps
stc
mov
ret
mov
pop
gs
xor
ljmp
lahf
enter
testl
clc
scas
ds
dec
ret
rcrb
out
xchg
cmpsb
idivl
mov
inc
hlt
icebp
nop
fdivs
scas
pop
jge
stos
insb
mov
mov
jbe
mov
test
pop
mov
imul
mov
sbb
int
enter
sub
rcll
sbb
stos
jle
pop
ret
sbb
xchg
or
adc
rcll
test
mov
mov
pop
loop
jnp
imul
mov
ret
cmpb
pop
push
lret
outsl
ret
addr16
mov
adc
jbe
out
mov
push
adc
repz
scas
sbb
sbb
dec
mov
pop
imul
jle
int3
insb
adc
dec
pop
icebp
fs
int
hlt
jp
scas
push
fidivl
fcomps
aas
aam
xchg
xor
pop
dec
and
mov
sbb
pop
mov
push
int3
xorb
lahf
jno
int
fildl
ret
lea
mov
div
push
xor
jo
lret
mov
sub
loop
and
mov
cmp
jne
inc
test
mov
stos
daa
fiaddl
push
pop
lret
scas
aad
mov
pop
mov
insl
popl
cmc
test
sub
mov
jb
pop
pop
std
inc
adc
sbb
fsubr
lret
ret
shlb
sub
sahf
push
ja
adc
push
adcb
fidivs
pop
test
push
cmpl
imul
sbb
repz
mov
fmull
cmp
pop
pop
xor
call
push
pop
xchg
xor
adc
ficompl
or
pushf
mov
fstpl
inc
xchg
sbb
movsb
iret
push
movl
xor
insl
cmp
sub
xor
leave
xor
jnp
push
ret
mov
pop
cwtl
imul
or
out
xlat
sub
lea
fcoml
fnstcw
cmc
je
sbb
lock
dec
test
pop
insb
inc
fimull
pusha
pop
mov
mov
pop
jge
cmp
rcr
xor
xchg
iret
in
shl
pop
dec
push
adc
and
mov
pop
negl
mov
xor
cltd
jno
push
adc
adc
xlat
pop
push
lock
int3
rcrl
test
pop
dec
stos
imul
mov
mov
divl
in
in
mov
adc
pop
add
sbb
pop
jnp
mov
es
push
cmp
pop
xchg
cmp
enter
data16
shlb
pop
lea
jbe
push
fdivrl
mov
push
or
testb
shl
bnd
aas
shl
push
lods
adc
adc
pop
popa
or
scas
sub
add
daa
pop
out
insb
add
movsb
out
pop
aas
mov
ds
loopne
or
cmc
lret
mov
clc
lret
fstl
popf
push
push
pop
pop
cmpsl
stos
xchg
add
std
sbb
push
adc
xor
pop
xchg
pop
sbb
sub
mov
mov
fistps
jmp
pushf
mov
outsb
xor
dec
fnstsw
shll
pop
mov
pop
mov
mov
and
enter
adc
pop
lods
mov
mov
push
add
inc
dec
or
mov
push
test
mov
stc
nop
and
repz
jge
inc
pop
adc
mov
mov
pop
sbb
aad
cmp
cmp
outsl
push
xchg
cli
mov
pop
imul
pop
jns
jns
pop
lcall
pop
mov
mov
imull
jb
jecxz
sbb
pop
ret
scas
pushf
bound
data16
rcrb
jae
dec
aaa
xchg
clc
inc
push
mov
cltd
xchg
xchg
mov
inc
psubusb
movsl
pop
jbe
xor
xor
test
dec
mov
pop
test
dec
adc
pop
xorl
push
jecxz
mov
cmp
pop
lea
pop
scas
jbe
pop
lcall
or
pop
bound
aaa
sbb
jecxz
adc
ror
jg
inc
popf
jbe
or
icebp
push
mov
mov
lret
or
adc
ret
xor
pop
gs
addr16
push
jno
dec
pop
hlt
int
sbb
mov
pop
and
loop
out
inc
push
inc
mov
jb
fdivrl
add
pop
sub
sub
mov
fstps
pop
mov
int
jecxz
mov
or
mov
enter
cs
sarl
in
pop
push
jecxz
mov
pop
fisubl
cld
adc
mov
dec
repz
stos
inc
movsb
mov
dec
pop
mov
xchg
aad
pop
test
mov
lcall
negb
test
sbb
jbe
mov
int3
sub
mov
ret
sbb
cmp
mov
leave
lcall
movsb
push
dec
addl
sbb
dec
addr16
fistps
int3
imul
jbe
lahf
je
pop
xchg
lock
add
ret
jae
out
sbb
mov
push
ljmp
mov
xor
orl
out
out
jno
dec
jp
lods
lahf
scas
jg
dec
shl
fdivrl
or
mov
and
negl
or
insl
imul
cs
sub
mov
pop
mov
pop
hlt
dec
mov
inc
dec
or
in
adc
sbb
sub
pop
lahf
mov
clc
iret
leave
das
mov
lcall
ss
aam
jecxz
imul
cmpsb
dec
pusha
lock
leave
jle
and
aam
pop
add
add
decl
lds
and
adc
mov
cld
shll
lret
fildll
sbb
sub
lea
pop
enter
or
cmc
and
pop
inc
icebp
push
jge
jne
inc
jo
mov
and
inc
cmp
cmpsl
sub
stos
shll
data16
cmc
js
sbb
pushf
and
pop
jnp
pop
inc
mov
jb
test
pop
std
fbld
mov
out
in
jle
mov
ja
pop
dec
jp
stos
sahf
jns
out
popa
js
pop
data16
scas
mov
sub
mov
lods
div
push
popf
push
lret
pop
inc
add
jno
cltd
adc
lods
pop
jmp
adc
add
pop
mull
jbe
aaa
xchg
mov
aad
or
or
cmp
sarl
jmp
cltd
imul
fwait
inc
in
jle
scas
inc
rorb
scas
xchg
icebp
ss
enter
das
pop
jecxz
subl
xchg
hlt
sub
lcall
pop
push
rorl
in
adcb
lahf
sbb
fsubs
cmp
rep
and
pop
dec
sub
repnz
adc
pop
xchg
cld
shrb
out
push
je
pop
xchg
adc
or
sbb
add
loope
sbb
lretw
cs
int
in
mov
xchg
pop
insb
mov
pop
sbb
mov
push
pop
adc
mov
imul
pop
int
add
cmc
jecxz
clc
gs
sahf
xchg
ss
loope
push
adc
pushw
mov
dec
jbe
cmp
cli
jno
pop
pop
testb
iret
test
fidivrl
movsb
sti
and
push
jle
or
out
mov
iret
test
jecxz
mov
jb
daa
mov
add
lea
dec
int
fsub
mov
and
xchg
pop
setl
sbb
mov
aaa
rcl
insl
push
sub
jns
mov
mov
push
pop
bound
ficoms
or
adc
push
icebp
jmp
test
dec
mov
xor
out
int3
pop
jb
call
jle
rorl
cmp
mov
sbb
jecxz
add
pop
shll
cmp
mov
jbe
in
int3
pop
pop
ror
insb
lods
sbb
call
ljmp
add
pop
xchg
stos
sub
pop
sub
and
inc
pop
push
xchg
adc
xor
sub
sub
lods
mov
ret
int
xchg
dec
test
push
jl
faddl
jb
andb
add
idivl
pop
rcrb
jne
mov
shlb
pop
iret
jl
pop
sub
xor
pop
sbb
adc
lahf
das
pop
push
fldt
iret
mov
sbb
lock
adc
movsb
xchg
dec
int3
in
adc
fsub
jg
push
outsb
xlat
sbb
addr16
mov
cld
loope
xor
cwtl
and
out
dec
add
lds
cmp
inc
pop
push
repz
test
lea
pop
mov
add
xchg
mov
jne
pop
cmp
or
rcrb
or
pop
add
jns
mov
pop
test
mov
push
push
jmp
addr16
add
jmp
cli
into
arpl
xor
mov
mov
mov
int
adc
out
dec
inc
mov
pop
mov
ja
shr
pop
jge
fs
adc
mov
or
dec
mov
adc
int
aam
adc
sbb
call
inc
sub
pop
cltd
inc
jl
cmpsb
std
jns
pop
test
cli
lods
nop
fsubrp
inc
pop
push
out
dec
mov
bswap
popw
or
pop
add
mov
sub
mov
fsts
push
loope
push
rolb
lret
pop
mov
js
mov
divl
sub
lahf
inc
adc
ss
pop
test
fstpl
inc
fs
push
mov
pop
aaa
insb
aad
mov
jae
outsl
shll
jge
fisubrl
pop
int
mov
outsb
push
xor
xchg
dec
popf
push
sub
sbb
lea
int3
add
xchg
rcl
loop
aas
pop
fstpt
sbb
fidivs
pop
mov
pushf
and
out
in
add
inc
fdivs
stos
mov
arpl
mov
ljmp
sbb
lea
pop
testb
out
mov
mov
insb
sbb
cmp
aam
int
pop
mov
cmp
fcoms
add
mov
jbe
mov
xchg
rorb
movsl
cmp
pop
int
movsb
sbb
and
push
push
ficoml
out
lret
pop
mov
in
jbe
pop
jno
xrelease
pop
adc
sub
in
bound
xlat
popf
scas
cmpl
pop
insl
mov
mov
mov
jecxz
dec
pop
outsl
stos
pop
data16
sbb
arpl
add
mov
pop
and
pushl
or
jne
int3
roll
mov
xchg
inc
mov
mov
ret
xchg
dec
lea
adc
cmpsl
sub
add
sub
push
test
aad
sbb
push
mov
fcomps
jp
or
cmp
idivl
jge
jle
mov
xchg
inc
push
fimull
das
cmc
add
nop
jb
push
pop
pop
dec
out
std
add
pop
int
aas
sti
mov
and
imul
scas
shll
das
xchg
push
pop
int3
sub
xor
pop
mov
movsb
add
jno
jbe
mov
and
in
xchg
pop
aam
out
out
int
mov
ss
loope
push
xlat
or
push
movsb
mov
js
add
mov
xlat
pop
rorb
and
cmp
sub
icebp
mov
jne
mov
pop
inc
leave
pop
into
shl
mov
add
pop
sub
fsubr
and
push
cmp
fisttpll
mov
inc
inc
mov
insb
xchg
xchg
mov
pop
mov
xor
shlb
cmpsl
dec
ja
pop
loope
lcall
ljmp
out
adc
lods
cmp
test
or
dec
jns
inc
int
sub
push
lcall
pop
int3
push
jns
add
inc
repz
mov
sbb
fsubl
int3
dec
mov
je
daa
pop
inc
flds
sti
pop
aas
rorl
pop
shl
int3
fiadds
xchg
lods
pop
mov
outsl
pop
jl
inc
push
inc
rcrl
sub
popf
cs
rcll
pop
dec
push
aam
enter
or
xchg
push
sub
add
dec
stos
lods
pop
fmull
fnstcw
sarb
inc
pop
fisubl
pop
pop
out
jb
scas
daa
sub
push
sub
out
test
dec
aad
es
jb
xchg
fs
mov
pop
les
and
or
std
dec
inc
stc
pop
add
mov
ds
mov
insb
jg
mov
les
int
scas
rol
inc
pusha
mov
or
inc
dec
or
out
jbe
out
loop
pop
jb
repnz
fcom
mov
lea
xchg
mov
pop
adcl
lods
dec
xlat
sbb
lret
lods
scas
xor
in
test
mov
movsb
lock
mov
insl
aam
movsl
push
or
adc
scas
aam
ljmp
mov
push
and
pop
popf
inc
and
mov
jno
jp
shlb
fcomps
lock
pusha
add
add
and
jbe
cmc
mov
or
lret
xorb
lahf
in
iret
enter
and
fistpl
jb
into
pop
repnz
mov
jge
jb
and
adc
pop
stos
xor
sub
inc
pop
adc
ret
mov
shll
pop
adc
jo
movsl
pop
and
adc
jg
and
insb
pop
push
xchg
pushf
fmuls
sbb
lods
aad
js
jbe
jne
sbb
jno
xchg
pop
loop
int
xchg
mov
inc
mov
dec
pop
cltd
shlb
stos
sbbb
je
hlt
sbb
lea
shrl
stc
fmulp
pop
mov
mov
jbe
jle
push
lods
xchg
adc
adc
jno
mov
inc
cmp
cmc
jo
jne
mov
sub
pop
lds
les
inc
mov
mov
inc
jmp
sbb
repz
mov
dec
sub
jae
cwtl
mov
cmpsb
ljmp
dec
int3
sti
mov
pop
cli
dec
ret
sub
dec
mov
and
jecxz
sbb
repz
mov
jb
mov
mov
push
fs
lcall
jnp
mov
sub
xchg
icebp
or
loopne
xchg
lcall
jecxz
sahf
rep
fistl
jecxz
rcll
pop
out
pop
cmc
movl
push
pop
dec
fchs
inc
shlb
pop
lcall
push
pop
andl
inc
ret
jae
imull
mov
dec
fistps
pop
push
push
xor
pop
in
decl
inc
outsb
add
push
xchg
loope
mov
bnd
jecxz,pt
mov
dec
or
stos
pop
dec
lock
add
pop
bound
out
pop
out
lcall
pop
iret
and
push
popf
in
pushaw
orb
int
inc
lock
fidivrs
dec
dec
insb
gs
adc
dec
mov
lds
adc
and
pop
leave
std
pusha
sub
outsl
test
jecxz
mov
mov
sbb
or
in
rolb
inc
or
rcll
xor
mov
es
pop
dec
aaa
xchg
mov
fwait
cltd
sbb
out
pop
ficoml
jbe
pop
push
pop
jmp
int
mov
clc
std
add
adc
mov
inc
or
jecxz
push
outsb
popf
pop
mov
mov
sti
lods
cmp
mov
sub
push
push
fsubs
cli
add
test
jl
sub
inc
fbld
lea
es
test
pop
lret
int
jnp
mov
nop
out
sbb
insl
lahf
mov
fcmovne
int3
aad
jmp
add
and
aam
mov
push
pop
dec
scas
add
addps
dec
push
in
dec
push
lds
jno
pop
cmp
negb
pop
cltd
xor
lcall
aad
add
cltd
mov
pop
jns
or
in
pop
adc
pusha
fistpl
push
sub
outsb
pop
inc
and
mov
inc
pop
fninit
insl
sbbb
dec
mov
xchg
xor
mov
and
jp
insl
push
addr16
mov
int
xor
rcrb
sbb
jb
xchg
jge
mov
sbb
dec
sahf
push
pop
pop
sbb
enter
sub
notb
xor
mov
adcb
cs
cld
sbb
int
dec
sub
pop
jp,pn
mov
cmp
pop
adc
jb
lock
lret
sub
repz
or
xorl
push
mov
pop
xchg
or
mov
pop
pop
or
cmp
inc
fcomps
pop
ror
je
adc
lahf
jle
movsl
dec
pop
ficompl
notl
cmpl
std
jnp
mov
push
test
fisubs
addl
lahf
inc
subl
inc
dec
pop
push
cmpsl
jl
mov
push
sbb
dec
mov
inc
loop
adcb
outsb
stc
mov
inc
sbb
jle
daa
int3
mov
stc
out
je
dec
ficoml
xchg
sbbb
or
xor
mov
xchg
push
fisubl
pop
imul
pop
in
add
orb
test
pop
pusha
inc
jecxz
ja
pop
outsb
arpl
je
dec
xchg
repz
pushf
out
lahf
aas
or
inc
pop
in
ss
inc
or
mov
add
sbb
pop
pop
mov
lahf
mov
xchg
pop
lea
dec
pop
xchg
sub
pop
ffreep
and
xchg
hlt
pop
sub
imul
shll
xor
pop
stos
inc
or
js
sbb
jg
jbe
mov
xchg
sub
or
or
adc
pop
int
fadd
sbb
cmpw
in
inc
scas
adc
or
shrb
mov
sbb
mov
lahf
xlat
sarl
lcall
or
xor
sub
iret
sub
jbe
add
pop
inc
pusha
push
inc
mov
add
pusha
icebp
pop
pop
inc
cmp
push
cwtl
dec
insl
negl
xor
and
pop
cltd
pop
and
data16
push
pop
jbe
sbb
jl
out
pop
sub
int
loop
pop
mov
push
aaa
lcall
int3
cwtl
ret
mov
ds
lds
je
mov
shll
pop
and
push
push
mov
sbb
or
pop
pop
cmpsb
cmp
pop
adc
jae
sbb
test
jbe
cs
cltd
pop
xor
xor
ret
pop
popa
aas
stos
add
stc
rcrb
jmp
sub
cmp
sti
sbb
mulb
jns
pop
cmp
pop
shrb
fcompl
adc
and
loope
pop
sbb
lahf
jg
xlat
movsb
mov
sbb
je
movb
push
pop
dec
mov
and
stos
fistl
pop
jne
loop
xlat
test
pop
testl
inc
xchg
jbe
push
xchg
pop
je
jg
add
gs
daa
sbb
fstpt
jecxz
ja
pop
jl
ss
lret
mov
add
pop
int
pop
je
addr16
cmp
test
cli
aam
scas
mov
xor
pop
fldcw
rcr
xchg
add
pusha
add
dec
rolb
sahf
lahf
jbe
push
inc
inc
mov
mov
pop
int
fwait
push
aad
stc
sbbl
repnz
pop
out
dec
sbb
pop
or
adc
push
int
out
jge
aam
pop
add
nop
sub
and
sbb
mov
outsb
test
lods
pop
pop
jp
or
add
dec
scas
aam
sbb
psllw
push
fisttps
add
and
jo
das
or
add
jge
enter
adc
xorl
sbb
and
int
sub
add
jo
lock
mov
clc
hlt
push
movsb
int3
js
lcall
fisttpl
jmp
cli
mov
mov
pop
fldenv
mov
jle
lods
pop
sbb
inc
jo
xlat
mov
arpl
pop
push
pushf
cmp
pop
jno
mov
aaa
push
push
adc
pop
loopne
test
sbb
cli
pop
inc
xor
mov
sarb
test
int
dec
jbe
xor
and
xchg
test
sbb
sub
xor
xchg
iret
lea
jb
aaa
roll
std
mov
pop
lea
cli
xchg
pop
adc
cmc
push
pop
inc
pop
fisttpll
lret
pop
lret
mov
sbb
cmc
mov
pushf
dec
or
es
inc
jmp
dec
hlt
sbb
fisttps
push
lahf
pop
xor
mov
test
mov
das
shlb
pop
movb
iret
mov
xchg
stos
xchg
pop
pop
or
lahf
lods
mov
sbb
test
ja
pop
and
cmp
push
sub
push
mov
adc
lds
cmp
inc
xchg
lea
sarl
and
out
pop
dec
inc
push
xor
or
test
sbb
imul
cmp
pop
cmp
jne
enter
lahf
or
int3
shl
popa
pop
xorl
jecxz
xlat
push
pop
pop
mov
inc
sbb
pop
scas
clc
cmp
aam
imul
fdivs
mov
pop
incl
adc
sbb
repz
jo
and
pop
outsl
popa
int
sarl
pop
das
dec
shll
xchg
jns
pop
push
insb
lea
frstor
bound
pusha
cmp
mov
adc
pop
cwtl
pop
jb
mov
fstpl
mov
lret
loope
and
sub
push
pop
dec
shr
leave
mov
sbb
ljmp
test
bound
gs
outsl
fcoml
ja
sub
stos
jno
pop
in
xchg
mov
or
repz
pop
xchg
shll
es
push
sbb
xor
aas
imul
xchg
inc
pop
mov
cmovge
mov
jg
ss
cli
negl
mov
ljmp
movsl
adc
lret
pop
jecxz
rclb
les
mov
adc
add
xchg
or
fildll
pop
daa
adc
mov
lea
movsb
outsb
pop
int
dec
cmpsb
xchg
sub
stos
cli
out
pop
mov
or
jmp
push
inc
outsl
mov
inc
outsb
sub
xor
popf
jl
pop
add
jns
fwait
es
cmpsb
jb
inc
pop
fidivl
fmul
clc
ret
std
lea
idivb
push
cltd
call
mov
and
cmp
or
mov
and
mov
push
ljmp
add
cld
data16
jno
lret
mov
adc
aaa
int3
mov
dec
sti
pushf
pop
into
xor
push
pop
popf
test
clc
dec
repz
ja
test
sub
add
fcomps
fiaddl
fsts
sbb
pop
add
or
dec
idivl
pop
lods
and
push
and
jo
lahf
and
rcl
ficompl
and
rclb
pop
ficomps
testl
jg
lea
mov
cmp
int3
enter
popa
or
repz
fs
negl
pop
stos
push
adc
dec
je
push
add
cs
pop
pop
add
lahf
sti
mov
and
iret
mov
filds
jp
pop
fidivrs
or
pop
imul
daa
pop
outsl
mov
negb
pop
int
and
je
push
fistpll
pop
mov
xchg
out
hlt
fidivrl
fcomp
push
pop
jb
cmp
mov
aam
fnsave
pop
fnstenv
cmp
and
mov
pop
test
pop
scas
lcall
cwtl
fstpl
sub
inc
arpl
xorl
and
gs
push
aad
stc
inc
mov
ds
pop
push
loope
mov
pop
cmp
cmp
scas
insl
or
call
dec
sub
jnp
pop
fistl
pop
xor
in
sbb
lret
lret
push
mov
fnstenv
sub
std
popf
pop
push
jo
jecxz
stos
loop
pop
ret
out
pop
int
outsl
sbb
dec
cltd
sbb
dec
jae
mov
sub
es
icebp
push
std
sti
mov
lock
xchg
orl
popf
xor
inc
dec
sbb
jnp
mov
pop
fdivl
stos
loopne
cmp
sub
addr16
cli
xor
imul
pop
js
pop
sbb
adc
and
add
data16
repz
pop
lcall
pop
xor
sub
mov
fs
call
in
or
aad
dec
lahf
popa
jnp
aaa
fistl
adc
add
sub
outsl
pop
or
pop
mov
stc
shrl
pop
bswap
lods
mov
pop
inc
int
mov
pop
or
das
lea
clc
jle
inc
test
xor
xchg
add
pop
int3
jnp
cli
add
sbb
loope
cmp
mov
mov
jb
dec
pop
cmp
jo
pop
mov
and
push
insl
xchg
pop
test
scas
aad
ja
pop
cmpsb
inc
subl
pop
int
jae
ds
pop
jp
jo
inc
das
sub
jo
pop
push
xchg
mov
sbb
xchg
mov
in
rcr
mov
pop
jbe
push
shll
popf
repz
jb
lret
jnp
loopne
add
stos
pop
and
cmp
bound
das
dec
jbe
and
enter
or
int3
pop
dec
adc
pop
test
push
or
ret
mov
call
pop
adc
cmpsb
hlt
pop
ljmp
sahf
test
sahf
mov
mov
mov
lret
bound
xor
fcompl
pop
enter
adc
jb
insb
aad
shl
sub
pop
mov
loope
fcomps
add
mov
push
test
shrb
mov
in
jmp
xor
pop
testl
ds
pop
subb
pop
int
xchg
pop
fisubs
and
pop
movsl
mov
call
cli
jbe
adc
lea
cs
xor
sub
decl
in
pop
lret
push
mov
mov
pop
lret
mov
repz
xchg
or
mov
jb
lea
or
sub
shrl
je
sbb
jle
inc
jo
or
fildll
shl
sub
pop
int
sbb
adc
or
andl
pop
and
mov
jbe
pop
aad
inc
adc
pop
mov
jnp
xchg
dec
cmpsl
pop
popa
or
push
xchg
pop
or
xorl
jecxz
pop
das
fldl
pop
xchg
fxch
pop
mov
sbb
jo
mov
xchg
jle
adcl
ds
dec
sub
fcmovnbe
xchg
inc
and
mov
mov
lock
mov
xchg
adc
data16
push
dec
add
popf
mov
ffreep
stos
nop
xchg
scas
leave
pop
cmp
ljmp
cltd
fldcw
add
loop
sti
xchg
in
hlt
or
lret
out
shlb
jns
std
add
out
pop
cltd
lods
dec
inc
jle
pop
fcmovu
das
fistl
sbb
or
add
xchg
arpl
dec
add
nop
rcrb
jnp
sbbb
xchg
insb
sub
scas
pop
repz
mov
push
pusha
mov
jns
mov
push
pop
jmp
insb
ljmp
fcmovne
mov
fnsave
sub
lods
mov
stos
inc
push
imul
push
jg
inc
leave
mov
push
imul
idivb
pop
je
fiaddl
into
xor
scas
loopne
loope
cmp
jl
pop
lcall
fldl
insl
xor
je
mov
pop
movl
and
or
push
jg
jge
pop
test
filds
add
or
arpl
pop
stc
add
jbe
mov
pop
push
mov
ss
divb
inc
jns
divb
je
sbb
and
orl
sbb
add
mov
in
aam
dec
inc
push
test
ret
das
xchg
mov
sbb
pop
mov
pop
ss
divl
dec
in
mov
rcrl
int
movsb
scas
sbb
fs
mov
ret
fsts
dec
mov
dec
xchg
pop
rcll
pop
adc
push
pop
jg
dec
xchg
cltd
add
push
pop
mov
mov
cmp
sbb
mov
lods
pop
repz
out
daa
cmp
fistl
pop
pop
dec
push
or
dec
mov
mov
int
mov
push
and
inc
sahf
xor
negb
mov
mov
mov
pop
dec
lret
xchg
imul
sbb
mov
dec
sbb
push
and
cmp
fistpl
fcoml
jnp
xor
or
jp
mov
je
pop
jge
jmp
mov
xchg
xchg
loope
cmpsb
addl
imulb
pop
hlt
push
mov
mov
and
inc
mov
jecxz
mov
lret
or
arpl
fucomp
aam
or
dec
and
mov
push
fistps
iret
mov
sub
in
int3
ljmp
sub
xchg
add
lahf
or
pop
xchg
pop
add
sub
mov
and
dec
aas
in
fldpi
dec
sbbl
mov
and
dec
stos
cli
xchg
test
pop
jl
pop
sub
dec
adc
push
mov
ret
int3
cmp
scas
xchg
pop
jo
int
push
or
inc
dec
pop
push
and
and
dec
mov
pop
pop
jne
mov
popa
aas
xor
pop
popf
pop
sbb
and
push
sub
sbb
ss
out
ja
inc
or
or
push
adc
repnz
cmp
jo
cwtl
aam
mov
cmp
sahf
cld
push
sub
decb
sub
add
xchg
lods
and
hlt
scas
test
lcall
and
lret
pusha
adcb
cmpsb
xor
iret
mov
fmuls
out
test
jnp
add
enter
xchg
push
shlb
cmp
sbb
jmp
icebp
push
sahf
bound
ja
test
pop
sbb
les
mov
pop
and
out
xor
mov
in
cltd
mov
add
stc
enter
fisubrs
cwtl
mov
push
adc
inc
in
pop
push
dec
cmp
mov
in
int3
stos
pop
xchg
pop
lahf
xchg
push
sub
pop
jmp
scas
sbb
xor
pop
pop
add
outsl
pop
out
dec
ficomps
push
cld
shufps
jle
fs
cmpsb
int3
jecxz
jae
pop
js
jmp
jbe
outsl
mov
fcmovnb
sahf
pop
dec
ss
andl
push
push
and
sub
pop
dec
mov
stc
inc
pop
mov
cmp
push
pop
and
jae
mov
dec
cmpsb
and
inc
nop
addr16
insb
lods
aas
inc
adc
pop
mov
jno
std
pop
jmp
mov
nop
lcall
aad
ljmp
mov
xchg
pop
movsl
or
mov
sbb
sub
dec
pop
ja
ds
xlat
mov
push
into
in
popa
int
or
cmp
sti
inc
or
mov
arpl
ret
ss
es
jmp
push
or
pop
add
xchg
inc
or
pop
cli
ss
int
pop
imul
adc
pop
jge
dec
daa
cmpsb
sbb
sub
jno
jmp
stc
repz
ret
or
lret
sbb
ficomps
dec
xchg
loop
pop
or
insb
xor
pop
int
mov
sahf
push
inc
jbe
scas
fistps
push
and
add
mov
fcoml
mov
xor
fcmovnu
gs
mov
imul
pop
stos
out
push
sbbl
add
pop
ficomps
xchg
adc
sub
and
out
hlt
addr16
pop
add
and
add
lock
icebp
push
mov
xor
mov
ret
je
cli
stos
cmp
cmc
xor
pop
pop
aaa
inc
mov
cmp
ret
pop
lret
les
fildl
pop
xchg
jecxz
mov
pop
sbb
addr16
pop
pop
in
mov
sbb
or
inc
mov
data16
sbb
loopne
jo
or
loope
int
xchg
es
pop
stos
aad
jmp
scas
or
or
mov
pop
mov
ficompl
pop
sti
inc
mov
je
cmp
pop
pop
popa
data16
ja
adc
mov
mov
fcoms
jns
mov
add
cmp
pop
imul
mov
lea
or
pop
jg
adc
fimuls
lahf
ds
or
jbe
xor
mov
loope
push
push
xchg
enter
mov
in
ror
or
pop
and
dec
pop
sbb
fistl
mov
incl
adc
mov
sub
out
pop
jle
sub
out
mov
mov
popf
into
mov
rolb
shrl
fistpl
pop
jl
xchg
addr16
idivb
mov
pop
sub
rcrl
into
and
jmp
push
or
dec
inc
bound
jp
lods
mov
adc
scas
mov
inc
push
jl
and
es
hlt
jae
shrl
pop
inc
xchg
sub
mov
testl
lret
xchg
int3
xor
inc
enter
popa
and
mov
pop
jae
pop
or
pop
cmp
xorl
mov
int3
aam
sbb
pop
fdivrs
add
push
emms
xchg
aad
mov
pop
cmp
daa
xor
mov
ficoms
mov
add
stos
int3
cs
mov
push
ljmp
js
aam
xor
int
lret
add
push
pop
mov
daa
pop
lcall
out
adc
jnp
dec
lcall
pop
fidivl
scas
popl
dec
pop
adc
pop
test
int3
lret
stos
mov
inc
sbb
and
outsb
mov
push
ret
and
jo
mov
xor
mov
fwait
jle
stos
imulb
pop
or
into
je
fidivs
dec
pop
mov
adc
cwtl
push
mul
stos
pop
ds
xor
mov
out
xor
lods
mov
pop
in
mov
call
cs
pop
sbb
dec
sub
jle
xchg
xchg
cmpsb
lcall
int3
jp
dec
ret
pop
in
ljmp
cmp
mov
mov
subl
or
dec
pop
mov
jl
dec
xor
clc
cld
adc
or
xchg
lods
pop
pop
jb
pop
repz
dec
decl
shl
movsl
sub
ja
test
add
dec
incb
mov
ss
loop
lret
pop
pop
pop
inc
addl
sbb
into
pop
pop
push
icebp
cli
gs
mov
sbb
ss
mov
push
outsb
lea
push
pop
pop
xor
or
adc
clc
js
out
cld
pop
aaa
jmp
push
pop
inc
icebp
scas
fnstsw
jo
or
pop
jno
outsl
xor
mov
int3
pop
inc
push
es
cld
push
adc
js
dec
cmp
pop
jbe
jmp
mov
pop
push
arpl
xchg
and
xor
pop
outsl
and
sub
mov
sti
movsb
test
jle
out
xor
hlt
fstp
jns
pop
pop
ja
out
pop
addr16
out
sbb
pop
xor
cltd
loop
sub
pop
sbb
je
xchg
and
adc
push
imul
int3
popf
sbb
mov
push
fcmovb
test
mov
les
loope
xor
or
jle
sbb
xchg
dec
mov
pushf
push
push
int
mov
pop
outsb
shlb
pop
mov
enter
and
push
and
out
xor
icebp
xchg
xlat
mov
js
pop
inc
pop
pop
cwtl
in
and
stos
mov
xor
xchg
pop
dec
adc
add
sub
push
adc
pop
mov
jmp
pop
inc
out
or
sbb
rcrb
push
lods
inc
sbb
popf
xor
pop
int3
fstpt
rcrl
insb
out
or
push
mov
sub
cmp
outsb
cwtl
aaa
sbb
push
fisttpl
out
int
mov
es
test
in
or
fs
pop
mov
push
xchg
mov
pop
aad
mov
mov
push
push
ficoml
test
sbb
jge
pop
fsts
xchg
hlt
lea
mov
enter
test
xor
push
lds
arpl
sbb
dec
in
xchg
sub
mov
fmull
pop
pop
fnsave
lahf
inc
adc
pop
cmp
ja
pop
push
int3
sub
inc
sti
sbb
or
call
cmpsb
inc
int
mov
test
dec
fdivl
inc
adc
cld
xor
addr16
pop
dec
and
dec
repnz
stc
int3
fucomip
adc
dec
dec
xor
fnstsw
xchg
push
cmp
fwait
lods
adc
dec
dec
outsb
dec
ret
mov
xor
or
add
xchg
push
test
ds
mov
sbb
inc
pop
mov
dec
out
pusha
pop
pop
xlat
enter
xchg
iret
sbb
pop
into
cmpsl
mov
push
pop
jecxz
pop
vaddpd
nop
lea
cmp
aas
mov
xchg
adc
stos
xchg
push
dec
rorl
push
inc
jl
out
mov
pop
pop
and
stos
jb
cwtl
sbb
sbb
ret
int3
mov
mov
pop
jnp
shll
pop
pop
enter
fimuls
xor
and
outsb
xchg
lods
xchg
sbb
roll
fucom
pop
inc
pop
pop
jae
inc
pop
cmpsb
divl
or
jecxz
int3
inc
out
insb
xlat
pop
lea
repz
xor
punpcklbw
add
mov
fst
fsubrs
adcb
cmp
mov
fstp
pusha
hlt
outsl
adc
lahf
push
popa
cwtl
scas
xchg
mov
pop
test
sbb
inc
mov
shlb
movsl
push
outsb
insb
mov
pop
out
je
pop
in
push
or
xchg
stos
xchg
clc
int3
mov
ret
insb
lcall
inc
lahf
mov
sub
sub
dec
pop
fisubs
std
mov
leave
or
jmp
jl
daa
and
cltd
popl
cld
neg
pop
xchg
xchg
iret
pop
cmpsl
inc
icebp
sub
lcall
aam
mov
call
mov
mov
hlt
and
into
pop
add
sbb
sub
imul
fcompl
pop
adc
lea
scas
cmp
mov
or
jo
les
js
push
push
pop
push
mov
jns
int
add
add
nop
out
pop
in
fsub
mov
mov
shl
push
shl
cmc
pop
jnp
or
test
mov
push
leave
cmpb
dec
adc
stos
rcrb
psubusw
push
fiaddl
fdivrl
ja
imul
inc
mov
pop
adc
les
jmp
sub
cltd
dec
push
test
xchg
pop
fwait
xor
mov
lock
dec
fsubr
fisttpl
and
pop
enter
fwait
shl
jo
pop
pop
dec
mov
pop
imul
sub
test
testb
mov
jmp
scas
pushf
mov
or
pusha
aas
inc
mov
mov
pop
int3
pop
pop
mov
mov
adc
or
cmpsb
pop
lds
dec
int
mov
fidivl
insb
or
push
test
xor
pop
outsl
adc
lock
je
mov
dec
and
and
nop
pop
or
fwait
pushf
mov
stos
test
js
sbb
cmp
fcoms
mov
jae
xchg
dec
jge
pop
mov
call
cmp
inc
mov
fmull
jecxz
pop
repz
cltd
add
stos
add
cmp
dec
jp
add
or
pop
jo
add
cmp
fldt
and
das
push
pop
pusha
aam
pop
sbb
fst
pop
mov
sbb
sub
mov
mov
jnp
ret
or
xchg
jbe
xor
pop
xor
sbb
int
fistpl
cwtl
aad
inc
mov
pop
fwait
dec
jp
int
xchg
mov
xor
pop
mov
jns
dec
push
xlat
out
negb
push
adcl
sub
fxch
adc
lds
pop
out
jb
ds
aad
jbe
mov
test
sub
xchg
cli
int
test
pop
pop
or
adc
pop
cwtl
or
sahf
decl
stos
call
rcll
test
sarb
xor
xchg
pushl
nop
dec
js
jmp
pop
xor
out
pop
and
add
pop
dec
stos
pop
inc
imul
movsl
outsl
cmp
fnsave
sub
icebp
push
inc
jp
adc
xchg
add
mov
pop
in
jg
cmpsl
pop
cmp
dec
clc
xchg
jnp
lea
lods
fs
jb
sub
pop
mov
aas
push
add
scas
insb
or
jecxz
stos
fldenv
cmp
jmp
pop
mov
or
jecxz
test
sub
dec
jno
pop
push
fwait
jnp
bts
pop
mov
sbb
cmp
pop
jns
push
xor
xchg
cmp
jno
out
sub
negl
inc
iret
in
rcrb
sbb
mov
pop
popa
adcb
pop
es
push
out
adc
push
cmp
ss
test
or
push
pop
sub
iret
fistpll
jbe
push
and
es
mov
int
jmp
jp
push
mov
xchg
bnd
scas
jne
fsubrl
jns
fiadds
xlat
pop
enter
xchg
pop
addl
incb
sbb
jae
test
inc
pop
jo
aas
xchg
pop
jg
adc
int
xlat
jp
pop
shrb
push
mov
mov
int
lds
sub
insl
test
pop
dec
add
fidivrl
int
pop
xchg
jle
jbe
cmpsb
pop
addr16
cmpsl
popa
movsl
sbb
jbe
pop
push
mov
testb
cmp
fs
imul
push
mov
pop
pop
lea
or
pusha
test
int
pop
and
mov
sbb
jmp
mov
pop
and
int
cmp
idiv
and
mov
adcb
pop
bound
adc
dec
fisubl
pop
push
imul
out
push
fistpl
push
push
fwait
scas
sbb
gs
pop
popa
push
and
pop
and
xor
mov
fldcw
je
lahf
pop
daa
xor
into
xchg
mov
jecxz
ret
sub
subb
aam
pop
inc
jb
lret
popf
cmc
enter
xor
out
xchg
inc
or
pop
lcall
xchg
int3
jo
mov
xchg
dec
fmul
or
lcall
push
insb
cwtl
fxch
data16
jg
arpl
lods
ss
mov
int
xor
in
push
loope
push
shll
scas
sti
add
outsb
add
push
lret
pop
add
fidivrs
jo
mov
sbb
sub
push
fnstsw
mov
out
lahf
mov
stc
stos
pop
push
dec
lds
fwait
sub
rcrl
lea
out
fdivrs
pop
int
fs
dec
add
cmpsl
mov
dec
scas
cmp
pusha
jbe
add
lea
icebp
addl
ror
pop
pop
test
and
sub
pop
movsl
out
jmp
push
inc
xchg
mov
imul
int
lret
push
xchg
xchg
scas
leave
stos
loop
cli
mov
movsb
sub
dec
mov
pop
sbb
je
mov
dec
pop
aaa
inc
dec
sbb
pop
addr16
shll
fisubl
cmc
ja
sub
fstpl
inc
std
loop
pop
stc
inc
test
dec
pop
lds
jb
mov
push
push
mov
add
imul
icebp
xor
or
xchg
jo
mov
sub
pop
stc
mov
lods
xchg
outsb
pop
inc
ror
out
jbe
xchg
icebp
jmp
leave
xor
mulb
pop
sub
cwtl
shl
pop
insl
inc
lock
jne
or
xchg
or
push
dec
push
sub
adc
and
mov
sahf
test
jl
jb
fsubrs
lcall
movsb
xlat
mov
fcom
jg
daa
dec
fistl
dec
jle
hlt
sub
dec
or
inc
jg
jp
aas
gs
cltd
test
push
sbbb
adc
and
cmpsl
jne
fldl
inc
fxch
out
lahf
shlb
outsl
mov
jns
add
push
mov
sub
aaa
dec
pop
fucomp
xchg
mov
sbb
jns
lods
lcall
jae
pop
inc
pop
push
lds
je
inc
push
mov
mov
hlt
and
pop
sbb
sub
das
pusha
mov
sbb
enter
ja
adc
push
mov
cmpsl
push
xchg
movsl
addr16
mov
or
pop
mov
or
je
and
mov
pushf
pusha
jb
pop
cmp
push
add
outsl
jmp
add
dec
int
dec
cltd
push
push
dec
pop
pop
jo
cli
push
bound
aam
std
lea
mov
ds
rclb
sub
push
pop
repz
dec
adc
fistpl
aam
push
iret
leave
fsubl
sub
or
flds
fisttps
cli
pop
int3
les
pop
mov
je
push
push
pushw
sbb
aad
pop
out
cmpsb
idivb
push
and
pop
adc
and
clc
scas
or
in
push
les
clc
lds
mov
loope
ljmp
loopne
lahf
cmp
into
out
pop
jae
push
fisttpl
sbbl
sbb
cmp
cld
idivl
sub
adc
pop
and
cwtl
into
mov
cmp
cltd
cs
in
cmovo
push
jp
inc
and
enter
popa
repnz
int3
ljmp
cmp
pop
orb
scas
adc
pshufw
xchg
pop
lahf
cmp
pop
sbb
cltd
imul
mov
aaa
ja
arpl
dec
fisttpl
mov
stos
icebp
add
lods
pop
ret
iret
movsl
flds
lret
pop
repz
scas
adc
mov
inc
cmp
scas
add
jmp
in
push
movsl
outsl
push
lret
dec
jge
pop
xor
int
dec
pop
mov
sbbb
ja
add
mov
mov
les
std
push
inc
enter
push
cld
push
pop
test
scas
push
fildll
inc
fstpt
sub
icebp
inc
jbe
je
inc
stos
cmc
or
aad
pop
pop
fistl
pop
pop
jne
pusha
rorb
pop
js
dec
call
inc
pop
pop
insl
fsubrp
add
aaa
cmp
pop
mov
xor
fisttps
and
fisttpll
stc
xor
sub
mov
sbb
mov
repnz
rcrb
jns
pop
pop
xor
pop
popa
shll
inc
sti
mov
into
fisubs
mov
addr16
xor
pop
sar
into
pop
xchg
xor
push
mov
insl
and
xchg
rorl
fistpl
lods
loope
sahf
push
cwtl
mov
lea
jbe
out
pop
js
pop
adc
inc
int
jp
mov
push
cltd
xchg
inc
lcall
and
sbb
mov
ficompl
int
push
mov
and
pop
and
pop
popa
jecxz
int
xor
or
lods
xchg
sti
pop
push
es
faddl
dec
int3
xor
mov
lcall
out
jb
das
or
pop
push
loop
lahf
and
dec
pop
int
mov
cli
push
out
pop
lods
and
iret
dec
xchg
addr16
mov
daa
test
imul
add
andb
jbe
mov
das
rclb
arpl
daa
or
jge
sbb
adc
pop
pop
mov
and
dec
cmp
je
or
ljmp
jb
sbb
sub
pusha
movsl
sub
sub
enter
dec
push
add
pop
push
dec
mov
lea
cmp
mov
dec
push
in
test
ficoml
aad
add
adc
push
fs
loope
gs
mov
ds
xor
cmp
test
pusha
pop
lea
push
mov
pop
scas
pop
and
xor
dec
dec
pop
jge
jmp
pop
mov
into
outsl
pushf
in
stc
negl
dec
xor
jmp
loope
js
das
sbb
push
call
sub
cmpsl
pop
adc
aas
ret
mov
stos
push
rcrb
fistpl
dec
add
mull
adc
sbb
sbb
sub
dec
push
scas
and
jmp
gs
aas
xchg
jl
lret
aam
lahf
sub
jecxz
mov
pop
int
inc
dec
adc
scas
mov
fimull
out
popa
dec
cli
shr
pop
add
out
dec
scas
idivb
sbb
xchg
fwait
lcall
decb
sbb
mov
lahf
pop
sbb
push
cmp
loope
ss
sub
movsb
xchg
xchg
arpl
jmp
pusha
mov
mov
mov
int
insb
dec
lahf
shl
neg
addb
push
jecxz
test
pop
lcall
scas
push
clc
movsl
call
mov
sub
mov
push
or
mov
pop
call
add
andl
test
mov
or
ja
call
dec
cltd
into
out
add
fidivl
pop
and
mov
cld
cmp
mov
lock
fisttpll
scas
aad
repnz
mov
std
sbb
fistps
or
add
pop
pop
sbb
pop
jo
mov
out
adc
std
or
jmp
pop
out
pop
les
lret
add
pop
sub
xchg
lods
loop
dec
in
pop
bound
pushf
out
int
cli
mov
mov
jns
adc
imull
int
xor
or
sub
dec
popa
sbb
mov
sbb
pop
pusha
jbe
jne
add
aaa
pop
xlat
dec
inc
scas
push
subl
gs
jb
add
cwtl
int3
shr
cld
cmpsl
jle
pop
hlt
in
test
mov
jb
push
or
jg
inc
sbbb
ljmp
jl
fildl
mov
aam
xchg
inc
icebp
push
push
pusha
stc
sbb
pop
cmpsb
fidivl
push
repz
mov
inc
int3
int
sbb
jge
jns
mov
test
pop
les
lea
mov
inc
push
sub
and
in
aam
scas
push
or
push
je
fdivs
insl
mov
mov
popf
dec
and
stc
cmp
dec
cmp
jmp
pop
push
movsl
cmc
xlat
cld
adc
adc
push
jbe
std
pop
xor
dec
pop
push
lock
leave
adc
js
pop
int3
lods
dec
and
les
or
xor
insb
xchg
jp
sub
add
js
clc
pop
adc
scas
lea
js
je
pop
add
insl
into
hlt
jno
mov
mov
lods
or
addb
andb
popf
adc
lahf
mov
xchg
pop
mov
adcb
jbe
sbb
xor
mov
xchg
lods
sbb
aaa
subb
sub
cld
mov
push
pop
das
imull
clc
xchg
cmp
mov
pushf
jbe
mov
test
int
into
pop
add
les
pusha
pop
mov
push
lahf
or
sub
sub
scas
push
fildl
add
rcr
push
pop
jns
daa
mov
cwtl
push
and
cmp
mov
fcmovnu
nop
clc
loopne
add
xor
mov
and
scas
cmpsl
xchg
in
cltd
jbe
mov
adc
pusha
in
fs
test
lock
add
pop
xor
scas
stos
pop
jbe
pusha
push
ds
jno
pop
mov
push
pushf
lds
int
scas
mov
data16
push
out
pop
xor
sbb
xor
jae
cltd
dec
dec
pusha
addr16
lret
aaa
jl
and
fstpt
aas
cmpsb
hlt
int
jo
fcmovu
mov
negb
xchg
push
dec
out
test
pop
fwait
ljmp
fst
jbe
lcall
out
add
ds
mov
outsb
xchg
sub
adc
sbb
dec
lea
push
cwtl
cmpsl
test
add
fistl
xor
jle
fcomps
test
outsl
pop
dec
pop
test
or
cmc
movsb
jl
cltd
int3
ja
fcmovnbe
pop
mov
leave
inc
cmpsl
repnz
popf
shr
add
sbb
pop
pop
mov
insb
lods
mov
pop
mov
sub
aaa
jo
mov
mov
add
sub
sub
call
or
or
mov
jl
mov
cmp
cmpl
pop
sub
stc
sbb
dec
cmp
popf
ds
adc
enter
or
sarl
push
mov
mov
push
stc
idiv
fildl
sbb
addl
rorb
mov
sbb
add
inc
ret
mov
pop
sahf
sub
xor
cltd
es
xlat
insb
push
pop
fdivs
jl
stos
sbb
xchg
mov
test
cmp
fs
cmp
divb
inc
cld
jl
call
push
int
mov
and
xchg
sub
mov
pop
or
pop
or
or
es
sub
imul
inc
cwtl
movb
pushf
pop
or
fadds
pop
cmp
inc
mov
dec
pop
test
add
pop
pusha
adc
sub
mov
sub
scas
pop
test
mov
push
leave
stc
iret
mov
aas
dec
les
and
inc
and
movsb
or
push
jge
pop
push
mov
loopne
and
adc
dec
cmp
fnstenv
pop
ret
push
add
js
or
mov
or
lods
iret
int
jbe
sub
xor
js
pop
sbb
call
xor
jbe
adc
pop
stc
dec
or
fcos
and
pop
ss
xacquire
pop
divl
jbe
cmp
les
rorl
mov
flds
mov
outsb
xchg
pushf
pusha
sbb
ffree
mov
aas
push
arpl
add
fwait
scas
xchg
push
hlt
sub
lcall
lea
pop
jle
fwait
shrb
cld
lret
fmull
mov
sbb
and
pop
leave
adc
into
sub
cwtl
pusha
movsl
fisttpl
add
mov
insl
mov
pop
push
dec
sub
js
push
movl
jmp
xor
add
mov
test
popf
std
movsb
scas
mov
mov
rcr
les
sbb
ficompl
pop
pop
cltd
in
cmp
xchg
jb
sub
pop
cmp
mov
movsb
jle
pop
lock
lret
xchg
out
push
fwait
pop
fdivs
push
pop
vpunpckhbw
inc
addr16
pop
or
mov
mov
push
test
rcrl
cmpsb
jne
mov
mov
orb
pop
repz
push
test
leave
stc
inc
inc
call
pop
ret
pop
xchg
mov
adc
rolb
ljmp
insl
aad
xor
stos
decl
pop
push
inc
mov
sub
jecxz
je
ficomps
mov
inc
lods
push
ret
pop
xchg
pop
jecxz
iret
xorl
mov
les
dec
push
sub
jb
pop
divl
insb
sbb
add
pusha
dec
pop
adc
mov
mov
fsubr
repz
pop
jbe
sub
inc
popa
cli
ret
push
xor
add
pop
jp
shlb
pop
adc
sbb
push
mov
xchg
scas
int
dec
adc
arpl
fildl
mov
push
cli
pop
notl
jl
bound
pop
xor
popa
cmpsb
pop
cmp
rorl
mov
ret
xchg
cmpsl
fwait
sub
pop
or
iret
movsl
or
in
sbb
xor
pop
xchg
cmp
sbb
shlb
cmp
inc
movsl
cmpsb
pop
ror
add
mov
inc
popa
push
insb
out
fcomps
push
push
lret
iret
sbb
dec
pop
push
inc
add
cmp
or
adc
pop
dec
mov
mov
dec
jp
dec
scas
fistps
gs
test
ss
pop
mov
sub
popa
insl
mov
and
cmp
pop
arpl
push
xor
inc
inc
mov
jle
mov
xchg
mov
pop
cmc
mov
jg
mov
movsb
pop
mov
into
dec
cs
dec
in
or
push
pop
lods
enter
mov
mov
outsb
mov
mov
sbb
cmpsl
cs
sub
jb
pop
clc
mov
movsl
mov
aam
mov
loopne
rcrb
cmp
js
ss
stos
cli
mov
orl
lds
imull
cld
dec
aas
sbbb
sbb
stos
inc
cmc
mov
mov
repz
pop
jmp
lds
fstpl
cld
fs
out
hlt
mov
addr16
pusha
data16
mov
pop
repz
and
pop
cld
inc
jns
int3
jbe
add
xchg
xchg
subl
inc
pop
xor
cmp
pop
or
fwait
leave
cld
loop
fstps
add
pop
enter
xchg
push
pop
test
int
mov
inc
sti
loopne
push
repnz
sarl
add
or
pop
fstpt
inc
mov
mov
stos
mov
pop
cmp
popf
pop
sub
pop
inc
mov
ja
ljmp
je
test
pop
push
out
jecxz
adc
xchg
mov
inc
out
pop
sbb
sbb
pop
fdivrs
rcrb
pop
or
pop
subb
pop
pusha
cltd
and
pop
mov
dec
scas
or
pusha
pop
jb
out
fmuls
dec
jns
pop
pushf
aad
aaa
daa
mov
pop
pop
dec
insl
cli
int3
push
xchg
jp
adc
pop
sbbl
xor
les
js
lea
repnz
int
jo
pusha
push
jecxz
movsl
sti
mov
push
pop
adc
lods
pop
mov
imul
mov
inc
jmp
outsl
and
dec
sub
pop
pop
xchg
mov
mov
jbe
lds
ror
inc
stos
in
xchg
pop
orl
out
out
pop
loopne
pop
or
into
mov
jo
insb
sbb
and
mov
int
mov
pop
xchg
xor
cltd
xchg
sub
rorl
dec
cmp
jbe
jp
push
adc
jns
fucomip
adc
or
js
pop
mov
cld
dec
das
add
stos
daa
ljmp
ja
xchg
stc
jae
fcompl
adc
aaa
cmp
xor
pop
mov
mov
push
mov
adc
shlb
cvtdq2ps
sti
scas
jg
addr16
shrl
mov
pop
sbbl
jmp
stos
mov
lahf
xchg
jns
pop
push
fisubrl
mov
pop
jbe
jne
fisubs
lret
movsl
add
inc
es
add
rorl
test
pop
push
aas
pop
sbb
xor
mov
in
add
pusha
jp
jne
pop
inc
sbb
sub
icebp
sbb
pop
out
cmp
stos
pop
mov
add
mov
xchg
pushf
rcrb
sahf
pop
sub
fcmovbe
pop
pop
leave
arpl
mov
push
mov
sub
xorl
popl
xchg
sbb
pop
fsubrs
push
pop
dec
jb
arpl
cwtl
jns
pop
mov
or
pop
mov
push
insl
scas
test
mov
in
nop
cld
mov
push
xchg
jo
mov
outsb
aam
jge
adc
sbb
jns
jb
push
lods
pop
in
daa
in
sahf
fmul
push
jg
and
arpl
mov
mov
mov
xlat
push
fists
push
mov
adc
fldl
push
movsl
fs
and
cmc
js
je
jbe
scas
mov
fsubrl
jnp
pop
dec
call
push
pop
inc
jge
mov
cmp
outsb
pop
insb
inc
lods
inc
push
push
xchg
pop
fdivrl
addr16
scas
es
insb
sbb
cltd
mov
mov
cmc
pop
and
xchg
lods
push
pop
ss
inc
rolb
or
ja
pop
xor
xchg
sbb
scas
call
push
cmp
mov
jge
pushf
cmc
mov
fucomp
ret
daa
je
push
negl
mov
mov
fstpt
fldl
and
pop
int3
in
outsl
push
sub
pushw
lds
push
sbb
or
out
push
testb
lahf
jg
popa
cmp
clc
lret
pop
jne
test
sbb
jb
pop
lret
fadds
popf
sbb
push
cld
adc
test
xchg
sub
jno
dec
pop
loopne
scas
jns
movsl
mov
push
and
mov
add
and
pop
enter
fwait
sbb
pop
ljmp
mov
dec
ja
pop
fucomip
and
lahf
xchg
int3
pop
mov
dec
cld
fnsave
sahf
pop
fmuls
pop
ja
add
push
lods
dec
pop
mov
inc
and
idivl
jb
pop
rcrb
xor
pushf
push
int
add
pop
aam
or
lret
pop
arpl
ret
outsl
fildll
push
sbb
fmull
pop
mov
or
pop
test
pop
mov
adc
mov
cwtl
lcall
dec
mov
fnstcw
lods
add
repnz
movsl
xor
leave
pop
loope
sbb
ds
and
mov
pop
or
testl
sub
mov
pop
call
lds
fstpl
fisttps
lea
jnp
cmp
stos
push
cmp
or
ret
mov
ss
pushf
test
dec
aam
pop
pop
outsl
and
push
pop
test
stc
mov
add
adc
dec
xor
repz
and
stos
je
xchg
popf
int3
xor
pop
dec
movsl
and
xchg
mov
dec
inc
dec
pop
fstpt
jo
fists
ret
adc
mov
or
jno
in
lods
dec
push
mov
xchg
icebp
jl
dec
lahf
xchg
movsb
stos
movsl
pop
cmp
and
fistpl
mov
adc
xchg
pop
inc
jbe
or
jmp
lea
pop
ss
push
clc
cmp
push
sbbl
pusha
xlat
add
push
std
mov
inc
aad
mov
push
pop
shlb
jns
lret
dec
jge
pop
add
pop
xor
scas
mov
push
addr16
aam
jbe
xchg
dec
and
lcall
sbb
cs
lret
lcall
scas
push
pop
lods
jb
cmp
lds
pop
enter
imul
mov
mov
mov
fcmovb
das
rcrb
daa
jbe
stc
add
pop
add
sbb
pop
push
cli
sub
xlat
jmp
test
pop
xchg
jp
daa
pushl
lcall
adc
sar
pop
clc
dec
out
out
dec
pop
sbb
adc
cmpsb
sub
jl
pop
sbb
push
stos
pop
mov
or
in
mov
pop
aas
add
fcomps
xor
push
adc
loop
cmc
mov
shl
scas
rcll
or
lea
fwait
mov
mov
ret
jo
cmp
and
pop
push
adc
sub
sbb
jns
push
aam
aaa
sub
scas
pop
test
idivb
mov
dec
sbb
int3
mov
in
dec
ret
pop
pop
scas
jnp
stos
xchg
mov
dec
jo
fwait
dec
xchg
js
mov
pop
pop
inc
mov
in
lods
pop
push
inc
pop
add
push
test
lret
mov
push
cmc
insb
xchg
dec
and
pop
xor
xorb
mov
pop
jb
icebp
imul
mov
or
pop
daa
dec
ret
stc
adc
cmpsl
pop
aas
cmc
lahf
jae
sbb
sbb
dec
add
xor
js
dec
push
int
loop
call
lods
pop
movsl
pop
aas
punpckhbw
fadds
mov
int3
nop
popa
fbld
clc
inc
aam
out
xor
pop
das
fdivl
jp
test
scas
fwait
lcall
enter
xor
pop
arpl
add
adc
nop
jp
pop
dec
out
enter
daa
push
pop
jmp
cmp
movsb
jb
mov
xor
stos
cwtl
pop
int3
jg
lods
movsb
out
mov
jo
js
addr16
int
cmpsl
dec
push
das
or
mov
and
dec
or
add
mov
ficoml
mov
mov
in
jne
lcall
aad
sub
or
dec
adc
pop
mov
popf
rcr
and
mov
lods
outsl
fadds
jbe
inc
scas
int
out
dec
hlt
sbb
mov
imul
and
or
jecxz
out
pop
inc
mov
inc
sub
dec
xlat
pop
mov
hlt
mov
sub
adc
cmp
stc
jnp
insl
cmp
pop
xlat
daa
cmp
push
aaa
out
mov
and
adc
pop
jb
test
fbld
adc
pop
xchg
fstps
cmpl
scas
pop
int3
inc
sbb
faddp
pop
jo
int
xchg
xor
lret
mov
push
inc
xchg
js
mov
sbb
xorb
mov
and
xchg
mov
xchg
cltd
sti
jmp
mov
pop
mov
sub
jge
test
stc
inc
xchg
pop
ret
lods
dec
inc
mov
repz
aas
and
xchg
into
xlat
cld
loop
mov
add
xchg
pop
inc
enter
dec
pop
ds
jae
pop
cmp
mov
xlat
mov
cltd
rolb
cli
pop
lret
adc
clc
scas
sbb
je
cmc
inc
in
mov
mov
xor
sub
mov
mov
fsubs
xor
stos
cmpsb
nop
fcompl
outsl
pop
fisttps
fistpl
pop
push
jecxz
push
popf
mov
nop
or
into
push
xchg
cmp
pop
xchg
cltd
lods
mov
dec
jg
into
xchg
std
test
sbb
pop
pop
sub
push
pop
jb
aaa
mov
mov
jmp
in
sbb
pushf
pop
pop
add
je
ret
add
mov
sub
dec
sub
xchg
insb
lods
inc
aas
aaa
stos
mov
jbe
dec
cmp
pop
shlb
lret
or
pusha
fidivrs
mov
in
pop
sbb
jp
pop
ret
mov
xchg
jae
and
pop
rcrb
mov
inc
cmpsb
and
inc
mov
mov
pop
sbb
repnz
cld
xchg
sbb
lea
rcrl
xchg
cmpb
or
std
je
outsl
xchg
push
sbb
mov
pop
jmp
sub
test
add
add
mov
jne
rcrl
xor
loope
daa
fcmovnb
test
add
fisttps
jo
push
inc
sbb
push
stos
dec
mov
int
adc
xchg
pop
push
push
stos
push
fdivl
js
push
dec
pop
cmc
push
jl
out
xorb
scas
sub
sahf
sbb
mov
icebp
push
mov
test
mov
hlt
jno
dec
pop
xor
push
jb
lcallw
sbb
jmp
pop
gs
pop
ret
fisttpl
and
lock
cmc
mov
dec
dec
pop
in
enter
and
lahf
jns
cmp
adc
stc
or
test
loop
pop
out
imulb
pop
pop
nop
ja
ret
pop
scas
adc
cmp
shlb
test
cmp
push
fdivl
sbb
xor
sub
pushf
pop
test
mov
pop
sub
std
fs
fdivs
data16
adc
popf
in
imul
pop
jbe
pop
xlat
fistpl
xchg
inc
pushf
gs
mov
xor
std
push
pop
push
sbb
sub
mov
xor
and
mov
push
cmp
aas
pop
dec
jno
imul
push
int
aam
mov
or
mov
push
shlb
repnz
pop
ret
mov
stos
pop
aam
mov
pop
fwait
hlt
not
pop
imul
je
xchg
pop
pop
or
enter
mov
mov
ret
xchg
pop
pop
mov
xchg
jbe
pop
push
test
stos
loop
jns
pop
xor
jg
cltd
or
lds
popf
mov
out
int
call
scas
pop
leave
jbe
push
ficoms
divb
adc
push
pop
dec
fmul
out
pop
xchg
cli
jae
fnstsw
xchg
mov
dec
sbb
into
fimull
ljmp
sbb
clc
mov
lea
and
mov
or
pop
lahf
arpl
sarl
dec
mov
je
or
lock
ljmp
rcll
push
inc
pavgw
xor
ss
mov
imull
dec
pop
fldl2t
std
mov
sbb
jp
enter
or
aam
into
or
xchg
sub
ret
or
pop
sbb
push
dec
fdiv
lcall
cmp
add
repz
sub
pop
scas
imull
cs
sbb
rcrb
inc
xor
sub
outsl
shlb
pop
adc
daa
cmpsl
sti
mov
add
add
xor
in
cmp
dec
mov
mov
cmp
aam
mov
cmpsl
mov
mov
repz
sahf
stos
setp
lahf
pop
test
push
ss
out
add
clc
or
notl
ja
bnd
pop
adc
daa
repnz
pop
out
lds
mov
pop
cs
pop
xor
aaa
pop
lods
lret
push
out
inc
pop
pushf
jnp
jnp
arpl
cmpb
stos
imul
sub
pop
sbb
jecxz
iret
sbb
hlt
pop
jb
pop
lods
je
enter
rorb
pop
jbe
mov
movsl
pop
pusha
int3
mul
cli
lea
out
dec
push
mov
sbb
insl
mov
dec
push
cmp
mov
or
in
jns
stos
scas
dec
xor
pop
adc
sub
cmp
pop
andl
pop
int
sub
test
fisubs
and
mull
and
mov
mov
xor
stc
pop
lock
int
negl
iret
and
sbb
jg
pop
xor
or
add
pop
fldln2
in
add
int3
mov
push
pusha
pop
mov
into
sbb
pop
shlb
cltd
lret
ss
push
xor
pop
fldcw
les
js
pop
mov
mov
insl
push
cmp
pop
sti
push
mov
sbb
scas
pop
xchg
xor
fucom
jl
pop
sbb
push
negb
cmpsl
xor
mov
adc
rol
push
out
jnp
fstpl
jbe
jae
imul
jge
loope
inc
pop
repz
xchg
std
lret
adc
cmpps
out
clc
adc
dec
sbb
pop
xchg
test
inc
jae
ficomps
and
lcall
int3
out
push
sbb
mov
cwtl
arpl
push
aam
adc
lea
iret
or
mov
xor
dec
rcrl
inc
pop
mov
push
xor
imulb
jo
pop
iret
mov
add
pop
nop
mov
and
lods
sub
mov
fistps
pop
pop
int
dec
adc
fwait
pusha
xor
jecxz
push
or
pop
out
mov
lret
pop
adc
xchg
push
arpl
ss
es
sbb
inc
fistpll
lahf
dec
adc
and
pop
adcl
pop
in
pop
popf
jg
dec
jge
pop
int
sbb
inc
xchg
jecxz
aam
std
adc
mov
fwait
pop
in
jb
in
fildl
pushf
test
rorb
cmpsl
pop
mov
sahf
sub
adc
mov
aas
pop
insl
xchg
jl
jle
pop
adc
or
mov
pusha
outsb
aad
test
add
xor
add
jge
fisttpl
cmpsl
adc
or
sub
insl
pusha
fstl
daa
lret
lods
push
or
xchg
repnz
add
insl
mov
pop
sub
pop
bound
mov
ret
pop
add
iret
nop
add
int3
pop
mov
sub
mov
jne
dec
sbb
mov
pop
mov
arpl
inc
adc
rcrl
jmp
inc
xchg
int3
pop
ret
pop
ja
xchg
pop
sub
jecxz
mov
ror
loope
and
xlat
dec
loopne
push
xor
aaa
cmpsb
push
lds
cmp
mov
daa
inc
idivl
scas
sub
dec
pop
mov
mov
leave
pusha
jmp
dec
nop
les
dec
jns
pop
pop
mov
lds
xor
xor
ss
pop
cli
xorl
bound
mov
lock
mov
scas
sbb
xchg
vaddpd
mov
or
pop
das
int
mov
and
push
and
xchg
jb
in
lods
or
mov
mov
add
pop
stc
out
inc
lods
gs
mov
leave
cwtl
jb
xchg
pop
pop
mov
std
jg
add
adc
push
pop
or
add
inc
pop
sti
xchg
pop
mov
xor
push
pop
dec
and
push
xchg
inc
out
inc
mov
dec
jno
dec
or
test
fildl
xorb
je
int3
lret
pop
adc
out
ret
pop
fcmovnb
sub
gs
sbb
push
lds
cltd
add
push
cmp
js
outsl
pop
pop
test
ret
jecxz
int
lea
jnp
jo
pop
push
repnz
out
jo
mov
stos
mov
xor
pop
sbb
shrb
and
fdiv
jb
pop
out
scas
or
lcall
stc
sub
xchg
adc
fwait
pusha
fmull
cld
pop
inc
mov
aaa
push
rcrl
xor
xchg
jg
xchg
mov
mov
xchg
stc
pop
cmp
or
pushf
fsubrl
dec
xor
scas
pop
pop
xor
std
cmpsb
loop
sub
mov
jo
dec
xor
jae
mov
lods
jl
aas
pop
add
sbb
pop
enter
outsl
or
push
int
jle
cmp
fsubs
sub
sub
mov
adcb
mov
enter
lahf
int3
jnp
es
sub
divb
add
inc
addr16
mov
or
inc
adc
and
xchg
sub
jmp
jo
sbb
test
in
xchg
ret
inc
push
pop
rorb
add
int
stos
cltd
fdivs
pop
and
leave
jecxz
mov
pop
xchg
inc
imul
mov
jae
xor
icebp
int
out
fs
sbb
and
push
stos
xor
pop
inc
imul
lret
sbb
dec
rcrl
jl
imul
lock
sub
xchg
jmp
push
out
pop
fcmove
hlt
rclb
mov
adc
or
negl
xchg
pop
lret
inc
xor
fs
int3
faddl
imul
mov
xchg
call
or
adc
hlt
cmpsb
pop
popa
jns
scas
xchg
stc
adc
scas
sbb
dec
mov
loop
fcmovb
cli
cltd
cmp
es
sti
call
mov
jp
mov
lret
dec
mov
shll
orb
xchg
pop
cmp
dec
pushf
pop
pop
mov
add
jmp
add
pop
lock
xor
mov
sbb
popf
scas
popa
xchg
mov
dec
sub
aad
out
or
scas
xchg
enter
into
pop
fsubrs
xchg
out
push
insl
inc
pop
scas
or
in
dec
dec
loopne
pop
inc
mov
jo
mov
je
jge
into
test
mov
xor
loopne
pop
lods
sub
je
int
jmp
push
sub
ss
pop
das
dec
xchg
sti
sub
mov
sbb
sbb
and
and
cltd
pop
ret
cwtl
ja
sbb
imul
pop
sub
pop
jle
pop
xchg
or
jns
and
aam
imul
rorb
xor
sub
xchg
dec
sub
inc
ficomps
inc
pop
xchg
pop
sbb
sub
pop
sbbl
cli
scas
insb
incb
clc
jne
mov
repnz
setle
into
out
sbb
push
stc
scas
cmpsl
lods
ljmp
pop
cli
jmp
adc
cs
mov
fcoms
adc
mov
pop
jmp
jo
xchg
jp
pop
outsl
dec
inc
clc
int3
out
mov
mov
fsts
jmp
imul
int
xor
ds
mov
mov
sub
mov
adc
jnp
ret
aad
ficompl
arpl
pushf
fstps
xchg
push
push
fwait
shrl
nop
adc
call
repz
fimuls
lahf
pop
lods
ss
aas
xchg
pop
cmp
jbe
pop
std
adc
mov
lcall
jge
jb
fwait
pop
in
pop
dec
pop
stc
jno
int
into
lcall
fstpl
dec
cwtl
les
mov
lds
lret
sub
jb
mov
sbb
std
fxch
jp
mov
clc
lahf
sbb
popa
pop
subb
je
add
pop
stos
mov
sbb
adc
std
scas
jp
and
nop
mov
mov
cmc
sarl
pop
jmp
loope
or
das
dec
lret
pop
cmpsb
movsb
cli
xlat
jbe
pop
loop
repz
in
pop
pop
bound
dec
or
or
xor
aam
andl
dec
pop
sbb
sbbb
insb
mov
lret
ret
imul
adc
jo
mov
push
scas
out
out
movsb
sub
adc
aas
mov
cmp
gs
fcomi
jg
dec
call
add
daa
and
repnz
test
mov
push
lods
sub
mov
pusha
stc
popa
pop
dec
movsl
adc
jbe
or
lds
fnstsw
mov
out
inc
packssdw
out
cmp
rorb
in
je
add
mov
pop
cmpl
repz
lea
push
test
jle
push
pop
pop
bound
rclb
pop
js
sbb
push
jo
sub
test
push
mov
mov
add
lds
mov
and
xchg
jno
je
sbb
pop
rcll
iret
leave
insb
jmp
ss
adc
jecxz
xlat
lcall
jnp
mov
pop
jge
mov
jo
inc
out
push
loop
pop
imul
mov
fadds
push
inc
mov
sub
mov
sub
inc
pop
cmc
jne
fldenv
loop
pop
push
mov
add
mov
mov
movsl
mov
jbe
fildl
pop
xor
das
mov
aas
dec
or
mov
cmp
mov
cmp
dec
pop
stc
add
mov
sub
add
push
and
dec
out
pop
test
fs
int3
ret
jae
fistpl
push
cli
fsubr
shl
in
pop
aad
lahf
mov
into
mov
or
popf
mov
add
mov
mov
and
subl
fbld
xchg
push
mov
mov
lret
cmp
popl
jbe
aas
nop
mov
adc
cmpb
adc
pop
sti
push
fnstsw
dec
push
ja
xchg
mov
jle
js
out
cltd
insb
pop
jo
rcll
stc
ret
cmpsl
sbb
jecxz
stos
or
mov
pop
and
and
pop
imul
sbb
or
in
push
sti
xor
add
add
jge
pop
pop
mov
push
push
enter
pop
adc
hlt
and
pop
pop
popa
addr16
and
sbb
cmpsl
jb
aam
pop
fwait
xchg
mov
fisttpll
add
mov
add
add
pusha
jle
das
test
cli
pop
ret
cmpsl
push
test
das
int3
or
in
inc
jns
pop
xchg
jno
xchg
orb
push
or
dec
mov
pop
cmp
nop
and
pop
movsl
mov
repnz
pop
pop
push
aaa
sbbb
mov
jno
scas
lret
pop
xchg
out
repz
outsl
int3
imul
pop
rolb
cmp
and
mov
in
std
dec
fwait
xchg
dec
int3
cli
pop
iret
xchg
out
adc
and
jae
or
adc
out
pop
rcrb
movsb
into
sbb
bound
sbb
push
lods
inc
cmp
and
imul
add
xor
or
cmp
shll
imull
jb
mov
ljmp
pop
outsb
mov
pop
sub
sbb
addr16
rcrl
repnz
nop
and
into
movsb
jb
lods
insl
fistpl
add
pop
in
clc
int3
mov
cmp
pop
lret
add
insb
xchg
pop
or
pusha
nop
and
or
rcrl
xchg
add
mov
jb
pop
jbe
dec
out
sub
lods
pop
stos
xchg
adc
push
jns
or
jnp
mov
sti
fstl
pop
rorb
jecxz
xchg
cli
sbb
push
loop
sarb
jmp
lret
pop
sbb
jbe
cltd
inc
push
scas
inc
mov
lea
adc
rolb
push
ds
jbe
sbb
jge
lock
test
cld
push
sbb
jmp
adc
fwait
mov
data16
lea
mov
ljmp
add
and
push
xor
cltd
pop
jns
dec
out
mov
push
cltd
adc
pusha
fcomps
sahf
fndisi(8087
mov
mov
push
add
pop
test
icebp
pop
imulw
sbb
pop
dec
fs
push
int3
xchg
scas
mov
lret
pop
je
lret
mov
and
mov
cmp
sbb
jl
mov
pop
push
xchg
ror
ljmp
sar
pop
xlat
pop
scas
mov
ja
cmp
cltd
or
sub
mov
out
pop
add
testl
pop
or
inc
pop
sbb
popf
jp
dec
inc
aad
xchg
jno
aas
insb
mov
pop
mov
inc
cmp
shrb
pop
mov
insb
xchg
arpl
xlat
clc
or
cmpsl
inc
test
xchg
aas
jo
pop
aam
mov
pop
pop
jmp
pop
data16
movsl
dec
jno
arpl
xchg
int
push
mov
mov
loop
sbb
pop
enter
xor
xchg
sbb
insl
inc
in
cmp
xchg
fisubrs
out
mov
fdiv
mov
cmp
popa
jbe
jno
pop
pop
fadds
fs
pop
sahf
cmp
movsl
sub
add
mov
das
jge
lahf
andl
push
adcb
clc
adc
mov
mov
ret
cwtl
cmp
test
mov
mov
scas
mov
add
sub
and
fwait
pushf
pop
ja
sbb
xchg
or
lcall
mov
test
sub
lret
pop
pop
int
test
xchg
sub
dec
repz
and
jbe
negb
lcall
lahf
int
or
cltd
xchg
sub
push
or
jg
sbb
lods
cmp
add
pop
mov
push
jns
jo
xor
fadd
rcrb
or
cltd
cmp
insb
or
scas
and
jbe
jnp
in
aaa
pop
cmp
ds
push
cmp
mov
add
jnp
pop
push
jb
sub
pop
scas
je
in
cmp
or
mov
sbb
pop
enter
int3
fisubrl
mov
xlat
mov
or
jecxz
xchg
test
push
inc
dec
or
jbe
in
mov
pop
adc
or
adc
push
dec
aam
fidivl
mov
push
or
stc
adc
out
stos
adc
cmpsl
jo
mov
xchg
and
inc
ljmp
loope
fs
sbb
int3
inc
sarl
out
push
je
xor
pop
dec
xchg
js
and
arpl
inc
dec
add
fstpt
roll
adc
fcompp
xchg
sbb
addr16
sbb
pop
rep
lret
add
rcrl
jl
scas
dec
pop
xor
sahf
jecxz
imulb
or
lret
mov
pop
pop
les
push
out
jbe
xchg
je
divb
cmp
dec
popa
mov
shlb
roll
gs
jmp
sbb
push
dec
nop
lret
cmp
ret
in
xor
mov
mov
in
xor
ficoml
pop
push
repz
sti
scas
sbb
pop
movsb
jecxz
imull
or
hlt
push
int
out
stos
and
es
inc
inc
pop
pop
ljmp
mov
inc
push
addr16
into
fldenv
rorl
mov
dec
std
pop
mov
pop
pushf
mov
divb
mov
enter
xchg
cmpsb
pop
jbe
push
mov
pop
jae
jo
mov
mov
int
test
xor
clc
push
mov
mov
testl
mov
pop
cltd
dec
sub
xor
insl
or
pop
ja
ror
mov
cmp
mov
pop
pop
or
popf
aad
adc
jle
or
outsb
imul
pop
jp
fwait
mov
pop
mov
jmp
stc
bswap
loop
or
add
sub
scas
movsl
inc
movsb
dec
jo
cltd
xchg
jmp
lcall
out
fadd
pop
dec
stos
or
pop
pop
lcall
xlat
cltd
pop
scas
or
lods
push
pushf
jo
mov
mov
or
inc
and
inc
mov
jmp
cmp
jg
in
insl
mov
inc
js
xor
jae
push
pop
ds
cmp
push
sbb
pop
mov
and
mov
je
cmpl
dec
jmp
pop
xchg
test
push
daa
xorb
mov
mov
call
cltd
pop
xchg
push
and
adc
or
lods
jb
push
pop
data16
sbb
lret
cltd
sbb
pop
ljmp
lret
push
movsb
shrb
pop
fcmovnb
orl
inc
pop
insb
mov
adc
cltd
push
push
sbb
pop
stos
int
and
pop
jle
mov
lret
pop
int3
shll
fstpl
mov
outsb
test
mov
sbb
push
cli
and
jb
mov
lds
out
orl
divb
jo
sbb
sbb
cmc
cmp
cmp
mov
jbe
inc
push
scas
push
push
movsl
mov
into
lods
orb
loopne
dec
mov
test
call
pop
push
in
jb
push
mov
jbe
outsl
xchg
pop
mov
fdivp
pushf
pop
inc
and
fmull
and
mov
mov
daa
mov
push
mov
cmpl
pop
mov
pop
or
mov
into
inc
notl
jg
mov
mov
pop
je
push
push
fldl
and
pop
pop
dec
pop
lds
sbb
frstor
xchg
adc
pop
add
pop
lds
test
imul
idivl
inc
pop
js
sbb
mov
cmp
stos
fmuls
push
jnp
pop
pusha
pop
int
push
cmc
jge
pop
adcl
or
out
repnz
mov
je
mov
scas
sbb
rcrl
cmp
cli
lahf
mov
sbb
mov
int3
fdiv
cs
test
adc
dec
fisttps
pop
dec
xchg
imul
jne
and
addr16
pop
jmp
sbb
aas
pop
add
cld
iret
sbb
ret
ds
insb
or
xchg
pop
fst
lea
push
shl
pusha
iret
out
das
and
fildl
sbb
and
pop
and
lock
je
mov
ljmp
xlat
pop
cmp
or
jae
xor
pop
ret
clc
adc
push
int3
and
pop
jbe
out
jmp
mov
inc
pop
xor
aas
sub
clc
cld
or
mov
inc
jb
xchg
add
pop
jge
push
xor
mov
add
jo
mov
add
inc
mov
sbb
sub
add
inc
clc
call
xchg
mov
pop
xor
pushf
sbb
push
int3
je
xchg
gs
and
jnp
pop
aam
push
mov
pop
loop
inc
cmp
pop
in
adc
or
sbb
popa
jle
js
pusha
push
mov
negb
seta
pop
incl
push
inc
mov
int
ds
fwait
push
dec
jae
add
pop
or
out
in
pop
enter
and
pushf
pop
repz
sub
sub
xchg
cli
cmp
fstps
xchg
jbe
pop
xchg
and
decl
mov
mov
inc
push
pop
xchg
insb
aaa
cmp
mov
cld
sbb
int3
stos
inc
lcall
fcoms
push
jbe
pop
sub
or
pop
arpl
lahf
shll
insl
lcall
cmpl
loopne
movsl
pop
cld
fcmovnbe
ret
mov
pop
mov
std
lods
jb
fcomip
cmp
stc
mov
in
pop
lahf
mov
daa
out
repz
movsl
mov
sbb
sahf
loop
sbb
pop
inc
push
push
sub
push
decb
pusha
pop
mov
clc
int
call
mov
fs
dec
fcmovb
lock
push
ja
pop
or
pop
into
outsl
rcrb
adc
mov
mov
repnz
mov
hlt
ret
sbb
mov
lea
repnz
fs
or
test
xor
xor
push
imul
scas
xor
push
and
popa
cmc
xchg
fs
popf
pop
sub
lcall
xor
pop
in
dec
pop
inc
ljmp
in
jo
es
push
call
fwait
pop
jno
jle
or
addr16
and
ret
scas
sub
xor
add
xchg
mov
xchg
cltd
shlb
mov
xchg
pop
cmp
or
call
aas
mov
pop
lahf
fwait
cs
fbld
in
pop
insb
sub
ljmp
pop
mov
negl
fstps
jns
into
pop
stc
pop
enter
fcoml
outsl
frstor
lods
insl
int
add
cltd
and
stos
jo
mov
outsl
nop
lret
in
sub
iret
popf
ja
jo
pop
ds
sub
pop
mov
xchg
cmpsb
rep
mov
std
or
pop
int
test
push
push
pop
movsl
mov
lods
jo
mov
mov
sbb
int3
xchg
rcl
stos
fldz
in
push
pop
das
inc
fcoms
xorb
lret
sbb
ret
mov
push
outsl
pop
test
lods
mov
pop
mov
dec
rclb
pop
or
lea
dec
jbe
test
rorl
dec
jge
sti
xchg
stc
stc
imul
xchg
add
sub
sbb
pop
repz
xor
pop
sbb
cmp
int
push
cli
leave
push
pop
fcom
mov
mov
mov
pop
sbb
bound
mov
adc
jb
push
pushf
shr
imul
push
js
mov
xchg
pop
add
fidivrs
lds
jno
pop
fimull
pop
jbe
and
insb
mov
mov
mov
in
fstpt
les
fiaddl
mov
inc
pop
dec
call
add
sub
es
out
jns
loop
ja
mov
mov
cmpsb
push
ret
pop
pop
dec
mov
imull
test
mov
push
sbb
jae
mov
icebp
fistps
lea
xor
mov
movb
lock
adc
rorl
jp
pop
aam
mov
mov
push
xchg
adc
pop
call
dec
jnp
and
push
pop
or
inc
jo
pop
lea
lods
lds
sahf
sti
adc
in
sub
sub
cmc
pop
jbe
scas
int3
add
fdivp
mov
mov
aam
in
shlb
fbld
shll
xor
ja
jno
cmc
and
push
test
push
call
mov
pop
pop
fs
nop
jbe
lcall
dec
push
mov
pop
sub
jnp
dec
pop
pop
scas
sbb
xor
bnd
xor
std
test
dec
pop
mov
xor
rcrb
adc
test
pop
fisttpll
enter
jae
mov
adc
mov
add
iret
fldcw
sbb
or
jg
pop
fwait
in
mov
pop
icebp
and
cmc
jo
cmp
mov
cmp
in
lret
xor
das
fmull
jmp
shlb
pop
andb
cmpsb
pop
push
rorl
int
shlb
xchg
pop
push
fldcw
call
shll
rolb
adc
cmp
fld
pop
dec
pop
ds
lea
pop
lret
and
push
xchg
jae
jmp
lret
fidivrl
outsb
mov
out
sub
lods
lret
mov
stos
push
pop
ret
mov
stos
lods
mov
lds
mov
pop
sbb
stc
cwtl
push
jnp
cmp
or
push
mov
adc
dec
and
call
and
pop
push
or
dec
imulb
addb
ret
pop
fwait
sbb
pop
out
ja
scas
jnp
loopne
nop
mov
mov
jmp
imul
out
out
pop
rolb
pop
fcomps
mov
test
sub
jnp
xchg
mov
xor
pop
mov
cmp
mov
xorb
cmp
insl
sbbb
gs
les
pop
pop
mov
loopne
jnp
leave
xchg
pop
push
in
sbb
vmwrite
fndisi(8087
insl
pop
int
addr16
std
mov
loop
sbbb
in
dec
out
mov
and
adc
jle
int
imul
xchg
sub
adc
and
mov
push
push
sbb
into
test
ljmp
loopne
push
push
sub
dec
sub
mov
add
mov
btc
mov
clc
negb
lcall
push
jnp
inc
add
sub
pop
xor
mov
xlat
or
push
pop
pusha
out
jb
jnp
cltd
paddsw
repz
pop
les
sbb
jp
and
inc
adc
loope
jmpw
pop
clc
jnp
imul
rorb
fdivl
xlat
popa
mov
pop
aam
test
daa
pop
int
popf
orl
mov
pushf
repz
ror
fcmovu
push
pop
push
subl
cli
pop
sbbb
in
out
push
test
scas
cld
stos
dec
pop
jg
mov
repz
jp
dec
std
test
cmc
pop
pop
sub
mov
sbb
test
ret
and
cli
mov
mov
add
sbb
fldcw
pop
ds
push
adc
andb
int3
in
xchg
mov
xchg
xor
dec
lock
cmp
out
jne
pushf
popa
adc
cltd
pop
push
pop
pop
xchg
adcl
fimull
mov
push
arpl
mov
daa
push
dec
pop
adc
shrl
enter
pop
jnp
push
and
mov
loope
xchg
adc
aad
pop
daa
jne
rcrl
ret
jbe
pop
clc
mov
mov
int
mov
sub
gs
pop
xor
pop
stos
rorb
pop
mov
inc
rcl
scas
mov
loope
or
clc
ret
pop
out
push
pop
pop
dec
shrl
mov
fcom
dec
and
xchg
lret
shll
sbb
dec
inc
lcall
mov
leave
push
xchg
push
cltd
adc
or
bound
mov
jns
aam
cwtl
cltd
shrb
int
pop
fisubrl
mov
loop
out
fidivrl
pop
pop
adc
sbb
sahf
and
mov
scas
pop
jnp
pop
ds
pop
subb
sbb
jnp
mov
add
lahf
cmpsl
cmp
pop
fdivrp
xorb
cld
inc
pop
xchg
cmp
call
test
movsl
outsl
dec
jb
pop
pop
or
dec
mov
dec
cmp
pop
cwtl
test
and
ret
lahf
push
sbb
adc
inc
jb
push
in
jbe
xor
int
push
ret
mov
xor
jbe
mov
outsb
push
mov
or
sbb
add
inc
popf
mov
repnz
call
xorl
jl
mov
jecxz
in
push
and
adc
pop
sti
cmp
fdivr
fcomps
xor
pop
movsl
subl
add
jae
xchg
mov
sbb
scas
mov
js
xor
sub
lods
dec
outsl
pop
push
pop
jo
mov
rorb
ret
mov
pop
sub
push
icebp
add
pop
mov
int3
add
ljmp
fildll
pop
xor
loope
cltd
fs
jmp
std
inc
and
cmp
int3
movsb
cmp
test
lea
inc
pop
pop
je
nop
imul
xchg
sbb
cwtl
adc
xor
pop
iret
sbb
bound
jo
in
pop
add
jae
gs
and
mov
pop
xchg
lds
sub
pop
nop
pop
dec
adc
inc
pop
and
xor
mov
fisubrl
lret
add
mov
cmp
push
mov
sbb
pop
jnp
jge
or
mov
out
mov
rclb
in
enter
inc
mov
loope
xchg
push
scas
mov
fmul
xlat
loopne
sub
add
pop
lret
fiaddl
js
scas
push
jecxz
daa
aaa
popf
mov
fdivrs
pop
sub
mov
int
out
add
cmpsl
lahf
pop
scas
jbe
jae
and
xchg
jge
inc
xchg
push
fcoms
int
aaa
arpl
pop
jbe
pop
mov
adc
enter
lret
push
imulb
inc
int3
pop
sub
mov
test
or
sbb
cmpb
pop
and
dec
repz
push
or
sub
out
mov
pop
hlt
ss
jo
bnd
or
jl
stos
push
int
stos
inc
arpl
mov
mov
mov
negb
push
sahf
fcomip
repnz
pop
ret
adc
aaa
jnp
xchg
push
push
mov
sub
jnp
pop
je
sti
push
push
sub
jl
shlb
cltd
imulb
dec
pop
in
stc
xchg
bound
repnz
dec
jle
mov
pop
imulb
das
xchg
inc
pop
push
repz
aam
loope
arpl
jle
fistpll
fbstp
xor
pop
cmp
mov
pop
sbb
mov
loopne
pop
in
mov
ljmp
popf
cmp
inc
out
mov
dec
data16
js
pop
adc
jecxz
dec
cmp
sub
cmpsl
cld
sbb
mov
pop
add
es
and
inc
lods
xor
sub
pop
mov
xor
mov
fidivrl
adc
xchg
cmpsb
or
inc
jg
jb
out
cmp
add
sbb
pop
fidivrs
out
or
jns
pop
jge
mov
xor
pop
add
test
shlb
dec
lahf
addl
insl
push
loopnew
pop
leave
cmp
mov
pop
out
sbb
lahf
bound
jo
mov
fsubrl
fcmove
scas
pop
je
pop
inc
pop
jge
jp
fcompl
dec
sbb
lret
lcall
icebp
mov
xor
lret
push
sbb
inc
jl
hlt
jb
aas
pop
insb
jmp
add
sub
popf
pop
jo
out
dec
leave
or
add
loop
int
out
das
insl
test
mov
mov
jecxz
mov
inc
xchg
cmpsb
mov
sub
outsb
pop
lahf
loopne
jae
dec
cmpsl
xor
xchg
fwait
inc
hlt
bound
dec
adc
push
sbb
cmp
int3
adc
lods
fistps
out
xor
out
bound
and
pop
cmp
sti
pop
jg
sbb
mov
jp
add
out
jnp
lcall
add
in
cmp
test
pop
mov
ja
mov
aaa
pop
push
fs
xor
or
adc
fistl
pop
int
cs
inc
mov
stos
push
lahf
lea
pop
push
mov
lret
xchg
sbb
ja
jne
sub
sti
mov
in
fnstcw
push
addps
lds
jb
lods
not
inc
dec
insl
jecxz
add
lea
icebp
push
cld
pop
std
xor
pop
lret
fisubs
rcrb
jns
xchg
and
fsubs
xchg
sub
dec
pop
pop
cmp
jmp
lea
pop
rcrb
dec
push
push
sub
or
and
mov
pop
sub
xor
pop
jno
dec
push
shlb
inc
pop
sub
sbb
mov
pop
lcall
mov
fistl
sub
pop
sti
lock
mov
ss
pop
sbb
push
jb
rcrl
cmpl
inc
mov
xor
cltd
inc
cltd
xchg
jl
jb
jecxz
div
jo
rorb
int3
fdivs
pop
xchg
repnz
out
lahf
xor
mov
jns
pop
mov
sbb
popa
ret
push
mov
mov
cld
leave
pop
ljmp
sbb
pop
lcall
pop
cmp
fimull
sub
fldt
push
cmp
rdpmc
xchg
jb
fstpl
push
cwtl
jo
cmp
pop
xchg
xchg
mov
sbb
cmp
pop
jge
mov
pop
cmp
sub
jnp
cli
dec
push
addr16
mov
call
pop
or
int3
test
cld
movsb
lret
jo
int
pusha
or
fdivrp
mov
cmp
push
shl
jo
pop
mov
sub
push
push
leave
jb
jg
sbbl
pop
push
dec
or
lahf
mov
inc
mov
pop
mov
dec
xchg
bswap
dec
mov
rcrl
mov
xor
xchg
and
or
shrb
push
pop
xor
daa
ret
mov
sub
ds
pop
cmp
popa
out
pop
dec
ja
mov
xor
test
call
pop
int3
sbb
sub
aad
pop
mov
in
js
adc
pop
or
enter
mov
lahf
pop
cltd
insl
jge
cmp
nop
in
push
dec
mov
lea
dec
xchg
mov
push
mov
or
add
ss
jb
xor
jle
mov
jns
jnp
mov
repnz
xor
cmp
push
push
int3
pop
xchg
sub
outsl
sub
adc
ret
loope
add
jbe
pop
sahf
cmpsl
mov
aad
dec
or
pop
sbb
xchg
mov
push
pop
divb
cmpsb
adc
sbb
int3
fld
xchg
pop
pop
or
rcrb
inc
add
sarl
mov
adcb
cli
pop
pop
and
mov
jg
in
rcl
dec
int3
pop
cmp
or
jno
pop
xchg
dec
inc
cs
pushf
popf
out
pop
mul
jo
lcall
add
fcmove
clc
pop
scas
call
pop
mov
movzwl
sar
jmp
test
pop
jbe
sbb
sub
and
fsubs
pusha
sbb
dec
ret
pop
sbb
popa
xchg
pop
ret
orb
xor
stos
into
push
pop
ljmp
les
aad
inc
jecxz
xor
mov
sub
fisubrl
in
int3
mov
or
pushf
or
jmp
jb
movsl
inc
pop
jnp
lcall
pop
cmp
xchg
adc
lahf
insl
xor
scas
sub
inc
sbb
add
add
cmp
cmp
sbb
les
or
pop
cmpsl
rcrl
jae
cmp
adc
daa
ret
inc
pop
es
xor
ss
or
sbb
int
les
push
dec
pop
pusha
addr16
jmp
ja
jo
scas
ljmp
jp
cmp
jo
add
push
out
mov
cmp
out
xchg
pop
in
das
xchg
loop
inc
and
xchg
fsubrp
adc
pop
sbb
cmp
mov
pop
pop
adc
mov
daa
mov
cmc
notb
cmp
inc
xchg
fwait
sbb
js
jle
sub
pop
mov
out
hlt
fucomp
sbb
imull
jge
mov
rcrl
cwtl
sbb
bound
sub
lods
pop
jmp
or
pop
adc
test
lods
push
adc
cli
cwtl
pop
scas
pop
pusha
cmp
pop
jb
pop
iret
jbe
int3
mov
pop
popa
aaa
js
sub
lret
mov
add
pop
sbb
and
pop
jo
xor
lea
push
add
pop
dec
in
cltd
pop
stos
and
sbb
aaa
ret
std
in
outsb
int
cmp
fadd
repz
mov
jo
dec
pop
pop
psadbw
orb
int3
pop
imul
lahf
int
push
adc
outsb
and
dec
addr16
pop
sbb
bound
shrl
sbb
pop
rcrb
pop
negb
sbb
or
pusha
int
dec
loope
lahf
cmp
je
fstpt
jecxz
gs
inc
lock
fs
mov
jle
cmpb
inc
cmp
jbe
sti
stos
sub
push
fstsw
sub
scas
xchg
or
mov
cmp
fcompl
mov
dec
mov
and
lcall
sbb
jnp
out
add
scas
push
sub
sti
stos
mov
mov
inc
lods
in
stc
xchg
fmul
push
lods
pop
mov
mov
gs
mov
sarl
sbb
pop
mov
pop
sti
pop
add
dec
pop
test
xchg
mov
lds
push
add
adc
call
mov
pop
les
div
outsb
in
movsb
mov
out
dec
mov
leave
aaa
mov
iret
sub
mov
pop
ja
repnz
add
ljmp
pop
hlt
aad
pusha
lret
mov
jge
push
pop
mov
sub
jecxz
xor
pop
dec
je
sub
push
nop
repz
and
aam
mov
arpl
mov
sbb
clc
repnz
mov
pop
push
fisttpll
adc
int
int3
sub
xor
inc
pop
inc
xchg
daa
push
inc
test
in
xchg
int
mov
push
setg
push
mov
xchg
aam
js
test
inc
fdivl
aas
pop
xchg
cld
mov
xlat
ss
jnp
jl
sbb
pop
pop
fidivrs
inc
pop
pop
dec
sarl
pop
mov
push
dec
inc
push
adc
mov
jns
mov
xchg
stos
in
push
pop
ja
stos
test
push
xorl
pop
pop
lea
cmp
loope
pop
jge
andb
je
test
jne
pop
ret
iret
lret
xchg
jmp
xor
push
pop
shl
sub
pop
pop
jl
and
addr16
pop
pop
pushf
xchg
sbbl
sub
push
push
pop
or
jp
adc
fcomi
fwait
test
repnz
jnp
pop
sbb
and
jmp
cmp
push
jne
push
xchg
and
aad
ficoml
inc
xlat
js
push
mov
jg
out
mov
inc
pop
or
int
mov
pusha
push
sbb
mov
lods
mov
xor
flds
rcll
cmpsb
lods
lock
sti
out
xchg
jle
scas
cmpl
jecxz
mov
sub
arpl
sub
out
sbb
cmp
scas
jo
fadds
pop
cltd
or
int
outsb
pop
mov
gs
stc
xor
push
aam
imull
lods
push
pop
pop
daa
fiadds
pop
jge
and
mov
fwait
pop
mov
lcall
adc
push
dec
int3
enter
adc
or
frstpm(287
std
rorb
pop
out
jnp
repnz
fadds
jmp
and
sub
mov
mov
outsb
cmp
jo
negl
fmull
mov
jns
dec
jnp
pop
movsl
sub
xor
add
cmpsl
lahf
lea
pop
test
inc
nop
push
jns
or
cmp
insl
pop
jne
mov
push
sub
andl
outsb
ljmp
and
test
dec
insl
test
pop
int3
jbe
and
sbb
push
push
cld
pop
and
shrl
mov
int
bound
jo
mov
repnz
or
movsl
ljmp
sbb
mov
mov
pop
jb
mov
pop
insl
inc
out
or
pop
or
jnp
add
shll
pop
push
sbb
add
jl
xchg
ljmp
mov
insb
imul
dec
aas
pop
sbb
scas
push
ja
jle
daa
out
in
sbb
test
bound
fiadds
dec
pop
lcall
int
ja
sub
cmp
orb
data16
jns
ja
sti
lret
out
scas
mov
jno
test
ss
pop
mov
cli
pop
mov
mov
mov
pop
push
lret
sbbb
into
pop
fneni(8087
mov
xchg
cltd
jmp
pop
pshufw
xchg
dec
xchg
pop
or
in
inc
xchg
jecxz
std
jg
nop
or
pop
mov
fcomi
inc
and
lcall
pop
and
mov
xor
mov
sahf
jo
push
and
fists
mov
into
mov
sub
imul
jmp
in
leave
jbe
imul
pop
fadds
mov
mov
sbb
xor
mov
lock
mov
ss
push
push
adc
inc
rorl
addr16
insl
loop
xor
dec
jns
pop
loopne
mov
pop
popf
inc
int
es
sbb
scas
test
add
add
mov
dec
cltd
adc
inc
dec
lock
iret
pop
sub
test
mov
sbb
mov
push
scas
cmc
dec
xchg
cltd
mov
mov
pop
leave
sbb
sbb
scas
xchg
daa
pop
imul
pop
cs
push
push
mov
sub
out
adc
insb
xorb
add
adc
sbb
je
sahf
mov
popa
fistps
pop
paddb
pop
sbb
mov
cmp
aaa
lahf
add
shll
sbb
adc
lods
in
pop
xor
clc
jg
push
jl
lret
popf
in
jl
int
les
lret
mov
lods
out
nop
pop
lea
jle
push
jnp
pop
push
mov
aaa
pop
in
push
es
int
mov
or
adc
cld
cmpsb
jbe
out
pop
push
loope
mov
iret
or
fcmovb
arpl
dec
ja
in
imulb
into
mov
xchg
adc
pop
xchg
aaa
jl
push
pop
dec
icebp
lods
pop
or
out
mov
test
mov
ficoml
std
jne
out
gs
pop
fmulp
int3
adc
into
push
leave
movsl
daa
loope
jb
ret
lods
and
xchg
jno
ja
pop
andl
fildll
or
mov
ret
mov
out
icebp
push
add
and
jge
xchg
jbe
cmc
jns
pop
lock
fadd
sbb
js
or
add
cs
fxch
add
testl
frstor
push
in
mov
sbb
mov
inc
or
je
pop
mov
cli
stos
mov
sbb
adc
jbe
ucomiss
pop
push
inc
dec
xchg
mov
hlt
call
jl
xchg
jne
sub
pop
sub
movsl
push
xor
pop
fnstsw
cmp
fnstenv
mov
xchg
lcall
sbb
movsb
sbb
mov
pop
sbb
mov
sbb
pop
lea
and
xor
adc
or
daa
pop
jne
fdiv
dec
mov
fistpll
imul
and
in
xchg
push
jp
push
cmp
mov
loope
mov
cwtl
xchg
xor
mov
cltd
jmp
xor
pushf
cmp
fistl
mov
rcrl
mov
push
pop
sbbb
in
inc
mov
pop
scas
sbb
icebp
mov
push
xchg
push
pop
and
ljmp
pop
xchg
dec
jnp
xchg
dec
mov
insb
jle
mov
mov
sub
je
jbe
dec
int3
push
es
sub
or
sub
jo
adc
mov
pop
dec
cmp
add
pusha
mov
mov
sub
out
pop
stos
push
dec
cmp
jge
int
scas
dec
or
rorb
aas
ds
std
pop
xchg
dec
sbb
pop
mov
lock
sub
pop
mov
cmpb
and
xchg
addr16
pop
add
mov
fdivl
push
into
pop
xchg
in
mov
test
js
lret
pop
je
shl
cmp
mov
xlat
jg
pop
add
fsincos
in
in
pop
clc
int
add
pop
imul
mov
jno
or
inc
sbb
cmp
pop
daa
int
idivl
out
insl
pop
sbb
pop
mov
sub
cmc
push
mov
outsl
push
jo
mov
ljmp
or
subl
add
sbb
lret
pop
cmp
xor
push
repz
hlt
loope
fs
sbb
push
clc
add
sub
rcrb
add
jb
mov
inc
pop
mov
pop
xchg
and
arpl
sbb
sbbb
jmp
int
icebp
cmpl
mov
sbb
push
sub
fcoms
mov
in
pop
add
push
jmp
add
test
insb
fs
dec
sbb
pop
xor
ret
xchg
push
xchg
arpl
push
push
fisubrs
fcomps
sbb
pop
pop
jmp
repz
shl
out
mov
sbb
imull
xlat
push
mov
stos
in
loope
stc
sub
push
dec
and
into
sbb
jo
pop
mul
orb
nop
and
mov
test
sbb
dec
pop
jb
repnz
jbe
jl
mov
fcomps
insl
inc
jo
jae
xchg
lods
mov
xlat
int
lahf
pop
mov
pop
std
sub
or
in
mov
adc
daa
rcrb
jb
in
add
mov
and
repz
mov
int3
ror
xchg
movsb
pop
mov
dec
mull
pop
lcall
pop
shll
cmp
mov
rcrb
lcall
cmpsl
loopne
arpl
sub
jbe
mov
jmp
mov
lret
mov
int
adc
pop
inc
negb
push
repnz
sahf
fwait
pop
ljmp
mov
dec
fstpt
pop
pusha
and
xor
pop
mov
xchg
insl
aam
xor
iret
lahf
fmulp
and
and
hlt
cmp
push
pop
jne
rorb
pop
jbe
xor
mov
mov
push
sbb
js
xor
rol
cmp
mov
mov
cmpsb
pop
clc
int3
fists
pop
int
mov
test
and
int3
push
test
and
mov
popf
lods
jmp
dec
or
fcomps
pop
scas
imul
aaa
push
mov
sbb
xchg
icebp
sub
jnp
mov
push
inc
push
mov
pmulhuw
pop
sbb
pop
cmp
sbb
nop
xchg
test
das
mov
mov
or
dec
rorb
fldt
aas
adc
ficomps
pop
mov
sti
shl
pop
sbb
decb
mov
lahf
cld
repz
lret
cmp
fsubr
pop
adc
mov
aam
cwtl
movl
push
test
mov
add
pop
pop
pushl
pop
nop
cld
iret
mov
pop
test
sahf
pop
add
out
push
lret
and
lret
pop
je
data16
out
addr16
out
pop
shll
mov
movsb
cltd
cli
xchg
iret
pop
push
mov
fdivrl
mov
std
cltd
adc
je
loope
stos
test
nop
add
popf
cmp
mov
pop
jecxz
lret
cli
jb
mov
lret
imul
push
repz
fcompl
popa
inc
mov
int
push
inc
xchg
fs
dec
arpl
and
push
jne
into
cmp
mov
loope
mov
adc
popf
sub
enter
in
inc
dec
roll
in
push
lret
pop
push
push
sub
cld
fcom
stos
pop
mov
imul
in
scas
jmp
xor
inc
push
mov
mov
jecxz
mov
mov
xor
fwait
jge
mov
jnp
sbb
cmp
adc
mov
inc
mov
jle
xchg
push
xchg
dec
in
mov
ja
dec
pop
cwtl
sub
data16
xchg
negl
mov
jae
inc
gs
mov
dec
stos
popa
xchg
adc
sti
mov
mov
inc
mov
mov
js
lret
repz
mov
pop
mov
push
incb
out
sbb
lea
pusha
fistps
mov
cmp
push
stos
flds
adc
pop
dec
adc
pop
jg
dec
pop
jne
sbb
jecxz
xor
pop
shlb
mov
int3
loopw
mov
in
pop
jb
sti
mov
pop
cld
sub
rclb
dec
inc
pop
mov
adc
pop
add
mov
jb
lock
dec
pop
bound
insb
int
mov
mov
pop
gs
jg
mov
pusha
pop
add
lret
imul
pop
adc
jp
out
cwtl
or
lcall
dec
xor
cltd
pop
js
push
mov
aad
sub
jp
fs
fimull
fidivl
test
outsb
xor
dec
inc
jge
push
pop
mov
adc
dec
int
fdivl
addl
mov
and
adc
icebp
pop
incb
pop
sub
cmpsb
mov
or
mov
gs
sbb
cmp
mov
cmp
jge
fidivrl
scas
cmc
sub
adc
mov
pop
insb
or
sbb
jnp
outsl
push
inc
aam
jge
or
jne
jb
push
xchg
arpl
pop
sub
sbb
pop
clc
jns
add
xlat
dec
pop
in
jb
cmpsl
jbe
add
xchg
mov
mov
int
ds
imul
mov
sarl
dec
pop
in
movsl
fcoms
pop
insb
inc
or
pop
lds
or
cmp
push
int
scas
out
cmpsl
push
pop
inc
pop
xchg
hlt
push
mov
add
mov
jge
stos
dec
jbe
repz
ret
dec
jns
inc
movsb
sti
and
cmp
jp
pop
inc
scas
cs
pop
sub
pop
jecxz
xor
lods
xchg
mov
add
jb
pop
lods
stc
movsl
pop
pop
mov
xchg
push
mov
mov
pop
xor
xlat
sbb
loopne
insl
lcall
rcrb
mov
out
scas
pop
scas
movsb
cmp
jo
lret
and
imul
mov
pop
mov
leave
sbb
pop
push
jge,pn
inc
addr16
cmpsb
adc
pusha
sub
pop
mov
imull
lret
pop
loop
repz
loopne
pop
add
sti
dec
mov
lahf
push
arpl
push
scas
jns
cmp
fsubrl
cld
hlt
pop
int
cmpsb
es
loop
movsb
ja
shlb
gs
enter
sub
jecxz
jecxz
mov
sti
loop
movsb
mov
jmp
test
add
jle
xchg
jp
pop
cmp
jne
mov
push
pop
movsb
fnstenv
jmp
mov
pushf
popa
mov
aaa
adc
negl
jmp
out
jge
addr16
sbb
jns
xchg
test
ret
or
call
pop
icebp
xchg
and
pop
scas
fs
jmp
xchg
dec
mov
mov
push
jo
mov
and
sub
sub
xchg
pop
in
cmc
js
test
xorb
mov
aaa
movsb
sub
jo
mov
sti
test
sbb
xor
iret
push
adc
mov
mov
adc
push
pop
nop
mov
xchg
push
pop
push
pop
push
cmp
pop
dec
mov
xchg
jb
aad
daa
xchg
cltd
sub
pop
int
into
nop
das
dec
mov
mov
sbb
jo
xchg
sbb
dec
cwtl
mov
pusha
loopne
les
xchg
xchg
jle
dec
sbb
xlat
pop
in
pop
xchg
mov
cmp
sub
jge
mov
adc
dec
push
pop
inc
shlb
pop
pop
xor
cmp
sbb
ja
mov
jecxz
mov
sbb
repz
lds
adc
pop
in
pop
sbb
loope
inc
int3
fwait
xchg
mov
pop
lds
lods
xor
lcall
stos
xchg
int3
pop
add
fcoms
test
mov
in
dec
sub
mov
cmp
fcomps
dec
sub
mov
lret
push
imul
xchg
aad
jle
pushf
out
pop
jbe
mov
mov
xorl
sub
pop
leave
mov
push
pop
sbb
adcl
test
pop
push
int
lret
mov
fadds
inc
fnstsw
jmp
jg
mov
xor
or
pop
test
jno
mov
cltd
pop
pushaw
mov
dec
push
jmp
inc
mov
fadds
loopne
pop
dec
xchg
jb
movsb
enter
jbe
fbld
rcrb
in
pop
fcom
sbb
int3
pop
inc
in
das
cmpsl
test
int
inc
add
pop
imul
jo
mov
stos
xor
test
inc
scas
scas
les
add
mov
sahf
cltd
gs
pop
lahf
stos
inc
mov
fisttpl
lds
and
jb
push
jge
jmp
stos
fsts
adc
in
into
dec
mov
mov
inc
cmc
clc
jge
jg
fisttpl
dec
pop
add
sahf
data16
pop
movb
out
push
iret
pop
in
jbe
xchg
pop
or
sub
sbb
mov
mov
jns
inc
leave
xchg
or
pop
loope
push
inc
pop
pop
js
jb
sbb
clc
cmp
dec
insl
mov
push
loopne
xchg
inc
mov
push
in
sbb
movsb
mov
pop
out
jg
ds
jne
aam
cs
into
pop
mov
add
bound
stos
jecxz
mov
pop
popa
sub
pop
mov
adc
movsl
jge
mov
sbb
and
in
repz
and
addr16
outsl
pop
aam
mov
sbb
pop
jns
adc
pusha
int
pop
mov
and
xor
add
pop
jae
sbb
pop
int3
test
push
loope
repnz
jp
dec
adc
pop
xor
inc
pushl
fcomip
pop
sbb
add
push
out
pop
sbb
and
cltd
pop
imul
dec
rcrl
push
adc
in
icebp
jp
fstpl
or
les
push
mov
aam
sbb
test
scas
push
popa
inc
xchg
int3
cmp
pop
icebp
xlat
int
jbe
movsl
lret
jo
and
shrb
decb
test
lcall
mov
lods
hlt
mov
pop
and
and
call
push
pop
negl
xor
mov
jns
mov
aaa
ret
adc
pop
movsb
mov
out
adc
addl
rclb
or
mov
bound
jle
pop
insb
xchg
xchg
jns
jbe
negl
movl
ret
pop
jmp
sub
mov
and
pop
icebp
outsb
xor
xchg
lret
cld
pop
pop
idivb
ds
cmp
push
pop
pop
dec
aad
push
std
out
stc
push
pop
clc
mov
add
popf
pop
pop
mov
xchg
xchg
sbb
inc
sahf
mov
lods
mov
jb
ljmp
movsb
push
xchg
mov
negb
es
pop
add
lret
pushf
push
lret
cli
fnstenv
push
scas
aam
pop
pop
xchg
adc
pop
sbb
dec
pop
sbbl
cs
cltd
adc
test
rcrl
mov
dec
add
lahf
cmc
xor
int3
icebp
lods
shr
cmp
mov
xchg
adc
pop
addr16
mov
push
divb
xchg
pop
pop
jge
inc
pop
je
sbb
xchg
clc
arpl
inc
push
mov
pop
xor
pop
jbe
test
fcomps
fxch
js
pop
sbb
xchg
in
pop
push
popa
repnz
daa
pop
mov
sti
int
scas
jo
scas
dec
mov
clc
mov
clc
xchg
pop
aas
push
sbb
fstpt
pusha
dec
pushf
pop
pop
js
jno
icebp
mov
mov
loopne
cmp
pop
pop
aad
sbb
out
sbb
aas
subb
pop
or
sub
pop
mov
es
jns
pop
jecxz
std
inc
or
xorb
rcll
sub
mov
mov
pop
sbb
mov
jmp
dec
mov
mov
fdiv
cmp
push
lods
add
aas
mov
les
clc
xchg
pop
sub
pop
mov
mov
lea
pop
pop
fstl
pop
jge
push
dec
cmp
sbb
pop
or
push
jo
mov
mov
shrb
xor
pop
ret
adcb
dec
push
jbe
int3
pop
lock
pop
xchg
mov
sbb
jp
dec
mov
push
push
rorb
pop
insl
dec
movsb
int
stos
adc
dec
aam
gs
pop
sbb
mov
xchg
lds
data16
arpl
shl
into
stos
jns
xchg
xor
aad
xlat
test
mov
lock
jp
and
pop
in
sbb
jnp
push
dec
and
add
xchg
nop
mov
pop
dec
or
icebp
add
btr
jecxz
push
fcom
sub
leave
sahf
test
mov
gs
bound
push
arpl
pop
or
je
shl
out
fs
fisubrs
xchg
pop
push
add
pop
nop
lret
dec
mov
imul
pop
cs
push
cli
inc
and
pop
cmp
lods
jbe
dec
xor
inc
pop
adcl
sbb
jae
add
jo
xchg
insb
call
mov
xchg
scas
mov
leave
pop
jmp
sub
pop
and
lea
and
mov
cmp
pop
pop
aas
gs
lods
int
dec
lret
lds
dec
movsl
adc
pop
push
sub
cmp
pop
int3
std
bound
lahf
jb
dec
pop
pop
push
mov
push
lcall
lds
mov
xchg
adc
dec
pop
subb
test
pop
test
ss
or
lret
aad
sub
mov
mov
cld
push
mov
das
dec
or
pop
dec
xlat
cltd
xor
xchg
push
test
jp
xchg
cs
cmova
pop
ret
mov
xchg
sbb
cltd
scas
or
push
pop
mov
pushl
repnz
jns
int
jecxz
mov
push
cltd
cltd
inc
jbe
sub
xchg
sbb
test
int3
pop
jmp
pop
mov
mov
add
daa
in
xlat
and
inc
iret
dec
xor
cmpsb
push
inc
and
lea
pop
in
adc
popf
xor
andb
xchg
stc
mov
int
push
pop
inc
lock
or
jo
or
add
dec
pop
inc
cmp
shrb
push
sbb
mov
push
enter
enter
imul
pop
pop
mov
int
mov
jle
push
jae
xor
or
pop
inc
sahf
mov
sti
jecxz
std
cltd
pop
in
jmp
addl
pop
je
pop
pop
jbe
sbb
mov
in
into
loope
sub
jns
mov
stc
lret
cmp
stos
adc
lcall
sub
lock
jg
cmp
andl
iret
adc
push
outsb
pop
mov
jbe
jecxz
loope
and
pop
push
adc
adc
shl
jmp
jo
jns
mov
lahf
call
dec
in
pop
adc
or
int
fisubs
fcmovnb
mov
mov
pop
repnz
cmp
jb
clc
mov
popf
fwait
repz
mov
in
pop
arpl
or
sub
add
bswap
int3
pause
push
ss
clc
in
adc
shll
jno
leave
push
in
dec
mov
pop
pop
sbb
pop
les
pop
loop
xlat
xor
loopne
in
in
lret
pop
xor
mov
int
test
and
mov
xchg
cmp
imul
mov
push
int
popa
fidivrl
push
xchg
scas
loopne
jo
push
cltd
mov
mov
iret
imul
jae
addr16
sub
sub
pop
push
dec
push
int
imulb
mov
mov
ljmp
fcompl
pop
pop
and
xor
orl
cli
das
dec
sarl
outsb
xor
adc
mov
insl
fidivl
jbe
or
scas
pop
idivl
xorb
out
into
dec
push
les
loope
mov
sarb
inc
jmp
pop
xchg
xor
mov
data16
dec
mov
push
or
lret
inc
cmp
divb
mov
pusha
pop
enter
lods
icebp
inc
pop
mov
cmp
mov
sub
outsl
xor
pop
jae
int
cmp
mov
cld
pop
ficomps
or
test
add
and
push
pop
sub
inc
rorb
adc
mov
cld
jbe
add
dec
mov
pop
lock
and
sbbb
or
nop
fcomps
pop
push
jmp
pop
shll
sbb
out
fstpl
aad
cltd
or
in
mov
mov
aas
sub
ret
addl
insb
nop
adcb
and
pop
and
lods
xor
aas
mov
jo
gs
pop
mov
sti
mov
scas
xchg
arpl
add
jno
cmp
xchg
push
mov
aad
test
andl
imul
mov
int
mov
mov
inc
pop
pop
xor
xchg
xchg
mov
and
pop
push
imul
stos
pop
inc
lret
outsb
cmp
or
ja,pt
int3
aas
xor
pop
mov
xchg
fldt
inc
lods
aad
jb
pusha
out
ret
insl
dec
hlt
das
int
rcrb
sub
pop
sbbb
ret
aaa
mov
push
test
out
pop
xor
mov
xor
push
es
xchg
pop
in
jecxz
xchg
lock
xchg
pop
daa
push
fnsave
pop
or
shrl
push
inc
popf
addr16
int
test
cld
inc
mov
arpl
repz
insb
cli
inc
ret
xchg
je
outsl
xchg
or
sub
inc
push
pop
insl
mov
dec
lret
mov
dec
mov
sbb
fucomp
pusha
arpl
dec
cltd
inc
pop
dec
les
out
stc
cmp
ds
mov
pop
rcrb
mov
es
and
ja
insl
xor
sub
movsl
pop
xlat
cmpsb
mov
jb
jbe
fsubrl
iret
addr16
addl
and
push
sbb
pop
add
mov
insl
xchg
adc
in
pop
and
subb
int3
insb
xchg
ljmp
pop
fldt
jbe
mov
stos
mov
dec
lods
lcall
jl
mov
aaa
stc
mov
mov
out
loopne
std
addr16
jge
xlat
pop
mov
daa
mov
jmp
mov
loop
inc
mov
and
cmp
fistl
xor
aad
movsb
mov
dec
daa
lds
ret
clc
in
xchg
pop
inc
pop
sub
lock
ja
aas
dec
pop
aad
jnp
int
ret
out
add
notb
repz
cli
sub
pop
cwtl
push
pop
mov
ljmp
adc
cld
xchg
scas
int3
push
sub
inc
lret
js
xor
mov
mov
xchg
sbb
and
adc
xchg
in
mov
arpl
lahf
or
imul
jnp
xchg
sbb
inc
inc
mov
pop
das
push
inc
scas
pop
pop
xor
mov
pop
push
pop
mov
xchg
dec
test
pop
imul
inc
in
int
lods
adc
pop
dec
test
push
cmp
inc
xchg
call
pop
pop
sbb
sbb
dec
and
dec
cmp
leave
mov
arpl
xorl
sbb
lahf
not
lahf
out
mov
add
jb
mov
cmp
mov
xor
enter
fsubs
pop
xor
mov
lds
push
loop
pushf
dec
inc
int3
pop
mov
cmp
dec
hlt
add
pop
push
sahf
mov
pop
sbb
jl
cmp
sbb
lret
pop
lret
js
inc
pop
mov
int
ljmp
mov
fstpl
std
mov
mov
jle
mov
xchg
pushf
sub
mov
lret
pop
jns
icebp
fsubrs
sbb
enter
pop
sti
jbe
fistl
ffree
lret
mov
adc
mov
pop
jns
mov
sbb
adc
mov
mov
jge
in
out
fistpl
and
mov
mov
mov
jbe
and
cwtl
js
loopne
dec
pop
fdivl
mov
mov
pop
mov
fsubrl
rcrb
or
mov
xchg
inc
pop
and
ret
jbe
fucomi
push
mov
xor
sbb
mov
sub
jg
pop
imul
jp
cmc
cltd
test
repnz
stc
xor
mov
into
sub
jmp
clc
inc
sbb
in
jns
lcall
addr16
dec
cwtl
jno
cmp
scas
cmp
cmp
jmp
andl
out
int
xchg
push
call
fcmovu
sbb
fbstp
cmp
std
mov
movl
pop
loopne
ss
jb
push
xor
das
fldenv
sbb
pop
jmp
insl
and
pop
or
sbb
test
dec
push
leave
out
pop
shrl
cwtl
out
fcmove
pop
push
aad
lods
lea
pop
add
mov
in
push
sub
sbb
mov
decb
pop
inc
dec
pop
test
idiv
fs
push
sahf
push
pop
js
sub
jmp
pop
sbb
cli
pushf
add
test
test
jb
lret
pop
xor
mov
sub
pop
ljmp
adc
pop
pop
jns
cld
jno
pop
daa
roll
pop
into
mov
push
and
in
xchg
xorl
pop
stos
int
pop
cmpb
xchg
cmc
out
push
sbb
pop
mov
mov
in
rcr
sbb
mov
xchg
mov
sub
scas
push
sbb
into
idiv
cmp
in
mov
add
mov
dec
mov
outsb
sub
insb
pop
leave
jg
enter
into
lret
mov
nop
inc
arpl
adc
cmp
xchg
push
sbbl
addl
fldpi
push
jnp
sub
stos
scas
push
les
pop
cbtw
fs
sti
add
and
or
and
jle
lahf
mov
in
lods
pop
inc
lahf
pop
push
mov
add
sub
out
scas
add
push
and
or
adc
pop
enter
fs
mov
jecxz
leave
imul
fistl
addr16
pop
lret
pushl
add
sbb
pop
dec
cmp
add
fbstp
xlat
es
mov
cli
mov
ss
add
xchg
int3
pop
xchg
and
shll
cmpsb
out
pop
mov
sti
dec
mov
jns
scas
cld
jg
imul
insl
lods
sarl
ljmp
mov
pushf
mov
mov
mov
fcom
test
inc
mov
cmp
pop
inc
js
aas
nop
jae
pop
sbb
lret
and
dec
mov
pop
and
fidivl
in
push
mov
mov
arpl
pop
sbb
inc
scas
aas
rorb
cmp
shll
jns
xchg
mov
pop
push
mov
or
pop
xchg
fisttpll
mov
and
mov
pop
add
mov
mov
jns
sbb
lods
mov
xchg
cmp
por
stc
adc
mov
je
test
das
pop
cmp
jnp
loop
inc
mov
add
movsl
add
pop
cmp
pop
and
push
in
rcll
cmp
sbb
sbb
pop
mov
inc
int
dec
push
mov
pop
sub
pop
int
or
sti
pop
xchg
test
adc
leave
arpl
adc
pop
mov
pusha
and
inc
jl
stos
pop
pop
xor
jbe
gs
mov
pop
xlat
std
out
jecxz
or
test
out
ffreep
in
xchg
stos
fwait
pop
pop
mov
xchg
mov
out
cmp
fimuls
test
pop
sub
jno
clc
and
sbb
pop
adc
in
and
es
push
mov
inc
add
mov
daa
in
fs
test
pushf
lock
mov
inc
scas
add
pop
sub
pop
adc
lahf
add
add
lcall
xor
sbb
inc
leave
pop
in
sti
pop
nop
jbe
in
std
dec
jge
mov
popf
pop
xor
sub
ja
pop
xor
leave
xor
and
fwait
cmp
and
pop
stc
xchg
add
pop
popf
test
jg
push
pop
xchg
sbb
jb
sbb
push
out
or
mov
cmpsl
stc
pop
sub
daa
pop
push
in
or
xchg
sub
in
inc
xor
aas
lea
enter
dec
sbb
mov
pop
in
stc
mov
pop
and
cmp
xchg
and
pop
in
adc
inc
pop
xchg
outsb
xchg
pop
aaa
mov
je
mov
xchg
sbb
dec
dec
es
lods
inc
jecxz
call
mov
push
pop
pinsrw
jne
scas
jb
mov
lcall
dec
scas
lea
sbb
pop
cmp
cmp
fcoml
jge
mov
pop
das
rcrb
stos
sahf
std
int
daa
ja
xlat
rclb
jno
sar
pop
push
stc
push
pop
cmpl
inc
test
out
dec
mov
push
mov
add
xchg
sbbl
in
movsb
pop
cmc
icebp
dec
fbld
imul
fisubs
jno
imul
and
push
pop
push
orb
cs
cltd
sbb
sbb
mov
sub
pop
mov
int
pop
push
and
call
add
dec
sbb
pop
inc
aaa
lret
fcomps
cld
cmp
or
jmp
mov
pop
jmp
shll
push
in
mov
jb
fs
test
and
out
ss
clc
sub
jo
pop
call
jnp
mov
arpl
push
mov
sbb
bswap
enter
lahf
mov
jo
pop
icebp
xchg
sub
or
mov
out
jg
aam
adcb
lods
xlat
lahf
mov
pop
or
add
pop
test
mov
inc
out
xor
lods
mov
dec
das
jno
mov
cltd
sbb
gs
cli
movsb
or
push
addps
and
adc
mov
iret
sbb
xchg
jge
pushf
or
pusha
dec
adc
mov
lret
dec
pop
int3
or
dec
jne
aas
mov
dec
mov
fcomi
jecxz
sub
pop
jno
out
nop
xor
popa
lds
aaa
adc
pop
loop
orl
jo
pop
fdecstp
sti
lock
inc
and
pop
jno
adc
sbbl
pop
pop
loopne
das
mov
pop
mov
or
arpl
sbb
int3
test
inc
gs
sub
cld
addr16
cmp
shlb
xlat
movsl
fisttpl
leave
jl
dec
out
pop
bound
cmp
js
mov
push
add
orl
pop
bound
outsb
imul
out
std
xor
push
lret
lods
movsl
nop
lods
inc
inc
cwtl
cltd
repz
fiaddl
cltd
faddl
and
mov
outsb
lret
pop
jno
fdivs
dec
sbb
fidivl
pop
mov
sti
xchg
mov
sub
ljmp
movsl
into
pop
lods
addr16
mov
mov
mov
mov
pop
cmp
shlb
ja
and
int3
cmpsl
adc
sub
mov
scas
jecxz
jge
push
or
xor
dec
icebp
xchg
pop
push
push
mov
and
add
pop
pop
adc
lds
adc
jns
pop
or
roll
pop
jbe
inc
popa
mov
dec
cltd
in
nop
jb
sahf
pop
pusha
pop
fs
cli
dec
pop
jp
sbb
mov
mov
pop
loop
pop
js
pusha
push
ret
fidivrl
mov
xlat
js
jo
mov
cmp
or
sbb
sub
xorl
add
push
dec
int
pushf
mov
adc
jle
xor
sbbb
push
add
mov
movsb
sbb
push
mov
pop
or
mov
xchg
int
mov
inc
pop
sahf
jbe
rolb
jle
movsb
ror
insl
mov
lret
inc
jbe
int3
pop
xor
dec
xchg
mov
int
push
fcomps
cld
jb
pop
cmp
int3
mov
lcall
test
dec
shl
add
lahf
add
dec
pop
cmpsl
dec
cmc
xor
mov
xor
pop
xchg
mov
dec
pop
cwtl
add
ds
adc
sbb
les
out
divb
out
js
pop
in
and
cwtl
xchg
fstps
loop
aad
mov
jmp
or
adc
repz
mov
adc
and
pop
lahf
scas
imul
std
or
cmp
es
cmp
repnz
call
ror
sub
fstpt
test
xor
pop
bound
test
pushf
imul
imul
mov
fcoml
push
cmpsb
dec
lds
sub
mov
pop
adc
push
sub
inc
mov
pop
mov
in
cs
jmp
mov
pop
jl
lahf
in
in
mov
pop
adc
jle
out
sub
stc
aas
int
add
mov
sbb
in
adc
andb
mov
cmc
sub
fisubrl
dec
pop
out
test
cld
pop
fstps
addb
pop
xchg
das
mov
or
pushf
push
inc
in
ljmp
stos
and
pop
sub
cmpb
jbe
add
bound
pop
xchg
jg
shlb
xor
inc
fldl2t
stc
sbb
pop
leave
xchg
sbb
rcl
xchg
lcall
mov
bound
sahf
inc
in
sbb
outsl
dec
mov
push
sub
mov
je
lcall
movd
shr
jo
mov
push
es
xor
aam
xor
sub
jnp
fsubp
mov
pop
test
int
mov
enter
push
sub
out
lea
add
int
mov
mov
ret
dec
mov
mov
fcoms
lods
lock
xchg
mov
cltd
pop
jb
inc
dec
dec
rcr
inc
dec
stc
lea
mov
push
fdivrs
xchg
lods
and
push
jle
pop
mov
pop
scas
clc
mov
add
xchg
mov
sbb
jl
push
int3
loopne
fisubs
mov
pop
dec
or
jmp
aam
add
dec
xchg
pop
xor
jns
inc
jecxz
mov
xor
dec
jle
adc
pop
add
insb
pop
adc
mov
sbb
lea
mov
xor
pop
sbb
or
pop
sti
pop
cwtl
stos
and
dec
arpl
cmp
xor
jb
lds
pop
jo
lcall
xor
jmp
sti
enter
repz
mov
idivb
lcall
hlt
push
lret
repz
testl
inc
mov
popa
mov
dec
mov
sbb
pop
cwtl
ja
iret
cld
xor
out
xchg
jno
arpl
ret
sub
inc
cmp
pop
mov
int3
sbb
popa
mov
pop
push
inc
mov
loope
adc
pop
stc
scas
mov
pop
push
mov
sbb
hlt
xor
inc
cmp
add
outsl
and
pop
xor
mov
lea
mov
ja
popf
and
dec
sbb
pop
cld
jno
inc
sbb
mov
pop
and
mov
call
inc
or
xlat
pop
xchg
ja
test
inc
add
pusha
and
sub
pop
outsl
into
xor
sbb
mov
mov
mov
lret
pop
or
jecxz
xlat
pop
lcall
shlb
ror
les
outsb
insl
mov
sarb
aas
pop
fmuls
mov
add
mov
test
inc
inc
dec
jbe
outsb
test
pop
mov
ficoml
pop
and
mov
int
adc
out
pop
pop
pop
sbb
out
sub
xchg
aad
mov
pop
pusha
inc
and
shll
add
enter
pop
mov
inc
cmp
in
insl
nop
je
cmpsb
sub
mov
std
pop
xchg
mov
sub
mov
pop
lods
xchg
or
jo
arpl
adc
pop
out
pop
gs
mov
mov
push
popa
push
les
xchg
push
fnstenv
mov
out
roll
outsl
pop
pop
loop
incl
inc
pop
xor
mov
andl
mov
pop
fwait
ljmp
je
xchg
fdivs
int3
pop
imul
fnsave
enter
lea
cmp
pop
push
or
dec
fcmove
pop
pop
add
int
insb
loope
stos
sar
jb
xchg
adc
pop
dec
imull
sub
pop
int
test
jecxz
rolb
pop
and
jge
das
dec
in
in
pop
cmpsl
xlat
clc
pop
sub
adc
mov
pop
iret
dec
sti
lcall
pop
bound
scas
jne
les
mov
in
fucomp
movsb
mov
lret
sbb
xor
push
xchg
lret
movzwl
cmp
fs
sbb
pop
jg
pop
jbe
popf
out
push
push
pop
xor
pop
pop
repnz
iret
aam
pushf
lcall
fs
enter
inc
aad
mov
loope
jp
dec
mov
jbe
fistl
mov
jb
push
sbb
lcall
pop
or
ret
insb
lea
pop
scas
add
xchg
iret
add
mov
pop
outsl
or
pop
out
negb
int3
push
pop
jb
mov
pop
cmp
adc
das
loope
xchg
mov
ret
int
pusha
sahf
lret
adc
repz
and
xchg
pop
fisubl
scas
inc
fwait
inc
enter
insl
xchg
and
add
inc
popa
pushf
pop
je
add
jb
fidivrl
jbe
insl
mov
fsubrl
lahf
call
shlb
sbb
imulb
movsl
pop
loopne
push
pop
pusha
xchg
in
scas
jl
aas
pop
data16
jmp
pop
lea
cmp
dec
mov
jbe
mov
insl
xchg
pop
push
scas
mov
insb
pop
cs
cmp
mov
inc
dec
xchg
sbb
idivl
ja
jae
mov
bound
sub
push
inc
arpl
inc
sbb
inc
jl
scas
jmp
cmp
lds
imul
int
pop
scas
cmp
mov
mov
pop
dec
mov
jo
mov
push
loope
in
fimull
jns
jmp
mov
xlat
inc
and
inc
pop
cli
pop
insl
mov
outsb
loope
aas
and
aad
lret
out
rorb
daa
mov
lahf
or
pop
add
sbb
pop
lahf
icebp
jl
and
jge
divb
leave
sbb
fildl
daa
cld
and
pop
sbbl
mov
inc
mov
dec
iret
call
in
fadd
pop
mov
sbb
push
pop
xchg
dec
add
or
pop
fs
pop
jb
pop
jno
cli
xchg
emms
lds
lods
lock
pop
pop
jbe
fmuls
and
cld
int3
pop
int
loop
sbb
push
leave
pop
jmp
aas
cmp
stc
in
cmp
dec
mov
mov
lds
out
loope
stc
sbb
in
es
or
jb
fs
push
repnz
xlat
pop
pop
mov
sub
mov
dec
lret
mov
dec
cmp
subl
mov
jo
add
scas
imul
push
mov
push
pop
push
pop
imul
mov
pop
sub
pop
lds
mov
scas
lahf
popf
push
xchg
sbb
movsb
dec
aas
cmp
mov
or
sbb
sbbl
ret
sub
jp
mov
stc
push
adc
pop
push
jnp
cmp
cmp
push
fldcw
xchg
sbb
mov
cmp
xor
jae
scas
sbb
test
jae
sbb
pop
mov
andb
out
sbb
pop
pop
ss
mov
lret
stos
mov
incb
pop
lcall
lods
push
pop
lahf
ror
xor
pop
pop
dec
mov
sbb
mov
jle
mov
mov
jecxz
dec
inc
push
enter
imul
adc
shll
xor
adc
ja
ss
mov
lds
and
popf
xchg
fadd
repz
in
mov
adc
cltd
mov
mov
jge
push
mov
out
pop
pop
ja
sbb
fcomps
cs
push
ds
push
add
repz
inc
add
nop
sub
sbb
pop
int3
jae
dec
int
mov
rclb
dec
call
stc
out
fsubrs
loop
in
lret
jg
sbb
dec
mov
pop
xchg
int3
lods
scas
or
sbb
pop
mov
cs
and
lds
cli
jb
sahf
lods
insb
pop
inc
aas
mov
lcall
vaddpd
aad
add
add
jge
in
jns
pop
test
lods
inc
cli
pop
xor
mov
xor
outsl
or
pop
jmp
pop
inc
orl
icebp
dec
jp
sub
lock
mov
xchg
mov
sti
mov
stos
mov
xchg
adc
push
mov
fdivs
test
cld
dec
pop
adc
push
xor
pop
pop
or
enter
js
jb
jo
movsb
sub
add
mov
jmp
gs
adc
movsl
negl
xor
mov
scas
push
mov
xor
std
dec
push
ficompl
mov
adc
or
cli
repz
pop
jns
adc
int3
outsb
xchg
push
pop
cltd
int
out
cmp
mov
test
adc
sbb
pop
mov
std
sbbb
pop
xor
mov
in
pop
inc
xchg
mov
and
adc
cmpsl
std
sub
mov
xor
sbb
pop
nop
punpckldq
mov
pop
pop
jnp
or
push
movsb
or
mov
mov
xchg
cmpb
xchg
out
inc
ja
dec
and
insl
pop
cmp
sub
jo
les
xchg
push
repnz
pusha
test
pop
loope
sbb
mov
pushf
cltd
dec
jns
scas
jecxz
dec
das
pop
testb
movsl
cmp
scas
jmp
cld
cmc
mov
insb
xchg
dec
mov
xchg
or
jl
icebp
or
dec
cmpl
test
imul
cli
clc
aam
push
mov
movsb
stos
pop
add
fidivrl
dec
mov
sub
jp
pop
loop
and
xchg
pop
push
aad
fldcw
pop
out
and
mov
add
fucomi
out
cmc
jle
mov
pop
pop
sbbl
fists
or
das
dec
mov
lock
std
iret
mov
dec
and
mov
inc
out
in
pop
aaa
loope
pusha
vphaddubw
stos
divb
xchg
pop
dec
dec
sbb
int
mov
inc
sub
sub
mov
ss
mov
cmp
ja
cld
mov
insb
cwtl
icebp
iret
jns
aas
int
subl
and
repz
pop
lds
adc
mov
mov
pop
pop
popa
jne
jmp
rorl
and
sub
into
fistps
adc
lea
lahf
ficompl
and
fldcw
xor
and
lock
pop
push
iret
adc
jmp
jle
or
mov
jbe
sbb
dec
or
stos
lea
cmpsb
popa
and
sarl
xor
inc
movl
rorb
jecxz
pop
xlat
lds
inc
pop
push
movsl
sbb
push
and
icebp
sbb
sub
pop
into
pop
mov
pop
sti
push
push
icebp
mov
sub
sbb
data16
jl
fsubs
pop
xor
test
pop
jl
cmp
mov
adc
jbe
sbb
out
or
aas
add
mov
in
mov
dec
pop
addr16
ds
es
cld
dec
movsl
mov
xchg
fcomps
ja
jo
mov
push
daa
in
inc
mov
push
sbb
loope
pop
jge
int
popa
and
negb
mov
mov
sub
push
lret
js
xchg
mov
pop
jp
push
cmpsl
inc
pop
jmp
repnz
mov
dec
mov
pop
sahf
adc
cmc
lcall
jl
pop
sbb
gs
insl
push
dec
dec
sub
mov
and
loope
sbb
cltd
call
mov
mov
pop
popf
lods
mov
mov
stos
adc
inc
dec
and
popa
xchg
mov
push
pop
jb
cmp
daa
xor
and
push
pop
mov
into
popa
sub
mov
inc
jnp
xchg
pop
mov
ss
test
stos
jmp
pop
add
sub
jb
jbe
jo
test
fisttps
xor
pusha
js
aam
dec
xor
cltd
ss
dec
xchg
mov
adc
adc
pop
nop
lret
jle
shrb
add
and
fs
sbb
pop
and
push
xchg
insl
xor
notb
cmpsb
jae
outsl
jo
xchg
pop
jb
and
mov
sub
push
lret
icebp
cmp
gs
and
pop
inc
in
mov
aaa
mov
in
mov
insl
jge
fiadds
jbe
xchg
jo
pop
xchg
jp
or
sbb
call
push
xchg
ds
js
out
pop
aam
cmp
sti
arpl
scas
lods
mov
push
mov
pop
pop
mov
in
subb
fs
dec
inc
je
sbb
rcrl
mov
jecxz
dec
and
into
mov
in
gs
pop
xchg
test
imul
add
push
iret
lods
add
pop
out
decb
rorl
sbb
pusha
jecxz
mov
sub
pop
iret
loope
sbb
cwtl
dec
dec
mov
pop
jbe
fcom
popa
inc
push
mov
push
pop
sub
add
ficompl
frstor
dec
mov
inc
or
mov
pop
pop
in
sbb
repz
mov
sub
ljmp
pop
mov
mov
push
subl
pop
arpl
jns
dec
imul
mov
repz
push
and
or
ret
movsb
jb
roll
add
cld
les
nop
mov
scas
int3
and
js
aas
xchg
pop
int
in
lcall
pop
iret
pop
xor
lods
xchg
repz
addr16
adc
mov
testb
pop
add
mov
fcomps
cmc
pushf
flds
leave
and
xchg
ljmp
jb
inc
pushf
cmc
pop
lahf
mov
add
les
in
mov
add
jle
je
pop
stos
jge
int3
push
pop
inc
push
lcall
cltd
lods
mov
pop
das
mov
int
scas
xor
insb
pop
lret
into
mov
aad
ss
xor
std
jae
lret
cli
cmp
or
ljmp
push
pop
scas
jp
inc
arpl
loope
or
mov
cltd
push
fbstp
stc
and
pop
jae
dec
cwtl
lock
push
mov
pop
push
icebp
sarb
sub
xchg
fildl
daa
fiaddl
nop
loope
int
pop
mov
pop
dec
call
loopne
or
mulb
loope
push
xor
mov
fcompl
fidivs
xchg
sub
sbb
cs
jae
xchg
repnz
sti
sub
sbb
cmpsl
ret
mov
xorl
sbb
push
loopne
iret
or
ret
mov
setns
enter
or
mov
rolb
idiv
lea
stos
and
xchg
and
adc
cmp
sti
mov
xchg
loopne
push
ret
cmp
xor
testb
mov
clc
dec
int3
sarb
addr16
mov
push
bound
cs
pop
fnsave
and
aaa
xor
xor
mov
nop
cltd
scas
jb
pop
mov
sbb
sbb
and
mov
pop
push
mov
je
loop
out
xlat
inc
or
cld
pop
dec
and
pop
cmp
popl
cmc
je
pop
cmc
push
jmp
subl
inc
pop
pop
push
lret
js
push
lret
fucom
xor
popf
mov
pop
stos
adc
jmp
ud0
mov
adc
and
sub
xor
std
mov
popf
mov
add
pop
daa
pop
movl
pop
ret
ja
test
gs
sub
popa
push
loopne
xchg
pop
or
andb
adc
icebp
sub
mov
pop
fiaddl
or
and
inc
pop
stc
js
pop
lds
sbb
mov
xchg
xor
sub
pushl
add
data16
pop
cltd
and
aad
mov
pop
or
pushw
adc
pop
stc
int
cs
pushf
push
scas
adc
pop
int3
inc
into
cmp
das
out
add
in
lods
mov
ret
xor
lock
cmpsl
aad
daa
punpckhbw
in
inc
aam
mov
and
test
leave
into
adc
outsl
in
fdivr
int3
fistpl
imulb
pusha
jb
sub
mov
sub
int
push
or
loopne
jbe
dec
popa
pop
mov
lea
ja
mov
and
cs
xor
or
rclb
mov
inc
fcmovnu
in
pop
push
sbb
movsb
jecxz
lock
mov
pop
pop
xor
sbb
outsl
adcl
in
push
xchg
fstps
fwait
pop
addr16
test
push
pop
push
pop
popa
int
mov
mov
adc
sub
mov
insl
or
scas
or
push
rcrb
xor
pop
sbb
gs
xchg
pop
xor
loope
scas
int3
dec
lods
les
pop
fcoms
cltd
mov
mov
xchg
test
adc
fistl
pop
dec
sarl
out
dec
js
mov
pop
lea
into
clc
sub
jo
sbb
jmp
ffreep
mov
fisttpl
inc
sbb
mov
sbb
cmp
mov
daa
mov
sahf
insl
popf
sarl
fiaddl
xor
mov
pop
test
mov
je
xor
lcall
ficoms
pop
mov
ret
ror
jg
mov
pop
lahf
into
xchg
cltd
fldenv
jle
shlb
or
mov
in
out
cld
orb
pop
insb
lods
aad
outsb
in
mov
fidivl
mov
dec
mov
mov
pop
sbb
aam
shlb
mov
insl
mov
mov
loop
js
jg
pop
pop
mov
rolb
mov
jge
pop
cmp
push
cmp
icebp
lret
enter
aad
pop
and
imul
dec
sahf
dec
adc
ss
stos
pop
push
je
cmc
out
push
int3
pop
xchg
lds
pop
push
ret
daa
jno
lods
rclb
sbb
clc
in
pop
mov
push
sahf
jmp
ja
mov
inc
cltd
mov
pop
mov
sub
movsb
pop
jns
jmp
aad
pop
jecxz
aaa
push
arpl
mov
pop
push
out
pop
decl
jns
inc
outsb
fs
jo
stos
dec
lcall
dec
jne
or
mov
or
jnp
ret
movsb
pop
xchg
lds
cli
sub
stos
mov
or
fpatan
lcall
or
pop
cwtl
fnstsw
inc
pop
mov
mov
inc
adc
pop
fwait
sbb
sbbl
int
jnp
dec
pop
mov
and
repz
mov
hlt
daa
sbbb
mov
mov
push
pop
scas
sbb
push
je
arpl
push
ja
stos
outsb
fsubrl
aas
sub
xorl
fwait
sub
lea
pop
je
cmp
pop
mov
aaa
int3
jge
lods
jecxz
divl
lahf
sub
sub
add
sahf
push
mov
add
inc
sbb
pop
mov
push
sbbb
add
pop
jb
lcall
stos
and
test
imull
aam
mov
aas
mov
notb
mov
jp
push
mov
insl
out
movsb
jle
pop
loope
dec
outsl
lea
lret
pop
inc
popf
js
ds
imul
sbbb
jno
into
les
fwait
or
adc
sub
repz
xchg
push
sbb
pop
lret
pop
lcall
pop
xor
mov
xor
lahf
mov
sbb
jl
mov
data16
insl
xor
add
mov
cmp
fwait
std
dec
xchg
pop
pop
addr16
push
jle
inc
lret
mov
push
jmp
jno
pop
mov
das
pop
adc
sbb
inc
and
cmp
add
mov
movsb
inc
mov
in
bound
mov
mov
pop
add
aam
dec
push
data16
mov
jae
cld
mov
popf
pop
mov
test
int3
mov
nop
push
sub
pop
movsl
cmp
lret
rcrl
or
mov
jmp
push
pop
dec
adc
repz
push
pop
daa
cmc
push
ror
aad
mov
adc
fistpl
out
fimull
shl
jle
pop
test
sub
sbb
pop
das
aaa
mov
jae
push
inc
mov
jg
stos
stos
or
addr16
push
dec
sbb
idivl
dec
inc
cmp
out
pop
lds
jns
pop
ss
xchg
pop
mov
arpl
xor
sbb
add
or
dec
clc
pop
inc
pop
push
pop
dec
add
inc
stos
mov
pop
adc
stos
push
int
ret
ds
inc
mov
add
mov
clc
lds
mov
push
dec
cltd
xor
or
decl
cs
sbb
dec
xor
data16
mov
jb
into
xchg
popf
stc
in
lods
gs
add
int
lock
cmp
mov
dec
pop
fdivr
mov
out
pop
jp
jbe
sub
jae
push
push
in
add
sub
inc
jb
adc
xchg
leave
hlt
pop
std
or
int
xchg
xchg
shrl
pop
mov
mov
pop
sbb
and
addr16
les
stos
mov
aaa
movsb
loopne
xchg
sub
lcall
out
inc
sbb
stos
fldenv
xchg
sti
pop
dec
pop
pusha
jle
jl
lahf
data16
je
sbb
adc
int3
mov
pop
mov
pshufw
sub
aad
sarl
xor
sbb
cld
inc
pop
push
imull
xor
mov
and
test
inc
aaa
dec
pop
imul
pop
pop
or
leave
xor
js
pop
sbb
insl
cltd
pop
js
mov
pop
push
ja
pop
sub
jl
into
add
ds
mov
sbb
ret
add
push
dec
and
pop
int
icebp
sub
paddsw
or
pop
sub
iret
inc
dec
ja
ret
inc
and
sbb
enter
into
push
pop
cmpsl
aad
mov
sbb
add
dec
pop
int
mov
inc
pop
sub
jp
add
leave
mov
sti
push
pop
sbb
xchg
pop
imulb
jl
and
add
pop
mov
icebp
adc
loopne
shll
pop
aad
sahf
pop
clc
sub
xchg
mov
popf
pop
dec
lea
insb
cmp
push
das
xor
pop
lret
stc
dec
and
movsb
pop
xchg
inc
jae
pushf
pusha
and
je
lods
sbb
adc
mov
dec
mov
inc
fwait
cmp
push
clc
or
jecxz
in
lahf
inc
fistps
test
mov
and
popf
jbe
sbb
mov
pop
mov
mov
jbe
shll
arpl
rcrb
jmp
pop
mov
inc
jbe
sub
push
punpckldq
js
cmpb
or
push
aam
mov
rcr
push
loopne
lret
jo
mov
jg
inc
xor
in
pop
loop
dec
dec
incb
jecxz
inc
inc
pop
ja
test
or
pop
rcrb
out
pop
les
pop
jb
dec
add
popa
inc
pop
jbe
outsb
push
pop
mov
pop
xchg
push
jge
fisubl
dec
pop
fistl
out
pop
iret
mov
and
in
xor
daa
lock
outsb
pop
sbb
dec
push
pusha
pop
je
lods
inc
mov
sbb
pop
inc
dec
shl
sub
imul
jno
mov
gs
dec
stos
or
cmp
int
mov
test
je
insb
push
dec
mov
inc
out
insl
mov
mov
push
pop
pop
out
mov
loopne
repnz
jmp
stos
dec
sti
dec
add
ds
lcall
pop
mov
cwtl
mov
add
insw
xlat
int3
stos
adc
std
pushf
fsts
fisubrl
loopne
cmp
add
sbb
pop
stos
hlt
xor
pop
in
jbe
movsb
mov
lods
int3
icebp
fildll
or
push
or
lock
ffreep
or
or
cmp
pop
imul
push
dec
and
stc
sub
jge
and
ljmp
mov
lcall
jl
adc
out
sti
ficoms
icebp
pop
push
sbb
sbb
mov
pop
or
mov
or
je
cld
ljmp
roll
lea
icebp
daa
cmp
in
mov
pop
aam
cmpsb
pusha
cmc
scas
scas
movsl
and
insb
into
cmp
daa
filds
xchg
mov
rcl
or
sub
sub
pop
adc
jge
rcrl
lret
lods
push
sbb
xor
mov
cmp
ja
push
fimull
cmpsb
mulb
nop
mov
push
dec
xchg
jg
mov
cmpsl
jl
add
push
pop
fwait
jle
pop
push
and
movsl
test
mov
mov
mov
pop
std
inc
aaa
repz
das
out
lods
inc
rcrb
pop
insl
dec
fmulp
sti
sub
lahf
fstps
scas
mov
idivb
lea
adc
arpl
test
pop
jecxz
rorb
sbbb
and
inc
push
push
cmp
dec
clc
mov
sub
jo
push
adc
xchg
loop
push
lods
inc
lret
dec
pop
adc
mov
pop
mov
jbe
in
shll
or
test
dec
sbb
or
pop
pusha
mov
stos
jle
mov
xchg
add
sbb
pop
in
mov
std
xor
jmp
imul
cmc
call
push
xor
jle
mov
inc
in
jle
cld
mov
aam
fildl
int3
mov
pop
in
mov
mov
jb
lods
aad
inc
ret
int3
pop
sar
pushf
int
je
cli
lahf
inc
enter
add
test
sub
dec
lcall
jo
movsb
adc
push
jecxz
or
loopne
sbb
inc
jae
mov
and
pushf
stos
dec
sub
cmp
xchg
test
and
int
imul
in
and
rcrb
fcompl
jmp
push
test
pop
mov
ss
pop
fimuls
int3
dec
inc
scas
ret
or
push
pop
pop
cmpsb
and
das
mov
pop
adc
jmp
pop
aas
dec
pop
lds
movsl
push
and
mov
pop
add
and
fnsave
jl
xor
jle
cli
out
pop
or
dec
mov
push
jl
sbb
mov
je
fstpt
pop
lret
outsb
in
loopne
icebp
pop
rcrl
cmp
leave
pop
je
jns
and
inc
push
pop
sti
adc
ja
cmp
lea
int
pop
adc
ds
jmp
es
fldl
xor
ja
xlat
and
lret
mov
incl
inc
jle
adc
loope
outsb
mov
das
mov
push
les
scas
lahf
push
movsl
sahf
mov
dec
leave
lret
cmp
or
daa
pushf
popa
int
scas
fbld
repnz
pop
scas
dec
push
lret
out
sbb
or
sub
mov
movsl
and
dec
imul
push
xor
scas
xchg
mov
icebp
ret
xchg
cmp
cmpsb
pop
inc
fxch
mov
sbb
mov
in
dec
mul
xor
fstpl
imul
repnz
mov
mov
and
pop
pop
lea
push
inc
adc
arpl
fcmovnb
sub
jmp
push
ret
aam
mov
ja
loop
adc
nop
push
pop
sub
pop
dec
cmpb
aad
out
pop
lds
jmp
test
cmp
pop
push
call
pop
pop
mov
test
adc
sub
add
push
lahf
pop
or
pop
pop
mov
scas
cmpl
xor
in
loope
mov
fsubr
xchg
cli
jle
mov
in
subb
js
mov
xchg
out
lods
cmpsb
adc
rcrb
sahf
enter
loop
mov
xchg
movsl
cwtl
sub
cmpb
popa
std
mov
cltd
scas
or
and
ficompl
jle
scas
and
cmp
xchg
cwtl
sbb
fscale
mov
pop
call
fcoms
loop
adc
jecxz
data16
and
lds
push
pop
in
ret
and
xlat
outsb
dec
push
cli
dec
jmp
arpl
pop
into
cs
push
sbb
pop
cwtl
test
jl
pop
xor
std
mov
inc
push
mov
dec
jmp
add
pop
cmpsb
push
inc
lcall
pushf
add
rcr
pop
pop
mov
lret
iret
jb
xchg
add
pop
adc
jno
cs
scas
mov
sub
fsubr
xchg
stos
push
sbb
inc
pop
cmpsl
xchg
pop
xchg
mov
adc
in
mov
mov
test
int
xchg
fdivl
aaa
fwait
adc
sbb
inc
mov
sti
mov
pop
adc
jmp
add
negl
int3
jl
in
push
cs
dec
stos
jns
nop
pop
mov
sbb
and
mov
mov
jp
gs
test
jno
inc
pop
dec
lea
and
push
int
or
push
jb
sbb
out
or
ret
sbb
mov
mov
pushf
orb
aaa
jo
mov
bswap
fs
mov
sbb
rorl
mov
add
fsubs
jne
jp
pop
repnz
and
loop
imul
jle
sbb
subb
or
scas
mov
call
and
imul
xchg
mov
xor
pop
xor
mov
int3
scas
or
aam
jmp
jp
push
cmpsl
lahf
rorl
jecxz
out
pop
dec
jno
push
les
scas
loopne
and
dec
push
lock
fdivr
in
sub
cmp
cli
push
lret
pop
mov
iret
test
dec
ret
and
gs
push
mov
pop
fwait
les
pop
js
pop
jae
pop
scas
adc
rorl
enter
stos
and
cli
das
xchg
jo
aad
stos
mov
pop
pop
push
andb
xchg
dec
mov
negb
cli
repz
xchg
loope
pop
sub
imul
mov
imul
leave
in
out
icebp
popa
popf
jbe
jmp
sar
xchg
ret
sub
outsb
jo
mov
test
push
loop
or
mov
cmp
mov
cld
xchg
ds
xor
int3
addr16
pop
or
mov
shr
int
pop
adc
cmp
inc
push
mov
std
pop
int
cmc
test
aaa
loopne
nop
inc
push
jp,pn
dec
scas
stos
add
sbb
dec
stc
call
in
imul
xchg
cmpsb
adc
or
inc
add
lahf
add
xor
mov
sbb
outsb
hlt
test
nop
mov
xor
jnp
les
fcomps
lret
mov
addr16
mov
add
jb
les
fdivr
pop
rcr
jp
int
or
mov
iret
andb
xchg
stos
push
dec
outsl
adc
test
mov
mov
inc
not
pop
mov
sub
imul
xchg
lcall
jbe
lcall
lret
push
adc
mov
add
or
mov
pushf
mov
or
lahf
jae
ss
ret
jno
or
pop
lcall
imul
lea
ret
sbb
fsub
sub
pusha
lcall
xorl
pop
mov
dec
hlt
xlat
pop
mov
push
pop
sub
cmp
lods
repnz
pop
cmp
pop
mov
fstpl
sahf
lahf
pop
mov
jp
adc
imul
mov
cmp
add
lret
pop
jo
loope
mov
fildl
decl
in
pop
enter
cmp
cmpsl
jo
and
sti
dec
ret
push
and
jnp
roll
xchg
lock
cwtl
sub
mov
xchg
push
scas
sub
stc
pop
int
and
jp
bound
sub
add
icebp
push
cltd
arpl
jmp
decl
pop
movl
pop
xchg
cs
mov
fnsave
push
fcoms
adc
ret
cmp
pop
dec
add
cmp
popf
sbb
pop
xorl
adc
adcl
jmp
and
test
cwtl
mov
or
pop
insl
sbb
test
ret
cld
push
sbb
adc
sbb
mov
mov
fsubs
pop
sub
stos
or
add
jo
fildl
jmp
les
xchg
fidivrl
pop
and
pop
xor
pop
popa
test
and
dec
push
inc
pop
test
fstl
pop
mov
lahf
pop
into
addr16
pushf
mov
jbe
sti
movsl
dec
pop
sub
xor
cmp
je
push
imul
cmp
xor
mov
push
into
jno
mov
pop
ret
and
add
sbb
sbb
sub
pop
pop
scas
int
sahf
sub
fnstenv
in
mov
or
dec
or
ljmp
mov
inc
sub
xchg
loop
pop
push
dec
add
sub
pop
enter
shlb
stc
out
pop
or
rol
inc
dec
loop
into
or
xchg
add
mov
insb
lods
jg
xchg
pop
mov
sbb
flds
sahf
mov
je
cmpsl
pop
imul
sub
dec
lret
sbb
inc
cmp
xchg
lods
add
push
pop
jbe
out
nop
ret
int
aad
sub
push
jo
mov
popf
scas
nop
frstor
les
aaa
sub
and
pminsw
xchg
lds
push
ret
sbb
stc
sub
mull
pop
or
cltd
mov
mov
repz
mov
fmulp
xor
pop
out
insl
mov
jl
and
cmp
or
pop
out
stos
adc
pop
mov
xchg
imul
rcl
fsubs
int
outsl
mov
fsub
jl
mov
xchg
xor
pop
pop
cmp
mov
int3
adc
inc
sahf
ficoml
arpl
mov
fdivrs
dec
jno
pop
repnz
fcmovnb
mov
push
aas
mov
fs
mul
pop
negb
dec
int
inc
sbb
or
sbb
std
adc
lods
out
sub
int
loop
pop
pop
xchg
jle
mov
adc
shrl
pop
call
out
add
data16
lret
add
pop
or
mov
or
or
push
inc
and
int3
outsl
pop
sbb
sbb
and
sub
adc
call
repnz
sub
lock
sarb
push
decb
pop
fadd
clc
out
aaa
jmp
sbb
sbb
fcmove
pop
lods
imul
mov
je
jmp
int3
xchg
cmp
jl
mov
cwtl
push
in
les
push
rorl
ljmp
cmp
add
pop
adc
pop
adc
fisubl
pop
movl
scas
int
xor
lods
negb
outsl
jno
fistpll
test
mov
or
inc
cwtl
jmp
pop
push
push
popl
inc
sbb
pop
dec
fcmovnbe
sbb
fsts
pop
sub
adc
int
hlt
scas
push
mov
loopne
mov
xor
pop
hlt
adc
cmp
pusha
lcall
mov
bound
dec
pop
xchg
jbe
push
enter
pop
scas
fists
pusha
dec
pop
sub
cwtl
sub
xor
pop
push
imul
decl
mov
in
sub
cmp
int3
call
and
adc
ret
xor
fldenv
xlat
cltd
repnz
pop
dec
and
mov
fwait
out
ss
inc
jl
int
inc
call
scas
sub
pop
adc
je
fsubrl
pop
dec
pop
pop
push
or
loopne
pop
daa
mov
inc
jle
inc
pop
int3
mov
subb
add
adc
inc
pop
inc
mov
lret
fcompl
sbb
pop
loopne
push
pop
mov
pop
mov
xchg
push
and
lods
pop
dec
loope
pop
pop
mov
ja
push
xlat
xchg
repz
sbb
push
addr16
sarb
xor
pop
xchg
daa
test
or
sub
mov
or
mov
fs
in
and
pop
rcll
mov
and
pop
xchg
mov
pop
mov
sub
jg
xchg
lock
push
inc
insl
mov
sub
fisttpll
pop
pushf
imul
sub
das
lds
mov
outsl
sbb
cmpsb
pop
mov
xchg
mov
inc
popf
in
jecxz
mov
stos
jmp
inc
fcmovu
ljmp
inc
ret
test
pop
sbb
pop
inc
push
sub
in
and
fsts
fwait
mov
cmp
repnz
jne
fs
mov
cwtl
push
mov
insl
mov
add
and
dec
pop
jle
daa
jbe
dec
fwait
gs
loopne
xchg
or
inc
fldcw
sbb
test
pop
add
sarl
mov
xchg
je
mov
inc
xacquire
pop
mov
vpmaddwd
xchg
xor
in
sub
nop
leave
mov
sub
out
in
sub
cmp
lods
mov
add
cmp
or
movsb
pop
jnp
cmc
pop
mov
out
into
sub
pop
add
xor
enter
mov
in
mov
pop
jb
shr
mov
dec
lcall
into
or
mov
xchg
js
mov
cmp
add
jae
pop
push
cmc
insl
jo
and
pusha
jb
in
in
int
mov
pop
adc
cmp
dec
mov
icebp
cmpsb
push
push
imul
ljmp
mov
cmp
or
push
pop
jp
popf
push
jnp
mov
pop
mov
and
xchg
mov
out
jge
pop
sbb
rorl
cmp
or
rcll
scas
inc
nop
xchg
mov
mov
or
sahf
dec
bound
scas
test
xor
add
clc
and
in
add
mov
pop
enter
std
cwtl
ss
pusha
jle
lahf
ss
shll
xor
jno
sbb
cmp
adc
adc
push
popf
loopne
aaa
or
stc
mov
bound
push
jbe
dec
xor
pop
hlt
jb
add
pusha
sbb
mov
les
sub
call
sbb
pop
outsb
sbb
jae
pop
lea
ds
sbb
stos
and
add
pop
push
in
jg
pop
sahf
and
ja
dec
mov
mov
cmc
adc
icebp
dec
in
loopne
pop
adc
fcmovne
add
cmp
std
bound
sbb
or
add
jbe
push
ljmp
jns
int
fisubrl
pop
or
jle
dec
int3
jecxz
mov
stos
into
mov
xchg
test
pop
sbb
rorb
pop
and
int
imul
out
pop
leave
sub
add
pop
sti
in
stc
mov
int
sbb
aad
adcb
sub
lahf
dec
xchg
mov
repz
pop
add
aad
ds
lcall
pop
in
out
jo
ficompl
int3
jle
mov
lret
pop
in
cmp
lahf
push
cmp
lahf
cmp
xor
nop
jecxz
pop
jge
push
pop
clc
icebp
testl
fisubl
or
sbb
repz
mov
pop
loope
daa
int3
sahf
push
mov
and
sub
inc
aaa
mov
inc
jno
mov
ret
mov
scas
inc
xlat
cmp
pop
dec
stos
sti
enter
pop
hlt
orb
cli
jb
test
adc
mov
into
mov
fnstsw
xchg
cmp
je
pop
mov
in
jl
mov
pop
pop
std
movsl
mov
push
pushf
pop
cmp
test
mov
dec
mov
fs
inc
inc
int3
std
popf
pop
in
mov
pop
nop
jmp
and
lcall
mov
insl
in
popa
or
js
insb
je
push
stos
ljmp
sahf
xchg
cmp
dec
add
lea
push
xchg
pop
xchg
mov
mov
pop
mov
arpl
int3
lret
cli
bound
in
and
push
cmp
mov
pop
dec
ror
push
idiv
push
sbb
xlat
or
subl
mov
fstps
mov
xor
inc
add
pop
jbe
add
sbb
iret
insl
mov
rcr
and
lods
pop
push
data16
dec
call
and
faddl
into
lock
sbb
out
jnp
sub
pop
insl
adc
inc
xchg
dec
test
pop
aad
xchg
pop
jbe
stos
jo
push
pop
xchg
mov
je
das
dec
jmp
insl
inc
dec
std
cmp
and
sbb
in
mov
stos
push
cmp
dec
pop
mov
inc
cmc
pop
and
nopl
pop
mov
aaa
test
movl
fildll
data16
pop
mov
fsubs
jnp
aas
sub
push
pop
push
pop
xchg
and
je
pop
testb
mov
or
and
pop
pop
mov
pop
xor
sub
repz
pop
xchg
sub
jbe
pop
cmp
mov
jnp
xor
call
xor
jbe
dec
scas
add
lods
and
nop
call
lods
rcrb
inc
ja
xchg
push
in
and
jbe
std
mov
inc
cltd
add
jns
mov
dec
insb
leave
ss
sub
dec
and
mov
adc
xlat
scas
insl
sbb
mov
mov
push
mov
testl
insl
or
movb
insb
pop
adc
push
mov
mov
test
mov
add
mov
or
or
cmpsl
in
pop
dec
sbb
daa
mov
jl
mov
jecxz
fadd
inc
mov
push
pop
ret
pop
bound
ljmp
mov
xrelease
js
pop
popa
std
mov
xchg
lret
push
scas
in
nop
gs
or
ret
mov
mov
xor
das
and
mov
adc
repz
mov
int
push
jns
push
add
dec
cwtl
shll
jle
mov
js
inc
mov
adc
ljmp
or
push
scas
lcall
sbb
jns
cmc
adc
sbb
addr16
lds
movsb
icebp
pop
jb
pop
lods
mov
stos
in
mov
popa
movl
call
cmpsb
pop
mov
out
xlat
pop
sbb
test
inc
pop
sub
sub
pop
lds
xchg
pop
xor
mov
push
jl
lahf
fs
lods
fcomps
sub
mov
in
pop
popa
or
arpl
data16
loopne
outsl
sbbl
adc
pop
pop
sbb
add
sub
lahf
cmp
jg
adc
sub
inc
add
mov
jle
jns
pop
pop
xlat
xor
lea
pop
jns
xor
repnz
testb
pop
stos
xchg
pop
mov
xor
xlat
in
faddl
daa
adc
or
mov
jg
adc
add
or
cltd
fimuls
push
jb
rolb
and
push
fs
rol
pop
pop
push
pop
rorb
scas
xor
pop
std
inc
xlat
mov
sbb
out
insl
pop
ds
fs
cmp
stos
inc
fistpl
data16
jecxz
ficoml
out
frstor
dec
xchg
pop
cs
push
cmpsb
pushf
adc
push
and
into
or
jo
stos
insl
scas
push
cmp
xchg
jnp
lcall
xor
lea
fistpl
loope
cmp
mov
cmp
scas
popf
push
or
int
ss
adc
dec
in
mov
inc
push
xchg
sbb
jl
xor
cmp
push
jbe
xchg
dec
sbb
add
ss
int
out
pop
mov
xchg
jp
test
jbe
shll
or
ja
pushf
adc
repnz
insb
loope
xorl
nop
pop
fwait
xor
mov
cld
test
fimuls
nop
jnp
fdivs
cmp
mov
fldl
mov
jo
int3
jecxz
sti
mov
inc
inc
or
pop
jbe
xor
xchg
inc
xorb
std
fwait
jb
and
aam
sub
rorb
pop
jl
sbb
mov
mov
out
add
mov
fucomip
mov
sub
pushf
inc
pop
pop
pop
ffree
lods
lcall
adc
dec
cmp
push
push
pop
jl
lret
mov
sub
lret
adc
scas
push
pop
cmpsb
adc
insl
or
sti
xchg
outsl
imul
fnsave
in
inc
or
mov
sbb
jne
pop
loopne
lock
mov
inc
repz
pop
and
push
lret
lahf
dec
ja
mov
push
xchg
lods
pusha
aaa
or
pop
in
mov
and
pop
inc
mov
sarl
mov
pop
mov
mov
jo
in
lret
loope
or
or
adcl
jne
idivb
xchg
fldenv
fiadds
or
popf
clc
sti
pop
shrd
xchg
rcll
xchg
cmpsb
sub
adc
sub
mov
cmpsl
mov
cmp
hlt
sbbl
outsb
mov
push
addr16
dec
xchg
jne
sahf
cmp
or
jb
int3
cli
scas
roll
mov
stos
inc
pop
pop
dec
cmp
mov
jg
and
lahf
scas
insl
jle
mov
mov
pop
and
std
sbb
fbld
jne
push
cmp
pop
and
in
lea
pop
inc
out
orb
imul
dec
adc
jecxz
lcall
pop
sbb
fdivl
pop
cmp
inc
daa
lret
and
sbb
test
jge
pop
insb
or
rorl
dec
cli
mov
aaa
std
ret
xor
fstp
out
jb
mov
mov
enter
mov
cmpsb
sbb
lret
fistl
enter
fcomi
xchg
pop
or
in
pop
rcll
lret
enter
cwtl
fmul
pop
arpl
xchg
add
repnz
js
dec
cmp
rcrl
pop
inc
sbb
sub
mov
mov
addl
push
and
fildll
mov
leave
adc
pop
stos
and
lds
mov
gs
pop
in
fsubrs
push
mov
je
std
xor
stos
dec
mov
test
pop
das
test
push
sarl
pop
dec
xchg
cs
mov
out
and
mov
pop
mov
sbb
and
jp
jne
popf
rclb
das
pop
xchg
sub
xor
jb
insb
jecxz
inc
cltd
fcoms
inc
xor
popa
loope
in
aas
bound
jb
insb
cmp
sub
dec
divb
adc
pop
ret
push
jne
dec
cmp
mov
ljmp
cld
pop
adc
int3
sbb
int
or
jge
punpckhdq
and
incl
pop
ret
dec
iret
in
xchg
pop
call
cmpsb
jecxz
aaa
mov
mov
adc
int3
shr
cmp
pop
jae
xor
ret
push
pop
cmp
add
pop
jecxz
cmp
jae
sub
sub
and
xor
sbb
mov
mov
mov
out
dec
in
jle
jo
mov
insl
fsub
lret
out
sub
or
hlt
in
adc
leave
dec
movsl
fbstp
pop
mov
pop
jne
pop
ss
cld
shlb
imul
push
ret
fwait
inc
scas
mov
mov
sub
add
jne
lahf
loopne
push
sahf
andb
push
cmp
mov
xor
sbb
jb
push
repz
pop
out
push
mov
in
icebp
in
lock
jl
pop
jmp
dec
int3
gs
mov
push
push
pop
leave
dec
fmull
mov
mov
mov
stos
adc
aas
lcall
inc
test
inc
add
movsb
lock
push
shrb
sbb
repz
jbe
mov
pop
in
jge
push
mov
arpl
das
sbb
xor
mov
aaa
in
hlt
jl
pop
pop
int
or
mov
jns
inc
inc
and
inc
mov
push
jbe
pop
cmc
mov
push
test
lea
pop
inc
popf
out
enter
pop
scas
xchg
sbbl
push
adc
inc
loopne
mov
mov
adc
clc
lock
aaa
inc
rcrb
adc
mov
cltd
lds
pop
in
add
pushf
mov
mov
dec
mov
jle
mov
cmp
pop
rclb
mov
push
jne
mov
lea
int
pop
orl
pop
push
imul
pop
lea
xlat
gs
scas
jo
pop
popa
dec
xchg
cld
out
shlb
pop
mov
cwtl
jno
xor
fcmovu
and
push
jecxz
pop
stos
inc
mov
sbb
andb
sub
push
jmp
imul
bound
fld
sbb
pop
cmpsb
mov
xchg
inc
push
pop
xchg
jle
or
icebp
and
pop
enter
je
mov
fsubl
lods
jl
pop
nop
sbb
push
ds
push
mov
pop
popa
sbb
rcrb
mov
daa
sti
mov
testb
outsl
xchg
inc
mov
bound
pop
addb
scas
int3
aad
pop
fisubl
pop
push
test
jg
test
loop
add
xchg
pop
mov
jl
leave
stos
dec
ss
add
je
sti
lds
stos
push
jg
in
pop
mov
cs
push
pop
and
mov
stos
mov
int
xchg
sub
pop
scas
clc
movups
sti
sbbl
enter
jg
fsubl
xchg
out
sar
xchg
sbb
mov
inc
gs
pop
adc
lahf
int3
pop
sub
push
sbb
mov
mov
or
loope
out
xchg
fistl
push
jo
push
fidivrl
dec
pop
push
cmpsl
jp
push
mull
fstpl
add
push
mov
xor
or
pop
jmp
push
bnd
mov
scas
jno
and
sub
pop
add
push
and
pop
lcall
push
stos
xchg
mov
dec
enter
mov
jecxz
int
pop
imul
lret
jbe
rcr
pop
pop
xchg
dec
and
mov
mov
testl
cld
test
fidivl
popa
push
lods
inc
arpl
dec
pop
pop
jg
mov
xchg
cli
hlt
add
icebp
jnp
mov
ret
or
sbb
cmp
pop
sub
push
stos
pushl
xchg
pop
cmp
clc
fnstenv
lds
mov
jnp
inc
push
jmp
arpl
jb
orb
xor
jge
mov
rcrl
push
stos
pop
xlat
push
cli
loop
pop
jo
test
cltd
lcall
or
cltd
jo
pop
xchg
mov
dec
sbb
in
fwait
icebp
scas
sub
jo
lret
dec
adc
dec
pop
inc
mov
jbe
lea
cmp
jg
pop
mov
sbb
adc
adc
push
push
mov
jbe
scas
xchg
leave
sub
clc
mov
stos
cmp
sbb
movsb
adc
mov
push
js
mov
subb
cmpsl
inc
scas
dec
pop
lahf
mov
jo
or
cmp
lret
mov
push
pop
sub
jb
dec
adc
mov
pop
mov
mov
xchg
lahf
repnz
and
mov
push
outsb
or
loop
in
mov
adc
mov
ror
mov
sbb
arpl
fisubs
pop
loop
xchg
mov
inc
mov
jae
shlb
in
fucomi
add
pop
xor
fsubr
cmp
sub
adc
ret
fwait
imul
cmp
sbb
pop
mov
ljmp
inc
sub
pop
add
xlat
setno
push
lds
sarb
sar
pop
inc
fisubrs
xor
pop
push
inc
jp
lods
adc
daa
pop
mov
les
repz
nop
gs
mov
rorb
fnstenv
loope
enter
xchg
fdivl
pop
xlat
cwtl
ljmp
push
mov
les
ja
dec
pop
loop
mov
pop
das
pop
cmc
sub
int3
mov
outsb
ret
or
sub
cmp
xor
sbb
push
adc
pop
icebp
and
pop
sbb
leave
insb
mov
std
loop
sbb
pushf
aam
cmp
sub
scas
adc
pop
call
or
and
and
push
orl
sub
in
mov
imul
pop
inc
mov
pop
or
xchg
scas
adc
mov
pop
popa
mov
inc
in
loope
jnp
mov
insb
push
jae
decb
xor
gs
fs
cld
movsb
pusha
pop
loope
movsl
pop
int
mov
pop
pop
mov
push
fs
ja
xor
adc
pop
add
fwait
pop
int
sbb
into
jae
xor
insl
jb
mov
pop
pop
jbe
adc
pop
mov
fldcw
std
jecxz
dec
xchg
sub
in
orb
and
sbb
pop
dec
inc
mov
xchg
aaa
mov
cltd
std
mov
cmp
out
cmc
int3
or
pop
test
ljmp
jl
std
lds
outsl
and
pop
ds
dec
lret
mov
xchg
push
jb
scas
mov
xorb
lret
xchg
fwait
add
arpl
xchg
lahf
push
jb
dec
and
sub
stc
xor
pop
rorl
push
pop
hlt
test
lock
jo
pop
sbb
dec
gs
pop
xchg
mov
js
jns
pop
mov
sahf
leave
jo
mov
mov
rcll
xor
sub
add
mov
mov
add
jbe
sbb
movsb
in
pop
or
mov
add
xchg
fsubs
pop
inc
repz
xor
pop
dec
scas
inc
cltd
in
ficomps
cmp
lds
pop
push
ret
loop
out
pop
ja
sbb
pop
mov
scas
xchg
mov
lods
cmp
or
pop
lea
and
orl
pusha
or
pop
insl
pop
adc
pop
clc
roll
and
xchg
les
jnp
xor
sub
add
out
mov
pop
mov
dec
addr16
jg
inc
out
jbe
pop
inc
mov
sarb
cmp
inc
shl
xor
lods
push
int3
and
mov
orb
mov
pop
adc
dec
cmp
xchg
cwtl
pop
mov
pushw
scas
pop
call
mov
pop
lods
dec
fmull
insl
xchg
add
sbb
push
les
scas
mov
dec
cmp
or
sti
and
int
in
notb
jg
mov
test
adc
int3
mov
xchg
enter
mov
mov
fcmovbe
es
lods
and
cmc
dec
mov
call
mov
mov
lret
clc
jge
lds
out
imul
dec
push
mov
mov
aaa
pop
dec
in
pop
mov
imul
pop
and
xchg
or
inc
xlat
loopne
je
add
jecxz
mov
sbb
pop
daa
jmp
ret
scas
xchg
outsl
or
pop
pop
xchg
das
jae
popf
adc
add
lcall
les
lods
stos
sub
bound
scas
push
fwait
stc
cmp
sub
inc
lea
or
jecxz
and
imul
cltd
loop
outsb
mov
adc
mov
mov
push
lcall
or
cwtl
xchg
nop
lea
mov
push
or
pop
pop
push
mulb
cmc
inc
cld
imul
sbb
add
scas
test
dec
pop
mov
in
cmp
push
cwtl
loop
movsl
test
mov
push
cwtl
clc
push
or
pop
mov
jb
adc
and
out
pop
cmp
pop
clc
sbb
rolb
jmp
in
test
cmp
xor
aam
inc
loop
jo
pop
mov
push
jo
cmp
xchg
leave
pop
push
fisubl
pusha
sahf
xchg
stc
dec
mov
negb
pop
mov
loope
je
add
pop
jne
arpl
pop
sub
sbbl
call
add
pop
shrl
fldl
pop
jb
sub
arpl
cmp
sbb
std
iret
outsb
lret
repz
pop
pop
cmc
inc
mov
call
sub
es
insl
pop
loop
lock
or
mov
pop
je
inc
dec
ss
ficomps
faddl
jbe
arpl
dec
out
fistps
lock
xor
push
jecxz
push
pop
in
cmp
push
pop
aam
bound
and
pop
fidivl
xor
inc
aad
stos
cmp
sbb
jge
mov
pop
int
call
push
add
pop
pushf
inc
adc
cmpsl
xchg
pop
sub
adcb
outsb
insb
aam
jmp
push
out
xor
pop
testb
loope
cmpl
dec
jno
dec
fdivs
jmp
inc
stos
test
cld
out
enter
insl
xor
lock
mov
mov
pop
jle
incb
xchg
xor
sbb
mov
idivb
enter
mov
inc
push
dec
sbbb
out
rcrb
xchg
imul
sub
mov
fwait
into
sbb
leave
pop
push
pop
mov
sbb
cmp
jbe
mov
movsb
insb
push
clc
aad
pop
pop
cmpsl
loope
loop
mov
popa
push
inc
or
or
inc
push
lcall
fsubr
mov
sbb
push
mov
adc
ret
adc
jo
jmp
pop
mov
loope
jns
pop
into
sbb
cmpsl
pop
pop
push
out
add
push
or
jl
dec
rcll
pop
ja
lahf
jg
mov
mov
pop
gs
outsl
repnz
cs
in
insl
xor
std
jmp
repz
dec
jl
lds
jmp
out
inc
push
and
pop
test
cmpsb
xchg
notb
pop
aaa
xchg
es
outsb
push
cmp
sbb
shlb
xchg
jg
mov
dec
movsb
push
mov
jnp
pop
sub
mov
mov
in
ds
inc
add
arpl
pusha
push
pusha
inc
pop
and
jle
cmp
js
in
int
inc
pop
jbe
pop
aaa
fisttpll
les
pop
jecxz
lret
pop
fidivrl
mov
pop
mov
mov
xor
lods
int3
pop
lea
movsl
aam
mov
sbb
stc
scas
mov
inc
push
repz
imul
jbe
adc
pop
push
xchg
push
lret
insb
lret
xor
js
dec
ds
imul
insl
cmp
adc
add
cltd
inc
pop
scas
inc
sub
stc
test
jb
sub
pop
arpl
int
movsl
xor
jb
mov
sbb
pop
insl
mul
sbb
pop
pop
push
fmuls
xchg
sbb
jl
sti
je
pusha
gs
adc
add
cmp
mov
push
fwait
push
mov
mov
dec
or
cltd
loope
repz
leave
inc
sub
add
mov
cmpsb
insl
mov
and
pop
das
into
push
jne
pop
mov
test
pop
call
and
xchg
shlb
pop
out
int
hlt
inc
stos
xor
pop
or
mov
call
inc
mov
jb
cmc
add
mov
adc
lcall
pop
pop
and
pop
lods
pop
cmp
dec
and
pop
popa
int
outsl
insb
in
pop
inc
xor
nop
pop
test
push
adc
lods
sbb
pop
loopne
cmpsl
or
popf
pop
xor
fs
mov
push
dec
stc
and
sub
push
in
pop
cmp
dec
pop
loope
mov
and
pop
test
sub
pop
add
or
repnz
mov
test
push
scas
mov
add
cli
xchg
sbbb
das
push
adc
pop
push
jbe
std
pop
enter
mov
lahf
scas
and
mov
mov
jmp
scas
mov
pop
mov
fsubr
jecxz
lods
push
xor
dec
lcall
inc
sarl
xchg
push
call
xchg
in
fsubrs
mov
dec
xlat
push
lret
sbb
sbb
add
lret
fstpl
pop
out
mov
outsb
sub
xchg
inc
mov
jle
jb
pop
mov
loop
jnp
xchg
or
sti
out
inc
outsl
sub
mov
mov
lock
and
inc
xchg
sti
sbb
sbb
pop
dec
fldenv
pop
sbb
push
pop
xor
int
lret
xor
lcall
stos
mov
fnstcw
incb
push
inc
ret
mov
dec
cltd
iret
int3
cli
pop
pop
mov
push
jae
sub
push
iret
pop
adc
pop
jbe
cli
scas
arpl
in
jb
in
into
jo
or
sbb
fcomps
inc
dec
fcmovne
mov
xchg
xchg
movsb
mov
sahf
loop
popa
gs
js
mov
lret
mov
adc
lret
insl
xor
dec
jo
jno
xchg
arpl
cmp
pop
jmp
and
iret
sbb
subl
addr16
imul
shrl
sarl
shlb
mov
xchg
xchg
std
es
push
mov
and
sahf
mov
out
pop
push
cli
mov
iret
jg
cmp
or
pop
sub
je
outsb
fisttps
data16
lret
cmp
pop
and
jmp
test
jo
pop
cld
enter
pop
loop
cwtl
in
push
mov
sbb
cltd
ja
fs
bswap
cmpsl
jge
mov
xchg
jle,pt
or
lret
mov
pop
aaa
inc
mov
and
pop
sbb
sarb
pop
stos
cmp
xor
int
icebp
mov
adc
inc
push
xor
mov
and
ficoml
fimuls
dec
leave
pop
sub
gs
frstor
inc
mov
repz
dec
add
lods
jmp
lods
mov
pop
add
jb
dec
and
add
mov
sbb
leave
jp
adc
fdivr
adc
and
pop
push
dec
pop
nop
fwait
dec
popa
or
adc
iret
push
scas
mov
mov
sbb
cld
pop
stc
out
push
jo
lahf
mov
xchg
fistpl
outsb
inc
inc
in
xor
adcb
mov
jns
ss
dec
inc
pop
mov
or
xchg
jbe
xor
mov
lret
mov
fs
mov
notl
cmp
pop
xchg
test
pop
hlt
pop
shll
clc
stos
lds
out
sub
int
shl
mov
popl
xchg
push
fstps
and
or
rcrb
xor
lret
jbe
pop
jmp
pop
cwtl
std
jo
mov
dec
enter
mov
mov
add
push
inc
imul
pop
push
cwtl
mov
mov
test
insb
sbb
fdivrs
cli
push
dec
pop
out
stos
fimull
movl
rcrb
idiv
lret
jns
dec
int
scas
aas
xchg
or
dec
dec
bound
cltd
xchg
push
jg
lret
scas
sbb
je
movsl
inc
and
rorl
or
outsl
mov
test
push
pusha
sti
pop
nop
cwtl
lret
xorl
int
add
pop
sub
lea
mov
mov
iret
inc
or
mov
scas
daa
mov
je
repnz
andb
cld
fisttpl
test
int3
pop
add
lods
into
fcomps
sub
fnstenv
jle
sbb
mov
mov
pop
cwtl
int
add
add
lcall
scas
add
aas
push
pop
call
int3
mov
mov
filds
cli
sub
pop
fdivrl
and
lret
pop
fbstp
xchg
lcall
inc
adc
cmc
jp
xchg
pop
enter
xor
pop
push
mov
aam
adc
push
sbb
pusha
movsb
adc
sbbb
lods
inc
add
mov
lcall
lods
pop
push
pop
in
jmp
cmpsb
jo
mov
jge
fldl
lds
or
sbb
mov
sti
mov
jmp
test
cld
jmp
push
pop
push
xchg
push
aaa
mov
push
movsl
pop
test
adc
mov
pop
sub
ret
inc
mov
xchg
cmpl
fidivrl
or
pop
mov
jne
push
sbb
pop
fidivrs
cmp
shrb
cmpsb
insb
js
and
pop
orb
loope
sub
pop
xchg
cmc
adc
jo
or
dec
pop
inc
adc
cmp
rol
sub
jmp
pop
pop
dec
scas
movsb
jmp
jb
pop
mov
add
int3
pop
xor
push
inc
pop
test
fnsave
add
push
xlat
adc
pop
insb
jnp
test
lret
add
add
xchg
sbb
icebp
push
xor
in
dec
mov
jo
pusha
lret
sbb
mov
test
les
ficomps
shrb
mov
mov
or
pop
cwtl
jb
mov
fs
or
in
scas
or
outsb
pop
pusha
repz
cmp
dec
xchg
fmull
dec
movaps
pop
sbb
repnz
dec
scas
jecxz
xor
aad
pop
add
je
stos
jns
push
or
push
sub
jb
cmp
jecxz
sti
pop
lods
and
jg
dec
gs
pop
ja
and
xchg
inc
mov
fstpt
dec
subl
aad
add
cmpsb
inc
dec
and
sbbl
sahf
dec
js
nop
dec
pop
inc
loop
daa
mov
pop
fbld
add
dec
into
sub
lea
fst
jno
sbb
mov
mov
out
out
dec
jg
cmp
clc
lret
cmpsl
fcoms
sbb
mov
push
lea
or
lock
push
int
xlat
scas
xchg
or
shlb
xor
sahf
or
cwtl
jns
repz
pop
add
je
mov
out
ret
into
or
inc
mov
xchg
lret
xchg
outsb
ja
fistps
aam
pop
pop
stc
in
repnz
xchg
testl
ss
xchg
cli
pop
test
pop
ljmp
lcall
pop
adc
fs
insl
xchg
sbb
jnp
dec
push
dec
lods
xor
push
test
insb
pop
ja
int
rol
pop
jns
lcall
aam
addl
mov
lock
mov
rorb
inc
sbb
fisubs
pop
xchg
dec
cmp
jo
adc
pop
int
fistpl
ds
lea
rorb
jge
push
and
test
pop
imul
cmp
jb
push
jge
ret
cmp
jnp
scas
test
popa
int
pop
loope
repnz
sbb
jnp
aas
and
lods
lock
mov
js
push
cmp
pop
or
jp
and
sbb
insb
and
jl
in
ljmp
xor
inc
imul
push
sub
les
pop
dec
sti
int3
test
into
pop
inc
pop
push
sub
sbb
fldl
mov
scas
mull
adc
inc
mov
sbb
pusha
in
and
fcoms
repz
or
in
cmp
jp
inc
push
or
outsl
pop
fwait
int3
adc
out
jl
pop
push
aam
adc
call
mov
or
jle
xchg
popf
pop
sbb
divl
jmp
pop
jo
mov
rcl
inc
sub
clc
pop
mov
in
mov
mov
jmp
add
sahf
pushf
idivl
jmpw
mov
mov
filds
add
ret
lea
mov
pop
push
jno
add
inc
xor
jmp
jmp
lahf
jecxz
and
mov
mov
mov
hlt
pop
xorl
fdivl
dec
pop
dec
dec
xor
pop
hlt
push
sub
add
and
ja
addr16
fdivrs
lds
and
andl
fistl
and
mov
fidivrl
imul
test
sbb
mov
jecxz
inc
xlat
adc
sbb
mov
inc
xchg
pop
jp
loop
adc
jle
adcb
mov
pop
dec
jp
cld
dec
cmp
icebp
pop
dec
sbb
loopne
jns
insb
cmpsb
xchg
pop
out
nop
and
push
pop
jb
or
aam
and
dec
int
push
jg
lcall
or
sbb
dec
shlb
sahf
fs
insb
xchg
cs
insl
push
mov
dec
jge
mov
loop
sub
out
gs
mov
daa
cmp
loop
xor
sbb
pop
and
push
sti
mov
or
int3
adc
pop
jle
js
mov
push
ficoms
je
dec
jns
fwait
sbb
mov
mov
adc
mov
xor
sub
out
iret
test
inc
scas
es
cmpb
pop
ljmp
int3
les
es
stc
jmp
aad
dec
scas
outsb
add
mov
jb
xchg
push
int3
jecxz
push
push
stos
lcall
mov
outsb
mov
test
out
mov
add
pop
sbb
xchg
arpl
and
mov
je
and
pop
out
mov
jbe
mov
repnz
or
jns
mov
pop
mov
pop
sbb
add
pop
gs
dec
or
push
fisubrl
bound
mov
cltd
sti
pop
mov
add
xchg
aad
add
pop
xchg
pop
idivl
add
imul
pop
mov
xlat
jecxz
pop
push
or
sub
dec
insl
pop
popf
push
dec
in
cmp
enter
std
adc
pop
adc
fistpll
scas
jbe
int3
scas
xchg
mov
mov
xlat
ja
fwait
sbb
repnz
mov
pop
in
loop
fstps
push
or
pop
add
xchg
adc
inc
pop
mov
aaa
dec
sbb
mov
sbb
fnstenv
in
cmp
dec
push
dec
mov
lret
xlat
loope
pushf
sbb
add
mov
stc
jae
or
jb
out
leave
sti
sbb
pop
adc
mov
push
je
pop
clc
mov
push
fsubp
sbb
pop
pop
loopne
sub
iret
loop
and
mov
lcall
push
sbb
inc
ret
push
xchg
pop
icebp
ljmp
jecxz
lods
cmp
test
dec
jne
add
pop
imul
dec
xchg
sbb
mov
das
cmc
jbe
adc
mov
test
data16
xchg
mov
into
xchg
mov
je
xorl
sbb
jnp
jecxz
in
mov
push
popf
sub
mov
or
xchg
loopne
andb
mov
in
call
imul
les
cltd
insb
loop
push
cmp
popf
outsl
stos
lock
pushl
mov
xor
sbb
sub
jecxz
or
std
iret
adc
stos
xchg
jb
in
or
mov
push
and
xor
aad
movsb
mov
mov
pop
fnstcw
jecxz
test
sti
cmp
andl
int3
mov
les
push
into
in
fsubl
and
popl
pop
sbb
nop
pop
xor
fdivs
pop
jbe
jno
adc
hlt
mov
popf
into
pop
add
repz
or
add
scas
mov
sbb
pop
mov
sbb
sub
xchg
jmp
mov
dec
inc
sub
pop
jb
fisubrl
lret
out
mov
jmp
adc
inc
adc
jmp
pop
insl
iret
mov
and
fistps
stc
pop
mov
pop
pop
dec
xchg
xchg
popa
pop
xchg
movsl
pop
inc
int
jae
and
test
out
fwait
ret
or
xchg
outsb
test
mov
lret
outsb
fbld
nop
mov
sbb
or
push
mov
sbb
jp
pop
xor
rorl
cmp
jge
pop
push
mov
lods
int
or
fwait
adc
pop
jbe
xchg
xor
icebp
pop
mov
dec
int
push
inc
jno
dec
jne
fmul
push
pop
mov
adc
out
mov
or
dec
pop
lahf
lods
fs
mov
mov
call
lret
subb
and
jecxz
jb
lods
imul
mov
fstps
int
inc
sbb
fsubs
mov
pop
push
sbb
scas
pop
mov
sub
jb
mov
cmc
sub
xchg
shll
pop
pop
xor
and
mov
call
int
and
pop
pop
or
dec
lods
cltd
pop
arpl
pusha
cmp
dec
xchg
pop
push
ljmp
mov
cmp
mov
sbb
xchg
fistl
sub
pop
stos
mov
movsl
push
mov
adc
in
fs
and
xchg
mov
pushw
scas
clc
dec
fs
sub
pop
lods
inc
jg
push
sbb
in
pop
lahf
xor
dec
adc
stc
ds
mov
ret
ds
xorl
mov
push
pop
insb
loope
scas
mov
clc
mov
pop
out
adc
inc
mov
sbb
and
xchg
sbb
repnz
mov
lahf
adc
inc
sub
inc
pop
mov
mov
jp
in
stc
or
xchg
xchg
mov
mov
or
jp
pop
cld
ja
adc
mov
rclb
mov
and
mov
out
mov
sti
adc
add
negb
pusha
pop
or
dec
bound
out
inc
cltd
pop
pop
adc
jb
in
pop
js
sar
mov
daa
adc
dec
xchg
sbb
pop
fsub
shlb
out
jmp
and
jo
or
pusha
xorb
pop
into
ljmp
pop
std
fnstsw
int
subl
fldenv
dec
pop
out
or
adc
and
and
sbb
pop
cmovne
pop
je
int
hlt
rcrl
push
inc
aad
cmp
call
push
mov
popa
sbb
mov
cltd
in
addl
fcoms
cmp
sbb
imul
and
subb
mov
enter
pop
fbld
loop
sti
scas
stos
push
dec
dec
icebp
mov
and
lods
pop
leave
dec
rolb
pop
jecxz
inc
orb
push
gs
movsl
jnp
jl
es
pop
or
imul
arpl
pop
andb
pop
push
push
jecxz
mov
adc
pop
int3
and
pusha
es
mov
xchg
mov
and
nop
cmp
arpl
dec
out
jnp
pop
jb
sub
pop
fnsave
stc
adc
into
xlat
sbb
and
xchg
pop
test
push
push
push
pop
pop
adcl
mov
sbb
pop
fdivrp
sub
repz
movsl
pop
das
inc
ds
clc
daa
gs
divb
pop
xor
cli
xor
pop
push
inc
mov
filds
pop
sub
xchg
mov
test
lds
and
mov
sbb
pop
stos
testl
jl
ja
bound
scas
jnp
jmp
fwait
add
pop
in
pop
cltd
pop
sti
fisttpl
int
arpl
jecxz
out
ds
sbb
out
fwait
mov
sbb
repnz
fistl
cmp
pop
xchg
cmpsb
rorb
pop
fimull
jecxz
fucom
adc
mov
and
incb
pop
nop
add
pop
and
pop
adcb
xor
dec
push
pop
jl
out
jg
xchg
pop
inc
jmp
imul
or
pop
pop
loopne
mov
out
dec
pop
push
movsb
sbb
scas
in
sbb
aad
mov
std
mov
push
adc
cli
mov
pop
mov
cmp
xchg
jmp
sbb
pop
xor
pop
push
out
mov
es
cltd
cmp
ja
in
and
or
das
xchg
popa
into
inc
mov
and
inc
mov
dec
mov
push
mov
pop
div
aad
data16
mov
add
pop
cld
pop
and
cli
dec
cmp
pop
loopne
jl
push
fistl
push
stos
jmp
sbb
sbb
or
xor
and
inc
cwtl
sbbb
int
stc
daa
pop
pop
nop
mov
sbb
pop
cld
sbb
into
loop
gs
add
sbb
enter
in
pusha
ffreep
lea
scas
std
lds
pop
mov
dec
jns
sbb
dec
test
int3
sbb
repz
imul
jmp
sub
inc
scas
push
lret
pop
shl
cwtl
mov
jns
mov
push
cltd
push
mov
push
fs
cmpsl
pushaw
jge
pop
int
aad
sbb
jnp
pop
pop
cmp
dec
mov
cmpsb
fwait
or
pop
push
mov
xchg
cltd
jo
pop
jns
lods
icebp
movsl
xor
pushf
sub
cmpsl
stc
pop
dec
ret
push
popa
aaa
adc
arpl
sbb
mull
movsb
repz
stos
clc
or
push
scas
rcrb
int3
jl
dec
jmp
and
or
mov
loop
jns
pop
xchg
hlt
inc
lahf
mov
push
push
lret
imul
cmpb
dec
das
xor
or
sbb
pop
pop
cld
dec
dec
mov
add
mov
lock
inc
mov
adc
pop
lods
xor
mov
jecxz
pop
sub
jecxz
fwait
daa
and
call
push
mov
pop
pushf
dec
and
cltd
jecxz
loop
fidivl
shrl
and
push
pop
out
dec
pushf
fs
adc
xchg
push
sbb
cmc
stos
jp
and
stc
sbb
pop
icebp
xchg
sub
mov
fsubs
push
xchg
lock
adcb
outsl
jmp
mov
xor
and
fstpt
jne
aaa
ja
pop
popl
in
cwtl
pop
scas
fisttpll
jbe
jge
icebp
jb
sbb
jns
pop
fildll
scas
adc
adc
pop
pop
pop
addb
nop
add
push
pop
jno
dec
dec
movsb
pop
mov
fcompl
xor
icebp
repz
cmpsl
inc
dec
pop
hlt
sti
lds
add
fmuls
pop
push
loop
mov
pop
sahf
or
pop
dec
mov
int
inc
push
add
lahf
negb
or
dec
rclb
pop
fwait
or
inc
pop
pop
fucomp
mov
xchg
out
mov
push
icebp
scas
pop
mov
mov
in
sahf
pop
cmp
mov
adcb
shll
or
imul
leave
je
enter
addr16
or
mov
lret
jb
ret
pop
repnz
mov
inc
pop
mov
add
cmp
clc
cmp
jmp
adc
aaa
cltd
cmp
in
sub
pop
out
and
xchg
xchg
out
xchg
int
std
mov
or
lret
mov
cmp
stos
shlb
pop
dec
dec
sti
int
daa
push
pop
lds
cltd
add
and
stc
cmpsb
leave
jp
aad
std
sub
or
add
lcall
icebp
sbb
xchg
add
mov
mov
jg
and
repz
mov
or
iret
int
loopne
lahf
dec
cmp
xchg
jl
jbe
dec
fcoms
rcrb
xchg
xorb
pop
sbb
adcl
and
mov
pop
pop
lods
xchg
jb
testb
ret
push
enter
scas
mov
sbb
dec
sub
addb
jb
xor
push
pop
pushf
and
lock
push
pop
cmc
mov
pop
fdivl
sbb
pop
cmpsl
pop
mov
dec
mov
pop
or
jne
cmp
pop
test
aaa
push
pop
in
pop
and
push
pop
test
add
insb
bound
cs
adc
cmc
xchg
stos
inc
inc
jbe
decb
rcrb
fcomip
mov
sub
mov
mov
int
mov
adc
dec
adc
sub
pop
idiv
sti
mov
inc
fwait
pop
push
jbe
jae
jns
cltd
pop
inc
lea
lock
mov
lret
pop
stos
sub
fisttpll
cli
cmpsl
adc
lods
popa
imul
imul
aam
mov
adc
mov
aas
in
stc
push
movsb
mulps
orl
add
pop
idivb
sbb
ret
pop
outsb
sub
pop
inc
jno
sti
mov
data16
dec
mov
iret
sbb
outsl
bound
push
shlb
cltd
pop
mov
mov
push
dec
and
stos
into
pop
push
lods
fmuls
pop
dec
push
loop
je
out
pop
mov
or
mov
sub
lods
pop
mov
push
lahf
sbb
xchg
repz
mov
push
sub
jl
mov
and
mov
sub
lcall
jg
sub
cltd
xchg
mov
scas
cmp
in
jns
jmp
in
sbb
inc
pop
test
repnz
lea
pop
mov
pop
mov
test
push
scas
stos
sbb
fisubrl
mov
pop
xor
sub
pop
dec
in
lahf
jle
push
in
scas
lahf
or
enter
jo
outsl
jb
adc
inc
aaa
in
ljmp
cmp
mov
pop
dec
adc
sub
push
pop
out
test
pop
js
jb
aaa
es
push
sub
xchg
pop
ds
push
enter
jecxz
lods
movsb
pop
les
insl
sbb
gs
outsb
adc
sub
add
pop
xchg
dec
sbbb
test
lock
pop
inc
mov
in
jnp
pop
mov
pusha
adc
pop
cmpsb
dec
mov
mov
pop
outsl
out
lods
sbb
test
pop
sub
dec
pop
and
cli
xor
adc
out
stos
pop
into
cmpb
adc
xor
sbb
stc
jp
inc
aad
shll
pop
mov
mov
mov
dec
imul
pop
ficoml
pop
in
jb
cltd
mov
stc
push
pop
sbb
scas
aaa
sbb
dec
or
jb
insb
shlb
test
cmp
fimuls
dec
lahf
xchg
sbb
and
pushf
fnstenv
add
lea
jmp
mov
lods
idivb
pusha
pop
cwtl
pop
or
add
inc
cmp
pop
in
add
lcall
adc
adc
dec
pop
lahf
mov
xchg
stos
fisttpl
invlpg
pop
jle
aas
or
movsl
popl
out
push
clc
inc
fbld
ret
movsb
xor
push
push
sar
adc
ret
loopne
mov
iret
pop
jne
arpl
stos
add
dec
adc
insb
pop
stc
shl
add
jp
adc
or
test
sbb
outsb
sub
mov
out
jge
shlb
gs
sarb
repz
nop
in
mov
fucomi
shrl
arpl
pop
fisubs
and
test
fstpl
mov
popa
fstps
das
fadds
push
mov
lret
leave
int3
or
push
pop
add
or
sbb
push
mov
jno
xchg
fisubrs
sbb
pop
inc
pop
mov
outsb
mov
mov
nop
xchg
mov
sub
jo
pop
jge
pop
and
xor
mov
mov
dec
ret
jbe
inc
pop
loop
pop
jns
mov
std
dec
pop
lea
sbb
rorl
mov
pop
std
mov
jmp
jmp
divb
push
lahf
xor
mov
ja
and
xor
and
and
jecxz
dec
xchg
int
stos
pop
rcr
insl
mov
mov
mov
mov
and
mov
or
fistpll
jbe
fucompp
sbb
cmpsb
scas
rclb
or
ss
test
or
jb
push
ljmp
pop
mov
test
inc
cwtl
xchg
stc
pushf
insl
adc
data16
mov
push
or
mov
sbb
lret
pop
xor
lock
push
lock
push
aaa
mov
sub
ljmp
test
mov
pop
pop
sbb
pop
sbb
cwtl
jns
inc
sub
outsb
mov
roll
repnz
pop
mov
sbb
pop
aam
jl
cmpsb
data16
xor
das
pop
pop
jmp
xor
jg
std
inc
mov
ljmp
and
mov
sbbl
adc
mov
push
push
add
mov
into
sub
push
lret
adc
pop
inc
mov
out
push
mov
add
js
je
nop
pop
xor
stos
xchg
int
mov
push
fadds
lret
mov
adc
popf
int
movsb
push
movsl
pop
ljmp
jno
aaa
jb
dec
test
xchg
sti
jge
add
push
in
or
xor
int3
push
and
sub
stos
test
or
sbb
jb
clc
ret
enter
push
out
pop
xchg
out
int
or
mov
cmp
inc
pop
adc
push
adc
and
imul
add
dec
jne
jo
scas
stos
je
hlt
fucompp
mov
leave
pop
push
mov
push
cmp
push
sbb
xorb
push
pop
dec
push
pop
or
dec
enter
jno
adc
lock
pop
loope
gs
ret
push
sub
enter
lock
cli
pop
pop
in
mov
repz
mov
add
icebp
jl
cmp
dec
inc
mov
mov
fmuls
xchg
mov
in
das
pop
daa
fstp
pop
enter
std
sub
out
out
ret
sbbl
in
repz
sbb
pop
fdivs
mov
sbb
mov
ror
sub
pop
sbb
jp
fld
dec
and
pop
xor
mov
push
dec
scas
sbb
lret
test
cmc
or
pop
int
push
aaa
fildl
mov
xchg
cwtl
jae
inc
imul
addl
jo
cmc
lea
pop
jg
sbb
dec
jl
mov
pop
lods
cmp
sbb
ret
rol
or
ret
sti
sub
dec
lods
mov
icebp
rcrb
sbb
xor
push
in
sbb
mov
sub
pop
in
sub
mov
jbe
mov
xor
in
pop
in
sub
pop
imul
pop
fs
cmp
xchg
into
in
pop
push
and
jge
int
jp
and
fnstenv
je
loopne
cmpsl
sbb
ret
pop
int
xchg
mov
jns
mov
mov
jnp
daa
stos
enter
sbb
mov
xlat
xchg
shlb
push
sbb
mov
outsl
push
dec
or
es
and
add
sbb
sahf
push
shl
insb
in
adc
pop
test
jecxz
pop
add
adc
pop
push
int
cmp
push
sub
mov
sbb
ficompl
lea
inc
push
loop
iret
add
push
pop
ja
cmp
filds
and
mov
mov
out
pop
into
stos
out
sbb
mov
pop
mov
test
push
pop
pop
sarb
lods
addr16
and
pop
mov
dec
jne
pop
inc
ret
dec
or
test
pop
sub
adc
jecxz
pop
dec
mov
sbb
adc
pop
sub
test
push
pushf
push
in
lcall
jmp
and
push
out
fwait
jbe
notb
insb
sub
jle
popf
test
mov
test
or
or
mov
lds
cli
in
out
ficomps
dec
mov
out
push
scas
mov
xor
inc
jge
cwtl
xorb
pop
sbb
xchg
fldcw
rcrb
push
insb
mov
push
cltd
mov
or
adc
dec
xor
xor
xchg
test
pop
push
lret
pop
mov
sti
stc
ret
rcrb
jbe
aam
pop
mov
jb
aad
cwtl
mov
and
adc
sbb
dec
bound
test
fdivl
enter
mov
inc
push
mov
dec
int
iret
xchg
pushf
ficomps
stc
xchg
cld
sub
jno
adc
jnp
dec
add
popa
push
clc
pop
xchg
pop
mov
pop
sbb
insl
or
adc
nop
int
mov
dec
pop
pop
aam
add
mov
pop
jmp
shr
adc
cltd
rcl
jle
jb
push
pop
repz
fisttpll
add
psubsw
into
inc
xchg
dec
rorl
push
xchg
popa
cmc
ja
sub
pop
stc
pop
jb
arpl
int3
movsb
xor
and
and
or
clc
fdivl
das
sub
lahf
test
dec
sub
into
inc
mov
fiadds
push
pop
out
push
fistps
leave
or
test
cmpsl
repz
insl
fcmovne
daa
loope
shl
pop
push
dec
fs
aas
int3
lods
stos
add
xchg
imul
sbb
jg
jae
dec
and
sub
dec
pop
outsb
out
repz
lods
cmpsl
or
call
xor
mov
or
push
ficompl
mov
cmp
stc
xlat
aad
xchg
or
pop
and
jbe
pop
jl
xor
xchg
int
in
sarb
dec
adc
mov
loop
test
daa
pop
out
test
cs
fnstcw
mov
or
dec
pop
inc
push
call
rcrb
int
lea
mov
je
cltd
test
xchg
pop
dec
jecxz
imul
arpl
pusha
push
mov
daa
data16
ja
fidivl
mov
and
mov
int
sub
pop
jb,pn
aam
lods
jl
push
jecxz
fstpt
jns
push
push
push
arpl
test
pop
daa
aam
adc
out
addb
pop
add
jbe
mov
rorl
outsl
dec
xor
pop
int3
xchg
jg
jno
lods
push
pop
int
or
and
mov
sub
mov
loope
push
aam
iret
adc
lock
sub
imul
xor
mov
mov
scas
mov
fiadds
bound
jbe
div
sahf
push
sbb
pop
loope
not
jb
or
jmp
mov
sub
in
push
add
push
push
ret
adc
std
fs
jbe
pop
xor
in
push
and
icebp
imul
out
pop
xor
cmp
in
adc
jle
push
lods
flds
dec
fs
mov
les
cmp
jnp
add
lea
scas
arpl
nop
pop
cmp
data16
fildl
cmp
repz
pop
in
xchg
sub
mov
fisubrs
add
ret
jb
in
repnz
fdecstp
pop
andl
mov
cmpsl
push
test
push
pop
mov
loopne
and
xchg
xchg
daa
filds
pop
push
adc
rcrb
lret
scas
or
test
inc
sbbb
scas
jb
mov
and
test
int
ljmp
cmp
pop
dec
sahf
xchg
dec
and
imul
sub
es
sbbl
cmp
int3
int
test
adc
pop
dec
jae
cwtl
call
jbe
lds
mov
stos
out
mov
lods
pushf
bnd
arpl
pop
leave
int3
fwait
pop
mov
jb
pop
shlb
add
stc
lret
mov
leave
xor
sub
fidivrl
in
int3
mov
sbb
pop
pop
push
xchg
rcll
jnp
push
in
pop
in
hlt
dec
fsubs
lret
dec
sahf
and
push
push
es
jmp
in
xchg
jge
mov
push
dec
das
fs
out
jp
insb
int
je
pop
sub
mov
rorb
inc
dec
lea
xchg
xor
aam
or
pop
add
jns
mov
ret
mov
sub
pop
rcll
sbb
jb
dec
mov
pop
sbb
into
popf
pop
in
xchg
push
mov
cmpsl
in
pop
ror
mov
subl
pop
xchg
mov
out
pop
lret
pop
jae
int
call
or
dec
cli
fimull
nop
pop
push
adc
add
dec
mov
xchg
or
int
push
pop
stos
test
mul
sub
jg
lahf
popa
or
movsb
fstpt
lret
cmp
sbb
dec
cmp
loope
ret
xor
daa
loop
aaa
push
jbe
xchg
imul
jmp
cmpsl
jecxz
cld
push
ljmp
push
sbb
repz
int
sahf
and
lahf
std
push
aas
lret
into
sbbl
and
xchg
mov
js
sbb
lods
push
pop
or
sub
cltd
ret
jno
push
test
push
das
xchg
jg
cmc
xchg
xchg
inc
pop
jbe
mov
push
outsl
jb
lods
push
pop
dec
hlt
inc
cli
daa
in
jecxz
pop
and
xor
xchg
jecxz
test
pop
push
pop
pop
lea
xchg
insb
iret
aaa
pop
or
mov
lcall
scas
bound
lds
pop
inc
jo
js
inc
cmp
adc
out
mov
xor
shlb
jbe
std
xchg
pop
pop
icebp
lods
sbb
pusha
jmp
sbbl
push
and
inc
mov
xchg
adc
lods
punpckhwd
rcrb
fstpt
pop
jns
inc
es
fwait
jge
jae
shlb
dec
sahf
insb
jecxz
jo
pop
jb
ja
sub
arpl
mov
mov
inc
movsb
insb
rcrl
sbb
xchg
push
out
mov
mov
lahf
sbb
mov
adc
cmp
cmp
mov
mov
fnstcw
xor
insb
or
or
cmp
lea
dec
mov
pop
ljmp
cli
mov
insb
mov
sbb
pop
rcrl
jmp
jns
fbstp
xor
cltd
repz
ret
fcoml
fists
dec
movsb
xchg
pop
sub
pop
nop
pusha
sahf
popa
pop
std
rcrl
cmp
cs
and
pop
add
push
mov
in
pop
add
scas
int3
push
sahf
loopne
loopne
sub
mov
ret
push
stc
xor
fsubrs
je
lds
pop
mov
nop
mov
or
push
cltd
int
fisubs
addr16
mov
push
cmp
out
pop
push
mov
hlt
test
jb
pop
addr16
mov
push
sti
push
mov
cwtl
dec
pop
or
push
inc
dec
mov
lret
mov
xchg
jae
rcrl
xchg
jbe
pop
cmp
jno
adc
lahf
cwtl
stos
sar
fs
pop
pop
js
xlat
pop
out
pushl
adc
mov
das
pop
adc
jbe
adc
dec
pop
sahf
add
je
push
jmp
or
cli
pop
and
xchg
pop
pop
pushf
xor
mov
jmp
fiadds
and
notb
inc
jb
int3
pop
rcl
xchg
test
sub
aas
pop
orl
je
inc
stos
push
sbb
and
push
pop
jbe
add
pop
sub
int
or
mov
sbb
jno
movsb
pop
fwait
or
repz
push
adc
js
test
xor
cltd
xchg
inc
jno
cmp
push
dec
mov
dec
rolb
pop
dec
push
stc
or
aam
push
popf
push
pushf
fistps
add
sahf
lahf
jne
xor
fimull
mov
pop
fdivs
mov
repz
rclb
jg
jne
lahf
push
jno
fsubs
sbbb
fbld
addr16
pop
jge
loop
inc
and
push
es
xchg
push
inc
xchg
fdivr
sbb
sbbb
lods
xchg
inc
xor
int
stos
or
add
mov
and
pop
sbb
jl
pop
leave
dec
call
cwtl
jecxz
mov
mov
icebp
pop
or
fiaddl
pop
into
sbb
push
pop
xchg
mov
call
push
jg
int
pop
test
cmp
std
sbb
sbb
pop
xor
test
pop
add
pop
jge
mov
int
popa
mov
mov
inc
repnz
mov
out
xchg
icebp
insb
pop
adc
pop
inc
mov
out
scas
mov
lcall
fmuls
lret
aas
and
nop
cltd
inc
bound
testb
mov
pop
sar
arpl
sahf
lcall
dec
mov
int
pop
inc
daa
pop
jne
jge
push
xchg
test
js
imul
cmp
pop
imul
loopne
pop
sbb
or
jle
scas
cmp
xor
sbb
mov
pop
mov
jle
daa
pop
int
mov
lods
push
mov
shll
ficomps
stos
jbe
dec
fbstp
adc
int
mov
pop
pop
fstpl
loope
pop
test
push
add
iret
sbb
push
add
int
ret
test
cli
fisubrl
dec
lods
or
pop
cmp
lock
mov
outsl
and
movsl
pop
test
jno
dec
jns
cmpsb
in
fidivs
pop
lods
int
in
je
popa
pop
mov
sbb
pop
orb
jp
movsb
cli
stos
xchg
jnp
dec
stos
pop
mov
and
pop
jo
mov
rcrb
xchg
cmp
scas
lahf
sub
cs
sbb
push
fbstp
int3
fstps
in
add
fdivs
cmp
lret
jmp
aad
dec
xor
mov
add
xor
sbb
pop
push
mov
and
aas
sub
inc
test
rorl
repz
jnp
sub
pop
stos
cmc
sahf
xchg
mov
jbe
pop
pop
filds
enter
adc
ficoml
stos
and
inc
int3
mov
iret
fmuls
or
push
pop
in
ja
mov
mov
std
xor
add
sbb
mov
xchg
jnp
adc
addl
and
mov
xchg
pop
shl
jo
add
add
mov
mov
out
test
xchg
fs
cmp
scas
mov
inc
adc
dec
mov
xlat
imul
subb
pop
jb
or
sbb
push
jae
pop
loop
add
popf
aas
fsubrl
sbb
ja
loop
pop
pusha
test
cmp
mov
cmpsl
aaa
jae
or
sub
pushw
pop
jno
outsb
mov
mov
sbb
ss
btr
jo
pop
test
xchg
xchg
pop
xchg
int3
mov
push
cmp
pop
or
jae
in
xchg
mov
lret
mov
int
jne
pop
arpl
aad
and
out
sub
pop
sbb
push
js
pop
sbb
jbe
stos
dec
xchg
sbb
in
xchg
neg
mov
pop
cmp
pop
mov
repnz
inc
pop
lods
xor
pop
in
jge
push
aas
dec
mov
je
push
int3
sbb
pop
jle
and
pop
aas
or
insl
add
in
shll
inc
adc
fcomi
sti
ret
inc
push
mov
mov
or
and
cltd
pop
or
mov
outsb
jb
subl
sbb
fsubrl
xchg
pop
jns
hlt
call
fists
xchg
mov
jg
mov
inc
xchg
sbb
cmp
pop
pop
sub
movsl
sbbb
outsl
and
iret
leave
adc
sbb
cmc
jae
mov
push
addl
daa
divl
int3
leave
orl
adc
dec
insb
pop
or
or
push
inc
dec
and
fldenv
in
pop
adc
pop
mov
loope
pop
jmp
adc
fcomps
pop
pop
inc
js
mov
adc
and
lock
scas
push
popf
xor
pop
setae
lods
decl
pop
fcompl
pop
je
leave
lock
mov
pop
xor
mov
mov
sub
mov
call
sub
pop
sub
ljmp
and
ds
sbb
les
sahf
lods
mov
out
lahf
pop
sbb
aam
fs
lock
cmp
add
call
sar
sahf
popa
pop
mov
jbe
loope
mov
pop
mov
fisubrs
cmpsl
icebp
push
inc
pop
cli
test
adc
outsl
push
xchg
sub
sbbl
push
pop
insl
sbb
cltd
fcomps
jno
or
rorl
int
iret
adc
mov
push
sahf
pop
aaa
outsl
nop
pop
dec
adc
jo
mov
jg
mov
add
mov
dec
pop
int
mov
hlt
sub
add
mov
pop
dec
jo
mov
sbb
inc
pop
push
enter
test
add
fbstp
pop
add
dec
ss
je
cld
pop
subb
popa
pop
movsb
fwait
movsl
fdivs
clc
in
fidivrs
insb
mov
pop
mov
aas
pop
mov
in
lcall
xchg
jp
les
dec
xchg
in
in
pop
sub
mov
cli
pop
jno
sbb
out
jge
jbe
mov
add
mov
or
pop
mov
mov
mov
outsb
jns
enter
fstpt
xor
jl
jecxz
xchg
insl
pop
cwtl
mov
test
push
pop
mov
cwtl
sbb
test
pop
imul
pop
lcall
ret
xchg
aas
cwtl
or
jle
mov
mov
pop
enter
cmp
test
nop
add
cltd
aam
test
cmp
test
dec
ficompl
sub
xchg
add
sbb
nop
es
arpl
std
push
mov
enter
in
xor
ljmp
pop
gs
push
mov
lds
andb
jge
sti
and
inc
mov
push
jle
inc
mov
mov
mov
sub
sbb
int3
test
int
pop
hlt
mov
cmp
pop
jge
or
mov
xor
pop
nop
clc
mov
mov
popf
enter
out
pop
fdivr
pop
in
mov
nop
push
push
movsl
stc
jmp
fwait
jns
jne
sbb
mov
lcall
and
movsl
cmpsl
arpl
push
mov
dec
inc
push
fldcw
fisttps
sbbl
lods
dec
jb
pop
jp
pop
push
xchg
xchg
lds
sbbl
testl
lods
mov
out
inc
cmpsl
fsubs
jl
fimull
inc
mov
dec
xchg
rolb
aaa
pusha
imul
pop
dec
xchg
pop
clc
xchg
mov
fsubs
shrb
xchg
jne
sub
cmpsb
pop
divb
mov
lret
mov
xchg
mov
add
ret
sbb
or
test
xchg
aaa
cli
shrb
pop
enter
sarl
pop
popl
outsb
bound
mov
in
dec
mov
mov
xchg
mov
adc
adc
cmp
test
dec
shll
sub
fs
pop
ss
movsl
dec
enter
ja
push
cwtl
xor
push
lret
mov
xchg
mov
test
xchg
adc
mov
push
pop
lahf
add
and
fcmovnb
push
hlt
mov
jecxz
or
shl
jbe
jne
pop
mov
jae
cmp
clc
mov
pop
dec
adc
and
dec
pop
cmp
add
and
daa
pop
dec
push
les
scas
adc
lock
mov
lahf
rcrb
xchg
fwait
arpl
nopl
mov
icebp
dec
fs
test
sub
fstps
test
pop
lea
inc
lds
or
push
and
out
mov
cmpsl
lret
ficoml
fsubs
pop
ja
adc
int
jno
xchg
pop
mov
pop
lret
repnz
into
lcall
xchg
dec
addb
mov
int3
aad
stc
sub
int
jne
push
cmp
sbb
scas
cmp
out
and
adc
pop
jne
inc
mov
mov
xlat
pop
fcomps
fstl
sub
sbb
jg
fildll
mov
pop
fprem1
loopne
movsl
bound
pop
aas
lret
rorl
es
addr16
sub
dec
repz
rcrl
mov
sub
dec
xor
jo
pop
add
or
mov
fdivrl
fucom
ret
pop
decl
hlt
movsb
or
pop
push
mov
movsl
mov
stos
jbe
sub
dec
jno
in
push
dec
pop
add
mov
lret
dec
ds
or
pusha
pop
fabs
xchg
pop
test
ja
lcall
jno
mov
dec
pop
sub
mov
mov
popf
mov
hlt
icebp
bts
sarb
mov
fildl
sbb
sub
pop
pop
scas
pop
jp
gs
pop
bound
mov
cltd
sbb
js
xchg
cld
or
xchg
pushl
ret
jno
scas
mov
js
push
lret
repz
pop
jge
stos
jno
adc
or
rorl
outsl
dec
stos
mov
fistl
test
pop
dec
cmp
xlat
mov
mov
xor
insl
mov
int
insb
das
aam
push
xchg
pop
xchg
xchg
or
insl
jo
pop
iret
imul
and
lret
push
mov
dec
rcrl
icebp
fbstp
into
mov
scas
adc
push
jmp
mov
int
xorl
mov
popa
jmp
arpl
movl
push
inc
xor
mov
cltd
or
jg
test
andl
sub
sub
insb
cmpsl
fildl
add
mov
jp
outsb
enter
repz
dec
adc
xor
cmp
xchg
aad
ss
aam
mov
jb
pop
push
aas
movsl
cs
int
sub
xchg
cld
jne
mov
pop
sbb
cmp
pop
les
and
mov
inc
pop
insb
je
inc
dec
mov
push
mov
out
cmp
enter
repnz
cmp
dec
mov
and
ss
pand
imul
and
push
pop
adc
movsl
daa
dec
imul
shlb
mov
imul
stc
add
inc
xchg
fdivl
pop
lods
jl
in
lahf
mov
imul
xchg
andl
pop
or
fdivr
pop
pop
cmpb
push
mov
inc
lea
mov
es
jecxz
adc
mov
cmp
jg
gs
sub
xor
pop
nop
sub
shlb
xchg
fildl
mov
xlat
mov
cmp
jne
mov
dec
lahf
das
insl
or
pop
cwtl
into
nop
sub
aaa
pop
test
fdivs
fiaddl
mov
pop
push
ss
cld
pop
int
jl
adc
dec
clc
das
adc
sbb
jbe
sbb
je
jmp
lods
push
pop
sbb
cmpsb
mov
mov
pop
jbe
pushf
and
idivb
xor
cli
sub
push
dec
sub
lods
mov
cld
pop
pop
add
std
ficoml
adcl
jbe
and
xor
dec
scas
test
mov
push
mov
lcall
fwait
push
test
shll
pop
mov
dec
push
pushl
sub
xchg
or
sub
push
sbb
pop
and
pop
stos
lret
xchg
inc
mov
bound
adc
imul
pushf
mov
or
jae
jno
lds
push
pop
dec
xchg
dec
dec
fdivs
mov
mov
pop
lds
or
pop
jae
rcll
cmp
inc
sbb
loop
mov
rcrb
dec
pop
adc
test
sbb
jecxz
xchg
insb
fisttpl
pop
imul
sbb
shlb
into
inc
pop
cmp
mov
test
cli
lret
jbe
xor
mov
shlb
aad
dec
or
mov
sub
sbb
jb
pop
cmpsb
pop
aaa
xchg
or
pop
push
test
pop
cmp
int
cwtl
lods
adc
push
insb
xchg
or
int
pop
pop
test
rorb
pop
sub
or
sub
xor
mov
das
sub
stos
mov
or
fcmove
add
fdivrs
popf
adc
and
adc
arpl
cltd
pop
les
pop
pop
mov
cli
sbb
mov
repz
lods
imull
add
in
outsl
push
fnstsw
dec
mov
push
loopne
pop
cld
pop
aaa
inc
xchg
add
jp
pop
mov
dec
in
fisubrl
mov
and
bnd
push
and
in
sbb
mov
sub
sbb
lahf
leave
add
imul
adc
jecxz
pop
jmp
pop
mov
adc
data16
fstps
xchg
xor
xor
shr
push
je
push
ja
push
add
pop
dec
sti
jge
in
adc
pop
and
and
int
enter
push
repz
jl
adc
fmull
frstor
dec
std
js
pop
call
and
stos
es
data16
cmp
push
push
arpl
push
mov
mov
xchg
pop
add
mov
ficomps
lds
pop
pop
sbb
jecxz
int3
add
pop
push
jge
scas
and
cmp
lea
jns
lods
stc
xlat
push
pop
hlt
mov
mov
xor
mov
fdivrs
or
js
pop
rcrl
dec
lret
outsb
lret
daa
pop
int3
aad
pop
mov
dec
sahf
out
cld
sbb
add
sbb
jo
shll
sbb
xchg
fnstsw
pop
adc
les
dec
loopne
add
sbb
repnz
dec
mov
pusha
fcoml
pop
movsb
or
mov
and
inc
fisubs
stc
pop
cmp
pop
push
jecxz
call
jge
mov
sub
fxch
hlt
or
inc
mov
and
sub
int
and
add
movsb
iret
pop
cmpl
inc
sub
pop
inc
lea
popa
iret
lret
pop
or
vpaddsb
dec
cmp
insl
mov
jns
jbe
jl
je
xchg
push
inc
jne
push
pop
pushf
fsub
push
sahf
xchg
lahf
incl
out
fmuls
mov
jle
lods
xchg
mov
movsl
pop
inc
pop
inc
notb
cmp
cmp
stc
vmovups
xchg
mov
stos
int3
pop
and
lods
dec
pop
jbe
outsl
and
pop
bound
imul
orl
add
cli
mov
sbb
jns
mov
data16
imul
insl
sbb
fnstenv
cmc
leave
in
pop
xor
movsl
lock
pop
sarb
cli
pop
gs
or
pop
fsub
pop
xor
sub
aad
es
dec
mov
cmpsl
adc
in
push
xchg
push
or
adc
js
cmp
jecxz
dec
xchg
stos
push
repnz
jb
ss
pop
mov
sbb
mov
ja
mov
push
push
in
test
pop
je
rcr
scas
stc
int
adc
cmp
hlt
mov
push
fs
in
mov
call
scas
rcll
pop
dec
lods
ljmp
or
jle
inc
pop
dec
cli
pop
lret
jb
inc
scas
scas
push
mov
sbb
mov
push
ds
pop
std
mov
fldenv
scas
xor
aas
fsubp
sbb
popf
stos
mov
mov
lock
pop
cltd
popa
pop
cmpl
xchg
pop
jno
jbe
out
dec
or
insb
push
add
mov
test
xor
aas
ja
pop
push
pop
jle
xchg
jecxz
stos
or
add
lahf
pop
enter
lea
daa
dec
ret
lods
add
jp
popf
in
adc
and
ds
inc
pop
leave
int
pop
mov
std
movsl
rorl
mov
ds
push
sub
pop
subb
iret
int3
inc
sar
dec
insl
loop
xor
into
xor
cmpsb
cmp
je
es
lea
push
in
pop
lcall
dec
pop
push
call
int
pop
or
xor
jo
lea
in
call
repz
and
negb
push
jg
fcompl
cwtl
icebp
cs
inc
pop
sbb
fldenv
dec
scas
test
pop
nop
and
mov
cs
pop
push
or
pminub
mov
movsl
dec
scas
mov
fisttpll
push
mov
and
adc
pop
mov
inc
test
xor
mov
cmpb
scas
xchg
mov
mov
sahf
cmp
lcall
int3
dec
inc
xchg
mov
jo
sub
mov
sti
lahf
test
test
jg
jmp
jno
lea
fsts
push
filds
pop
or
fsubs
xor
and
pop
inc
pop
push
out
sbb
adc
or
int
mov
out
or
pop
jb
add
mov
jecxz
fildl
fstpl
fisubrl
xor
pop
jno
sub
int
push
adc
cwtd
inc
ljmp
icebp
sbb
lods
pop
push
mov
in
sbb
arpl
imull
nop
pop
fsts
jne
inc
pop
int
sbb
xor
mov
popf
mov
loope
or
pop
mov
dec
cltd
push
icebp
sarb
cld
fldt
mov
mov
xchg
mov
lock
insb
pop
jno
pop
iret
pop
mov
jbe
dec
mov
cli
pop
inc
and
pop
test
loope
adc
pop
ret
int
stos
and
dec
dec
cld
aam
mov
fcompl
xor
in
es
xchg
jbe
or
lds
push
sahf
das
dec
lods
pop
adc
int
sub
fisttps
clc
xor
push
jbe
jo,pn
mov
cmp
lods
mov
mov
bswap
sub
stos
pop
cmc
push
inc
add
sbb
dec
lret
stos
arpl
pop
enter
sti
pop
les
out
xchg
fadd
sti
movsb
pop
xor
aas
lahf
imul
pop
fwait
jge
push
dec
pusha
int3
fstps
push
lods
out
jb
lret
mov
lea
fiaddl
in
cmp
ss
inc
je
mov
sbbl
out
rol
sbb
mov
dec
or
stc
cwtl
cmp
inc
fwait
js
push
and
ret
jcxz
xor
loop
imul
pop
push
leave
adc
pop
in
jp
cmp
sbb
mov
mov
test
in
filds
push
sbb
adc
mov
jecxz
xchg
iret
sub
mov
ss
pop
int
les
pop
mov
adc
mov
xlat
add
mov
sahf
cwtl
sti
and
pop
xor
popf
push
dec
js
xlat
pop
pop
mov
mov
push
jbe
decl
mov
popf
mov
pop
clc
xor
pop
cmp
or
pop
int
mov
out
pop
loop
rclb
jnp
xchg
push
stos
loopne
pop
sti
pop
repnz
lret
int
adc
mov
mov
cltd
pop
stc
cmpsb
dec
sti
jns
pop
call
in
inc
inc
mov
mov
repnz
mov
aas
sub
arpl
lahf
notl
ret
cltd
insb
jns
xchg
lahf
jo
push
cmp
icebp
inc
adc
xor
dec
inc
pop
test
adc
es
ss
test
adcb
cmpsl
push
test
sbb
sub
inc
fsubs
fwait
pop
cmpsb
hlt
popa
iret
adc
push
nop
pop
stos
std
imul
push
xchg
cmp
sub
dec
lds
scas
int
loopne
inc
fistps
pusha
pop
cltd
cwtl
dec
aaa
leave
lret
fisubl
jbe
insl
les
lea
pop
mov
lods
xlat
jecxz
scas
sbb
xchg
dec
cltd
in
outsl
in
pop
pop
aam
int3
cmp
sbb
nop
mov
or
sbbl
fsubrl
lock
adc
xor
sub
cmp
ja
imul
push
inc
xor
pop
inc
add
jb
int3
and
shrb
lds
jg
or
sub
push
and
push
or
pop
mov
mov
pop
xor
repz
stc
nop
adc
pop
mov
sbb
daa
cltd
add
pop
xor
idivb
jo
out
cmpsb
int3
mov
adc
xchg
or
scas
loopne
pop
int3
pop
pop
fsubp
mov
or
fisttpl
ret
push
mov
inc
pop
jo
push
hlt
pop
bound
pop
pop
ljmp
xor
sti
pop
push
mov
push
hlt
scas
inc
lret
push
add
mov
dec
lret
iret
push
pop
mov
push
xor
loope
daa
pop
in
pop
test
and
jmp
cmpsl
test
stos
cmp
scas
dec
lret
insb
scas
pop
inc
insb
xchg
ficoml
addr16
ja
cmp
xchg
mov
sub
and
outsb
inc
jno
aaa
sti
or
loop
mov
stos
jecxz
jle
adc
and
imul
es
pop
std
arpl
jnp
sbb
outsl
xor
pop
lods
aad
xchg
pop
leave
pop
sbb
adc
inc
js
mov
xchg
pop
int
and
fcompl
pop
sbb
sub
adc
mov
iret
fnsave
xor
cs
pop
std
mov
xchg
mov
int
lea
shrb
pop
clc
and
xchg
push
push
decb
mov
cmpsl
adc
loope
pop
add
in
mov
dec
idiv
pop
mov
push
cmp
pop
add
test
lret
jb
add
fnsave
or
push
inc
pop
insl
testb
sub
push
mov
rep
push
xor
ljmp
in
inc
pop
in
mov
sub
mov
ret
jo
pop
inc
sahf
or
mov
or
sub
enter
cmpsl
mov
jecxz
add
add
in
clc
sub
pop
leave
xchg
cmpsb
push
jmp
imul
gs
and
scas
fnstsw
cmp
lods
mov
push
pop
pop
sti
mov
aad
jg
add
pop
iret
adc
push
pop
push
jne
insb
cmpsl
fbld
int
sub
imul
idiv
lea
cltd
dec
pop
mov
mov
addb
dec
cmp
xor
or
or
or
cmp
push
push
xchg
pop
ja
cmp
push
pop
pop
jbe
jns
test
sub
pop
sarb
not
aad
jo
mov
and
ret
aam
dec
lahf
sub
mov
lahf
mov
inc
in
mov
pusha
jecxz
mov
or
mov
pop
jp
xlat
jae
jmp
fisubrl
pop
popf
sti
lods
sub
fiadds
cmp
push
xchg
dec
pop
or
shlb
xor
adc
cltd
push
jg
and
jb
mov
dec
pop
sti
std
cmp
adc
pop
icebp
fwait
push
sbb
pushl
push
pop
int3
jo
mov
int
rcr
imul
sbb
pop
inc
xchg
jns
add
mov
pushl
sub
lods
and
add
adc
pop
mov
mov
loopne
jns
inc
and
mov
stos
pusha
xchg
sub
sub
pop
pavgb
cmp
aam
pop
inc
int
rorb
mov
addb
xchg
int3
ds
inc
iret
xor
lret
dec
mov
jge
xor
clc
sbb
or
inc
sbb
arpl
pop
and
je
sbb
sbb
sub
xchg
lret
mov
mov
mov
movsb
dec
mov
out
insb
add
stc
sahf
xchg
lret
xchg
mov
arpl
dec
es
outsl
pop
mov
xorl
sub
mov
pop
or
or
cmc
sbb
cli
inc
test
push
xchg
popf
jno
push
add
inc
pop
jns
and
sbb
pop
jmp
lea
fstpl
fcompl
adc
std
fldcw
jb
mov
jmp
xchg
pushf
iret
mov
je
mov
xchg
pop
mov
jg
fcoml
pop
xchg
xchg
shrl
adc
negb
sbb
jnp
mov
and
cmp
pop
xchg
mov
sti
mov
repz
adc
pop
hlt
pop
push
pop
test
inc
push
fidivl
pop
or
mov
mov
imull
outsl
and
xchg
aad
fcoml
xchg
lcall
pop
sbb
pop
cmp
mov
add
negl
jp
pop
pop
xor
rcrl
mov
xchg
cli
jns
cwtl
pop
pop
hlt
popfw
push
sbb
lret
mov
jno
cmp
xchg
dec
jne
aad
mov
iret
inc
mov
cmp
and
and
pop
jnp
push
sbb
dec
fnstsw
and
arpl
mov
dec
cmp
stos
in
gs
xor
addl
sub
push
jp
jmp
gs
cmpsb
je
inc
rclb
xor
mov
test
xchg
push
mov
fstp
out
fsubl
xchg
mov
test
mov
pop
sbb
pop
cmp
and
xor
mov
pop
jns
sub
xadd
adc
pop
stc
iret
pop
and
pop
or
dec
orb
sbb
sbb
dec
enter
pop
pusha
jle
and
stc
bound
xor
mov
pop
sahf
and
scas
pop
pop
mov
xor
pop
in
popa
sti
adc
call
lods
popa
mov
fs
or
jmp
jge
mov
divl
and
pop
pop
lods
pop
popf
push
xor
mov
dec
or
pop
shrl
mov
pop
pop
push
scas
sub
pop
dec
mov
lods
sub
data16
stc
loop
add
int
and
cmpsl
sbb
mov
pop
scas
ds
inc
xchg
sub
mov
or
test
addl
popf
and
das
movsl
shl
pop
sub
jb
aad
xchg
mov
mov
pop
loop
out
data16
scas
je
push
lea
sub
ficoms
mov
xchg
adc
jbe
orb
mov
dec
mov
roll
xchg
insl
and
push
jecxz
adc
into
inc
adc
mov
dec
pop
sti
lea
push
dec
pop
push
leave
cmp
pop
mov
jne
jae
stos
insb
jb
outsb
bound
add
jg
arpl
xchg
ds
mov
sti
push
iret
pop
cli
and
fldl
push
sbbl
adc
cmpsb
xchg
fdivl
cmp
pushf
sub
in
sub
fildl
and
xor
mov
fstl
insl
mov
jmp
hlt
cmpsb
lods
inc
mov
pop
scas
xor
cmp
pop
mov
pop
sub
or
jo
andl
push
cmpsl
pop
add
sbb
fdivrp
mov
repz
cmp
mov
pop
stos
adc
ficompl
sbb
fldl
divb
xchg
sub
lock
in
lret
aas
mov
sbb
or
xor
push
sbb
dec
pop
cmp
scas
pusha
pop
sbb
mov
jnp
imul
dec
insl
enter
and
arpl
mov
fs
divb
adc
pop
js
mov
scas
fwait
mov
jns
and
jns
sbb
int
add
inc
inc
fnstsw
repz
push
or
clc
xchg
sub
rcrb
inc
dec
je
fistps
inc
fistl
scas
push
mov
lret
popa
mov
dec
je
push
sbb
mov
pop
push
inc
lods
shll
out
mov
cld
sahf
imul
and
and
js
pop
inc
push
mov
xchg
add
mov
std
cmp
xchg
mov
jae
lods
or
pop
jge
aad
jb
scas
pop
lods
and
or
call
mov
addb
push
mov
popf
and
push
mov
test
aad
mov
or
xchg
jb
ficoml
out
mov
lods
mov
fsubrs
xchg
pop
and
lock
call
insl
lods
scas
out
xchg
scas
dec
mov
gs
push
sub
jo
jl
xchg
mov
dec
fstl
add
push
cld
pop
mov
frstor
pop
iret
sahf
mov
ficoms
add
ret
aam
addr16
xchg
fdivs
mov
int
mov
dec
and
aaa
dec
pop
inc
xor
pop
cmp
inc
fmul
clc
pop
ljmp
mov
fisttpl
fisttpll
sbb
dec
add
inc
jo
insl
pushf
shr
repz
inc
pop
push
mov
testb
ja
aas
mov
movsl
int3
scas
lea
clc
nop
push
add
xor
or
jbe
pop
lods
in
jge
nop
mov
dec
fsubs
daa
mov
cli
pushf
sbb
jmp
fs
dec
push
scas
ficompl
pop
roll
jp
fadds
push
pushf
pop
sar
xorb
cmp
mov
pop
or
mov
pop
or
rolb
xchg
mov
pop
push
cmp
clc
inc
and
lret
adc
xchg
lret
mov
or
pop
mov
mov
xchg
xor
cmpsb
lahf
pop
and
addr16
mov
arpl
pop
or
push
jbe
leave
jmp
dec
add
test
data16
rclb
pop
out
jns
jne
sub
cmpsl
and
leave
sub
inc
pop
in
mov
fs
push
andb
xchg
stos
pop
lds
add
adc
or
das
clc
pop
jne
sbb
cmpsl
arpl
repnz
cli
dec
negl
cmpsb
subb
or
cmp
mov
pop
sarb
pop
lds
dec
jmp
mov
icebp
ss
push
imul
ds
sbb
in
sub
add
xchg
lds
bound
inc
mov
dec
sti
arpl
or
stc
lcall
adc
addr16
push
pop
dec
sahf
push
xchg
imul
movl
xchg
scas
ret
or
mov
mov
or
xchg
dec
arpl
rcr
lea
test
stos
iret
add
jle
lds
es
movsl
sub
addr16
jecxz
das
push
mov
push
ficoml
daa
adc
add
xchg
out
andl
add
mov
mov
ret
mov
sahf
push
jl
fistl
pop
push
and
mov
pop
jnp
cmp
adc
ret
and
xor
cmp
testl
movsl
ret
cmp
pop
fs
jbe
xor
nop
sub
into
pop
and
jecxz
mov
pop
in
sub
scas
aaa
mov
pop
addl
push
pop
pop
jge
and
addr16
adc
sub
mov
das
push
shll
push
push
sbb
mov
lds
pop
js
in
pop
out
lcall
pop
and
cmp
jle
fldl
test
fs
xor
xchg
xchg
int3
loopne
jo
pop
ret
and
pop
dec
or
add
mov
mov
lods
xlat
adc
ret
cmp
data16
enter
adc
int
lcall
aaa
jo
mov
cltd
push
cwtl
scas
sub
scas
mov
mov
pushf
addr16
jle
mov
lcall
insl
adc
imul
mov
aaa
mov
sub
cmp
pop
push
adc
and
ret
jmp
pop
sbb
or
std
int
loopne
and
in
cwtl
dec
push
jge
mov
dec
adc
sahf
jecxz
lahf
push
cmp
push
push
jnp
rcrl
lds
cmp
cmpsl
pop
push
cmp
pop
dec
pop
movsb
pop
add
push
xorb
mov
fs
and
xor
cli
jno
mov
scas
cwtl
pop
iret
in
jg
out
jp
sub
pop
shrl
inc
pop
scas
andb
es
mov
daa
adc
xor
cmp
push
and
pop
in
lret
stos
int
inc
mov
js
xchg
into
adc
ljmp
or
data16
mov
mov
pop
iret
shlb
lock
les
xchg
int
gs
scas
call
cwtl
dec
lret
adc
insb
lods
inc
or
jge
out
enter
pop
cli
loopne
popa
mov
add
int
jns
imul
dec
cs
std
pop
push
push
cmp
sub
sub
es
xchg
mov
sbb
aas
or
les
and
pop
mov
dec
out
and
cli
or
not
inc
jae
dec
popf
mov
pop
arpl
in
lret
dec
nop
cmp
push
stos
sbb
xor
int
cmpsl
data16
ficoml
scas
jmp
or
cmpb
in
lock
pop
lcall
inc
imul
rcrl
mov
push
pop
arpl
inc
std
int3
je
jp
sub
dec
or
lahf
inc
pop
push
push
pop
mov
pop
cmc
bound
pop
int3
pop
push
xchg
dec
das
sti
xchg
aad
cmp
or
roll
ljmp
mov
jecxz
ss
pop
mov
xor
sub
mov
xchg
insb
js
loop
jecxz
into
jp
push
xor
sti
jb
pop
fnsave
xchg
pop
insl
int
mov
arpl
xchg
je
jmp
out
stos
scas
int3
insb
sti
cs
mov
adc
xchg
shl
filds
cmp
dec
and
pop
rclb
push
movsb
pop
fptan
and
test
xchg
mov
mov
stc
scas
aaa
out
or
jecxz
mov
cmp
mov
loope
push
push
sbb
ret
or
shll
xchg
nop
mov
stos
adc
int3
pop
inc
imull
jbe
shll
pop
xor
cwtl
inc
pop
push
push
jne
add
fisttpll
mov
jbe
xchg
jge
mov
cs
int
fcmovbe
jae
sub
xlat
pop
leave
scas
add
push
jl
and
lods
repnz
mov
and
push
ficoms
pop
mov
test
sbbb
inc
ljmp
cmpsl
pop
xchg
daa
fcomps
pop
mov
or
arpl
mov
dec
icebp
inc
outsb
clc
sbb
jmp
or
movsb
jbe
push
inc
or
lret
sub
xor
inc
jle
xorl
mov
jg
xchg
sub
jl
adc
jbe
xchg
ret
xchg
icebp
push
sbb
push
cmpsb
cltd
jecxz
rorb
mov
movsl
jg
popa
mov
push
fcompl
pop
fcmovnb
stos
mov
inc
push
dec
push
pop
jb
ds
insl
sub
mov
pop
pop
sbb
ror
bound
and
ficompl
scas
fwait
movsl
sub
pop
cmpsb
or
pop
mov
inc
out
jns
pop
sbb
testl
int3
mov
push
cmp
xchg
sub
sbb
pop
jno
test
rclb
push
pop
dec
adc
mov
jbe
pop
inc
lock
push
iret
stc
and
and
sub
stc
jne
sbb
in
dec
lock
inc
lods
pop
cmp
bound
mov
lods
mov
int
and
loope
outsl
daa
pop
lods
jno
pop
mov
cwtl
gs
movsb
int3
sub
pusha
sbb
jp
jae
pop
push
pop
cmpsb
fs
dec
xor
pushf
rorb
xor
popa
push
sub
lds
rcrb
and
add
pop
stc
shl
aam
pop
fs
jb
lcall
lods
iret
lret
jnp
test
pop
ljmp
icebp
pop
mov
lods
cli
mov
addr16
les
cwtl
lahf
sbb
pop
jge
push
dec
mov
pop
idiv
push
adc
inc
fldcw
add
scas
and
mov
mov
jl
daa
fisubrs
pop
lret
and
cmc
jo
pop
mov
mov
lods
push
cmp
bound
mov
je
mov
xor
pop
xor
push
stos
aaa
pop
sub
push
pop
cmp
jg
pop
into
push
in
adc
mov
cli
scas
sarl
in
mov
sti
inc
repz
pop
or
pop
pop
and
mov
adcb
jne
dec
pop
pop
jbe
mov
ss
pop
add
dec
aaa
popf
pop
out
cli
xchg
adc
lcall
or
ret
pop
jecxz
add
push
pop
xchg
inc
sub
cmp
jp
push
jp
pop
popf
insb
out
push
pusha
mov
add
mov
cwtl
add
fcmovu
push
scas
lret
push
inc
mov
xor
sub
fdivrs
sub
pop
jbe
or
mov
push
cltd
or
subb
gs
int3
loope
mov
ds
addr16
jmp
out
inc
adc
mov
jecxz
pop
mov
xchg
daa
test
jb
xchg
and
pop
loope
pop
pop
lcall
out
pop
pop
les
testl
addr16
lahf
or
push
insl
sub
xchg
xchg
mov
dec
add
fcompl
pop
xchg
sbb
and
mov
std
mov
pop
mov
dec
xchg
repz
add
pop
out
cmc
loopne
jge
pop
out
int3
aas
rcrb
mov
jecxz
push
sbbl
sub
and
mov
andb
fnstenv
sti
sbb
loope
pop
mov
fwait
mov
push
out
xlat
jbe
into
mov
test
jo
mov
pop
popa
adc
inc
xchg
sbb
scas
push
push
clc
lods
mov
pop
pop
imul
xor
mov
push
sbb
lds
repz
push
jp
out
outsb
mov
sub
pop
arpl
mov
lret
dec
adc
int3
cmp
mov
out
xchg
sbb
dec
jae
loopne
test
popf
rcrl
js
popf
cmp
mov
popa
std
mov
mov
jbe
pop
nop
mov
test
jecxz
pop
insl
loopne
stos
sub
or
lret
add
roll
pop
pop
ja
jecxz
dec
lods
xchg
jmp
and
mov
outsl
enter
gs
fidivs
int3
mov
lcall
in
insb
push
jns
xchg
mov
cmpsb
mov
sahf
jne
push
leave
xchg
mov
sti
and
jmp
add
popa
pusha
iret
int
ds
popl
sub
xor
xor
fucom
add
lret
push
inc
test
pop
pop
inc
pushf
dec
xchg
jg
cmp
xor
lea
inc
mov
add
pusha
sub
std
out
mov
jecxz
cmc
dec
pop
nop
in
pop
mov
ds
jns
lea
pop
repnz
in
push
jae
xor
jbe
loop
cmp
fucomi
dec
lods
dec
pop
and
cld
and
mov
icebp
jne
jns
fildll
out
mov
ja
xor
mov
in
aam
jno
jmp
cmp
mov
inc
fnstenv
rcl
inc
scas
push
shll
outsb
out
das
pushf
pop
dec
xchg
fcmovbe
xchg
fidivrs
subb
sbb
pop
mov
mov
pop
lods
mov
dec
xchg
mov
fs
pop
lods
push
fistps
push
mov
sub
fdivp
fisttpl
sub
cmp
ja
pushf
add
pop
imul
xchg
jo
mov
stc
fmulp
scas
xchg
cmpl
pusha
pop
inc
sbb
mov
cltd
and
jns
sub
pop
adc
dec
stc
cmp
in
into
int
inc
jl
lahf
js
test
fndisi(8087
push
or
push
pop
imul
cmp
insb
pop
cld
bound
fcoml
int
fsts
in
arpl
mov
xchg
mov
push
in
sub
pop
mulb
inc
loope
nop
or
cli
rcr
pop
xchg
aas
add
sti
pushf
lds
clc
adc
pop
sub
sub
pop
cmc
push
pop
lods
out
ja
cmp
and
and
push
pop
divb
loopne
out
xchg
jnp
adc
dec
sbb
pop
dec
lods
or
fnstsw
int
inc
movsl
push
scas
push
xor
fcom
fstpt
sbbl
and
mov
pop
int
jb
shl
aas
xor
dec
addr16
jno
es
sub
fisubs
aas
and
mov
fdivrs
in
mov
pop
pop
and
leave
sbb
xor
push
adc
push
jo
add
loope
mov
jo
mov
fwait
lods
cmp
xchg
sub
shll
jecxz
or
adc
pop
cli
addl
mov
in
rcrb
add
fs
pop
cmpsb
in
movsb
cmp
int
pop
inc
jle
sbb
push
adc
lahf
mov
fldenv
orb
pop
pop
out
push
jle
loope
pop
dec
or
lods
mov
add
jae
jmp
mov
mov
fldcw
cmp
pop
hlt
imul
pop
jne
mov
cmpsl
pop
lcall
inc
pop
int
lahf
nop
push
ja
sub
sub
xchg
std
and
int
movsl
dec
mov
mov
repnz
add
adc
in
aas
sbb
pop
pop
mov
xchg
jmp
jno
test
push
bound
jle
lahf
cmp
test
sub
mov
adc
sar
ja
jl
pop
int
push
aad
xor
aas
xorb
add
mov
shll
or
pop
push
xor
pop
fcmove
stos
push
and
inc
cltd
pop
bound
cmp
jbe
rcll
pop
xor
mov
cmc
mov
pop
ljmp
sbb
fistpl
cld
je
sbbl
add
rorb
pop
adc
xchg
xor
pop
out
arpl
sub
sbb
xchg
ret
stc
lea
int3
jecxz
jecxz
sbb
xchg
insb
test
pop
leave
xor
pop
leave
xor
mov
xchg
dec
jne
dec
nop
xchg
sub
pop
jae
js
and
fsub
pop
mov
clc
adc
jo
mov
imul
push
out
lahf
in
fadds
fistl
jmp
xchg
sbb
xlat
or
mov
repz
pop
sbb
sbb
outsl
scas
adc
scas
mov
aaa
mov
std
sbb
push
mov
jl
sti
jbe
cmp
xorl
lods
lret
pop
ljmp
pop
movsl
adc
scas
sub
lods
jno
sbb
and
test
jnp
dec
pop
adc
int
jne
pop
jmp
dec
cmp
lret
mov
mov
mov
popa
imul
mov
scas
sbb
xor
sub
mov
adc
cmc
push
pop
add
in
cs
out
cmpsl
test
mov
xor
shlb
shll
addr16
mov
cwtl
rolb
sti
loope
or
movnti
mov
mov
fisttpll
push
dec
pop
pop
xor
arpl
push
int3
rep
mov
lret
sbb
cmp
push
mov
je
mov
mov
fstps
mov
imul
hlt
xchg
dec
adc
xor
and
mov
pop
in
ret
fildll
jge
xchg
sub
pop
pop
int3
test
roll
or
sub
lods
mov
add
sub
inc
je
test
or
mov
fsubr
pop
push
mov
xchg
pop
adc
lea
std
ret
jbe
pop
inc
outsl
jns
lret
enter
cmpsb
push
cmp
pop
es
popf
add
dec
push
imul
push
shlb
dec
push
pop
xchg
mov
dec
int3
hlt
pop
pop
cmpsb
adc
jae
lahf
bound
test
inc
add
cmc
incb
mov
pop
jo
cmp
into
mov
in
jbe
and
dec
sti
inc
jo
pop
ja
int
out
addr16
repnz
xlat
pop
adc
push
loopne
sbb
mov
pop
inc
mov
popa
imulb
inc
outsl
jbe
ss
inc
cmp
or
inc
add
dec
pop
aam
or
pop
jo
jecxz
pop
and
pop
popf
sbb
adc
and
sbb
pop
cltd
sub
push
inc
mov
push
pop
in
sub
jb
mov
xchg
movsb
push
mov
add
in
out
xor
sti
out
into
hlt
cld
sbb
xchg
adc
xchg
dec
lahf
lahf
enter
jns
sbb
pop
cmp
inc
add
movsl
ss
cld
xor
decb
inc
fadds
jbe
out
ljmp
inc
enter
push
dec
ret
lea
pop
int3
xor
outsl
sub
pop
inc
cmpsb
sub
pop
adc
mov
xchg
mov
push
loop
pop
rorb
in
bound
mov
lret
pop
outsl
dec
fwait
imul
xor
xchg
sbb
dec
jae
call
scas
mov
js
in
fwait
jbe
mov
mov
imul
sub
or
adc
fcomi
js
sbbb
sub
pop
jb
and
sub
jp
out
pop
inc
and
sub
sahf
lds
sub
insl
divl
mov
cmp
and
xor
jl
pop
and
sbb
pop
les
loope
jb
ss
pop
hlt
int3
or
push
out
sbb
cmp
add
jle
scas
jae
xor
pop
fwait
lods
pop
pop
add
push
cmp
add
in
xchg
outsb
int
out
cmpsb
lods
loope
aaa
pop
xchg
lahf
fs
out
fisubrs
mov
sarl
mov
push
and
mov
call
popf
cmp
push
pop
jae
inc
sub
repz
sahf
pop
sbb
fidivl
mov
aas
jnp
aad
mov
pop
sub
pop
sbb
fcomip
mov
jg
push
out
pop
mov
leave
jo
mov
loope
push
pop
fsub
stos
or
pop
and
xchg
fdivrs
cli
push
lcall
int3
gs
sbb
out
adc
mov
movl
mov
faddl
xchg
test
push
fisttpl
clc
jg
push
xor
inc
jb
mov
pop
push
cltd
fstps
sub
pop
testl
xchg
jecxz
mov
lods
cmpsl
push
dec
imul
pushf
ret
data16
jmp
out
pop
mov
dec
vcvtpd2psy
movsb
stc
push
js
dec
mov
in
jle
mov
push
insb
sbb
pop
mov
scas
and
mov
adc
aam
sbb
sar
mov
jns
pop
ja
repnz
rolb
lahf
jecxz
mov
imul
xchg
xchg
gs
xchg
xchg
pop
pop
popf
jg
loop
out
lcall
or
add
pop
iret
mov
repnz
xor
test
jne
cmp
cmp
sbb
pop
adc
lahf
and
or
mov
push
mov
inc
push
push
sti
shlb
in
ficoml
xor
sub
clc
pop
clc
cmp
pushf
lahf
cld
iret
mov
push
pusha
xlat
pop
jge
and
decl
pop
push
or
pop
mov
data16
jnp
ret
test
popf
out
sbbb
andb
push
cmp
pop
and
jo
lahf
dec
pop
and
xchg
jbe
adc
and
mov
outsl
scas
pop
inc
xlat
mov
push
rcr
inc
scas
ja
mov
and
push
add
jbe
call
stos
pop
cmp
mov
out
dec
mov
push
enter
mov
mov
aaa
pop
stos
sub
mov
mov
pop
dec
push
push
sbb
pop
jbe
dec
shll
mov
aad
int
mov
mov
fdivrs
in
scas
cmc
xchg
push
sahf
insl
repz
bound
lds
sbb
movsb
pop
jmp
pop
dec
xor
pop
ror
stos
insb
mov
adc
mov
xchg
inc
jns
repz
mov
adc
scas
sbbb
cmp
xor
cmc
jge
shrb
lods
and
sbb
ret
std
and
sbb
pop
jbe
mov
sub
scas
push
xchg
mov
pop
xchg
push
lods
mov
or
mov
and
inc
rorb
je
sub
dec
xchg
sbb
pop
test
and
sbb
xchg
out
pop
sbb
add
fisttps
sbb
jmp
pop
jnp
out
dec
inc
cltd
lods
xor
sbb
sahf
ficoml
mov
sbb
and
repz
xchg
fnstsw
xchg
scas
pmulhuw
jb
nop
cmp
ret
cmp
into
mov
pop
jecxz
adc
fistpll
hlt
pop
les
pop
mov
mov
notb
dec
imul
add
inc
pop
mov
in
add
inc
or
pop
cmp
cmp
scas
imul
add
pop
push
adc
jo
aas
pop
test
jp
pop
lret
fisttpll
dec
cld
fstpt
movsb
xchg
loop
pop
test
cli
jbe
jb
or
fnsave
int
out
out
shl
divl
or
push
pop
or
data16
mov
cmp
bound
in
negl
arpl
jo
scas
push
pop
aam
fcmove
jg
inc
int
mov
cmpsl
pushw
fstp
jbe
pop
lahf
pop
sbb
sub
inc
das
pop
xchg
push
ds
mov
dec
xchg
aad
fdivl
sub
arpl
xor
adc
pop
in
fwait
mov
adc
ss
jo
jns
cmp
fimull
xchg
ja
ret
push
jo
adc
dec
scas
sub
shrl
jns
pop
mov
pop
addl
iret
pop
xor
mov
jno
stc
cmpsl
pop
int
pop
jmp
aad
sbb
popa
shlb
adc
sub
sahf
mov
rcrb
jge
cmp
pop
pop
mov
dec
mov
loope
mov
add
and
lea
push
sbb
jp
add
and
mov
push
pop
insb
andl
pop
icebp
or
sbb
dec
add
fnstenv
jle
in
inc
pop
sbb
in
int
ja
pop
pop
in
cmp
stc
mov
pop
and
ds
and
sub
or
xchg
aas
dec
pop
fwait
or
jle
pop
sub
or
jbe
jmp
fcmove
jg
inc
icebp
xlat
xchg
pop
xchg
xchg
xchg
push
fs
pop
imul
cmp
inc
sbb
mov
ljmp
jb
fcomps
gs
stos
and
fnstcw
pop
sbb
or
rcr
movsb
int3
sub
mov
stos
push
cmp
pop
imul
movsb
add
fmul
fnstcw
sbb
or
jb
mov
fidivrs
mov
adc
stos
push
mov
aad
fcomps
in
inc
or
mov
test
shlb
or
push
loope
pop
push
push
in
mov
pop
out
hlt
pop
or
mov
rcrb
aad
push
jnp
stos
pop
and
sbb
pop
cmp
pop
test
xlat
pop
stos
inc
push
loopne
mov
gs
pop
hlt
jne
int
pop
into
xor
sub
cmp
lock
dec
cmp
push
pop
test
pop
and
scas
sbb
shlb
push
cwtl
jno
lcall
popa
addl
js
lret
pop
iret
inc
mov
mov
leave
pop
lea
lods
aas
sub
or
or
xlat
out
lcall
insl
or
jp
push
jnp
je
push
lahf
js
jge
out
add
mov
dec
xchg
loopne
in
adc
or
pop
rol
and
es
mov
stos
fldenv
les
repz
clc
es
scas
fnsave
test
testl
addl
jecxz
mov
fdiv
mov
negl
mov
dec
pop
pusha
sbb
aad
mov
fisttpll
jbe
popf
sub
and
jl
inc
pop
stos
pop
in
std
xchg
adc
cmp
add
pop
adc
enter
lods
or
xchg
sahf
mov
int3
stc
adc
or
adc
dec
pop
xchg
xchg
jb
and
pop
sbb
adc
lea
mov
pcmpeqd
and
stos
fmuls
int3
mov
pop
push
inc
popf
sub
and
cmp
pop
insl
stos
ja
pop
push
in
sub
xchg
arpl
in
cld
fcoms
xorb
mov
jp
pop
push
pop
addl
and
fucomp
xchg
pop
mov
and
mov
cmp
cmp
push
test
dec
add
jl
pop
inc
lock
loope
js
je
rcl
sbb
xorl
mov
stos
pop
ss
sub
std
pop
decl
xchg
rclb
repnz
iret
out
push
pop
mov
mov
enter
int3
rcll
adc
fstpt
sbb
mov
insl
sbb
add
call
inc
dec
pusha
pop
inc
push
jmp
sbb
mov
xchg
inc
pop
ja
movsb
fisubs
pop
jle
stc
cmp
mov
pop
jl
ja
sub
push
pop
push
and
mov
jbe
add
mov
jno
xor
mov
pop
mov
pop
xchg
out
cmp
jg
loop
mov
mov
sub
sub
xorb
ret
and
lcall
outsb
notb
xchg
inc
pop
jo
lock
jb
jnp
push
out
enter
mov
mov
pop
jecxz
addr16
mov
jns
and
cmp
cld
inc
jnp
jbe
pop
rorl
out
pop
xchg
cmp
cwtl
pop
mov
outsb
aaa
adc
cli
push
push
lods
mov
pop
sbb
fisubrl
pop
or
and
mov
pop
mov
hlt
data16
fadds
push
mov
les
sbb
jb
mov
sub
xchg
int3
sub
mov
dec
das
pop
pop
add
adc
xchg
sbb
cmp
aas
pop
xchg
mov
loope
add
push
test
xchg
mov
xlat
ljmp
and
aam
arpl
sub
xchg
push
pop
std
dec
fidivl
push
xlat
sub
fnstsw
out
pushf
imul
xor
and
xchg
adc
lret
pop
je
mov
pop
xlat
dec
int
cmp
sbb
mov
cmp
fistl
lahf
jle
in
fcom
and
xchg
pop
test
adc
push
inc
nop
cltd
xchg
dec
mov
jbe
cmp
push
sbb
adc
fxch
ret
xchg
rcrl
inc
pop
hlt
xchg
mov
lret
scas
adc
loop
mov
das
pop
stc
mov
aas
mov
into
mov
mov
andb
push
repnz
int3
dec
sbb
je
into
mov
pop
outsl
int
lret
add
dec
and
jns
in
push
es
aaa
pop
ret
mov
mov
jmp
mov
les
loopne
repnz
sti
push
jo
popa
sub
mov
aaa
cwtl
mov
or
fscale
cltd
jno
lea
xchg
pop
xor
loope
stos
cmc
xor
out
mov
jne
negl
stos
sub
lods
or
sbb
sub
arpl
push
dec
int3
xor
sbb
ss
jb
xchg
dec
mov
and
popa
sbb
imul
arpl
pop
dec
mov
and
jo
sbb
movsl
iret
pop
jp
lea
sbb
pop
out
imulb
inc
pop
int
push
inc
push
mov
sbb
push
sbb
sub
push
out
fwait
sub
jle
mov
adc
push
call
shlb
sub
mov
push
dec
or
enter
hlt
js
jle
mov
pop
adc
fldlg2
dec
insb
or
sbb
in
jl
ret
daa
push
cmc
pop
in
jmp
stc
leave
pop
pop
mov
pop
pushf
addr16
pop
fs
mov
test
pop
adc
les
add
sub
mov
adcl
cmp
push
arpl
pop
lds
sbbl
andb
arpl
adc
cld
pop
add
push
sahf
or
incl
jae
mov
dec
adc
push
js
pop
xchg
in
jge
andl
pop
mov
inc
pop
add
daa
mov
out
dec
push
sbb
test
and
call
repz
rcll
ds
scas
mov
lock
inc
pusha
mov
hlt
or
addr16
sahf
jl
push
dec
mov
inc
pop
mov
jbe
pop
mov
sbb
enter
subb
ret
mov
xchg
pop
test
xchg
sub
cltd
push
xchg
pop
pop
int3
mov
movsb
jmp
jbe
xchg
jl
push
dec
push
pop
std
xor
call
jg
and
push
popf
jge
and
sbb
jb
and
mov
sub
sbbb
clc
enter
std
aaa
sbb
inc
push
mov
imulb
out
inc
pop
push
push
jmp
mov
push
in
outsb
sub
mov
jno
and
ja
xchg
xchg
cmp
pop
pop
sbb
cmp
jns
int
mov
pop
xor
or
sbb
data16
pop
int3
imul
pop
jb
mov
int
cmp
fimuls
fsubs
dec
mov
sarl
xor
aas
int3
ds
pop
test
loope
jnp
jno
or
and
nop
sub
pop
movsb
dec
cld
repz
dec
je
or
xor
jne
adc
mov
pop
fnstsw
inc
inc
aas
pop
insb
sub
pop
into
and
outsl
aam
or
outsb
arpl
jge
idivl
scas
shll
sub
cwtl
subl
mov
add
sbb
sbb
outsl
lret
pop
test
sbbl
pop
loop
pop
jb
shrl
adc
mov
data16
fimull
iret
lds
cli
bound
in
inc
pop
dec
sahf
cmp
mov
out
mov
xor
jecxz
lods
cltd
pop
cmp
pop
dec
push
push
push
es
fstps
sub
push
cmpl
int3
test
pop
xlat
push
test
mov
cmp
pushl
xor
pop
aam
push
mov
clc
scas
dec
cmp
push
jle
pop
xor
in
dec
pop
pop
repz
scas
xchg
int
jo
aas
add
xor
shll
je
fisubl
insl
xor
outsb
pop
xchg
sub
stos
xchg
push
adc
pop
mov
cmpb
pop
daa
in
pop
sub
rcrl
lea
sbb
dec
pusha
lods
hlt
and
insl
pop
roll
in
and
jl
pop
and
std
out
mov
xor
jae
xchg
mov
daa
add
cmp
fidivrs
fistpl
pop
cmp
inc
inc
push
mov
mov
cltd
dec
fistpl
out
mov
pop
clc
jmp
popa
es
scas
cmp
sbb
pop
je
adc
cli
jmp
sbbb
inc
add
lea
insl
jecxz
shrl
insb
pop
mov
sub
in
pop
cmp
jp
std
aad
push
ljmp
pop
pusha
sub
lahf
orb
aad
pop
insb
cmpsb
imul
dec
xor
add
loop
or
aas
inc
xor
cmp
and
movl
insb
pop
inc
push
mov
jb
pop
test
fdiv
cmc
sbb
aad
mov
imul
ret
mov
mov
sub
xchg
cld
leave
jns
pop
fwait
jbe
inc
jmp
stos
mov
add
add
fisubs
fsubrl
bound
mov
jbe
loopne
popa
pushf
out
test
jge
int3
dec
dec
push
xchg
or
int
pop
jne
mov
fs
movsb
xchg
ficompl
pop
lock
xchg
test
aad
pop
lea
mov
frstor
adc
or
pusha
xor
ret
pop
into
loope,pn
in
mov
cmpsb
js
ja
fidivl
jbe
das
mov
or
aaa
clc
shrl
pop
push
xorb
paddusw
test
dec
add
popa
jae
mov
aad
pop
pushf
add
sbb
rcll
inc
out
lods
pop
or
jbe
fsts
sub
out
mov
jbe
lods
inc
mov
aad
orl
sbb
inc
pop
xorb
int
xor
inc
xchg
bound
mov
jl
cmc
andb
cmp
pop
std
xor
pop
jle
or
out
lea
and
int
aad
shlb
xlat
push
jo
out
inc
dec
pop
jecxz
xor
push
jbe
push
sub
cmp
mov
ss
enter
pop
adc
cmpsl
pop
xor
fsts
repnz
adc
dec
mov
gs
adc
pop
or
xchg
inc
nop
cli
inc
lahf
iret
ret
fistpl
jecxz
mov
add
mov
sbb
xor
sbb
in
sbb
dec
mov
loope
or
ja
nop
xchg
adc
mov
pop
out
aaa
jno
fwait
dec
bound
ljmp
xchg
pop
fs
jle
jne
push
inc
cli
lret
push
in
inc
call
sbb
push
std
sub
insl
mov
push
stc
sar
int3
scas
fstl
mov
or
popf
stc
loop
jg
xchg
mov
dec
cmp
pop
pop
std
mov
jb
je
dec
xchg
pusha
sti
pop
stos
push
xchg
fucomp
dec
ret
out
vmread
push
hlt
lahf
sbb
aas
xor
pop
lret
mov
fnstsw
xchg
shr
lea
or
dec
adc
pop
and
fdivl
push
rolb
jge
lock
sub
xor
imul
sub
pop
outsl
ljmp
mov
jle
fwait
mov
xchg
push
dec
movsb
popf
pop
sub
inc
mov
or
pushw
int3
dec
and
cmpsb
and
int
pop
enter
jb
lret
mov
pop
mov
pop
int
cmp
dec
mov
jl
cmpsb
pop
cli
xor
inc
pop
mov
pop
sbb
jmp
aas
jecxz
pushf
jb
dec
mov
mov
mov
mov
jmp
sbb
cmp
pop
pushf
add
in
ror
push
jmp
adc
pop
ljmp
stos
jns
pop
dec
mov
test
push
andl
sub
xor
inc
pop
dec
mov
out
mov
outsb
dec
jmp
popf
sub
dec
mov
clc
test
lret
jne
or
loopne
int3
sbb
and
in
or
mov
jo
or
cli
frstor
cmp
lahf
inc
xor
sbb
or
mov
xchg
and
push
nop
pop
jp
sbb
jmp
fdivl
cwtl
inc
ljmp
movsb
mov
mov
aam
mov
jno
mov
dec
adc
fisubs
scas
cmp
stc
lcall
imul
fistps
jo
mov
mov
add
mov
jbe
pop
hlt
sub
data16
inc
xchg
jl
or
pop
pop
mov
dec
push
popf
pop
mov
mov
xor
repz
int
pop
movsb
insl
js
std
adc
out
loopne
jl
mov
mov
dec
pop
cmpsl
stos
jo
xchg
push
add
cmc
loopne
pop
leave
sarb
fs
xchg
pop
je
pop
or
jg
dec
add
mov
jecxz
lods
out
inc
jo
lcall
mov
pop
lock
cwtl
jo
mov
inc
sub
cs
dec
pop
pop
push
das
ja
push
fwait
int
xchg
push
add
push
pop
adc
pop
and
or
addr16
push
xchg
mov
inc
lcall
xchg
sbb
jb
outsl
stc
pop
mov
or
fnsave
je
fisubrl
xor
or
push
cmp
pop
sbb
in
adc
inc
fnstcw
pop
pusha
push
shlb
pop
outsb
dec
mov
pop
int
outsl
movsl
loope
cli
pop
rcll
sub
jns
pop
test
jmp
inc
mov
dec
scas
xchg
mov
clc
jns
inc
pop
xchg
data16
jb
repz
or
cltd
jo
inc
pop
in
jecxz
lock
and
adc
insb
pop
jecxz
in
mov
shrb
pop
arpl
popf
popa
test
mov
xchg
cltd
scas
push
or
sub
jge
xor
aad
fwait
jb
pop
out
sub
pop
inc
and
int3
xor
pusha
add
push
lods
pop
aam
jb
fs
mov
inc
scas
jo
mov
mov
cli
jge
fildll
sbb
lods
jmp
push
xlat
add
and
cmp
filds
inc
pop
jle
fwait
shl
stos
jmp
nop
fdivp
inc
jp
pop
pop
mov
pusha
imul
shll
jg
adc
and
mov
jge
shrb
mov
mov
cltd
rcr
or
testl
and
in
fistpl
jno
cmp
pop
stc
divl
popl
shrb
pop
jbe
gs
xchg
mov
or
xor
insl
mov
in
mov
call
arpl
push
mov
inc
sub
add
sarb
xlat
pop
rsqrtps
les
xchg
jo
cs
lahf
or
jne
movsl
push
clc
pop
es
loopne
pop
mov
jb
outsb
jae
cwtl
lock
push
add
aas
sub
mov
pop
cmc
jno
sub
pop
out
pushf
aam
leave
pop
int
addr16
sbb
test
jo
scas
add
sub
adc
push
push
ficompl
cmp
jmp
shrb
cwtl
rcl
xor
jbe
prefetcht2
pop
jno
iret
shl
aad
pop
sub
xchg
loop
cmp
or
pop
push
mov
mov
cmc
shll
or
mov
pusha
fldz
jecxz
fucomi
pop
jo
jg
inc
or
cmp
outsl
fnsave
pop
mov
scas
jbe
jecxz
mov
mov
push
fsts
pop
sbb
inc
mov
stos
cmpb
add
pop
pop
jle
call
in
xchg
loope
int
inc
mov
jmp
ficompl
sbb
dec
cmp
leave
pop
js
mov
xchg
mov
js
mov
sbb
adc
xchg
jg
jecxz
add
push
test
lds
sbb
popf
jae
mov
js
push
lahf
sub
cmp
push
inc
sbb
jmp
icebp
pop
ja
dec
inc
pop
adc
test
adc
bound
or
out
push
push
pop
jb
fwait
sbb
pop
or
pop
pop
xchg
and
xor
pop
icebp
lods
jns,pt
dec
dec
sub
push
mov
xor
lds
int3
cmp
jp
pop
gs
pop
movsb
arpl
repnz
lret
inc
pop
cmc
cli
sub
popf
mov
scas
pop
int
cwtl
mov
push
sbbl
clc
stos
xchg
jo
pop
sub
in
gs
andb
mov
sbb
fadds
mov
mov
ficomps
idivb
mul
inc
insl
pop
or
sbb
mov
push
cmp
mov
add
imull
jmp
aas
adcb
jb
into
add
shrl
sbb
pop
repz
adc
lcall
sbb
xchg
pop
pop
push
ror
xchg
call
pop
dec
xlat
std
fnstenv
mov
mov
jp
call
sub
scas
in
mov
sbb
push
xchg
jecxz
ljmp
bound
lea
xlat
and
test
lods
pop
fdivl
pop
xchg
scas
rcr
pop
pop
andb
or
outsl
test
xlat
dec
daa
rcrb
sbb
cli
popf
pop
je
dec
loopne
pop
jge
pusha
stc
mov
mov
aas
mov
mov
ja
pop
repnz
sbb
sub
arpl
pop
mov
sbb
sbb
and
jne
push
jg
sub
pop
mov
lahf
faddp
xchg
adc
imul
hlt
or
xchg
lods
add
dec
lds
cli
mov
pop
sarb
pop
push
adc
sub
mov
jmp
iret
add
jle
lea
pop
addr16
dec
aad
and
push
imul
lret
sti
outsl
mov
pop
sbb
add
push
pop
les
sub
iret
pop
and
cmp
xchg
push
pushf
enter
mov
pusha
pop
iret
out
lods
imul
cmp
pop
xor
mov
mov
inc
inc
sahf
dec
and
fbstp
mov
sbb
cmpsl
into
mov
out
push
test
in
insb
mov
ss
ja
jecxz
fcmovnb
and
arpl
pop
cmp
out
insb
mov
xchg
pop
cmpsb
movsl
mov
pop
mov
loopne
fisubs
jp
lds
mov
jo
fcompl
mov
ja
in
jns
adc
and
int
add
inc
dec
adc
xchg
fnstenv
lret
scas
mov
mov
hlt
das
clc
int3
and
pop
dec
and
sbb
xchg
lahf
pop
rclb
or
pop
scas
xor
mov
sbb
jbe
andl
inc
jnp
int
pop
lret
inc
push
fld
cmp
je
lret
mov
das
les
ja
cmp
gs
test
jl
xchg
jg
les
push
test
push
shl
ret
outsl
sbb
dec
bound
mov
icebp
ljmp
in
cmc
adc
or
sbb
pusha
mov
shl
loope
insb
call
jp
sub
cmpb
out
inc
mov
lea
mov
cmp
cmp
gs
pop
loop
mov
std
xor
daa
jmp
lods
cli
lock
mov
pop
repnz
pop
fbld
lahf
or
add
out
jno
lock
call
sarl
add
mov
repz
lds
fstpl
rclb
dec
pop
sbb
push
jle
mov
and
pushf
int
inc
out
shl
lock
mov
hlt
pop
clc
inc
dec
divl
pop
xchg
loop
sub
ja
fwait
sub
js
jo
pop
in
mov
test
imul
dec
pop
ficoml
shl
mov
sbb
into
cmp
lcall
pop
jge
dec
mov
sahf
imul
iret
test
inc
pop
std
mov
cli
pop
cltd
aaa
pop
dec
outsl
stos
jae
shll
ja
pop
jne
pop
daa
int
or
inc
push
sub
push
push
xchg
pop
cmp
mov
xor
stos
push
sbb
setns
jl
push
jns
pop
es
mov
pop
mov
ljmp
pop
mov
mov
jl
xor
sbb
jg
jmp
and
add
or
pop
xchg
pop
jge
ret
mov
pop
fdiv
pusha
test
push
pop
bsr
jns
fisttpll
xlat
pop
mov
icebp
cltd
negl
or
push
pop
loop
sub
mov
mov
mov
es
xor
movsl
mov
mov
sub
iret
pop
fwait
xchg
xchg
cltd
stos
push
gs
push
testb
repz
mov
in
lds
jg
push
xor
adc
push
pop
into
inc
or
pop
jbe
cmp
ja
push
in
pop
pop
lea
mov
push
or
lock
cmp
jo
push
and
sbb
cmovne
jae
dec
xchg
jne
xor
xor
sahf
mov
lea
lahf
push
mov
cld
xor
adc
cltd
mov
aaa
and
jnp
and
or
xchg
add
mov
or
test
mov
test
add
outsl
sub
fsubrs
call
and
jno
mov
fnstenv
pop
imul
es
add
ret
in
pop
jb
pop
sbb
lds
pop
bound
int3
repz
dec
in
or
cmpsb
loopne
xor
cltd
cmp
sub
int
imul
push
mov
inc
lds
bound
jnp
sbb
ds
jl
jne
rolb
mov
shll
lea
adc
andb
arpl
outsl
pop
push
pop
ljmp
roll
sbb
pop
push
and
scas
mov
lods
mov
int
jmp
mov
inc
jbe
fcoms
jmp
pop
or
dec
dec
pop
jle
ficompl
idiv
movsb
add
xchg
popf
call
addr16
stos
lret
pop
out
in
push
pop
add
imul
sbb
or
int3
pop
mov
mov
xchg
push
jge
lahf
fistpl
sub
inc
outsb
and
cmp
scas
jne
ds
or
xor
jp
inc
add
cmp
stc
pop
dec
scas
push
cwtl
cmp
push
pop
push
and
mov
sub
adc
cmpsb
inc
leave
fsts
xor
fst
lods
mov
not
lea
movsb
sbb
cmp
jne
cmp
dec
je
frstor
jb
mov
pop
sub
aas
cli
mov
pop
sub
dec
test
jbe
jmp
pop
cmpsl
and
xchg
jge
sub
test
int
andps
cmc
cmp
data16
or
pop
jl
scas
sbb
pop
adc
xchg
and
mov
iret
lods
fstps
aad
mov
pop
sbb
and
mov
xchg
outsb
push
int
pop
xor
push
jne
pop
inc
push
cld
enter
stos
mov
sbb
stc
xchg
mov
mov
sub
hlt
mov
xorl
push
xor
push
mov
popl
in
mov
clc
jle
cwtl
pop
fwait
ss
popf
adc
adc
pop
ljmp
add
jo
int3
incl
lods
or
xor
scas
mov
jo
dec
mov
sbb
pop
push
pop
aaa
cli
in
and
xchg
repnz
test
scas
inc
xor
dec
pop
sub
gs
mov
xlat
stos
movsl
push
mov
or
inc
icebp
pop
pop
pop
stc
fidivl
dec
mov
pop
mov
lods
rcrl
pop
int
push
pop
jmp
add
pop
int3
sbb
mov
xchg
push
mov
and
adc
inc
cmc
fidivrl
addr16
in
dec
pop
fldenv
jnp
push
push
pop
jle
in
push
and
fstpl
xchg
mov
xchg
sub
mov
loopne
sahf
popa
popf
cmp
cmp
jecxz
dec
cs
frstor
pop
lcall
mov
lret
mov
insl
scas
lea
mov
aas
out
sub
push
sbb
lods
and
adc
dec
push
sub
sbb
test
xchg
test
cmc
xor
mov
pop
insb
loopne
push
pop
cmp
cs
gs
dec
dec
lahf
pop
add
pop
popa
xchg
sarl
mov
and
pop
fs
xchg
xor
mov
pop
pop
push
nop
and
mov
pusha
xchg
xchg
jg
xchg
pop
inc
sbb
jb
or
lret
js
jmp
sub
mov
pop
call
ja
lods
scas
cmp
pushf
sub
sbbb
test
push
inc
enter
dec
jmp
pop
int
mov
mov
subb
scas
adc
clc
nop
mov
negb
push
lea
xchg
xchg
and
add
pop
out
mov
sbb
mov
cwtl
pop
cli
adc
inc
push
push
pop
or
fimull
stc
pop
mov
pop
insl
or
mov
mov
mov
aad
fsubs
push
fistl
pop
sbb
std
pop
push
out
mov
and
pop
outsl
sbb
jns
icebp
nop
rol
mov
pop
lods
push
or
rcrl
pop
sahf
push
std
stc
xchg
int3
in
cwtl
test
push
or
cmpsl
lahf
pop
lock
sub
jmp
pop
adc
dec
xchg
adc
adc
cltd
cmpsl
lods
aaa
dec
gs
ret
cwtl
jnp
jns
jge
inc
in
mov
jp
pop
les
inc
jno
lods
jmp
pop
divl
or
push
xor
enter
pop
push
pop
add
sbb
fcompl
fimull
pop
ret
hlt
push
cmp
popf
pop
jns
add
aam
pop
mov
movsl
arpl
int3
shll
xor
cmp
sbb
jg
dec
jge
pop
fdivl
xchg
push
in
mov
stc
dec
pop
int
adc
push
jl
pop
and
mov
fnstenv
sbb
pop
xor
jecxz
call
xor
jbe
les
jb
add
jns
scas
inc
or
cmp
jbe
pop
xor
sub
xor
dec
dec
mov
notl
pop
loop
mov
or
sarl
sub
fldl
fdivp
push
ljmp
xor
jge
int3
xchg
mov
pop
pop
inc
lahf
stos
mov
fdivrs
pop
add
int
mov
add
pop
mov
jno
cli
cltd
xor
les
push
inc
test
push
jns
xor
pop
cmp
ret
int
fwait
jecxz
mov
out
pop
je
flds
loop
jmp
insl
pop
jl
mov
xor
inc
or
pushf
xlat
pop
dec
mov
std
enter
lea
and
mov
add
lock
fmul
iret
push
push
bound
ljmp
xchg
leave
ss
push
sti
int
push
add
pop
lahf
popf
jl
pop
sbb
sbb
and
decl
jbe
jo
je
mov
loope
pop
or
push
loopne
or
test
sbb
lods
fdivrs
or
ja
fmull
in
mov
pop
mov
xchg
jo
adc
inc
lahf
mov
jbe
dec
aas
or
jb
in
test
mov
ss
imull
pop
adc
addr16
sbb
out
sub
cmp
repz
xchg
sub
add
jbe
fstpl
pop
sbb
and
inc
and
push
jmp
lea
icebp
adc
push
mov
xchg
stos
insl
pusha
scas
insb
aad
fists
lcall
cmp
in
xchg
sbb
jae
lea
inc
pop
mov
outsl
int3
push
bound
adc
xchg
pop
popa
imulb
jl
fiadds
fstl
lods
mov
mov
insb
pop
movsl
jmp
into
outsl
jbe
lods
pop
enter
pop
lcall
mov
notb
ss
pop
push
add
stos
pop
test
cmp
pop
cmp
aaa
push
or
mov
sub
xchg
ret
push
enter
cmp
xchg
push
insl
div
pop
add
test
shl
dec
mov
xchg
xchg
and
or
sub
lock
pop
sarl
insb
fisttpl
cwtl
dec
in
test
jb
popf
ja
jne
fisubrl
sbbl
pop
scas
mov
pop
clc
push
adc
pop
arpl
repz
sub
push
fidivs
sub
fidivl
adc
je
xchg
movsb
dec
pop
inc
dec
nop
arpl
push
out
inc
lds
shlb
xor
jb
mov
xchg
out
sahf
fcompl
mov
cmpsb
sub
jl
cmp
mov
clc
ljmp
jle
dec
pop
cli
icebp
addps
and
scas
inc
aad
adc
mov
lahf
repnz
lahf
setne
into
jecxz
jp
pop
inc
dec
mov
cltd
ret
dec
xor
mov
jg
sarl
cld
pop
cs
push
fcomps
mov
lods
cmc
xor
and
pop
and
rorb
pop
mov
jbe
imul
je
out
aad
and
mov
adc
arpl
lret
inc
js
scas
test
addb
xor
add
pop
and
les
ret
mov
push
mov
add
mov
fsub
loope
ficompl
loop
aam
pop
dec
ret
jbe
jp
pop
pushf
xorb
sbb
pop
adcb
fwait
aam
dec
mov
sbb
xchg
mov
add
push
add
pop
jge
xchg
xor
fsubp
cmp
out
pop
push
jbe
test
xor
aad
sbbl
mov
or
test
dec
shlb
pop
mov
sbb
int
inc
out
pop
dec
ret
iret
data16
pop
int3
aaa
push
stc
fstl
loop
push
addr16
push
divl
or
popa
inc
jo
popf
dec
xor
pop
cli
xchg
push
xchg
adc
pop
pop
xor
mov
xchg
sub
popa
add
hlt
pop
sahf
lods
and
es
mov
xor
dec
sbb
pop
adc
out
jecxz
pop
cwtl
xchg
push
xchg
xor
xorb
test
sub
pop
test
xchg
sub
stos
in
push
mov
mov
pop
fcoms
cltd
int
jae
pop
dec
dec
cmp
fistl
pop
mov
repnz
stos
push
scas
adcl
lcall
pop
loope
sbb
push
popf
jecxz
mov
dec
jae
mov
sub
xchg
pop
es
cmpsl
jno
dec
jle
out
negb
xor
dec
mov
inc
stos
sub
fldpi
pop
aas
in
aad
jb
mov
dec
push
push
jge
std
ficoml
test
pop
into
rorl
adc
stc
insb
sti
shlb
arpl
jg
xor
mov
xchg
sbb
pop
lea
pop
xchg
inc
ss
test
mov
sahf
shrl
push
pusha
fcmovnbe
sti
pop
xor
mov
sbb
jbe
jb
or
xor
imul
idiv
pop
xor
mov
xor
pop
sbb
int
inc
aam
xor
outsl
cltd
mov
jmp
xlat
test
jo
pop
dec
repz
sahf
insl
pop
jnp
movsb
mov
pop
lods
cmc
repz
int
push
lds
dec
cltd
jns
shll
cmp
insl
xlat
or
incb
pop
outsb
adc
push
jbe
jge
lea
stos
scas
mov
jecxz
dec
ss
add
mov
repnz
mov
pop
dec
dec
jle
xlat
je
dec
pop
mov
ljmp
add
int3
jns
dec
fidivrs
xor
mov
mov
adc
pop
orb
int
pop
dec
gs
mov
sarb
sbb
insb
lahf
dec
mov
add
out
push
pop
push
icebp
pop
or
sbb
fdivrs
cmp
cmp
daa
jne
repnz
jo
pop
sub
lock
mov
pusha
pop
push
lods
mov
pop
je
ret
movsb
int3
dec
or
fs
pop
faddp
inc
cltd
iret
cmp
in
icebp
cmpsl
data16
loopne
loop
pop
mov
divb
jl
mov
enter
xchg
cli
pop
mov
loop
sbb
sub
daa
mov
inc
enter
inc
mov
arpl
pop
dec
cwtl
push
test
imul
dec
pop
bound
inc
inc
repnz
std
pop
int3
inc
cwtl
mov
push
pusha
mov
pop
stc
sub
mov
clc
dec
mov
pop
dec
sbbl
cmp
movsb
mov
mov
js
pop
inc
dec
pop
xorl
mov
bndldx
jno
pop
sbb
sub
pop
inc
int
loopne
xchg
add
jle
mov
cmp
push
pop
fidivrl
mov
push
push
test
xchg
xchg
pop
xor
cmp
dec
lret
int3
gs
sbb
jg
sbb
add
sub
sub
mov
lock
dec
pop
out
fldt
mov
sub
out
xchg
sbb
mov
add
pop
sbb
sub
xchg
scas
in
add
sbb
pop
fdivs
push
pop
rclb
jp
xor
sbb
adc
mov
add
lds
or
dec
sbb
mov
cmp
pop
or
lcall
xchg
js
popl
and
fcmovnu
xchg
pop
pop
fidivrl
rorb
imul
or
loope
sahf
in
cmpsb
dec
pop
mov
push
xchg
shr
pop
pop
inc
lea
sub
mov
cwtl
mov
jle
lods
pop
dec
adc
jecxz
push
icebp
mov
push
and
and
lods
clc
pop
int
mov
cmpsb
jo
pop
mov
pop
loope
orl
jno
pop
outsb
lea
jbe
fstpl
and
fdivp
mov
lahf
mov
sub
or
test
xor
pop
cmp
jnp
adc
lods
cltd
stos
sbbl
pop
rcrb
pop
jno
iret
fisttpll
cmpl
pop
pop
sub
jp
pop
pop
icebp
mov
je
punpcklbw
stos
repz
testb
fwait
mov
or
adc
in
push
pop
dec
xchg
loop
je
pop
jne
mov
push
push
sub
mov
into
repnz
xor
xchg
or
sbb
pop
adcl
movsb
cmp
pop
adc
cs
movsl
or
mov
pop
mov
int
fwait
pop
jl
mov
repz
stc
icebp
pop
xor
cmp
into
xchg
sbbb
lea
push
or
and
and
pop
cwtl
pop
or
int
repz
lret
bound
mov
sbb
or
dec
ds
pusha
icebp
xor
dec
jmp
mov
push
mov
or
pop
xlat
jne
pop
leave
pop
fsub
mov
pusha
or
and
hlt
sbb
cmpsl
fsubl
out
pop
or
stos
fstpl
adc
je
sub
mov
push
filds
jnp
inc
or
and
stos
dec
cmp
int3
mov
dec
icebp
adc
ficompl
ss
sbb
push
adc
adc
int
lds
lret
cmp
push
sti
lock
sub
mov
pushf
and
in
cltd
dec
adc
add
shll
adc
sbb
pop
popf
inc
jmp
imul
jb,pn
push
stos
dec
psllw
stos
push
aaa
inc
in
dec
xor
jp
pop
add
mov
gs
inc
sahf
push
push
mov
cwtl
push
pop
sbb
in
mov
xchg
pop
push
or
lahf
pop
movsl
cmc
jbe
ljmp
mov
pop
jno
xor
sbb
sbb
or
ficompl
push
sub
push
mov
dec
int
imul
push
pop
mov
pop
pop
sbb
roll
xchg
or
push
scas
mov
jbe
lds
insl
out
pop
mov
fs
rolb
push
or
aad
jge
mov
pop
cltd
in
fcmovnb
rcrl
sbb
or
cli
lea
and
clc
jb
cld
shl
xlat
into
std
mov
xor
jmp
dec
dec
xchg
je
pop
mov
pop
cmc
mov
fcmovnb
add
sub
cmp
daa
push
pop
pshufw
cmc
or
add
push
pop
cmp
stos
loop
and
or
pop
sub
addr16
jbe
lahf
jl
fnstenv
or
push
sbb
dec
pop
ss
dec
jle
sbb
fstps
pop
mov
out
sub
rol
adc
pop
into
stos
push
loopne
mov
leave
mov
movsb
cmp
pop
fldl
pop
jbe
xchg
test
fdivr
xchg
adc
pop
loop
mov
fisttpll
mov
dec
fcoml
sbb
jb
insb
dec
arpl
cmp
inc
mov
cmp
xchg
xor
sbb
aas
test
cmp
jge
shlb
mov
xchg
sub
fs
lea
fldl
mov
test
xlat
repz
into
fdivl
inc
popf
fcmove
repnz
data16
insb
sub
in
arpl
pop
jns
stos
mov
lock
jo
pop
jecxz
je
std
pushf
pop
fldt
mov
lret
int3
xor
mov
lcall
inc
divl
hlt
sbb
dec
pop
pop
push
mov
lcall
inc
fildll
pop
push
jb
jp
sbb
std
pop
pop
mov
inc
hlt
pop
adc
jle
int
mov
pop
pop
mov
dec
or
dec
popf
subb
and
lret
cltd
mov
int
xchg
xor
xchg
mov
pop
fmulp
in
sub
imulb
inc
jbe
pop
xchg
or
pop
dec
pushf
nop
addb
lcall
lcall
iret
or
fcmovne
pop
in
out
xchg
add
imulb
sub
mov
daa
adc
jp
fs
mov
mov
jb
fwait
mov
pushf
mov
ficomps
into
ret
inc
xlat
pop
idivb
jg
popf
int
mov
aad
mov
into
mov
mov
mov
loop
lcall
cmpb
pop
push
sub
adc
sub
or
cli
enter
lret
pop
adc
inc
fcompl
movsb
pop
sbb
dec
dec
in
cli
mov
pop
and
pop
dec
dec
fisttpl
je
pop
add
push
mov
dec
shll
mov
subb
and
lock
lcall
lods
sbb
je
sahf
sbb
ret
dec
jmp
mov
pop
popf
sti
and
jo
test
pop
pop
scas
push
adcb
cmc
das
pop
sbb
les
outsb
gs
dec
jmp
shrl
dec
int
call
mov
adc
adc
sbb
adc
mov
lahf
push
xor
fisubl
pop
dec
pop
inc
xchg
out
int
dec
mov
bound
mov
insl
leave
mov
jno
sub
mov
ja
inc
dec
fs
scas
adc
dec
mov
inc
dec
pop
and
out
adc
pop
dec
sbb
jmp
pop
mov
pop
push
push
xchg
and
sub
add
mov
divl
pop
hlt
xor
lods
scas
adc
das
sahf
repnz
pop
ja
mov
push
pop
divl
scas
sub
pop
mov
pop
push
sub
cmp
lahf
xchg
rorb
enter
lea
icebp
mov
dec
inc
xchg
pop
xchg
cmp
aad
data16
pop
js,pn
test
dec
cmp
flds
fisubrl
fcomps
dec
dec
jbe
leave
test
pop
jle
add
pop
cmp
les
jmp
pop
dec
pop
jae
cmp
nop
and
push
pop
decl
xchg
xchg
pop
push
sub
pusha
shrb
movsb
fstps
xchg
arpl
jo
imull
dec
pop
sarb
mov
lret
push
jo
xchg
fbld
stos
rcl
sahf
pop
out
ss
repz
pop
lods
dec
sub
bound
mov
aad
pop
clc
stc
pop
or
sti
mov
lds
jo
jecxz
or
pop
sub
mov
sub
rcrb
aad
push
pop
or
add
div
cmp
pop
pop
add
addr16
frstor
out
sub
add
mov
mov
pop
lcall
inc
sbb
test
xor
xor
pop
decb
push
scas
jg
push
adc
lahf
xlat
aad
sbbb
aaa
int
dec
ret
inc
push
fsts
test
mov
or
sbb
jno
pop
ret
lahf
push
pushf
sub
xor
mov
jecxz
push
push
xor
fmuls
xor
xor
pop
pop
int3
add
pop
out
int
adc
test
sbb
insb
or
pop
popf
cmp
sbb
pop
cld
pop
push
or
fcoml
int
pop
add
dec
int3
pop
cli
pushf
lret
pop
ret
scas
outsb
and
movl
int3
int
cmp
adc
call
pop
loopne
inc
dec
loop
int
jecxz
jnp
push
jg
sbb
das
mov
jo
xor
test
sbb
mov
outsb
cmp
mov
jns
testl
lea
dec
pop
sti
xor
push
add
cmp
xor
pop
cmc
and
cmpsl
or
adc
cltd
enter
push
xchg
sbb
int
pop
repnz
mov
lds
pop
add
addr16
jo
xchg
jae
test
nop
jl
mov
into
mov
aad
sbb
pop
js
mov
mov
pop
mov
scas
sub
addr16
jmp
pop
push
fdivp
clc
pop
mov
xchg
inc
pop
sarl
sbb
inc
dec
pop
lock
pusha
ljmp
outsl
xorb
in
pop
sar
jae
add
or
stc
std
clc
xor
pop
adc
stos
lea
fisubrs
cli
jl
sbb
xor
mov
and
into
mov
movsb
mov
add
fdivrs
dec
jmp
rcr
addr16
pop
int
fldcw
sub
in
mov
pop
mov
lock
jbe
or
pop
out
cmp
push
daa
jno
mov
xchg
leave
inc
xlat
jg
fcmovbe
ficomps
out
push
xor
ret
jbe
cmp
cltd
andb
in
das
xchg
pop
cli
jnp
add
or
jmp
inc
mov
pop
pop
and
jb
fstl
in
jo
or
pop
sbb
sbb
xor
out
cmp
pop
push
mov
jae
pusha
xor
jb
pop
sub
dec
loopne
data16
pop
int3
clc
inc
mov
out
rcrb
popa
and
xor
pop
std
pop
and
and
mov
xchg
push
loope
outsl
and
adcb
mov
cltd
sub
inc
pop
call
enter
fstps
push
mov
loope
dec
lods
lds
or
sbb
jl
mov
ja
lahf
dec
pop
pusha
jnp
std
fs
push
xor
add
pop
adc
xchg
push
pop
xor
pop
arpl
aaa
loope
pop
adc
ret
mov
push
pop
mov
xor
out
jecxz
adcl
pop
push
hlt
pop
adc
dec
js
je
fists
lods
movsl
and
fs
sub
sub
aad
iret
loopne
ja
push
test
fsubrs
xchg
mov
mov
bound
scas
fstpl
lret
and
dec
xor
mov
mov
movsb
pusha
inc
out
pop
stos
les
sub
sbb
xchg
and
rcrb
fcomps
loope
inc
leave
mov
dec
xlat
xchg
out
stos
fdivl
mov
dec
pop
mov
inc
sbb
pop
mov
jnp
inc
xchg
mov
fildl
xor
jbe
inc
jl
pop
xorb
pop
dec
mov
cli
fldcw
inc
imul
outsb
cmp
pop
stc
sbb
push
ficompl
lahf
push
sub
push
fldt
movsl
push
add
lcall
pop
rcrb
xchg
pop
inc
pusha
sub
jbe
fsubrl
and
fidivrl
push
xchg
xchg
pop
add
lret
jb
xor
out
push
in
gs
popl
adc
ret
pop
mov
bound
pop
mov
sub
pop
xchg
loopne
cmp
outsb
scas
popa
std
outsl
fstpt
inc
aad
mov
je
jmp
lods
fs
pop
shll
sbb
adc
adc
in
cli
pop
sbb
jbe
inc
loope
bound
fmull
lahf
push
scas
out
sbb
fildl
xchg
into
out
scas
add
sbb
outsb
pop
jp
and
ljmp
lods
or
pop
mov
mov
dec
jp
fsubrs
xor
pop
andps
inc
push
jmp
pop
push
add
in
rcrb
push
mov
addl
cmp
ljmp
leave
rorl
movsb
pop
int
in
pop
mov
addr16
mov
aam
cmpsl
cs
xchg
cltd
adc
push
pop
data16
sub
jb
mov
sub
jg
sbb
pop
shl
mov
mov
dec
cwtl
call
add
scas
aaa
push
push
inc
pop
outsb
push
add
pushf
dec
negb
in
adc
pop
pop
and
jbe
nop
dec
mov
dec
mov
mov
pop
jb
add
add
cmp
addr16
mov
pop
xor
sbb
scas
inc
int
ljmp
jb
jge
push
pop
sti
ss
imul
pop
setge
jne
aam
pop
in
int3
leave
fistl
cmpsb
jle
pop
aas
ds
pusha
mov
movsl
pop
sbb
or
cli
cmc
scas
sub
push
dec
mov
cmp
push
std
pop
test
jbe
xor
push
jl
lea
sbb
xor
sub
repz
sbb
aam
inc
movsl
or
push
pop
ret
rcrb
dec
in
sbb
jno
pop
bound
push
push
lret
cmp
lea
lcall
pop
and
xchg
rcr
lock
and
push
mov
nop
jmp
inc
sbb
ja
pop
sbb
xchg
pop
pop
je
jo
pop
add
or
cmp
inc
mov
dec
and
repz
scas
sbb
xor
mov
sbb
pop
push
cmp
jmp
adc
mov
pushf
aaa
mov
nopl
jle
mov
xchg
mov
lahf
int3
lods
add
out
mov
test
cmp
inc
rorl
cwtl
adc
iret
jnp
shr
push
jo
fmuls
lcall
das
cmp
pop
leave
test
push
add
xchg
cmpsb
repz
mov
jne
psubsw
dec
pop
and
push
push
ss
stos
movsl
or
loope
pop
dec
aad
add
add
jb
mov
jne
lds
mov
ljmp
lahf
es
sbb
out
jl
mov
fisttpll
push
enter
outsb
dec
outsl
pop
cltd
sub
js
add
jb
fstps
insl
push
sti
mov
pop
sbb
inc
cmc
rcrl
sub
imul
pop
mov
loope
vmptrld
mov
loopne
pop
push
sbb
pop
mov
iret
or
pop
movsl
dec
test
xor
or
ficoms
loop
aam
nop
jbe
popl
pop
ja
aaa
xor
sbb
pop
mov
insl
add
sub
and
sbb
mov
or
sti
iret
lods
pop
rclb
jb
adc
scas
scas
or
iret
clc
pop
mov
stc
sbbl
sbb
and
sbb
test
pop
movsb
aaa
sub
mov
add
sub
pop
in
xor
pushl
pop
and
movsb
cmpsb
push
fucom
and
pop
arpl
xor
sub
ja
mov
pop
add
mov
lcall
rorb
out
lods
xlat
lods
pop
mov
jns
loope
pop
test
clc
sub
pop
shl
sbb
test
adc
fsubrl
test
fwait
pop
movsl
sbb
js
je
mov
pop
es
int3
fdivs
and
mov
stc
popa
in
adc
lret
xchg
fwait
and
int3
loop
adc
inc
shll
aas
and
mov
dec
loope
xchg
mov
icebp
pop
test
cmp
pusha
cmp
popf
rolb
pop
jecxz
xchg
mov
push
in
aam
addr16
int3
daa
fsubr
negl
out
jo
jnp
pop
lock
test
imul
mov
add
in
fidivl
dec
out
int
fcmovnb
mov
pop
mov
rorb
cwtl
ret
pop
add
push
xchg
push
mov
xor
shlb
mov
lret
mov
lods
in
xchg
mov
cmc
addr16
mov
sbb
mov
adc
xchg
aad
daa
pop
test
fistl
pop
mov
addr16
add
mov
add
fnstenv
adc
pop
sub
mov
dec
pop
es
push
pop
enter
addr16
pop
out
inc
push
orb
pop
xor
inc
mov
or
pop
pushf
xor
mov
cmp
dec
in
out
jo
stos
fyl2x
mov
xchg
stc
dec
pop
cmpsb
ret
add
dec
ret
out
clc
shll
repnz
pusha
xor
mov
rcll
mov
pop
aad
in
stos
cmp
pop
dec
mov
rcll
movsb
add
out
stc
insl
inc
xor
fstpl
in
dec
lock
add
jo
cmp
repz
cwtl
jmp
pop
push
int
pop
xchg
clc
dec
xor
in
inc
cld
ret
sbb
repz
xor
push
enter
inc
les
loop
scas
in
idivb
popf
cmp
pop
mov
call
jb
xchg
imul
pop
xlat
sarl
or
or
pop
adcl
stos
pop
pop
aad
push
scas
and
fwait
ja
test
rorl
shr
or
rcrb
mov
lahf
inc
push
fdivp
pop
in
and
xor
pop
mov
mov
sbb
pop
mov
addr16
sbb
rolb
mov
mov
or
adc
addr16
mov
stc
or
pushf
test
pop
movsb
rcrb
mov
test
push
popf
sti
push
pop
aad
dec
dec
notb
mov
sbb
inc
cli
sbb
inc
pop
jbe
rcr
push
mov
aas
cmp
jnp
pop
sahf
bound
insb
cld
dec
sub
push
or
dec
push
adc
jo
mov
imulb
sub
fs
pop
and
outsl
hlt
enter
push
clc
cltd
in
cli
out
pushl
aam
jecxz
repz
cld
pop
sarl
mov
movsb
xorb
xchg
fisubrl
es
pop
push
pop
push
cmp
pushf
pop
xlat
lds
ljmp
arpl
and
rolb
cmovbe
fs
xlat
in
jo
test
les
fisttpll
pushf
jbe
inc
sbb
mov
mov
pop
loopne
shl
push
dec
and
mov
fbld
pop
jmp
cmp
or
clc
pop
xor
add
fwait
ret
mov
jo
adc
jb
sbb
fldcw
pop
push
loope
fmulp
mov
xchg
lret
int3
sub
fdiv
rcrl
pop
cmp
push
repnz
icebp
int3
adc
pop
loope
mov
ret
pop
jae
push
shll
jge
fidivl
out
adc
push
xchg
sbb
stos
das
add
ficompl
loope
sarl
adc
pop
ja
or
xchg
xchg
jo
bswap
or
pop
sub
jbe
jl
rcrl
mov
cmp
movsb
pop
pop
int
mov
lahf
pop
dec
and
fcmovu
fsubs
jns
lcall
pusha
pop
ss
mov
cmpsb
dec
sbb
pop
xchg
mov
add
scas
sbb
pop
xchg
mov
ljmp
jno
mov
pop
mov
fbld
jbe
mov
aas
inc
add
call
pop
dec
arpl
lcall
adc
dec
js
bound
scas
mov
mov
xchg
sbbb
pop
test
int3
fldl2t
loop
int
cmpsb
aam
xor
push
pop
leave
xor
faddl
cmc
out
fildll
xchg
repz
enter
icebp
mov
pop
loopne
adc
addps
divb
popa
dec
fbstp
xchg
mov
mov
clc
pushf
adc
jae
sbb
fistl
sbbl
and
jo
pop
jecxz
inc
adc
nop
or
dec
sub
pop
cmp
sarl
dec
jo
pop
loopne
aad
xchg
dec
or
xor
inc
jbe
fbstp
addr16
pop
clc
dec
cld
mov
aad
fimuls
jno
jecxz
inc
int
outsl
out
mov
cltd
jl
jo
repz
pop
lods
dec
jnp
pop
xor
int
pop
mov
pop
jecxz
push
push
pop
orb
pop
xor
lods
jb
rcl
cltd
stos
pusha
push
or
xchg
jmp
jnp
mov
iret
mov
pop
lret
lods
mov
insb
fstp
dec
cs
lcall
enter
mov
adc
cmp
test
pop
pop
in
aaa
cmp
pop
jb
sbb
xor
out
adc
rcl
xor
jae
mov
cmp
lods
mov
scas
dec
pop
lret
xlat
fxch
xchg
in
inc
mov
pop
adc
and
mov
mov
push
push
xchg
pop
xorl
inc
mov
pop
push
stos
int
sbb
cltd
pop
xchg
lcall
sbb
jbe
dec
adc
cs
in
fsubrs
lret
sti
ficoms
sub
and
mov
insl
outsl
das
sbb
xchg
xlat
mov
jg
jmp
cmc
inc
sub
stos
jmp
sub
out
mov
mov
stos
lods
fldl
push
pop
fsincos
mov
data16
movsl
popf
xor
pop
sub
or
sub
movsb
pop
loope
inc
aam
add
aaa
pop
lock
hlt
icebp
sub
mov
add
and
xchg
inc
pop
std
and
scas
xchg
in
into
mov
or
rol
or
imul
mov
inc
or
out
jo
pop
data16
sub
pop
ja
mov
out
mov
inc
sbb
jbe
pop
or
push
sub
int3
add
mov
pop
sub
jbe
js
test
sub
sub
mov
pop
lret
cmp
inc
mov
add
imul
cwtl
lea
pop
int
add
gs
sbb
push
inc
pop
cmp
outsb
lahf
mov
aas
pop
stc
mov
sbb
mov
pop
icebp
xchg
mov
xchg
mov
cs
imul
in
mulb
push
or
jns
pop
cmp
dec
adc
stos
mov
inc
notb
out
jp
jns
scas
pop
ffreep
std
pusha
pop
jns
cld
xchg
pop
sub
aaa
bnd
movsb
pop
or
cwtl
fidivl
lea
adc
lahf
fcomi
and
gs
sub
jo
mov
lea
jb
dec
sub
pop
ljmp
lret
jbe
int3
mov
orb
into
neg
xchg
sub
in
call
add
mov
pop
hlt
or
das
pop
int
mov
push
jmp
sub
pop
cli
bound
pop
inc
jo
pop
adc
jg
pop
adc
pop
push
pop
cmp
cli
in
pop
imul
jmp
mov
mov
or
jo
pop
mov
sbb
cli
shrl
sub
stc
inc
cld
mov
pop
push
jns
pop
push
cmpsl
lret
mov
pop
dec
stos
sbb
out
data16
daa
test
pop
xor
cltd
add
inc
xchg
cmc
or
loop
push
mov
rclb
jmp
pop
xor
add
cmp
jle
sbb
cmpsl
inc
shll
adcb
std
out
lret
int3
je
pop
stc
xchg
outsb
int
pop
scas
cmpsb
push
loope
xor
mov
jg
jo
pop
aaa
sbb
cmp
sbb
push
xchg
ljmp
jg
jl
stc
int
jge
mov
mov
pop
mov
sbb
sahf
pop
ja
add
and
jbe
pop
dec
xchg
xchg
adc
or
pop
test
or
je
xlat
push
mov
pop
xchg
jnp
lcall
or
cs
in
icebp
dec
sub
cmpsb
mov
mov
ja
cmp
cltd
xchg
imul
jl
scas
pop
pop
mov
scas
mov
or
pop
dec
imul
stos
scas
inc
cmp
xchg
xchg
adc
mov
cld
cltd
fstl
cmp
sub
and
xor
pop
enter
xchg
inc
flds
imul
sub
pop
mov
dec
fisubl
inc
sub
cmpb
daa
int
jo
mov
mov
dec
lahf
popa
and
mov
scas
adc
out
push
pop
stos
movsb
ret
cld
dec
iret
xchg
pop
rcrb
jnp
add
pop
push
sbb
lahf
xor
mov
inc
call
dec
stos
mov
mov
xchg
leave
test
cli
pop
subb
push
mov
jg
loop
mov
pop
sub
mov
mov
cwtl
sbb
test
insb
mov
xchg
or
jmp
xor
loope
mov
fwait
sti
lods
inc
clc
pop
mov
inc
pop
jle
sbb
jo
stos
jecxz
mov
sbb
mov
inc
pushf
cmpsl
mov
int3
js
mov
pop
es
jno
arpl
pop
xchg
or
or
push
push
fidivrl
pop
in
cmp
orb
xchg
xchg
in
inc
jb
ds
out
test
dec
xor
not
subl
pop
pop
dec
fsub
popf
cld
sbb
loop
out
xor
mov
stos
subb
fdivs
jecxz
xchg
adc
pop
outsl
adc
movsl
jg
dec
dec
js
pop
in
cmp
rol
int
xor
pop
mov
pop
push
jecxz
out
dec
pop
sub
mov
leave
pop
push
fcompl
in
pop
jae
das
dec
jbe
mov
pop
fcoml
jl
pop
test
fstpl
out
cmp
xchg
mov
repnz
pop
fdivrl
outsl
xor
mov
xor
cmp
shll
orl
loopne
cltd
inc
pop
inc
adc
xchg
pop
ret
fisubrs
jle
fnstsw
push
sub
mov
pop
mov
movsb
fdivrp
jae
push
sub
cmc
sbb
push
div
jmp
pop
loope
lods
jbe
pop
orl
stos
out
adc
pop
js
xchg
mov
or
cwtl
pop
daa
fadds
and
scas
mov
mov
std
jnp
pop
fadds
rorl
pop
cwtl
or
adc
into
fdivl
scas
or
aad
outsl
stos
fdivs
mov
mov
insl
leave
les
mov
push
cmp
mov
andb
pop
add
adc
pop
dec
mov
pop
and
inc
mov
pop
dec
fmuls
xor
int
adc
mov
jge
test
sub
jle
lret
mov
iret
mov
repnz
fwait
jecxz
out
addr16
sti
xor
pop
icebp
pop
jae
jns
filds
mov
sub
flds
mov
jae
cmp
repz
mov
mov
aaa
fsub
xchg
lods
mov
cltd
sub
js
je
and
sub
mov
pop
push
mov
pop
xor
or
xchg
int
cmpsl
mov
scas
enter
sarb
adc
or
mov
or
rclb
je
sbb
aad
sub
aas
jp
fwait
lahf
inc
pop
clc
loope
lods
mul
push
xor
mov
mov
pusha
and
pop
mov
lea
mov
or
enter
loop
pop
std
adc
jo
subl
scas
mov
cltd
rcrb
clc
add
outsl
jnp
lea
pop
mov
mov
rcrl
or
iret
shl
jp
push
mov
mov
pop
lahf
out
fcoms
mov
dec
and
int
das
xor
cmp
pop
push
pop
bound
xor
pop
mov
lahf
jp
pop
out
jle
in
mov
fwait
mov
lods
mov
dec
scas
sarl
mov
cmp
ss
mov
shl
push
stos
repz
sub
lea
pop
sbb
icebp
negl
test
outsb
cmc
aad
int
jnp
and
mov
adc
and
inc
pop
mov
mov
lock
scas
inc
cmc
test
sbb
mov
jge
pop
in
inc
mov
cmp
enter
and
daa
icebp
jmp
fidivl
sbb
in
testl
movsl
call
movsb
jo
mov
pop
jbe
mov
inc
add
inc
pop
pop
dec
xchg
nop
pop
jecxz,pn
jmp
pop
pop
leave
pop
jno
imul
mov
fsub
mov
mov
in
push
and
test
dec
and
pop
sbb
pop
push
mov
fwait
scas
jne
pop
ficoms
mov
or
jecxz
cmpsl
sub
pop
pop
daa
je
es
rcrb
inc
bound
enter
test
mov
ljmp
dec
or
add
sbb
loope
pop
je
aam
ds
xor
pop
in
int
pop
jae
stos
jecxz
loop
mov
bound
push
push
mov
sub
pop
adc
add
int3
push
mov
out
aam
test
mov
pop
mov
pop
dec
jb
popf
jbe
jmp
pop
adc
mov
pop
and
dec
mov
ret
jo
mov
cmp
test
imul
lret
popf
mov
dec
mov
mov
bswap
rep
out
lret
sti
and
lcall
jns
in
jle
in
push
pop
mov
ds
ja
pop
and
jnp
push
inc
push
mov
adc
frstor
fistpll
popf
mov
inc
xor
jne
jnp
pop
or
lret
imul
int
push
add
jecxz
mov
rcrl
xchg
sbbl
push
cli
fsubrs
mov
arpl
lahf
pop
mov
jns
pop
jo
pushf
test
jl
dec
fwait
sbb
add
cwtl
mov
insl
popf
mov
or
test
cmpsl
xchg
fidivrl
add
dec
movsl
mov
pop
fidivrs
jmp
jecxz
aam
or
out
xchg
lods
mov
pop
add
fs
rclb
addr16
sub
jb
adc
int3
std
cmp
rclb
jno
add
push
push
mov
xchg
and
adc
push
insb
xor
lods
or
in
int
dec
nop
sub
add
sbb
jmp
jns
out
pop
call
dec
ljmp
gs
int
jbe
cwtl
xor
push
mov
pop
mov
xchg
notl
cmp
inc
jo
scas
cmp
xor
ss
push
std
gs
pop
xchg
addr16
add
push
test
pop
enter
scas
or
pop
leave
jb
jae
jno
clc
pop
sub
inc
inc
aas
cli
pop
cmp
mov
cvtps2pi
xor
push
js
sub
int3
pop
loop
mov
lahf
jns
cltd
hlt
xchg
add
pop
popa
xchg
pusha
pop
jge
dec
lods
sub
or
dec
int
mov
xchg
push
stos
xchg
rcll
pushf
pop
push
xor
insl
xchg
daa
inc
pop
mov
frstor
scas
popf
or
push
and
sbb
jg
arpl
cmpsl
dec
xorl
dec
pop
or
pop
rcrl
cmc
sti
and
pop
std
bound
int
hlt
dec
dec
fisubrs
pop
mov
inc
outsb
dec
xor
fs
pop
cmp
sbb
mov
add
fstpl
mov
jnp
int3
cmp
es
js
pop
lcall
rorl
pusha
and
dec
inc
int
mov
or
push
daa
out
xchg
cld
adc
sub
sbb
fidivl
out
jge
movsl
pop
ss
pcmpgtd
adc
cmp
pop
mov
dec
popa
sti
or
mov
dec
pop
jge
notb
enter
out
pop
xor
mov
dec
pop
push
out
or
outsb
sahf
pusha
pop
push
push
mov
outsl
dec
or
pop
aad
and
stc
cmpsb
jno
aas
pop
cli
push
rcr
sub
pop
pop
pop
push
jmp
mov
bsf
inc
push
push
pop
push
lods
cmp
pushf
fcom
jbe
icebp
dec
or
pop
in
lret
dec
jle
pop
jo
sahf
xchg
subb
rolb
jl
cmp
pop
dec
or
xchg
int
mov
pop
push
mov
outsb
inc
or
pop
enter
ja
mov
popf
cli
fstps
sub
rolb
mov
cmp
ret
xchg
div
push
fstps
or
inc
inc
jecxz
int
adc
cmp
push
sub
or
or
pop
ret
mov
xor
push
lods
add
or
xchg
scas
sti
movsl
stc
int
fildl
notl
push
fdivrs
xor
jl
inc
clc
add
lock
sbbl
or
jb
out
std
sbb
xchg
lods
cmp
sbb
pop
int
lds
mov
pop
aaa
out
sub
jecxz
jo
mov
adc
popa
push
enter
inc
pop
jg
push
sbb
in
dec
mov
jo
inc
pop
mov
sbb
pop
mov
push
cmp
add
cmp
aam
sub
push
mov
sbb
clc
pop
adc
xor
jecxz
in
stos
in
pop
inc
lods
pop
dec
enter
adc
jecxz
sti
stos
add
push
cwtl
loop
sbb
pop
xchg
mov
dec
xchg
pop
fbld
mov
mov
cmp
pop
xor
cwtl
lret
lea
dec
pop
cmp
pop
pushf
or
push
in
std
mov
pusha
jl
aad
mov
ds
icebp
add
sub
sbb
stc
xchg
sub
and
pop
test
out
scas
add
pop
jp
cs
xor
testl
pop
loopne
lret
jl
in
int3
pop
dec
pushf
or
lret
pop
leave
stos
jbe
add
fsave
js
mov
xchg
mov
loopne
test
mov
push
pop
repz
pop
mov
mov
sbb
imul
rcrl
jbe
pushf
in
ljmp
jnp
lea
pop
aam
lcall
fcompl
and
xor
je
pop
sahf
inc
mov
jbe
lahf
insl
pop
mov
add
roll
rol
pop
jp
mov
cmp
and
xor
sti
mov
test
mov
pop
daa
sub
pop
sub
sbb
pop
jb
rolb
std
push
pop
aaa
pop
xor
jo
mov
jnp
je
mov
push
pop
jl
xchg
popf
push
mov
pop
out
sbb
into
push
cmp
in
pop
ljmp
xor
lret
push
sub
dec
in
cld
dec
pop
fwait
int3
and
daa
lea
jns
mov
sbb
mov
loope
pop
xor
push
cmpsb
sub
int3
loop
out
lods
cmp
xor
or
lahf
pusha
push
cmc
mov
or
jb
lds
add
push
or
arpl
sbb
stos
les
dec
adc
dec
scas
cmp
in
jg
add
cmp
mov
mov
inc
inc
out
mov
lret
xchg
mov
out
pop
or
cli
iret
pop
insb
lret
cmp
out
pop
sub
test
cmp
push
cmpsl
into
subb
lods
mov
arpl
mov
imul
jmp
inc
aad
lea
sbb
stc
pop
cmp
int
daa
leave
lcall
bound
shlb
loope
mov
jo
mov
imul
ja
cmp
jmp
pop
int3
push
aad
pop
jb
and
xchg
mov
insb
out
mov
pusha
pop
aas
movsb
xchg
sbb
pop
rorl
push
sarl
fsts
int3
mov
jne
rcrb
cmpsb
xor
cwtl
lahf
sbb
icebp
and
pop
inc
pop
arpl
jecxz
cld
ds
iret
aam
mov
pop
es
push
pop
and
ret
sub
dec
ljmp
test
pop
xchg
inc
int3
pusha
fsubp
pop
xor
loopne
test
imul
pop
in
popf
clc
sbbl
xor
pop
lock
pusha
adc
loop
push
aaa
push
fldl
stc
pop
sarb
or
pop
cmpsb
jbe
testl
es
data16
xchg
stos
mov
pop
add
and
add
lods
in
pop
pop
imul
std
push
pop
fildl
andnps
mov
fcomps
pop
pop
in
lock
dec
mov
insl
scas
jp
and
mov
jae
leave
into
and
mov
xchg
sub
mov
je
gs
lcall
cwtl
push
pop
int3
sub
insl
mov
dec
lret
aas
mov
lods
pushf
mov
pop
jo
frstor
adc
xor
mov
jno
add
add
pop
pop
dec
call
test
rorb
adc
dec
sub
iret
sbb
mov
pop
or
pop
out
sub
pop
mov
mov
std
sub
and
push
xchg
sbb
xchg
je
fsub
inc
pop
fistpll
mov
dec
mov
inc
test
dec
mov
inc
pop
cmp
sbb
xor
jno
int3
js
jb
add
inc
sbb
mov
daa
pop
insl
nop
mov
push
pop
mov
adc
idivb
adc
lahf
sub
lock
fildl
pop
fwait
arpl
cmp
inc
mov
dec
jo
int
mov
dec
pop
fdivs
cmp
push
ljmp
adc
xchg
jg
mov
add
fidivrl
int3
fldenv
rcl
pop
xchg
int
adc
mov
or
imul
push
dec
jns
mov
pop
loop
pop
popa
dec
push
push
rcrb
or
das
sub
lods
jle
insl
or
xor
push
add
sub
mov
das
and
pop
lret
pop
test
arpl
mov
stos
adc
jo
pop
inc
add
mov
scas
push
xchg
dec
scas
ja
and
lahf
add
mov
push
xor
or
scas
and
xor
and
push
pop
mov
jl
ds
mov
fldcw
pop
jge
aaa
cmc
jbe
sub
mov
and
lods
and
xor
icebp
fidivrs
pop
push
or
shrl
add
mov
lahf
pop
cmp
in
adc
jae
movsl
or
dec
filds
testl
in
scas
push
pop
mov
test
xchg
mov
shll
lcall
sti
cli
sti
mov
xchg
mov
movsb
inc
call
stc
jge
sub
adc
and
aas
gs
loop
pop
add
inc
lds
push
fwait
pop
push
mov
test
and
sti
in
jnp
sub
mov
repz
mov
adc
sbb
loop
data16
inc
pop
je
and
pop
cmovge
lods
into
in
pop
or
inc
jbe
movsb
cmp
pop
mov
jb
adc
fidivrl
mov
pop
divb
sbb
leave
stos
jp
push
add
nop
sub
call
xlat
repnz
push
fisubl
mov
xchg
sub
mov
jmp
add
adc
mov
push
push
jcxz
pop
outsb
out
lods
fisubl
inc
cwtl
or
ljmp
test
scas
jae
lret
mov
xor
pop
subl
les
out
mov
fcmovb
pop
cmp
repnz
xchg
mov
imul
in
or
movsb
sub
jp
add
mov
mov
cli
jo
sbb
sub
adc
aaa
in
push
out
pop
test
sbb
or
xchg
jb
sbb
pop
loop
mov
cmp
fwait
gs
int3
test
sub
mov
inc
mov
adc
pop
pop
lock
clc
loopne
push
inc
das
lods
dec
mov
and
fnsave
andb
cvttps2pi
std
mov
outsb
jno
pop
rcrl
pop
pop
ffree
inc
lods
or
cld
push
fcoms
mov
in
or
mov
je
fldt
dec
mov
adc
pop
xor
out
mov
lahf
jns
push
dec
fistpl
and
mov
pop
rolb
add
fiadds
jbe
lahf
out
test
cmp
adc
scas
xor
dec
xchg
dec
ret
adc
push
ja
adc
fbstp
in
mov
or
inc
mov
stos
xor
pop
pop
in
repz
aaa
jg
pop
cld
in
prefetch
or
pop
cmpsl
xchg
jp
jbe
mov
fsts
int
pop
scas
dec
nop
push
fisttpl
pop
fmuls
out
ret
fs
jo
pop
call
xchg
push
push
pop
les
jb
or
call
je
nop
mull
pop
enter
or
jl
pop
add
or
pop
xchg
int3
mov
mov
mov
pop
dec
test
adc
dec
subps
shll
bnd
mov
test
dec
mov
out
push
add
sub
js
xchg
pop
mov
fs
arpl
jne
xor
mov
call
mov
out
loop
ljmp
cmc
mov
mov
pop
stos
or
or
sbb
mov
lds
mov
pop
test
adc
xchg
pushf
cltd
out
sbb
add
and
inc
mov
jo
dec
insb
int
imul
pop
dec
xchg
pop
nop
subl
inc
pop
movsl
aad
adc
fisttpll
adc
mov
adcb
lods
ret
lods
gs
xchg
fcoms
pop
add
test
rcrl
pop
popf
jno
cmp
into
jbe
int
xchg
jp
icebp
sbb
dec
popl
mov
popa
mov
ja
rolb
pop
out
jb
scas
stc
pop
pushf
pop
das
daa
jg
inc
fstps
aas
int
add
cli
add
dec
mov
or
mov
adc
jge
mov
push
test
pop
push
lcall
mov
ds
scas
pop
dec
xor
shlb
push
adc
pop
je
jp
inc
inc
insb
cli
pop
and
lds
lret
adc
out
stos
dec
negb
ja
pushf
adc
scas
cltd
rcrl
sub
cmp
pushw
pop
or
adc
pop
xchg
push
sbb
scas
lret
int3
xor
loope
xchg
sahf
cli
jle
jne
pusha
or
inc
mov
add
xchg
pop
mov
or
movsb
xor
xlat
xchg
inc
cmp
loopne
and
sub
pop
and
lods
push
push
jns
mov
and
in
imul
adc
mov
pop
mov
push
idiv
sbb
and
push
inc
jb
pop
xchg
and
int3
cmpsl
mov
sbbl
ret
and
and
jbe
hlt
pop
or
adc
leave
pop
out
push
and
sub
xor
sbb
adc
fs
pop
outsl
int3
mov
frstor
scas
inc
mov
frstor
and
pop
push
xchg
pusha
lods
pop
aad
mov
and
adc
pop
push
mov
call
pop
dec
lock
inc
add
sbb
jne
add
jmp
sbbl
push
lcall
sbb
adc
sbb
pushf
orl
daa
ror
pop
scas
rorb
inc
jne
mov
ja
mul
sub
leave
mov
mov
fdivrs
adc
jl
push
pop
jns
cs
mov
mov
fsubl
and
jmp
repz
mov
lret
cmp
aas
jg
mov
scas
int
push
inc
push
negb
mov
nop
mov
fsubp
std
mov
xor
mov
xchg
jbe
xchg
pop
subb
mov
std
or
or
sub
push
pop
jae
test
sbb
push
pop
sub
rcrl
cld
scas
pop
mov
add
icebp
dec
lcall
outsb
subb
gs
int
add
xor
lcall
pop
mov
xor
js
inc
je
add
mov
push
inc
jg
mov
adc
push
pop
mov
ret
sbb
popf
cmpl
out
dec
addr16
push
cld
jmp
xchg
dec
cmp
das
mov
xor
jbe
rcrb
in
push
push
sti
daa
push
aad
scas
sub
mov
out
pop
stc
jo
adc
xchg
pop
sti
lds
or
pop
add
dec
mov
mov
test
lahf
mov
aad
add
fcmovne
ds
jbe
inc
stc
mov
pop
mov
jnp
pop
xlat
test
pop
xor
dec
xor
cli
mov
pop
int3
inc
inc
jle
mov
or
sub
mov
lahf
jecxz
cmp
daa
cs
negb
dec
or
mov
je
mov
cmp
dec
mov
dec
mov
cmp
add
aad
pop
mov
sub
pop
int3
call
dec
xor
xchg
sbb
pop
lods
pop
movl
scas
pop
arpl
sbb
add
cmp
jo
mov
lcall
xor
dec
pop
cmpsl
pop
dec
push
mov
lcall
imul
pop
sub
stos
popf
jns
mull
mov
shlb
pop
adc
pop
add
int
pop
pop
lock
pop
inc
scas
sbbl
stos
fstpt
pop
fs
pop
or
add
cli
pop
shll
or
mov
rcrb
push
out
pop
lret
pop
sbb
xchg
mov
lock
imul
sbb
pop
aam
cmp
mov
int
jg
adc
pop
and
pop
aam
adc
sub
call
orl
sbb
mov
cmp
test
fsubrl
push
repz
fcmove
jecxz
pop
push
dec
sub
call
std
dec
fcomps
cmc
arpl
les
scas
scas
xor
sbb
mov
sbb
cmc
pop
or
rclb
arpl
loopne
sub
sahf
pop
inc
xchg
test
ror
adc
in
mov
gs
push
aam
inc
mov
mov
fisubrs
dec
pop
push
bound
or
sbb
xchg
or
arpl
mov
inc
push
loop
pop
xor
pop
into
xchg
sbb
stos
mov
pop
xor
int
add
fadd
or
sbb
mov
pop
clc
subb
pop
cltd
test
std
push
cmp
xor
mov
popa
outsl
ss
cmc
loop
sbb
pop
pop
or
or
ret
aam
scas
bound
lods
movsb
mov
inc
fdivs
cltd
fadds
jb
mov
mov
mov
push
jnp
movsl
scas
add
pop
mov
test
gs
enter
pop
adc
xlat
es
jo
pop
popa
shrl
mov
sub
or
stmxcsr
lahf
loopne
jbe
clc
inc
out
mov
sub
mov
mov
decl
shlb
jo
mov
out
add
inc
pushf
pop
dec
pusha
sbbl
lahf
jbe
pop
lret
in
ja,pt
out
stos
int
cltd
sub
call
fidivrl
fstl
pop
sbb
push
cmp
or
movsl
push
pop
or
sbb
pushf
push
jge
fstpt
pop
fadds
sbb
sub
xchg
decl
insb
je
int3
sub
xchg
inc
cmpsl
js
xlat
fbstp
xchg
jnp
mov
mov
cmp
mov
sarl
and
jle
data16
cmp
movsl
inc
adc
insl
cli
add
pop
mov
pop
fstps
lahf
dec
and
or
lods
pop
mov
inc
sub
fucomp
insl
sbb
add
pop
hlt
jb
sbbb
data16
and
fcompl
repnz
scas
push
lds
sub
pop
xor
fs
mov
cmp
js
pop
nop
bound
mov
jb
and
sti
jmp
and
add
cwtl
in
addps
clc
adc
lahf
gs
add
int
xlat
repz
lahf
fnstcw
cmp
push
jle
out
sbb
sbb
mov
fsub
mov
adcb
xchg
adc
mov
js
lea
inc
leave
cmp
ret
movsb
and
and
push
xor
in
or
stos
add
int
sahf
call
jl
pop
pop
add
push
divps
scas
or
pop
loop
sbb
cmpsl
sub
out
push
jne
sbb
or
outsl
ljmp
push
or
pop
sbb
mov
mov
lea
popf
pop
sub
xor
mov
inc
mov
pop
sbb
or
lret
cltd
scas
mov
negb
mov
pop
pushf
mov
pop
xor
xchg
sub
dec
cwtl
cmc
xchg
xchg
pop
loope
push
es
jle
mov
dec
insl
inc
lcall
add
pop
test
sbb
push
cmp
or
pop
inc
or
dec
mov
das
adc
pop
xchg
fistpll
insb
dec
pop
xchg
pop
add
push
sti
sub
mov
jge
int3
jnp
pop
or
movsb
sub
and
jo
and
pop
cli
pop
inc
pop
imul
inc
pop
push
repz
cli
repnz
mov
daa
rcr
lahf
leave
movsb
dec
mov
pop
sub
xchg
ja
int3
imul
push
mov
and
mov
pop
dec
fdivl
inc
xor
sbb
cld
stos
adc
xchg
add
pop
jbe
aaa
pop
ja
arpl
mov
push
pop
ret
scas
mov
fmul
add
movsl
sbb
xchg
js
mov
pop
cmp
popf
adc
cmp
mov
xorl
ds
pop
xchg
cmpsl
in
dec
call
stos
jb
inc
jp
movl
pusha
dec
sub
sbb
cmc
cltd
js
sbb
pop
mov
mov
xor
int3
or
test
lds
mov
mov
jbe
out
jbe
les
aas
cli
pop
sub
dec
lea
pop
jg
imull
adc
pop
jge
add
fdivl
dec
jae
loope
pop
cltd
out
xor
sbb
and
sarl
xor
in
gs
push
imul
xlat
int3
into
lahf
lahf
nop
in
fldenv
push
push
and
je
shl
movsb
int
sub
inc
jmp
lds
and
sar
push
pushf
jae
insb
or
mov
out
xchg
dec
xor
inc
push
pop
pop
and
dec
bound
pop
inc
in
jb
sub
mov
pop
jl
mov
test
and
xor
mov
inc
lcall
ja
xchg
cli
hlt
stos
xchg
inc
pop
add
sbb
sub
xchg
lods
and
sub
pop
and
and
in
cld
push
rcrb
cs
sbb
mov
bound
dec
dec
cmp
sbb
sti
fwait
aaa
and
jp
pop
pop
jno
jbe
sub
mov
jb
mov
outsl
fistpll
or
mov
lods
dec
pop
out
push
inc
mov
lret
iret
mov
mov
jle
pop
enter
jbe
or
mov
inc
xchg
int3
stos
mov
cwtl
xchg
cltd
pop
in
xchg
push
pop
out
stos
push
xchg
scas
jb
pop
sbb
mov
sub
sbb
rorl
push
mov
mov
fsubrl
jmp
mov
inc
mov
pop
push
int
lret
pop
pop
leave
mov
mov
mov
mov
int
pop
movsb
ret
dec
jae
mov
fstpl
sbb
dec
mov
push
cmp
leave
rcl
fcmove
mov
dec
or
jmp
mov
jecxz
pop
add
mov
call
cmp
push
push
push
je
jp
add
fnop
or
pop
int3
icebp
subl
in
sub
cmp
pop
sbb
jbe
outsl
scas
pop
jl,pn
into
stos
std
sti
cmp
push
xlat
push
pop
mov
flds
xchg
sub
fcomps
add
xchg
pop
and
scas
jge
xchg
movsl
jb
cmp
ret
inc
leave
rol
in
insl
das
jbe
pop
xchg
jno
jecxz
push
pop
sub
lcall
mov
imul
fsubrs
test
inc
xchg
sbb
ss
pop
mov
fcompl
mov
jge
and
inc
cmp
jg
inc
imull
add
lods
dec
arpl
pop
pusha
push
mov
and
shl
pop
jbe
mulb
sbbl
pop
adc
ret
loope
std
dec
outsb
cmc
sub
int
outsl
adc
test
push
fcmovnu
dec
xlat
ficomps
mov
dec
inc
pop
xor
dec
aaa
mov
jp
nop
addr16
fldl
pop
jo
lret
pop
fdivrl
mov
fwait
inc
xor
sahf
ficomps
sbb
lret
dec
and
pop
inc
lods
push
lahf
sbb
into
icebp
aaa
push
out
out
mov
mov
mov
inc
iret
pop
imul
and
int3
rcrl
mov
pop
hlt
mov
adcb
scas
dec
mov
jne
adc
inc
out
movsl
fmuls
mov
js
pop
lock
outsb
enter
push
shl
std
adc
cvtpi2ps
jcxz
enter
stc
aad
ret
inc
xchg
pop
fistl
rorl
hlt
fldcw
jae
cmp
sbb
clc
aam
pop
jnp
sbb
mov
sbb
jle
std
push
inc
int
fimull
test
mov
push
lret
add
pop
mov
or
pop
int3
insl
sub
rclb
push
cmp
roll
mov
call
pop
lret
pop
lods
enter
cmp
pop
push
scas
fisubrl
push
int3
pop
cmpsb
test
inc
shlb
and
mov
pop
jo
mov
pop
mov
mov
icebp
dec
xor
pop
sbb
sub
mov
jecxz
enter
inc
rcrb
pop
aam
sbb
pushf
inc
or
mov
sbb
xchg
mov
sub
lret
mov
hlt
fsub
test
mov
sbb
pushf
pminsw
cld
repnz
lods
fbstp
cli
test
jp
fcoms
mov
in
lock
push
mov
lahf
xchg
push
clc
imul
push
sbb
push
int3
clc
pop
xor
dec
arpl
ret
out
mov
push
push
inc
or
add
jb
sub
mov
lret
pop
pop
mov
sbb
pop
or
mov
pop
lea
insl
pop
cmovl
ljmp
jle
or
pop
and
aam
or
jne
xchg
mov
push
pop
mov
pop
cmp
pop
cwtl
leave
sbb
xchg
and
lret
pop
ja
sub
pop
and
insb
adc
dec
jo
mov
add
mov
jo
sub
pop
pop
add
dec
push
mov
pop
or
jl
pop
or
pop
sbb
call
xor
pop
fidivrs
inc
pop
loop
cmp
pop
pop
mov
dec
mov
cmp
jne
fs
inc
push
aad
loopne
mov
int3
dec
jbe
mov
cltd
xor
leave
pop
addb
ret
pop
pop
shll
push
dec
cmpsl
pop
test
mov
pop
xchg
adc
pop
pop
lods
pop
pop
and
jnp
jp
pop
sti
and
test
clc
pop
add
call
xchg
mov
aad
push
cmp
mov
cmp
xchg
mov
out
pop
mov
mov
insb
int3
sbb
dec
sbb
sbb
and
inc
imul
mov
cld
loopne
pop
push
push
ljmp
loope
cld
add
mov
xor
pop
jbe
into
xor
pop
push
and
int3
pop
sub
lds
cld
push
lock
gs
jo
mov
loope
aaa
dec
adc
int3
xchg
cmp
les
xchg
pop
repnz
sub
xlat
jb
or
jno
call
pop
push
int
cmp
into
fldt
mov
lret
ja
pusha
stos
add
sub
pop
decb
xlat
pop
jo
cmp
rcrb
sarb
stos
fadd
xchg
aam
mov
jo
mov
pop
les
int
pop
push
or
jbe
adc
inc
movsl
pop
mov
int
cmp
cwtl
inc
aaa
pop
jo
fldcw
sub
jno
repnz
in
sub
js
push
subl
int3
lcall
jecxz
cwtl
pop
aas
out
das
adc
pop
fnstcw
push
imul
pop
push
aaa
aam
fyl2xp1
movb
stos
jns
xor
push
and
dec
push
bswap
cmp
mov
cltd
jle
sub
fs
imul
cmpsl
or
mov
and
mov
jmp
add
or
shrb
adc
jns
das
pop
bswap
daa
out
xchg
lret
insl
jecxz
lods
iret
jge
int
out
lods
pop
cmc
xlat
movsl
sub
test
mov
fistps
lret
mov
push
pop
and
int3
mov
pop
push
int
popa
sbb
fstpl
xchg
dec
insb
mov
imul
pop
jb
shrb
test
insl
jae
pop
xor
out
mov
js
sub
out
ret
or
stos
push
stos
pop
inc
cli
xchg
outsb
sub
daa
and
push
dec
mov
lcall
enter
fsubr
lods
mov
roll
mov
xchg
addps
cs
stc
iret
xchg
insl
pop
jno
orl
pop
es
fsubs
stc
adc
jbe
or
ja
aad
scas
pop
movsb
pushf
fstps
mov
cli
out
xchg
mov
adc
js
xchg
cmpsl
pop
loope
inc
enter
mov
lcall
xchg
stos
lea
mov
ds
jge
sub
xchg
mov
pop
pop
rcl
mov
jbe
add
pop
push
mov
xchg
and
int
iret
mov
pop
loope
jbe
jae
rcrb
sbb
dec
adc
pop
jb
fsubrs
ljmp
pop
jns
sub
push
je
xchg
test
mov
push
sbb
leave
push
dec
fdivr
pop
mov
in
mov
pop
pop
cmpsl
fcomps
mov
and
std
ret
pop
adc
add
pop
and
shll
pop
mov
out
mov
jb
adcb
pop
xlat
insl
sub
jmp
sbb
shlb
pop
lcall
mov
jno
or
repnz
leave
icebp
gs
nop
idivl
xor
outsl
jbe
daa
lahf
lods
imul
movsl
fsubrp
pop
adc
and
dec
loop
imulb
pop
aam
aas
outsb
push
xor
fcmovbe
jb
lods
xorb
add
pop
aaa
arpl
shll
sub
lret
sub
rorl
mov
inc
mov
or
fstps
dec
push
mov
leave
pusha
sbb
mov
jns
cmp
orb
sub
jl
imul
sbbl
or
xor
inc
mov
pop
ljmp
pop
jae
dec
mov
dec
adc
sbb
pop
xchg
jecxz
pop
xchg
decb
into
xchg
aam
mov
sub
cs
pop
jge
jns
fidivrl
mov
aam
jo
lods
fisubrl
imul
cmp
inc
pop
or
cmpsl
pushf
add
pop
pop
sbb
xchg
sub
lea
xchg
push
pop
call
cltd
add
scas
pop
leave
sbb
movsl
popf
cmpsl
adc
ror
push
fwait
data16
dec
mov
pop
sub
xchg
xchg
push
mov
movsb
outsb
fmuls
adc
or
jae
stc
scas
push
mov
inc
mov
movsl
test
xchg
inc
xchg
or
inc
out
pop
jmp
cmp
adc
jbe
mov
roll
ret
lahf
lock
pop
in
sahf
cmp
dec
out
int
sbb
pop
mov
dec
mov
scas
push
xchg
in
cs
mov
pop
mov
insl
imul
cmp
pop
mov
inc
jecxz
push
scas
stos
xor
sbbb
test
pop
add
jecxz
outsb
stc
movsl
sbb
mov
ret
mov
inc
inc
jg
pop
dec
sub
jbe
out
dec
int3
pop
inc
sub
pushl
jb
jmp
add
xchg
fnstsw
sbb
repz
nop
adc
iret
xchg
push
jecxz
dec
aas
cmpsb
dec
scas
sbb
cmp
inc
xor
pop
dec
clc
push
ret
push
int
push
dec
inc
mov
jb
stc
test
mov
xor
out
loop
jns
mov
lahf
xor
arpl
xchg
pop
das
dec
push
and
pop
popa
and
cmp
xchg
imul
or
repnz
pusha
pop
pop
or
outsl
cld
and
push
xlat
loop
sub
ds
pushf
lahf
pop
in
pop
sbb
push
jb
mov
pop
cmp
pusha
cmp
aad
fnstcw
mov
int3
out
push
pop
jns
test
sub
xchg
clc
cmp
repz
dec
and
or
cwtl
scas
out
insl
dec
pop
jg
push
or
sbb
jecxz
leave
mov
daa
jmp
or
js
dec
mov
xor
pop
mov
cmp
add
sahf
sbb
fnstenv
mov
jmp
push
push
pop
loope
inc
jp
inc
cmpsl
inc
test
mov
rcll
imul
repnz
inc
dec
scas
cmpsb
pop
stos
push
lcall
jo
sbbl
imul
mov
int
jp
pop
pop
mov
pusha
pop
pop
jmp
lret
xchg
int
loope
jnp
andb
pop
xchg
loop
call
sub
out
push
fisttpl
popa
ja
jecxz
lods
sbb
repnz
add
xchg
or
rclb
pop
add
inc
push
out
mov
sub
sti
addr16
lahf
mov
push
scas
leave
fadd
pop
mov
jb
pop
mov
pop
cmp
pop
hlt
in
or
pop
xchg
test
pusha
in
xacquire
push
imul
sbb
mov
jg
hlt
sub
ds
pop
xor
push
jle
ja
stos
mov
filds
adc
inc
pusha
lcall
or
xor
jmp
inc
or
sub
and
std
cli
sub
lret
test
popf
sahf
xchg
adc
ja
test
std
out
dec
inc
daa
push
sub
xchg
sbb
ret
sub
ds
or
test
pop
jl
imull
push
sbb
sbb
cld
ret
pop
jae
adc
push
sarl
mov
ret
pop
xchg
sbb
int
jbe
ds
push
sbbb
pop
xor
cwtl
sub
mov
movsb
pop
imul
pop
pop
int
pusha
in
sbb
jge
or
push
pop
ss
inc
cmp
pusha
cmp
xchg
mov
aam
mov
xchg
bound
int
adc
cli
adc
and
pop
fsubrp
dec
pop
repnz
mov
das
xchg
sub
xchg
movsb
jmp
or
sahf
dec
dec
xor
scas
mov
stc
mov
mov
hlt
cmp
jb
mov
arpl
cld
int
cmp
cmp
add
add
jg
cmp
aam
jae
push
mov
xchg
jmp
mov
arpl
and
inc
pop
mov
iret
pop
jmp
xor
mov
mov
mov
push
fsubrs
ror
cld
cli
jbe
sbb
imul
or
pop
stc
addr16
roll
sbb
sbb
cmp
lods
popa
adc
jae
sahf
rorl
aas
add
div
mov
pop
arpl
ljmp
or
pop
jecxz
lds
pop
mov
dec
cmc
scas
cmp
xchg
pop
cmp
je
jge
inc
stc
pop
test
out
inc
orl
in
dec
push
mov
test
pop
aam
stc
push
les
cltd
pop
pop
push
imul
mov
xor
and
jmp
stos
jbe
int
jno
sahf
xchg
arpl
stc
cs
inc
mov
into
push
push
mov
cmp
scas
int
ds
hlt
xchg
scas
pop
mov
pop
inc
sbb
dec
jl
dec
int
dec
rcrl
scas
sbb
cwtl
les
loopne
int
in
lcall
push
xchg
shrl
cmp
int
daa
add
xchg
and
into
loopne
cltd
jecxz
outsb
pop
mov
scas
dec
push
jns
and
mov
hlt
and
and
shll
repnz
stos
xorl
popl
sbb
sub
fcomps
leave
xor
fildl
sub
sahf
lea
inc
xor
push
outsb
or
lcall
lret
mov
lret
ja
cs
pop
jo
iret
call
sbb
mov
in
mov
sbb
pop
jbe
cmp
or
loope
jns
ficompl
and
sbbb
lahf
xchg
push
dec
push
sub
cmpsl
mov
push
jbe
pop
and
cmp
into
cmp
lods
pop
mov
lods
mov
xchg
mov
adc
push
fsts
cmpsb
dec
popa
in
pop
mov
jb
pop
add
hlt
cli
dec
out
pop
inc
sbb
nop
imul
fistpl
and
pop
lea
cmp
out
loope
mov
leave
dec
or
pop
pop
mov
loop
aaa
outsl
or
jnp
sahf
xchg
xor
sbb
sbb
std
pop
sbb
xchg
push
push
or
cmc
mov
lahf
addr16
pop
mov
mov
fs
cmp
push
and
push
jo
mov
pop
xchg
mov
stc
idivl
inc
aam
out
mov
mov
scas
scas
sbb
sbb
sub
sub
stc
xchg
xor
pop
insl
stos
int
int3
imul
pop
adc
push
jb
sub
shlb
mov
test
jnp
jb
xchg
push
adc
sub
sbbl
xchg
test
mov
pop
incb
leave
lods
jmp
or
mov
dec
adc
cltd
and
mov
mov
sti
subl
xchg
pop
mov
in
pop
inc
into
mov
lds
or
pop
je
jne
adc
add
orl
lds
jg
pop
shlb
cwtl
sbb
es
jno
int3
cmp
push
out
clc
nop
cltd
dec
test
es
mov
push
mov
pop
fcoml
lcall
adc
gs
xchg
dec
aam
mov
add
ret
fnstsw
and
je
hlt
dec
pop
sub
pop
loop
sbb
xchg
xor
mov
sbb
pop
stc
sbbl
xor
jb
sahf
stos
mov
pop
pop
cmpsl
jmp
jl
shll
pop
hlt
int
jne
xchg
inc
mov
mov
arpl
jp
pop
and
sub
movsl
fwait
data16
data16
inc
mov
mov
int
pop
lahf
inc
ds
jecxz
ror
in
jbe
data16
lahf
aad
in
flds
push
sub
fidivs
sub
fbstp
test
jns
cmp
mov
jb
sbb
insb
int
inc
cld
stos
fidivrs
in
pop
pop
cli
jecxz
inc
lahf
adc
outsl
inc
pop
sahf
ja
pop
icebp
cmpsb
jbe
add
mov
mov
hlt
pop
test
in
inc
jp
mov
cltd
cmp
jecxz
lahf
pop
push
testb
out
fbstp
andb
jno
jbe
rcrb
repz
movsb
pop
insl
and
movsl
pop
cmp
in
xor
imul
es
pop
or
jge
adc
je
sti
jno
sahf
jnp
popf
repz
negb
data16
jecxz
fnstsw
push
in
int3
pop
repz
add
cmpsl
lret
nop
cmp
pop
cs
rol
sub
push
pop
sbb
adc
in
data16
loop
int
pop
push
cmpsl
mov
mov
push
or
adc
enter
or
popa
pop
push
aas
xchg
dec
jae
rcrb
std
sub
imul
fsts
dec
in
mov
inc
xor
sub
xchg
push
sbbl
push
stc
xchg
push
imul
movsb
shrl
imul
mov
nop
xchg
xor
mov
mov
pop
cmp
scas
jge
out
sbb
mov
xchg
mov
xchg
aad
hlt
aam
dec
or
jbe
movsl
cmpsl
sbb
lods
lret
out
mov
inc
adc
ljmp
dec
mov
cli
loop
pop
js
int3
dec
icebp
jmp
repz
xor
push
pop
sub
mov
jbe
mov
iret
sbb
ja
loope
sysret
dec
popf
js
lret
sub
test
mov
into
call
pop
test
mov
lcall
loope
jmp
fistps
jb
push
notl
and
pop
cmp
lret
mov
popa
cltd
testb
shl
mov
push
push
pop
or
nop
stc
add
mov
inc
orl
sub
mov
aaa
out
je
xchg
dec
dec
bound
dec
movsb
jecxz
pop
pop
int3
out
repz
aas
mov
or
iretw
xchg
and
sbb
mov
stos
pop
loope
lods
or
sbb
pop
daa
cmpsl
mov
dec
divl
xchg
mov
sub
cmp
lahf
mov
pop
gs
jge
jne
mov
pop
loopne
mov
inc
mov
sbb
mov
nop
pop
or
cs
mov
cli
jno
dec
pop
andl
push
loop
leave
std
js
scas
sub
fadd
ja
test
adc
push
mov
lcall
fs
sub
repnz
nop
ret
dec
xor
pop
jae
mov
push
mov
insl
push
xor
pop
int
push
mov
pop
sbbl
jns
sarl
ja
js
pusha
sub
cmc
loop
arpl
dec
fs
lock
fnstenv
pop
loopne
mov
push
pop
xlat
mov
cmpl
ss
leave
ja
lcall
adc
scas
in
jnp
fsubl
fadds
mov
xchg
mov
mov
xchg
jno
xor
and
mov
mov
lea
and
dec
in
lret
pop
xor
or
or
addr16
ljmp
in
lret
pop
sbb
mov
scas
loopne
sub
int3
mov
lock
dec
int
pop
adc
xlat
inc
sbb
and
int3
pusha
rcrb
int
adc
xchg
xchg
pop
inc
sbb
imul
pushl
scas
xor
out
ror
fldcw
out
xchg
lds
cmp
dec
cmp
test
sbb
xor
andb
ror
cmpsl
data16
jo
dec
mov
int3
imul
int
mov
push
mov
pop
notl
adc
xchg
sbbl
jp
jne
mov
std
rcrb
fdivrs
mov
inc
int3
repnz
pop
in
iret
movsb
leave
mov
scas
or
mov
aas
lret
jne
repnz
sbb
fcomps
pop
xchg
lock
push
fnsave
outsl
mov
mov
sbb
scas
mov
gs
jbe
cltd
sub
mov
push
or
sbb
pop
mov
movsl
sub
fidivrl
jb
jg
iret
pop
dec
jle
ret
outsb
aam
fistpl
xchg
loop
jmp
pop
imul
mov
cmp
mov
push
cld
pop
cltd
daa
cmp
pop
push
loopne
aad
mov
shrl
jb
xchg
in
dec
add
test
fadds
imul
fwait
pusha
insb
mov
arpl
push
fwait
adc
push
inc
ljmp
aam
push
nop
sub
ror
dec
sti
jge
jecxz
scas
pop
sbb
in
fidivrl
dec
aaa
scas
inc
push
mov
insl
aad
aas
pop
fwait
pop
push
jl
pop
pop
les
cwtl
jecxz
adcl
cmp
fcmovu
mov
inc
xlat
jae
testl
shlb
and
xchg
pop
ljmp
andb
frstor
adc
mov
mov
or
or
lods
sub
lods
mov
enter
mov
test
fs
mov
pusha
and
mov
lods
fsubl
ffree
inc
and
pop
inc
pop
mov
add
fcomps
mov
je
push
push
mov
movsb
scas
xchg
fmull
sbb
lods
or
jmp
std
lret
je
jg
add
cmp
sbb
mov
pop
faddp
loope
pop
dec
imul
push
pop
add
sbb
pop
scas
or
fldenv
lahf
mov
cmp
cld
stc
nop
and
pop
or
inc
jbe
push
pop
int3
sti
mov
add
xchg
mov
mov
ret
or
arpl
aad
adc
jmp
es
fstpt
and
push
sbb
pop
test
loop
pop
lea
mov
xchg
out
adc
add
cmp
leave
icebp
frstor
or
int3
push
sbb
jae
sbb
lahf
mov
fsts
pop
sbb
ret
imul
sub
sub
push
lcall
mov
js
and
or
mov
xchg
or
pop
cltd
pop
mov
lcall
pop
push
xchg
xchg
or
dec
and
mov
pop
push
push
rcr
sti
mov
pop
pminsw
les
ja
int
mov
shlb
jle
sbb
cltd
add
xchg
pop
adc
jecxz
inc
jmp
sub
mov
call
xor
mulps
jb
lret
jbe
icebp
pop
pop
push
clc
pop
sbb
movsl
sti
push
push
pop
int
jbe
pop
xchg
mov
jns
xchg
or
cwtl
adcb
add
lret
fs
inc
xor
push
sbb
stc
sbb
insl
push
inc
adc
jae
pushf
sbb
gs
cmc
inc
xor
lahf
aas
mov
mov
pop
add
dec
mov
sahf
jb
mov
addr16
jle
pop
pop
cmpsl
sbb
fucom
filds
mov
jmp
xchg
jo
push
xor
insb
insl
fidivl
enter
and
in
movsl
pop
dec
int
pop
dec
push
test
pop
and
adc
pusha
jbe
cltd
scas
mov
mov
xchg
pop
mov
lock
out
ret
pusha
pop
adc
stc
cwtl
jbe
jmp
lea
out
mov
adc
mov
movsb
sub
lret
xchg
sbb
sbb
int
mov
adc
dec
nop
aas
movlps
jbe
sub
adc
push
fidivs
loop
test
pop
test
push
sbb
sub
sbb
sub
sub
push
mov
pop
gs
loopne
jbe
and
xor
mov
xchg
add
jge
inc
pop
sbb
cltd
jbe
pop
mov
in
outsl
mov
mov
popf
sti
mov
fldln2
dec
leave
arpl
xchg
cmpsb
jp
les
pop
mov
es
adc
adc
dec
cmp
gs
pop
int
ljmp
add
ret
stc
mov
pop
shr
imull
mov
cmc
jp
js
pop
dec
mov
ja
pop
mov
movsb
fucom
sbb
int
mov
dec
lcall
sar
mov
repz
pop
lds
dec
stc
jno
and
xchg
xor
inc
mov
flds
jo
xchg
gs
or
pop
fmull
stc
push
pop
dec
dec
dec
xchg
pop
pop
int
in
rol
movsb
mov
enter
pop
les
pop
mov
decl
pop
je
std
xchg
stc
xlat
dec
push
pop
and
add
int
es
js
pop
mov
mov
aas
push
mov
push
push
std
mov
in
data16
and
in
rcrl
sarl
stos
popf
inc
sbb
ficompl
rcrl
mov
mov
sub
or
sub
icebp
rol
mov
pop
add
cmpsl
int3
pop
and
xchg
fs
leave
bound
dec
cmp
fildl
cmp
lret
jp
cwtl
jns
pop
push
pop
xchg
jo
mov
push
jbe
pop
gs
lret
inc
sub
add
xchg
dec
in
int
jg
mov
sbb
sub
les
or
pushl
stos
inc
add
test
adc
movl
int
fwait
inc
push
xchg
fisubrs
mov
jmp
pop
and
sub
nop
dec
rcr
xchg
push
mov
xlat
inc
fsubs
mov
pop
mul
enter
pusha
stos
movsl
add
sbb
or
dec
xlat
test
leave
add
jbe
pop
hlt
xchg
mov
out
lahf
or
pop
insl
dec
inc
mov
aad
add
jl
shll
mov
pop
js
nop
repnz
cmpsl
xchg
stos
mov
push
pop
lcall
in
mov
fsubl
pop
popf
les
ficompl
pop
sbbb
sub
repnz
push
push
hlt
dec
mov
xor
in
out
mov
aaa
mov
inc
pop
mov
cmp
and
push
fs
xchg
fwait
mov
mov
out
xchg
dec
std
push
pop
fisubrl
inc
pop
ret
jle
pop
inc
fistps
dec
pop
rolb
mov
dec
int
mov
dec
popf
stos
data16
lods
sub
fldl
adc
mov
enter
push
outsb
out
xor
rorb
pop
fbld
inc
dec
jo
stos
pop
hlt
fimull
pop
jbe
and
mov
inc
sub
ret
xor
sub
sbb
rol
mov
mov
xor
cmc
iret
pop
js
es
aaa
pop
jecxz
adc
add
scas
jns
pop
sub
test
dec
jo
xchg
fidivl
loopne
xor
xchg
pop
int3
aam
xchg
sti
adc
imul
pusha
pop
jl
dec
cmp
pop
fimuls
sbb
sbb
pop
ljmp
int
movb
rcll
pop
cmp
inc
pop
xchg
mov
popf
in
cmp
dec
int3
insl
sti
add
pop
jbe
lret
arpl
sub
mov
int3
ja
jmp
mov
setb
xchg
fsub
es
dec
imul
movsl
pop
cmpb
xor
mov
negl
sbb
movsl
pop
test
stos
add
orl
out
jns
mov
fcomps
ret
sbb
scas
stos
rcrb
jo
mov
inc
and
mov
mov
pop
cwtl
push
fimuls
fsubs
aad
insb
or
pop
cmpsb
sbb
lods
lcall
mov
xor
or
fisttpl
jo
mov
outsb
mov
lds
pop
push
push
hlt
es
dec
add
push
lock
loop
mov
xor
inc
xor
sub
pop
mov
repnz
nop
jne
pop
sbb
inc
and
pop
dec
push
mov
jl
shl
pop
mov
mov
add
cmpsl
pushf
inc
and
or
pop
pop
push
js
insl
out
inc
add
mov
lock
insb
dec
bound
ss
js
mov
cmc
lahf
mov
push
popf
ja
int3
add
rolb
mov
jae
fwait
xor
or
pop
outsb
xor
push
jo
sbb
cwtl
and
inc
mov
int
sbb
test
sbbb
xchg
pop
and
outsb
push
jecxz
imul
jns
in
aas
push
or
fcomps
or
sub
dec
xchg
fiaddl
ret
mov
cmp
mov
adc
mov
stos
imull
bound
mov
test
out
dec
sub
pop
scas
adc
push
call
cmpsb
pop
pop
in
daa
int3
and
fildl
xchg
mov
pop
pop
dec
jl
pop
dec
cmp
pop
idivl
bound
pop
xor
cmp
mov
ds
mov
pop
imul
pop
sbb
xchg
les
xor
pop
out
jp
or
cltd
out
cmp
popa
pop
in
jle
pop
enter
jl
mov
jno
dec
ficoms
sbb
pop
mov
or
pop
sbb
dec
mov
fwait
mov
mov
je
mov
xor
and
sub
pop
dec
and
jne
fldenv
outsb
mov
pop
xchg
pop
adcl
push
insb
jnp
imul
mov
push
mov
mov
and
xchg
push
pop
pop
bound
xor
dec
lret
lods
cmc
shlb
mov
scas
out
pop
sub
dec
fwait
jge
mov
jecxz
push
test
add
add
daa
lods
inc
xchg
cli
les
mov
cmp
add
daa
pop
jb
mov
int3
jmp
mov
add
and
push
mov
pop
iret
dec
push
mov
pop
dec
lods
adcl
dec
cmpsb
inc
popl
sbb
sbb
pop
clc
or
xor
ja
pop
or
jne
jg
add
mov
pop
mov
enter
mov
sarb
stos
fcomi
call
pop
xor
mov
inc
lods
rcrb
pop
or
int
repnz
jle
add
mov
repnz
leave
std
or
outsb
sbb
jne
int
in
dec
sub
mov
pop
sbb
dec
cwtl
mov
jg
mov
dec
pop
icebp
negl
sub
mov
mov
jns
fsubr
mov
pop
mov
sbb
loopne
mov
pop
push
mov
pusha
repz
push
sub
xchg
jns
mov
dec
sbb
push
mov
inc
dec
int
fbstp
pop
pop
xchg
pop
jbe
dec
pop
clc
or
jmp
dec
mov
dec
loope
mov
inc
loop
pop
mov
lea
cmp
fstl
dec
xchg
clc
fcompl
aam
imul
and
out
add
int
iret
xchg
nop
mov
jb
cmp
cmp
pop
dec
int
cmpsb
cwtl
jg
mov
les
cmp
pop
jmp
or
je
mov
xchg
pop
add
inc
dec
fbstp
xchg
jb
out
pop
pop
inc
mov
inc
mov
sbb
mov
push
xchg
jnp
das
sahf
pop
cwtl
jbe
leave
mov
hlt
sbbl
mov
pop
loope
in
cmpb
inc
pop
dec
sub
ja
dec
mov
pop
int
or
nop
dec
adc
pop
dec
xor
rorl
stc
pop
push
jge
aad
int3
push
and
and
mov
sub
adc
pop
mov
dec
std
push
sbbb
dec
and
daa
and
push
hlt
xchg
inc
cmp
lods
push
enter
int3
js
mov
pop
int
divb
pop
inc
pop
and
int3
into
daa
jo
jmp
push
sbb
leave
das
jno
lea
dec
sub
cs
mov
and
pop
mov
mov
pusha
or
gs
imul
add
bound
lea
pop
jbe
out
jae
into
cltd
mov
mov
pop
int
adc
xor
insl
aaa
fstpt
jecxz
outsb
or
sbbl
outsl
pop
loopne
xchg
xor
xor
pop
pop
cli
orb
mov
cld
pop
push
pop
push
push
rcll
stos
jnp
or
fldenv
jg
mov
addr16
and
push
lds
icebp
push
aas
push
out
mov
addb
scas
pop
shll
mov
sub
dec
jo
mov
push
into
inc
pop
daa
sub
scas
push
idivl
lods
cmp
stos
in
and
pop
add
sbb
movups
mov
jb
jmp
xchg
fldl
mov
clc
add
lcall
dec
rolb
arpl
inc
and
stos
repz
cmpsl
jecxz
pop
push
mov
rcrl
cmovnp
mov
mov
jg
xor
lret
scas
sbb
mov
ds
jge
mov
pop
push
mov
loop
stc
and
aaa
cmp
imul
icebp
cmp
dec
std
mov
add
or
roll
cltd
push
pop
adc
mov
push
fcoms
inc
lods
pop
xor
sti
enter
pop
or
mov
mov
test
lock
pop
movsl
add
pushf
ss
sbb
jno
mov
int
pop
mov
mov
call
sbb
cmp
nop
cmp
fcmovnu
cmp
pop
aad
lods
mov
xchg
mov
ljmp
pop
sbb
int3
or
jmp
lods
dec
ss
dec
xchg
pop
out
shl
es
jo
fidivs
cmp
jae
pusha
pop
into
imul
leave
pop
int3
sub
dec
xor
psubusb
jnp
jecxz
push
data16
pop
rcrl
cmpsl
mov
mov
sub
int3
repnz
int
push
loop
lret
adc
mov
xorb
fildl
jecxz
cmp
scas
adc
call
or
cwtl
mov
add
imul
repnz
jns
pop
jb
jge
or
dec
dec
add
movsb
int
mov
out
stc
jle
cmp
adc
mov
out
jge
pop
scas
pop
pop
and
cmp
lods
sbb
sbbb
xchg
stos
pop
adc
out
push
xchg
pop
pop
sub
lret
int
inc
in
outsb
out
bound
jge
xchg
mov
cmpsl
cltd
ljmp
ja
leave
mov
mov
xchg
bound
decl
push
push
mov
repz
sub
pop
pop
push
pop
jbe
popf
push
into
adc
adc
mov
jb
push
sub
jmp
int
mov
jg
inc
les
fistl
push
je
lret
cmc
test
pop
outsb
lahf
jge
jbe
sbb
adc
or
pop
mov
fcom
aad
in
stc
xchg
mov
decl
jge
adc
pop
pop
sbb
rcrl
shl
push
fisubrs
inc
mov
pop
dec
push
out
dec
and
outsb
pop
sbb
mov
sbb
cli
dec
stos
lahf
shll
mov
das
pop
pop
enter
movsl
xchg
mov
pop
xchg
cmp
and
adc
jo
xchg
pop
gs
mov
push
jo
mov
xor
cmp
xchg
cmp
incb
adc
cmp
mov
hlt
in
repz
pusha
pop
or
icebp
push
fstl
mov
sahf
jl
rcll
and
enter
cmpsl
pusha
jbe
sarb
sub
pop
mov
sbb
fcmovu
mov
push
mov
pop
pop
mov
add
mov
lods
mov
call
mulb
cmp
rcrl
mov
rolb
and
jo
mov
xchg
push
xchg
idiv
pop
iret
push
mov
push
dec
xchg
pop
in
and
loopne
mov
bound
mov
mov
lret
and
or
ds
xchg
pop
inc
add
aam
pop
movsb
dec
pop
xchg
mov
mov
cwtl
jns
test
es
jbe
jmp
mov
pop
cmc
push
int
addr16
cmpsb
pop
and
js
loopne
dec
and
pop
push
les
inc
lahf
adc
leave
xor
sbb
sbbb
push
repnz
xchg
push
jo
mov
or
sub
add
arpl
mov
mov
jb
xor
mov
pop
cmc
jp
pop
xor
std
int3
sub
add
mov
add
lret
gs
or
mov
mov
int
mov
cs
cli
out
xor
and
inc
push
dec
mov
mov
mov
lret
je
sbb
sbb
aam
inc
jns
pop
sarb
lds
sbb
in
pop
pop
cli
cmpsl
mov
clc
test
mov
cltd
dec
aaa
lea
jge
cmp
insb
sbb
fdivr
addr16
add
scas
jno
scas
adc
add
mov
sbb
int
sbb
pop
adc
pushf
xchg
push
pop
sbb
and
subl
and
mov
mov
pop
mov
push
stos
inc
mov
mov
pushf
pop
nop
sbb
or
xorb
inc
lret
outsl
mov
nop
test
out
mov
jb
inc
sub
mov
decb
insb
inc
adc
out
inc
andl
out
pop
insb
or
fsubrs
dec
jmp
inc
rcrb
dec
pop
negl
sub
mov
in
push
push
pop
sarb
adc
jecxz
cwtl
pop
ja
mov
cli
mov
xchg
fidivrl
stos
lcall
adc
fimuls
outsb
test
pop
dec
fadds
repz
cli
sahf
sbb
sbb
in
int
push
mov
fdivs
mov
and
xchg
loope
sbb
es
leave
incl
les
sub
shlb
aad
sub
cmpsl
andl
aas
or
xchg
pop
adc
test
mov
out
dec
fisubrl
pusha
xchg
jg
aad
int
push
pop
cltd
xor
sub
pop
dec
ljmp
fisttps
mov
gs
dec
pop
mov
dec
lock
mov
dec
dec
lods
inc
pop
mov
jle
add
fistpl
inc
mov
pop
popa
into
imul
jbe
in
test
ss
loope
lods
imulb
movsb
popf
pop
in
repz
add
scas
fwait
out
cmpl
lret
pop
adc
lds
pop
and
dec
cltd
sub
mov
dec
insb
aas
jo
mov
hlt
clc
or
sbb
mov
or
mov
in
rclb
adc
pop
xchg
fdivs
pop
cld
mov
xchg
jae
stos
push
into
sbbb
mov
mov
adc
mov
cmp
mov
mov
stc
fsubrs
adc
jnp
decw
and
or
jb
nop
rcll
pop
or
icebp
inc
inc
int
std
aam
insb
daa
and
loop
cmpsl
fstps
pop
pop
cmpsb
pop
data16
dec
ja
lds
mov
jl
sbb
jge
clc
aad
adc
movsb
cmp
mov
daa
fxtract
pop
pop
mov
pop
sbb
rcrb
fstp
sub
int
push
or
xor
add
cmp
pop
es
rcrb
stos
sbb
adc
jo
pop
imul
sub
pop
in
mov
lahf
jg,pn
scas
imul
pop
mov
loop
mov
jg
push
jl
xor
mov
mov
sarb
cltd
cld
add
enter
add
push
inc
aad
call
daa
lcall
cltd
fcoml
mov
adc
mov
adc
scas
jbe
out
out
mov
fldcw
bnd
enter
push
ret
pop
mov
shr
jo
fadd
cs
mov
cmp
and
imul
clc
cmp
mov
aas
shl
fistpll
lea
rorl
adc
iret
cmp
xor
sahf
and
in
pop
jl
in
nop
int3
or
mov
adc
pop
jnp
lds
pop
jl
jo
test
pop
ss
ret
das
mov
int
lds
stos
imul
sbb
pop
in
in
shll
mov
dec
pop
je
and
fsubr
sbb
imul
es
insl
mov
push
jb
pop
xor
adcl
js
fsts
scas
jne
jo
pop
les
inc
push
pop
mov
movb
xor
repz
pop
push
jbe
jp
in
dec
je
rcrl
and
addr16
sbb
xchg
xchg
adc
dec
int
pop
cmp
popf
in
jb
dec
addr16
in
sbb
push
cmpb
int
mov
jb
sarb
fidivs
inc
mov
mov
mov
mov
aam
xor
jbe
mov
sarb
or
pop
dec
sbb
jne
jmp
bound
fcomp
int
stc
mov
pop
sahf
call
xlat
sbbb
pop
movb
xor
mov
jo
mov
jmp
push
sub
pop
pushf
jp
fwait
into
mov
xchg
sub
xchg
stos
push
mov
xor
cmpsb
pop
mov
pop
test
cmp
pop
dec
stos
popf
dec
or
repz
insl
std
jo
pop
fsubl
xlat
pop
inc
mov
loop
pop
ds
int
mov
xchg
lret
fimull
scas
or
mov
fwait
pop
out
jnp
shll
jne
repz
pop
sub
jb
push
pusha
dec
lret
ja
and
pop
adc
or
scas
jo
shrl
push
lea
ljmp
lahf
mov
xchg
cwtl
pop
xchg
in
mov
pop
out
pushf
push
cltd
cmp
cmp
push
arpl
mov
mov
xor
inc
pop
clc
int3
pop
ret
int
lods
repnz
in
sti
pop
jbe
cmp
movl
pop
mov
movsl
pop
jbe
jne
data16
int3
pop
xchg
xor
jle
jg
int
sub
push
stos
mov
push
jb
clc
pusha
push
mov
pop
lods
jo
enter
sti
pop
add
inc
jge
jp
push
mov
mov
xor
or
std
jge
pop
mov
mov
lahf
pop
pop
push
mov
xor
push
shlb
xchg
mov
scas
test
mov
lret
mov
jg
lods
push
mov
ja
faddl
sbb
cmpsl
mov
xchg
inc
or
adc
out
sub
dec
les
adc
push
dec
test
stos
push
loopne
jbe
push
mov
jle
push
lods
or
sbb
js
jnp
or
pop
into
pop
cmpsb
cld
pop
dec
jae
mov
pop
out
lret
mov
aad
lcall
jbe
ret
sti
or
mov
add
xchg
fadds
pop
xor
test
sbb
int3
clc
or
sbb
call
cltd
mov
add
nop
push
sub
in
mov
pop
mov
popf
je
and
mov
sbb
xor
push
dec
aad
iret
sub
jno
std
mov
pop
repnz
outsb
inc
cmp
jb
jecxz
ja
sbb
sub
push
xor
jl
imul
mov
inc
mov
or
pop
sub
xor
inc
inc
add
insb
xlat
cmp
mov
or
sub
mov
scas
sti
xchg
xchg
sbb
push
push
jb
push
sbb
pop
je
iret
lret
in
xchg
fsubs
cltd
nop
shlb
daa
pop
mov
lret
addl
rcrl
xor
jp
mov
pop
sub
pop
mov
mov
pushf
loope
mov
mov
adc
and
sbb
test
fcompl
dec
push
fsubrp
sbb
pop
xor
sub
pop
push
pop
cmp
pop
pop
jle
out
sbb
xchg
addps
mov
and
fisttpll
pop
pop
lret
lea
int
push
loopne
gs
pop
dec
mov
inc
pop
int3
xor
out
scas
andl
xchg
lea
fisubrl
push
jecxz
push
jl
test
xchg
cwtl
pop
xchg
adc
cmpsl
inc
int3
sub
arpl
adc
cmp
jae
inc
scas
je
xor
add
fcomps
dec
and
pop
pop
out
cmp
into
stc
and
pop
pop
adc
fbld
xlat
pop
push
mov
dec
adc
pop
insb
hlt
push
xchg
cltd
repz
jne
rcrb
jle
pop
in
fsubr
dec
arpl
pop
xchg
or
dec
cmc
nop
add
imul
add
clc
cltd
test
pop
pop
sbb
lds
dec
xor
mov
fwait
inc
lock
decb
insl
mov
dec
fdivr
lods
sahf
jp
int
xchg
adc
sar
pop
rolb
cmp
sbb
scas
lods
mov
pushf
clc
mov
adc
sbb
mov
in
cli
adc
lea
mov
std
outsl
dec
xchg
jnp
pop
rcrl
into
cmp
inc
inc
pop
in
inc
mov
cmp
pop
aaa
pop
mov
mov
data16
stos
dec
das
dec
mov
scas
pushf
xchg
mov
sub
add
sbb
scas
mov
mov
mov
and
or
push
scas
hlt
mov
sar
pop
fbld
stos
ja
sub
push
jg
mov
int
mov
sub
inc
pop
or
icebp
jo
mov
scas
pop
ret
mov
add
sub
jmp
test
xor
jb
pop
pop
sti
cmpsb
sub
shlb
push
aad
xor
mov
int
mov
push
addr16
mov
ljmp
pop
out
sbb
outsl
ret
push
cmp
pop
into
in
dec
hlt
leave
lret
vaddsd
push
cmp
and
dec
xchg
pop
jge
add
pop
jne
jl
bound
sbb
lcall
loopne
mov
inc
mov
lea
jge
pusha
inc
fcmovu
cmp
pop
mov
adc
arpl
sub
leave
fcomps
lods
xchg
pop
mov
dec
xor
pop
int
xchg
jno,pt
in
jp
xchg
or
ja
push
add
std
cmp
mov
pop
cmp
jge
sbbb
gs
cmp
pop
pop
cmpb
xchg
out
adc
loop
and
sub
push
jno
xor
into
add
loop
test
lods
mov
pop
jecxz
sbb
pop
dec
dec
fs
and
lods
jnp
push
scas
sbb
mov
mov
xchg
ror
pusha
adc
jl
sbb
mov
pop
filds
dec
xor
xchg
pop
jb
mov
sub
mov
test
pop
mov
xor
lret
xlat
rorb
lret
icebp
inc
sub
jo
mov
test
shll
mov
jmp
insb
and
mov
dec
mov
inc
mov
dec
pop
lods
out
mov
adc
bnd
pop
mov
jno
fstpl
sbb
pusha
xor
sti
cmp
pop
pop
sar
lcall
push
int3
or
sbbl
sub
jo
hlt
mov
insl
xchg
sub
out
leave
int3
inc
pop
inc
mov
fnstcw
outsl
mov
sub
adc
rcrl
and
out
jo
jb
test
imul
loope
aaa
mov
lcall
mov
rcrb
pop
mov
aam
pushf
mov
pop
int
fld
pop
stos
pop
lods
or
pop
dec
jmp
push
mov
cmp
cmp
dec
cmp
fstps
scas
dec
fs
xchg
push
mov
cmpsl
ss
cmp
mov
data16
dec
xchg
dec
pop
in
std
mov
mov
mov
cmp
movsb
maskmovq
testl
sarb
pop
pop
add
xor
jg
ret
pushf
aam
pop
movsb
pop
mov
inc
pop
pop
leave
sbb
xchg
mov
pop
push
dec
adc
lahf
lcall
adc
pop
dec
and
xchg
mov
stos
rorl
jbe
pop
jl
mov
inc
cmpsb
pop
pop
mov
inc
out
mov
lahf
adc
lods
jecxz
pop
push
inc
test
dec
xor
jbe
popf
jge
and
cwtl
xchg
fstl
cmp
ret
mov
inc
pop
jmp
xor
pusha
inc
pop
dec
repz
jge
fcmovb
out
in
push
mov
cmp
data16
jb
stc
fistps
aas
dec
in
xor
add
pop
inc
stos
sbb
pop
stos
test
xchg
les
lret
popa
pop
jb
jo
jno
sbb
xlat
fwait
cmp
and
mov
minps
push
pop
xor
mov
pop
pop
push
sbb
or
int
in
addr16
aas
pop
adc
repz
jo
jbe
cmp
in
pop
dec
and
sub
jb
bound
push
sbbb
cmp
insl
inc
sub
sub
pop
dec
push
xchg
pop
call
pop
dec
cltd
pop
in
sti
or
lea
sbb
fsubrl
leave
fnstenv
jl
pop
push
fcomps
cmpsb
pop
je
fst
test
cmp
dec
shlb
adc
adc
fists
int
mov
or
jp
pop
inc
aaa
adc
imul
mov
mov
int
dec
inc
mov
cmpsb
pop
gs
fs
and
push
sub
enter
mov
inc
pop
mov
push
in
push
cli
mov
pop
adc
lcall
aam
sub
arpl
pop
imul
in
or
inc
pop
mov
mov
pop
push
adc
aaa
sbb
imul
int
test
and
call
sbb
mov
mov
or
not
sbb
std
xor
adc
test
out
or
pop
jecxz
mov
xor
ret
sbb
addb
ljmp
cmc
cld
jl
pop
int
xchg
lret
lahf
push
add
mov
aad
jecxz
jbe
pop
adc
sbb
cmp
mov
and
aad
sbb
test
mov
int
inc
fwait
adc
fistpl
test
pop
inc
and
pop
movsl
je
pop
sub
dec
mov
mov
push
test
sub
stos
lods
pusha
lret
fidivrl
push
xchg
lahf
pop
mov
jns
pop
jge
pop
mov
add
jno
push
sub
xlat
adc
ffreep
mov
jns
xchg
lret
xchg
cmp
mov
outsl
or
js
adc
test
ds
mov
cmpsl
rcll
out
mov
lods
mov
pop
or
int
aam
popf
jae
into
jl
dec
pushf
add
cli
mov
loopne
test
inc
mov
pop
fiaddl
mov
dec
pop
call
fstpt
mov
inc
pop
xor
cmp
jns
ss
aam
mov
or
mov
mov
fs
dec
jb
arpl
pop
cmp
nop
dec
push
jbe
pop
pop
ss
sub
pop
and
adc
dec
jbe
jg
movsl
ds
mov
sub
repz
pop
add
add
out
pop
sbb
notb
es
gs
pop
jno
fucom
xchg
mov
or
lahf
cmp
xchg
sarb
or
rep
sbb
lret
jb
dec
push
cmp
mov
fcompl
sbb
mov
xor
push
push
lcall
lcall
out
lret
xchg
jbe
sub
call
int
pop
xchg
dec
dec
push
sub
popa
mov
mov
cmpsb
pop
sbb
pop
jbe
xchg
push
mov
enter
test
pop
scas
lret
sbb
mov
mov
icebp
pop
lods
aam
int
fdivrl
pop
and
jl
stc
pop
addr16
pop
fldenv
push
ja
xchg
xchg
stos
adc
inc
je
pushl
testb
mov
inc
mov
lods
jge
mov
je
add
push
inc
pop
ret
cmpsb
sbb
pop
pop
mov
sub
pop
pop
xor
jns
fcompl
xor
pop
mov
dec
mov
pop
inc
inc
jmp
adc
out
aad
mov
das
ja
imul
movsb
mov
pop
repnz
enter
fcmovnbe
ret
fdivs
dec
inc
or
dec
mov
mov
pop
lahf
int
lods
pop
cwtl
hlt
and
fimuls
jg
cli
pop
xlat
pop
pop
clc
loopne
xor
std
jp
ret
leave
jb
repnz
testb
push
scas
mov
or
int3
inc
pop
das
mov
add
js
add
dec
and
and
jmp
jbe
bound
or
sub
enter
loop
mov
lret
sbb
inc
push
mov
scas
jb
push
fisttps
aas
test
pop
xlat
stos
pushf
push
loopne
cld
pop
xor
mov
push
push
mov
push
icebp
sbb
js
pop
ret
sub
pop
lret
pop
rdtsc
mov
es
push
xchg
call
and
lods
jo
pop
lcall
in
aas
jns
imul
adc
jno
sub
pop
sub
das
pop
insl
mov
inc
mov
and
insb
and
outsb
shlb
dec
xor
mov
lret
xor
lcall
adcb
lods
mov
dec
pop
inc
fsincos
cmc
mov
mov
ja,pn
pop
push
or
mov
lea
push
add
dec
mov
sbb
cs
mov
sub
xchg
and
jecxz
das
lcall
adc
pop
push
pop
sarl
inc
or
mov
inc
lods
inc
rcr
mov
les
inc
in
js
xchg
dec
xchg
sti
inc
jl
sub
out
sbb
sbb
jl
mov
mov
cltd
lds
cltd
nop
pop
sar
enter
addr16
mov
dec
fldl
xchg
sub
add
xor
and
into
pop
inc
test
rcrl
sub
and
mov
aam
pop
jmp
adc
js
pop
cmc
pop
cmp
lret
mov
push
cmp
cvtps2pd
aad
scas
xchg
xchg
jb
es
je
push
or
adc
repz
das
pop
mov
adc
dec
or
in
add
insl
pop
inc
and
cmp
cmp
in
aam
mov
ret
mov
mov
bound
cltd
push
daa
lock
imul
lret
jecxz
movsl
mov
pop
sbb
shlb
mov
add
pop
in
push
lea
std
mov
in
xor
adc
cli
jae
inc
add
sbb
ret
mov
or
and
aad
test
mov
popf
cltd
data16
loope
jmp
out
test
sub
jmp
add
cmp
fbstp
xchg
pop
pop
mov
pop
movsl
jecxz
lret
inc
dec
fildl
fs
sub
scas
mov
std
add
xor
lods
pop
jge
shrl
test
pop
mov
sub
lods
mov
leave
sbb
mov
sbb
cmp
repnz
in
arpl
xor
std
xlat
and
jnp
mov
push
rcrb
pop
pop
xchg
fcompl
pop
mov
int3
dec
xchg
ret
sub
jg
pop
sahf
cli
mov
dec
sbb
lods
sub
pop
repnz
jnp
or
adc
scas
pop
repz
xchg
rcll
jb
pop
jmp
sub
out
pop
xchg
or
leave
pop
dec
mov
mov
ficomps
jns
in
mov
stos
aas
pop
push
test
pop
pop
test
push
flds
mov
xor
imul
add
aaa
js
xor
and
push
stos
xchg
jnp
add
pop
sbb
xor
cmp
cwtl
sbb
nop
inc
pop
cmp
out
or
add
pop
sbb
push
int
xor
mov
fsubp
push
mov
mov
scas
push
push
daa
xor
inc
pop
call
stos
sub
pop
scas
orb
out
das
mov
pop
fldcw
jbe
xor
push
cli
sbb
pop
movsl
subl
cltd
cmp
pop
cmc
sbb
push
fcoms
arpl
insb
cltd
out
and
pop
sub
cmp
subb
sbb
adc
lea
pop
mov
jne
pop
jo
mov
ret
jo
ficoml
or
mov
jae
pushl
mov
inc
test
in
mov
cltd
add
sbb
mov
data16
negl
jbe
ret
pop
aas
out
mov
imul
inc
mov
pop
sub
push
rsm
int
jbe
pop
jne
mov
cld
dec
movsl
cmp
scas
mov
imul
sub
stos
or
mov
dec
push
ficompl
stc
cltd
xchg
imul
cmp
movsb
jbe
xor
mov
loope
lret
in
push
adc
pop
lods
addr16
mov
int
dec
pop
sahf
aas
cld
fnsave
pushf
fcmovne
dec
ja
mov
dec
pop
out
add
mov
adc
cmp
pop
ficoml
das
cmpsb
sbb
int3
dec
in
pop
rcrb
popf
gs
int
push
lcall
fistpll
pop
dec
loop
xor
xchg
cwtl
pop
lret
xor
mov
inc
inc
pop
lock
sub
gs
cli
orl
aaa
mov
in
or
push
pop
pop
fcompl
adc
les
pcmpgtd
jecxz
insl
xor
jle
mov
adc
inc
push
lret
iret
push
push
mov
sub
sbb
pop
or
xchg
out
das
mov
mov
adc
pop
leave
popa
scas
add
cmp
pop
jle
out
imul
out
jge
andb
lods
leave
sahf
jmp
jno
pop
test
dec
push
js
pop
test
sbb
and
pop
inc
movsb
fwait
push
mov
cmp
div
push
int
mov
leave
jb
xchg
pop
or
bound
and
loope
cli
and
push
mov
sbb
xor
aas
jne
das
std
inc
test
mov
or
push
in
dec
mov
pop
lahf
aad
xchg
fcoms
pop
les
push
test
jnp
pop
pushl
cwtl
rclb
pop
and
xchg
mov
mov
pop
popa
jo
mov
int3
or
mov
out
int
sete
sbb
daa
stos
pop
mov
imull
popf
in
jno
enter
cwtl
incl
xchg
lret
pop
push
bound
inc
lret
js
pop
sbb
scas
sti
ret
imul
es
imul
repz
and
push
out
ss
ret
call
mov
add
mov
xchg
xor
inc
cmp
sbb
mov
pop
add
pop
mov
cmpsl
mov
pop
mov
insb
into
adc
cli
pop
int
int3
mov
push
or
out
adc
sub
test
push
ficoms
stos
xor
pop
xchg
jno
outsl
xor
add
push
jns
fneni(8087
fbld
rcll
ret
xchg
dec
sahf
xor
pop
dec
in
test
ds
outsl
out
loopne
or
dec
repnz
jle
jmp
addr16
pop
lods
sub
enter
ror
mov
ds
push
addl
pop
push
pushf
lods
mov
addr16
iret
adc
mov
xor
pop
repnz
hlt
std
int
cs
mov
test
and
cmovle
pop
das
mov
push
adc
pop
popa
mov
cmpb
xor
cmp
or
xlat
lods
cwtl
test
aaa
pop
or
pop
rol
pop
cld
jbe
pop
repz
mov
xchg
arpl
cmp
adc
pop
les
inc
repz
adc
jo
push
rorl
outsb
mov
push
pop
push
flds
add
cmpsl
insb
pop
xor
cmp
or
fcomps
xor
pusha
scas
adc
fcoml
add
jne
jb
int
jle
mov
mov
inc
push
rcrb
mov
inc
jg
pop
clc
mov
arpl
fisttps
fcomps
leave
lock
scas
mov
fistpll
add
pop
add
adc
aad
fstpt
pop
roll
frstor
movsb
pop
xchg
fbstp
sbb
sahf
and
xchg
mov
pop
sbb
rorl
mov
pop
inc
je
leave
lret
popa
xchg
cli
pop
pop
jbe
mov
outsl
fisttps
pop
adc
adc
cmpsb
dec
hlt
pop
push
mov
add
pushw
adc
imul
mov
lcall
xor
fisubrl
xchg
pop
je
mov
lret
cli
repnz
push
jnp
push
in
sub
sbb
add
lds
dec
pop
pushf
and
cmpsl
mov
xchg
je
xor
int3
fiaddl
mov
movsb
fistps
sub
mov
mov
xchg
mov
or
adc
aam
push
xor
das
mov
sub
xchg
pusha
xchg
aad
pop
fdivr
in
adc
adc
adc
xchg
hlt
stos
mov
pop
jge
xor
cmp
pop
aaa
mov
mov
loopne
mov
cmp
subb
mov
sub
adc
lret
rcll
pop
dec
push
nop
icebp
stc
sub
dec
add
int
dec
mov
cmpsl
xchg
pop
cmpsl
cltd
arpl
pop
jecxz
ds
and
popa
cli
xor
scas
mov
mov
repz
test
pop
sbb
inc
jb
or
mov
mov
xchg
pop
bound
test
scas
lods
cmp
jge
sarl
pusha
scas
arpl
jne
push
pop
mov
adc
mov
xchg
mov
nop
push
sub
xor
fsubrl
fldenv
iret
cmpsb
sub
xchg
pop
stos
push
push
mov
mov
pop
mov
popa
dec
and
cs
pop
ret
int
mov
lret
out
loop
cmp
sbb
sub
repz
jnp
insl
pop
pushf
cmc
enter
jg
test
mov
ficompl
mov
pop
out
out
adc
out
mov
aas
in
adc
aad
sbb
out
and
leave
and
popf
and
or
aas
pop
pop
xchg
add
adc
xchg
inc
sub
pushf
cmp
or
pop
inc
mov
mov
xchg
cltd
jae
lcall
jmp
mov
mov
mov
cs
xlat
ljmp
call
pop
pop
fwait
mov
jb
pop
fildll
js
insl
pop
dec
aas
stc
cmpsb
pop
fisubrl
sbb
pop
lods
dec
push
add
cli
dec
push
stc
or
inc
push
cmpsb
inc
stos
rorl
mov
js
mov
inc
cltd
fwait
push
mov
lahf
out
sbbb
movb
pushf
cs
lret
popf
sets
lods
ja
dec
es
pop
insl
cld
sub
icebp
mov
mov
xchg
pop
mov
inc
sti
imul
subb
adc
int3
stos
add
in
pop
int
mov
inc
cltd
ficompl
push
repz
enter
scas
push
jge
xchg
xor
js
adc
repnz
popa
or
mov
mov
pop
int3
xor
xchg
pop
jp
cmc
pushf
push
mov
scas
dec
es
pop
pop
leave
das
push
push
loop
repnz
pop
inc
jno
icebp
jne
xchg
lahf
dec
xor
xchg
cmp
mov
mov
test
sbb
lds
sbbb
mov
sbb
pop
pop
repz
std
arpl
push
sbb
pop
sbb
add
mov
aad
pop
and
push
hlt
pop
imul
fcomp
mov
pop
sbb
push
mov
adc
gs
sub
jle
ret
pop
loop
mov
cmpl
ret
jg
dec
push
jbe
das
ret
loope
addl
xchg
pop
pop
aaa
lahf
sbb
mov
xchg
pop
movsb
sbb
jecxz
inc
dec
mov
and
pop
ds
lods
and
loopne
pop
mov
ljmp
aam
int
adc
sahf
cmp
dec
mov
inc
pop
or
sub
dec
dec
fstpl
sbb
adc
xor
add
add
or
pop
int
add
and
mov
test
cld
dec
hlt
pop
jmp
cs
pop
arpl
sbb
fcoml
xchg
fstps
shll
ja
mov
add
cmp
dec
mov
mov
adcb
or
mov
jecxz
fdivrs
daa
dec
sbbl
dec
in
add
ret
std
aad
subb
pop
and
cmp
idiv
stc
push
dec
pop
xchg
cld
sti
sbb
leave
cmp
xlat
shl
fs
stc
xchg
mov
mov
and
pop
fwait
mov
dec
push
xlat
sbb
frstor
pop
mov
mov
sbb
jl
dec
mov
ss
fxch
shlb
in
mov
or
bound
stc
fstpl
pop
or
je
inc
pop
pusha
jb
xor
jecxz
dec
mov
out
int3
xlat
fnstsw
loopne
cmpsl
aas
pop
pusha
daa
pop
orb
lds
mov
pop
cltd
dec
pop
lahf
mov
pop
xor
xchg
imul
out
lock
enter
fldenv
ficomps
mov
sub
and
mov
dec
test
pop
cmpsb
push
in
mov
ja
addl
xor
sbb
pushf
lret
dec
dec
test
scas
push
iret
jo
sti
and
sbb
mov
cld
pop
out
insb
imulb
ja
mov
ds
sbb
fsubs
cld
rcl
cmp
pop
les
pop
and
cltd
faddl
pusha
push
mov
jne
xchg
int3
scas
xor
aad
pop
mov
jge
cmp
sub
sbb
fisubl
mov
fildll
outsb
pop
rcrl
fidivl
inc
sbb
mov
mov
pop
clc
push
stos
pop
adc
imul
repnz
cmpsl
out
jb
lds
and
stc
mov
pop
ficompl
and
jg
outsb
push
in
pop
jbe
lret
adc
sub
pop
mov
push
mov
mov
icebp
pop
xor
jns
dec
dec
pop
cli
inc
loop
mov
xchg
lds
and
fsubr
lahf
mov
fstps
and
in
sbbl
push
jne
add
add
stos
sub
scas
push
cmpsl
push
in
lea
int
and
pop
jno
ja
ret
outsb
ret
scas
in
push
pop
pop
mov
inc
or
fs
cli
pop
data16
mov
cmpsl
mov
push
mov
jns
sbb
pop
stos
jge
movsl
ljmp
aas
jb
aam
inc
and
inc
push
xchg
push
pop
imul
push
iret
xorb
js
pop
pop
mov
pop
adc
or
mov
xchg
pop
loope
ja
popf
xchg
js
or
jmp
lret
push
pop
jo
jbe
sbb
and
into
aaa
stc
out
ficomps
in
xchg
and
adc
pop
test
sbb
lahf
add
mov
dec
xchg
cmp
in
ja
clc
and
mov
notl
mov
mov
fadd
popa
dec
sub
or
icebp
repz
jb,pt
pop
mov
frstor
pop
push
push
mov
push
lods
cmp
or
add
cltd
pop
mov
int
out
xor
push
inc
shlb
call
pop
mov
notl
mov
ficomps
scas
stos
pop
xchg
loopne
or
dec
jl
xchg
sbb
adc
xchg
out
mov
pop
fdivl
stc
inc
pop
xchg
xchg
mov
sub
popl
pop
fdivl
xchg
jg
push
shll
fs
dec
push
jo
bound
jae
and
sar
add
ret
xchg
fs
ficomps
push
cwtl
int
loop,pt
jne
incl
add
mov
outsb
mov
push
sub
lods
mov
imul
xlat
aam
pop
add
mov
clc
pop
adc
pusha
call
sbb
fsubrp
stos
pop
dec
repnz
ss
mov
test
mov
jle
mov
in
pop
jl
test
test
lods
xchg
pop
fdivl
test
push
test
movsb
dec
int3
push
pop
push
sar
sbb
xor
cmp
cmc
movsl
sub
scas
push
in
inc
aad
mov
scas
inc
dec
jo
adc
les
scas
movsl
sbb
mov
mov
ret
adc
lret
fcoms
jge
fsts
mov
cmp
bound
mov
push
push
pop
add
fwait
or
aaa
in
pop
loop
add
mov
sub
cmp
pop
push
sbb
dec
dec
idiv
ljmp
dec
and
lea
loopne
add
std
dec
dec
lds
pop
mov
mov
inc
insb
stos
sarl
add
rol
and
xchg
cmc
ljmp
out
dec
jmp
fs
mov
dec
push
xchg
cmp
test
dec
int3
and
loopne
jle
daa
jnp
mov
push
sub
dec
jne
bound
jl
jmp
and
push
pop
cmc
sbb
ds
imul
add
sahf
in
stos
pop
cmp
out
jb
adc
pop
test
cmp
adc
and
stos
cmp
mov
or
scas
lahf
mov
popf
or
outsb
mov
sbb
push
dec
ficompl
xchg
jo
xchg
pop
in
int
or
pop
dec
shll
add
add
inc
dec
pop
cli
push
sub
jp
inc
movsl
lea
popa
int3
sub
pop
ja
jae
out
mov
mov
lds
repnz
push
outsb
inc
cld
mov
pop
lods
inc
pop
popa
mov
fcmovbe
insb
out
lods
ds
test
dec
dec
mov
lahf
lcall
cmp
and
int
call
jbe
mov
aam
mov
cmp
cli
jg
pop
popf
lods
gs
cmp
mov
adc
push
push
test
xchg
filds
lret
and
xchg
mov
ja
fldenv
dec
repz
pop
jo
push
test
jb
mov
sub
call
test
aaa
cmp
je
insb
push
or
ficompl
jae
popf
ud1
sahf
pop
imull
ret
pop
push
pop
sbb
or
mov
xchg
gs
xlat
mov
icebp
cmp
fstpl
adc
lea
xchg
shll
mov
pop
jb
cwtl
test
adc
sbb
mov
mov
outsl
pop
cmp
sbb
test
cmp
imul
push
loopne
jmp
jae
xchg
jbe
or
push
inc
repz
jecxz
pop
leave
in
inc
jne
pop
dec
loop
mov
pop
mov
stos
dec
xchg
add
add
iret
inc
mov
and
out
negb
sub
int3
cmp
lret
smsw
pop
lret
inc
xchg
sbb
out
push
xchg
add
sahf
lds
pop
scas
dec
push
sbb
mov
push
imul
jp
les
pop
mov
pop
bnd
sub
mov
dec
pop
int3
ss
loop
push
insl
test
mov
lods
dec
sbb
cmp
sbb
sub
mov
mov
dec
mov
sarb
push
pop
inc
adc
xor
mov
push
pop
mov
sbb
push
int
mov
mov
mov
fnstenv
pop
and
jg
int3
pop
cs
jecxz
or
mov
out
js
jb
jbe
adc
pop
imull
add
fstpt
in
mov
adc
xor
mov
popa
mov
xor
jmp
outsb
inc
mov
pop
fnstcw
and
mov
scas
popf
jbe
inc
ja
clc
or
jg
fldt
cmpsb
dec
jno
pop
scas
mov
sbb
mov
xor
fmuls
sub
jl
sub
push
push
sahf
pop
ds
das
negb
dec
js
sub
pop
sbb
insl
push
pop
dec
sub
adc
sbb
int
lods
xorl
inc
mov
mov
insb
in
fmuls
and
mov
mov
pop
lods
mov
jmp
sub
dec
xor
jae
xchg
pop
xchg
pop
ds
xorb
jle
push
lahf
nop
pop
fs
faddl
popf
and
xchg
mov
hlt
cvtps2pd
cmp
xchg
daa
lds
add
pop
aad
or
add
or
push
int
flds
inc
pop
mov
enter
xorb
sbb
pop
jmp
adc
mov
bnd
pop
jb
lods
sbb
push
loop
outsl
idivl
mov
mov
pop
ret
ficompl
cld
mov
lret
pop
outsb
push
addl
and
pop
and
scas
xchg
mov
aas
add
aam
ror
push
inc
pop
call
push
scas
mov
jecxz
std
pop
imul
in
mov
inc
and
sub
dec
mov
cmpsl
rcrb
jo
pop
out
fistps
shrl
pop
xor
ficoml
dec
inc
inc
jp
mov
cmp
lods
pop
imul
scas
loope
xchg
sub
xchg
mov
mov
int
negb
ja
jb
pushf
pop
dec
adc
rorb
scas
pop
cmp
cmp
imul
xchg
setae
pop
vsubsd
mov
mov
and
sub
adc
jno
inc
int3
fcmovu
lods
data16
scas
push
add
mov
adc
and
sbb
xchg
pop
xor
mov
add
insl
cmp
mov
ja
loopne
sub
mov
pop
addr16
xchg
loopne
add
cmp
inc
mov
cli
and
pop
popa
imul
in
jns
or
fidivs
xorl
sbb
inc
dec
in
jns
pop
cmp
ret
mov
test
xchg
pop
pop
pop
sub
movsb
pop
clc
dec
je
pop
or
jmp
aas
ja
dec
inc
lock
mov
mov
dec
dec
sub
pop
mov
repnz
push
jl
pop
pop
xor
insl
mov
pop
mov
dec
aam
dec
insb
mov
xor
in
test
hlt
xchg
incb
and
inc
xchg
movsb
pop
ja
divb
jecxz
data16
cltd
out
add
fnsave
inc
jnp
inc
pop
clc
fs
lcall
pop
std
lret
jecxz
inc
je
mov
testb
xchg
lcall
pop
std
pop
cltd
movsl
outsl
and
inc
mov
pop
sbb
jbe
add
andl
insb
jg
inc
mov
addl
jo
inc
dec
loopne
inc
pop
sub
cltd
idivl
mov
scas
loope
lock
push
jne
lods
cwtl
test
pop
nop
and
stc
in
cs
dec
mov
lea
pop
repnz
mov
mov
loope
int3
into
or
insb
call
mov
popl
fstp
pop
jnp
ja
push
push
cmp
dec
pop
flds
in
cltd
addr16
shl
cld
mov
mov
in
rolb
or
sbb
push
sub
sbb
lock
push
test
adcl
fadds
pop
sbb
jge
js
inc
xchg
mov
pop
mov
insb
pop
mov
cmp
ljmp
push
sub
mov
pop
sbb
pop
mov
xchg
in
sbb
mov
inc
pop
test
mov
cmpsb
add
hlt
stc
add
icebp
jbe
lds
cld
cmp
mov
sahf
je
int
mov
lahf
pop
int3
orb
cmc
mov
in
inc
sbb
pop
dec
je
rcrl
pop
repz
xor
adc
lea
lds
dec
int
or
pop
xor
js
arpl
pop
and
adc
pusha
push
stos
lahf
sbb
adc
data16
cld
lds
mov
dec
shll
dec
sbb
pop
push
jb
fsubs
test
jle
pop
push
pop
insb
mov
mov
lret
pop
mov
dec
jg
push
fcomps
mov
jne
pop
sti
mov
adc
pop
or
icebp
dec
inc
xchg
xchg
pop
fmulp
divb
cld
push
arpl
pop
jecxz
push
repz
dec
pop
xchg
int
xchg
stos
ja
js
jbe
inc
or
or
stos
mov
jae
call
insb
loopne
pop
iret
int3
das
sub
add
push
or
es
xchg
and
sub
jmp
add
lret
mov
pop
gs
cmp
rol
cwtl
ljmp
xor
test
sub
dec
mov
mov
repz
movl
fstp
cli
mov
fisubrl
call
add
fistl
jp
dec
mov
xchg
mov
push
insb
push
xor
out
cmpsb
sbb
dec
and
ss
outsl
movsb
xchg
jo
push
pop
fsubl
pop
mov
imul
stc
mov
add
pop
fs
cmp
fstpt
jnp
js
or
ljmp
jnp
int3
mov
pushf
mov
pop
into
packssdw
aas
sbb
xor
cmp
mov
pop
sbb
add
insb
fcomps
push
loope
xchg
sbb
mov
repnz
mov
fsubs
scas
jmp
inc
dec
dec
jl
aas
mov
sti
out
jg
inc
or
stos
fnsave
adc
inc
ja
push
inc
in
mov
mov
xchg
mov
mov
aam
mov
pop
stos
dec
jg
js
inc
int
inc
lods
dec
inc
sbb
and
test
sbb
or
in
xchg
jb
lahf
imul
pop
cmp
jp
adc
xchg
pop
mov
mov
dec
cmp
jns
xchg
setno
and
mov
std
or
and
sbb
and
dec
cmp
pop
sti
pop
fcmovne
push
inc
mov
push
cmp
pushf
mov
sbb
adc
addl
pop
cmpb
add
pop
pop
hlt
push
iret
jl
pop
lock
sbb
fdivr
pop
popa
sbb
and
push
mov
pop
xchg
iret
lock
sub
inc
mov
jg
pop
push
pop
mov
loop
push
pop
stos
fcomi
cmp
and
test
jmp
dec
add
xchg
lods
pop
and
push
insl
negb
test
sbb
dec
daa
stc
stos
mov
insl
lahf
lds
xor
pop
and
in
pop
int3
dec
jne
dec
nop
pop
cmpb
push
js
mov
push
rcl
sbb
cmpsb
mov
inc
jo
sub
int
inc
dec
mov
add
and
test
pop
les
pop
mov
loope
lea
int
adc
mov
scas
out
or
pushl
je
pop
fildl
and
int
fcomps
stos
inc
cmp
cli
enter
jp
sub
movsl
or
fistps
xor
popa
xchg
mov
imul
xor
adc
jmp
repnz
and
mov
add
sub
lods
aas
xchg
sub
add
shll
pop
sbbl
sub
xchg
xor
int
out
xchg
popf
xor
rcr
int3
jb
dec
pop
or
add
mov
jae
inc
pop
inc
hlt
push
mov
arpl
push
pop
adcl
pop
mov
jge
in
jb
pop
icebp
mov
insl
fst
cli
push
repnz
roll
dec
flds
jne
cmp
sbb
pop
addb
sub
or
xchg
jno
mov
daa
cltd
mov
sub
inc
inc
pop
inc
iret
test
mov
shl
xchg
test
xchg
fistps
pop
in
push
in
enter
test
and
mov
fadds
add
push
add
dec
pop
mov
icebp
ljmp
pop
iret
or
pop
sarl
in
mov
lahf
roll
popf
fcmovnb
or
aas
pop
cmpsb
xor
shlb
ds
rorl
cmp
cmp
hlt
mov
pop
pop
cmp
pop
jno
cltd
dec
mov
idivb
lcall
andl
xor
sbb
std
call
add
lcall
xchg
or
lret
fs
inc
int3
mov
daa
xorl
push
jp
fistpll
pop
cmp
pop
inc
inc
leave
mov
dec
mov
int
idiv
xchg
mov
fcompl
data16
add
fcomi
jb
inc
sbb
jmp
mov
xchg
pop
ret
mov
pop
loop
cmpsb
hlt
les
sbb
xor
insl
adc
adc
idivl
popa
dec
xchg
jbe
or
ror
xlat
lcall
cli
pop
ud0
push
pop
mov
pop
shll
pop
cltd
call
in
mov
pop
mov
outsl
sbb
insb
insl
push
lahf
and
cmpsb
mov
hlt
and
push
pop
lret
ja
xchg
pop
mov
pop
pop
adc
sbb
xchg
scas
jo
cltd
and
or
repz
mov
adc
fisubrs
scas
jp
ja
mov
lahf
call
in
frstor
dec
dec
pop
shl
dec
loope
mov
pop
pop
in
dec
sbb
fcompl
mov
arpl
push
pop
test
stos
aaa
jg
pop
cli
mov
jae
sti
jecxz
ficoml
push
xor
cmp
cld
cs
addr16
das
mov
lods
pop
jno
insb
and
xor
lcall
outsb
addr16
movsl
mov
sbb
pop
insb
inc
movsb
outsl
data16
pusha
mov
clc
insl
negl
lock
jmp
repnz
jl
dec
or
xor
mov
sbb
mov
add
je
stos
pop
cmpsl
scas
cmc
xchg
leave
les
cmp
add
mov
in
cltd
mov
shlb
lret
decl
jbe
and
adc
mov
adc
stos
fisubrl
pop
aaa
adc
push
std
lds
outsl
das
fstpt
fs
stos
and
dec
cmc
cli
sbb
shlb
lea
mov
repz
sbb
jle
mov
leave
gs
push
es
aam
dec
cld
pop
fwait
in
iret
cmpsb
int3
cmp
sub
rcll
or
or
push
insb
mov
mov
out
scas
loop
outsb
xchg
pop
sbb
mov
fsubrl
call
pop
jb
ror
out
cmp
sahf
sbb
testl
push
push
ret
and
lock
dec
pop
into
pop
imul
scas
fdivr
mov
icebp
cltd
out
xchg
sub
jae
pop
xchg
cmc
adc
and
dec
mov
pop
dec
int
mulb
dec
jae
push
xchg
cld
mov
insb
mov
notl
loop
sbb
aas
pop
ret
dec
lock
push
fildl
xor
dec
xor
daa
lea
loope
push
xchg
sub
push
sub
push
movsb
sbb
pop
clc
jo
pop
int
repnz
fucomi
fisubrs
fstps
into
data16
out
xchg
sbb
pop
test
imul
mov
mov
adc
jp
data16
pop
loope
mov
lcall
fwait
stc
xchg
adc
test
adc
pop
mov
dec
pusha
pop
jbe
sti
cs
or
sbb
iret
loop
add
pop
pop
cli
cwtl
jecxz
shrl
lods
es
out
decb
aad
mov
jge
enter
testb
ret
or
mov
push
lahf
popf
cltd
outsb
cmp
ljmp
add
sub
addb
mov
cs
scas
mov
xchg
mov
leave
sbb
pop
adc
dec
fidivs
sbb
dec
sti
leave
outsl
insb
movsl
mov
pop
pop
pop
xor
pusha
hlt
pop
mov
cmp
pop
cmpsl
out
pop
stos
mov
inc
into
fst
add
jo
sbb
out
jecxz
xor
adc
cmc
jnp
pushf
sub
sbb
and
jl
fstps
dec
add
andl
add
jecxz
std
imull
rcrb
enter
xchg
jbe
pop
cmp
jno
jl
pop
pop
insl
xor
in
or
lea
inc
or
pop
es
xchg
push
xadd
add
adc
fnstenv
mov
loop
in
dec
stc
fcmovu
test
sbb
cmc
mov
shlb
test
mov
push
mov
pop
decl
mov
dec
in
xor
imul
sub
sahf
scas
mov
les
inc
add
mov
mov
js
push
mov
loopne
scas
add
push
push
nopl
jns
mov
jg
bound
movsl
and
jge
decl
sahf
scas
pop
in
loopne
and
sbb
cmp
pop
push
fcomps
mov
enter
mov
cmpsl
inc
gs
jae
pop
push
adc
jmp
pop
pop
stc
xchg
add
sbb
mov
pop
and
fwait
lret
sbb
aad
out
pop
dec
pop
int
mov
pop
hlt
xchg
js
xor
push
pop
mov
push
pop
stc
xor
popa
aaa
pop
lea
lock
jg
shlb
mov
push
mov
mov
mov
mov
add
in
sbb
pop
add
push
xor
mov
dec
pop
jns
jo
push
dec
jne
dec
lea
mov
jb
xor
add
pop
mov
shll
loop
insb
fistl
jecxz
not
pop
inc
and
jo
fmull
aas
pop
jnp
leave
dec
fwait
ret
push
outsb
xchg
push
cmp
icebp
ret
cmp
sbb
pop
dec
mov
shlb
andb
xchg
dec
cmp
mov
jmp
sbb
in
fcoms
scas
pop
sub
pop
lcall
imul
subb
fwait
int
arpl
push
pop
inc
pop
cld
and
popf
mov
daa
fdivrs
movsb
cmpsb
pop
aam
insb
push
bound
addr16
jg
fstl
pop
pop
int
inc
int3
ljmp
mov
aas
leave
lods
xchg
imul
jne
jbe
mov
std
fprem
cmp
add
test
add
mov
sbbb
or
xchg
pop
sbb
jmp
repnz
mov
mov
pop
jmp
xchg
or
out
pop
mov
test
pop
mov
pop
dec
pop
pushf
pop
ret
cmp
xchg
push
sub
xchg
mov
jnp
adc
in
pushf
dec
and
pop
xchg
pop
sbb
daa
enter
lea
lock
mov
js
iret
push
dec
rcrb
push
je
add
out
int3
mov
pop
mov
ds
pop
push
leave
pop
les
pusha
call
xor
out
dec
daa
fiadds
retw
les
add
cmp
pop
mov
aad
jno
lahf
adc
sbbl
scas
bound
into
sub
pop
pop
cmpsb
and
jns
fimuls
neg
aad
je
pop
movb
or
ret
in
pop
or
mov
in
pop
jge
fimull
in
mov
stos
sbb
aam
or
mov
cmpsb
adc
inc
xchg
xchg
and
xor
dec
addb
xchg
sub
inc
stos
and
pop
insb
mov
fadds
mov
mov
stc
ficompl
cmpsb
aas
or
clc
jne
dec
inc
es
stos
jo
mov
lret
rorl
scas
inc
xchg
xchg
dec
popa
gs
push
mov
imul
cmpsl
add
shlb
mov
outsb
es
sbb
sub
push
sub
pop
or
int3
daa
inc
mov
adc
inc
addr16
stc
movsb
lds
push
addr16
jae
fmull
or
insl
push
rol
adc
adc
cmp
nop
pop
pop
divl
pusha
stc
mov
std
fistl
test
jne
call
loopne
sbb
pop
or
shll
stos
sbb
pop
mov
pusha
fisttps
nop
pop
or
mov
pop
imul
push
lret
or
xchg
ss
xchg
int
or
fimull
lods
pop
jp
mov
bound
ficoms
rep
cmp
pop
test
cwtl
scas
mov
or
fstpt
stc
xchg
scas
adc
enter
js
mov
xlat
xchg
nop
push
dec
dec
stc
pop
mov
hlt
outsl
xchg
rdmsr
pop
bound
xor
in
loopne
sbb
orl
test
cmp
lret
and
pop
in
scas
push
xchg
fisttpl
pop
xchg
xor
and
ret
subb
pop
push
call
sub
aad
icebp
scas
adcl
xchg
and
inc
xor
pop
ja
pop
lock
adc
and
sahf
xlat
dec
outsb
pop
adc
rcll
lds
jecxz
jmp
pop
pop
inc
lods
mov
dec
add
xchg
rcrb
enter
arpl
push
sub
mov
sbb
mov
sub
push
aaa
aam
fwait
jb
into
xchg
or
mov
fisubl
xchg
mov
in
in
shrl
mov
pop
clc
pop
sub
pop
std
cmpsl
mov
cmp
test
push
dec
jmp
sbb
stc
scas
jo
sub
fwait
push
add
mov
call
push
inc
pop
pop
int
lock
inc
xchg
mov
repz
adc
pop
jmp
pop
in
pop
ret
int
call
sub
dec
out
mov
jno
je
push
sbb
pop
jg
fwait
cmpsb
mov
jno
jbe
in
sub
lea
push
inc
dec
jns
mov
mov
xchg
pop
dec
sub
dec
psllq
rorb
mov
mov
cltd
lods
call
jbe
jge
xchg
lcall
ljmp
add
xor
adc
mov
and
jne
enter
pop
inc
out
call
sub
outsl
pop
ljmp
cld
lahf
insl
pop
and
lock
rcr
in
jns
mov
jbe
sbb
push
cmp
inc
insl
pop
nop
and
push
xchg
scas
cld
pop
add
pop
je
sub
test
push
daa
das
jb
cmp
or
pop
dec
sbb
mov
inc
dec
fldenv
orb
fsubrs
clc
xchg
mov
add
xor
add
xor
les
mov
pushl
or
int
sub
addr16
inc
sbb
mov
sbbb
rcr
pop
arpl
pop
out
cmp
or
nop
mov
sub
out
jnp
in
sar
test
sub
xchg
jl
popf
movb
fsub
cltd
roll
push
lahf
pop
arpl
inc
jae
je
data16
dec
bound
enter
add
push
dec
cltd
movsb
out
cmp
js
inc
clc
mov
pop
cld
inc
jae
add
test
pop
clc
dec
out
lahf
cmp
pop
cmpb
inc
hlt
scas
sub
pop
icebp
or
movsb
nop
pop
popf
out
and
push
pusha
jae
int3
shl
xor
mov
iret
inc
add
rcrb
hlt
or
fisttps
xchg
pop
int
add
dec
sbb
and
pop
inc
xchg
aas
test
stc
out
push
sub
imul
jo
mov
ret
rdpmc
mov
and
fwait
mov
mov
fs
movsl
popa
xchg
dec
jmp
pop
nop
sub
fadds
mov
cli
es
push
fcomi
xor
fstps
add
sahf
pop
mov
shll
adc
pop
add
lods
pop
sub
jbe
adc
pop
repnz
loopne
mov
testb
cmp
jo,pt
push
xor
ljmp
pop
mov
mov
xchg
cwtl
dec
sub
lds
xchg
out
loop
pop
jo
lds
dec
in
pop
sub
int
push
test
cwtl
ficomps
and
in
ror
test
and
pop
lcall
andl
mov
push
and
test
pop
icebp
jp
xchg
jne
jbe
pop
or
pop
repnz
lea
leave
mov
jnp
push
jmp
dec
pushf
sub
sbb
pop
mull
inc
pop
xchg
pop
dec
adc
and
push
xchg
shll
fisttpll
jmp
cmovs
fninit
icebp
mov
pop
ja
pop
pop
push
loope
add
cmp
nop
dec
out
in
pop
inc
divl
icebp
jb
pop
sub
das
test
push
mov
fdivs
testb
mov
pop
into
mov
ficomps
loopne
or
mov
outsl
inc
movsl
dec
push
scas
cmpsl
mov
mov
xchg
into
rcrb
xor
imul
icebp
ljmp
jbe
sahf
pop
mov
sub
mov
inc
mov
ljmp
cwtl
stos
addr16
xlat
push
bound
cmp
push
pop
int
das
sbb
and
dec
subb
adc
dec
rcrb
rorl
sub
dec
pop
mov
dec
push
or
jbe
aaa
mov
in
push
leave
sub
pop
pop
cwtl
jle
out
push
xor
jp
sti
pop
pop
outsb
add
mov
push
insb
icebp
popf
push
dec
sbb
pop
cs
imulb
aaa
stc
dec
dec
pop
cmpsl
nop
arpl
sub
push
push
jne
pop
frstor
sbb
cli
dec
xchg
in
pop
aam
inc
jl
arpl
mov
je
pop
xor
sub
in
sbb
and
adc
lea
pop
cmp
lahf
arpl
addl
pop
fsub
dec
mov
js
mov
pop
jno
sbb
and
mov
ret
xchg
cmp
cwtl
mov
jnp
sub
lahf
or
int
pop
gs
pop
mov
js
aas
mov
lahf
mov
cli
movsb
ficompl
decl
jl
pop
or
jo
mov
ja
push
mov
ss
sbb
dec
fisubrl
pop
test
nop
inc
scas
in
ret
xchg
neg
pop
mov
cmp
pop
aaa
jge
push
cmpsl
and
rorl
mov
daa
and
push
mov
sub
pushf
cmp
icebp
xor
je
jge
jb
test
popf
test
or
and
mov
movsl
mov
mov
das
cmp
loop
pop
mov
fs
pop
pop
adc
roll
cmp
lcall
adc
test
pop
jmp
mov
jbe
in
clc
mov
stos
cwtl
rorb
or
xchg
mov
mov
fld
dec
insb
lahf
int3
pop
arpl
js
sbb
pushf
pop
inc
lcall
jle
mov
inc
insb
in
cltd
push
popf
hlt
mov
pop
xchg
push
mov
xchg
or
int3
fstp
les
fcmovnb
in
hlt
mov
pop
dec
jno
sbb
cmp
jo
out
into
xorl
add
or
pop
out
mov
jns
mov
adc
cmp
jge
and
pop
mov
scas
jb
jbe
add
fsubs
movsb
adc
cmp
aas
push
sub
mov
je
out
cltd
scas
fidivl
mov
push
jle
pop
int3
mov
lods
push
mov
adc
pusha
pop
or
xchg
lock
imul
mov
jp
jbe
hlt
xchg
xorl
jnp
jb
dec
sub
shrl
sbbb
mov
jbe
fcoms
push
mov
or
xchg
push
pop
fstl
pop
out
or
pop
daa
mov
pop
cmpsl
add
imul
mov
pop
int
pop
dec
std
xchg
rorb
pop
icebp
adc
jne
pop
and
data16
xchg
jns
pop
fs
sti
int3
adc
aad
int
ret
test
in
mov
fmulp
xor
pushl
pop
jecxz
and
cmp
insb
or
pop
xchg
lea
mov
cltd
loop
mov
popl
out
mov
hlt
cmp
dec
jne
pop
mov
mov
dec
cmp
pop
xchg
xchg
insb
mov
inc
pop
std
imul
inc
mov
fld1
aad
pop
popa
or
repnz
ret
loopne
cmpsb
int3
dec
add
dec
push
pop
inc
call
pop
and
cmp
jae
jl
pop
xor
imul
add
stos
dec
cmp
out
sub
xchg
xlat
pop
mov
jo
sub
ja
pop
adc
loope
imul
mov
sub
sbb
jo
sbb
nop
pop
pop
pusha
and
mov
pop
int
lret
sbb
mov
jb
leave
lods
xorb
arpl
sti
ljmp
cmpsb
jmp
int
cwtl
std
xor
sub
mov
adc
fnstsw
mov
xchg
dec
adcl
adc
mov
fdivl
mov
push
cwtl
add
test
pop
sbb
sbb
sub
pop
dec
fistpl
or
inc
inc
inc
int
pop
jl
aad
add
out
in
ret
addr16
jae
mov
and
mov
lret
mov
inc
scas
sub
shlb
pushf
pop
ljmp
jae
into
push
mov
sub
ret
pop
jb
aas
pop
repz
lods
dec
movsl
pop
out
les
dec
aam
and
pop
cwtl
adc
mov
sub
mov
sub
jae
mov
in
pop
hlt
add
loopne
cmp
stos
rcrb
std
push
xor
jb
mov
inc
push
sub
sbb
fcompl
push
jge
cmp
lret
scas
push
mov
sbb
ret
lock
xchg
fstps
cmp
dec
or
pop
out
imul
js
mov
pop
pushf
cmpsb
push
outsl
std
mov
pop
call
pop
inc
jecxz
hlt
int
jns
daa
push
loopne
incl
pop
ret
adc
inc
jne
push
jb
lods
add
sbb
rol
movsl
std
out
in
pop
xor
int
mov
mov
inc
hlt
test
mov
jne
popf
jb
pop
jecxz
faddl
or
add
fsts
mov
test
push
inc
pop
ja
and
fdecstp
sbb
scas
js
fwait
jecxz
out
mov
test
pop
dec
jl
cmc
pop
push
int3
xor
mov
cmpsl
cmp
sbb
jo
dec
mov
xor
adc
inc
pop
arpl
add
xlat
jo
cmc
pop
in
push
xchg
cmp
dec
enter
aad
das
cmp
sub
dec
pop
shl
jl,pt
xchg
pop
jmp
aam
inc
pop
mov
mov
pop
sbb
sub
jle
clc
sti
dec
pop
inc
dec
dec
push
sbb
bound
mov
test
loop
jbe
sbbl
fs
lods
sahf
inc
mov
pop
cmpsl
jo
xor
repnz
jmp
or
adc
int
xor
mov
xlat
popa
orl
inc
and
adc
loop
pop
mov
fstps
dec
lahf
xchg
dec
test
test
aam
pop
outsb
cmc
mov
test
xor
pop
int3
pop
popf
popf
and
sub
scas
stc
or
repz
sub
fcmovne
clc
cmp
sbb
mov
fisubrs
int
decl
mov
fisttpl
jb
jge
sub
and
jbe
xchg
xor
pop
jo
popf
cs
shll
cltd
xchg
sub
mov
push
int3
outsb
aad
pop
pusha
add
mov
mov
and
call
pop
rolb
lret
pop
or
fadds
into
xorb
gs
adc
rcll
pop
stos
out
or
mov
jo
mov
push
daa
or
xchg
ficompl
pop
jecxz
mov
push
pop
jmp
aam
jb
movsl
and
mov
mov
ljmp
jae
pop
sti
push
loop
int
push
pop
mov
stos
in
xor
fcompl
insl
sbb
pop
sarl
sbb
out
sbb
push
lea
sub
popa
stc
xchg
dec
pop
test
sbb
loop
add
push
dec
dec
inc
adc
pop
sub
adc
mov
sbb
add
or
mov
pop
test
adc
adc
lods
push
and
push
jmp
jg
mov
cmp
roll
inc
mov
jns
xchg
mov
dec
mov
out
int
or
sbb
mov
test
xlat
pop
icebp
pushf
in
adc
ja
and
sbb
fs
arpl
insl
clc
inc
out
fiaddl
dec
pop
cmp
add
pop
xorl
aad
pop
scas
inc
int
movsl
repnz
adc
adc
cmpsb
push
stos
pop
call
jge
sbb
rorb
xor
in
pop
js
push
push
jg
mov
mov
dec
jo
sub
int3
bound
in
mov
dec
pop
sahf
cmp
in
xchg
inc
cltd
or
push
jb
push
stos
into
and
sub
imul
pop
xchg
xor
mov
cmpsl
jg
pop
cmpsb
sti
fstpt
jle
cltd
pushf
adc
sub
cmp
xchg
pop
je
cmp
adc
dec
pop
pop
mov
or
int
sub
stos
sbb
insb
pop
icebp
mov
inc
jmp
pop
jg
enter
rcrb
fldenv
das
pop
jp
pop
push
mov
mov
stos
mov
pop
dec
les
pop
and
sbb
or
xchg
pop
jbe
sbb
pop
stos
and
in
push
pop
mov
xorb
xchg
cmp
js
outsl
cmp
test
lahf
out
inc
lock
inc
push
fistpl
test
or
inc
sbb
and
xchg
pop
pop
leave
loop
adc
jle
push
mov
jb
and
pop
outsb
dec
test
daa
rcll
fbstp
mov
mov
push
enter
ret
pop
sbb
add
sbb
daa
cs
jnp
adc
add
pop
idivl
inc
out
push
test
mov
lahf
gs
stos
mov
mov
cs
push
adc
mov
jp
xor
pop
xchg
inc
xor
pavgw
repnz
mov
push
inc
xchg
gs
jns
addr16
scas
lea
dec
pop
jp
loopne
mov
pop
data16
adc
mov
lret
pop
sub
pop
xchg
sub
int
inc
out
scas
ja
loope
rcrb
clc
sti
inc
ljmp
fisubrs
mov
into
adc
cld
outsb
inc
ds
jns
cmp
jge
popa
xor
cmpsl
add
pusha
data16
mov
in
inc
enter
mov
pop
rcr
iret
dec
push
pop
push
rorl
sbb
push
pop
or
clc
or
mov
and
shlb
add
cmp
mov
adc
shl
in
xor
dec
jne
call
inc
sahf
lret
pop
subl
pop
cmp
add
out
in
jo
mov
stos
cltd
cli
sub
negl
iret
movsb
scas
and
mov
leave
jmp
pop
dec
jb
xchg
add
mov
push
dec
fs
sarl
xor
jbe
lahf
inc
mov
insb
mov
push
incb
pop
add
pop
pop
pop
das
inc
cwtl
push
sti
xor
enter
mov
adc
add
pop
aaa
xchg
push
cmp
adc
sbb
aam
out
dec
int
loope
pop
call
push
lods
fdivrs
cmp
or
popf
push
fdivrs
pop
xor
mov
popa
outsl
and
cmc
rcrb
xor
jl
leave
sbb
or
mov
pop
fsts
shlb
or
testl
inc
test
pop
lea
cld
fbld
pushf
pop
ret
mov
pusha
daa
dec
cli
cwtl
stos
pop
xchg
dec
addl
outsl
aad
lds
clc
pop
add
dec
and
adc
pop
ds
push
jle
mov
adc
pop
mov
mov
mov
rcrl
dec
enter
sub
adc
xchg
add
mov
mov
jp
pushf
pop
xlat
aas
xchg
jo
fnstcw
pop
sbb
in
iret
popf
push
inc
lods
mov
cmc
out
cmpsl
shrb
mov
mov
ret
cli
aas
lahf
mov
xchg
outsb
mov
sbb
cli
mov
mov
ds
cmp
cltd
mov
ja
pop
push
pop
in
mov
xchg
cs
dec
or
mov
rorl
mov
pop
enter
enter
jmp
test
addr16
bound
inc
sub
push
in
rcll
cmp
ret
and
out
repz
scas
leave
roll
or
or
jo
ret
sub
dec
sub
xor
inc
xchg
cmpsl
insb
mov
pop
xor
loope
pop
stos
fildl
add
mov
push
dec
push
mov
int
bound
pop
sbbl
xor
mov
add
je
sub
mov
sbb
inc
push
xorb
sti
test
ret
std
lods
pushl
push
int
xchg
adc
call
pop
pop
incb
imul
fstps
pop
adc
push
mov
js
pusha
or
pop
push
xor
pop
pop
adc
les
xor
fadds
notl
mov
sbb
mov
lods
inc
push
lret
pop
and
test
and
pop
jl
pop
push
mov
add
jg
pop
inc
jno
sub
iret
fstpl
inc
adc
out
push
xor
pushf
aaa
dec
mov
and
fcmovbe
jo
out
subl
xor
fldcw
js
pop
inc
out
or
jge
imul
mov
test
xchg
ret
pushf
pop
pop
sbb
pop
lods
or
jns
mov
push
xchg
fcmovu
rorb
xchg
and
in
call
or
jle
push
jecxz
fcomps
pop
push
cmp
jns
mov
adc
mov
sbb
adc
pop
fs
jle
insl
adc
pop
lret
scas
cwtl
out
and
pop
cmp
into
jb
sub
addr16
popf
pop
mov
mov
std
xor
inc
ja
pop
adc
add
adc
aaa
clc
gs
lcall
mov
lods
in
adcb
xor
pop
mov
adc
mov
mov
rcrl
dec
mov
cs
dec
outsb
into
insb
lahf
ljmp
mov
cmp
dec
mov
pop
xor
fcompl
add
in
push
stc
jo
aas
push
pop
adc
cmc
movsb
out
pushf
dec
lods
push
mov
test
cmp
or
leave
les
xchg
hlt
mov
js
xor
int
push
outsb
or
call
stos
lahf
in
sbb
mov
mov
stos
jecxz
das
push
xor
push
lahf
ficompl
or
xlat
negb
push
loope
aam
or
mov
fisubl
pop
insl
sub
addr16
mov
cmp
cltd
jg
and
idiv
les
xchg
adc
jecxz
test
pop
adc
int3
jno
and
jae
dec
jecxz
ret
je
lret
jbe
cs
int3
push
mov
xchg
pop
jmp
sbb
pop
mov
cltd
xchg
lret
ljmp
pop
ret
leave
push
pop
adc
push
jbe
xchg
stos
loope
jl
xchg
dec
add
fimull
lcall
sub
sti
pop
pusha
mov
imul
jge
dec
leave
data16
cwtl
addr16
bound
nop
jo
std
das
sub
dec
and
xchg
push
out
or
mov
jge
fisubrl
xchg
sbb
and
cmpb
or
dec
clc
or
dec
pop
or
imul
jo
pop
push
pop
jo
xchg
push
arpl
cmp
shrl
xchg
pop
xchg
aam
jecxz
aad
adc
xchg
push
sbb
fcompl
adc
aaa
fld
cmc
xlat
push
push
mov
aad
jno
and
movsb
pop
fcmove
mov
push
cltd
add
popf
or
test
mov
ret
and
xlat
and
pop
clc
mov
mov
dec
es
sbb
inc
pop
gs
cmpb
push
mov
sbb
or
dec
jmp
imul
fdivl
xchg
popa
insb
sub
xor
mov
sub
pop
push
pop
sahf
push
adc
call
stos
pop
fidivl
jp
pop
sti
nop
inc
cmpsb
dec
imul
lret
lea
jge
jns
jg
pcmpeqw
repz
repnz
adc
in
cmp
pusha
inc
mov
hlt
push
push
mov
fadd
repz
jg
cwtl
stos
mov
mov
or
push
pop
lock
int
stos
push
in
pop
push
divl
les
rorb
std
sbb
and
pop
pop
adc
repz
mov
add
mov
xchg
out
mov
sub
mov
stos
push
jns
nop
inc
int
or
push
pop
insl
push
jbe
and
jo
push
push
push
mov
dec
or
cmp
pop
cmp
pop
insb
cwtl
flds
lret
jne
repz
or
inc
mov
arpl
pop
cld
insb
adc
aam
pop
mov
pop
jp
pop
xchg
sbb
mov
cmc
cwtl
pop
pusha
and
shlb
shlb
lret
sbb
xor
test
pop
rol
or
cmp
lock
add
sub
inc
push
push
pop
jge
and
pop
mov
int
mov
rcll
pop
dec
cmp
fcompl
jecxz
mov
cld
arpl
adc
pop
imul
mov
sub
movsl
hlt
in
dec
subb
scas
push
and
mov
rcll
jecxz
stc
pop
pop
sub
ret
sti
rcr
dec
inc
pop
add
jp
dec
mov
pop
sarb
or
and
mov
push
adc
lea
pop
in
jno
lahf
out
imul
pop
dec
ja
int3
das
pop
hlt
test
arpl
push
scas
push
or
aad
xchg
cmp
call
pop
mov
clc
scas
sarb
das
clc
popa
jp
mov
cmp
pop
cld
les
shll
pop
outsb
sub
push
pop
pop
cli
mov
xchg
mov
loope
repz
in
cmp
ljmp
int3
andb
push
pop
int
sub
and
pop
push
xor
mov
sbb
lods
push
pop
adc
push
jb
scas
cmc
mov
jmp
outsl
data16
sbb
arpl
ljmp
pop
jg
cli
fcomps
ret
xor
and
pop
pop
lahf
pop
frstor
adc
ja
outsl
mov
push
mov
divb
fucomi
cmp
lock
xchg
push
pop
add
jbe
movsb
lea
pop
mov
fcmovb
dec
xchg
mov
in
push
adc
inc
imul
add
push
cltd
retw
pop
mov
cmp
int3
mov
dec
enter
pop
cmpsl
ja
scas
inc
dec
sahf
jle
pop
mov
lret
and
scas
iret
loopne
pop
sub
bound
lcall
adc
and
andb
xchg
loope
pop
movsl
jge
push
lcall
jecxz
insb
std
pop
jae
push
pop
xor
adcl
movsl
jnp
jo
xor
sub
test
loop
mov
cli
lods
pop
rorl
scas
sbb
or
and
mov
in
rcrl
lds
inc
pop
out
gs
mov
add
int
push
inc
inc
jns
hlt
pop
gs
stos
mov
outsb
ret
inc
int3
nop
and
in
stos
jmp
fldl
push
pop
or
mov
out
add
and
pop
sub
pop
xchg
mov
add
pop
in
loop
and
pop
jb
rcll
jno
dec
add
test
sub
lret
pop
jns
push
push
dec
test
pop
lcall
inc
pop
pop
mov
daa
sub
mov
out
ljmp
roll
add
sbbb
lret
push
pop
jno
jb
out
ficoml
push
pop
mov
pop
push
mov
daa
inc
jecxz
je
divb
rclb
pop
mov
imul
lods
dec
cmp
pop
jno
repnz
sbb
jo
call
std
jbe
pusha
push
add
ljmp
pop
or
sbb
int3
push
pop
es
dec
add
nop
int
mov
add
ja
sbb
hlt
pop
dec
cmp
push
push
js
pop
out
dec
cmp
lret
mov
int3
cmc
scas
call
mov
dec
sub
pop
movl
push
cmp
mov
pop
jo
idivb
add
fwait
adc
insl
adc
lahf
jno
pop
lret
xorb
hlt
imul
popa
int
add
push
pop
cmp
xchg
pop
std
jge
mov
aaa
ret
add
daa
push
xchg
sbb
pop
fisubl
pop
call
xchg
pop
jl
cld
push
in
pop
mov
adc
repnz
popa
mov
stos
xchg
fcmove
dec
daa
jp
xchg
insb
pop
push
sbb
pop
and
bound
popa
jo
pop
push
hlt
or
sub
in
push
mov
mov
adc
cs
outsb
push
jp
pop
js
pop
dec
sbb
lcall
or
xor
in
pop
aam
aad
lds
stos
mov
sbb
pop
fcomps
pusha
mov
fstps
dec
sub
pop
add
pop
das
cmc
enter
in
pop
cld
and
aad
xchg
int
pop
fmul
mov
cmp
sub
pop
test
scas
cltd
icebp
fiaddl
in
pop
lock
push
cmp
xor
mov
rcrb
jnp
pop
fldcw
pop
cmpsl
pushf
decl
pop
outsb
popf
push
dec
sub
fbstp
pop
adc
xchg
mov
not
pop
mov
pop
clc
scas
in
fs
cld
mov
dec
mov
or
mov
push
gs
xchg
push
ja
and
mov
push
push
or
repz
pop
addr16
addb
sbb
bswap
dec
call
int3
lahf
loopne
pop
dec
mov
pop
mov
sbb
stc
mov
shll
xchg
and
sbb
test
jg
adc
dec
pop
push
int
nop
sbb
mov
xor
test
xchg
lock
fadds
adc
das
xchg
cltd
negl
daa
lahf
fstl
outsl
sbb
in
mov
sbb
int
subl
repz
push
adc
pop
xlat
sbb
mov
xor
in
cli
sub
enter
pop
scas
add
or
imul
fadds
jmp
mov
adc
rclb
sbb
jle
lea
add
ret
loopne
or
adc
ficomps
dec
mov
cmc
pop
xor
or
jae
pop
xchg
jne
idivl
jle
pop
loope
add
adc
sub
mov
adc
test
mov
xor
mov
sub
aaa
inc
dec
js
pop
sbb
sub
push
or
adc
ja
test
imul
push
sub
movsl
ret
mov
pop
cmp
int3
dec
call
pusha
mov
jns
fldenv
mov
mov
iret
pop
jmp
sbb
cmp
add
lds
outsl
je
in
or
pop
sub
push
pop
add
mov
sbbl
adc
icebp
popa
pop
fsubrl
divb
cmp
jno
or
jb
mov
cmp
mov
sbb
mov
dec
mov
lret
pop
cmp
adc
push
fbstp
aas
mov
add
es
pop
sbb
mov
hlt
sbb
mov
mov
stos
fmull
out
jbe
sub
mov
fcmovnb
cltd
in
dec
pop
int
imul
popf
add
iret
leave
xchg
add
cwtl
rcrb
enter
lahf
add
xor
lcall
push
jbe
into
jmp
cmp
xor
pop
dec
lods
xor
pop
jb
push
sbb
lahf
push
inc
mov
in
insl
pop
sarb
pop
fsubrs
sbb
loop
jecxz
push
int
andb
sbb
rcrl
rep
or
ljmp
or
es
lds
and
fxch
rolb
js
fbld
fcoms
movsl
pop
cmp
push
rolb
adc
fucomi
scas
stos
sub
ljmp
cmpsb
cmp
shlb
pop
or
inc
xor
mov
mov
fs
mov
push
loopne
push
rorb
pop
rcrb
icebp
pop
mov
orb
int3
rol
or
cmp
and
cmp
aas
sbb
pop
iret
lahf
shl
sarb
mov
int
mov
push
mov
sar
or
mov
testl
in
pop
inc
xchg
test
imul
push
leave
pop
cmpsl
loop
mov
scas
fucompp
sbb
gs
xchg
sbb
jmp
lahf
in
int
or
popl
xchg
mov
movsl
hlt
push
insb
xchg
popf
mov
dec
lcall
fwait
pushf
mov
std
mov
jbe
cwtl
popa
ds
or
pop
addb
movsl
insl
fwait
push
add
fcmovne
add
pop
icebp
cmp
sbb
or
ret
decl
pop
lret
mov
pusha
lods
das
pop
sbb
andl
jo
pop
enter
icebp
mov
mov
pop
pop
mov
vcmpnltss
push
out
pop
pop
scas
lret
inc
mov
insb
pop
or
xchg
test
bound
mov
cmp
xlat
jno
push
test
dec
pop
adc
popa
in
push
adcb
mov
mov
ret
or
jae
cmc
dec
pop
out
mov
addr16
ds
push
push
push
dec
or
int
or
pop
sti
das
jl
inc
insb
ss
mov
fs
aad
xchg
or
xlat
sbb
fucom
jl
pop
out
cmp
mov
scas
into
hlt
imul
push
rdtsc
rorl
outsb
pop
int
dec
xor
or
cltd
jno
fisubl
in
xor
cmpb
pop
push
push
nop
scas
leave
cmp
arpl
clc
pop
push
sbbl
addr16
pop
enter
lea
sbbl
in
out
hlt
aam
pop
cli
add
pop
pop
sbb
xor
mov
ds
pop
shrl
xor
inc
pop
cltd
adc
pop
sbb
das
pop
dec
mov
and
decl
inc
outsw
push
stos
cmp
cmp
sbb
enter
mov
or
jmp
insb
shlb
jmp
dec
xchg
shl
inc
pop
push
sub
sbb
pop
bound
dec
jb
mov
pop
lahf
mov
testb
dec
xchg
cs
mov
shrb
fcmovnu
pop
aaa
sub
icebp
inc
out
lock
pop
pop
lds
mov
and
or
pop
mov
xor
lds
nop
stos
mov
lret
into
and
mov
in
xchg
pop
lahf
lods
sub
cmpl
iret
lret
mov
scas
inc
loop
jo
jae
dec
repnz
push
cmpsb
pop
mov
int3
pop
xor
int
adc
jo
popl
fisttpll
testw
lods
mov
pop
sub
pop
and
fnstcw
mov
pop
cmpsl
call
inc
sti
pop
jbe
in
popf
int
inc
mov
aaa
mov
rcrl
sub
pop
clc
cwtl
jg
sbb
fwait
movsl
jle
or
ds
mov
mov
enter
mov
mov
sbbb
test
and
decl
out
push
in
pop
lods
data16
cmp
fistpl
cld
cmc
add
mov
xchg
lock
jg
mov
pop
or
pop
iret
jecxz
xor
inc
push
into
dec
mov
sbb
push
fldenv
dec
mov
inc
mov
pop
test
in
jge
dec
inc
or
jmp
pop
push
and
scas
rcrl
and
out
xor
add
scas
sbb
pusha
lcall
push
gs
aas
cltd
lods
addl
xchg
xchg
shrl
ss
xchg
int3
cmc
pop
pop
xlat
daa
push
nop
push
int
dec
pop
push
out
scas
inc
sub
movsb
pop
insl
addr16
cmp
test
int
pop
mov
xor
lret
or
sbb
or
and
pop
sbb
add
mov
pop
dec
or
or
dec
pop
sbb
inc
outsl
in
cmc
fmuls
bound
sbb
mov
lahf
pop
mov
ror
jecxz
mov
loop
pop
fs
cmpsb
cmp
fisttpll
cld
cmp
icebp
test
xchg
cltd
jl
jp
lahf
jo
jmp
fcomi
bound
or
pop
mov
loope
xchg
test
out
pop
cmp
push
cld
movsl
mov
iret
pop
push
sbb
out
pop
jecxz
inc
or
mov
pop
inc
repz
jne,pn
sarl
xchg
sbb
push
adc
out
das
push
pop
mov
jle
pop
xor
fldt
jo
sub
inc
cltd
push
enter
mov
rcll
fldenv
sbb
lahf
add
les
xor
clc
mov
pop
jno
lds
cld
sti
xor
or
and
mov
push
mov
xor
mov
inc
les
fisubrl
popf
orb
scas
es
push
mov
xchg
dec
loopne
sub
repz
jg
lahf
or
sub
scas
into
cld
outsb
int
stc
inc
imul
fldt
jae
add
sbb
cmc
mov
push
push
mov
mov
xchg
mov
cmpsl
add
aaa
push
pop
nop
dec
popa
arpl
mov
ss
and
sub
cmpsb
sahf
adc
mov
fcoml
fiaddl
dec
xchg
cld
jnp
jns
pop
outsb
clc
mov
lret
leave
iret
sub
xor
aad
cmp
dec
ja
mov
and
jno
les
pop
cmpsb
pop
addr16
andb
adc
or
rorl
sub
lahf
jo
movsl
pminub
insl
mov
mov
gs
in
add
jmp
scas
pop
lea
jl
fcoms
or
dec
aaa
push
xchg
arpl
inc
jno
scas
mov
rcll
xor
pop
dec
xor
adc
pop
inc
sarb
or
inc
lret
lds
dec
pop
inc
std
das
movsl
pop
insb
mov
sub
xchg
push
xor
decl
mov
enter
mov
push
sbb
mov
pop
cmp
push
fdivrl
sbb
push
add
arpl
xor
sbb
movsb
int
pushw
jbe
leave
and
imul
or
xor
lea
xchg
sub
test
pop
cmp
or
stos
insl
pop
nop
xchg
in
fiadds
pop
pop
out
pop
inc
pop
add
add
dec
sahf
fstps
cmp
jp
test
daa
dec
cmp
pop
repnz
push
mov
int3
sub
mov
mov
adc
push
or
sub
outsl
jmp
pop
mov
int
call
mov
clc
jb
pop
jge
lods
mov
cltd
pop
pop
lahf
movsb
push
or
sbb
mov
pop
dec
add
sbbl
push
in
mov
pop
pop
stos
sbb
mov
pop
incl
xor
pop
sbb
out
pop
dec
rcrl
int
or
mov
push
pop
cld
stos
cmp
imul
push
in
aam
pop
sub
lea
pop
int
addr16
idivb
push
adc
in
adc
jbe
pushf
lods
push
sbb
sbb
loop
dec
cli
lret
dec
mov
insl
hlt
cmpsb
out
inc
push
mov
xor
jne
sbb
inc
aaa
loopne
cmp
lret
push
pop
cmc
jno
fistpl
and
std
dec
pop
mov
mov
cmp
pop
imul
pop
push
push
or
int3
jbe
jnp
call
jg
mov
pop
jns
pop
and
add
mov
xchg
mov
sbb
sbb
dec
popa
in
push
push
cli
add
cs
pusha
sub
ds
mov
je
js
sahf
jb
sub
xchg
inc
pop
adc
pop
push
mov
push
scas
out
pop
cmp
add
pop
lret
pop
pop
aad
dec
mov
mov
ljmp
pop
jle
push
pop
mov
icebp
lret
dec
ss
or
test
out
aaa
pop
xor
and
lfs
pop
int
push
sub
push
dec
pop
imul
daa
ficomps
jo
cs
jmp
sbb
inc
pop
cmpl
adc
fnsave
pop
dec
clc
call
fildll
fs
jo
ficompl
pop
xchg
les
mov
jae
adc
int3
cmp
sbb
imul
sub
pop
add
int
sbb
xlat
fs
pusha
cmpsb
int3
call
movsb
push
dec
and
mov
mov
sbb
sub
daa
hlt
stos
add
inc
mov
scas
std
jo
xchg
xlat
in
sbb
iret
pop
imul
cmpsl
rcr
imul
lcall
insl
mov
subb
fcmovbe
jnp
xlat
mov
fwait
lods
adcb
ljmp
and
mov
sti
cmp
xchg
inc
clc
fndisi(8087
cmp
adc
or
fnstsw
xchg
jge
int3
sub
pop
and
repnz
mov
inc
loop
scas
out
jb
pop
scas
adc
enter
lock
xor
pop
sbb
pop
and
jne
scas
repnz
cmc
mov
movsb
jns
and
js
lds
mov
adc
pop
jb
and
jecxz
fisubrs
daa
pop
or
cmp
dec
outsl
lds
jl
add
test
xchg
mov
add
xchg
cwtl
arpl
add
mov
jne
pop
orl
int3
loop
and
pop
mov
xchg
pop
jnp
sub
loop
cld
push
mov
insb
ja
pop
pop
or
adc
mov
mov
pop
dec
in
pop
or
andb
outsl
outsb
pop
aaa
push
jno
adc
mov
inc
lods
enter
ljmp
out
outsb
std
pop
fstpl
cmpl
aad
int3
push
inc
pushf
out
pop
dec
mov
rol
mov
mov
sbb
pop
adc
and
test
xor
test
ja
into
insb
xchg
movsl
stc
xchg
pushf
pop
push
jp
imul
dec
pop
addr16
cmp
mov
shll
es
into
mov
loopne
sbb
outsb
test
mov
imul
pushl
addr16
and
ret
inc
pop
rol
das
mov
rcrl
loopne
addr16
pop
inc
test
dec
push
pop
dec
pushf
fdivs
dec
insl
scas
push
repz
add
cltd
mov
fsubl
negb
xchg
lods
data16
idivl
or
pop
mov
mov
push
aad
adc
ja
and
sbb
nop
cli
fdivr
mov
add
push
aaa
jecxz
mov
in
pop
cmp
mov
xchg
sahf
scas
pop
or
out
fcoms
into
je
inc
inc
lods
mov
pop
and
and
or
adcb
xor
ljmp
push
pop
add
sbb
iret
pop
lret
mov
sti
xchg
pop
ljmp
lret
scas
fsubrl
cmp
aas
and
mov
movsl
pop
pop
mov
mov
push
jp
mov
mov
jbe
and
shr
mov
mulb
lahf
test
lret
or
je
xchg
push
fdivrl
test
pop
adc
out
ja
in
inc
addr16
je
clc
sbb
ss
fsubl
cmpsl
and
mov
int
mov
sbbb
inc
pushf
pop
mov
dec
inc
nop
test
mov
stc
pop
fsubrl
inc
pop
mov
lock
scas
movsl
call
sti
jbe
pop
adc
aad
or
mov
mov
mov
adc
dec
sbb
jl
xchg
jle
pop
push
int3
jp
pop
scas
sbb
jbe
and
xor
pop
cwtl
jae
sub
xor
mov
fcoml
cli
inc
ret
add
and
shrb
ljmp
psubq
test
pop
addr16
imul
dec
bound
lds
sub
add
je
scas
mov
push
sbb
scas
add
iret
dec
and
mov
inc
cltd
and
adc
ljmp
mov
leave
dec
push
ficompl
pop
jp
outsl
dec
mov
pop
xor
into
mov
dec
and
mov
or
pop
jae
pop
push
cmp
sub
int
and
jge
gs
movsb
repnz
add
shll
or
movsl
push
pop
int
mov
dec
imul
mov
ljmp
cmpsl
rcrb
fists
pop
ret
aam
and
pop
dec
push
bswap
lcall
pop
loope
in
int
jne
out
adc
sub
and
scas
idivl
outsb
ds
inc
pop
mov
adc
je
aam
and
mov
pop
mov
iret
andb
and
pop
jge
sbb
lods
je
pop
push
ja
fimuls
push
dec
pop
es
shlb
xor
call
xchg
ja
sarb
fwait
cld
add
push
push
ds
ret
int
lahf
push
mov
clc
cmp
daa
inc
add
or
insb
jo
pop
mov
sub
fistpl
aas
ret
fs
xchg
mov
xchg
xchg
mov
fld
jp
and
outsb
ss
test
ds
dec
pop
xor
jno
cmp
jmp
shlb
push
mov
pop
imul
rcrl
cmp
pop
add
rclb
in
cmp
push
test
jl
aam
pop
fcmove
nop
and
in
pop
lcall
stos
push
imul
jecxz
sbb
push
test
arpl
test
pop
push
push
sub
dec
xor
mov
fxch
shll
int
mov
fists
mov
sub
outsb
in
or
mov
jp
add
pop
xor
clc
mov
add
pop
dec
push
lahf
push
mov
pop
adc
jmp
dec
inc
push
pop
jne
add
sbb
xchg
sub
push
pushl
inc
aam
int
cmc
out
fnstsw
ds
repz
adc
lods
aas
pop
push
dec
arpl
iret
mov
fwait
jb
xor
mov
cmp
push
hlt
add
mov
xor
loopne
pop
aaa
or
rorl
pop
in
lret
pop
pushf
test
iret
stos
jg
sbb
fdivrp
add
loop
test
out
adc
pop
mov
jno
dec
jae
fisubl
sbbl
lahf
mov
pop
push
jmp
aas
ja
pop
pushf
adc
pop
jb
inc
pop
cmp
push
test
inc
scas
fs
xchg
sbb
jo
pop
jg
je
push
sbb
mov
sub
movsl
loope
pop
aad
jbe
insb
push
sub
cli
inc
test
cmc
test
fs
cmp
jmp
mov
cmp
imul
out
mov
pop
push
sub
rorl
pop
ss
or
adc
or
sbb
cmp
pushl
icebp
rorb
fiaddl
pop
mov
cmp
pop
movsb
sbb
popf
mov
int3
stos
jno
and
jo
adc
iret
pop
repz
imul
mov
lea
inc
sbb
pop
xchg
in
jle
xor
pop
clc
xor
add
cs
mov
add
call
mov
dec
xchg
ja
scas
jnp
cmp
in
ljmp
inc
fcoms
pop
outsb
push
pop
mov
jnp
pop
or
ja
dec
lock
ficomps
cwtl
mov
clc
negl
dec
popf
pop
scas
stos
int
mov
cli
mov
sub
stos
ja
loopne
sub
ss
mov
into
pop
jb
xchg
outsb
call
mov
xorl
jmp
xlat
pop
mov
aam
dec
testl
xor
lret
sbbl
dec
cmp
int
inc
and
in
sbb
icebp
and
add
push
imul
dec
sahf
lahf
movsl
ja
jbe
pop
fisttpl
push
int
pop
and
mov
push
pop
test
outsb
inc
aad
xchg
pop
inc
lret
pop
pushf
lods
ss
bound
jp
pop
jns
xor
mov
jbe
inc
cmp
or
cmp
pop
push
mov
mov
stos
cmp
dec
std
movsb
imul
pop
sbb
enter
and
sbb
sbb
mov
mov
sbb
cmpsl
mov
mov
arpl
cltd
push
mov
add
fsubrs
scas
cs
popf
xchg
dec
mov
pop
sbb
mov
pop
inc
add
ljmp
cmp
jno
sbb
cmpb
mov
push
pop
pop
pop
je
ret
nop
jae
in
ljmp
pop
sbbb
jecxz
inc
repz
cli
cmp
sahf
xor
addr16
or
mov
ss
pop
sub
pop
jnp
cmc
xorl
mov
push
lea
mov
mov
sbb
repz
push
mov
jno
pop
movsl
mov
data16
lods
pop
inc
pop
push
mov
or
pop
dec
js
je
filds
addr16
sub
xchg
inc
mov
mov
pop
mov
int3
out
stos
das
xchg
pop
repz
xchg
fdivrp
and
pop
dec
pop
push
test
adc
or
test
mov
repz
pushf
sbb
xchg
push
dec
out
pop
xchg
shll
push
jbe
pop
daa
push
out
cmp
sub
mov
push
lods
mov
lds
dec
mov
stos
js
cmc
pop
and
cmp
mov
pop
add
lret
insl
das
cmp
jns
mov
mov
add
int
lds
jp
mov
cmpsl
pop
inc
inc
mov
pop
cmp
cmp
pop
ss
ja
mov
lods
lods
xor
mov
mov
adc
loopw
outsl
mov
into
popa
repnz
in
jge
setne
scas
pop
mov
fsubr
scas
loop
js
mov
jg
add
cmp
push
fcomps
leave
insl
and
arpl
pop
push
dec
stc
scas
add
inc
mov
xchg
gs
js
hlt
pop
clc
push
int
push
insl
xchg
cmp
ret
sub
pop
sbb
adc
push
pop
adc
call
add
xchg
mov
jne
nop
pop
pop
sbb
xchg
rcrl
mov
cmp
or
loope
lods
jns
push
jo
pop
push
sub
mov
jnp
xchg
stos
rcrb
popl
lret
add
pop
add
xor
pop
pop
mov
std
and
cwtl
pop
bound
inc
test
mov
leave
stos
aad
cmp
add
pop
adc
mov
sbb
pop
jo
pop
add
mov
pop
push
pop
insl
mov
xchg
or
jb
mov
das
stc
mov
cmp
stos
lcall
popa
jmp
sarl
add
ss
pop
fdivrs
push
dec
jo
pop
and
fistps
cli
repz
repz
scas
hlt
pop
mov
sbb
roll
lahf
std
lods
je
dec
pop
inc
dec
push
dec
in
lds
in
js
cmp
movsl
test
leave
fiaddl
mov
aas
jno
movsb
mov
dec
lret
cli
ja
mov
imul
cmpsl
leave
pop
cmc
out
jbe
and
dec
scas
jp
into
aad
dec
cwtl
push
push
adc
cmp
inc
dec
jl
mov
push
data16
lods
imul
dec
or
inc
scas
jmp
pop
xchg
rclb
pop
and
or
aad
enter
cld
xor
xor
mov
outsb
mov
mov
into
sbb
ror
sbb
adc
jbe
cmp
cmp
andb
lea
dec
jl
out
aam
dec
pop
lds
dec
data16
int
pop
jne
mov
jmp
jo
or
pop
xor
stos
mov
pop
mov
mov
movsl
idivl
mov
lcall
pop
leave
lds
fstpt
cmp
sub
test
mov
jne
cmc
push
sbb
mov
aas
inc
enter
jns
pop
and
jmp
lahf
pop
jo
cmpsl
xchg
xor
xchg
pop
orl
in
pop
fisubl
add
mov
mov
loope
pop
jg
xchg
pop
outsb
lret
xchg
or
mov
test
cmp
iret
cltd
pop
jbe
sbb
fidivrs
sub
pop
cli
mov
dec
aad
pop
inc
mov
or
leave
xchg
jbe
in
mov
mov
inc
jg
sbb
pop
insb
pop
jmp
push
xor
pop
pop
mov
enter
sbb
call
aas
pop
cld
cmp
inc
mov
dec
test
ret
aad
jbe
mov
and
xor
cs
xchg
dec
add
mov
push
mov
int3
jne
dec
push
stos
dec
cmpsb
mov
shrl
jecxz
adc
pop
pushf
out
cmpl
stc
lret
inc
mov
pop
jl
sub
xchg
jo
pop
fs
mov
mov
ret
ficompl
loop
jl,pn
dec
bound
jg
in
jae
fs
cmp
mov
cmp
clc
lcall
inc
or
ret
pop
xchg
int3
mov
jmp
sbbl
sub
test
in
pop
add
dec
jae
rcrl
arpl
adc
mov
sbb
les
mov
jbe
mov
xchg
sbb
push
cld
iret
pop
fs
std
int3
incl
lret
add
repz
sub
add
mov
fwait
sbb
out
shl
jo
cmc
lahf
pop
lret
js
cmp
pop
sub
out
in
mov
inc
or
out
mov
lahf
leave
xchg
add
out
pop
filds
enter
sbb
test
and
fcmovne
sti
mov
pop
push
sub
mov
pop
call
mov
sbb
loopne
scas
mov
or
leave
adc
push
int3
scas
outsl
xor
pop
bnd
mov
lds
xor
inc
pop
cmpsl
xor
sbb
mov
and
dec
repnz
aas
gs
jnp
bound
pop
ret
mov
sbbb
stc
xlat
pop
pop
in
dec
mov
sub
xchg
sbb
in
jmp
mov
loopne
inc
jo
xor
leave
test
ds
dec
sub
mov
pop
out
push
in
enter
jbe
xor
lret
push
call
mov
fs
pop
pop
ret
xor
loope
mov
pop
push
xchg
fcompl
add
cmp
mov
pop
in
mov
or
inc
jbe
dec
sbb
test
out
mov
jl
nop
pop
jmp
scas
and
shrl
fistpl
sbb
jne
xchg
pushf
pop
xchg
push
or
call
clc
dec
sti
adc
int
outsl
stc
dec
pop
cs
pop
mov
insl
pushf
sub
in
adc
inc
sub
jns
dec
in
sarb
loope
mov
mov
pusha
lahf
mov
or
jnp
sub
adc
pop
jle
stos
test
out
sbbb
dec
int
sub
xor
mov
loopne
mov
sub
jb
cmp
hlt
out
fcmovnb
or
add
sub
rorl
sub
repz
push
pop
jno
test
popf
mov
jmp
xchg
dec
sbbl
pop
dec
pmaxsw
mov
and
pop
pop
in
and
mov
pop
loopne
xchg
push
cld
sbb
clc
shlb
mov
int
arpl
push
rcl
or
dec
sub
cmp
stos
adc
pop
cltd
mov
pop
jo
push
push
pop
mov
lock
subl
scas
mov
mov
inc
movsl
jp
into
test
mov
imul
cs
mov
pop
jbe
pop
data16
pop
pop
int
mov
and
pusha
dec
lcall
add
adc
pop
sbb
in
mov
push
jae
rclb
fisubl
mov
sbbb
lahf
pop
popa
pop
mov
sbb
mov
adc
cmpsb
int
mov
mov
push
dec
stos
mov
push
sbb
inc
xchg
dec
push
add
push
mov
mov
sbb
pop
or
add
leave
scas
push
mov
mov
pushl
fcmovnbe
jl
xchg
divb
addr16
mov
xor
jge
mov
int
repnz
fimull
stos
movl
pop
int
mov
mov
mov
fcmovbe
ucomiss
fdivrl
test
stos
pop
addl
jmp
loope
jns
pop
mov
int3
pop
dec
movsb
lret
cltd
pop
mov
push
mov
out
fdivs
ljmp
mov
stc
pop
mov
daa
push
xor
icebp
cmpl
out
pop
int3
dec
mov
jecxz
lea
pop
sbb
insb
imul
adc
popa
pop
jge
mov
sbb
popf
das
fisubrl
pop
int
flds
sahf
push
fsubrl
inc
in
push
add
mov
xchg
stos
inc
ret
pushf
or
aas
pop
sbb
push
movsb
lcall
push
popf
dec
or
pop
pop
push
rcrb
pop
inc
sbb
push
ret
dec
pop
jg
add
pop
test
pop
lea
enter
sub
or
in
cmp
in
popa
jl
inc
pop
mov
cltd
int
inc
push
loop
lea
in
push
scas
mov
jecxz
stc
in
repnz
dec
cli
mov
dec
push
lods
inc
scas
aam
pop
sub
ljmp
add
push
inc
fcmovb
or
push
fisttpl
xor
sbb
add
rolb
jl
mov
sbb
push
pop
sbb
and
push
int3
scas
cmpsl
js
mov
sbb
data16
movsl
cltd
ret
pushf
into
push
push
jle
out
iret
int
push
mov
lahf
xchg
aas
inc
popf
fcmovnbe
push
popa
or
pop
cltd
sarl
cmp
jo
dec
dec
ss
pop
cmp
fs
sub
xor
push
test
pop
cli
movsl
and
stos
fwait
and
jnp
pop
fwait
mov
movsb
jbe
cwtl
iret
std
lods
pop
xor
or
sbb
sbb
insb
sub
adc
scas
popl
sub
cmp
into
rorl
mov
lock
sbb
xchg
pop
repz
fstpl
mov
jbe
lcall
iret
out
int3
jno
les
pop
repnz
stc
and
mov
mov
adc
enter
shlb
cmp
mov
jl
arpl
inc
pop
gs
jge
jo
lds
mov
sbb
adc
mov
pop
test
int3
lea
fldt
pop
out
andb
push
pop
into
in
pop
sbb
mov
je
int3
in
pop
loopne
iret
mov
push
or
pop
out
and
xchg
les
pop
out
ja
or
push
cmp
mov
xor
mov
cld
pop
mov
xor
sbb
les
lcall
fstps
and
aaa
pushf
mov
adcl
pop
sahf
scas
or
rclb
dec
mov
xchg
and
push
sahf
sbb
cmp
xchg
arpl
rcr
addr16
pop
subl
and
jbe
int
addb
and
das
stc
pop
popf
jl
addr16
es
movsl
pop
lcall
incl
xor
dec
stc
inc
sub
xchg
pop
out
sbb
int3
sub
push
out
negb
pop
pop
not
or
mov
cmc
pop
dec
pop
push
pusha
sti
mov
pop
ret
sbb
xor
aad
pop
int3
adc
stos
cmovle
shlb
xchg
mov
jnp
fistpl
pop
and
cmp
dec
xchg
lret
mov
shlb
mov
mov
jns
pop
or
inc
mov
in
pop
jo
mov
in
sbb
lret
scas
clc
xor
adc
arpl
and
insb
inc
push
fisubs
test
aaa
imul
jne
inc
js
mov
call
pop
pop
add
sbb
clc
fimull
xor
mov
push
call
ss
pop
aad
sbb
sarb
clc
xor
mov
out
out
push
bound
mov
inc
lcall
sahf
mov
rorb
pop
or
out
xchg
dec
test
mov
pop
pop
stc
imull
jne
out
sbb
inc
fcompl
pop
jnp
int
mov
xchg
push
inc
add
sbb
mov
data16
insl
dec
cmp
mov
pop
pop
out
push
shrl
push
dec
push
imul
fstpt
pop
or
pop
jmp
dec
mov
and
mov
decl
mov
dec
xchg
inc
pop
sub
out
push
cmp
mov
inc
xlat
mov
addr16
mov
cltd
lahf
dec
sbb
decb
ret
pop
mov
jae
shll
xorb
lods
lret
and
sbb
div
xchg
cmpsb
xchg
jmp
mov
pop
sbb
or
mov
icebp
inc
mov
xchg
jns
sbb
pushf
push
pop
or
negb
xchg
add
int3
xchg
dec
addr16
fldl
pop
jge
test
or
add
sub
ss
pop
cmpsl
jbe
or
mov
aad
enter
sbb
nop
rorl
dec
jne
pop
mov
loop
lahf
inc
lret
bound
les
pop
or
xor
sbb
popf
push
add
lea
aad
add
mov
mov
jbe
push
cmpb
pop
sti
pop
xchg
jp
add
cmp
imul
pop
push
sbb
pop
push
adc
adc
push
pop
scas
xor
test
jmp
cli
pop
rep
cmp
mov
mov
iret
mov
es
sbb
test
pop
xchg
psrad
pop
mov
mov
fstl
add
or
int
pop
adc
jo
pop
leave
sbb
push
jns
pop
pop
mov
imul
pop
cmp
insb
adc
sbb
and
xchg
pop
sbb
and
pop
cmpsl
dec
inc
movsb
mov
pop
fimull
cmp
and
mov
sub
pop
push
scas
popa
int3
inc
xchg
cmp
cld
xchg
pop
jne
je
jmp
pushf
sti
push
lods
dec
ret
pop
sub
inc
sbb
adc
cmp
xchg
in
cltd
loop
xchg
hlt
cltd
call
push
pop
push
dec
rcrl
mov
jg
inc
stos
mov
add
pop
ja
mov
aas
pop
aaa
jne
nop
mull
xor
sahf
vsubpd
pop
pop
xchg
enter
ljmp
popa
pop
mov
jg
test
pop
pop
sbb
inc
jecxz
icebp
push
test
in
pop
mov
mov
dec
xchg
pop
add
mov
lret
jno
mov
pop
pop
add
push
or
pop
adc
movsb
call
cltd
das
mov
scas
mov
ja
data16
jae
pop
xchg
dec
jecxz
insb
shrl
or
es
in
dec
inc
nop
pop
pop
jge
sub
cmpsl
lret
jg
add
test
pop
xor
mov
or
mov
ret
imul
lock
int3
shrb
daa
push
cmc
shr
int
mov
inc
mov
lahf
mov
adc
pop
loopne
add
dec
stc
cmpsl
mov
inc
fsts
sub
cli
inc
pushf
dec
sub
fcomps
ficomps
in
pop
cmp
test
imul
pop
repz
in
js
icebp
inc
pop
cmp
aaa
pop
jb
scas
xor
loop
add
inc
push
outsl
icebp
mov
fisubl
inc
adc
enter
push
fdivs
ret
sub
add
neg
jo
mov
iret
nop
das
sub
aas
es
or
xchg
cmp
pop
cltd
jp
xchg
add
lcall
pop
sahf
fmul
jbe
test
push
fnsave
sti
popf
pop
jp
clc
pop
add
add
cli
push
sub
jo
pop
out
mov
int
mov
push
scas
mov
stc
clc
pushf
or
and
ret
icebp
lods
popa
pop
or
movsl
push
outsl
int
jns
jg
lods
push
push
pop
je
mov
insb
out
push
ds
pop
push
push
fwait
loop
js
rcrl
sti
jbe
pop
pop
imul
and
dec
sbb
fs
mov
jbe
mov
mov
mov
leave
and
sub
jl
and
or
mov
dec
or
xchg
sbb
negl
int3
int
aas
in
lock
pop
mov
sbb
pop
adc
popa
mov
sbbl
push
rorl
test
cmpsb
mov
pop
adc
es
lret
in
lahf
mov
test
dec
ror
pop
dec
pop
push
jb
out
pop
cmp
sbb
int3
scas
sbb
nop
push
sub
pop
cmp
out
pop
std
adc
push
mov
jmp
pop
and
fwait
stc
icebp
jecxz
pop
and
cld
int
sub
cli
out
enter
mov
mov
mov
rcrb
sbb
cli
sbbl
lea
insl
jne
fdivl
cmpsl
sbb
sub
push
stos
jg
or
xchg
push
ret
cli
add
sub
pop
mov
mov
fimuls
loop
fmuls
and
push
mov
je
pop
sbb
jb
fdivrp
lds
push
pushf
popa
dec
scas
andb
arpl
lods
pop
jnp
repz
cmp
mov
lds
pusha
pop
out
subl
xchg
fcomps
add
or
repz
mov
jo
pop
sbb
and
xchg
jnp
dec
pop
mov
cwtl
stos
outsl
pop
xchg
add
aad
adc
mov
outsl
pop
dec
testb
sub
sub
mov
pop
add
inc
lods
shll
daa
pop
or
repnz
mov
lret
sbb
inc
add
in
cwtl
movsl
push
sub
pop
mov
pop
arpl
in
or
pop
mov
lea
and
jne
xor
pop
pop
mov
sub
pop
xchg
cmpsl
add
mov
out
rclb
adc
ror
xor
nop
mov
aaa
fldl
insb
test
lods
cmp
nop
cld
mov
pop
scas
mov
push
pop
in
or
dec
pusha
repnz
pop
cmp
fdivrs
filds
mov
dec
pop
mov
pop
sbbb
pop
jb
je
push
lds
push
dec
mov
mov
int3
sub
data16
push
ljmp
scas
imul
xor
mov
cld
sbb
pop
lods
pop
adc
add
imul
mov
pop
sbb
push
loop
mov
push
or
std
cmp
jmp
xchg
xor
push
pop
pop
sbb
pop
mov
push
rcll
test
mov
and
dec
jg
in
movsb
ljmp
mov
sti
ret
in
sbb
and
xchg
xor
pop
je
sub
int
dec
or
mov
push
pop
lcall
loope
mov
jbe
bound
sti
cltd
icebp
psubd
or
dec
jo
sbb
mov
test
mov
out
mov
add
test
jb
mov
rolb
mov
mov
jg
push
and
enter
dec
or
lods
xchg
pop
push
int
adc
rcrl
in
push
pop
or
int
mov
fldt
fs
mov
pop
jecxz
push
xchg
cmp
pop
pop
push
jbe
outsb
lret
add
pop
sub
mov
movsb
mov
dec
mov
lcall
adc
int3
hlt
jmp
dec
pop
push
int
ja
mov
xchg
pop
ljmp
leave
pop
push
gs
adc
dec
dec
xor
out
int
mov
xor
daa
inc
xlat
inc
ret
add
cmc
mov
loop
sbb
mov
movsb
pop
dec
jno
xchg
dec
cmp
and
faddl
loopne
std
push
dec
dec
aad
or
mov
test
pop
or
push
lock
dec
ret
jo
or
xlat
add
fs
and
sub
mov
mov
add
sbb
jbe
daa
mov
cwtl
or
jmp
jmp
adc
jo
mov
cmp
add
daa
pop
dec
call
in
js
push
push
pop
sar
push
sbb
jne
mov
pop
and
insb
les
mov
mov
mov
fwait
mov
or
mov
in
xlat
jnp
dec
mov
ja
lea
insl
mov
mov
enter
mov
mov
pop
sbb
jbe
push
movsb
rcl
or
out
mov
mov
jns
pop
pop
nop
push
jp
xor
add
mov
push
jns
mov
mov
fcmovnu
lds
scas
push
data16
add
mov
pop
orl
cmp
pop
repnz
clc
inc
cltd
xor
pop
int
call
xchg
int3
fisttpl
pop
lock
mov
outsl
pop
jbe
stos
and
les
pop
push
lret
fisubl
jmp
mov
cmc
pop
popf
pop
mov
inc
je
stc
jbe
imul
xor
aad
mov
and
add
shrl
clc
pusha
add
push
lret
dec
mov
ret
in
jecxz
addr16
add
dec
xchg
inc
pop
shlb
xor
jns
sub
pop
out
mov
mov
jmp
lea
pop
sbb
jmp
adc
outsb
sub
sbb
fucomip
dec
cmpsl
dec
je
pop
into
pop
sbb
pop
sarl
ja
fucompp
gs
xor
cmp
add
or
das
test
inc
cld
aas
and
ficompl
mov
pusha
gs
or
push
pop
dec
jl
jae
cmp
pop
lahf
in
fdivrl
pop
loope
sub
dec
subl
movsl
repz
bound
int
sahf
pop
daa
pop
test
pop
sbb
pop
pushf
pop
jl
jb
cltd
sub
movl
mov
es
or
cmp
inc
lahf
sbb
ds
in
cmpsl
ljmp
sbb
cmp
add
jnp
stos
mov
adc
and
jns
pop
enter
add
add
mov
insb
jecxz
out
int
add
dec
mov
push
mov
dec
pop
adc
mov
in
pop
jbe
aad
dec
sub
dec
mov
mov
xchg
pop
pop
or
int
xlat
pop
mov
sub
adc
inc
pop
mov
insb
xorl
pop
ja
rclb
sub
pop
dec
adc
pusha
cmp
or
lods
mov
cli
icebp
xor
fbld
pop
out
mov
mov
jnp
enter
add
test
pop
add
stc
sbbl
xor
jbe
sub
leave
sub
ficompl
cmc
pop
xchg
xchg
mov
stos
dec
sbb
int
add
xchg
cmpsb
and
xor
or
movsb
sbb
dec
ficompl
mov
xor
dec
cld
pop
push
scas
and
or
insl
mov
aaa
jne
out
loopne
in
pop
clc
or
dec
dec
and
xchg
jne
cli
add
lcall
fildl
add
aas
jbe
mov
rcll
das
pop
ja
fldl
jno
cwtl
adcb
scas
mov
lcall
daa
or
pop
repz
jno
fisttpl
pop
adc
dec
dec
movsb
stos
inc
int
sub
push
mov
fnstsw
adc
movsl
rorl
mov
rorb
pop
pop
arpl
mov
pop
fprem
jns
pop
mulb
pusha
addr16
pop
or
cmp
push
push
pop
pop
add
ds
push
idivl
int
cwtl
jo
lcall
pop
pop
adc
fidivrs
pop
scas
push
dec
pop
pop
stos
leave
dec
arpl
ds
pop
movsl
cwtl
jb
jecxz
outsb
jbe
test
dec
fs
ret
jnp
pop
cli
jle
notb
shlb
xchg
pop
mov
ds
fdivrl
clc
clc
lahf
pop
mov
cvtpi2ps
hlt
push
xor
adc
jecxz
pop
cwtl
int
ljmp
sbb
cmp
repz
or
cmp
adc
aas
nop
jmp
pop
cli
pop
lret
arpl
sti
add
xor
mov
push
cltd
pop
xor
fcmovnbe
xchg
insb
xor
adc
ret
xor
dec
push
shlb
leave
jnp
ficompl
out
push
mov
mov
std
fsubrl
scas
enter
adc
sbb
inc
mov
sahf
jg
inc
popf
jno
add
scas
lods
jae
fisubs
xor
frstor
fldt
int
test
cmc
addr16
pop
andb
dec
cmp
iret
sbb
fwait
push
or
mov
shlb
and
or
mov
pop
ror
mov
in
or
xor
popa
jmp
mov
jge
mov
or
dec
test
sbb
cmp
mov
mov
rorb
or
pop
xchg
neg
pop
into
imul
outsl
sub
aam
jp
movsb
repnz
cmpl
pop
inc
sub
lds
or
pop
mov
test
bound
xchg
imul
loope
mov
pop
adc
in
dec
pusha
pop
lret
aad
sti
das
mov
ja
lds
loopne
xlat
js
xchg
xchg
test
jecxz
lods
aas
pusha
and
and
pop
pop
iret
adc
scas
jecxz
jbe
rorl
outsl
sbb
pop
mov
jge
bound
mov
test
mov
fsts
hlt
gs
push
test
jns
add
xchg
gs
or
ret
jo
mov
in
ljmp
mov
je
fistl
ficoml
fisubrl
ds
insl
arpl
push
mov
jp
mov
and
push
dec
dec
cld
pop
jb
cwtl
lahf
out
dec
pop
in
in
sub
incl
test
push
or
inc
sub
jp
cmp
popf
test
cwtl
jbe
fstp
add
jecxz
in
movsb
sbb
jle
pop
mov
out
aas
pop
mov
cs
pop
ret
cmc
imul
pop
xchg
sub
jmp
sbb
and
loopne
dec
cli
jecxz
jge
fucomp
jb,pn
sbb
adc
lret
pop
sub
scas
adc
jne
pop
rcrb
mov
fisubl
or
xor
sbb
sub
popf
mov
fbld
iret
cltd
pop
mov
shrl
mov
cmc
inc
mov
or
pop
es
jb
shrb
mov
pop
aaa
xchg
aam
dec
and
mov
les
jae
inc
dec
rcrb
aaa
cltd
scas
xchg
mov
sbb
mov
pop
xor
push
lahf
inc
repz
cmp
outsb
mov
dec
sbbl
sub
das
pop
data16
fiadds
cmp
sbbb
sbb
cmp
cli
lock
xchg
xchg
mov
scas
mov
dec
or
sbb
sbb
jbe
xor
jnp
mov
repz
push
sbb
fadd
out
ja
ljmp
mov
mov
jnp
fnsave
mov
fsts
enter
mov
in
pop
xchg
mov
pop
je
das
adc
scas
sbb
movsb
fwait
pop
pop
ja
dec
cmp
stos
int
pop
in
pop
dec
xor
xchg
sbbb
push
loopne
pop
sbb
mov
push
dec
arpl
testl
gs
jo
pop
cmpsl
andl
pop
cmpsb
or
jb
adc
mov
leave
faddl
cli
fmulp
pop
push
add
scas
int
xor
loope
mov
adc
insl
test
lcall
pop
sub
pop
enter
testb
jb
ss
push
ret
daa
pop
fs
jg
sub
pop
js
sbb
outsl
ds
sbb
adc
lret
push
int
push
dec
lahf
mov
shr
das
int3
jns
or
out
sbb
js
pop
add
pop
cmp
inc
hlt
pop
lods
add
out
imull
pop
nop
int
jle
dec
jmp
mov
and
mov
fcomp
xlat
int
mov
ss
cltd
mov
add
mulb
dec
repz
jmp
ficomps
aad
xor
pop
popf
nop
cmc
cmp
jle
push
sub
int3
jbe
subps
add
shl
sub
int
mov
adc
lret
cltd
or
iret
pop
lods
subl
xor
int
inc
mov
push
lcall
outsb
lret
ficompl
inc
cltd
jecxz
fyl2x
loope
pop
fstpt
gs
popf
xor
lahf
and
fists
loopne
sti
loop
out
and
sbb
and
data16
bswap
mov
pop
pop
cmp
shll
ret
pop
push
int3
into
dec
mov
pop
lret
push
rorl
mov
fmuls
les
test
or
lret
pop
pop
clc
pushf
cwtl
ret
push
test
scas
xchg
fwait
roll
push
push
jo
cmp
jbe
mov
stos
add
pop
xchg
aam
pop
scas
pop
fs
xchg
int3
rcrl
mov
mov
std
pop
push
dec
mov
inc
push
pop
xor
fcomip
xchg
sub
jne
ljmp
in
int3
cmp
xor
pop
mov
jo
push
stos
stc
xor
out
mov
sbb
sbb
add
cld
sub
fimuls
add
jecxz
cmp
into
or
push
push
push
scas
clc
mov
cmp
clc
or
into
insb
inc
xor
cli
xchg
scas
scas
call
js
vaddpd
loop
rorb
out
fistps
pop
mov
sub
rcrb
call
pop
inc
lret
imul
ljmp
scas
and
fprem
fs
imul
jg
cltd
scas
dec
and
mov
lea
push
and
and
cltd
pop
dec
mov
sub
aas
imulb
add
and
pop
mov
mov
sbbl
lret
push
scas
mov
pop
iret
insb
out
cmpsb
lahf
test
dec
inc
inc
es
loop
lds
int
rclb
push
ret
jo
xor
mov
out
stc
aaa
jp
and
jge
xchg
pusha
sbb
cwtl
cmc
cmp
add
aad
and
push
lret
cmp
fldt
enter
dec
inc
pop
jge
in
sbbl
lea
int3
or
xchg
test
and
dec
ret
bound
jecxz
scas
or
fstpl
ucomiss
jge
mov
mov
aad
adc
inc
addb
filds
sub
aam
sub
pop
mov
dec
jne
pop
push
mov
or
jecxz
aam
pop
mov
xchg
push
std
inc
inc
push
sahf
push
adc
jmp
pop
mov
int
inc
scas
or
push
xor
mov
sbb
lret
sbb
stc
je
pop
lds
adc
inc
mov
jg
sub
subb
clc
testl
mov
cwtl
inc
test
ret
pop
ret
pop
adc
std
jbe
inc
int
pop
jecxz
dec
js
ja
lods
mov
sub
adc
out
in
aam
fimuls
inc
icebp
pop
mov
mov
or
mov
scas
push
xorl
push
push
pop
jo
jle
lock
es
pop
jbe
lcall
dec
ret
in
jmp
cli
mov
xchg
out
and
or
ljmp
pushf
add
push
movsb
sysexit
jb
inc
or
lds
int3
pop
dec
stos
and
mov
and
or
mov
insb
mov
cmpsl
pop
sub
int
popf
jmp
mov
inc
mov
xchg
sbb
call
dec
in
pop
mov
jge
dec
pop
pop
int
add
jb
cmp
imul
cs
push
lret
mov
jge
aad
push
mov
mov
pop
andl
adc
pop
loopne
add
div
dec
inc
xlat
std
loop
cmp
mov
adc
sub
xchg
dec
push
fwait
jb
pop
sub
notl
jle
or
aad
into
pop
dec
add
cmp
or
mov
jp
or
and
in
shll
dec
movsl
push
pop
punpckldq
jecxz
stos
aad
cmp
jnp
vaddsd
adc
mov
jge
pop
in
lidtl
data16
int3
mov
test
xchg
dec
xchg
test
pop
inc
sahf
rorl
sti
jmp
jle
sbb
pop
xchg
sub
mov
mov
xchg
jp
push
pusha
pop
call
into
pop
lret
leave
in
jnp
jp
mov
pop
push
fbstp
ljmp
mov
mov
sub
jne
call
out
orb
pop
stos
dec
daa
out
inc
jecxz
sub
pop
mov
xchg
mov
ficomps
or
jg
int
jecxz
fwait
sbbb
xorb
ljmp
mov
int
cltd
cmp
out
cmp
pop
xor
ret
in
mov
or
lret
xchg
fs
add
pop
cwtl
adc
into
mov
xor
sbb
or
pop
int
repnz
inc
sbb
call
cwtl
insl
jge
jne
pop
adc
or
loope,pn
pop
sub
mov
test
js
leave
popa
pop
xchg
pop
out
pop
lods
int3
jno
mov
pop
push
dec
iret
int
mov
mov
fnstenv
sbb
push
mov
mov
iret
scas
jb
aaa
mov
test
cmp
cmp
xor
push
jb
xor
fucomip
push
sbb
sbbb
in
insl
pop
loope
int
jmp
test
push
jo
pop
imul
outsl
dec
jb
or
jp
fwait
shrl
lret
or
xor
int
insb
lahf
mov
and
sbb
sub
dec
sbb
add
dec
mov
inc
xchg
pop
mov
and
je
pop
xchg
insb
sbb
int
test
repz
pop
jge
sbb
sbbb
fistps
int
dec
lods
sbb
int3
sbb
and
xchg
jmp
adc
push
pop
xchg
mov
mov
or
jb
je
sub
or
sub
adc
arpl
test
xchg
js
mov
pop
jno
push
dec
call
fs
pop
mov
data16
pop
scas
pop
jbe
daa
lods
inc
pop
out
xchg
jne
out
xlat
mov
push
scas
mov
pop
xor
test
or
enter
push
dec
jo
jle
pop
cmp
or
jb
mov
xchg
ss
xor
test
cmp
and
outsl
xchg
and
push
test
xchg
dec
sub
sbb
nop
dec
sub
inc
xor
jmp
push
mov
loope
pop
adc
lods
cmp
xlat
in
fistl
lea
into
dec
sbb
pop
push
sarl
mov
pusha
cmp
mov
mov
adc
push
daa
sub
cmp
ret
mov
pop
mov
scas
xchg
cmp
repz
leave
clc
test
out
test
xchg
in
mov
pop
and
dec
dec
lcall
stos
fmul
aam
nop
pop
jle
mov
arpl
test
sbbb
adc
pop
insl
pushf
pop
or
roll
imul
cwtl
fcompl
lock
out
repnz
cld
int
and
sbb
pop
jb
adc
cli
jbe
mov
popa
rolb
icebp
mov
pop
inc
and
test
pop
inc
or
stos
fistl
cli
mov
fs
test
mov
adc
add
cmc
jmp
pop
pop
fnstsw
out
xlat
jl
pop
pop
int3
ret
stc
scas
cmp
movsl
pop
push
shrb
pop
jbe
fldenv
pop
aad
repnz
push
ret
pop
pop
fsubrl
je
lahf
bound
mov
daa
jecxz
ss
pop
mov
ret
sahf
or
pop
lahf
mov
outsl
xorb
arpl
movl
sbb
mov
pop
mov
mov
pop
mov
push
int3
sbb
movsb
lret
inc
insl
adc
pop
lcall
xchg
mov
mov
aam
xchg
in
jo
mov
xchg
lods
mov
sti
mov
cmp
out
pop
jb
sbb
pop
lods
in
arpl
inc
int
pop
jnp
filds
xor
mov
jo
sbb
jns
imul
mov
mov
pop
dec
iret
push
js
test
loope
test
jp
ret
mov
pop
dec
jle
or
pusha
insl
xor
sbb
or
fnstsw
and
pop
clc
adc
jbe
jns
sarb
call
imul
jo
mov
and
sub
shl
pop
push
or
ja
pop
xor
mov
fmuls
nop
pop
xor
jge
int3
scas
movsb
scas
push
sbb
cli
fmul
adc
pop
xchg
xchg
xor
pop
xor
push
ret
pop
imul
cmp
clc
cmp
fistpl
cmp
js
je
data16
pushf
insb
mov
hlt
mov
or
inc
popf
sbb
stos
shrl
clc
cmpsb
pop
ja
nop
pop
mov
mov
int
subl
mov
mov
sahf
in
pop
jmp
icebp
mov
cmp
jns
jecxz
mov
in
pop
daa
mov
dec
pop
imul
mov
push
cld
ds
shrl
aad
lods
in
jp
jp
dec
out
push
cld
int3
addps
push
jmp
mov
jnp
pop
ret
sbb
jle
and
lret
jp
pop
test
adc
pop
je
nop
mov
pop
cmpsl
jbe
movsb
insl
aaa
mov
popa
pop
sub
or
repz
ficomps
lret
mov
dec
cld
cmp
pop
mov
lahf
or
inc
dec
pop
xor
sub
push
bound
push
mov
fwait
add
popa
pop
imul
jb
pop
pop
mov
push
pop
cmp
pop
je
ljmp
pop
out
xchg
dec
dec
fxch
jle
out
xchg
cmp
or
xchg
sub
enter
adc
xor
and
jb
add
inc
jecxz
and
cs
dec
pop
and
leave
cmpsl
out
cmp
push
test
test
dec
fs
or
push
add
aaa
int
mov
fisubrl
dec
dec
cmp
iret
pop
jbe
int3
mov
and
fstps
mov
out
fsubrs
and
leave
adc
push
lcall
pop
adc
lds
adc
fadds
inc
inc
pop
dec
sbb
xchg
mov
mov
ja
stos
sti
stos
jae
jmp
addl
mov
xlat
inc
pop
and
sub
ror
or
mov
cltd
ss
fistpl
mov
out
popa
pop
push
fidivs
lret
lea
inc
mov
negl
and
orb
leave
push
jno
fdiv
sbb
enter
cmp
inc
cmp
mov
mov
dec
out
mov
stos
add
lcall
dec
or
jae
imul
sbb
fcomps
mov
and
dec
mov
fiaddl
inc
push
pop
xor
pop
cmp
int
xchg
adc
cwtl
mov
push
out
mov
pop
and
jbe
aas
leave
xor
inc
jecxz
ret
lods
call
pop
pop
in
mov
add
xchg
mov
pop
sbb
out
loopne
xchg
lds
sbbl
xlat
es
jg
pop
dec
xor
jb
repnz
in
jno
dec
inc
lcall
mov
out
sti
sbb
cmpsb
or
pop
fst
scas
lret
addr16
fisubs
addr16
mov
aam
rorb
or
pop
mov
push
jnp
out
enter
out
fs
lock
add
cli
pop
stos
add
add
mov
pop
cmp
icebp
sbb
lods
mov
mov
adc
pop
sub
jno
pop
sub
cltd
xor
aas
dec
pop
push
jae
fadds
pop
push
pop
sub
int3
fsts
dec
pop
ja
int
rorb
repnz
mov
mov
pop
mov
push
lock
int
repz
lahf
push
sub
jle
call
mov
sti
in
mov
imul
into
pop
xor
ss
jmp
lea
pop
sub
mov
arpl
pop
in
sbb
xchg
mov
add
pop
loope
adc
lods
sbb
pop
adc
dec
pop
cltd
in
imul
mov
mov
ror
pop
xor
add
push
shl
jns
pop
pop
sbb
xchg
fildll
jg
inc
pusha
push
mov
inc
mov
xor
out
nop
popa
mov
clc
arpl
test
repz
int
pop
inc
pop
jp
mov
sbbb
and
or
ret
aad
add
jb
pop
xchg
and
mov
mov
sarb
or
dec
cmp
mov
ret
mov
stos
push
pop
pop
fdivl
fldl
push
adc
ljmp
pop
fstps
mov
jns
inc
pop
push
sub
in
pop
jbe
jb
push
adc
pop
scas
data16
int
mov
or
dec
cltd
pop
jb
ja
dec
popa
jge
sti
sub
pop
mov
push
fisttpl
loope
cmpsb
cmp
add
pop
aam
addr16
add
out
mov
xchg
cmpsl
xchg
push
or
js
scas
movsl
bound
adc
mov
cltd
adc
and
mov
sbbl
jb
sub
xchg
negl
insl
or
xchg
push
adc
pop
stc
lahf
pop
dec
imul
xchg
scas
jecxz
arpl
sub
popf
sub
lods
and
mov
mov
pop
xor
sar
mull
xor
cmp
dec
ret
mov
idivb
pop
push
test
add
ljmp
xor
insb
adc
push
pop
stc
int3
and
push
inc
ss
test
mov
int
hlt
push
sub
dec
pop
push
jmp
aad
xor
data16
inc
jmp
pop
sbb
jo
mov
daa
fisubl
mov
pop
in
out
inc
and
push
sbb
movsl
fstps
inc
js
stos
mov
test
jecxz
rcrb
mov
and
sub
or
fidivs
ja
xor
or
lahf
mov
adc
icebp
adc
jno
ficoml
insb
mov
nop
outsl
jl
cltd
adc
jb
pop
jo
fbld
jns,pn
push
dec
mov
xor
or
mov
lods
mov
inc
bts
pop
outsl
sar
dec
mov
loope
lea
rcrl
fisttpl
mov
pop
mov
pop
push
insb
sub
fistpl
dec
add
sub
cmp
and
add
mov
inc
jo
pop
lret
fistl
out
shlb
dec
pop
fisttps
and
push
scas
cmp
outsl
jbe
loope
sbb
inc
mov
pop
adc
dec
test
dec
and
icebp
jecxz
out
aas
pop
and
arpl
fst
push
pop
loope
cmp
push
sub
lock
dec
std
fcoml
pop
mov
mov
pop
xchg
xchg
inc
mov
idiv
inc
test
mov
pop
sbb
push
addr16
dec
cltd
xor
stos
inc
mov
fcmovu
xorl
pop
jle
mov
imul
jb
mov
push
jge
iret
std
mov
cmp
int
loopne
or
inc
xor
inc
test
dec
or
push
scas
push
mov
insb
jne
clc
xchg
sti
mov
adc
lods
data16
inc
cltd
enter
sti
xor
jge
in
mov
outsb
sbb
fs
pop
mov
insb
gs
dec
hlt
ret
ret
pop
xor
daa
mov
jnp
push
push
scas
ja
nop
pop
mov
adc
jmp
ret
idivb
gs
int3
pop
sub
je
test
jae
mov
pop
pop
lret
or
and
push
pop
cmp
cmpsb
lahf
sbb
or
pop
sub
mov
pop
mov
sarb
out
ja
jecxz
mov
or
mov
daa
xchg
mov
pop
hlt
fldcw
fcmovu
jge
jl
outsl
ss
insl
fimull
xor
loope
pop
mov
sbb
pop
leave
xor
lock
adc
daa
out
adcl
mov
shl
or
cmp
loope
mov
loopne
adc
pop
insl
push
adc
push
sahf
xchg
xor
pop
or
les
test
pop
add
sbb
adc
scas
mov
jp
jg
pop
dec
ljmp
cmp
lahf
and
aaa
in
scas
push
js
scas
not
mov
cmp
out
push
and
cmpsl
in
lods
jge
push
pop
fwait
mov
int3
test
faddp
mov
cli
xor
pop
cmp
loop
pop
int
mov
lret
pop
shl
jl
das
pop
fxtract
pop
sbb
insb
negl
dec
enter
inc
pop
dec
out
dec
and
push
lods
sbbb
inc
movsb
ror
ffree
pop
push
xor
data16
stc
mov
pop
mov
arpl
jne
and
push
push
sub
xor
sti
mov
bnd
pop
ficoml
jecxz
mov
pop
out
out
int
mov
push
ljmp
daa
fistl
stc
mov
out
dec
fmull
pop
dec
adc
rcrb
in
cmp
and
mov
mov
fcmovnu
ficompl
lods
pop
pop
pop
test
lret
push
pop
stos
cld
movb
push
jo
pop
rorl
sahf
jbe
lods
xor
jb
lahf
mov
sub
fcomi
pop
pop
fimuls
fisttpll
mov
push
xchg
cmpsl
pop
inc
ljmp
pop
imul
int3
pop
push
inc
lods
sbbb
mov
xchg
cwtl
pop
xchg
dec
add
je
inc
mov
ret
cmpsb
mov
cltd
scas
lods
cmp
stos
les
pop
jmp
int3
sbb
jae
inc
rorb
adc
sub
or
xchg
sub
xor
in
mull
mov
fwait
je
subb
inc
addb
mov
rcll
push
mov
div
ss
sbb
jg
lea
scas
push
loopne
sbb
out
jmp
mov
add
ss
cmpsl
jnp
scas
sbb
dec
mov
ljmp
and
arpl
and
inc
cwtl
dec
sbb
pop
ret
adc
and
pop
aas
repnz
and
insb
cmp
lock
sbb
sub
cld
mov
icebp
cltd
sub
sbb
mov
xchg
mov
leave
fnstenv
test
add
mov
pop
inc
int3
jmp
mov
lcall
in
adc
pop
cmp
outsl
out
inc
cltd
flds
dec
in
ja
sbb
pusha
mov
xor
mov
rcrl
lods
fldcw
pop
cwtl
gs
outsb
add
dec
bound
and
pop
sti
push
or
mov
arpl
mov
sbb
push
pop
xchg
ret
cmp
cwtl
pushf
sbb
adc
fdivp
push
rolb
mov
icebp
stos
in
mov
cmc
pop
push
or
mov
inc
pop
mov
push
stos
add
or
call
negl
repnz
into
imul
adc
stos
sarb
pop
fucomip
subb
dec
and
or
cli
ja
push
mov
xlat
mov
cmp
mov
add
xchg
icebp
lcall
lret
jp
pop
xor
jge
jg
loop,pt
or
mov
cmp
int
fdivs
leave
dec
andl
mov
cld
fsts
xchg
stos
inc
cli
pop
arpl
scas
int3
mov
fistpll
or
mov
popa
insl
jbe
pop
adc
xor
out
adc
sbb
cli
mov
inc
xchg
xchg
push
pop
push
cs
inc
push
jg
jge
clc
pop
jae
push
pop
jb
add
mov
or
cwtl
and
pop
in
xchg
test
fildll
mov
or
pop
add
inc
hlt
pop
enter
lea
mov
xor
addr16
out
ret
out
pop
insl
inc
cli
adc
sub
sarl
and
data16
mov
push
sbb
pop
mov
in
cwtl
arpl
pop
rolb
and
pop
repnz
pop
popa
mov
out
pop
sbb
mov
outsl
xor
xor
mov
jecxz
dec
repnz
push
orb
mov
mov
mov
adc
je
sub
cmp
repnz
das
mov
jg
hlt
addr16
add
cmp
int3
stos
cmp
test
scas
int
push
push
loopne
mov
cli
cmp
ficomps
jo
out
ror
pop
sbbb
mov
fidivrl
mov
xchg
xor
mov
inc
sub
sarl
pop
pop
adc
sbb
aad
pop
ljmp
cmp
push
push
stos
stc
jbe
push
aam
out
mov
add
shrb
pop
loope
scas
fs
inc
in
mov
stos
cmp
insl
lods
pop
cmp
mov
or
cmp
add
lods
lahf
sub
call
pop
xorl
and
adc
add
ficoml
rcll
pop
mov
ficoml
pop
add
outsb
incl
ret
adc
dec
pop
pop
pop
and
aaa
adc
pop
stos
imul
lcall
fwait
pop
int
xchg
fstl
mov
inc
adc
mov
test
and
je
pop
pusha
jb
std
repnz
pop
lret
insb
pop
sub
inc
cmp
and
pop
sbb
cli
ficoms
addr16
bound
dec
cld
into
pop
pushf
je
cmc
popa
mov
scas
xchg
adc
stc
orb
mov
mov
je
or
inc
push
aaa
pop
and
ror
xor
in
sbb
out
xor
mov
dec
or
lds
pusha
daa
mov
ds
jo
lcall
out
pop
mov
inc
sbb
or
hlt
pop
fs
loop
sbb
jne
je
cs
mov
or
ja
cld
int
fwait
cmp
dec
dec
outsb
pop
xlat
popl
jns
pop
xchg
xchg
sub
dec
call
jb
sbb
cmpl
popa
in
xchg
and
dec
mov
pop
mov
add
cltd
jno
adc
pop
ror
jle
sbb
pop
mov
add
and
xor
pop
mov
bnd
pop
addr16
enter
and
scas
push
jmp
jecxz
int
hlt
pop
scas
stos
adc
add
mov
fcmove
ret
sbb
mov
jnp
int3
adc
add
mov
dec
and
test
push
xchg
popa
xor
jo
jbe
mov
pop
add
es
shlb
jmp
jle
pusha
or
jo
pop
push
adc
jmp
adc
mov
jmp
mov
adc
pop
xchg
ljmp
xlat
mov
pop
mov
sbb
loope
pop
int3
xchg
mov
or
aas
pop
pop
in
mov
cwtl
sub
gs
sbb
or
xlat
fdivrl
mov
into
stc
insb
test
push
outsb
pop
jmp
insl
jg
dec
push
cmp
movsb
mov
ret
lea
gs
out
sub
push
pop
int3
jae
jnp
cmp
test
mov
mov
clc
pop
rol
push
sub
mov
loop
dec
mov
xor
leave
int3
pop
sbb
xor
dec
cmpsb
popf
jl
lods
mov
add
out
mov
fdiv
imul
jl
scas
out
xchg
hlt
mov
sbb
cmpsb
pushf
inc
lock
negb
int3
mov
in
fs
fiadds
mov
roll
cmp
stos
add
loopne
pop
dec
push
jne
adc
pop
test
rcl
pop
movsl
fbstp
sub
in
pop
negl
mov
repz
aaa
inc
pusha
cltd
test
pop
jp
ret
shrl
and
fstl
pop
popa
sbb
sbb
cltd
and
mov
jg
pop
cld
sbb
loop
sbb
dec
cwtl
sub
and
and
xlat
unpckhps
mov
xchg
mov
ficoml
mov
xchg
pop
fldcw
push
popf
pop
stc
push
and
xchg
jge
js
pop
inc
mov
out
popa
pop
xchg
dec
fistpl
inc
rcrb
pop
pop
pushf
inc
add
outsl
or
mov
test
inc
cs
dec
dec
sti
mov
cmpl
pop
fucomi
sbb
insb
pop
pop
imul
push
lea
nop
inc
jmp
pop
adc
mov
pop
sahf
mov
mov
pop
out
stos
shlb
fistps
dec
jns
pop
outsb
dec
pushf
popf
sbb
jecxz
sbb
fs
inc
pop
inc
aas
loope
jecxz
sub
pop
outsl
mov
jl
xchg
pop
pushf
repnz
imul
test
sbb
xchg
jb
insl
scas
dec
or
cld
cld
cmpsl
cmc
push
cwtl
repz
imul
dec
pop
xchg
fucomip
addr16
call
jle
push
mov
int
xchg
mov
sti
sub
pop
roll
pop
pop
data16
mov
push
sbb
lret
sbb
add
fistps
jae
ja
pop
test
int3
fistl
pop
sbb
test
add
aam
pop
int3
mov
mov
mov
fiadds
jecxz
and
pop
mov
pop
dec
push
pop
sbb
cmp
test
jle
or
sbb
jb
cltd
xchg
push
rcrb
pop
mov
jne
xor
pop
movsl
testl
pop
push
mov
sbb
rcrl
shll
inc
push
cli
clc
mov
xchg
or
rcrl
test
es
int3
xor
pop
nop
or
in
pop
aas
adc
es
shrl
cwtl
lods
int3
and
idivl
mov
incl
aad
xor
daa
add
stos
movl
pop
pop
in
mov
test
sti
dec
ds
jle
xchg
loopne
mov
test
cs
cmp
push
fisttpll
jecxz
pop
pop
test
cmc
push
pop
cltd
hlt
sbb
cmp
sbb
int
leave
mov
stc
sbbb
xchg
cmp
loop
lea
cwtl
xchg
int3
mov
mov
adc
pop
mov
xchg
enter
inc
pop
incb
int3
out
gs
loop
pop
push
hlt
dec
add
das
xor
jg
xchg
xchg
insb
mov
or
pop
pop
mov
pop
jns
pop
test
outsl
lea
add
lods
and
pop
int3
jl
fwait
and
adc
into
push
cli
cltd
insb
sub
dec
pop
loope
and
fst
mov
loop
sbb
push
push
pushf
mov
iret
lret
sbb
xor
mov
xchg
scas
leave
fiaddl
popa
and
pop
sbb
ss
lds
dec
cmp
fs
cmpsl
xor
stc
mov
fisttps
cwtl
or
mov
lahf
sub
push
ds
aaa
xor
dec
int3
mov
imull
aad
cmp
cmpb
adc
std
xchg
int
pop
cmp
push
into
push
lret
pop
in
xchg
clc
xchg
jnp
mov
popf
xor
mov
xor
clc
scas
push
mov
sti
lods
mov
lods
fs
stos
xlat
sbb
icebp
sar
dec
mov
pop
repz
lods
inc
into
xor
dec
in
pop
xor
pop
rcr
pop
les
movsl
mov
filds
jnp
mov
into
mov
stc
fisubs
mov
lret
ss
sti
cmp
sub
sub
jl
and
aam
mov
xchg
cltd
push
test
or
push
and
inc
jecxz
xchg
lock
pop
loop
xchg
outsl
pop
mov
test
sub
xlat
ljmp
or
fistpl
and
push
ret
arpl
push
loop
sub
lcall
inc
or
xchg
or
mov
sahf
arpl
out
ret
xchg
pop
fcompl
sbb
fucomip
int3
fwait
dec
mov
jg
jl
popa
jmp
in
pop
adc
pop
into
add
inc
mov
cs
dec
ret
fidivl
push
ja
sbb
add
les
inc
cmp
bound
into
inc
jmp
scas
popf
dec
lret
and
jmp
push
jo
pop
aam
jne
mov
stos
pop
jae
lret
mov
inc
jbe
push
xor
pop
sbb
loop
pop
xor
out
push
rcrb
sub
jp
add
pop
sub
pop
mov
pop
jo
into
inc
ja
in
mov
pop
push
cmp
imull
fbstp
xor
pop
cli
xorl
ret
dec
pop
aad
test
clc
sahf
mov
push
pop
outsb
pop
xchg
and
out
dec
loop
pop
cmpl
scas
int
cmp
repnz
dec
out
call
pop
jae
ret
jne
out
cld
dec
inc
pop
push
leave
inc
lock
pushf
cmc
xor
dec
mov
mov
push
lahf
mov
adc
add
enter
jecxz
cmpsl
lahf
mov
pop
loop
cmpb
scas
pop
xchg
add
mov
add
cwtl
add
addr16
add
dec
rcrl
mov
scas
cmpsb
repnz
pop
cmc
sbb
pop
push
loop
xlat
dec
jge
out
jecxz
sti
pop
dec
cs
in
or
shlb
push
testb
stc
pop
fldl
xlat
outsl
and
gs
stos
pop
clc
leave
xchg
xchg
pop
adcb
and
inc
lds
push
adc
inc
and
mov
jb
cmp
xchg
and
push
std
pop
into
mov
nop
je
and
add
mov
mull
pop
add
lods
and
orb
pop
mov
icebp
pop
loop
in
iret
cmp
popa
pop
sbb
test
loop
mov
shll
pop
mov
pop
sub
lods
sbb
cmp
xor
out
pop
cwtl
ret
inc
fwait
scas
and
roll
and
dec
xchg
add
pop
push
xchg
inc
adc
mov
pop
mov
cmp
icebp
pop
fcmove
nop
add
sub
inc
stc
aad
add
mov
pop
pop
subb
outsl
movsb
dec
xor
pop
push
cmp
imul
std
and
loope
sub
jnp
mov
add
jno
andb
push
mulps
enter
mov
xor
loop
jbe
inc
sub
pop
push
mov
divl
pusha
addl
or
sub
jne
xchg
repz
pop
lret
fisubl
enter
fistl
cli
pusha
dec
jecxz
pop
loopne
daa
xor
stc
push
pop
dec
andb
bound
in
xchg
adc
pop
xor
cmp
pusha
ror
ret
pop
lods
fcmovne
xor
lahf
pop
dec
sbb
dec
pop
xchg
xchg
add
call
scas
cmp
push
test
sbb
xchg
pop
aad
inc
mov
xor
mov
push
pop
push
and
mov
jb
mov
test
cmc
pushf
jg
insb
outsb
xchg
inc
jb
je
mov
pop
mov
out
lret
in
mov
or
ss
mov
jl
lods
dec
mov
fdivs
cwtl
sbb
adc
jne
add
inc
pop
mov
and
movsb
fsubl
pop
sbb
cmc
lcall
dec
mov
sbb
sub
pusha
in
test
call
pop
mov
lahf
lahf
insl
dec
sbb
sbb
iret
mov
or
adc
fisttpll
pop
add
sti
pop
add
mov
add
std
aam
fdiv
dec
pop
fsub
dec
sub
pop
xor
out
xlat
jno
push
pop
mov
jbe
fstpl
fwait
in
fucomip
jg
dec
and
mov
addl
aad
cmpsb
subb
push
or
aam
fstps
call
add
sub
pop
pushf
data16
xor
ljmp
mov
faddl
je
jge
hlt
mov
arpl
aas
pop
in
cmp
cmp
pop
pop
stc
dec
xor
aas
mov
inc
pop
fbstp
pop
test
mov
pop
mov
adcb
out
scas
sbbl
sbb
xchg
and
cltd
lahf
inc
xchg
jns
fstps
pop
jae
inc
jle
sbb
xchg
and
xchg
cmp
xchg
pop
or
mov
jl
lods
test
testl
xchg
cmp
xchg
and
or
jge
xchg
pop
les
enter
in
inc
adc
inc
jns
or
jecxz
ljmp
adc
pop
into
insl
dec
data16
das
xor
int3
add
stos
xchg
pop
je
scas
pop
hlt
push
sub
pop
mull
add
test
push
mov
pushf
mov
pop
lea
pop
mov
and
insl
pop
ja
inc
jae
sbb
cltd
bound
pop
dec
sub
jne
lret
cmpsb
mov
out
aad
negb
orb
test
jo
movsb
jae
pop
push
lea
fmull
pop
or
stos
add
out
pop
push
rcr
or
icebp
aam
in
pop
mov
lret
mov
cmp
pop
inc
cltd
loop
pop
test
out
ret
bound
or
add
jmp
dec
popa
ret
filds
sub
sbb
mov
pop
mov
shl
or
int
adcl
leave
loope,pn
mov
adc
pop
push
mov
mov
push
shrb
das
mov
cmp
stos
je
xchg
sbb
pop
test
sahf
lea
negb
cwtl
sbb
jecxz
test
push
dec
pusha
dec
or
sbb
cwtl
and
dec
inc
pop
out
lods
outsb
movsb
dec
stos
out
js
jp
cmpsb
imul
pop
pop
cmp
inc
ficompl
inc
adc
dec
pop
int3
xor
dec
into
lret
imulb
push
mov
ds
pop
jbe
xchg
pop
xor
pop
int
jnp
and
imul
mov
add
fucom
ja
int
scas
negl
xchg
jmp
lahf
sbb
or
push
leave
cmpsb
das
mov
shlb
jle
jp
orb
jo
push
inc
pop
in
icebp
cwtl
popf
int
mov
adc
mov
push
sub
loope
fs
jbe
cmpsl
inc
jne
xchg
fiadds
aaa
mov
and
test
int3
cwtl
mov
mov
push
popf
xchg
or
aas
call
int
js
stc
andl
ss
aam
or
repz
scas
or
mov
jne
in
cmc
adc
cmpsl
sub
js
pop
pop
popf
decb
jo
out
and
cmp
jnp
aad
test
mov
pop
lock
xor
mov
rcrb
int3
in
out
stos
or
or
pop
leave
jecxz
jecxz
pop
xor
xchg
ljmp
je
mov
dec
inc
fstps
stos
lcall
sbb
fscale
test
in
xchg
shll
inc
xor
cmp
cmc
sbb
xchg
mov
jge
adc
shll
pop
insb
jns
xchg
or
insl
shlb
imul
xchg
inc
xor
out
push
stos
int3
cwtl
xchg
xor
push
mov
fcoms
mov
pop
mov
addr16
and
push
test
push
pop
jmp
cmp
dec
dec
in
add
sti
cmp
insl
and
or
mov
xor
pop
scas
mov
mov
pop
pop
repnz
cltd
cmp
mov
js
push
pop
push
push
in
imul
lock
test
inc
pop
out
dec
dec
pushf
test
mov
or
pop
inc
jb
pop
jno
mov
sti
popf
movsb
psubw
lea
jle
mov
and
jae
int3
dec
fsubs
imul
loope
imul
mov
test
sbb
mov
rorl
dec
fidivrl
sub
in
sahf
dec
add
pop
fdivrs
dec
xor
xlat
cli
repnz
leave
int
cld
add
cmp
cltd
divl
jb
inc
sub
xor
mov
jo
xchg
insb
cs
push
or
iret
mov
push
lock
jne
dec
dec
imul
add
ret
arpl
popf
xchg
int
sbb
pop
xor
push
or
out
ret
cltd
inc
pop
adc
lahf
scas
in
out
fimull
pop
sbbb
pop
out
mov
xlat
mov
or
pop
dec
das
sub
mov
add
sti
pop
lods
xchg
popa
jmp
in
aad
jbe
jns
sbb
or
xchg
adc
packssdw
jle
and
outsl
cmpsb
dec
jno
dec
ret
xlat
pop
and
pop
repz
add
jecxz
loop
pop
fs
push
cmp
testl
xchg
loopne
pushl
outsb
hlt
jge
xchg
psubsw
sub
pop
sarb
jnp
push
bound
fstl
and
add
je
pop
mov
mov
mov
addb
loope
push
cwtl
pop
mov
adc
adc
mov
mov
fistps
sbb
push
fcoms
xchg
dec
mov
jns
xchg
jb
rcrb
cmp
sti
addl
cmpsb
sahf
jmp
mov
pop
and
inc
icebp
pop
xor
insl
mov
aas
inc
sbb
data16
sub
pop
mov
mov
mov
push
and
call
pop
push
push
mov
stos
jns
xor
mov
or
repnz
pop
scas
jg
ss
xlat
das
sahf
stos
pop
popa
mov
test
lea
fbstp
cli
dec
adc
gs
mov
push
jge
xor
xor
pop
dec
xor
je
add
inc
dec
mov
inc
add
push
sbb
pop
dec
insl
sub
int
xchg
xor
fidivrs
push
pop
and
int3
adc
orb
jp
mov
inc
lcall
insb
pop
ss
mov
jns
out
xor
rep
cmp
dec
fmull
fimuls
sbb
sahf
lret
cltd
imul
mov
pop
jb
jno
and
mov
rolb
in
pop
jbe
push
dec
jo
dec
repz
imul
push
and
fst
or
xchg
push
cwtl
repnz
cld
push
pop
enter
sti
jo
inc
mov
aad
stc
or
movsl
stc
xlat
fstpt
out
pop
cld
jo
arpl
out
inc
pop
enter
sarb
lahf
pop
lods
dec
outsb
pop
xor
xchg
dec
xchg
iret
insb
in
pop
mov
jne
pop
xor
jo
inc
or
xchg
fidivrl
jp
ror
pop
cmpsl
mov
push
sub
pop
in
lret
test
push
dec
leave
aad
hlt
sbb
daa
sbb
pop
push
or
loop
cmp
mov
cltd
adc
pop
inc
pop
imul
mov
sbb
and
pop
inc
out
xchg
scas
jno
stc
mov
add
mov
push
stos
fisttps
ja
int3
pop
xor
das
pop
clc
mov
or
pcmpgtw
pop
adc
xor
cmp
cwtl
jo
sbb
out
add
shlb
ss
in
cmp
mov
clc
repnz
xchg
jb
mov
fistpl
sbb
lahf
add
int
pop
test
mov
jo
sub
xchg
mov
fistpll
lret
pop
push
push
int
repnz
pop
mov
jnp
dec
js
mov
cmp
jbe
icebp
lahf
mov
lret
add
jecxz
xchg
push
ljmp
stos
xor
pop
enter
pop
inc
xchg
inc
pop
mov
cli
adc
std
arpl
cmp
mov
sub
xor
movsl
cwtl
mov
push
faddl
pop
dec
cmp
enter
pop
fbld
sti
xchg
test
aad
push
fcomps
pop
adc
mov
sub
or
loop
js
push
popf
mov
xchg
aas
add
cmp
sbb
push
xchg
or
sub
scas
cs
adcl
mov
pop
add
cwtl
and
sbb
inc
pop
arpl
ja
pop
fisttpl
out
cmpsl
pop
stc
fidivs
pop
pop
sarb
aad
in
addr16
lcall
nop
pop
mov
pusha
pop
dec
repz
cmp
sti
cs
xchg
mov
int
dec
in
sub
mov
add
aam
and
jecxz
lahf
cmc
popf
jp
fsubrs
sub
enter
insb
sub
mov
xchg
xor
sbb
sub
int
add
dec
outsb
dec
dec
sbbb
xchg
repz
in
mov
push
cld
xchg
lahf
jl
pushf
pop
fnsave
or
pop
sub
inc
cltd
add
pop
lea
rorl
shrb
adc
aam
inc
or
cld
in
pop
negl
int
imul
sub
mov
arpl
sub
mov
imul
inc
or
repz
clc
cmpsb
ret
scas
test
push
lahf
sti
inc
sub
pop
mov
inc
or
clc
pop
sub
pop
mov
jbe
les
cmpsb
stos
sub
hlt
pop
std
jmp
pop
jg
sbb
sbbb
pop
dec
jns
adc
int
movsl
sbb
fistpll
jo
inc
jecxz
movsb
into
pop
aad
ret
sbb
sub
xchg
pop
int
mov
movsb
push
jb
adc
sub
cmp
xchg
imul
push
mov
pop
add
mov
inc
dec
sub
pop
popf
mov
cmc
mov
cmpsb
out
lret
xchg
jle
pop
mov
lock
repz
out
or
pop
jnp
scas
add
sbb
adc
pop
leave
jnp
or
sbb
mov
fbstp
pop
sbb
dec
cmp
xchg
xchg
pop
mov
flds
js
sbb
pop
repz
adc
push
cmp
or
cmc
mov
bound
mov
xchg
jmp
ret
xchg
bound
test
les
lret
mov
insb
mov
sbb
or
ds
mov
shrb
cmp
sbb
adc
mov
inc
lds
shl
mov
insb
dec
pop
cmp
push
cltd
jbe
pop
sub
inc
jb
add
dec
sub
pop
pop
cmp
leave
push
mov
jmp
stos
sbbb
jo
mov
mov
ficoml
inc
push
mov
xor
mov
hlt
idivl
jo
pop
push
jbe
stos
leave
mov
pusha
out
movsb
dec
push
mov
cli
push
test
iret
scas
not
in
fnstcw
jle
flds
in
cmp
jge
push
pop
adc
dec
aad
dec
scas
dec
jo
jno
sarb
das
fs
pop
out
int
adc
jb
pop
xlat
imul
and
cmp
pop
repz
sub
sbbb
dec
loop
je
icebp
pop
int
dec
adc
and
pop
mov
ficomps
sub
data16
inc
pop
fistpll
sbb
push
mov
outsl
xor
xchg
enter
divb
xor
stc
and
lret
mov
mov
and
ss
aas
and
xchg
mov
sbb
pop
xchg
stos
mov
dec
mov
pop
cmp
std
mov
inc
sbb
mov
lea
pop
mov
rcll
cmp
dec
js
out
and
filds
pop
in
mov
dec
stos
pop
xor
mov
cmp
jl
pop
pop
sbb
adc
ret
dec
sbb
out
pop
dec
fiadds
test
sti
dec
ror
clc
mov
xchg
or
fwait
xor
mov
jo
enter
and
lods
data16
lods
movsl
sti
int
mov
inc
pop
cmp
mov
sbb
inc
aad
stc
pop
cld
dec
lock
pop
aam
aas
xchg
fadds
pop
in
cmp
std
pop
outsb
and
and
pop
and
repz
push
sbb
int3
fcomps
sti
and
pop
loop
out
dec
jmp
adc
cmp
jmp
or
jecxz
xor
je
addr16
scas
ret
jbe
sbb
dec
jo
fcomps
inc
fnstsw
mov
repz
jge
jecxz,pn
jns
adc
in
lods
cmp
inc
rorl
lret
pop
inc
pop
loope
loopne
mov
mov
pop
add
xor
cmp
pop
sub
xlat
jle
adc
lea
cmp
or
cmp
pop
mov
mov
jb
lods
mov
mov
in
push
pop
rcrl
mov
int3
and
arpl
add
jno
push
insb
fsub
pop
jo
fnsave
cmp
lret
popf
daa
push
into
movsl
enter
mov
out
sbb
aaa
int
dec
jmp
adc
cli
sub
add
shl
cmp
repz
dec
in
pop
and
add
int
movsb
lods
mov
je
xor
sub
pop
mov
shlb
aam
iret
lea
mov
outsb
pop
aad
out
subb
repz
pop
bound
stos
lea
xchg
dec
lahf
int
add
aam
mov
arpl
jns
pop
iret
je
xchg
or
add
jbe
mov
pop
mov
sbb
mov
les
into
sub
pop
aad
fstps
inc
ret
sub
xchg
add
xchg
inc
mov
clc
fwait
insb
jo
cs
add
pop
push
adc
mov
ret
push
pop
pop
cli
repz
jo
pop
fcoml
lods
les
rolb
shl
pop
movsb
clc
sbb
sub
or
jbe
loope
jecxz
pop
loopne
in
xor
cmp
add
int
repnz
sbb
sbb
outsb
fdivs
ficompl
mov
gs
mov
sti
add
aam
xchg
mov
xchg
mov
xorl
inc
xchg
fcmovb
iret
mov
clc
int3
cwtl
fisttps
xchg
pusha
xor
push
lret
rorl
sbb
aas
in
mov
rol
jb
pop
push
lods
lret
iret
test
jo
jmp
xor
dec
pop
cmp
daa
sub
mov
rclb
cld
sbb
dec
jmp
pop
std
mov
addb
cmc
sbb
sbbl
mov
adc
int
sub
push
jg
cltd
mov
loop
jp
jbe
jnp
fadds
mov
dec
lods
in
int
aam
jmp
cmp
jno
sbb
test
pop
pop
jo
or
mov
inc
pop
in
sub
int
cs
mov
jo
pop
xor
jbe
fsubrs
push
mov
xor
mov
cmpsb
sub
pop
mov
std
punpckhbw
aas
out
sub
dec
mov
mov
mov
stc
push
loop
pop
shll
orl
fldl
or
push
fisubs
jo
cmp
or
xchg
or
bound
xor
sbb
push
pop
mov
int
dec
xchg
inc
cmpsb
or
test
nop
pop
adc
out
sub
sub
mov
std
dec
xor
sbb
scas
add
or
jo
sub
loopne
mov
mov
inc
call
js
pop
or
in
fisubs
jb
mov
adc
repz
test
sarb
push
and
imul
xchg
add
inc
es
les
jle
or
cmpb
cmp
push
sbbb
movsl
xor
mov
adc
adc
fisttps
dec
xchg
add
scas
cli
push
jns
xor
mov
mov
pop
loop
imul
pop
sahf
jb
jp
ret
cli
in
fidivs
and
pop
std
pop
jo
pop
inc
mov
mov
lods
pop
arpl
sahf
jmp
pop
das
rcr
jnp
lcall
jo
pop
sti
xor
fdivl
iret
dec
daa
outsb
or
pop
or
out
mov
mov
scas
in
or
fbstp
negl
in
mov
fcomps
test
push
into
pop
sbb
popa
mov
pop
dec
mov
decl
es
and
hlt
ret
mov
add
sbb
cli
cltd
adc
jno
jmp
imul
inc
cwtl
push
pop
stc
mov
ljmp
rorl
cmpsb
pop
push
push
pusha
aad
int
out
and
jae
add
std
mov
pop
inc
out
lea
mov
xor
pushf
stos
in
dec
mov
rcr
lahf
lods
mov
aad
adc
or
out
pop
das
add
push
sub
inc
xchg
call
pop
stc
sbb
pop
pop
subb
add
scas
add
dec
adc
out
lods
inc
popa
mov
ds
cmp
lds
int3
shl
fwait
pop
in
daa
pop
mov
pop
lcall
jns
std
jno
mov
pop
dec
pop
fs
rcrb
aas
mov
ja
repz
jnp
push
popf
push
dec
pop
imul
arpl
sbb
add
mov
pop
inc
jg
dec
mov
push
insb
mov
adc
sbb
lock
jno
xchg
xchg
sub
hlt
pop
pop
push
cmp
mov
pop
roll
pop
add
sub
test
int3
mov
mov
movsb
inc
mov
and
pop
xchg
jbe
xor
sbb
pop
or
das
jns
cltd
adc
pop
mov
push
mov
pusha
mov
clc
or
ficoms
into
mov
loope
fnstenv
dec
scas
push
mov
clc
test
lcall
mov
pop
jecxz
and
fsubrp
adc
ja
push
in
mov
imul
in
pushf
and
pop
and
push
sbb
je
aam
jle
sahf
inc
pop
cld
in
sbb
pop
inc
pop
repnz
push
sbb
xchg
pop
leave
adc
addr16
inc
sub
aaa
pop
pop
xor
pop
pop
xchg
sub
xor
pushf
mov
movsl
lcall
aas
push
inc
xor
dec
loopne
dec
popa
push
int
mov
lahf
cmp
mov
push
scas
mov
mov
repz
pop
xor
xchg
lret
call
sbb
push
mov
loope
mov
in
add
push
scas
adc
sbb
leave
pop
sbb
inc
pop
data16
cmp
xor
rorb
adc
inc
dec
sbb
ret
in
dec
add
repz
mov
orb
lcall
mov
pusha
pusha
fadds
pop
icebp
loope
jbe
add
testl
test
add
adc
inc
in
mov
mov
popf
dec
lret
fisubrs
inc
clc
sarb
mov
je
popf
mov
fadds
push
insb
or
xchg
pop
rcr
sub
loope
sbb
movsl
and
stos
inc
mov
out
or
pop
fcomps
jnp
jl
xchg
pop
mov
loop
mov
adc
sub
push
add
mov
pop
and
mov
lret
push
test
in
pusha
pop
lock
iret
cmp
adc
pop
mov
ret
cli
jbe
mov
outsl
mov
xchg
push
cltd
call
inc
mov
mov
adc
rcrb
fsubs
std
mov
cltd
call
mov
adc
xor
aaa
xchg
dec
enter
fmuls
out
loop
fs
sub
xchg
std
and
ja
in
pop
mov
cmpsb
notb
xchg
dec
pop
push
rorl
pop
sub
xor
pop
lahf
mov
test
pop
jle
xchg
xlat
xchg
mov
jae
xchg
cmp
test
gs
add
sbb
ljmp
sahf
dec
ficomps
pop
inc
sysexit
loopne
pop
pop
addr16
sbb
int3
mov
lahf
insl
add
cwtl
sub
pop
dec
sti
jno
jecxz
pop
jo
pusha
jge
mov
pop
xlat
inc
xchg
adc
sbb
pop
jg
jl
cltd
xchg
mov
daa
ljmp
mov
pop
cmc
fcmovne
mov
xchg
mov
rorl
ljmp
pop
cmp
jle
js
pop
incl
mov
push
xchg
jb
test
insl
jp
fdiv
pop
mov
lret
xor
xor
sti
push
aaa
jnp
stos
sub
cli
lret
mov
pushf
lcall
pop
adc
leave
pop
fcomps
push
out
addr16
mov
jns
cmp
pop
inc
mov
pop
cmp
push
jg
daa
dec
push
pop
lret
filds
orb
sbb
std
sub
loopew
push
fstps
pop
cli
sbb
xchg
lea
mov
int
leave
xor
sbbl
mov
repnz
sbb
or
sti
or
mov
sbb
pop
daa
inc
or
aad
push
jae
lods
int3
lret
push
xchg
inc
add
cwtl
or
dec
stc
out
push
lea
pop
xor
pop
and
daa
pop
mov
or
ja
je
mov
inc
jno
pop
loop
aaa
stos
adc
add
mov
xchg
jb
iret
test
mov
mov
sti
xor
and
adc
fstpl
mov
inc
pop
test
pop
dec
inc
push
jae
pop
lahf
dec
push
push
dec
rorb
sub
jno
mov
xchg
push
pop
int3
clc
call
lcall
mov
scas
test
pop
ljmp
pop
imul
lea
rcrb
add
sbb
divl
adc
popa
push
stos
sub
sub
push
or
xor
xor
leave
in
mov
xchg
clc
xchg
sti
sub
inc
incb
jecxz
cs
int3
movsb
lcall
push
jno
pop
jge
jb
add
icebp
and
sbb
scas
test
shr
xor
pop
hlt
xlat
add
cltd
cmc
ljmp
sub
stos
add
movsb
pop
xchg
inc
push
pushf
ret
add
mov
sbb
fmuls
test
xchg
repz
fstps
mov
hlt
pop
and
stos
int3
cli
push
loopne
pop
jmp
push
pop
call
leave
dec
jbe
sbb
jns
mov
fadds
cmp
scas
shll
adc
jo
jno
add
jb
repnz
pop
lods
shld
inc
int
pop
xchg
scas
jno
shlb
sbb
pop
jle
ja
ss
dec
stos
jge
or
push
rcrb
fmulp
xor
jl
pop
cld
pop
sbb
inc
jno
or
sbb
pop
sahf
out
and
insl
xorl
imull
dec
iret
inc
mov
lock
dec
mov
pop
std
ss
or
pop
inc
sub
or
dec
jns
push
mov
pop
scas
xor
int
pop
fwait
inc
dec
cmp
loope
pop
sub
cld
mov
jg
lahf
js
leave
adc
push
in
jl
int
data16
xchg
out
movsl
jns
ds
pop
and
out
add
inc
shrl
dec
imul
cmp
pop
dec
fisubrs
sbb
xchg
in
pop
int
mov
hlt
mov
bound
ja
mov
jmp
adc
test
mov
fdivl
sbbb
fucomi
mov
mov
add
mov
inc
push
leave
cltd
fldt
pop
mov
sbb
inc
in
sub
sbb
fs
xlat
add
mov
insl
scas
icebp
pushf
js
fxtract
loop
jle
lret
adc
push
xchg
adc
mov
cmp
imul
ja
lea
sbb
xlat
jbe
fwait
cld
call
or
xor
outsb
jo
mov
push
inc
push
push
mov
sub
shrl
rcrl
mov
mov
push
cltd
cmpsl
cmp
repz
sbb
mov
jnp
push
jecxz
imul
hlt
addr16
in
pop
or
sbb
pop
test
out
divl
pop
mov
pop
xchg
into
cmp
sarl
lret
fmull
sbb
sub
mov
xchg
pop
jl
pop
fsubrs
jbe
pop
mov
aam
shrl
std
shr
lods
fisubrl
push
leave
jae
adc
or
mov
inc
mov
dec
and
push
popf
sbb
and
test
mov
jo
scas
add
fisttps
lock
in
lods
mov
jge
add
xchg
pop
popf
mov
pop
insl
inc
pop
jb
int3
gs
movsb
imul
mov
dec
adc
enter
icebp
and
pop
outsb
das
mov
sbb
mov
pop
and
pop
pop
popf
adc
pop
xor
pop
es
lret
jnp
sbb
adc
pop
pop
jge
inc
stc
add
int
mov
mov
xor
mov
aad
mov
cmp
dec
loope
mov
adc
push
adc
xchg
xor
loop
dec
pop
imul
in
pushf
fmull
or
pusha
mov
pop
iret
jg
aaa
pop
cmp
xor
je
int
sub
push
jo
mov
test
sbb
testl
pop
pop
rcrl
iret
pop
out
int
stc
cmp
nop
pop
jmp
mov
pop
cwtl
stos
dec
leave
cmp
add
roll
mov
inc
jo
pop
and
std
data16
or
fistpll
mov
pop
jecxz
sub
out
jle
mov
and
dec
jmp
cltd
lock
popf
rcrl
jo
mov
adcl
lods
jle
roll
js
pusha
cmpsb
pop
test
cmp
pop
pop
xchg
ret
jb
imul
mov
decl
mov
add
in
enter
mov
xchg
pop
mov
aam
insl
pop
adc
and
cli
add
fmull
mov
nop
cmp
fld
in
xchg
xchg
pop
aad
pop
push
outsl
dec
out
lret
mov
int3
jg
sub
popa
scas
mov
inc
xor
fs
insb
pop
xchg
dec
cmp
rorl
xchg
in
in
pop
pop
mov
stc
scas
mov
mov
xchg
adc
xor
jo
mov
scas
pop
pop
fdivrl
dec
mov
add
jmp
xor
jbe
pop
dec
repnz
xor
mov
cmp
push
adc
pop
mov
jae
sbb
nop
xchg
f2xm1
mov
sub
fidivs
adc
aad
or
lret
addr16
data16
das
pop
rorb
and
icebp
jge
out
inc
mov
jg
push
fisttpl
int3
push
into
pop
rclb
mov
das
jb
dec
pop
add
cmpsl
scas
subb
and
idivb
mov
cmp
int
jmp
imul
mov
and
mov
aaa
filds
fsubl
pop
rorl
lret
dec
les
je
xor
and
cmp
mov
and
dec
mov
or
lcall
xchg
xchg
pop
lcall
xchg
dec
push
push
push
and
ss
inc
pop
pop
sbb
jae
lods
sbb
jo
ret
test
inc
push
pop
lods
decl
jne
sbb
xchg
adc
pop
fists
iret
add
cld
out
rdmsr
add
sub
sti
xchg
jg
movsl
jb
sbb
mov
mov
aas
add
push
and
cwtl
pop
cmp
jge
cmp
add
cli
push
mov
pop
sub
xor
inc
std
pushl
cmpb
pusha
out
xlat
and
mov
xchg
pop
in
lret
stos
insl
fidivrl
pop
jecxz,pn
mov
dec
mov
adcb
inc
fdiv
sbb
and
xchg
adc
mov
rcrl
mov
call
lcall
fistpl
cmp
push
pop
popf
xchg
cmp
pop
cmp
ja
jmp
xchg
mov
in
mov
cmp
inc
fxch
fisttpll
inc
movsb
cmpsb
aas
out
addr16
pop
aam
or
pop
push
mov
in
adc
jbe
popf
roll
mov
adc
cwtl
and
pop
xchg
xchg
or
cmp
inc
aam
mov
es
lds
inc
loope
sbb
pop
mov
rcll
sbb
je
add
inc
mov
rcrb
movsb
mov
mov
fisubrs
pop
leave
xor
ds
adc
push
and
push
mov
and
lds
sbb
adc
cmpsb
mov
in
lret
jae
mov
pop
pushf
mov
pop
dec
icebp
pop
addr16
in
adc
mov
cmp
sub
loopne
icebp
jp
and
stos
add
ja
stc
rep
aaa
cmpsb
or
sti
push
or
cwtl
xchg
iret
xor
cltd
jmp
test
lds
sbb
testb
fimull
scas
enter
ret
test
xor
jg
mov
stos
pop
inc
cmpsb
inc
mov
cmp
scas
testb
push
les
jns
sbb
add
mov
in
mov
pop
and
pop
adc
cmp
ficoml
pop
cmpsl
mov
enter
pop
pop
jne
int
jle
arpl
pop
push
add
pushf
xchg
and
sbb
enter
push
pop
jns
cmpsb
lahf
stos
aas
icebp
aaa
pop
jecxz
sarb
push
lcall
or
lods
ret
aam
pop
and
mov
pop
push
paddw
pop
mov
inc
pop
test
ret
test
test
jne
lock
mov
mov
mov
pop
jecxz
sbb
shrl
pop
dec
popa
repnz
sbb
addr16
sti
out
cmp
dec
cmp
jbe
pop
je
call
add
mov
sub
pop
and
push
push
ds
out
pop
je
inc
pop
scas
int
xchg
idivb
pop
sbb
cmp
xchg
int3
fsubs
aam
pop
popf
out
dec
adc
pop
fwait
ds
mov
fucomi
rcrb
fcoml
cmc
mov
mov
push
mov
test
enter
lahf
mov
ds
rolb
outsb
out
lahf
xchg
mov
fisttpl
and
addr16
push
or
jb
pop
sbb
jbe
cmp
jecxz
shll
pushf
test
sub
lahf
jmp
mov
xchg
mov
cmc
add
pop
dec
inc
jl
jo
sub
mov
adc
sarl
pop
fstpt
mov
pop
jbe
leave
cmp
test
out
pop
mov
shl
push
sub
xor
pop
stc
xchg
sbb
adc
stc
inc
cltd
mov
cmp
jbe
pop
movl
loope
push
adc
pop
adc
sub
sub
fcompl
inc
push
pop
and
loopne
outsl
cmc
fistpll
push
and
loope
shrb
pushf
mov
cwtl
mov
add
jecxz
sub
or
mov
push
pop
dec
pop
xchg
nop
push
mov
jno
mov
dec
jg
push
cmp
push
mov
pop
and
mov
inc
sahf
imul
sbb
pop
adc
pop
xchg
int3
adc
loope
inc
test
pop
rcr
mov
sub
jo
dec
adc
cmpsl
in
js
cmp
pop
outsl
sub
inc
pop
lcall
das
int3
pop
cltd
mov
jbe
adc
dec
inc
push
pop
ror
scas
gs
xchg
dec
dec
pop
popl
out
mov
or
nop
mov
scas
test
inc
add
pop
loope
or
pop
xchg
add
repz
push
cmp
mov
data16
mov
stc
pop
cmc
mov
add
repz
pop
lcall
push
stos
jnp
xchg
pop
movsl
push
sbb
int
test
jl
mov
cmp
insb
sub
adc
inc
sbb
ds
jb
or
movsb
xchg
xor
fiadds
dec
dec
jecxz
pusha
icebp
pop
sbb
mov
leave
das
push
cmc
adc
jns
pop
push
jb
test
pop
stos
int
xchg
pmulhuw
xchg
bound
gs
in
push
int
and
test
daa
lret
mov
aam
int
or
xor
pop
sbb
dec
and
sbb
fisubl
lahf
data16
test
cmp
call
sub
int3
es
sahf
leave
cmp
std
out
sbb
cmpl
lea
jo
and
lret
movsb
into
fwait
pop
and
jbe
out
lahf
test
and
pop
cmp
pop
cmp
push
int
xchg
adc
pop
jae
cld
sub
push
adc
pop
or
addr16
js
pop
pop
ja
dec
mov
popf
sbb
inc
pusha
pop
inc
pushf
insl
cmc
stos
push
lods
int
mov
test
mov
ja
sub
adc
mov
sahf
testl
js
dec
dec
sub
imul
lcall
cmp
daa
or
hlt
inc
push
and
inc
push
jo
mov
fadd
sbb
sbb
leave
add
mov
ja
xor
js
pushf
rol
pop
add
pop
jp
jo
or
pop
jl
mov
arpl
movsb
inc
jle
cmp
js
cltd
sbb
push
push
mov
leave
cmp
push
ret
cmp
inc
mov
cmc
sbb
dec
in
mov
int
shll
pop
lea
pop
sbb
cmp
add
dec
adc
dec
pop
and
or
icebp
les
pop
shl
pop
rolb
ror
sbb
lds
inc
cli
sub
pop
in
xchg
mov
pop
push
cltd
or
xchg
fcmovb
aaa
mov
cmp
inc
pop
dec
scas
arpl
jle
pop
mov
loope
jecxz
or
int
mov
xchg
push
fbstp
out
mov
sub
sbb
sbb
xor
lods
and
cmp
pop
dec
sub
mov
cmp
push
pop
pop
and
pop
jbe
loopne
pop
lods
mov
test
pop
push
in
int3
pop
sub
lcall
cltd
and
stc
xchg
dec
or
pusha
push
test
mov
pop
jns
pop
mov
rcrl
pop
pop
cmp
lahf
stos
dec
cmp
lods
mov
pushf
test
pop
mov
lea
pop
xchg
push
cmp
pop
push
sbb
mov
cmc
mov
sarl
pop
xchg
addr16
cmp
mov
xor
add
xchg
pop
bound
mov
pop
xor
mov
sbb
and
and
xorb
or
sub
pusha
jo
test
sub
mov
or
pop
rcrl
pop
loope
bnd
push
int
pop
inc
xor
in
inc
xchg
cld
mov
fisubl
sbb
xor
sub
int
dec
push
and
push
ljmp
mov
lods
and
mov
lea
sbb
xchg
pop
ret
jbe
add
int
nop
imul
cmpsl
rorl
xor
pop
sbb
jae
fpatan
pop
pop
mov
or
incb
jbe
push
mov
pop
je
sub
scas
testb
and
or
fdivs
pop
cmp
or
sbb
pop
xchg
mov
mov
pop
mov
lret
add
mov
mov
push
enter
ret
popa
pop
xchg
test
sbb
pop
dec
mov
dec
sub
or
mov
movsb
jl
xor
lret
cmp
jne
mov
fucomi
js
cld
test
push
ret
mov
add
out
fs
fidivrl
mov
popf
dec
pop
sub
sub
sarl
and
jnp
jle
int
ss
sbb
mov
sub
rcrl
icebp
jns
mov
cld
mov
cmpsb
pop
int
jbe
xchg
orb
pushf
sub
push
pop
pop
sub
je
in
fstpt
pop
mov
mov
xchg
pop
xchg
mov
int3
and
xchg
mov
adc
popa
lret
mov
add
pop
adc
mulb
enter
jecxz
and
and
pop
mov
call
arpl
leave
imul
sarb
dec
mov
addr16
pop
sub
movsb
dec
lds
sbb
clc
int
jge
mov
sub
pop
cmpl
ss
cmp
adc
fnstenv
cmpsl
sbb
and
pop
outsl
imul
cmp
dec
pop
sbb
loop
fidivrs
mov
into
pop
ret
int3
test
add
pop
push
test
rcll
pop
mov
mov
enter
sbb
or
stos
xchg
imul
push
mov
or
mov
mov
pop
dec
pushf
and
cmp
inc
push
loop
faddp
inc
movsb
iret
mov
cmp
fcomi
es
jo
lret
pop
aaa
adcl
in
lret
pop
inc
and
lea
pop
int3
xor
mov
xor
ljmp
xchg
fadds
daa
push
or
cmp
cmp
pusha
pop
pushl
add
pop
push
push
mov
pop
and
pop
int
ss
frstor
fistpl
pop
movsl
jnp
pushl
mov
aaa
shlb
daa
xchg
insb
fdivrs
orl
sbb
pop
jb
sub
mov
out
nop
push
in
pop
jb
cmpsl
lods
cmpl
pop
pop
xchg
push
popa
push
pop
test
test
pop
xor
push
insb
loopne
xchg
inc
mov
iret
jmp
rcll
cltd
adc
inc
int
lret
or
aaa
jo
gs
mov
sti
cmpsl
mov
lea
ficomps
repnz
orb
xchg
jle
lret
or
mov
test
cmp
pop
int
data16
jg
lcall
je
jge
adc
enter
fmul
negl
sub
mov
sub
sbb
jnp
mov
ja
mov
imul
xor
mov
pop
int
fcmovnu
mov
mov
ret
and
lahf
pop
fimuls
test
fildll
mov
sbb
xor
add
jns
adc
inc
scas
sub
stc
mov
mov
sub
xchg
in
pop
adc
insl
sbb
dec
sahf
ljmp
fisubrs
jns
lods
dec
pop
out
or
int
je
mov
and
cmp
mov
mov
or
adc
ja
shrl
adc
pop
push
jmp
cmovl
bound
cmp
pop
jecxz
hlt
int3
outsl
pop
xorb
push
jnp
pop
xor
and
int
imul
pop
outsb
jge
cmp
idivl
sub
cltd
pop
mov
push
stos
scas
pop
addr16
aad
pop
sbb
sbb
mov
loope
pop
adc
pop
mov
repz
gs
add
fcompl
out
mov
push
add
jbe
cli
roll
pop
lret
xchg
pop
jbe
pop
pusha
in
fwait
mov
stos
sub
adc
pop
cwtl
mov
aaa
push
cli
push
lahf
mov
imul
hlt
adcb
shll
pop
xor
idiv
cmp
push
cmp
fs
movsb
cwtl
rcrl
jno
pop
add
dec
lods
push
vaddpd
push
aaa
sbb
fnstsw
sbb
mov
icebp
aam
xor
pop
insl
dec
adc
in
push
arpl
dec
cmp
cltd
jle
cmpsb
rcr
xchg
sbb
sbb
cmp
iret
and
int
lea
adc
jo
mov
rclb
sub
mov
sub
idiv
pushf
push
mov
andl
pop
lcall
cs
push
aas
mull
mov
es
ret
popf
sub
aam
pop
incb
mov
fnstsw
es
cld
push
pop
sub
jb
mov
test
pop
jnp
pop
lock
pop
addb
mov
test
push
pop
jbe
imul
repnz
xchg
data16
pop
dec
or
cltd
fsubs
stos
insb
in
cmc
daa
imul
call
orl
lock
cwtl
push
fldenv
in
outsb
dec
mov
add
jae
pop
or
std
daa
xchg
ja
aas
rorl
jp
xorb
mov
testl
jbe
mov
inc
or
in
lea
cmpb
popf
nopl
fstp
test
data16
mov
or
loope
cmc
pop
je
cmp
jle
in
cltd
pop
cwtl
inc
xor
xchg
jo
fidivl
movsb
pop
enter
jecxz
in
inc
pop
mov
data16
in
pop
add
cltd
pop
pop
sbb
jbe
stc
pop
sbb
jns
pop
dec
rcll
out
push
mov
test
or
pop
pop
in
sbb
int3
ror
mov
cmp
push
icebp
add
push
pop
cmc
int
mov
rorb
aas
mov
cmpsb
inc
pop
xchg
inc
shlb
xlat
jge
push
pop
int3
add
push
sbb
mov
int
pop
mov
nop
shrl
jne
sub
js
adc
sbb
mov
mov
mov
cltd
xor
or
loopne
jno
sbb
mov
fs
int3
and
insb
pop
ja
mov
pop
and
mov
js
scas
push
push
xchg
lods
ja
pop
sbb
test
js
jb
inc
pop
cld
shrb
imul
jge
pop
popf
and
mov
dec
loopne
xchg
push
or
inc
clc
je
inc
adc
xchg
pop
int3
push
dec
lods
pop
jge
leave
stc
jbe
sub
shrd
xchg
mov
arpl
pop
jbe
inc
fadds
das
push
xchg
sbb
xor
pop
cmpsl
dec
and
shll
jmp
dec
sub
dec
imul
xlat
cltd
pusha
aas
pop
add
pop
in
int3
pop
inc
scas
jmp
dec
pop
mov
lret
jl
sbb
mov
aas
inc
cmc
dec
popl
js
jae
mov
fsub
add
rcrl
test
sbb
dec
pop
mulb
mov
pop
test
mov
mov
pushw
push
loop
xor
pop
out
sbb
shll
or
pop
je
bnd
enter
sub
mov
cltd
ret
pop
mov
loop
xorb
in
pop
push
inc
and
out
jecxz
push
cli
mov
and
mov
scas
insl
fnsave
shl
push
jns
dec
pop
aad
aam
mov
movsl
sub
and
push
mov
inc
cmp
inc
push
xchg
lret
movsb
mov
pop
ss
sbb
jns
lds
scas
xlat
inc
lods
rcl
mov
pop
test
fnstcw
lret
cltd
stos
lahf
mov
fdivl
mov
pop
cmpsb
adc
out
push
sbb
add
insb
dec
mov
sub
pop
push
pop
mov
test
sub
sbb
pop
insl
sbb
mov
dec
nop
cltd
int3
in
pop
xchg
jnp
adc
ljmp
add
pop
sbb
add
sbb
pop
fnstsw
jnp
jecxz
xor
pop
or
imul
dec
pop
fsubrs
or
pop
jmp
bound
je
inc
and
pop
aas
ss
sbb
rcrb
out
lods
or
inc
xor
push
xor
push
test
pcmpgtw
pop
add
in
subb
pop
or
mov
sahf
pop
sbb
call
inc
in
out
jecxz
cltd
mov
fmuls
add
pushf
mov
packuswb
sub
sub
pop
xor
push
lods
jne
add
or
subb
or
cmp
mov
adc
pop
adc
mov
into
push
xlat
jmp
shr
fistpl
jo
ret
pop
and
repz
test
decl
ja
aas
hlt
gs
pop
repz
pop
fnstenv
push
lock
das
test
rcr
and
xorl
jl
lea
lock
out
pushf
or
out
jmp
fwait
adc
mov
cmp
iret
jo
fidivl
fisttpl
sbb
push
icebp
and
push
xchg
add
ror
adc
pop
enter
xlat
les
sub
or
outsb
int
pop
sub
lret
pop
sbb
add
mov
insb
pop
in
dec
jmp
xor
mov
pushf
sbb
and
stc
cmc
pop
rcrl
insl
push
mov
int
pop
iret
xlat
in
jle
fdivs
adc
scas
mov
pop
mov
stos
mov
mov
lock
cmp
mov
filds
inc
sarl
and
arpl
sti
pop
and
xchg
into
test
hlt
pop
push
pop
outsl
in
lds
sti
icebp
xor
and
loopne
adc
lods
mov
adc
shll
sub
add
pop
fistpll
adcb
sub
loope
dec
push
push
jb
sub
cmp
adc
iret
mov
jbe
dec
test
cmc
xchg
jecxz
pusha
sub
wrmsr
push
lcall
or
push
cmc
dec
cld
cli
pop
lea
pop
push
or
int3
cmpsb
gs
inc
and
mov
sbbl
insl
pusha
pop
cmpb
and
pop
mov
lahf
int
push
cs
mov
aad
push
enter
ljmp
xor
pop
xchg
and
jb
sti
es
sahf
fcomps
sbb
mov
xchg
pop
aas
inc
int
xchg
and
mov
lcall
add
cmp
sub
inc
mov
fldl
xorl
or
inc
sbb
cmp
pop
jo
cmc
xor
pop
repnz
add
fiaddl
addr16
pop
arpl
nop
inc
outsb
dec
stc
repz
cmp
je
inc
inc
adc
sbb
stos
movsl
test
gs
mov
inc
sti
dec
mov
movsl
xchg
or
mov
cmp
repnz
rclb
pop
cmp
mov
insb
and
std
push
es
jge
sbb
iret
popa
inc
mov
outsb
lods
push
pop
adc
push
or
loopne
je
call
inc
sbb
ret
inc
pop
sub
pop
ror
repz
dec
std
dec
mov
popa
adc
jnp
sbb
pop
mov
mov
mov
fisubs
jne
repz
icebp
pop
enter
mov
add
and
les
fidivrs
jne
push
xorl
imul
push
jmp
xor
out
sbb
flds
call
mov
or
pop
xor
pushf
les
or
ret
jecxz
pushf
sbb
pop
scas
mov
mov
out
xor
push
jb
scas
inc
push
cltd
scas
jo
mov
dec
fwait
sub
adc
sbb
clc
jp
inc
sub
mov
int
adc
xchg
lahf
adc
ficompl
add
push
sbb
inc
ror
cli
bound
jle
sarl
shr
jb
in
movsb
negl
mov
psadbw
repnz
inc
adc
call
hlt
mov
sbb
stos
sub
sub
sub
aad
or
xchg
push
dec
mov
inc
pop
push
mov
cmp
xor
mov
ss
push
and
mov
je
cmpsl
fbld
rcrl
xor
insb
into
jmp
pop
dec
or
cmp
pop
pop
inc
loop
lods
out
xchg
push
add
add
dec
pop
jne
sbb
test
pop
xchg
or
pop
and
jmp
inc
jo
lahf
pop
lea
es
nop
lods
jecxz
pusha
pop
je
adc
dec
mov
fwait
into
sbb
inc
insl
std
decl
sahf
int
sbb
lods
jns
mov
and
jno,pt
inc
fwait
pushf
and
sbb
jbe
ss
cwtl
mov
mov
fldt
mov
sub
mov
aad
pop
mov
jae
popl
pop
add
inc
rol
ljmp
sub
je,pt
adc
mov
imul
sub
add
and
fisttps
aaa
leave
test
add
data16
sub
add
insl
jns
pop
imul
xchg
mov
mov
inc
mov
mov
out
pop
es
dec
xor
pop
std
popf
loope
rolb
jo
mov
fsubrl
hlt
pushf
scas
fisubrl
loop
imul
pop
jmp
push
mov
sub
iret
and
or
fcoms
stos
sub
pop
arpl
pop
cmp
xchg
stos
mov
ret
cltd
dec
cmp
shlb
sbb
adc
lock
mov
fcoml
dec
xchg
imul
dec
mov
popa
mov
xor
ja
pop
lcall
ss
int
popa
outsl
repz
mov
dec
add
xchg
push
inc
mov
push
jmp
lods
or
pop
sub
je
push
or
sub
jb
mov
pop
cmpl
mov
jg
sarl
jnp
hlt
pop
mov
xchg
mov
sub
cmp
inc
sub
push
pop
jg
xchg
xor
lcall
mov
divl
pushl
shrb
sbb
fstl
pop
fsubrs
sub
leave
data16
and
cmp
cs
fistl
loopne
lret
jo
hlt
pop
pop
pop
mov
dec
out
inc
les
fsubrs
cltd
aam
fadd
loopne
xor
pop
lods
pusha
insb
ret
sub
jmp
arpl
cmp
dec
mov
aam
xchg
mov
xor
cli
int
fcoms
mov
inc
sub
out
mov
icebp
pop
dec
inc
pushf
adc
outsb
inc
cmp
pop
jl
shlb
cmp
push
push
and
das
test
lret
repz
xchg
mov
pop
int3
cwtl
jl
mov
sbb
jnp
arpl
fwait
add
pop
sub
pop
mov
in
dec
aas
fimuls
pop
ss
ret
and
dec
or
mov
mov
pop
shl
push
pop
dec
pop
sarb
outsl
cltd
dec
sbb
pop
int
mov
sub
or
iret
pop
xor
xchg
cmp
fstps
bound
shrb
out
pop
or
das
add
pop
add
data16
inc
pop
mov
loope
sbbb
dec
add
push
dec
pop
pop
jnp
lods
es
sbb
xchg
jns
dec
int3
dec
cmp
outsb
ja
push
cli
sub
outsl
pop
inc
pop
xorb
ljmp
repz
sub
xor
fmul
rorl
cwtl
and
hlt
or
inc
push
aas
dec
push
dec
dec
bound
pop
pop
xchg
sbb
push
dec
je
fcmovnu
push
sti
loopne
dec
push
adc
pop
cmpsb
pop
in
dec
mov
pop
pop
dec
xchg
scas
lea
jo
cli
mov
shl
add
mov
push
mov
lahf
pop
roll
aas
adc
pop
push
and
fwait
adc
mov
lds
outsb
jmp
cmp
hlt
push
xchg
or
mov
pop
das
inc
sbb
xchg
mov
mov
sub
adc
pop
xor
mov
sbb
pop
dec
pushf
and
lahf
jp
lods
pop
clc
loop
push
arpl
mov
pop
xor
les
pop
jg
mov
sbb
fisubrl
mov
lcall
das
or
test
insb
cli
cmc
xor
jno
xor
fcomps
lea
pop
inc
cmp
sbbb
push
jbe
lock
pop
or
jo
faddl
dec
xor
pop
scas
ret
and
mov
cltd
lret
ds
sti
icebp
xchg
test
cmp
mov
cmp
scas
aad
jbe
js
jnp
dec
pop
jns
aaa
add
sub
movsl
mov
icebp
outsl
int3
dec
add
xlat
pop
xchg
mov
orb
xor
adc
stos
adc
and
aad
iret
mov
cmpsb
scas
push
cmp
cmp
push
jno
xchg
mov
mulb
jb
cmp
roll
jge
cmp
mov
xor
push
sbb
sbb
je
aas
mov
arpl
aam
mov
jmp
mov
pop
fisttpll
in
fwait
sub
add
pop
sarb
scas
mov
mov
cmp
inc
stc
dec
out
push
pop
aas
or
test
shl
mov
fimull
insl
push
add
push
sbb
and
pop
pop
sahf
and
mov
lret
mov
js
arpl
mov
cmp
rcrb
loop
ljmp
lret
dec
jecxz
push
in
mov
je
dec
cwtl
fists
ss
add
daa
push
jl
jo
jmp
mov
mov
pop
dec
inc
into
int
lahf
push
mov
js
lock
shlb
inc
xchg
fwait
xchg
inc
mov
fnsave
xchg
add
test
scas
insb
seta
mov
mov
jmp
mov
and
jb
jp
inc
jg
cld
sub
dec
movsb
dec
test
adc
stos
xchg
add
and
out
pop
or
pop
lods
mov
fdivs
int
cmp
mov
nop
rcrb
adc
jge
sbb
subb
test
ret
dec
push
sbb
or
xchg
fdivr
dec
pop
jno
sbb
in
nop
pop
xorb
std
pop
pop
insb
pop
in
lods
test
sub
cltd
outsb
mov
mov
pop
xchg
pop
dec
or
jae
pop
data16
xchg
jmp
mov
mov
pop
ror
cs
inc
sub
out
xchg
push
add
sbb
pop
sti
pushf
fildl
lds
repz
push
fwait
pop
mov
cmc
sub
pop
jbe
mov
dec
xchg
xchg
cmpsb
jp
cmp
jb
or
das
dec
int
lock
xlat
shrb
sahf
mov
mov
push
lods
jle
sar
mov
scas
xor
movsl
sbb
cmc
dec
idivb
repz
dec
push
pop
inc
test
idivl
mov
inc
subl
mov
and
das
call
call
inc
mov
mov
cltd
fcomps
mov
xchg
std
dec
fistpll
sbb
lds
lods
fimull
dec
cmp
int3
sbb
mov
mov
int
push
or
pop
and
scas
sub
pop
xchg
sbb
dec
lret
pop
xchg
jb
adc
int
and
push
adcl
repnz
int
fistpl
jge
dec
cmp
gs
or
cmp
or
sub
jl
rorb
pusha
mov
andb
mov
sub
or
pop
jecxz
mov
mov
sub
subl
cmp
sbb
leave
cmp
pop
xchg
cmp
lods
xchg
shlb
pop
or
pop
fwait
sti
je
stos
add
enter
jbe
sbbl
dec
mov
pop
sbb
pop
mov
pop
test
int
sbb
jge
mov
add
dec
es
stc
into
loope
pop
sub
lods
insb
dec
incl
stos
sbb
mov
fiadds
dec
pop
pop
mov
imul
mov
fidivrl
lcall
fnstcw
pop
mov
int3
std
rcrb
xor
pop
mov
pop
cmp
mov
cltd
pop
cmc
mov
inc
sub
std
push
fdivrs
jl
pop
xchg
jp
jns
sub
out
add
mov
dec
mov
popf
insl
pop
pusha
mov
stos
scas
repnz
icebp
dec
adc
jne
stc
cwtl
pop
popa
jp
addr16
rcll
xchg
mov
mov
aaa
scas
or
dec
cmpsl
push
pop
mov
fadds
mov
jb
pop
mov
or
pop
pop
lods
addl
adc
mov
xchg
lcall
cmp
xchg
data16
push
sub
bound
and
pop
test
testl
hlt
jle
cli
mov
mov
or
jg
mov
adc
aam
out
xchg
mov
push
pop
mov
cmp
xor
fistps
inc
jno
adc
jne
cltd
icebp
pop
cmp
dec
jecxz
data16
mov
movsl
dec
cltd
mov
jno
xchg
les
decl
cli
inc
lret
pop
mov
jmp
mov
push
in
js
stc
or
imul
xchg
or
pop
xor
pop
mov
into
lods
mov
cld
cltd
inc
push
pop
movsb
out
in
xchg
pop
idivb
fnstcw
repz
lret
ret
dec
pop
sti
aaa
pop
jo
xchg
pop
mov
ja
pusha
push
sbb
push
push
hlt
xlat
mov
scas
pop
mov
mov
mov
push
je
pop
lahf
mov
call
in
mov
jns
pop
mov
lods
cmp
jge
pop
sbb
xor
push
cs
int
mov
insb
lahf
sbb
sti
cmp
mov
ret
pusha
adc
in
and
nop
mov
rcrb
inc
stos
fdecstp
pop
pushf
or
xor
jecxz
enter
jp
int
das
pushl
add
xor
cmp
xchg
popa
stc
cld
or
in
ljmp
int
pop
loope
mov
fldt
test
sbb
ret
sbb
scas
mov
cmp
fucom
pop
fidivl
add
sbb
shl
push
jb
orb
shrb
jl
pop
or
push
jb
insb
sub
and
mov
popa
sub
fldt
pop
les
push
sub
dec
inc
enter
mov
imul
xor
jmp
push
dec
pop
outsb
icebp
scas
enter
jb
jle
xchg
dec
mov
dec
pop
pusha
pop
icebp
sbb
mov
ljmp
add
or
jns
adc
in
cmp
push
stos
push
inc
pusha
push
pop
repz
call
mov
pop
lret
adc
jb
std
fldcw
mov
cmp
push
popf
in
loope
sbb
scas
xchg
push
pusha
sbb
pop
adc
test
pop
aas
sbb
adc
int3
in
push
sbb
push
pop
pushf
inc
fldt
xchg
pop
add
lret
inc
cwtl
pop
adc
insb
jb
sar
mov
mov
pop
jnp
xchg
mov
lcall
pop
pop
sbb
or
or
lods
sub
mov
sbb
mov
sar
rorb
ret
xchg
pop
leave
push
sub
or
and
divb
adc
shll
nop
sti
cmp
and
mov
mov
mov
mov
lea
rorb
ret
cmp
imul
mov
fldt
jne
stc
push
or
jp
push
shlb
sbb
int3
scas
rorb
mov
ja
pop
mov
cmp
lods
fiaddl
in
cmp
pop
pop
or
sbb
jg
dec
lock
jbe
rol
lea
movsl
xor
or
lods
mov
xchg
lods
ret
cmp
mov
lret
call
sti
pop
daa
pop
iret
pushf
sbb
pop
pop
ret
fcompl
lret
push
sub
pop
cmpsl
es
push
sbb
cmp
inc
pop
xor
mov
cld
inc
cmp
mov
ds
adc
adc
inc
in
push
cmp
cli
fnstsw
cmp
jle
mov
clc
pop
push
fisttps
jbe
xor
in
cltd
lcall
stos
mov
aaa
shlb
lret
pop
xchg
mov
int3
mov
push
mov
pop
icebp
insl
cmp
fidivs
cmp
jle
js
jl
cwtl
movsl
or
pop
mov
mov
inc
dec
sti
popf
out
jl
pop
and
arpl
or
pop
xchg
imul
mov
pop
fnstenv
pop
jbe
out
adc
loope
in
jl
pop
jb
mov
jge
pop
stc
pop
je
mov
pop
pop
xchg
pop
dec
xor
pop
xchg
dec
loop
add
in
jo
ror
lcall
cli
mov
lret
fidivrl
aam
or
lods
das
sub
pop
ret
inc
popa
js
je
cs
cltd
scas
jns
lret
add
dec
or
jne
int3
dec
sahf
adc
pushw
pop
fbstp
subb
ds
push
sbbb
and
shlb
jecxz
inc
popa
mov
cmp
inc
fidivrl
loop
jge
pop
xchg
pop
clc
scas
and
iret
mov
cmc
mov
test
mov
out
fstpt
or
sbb
mov
test
pop
jbe
clc
xor
inc
les
mov
xchg
test
cltd
sub
mov
and
jbe
push
pop
lahf
mov
jle
pop
popf
push
pop
mov
scas
ret
es
shlb
pop
lret
iret
pop
incl
loop
adc
out
les
jb
xlat
jo
dec
test
jecxz
testl
insb
sbb
dec
fistpl
pop
cld
movsl
or
pop
xchg
lea
stos
jb
dec
sbb
loope
mov
cltd
push
bound
push
or
loopne
add
xor
adc
or
cwtl
push
pop
in
sbb
in
xchg
push
push
ret
sti
dec
add
movsb
or
pop
in
lret
mov
fs
add
pop
mov
out
pop
movb
scas
int
mov
lea
bound
test
sbb
insl
push
xor
in
mov
jl
push
inc
pop
movsl
sub
int
scas
mov
dec
inc
icebp
mov
clc
mov
adc
insb
rol
movsl
pop
sub
sbb
and
js
test
mov
lods
cwtl
push
mov
pop
mov
add
pop
mov
pop
dec
or
mov
adc
loopne
jbe
sti
dec
cmp
sahf
xor
repz
icebp
ficompl
movsl
mov
pop
outsl
aad
or
mov
mov
int
pop
cs
std
ret
sbb
mov
pop
xlat
cmp
repz
sub
pop
jb
lret
sbb
test
pop
xchg
dec
movsb
cli
mov
in
cltd
mov
xchg
pop
rcrl
in
xchg
mov
xchg
pop
xor
adc
sub
mov
xchg
movsb
cmp
xor
pop
or
pop
jle
pop
std
sarb
pop
arpl
lods
push
fistpl
mov
fiaddl
test
jecxz
mov
out
out
in
pop
fnstsw
pop
pop
or
dec
outsb
std
push
aad
fsubrl
jmp
dec
js
pop
stc
xor
mov
repz
lret
xor
dec
pop
xlat
loope
push
inc
ss
pop
push
pop
scas
mov
insb
mov
fldenv
enter
pop
and
cmpl
pop
call
fwait
sbb
cmp
mov
addr16
lret
popa
arpl
sbb
mov
out
pop
insb
fcompl
dec
push
mov
daa
pop
pop
push
scas
mov
or
je
aas
xor
pop
jnp
sbb
mov
and
pop
dec
cs
xor
sub
xor
clc
orb
pop
cli
pop
fcoml
lds
out
adc
sbb
pop
in
jnp
or
sbb
mov
sbb
imulb
push
out
pop
imul
fwait
clc
pop
hlt
xchg
daa
push
out
mov
jnp
lods
mov
rcrl
ret
mov
jl
fisttpl
push
sbb
add
jp
cmp
cmpsb
mov
and
repnz
addb
mov
and
add
mov
enter
bound
inc
cmpb
and
into
xor
aaa
push
scas
das
sbb
cmpsb
sahf
ds
adc
or
add
cltd
mov
or
mov
lret
mov
leave
mov
stc
or
mov
xor
stc
stos
mov
dec
sub
and
pop
inc
cmc
insl
sub
xchg
dec
out
pop
lahf
and
js
mov
test
sbb
xor
pop
pop
inc
in
in
fwait
int
ret
pop
push
scas
or
arpl
sub
push
inc
pop
fucomip
cli
adc
cld
pop
and
and
mov
cmp
cmp
mov
fdivs
nop
lret
pop
fimuls
cmc
in
pop
mov
add
pop
cmp
popf
div
lcall
jbe
aad
push
scas
inc
xlat
lods
ljmp
pop
data16
xor
mov
inc
aas
lods
addl
pop
or
outsb
sub
movsb
sbb
clc
ror
pop
lods
pop
and
or
mov
hlt
lahf
int
jl
cmp
loope
cltd
push
aam
pop
pushf
mov
dec
lea
int
mov
mov
loop
into
insb
cmp
sub
adc
outsb
pop
xchg
push
dec
xchg
gs
repnz
xchg
pop
mov
ficoms
outsl
cmpsl
dec
ror
pop
and
mov
and
push
pop
fwait
jp
mov
mov
mov
cld
je
jg
sbbl
push
mov
cmp
sbb
dec
in
or
pop
jnp
outsl
dec
rclb
mov
pop
adc
aam
clc
cmpl
sbb
and
inc
xor
loop
leave
sub
sub
jbe
out
pop
xchg
dec
pop
jle
xchg
inc
sbb
mov
loope
pop
insb
das
lahf
frstor
add
mov
xor
je
fwait
jne
jae
sub
out
in
mov
paddusb
cs
movsb
push
mov
mov
and
arpl
loopne
pushl
jb
jbe
test
dec
fstpl
push
leave
scas
and
adc
xor
pop
xor
add
adc
fcompl
mov
je
lahf
pushf
cwtl
test
fsts
push
sub
pushw
pop
sbb
movb
aaa
cmp
pop
mov
orl
adc
xchg
cmp
inc
pop
shll
and
jnp
push
jb
pop
sub
xlat
jle
cmpsb
mov
andb
lods
clc
mov
xchg
nop
es
scas
pop
jl
testl
leave
push
inc
inc
pop
imul
jo
dec
scas
mov
push
rolb
jb
jge
push
mov
jns
lret
mov
mov
scas
sbb
sbb
imul
push
loop
rep
pop
inc
outsb
cmp
mov
pop
sbb
andl
filds
popa
pop
cli
sbb
push
aas
mov
nop
imul
into
jne
lea
pop
testb
scas
dec
mov
ficompl
mov
jnp
push
xchg
shr
mov
and
adc
mov
push
rcl
dec
mov
pop
aas
cmpsb
push
int
outsl
je
pop
sub
cli
inc
xchg
imul
sti
aaa
jne
adc
hlt
sub
popa
push
cmc
or
jne
fisubl
inc
push
sub
pop
out
test
and
inc
movsb
std
push
inc
pop
sbb
pop
mov
in
clc
mov
data16
sub
mov
out
adc
sub
fisubl
test
dec
pop
jl
push
xor
sub
cvtdq2ps
jns
pop
mov
sbb
cld
test
pop
dec
cmp
scas
push
or
orb
in
out
sbb
push
fidivrs
ret
xlat
inc
pop
push
pop
scas
filds
iret
pop
repz
cmpsb
xchg
loopne
jp
pop
cmp
dec
sbbl
add
out
fdivr
and
imul
jbe
sub
scas
insl
mov
fisttpll
stos
lret
shll
scas
rcr
jbe
push
pop
pop
cld
jle
push
and
xchg
mov
jnp
ljmp
call
addr16
mov
lods
fiaddl
or
adc
bound
xor
push
ja
dec
and
into
push
das
dec
pushf
push
sbb
pop
outsb
mov
or
cmc
ds
or
sbb
scas
push
mov
pop
pop
add
dec
nop
mov
inc
pop
ljmp
add
mov
dec
dec
fidivl
outsl
pushf
jecxz
loopne
pop
inc
repnz
adc
mov
rcl
lods
arpl
pop
sub
das
xchg
call
hlt
leave
xor
jecxz
or
pop
adc
pop
dec
push
roll
jg
pop
lds
sbb
popf
and
in
mov
adc
out
dec
inc
pop
cmc
lods
xor
lcall
lret
aad
pop
loopne
dec
es
subb
in
sti
cmp
fs
int3
or
fdivrl
pop
in
outsb
xor
ss
cmpsl
lret
jae
clc
sbb
cmp
pop
jne
lods
xorb
pushf
test
cmpsb
mov
push
std
add
mov
insb
int3
ss
xor
pop
jg
pop
jp
and
inc
addr16
mov
mov
pop
out
sbb
mov
dec
sbb
inc
jno
cs
in
mov
cltd
and
pop
dec
push
pop
ret
mov
cli
xchg
pop
mov
cmp
pop
push
hlt
lret
cmpsl
and
or
cmp
adcb
and
sar
push
sarl
sbb
cmc
lret
push
scas
or
jl
and
cltd
leave
imul
shrl
push
pop
dec
out
pop
in
clc
or
pop
cmpsl
fldt
dec
imul
pop
js
cmp
call
cmpsl
out
iret
sbbb
jle
pop
add
jecxz
shl
mov
aas
icebp
imul
pop
mov
xchg
fmull
in
pop
xchg
in
dec
sub
mov
popa
or
or
jb
lret
cmpsl
jo
sub
cmp
iret
int
mov
imul
push
mov
loop
adc
mov
adc
lahf
imul
sub
out
adc
push
nop
sbb
jne
in
fsincos
fstps
jmp
mov
mov
dec
in
int
das
nop
lret
mov
adc
adc
out
sbb
addr16
loopne
rcrb
scas
into
repz
mov
cli
jae
rcr
fimull
fcoms
loope
cltd
lahf
sub
in
pop
cmp
aas
inc
or
test
mov
add
xchg
repz
pop
jbe
gs
sbbl
pop
dec
cmpsl
pop
and
mov
mov
cwtl
mov
loop
jb
pop
test
sbb
adc
pop
cmp
std
dec
int
pop
das
repz
xchg
enter
adc
pop
mov
mov
mov
jae
out
scas
mov
mov
pop
jb
mov
jae
loope
dec
movb
pushf
pop
stos
inc
mov
mov
sub
iret
sub
sbb
inc
pop
inc
xchg
fistl
pop
lret
add
test
pop
or
outsb
into
xchg
in
int
mov
insl
pop
pop
rorb
pushf
mov
aam
mov
add
lret
stos
adc
lcall
pop
cmp
insb
sbb
push
ljmp
jns
mov
xchg
shrl
incb
pop
add
jmp
xor
pop
cmp
adc
in
popf
sub
lea
leave
scas
xchg
xor
or
scas
sub
xor
call
inc
jae
adc
arpl
mov
xchg
inc
mov
mov
xchg
dec
jg
mov
pop
pop
sbb
add
icebp
outsb
inc
cmp
int
mov
or
lods
lret
sbb
sub
push
push
stos
mov
pop
xchg
fwait
push
mov
pop
dec
insl
mov
xchg
xchg
popl
inc
fwait
stos
fcoms
pop
rcrb
loop
clc
js
jmp
push
repnz
popa
int3
xchg
lock
push
ss
inc
aaa
sub
sbb
xlat
xor
outsb
dec
mov
mov
add
pop
pop
repnz
lret
pop
mov
sub
lahf
outsb
divb
jne
pusha
inc
jo
fstpl
mov
add
ret
sbb
aaa
cmpsl
inc
sub
pop
xchg
and
mov
dec
insl
lods
lahf
jno
jge
inc
pop
bound
jp
lahf
pop
vmovaps
xchg
cmp
negb
push
das
mov
or
sbbb
xor
sub
add
mov
adc
pop
cmp
rcrl
cmp
aas
mov
lahf
xchg
ja
mov
lret
adc
push
fistpl
rclb
gs
mov
stc
cld
scas
cli
mov
mov
out
lcall
or
nop
dec
repz
outsl
sub
and
or
gs
out
pop
add
xchg
add
scas
pop
rcl
stos
int
movsb
pop
test
push
leave
jb
fs
pop
or
push
pop
into
pop
jbe
repnz
mov
mov
int
addr16
dec
lahf
cltd
daa
clc
sbb
leave
aas
movsb
test
mov
lret
push
pop
or
rcr
sub
out
mov
dec
jp
mov
push
int3
jbe
xchg
pusha
call
xlat
add
repz
frstor
mov
mov
pop
popa
pop
in
dec
cld
mov
xor
pushf
jp
xchg
sbb
and
push
sbb
pop
nop
jnp
push
xorl
int3
test
sbb
fs
or
test
xor
mov
mov
xor
sbb
in
mov
scas
sub
in
test
insl
cmpsb
push
dec
add
sarl
xchg
sub
int
pop
push
daa
movl
out
mov
stos
pop
and
xor
xor
mov
sub
pop
mov
xor
int3
pop
movsl
lods
inc
fistpll
out
sub
cs
mov
test
mov
pop
sbb
in
push
dec
fwait
mov
lock
jnp
fnsave
jge
pop
dec
and
mov
leave
push
sbb
adc
sbb
pop
fidivl
pop
cmp
bnd
ror
pop
mov
inc
push
mov
pop
mov
inc
mov
dec
or
dec
push
stc
mov
andb
adc
enter
cs
add
push
cld
adc
pop
lcall
xchg
mov
dec
add
rclb
pop
mov
std
addr16
xchg
pop
mov
int
pop
mov
dec
int3
sbb
xchg
adc
jb
add
dec
add
test
mov
inc
mov
and
fstl
aaa
lret
xchg
pop
sbb
pop
shl
inc
out
xchg
fimull
add
in
scas
sbb
push
and
dec
lods
aas
pop
pop
push
and
pop
cmc
movsb
leave
int3
out
stos
jae
mov
pop
mov
fstpl
cmp
mov
iret
mov
ljmp
fs
pop
inc
or
les
xor
addps
aad
push
lret
sub
cmpsb
xchg
jo
cmp
dec
inc
xor
ret
mov
fstps
sbb
loopne
sbb
dec
pop
cmp
pop
mov
movsl
cmpsb
mov
pop
inc
test
pop
pop
nop
mov
cmp
pop
sbb
jns
lret
xor
xor
cli
arpl
pop
cmp
mov
sahf
movsb
sbb
sbb
sub
arpl
rorl
add
pop
push
xor
and
aaa
iret
sbb
jmp
into
mov
es
lahf
insb
pushl
pusha
xchg
pop
jmp
or
int3
pop
dec
mov
je
shll
pop
add
dec
sahf
pop
inc
dec
push
sbb
xchg
or
adc
adc
push
mov
dec
pop
add
mov
add
push
inc
or
pop
test
outsb
imul
cld
or
lahf
jg
xor
sub
add
jmp
sbb
sbb
sub
into
cli
int3
xor
in
pop
clc
daa
lea
test
jmp
inc
clc
pop
lods
ret
mov
dec
dec
int3
fists
jge
or
push
or
inc
fwait
jb
pusha
mov
pop
dec
pop
cmpsl
int
std
jp
das
fstpl
add
xlat
int3
leave
aad
loopne
js
xchg
pop
cmc
mov
inc
loop
sbbl
push
jp
pop
push
repz
insl
mov
xor
sub
mov
mov
pop
mov
mov
ja,pn
mov
hlt
repz
add
push
fildl
cwtl
ret
xor
scas
jecxz,pn
cmp
jne
pop
mov
dec
mov
push
mov
mov
shlb
or
aam
pop
xchg
xchg
add
and
xchg
nop
dec
jbe
in
inc
pop
push
pop
adc
cld
push
int
sub
mov
adc
test
sarb
int
mov
in
aam
pop
cmp
sarl
inc
in
mov
aad
lahf
push
aaa
and
push
rcrl
dec
imulb
addr16
pop
dec
pop
repz
or
mov
jns
dec
mov
sub
push
jo
xor
je
pop
push
mov
lahf
and
mov
fistl
pop
pop
cmpsl
dec
jb
cli
call
int
pop
fsub
mov
pop
jbe
mov
xor
lahf
push
xor
mov
pop
xor
fcomps
inc
cmc
int
sub
pop
jecxz
push
mov
xchg
lods
cmp
xorl
cs
cmc
mov
jecxz
lahf
push
fnstsw
pop
or
aad
jae
mov
out
loopne
cmc
int3
push
or
pop
mov
dec
mov
js
gs
push
and
mov
stos
pop
pusha
dec
insb
add
inc
jbe
pop
xchg
xor
subl
icebp
pslld
ljmp
mov
mov
push
pop
or
fs
push
std
int3
stc
xor
push
pop
pop
out
jle
sub
jecxz
aad
pop
xchg
ljmp
add
push
cmp
add
pop
dec
sti
dec
xchg
jge
fstpl
sub
cmp
sbb
jnp
leave
push
mov
push
sub
insl
and
xchg
pop
dec
push
pop
adc
test
push
mov
sbb
fnsave
lods
cltd
in
mov
imul
enter
in
adc
mov
pop
dec
arpl
xorb
xor
pop
mov
push
or
outsl
adc
inc
mov
pop
and
mov
and
cmpsl
scas
mov
fwait
inc
sbb
add
test
lea
idiv
fst
sub
xchg
mov
stos
dec
pop
aaa
sbb
scas
and
arpl
xor
pop
mov
fdiv
inc
inc
fcmovnb
add
ljmp
fstl
jmp
pop
scas
xchg
cmpl
mov
pop
mov
mov
jbe
xchg
jo
pop
es
pop
sbb
sub
shrl
idivl
lea
sbb
pop
test
or
dec
inc
mov
pop
xor
push
ljmp
leave
xchg
sbb
fldt
pop
and
int
shrl
pop
cwtl
mov
clc
xor
cmc
mov
dec
pop
sahf
data16
sbb
jbe
stc
dec
neg
inc
fistpll
push
pop
pop
cmp
ss
pop
xor
jb
dec
inc
pop
cli
cmpsl
lods
sahf
push
adc
pop
ja
shlb
lock
jne
sbb
or
mov
cmpsb
sbb
in
mov
repnz
mov
dec
int
pop
cmp
inc
test
js
sbb
popaw
fldcw
add
jmp
push
mov
pop
int
call
mov
pop
mov
leave
adc
or
hlt
jmp
xor
push
scas
xor
insb
or
pop
adc
int
cmpsb
movsb
lcall
add
push
cmc
pop
mov
stc
push
add
pop
int
cmp
fildll
mov
jne
add
into
popl
fldt
pop
cmpsb
jl
pusha
ss
jb
and
int
pop
std
add
xchg
bound
pop
mov
icebp
mov
lret
sti
pusha
cs
rcrb
mov
mov
popl
dec
cmp
pop
sub
add
aaa
and
cmp
fwait
pop
mov
icebp
nop
add
push
pop
inc
loope
xchg
jge
mov
and
je
insb
sbb
cld
test
pop
xchg
inc
or
pushf
test
mov
movsb
stos
out
xor
mov
mov
fiaddl
mov
mov
xor
jb
fsts
insl
push
imulb
add
pop
jp
dec
lods
pop
ja
insb
xlat
cmp
or
xor
push
or
mov
pop
pop
test
movsl
jbe
pop
push
test
xor
lcall
pop
or
lcall
xchg
das
xchg
xchg
dec
movnti
cmpsb
imull
cli
or
inc
int3
out
outsl
fimuls
mov
push
ja
in
and
pop
pop
add
dec
mov
leave
jno
sbb
and
sub
jo
mov
mov
sub
int3
fcoms
bnd
fisttps
push
push
mov
push
sub
jns
nop
lret
iret
jo
mov
xor
mov
xchg
pop
out
adc
hlt
fdivrs
xor
in
sub
mov
bnd
mov
pusha
sub
sbbb
pop
ljmp
pop
push
fdivrl
adc
jbe
jnp
mov
adc
mov
and
jns
jp
jb
js
out
jecxz
lods
pop
and
insl
ljmp
pop
pop
cmp
jecxz
sbb
jae
dec
and
pop
bound
sti
dec
cwtl
push
notl
pop
xor
mov
stos
push
call
xor
jnp
pop
movsl
mov
dec
push
stos
push
sub
jbe
mov
lahf
pop
lahf
inc
dec
insb
out
lea
int
mov
mov
mov
mov
pop
jbe
pop
xchg
outsl
cwtl
or
lcall
sub
pop
jg
add
jecxz
pop
clc
pusha
jb
into
push
dec
pop
cmp
mov
sahf
shrl
repnz
sub
outsb
std
push
inc
scas
outsl
stc
pop
movsl
dec
xchg
add
gs
movzbl
pop
pop
mov
adc
jb
mov
pop
add
addr16
dec
mov
lods
sbb
add
or
lahf
sarb
pop
or
xor
jp
outsl
inc
pop
sbb
pop
in
jno
out
pop
and
dec
gs
and
rcrl
int
add
inc
sahf
lods
sub
jmp
sbb
daa
jl
dec
jb
lods
mov
jns
mov
pop
fwait
adc
fsub
pop
je
pop
lcall
jb
cmp
adc
fcomip
xor
sbb
jb
pop
xchg
xchg
nop
fstps
pushf
repz
xor
jo
xor
scas
cltd
add
mov
pop
inc
test
hlt
pop
sbb
or
xorl
sub
out
xor
lock
xchg
mov
stc
xchg
mov
mov
and
mov
pop
adc
inc
lea
fdivl
pop
mov
dec
jno
cmp
cmp
je
lods
mov
repnz
lods
xchg
dec
push
call
dec
pop
int
mov
cmp
xor
stos
adc
mov
lods
or
dec
faddl
mov
dec
cwtl
push
inc
jb
fsubrl
rcr
cmp
imul
mov
pop
mov
push
cmp
or
pushf
adc
xor
insb
pop
push
or
pop
dec
or
pop
jbe
test
shl
xchg
jge
jl
dec
test
aaa
mov
mov
xlat
sub
or
je
push
addl
rolb
inc
stc
mov
cltd
push
cmpsb
jmp
inc
test
es
mov
sbb
fstl
in
pop
idivb
int3
pop
push
or
mov
add
pop
fidivl
les
stos
add
ja
dec
pop
dec
addr16
mov
pusha
cltd
es
mov
inc
pop
aas
xchg
stos
insl
in
push
scas
dec
rorb
fdiv
enter
xchg
repnz
lods
mov
pop
loope
jp
cmp
in
sti
int3
jno
mov
xchg
mov
stos
pop
mov
ds
xchg
scas
lods
sbb
and
jnp
aam
cmp
inc
lahf
push
arpl
pop
pop
pop
sbbb
rorl
pop
fwait
loopne
bound
int
std
sbb
pop
inc
inc
mov
sub
cs
dec
xor
lcall
dec
mov
dec
clc
les
pop
and
aaa
cmp
pop
stos
out
aam
mov
adc
ja
xchg
jmp
stc
cmc
inc
sarb
pop
sbb
mov
in
push
mov
lods
cmc
adc
fmul
pop
int
dec
adc
test
jnp
sbb
fstps
sub
pop
pop
jne
pop
out
jecxz
popf
or
repz
xchg
rcr
pop
push
jno
jnp
push
mov
mov
loope
out
and
fistps
jbe
div
addr16
pop
push
std
xchg
push
adc
add
pop
dec
add
mov
in
xor
add
loope
jo
mov
sar
mov
xchg
mov
push
sub
xorb
adc
test
les
dec
pop
adc
pop
cmp
dec
jno
mov
in
adc
jle
insb
add
int3
sub
mov
sbb
add
cmp
jo
in
pop
addr16
icebp
dec
ds
setns
sub
shll
push
out
gs
add
mov
or
mov
mov
test
cmp
incb
ja
out
sub
mov
pop
xchg
mov
scas
pop
scas
repnz
cmc
jge
int
sbb
or
fldcw
jo
adc
int
add
xor
pop
pop
pop
jo
ror
int3
xchg
pop
rcr
xchg
add
or
or
push
and
loopne
sub
jg
jge
add
stc
mov
push
cld
mov
dec
fwait
jns
adcl
pop
inc
mov
add
mov
mov
jb
mov
std
testl
lahf
shl
iret
fstpt
scas
dec
int
pop
pop
sbb
adc
scas
xchg
adc
inc
gs
push
insl
dec
scas
pusha
push
cmc
pop
or
xchg
int3
pop
mov
jge
inc
out
int
je
mov
sbb
insb
mov
or
mov
jbe
add
add
cmp
mov
and
repnz
adc
enter
cltd
pop
xchg
and
jnp
pop
out
out
pop
sbb
gs
sbb
mov
test
mov
or
scas
inc
daa
test
insl
inc
mov
scas
jl
pop
adc
sub
xchg
pop
int
in
iret
insl
inc
cld
lcall
movsb
adc
leave
cli
mov
aam
inc
and
fdivs
mov
in
loopne
fstps
mov
cmp
stos
push
xchg
sub
push
pop
test
adc
pop
adc
or
jbe
cmp
sbb
mov
push
gs
add
ss
add
int
push
pop
dec
or
lahf
pop
jae
mov
sbb
lock
mov
and
insl
sbb
mov
jmp
mov
cmp
into
adc
cli
add
pop
sarl
test
lahf
sbb
add
out
push
ror
jecxz
movsl
pop
stc
outsl
mov
in
enter
mov
int
add
dec
push
aad
rorl
add
cmp
iret
sbb
lahf
clc
and
adc
xchg
push
dec
push
out
jle
cmp
push
ja
pop
clc
or
jae
cmp
or
jl
jle
push
into
data16
fnsave
sti
mov
lea
xor
sbb
xor
mov
scas
adc
jmp
mov
into
dec
sbb
pop
sub
jo
sarl
push
pop
or
xor
pop
fldl
subb
mov
xlat
xchg
dec
fdivrs
pop
xor
dec
cltd
out
test
jo
into
dec
outsl
jns
pop
push
xchg
mov
repnz
int3
cld
sub
dec
fsubs
xchg
call
jb
ja
mov
jg
test
outsb
sub
mov
mov
lahf
daa
mov
inc
pop
mov
mov
inc
pop
or
out
sahf
test
pop
pop
pop
test
cltd
test
mov
faddp
cmpl
mov
repnz
xchg
scas
dec
add
push
xchg
xor
lcall
rol
cmc
and
adc
int3
stc
push
dec
scas
imul
fisttpll
xchg
je
and
jo
mov
jge
iret
mov
pop
scas
aaa
xor
push
lcall
dec
ljmp
loope
fdivrs
aas
xchg
movsl
ja
mov
imul
xchg
add
test
and
add
fsubrl
mov
insb
movsl
xchg
pop
imul
mov
pop
addps
mov
es
pop
test
sbb
lock
lods
loop
daa
pop
jecxz
addb
test
pop
jbe
adc
push
mov
ss
ffree
or
popa
jmp
and
cmp
adc
mov
cmp
and
repnz
sub
push
mov
orb
in
pop
cmpsl
push
test
jg
push
dec
arpl
repz
lea
pop
pop
dec
pop
or
mov
add
pop
divl
das
cld
sbb
rcrb
pop
or
pop
sub
push
pop
push
repnz
mov
in
pop
stos
test
mov
lea
into
xor
cmpl
cwtl
ret
dec
adcb
push
and
and
sti
inc
popa
jbe
inc
jb
pop
sbbb
int3
dec
cwtl
test
jmp
mov
xor
mov
outsl
mov
pop
sbb
into
and
cmp
clc
dec
popl
lahf
int
dec
mov
pop
xor
pop
mov
insl
movsl
je
in
nop
xchg
mov
cmpsb
sbb
popf
jecxz
lahf
fstl
mov
xor
dec
push
pop
mov
cmp
jb
xchg
mov
stos
nop
mov
inc
icebp
pop
mov
imul
pop
int
pusha
int3
repz
mov
or
pop
sbb
push
pop
in
pop
mov
inc
mov
sbbb
sub
jp
in
dec
jbe
mov
inc
xor
inc
out
pop
imulb
pop
sbb
shlb
xchg
xchg
dec
jl
sbb
cmp
pop
or
pushf
inc
mov
push
sti
pop
bound
pop
push
je
pop
loop
aaa
pop
cmp
dec
cmp
pop
jbe
pop
xchg
in
into
mov
mov
outsl
pushf
lock
decl
mov
imul
aas
sti
outsb
sub
fwait
push
pop
add
inc
das
mov
cmc
pop
or
cli
push
pop
mov
mov
jmp
test
mov
lret
hlt
ss
pop
outsl
fcom
pop
jl
push
pushf
jp
imulb
pop
std
test
sub
mov
lods
sbb
mov
xchg
pop
out
or
mov
pop
negl
mov
pop
mov
or
cmp
and
iret
mov
jge
dec
movsb
add
lahf
cmp
sbb
sub
out
pop
or
push
jbe
js
add
movsl
mov
insl
sub
sub
testl
shlb
jb
add
jbe
loope
ds
sub
fs
lock
mov
sbb
lahf
inc
xchg
iret
pop
int
ljmp
add
jbe
ret
xor
and
xlat
das
scas
pop
dec
stos
jnp
mov
sahf
add
pop
or
mov
bound
fwait
jl
int3
loopne
cltd
ror
cmp
icebp
mov
pop
pop
mov
divl
mov
cltd
leave
ja
das
jg
out
jbe
push
pop
std
notb
sbb
pop
cmp
jg
int3
lea
jnp
imul
pop
dec
xorps
pop
and
dec
xchg
cwtl
jge
pop
es
popf
andl
or
dec
movsl
pop
mov
cmp
mov
cmc
ret
or
dec
sbb
pop
faddp
inc
test
das
xor
mov
mov
fcomps
pushf
lahf
mov
pop
rcrb
add
mov
push
loopne
mov
xor
hlt
mov
and
pop
fsts
inc
sub
dec
ret
popf
shr
test
jmp
jo
adc
sbb
mov
call
jl
jne
pop
andb
push
outsl
pop
ss
push
pop
fs
add
jge
fsubrs
cmpb
popf
or
jb
pop
fs
pushf
ja
or
push
pop
testb
push
or
sub
sbb
pop
jo
xor
pop
popa
jnp
fs
mov
jb
jno
sbb
insl
sub
int
sbbl
mov
add
push
ja
pop
cmp
jne
pop
popf
fnsave
sub
pop
ss
insb
dec
int
adc
in
sub
test
lcall
jle
pop
lahf
and
negl
or
jo
pop
mov
insb
in
lret
cmp
push
and
pop
int3
pop
mov
pop
mov
out
imul
xchg
scas
push
fwait
mov
dec
stos
outsl
pop
adc
xchg
int3
subl
mov
outsb
xchg
scas
in
pop
scas
stc
sub
jnp
mov
add
andl
mov
out
sbb
pop
push
mov
and
lahf
cld
jecxz
test
add
dec
inc
xlat
test
cmp
dec
pop
add
mov
sahf
int
dec
stc
or
test
and
push
imul
fistpll
bound
repz
inc
jecxz
jnp
fnsave
fs
aam
sti
dec
push
or
bound
hlt
pop
xor
pushf
push
mov
xor
cmp
mov
xchg
imul
cwtl
dec
xchg
gs
mov
mov
push
cltd
pop
jb
mov
test
sbb
xor
cmpl
sbb
sub
int3
mov
icebp
sti
or
imul
dec
jb
pop
loop
out
push
popf
cmp
stc
aam
leave
addr16
jl
movsb
inc
jo
mov
push
xchg
push
mov
mov
stos
xorl
into
addr16
add
pop
jb
dec
ret
add
outsw
push
dec
cmp
mov
jecxz
sbb
lahf
push
xor
mov
mov
add
cli
mov
dec
or
push
pop
mov
mov
push
push
dec
roll
dec
pop
lods
sahf
int3
jne
mov
int
icebp
mov
and
pop
test
mov
mov
mov
addl
and
loop
sbb
scas
adc
movsb
dec
push
pop
movsb
add
test
xlat
pop
int
cli
sbb
mov
shll
mov
or
adc
pushw
pop
dec
mov
mov
jmp
or
jbe
mov
push
pop
xor
jp
or
jl
add
inc
dec
psubb
sbb
data16
pop
cmp
pop
pop
pop
pop
int
inc
mov
sub
pop
in
sbb
fmuls
push
ficompl
dec
sub
xor
cmp
pop
pop
icebp
loopne
dec
int
std
scas
inc
cmp
aam
in
mov
mov
push
mov
fsubs
xor
insl
sub
fistps
adc
pop
inc
cmp
push
ss
dec
stos
jns
xchg
bound
push
insl
imul
or
clc
cmp
xchg
mov
gs
lds
in
xchg
cwtl
xchg
fisttpll
jb
pop
add
shll
ret
mov
js
imul
and
pop
jecxz
mov
pop
pushf
push
int
add
repz
js
inc
call
pop
push
add
mov
pop
mov
pop
popf
adc
int3
cmp
jle
adc
int
xchg
push
lods
pop
mov
dec
mov
popf
pop
test
inc
clc
lea
mov
cmpb
ret
bound
int3
in
rorb
out
popa
pop
imul
dec
outsl
les
pop
jno
test
pop
sub
sub
sbb
mov
add
clc
lahf
daa
pop
mov
cs
push
out
and
pop
ja
jnp
sub
adcb
sbb
outsl
pop
lea
test
add
cmp
ljmp
sbb
sbb
mov
pop
push
sub
push
fcmovne
imul
out
jl
ret
xor
pop
outsb
aam
fmull
stos
push
rorb
fs
add
xor
pop
pop
pop
icebp
adcb
mov
pop
sbb
sbbl
cmp
nop
xchg
pop
xchg
jecxz
jp
sbb
inc
pushf
aaa
mov
add
sahf
lds
mov
jbe
scas
shlb
lock
rcrl
pop
clc
mov
fstp
outsb
jmp
mov
sub
aas
inc
push
pop
or
cmpl
fmuls
inc
clc
pop
or
fcmove
dec
inc
int3
mov
push
or
sub
mov
addr16
or
jae
ds
leave
lret
mov
repz
mov
mov
jbe
mov
pop
push
xchg
cmp
insb
pop
fcoml
mov
jp
pop
sbb
xchg
pop
fstp
jnp
lea
dec
pop
dec
pop
pusha
mov
movups
pop
add
mov
or
rcll
xchg
ret
gs
mov
test
fistpl
jnp
pop
int
mov
xchg
adc
or
dec
or
daa
mov
pop
and
lods
subb
arpl
push
push
xchg
call
mov
sub
or
enter
mov
adc
jns
pop
or
gs
call
js
pop
ror
lcall
scas
lods
xlat
movsb
bound
pop
ljmp
enter
or
xorl
cmp
adc
sbb
push
lcall
mov
inc
pop
push
pop
xchg
xor
pop
push
orb
cwtl
mov
xchg
pop
aad
push
hlt
mov
lret
nop
mov
pushf
cltd
mov
sbb
test
cmp
in
push
popf
sbb
lret
mov
mov
adc
icebp
lods
int
mov
pop
jb
imul
inc
int3
or
cli
std
cwtl
in
jbe
mov
xor
xchg
dec
mov
imul
dec
pop
mov
movsb
popf
jmp
mov
ret
adc
add
scas
jno
mov
pop
jmp
aam
jns
in
mov
ret
lock
popf
insb
in
dec
pop
sub
pop
sub
pop
dec
dec
std
cli
inc
mov
fsubs
std
out
mov
in
pop
pop
insb
xchg
sub
lahf
js
sbb
fildl
aas
mov
dec
xor
int3
inc
mov
loope
pop
mov
sbb
int
subl
xor
adc
movsb
or
out
mov
imul
mov
cmp
insb
dec
movsl
xchg
out
imul
sbb
mov
push
xor
scas
push
addr16
adc
push
mov
pop
fsubs
lret
jecxz
popf
cs
jecxz
xchg
dec
push
fs
scas
test
fdivs
mov
fidivl
sahf
pop
mov
out
dec
in
or
pop
add
insl
fbld
in
pop
sub
fsub
mov
cmp
stos
cltd
and
ret
push
sub
or
push
stc
dec
jnp
dec
inc
adcl
pop
and
cltd
in
jb
add
scas
pop
mov
sbb
pop
es
ss
int
movsl
push
lret
pop
ficomps
pusha
cmp
addr16
dec
push
mov
ret
mov
lret
cs
xchg
in
xchg
mov
cmp
pop
insl
xlat
adc
sti
jo
and
int3
cmp
fnstcw
pop
stos
adc
and
in
nopl
inc
and
out
sbb
jnp
or
xchg
in
add
mov
popw
push
cld
mov
lret
lret
insl
sahf
push
ficompl
test
and
cmp
or
pop
ret
pop
test
or
lret
pop
sub
in
jbe
sub
mov
dec
xchg
in
cmc
fldt
mov
lods
movsb
mov
inc
pop
fadds
scas
pop
jnp
add
mov
fcompl
fldt
mov
sub
sub
or
mov
fiaddl
push
mov
orl
jmp
mov
pop
push
cltd
lds
lods
int
sbb
out
test
rcrl
lea
sbb
mov
mov
pop
jbe
ficompl
pusha
addr16
sub
fwait
mov
push
pop
add
cmc
pop
mov
dec
scas
test
cmp
mov
int
stos
xchg
pop
arpl
jbe
mov
mov
cmpsb
mov
je
lea
in
sub
mov
xchg
push
lcall
push
out
and
inc
pop
add
cmp
aam
lods
cwtl
movsb
mov
adc
mov
add
pusha
pop
das
mov
cmc
push
mov
pop
icebp
leave
std
mov
pop
insb
xchg
sbb
call
rcrl
sbb
mov
add
addr16
push
or
imul
jmp
add
pop
lahf
ja
insb
cmp
pop
jns
xchg
es
dec
stos
ret
push
push
or
in
push
je
int
pop
aam
sbb
add
xor
jge
jg
pop
rcll
ja
adc
xlat
in
sti
mov
mov
dec
xchg
jge
aad
mov
and
jns
cmpsl
pop
sub
movl
pop
sub
gs
mov
loop
xor
fcoms
pop
pop
mov
roll
inc
mov
lock
cmp
enter
out
xor
sar
mov
fnstcw
repz
add
push
test
inc
dec
mov
add
xchg
xor
inc
in
andb
add
sbb
jnp
or
mov
add
int
dec
test
pop
push
pop
cmp
xor
mov
mov
push
leave
aaa
xor
stos
in
fisttpll
lcall
fsubs
das
pop
sub
mov
stos
mov
cmc
cmpsl
jno
ljmp
inc
sbb
stc
cmp
addr16
xchg
xchg
or
hlt
mov
add
std
push
mov
inc
aas
fstp
sbb
pop
sbb
lods
scas
movsl
clc
popf
cmp
xchg
repnz
ja
adc
add
cmpsb
pop
ret
pop
out
adc
mov
sub
mov
ror
lret
fnstcw
push
push
jbe
xchg
mov
aad
xor
mov
js
das
xchg
inc
sbb
mov
sub
pop
pop
cwtl
iret
loopne
out
pushaw
arpl
pop
xchg
movsb
mov
aas
cmp
adcb
mov
xor
push
push
mov
insl
push
sub
mov
ja
sbbb
add
pop
int3
add
into
int
fdivl
leave
out
lcall
pop
and
sbb
dec
mov
push
or
lcall
xor
lret
lahf
clc
dec
aam
fisubl
push
orb
mov
test
mov
outsb
call
dec
or
lret
nop
aam
sti
inc
pop
and
mov
inc
push
pop
mov
pop
nop
mov
std
xor
push
sub
mov
push
push
repz
mov
adcb
pop
insl
or
dec
xchg
rcrl
arpl
dec
jb
and
pop
setl
jbe
sbb
cmc
mov
or
push
pop
rolb
pop
cld
in
jmp
mov
rcll
pop
bt
xorb
test
gs
add
add
pop
pop
enter
sbbb
cld
and
xchg
dec
jmp
jl
lds
jecxz
pop
cmpsl
sarb
xor
push
sub
inc
sbb
push
dec
jbe
pop
rcrl
jo
dec
pop
jmp
pop
add
pop
mov
mov
pop
push
ss
xor
popa
mov
push
andb
lods
sbb
imull
bound
icebp
jne
xor
pop
xlat
or
int
sbb
mov
int3
cltd
ret
call
jnp
negl
aad
mov
mov
std
icebp
aam
sbbb
adc
jl
adc
push
ss
pop
mov
sbb
dec
imul
mov
cwtl
loope
mov
xchg
cmp
push
mov
aad
test
mov
stc
pop
in
pusha
xchg
and
add
aam
adc
adc
arpl
jne
pop
std
xlat
pusha
fs
insb
pop
xchg
lret
fdivrl
in
xchg
and
mov
gs
adc
lahf
sub
stos
aam
flds
jp
aaa
rorb
dec
push
inc
pop
fildll
in
mov
add
jo
mov
mov
fwait
sahf
out
ljmp
cld
pop
int
adc
lret
jge
jo
ja
xor
lcall
cli
mov
cmp
pop
pop
das
jl
jb
mov
push
js
sub
mov
sahf
adc
cwtl
pop
mov
leave
repnz
push
dec
pop
dec
out
push
lahf
xchg
dec
xchg
std
lcall
or
adc
fnstcw
sti
push
lea
and
mov
ljmp
fnstsw
sbb
fisubrs
adc
pop
sbb
pop
test
xchg
insl
repz
jns
lahf
push
mov
cs
jae
cmp
stos
cld
inc
rolb
scas
and
add
xchg
sti
es
dec
movsl
push
jmp
jp
adc
pop
or
mov
push
or
push
rcrb
stc
adc
pop
outsb
mov
ja
dec
and
pop
sub
mov
push
cmp
in
dec
orb
scas
jle
sbb
dec
cmp
cmp
mov
out
cli
shrl
pop
lds
outsl
pop
loopne
sbb
pop
fdivl
fmuls
push
cltd
pop
lds
cmc
dec
mov
mov
lods
sbb
sbbl
dec
push
sarl
adc
sub
add
insl
hlt
push
inc
pop
cmpsl
mov
cld
data16
popa
mov
pop
ret
int3
lock
inc
shll
cmpsb
mov
sbbb
jbe
inc
das
movsl
jg
dec
pop
je
push
mov
jns
pop
adc
iret
out
push
mov
pushf
int3
push
jg
lret
pop
add
pop
testb
pop
leave
scas
enter
pop
jo
cmp
pop
sub
pop
lcall
adc
mov
and
int
jge
roll
mov
mov
in
jb
ss
mov
mov
out
call
cmp
je
scas
pop
xchg
sub
nop
int
mov
wbinvd
adc
aam
and
pop
into
arpl
jns
scas
push
je
push
mov
std
mov
sbb
daa
pop
jmp
or
pop
scas
ficoml
arpl
cmp
and
loop
sub
cmp
jbe
inc
aaa
cltd
jecxz
jge
sub
imul
cwtl
dec
sbb
inc
jae
jns
js
lahf
pop
jge
add
jp
mov
jmp
push
push
pusha
pop
adc
mov
mov
clc
pop
repz
adcb
pop
fs
adc
out
xchg
pop
jnp
ljmp
pop
xchg
ljmp
pop
into
push
sbb
dec
mov
lods
pop
sbb
mov
jnp
inc
pop
adc
stc
pop
into
pop
sbbl
xchg
xor
or
sub
jne
pop
adc
out
fwait
jo
cs
sbb
mov
in
sbb
push
mov
test
fcompl
mov
add
push
jge
lea
jb
inc
mov
rcrb
pop
sbb
pop
pop
xchg
mov
mov
fmuls
push
or
dec
movsb
int3
sub
adc
xor
fsts
test
or
add
jg
fistpl
adc
hlt
sub
into
pop
pop
aam
pushf
xchg
jecxz
lahf
insl
pop
ror
or
stos
test
data16
add
add
cltd
pop
sub
push
shlb
push
sbb
cwtl
sbb
inc
popf
xchg
jnp
popa
pusha
pop
test
pop
int
mov
and
test
pop
or
enter
sti
xchg
cmp
xor
fstpl
fs
out
loop
das
cmp
pop
daa
xorb
add
sub
mov
inc
xlat
or
mov
shrl
js
mov
jmp
add
popl
mov
adc
sahf
mull
mov
push
in
cli
pop
scas
pop
lea
outsl
leave
mov
pop
jbe
in
cmp
fs
mov
test
lods
jl
sbb
pop
mov
notl
and
sbbb
lock
and
sbb
je
jbe
in
in
jecxz
mov
or
jns
pop
jo
jnp
outsw
lea
xchg
and
pop
inc
iret
adc
pop
sbb
fldl
orl
push
xor
pop
adc
std
fnstcw
rcll
lds
fcompl
push
or
out
adc
fisubl
addr16
cmp
and
inc
ja
pop
nop
pop
cltd
loop
xor
sbb
add
lds
mov
int3
in
jg
fsubp
sub
adc
inc
or
pop
mov
pop
arpl
std
test
xchg
jge
lds
dec
cmp
pop
mov
frstor
jnp
push
lods
pop
pop
int3
cmp
out
mov
mov
sub
scas
adcb
pop
dec
jnp
mov
pop
push
mov
jmp
das
in
adc
jo
arpl
arpl
test
lahf
push
push
adc
push
pop
stc
pop
adc
dec
push
xchg
sbb
mov
lds
inc
dec
pop
inc
pop
test
aas
and
inc
sbb
mov
inc
lea
mov
mov
pop
cs
mov
fs
in
dec
cmp
fbld
jns
fsts
and
and
daa
adc
in
mov
mov
push
lret
fidivl
imul
pop
cmp
xchg
lret
leave
inc
or
dec
test
mov
cmp
ja
mov
xchg
mov
aad
bound
pop
add
sbb
int3
rol
fstl
stos
dec
in
cld
xchg
pop
mov
sbb
scas
xchg
mov
mov
pop
in
faddp
int
fsubl
pop
mov
fbld
fstpl
inc
in
je
cs
cmp
call
dec
jecxz
out
sub
push
mov
sbb
stc
jmp
mov
cmpsl
cltd
dec
les
xchg
neg
aam
icebp
jl
and
rorl
push
icebp
insb
or
aad
cmp
lds
pop
lcall
xchg
ja
test
scas
jo
mov
sub
sbb
sbb
sti
aas
aam
mov
test
lret
jns
int
pop
add
dec
sbb
sbb
cmpsl
cld
or
xchg
int
ljmp
mov
mov
movzwl
pop
mov
popa
jg
sub
xchg
pop
sbb
gs
movsl
mov
and
mov
jb
pop
fbld
add
pusha
add
push
pop
int
dec
jmp
mov
fisttps
mov
and
dec
sbb
sbb
cmpsb
ret
push
add
int3
mov
mov
add
bound
add
and
pop
in
add
outsl
fstl
pop
movsbl
inc
dec
sbb
or
pop
in
cs
dec
add
aam
mov
sbb
mov
cmp
sub
pop
jne
push
adcl
push
pop
sbb
jbe
pop
lahf
js
xlat
in
adc
out
imul
push
inc
jg
sub
pop
pop
pop
fmuls
xor
mov
xor
cs
js
stos
pop
cli
das
sbb
adc
mov
or
mov
pop
outsb
push
xor
inc
in
cmp
ja
dec
mov
imul
jl
lahf
lods
add
adc
add
and
loope
jb
lock
add
sbb
pop
shrl
pop
or
cltd
call
pop
mov
cmp
in
jbe
pop
and
inc
sub
pop
lretw
xor
mov
adc
pop
fcmovnu
and
out
pop
insl
lea
cmp
scas
dec
mov
inc
stos
adc
es
xchg
mov
sbb
jle
mov
xchg
xor
int3
sbb
jae
xchg
cld
lds
mov
testl
pop
xchg
js
int
inc
dec
or
in
jo
sbb
jne
ss
divl
pop
aad
mov
xchg
dec
or
pop
movsl
or
mov
add
pop
mov
ret
sbb
mov
test
pop
leave
ss
aad
sbbl
push
enter
pop
jge
and
sbb
mov
mov
int
or
outsl
insl
pop
mov
insb
fwait
jbe
or
sbb
repnz
in
add
adc
addr16
cltd
pusha
out
pop
scas
lcall
xor
dec
cli
clc
in
loope
mov
fistps
andb
cltd
or
add
push
lods
jnp
xor
insl
in
cmpsb
jb
jg
or
mov
cltd
test
mov
dec
movsl
in
pop
lret
int
nop
addb
dec
jne
pop
add
ja
xchg
jp
stc
in
inc
jo
push
lcall
imul
pop
sub
mov
pop
cmp
jl
inc
jae
mov
xchg
mov
cmp
sbb
jns
je
push
movsl
shl
fcmovnb
aad
leave
mov
insb
xchg
xchg
dec
sbb
mov
and
ss
pop
sahf
test
stc
test
and
push
fistps
scas
mov
in
pop
adc
jmp
scas
ljmp
aad
push
movsl
int
add
push
sbb
jl
and
pop
sub
int3
popa
inc
cld
and
int
std
push
jns
pushf
scas
scas
je
sahf
cli
out
cmp
adc
add
gs
mov
pop
das
mov
mov
insl
jmp
movsb
pop
xchg
pop
aaa
arpl
or
stc
and
gs
push
shlb
dec
mov
enter
repnz
cs
pop
data16
int3
cli
lret
or
sub
mov
out
leave
lea
out
pop
test
cmc
pop
clc
jns
shrl
addr16
xchg
pop
and
xor
bound
pop
loop
dec
popa
test
mov
pop
in
and
popf
pop
jbe
jl
inc
mov
pop
mov
and
or
cs
hlt
jb
sbb
test
sbb
pushf
scas
push
loopne
out
imul
dec
pop
jb
repnz
sub
mov
shlb
rcrl
pusha
pop
lahf
jo
or
int
inc
pop
jae
rcll
dec
pop
or
dec
cmp
push
int
xor
push
test
test
pop
xor
int
push
jge
lods
pop
mov
jg
xchg
xchg
mov
push
scas
leave
sub
mov
fstpt
mov
repnz
push
insl
xor
jmp
lods
lcall
js
negl
jns
cmp
in
pop
shrb
repz
dec
xor
push
shll
pop
pop
cmpsl
cmc
ret
pop
sub
adc
mov
mov
mov
out
or
push
rorl
pop
push
sbb
jg
dec
push
sub
dec
pusha
xor
dec
pop
int
lcall
aaa
pop
mov
sbb
lret
xor
ljmp
cld
dec
mov
or
test
pop
call
mov
or
jecxz
cwtl
aam
lret
inc
fs
pop
int3
push
mov
and
std
enter
sbb
dec
lret
pop
mov
je
addr16
jns
scas
fildl
and
cli
jbe
xchg
inc
cmp
movb
repnz
mov
jge
mov
jo
xchg
sbb
push
repnz
in
pop
int3
xchg
mov
insl
sbb
fs
push
js
mov
dec
outsl
fldt
pop
hlt
ljmp
xor
pop
sbb
data16
enter
jl
outsl
pop
cmp
cmp
movsb
ljmp
and
pop
das
add
aad
in
int
mull
push
sub
cmpl
inc
mov
jo
dec
mov
pop
out
jmp
sub
jns
loope
mov
mov
adc
aaa
mov
loopne
out
fidivs
stos
data16
mov
mov
pop
fldl
push
inc
sbb
add
or
outsb
stos
pop
xchg
mov
cmp
in
jecxz
pop
lahf
mov
xorb
jo
sbb
popf
pop
cmpsb
scas
push
cmp
dec
sub
sahf
lret
mov
stos
arpl
stos
ficoms
cld
fistpl
movsl
outsb
add
ficomps
lahf
mov
mov
jae
jle
mov
pop
pop
sbb
sub
xchg
popf
loopne
sbb
xchg
fiadds
sti
sub
leave
pop
rorl
and
xchg
cmpsb
mov
lret
rol
adc
push
je
pop
cmp
add
sbb
sbb
stc
sub
lcall
inc
dec
xchg
and
sahf
xor
lahf
pusha
jge
and
cltd
popf
pop
mov
fxch
pop
stos
sbb
sub
cs
outsl
std
mov
fiaddl
shll
stos
jl
decl
cld
cmp
jno
mov
sbb
ljmp
mov
data16
jl
imul
add
mov
cwtl
call
imul
push
pop
stc
mov
push
xor
pop
les
out
dec
mov
jbe
jb
pop
sbb
sub
test
xchg
cwtl
in
adc
mov
int3
xchg
inc
cld
clc
scas
in
dec
and
or
cmpsb
jl
pop
mov
mov
cmp
fimuls
inc
jecxz
pop
es
sbb
lds
pop
pop
aad
shlb
ja
pop
push
mov
movsb
pop
dec
sbb
add
jecxz
mov
je
mov
jae
test
pop
bound
pop
stc
jmp
ja
cmpsl
scas
dec
adc
and
jb
fscale
jp
in
pop
mov
mov
int
push
scas
adc
test
mov
mov
cltd
pushf
xchg
arpl
call
addr16
js
add
pop
out
xor
push
pop
loop
daa
popa
sbb
test
stc
or
cli
out
adc
jl
pop
jne
inc
shr
pop
jmp
je
rcrl
inc
fcomip
lods
xchg
pop
xchg
ror
adc
popf
mov
test
xlat
mov
cmp
jne
push
mov
dec
lret
test
js
sbb
push
in
jns
data16
icebp
and
das
pop
repz
inc
sbb
pop
pop
sbb
push
sbb
popf
ljmp
loopne
rclb
add
sub
pusha
pop
test
dec
jle
push
jo
pop
xchg
int
xchg
roll
pop
cwtl
rclb
mov
mov
sbb
cltd
pushl
mov
jmp
pop
scas
int
sbb
pop
rorl
pushf
sub
sub
lods
ret
add
mov
addr16
fwait
mov
clc
and
dec
iret
or
cmp
mov
lods
jo
ret
mov
cwtl
dec
ficomps
sbb
sub
or
sbb
sbb
dec
mov
adc
dec
pop
pop
pop
ret
lcall
inc
sbb
fcomps
hlt
cmpsb
pop
test
or
sbb
in
pop
int
scas
adc
push
lds
and
cltd
scas
lea
pop
jb
repnz
pop
mov
cmp
mov
dec
js
adc
pop
in
movsl
jl
aam
pop
test
testw
or
add
push
gs
pop
cmp
mov
loope
or
ss
inc
jno
cli
mov
mov
dec
jle
adc
adc
dec
jns
daa
icebp
mov
je
pop
xchg
inc
mov
pop
fstpt
add
or
into
jbe
lea
mov
loopne
sub
aas
pop
movsb
pop
and
xlat
or
adc
movsb
imulb
xor
scas
sbb
sbb
fmuls
ss
inc
in
xlat
inc
lods
sbbb
pop
cli
imul
xchg
jne
notb
push
add
jbe
dec
pop
and
cwtl
nop
std
cmp
outsb
xchg
rorl
scas
add
cwtl
xchg
rorb
pop
ljmp
arpl
jnp
xor
aaa
add
fstpl
cwtl
imul
call
out
scas
push
std
enter
hlt
lcall
inc
and
push
sbb
in
mov
mov
std
pop
scas
jle
fisubl
loop
insl
and
cmp
shrl
xchg
lods
cmp
hlt
lcall
mov
ret
sbb
pop
push
adc
push
jge
int3
pop
outsl
cmc
rorb
lea
mov
in
inc
stc
sbb
sub
xchg
mov
in
push
or
stc
xor
sbb
subb
hlt
mov
test
jp
mov
call
sub
pop
ljmp
mov
sbb
loopne
jnp
lret
push
pop
xchg
jae
std
out
rolb
or
sbb
jge
cmp
pop
xchg
add
push
sbb
mov
mov
adc
out
jne
mov
inc
sti
xorl
sarl
ss
frstor
lret
pop
push
or
gs
jecxz
push
push
xlat
jb
pop
jmp
adc
push
mov
mov
scas
pop
shlb
or
es
mov
or
xchg
push
jnp
jno
xor
pushf
mov
out
jl
stos
loop
rcrl
in
jnp
inc
leave
int
orb
pop
repnz
rclb
imul
gs
shrb
test
std
xlat
fcomps
loop
push
sub
loope
ja
push
gs
in
mov
int
pop
sbb
mov
jno
mov
xchg
add
or
pop
pop
call
cmp
inc
push
insl
jp
pop
mov
or
pop
int
mov
pop
jle
push
out
xor
jne
pop
dec
jge
sbb
test
negb
xlat
push
mov
mov
inc
movsb
jmp
std
adc
sub
lret
pop
push
xchg
fsubr
xchg
jns
es
daa
sti
test
iret
xchg
popf
dec
mov
scas
rcrb
loop
movsl
cld
pop
jl
jp
andb
pop
lret
ja
or
and
loope
jp
jnp
jns,pn
fs
or
xchg
repnz
mov
or
xchg
cmpsl
stc
test
addb
xor
lcall
mov
mov
inc
pop
ds
or
adc
orb
mov
add
imul
inc
pop
mov
jbe
lret
mov
dec
pop
in
xchg
sub
sti
inc
insb
and
loopne
dec
pop
push
lret
int3
sub
ss
inc
pop
push
int
fildll
push
mov
dec
cmp
mov
fisttps
enter
mov
mov
int
stos
lret
xlat
xor
cmp
mov
std
adc
mov
adc
xchg
dec
icebp
add
fwait
jae
fimuls
jo
pop
push
fmuls
pop
adc
jecxz
jae
pop
mov
inc
out
and
mov
jmp
addl
inc
pop
fisttps
and
sbb
fcmovu
sbb
adc
sbb
mov
push
xor
push
outsl
jp
in
adc
gs
mov
dec
sbb
icebp
loope
int
and
out
adc
cmp
stos
jbe
movsb
dec
add
repz
mov
xchg
cltd
cmp
mov
push
outsl
pop
js
orl
icebp
repnz
test
jbe
insl
pop
out
imul
pop
int
lret
int3
sub
aam
pop
insb
jb
cmpsl
mov
pop
push
dec
int
mov
sub
and
pop
das
btc
inc
fstpl
repnz
adc
in
jo
mov
pop
into
sarl
dec
pop
sti
ja
aas
out
jo
push
xlat
xchg
pop
mov
xchg
fcoml
in
adc
fdivs
mov
inc
ja
add
jge
push
jle
pop
and
adc
pop
jne
into
sbb
mov
and
data16
mov
pop
pop
int
cltd
mov
pop
out
outsb
in
dec
xor
js
cltd
negb
dec
jmp
inc
pop
dec
rcl
lret
fadds
push
out
and
jg
mov
scas
insb
jne
les
add
sbb
rcll
pop
pop
fwait
sbb
adc
lea
scas
je
lods
lahf
inc
sbb
lret
fyl2x
js
mov
mov
pop
mov
in
fst
xchg
cltd
cmp
inc
mov
lretw
fsubrp
mov
mov
pop
add
mov
pop
jne
iret
lret
cmp
lds
mov
pop
in
sbb
xchg
outsb
cltd
xchg
adcb
xorl
pop
adcb
mov
cmc
jmp
pop
inc
push
scas
lcall
push
push
dec
and
inc
pop
stc
icebp
lods
cwtl
movsl
or
scas
mov
rcrl
sbb
sbb
jo
in
das
int3
pop
leave
cwtl
cmp
fisttpl
ret
xor
mov
scas
call
insl
cwtl
pop
and
in
pop
pop
xor
int3
add
push
jo
or
ljmp
bound
stos
pop
fstps
push
pop
movsb
shrb
jecxz
cwtl
push
fsubl
leave
rolb
pop
jle
ljmp
mov
out
loope
or
fsubs
repnz
sbb
je
imul
xchg
out
clc
popa
push
pop
dec
mov
mov
out
or
sbb
scas
cmp
pop
sub
int3
lods
pop
dec
push
movsl
xor
pop
iret
pop
sbb
in
or
ds
or
call
pop
mov
jo
add
imul
int3
mov
loope
mov
mov
inc
jnp
sahf
pop
sbb
cmpsl
fcmovnbe
ret
pop
int3
cmc
je
jle
aas
mov
jmp
repnz
push
testl
push
lret
pop
out
xor
ss
sub
ficomps
sbb
bound
sbbl
lock
int
pop
pop
fs
lcall
cmp
aaa
xor
inc
ficompl
mov
out
dec
fmuls
dec
scas
aad
mov
add
inc
out
pop
imul
test
mov
lods
push
scas
mov
pop
inc
ja
sti
in
hlt
push
ret
adc
arpl
or
out
aad
dec
push
adc
cli
inc
lret
push
jecxz
inc
fwait
pop
psadbw
jb
test
lods
pop
adc
mov
jne
icebp
pop
xchg
or
inc
int
mov
mov
pop
mov
adc
stc
lea
ret
cmp
pop
mov
pop
xchg
fisttpl
xchg
int3
xor
loopne
mov
jle
add
inc
xlat
insl
pop
scas
fldcw
pop
lea
mov
and
mov
dec
arpl
in
into
stc
pop
pop
fidivl
mov
sbb
test
cltd
ret
push
jnp
mov
cmpsb
pop
jo
pop
cmp
fisubrl
out
mov
cltd
leave
popf
enter
sarb
xor
repz
sar
add
mov
in
leave
dec
mov
out
popa
popf
mov
pop
jmp
in
jns
fidivrl
adc
mov
test
mov
mov
jbe
shll
popf
out
bound
or
testb
push
aaa
pop
mov
adc
adc
sbbb
pop
out
sarl
rorl
imull
daa
stc
xor
inc
adc
sbb
pop
pop
jmp
mov
pop
cmp
out
push
cli
enter
pop
xor
lret
pop
xor
or
repz
lods
sbb
pop
pop
or
lds
int
std
pushf
mov
xchg
fisubl
int
int3
aaa
mov
sub
jnp
das
test
push
pop
xchg
enter
leave
rorb
jbe
iret
dec
popa
mov
add
and
ficomps
push
repz
je
fnsetpm(287
pop
sbb
outsb
dec
pop
fbld
stos
pop
inc
xchg
sub
and
js
jno
jle
inc
add
ja
dec
sub
gs
pop
int
jnp
or
push
mov
cmc
lods
pop
std
jecxz
jbe
lahf
enter
cld
int3
cmp
or
cmp
int
pop
iret
mov
inc
fcmovnbe
jmp
loop
pop
sub
inc
push
pop
ja
fildll
inc
je
push
sbb
cmpsb
xchg
out
pop
lret
inc
lcall
pop
cmp
int
cmp
mov
jbe
pop
push
js
pop
lcall
add
inc
cmp
add
pop
adc
test
sbb
fs
int
sub
pop
pop
xchg
cmp
cmp
int3
xchg
in
mov
jge
rcrb
hlt
add
fisubs
popf
mov
pop
sbb
fdivl
loop
cmpsl
fistps
rolb
dec
ror
mov
mov
mov
mov
mov
in
arpl
rcll
pop
adc
cmp
fisubs
out
bound
pop
movsl
insl
ja
mov
std
or
daa
mov
js
ljmp
or
sarl
lock
cmp
cltd
xor
enter
pop
dec
faddp
jg
xchg
mov
pop
je
adc
loop
pop
sub
xchg
in
jb
jge
cmp
icebp
pop
jl
ret
nop
subl
int3
das
xor
pop
cmp
lds
in
xlat
sub
xchg
sub
mov
pop
aas
inc
push
and
popa
fistpll
jl
inc
jecxz
mov
pop
xor
jge
mov
pop
push
outsl
xchg
gs
call
pop
loope
and
fistps
sub
aas
sbb
inc
out
jo
mov
data16
sub
ljmp
inc
fcomps
mov
test
jae
or
pop
mov
adc
sbb
pop
or
out
int
lahf
data16
pop
mov
or
pop
push
mov
sub
push
jno
xchg
fwait
cmp
insl
pop
popf
in
pop
pop
xlat
push
sbb
cmp
or
pop
sub
xchg
nop
sub
int3
xor
repz
popf
pop
int
je
out
clc
sub
pop
in
std
push
push
adcb
dec
mov
jns
mov
cmpsl
push
pop
dec
sbb
xchg
call
jecxz
add
pop
mov
dec
fstps
dec
push
xor
pop
and
int3
mov
sbb
bound
aaa
jg
pop
xlat
pop
in
movsb
jb
inc
add
std
subl
jl
pop
dec
xchg
inc
loope
movsb
jae
jmp
jmp
pop
xchg
or
rclb
movsb
pop
adc
mov
pop
sbb
jnp
outsb
mull
pop
push
scas
mov
sub
pop
push
ds
xchg
enter
popf
pop
xor
lret
repnz
in
fldcw
cmp
std
xchg
dec
ror
pop
sbb
lock
call
push
int
fs
cltd
nop
mov
dec
push
mov
pushf
xchg
pop
jl
and
inc
or
mov
movsl
test
test
xor
xor
pop
out
jg
mov
dec
pop
pusha
inc
pushl
pop
push
xlat
or
jnp
adc
mov
fwait
pop
ret
jb
fdivrp
xchg
daa
scas
jg
dec
inc
lock
cmp
xchg
gs
call
bound
dec
pop
or
xchg
dec
or
pop
and
lahf
movsl
arpl
scas
or
mov
loope
aaa
outsb
dec
jnp
pop
ljmp
pop
push
jo
mov
pop
push
jle
fidivl
adc
pop
xor
out
mov
int
cmpsb
pop
aaa
pop
dec
mov
mov
ret
shl
cmp
sbb
popa
cmp
arpl
scas
pop
push
xorl
pop
pop
jle
sbbb
mov
mov
push
out
jmp
daa
dec
pop
test
adc
jo
inc
cmp
pop
adc
pop
or
jecxz
pop
out
jbe
fwait
insb
repz
mov
add
mov
adc
aaa
jne
jae
cmp
push
add
adc
and
rcll
testb
xchg
aas
iret
ja
lock
mov
push
sbb
dec
mov
jge
fwait
cli
lds
sbb
dec
cmpsl
xchg
pop
sbbb
or
or
iret
addb
sub
or
xchg
inc
jno
cltd
jbe
xor
xorb
ds
pop
xor
jo
pop
mov
cmp
ss
push
or
mov
fwait
pop
out
popa
ja
fucomip
fsubrp
pop
adc
mov
loope
dec
sub
mov
int
or
out
out
xor
jbe
pushf
sahf
inc
enter
fxch
dec
jecxz
push
cmpsb
pop
adc
sub
lret
sbb
mov
sub
into
shlb
dec
or
scas
jb
out
pop
stc
jo
cmc
push
and
sub
or
pop
pop
mov
jae
icebp
mov
pop
adc
cmpsl
nop
add
out
jb
pop
out
lods
mov
test
and
add
jge
jmp
lods
jne
pop
or
mov
mov
bound
cmc
jecxz,pn
push
inc
pop
outsb
jb
mov
push
jle
jnp
cwtl
lret
fdivrl
mov
xorb
xor
cmp
fimull
pop
mov
dec
in
jbe
sbb
xchg
xor
movsl
push
jmp
dec
or
lahf
cltd
fsubrs
cmpsl
pop
dec
push
and
sbb
dec
scas
stos
clc
pop
push
jp
push
dec
mov
pop
xchg
jne
sarl
andl
insl
sbb
test
loopne
xor
mov
sbb
enter
jl
jns
inc
pop
adc
fidivrs
pop
xlat
sahf
sbb
pop
imul
sbb
pop
mov
xlat
in
inc
dec
push
pop
inc
fsubrs
insl
xchg
pop
mov
loop
test
enter
xor
pop
xchg
sbb
rorl
pop
cli
add
loope
test
sbb
aad
std
sahf
pop
repz
jge
fidivl
cmp
mov
clc
inc
inc
dec
pop
out
movl
pop
je
mov
sbb
insl
mov
or
jl
pop
pusha
mov
fisttps
pop
out
cmp
pusha
str
or
or
nop
inc
add
jl
in
setp
aaa
pop
scas
pop
shrb
mov
mov
es
dec
fisttpl
aaa
or
push
sti
push
pop
or
mov
movsl
pop
mov
clc
std
lock
cmp
leave
xchg
pop
dec
sbb
sub
hlt
sub
add
int3
jnp
or
int
gs
sub
inc
in
mov
mov
stos
cltd
fisubrs
vmovlps
pop
push
lret
inc
fcompl
mov
jbe
add
jge
idivb
loope
mov
sbb
xor
ficompl
dec
fsubl
pop
lods
jle
cmp
pop
dec
dec
push
sbb
aam
fnstcw
push
adc
fs
sbb
mov
inc
cmpsb
int3
in
add
mov
fisubrl
and
mov
insb
adcl
data16
sub
sbb
aad
inc
es
xchg
rcrb
lcall
out
roll
pop
clc
pop
aaa
jno
adc
addl
mov
int
pop
mov
mov
or
mov
test
imul
loopne
ljmp
push
sbb
nop
mov
into
andl
mov
push
adc
mov
stos
and
stc
add
nop
add
mov
mov
and
xchg
in
stos
mov
or
pop
pop
lret
jge
mov
jbe
notl
push
pop
out
pop
std
sub
aad
ret
xchg
push
aam
stc
pop
inc
fsubrl
sub
divb
cwtl
mov
push
inc
pop
adc
dec
movsb
jge
xchg
int
and
mov
sbb
push
dec
pop
imul
inc
mov
pushl
pop
nop
test
add
sbbb
pop
push
lock
pop
xchg
imulb
push
pop
xchg
jg
sub
in
add
sub
adc
sub
popf
fbstp
dec
xchg
int
mov
or
fcomps
pop
outsl
enter
rclb
pop
arpl
sbb
lahf
cmp
add
pop
pop
mov
enter
and
pop
scas
movsb
shll
fdivs
mov
mov
adc
mov
cmp
jo
sbb
cmpsb
lods
push
pusha
loopne
adc
xchg
pop
in
jl
mov
xchg
pop
scas
inc
hlt
pop
dec
sbb
mov
insl
push
push
adc
inc
dec
test
jae
stos
or
jmp
adc
push
outsb
cltd
or
xchg
out
mov
jo
hlt
pop
loop
cmp
add
pop
dec
pop
mov
push
int
xor
rcrb
fcmovne
pop
mov
pop
mov
mov
jge
mov
mov
fistps
adc
mov
fwait
pop
jb
cli
int
stos
xchg
pusha
test
add
out
stos
in
xchg
pop
inc
cld
xchg
jmp
cmp
add
div
mov
pop
cwtl
mov
inc
repz
cli
jae
xchg
mov
and
and
sub
lahf
ret
fistpl
enter
dec
sbb
lods
pop
adc
cmp
mov
push
pop
xor
clc
test
xchg
mov
insb
shl
push
scas
int3
jae
iret
mov
inc
pop
int
flds
mov
xchg
sbb
into
adc
sbb
xchg
mov
flds
sub
sub
aaa
and
repnz
mov
push
loopne
mov
insb
in
sub
pop
lods
test
mov
ss
dec
add
rcr
pop
xor
cwtl
fimuls
inc
sbbb
int3
and
int
sbb
pop
insb
repz
push
js
or
dec
adc
push
sub
pop
sbb
adc
push
inc
lea
sbb
aas
sbb
xchg
shrb
pop
daa
loopne
jno
push
dec
int3
pop
jp
mov
jo
pop
mov
loopne
mov
fwait
xor
std
fimuls
ret
pop
icebp
lahf
arpl
inc
jbe
pop
dec
xor
dec
outsb
adc
movsl
in
sbb
dec
push
bound
das
mov
jo
pop
mov
inc
in
fstpl
jbe
fwait
add
xchg
pop
push
sub
pop
int
mov
or
inc
out
fsubs
stos
push
cmp
push
fwait
pop
cmp
ret
mov
cmc
mov
mov
shrb
movsl
sahf
mov
nop
fidivl
sbb
cwtl
or
xor
jns
jecxz
cmp
xor
mov
pop
jp
pop
ds
fsubp
push
jb
pop
push
and
idivb
ss
pop
stc
std
pop
dec
mov
inc
mov
fcoml
mov
and
pop
mov
sti
fnstcw
insl
pop
mov
int
lea
pop
stos
sbb
orl
cltd
cmp
loope
fisubrl
fs
pop
and
shlb
dec
fsubr
std
mov
jle
inc
mov
cmp
shl
xchg
pop
in
dec
jo
mov
and
pusha
push
cmc
insl
fdivl
dec
das
rcrl
or
in
mov
test
mov
mov
pop
pop
or
ficompl
or
dec
scas
repz
pusha
cltd
dec
fwait
das
pop
cmp
je
div
aas
sbbb
adc
ja
inc
pop
pushf
outsl
stos
scas
cld
idiv
xor
fcompl
insb
or
stc
mov
outsl
push
cmp
fisubl
imul
rcrl
mov
mov
addr16
cmp
insl
mov
loopne
mov
pusha
in
hlt
inc
or
cmp
shl
and
std
xor
and
xchg
sub
jo
push
pop
and
cmp
fcoml
jle
sbbb
lea
pushl
test
adc
add
mov
lods
cmp
mov
test
shll
pop
jecxz
or
dec
and
cld
sub
dec
sbb
jmp
mov
pop
adc
push
lret
jge
es
push
cmp
testl
cli
lret
popf
xchg
rcrb
enter
inc
or
icebp
sub
or
pop
xor
push
in
pushf
push
scas
or
mov
sbb
jbe
fwait
cmp
add
adc
mov
sahf
pop
ds
into
lea
and
fisttps
bound
negb
sbb
decb
insb
xor
inc
sbb
mov
adc
shr
jbe
jmp
mov
loope
fisubs
xchg
pop
mov
mov
inc
and
inc
sbb
negb
nop
sti
pop
sbb
push
mov
lds
xchg
in
dec
sub
mov
pop
mov
das
sbb
mov
clc
cmp
lods
fstpt
in
xlat
sbb
sarb
scas
int3
pop
cmp
and
dec
aad
cli
sarl
fwait
dec
add
pop
andb
push
jl
test
mov
leave
int
jmp
les
lahf
cmovne
in
out
scas
pop
call
mov
aas
inc
scas
divb
fdivs
and
jecxz
mov
std
cli
add
pop
xor
lea
pop
leave
je
test
jecxz
fists
fdivrl
mov
sbb
dec
in
outsl
stos
or
mov
pop
jnp
mov
in
pop
pusha
jge
add
or
mov
jle
sbb
cmc
sbb
mov
xchg
stos
fidivl
cltd
sub
out
nop
dec
add
data16
adc
into
xchg
jb
cwtl
scas
add
and
jae
cli
jecxz
cli
pop
or
pop
xor
and
movsl
lahf
cmp
push
pop
insb
ret
add
fiaddl
pusha
lea
stos
lret
sub
cmc
out
push
loop
inc
xchg
mov
scas
or
mov
mov
pop
jbe
sbb
and
add
int
pop
jmp
dec
jne
or
jbe
jle
jl
jp
add
data16
std
mov
in
or
and
mov
cld
push
cli
pop
popa
sub
sbb
pop
xlat
mov
ljmp
mov
jne
inc
sbb
js
xor
mov
cmpb
xchg
nop
sbb
pop
lea
je
es
mov
jp
xchg
pop
jmp
and
inc
xor
cmpsl
call
fstpl
or
loop
adc
jecxz
negl
adc
sbb
aam
dec
push
mov
movsl
pop
inc
pop
jo
pop
dec
cmovno
cmc
add
jbe
lock
aas
adc
int
js
test
push
inc
lret
mov
aam
int3
push
inc
and
cmp
pop
and
jecxz
jns
pop
cmp
dec
xor
ljmp
outsb
push
dec
pushf
test
in
out
dec
mov
pop
mov
adc
sbb
decl
jne
dec
mov
arpl
icebp
lods
leave
pop
xor
mov
jmp
lret
sub
nop
pop
outsb
shlb
xchg
adc
mov
test
pop
insl
aas
in
inc
or
xchg
jo
or
fwait
pop
and
jb
xor
pop
dec
sbb
cmp
jne
inc
aad
xchg
sbbl
mov
test
movsl
fldl
or
int3
pop
iret
jbe
jle
xchg
fsubrl
ret
dec
jb
fstps
cmpb
or
fadd
sbb
mov
insl
movsl
pop
mov
ss
in
dec
dec
pop
add
mov
test
lret
mov
jmp
int3
faddl
hlt
aaa
sti
pop
xchg
cmp
inc
push
and
pop
sub
rcr
repnz
in
sahf
sbb
fsubs
rcrb
mov
dec
andb
fisttpl
outsb
pop
das
cltd
push
jns
jbe
cmpsl
pop
out
int3
lret
inc
mov
mov
add
mov
pop
js
xchg
lds
mov
sub
add
xchg
scas
cmpsb
pop
movsl
and
je
pop
jb
pop
mov
inc
mov
clc
mov
enter
jns
je
sub
out
repnz
lret
mov
push
pop
in
mov
mov
out
rep
fisttpl
adc
bound
sbbb
xor
and
int3
and
loop
addps
shrl
pop
sbb
fildl
xchg
cmpsb
mov
jge
roll
rcll
nop
lret
sbb
sti
test
pop
dec
outsb
imul
rcrb
add
xor
pop
fwait
arpl
cli
and
pop
push
cmp
jae
ljmp
adc
sub
and
adc
xor
pop
orl
cmp
out
jl
pusha
fidivrl
mov
jp
repz
es
shll
jbe
cmp
aas
filds
bound
jns
mov
xchg
adcl
mov
adc
pop
push
cwtl
push
jle
pop
test
jge
insl
int3
pop
ss
inc
push
fisttpl
leave
or
and
ret
mov
mov
test
jecxz
aas
add
pop
mov
cli
daa
dec
pop
add
in
xchg
pop
cmc
push
gs
je
ljmp
addr16
mov
addr16
insl
pop
sbb
pushf
mov
rcll
pop
sub
repz
mov
inc
mov
ficomps
pop
jmp
out
mov
pop
jns
cmovo
pop
lock
ss
mov
daa
lret
and
rcrl
mov
push
pop
mov
insl
fiadds
lods
adc
test
push
mov
dec
pop
in
cwtl
or
test
push
lret
daa
int
fstps
enter
pop
rcrl
mov
int3
pop
pop
mov
add
dec
cmpl
lock
mov
pop
mov
mov
inc
out
divb
ljmp
loop
cmp
rcl
scas
mov
pop
add
pop
testl
jl
mov
int
mov
enter
pop
mov
mov
stos
fildll
dec
lods
inc
sbb
outsl
sar
push
and
jl
pop
mov
xchg
adcb
negl
js
ss
push
adc
out
pop
int
xor
pop
adc
sarl
cmpb
sub
das
or
insb
loope
arpl
inc
pop
push
xor
inc
int
bound
dec
lret
pop
dec
ljmp
je
pop
std
pop
ficomps
or
xchg
sub
pop
int
gs
pop
mov
popa
sbb
or
nop
fistpll
jmp
xchg
pop
push
scas
arpl
inc
fcomi
pop
int
scas
fdecstp
add
adc
imul
pop
sbb
dec
mov
jl
pop
int3
push
ret
in
test
pop
orb
lret
push
mov
xacquire
rol
push
pop
mov
fmul
sbb
cli
pop
mov
push
insl
dec
add
test
pop
syscall
call
dec
pop
lods
cmpl
pop
push
sbb
mov
jmp
xchg
mov
pop
mov
mov
inc
sbb
mov
push
popa
pop
xchg
dec
pop
dec
pop
pop
pusha
push
add
pop
movsb
xchg
in
ja
mov
imul
mov
cli
fsts
adc
or
scas
or
jbe
fsubl
pop
test
inc
xor
pop
cld
aas
mov
push
das
pop
sbb
icebp
mov
test
enter
jmp
and
popa
push
shrl
loope
xchg
incb
xchg
push
stos
in
bndstx
lret
mov
mov
or
int3
scas
jns
push
sbb
push
sbb
std
adc
int
jp
sub
cli
imul
mov
or
test
mov
mov
clc
pop
insl
test
outsb
pop
or
sbb
xchg
out
pop
test
mov
pop
aas
and
dec
pop
push
clc
adc
pop
sub
mov
mov
push
out
push
adc
mov
iret
xchg
ficompl
xchg
dec
repz
jmp
aas
inc
imul
or
mov
sbb
pop
int3
push
sbb
outsl
adc
pop
sbb
in
dec
out
xchg
sbb
inc
icebp
outsb
sbb
roll
add
enter
mov
mov
pop
sbb
push
sub
sbbb
sbb
in
mov
sbb
fs
mov
sahf
pop
fildl
dec
imul
jecxz
or
sub
pop
cmp
adc
pop
pop
jns
mov
push
loop
dec
inc
pop
jmp
add
fcompl
ftst
inc
cwtl
adc
pop
outsb
inc
cli
jo
call
cltd
or
mov
aas
clc
jnp
inc
cmp
pop
test
jne
popf
ja
jno
stos
scas
mov
pop
dec
dec
cmp
js
pop
enter
or
loopne
dec
aam
cs
xchg
and
xor
push
nop
xchg
rcrl
pop
in
push
cmp
int
ret
dec
jle
pop
imul
fwait
scas
push
pop
adc
push
xchg
pop
jmp
bound
or
aam
dec
mov
repz
ret
pop
fidivrl
jl
push
das
scas
addr16
pop
adc
xor
hlt
notl
pop
ficomps
nop
pop
jo
mov
and
jle
mov
ficoml
das
js
fidivl
inc
pop
mov
mov
cmp
cmp
insb
jg
pop
movsl
fnstsw
leave
mov
testb
mov
xchg
push
sub
add
sbb
out
pop
jns
mov
imul
hlt
fidivrs
inc
mov
sbbb
dec
push
add
ret
dec
mov
int3
inc
imul
sub
mov
xlat
loope
push
pop
das
decl
lret
mov
inc
scas
imul
dec
pop
and
xchg
sbb
scas
inc
and
pop
xor
mov
pop
mov
sbb
pop
push
int
fisubl
pop
mov
insl
dec
aaa
mov
xchg
or
inc
data16
pop
mov
hlt
imul
rcl
sbb
xorb
je
sub
pop
loope
test
push
je
pop
jne
pop
dec
inc
popf
sbb
std
fdivrs
pop
aam
jl
das
out
insb
fsts
lahf
sbb
in
fmuls
xor
xorl
subl
mov
sbb
mov
lods
xchg
mov
loop
lds
jge
ret
mov
mov
arpl
and
dec
enter
xchg
pusha
add
mov
fldt
fstpt
jmp
and
sbb
mov
jo
mov
hlt
pop
sbb
pop
lock
outsb
es
nop
testb
pop
pop
out
in
cmp
cmp
inc
lahf
add
vshufps
inc
cmp
inc
popf
sub
idivb
pop
xor
fsub
cmp
push
or
cmp
sbb
jo
mov
test
or
fdivrl
mov
fisubrl
mov
loope
sbbl
jbe
das
pop
mov
or
cmpb
xor
in
sub
pop
clc
add
cmpsl
xchg
pop
mov
repz
insb
in
outsb
push
mov
jo
pop
or
pop
les
cwtl
pop
js
mov
setle
je
sub
inc
pop
aad
or
pop
es
cmp
pop
imul
and
push
int
xor
fstps
jmp
arpl
ja
jmp
enter
xchg
cmc
test
lods
mov
call
insl
pop
stc
add
or
lods
xor
cmc
shll
pop
scas
inc
lahf
mov
in
adc
cmp
cmp
push
jg
pop
jnp
mov
aaa
dec
jmp
popf
mov
add
aad
sub
subb
out
inc
jo
push
pop
inc
cmp
sbb
aad
mov
xor
stc
ret
pop
or
or
mov
je
pop
mov
jae
lahf
dec
mov
scas
pop
or
push
addr16
inc
jg
in
pop
and
pop
out
or
pusha
adc
stos
bound
pop
mov
add
dec
aam
jne
ret
sub
lret
leave
push
dec
in
int3
mov
fxch
pusha
les
fdivs
mov
or
adcl
add
pop
sti
adc
lock
push
inc
xor
aas
and
jecxz
xchg
xchg
cld
and
xor
pop
pop
aaa
fnstenv
inc
lds
xchg
int3
cmp
pushf
pop
leave
cmp
stc
cmp
adc
dec
fnstcw
shll
aaa
lahf
mov
lods
fst
cmp
jmp
add
call
push
js
pop
int3
popf
and
adc
push
pop
sbb
adc
stos
xor
movsb
cltd
xchg
lahf
push
mov
out
notl
ret
js
or
lock
stc
pop
imul
push
notb
outsl
mov
pop
cmp
sti
sub
inc
push
xchg
pop
cmp
xchg
push
fistps
mov
cmpsb
test
sub
inc
bt
xchg
out
pop
les
ret
push
fcoms
shr
popa
rep
cmp
xchg
arpl
jb
cli
ror
sti
push
cmp
roll
ds
xor
pop
je
push
pusha
jp
sub
xor
into
dec
sbb
pop
iret
fnstenv
test
jb
fidivl
mov
loope
stos
mov
or
pushf
cmpb
pop
xlat
fdivl
mov
adc
dec
sbb
std
xorb
out
inc
call
lods
pop
shll
aaa
mov
sub
lcall
pop
cmpsl
rorl
popa
sbb
mov
push
cmp
and
lret
pop
loop
fs
inc
dec
test
or
mov
mov
jns
adc
push
pop
aad
movsb
mov
pop
popf
push
push
pop
sbb
cmpsb
mov
shrl
push
add
add
push
push
into
sub
xor
ljmp
pop
mov
imul
pop
mov
dec
xchg
dec
test
lds
lahf
mov
out
adc
pop
inc
push
and
insb
aad
pop
out
mov
pusha
pop
sbb
int3
rcrl
xchg
jbe
mov
movsl
sub
inc
xchg
jno
add
les
fwait
pop
pusha
movsb
lahf
jb
decb
pop
jp
jae
pop
ss
loop
leave
int3
adc
sub
push
test
mov
ljmp
fs
dec
in
mov
and
addps
push
xchg
addb
out
pop
pop
out
pop
jnp
adc
ljmp
mov
push
es
out
repnz
dec
test
pop
pusha
mov
lahf
mov
loope
ficompl
mov
jecxz
jl
adc
not
rcrb
lock
ss
jecxz
inc
or
insl
out
dec
enter
aas
add
fstps
mov
fldt
cmp
jecxz
pop
push
repnz
mov
fistps
aad
mov
mov
mov
mov
inc
sub
sbb
vaddps
jbe
xor
and
push
mov
sbb
dec
or
xor
xchg
mov
les
mov
xor
pop
ja
out
notl
daa
popf
lahf
adc
add
fsubrs
in
add
inc
pop
mov
add
inc
pop
inc
jb
and
fsts
sub
lret
or
xor
push
sbb
and
imul
mov
xor
fisttpl
das
xchg
inc
rcrb
scas
mov
icebp
cli
fstpt
jnp
mov
mov
push
hlt
ds
jg
push
sbb
push
mov
lahf
stos
xchg
add
jecxz
xchg
int
mov
jns
bound
daa
cmpsb
sub
addps
and
push
je
pop
add
jnp
sbb
lret
pop
or
int3
adc
ljmp
sub
add
fcompl
ja
test
inc
xchg
adc
fwait
and
add
out
push
mov
lods
adc
pop
mov
call
inc
and
dec
filds
pop
ljmp
inc
rcrl
lcall
jae
fistps
pop
or
fiaddl
mov
sbb
lds
pop
fistpl
sahf
jbe
fisttpll
push
popa
stc
jecxz
into
ret
dec
cwtl
mov
adc
imul
lds
ficompl
sahf
sbb
out
stos
add
in
pop
leave
retw
add
jg
and
jp
xchg
dec
int
test
push
test
and
inc
sbb
pop
xchg
je
mov
add
pop
pop
movsl
mov
jb
mov
pop
mov
andb
stos
cmpl
inc
jge
je
fs
push
shl
call
push
cmp
cmp
test
mov
pop
jge
mov
sbb
pop
add
dec
and
pop
cld
cmp
or
adc
dec
daa
sub
sub
movsl
push
int
aaa
pop
in
mov
push
adc
dec
std
xchg
pop
arpl
add
sahf
jb
movsb
aaa
in
mov
lret
std
jnp
scas
fnstcw
mov
jbe
insl
lret
jb
xchg
in
std
and
cmp
mov
add
js
pop
add
fldt
cltd
inc
imul
push
leave
fsts
jns
pop
pop
les
sub
and
scas
mov
mov
jp
pop
popf
push
cmpsb
aas
je
fwait
and
fcompl
cmpl
cmp
iret
and
in
mov
rorb
mov
cmp
stos
add
fs
pop
loopne
cmc
pusha
movl
adc
mov
jl
xchg
mov
mov
ficoml
push
pop
pop
and
or
cmp
jb
pop
push
or
fsubs
sbb
adc
pop
out
mov
push
sbbl
xor
mov
mov
mov
and
or
or
jb
pop
aam
stos
mov
movsl
xchg
xchg
mov
out
pusha
mov
fmull
pop
int
inc
bound
push
inc
fcomi
pop
and
lods
push
lea
stos
mov
mov
pop
cmp
jmp
xchg
lret
fildl
loope
pop
push
jne
add
int
lods
dec
dec
pop
add
insl
movsl
sbb
mov
sbb
sub
mov
fdivrs
push
dec
and
sbb
sarl
hlt
lret
std
pop
bound
outsb
jns
mov
in
xchg
inc
mov
pop
movsl
arpl
jo
xchg
out
or
in
in
sub
bound
cmc
jb
push
rcrl
sahf
cmp
stc
pop
lcall
hlt
push
lea
aad
cltd
stc
mov
call
jbe
lds
out
adc
push
rorl
pop
lds
outsb
loop
mov
xor
pushf
pop
arpl
push
inc
call
pusha
int3
fcompl
adc
addr16
mov
add
or
pop
cmp
xchg
mov
inc
leave
or
mov
cli
pop
dec
mov
inc
cmp
jecxz
add
scas
dec
fisttpl
jo
add
push
out
push
fidivl
int
inc
in
pop
push
sbb
sbb
addr16
pop
hlt
pop
pop
xchg
mov
push
pop
jns
cmpsb
xor
je
fwait
sbb
mov
pop
gs
dec
fnstsw
mov
enter
lahf
sub
xchg
mov
pusha
divl
jbe
js
ret
mov
fisttps
sahf
pop
shrb
pop
add
jb
inc
lcall
je
loope
pop
fistpl
mov
pop
jle
test
ret
aaa
aad
adcb
int
xor
clc
adc
mov
pushf
outsb
cmp
cmc
inc
dec
shrl
int3
jae
pop
insl
cld
ljmpw
add
int
test
clc
dec
pop
sahf
or
incb
dec
sub
mov
call
adc
cli
pop
inc
pop
ja
inc
es
mov
sub
push
sub
pop
jo
and
or
dec
movsl
pop
pop
xlat
xor
in
sbb
ss
cmpb
setne
pop
sub
call
push
js
push
aam
inc
mov
sbb
xor
movsl
ja
stos
pop
in
cwtl
mov
pop
mov
add
in
mov
add
jmp
mov
inc
jl
sbb
cmpsb
repnz
cltd
lea
jb
int
xchg
out
sbb
mov
sbb
and
sbb
jp
fsubrs
mov
aad
or
stc
bound
add
mov
mov
and
push
in
leave
push
int
shl
mov
dec
mov
pop
in
mov
pop
inc
xchg
add
mov
xchg
pop
das
sbb
adc
cmpsl
pop
orl
jmp
imul
pop
xchg
int3
jo
bound
hlt
test
adc
les
mov
orb
neg
adc
divl
push
dec
fucomi
lret
fdivr
sbb
mov
sbb
xlat
shrl
fistpll
dec
mov
dec
mov
iret
mov
sub
add
pop
mov
dec
inc
std
lret
add
aad
shrl
div
adc
and
adc
add
test
cmpsb
and
mov
sbb
fidivs
insb
and
icebp
pop
lods
and
dec
pop
add
in
jne
cmpsl
mov
lcall
mov
add
fcoml
pop
fs
mov
xor
or
pop
fsubl
mov
fcoms
pop
jns
mov
lahf
sahf
push
pop
inc
fstpt
out
mov
pushf
scas
arpl
mov
ret
inc
jg
scas
jne
jae
shlb
mov
pop
cli
pop
inc
push
or
iret
dec
inc
pop
mov
outsl
jecxz
mov
adc
inc
pop
aas
in
pop
xchg
mov
or
mov
pop
jp
ror
out
mov
pop
dec
pop
cmp
frstor
mov
mov
into
adc
sub
je
mov
pop
adc
dec
dec
test
cltd
bound
and
fwait
jg
popa
fistpl
pop
fdivrs
in
pop
or
sbb
xor
pop
mov
or
ja
mov
movsb
inc
pushf
fistpll
or
pusha
xchg
cmp
out
mov
push
lds
push
rorl
pop
sub
and
addr16
pop
stos
cwtl
sbb
pop
push
push
cmpb
fmul
test
pop
xchg
sbb
jo
rcrl
inc
imul
fwait
mov
faddl
cmp
push
sub
jmp
sub
dec
jbe
pop
fsts
pop
jle
cli
pop
adc
add
or
sti
sub
mov
lock
shll
aaa
jl
cmpsb
popf
out
mov
jmp
test
or
pop
xor
and
mov
frstor
loope
scas
ret
or
fmuls
dec
enter
pop
jno
ret
aas
mov
lods
in
test
ret
lods
pop
or
into
dec
or
iret
movsb
insb
dec
int
cltd
scas
mov
ljmp
sub
adc
dec
popf
popa
pop
jb
cmp
push
in
loope
cmc
shlb
push
jp
fwait
stos
adc
inc
popa
inc
pop
jp
mov
pop
call
leave
or
pop
push
je
cmp
dec
xorl
arpl
fsubrl
int
cmp
repnz
mov
sub
decb
add
xchg
pop
push
pop
mov
js
dec
aam
push
scas
repz
shll
mov
sub
cs
sub
pop
jp
insb
mov
jo
mov
dec
xchg
jae
sar
pop
jecxz
jecxz
jle
ss
cs
cmp
pop
jbe
rcrl
pop
stos
pop
or
cmp
lock
cmpsb
popa
das
inc
mov
js
stos
aaa
mov
scas
or
add
fld
xor
xchg
sbb
push
jmp
dec
xor
pop
aad
mov
sub
in
imull
les
jb
scas
inc
pop
stc
xchg
mov
je
xlat
xchg
pop
cli
mov
xchg
xchg
rorb
out
inc
dec
nop
lahf
pushf
dec
sahf
adc
test
adc
shl
pop
jle
ljmp
cs
mov
lret
ss
lods
insb
pop
sbb
mov
repz
inc
outsb
mov
dec
pop
aad
push
sti
mov
push
out
pop
ret
into
xchg
inc
inc
jbe
add
jne
or
sub
inc
xchg
mov
jb
mov
ffree
push
jo
int
testl
lahf
popa
std
xor
pop
jecxz
jbe
repnz
pop
dec
inc
inc
call
rcrl
lret
loope
test
pop
sub
addr16
xor
xchg
inc
push
sahf
daa
dec
int3
xchg
test
pop
pop
int
hlt
pop
inc
sub
fisubl
mov
imul
aad
inc
sub
pop
push
ret
or
stos
cmp
jecxz
and
int
lcall
je
push
pop
jb
sbb
sub
cwtl
aam
mov
xchg
cmp
in
fcmovnu
add
fadd
je
lcall
push
mov
inc
js
jns
inc
fcoml
mov
mov
imul
pop
add
std
ror
inc
push
lods
pop
jne
push
inc
out
jno
mov
clc
lcall
int
jl
jge
sbb
lret
xlat
nopl
jns
mov
movsl
sbb
nop
dec
test
or
pop
mov
adc
cmp
and
push
sub
ds
mov
sbb
jbe
xchg
popa
sti
fnsave
pop
adcl
xchg
fs
and
data16
jl
int
pop
pop
push
xchg
jnp
sbb
ljmp
jl
es
push
mov
xor
mov
test
push
mov
stc
sub
xor
pop
pop
push
xchg
xor
xlat
loopne
mov
jnp
sub
mov
addr16
pop
lahf
int3
cmp
adc
sbbl
fistpl
stos
fbld
dec
mov
jl
aad
xchg
add
cmp
mov
mov
adc
xchg
sub
mov
pop
mov
dec
test
insl
pop
fcomps
aam
inc
fnstenv
rorb
movsb
insl
sub
add
cmp
lds
pop
repz
adc
arpl
stc
or
add
or
sub
inc
scas
jne
add
dec
ret
mov
jg
js
pop
divps
push
loopne
lahf
std
or
xchg
pop
push
mov
inc
xchg
inc
addb
fisubl
jno
cld
mov
push
pop
movups
lods
or
pop
pop
je
fwait
mov
mov
push
mov
adc
fsts
jle
movsb
add
xchg
mov
cmp
std
or
sbb
mov
sarb
jl
xor
jno
lods
pop
cmp
add
rorb
push
push
cltd
jae
xor
mov
ficompl
aas
scas
inc
push
xchg
mov
leave
pop
pop
std
lret
lods
dec
mov
cwtl
jp
aam
and
jbe
pop
mov
mov
pop
fwait
inc
xchg
pop
data16
push
pand
pop
mov
hlt
popl
xchg
lahf
pop
sub
cmp
nop
pop
rorw
xchg
pop
jnp
jp
pop
xor
mov
lahf
cmp
add
push
ret
lcall
jmp
fidivrs
pop
int
mov
leave
aad
data16
pop
scas
movsb
mov
dec
sbb
pop
push
lds
jb
int3
cld
pop
scas
xor
rcrb
cmp
cmp
sbb
push
sahf
xchg
add
sub
pop
mov
pop
ret
lret
pop
idivb
int3
insl
mov
pop
gs
ficoms
stc
inc
mov
jmp
pop
inc
jbe
pop
push
cmp
frstor
jecxz
stos
dec
pop
xor
in
push
jmp
shll
mov
sub
addr16
xchg
jmp
pop
icebp
mov
inc
dec
dec
jne
jo
pop
test
nop
cmpsl
push
pop
mov
mov
or
rcrl
dec
sub
daa
std
adc
cli
push
lea
in
xchg
jb
lods
test
lcall
adc
mov
sub
push
jmp
dec
adc
imul
and
xchg
sub
int
pop
scas
pushf
ja
cmc
inc
lds
xchg
xchg
shll
mov
dec
xchg
das
ret
dec
inc
pop
mov
jno
push
jb
cmc
pop
fs
fldt
fldenv
jmp
xor
int3
lds
pop
int
dec
fdiv
mov
mov
stos
mov
and
push
mov
dec
cmp
push
jbe
adc
adc
out
dec
xor
or
popa
jb
xchg
test
call
lcall
and
into
fisttpl
pop
sbbb
clc
pop
movsl
ss
std
not
ficompl
xchg
daa
data16
cmp
fs
add
push
and
xchg
pop
or
into
cwtl
mov
mov
daa
lret
pop
jns
bound
pop
sub
shrb
push
gs
pop
int
pushf
push
inc
jecxz
mul
pop
clc
cmpsl
inc
jle
movsb
dec
lcall
inc
dec
mov
test
pop
pop
insb
scas
fadds
cli
loope
pop
jbe
push
ljmp
add
mov
adc
xchg
arpl
xor
and
pop
jg
jmp
je
fidivs
add
dec
fs
imul
int3
adc
cmp
dec
es
pop
dec
insl
imul
and
lods
dec
inc
sub
lds
hlt
pushf
xor
sub
cs
inc
xchg
mov
jo
xchg
lea
lods
pop
adc
xchg
lret
int
sbb
adc
xchg
mov
in
mov
pop
add
shlb
fldt
mov
add
pop
xchg
stc
lret
pop
sub
gs
lea
and
mov
mov
cmp
ds
xchg
push
mov
add
int
pop
hlt
ret
sub
push
jge
or
add
lret
popf
dec
inc
rcrb
in
nop
dec
rorl
mov
mov
test
mov
push
test
lods
outsl
push
jo
mov
stos
jecxz
test
mov
in
cmp
sti
ret
mov
insb
out
mov
push
inc
outsl
pop
mov
add
and
fildll
jmp
jbe
outsl
mov
pop
jle
testb
ss
pop
fucomp
xchg
orl
xchg
dec
pop
int
loopne
insl
push
pop
enter
or
sbb
lcall
jmp
loopne
adc
jmp
fcomps
xor
pop
ret
inc
insl
fwait
in
and
pop
in
sbb
popa
addr16
loopne
sub
cs
pop
mov
ja
pop
mov
jns
bound
sbb
jno
mov
je
or
jae
pop
test
cld
hlt
into
xor
pop
push
aad
int
sub
pop
adc
add
jbe
xor
mov
clc
pop
leave
shld
cmp
xchg
mov
scas
in
and
cmc
out
mov
insb
cmpsb
xchg
dec
orl
xor
pop
jle
jmp
pop
pop
xor
mov
stc
mov
movsb
cmp
sbb
jp
pop
fwait
leave
inc
mov
add
popa
and
fwait
imul
mov
clc
fs
add
sub
cmp
lcall
jb
or
mov
cmp
loope
int
adc
mov
push
dec
xor
push
mov
aaa
pop
xchg
int
add
xchg
addb
leave
rol
out
pop
push
outsl
mov
pop
xlat
movsl
test
cmp
stos
jbe
ja
dec
mov
enter
sub
jp
mov
xchg
mov
sbb
out
outsl
jnp
pop
jnp
jecxz
lock
fs
pop
lcall
jbe
lcall
mov
adc
les
movsb
loope
cltd
push
pop
nop
mov
xor
pop
mov
shl
in
pop
fs
cmp
fptan
pop
mov
mov
popf
jb
push
pop
repz
cli
dec
mov
pop
pop
cwtl
scas
cmp
cmpsl
xchg
pop
clc
repz
mov
stos
xchg
pop
jecxz
mov
jae
push
pop
arpl
imul
sti
clc
dec
jb
jecxz
pop
mov
movsb
mov
mov
pop
sbb
in
and
jg
xchg
sub
mov
pop
js
xchg
inc
dec
pop
cmp
stos
out
xlat
sbb
pop
int3
fnop
subb
stos
mov
pop
lds
std
inc
sbb
mov
fdivrs
and
cmpsl
pop
xchg
inc
push
xor
incl
cmp
xchg
shll
pop
xlat
push
scas
jae
pop
pop
xchg
adc
stc
repz
popa
pop
cmp
and
shr
lcall
xchg
test
jl
test
pop
pop
push
inc
ljmp
imul
jle
out
cwtl
pop
mov
shrl
sti
mov
fsubrl
lret
mov
inc
fstpl
jbe
aas
mov
std
mov
and
sbb
fstp
lret
mov
iret
es
sti
pop
push
jae
js
inc
or
mov
call
fstpt
sub
add
neg
xchg
jp
jge
sub
in
pop
jbe
lret
jbe
xor
xlat
push
jl
outsl
repnz
fst
movsb
mov
ljmp
pop
mov
sbb
mov
ret
mov
pop
repnz
inc
lock
lret
negl
mov
mov
mov
enter
sbb
xchg
out
or
mov
ja
xchg
scas
mov
jecxz
pop
pop
pop
hlt
push
test
jp
pop
rcr
int3
dec
out
or
ret
inc
cmp
pop
sbb
ljmp
mov
cmpsl
ret
or
lods
out
lret
pop
mov
cmp
push
xchg
push
add
fists
loopne
pop
inc
mov
jbe
repz
dec
fldcw
push
cmp
pop
bound
mov
inc
into
popf
aam
pop
arpl
inc
pop
aad
xor
shrl
cmc
test
pop
fdivl
pop
sbb
pop
in
fiadds
pop
or
jo
mov
addr16
jg
pop
lcall
pop
test
xchg
mov
sbb
popf
xchg
jl
addps
dec
in
pop
cmp
movsl
fcompl
cmp
sbb
insb
push
adc
test
test
pop
sbb
and
push
mov
sbb
xor
sub
pop
scas
sbb
inc
pop
push
and
cmpsl
adc
pop
mov
sub
pop
orl
nop
xchg
sbbb
adc
bound
or
popl
or
mov
es
xchg
enter
clc
inc
cmp
or
push
sub
inc
xchg
push
pop
sbb
fdiv
mov
mov
mov
and
push
mov
mov
lea
cli
xchg
lret
dec
bound
mov
pop
in
pop
icebp
mov
stc
add
xchg
dec
jl
in
push
lret
add
pop
push
pop
jo
nop
and
divl
in
out
xor
das
or
int
movl
push
adc
negw
mov
dec
jb
scas
ret
cwtl
shlb
loope
mov
pop
inc
clc
push
mov
mov
and
jg
jl
mov
cmp
pop
xor
sbb
mov
call
stos
rcrl
into
jbe
pop
jns
mov
jmp
scas
addr16
xchg
add
pop
int
cmp
inc
cwtl
ret
jno
or
mov
movsb
push
cmp
sbb
iret
pop
or
outsb
adc
cmp
std
pop
mov
repz
in
xor
pop
lock
arpl
int
cltd
and
fs
js
jge
sbb
xor
xchg
or
out
insl
sbb
jg
push
push
and
dec
cwtl
sub
imul
xchg
mov
xor
push
mov
mov
jmp
fmuls
dec
pop
jle
fwait
push
loop
jb
pop
or
inc
dec
addr16
pop
or
leave
jo
lcall
fs
push
test
push
pop
int3
lods
movsl
pop
rcrb
mov
mov
std
fwait
sub
mov
outsb
jbe
dec
add
mov
ljmp
in
push
aad
mov
adc
lea
and
pop
ror
add
cmpb
push
jns
fimull
mov
xor
lahf
push
mov
fisttpl
scas
jp
pop
shrb
dec
push
ret
or
nop
xor
pop
repz
xchg
and
jl
pop
lods
aam
in
jmp
push
shlb
dec
adc
bound
cld
cmpsl
pop
scas
cmp
test
fs
xor
pop
push
jo
mov
dec
push
rcr
jo
out
pop
push
sub
incl
xor
outsb
xor
pop
icebp
sbb
out
fldcw
or
pop
push
lcall
pop
and
xor
add
lahf
pop
int3
fildll
outsl
movsl
aaa
int
mov
loop
inc
adc
dec
sub
mov
push
jb
pop
sub
cmp
pop
mov
ror
lcall
jl
daa
lds
pop
or
fistl
ficompl
jecxz
push
push
test
mov
inc
jbe
xor
pushf
mov
fs
fsubrl
in
iret
pop
lahf
mov
cmpsb
pop
movsb
sub
or
or
aaa
leave
pop
push
pop
int
popa
xor
jecxz
mov
imul
cmpsb
pop
sarb
xchg
loopne
dec
ficomps
test
test
pop
aaa
dec
xchg
dec
push
and
push
shr
lods
inc
pop
sbb
lea
mov
pop
aas
insb
int
pop
sbb
pop
mov
sub
mov
inc
fimull
push
add
xorb
out
push
pop
outsb
xlat
shl
ror
pop
adc
xchg
les
cmc
cmp
pushf
xor
in
arpl
out
adc
mov
shlb
scas
sbb
mov
pop
fsubl
ljmp
and
scas
pop
mov
sbb
sarl
fiaddl
lea
fisubs
mov
sub
clc
imul
mov
rcrb
pop
dec
xchg
dec
std
cmp
enter
mov
dec
pop
outsb
pop
ror
mov
and
pop
or
lea
pop
adc
out
int
arpl
inc
mov
add
xor
pop
stos
fimull
jae,pn
in
adc
and
mov
psubsb
cs
pop
ja
fbld
pop
pusha
ds
adc
movsb
xlat
jg
fs
mov
loop
xchg
add
ret
sub
std
xchg
xor
push
stc
push
and
pop
jb
sbb
les
lods
lahf
mov
dec
int
es
aam
sbb
ss
lods
sbb
jo
test
popa
stc
pushf
fimull
jecxz
ja
pop
movsl
ret
test
mov
hlt
subb
in
pop
addr16
xor
mov
lds
add
stos
fsts
lahf
std
mov
in
jo
pop
shll
mov
sub
shrl
jl
pop
xchg
mov
dec
or
mov
sbbb
fs
xlat
adc
imul
movsb
pushf
dec
lock
inc
lea
pop
icebp
fsub
out
or
jmp
mov
inc
stos
pop
cmp
mov
cmpsl
dec
pop
mov
mov
sar
jge
pop
jbe
xor
push
cmp
mov
aaa
mov
pop
mov
or
pop
cmp
jne
loopne
push
pop
in
outsl
cmp
cmpsl
mov
negb
clc
aas
inc
ficomps
push
push
jns
dec
cvtps2pd
dec
fildll
cltd
bound
pop
pop
adc
pop
cmp
push
fsubs
mov
movsl
jb
cmp
mov
inc
push
pop
jl
gs
sahf
popf
xor
cltd
pop
jecxz
mov
pop
and
ljmp
add
pop
dec
imul
pop
xor
mov
repnz
in
or
mov
or
xchg
add
pop
pop
aad
sbb
cld
or
fadds
sub
sub
out
mov
les
add
fs
pop
fwait
sar
pop
inc
cld
dec
out
pop
xchg
repz
or
ljmp
mov
cmc
pop
popa
and
adc
sti
aam
out
push
sbb
cmp
pop
ror
mov
repz
xchg
inc
into
pop
xchg
mov
dec
lods
stc
bound
or
lds
cltd
mov
pop
dec
mov
dec
jmp
out
mov
enter
dec
sbbb
test
dec
mov
int
mul
cmp
sbb
xchg
int3
mov
dec
inc
adc
fcmovb
push
mov
aad
inc
mov
xor
ret
fidivl
pop
or
and
xchg
ljmp
out
jo
mov
push
gs
mov
fnsave
pop
adc
popf
arpl
ljmp
cwtl
push
cmp
mov
push
loop
xchg
nop
pop
mov
or
aad
inc
lcall
mov
add
stos
adc
dec
sub
nop
cmp
dec
cmp
jl
add
mov
fisttpll
pop
int
xchg
ss
inc
push
imul
ja,pt
mov
mov
adc
int3
and
pop
jmpw
sub
push
mov
cld
fcmovne
push
in
cli
pop
mov
or
sbb
pop
add
adc
inc
leave
jge
and
pop
divl
mov
fisttps
push
and
je
rcrl
and
mov
cmp
jo
push
jbe
imul
std
sub
dec
js
pop
sbb
xchg
lods
movsl
insb
pop
enter
xor
xor
sub
sbb
jmp
mov
icebp
cwtl
repz
mov
stos
pop
xchg
insl
jecxz
outsb
cmp
jecxz
xor
push
mov
repz
stos
imul
test
mov
or
out
fcmovnbe
cs
push
scas
sub
shl
ds
mov
fiaddl
sbb
add
dec
xchg
xchg
je
pop
jecxz
pusha
movsl
mov
pop
ficompl
or
or
sbb
lods
mov
incb
or
pop
pop
adc
sub
int3
dec
mov
xchg
movsb
mov
fidivl
js
pop
push
mov
pop
pop
xor
push
push
rcrb
test
cwtl
sbb
int
sahf
negb
cmp
lods
in
sbb
push
adc
push
movsb
pop
out
push
pop
movsl
dec
push
jae
push
pop
outsb
jmp
mov
add
dec
pop
and
adc
fisttpl
cmpsb
sub
fcoms
in
leave
dec
sbb
test
xchg
shll
cmpb
jl
pop
scas
jbe
int3
mov
mov
in
xchg
mov
pop
inc
dec
enter
data16
int
aad
bound
rcll
fndisi(8087
mov
sbb
mov
sbb
fdivs
pop
mov
push
dec
incl
lods
pop
addr16
ret
pushf
lds
or
and
out
cmpsl
pop
mov
loop
int
mov
xor
ljmp
rorb
xchg
pop
pushf
xchg
pop
fstp
mov
mov
shl
cli
aam
lods
fiaddl
add
lret
pop
mov
scas
clc
or
or
jle
fs
mov
mov
stos
mov
xchg
push
std
xor
popf
test
testb
sub
pop
pop
sbb
xchg
fs
scas
movsb
arpl
das
pop
dec
pop
fwait
add
test
mov
mov
and
in
dec
in
dec
jge
les
mov
xchg
mov
jbe
cmp
insl
ss
call
cltd
inc
outsb
add
pop
js
scas
or
mull
mov
xchg
pop
je
bound
ret
push
int3
or
ja
push
mov
hlt
pop
icebp
dec
mov
adc
add
or
mov
fcmovnu
jo
or
pop
inc
ja
aaa
push
ret
neg
lahf
pop
pop
jne
test
icebp
pop
push
pop
xchg
mov
pop
jae
mov
loope
data16
xchg
pushf
sbb
cwtl
rcll
pop
push
mov
mov
stos
test
mov
aas
fldl
xchg
insl
leave
in
pop
lock
dec
dec
lods
pop
dec
mov
out
pop
mov
pop
fsubl
inc
dec
js
mov
je
lock
addl
pop
fpatan
cmp
pop
mov
jno
add
xor
ss
pop
enter
sbb
incb
push
mov
pop
lock
pop
xor
xchg
outsl
pop
jne
cmc
dec
dec
pusha
push
adc
les
and
adc
push
pusha
jge
int3
and
test
and
lds
mov
push
fmul
xchg
mov
mov
cmp
cmpsb
fnsave
lods
sbb
hlt
sub
sbb
jge
cwtl
sti
sub
fcompl
in
jno
sub
push
add
sbb
fdivs
cli
int3
lods
push
push
and
push
pop
add
xchg
pop
into
loop
es
ja
pop
sbb
sti
inc
inc
adc
mov
dec
cmp
mov
fsubrs
pop
aas
inc
in
add
xchg
pop
imul
and
lahf
rcll
fdivs
mov
pop
mov
orb
xchg
push
in
inc
call
mov
divl
pushf
or
lahf
sbbb
sbb
mov
push
xchg
popf
js
mov
inc
cltd
xchg
out
add
fsub
insb
push
test
pop
add
sub
leave
sub
lcall
jo
mov
imul
inc
lds
dec
lods
fcom
cmc
mov
mov
mov
fwait
sub
stos
jp
push
ficoml
int3
pop
dec
pushf
into
popa
repnz
adc
js
mov
jne
mov
jmp
mov
xor
cmpsb
call
dec
in
pop
aas
pushf
ror
jg
out
pop
pop
stos
or
pop
pop
in
and
mov
mov
mov
es
pop
mov
popf
pop
or
arpl
mov
sub
inc
ljmp
mov
stos
adc
xor
sub
repz
mov
push
pop
int
sub
stc
lcall
jbe
sahf
mov
out
pop
mov
sbb
push
or
fwait
inc
mov
adc
pop
push
push
mov
cs
dec
lods
jns
scas
cmc
addb
xor
mov
mov
xor
sub
pop
std
shll
xchg
inc
add
in
in
lods
int
shrl
fnstsw
mov
cmp
cltd
lea
mov
pushf
inc
loope
xchg
lahf
cltd
jo
int
cmp
pop
fcomp
pop
lret
xor
sbb
or
fidivs
adc
arpl
inc
mov
dec
fistpll
scas
mov
or
jns
adc
push
mov
stc
flds
in
sub
xchg
sub
pop
jb
popf
std
lods
enter
out
movsb
jle
stos
adc
pop
xchg
push
ficomps
mov
aad
outsb
jg
or
pop
mov
dec
dec
int3
pop
clc
lock
pop
and
fwait
mov
fdivs
stos
and
inc
pop
pop
fucomi
xlat
fcomps
inc
cmp
mov
mov
pop
pop
fcoml
push
pop
cmp
jecxz
inc
mov
imul
inc
int3
ja
test
dec
or
jnp
pop
mov
mov
mov
mov
ds
scas
aad
dec
sub
sbb
negl
stos
dec
lds
mov
data16
cmp
mov
jno
or
pop
mov
push
rcrl
inc
add
fldz
pop
test
adc
movsb
cmc
sahf
add
xor
fs
pop
mov
mov
aaa
pop
adc
or
fisubrs
fisubrl
pop
mov
addl
jo
movsb
fmuls
repz
pop
pop
cmpsb
and
lahf
xchg
push
cmp
cmc
pop
pop
xchg
arpl
xor
test
rcrl
jle
shll
nop
push
cmp
pop
dec
stos
adc
xlat
int
push
mov
ret
mov
jecxz
mov
les
fprem1
enter
adc
push
pop
jne
dec
in
pop
int
cmp
call
mov
mov
aas
movsl
psubusw
jo
aaa
imul
pop
cmp
add
mov
sbb
test
movsb
pop
cmp
in
adc
int
out
sub
fildl
jecxz
les
pop
inc
shl
push
lea
pop
test
int
fldt
rorl
repz
inc
pop
int3
mov
pop
mov
ficomps
mov
lods
ja
push
mov
inc
jmp
push
sar
lods
xchg
mov
inc
into
jecxz
xor
pop
mov
clc
aas
lods
push
add
cmpl
pop
xchg
jno
bound
mov
pop
pop
repnz
das
pop
xchg
inc
mov
adc
int
lea
xor
push
cmpsb
movsl
cmp
aam
addr16
rcrl
ds
push
xchg
mov
decb
ficompl
jle
pop
mov
lret
pop
sbb
lods
xchg
pushf
aas
pop
in
mov
push
ds
insl
add
cwtl
hlt
sub
stos
cmp
sbb
cmp
pop
sbb
or
scas
push
into
or
cltd
xor
shr
nop
mov
xor
idivl
mov
pop
out
insl
lods
loopne
inc
pop
fbld
movsb
mov
scas
aam
std
mov
mov
cltd
test
mov
out
add
pop
pop
lods
xor
fwait
or
andl
pop
nop
adc
xlat
push
test
int3
inc
popa
pop
shl
jge
nop
stos
in
dec
aaa
pop
xor
xor
pushf
cmp
pop
mov
mov
pop
dec
jae
lret
add
or
mov
mov
cld
insb
lret
sub
std
in
xchg
inc
inc
xchg
pop
addl
ja
lahf
adc
cmp
pop
scas
cmp
fbstp
push
rcr
mov
mov
jo
pop
fs
and
pop
cmp
xchg
filds
stos
pop
stc
pop
add
mov
std
lret
bound
scas
das
cltd
adc
jl
cltd
fdivl
mov
sbb
xchg
sub
mov
cmp
fidivrl
pop
push
fcompl
iret
inc
jns
lea
mov
sbb
jbe
imul
in
pop
scas
xchg
je
dec
cmpsl
gs
scas
mov
repnz
sbb
add
mov
call
inc
push
scas
pop
outsl
mov
in
cmp
pop
es
fdivrl
negb
nop
pop
cmp
or
cmova
cmp
pop
bound
aad
mov
int
dec
xchg
test
pop
sub
js
pop
test
xchg
pop
push
call
cmp
or
dec
aaa
cmp
cmpsb
mov
push
adc
icebp
mov
punpcklbw
fwait
mov
add
js
mov
out
iret
sbb
icebp
out
fstpl
leave
lret
jae
hlt
pop
out
loope
jbe
cmpsb
or
jp
in
pop
push
cmc
ds
pop
pop
cli
lock
fstl
pushf
lahf
pop
cmp
jbe
mov
dec
sti
mov
lods
addb
ljmp
sbb
cmp
ret
jns
pop
mov
add
jno,pn
mov
or
xchg
mov
fildl
jmp
cs
popf
pushf
xchg
repz
mov
inc
xchg
addps
add
mov
push
or
or
mov
inc
scas
cmp
aad
mov
dec
fstpl
jecxz
sbb
idivl
mov
cmp
cmp
inc
pop
jne
mov
dec
xor
adc
push
push
outsb
scas
and
jg
xor
or
jecxz
js
xlat
test
mov
push
cmp
outsl
flds
pusha
int3
jp
test
mov
outsb
fistps
xchg
pop
jb
scas
push
lret
mov
sub
cltd
popf
mov
ja
inc
scas
mov
hlt
adc
les
pop
sub
fxam
dec
fstpl
lcall
pop
mov
jge
ss
out
addb
test
jp
mov
mov
rorb
hlt
bound
pop
dec
or
call
dec
pop
int3
fisubrl
pop
iret
push
fwait
nop
dec
xchg
popf
popa
daa
scas
xlat
fmuls
addr16
pop
out
adc
outsl
push
mov
fcomi
dec
sbb
dec
jle
push
mov
inc
lds
movsl
inc
pop
arpl
sub
cmp
ret
inc
add
sbbl
mov
lds
jno
popa
pop
imul
out
in
xchg
mov
or
mov
pushf
mov
rcrb
add
jmp
mov
ljmp
int
mov
lods
pop
outsl
and
mov
int3
jle
fmull
rcrb
pop
hlt
popf
push
and
data16
cltd
dec
das
dec
test
repnz
scas
stc
mov
pop
iret
mov
mov
int
loope
jmp
jnp
aaa
mov
icebp
cltd
fists
fadd
sub
add
jp
sti
sbb
jbe
pop
fldt
test
imul
int
pusha
mov
mov
pop
adc
gs
push
sbb
loop
cmp
rcrb
pop
push
mov
mov
pop
ljmp
and
push
sub
dec
cmp
jns
int
clc
mov
and
sub
cltd
aas
pop
in
mov
sbb
lret
js
aam
pop
mov
or
lea
jns
mov
fiaddl
sub
scas
xchg
mov
pop
out
jb
and
lahf
les
jge
xor
sbb
dec
scas
fidivrs
xchg
rcrb
pop
pop
jb
ljmp
aas
jae
jbe
addr16
mov
cmp
clc
int3
add
in
cmp
leave
mov
cmp
adc
or
xchg
add
cmp
xor
push
jmp
jle
push
mov
lret
mov
xchg
repnz
pop
mov
mov
push
cmc
jnp
scas
dec
xor
pop
hlt
xor
enter
pop
dec
mov
adc
leave
mov
nop
or
ret
sbb
int
xor
mov
mov
inc
pop
shl
int
mov
mov
faddl
adc
sub
dec
add
pop
mov
jmp
cltd
sub
out
dec
mov
fs
testl
push
enter
fwait
mov
fadds
xchg
lahf
add
jecxz
scas
add
fdivrs
pushf
js
pop
push
inc
xchg
push
pop
adc
and
std
push
dec
pop
fs
movsb
out
add
aam
dec
pop
test
pop
push
popa
dec
mov
inc
cmp
push
into
rol
push
and
sbb
call
std
mov
out
mov
pop
sub
cmp
lcall
insl
push
cmp
dec
or
ja
js
pop
push
mov
cmp
cmp
inc
dec
mov
pop
jp
adc
sbb
stc
data16
or
add
or
lahf
int3
pop
dec
les
loope
and
pop
lds
lret
inc
jbe
lods
pop
mov
push
jno
ds
inc
sti
fldenv
les
add
ja
mov
jb
sub
xor
pop
lcall
in
loope
clc
ja
out
mov
add
fldt
loopne
ss
in
inc
std
push
pop
xor
and
pop
ss
dec
shlb
jne
pop
lret
mov
jecxz
loopne
out
fisubrl
aas
mov
or
sub
cmpsb
imull
cltd
pushl
je
push
sub
xor
sti
or
push
and
pop
xchg
push
repz
mov
rcrb
fstpl
cmpsl
sub
ss
mov
subb
xchg
push
cmpsl
fnsave
mov
std
add
xor
mov
jno
ds
fdivrs
sub
mov
mov
lds
xchg
aad
inc
pop
mov
jecxz
ficompl
xlat
mov
jle
pusha
lcall
addl
pop
jnp
mov
hlt
pop
mov
cwtl
mov
jp
pusha
xchg
xchg
xchg
andb
je
jecxz
int3
xchg
loopne
pop
repz
push
pop
push
fsubrs
mov
out
mov
and
push
pop
xchg
ljmp
pop
fucomp
addl
dec
sub
nop
dec
les
mov
fidivrs
mov
pop
stc
inc
loopne
aad
xchg
ficompl
inc
call
and
cmp
fcomps
mov
bnd
mov
xchg
mov
fcom
ss
cmp
clc
imul
sub
jnp
pop
sub
xchg
es
mov
testb
fdivr
fadds
icebp
sub
ror
mov
pop
loop
pop
pop
cs
push
pop
xor
jbe
xchg
or
leave
sbbb
insb
mov
push
cmp
dec
insb
pop
sarb
icebp
mov
lods
xor
stos
and
pop
jge
test
sbb
cvtps2pi
cmp
adc
pop
orb
adc
push
jmp
cmpsb
push
loopne
sbb
adc
cltd
add
andb
adc
pop
inc
xor
andb
fyl2x
lret
sub
fucomp
mov
dec
sbb
add
pop
cmp
test
int
pop
scas
and
add
push
out
jle
push
sub
xchg
mov
xchg
jae
jnp
dec
mov
fimull
movsl
xlat
fcompl
pop
dec
push
stos
mov
push
leave
pop
xchg
mov
add
popa
div
test
mov
in
cmpsl
dec
xchg
inc
sar
pop
jmp
fwait
out
pop
movb
xor
call
shl
jo
mov
arpl
pop
arpl
pop
xor
pusha
leave
jbe
and
pop
push
dec
in
icebp
push
pusha
and
std
mov
sti
mov
xchg
stc
sbb
mov
inc
sub
mov
cmp
dec
inc
pop
int
fsubs
dec
and
arpl
pop
jp
inc
lock
pop
pop
shlw
xor
sub
pop
rcrl
loop
jecxz
jae
pop
and
lods
cmp
push
pop
popf
sbb
cwtl
jle
adc
mov
jp
sbb
xor
adc
pop
dec
cmp
adc
sbb
xchg
mov
and
stos
sub
pop
adc
rcr
mov
repnz
cld
negb
mov
out
fimull
in
movl
jg
pop
jno
outsb
adc
inc
mov
cmp
call
mov
andl
push
xorb
adc
pop
fwait
push
clc
ljmp
pop
push
push
insb
or
imul
mov
pop
mov
push
std
sbb
sti
pop
test
lods
insb
jecxz
jnp
pop
les
ja
dec
inc
cmp
push
ficoms
scas
add
push
push
pop
repnz
add
stos
aam
aaa
jb
mov
cmp
adc
mov
push
cltd
stos
data16
sbb
jae
aam
pop
int
xchg
insl
add
subb
stos
mull
pop
arpl
pop
add
ds
pop
inc
push
cs
hlt
leave
pop
mov
or
pop
or
cmp
or
pop
sub
push
push
push
and
scas
into
lods
and
mov
movsl
and
jbe
mov
sub
push
dec
in
sub
lock
lret
pop
sahf
mov
pop
and
add
repz
jae
loope
mov
mov
xor
pop
mov
xchg
int3
cmpsl
fs
out
loop
inc
cltd
clc
pusha
int
pop
adc
cmp
push
xor
inc
adc
pop
jmp
out
push
int
mov
sbb
cmp
mov
jb
ret
dec
xchg
in
sub
out
pop
jecxz
sbb
sahf
lock
mov
pop
add
jp
aam
sub
xchg
jo
sbb
clc
cmp
imul
leave
sub
imul
aas
ja
sbb
or
fidivl
pop
inc
xchg
loope
outsl
mov
mov
imul
fistps
ficoml
inc
bound
mov
sbb
sub
popf
xchg
lcall
in
movsl
scas
jp
pushl
icebp
out
mov
push
cltd
inc
and
cs
xlat
xchg
je
cmp
push
fdivrs
and
cvtdq2ps
sti
inc
aad
xchg
adc
and
sbbb
fistpll
sub
cld
into
stos
xchg
xchg
outsb
inc
mov
pop
dec
fadds
out
jns
mov
in
push
xchg
sbb
cs
mov
call
mov
or
dec
adc
lds
dec
or
lea
push
nop
inc
sbb
mov
sbb
sbb
sub
push
pop
or
xor
cmp
addr16
push
pop
dec
fnstcw
lahf
mov
aad
std
inc
push
jecxz
dec
hlt
pop
sbb
mov
sbb
sbb
and
int3
lods
stos
inc
adc
push
sbb
iret
fwait
cmp
mov
int
add
mov
addb
stos
push
push
pop
xchg
cwtl
mov
stc
addr16
pop
ljmp
pop
xchg
js
into
jbe
jnp
jge
sub
sub
pusha
sbb
scas
inc
lcall
outsb
pop
addr16
fstps
lahf
lea
clc
aaa
inc
test
push
pushf
pop
inc
cmpsl
xor
aas
mov
rcrl
int3
and
jle
push
pop
or
mov
fistps
je
mov
push
std
int
lea
pop
pop
test
sub
mov
imul
fildl
pop
lret
inc
mov
pushf
cmp
pop
and
rcrl
lahf
sub
push
leave
sub
inc
movsb
mov
dec
pushf
mov
shll
lods
push
sub
add
cmp
imul
and
mov
jecxz
jno
lcall
int
pop
cmp
or
sbb
mov
mov
mov
mov
aam
pop
jb
das
pop
dec
nop
sbbl
jl
pop
sub
mov
inc
aas
pop
in
cmp
cli
mov
pop
sti
insl
sbb
xor
int
mov
dec
mov
sub
stos
xchg
adc
je
pop
sub
cld
sar
rcr
movsb
outsb
mov
lahf
xchg
int3
call
pop
stos
shll
jo
pop
pusha
jne
sub
adc
jb
rcrb
xlat
icebp
or
ja
jle
lea
das
int
and
xchg
imul
outsl
xchg
dec
xchg
loopne
inc
test
inc
mov
pushf
jb
jo
pop
mov
into
cmp
pop
dec
and
int
mov
test
pop
in
pop
ficoml
push
jns
cmc
xchg
mov
jnp
scas
push
xchg
nop
mov
jbe
cmp
les
lahf
jle
fcoml
inc
xchg
or
mov
out
test
mov
pop
inc
pop
and
push
shlb
je
dec
out
in
mov
dec
int
add
or
sbb
imulb
fnsave
push
leave
xor
jb
or
sub
inc
dec
inc
ret
cmp
inc
jnp
adc
pop
stos
shrb
xor
fidivs
aaa
test
pop
push
xchg
ss
not
push
dec
mov
lret
mov
sbb
das
add
in
scas
or
xchg
rcrl
je
mov
stos
push
pop
adc
sub
shrl
clc
pop
adc
jecxz
shrb
mov
insl
cmp
xchg
cmpb
pop
ret
jmp
je
pop
loopne
js
clc
xchg
sbb
dec
cmp
pop
jle
aad
leave
and
pop
cmp
or
cmovle
pop
pop
xchg
int
add
stos
ds
pushf
in
add
ja
xor
lahf
jns
pop
into
pop
or
pop
pop
xor
lcall
mov
fidivs
mov
js
pop
dec
int
lods
rcll
sbbl
mov
pop
or
push
fisttpll
xchg
lods
fsubp
xor
pop
pusha
and
sub
fisttpl
mov
sbb
leave
sbb
jno
stc
cld
pop
out
stos
jg
insb
jmp
sub
aam
ds
push
jns
dec
push
rorb
jb
lret
int
sbb
pop
mov
pop
cwtl
pop
mov
stos
orb
push
cmp
popa
pop
rcrb
cltd
push
insl
pop
mov
sbbb
pop
cli
fwait
ds
xor
fildl
stos
lret
das
out
pop
or
add
rol
fstps
movsb
scas
mov
pop
cwtl
and
mov
xchg
int3
inc
sub
stc
lea
int
dec
mov
sbb
add
or
mov
adc
pop
clc
jb
adc
jbe
push
push
rorl
cmp
xor
inc
pop
stc
adc
xchg
int3
imul
xchg
xchg
lea
xor
sbb
loopne
cli
ljmp
insb
sbb
aam
mov
lock
mov
push
pop
in
jnp
aaa
cmp
pop
mov
push
fsubrs
adc
or
mov
push
pop
stos
lods
sbb
data16
add
or
movsl
imull
push
out
inc
nop
pop
cmp
xchg
xchg
cltd
and
scas
pusha
lahf
addr16
fildl
inc
mov
lds
testl
adcl
pop
call
push
movsl
mov
dec
sub
pop
daa
xchg
leave
xor
addr16
cmp
pop
inc
adc
xchg
je
pop
xor
cmpsb
pop
int
xchg
mov
pop
lcall
pop
xchg
push
in
pop
orl
das
pop
popf
jb
or
dec
int3
loopne
adc
pusha
or
sbb
add
jge
std
lock
xor
icebp
xchg
pop
in
jl
adc
jmp
pop
aaa
inc
pop
push
hlt
xor
inc
in
aam
pop
in
cld
aad
sub
daa
ret
pop
insl
or
cwtl
pop
divl
gs
pop
jbe
aaa
popf
mov
pop
loopne
std
pop
aas
sub
int
stos
cmp
scas
dec
pop
loopne
pushf
sbb
adc
push
cmp
dec
and
pop
mov
and
pop
mov
js
lds
lcall
pop
sub
test
test
mov
sarl
pop
sbb
test
js
in
pop
rclb
les
xchg
push
xor
mov
cld
cltd
loop
dec
and
or
inc
scas
xor
cltd
int3
sbb
iret
jmp
lods
hlt
cmc
xorb
dec
mov
and
js
pop
mov
push
fcmovnb
test
rcrl
mov
int
mov
subb
or
adc
or
pop
mov
inc
jecxz
pop
lds
xchg
int3
inc
dec
repz
cmp
or
or
pop
or
dec
cmc
fcoms
sbb
pop
push
adcl
pop
inc
and
int
sub
cli
pop
push
out
stc
xorl
or
arpl
pop
fcomps
mov
mov
push
push
mov
sub
pop
addr16
daa
dec
decl
jge
cmpsl
xchg
dec
sbb
lahf
pop
fdiv
and
pop
aas
into
sbb
cmp
sbb
jg
sbbb
or
mov
into
scas
pop
sbb
xchg
adc
pop
loope
call
or
dec
jp
xchg
dec
pusha
adc
stc
or
lods
and
adc
orb
punpckhdq
mov
add
sbb
pop
leave
movsl
xchg
out
mov
add
or
mov
out
pop
in
stos
cmp
in
mov
dec
cmp
pop
jb
lea
std
imul
adc
pop
jl
scas
pop
mov
cmpsb
and
clc
fyl2x
int
xchg
jmp
mov
jo
lcall
mov
mov
int
and
xchg
push
sbbb
cmp
push
adc
jb
and
mov
mov
dec
mov
inc
pop
sbb
inc
xchg
xchg
or
lds
inc
cwtl
pop
push
mov
in
push
xor
pop
mov
xchg
adcb
int
enter
inc
jle
ds
or
sbb
cmpsl
xor
mov
data16
sub
jno
pop
test
scas
ds
sbbb
sub
pop
sbb
scas
mov
loop
int
mov
fsubs
sub
cmpsb
or
sahf
jae
lret
fisubrs
popa
push
stos
in
add
dec
pop
or
pop
mov
xor
and
pop
add
inc
scas
mov
pop
pop
icebp
outsb
inc
sub
pop
jg
jo
mov
push
mov
int
int3
fdivs
mov
cmp
pop
inc
and
aam
inc
ret
push
aaa
fldt
mov
pop
pushf
mov
pop
mov
sbb
add
mov
dec
orb
pop
lods
stc
outsl
cltd
sub
add
test
dec
xor
and
lret
push
push
lcall
out
arpl
pop
test
fisubs
loope
mov
xor
cwtl
sarb
cmp
loop
ret
pop
and
repnz
pop
fs
dec
pop
xchg
inc
pop
pop
sbb
cs
scas
mov
adc
movsb
jbe
mov
scas
aas
filds
pop
mov
pop
inc
dec
push
sahf
xchg
sbb
push
dec
icebp
cmc
push
cmp
pop
add
gs
pop
xchg
pop
in
mov
mov
jge
and
jbe
adc
paddd
mov
mov
hlt
pop
lret
andl
xchg
or
jb
into
mov
lcall
lock
pop
xor
pushf
add
jb
and
jmp
add
fdivrl
adc
das
mov
jb
mov
faddl
scas
test
lock
inc
adc
out
shll
hlt
sbb
lods
loope
pop
mov
cmp
pop
int
jle
aam
pop
jmp
mov
lahf
jmp
test
rcrl
pop
mov
adc
imul
jmp
mov
jne
pop
push
ret
sub
outsl
int3
xlat
ja
fmull
lahf
lahf
pusha
or
adcb
pop
jecxz
jb
loopne
std
fs
sbb
negl
dec
into
jnp
push
pop
add
pop
mov
cmp
inc
negl
rcrb
in
mov
inc
xchg
cwtl
push
nop
and
out
mov
mov
dec
adc
and
bound
popa
aas
shll
fcompl
mov
mov
shll
xchg
std
pop
inc
and
dec
xchg
lods
push
sbb
les
jge
inc
lods
loopne
nop
pop
push
push
aas
mov
lds
sbb
jbe
addb
xchg
ss
cltd
lret
xchg
push
pop
mov
inc
js
cmp
call
arpl
fcom
cs
pushf
rcrb
inc
leave
outsl
push
cmp
out
cmp
pop
sbb
sbb
pop
mov
xchg
xchg
loope
pop
sbb
in
jle
push
xchg
dec
pop
roll
xchg
iret
loop
lods
cs
push
imul
fcomps
popf
and
test
sbb
sbb
popa
cmp
sti
push
cwtl
pop
mov
lods
jno
pop
ss
add
mov
adc
cmc
out
sti
pop
sbb
out
mov
scas
or
cmp
pop
sti
adc
pop
push
push
js
pop
adc
jl
sbb
in
mov
lods
cltd
icebp
sub
sbb
lret
pop
cmp
adc
jbe
pop
inc
lcall
mov
cmp
aad
adc
imul
xchg
or
test
or
push
jle
pop
lods
loop
shl
repnz
jecxz
xor
pop
pop
aam
stos
sub
dec
rclb
lock
mov
sub
and
push
hlt
cld
or
pop
test
movsl
flds
aaa
sbb
in
stc
mov
and
or
xlat
pop
fcoml
or
inc
orb
push
and
clc
gs
fdivl
sub
cmp
cmp
popa
add
mov
fsubl
or
cmp
mov
mov
cmpsb
xchg
dec
icebp
mov
hlt
jbe
pop
andb
sti
pop
ret
adc
roll
dec
push
int3
push
outsb
pop
jbe
dec
sti
das
adc
pop
inc
dec
aaa
fnstsw
push
pop
pusha
dec
mov
adc
jl
sahf
mov
fsubrs
xchg
push
xorl
cwtl
pop
in
xor
mov
popf
out
pop
xor
and
pop
jmp
inc
cmp
and
or
int
leave
icebp
loopne
inc
daa
pop
mov
inc
add
mov
xchg
clc
stc
lods
lcall
jle
div
pusha
addr16
mov
or
sub
sbb
arpl
dec
sti
xchg
mov
int
lods
outsl
insb
push
adc
pop
filds
mov
ret
cltd
jp
mov
scas
jl
and
push
and
pop
lds
mov
pop
jg
lret
cmp
or
sub
pop
scas
jno
sub
or
add
sub
out
inc
lock
sub
xchg
pop
add
pop
rorl
xchg
ss
int
cmpsb
js
arpl
ficoms
mul
rorb
pop
mov
pop
lcall
data16
lret
pop
je
mov
sub
sub
sbbb
addr16
int3
js
movsb
mov
dec
mov
mov
popa
sarb
das
cmc
ret
fstp
jle
add
pop
enter
jecxz
outsl
shll
mov
push
ljmp
cwtl
pop
or
lret
xlat
je
jbe
pop
or
dec
push
arpl
mov
int3
das
mov
loopne
int
jno
sbb
jmp
gs
push
pop
cld
popa
inc
movsl
lcall
insl
leave
mov
arpl
mov
mov
push
pop
push
adcl
xchg
and
popf
test
jbe
adc
out
dec
movsb
sub
pop
loopne
out
addr16
int3
mov
push
lcall
aaa
pop
bound
and
pop
pop
mov
jo
mov
int3
jmp
cltd
pop
divb
xor
fistpl
jecxz
popf
mov
fbstp
cld
lcall
pushf
pop
xchg
scas
fisttps
pop
adc
xchg
pop
push
mov
fldcw
pop
mov
and
lcall
jecxz
mov
outsl
cltd
int
mov
push
es
xchg
sbb
sar
sahf
leave
mov
jl
pop
and
cmpsl
mov
and
rcrb
mov
jle
dec
mov
movl
inc
cmp
xchg
sub
and
stc
and
add
mov
andl
jb
in
and
jp
add
mov
xlat
sub
xchg
jl
adc
fidivrl
xor
imul
outsl
aam
mov
pop
fildll
stc
pop
out
push
sub
mov
loopne
xchg
call
stc
aas
scas
sbb
shrl
ds
jecxz
lcall
stos
sbb
mov
pop
and
gs
adc
nop
jge
adc
pop
cmp
lods
int3
xchg
ret
mov
sbb
aas
xor
push
jecxz
add
pop
aad
lcall
in
fwait
pop
out
pop
dec
mov
sbbl
aas
pop
mov
int3
mov
pop
cmp
or
lcall
jnp
pop
xchg
or
push
cmp
dec
mov
pop
clc
sbbl
cwtl
test
sbb
cmp
enter
pop
and
sbb
push
insb
jnp
sbb
mov
les
dec
pop
push
xchg
mov
push
cmc
pop
inc
jl
mov
loop
mov
mov
lods
fdivr
jg
popa
jb
and
mov
dec
stos
mov
mov
cltd
dec
jp
ret
addb
insl
sbb
fldcw
lret
xchg
loope
pop
mov
add
pop
sbb
fisubrl
pop
pop
das
cli
sbb
pop
fistpll
fstpt
test
and
pop
jno
icebp
fstl
ss
jl
das
add
daa
repnz
adc
pop
cmp
stc
shl
neg
iret
pop
test
sbb
dec
push
imul
pop
push
int3
or
jp
pop
fbld
and
dec
sbb
push
sub
push
es
out
jo
movsb
testl
rcrl
scas
shl
sbb
xchg
or
mov
push
pop
repnz
pop
test
pop
xor
out
push
int
xchg
pop
cmpsb
jmp
psubb
lret
adc
bound
loop
mov
nop
mov
in
mov
imul
sbb
pop
loope
es
xabort
mov
lock
mov
lock
pop
dec
sub
mov
repz
pop
adc
or
pop
shrb
pop
inc
or
jecxz
stos
jp
lret
pop
sbb
data16
xor
leave
jnp
jb
mov
mov
scas
enter
scas
fimull
fs
stc
popl
xor
and
mov
mov
inc
pushf
loop
mov
loopne
pop
js
mov
mov
je
and
setp
cli
icebp
fidivrs
and
aas
and
sbb
xchg
ljmp
xor
loope
jmp
adc
popf
inc
rcrb
pop
inc
rcrl
mov
jo
cli
ret
mov
popf
imul
push
mov
inc
dec
push
push
xchg
jne
subb
movsl
sbb
pop
push
arpl
push
sbb
stc
rcrb
sub
insb
dec
scas
orb
rcrb
push
jns
cmc
or
iret
pushl
xchg
fcomps
sub
pop
cmpsl
inc
pop
aad
ss
pop
mov
jge
ja
movsl
pop
ds
pop
imul
mov
lahf
sbb
cmp
inc
sbb
mov
sahf
addr16
push
adc
rcll
or
and
fisubl
hlt
mov
mov
fisubl
loop
cmp
xchg
bswap
jo
fistpll
enter
pop
cmp
es
or
jle
sahf
pop
pop
jo
idivl
or
cli
add
cmp
nop
pop
xor
lea
scas
out
jbe
aaa
add
andl
xchg
mov
mov
popa
stos
pop
pop
mov
or
stc
jge
push
les
in
insl
push
add
pop
jg
dec
mov
lahf
mov
int
adc
sub
sbb
stc
iret
stos
pop
fldl
icebp
xchg
adc
out
jnp
or
lret
pop
adc
in
inc
add
jo
mov
pop
into
rcl
pop
fisubrl
push
out
scas
fwait
mov
icebp
xor
mov
pop
not
mov
jmp
insb
pop
fiaddl
ja
filds
cmp
or
cld
dec
sub
pop
jo
lock
xchg
cwtl
pop
xorb
adc
adc
or
lcall
repz
outsb
or
inc
pop
push
pop
cs
out
dec
push
call
lahf
sbb
cltd
leave
ljmp
jb
negl
xor
clc
pop
lods
sti
jo
lea
iret
aad
in
pop
xchg
and
sbb
ds
inc
imul
and
dec
jg
rcll
push
imul
pop
subl
ss
cli
pop
pop
pop
jb
pop
pop
dec
stos
sub
test
or
and
shlb
add
mov
jne
pop
push
xchg
dec
mov
sbbb
dec
popa
sbb
int
fwait
add
xchg
pop
inc
shrb
fldt
xor
aam
add
mov
enter
jne
repnz
hlt
fstpt
scas
pshufw
sbb
and
ss
outsl
movsb
cmpsl
push
pop
xorl
push
pop
sub
int3
popf
das
jl
es
cmp
lahf
push
xor
mov
int
mov
pop
out
xor
call
ret
pop
frstor
jp
sub
movsl
add
jns
mov
mov
out
aas
lods
and
pop
pusha
cltd
adc
into
xchg
cmp
fcom
in
pop
movsb
jbe
rol
cmpsb
jne
test
es
jb
push
xchg
sbb
xor
pop
clc
out
insl
test
dec
xchg
jecxz
inc
gs
pop
push
cmpsl
mov
xchg
cltd
and
fnsave
fistpll
fcmove
movsb
sub
stos
sbb
cmp
and
adc
cs
rol
popf
pop
mov
jb
push
test
sub
fldl
mov
mov
rcr
jge
pop
daa
pushf
push
pop
mov
xchg
pop
loope
or
dec
gs
adc
negw
pop
xchg
dec
xor
pop
add
sub
mulb
sbb
xor
jne
inc
test
int
cmp
push
fmul
loopne
pop
pushf
ss
fstpl
cmpsl
lret
cmp
push
push
pop
int3
ja
pop
add
jo
nop
lds
sbbb
inc
popf
mov
cmpb
pop
cld
pop
int
jmp
push
sbb
mov
sub
ret
stc
sbbb
cmp
fsubrl
pop
addr16
lea
inc
pop
xor
lock
arpl
pop
add
sub
lea
mov
test
pop
xor
and
push
adc
inc
addl
pop
std
sub
push
jnp
shlb
leave
jbe
lahf
pop
out
repz
imul
push
jle
pop
push
in
or
push
int
test
xlat
leave
pop
dec
jb
mov
add
das
fs
dec
pop
stos
ret
xchg
inc
or
pop
sbb
loopne
adc
fidivl
push
jecxz
or
aas
repz
mov
gs
adc
jmp
lahf
out
ffree
mov
mov
mov
call
mov
xor
sbb
pop
inc
dec
stos
sbb
das
pop
lahf
out
sub
bound
jb
push
pop
mov
loopne
dec
pop
stc
cli
int
bound
inc
mov
or
test
sbb
mov
sub
movsb
fldt
xchg
fisttpll
and
sbbl
push
fs
pop
fadds
in
xchg
int
jb
cs
xchg
insb
mov
or
mov
sbb
mov
pop
pop
stc
xchg
mov
pusha
jge
jbe
pop
hlt
cli
add
repz
push
sbb
shlb
aam
jp
mov
pop
mov
ja
mov
test
subb
push
fmul
push
cld
fs
pop
jns
sbb
in
xor
aad
ds
aam
xor
fisttpl
fwait
mov
movsb
lahf
jnp
jg
pop
or
sbb
pop
testl
pop
jne
lret
cld
int3
and
in
sub
andl
cmp
loopne
dec
ficomps
pop
mov
fldcw
das
sti
mov
pop
and
test
xchg
pop
int
loop
cld
sbb
and
leave
add
out
fildl
fstl
mov
jl
pop
fldl
cmc
or
addb
add
fbld
cs
pop
or
dec
or
pop
pop
push
scas
ljmp
int3
cmp
sbb
pop
out
lock
mov
rcrb
pop
xor
push
ss
int
mov
and
sub
jbe
mov
jb
lret
inc
or
jecxz
push
test
inc
pop
inc
adc
push
mov
iret
and
mov
aas
jbe
lods
or
and
in
xchg
xchg
int
rol
inc
cmp
sbb
call
jl
jno
jecxz
push
cs
and
loopne
rorl
nop
jb
int3
mov
mov
dec
int
xor
movsl
std
xchg
adc
test
push
fistpl
aam
rcrb
mov
pop
pop
test
incb
pop
int
dec
jl
ljmp
in
xor
push
add
push
mov
mov
scas
out
cli
in
cmp
test
ss
jg
and
pop
or
gs
dec
pop
incl
int3
inc
dec
stos
ja
fnstcw
pop
lea
cmpsl
outsb
jo
invd
mov
or
js
cmp
and
push
lock
mov
repz
pop
insb
lcall
mov
sbb
inc
sub
mov
mov
cmpl
push
loopne
or
pop
cli
lcall
mov
mov
insb
cwtl
leave
shll
cmp
adc
in
or
mov
test
movsl
dec
arpl
mov
sub
pop
leave
push
jne
test
mov
mov
adc
repnz
fsts
push
mov
jle
jo
adc
mov
xchg
jae
int
and
in
insb
sub
xchg
add
xchg
xor
sbb
jg
jnp
stc
sbbl
lods
jp
pop
or
aas
sbbl
add
push
stos
les
fucomi
mov
dec
jp
pop
add
inc
sub
test
stc
enter
fldl
push
pop
out
in
pop
lea
repnz
adc
fwait
aad
aam
pop
call
std
pop
jno
add
lea
pop
mov
pop
pop
and
dec
cmp
mulb
mov
les
pop
ja
sbb
call
divb
in
pop
pop
lea
int3
sbb
inc
mov
pop
adc
adc
fidivrl
and
sbbl
mov
test
mov
insl
sbb
not
js
in
jb
cmp
xchg
out
sub
test
xchg
aam
pop
or
cli
jbe
clc
fsubl
sub
fcoms
int
imul
cld
pop
mov
add
dec
icebp
js
sub
pop
popa
insl
rorl
cmpsl
int
jp
repnz
adc
incb
push
mov
mov
and
dec
lret
pop
out
sub
jb
jne
mov
or
sbb
pop
adc
xchg
pop
dec
mov
int
lods
sbb
cmp
pop
ror
cwtl
push
cmp
aad
stos
dec
pop
lret
lahf
call
push
mov
adc
xchg
pop
test
out
xor
pop
ds
pop
mov
jbe
push
sbb
daa
enter
xor
add
pop
ljmp
xor
sub
iret
push
pop
sbb
pop
dec
or
cwtl
pop
cmp
scas
sbb
pop
mov
subb
pop
in
xchg
ss
adc
movsb
shrl
dec
pop
in
xor
jbe
push
lahf
pop
mov
jp
xor
stos
mov
cwtl
shlb
sbb
stc
mov
xchg
add
inc
pop
ja
jns
pop
xchg
rorl
sub
popf
rcr
pop
fwait
mov
or
mov
add
lahf
inc
pop
lods
lret
mov
mov
pop
subb
int
pop
jae
in
push
pop
nop
icebp
xchg
xorb
std
fxam
cmp
pop
pop
out
add
jbe
xor
pop
mov
icebp
and
sbb
lea
lret
adc
jmp
imul
jb
nop
pop
adc
loop
je
std
xchg
scas
xchg
sbb
add
movsl
call
or
setg
or
cmpsl
imul
out
dec
push
adc
adcb
mov
xchg
inc
mov
xor
scas
stos
push
pop
pop
or
cmpsb
repnz
fisubs
subb
push
clc
jl
outsl
pop
mov
mov
cmp
fidivl
or
stos
loop
mov
inc
imul
sahf
inc
jns
mov
fcomip
roll
in
into
jns
ret
sbb
scas
dec
pop
sub
sub
inc
test
pop
push
mov
lahf
pop
add
push
pop
arpl
stos
jae
loopne
pop
xor
lahf
das
ljmp
outsb
mov
out
sbb
cmpsb
int
mov
imul
pushf
mov
mov
inc
push
push
sbb
pop
sub
rcrl
std
adc
insb
jo
icebp
mov
mov
das
fucom
add
in
fdivrp
lret
cmp
inc
les
xor
lahf
adc
cmp
pop
addb
aam
int
jbe
xor
repz
cmp
xchg
sahf
inc
pop
cmp
jg
mov
adc
jnp
xchg
pop
jo
sbb
stc
lea
adc
cltd
insl
add
test
or
pop
mov
jg
jl
add
fdivl
cmp
clc
inc
add
mov
pop
lret
push
and
mov
adcl
jb
mov
cld
cmp
pop
je
and
pop
and
dec
lcall
icebp
pusha
jmp
pop
scas
inc
and
leave
ret
adc
movsb
cmpsb
cmp
pop
sbb
jnp
loope
xchg
or
adc
je
mov
mov
sbb
mov
test
sub
fcmovnu
mov
scas
push
and
cmc
adc
mov
aad
xchg
mov
leave
jle
out
adc
pop
xchg
sbb
adc
xor
je
ret
mov
and
jno
int3
pop
inc
fsubrl
insl
inc
sub
movsl
int
dec
jl
pop
lahf
aam
jb
jmp
mov
rorl
repnz
int3
cmp
cltd
pushf
sub
lahf
mov
arpl
fisttpll
mov
xor
mov
call
pop
push
sub
in
cld
pop
mov
cli
fisttpl
cwtl
clc
ja
cmp
je
push
pop
loopne
jns
rolb
idivl
xchg
sbb
pop
push
loopw
pop
jns
push
enter
xor
lods
rcrb
fisubs
call
add
push
xchg
cltd
aas
es
xor
scas
jne
jo
or
incl
mov
int3
in
pop
ja
hlt
sbb
add
movsl
sbb
loopne
mov
sbb
mov
pop
insb
adc
das
popa
cmp
arpl
push
cwtl
leave
xor
icebp
loope
jb
rol
pop
scas
loop
xchg
pop
idivl
xchg
fs
and
push
fcomps
or
pop
out
cltd
mov
int3
jl
mov
jno
jbe
pop
imul
test
and
lods
filds
out
cmp
add
leave
enter
call
sbb
cmpsb
je
pop
cmp
fisubrl
dec
aam
push
pop
push
jo
adc
jno
push
shrb
pop
dec
jns
xlat
cmpb
fldenv
cmp
lret
pop
imul
sub
pop
insb
pop
scas
xchg
mov
mov
jecxz
or
pop
test
dec
cmp
xchg
and
cs
dec
cmpsb
fimuls
fcom
cmp
cmc
or
shlb
arpl
and
mov
mov
mov
popf
mov
add
pop
pushf
jo
sbb
xor
pushf
mov
in
push
mov
mov
pop
test
outsl
inc
mov
lods
test
bswap
jmp
pop
ss
jo
xor
pop
aaa
ja
lea
aas
adc
and
bound
shl
pop
leave
outsl
jl
add
dec
pop
lea
or
pop
and
mov
orl
dec
sbb
add
mov
add
push
cmp
dec
mov
dec
int3
add
fsubrl
test
sub
movsl
pop
call
sbb
xchg
sub
lock
popa
dec
sbb
pop
pushf
lahf
inc
sbb
mov
popa
cmp
mov
cwtl
fistpl
mov
push
mov
lret
movsl
jbe
stc
fwait
call
mov
maxps
stos
addl
in
aaa
repz
and
pop
hlt
jecxz
cli
sbb
cld
fisubrs
addr16
int
xchg
les
lock
xchg
cmp
xor
mov
pop
ljmp
mov
xchg
ss
adc
cmpsb
jb
mov
and
aam
lcall
stos
adc
mov
mov
jecxz
push
pop
jo
lods
pop
sbb
jno
push
push
pop
dec
and
fcmovnu
mov
std
and
and
pop
test
inc
jmp
stc
test
ds
push
inc
and
mov
loopne
jg
pop
or
xchg
fdivr
cmp
push
push
pop
mov
adc
hlt
fs
rep
int3
xchg
sbb
mov
pop
add
inc
dec
pop
mov
xchg
jbe
pop
loope
rorl
lea
sub
pop
popf
in
inc
cs
pop
imul
cmp
sbb
shrb
mov
lock
pusha
fisttps
pop
dec
mov
rorl
jbe
mov
pop
add
pop
ret
mov
add
sub
mov
outsb
and
adc
dec
mov
popa
mov
inc
test
or
xchg
xchg
sbb
or
adc
ja
push
mov
lods
pop
inc
xchg
sbb
in
xor
mov
jb
mov
ss
into
sbb
scas
inc
inc
xor
mov
mov
int
jnp
hlt
out
cmpsl
cld
cltd
pop
inc
std
stos
lahf
sub
pop
into
insb
jbe
xor
stos
pop
aaa
sub
mov
pop
outsl
adc
pop
dec
ds
mov
inc
push
jle
dec
and
cs
sbb
test
dec
sub
jbe
mov
sbb
dec
jno
decb
ficompl
push
imul
adc
mov
mov
gs
cmp
mov
pop
jno
inc
int3
jb
push
repz
les
rorl
pop
adc
or
or
das
jbe
xor
adc
cmc
popf
pop
xchg
dec
out
mov
mov
pop
mov
push
stc
repnz
inc
xchg
mov
and
fs
dec
pusha
pop
or
pop
jo
pop
jl
add
cs
sub
xlat
and
sbb
mov
rcrb
and
lea
rcrl
loope
cli
scas
test
pop
push
xorb
mov
fdivs
stc
jge
mov
aas
or
hlt
pop
out
cmpsb
int3
enter
pop
mov
int
push
xor
lods
xlat
jb
mov
pop
fbld
jge
scas
clc
push
xchg
dec
mov
adc
mov
fldpi
sub
mov
cltd
enter
cwtl
sbb
int
mov
jns
dec
mov
jl
inc
pop
and
sub
or
add
xchg
cmp
pop
mov
mov
sub
imulb
push
out
in
inc
dec
pop
xor
je
or
cli
repnz
push
sti
dec
or
xlat
inc
enter
sbb
test
fstpt
outsl
or
mov
or
clc
pop
jb
rcrl
int3
aam
imull
jbe
dec
dec
or
pop
xor
mov
stos
in
sub
pop
jge
int
fcomi
out
repz
scas
mov
and
pop
insb
jmp
inc
cmpsb
sub
cmp
pusha
lea
mov
mov
mov
mov
or
xor
sbbl
lea
pop
int
inc
lods
push
jl
insl
pop
in
imul
fucom
fs
jecxz
xlat
jp
sub
mov
dec
mov
pop
aaa
mov
or
pop
clc
popa
mov
pop
lea
mov
push
mov
and
inc
mov
jle
adc
xlat
lds
and
inc
dec
cmp
lea
scas
xor
fistpl
out
pop
push
xor
mov
pop
mov
push
ret
out
add
push
pop
pop
cmc
leave
sub
xor
pop
push
in
ror
dec
cs
xchg
loope
hlt
push
mov
movsb
sbb
test
pop
mov
adc
das
adc
pop
jae
cli
gs
mov
mov
mov
jg
mov
pop
js
test
mov
dec
or
pop
cmp
repz
cmpsb
mov
cmc
xchg
repz
je
adc
scas
mull
inc
repnz
int
data16
sbb
push
cmpsl
cmp
jbe
rcr
pop
pop
pop
es
cltd
ror
inc
xor
out
iret
sbb
push
int3
scas
xchg
loop
jae
inc
sti
xor
mov
cltd
lds
lods
xchg
sub
inc
aaa
insl
mov
xor
adc
arpl
into
xchg
add
fucomp
pop
pusha
dec
mov
mov
and
mov
push
in
pop
fidivrl
mov
or
xlat
jbe
mov
push
subb
xor
inc
cmp
xchg
mov
mov
lcall
jae
fistpll
mov
repnz
stos
jo
data16
dec
and
pop
insl
in
push
shlb
pop
pop
mov
pcmpgtw
xor
xchg
mov
xchg
jg
into
mov
sahf
dec
xor
inc
mov
sub
sbb
es
sbb
mov
pop
lea
xor
pop
dec
popa
xchg
iret
inc
fwait
int
scas
scas
mov
jecxz
lock
pushf
outsl
jb
in
pop
test
out
andb
and
pop
lods
cmp
dec
adc
int3
mov
sbb
ficoms
pop
loop
btsl
jl
jmp
les
gs
lods
loopne
adc
push
sbb
ret
or
ret
dec
jne
lahf
or
xor
test
les
fcmovnu
push
xor
dec
sbb
jecxz
push
pop
rorb
dec
int
mov
jecxz
inc
add
mov
pop
hlt
ss
add
push
sub
pop
dec
fidivl
movl
movsl
push
adc
mov
pusha
or
loopne
and
loope
mov
mov
or
jl
scas
ja
outsl
test
mov
pop
lgs
sub
sbb
fisubrl
dec
das
push
xchg
jbe
xor
mov
shll
scas
xchg
adc
lods
cld
mov
jecxz
dec
loopne
adc
movsb
pop
mov
lret
dec
adc
ret
outsl
cmp
or
sbb
jecxz
xor
test
lods
scas
adc
xchg
xor
cmp
popa
dec
mov
mov
jg
mov
cmc
push
mov
mov
std
loop
in
out
push
add
mov
sti
outsl
cmp
pop
xor
and
insb
cmpsl
xchg
add
mov
dec
jge
lea
xchg
pop
stc
mov
mov
int
pop
sbb
mov
lret
mov
inc
xchg
dec
aad
sbbb
ret
jmp
aam
mov
orb
mov
mov
das
pop
or
pop
jae
arpl
pop
in
mov
sbb
pop
test
or
xchg
mov
int3
leave
sbb
ret
cs
mov
mov
popf
pop
lea
setb
and
xor
dec
pop
mov
or
inc
scas
xchg
popf
int3
jne
sub
pop
std
in
mov
mov
pop
adc
jo
mov
pop
ss
mov
nop/reserved
jmp
das
lea
and
pop
int3
fnstenv
pop
pop
int
sbb
nop
jecxz
ret
test
clc
in
and
cmp
dec
lcall
icebp
mov
pop
adc
out
pusha
pop
in
aam
dec
addl
or
mov
ljmp
jne
mov
leave
je
test
shl
mov
and
mov
jb
xchg
insb
sbb
out
xchg
sub
adc
pop
dec
fdivrl
cmp
and
mov
add
lds
xchg
notb
jo
add
pop
lret
mov
xchg
sub
xchg
mov
std
pop
ljmp
loop
jb
sbb
add
cmp
sub
pop
js
ljmp
pop
sbb
add
xor
call
insl
fstp
or
adc
mov
xor
imul
in
mov
sbb
subl
lds
xor
adc
dec
inc
xchg
jno
pop
ja
xchg
jb
ds
test
jbe
cmp
inc
fiaddl
daa
lret
xlat
sti
xchg
addr16
pop
pop
dec
jae
pop
sub
ja
ljmp
jo
xchg
nop
pop
fistl
les
or
jecxz
imul
test
jp
call
mov
fiaddl
fsts
cmp
lea
vcvtsd2si
pop
cmp
xchg
jae
push
into
pop
xor
fstpt
testb
pop
add
clc
loop
pop
dec
ret
sbb
movsl
pop
stos
imul
adc
popf
testb
ja
mov
fcompl
xchg
fwait
je
mov
push
push
mov
mov
test
into
jo
fmuls
jle
dec
cmc
js
add
pop
enter
cmp
mov
int
pop
cmc
rorb
scas
lahf
sub
loope
fidivrl
sub
push
and
push
push
sbbl
xchg
mov
pop
or
stos
add
pop
inc
push
ja
leave
cmp
fcoms
push
push
cli
insb
xor
daa
add
pop
pop
cs
mov
mov
fincstp
mov
mov
fistps
fbld
adc
call
repnz
in
jb
mov
jmp
pop
pop
pop
in
pusha
xor
shl
sub
xchg
lods
pop
leave
adc
mov
and
pop
ja
divb
fwait
lcall
mov
cli
sub
sub
out
xchg
in
mov
mov
pop
or
or
shl
pop
sbb
and
subl
aam
pop
pop
push
pop
fstpl
cld
scas
mov
iret
clc
enter
cmp
and
in
cmp
insl
filds
jo
xchg
pop
adc
xchg
sub
jae
decb
addl
pop
inc
push
popa
sbb
mov
lods
int3
stos
pop
push
jmp
ret
fwait
cwtl
pop
stos
mov
xor
pop
and
jl
sub
pusha
or
cmp
pop
mov
push
jb
jle
es
std
pop
pop
lcall
sbb
inc
add
clc
mov
mov
jnp
mov
mov
fcoml
mov
data16
xchg
out
cmp
inc
pop
and
int
fmull
fstp
fsubrp
out
dec
pop
scas
or
sti
lahf
mov
cmp
push
adc
jecxz
sbb
inc
xchg
xchg
push
inc
fwait
cli
pop
lods
in
shlb
loop
insb
in
and
adc
inc
xchg
sti
cmp
dec
outsl
jle
bound
xchg
jne
push
pop
cmc
popl
orb
gs
inc
test
and
sbb
mov
inc
pop
fists
clc
cmp
cwtl
mov
rcrl
les
in
rclb
dec
out
push
add
nop
xor
leave
pop
xchg
pushf
pusha
js
sub
lds
mov
call
lret
inc
pop
xor
ret
xchg
pusha
pushf
sbb
dec
or
pop
xor
push
or
cwtl
mov
test
mov
pop
adc
cmc
push
mov
xchg
mov
popf
pop
push
push
add
out
sub
push
inc
dec
push
out
jb
or
pop
add
push
movsb
mov
fmuls
aaa
push
jbe
pusha
and
arpl
lock
ffree
mov
loopne
lret
rolb
pop
add
xchg
insl
push
mov
aas
cwtl
or
jae
rol
pop
xor
cmp
dec
jecxz
mov
cmp
sub
nop
je
test
out
push
pushf
mov
pop
stc
mov
and
xchg
scas
gs
pop
int3
aad
mov
sbb
pop
pushf
ja
in
jne
push
mov
fdivs
test
or
pop
dec
xorl
mov
sbb
and
lock
stc
int3
mov
sbb
push
inc
out
lret
aad
jb
mov
nop
pop
inc
adc
xchg
rolb
popa
into
cmpl
out
xchg
sti
inc
mov
pop
lods
xor
sub
test
hlt
xor
pop
das
lea
scas
pop
pop
in
sbb
out
insl
in
mov
fsubrs
pop
filds
in
pop
xchg
pop
or
loopne
int3
fldl
pusha
adc
sbb
mov
pop
mov
mov
inc
push
xor
adc
ficomps
cwtl
pop
loopne
sar
inc
mov
aas
out
scas
stc
lods
call
jbe
fsubrl
mov
gs
loop
andl
or
outsb
lcall
movsb
cmp
lea
sbb
sub
test
fcos
adc
add
pop
pop
enter
jne
xor
cmp
addr16
pop
fwait
pop
lea
pop
adc
leave
outsl
push
and
pop
shll
lock
dec
test
and
repz
aam
add
sbb
data16
pop
adc
or
sbb
inc
pop
mov
int
loope
je
pop
fstpl
dec
pop
or
lods
mov
aad
int
add
fsubr
popw
cltd
fldt
das
lahf
ds
cmpsl
insl
fistl
jo
xor
jecxz
adc
pop
nop
shlb
fimull
test
xchg
pop
push
test
sub
mov
sbb
push
movsl
push
pop
roll
and
jno
aam
pop
sbb
test
xor
lea
xchg
add
out
xor
push
sub
addb
mov
mov
sub
fidivrs
lahf
dec
and
ds
pop
imul
ljmp
pop
pop
xor
push
add
iret
jns
add
cmp
sub
adc
pop
orb
in
cmc
cmp
stc
subb
mov
test
dec
loopne
es
lods
jo
mov
dec
cli
xchg
adc
sub
sub
cmp
mov
mov
pop
test
cmpsb
xor
push
cmpsb
popl
dec
ret
loop
inc
xchg
pop
pop
jne
mov
sub
ret
scas
mov
push
xchg
push
mov
pusha
icebp
js
xor
pop
clc
in
fs
xor
sub
xchg
mov
iret
sbb
ja
sbb
pop
shlb
dec
push
pop
cltd
adc
xor
mov
test
sub
roll
mov
loop
mov
orb
shl
jno
jns
mov
inc
cltd
int
xchg
mov
dec
mov
or
jl
xchg
fistps
lds
shll
mov
dec
pop
popa
mov
adc
int3
xchg
cmpsl
pop
lret
lods
int
fidivrs
dec
test
in
pop
jl
fucomi
and
test
movsb
int
scas
add
inc
cltd
lahf
pop
sub
lahf
xchg
xchg
movsl
sbb
shr
pusha
sbb
jecxz
mov
pop
ljmp
add
addl
jo
sarb
jmp
sbb
repz
sbb
insl
js
je,pn
mov
clc
call
jnp
xchg
rolb
lsl
hlt
dec
pop
int
cmp
pop
jo
cmpsb
mov
sti
pop
movsb
dec
mov
ficomps
int
loop
pop
stos
add
jge
adc
nop
sbb
jle
pop
arpl
sahf
sub
and
in
mov
lock
push
pushf
out
insl
adc
xchg
jl
mov
mov
mov
test
adc
xor
jnp
cmp
cmp
add
dec
dec
xor
lock
fstpl
cmp
shrb
push
dec
gs
pushf
nop
pop
int
or
push
negb
push
js
popf
jae
push
mov
mov
xchg
shrb
pop
iret
int
lds
dec
dec
popf
mov
dec
xor
push
jo
stc
push
popl
jge
das
jne
vmread
mov
fwait
mov
fidivrl
push
add
pop
inc
mov
lret
sub
adc
xchg
xor
push
sbbb
lcall
pop
inc
js
or
xchg
cld
sbb
pop
xor
sbb
lods
pop
ss
pop
jo
mov
imul
pop
add
mov
addr16
inc
pop
dec
dec
in
sub
jbe
pop
and
or
jmp
dec
mov
or
mov
cltd
stc
add
sbb
mov
loope
lds
aaa
pop
hlt
sbb
loop
push
pop
dec
popa
mov
push
loope
sbb
pop
pop
xchg
pop
sub
into
mov
add
xchg
or
in
pop
pop
pop
outsl
in
mov
add
pop
mov
ja
jae
push
shl
sub
sbb
pop
mov
test
cltd
call
pop
jbe
shl
faddl
pop
js
sub
sbb
loope
mov
jbe
inc
pop
into
push
pushf
je
jecxz
pop
int
mov
repnz
and
aad
jb
aas
jp
pop
xor
adc
xchg
out
pop
je
arpl
or
sbb
jp
lret
pop
xlat
xchg
clc
or
fdivs
mov
jne
pop
imul
int
loop
push
dec
outsb
push
stos
mov
adc
sbb
push
mov
insb
push
pop
cmpsl
xlat
sub
scas
fsubl
mov
in
fnstcw
pop
mov
xchg
sbb
mov
fstpl
inc
mov
xchg
pop
sarl
pop
pop
jb,pn
mov
into
xor
jge
inc
lock
stos
cli
psrlq
enter
cs
in
cltd
lret
cmp
sbb
add
mov
push
lret
aad
adcl
jbe
std
xchg
outsb
test
pop
and
in
jb
push
inc
pop
das
jne
fs
fldcw
adc
int
sub
jns
push
data16
pop
imull
adc
aam
mov
mov
pop
pop
dec
xchg
lahf
mov
out
dec
stos
and
pop
cmp
inc
stc
popa
in
push
loopne
cltd
js
fisttpll
sub
jne
adcl
mov
xchg
mov
js
inc
pop
and
shr
popf
add
pop
or
xchg
loopne
sbb
dec
fld1
pop
xorl
data16
cmp
xor
gs
out
push
mov
jl
testl
dec
mov
sbb
jo
and
mov
add
pop
mov
pop
arpl
repnz
jb
cwtl
cmpsl
lea
cli
fldt
adc
rorb
pop
data16
in
hlt
xchg
fcmove
cld
mov
lds
or
fs
int3
mov
incl
out
mov
negl
repz
pop
dec
ss
mov
sub
pop
lds
inc
sbb
test
pop
sbb
int
pop
inc
je
sbb
shlb
pop
adc
push
jnp
lcall
sub
and
fisubrs
roll
dec
enter
cltd
mov
push
into
loop
pop
popf
js
aas
sbb
sub
add
shll
out
pop
repz
add
jp
or
sub
or
push
sub
enter
inc
lea
mov
jbe
iret
add
je
ds
inc
pop
dec
int
pop
clc
out
xor
jbe
add
mov
xor
pop
xchg
mov
sahf
leave
out
int
mov
or
loop
roll
lahf
sti
xor
pop
push
sbbl
jge
xor
pop
jae
shrb
sti
sahf
mov
and
pop
sbb
mov
dec
add
cmc
int3
pop
nop
xchg
je
pop
stc
dec
lahf
je
bnd
inc
and
add
push
mov
dec
pop
rcl
pop
jae
inc
idivl
fistps
lahf
cmc
push
mov
loope
sbb
pop
ds
push
mov
sbb
push
cmp
ja
das
mov
mov
push
es
sbb
subb
xor
lods
xor
test
fsubs
jns
jecxz
add
pop
sub
push
pop
aad
pop
je
orb
sbb
movsl
sahf
jl
sub
mov
out
pop
jbe
sbb
cmp
imul
sbb
mov
lock
mov
push
imul
mov
mov
aad
pop
pop
ljmp
pop
je
sarb
and
dec
mov
pop
xchg
test
stos
push
lcall
inc
cmpsl
push
dec
mov
jge
scas
sub
ja,pt
jle
js
shl
aad
dec
sub
rcrl
xor
pop
jbe
pushf
pop
push
stos
and
pop
ss
ljmp
pop
pop
test
movsl
jo
pop
pop
jl
push
add
lahf
loope
lcall
insb
add
adc
lcall
mov
mov
int
cs
and
mov
cmp
pop
cmc
stos
pop
loope
sbb
pop
aaa
fsubl
push
cmp
pop
in
int
dec
loop
mov
push
mov
sub
hlt
inc
clc
pop
int
aaa
sub
adc
lcall
arpl
fcompl
pop
imul
dec
adcl
mov
and
mov
inc
int
jecxz
data16
jnp
push
sub
xchg
fwait
mov
push
outsb
fdivrl
mov
pop
push
mov
adc
pop
rorb
or
inc
aaa
loopne
in
stos
or
jmp
out
in
xchg
pop
fadd
jp
nop
cmc
pop
mov
xchg
je
dec
push
and
adc
xor
in
push
push
jl
sub
imul
das
test
or
xor
mov
mull
insl
pop
test
fnstcw
lds
pop
rcll
mov
pop
into
mov
pop
xchg
int3
mul
sbb
in
mov
jnp
sub
movsb
loope
andb
stos
xchg
filds
sub
jne
pop
pop
flds
xor
adc
or
out
jle
jo
mov
inc
lods
fildl
pop
sbb
sbb
data16
aad
pushf
aas
mov
sub
cmp
sbb
push
int
cli
mov
sti
mov
cmp
pop
pop
pop
iret
push
adc
mov
inc
sub
aas
and
push
int
xor
mov
repnz
xorb
push
pop
jne
pop
pop
lret
cltd
xchg
stos
fwait
mov
cmp
test
sbb
jb
mov
adc
inc
lods
adc
cmp
stc
jmp
xchg
pop
or
les
cltd
pop
or
fwait
imul
jo
mov
pop
mov
mov
scas
pop
cmp
mov
add
cli
pop
pop
jo
pop
fucomp
pushf
mov
shrl
testl
push
adc
mov
loop
inc
cmpsl
or
and
pop
mov
jmp
stc
dec
pop
int3
cwtl
mov
cmp
pop
std
or
cmpsb
pop
push
add
xchg
push
pop
or
mov
pop
pusha
cmpsb
aaa
cmp
cmc
lret
jnp
scas
rcr
pop
xchg
mov
into
jno
mov
int3
or
xor
pop
xchg
sbbl
pop
ja
leave
lret
pop
int3
loopne
pop
xchg
jmp
loope
push
hlt
pop
pusha
dec
rcrl
fcoml
mov
lods
cmp
sti
pop
add
and
mov
fstp
xor
mov
cli
xchg
call
and
inc
dec
dec
cld
sub
mov
lods
xor
adc
lods
imul
fisubl
dec
scas
pop
xchg
push
je
testb
stos
jecxz
decb
clc
and
out
pop
dec
jne
shll
mov
mov
outsl
cmp
jge
scas
and
inc
dec
pop
add
push
inc
pop
inc
pop
int3
ja
jo
int
sub
sub
cmp
pop
push
dec
sbb
mov
sub
int
mov
push
mov
pop
pop
in
pop
rcl
pop
inc
xchg
jb
xchg
pop
mov
leave
test
aad
gs
jbe
xlat
imul
stos
sub
scas
hlt
or
mov
inc
mulb
jno
cltd
mov
sub
cmpsb
inc
stos
inc
arpl
imul
cli
lret
mov
in
pusha
dec
pop
inc
andl
push
mov
jecxz
add
lret
push
aad
mov
insl
xor
pop
roll
mov
aas
std
nop
dec
xchg
gs
cli
dec
ret
push
ss
in
jns
loop
sbb
sbb
jecxz
gs
sub
jae
out
int3
lea
cmpsl
push
out
test
mov
cltd
pusha
leave
int3
aaa
pop
adc
into
divb
jge
sub
and
inc
mov
and
je
xchg
addb
push
pop
dec
add
cli
popf
mov
jbe
sbb
pop
popf
push
and
jl
stc
out
push
mov
clc
mov
dec
popf
inc
push
lahf
jnp
xchg
lret
fistl
sbb
sbb
cmpsb
lods
out
mov
ljmp
cmp
fwait
dec
in
pop
mov
int
rcrb
and
lds
xor
mov
fnsave
and
fs
ficomps
jmp
pop
in
insb
or
mov
mov
jp
int
lds
push
loopne
xchg
ud2
sti
lcall
adc
lahf
cmp
andb
pop
xor
mov
rcrl
mov
shlb
int3
pop
bound
out
pop
mov
jl
int
idivl
mov
pop
std
mov
jg
pop
decl
mov
stc
push
mov
andb
jb
xchg
cwtl
daa
push
wrmsr
aad
sbb
dec
mov
xor
sbb
mov
das
or
xchg
jb
xor
pop
jle
cmp
sbb
lods
pop
pop
call
mov
cmpsb
ljmp
cmc
pop
xor
aaa
push
mov
adc
in
push
and
popf
pop
sbb
mov
or
pop
push
push
sbb
hlt
xchg
and
insl
push
in
decb
je
cwtl
enter
dec
sub
pop
int3
pop
scas
jb
nop
imull
icebp
out
arpl
pop
enter
subb
ljmp
mov
stc
pop
mov
incl
sub
fldenv
pop
pop
idiv
test
test
and
xchg
shll
imul
or
ljmp
pop
stos
xor
dec
enter
push
fsubl
or
mov
shlb
lahf
sbb
jmp
mov
push
pop
aad
lahf
mov
mov
pop
inc
fwait
mov
cmc
xchg
add
pop
loope
jb
jecxz
mov
lret
or
int3
pop
inc
pop
sub
subb
int
dec
dec
outsb
out
or
lret
clc
add
dec
mov
sbb
jg
push
sahf
pop
or
push
mov
lea
pop
sub
mov
cmp
dec
rclb
dec
inc
mov
sahf
and
popf
mov
xchg
int
sub
mov
jle
xchg
cmp
int
insl
lock
roll
fistps
mov
jns
xchg
fsts
push
push
add
scas
in
pop
mov
mov
daa
xrelease
push
fdiv
dec
pop
test
aas
nop
pop
sahf
sbb
dec
lcall
in
pop
movb
xlat
int
ljmp
iret
cld
pop
jb
dec
dec
stos
lea
pop
mov
int
pop
loopne
enter
sbb
pop
js
mov
sub
pop
pop
xchg
jae
jo
push
adc
or
ds
xchg
nop
out
mov
fisubrs
pop
cmp
lods
out
int
jo
mov
std
cltd
sahf
mov
mov
mov
xor
rol
pop
adc
push
or
mov
sahf
dec
xchg
pop
testb
pop
outsb
xchg
lret
push
rcrl
fnstsw
jo
scas
data16
enter
dec
lcall
int
cmp
call
or
xchg
sub
rorl
stos
repz
xlat
xchg
jle
jns
cmp
pop
push
add
mov
insb
and
imul
fstpt
fdivl
push
xchg
mov
cmp
pop
outsb
mov
les
mov
pushw
stos
or
xchg
into
fistpl
pop
mov
int3
out
pushf
shrb
pop
adc
pop
stos
loopne
add
fs
pop
ret
bound
cmp
mov
rcrl
cmc
jbe
jns
mov
outsl
xchg
or
fstpl
icebp
aam
xlat
or
leave
jbe
inc
and
mov
in
pop
pop
mov
pushf
jns
push
jbe
mov
dec
mov
outsl
push
pop
std
lea
cmp
pop
out
lret
fistl
aas
xor
or
xchg
sbb
mov
stos
std
dec
cmp
pop
nop
mov
shrl
mov
jnp
mov
leave
cltd
xor
mov
or
add
push
jnp
push
pop
mov
ja
adc
cmp
pop
sub
adc
lods
rorl
dec
push
int3
mov
lcall
push
outsl
dec
lret
xor
adc
pop
xchg
jb
stos
pop
mov
jo
dec
jo
mov
and
cmp
mov
push
fstps
adc
out
inc
sbb
subl
mov
cmpsl
popa
push
push
outsl
addr16
mov
pop
in
lds
aaa
insb
xor
call
int3
and
mov
sbb
int
mov
sub
jb
fmuls
clc
fbstp
call
shll
pusha
adc
xchg
scas
pop
daa
js
in
inc
mov
movsl
cmpsb
js
and
cmp
pop
or
push
jmp
push
push
out
dec
mov
pop
jbe
jecxz
inc
cmc
jecxz
icebp
inc
pop
adc
push
aad
aaa
dec
pop
dec
pop
lret
jo
sbb
pop
pushf
lea
mov
loopne
movsl
int3
xchg
std
mov
lcall
or
sub
jecxz
mov
jg
xor
aam
loop
hlt
bound
pop
lcall
scas
pop
inc
movsl
movsb
push
xor
push
loop
iret
pop
cli
addr16
cmc
and
mov
enter
pusha
ficoml
in
es
cmpsl
adc
cmc
pop
pop
js
jnp
int3
imull
mov
mov
aaa
add
sub
in
jo
std
pop
ss
int
movsb
sub
push
stos
and
pop
aad
mov
sub
pop
sti
push
dec
repz
cmp
xchg
loope
add
hlt
mov
pop
fimull
leave
mov
pop
jno
or
or
test
sub
pop
cmp
jle
or
addr16
xchg
mov
sub
mov
outsl
adc
repz
mov
jb
mov
and
pop
mov
fwait
in
fstps
xor
mov
mov
sub
scas
pop
add
push
sub
in
sarl
negl
pop
jp
or
adc
stos
inc
push
sbb
iret
dec
mov
dec
lret
cmp
in
add
rcrl
mov
mov
cmc
outsb
fisubrl
mov
leave
pop
sbbb
xor
je
mov
xchg
mov
mov
jecxz
jmp
or
cmp
dec
pop
xchg
adc
dec
jbe
mov
pop
pop
push
push
xchg
xlat
je
pop
pop
icebp
or
adc
xor
pop
xor
dec
mov
sub
dec
fdivs
shlb
aaa
pop
push
int
push
and
insb
jne
aas
xchg
aam
or
in
jge
dec
int
addr16
dec
pop
or
jo
ss
les
xchg
sub
aad
rolb
xor
loop
cli
andb
xchg
and
or
mov
in
mov
sti
jbe
dec
ljmp
cltd
mov
xchg
lcall
mov
sbbb
mov
sub
test
mov
and
in
cmc
flds
pop
test
cltd
cmp
jl
sbb
lahf
xchg
out
dec
sub
inc
sarl
xchg
faddl
adc
pop
mov
mov
nop
or
jb
ja
mov
pop
pop
mov
jo
inc
sbbb
pop
mov
cmp
sbbl
inc
or
inc
mov
push
hlt
add
std
in
and
inc
pop
rcl
sub
mov
lahf
lahf
mov
dec
imul
adc
dec
or
cli
sbb
push
imul
sarb
ja
sbb
mov
jg
mov
lcall
pop
fisttpll
fbld
push
pop
shll
mov
dec
mull
ss
push
dec
loop
or
into
sbb
out
cmc
mov
stc
jbe
dec
andb
fwait
lods
gs
push
mov
xlat
pop
mov
pop
xchg
inc
push
push
mov
pop
or
mov
dec
cltd
cli
add
dec
mov
fabs
push
dec
sti
cltd
sbb
sbb
push
mov
pop
sarb
mov
iret
adc
pop
mov
sbb
nop
pop
repz
addr16
push
out
jp
arpl
mov
int
push
les
std
mov
lret
adc
fidivs
mov
jge
std
pop
pop
add
outsl
testb
mov
pop
out
sbb
pop
fcmove
in
push
insb
xchg
test
mov
mov
lds
push
and
dec
dec
imull
pop
pop
mov
jb
lcall
call
je
popf
ret
test
sbb
inc
push
inc
pop
and
test
dec
iret
lahf
insl
pop
jl
cltd
lret
inc
cmp
or
jae
cld
mov
int3
push
nop
std
cmp
into
lea
jbe
inc
sub
aam
icebp
mov
mov
xor
clc
lahf
jbe
mov
hlt
cltd
lret
sub
int
mov
xor
and
sub
rcl
arpl
pop
jg
push
insb
jecxz
loopne
jo
mov
dec
je
xor
jne
leave
pop
cmpsb
test
fcmovne
jns
out
fistpll
pop
lcall
push
push
in
pop
xchg
std
dec
inc
mov
loop
mov
xchg
cmp
in
je
pop
adc
in
jae
lods
sbb
dec
call
fdivrl
jo
mov
or
mov
std
dec
mov
adc
xchg
lods
jge
pop
cmpl
ss
jo
stos
mov
jns
inc
dec
push
pop
pop
mov
dec
bound
xor
push
shll
pop
fcmovb
int3
mov
or
fsubrl
scas
and
adc
into
aam
rorb
hlt
int
pop
ret
xor
cmp
aaa
daa
popa
and
pop
int
pop
imul
add
in
sbb
out
sbb
insl
pusha
testl
dec
mov
add
sbb
clc
push
insl
enter
mov
dec
push
and
mov
aam
mov
out
push
sahf
adc
cwtl
lods
lock
xor
add
icebp
jo
mov
clc
fsubrl
jno
pop
adc
pop
mov
add
pop
xchg
adc
gs
jecxz
cs
and
test
dec
inc
pop
push
inc
mov
jo
ljmp
mov
pop
es
test
out
cmp
push
cwtl
lret
pop
int3
mov
pop
ret
dec
xchg
out
cmp
pop
push
mov
lods
lcall
mov
je
data16
mov
pop
jb
adc
cmpsl
push
push
pop
or
pop
out
mov
lret
pop
faddp
mov
sbb
dec
mov
stc
fstl
pop
and
lahf
adcb
push
push
jg
pop
js
scas
inc
fcomps
or
cmpsb
pusha
mov
divl
mov
pop
mov
or
int
mov
mov
sbb
xchg
fistl
sbb
rcrl
in
mov
mov
test
imull
push
cli
mov
mov
pop
lret
stos
nop
outsb
fwait
push
loopne
xor
pop
dec
adc
or
pop
int
testl
xchg
mov
mov
movups
scas
pusha
mov
xchg
fwait
lods
mov
push
add
sub
add
jp
clc
fsts
das
push
mov
aad
aam
enter
cwtl
xor
in
xchg
xchg
mov
cmp
scas
std
movsb
xor
sbb
mov
imul
cld
and
lahf
fs
ret
mov
add
sahf
add
ja
int3
cmp
popa
inc
add
frstor
sbb
out
cli
divl
ds
daa
scas
and
or
xchg
dec
xchg
push
pop
mov
enter
shlb
les
lds
jp
dec
sbb
sub
ja
and
jo
push
je
jbe
pop
out
sbb
cmc
jns
adc
outsl
add
repz
jmp
incb
ja
adc
pop
scas
xchg
adc
adc
pop
dec
and
add
cld
push
pop
aad
scas
pop
pop
push
loope
fnstenv
sub
dec
sbb
fxch
pop
jne
push
pop
mov
xchg
sbb
pop
ja
sub
pop
clc
int
dec
dec
cmpsb
xor
mov
push
push
push
and
push
bound
xchg
int3
add
imul
lahf
mov
add
pop
fdivrs
stos
sbbl
push
in
negb
xchg
pop
in
push
mov
lods
lret
dec
jns
jns
arpl
add
sub
stos
jae
imul
test
ss
pop
aam
int
dec
pushf
in
add
mov
movsl
xor
or
adc
jbe
fcomps
jb
xor
mov
push
pop
cmp
adc
cltd
iret
xchg
adcl
lds
dec
jmp
sbb
int
mov
mov
mov
xor
sub
sti
xchg
sqrtps
into
mov
cmp
push
push
sub
loope
popf
test
int3
lcall
fisubrl
cmp
rcr
out
adc
fcoml
jl
add
mov
lahf
sbb
stc
test
out
dec
popf
fisubl
cmp
loop
sbb
inc
inc
mov
adc
jo
cli
fisubrs
adcb
pop
sub
mov
mov
xchg
das
pop
int3
jecxz
jmp
stc
cmp
fcoms
ret
clc
stos
jo
pop
xor
xlat
and
add
sbb
fidivl
fldenv
jbe
dec
sbb
lcall
stc
daa
out
test
pushf
int3
dec
out
pop
negb
sbb
sbb
push
scas
jbe
push
in
ds
cs
out
push
pop
lods
repz
das
sahf
jp
scas
sbb
inc
cmp
inc
cwtl
push
pop
sbb
sbb
xor
mov
pop
pop
sbb
inc
scas
nop
shlb
mov
or
mov
xchg
pop
fs
adc
outsl
int3
pop
dec
ds
push
push
setbe
jne
pop
shll
movl
dec
dec
xchg
fs
ds
outsb
lret
pop
push
jmpw
pusha
xor
insb
cmp
fistps
clc
pop
cmc
sbb
inc
fldcw
cld
insl
pop
sub
cmp
add
arpl
mov
lds
mov
push
lret
cmp
imul
xor
mov
cmp
insl
push
pop
mov
imul
jne
sbb
orl
mov
lahf
out
jns
jp
inc
pop
adc
mov
ret
and
dec
sbb
xchg
cmc
fidivl
mov
xchg
dec
dec
mov
mov
in
inc
xlat
in
pop
dec
add
push
dec
xor
lds
mov
pop
fcmovu
lret
sub
es
imul
fildl
dec
les
add
xchg
sub
pop
mov
shrb
xchg
sub
adc
sub
mov
lcall
dec
xorl
jmp
sbb
test
mov
inc
cwtl
fwait
mov
mov
imul
mov
inc
in
js
jb
js
pop
jns
mov
sub
xor
mov
inc
pop
pop
loope
lea
ljmp
mov
int
xchg
or
mov
cs
hlt
cmp
repnz
mov
sub
cmc
mov
pop
fwait
das
hlt
je
lock
xor
in
inc
xchg
fdivl
push
mov
pop
mov
fcompp
std
xor
fldl
pop
ret
inc
dec
pop
lret
es
xchg
push
pop
push
mov
jno
gs
cmp
mov
mov
imul
icebp
pop
inc
mov
dec
gs
and
fwait
mov
sbb
push
and
scas
cmpsb
pop
pop
testl
sbbb
adc
cmp
mov
cmp
pop
mov
jecxz
dec
jl
sbb
mov
jnp
jo
fbstp
mov
cwtl
fdivrp
mov
js
mov
int
imul
sub
cltd
daa
pop
ljmp
jge
jb
pop
jle
pop
cmpsl
xchg
pop
adcl
pop
fwait
pop
movb
cmp
or
and
mov
xlat
inc
pop
push
mov
dec
pop
push
mov
lahf
sbb
xor
xchg
pop
pop
xor
or
loop
cmp
push
mov
int3
pop
outsl
or
in
inc
add
icebp
fcomps
mov
mov
dec
jnp
fwait
xor
addr16
jb
add
stos
xchg
dec
inc
pop
flds
mov
pop
int
outsl
frstor
pop
fs
pop
stos
int3
inc
sbb
addr16
fwait
sti
divl
sbb
xchg
jae
ss
testb
dec
mov
int
xchg
pushf
inc
movsl
or
pop
mov
leave
dec
sub
rorb
test
and
loop
lods
and
lea
das
sub
mov
lret
mov
pop
sub
shll
pop
repnz
mov
lods
sbb
dec
and
mov
and
xor
test
enter
lds
dec
xchg
popf
scas
mov
pop
and
sbb
rcrb
mov
pop
out
mov
jg
ja
outsl
aas
jb
pop
daa
pop
test
negl
add
pop
out
sbb
fadd
jbe
pop
fstl
lds
pop
push
dec
jb
add
cmc
push
sub
push
fs
mov
lods
or
out
dec
mov
cmp
divb
adc
out
pop
nop
mov
dec
fsts
pop
shrb
pop
mov
jno
push
push
pop
sbb
jmp
fs
xchg
fsqrt
aaa
push
inc
shll
in
daa
lret
pusha
pop
pop
sbbl
pop
lret
xchg
and
mov
rclb
in
ss
dec
into
pop
test
pop
dec
mov
gs
sbb
sti
pop
sub
jbe
int3
dec
push
stos
xchg
pop
les
pop
lods
push
cmp
out
jp
pop
sbb
sbbb
mov
fistpl
lret
mov
sub
pop
and
push
ljmp
sub
mov
xchg
pop
pop
jbe
jne
xor
pop
fwait
pop
in
sub
jno
movsl
adc
pop
inc
jg
xchg
loope
dec
leave
stc
mov
push
stc
inc
frndint
loopne
dec
xchg
pop
idivl
test
insb
lods
pop
push
mov
pop
movsb
cmp
adc
mov
pop
repz
lret
dec
pop
xchg
push
jbe
inc
mov
mov
mov
add
jo
mov
pop
lods
mov
int
jecxz
hlt
test
pop
jbe
mov
xlat
pop
xchg
push
lock
outsl
mov
popf
fisttpll
sbb
inc
push
pop
xchg
dec
push
dec
enter
mov
call
adc
prefetchnta
lods
pop
lret
stc
loop
push
pop
pop
shll
pop
dec
into
jo
outsl
mov
dec
int
inc
push
fcoms
mov
sti
pop
and
fcom
mov
cltd
out
mov
dec
mov
inc
mov
xchg
and
push
pop
pop
lcall
xchg
outsl
pusha
fwait
nop
pop
adc
cmpsl
lock
or
push
shll
insl
fsts
cmp
or
in
push
int3
pop
loopne
fmuls
lret
dec
push
xlat
pop
mov
jo
stc
and
fcmovne
sti
jge
mov
nop
imul
inc
xor
cmc
mov
fs
mov
lret
iret
or
add
data16
aam
push
fidivs
cs
scas
jno
movsb
cmp
mov
sub
and
mov
mov
mov
cltd
iret
dec
into
leave
lahf
cltd
add
sub
jecxz
repnz
pop
xor
sub
pop
sbb
rorl
xchg
andl
mov
xchg
xor
inc
sbb
pop
dec
or
cmc
cli
lods
dec
pop
cmp
xlat
test
repz
lret
mov
imul
adc
jbe
sbb
sub
jge
push
xchg
pop
dec
addr16
pop
jns
or
stos
mov
fcmove
jbe
sbb
inc
inc
mov
cs
and
pop
mov
imul
notl
test
push
pop
pop
jbe
hlt
sahf
fsubrl
pop
push
imul
leave
scas
fstl
ror
cmp
stos
scas
sbb
rcr
xchg
mov
fstl
sbb
adc
pop
mov
dec
lcall
mov
or
jbe
pop
icebp
in
jge
and
insb
lcall
sbb
test
movl
outsb
jge
adc
mov
sbb
dec
xor
int3
nop
mov
pop
cmp
xchg
push
push
es
mov
jnp
inc
lret
iret
lret
pop
add
std
pop
lods
lea
sbb
jecxz
call
xchg
test
mov
out
pushf
fisubs
pop
xchg
shrb
movsb
mov
add
or
mov
iret
in
cmp
test
pop
push
aam
adc
jne
dec
lcall
scas
adc
fst
sub
leave
dec
sbb
push
out
mov
int3
mov
xchg
test
lock
sbb
jne
and
inc
sub
pop
mov
ljmp
dec
fnstenv
dec
pop
push
dec
push
leave
pusha
and
mov
mov
push
xchg
out
addr16
les
add
pop
rolb
mov
loope
inc
test
jno
pop
roll
and
jp
jle
pop
mov
mov
jbe
jo
aas
push
fidivrs
cmp
sbbl
and
jo
push
pop
xchg
pop
mov
call
lods
rorl
pop
pop
dec
icebp
ret
push
pop
jecxz
push
pop
pop
push
pop
adc
repz
rorl
out
pop
lret
int
or
rclb
pop
scas
insl
loop
mov
test
sti
xchg
lret
push
pop
pop
pop
rcrl
fs
jecxz
sbb
pop
cmovp
dec
push
push
adc
or
jg
push
imul
or
xchg
xchg
pop
jne
rcl
pop
jbe
xchg
stos
call
pop
int
adc
mov
mov
pop
jmp
fwait
in
out
pop
repnz
xchg
add
xchg
mov
add
pop
jae
popf
movsb
popa
addl
mov
dec
or
sub
add
fbld
mov
mov
andb
bound
or
sub
sub
sbb
adc
pop
loop
lods
mov
cmpsb
lcall
jns
out
fwait
pop
jb
dec
mov
pop
mov
fxch
std
loope
sti
mov
pop
nop
decb
pop
xchg
fiaddl
pop
xchg
rorb
pop
mov
int
xchg
pop
dec
lret
js
jb
pop
pop
data16
inc
fstp
pop
pop
out
sub
xlat
push
test
pop
cmp
icebp
jle
pushf
adc
enter
push
sbb
gs
inc
sub
mov
bound
mov
and
jns
jmp
pop
fidivrl
jo
pop
mov
fs
adc
rcrl
movsb
jecxz
int
fsubrs
cli
scas
mov
add
mov
fwait
cwtl
jae
popa
pop
arpl
jbe
out
xchg
cmpsl
pop
mov
add
push
repz
xor
cld
rol
int
mov
insl
fsts
mov
into
pop
and
sbb
adc
jo
pop
mov
xor
pop
xchg
xor
xchg
mov
ret
dec
stos
cmp
stos
mov
pop
imul
in
adc
test
cmp
pop
pop
hlt
adc
cmp
pop
pop
fdivs
inc
enter
pop
dec
int3
jl
aaa
mov
sub
rcll
cmp
aas
in
pop
cmp
or
push
std
addr16
mov
and
xor
insl
add
jge
rcll
aam
sbb
aad
adc
ja
cltd
adc
mov
inc
mov
test
in
insl
add
stos
jns
mov
push
faddl
mov
fistpl
insb
mov
lds
int3
sbb
pop
jle
jge
pop
aad
sbb
or
xchg
inc
jns
pop
movsl
mov
pop
enter
shl
xor
sahf
imul
jp
lcall
pop
in
je
outsl
loope
insb
jo
mov
xor
sub
jp
or
lods
adc
mov
mov
dec
push
das
lret
push
ljmp
jl
add
stc
mov
mov
popa
or
inc
ret
fucomp
fbld
ja
leave
or
pop
and
cltd
sub
enter
push
inc
lea
mov
pop
daa
in
aad
xchg
sub
fadd
pop
int
or
in
cli
mov
push
jo
adc
in
jb
dec
push
mov
add
leave
lods
pop
xlat
xchg
sbb
sub
pop
mov
scas
js
push
ret
fldenv
xor
push
xor
ret
pop
mov
cmp
std
loope
xchg
cmp
popf
and
xlat
pop
push
dec
fwait
leave
cmpsl
rorl
dec
pop
or
notb
mov
movsl
pop
ljmp
mov
adc
pusha
lods
daa
pop
int
cmp
lea
adc
and
push
pop
adc
sahf
jae
int3
adc
push
push
std
dec
out
daa
call
xchg
sbb
das
cltd
pop
mov
xchg
jle
xchg
push
pushf
push
jmp
mov
dec
scas
cmpsl
ss
mov
lret
mov
add
pop
insb
call
lea
sti
or
push
sub
jbe
aaa
add
xor
sub
or
fistps
add
std
xor
jo
lods
xchg
data16
leave
pop
fidivl
push
sbb
scas
and
and
aaa
hlt
inc
adc
mov
pop
hlt
jns
repz
inc
sbb
ljmp
pop
mov
int3
cmc
adc
xor
int
scas
mov
stos
mov
leave
jb
pop
sbb
add
aaa
mov
inc
sbb
pop
test
inc
nop
fdiv
repz
lea
mov
or
cmp
inc
in
lcall
xchg
scas
add
sub
mov
and
xchg
xchg
pop
mov
arpl
pop
pop
push
mov
push
sbb
push
xchg
mov
mov
pop
pop
shlb
ficoml
lods
bound
sbb
loop
and
aam
xor
out
mov
cwtl
mov
add
cmp
gs
int3
insb
cs
aas
ja
ljmp
xchg
mov
movsl
cld
aaa
ljmp
lcall
fwait
scas
mov
jo
in
mov
subl
cs
in
test
mov
fdivr
outsb
mov
hlt
mov
or
mov
pop
mov
jbe
add
mov
js
jle
push
pop
repnz
jns
in
int3
sub
data16
shlb
xor
pop
xchg
idivb
lds
xorl
aad
jg
pop
mov
jb
jl
push
pop
jmp
jge
sbb
jbe
pop
or
xor
dec
ret
xchg
sub
jecxz
xchg
lahf
jns
cmp
popf
xlat
inc
xchg
int
lret
pop
mov
sbb
xchg
bound
or
lret
subl
jnp
ds
rcrb
sbb
dec
xchg
adc
cmp
shlb
mov
mov
int
pop
sbb
xor
jb
cmp
mov
andb
out
cmpsb
std
aaa
stc
mov
mov
and
pop
repz
pushf
push
mov
popf
ljmp
pop
adc
push
push
mov
cmp
pop
xchg
arpl
add
jge
push
call
imul
movsb
scas
pop
xchg
cmpsb
mov
jbe
iret
inc
arpl
mov
repnz
adcb
pop
popa
push
or
dec
sbb
sbb
sub
les
int
pop
mov
jecxz
mov
lea
push
xor
xor
mov
mov
mov
inc
jmp
nop
dec
mov
arpl
adc
sahf
stos
sbb
jmp
push
pop
xchg
push
add
push
pop
mov
or
movsb
sbb
scas
loop
pop
sub
sbb
cwtl
and
rcll
pop
test
xor
add
ret
mov
push
xor
sti
add
dec
dec
or
enter
cmpsl
sbb
sub
jno
int
mov
xchg
sbb
sub
pusha
es
fldl
insb
in
inc
shrl
jmp
sbb
js
mov
sbb
fcmovnu
pop
repz
xchg
inc
mov
pop
jnp
mov
sbb
fimull
sbb
and
lds
sbb
inc
or
jp
push
ds
out
dec
int
out
pop
mov
pop
mov
cmc
pop
pop
rcll
cmp
and
adc
mov
sbb
mov
movsl
int3
aad
divb
mov
out
aas
sub
add
dec
sar
aaa
pop
sub
loope
pop
pop
cmp
imul
inc
popa
pop
ds
xchg
xchg
scas
bound
sbb
or
fsubs
nop
push
pop
ror
mov
pusha
int
mov
push
movsb
ja
pop
sub
mov
inc
pop
mov
pusha
insl
pop
clc
orl
in
sbb
pop
inc
jmp
or
mov
push
pop
dec
mov
mov
lret
push
sbb
rcrb
inc
mov
in
inc
xchg
cmpsb
xor
pop
movsl
out
jbe
mov
lret
pop
fnstenv
sbbb
xchg
dec
adc
pop
ficoml
fistl
pop
divb
into
push
enter
mov
inc
xor
cmp
pop
xor
stc
scas
or
xchg
sbb
loope
lcall
push
popa
lods
xchg
mov
xchg
fs
dec
pop
ficoms
lcall
les
xor
dec
and
fdivp
movzwl
mov
sbb
popa
sbb
dec
int
mov
and
divl
add
add
sahf
pop
jle
mov
testl
das
mov
or
push
pop
aas
jns
cltd
mov
mov
jne
or
sarl
push
cwtl
pop
cld
sub
leave
jbe
xchg
loopne
icebp
movsl
pop
dec
ss
mov
in
pop
pusha
jae
pop
cmp
int3
call
dec
call
lds
mov
cmpsl
aas
pop
add
cmp
lret
fcoms
cmp
scas
fistpl
add
mov
push
cmpl
sbb
lea
pop
jl
xchg
cli
jbe
dec
repnz
xchg
push
lcall
jge
inc
sahf
xor
mov
or
enter
test
pop
or
dec
and
cs
aas
gs
out
addr16
xchg
scas
lock
mov
cmpsb
ss
addr16
lahf
std
sti
lcall
in
xchg
das
cmp
scas
mov
in
popa
pop
movsb
cwtl
int
daa
scas
fidivl
push
cld
mov
pop
pusha
jbe
mov
mov
out
inc
enter
inc
test
dec
pusha
je
mov
sbb
adc
fsubrs
sbb
pop
js
ret
insb
add
cmp
cmpsb
lahf
pop
inc
cs
cmp
fcoms
push
in
pop
pop
xlat
push
adc
popa
out
push
mov
in
mov
popl
pop
xchg
jge
sbb
push
lds
xchg
mov
mov
sbb
mov
add
in
sub
ss
fisttps
sbb
mov
jae
jns
inc
pop
jmp
fxch
sub
dec
pop
mov
xchg
mov
movsl
cltd
sub
negb
addr16
leave
pop
jg
bound
mov
jo
mov
mov
jmp
inc
fsubrs
popa
les
nop
xchg
pop
dec
cltd
or
sbb
rcrl
inc
jl
nop
les
push
repnz
or
ds
int3
inc
sbb
out
adc
lret
popa
cli
xor
xchg
lret
pop
ja
cmpsl
clc
outsb
inc
stc
stc
fsubrs
mov
jno
test
push
jge
rorb
movsl
push
shll
out
sbb
push
xlat
mov
lds
orl
jle
push
pop
add
aas
push
cmp
test
pop
push
mov
sub
jle
lret
xchg
out
xchg
mov
lret
popa
or
mov
fs
xor
rclb
xchg
pop
bound
cmp
test
or
xlat
enter
pop
mov
adc
jae
sbb
sub
pop
data16
icebp
mov
sbbb
ret
sbb
or
push
adc
mov
out
pop
les
test
or
and
negb
xorl
pop
leave
push
lahf
es
mov
and
inc
pop
xor
sbbl
gs
fwait
and
dec
pop
inc
jne
out
testl
pop
scas
gs
popf
fsts
mov
rcrl
cld
inc
mov
pop
cmpsb
jp
sbb
out
aaa
mov
pop
pop
xor
fcomps
pop
fdivl
dec
jmp
jnp
inc
pop
fnstsw
pop
inc
push
test
outsl
and
mov
mov
rcrl
xchg
scas
xchg
sbb
dec
pop
pop
out
mov
stos
push
xchg
jo
into
jne
pop
hlt
fcompl
nop
repz
testl
andl
loope
call
fwait
push
je
pop
je
mov
jl
leave
lret
int3
in
push
sbb
xchg
inc
scas
mov
lds
pop
add
popl
notl
sub
jle
cmp
and
cmovg
loop
fstpl
gs
ja
insl
mov
pop
and
cmp
ret
pop
aad
push
pop
pop
dec
js
inc
ss
outsb
and
loop
lods
shrl
dec
mov
sbb
push
sub
cmp
loop
inc
in
stos
dec
pop
mov
mov
adc
jno
dec
add
mov
pop
xchg
pop
cmpsb
insl
push
jge
pop
cmpsb
mov
and
lret
pop
mov
loop
in
push
xchg
cld
loope
or
ljmp
pop
into
imul
dec
fucomip
pop
repnz
nop
stc
jae
inc
data16
pop
push
fimuls
mov
mov
mov
and
mov
add
inc
cmp
pusha
xor
mov
lock
dec
mov
mov
cmpsl
cltd
xchg
jg
push
pop
xor
xchg
jle
test
mov
xchg
cld
inc
lcall
pop
push
lret
add
mov
xchg
mov
pop
mov
jecxz
mov
icebp
lret
push
dec
fnstsw
lods
cmc
jo
lret
aas
cli
xorb
cld
leave
sub
in
pop
jl
mov
das
test
mov
popf
shlb
fidivl
scas
sbb
and
cmpb
stc
mov
adc
pop
sbb
mov
push
inc
mov
lods
jno
pop
mov
jae
fiaddl
push
icebp
xorl
jae
pop
cmc
adc
loope
pop
sbb
shlb
pop
mov
ficoml
cld
mov
dec
inc
pop
rorl
xchg
jb
aas
or
mov
idiv
sub
dec
lahf
mov
out
sbb
inc
dec
sub
and
fcomip
dec
popa
pop
mov
and
mov
outsb
scas
mov
push
ficomps
mov
fs
and
sbb
fisttpl
sub
out
sbb
fs
jecxz
and
lcall
push
cmp
add
add
out
popf
pop
stos
int3
filds
pop
sbb
lods
and
pop
or
and
in
iret
out
enter
lock
xchg
test
mov
add
adc
mov
push
dec
in
rolb
movl
sub
test
test
mov
xor
pop
and
mov
dec
xchg
leave
dec
mov
pop
pop
lahf
call
cmp
adc
fwait
jno
bound
add
jns
pop
int
sub
xor
dec
shll
es
loope
mov
bound
pop
clc
imul
out
call
mov
cmpsl
testl
pop
popf
mov
xor
daa
mov
sub
xchg
cmc
jbe
dec
cmp
xchg
pop
out
adc
pop
pop
sbb
outsb
pusha
pop
lea
jl
add
pop
loopne
jge
push
ret
pop
mov
int
movsb
ljmp
xchg
adc
dec
repz
xchg
xor
cmovs
pop
xchg
icebp
jno
push
push
ficomps
or
pop
int
outsl
nop
pop
mov
sub
push
or
ds
pop
dec
int3
aad
popf
aam
pop
sbb
mov
add
pop
adc
sbb
shl
xchg
fwait
mov
pop
std
jnp
sub
pop
jbe
fdivs
pop
sub
and
int
in
jecxz
xlat
scas
lods
or
pop
push
mov
pop
push
add
cs
xchg
fs
xchg
dec
xor
pop
scas
hlt
inc
adc
ja
push
pop
pop
add
ljmp
jbe
aaa
sbbl
iret
xchg
mov
dec
pop
mov
sti
mov
jg
stc
lods
inc
mov
sub
int
je
js
int3
lret
pop
cltd
idivb
repnz
pop
or
fldcw
pop
ret
adc
sbb
pop
and
jecxz
mov
inc
test
push
pop
and
mov
rclb
add
jb
sub
ret
push
sub
cmc
inc
and
sbb
imul
daa
or
and
dec
inc
push
push
mov
sbb
es
xchg
pop
popa
pop
stos
adc
pop
out
xchg
test
in
clc
jne
fstps
push
ret
jb
data16
ljmp
daa
imul
jecxz
sbb
pop
or
and
ficomps
dec
imul
jbe
loop
inc
add
pop
xchg
std
popa
lock
mov
sbb
pop
mov
or
or
out
dec
jns
pop
xchg
jg
push
insb
mov
jb
pop
sbb
pop
push
in
sbb
aad
adc
cwtl
hlt
jl
pop
stos
repnz
int
and
inc
xchg
in
pusha
nop
daa
js
pop
lcall
int
mov
xchg
in
pop
bound
jg
adc
pop
mov
rorl
or
and
hlt
lds
mov
or
stos
pop
in
into
fsubr
jle
pop
fldl
iret
pand
aaa
jo
pop
cs
cmc
dec
mov
jo
and
movsl
pop
or
and
sub
xor
add
inc
xor
ficompl
pop
sbb
jns
dec
movsb
jecxz
jge
adc
std
mov
cmp
cmpl
cwtl
movsl
nop
scas
int3
dec
xor
mov
les
enter
sbb
xor
and
mov
push
or
jne
cmpsl
mov
lret
xor
xchg
insl
cmp
adc
mov
shlb
push
loop
mov
lcall
lods
je
and
lcall
filds
sti
pop
push
jo
cltd
nop
in
mov
jmp
aas
out
inc
jae
pop
jnp
inc
push
jg
movl
pop
and
dec
imul
mov
movsl
pop
jp
fadds
popa
mov
cld
cltd
test
cmc
cwtl
lahf
pop
push
sbb
inc
push
push
aas
mov
pop
jle
dec
scas
int3
xchg
or
mov
dec
cli
jle
dec
mov
inc
sub
and
mov
in
idivb
test
pop
mov
enter
pop
lods
addr16
aad
inc
movsl
lret
pop
and
hlt
add
repz
pop
mov
sbb
lret
mov
out
dec
scas
sub
loopne
inc
hlt
sti
shll
cmpsl
into
ficompl
pop
mov
inc
inc
int3
or
push
xor
mov
pop
je
fbld
scas
pop
stos
std
dec
cli
cmp
pushf
push
cmpl
in
pop
fs
mov
test
das
adc
lods
imul
outsl
scas
adc
xchg
push
mov
dec
adc
cld
pusha
jb
sbb
rcr
cmc
dec
fistl
pop
adcl
pop
cmp
test
dec
sbb
fidivs
mov
pop
jp
dec
jb
sbb
lea
jbe
pushf
int
jno
stos
scas
or
and
inc
int3
mov
inc
inc
xchg
xchg
mov
mov
jl
pop
mov
bound
ja
mov
es
inc
and
jbe
sbb
addr16
into
lods
test
jnp
sti
int3
xor
xorb
sbb
adc
lods
xor
clc
mov
fsubr
sbb
sub
shlb
add
rorb
push
leave
cmp
pop
mov
inc
pushf
pop
mov
lods
jo
pop
inc
iret
decb
xrelease
shrl
xchg
ja
mov
pop
mov
mov
push
fsubs
jb
cmp
int3
sub
out
das
mov
loopne
movsl
cmp
mov
and
mov
xor
and
loop
cmpsl
out
cs
dec
and
pop
outsb
es
in
sbb
mov
inc
mov
loope
cltd
sub
or
in
pop
mov
lock
cwtl
es
mov
pop
popa
push
shrb
popf
push
test
pop
pop
push
int
aam
je
inc
push
cmp
jmp
inc
mov
aam
in
fistpl
in
rcrl
sub
mov
nop
inc
sbb
in
cltd
sbb
lahf
imul
cltd
jmp
pop
pop
dec
inc
add
int3
xor
xor
pusha
inc
imul
dec
pop
dec
or
lods
xchg
rcr
add
jg
mov
cmp
lret
add
les
cs
xchg
roll
loope
pop
fs
std
inc
xor
sub
cmp
inc
in
out
push
mov
pop
outsb
or
add
pop
pop
adc
jb
push
mov
leave
cs
loope
mov
mov
insl
test
push
pop
test
lea
pop
je,pn
jg
push
adc
shll
in
cld
sub
std
jb
add
xlat
dec
jmp
dec
jp
jbe
ja
sbbl
dec
pop
in
cmpsl
adc
scas
lds
inc
ds
fstps
add
addr16
lcall
ds
mov
xchg
xor
fmul
loop
int
pop
sarb
shl
icebp
xchg
adc
call
xchg
push
pop
dec
test
jl
pop
and
into
sbb
popf
pop
push
add
push
dec
test
loopne
out
int
cmpsb
ret
mov
cmp
or
mov
push
xchg
pop
inc
ljmp
push
pop
pop
push
scas
gs
mov
sub
in
cmp
push
jo
test
pop
cmp
lock
mov
xor
rcrl
loope
cltd
pushw
inc
pop
ret
lret
xchg
push
adc
sub
pop
inc
mov
jecxz
repnz
loop
xor
mov
xchg
dec
sub
data16
xlat
and
jg
out
lea
testb
clc
mov
in
add
cmp
addb
stc
push
and
fcoml
pop
sbb
pop
std
loopne
in
call
xchg
jno
scas
pop
fwait
clc
test
imul
sbb
pop
push
std
in
and
pop
sub
lods
in
cwtl
xor
xchg
xchg
mov
loop
stos
sbb
gs
pushf
jnp
stc
push
mov
insb
cmp
fsub
test
inc
sbb
sbb
push
aam
cltd
icebp
pop
adc
ss
xchg
mov
dec
xor
cmp
das
pop
cltd
sub
mov
sub
pop
int
sbb
adc
pop
fsts
in
jne
and
orb
or
pusha
add
lret
pop
cmp
jle
lret
pop
ja
dec
ret
jnp
jge
enter
adc
xor
out
pop
lods
pop
pop
add
out
inc
pop
out
sub
jo
pop
sub
and
pop
push
enter
pop
xor
pop
repnz
int
incl
pusha
jecxz
mov
pop
cwtl
negb
mov
out
pop
fistps
mov
jl
dec
les
jl
or
pop
mov
lahf
or
xor
dec
jbe
push
hlt
xchg
fistl
pop
push
sbb
mov
mov
std
pop
pusha
xor
add
mov
test
cs
cmp
ret
push
es
add
cmpsl
lods
xlat
or
sbbl
mov
iret
adc
inc
in
int3
test
out
inc
aam
pop
stos
xor
lcall
rorl
jge
xchg
mov
jle
inc
mov
adc
ret
push
inc
push
lods
xor
sub
cltd
xchg
pop
pop
aas
adc
push
out
xchg
int
aam
repz
jle
arpl
pop
add
lcall
int3
jg
leave
mov
add
dec
push
into
xor
or
push
cmp
loopne
lcall
lds
hlt
jb
pop
mov
out
in
es
pop
jns
movsb
or
sub
cmpsb
pusha
sub
mov
and
in
mov
jbe
hlt
ds
xchg
mov
lahf
inc
stc
or
add
into
pop
sub
xchg
xlat
jne
and
jo
test
inc
xor
push
imul
mov
int3
pop
lret
mov
jg
ret
push
sub
lods
lds
cs
popf
fisubrl
pop
pushf
mulb
bswap
fdivrl
cmp
pop
fs
dec
push
lahf
mov
pop
pop
jnp
rcrl
repz
dec
mov
pushf
xor
inc
sub
and
rcrb
jns
inc
out
sub
mov
lea
xchg
lcall
cs
dec
sbb
push
mov
mov
xchg
xchg
mov
sub
push
lods
pop
cmp
pusha
sub
ljmp
mov
inc
fxtract
repnz
pop
mov
sbb
jb
or
jp
mov
pop
cmp
mov
dec
hlt
cmp
xchg
imul
pop
int
popa
sbb
mov
xor
xor
add
inc
int3
mov
stc
xchg
mov
push
pop
das
mov
sub
repz
test
mov
pop
rcrl
push
fsubs
mov
inc
out
mov
scas
cmp
outsb
ja
add
pop
sbb
jg
dec
push
rcrb
jae
fisubl
push
pushf
lods
gs
into
lock
mov
cmpsb
lret
xchg
pop
sub
dec
jb
sbb
in
pop
jne
xor
stc
mov
pop
jnp
pop
adc
ror
mov
cmp
or
scas
sub
xor
sub
xchg
jae
push
xchg
fisttps
cmpsb
fstps
add
or
outsl
xor
cmpl
fwait
int
daa
push
pop
out
inc
insb
stc
aad
inc
sub
cmp
cmpsb
imul
and
sbb
aas
pop
mov
dec
shr
cld
stc
pop
mov
out
pop
je
dec
or
add
xchg
cmp
inc
scas
pop
rcrl
lds
and
xchg
scas
push
push
push
aam
xor
shll
add
jp
pop
adc
add
sbb
jecxz
arpl
testl
push
cs
jle
jo
pop
xchg
adc
icebp
movsb
cwtl
jbe
fistl
or
mov
cmpb
sbb
add
inc
lea
cli
in
iret
scas
fistpll
popf
fsubrs
aad
pop
out
std
adc
pop
pop
mov
dec
repnz
ficoml
mov
xor
mov
dec
cmp
adc
jbe
lahf
jg
into
push
xchg
jb
push
push
fxch
mov
jnp
jge
sub
mov
dec
add
adc
and
pop
sub
fs
jp
cmc
lcall
pop
inc
add
repz
dec
fidivrs
stc
cmpb
fldt
ret
and
clc
leave
scas
and
test
fisubrl
bound
xlat
pop
popf
push
stos
jp
sbb
push
mov
and
jne
mov
fs
jbe
cmp
mov
sub
andl
cmp
jb
mov
pop
fwait
adc
dec
sbb
rcrl
cwtl
push
pop
sbb
mov
lahf
xor
pop
clc
mov
js
pop
insl
and
jmp
int
lcall
push
jb
jne
repnz
add
sbb
jmp
adc
cmp
cmp
js
pop
xor
dec
xor
xor
mov
pop
and
js
pop
pusha
test
sti
pop
or
enter
jbe
pop
add
sub
lods
ret
test
pop
jmp
sbb
xchg
mov
pop
jmp
aad
adc
jne
sbb
sub
adc
je
mov
pushf
xor
mov
pop
ror
adcb
fsubrs
pop
mov
pop
push
sbb
daa
xchg
loop
cmp
add
mov
or
or
pop
pop
movb
std
lahf
outsb
xor
vcvtsd2ss
push
pop
adc
iret
int3
icebp
xchg
fstps
jp
rorb
jge
pop
add
adc
outsl
sbb
add
out
jnp
dec
icebp
lock
pop
xchg
cmp
icebp
adc
mov
dec
das
cmp
out
mov
inc
mov
in
sbb
pusha
imul
pop
fisubrl
es
enter
push
lahf
loop
lock
push
idivl
xchg
in
pop
int
repz
mov
pop
pop
and
stc
xchg
insb
pop
jbe
mov
add
cs
mov
push
pop
jo
jp
imul
fstpl
sbb
testl
int3
clc
aaa
mov
jbe
pop
cmp
enter
jo
popa
pop
mov
ds
push
jo
mov
mov
in
mov
cmpl
adc
lahf
lret
or
popa
cld
mov
cwtl
pop
mov
mov
daa
or
pop
test
loope
adc
dec
pop
mov
pop
pushf
push
jbe
xchg
aad
mov
and
jl
fnstsw
mov
adc
mov
pop
aam
mov
pop
sub
lods
addr16
push
aas
pop
jb
pop
iret
in
adc
repz
mov
pop
arpl
int3
js
push
repnz
and
push
inc
nop
popa
pop
test
mov
pop
aas
jno
inc
pop
xor
testl
enter
sahf
dec
inc
mov
inc
mov
stos
push
ja
rcrl
arpl
pop
push
mov
adc
repz
jb
xchg
jp
shll
xorb
clc
cmpsl
pop
add
out
and
jno
xchg
pop
sbb
pop
jb
clc
push
dec
add
in
mov
pop
rorl
ja
js
jl
int3
lret
imul
les
pop
jb
cwtl
lret
stc
out
popf
mov
mov
ret
cmp
call
cs
pop
xchg
sarb
stos
sbbl
xlat
fisubrl
or
cmp
scas
out
fs
lret
negb
lods
pop
mov
and
mov
xchg
dec
mov
outsl
popa
call
sub
cwtl
mov
les
jbe
test
lcall
pop
pop
sbb
jnp
push
mov
int
jno
inc
pop
pop
gs
rcll
pop
enter
push
pop
orl
xlat
lea
sbb
pop
pop
testl
jns
cmpsb
sub
out
sarb
out
pop
push
orb
xchg
int
pop
andl
shll
sbb
pop
pop
dec
mov
mov
push
repz
sbb
or
sbb
clc
cmp
and
jns
add
stos
data16
sub
rolb
dec
in
lcall
pop
fsubrl
cld
sbb
mov
mov
in
rolb
mov
es
sub
or
cmp
stos
cli
les
fcoml
mov
xchg
sbb
or
out
xor
sbb
xor
jmp
movzbl
or
pop
xor
leave
xor
lret
je
lahf
push
mov
jle
jge
mov
cmp
mov
int
jge
mov
jg
or
jbe
pop
sbb
subl
add
adc
push
push
loop
xor
loopne
sub
adc
imul
push
mov
test
xor
pop
or
mov
ror
addps
je
and
in
mov
pop
cwtl
and
lahf
int
movl
pop
cmpsb
mov
pop
jae
add
mov
adc
int
mov
xchg
test
aad
es
outsl
mov
jno
xor
sbb
pop
bound
decl
inc
pop
in
jb
stos
aas
and
jno
repnz
sbb
lcall
addr16
xchg
jae
mov
je
adc
cltd
dec
sti
pop
add
ss
lea
bound
jbe
iret
pop
push
jmp
ja
mov
sub
mov
xor
pop
sahf
mov
mov
fcomps
movl
dec
inc
xchg
cmp
leave
negl
sti
xor
sahf
dec
pop
jnp
dec
aam
mov
test
sbb
pop
push
in
in
mov
dec
push
scas
stos
cmc
jmp
sbb
cmp
loop
flds
ljmp
pop
fwait
je
add
pop
mov
inc
fildl
incb
push
fs
xchg
iret
rcrl
mov
fldcw
loopne
in
pop
dec
arpl
insl
fidivrl
lock
xchg
mov
mov
les
clc
xor
ds
sbb
out
xchg
pop
test
mov
mov
stos
ret
adc
jb
cmp
mov
shlb
int
fsts
pop
xchg
push
in
sbb
dec
pop
xchg
xchg
rcrl
xorb
das
jne
jl
dec
pop
mov
xchg
int
imul
mov
pop
dec
sub
pop
sbb
mov
rcl
sub
sbb
pop
push
roll
leave
lds
mov
iret
jl
adc
test
aaa
shrl
mov
mov
int
mull
rolb
dec
in
test
xor
ds
or
test
pop
popa
js
cs
cmp
add
mov
mov
call
mov
lods
cltd
adc
jecxz
jbe
push
rcrb
movsb
xchg
pop
xor
dec
mov
cmp
or
mov
add
pop
cmp
mov
dec
popa
imul
fsubrl
pop
add
adc
ficompl
pusha
mov
movsl
pop
mov
fchs
scas
sub
mov
jne
cmp
aaa
xor
lret
inc
or
jb
in
and
sub
cmp
pop
push
test
mov
mov
jmp
addr16
pop
add
lahf
into
scas
out
inc
xchg
cmp
pusha
sbb
lret
hlt
in
push
inc
out
sbbl
inc
fldt
push
xchg
inc
out
stos
mov
sbb
cli
call
cwtl
push
xchg
and
ret
dec
mov
fistps
ljmp
mov
pushf
es
pop
jg
jno
cmp
mov
add
in
fistps
test
sbb
mov
imul
xor
in
jecxz
xlat
pop
mov
mov
pop
das
add
test
pop
aaa
pop
mov
int
xchg
icebp
push
sbb
pop
pop
cmp
or
mov
pop
pop
fs
filds
icebp
fidivrs
or
push
out
add
popa
ds
mov
cmp
mov
pop
inc
sti
inc
test
sub
xor
pop
test
lea
jns
jle
fstpl
dec
or
cmp
lcall
cmp
movsl
push
fnstenv
out
rcr
popl
sbb
pop
dec
pop
int
cltd
pop
movsb
fsts
jnp
das
xor
xchg
push
cmp
cmp
lahf
or
pop
data16
dec
cmpsl
pop
test
xchg
imul
jbe
pop
lods
pop
push
pop
xor
lea
enter
int
push
pop
sbb
jb
dec
pop
sub
mov
pop
int
jbe
sbb
push
jne
icebp
ret
sbb
cs
decl
enter
dec
mov
scas
and
adc
nop
lods
fucom
fiaddl
cmp
sbb
push
in
scas
cmp
and
lock
sub
cltd
and
out
dec
add
push
cmp
mov
stos
loopne
and
push
fisttps
sbb
sbb
test
or
scas
aaa
dec
jmp
roll
negb
in
mov
mov
ffreep
in
sbb
cmp
shll
pop
inc
xchg
mov
pop
add
pop
inc
popa
lds
pop
push
sti
pop
shrl
mov
cwtl
xchg
push
add
adc
xlat
mov
jb
pop
sub
mov
popa
push
add
mov
fists
push
je
dec
pop
mov
lods
lods
and
out
jecxz
sbb
xchg
jno
sbb
addr16
ret
push
dec
test
push
fs
cld
int
mov
outsl
fwait
nop
in
pop
cmp
sub
lcall
test
lcall
push
negl
or
pop
lds
jbe
cld
int3
lock
hlt
xchg
sbb
inc
fsubrs
rcrl
xchg
jbe
pop
out
or
sub
jmp
mov
out
pop
in
xchg
stos
push
add
mov
cmp
inc
ret
out
jl
xchg
ss
adc
sub
in
jnp
dec
pop
hlt
nop
dec
push
cmp
or
sub
fucomi
or
fiadds
pop
xlat
xor
mov
in
inc
pop
sbb
outsl
insl
and
pop
fisttpll
cmc
sbb
push
sti
iret
push
sbbb
dec
mov
aam
adc
out
mov
pop
or
jno
push
push
movsb
addr16
pop
xchg
shl
rolb
and
mov
fbstp
lock
mov
daa
iret
xchg
enter
pop
sbb
cmpl
push
mov
sub
sub
dec
cmp
or
mov
xor
aam
sbb
xchg
cmc
std
nop
adc
cmpsb
adc
out
lods
mov
testb
mov
fdivrl
push
dec
pop
enter
jl
push
pop
shlb
int3
cmp
cmp
mov
shll
mov
popa
scas
or
or
xchg
mov
insl
cmp
ljmp
inc
fsubrl
xor
call
pop
les
pop
insb
repnz
pop
sti
loopne
aas
sub
shrl
call
lcall
xor
sub
pop
add
mov
loopne
xchg
dec
xchg
dec
xor
jb
pop
push
xchg
mov
popf
pop
pop
or
out
dec
clc
fwait
mov
xchg
inc
and
insl
rcrl
push
lods
mov
sub
pop
adc
jmp
pop
pop
aaa
mov
lea
cmpb
into
int
faddl
cmp
adc
lods
sbb
jno
insb
pop
insb
add
js
and
imul
mov
xchg
add
fistpl
scas
xchg
inc
dec
jb
mov
shlb
xchg
sub
push
int3
pop
cmp
mov
pop
inc
jmp
adc
lds
jns
jl
mov
mov
and
push
sub
pop
pop
insl
das
test
int3
xchg
mov
dec
lret
jg
dec
dec
pop
jmp
sbb
pop
inc
lods
mov
mov
jo
pop
lahf
les
mov
xchg
insb
orb
mov
stc
jne
jecxz
mov
mov
orb
movsb
out
outsl
lods
mov
stc
pop
scas
das
insl
movsl
cwtl
inc
arpl
pop
fcmovu
pop
mov
jg
test
mov
pop
pop
lds
sbb
mov
cmp
call
int
sti
pop
pop
mov
mov
xchg
sub
sub
pop
add
mov
in
pushf
pusha
xor
add
scas
rolb
mov
repz
push
mov
ret
faddl
repnz
in
pop
mov
cmp
xchg
int
addr16
scas
inc
in
std
push
nop
pop
jg
cmp
or
stc
lahf
mov
and
pop
jae
incl
jl
popa
pop
fmull
outsb
dec
mov
mov
inc
fdivs
xchg
inc
cli
cmpsb
lods
rep
inc
ret
call
and
mov
into
insb
pop
jne
inc
or
sti
stc
fcompl
cmp
in
scas
aaa
sbb
xchg
jb
pop
scas
icebp
addl
testl
pop
cmp
pop
cmp
je
xchg
push
mov
out
cmp
pop
or
andb
mov
mov
hlt
mul
sbb
cmpsb
mov
adc
dec
jecxz
fstpl
or
pop
pop
push
add
fmul
pop
mov
mov
cmp
or
xchg
pop
inc
lods
jb
clc
inc
xchg
xchg
mov
cmpb
pop
sbb
test
jo
xchg
cmp
push
aaa
int3
je
mov
push
test
push
das
pop
icebp
pop
and
push
in
jp
pop
loop
test
sub
clc
mov
fcmovbe
cmp
xor
pop
cmp
adc
dec
or
sbb
jl
cwtl
jo
pop
jo
data16
mov
loope
push
xor
dec
pop
pop
shll
pop
mov
fstpt
mov
cld
fstpl
jnp
test
xor
cmp
push
jno
gs
pop
lahf
or
imul
pop
cmp
adc
mov
into
sarl
sub
mov
jl
lret
mov
and
lcall
xor
xor
sub
inc
fistpl
ret
push
push
sbb
pop
jbe
add
xchg
dec
add
or
sbb
call
adc
mov
mov
fcmovnb
pop
dec
sahf
mov
lea
inc
push
lret
mov
aas
test
or
hlt
aaa
pop
jmp
jl
mov
pop
movsl
mov
xchg
stos
and
pop
or
sub
xchg
jo
pop
hlt
gs
jge
cltd
ret
mov
pop
pop
mov
in
add
pop
out
leave
push
push
rcll
aad
mov
or
mov
sub
int
mov
mul
fstpt
inc
scas
js
pop
pop
xchg
pop
adc
lods
cmc
in
in
add
call
sbbl
jge
xor
pop
jmp
or
arpl
lret
pop
rcr
inc
sbb
or
sahf
add
pop
pusha
aam
mov
pop
aad
mov
dec
mov
mov
sbb
ja
pop
jnp
in
punpckhdq
out
or
int
mov
push
pop
imul
push
test
lods
push
cwtl
cmc
inc
sbb
push
es
stos
inc
lods
ss
or
mov
cli
sbb
inc
adc
push
out
cmp
cli
lret
mov
push
stos
xor
add
pop
xor
std
push
push
out
mov
adc
lret
sahf
xorl
cmp
aas
mov
mov
fdivl
mov
sbb
mov
jo
ret
lock
decl
out
cmpsl
lret
fidivs
pop
push
adc
sub
mov
loop
sbb
mov
rol
rorb
dec
pop
insb
jecxz
out
outsb
ljmp
mov
xchg
pop
jne
jle
ja
js
dec
push
fidivs
dec
xlat
pop
xchg
int
cmpsl
out
lret
loope
jl
fstpl
out
and
mov
and
pop
mov
mov
jb
addr16
jecxz
decl
lds
inc
pop
sbb
ljmp
sub
cmp
xorl
ja
out
jecxz
sub
pop
shlb
cli
hlt
mov
lds
mov
lods
mov
adc
fcomps
repz
mov
mov
not
loope
ficoml
inc
icebp
mov
popf
orl
adc
int
jnp
xchg
stc
jecxz
add
out
mov
ja
nop
xor
mov
ljmp
and
pop
mov
pop
cli
lcall
js
test
test
xchg
adc
cltd
sbb
add
es
xchg
jmp
xor
aad
insb
sub
aaa
or
inc
pushf
sub
jns
mov
jae
scas
mov
pop
or
push
test
adc
sbb
lahf
sbb
sti
std
pop
dec
jmp
adc
cmp
fldenv
inc
lds
js
shl
jmp
pop
pop
jp
lcall
add
scas
and
cmp
mov
jl
sbb
stos
xor
push
imul
pop
pop
lea
adc
jge
cli
iret
xchg
mov
mov
pusha
pop
pop
pusha
mov
sbb
in
add
stos
pop
frstor
pop
fs
test
jne
pop
fcomp
pop
pop
stos
dec
pop
jmp
xchg
jo
into
rorb
in
push
add
pop
ret
pop
fldl
jecxz
xchg
adc
jecxz
ret
les
out
mov
pop
sti
push
pop
pusha
adc
adc
mov
push
test
pop
push
pop
shrb
cld
pop
outsl
int
and
xorl
or
test
mov
adc
xlat
jp
mov
mov
add
jo
xor
jge
xchg
inc
fwait
out
ljmp
and
insl
pop
xlat
pop
push
pop
mov
pop
je
and
mov
stc
xchg
mov
push
xorb
pop
mov
or
mov
push
int3
loope
push
scas
push
dec
sbb
and
jo
pop
adc
int3
jl
mov
insl
outsl
je
push
mov
ja
dec
xchg
adc
sbb
xchg
pop
popa
sbb
push
xchg
mov
cmpsl
add
call
or
fnstcw
adc
fcomps
sbb
and
std
pop
mov
insb
sbb
stos
dec
pusha
lock
push
push
outsb
loop
sarb
pop
bnd
mov
cs
add
mov
sahf
daa
sti
jecxz
xchg
sub
je
lcall
xchg
cmp
cmpsl
cs
push
std
pop
ja
pop
xor
push
add
jb
pop
cmp
bound
insl
pop
movsl
pop
ror
cwtl
in
pushf
cmpsb
mov
cmpsl
mov
pop
dec
pop
sti
and
dec
sahf
pop
outsb
mov
jbe
pop
in
jecxz
pusha
bound
jle
ljmp
pop
fadd
repnz
orps
pop
cmp
push
sbb
jl
adc
ficomps
insb
std
mov
fcoms
jge
pop
jecxz
cmp
mov
xor
das
mov
pop
and
inc
sbb
hlt
pop
dec
inc
add
fdivrs
pop
lea
in
mov
test
mov
sbb
stc
fcomip
fstpl
leave
mov
sbb
add
int
scas
xor
pop
lret
jmp
and
lret
in
push
hlt
pop
mov
mov
and
inc
pop
test
add
dec
out
jmp
push
pop
aad
dec
cmp
cmpsl
stos
mov
pop
xorl
sbb
loop
dec
es
mov
shrb
pop
mov
in
int3
xchg
pop
ss
sbb
mov
pop
mov
fdivl
enter
jmp
or
pop
push
xor
rcr
pop
mov
int
push
xrelease
sub
pop
sub
cli
cmpsl
insl
pop
iret
cmpl
xor
repnz
add
sbb
push
add
mov
mov
mov
sbb
mov
rorl
pop
in
mov
test
or
add
add
mov
or
pop
cmpxchg
dec
cmpsb
push
imul
out
sbb
push
mov
cld
xchg
push
cmc
daa
jo
enter
js
xor
pop
adc
push
inc
sub
rorb
inc
xchg
jo
pop
mov
inc
or
das
xor
pop
push
mov
sbb
adc
add
cmp
enter
enter
idiv
lea
jae
and
pushf
lahf
sbb
pop
mov
outsb
inc
in
mov
ss
cld
pop
push
mov
pop
push
shrb
addb
aam
pop
js
xchg
jle
orl
sbbb
sbb
cmp
cmpsb
sahf
pop
out
jne
and
cmp
pop
lahf
jbe
ret
addr16
pop
cwtl
imul
mov
pop
movsb
inc
mov
add
push
xor
pop
sbb
pop
lods
sub
sarl
pop
repz
inc
jb
pop
jne
xchg
pop
xor
mov
pop
out
adc
pop
filds
xor
sbb
ret
sbb
pop
pop
insl
dec
or
stos
jb
sahf
leave
add
dec
js
out
cltd
push
loop
pop
pop
cmp
add
or
dec
pop
or
es
pop
bound
ret
push
pop
pop
int
lret
inc
mov
sbb
xchg
incb
popf
pop
jmp
dec
stos
sbb
sbb
pop
sbb
or
imul
sub
adc
addr16
mov
xchg
pop
scas
aam
mov
push
jge
int3
cmc
sbb
pop
dec
test
lret
in
mov
and
aaa
lahf
sti
cld
pand
sub
pop
clc
lea
insb
mov
pop
in
mov
push
stos
cmp
scas
and
adc
dec
sub
scas
les
or
mov
inc
push
es
cltd
lea
nop
adc
jbe
sbb
pop
sahf
and
push
jmp
jb
push
pop
leave
lahf
adc
dec
dec
pop
flds
idivb
mov
mov
lcall
adc
and
jae
mov
jb
adc
inc
mov
out
dec
push
fsts
pop
mov
lods
jo
std
sbb
insw
mov
outsl
pop
js
inc
fsubrs
sub
in
pop
dec
sbb
ljmp
stos
jns
xchg
stc
push
push
sbb
mov
cmpsb
pop
iret
movsl
adc
inc
dec
mov
data16
mov
lret
pop
push
testb
and
add
lahf
jno
stos
lret
push
dec
pop
sbb
pop
mov
inc
loope
pop
fsubrs
push
je
iret
std
mov
adc
cli
cld
xchg
push
push
mov
pop
scas
loop
int3
mov
jle
pushf
lods
add
cmp
push
jae
pop
xchg
je
mov
aam
push
pop
int3
xchg
add
int
inc
scas
aas
out
in
jl
pop
dec
jecxz
stos
or
mov
xorb
out
sub
cs
mov
mov
fadds
fcoms
scas
pusha
push
push
fsubrl
aam
jmp
in
xchg
into
inc
hlt
jbe
js
jns,pt
inc
lea
movsl
jp
adc
push
pushf
outsb
mov
loope
pusha
enter
sbbb
mov
cmp
jno
sub
cmpsl
popf
lcall
mov
adc
and
cli
popa
push
gs
das
in
sbb
mov
leave
inc
shll
lods
stos
test
mov
iret
sbb
or
hlt
sbb
dec
int3
icebp
xchg
sub
into
mov
movsb
pop
mov
ss
jl
sub
pop
inc
cmpsb
sub
sub
pop
mov
sbb
ss
fcmovnbe
dec
xor
and
or
xlat
and
cli
filds
fsubs
cltd
pop
das
test
lcall
lods
loopne
filds
add
ljmp
sahf
add
adc
push
out
pop
jg
pop
lods
sbb
bound
movsl
pop
xchg
mov
sub
sbbl
out
sub
mov
dec
fisttpll
xchg
in
pop
fistpl
insl
mov
jns
loopne
nop
rolb
bound
lret
lds
int3
pop
xor
or
sub
jl
cmp
pop
mov
push
int
mov
pop
sub
pop
or
ret
shrl
fs
sbb
sar
push
sbb
jmp
mov
mov
xorb
mov
or
inc
jbe
jg
jp
stc
scas
clc
sub
jmp
jmp
and
adc
and
push
subb
add
inc
int
adc
inc
lods
pushl
mov
sbb
into
sub
jb
in
cmp
jmp
lea
mov
or
pop
pop
jp
fstps
or
dec
call
jl
insl
mov
and
xchg
push
stc
aas
lea
pop
leave
daa
iret
outsb
mov
fcomps
mov
inc
nop
pop
push
inc
int
push
fwait
dec
pop
xchg
add
xor
jmp
loopne
int
ficompl
push
or
add
add
in
pop
insb
out
inc
idivb
adc
jecxz
or
lock
mov
mov
cmpsl
insb
test
cmpsb
iret
scas
ljmp
mov
sub
pop
cmc
jecxz
ss
rcrb
xorl
out
pop
xchg
jp
dec
les
xor
or
lret
mov
jb
dec
out
mov
or
int
xchg
sbb
xchg
mov
test
and
mov
cwtl
enter
pop
sbb
cmp
adc
in
adc
sbb
jecxz
iret
and
in
xchg
bound
sub
sub
daa
imul
jbe
lock
js
mov
ljmp
dec
fstl
sbb
lods
jle
pop
pop
mov
push
fdivrs
mov
pop
inc
add
outsl
mov
pop
xchg
and
and
sbb
cwtl
and
sub
call
testb
jp
ss
push
mov
pop
stos
fcmovu
repnz
sbb
lods
jecxz
mov
test
pop
add
cmc
pop
dec
pop
ds
pop
jb
xchg
xor
icebp
dec
leave
pop
pop
adc
cmp
addr16
inc
xchg
lcall
jns
pop
sti
mov
shl
lds
shrl
scas
testb
push
xchg
andl
rorl
pop
sbb
fmull
mov
loope
pop
insl
es
and
jb
sub
in
pop
jmp
xchg
adc
js
cli
mov
in
add
sbbl
push
cmp
adc
outsl
pop
cmp
inc
xor
std
mov
sti
flds
xor
lods
mov
mov
mov
ficompl
add
cmp
xlat
inc
or
pop
ror
mov
leave
rcrl
push
xchg
sub
add
rorl
pop
fnstsw
or
pop
jno
cmp
jge
mov
pop
je
in
mov
mov
jmp
dec
sbb
lret
or
push
pop
lods
and
aas
int
outsl
scas
pop
mov
out
mov
or
cmp
inc
inc
cmp
jg
and
or
sbb
scas
xor
sbb
stos
mov
push
and
fst
fcomip
fistps
hlt
mov
xchg
xchg
pop
mov
and
or
mov
jbe
pop
inc
lret
or
sub
inc
cmp
int3
pop
jnp
cmp
subl
les
pop
sbb
mov
xchg
sub
inc
jo
fstps
xchg
call
cmp
cmp
lods
add
xchg
push
pop
cltd
hlt
pop
add
shlb
enter
sub
pop
es
jns
popf
xchg
stc
cmpsl
aam
lret
add
ljmp
pop
dec
push
pusha
pushf
pop
cmp
push
mov
xchg
imul
dec
pop
je
jge
mov
scas
mov
clc
fimull
xchg
mov
add
fstpt
xor
jb
aam
or
cli
fisubs
dec
xor
sub
int
loope
nop
dec
jne
adc
mov
stos
insb
jp
jp
jnp
loope
adc
mov
lods
pop
lahf
aaa
out
mov
std
and
jecxz
dec
pop
pop
dec
mov
xor
addr16
mov
xor
sub
sbb
jns
jo
loope
xchg
dec
stos
shr
int3
and
jnp
sub
dec
in
or
cmp
cmc
push
orl
inc
aas
dec
jno
pop
test
lret
jae
popl
pop
mov
xor
sbbl
fmuls
jl
add
cmp
movsb
rcrl
cs
inc
sbbb
jb
jl
inc
xchg
sti
and
fdivs
jge
clc
jne
sub
mov
sbbl
daa
shll
pusha
test
jbe
dec
pop
xor
mov
enter
mov
test
mov
int3
and
cmpl
and
daa
scas
pop
sub
sbb
sub
dec
pop
or
sbb
popf
pop
push
jo
xor
scas
mov
imul
js
dec
xchg
pop
rorl
cmpsb
jmp
adc
mov
int
fisttps
pop
sarb
mov
pop
stc
sbb
fimuls
pop
dec
nop
pop
pop
mov
push
imull
mov
pop
mov
sbb
adc
in
jecxz
out
iret
pop
adc
and
push
pop
addr16
mov
push
in
push
and
or
into
loopne
push
mov
dec
cwtl
test
jo
mov
jb
enter
mov
lods
add
and
lret
int3
pop
or
sub
ljmp
mov
or
outsl
cltd
or
pop
xchg
jnp
imul
fiaddl
jo
shrb
popf
mov
rcr
pop
testb
add
jbe
js
push
mov
pop
pop
or
pop
cmp
jp
movb
clc
pop
sbb
orb
insl
lret
adc
mov
aam
call
and
stos
push
sbb
ficoms
fmul
pop
pop
mov
rclb
cmc
arpl
subb
sub
push
jno
pop
ljmp
xchg
pop
fs
sbb
js
mov
daa
imul
or
and
xor
mov
adc
jb
enter
push
mov
mov
lods
lea
push
sahf
pop
subb
fcompl
lods
mov
cmp
sti
inc
jns
sbb
out
mov
pop
mov
or
in
pop
sub
out
imul
sub
sbb
adc
pop
jbe
insl
scas
mov
aas
data16
push
sbb
pop
int3
pop
not
sahf
dec
and
addr16
mov
inc
pop
aad
and
pop
fsubr
dec
sbb
cmpsb
mov
insl
bound
xor
fstpl
int3
das
fs
add
cmpsl
arpl
jmp
test
mov
int3
scas
adc
and
sub
pop
mov
adc
jo
mov
mov
fisubl
shlb
pop
sub
ss
fisubs
pop
mov
cmp
add
add
clc
int
mov
and
rcll
test
adc
inc
in
out
cli
mov
outsl
rorl
ret
add
les
mov
mov
ficoml
mov
int3
stc
dec
aam
mov
loope
popa
xlat
mov
repz
pop
sub
jecxz
mov
out
jbe
std
sbb
repz
mov
push
add
pop
cwtl
int
aas
push
outsb
sbb
cli
mov
pop
cs
cmp
mov
fsubl
or
testl
pop
out
ficompl
push
flds
scas
dec
push
mov
stos
and
jae
rclb
pop
enter
test
outsl
cmp
stc
cld
pop
jo
lods
fwait
sub
int
scas
xchg
std
adc
push
fmuls
push
jne
xor
dec
pop
push
dec
jo
mov
cltd
lcall
pop
adc
outsb
cmpb
popa
lcall
nop
xchg
push
enter
fists
pop
xchg
mov
or
jb
pop
xchg
dec
stc
int
stos
pop
jbe
mov
stos
jns
pop
arpl
jmp
dec
fistpl
jae
pop
vunpcklpd
sar
pop
out
jl
insb
xor
test
and
jb
cmp
mov
xchg
jns
xchg
loop
sub
jb
in
rorl
popf
ret
stos
jbe
and
xor
pop
cltd
scas
mov
or
fwait
pop
push
adc
dec
lock
sbb
sub
popf
lods
xchg
push
je
popl
mov
xchg
push
int
cmp
mov
xchg
jbe
or
mov
sub
lea
cmp
pop
mov
xchg
js
pop
fstpt
inc
scas
fnstenv
inc
in
loope
pop
pop
mov
lcall
add
dec
in
pop
pop
pushl
and
pop
cltd
dec
pop
push
sarl
orb
adc
pop
xor
xchg
cmp
stc
ret
sub
pop
fs
push
pop
in
cmpsb
dec
cld
fcom
push
pop
int
xlat
mov
mov
pop
hlt
aad
mov
sbb
mov
sahf
sub
jbe
movsb
xlat
xchg
sbb
sub
test
or
scas
out
pop
jecxz
adc
pop
mov
jg
mov
int
rolb
xchg
jp
jo
pop
mov
dec
sub
pop
push
mov
inc
push
pop
xchg
sahf
int
mov
mov
pop
jae
push
not
pop
int3
iret
pushf
aad
dec
fcompl
mov
mov
scas
fistpl
mov
pop
ds
mov
mov
push
arpl
cmpsb
fimull
repnz
cmp
pushf
int
lds
out
mov
stos
push
cmpsl
rcr
std
pop
xor
mov
push
in
dec
xchg
pop
int
and
jbe
xchg
push
andl
mov
dec
xor
incl
and
mov
adc
pop
or
pop
mov
inc
out
pusha
jo
pop
push
jae
enter
pop
loopne
popa
dec
xor
les
notb
call
rcrb
ret
or
insl
cltd
mov
imul
jg
cmpsb
pop
stos
enter
mov
pop
inc
fimuls
mov
push
daa
pop
add
adc
push
lcall
sarl
stc
jl
sub
leave
js
pop
out
cmp
lea
out
sbb
cs
pop
mov
outsb
pop
testb
pop
leave
lret
mov
cmp
adc
mov
pushf
push
and
dec
repnz
jge
xchg
sub
aam
mov
dec
cmp
jmp
insl
out
mov
inc
jns
into
out
jle
ret
stos
fsubrs
pop
mov
jns
mov
dec
or
lea
pop
in
xchg
or
movhps
rolb
add
jp
pushf
and
bound
mov
mov
lock
es
mov
adc
in
cmpl
mov
pop
mov
inc
dec
pushf
pop
pop
xchg
fstpt
or
lret
pop
popf
repnz
mov
mov
or
lea
and
mov
or
adc
mov
aaa
testl
test
add
dec
add
sub
mov
pop
jecxz
mov
or
out
cmp
mov
mov
xchg
sub
pop
sarl
popf
jmp
arpl
into
cmp
and
cwtl
fstpl
mov
sub
aam
imul
int
dec
cwtl
lea
pop
sahf
pop
mov
jg
inc
cmpsb
mov
inc
enter
ja
pop
mov
aam
int
nop
pusha
sbb
jmp
jmp
inc
lds
mov
jecxz
mov
icebp
dec
push
rol
shr
sub
pop
inc
aam
fcoml
inc
pop
mov
xchg
je
out
popf
dec
lods
adc
sahf
pop
xor
jo
incl
sub
xor
pop
mov
je
leave
cmp
add
pop
mov
ds
mov
push
and
cmp
xchg
add
es
adc
jl
outsl
sbb
pop
add
aam
jmp
js
scas
cmp
lock
lcall
call
fs
cwtl
inc
jbe
inc
subb
pop
fisttpl
repz
xor
and
pop
xchg
push
jl
outsb
out
mov
mov
pop
dec
mov
dec
inc
lods
pop
pop
fadd
mov
out
hlt
nop
insl
pop
adcb
add
jmp
jecxz
daa
clc
mov
jle
sbb
add
test
mov
pop
addr16
dec
sti
addl
inc
or
fmul
push
rcrl
dec
add
hlt
pop
int
jmp
rclb
loope
inc
loope
cwtl
jl
pop
into
mov
repz
pop
dec
xor
sbbl
out
rcrb
push
push
add
mov
jbe
add
in
pop
inc
mov
mov
jp
add
inc
movl
ss
lret
jp
and
pop
jbe
stc
orl
scas
pushf
sbb
pop
out
xchg
jb
and
scas
mov
or
add
fs
loopne
inc
lods
lret
ja
pop
ret
jo
fstp
pusha
repz
clc
jnp
xor
add
inc
pop
arpl
insl
xor
or
mov
xor
push
sub
pop
lcall
mov
imul
arpl
lods
lret
ja
lcall
inc
repz
push
and
stos
pop
inc
jno
sarl
mov
mov
cmp
sbb
jbe
int3
xor
pop
out
cmp
out
mov
push
push
std
add
sbb
fnsave
int3
ss
cmp
sbb
and
iret
or
push
mov
pop
call
jle
xchg
popf
enter
les
pop
inc
in
addl
pop
in
lret
aam
ja
xchg
pop
fnsave
dec
xchg
pop
add
ret
mov
in
or
push
jle
and
lods
pop
fucomi
push
inc
add
mov
xor
scas
pop
pop
inc
rcrb
ja
push
mov
push
mov
jecxz
fwait
mov
lods
test
inc
pop
pop
mov
fadds
pop
repnz
test
jne
pop
data16
loope
in
gs
pop
sbb
sbb
mov
or
pusha
mov
pop
cmp
push
jnp
push
pop
push
ret
sbb
or
adc
cmp
mov
mov
xchg
adc
call
adc
insl
inc
je
aas
test
dec
sti
pop
mov
js
pop
cmp
and
shrb
or
sbb
xchg
out
int3
add
sub
icebp
mov
adc
or
pop
xorb
or
movsl
fildll
pop
icebp
fwait
or
dec
mov
sbb
dec
and
sub
movsb
pop
int
xchg
iret
lret
adc
mov
jnp
pop
jbe
xchg
jae
mov
pop
std
int
fcomip
mov
outsl
pop
pop
icebp
stc
mov
pop
les
cltd
jns
cmpsl
jo
pop
pop
push
sti
sbb
dec
pop
pop
mov
jg
xor
pop
rcr
inc
dec
mov
pop
xor
fcomps
push
jecxz
lret
mov
fs
mov
mov
dec
ljmp
daa
jb
jo
pop
mov
es
mov
imul
dec
pop
jne
or
ds
das
fldt
sbb
xchg
mov
pop
cltd
dec
clc
push
insb
sbbl
pop
mov
dec
jo
pop
push
sub
push
test
in
sbb
add
cmp
pop
stos
rclb
cld
pop
mov
movsb
popf
sti
sbb
mov
xchg
jb
lock
int
movsl
add
repz
xchg
jbe
cvtps2pd
mov
and
push
out
adc
in
int
xlat
mov
fmuls
and
es
push
inc
jo
out
adc
pushf
lods
jae
adc
sub
out
dec
xchg
sub
int
add
cld
ss
lcall
jmp
mov
jns
pop
aad
cmp
filds
fidivl
scas
mov
add
mov
pop
and
in
jbe
xor
movsl
sub
jl
insb
add
int3
mov
scas
shll
mov
daa
pop
lret
imul
mov
inc
out
lock
push
sbb
jle
add
xchg
js
pushf
pop
mov
add
pop
aad
jbe
and
cmp
mov
ret
mov
sbb
push
xchg
lret
testb
and
int3
ds
pop
sub
pop
xchg
xchg
in
aam
insl
nop
pop
lods
mov
pop
xor
mov
xchg
cwtl
push
ss
pop
adc
push
pop
cltd
lea
adc
jne
inc
pop
xchg
pop
in
mov
outsb
into
ljmp
xor
adc
pop
xchg
leave
pop
int3
push
and
jmp
dec
jbe
test
add
inc
mov
lcall
mull
mov
lret
aad
sbb
loopne
test
push
fldt
mov
loopne
pop
xor
xchg
leave
lods
hlt
movl
pop
int
pop
flds
push
cmp
shll
push
rolb
xor
cmp
pop
mov
push
push
xchg
lock
dec
in
adc
add
push
into
lea
push
pop
inc
lds
cmpsb
and
hlt
movsb
cmp
push
or
jno
jg
jl
pop
rcr
out
mov
jae
pop
lcall
cmp
in
sbb
cmc
sbb
push
cli
std
pop
or
jbe
lahf
mov
xchg
cmc
les
push
pop
jns
add
pop
cmp
iret
aam
shl
int
pop
adc
mov
pop
pop
inc
pop
loop
or
mov
jg
arpl
xchg
repz
mov
into
pop
mov
jle
pop
je
jnp
repz
lcall
mov
mov
pushl
insl
dec
mov
xchg
mov
mov
push
shrb
stc
lret
push
sbb
pop
loope
xor
sbb
ret
int3
cmpb
imul
icebp
jl
mov
outsl
call
hlt
xor
imul
outsb
push
insb
sbb
pop
add
cltd
clc
lea
adc
and
rcl
xchg
pop
push
mov
andl
imul
sbb
pop
fidivrs
push
pop
jbe
dec
out
js
pusha
std
dec
pop
jns
cmpsb
push
dec
and
xorb
mov
push
xor
adc
sbb
pop
xchg
sbb
add
int3
jae
dec
sbbb
xchg
subl
jns
pop
mov
push
repz
fcompl
int3
push
dec
dec
xchg
pop
push
mov
fidivrs
popa
push
add
in
lcall
stos
ret
jmp
inc
push
and
movsl
scas
push
xchg
push
test
xor
inc
aaa
or
jae
inc
pop
ret
stos
mov
push
out
adc
pop
ja
stc
xor
sbb
ss
popa
lahf
mov
shrl
pop
push
out
inc
mov
sbb
xorb
mov
pop
pop
cmp
aad
pop
adc
pop
int3
mov
jmp
push
xor
rcrb
sub
int
pop
insb
cltd
dec
or
and
jo
pop
pop
je
jg
loop
fmuls
stc
rcrb
push
sbb
pop
jne
jg
in
arpl
test
dec
or
dec
add
cmp
inc
in
sub
cmp
negl
mov
frstor
pop
push
xchg
sbb
xor
push
pop
jb
cmp
mov
sbb
push
pop
shll
mov
cmpsl
dec
mov
mov
pop
nop
push
in
xchg
or
pop
push
cmp
mov
mov
xor
push
inc
and
incl
fiadds
arpl
shr
jecxz
orb
cmc
aad
pop
push
sahf
push
or
add
add
int3
sbbl
mov
or
lret
movl
pop
mov
cli
pop
mov
aas
shrb
pop
in
push
int3
mov
in
pop
mov
pop
jbe
dec
pop
xchg
in
xor
fistps
hlt
lds
pop
mov
push
or
jmp
clc
add
movsb
jge
cmp
jo
and
or
xchg
jp
pop
iret
int
pop
out
movsb
push
clc
dec
pop
or
jmp
dec
adc
ja
jecxz
pop
loope
pop
jmp
outsl
pop
pop
push
iret
lahf
push
pop
sti
js
jb
test
popa
ret
sub
jge
push
and
in
inc
push
push
cwtl
les
repz
pop
enter
repnz
pop
stos
cmp
out
js
enter
sub
mov
xchg
mov
jb
out
test
test
cld
pop
fnstenv
popf
ret
leave
dec
mov
pop
or
pop
pusha
dec
insl
jl
sbb
sbb
testb
push
clc
lret
pop
inc
cmpsl
cmp
and
and
out
xor
adc
testl
or
mov
pop
xchg
fsubs
int
xchg
xchg
pop
mov
cmp
lea
aam
cli
stc
cli
pop
add
scas
jne
jp
push
or
stc
fsubp
roll
and
daa
push
pop
imul
popa
push
mov
aam
pop
in
cs
pop
sub
je
adc
xor
lods
int
mov
xchg
jo
mov
lcall
aad
xchg
sbb
jl
push
aaa
fcomps
js
pop
sbb
jge
fs
or
loope
xchg
jae
int
xchg
adc
cmp
pop
dec
pop
mov
pop
daa
or
or
jbe
movsl
fbld
ljmp
pop
gs
vaddps
xor
lea
sbb
scas
mov
bound
jo
fiaddl
inc
cmpl
inc
mov
xchg
arpl
jb
or
repz
loop
lahf
jne
fildl
jecxz
sahf
out
pop
xor
sub
push
dec
pop
repz
adc
lods
xor
adc
or
sbb
xor
frstor
jo
lock
or
add
dec
pop
pop
sub
ds
sbb
pop
loopne
and
and
icebp
pop
mov
leave
adcb
sub
out
loop
pop
out
loopne
dec
and
mov
or
pop
insl
mov
lcall
stos
adc
scas
shll
pop
inc
sub
jmp
xchg
jecxz
dec
add
push
ja
inc
pop
or
jno
pop
lods
push
sbb
mov
jle
icebp
pop
arpl
subl
push
in
pop
dec
mov
loop
xor
fwait
mov
in
dec
enter
fldcw
jbe
loop
xor
cmp
add
cltd
fstpl
xor
mov
fistpll
in
lahf
shl
in
les
sub
pop
pop
mov
leave
or
inc
cmpsl
out
int3
and
pop
rcr
jl
inc
jae
jle
mov
cmpsb
cmp
pop
lahf
sbb
push
daa
or
pop
repnz
ljmp
jbe
xor
ss
pop
fdivrs
or
pop
and
mov
test
aas
pop
in
loopne
push
and
xchg
adc
pop
repz
mov
jb
clc
xor
rorl
push
pop
mov
adc
adc
in
adc
lock
lret
int
or
popa
inc
sbb
outsb
loop
loop
lahf
stos
jmp
dec
pop
lcall
add
lds
cmp
int
fisubrl
mov
pop
cli
scas
push
pop
adc
mov
lcall
adc
mov
pop
xchg
jnp
add
inc
pop
cmp
jo
lcall
mov
fs
pop
dec
out
pop
mov
jnp
pop
pushf
mov
fbstp
mov
pop
popa
insb
rcll
cmp
fcomps
stos
pop
jbe
in
in
push
roll
xchg
imul
addr16
lods
jmp
xor
cmp
or
sbb
mov
pop
fiaddl
jbe
scas
dec
or
orb
mov
shlb
pushf
testl
movsl
loopne
xchg
cmp
pop
and
pop
fbld
inc
push
pop
and
daa
aaa
icebp
pop
in
xor
mov
or
pop
cld
ljmp
cmpsb
dec
in
fmulp
into
test
lock
dec
orl
aam
shll
xchg
nop
inc
sbb
jmp
andl
and
jne
fldl
push
pop
sub
dec
or
pop
fimuls
es
inc
pop
aam
xchg
fistpl
add
loopne
mov
jns
jno
je
rcrb
ret
in
pop
pop
jge
out
add
push
cmp
xor
adc
pop
push
sub
insb
sbb
pop
xor
ja
pop
aam
mov
or
js
stc
jp
data16
cli
jmp
xchg
sbb
add
sbb
rcrl
jbe
or
push
clc
jns
out
and
dec
repz
loop
sbb
dec
mov
in
mov
pop
jns
cmp
in
bnd
pop
enter
iret
dec
frstor
xchg
shl
or
pop
inc
add
bound
mov
sbb
jge
pop
fstl
lods
push
add
shll
or
jbe
pop
mov
jp
stos
dec
pop
pop
lds
in
scas
jmp
out
jns
sbb
jb
and
pop
or
mov
pop
lods
push
mov
mov
or
and
add
xor
xchg
or
sahf
int3
and
lahf
adcb
fidivrl
loopne
clc
or
int
add
mov
xor
fcomps
loope
stos
push
lods
call
mov
pop
adc
cmp
xor
js
repz
lcall
dec
fimull
addr16
adc
gs
or
xchg
clc
stc
pcmpeqd
sbb
bound
pop
xor
sbb
fwait
scas
popa
addps
or
pop
mov
lea
pop
cmp
pop
sub
outsb
cs
jo
pop
mov
out
sbb
arpl
dec
int3
mov
imul
pop
mov
jbe
sub
insl
and
cmp
rcrl
rorl
and
push
mov
pop
pop
dec
int3
lds
int
mov
jno
xor
push
mov
sbb
pop
fisubs
stc
addr16
test
inc
js
pop
inc
ja
lea
or
lret
xchg
xor
or
scas
xor
mov
cmp
iret
imul
jae
push
push
int3
pop
pop
ret
popf
rclb
jmp
xchg
cld
sarl
pop
int
mov
fstl
pop
data16
jae
or
xchg
mov
pop
jp
xor
and
dec
ljmp
pop
xchg
fsubr
ret
mov
mov
outsl
insb
xor
pop
jb
jg
adc
fildl
addr16
fcomps
cmp
sub
scas
xchg
mov
inc
sti
fnstcw
mov
pop
daa
or
pop
dec
test
lods
xchg
inc
adc
dec
js
adc
mov
jo
call
pop
pop
or
add
and
insl
jg
cmp
pop
sbb
mov
pop
push
cmp
imul
xchg
mov
jp
dec
xor
sar
pop
xor
and
jbe
scas
outsl
fisubrs
repnz
js
cli
sbb
in
rorb
mov
jp
dec
cltd
push
push
mov
adc
scas
xor
adc
pop
out
stc
dec
and
mov
xchg
enter
mov
movsl
in
scas
xor
lahf
stos
into
sub
popf
bound
add
cmp
adc
lret
int3
insl
lcall
pop
add
push
addr16
stc
adc
mov
pop
add
add
fildll
xchg
cmp
pop
inc
sub
stos
stos
lods
outsl
pop
int
bnd
pop
lcall
push
cmp
inc
pop
jo
ds
loopne
adc
xor
int
repz
iret
sbb
imul
es
fisttpl
cmp
pop
adc
add
xor
mov
cs
cltd
aaa
mov
pushf
pop
in
sbb
and
dec
cmp
lea
cmp
add
repz
adc
mov
lcall
sub
lods
mov
out
mov
jg
mov
pop
sbb
and
cmp
push
pop
xchg
lret
out
or
pop
xchg
icebp
mov
loop
inc
out
sub
xchg
fstpt
sbb
dec
out
adc
in
pop
repz
sti
test
adc
loop
xchg
or
sub
inc
js
add
mov
jno
cmp
leave
orl
mov
xchg
jg
leave
pop
or
push
push
or
xchg
aad
inc
int
jo
pop
inc
fadd
mov
sbb
aam
popf
stos
mov
mov
fdivrl
sbb
jb
cmp
push
mov
adc
xor
imul
in
outsb
negl
bound
icebp
scas
int3
jecxz
pop
and
jp
pusha
inc
incl
pop
cltd
rorb
rcrl
insl
lea
jns
int
push
pop
loop
pop
jno
popf
mov
add
cmc
pop
adc
pushf
lods
repnz
sbb
cmpl
test
inc
int3
mov
dec
and
xchg
scas
pop
mov
call
imul
dec
int
std
pusha
cmp
shlb
into
test
jmp
ljmp
mov
jmp
mov
fcompl
and
mov
lahf
idivb
inc
adc
jl
or
add
cmc
lcall
cmp
or
push
int
inc
xlat
pop
fnstenv
sbb
ret
cmp
mov
sti
jo
or
stos
dec
mov
cs
pop
pop
inc
mov
fstps
leave
shll
pop
insl
mov
jno
sub
mulb
and
mov
lock
push
push
repnz
sub
test
sbb
cld
pop
inc
outsb
dec
into
pop
repz
sub
mov
jbe
test
test
sub
out
loope
ljmp
xchg
scas
xor
imul
fstl
dec
pop
sahf
and
mov
cmp
pushf
imul
fdivl
test
mov
in
mov
pop
mov
sbb
pop
stc
xchg
loope
mov
dec
mov
mov
in
mov
mov
pop
or
into
xor
push
pushf
ret
sbb
sbb
and
fistpl
aas
pusha
xor
ret
sbb
mov
add
sbb
fnstcw
into
std
pop
cmp
test
pop
loopne
pop
pusha
mov
pop
push
aam
mov
mov
inc
pop
jbe
fadds
pushf
jmp
sahf
jge
sbb
pop
adc
pop
aas
lods
dec
cmpsb
jp
lret
pop
adc
jo
mov
inc
xchg
push
pop
subl
rolb
fwait
loop
lahf
das
pop
mov
mov
cli
mov
in
or
ss
mov
insb
sub
les
push
lahf
imul
lds
mov
xchg
sbb
xchg
sub
in
push
mov
pop
jmp
outsl
xor
inc
cmp
and
push
sub
adc
mov
cli
cmp
and
rcr
push
pop
ljmp
insl
xchg
int3
daa
addr16
int
cltd
cld
popa
dec
mov
add
out
adc
fcomps
jle
pop
inc
and
rolb
lret
mov
mov
pop
mov
dec
and
les
fnstcw
jecxz
pop
jl
sbb
push
decb
leave
mov
lods
pop
xor
sbb
scas
adc
enter
clc
sub
loop
pop
je
sbb
rcll
int
mov
cmpsb
aas
pushf
lret
mov
pop
dec
jo
mov
sarb
pushf
ljmp
sub
cmp
insl
xchg
sbb
inc
arpl
mov
add
fnstcw
pop
push
daa
stos
hlt
ja
cmc
sbb
shrb
sub
xor
mov
lret
mov
pop
out
out
scas
pop
cli
add
jo
pop
jne
add
icebp
mov
mov
mov
cld
sub
push
out
popf
mov
flds
stos
mov
jo
stos
mov
shlb
inc
xchg
ret
fisubl
addb
div
pop
xchg
push
sti
xor
inc
pop
cmp
dec
iret
pop
xchg
mov
int
insb
pop
lds
jecxz
iret
dec
pop
mov
inc
fisubrs
xor
ss
pop
pop
mov
lret
sbb
mov
dec
lret
jbe
or
sub
mov
inc
mov
add
fstpt
pop
in
stos
adc
ror
out
adc
adc
insl
sub
add
mov
stos
pop
scas
les
cmp
ds
xchg
push
and
lods
jno
repz
addr16
cmpsl
fsubl
push
sbb
push
jp
ja
lea
pushf
pop
int
mov
pop
and
loope
lea
mov
cs
xor
data16
jae
out
das
cmp
mov
call
fistpl
adc
xchg
les
sbb
pop
bound
mov
cmp
mov
movsl
push
in
pop
hlt
mov
jle
outsb
pop
and
sahf
jl
and
pop
push
jnp
sub
adc
cs
and
sub
add
jmp
sub
jbe
mov
aaa
loop
mov
test
inc
push
pop
lahf
cmp
cmp
cmp
lock
inc
and
inc
pop
pop
mov
movsb
pop
xchg
sub
mov
mov
insb
xor
xor
pop
xor
ljmp
pusha
inc
mov
out
jae
in
ret
cld
pop
in
pop
mov
bound
loope
pop
sub
pop
imul
and
ds
pop
in
inc
cmp
dec
xorb
push
xor
pop
and
xor
cmpb
cltd
test
and
mov
or
dec
cmp
lock
mov
or
pop
adc
sbb
out
iret
loop
pop
dec
mov
test
mov
dec
mov
pop
ljmp
and
jns
rorb
sbb
adc
xor
sbb
push
int
shl
mov
cmp
xchg
rorb
inc
movl
pop
lcall
shlw
or
lods
dec
pop
lock
pop
jp
jb
xchg
mov
insl
mov
xor
mov
mov
sbb
push
mov
pop
addr16
push
pop
push
popa
and
aas
sbb
cs
mov
pop
iret
das
pop
inc
or
js
dec
push
int
xor
daa
dec
pop
and
push
adc
int3
cmp
enter
inc
push
add
xor
dec
adc
pop
add
cmp
pop
int3
popf
ret
test
imul
push
pop
or
pop
out
push
pop
ds
iret
xchg
sbb
clc
sbb
sbb
fimull
pop
push
decb
pop
orb
fistpll
cmp
sbbl
jl
sti
es
push
dec
sbb
rep
pop
sub
dec
cwtl
inc
push
shl
jle
and
xor
mov
sbb
aaa
add
jb
pop
inc
lea
xor
pop
iret
stc
xchg
loop
cmp
and
in
pop
test
cmp
add
cltd
int
les
or
out
push
dec
test
dec
out
lea
cwtl
pop
mov
rcr
inc
fistl
pop
pop
pop
mov
xorb
pop
xchg
in
iret
and
dec
out
mov
mov
fcomps
cmpsl
imul
pop
sahf
pop
push
pop
lods
adc
dec
cld
in
pop
cli
lret
pop
fiaddl
mov
sub
and
cmp
inc
mov
in
push
push
mov
dec
mov
pop
inc
pop
test
mov
sbb
fpatan
jl
aaa
sub
mov
ret
stos
negl
pop
popa
out
pop
test
add
xchg
and
and
pop
xorl
pop
scas
bound
mov
loope
jb
pop
mov
add
int3
xor
stos
inc
cmp
xor
dec
push
cmp
add
popf
mov
inc
lret
pop
push
mov
gs
jecxz
lods
pop
adc
out
push
cltd
push
in
repz
fcmove
push
cmp
outsb
sbb
pop
decl
ror
lds
out
stc
mov
and
outsb
int3
inc
jmp
push
mov
fstpt
jecxz
and
pop
test
adc
arpl
jnp
sub
xor
jb
pop
ljmp
or
push
jbe
push
neg
scas
call
js
sub
stc
xchg
pop
and
inc
or
pop
sbb
adc
jo
mov
cmp
or
xchg
stos
pop
rcl
test
in
cltd
pop
sub
jmp
flds
adc
mov
pop
add
xchg
push
les
push
subb
gs
fadds
pop
stc
pop
pop
dec
jo
inc
in
fmulp
int
push
in
aam
dec
sub
stos
push
mov
outsl
sbb
gs
js
hlt
cltd
pop
das
sahf
mov
pusha
pop
outsl
aad
cmc
sub
int
sti
loopne
pop
in
dec
dec
scas
pop
jle
lea
push
sbb
out
repnz
ss
push
ret
pop
push
mov
pop
lods
push
sbb
iret
mov
popl
xor
inc
subb
lretw
sbb
int3
mov
imul
dec
pop
pop
jle,pt
clc
adc
sbb
pop
or
scas
pop
push
mov
pop
sbb
iret
stos
push
pop
scas
mov
stc
sub
or
pushf
ret
dec
popf
adcb
push
adc
ds
inc
icebp
pop
jno
sub
stos
arpl
ss
pop
sub
sbb
pop
int
add
out
outsl
scas
push
sbb
sbb
mov
xor
lea
rcrb
inc
add
lahf
dec
mov
gs
inc
pop
jbe
adc
sbb
pop
call
int
cmp
mov
fisttpl
pop
dec
mov
cmpsl
push
repnz
push
and
push
pop
fcom
int
movsl
sub
fdivs
mov
pop
xor
dec
sub
adc
mov
mov
lea
cltd
rcrb
fwait
dec
sbb
mov
ret
ljmp
pop
in
lock
shll
adc
jbe
ds
mov
xchg
fcmovu
push
lahf
mov
inc
addr16
and
pop
pushl
mov
les
push
and
push
loope
mov
push
cmp
mov
adc
mov
jge
out
mov
push
jecxz
lcall
and
rcrb
fcmovne
fwait
rcrb
jmp
xor
lea
or
cmp
pop
mov
fxtract
popa
dec
jo
pop
gs
bound
lds
jecxz
ljmp
fs
mov
cmp
xchg
cmpsl
leave
push
rcrb
div
xor
addr16
mov
loopne
xor
pop
push
inc
stos
jmp
test
pop
fidivrl
loop
cmp
xlat
jb
mov
inc
std
inc
mov
cmp
pop
and
repz
in
add
jmp
cld
jo
out
dec
cmp
pop
pop
lret
adc
xor
pop
ficomps
out
push
mov
sarl
dec
sbb
jmp
and
push
pop
sbbb
inc
mov
in
add
sub
call
pop
addr16
sub
subl
int
jmp
daa
pop
dec
dec
inc
pop
aad
pop
shll
and
imul
lret
xchg
mov
jo
sbb
out
jne
dec
lahf
mov
hlt
xlat
mov
imul
pop
inc
pushf
jns
mov
jecxz
lock
pop
test
mov
mov
repnz
mov
lcall
add
mov
jns
test
fdivrl
jg
jbe
pop
pop
adc
xchg
lret
mov
scas
pop
ret
inc
lds
cmp
pop
push
addb
sub
fcompl
and
fstps
xchg
bound
pop
aas
xor
pop
inc
push
push
dec
push
inc
in
icebp
adc
lock
andl
mov
pop
leave
nop
or
sbb
jo
pop
stos
cmp
sub
dec
cmp
test
sbb
in
into
dec
push
sbb
mov
pop
xchg
int3
jb
and
fsubrs
mov
sti
pop
in
lret
push
jns
or
adc
js
mov
dec
test
jbe
mov
nop
pop
xlat
out
sbb
jp
or
loope
outsb
scas
stc
mov
mov
daa
out
or
mov
mov
mov
fisttpl
shlb
aam
in
and
imul
pop
or
ds
sbb
dec
dec
mov
cs
push
jge
imul
mov
jecxz
jecxz
and
xlat
push
sub
jmp
adc
xchg
pop
adc
xchg
out
daa
hlt
cld
pusha
and
sub
dec
mov
push
xor
push
mov
jg
add
pop
out
out
ret
orb
inc
pop
add
into
push
cmc
pop
sub
mov
mov
mov
js
ficoml
pushf
mov
lea
out
mov
sbb
xor
addl
mov
or
jo
push
and
inc
aas
daa
mov
xor
xchg
std
stos
in
mov
inc
rcll
stc
cmp
cmp
pop
lcall
nop
loop
clc
dec
and
or
cltd
pop
cmc
sbb
xor
and
mov
das
int
subl
addps
cli
push
and
inc
imul
xor
mov
push
sbb
sub
pop
aad
sbb
neg
push
scas
loopne
dec
mov
and
sbb
or
adc
loop
mov
ds
sarb
pop
cwtl
cli
les
std
inc
int
and
adc
xchg
or
pop
push
daa
je
inc
or
ja
repz
mov
add
cs
popf
mov
mov
add
int
fistps
std
pop
mov
lods
mov
lods
push
mov
in
mov
xchg
sbb
lock
pop
add
cmc
pop
movsl
lea
sahf
fisubl
clc
shrl
mov
push
jo
fs
roll
mov
clc
enter
mov
mov
add
test
push
gs
sahf
pop
je
pop
push
sbb
sub
dec
jecxz
adc
jo
pop
adc
dec
cli
cli
aaa
pop
xor
adc
pusha
ss
pop
push
and
popf
neg
sbb
lods
cmp
dec
insb
leave
mov
aaa
repnz
and
in
jge
inc
sbb
pop
ret
aas
movsl
ss
divb
cmp
rcrb
jns
lret
or
shll
jmp
mov
aaa
stos
dec
pop
movsl
xor
jbe
stos
jecxz
pop
mov
imulb
mov
cmp
js
in
xor
cli
pop
jno
cmpl
pop
jb
lods
jnp
pop
pop
cltd
repz
or
pop
pop
jbe
clc
filds
jecxz
mov
divl
pop
inc
int
cwtl
pushf
in
fistps
mov
add
cmpb
sbb
mov
movsl
sbb
ss
xchg
scas
loop
cmp
xchg
push
sub
pop
sub
dec
sarl
je
push
xchg
jae
cmp
pop
sub
cltd
sarb
mov
icebp
pop
pop
shl
sub
pop
cmp
mov
mov
fldt
dec
int3
pop
dec
inc
or
fdivp
fists
and
dec
cmp
lret
jns
movsl
jnp
and
pop
subl
lret
mov
xchg
inc
sarb
aad
push
je
xchg
dec
cmpsb
or
out
rorl
xor
mov
cmp
sub
pop
stos
pop
imul
dec
xchg
das
xchg
pushf
jl
in
pop
test
sub
sbb
pop
jno
jbe
jecxz
add
sbb
xchg
mov
les
sub
mov
ret
negl
pop
popa
lods
or
loop
inc
dec
inc
push
lahf
cmp
addr16
fistpl
sbb
test
adc
iret
xchg
mov
pop
sbb
ficomps
mov
js
jb
push
xchg
sbb
insb
lods
adc
mov
outsl
pop
mov
and
xchg
inc
push
dec
pmulhuw
js
push
out
pop
pop
sbb
or
popa
mov
push
cld
jnp
ficompl
add
fdivs
jecxz
idivb
icebp
mov
dec
sub
pop
cmpsb
sbb
pusha
push
mov
aaa
dec
ret
cmp
dec
mov
mov
push
pop
je
push
jp
ret
dec
ficompl
dec
lahf
dec
test
fistps
outsl
stc
or
iret
int
pop
xlat
std
or
insb
sbbb
ficomps
sbb
rcrb
movsb
sahf
hlt
arpl
int
ret
lahf
xor
mov
xchg
js
jge
mov
pop
fsubrs
pop
xchg
mov
shl
cmp
cltd
pop
pop
std
into
cmp
pop
or
jae
dec
or
jne
sbb
repnz
fucom
lock
imul
push
jb
std
jle
lahf
jne
adc
addr16
stos
hlt
inc
pop
dec
or
mov
jge
fcmovnu
add
and
add
fistps
decl
shlb
dec
pop
lods
dec
popf
jae
inc
xor
xor
aaa
sub
jmp
dec
sbb
pop
mov
frstor
sbb
fbstp
xchg
shlb
or
pop
lret
push
mov
xor
pop
cs
push
jmp
mov
outsl
rorb
pop
dec
jbe
test
jne
mov
push
xor
mov
mov
xchg
test
addps
lea
and
push
arpl
add
outsb
dec
jge
scas
mov
stc
fiadds
jp
sbb
rcr
add
imulb
cmc
cmp
aaa
pop
loopne
lret
push
add
mov
in
dec
pop
ljmp
mov
xchg
or
push
stos
mov
sbb
adc
adcb
int
mov
sbb
in
mov
pop
jl
sbb
xlat
sbb
inc
xchg
popf
iret
mov
daa
repz
pop
pop
or
les
mov
add
fcoms
jle
pop
enter
mov
out
ljmp
sub
inc
jecxz
lcall
dec
jo
icebp
lock
cmp
mov
mov
int3
mov
decb
clc
add
iret
pop
pop
jo
jle
lahf
hlt
dec
shrb
aad
pop
mov
mov
shll
gs
ret
sti
pop
cli
ss
fs
mov
movsb
pop
hlt
xchg
in
int3
je
jmp
pop
xlat
xor
and
fs
std
mov
dec
pop
mov
test
testl
adc
jo
cwtl
jbe
dec
fs
fimull
adc
std
adc
xor
and
ds
mov
jo
pop
insl
jmp
jns
mov
daa
mov
dec
lds
pop
fidivrl
int3
push
shll
int
iret
dec
fnstenv
sub
lcall
sarb
and
call
or
popa
sahf
std
push
xchg
je
cmp
pop
les
aas
sbb
cltd
lds
adc
dec
mov
mov
ret
es
ficompl
lods
pop
xor
pop
std
sahf
and
into
pop
cmovge
cmp
cmp
js
mov
sbb
dec
mov
sub
mov
es
ljmp
push
out
pop
cs
jns
pop
jmp
mov
outsb
and
addl
cmpsl
jp
ds
sbb
pop
jns
mov
or
paddusb
mov
mov
sub
and
sbb
cltd
pop
insl
outsl
mov
les
jecxz
aam
jp
pop
or
cltd
pop
insl
repnz
loopne
int
ljmp
data16
jne
fcomps
mov
mov
pop
ret
out
xchg
nop
fstpl
mov
mov
pop
push
loope
mov
inc
cwtl
outsb
jns
pop
sub
add
lahf
pop
fsub
stos
int
rcrl
cmp
hlt
pop
push
xor
int3
rcrl
cmp
fcomp
aaa
ret
mov
cli
cltd
jg
std
mov
lds
sbb
aas
pop
inc
xchg
cmp
mov
jbe
outsl
jae
popf
int
mov
adc
insl
ss
lds
adc
js
sbb
or
fstpt
push
movsl
test
int
out
sub
bound
subl
in
test
fnsave
clc
mov
jns
mov
inc
out
xchg
jns
mov
jg
jmp
mov
jecxz
fs
or
enter
adc
jae
loope
int3
sub
aam
fldenv
insb
pop
push
cmpsb
jo
fbstp
pop
or
cltd
hlt
pop
mov
and
mov
xor
push
xor
jno
fstps
scas
and
push
or
adc
js
repz
ja
test
enter
mov
aaa
pop
push
inc
xchg
sbb
ds
push
or
insl
rcll
pop
jo
fists
sub
mov
popf
mov
test
mov
add
out
pop
dec
stos
cwtl
add
jb
aas
pop
mov
int
shll
pop
subl
in
jbe
mov
fdivs
jb
fadd
rcll
aas
cmpsb
jle
and
dec
rorb
and
dec
or
int3
aam
mov
rorl
int
inc
enter
in
fs
jp
adc
test
sbb
rolb
mov
mov
int
sub
pop
gs
mov
adc
loopne
loop
and
xchg
cmp
dec
push
fsub
int3
dec
out
lock
cmp
mov
jl
mov
lods
cwtl
push
imul
addr16
sti
mov
jg
pop
xlat
xchg
cmp
scas
jecxz
inc
int3
fiadds
push
jae
pop
lret
jb
ja
cld
cmp
fwait
xchg
jp
pop
cmp
pop
push
int
loopne
or
mov
mov
sbb
dec
clc
mov
pop
leave
dec
iret
in
mov
and
repnz
adc
jl
add
int3
push
fcmovnbe
loopne
pop
cmpsb
mov
xor
jecxz
pop
scas
lret
pop
mov
fiaddl
pop
lods
in
mov
mov
dec
xlat
scas
aam
pop
sub
mov
cli
addb
push
insl
sub
dec
mov
push
mov
aas
fisubrl
cltd
mov
cld
or
sbb
ja
xor
xchg
push
pop
popa
pop
adc
pop
mov
sbb
pop
ret
lock
out
dec
push
lods
pop
pop
pop
or
repz
clc
jmp
sbbl
adc
pop
jg
movsb
sbb
push
add
stos
stc
jmp
in
sub
or
nop
jg
pop
loope
xchg
and
in
lret
mov
int
mov
test
cltd
aam
ljmp
pusha
jle
jbe
jg
xor
xchg
xchg
lahf
mov
pop
test
cmp
cmp
or
aad
xor
insl
jae
stos
pop
fninit
inc
mov
scas
arpl
add
mov
adc
mov
cmp
pop
mov
and
in
pop
imul
xchg
adc
pshufw
push
imul
mov
push
je
adc
cmpsl
mov
fsts
sbbb
dec
pop
cs
cmp
pop
dec
pushf
imul
ret
mov
sbb
cs
int3
lock
pop
xor
ficoml
pop
mov
pop
ret
rcrl
jmp
arpl
adc
daa
jge
cmp
pop
push
int
outsb
nopl
aam
std
stos
ljmp
js
push
mov
xor
jb
pop
in
pushf
lds
int3
cmpsb
sbb
pop
sub
mov
inc
sbb
fidivrs
adc
mov
pop
cmp
pop
sub
int3
mov
cwtl
pop
lret
pop
pop
jmp
call
add
sbb
inc
dec
pop
cmp
mov
out
int
leave
mov
cmp
popl
dec
sub
lcall
inc
add
rcll
mov
sub
movsl
pop
sarl
pop
mov
scas
mov
gs
sbb
pop
push
jo
adc
and
push
lcall
pop
vpavgw
loop
dec
jecxz
mov
cmpsb
inc
pop
jbe
popf
movsb
ficoms
leave
lods
int
rorl
lahf
push
mov
and
out
jnp
cmp
scas
cli
sbbb
sbb
loopne
out
sbb
gs
adc
add
mov
rcrb
out
rcrl
scas
pop
mov
mov
pop
sbb
pop
xor
mov
insb
add
mov
pop
lcall
ja
sub
pop
pop
inc
movsb
lret
lock
jg
xchg
mov
adc
jns
sub
stc
je
in
push
mov
xchg
sbb
test
mov
test
push
loopne
mov
jle
aam
pop
inc
je
sbb
jb
dec
pop
int3
sti
lcall
adc
setb
push
push
pop
out
rorl
sbb
and
insb
fisttpll
jbe
jle
fildl
das
xchg
push
and
mov
mov
push
negb
xchg
or
pop
mov
jbe
jg
adc
mov
sub
mov
mov
pushf
insl
mov
sbb
inc
sarb
xchg
sub
int
sti
mov
pop
aam
das
test
xchg
test
mov
lret
and
push
mov
out
xor
stos
pop
out
lds
jbe
pop
pop
dec
mov
cmpsl
ss
ficompl
push
sbb
shll
mov
ret
out
jbe
pop
pop
cmpsl
mov
mov
or
pop
scas
add
call
roll
pop
ja
mov
lock
pop
mov
lahf
xor
arpl
fistpl
xor
aad
jecxz
mov
test
pop
pop
mov
and
pop
in
cmpsl
aaa
mov
scas
cmc
dec
sub
ja
mov
repnz
dec
mov
mov
mov
inc
fistpl
mov
jae
mov
xchg
cld
cmc
mov
and
out
pop
push
movsl
jg
mov
xchg
adc
rcrb
adc
push
in
mov
std
add
pop
mov
or
fcomp
outsb
cld
pop
mov
popa
testb
mov
and
xor
xchg
pusha
out
lds
pop
fcoml
cmp
sub
cmp
jnp
sub
movsb
popf
jmp
jb
push
mov
fwait
cltd
xor
inc
xor
mov
cmp
dec
pop
pop
mov
pop
insl
ret
jmp
pop
aad
pop
stos
xchg
sub
mov
in
pop
cmpsl
ret
cmpsb
jae
hlt
in
int3
insl
repz
dec
pop
jg
test
cltd
call
adc
inc
lods
cmp
mov
out
inc
xor
repnz
jbe
push
or
mov
insb
fldt
test
in
test
subl
pop
outsl
and
sbb
ljmp
adc
push
pop
test
push
dec
mov
pop
dec
repnz
std
pop
imul
int
mov
fs
xchg
push
rcr
inc
aaa
lds
cmc
xchg
fs
mov
jno
xchg
push
pop
xchg
shrl
int
or
inc
sub
pushf
es
pop
enter
and
pop
movsb
pop
ljmp
cmp
add
ljmp
add
pop
jl
mov
xchg
loopne
addr16
inc
in
bound
mov
fistpl
fstl
test
mov
push
and
mov
and
repnz
aaa
add
pop
add
in
movsl
pop
mov
mov
pop
repnz
add
mov
test
push
mov
dec
es
cltd
rorb
test
fucomi
or
ficoms
cwtl
and
and
dec
stc
fs
inc
xchg
repnz
pop
arpl
push
push
pop
rep
fidivl
jbe
es
and
or
adc
ret
pop
mov
divb
dec
jnp
and
mov
sub
jno
pop
xchg
adc
pop
jb
cld
in
xor
adc
adc
test
sbb
xchg
clc
dec
or
fwait
ljmp
pop
cmp
or
js
sbb
fbstp
neg
mov
fistpl
mov
fldcw
arpl
ja
pop
push
es
insb
inc
add
xchg
les
fistpl
dec
fsubr
lret
idivb
mov
jns
sbb
pop
pop
pop
push
jecxz
adc
pop
push
ror
inc
and
sbb
push
popf
fisubrl
push
pop
decl
mov
jg
std
inc
movsb
int
mov
rcrl
or
sbb
mov
jp
pop
lret
dec
push
clc
mov
int
sub
adc
pop
lods
cmc
inc
hlt
push
popa
pop
movsb
xor
int
cli
pop
pop
jno
neg
movsl
mov
adc
push
and
cwtl
pop
pop
jne
cmp
filds
jg
pop
push
fmul
add
bound
outsl
jecxz
mov
pop
mov
and
insl
pop
scas
sub
cmp
add
sbb
dec
xor
inc
sbb
or
ja
jnp
or
out
inc
iret
pushf
pop
and
push
fiaddl
sbb
jecxz
lods
stos
sbb
lcall
jg
dec
pop
add
pop
test
sahf
lret
mov
icebp
fwait
xchg
push
aas
pop
mov
imul
enter
scas
test
cld
pop
fdivrs
lret
mov
addl
pushl
fadds
repnz
push
cmp
mov
mov
xchg
inc
adc
movsl
inc
scas
insb
rcrb
lods
cmpsb
std
xchg
pop
xchg
jbe
inc
daa
nop
sbb
jmp
xlat
test
and
scas
mov
jmp
mov
fdivrs
dec
push
cmp
pop
mov
push
pop
into
xor
negl
jbe
popf
sub
and
pop
int3
popa
push
jecxz
les
dec
dec
adc
data16
jne
cmp
sbb
outsb
aas
addb
test
add
mov
loopne
xor
stc
jne
xor
push
scas
mov
and
mov
andb
push
cltd
mov
jge
sbb
jg
sahf
call
iret
mov
jne
stos
cmc
inc
scas
push
mov
mov
scas
lcall
int
xchg
imul
push
loope
push
in
inc
pop
cwtl
xchg
insl
lcall
or
stos
pop
pop
mov
idiv
push
pop
mov
dec
leave
xchg
jb
and
adc
or
mov
shll
jl
lahf
int3
ja
adc
pop
pop
xor
pop
and
stc
lods
xchg
fnstenv
dec
fsubrs
fisubrs
stos
clc
mov
push
addb
pop
movb
fdivs
cmp
data16
into
inc
pop
daa
aaa
ljmp
pusha
fisttpl
dec
jbe
sub
mov
pop
jmp
sti
ja
in
jb
jl
lcall
ds
arpl
mov
inc
js
loopne
aas
jbe
scas
xlat
out
adcb
jmp
std
sbb
pop
outsb
pop
out
pop
fistpl
pop
and
xchg
popf
pop
xchg
jp
jbe
push
pushf
sbbl
mov
clc
pop
and
lods
dec
pop
scas
or
sub
jne
cld
ss
xor
sub
mov
sbb
movsl
jns
imul
push
cld
ret
mov
push
pop
sbb
fnsave
aam
daa
imul
mov
test
pop
lds
mov
call
pop
cmc
sub
mov
adc
and
pop
adc
mov
imul
push
sbbb
std
push
repz
and
pop
insb
test
int3
stos
mov
repz
mov
dec
ss
mov
pop
stos
adc
or
jg
addr16
std
dec
xchg
mov
sbb
sbb
and
and
and
ret
mov
cli
loop
ja
enter
outsl
inc
pop
adc
int3
inc
lcall
sbb
stos
sbb
add
test
push
xor
test
ret
mov
shll
pop
clc
xchg
cmp
mov
xchg
dec
ret
pop
or
test
fildll
pop
cmp
xchg
sbb
cmp
pop
repnz
dec
lcall
ja
and
sub
icebp
cli
xor
popf
aas
dec
pop
xlat
ja
ficompl
cld
popa
cli
rcll
aaa
out
mov
test
inc
and
pop
aam
outsl
jl
jno
sbb
mov
pop
inc
lds
cltd
sub
dec
pop
icebp
xchg
les
pop
sbb
adc
in
jb
test
dec
in
and
jmp
mov
stc
out
in
and
sub
stos
jge
repz
or
pop
mov
cmp
lods
mov
stc
outsb
lret
enter
out
add
addr16
es
in
dec
jo
mov
packssdw
jecxz
pop
sbb
scas
or
test
add
rorb
std
fwait
pop
lret
push
test
int3
mov
cwtl
fstps
repz
fwait
mov
stc
push
ljmp
or
push
mov
sbb
scas
clc
bnd
xor
ds
lea
pop
dec
or
neg
mov
pop
push
int3
lret
int3
push
mov
dec
pop
add
int
ja
adc
stc
lahf
mov
sub
sarl
push
mov
stos
scas
xor
mov
sbb
pop
add
cmpsb
scas
push
orb
mov
jp
das
mov
pop
add
xchg
sub
int
out
movsl
mov
into
imul
leave
sub
and
push
add
test
pop
jns
xlat
aam
push
pop
mov
and
mov
cmp
fmull
shrb
push
sbb
imul
dec
lret
push
repnz
fstpl
stos
enter
ss
into
shl
jbe
pop
xor
sub
pop
pushf
int
lds
cmpsb
jne
out
jb
mov
sbb
sbb
pop
out
dec
sub
jecxz
pop
loopne
nop
adc
int3
xor
or
cmp
and
mov
loope
adc
adc
fcomps
add
sbb
lret
push
jecxz
and
int3
cmp
lahf
add
dec
rcrb
jp
hlt
jns
aaa
add
mov
arpl
or
je
cmp
pushf
loop
jb
pop
sub
adc
sub
rol
sub
jle
add
pop
sbb
out
fldl
ds
push
adc
xor
leave
mov
lods
or
mov
scas
and
cmpsl
mov
das
dec
inc
sbb
xor
jnp
jbe
push
popa
mov
xchg
pop
sub
pop
outsb
jns
ljmp
adc
pop
test
pop
scas
cmp
in
add
push
pop
shll
fidivrl
sub
stos
or
lods
push
mov
fcompl
lahf
or
adc
pop
xchg
dec
or
movsb
pop
outsb
pop
mov
es
mov
out
fwait
out
mov
lea
sub
jb
cmc
sbb
std
and
mov
jno
in
ret
nop
jle
repnz
mov
lret
lret
mov
mov
push
cltd
sub
inc
cld
imul
jg
pop
lods
repnz
dec
test
mov
clc
inc
mov
pop
jbe
pop
jmp
in
xchg
dec
and
inc
and
add
jl
pop
dec
xchg
adc
idivl
int
mov
push
pop
push
pop
and
add
stos
in
pop
jne
bound
ret
pop
lock
push
xor
pushf
inc
and
loop
add
push
daa
pop
sbb
xchg
xor
pop
lret
icebp
aam
mov
adc
pop
int
sbbl
jmp
testl
jbe
js
daa
pop
sbb
das
lea
int
or
outsb
pop
xlat
pop
or
sbb
pushf
paddq
or
mov
ds
xor
push
xchg
xor
pop
ja
cmp
mov
mov
pop
mov
ret
pop
test
dec
sbb
subb
pop
std
mov
xchg
dec
mov
pop
fldenv
sbb
mov
pop
cmc
sbb
lods
pop
mov
push
punpckhdq
cld
sti
pop
and
adc
pop
pushf
out
mov
pushl
inc
mov
cmp
rcrb
scas
adc
jnp
mov
push
pop
jae
and
out
pop
jns
sbbl
pop
sbb
insl
shl
mov
xor
rorb
jns
pop
ds
xchg
das
movsb
out
loope
sbb
js
dec
in
sbb
pop
inc
pushf
test
xchg
dec
mov
jae
sub
mov
cmpsl
pop
cltd
mov
icebp
iret
pop
test
sbb
inc
add
insw
pop
dec
xchg
push
fs
xor
pop
enter
xchg
test
jecxz
ret
subl
push
cmp
loop
sbb
push
dec
pop
int
xor
sub
pop
jns
pop
fdiv
lret
push
and
push
fistps
adc
sub
sbb
xchg
dec
dec
out
pop
add
sahf
sbb
test
dec
loopne
mov
xchg
dec
jo
xor
jne
sbb
mov
cmpsl
push
xor
inc
cmp
mov
lea
cld
push
inc
mov
adc
psubb
jp
pop
outsl
std
stc
sbb
mov
mov
push
mov
js
fadds
loopne
pop
sub
sbb
inc
mov
push
add
rolb
adc
fdivs
pop
enter
xchg
xor
dec
jmp
jb
cltd
pop
jecxz
loopne
mov
jo
sti
lahf
mov
cltd
popa
xor
dec
jb
cli
test
lds
push
stos
rorb
fstpl
jne
xchg
outsb
out
rcl
pop
pop
cwtl
icebp
stos
mov
pop
sub
jno
inc
mov
xchg
jge
add
int
pop
addr16
and
push
orb
cmp
and
mov
cmp
pop
in
jmp
mov
push
adc
int
out
cmp
cmp
mov
jl
sbb
fsub
pop
loop
fnstcw
lods
outsb
insl
sbb
dec
mov
pop
out
sbb
lea
add
and
scas
push
repz
sbb
pop
xchg
jns
dec
xchg
daa
aam
inc
cmp
popa
roll
xchg
push
adc
insb
and
jb
pop
aad
mov
in
cmp
sbbl
push
or
int3
pop
dec
mov
ret
into
adc
repz
sbbb
mov
mov
dec
mov
retw
insb
fcmovb
movsb
mov
fwait
jmp
push
fs
sub
pop
jbe
test
or
inc
lcall
adc
lods
xchg
jecxz
pop
jge
jnp
stos
and
sahf
push
dec
fsubrp
dec
pop
dec
leave
cs
cmp
pop
push
sahf
rorl
add
pop
std
and
xor
imul
inc
sbb
fistl
push
movsb
mov
adc
fisttpl
sbb
push
lea
pop
inc
or
adc
adc
sbb
sahf
mov
insl
jbe
xchg
xchg
fsubl
dec
and
and
adcb
fwait
lods
ficompl
adc
inc
push
sub
pop
cli
pop
and
mov
gs
in
pop
sbb
rcr
leave
enter
lods
icebp
pop
enter
into
pop
jne
sbb
cmp
lds
xor
ds
mov
xlat
xchg
mov
sub
inc
inc
ds
or
stc
sub
rorl
fnsetpm(287
add
push
scas
sub
mov
sub
pop
fdivl
sar
ret
pop
mov
popa
or
dec
ja
subl
lahf
gs
fnstenv
scas
dec
pop
xor
stc
or
gs
pop
pop
jbe
cmp
loope
es
fmuls
and
xlat
lds
in
int
push
mov
sub
jbe
add
xchg
or
jle
clc
xchg
cmp
adc
mov
insb
xchg
negb
fs
xor
pop
sbb
pop
out
hlt
push
ja
imul
in
pop
mov
push
cmpsb
lods
ffreep
int3
cltd
fiaddl
pop
jge
sbb
cmp
mov
mov
push
mov
pop
shlb
into
ficompl
add
and
pop
xor
movsl
push
aaa
pop
or
pop
xor
rorl
jb
aam
sbb
cld
cmp
stos
orb
fsts
js
pop
push
lock
mov
pushf
and
lea
stc
push
sub
lahf
les
shll
pop
leave
sub
scas
jbe
adc
pop
shll
mov
lock
mov
xchg
int3
lahf
cwtl
mov
xor
or
mov
adc
lods
push
insl
jae
pop
xor
or
jo
push
fcompl
cmp
je
dec
scas
pop
cmp
mov
fisubrs
add
in
pop
adc
lret
inc
pop
mov
repnz
int3
xchg
movsl
inc
mov
lahf
sub
out
mov
sbb
mov
aas
ret
dec
shr
mov
jecxz
jb
sbbl
xor
sahf
cwtl
shrl
mov
pop
cmpsl
inc
mov
lods
insl
pop
dec
dec
mov
xor
xlat
pop
pop
mov
pop
xchg
cmpsl
lret
pop
xchg
push
dec
pop
cmp
shll
jb
outsl
add
adc
jge
push
pop
inc
movsb
or
sub
jns
ret
xor
jmp
lea
lret
xor
insb
mov
cmp
push
fwait
push
loopne
inc
repz
cmp
rcrb
pop
call
xchg
out
fwait
clc
pop
mov
test
xor
fcmovnbe
or
dec
fmuls
nop
push
or
pop
and
push
sub
fnop
stos
jo
mov
pop
push
add
fwait
add
fdivs
pop
mov
ficomps
outsb
cli
sub
ss
pop
loope
pusha
pop
int
push
pop
dec
stc
push
dec
sti
jp
aad
gs
scas
inc
xchg
mov
aam
movsl
sbb
jb
pop
mov
syscall
fscale
stos
rcrb
dec
push
pop
pop
test
pop
add
int3
dec
dec
out
dec
mov
insl
pop
push
sub
int
dec
sub
dec
adc
fistpll
and
pop
cwtl
adc
add
pop
ss
test
addr16
sbbb
sbbl
loop
pop
xlat
pusha
outsl
cltd
ss
pop
xor
mov
jmp
lahf
cltd
xor
and
cli
mov
fisttpl
sub
pop
cwtl
jnp
dec
jmp
lret
in
inc
mov
jb
lea
insb
sbb
or
pop
sbb
jb
rolb
inc
mov
outsl
icebp
dec
adc
sub
sahf
xchg
aaa
sbb
mov
mov
xchg
cmp
sbb
mov
pop
mov
sub
leave
fists
cmp
jne
fsubs
je
inc
mov
rcl
pop
ret
sbb
pop
jb
pop
jbe
or
add
cmc
adc
pop
inc
mov
pop
and
pusha
push
pop
xor
cld
cmovl
push
sti
xor
push
dec
or
cmpsl
cltd
in
imul
cmp
or
loope
out
dec
add
mov
lahf
imul
movsb
shll
pop
jecxz
push
push
cmp
mov
pop
lods
push
lahf
pusha
jno
fistpl
repz
add
imul
lea
xchg
sub
mov
mov
mov
pop
sbb
ret
push
jb
or
mov
fwait
jnp
insb
mov
cmpsl
lds
movsb
fs
mov
stos
cmp
pop
aad
mov
ja
das
shrb
xor
movl
pusha
pop
xchg
push
jnp
mov
cmpsb
fiadds
sbb
and
daa
cmp
xor
mov
mov
dec
dec
fisttpll
loopne
cli
int
scas
icebp
push
push
pop
jp
inc
cmp
sub
xchg
or
push
pop
dec
loopne
iret
inc
sbb
pop
ds
jp
cmp
insb
adc
rorl
pop
inc
fcoml
mov
mov
outsl
mov
cltd
ja
push
iret
xor
fucompp
dec
enter
outsl
lods
push
mov
pop
into
out
mov
lcall
jmp
jecxz
int
mov
jbe
loop
arpl
add
pop
into
es
dec
xor
movsl
data16
mov
or
adc
shll
jge
in
cmc
out
pop
shlb
sbb
xor
dec
push
and
inc
lea
sub
sbb
mov
aaa
xchg
dec
mov
xor
or
pop
cwtl
pusha
sbb
pop
inc
xchg
push
mov
pop
xor
jmp
inc
mov
cmpsb
jbe
pop
cli
pop
fstpt
lds
icebp
pop
or
push
fbstp
jp
add
lcall
jl
shlb
push
add
jb
jecxz
mov
add
sahf
scas
or
stc
and
pop
push
or
jne
mov
mov
in
stc
push
rcrb
mov
mov
cmp
xchg
or
sarb
pop
cltd
mull
push
pop
mov
les
fistpll
inc
xor
dec
insl
dec
mov
jecxz
pop
add
sub
push
xor
test
ror
pop
adc
je
add
xor
aad
sub
pop
push
orl
cmp
in
pop
add
pop
lret
dec
cmc
test
rcl
pop
jb
loopne
and
jle
pop
in
cmp
xchg
pop
into
cmp
adc
cmp
and
xor
jle
push
insb
pop
cli
mov
rorl
jge
adc
or
dec
fwait
sub
mov
mov
fxch
sbbl
call
ret
pop
push
pop
sub
scas
out
sar
jmp
cwtl
rclb
inc
jecxz
cmp
lret
pop
fsubrp
sbb
shrl
push
sub
mov
loopne
leave
mov
adc
imul
in
sti
sub
test
dec
test
add
jecxz
xchg
ljmp
mov
rcl
jg
pop
pop
push
or
pop
or
jnp
popa
cmpsb
mov
push
ret
test
xchg
and
adc
pop
push
mov
pop
adc
fsubp
in
sub
cmpsb
js
lcall
mov
pop
xchg
fadds
mov
inc
dec
imul
jge
pop
int
aas
mov
mov
and
sti
flds
cmp
mov
dec
pop
dec
cmp
mov
jne
repnz
ret
push
xchg
or
mov
shrl
cmp
fxch
xchg
jnp
add
xchg
imul
pop
scas
adc
jl
loop
mov
sbb
out
pop
push
lea
mov
aad
pop
rol
adc
pop
xor
loope
popa
mov
pop
pop
add
xchg
test
pop
pop
xchg
out
xorl
mov
pop
std
push
and
add
pop
jno
mov
int
sbb
lock
pop
ds
xor
adc
xchg
push
pop
outsl
aad
mov
or
cld
inc
mov
sub
in
or
pop
mov
mov
cmp
fwait
insl
addr16
mov
loop
test
mov
add
pop
int
stos
ja
fwait
les
jb
in
shll
repnz
push
frstor
dec
or
xchg
add
lea
jge
lods
lret
add
sbb
fsubr
fwait
sub
pop
sahf
test
add
pop
addr16
jno
sbb
dec
pop
cmp
lods
inc
push
scas
sbb
adc
adc
dec
into
aam
dec
popf
movsb
jnp
lock
mov
mov
iret
push
sub
data16
pop
hlt
daa
ud0
xor
arpl
push
inc
sbb
sub
and
xor
ficomps
and
cmp
aaa
fs
imul
pop
scas
and
test
xchg
pop
stos
in
into
cmp
pop
adc
xor
scas
out
clc
add
ja
mov
sbb
inc
pop
ss
mov
mov
loope
jnp
in
and
mov
lods
inc
sbb
mov
push
sub
pop
mov
jnp
push
cmpl
sub
pop
or
inc
lcall
imul
or
ss
add
rorb
sbb
js
subb
cmp
pop
jbe
lret
inc
or
lods
sahf
std
pusha
pop
xor
imul
or
movsl
cld
adc
int
jmp
push
mov
and
fdivrs
cld
test
pop
je
lret
cmp
nop
mov
xor
cld
ret
lock
xchg
mov
mov
mov
movsb
pop
xchg
out
cmp
pop
mov
lds
pop
push
int
xchg
jl
nop
and
push
sub
add
js
jmp
into
sbb
mov
mov
xchg
lods
mov
bound
les
fwait
jae
ja
jo
fnstenv
cltd
mov
add
pushf
cmpsb
pop
fcmovb
jnp
in
mov
push
jbe
sub
mov
dec
jecxz
sub
fidivl
call
adc
lds
pushl
stc
in
pop
and
insl
out
xchg
mov
iret
or
cwtl
mov
mov
lahf
bound
imul
mov
lods
xor
jecxz
inc
push
pop
and
addr16
ljmp
pop
mov
jo
std
nop
mov
mov
push
loop
jg
clc
jecxz,pn
dec
dec
sahf
enter
adc
adc
mov
xor
pop
iret
xor
ret
mov
xchg
sti
mov
loopne
pop
xchg
sahf
dec
out
scas
lcall
cmp
mov
fwait
ret
xor
adc
sub
addl
jecxz
es
pop
stos
dec
clc
xrelease
insb
or
mov
push
popa
fdivs
pop
or
ss
mov
and
jmp
xor
loopne
scas
stos
adc
nop
inc
scas
push
lock
mov
stc
pop
sub
sub
std
imul
mov
and
inc
push
mov
test
pusha
xchg
xor
sub
test
cmpl
sti
icebp
outsb
jbe
or
mov
enter
lahf
pop
int
sub
jecxz
fs
icebp
in
dec
pop
aaa
dec
pushf
mov
dec
repnz
jp
dec
lods
pop
xchg
repz
jo
jb
outsl
sti
cmp
push
orl
fidivrl
jns
mov
sbb
loope
xchg
push
inc
pop
dec
add
and
sbb
mov
dec
into
mov
push
pop
sbb
add
test
imul
gs
inc
out
int
pop
cmp
movsl
sbb
dec
dec
fildll
into
pop
pop
sub
pop
or
data16
push
jecxz
popa
pop
into
cld
dec
ja
ret
aam
pop
push
xchg
sti
outsl
cmc
xchg
pop
push
pop
jo
sbb
test
push
int
jl
push
sbb
push
jle
pop
jb
iret
mov
pop
jl
bound
stos
je
pop
and
fwait
int
daa
rcrl
jb
xchg
cs
sbb
xchg
mov
pop
inc
scas
jbe
in
mov
xchg
fcoml
adc
mov
inc
stc
repz
or
sbb
test
adc
dec
push
jmp
mov
addr16
rol
and
out
push
mov
sbbl
sbb
mov
pop
dec
ret
or
sub
mov
mov
arpl
iret
insl
add
repz
cmp
pop
lret
mov
pop
inc
mov
das
sarl
push
xchg
arpl
mov
scas
dec
adc
sbb
jmp
sbbb
daa
sbb
cli
jno
nop
out
pop
ja
ds
mov
int
jge
andl
and
insb
cmpsl
adc
dec
rcrl
lea
insl
pop
fdiv
mov
inc
pop
fs
add
mov
cmp
popf
pop
adc
dec
jns
xchg
sbb
mov
cmp
sub
add
jno
sahf
inc
pop
orl
pop
in
sub
sbb
jns
pop
xlat
leave
and
in
pop
jb
pop
jae
inc
mov
addr16
push
pop
aad
lahf
sbb
dec
in
and
sahf
mov
inc
pop
cmp
dec
out
js
loop
xchg
cld
out
fsts
fstpl
dec
push
jbe
ret
lods
or
faddp
xchg
cmp
pop
cwtl
pop
jb
pop
pop
test
sbb
scas
or
pop
in
jo
jl
int
mov
or
xchg
stos
in
push
sub
fnstsw
cmp
mov
jae
pop
aaa
inc
push
aam
stc
cwtl
pop
jne
int3
call
xchg
repz
xor
push
iret
dec
pop
pusha
out
rcrb
int3
lods
pop
in
cmc
idivl
jge
stc
xchg
fstps
enter
mov
lahf
aaa
cmp
mov
cwtl
and
adc
pop
and
and
hlt
test
mov
in
and
outsl
add
pop
int3
icebp
jecxz
dec
imul
mov
or
sub
fisttpl
dec
inc
sbb
cli
push
mov
mov
sbb
je
movsb
subl
loop
mov
loope
adc
and
ret
aaa
cmp
jno
mov
mov
dec
cltd
leave
mov
pop
xor
sbb
dec
mov
adcb
sbb
mov
pop
push
jecxz
fmuls
pop
or
add
ret
add
adc
mov
mov
popl
dec
pop
dec
sbb
add
adc
mov
sbb
pop
pop
mov
add
gs
sbb
cwtl
cmp
pop
cmpsb
sti
xor
pop
std
daa
scas
jo
add
dec
setnp
xchg
loope
into
xor
pop
in
ja
ds
mov
inc
sub
mov
out
dec
push
cli
pop
mov
mov
cwtl
call
dec
test
xchg
mov
add
cmpl
lcall
rcrb
push
addb
cmpsl
mov
je
rorl
mulb
cmp
inc
inc
jne
aas
out
sbb
fsubl
or
cmp
ficoml
sub
xchg
jg
push
dec
scas
pop
push
lods
inc
std
roll
push
mov
in
sbb
stc
jb
and
push
int
pop
xchg
push
mov
push
sbb
push
and
mov
neg
sub
and
pop
and
ds
es
xlat
mov
add
xor
outsb
leave
pop
cmp
int3
ffreep
push
push
xchg
sub
mov
sub
aam
push
adc
filds
xchg
xchg
pop
pop
int
dec
std
inc
imulb
loop
xor
jb
mov
pop
mov
repz
pop
jno
loop
xchg
cltd
lock
sub
mov
inc
cmp
scas
or
pop
lahf
mov
mov
push
das
sub
push
ret
out
movsb
push
pop
cwtl
daa
inc
xchg
jo
popf
pop
pop
jge
repz
ja
adc
push
adc
cmc
pop
sbb
test
cmp
shl
pop
js
ss
sbbb
adc
inc
outsb
call
es
bound
add
sahf
aad
cmp
nop
je
int3
push
scas
dec
push
stos
stos
in
mov
pop
movsb
mov
daa
movsl
inc
and
xchg
mov
fst
or
sub
xor
cmp
mov
pushf
pop
jl
jnp
ss
mov
inc
mov
imul
jnp
pop
inc
stos
mov
push
std
pop
jb
outsb
mov
imul
jl
xchg
add
cld
mov
inc
shrl
insl
push
pop
adc
xsha256
cmpsb
nop
push
mov
mov
int
movsl
mov
inc
jl
and
xor
test
clc
adc
dec
iret
dec
mov
scas
xor
inc
adc
xor
sbb
jmp
mov
push
adc
iret
mov
ja
aas
jo
mov
hlt
mov
sahf
or
loope
pop
mov
shrb
jge
pop
rcll
add
dec
lea
and
xchg
push
mov
rorl
test
rcrl
pop
pop
fwait
shrl
mov
fwait
int3
aad
sar
fcmovb
rol
add
pop
push
push
mov
and
dec
or
stos
insb
movsb
les
cmpl
popf
cmp
pop
fildll
jecxz
inc
and
xchg
jmp
dec
push
pop
xor
push
lds
and
fiadds
mov
dec
iret
inc
pop
fmuls
pop
out
stos
cltd
orb
push
sbb
inc
mov
rcrl
pop
cmp
mov
sub
int
dec
lret
scas
pop
pop
mov
add
xchg
dec
int3
cmc
es
fistl
mov
scas
add
xor
fwait
cltd
sub
addr16
out
xchg
pop
sbb
dec
leave
pop
clc
dec
adc
fs
dec
inc
insb
and
into
out
lea
pop
adc
mov
aas
in
jae
pop
mov
dec
jbe
pop
sarl
int
add
in
enter
dec
pop
stos
mov
pop
pop
adc
xchg
mov
sub
mov
mov
imull
outsb
mov
pop
xlat
stos
pop
dec
and
push
pusha
mov
adc
lret
lret
dec
sahf
dec
movsb
jnp
jno
pop
and
loopne
push
pushf
aas
fcomip
orl
and
pop
jb
jno
ljmp
inc
jbe
cmpsl
in
pop
sub
hlt
mov
pop
jp
xor
mov
rcl
jl
inc
icebp
scas
scas
mov
leave
cmp
adc
dec
cltd
or
mov
popa
fcmovnu
into
loope
dec
jecxz
sub
jnp
aas
sbb
scas
jb
cmc
push
jns
pop
out
add
sarb
pop
andb
xchg
int3
lods
jns
pushf
mull
push
pop
jg
test
push
dec
mov
pop
xchg
fs
in
inc
ljmp
icebp
xor
leave
pop
cmp
sbb
inc
adc
xchg
or
pop
out
aaa
mov
push
int3
out
pop
xchg
or
dec
mov
jl
mov
push
fistl
cmp
adc
imul
sbbl
mov
mov
jl
cld
push
inc
addr16
jecxz
fldl
dec
sub
imul
iret
jb
std
inc
adc
shrb
push
pop
in
pusha
lahf
mov
jb
xor
xchg
inc
ljmp
pop
testb
or
push
clc
inc
jo
inc
jnp
push
cli
pop
pop
xchg
adc
cli
adc
loop
es
enter
fistpl
fwait
lcall
adc
and
sub
dec
pop
shll
les
adc
sbb
adc
repnz
mov
pop
test
stc
lds
push
addr16
lods
dec
mov
cmpb
xchg
mov
gs
pop
sbbb
push
icebp
fdiv
scas
or
mov
lahf
mov
cmp
and
lods
mov
or
inc
sub
js
pop
cmp
push
mov
jmp
sbb
es
inc
mov
adc
test
pop
push
mov
lcall
aad
dec
pop
ss
jnp
or
hlt
pop
xorb
sahf
lahf
add
pop
mov
dec
inc
loope
incl
cld
pop
pop
in
shlb
cmp
popf
mov
in
push
mov
or
je
inc
mov
int3
out
inc
bound
rolb
pop
mov
inc
pop
adc
sbb
ds
mov
inc
sarb
pop
mov
sub
outsb
jge
sub
jo
pop
adc
jecxz
adc
cmc
jno
addr16
pop
and
cltd
int
fs
movl
lcall
subb
and
outsl
push
adc
xchg
or
mov
jmp
sbb
mov
inc
pop
lret
stc
pop
push
jg
loope
pop
test
add
adc
pop
loopne
mov
jmp
in
jmp
pop
sarb
push
sbb
pop
lea
inc
or
jle
insb
dec
cmpl
cli
lock
in
xchg
aam
pop
jns
cs
into
pop
xchg
jbe
inc
cmp
fwait
test
arpl
fidivrl
seto
jecxz
pop
insb
pop
fiaddl
jns
lret
fwait
shrl
pop
ljmp
decb
xchg
mov
push
pop
pop
popf
mov
lods
dec
lret
pusha
pop
sbb
pop
data16
and
or
lahf
mov
pusha
insl
sub
repz
mov
sub
nop
mov
imul
aaa
pop
sahf
cmp
pop
mulb
push
mov
pop
mov
shl
into
js
ret
pop
jecxz
xlat
rcrb
cmc
lds
push
pop
insb
mov
repz
inc
fcmovnb
sarb
pop
pop
adc
xor
mov
out
dec
fimull
pop
enter
xchg
inc
mov
cmp
pop
mov
add
aad
stos
int
pop
adc
pop
out
fstpt
sbb
and
sub
enter
subl
aas
xchg
xchg
xor
xchg
mov
mov
in
adc
pop
dec
lods
sub
mov
jae
cli
repz
fcomps
push
inc
jns
popa
dec
pop
je
xor
cmp
negl
cltd
or
push
pop
int
cmp
sub
sbb
add
push
sub
jmp
pop
and
lds
push
es
pop
and
dec
push
movsb
push
xor
mov
outsb
lahf
add
xchg
pop
std
insb
jle
mov
mov
push
push
js
fimull
enter
insl
add
push
pop
and
js,pt
lcall
pop
loope
out
mov
es
pop
push
pop
push
imul
xchg
pop
add
sbb
jnp
pop
lahf
pusha
dec
or
pop
lock
mov
cmpsb
aad
repnz
push
pop
sbb
in
xlat
or
outsl
pop
sbb
dec
pop
dec
pop
popf
pop
adc
sti
shll
add
mov
shrb
in
ror
cli
leave
xchg
xchg
xchg
pop
insl
addr16
lret
jo
push
pop
or
mov
mov
out
dec
repz
push
cmp
cmp
pop
sub
scas
outsl
cmp
lea
mov
pop
mov
and
jp
xchg
stos
pop
popa
xchg
sub
push
xor
mov
test
mov
push
lods
negl
fsubrs
inc
push
xchg
lcall
out
or
int
sub
out
mov
aam
mov
pop
inc
fidivrl
sbb
sub
sub
cmpsl
and
ret
xor
cmp
pop
mov
fcmove
sbb
ret
cmp
push
in
in
incb
pop
adc
jnp
jb
fbld
out
dec
xlat
std
or
popa
cli
pop
mov
movsl
mov
incb
sbb
pop
test
sbb
daa
arpl
std
dec
and
vpaddusw
push
pop
adc
jb
out
lret
bound
pop
xor
sbb
in
push
pop
dec
ret
add
call
or
cmp
lea
cmpsl
es
mov
scas
mov
dec
cmpl
imul
mov
jb
mov
pop
std
push
jp
xor
test
test
sub
lods
push
pop
je
and
sbbb
arpl
movsb
fnstenv
cs
add
mov
out
sub
scas
mov
add
fldt
into
push
rclb
add
in
testb
mov
cmp
movsb
pop
jge
pop
or
pop
jns
fdiv
ret
adc
pop
fimuls
sbb
xchg
pop
pop
xchg
xchg
push
jo
mov
mov
out
ret
sbb
scas
add
mov
in
pop
mov
fwait
cs
es
out
jle
sbb
inc
repz
rcrb
std
imul
fwait
std
mov
xor
jmp
arpl
out
popf
bound
cmp
pop
jns
mov
pop
mov
fildl
adc
mov
mov
rcrb
cwtl
xor
xchg
mov
imul
pop
or
xchg
sbb
pop
inc
mov
xor
lods
inc
jmp
pop
and
adc
jecxz
cmp
mov
and
loopne
and
pop
pop
aas
test
dec
lods
data16
les
pop
jmp
loope
pop
xor
dec
xor
cmp
aaa
dec
cmp
cmp
add
daa
dec
or
test
out
int
jmp
rorl
jb
xchg
inc
pop
cvtps2pd
mov
mov
cmp
das
out
insb
cmpb
push
xchg
adc
leave
mov
jl
outsb
sarl
jbe
in
add
xchg
dec
ret
jo
imul
cltd
adc
pop
xor
loope
pop
or
ror
jle
into
sub
xor
adc
adc
int3
mov
ds
pop
iret
xor
clc
ja
xor
mov
sbb
and
sub
sbb
in
shrb
imul
data16
lock
cmp
jecxz
xchg
inc
and
lcall
push
mov
xlat
lds
fmuls
test
daa
xor
cmpsl
push
imul
sub
loopne
push
mov
pop
xor
lret
add
pop
adc
jnp
push
xchg
mov
lock
mov
inc
cmc
pop
mov
adc
iret
add
lea
mov
mov
outsl
std
pop
jmp
mov
push
push
sbb
lods
xchg
jb
xor
adc
sbb
push
nop
jbe
or
aas
sbb
xchg
imul
fists
jge
and
stos
jl
pop
pop
lret
or
sub
mov
jae
add
xchg
cwtl
stos
inc
add
loop
mov
lcall
dec
fbld
xor
adc
xchg
mov
repnz
rcr
mov
dec
adc
adc
dec
xchg
mov
lock
inc
push
nop
adc
sub
scas
in
sbb
cmpsb
add
dec
test
push
fdivrl
ja
jae
mov
push
jb
push
mov
in
push
jge
pop
pop
or
add
sti
mov
out
test
mov
pop
int3
cs
mov
jg
pop
int
pop
jle
push
jno
pop
imul
int3
lret
push
sbb
pop
repz
cmpsl
sbb
xor
addb
jg
out
xchg
dec
pop
repz
jns
lret
je
add
pop
call
sbb
dec
ja
jge
push
test
adc
pop
das
jb
inc
es
mov
imul
inc
mov
cmp
or
mov
pop
pop
or
mov
jle
xor
sub
fbld
push
fldcw
pop
sbb
push
mov
int
imul
pop
mov
pop
adc
imul
popf
movsb
sub
xor
cmp
dec
cmp
push
pop
sbb
shll
pop
je
scas
cmp
jecxz
pop
push
pop
lods
int
cwtl
lock
inc
jb
add
mov
cmp
gs
and
dec
push
push
pop
xlat
int
out
pop
pop
insl
dec
pop
push
cmp
pop
push
push
lock
dec
mov
fiaddl
loope
cli
pop
enter
cmpl
mov
mov
pop
pop
pop
jl
sbb
mov
pop
test
mov
inc
sbb
cs
icebp
or
shrl
nop
stc
cmc
ret
pop
cmc
lahf
lods
push
int3
pop
cmp
add
dec
mov
lret
xchg
push
sub
lods
pop
or
adc
pusha
sbb
scas
popa
xchg
popf
jb
dec
fstps
repz
faddl
cltd
scas
cltd
cmp
in
lods
aas
adc
sub
ljmp
mov
mov
push
xchg
pop
pop
push
jl
imul
dec
rorb
mov
fbstp
fidivl
mov
dec
leave
sbb
sahf
jecxz
shrb
sub
daa
repz
pop
pop
or
xchg
lods
ffree
mov
cmc
iret
shll
dec
call
pop
ficoms
mov
int
insb
xchg
lods
xchg
jge
fneni(8087
sbb
fstpl
in
ljmp
pop
lcall
pop
mov
sbb
mov
gs
jb
neg
and
sbb
sub
xchg
mov
pop
mov
leave
inc
cmp
ret
xor
std
fnstenv
pusha
rorb
loope
pop
shlb
icebp
push
dec
popf
fstpt
mov
inc
sbb
mov
or
sbb
loope
mov
xchg
push
sbb
inc
or
pop
fstpt
dec
aad
push
int
lods
jo
lock
dec
jecxz
pop
inc
into
loope,pt
xchg
popa
pop
adc
movsl
jbe
xchg
mov
dec
in
fdiv
out
mov
fsubr
xchg
test
hlt
pop
jge
push
fucomi
inc
jb
lea
and
pop
mov
stc
dec
pop
cmp
pop
cli
mov
mov
xor
stos
std
test
mov
addb
scas
push
dec
sbb
pop
xchg
ljmp
scas
adc
ss
pop
and
cwtl
repz
dec
in
xchg
in
cmpb
jae
sub
pop
mov
inc
cmp
sti
js
add
jo
pop
and
or
mov
sbb
mov
push
cld
cltd
sub
mov
std
fistps
push
pop
xor
adc
mov
roll
lock
cmp
int3
xchg
jle
mov
int
and
add
xchg
pop
jne
mov
outsl
adc
icebp
jo
pop
lea
jle
pop
push
arpl
xchg
sub
jecxz
pop
fcmovnu
pushf
jae
icebp
mov
int
push
adc
mov
rorb
stc
jecxz
or
cmp
pop
dec
rcrb
and
pop
or
pop
inc
popl
sbb
cmp
adc
fldcw
shrd
test
pop
imul
iret
dec
dec
rorl
clc
stc
push
adc
out
pop
inc
pop
sub
add
sub
push
int3
incl
sahf
adc
int
inc
xlat
fisubrl
or
jo
inc
mov
xchg
xor
cmp
inc
mov
sahf
pop
inc
mull
fisubl
mov
xor
or
mov
pop
mov
pop
sbb
rolb
inc
out
movsl
add
int
pop
imul
pop
fcmovne
push
push
pop
dec
insb
pop
fstpl
xor
mov
push
mov
pop
imul
mov
pop
dec
insb
mov
push
or
mov
xchg
mov
mov
icebp
mov
and
enter
cmp
add
dec
js
inc
sarl
lods
adc
push
xchg
dec
adc
xchg
sub
popf
lret
ffreep
out
jnp
ljmp
lea
mov
push
sbb
fwait
jb
and
lods
sbb
pop
shrb
repnz
adc
cmpsl
arpl
push
fsubr
or
pop
popf
pop
mov
or
negl
mov
pusha
inc
pop
adc
cmpsb
dec
pop
mov
int
imul
jmp
repnz
scas
iret
data16
std
mov
inc
sbb
pop
mov
xorb
lret
out
jmp
loope
pop
int3
cmpl
loop
jcxz
cmp
shll
in
mov
mov
sarl
sub
outsl
dec
lret
pop
or
movsb
mov
stos
pop
mov
sbb
push
clc
inc
sbb
mov
les
into
scas
fwait
mov
in
adc
les
pop
push
outsb
push
insl
mov
repz
fdivs
into
lds
loopne
js
daa
popf
fidivl
push
dec
shl
lea
scas
or
repz
fstl
ret
xor
sti
jl
loopne
mov
daa
mov
aad
pop
notl
je
cld
cmp
push
fists
pop
mov
adc
inc
sub
inc
popl
shll
pop
adc
sbb
and
lret
in
and
xor
sbb
pop
pop
mov
dec
loop
stos
push
leave
mov
pop
es
xchg
lods
pop
inc
xchg
jp
jb
ja
pop
orl
push
pop
fs
imul
jl
sbb
repnz
loop
dec
pop
fstl
xchg
mov
test
shrb
sysexit
lahf
addl
jecxz
mov
pop
movsl
dec
push
dec
pop
mov
lcall
std
lret
sbb
sbb
pop
addr16
and
pop
jne
int3
or
adc
imul
jl
dec
dec
sbb
push
mov
pop
subb
lret
pop
mov
push
ds
je
or
mov
xchg
mov
add
add
cli
mov
fstl
cmp
lds
pop
jle
xchg
sub
pop
rcrl
pop
out
arpl
jb
pop
sti
adc
daa
pop
cmp
andl
jl
xchg
scas
sbb
fcompl
sbb
or
fiaddl
pop
cmp
xor
pop
sbb
in
dec
dec
repnz
mov
push
xchg
gs
cwtl
lret
aad
test
add
je
sub
pop
shll
es
pop
push
xlat
idivb
pop
movsb
push
mov
adc
mov
repnz
push
pop
adc
mov
cmp
mov
mov
inc
cmp
mov
jns
out
mov
sub
into
cmp
mov
scas
xchg
xchg
mov
mov
cwtl
jne
repz
pop
xor
insl
adc
lds
mov
pop
lock
mov
mov
testb
scas
mov
fdivl
pushf
adc
sub
mov
mov
xor
xchg
repz
fdivs
es
pop
mov
push
sub
clc
sub
jo
scas
cmp
int3
jge
fcomip
aam
inc
pop
cmp
jl
add
fs
add
in
inc
ficomps
mov
adc
lock
push
xor
out
cmp
pop
ret
stos
divb
cmp
mov
pop
adc
jge
lahf
cmp
mov
fldt
xchg
cmpsl
pop
jecxz
jno
stos
mov
imul
jp
pop
or
jecxz
dec
pop
fwait
testl
mov
xor
jecxz
pushf
lds
aaa
jp
repnz
dec
subl
jg
into
pop
xlat
dec
mov
dec
pop
sub
sub
or
stos
jno,pt
pop
mov
pop
repnz
call
insb
sbb
out
push
or
pop
dec
adc
jge
lea
bound
mov
clc
jecxz
in
stc
ficoml
push
dec
sbbb
sub
lahf
pop
inc
mov
fmull
mov
xor
jb
dec
jo
mov
dec
lods
mov
or
mov
dec
fnstsw
ret
dec
lahf
aas
xchg
test
jecxz
add
pop
ja
jp
xor
and
test
lret
lds
pop
stc
sar
pop
dec
fwait
arpl
sbb
sbb
pop
rolb
popf
xchg
fidivrl
out
and
dec
test
mov
mov
inc
add
sub
pop
in
push
cmpsl
lea
push
push
mov
adc
pop
mov
mov
mov
and
fucomi
or
mov
aaa
fwait
push
xor
pop
cltd
push
xor
iret
pop
inc
loopne
add
ret
sbb
stos
or
jl
dec
jb
mov
pushf
push
out
push
add
movsb
cmp
fs
mov
push
or
addr16
push
pop
lds
push
int
cmp
out
push
mov
add
xchg
adc
or
movsb
lcall
pop
outsb
rcll
lret
aaa
pop
js
int
ja
xor
in
adc
inc
into
ret
sub
xchg
sub
lods
mov
and
xor
lods
pop
sbb
jle
jb
enter
adc
jne
lea
stc
scas
jnp
jle
mov
mov
add
mov
pop
xor
jae
bound
out
pop
xchg
inc
sub
decl
imul
test
int
pusha
idivb
fdivs
in
mov
mov
jnp
mov
inc
dec
fildll
outsb
jnp
dec
inc
sbb
mov
js
pop
cmp
pop
aas
xchg
xchg
sub
fldz
mov
aad
cltd
xor
pop
call
mov
pop
push
sub
int
pop
pop
inc
ret
movsb
lods
stos
sarl
xorb
pop
sub
sub
fucomi
out
pop
xchg
insb
jecxz
push
xchg
pop
mov
mov
stos
in
cmp
loopne
jp
lods
jno
fldcw
or
dec
pop
cs
mov
lret
out
or
das
in
cmc
mov
fcmovu
and
sub
lret
pop
cmp
nop
xchg
sbb
in
mov
add
pop
cmp
mov
adc
in
push
cli
andb
jo
mov
sbb
mov
lahf
push
mov
dec
push
repnz
sbb
push
pop
or
xchg
pop
ja
data16
xor
movsb
jle
add
fwait
inc
and
mov
arpl
jg
mov
and
loope
mov
ret
lret
adc
aas
pop
sbb
dec
flds
push
cli
sub
popa
and
or
mov
mov
scas
pop
xchg
sahf
sbb
pop
mov
jle
dec
sti
or
ds
pusha
fadd
pop
add
clc
loop
int
mov
aad
dec
mov
inc
pop
mov
stos
jbe
pop
mov
dec
sbb
mov
pop
lret
shlb
pop
int
or
testl
popf
ds
and
pop
ret
adc
mov
sbb
imul
xchg
fs
pop
ja
sarl
mov
aas
popf
push
adc
add
out
outsl
mov
jns
in
jae
leave
repz
pop
test
push
jle
lahf
xchg
movsb
imul
jle
push
push
repz
daa
pop
sbb
xchg
pop
jg
movl
jnp
in
pop
mov
push
shl
outsb
fstps
lea
jbe
cmp
cmp
lock
sbb
fimull
jno
stos
push
nop
dec
popa
pop
jns
dec
les
cwtl
pop
std
fnstenv
cltd
pusha
xor
mov
sub
aad
sbb
inc
jle
test
adc
fadds
xchg
add
sbb
pop
push
jns
out
int
or
mov
in
jns
sar
movl
pop
sub
lea
or
sub
int3
jae
xchg
xchg
fnstcw
pop
mov
ljmp
push
insb
inc
int3
jp
cmp
xor
in
ss
dec
test
sub
jp
int
sub
aam
scas
jo
mov
and
sub
xor
out
cmp
jle
adc
mov
pop
jo
jg
shlb
jbe
sahf
or
pop
or
jp,pt
pop
cld
sbb
aaa
jne
clc
xchg
pop
sbb
lods
mov
mov
rep
jbe
fcoms
mov
mov
fistpl
popf
movsl
sbb
sub
cmpb
or
push
jle
add
cmp
sub
pop
mov
mov
push
pop
and
in
dec
jnp
sbb
push
or
rorl
pop
sbb
fildll
mov
ss
pop
xchg
in
add
dec
dec
pop
cli
or
dec
fstps
sti
lea
sbb
bound
and
dec
and
int
movsl
stos
insl
fwait
or
jmp
dec
mov
hlt
push
int3
mov
pop
jbe
call
cmpl
xchg
mov
sti
popf
mov
outsl
test
sbb
in
push
out
bound
sti
push
divl
dec
adc
mov
dec
aam
sbb
xor
cmc
fistpll
pop
sub
mov
sahf
sarb
inc
fstpl
add
std
pop
mov
cmp
int
cltd
cmpsb
push
dec
icebp
pop
pop
lods
fbld
sti
cwtl
xor
fcmovbe
leave
lcall
enter
movsb
sub
jle
nop
gs
stos
dec
and
mov
push
loope
stos
dec
scas
inc
push
std
mov
mov
data16
vmwrite
dec
mov
mov
es
imul
in
pop
icebp
fwait
lods
inc
inc
mov
subl
mov
int3
pop
sbb
adc
dec
rorb
xchg
mov
pop
icebp
out
rorl
pop
jl
lret
xrelease
ja
pop
adc
int
and
int3
jb
xor
lock
stc
es
sub
arpl
pop
enter
test
shl
pop
mov
push
das
lods
pop
inc
jbe
pusha
sbb
push
ss
jecxz
mov
fs
jo
dec
inc
lahf
add
cli
aad
or
push
cmp
push
dec
pushl
fsts
int
push
lea
xchg
pop
jno
mov
push
and
fstps
sarl
nop
mov
or
mov
faddl
sbb
cmp
mov
jo
lcall
dec
push
or
inc
jbe
push
pop
inc
or
faddl
arpl
push
pop
test
cmp
lods
jnp
les
inc
pop
mov
and
or
jl
ja
pop
sbb
gs
and
scas
mov
arpl
dec
into
xchg
adcb
mov
cmpl
leave
ja
adc
pop
or
mov
push
inc
loope
sarl
repz
stos
adc
mov
push
scas
arpl
call
pop
out
repz
sbb
fstpl
and
insl
in
xchg
test
add
aas
push
lahf
faddl
movsb
lock
ja
out
sub
dec
dec
mov
or
mov
push
scas
scas
dec
or
lret
push
dec
xchg
and
push
fcompl
xchg
push
xchg
xor
mov
mov
xor
std
mov
and
aaa
or
ja
and
xchg
insl
shrl
psllq
pop
xor
lret
mov
andl
hlt
and
pop
jmp
test
mov
cld
mov
cli
inc
sub
sbb
dec
push
sbb
pushf
in
xchg
negl
xchg
test
fists
push
fistpl
push
cmp
sbb
rolb
add
popf
jno
lcall
xorl
rcrb
test
bound
xchg
int3
pop
add
out
or
push
push
daa
xchg
dec
adc
or
add
push
cmp
addr16
fcoml
pop
push
push
int3
in
lcall
sti
jo
bound
rclb
mov
iret
jbe
cmp
ja
loopne
out
sarl
sub
out
int
pop
popf
jae
cld
loopne
dec
add
pushl
pop
cmpb
lret
xor
jae
scas
repz
pop
mov
push
aam
xchg
cmp
fnsave
pop
and
sbb
sub
hlt
and
sti
add
cld
xchg
repz
loop
shrl
pop
gs
xchg
movhps
lcall
xor
dec
jno
ret
loop
push
lahf
pop
cmp
insb
sbb
sti
or
pop
jl
mov
fwait
arpl
mov
pop
int3
or
jp
jmp
mov
sbb
inc
jne
sbb
dec
pop
adc
stos
xlat
cmpsb
cli
rcr
lds
outsl
and
inc
sbb
adc
jp
in
jns
repnz
inc
sub
lahf
jecxz
xor
jge
pop
subb
sar
or
xchg
out
or
into
fcoml
iret
or
aas
inc
adc
mov
push
sbb
lds
cmpsb
pop
mov
add
pop
mov
js
inc
pop
adc
xor
ficomps
aad
bound
int3
fcmovne
jae
inc
and
pop
or
push
pop
jbe
fists
call
or
inc
lret
pop
insl
lea
pop
mov
push
fidivl
cmp
pop
push
idivl
out
sbbl
dec
inc
cltd
pop
add
divb
pop
bound
pop
fld
jb
push
adc
scas
and
pop
fcompl
pop
pop
lods
xchg
sub
lods
rolb
push
push
mov
fstl
and
aad
mov
call
push
pop
push
je
movl
xor
add
ds
outsl
fistl
ficoml
cmp
test
xor
pop
mov
imul
pop
int
cmp
sbb
push
inc
mov
lds
pop
outsb
dec
jg
jo
sbb
decl
pusha
test
ljmp
adc
outsl
rol
int
xchg
adc
data16
sub
mov
fidivs
insl
pusha
or
pop
int3
mov
xor
push
insb
into
sahf
dec
mov
mov
popl
int
pop
mov
ljmp
adc
dec
inc
mov
ret
xor
xchg
pushl
subb
repz
adcb
aaa
fsubs
mov
mov
fistl
cld
dec
inc
jecxz
jl
pop
cmc
mov
lret
inc
mov
mov
fistl
addr16
fwait
ljmp
jns
pop
lds
jge
sbb
lods
pop
movsb
outsb
cmp
nopl
sbb
add
cld
insl
jbe
pop
ljmp
jae
adc
test
jb
icebp
lret
pop
jbe
push
push
push
and
fwait
stc
ret
int
mov
lods
gs
dec
add
sbb
cltd
push
mov
clc
dec
xchg
pop
dec
dec
jbe
call
test
xlat
stc
int
js
loop
ljmp
scas
mov
pop
or
int
sub
dec
inc
stc
sbb
xchg
cs
or
rcl
push
pop
mov
inc
or
pop
out
mov
cwtl
mov
or
mov
sbb
sub
pop
sbb
rcll
mov
insl
sub
xchg
or
sbb
pop
mov
cld
jns
lahf
jge
int
fcomp
ljmp
cmp
adc
mov
fdivs
add
mov
pop
stc
push
mov
adc
loope
les
pop
xlat
xlat
mov
jecxz
inc
pop
stos
lods
imull
test
fcomps
fldt
pop
dec
and
out
mov
pushf
pop
stos
popa
inc
sub
or
pop
dec
sbb
xchg
arpl
inc
aad
addr16
call
pop
pop
dec
loop
enter
cmp
and
fldcw
xor
cmp
mov
aad
dec
pop
push
adc
add
int
xchg
ret
fisttpll
loope
jo
cmp
jne
pusha
mov
cltd
pop
cmpsl
sub
fcmovnbe
dec
or
mov
sbb
jns
daa
sbb
adc
fcomps
ljmp
jle
pop
and
and
aaa
sahf
scas
pop
cs
xchg
push
lcall
jbe
int
shlb
iret
cmpsb
or
pop
jecxz
in
pop
push
fnstsw
or
xchg
rorb
push
pop
lock
xchg
pop
mov
ret
adc
sub
add
dec
jb
sbb
hlt
js
jl
jnp
add
dec
pop
lock
xchg
adc
pop
xlat
cmp
popf
jns
repz
insl
fbstp
mov
pushf
cmpsb
pop
in
ficompl
jmp
mov
or
xchg
or
ror
push
pop
sub
das
scas
imul
hlt
push
test
pop
push
pop
ss
adc
addb
int
and
push
pop
push
xchg
pop
push
adc
mov
mov
sub
jo
ficomps
xchg
push
stos
fwait
in
xchg
addr16
sti
inc
push
mov
fistpl
pop
aad
push
pop
je
pop
xchg
mov
sbb
lret
in
dec
insl
mov
iret
adc
or
int
add
fsubl
mov
push
std
xchg
push
out
cmp
xchg
dec
scas
cmpl
cmp
out
mov
xchg
fcomi
xchg
movsb
or
adc
mov
ljmp
push
inc
fistps
std
cmp
nop
adc
cmc
mov
lahf
mov
imul
mov
pop
pop
aam
mov
pop
sarl
adc
lods
pop
out
aad
data16
sub
fs
scas
cmp
pop
push
pop
push
pushl
aad
fimull
repz
or
popl
les
out
pushf
test
push
mov
xchg
push
mov
xorl
stc
shlb
cmpsb
jp
fbld
addr16
outsl
pop
add
lret
pop
inc
in
popa
in
fcomps
inc
out
fimuls
stos
pop
sub
int
cmp
xchg
xchg
cltd
xor
idivb
ds
mov
or
jo
mov
lret
hlt
stc
bound
mov
rcrb
mov
sbb
pop
cmpsb
vcvtsd2si
mov
xor
std
pop
mov
mov
js,pn
fwait
jo
jl
fcmove
sub
pop
mov
sub
test
pop
insb
push
std
xchg
push
xchg
iret
xor
repz
sbb
pop
popf
cli
cmp
ljmp
push
sbb
pop
adc
cltd
lcall
test
and
loop
lods
leave
fstps
pop
pop
loope
sub
or
cld
jbe
shl
pusha
push
and
mov
outsb
insb
pop
ret
or
jle
pop
mov
xchg
pop
jl
inc
dec
or
or
lods
ss
out
bound
lahf
xchg
adc
fs
mov
lret
adc
push
pop
pop
jp
test
cmp
pop
sahf
les
ljmp
popf
not
int
out
sbb
loope
and
inc
xchg
push
adc
sbb
imul
mov
cltd
mov
pop
push
inc
int
rcrl
stc
fisubl
dec
fbstp
rcrb
cmp
repz
push
push
inc
test
jns
popf
pop
sbb
dec
js
pop
in
loope
aad
sti
pop
push
mov
fsubl
sbb
bound
scas
push
or
pop
dec
lcall
mov
outsl
dec
cmc
pop
aaa
das
sbb
lods
test
mov
add
xchg
xchg
sbb
je
pop
ljmp
popa
lods
pop
cmc
shrl
call
pop
lahf
mov
xchg
pop
add
outsb
push
pop
int
in
and
pop
mov
or
mov
adc
fnsave
movl
pop
cwtl
push
out
push
push
sub
mov
dec
std
and
gs
sub
jg
pop
xlat
popa
jnp
inc
out
mov
and
xchg
cmpsl
cmp
jno
sahf
add
sbb
or
cli
out
sbbb
xor
pop
xorl
pop
xchg
les
pop
arpl
pop
std
js
xor
inc
jne
scas
loope
repz
je
iret
sbb
push
movl
pop
es
pop
leave
push
ret
sub
sbb
stos
dec
les
mov
in
adc
scas
std
add
mov
sbb
ret
and
mov
rcrb
jecxz
cltd
lods
xchg
mov
add
rcrl
inc
out
add
pop
loope
sbb
je
mov
pop
leave
sub
cmc
fcmovb
xor
mov
inc
cmp
mov
push
mov
and
mov
out
pop
sbb
in
std
mov
pop
jmp
and
mov
pop
add
scas
inc
and
xor
into
dec
outsl
pop
sbb
adc
iret
cwtl
mov
pop
pop
ret
dec
mov
mov
sbb
repz
mov
pop
mov
inc
bound
ljmp
call
sbb
cs
or
mov
mov
cltd
xchg
mov
test
push
mov
pop
sub
mov
inc
sbb
add
cmc
inc
pop
iret
jb
testb
jne
daa
jo
ljmp
adc
sbb
sbbb
pop
inc
mov
push
lods
or
pop
push
push
pop
outsb
dec
inc
add
int
xor
lods
pop
xchg
mov
idiv
mov
scas
cmp
shll
mov
pop
or
pop
xlat
stos
mov
pop
mov
les
pop
push
dec
adc
test
inc
rcr
push
inc
xor
stos
pop
loopne
popa
pop
ret
inc
pushf
out
or
pop
mov
sbb
xchg
pop
movsb
sbb
insb
out
cmpsb
rolb
jb
loope
add
jecxz
inc
imul
out
pop
push
push
int3
pop
popa
test
in
cli
lahf
xorl
dec
dec
movsl
push
xchg
pushf
pop
push
in
push
daa
subb
push
xor
pop
add
or
int
aaa
in
lcall
jbe
add
mov
in
pop
mulb
int
inc
push
jecxz,pt
cmp
cld
cmp
jp
and
fldenv
scas
das
push
cmp
aad
mov
gs
xchg
dec
pop
test
sub
in
jbe
jle
scas
inc
gs
jge
movsl
add
pop
mov
and
addb
int
dec
add
mov
inc
jb
pop
push
rcll
mov
aam
jecxz
in
jbe
inc
jmp
mov
cmpsb
test
jge
pop
pop
aas
and
dec
pop
addr16
out
mov
test
or
cmp
sbb
fadds
popf
jl
or
pop
dec
fwait
aad
bound
in
imul
shlb
dec
push
test
pop
pop
adc
lods
int
mov
xchg
hlt
jns
sub
jbe
mov
lret
inc
pop
fwait
loopne
push
leave
sub
pop
adc
mov
pop
and
ss
jle
cmp
mov
roll
sbb
mov
pop
hlt
stos
sbb
inc
dec
pop
push
pop
and
or
xlat
jne
sub
sbbb
push
adc
sbb
out
ret
leave
jecxz
gs
stos
dec
jne
pop
cmp
push
xchg
loopne
in
pop
and
pop
inc
sbb
jge
pop
pop
jbe
jecxz
mov
mov
mov
add
sarl
pop
fcompl
xchg
rep
pop
mov
movsl
mov
xor
inc
adc
or
loopne
add
in
das
daa
jbe
cmpsl
iret
fisubs
push
mov
pop
add
rorl
ja
inc
outsb
ss
ret
dec
pop
js
int3
adc
pop
jns
int
add
fs
or
push
push
sbb
icebp
ss
xchg
mov
out
or
cmp
in
xchg
push
add
xlat
jb
pop
inc
pop
jle
aas
inc
jne
pop
test
jge
pop
outsl
int
pop
iret
dec
mov
inc
scas
jno
mov
cmpsl
jl
lret
sub
outsl
dec
test
aaa
jns
and
stos
test
pop
fsubrs
cli
pop
sahf
xlat
sbb
jmp
lcall
int
pusha
pop
fisubrs
imul
pop
insl
or
sahf
sbb
xor
xlat
mov
and
adc
dec
mov
jo
mov
das
and
jnp
jecxz
fiaddl
pop
loopne
dec
push
pop
sbb
fwait
jmp
adc
std
cld
mov
pop
stos
push
bnd
inc
jge
cli
dec
call
int
xor
dec
mov
pop
dec
push
enter
dec
sbb
das
stc
cld
adc
rcrl
jae
insl
out
and
rcrb
enter
pop
jmp
sbb
out
adc
pop
int3
in
adc
jo
mov
add
mov
mov
pop
aam
and
adc
cmp
sbb
jle
push
divl
push
pop
xchg
lahf
fcmovnb
jecxz
or
pop
xchg
ficoms
and
lds
jne
arpl
mov
add
push
hlt
addr16
in
add
lds
mov
adc
aad
jg
std
int
ret
fdivrs
out
nop
dec
fstps
out
or
add
pop
cmp
pop
xchg
stos
out
subb
ds
or
cld
insb
pop
out
pop
ja
push
jmp
push
call
gs
or
lahf
cmp
fnstcw
das
imulb
jle
pop
xchg
inc
xchg
arpl
or
data16
das
push
push
shrl
xchg
scas
in
ds
mov
cmpsl
mov
jge
xchg
inc
pushf
shl
js
scas
cmp
sbb
sbb
je
add
cmp
vphsubwd
jbe
mov
aas
sbb
and
nop
pop
xlat
add
sub
and
adc
pop
orl
xor
insl
pop
mov
iret
in
inc
mov
dec
out
popl
ret
xor
pop
or
sahf
stos
sbb
mov
pop
scas
mov
jecxz
scas
out
iret
mov
aad
sbb
push
sti
bound
movsb
xchg
lods
jle
test
fisttps
clc
pop
push
push
pop
and
push
push
xor
lret
pop
lods
pop
mov
sbb
std
mov
pop
insb
jnp
mov
or
cwtl
pop
pop
aam
and
sar
inc
mov
in
push
test
inc
test
inc
and
adc
jp
jg
push
imul
pop
cmc
sub
icebp
jo
push
das
pop
pop
lcall
pop
std
and
add
mov
fcoms
pop
pop
jl
in
and
out
add
pop
inc
fidivs
jno
or
mov
sahf
addr16
pop
int
rcr
jmp
lret
scas
and
push
dec
mov
arpl
nop
dec
shr
sti
mov
and
cmpsb
pop
mov
fcoml
enter
movsl
cmp
scas
mov
sbb
cmpsb
aad
jl
dec
popa
andb
sbb
in
scas
in
mov
lea
mov
or
bound
iret
std
out
mov
jl
inc
rcll
xor
sbb
imul
mov
push
cwtl
filds
pop
repnz
adc
cli
sbbb
inc
sbb
mov
lahf
jb
mov
dec
xlat
js
pop
outsb
loop
xchg
jnp
push
lret
pop
in
int3
test
rcrb
or
pop
pop
dec
pop
or
in
lods
pop
scas
int
repz
lcall
fistpl
jne
push
adc
dec
ljmp
orl
popa
stos
fisttpll
jmp
jne
jmp
jo
mov
sbb
pop
jbe
mov
shrl
into
pop
int
addr16
xor
test
pop
push
jo
loop
pushf
fcmovnbe
mov
jl
int
cwtl
aaa
mov
mov
scas
scas
add
xchg
clc
jb
jae
imul
ds
out
out
mov
fldcw
pop
fmull
int
xchg
adc
inc
mov
idivl
mov
std
test
and
pop
xor
fistl
inc
loope
jbe
test
push
dec
sarl
hlt
popa
jno
pop
divb
sbb
dec
pop
jp
pop
mov
cmp
fidivs
ret
jge
sub
mov
xchg
push
out
out
pop
stos
pop
mov
repnz
das
cli
mov
test
or
or
mov
mov
mov
inc
ja
pop
pop
popl
mov
dec
mov
jnp
cwtl
push
dec
pop
pushf
imul
aaa
push
adc
inc
mov
stc
adc
push
icebp
cmp
pop
popa
imul
addl
lock
jle
in
movsl
int3
in
incb
mov
sub
push
inc
inc
popf
rolb
pop
xor
cmpb
gs
aaa
int3
pop
dec
cmpsl
out
sub
aam
sbb
les
add
stos
mov
mov
or
cli
add
loop
xchg
dec
pop
ror
adc
test
inc
pop
dec
movsb
faddl
pop
int3
aas
ljmp
push
fstl
enter
jo
shrb
popf
lods
xchg
cmc
out
pop
push
mov
push
imul
xchg
dec
js
mov
sbb
int3
pop
cmpsb
xchg
negl
pusha
mov
data16
mov
imul
jle
pop
lods
and
xchg
addr16
jp
pop
nop
or
sbb
xchg
mov
mov
mov
and
mov
lret
pop
jo
lds
xchg
pop
fidivrl
pop
mov
and
jb
loope
mov
aas
jnp
pop
std
mov
mov
mov
xchg
mov
pop
movsl
ja
add
divl
pop
push
pop
cmc
inc
lahf
popf
aad
inc
int
sub
fs
insb
jns
jo
pop
inc
stos
scas
jo
jmp
mov
pop
imul
lret
inc
jmp
fs
mov
pusha
bswap
pop
jmp
and
jae
fstpt
loope
push
daa
push
das
pop
or
stos
dec
jmp
enter
cltd
mov
test
add
fcmove
out
int
lods
call
das
or
stc
inc
pop
fildl
gs
add
ds
pop
jo
in
and
sub
pop
or
movsb
pop
mov
xchg
arpl
xor
add
pop
aas
sbb
insl
pushf
push
push
lods
mov
fsubrl
ljmp
mov
xor
cld
std
jns
iret
notb
or
mov
popa
fbld
cmc
sahf
mov
pop
jno
sbbl
popa
lahf
inc
jg
and
inc
nop
addr16
psubd
mov
fiaddl
add
inc
js
push
jl
int3
inc
mov
dec
ljmp
xchg
data16
dec
pop
daa
adc
dec
shr
pop
pop
adc
or
ss
xchg
es
cltd
xchg
cwtl
movsl
into
ret
adc
dec
adc
lret
push
fists
pop
ja
xlat
popa
mov
sbb
jg
arpl
or
out
movsb
pop
add
mov
loopne
xchg
and
insb
imulb
sbb
push
mov
push
and
rcrl
cmpsb
mov
fstps
int3
inc
sarb
push
cmpsl
pop
int
clc
repnz
cmp
or
jae
je
inc
add
arpl
cmpsb
rorb
ret
stc
cmpsb
cmpsl
jg
cs
dec
dec
cmp
add
imul
and
inc
ret
cmp
xchg
jo
mov
sbb
dec
adc
pop
jmp
pushf
jns
leave
jb
pop
lret
idiv
movsl
sub
ja
mov
dec
lcall
lcall
pop
cmp
mov
sbb
clc
cmpsl
adc
xchg
adc
sti
pop
jno
rorb
loop
pop
push
add
push
fisttpll
push
pop
pop
cld
xor
ss
inc
xor
stos
pushf
pop
sub
xchg
iret
pop
addr16
dec
pop
jb
std
sub
mov
popa
or
rcrl
andb
xchg
out
in
mov
aad
fbstp
movsl
test
shrl
addr16
int
add
mov
cmp
pusha
dec
scas
pusha
mov
and
repnz
ds
lods
fistl
sbb
pop
bound
or
pop
aam
add
push
fnstcw
adc
pop
cld
dec
pop
or
jo
sbb
xchg
popa
mov
lcall
mov
and
push
or
adc
dec
in
push
outsl
ss
outsb
jecxz
enter
pop
jo
sbb
mov
lods
xor
cmp
into
stc
lret
pop
mov
out
add
pushf
in
inc
rcrb
push
bound
cltd
out
scas
and
dec
aas
mov
or
stos
imul
stc
xchg
pushf
sub
sub
in
repnz
sub
pop
jge
mov
jg
test
sbb
inc
fwait
in
xor
mov
int
jo
dec
sti
mov
push
dec
mov
int3
scas
pop
pop
mov
dec
cltd
mov
imul
lret
arpl
nop
dec
jp
roll
mov
pop
push
or
pop
test
fnstcw
or
dec
jp
int3
rcrl
xor
lret
negb
dec
rolb
cmp
inc
jbe
out
mov
cmp
dec
push
or
lahf
nop
int3
lahf
inc
mov
repnz
hlt
pop
mov
inc
jge
push
sti
lret
mov
sbb
call
dec
leave
dec
in
iret
inc
xchg
stc
ficompl
fdivrs
enter
pop
mov
mov
push
pop
clc
dec
int
mov
push
pop
scas
dec
inc
imull
xor
pop
xchg
push
xor
jno
mov
sbb
sub
sub
lret
sub
sub
int
stos
pop
mov
xor
pop
mov
or
sub
pop
daa
xchg
xchg
lcall
ds
shll
pop
dec
pop
in
scas
add
insl
sub
mov
or
cltd
jp
iret
add
fsubs
pop
jbe
push
xchg
pop
mov
or
mov
mov
sbb
mov
add
pop
xchg
jnp
or
dec
jo
push
clc
mov
leave
nop
mov
dec
mov
test
sbb
scas
mov
arpl
xchg
cmpsb
or
icebp
sub
xor
insb
pop
dec
into
pop
add
jb
popa
lahf
mov
mov
loop
int
js
or
inc
fmuls
pop
pop
outsb
insb
bound
test
dec
scas
pop
mov
push
mov
sbb
pop
jbe
pop
mov
inc
movsl
lret
pop
jmp
mov
pop
mov
addb
jb
loop
xchg
mov
pop
mov
int
ss
sub
dec
and
fst
std
mov
cmp
repz
shl
dec
mov
sub
pop
std
jo
out
and
sbb
pop
aaa
cwtl
int3
xchg
sti
mov
mov
push
mov
inc
fisubrl
out
or
pop
scas
xchg
adc
shlb
pop
mov
push
sbb
mov
lds
fucomp
sbb
lret
mov
mov
jb
hlt
das
je
pop
jecxz
mov
fldt
pop
and
ss
sub
cmp
sub
movsb
mov
push
out
fdivs
mov
dec
into
jg
lcall
cmp
mov
push
mov
and
out
pop
cltd
fldl
push
adc
sub
int
mov
insl
and
test
mov
pushf
data16
push
sub
sub
test
sbb
or
mov
cmp
cmp
in
pop
ljmp
je
sub
loop
daa
arpl
and
sahf
and
add
mov
enter
sub
pop
bound
cmp
mov
xor
fs
sbb
scas
repz
mov
out
jecxz
loopne
mov
jbe
dec
pop
jmp
gs
imul
add
or
pop
jne
es
sub
sbb
add
jle
test
push
xlat
out
mov
inc
fxtract
xchg
jecxz
pushl
mov
pop
arpl
pop
outsl
xchg
insb
jg
or
mov
xchg
fcom
test
cmpsl
fstpl
lds
rcrl
pop
dec
ds
mov
mov
or
cli
inc
xor
mov
mov
push
fadds
int
push
or
fistps
jl
adc
xor
jge
enter
mov
xchg
in
popf
cltd
or
inc
mov
sub
fsts
stos
pop
sbb
pop
mov
mov
pop
and
xor
jmp
xchg
leave
and
fstps
and
ja
int3
sbb
mov
cmpsl
sbb
jle
mov
lcall
mov
jmp
inc
jp
pop
iret
mov
test
cmc
jge
inc
dec
lahf
jo
mov
movsl
incb
icebp
push
pop
loopne
rcr
pop
call
xchg
aas
jb
lret
fimull
or
jg
decl
in
lcall
mov
insl
or
pop
rclb
dec
gs
and
push
xchg
out
sub
jbe
jg
movsl
pop
adc
push
std
test
mov
pop
lods
jnp
push
jae
stos
pop
dec
sahf
sbb
mov
fs
lcall
mov
aad
push
pop
ja
dec
lcall
aaa
in
add
dec
cs
mov
sub
out
and
cli
addr16
pop
and
les
jg
stc
repz
fwait
lods
add
idivl
or
xchg
or
lcall
pop
cmp
rorl
fidivrl
xor
sub
push
xor
add
pop
push
int
fstp
test
dec
lret
pop
adc
jae
lea
xchg
ret
jb
adc
int3
pop
xor
push
fstps
mov
fbstp
int
pop
gs
sbb
scas
mov
mov
pop
dec
pop
xchg
mov
pop
add
cmp
popa
aaa
dec
fimuls
jecxz
fs
idivb
mov
xchg
cmp
cmp
sbb
imul
sub
mov
jecxz
jns
in
push
inc
jne
test
push
cs
cmp
sbb
aas
xchg
mov
mov
idivl
lret
inc
leave
add
sbb
sti
mov
or
mov
sbb
mov
pop
repnz
iret
cli
mov
mov
cmp
push
mov
or
pop
jmp
icebp
pushf
jbe
cmpsl
imul
mov
sbb
mov
outsb
fcoml
stc
jo
mov
sbb
stc
inc
mov
push
push
xchg
pop
into
xor
das
lods
cli
jne
pop
add
push
jg
adc
mov
sub
xor
add
aad
inc
pop
cwtl
lods
pop
xor
lea
fs
add
pop
je
cmp
xchg
and
aaa
daa
push
lea
lods
sarl
mov
jae
xchg
dec
loopne
mov
pop
jb
ljmp
je
pop
mov
dec
mov
stc
add
jne
js
pop
popf
inc
in
cmp
mov
sbb
push
mov
mov
or
inc
in
fmuls
mov
clc
mov
push
mov
test
jnp
scas
dec
pop
lret
lods
fwait
ja
push
popf
push
push
lock
or
scas
cmp
and
or
mov
add
jns
mov
lret
arpl
jb
mov
cmpb
mov
pop
pop
add
stos
jo
es
pop
dec
xchg
push
push
ss
lods
or
push
out
sahf
clc
addr16
ret
or
insb
nop
pop
sbb
mov
test
addr16
pop
push
dec
mov
mov
lods
jae
clc
clc
inc
mov
lahf
mov
sbb
pop
mov
lahf
xchg
mov
push
or
dec
aad
clc
pop
sub
sub
push
pop
shlw
repnz
pop
mull
ss
das
push
mov
jbe
mov
lahf
jmp
es
movb
mov
cmp
cmpsl
cmpsb
data16
pop
pop
cs
dec
rcrl
shrb
dec
and
push
cli
mov
mov
jno
cmp
add
dec
imul
mov
fbld
pop
clc
test
xor
xor
xchg
dec
sbb
pop
daa
xchg
test
lret
xchg
dec
or
push
push
into
enter
test
mov
push
daa
out
adc
pop
pop
cwtl
mov
arpl
lods
js
icebp
pop
xor
nop
sub
test
xchg
mov
bound
push
mov
outsl
gs
movsb
lahf
pop
leave
mov
jbe,pt
out
es
ljmp
xchg
gs
pop
push
lock
fcmovbe
dec
cmp
bound
mov
pop
out
sbb
out
pop
pop
loope
pop
repz
loop
and
and
shrl
cmp
out
xchg
pextrw
push
jl
lea
mov
sbb
sub
pop
sub
int
lahf
scas
in
negb
das
mov
popa
pusha
dec
pop
in
pop
int3
xchg
neg
js
mov
xor
jp
lds
xchg
push
aas
mov
pop
int
test
addl
xor
lcall
mov
push
mov
arpl
test
ret
ficomps
lods
jno
jmp
loope
fiadds
out
and
xor
movsb
add
inc
scas
dec
cmc
cmp
mov
ret
dec
or
aad
cld
int3
xorb
pop
int
lret
push
cmpsb
in
sub
sub
shrb
or
mov
leave
icebp
mov
mov
ljmp
cmp
mov
pop
cli
scas
ficoms
pop
fisttpll
dec
stc
or
arpl
sub
cmp
pop
pushf
pop
int
xor
adc
fldt
loope
enter
hlt
fistpl
ja
dec
or
cmp
xor
and
lcall
rcrb
and
jne
clc
mov
icebp
push
int3
movsb
lds
pop
sahf
xchg
jg
xor
mov
call
pop
cwtl
mov
pop
adc
adc
ljmp
fisttpl
pop
pop
movsbl
outsb
cmp
pop
push
sbb
jbe
inc
decb
je
push
xchg
test
dec
xor
and
addb
pop
xchg
push
and
pop
pop
mov
sub
in
adc
lret
fistpl
sbb
lds
jne
xchg
dec
pop
mov
sbb
inc
sbb
adc
sbbb
insl
fmulp
cmc
push
or
or
inc
sbb
out
inc
test
pop
paddb
jb
popf
dec
mov
and
add
pop
pop
jl
sbb
dec
dec
stc
mov
jb
mov
sarl
pop
out
repnz
pop
lret
sti
pop
cmp
shlb
outsl
in
jbe
les
rcrb
aaa
cwtl
leave
jbe
pop
adc
sub
xchg
mov
pop
test
jmp
push
pop
in
orl
frstor
fsubl
cmpsb
xchg
cmp
call
dec
inc
and
int3
shll
loop
xchg
popf
fldcw
ret
pop
cwtl
pop
lds
ljmp
push
pushf
roll
into
std
mov
in
repnz
pop
iret
stos
mov
sarl
cltd
sbb
dec
aas
pop
cmp
mov
xlat
pop
in
sti
mov
call
pop
xchg
push
aam
rolb
xchg
pop
mov
jb
mov
pop
fldenv
jl
pusha
add
in
arpl
hlt
stos
pop
enter
sub
pop
pop
add
or
pop
pop
repnz
and
xchg
pop
test
inc
and
insl
faddl
pop
sbb
arpl
xchg
pop
adc
dec
xor
in
sub
push
fildll
rcrl
mov
pop
xchg
stos
hlt
push
add
mov
pop
pop
sub
pop
loop
mov
sbb
and
push
or
sub
clc
mov
fstpl
and
inc
pop
adc
ja
in
pop
and
sbb
sahf
inc
sub
in
pop
shlb
jbe
int3
lret
ret
fsubr
jecxz
icebp
je
sub
jl
sbb
push
dec
out
lea
into
jne
add
dec
fistps
dec
pushl
xchg
push
insl
push
mov
and
inc
dec
lea
pop
int3
jne
mov
xchg
lock
cmpsb
std
lret
dec
les
sub
rcr
dec
push
mov
add
cmp
std
mov
mov
mov
mov
cmp
adcb
negl
and
adc
insb
pop
imul
subl
mov
lahf
outsb
xchg
pop
pusha
mov
pop
xchg
pop
dec
adc
push
push
mov
xchg
or
pop
inc
insl
out
orl
sub
push
pop
je
insl
popf
pop
cmp
lock
xchg
das
sbb
pushf
movb
mov
and
cs
out
fdivrs
pop
pop
pop
pop
mov
mov
stos
shl
lods
std
fdivrs
loopne
xor
out
outsl
push
xchg
loope
sbb
cli
jne
pop
mov
pusha
lret
pop
fcoml
inc
cwtl
loopne
pop
jecxz
repz
comiss
shlb
add
dec
icebp
arpl
adc
mov
sub
cmp
jecxz
inc
pop
pop
cmp
mov
jns
push
xor
cmp
iret
sti
mov
cwtl
test
mov
add
fwait
idiv
mov
pop
arpl
jae
fsubs
pop
fstl
iret
icebp
lret
pop
cld
sbb
cli
dec
mov
mov
sub
lahf
xor
fmull
adc
fcmovne
mov
sbbb
mov
xchg
mov
mov
mov
push
inc
adc
pop
push
nop
std
insb
cmp
sub
pop
dec
xchg
mov
lods
pop
inc
fcoml
in
cmp
fnstsw
mov
sub
aas
sub
lret
cmpsb
jo
mov
pop
mov
std
popa
fwait
sub
dec
cli
dec
jnp
scas
jecxz
dec
into
sub
mov
pop
push
loope
pop
fsubs
xadd
mov
outsl
loop
aaa
cmc
jl
sbb
jg
jae
pop
jnp
add
lahf
nop
adc
rolb
jecxz
and
jae
push
insb
dec
sbb
inc
adc
aaa
pop
push
ljmp
negl
jo
lret
mov
cltd
pop
les
pop
test
rcr
mov
jp
push
sti
je
add
or
pop
mov
xlat
gs
stos
int3
pop
divb
mov
int
adc
cmp
pop
jb
aad
xor
mov
mov
pop
xchg
cli
add
int3
data16
sub
fwait
outsb
pop
mov
iret
sarb
mov
jmp
or
cwtl
pop
sbbb
in
mov
mov
dec
mov
push
push
pop
in
and
xchg
mov
mov
jns
pop
bound
jmp
pop
pusha
arpl
pop
push
jp
test
mov
pop
pop
mov
pop
je
mov
xor
pop
decb
hlt
ds
xchg
lds
rcr
dec
in
inc
pop
insl
xchg
dec
call
mov
inc
mov
dec
add
pop
mov
shlb
lea
nop
cld
or
into
xor
push
add
inc
ret
xlat
pop
sub
inc
nop
pop
mov
cmp
adc
lock
push
pop
mov
mov
pop
aas
pop
or
gs
push
and
dec
sbbl
call
sbb
in
xchg
gs
cld
jbe
rcrl
adc
sar
fnstsw
jnp
mov
fs
sbb
pop
stc
xor
subl
sahf
jo
pop
lods
or
pushf
push
push
shlb
hlt
clc
dec
daa
sbb
inc
pop
test
das
xchg
xor
xor
push
es
fstps
aad
cmp
pop
daa
sbb
push
sub
or
push
adc
pop
mov
mov
repz
pop
pop
je
stc
pop
dec
mov
add
jb
rorb
pop
ret
mov
hlt
lods
mov
add
jge
icebp
test
and
jg
int
je
pop
cld
inc
mov
sub
jb
dec
xlat
push
rcrl
je
int
mov
dec
lcall
cli
repz
loope
outsl
mov
dec
repnz
pop
jae
pop
xchg
ja
repz
xor
sub
sbb
inc
mov
mov
inc
stc
xchg
scas
xchg
fs
pop
clc
mov
jecxz
fisubrl
push
stos
inc
mov
je
and
sti
cmpsb
push
bound
fs
stos
push
call
cmp
stos
lret
pop
lret
push
pop
jo
fistps
nop
mov
ss
lret
cmpsb
jb
movsb
fstpl
ja
mov
xchg
dec
jns
mov
lret
lea
and
jns
add
pop
enter
inc
sbb
mov
int3
push
inc
pop
jo,pn
je
xor
les
pushf
jecxz
imul
pop
and
scas
dec
mov
pop
movsl
cli
in
xlat
fildll
cmp
lock
mov
fpatan
mov
inc
sahf
mov
and
pop
xchg
sbbl
xacquire
cltd
scas
push
shll
pop
or
pop
stc
xor
push
jmp
mov
mov
lea
pop
dec
daa
push
iret
decl
push
out
pop
in
movsl
lret
stc
mov
jl,pt
inc
push
iret
and
fnstcw
xchg
sbb
add
and
pop
xchg
aad
xchg
jecxz
loope
pop
mov
xchg
mov
nop
sbb
cmp
pushf
pop
popa
mov
xchg
sub
dec
stos
dec
mov
into
imul
pop
mov
testb
and
pop
insb
sti
aad
fucompp
sbb
pop
xorb
scas
jo
shlb
test
pop
jb
jecxz
jbe
adc
cmp
fiadds
clc
stc
rcrl
or
fldenv
test
aam
pop
ljmp
or
mov
adc
je
scas
mov
sub
insl
int
mov
mov
dec
jle
fcos
fcoms
add
outsl
scas
rcl
divb
pop
lea
push
lret
pop
pushf
xor
into
dec
push
je
jb
or
mov
push
pop
mov
icebp
fsubs
mov
pop
and
jb
sbb
or
mov
sbb
jno
insb
cmp
mov
insl
dec
js
push
daa
pop
mov
fisubs
mov
sbb
scas
test
mov
scas
xchg
je
arpl
pop
inc
scas
int
xchg
stos
and
pop
and
push
sarl
push
cltd
cmp
divb
lods
in
bound
aad
fnstenv
pop
out
icebp
and
add
int
movsb
mov
scas
fbstp
add
jbe
jecxz
pop
clc
pop
mov
arpl
dec
inc
insl
jbe
pop
lds
insb
sub
je
adc
jmp
dec
pop
pop
mov
mov
int
push
push
fnsave
jl
jmp
aam
lahf
arpl
enter
mov
push
jnp
adc
loop
pop
loopne
dec
roll
or
imul
sbb
jns
sub
add
mov
pop
sbb
out
mov
mov
jae
inc
sbb
movsb
xchg
push
push
xor
mov
cs
cmp
out
sbb
inc
mov
and
mov
pop
add
push
fisubrl
xchg
jb
dec
pop
and
out
mov
int
xchg
shlb
lcall
push
out
or
mov
lahf
outsb
aad
or
imul
pop
push
or
push
out
adc
mov
inc
filds
cmc
int
fs
pop
scas
and
cli
xor
leave
sbb
cltd
vrcpss
mov
push
xchg
fdivl
scas
jae
jmp
push
push
add
fistps
xchg
xor
xor
pushf
adc
mov
adc
lods
xor
pusha
and
dec
dec
adc
stos
dec
std
lds
mov
mov
in
mov
cs
test
cmpb
sbb
rcrb
dec
cmp
pop
std
out
fcomi
mov
es
push
push
pop
cmpsb
sahf
mov
push
mov
sub
pop
inc
fsubs
jp
pop
mov
out
cli
lods
pop
fs
xor
pop
gs
pop
jb
ja
sub
loope
pop
and
inc
add
loop
jo
sbb
mov
dec
fwait
daa
popa
pop
sub
mov
xorb
cmpsl
rcr
cmp
pop
jl
loope
ss
xchg
repz
in
aaa
and
jae
pop
fdivrs
or
enter
mov
syscall
imul
adc
aad
ss
cwtl
xchg
pop
or
jp
ds
mov
pop
jle
and
dec
cmp
push
cs
sub
jle
ret
jo
jae
ficomps
pop
pop
enter
jb
out
mov
cli
adc
lods
pop
push
int3
push
clc
sbb
insl
jae
add
adc
mov
mov
test
lea
push
and
out
pop
dec
call
or
pop
adc
pop
cld
and
push
inc
jecxz
cwtl
insl
pop
sbb
pop
imulb
fisttpll
cmc
cli
mov
pop
jecxz
jp
fnstsw
ret
sub
or
enter
outsl
pop
or
pushf
in
mov
pop
lea
test
pop
sbb
dec
adc
pusha
lahf
int3
mov
fstpt
lret
mov
cmp
sub
dec
addps
inc
mov
scas
pop
jl
out
push
pop
sub
into
sbb
inc
leave
cmpb
aaa
pop
adc
push
sbb
mov
stc
cmpsb
jne
test
imul
mov
clc
sub
pop
sbb
pop
jb
pop
xchg
pop
scas
mov
or
sbb
cld
adc
jp
cmp
stc
aam
jns
aam
mov
dec
pop
or
sbb
mov
cmp
mov
fcmove
sbb
add
daa
ret
cmp
pop
push
mov
aam
or
add
ret
cmpsb
sbb
and
sub
dec
in
fucomip
mov
loopne
roll
sar
mov
pop
rclb
pop
das
adc
xor
cmc
xchg
and
sbb
lcall
sbbb
rclb
xchg
loope
ds
iret
loopne
int
js
xor
sarb
enter
adcb
fisubrl
fdivrs
aam
push
cmpsl
rcrb
and
nop
pop
gs
pop
xor
sub
fisubs
push
out
mov
je
aad
lods
pop
and
out
jb
mov
xchg
idivl
pop
call
lahf
movsl
push
sbb
loopne
jo
out
pop
sub
inc
pop
xorb
lret
and
pop
sub
adc
pop
dec
xor
or
ljmp
test
push
fstl
pop
xchg
dec
gs
inc
dec
pop
lods
filds
mov
jae
imul
int3
pop
jbe
mov
mov
mov
xchg
or
ja
lock
mov
push
or
or
aad
pop
jge
and
sti
scas
mov
mov
cmc
add
adc
mov
pusha
in
fwait
wbinvd
pop
sarl
pop
jno
lcall
pusha
imul
pop
mov
dec
leave
push
mov
push
mov
push
lea
mov
pop
mov
dec
jns
aas
xchg
pop
lret
jo
arpl
sbb
repz
outsl
popf
aaa
mov
and
je
push
or
mov
fnstenv
mov
sbb
xor
mov
jo
pop
mov
mov
pop
scas
push
imul
pop
call
inc
mov
sti
test
xchg
pop
sbb
and
mov
mov
add
int3
aas
adc
rorb
mov
outsl
sub
sbb
popa
movsb
in
mov
inc
pop
out
jo
fcmovb
mov
mov
pop
xchg
jbe
mov
dec
sub
mov
js
mov
pop
inc
scas
and
insl
inc
lock
ficoml
in
stc
divl
sub
cmp
stos
pop
int
pusha
iret
add
cmp
push
mov
jle
fadd
sbb
mov
xlat
or
mov
cmp
mov
cmpsl
mov
jnp
lods
cmpsb
sub
pop
imul
pop
ds
int3
fwait
pusha
adc
into
pop
sbb
sti
xlat
add
sbb
pop
sbb
xor
jne
addps
movsl
pop
aad
sub
pop
sub
cwtl
cli
bound
imul
stos
pop
pop
inc
push
insb
std
inc
bound
jbe
mov
scas
ss
pop
and
sbb
int3
out
movl
loop
andl
mov
pop
cmpsl
dec
test
or
aad
fisubs
dec
fistps
out
add
in
xor
cmc
jo
dec
mov
mov
test
cmp
jmp
pop
sbb
pop
or
or
sbb
scas
and
mov
cmp
sub
xchg
mov
jo
cmc
sar
int3
into
xor
pop
mov
test
mov
adc
pop
xor
dec
push
cmp
mov
xor
sub
popf
pop
or
cmp
stos
repz
sbb
divl
fisubrl
sbb
add
test
push
mov
jb
adc
push
stos
loope
pusha
adc
dec
pop
mov
clc
shll
jo
imul
push
push
pop
imul
cmp
xchg
fildl
call
leave
add
pusha
cmp
xorb
lds
inc
pop
pop
shll
scas
mov
and
popf
dec
pop
insl
sub
push
gs
add
pop
lret
outsl
adc
sbb
stos
test
xorl
jb
dec
xchg
or
mov
sti
mov
out
pop
clc
aas
dec
pop
insb
in
outsl
int
jecxz
scas
movsb
dec
pop
shrl
push
cltd
pop
cwtl
pop
jae
leave
imul
push
add
dec
sub
mov
popf
and
loop
leave
int
inc
xchg
pop
and
jle
pop
mov
or
daa
lods
sbbl
call
mov
pop
pop
cs
lcall
aaa
lods
fsubs
fcoms
out
mov
cmc
xchg
mov
ljmp
sarb
movsb
xor
les
outsb
pop
movsl
lahf
ret
pop
loope
mov
sub
fnstsw
cmp
xchg
das
dec
int
mov
cld
mov
jp
aad
jo
lea
pushf
push
and
je
pop
sub
in
lcall
ljmp
pop
jmp
sub
int
cmpsb
data16
mov
jge
into
pop
movsb
lret
scas
inc
dec
or
mov
sbb
pusha
cltd
jns
pop
stos
out
fwait
das
int
xchg
nop
pop
lods
loopne
inc
les
jne
inc
mov
inc
and
jecxz
dec
fstpl
jae
mov
pop
and
fisttps
mov
xchg
fucomp
pop
subb
movsb
int3
or
pop
ljmp
dec
cld
addr16
out
lods
push
loope
xor
push
pop
fcomp
inc
stos
lahf
or
jmp
push
cmpsb
cmp
jbe
aad
push
enter
jg
inc
jo
ficompl
cld
insb
xor
bound
cmp
lcall
mov
imul
lahf
adc
xchg
xor
rorb
xchg
pop
adc
mov
push
ss
jge
dec
stos
dec
pop
jbe
pop
push
fcomp
lahf
mov
enter
pop
pop
pop
ret
mov
cli
incl
pop
jl
data16
insl
ficoms
ret
fldl
or
mov
scas
into
and
adc
dec
popa
dec
aad
ds
add
adcl
mov
insb
movsl
pop
fs
rcl
dec
and
add
pop
xor
dec
or
in
jae
sbb
jmp
out
fiaddl
pop
sahf
dec
jns
ja
aaa
subb
dec
mov
lds
pop
pop
fistpl
dec
pop
test
dec
into
pop
fsubp
call
andl
cmpsb
pop
xor
mov
pop
jg
lods
or
add
sbbb
cltd
and
pop
fcmove
ss
popa
pop
xchg
mov
mov
lret
sub
fs
sub
sbb
dec
adc
jns
mov
pushw
les
fcmovb
mov
in
push
nop
fwait
push
inc
pop
rcr
mov
out
inc
push
pop
mov
pop
lret
test
sbb
mov
add
push
pop
jle
jb
add
lahf
sbb
jmp
aaa
or
mov
pop
mov
cmpb
pop
xor
loopne
dec
test
pop
sbb
cwtl
xchg
adc
insb
fwait
into
cmp
pop
xchg
lods
shlb
push
push
sbbb
aaa
or
fidivs
in
mov
xor
dec
ja
pop
out
call
fdivl
sbb
jmp
imul
pop
cmp
pop
jb
cli
or
pop
nop
add
inc
scas
mov
or
cmc
leave
mov
add
sbb
push
aad
mov
mov
fistps
dec
popa
and
mov
lret
sub
sarb
pop
cmp
jb
inc
pop
mov
mov
mov
sbb
lea
jbe
mov
lock
or
rcrl
std
sbb
test
jl
pop
sbb
sbb
mov
push
pop
push
shlb
inc
in
sub
rcrl
mov
daa
and
aas
stc
out
pushf
mov
pop
or
or
jge
pop
pop
add
ljmp
sbb
pop
fs
xor
stc
mov
mov
inc
scas
out
jg
insl
pop
stc
hlt
pop
arpl
fwait
push
inc
adcb
pop
out
adc
inc
rcrb
int3
lret
pop
shlb
xchg
mov
movsl
rclb
pop
in
lds
imul
xchg
pop
lret
pop
jl
dec
push
pop
push
in
lcall
fninit
push
imul
int
dec
cmp
push
pop
jbe
fstpl
mov
jnp
sbb
int3
mov
dec
mov
repnz
pop
sub
xchg
pop
mov
pop
addr16
pop
test
inc
aad
xor
out
add
jmp
mov
pop
push
sbb
dec
jge
pop
sub
sub
xor
mov
cltd
jle
xor
imul
aas
lret
std
pop
arpl
mov
stc
inc
pop
loopne
jge
mov
push
in
adc
jnp
repz
into
xchg
dec
push
sbb
jle
mov
mov
mov
loope
pop
jae
cmp
in
pop
jb
sti
mov
test
pop
std
popa
mov
into
inc
pop
jno
xor
cmp
stos
mov
xchg
lock
inc
mov
adc
int3
fwait
sub
stos
nop
and
gs
cli
es
pop
pop
data16
pop
pop
rorl
pop
adcb
lret
outsl
ljmp
fstpl
sub
sub
push
jmp
mov
insl
movsb
into
shll
aaa
int
jo
pop
lret
or
mov
in
cmp
movsb
add
pop
out
fmul
shrb
adc
add
push
dec
dec
add
sub
add
in
call
pusha
int3
xchg
sti
fnstcw
ret
pop
xchg
sub
inc
push
pushf
mov
pop
lahf
or
sbb
cltd
pop
jne
jb
lds
pop
das
xchg
loopne
insl
pop
aam
pop
mov
jnp
es
lret
clc
int
jns
iret
lahf
movsb
out
arpl
mov
dec
or
jecxz
sbbl
push
or
xchg
pusha
pop
test
pop
ljmp
mov
loop
negl
mov
cld
ficomps
fsubrs
es
sub
ja
xchg
out
fcmovbe
aaa
pop
insl
add
jg
pop
movlps
ja
xor
pop
fnstcw
pop
loope
inc
lds
out
push
lcall
or
pop
lods
inc
jle
and
lock
dec
addr16
repnz
ret
sbb
rcrl
test
lcall
lahf
inc
mov
ja
out
add
jb
jnp
jae
pop
adc
cld
pop
rcrb
pop
xchg
in
jbe
adc
dec
pop
leave
icebp
test
fnsave
ljmp
lods
ret
int3
pop
mov
imul
popa
pop
scas
jle
dec
int
and
out
stc
xchg
pop
leave
lret
mov
pop
xchg
out
test
jg
cmp
es
data16
push
lahf
pop
dec
int
mov
dec
in
xor
xchg
sub
neg
and
xorl
fstpt
sub
jae
orb
xchg
mov
movsb
sbbl
mov
pop
cmc
fs
fcoml
sti
mov
sbbl
insl
fisubrl
jns
out
shrl
mov
test
xchg
jmp
orb
fwait
pop
push
mov
addr16
test
cmpsl
xor
jb
sbb
jge
outsb
jmp
pop
lret
xchg
lret
lock
pop
or
das
add
xor
cmc
adc
mov
sub
subl
shl
dec
cltd
pop
or
add
add
mov
mov
iret
mov
pop
pop
ds
jo
xor
jns
mov
mov
sbbb
stos
add
fcomi
push
pop
dec
jnp
mov
pop
pusha
pop
ja
pop
test
mov
in
loope
insl
sbb
leave
pop
lods
es
and
pop
insb
pop
jg
mov
jbe
sbb
sub
insl
sub
cmpsl
jle
jl
adc
fmul
mov
dec
int3
jb
pop
push
pop
cmp
lea
mov
ret
int3
xorl
jmp
sbb
es
xor
dec
loopne
pop
aad
pushf
rorl
int
rcrb
sub
mov
fdivs
dec
push
mov
pop
mov
sub
jns
pop
pop
test
lods
int3
pop
pop
sub
pop
incl
xor
or
jo
mov
or
pop
add
push
pop
test
ljmp
push
lcall
jge
fwait
pop
lods
mov
fisubs
stc
and
notl
inc
les
sub
popa
aaa
sbb
xor
mov
pop
sbb
int
popa
dec
mov
sbb
pop
push
sti
inc
lods
or
sbb
mov
les
pop
sub
push
pushf
dec
lea
jb
out
dec
stos
mov
and
in
fdivr
jge
incl
xor
pop
push
and
adc
js
xor
aas
mov
dec
add
test
jbe
jo
pop
sub
sbb
cmpsl
mov
dec
pop
pop
mov
inc
aam
sti
xchg
jecxz
sbb
dec
or
pop
push
cmp
adc
cwtl
adc
pop
mov
hlt
imul
test
pop
ljmp
pop
sub
call
dec
loopne
pop
push
mov
or
cli
mov
push
dec
pop
movsb
jo
mov
lcall
and
pop
ret
adc
pop
outsl
loop
popf
lahf
jbe
mov
gs
pop
cmpsl
mov
aas
dec
dec
dec
sbb
pop
shld
repz
pop
lret
pop
stc
jae
repnz
loop
pop
xchg
mov
xchg
out
and
mov
add
out
orl
fisubl
pop
jb
pop
mov
pop
pop
jge
decb
adc
and
sub
icebp
mov
das
in
jbe
mov
test
mov
inc
scas
repnz
sbb
mov
rcll
xor
or
mov
lods
scas
or
bound
lock
stos
push
adc
in
xchg
scas
sub
daa
add
fwait
push
pop
pop
pop
enter
sbb
xchg
ret
int3
scas
adc
inc
andb
jecxz
push
push
cmp
push
lret
cmpsl
ret
mov
bound
aas
pop
pop
push
sub
jbe
jae
mov
mov
pop
or
stos
movsl
xchg
pop
mov
pop
mov
adc
lret
adc
push
clc
xor
and
aaa
jmp
cmp
arpl
in
lahf
bound
sub
add
lds
mov
mov
dec
adc
sbb
push
pop
fidivs
addr16
into
sub
pop
and
or
dec
insb
adc
fstps
push
imul
pop
cmp
inc
xchg
pop
pop
mov
pop
popa
mov
sti
cmp
xchg
mov
push
movsl
push
jns
aas
sub
addr16
mov
stos
xlat
mov
sbb
mov
cmp
ja
sub
mov
fucomp
push
push
fdivrl
push
push
cli
cmp
or
cld
xor
out
notl
pop
xchg
sarb
sbb
das
fimuls
mov
pop
idivb
pop
mov
test
jbe
xor
cmpsl
xchg
sub
mov
pop
imul
stos
push
xchg
pop
jne
sbb
pop
jmp
jl
mov
fwait
inc
adc
mov
sub
call
dec
ja
int3
and
jns
outsl
int
rcrb
sub
adc
add
scas
pop
mov
int
enter
cli
pop
dec
in
pop
bound
or
shlb
sar
test
or
out
mov
mov
aad
adc
xchg
inc
mov
test
sbb
test
jmp
orl
push
inc
and
dec
stc
push
pop
xchg
std
sbb
fcom
leave
pop
jo
pop
imul
mov
pushw
pop
xchg
mov
dec
ret
pop
rcrb
push
fildll
test
test
cwtl
gs
stos
test
cmp
add
rcrl
sub
inc
pushl
mov
pop
or
ret
frstor
imul
cmpsb
pop
mov
pop
int3
cmp
add
pop
xchg
loope
inc
adc
jbe
mov
arpl
dec
mov
pop
jmp
stos
out
mov
and
pop
sbb
mov
xchg
mov
lret
loopne
xchg
pusha
lahf
test
xchg
and
push
pop
cmp
cld
dec
mov
pushf
sbb
xchg
repnz
insl
mov
push
mov
xchg
popf
pop
ja
in
adc
mov
stos
icebp
in
mov
movl
bndstx
pop
jnp
movsl
ss
adc
or
int3
orl
int
push
sbb
mov
sbb
dec
jp
ja
pop
jl
call
int3
pop
push
in
stos
adc
inc
or
xchg
dec
or
mov
lahf
rorb
mov
pop
fwait
cmp
pop
cmp
fistpl
aam
mov
jbe
push
push
sub
aaa
je
mov
pop
stos
shrb
mov
jg
inc
jb
jne
pop
data16
mov
sbb
dec
pop
cmpsb
xlat
inc
lret
int
shl
jge
mov
mov
insl
in
or
loopne
inc
pop
out
int
mov
cwtl
adc
mov
fnstsw
mov
nop
icebp
ret
add
sbb
pusha
sarb
lcall
lahf
pusha
fwait
jae
das
imul
sar
insb
xchg
pop
test
aaa
adc
lahf
mov
std
lcall
pop
js
xchg
gs
rorb
pop
lods
inc
in
test
or
arpl
jb
arpl
clc
cmc
popf
sbb
pop
lret
push
dec
jecxz
pop
xchg
xchg
lret
mov
pop
inc
stc
leave
cld
daa
lea
xchg
jo
mov
jno
int3
lcall
dec
aad
call
pop
sub
mov
adc
add
bound
xlat
xchg
pop
outsl
in
sbb
movsb
dec
js,pn
mov
lds
pop
jmp
mov
pop
cli
mov
jb
dec
adc
addr16
sub
int
and
pop
test
flds
and
xchg
xor
cmpsb
test
mov
cwtl
pop
cmc
mov
jl
lea
pop
cmpsb
dec
xchg
dec
stos
or
and
aad
int
outsb
bound
jo
jns
mov
push
in
and
neg
pop
mov
cmp
xchg
cmp
xor
ja
push
pop
rorb
pop
pop
jecxz
jo
sbb
xor
into
jb
rcll
out
popa
sbb
or
adc
pop
lret
stos
push
inc
jne
outsb
fimull
in
nop
sbb
sub
cld
fsubs
scas
insb
lods
mov
add
pop
sbb
jb
mov
cwtl
jecxz
arpl
sbb
ss
sti
lods
or
pushf
in
jle
push
mov
mov
movsb
sbb
cmp
loopne
scas
and
mov
pop
outsl
repz
jae
data16
std
ficoml
roll
push
and
cmp
jbe
pop
add
sti
dec
inc
jmp
das
pop
sbb
cmp
inc
pop
test
aaa
int
mov
lret
pop
push
push
push
frstor
es
dec
adcb
pop
stos
hlt
scas
mov
add
fistl
pop
mov
xchg
ss
repnz
outsl
mov
sub
jmp
divb
mov
push
into
push
dec
arpl
mov
in
popa
fistpl
pop
test
leave
mov
rcrb
sub
ret
cli
sbb
orb
mov
insb
repz
das
dec
inc
and
mov
mov
ljmp
cli
push
dec
out
push
data16
pop
shlb
out
pop
inc
jb
mov
jle
cmp
jle
std
mov
sbb
xorb
es
stc
fs
jae
xchg
dec
movsb
mov
int3
in
sub
add
mov
push
in
push
xchg
mov
stos
fistpll
or
sti
xchg
scas
int
xchg
sub
leave
mov
mov
jl,pt
pop
test
mov
pusha
adc
sbb
xchg
pop
insb
mov
xchg
and
and
aad
je
or
jmp
cmp
adc
dec
pop
lock
sbb
in
hlt
mul
mov
int3
pop
imul
das
out
cmp
mov
mov
pop
lahf
mov
fildll
testb
stos
mov
adc
mov
movsl
outsl
and
pop
lret
addr16
and
sti
xchg
pop
hlt
sub
xchg
mov
out
gs
sbb
invd
cmp
dec
xor
or
fistps
test
jge
scas
mov
mov
dec
dec
xor
pop
lea
xchg
scas
sbb
mov
sub
fxch
inc
pop
pop
pusha
add
in
aad
or
mov
test
mov
int
hlt
mov
add
sbb
pop
ret
int3
leave
popa
fs
ret
jle
cmpsb
mov
fstpl
mul
inc
inc
scas
in
fistpl
shlb
popa
pop
shl
aad
pop
arpl
outsl
scas
ficomps
pop
mov
ja
adc
lret
push
and
inc
popf
pop
je
dec
sarb
jbe
fildll
mov
jno
mov
jns
pop
in
mov
or
pop
inc
jo
mov
lret
adcb
sub
inc
scas
ljmp
enter
cmp
push
and
pop
sub
add
in
jle
shrl
xchg
add
cwtl
pop
lock
pop
lahf
lahf
or
stc
in
imul
pop
int3
and
jb
jg
outsl
insb
cmp
cmpsb
jno
xchg
sub
sti
aaa
aam
xor
movsb
mov
fistl
das
jo
scas
pop
xor
out
cwtl
pop
addl
fnstenv
xchg
lcall
aad
dec
jl
jb
pop
loope
in
outsb
push
arpl
cmp
cmpb
enter
push
cmpsl
add
pop
xchg
sbb
and
xor
rcr
pop
push
test
xchg
cs
sbb
lret
push
mov
mov
xchg
and
std
xchg
aad
in
pop
or
cmp
jo,pn
ss
push
and
jnp
decl
paddsw
jb
pop
sbb
enter
je
insl
xor
cmp
int
push
mov
jg
push
movsl
jle
and
mov
pop
mov
jb
das
js
repnz
pop
mov
jno
or
inc
clc
pop
nop
or
push
cld
jle
xchg
in
sbb
dec
aad
int
ljmp
jbe
fisttpl
and
jns
mov
leave
sbb
inc
and
ficomps
inc
std
xor
cmp
addb
push
hlt
xor
das
jge
mov
dec
jnp
movsl
xlat
pop
xor
pusha
mov
int
ret
sbb
cmp
xorl
push
js
shll
lcall
or
imul
mov
in
pop
add
es
sbb
lahf
pop
mov
cs
lret
cltd
sub
aas
pop
pop
push
mov
pop
in
mov
xchg
and
ret
jb
mov
movsb
hlt
sub
mov
cmp
sbb
push
jge
mov
sub
test
push
and
lahf
adc
mov
aad
dec
xchg
pop
dec
popa
stos
pusha
dec
sbb
dec
inc
pop
cld
mov
fs
pop
int
push
mov
push
lahf
pop
lds
adc
jo
mov
rep
test
jmp
mov
mov
sbbb
sbb
mov
and
std
pop
cmpl
jb
push
xchg
mov
lock
pop
scas
loop
mov
pop
jne
pop
dec
std
mov
cmp
mov
jb
adc
inc
sbb
and
out
mov
mov
or
or
pop
cli
gs
pop
xlat
inc
cmp
jmp
dec
aad
scas
sub
les
mov
pop
cwtl
ja
pusha
loopne
in
clc
pop
stos
push
xchg
cli
andl
mov
shll
out
or
jle
and
in
in
and
fistpll
fcomps
js
adc
push
out
mov
enter
sbb
xor
xor
inc
xor
in
ja
add
pop
xchg
dec
pop
mov
fmul
lds
push
mov
ret
xor
dec
scas
jns
pop
mov
xor
sub
dec
xchg
imul
and
pop
mov
inc
std
inc
pop
test
xchg
inc
scas
int3
push
imul
cwtl
mov
pop
mov
dec
cmpsl
add
mov
push
pop
test
mov
fs
int3
pop
push
or
sbbb
pop
mov
push
daa
mov
int
sbb
js,pn
pop
lret
push
int3
fld
add
sub
int
mov
shl
cltd
test
mov
pop
scas
je
xor
inc
jbe
pop
sub
push
add
int
repz
sbb
pop
sahf
push
outsb
iret
jb
ljmpw
ja
loopne
pop
or
rorl
pop
test
mov
xchg
pop
clc
out
xor
jg
idivl
inc
or
sbb
pop
mov
sbb
dec
pop
cmp
insb
and
loope
sub
jo
adc
mov
out
push
pop
leave
popa
in
dec
xchg
js
xor
fucomp
jns
mov
test
aam
enter
mov
push
dec
arpl
or
xchg
pop
iret
pusha
inc
lds
xchg
fisttpl
out
mov
pop
jmp
add
pop
dec
pop
sarl
dec
data16
push
int
jb
test
leave
imul
insl
add
jbe,pt
sti
cwtl
mov
pop
into
cli
xor
pop
arpl
sbb
jl
xor
add
leave
pop
jb
jbe
aaa
cwtl
pusha
sub
xchg
inc
add
pop
ds
ljmp
xchg
pop
cmp
jbe
fsubs
adc
sbb
cmc
pop
xchg
out
mov
pop
inc
scas
repz
sbbl
mov
out
loope
lret
pop
mov
pop
idiv
xor
cmpsb
dec
pop
mov
fcompl
lock
enter
mov
lea
jmp
xchg
adc
aam
pop
daa
or
adc
or
xchg
xor
dec
cwtl
pshufw
sahf
ficompl
mov
mov
pop
adc
dec
jb
cmp
pop
inc
sbb
imul
ficoml
insb
xor
in
gs
sahf
fsubrs
ljmp
pop
adc
idiv
sbb
in
mov
inc
lcall
rol
pop
sub
cld
push
lea
dec
sub
fmuls
sarb
mov
bound
test
lahf
in
stc
iret
fldt
mov
lods
sbb
into
mov
mov
cld
nop
sbb
icebp
pop
ss
pop
adc
dec
lock
add
push
lcall
xchg
inc
fmull
push
inc
frstor
xchg
pushf
je
sbb
and
jo
pop
sahf
ja
xlat
aaa
inc
fwait
push
inc
out
mov
inc
sarb
insl
xlat
xchg
cmp
sar
pop
mov
pop
sbb
xor
mov
test
lods
fiaddl
lds
and
int
in
cmp
jp
inc
iret
xor
mov
dec
cmp
mov
sarl
ficomps
push
pop
adc
fstp
jo
mov
fistl
sbb
insb
xor
rclb
pop
mov
scas
adc
ds
inc
mov
or
int
inc
mov
imul
ja
push
xchg
std
movsb
not
sub
cmp
movsl
push
mov
pop
loope
arpl
mov
mov
lea
in
dec
jb
repz
fstl
sub
dec
or
inc
mov
arpl
fisubl
or
daa
mov
jno
and
jmp
pop
repnz
jmp
mov
loopne
pop
out
pop
dec
add
mov
lea
pop
mov
jbe
push
mov
fwait
lret
pop
lcall
push
jp
pop
dec
daa
int3
mov
pop
add
adc
lods
push
ja
pop
roll
push
pop
mov
adc
icebp
lea
imul
cwtl
push
pop
sub
std
cmp
cmpsl
insb
inc
pop
mov
jbe
test
and
int
adc
xor
jns
cltd
pop
stos
dec
mov
dec
rorl
push
orb
je
cmp
adc
mov
dec
xlat
jno
add
pop
and
loope
mov
repz
dec
push
jae
add
int
sbb
pop
dec
cmpsl
lcall
mov
fistpl
sbb
cmc
adc
loope
pop
out
jae
mov
or
push
inc
test
sbb
and
pop
mov
scas
rcrl
out
clc
sub
xchg
lock
cltd
jge
insl
pop
inc
fcoms
imul
subb
pop
stc
rcrl
cli
sub
jecxz
pop
mov
xchg
adc
jae
push
mov
lcall
cmp
repz
cmp
test
or
sub
out
push
sahf
call
lret
push
outsb
pop
aaa
inc
jns
push
dec
stc
and
mov
xor
shlb
stos
outsl
mov
inc
push
jno
xor
jg
xorb
clc
or
pop
dec
sub
sti
iret
dec
scas
sub
add
ss
pop
shl
xor
xor
mov
xchg
loopne
inc
in
jecxz
sub
leave
jno
repz
lods
and
push
pop
jp
mov
int
mov
std
sbb
sbb
pop
mov
pop
jne
jo
mov
pusha
int3
out
or
mov
jle
sbb
mov
aad
sbb
in
cltd
push
lret
sti
dec
leave
movsl
and
lock
jns
fcoms
mov
clc
mov
or
cmp
sub
push
sbb
xchg
xchg
test
lret
mov
idiv
pop
push
cltd
dec
lock
jge
push
ljmp
pop
push
jl
jbe
in
or
pop
popf
outsl
je
mov
cwtl
pop
insb
jge
push
test
rorb
mov
sbb
xchg
cs
ret
cmp
std
popa
lock
pop
xlat
ss
out
ja
or
jbe
pop
faddl
inc
stc
sbb
iret
rcrl
xor
lea
sti
lods
ljmp
sbb
mov
pop
cmp
fucomi
bound
lock
push
jno
hlt
inc
lahf
jmp
add
fcomps
shlb
inc
mov
sub
aas
je
dec
pop
pop
test
iret
cmc
enter
data16
data16
mov
add
lds
dec
iret
and
pop
sbb
dec
jae
in
outsl
ret
adc
mov
test
mov
das
fsubs
pop
jb
jl
jae
aaa
jp
cmp
dec
sahf
sbb
cwtl
fwait
and
mov
jl
add
push
mov
xor
jp
les
in
pop
adc
ficompl
mov
imul
add
pop
pop
enter
je
sub
mov
icebp
adc
dec
call
cmp
push
jbe
lahf
lcall
cmpsl
adc
push
pop
js
gs
pop
push
dec
and
enter
sub
data16
mov
idivl
sbb
push
jge
jbe
pop
inc
je
repz
enter
out
pop
int3
xor
push
leave
std
pop
mov
int
movsb
jmp
sub
xor
dec
out
push
addb
cli
inc
aas
pop
cmc
lea
inc
mov
int
adc
int3
push
mov
xchg
inc
xchg
mov
pop
shll
test
sub
add
inc
pop
into
repnz
jmp
and
das
jns
cltd
jecxz
mov
and
jo
dec
outsl
sbbl
into
out
push
push
pop
les
mov
jnp
xchg
pop
loop
jb
das
mov
ljmp
test
enter
sub
fcomps
mov
push
or
insl
les
add
lahf
mov
aad
push
inc
scas
mov
out
aam
mov
push
aas
sub
cltd
mov
test
mov
std
ret
pop
jne
insb
lahf
mov
fistps
icebp
cmp
in
jno
sar
cltd
xor
gs
lret
mov
stos
add
inc
push
shlb
lods
repnz
fstpl
je
fldenv
pop
ret
pusha
or
cmp
pop
sub
and
pop
sti
cld
inc
dec
fsubrs
mov
int
mov
adc
into
sub
pop
arpl
int3
shll
sti
dec
bound
jb
pop
rcrl
loop
lock
out
xchg
and
subl
dec
insb
data16
in
pop
rol
dec
jo
push
movsb
ds
cmpb
pop
sbb
cmc
mov
add
sub
scas
pop
xor
inc
insb
sbb
mov
mov
std
and
pop
add
push
mov
cwtl
cld
pop
repnz
push
lods
lock
ja
cmpsl
push
je
ds
aad
leave
test
mov
pop
jb
aam
fxtract
xor
lret
ds
mov
inc
cltd
or
jecxz
pop
mov
fucomi
pop
pop
lods
and
aam
sbb
pop
cwtl
loope
scas
popf
lea
pop
imul
jno
lahf
lcall
pop
inc
pusha
add
mov
cltd
pop
stc
dec
repz
aaa
add
push
and
jb
push
jnp
jo
mov
sub
imul
js
mov
add
lods
popf
hlt
push
sbb
decl
push
pop
xor
movsb
dec
pop
mov
aaa
mov
lret
push
fnsave
mov
loope
mov
iret
xchg
adc
test
jmp
pop
insl
pop
jo
jp
scas
jb
scas
daa
xchg
dec
jns
add
fs
adcb
fstpl
cmpsb
pop
adc
lret
incl
pop
orl
adc
test
fcomi
xchg
pop
cmp
ljmp
jne
pop
daa
ret
lret
iret
dec
jge
pop
icebp
jno
push
mov
add
mov
mov
xchg
ficoml
loope
addb
cli
imul
andl
lcall
and
xor
push
and
dec
int3
mov
out
int
mov
dec
gs
fcompl
aam
xor
pop
jl
pop
lods
or
or
add
sub
jecxz
imul
test
aas
push
or
sahf
adc
sub
xor
xchg
sbb
sti
jns
std
ljmp
loop
pop
leave
pop
andl
mov
and
inc
adc
cmp
pop
mov
sub
lds
rcrb
test
xor
xchg
pop
xchg
orb
push
push
inc
and
mov
out
inc
lret
jne
ja
rcll
mov
mov
sub
push
jecxz
lock
or
lods
cmp
pop
mov
pop
aam
xor
gs
pushf
test
sbb
mov
add
dec
ret
lods
lret
mov
adc
fsubrl
fcomp
xor
pop
movsb
icebp
pop
add
xchg
clc
jg
pop
jb
add
lret
pop
xchg
cmp
mov
mov
icebp
cld
cs
insl
or
pusha
or
daa
ja
pop
push
pop
aad
gs
lahf
or
pop
push
pop
ret
cmc
outsb
inc
cmpb
pop
sbb
mov
movsb
movsl
lods
adc
sbb
dec
in
pop
mov
jecxz
push
pop
jle
sbb
fildll
sbb
and
lret
cmpsl
lods
adc
mov
push
popa
scas
jo
xchg
jns
pusha
mov
test
jno
enter
mov
shlb
movsb
pop
sbb
fdivrs
jp
cltd
cli
ds
cmp
das
clc
pop
in
stos
dec
mov
mov
mov
mov
ja
adc
bound
or
repz
pop
jbe
movsb
pop
dec
xchg
mov
pop
xor
nop
push
mov
pop
push
push
jmp
imul
vpackssdw
dec
pop
fildll
mov
pop
jnp
xchg
push
cmp
mov
loope
pop
int
sarl
fsts
push
cmpsl
pop
imul
test
mov
packuswb
mov
rcl
adc
pop
bound
lods
mov
jge
xor
inc
and
out
rcrb
xor
fistl
inc
imul
inc
pop
sbb
not
movsb
dec
push
mov
cltd
cs
dec
mov
daa
sub
xchg
test
aam
push
imul
push
pop
adcl
jb
pop
in
mov
or
pop
and
jbe
jae
or
divb
rcrb
int3
cmp
popl
and
loope
jo
cmpsl
and
insl
xor
loopne
mov
inc
stos
adc
mov
lret
fwait
push
icebp
frstor
add
sbb
scas
add
lods
lods
cmp
outsl
mov
and
jp
in
adc
movsl
push
push
int3
pop
dec
loop
aas
nop
addb
clc
xchg
insb
sbb
ja
filds
loop
jo
scas
insl
mov
cltd
and
mov
fadds
or
add
inc
enter
popf
pop
sbb
or
mov
mov
test
jne
scas
cmp
pop
jp
ret
fimuls
xchg
push
pop
shlb
ds
outsl
insb
pop
jl
or
dec
jb
fstl
xchg
pop
popf
lods
add
cmc
push
or
jecxz
lret
inc
mov
mov
lods
fstpl
lret
jl
jb
rcll
add
dec
sbb
xor
sbb
cli
adc
pop
aam
xchg
jb
imul
loope
sbb
pop
movsl
xor
pop
scas
pop
out
pop
jbe
cmp
cmc
pop
mov
mov
insl
dec
nop
and
int
cmp
out
orb
ss
into
fsubl
mov
jae
repz
aam
pop
xor
pop
adc
cmp
and
insb
leave
cwtl
sbb
pop
sbb
int3
stc
movsb
aas
pop
jns
pop
and
sbb
imul
leave
push
push
jno
xchg
pop
pop
lahf
loopne
xlat
add
push
cld
mov
jbe
movsl
aas
pop
push
xchg
int3
in
xor
out
cmp
shll
test
sbb
scas
fstpl
cli
mov
lahf
and
ficoml
ss
push
popa
dec
sbb
arpl
add
pop
jns
fiaddl
jecxz
fwait
stos
pop
out
je
xor
fisttps
in
out
leave
add
in
xchg
add
pop
push
pop
add
push
in
or
movsl
mov
pop
push
dec
lcall
xlat
inc
push
push
cmpsl
cmp
dec
or
mov
in
int
testl
pop
jge
and
nop
cmp
cmp
dec
pop
test
call
xorl
mov
fimull
in
pop
lret
xchg
mov
push
pop
add
mov
pop
or
jae
dec
clc
pushf
pop
mov
mov
gs
iret
xchg
pop
pop
fadds
lahf
sbb
add
shr
jnp
push
jge
xchg
sahf
xchg
pop
xor
jp
xor
sahf
scas
sbbb
or
add
es
push
sbb
dec
mov
insb
pop
xchg
sub
pop
test
mov
pop
rorb
out
lahf
pop
addps
add
dec
adc
insb
and
sub
pop
std
mov
int
lock
pop
pop
test
dec
lds
cltd
int3
insb
push
fldt
pop
push
cmp
loopne
dec
pop
iret
movsb
lcall
push
sbb
sahf
cltd
rcrb
out
int
xlat
pop
adc
repz
stc
mov
push
mov
scas
xor
movsl
fidivs
xchg
test
inc
jl
loopne
movsb
repnz
mov
iret
xchg
std
push
fcomps
pop
mov
pop
mov
or
cmp
scas
cmp
sbb
mov
mov
in
dec
lahf
fistpl
scas
mov
clc
mov
jl
test
pop
ljmp
add
fistl
xor
mov
inc
enter
fxam
rcrl
sbb
popa
xchg
mov
mov
pop
cmp
push
test
ret
or
fisubrl
mov
pop
filds
fwait
jmp
and
add
repz
lds
es
pop
pop
mov
jp
shl
lcall
ljmp
lea
nop
pop
add
push
stos
inc
pop
popf
sbb
lahf
jecxz
xlat
xchg
pop
push
mov
dec
jl
fwait
sub
mov
sbb
je
mov
cltd
sbb
std
jbe
pop
nopl
mov
xlat
mov
out
push
sbb
pop
ret
ja
xchg
inc
adc
lods
mov
test
mov
sbb
dec
adc
leave
inc
and
push
adc
sub
addr16
pop
movsb
mov
push
mov
pop
adc
mov
cld
cmpsb
pop
adcb
popl
and
pop
jecxz
mov
lds
test
testl
cs
js
mov
pop
daa
in
and
dec
enter
pop
push
fdivrl
adc
int
sahf
pop
inc
lea
push
jle
imul
or
ret
pop
jbe
jp
ds
mov
xor
mov
push
outsb
inc
pop
adc
and
pop
jl
fstl
les
jo
pop
test
inc
int
pop
addr16
cmpsb
xchg
adc
imul
lea
icebp
pop
and
mov
jo
mov
push
js
sub
fadds
fcoml
dec
jo
mov
dec
pop
mov
pop
negl
mov
popf
jg
mov
push
out
hlt
fldenv
test
adc
jg
inc
jno
jecxz
loopne
jp
cmp
scas
cmp
inc
mov
pop
dec
and
enter
mov
rorl
jo
dec
in
sbb
pop
cmp
in
movsb
imul
and
ja
negl
or
leave
adc
loop
aad
xchg
nop
movsb
pop
push
mov
cmp
xchg
sub
pop
mov
and
mov
incl
out
dec
sub
pop
mov
add
pop
sub
fsubrs
jecxz
aas
xchg
or
push
lock
insl
cmp
xor
mov
mov
jbe
dec
enter
xor
sbb
fadd
mov
xchg
shl
sbb
mov
fisubrs
sbb
fildl
pop
int3
sub
mov
stos
stos
jne
xorl
lcall
iret
aaa
add
add
xchg
pop
pop
mov
cmp
mov
lret
inc
imull
rcrb
aaa
div
xor
sub
in
aad
pop
ss
push
jb
test
pop
iret
jge
cmp
pop
add
jno
ret
jo
mov
insl
mov
sub
scas
out
lret
je
dec
pusha
xchg
xchg
pmaxsw
repz
xchg
negl
imul
sub
lods
push
insl
dec
fwait
push
dec
ljmp
test
pop
ret
mov
jmp
inc
and
pop
cmpl
pusha
scas
cwtl
xchg
les
fidivrl
loope
cmp
cmc
rcrb
pop
pushf
xchg
pop
daa
negl
mov
icebp
les
mov
es
xchg
mov
mov
ds
sub
pop
enter
fcomp
repnz
pop
xor
sbb
out
aaa
ret
clc
lods
add
xlat
mov
xor
mov
mov
addr16
dec
sar
cltd
xchg
subl
scas
dec
mov
gs
je
in
adc
stos
xchg
fcompl
call
cld
mov
sbb
mov
cli
pop
lods
sub
pushf
pop
pop
fstpt
jg
and
dec
sbb
out
arpl
fcmovne
cmp
jge
pop
xor
sub
xchg
mov
adc
aam
popf
push
jmp
jge
dec
int3
pop
out
mov
mov
jo
mov
cld
dec
lods
xchg
sub
scas
mov
and
sbb
jo
jbe
push
pop
das
test
rcrl
mov
test
mov
imul
das
xchg
out
cltd
pop
loope
adc
jb
push
scas
pop
and
clc
fwait
jne
mov
or
out
xor
cld
sbb
xchg
push
les
mov
pop
cmp
jbe
pop
sbb
or
and
fistpl
test
pop
cltd
xchg
xor
mov
pop
xchg
cli
repz
out
fldt
mov
push
int3
dec
mov
mov
mov
xorb
ljmp
push
mov
jne
push
jp
insl
sbb
daa
ds
push
mov
jg
lds
cltd
xchg
inc
push
jns
adc
stos
insl
nop
pop
arpl
sahf
pop
inc
xchg
pushf
jbe
mov
push
jg
pop
sbb
jl
scas
int
mov
and
pushl
xchg
mov
push
arpl
cwtl
test
pop
cmp
add
pop
sbb
pushl
jecxz
add
mov
dec
cld
pop
mov
and
sbb
stos
pop
or
push
dec
inc
xchg
aam
pop
inc
dec
push
adc
inc
test
sbb
mov
or
pop
adc
hlt
sub
lcall
clc
shll
repnz
repz
pop
test
jbe
pop
pop
cmpsl
dec
push
pop
adc
jl
xchg
adc
icebp
stos
iret
ret
lea
ficomps
jne
pop
fwait
inc
ja,pn
das
xchg
pop
orb
xor
dec
sti
mov
pop
nop
jge
dec
xchg
int3
loop
js
dec
add
push
out
pop
cltd
in
xchg
pop
dec
sub
jb
mov
loop
cmp
ja
inc
out
stos
mov
pop
xor
and
mov
or
xchg
nop
jle
outsl
pop
cmp
ret
pop
sbbb
xorl
fisubl
loop
or
pop
cli
sti
lcall
cmp
ljmp
push
and
mov
repnz
je
gs
or
jbe
sub
pop
pop
inc
push
popf
pushf
pop
lods
ficompl
ret
jno
roll
inc
dec
scas
or
outsl
xor
sti
ja
inc
pop
cmp
test
out
mov
xchg
sbb
decl
xor
add
cmp
std
sbb
cmp
test
pop
jp
cmc
dec
lock
sbb
jmp
dec
cld
and
ljmp
in
pop
mov
sbbb
pop
popf
outsl
sbb
sbb
out
jbe
pop
test
ss
and
js
jmp
scas
lods
mov
fcmovb
iret
mov
and
stos
xchg
mov
push
mov
call
add
je
or
jecxz
pop
jl
xchg
lahf
dec
inc
ja
mov
aas
pop
pushf
xlat
pop
cwtl
into
fucomp
fistl
pop
dec
lds
pop
mov
mov
xchg
scas
mov
cwtl
mov
mov
and
shlb
pop
mov
aad
sbb
mulb
int
imul
pop
sub
rcrl
pop
jg
adc
insb
frstor
sahf
jbe
pop
inc
pop
mov
sbb
mov
data16
and
dec
jl
push
pop
in
xorb
xchg
out
mov
sbb
pop
out
push
lcall
cli
sub
in
add
int
pusha
popl
dec
aas
pop
sahf
jecxz
mov
das
hlt
pop
dec
add
sbb
in
lea
lods
push
pop
imul
aam
pop
or
dec
js
mov
sub
jg
ret
dec
inc
fildl
pop
out
mov
nop
xorb
outsb
dec
dec
push
mov
push
mov
xor
add
and
jno
push
sbb
sub
pop
mov
aam
imul
shlb
mov
fcoms
inc
scas
xchg
insl
jecxz
mov
pop
loop
xchg
inc
xchg
pop
movsl
xlat
jo
push
or
movsb
out
mov
stc
pop
lods
mov
xor
push
and
repz
pop
push
sbb
pop
xchg
stos
repz
jne
mov
mov
das
dec
hlt
fisttpl
sbb
lret
inc
fsubrs
pop
pop
or
xor
cs
pop
aaa
xchg
addr16
rcll
pop
int
sti
pop
loop
xor
stos
pop
mov
jo
ficoms
cs
outsl
sti
in
or
pop
lods
popa
or
mov
int3
dec
xor
fistpl
bound
mov
mov
aam
int
jp
fldz
mov
push
pop
sti
mov
pop
fbld
sub
xor
jge
xchg
in
cs
icebp
xorb
adc
je
xchg
sbb
dec
cmp
lret
inc
and
push
pop
or
aam
pop
or
sub
mov
mov
mov
mov
and
pop
dec
mov
ja
sbb
mov
sub
jbe
jp
pop
popa
push
xchg
jno
movsl
pop
cltd
dec
pop
das
xor
dec
dec
int3
pop
mov
fisubs
add
pop
dec
jp
xchg
mov
pop
mov
mov
sub
gs
leave
sbb
xor
push
jns
sbb
lea
scas
fstp
cmp
mov
nop
pop
sub
mov
out
xchg
mov
inc
fsts
pop
scas
test
sub
in
test
push
ja
int3
cld
jecxz
dec
leave
xchg
mov
fxtract
sar
das
jns
fcmove
jp
enter
popa
cltd
sbb
mov
dec
fldt
pcmpeqb
xchg
shrl
pop
out
add
and
iret
lds
shlb
ss
std
or
inc
arpl
pop
add
adc
pop
aas
test
roll
nop
cltd
adc
jge
js
loopne
repz
cmpsb
jo
jecxz
cltd
andb
mov
pop
ljmp
mulb
jle
sahf
popf
pop
into
mov
std
mov
stos
shll
pop
push
sbb
push
jle
loope
pop
test
jo
pop
dec
lds
les
and
std
lret
pop
rol
cmp
or
inc
mov
pop
into
insb
sub
adc
push
jns
pop
repz
mov
xor
jnp
inc
sub
push
pop
fwait
sarl
inc
into
xor
dec
pop
mov
mov
cmp
mov
movsb
pusha
sbb
icebp
pushf
or
fdivrl
pop
dec
push
and
rcrl
adc
bound
fstpl
dec
inc
add
add
cmp
rol
pop
repz
outsl
xchg
insb
pop
push
or
xchg
rcrl
ffree
loopne
idivb
xchg
mov
cwtl
mov
leave
pop
mov
sbb
pop
pop
mov
jle
js
icebp
pop
push
call
lahf
mov
and
out
mov
in
pusha
leave
outsb
inc
push
outsl
ficomps
popf
lods
dec
ret
or
pop
insb
mov
loope
sub
out
xor
ror
jo
bound
jb
mov
stc
pop
dec
mov
cmpsl
jo
ud2
pop
std
mov
sbb
das
inc
or
sbb
ljmp
ds
insb
fldlg2
enter
sub
jle
mov
dec
js
enter
cwtl
push
mov
pop
int3
dec
push
push
test
cmp
mov
arpl
jg
adc
cli
xor
jp
sub
dec
jbe
movsb
movsl
pop
sar
mov
int
negb
mov
fisttpl
loop
pop
bound
insb
or
mov
in
int
lret
imul
and
mov
sub
and
scas
pop
sbb
cltd
ret
ss
jge
jo
lret
push
or
sbbb
mov
fucomi
nop
movsl
pop
inc
xchg
jo
into
icebp
bound
sub
dec
adc
lret
dec
and
lret
mov
dec
clc
mov
or
push
std
dec
jb
mov
pop
dec
out
test
setns
daa
sbb
int
insl
mov
or
inc
xchg
jecxz
mov
pop
mov
int
scas
dec
pusha
sbb
sub
mov
inc
fnsave
xlat
pop
mov
xchg
push
pop
int
fsubrl
push
scas
dec
mov
pop
mov
out
in
mov
sbb
ffreep
push
fcmovbe
dec
jnp
jnp
mov
jbe
outsl
push
lahf
fs
fnstenv
xorb
adc
leave
int
shlb
or
push
jmp
mov
xchg
ljmp
push
mov
jbe
dec
jno
pop
int3
push
cmc
les
pop
xchg
test
repz
ds
inc
int3
pop
out
mov
lahf
pop
cmp
mov
int
pop
test
pop
jne
inc
sub
dec
mov
jle
movsb
subb
jbe
sub
adc
push
jmp
pop
jge
cmp
incl
pop
pop
insl
jne
xor
adc
fs
push
imul
inc
aaa
push
loop
ss
test
push
jns
jnp
push
popa
pop
cmp
mov
sahf
sub
or
mov
out
dec
adc
inc
aam
cmp
pop
imul
and
lahf
push
cmpsb
jbe
fistpl
jae
es
fiadds
mov
cs
loope
xor
les
pop
movsl
mov
mov
int
push
pop
fldt
add
mov
sbb
fwait
jge
xor
test
loop
xchg
and
icebp
test
filds
inc
pop
jmp
or
hlt
push
and
repz
pop
pop
jb
mov
pop
pop
lea
outsb
lock
rcrl
jecxz
ja
cmp
push
imul
loop
dec
inc
in
pop
test
enter
pop
cld
jle
aam
sarl
pop
pop
sbb
fimull
cmc
popf
in
das
jecxz
popa
and
sbb
or
inc
js
ror
idiv
mov
dec
cltd
cmpxchg
cmp
test
sahf
subb
mov
nop
or
mov
rcll
scas
arpl
test
cmp
ret
xor
aad
pop
ficompl
fildl
mov
addr16
test
rcrb
pop
xor
test
data16
cmp
mov
loope
jbe
sbb
fmul
pop
shlb
in
mov
push
cs
adc
mov
or
push
sbbb
lret
sarl
pop
dec
clc
cmp
std
or
pop
mov
je
mov
cmp
int
popf
pop
adc
pop
test
nop
dec
call
dec
cwtl
mov
mov
lds
arpl
jl
push
jle
jb
mov
cmpsl
push
and
insl
mov
scas
and
xchg
cmc
adc
bound
hlt
cltd
add
lcall
orb
sub
jmp
mov
push
xor
cmpsl
int
pop
movsl
push
outsb
mov
cld
popf
cmp
inc
mov
lahf
inc
and
mov
fistps
dec
sbb
lahf
inc
xor
dec
mov
jp
xor
cmp
pop
test
inc
adc
leave
or
inc
jne
lods
mov
push
xor
clc
out
int
pop
in
mov
cmp
cmp
inc
pop
adc
sbb
out
mov
push
pop
pop
xchg
sbb
sbb
sub
or
and
sbb
cltd
xor
flds
xor
repz
dec
jg
fdivrl
pop
mov
sub
insb
data16
loopne
test
mov
add
mov
pop
pop
movsl
pop
repz
jp
mov
adc
mov
mov
or
mov
lahf
sbb
jecxz
ret
push
insb
add
or
scas
mov
add
stc
rcl
loopne
cltd
adc
or
fistpl
adc
push
pop
push
mov
pop
cltd
or
add
mov
mov
sub
movsb
imul
cli
in
into
or
popf
ret
cmc
and
sbbb
mov
dec
cltd
es
jno
mov
leave
jbe
pop
cmp
lcall
push
loopne
nop
mov
sub
jg
pop
mov
push
adc
lahf
sbb
scas
das
mov
push
les
pop
fs
in
jns
lds
ret
add
loopne
push
movsb
add
pop
out
inc
mov
cmp
stos
cmp
mov
adc
adc
or
jg
jge
sbb
cs
or
iret
faddl
shll
ja
in
pop
cld
adc
loop
mov
call
imul
pop
dec
xor
jo
fnstenv
xlat
cmp
fsubrp
push
pop
push
lahf
sbb
jne
pop
jns
repnz
dec
jnp
xchg
jae
mov
pop
mov
mov
mov
sahf
stos
xchg
in
pop
mov
movsl
je
add
mov
popa
lret
xchg
movsb
sbb
rcrb
data16
mov
jl
scas
pop
outsb
sti
pop
pop
xor
rcrl
cmc
fmulp
inc
fistpl
jmp
jg
jbe
addr16
scas
cmp
cmp
inc
pop
lahf
js
test
bound
mov
loop
adc
fwait
sar
jo
jmp
inc
pop
mov
add
ss
out
mov
jne
sbb
fistps
pop
inc
insl
rorb
gs
jge
jbe
inc
ljmp
adc
int
push
pop
loope
or
lds
scas
or
push
jo
pop
push
or
cmp
sbb
shlb
mov
xchg
sbb
add
out
jecxz
clc
ror
add
pop
in
sti
pop
js
sbbl
pop
ja
dec
dec
insb
imul
push
loop
int
stos
sar
pushf
sbb
icebp
pop
add
add
add
and
out
xchg
push
dec
fwait
mov
cmp
adc
lock
aad
mov
jo
mov
push
fstl
xchg
mov
pop
push
cmpsl
stos
push
jns
sbb
les
in
inc
and
or
pop
pop
and
push
test
mov
pop
dec
pop
bound
nop
push
ds
pop
pop
and
sub
sub
mov
bound
dec
mov
icebp
dec
push
mov
mov
mov
lret
push
sub
and
sahf
sub
inc
mov
add
or
pop
leave
or
imul
cmpsl
lahf
fs
jl
jge
daa
jns
cmc
ss
aad
push
fisubrl
adc
ja
fcmovnb
add
fdivl
sub
repz
mov
push
sbb
je
daa
mov
push
psllq
add
mov
mov
cmc
lds
shll
dec
fisttps
popf
pop
xchg
leave
fdivrs
test
iret
movsl
xor
xor
adc
add
sub
mov
mov
pop
sub
sbbw
pop
sbb
lret
inc
and
add
jecxz
cmp
pop
push
stc
aaa
mulb
jg
jae
mov
pop
cmp
add
xchg
cltd
mov
push
xchg
pusha
or
pop
inc
pop
jge
jp
std
je
push
aad
mov
lock
lods
pop
mov
fsubl
enter
mov
rclb
das
xor
dec
test
pop
lods
stos
sbb
iret
stos
jae
xor
pop
pop
sub
lahf
repnz
or
fistl
add
das
dec
or
mov
mov
add
lahf
inc
and
fistpl
jecxz
jecxz
pop
mov
mov
hlt
dec
pop
cmpsb
pop
adc
addr16
sahf
test
cwtl
aas
or
sub
pusha
pop
fs
stos
mov
xor
pop
pop
inc
int3
lds
out
pop
jg
jnp
inc
mov
in
daa
int3
adc
insb
sbb
mov
sbb
jo
pop
nop
dec
lea
dec
xor
sub
pop
ret
add
dec
in
xchg
stc
mov
cli
and
sub
int
push
dec
ds
mov
test
push
outsl
jle
je
add
fcomi
inc
stos
cmpsb
pusha
pop
jbe
sub
sub
pop
lds
xchg
adc
scas
ja
movsl
adc
xor
or
pop
mov
loopne
xor
in
push
sub
jp
ret
push
push
pop
fxch
dec
cmc
cmp
ja
jo
pop
mov
lret
push
jb
daa
and
les
popf
pusha
lret
jmp
subb
shrb
roll
sbb
std
add
mov
lret
repz
pop
or
popf
jbe
mov
xchg
sbb
dec
in
jp
pop
fisubrl
ficoms
jmp
js
pop
cmp
jnp
lock
int3
adc
ret
inc
enter
jge
lahf
iret
lods
cli
in
pop
and
cmp
sahf
out
xor
adc
movsb
pop
jecxz
xor
aam
sub
lea
roll
insl
icebp
iret
inc
pop
andl
and
xchg
cwtl
mov
icebp
push
xchg
insb
repnz
pop
ljmp
push
lret
push
clc
cmpsl
pop
jbe
push
rolb
stos
jo
popf
xchg
lret
pop
out
repz
das
lahf
sbb
jge
mov
sbb
ficomps
sahf
lret
mov
stc
xchg
scas
mov
xor
in
and
mov
dec
or
push
into
or
jnp
mov
push
test
cmp
add
aad
inc
sub
sbb
jae
addr16
pop
int
iret
push
push
dec
mov
and
jnp
inc
dec
mov
jecxz
xor
arpl
pop
jge
pop
pop
mov
fstps
pop
bound
add
cmp
pop
test
pop
xor
xchg
mov
pop
int
aaa
pop
ss
cmp
test
mov
aas
in
push
pop
inc
inc
sbb
pop
dec
and
insl
mov
adc
pop
pop
fcmovnb
stos
mov
or
sti
mov
outsb
cmc
in
push
sub
out
dec
mov
inc
and
push
pop
sub
pop
loope
ljmp
adc
jae
das
adc
inc
inc
mov
ret
adc
pop
dec
sti
xchg
cltd
inc
add
sub
mov
xor
cld
fucomi
push
pop
lahf
lcall
rcrb
inc
es
inc
add
pop
dec
xchg
lret
mov
out
sbb
dec
js
jecxz
cmp
leave
inc
cmp
add
gs
out
mov
movsb
divb
jbe
mov
pop
and
mov
out
adc
push
pop
loope
test
stc
fbld
fistps
push
inc
adcl
int
mov
mov
xor
pop
clc
stos
cmp
xchg
adc
jge
xchg
ljmp
pop
dec
int
cmpsb
cmc
out
jbe
lods
xor
adc
inc
pop
out
mov
lahf
iret
repnz
pop
mov
adc
xchg
push
fdivrs
xor
or
add
or
adc
mov
jbe
pop
add
pop
adc
ficomps
in
mov
add
jb
je
mov
scas
dec
sbb
mov
sbb
mov
fimull
add
dec
mov
scas
lret
push
leave
out
clc
jge
movsl
fstpt
jecxz
pop
pop
pop
ja
lret
xchg
pop
adc
add
push
int3
pop
sbb
pop
lea
sbb
pop
sub
jb
stos
mov
ror
dec
lcall
imul
and
fs
rcrl
inc
or
cmp
xchg
dec
mov
dec
xor
int
loope
shl
adc
pop
xor
cs
iret
pop
jno,pt
int
frstor
sub
mov
lods
std
insl
cmp
mov
jp
aad
jae
scas
sti
mov
pop
xor
ret
int
and
daa
hlt
and
pop
push
sbb
jbe
dec
mov
mov
bound
fldcw
sti
xlat
ljmp
and
cmp
call
cmpsb
cmp
sub
sub
and
lea
mov
leave
insl
push
pop
push
pop
inc
std
jo
push
fimull
adc
inc
movsl
mov
pop
imul
iret
dec
mov
imul
xchg
pop
sub
es
jo
and
mov
xor
jne
fldcw
mov
sub
push
fstpt
negb
mov
test
jns
aaa
int
lods
or
imul
push
std
mov
leave
adc
das
add
pop
jo
outsl
xlat
sbb
add
ja
mov
pop
daa
mov
ret
or
or
int
mov
jge
lods
sbb
xchg
sbb
pop
pop
outsl
or
movsb
xor
test
adc
rcl
sti
scas
lahf
imul
arpl
enter
fidivrl
push
fstpl
mov
push
or
mov
pop
jmp
pop
in
pop
pop
lcall
xchg
push
sbb
xchg
out
dec
outsb
int3
adc
sub
xchg
daa
pop
sbb
adc
stos
pop
and
sbb
mov
push
add
pop
out
jb
jns
sbb
mov
dec
int
ss
pop
mov
xchg
jno
stc
ret
js
sbb
lods
jecxz
pop
adc
mov
mov
mov
pop
outsl
out
ljmp
pop
lods
mov
test
movsb
pop
in
jb
or
add
int
divl
xchg
or
xor
cmp
addr16
stos
jns
xorb
mov
pop
mov
cmp
sti
mov
jnp
fdivl
scas
ret
push
push
xchg
push
push
dec
mov
mov
nop
jge
ja
loope
aas
mov
xchg
dec
movsb
imul
mov
arpl
jp
push
pop
xchg
enter
jnp
lds
pop
lcall
mov
cmp
or
das
cltd
je
rcl
in
icebp
enter
mov
and
punpcklwd
out
sub
jg
pop
xchg
es
pop
add
fisttps
int3
inc
pop
imul
pop
stos
push
mov
scas
subl
shlb
add
cltd
inc
adc
inc
mov
or
insl
sbb
pop
shrb
sti
pushf
pop
cmp
stos
pop
fwait
je
pop
pop
and
mov
lds
loope
cmp
fcoms
or
rcrb
jmp
sub
mov
pop
jb
sbb
xor
scas
mov
dec
aas
hlt
cmpsl
mov
xchg
pop
or
inc
cwtl
sub
ds
into
mov
push
shrl
insl
addr16
jns
pop
add
or
or
jbe
ljmp
mov
jb
sbb
push
push
cmp
outsb
das
pop
jmp
push
clc
or
push
scas
sbb
sbb
cs
dec
movsb
push
pop
dec
mov
cli
xlat
pop
xor
pop
in
mov
jmp
popf
mov
jb
js
cld
dec
pop
int
hlt
mov
cmp
jns
sub
loope
into
in
mov
xor
xchg
inc
lahf
push
xlat
cmc
jbe
and
jecxz
lret
cmp
out
shll
jl
mov
xor
xchg
fucomip
mulb
pop
push
int
stos
push
subb
sahf
dec
pop
popf
cltd
mov
xchg
imul
mov
pop
sbb
push
cli
pop
xchg
std
jb
data16
mov
mov
in
mov
jns
inc
iret
xchg
pop
lret
adc
cli
pop
dec
jle
push
cmpsb
adc
les
or
xchg
mov
test
jecxz
std
jmp
pop
test
inc
notb
cs
pop
fmull
cmpb
ss
push
mov
repz
iret
jb
outsl
pop
dec
xor
jbe
insb
adc
jno
js
push
cmp
cmpsb
dec
lods
dec
aaa
pop
lods
in
push
loop
adc
std
xor
sbb
jno
insl
push
jle
cltd
push
pop
addr16
adc
cmp
sbb
pop
mov
and
cltd
jmp
push
adc
dec
pop
int
stos
sbb
push
push
pop
outsl
xchg
or
inc
jle
mov
outsl
repnz
xchg
adc
call
push
mov
cmpsl
pop
fdivrl
add
addr16
pop
fdiv
in
cwtl
insl
mov
dec
pop
and
mov
pop
icebp
add
mov
push
dec
jbe
xchg
jnp
pop
pop
fstp
mov
je
in
fists
lcall
cmp
rcrb
add
mov
test
lods
test
pop
scas
sbb
lret
jb
mov
lea
pop
cmc
xorl
ret
imul
adc
insb
ds
jb
stc
loopne
xchg
pop
cmp
jns
ss
mov
dec
jmp
sbb
pop
sbb
ljmp
sbb
mov
pop
xor
lret
fmul
pop
scas
stos
xchg
cli
pop
jno
lahf
test
pop
pop
push
inc
dec
dec
stos
into
and
jne
pop
popa
popf
cmp
dec
sbb
pop
cmpsb
xor
ret
add
test
sbb
sub
insl
pop
and
cmp
dec
inc
out
pop
or
js
int3
jns
lods
pop
loope
scas
sbb
negl
hlt
pop
jle
rcl
push
cli
jb
pop
or
int
push
movsb
jge
in
mov
pop
xchg
push
test
jmp
jb
jnp
insb
test
sti
mov
inc
push
cmp
sub
fidivrl
adc
pop
dec
stc
xor
mov
dec
xlat
test
or
pop
mov
fstpt
pop
sbb
movsl
dec
mov
mov
outsl
pop
loop
mov
or
jns
icebp
ret
cltd
mov
inc
rol
pop
sbb
and
mov
cmc
jo
mov
xchg
xor
and
scas
lahf
fcomps
or
movsl
pushf
leave
in
mov
les
cmp
xor
je
fs
adc
pushf
mov
jnp
sub
in
ret
lret
xor
dec
pop
sbb
sahf
inc
push
test
jo
sbb
mov
push
repnz
pop
sub
es
pop
loope
aaa
sbb
xchg
push
ds
inc
jg
pop
jo
js
sub
mov
in
mov
pop
sbb
lahf
imul
fimull
aaa
jp
lea
adc
xchg
bound
cmp
sbb
sub
jmp
ss
cmc
fcompl
fistpl
lret
xlat
sub
add
xorb
push
cltd
mov
sbb
mov
lea
int
sub
sub
jo
pop
jmp
add
and
pop
sub
inc
icebp
lret
mov
dec
int3
fadds
inc
addr16
pop
sbb
mov
sarb
sbb
pop
sbbb
or
aas
sbb
insl
jnp
mov
fsts
pop
scas
jbe
outsb
js
aas
popa
sbb
imul
or
jns
push
leave
pop
push
xor
add
pop
imul
push
push
arpl
test
sbb
int
jecxz
rorl
ret
jmp
aas
scas
std
jecxz
das
mov
ljmp
or
in
loop
pop
and
mov
jns
dec
mov
push
or
inc
pop
faddl
fwait
pop
movsb
jbe
outsb
jle
shrl
int3
test
mov
xchg
lahf
mov
arpl
push
push
enter
jecxz
pop
push
cmp
dec
hlt
out
pop
cmp
test
loope
fwait
push
inc
pop
test
jge
add
mov
sub
pop
inc
bound
loop
ljmp
ret
jecxz
lods
mov
imul
inc
test
pop
push
mov
pop
fcomps
inc
ljmp
int
inc
scas
mov
sub
faddl
lret
pop
pop
enter
ficompl
inc
sbb
loope
jbe
pop
data16
push
enter
fiaddl
sub
xor
rclb
sbbb
or
jns
aam
repnz
xchg
jge
int
push
nopl
and
aaa
adc
and
jns
pop
xor
pop
jbe
into
xchg
jb
pop
mov
dec
push
test
and
mov
add
test
inc
mov
fyl2x
mov
xchg
je
ss
dec
outsb
dec
pop
test
fldcw
pop
outsl
jbe
pop
inc
sbb
mov
fstpl
or
jp
pop
mov
movsl
dec
xlat
lahf
bswap
stos
mov
mov
push
jo
std
or
or
mov
repz
roll
mov
int3
pop
xor
ja
ds
cmp
add
pop
adc
clc
int
dec
nop
cltd
out
stc
popf
and
mov
call
pop
aaa
imull
nop
addr16
pop
xor
and
daa
jbe
dec
pushf
gs
pop
mov
mov
pop
push
int
mov
dec
and
repz
cmpsb
pop
pop
pop
xor
mov
fdivrs
incl
lods
or
fisubs
sbb
adc
daa
mov
fdivrs
mov
scas
pop
mov
fstpt
mov
pop
lock
mov
mov
mov
sbb
dec
loop
pop
pushl
pop
lahf
sbb
in
mov
jecxz
cmpsl
jmp
inc
in
and
aad
out
loopne
dec
dec
fcompl
mov
and
test
cli
and
test
leave
pop
xchg
xchg
shr
lods
pop
int3
push
jmp
add
pop
mov
sbb
pop
xchg
push
ds
std
ss
push
and
in
mov
pop
cli
add
mov
in
stos
sbb
lods
mov
test
jb
mov
outsl
inc
cli
pop
dec
mov
add
fldt
fidivrl
dec
cwtl
mov
fisubl
jle
js
xlat
dec
data16
pop
jb
inc
mov
pop
rcll
ja
add
xor
sub
sub
jecxz
loop
rorl
insb
pop
cmp
js
cwtl
pop
adcl
sti
pop
jb
add
add
int
loope
es
ja
pop
jmp
pop
fldenv
ret
shl
push
mov
add
add
xor
push
push
leave
mov
pop
jns
outsl
xor
jbe
sbbl
enter
adc
pop
cmpb
adc
out
lahf
aaa
int
ds
adc
cmp
mov
lods
cltd
and
repnz
out
xor
pop
jnp
sti
dec
mov
loopne
dec
into
movsl
int3
and
pop
sub
pop
adc
das
les
int
lcall
mov
cmp
mov
or
fwait
mov
jmp
jmp
push
mov
shl
dec
xor
pop
aaa
mov
daa
xchg
fistpl
jecxz
mov
pop
push
lods
shll
pop
insb
cwtl
inc
jb
out
testb
push
cmp
pop
scas
in
hlt
inc
xchg
xor
loope
bound
int
loop
scas
cmp
outsb
cwtl
cs
loope
push
push
dec
aas
enter
adc
orl
cld
fcom
iret
pop
pop
sbbb
xor
cmp
shll
dec
pop
mov
ret
sbb
dec
clc
push
jb
mov
adc
int3
add
stos
pop
mov
insb
loop
and
pop
dec
pop
ss
jbe
mov
mov
pop
sub
pop
mov
adc
aaa
cmp
mov
cmpsb
pop
jno
pop
jge
pop
popf
jbe
mov
hlt
mov
test
enter
sub
mov
inc
inc
dec
push
mov
mov
aaa
pop
pop
psadbw
xchg
pop
pop
jns
in
lahf
push
repnz
fisttpl
loopne
pop
movsb
sub
outsb
jb
xor
rcrb
or
test
sub
nop
lds
mov
add
ljmp
pop
paddusw
rclb
pop
adc
mov
or
pop
popa
cwtl
dec
imul
pop
scas
cld
lds
mov
cmp
fwait
mov
mov
cld
jecxz
push
sbb
das
ljmp
addr16
jne
xor
pop
shrl
fcoml
mov
or
dec
fstps
xorb
aam
cmp
adc
rcrl
outsl
popa
adc
jne
jbe
pop
loop
xor
cmp
or
leave
mov
xchg
pop
inc
gs
or
pop
cmp
daa
pop
and
jb,pt
xchg
jle
pop
cmp
sbb
xor
xchg
fdivrl
pop
pop
cld
int
rorl
movsb
in
mov
mov
mov
or
ret
shrl
pop
mov
stos
or
lods
lahf
ljmp
jge
loopne
mov
or
mov
fcoms
inc
mov
ds
sub
stos
adc
inc
jmp
sbb
pop
cmp
in
jg
popf
ds
inc
jge
mov
cmc
pusha
out
cs
sub
adc
rcrb
mov
push
sbb
mov
ret
fdivl
out
sbb
pop
pop
test
sbb
ficoms
les
sbb
xchg
aaa
shrb
pop
pop
cmp
and
push
sub
mov
enter
xchg
xor
dec
scas
adc
stos
mov
es
je
pop
sub
jecxz
sub
pop
add
pop
scas
mov
dec
and
pop
push
xchg
int
scas
cli
test
adcb
pop
push
or
jo
xor
push
std
fidivl
mov
jecxz
rol
fisttps
cmp
into
jo
pop
push
test
pop
or
sub
dec
dec
mov
vpshaq
cmp
mov
sbbl
mul
pop
mov
pop
rcrb
pop
mov
loope
push
pop
cmp
out
or
mov
decl
or
pop
jne
jp
pop
mov
jle
jbe
push
popf
pop
scas
test
cld
pop
fmul
dec
push
aaa
push
sub
add
hlt
pop
xor
pop
lret
and
push
in
icebp
dec
enter
sbb
lock
popf
lea
pop
int
neg
idiv
cmp
push
repnz
stos
or
andl
js
cmpsb
or
inc
push
test
in
es
stos
sbb
lds
cwtl
push
cmp
pop
jp
jl
adc
and
ret
add
mov
test
pop
jae
mov
xchg
mov
inc
pop
cmp
popf
je
mov
test
fistpl
xor
push
jbe
push
fsubrl
lds
mov
dec
inc
mov
faddl
aam
and
stc
push
inc
lea
mov
and
insb
jmp
sub
push
sub
pop
jle
mov
sbb
out
mov
fcomps
mov
jae
cmp
xchg
pop
push
and
loopne
lods
pop
sbbl
sub
xor
pop
jge
xchg
mov
push
rorb
sub
rolb
mov
mov
pop
adc
mov
sbb
es
sub
lahf
mov
lock
data16
jecxz
mov
fldenv
push
rcrl
fisubl
mov
dec
incl
dec
mov
shlb
or
fstp
pop
cmc
enter
orb
add
loopne
sahf
jnp
or
lret
mov
cmovno
jb
xor
pop
mov
int
sub
or
mov
mov
pop
out
repnz
jns
adc
pop
ss
xor
pop
or
je
ror
push
mov
or
jge
and
mov
lret
clc
popf
enter
mov
or
cli
scas
pop
pop
xchg
aas
mov
xchg
pop
mov
pop
incb
or
mov
push
lods
sbbl
ret
leave
push
lds
xchg
pop
push
mov
hlt
lods
xor
push
sahf
cmpsb
insl
mov
rolb
in
pop
mov
int
or
jmp
jp
sbb
lds
pop
cmp
dec
int
hlt
jno
mov
dec
xchg
or
scas
mov
mov
and
pop
es
fmuls
pop
cmp
pop
mov
shl
int3
pop
add
sub
aaa
mov
int
xor
shrl
fidivs
mov
inc
adc
std
xor
cmp
outsb
lds
out
inc
push
xor
rorl
pop
jl
aas
xchg
sbb
clc
lahf
lahf
adc
cmp
adc
icebp
push
push
adc
test
sbb
xchg
aaa
pop
in
add
nop
jbe
mov
mov
pop
push
cmp
mov
mov
les
scas
ficoml
ret
mov
xchg
je
add
cltd
incw
test
fistl
mov
mov
int3
mov
xchg
pop
rcll
dec
enter
pop
dec
lahf
iret
lret
sbb
add
jle
cmp
xchg
arpl
arpl
repz
push
xorl
lahf
stos
adc
pop
adc
dec
lret
jbe
ss
add
mov
je
and
fldenv
test
bound
mov
addr16
push
adc
outsl
jo
mov
test
in
sub
inc
aam
mov
enter
mov
cmp
iret
inc
xor
lcall
inc
aam
adc
pop
scas
mov
inc
add
fwait
enter
clc
push
je
fldt
addr16
cld
out
cltd
std
lahf
mov
popf
and
int
cmpsl
sub
pop
xlat
add
mov
xchg
dec
pop
popf
shrb
fadds
add
dec
or
pop
inc
test
pop
int3
int
ljmp
add
cltd
aaa
cmp
pop
or
ffree
cld
pop
imul
pop
test
push
cmp
iret
fbld
push
stos
add
scas
cmpsl
mov
sub
insl
pop
cmp
xor
cmpl
xor
mov
mov
pusha
pushl
aad
dec
repnz
std
into
mov
jb
xor
mov
loop
sbbl
sbb
pop
add
xchg
jae
rorb
mov
xchg
in
xor
data16
xorb
pop
movsl
xchg
jmp
notl
ret
shrb
or
in
mov
adc
ficompl
pop
data16
icebp
shrb
pop
xorl
lods
mov
mov
xor
push
fisubrl
aam
das
lret
pop
in
add
test
xchg
xlat
scas
jo
lock
mov
dec
mov
pop
inc
cltd
je
lds
lahf
sbb
cmp
jmp
mov
scas
xchg
mov
xchg
push
dec
sbb
pop
cmp
fbstp
or
cmc
clc
sub
loope
jg
pop
xor
pop
repz
inc
dec
in
mov
mov
cli
or
cmp
xor
cwtl
stos
int3
out
inc
lret
pop
icebp
orps
roll
or
cltd
sbb
xchg
jo
pop
popf
xchg
mov
pop
pop
mov
jg
std
or
adc
pop
scas
pop
pusha
orb
sti
cmp
jp
mov
push
sbb
das
cmpsl
lahf
add
movsb
fisttpl
pop
sti
jl
mov
std
pop
mov
pop
loopne
sahf
jge
shrb
jbe
mov
jne
ficompl
and
outsl
pop
inc
cltd
lock
sub
mov
lret
xchg
ret
pop
jne
sbb
pop
sbb
xlat
std
int3
sub
xor
cmp
cmp
inc
adc
or
scas
mov
adc
sub
sbb
xor
add
aad
pop
push
add
cmp
inc
pop
fs
test
add
mov
scas
push
xchg
xorb
jne
pop
popf
dec
mov
mov
pop
xchg
andb
pop
jb
lods
pop
testl
cmpsl
jo
or
int
pop
push
dec
test
jo
sbb
push
lods
inc
sbb
push
icebp
jnp,pt
xor
movl
stc
aas
shrb
sti
xor
mov
mov
rolb
rorl
mov
dec
cld
enter
adc
shlb
lock
pop
xor
jb
push
jbe
pop
mov
xchg
in
mov
pop
xchg
pop
xchg
inc
ds
pop
cltd
sub
aaa
cwtl
testl
jnp
cld
push
leave
or
pop
inc
rcrb
jns
orb
cwtl
jno
pop
push
fs
cli
shrb
dec
pop
mov
pop
push
or
lods
xchg
dec
adc
cs
mov
test
pop
jbe
fstpt
pop
mov
sbb
push
pop
test
in
cltd
bound
cmp
add
xor
dec
cmovns
pop
or
jbe
jae
cwtl
les
pop
leave
push
pop
test
lahf
stos
stos
outsb
aaa
fistl
pop
cmp
sbb
rcrb
repz
push
lcall
pusha
cmp
movsl
out
push
push
jg
pop
or
loopne
jle
data16
dec
jns
mov
mov
imul
mov
fdivs
mov
scas
mov
pop
jmp
adc
and
adc
outsb
xor
scas
or
lods
sbb
jnp
mov
imul
inc
or
lods
pushf
dec
cmp
jb
pop
cwtl
in
inc
xchg
sbb
jne
sbb
adc
out
sub
sub
int3
outsb
xchg
repz
mov
pop
add
ds
jbe
fistpll
or
fcoml
or
xor
dec
in
out
std
dec
pop
data16
xchg
es
cmp
sbb
cli
xchg
push
sbb
dec
lret
sub
xor
imul
jnp
inc
je
int
insl
inc
rcrl
shrb
mov
out
pop
fsubs
cmp
push
cmp
push
mov
jecxz
aaa
jg
jmp
mov
std
sub
mov
xchg
cmp
or
pop
pop
dec
hlt
dec
lock
pop
dec
jbe
jg
es
decl
mulb
cwtl
inc
pop
pop
xor
mov
int3
test
jp
pop
aas
jge
or
cmp
out
stos
adc
cs
ret
insb
in
jmp
add
jne
out
aad
xor
das
push
pushl
mov
inc
sbb
add
sbb
pop
cmpsl
sub
int
sbb
xor
fistl
in
repnz
subb
clc
sarb
mov
dec
jo
ja
push
faddl
jp
test
sti
mov
test
pop
aad
sbb
mov
mov
repnz
cmp
push
xchg
pop
mov
cmp
inc
loopne
pop
push
leave
sbb
int
lcall
test
pop
jnp
jle
xorl
mov
mov
add
rcrb
pop
add
mov
outsb
cwtl
mov
pop
test
pop
add
or
mov
jmp
daa
pop
lods
xor
fcmovnb
pop
testb
pop
jmp
mov
test
pop
sbb
nop
int
xor
pop
push
insl
cmp
inc
sarl
sub
negl
scas
xchg
jg
push
or
pop
inc
mov
adc
jecxz
aaa
loop
fistpl
pop
mov
and
xlat
iret
sbb
jl
pop
lods
imul
stos
add
fcoms
adc
pop
sbb
lret
push
pop
data16
pushf
pop
pusha
mov
mov
popf
dec
mov
in
jecxz
xchg
pop
pop
je
ljmp
mov
dec
jmpw
and
popa
pop
dec
dec
pop
stc
std
jnp
pop
lahf
lds
fs
bound
movsl
pop
mov
fimull
add
cld
imul
mov
mov
aas
xor
pusha
inc
jno
fnsave
mov
aam
lods
fists
icebp
inc
ja
mov
mov
push
sub
and
fisubs
and
add
sub
pop
mov
es
in
adc
xlat
mov
shlb
mov
jle
out
push
xor
jge
lahf
or
cmp
outsb
add
out
xchg
dec
mov
cmp
push
and
sbb
iret
popf
pop
xchg
and
inc
insb
jbe
hlt
mov
gs
icebp
pop
lretw
xchg
fwait
push
or
sbbl
clc
pop
sub
jns
pop
fdivrl
bndldx
lret
and
lahf
cmpsb
in
inc
xchg
fdivrs
scas
ljmp
das
jp
adcl
add
xchg
pushw
jecxz
pop
dec
sbb
xor
cwtl
xchg
in
std
pop
insl
stc
xchg
fmull
mov
cmpsl
xchg
mov
clc
pop
dec
dec
inc
insb
pop
fcoms
ljmp
pop
enter
dec
adc
push
xchg
or
movsl
or
xor
imul
leave
jmp
mov
xchg
test
pop
xorb
loopne
adc
pop
push
movsl
pop
pop
mov
jns
sbb
pop
pop
xor
xchg
insb
sub
mov
jns
pop
cltd
icebp
dec
xor
push
mov
pop
mov
loopne
in
xchg
xor
adc
fld
clc
pop
add
jp
adc
lret
pop
inc
pop
lret
push
dec
cli
out
adc
in
lcall
mov
andl
lds
jbe
push
int3
add
or
push
mov
fistpl
add
and
mov
mov
sti
push
call
xor
pushf
or
jnp
pop
xor
jmp
test
xor
dec
mov
or
pop
sbb
sub
mov
mov
xlat
aas
xchg
fwait
adc
int
xor
dec
jl
std
sub
cmp
pop
popa
sbb
sti
mov
jae
inc
in
pop
jbe
or
pop
mov
jb
pop
jecxz
mov
ja
mov
mov
sahf
add
or
int
cmpsb
xchg
leave
fcoms
sti
push
jns
adc
std
adc
push
or
or
in
sbb
fisubrs
sbb
sub
inc
cli
mov
shlb
jnp
and
lret
loop
movsb
push
xor
fistpll
dec
pop
pop
fisttpll
mov
push
sub
or
cwtl
ret
int
popa
movsb
pop
lods
repz
out
fidivl
pop
push
jae
mov
or
sub
mov
inc
jns
mov
and
cmpsl
sub
rorl
dec
xchg
in
cwtl
sbb
jle
jae
sbb
adc
nop
pop
pop
sub
scas
xchg
sahf
xchg
pop
fiadds
outsb
shlb
pop
flds
mov
sub
add
pop
pop
movsl
pop
mov
repnz
push
pop
fimull
gs
pop
cmp
adc
imul
pop
in
push
ds
fldl
jl
push
xchg
scas
pop
push
fsts
mov
adc
int3
insl
stos
pop
sbb
fisubl
scas
mov
cmpsl
repz
pop
inc
inc
repz
sbb
adc
xchg
pop
mov
insl
pushf
in
add
xchg
jl
int3
and
jle
pop
pop
scas
nop
les
mov
xchg
mov
int
jl
mov
aad
sbb
stos
cli
lds
movl
xor
int3
pop
bound
mov
mov
inc
stos
dec
and
xchg
pop
lcall
mov
or
mov
adc
xor
jno
int
outsl
jae
rclb
jl
insl
leave
mov
or
ret
into
movsb
sbb
pop
inc
jmp
add
lret
dec
pop
push
mov
fildl
mov
mov
ja
pop
mov
push
out
pusha
mov
pop
sbb
mov
mov
es
lods
lea
cmp
sbb
bound
movsl
das
xchg
inc
pop
xor
sub
pusha
filds
iret
test
and
xor
rcrb
fisttpll
push
fs
shrb
mov
mov
test
loope
cwtl
hlt
mov
xchg
mov
pop
cmp
pop
mov
sub
mov
test
sti
push
dec
scas
aas
add
or
pop
fwait
pushf
dec
lea
mov
jns
dec
pop
filds
xchg
add
in
aas
pop
imul
in
inc
pop
adc
stos
int3
jbe
xchg
leave
sti
inc
arpl
dec
loopne
sti
not
pop
and
lods
pop
and
xor
push
das
sbbb
pop
mov
mov
push
xor
lahf
pop
adc
cwtl
pop
cmp
xchg
xchg
pop
cmp
inc
popa
cmp
orb
mov
or
xor
call
les
stos
lock
mov
jo
pop
loop
pop
int3
je
stos
dec
popf
int
mov
shlb
xchg
out
repz
cmp
mov
fldt
lcall
js
cld
mov
mov
mov
gs
sbb
inc
cmp
mov
stc
adc
les
pop
int
cwtl
dec
inc
loopne
lods
push
and
lods
cli
inc
sbb
mov
stos
mov
sub
mov
cli
pop
fimull
cs
repz
or
mov
les
dec
inc
pop
in
fmul
or
xor
and
cmp
aad
xchg
xor
cmp
hlt
dec
pop
xor
pop
pushf
in
lea
or
imul
add
push
cmp
lret
pop
lret
mov
lea
mov
mov
int3
pop
subl
mov
add
sbb
or
lahf
and
frstpm(287
pop
xchg
pop
outsl
in
addr16
out
pop
sbb
sbb
sub
scas
shl
push
adc
lret
cltd
int
add
jl
xor
push
or
sub
movsb
stc
xchg
jmp
rcrl
sub
sbb
add
cmp
icebp
int3
sub
push
inc
cmpsl
add
jle
int
ljmp
popf
dec
pop
int
js
mov
aas
sub
pop
ss
mov
or
popa
fs
dec
int3
mov
pop
sbb
fidivrl
frstor
xor
sbb
addr16
clc
test
mov
sub
ret
sub
mov
pushf
xchg
sub
push
adc
push
sub
out
mov
stos
mov
out
pop
mov
bound
pop
mov
or
xchg
inc
lock
insw
pop
jbe
xor
push
jecxz
cli
cld
pop
dec
mov
shlb
daa
lock
pop
out
mov
xchg
pop
cmp
addr16
pushf
bound
jl
int3
push
cmp
xchg
sub
jmp
enter
out
inc
mov
adc
lea
pusha
sub
clc
pop
push
add
scas
cmp
das
shlb
xorl
mov
push
jns
daa
lahf
sub
cmp
fistpl
xlat
jnp,pn
repz
fldl
mov
mov
sbb
pop
sti
push
or
mov
repnz
push
pop
dec
adc
pop
inc
mov
adc
sbb
inc
pop
int
cltd
push
push
push
test
sub
mov
xchg
repz
mov
pop
mull
or
pop
into
cmp
arpl
int3
cmp
cmp
dec
ljmp
lock
xor
or
aad
jp
jbe
pop
outsb
sub
lods
mov
inc
pop
shlb
cmc
pop
push
mov
int3
movsl
xchg
dec
adc
addr16
clc
ficomps
mov
jno
das
inc
cmc
pop
sub
or
sub
incl
arpl
cltd
sub
and
jns
jp
std
xchg
aam
pop
dec
icebp
xor
mov
pop
nop
cmc
repz
push
xor
jb
insb
cs
pop
inc
cmpsb
xchg
add
pop
int3
xor
fdivp
pop
int
aaa
dec
mov
mov
mov
dec
jae
push
dec
xlat
xor
mov
adc
int3
and
jae
mov
xor
pop
mov
push
leave
bound
or
shlb
xchg
and
pop
xor
int3
pop
out
rcrb
stc
pop
push
mov
add
mov
ficompl
mov
iret
sbb
mov
fwait
pop
mov
int
sub
call
lods
pop
bound
pop
mov
cmp
jae
test
mov
and
pop
xchg
and
ret
adc
inc
mov
sub
fiaddl
pop
aam
push
xor
or
repnz
jmp
subl
jecxz
cli
out
mov
js
and
stos
xchg
push
cmp
prefetch
arpl
daa
ficompl
cmpsl
mov
imull
mov
mov
jecxz
pop
xor
jbe
mov
repz
ds
pop
or
sbb
adc
mov
sbb
mov
mov
pop
push
jbe
push
push
jg
add
pop
mov
mov
jb
fidivs
in
adc
push
cmpsl
mov
scas
rcr
adc
pushf
repnz
aam
mov
mov
stos
fsubrs
xor
pop
je
rol
pop
jbe
cli
out
xchg
pop
mov
and
sbb
cmp
jae
xchg
lods
cwtl
jbe
pop
adc
hlt
orl
or
push
pop
std
test
mov
in
pop
mov
mov
call
cmc
cmpsl
or
mov
sub
popf
jp
in
fsubrl
pop
fisttps
push
pop
push
push
int
stos
push
or
mov
inc
xchg
mov
fcom
cmpsl
and
ljmp
test
add
xor
pop
pop
loopne
jecxz
add
mov
repnz
or
js
nop
jmp
shlb
sbb
add
mov
cmc
lods
push
scas
sub
int3
push
out
jge
pop
sbb
adc
jp
inc
pop
cmp
push
lret
pop
int3
mov
mov
in
sbb
pop
fimull
or
and
xchg
jo
xchg
cmp
outsl
xor
jo
xor
jge
into
adc
jbe
ds
pop
out
loope
fnsave
int
adc
aas
enter
and
mov
sbb
in
inc
mov
pop
xchg
and
dec
dec
les
and
mov
push
in
pop
lock
dec
clc
pop
into
stos
pop
lea
bswap
mov
or
dec
in
pop
bound
sti
cmpsb
cmp
popa
add
rcl
inc
mov
adc
add
cwtl
sub
sbb
pop
mov
out
pusha
pop
movsl
xchg
mov
js
or
xor
sub
stos
pop
clc
arpl
xorb
cmpsb
adc
ss
insl
loopne
jno
fldz
pop
jb
xor
sti
dec
and
sub
jbe
push
and
push
pop
imull
ret
pop
inc
xor
sub
dec
outsl
dec
pop
out
jbe
scas
mov
cmp
adc
sub
pop
adc
adc
mov
or
dec
pop
inc
rclb
jecxz
cmp
jne
popa
fsubl
gs
pop
jg
lds
in
leave
push
ss
icebp
jmp
sti
lret
fwait
into
pusha
jmp
test
adc
fidivrs
inc
xchg
arpl
pop
push
fwait
jnp
movsb
add
sbb
xchg
sbb
jbe
xchg
jb
mov
fdivl
jo
pop
fisubs
movsl
push
movl
mov
adc
fnsave
or
addr16
sub
cmp
cltd
out
add
pop
pop
outsb
test
nop
pushf
sbb
pop
loop
stos
daa
mov
cmc
in
dec
mov
push
adc
fcmovne
mov
daa
pop
jecxz
enter
cld
adc
sbb
mov
jo
pop
aam
fisubrl
mov
lods
decb
test
lea
int
mov
and
shrb
xchg
jmp
out
adcl
sub
aam
jns
mov
test
mov
xchg
idiv
sbbb
insl
jp
jb
stc
push
cmp
pop
jnp
and
pop
arpl
pop
out
cli
clc
int
nop
mov
mov
dec
adc
loop
sbb
inc
out
push
nop
sarb
lret
pop
and
push
inc
ds
aad
sbb
push
js
cmpl
scas
cmp
mov
dec
xchg
add
sub
cs
sbb
pop
mov
dec
inc
sbb
loope
clc
pop
xor
call
mov
pop
repnz
mov
aas
dec
int3
enter
jmp
jecxz
pop
lret
inc
add
push
pop
inc
mov
inc
cmpsb
sahf
ficomps
bswap
xchg
inc
push
cltd
jb
out
pop
aas
ret
mov
pop
sti
sbb
insl
enter
dec
jecxz
out
jnp
push
cld
clc
scas
sub
mov
pop
push
or
pop
mov
adc
fnstcw
and
sti
or
fstpl
dec
int3
callw
enter
inc
lods
jne
scas
pop
fbstp
mov
fnstenv
scas
ja
xor
xchg
mov
pop
sarl
adc
mov
lahf
or
int
dec
fcoms
in
dec
cltd
stos
jg
pop
or
adc
pop
xchg
outsl
enter
dec
cmp
subl
mov
push
incl
out
cltd
cmpsl
inc
sub
jbe
add
sbb
sbbl
mov
out
add
pop
std
iret
lret
adc
cs
scas
imul
ret
pop
push
jmp
mov
push
aaa
mov
pop
xchg
pop
and
pop
pusha
pop
push
lret
jns
pop
fmulp
mov
or
jl
not
push
popf
push
add
scas
inc
fcmovu
sub
pop
adc
test
shll
or
jae
fimull
pusha
in
pop
pop
mov
psrld
test
or
cmpsl
and
js
sbb
movsl
into
jb
lods
and
int
or
out
jl
pop
jbe
mov
cli
mov
insb
add
aaa
sbb
cmovl
or
mov
mov
cltd
mov
sbb
and
mulps
pop
inc
fcomps
pop
int
aad
mov
adc
xchg
pop
sbb
inc
mov
std
les
cs
int
scas
popa
and
add
jl
dec
sub
cmp
xchg
cmpsb
sub
outsl
in
jl
push
pop
jmp
push
sub
mov
lods
out
aad
lea
pop
cmpsb
pop
fnstcw
mov
out
lds
dec
fwait
sbbl
not
dec
mov
pop
mov
icebp
pop
xchg
in
sbb
pop
stc
mov
sub
push
pop
mov
sti
mov
pusha
lea
arpl
addb
std
xor
jnp
push
popa
sahf
pop
pop
stos
pop
mov
int3
cmp
xchg
dec
lock
mov
jl
popa
dec
sub
xor
sbb
mov
cli
dec
mov
push
jecxz
insl
push
pop
sbb
inc
sub
mov
push
sbb
mov
mov
add
sbb
adc
pop
clc
shrl
pop
xchg
int
aaa
testb
dec
push
fistps
ds
jle
dec
and
push
mov
in
mov
pop
add
cld
daa
in
jmp
cwtl
mov
stc
mov
inc
test
sbb
mov
jl
dec
inc
leave
dec
xchg
gs
xor
aas
movsl
scas
jbe
add
cmpsl
sbbl
mov
mov
rolb
rorb
and
add
and
sbb
mov
inc
add
pop
xor
je
pop
insl
push
xchg
cmp
int
mov
in
push
push
sti
and
sbb
fstpt
mov
jmp
or
mov
ds
fidivl
mov
add
lahf
jnp
imul
pop
sbb
clc
cmpb
data16
adc
pop
dec
pusha
test
sub
pop
outsl
mov
lods
xchg
mov
add
ret
and
cmp
clc
cltd
sub
pop
popa
push
mov
int3
mov
xchg
cmpb
mov
sub
pop
adc
push
roll
cmp
iret
mov
mov
xchg
bound
dec
sub
mov
out
in
movsb
cltd
in
sbb
sti
mov
pop
xchg
and
sbb
pop
push
sbbb
dec
dec
call
xchg
divl
addb
pop
and
std
pushf
sbb
mov
pop
xor
mov
or
cmp
push
scas
insb
and
mov
mov
jmp
fs
inc
xchg
pop
sub
adc
lods
push
jle
and
mov
mov
dec
xchg
pop
mov
popf
cltd
rorl
lahf
data16
das
pop
fistpl
in
cmp
or
xchg
pop
cmp
jns
jp
leave
pop
jb
fdivs
mov
inc
lds
popf
ret
clc
adc
out
sti
dec
cmpsb
pop
pop
cmp
xor
cmpsl
repz
fdivrs
pop
lret
mov
inc
push
popa
sub
pop
and
dec
std
inc
xchg
mov
pop
add
loop
jle
in
mov
and
fdiv
ds
in
int
pop
pop
push
sbb
lcall
pop
fbld
xor
cs
jbe
cwtl
das
jmp
idiv
dec
xchg
fdivrs
or
jns
sbb
cmp
ds
pop
adc
inc
mov
pop
int
jmp
stos
sahf
xor
push
sub
in
pop
test
and
xor
fsub
iret
int3
dec
rcr
pop
xchg
add
int
ja
pop
dec
mov
xchg
mov
nop
ss
sub
cmp
pop
loope
push
into
jecxz
dec
and
pop
or
xor
jo
ret
push
cli
sub
aaa
pop
lock
stc
dec
jmp
dec
lods
mov
pop
fs
in
mov
pop
mov
pop
outsb
pop
mov
mov
mov
sbb
shrb
add
push
imul
adc
out
aas
push
leave
sbbl
pop
pop
mov
divb
sbb
stos
je
push
pop
mov
cli
cmp
pop
cld
pushf
mov
fcmovnu
mov
jno
xchg
pop
flds
jmp
rcrl
jp
fiadds
sahf
mov
pop
mov
xchg
ds
enter
add
pop
lds
pop
sbb
mov
dec
ds
pop
outsb
std
xor
sarb
pop
dec
lahf
cmp
jnp
mov
push
movl
in
xor
popa
push
loop
jne
sub
mov
xchg
iret
fidivl
xor
outsl
pop
repz
sbbl
stos
movsl
jge
jns
and
dec
test
fisubl
enter
movsl
in
xchg
mov
push
test
mov
cmp
hlt
shr
sti
shlb
scas
xchg
cld
movsl
add
fidivrs
loop
xor
pop
dec
add
mov
mov
scas
insl
jmp
rorb
pop
cmp
cmp
enter
pop
push
sub
lods
repnz
fldt
hlt
sbb
sarl
mov
fwait
push
cmp
int
pop
or
mov
mov
cmp
pop
dec
xchg
daa
push
add
out
push
xor
imul
dec
jecxz
icebp
jb
dec
lret
inc
pop
ret
xchg
cld
mov
sbbl
ljmp
adc
mov
data16
jae
int3
in
ret
jo
pop
int
mov
adc
add
and
aad
inc
arpl
pop
xchg
jbe
inc
test
add
neg
fidivs
pop
push
ds
call
pop
add
xor
sbbl
out
shrd
push
js
std
cmp
and
in
mov
xor
pop
ret
lret
xchg
adc
rcrl
mov
sbb
push
lret
fcomps
popa
or
pop
cs
xchg
int
cmpb
xchg
xchg
sbb
test
inc
fwait
pop
push
cmp
jb
mov
jge
inc
push
or
jo
ds
mov
mov
pop
movsb
hlt
int
int3
mov
push
xor
mov
adc
pop
pop
popa
add
int3
ficomps
mov
sbb
mov
xorb
push
rcrb
cmp
pop
lret
pop
adc
lods
mov
pop
sbb
repz
pop
pop
mov
lahf
or
cld
cmpsl
pop
push
or
hlt
pop
outsl
aam
mov
pop
mov
mov
rol
push
mov
pop
orb
mov
or
out
pop
push
xor
mov
add
sahf
mov
mov
pop
xchg
arpl
jge
pop
xor
insb
sbb
pminub
mov
mov
xor
dec
ja
or
decl
push
sbb
pop
push
adc
fistpl
out
push
add
int
jb
dec
addb
xchg
push
movsl
cwtl
stc
adc
popa
mov
xor
addps
dec
sahf
sbb
jo
pop
sub
push
loop
test
cmp
cmp
je
pop
jnp
sub
scas
pop
or
sahf
mov
add
or
sub
aam
fisubrs
stos
inc
stc
loopne
push
mov
ljmp
mov
cld
xor
pop
scas
add
lcall
bound
xchg
pop
ret
lret
lret
pop
cmpb
repz
negl
sub
pop
pop
shlb
fs
fnstenv
inc
push
jb
inc
adc
mov
cmc
jo
add
test
xor
dec
mov
in
adc
mov
sbbl
pop
pop
xor
pop
mov
lcall
pop
loope
imul
pop
add
shll
arpl
pop
inc
mov
pusha
into
dec
or
test
sbb
jnp
xor
pop
incb
jo
test
lea
inc
mov
or
shrl
xchg
fcompl
cli
pop
cs
sbb
pop
data16
mov
cmp
pop
in
sbbb
ret
pop
stc
js
inc
xchg
sbb
jmp
cmpw
fimull
out
in
sub
divl
and
cltd
cli
mov
pop
aad
xor
repnz
cmp
jl
pop
push
jle
int3
icebp
outsb
jbe
aaa
subl
int
pop
or
mov
mov
repz
pop
aas
jge
sbb
mov
dec
js
pop
xchg
xchg
mov
pop
ret
fdivr
inc
xlat
sub
mov
sahf
dec
fwait
cmp
arpl
icebp
cmp
xchg
es
jno
dec
jecxz
jmp
sbb
loopne
mov
add
out
pop
inc
xchg
push
cmpsl
sub
lret
jnp
out
sti
roll
lds
scas
push
pop
mov
fwait
ja
or
pop
dec
inc
pushf
push
nop
jbe
inc
pop
aas
das
add
scas
jo
push
pop
or
call
ljmp
movsl
jmp
mov
ja
mov
dec
adc
scas
add
in
loop
insl
ficompl
pop
mov
enter
and
mov
pop
iret
sbb
mov
xchg
insl
mull
stc
or
jge,pt
cli
std
insb
pop
ret
hlt
push
test
xlat
loope
inc
mov
cmp
ret
push
pop
cmp
ret
pop
addr16
ficomps
mov
stos
pop
or
xchg
fwait
int
mov
mov
xchg
pop
mov
jecxz
int3
mov
scas
pop
pushf
int
dec
dec
pop
popf
cltd
pop
add
xor
pop
xchg
pop
pop
or
pop
ss
lea
pop
xchg
jb
movsl
inc
daa
sbb
pop
in
in
lret
sub
mov
jmp
add
icebp
dec
out
stos
pop
push
sbb
xchg
mov
sub
dec
pop
inc
rcr
mov
jo
pop
push
adc
push
pop
push
xchg
cmpsb
in
sbb
pop
ja
push
int
inc
adc
pop
fdivp
stos
sbb
pop
or
push
jo
xor
sti
scas
push
mov
outsl
add
pop
or
ret
jbe
pop
mov
mov
and
or
push
pop
jno
xchg
idivl
adc
sarb
pop
outsb
mov
inc
jns
mov
fcomi
ficoms
push
cltd
mov
cmp
rorl
dec
lcall
lret
pop
sbb
jp
cmp
add
outsl
ljmp
mov
push
pushf
mov
aas
add
pop
sub
pop
fmul
loope
ja
movsb
xchg
pop
dec
scas
sbb
out
and
pop
mov
divb
stos
cwtl
inc
in
dec
imul
mov
mov
pop
adc
adc
mov
jb
jne
imul
dec
add
lret
jne
mov
or
lea
pushw
insl
stc
mov
shr
jae
fcomps
or
or
arpl
lock
mov
int3
in
pop
jae
das
sbb
loopne
dec
test
adc
lock
clc
loope
in
mov
es
xchg
les
pop
pop
jno
cltd
mov
push
lret
pop
loope
imulb
cmp
stc
mov
aad
sbb
in
cmp
rclb
dec
jecxz
pop
int3
lcall
pop
test
bound
sbb
cld
or
sbbb
jl
xchg
into
sub
popa
mov
imul
int
and
movsb
add
shl
subb
icebp
push
jbe
cwtl
test
pop
aad
cltd
dec
pop
push
mov
int3
inc
outsb
pop
lcall
insl
gs
mov
jo
mov
fdivrp
inc
xchg
rcrl
test
in
lds
repnz
sti
lods
sub
pop
out
pop
int
test
addb
push
pop
into
fimuls
enter
sub
xor
ja
scas
inc
cmpsb
dec
mov
jnp
mov
and
sub
xchg
mov
push
xchg
stc
add
pop
adc
clc
icebp
imul
mov
std
int
push
rcrl
adc
outsl
or
nop
mov
mov
lahf
rcll
dec
enter
call
add
int
daa
in
mov
pop
mov
inc
lods
in
xchg
cwtl
push
int
lods
push
lahf
mov
mov
scas
icebp
and
stc
cld
or
jo
add
rorb
pop
sub
or
subl
pop
pop
stos
xor
jno
adc
pop
lret
xchg
out
dec
dec
pop
std
xor
lods
sbb
pop
cs
pop
pop
enter
sub
sub
sbb
idivl
out
sub
sub
test
outsb
cmp
sub
imul
pop
imull
in
mov
pop
pop
xor
push
or
pop
aad
adc
aaa
in
pop
or
xchg
mov
push
push
pop
xor
punpckldq
insb
add
mov
sub
pop
mov
mov
test
sbb
lret
jp
xor
xorb
pop
push
loope
sbb
clc
or
jb
push
inc
les
xchg
fistps
fidivrl
xor
aas
mov
lock
mov
idivl
mov
push
mov
push
jae
jp
inc
dec
xor
cld
pop
or
jbe
pop
mov
test
pop
sub
xor
popf
push
mov
push
xor
js
aad
sub
ljmp
push
jno
in
lods
pop
xor
ror
mov
jns
adc
mov
pop
enter
inc
stos
movsb
sbb
xchg
sbbl
clc
loopne
push
movsl
mov
fs
ja
int3
or
aam
and
sub
dec
lret
jbe
into
outsb
mov
jbe
pop
ljmp
xor
and
test
mov
sarb
imul
xchg
pop
jo
clc
xor
dec
pop
inc
pop
push
mov
in
jge
pop
jne
and
je
and
shr
pop
cmpsb
out
int
gs
mulb
add
inc
int3
imul
dec
mov
aaa
popf
add
out
pop
insl
xlat
pop
push
jbe
mov
call
jne
pop
int
ret
cmp
xchg
jg
pop
stc
xlat
fcmove
sbb
out
pop
adc
pop
fistpll
sar
push
mov
sbb
and
pop
push
insl
aas
sarl
fidivrs
stos
or
lock
cwtl
mov
out
cmpsl
dec
repnz
push
xor
pop
ret
int
add
loop
sbb
mov
jp
jbe
cltd
jle
or
and
pop
mov
fcmove
push
test
std
or
stos
xor
outsb
sti
pop
inc
test
jns
xor
mov
pop
or
hlt
shll
push
mov
mov
decb
or
scas
fnstcw
pop
add
jno
xchg
leave
sar
mov
jmp
cwtl
mov
stos
mov
in
mov
pop
inc
out
popa
push
daa
mov
ret
pop
or
inc
lret
enter
dec
xchg
inc
pop
cmp
pop
jl
or
xor
push
xchg
in
inc
int
mov
daa
movsl
sahf
dec
sbb
pop
loope
popa
jge
test
pop
shll
jl
xchg
fsub
fwait
cmp
insb
inc
pop
inc
inc
jo
ds
fcomi
popl
scas
pop
adc
inc
jo
leave
xor
es
orl
jb
dec
pusha
xlat
insl
out
dec
cmpsl
jp
data16
scas
cwtl
lea
sbb
mov
test
pop
addb
mov
jbe
das
pop
negl
and
or
pop
sub
mov
mov
jo
cld
int3
pop
fcompp
jl
fdivr
mov
dec
movsb
sbbb
jno
jae
mov
repz
xchg
adc
arpl
rol
jmp
scas
push
cltd
pop
ror
xor
mov
adc
enter
ljmp
adc
mov
pop
xchg
out
lret
dec
lret
lock
loope
pop
insl
cmp
jb
pop
les
inc
call
sbb
int3
scas
cmpxchg
popa
add
in
aaa
xchg
mov
jg
mov
pop
ja
int
ret
daa
cs
jle
movsl
pop
ror
push
cmp
test
out
mov
inc
add
xchg
pop
and
into
mov
in
data16
mov
mov
pop
aad
adc
rorb
xchg
mov
cltd
add
inc
or
call
sahf
jmp
xor
add
xor
popl
mov
pop
mov
jp
data16
pop
add
stc
dec
subl
inc
insl
push
cmp
lock
add
xlat
mov
xchg
jmp
adcl
popa
xor
out
sbb
sub
mov
aaa
lcall
int3
fsubrl
int
xor
mov
dec
or
pop
cmc
mov
cmp
jae
rcr
adcb
sub
popf
mov
push
dec
cltd
js
adc
scas
inc
jns
xor
mov
jmp
mov
test
pop
int
xchg
ret
fs
mov
mov
xchg
mov
sbbl
clc
int
and
mov
pop
sti
sbb
inc
divb
pop
jg
sub
mov
int3
lock
ss
or
add
pop
jae
pop
js
in
pop
and
or
lret
pop
xchg
cmp
push
cmp
scas
fisubl
jo
sub
or
pop
int
pop
add
mov
mov
movsb
ficoml
cmp
push
or
sti
jg
jne
pop
sbb
cmpsl
mov
mov
in
dec
repz
or
fstpt
pop
push
out
jbe
dec
pop
movsb
mov
dec
jo
push
add
mov
pop
and
out
xor
fstpl
popa
mov
jae
jl
int3
fwait
inc
stos
hlt
mov
pop
fwait
or
andb
xchg
loopne
cmpsb
cltd
sti
lds
or
add
daa
pop
cmc
sbb
jmp
clc
xchg
int
out
fdivrp
pushf
mov
pop
add
jb
mov
ja
mov
mov
movb
mov
dec
sbb
mov
pop
insl
push
xor
into
pop
push
ret
push
inc
jmp
mov
xor
add
mov
pop
fdivl
mov
push
adc
dec
mov
cmp
pop
push
bsf
cld
or
pop
inc
cmp
lock
ja
roll
sub
pop
push
inc
cli
int
pop
and
mov
pop
or
push
test
iret
add
fiaddl
sar
mov
xchg
push
or
mov
sub
lods
mov
ds
sbb
jbe
pop
pop
adc
enter
add
fldcw
xchg
rclb
mov
mov
loopne
pop
mov
xchg
in
sbb
push
pop
pop
gs
movsl
mov
fistps
repz
pushf
lahf
scas
ja
jmp
out
or
cld
adc
fs
pop
mov
repz
add
inc
mov
sub
jbe
pop
adc
xor
or
mov
jmp
out
push
movsl
ds
dec
sti
imul
loope
les
mov
dec
pop
or
inc
lock
test
fisttpll
dec
xchg
nop
sbb
push
lods
mov
test
mov
lock
int
mov
fs
jo
mov
pop
jnp
jns
mov
lods
ss
or
pop
lock
and
adc
mov
xchg
fadds
data16
mov
dec
bnd
outsb
pop
in
xor
jne
clc
cli
mov
inc
aas
leave
push
ja
mov
sbb
repnz
cld
jbe
pop
fstl
dec
lds
cmp
inc
push
push
sti
clc
sbb
enter
stos
sub
mov
add
pop
mov
cmp
add
insl
xchg
push
clc
jg
out
fisubrl
push
cwtl
or
vaddpd
xchg
stos
pop
jae
scas
icebp
or
lret
add
push
mov
int
mov
scas
je
pop
fdiv
daa
cwtl
gs
pop
mov
mov
pop
scas
mov
pop
ret
dec
es
push
pop
pushl
mov
mov
jno
cmp
mov
push
inc
sbb
sbb
out
ret
out
add
pop
adcb
in
daa
push
inc
pop
nop
imul
pop
xchg
mov
pop
test
lds
pop
pop
add
lret
popf
jg
outsb
jo
pushw
inc
pop
xor
pop
fs
push
pop
adc
scas
jns
pop
dec
pop
push
fdivrs
sbb
jle
cmp
and
jns
xor
in
stc
repnz
das
add
xor
pop
fstps
mov
dec
mov
loope
sbb
push
jns
imul
mov
popa
mov
xlat
cmp
adc
lea
test
xor
imul
pop
cltd
inc
stos
and
and
add
sbb
fidivl
pop
xchg
cmp
push
pop
xor
pushl
sub
pop
imul
mov
outsb
cltd
jp
mov
mov
into
mov
das
gs
jle
add
cltd
inc
sub
clc
iret
pop
in
push
push
or
pusha
sub
shll
xor
pop
mov
push
cmp
mov
pop
push
sbb
paddusb
call
leave
out
addr16
pop
pop
mov
dec
jmp
mov
pop
fsubrl
mov
jecxz
jge
pop
shl
hlt
out
pop
pop
sub
inc
pop
mov
inc
pop
pop
sub
in
pop
dec
int
push
fs
or
loope
mov
lcall
lods
or
lret
pop
inc
xchg
xor
addr16
loope
enter
add
ficoms
mov
cwtl
mov
faddl
jmp
nop
rorl
fsubrs
xchg
stos
cmp
test
pop
dec
mov
dec
mov
dec
outsb
repz
arpl
js
inc
pop
lret
xor
lahf
push
mov
shrb
xchg
fcmovnbe
in
hlt
push
push
mov
add
jns
cmp
pop
dec
ficomps
xlat
in
arpl
sbb
pop
mov
mov
or
ja
pop
or
ljmp
pop
add
adc
inc
pop
adc
data16
push
dec
pop
push
mov
scas
sbb
js
mov
inc
stos
sub
adc
and
sbb
mov
mov
fcomip
data16
push
push
push
inc
pop
mov
loop
pop
pop
pop
aam
rolb
jl
pop
lods
sub
xor
or
enter
fnstsw
add
sub
mov
stc
fmull
push
pop
pop
enter
and
xor
lahf
scas
stos
pop
xor
clc
and
mov
xchg
bound
dec
mov
pop
inc
push
repz
jo
inc
push
pop
and
inc
fstpt
and
test
les
ret
push
cmp
dec
xchg
or
pop
sahf
mov
adc
int3
enter
subb
nop
popf
lsl
movsl
xchg
xor
test
in
pusha
mov
nop
repz
add
inc
pop
add
fstpl
or
rcrl
pop
pop
ret
int
push
test
arpl
fistl
sbb
sbb
nop
xchg
sbb
jne
ret
scas
stos
dec
loopne
or
cmpsb
lock
pop
imul
mov
jle
dec
sub
lea
mov
pop
jne
sub
test
adc
js
sbbl
pop
ss
push
iret
mov
fimull
pop
or
sub
pop
or
popf
lcall
dec
scas
jo
xor
int
push
imul
cmpsl
lds
rep
pop
push
jbe
xor
mov
fisttpl
lahf
cmp
sbb
mov
cwtd
repnz
add
adc
fistl
jecxz
aas
pop
pop
sub
lea
in
je
pusha
push
push
or
pop
jl
or
pop
int
iret
mov
pop
out
aaa
testl
in
mov
js
repnz
push
or
mov
pop
rcll
in
je
stos
clc
lahf
sbb
xchg
loop
sbb
pop
jle
filds
dec
inc
pusha
pop
das
sub
ja
pop
insl
dec
mov
push
cs
adc
stc
out
gs
stos
in
mov
aas
lcall
es
pop
mov
mov
mov
xchg
sbbl
sub
cltd
cli
js
jne
imul
jb
sbb
sub
add
sbb
xchg
mov
push
xchg
aaa
inc
pop
gs
rolb
dec
sub
test
mov
dec
xor
es
mov
xor
pop
sbb
sbb
scas
mov
das
pop
or
jne
add
cwtl
adc
dec
int3
mov
sbb
loope
push
xchg
mov
sub
mov
jge
pop
adc
aas
jb
dec
insb
xchg
testb
adc
pop
std
inc
outsb
sbb
cs
xchg
jmp
cmpsb
jbe
jo
hlt
or
xchg
add
dec
xchg
ret
dec
pop
push
push
jb
pop
mov
aad
sbb
sub
int
add
outsl
cmp
insb
stc
pop
dec
shll
sbb
ljmp
sub
sbb
pop
loop
mov
push
mov
fildl
aam
sbb
pop
jo
adc
mov
es
inc
mov
pop
sbb
mov
pop
sbb
out
daa
and
jecxz
pop
jge
scas
add
jbe
sbb
xchg
ss
sub
pop
xchg
scas
clc
or
nop
mov
add
in
mov
loope
pop
jns
fdivrs
gs
xchg
sbb
addr16
mov
pop
and
js
pop
push
and
lods
subb
in
pop
aad
jbe
aas
xchg
aam
mov
aas
dec
repnz
and
jge
fidivs
fwait
pop
sbb
pop
aam
or
imul
imulb
jo
insb
pop
cltd
push
push
pop
ds
in
inc
and
and
mov
inc
mov
push
pop
roll
mov
inc
add
data16
jno
aaa
jmp
inc
push
pop
push
das
jge
ret
lahf
add
mov
iret
push
jecxz
icebp
mov
aaa
gs
pop
mov
test
add
and
in
popl
jne
or
jecxz
dec
rcrl
pushf
xchg
mov
pop
xor
jb
add
int3
jns
inc
scas
cmp
mov
stc
addr16
mov
mov
sub
cmp
xchg
jns
es
sbb
jmp
insb
and
stos
pop
xchg
test
int3
pop
mov
dec
add
loop
pop
gs
dec
mov
mov
fldt
pop
jo
arpl
repz
aam
adc
inc
rolb
mov
andb
xor
push
mov
pop
jle
fs
imul
pop
test
mov
mov
imulb
sub
xlat
pop
int
adc
lret
in
push
bound
aas
or
push
pop
cmp
mov
xchg
xchg
ljmp
xchg
add
imul
jb
fnstsw
cli
sub
pop
push
jg
mov
popf
sbb
inc
lret
push
pop
xchg
mov
jbe
test
cltd
xchg
pop
inc
pop
inc
shrb
push
stc
fcomps
jmp
aaa
or
cwtl
mov
pop
pop
lea
push
mov
repnz
dec
fnsave
push
or
mov
pop
jbe
add
mov
lea
fisttpl
xchg
inc
and
mov
xchg
xchg
scas
sbb
add
or
pusha
data16
fs
mov
outsl
fldt
mov
sbb
bound
mov
xchg
gs
xor
pusha
mov
insl
xchg
pop
int
mov
fs
aaa
in
jbe
fs
sub
adc
pop
sbbl
sub
xor
scas
dec
icebp
mov
lds
mov
xchg
inc
out
xchg
pop
sub
cmp
xchg
decl
or
push
mov
lods
iret
clc
pop
mov
jae
mov
test
sub
call
mov
mov
sub
pop
jb
jge
lods
jmp
xlat
adc
mov
pop
xorb
jnp
outsb
pop
sub
inc
cmp
pop
sbb
lea
and
jo
inc
adc
jecxz
mov
enter
mov
inc
lcall
sbbb
das
into
pop
inc
pop
enter
test
push
or
dec
mov
cmp
jle
cmp
sbb
test
int3
flds
int
pop
iret
mov
aad
pop
test
mov
and
nop
dec
push
stos
and
mov
inc
fstpl
lea
jbe
shr
fisubrl
pop
cmp
fwait
scas
pop
push
adc
arpl
mov
pop
repz
xchg
aaa
pop
jbe
add
pop
mov
dec
mov
int3
xor
outsl
and
je
pop
insl
ds
add
add
pop
pop
add
imul
aam
in
rcrb
in
push
inc
sbb
mov
and
xor
sbb
pusha
inc
and
or
imul
int
sbb
stos
mov
pop
or
mov
mov
dec
adc
les
pop
xchg
scas
mov
mov
fadds
pushf
xchg
out
sbb
dec
pop
push
das
xor
dec
out
jo
icebp
pop
hlt
test
inc
jne
pop
popf
mov
test
mov
sbb
mov
add
pop
push
cli
lcall
test
cmpsb
fadds
stc
sbb
sbb
add
pop
sub
mov
in
sub
sahf
pop
sbb
jbe
pop
adc
or
and
mov
fildll
push
xchg
mov
xchg
ja
xchg
bndldx
pop
nop
movsb
fidivrl
int3
into
add
mov
pop
mov
jnp
add
cmp
mov
aaa
pusha
lret
sub
sub
push
xchg
fisubrs
jmp
pop
xor
sbb
mov
js
lret
pop
pop
icebp
insl
scas
in
xor
rorb
xchg
adc
scas
jp
pop
jns
sbb
pop
in
push
pop
fisubs
push
int
in
xchg
ds
fsubrs
add
jg
call
pop
pop
aas
and
add
js
mov
xchg
pop
adc
shrb
jbe
mov
push
inc
or
ds
lret
iret
popa
mov
mov
lret
mov
or
xchg
push
dec
std
enter
and
mov
mov
xlat
lcall
int3
xor
xor
push
pop
into
cmp
xorb
pop
mov
dec
pop
inc
push
frndint
pusha
pop
push
dec
inc
psubusw
add
pop
and
pop
pop
sbb
inc
or
scas
push
and
cwtl
push
and
insl
out
push
outsb
mov
iret
lock
outsl
cmp
in
and
sub
or
in
pop
dec
int
stos
int3
adc
stos
jbe
rcll
mov
cmp
xchg
icebp
push
mov
fadds
repz
cmp
cli
jle
outsb
gs
aad
ror
popf
fsubr
adc
mov
insl
sbb
cwtl
mov
pop
shr
adc
lods
jle
int
test
jmp
cmpb
movsb
arpl
pop
mov
pop
shlb
loop
sbbl
out
mov
movsl
and
inc
pop
pop
pop
push
daa
loop
repz
mov
sub
lods
call
sbb
and
inc
push
sbb
mov
mov
mov
inc
lds
push
aad
lods
mov
pop
jl
dec
int3
sub
push
aas
pop
lods
cmpsb
daa
xor
je
aam
mov
fldt
pop
std
popf
int
mov
movb
mulb
stc
pop
cmpsl
push
daa
inc
cvtpi2ps
dec
arpl
dec
outsb
xor
sbb
mov
aaa
jmp
mov
sub
sbb
adc
rcr
pop
push
mov
sub
push
cld
lahf
pop
mov
out
push
pop
jbe
jns
out
lods
sbb
inc
popa
pop
jae
cpuid
aaa
inc
pop
mov
xchg
dec
cmc
mov
adc
lahf
leave
je
pop
pop
lahf
jno
jnp
xchg
dec
aam
pop
ret
in
push
lods
and
call
pop
outsl
inc
inc
loop
mov
pop
dec
xchg
or
push
jmp
enter
xchg
and
push
jge
pop
lcall
xlat
leave
xor
repz
push
jmp
sub
dec
pop
pand
or
jo
mov
sbbl
sar
int
into
cmpl
cmp
pop
push
cld
les
jb
adc
mov
je
cmc
test
mov
sbb
jns
scas
xlat
pop
xchg
add
mov
mov
fdivrs
pop
pop
insb
or
jecxz
sub
lret
cld
stc
jmp
cmp
loop
sbb
idiv
push
mov
push
mov
andl
adc
jle
sbb
int3
stos
pop
sbb
jns
mov
inc
cltd
jg
pop
jmp
aam
jns
mov
jnp
jle
pop
sub
decb
pop
dec
jns
test
pop
popf
shll
mov
pop
and
inc
mov
in
cmp
push
jns
mov
in
jbe
sub
in
and
mov
lds
ja
pushf
aas
inc
jns
mov
sbb
pop
aad
pop
inc
xchg
ds
cld
dec
mov
jb
sahf
dec
lahf
call
pop
pop
cltd
jno
das
loop
pop
sbbl
int
inc
ja
adcb
test
les
add
pusha
sub
inc
dec
pusha
push
pop
jecxz
and
int3
int
in
xchg
call
push
rcrb
inc
mov
push
pop
jge
push
in
sub
test
gs
cld
dec
xchg
push
nop
mov
dec
sti
sbb
mov
dec
xlat
jle
aad
dec
stc
push
pop
mov
xor
or
add
pop
jnp
cs
cmp
pop
or
mov
pop
dec
jo
movsl
fsubrl
lods
mov
add
xor
ss
pop
xor
inc
cmpsb
scas
pop
inc
xor
push
arpl
mov
sub
add
stos
or
sahf
pop
pop
ds
xchg
jp
stos
fisttpl
sbb
loop
popl
mov
jp
sbb
push
gs
mov
mov
lahf
jo
sahf
adc
add
mov
stos
or
pop
mov
fdivl
mov
mov
mov
pop
inc
add
enter
and
cmpsb
lds
les
out
inc
nop
hlt
sarb
mov
js
jmp
sub
add
fisttps
in
ljmp
or
pop
and
nop
idivl
popa
xchg
enter
pop
scas
jns
lcall
fistl
enter
xor
or
mov
scas
sub
mov
or
push
cltd
fistpl
sbb
or
pop
adc
pop
mov
mov
cmp
jmp
adc
fsubrs
push
sub
sbb
mov
mov
jmp
pop
mov
scas
jge
pop
sbb
frstor
into
insl
and
sub
lods
stc
sub
int
or
push
imul
sbb
clc
pop
mov
stc
jnp
mov
test
lcall
into
repz
mov
sub
xor
jae
lock
mov
inc
cltd
aaa
fbld
pop
cs
stos
jb
imul
dec
mov
aad
int
cli
fnstenv
icebp
sbb
add
aaa
push
leave
in
cmp
pop
enter
xor
jnp
mov
sub
aas
mov
push
sbb
out
and
pop
sbb
lret
std
pop
scas
sbb
pop
movsl
lods
add
mov
jo
cmpsb
adc
pop
or
lret
pop
xor
lds
xor
gs
outsb
adc
arpl
xor
push
imul
or
pop
je
jle
aam
adc
mov
ja
xchg
setp
pop
aas
or
enter
shl
lods
or
in
test
sbb
out
or
mov
cmp
pusha
mov
adc
fucomip
jl
fidivs
sub
sub
add
cld
divl
test
pop
pop
push
xor
jne
mov
pop
clc
rclb
adc
sub
flds
dec
pop
pushf
xor
pop
ds
fs
outsl
ss
push
add
addr16
add
sahf
lea
mov
ss
pop
out
js
mov
add
pop
or
jmp
push
inc
mov
push
mov
inc
fnstenv
stos
push
xchg
jo
pop
daa
inc
xchg
lods
cmp
fisubrs
jo
mov
sub
cmp
mov
pop
fbld
xchg
cmc
test
or
loop
lea
cmp
push
xor
sbb
cmpsb
push
mov
cmp
sub
cmp
jb
pop
cli
add
adc
and
pop
jp
xor
mov
mov
fsubs
mov
movl
lds
fstps
adc
lods
pop
jg
scas
int
sti
adc
mov
cli
out
sbb
jp
mov
pop
rclb
cmp
pop
xor
sbb
inc
pop
inc
out
cld
scas
push
cltd
sub
loope
jno
mov
pop
sub
lods
jne
pop
and
iret
jbe
pop
cmpl
repz
int
repz
in
push
jmp
repnz
cmp
push
ret
fs
xchg
subb
dec
xchg
cwtl
pop
sub
adc
or
in
pop
push
pop
mov
xor
lcall
mov
aas
pop
mov
xchg
pop
or
inc
mov
out
pop
fldenv
leave
jb
pushf
sub
push
pop
nop
addr16
jl
or
dec
lods
mov
push
or
jmp
loopne
inc
aaa
mov
cmp
add
pop
jg
outsb
sub
jbe
inc
pop
sti
and
clc
aad
js
cmp
pop
roll
xor
rcrl
fildl
xchg
pop
xchg
ret
out
mov
fdivs
and
frstor
sub
jg
lock
sbb
pop
mov
lahf
pop
outsb
sub
cli
pop
adcb
and
push
lods
sbb
adc
les
testb
sbb
pop
inc
pop
imul
sub
push
repz
add
sub
jle
pop
sbb
das
add
jns
xor
push
lahf
mov
cmp
clc
lret
mov
aas
sti
inc
push
adc
sbb
in
fsubs
cmp
stc
mov
pop
repz
mov
lahf
pop
adc
jns
stos
into
sbb
or
cld
insl
push
test
or
jecxz
int3
arpl
rcrb
cmp
cltd
mov
cld
push
mov
or
stos
sbb
jl
pop
dec
in
dec
inc
xchg
sbb
sub
mov
sti
int
push
adc
pop
call
or
jmp
adc
mov
pop
mov
xchg
fldt
inc
jmp
pop
scas
pop
sbb
sub
jbe
dec
add
aad
dec
int
pop
jmp
cmp
pop
jb
nopl
imul
scas
cld
sbb
std
and
inc
pop
sub
fcmovnbe
stos
rcll
pushf
mov
push
mov
arpl
push
pop
movsl
mov
inc
or
mov
std
pop
xchg
int
in
inc
out
ljmp
pop
dec
sbb
add
and
dec
sbb
lcall
adc
sub
mov
cli
mov
out
fisubrl
or
aas
mov
out
push
or
fdivl
mov
ja
jp
and
mov
adc
push
adc
cmp
pop
mov
int3
mov
or
jae
test
inc
pop
or
call
enter
xor
pop
and
insb
jecxz
hlt
das
data16
pusha
subb
std
mov
sub
pop
aas
xchg
pop
pop
pushf
and
aad
cmc
jnp
lds
daa
jb
add
lods
pop
sub
mov
mov
mov
fcom
rcr
pop
cmpsl
adc
lret
mov
jb
add
dec
jge
out
sbb
mov
insb
pop
add
pop
jbe
adc
xlat
into
out
int3
pop
mov
dec
mov
arpl
jecxz
push
xchg
jo
cmp
adc
cmp
lcall
fs
jge
and
mov
fsts
je
addl
inc
cmp
cmp
or
push
cwtl
clc
jb
pop
lcall
fstps
ror
in
mov
add
mov
adc
xchg
cmp
jmp
fisttps
aas
mov
ret
mov
movsl
test
mov
cmp
sbb
fs
mov
insb
xchg
data16
scas
and
test
adc
lds
shlb
and
sbb
lret
pop
popf
scas
mov
repnz
mov
mov
pop
sub
inc
rcrl
pop
filds
and
scas
pop
shlb
push
jbe
mov
sbb
int3
sub
popa
clc
int
pop
push
movd
push
mov
enter
addr16
xor
mov
lahf
jmp
mov
fmuls
cs
sub
mov
pop
xor
pop
jbe
repz
jo
je
jns
pop
xchg
imul
and
xor
xchg
xor
aaa
int3
add
fcomps
cld
inc
pop
dec
imul
push
arpl
mov
cmp
repz
mov
jp
sbb
pop
push
sahf
dec
pop
jecxz
or
ja
add
cmpsl
fisubs
and
adc
sbb
stos
bound
pop
adc
js
lods
dec
lahf
lea
outsb
loope
xchg
repz
pop
sbb
inc
dec
push
mov
mov
inc
neg
pop
in
pop
lahf
fwait
cmp
pop
dec
xchg
pop
adc
pop
jb
test
xchg
pop
ja
cmp
sbb
jbe
in
lcall
test
sub
push
cld
inc
push
cltd
add
xchg
pop
mov
ret
data16
jno
sbb
pop
out
stos
imul
add
xchg
insl
xlat
shrl
cmpsl
repz
sarb
pop
adc
popa
dec
and
je
pop
mov
cli
test
jns
pop
xchg
sub
out
sbb
xor
mov
cli
test
push
lcall
ljmp
pop
sahf
push
jmp
push
jo
mov
mov
xor
repz
leave
rcll
add
xchg
sub
popa
int
lret
xchg
popf
test
or
and
dec
xchg
in
pop
push
pop
loopne
add
scas
pop
ds
int
mov
gs
pop
jmp
mov
cs
mov
add
movsl
or
popf
jb
in
jge
adc
test
pop
int
and
test
pop
or
adc
dec
mov
fcomps
jge
aam
mov
and
fwait
push
pop
mov
pop
out
xor
fisttpl
mov
push
xchg
sbb
and
push
shlb
fimull
dec
mov
outsb
and
pop
dec
jbe
pop
sbb
es
sbb
outsl
dec
or
mov
jb
jmp
icebp
push
je
pushf
pop
push
cwtl
inc
mov
pop
fdivrl
divl
mov
pop
push
std
inc
or
adc
jp
fists
add
pop
loopne
test
arpl
push
aaa
pop
add
xchg
idivl
mov
leave
xchg
fcomps
aam
int3
add
push
gs
repnz
cli
pop
and
lret
mov
ljmp
mov
movsb
mov
pop
and
xchg
cmc
dec
mov
dec
stos
cmpb
out
jbe
ret
cs
sub
jne
mov
push
sbb
arpl
data16
xorl
mov
cmp
into
and
mov
xor
mov
pop
ret
mov
jmp
das
jo
mov
scas
out
ljmp
pop
lods
insb
rcrb
xlat
pop
fistps
cmp
mov
mov
mov
pop
lret
shrb
xor
pop
dec
mov
lds
rorl
int
stos
adc
cmp
pop
call
js
mov
imul
stc
int3
pop
jmp
mov
adc
mov
xor
jb
sbb
pop
mov
and
push
push
jbe
pop
ss
mov
jo
pop
fucomp
insl
arpl
repz
mov
cmp
push
jns
add
test
push
add
out
pop
inc
gs
shl
push
fistps
lea
out
sbb
add
lahf
sbb
addr16
lea
lret
pop
pop
call
fs
sub
les
or
outsb
mov
mov
popa
pop
enter
scas
lock
pop
cmc
push
imull
aad
int3
and
adc
sbb
test
adc
xchg
dec
pop
and
pop
jo
push
popa
lods
dec
ja
pop
idivl
xlat
cmp
sti
xchg
and
mov
fadds
in
add
les
inc
fs
sbb
xchg
jle
pop
and
lahf
or
insl
ror
sbb
mov
mov
sub
scas
adc
mov
pop
and
rcrb
dec
imul
ret
cltd
sbb
int
pop
sub
xor
pop
inc
jbe
jge
add
fstps
test
jns
pop
cmp
push
push
push
cli
sub
pop
out
out
pop
add
jge
sub
mov
sbbb
adc
lea
or
jb
jbe
xchg
mov
jno
xchg
fdivs
in
inc
mov
mov
pop
xchg
cs
mov
pop
clc
in
cmp
pop
jnp
mov
jo
push
out
pop
stos
pop
mov
pop
rclb
xor
int
ljmp
cmp
cmp
xor
fsubs
lods
cmp
inc
pop
insb
std
sbb
pop
mov
pop
sarl
mov
jb
cmpsl
lahf
xchg
movsb
sbb
xchg
int3
orb
push
insl
ficoms
jge
mov
xchg
pop
insl
stos
cmp
mov
repnz
stc
arpl
pop
push
mov
lret
xor
push
lret
dec
and
mov
mov
imull
xor
push
mov
sbb
add
lahf
xor
out
fldt
pop
out
mov
jge
jbe
scas
fbld
cmp
data16
stos
ret
dec
push
in
nop
mov
or
dec
and
ljmp
add
pop
pop
jbe
jne
lret
data16
pop
push
lahf
cmc
inc
fptan
mov
adc
cwtl
in
and
sbb
inc
out
stc
sahf
xchg
adc
andps
scas
xor
jecxz
cli
mov
arpl
test
sbb
in
scas
scas
dec
cmc
pop
push
mov
popa
mov
loope
insl
sub
lea
xor
mov
inc
or
mov
cli
dec
mov
mov
pop
arpl
aad
lea
movsb
push
pop
sbb
jnp
sbb
outsl
sbb
pop
push
cld
mov
sbb
pop
fwait
popf
out
adc
add
dec
push
jmp
inc
mov
ficompl
outsb
bound
stc
and
add
or
incb
outsl
jl
pop
dec
cmp
or
sbb
mov
loop
fistpl
mov
cmp
fcomi
and
js
pop
rolb
sbb
fiaddl
int3
fcomps
lahf
xor
xorl
jl
jae
sbb
in
cmp
in
push
les
mov
bound
xchg
inc
push
test
pushf
cmpsb
jo
repz
push
pop
stc
inc
int3
jnp
adc
roll
loop
ret
and
pop
mov
shlb
push
jne
jo
call
dec
jo
mov
in
or
lret
pop
and
mov
pop
mov
mov
subb
dec
mov
clc
mov
dec
pinsrw
pop
ret
jge
pop
xchg
lock
test
int
mov
mov
mov
pop
andb
jb
int3
stc
mov
ljmp
cmc
pop
cmp
fadd
sbb
jp
sub
mov
ficomps
add
jnp
sbb
out
test
int3
mov
int
cmpb
lret
dec
rorl
cmpsb
pop
jbe
insl
sbb
pop
ret
test
mov
out
xchg
pop
jo
push
mov
pop
lea
mov
movsb
jb
pop
inc
js
icebp
or
int
dec
pop
push
push
clc
dec
jb
icebp
dec
xchg
mov
sbb
dec
or
cmpsb
pop
shll
xor
nop
push
fstps
xor
push
pop
cmp
mov
mov
xor
and
mov
movsb
push
test
fdivs
loope
xchg
hlt
sbb
push
mov
insl
xor
lret
call
mov
mov
jg
push
bound
setae
icebp
mov
arpl
lods
add
pop
sbb
stc
cltd
hlt
pop
push
jl
movsl
mov
xchg
xchg
cmc
mov
repz
push
cli
stos
jb
fwait
mov
pop
ffreep
aas
je
sti
mov
jl
jo
sbb
mov
pop
adc
mov
sbb
leave
fcompp
sub
fdiv
mov
xchg
es
rol
xor
pop
cmp
iret
push
pshufw
es
fstps
int
popa
xor
push
pop
add
ss
xchg
push
cld
mov
lea
cmpsl
call
imul
dec
mov
mov
mov
dec
lea
mov
lock
pop
repz
adc
cs
ljmp
push
sub
pop
and
pop
mov
popa
xlat
mov
push
push
sbb
pop
aaa
xor
dec
call
dec
mov
addr16
pop
mov
lods
or
fsubr
add
xchg
push
and
fnstenv
push
jo
pop
neg
insb
lcall
iret
push
int
jns
sbbb
push
int3
std
pop
and
inc
cmp
leave
sbb
pop
aas
push
in
jb
in
addr16
lea
negb
mov
stos
fisttps
xorl
mov
inc
xchg
lret
sbb
test
jecxz
lods
xor
push
xchg
sbb
dec
adc
mov
cmp
or
iret
addb
dec
pop
jge
add
sub
dec
sub
and
icebp
xchg
fstp
pop
inc
or
and
pop
push
cld
outsl
cmp
scas
lret
rclb
aam
pop
cmp
pop
cmc
gs
inc
xchg
into
loop
and
pop
pop
lret
adc
add
pop
pop
adcb
jg
call
test
sbb
inc
push
inc
jmp
mov
mov
add
mov
rcrl
jle
xchg
or
pop
sar
sbb
xchg
mov
pop
jl
pop
pop
add
imul
loope
dec
push
stos
mov
xchg
dec
sub
pop
call
pushf
jle
mov
jl
xor
or
jae
mov
shl
pop
push
lret
mov
adc
adc
pop
mov
jle
pop
or
xor
lret
movb
mov
mov
cltd
or
lds
popl
sub
es
adc
test
call
daa
jno
ret
push
pop
push
pusha
in
js
sbb
arpl
mov
cltd
push
jg
pop
push
mov
jbe
add
cwtl
lods
mov
int
pop
loope
cli
loopne
mov
and
mov
pop
mov
dec
rorb
or
lods
mov
fisubs
push
ss
in
or
add
pop
stos
sub
inc
cwtl
gs
jecxz
lea
sbbb
pop
fstpt
int3
mov
mov
mov
pop
dec
jle
lea
pop
or
mov
inc
std
xor
or
lahf
xchg
out
mov
mov
out
mov
cld
sub
fiaddl
push
in
mov
adc
cs
xchg
push
andb
mov
mov
adc
pop
pop
icebp
int
stos
je
sub
xchg
lods
ljmp
xor
insb
cmp
lcall
mov
pop
clc
inc
pop
ja
pushf
adc
fadds
sbb
pop
dec
push
or
out
dec
xchg
sbbb
call
pop
in
jnp
xchg
int
scas
mov
stos
mov
stc
xor
imul
incl
sub
mov
dec
cmpsl
mov
or
out
pop
scas
jecxz
pop
das
vpshuflw
inc
insb
sub
nop
scas
mov
adc
xchg
aaa
fisubl
sbb
mov
das
sbb
orl
xchg
jl
rep
pop
xchg
int
into
jecxz
stc
mov
inc
mov
pop
jbe
aad
xchg
andb
int
cwtl
in
sub
fldt
jge
xchg
pop
fsub
inc
jb
xchg
jnp
mov
call
fdivrs
mov
pop
or
xlat
call
sbbb
pop
mov
divl
pop
jns
mov
dec
pop
adc
inc
xchg
cmp
lods
pop
mov
sahf
cmp
sub
pop
pop
jp
andps
pop
mov
mov
hlt
fdivrs
test
inc
sub
xor
pop
pop
cmp
pop
movsb
arpl
sbb
jle
mov
inc
into
movzbl
pop
call
dec
dec
outsb
jecxz
mov
jge
mov
sbb
icebp
cli
jbe
xchg
push
mov
stos
lahf
hlt
popf
test
pop
adc
mov
ja
push
or
sbb
pop
mov
push
cmp
mov
lret
push
pop
lock
mov
lcall
jb
add
pop
or
cmp
out
int
mov
enter
mov
out
mov
fsubrl
loop
mov
jb
and
pop
les
xor
and
mov
sbb
shl
mov
jns
add
sub
push
mov
dec
pop
mov
bound
ja
adc
lea
jno
cmp
mov
lahf
lds
xchg
imul
pop
ljmp
and
adc
int
pop
ret
mov
mov
fcomip
lea
or
cs
dec
enter
jns
pop
ret
inc
mov
aam
dec
mov
comiss
and
mov
push
scas
movsl
int3
fnstcw
test
test
add
push
xlat
jp
xchg
test
cmp
xchg
enter
sub
pop
data16
sub
or
push
jnp
int
movsb
jo
jge
or
pop
addr16
arpl
or
into
jmp
pop
mov
mov
pop
adc
ret
int
push
lret
scas
mov
dec
mov
lahf
and
dec
out
fistpl
cmp
sti
popf
mov
cs
ljmp
dec
cmp
mov
dec
test
arpl
xchg
movsl
push
dec
sbb
fnstenv
fldl2e
push
cli
inc
insl
pop
imul
push
xchg
movsl
mov
jno
in
scas
dec
xorl
add
scas
jne
cmp
nopl
loop
sbb
test
cwtl
xor
cmc
xor
repnz
ljmp
jb
stos
push
sub
movsl
cmc
int
push
pop
popf
fcomps
adc
mov
mov
mov
push
pop
push
cmp
test
sbb
and
ficomps
lock
push
cmp
pop
sahf
iret
xchg
pop
adc
mov
sub
lea
pop
mov
push
push
jae
nop
imul
xor
mov
in
jbe
pop
hlt
mov
sbbl
pop
pop
clc
pop
jmp
jb
inc
dec
mov
or
adc
scas
push
mov
fs
pop
and
xor
xchg
pushf
mov
or
add
adc
fdivrs
scas
enter
pop
loope
xor
rol
cwtl
setp
mov
mov
mov
add
pop
adc
mov
pop
jge
int3
mov
ja
es
scas
xor
ret
loopne
pop
mov
pop
pop
cmp
mov
mov
push
out
pop
inc
push
or
test
hlt
pop
fimuls
push
push
pop
jmp
mov
dec
xchg
pop
sub
push
jo
and
pop
dec
jbe
lcall
sbb
xchg
sub
dec
stc
inc
fdivrl
xor
or
mov
popf
pop
aaa
or
ficomps
pusha
inc
xor
dec
sar
sbb
xchg
in
iret
mov
jge,pt
xchg
sahf
in
cli
xchg
dec
lahf
divb
stos
mov
jmp
xor
les
sub
xor
outsl
std
sti
mov
pop
push
loopne
inc
pop
mov
stos
je
or
pop
mov
push
push
pop
push
stos
pop
mov
pop
clc
pop
add
adc
frstor
pop
mov
int
jl
das
inc
pop
ss
popf
dec
add
pop
and
pop
pop
adc
sbb
in
scas
jmp
pop
gs
cltd
mov
jge
xchg
pop
pop
or
mov
mov
push
pop
testl
pop
ret
lcall
xor
lret
mov
loop
int
inc
movsl
lea
in
xor
sbb
sub
mov
mov
fmuls
pop
jl
insl
popa
int
xchg
xchg
mov
mov
cmp
std
and
imul
fbstp
insl
fdivl
mull
pop
fimull
xor
out
jo
mov
mov
pop
pop
scas
outsl
push
call
bound
and
cmc
xor
dec
jl
test
stos
movsl
sti
je
add
push
stos
lods
mov
jle
mov
inc
pop
xor
or
pop
inc
mov
sub
int
ja
icebp
add
sub
jo,pt
pop
push
mulb
test
cmp
inc
pop
enter
mov
pop
loop
jae
pop
push
cmp
int
fwait
call
jbe
pop
loopne
mov
addps
lcall
or
sub
pop
sub
jmp
fcoms
xchg
mov
inc
fldenv
sbb
jo
jge
popa
je
jmp
out
ja
and
pop
int3
pushf
repnz
sahf
data16
pop
rcr
enter
jns
pop
cli
inc
mov
jns
inc
and
mov
and
aas
dec
hlt
sbb
mov
mov
xchg
stos
xor
gs
sbb
sti
ficoml
mov
jo
mov
test
pop
cmp
out
pop
and
insl
sarb
negl
dec
in
mov
pop
pop
sarl
pop
jmp
cmp
aaa
pop
rclb
or
jl
sbb
aam
nop
test
imul
aaa
and
les
pop
adc
cmp
mov
mov
js
sbb
fidivrl
stos
imul
js
pop
repz
rclb
orl
pop
std
call
int
jb
out
dec
loopne
mov
decl
cltd
pop
inc
or
jno
loop
hlt
push
leave
ret
and
sti
nop
pop
int
sbb
imul
cld
mov
pop
dec
dec
rcll
pop
push
hlt
out
fdiv
xor
mov
into
ss
pop
push
cli
es
pop
mov
fadd
fadds
flds
push
rcrl
mov
int
mov
scas
enter
jns
and
sub
mov
dec
cmc
xchg
pop
arpl
fcompl
pop
pop
push
and
mov
cli
in
pop
push
adc
movl
decl
and
movb
scas
and
or
xlat
cmpsb
int3
lea
aas
sub
pop
sub
jge
arpl
pop
aam
jbe
pop
sbb
push
pop
xlat
lds
lods
int
xchg
movl
mov
xchg
dec
loopne,pn
mov
iret
pop
ja
repz
imul
inc
std
cmp
cld
or
lea
pusha
adc
add
cmc
pop
and
lds
mov
xchg
xor
andb
xchg
pop
stc
scas
cmp
mov
mov
pop
pushf
cmp
dec
stos
cmp
mov
aam
adc
fldt
daa
mov
push
mov
mov
inc
fwait
mov
gs
inc
out
and
mov
sbb
and
lret
pop
cmp
pusha
lahf
movsb
bound
out
xor
rcll
shr
cltd
jg
jecxz
pop
push
stos
push
or
mov
pop
stc
lods
test
add
sbb
jl
pop
lret
dec
cmc
push
and
sbbl
shl
push
pop
cmp
pop
push
dec
push
pop
pop
xor
jg
sbb
pop
xor
int3
xchg
jno
pop
lcall
test
xor
pop
sbb
fdivl
pop
cltd
xor
pop
in
pop
rcrb
nop
mov
int
daa
adc
sbb
loope
pop
cmp
fistps
lcall
push
mov
decb
sahf
scas
jns
pop
repnz
sahf
push
xlat
add
pop
sub
scas
lret
pop
mov
jne
scas
gs
jge
in
data16
xchg
push
xor
pop
lea
sub
cld
movsl
and
pop
cmpsl
mov
inc
out
movsb
scas
xchg
inc
outsb
aad
sub
ret
dec
mov
dec
rcrl
mov
xchg
cli
or
pop
sub
rcl
out
and
mov
sub
sbb
nop
jnp
stc
js
sub
hlt
pop
push
jb
mov
test
jl
ss
pop
adc
mov
mov
ja
jl
inc
sbb
jg
sarb
pop
push
xchg
mov
ss
pop
inc
jmp
cmp
mov
mov
mov
or
cmp
icebp
fildl
mov
push
bound
in
fcomps
jbe
enter
lods
dec
fxch
pop
aaa
into
mov
dec
push
sahf
inc
stc
insl
push
mov
dec
or
sbb
mov
or
int3
stos
arpl
into
jl
xchg
push
aaa
fwait
sbb
lods
jnp
ds
lahf
mov
xchg
mov
dec
inc
fstpl
inc
in
fcmovne
pop
add
sub
dec
sbbl
push
jbe
pop
sbb
loop
out
dec
in
mov
orl
xor
adc
fwait
push
jb
jne
mov
fidivrs
inc
int
cltd
movsl
mov
in
scas
ret
cwtl
aam
pop
push
addr16
fs
ror
js
jl
mov
lcall
imul
pop
cmp
and
jo
pop
loop
aaa
fcompl
imull
lods
pop
int3
rcrb
je
movsb
popf
stos
mov
xchg
or
jae
pop
adc
sbb
cli
and
mov
push
xor
pop
sub
test
adc
test
clc
sbb
sbb
push
xchg
pop
div
lds
pop
add
jbe
pop
outsl
enter
arpl
lcall
pop
or
rep
and
aad
pop
adc
out
ja
sub
fs
inc
fcomps
popf
mov
icebp
pushl
cmc
mov
cmp
pop
xor
push
push
inc
pop
aam
loopne
movsl
jecxz
insb
pop
cmp
mov
pop
out
pop
inc
test
shll
ds
pop
jnp
bound
jb
fwait
scas
inc
add
sub
pop
pop
xor
ja
xchg
pop
pop
icebp
int3
mov
popl
sub
adc
call
stos
pop
jb
je
mov
pop
cwtl
jp
lcall
repnz
cmp
and
test
icebp
dec
repz
fldenv
inc
dec
jo
pop
pop
divl
ret
fcmovb
mov
push
cmp
jecxz
dec
pop
pop
xor
pop
daa
xorb
mov
xchg
fdivr
int
stos
pop
inc
jecxz
insl
aaa
test
test
jle
sarb
pop
jbe
aas
hlt
scas
jb
jns
cli
stc
pop
sti
lret
xor
addr16
dec
adc
add
stos
push
test
pop
mov
jecxz
or
subb
movsb
aas
pop
int3
xchg
dec
pop
inc
movsb
hlt
js
fldt
cwtl
loope
xchg
repnz
fcomps
pop
push
mov
cmp
scas
xor
shlb
fcompl
cld
mov
push
adc
sti
lret
rorb
arpl
pop
sbb
inc
mov
leave
push
movsl
push
dec
pop
inc
shrl
pop
scas
dec
fdivrs
mov
cli
lds
js
push
pop
or
mov
sbb
pop
out
mov
and
mov
lret
or
mov
fimull
mov
mov
icebp
cld
sbb
and
pop
inc
rcr
sarb
popa
addr16
pop
lods
sbb
push
test
movsb
pop
or
dec
xor
push
fisttpl
lock
xchg
xor
int
xor
push
pop
hlt
lret
in
pop
push
jb
jge
std
mov
fbld
repnz
mov
mov
ficompl
mov
pushf
sbb
sbb
mov
pusha
inc
mov
adc
fcmovnu
sarb
inc
imul
add
pop
arpl
xlat
in
mov
cmp
das
mov
pop
int
ljmp
inc
pop
push
loop
rcr
add
out
jo
pop
movl
push
sbb
mov
negb
inc
cli
mov
jne
jns
mov
test
inc
int3
subb
movsl
and
mov
lcall
mov
mov
pop
jb
mov
pop
pop
sbb
xor
push
pop
dec
into
xchg
lds
ss
cli
pop
add
pop
mov
xor
pop
mov
jb
jecxz
cmp
hlt
xor
mov
pop
fwait
aad
es
jbe
pop
mov
roll
loop
rclb
int
pop
insl
movsl
orb
enter
xchg
aaa
jp
popf
mov
mov
fistl
and
pushf
jge
xchg
push
lods
mov
inc
test
test
xchg
shll
ret
mov
pop
jo
dec
test
pop
pop
lock
dec
dec
outsb
insb
pop
cli
int
add
dec
adc
pop
testl
arpl
jb
cmp
push
mov
test
bound
mov
inc
clc
pop
add
sub
rcrb
jg
pop
mov
inc
mov
pop
add
pop
in
int3
sbb
pop
or
in
pop
pop
cmp
push
iret
scas
loopne
cs
dec
lret
inc
add
arpl
adc
push
test
sbb
inc
lret
jg
les
js
xor
fwait
loop
movsb
jecxz
pop
pop
or
inc
das
sub
push
lock
or
cwtl
int
cmp
mov
mov
pop
xchg
fdivl
into
inc
inc
pop
fbstp
push
xchg
cmpsb
dec
call
pop
cwtl
cmp
pop
fcmovne
add
pop
repz
mov
xor
xchg
jg
mov
mov
stc
stos
pop
shrl
add
pop
jbe
rolb
inc
out
pop
xor
test
cmp
int
mov
mov
xor
dec
and
add
and
pop
lods
pop
push
xlat
out
or
pop
stos
jmp
dec
pop
fmuls
or
sbb
popa
mov
jp
rorb
ret
xchg
cmp
stc
mov
test
insl
pop
out
pop
adc
pop
xor
mov
dec
pop
pop
xchg
dec
mov
pop
pop
dec
inc
inc
int3
pusha
jb
ljmp
into
div
pop
dec
movsb
int
or
xor
pop
cmp
ljmp
xchg
lods
or
push
cld
pop
stc
shll
ds
clc
lret
pop
pop
dec
test
out
add
outsb
pop
push
lea
mov
into
xor
mov
jnp
fistpl
pop
xchg
pusha
sub
push
mov
addr16
gs
pop
xchg
sbb
lods
sub
inc
lea
sbbl
mov
addr16
pop
and
sbb
enter
fidivrl
mov
cs
fdivrs
rcrl
fs
jb
mov
push
pop
int
ja
insb
insl
push
push
pop
push
aaa
cld
dec
addr16
test
out
scas
mov
xor
popa
and
loope
sub
and
rcrl
sbb
imul
push
sbb
mov
es
dec
jg
jnp
dec
lahf
adc
pop
and
test
mov
push
adcl
adc
xor
mov
or
sbbb
xchg
faddp
movhps
xchg
gs
sti
jb
pop
lea
pop
cmp
inc
leave
pop
sbb
popl
sbb
int
jae
call
sbb
push
mov
fmuls
int3
cmp
push
cmc
pop
test
stos
and
pop
dec
cmp
arpl
inc
nop
push
ja
pop
xor
repz
xchg
or
pop
mov
push
sti
dec
lret
mov
gs
and
int3
xor
xor
jne
sbb
cmpsb
pop
jg
and
pop
or
ss
and
xchg
jecxz
mov
pop
fisubrl
arpl
pop
or
lret
ss
es
ljmp
loope
and
cmp
or
in
dec
mov
pop
jge
nop
pop
dec
pop
das
dec
pop
sub
adc
cmpsl
es
pusha
dec
pop
sti
inc
pop
mov
pop
xchg
sarl
mov
inc
nop
inc
jge
dec
gs
jmp
mov
aam
leave
push
fldcw
fsubrs
cltd
lcall
dec
es
rcrb
xchg
je
rorl
ljmp
aad
out
push
xchg
or
cmpl
imul
jo
pop
mov
popf
push
movsb
mov
inc
sbb
jmp
xchg
xchg
ret
sbb
int
mov
lahf
xchg
adc
cmp
ficomps
mov
pop
addr16
ja
adc
loopne
pop
ror
call
pushf
cmp
sub
ja
in
push
mov
sub
insb
dec
into
negl
mov
aad
sub
adc
shrl
cvtps2pi
pop
adc
in
pop
int3
mov
testl
dec
xlat
sub
pop
addr16
movsb
je
out
push
stos
arpl
ja
int3
mov
shll
pop
adc
lret
push
xor
push
bswap
sub
stc
pop
pop
clc
add
xchg
xor
fmul
ljmp
mov
imul
aas
dec
stos
push
pop
mulb
fwait
pushw
test
sub
ret
decl
pop
jne
dec
dec
push
push
mov
bound
icebp
and
pop
lods
int
jp
imul
sbb
insb
enter
add
call
ficompl
int
ss
mov
inc
pop
mov
adcb
mov
mov
cmp
test
mov
cli
push
imul
in
stos
mov
ja
push
pop
aas
cmc
out
xorb
push
test
sbb
cmp
int
dec
or
push
enter
jg
lahf
inc
cmp
dec
jo
pop
sti
in
lods
or
sbbb
test
mov
sbb
and
or
hlt
pusha
lret
mov
pop
jae
fwait
pop
movaps
stos
and
movsl
ficompl
fwait
sbb
pop
aad
xor
mov
jbe
push
or
ds
test
sti
xchg
cmc
insl
bound
sub
dec
int3
mov
dec
fdivrl
pop
push
inc
sbb
pop
xchg
pusha
mov
scas
inc
mov
or
inc
cli
jo
pop
cmp
inc
shll
dec
pop
and
pop
cld
lods
pop
xchg
inc
or
dec
pop
test
movsl
dec
xor
pop
mov
sbb
mov
and
pop
jb
inc
adcl
pop
jmp
in
int3
pop
hlt
xor
mov
popa
xchg
cmp
sub
dec
stc
es
xor
in
jb
test
sub
push
rclb
dec
pop
push
mov
push
push
pop
or
arpl
mov
sub
pop
dec
ret
fdivs
push
inc
pop
jecxz
push
mov
pop
lret
lds
jb
test
stos
add
out
repz
out
jl
fldcw
in
stos
mov
fs
sahf
xor
pop
pop
xor
mov
mov
cmp
scas
or
inc
inc
sbb
stos
fidivrs
cmpsb
dec
mov
lret
pop
popa
jg
dec
outsb
sub
pop
push
icebp
das
js
cmp
inc
in
jbe
and
adc
sqrtps
sbb
ficompl
push
xchg
or
pop
les
ret
xchg
fsubl
add
adc
push
wrmsr
jmp
add
pop
sbb
pop
js
xor
pop
sub
fsubr
in
pop
fdivrp
sub
inc
shrb
fbstp
out
fisubl
insl
pop
push
xorb
arpl
rcrb
mov
push
hlt
pop
pop
ds
arpl
jo
mov
out
dec
nop
cmp
sub
sahf
add
lea
mov
call
add
ja
std
fcoml
popa
pop
push
shll
inc
mov
mov
sbb
fisubrl
mulb
mov
add
jle
pop
cli
adc
sbb
movsl
ret
lods
jmp
mov
aad
jp
in
incb
push
mov
inc
pop
jnp
enter
mov
pop
dec
jecxz
or
sbb
test
paddd
jb
inc
imull
mov
dec
cmp
outsb
pop
loopne
mov
pop
sbb
aam
lret
pop
and
push
sub
test
adc
or
ds
pop
aad
mov
xorb
idivl
mov
add
test
mov
pop
insb
lds
popf
pop
ds
dec
dec
push
and
int
fs
mov
sbb
jecxz
aad
or
mov
incl
push
add
jmp
mov
pop
or
movsl
leave
scas
stos
mov
mov
cmpsl
sub
sub
aas
xchg
jp
pop
push
and
or
pop
xor
outsb
mov
mov
push
jns
pop
sbb
cmc
sub
adc
and
mov
sti
jb
jle
in
packsswb
nop
and
scas
cmp
bound
mov
out
dec
or
pop
pop
cwtl
add
pop
jbe
mov
out
movsl
cli
dec
xchg
sbb
and
inc
xchg
pop
mov
lret
pop
iret
int
sahf
push
sbb
scas
or
loope
in
fimuls
dec
fistpll
and
mov
mov
add
jecxz
in
mov
jbe
dec
push
sbb
sub
mov
xor
stc
enter
scas
in
out
mov
and
mov
sbb
and
scas
clc
imull
pop
fcoml
pop
movsb
fisubrs
std
and
xchg
pop
push
cs
aaa
sbb
dec
or
lea
int
fdivrp
ss
outsl
fbld
mov
jmp
stos
inc
mov
mov
test
test
je
jae
xchg
dec
jmp
out
sbb
or
mov
in
xor
ficoms
stos
mov
and
inc
jo
mov
bound
mov
pop
pop
push
xchg
push
aad
mov
pop
adcl
pop
stos
int
xchg
incl
dec
leave
sarb
adc
std
sbb
jecxz
jbe
pop
stos
mov
int3
daa
xor
mov
in
fistl
pop
mov
xor
inc
rcrl
xchg
stos
mov
pop
ja
push
cmp
jge
pop
push
shll
jle
inc
adc
sub
push
pop
xchg
pop
dec
and
mov
pop
mov
stos
xor
add
lock
hlt
fstpl
xchg
insl
adc
sub
inc
je
lods
scas
xchg
fmul
in
sub
adc
sbb
imul
lret
icebp
andb
mov
xchg
cmp
imull
in
inc
jge
mov
inc
xor
or
mov
and
lcall
mov
or
dec
outsb
xchg
push
add
mov
add
cmc
pop
in
cwtl
xor
or
pop
icebp
jb
andl
js
xchg
ja
test
rcll
jo
sbb
pop
xlat
shll
dec
out
inc
cli
pop
jbe
fisttpll
jne
int3
lret
gs
outsb
cltd
js
lods
cmpsl
jbe
scas
mov
ja
jno
xchg
stos
lahf
push
filds
dec
movsl
js
stc
pop
sub
jb
dec
out
mov
aas
jnp
clc
dec
dec
pop
pop
ret
mov
and
pop
mov
mov
pop
in
fs
or
pop
mov
xchg
cli
cmp
clc
pusha
sbb
pop
xchg
adc
fmull
int
fidivrs
pop
addr16
mov
ljmp
mov
adc
int3
ds
mov
mov
pop
or
inc
pop
sbb
fcmovnb
push
nop
pop
cltd
int
rol
insl
stc
cmc
dec
push
xchg
pop
lock
fnstsw
movsl
xchg
mov
scas
cwtl
xor
add
bound
fstps
or
mov
mov
pop
cmp
push
int
ljmp
into
jo
nop
pop
hlt
push
lea
or
je
in
push
scas
sbb
int
popa
adc
add
in
and
stos
xor
pop
mov
mov
mov
adc
cli
sti
leave
mov
pop
shlb
iret
je
sub
dec
pop
or
jb
mov
lcall
cmp
lret
xchg
push
js
xchg
stos
cmp
pop
xor
sbb
lret
pop
and
xor
xor
ret
mov
lret
mov
mov
into
or
fldenv
fstpt
sti
mov
or
cld
push
pop
sub
stos
adc
sub
adc
int
test
inc
loopne
sahf
xchg
mov
mov
push
sbb
jp
adc
pop
push
dec
pop
lods
add
push
mov
loop
dec
adc
pop
lods
movsb
inc
dec
sbb
inc
jns
cmp
lahf
test
movl
or
sbb
pop
lds
imull
imul
or
adc
sahf
push
fidivrs
leave
sti
rolb
pop
sbb
scas
lods
adc
mov
push
sbb
in
adc
stos
push
js
push
ret
dec
fstps
adc
cmp
mov
loop
jp
sti
xchg
pop
xor
aaa
sbb
push
inc
pop
push
mov
test
pop
sub
pop
sbb
sbb
pop
cs
enter
aam
sahf
aaa
pop
jl
std
cmc
cs
das
pop
inc
inc
add
or
popf
jb
inc
xchg
pop
or
int
and
outsl
push
mov
dec
rclb
xchg
mov
sbb
mov
out
cmpsl
jb
mov
cli
mov
mov
insl
inc
jp
imul
mull
pop
cmp
pop
xchg
and
mov
inc
pop
inc
sub
jo
leave
jnp
js
mov
pop
push
dec
push
adc
sub
jns
xchg
or
imul
pop
outsl
int3
psubw
mov
xor
pop
or
fildl
mov
scas
cmp
fidivrl
inc
add
and
es
test
repz
pop
add
fcomps
push
imul
lret
xchg
cltd
test
dec
mov
cmp
pop
xchg
inc
enterw
mov
inc
sahf
push
les
popa
fwait
or
int3
pop
jp
jecxz
ljmp
ret
cmp
inc
sahf
push
pop
lea
dec
mov
cmp
shll
jbe
pop
cmc
xchg
mov
and
or
stos
scas
mov
mov
jg
cmpsl
xchg
cltd
jo
out
adc
sti
lods
test
pop
outsb
adc
lret
movsb
xor
adc
mov
int
unpckhps
lea
dec
mov
nop
push
mov
xchg
xchg
je
mov
gs
inc
pop
int
xor
pop
decl
aaa
push
movsb
sahf
shlb
add
out
sbbl
mov
imulb
jecxz
sub
lahf
nop
rsm
fstpl
aaa
sub
jne
jmp
and
or
mov
jae
out
xchg
sarb
out
jno
loope
je
mov
nop
test
pop
pop
sub
dec
inc
mov
jne
leave
sbb
sbb
das
pop
pop
jo
pop
ss
mov
and
scas
in
filds
xor
movsl
mov
test
pop
test
mov
mov
jne
and
dec
stos
push
jb
or
std
das
loope
pop
rol
pop
or
and
pop
fmull
je
aaa
cs
pop
push
mov
jns
pop
clc
gs
dec
push
lock
pop
leave
fisubrl
fildl
sti
pop
loopne
xchg
popa
in
pop
push
push
jnp
or
leave
mov
dec
cmp
jbe
scas
xchg
divl
lahf
hlt
mov
int
jmp
jno
pop
mov
dec
inc
push
dec
pop
mul
subb
pop
jnp
adc
pop
std
ds
movsb
add
inc
dec
pop
je
ja
mov
pop
xor
sbb
sbb
cmp
rorl
jnp
fisubs
sub
lahf
lea
or
sbb
inc
test
mov
popa
arpl
fildll
pop
sub
dec
lea
inc
in
pop
add
pop
jae
adc
cld
scas
jb
les
pop
nop
jg
lea
dec
push
lahf
outsb
ret
repnz
jecxz
fldl
test
stc
clc
test
fwait
inc
rcrl
in
jle
sbbl
icebp
clc
imul
movsb
mov
ret
mov
cmp
out
hlt
push
cli
sub
inc
pop
lods
dec
enter
call
out
sub
lahf
push
mov
jle
imul
fstps
fistpll
sub
mov
in
sub
jle
pop
cmp
mov
movsl
jo
pop
pop
push
push
arpl
gs
ja
xchg
dec
psubsw
data16
push
das
cltd
push
pop
adc
sbb
cs
mov
push
pop
pop
out
jge
pop
dec
cmp
fwait
jo
mov
pop
inc
sbb
ucomiss
jle
sub
add
pop
int3
cmp
mov
in
jno
xlat
sbb
mov
int3
loopne
mov
mov
and
pop
cli
xchg
push
dec
fsubl
bound
dec
push
call
xor
in
push
in
pop
push
vpsubusw
sbb
inc
pop
ds
pcmpeqd
inc
add
adc
pop
mov
or
pusha
outsb
pop
int
xchg
test
mov
xchg
pop
dec
test
insb
pop
jbe
stc
out
pop
lcall
test
stc
mov
sete
js
push
fdivrp
mov
xlat
sub
inc
movl
mov
cmp
es
sbb
roll
lock
push
and
jmp
mov
scas
jl
xchg
rcr
andb
fistpl
push
scas
or
push
imul
ds
test
cld
icebp
cmc
mov
mov
push
and
sub
or
xor
add
shlb
insl
mov
jae
dec
ds
pop
rcrl
jecxz
cltd
mov
dec
lock
dec
add
fsubrs
mov
sub
dec
sub
loope
outsb
fisttps
lcall
js
pop
mov
cmpsl
scas
and
pop
shld
mov
lock
xor
enter
sbb
xor
mov
xor
jp
sbb
mov
aaa
test
in
inc
subl
push
pushf
xorb
sbbb
push
jmp
pop
mov
push
lret
in
int
sub
cmp
xchg
test
lahf
stos
push
mov
ljmp
mov
xchg
test
pop
lods
fisubs
outsb
scas
mov
stc
mov
cmp
push
mov
in
xor
mov
pop
jecxz
cmp
int3
mov
arpl
add
dec
loope
xor
pop
loop
mov
pop
cmpsb
pop
cmc
in
addr16
jbe
stos
xor
mov
sub
divb
lods
mov
int3
movsl
dec
adcb
cld
jb
and
lea
out
pop
and
fwait
in
pop
imul
cmpsl
int3
insb
cli
stos
mov
pop
add
mov
fcmove
sbb
mov
mov
cmp
pop
movsb
xchg
lcall
leave
add
xchg
mov
xchg
repnz
sbb
lock
mov
dec
pop
add
addps
dec
sbbb
mov
push
adc
dec
jne
xchg
stos
jb
push
mov
xor
fiaddl
sbb
pushf
push
mov
cmp
adc
cltd
aam
add
dec
addr16
mov
fcmovnbe
daa
add
cmp
push
mov
pop
or
jb
xchg
add
inc
fidivl
sbb
and
inc
cld
dec
in
xchg
lcall
ljmp
aaa
inc
mov
cmp
fimull
sbb
inc
mov
lahf
xor
pop
cmp
loopne
xchg
lods
mov
insl
jl
ja
jbe
fstpl
lcall
jecxz
in
mulps
insl
pop
in
insb
je
fs
dec
inc
pop
scas
or
lahf
sbb
pop
mov
jnp
shlb
pop
pop
push
jb
fldl
and
pop
inc
pop
mov
cs
into
or
add
mov
enter
daa
cmp
pop
sbb
lea
xor
es
cmc
dec
je
push
fidivl
in
jno
lods
out
mov
ljmp
sbb
sbb
inc
dec
cmp
push
add
pop
jo
jne
xchg
pop
insb
xor
ss
add
mov
inc
lcall
push
call
inc
sub
xor
stc
popa
pop
jbe
ret
filds
arpl
fdivr
int3
inc
subl
shll
pop
sbb
xchg
outsl
sub
dec
nop
cwtl
pop
subb
shl
sub
js
dec
cmc
mov
push
pop
mov
je
mov
ds
mov
sbb
ja
fldenv
loope
test
mov
mov
and
lods
pop
mov
push
mov
pop
arpl
cmp
mov
fdivl
nop
sub
pop
cwtl
cmpl
fwait
addb
xor
pop
scas
xlat
rcl
inc
mov
pop
and
lds
pop
lret
and
int3
popa
pop
lret
sar
push
mov
push
pop
mov
fcoml
xor
scas
sub
xchg
mov
arpl
fidivrl
js
mov
inc
psubb
stos
fcoml
lea
lcall
jbe
or
push
add
xchg
cld
pop
push
dec
rcrb
jmp
fnstenv
pop
pop
fnstsw
and
xchg
bound
pop
pop
hlt
in
or
or
sbb
call
imul
jecxz
xor
cli
mov
inc
pop
push
jo
out
pop
insl
fisttpll
fs
pop
mov
lods
pop
dec
les
sbb
xchg
scas
in
mov
sbb
cmc
arpl
add
xchg
dec
pop
xchg
mov
xchg
incl
xchg
xchg
pop
push
pop
mov
lahf
out
aaa
outsl
pop
fdivrp
adc
sub
or
pop
lock
dec
add
shll
inc
pop
int3
xchg
and
int
push
add
fstpl
dec
cs
xor
mov
mov
xor
stos
pop
mov
test
out
push
fstpt
fcomp
and
lret
pop
or
and
pop
adc
imul
sti
sbb
cli
pop
jns
fs
xchg
pop
and
sub
les
scas
push
in
movb
lock
cltd
and
lret
jnp
fisubrl
scas
sub
fisubrs
pushl
mov
mov
enter
mov
dec
pop
int
sar
mov
fprem
sbb
mov
mov
int3
loopne
xor
pop
sub
outsb
inc
clc
scas
pop
push
test
rcl
cmp
lods
out
pop
push
inc
add
pop
mov
out
stos
dec
es
adc
mov
dec
icebp
cmp
inc
orl
imul
inc
in
adc
fmuls
jbe
inc
xor
fldl
outsl
jle
inc
cwtl
pushf
lret
int
dec
mov
outsb
mov
int3
mov
sub
pop
cmpsl
insb
sbb
addr16
mov
lret
cmpsb
mov
push
sub
lea
jne
insb
dec
pop
scas
cmpsb
in
cmp
into
xor
pop
adc
fimuls
std
pop
lahf
xor
push
pop
shlb
scas
mov
jecxz
and
mov
push
pop
adc
push
push
jae
sbb
mov
push
pop
jbe
xor
mov
addr16
mov
aas
pop
xorl
ret
sbb
pop
sub
lds
int
push
fcmovb
test
sarb
jmp
jg
insl
mov
lods
sbb
mov
sub
pop
add
int3
inc
lock
fs
dec
pop
dec
sub
lret
pop
pushf
push
scas
xorl
xor
in
push
lods
pop
mov
aam
inc
out
pop
jbe
rcrb
pop
xor
mov
add
sbb
lcall
lret
test
scas
das
in
pop
cli
addr16
pop
ljmp
call
dec
sub
ret
stos
adc
inc
jae
pop
xchg
add
xchg
cmp
pop
jb
jge
xchg
adc
pop
rorb
xchg
or
adc
push
cmp
pop
pop
adc
cmp
arpl
in
mov
repnz
or
lods
pop
mov
int
jp
test
mov
mov
cmp
loop
pop
pop
fldenv
std
fildll
ret
xor
dec
lcall
inc
sbb
pusha
test
aas
fidivrl
xor
rcrl
pop
mov
mov
push
mov
adc
and
ja
xor
in
out
pop
dec
int
xor
jmp
je
adc
pop
stc
cs
testb
enter
xor
int
xlat
aad
xchg
pop
cmpsl
jb
jp
pop
dec
pop
sbb
in
lea
ljmp
imul
test
loop
test
jnp
jns
or
iret
sub
push
cli
data16
pop
jbe
out
sbb
pop
ror
out
and
jmp
xlat
dec
push
pop
mov
test
xor
iret
mov
sbb
xchg
iret
jl
pop
push
push
cmp
scas
push
enter
adc
fisubrl
or
and
add
addr16
push
in
mov
fs
notb
insb
push
out
or
mov
jecxz
mov
int
or
fidivs
pop
xchg
adc
sub
out
pop
rorb
pop
lea
dec
loope
adc
sbb
cmc
mov
dec
inc
cmp
hlt
leave
sbb
mov
dec
bts
jmp
xor
mov
jp
xchg
sahf
xchg
xchg
pop
cmp
inc
mov
xor
mov
dec
popa
out
sbb
je
pop
sub
cld
jno
mov
or
cmpsb
incb
int
xlat
lret
lret
pop
jg
mov
iret
jp
push
stos
fs
jbe
push
fisubrl
xor
enter
pop
cmp
xchg
cmc
pop
in
dec
dec
lret
mov
les
popa
leave
sbb
in
inc
pop
into
inc
mov
push
in
mov
sub
and
nop
add
fists
xchg
xchg
dec
es
jmp
pop
pop
mov
jb
mov
in
mov
ljmp
push
and
fucomi
into
push
es
pop
jns
enter
mov
jne
push
aam
push
pop
test
sbb
stc
sti
pop
mov
rorl
dec
pusha
pop
in
mov
pop
and
cmpsl
pushf
aad
dec
lods
cmp
pop
imul
push
in
je
sbbl
ficoml
mov
in
cmp
mov
adc
ds
xchg
repz
cmp
inc
sbb
pop
test
clc
cmp
mov
fists
cmpsb
push
daa
negl
rcll
inc
or
mov
or
out
setne
lret
stos
sbb
push
js
incl
cs
into
push
push
sbb
pop
pusha
sub
inc
hlt
sub
xchg
and
aaa
cmp
inc
lods
in
mov
pop
pop
or
cli
sub
mov
mov
and
adc
call
mov
test
test
cmpsb
cwtl
mov
xchg
pop
inc
xchg
insb
jne
xor
jb
sbb
out
pop
pop
push
push
push
xor
adc
int
xlat
jns
sub
mov
jnp
pop
aas
jbe
jae
lods
adc
pop
int3
sub
movl
rorl
stc
int
andl
inc
pop
sub
mov
or
enter
lret
test
sar
lret
pop
cmpsl
std
aaa
lret
dec
not
pop
or
and
push
push
add
jmp
pop
push
push
cmp
jb
pop
aas
sub
inc
jecxz
in
pop
jo
or
insb
dec
pop
add
sbb
sub
std
or
inc
pop
cmp
inc
xor
sbb
lret
out
es
out
pop
int3
xor
inc
adc
xchg
pop
vpsubd
adcl
mov
jle
iret
jbe
pop
sub
lds
repz
or
es
fmul
aad
jae
out
xchg
loopne
dec
and
pop
loop
cmpsb
inc
xchg
push
mov
fdivr
pop
in
push
fwait
mov
data16
add
jo
dec
mov
dec
cli
mov
adc
pop
fnstenv
jbe
mov
inc
mov
sbb
scas
or
mov
pop
mov
aad
jl
mov
add
in
xor
es
mov
or
sbb
add
pop
cmp
cli
leave
pop
jns
in
hlt
inc
dec
mov
cltd
or
mov
ret
icebp
xor
mov
arpl
pop
dec
cmp
loop
xchg
dec
pop
test
pop
in
das
bound
sub
int3
sbbl
rep
pop
movsl
int
ret
bound
mov
push
jb
fst
push
sub
jae
pop
sarb
dec
and
dec
xchg
repz
jno
jmp
aad
shrl
int
sarb
cltd
aam
or
mov
xor
fstps
ja
push
lahf
jns
pop
fcomi
popf
addl
jnp
adc
insb
push
push
ret
lods
pop
clc
pusha
jo
push
cmp
pop
push
in
pushf
fisubl
inc
pop
aad
mov
mov
sbb
stos
jmp
xchg
push
sub
nop
or
add
call
jg
fadd
xchg
mov
je
insl
and
scas
dec
ret
mov
pop
or
sub
clc
ljmp
jb
adc
jns
mov
jecxz
lahf
pop
shll
adc
pop
sbb
push
jp
inc
mov
lret
jnp
lret
pop
adc
cmpsl
bound
jbe
jle
mov
std
dec
xchg
sbb
repz
call
pop
shrb
stos
or
pop
mov
pop
rorb
jae
mov
loope
test
mov
in
push
sbb
or
mov
data16
jb
mov
mov
jbe
pushf
outsb
cwtl
call
push
inc
pop
in
xchg
aam
int
out
or
cmp
mov
jl
js
mov
pop
insb
push
inc
mov
pop
movsb
mov
push
add
leave
test
in
cmp
adcb
mov
xor
sbb
pop
loop
enter
jbe
pop
cmc
mov
push
fcmovnb
mov
aam
pop
jnp
cli
pop
jne
pop
stc
int
orb
push
sbb
jl
cmp
inc
rol
pop
repz
ret
sub
mov
insb
pushl
pop
or
sbbb
loop
push
data16
testl
cmpsl
out
or
jae
mov
daa
cmp
pop
cmp
jmp
in
pop
or
mov
mov
gs
and
sar
sbb
pop
dec
cltd
cwtl
iret
movsl
mov
jo
mov
test
insb
lods
sub
push
stos
or
pop
mov
clc
mov
das
or
fistpl
pop
sti
inc
jmp
orl
daa
lods
fcmovne
addb
pop
mov
mov
jno
or
pop
pop
mov
in
jo
xorl
bswap
jb
rcrb
movsl
dec
scas
es
jnp
add
mov
or
adc
pop
jb
adc
dec
pop
sbb
pop
mov
pop
fs
dec
stc
repz
lea
adc
lods
bound
mov
and
sbbl
inc
or
xchg
movsb
shrl
pop
mov
lahf
mov
adc
jae
sbb
xor
in
cmp
fmuls
mov
lcall
xor
scas
push
and
inc
ret
dec
cmp
pop
dec
cmc
int
enter
or
data16
test
jecxz
fldcw
jb
push
and
fistps
popf
popa
aam
int
dec
mov
loopne
mov
push
mov
inc
cltd
adc
xor
fistl
push
pop
xor
mov
mov
mov
adc
push
das
mov
jg
daa
adc
dec
pop
hlt
sbb
mov
xlat
mov
and
jmp
shrl
mov
cld
mov
xor
mov
or
imul
add
inc
mov
mov
int
mov
push
cmp
xchg
rcll
pop
xchg
ja
mov
outsb
jae
out
xchg
ret
jmp
push
pop
scas
rol
fsubp
dec
nop
imul
lret
xor
pop
test
sbb
pop
ret
int
mov
test
clc
cmp
inc
scas
pop
pop
and
add
mov
sbbb
mov
mov
mov
cmp
int
fldt
pop
mov
out
les
xchg
lret
dec
imul
outsl
xor
rcll
jecxz
push
push
xchg
mulb
pop
mov
pop
dec
ljmp
es
jecxz
xchg
inc
int
xor
aam
mov
mov
pop
lods
enter
sbb
int3
pop
cmpsb
inc
call
cmp
sub
bnd
decl
sarl
inc
iret
sbb
mov
mov
xchg
pop
les
scas
pop
repnz
jg
fwait
sub
sbb
push
push
dec
or
clc
std
movsb
pop
popf
dec
fsubs
pusha
dec
mov
mov
jae
pop
or
popf
out
cmp
adcb
and
mov
pop
dec
ror
jg
sbb
jbe
push
test
xor
sub
jns
insl
jecxz
mov
sbb
in
js
jo
pop
arpl
aad
mov
mov
adc
lret
sbb
aaa
test
addps
xor
xor
rclb
data16
inc
loopne
movsl
fistps
lahf
ret
in
dec
fstpt
aad
sbb
sbb
jae
stos
xor
imul
loop
mulb
outsb
inc
sbb
das
jle
fimull
ret
test
cmp
in
pop
mov
cmp
pop
jb
mov
int3
pop
xchg
test
outsb
pop
dec
lods
ds
jbe
ja
mov
dec
pop
dec
sub
cli
mov
pop
jecxz
punpcklwd
pop
xchg
and
cwtl
mov
fsubr
xchg
sbb
clc
push
bound
pushf
cmp
int
pop
pop
leave
lret
xchg
sar
and
scas
sti
pop
gs
mov
sbbb
adcb
fsubrl
mov
pop
xchg
cltd
push
cmpsb
adc
stos
xor
test
fdivl
enter
mov
lods
test
pop
arpl
adc
pop
pushf
jbe
sbb
inc
cmp
pop
stos
xchg
pusha
jno
mov
cli
mov
adc
sbb
and
push
stos
js
fbld
mov
loopne
or
je
sub
mov
jno
jp
jle
jbe
pop
outsl
popf
pop
push
sbb
mov
sbb
sahf
or
jl
cmp
test
add
int3
stos
mov
test
mov
inc
lret
outsl
pop
fmulp
sub
pop
jg
dec
inc
fwait
push
push
loop
mov
pop
xchg
insl
lea
loope
jge
scas
xorb
lods
int3
mov
dec
pop
push
outsl
lret
test
and
stos
pop
adc
pushl
icebp
xchg
jle
pop
push
and
sbb
int
and
or
call
inc
stc
push
mov
jb
and
and
jnp
push
pop
insl
xchg
push
leave
sbb
rclb
int3
lods
sub
xorl
sbb
incl
jmp
lret
insl
repz
cmp
jb
les
lret
pop
cmpps
dec
mov
pop
mul
adc
repz
or
mov
out
dec
clc
gs
cli
popl
push
sub
jp
fbstp
test
pop
std
outsb
push
enter
pop
sbb
mov
cmp
push
dec
rcrl
inc
fidivl
mov
pop
lcall
sahf
sbb
xchg
lret
jbe
nop
pop
pop
out
aam
std
push
inc
sbb
movsb
push
jno
pop
dec
mov
push
or
mov
or
adc
pop
sbbl
cmp
iret
xor
cltd
fs
imul
jl
lahf
sub
sti
jno
mov
xor
add
inc
and
adc
loope
pop
dec
push
cwtl
mov
dec
xchg
pop
js
pop
dec
jns
inc
insl
mov
inc
ficompl
movsb
aaa
orb
out
cmp
mov
push
xchg
pop
inc
xchg
xor
xorb
mov
mov
sub
mov
cmp
loopne
cmpsb
in
dec
ds
loopne
adc
xchg
xor
pop
adc
mov
inc
xchg
sbb
mov
pop
add
xor
pop
push
mov
lret
add
adc
scas
iret
adc
mov
mov
push
jmp
fstpl
testl
data16
jae
add
cld
fsubrl
jno
pop
jb
push
loopne
sbb
popf
pop
arpl
sub
in
mov
rcrb
dec
jl
or
mov
sbb
jne
loop
pop
shlb
push
pop
dec
stc
scas
sbb
nop
pushf
pop
int3
sahf
jecxz
jb
hlt
les
jbe
mov
rorb
mov
pop
enter
or
push
movsl
pop
inc
xor
pop
sub
icebp
pop
jb
sarl
mov
ret
test
stc
xchg
cmp
pop
or
fsubrs
filds
mov
sbb
ljmp
xlat
orb
outsl
sub
dec
fcomps
and
and
add
dec
pop
outsl
mov
xchg
int
pop
es
leave
fs
or
stos
add
rcrb
jns
push
lcall
sbb
out
inc
sub
into
movsb
std
cmp
mov
hlt
adc
stos
pop
dec
sub
push
xor
pop
cmc
or
xchg
loop
push
or
lods
pop
lahf
sub
cld
dec
aam
inc
pop
test
nop
dec
stos
mov
in
lds
hlt
insl
adc
pop
pop
repz
pop
pop
dec
mov
loopne
pop
cltd
xchg
pop
pop
xchg
shl
adc
dec
mov
pop
and
mov
jne
js
cmp
lahf
lret
dec
pop
call
push
jo
fsubrs
shll
pop
or
mov
add
and
int3
pop
xchg
fldenv
jmp
decl
ds
sbb
lods
inc
and
fsubrs
jge
mov
cmp
cld
ja
sbb
pop
xchg
push
daa
mov
sbb
mov
cmp
or
mov
into
pop
scas
jmp
pop
cmpsb
pop
lods
pop
mov
rcr
stos
jo
pop
popa
cmp
loope
cmp
sti
push
adc
pop
xor
push
movsl
mov
xchg
addps
push
out
mov
pop
mov
fbstp
cld
lret
push
mov
ret
pop
ja
add
sbb
mov
dec
mov
jmp
sub
fcompl
enter
push
pop
shr
test
lods
jo
mov
sbb
out
pop
test
mov
mov
iret
repz
clc
test
jns
and
jp
add
pop
fistl
out
fimuls
imul
and
sbb
mov
lods
lock
movsb
mov
xor
sbb
pop
inc
jo
lods
mov
or
lahf
lret
int3
pop
mov
iret
xlat
jb
cli
sbb
pop
push
sub
fmull
loop
cmp
push
pop
mov
icebp
js
jl
sub
aaa
cs
aad
sub
mov
xor
and
sbb
or
fxch
ret
mov
mov
mov
and
sub
ljmp
or
pop
sub
add
inc
pop
int
icebp
push
divps
js
xchg
in
adc
inc
loope
push
hlt
in
cmp
pop
xchg
mov
mov
scas
std
push
lcall
cs
dec
jae
addps
xchg
mov
inc
cmp
adcl
push
sub
jmp
mov
mov
dec
int3
cmp
lds
adc
fiadds
movl
xchg
stos
movups
jecxz
pop
dec
jbe
mov
sbb
int
cs
jmp
aad
pop
loope
xchg
adc
movsl
jb
lcall
pop
sbb
insl
stos
mov
movsb
pop
add
pop
loop
insb
ret
or
add
inc
out
jle
jmp
mov
es
insl
out
push
xor
mov
push
ret
stos
cld
int
iret
pop
fs
mov
pop
mov
mov
cmp
fiadds
into
pop
or
rolb
fsubs
pop
xor
arpl
pushf
pop
je
enter
out
clc
out
dec
jg
sbb
aaa
pop
mov
inc
sbb
mov
push
ljmp
jmp
jbe
xor
insl
add
pop
or
mov
and
sbb
stos
adc
loopne
pop
ret
add
mov
out
pop
push
xor
xchg
cli
pop
jb
out
mov
into
inc
dec
test
cltd
inc
ret
jle
negl
xor
gs
mov
xchg
inc
sub
pop
mov
jp
ret
sbbl
add
sti
push
jno
loop
scas
cmpsb
in
xchg
and
push
mov
mov
push
jle
aam
rcr
or
mov
hlt
mov
scas
cmp
scas
or
popf
stos
pop
ja
les
lret
inc
pop
inc
push
enter
sub
pop
add
iret
pusha
push
push
pop
or
push
jbe
repz
sub
dec
call
into
xchg
js
shr
bound
pop
cli
int3
enter
dec
cmc
pop
scas
jb
mov
cltd
xchg
pop
sbb
int3
aas
fsubrp
inc
fcompl
nop
or
adc
jne
pop
inc
gs
pop
jmp
movsb
imull
xchg
ret
adc
js
je
aam
rcr
and
push
fwait
dec
jnp
or
fisubl
jo
sbb
push
adc
dec
leave
pop
push
adc
negb
fbld
fnstsw
sub
xchg
xor
pop
stc
scas
jno
out
jg
pop
adc
lods
and
cltd
pop
stos
mov
cmpsb
pop
insb
and
sbb
ja
dec
pop
pop
sub
pop
lahf
js
pop
divb
call
mov
scas
sti
mov
add
jne
rclb
mov
int3
outsl
xchg
mov
scas
sbb
mov
andb
jo
pop
push
in
adc
scas
shrl
sbb
cmpsb
clc
jp
pop
stc
xor
mov
pop
sbb
repz
lds
movsb
in
int
adc
pop
pop
sub
add
pop
inc
add
cmp
iret
enter
push
scas
sub
lods
sti
aam
cmp
lahf
fnstcw
pop
nop
pop
push
cmp
nop
inc
pop
out
out
lods
jge
sub
dec
icebp
or
push
dec
stc
or
popf
inc
lret
ficompl
or
mov
add
imul
pop
sbb
and
int3
pushf
mov
mov
jo
xchg
dec
sbb
out
and
pop
inc
dec
ljmp
icebp
pop
jp
inc
lds
outsl
out
out
xor
call
sbb
mov
sbb
fidivs
in
push
sbb
xor
pop
sbb
jbe
ja
jne
push
mov
push
cli
pop
lcall
pop
sbb
sbb
lea
fsubrs
jo
cld
mov
xchg
insl
cli
clc
push
sbb
push
pop
dec
movsl
addl
incb
pop
pop
sub
fmul
clc
push
add
push
int3
xchg
sbb
mov
pop
ret
jns
sub
notb
lods
jnp
arpl
cmp
fsubr
cmp
in
jecxz
vaddps
aas
push
adcl
jl
fimuls
leave
mov
inc
jmp
xor
test
sahf
pop
loope
imul
scas
jne
mov
sub
movsl
pop
arpl
nop
mov
sub
pop
mov
fisttpl
mov
inc
pop
cmp
ror
mov
fdivs
mov
jbe
mov
xchg
sbb
aas
dec
pop
sub
xor
jne
lods
pop
in
and
mov
add
sti
xchg
divl
pop
pop
lret
xor
push
dec
fstp
jg
lods
mov
call
push
pop
mov
push
jecxz
jo
mov
sbb
lods
les
out
inc
bound
aaa
ret
dec
int3
cmp
aad
inc
cmp
jge
popf
or
int
cmp
loop
xchg
add
mov
fistpl
inc
xor
xor
lcall
inc
pop
rorb
xchg
mov
dec
pop
mov
mov
add
xor
pop
lea
push
sbb
pop
sbb
dec
notl
popf
std
mov
arpl
daa
or
fwait
mov
std
xor
pop
js
cs
pop
int3
inc
clc
enter
cmp
dec
xor
sub
dec
pop
pop
add
push
xor
sub
or
pop
repz
mov
loope
push
mov
push
scas
lods
in
pop
sbb
jecxz
imul
cmp
lahf
pop
je
mov
rsqrtps
fldenv
ja
mov
cs
sub
fmulp
pop
jb
and
lock
test
mov
push
jp
mov
xchg
pop
dec
cwtl
cltd
mov
fists
cmp
pop
std
mov
inc
add
mov
movsl
test
mov
pop
cmpsb
cltd
lahf
mov
sub
sti
jb
cmp
dec
xchg
push
sub
call
iret
int
pop
add
mov
jo
mov
or
es
in
fistpl
scas
arpl
mov
mov
mov
inc
push
lock
xchg
sub
stos
push
pop
sahf
pop
adc
push
jb
jecxz
lcall
outsb
aaa
subb
pop
iret
ja
dec
push
dec
inc
xchg
lcall
mov
inc
pop
stos
cld
jmp
dec
idiv
icebp
pop
and
jecxz
lcall
mov
dec
lock
cld
jne
in
jbe
pop
pop
sbb
sahf
or
jle
in
push
pop
xchg
cmpsl
icebp
pusha
ja
jg
cmp
stos
sub
pop
and
and
dec
fs
inc
mov
rol
mov
clc
xchg
pop
aas
xchg
jbe
jge
xlat
cmpb
jae
push
hlt
or
adc
pop
mov
mov
push
call
in
mov
out
in
pop
rorb
mov
xor
pop
xchg
fidivs
jo
pop
mov
imul
mov
xchg
pop
sub
in
jo
mov
push
movsb
sub
cmp
mov
mov
or
fs
test
jp
jo
les
push
sub
inc
pusha
adc
xchg
pop
pop
jl
pop
int
ja
test
adc
add
add
cmc
repnz
sbb
pop
cmp
lds
push
outsl
das
adcb
divb
out
es
in
pushf
mov
cmp
scas
jno
lahf
add
outsl
mov
fisubrs
mov
das
pop
je
loop
and
std
test
int
jmp
lcall
or
push
and
inc
sub
xchg
pop
jno
aam
and
mov
icebp
scas
mov
js
inc
xor
cmp
mov
pop
jecxz
popa
loope
adc
call
sbb
pop
fstpt
pop
fcom
mov
addr16
jbe
jp
lea
sbb
sub
pop
xor
dec
cli
xor
mov
jle
lods
or
out
pop
rcll
jp
pop
call
fwait
pop
sti
dec
pop
pop
and
mov
jecxz
jmp
xchg
test
scas
mov
gs
pop
sbb
repz
jnp
sarl
inc
sub
in
xchg
testb
pop
pop
fisubl
aam
loop
jp
lret
cmp
subb
int3
pop
arpl
mov
mov
into
sbb
pop
dec
adc
je
pop
sub
ja
xchg
test
dec
fwait
pop
cli
pop
push
lds
nop
sbb
jb
in
cld
xor
cmp
xchg
les
jmp
fcoms
repz
inc
rcrb
leave
stos
aad
add
test
lcall
aaa
lock
mov
aam
lahf
add
or
mov
dec
pop
sbb
int
push
xchg
das
pop
iret
xchg
div
inc
and
mov
repnz
sbb
sarl
jle
push
pop
jnp
push
cmp
loop
cmp
in
jb
pop
cmp
xor
jnp
shr
xchg
adc
insb
inc
pop
jecxz
push
mov
enter
push
sbb
cmp
popf
bound
or
or
pusha
pop
imul
pop
push
repz
pop
dec
shll
scas
ja
xchg
loopne
imul
outsl
xchg
pushf
xor
sbb
ret
mov
and
dec
lahf
mov
subl
nop
add
fisubrl
pop
jle
repnz
sub
aas
sbb
cmp
xchg
cltd
shlb
pop
xchg
or
pop
adc
mov
add
dec
mov
pop
or
sbb
lea
es
dec
adc
std
pop
bound
push
xchg
pop
xchg
dec
mov
pusha
sub
sbb
enter
pop
rol
mov
pop
jbe
daa
outsl
mov
xor
lea
xchg
int3
pushf
cmp
popa
ror
pop
jo
jmp
cltd
lock
dec
adc
bound
imul
ficomps
fucomi
xor
inc
repz
mov
out
push
std
inc
mov
aaa
cmc
daa
imul
pop
rorl
test
pop
aaa
ret
mov
pop
jl
sti
test
iret
scas
aaa
add
jmp
pop
fistps
stos
cmp
jb
cmp
data16
or
inc
or
push
mov
fs
scas
jbe
xor
mov
mov
test
notl
pop
jbe,pt
insb
and
dec
lea
pop
sahf
mov
jns
pop
push
ljmp
jo
mov
repz
shrb
xchg
gs
xchg
mov
ds
scas
ret
loop
cld
mov
add
push
and
sub
dec
xchg
or
cmpl
sbb
clc
cmpsl
int
adc
cmp
push
mov
sbb
mov
xchg
cmp
lcall
pop
adc
mov
mov
dec
jl
scas
xchg
add
jns
mov
push
pop
xor
imul
loop,pt
jbe
sti
pop
sbbb
sahf
enter
sub
pop
lods
sbb
adc
add
jmp
jge
pop
imul
jbe
and
and
push
adc
xchg
fwait
pop
push
js
mov
fisubrl
sub
lea
pop
or
pop
decl
ds
pop
mov
aaa
mov
adc
call
jecxz
int3
push
pop
pop
and
out
mov
das
adc
pop
addr16
and
stos
inc
stos
sbb
les
mov
hlt
inc
push
pop
cmc
inc
mov
in
mov
pop
sub
not
lea
ja
xor
jae
push
jnp
mov
xor
add
dec
enter
xor
imul
mov
mov
push
sbb
or
enter
mov
fadds
test
inc
mov
mov
gs
aad
enter
mov
mov
xchg
pop
lds
and
pop
lock
test
xor
sbb
lea
int
xor
push
mov
jg
cmp
lret
aam
pop
dec
lahf
mov
dec
sbb
jl
xlat
xchg
pop
testb
leave
rcrl
pop
dec
int3
jo
dec
mov
int
cmpsl
lods
mov
imul
pop
pop
orb
jbe
mov
fisubl
sub
mov
pop
cwtl
jbe
mov
mov
call
and
pop
add
idivl
jbe
mov
jl
mov
sahf
bound
dec
xor
push
ljmp
imul
jb
scas
pop
jmp
and
icebp
pop
int
movsb
fs
xchg
jle
pop
dec
jo
jge
xor
mov
mov
lahf
cltd
or
inc
inc
pop
sub
xlat
pushf
jge
mov
mov
fimull
cwtl
into
sbb
cld
pop
pop
not
lea
int
or
daa
clc
movsl
mov
or
jns
pop
sub
cmp
adc
mov
int3
xchg
in
pop
mov
and
fcomps
push
sbb
stc
push
leave
lds
adc
lret
or
cmp
cmp
subb
cmp
mov
fiaddl
int3
and
push
loop
into
ss
aad
in
psrad
imul
cltd
subl
test
xor
test
jnp
int3
jecxz
mov
cmp
sub
pop
sub
and
add
int
xor
and
cmp
mov
pop
lcall
mov
cwtl
sub
lahf
mov
aad
and
bound
lock
mov
pop
shrb
out
bound
pop
daa
pop
lock
pushf
mov
mov
pusha
xor
adc
inc
xchg
push
sub
dec
mov
je
ljmp
dec
xchg
repnz
pop
mov
stc
out
pop
mov
hlt
mov
pop
sbbl
push
out
pop
dec
sbb
lahf
outsl
pop
push
orb
cld
hlt
push
sub
xchg
lods
ljmp
rorb
pop
fimuls
pop
xor
testl
aad
mov
cmp
pop
dec
inc
push
cld
cmpsl
adc
mov
pop
ret
pop
sub
int
shlb
lret
xchg
or
mov
scas
jle
xorb
div
lea
lret
pop
cmpsb
xchg
adc
je
pop
xor
daa
movsb
imul
ret
adc
or
das
or
lods
jae
sbb
pop
int
dec
push
das
mov
lods
call
insb
sub
popa
inc
mov
out
cmpsl
ret
sub
imul
jmp
mov
cwtl
push
push
mov
jb
cmp
repz
xlat
in
cmp
mov
clc
pushf
xchg
pop
cli
pop
scas
mov
sbb
sbb
clc
pop
sbb
pop
adc
rorl
int3
adc
ja
and
icebp
pop
pop
mov
dec
lcall
dec
lret
mov
push
aam
pop
pushf
mov
xchg
out
mov
popf
push
dec
jecxz
jne
pop
mov
fldl
iret
cli
lret
mov
push
ds
push
sahf
dec
mov
fnsave
orl
adc
jae
or
or
cmp
mov
dec
rcrb
fisttpl
pop
outsb
enter
cmp
lods
xchg
and
pop
jecxz
mov
push
sar
ja
and
adc
lcall
xchg
jg
jb
fcoml
movsl
dec
sbb
fisttpll
lea
adc
iret
scas
pop
movsl
out
add
stc
pushf
lock
cmc
loop
icebp
pop
sbb
inc
cmp
jmp
leave
push
mov
cmp
int
xchg
sub
add
aad
and
scas
sub
stc
inc
adc
xchg
stc
push
lahf
mov
and
pop
pop
inc
mov
pusha
pop
pop
fisttpll
jae
sbb
pop
adc
cmp
pushf
xchg
mov
pop
push
inc
pop
sub
cmp
into
lds
cmp
jbe
lods
inc
cli
mov
pop
add
sub
loopne
in
rorl
and
or
roll
imul
and
pop
rcrl
pop
pop
push
adc
inc
xor
inc
enter
pop
mov
adc
push
cmc
pop
pop
es
lret
and
popf
ja
rcll
out
fs
or
call
lahf
pop
shlb
pop
ss
nop
repnz
pop
xor
faddl
pop
pushf
pop
mov
push
inc
sbb
and
inc
cmp
inc
xchg
clc
pop
adc
aaa
sub
and
push
mov
pop
adc
loop
dec
xor
je
pop
inc
jns
jbe
insl
cmp
ficomps
jo
mov
push
pop
mov
sbb
nop
dec
mov
insb
inc
adc
add
pushf
pop
subl
pop
inc
adc
jae
pop
inc
popa
pop
pushf
and
test
aaa
imul
out
pop
inc
test
xchg
in
pop
pop
stos
into
lods
sub
out
rcl
int
dec
xchg
jp
lahf
out
and
add
pop
pop
pop
mov
mul
xchg
pop
jg
add
sbb
mov
cmpsl
mov
dec
test
mov
cmp
lret
add
push
dec
sbb
or
pop
push
cmp
int
xchg
pop
lcall
and
dec
xchg
jl
lds
pop
int3
rclb
mov
pop
hlt
sbb
pop
lahf
xchg
lret
or
loope
mov
lcall
fldl
pop
int
mov
ds
stos
in
sub
jle
stc
cli
jb
pop
lcall
inc
pop
and
bound
push
dec
fwait
pop
js
les
dec
jae
repnz
sub
sbb
push
stc
cmp
pop
out
jl
int
sbbl
add
mov
or
pop
mov
int
leave
pop
adc
fldcw
and
pop
jno
lea
push
mov
popa
pop
int
call
cltd
pop
inc
push
subb
repz
adc
jb
pop
data16
mov
int3
nop
adc
mov
sbb
pusha
pop
bound
sbb
mov
mov
push
stos
sub
sub
in
add
je
gs
pusha
lds
xchg
add
mov
xor
ljmp
mov
es
and
sub
mov
cmc
lret
mov
repnz
mov
lds
cmp
push
mov
inc
sub
in
jbe
mov
adc
imul
mov
or
jecxz
pmaxub
ret
cltd
mov
pop
pop
sahf
cmp
add
jp
out
pop
ljmp
int
rorl
fisttpl
pop
mov
pop
dec
cld
mov
testb
push
loopne
cs
xor
cli
sbb
pop
xchg
aas
sbb
in
mov
mov
subl
sbb
arpl
pop
nop
aam
and
xchg
jns
pop
mov
lret
or
inc
xchg
cmp
pop
inc
add
jmp
adc
popf
pusha
jb
insl
sbb
mov
jbe
pop
adc
push
sti
and
sub
arpl
pop
int
stc
inc
xchg
cmpsb
adc
push
pop
ss
inc
std
mov
xchg
mov
icebp
sub
adc
cli
jns
pop
pop
dec
arpl
scas
mov
mov
sbb
call
jp
add
aas
pop
mov
into
pushf
scas
sub
sbb
xchg
test
xchg
loopne
or
subb
pusha
ja
aad
out
add
mov
ljmp
jno
out
call
dec
loop
jo
js
outsb
int
mov
inc
fidivrl
adc
repnz
cli
mov
fs
out
addr16
xor
mov
call
cmpsb
pop
push
aad
xor
in
mov
xlat
pop
popfw
jno
fistl
pop
out
xor
jle
pop
pusha
mov
adc
movsb
lret
dec
mov
sbb
mov
cmp
lds
jne
gs
ds
std
jbe
mov
inc
inc
xchg
mov
test
cmc
mov
xchg
pop
jecxz
fs
jmp
out
les
fisubl
or
mov
xchg
and
add
dec
pop
xor
ficoms
pop
sub
jnp
xlat
popa
lea
jge
cs
dec
pop
mov
pop
mov
aam
flds
sbb
stos
mov
pop
adc
int3
xchg
xchg
mov
or
mov
jmp
fnstsw
sbb
lods
je
stc
ret
cli
dec
fists
sub
pop
or
or
adc
addb
test
mov
ljmp
loop
scas
mov
mov
mov
add
cltd
pop
pop
cmpsb
scas
cs
or
fs
mov
popf
mov
test
fcom
jecxz
lea
sahf
xor
nop
and
sbb
pop
xor
cmp
jnp
repz
enter
jno
jae
dec
pop
outsl
andl
jo
pop
mov
test
push
xorb
sub
lock
jbe
pop
js
push
enter
sbb
jge
pop
insl
movsb
int3
jmp
pop
xor
cmp
mov
cs
repnz
pop
nop
adc
fcmovnb
sbb
les
arpl
scas
clc
adc
push
sbb
dec
jmp
cltd
call
dec
push
jge
fcomi
addr16
bound
sbb
sub
add
inc
dec
outsb
stos
push
mov
call
shl
and
std
pop
fistps
pop
mov
dec
pop
cmp
pop
sub
fsubl
orb
ja
ljmp
xor
test
or
push
pushf
fnsave
out
inc
loop
mov
rcrl
xchg
orl
pop
daa
jb
inc
mov
loopne
sbb
in
lea
xchg
pop
pop
popf
or
push
int
pop
pop
pop
and
and
jbe
sbb
dec
xchg
pop
push
cmpb
pop
xor
pop
dec
jae
or
out
mov
push
pop
aas
mov
xchg
pop
sti
jmp
adc
insl
dec
pop
data16
mov
pop
inc
xchg
jnp
pop
mov
pop
mov
push
roll
mov
out
fidivrl
push
inc
pop
mov
loope
jo
lret
jno,pn
loop
test
adc
dec
std
jno
xor
jge
xlat
xchg
jecxz
shrb
pop
dec
sbbl
jle
pop
jns
ljmp
pop
imul
sahf
es
mov
lret
cmp
cli
enter
dec
or
xchg
jp
pop
into
jbe
call
cltd
lea
js
xchg
lods
in
int3
int
stos
mov
outsl
fcoms
pop
mov
vcmpps
push
push
mov
xchg
mov
pop
xor
loopne
lahf
dec
stos
cli
sti
mov
cld
xchg
mov
cltd
cmc
pop
ja
sub
data16
add
inc
lods
enter
lea
mov
shr
pop
jbe
mov
dec
mov
repz
std
stc
test
dec
fs
pop
lret
cmp
jbe
sbb
inc
pop
lods
outsb
fisttpll
sub
shrb
int
rcr
ja
jecxz
jne
pop
xchg
lock
pop
xor
lahf
mov
dec
inc
stos
jle
inc
push
pop
movsb
add
vmovddup
mov
mov
mov
sub
ss
fildll
jo
out
js
mov
jl
mov
ret
pop
cmp
test
ret
sub
inc
jno
out
pop
mov
sbb
mov
jle
dec
loopne
pop
push
inc
jbe
scas
jne
xor
xchg
cltd
lods
sub
or
dec
lock
mov
hlt
add
push
and
pop
xor
mov
adc
xchg
das
shlb
xchg
pop
insl
pop
jnp
bound
mov
push
adc
iret
inc
mov
movsl
xchg
push
test
mov
test
pop
jp
sub
scas
add
ret
ds
sbb
pop
push
adc
xchg
cmp
push
mov
in
xchg
pop
and
and
mov
xchg
fsubr
cwtl
xchg
imul
mov
out
pop
aad
push
lahf
out
clc
push
pop
pop
add
adcb
jns
push
gs
push
push
lods
jge
addr16
inc
sub
or
jno
inc
addr16
sbb
pop
hlt
daa
sub
pop
int3
jle
lret
pop
inc
mov
cwtl
jns
xchg
into
jg
leave
pop
mov
imul
gs
lea
sahf
pop
stos
int
imul
idivl
push
adc
xor
out
icebp
dec
or
xchg
pop
int
daa
mov
ret
imul
mov
mov
out
xor
cmp
jnp
ljmp
xchg
sbb
jne
push
sbb
imulb
pop
jb
inc
iret
xchg
dec
lea
jnp
pop
inc
aam
rorl
pushf
xchg
imul
cs
test
sub
ss
sbb
inc
dec
xchg
inc
sahf
xor
adc
push
stos
sub
in
add
ss
lds
or
cmc
scas
mov
xor
fwait
sbb
cmp
leave
dec
mov
aam
frstor
adc
sbb
jne
int3
out
xchg
jmp
es
mov
ret
push
pop
rcrb
mov
mov
inc
pop
mov
sub
mov
leave
pop
int
sbb
cwtl
aaa
je
pop
push
jbe
inc
add
mov
loop
cmpsl
lret
loopne
out
cli
cmpsb
call
pop
mov
int
mov
pop
adc
and
jae
mov
mov
bound
pop
dec
xor
test
negb
pop
pop
or
pop
adc
cwtl
mov
daa
int
cmp
adc
or
imul
in
in
jbe
pop
dec
push
inc
xchg
and
addr16
lods
je
jb
out
push
sbb
push
adc
push
cmp
push
mov
stos
dec
jno
les
mov
ret
mov
cmc
loope
fcomps
pop
stos
insl
mov
jl
pop
ret
negl
test
add
mov
jns
pop
out
cmp
nop
stos
or
ljmp
xor
outsl
sbb
push
mov
push
cld
jo
cmp
pop
scas
jle
fnstcw
sub
mov
jecxz
fcoms
clc
pop
lods
cltd
cmp
pop
scas
or
int3
add
xchg
cmp
inc
clc
ficomps
sbb
and
sarb
fsubrs
xor
pop
cmp
insb
mov
loop
in
arpl
inc
das
adc
pop
pop
ja
cli
pop
sub
sahf
dec
sbb
mov
nop
mov
xchg
jge
pop
xor
mov
pop
pop
xlat
add
rcrb
int
mov
sub
ret
or
or
pop
daa
mov
dec
push
insb
pop
cli
imul
sub
pop
sbb
ja
lahf
xchg
mov
mov
pop
aad
lret
pop
cld
outsb
pop
int
cmpsb
or
and
stos
mov
add
pop
stc
xchg
fistpl
cs
pusha
and
pop
in
fadd
xchg
sbb
pop
stc
mov
lret
outsb
pop
pop
lea
test
ret
loope
push
inc
add
and
out
lods
mov
fimuls
jbe
loope
push
ss
fstl
add
mov
cmp
imul
mov
pop
sarb
jae
pop
aas
scas
aaa
pop
mov
int3
xor
stos
call
fnstenv
or
or
jecxz
outsl
pop
or
out
and
rcrl
cmpb
fists
jns
test
in
clc
loopne
add
movsb
xchg
pop
cmp
test
pop
push
jecxz
push
pop
inc
mov
dec
sbb
scas
rcrb
pop
cmp
inc
in
pop
lea
sarb
add
fistpl
int3
mov
js
add
jl
or
sbb
out
mov
sub
sub
mov
mov
and
sub
pop
xchg
dec
mov
ljmp
repz
mov
xchg
mov
cmp
pop
aad
add
jge
pop
into
movsb
pop
divl
jbe
mov
xchg
int
or
pop
adc
adc
pushf
andb
cmp
lea
das
dec
xchg
nop
xchg
cld
mov
mov
pop
sub
repz
pop
pop
sbb
imul
pop
jne
fcoms
pop
fmul
sahf
nop
pushf
pop
mov
adc
mov
cmp
movsl
dec
in
out
push
aam
lahf
mov
jae
fstpt
pop
and
loop
pop
inc
imul
cmpsb
int
pop
mov
sub
rep
insl
jg
out
dec
or
insb
push
push
mov
mov
mov
mov
aam
jbe
mov
sahf
movl
pop
lea
call
je
fstpl
push
pop
cmp
push
xchg
in
mov
xchg
js
pop
adc
mov
in
cmpsl
and
rcrl
loop
cmp
popa
inc
cmp
mov
out
int3
movsl
xchg
pop
out
into
cmp
sub
cld
cltd
stos
mov
dec
and
push
rep
add
pop
mov
cli
xchg
sbbb
fistl
pop
divl
mov
jmp
lods
aaa
outsl
out
std
stc
fstps
daa
es
lret
jecxz
mov
ja
mov
scas
add
popf
pop
ror
pop
in
sub
lret
mov
add
test
nop
pop
std
xchg
lret
pop
shlb
pop
mov
fldt
sbb
pop
xor
xor
cmp
sbb
iret
ret
lods
daa
pop
jge
pop
push
lods
inc
aas
pop
int
stos
into
xchg
mov
fistpl
adc
pusha
or
jp
inc
daa
xchg
in
into
lea
mov
dec
lods
mov
call
pop
push
sbb
adc
jbe
pop
pop
out
stos
cmp
fnstenv
fadds
shl
js
pop
pop
imul
jno
xchg
mov
mov
stos
inc
loope
pop
mov
sbb
jmp
xchg
jno
pop
insb
adc
fisttpl
dec
addr16
and
or
fiaddl
ret
pop
in
jns
jg
xlat
iret
sbb
negb
loop
add
popa
insl
sub
or
add
mov
mov
jb
cmp
call
mov
xchg
pop
dec
adc
mov
repz
mov
mov
out
push
dec
iret
loop
fidivl
addb
adc
lcall
std
xchg
xchg
or
xor
push
jns
or
dec
mov
sti
xor
pop
rorb
int
xchg
push
xchg
jmp
push
pop
sbb
push
add
inc
shll
cmpsb
sahf
xchg
orl
scas
repnz
out
push
mov
push
fildll
pop
xchg
sbb
in
jnp
pop
insb
dec
cltd
xchg
scas
test
lahf
pop
popf
mov
sub
and
ja
adc
push
fptan
pop
pop
cmpsl
lea
stc
lret
loope
stos
and
mov
lds
movsl
and
out
int3
mov
pop
lods
ds
sbb
test
jns
pop
lds
add
roll
arpl
pop
pop
jp
int
and
mov
adc
jmp
mov
cmpsb
cmp
stos
jmp
pop
iretw
mov
jbe
cld
add
dec
bound
and
mul
int3
in
push
pop
cmp
dec
push
stos
sub
call
push
scas
mov
ja
xchg
jl
pop
xor
int
fcoml
insl
inc
pop
push
js
dec
mov
loopne
mov
arpl
dec
mov
pushf
sbb
pop
sbb
pop
inc
jbe
fistpl
mov
xor
popf
lret
mov
jno
sti
iret
int3
sbb
dec
pop
mov
out
cmpsb
leave
std
mov
xchg
jnp
into
jecxz
in
sbb
in
pop
sub
lds
xchg
int
pop
and
sub
mov
xchg
sbb
jnp
aas
fidivrl
or
adc
push
jl
outsl
lea
inc
leave
pop
fnstcw
pop
inc
mov
and
sub
arpl
data16
sbb
insb
lock
enter
dec
cmc
xchg
adc
sbb
out
mov
cld
fisubs
mov
pop
pop
xchg
mov
ret
pop
out
cwtl
pop
ffree
jae
pop
or
dec
adc
lret
repnz
lods
fidivl
jns
ret
and
xchg
push
sahf
or
out
adc
test
sbb
xor
shrl
fsubrl
pop
sbb
jmp
pop
push
cmp
arpl
jb
je
icebp
inc
add
pusha
mov
js
pop
cltd
ficoml
rcrl
insb
lds
xchg
dec
pop
lock
and
mov
sub
push
pop
orl
pop
and
mov
pop
mov
pop
ficompl
aas
pop
xlat
pop
sub
das
push
sub
xchg
jo
pop
inc
pop
pop
and
inc
fwait
pop
pop
xor
push
lods
push
inc
dec
pop
push
sti
fnstsw
testb
jg
or
pop
jno
fstps
pop
ja
loope
push
lds
lahf
cmpsl
add
sbb
jbe
pop
jno
xchg
dec
into
rorb
sub
les
sbb
lret
xchg
xor
sub
sbb
sbb
std
lret
popa
insb
stos
fldt
mov
fsubrl
test
repz
push
cmpsb
pop
and
pusha
xor
cltd
pushf
icebp
mov
aas
jne
out
shlb
mov
pop
mov
cli
add
jbe
xchg
or
pop
sub
test
fnstsw
aas
pop
pop
cmp
mov
mull
dec
leave
jne
pop
lea
dec
movsb
scas
and
insb
fists
stc
or
jecxz
jae
pop
cli
shl
int3
inc
pop
hlt
push
out
xchg
inc
pop
subb
pop
rcrb
pop
push
and
repnz
sbb
pop
jae
int3
mov
jb
fnstsw
pop
in
inc
jp
lret
fnstcw
mov
push
into
pop
xor
lret
and
fiaddl
jnp
pcmpeqd
ds
cmp
and
ficomps
outsb
and
pop
dec
inc
push
fcomps
push
dec
mov
jl
inc
inc
sub
mov
mov
pop
push
out
aam
cs
repz
jp
inc
cld
push
stc
add
ficoms
shlb
cmpsl
mov
pop
xchg
xlat
fldl
pop
mov
bound
xchg
negb
xchg
dec
test
pop
ja
cmp
mov
test
pop
repz
mov
test
popf
je
pop
enter
movsb
ljmp
sbb
lahf
sbb
fisttpl
pop
pushf
pusha
in
cmpsl
xor
ss
repz
test
mov
pop
pop
lret
sbb
scas
lods
jl
and
push
pop
int
inc
out
mov
xchg
jg
sbb
and
mov
rdtsc
fistpll
leave
test
and
pop
sub
xlat
movsl
arpl
push
pop
orb
sub
pop
outsb
inc
pop
mov
inc
rclb
pop
sub
jmp
pop
andl
sbb
jp
mov
int
fs
movsb
mov
pop
mov
push
pop
sub
rcrb
lea
xchg
or
lahf
repz
jo
push
test
mov
insl
lcall
lods
sti
ror
xor
pop
jae
adc
ss
pop
sub
addr16
pop
scas
mov
adc
ss
cmp
and
dec
pop
push
jbe
popa
xchg
cmc
jnp
pop
int3
popf
sbb
add
mov
xchg
sahf
push
mov
pop
jno
out
push
inc
hlt
test
push
pop
or
aad
movsl
or
mov
and
xchg
pop
dec
add
and
and
pop
pop
sbb
call
pop
mov
jno
int
aaa
imul
popf
adc
or
inc
mov
mov
in
push
clc
std
jns
and
in
fldenv
xor
pop
sbb
loope
nop
fildll
jecxz
pop
xchg
jg
jb
or
push
adc
les
lahf
cld
fildll
insl
inc
mov
pop
jg
pop
hlt
push
cmp
add
divb
es
enter
pop
jge
or
sbb
mov
and
sbb
fistpl
pop
or
fsubl
or
pop
in
xor
lahf
pop
xorb
inc
jl
mov
loop
lea
and
mov
or
dec
fsubs
cli
iret
mov
ljmp
jns
pop
pop
mov
mov
mov
dec
xlat
push
inc
jbe
cmc
mov
arpl
les
cltd
jecxz
loopne
pop
inc
and
fidivl
dec
call
fcoms
jnp
pop
mov
pop
push
loop
in
pop
mov
pop
xchg
dec
std
lods
sbb
in
dec
fdivrl
cltd
push
dec
xor
es
lret
pop
dec
push
orl
jbe
sbb
add
push
cmc
ss
pop
lcall
push
dec
sub
fimuls
pop
mov
les
cmp
xor
loopne
push
pop
mov
sbb
pop
adc
insb
xchg
dec
cmpsl
mov
xor
push
mov
rcrl
mov
mov
repz
or
pop
lds
xchg
push
rcrb
out
jmp
bts
pop
add
or
jb
addb
cli
xor
add
imul
and
sub
int3
xchg
lds
cmp
fidivrl
jns
inc
add
push
fdivr
pop
mov
cmc
das
andb
lea
adc
sbb
pop
pop
add
ffree
mov
lcall
adc
and
or
repnz
mov
cmp
pop
or
add
jle
pop
lcall
std
jbe
gs
cmc
jns
fwait
jb
dec
js
sbb
fcomps
or
mov
pop
pop
and
clc
xchg
mov
aad
sbb
adc
cmp
subb
add
mov
pop
out
mov
xchg
push
add
repnz
ret
fistpl
jb
in
sbb
fwait
pop
loope
fs
or
xor
pop
arpl
pop
sub
mov
lahf
in
pop
xchg
pop
jl
pop
es
lret
adc
cltd
sub
push
into
ja
inc
test
mov
rcrl
mov
gs
and
pop
add
int
sbb
mov
push
add
pop
ret
push
sbb
or
inc
lods
out
or
adc
pop
shrb
sbbl
push
rolb
std
pop
push
mov
icebp
lcall
pop
jne
xchg
dec
dec
orps
pop
xchg
pop
jp
sbbb
mov
jmp
mov
pop
daa
testb
jp
aad
ficoml
loopne
repz
aaa
pop
je
jb
sub
in
clc
cltd
int3
lea
pop
fidivrs
sub
pop
adc
aad
loopne
sti
jb
mov
dec
insl
test
lods
andb
push
jge
mov
pop
int
cltd
in
nop
sub
pop
jl
mov
sbb
pop
cmp
add
shll
mov
mov
out
pop
xlat
sti
call
add
pop
leave
mov
loopne
fists
fsubs
sub
xchg
test
mov
cmp
xchg
imul
ret
cltd
je
test
xor
stos
add
sub
enter
push
ret
les
mov
je
rolb
mov
jne
jae
pop
mov
stc
xchg
cltd
add
cmpsb
fcomps
xchg
push
lcall
sbb
or
inc
dec
int3
dec
jle
leave
sbb
pop
pop
mov
outsl
jmp
pop
jo
out
cmp
mov
pop
adc
adc
or
xchg
imul
mov
lahf
pop
push
sub
lea
xchg
mov
addr16
fs
sub
bound
int
das
pop
xchg
jbe
jae
mov
sub
adc
xchg
mov
bound
pop
fwait
pop
inc
int3
fldcw
fs
pop
in
es
xchg
pop
mov
jl
fldl
dec
or
pop
cs
and
and
pop
jbe
orb
in
push
sub
jne
pop
or
mov
cld
pop
push
dec
or
push
cmc
ja
scas
fnstcw
pushf
outsb
dec
data16
cmp
xor
mov
movsl
fisttpl
pop
in
incb
jae
add
mov
pop
sbb
push
cwtl
in
call
int
pusha
sbb
mov
pop
xchg
sbb
les
sub
mov
arpl
pop
in
jbe
dec
mov
push
pop
and
stc
or
xor
pop
lea
int
lahf
cmp
out
pop
test
push
jl
jne
jge
pop
sbb
lret
pop
jp
pop
in
cmp
jecxz
xchg
ret
jb
js
jnp
pop
stc
xor
mov
pop
in
hlt
scas
mov
cmpsb
mov
inc
jns
and
in
adc
je
pop
jge
mov
sbb
adc
pusha
enter
pop
inc
xchg
push
std
jns
adcl
ljmp
cmp
mov
outsl
xor
fs
pop
stos
push
aam
ss
pop
xor
pusha
sti
push
insl
cmp
mov
mov
pop
fists
mov
pop
int3
inc
jb
stc
jmp
imul
inc
and
xchg
fisubrl
cmp
ret
movsb
inc
xchg
fnstcw
pop
dec
mov
dec
jbe
sub
or
xchg
pop
int3
mov
jo
sbb
fbstp
dec
mov
pop
and
clc
stos
cmp
push
ret
cmpsl
imul
xor
pop
aaa
dec
mov
mov
inc
jno
add
arpl
push
pop
pushf
push
xor
pop
test
ljmp
mov
cmpsl
pop
int3
mov
ret
pop
push
or
pop
out
mov
pop
sahf
xchg
repz
pushw
mov
jne
inc
inc
sub
add
sbb
lahf
mov
clc
jb
push
aam
gs
cli
stos
push
cld
mov
out
fstps
imull
mov
je
pop
out
int
into
push
inc
xor
pop
ds
pop
sub
les
je
adc
xchg
pop
mov
adc
mov
sahf
pusha
push
dec
push
sbb
jecxz
pop
sbb
mov
xlat
cmp
sub
ds
aad
jb
fisttps
outsl
add
cmc
mov
xor
jb
pop
sub
pop
popf
sbb
shlb
inc
pusha
popa
shlb
pop
xlat
insl
repnz
and
pop
sti
push
jno
inc
out
insb
pop
shll
push
in
pmaxub
lret
repz
jmp
fdivs
pop
xchg
out
and
out
in
lahf
pop
cmp
adc
cmp
pop
mov
dec
enter
cltd
fstl
lret
imul
xchg
mov
lahf
and
mov
dec
jg
sti
pop
aad
push
mov
scas
and
leave
cld
jae
popf
adc
lea
pop
out
repz
mov
cli
sbb
xor
or
or
clc
inc
je
mov
and
dec
push
push
sbb
hlt
and
arpl
std
or
ror
lods
ljmp
mov
imul
push
std
pop
icebp
push
and
pop
mov
hlt
pop
test
pop
adc
mov
mov
pop
jl
dec
addr16
ss
pop
int
es
mov
fcoms
pop
mov
cmp
cmp
pop
pop
cmp
sbb
iret
fildll
outsb
pop
xchg
mov
dec
fidivrs
xor
lea
jb
pop
in
pop
aaa
jbe
cmp
dec
sbb
pop
inc
dec
jns
std
xor
lret
pop
jbe
lods
mov
push
mov
dec
pop
test
test
sub
lds
pop
je
cmp
sbb
movsl
enter
pushf
orb
outsl
int
jns
mov
iret
cltd
lcall
jbe
lcall
cmpsl
xchg
in
cli
push
sbb
pop
int3
sbb
sub
pop
pop
cmp
cmp
pop
inc
push
jb
xor
aaa
mov
lods
push
xchg
mov
cwtl
pop
pop
jno
mov
jge
push
sub
aam
jnp
in
mov
push
fisttpll
push
pop
dec
imul
mov
add
xor
jo
stos
push
gs
mov
pop
xchg
lret
jmp
or
ds
dec
imulb
add
adc
dec
in
add
pop
add
pop
mov
pop
sbb
lds
pop
out
lods
cmp
mov
daa
sbb
adc
mov
outsb
out
test
lret
in
sbb
pop
pop
mov
inc
fwait
pop
int
sbb
pop
mov
lods
cmp
daa
pop
ret
lds
in
dec
je
out
lret
inc
push
lods
sti
mov
mov
adc
aam
jbe
cmc
pop
out
data16
iret
negl
pop
jne
icebp
out
or
bound
sbb
jp
in
cmpb
pop
and
cmp
stc
mov
popf
jmp
mov
test
in
add
jecxz
imulb
ljmp
mov
cs
imul
xchg
sbb
pop
jecxz
negb
pop
cld
mov
aaa
cmp
add
lock
lahf
mov
repz
popf
xorb
aas
addr16
pop
imul
push
in
fdiv
inc
cwtl
mov
ds
lock
xchg
adc
pop
bound
fmuls
pop
data16
icebp
nop
pop
mov
les
jbe
out
test
stc
jp,pn
mov
xor
icebp
fidivs
sahf
pop
fsubs
cwtl
adc
mov
pop
jmp
inc
dec
mov
int3
push
adc
dec
stc
sbb
in
jmp
xor
scas
fstl
cld
leave
push
mov
jo
push
xor
pop
sbb
jge
pop
mov
dec
and
testb
or
je
cwtl
pop
out
es
jle
pop
push
sbb
popa
mov
lret
xor
mov
divl
out
cmp
sbb
dec
xor
jno
repnz
dec
or
jl
sub
mov
pop
jl
out
pop
repnz
or
mov
lahf
scas
jne
push
fisttpl
push
adc
outsl
jmp
jae
push
inc
pop
pop
aas
lcall
je
les
scas
fistpl
call
imul
bound
pop
ficoms
sbb
pop
push
push
sub
fdivrs
mov
out
ds
jnp
mov
insl
dec
or
jns
xchg
push
jg
cmp
pop
stos
test
lods
fdivrs
ljmp
cmp
pop
or
dec
mov
int
sbb
push
mov
ds
int3
add
lcall
jnp
xor
negb
shrb
loope
sbb
pop
pop
pop
push
fmuls
inc
sbb
dec
in
jno
repnz
jl
addl
lds
or
push
sub
pop
cltd
es
pop
dec
xlat
pop
cmp
mov
mov
sbb
pop
jb
adc
push
bound
mov
loope
movsb
pop
stc
mov
and
sub
cld
pushf
push
sbb
mov
push
pop
loop
outsl
scas
je
or
pop
adc
in
jb
inc
pop
cmp
outsb
mov
dec
ss
fs
int3
sub
fistl
mov
sub
sub
pop
popa
sbb
je
lahf
or
cmp
pop
adc
xorb
cs
loop
lea
pop
cltd
sbb
test
cmp
js
dec
dec
int
dec
test
xchg
mov
dec
or
and
mov
sub
ret
jae
cwtl
icebp
scas
pushf
lock
sbb
pop
test
mov
stc
cltd
repnz
lds
pop
pushf
fs
dec
mov
int3
outsl
cmp
and
cmp
inc
inc
or
pop
xchg
scas
add
repz
mov
inc
subl
and
scas
lret
dec
inc
push
mov
mov
es
fistpll
popa
aas
mov
movsl
sub
int3
or
mov
shll
hlt
pop
fsub
lcall
xchg
pop
pop
mov
shll
cmc
push
sbb
lahf
movsb
mov
cli
pop
test
cld
iret
rcrb
std
xchg
mov
mov
arpl
aas
call
inc
rcrb
cwtl
test
dec
nop
or
pop
jne
jae
xchg
pop
pop
in
pop
or
xchg
mov
add
repz
lods
nop
adc
insl
mov
xchg
lcall
lds
idivl
enter
negb
lret
pop
jbe
lea
jo
repnz
cmp
test
push
pop
test
sub
and
sbb
call
sti
lock
and
rcrl
insl
jl
out
ficoml
pop
jno
mov
pop
xor
and
dec
and
arpl
pop
icebp
jb
sub
push
int3
or
pop
in
popw
pop
jbe
cwtl
jg
sbb
pop
pop
sbb
dec
clc
es
sbb
cmpsl
int3
jne
and
ja
je
mov
inc
pop
lods
fnstcw
xchg
sbb
add
repnz
push
push
addr16
aad
mov
pusha
jae
xchg
rcrl
xchg
sub
push
xor
pop
in
sub
mov
outsl
mov
push
adc
mul
pop
sub
xchg
xchg
sbb
iret
jle
je
mov
fdivrl
scas
or
shlb
shll
push
stos
cmp
into
sub
jnp
add
inc
loop
int3
mov
mov
xchg
sbb
cs
push
inc
mov
fsts
sbb
dec
mov
rorl
sbb
mov
mov
jbe
pop
inc
jp
test
in
imul
enter
sub
jecxz
jnp
pop
lcall
arpl
mov
gs
fsubrp
xchg
jb
sbb
lcall
imul
and
dec
sbbb
dec
or
scas
loop
test
sbb
cmp
jne
dec
push
test
cltd
repnz
daa
fcomps
or
adc
mov
pop
out
add
sbbb
adc
sti
scas
push
int
push
mov
in
or
xor
adcb
arpl
mov
sbb
dec
mov
fldenv
ret
jne
pop
filds
xor
fiadds
in
pop
addl
pop
cmp
mov
xchg
clc
jg
nop
pop
scas
push
mov
lahf
xchg
sbb
cmp
insb
lret
pop
int3
dec
xor
aam
pop
bound
hlt
popl
das
pop
mov
aad
xor
bound
mov
fwait
aas
int
add
xchg
mov
call
int3
data16
cmpsb
stos
push
inc
mov
aas
aaa
int
shll
inc
xchg
xor
mov
cmp
push
inc
jp
scas
pop
push
and
pop
mov
pop
adc
adc
push
jbe
mov
pop
test
ss
std
int
pop
and
cmp
mov
inc
sbb
je
adc
ja
xor
popf
mov
cmp
iret
pop
dec
repz
mov
pop
xor
aaa
repz
dec
pop
pop
mov
movsl
mov
cmpl
scas
sbb
les
scas
out
push
dec
jg
jo
mov
inc
sub
lea
ljmp
mov
jae
lods
cmpsl
stos
pop
mov
mov
inc
add
xchg
fwait
or
jb
pop
adc
dec
mov
sbb
cmp
or
sub
in
jmp
xor
pop
lock
and
in
pop
jno
leave
sub
fcomps
jb
cmp
out
rcll
dec
lea
cmpl
fstpl
ds
xchg
lret
pop
fstps
jbe
out
pop
mov
scas
push
push
adc
mov
inc
fists
shl
pop
push
pop
mov
fnstcw
out
lods
cmp
lret
xchg
out
fst
pop
filds
lret
pop
mov
xchg
mov
and
clc
push
inc
test
sbb
pop
imul
push
loope
fstp
hlt
stos
cwtl
pop
stos
in
fwait
adc
sbb
les
mov
call
dec
push
adc
pop
inc
inc
xor
es
dec
and
cwtl
lods
in
std
pop
push
rcr
in
inc
inc
jecxz
pop
jge
jmp
push
pop
and
addr16
pushf
push
sub
add
mov
cmpsl
repz
sbb
fimull
pop
pushw
fiaddl
int3
in
stc
cli
pop
xchg
jl
imull
mov
daa
mov
mov
fsubr
push
sti
imull
fstl
cld
jo
pop
fbstp
push
push
jmp
xor
cmc
jns
dec
lods
xor
fdivrl
cmpl
in
xchg
rclb
pop
xchg
inc
scas
cmp
lods
sbb
mov
adcb
js
pop
sbb
adc
daa
xlat
ljmp
jecxz
jp
pop
sar
adc
cltd
ret
inc
pop
fiaddl
jmp
out
push
pop
ficoms
or
mov
imul
fcoms
xor
dec
pop
or
jb
mov
mov
int
inc
popa
mov
pop
je
sbb
add
cmp
pop
test
mov
sub
adc
cmp
push
adc
pavgb
jnp
in
pop
or
xor
pop
push
lcall
pop
pushf
inc
cmpsl
adc
cmp
pop
sub
xchg
pop
add
adc
data16
pop
popa
push
daa
aad
test
stos
das
loope
dec
jle
jl
push
int3
addr16
mov
iret
filds
sub
fwait
and
and
movsl
loopne
popf
rcrb
mov
jne
jae
mov
jp
mov
pop
xchg
mov
mov
movsb
pop
loopne
xchg
mov
out
jecxz
dec
pop
scas
stos
xchg
push
popf
mov
push
pop
mov
cmp
lcall
push
pop
call
imul
pop
in
push
jne
push
inc
pop
scas
cmpsb
push
lods
insl
in
cwtl
int
add
popa
fisttpl
popf
pop
pop
leave
fsts
pop
cli
mov
pop
je
fcomps
pop
and
add
jno
fcomi
or
mov
out
cmc
pop
in
pop
fisubl
add
insb
sbb
mov
mov
sahf
mov
jmp
lods
and
fcmovb
insl
scas
addr16
sbb
jmp
leave
mov
in
fnstcw
out
mov
jbe
mov
mov
push
dec
pop
mov
out
sarb
add
sub
pop
pop
repnz
enter
dec
or
sub
sub
cld
call
sbb
pop
xchg
mov
jg
scas
jecxz
jo
mov
push
test
fisubrs
or
scas
test
push
mov
mov
cs
mov
cmp
inc
aaa
jg
sbb
adc
dec
sarl
mov
jno
xor
adc
jle
push
pushf
pop
popa
pop
jl
shlb
sub
mov
xor
pop
or
or
int
sbb
xchg
pop
cwtl
pusha
je
jno
lds
pushf
inc
push
pop
lods
xchg
add
mov
mov
mov
inc
in
cmp
lret
dec
std
and
fsubrl
pop
rcll
inc
jle
ss
sub
mov
xchg
cli
or
negb
lea
push
aas
loop
in
or
jb
fsubl
pop
dec
push
stos
jle
cmp
lcall
test
mov
cmp
push
fcmovb
inc
inc
inc
cmc
xchg
jp
pop
fstpl
insb
outsl
adc
enter
rcrb
mov
push
into
fsubrl
arpl
lret
pop
or
mov
pop
lcall
jge
ss
inc
sbb
pop
pop
pop
aaa
jl
xor
fisttpll
pop
and
shr
xor
roll
xchg
stos
popf
pop
jne
pmuludq
adc
dec
jecxz
pop
pop
cmp
pop
inc
dec
int3
dec
jge
xchg
sar
in
push
addb
nop
add
dec
sbb
arpl
test
jmp
xor
and
enter
daa
sti
rcll
scas
out
in
sbb
dec
enter
int3
ret
and
push
xor
sbb
mov
cmp
mov
lods
stos
add
test
loopne
push
pop
push
pop
pusha
cli
outsb
jl,pn
into
mov
sbb
mov
xchg
faddl
pop
sarb
in
pop
stc
mov
sbb
test
js
or
icebp
xchg
cmpsb
into
xchg
adc
add
mov
je
fldl
sbb
mov
in
mov
loop
test
xchg
pop
fisttps
mov
lds
or
negb
daa
cli
pop
out
or
push
arpl
addr16
popf
inc
add
or
pop
shrl
fdivrl
scas
jmp
lods
ljmp
jnp
pop
dec
ja
push
dec
outsl
orl
pop
pop
daa
adcl
inc
fwait
pop
movsl
and
icebp
sbb
inc
leave
xchg
fmull
faddp
inc
out
pop
pushf
jae
subl
pop
xchg
lea
inc
call
cmp
or
mov
sarl
clc
je
rcll
mov
rcrb
testl
or
sub
inc
cmp
mov
dec
pop
mov
hlt
frstor
and
lret
test
test
pop
sti
mov
mov
push
sbb
xor
int
mov
mov
xor
lahf
pop
mov
rcr
fsubs
cs
mov
dec
mov
or
mov
jp
inc
stos
dec
je
mov
xchg
mov
inc
pop
jae
cmpps
fcomp
mov
add
pop
fsubrs
jp
or
pop
pop
xor
stos
fidivl
loopne
or
jnp
ljmp
lea
add
cmpsb
sar
dec
or
pop
popa
dec
flds
sub
adc
fcmovbe
shll
int
push
inc
pop
pusha
push
sub
stos
pop
jno
mov
add
mov
aas
icebp
inc
xor
mov
dec
popa
sbb
lret
ficoms
aam
mov
and
mov
out
jl
pop
and
ds
aam
int
test
pop
outsb
jg
jns
or
mull
xchg
pop
jns
pop
movsb
sbb
or
pop
pop
subl
push
shrb
pop
pop
and
clc
cli
push
scas
or
sub
mov
aad
pop
push
mov
pop
push
aam
sarl
add
rcl
sti
or
mov
inc
dec
lahf
fs
jb
dec
jo
mov
repz
scas
bound
jge
add
mov
mov
inc
fs
inc
and
push
sbb
push
and
in
mov
test
stc
mul
fisubrs
sub
cld
jns
mov
mov
jbe
cmp
inc
nop
aaa
enter
pop
int
sub
mov
mov
pop
lret
testw
sbb
ljmp
jmp
fs
fldl
lcall
pop
ret
mov
stc
mov
or
mov
nop
jecxz,pt
shlb
mov
in
es
repz
mov
repnz
sub
pop
mov
cmp
dec
inc
popf
push
loope
aaa
loopne
push
pop
jnp
pop
arpl
pop
mov
cmp
popf
orb
data16
push
shll
xchg
mov
cmp
dec
mov
ja
xchg
loope
push
adc
hlt
sbb
cld
insb
pop
sahf
xchg
lcall
fs
in
mov
lods
cwtl
repz
popa
push
stos
dec
adc
jg
pop
rorb
lock
imul
mov
mov
dec
pop
movsl
sbb
pop
incl
cmp
icebp
dec
jnp
sahf
stos
int3
out
pop
mov
mov
add
inc
test
lock
outsb
sub
std
pop
dec
ljmp
xor
dec
addr16
inc
out
sub
in
pop
mov
jb
push
imull
or
xchg
cs
cltd
lret
out
mov
je
pop
rep
aaa
sub
pop
jecxz
stos
cmp
jo
push
mov
in
fwait
in
insb
faddl
pop
pop
mov
bound
add
push
pop
sahf
push
loop
cmpsl
dec
jno
out
push
out
mov
push
add
pop
pop
or
and
scas
mov
test
ret
jmp
xchg
lock
mov
mov
sbb
inc
int3
cmp
cld
mov
pop
mov
andl
rcl
mov
stc
push
pop
orb
test
pop
sub
loop
sbb
pop
aad
pop
jge
and
mov
dec
xor
add
cltd
mov
inc
and
pop
ret
jmp
cmp
aam
pop
loop
adc
hlt
jg
in
pop
dec
xor
pop
icebp
test
sbb
pop
push
fimuls
add
cwtl
mov
inc
pop
pop
adc
inc
mov
mov
dec
xchg
pop
xchg
test
fdivrs
rolb
stos
jb
fdivrl
popf
jne
xchg
int
push
mov
pusha
sahf
dec
adc
int3
clc
mov
dec
lea
sbb
inc
push
lds
fstps
ja
lods
shll
sbb
mov
into
mov
pop
mov
std
xor
scas
out
xor
insb
push
sbb
jnp
popf
jae
lods
inc
lahf
jge
jle
xor
lods
icebp
jmp
pop
xchg
sbb
insl
adc
add
pop
or
mov
inc
imul
pop
mov
or
mov
sbb
mov
pop
adc
or
daa
mov
pop
xor
cmp
push
bound
mov
pop
fsubrs
adc
adc
push
mov
fs
cmp
out
in
ss
dec
popa
mov
mov
pushf
mov
out
insl
jo
mov
pop
dec
stos
cltd
pop
jns
xchg
int
fs
mov
jbe
rorb
mov
int
lds
pop
pop
out
jo
iret
arpl
daa
cwtl
mov
lods
push
dec
adc
mov
xor
jns
nop
lcall
cwtl
cmpsb
cmp
je
mov
add
clc
mov
add
int
inc
or
mov
aam
xor
fcmovnu
mov
mov
jmp
rcrb
sub
pop
push
dec
fadds
push
pop
icebp
jp
aaa
inc
ss
sbb
frstor
imul
inc
mov
pop
movsb
mov
push
ror
jg
push
aas
sbb
lods
es
imul
fcompl
pop
add
xchg
jbe
pop
jno
call
je
inc
int
dec
mov
jne
pop
ret
cmc
add
pop
stos
xchg
and
mov
xchg
fisubrs
lods
scas
sub
cmpsl
mov
mov
movl
nop
sahf
push
and
xchg
outsl
dec
lret
cmp
and
sub
cli
pop
cs
cmp
mov
lods
enter
sbbb
es
lods
jp
cli
insb
cltd
pop
dec
mov
pop
push
int3
sbb
sub
mov
dec
stc
in
xlat
and
add
test
pusha
xchg
inc
xchg
int
pop
lea
int3
arpl
rcrl
mov
scas
mov
xor
shr
jo
nop
sbb
or
arpl
adc
mov
pop
and
ja
xchg
jb
in
call
xor
in
ret
dec
pop
pop
cmp
jmp
mov
pop
cltd
addr16
shll
pop
int3
add
jp
push
mov
dec
jl
xchg
nop
mov
pop
shl
dec
cmp
jbe
enter
pop
jno
dec
pop
je
pop
ss
cltd
test
mov
imul
rcl
pop
or
stc
sbbb
dec
mov
rcrl
push
cmp
pop
push
ljmp
mov
outsl
cmpsb
icebp
jbe
push
or
jns
lahf
cmp
stos
sub
cmpsb
rorl
jge
dec
movsl
ss
int
jle
mov
pop
cwtl
sbb
stos
pop
enter
mov
pop
sbb
pop
adc
sub
sub
hlt
sub
das
faddp
scas
lods
addb
inc
sbb
jp
fidivrl
test
mov
or
sbb
scas
xchg
icebp
xchg
push
jo
pop
in
fimuls
sbb
scas
push
mov
mov
xchg
out
add
pop
inc
xchg
rorl
sti
dec
inc
jg
ficoml
inc
clc
add
fadd
jge
push
push
pop
in
and
jbe
dec
jp
mov
sub
pop
out
sbb
clc
pop
out
outsl
lcall
sbb
pop
mov
je
push
jno
aas
mov
xor
pop
sub
xchg
rcl
dec
arpl
js
add
pop
pop
subb
pop
movsb
aas
idivl
adc
mov
cs
inc
sub
lret
and
mov
lahf
mov
mov
mov
movsb
sbb
mulb
jno
add
das
mov
pop
mov
subb
mov
pop
int3
shll
xchg
inc
inc
pop
pop
bound
dec
mov
sti
mov
pop
fcomp
pop
jns
mov
mov
repnz
jb
jecxz
jnp
pop
aam
dec
ret
popa
xchg
ljmp
int
adc
pop
ja
lret
in
aaa
outsl
mov
inc
mov
imul
movsl
in
cmpsl
lcall
js
jge
pushf
cmpb
xlat
call
and
inc
pop
or
pop
and
lock
xor
dec
pop
mov
rolb
mov
pop
push
pop
loop
lea
cmp
push
cmc
push
fsub
cmp
pop
xchg
rol
insl
loopne
adc
imul
aaa
or
pop
loop
adc
sbb
xchg
push
inc
pop
jno
ss
repz
pop
sbb
pop
xchg
inc
ljmp
sub
inc
gs
hlt
loopne
repz
int3
lea
push
mov
sbbl
xchg
add
fcomp
test
sbb
sbbb
push
inc
pop
cmp
pop
mov
sahf
mov
sbb
or
lods
pop
cmp
jl
pushf
push
pop
in
fisubs
sub
pop
mov
pop
push
push
mov
in
orb
xchg
push
xchg
idiv
and
rclb
xor
icebp
pop
in
movsl
cmc
or
cltd
and
adc
mov
out
shrl
dec
rcrb
pop
ds
dec
jg
pop
lock
enter
mov
push
aas
cld
xchg
pop
hlt
and
pop
clc
sbb
call
shl
add
fnsave
stos
adc
jmp
jecxz
popa
je
cmp
pop
ljmp
mov
xor
jecxz
mov
cmp
jp
pop
sbb
lahf
sub
pop
outsl
lret
pop
daa
aad
mov
fcomps
lods
jne
cmc
lahf
mov
or
pop
and
inc
push
xor
dec
pop
mov
or
pop
fstpl
mov
mov
int
adc
pop
xor
lock
out
dec
pop
lods
jb
dec
movsb
mov
lahf
and
cmpb
add
pop
dec
dec
aam
jo
in
out
xor
mov
sbb
adc
daa
fwait
jl
data16
mov
cmpl
pop
pop
pop
mov
jo
add
repz
xchg
xchg
jge
mov
add
pop
inc
mov
mov
lea
cs
xchg
mov
test
pop
dec
sbb
ret
push
dec
pop
std
aas
or
jne
xor
js
shl
fsubrs
mov
loopne
pop
push
adc
or
inc
pop
xor
jnp
out
cld
fcomps
push
pop
test
dec
ret
test
sub
pop
dec
insl
leave
add
mov
mov
mov
dec
pop
push
arpl
stc
call
sbb
out
jb
les
inc
pop
push
adc
shll
xor
jb
xchg
inc
or
jno
dec
add
int
xchg
mov
pop
cmpsl
sbb
inc
mov
mov
xchg
aaa
inc
adc
jg
mov
incb
movsb
lahf
std
xchg
sbb
sub
mov
inc
push
sbb
icebp
pop
xor
add
and
in
ror
dec
pop
mov
inc
add
pop
sahf
xor
sbb
cs
mov
stos
lahf
pop
rol
rcrb
jnp
jp
lods
sbb
fucomp
push
lock
nop
pop
int
cmp
lret
cmp
push
adc
int3
adc
popa
or
bound
mov
lods
clc
jmp
pop
mov
scas
jecxz
dec
sbb
inc
fdivrs
sbb
idivl
bound
lock
rcrb
push
fldcw
subb
cli
fadds
mov
pop
sbb
clc
imul
jge
cmp
add
mov
mov
pop
push
mov
xchg
sbb
jno
mov
scas
add
and
inc
sbb
jecxz
in
and
shr
sub
cmp
dec
ja
scas
cltd
push
lcall
pushf
push
adc
dec
rcrl
jo
sar
stos
pop
sbb
xor
xor
lods
push
sbb
jb
addr16
int3
jne
jbe
pop
je
xchg
data16
std
ja
aaa
test
neg
cmp
iret
pop
add
jb
and
push
clc
pop
ds
mov
pop
add
mov
enter
pop
lcall
push
out
pop
out
movsb
and
pop
jl
cltd
sbb
xlat
xchg
fs
imul
mov
dec
mov
mov
int3
lock
adc
filds
mov
mov
fs
je
push
call
fstps
pusha
mov
mov
dec
or
sti
pop
xchg
xor
xor
xor
push
xchg
clc
sbb
out
adc
jecxz
sbb
dec
scas
sbb
mov
adc
mov
pop
cmpsl
push
daa
dec
lds
sub
inc
pop
pop
fnstcw
nop
loope
mov
pop
bound
xor
mov
fists
and
jg
daa
mov
sub
mov
inc
fdivrs
mov
mov
mov
cmpsb
pop
jmp
pop
icebp
popa
pop
addr16
push
stos
test
xchg
pop
sarl
in
inc
inc
xchg
stc
rorl
stc
add
dec
jl
push
mov
xchg
out
pop
aaa
rcrb
cmp
fdivrs
stos
int3
cltd
mov
pop
pop
leave
or
mov
in
sub
ss
mov
xchg
inc
lea
jl
mov
inc
pop
mov
ljmp
push
int3
push
mov
adc
ficoms
dec
jmp
negb
sbb
mov
and
pop
dec
ja
insl
or
in
outsb
xor
pop
pop
dec
jne
cmp
add
sub
cltd
lods
inc
pop
int3
int
xor
mov
mov
mov
xor
jl
push
dec
sbb
jo
pop
test
sbb
dec
sbb
stos
pop
lock
test
mov
sbb
stc
or
mov
loop
pop
subb
pusha
mov
nop
in
data16
xchg
jne
cmpsl
fistpl
out
popf
sub
pop
ss
addr16
inc
mov
addr16
test
adc
sbb
jno
pop
sahf
out
scas
xchg
stc
mov
shl
mov
xor
push
lahf
enter
fimull
test
jge
fnstenv
jo
jb
cmp
popa
cmpsl
xor
rorb
stos
add
mov
jno
jo
std
mov
adc
adc
mov
cwtl
and
mov
imul
enter
push
aas
sbb
lea
pop
cs
dec
pop
in
popl
jle
outsl
pop
or
jecxz
sti
jecxz
inc
out
rorb
adc
arpl
sbb
mov
xor
pop
int3
dec
push
daa
or
and
sub
inc
pop
and
aaa
adc
dec
dec
pop
loopne
fwait
stos
cld
xchg
dec
mov
push
pop
inc
xchg
push
sub
jle
test
pop
mov
daa
and
out
mov
sarb
mov
dec
jbe
sub
dec
mov
insl
pop
add
jmp
int
adc
adc
dec
mov
mov
and
inc
sub
xor
sub
adc
mov
inc
cld
les
jb
fs
scas
jbe
mov
push
ret
ror
pop
imul
jecxz
jmp
cmpsl
into
dec
xchg
lcall
icebp
xchg
imul
movsl
pop
xlat
dec
lcall
sbb
es
decl
pop
adc
jne
dec
sbb
pop
in
push
cmp
xlat
jb
pop
repnz
xchg
mov
lret
inc
stos
mov
xor
and
mov
sti
pop
stos
test
arpl
xchg
pop
jo
sub
sbb
fstps
push
sbb
lahf
stos
push
inc
push
fsubs
dec
add
pop
lods
add
fsubrs
inc
jb
outsl
stos
inc
out
cmp
pop
sub
dec
push
push
std
les
jo
sub
scas
dec
xor
sqrtps
mov
rcrb
sbb
in
mov
sti
fdivs
cmp
xlat
ror
mov
sbb
stc
push
pusha
adc
cmpsl
dec
stc
ljmp
je
int3
cmp
into
lret
out
iret
sbb
dec
inc
sbb
cmp
push
clc
xchg
mov
scas
pop
cmp
pop
mov
les
test
adc
pop
and
lahf
sar
xchg
test
mov
mov
pop
xchg
or
pop
sbb
loop
fsub
xor
mov
jmp
jmp
test
fstl
sbb
and
jb
sti
pop
ret
rcrb
pop
xchg
mov
hlt
xchg
sbb
js
aas
fmuls
cltd
stos
mov
pop
xor
mov
pop
out
int3
das
jae
into
jg
addr16
jo
mov
cmp
pop
mov
or
lea
jle
pop
xchg
cmp
xchg
xchg
lret
outsb
andl
sub
andb
ret
push
jecxz
int
mov
pop
adc
jmp
mov
leave
lcall
sbb
loope
mul
push
adcl
pop
sub
mov
fs
mov
add
dec
ss
adc
or
add
aad
pop
lea
pop
mov
pop
inc
sti
nop
inc
movsl
jbe
xchg
jmp
les
push
pop
int
daa
sub
add
shlb
mov
incb
inc
movsl
dec
loope
pop
cmp
jp
sbb
xlat
pop
add
push
pop
je
adc
dec
in
mov
push
pop
cmp
test
insl
jl
ficompl
mov
sub
sarl
cltd
pop
or
scas
scas
dec
jno
mov
pop
sbb
push
pop
cli
test
push
scas
mov
aam
mov
movsl
pop
pop
test
enter
lods
pop
daa
dec
mov
lahf
aaa
fiaddl
jns
pop
sbb
cmp
lea
mov
fistpl
cmpsb
xchg
pushl
and
inc
xchg
fs
mov
jle
jmp
in
pop
or
and
mov
fsub
out
enter
pop
pop
inc
xchg
lret
cwtl
add
sarl
cs
adc
jne
fucompp
jge
jno
movsl
mov
cmp
mov
sbb
xchg
xrstor
sub
out
pop
mov
push
fld
and
pop
int
fsub
subl
pop
push
sub
jnp
in
out
jb
scas
popw
jno
cwtl
sbb
mov
xchg
or
stos
xor
push
lret
dec
lods
pop
jmp
pop
cmc
fidivs
inc
and
sbb
push
adc
sbb
mov
cmpsb
mov
scas
jae
insb
xor
push
lods
adc
je
push
enter
push
in
dec
int3
stc
jp
adc
sti
mov
lret
enter
lods
pop
int3
push
das
out
and
shrl
add
ret
sbb
jl
dec
mov
gs
cmp
xchg
mov
cli
lock
push
sbb
mov
repz
andb
xor
jne
sbbl
xor
xchg
dec
mov
mov
imul
dec
push
mov
pushf
xor
negb
jb
rorb
in
push
out
mov
cwtd
and
test
dec
fisttpl
ret
pop
xor
jbe
scas
push
aam
push
daa
int
stos
push
iret
fistpll
dec
rol
jecxz
xchg
or
dec
imul
sti
mov
inc
outsb
pop
inc
mov
pop
test
fcomps
xor
je
jl
push
pop
outsl
sub
cmpsb
mov
jle
sti
fsubs
dec
jo
mov
adc
cmp
int3
pop
or
stos
xor
inc
add
insl
jae
cltd
or
xchg
cli
call
fsin
jecxz
in
adc
mov
push
pop
fldenv
pop
mov
xchg
cmp
xor
sbb
mov
les
pop
sbb
mov
cmpsb
jns,pt
lret
lret
sbb
xchg
xlat
fistl
push
sub
cmc
adc
mov
sub
fcmove
push
inc
pop
mov
jae
lods
xor
pop
xor
dec
test
sub
fwait
pop
xchg
xor
stos
mov
cld
ja
not
loope
sbb
pop
cmp
jno
rcrl
push
inc
mov
push
call
inc
ja
out
jne
pop
inc
cld
int
gs
mov
inc
sbb
stos
mov
sbb
insl
mov
fcompl
push
dec
insb
cmc
dec
enter
fdivs
ss
mov
mov
sbb
mov
mov
pop
or
cli
pop
jo
sub
sarl
pop
sub
push
adc
pop
xchg
sbb
pusha
negl
cmp
pop
and
push
push
push
mov
dec
xchg
sub
add
sub
jmp
adc
int3
sbb
mov
scas
jbe
and
jmp
mov
adc
movsl
sbb
mov
adc
pop
add
or
movsb
enter
ds
or
or
mov
pop
loope
mov
leave
out
or
add
adc
dec
bound
sub
in
neg
pop
xor
ret
jle
inc
les
lock
arpl
push
pop
inc
call
mov
jg
cmpsl
pop
or
test
push
arpl
scas
iret
pop
adcb
or
pop
sub
mov
movsb
repnz
ret
jecxz
rcrl
fimull
cmp
push
sbb
inc
sub
ss
pop
adc
ds
sbb
sub
mov
int3
lahf
in
push
xor
mov
insb
add
pop
and
xchg
dec
pop
aam
sbb
or
popf
or
gs
or
mov
pushf
push
mov
mov
pop
cltd
int3
jl
out
adc
pop
ficompl
and
ret
pop
xlat
in
pushl
pop
jne
mov
add
dec
pop
int
je
jl
and
sub
xor
fimull
sub
lods
icebp
pop
inc
mov
jb
dec
xchg
fnstenv
add
fstpt
loopne
sbb
xchg
ret
gs
push
pop
jns
jge
jg
or
mov
pop
test
adc
add
stos
push
push
das
int3
lcall
push
mov
mov
cltd
rolb
inc
aam
mov
leave
or
jno
xor
inc
fiadds
movsl
lahf
sbb
stc
push
mov
int
stc
sub
mov
dec
repz
mov
lret
dec
inc
in
sub
shlb
sahf
test
xchg
sbb
mov
or
ret
pop
and
dec
stc
xchg
lods
adc
data16
stos
pop
mov
lret
lea
int3
mov
andl
out
ficompl
and
pop
pop
adc
xchg
fsubs
pop
dec
into
mov
xor
xchg
negl
push
push
mov
push
push
stos
xchg
mov
xchg
cmp
inc
dec
mov
dec
faddl
lret
pop
das
ficoml
aad
sub
pop
mov
cmpsl
xchg
inc
call
insl
imul
stos
sbb
xchg
fmuls
cli
imulb
mov
out
call
clc
sbb
pop
jmp
xchg
jbe
inc
xlat
pop
xor
cltd
mov
xor
fimull
sub
pop
or
lahf
mov
mov
pop
adc
push
sbb
sub
pop
addr16
int3
pop
imul
pop
stos
stc
mov
inc
pop
jle
push
and
cmp
and
out
jb
add
aaa
push
mov
mov
pop
push
dec
lcall
cmp
sbbb
adc
sbbl
test
pop
cmp
jno
popa
jecxz
stc
fwait
pop
inc
ret
pusha
es
cs
adc
push
cmp
rcrb
or
movsb
ret
mov
sub
or
ja
add
mov
push
pop
mov
andl
sub
cmc
adc
mov
sbb
sbb
jb
scas
popf
out
jecxz
sti
lods
push
repz
pop
push
or
add
xor
int3
cmp
mov
pop
cmpsl
cmp
popa
dec
sub
out
pusha
pop
push
hlt
xor
mov
push
and
in
popa
aam
add
pop
jo
aad
sub
rcrb
pop
xlat
lret
dec
aam
mov
jae
shlb
and
sub
fs
add
int3
pushf
testb
inc
pop
jnp
push
pop
pop
jg
or
jae
fmul
pop
xchg
dec
daa
rorl
pop
sbb
mov
xorl
or
inc
enter
and
daa
je
pop
or
xchg
lods
xchg
mov
mull
and
jo
mov
inc
sub
sub
repz
loop
pop
cmp
mov
addr16
orb
shl
jae
lcall
dec
jbe
pop
and
ror
dec
cmp
fcomps
mov
push
sub
pop
je
sbb
pop
mov
fldcw
dec
mov
fistpl
arpl
jmp
outsl
decb
aas
xchg
pop
mov
fcoms
sbb
jmp
push
pop
sbb
or
stos
xchg
pop
test
and
ss
pop
into
adc
pop
fisubrs
adc
dec
pop
stos
sbb
mov
insb
int
mov
inc
scas
and
add
scas
les
mov
mov
test
push
dec
inc
aad
movsb
mov
jp
or
push
push
pop
xor
sahf
mov
bswap
fdivl
pushf
mov
xchg
sub
cli
in
dec
imul
lahf
sub
mov
mov
lahf
adc
lods
repnz
out
out
icebp
cmp
pop
xor
das
sub
mov
mov
cmp
pop
mov
sbb
pop
xor
inc
repz
push
jecxz
mov
or
pop
jo
fnstsw
ret
and
push
pop
add
jne
mov
or
push
and
inc
mov
stos
lahf
leave
repnz
jge
in
in
xor
pop
push
jns
lcall
xchg
and
lock
ds
pop
or
and
mov
jl
aas
lcall
sbb
sbb
shll
lea
data16
cmp
and
data16
lret
ja
cld
dec
pop
mov
pop
xor
cmp
inc
stos
push
orl
pop
dec
cs
mov
and
lret
mov
sbbl
stos
clc
jecxz
jns
pop
mov
xchg
subb
mov
mov
jbe
pop
and
push
int3
int
outsl
pop
lds
daa
push
fs
in
adc
mov
popf
pop
out
inc
leave
push
scas
pop
shr
fwait
jmp
fchs
stos
andl
ret
popa
sbb
in
mov
nop
pop
lods
xchg
imul
jns
jbe
pop
fs
cld
cs
push
out
pushf
pop
and
iret
lret
sbb
fnstenv
and
loope
jmp
leave
fstl
lret
mov
sub
addb
fstpt
pop
outsb
test
movsl
xchg
add
and
nop
mov
sbb
pop
ja
and
fsubl
lcall
insl
lea
sbb
les
mov
enter
hlt
repnz
sub
or
jno
xchg
test
je
outsl
push
pop
das
js
pop
xchg
pop
arpl
out
mov
jle
xchg
sub
sbb
loop
or
sbb
mov
xchg
push
pop
sahf
pop
pusha
inc
jbe
adc
pop
mov
sbb
adc
iret
scas
pop
movsb
mov
jp
shlb
addl
mov
out
sti
int3
iret
inc
pop
insl
out
adc
test
push
or
cmpsl
into
inc
mov
jb
or
lea
and
je
sbb
sub
rcrb
fs
iret
test
push
mov
inc
popf
mov
lahf
inc
sbb
xchg
pop
mov
lock
pop
inc
outsl
adc
pop
bound
dec
mov
addr16
jg
cltd
xchg
xor
mov
fcom
pop
in
mov
int
mov
inc
add
jo
pop
aas
and
movl
push
mov
jecxz
in
add
pop
lcall
std
pop
inc
mov
jb
pop
fimuls
push
dec
pop
pop
or
loope
pop
int3
test
bound
and
lods
cmp
pusha
pop
pop
pop
out
outsb
addr16
add
jmp
aas
cld
pop
roll
push
idivb
push
pusha
jmp
sbb
sbb
jmp
fidivrs
pop
sub
rclb
test
orl
scas
mov
dec
cmp
cmpsb
pop
pop
adc
sub
in
pop
lods
pop
mov
dec
movsb
lock
fdivrs
lret
mov
sbbb
lock
and
lret
pop
cld
nop
aam
in
mov
jo
pop
je
aaa
loopne
gs
std
dec
push
pop
xor
push
adc
scas
add
imul
and
sub
cmc
xchg
fstps
mov
dec
scas
repz
loope
js
lcall
testl
stos
int
cli
sahf
shl
jmp
jae
mov
lret
cwtl
ja
cld
shrl
fidivrs
pop
jecxz
out
xor
mov
xchg
fstl
nop
pop
mov
push
sub
in
ficoml
pop
adc
adc
dec
jo
pop
lahf
gs
mov
cmpsl
stc
mov
pushf
test
into
pop
sbb
fsubp
dec
ret
popf
pop
loope
movsl
cmp
scas
or
scas
push
scas
rcrl
mov
pop
clc
mov
stos
pop
fildll
int
mov
pop
inc
cmpsb
scas
mov
mov
dec
jle
std
pop
fcomps
fs
cmp
pop
sub
ljmp
int
inc
lods
and
cld
out
jl
mov
lret
mov
mov
pop
or
in
or
dec
iret
pop
jnp
pop
pop
jno
cmp
or
push
stos
xchg
pop
xor
xchg
jge
and
and
rcrl
or
jno
lock
pop
lret
aas
nop
pop
sbb
icebp
xchg
pop
scas
sar
repz
sbb
int3
adc
pop
jne
jp
inc
jns
insb
jo
pop
aam
loop
je
aas
orl
pop
enter
xchg
jmp
mov
and
adc
sbb
fadds
subl
pusha
sbb
jecxz
in
inc
pop
adc
sbb
ror
jl
cmp
xchg
jne
jecxz
into
pop
sub
sahf
xlat
jp
add
and
outsl
cmp
jb
inc
out
flds
ljmp
mov
imul
mov
add
adc
scas
add
out
sub
pop
int
xchg
jp
pop
dec
adc
push
pop
inc
test
bound
sbb
hlt
pushf
mov
cmp
cmp
dec
lcall
dec
jb
fidivs
orb
jp
sbb
dec
pop
int
dec
enter
pop
fldenv
loopne,pt
adc
push
or
fisubrl
in
in
pop
movsb
mov
sub
sbb
jmp
scas
pop
or
mov
cmp
cmpsl
mov
sub
pop
pusha
ss
js
or
jnp
push
iret
inc
mov
push
jb
arpl
mov
cmp
loop
pop
or
cmpsl
jl
stos
mov
sub
pop
roll
adc
sub
adc
movsb
stc
sbb
add
xchg
in
cmp
add
dec
lods
rclb
in
aas
pop
add
pop
mov
cmpsb
sbb
loope
sti
popa
nop
js
jne
scas
cmc
mov
lcall
and
add
xchg
inc
sub
and
sbb
pop
mov
cmc
jmp
loop
mov
sbb
xchg
lahf
sbb
jmp
fildl
mov
cmpsb
xchg
mov
jle
pop
pop
stos
movsb
and
mov
jmp
mov
xchg
imul
pop
sub
pop
filds
hlt
into
rol
jb
inc
lret
outsb
sti
or
out
cltd
pop
dec
pop
out
wbinvd
int3
pop
pop
nop
pop
jbe
jne
push
scas
mov
dec
iret
fildl
push
pushw
mov
test
mov
adc
pop
cmpl
sbb
addb
push
in
push
pop
and
jecxz
out
pop
data16
je
out
mov
xchg
gs
jg
fimull
ja
lcall
jne
sbb
pop
cli
loopne
push
int
decb
ficompl
push
sub
movsl
add
cmpsb
mov
daa
jb
and
out
addr16
mov
add
mov
fsubp
pop
shrl
pop
inc
icebp
bound
pop
fidivrs
mov
and
test
aam
mov
bnd
mov
shrb
sub
adc
fdivs
dec
rcrl
pop
icebp
dec
and
and
xor
pop
sbb
xchg
mov
sbb
hlt
pop
jmp
inc
mov
les
mov
loopne
ret
and
rcr
arpl
jne
pop
es
push
mov
lds
jmp
pop
ficomps
push
jns
pop
adc
pop
sub
fistpl
movnti
lds
pop
das
pop
fisubs
ss
pop
cmp
add
rolb
int3
mov
and
pop
pop
fistl
lret
aaa
repnz
and
iret
pop
push
adc
mov
scas
pop
push
jle
std
pop
or
int
ffree
fs
or
sbb
pop
xchg
jecxz
add
rcrb
fidivl
idivl
insl
and
push
or
jb
fs
lods
ror
push
das
pop
and
jg
ljmp
scas
sub
and
test
shll
je
rcrb
out
movsb
pusha
icebp
xor
shlb
mov
xchg
xchg
xor
lock
jae
popf
dec
aaa
inc
or
shll
push
pop
sarb
jbe
pop
sub
fdivrp
pop
shrl
mov
pop
mov
push
add
and
or
mov
mov
std
dec
pop
sbb
int
sti
fs
aad
or
sbb
fidivl
cmc
ja
addr16
sub
add
pop
sub
stos
xchg
pop
push
daa
jg
xor
jp
rcrb
fmuls
dec
sub
cmc
sbb
dec
cmp
xchg
xor
out
xor
loop
jge
int
jnp
cmp
pop
mov
jns
dec
pushl
lret
enter
lcall
mov
ss
inc
sbb
js
icebp
push
cmp
adc
dec
mov
pop
inc
rcll
sbb
pop
outsl
and
sub
xor
xor
fcomps
push
inc
out
int
mov
xchg
bnd
mov
dec
pop
push
cwtl
test
loop
inc
and
mov
enter
jle
lcall
lret
loop
addr16
xorb
add
jbe
js
fildl
mov
jecxz
pop
adcl
test
insl
cwtl
mov
in
pop
add
mov
dec
mov
and
mov
lahf
fstl
lret
add
pop
jne
or
mov
dec
sahf
cli
mov
test
pop
mov
mov
cs
mov
dec
pop
or
and
mov
mov
pop
pusha
xchg
or
iret
mov
aas
sbb
dec
mov
pop
pop
add
negb
popf
xchg
xor
ret
pop
pop
push
sub
scas
std
mov
or
mov
or
aam
xchg
js
and
fcomps
sbb
les
fadds
mov
mov
adc
addr16
lods
xchg
pop
or
pop
mov
lds
pusha
xor
pop
imul
mov
add
aaa
jge
dec
xor
push
pop
mov
roll
test
das
mov
push
test
dec
jg
insl
dec
imul
stc
mov
sbb
addr16
int
dec
ret
and
ja
pop
push
std
jbe
out
sbb
bound
pushf
loope
sbb
mov
fistpl
mov
std
dec
popf
pop
push
jb
push
mov
jne
mov
or
cmp
mov
rorl
stc
bound
roll
inc
imul
sub
pop
inc
out
daa
and
scas
mov
mov
out
adc
es
mov
push
or
hlt
sbb
cmpsl
outsb
sti
jmp
sub
inc
pop
xchg
sbb
xchg
fwait
mov
imul
pop
repz
lea
clc
fdiv
enter
xchg
mov
movsl
cmpb
cwtl
xchg
out
cmp
lods
mov
mov
pop
jecxz
xorb
sub
pop
ja
xor
std
cmp
pop
cmp
sub
jae
mov
dec
clc
add
stc
mov
fldl2t
loope
jbe
out
push
push
and
xchg
data16
fcomps
std
sbb
pop
loope,pt
xor
mov
repz
xchg
push
mov
cs
push
sub
and
push
xchg
ds
add
rcrb
sub
and
cmp
sub
test
dec
sbbb
sub
mov
mov
lods
mov
jns
shl
adc
sub
fstpl
fsub
scas
daa
mov
pop
and
pop
sarl
pop
xchg
xchg
mov
and
fistpl
dec
sbb
pop
jbe
cmp
jl
mov
or
xor
scas
dec
pop
outsl
loope
inc
xchg
cmp
pop
dec
pop
sti
int3
rcrl
data16
mov
movsl
xlat
sbb
pusha
jnp
push
and
test
in
lcall
inc
mov
or
dec
mov
test
or
aaa
cmp
pop
loopne
mov
addl
mov
pop
pusha
lods
in
sub
out
scas
mov
jbe
dec
enter
and
or
roll
mov
or
jno
lods
sbb
mov
aam
jp
cmp
pop
lcall
pop
lcall
mov
addr16
sahf
cmc
int
ljmp
mov
sub
xor
es
cmp
lea
sbb
pop
and
inc
out
ds
mov
pop
sti
rol
mov
push
inc
pop
movsb
sahf
push
insb
sbb
adc
test
push
pop
outsb
jae
imul
pop
dec
andl
add
xor
bound
inc
sub
fisttpl
adc
cmpsl
mov
mov
lret
inc
pop
mov
adc
in
ds
pop
sbb
aam
mov
sahf
rol
sbb
mov
xor
dec
leave
xchg
fadds
imul
jmp
es
xor
sbb
ss
pop
mov
or
dec
pop
sub
int
jo
jae
loop
cmp
pop
sbb
and
mov
jp
cs
push
dec
movsl
icebp
pop
push
xchg
addr16
jmp
add
pop
arpl
leave
sub
sahf
mov
xor
xor
test
in
pop
aas
sub
cwtl
jmp
pop
and
or
add
int3
pop
push
mov
fistps
lds
insb
and
add
mov
repz
pop
mov
pop
jl
adc
ds
outsl
pop
fmul
movsb
xchg
fwait
push
cli
inc
pop
pop
pop
addr16
add
xchg
sbb
sahf
pop
push
inc
in
push
xor
popa
pop
int3
cli
fnstcw
cmp
dec
stc
jle
scas
jo
push
cs
and
mov
pop
sub
pop
mov
or
out
xchg
jbe
mov
pop
xchg
or
inc
in
movsb
pop
jecxz
loop
mov
jno
pop
mov
pop
add
call
addr16
jne
pop
jae
sti
mov
add
push
pusha
fistpl
add
sub
push
xchg
and
aaa
out
andl
sbb
and
mov
jne
push
test
or
mov
xor
dec
jns
mov
xchg
enter
dec
pop
inc
in
dec
mov
push
pop
fstl
jl
add
mov
pop
mov
repnz
repz
ljmp
out
xchg
pop
mov
mov
int3
mov
xor
ret
and
dec
mov
rcr
fisubl
lcall
sbb
std
adc
cmp
pop
mov
fdivrs
inc
pop
insl
and
cmpsl
in
pop
and
mov
das
mov
xchg
adc
pop
lret
mov
sbb
mov
pop
cmp
je
outsl
pop
out
in
lcall
test
dec
scas
push
mov
mov
xor
test
push
pop
cmpsb
dec
loopne
loope
mov
into
scas
mov
mov
add
in
movsb
jb
popa
inc
nop
ficomps
pop
cmp
dec
fbld
orb
push
cmp
jo
pop
pop
jmp
cltd
scas
test
cmc
nop
bound
jecxz
dec
cmp
in
sub
test
dec
mov
xlat
and
xor
push
stos
daa
outsl
nop
fcmovnu
lods
bound
mov
jae
push
adc
add
push
cmp
xchg
add
and
inc
pop
ss
faddl
jo
jmp
rcr
les
pop
lods
fldcw
nop
cli
xchg
push
sbb
and
or
adc
fstps
lahf
addr16
int3
daa
dec
or
jo
inc
int
mov
out
push
out
pop
loop
jmp
popa
pop
adc
cmpsl
dec
dec
ss
cmp
test
xchg
sbb
ds
int
xor
jmp
mov
rcr
lods
mov
mov
adc
mov
fdivrs
or
negl
mov
cmp
repnz
pop
jg
dec
stc
pop
mov
mov
pop
loop
push
and
cmp
fstp
out
mov
cs
int
push
xor
stos
mov
pop
es
test
or
pop
sbbl
xor
cmpsl
ret
scas
pop
shl
cli
xchg
jnp
add
jge
scas
fwait
mov
xchg
js
dec
popa
cltd
add
cmc
iret
and
cs
pop
jbe
ljmp
dec
shlb
jmp
pusha
mov
cmp
and
ljmp
xchg
pop
movl
xchg
pop
lds
in
loopne
jbe
test
xlat
pop
cltd
fwait
in
pop
lods
int
subb
pop
and
pop
sub
mov
and
add
ret
dec
add
lcall
push
inc
mov
stos
add
mov
lea
aad
dec
push
lahf
clc
fbld
lds
rorl
sbb
cwtl
lret
pop
xor
pusha
mov
mov
xchg
mov
loope
scas
dec
scas
jecxz
loopne
mov
or
inc
scas
ljmp
inc
inc
inc
mov
fwait
cltd
and
lds
fildl
push
in
mov
mov
and
adc
scas
movsl
xchg
sbb
ret
xor
sbb
xchg
sub
out
mov
fdivs
add
popf
mov
orl
ljmp
mov
lods
popa
mov
sub
flds
repz
add
dec
test
lahf
mov
loop
mov
sbb
inc
out
xor
mov
mov
pop
repz
pop
clc
mov
fidivrs
or
cmpb
loopne
push
fcomps
popf
cmp
dec
ljmp
xchg
push
dec
sub
xchg
sbb
lahf
dec
pop
rcll
jp
cli
out
jbe
imul
jb
repz
xor
xchg
push
sub
mov
jmp
mov
fcoms
cmpsl
mov
dec
das
jbe
pop
popa
cmpsb
pushf
mov
pop
jmp
push
mov
mov
cmp
js
mov
mov
lret
popa
into
roll
fs
push
jb
imul
int
insb
daa
pop
sbb
adcl
data16
pop
pop
and
sbb
lods
push
pop
es
out
push
test
lock
addr16
jl
cmp
push
sbb
out
xor
jb
pop
push
decb
and
pushf
push
cli
nop
pop
or
in
int3
out
cs
mov
stc
cwtl
pop
popaw
sub
int
mov
rcrb
cmp
add
faddl
cltd
mov
das
push
pop
or
and
xor
into
mov
aad
sub
mov
nop
cltd
mov
mov
jbe
mov
or
or
loope
add
pop
dec
mov
sub
ja
adc
iret
inc
shlb
push
xchg
adc
xor
jmp
cmp
jmp
stc
js
pop
loop
pushf
push
adc
shrl
mov
and
push
aas
cmp
dec
scas
jae
push
cmp
pop
inc
popf
lds
dec
pop
movl
out
inc
pop
ss
std
hlt
cwtl
inc
testb
mov
aaa
mov
insl
sub
push
mov
cld
pop
movsl
lods
and
pop
test
sbbb
and
test
jle
adc
insl
pop
xchg
push
int
out
out
out
mov
fwait
add
lods
jne
pop
arpl
xchg
push
repnz
cmp
xchg
lret
push
icebp
mov
dec
jbe
sub
pop
pushf
xor
sub
add
aas
push
or
stos
mov
pushf
xchg
sub
pop
imul
pop
mov
push
cwtl
enter
jmp
imul
decb
mul
test
pop
cmp
ret
iret
or
push
xchg
pop
xchg
jnp
cld
xor
dec
adc
adc
repz
movsb
push
stos
jno
ja
dec
test
jle
xor
cmp
sbb
pop
add
aas
fcompl
pop
push
adc
mov
scas
push
adc
xor
imul
pop
mov
sbb
mov
stc
push
fisubrs
push
sub
aaa
outsl
gs
or
out
dec
lret
xchg
in
hlt
pop
mov
loop
jnp
pop
sub
sbb
lcall
pop
pop
xchg
pop
in
data16
daa
jbe
adc
pop
mov
jb
and
fcmovb
inc
call
adc
cmpsl
mov
xlat
mov
fildll
fcmovne
xchg
gs
dec
push
dec
add
dec
in
sbb
mov
cmp
out
cmp
or
xchg
insb
xchg
out
sbb
push
inc
sub
test
ljmp
out
nop
pop
push
sub
shrb
das
add
sbb
pop
add
dec
ret
add
push
and
and
int3
jno
loopne
roll
mov
pop
aaa
add
cli
das
pop
mov
int3
add
inc
leave
and
es
cmp
jmp
lea
scas
out
mov
pop
jnp
rorb
jecxz
jmp
push
xor
negb
int3
mov
and
mov
jmp
insl
sti
fadds
ss
arpl
push
push
pop
sub
dec
sub
cmp
cmp
cmp
mov
das
ljmp
cwtl
mov
pop
mov
decb
sbbb
pop
int3
cmp
and
sahf
cmp
es
adcb
or
lods
movsb
pop
pop
mov
mov
pop
hlt
pop
mov
push
insl
mov
and
arpl
aad
loope
or
pop
pop
jmp
ret
ror
lea
cmp
sbb
leave
cli
dec
and
sub
mov
bound
sub
scas
fdivr
pop
stc
fstps
pop
sar
xchg
mov
int3
test
lds
fcoms
mov
shrb
icebp
push
add
adc
and
pop
inc
dec
fiadds
jp
mov
mov
sub
icebp
and
ja
out
arpl
scas
mov
movl
pop
dec
or
ffree
push
incb
clc
loopne
mov
or
and
jmp
xchg
adc
daa
mov
lods
pushf
dec
xchg
into
aas
sbb
pop
rclb
in
in
inc
add
out
adc
cmp
add
aad
mov
xlat
std
pop
xor
and
xchg
jecxz
cmp
xor
adcb
dec
or
sbb
out
pop
mov
xor
dec
sub
xchg
ss
cltd
mov
stos
mov
mov
shrl
add
adc
js
scas
cmp
pop
pop
decl
into
inc
cltd
test
sbb
push
out
fldt
loope
cli
pop
xor
rolb
pop
sbbl
int
lock
inc
mov
add
mov
fisubrl
pop
and
jbe
pop
out
jb
bound
or
jo
xchg
and
js
pop
cmp
jle
dec
mov
cmc
cmp
daa
shll
loopne
sub
pop
enter
and
push
push
pop
int3
das
std
insb
sbb
int
fidivrl
data16
xorl
ja
sbb
into
popa
xchg
shll
xchg
dec
in
aad
iret
pop
pop
leave
ret
push
ljmp
out
or
dec
clc
stos
ds
inc
dec
pop
roll
sub
cli
cmpsl
or
add
out
mov
push
ljmp
sub
jecxz
in
pop
mov
dec
cmp
jmp
and
pop
pop
in
add
jbe
add
mov
dec
push
pop
inc
xor
notl
pop
sub
fimuls
fdivs
out
int3
lcall
add
subl
xor
push
and
xchg
jecxz
pop
xchg
inc
repz
pop
std
pop
jecxz
int
xor
stos
int3
sbb
in
and
pop
icebp
sbb
cwtl
pushf
push
push
pop
jo
arpl
sub
mov
pop
pop
faddl
sbb
pop
mov
cmp
addr16
js
xor
clc
pop
mov
pop
xchg
dec
and
icebp
cmc
insb
and
jne
fsubp
pop
pushf
cmp
pop
pusha
in
mov
and
lods
push
fsts
sbb
push
pop
mov
jmp
icebp
lcall
sub
popa
and
daa
imul
pop
loop
pop
jne
shll
out
js
cmp
xor
sti
int3
pop
sub
cld
dec
fimull
stos
pusha
test
test
cmp
pop
add
in
fnstcw
xor
push
mov
dec
jmp
shl
add
add
mov
stc
pop
loopne
mov
sub
jne
std
ljmp
xor
ret
fadd
pop
pop
inc
pushf
and
add
pop
push
sub
gs
cmp
cli
pop
cmc
pop
dec
or
int
cli
sarl
mov
addr16
ficoms
xchg
pop
lds
xchg
in
movl
ror
fwait
sbb
fimuls
push
aam
ss
dec
outsb
fstps
outsw
jb
pop
je,pt
inc
insl
jge
lahf
pop
mov
call
aas
pop
out
inc
inc
je
std
mov
or
cs
push
mov
mov
rcll
push
jp
sbb
mov
pop
and
lret
pop
push
repz
cmp
adc
lret
xchg
lahf
lods
inc
pop
adc
jns
jo
mov
adc
add
sub
dec
repz
push
xlat
mov
pop
lods
out
sbb
ret
pop
sub
push
into
or
hlt
stc
sbb
adc
aad
repnz
inc
imul
sub
sub
stos
insb
daa
and
inc
jge
cwtl
cmovg
or
pop
xor
scas
jnp
jecxz
add
rcrb
lret
scas
or
pop
push
inc
iret
push
sub
pop
or
imul
cmovge
push
nop
inc
mov
in
cltd
pop
ret
pop
mov
and
dec
push
or
inc
movsl
ret
in
nop
test
fs
insl
or
clc
pusha
adc
sbb
ja
mov
std
inc
daa
inc
jnp
mov
cltd
nop
sbb
sub
ja
pop
and
decl
xchg
xchg
jne,pt
pop
insl
pop
aad
data16
jbe
mov
pop
pop
mov
into
ficomps
addb
mov
mov
inc
push
addl
cwtl
fidivrl
xor
push
xchg
cli
sub
pop
add
ret
push
push
jmp
cli
lods
bound
frstor
pop
adc
lret
std
add
jge
lods
cmp
pmuludq
push
daa
in
pop
or
mov
push
jecxz
js
push
pop
dec
dec
adc
jp
cmp
jo
cmp
pop
pop
repnz
cwtl
dec
enter
jecxz
call
inc
jns
imul
mov
int3
ret
inc
xchg
pop
jge
cmp
pop
dec
add
rorb
adc
adc
jecxz
rcll
ret
daa
test
sub
cmp
mov
pushf
mov
jne
add
mov
rcr
movb
pop
mov
sub
data16
sti
roll
inc
adc
cli
cmp
stc
int3
stc
fs
lret
pushf
pop
xchg
clc
xorb
pop
inc
out
mov
xor
jecxz
sbb
or
pop
xlat
push
or
jmp
pop
pop
push
push
out
fwait
push
daa
mov
rcrl
inc
stc
gs
cli
pop
sbb
push
negb
test
mov
pop
or
cmpsl
or
xchg
or
mov
xchg
aad
pop
fdivl
rcrb
push
test
cmp
scas
add
dec
jle
push
pop
xchg
iret
mov
pop
add
mov
out
mov
mov
pop
aas
fwait
and
imull
pand
fstpl
pushf
addr16
int
or
pusha
adc
iret
and
xor
pop
rorb
clc
pop
pop
push
mov
stc
cmp
xor
mov
ficompl
mov
mov
loope
rorl
pop
xor
pop
push
add
mov
jbe
inc
mov
stc
mov
or
pop
adc
mov
cmp
clc
jmp
fstpl
add
loop
sub
jmp
cmp
mov
test
pop
mov
dec
cwtl
pop
sbb
add
stos
pop
sbb
or
jle
test
rorb
jno
jnp
movsl
xchg
push
lcall
mov
adc
ss
mov
bound
pop
loop
mov
or
jne
adc
xorb
clc
and
stos
xchg
dec
xchg
jns
mov
cmp
adc
fcoms
mov
xorb
sub
imul
int3
jge
pusha
mov
pop
push
jne
data16
pop
cmpsb
jl
int3
add
and
repz
mov
out
mov
insl
xchg
enter
xchg
cmp
imul
add
hlt
lahf
pop
rorl
jg
fwait
or
loop
vpaddb
lock
add
lret
jae
adc
mov
push
xorl
dec
or
in
mov
outsb
ffree
mov
in
enter
test
xor
pop
jecxz
cmp
pop
movsl
mov
arpl
pop
icebp
pop
es
lret
rcrl
test
mov
mov
lahf
fisttpll
nop
pop
dec
mov
cwtl
cmp
push
adc
sti
xor
xchg
stos
adc
fnstsw
rcrb
int
rcrb
aaa
out
hlt
mov
loopne
mov
pop
cli
insl
inc
shlb
daa
push
out
hlt
mov
adc
pop
fsubrs
mov
ja
pop
leave
dec
jnp
std
pop
sbb
mov
pop
jae
loopne
andl
fimull
xchg
mov
int
mov
out
stc
pop
lods
bound
pop
mov
mov
xchg
pop
jle
lea
jns
fnstcw
jl
xchg
add
mov
pop
shrl
jle
mov
addr16
loop
lahf
aad
stos
out
lods
mul
pop
pop
les
sarl
cmpsb
cltd
jno
incb
mov
das
jmp
icebp
mov
mov
inc
xor
arpl
sbb
pop
int
pop
sub
add
cmp
je
xchg
leave
fs
sti
push
mov
loopne
pop
mov
mov
pop
dec
dec
lret
sti
jge
push
mov
jne
mov
mov
push
loope
je
jbe
mov
xchg
aad
adc
and
push
pop
loop
les
mov
dec
rep
std
mov
insb
inc
cltd
push
sbb
mov
pop
lret
sbb
add
inc
jmp
cmp
mov
das
cltd
fsubl
jmp
pop
xchg
in
jge
mov
stc
dec
popf
and
stos
xchg
or
sub
adc
pop
mov
clc
pop
mov
pop
adc
xchg
push
shrl
sbb
and
cmp
push
outsb
mov
aam
insl
neg
in
lahf
sbb
adc
jp
mov
mov
pop
sub
and
push
xor
shlb
testb
and
lds
orb
mov
fs
add
pop
out
jmp
movsb
mov
jle
dec
add
pop
imul
and
sar
repz
dec
ds
dec
ja
shlb
mov
xchg
negb
in
int3
lods
cmp
addr16
or
push
cli
dec
pop
add
inc
mov
pop
cmp
jecxz
pop
rorl
int
das
pop
cmc
pusha
mov
pop
jge
sbb
lret
int3
xchg
inc
outsl
ljmp
mov
push
xlat
pop
xchg
loopne
je
cwtl
or
jo
mov
out
ja
movsb
sub
cmp
xchg
ljmp
cwtl
loopne
sub
std
pop
mov
sbb
pop
push
jbe
scas
xchg
je
mov
adc
call
stos
dec
jecxz
icebp
or
sbb
pop
leave
xchg
out
inc
cmp
pop
xchg
add
jbe
pop
xor
xor
dec
gs
xchg
fmull
lahf
sub
clc
xchg
scas
xor
pop
cmc
mov
and
pop
sbb
jbe
mov
ret
imul
dec
lea
xchg
jp
pop
mov
mov
xchg
scas
adc
mov
dec
or
pop
lea
fstl
jb
mov
mov
fwait
pop
fadd
or
push
nop
mov
into
dec
dec
cwtl
mov
pop
or
mov
movsl
fidivrl
mov
dec
mov
jne
int3
inc
inc
ljmp
fldenv
out
lcall
cltd
sub
into
adc
pop
adc
inc
mov
iret
pop
ja
out
jbe
sub
pop
or
jns
xchg
pop
subb
in
lahf
fsubp
leave
add
or
dec
pop
inc
pop
mov
inc
pop
cltd
jno
xor
data16
jb
pop
inc
add
loop
or
add
int3
mov
jnp
jb
pop
adc
pop
sti
movhps
pusha
dec
cmp
pop
xchg
cmp
stc
test
xor
pop
jg
mov
mov
loop
mov
clc
adc
push
mov
popf
iret
pop
hlt
icebp
shufps
dec
fprem1
loopne
pop
inc
push
mov
cltd
add
cs
loopw
lods
aam
mov
and
adc
lds
inc
inc
sbb
pop
mov
shll
push
outsl
pop
pop
cmp
loope
pushf
sbb
push
mov
fimull
insl
xchg
fistl
in
mov
pop
call
sub
jns
cld
pop
sbbb
xchg
int3
pusha
loopne
mov
fmul
lahf
mov
sub
mov
les
xor
pop
insl
pop
jb
test
inc
fisubl
adc
sbb
add
pop
xchg
dec
pop
mov
movb
sub
jg
push
xchg
inc
mov
dec
xchg
icebp
pop
in
out
pop
adc
cmp
pop
sbb
pusha
repz
inc
jb
sub
sub
inc
pop
int
mov
loope
sbb
les
stos
jo
push
jbe
add
inc
fs
pop
xchg
add
rcrb
jno
inc
sub
sub
dec
sbb
pop
popf
cli
int
and
jl
in
cmp
fdivrl
cs
jb
dec
pop
movsb
imul
dec
xchg
loope
pop
or
add
fcoms
or
inc
fistps
inc
push
ja
js
popa
imul
fwait
dec
pop
adc
add
sub
rol
sbb
push
xor
insl
pop
pop
rolb
scas
sbb
lock
int3
push
pop
aas
sbb
xchg
das
bound
pop
in
sub
mov
dec
pop
adc
push
push
mov
or
xchg
stos
jge
call
ds
xor
adc
sub
add
hlt
pop
push
mov
stos
mov
jo
mov
sahf
and
sub
ja
lahf
mov
enter
or
pop
push
cmp
pop
test
cmpsb
xchg
pop
lahf
mov
imul
xor
int
jnp
and
icebp
gs
mov
addr16
lret
or
sbb
out
pop
add
jns
cmpsl
dec
jno
mov
mov
push
lret
mov
dec
xchg
mov
xor
or
ja
out
dec
push
hlt
pop
aaa
flds
and
leave
pop
jns
clc
call
pop
mov
lahf
cmp
sub
mov
lcall
lea
cli
and
lahf
pop
aaa
pop
lret
fld
add
mov
out
cltd
xchg
jne
sbb
das
aaa
lret
aam
adc
popa
pop
cmp
dec
and
stos
push
adc
test
fcmovne
xchg
mov
mov
test
pop
or
adcl
mov
fcoms
push
out
lret
inc
andl
rcll
test
push
mov
pop
pushl
push
add
inc
lea
orb
cmpb
ret
repnz
pop
sub
scas
into
cmpsl
in
shlb
lods
sub
mov
iret
shll
xlat
push
mov
jecxz
pop
mov
jmp
pop
icebp
insl
cmp
cmp
push
xor
aas
sbb
jecxz
add
pop
imul
in
or
inc
pop
dec
jecxz
iret
lcall
pop
xchg
test
int3
mov
aam
clc
mov
addl
jecxz,pt
lret
jl
dec
pop
mov
jno
dec
pop
inc
mov
pop
fldcw
leave
lret
push
cltd
test
enter
sbb
dec
mov
iret
cwtl
xchg
data16
add
pop
in
adc
or
je
dec
clc
push
push
fdivl
pop
xlat
xchg
cld
add
popf
mov
ss
test
push
imul
test
pop
jb
lahf
jle
loop
flds
sbb
sub
jp
jo
mov
mov
ljmp
xchg
xchg
cmpsb
stos
pop
rcrb
cmp
ss
mov
int3
push
aam
pop
sbb
xchg
test
repz
mov
or
cmovnp
xchg
xchg
scas
mov
xor
stos
lods
in
jo
mov
sbb
scas
enter
je
sahf
lods
rolb
xor
jne
sar
xor
xlat
sar
mov
dec
or
dec
mov
popa
add
int3
xchg
fisubrl
bound
push
mov
jge
push
pop
divb
fldcw
inc
add
andl
push
pop
shrb
pop
sub
mov
mov
jge
xchg
gs
mov
lret
pop
sub
pop
shlb
fs
xchg
pop
mov
push
addr16
sub
insb
int
xor
ret
aas
clc
shrl
mov
lock
push
pop
mov
adc
pop
sub
int
mov
push
jbe
nop
out
xchg
leave
fucomp
movsl
cmp
adc
mov
pushf
jp
loope
sbbl
jmp
cmp
xor
int
scas
cmp
repz
fdiv
add
mov
jb
fists
dec
cmc
pop
outsl
pop
lock
push
and
mov
addl
into
cmp
dec
test
fcomps
mov
xchg
cltd
xor
xchg
push
pop
lods
es
and
in
pusha
cmp
gs
xor
sbb
out
fstpl
data16
int
mov
pop
or
jne
fadd
aam
and
pop
outsb
dec
xchg
imul
inc
pop
jbe
jl
jno
mov
inc
dec
leave
scas
int3
xor
jg
pop
mov
mov
imul
mov
pop
test
dec
cmp
insb
fildll
ret
sbb
sbb
mov
jnp
xor
and
jo
mov
inc
add
xchg
pop
sbb
fists
mov
jp
sub
pop
and
in
pop
gs
cld
cltd
test
inc
mov
xchg
mov
mov
mov
sub
xor
or
pop
jns
out
xor
sbb
inc
rclb
sub
leave
jmp
stos
mov
scas
adc
pop
dec
xchg
jae
fidivl
inc
cld
cld
pop
outsl
lahf
gs
xor
das
movsb
imul
clc
sbb
cli
or
xchg
flds
lret
pop
push
lcall
push
dec
leave
xor
or
pop
ror
je
insl
mov
adc
pop
lahf
dec
push
jecxz
pop
jns
pop
daa
push
pushf
jb
pop
out
fbld
jbe
stos
shrb
test
xor
sbb
push
pop
mov
dec
sbbl
mov
test
xor
xor
push
push
and
mov
sub
stos
insb
inc
push
pop
xchg
dec
mov
lahf
mov
orb
test
add
pop
xchg
aaa
fcmovnbe
test
pop
cmp
loope
ja
lds
push
pop
inc
push
fstpl
dec
cwtl
sbb
xchg
shrb
aad
ret
in
out
jmp
sub
lds
shrl
xor
mov
add
fwait
aad
pop
push
rclb
jle
insl
sti
dec
mov
mov
jp
xor
movsb
aad
xchg
mov
out
int3
pop
xor
test
push
enter
mov
mov
adc
mov
adc
jp
addb
cmp
mov
clc
mov
shlb
cmpsb
push
pop
pop
notl
mov
rclb
lret
loopne
sbb
push
in
aaa
sbbb
jp
das
pop
cmc
dec
xor
adc
push
ja
sbb
jecxz
insb
fs
push
lret
sbb
clc
icebp
loope
pop
scas
pop
jmp
pop
fisttps
lret
lods
push
push
dec
stc
gs
xchg
dec
imul
inc
mov
sbb
sbb
out
mov
lods
out
or
pop
or
fwait
xchg
sahf
repz
out
arpl
sub
fs
imul
jmp
mov
jmp
sub
sbb
xchg
jle
pop
in
mov
inc
sbb
cmp
xchg
dec
push
ljmp
sub
dec
in
sbb
push
xchg
in
push
repnz
or
dec
int
push
inc
mov
inc
roll
mov
pop
popf
dec
pop
or
int3
sbb
add
jae
popa
xor
inc
sub
scas
push
xlat
imul
mov
je
fadds
pop
movsl
outsl
std
das
or
fstpl
imul
jo
xor
popf
sub
cld
sub
fldt
mov
add
out
xchg
pop
xchg
cmp
or
in
scas
mov
mov
cmp
cmpsb
sahf
mov
mov
pop
add
andb
xchg
dec
jecxz
xor
pop
icebp
or
mov
mov
xchg
ret
lahf
add
hlt
sbb
cmp
push
pop
pop
fadds
mov
xchg
fsubl
sbb
jo
mov
inc
or
dec
push
pop
fstps
cli
out
sbb
pop
jl
test
lods
lcall
xchg
cmp
xorb
cld
pop
push
mov
lock
jle
adc
scas
adc
xchg
popa
add
cmp
xor
fmull
lahf
inc
pop
testb
psllq
pop
jmp
int3
push
je
and
leave
mov
jns
sub
lds
imul
mov
jge
xchg
fs
rclb
outsl
imul
movl
dec
push
sbb
inc
lds
pop
xchg
clc
cmc
jae
das
mov
jo
in
dec
scas
pop
int
xchg
imul
pop
mov
mov
adc
sbb
cmp
stos
in
xchg
mov
pushf
ret
xor
jl
out
fwait
js
sub
cmp
ds
jl
dec
inc
test
or
nop
cmpsb
pop
out
and
cmp
mov
xor
loop
shlb
xchg
and
pop
jo
push
les
dec
sbb
xchg
popf
pop
loop
mov
jl
adc
push
mov
lods
lcall
in
pop
pop
or
add
out
sbb
mov
pop
cli
jno
fidivrs
add
xchg
pop
dec
lds
jns
pop
mov
sbb
sub
imul
cmp
cmp
outsb
adc
sub
inc
cltd
leave
cli
pop
fisubrl
push
add
fldcw
js
mov
cmp
xchg
inc
popf
lods
negb
out
test
push
and
push
push
aas
jae
cmp
sub
jg
mov
mov
mov
stos
neg
into
dec
jb
pop
lds
push
push
loop
add
sbb
jg
pop
mov
sbb
jp
dec
movsl
mov
ret
push
shll
pop
adc
ret
in
lret
mov
sbb
rcrl
mov
aas
ja
int
mov
or
dec
aad
and
push
loope
jmp
mov
clc
dec
jb
pop
aad
push
daa
mov
add
hlt
icebp
pop
push
mov
fistpl
pop
push
lods
sub
cs
jb
iret
add
filds
add
inc
ljmp
sbb
dec
dec
xchg
inc
jmp
mov
shlb
mov
pop
outsl
jae
push
dec
cmp
cmc
mov
mov
xor
rep
idiv
pop
jno
repz
stos
mov
rcrb
jo
outsl
xor
int3
xchg
xchg
pop
jecxz
in
int
pop
lea
jb
outsb
dec
xor
cmpsl
jge
push
pop
and
loope
mov
dec
inc
callw
ficompl
in
pop
lods
add
sub
sub
push
ljmp
xor
aad
pop
js
out
ror
pushf
xor
dec
cmp
mov
jbe
pop
out
adcl
mov
int
sbb
pop
mov
neg
test
xlat
pushl
pop
and
int3
ficomps
pop
mov
scas
sbb
push
les
dec
daa
or
inc
pop
pop
test
xor
cmp
sub
loopne
test
lea
inc
sbb
adc
or
xchg
mov
pop
fldcw
stos
int
mov
inc
sbb
jb
enter
hlt
pop
mov
mov
fmul
adc
xor
jp
sub
pop
cmp
sti
dec
pushf
test
negl
mov
mov
lock
pop
cmp
mov
xchg
inc
pop
out
add
ret
or
stc
add
lock
or
sub
dec
lret
sbb
bound
movsl
scas
xchg
cld
pusha
cmp
pop
dec
jecxz
jl
cmp
jne
leave
aas
out
flds
gs
jb
lock
fidivl
inc
pop
jbe
push
dec
pop
iret
ucomiss
call
and
ja
jmp
xchg
jae
and
jp
cmp
test
sbbb
mov
mov
je
subb
fs
cmc
jmp
in
sbb
pop
mov
pop
in
fwait
pop
mov
xor
sbb
pop
dec
mov
iret
lret
pop
fisubl
sub
xchg
jecxz
xchg
mov
pop
add
or
mov
cmp
xor
pop
add
js
dec
mov
fstpl
sub
int3
pop
mov
jecxz
pop
std
sti
sbb
jae
adc
lret
add
fstpl
je
jg
scas
mov
or
movsl
jne
jmp
jnp
mov
adc
sbbb
push
cmp
pop
sbb
mov
sbb
sbb
lret
pop
sbb
in
mov
aad
fmul
enter
sbb
pop
push
xor
arpl
and
shrl
pop
or
xchg
push
jmp
mov
das
mov
or
push
sar
or
mov
and
inc
pop
test
jb
repnz
pop
xor
cmp
push
pusha
adc
mov
out
rorb
pop
and
push
lret
or
scas
sub
test
hlt
aam
cmp
mov
lods
sub
pushf
cmp
mov
mov
push
mov
pop
jg
add
xchg
int3
and
pop
mov
mov
xchg
test
push
jmp
and
sbb
xchg
sarl
ret
fdivl
push
sub
sbb
fs
pop
lock
xor
mov
push
inc
test
adc
jbe
push
cli
xchg
pop
nop
xor
repz
aaa
mov
lea
sbb
mov
jae
inc
xor
sbb
out
in
arpl
in
enter
fadd
push
gs
pop
mov
inc
adc
mov
or
add
adc
push
int
popa
out
roll
je
pop
cmp
lret
pop
leave
cmpsl
hlt
addl
inc
mov
pop
pop
cli
sbb
fs
stos
push
ja
jle
pop
inc
jecxz
das
rcrl
mov
lock
mov
pop
sub
out
scas
dec
and
xchg
mov
mov
outsb
lahf
insb
pop
and
jo
or
pop
ret
sbb
cld
push
sbb
scas
int
mov
jne
jo
jle
ficomps
push
ds
inc
push
ret
xchg
fldt
xchg
es
jecxz
lods
pop
test
jns
mov
in
pand
jb
pop
pushl
push
imul
mov
jb
mov
cli
ret
cmp
addr16
lret
int3
pop
int
xlat
pop
stos
enter
add
sbb
dec
stos
and
jp
mov
cltd
jg
xchg
pop
mov
mov
mov
iret
pusha
shll
or
dec
pop
dec
adc
sbb
testb
sbb
daa
fcompl
adc
push
les
push
dec
pop
push
dec
and
adc
divl
out
xor
rcl
scas
and
pop
loopne
sub
pop
mov
add
mov
std
scas
pop
outsb
jns
popa
mov
cld
cmp
add
xor
jb
stos
pop
inc
push
push
xor
jns
mov
cli
arpl
lods
sub
popl
mov
pusha
pop
mov
dec
inc
iret
pop
int3
mov
std
scas
test
femms
es
mov
dec
int
push
or
jns
jp
pop
mov
sbb
in
jo
testb
fstpl
arpl
int
pop
pop
dec
jno
mov
loop
push
ret
dec
pop
out
mov
mov
loopne
popf
cmp
pop
and
xchg
adc
or
outsb
sub
cmp
or
gs
in
jmp
sbb
movsb
mov
dec
xchg
pop
push
std
pusha
orb
stos
repz
pop
int
cld
pop
jl
dec
push
add
rorl
inc
in
mov
cs
fs
sub
lret
jns
test
dec
mov
ljmp
das
sbb
cmpsb
clc
mov
js
pop
ja
pushf
pop
movsl
xor
push
jb
test
mov
not
pop
int
sahf
xchg
push
lret
lcall
sub
sub
repnz
aad
pop
push
int
mov
sub
push
fsubrl
int3
pop
mov
int
push
stos
push
pop
mov
popa
pop
push
mov
ss
in
pop
pop
mov
push
popa
jb
add
into
mov
add
sbb
xchg
cmpsb
push
fidivl
pop
lea
shll
cmp
stos
mov
loopne
ljmp
pop
pop
xchg
dec
adc
jl
int
sbb
mov
cltd
cld
pop
fcomps
xor
xchg
fcomps
mov
sub
dec
and
jl
jns
sbb
mov
mov
pop
xchg
outsb
mov
dec
pop
outsb
sub
enter
xor
pop
xor
and
ret
jae
mov
jo
bound
stos
pop
jne
shlb
pop
test
mov
fistpl
icebp
xchg
or
sub
js
in
lods
arpl
scas
jbe
lds
lods
rcrl
int
enter
ficomps
sbbl
mov
push
lods
shlb
pop
mov
pop
into
push
jecxz
lret
mov
sub
aad
push
lcall
xor
mov
es
and
out
int
in
lahf
movl
incb
inc
dec
sbb
pop
int3
xchg
pop
loopne
cmp
lds
mov
stc
dec
push
pop
push
int
mov
lret
pop
mov
sub
nop
xor
frstor
mov
add
sub
rcrl
ja
xchg
sbb
sub
pop
dec
jge
data16
jl
lods
mov
pop
int
xchg
repnz
inc
rcrb
mov
fimuls
fnstenv
mov
inc
lahf
outsb
dec
push
adc
fmul
out
pop
inc
xchg
int
mov
dec
mov
imul
pop
xchg
out
imul
sbb
cmc
lods
xlat
sbb
out
mov
push
or
aaa
mov
sbbl
mov
repz
sub
mov
pop
movsb
fs
inc
and
sahf
inc
xchg
shrl
out
jae
mov
fnsave
pop
movsb
lods
and
pop
popf
gs
outsl
and
lds
push
mov
mov
lods
out
sbb
push
mov
lretw
int
xor
ss
lods
ror
enter
addl
aas
loopne
aaa
fs
xchg
dec
pop
pop
adc
popf
mov
hlt
pop
sub
ds
mov
call
inc
xlat
int3
jbe
pop
pop
loope
pop
inc
sub
pop
movsl
mov
arpl
iret
insl
mov
pop
xor
sbb
pop
insl
outsb
adc
cld
int
rorl
outsl
mov
fnstenv
cmpsl
ljmp
imul
nop
insb
lcall
pop
xor
mov
sbb
mov
pop
lret
movsl
mov
nop
inc
movsb
ljmp
iret
adc
stos
xor
xchg
insb
repnz
scas
es
lds
mov
mov
push
dec
insb
adc
pop
dec
sbb
mov
repz
fs
lods
xor
fldlg2
pop
test
pop
push
dec
les
or
pop
jno
je
outsl
rolb
pop
sub
add
lahf
dec
cs
or
jbe
fwait
mov
jecxz
and
jb
cmpsl
mov
inc
pop
dec
fiaddl
inc
jns
cmp
pop
dec
call
sub
aam
push
lock
xchg
pop
cmp
ret
in
inc
mov
lret
add
jo
mov
sub
dec
sahf
jl
fildl
cmp
or
or
mov
jns
mov
cwtl
in
out
lods
in
rclb
add
ret
dec
xchg
sahf
fwait
or
out
mov
fidivrl
cmpsl
mov
ss
mov
bound
pop
iret
cs
xor
push
lret
or
sub
mov
ret
clc
outsl
pop
pop
push
pusha
adc
lea
das
pop
stc
dec
in
pop
jno
jp
rcl
jge
pop
call
mov
dec
fistps
imul
pusha
pop
add
arpl
mov
jbe
sub
and
lea
pop
int
cmp
add
push
sub
pop
mov
pop
in
jmp
or
pop
xlat
mov
ljmp
aad
pushf
popf
dec
mov
sbb
add
mov
mov
xor
sbb
pop
arpl
jae
aad
push
xor
mov
push
jbe
sahf
int3
adc
pop
cs
int
pusha
push
inc
pop
jg
push
int3
mov
push
pop
sub
adc
fdivs
fbstp
xchg
pop
pop
repz
mov
mov
mov
stc
and
pushf
gs
repz
pop
cs
repnz
imul
mov
mov
adc
and
mov
sahf
xchg
jo
aad
inc
jne
add
das
arpl
pop
dec
lds
push
pushf
adc
jae
pop
pop
inc
xor
ret
mov
and
push
mov
pop
les
jns
aad
xor
nop
movsl
sarl
pop
cltd
cmpsb
pop
dec
cmc
mov
pop
sub
pop
inc
mov
int3
pop
fbld
push
sbb
loope
fs
dec
lret
dec
loop
shll
loopne
xor
and
dec
scas
aam
or
das
std
scas
mov
out
xchg
mov
cmp
lock
adc
int3
nop
lahf
push
rorl
xchg
push
mov
hlt
sub
in
fidivl
fiaddl
push
sti
mov
loopne
push
cmp
les
bound
sbb
in
jnp
mov
daa
and
divl
pop
sub
sbb
push
inc
mov
pop
mov
mov
dec
lods
inc
xchg
hlt
inc
dec
pop
lea
inc
and
pop
pop
cwtl
sub
sbb
adc
pop
fadd
dec
into
sub
xchg
lods
xor
inc
jp
xchg
in
test
xchg
jb
cwtl
mov
bound
dec
xor
dec
or
pop
mov
push
xor
fcom
stos
sub
addr16
xchg
pop
int
into
adc
test
popa
xor
xchg
int3
divl
pop
cmp
jp
xchg
data16
add
jge
jns
and
aas
dec
mov
jne
pop
sbb
xor
dec
and
mov
lret
pop
fisubl
jmp
popf
sbb
xchg
pop
cmp
or
sbb
mov
fistl
xor
dec
pop
mov
and
and
mov
lea
jb
pop
jmp
shl
pop
stc
and
pop
outsl
je
repnz
mov
mov
rcrl
sahf
stos
mov
stos
fcoms
fstps
out
test
pop
out
insb
or
repz
aad
pop
ss
rcr
mov
and
in
mov
add
xchg
push
inc
repz
fldt
cmp
jp
lock
sub
ljmp
add
int
jmp
dec
pop
jno
jl
push
or
and
cmp
div
and
dec
mov
mov
int3
pop
or
jbe
scas
sub
aaa
inc
mov
cmp
add
pop
mov
xchg
lahf
nop
mov
enter
mov
pop
iret
adc
imul
lret
outsb
jbe
inc
clc
pop
xor
stc
mov
xchg
shr
mov
adc
pop
jp
pop
iret
movsl
nop
lods
and
sub
pop
or
mov
sarb
jbe
lock
ficomps
push
mov
pop
repnz
mov
inc
mov
pop
shll
fidivrl
lods
lahf
and
aam
or
test
xor
xchg
rclb
imul
icebp
lret
mov
arpl
pop
fildll
push
pop
or
push
push
push
jae
pop
dec
shll
mov
int
xor
in
jecxz
into
xor
dec
mov
ret
or
adc
fsubrl
insl
into
pop
inc
arpl
dec
mov
jo
lret
cld
into
hlt
fiaddl
cltd
mov
in
mov
inc
rorl
bound
fnstenv
sarb
dec
pusha
fiaddl
ja
pop
mov
adcl
push
mov
sbb
cwtl
sbb
pop
in
outsl
in
lret
xchg
adc
pop
jecxz
lods
je
int
outsb
pop
add
stos
inc
inc
loopne
pop
mov
cmpsb
stc
jo
sbb
mov
aas
sub
je
mov
gs
dec
stos
pop
sbb
shll
add
xchg
test
outsb
pop
mov
inc
push
fistps
dec
dec
cld
int3
adc
or
pop
and
xor
out
push
mov
jle
cs
mov
sub
ja
in
fdivrs
out
push
ljmp
jbe
ret
xchg
sub
aam
test
add
pop
mov
push
cmp
lea
adc
dec
repnz
ljmp
int3
xor
pop
cmc
int
sbb
ficoms
cmc
pop
fs
jmp
mov
aaa
pcmpgtd
mov
sbb
xor
rcll
mov
fndisi(8087
sub
fimull
test
cmp
scas
pop
into
decb
xor
aad
mov
mov
xchg
mov
inc
aam
mov
mov
sbb
pop
jno
int
jl
fwait
push
movsb
adc
jmp
xor
lret
pop
sub
jb
lret
pop
dec
and
insl
push
inc
testl
loopne
sbb
and
xchg
lret
inc
push
pop
push
lock
mov
push
jl
jb
outsl
push
pushl
fidivrs
pop
dec
cmpsl
mov
and
pop
sbb
mov
inc
leave
jg
sbb
fidivl
ficompl
push
pop
mov
mov
loop
sub
sub
mov
add
aaa
jge
call
imul
or
pop
xlat
jp
mov
push
ss
ljmp
mov
pop
mov
popf
pop
scas
loope
ljmp
jp
xchg
cmp
fiaddl
adc
mov
repz
xchg
push
push
jo
mov
mov
int
sbb
fnstenv
mov
adc
dec
xor
pop
push
cmp
iret
js
push
pop
sbb
scas
pop
stos
dec
mov
pop
jns
int3
fimull
mov
add
gs
scas
inc
add
adc
dec
add
jns
pmulhuw
sbb
adc
pop
lcall
xchg
fs
dec
sarb
sub
aaa
pop
sbb
ret
int3
push
mov
and
dec
loope
push
mov
insb
xor
rolb
dec
dec
jo
mov
mov
aaa
sub
insl
pop
mov
push
cmp
dec
lock
dec
cmpsl
ret
adc
jp
sbb
out
inc
cli
sbb
pop
outsb
push
xor
lods
hlt
mov
pop
movsb
push
sub
fisttpl
adc
int3
dec
pop
jb
cld
lahf
and
xchg
arpl
jae
or
lret
rorl
das
push
lcall
test
fimull
or
cmp
pop
or
enter
js
pop
pop
incl
and
aas
lods
aad
in
pop
sti
pop
loope
push
daa
mov
scas
mov
push
mov
sbb
popf
pop
mov
push
xchg
pop
jb
movsl
scas
xor
cmp
add
test
lahf
or
mov
mul
jecxz
ds
fdivrs
pop
pop
scas
lea
bswap
pop
mov
scas
cmp
sahf
pop
lea
jb
dec
ja
lcall
cwtl
subl
inc
notl
add
sbb
ds
or
std
push
data16
es
jbe
sub
pop
lods
repz
mov
mov
ret
push
push
insb
jo
mov
pop
add
dec
test
pop
fldcw
adc
xchg
pop
pop
jo
shrb
je
cwtl
arpl
pop
dec
jl
inc
jmp
and
pop
xor
push
mov
fsubrs
out
scas
sub
outsb
dec
std
bound
push
pop
in
and
mov
pop
sbb
and
rcrl
jl
xchg
iret
push
aam
add
inc
sbb
mov
jl
xchg
fisubrl
loop
pop
ja
dec
dec
es
insb
xchg
pop
add
push
in
push
repz
mov
sbb
lods
mov
mov
cmp
test
or
and
int
mov
lock
mov
dec
inc
fistpl
pop
pusha
mov
pop
push
shrb
cmpsl
lret
pop
ds
out
out
das
push
bound
scas
or
dec
sub
aaa
add
int
mov
popa
sbb
mov
jns
in
xchg
loope
mov
dec
cltd
xchg
lahf
dec
lcall
addr16
jno
pop
xchg
imul
daa
mov
call
fiaddl
int3
movsb
dec
cmp
jb,pt
sbb
scas
loopne
jns
pop
cmp
cwtl
popa
or
sub
fsubrs
rorb
cli
xchg
push
pop
addr16
bound
jge
push
jmp
jl
sbb
cmc
pop
ret
cwtl
pop
repnz
jecxz
mov
jo
sbb
mov
and
inc
and
ret
stos
ja
xchg
jp
pop
in
test
mov
das
add
dec
add
push
movsb
pop
dec
int
xchg
inc
push
inc
xor
pop
sbb
mov
push
xchg
or
mov
push
test
pop
pop
pop
js
push
push
scas
pop
mov
mov
pop
jns
push
pop
je
movsl
push
iret
jmp
hlt
or
mov
daa
outsb
inc
mov
stc
add
xchg
xor
arpl
fldcw
out
hlt
es
and
mov
icebp
stos
lea
jp
pop
flds
dec
fsubrs
pop
inc
fisubrs
int
sub
js
shll
pop
imul
mov
and
jmp
pop
cwtl
or
pop
xor
loope
mov
xchg
mov
shl
xor
mov
inc
ja
pushl
or
sti
mov
int
fildll
leave
add
test
shl
mov
fwait
pop
mov
push
sub
pop
pop
mov
rcl
lcall
dec
adc
mov
mov
dec
sbb
inc
dec
sbbb
in
aas
cmp
dec
imul
inc
pop
loope
aam
sub
in
les
lods
add
and
shlb
ret
pop
insb
mov
int
in
into
inc
pop
aad
enter
inc
pop
cltd
movzwl
ror
xor
dec
mov
call
pop
xchg
xor
lret
xchg
sti
or
pop
pop
in
add
jns
mov
insb
scas
nop
dec
xor
lret
mov
jbe
jge
mov
clc
jnp
andb
aas
loop
lds
cld
jo
mov
dec
enter
xor
rcrl
push
mov
add
sub
dec
lods
sbb
ds
mov
mov
ljmp
insl
pop
dec
pop
iret
jnp
mov
jbe
std
fs
test
popf
mov
aaa
and
inc
jo
in
lea
loopne
pop
inc
inc
movb
dec
lahf
inc
jbe
dec
pop
test
push
pop
int
imul
dec
xchg
and
push
aas
cmp
pop
loope
push
inc
mov
pushf
test
pop
push
test
int
sar
test
xor
xlat
pop
push
add
hlt
push
je
pop
mov
jbe
sub
xchg
mov
jmp
sbb
pop
adc
adc
xchg
cmp
in
sbb
int3
mov
mov
sub
mov
int
idivb
cmp
movsl
pop
adc
xchg
fstpl
inc
jge
pop
lods
adc
pop
cmp
jmp
orb
jecxz
daa
mov
jo
fnstcw
pop
je
cli
dec
jbe
pop
mov
mov
xchg
sbb
test
xor
pop
dec
cld
fs
fcoms
mov
cmp
pop
or
outsb
adc
cmp
pop
sbb
jl
sub
pusha
or
lods
jecxz
adc
mov
call
lock
or
xchg
cmpsb
jle
aad
jns
push
pop
jo
sarl
nop
in
xchg
fisubl
add
loopne
mov
push
mov
out
sbb
int3
dec
clc
dec
mov
sbb
enter
pop
jbe
push
aad
pop
and
pop
push
mov
es
xor
inc
sub
push
pop
pop
xor
int
mov
fbld
sub
mov
or
mov
mov
in
fcomps
sbb
push
sub
xor
ret
xorb
pop
sub
jg
mov
int3
scas
pop
push
fmull
je
xchg
les
dec
fyl2xp1
outsl
cmp
inc
pop
rolb
cmp
in
pop
pop
popf
mov
jb
fistl
dec
pushf
jbe
in
pop
sbb
stc
lods
clc
bswap
push
pop
sub
jo
pop
xor
pop
cltd
rol
dec
pop
cmp
push
pop
jge
movsb
test
or
sbb
or
fnstsw
ss
sub
dec
inc
jb
pop
jp
mov
jmp
jae
pushf
cs
pop
or
pop
xchg
out
jp
pop
lret
and
pop
iret
xor
mov
jb
leave
mov
cmp
mov
dec
lods
push
sub
popa
test
sub
ret
packuswb
lahf
jo
pop
lds
xlat
push
stos
pop
mov
data16
lea
dec
sarb
fcomps
pop
add
cmp
push
xchg
cmp
sub
mov
movsb
fisubrs
fdivr
jo
fildll
mov
add
dec
pop
jb
stos
pop
cmp
gs
or
or
and
xchg
pusha
fldl
rolb
sub
out
pop
int
ja
dec
mov
pop
ss
cmp
lcall
push
cmp
imul
outsl
clc
push
dec
repnz
lods
sarl
leave
std
imul
daa
sub
je
inc
jmp
jbe
fimull
sti
xchg
mov
pop
adc
jb
les
lods
lahf
es
sarb
out
pop
push
jo
pop
or
sbb
cmp
pop
jge
adc
loop
pusha
stos
jp
pop
in
mov
pop
sub
mov
pop
jmp
adc
jb
int
dec
adc
xorb
jp
pop
test
pop
jge
xchg
into
scas
imul
or
jecxz
push
sub
pop
pop
sub
ja
xor
in
pop
aad
rcrb
jmp
dec
test
sbb
cmp
lret
lods
dec
pop
fnstcw
mov
dec
test
jl
negl
cmp
cltd
inc
or
mov
mov
xchg
ret
mov
fmul
and
icebp
stos
adc
push
dec
fistps
popf
outsl
ror
in
xchg
outsb
jns
insb
sub
movb
pop
jo
dec
in
aaa
dec
es
pop
inc
pushf
inc
jge
pop
pop
test
shrb
cltd
pop
clc
lahf
jge
push
pop
dec
ror
mov
aaa
cmp
dec
inc
push
lock
lret
popa
iret
or
cmp
push
sub
stos
fdivs
xchg
mov
stc
push
xchg
rcrl
xlat
outsl
push
mov
data16
add
insl
xor
clc
mov
pop
dec
adc
and
jb
nop
push
loop
or
cmp
ret
jge
lods
sub
inc
mov
aas
pop
mov
fsubrp
pop
pop
xor
or
loope
jae
xor
jbe
or
push
iret
pop
ja
push
stos
or
mov
dec
aad
in
mov
push
lds
xchg
or
out
ret
cmc
add
inc
xchg
jge
pop
inc
and
lret
dec
shll
pop
sub
mov
int3
mov
gs
leave
cwtl
xor
push
clc
mov
lods
pop
inc
xchg
icebp
xchg
add
cmc
fdivs
sbb
lcall
pop
pop
imul
pop
mov
pop
adc
dec
dec
push
pop
repz
cmp
cmp
jge
push
out
mov
pop
lcall
je
dec
pop
jnp
imul
rcr
bound
sub
xchg
pop
mov
xor
iret
dec
inc
or
xchg
or
fdivs
ror
sub
jo
pop
mov
movsl
cli
sbb
ficoml
repz
jno
pop
sbb
sbb
addr16
xchg
mov
leave
jns
mov
mov
sbb
or
xchg
pop
or
lahf
insb
les
cmc
ja
pop
sub
push
adc
xchg
pop
pop
cwtl
orb
mov
mov
loop
adc
jl
xor
sbb
scas
sahf
cmp
loope
int3
jns
pop
icebp
pop
or
stos
loopne
les
lods
addr16
scas
pop
pop
lret
cmp
sub
jg
mull
sub
pop
flds
or
mov
call
and
frstor
jno
pop
fistpl
insb
mov
fsubr
push
cmp
pop
sbb
cmp
mov
xor
test
dec
cmc
dec
lahf
jbe
sti
jne
jmp
aaa
mov
pop
std
or
insb
ret
or
inc
addr16
and
insl
fstpl
jmp
test
int3
leave
pop
arpl
pop
enter
mov
movsl
pop
cltd
mov
pop
xchg
repz
dec
or
jl
sbb
inc
pop
jae
xor
pop
call
clc
xchg
mov
fdivs
sbb
enter
pop
sub
fcoms
mov
mov
pop
dec
jb
aaa
ljmp
jae
inc
add
scas
dec
arpl
repnz
push
xlat
mov
pop
enter
mov
ljmp
and
testl
scas
mov
gs
cmp
pop
fldenv
mov
or
ret
push
lret
loopne
iret
mov
pop
cwtl
test
pop
sub
xchg
call
mov
stc
pop
fcmovu
jmp
xchg
orl
aad
and
iret
les
pop
pop
xor
dec
movsb
xchg
in
pop
scas
and
fsubrs
ss
in
and
pop
dec
dec
mov
bound
pop
jns
lret
leave
jbe
mov
out
pop
jp
xchg
jo
pop
mov
mov
jb
pop
lods
mov
jge
rcrl
dec
mov
and
mov
dec
mov
dec
es
and
add
jle
scas
xor
mov
bound
fcomps
pusha
inc
sub
outsl
pop
imul
push
adc
fcompl
sub
nop
aas
sub
sbb
xchg
in
push
or
push
sbb
pop
ja
pop
xor
loop
dec
fs
out
pop
xor
std
insb
dec
ds
mov
pop
movsl
or
ja
mov
int
scas
les
mov
inc
mov
clc
dec
xor
add
add
push
popa
mov
mov
xor
fisubl
jno
clc
mov
dec
mov
inc
dec
mov
and
xchg
xorb
pop
ljmp
je
jo
pop
mov
cltd
cs
in
stos
pop
cltd
pop
ret
out
push
pop
pop
sub
ja
add
and
loope
pop
xorl
andb
sbb
or
or
icebp
mov
jnp
data16
xchg
stos
jno
mov
push
aas
stc
bound
add
test
pop
int3
fbld
cmp
or
into
ja
std
xchg
sbb
cltd
cli
sarb
gs
jb
stc
mov
pop
aam
mov
cmc
popf
jne
inc
sub
and
ficomps
add
out
mov
dec
dec
fistl
pop
test
sarb
jmp
imul
js
adc
aas
ss
pop
fisubl
mov
ja
aam
mov
jbe
popa
pop
sbb
loope
push
mov
dec
scas
or
lock
popf
push
aaa
jo
inc
pop
imul
dec
cmp
adc
xchg
cmp
int3
mov
sbb
pop
addr16
cmp
pop
fs
scas
scas
filds
sbb
repz
hlt
jb
cmp
jbe
push
inc
push
or
arpl
cmp
mov
rcrl
jecxz
mov
jmp
sbb
dec
fwait
pop
add
scas
je
pop
add
rorl
stos
out
int
cmp
icebp
mov
in
sbb
imulb
loope
lods
mov
mov
sub
push
scas
push
loop
dec
dec
mov
push
jl
dec
pusha
pop
pop
dec
in
out
xchg
add
mov
inc
xor
jb
pusha
pop
imul
xchg
ja
lock
mov
in
mov
loope
mov
fnstenv
ffreep
lock
pop
leave
cmp
jmp
mov
pop
and
pop
push
dec
pop
pop
push
lcall
add
and
sbb
in
cmp
xchg
and
lret
sarl
sub
bound
lds
inc
cmpsl
lea
lock
jns
lret
inc
scas
pop
cmp
imull
xchg
mov
xchg
int
into
pop
aas
data16
adcb
out
ds
mov
inc
pop
bound
mov
jbe
sub
cmp
fcmovu
mov
scas
xchg
mov
adc
std
adc
inc
data16
int3
pop
push
cld
outsl
decb
stos
lods
mov
sbb
daa
fisttpll
jbe
fwait
push
stc
push
dec
arpl
cmp
test
pop
dec
fnsave
lock
adcl
sbb
jge
mov
mov
ret
dec
fisttps
pop
sbb
data16
popf
cwtl
scas
out
mov
test
out
sub
inc
push
mov
fcmovbe
dec
cmpsl
out
mov
arpl
insb
stos
or
sub
scas
fxtract
cmp
scas
pop
lcall
icebp
pop
filds
mov
jo
sahf
add
lret
mov
pop
jne
nop
mov
add
mov
pop
into
scas
push
loop
loope
fldl
pop
shll
decl
inc
pop
cmp
in
mov
mov
adc
enter
pop
loope
jb
push
and
and
sbb
into
arpl
int
mov
cmp
inc
sub
or
pop
fcomps
das
and
dec
xor
pop
cmp
repnz
push
shlb
pop
pop
mov
push
movsb
lea
pop
jl
aaa
int
addr16
call
jae
and
cmp
repz
xor
adc
insl
add
repz
std
stc
xchg
pop
xlat
pop
push
pusha
adc
pop
rorb
push
test
cltd
push
out
divb
ficoml
inc
push
jl
mov
jns
xchg
dec
scas
push
test
lock
sbb
mov
clc
dec
dec
lret
int
fcoms
mov
addl
rcrl
mov
xor
in
inc
cli
pop
jle
lea
mov
stos
pop
in
sub
mov
jnp
scas
repz
pop
pop
ficompl
shl
mov
pop
xor
or
pop
inc
pushf
int
and
sbb
xor
inc
out
int3
int
pop
pop
add
inc
flds
xchg
dec
icebp
mov
jmp
push
xor
lea
jae
hlt
add
pop
sti
jb
in
arpl
gs
mov
pop
lea
dec
shlb
and
jb
fcoml
iret
cmpsl
imulb
fisubrl
int
mov
jmp
mov
inc
or
subb
or
pop
or
mov
rcl
inc
cmpsl
test
pop
les
mov
dec
call
int
and
xor
push
ds
sbb
into
test
outsb
loopne
sub
push
mov
pop
sub
pop
hlt
cld
repnz
dec
mov
mov
into
cmp
adc
push
popa
pop
sub
adc
pop
jbe,pn
sbb
notb
mov
lods
shlb
sbb
cmp
jb
insb
jecxz
pop
mov
jmp
enter
clc
pop
in
fwait
add
mov
pop
dec
stc
je
jl
pop
dec
pop
sub
mov
test
mov
pushf
cld
pop
cmp
daa
pop
stos
in
jbe
clc
dec
mov
fldl
sbb
lods
mov
sub
jnp
mov
add
push
in
sti
mov
mov
mov
dec
dec
xor
and
or
xchg
lahf
cmp
pop
or
clc
adc
pop
add
pop
jge
pop
inc
lea
loop
cmp
pop
push
and
repz
xchg
retw
pop
inc
push
xchg
int
xchg
arpl
iret
dec
scas
mov
filds
sarl
and
sbb
mov
mov
in
mov
icebp
jae
pop
lahf
movsb
xchg
adc
push
xchg
lock
mov
inc
aam
loopne
loopne
cmp
mov
sbb
push
jbe
popa
std
fadds
dec
and
or
mov
pop
cltd
pop
pop
ljmp
pop
pop
lret
push
adc
into
xor
mov
add
pop
test
call
pop
out
int3
ds
loope
ljmp
inc
pop
fbstp
shr
sbb
icebp
in
jns
mov
pop
xchg
dec
xor
out
rolb
jne
adc
dec
mov
idivl
mov
jecxz
pop
xchg
and
pushf
incl
daa
int3
mov
in
lret
xlat
rcl
inc
out
pop
scas
cmp
lahf
cs
clc
ss
fstps
mov
adc
out
and
push
mov
int3
scas
sti
cwtl
sbb
and
fnsave
ret
gs
insl
mov
adc
mov
pop
push
jecxz
or
pop
std
adcl
and
inc
mov
lods
pop
sbb
sbb
cld
pop
cmp
mov
cmp
ret
cmp
pop
or
fstpl
pop
or
mov
jle
cmp
lock
or
scas
int3
in
lea
pop
daa
pop
pop
movsbl
jge
inc
add
pop
cli
mov
lcall
loopne
lahf
xor
icebp
pop
inc
sbbl
pop
jbe
aad
aam
mov
dec
out
or
jle
sbb
jmp
pop
lods
jg
lds
sbb
xor
pop
int3
loope
lahf
icebp
and
shll
xchg
scas
insl
inc
mov
je
mov
pop
mov
inc
or
pop
dec
and
mov
mov
cmp
dec
repz
sub
sbb
dec
bound
shll
lods
outsb
push
mov
mov
xor
pop
sub
out
lock
das
sub
jmp
out
xchg
ret
test
mov
pop
fcoml
out
out
loopne
add
cs
scas
repz
mov
xchg
fwait
iret
adc
dec
mov
test
daa
cld
xor
repnz
or
mov
int3
aam
xchg
xor
mov
xchg
mov
adc
fidivrl
pop
adc
xchg
and
les
lret
dec
pusha
mov
and
sahf
pop
popa
or
out
jbe
rorb
mov
inc
notb
sarb
mov
mov
fsubs
scas
xor
aas
lret
repnz
leave
or
mov
pop
adc
cmp
test
out
mov
push
dec
pop
or
xchg
mov
sub
ss
pop
rorb
jae
ret
jle
xchg
fiadds
sahf
mov
sub
push
cli
adc
clc
dec
into
in
pop
jp
jle
pop
jnp
cmp
xor
jmp
out
les
pop
cmp
hlt
cmp
inc
rcrl
into
test
test
jno
mov
ds
das
clc
sti
dec
mov
lcall
mov
fdiv
ja
scas
pop
aad
orl
or
lahf
inc
movsb
loop
sub
xchg
ds
fidivl
push
out
or
xor
add
cmp
cmp
xchg
pop
mov
fcomps
and
jae
push
dec
adc
cs
pop
push
push
shl
sub
pop
cli
jecxz
lret
pop
push
daa
out
or
enter
xchg
inc
pop
int3
push
in
mov
lods
dec
add
adc
int
sbb
fwait
lds
fldcw
xchg
pop
roll
nop
and
imul
divb
imul
imul
cld
jmp
jge
mov
rolb
negb
out
adc
lcall
scas
xchg
popa
jp
jbe
adc
pop
or
mov
mov
das
mov
fistl
adc
les
shrl
cmpb
sub
in
cmpb
cltd
mov
pusha
jle
dec
lret
shl
jo
aad
dec
and
jecxz
add
pop
hlt
inc
jge
and
cmpsl
aam
sbbb
adc
jb
data16
push
out
or
xor
stos
dec
mov
fbstp
dec
pop
hlt
rcrb
mov
fwait
pop
push
dec
test
dec
sub
cli
testl
cmp
push
inc
repz
push
jae
inc
rcrl
lods
sbb
gs
mov
and
xor
in
fcom
sub
movsb
pop
mov
xor
fistpl
shr
arpl
int
jne
xchg
bound
and
xor
inc
mov
aam
mov
movsl
out
xchg
mov
pop
mov
pop
mov
arpl
mov
lcall
int
inc
fdivrl
insl
inc
push
gs
sub
pusha
fs
imul
push
fcoms
pop
out
cmpsl
xor
sbb
pop
or
icebp
lea
jbe
pop
cmc
lock
cmovae
ss
ja,pt
iret
sbb
std
adc
or
dec
daa
imul
repnz
add
or
mov
pushf
pop
insl
push
pop
mov
sbb
sbb
daa
cmc
es
mov
shlb
or
pop
dec
xor
sbb
rorb
push
repnz
js
ficoml
leave
pop
mov
add
mov
mov
and
nop
mov
pusha
pop
push
push
xor
int3
insb
iret
pop
mov
dec
out
pop
cmp
push
push
dec
or
cwtl
pop
pop
rep
sbb
mov
pop
jns
stos
subl
ja
pop
cmp
push
or
shlb
cmc
pop
stc
test
stos
in
ljmp
pop
jb
pushf
aas
inc
sbb
pop
fsts
rorb
ret
repz
push
xor
push
addr16
es
pop
daa
xor
xchg
das
mov
xchg
dec
pop
add
and
add
mov
pushf
mov
call
jo
mov
ret
iret
pop
mov
cmpsb
xor
cmpsl
std
pop
enter
jo
rcrl
pushf
cwtl
mov
std
pop
mov
inc
pop
push
pusha
mov
or
mov
push
dec
loopne
xorb
jle
sbb
xor
dec
jo
mov
out
lret
imul
adc
pop
adcl
rcrb
mov
out
fnstenv
in
dec
push
js
mov
cmp
or
pop
push
jo
repz
jae
pop
mov
int
cwtl
push
hlt
stc
jbe
add
sti
push
mov
cltd
pop
arpl
mov
fistpl
xor
ret
daa
inc
push
jno
call
rcrb
pop
xor
jnp
mov
fimull
clc
dec
mov
pop
cs
fbstp
nop
je
dec
inc
sbb
jbe
mov
addr16
pop
push
sub
push
int
in
xchg
xchg
cmp
bound
dec
pop
adc
insl
mov
pop
pop
dec
dec
jg
mov
repz
and
or
lods
xchg
icebp
and
pop
sub
push
mov
jbe
movsb
pop
sbb
inc
mov
pop
pusha
push
push
aad
int
lahf
scas
push
inc
nop
insb
jo
jae
stc
mov
adc
addl
ss
adc
fdivl
pop
mov
xor
mov
aad
sbbb
daa
test
jl
stc
ret
mov
fstpl
inc
loopne
sub
insb
xor
add
push
int
mov
push
imul
and
arpl
std
adc
and
fisubs
insb
outsl
movsb
pop
ja
xchg
mov
or
daa
push
rorl
les
xchg
sbb
mov
lretw
pop
cmp
dec
bound
push
loopne
pop
int
imul
call
push
mov
add
fwait
stc
adc
push
mov
stos
push
imul
rorb
loope
sub
jb
dec
pop
js
call
in
pop
jbe
jg
jge
mov
or
or
mov
adc
xchg
mov
imul
jg
or
movsl
xor
and
fwait
mov
mov
stos
ret
pop
popf
fists
pop
test
sub
dec
push
inc
cmpsb
ljmp
enter
pop
pop
js
jecxz
xor
addl
xchg
in
xchg
and
enter
bnd
fildl
pop
push
mov
and
mov
jb
jns
pop
xor
adc
sbb
add
repnz
mov
je
jns
repz
sahf
cltd
mov
das
jle
sti
jecxz
fists
mov
jnp
mov
pop
test
jbe
lock
mov
in
jge
adc
pop
cmp
pop
bound
outsl
fwait
test
out
jge
outsb
scas
sub
negb
dec
ror
repz
adc
add
cmp
pop
popf
xor
sub
adc
pop
cld
sub
push
mov
mov
mov
mov
imul
sbb
mov
pop
aad
inc
icebp
or
inc
push
inc
mov
faddl
or
mov
or
pop
jno
insl
push
pop
cmp
sbb
aas
mov
dec
out
bound
mov
pusha
repz
and
pop
mov
sti
dec
push
inc
add
push
cmp
sbb
or
pop
loopne
enter
xor
sbb
pop
dec
pop
and
pusha
pop
jb
stos
add
sub
loop
lds
clc
mov
into
pop
xorb
rorb
xchg
mov
dec
cmp
jbe
or
or
mov
mov
ja
movsb
xor
stos
pop
mov
jge
fldenv
pusha
call
enter
nop
xchg
jo
pop
imul
mov
jne
inc
jnp,pn
fisubs
out
dec
and
mov
mov
xchg
lods
ds
std
sub
sbb
mov
jnp
stc
rcr
or
sbb
lcall
inc
push
or
in
inc
lahf
and
mov
pusha
push
dec
xor
rcrb
ror
les
pop
cli
cmp
adc
dec
nop
pop
int
mov
dec
pop
sbb
sub
adc
out
or
fcoms
or
pop
jl
jne
jns
or
cmc
push
fildll
sbb
jbe
js
imull
inc
push
clc
scas
fdivs
inc
push
lahf
nop
stos
aad
pop
into
dec
js
jmp
popf
gs
sti
mov
cli
xchg
dec
lcall
fidivl
mov
mov
mov
pop
jmp
test
xchg
lahf
jle
lock
test
aas
sub
pop
or
add
push
pop
mov
xchg
ja
dec
scas
inc
cli
cmpsl
js
sbb
jnp
int3
pop
jle
sbb
int
adc
inc
mov
add
data16
jae
gs
pop
mov
test
out
in
aad
lea
test
or
push
jno
sub
inc
and
and
mov
imul
xchg
jns
pop
and
daa
outsb
pop
repnz
xchg
xchg
sub
sub
mov
dec
pop
and
sub
pop
xor
dec
nop
push
dec
mov
mov
mov
mov
mov
cltd
stos
or
inc
lods
daa
repz
fcomps
stos
cwtl
push
cmpl
scas
int3
xor
mov
and
mov
or
int
xchg
sub
adc
jae
in
xor
divb
std
mov
fisttpl
jns
sbb
xchg
sub
fwait
repz
pop
push
jmp
ss
inc
mov
pop
aas
add
adc
lcall
jmp
testl
jae
pop
cli
add
mov
in
icebp
sbb
mov
cld
mov
pusha
pop
rcl
mov
cmp
imul
fdivr
sub
cmp
cmpsb
mov
add
xchg
push
push
ds
lret
subl
fidivl
sub
inc
pop
mov
negb
jecxz
mov
rcrl
xor
mov
add
pop
mov
into
enter
pop
mov
not
pop
sti
or
adc
push
dec
rol
cmpsb
mov
xchg
loope
pop
std
fstpl
sub
mov
xor
shrd
divl
int3
pop
pop
cld
ds
cltd
cmc
pop
pop
scas
jnp
stos
imul
and
lds
jae
inc
adc
mull
push
adc
clc
cmpsl
gs
or
mov
jne
rolb
aaa
pop
scas
outsb
jo
mov
sub
mov
in
pop
and
out
adc
int
xchg
aad
cmp
popf
lahf
out
pop
ret
mov
lock
scas
xor
mov
insl
mov
xchg
pop
or
xchg
pushf
push
movsl
xor
pop
scas
out
aam
xor
add
lods
sbb
out
loopne
mov
push
xchg
fsubp
js
pop
cmp
add
pop
movsb
movsb
mov
aad
jbe
enter
mov
loop
mov
jl
jp
aad
xchg
push
insl
adc
jmp
mov
imull
out
dec
jl
cmpsb
push
cmp
cld
push
lods
call
cmp
aaa
inc
je
inc
xchg
ret
xchg
sbb
lods
push
push
adc
jno
inc
sbb
dec
dec
cmp
pop
or
pop
mov
push
push
jnp
cmp
bound
addr16
pop
mov
adc
lds
jg
sbb
repz
fst
mov
pop
test
cmpsb
scas
dec
in
inc
pop
les
aad
xchg
jb
pop
push
adc
sbb
sub
or
pop
int
in
shrb
push
out
fwait
and
shrl
or
adc
cltd
push
std
negb
dec
jbe
int3
nop
add
ror
cmpsb
sbb
pop
hlt
jo
pop
pop
add
cmp
sahf
and
jle
fnstsw
scas
cmpl
push
clc
fidivl
shll
fisttps
bound
inc
mov
pop
cmpb
fcmovu
jnp
ret
test
sbb
mov
ljmp
js
int3
lea
mov
data16
call
mov
xchg
shrb
pop
flds
outsb
je
mov
sti
or
sbb
divl
popa
sub
cmp
jne
jo
cmp
dec
pushf
sti
mov
push
pop
hlt
shrl
lret
inc
outsl
xchg
dec
pop
add
lahf
rorb
xor
ret
cmp
xchg
stos
push
fbstp
out
mov
cltd
jno
adc
pop
into
mov
jns
mov
stos
in
xor
push
fwait
aad
ret
push
xor
ja
lea
or
sub
out
xchg
cmp
or
rorl
mov
or
lods
inc
sbb
popa
repz
jge
cmpsl
arpl
fistps
sbb
pop
ret
lret
test
into
sub
pop
aas
or
stc
push
pop
push
mov
insl
in
pushf
test
pop
jb
push
xchg
test
movsb
sbb
add
mov
sbb
pop
sarl
jmp
mov
pop
mov
xchg
sbb
ss
pop
push
addb
cld
xchg
test
mov
scas
ja
dec
out
imul
lcall
push
in
mov
into
lea
and
aam
push
pop
or
inc
mov
pop
dec
xor
xchg
sahf
jl
jecxz
lds
push
aad
dec
jg
sbb
sahf
push
dec
jp
jns
insl
scas
repz
ja
scas
dec
inc
rorl
lcall
icebp
insb
push
test
cmp
aaa
jbe
outsb
shrl
dec
dec
mov
out
jns
push
adc
adc
js
pop
sbb
xlat
iret
jnp
pop
aas
jo
mov
fucomp
pop
divl
push
cmp
add
jl
ds
sub
inc
dec
lcall
pop
in
shl
mov
mov
dec
or
stos
jl
pop
mov
or
jnp
pop
iret
jo
xchg
dec
jb
add
cmp
push
mov
loop
jbe
flds
mov
cmp
inc
mov
leave
mov
repnz
jno
cmc
xchg
imul
aad
push
out
stos
push
xor
mov
mov
adc
add
push
jbe
vmovq
lea
dec
push
clc
jg
push
sbb
sahf
into
lds
mov
gs
or
ret
sbb
mov
push
pop
stos
and
add
pop
aas
dec
lret
cltd
cmc
pop
fwait
mov
movswl
test
jb
and
sti
mov
push
int3
xor
mov
mov
loopne
cmp
fidivrs
scas
lret
xchg
inc
dec
mov
cmp
into
insb
cli
cltd
xor
jno
mov
out
pop
adc
daa
sbb
sbbb
push
imul
push
mov
imul
stos
cmp
ret
mov
cmpsl
xor
xor
inc
std
adc
into
and
flds
nop
pop
cmp
pop
aaa
insb
mov
mov
push
dec
xlat
mov
push
ds
pushf
sub
pop
lds
xchg
xorb
pop
sahf
mov
js
pop
pusha
jb
nop
xchg
dec
xor
mov
cmp
ds
lds
sbb
daa
bound
mov
mov
fiaddl
out
pop
pop
mov
jb
sub
and
sahf
out
adc
jbe
push
sti
adc
xlat
mov
pop
addr16
jnp
mov
cli
xchg
out
pushf
jbe
jle
jecxz
mov
mov
mov
sbb
cmp
inc
icebp
pop
ret
int
adc
and
inc
sbb
add
clc
stos
int3
sub
lea
dec
stos
inc
cltd
popa
adc
sub
jbe
add
push
iret
out
icebp
pop
xchg
fmulp
jnp
jmp
movsl
loope
mov
adc
rcrl
jge
int3
sbbl
sub
rcrb
jbe
push
pop
int
pop
or
inc
cwtl
push
imul
repz
cmpsb
adc
pop
push
jg
rorl
sti
push
loopne
push
xchg
icebp
movl
jbe
aam
pop
stos
insl
popa
or
dec
mov
int
pop
cmp
and
pop
stc
fwait
movsb
lods
cs
std
jmp
push
mov
jle
imul
ss
mov
aaa
bound
lock
popl
in
or
fisubrs
outsb
dec
sbb
pop
int3
sub
dec
hlt
or
mov
out
jnp
jo
mov
dec
out
jg
lahf
pop
push
pop
data16
or
inc
jecxz
sub
mov
push
jnp
iret
clc
in
sub
negb
pop
icebp
lods
cbtw
repz
add
std
cmpsl
fwait
lahf
fucomi
jns
mov
add
repnz
sub
scas
adc
mov
lea
xor
sbb
scas
pop
jp
cmp
inc
pop
in
xor
imul
jb
mov
add
in
pushf
sub
enter
bound
loop
pop
inc
andb
push
add
bswap
and
scas
divl
movsl
repnz
lods
mov
xchg
fdivs
lret
lea
sub
int
sub
and
jbe
or
inc
cmc
mov
xchg
adc
sbb
push
pop
jp
icebp
jle
inc
push
pop
and
sub
add
xchg
std
mov
int
mov
repnz
rol
xchg
adc
dec
std
mov
pop
mov
pop
lock
jae
pop
xchg
push
stos
in
lret
or
cli
aaa
dec
pop
paddusb
test
or
jecxz
gs
mov
sub
test
in
mov
mov
mov
outsl
jg
mov
rorb
je
jp
scas
ret
or
frstor
movzwl
jnp
dec
dec
jo
sbb
andb
into
cmp
jo
fwait
or
dec
jp
lods
add
xchg
push
mov
xor
jne
sub
rcrl
insb
cmp
add
scas
jae
fistps
or
jmp
dec
lods
loopne
ss
add
adc
mov
cmp
or
pop
xor
inc
xchg
dec
lahf
pop
mov
cmp
adc
and
sbbl
pushf
xchg
enter
mov
dec
mov
fsubrl
mov
sbb
fildll
es
sbb
cmp
mov
enter
jl
stos
call
sbbb
pop
adc
stos
ss
bound
sub
int
jae
inc
lahf
lcall
daa
mov
sub
pusha
push
fidivl
dec
or
inc
adc
adc
into
pop
test
pusha
and
sub
dec
sbb
leave
roll
sbb
sti
pop
mov
leave
lods
mov
jg
or
pop
jo
fst
jns
shll
jge
sti
mov
in
push
push
popf
jl
xchg
lret
dec
pop
sbb
mov
add
jp
enter
jle
arpl
or
xchg
out
data16
pop
xchg
push
jo
pop
cmp
sub
lret
add
dec
push
daa
lret
pop
jns
jp
nop
push
mov
pop
in
inc
movsl
pop
int
mov
mov
ficoml
push
sub
inc
or
xchg
in
mov
shl
sub
pop
imul
inc
pop
xor
out
jb
pop
popa
ss
dec
pop
pushf
data16
sbb
and
push
into
rcrl
int
mov
jmp
mov
fs
xchg
loopew
pop
or
mov
pop
std
pop
xor
jnp
dec
test
je
and
or
pop
xchg
dec
divb
pop
push
mov
hlt
adc
je
push
rolb
pop
sub
fcom
sti
cmp
and
jo
out
xor
or
mov
adc
jno
xchg
les
stc
push
push
jae
push
add
pop
sbb
mov
into
int3
jne
pop
jmp
cmp
pop
pop
jno
push
inc
test
jae
adc
pop
lret
push
or
jnp
popl
xor
inc
das
inc
cli
and
push
xlat
scas
outsb
pop
push
cmp
mov
clc
sbb
loope
mov
jp
pop
int
leave
push
and
push
sub
shlb
cmp
movsl
push
jl
aas
inc
xchg
hlt
cmp
jp
addr16
xchg
rcrl
adc
test
push
inc
stc
jo
mov
push
mov
pop
enter
xchg
lock
dec
inc
pop
inc
dec
pop
stos
dec
rcll
pushf
test
je
or
cmp
ja
pop
shll
adc
sbb
pop
xchg
mov
jns
pop
xchg
dec
out
pop
sub
mov
es
cld
sbb
mov
adc
cmp
fwait
outsb
mov
cltd
in
pop
test
movsb
pushf
lret
inc
pop
ret
scas
out
mov
movsl
inc
dec
scas
inc
push
ds
cmp
xchg
pop
stc
outsl
stc
pop
adc
push
add
pop
adc
pop
mov
pop
xor
daa
out
fwait
mov
test
out
jae
mov
adc
lret
iret
and
vaddss
mov
dec
mov
leave
and
mov
mov
aam
cld
rcl
sbb
push
add
jno
cmovo
mov
sti
jo
and
or
dec
pop
pop
scas
into
mov
dec
popa
adc
push
sbb
xlat
in
rcrl
sub
xchg
shl
mov
sti
outsl
mov
fwait
pop
sbb
push
mov
pop
or
pushf
pop
aad
int3
or
out
xchg
sbb
sbb
and
lods
push
mov
mov
divb
sub
and
sub
mov
adc
imul
push
xor
mov
dec
pop
push
cmp
loope
icebp
fwait
arpl
or
movsl
lds
pop
push
pop
int3
mov
jo
mov
fwait
out
sbb
cmpb
lea
mov
insb
pop
add
movsb
pop
jecxz
loop
sub
out
mov
push
nop
add
sbb
jae
inc
into
aam
lahf
push
inc
insl
leave
pop
pop
data16
mov
sbb
push
pushf
xlat
mov
cmp
mov
iret
cli
mov
sbb
in
jo
xor
cmp
pusha
xor
pop
int
mov
mov
mov
cli
fcomp
dec
ret
popa
pop
sbb
mov
lods
mov
out
insb
ret
sub
aam
and
xchg
pop
cmpsb
sbb
scas
mov
filds
rcr
scas
shl
mov
xchg
idivl
stos
cltd
sbb
test
lahf
mov
and
mov
je
pop
cmp
lods
sub
jle
mov
dec
scas
dec
cmp
or
jo
pop
push
fidivl
dec
adc
inc
pop
es
in
pop
pop
int
mov
pop
mov
push
call
inc
int3
pop
jg
sbb
inc
iret
clc
dec
mov
repz
jne
add
mov
add
mov
aad
xchg
pop
and
test
inc
rcr
movsb
testb
mov
leave
sbb
es
sti
jbe
ficompl
jecxz
push
test
inc
iret
cli
shrl
stos
andl
pop
addr16
es
repz
add
mov
aad
dec
mov
dec
lock
fistps
jae
pop
add
xor
fwait
mov
stos
fidivrl
push
mov
dec
xlat
pop
repnz
fs
cltd
jb
or
aas
xchg
mov
pop
pop
or
cmp
jae
loopne
push
aad
jnp
cmc
negl
aas
leave
das
fs
lret
mov
jp
pop
mov
fcomps
pop
pop
pusha
ds
int3
inc
adc
ret
xchg
dec
sbb
cmp
mov
xchg
lea
mov
pop
into
jo
in
and
dec
jge
fsubrs
aam
test
jecxz
testb
add
push
inc
andl
lahf
add
aad
pop
sub
fabs
sbb
mov
pop
push
pop
xor
sub
mov
ja
cmp
int3
pop
fisubl
mov
faddl
adc
inc
imul
inc
inc
insb
iret
scas
jmp
and
sub
ljmp
dec
int3
mov
aaa
rcrl
xchg
loop
xchg
sahf
cltd
pop
push
sub
push
repz
pop
adcb
std
scas
mov
pop
fnstcw
xor
loopne
or
inc
push
int
jecxz
adc
in
lds
jno
popf
imul
adc
cs
into
pop
mov
xor
movsl
and
andl
stos
imul
pop
mov
loope
stc
sbbb
outsl
int3
lcall
pop
mov
scas
scas
mov
mov
test
lods
pop
ss
mov
mov
and
cmp
aam
loop
xchg
or
cs
je
or
std
mov
fisttpll
scas
xchg
lahf
mov
jns
xchg
mov
dec
idivb
inc
cmc
cmpsb
aas
insl
mov
pop
lcall
imul
pop
daa
mov
lret
lret
lahf
cmp
fistl
mov
mov
lock
cld
inc
jb
cli
pop
jae
xchg
fldt
or
mov
clc
fs
xchg
push
je
icebp
xchg
pop
fwait
dec
sub
rep
mov
pop
jmp
xchg
pop
cld
pop
adc
jl
js
sbb
jb
mov
push
or
call
pop
mov
sub
xchg
lcall
push
inc
mov
js
lret
push
cmp
je
dec
xor
pop
xchg
jmp
lds
mov
fucomip
xor
ss
sbb
scas
xchg
hlt
adc
inc
pop
pop
cmp
inc
arpl
inc
mov
mov
cmp
mov
xchg
pop
add
cli
mov
pop
push
pop
jo
lret
mov
pop
clc
mov
fwait
pop
pop
or
insb
sbb
mov
das
pop
cmp
outsb
mov
mov
int3
xchg
adc
test
mov
scas
push
pop
mov
repnz
lret
mov
scas
pop
and
pop
cmp
ficomps
pop
mov
jecxz
std
sub
jo
shlb
or
out
sahf
adc
test
repz
mov
fisttpl
icebp
jg
mov
xchg
pop
jge
js
arpl
push
pop
sub
daa
jno
sbb
jmp
out
dec
and
iret
pop
inc
insb
sub
adc
rclb
leave
in
sbb
pop
and
or
cmpl
mov
or
stc
mov
push
sbb
sbb
aaa
loopne
pop
repz
pop
or
in
and
mov
pop
lcall
push
mov
pop
ret
jno
dec
and
inc
xor
aam
sahf
mov
push
mov
je
scas
or
sbb
or
push
sbb
ljmp
fistps
adc
pop
or
fcoml
sbbb
loopne
dec
push
out
push
and
cwtl
sub
dec
rclb
or
mov
fidivs
iret
mov
push
push
mov
movsl
cltd
dec
std
jbe
pop
fildl
repz
jecxz
xor
idivl
cmpb
movsl
pop
dec
lcall
pop
adc
mov
pop
push
mov
pop
xchg
xchg
fiadds
and
addr16
icebp
xor
sub
ficomps
mov
pop
inc
divb
fs
add
push
ljmp
gs
push
insl
dec
push
pop
data16
int
cmp
pop
add
dec
stos
push
lds
adc
test
fs
cld
mov
and
or
notb
mov
add
adc
outsl
sub
pop
cmpsl
xchg
xor
sub
sbb
aam
enter
iret
test
jb
imul
lret
push
mov
sbb
sub
scas
sbb
mov
movsb
hlt
mov
ljmp
inc
xor
pop
adc
sbb
jmp
pop
or
stc
inc
jle
int
aaa
sbb
or
icebp
rol
mov
pop
cmpsl
ja
pop
or
pop
adc
jb
xchg
xchg
or
enter
leave
xor
push
jge
scas
push
insl
popf
jbe
cmp
pop
enter
cs
pop
into
les
ret
sbb
fcomps
movsb
and
push
xchg
sub
pop
and
or
rcrb
or
jns
mov
idivl
and
pop
mov
or
xchg
pop
inc
rclb
jnp
lahf
inc
xchg
xchg
lods
mov
je
sub
mov
mov
lods
dec
jl
repz
sub
lret
ret
pop
cmpsl
stos
add
push
pop
fidivl
push
fdivl
pop
mov
out
cmc
mov
pop
push
adc
mov
sti
xor
cmpsl
xor
xchg
jb
mov
out
int
cmp
cli
sahf
mov
xorb
insl
test
pop
or
stc
int
sbb
fisttpl
and
fcmovnb
xchg
and
pop
jg
lods
xlat
cmp
push
das
pusha
jnp
mov
fldt
jmp
jne
or
adc
sub
sub
mov
cmp
outsb
out
repz
mov
mov
jp
jg
ja
mov
or
add
addr16
bound
push
xchg
lret
add
sbb
cmpsl
dec
cli
lock
xchg
mov
mov
xor
sahf
or
sub
out
outsb
test
mov
and
data16
fadds
mov
int
adc
lret
mov
mov
clc
test
rcrl
cld
in
pusha
movsb
mov
sti
sbb
rcrb
pop
je
dec
xor
out
out
jge
neg
pop
in
mov
jbe
mov
push
sub
ficoml
setl
mov
mov
lock
out
sbb
lods
lahf
inc
outsb
das
fisubrl
inc
daa
pop
fs
and
sub
push
call
mov
fcomps
adc
movsb
mov
cmp
sbb
xchg
mov
push
cltd
pop
pop
xchg
out
pop
and
and
push
ljmp
fs
pop
in
adc
out
mov
sti
push
dec
dec
lahf
pop
dec
jae
pushf
iret
fidivrl
rcrl
mov
fwait
dec
fstl
push
add
test
mov
xchg
out
in
cli
fwait
or
mov
pusha
int3
xlat
xchg
jecxz
in
aaa
pop
inc
movsb
sub
dec
xor
pop
mov
mov
mov
sbb
lods
push
dec
sbb
lea
ds
add
js
xor
mov
jb
dec
mov
xchg
fists
or
mov
jp
lods
jb
lds
pop
pop
bound
and
fdivrs
adc
out
push
and
dec
pop
pushf
cwtl
push
and
pop
jbe
and
imul
xlat
jge
mov
cltd
addl
cli
mov
add
ljmp
push
sbb
lahf
jno
cmpsb
xchg
roll
add
fwait
call
sbb
je
add
cltd
cs
or
pop
and
cmc
sbb
mov
lea
add
je
and
int3
mov
push
pop
xchg
sub
and
sahf
daa
cvttps2pi
clc
dec
insl
ds
jb
mov
sub
in
and
xor
mov
pop
pop
mov
lods
insb
fs
jp
pop
push
addr16
sarl
adc
popa
shlb
enter
pop
cmp
mov
adcb
ds
test
jmp
inc
aam
pop
repz
ja
dec
pop
insl
add
push
lods
cmc
stos
lahf
adc
insb
je
jmp
pop
insl
dec
loopne
xor
mov
pop
inc
cmc
mov
xor
mov
ja
pusha
leave
insb
sbb
pop
rcr
add
int
or
hlt
push
psubw
pop
scas
adc
xchg
sub
lahf
xchg
mov
fcomps
mov
int
xchg
mov
bts
loope
pop
mov
push
imul
mov
jl
lahf
jge
test
fcomi
xchg
push
add
pop
or
add
or
rcrb
call
inc
mov
std
das
cmpsb
fnstcw
stc
insb
pop
mov
enter
and
dec
test
jne
icebp
test
lret
lods
rcrl
sbb
cmp
movsl
pop
mov
popa
lret
inc
mov
sti
or
xor
ret
pop
push
add
je
imul
sbb
int
jno
mov
pop
fadd
imul
mov
iret
scas
mov
repnz
mov
lock
test
sbb
sbb
pop
xchg
add
std
ds
daa
push
fcmove
cmpsb
les
adcl
insb
mov
gs
paddsb
data16
cs
mov
add
sahf
mov
scas
daa
push
fildl
pop
stos
in
lock
lea
sbb
stos
and
jle
or
jge
mov
or
mov
sahf
xchg
mov
mov
or
cmp
and
cmp
xchg
loop
js
pop
ret
xchg
xlat
mov
mov
dec
int
pop
mov
lret
movlps
js
inc
scas
or
and
mov
dec
sbb
inc
mov
pop
sbb
push
sti
add
lea
dec
fidivs
icebp
inc
fdivrs
inc
xchg
jo
mov
inc
lret
push
sub
cmp
ficompl
les
mov
out
shl
sub
pop
mov
xacquire
xchg
dec
popf
pop
subb
mov
sbb
inc
ja
lods
or
int
or
adc
out
pop
mov
add
loopne
in
jbe
mov
pop
in
arpl
lret
pop
inc
pop
popf
dec
imul
sbb
inc
jmp
stc
stos
inc
lea
sbbb
push
pop
ljmp
sub
xor
dec
xchg
mov
rcrb
pop
jo
mov
int3
adc
scas
sbb
fs
push
xorb
jp
adc
or
les
or
stc
pop
iret
das
adc
pop
xor
pop
push
or
inc
mov
and
sbb
or
sub
mov
xchg
sbb
xor
imul
outsl
int3
out
das
cld
pop
loopne
jbe
imul
aad
leave
js
mov
and
push
cs
mov
pop
fbstp
or
push
mov
jg
cwtl
pop
scas
pop
idivl
mov
sahf
push
pop
push
pop
stc
inc
pop
mov
aad
xchg
int3
movsb
pop
mov
addb
xchg
ds
cs
ljmp
fadd
div
test
jecxz
push
pop
cmp
pop
stos
xchg
xchg
dec
cwtl
pop
out
add
test
fistpll
dec
pop
js
sbb
lahf
jg
test
pop
mov
push
outsl
pop
ja
push
adc
lods
mov
andl
imul
pop
xor
and
js
jne
mov
inc
roll
shrb
sbb
enter
test
adc
jno
mov
jb
push
pop
fnstsw
mov
pop
sbb
lret
lods
mov
inc
dec
vmulpd
pop
sub
add
jbe
adc
and
movsl
mov
pop
mov
mov
push
outsl
mov
aaa
sahf
add
jae
pop
jns
out
pop
inc
mov
pushf
mov
sbb
fistl
mov
pop
int
rcl
mov
jecxz
sarl
pop
push
cmp
jbe
mov
sub
sub
xchg
sbb
pop
xchg
cmc
lods
loope
lret
pop
ss
jns
mov
jmp
test
pop
test
dec
movsl
arpl
cmp
test
notl
pop
repz
mov
jmp
and
lds
cmp
mov
adc
out
icebp
jp
rcrl
aaa
pop
pop
pop
stc
test
jecxz
jge
push
dec
push
jmp
cwtl
mov
call
pop
sbb
mov
pop
mov
aam
xchg
fwait
pop
pop
shlb
dec
pop
push
ret
scas
int
mov
in
push
xor
jmp
and
aad
adc
std
mov
pop
or
clc
fstp
mov
push
mov
lcall
and
call
push
sbb
jne
mov
and
stc
xchg
mov
outsl
test
pop
ret
and
xchg
in
subb
leave
lock
lods
mov
jge
sbb
xlat
outsl
lods
pop
xorb
pop
fs
stos
cmp
jb
inc
nop
sub
pop
sbb
mov
cmp
aad
xchg
pop
loopne
mov
sbb
push
jmp
stos
jns
arpl
or
inc
mov
andb
push
mov
popf
cwtl
imul
mov
enter
sbb
cwtl
fs
sbb
push
movsl
js
inc
mov
test
dec
mov
sbb
pop
rorl
jnp
cmp
dec
push
fdivs
pop
pusha
stos
adc
sub
loopne
mov
sbb
cmp
jecxz
rcrb
jns
sbb
dec
les
int3
test
pop
jb
mov
adc
test
add
aas
or
add
repz
sub
stc
dec
fisttps
cs
fidivrl
fdivrs
jp
pop
push
out
mov
inc
push
pop
or
lret
icebp
or
lock
and
fwait
mov
ljmp
lds
daa
stos
push
pop
inc
sbb
in
stos
bnd
addr16
rcrb
pop
insb
popf
rorl
pop
fistpll
mov
ret
or
stos
inc
sbb
and
cwtl
pop
out
cltd
les
push
pop
push
pop
clc
sub
int3
xor
jle
dec
or
mov
mov
or
and
pop
mov
lahf
addl
push
xchg
lret
mov
fildl
pop
test
int
lret
mov
pop
mov
insb
and
pop
stos
popa
mov
jo
pop
ss
popf
jb
add
test
mov
daa
lret
pop
cwtl
adc
mov
fidivrs
mov
xor
mov
sahf
pop
mov
scas
pop
andb
ret
pop
addl
orl
in
mov
or
addb
mov
int3
test
test
sub
adc
sub
dec
mov
push
test
xchg
pop
inc
mov
inc
in
rcrb
lahf
mov
cmp
jl,pt
scas
sbb
pop
and
lahf
test
pop
xabort
sbb
fldl
fcompl
loop
xchg
es
add
push
add
mov
scas
add
in
jb
cmp
pop
xchg
pop
nop
inc
sbb
mov
mov
pop
adc
cwtl
dec
xchg
and
pop
fisttpll
push
mov
ljmp
jbe
push
andb
xchg
dec
xchg
pop
inc
inc
enter
inc
jge
int
sbb
cwtl
dec
add
mov
mov
push
rcr
aam
xor
sbb
mov
ja
sbb
xor
lods
pop
dec
adc
daa
push
push
mov
lods
int3
arpl
fsts
mov
clc
ficompl
popa
mov
test
imul
sbb
mov
push
iret
pop
aaa
mov
ret
sbb
or
movsl
xchg
or
roll
jbe
sbb
push
pop
fxam
fadd
int
das
clc
pop
jno
or
pop
inc
xor
lret
pop
leave
mov
sbb
xchg
jmp
bound
addr16
pop
out
push
repnz
aas
sub
pop
stos
or
pop
out
cwtl
jne
pop
lods
insl
sbb
lock
data16
lahf
lcall
cli
repnz
int3
push
and
pop
icebp
inc
arpl
in
sti
cmp
pop
test
adc
negb
lods
and
int3
pusha
xchg
fs
adc
cmp
rcrb
jo
notb
fisttps
dec
dec
xchg
pop
xchg
pusha
sti
insb
push
sub
mov
int
out
wbinvd
inc
pop
frstor
fisubs
out
mov
jl
enter
or
lcall
xchg
mov
push
or
les
push
cld
push
cmp
popf
ds
fsts
pop
xor
mov
outsb
jle
pop
int3
bndldx
inc
pop
cmpsl
inc
rcll
and
test
jecxz
pop
adc
adc
es
xchg
pop
mov
cmp
fs
mov
pushf
inc
lods
lahf
mov
lock
pop
sbb
adc
pop
sahf
sbb
push
rcrl
push
call
sbb
shrl
jecxz
push
negl
dec
lock
jbe
or
in
sbb
mov
shlb
bound
loop
jne
mov
and
pushf
add
fcomps
push
mov
and
pop
mov
fcmovnu
jecxz
lds
pushf
xchg
dec
imul
jg
jae
cmp
in
sbb
adc
xorl
mov
xchg
lods
push
dec
add
pop
lods
std
sbbl
pop
push
and
nop
lea
arpl
loopne
or
jns
mov
pop
mov
and
movsb
pop
jo
ja
xchg
lea
sbb
dec
sbb
bound
dec
mov
pop
cltd
addr16
adc
jg
cltd
dec
scas
xchg
and
jno
or
jbe
pop
sar
inc
iret
icebp
push
jecxz
idivl
or
popf
adc
sbb
inc
mov
jns
dec
or
jb
pop
push
jmp
pushf
inc
lret
pop
add
repz
ljmp
sub
and
divl
scas
and
aas
sbb
mov
sbb
add
js
scas
xchg
sub
into
adc
scas
lret
push
pop
mov
lods
fisubl
adcb
pop
leave
add
out
scas
pop
push
xor
sub
push
cltd
dec
fwait
aam
int
and
dec
icebp
rcrl
fldcw
mov
je
fmulp
jo
push
out
sub
int3
pop
loope
jne
push
push
mov
dec
test
pushf
xchg
adc
push
push
pop
push
jne,pn
ja
push
mov
test
bound
cmp
lds
test
jecxz
aad
pop
ja
sub
lret
je
push
pop
addl
icebp
xchg
into
popa
or
mov
mov
jno
adc
aaa
pop
cwtl
stc
sub
pop
or
out
pop
nop
roll
std
imul
pop
inc
jns
sbb
mov
outsb
cmp
cltd
and
dec
addl
lock
std
pop
add
cmp
or
xchg
xor
fdivrl
stos
subl
dec
jae
inc
ss
fldt
push
testl
inc
cltd
mov
inc
or
fisttps
mov
pop
movsb
stos
enter
fwait
push
pop
not
imul
popa
pop
shl
inc
ja
inc
push
outsb
mov
pop
in
pushf
add
hlt
xchg
xor
inc
clc
push
cmpsl
and
call
popf
mov
pop
xor
addr16
pop
cli
inc
ds
leave
out
mov
out
lret
int
and
mov
insl
push
repz
pop
sub
outsb
test
jl
xchg
jge
imul
mov
mov
mov
jne
lcall
arpl
popa
mov
stos
jg
sub
cmp
jo
fstps
jle
dec
and
push
fs
out
dec
pop
push
xor
idiv
or
cwtl
pushf
xchg
cmp
push
cmc
mov
jp
std
jns
jb
or
push
pop
xor
dec
adc
cmp
xchg
push
adc
mov
xchg
push
mov
dec
push
test
incb
jb
jl
jmp
xchg
jmp
inc
aas
mov
aam
adc
stos
notl
ret
mov
sahf
push
xchg
outsb
pop
sub
xchg
cmp
mov
pop
insl
fldl
int3
sub
or
mov
xor
cmp
and
xchg
mov
xchg
pop
mov
push
inc
sub
nop
pop
int3
lret
push
xor
lock
int
cmpsl
loope
scas
sub
cmpb
push
aaa
insb
outsl
fwait
jmp
jp
pop
adc
xor
ret
xchg
pop
or
daa
scas
jo
mov
data16
ds
icebp
cmp
aad
test
cmpsb
pop
xor
lods
jno
push
jbe
mov
sbb
mov
sub
sub
rcrb
int
dec
jo
sbb
pop
pop
out
push
cltd
gs
jge
adc
mov
and
imul
loopne
cmpsb
mov
push
dec
xchg
pop
fstps
mov
enter
sub
push
jne
aam
inc
pop
mov
sbb
js
lret
xchg
xchg
mov
rcrb
lahf
and
insb
fildl
js
pop
jecxz
xchg
jg
add
cmp
test
out
andb
pop
xor
push
lahf
daa
xor
lods
shrb
pop
ja
pop
je
stos
cmpsl
dec
push
lods
out
int
mov
lret
pop
mov
loope
jo,pn
mov
and
or
pop
rcrb
jno
sbb
cli
lods
xchg
lcall
mov
cli
out
mov
mov
xchg
add
adc
movsl
or
outsl
mov
popa
lret
das
shrl
insl
aaa
sbb
int
ja
cli
pop
fdivp
jae
sti
dec
pop
bound
sbb
js
jo
pop
push
cltd
icebp
inc
pop
std
mov
mov
push
mov
dec
cmpsl
outsb
sbb
lock
xchg
cmp
inc
and
scas
xor
jbe
adc
jg
cmp
dec
pushf
mov
pop
xor
es
adc
jae
and
xchg
xchg
inc
in
pop
cmp
dec
fisubl
ret
lcall
shl
movsb
data16
xchg
divb
lcall
pop
mov
lahf
test
lds
into
popf
sub
call
pop
leave
sub
incb
in
xchg
mov
repz
jp
sbb
sbb
out
xchg
sti
push
imul
dec
mov
sbb
sub
sub
cmp
in
pushf
in
pop
rcl
jno
inc
les
dec
lcall
sbb
inc
push
int
or
dec
sub
inc
rolb
xchg
mov
pop
pop
ljmp
inc
mov
mov
arpl
pop
or
adc
aam
scas
shll
js
pop
adc
and
call
pop
stos
sbb
rorl
es
or
dec
xchg
pop
int
dec
mov
inc
pop
mov
ljmp
pop
lret
mov
pop
int
mov
jl
sub
mov
cmp
mov
mov
sbb
cwtl
mov
into
hlt
shl
pop
ret
mov
pop
and
xlat
fisubrl
xchg
repz
cmp
xor
cmp
or
add
ret
xor
adc
mov
jmp
dec
int3
sbb
pop
cmp
sti
out
addr16
mov
jnp
add
and
into
sub
insl
xor
outsl
adc
mov
sbb
imul
pop
arpl
in
lahf
adc
mov
movsl
or
pop
aam
cltd
fiaddl
adc
dec
jge
pop
shl
push
in
jecxz
stos
ficomps
scas
mov
jnp
sbb
mov
pop
ror
dec
adc
inc
pop
popf
add
mov
insb
xor
pop
aas
push
or
xchg
orl
lahf
test
mov
sahf
and
pop
push
es
lret
gs
pop
out
outsl
ficoml
add
adc
das
jne
rclb
sub
dec
mov
and
mov
xchg
sbb
jg
pop
mov
rcrl
jb
stc
in
lea
jl
dec
int
add
jne
and
outsb
movsb
sub
flds
out
xchg
fstpl
inc
xchg
xchg
lret
mov
pop
lret
mov
pop
add
dec
jg
jge
jbe
mov
xchg
or
fimull
icebp
pop
push
cmp
pop
pop
aad
jecxz
enter
cmp
or
sub
notl
or
sbb
enter
orb
popl
fstp
lea
xchg
xor
lods
arpl
xchg
pop
pop
xor
cmp
sbb
in
clc
repnz
fsubs
ret
mov
pop
push
adc
dec
loope
int3
mov
sub
int
shl
adc
sub
outsb
fucom
mov
jle
repz
add
loope
push
pop
in
mov
imul
pop
pusha
cmc
stos
mov
pop
xchg
movsl
mov
int
xchg
sti
pop
sub
cs
cmp
mov
les
fcomp
aaa
scas
fdivs
inc
dec
mov
mov
dec
cmp
mov
pop
ficoms
daa
cmp
dec
fildll
mov
pop
dec
mov
inc
mov
push
cmpsl
out
out
stc
mov
or
dec
scas
pop
push
pop
push
mov
xor
jp
add
mov
sub
sbb
jns
dec
int
xor
sbb
filds
into
fadds
pop
mov
jle
dec
call
cmp
cmp
jl
aas
cmp
push
ficomps
mov
mov
fbstp
fistps
mov
sahf
data16
cmc
pop
shl
dec
rcrb
pop
sub
cmpsl
movsb
and
push
pop
mov
loop
gs
int3
mov
adc
cmp
pop
scas
jge
stc
scas
imul
cmp
test
shrl
sar
je
cltd
and
mov
leave
mov
push
inc
adc
push
xchg
pop
scas
mov
aas
fidivs
iret
movsl
push
ljmp
cmp
jp
pop
fiaddl
enter
xchg
insl
push
mov
sbb
aam
fld
sub
pop
stos
daa
mov
loopne
mov
fsubr
or
inc
push
lock
fadds
push
inc
dec
xlat
pop
or
jae
mov
xor
mov
subl
ss
repnz
fldz
push
leave
inc
sbb
jo
pop
out
add
dec
sbb
arpl
lea
nop
out
pop
rcrb
dec
xchg
lahf
sbb
xchg
ljmp
adc
pop
int3
lods
mov
js
into
add
adc
xchg
fldenv
pop
les
inc
add
jge
int
aaa
mov
pop
jns
hlt
add
pop
movsl
pop
mov
test
loop
jl
and
cmpb
cld
pop
sbb
cmp
in
push
xchg
loope
gs
outsl
pop
dec
dec
jno
jb
cmp
pop
stos
xor
subb
add
mov
decb
or
addr16
lret
outsb
jno
pop
xchg
movsb
int3
mov
pop
push
fcoms
or
cli
mov
aas
lcallw
pop
mov
ret
jb
jne
pop
mov
outsl
ret
hlt
push
pop
jge
movb
test
jnp
pop
pop
cmp
ret
pop
mov
mov
mov
mov
scas
sbb
mov
mov
aad
pop
subl
mov
jbe
lods
pop
pop
xor
aam
out
pop
int3
pop
or
pop
sub
mov
pop
loop
sub
ss
in
movsb
ljmp
popa
ret
mov
inc
pop
sbb
xchg
dec
pop
adc
dec
mov
dec
mov
pop
fstpl
mov
cltd
sbbl
cld
cwtl
add
xor
mov
js
sarl
mov
xchg
data16
and
imul
int3
nop
push
push
testl
cwtl
les
mov
imul
add
mov
mov
into
pop
lods
fmul
cld
les
mov
insl
jp
pop
mov
jno
pop
in
mov
leave
ss
ja
jo
and
inc
sub
icebp
jbe
add
adc
push
arpl
jp
or
mov
inc
push
sub
loopne
sub
shl
add
inc
mov
ror
or
in
arpl
cmp
xor
jbe
mov
xchg
jle
outsl
repz
insl
push
or
jnp
dec
xchg
icebp
push
cmp
mov
mov
les
inc
out
jns
pop
loope
lea
pushf
test
call
mov
pop
std
mov
flds
or
push
fisubs
outsb
je
jp
sbb
int
cmp
iret
xchg
imul
rcrb
lock
test
jb
cmp
mov
xchg
imul
sbb
mov
xor
ljmp
std
orb
insb
pop
out
int
inc
inc
fmull
popa
pop
les
pop
fstl
mov
hlt
cmp
jle
lods
mov
cmpsl
scas
std
cli
movb
push
and
xchg
pop
and
fbstp
pop
andb
dec
pop
push
or
lret
pop
mov
insl
adc
jbe
fcompl
data16
xchg
pop
fbld
xchg
shl
jmp
pop
push
jbe
and
and
xchg
lea
scas
push
mov
scas
dec
hlt
sbb
pop
inc
and
mov
pop
add
cmc
outsl
xchg
sbb
ja
std
test
and
fstl
leave
sti
pop
int
test
lcall
sbb
leave
push
jo
sub
ss
js
or
and
scas
pop
mov
mov
or
shl
stc
mov
xchg
push
pop
pop
xor
insb
cmc
sbb
aad
repz
jne
add
js
call
imul
sub
cmc
pop
xchg
int3
add
bound
hlt
mov
or
pop
cmp
pop
pop
popl
jmp
dec
aas
ljmp
push
pop
dec
repz
in
pop
cmp
lock
xor
cmp
mov
lret
dec
sahf
cli
int3
int
xor
cmp
jo
pop
popa
and
adc
gs
cli
jp
fidivs
adc
pop
das
out
xchg
jns
sahf
jmp
call
bnd
sub
popf
negb
and
out
repz
push
push
mov
clc
mov
dec
mov
pop
push
add
mov
dec
xlat
pop
sub
and
push
int
pop
and
inc
pop
push
jns
mov
pop
jge
lea
jmp
out
repz
pop
into
shl
add
rcrl
ret
lods
mov
pop
call
in
inc
pop
push
xchg
cltd
push
cmpsl
jl
mov
enter
add
arpl
mov
popf
or
aas
cmp
sar
xor
outsb
negb
test
push
scas
cs
dec
pop
mov
test
push
pop
andb
or
scas
divb
std
mov
jne
fmuls
xchg
int
mov
ret
int3
and
or
fsubrs
dec
scas
mov
lahf
add
adc
jmp
push
movsb
ss
cmp
sbb
pop
loop
int
or
hlt
mov
push
adc
jecxz
xor
pop
pusha
pop
out
adc
pop
dec
int
sbbl
pop
mov
sub
and
or
sbb
cltd
jle
std
pop
outsl
mov
pop
daa
dec
fwait
add
and
fdivp
das
pop
pop
adc
push
dec
pop
jmp
jns
icebp
cmp
fwait
add
jno
mov
sbb
pushf
int3
test
mov
pop
gs
rcrb
in
add
pop
or
mov
gs
cmp
in
mov
mov
pop
mov
int3
repz
sub
inc
jp
push
movsb
pop
fcomip
jnp
pop
pushf
pop
outsl
mov
mov
into
adcb
push
or
inc
pop
or
lahf
int
pop
add
push
stos
push
jb
adc
and
xor
add
int
jnp
mov
mov
pushf
pop
sbbb
xlat
add
jl
jno
sti
mov
rcr
push
jmp
mov
fildl
pop
jo
rcll
stos
fcoms
mov
ret
fcmovnb
push
adc
hlt
and
cmp
pusha
pop
sub
xor
aam
push
mov
outsl
pop
mov
pop
jle
stc
pop
imul
push
pop
arpl
je
ret
dec
pop
inc
ljmp
pop
push
rcl
arpl
int
pop
daa
mov
jmp
outsl
xchg
dec
jae
rep
iret
ret
pop
push
adc
ja
push
push
mov
fldl2t
sub
pop
inc
mov
cltd
mov
jnp
or
xor
adcb
pop
pop
sahf
out
es
faddl
xchg
mov
ret
mov
popa
add
xor
adc
pop
ja
adc
pop
test
sub
rorb
pop
aad
dec
ret
lret
pop
andl
lods
adc
fnstcw
or
lahf
xchg
jp
pop
pop
aad
or
dec
dec
xchg
bound
shrl
pop
and
hlt
inc
jecxz
mov
jns
pop
stc
mov
fsubr
mov
jmp
je
mov
test
ja
leave
mov
inc
inc
mov
pop
and
ret
sarb
dec
add
lret
mov
je
lahf
insl
mov
jl
cmpb
mov
jnp
pop
xchg
inc
ja
clc
mov
outsl
cmpl
imul
aaa
pop
in
int
cmp
pop
xchg
into
jnp
pusha
dec
bound
lods
dec
pop
or
mov
jb
xchg
xorb
test
push
dec
mov
je
in
and
call
stc
lahf
pop
mov
stos
mov
xlat
cmp
je
mov
fwait
sbb
cmp
fs
es
lahf
jge
lds
clc
lods
ljmp
mov
add
and
pop
pop
mov
and
ret
sahf
fists
xor
mov
dec
pop
cmpsl
in
jbe
or
jg
lds
std
push
inc
int
scas
pop
sbb
out
push
cmp
pop
ss
idivl
movsb
aad
popf
std
pop
jmp
into
xor
mov
dec
mov
icebp
push
or
clc
test
cli
pop
out
loope
cld
imul
or
sbbb
loop
sub
mov
mov
adc
mov
insb
sbb
fidivrl
jbe
fsubrs
sbb
push
sbb
pop
es
arpl
pop
jb
sarb
add
dec
or
mov
add
flds
cli
test
stos
stos
mov
and
cs
push
aaa
push
les
fidivl
add
dec
pop
dec
xor
sub
add
adc
push
fidivs
push
mov
scas
xchg
fistps
and
fidivl
push
pop
sbb
stc
incb
mov
in
cmpsl
bound
dec
sbb
pop
and
mov
loop
push
mov
mov
adc
cmpl
cltd
fldenv
dec
mov
imul
pop
pop
rcll
push
test
sbb
xor
sbb
ret
sbb
jbe
popf
jge
pop
adc
dec
pop
sbb
and
lcall
sbb
jo
js
pop
pop
cmp
fists
les
pop
push
daa
je
xor
mov
pop
cwtl
std
cli
sub
pop
xor
fidivs
cmc
iret
dec
jle
sbb
aam
mov
aad
mov
push
jp
cmpsb
cmp
xor
xchg
hlt
sub
lahf
sbb
mov
jo
leave
pop
mov
idivl
adc
shrb
pop
ljmp
mov
adc
push
lret
pop
in
cld
push
mov
mov
ret
cmp
pop
into
je
inc
ss
jp
dec
push
andl
dec
lods
push
int3
sti
mov
and
fcomps
adc
test
fsub
ss
push
int3
imul
outsl
das
cltd
xchg
cwtl
lods
or
push
and
adc
jnp
mov
imul
mov
mov
lahf
and
or
push
pop
js
imul
imul
fcoml
fwait
push
stc
fcoms
mov
pop
push
fldlg2
xchg
sub
lahf
xchg
jmp
mov
adc
movsl
push
fcomps
or
cmp
pop
in
in
or
xchg
lock
out
jo
pop
aaa
mov
cltd
push
pop
jp
mov
or
and
inc
mov
int3
movsb
jecxz
jl
pop
jne
inc
mov
jns
pop
clc
add
sbb
pop
pushf
sub
nop
cld
push
into
dec
xchg
in
jp
push
push
enter
mov
mov
data16
xor
or
pop
inc
pop
dec
aaa
lahf
mov
dec
dec
and
test
xchg
jmp
dec
fidivrl
jae
enter
adc
inc
orb
std
xchg
adc
pop
mov
cmp
add
dec
out
pop
shrl
inc
movsbl
xchg
push
mov
jb
inc
or
fstps
dec
push
into
lahf
insl
sub
xchg
loop
ds
loope
repnz
dec
pop
inc
push
cmp
xor
dec
ljmp
pop
roll
inc
dec
pop
cld
jbe
pop
mov
xchg
mov
pop
stos
int
dec
jae
xor
xor
cmpsl
movsl
shlb
jo
sub
mov
jnp
sbb
aaa
lds
cmp
mov
mov
and
test
das
mov
movsb
testb
aam
add
sub
loop
repnz
push
out
mov
test
es
cmp
adc
cmp
rclb
mov
push
push
jp
xchg
lret
cli
lahf
mov
ret
xchg
data16
stos
in
jge
jnp
into
pop
cmp
lods
xchg
or
pop
or
add
setno
negb
cltd
push
mov
dec
mov
pop
into
sub
jns
aam
mov
adc
stos
mov
roll
pop
cmp
clc
pop
in
xor
subb
or
lret
dec
xchg
mov
inc
lods
aas
aad
mov
cli
pop
sub
fisttpll
jle
pop
sti
mov
add
cld
fldt
lods
je
stos
jo
dec
ficomps
movsb
mov
jl
scas
add
xchg
and
out
push
jae
mov
icebp
pop
hlt
iret
add
jb
sbb
test
je
pop
aaa
or
xor
push
jbe
pop
xchg
xor
sub
subl
repz
orl
mov
out
pop
jo
push
pop
pop
mov
or
pop
int
or
shl
dec
dec
pop
je,pn
and
fmul
ret
cmp
fidivs
shrl
cmp
fcomi
mov
mov
inc
test
add
cmp
xchg
fisubrl
jmp
dec
addr16
sbb
add
lret
pop
sub
and
xchg
bound
cmp
gs
inc
pop
xor
daa
int3
inc
aas
ja
sbb
sub
push
sbb
push
lret
out
dec
cs
ss
xchg
push
jecxz
dec
mov
nop
sbb
add
sub
cmp
pop
or
xor
sbb
push
mov
jecxz
mov
imul
outsb
jmp
cwtl
in
dec
push
loop
repnz
or
sbb
or
pop
stos
jae
lock
ret
xchg
pop
cmp
mov
mov
popf
pop
pop
rcrb
and
jno
arpl
adc
sub
or
mov
inc
test
xor
push
loopne
addr16
fstps
mov
mov
xchg
shll
push
push
jle
pop
sbb
ja
repnz
sbb
dec
cmpsl
pop
and
iret
bound
fcmovne
cs
jae
pop
rclb
sbb
jne
jmp
clc
scas
outsl
pop
rcrl
mov
addr16
int
add
push
fninit
sbbb
inc
roll
jb
scas
push
add
aam
std
in
cmp
loope
pop
cmpl
test
and
cmpsl
jl
push
rorl
out
jbe
scas
mov
int3
inc
mov
pop
pop
scas
int
fistl
add
lea
pop
and
les
ds
pop
and
jnp
int3
mov
mov
mov
adc
dec
push
jmp
mov
mov
cmp
mov
idivl
pop
dec
sbb
mov
bnd
rcr
sbb
adc
cli
mov
adc
lret
jbe
shl
push
fcompl
lcall
pop
loopne
jbe
dec
int3
or
fidivl
add
mul
mov
repz
mov
aas
loopne
pop
std
xor
stos
xchg
xchg
ja
lret
sbb
lea
add
jle
outsb
mov
mov
pop
adc
lods
xchg
dec
pop
mov
xorl
rolb
mov
imul
and
pop
dec
mov
pop
mov
scas
ret
mov
jb
pop
push
pushf
fnstenv
mov
xor
mov
jne
ds
scas
or
test
mov
sbb
psubb
lret
idivl
xor
push
add
sbb
dec
jl
sbb
fistpll
sub
inc
pusha
clc
lds
sub
mov
loop
sub
insb
dec
std
decb
out
pop
lods
push
popf
push
or
cmpsb
pop
cmp
pop
pop
gs
bound
ds
rcl
jle
pop
inc
jns
inc
std
fidivrl
xlat
shl
pop
push
mov
and
add
or
add
sbb
ret
fcompl
sbb
inc
pop
sti
push
sbb
pop
mov
out
xchg
pop
out
inc
pop
mov
pop
mov
roll
adc
int
mov
pop
jbe
xchg
icebp
out
or
pop
int3
bound
fists
dec
xchg
int
es
or
pop
cmp
out
or
mov
pop
gs
jge
cmp
push
xor
cld
cltd
jb
sbbb
aas
out
or
ss
fisubl
mov
pop
scas
es
inc
sub
insb
adc
mov
push
xchg
or
jmp
push
fxam
ret
jle
sbb
decl
and
in
push
jo
jmp
mov
or
dec
testb
call
enter
sub
jno
mov
lret
jl
shrl
scas
add
lock
jbe
dec
fnstcw
lcall
adc
aaa
or
pusha
push
adc
call
jno
xchg
rcrl
aaa
pop
and
add
xchg
stos
ss
pop
cwtl
inc
movsb
or
pop
shl
les
pop
int
mov
pushf
jb
xchg
or
mov
sbb
jp
jge
dec
int3
scas
mov
je
test
insb
add
addr16
stc
cmpsb
lock
out
inc
pop
jb
mov
xchg
dec
jp
int3
pop
rcll
movsb
pop
stos
lret
pop
pop
push
sbb
mov
mov
loope
xor
movsb
aaa
shrl
sub
mov
mov
fisubs
pushf
add
loopne
sahf
mov
and
sbb
push
pop
divl
je
dec
pop
mov
jb
mov
mov
mov
scas
pop
lret
fisubrl
loopne
iret
inc
or
cltd
shlb
push
pop
into
pop
push
dec
in
cmp
enter
jne
addr16
pop
jp
sbb
sub
mov
test
pop
int3
test
pop
jl
inc
dec
push
pusha
call
pop
ja
and
shrb
pop
mov
dec
pop
dec
fstl
dec
mov
jle
add
stos
cltd
scas
pushl
pop
pop
movsb
mov
adc
pop
ljmp
mov
mov
repz
loop
js
pop
lock
and
dec
or
in
ljmp
sub
pop
aam
jns
data16
xchg
stc
fstps
les
mov
sbb
bound
pop
dec
addb
xor
les
mov
movl
or
xchg
mov
fiaddl
nop
pop
rcrb
gs
inc
cmp
adc
push
pop
jnp
aad
pop
sub
pop
gs
xor
mov
pop
pop
and
dec
xor
fstpl
mov
sbb
mov
dec
fdivrs
stc
dec
pop
pop
mov
push
sbb
push
jl
jo
mov
add
pop
jecxz
mov
or
jmp
arpl
mov
and
int3
pushf
sbb
ret
mov
push
xchg
adc
fsubrs
cmpsl
lcall
sbb
pop
stc
sub
xchg
cli
mov
call
loope
cmpsb
dec
jg
xchg
into
popa
mov
xlat
adc
je
pop
sbb
fsts
pop
dec
and
bound
pop
in
push
mov
cwtl
into
cltd
dec
pop
mov
out
ljmp
aas
sarl
mov
cmc
pop
adc
adc
mov
or
fs
insl
jae
pop
adc
push
mov
repz
mov
test
jbe
test
add
cltd
int3
mov
dec
fwait
icebp
test
adc
mov
ds
mov
push
mov
jne
mov
pop
pop
addr16
sub
xchg
and
cmpsb
fiaddl
pop
das
mov
js
jbe
fdivr
in
fisubrs
xchg
xchg
lcall
adc
pop
lahf
mov
sbb
jne
pop
pop
jno
pmaddwd
adc
das
in
call
push
xor
fidivrl
lds
xor
push
push
cltd
enter
and
je
push
lea
jnp
pop
ret
xchg
outsl
int3
fs
sub
fstpl
sub
jne
imul
ljmp
ret
pop
inc
push
or
gs
sahf
lds
repnz
test
pop
xchg
fisttpll
pop
add
mov
imul
sti
xchg
scas
sub
js
or
pop
dec
aaa
sbb
sbb
pop
test
arpl
and
xlat
pop
in
je
jecxz
out
or
pop
sarb
jo
dec
mov
pop
sbb
jne
lods
sbb
ret
mov
inc
mov
or
lret
pop
movsl
jb
insl
pusha
inc
lods
leave
jge
in
xchg
mov
pop
rcr
mov
inc
sbb
mov
sbb
push
add
mov
xor
jb
ljmp
mov
pop
in
pusha
mov
cltd
dec
pop
scas
cmc
push
push
pop
sbb
push
and
inc
dec
inc
test
fs
pop
insb
sbb
subb
popa
xchg
pushf
loop
in
stc
pop
sahf
dec
push
mov
test
pop
fisttpll
inc
flds
add
insl
inc
xchg
pop
dec
pop
rolb
adc
cltd
dec
cmpsl
negb
pop
add
ficoml
mov
outsb
sahf
inc
gs
shlb
jge
jno
lock
lret
in
mov
and
push
mov
popa
dec
lahf
movsl
adc
jg
jns
xchg
pop
mov
mov
aam
inc
cmp
loopne
int3
es
cmp
xchg
out
push
pop
mov
add
and
jns
mov
adc
dec
dec
outsl
andl
dec
and
pop
loope
cs
test
push
fwait
mov
nop
jns
fsubl
ffreep
pop
shrl
push
xchg
jo
pop
inc
dec
cmpl
pop
push
sti
in
insl
cmp
jns
mov
pop
lret
push
cmp
mov
outsb
and
add
adcb
mov
push
mov
cli
testl
push
pop
bound
add
gs
pop
ret
mov
pop
lret
pop
mov
inc
dec
jo
mov
jae
push
pop
xchg
mov
mov
pop
cmp
insb
sub
pop
sbb
test
dec
pusha
pop
jae
and
push
leave
cmp
scas
xchg
repz
stos
pop
mov
mov
ja
and
mov
pop
stos
pop
test
mov
addr16
fnstsw
adc
or
jns
ljmp
pop
pop
mov
out
rcrb
into
sbb
dec
ret
pop
xor
inc
mov
aas
data16
mov
pop
fidivl
dec
scas
loope
adc
fisttpl
stc
movsl
cmp
movsb
imul
repnz
jo
call
loopne
adc
int
xor
decl
scas
cld
out
movl
jecxz
pop
xor
sub
mov
enter
cmp
sbb
xchg
mov
mov
fistpll
sbb
lahf
pop
ss
fcomps
fidivs
fstpl
or
fs
sub
clc
fstps
sbb
dec
jne
imul
push
fwait
push
pop
mov
xor
add
jbe
iret
adc
lea
int
push
adc
mov
xchg
mov
lret
jo
clc
andl
int
push
lcall
sub
push
clc
ja
or
mov
test
mov
push
movsb
cmpsl
pop
or
popw
in
sbb
sbb
xor
testb
cmp
dec
mov
sbbl
or
sub
add
and
mov
ret
mov
or
sti
push
jl
mov
dec
out
int
and
cld
and
insb
jecxz
fisttpl
jne
shl
cwtl
mov
loop
shlb
lret
mov
loope
mov
jb
dec
or
pop
popl
fwait
sbbb
aam
xchg
mov
push
icebp
pop
insl
nop
in
loopne
pop
adc
shrl
fnstcw
pop
int3
cmp
mov
push
sub
pop
pop
xor
and
rorb
loopne
andl
pop
mov
outsb
rclb
or
pop
mov
dec
outsl
pop
pop
pop
es
jbe
xor
jno
aam
scas
clc
sub
inc
aaa
pop
adc
addl
jne
dec
subb
scas
loopne
fwait
dec
mov
rorb
dec
je
pop
fnstsw
int3
cmc
pop
in
cmp
int
xchg
gs
lds
cltd
fcmovnu
daa
or
rcrb
pop
xor
inc
xorb
adc
pop
push
je
mov
push
int3
mov
jne
pop
sub
pop
in
push
and
jnp
aas
icebp
bound
add
test
mov
punpckhwd
xor
adc
mov
or
push
and
inc
xchg
repz
cmpsl
dec
pop
adc
or
pavgw
pop
imul
cmp
xor
mov
jo
pop
int
ljmp
sbbb
sub
lods
addr16
cmp
xor
cmp
and
mov
scas
dec
adc
and
lea
out
jl
pop
insl
jnp
gs
pop
pop
mov
sbb
sub
fildl
ja
mov
jb
stos
mov
int3
cmp
add
pop
movsl
out
mov
jg
mov
leave
mov
mov
pop
xchg
fdivs
lcall
enter
xchg
dec
add
hlt
push
jl
mov
dec
pop
aaa
icebp
int3
dec
and
in
mov
aaa
cmp
dec
and
out
pop
adc
hlt
adc
arpl
mov
mov
cmp
fildl
movsl
fiaddl
pop
adc
in
loope
in
ss
xchg
pop
cltd
dec
in
leave
lahf
mov
xor
jae
out
stos
pop
fbld
adc
push
pushf
dec
out
sub
sbbb
pop
sbb
rclb
push
push
xchg
xchg
aas
jns
leave
int
imul
cmc
mov
push
lea
fisttpl
int3
adc
cs
push
sub
rol
sub
mov
jns
stos
jb
push
out
repz
adc
lea
jb
ja
push
loopne
fildll
fs
pop
rcrb
pop
out
jg
pop
sbb
rol
jnp
sbb
mov
outsb
fcomps
xchg
pop
dec
xor
into
jae
and
jl
pop
xchg
pop
cmpb
das
xor
int
mov
adc
ljmp
inc
shrb
rcll
and
pop
and
cmp
stos
pop
stc
sti
or
push
pop
pop
dec
cmp
mov
scas
mov
jbe
sahf
mov
std
mov
mov
xorb
xchg
add
lods
jb
das
mov
pop
addr16
sub
push
loope
mov
add
push
push
es
cli
shlb
xchg
or
or
pop
fstps
jbe
sub
es
ja
mov
lret
scas
mov
inc
mov
xchg
fstl
sub
mov
cmpsb
aaa
rcl
sub
enter
inc
adc
imul
pushw
xchg
mov
and
jecxz
dec
sub
in
into
mov
add
adc
push
es
and
lea
push
jbe
mov
pop
sub
loop
mov
fwait
xchg
int
jbe
movl
out
bswap
loopne
push
jnp
cltd
adc
subl
pop
mov
pop
fwait
push
out
movl
pop
rol
adc
jbe
push
pop
mov
mov
and
leave
mov
mov
dec
gs
iret
inc
sbb
mov
pop
jbe
stos
nop
jecxz
pop
jnp
and
mov
xchg
dec
push
jbe
or
xor
pop
add
popf
stos
mov
sub
setbe
popa
pop
mov
pop
jae
ret
push
pop
adc
push
mov
or
mov
or
out
sahf
lcall
mov
prefetcht2
clc
xor
stos
mov
or
scas
inc
fstl
sub
push
ret
popa
jnp
aad
incl
mov
jne
xchg
mov
push
js
mov
mov
in
jb
pop
lcall
in
adc
icebp
aam
adcb
pop
les
pop
jne
aaa
or
fisttps
mov
push
mov
jnp
test
cmp
pop
pusha
cld
pop
int
lods
jp
dec
adc
push
subb
pop
data16
in
sub
cs
lret
cmp
mov
mov
shll
int
cmpsb
cwtl
or
mov
es
clc
sub
xor
mov
mov
pop
jb
dec
iret
push
cld
in
dec
mov
adc
and
mov
jp
adc
dec
add
push
popf
movsl
ja
jmp
pop
scas
cwtl
shl
js
cmp
pop
scas
clc
fs
pop
out
ds
inc
repnz
jnp
sub
mov
lock
inc
jo
mov
jmp
push
adc
cmp
xrelease
xor
jle
xor
add
and
test
xor
movsb
add
xchg
pop
notl
or
or
add
test
xlat
nop
sbbl
xchg
ds
adc
cmp
cwtl
test
mov
cmp
push
push
out
cmp
and
and
mov
push
jecxz
pop
jbe
xorl
jle
sbb
stos
stc
jg
jb
data16
cld
lahf
pop
int
xor
scas
sbb
mov
out
lds
inc
xorl
pushf
mov
fldenv
xchg
mov
lcall
and
sbbb
inc
dec
xchg
sub
inc
pop
jg
cmp
js
dec
nop
lcall
stos
adc
push
xor
je
push
popa
dec
xor
ret
sahf
fmul
xchg
int
mov
gs
sbb
sub
jge
xchg
stos
xorl
add
lret
fldl
push
ret
fisttps
in
jbe
dec
jae
or
sub
inc
add
pop
test
sbb
sbb
pushf
jl
decl
jb
popa
imul
add
pop
fdivrl
daa
pop
and
fs
pop
sbb
xorb
aad
pop
lods
jp
cmp
lahf
test
movsb
into
jnp
cwtl
pop
push
mov
push
rorl
pop
lea
pop
popf
pop
mov
js
push
pop
jb
cltd
add
mov
pop
dec
out
pop
stos
inc
and
arpl
divl
or
ficomps
inc
or
jbe
or
mov
mov
inc
push
jecxz
clc
and
sub
dec
lret
out
lea
and
push
jo
fs
dec
pop
movsb
mov
jo
pop
sbb
ror
or
add
or
scas
rcrl
cmc
repz
popf
sbb
inc
push
push
sbb
pop
imul
push
std
fstpl
pop
nop
bound
test
pop
int
hlt
push
xchg
aas
movsb
xchg
pop
pop
ffree
or
jbe
xchg
insl
call
mov
int
xor
push
out
lods
pop
sbb
js
inc
push
aaa
sbb
pop
mov
scas
jmp
cltd
call
xorb
fs
jbe
pop
jmp
jge
cwtl
xor
dec
or
stos
and
jnp
sub
jle
imul
in
pop
dec
mov
in
dec
dec
or
mov
inc
jnp
push
lret
cmp
mov
push
loopne
adc
movsb
fdivs
pop
lcall
dec
mov
cmp
incb
push
lods
pop
jmp
sbb
aas
add
mov
lahf
mov
pop
xor
jb
mov
pop
cs
movsl
fs
test
pop
mov
stc
xor
or
and
pop
mov
pop
pop
sbb
pop
mov
inc
or
in
loop
adc
lret
dec
sub
pop
push
and
pop
mov
and
add
pushl
dec
fistpl
jmp
fimuls
pushf
xor
rorl
mov
jnp
mov
cmp
mov
push
sbb
aam
or
mov
jae
std
xor
dec
sbb
into
scas
xchg
push
and
js
mov
jecxz
push
pop
pop
ret
dec
cmp
popf
jb
inc
mov
pop
call
xor
dec
mov
aaa
cmp
dec
adc
mov
cmp
jge
dec
fcmove
jnp
fists
lahf
mov
addr16
sub
lods
sahf
in
sub
mov
popf
out
pop
jg
pop
lret
pop
adc
addps
in
jl
sub
mov
push
sub
sti
xor
into
pop
jp
cld
xor
and
sbb
in
pop
scas
std
dec
lret
push
int
mov
test
lahf
ljmp
or
jno
mov
xchg
push
shrb
lret
cltd
xor
sub
lahf
dec
js
mov
or
repnz
je
pop
vaddss
fnsave
xor
xorl
adc
jmp
fwait
into
insl
gs
cmp
push
mov
pop
subl
sub
add
pop
xor
stos
insl
arpl
ja
call
push
mov
push
js
leave
mov
sub
pop
pop
or
or
fdivs
dec
or
mov
sbb
and
pop
jns
mov
or
movsb
lret
jbe
ljmp
jo
jne
xchg
scas
mov
insl
stc
sub
adc
iret
jnp
adc
dec
out
lods
sub
push
testl
pop
sti
jb
mov
fbstp
cmp
mov
add
and
adc
pop
xor
xchg
aas
ret
dec
out
cmp
sahf
cmp
fadds
jmp
dec
movsl
and
das
dec
pop
lds
or
push
ss
jb
cmp
out
cld
fstps
jno
aam
lahf
push
dec
orb
insl
pop
pop
fstpt
int
test
sbb
push
pop
sub
or
out
stc
repnz
push
inc
scas
cli
pop
mov
pop
push
nop
mov
fisubl
aaa
mulb
rorb
and
mov
pop
push
loope
add
push
pop
shl
xchg
xchg
or
sbb
sbb
test
inc
stc
mov
ja
add
pop
adcl
mov
cmp
in
pop
addr16
cwtl
sbb
and
aam
jne
xor
shlb
pop
push
repnz
sbb
negl
fstpl
or
sarl
and
lea
loopne
mov
cli
mov
or
pop
sub
in
inc
and
rcrl
fwait
loope
jne
sti
pop
or
and
pop
or
mov
pop
test
or
pop
fimull
xchg
jbe
orl
arpl
aaa
or
int3
enter
xlat
sbb
push
dec
cmpxchg
inc
stos
inc
sub
dec
outsl
xchg
pop
mov
pusha
insl
movsb
add
lret
cmp
push
sbb
xchg
dec
push
fxch
mov
mov
xchg
push
pop
imul
add
pop
cltd
movsb
and
pop
sbb
jnp
fisttpll
mov
lcall
add
lea
std
mov
pop
add
lcall
mov
dec
sub
and
in
mov
sahf
ret
shrb
cltd
scas
and
push
fwait
push
push
mov
clc
fisubrl
stc
outsl
je
sub
int3
add
daa
mov
dec
xor
loopne
lcall
sbb
dec
pop
mov
pop
aas
mov
test
adc
mov
xchg
sbb
add
cmp
ja
inc
pop
hlt
jmp
jecxz
push
popa
pop
orb
sbb
pop
mov
int3
ret
mov
dec
cmpb
push
sub
emms
int
or
ljmp
add
fld
jb
rcrl
js
popa
lea
lahf
jns
sbb
pop
mov
cmc
pop
shll
jae
adc
test
lcall
orb
gs
pop
xor
test
xchg
push
mov
decb
adc
inc
pop
dec
fwait
dec
push
stos
imul
movsl
lcall
pop
jns
cmp
or
les
outsb
fdivs
and
jmp
xor
jb
dec
pop
fwait
sti
or
sahf
aaa
mov
fsubs
cwtl
or
scas
enter
test
clc
and
inc
stc
iret
and
mov
sub
sti
out
adc
and
leave
lods
sbb
movsb
mov
imul
sub
pop
pcmpeqb
test
out
inc
out
pop
ja
lock
mov
int
js
mov
cmp
scas
dec
and
fistpl
fucomi
shr
add
mov
cmpsl
mov
pop
inc
rcl
gs
xchg
sti
lods
inc
sub
mov
fstl
sub
scas
add
cli
insl
jle
mov
enter
test
test
adc
mov
negb
xchg
test
int3
xchg
stos
ja
incb
cmp
leave
adc
out
and
pop
push
notl
outsl
ss
adc
adc
mov
add
sbb
dec
lret
pop
inc
push
xor
and
mov
add
scas
scas
xor
inc
lods
jecxz
lret
pop
lock
cmpsb
adc
rolb
rcrl
stc
orb
fildll
sub
int
sub
xor
push
push
out
ficoml
outsl
pop
lahf
daa
xor
mov
gs
or
pushf
or
nop
dec
icebp
cmpb
mov
mov
mov
rcrb
and
cs
lcall
dec
std
pop
out
add
pop
mov
pop
inc
dec
iret
pushf
popa
mov
pop
xchg
lret
mov
dec
mov
jle
dec
rcrl
mov
xor
pusha
sub
movsb
in
lock
push
repnz
xor
pop
cmp
mov
scas
pop
mov
fmull
and
aas
movsb
xor
pop
jmp
jge
mov
rcrb
push
das
xchg
inc
push
mov
cmp
pop
ss
stos
mov
inc
push
push
mov
push
sbb
js
mov
jp
scas
clc
adc
jno
and
fstp
pop
dec
xchg
xchg
pop
sub
std
cmp
ja
pop
dec
lds
fdivs
push
jb
cmc
adc
pop
scas
cmp
je
pop
push
adc
popl
inc
mov
testl
fistps
push
dec
insl
sbb
pop
or
shll
sbb
shrl
jle
jecxz
frstor
sbb
aas
adc
ficomps
cmp
jl
in
int
xchg
bound
sub
out
pop
xor
or
mov
cmc
pop
fdivrl
scas
add
test
fistl
inc
jle
pop
and
push
pop
push
jbe
sti
pusha
sub
lcall
test
mov
cli
adc
mov
or
cmp
and
xchg
pop
fs
insl
pop
push
icebp
lret
xchg
xlat
inc
xchg
adc
sbbb
lret
push
scas
mov
dec
sbb
sub
int3
pop
outsl
pop
in
mov
cmp
jno
dec
in
pop
test
xor
pop
push
stc
out
xchg
mov
ja
jb
add
in
lods
insl
dec
ljmp
xor
push
pop
pop
pop
xchg
movsl
xor
bound
mov
pop
xchg
stos
xorb
inc
cmpb
out
adc
fcompl
cmp
fadds
outsb
push
mov
dec
mov
pop
push
and
and
or
outsb
pop
lds
into
call
jge
or
push
cli
sub
push
fstl
inc
adc
mov
hlt
mov
gs
lret
push
aas
sub
jmp
std
cltd
pmuludq
mov
call
mov
mov
pop
fdivs
jle
pop
pop
xchg
insl
mov
adcl
pop
push
xchg
sub
cwtl
pop
mov
adc
pop
pop
pushf
data16
mov
nop
add
leave
mov
bound
scas
jle
inc
mov
xor
pop
cli
mov
add
lret
arpl
pop
outsb
push
pop
inc
pop
sti
aam
nop
sub
addl
adc
push
cltd
ficompl
test
push
cld
add
mov
pop
pop
pop
or
adc
pop
mov
int
pusha
xchg
pop
sub
mov
jg
pop
int
mov
xchg
lcall
or
inc
test
dec
data16
cmp
mov
sbb
add
scas
int3
sub
jle
pop
enter
mov
out
pop
dec
pop
or
push
pop
lods
fdivs
cltd
sub
rcll
mov
and
pop
aam
pop
xor
clc
mov
pop
mov
in
shrb
stos
jbe
mov
fdivrs
pop
into
icebp
sub
lahf
fld
int
xchg
orb
jno
fimull
cmp
xchg
pop
adc
loope
ds
add
jecxz
in
pop
sbb
mov
cmp
lret
cmp
mov
pop
pusha
pop
insb
xor
test
pop
imul
xor
and
pop
sbb
das
nop
add
cmp
pop
icebp
aaa
mov
stc
ss
testl
lret
inc
je
mov
mov
jb
push
mov
loope
mov
mov
into
dec
mov
adc
cltd
or
test
mov
xorb
mov
push
pop
pop
cwtl
mov
pop
jbe
jno
mov
jmp
nop
lret
xchg
mov
pop
or
cmp
out
jo
pop
inc
loopne
push
mov
jb
lahf
and
aas
pop
mov
stc
insl
rep
pop
arpl
mov
or
sbb
mov
adc
adc
pusha
pop
xor
loop
enter
inc
call
fisttpll
pop
fcompl
cmpsb
mov
fxch
adc
push
cs
dec
mov
jo
mov
test
into
scas
lahf
sbb
add
arpl
flds
pop
imul
pop
mov
mov
cmp
dec
xor
in
stos
clc
adc
mov
pop
jmp
enter
fidivrs
rorl
jl
and
jb
cmp
push
imul
cmp
push
jp
pop
orb
pop
pop
jnp
jo
movsl
scas
out
jb
cmp
popf
cwtl
dec
insl
pop
clc
sbb
or
and
mov
testl
sub
xchg
jno
popa
leave
add
mov
push
enter
inc
pushf
hlt
stos
dec
adc
fstl
jmp
arpl
fld
movsb
add
jo
sbb
or
pop
ljmp
mov
jne
mov
mov
inc
outsl
scas
jo
scas
add
mov
fs
js
push
inc
jp
pop
jmp
fsubl
jl
test
pop
andl
scas
pop
cli
or
xchg
mov
int
scas
das
lods
mov
push
pop
jno
dec
or
pop
jge
movsb
xchg
int
and
pop
push
sahf
and
pop
push
lock
or
mov
mov
push
push
pop
out
xchg
ret
or
xorl
mov
jg
inc
incl
sbb
push
outsb
insb
mov
pop
fmull
into
fdivr
lret
pop
test
ja
mov
push
inc
jno
stc
lahf
cmp
mov
or
pop
stos
cli
cmp
cmp
inc
lret
sahf
gs
and
and
pop
fidivrs
loope
es
or
movaps
dec
mov
jmp
out
adc
and
xlat
pusha
fildll
cmp
sahf
sbb
addr16
out
pop
dec
jl
test
pop
ret
xchg
sbb
mov
inc
lret
jo
push
pop
repz
aad
gs
xor
dec
ret
pop
sbbl
pushl
xorb
dec
int
mov
cltd
lahf
and
dec
sub
lea
jae
jp
fcmovbe
sbbb
test
aaa
cmp
mov
lcall
orl
pop
fs
cmp
ret
or
dec
adc
mov
int
inc
in
into
addr16
dec
pop
dec
and
push
add
lods
mov
xor
pop
in
sbb
imul
sub
hlt
fmuls
out
pop
jbe
xchg
dec
mov
bound
pop
pop
pop
push
int
and
mul
jp
or
lods
pop
and
pop
pop
xchg
push
imul
sbb
jb
jge
in
je
xor
sbb
popf
mov
jmp
mov
push
cltd
xchg
pop
psubsb
fsubrs
mov
dec
outsb
mov
sub
lret
inc
sub
inc
popf
enter
sbb
jb
jge
in
in
jo
sbb
sub
shrl
xchg
and
or
push
das
es
int3
js
pusha
icebp
pop
leave
xor
jbe
rorl
sbb
lret
sbb
add
movl
mov
push
fimull
add
pop
mov
xorl
ss
cli
dec
imul
int3
pop
push
push
int3
push
push
bound
int
jno
inc
pop
in
sbb
or
lret
mov
mov
dec
lds
hlt
cmp
jecxz
cmpsl
sub
ret
push
pop
or
shrb
mov
fnstcw
inc
push
pop
jmp
xor
pop
pop
cmp
sbb
mov
push
fnstsw
inc
pop
rolb
ds
pop
add
cmp
pop
jmp
cmp
outsl
pop
notl
jb
sarb
scas
xor
fadds
pop
rcr
pop
movsl
fstl
decl
sub
jmp
jo
pop
fcomip
test
jo
scas
sbb
mov
xchg
xor
mov
mov
fwait
jge
sbbl
clc
inc
or
inc
dec
xchg
clc
and
sub
int
aaa
and
sub
rcrl
leave
xor
movl
iret
mov
pop
mov
popf
rcll
sub
leave
pop
sub
cld
jo
pop
jmp
adc
pop
imul
adc
fadds
call
into
nop
jmp
sbb
mov
pop
clc
pop
xchg
add
sbb
jecxz
icebp
pusha
pop
mov
std
pop
mov
adc
pop
aaa
sahf
rcrl
ljmp
pop
push
dec
xlat
loopne
push
push
inc
pop
lahf
inc
iret
lret
sub
add
outsl
xchg
and
lret
pop
enter
sarl
adc
cmc
push
mov
orb
pop
jne
lret
or
and
out
jbe
jmp
mov
ret
push
pop
mov
mov
pop
fstl
xchg
cmp
fcmovbe
pop
xchg
scas
mov
faddl
pop
out
mov
arpl
pop
pop
ja
jecxz
or
inc
jno
daa
sti
dec
xchg
mov
loop
leave
inc
xor
sbb
int
ljmp
push
add
sbb
push
pop
icebp
jb
aad
push
inc
mov
fs
xor
testl
jle
sub
sbb
pop
mov
outsb
xor
jns
pop
sarb
nop
popa
in
aas
shll
movsl
jbe
xchg
mov
mov
sti
icebp
adc
pop
loop
jbe
movsb
data16
pop
inc
nop
lret
loope
cmc
mov
push
jp
cli
lock
dec
jns
dec
mov
faddl
mov
pop
pop
add
movsl
add
or
jns
pop
dec
mov
jecxz
repnz
pop
add
pop
iret
adc
fstpl
pop
std
lret
jmp
jb
or
repnz
push
aaa
mov
adc
pop
jle
mov
jmp
pop
cmp
cmp
pop
and
out
cmc
lods
mov
shll
cmpsb
pop
dec
jae
and
sti
fadds
andw
xchg
fildl
pushf
popa
test
jb
nop
fbld
pop
push
popf
push
daa
dec
and
jns
jbe
test
lahf
mov
imul
jge
aad
sub
bound
lret
pop
xor
pop
cmpsb
shll
jns
fstpl
jae
stc
cmc
pop
pop
lock
push
popa
inc
pop
pop
sbb
out
mov
pop
in
in
jmp
mov
jnp
daa
pop
stc
or
test
push
pop
add
int
dec
repz
dec
pop
ficoml
pop
xor
sbb
lret
pop
inc
add
imul
mov
out
pop
mov
lret
sub
jbe
jp,pn
mov
jmp
xor
inc
addps
push
xorb
adc
adc
adc
scas
mov
imul
and
mov
mov
popa
mov
pop
xorl
negb
arpl
iret
xchg
insl
std
pop
pop
andb
or
clc
daa
pop
imul
and
mov
sub
mov
xchg
mov
sbb
jbe
inc
jb
mov
push
std
pop
aaa
movsb
pop
int
cmp
cltd
daa
pop
dec
and
fnsave
mov
mov
lea
and
add
push
mov
stos
add
cmc
xchg
lcall
jnp
pop
inc
mov
sbb
mov
xchg
xor
sysret
pop
inc
mov
push
jle
pop
loop
jge
int
imul
xlat
dec
cmpsb
inc
mov
xor
rorl
imul
sub
ss
loopne
pop
je,pn
divb
lods
jmp
xor
int3
pop
jb
xchg
fwait
mov
hlt
in
jle
add
sbb
sbbb
scas
jg
or
add
or
ret
jne
out
test
aam
jl
cmp
lahf
jae
add
mov
cmp
push
mov
lds
mov
inc
dec
stos
jo
ljmp
xor
dec
movb
lahf
call
adc
fstpt
adc
call
addr16
lcall
faddl
fisttpll
pop
sti
pop
imul
test
ficomps
xor
test
mov
adc
decb
pop
pushl
xor
int
or
push
clc
int3
mov
mov
cltd
mov
fs
ret
push
fistpl
xor
ljmp
out
mov
sub
xchg
pop
scas
mov
lods
sbb
pop
push
out
dec
inc
sbb
xchg
pop
cmpsb
cmp
test
in
pop
pop
jns
aaa
fsubr
mov
sarl
mov
add
xchg
mov
psubusb
insl
xchg
pop
mov
xchg
pushf
mov
jge
pop
push
sub
das
rcrl
inc
add
imul
gs
push
mov
addl
push
xchg
pop
push
jae
sbb
dec
hlt
push
inc
pop
push
jb
outsb
adc
adc
sbb
pop
sub
iret
lea
punpcklbw
pop
push
push
mov
sbb
mov
and
sarb
out
inc
ss
mov
gs
pop
lds
xchg
ret
outsl
mov
inc
pushf
sub
push
outsb
mov
xor
loop
sbbb
mov
and
in
popa
stc
mov
pop
lahf
xchg
repnz
mov
jae
or
or
add
lahf
pop
push
mov
jecxz
das
xlat
mov
or
scas
add
mov
popa
rcrl
mov
test
lea
sti
pop
lcall
sub
add
pop
loop
sub
jecxz
jns
pop
sub
int3
shll
jl
mov
cmc
pop
ljmp
clc
sub
adc
sbb
aas
rcrb
repnz
lret
test
in
push
push
push
lret
pop
xor
sti
fs
aas
imul
xor
jns
cmpsl
mov
push
pop
loope
adc
or
and
pop
dec
jmp
repnz
cwtl
outsb
pop
jno
push
fwait
adc
sti
xor
jg
push
fisttps
nop
add
dec
sub
jl
jns
mov
movsb
aaa
cmp
iret
push
xor
push
pop
push
push
jecxz
inc
lcall
jae
in
push
pop
es
nop
mov
inc
rorb
in
and
fmul
pop
rcrb
cmp
mov
loop
pop
mov
and
push
pop
and
ljmp
inc
add
push
pop
aad
imul
scas
jns
pop
mov
xchg
dec
add
pop
xor
sub
pop
push
mov
jg
dec
dec
adc
cmp
fstl
pop
xor
pop
inc
lock
icebp
pop
sbb
push
or
fmuls
fdivs
movsb
repz
rcr
jo
mov
call
mov
scas
bound
test
mov
dec
lock
pop
test
clc
cmp
xlat
out
loope
mov
fcompl
cmp
out
aas
mov
inc
lods
push
dec
pop
sti
pop
dec
pop
call
sbb
fdiv
cmc
adc
pop
fstpt
outsl
and
xchg
lahf
incb
sbb
in
pop
out
pop
int
or
fnstcw
gs
xor
js
imul
mulb
cmp
xor
sub
mov
xchg
loopne
mov
repnz
sbb
push
imul
pushf
pop
das
data16
mov
fiaddl
jge
sub
pop
mov
testl
addl
push
pop
xor
pop
stos
bound
inc
arpl
pop
mov
mov
iret
xor
loopne
pusha
scas
jne
dec
adc
pop
dec
jo
and
jl
je
cmp
daa
jp
bound
pop
testb
jg
ficomps
pop
mov
pop
push
push
pop
jle
test
ds
in
and
sub
and
fidivs
sti
push
inc
sbb
pop
mov
cltd
mov
test
lret
pop
dec
loop
mov
cmpl
dec
jbe
dec
pop
dec
bound
test
je
mov
dec
std
push
dec
int
pop
push
mov
and
sahf
or
xor
pop
enter
lods
and
dec
pop
pop
ja
push
adc
sbb
add
out
sub
and
ret
pop
jb
test
out
xchg
sahf
xchg
pop
pop
shrl
and
mov
popf
mov
orps
pop
out
inc
call
jo
mov
insb
cli
loope
stc
xchg
pop
nop
mov
adc
jle
imul
enter
fucomp
cmp
icebp
cmp
pop
xchg
or
push
cmp
push
pop
cmp
add
lods
pusha
pop
mov
ror
ja
mov
dec
sbbl
aas
packssdw
pop
sub
push
mov
cmp
mov
inc
insl
lret
dec
inc
cmp
loope
pop
imul
test
or
lea
mov
mov
into
addr16
mov
sahf
jae
push
lods
xchg
pop
xor
pop
test
mov
sbb
sbb
cmp
jmp
pmulhw
movsl
lret
out
mov
add
bnd
fstpt
stos
cmc
sbb
std
pop
inc
push
add
xchg
inc
cmp
sbb
xor
leave
lock
cmp
jns
sub
dec
mov
and
dec
in
xlat
dec
or
pop
mov
jle
jns
or
mov
fstl
dec
push
pop
rol
ljmp
aam
jb
inc
mov
cmp
xchg
pop
pushf
sub
jle
out
inc
pop
or
mov
mov
pop
dec
andl
sub
insl
int
adc
mov
iret
fsubl
sub
clc
je
xor
or
leave
inc
pop
pusha
jo
adc
cmp
int
pop
clc
mov
jg
bnd
mov
xchg
push
dec
cld
adc
pop
adc
adc
jecxz
sbb
dec
sub
mov
int
cltd
xor
cmp
popf
imul
jbe
mov
pop
mov
mov
lods
scas
popf
ss
xor
cmp
cmp
int3
lock
js
pop
xchg
std
lahf
fmull
lret
fisubl
pop
inc
cmc
mov
push
pop
notw
ja
jp
mov
pop
clc
sbb
pop
fsubs
int
jae,pt
jne
push
stc
jp
xor
mov
cmp
mov
jbe
repnz
pop
mov
ret
mov
jmp
loopne
mov
stos
es
mov
pop
ss
stos
nop
pop
jmp
not
popf
pop
test
dec
fldl
out
xor
fimull
add
test
mov
lea
adc
push
push
pop
pop
push
cmp
cmpsl
sbb
and
sbb
mov
js
pop
xchg
enter
pop
lods
dec
inc
out
int
cmp
test
push
lea
xlat
out
sbb
pop
mov
repz
pop
pop
lret
divb
movsb
dec
pop
icebp
and
cmp
cmp
jae
dec
gs
add
xor
fwait
iret
popf
xchg
cmp
fbstp
cs
xchg
das
fs
fcmovnbe
rcll
lock
mov
add
add
sti
dec
jmp
lahf
mov
fimull
mov
cmp
ficomps
pop
addr16
pusha
xchg
je
ss
jb
jae
pop
xchg
jbe
pop
ret
add
mov
sub
sbb
xchg
jbe
pop
adc
jbe
call
inc
mov
mov
pop
adc
mov
mov
lea
pop
rol
sti
push
outsl
out
dec
pop
fadds
or
fsubrp
nop
inc
xchg
xchg
dec
and
push
jmp
int
mov
test
push
mov
pop
jg
xor
in
scas
and
sbb
mov
pop
mov
out
dec
jb
sub
faddl
mov
arpl
sti
lret
sub
mov
mov
repz
push
and
mov
aaa
mov
xor
fdivrs
inc
cltd
leave
or
xor
iret
fstpt
dec
mov
test
ds
or
cli
scas
int
test
ja
ss
pop
dec
icebp
dec
and
outsl
jb
scas
cmp
jne
mov
sbb
out
add
je
or
pop
cmp
fcompl
jge
pavgw
shl
pop
dec
xchg
cld
fisttpll
out
jecxz
scas
mov
mov
jge
xchg
mov
mov
arpl
pop
inc
cmp
test
test
je
lahf
xchg
adc
fucomi
mov
xchg
mov
or
xchg
sub
xchg
and
lret
pop
jecxz
into
mov
call
frstor
lret
adc
cmp
jbe
add
mov
movsl
cmp
movsb
lret
mov
xchg
testb
pop
sub
dec
push
int3
mov
cmpsb
inc
or
mov
lcall
dec
add
std
mov
call
add
mov
cmp
test
mov
jl
xor
xor
add
jecxz
inc
pop
cmpsb
xor
in
call
xor
bound
push
insb
sub
ljmp
inc
add
arpl
nop
add
adc
mov
sbbl
cli
jae
fcomps
flds
xor
aam
stos
rcrb
fisubs
pop
mov
orb
cmp
pop
push
add
and
sbb
outsb
cmpsl
inc
f2xm1
pushfw
js
push
pop
push
push
xchg
imul
mov
loope
rcr
inc
ss
cmpb
xchg
arpl
fwait
mov
and
pop
inc
pop
pusha
or
pop
ss
lods
sbb
pop
sbb
fmull
jnp
icebp
jbe
and
and
out
movsl
fwait
in
pop
int
pop
push
shlb
mov
lds
dec
dec
jo
pop
mov
dec
sub
mov
lods
scas
cmpsl
dec
iret
sub
jecxz
dec
push
jbe
pop
out
pop
mov
fnsave
int
jmp
movsb
add
sbb
ljmp
jle
loope
mov
std
andl
out
pop
xor
test
aad
jo
mov
leave
fld
jae
lret
int
xchg
sbb
dec
lret
pop
push
test
fsubr
mull
fisubrs
or
rcrb
sbb
sbb
xor
push
das
xor
insb
movsb
mov
cmp
je
test
mov
lods
sbb
out
leave
repz
jmp
and
xor
mov
popf
and
mov
hlt
mov
and
mov
pop
mov
mov
adc
jl
mov
sbb
loope
xor
pop
hlt
popa
lret
mov
decb
shlb
lods
or
es
lock
xor
mov
push
pop
lea
mov
jb
shll
inc
sbb
out
in
xchg
loopne
sub
cmp
fcompl
and
or
lcall
dec
sahf
inc
dec
or
test
stos
fs
ljmp
cmp
es
test
mov
iret
int
and
fsubrs
adc
sti
xchg
js
ret
jge
loope
cmpsb
cltd
lahf
bound
in
pop
inc
xchg
jnp
movsl
or
test
and
xor
dec
or
pop
cs
jb
inc
sahf
pop
mov
jnp
int
and
jns
jo
pop
push
divl
outsl
and
jb
lea
in
and
jns
or
mov
xor
pop
call
in
sub
pop
fs
add
pop
mov
jp
pop
mov
pop
inc
inc
jo
pop
aad
stc
mov
push
sbb
rcll
add
cmp
dec
mov
in
inc
fstl
sbb
dec
imul
rorb
ret
sub
ja
aam
xchg
std
fistps
arpl
jle
mov
mov
jp
inc
sbb
lods
mov
or
in
es
call
fnstcw
sub
mov
push
popa
sub
das
pop
ja
jb
or
jne
call
repz
xchg
data16
stc
fs
inc
movb
pop
dec
and
adc
ds
pop
negb
pop
lds
or
jns
add
sti
push
add
or
pop
in
or
int
fdiv
arpl
ret
int3
xchg
pop
cmp
inc
or
jmp
int3
mov
pop
and
shll
pop
push
imulb
pop
sti
adc
test
daa
lahf
mov
rcr
scas
add
sbb
pop
xchg
xchg
jo
jecxz
mov
pop
cmp
mov
cmp
xchg
call
mov
pop
std
mov
outsb
cs
and
jl
adc
adc
inc
movsl
jae
loopne
jbe
mov
fnstcw
xor
fdivrl
sar
cmp
adcb
jo
mov
sub
fiaddl
jb
pop
or
stos
jle
dec
movsb
stos
rorl
pop
dec
mov
popl
jae
mov
movhps
xchg
cltd
sti
jo
sub
add
fildl
jns
pop
repz
sbb
cmp
into
inc
pop
or
filds
sahf
scas
in
pop
dec
inc
mov
mov
outsl
sub
sub
clc
push
jbe
sahf
xchg
xor
in
pushf
mov
outsl
jns
add
mov
dec
push
adc
lret
xchg
ja
and
jmp
dec
fistps
sub
imul
negb
and
inc
scas
inc
pop
inc
int
cmp
cmp
mov
les
sbb
jp
es
mov
cmp
icebp
fdivrp
ficompl
loopne
mov
jo
pop
lods
xor
pop
pop
inc
ja
repz
sarb
fldenv
pop
shrb
imul
in
aaa
pop
int
popf
dec
mov
inc
and
icebp
xor
outsb
out
packuswb
fisubrl
or
sub
imul
lea
pop
inc
jb
in
sub
filds
orb
int
pop
push
cld
jae
fs
cmpsl
sbb
pushf
ja
mov
ss
cmp
jb
pop
adc
fs
pop
push
sub
int
xor
stc
jno
mov
imul
push
scas
mov
sbb
pop
int
mov
mov
or
pcmpgtw
sbb
enter
xor
ss
movsl
sub
insl
aad
imul
jns
cmp
sub
push
shlb
inc
pop
mov
mov
pop
fisubrs
leave
mov
das
pop
ret
nop
push
enter
lahf
iret
pop
pop
sub
xor
mov
movsl
in
clc
arpl
sbb
push
push
xor
cltd
pop
scas
iret
ret
mov
mov
cld
sbbw
pop
and
pop
fdivr
lds
cmp
aam
pop
jbe
jmp
and
lahf
stos
cmp
sbbl
aam
dec
xchg
mov
dec
lods
dec
ret
pop
cld
pusha
jo
fnsave
lahf
push
sarl
pop
pop
lods
aad
add
dec
pop
adc
sbb
pop
add
pop
pop
insl
or
pop
inc
and
pushl
add
mov
lahf
mov
neg
mov
mov
xchg
pop
xlat
lea
push
xor
or
insb
pop
or
jnp
dec
popf
rorb
jne
pop
mov
inc
sbb
add
jbe
mov
rolb
mov
xor
imul
push
pushw
in
xchg
xlat
std
pop
add
int
xor
sbbl
xor
divl
mov
ffree
cmpsb
dec
int
fs
mov
jae
pop
notl
pop
idiv
dec
jl
pop
mov
dec
mov
outsl
lods
cli
filds
dec
mov
mov
sbb
add
xlat
loopne
push
mov
lcall
adc
xchg
movsb
sbb
pop
push
or
mov
cltd
mull
cltd
daa
fstpl
out
and
xor
mov
xor
inc
lahf
lds
jns
adc
mov
lods
or
ret
inc
pop
mov
pop
push
mov
test
and
jb
jns
pop
xor
inc
cld
hlt
int
dec
pop
in
jl
arpl
push
pop
stc
fadds
jg
push
and
int
pop
cmp
testl
sub
mov
pop
cs
mov
sub
into
xor
out
sub
bswap
mov
pop
adc
push
or
lret
in
in
pop
push
int
mov
popf
sbb
lcall
jnp
clc
add
movsl
jno
mov
xor
or
cmp
popa
imul
pop
frstor
fisttps
cmp
int
pop
es
mov
jl
cli
push
mov
ds
jo
pop
insb
xchg
pop
add
fistps
and
fisttpll
jne
push
idiv
cmp
mov
lea
cmp
pushf
insl
in
lahf
dec
mov
push
pop
mov
fstpl
jbe
push
test
nop
das
mov
jns
xor
repnz
ret
es
dec
pop
scas
sarb
stc
add
adc
lret
and
std
sbb
aaa
jae
stos
rcrb
enter
mov
test
pop
cmp
xor
pop
rol
inc
pop
sbb
mov
lods
outsl
inc
mov
jmp
pushfw
dec
fldcw
fwait
xchg
pop
shr
mov
int
jae
xchg
adc
mov
pop
data16
movsb
pop
fwait
lods
in
testb
jl
jb
into
or
push
xchg
enter
dec
push
cmp
shlb
aad
loopne
sbb
mov
lock
popa
xor
fs
pop
sub
mov
add
ljmp
pop
fnstcw
movsl
dec
mov
idiv
int
outsl
push
pop
gs
pop
jno
jle
pop
dec
shr
ret
pop
or
cli
mov
mov
push
pusha
faddp
mov
and
adc
add
int
imulb
outsb
loopne
pop
mov
add
scas
dec
jno
jl
mov
sbb
mov
lret
pop
cmpl
icebp
pop
iret
lret
cmp
adc
or
stos
scas
insb
pop
dec
test
add
subl
mov
leave
xchg
imul
sub
xor
jg
fiadds
ret
pop
adcl
jmp
jmp
add
pop
add
sbb
outsl
cmp
inc
dec
loop
pop
dec
pop
dec
push
sti
jns
inc
in
fdivl
ljmp
scas
ret
cmpsl
mov
scas
dec
jmp
dec
cmp
cli
adc
subb
jns
mov
xchg
jle
call
mov
gs
sbb
pop
sbb
rcrb
mov
not
adc
pop
cmpl
js
ds
pop
cli
xchg
lcall
daa
int
mov
mov
jp
push
sub
sbb
cmc
adc
addps
movsl
xlat
mov
rol
pop
or
int
mov
pop
aad
enter
inc
mov
rorb
adc
aam
adc
sbbb
inc
stos
ja
mov
push
sub
jb
xchg
mov
mov
ficompl
xchg
lahf
shrb
stc
pop
mov
cmpb
int
push
mov
mov
leave
cmp
mov
fsubrs
dec
pop
call
lret
xchg
add
cmp
mov
xor
pop
test
pop
int
outsl
pop
loope
cltd
or
jmp
cmp
rclb
scas
jecxz
lcall
pushf
aad
lods
shrb
mov
ss
cmpb
pop
mov
in
pop
push
loop
int3
mov
adc
pop
dec
repz
cli
into
dec
fldl
sub
mov
jecxz
mov
dec
fisubl
pop
popf
pop
jb
ljmp
mov
adc
das
pop
ret
test
int
movsb
mov
stc
sub
jbe
mov
out
scas
mov
xor
adc
mov
dec
push
pop
jg
sbb
jne
loope
sti
icebp
in
pop
adc
jmp
fdivs
jns
sub
mov
das
pushf
loopne
repz
sahf
int
and
cmp
mov
sub
stc
addps
jb
imul
hlt
push
test
aad
pop
mov
add
movsl
xchg
push
or
sbb
pop
xchg
loope
repz
mov
jl
sub
jne
jl
jbe
out
pop
out
push
aam
sub
xorl
sub
jnp
mov
push
rcr
lock
jmp
jbe
jle
insb
ds
ljmp
cmpsl
and
mov
pop
mov
movsl
push
jle
in
or
addr16
push
icebp
test
push
mov
mov
jo
pop
or
es
arpl
lods
and
mov
pop
scas
test
clc
mov
pop
pop
cmpl
mov
push
adc
inc
ljmp
jb
sbb
jns
mov
push
aad
fsubr
popa
div
pop
clc
jo
mov
dec
test
push
int3
sub
pop
xor
jg
xchg
pop
arpl
mov
pop
movsl
push
fsubs
jo
int3
pop
rclb
sti
data16
mov
aas
push
xchg
scas
cmp
pop
sbb
mov
xchg
ffreep
scas
test
pop
adc
sub
mov
pop
popa
ss
rolb
pop
and
push
mov
sbb
xchg
and
jbe
mov
push
stos
pop
test
jg
pop
data16
inc
int3
jmp
stc
enter
or
and
lahf
scas
pop
jge
loopne
pop
mov
ss
rorl
pop
sub
iret
fists
inc
pop
jge
sub
je
sbb
in
jbe
cld
xchg
lahf
int
or
stos
add
inc
lods
pop
mov
dec
pop
jo
pushf
sarb
imul
push
shr
fmuls
cmp
cmp
icebp
loope
lret
ja
out
rorb
or
mov
push
jb
jmp
push
pop
mov
and
or
pop
adc
rcrb
popa
fxch
xor
jb
dec
into
mov
pop
jns
stc
insb
int
xlat
scas
xor
cmp
sub
hlt
or
mov
fstpl
jno
pop
sbb
pushf
xchg
mov
pop
push
push
mov
popf
or
push
test
pop
std
pop
dec
pop
in
sbb
pop
data16
movl
ljmp
inc
add
pop
add
fcoms
jle
mov
jbe
rep
fildll
fninit
nop
pop
cs
jne
xchg
sbb
dec
ficompl
ret
mov
out
pop
mov
or
jg
mov
imul
push
or
add
aam
sti
cmpsb
cwtl
cmp
mov
cmp
xchg
pop
pop
shlb
and
loop
mov
pop
aaa
inc
mov
pop
addb
test
jecxz
xor
andl
pop
adc
mov
iret
dec
pop
inc
jp
and
jns
jno
and
int3
dec
or
mov
int
jne
xchg
mov
cmpsl
or
jno
cmc
jbe
adc
pop
jecxz
test
mov
lahf
and
mov
sbb
push
inc
cltd
jp
aaa
rcrb
pop
push
pop
lods
sub
js
int
xchg
pop
adcl
je
xchg
xchg
movsb
call
mov
roll
pop
sbb
adc
pushf
inc
mov
mov
repnz
sub
int
popa
dec
fiaddl
pop
sbb
lahf
in
fcomps
sub
js
and
dec
mov
aad
or
mov
fbstp
inc
mov
mov
xlat
dec
pop
call
lahf
jnp
add
fucompp
dec
mov
mov
pop
push
mov
enter
pop
sbb
lods
jl
pop
xchg
out
lcall
or
int
lds
mov
or
push
sti
inc
mov
jae
sub
jne
dec
jecxz
outsb
push
pop
adc
test
mov
pop
mov
lret
pop
sbb
call
push
pop
leave
sub
add
fcoml
stos
fstpl
cmc
mov
mov
sbb
pop
jbe
pushf
into
popa
jl
cltd
inc
pop
les
adc
xchg
xor
sbb
daa
push
xchg
fisttpll
pop
push
or
xor
mov
lretw
ficoml
dec
ret
push
movsb
cmp
sub
push
pop
imul
scas
jmp
xchg
jo
dec
ds
sbb
jmp
test
lds
test
dec
mov
in
and
pop
pop
sarb
xchg
push
jno
sbbl
loope
push
pop
sub
or
jo
pop
pop
inc
mov
pop
mov
fadds
add
jp
pop
leave
jle
push
jb
insl
movsb
mov
and
push
sahf
stos
pop
cmp
add
int
inc
mov
pop
mov
dec
xchg
pop
int3
jo
jns
ret
xchg
xchg
pop
in
sbb
lret
repz
repz
xor
sbb
adc
mov
pop
test
gs
rcrb
lods
lea
pushf
pop
hlt
dec
mov
push
pop
mov
and
pop
sti
int3
mov
pop
pop
mov
or
add
sub
adc
push
cltd
iret
xorb
je
dec
pop
lods
icebp
sbbb
in
jg
shl
or
add
pop
add
pop
mov
dec
mov
ds
jns
sub
xchg
outsb
aad
ja
adc
adc
pop
loop
mov
insl
cli
std
pop
in
mov
lds
pusha
xchg
addr16
lahf
pop
fs
pop
cmp
adc
pushf
pop
pop
leave
jae
sub
push
jle
jge
cmp
ret
pop
lods
mov
cs
mov
ja
mov
mov
js
outsb
rcrl
sub
lret
out
stos
adc
fistl
push
es
mov
fcomps
lcall
push
out
out
cmp
add
xchg
sub
cmp
jne,pt
mov
mov
je
andb
xchg
lret
jbe
pop
mov
push
or
add
gs
mov
mov
or
les
cld
or
loope
ds
dec
mov
add
lretw
fidivl
outsb
sub
movsl
jbe
pop
push
sar
scas
adc
lcall
xlat
sbb
cmp
pop
sbb
inc
daa
mov
jne
in
mov
pop
pop
lock
inc
jbe
and
ss
adc
cmp
xchg
sti
or
jo
nop
sub
pop
int3
cmc
pusha
dec
ret
ja
push
subb
cmp
test
aam
into
sub
jle
push
or
push
data16
cmc
gs
cltd
cmp
lds
loopne
lret
sti
mov
inc
cltd
loope
fwait
in
pop
call
out
xchg
or
mov
mov
add
sahf
mov
inc
adc
sbbb
dec
mov
xchg
adc
lahf
pop
sbb
xor
mov
adc
bound
dec
out
sub
pop
sub
or
ret
adc
jnp
dec
pop
sub
jmp
jmp
pop
fdivl
cmp
aam
mov
fninit
rcll
pop
sti
inc
outsl
jb
fiaddl
mov
std
xchg
inc
mov
push
mov
rcrb
insb
insl
pop
dec
sub
pop
add
add
pop
xchg
pop
stos
int3
ret
mov
cmp
cmpsl
and
xchg
std
cli
sbb
pop
pop
shll
lret
pop
leave
push
mov
pop
pop
cmpsb
sbb
mov
test
js
stos
inc
jle
aam
pop
cmp
add
pop
out
pop
push
cmp
pop
test
push
scas
std
dec
jl
and
outsb
repnz
xchg
idivl
fsubl
jae
xchg
pop
mov
fidivs
jns
pop
fsts
add
add
mov
xor
jns
test
dec
cli
fstpl
ljmp
jne
lock
out
pop
test
pop
aad
pop
pushf
jle
sbb
mov
inc
inc
ss
mov
sbb
or
hlt
jge
pop
into
outsl
xchg
pop
dec
lock
aaa
xchg
insb
hlt
add
nop
pop
cmp
xor
andl
out
mov
int
jno
pop
or
xor
push
in
mov
ret
into
sub
and
lcall
sbb
iret
inc
xchg
push
dec
dec
call
repz
adc
xor
jbe
adc
cmpsl
cmp
dec
in
pop
aam
or
jp
push
pop
loop
fs
sti
push
dec
pop
mov
dec
push
ss
cmc
aaa
pop
int
addr16
lcall
in
iret
adc
rcrb
push
inc
xchg
dec
mov
aaa
mov
jne
lret
pop
push
jo
pop
test
xor
xor
and
mov
adc
pop
movsl
xchg
sub
scas
or
sbb
and
mov
ficompl
xchg
pop
je
sub
ds
xchg
insl
loopne
js
test
cmp
push
pop
fwait
pop
lea
xchg
test
xchg
pop
cmp
out
jo
xchg
xor
ret
aaa
mov
pop
inc
int
xchg
push
shrl
lahf
dec
inc
aad
fcmove
mov
adc
ja
cmpb
mov
pop
mov
mov
decl
fcoms
pop
add
pop
sbb
pop
stos
sbb
xchg
inc
divl
mov
mov
lods
add
popa
pushf
pop
sub
dec
xchg
stc
jle
push
mov
popf
mov
inc
sub
cltd
sbb
push
or
pop
mov
ss
pop
mov
jl
mov
add
inc
cli
dec
or
fwait
lds
movsb
mov
mov
pushw
pop
lock
call
sbb
mov
pop
aam
and
gs
pop
sbb
or
xor
lahf
push
xor
pop
and
leave
jbe
popa
sarl
xchg
dec
adc
xlat
push
sub
jno
cmp
pop
lret
and
mov
sahf
lret
dec
test
loopne
int
push
insb
mov
ret
cltd
cmp
mov
lahf
call
dec
push
fisubrs
mov
sbb
sahf
add
mov
push
mov
and
xchg
pop
mov
inc
scas
inc
push
mov
dec
repz
mov
mov
xchg
repnz
mov
and
cs
cmpsb
negl
roll
data16
pop
sub
inc
adc
fwait
jne
jp
pop
cmc
sbb
rorl
loop
adc
pop
mov
call
int
jl
pop
sub
pop
add
adc
popf
jns
pop
pop
cld
popa
in
xorb
dec
loopne
inc
mov
mov
push
cmp
sbb
sbb
neg
cmc
dec
lret
pop
cwtl
int
mov
inc
lret
shlb
and
xor
xchg
int3
mov
push
push
fsub
jl
pop
lcall
das
mov
fcmovnbe
hlt
dec
js
pop
insb
sbb
aam
into
test
mov
pop
pop
rorb
int3
sub
decl
or
push
jecxz
ja
pop
mov
icebp
cltd
in
dec
mov
push
pop
adc
add
cld
fsubrl
cmp
pop
jno
clc
mov
test
cltd
stos
pop
lods
andb
pop
jbe
fwait
enter
insb
pop
aad
jl
jmp
push
push
stc
dec
pop
outsb
mov
sbb
repz
pop
push
sub
push
imul
cmp
push
stc
xchg
imul
jbe
out
mov
cmp
sti
mov
int3
xor
jb
jge
cmp
test
xchg
dec
xchg
stos
icebp
sbb
pop
mov
pop
clc
add
scas
push
imul
movl
cmp
neg
sub
jp
mov
scas
xor
hlt
lea
jb
outsb
lds
addr16
aas
push
enter
aad
pop
mov
pop
out
pop
mov
adc
loopne
outsb
in
les
pop
out
ja
cmp
fnstsw
push
cli
or
nop
mov
mov
int
sahf
adc
addr16
out
xor
mov
or
add
fldl
pop
lock
sub
mov
mov
cmpsb
ljmp
lret
loop
cltd
enter
xchg
outsb
loope
fcompl
adc
cmp
adc
inc
mov
sub
dec
push
out
jnp
pop
repz
xor
pop
add
sbb
push
lea
pop
out
mov
sub
out
pop
or
jge
xchg
cmc
push
stos
cli
pop
mov
push
adc
mov
jo
mov
sbb
fildl
ja
xchg
jne
pop
xlat
mov
ret
pop
cltd
aaa
dec
sub
pop
vorpd
dec
ss
add
aad
push
cmp
jbe
stc
sti
fsubs
addb
out
scas
or
push
xor
test
or
pop
cmc
enter
jb
pop
jl
imul
rcrb
mov
pop
mov
arpl
clc
loopne
inc
icebp
pop
jb
jmp
push
es
jns
pop
shll
sahf
jns
mov
enter
jl
cmp
mov
mov
xor
push
incb
pop
ss
loope
mov
pop
push
and
inc
movsb
dec
mov
inc
pop
fcoml
pop
cmp
fucomip
jb
cltd
pop
jmp
push
popf
pop
or
repz
and
iret
dec
popl
pop
cld
lret
fs
inc
int3
pop
aam
sub
test
or
pop
jg
pop
mov
mov
sbb
outsb
dec
xchg
inc
fstps
loop
sub
pop
jecxz
repz
mov
scas
add
xchg
dec
dec
jo
mov
xor
imul
xchg
movb
mov
int3
cmpsl
imul
loop
xor
add
xor
cmp
pop
sarb
outsl
sub
lods
mov
jo
xchg
cld
ficomps
clc
stos
scas
jp
cmp
arpl
pop
push
loop
cltd
cli
addr16
fistps
jle
stos
hlt
fistpl
sub
js
cmpsw
pop
mov
mov
sbb
mov
stos
imul
jb
add
cmp
or
xlat
das
bound
js
push
jns
pop
and
jl
add
pop
scas
or
or
cmpsb
sbb
mov
into
and
pop
or
addr16
push
or
cmp
sbb
or
pop
push
pop
dec
lret
loop
mov
mov
pop
mov
jg
mov
sti
mov
mov
lods
inc
in
add
mov
and
push
mov
scas
pop
mov
sarb
pop
jo
pop
cltd
std
lret
aas
jbe
pop
out
int
xor
stos
xchg
jb
mov
xchg
pop
mov
push
lds
mov
daa
and
jecxz
ret
pop
dec
nop
in
aad
sahf
push
xchg
jo
mov
dec
mov
mov
sub
push
pop
dec
mov
into
cmp
dec
dec
int3
fsubr
xor
dec
pop
jbe
in
xchg
popf
out
mov
dec
inc
insl
int
ss
inc
jp
dec
pop
pop
inc
aas
jge
sahf
repz
imul
mov
mov
cmp
add
in
jo
notl
scas
push
mov
sahf
cmp
pop
inc
nop
cwtl
xchg
jo
pop
pop
orl
int
hlt
pop
push
lahf
sahf
jmp
push
fistl
mov
and
xor
ja
cltd
jns
mov
test
mov
sbb
in
pop
test
jp
sbb
xor
sahf
pop
insl
ret
pop
dec
add
pop
fsubrp
fldenv
mov
loop
daa
jmp
mov
fcompl
addr16
pop
test
cwtl
nop
xchg
pop
bound
int3
lcall
cmp
cltd
adc
pop
mov
dec
es
pop
adc
subb
sti
mov
pop
aam
ret
call
lret
pop
xor
cmpsl
addr16
mov
xchg
and
cltd
add
es
cmp
fwait
push
into
pop
sbb
dec
pop
inc
loope
inc
pop
data16
testl
jmp
push
imulb
pop
test
out
jbe
fnstsw
sub
sbb
sbb
jge
addb
pop
mov
push
or
pop
loop
sarb
into
ss
test
sub
pop
push
push
out
stc
mov
fisubs
mov
sbb
mov
out
in
dec
push
daa
rcr
jecxz
cmc
push
pop
loope
push
lcall
jb
adc
repz
sar
sub
add
mov
jnp
lret
sarl
mov
mov
pop
imul
mov
cmp
sbb
push
or
ret
rorb
pop
int
xchg
jmp
mov
pop
pop
push
jb
mov
pushf
xchg
arpl
clc
ss
mov
pop
cmp
mov
out
lock
mov
sahf
xlat
popa
mov
adc
mov
cmp
cmc
mov
out
dec
in
push
mov
ret
lea
xchg
loope
dec
xchg
xor
adc
lcall
ja
sbb
adc
fldcw
push
shll
or
out
adcb
aam
fcoms
cmp
pop
pop
adc
data16
rcrl
ret
lods
int
xchg
sti
xchg
out
jo
repz
inc
les
cwtl
jg
add
pusha
mov
pop
jno
mov
sti
pop
mov
sub
xor
push
popf
pop
iret
aad
mov
subb
mov
pop
cmpsl
xchg
sbb
shrb
js
xor
dec
pop
jbe
es
pop
loope
and
dec
fdivrl
adc
mov
push
scas
mov
dec
ror
gs
pop
mov
dec
mov
fildl
pop
inc
mov
jl
lock
cs
movsl
xor
fiaddl
mov
pop
in
add
repz
test
lcall
mulb
add
mov
lret
mov
lods
pop
jns
mov
sbb
pop
pop
cwtl
push
lods
aaa
or
pop
int
sbb
leave
jne
and
pop
pop
jae
inc
jg
mov
gs
pop
xchg
jp
pop
jecxz
mov
movsb
imul
lds
mov
insl
cltd
xchg
lods
rcrl
mov
fxch
pop
dec
sbb
and
int
inc
test
sbbb
mov
sahf
or
inc
dec
cmp
int
xchg
mov
outsl
out
inc
push
aaa
popa
xchg
iret
lock
inc
lea
and
outsb
int
xor
xchg
insl
pop
lcall
jl
jge
sub
lret
pop
push
repnz
xor
imul
xor
lods
dec
scas
pop
mov
stos
pop
jbe
into
imul
pop
pop
jge
and
arpl
js
push
mov
push
cltd
add
in
pop
clc
push
or
sbb
cwtl
insb
push
repnz
fldl
push
dec
cmp
cld
in
int
mov
idivl
inc
out
and
add
sahf
mov
fnstenv
out
mov
lods
pop
pop
loopne
jb
in
push
pop
repz
imul
sahf
jae
int
push
cwtl
in
cmp
mov
add
pop
outsb
lea
lds
ljmp
pop
xlat
lahf
inc
push
stos
mov
movsl
fisttpll
and
pop
jne
outsl
call
sahf
data16
jo
xor
fmul
jno
test
lock
jmp
push
call
mov
push
lret
jo
push
aas
int
into
jg
fists
pop
rcrb
loopne
aad
ficomps
jmp
xchg
adc
pop
xor
rol
leave
fidivrl
fisttpl
jnp
sbb
cmp
or
pop
movl
push
and
fstl
add
mov
pop
sti
mov
pusha
loopne
xchg
imul
fcmove
jl
push
adc
scas
cmpl
cltd
inc
cltd
faddl
xchg
adc
insl
ljmp
pop
lods
and
lahf
scas
or
pop
or
pop
pushf
jbe
dec
mov
test
int
dec
jg
xchg
int3
aam
sti
mov
dec
adcl
rorb
push
sti
sbb
sub
fwait
mov
ja
pop
jl
adcb
or
rclb
in
jbe
pop
ss
popf
mov
stos
xchg
scas
insb
pop
pop
xchg
sub
add
lret
mov
pop
imul
pop
mov
jbe
inc
pop
inc
mov
aaa
add
fcoms
xor
mov
sbbl
std
and
insb
dec
sbb
adc
or
mov
or
sbb
and
cmp
push
mov
daa
imul
int3
inc
push
pop
add
jmp
jae
enter
lds
rcrb
mov
pop
push
jo
pop
pop
idivb
mov
pop
imul
fdiv
dec
std
les
lods
add
push
int
inc
fldl
adc
lret
pop
mov
imul
pop
jle
mov
sbb
dec
sbb
test
push
xchg
mov
les
stos
es
imul
pop
fists
inc
sub
mov
inc
clc
pop
adc
std
mov
je
xchg
es
iret
negl
mov
push
push
push
jnp
push
fistpll
inc
push
adc
negl
or
add
xchg
out
xchg
aas
xlat
mov
scas
cmp
pop
and
xor
int
xor
xchg
movsb
mov
sub
das
cmp
or
xchg
push
jecxz
jo
pop
dec
push
adc
cld
loope
std
pop
mov
mov
adc
in
out
jbe
push
lret
pop
int
mov
leave
mov
jp
pop
cltd
mov
push
jns
stos
xor
pop
lcall
fiaddl
sarb
add
lret
popf
out
mov
pop
in
imul
mov
inc
push
sub
mov
aam
add
xor
icebp
jbe
ja
cld
in
mov
movsl
or
arpl
jo
popf
push
push
setns
gs
imul
mov
lods
xchg
inc
fadds
iret
adc
stos
cmpsb
push
addr16
add
adc
xchg
mulb
pop
fimuls
addr16
arpl
loop
sbb
adc
out
shll
daa
fimull
jmp
lcall
mov
rcrl
aam
pop
popl
sbb
or
stos
push
cld
mulb
pop
jo
mov
inc
insl
xor
test
out
xchg
pop
xor
mov
popf
enterw
mov
lret
test
sub
pop
xchg
repz
push
jge
xchg
add
ja
mov
aas
pushl
movsl
push
mov
gs
jno
je
imul
in
iret
pop
stos
mov
mov
test
in
sbb
sub
cmp
pop
fnstcw
shlb
xor
pop
neg
mov
pop
jb
add
xor
std
pop
sub
push
mov
daa
rcrl
int3
out
repz
sub
ret
push
mov
dec
popf
rcrb
inc
push
cltd
fwait
adc
pop
fstpl
cmpsl
movsl
inc
icebp
int3
scas
pop
add
repz
push
mov
xor
data16
mov
lods
sbbb
cmpsb
jmp
xor
in
cmc
icebp
pop
push
int3
mov
mov
insl
test
int
dec
mov
pop
jno
adc
pop
mov
scas
orb
pop
mov
adc
pop
sbb
ja
mov
lods
imul
fimuls
inc
sbb
out
roll
mov
sbb
lods
out
test
mov
xchg
aad
pop
and
sti
sbb
pop
add
pop
int
scas
inc
cwtl
mov
pop
adc
aam
or
shlb
jno
insl
int
scas
icebp
xchg
enter
pop
into
push
rorl
js
leave
dec
fnstcw
outsb
pop
jne
add
pop
call
cmp
leavew
pop
out
mov
pop
jecxz
mov
in
std
into
pop
repz
cmp
cli
pop
mov
jne
sbb
stc
mov
add
gs
mov
cmp
insb
pop
cmp
pop
add
sbb
lcall
mov
push
mov
into
gs
and
pop
xor
lret
ja
jbe
lcall
xchg
cwtl
scas
ss
call
jnp
not
fwait
mov
dec
inc
xor
scas
mov
jp
fisttpl
stos
jb
outsl
adc
ficomps
mov
ret
je
lods
dec
jecxz
or
outsb
mov
dec
pop
lds
sbb
jno
pop
in
sbb
in
icebp
lods
mov
ljmp
jmp
scas
mov
cmc
jbe
mov
lret
sub
jl
stos
push
xchg
stos
pushf
mov
je
jno
xchg
jns
jmp
inc
cmp
jecxz,pt
pop
popl
sub
fldl
pop
xchg
lahf
dec
cli
cltd
ficompl
mov
push
outsb
mov
add
lods
shlb
out
mov
adc
adc
out
cs
xchg
pop
dec
pop
push
jns
aaa
pop
pop
js
xor
mov
aad
lea
bound
dec
cltd
pop
jae
sub
jb
pop
cmp
mov
pop
fwait
push
adc
repnz
pushf
mov
out
add
fsub
outsb
pop
dec
lret
xchg
lods
lock
cmp
cld
stos
out
mov
shll
addr16
dec
sub
xor
jb
lcall
push
and
mov
int
cmpsl
add
mov
pushf
jle
sbb
mov
push
or
mov
cld
sub
jecxz
leave
lea
pop
pop
stc
into
cmp
in
arpl
or
xchg
mov
mov
pop
add
jecxz
lret
rclb
loop
bound
into
pop
test
pop
fmull
cmp
jge
or
dec
lret
test
sahf
scas
clc
cmpsl
mov
cli
dec
clc
adc
mov
cwtl
fmull
pop
dec
jp
jae
test
adc
pop
int
mov
ret
shr
aam
mov
fucomp
dec
jno
into
xor
add
je
movsb
sbb
mov
and
jbe
movsl
cli
push
xor
jns
in
lea
faddp
pop
loop
mov
jbe
jle
cmp
and
sbb
cmpsl
xor
and
add
lods
cmp
scas
or
imulb
sbb
int3
jbe
push
push
cmp
pop
neg
push
lock
or
ss
call
pop
dec
popa
imul
fdivrl
rorb
pop
popf
dec
mov
sahf
ds
mov
pop
xchg
or
clc
dec
mov
jb
jg
or
call
lret
fwait
jns
pop
test
sbb
xchg
xor
test
dec
lock
jne
lret
lods
ds
stc
shll
jl
outsb
cwtl
jmp
pop
xchg
mov
clc
and
mov
fsubrs
add
insb
mov
pop
push
int
jo
mov
xor
pop
enter
xor
mov
pushf
mov
push
push
fcom
mov
dec
iret
pop
jb
pop
and
shrb
pusha
sbb
push
pop
add
or
mov
xchg
scas
mov
sbb
loope
xor
pop
lahf
arpl
mov
cwtl
lock
pop
lcall
stc
pop
inc
aad
aaa
sbb
mov
jne
push
cmp
cmp
jo
fldcw
cmp
lahf
pop
push
popa
dec
adc
push
stos
or
fimull
cmp
pop
pop
scas
xchg
dec
negb
push
sbb
inc
xchg
push
mov
xor
pop
pop
push
stos
stos
cltd
ljmp
inc
cltd
add
iret
lret
jae
hlt
aad
pop
mov
xlat
sub
lcall
movsb
nop
shll
and
pop
sarl
pop
or
dec
pop
jne
sbb
adc
negl
dec
flds
shlb
xchg
mov
and
mov
insb
pop
dec
jne
mov
aad
insl
add
dec
std
xor
and
scas
cmpsb
int3
sbb
sbb
fsubrs
dec
pop
inc
lcall
scas
in
pushf
push
nopl
xor
pop
addr16
mov
jbe
arpl
sub
jge
pop
stos
cs
lock
inc
loope
pusha
outsl
cmp
out
pop
xor
inc
xchg
sar
xor
lds
in
mov
pop
push
add
jp
jae
inc
scas
and
jge
dec
pop
add
pop
dec
ja
ss
push
xchg
arpl
jge
cmp
cmp
jb
add
in
cmc
pop
std
add
mov
pop
xor
sbb
pop
adc
push
icebp
mov
dec
sub
scas
and
push
jno
inc
mov
lock
cmp
sbbl
fcompl
mov
push
jo
push
xchg
test
pop
mov
hlt
and
push
add
popf
lret
fidivl
sbb
ja
adc
pop
xchg
sahf
int3
lret
and
adc
inc
mov
adc
sub
fstpl
pop
pop
sbb
cmp
mov
ds
jo
mov
pop
cmp
ja
jl
or
fisttpll
leave
arpl
push
incl
mov
fs
test
repnz
push
sbb
sbb
lds
mov
inc
pop
cs
cmp
stos
les
inc
dec
jae
pop
dec
inc
adc
pop
push
fcoml
lods
lahf
xor
mov
std
pop
mov
shrb
ret
fldt
dec
pop
xchg
les
pop
pop
adc
add
pop
lcall
divl
pop
or
pop
outsl
jno
lret
pop
int3
mov
xlat
addr16
mov
add
xor
xchg
pop
in
jbe
fcoml
aad
jge
out
xor
and
or
or
es
and
cmp
sub
sbb
jl
xchg
test
push
dec
add
cmp
insb
mov
and
cmp
ss
jbe
fsubl
mov
test
pop
adc
lds
out
mov
xchg
jo
adc
jecxz
cltd
pop
dec
mov
xchg
jae
pushl
insl
sub
shlb
sbb
jns
int3
dec
sub
test
movsl
lods
pop
pop
fadds
loop
or
jg
adc
xor
mov
and
pop
xor
pop
sbb
lods
jge
int
xor
jne
pop
pop
out
mov
roll
out
fisubl
leave
pop
addr16
xor
push
pop
mov
lahf
aam
jo
fldt
dec
sahf
cli
adc
jb
mov
negl
push
sbb
loopne
push
mov
and
pop
push
jecxz
fildl
jbe
mov
daa
stos
jmp
pop
pushf
lods
cmp
ja
mov
pop
notb
iret
mov
int
movsl
xchg
clc
pop
insl
es
aad
push
pop
hlt
adc
rorb
sahf
dec
nop
pop
aas
lahf
vpshufd
push
insb
es
loop
pop
cmp
loopne
test
xorb
xchg
out
jns
cmp
jnp
mov
mov
cmovl
dec
negb
dec
or
pop
int3
fnstsw
mov
push
lcall
cmp
add
xor
cs
mov
mov
fiaddl
fists
or
out
pop
xor
int
xor
es
push
lret
inc
mov
faddl
addr16
adc
sarl
lock
xor
ss
das
jge
loop
cmp
aaa
mov
push
mov
bound
nop
add
stos
jb
dec
jbe
aam
pop
fwait
mov
rorl
sbb
or
pop
mov
mov
lahf
or
add
push
push
pop
in
jecxz
cmpsl
pop
lods
jle
lds
cmp
gs
shr
sub
fistl
int3
aam
xor
rcrl
mov
ja
sbb
or
les
iret
int3
outsb
inc
fs
cmp
rorb
adc
jecxz
push
pop
pop
cltd
jb
lods
stc
lds
movsb
sbb
sub
cmp
cmp
lret
dec
pop
mov
out
fcoms
mov
pop
int
loopne
cs
pop
mov
push
mov
rorb
in
pop
dec
popf
push
push
or
jo
adc
or
insb
and
pop
test
mov
insl
nop
int
ficompl
in
imul
jle
loopne
jb
xorb
repz
xor
adc
and
sub
es
add
cwtl
lret
push
jns
jnp
in
pusha
xchg
mov
orl
sub
fisttpll
pop
jl
or
inc
cmp
pusha
pop
xchg
repnz
pshufw
inc
fwait
outsb
xchg
mov
jbe
dec
aam
aaa
or
lret
loop
in
lods
push
xchg
adc
mov
icebp
xor
rol
sub
test
fs
aaa
inc
xor
mov
sbb
je
xchg
pop
dec
mov
int3
jne
add
das
int
ljmp
adc
sub
out
dec
lods
xor
sbb
dec
add
xor
xlat
stc
xchg
lahf
mov
loope
fmuls
addr16
jns
out
and
mov
inc
push
test
popf
xchg
mov
jle
jmp
push
pop
pop
push
in
cwtl
or
daa
aad
jnp
divl
in
iret
fidivrl
xchg
mov
ds
jecxz
push
nop
mov
fstl
mov
cld
test
xor
fistps
jno
std
sarl
sbb
pop
inc
and
add
les
aad
mov
in
loope
mov
in
int
fldenv
or
xor
lea
jg
jmp
push
push
pop
cmpb
adc
mov
into
push
out
jo
pop
mov
sbb
xchg
adc
pop
push
pop
leave
add
jge
sub
je
out
jnp
mov
pop
pop
adc
or
mov
xchg
stos
pop
lret
enter
jmp
and
pop
je
arpl
scas
loopne
or
scas
mov
adc
and
push
in
adc
stc
insb
pop
sahf
mov
mov
push
sbb
push
aas
fisttpl
jb
inc
or
or
and
scas
xor
sbb
jno
popa
int
mov
ja
fdivl
jge
mov
pop
fists
mov
dec
pusha
stc
pop
mov
fldt
pop
jb
jl
jmp
mov
repz
pop
testl
push
sub
mov
outsl
mov
adc
aam
pop
cmpl
dec
or
aaa
loope
fld1
cli
push
iret
pop
jnp
dec
enter
push
push
pop
cmp
fs
cmp
xorl
cmp
mov
clc
iret
fbstp
jae
xlat
call
inc
fdivl
sub
sub
arpl
pop
loope
repnz
sub
test
lret
movsl
sahf
jmp
repnz
les
int3
pop
mov
fimuls
add
movsb
push
mov
pop
loop
fisubrs
cmp
lahf
cmp
popf
cmp
int
adc
or
pop
add
mov
addr16
dec
push
xchg
adc
jmp
sbb
notl
into
mov
in
lods
pop
mov
xchg
sub
call
dec
adc
pop
or
sub
pop
stos
cmc
rolb
scas
lea
out
and
mov
gs
pop
mov
or
lea
loop
inc
mov
cmp
pop
jp
gs
adc
cmp
subl
and
cmpsl
pop
orl
jp
sahf
mov
out
mov
mov
cmp
pop
mov
movsl
lcall
mov
fs
ds
pop
cltd
in
jns
pop
stc
test
and
pop
lock
jb
sub
mov
hlt
lahf
idivl
lods
mov
push
jmp
xchg
cmp
pop
int3
nop
xorl
sub
aas
in
loope
dec
push
mov
pop
leave
scas
inc
pop
aad
and
sbb
or
testl
into
shl
mov
cmp
fmull
repz
jge
in
ja
int3
orl
es
fistpl
jbe
jb
jg
mov
pusha
or
shrl
cmp
pop
outsb
pushl
fistps
popa
xchg
sbb
dec
inc
pop
or
mov
out
pop
mov
push
les
jns
fdivrs
sbb
pop
fisubl
pop
lea
sub
cli
mov
lcall
in
test
mov
movsl
bound
fidivrs
scas
aam
dec
arpl
dec
mov
and
enter
lret
stos
lods
arpl
pop
das
pop
jno
mov
push
in
jo
out
imul
jb
sub
sbb
mov
rcr
xor
sarl
pop
xchg
je
xchg
and
xchg
dec
mov
and
mov
pop
jg
jo
lods
les
fndisi(8087
jmp
pop
xchg
aad
or
add
jmp
sbb
adcl
push
enter
dec
in
aaa
inc
ret
dec
adc
pop
sub
insl
mov
mov
out
or
in
adc
add
pop
push
push
insb
xlat
jbe
mov
mov
dec
imul
aas
int
mov
loopne
inc
mov
pop
mov
or
sub
pop
adc
push
mov
pop
lock
lods
pop
std
das
sbb
pop
bound
push
sub
add
pop
xchg
bound
or
fs
xor
jo
out
push
mov
rcll
fcoms
mov
sbb
aas
mov
push
scas
pop
jnp
call
add
ds
add
shll
xor
movsb
addr16
testl
nop/reserved
jl
or
cmp
xchg
xor
out
add
rorb
jae
dec
ret
pop
insb
mov
sub
lods
in
push
lea
dec
stc
xor
cltd
jns
idivl
dec
or
add
jo
leave
hlt
orb
mov
int3
divl
dec
sub
fsubs
pop
or
or
pop
push
or
mov
add
pop
dec
push
push
int
adc
jmp
testl
lcall
pop
out
shll
loope
push
jp
jmp
jecxz
popa
mov
xchg
and
add
mov
aaa
jbe
xchg
jp
cmp
stos
jle
notl
pop
loop
rolb
jnp
into
pop
adc
mov
scas
sbb
cltd
enter
data16
iret
aad
pop
lea
xchg
dec
adc
pop
mov
mov
cmp
je
ret
sub
xor
pop
aad
mov
jg
cmp
cmp
cmpsb
pop
aaa
clc
std
divb
stc
xchg
pop
dec
testl
mov
mov
clc
sbb
inc
into
in
mov
frstor
and
add
nop
enter
push
sbb
pop
aam
test
in
std
pop
mov
inc
js
add
jge
pop
add
mov
inc
fidivrs
add
mov
mov
pop
push
pop
mov
fcomps
pop
sbb
imul
ret
test
or
push
rolb
lods
fwait
inc
push
mov
ret
ds
movsb
pushf
sbb
add
cmp
adc
rcrb
xorb
jl
add
jmp
adc
mov
icebp
decl
pop
mov
stc
scas
int
stos
lock
fsubrl
je
std
jle
pop
fidivl
scas
ror
mov
sbb
cmp
into
test
out
lret
pop
push
and
push
lahf
fstpl
cs
fs
xchg
nop
mov
das
pop
addl
cmp
push
jge
and
shrb
addr16
in
leave
sbb
sbb
mov
mov
fs
adc
nop
inc
fdivrl
jo
mov
stos
iret
push
mov
fwait
pop
jmp
int3
adc
jne
pop
rcll
loop
xor
inc
inc
inc
js
shll
fimuls
dec
adc
adc
inc
pop
xchg
inc
mov
in
mov
adc
mov
pop
or
xor
out
push
bnd
pop
sub
jbe
pop
pop
push
jecxz
adc
pop
out
lret
gs
int
jp
lods
hlt
mov
pop
jg
inc
pop
inc
mov
dec
aam
dec
push
pop
mov
pop
push
sub
test
lea
dec
and
fwait
mov
in
adcl
pop
xchg
jg
cmpsb
int
pop
aam
jbe
and
cltd
in
mov
in
push
clc
inc
mov
adc
mov
dec
dec
pop
repz
int3
pop
hlt
aas
jbe
repz
popf
fistpl
jge
jno
sbb
out
dec
js
sub
mov
and
mov
xchg
fs
pop
mov
in
pushf
mov
enter
pop
aam
cmpsb
pop
adc
lret
imul
sbb
mov
adc
sbb
cmp
mov
mov
in
push
test
mov
xlat
sub
faddl
adc
sub
xor
sbb
pop
pop
out
push
mov
pop
push
cmpsl
sbb
sub
adc
mov
push
and
icebp
inc
out
leave
scas
jg
mov
out
insl
jge
lcall
adc
in
mov
pop
ficomps
pop
dec
pop
sbbl
push
fistps
pop
push
xor
insl
mov
out
pop
cmp
pop
jecxz
sahf
add
pop
lahf
cmp
cmpsl
pusha
sbb
fsubr
mov
pushf
out
xchg
jmp
fadds
add
incl
adc
pop
clc
adc
aam
mov
mov
push
mov
arpl
xor
call
scas
adc
adc
imul
dec
cmp
mov
cmp
dec
pop
faddl
sbb
insb
loop
bound
adc
adc
cmpsl
mov
xchg
sahf
pop
inc
fdivl
sbb
push
sbb
cmpl
pop
inc
dec
fbstp
fmull
icebp
pop
jae
inc
sub
jmp
xchg
pop
dec
or
xor
pusha
dec
mov
pop
cmpsl
jo
push
filds
mov
sub
pop
xor
subl
pop
cmpb
sbb
sbb
pop
stos
int
pop
inc
popf
or
add
sub
mov
lds
enter
sub
scas
jbe
fisubs
mov
jns
cmp
pop
pop
fwait
lods
pop
adc
jb
adc
push
fstl
mov
sub
rorl
dec
or
pop
dec
lds
fs
or
mov
pop
rcrb
call
mov
dec
cmp
jge
sbb
fldl
mov
std
mov
fcomps
mov
lahf
mov
jne
or
and
adc
int
stos
or
jl
sbb
lcall
mov
std
ficoml
or
lahf
jnp
lods
mov
es
shll
sbb
lods
pslld
int3
cmpsl
adc
icebp
insb
pop
xchg
push
xor
test
pusha
xchg
cld
adc
pop
xor
dec
lock
lods
sub
pop
push
adc
inc
pop
repz
pop
inc
arpl
mov
movsl
cltd
mov
sti
out
out
inc
pop
cmp
xlat
testw
fisubrs
inc
lcall
mov
pop
and
gs
xchg
rorl
imul
daa
roll
lcall
shr
jecxz
lds
je
cmc
dec
or
pop
mov
lock
pop
out
sbb
push
mov
mov
fistl
lcall
into
ret
mov
stc
mov
inc
cltd
daa
fiadds
and
cwtl
loope
adc
sti
dec
pop
push
daa
or
fcmovnb
popf
mov
cmpsl
xor
test
inc
je
pop
push
out
pop
jns
out
jno
and
xor
cmpsb
mov
push
push
mov
dec
test
in
and
and
mov
popa
sub
fidivrl
add
in
fidivs
jl
leave
ss
mov
pop
aam
xor
cmpsb
dec
orb
fists
cmp
bound
out
cmp
inc
push
js
fldenv
fiaddl
fldenv
aad
lahf
adc
jbe
xor
mov
out
or
sbb
aaa
cmp
sub
xchg
nop
xor
call
int
mov
pushf
jg
xchg
jle
fiaddl
push
xorb
popa
movsb
mov
pop
jl
lahf
sub
bound
fdivrs
jo
lcall
je
sbb
dec
lret
sub
pop
fnstenv
stc
dec
mov
iret
bound
mov
cltd
pop
in
fs
mov
pop
or
js
push
test
fisttpll
xor
scas
xchg
cmp
rcrl
push
ja
nop
jge
push
inc
cmp
jo
pop
sub
les
pop
add
mov
inc
pop
test
and
jae
mov
pop
pop
and
inc
data16
sti
cmp
mov
push
fidivs
xchg
pop
xlat
jl
push
movsb
pop
lret
add
jb
mov
lods
mov
cmp
mov
aaa
sbb
orb
movsb
sahf
lcall
scas
loop
mov
mov
insb
pusha
std
into
adc
sub
mov
bound
xchg
add
inc
jnp
push
in
cmpsl
cltd
pop
push
or
sbb
pop
lds
jb
xchg
push
dec
mov
mov
add
mov
xor
lods
ja
sbb
fisubrs
out
sbb
jge
adc
and
fstps
fidivrl
jae
pushf
cwtl
jns
mov
dec
push
push
jnp
cwtl
mov
cmc
or
push
clc
mov
pop
repnz
mov
int
sbb
and
loopne
mov
adc
mov
pop
fs
pop
xor
lret
sub
pop
sub
inc
adc
mov
inc
or
std
pop
mov
inc
xchg
leave
pop
dec
sub
int
push
cmpsl
unpcklps
mov
mov
cltd
add
cs
je
pop
sti
fidivs
icebp
cmp
pop
aad
mov
out
inc
fstpl
mov
mulb
jb
insl
in
pop
cltd
int
add
data16
sub
stos
ds
sarl
cwtl
mov
rcrb
into
pop
in
jbe
or
pop
jg
popf
cmpsl
sub
stc
jo
fidivs
jmp
pop
sub
inc
stos
sub
ud0
pop
mov
jmp
pop
xor
sub
pop
cmp
mov
adc
add
lret
or
sbb
pop
pop
mov
int
pop
fmuls
mov
xchg
dec
daa
mov
push
mov
push
mov
loopne
roll
jb
into
ficompl
pop
xchg
sbb
or
pop
dec
mov
outsl
cmp
scas
mov
mov
stos
adc
stos
pop
scas
ss
es
popa
and
push
fbstp
out
lret
add
xor
jle
clc
test
mov
add
es
xor
lcall
jo
insb
out
mov
mov
cmp
ret
jb
sbb
add
adc
pop
fstpl
pop
mov
fsubrs
repnz
add
pop
arpl
xchg
aas
arpl
stc
add
shrb
or
pop
add
mov
pop
fildll
lock
pop
int
stos
pop
adc
bnd
push
xor
ds
lcall
sbb
jbe
addr16
pop
popa
mov
pop
sub
bound
scas
sbb
fisttps
pusha
mov
inc
lcall
mov
inc
iret
sbb
loope
insl
xchg
inc
mov
cmp
pop
aam
imull
xor
negb
fisubl
pop
pusha
arpl
sbb
fwait
pop
mov
lahf
sub
push
int
and
pushf
ret
and
lret
xor
cmp
push
xor
jne
push
js
or
lock
sub
aas
sbb
jo
fmuls
pop
fcmovne
hlt
leave
xorb
jo
dec
mov
jns
pop
mov
pop
scas
pop
jbe
stos
jp
sbbb
movsl
fistpll
push
ja
mov
push
mov
adc
pop
xchg
sbb
xlat
jne
test
aad
int
cs
jg
fbstp
fidivrl
movsb
inc
pop
mov
and
xor
lods
cwtl
pop
negb
call
sbb
dec
lret
flds
test
data16
movl
fsubrp
jns
cmp
mov
adc
pop
sbb
std
or
inc
mov
inc
lds
push
sub
test
rcr
xchg
lret
pop
xor
lret
movsl
add
ret
pop
into
pop
sub
pop
add
mov
test
add
add
mov
scas
add
jl
loop
mov
ss
and
mov
notl
pop
cmp
cmp
mov
xchg
lock
pop
cld
pop
cwtl
push
dec
adc
fstpt
loope
test
jb
pop
jae
or
adc
xchg
adc
pop
mov
out
jp
pop
mov
xchg
std
dec
ds
int
bound
jns
sbb
mov
mov
aad
out
push
jge
sbb
pop
cmp
or
pop
dec
mov
mov
stos
fs
clc
pop
pop
mov
cmpsb
stc
xlat
popf
rcrb
loop
jbe
mov
das
cld
movsl
aad
pushf
lret
mov
js
repz
sub
pop
inc
mov
iret
test
dec
ficomps
scas
dec
xor
jg
bound
sub
shll
shl
pop
xchg
dec
std
popf
sbb
mov
pop
inc
xor
push
pop
int3
insl
push
daa
cmc
aam
jecxz
cmp
inc
sub
das
clc
inc
jle
popf
imul
mov
into
and
or
imul
ror
loope
mov
data16
pop
and
aad
insb
and
ret
rcrb
outsl
xchg
nop
jecxz
out
sbbl
mov
lods
es
jnp
das
inc
cmp
pop
in
out
adc
pop
sub
es
mov
jae
cmp
aaa
sbb
mov
mov
mov
pop
sub
out
scas
jg
lds
jo
pop
cmp
cmp
stc
rcrl
xchg
outsb
shll
or
ljmp
pop
test
push
bound
int
sbb
pushf
xchg
pop
xor
pop
lea
mov
scas
lods
jmp
pop
sub
mov
in
mov
aad
jne
fadds
rorl
push
fwait
add
xchg
lods
into
sub
pop
outsl
dec
js
int3
shlb
cmc
pop
int
clc
rcrl
xchg
cmpsl
sbb
add
pop
pop
repnz
std
mov
dec
gs
jnp
lret
scas
sub
pop
sbb
ret
push
pop
insl
pushf
cmp
sti
int
cli
mov
pop
mov
pop
lret
int3
xchg
in
jg
sbb
mov
testl
mov
jp
mov
cmp
cmpsb
pop
fdivr
arpl
notl
cltd
mov
je
push
push
and
out
or
sbb
ficompl
dec
pusha
pop
lcall
movsb
scas
cs
sbb
add
mov
aad
jecxz
cld
xchg
and
ljmp
aam
push
xchg
jge
test
ficompl
enter
sbb
mov
lret
pop
in
mov
lds
pushl
inc
stos
mov
fwait
add
cwtl
push
pop
adc
fnstsw
adc
jmp
mov
data16
or
mov
sub
add
xor
sbb
and
int
cmp
pop
pop
mov
jle
aam
hlt
cltd
call
or
ret
iret
loope
push
and
mov
adc
mulb
pop
adc
int3
popa
pop
push
repz
sbb
pop
mov
jne
inc
fldenv
pop
imul
pop
xor
lcall
jle
sbb
pop
cmp
aas
js
pop
pop
cli
inc
jbe
cmp
xlat
repnz
push
ss
jmp
sub
push
mov
mov
pop
gs
loope
pop
es
imul
in
push
mov
jmp
andb
lds
inc
adc
jb
jl
xor
jbe
out
int
lret
cs
shlb
inc
int3
mov
jb
out
push
shrb
pop
pop
sbb
sub
fldpi
outsb
lcall
dec
fstpl
arpl
stos
or
fsubs
sub
lret
mov
lret
nop
pop
adc
pop
sub
add
or
inc
sbb
pop
xor
dec
loope
xlat
sbb
pop
pop
pop
add
rorb
fnsave
call
pop
mov
test
hlt
shrb
int
sub
adc
push
mov
mov
pop
add
int3
loop
data16
pop
dec
stos
iret
xor
sbb
sub
pop
test
push
lret
mov
sub
pop
bsf
mov
sti
mov
repnz
pop
mull
add
xor
pusha
outsb
cmp
movsl
call
pop
add
cmp
sub
push
je
inc
xchg
push
fisttpl
js
popa
jne
or
pop
shlb
cmpl
pop
enter
ljmp
mov
pop
mov
and
gs
lods
loop
inc
imul
cmp
dec
rorl
test
cwtl
xchg
push
mov
movsb
dec
cmp
mov
sub
daa
cs
or
or
inc
pop
inc
dec
jae
pop
mov
lret
stos
pop
dec
stos
int3
cmpsb
out
mov
sahf
lcall
add
push
gs
sbb
loop
arpl
orl
dec
jb
mov
mov
dec
pop
pinsrw
pop
scas
jne
sub
decl
adc
bound
rcll
in
in
cwtl
sbb
in
pop
push
xchg
dec
mov
push
pop
out
cmp
pop
and
loopne
push
push
das
call
je
leave
cmp
lret
mov
rcr
pop
push
and
xor
pop
xchg
mov
sub
pushf
cmp
scas
pop
je
test
popl
jnp
call
stc
icebp
and
addb
scas
pop
in
in
dec
lcall
xchg
in
fisttpl
jns
pop
cld
sbb
xor
imul
cmp
dec
jbe
fmull
pop
mov
or
mov
je
add
jmp
pop
inc
pop
aad
add
push
push
stc
test
push
pop
popa
and
pusha
adcl
movsb
xor
and
outsb
cmp
dec
stos
jo
xlat
fs
push
lahf
lods
jle
inc
pop
cmc
ss
push
arpl
inc
pop
adc
add
dec
sbbb
pop
cltd
jp
lds
pushf
push
dec
push
or
pop
repz
sub
add
lock
cli
pop
ja
dec
sbb
jle
pop
dec
aaa
and
push
xor
lahf
pop
push
sub
xor
cltd
addr16
jns
and
jo
mov
fcoms
mov
sub
iret
scas
fsubl
mov
or
cltd
mov
fcoml
js
pop
out
pop
adc
stos
insl
xchg
scas
lds
rorb
fdivs
sahf
jnp
pop
xchg
lahf
mov
or
aad
mov
test
jb
data16
cmp
or
pop
ja
pop
pop
or
xchg
enter
pop
dec
push
pop
outsb
pop
inc
pop
cwtl
cvtps2pi
mov
sahf
mov
pop
cli
cmp
fisttpl
out
aam
loop
pop
push
mov
pop
fwait
mov
lret
adc
pop
int3
and
sub
pop
ror
jae
aad
lods
add
mov
jnp
lahf
std
push
push
js
pop
pusha
dec
int
push
pop
add
pop
scas
xor
fistpl
dec
xchg
shr
sub
mov
push
sbb
pop
mov
fsubrs
inc
pop
fiadds
scas
pop
add
fcmovbe
mov
pop
aam
cmp
in
cmpsb
dec
mov
jle
sahf
jno
outsb
scas
xor
in
lds
xor
xor
and
loope
pop
pop
jle
jl
sti
inc
lock
jg
pop
ret
and
scas
pop
and
xor
inc
inc
sarb
in
inc
pop
dec
out
adc
jo
pop
lods
dec
or
pop
icebp
push
stos
mov
pop
sbb
push
lea
push
pop
jbe
lahf
lds
in
pop
out
es
pop
daa
pop
pop
xchg
rcrl
mov
lea
fwait
sub
nop
jecxz
push
or
int
pop
mov
and
ror
sub
mov
jo
inc
dec
pop
mov
xchg
dec
je
or
cld
pop
and
ficoms
in
movsl
push
pop
jns
sbb
pop
lds
int
aaa
js
sbb
je
jo
pop
sub
xor
bound
lock
cmp
push
jne
jno
lods
scas
in
sub
mov
call
sbb
pop
add
ficompl
sbb
jge
xorb
jnp
cmc
pop
adcb
test
push
das
repz
repz
xchg
mov
aas
mov
sub
cld
pop
xchg
xchg
incl
pop
mov
jl
ja
iret
cmp
aas
leave
sbb
fdivs
pop
jg
mov
es
fwait
out
jmp
leave
js
pop
daa
or
mov
pop
loop
jns
scas
jbe
movsb
mov
flds
cmp
stos
dec
mov
lock
pop
std
push
mov
test
pop
mov
pop
xchg
adc
adc
mov
pop
pop
pusha
and
nop
test
lods
pop
into
out
cmc
fwait
in
sbbl
stos
cmpsb
sbb
lods
mov
pusha
or
cmp
fwait
dec
add
pop
call
ja
sub
movsl
into
jns
dec
jb
fsubrs
dec
bound
inc
mov
push
int3
pop
sti
in
push
cmpsb
lahf
stc
sbb
dec
push
or
mov
fwait
pop
repnz
jecxz
mov
xchg
or
pushf
and
test
jmp
pop
arpl
xchg
add
lods
lcall
stos
lods
xor
mov
pop
rclb
push
pop
mov
pop
lods
push
int3
dec
mov
sub
pop
out
mov
outsb
or
jbe
fildll
mov
jb
ja
and
std
ficompl
mov
in
int
in
pop
js
call
mov
inc
pop
jb
lret
aaa
mov
pop
test
stos
data16
lret
jns
adc
inc
jne
in
sbb
fisttps
out
fsubrs
frstor
in
test
dec
pop
insb
stos
faddl
mov
lds
cld
mov
mov
rcrb
adc
jb
mov
jmp
out
dec
lret
popa
dec
pushf
pop
sub
mov
ljmp
and
stc
mov
inc
mov
adc
adc
push
pop
push
jb
loopne
cmp
stos
dec
fstpt
sti
lea
stc
push
mov
xchg
jb
je
frstor
imul
pop
loopne
imul
rclb
sbb
jecxz
push
mov
jbe
insb
stc
shrb
sbb
adcl
dec
adc
jae
in
jl
xchg
mov
xchg
cmova
out
mov
sub
clc
pop
sbb
sub
mov
int
test
cmpsl
add
push
int3
push
aad
lret
fcomi
mov
ja
pop
jb
scas
xchg
jns
cmp
bound
pop
xchg
jle
pop
fadds
in
sbb
popf
sbb
shll
pop
leave
aas
jmp
pop
or
imul
add
nop
shrb
jbe
pop
or
jl
daa
lret
pusha
push
mov
jmp
jo
test
pop
lcall
mov
arpl
out
mov
test
out
ret
jle
or
out
leave
pop
loopne
cs
repnz
xorl
test
mov
ds
orb
pop
mov
std
test
sub
lods
adc
int3
inc
dec
pop
adc
jmp
mov
inc
cltd
xchg
sub
pop
das
or
inc
pop
lahf
int3
pop
loope
cmp
push
adc
cli
inc
pop
clc
fstpl
pop
dec
push
jne
pop
in
imul
scas
mov
call
pop
fstpt
mov
pop
cmp
rep
jae
int3
xlat
pop
mov
test
pop
rclb
cmp
cmpsb
rcrl
sub
addb
leave
adc
fwait
in
mov
orb
push
or
pop
fcmove
pop
movsl
mov
pop
jno
icebp
mov
cmp
push
std
scas
loope
mov
out
clc
stos
pop
insl
pop
sub
lock
cltd
pop
in
jl
or
roll
fs
mov
adc
into
scas
push
and
mov
pusha
push
xchg
repz
mov
test
pop
xorb
cs
fsubl
pop
or
jmp
leave
incl
int3
jnp
in
dec
or
xchg
das
jb
mov
sub
cmp
imul
loopne
shl
sbbl
mov
cmp
in
lret
jbe
pop
rcll
lahf
sbb
pop
jns
mov
pop
popf
ret
pop
cmc
and
icebp
mov
inc
nop
rolb
push
cmovns
in
dec
imul
mov
pusha
test
dec
int
mov
adc
scas
pop
data16
push
loopne
bound
aaa
pop
jae
dec
mov
jne
scas
pushf
inc
xor
enter
les
pop
adc
cmpsl
add
and
dec
sarb
shrb
sub
test
in
jle
hlt
mov
scas
add
fwait
or
xchg
sbb
or
lea
sbb
int
sahf
addr16
mov
decb
cmpb
jecxz
fsubr
inc
aad
or
dec
push
mov
fisubrl
sbb
add
test
mov
cmp
ror
scas
loop
lret
loopne
jbe
sbb
mov
fcompl
stos
mov
mov
dec
mov
pop
jb
hlt
movsb
mov
aaa
in
inc
pop
sbb
pop
rclb
cwtl
xchg
daa
pop
adc
into
sbb
int3
cmp
cmpsl
pop
mov
es
cmp
shrl
ret
fstps
outsl
scas
lea
dec
mov
dec
dec
cmp
xor
push
mov
mov
cmp
xchg
jg
pop
mov
sti
push
lods
add
push
lods
or
pop
mov
and
mov
push
jp
sub
xor
pop
fsubrs
cmp
dec
jecxz
mov
imul
enter
jbe
out
lahf
mov
aaa
and
or
pop
loope
sub
sbb
fwait
xchg
sti
notb
sahf
jl
ljmp
adc
clc
jecxz,pt
jle
pop
or
test
movsl
lret
mov
inc
or
and
pop
push
mov
pop
ja
lahf
pop
enter
and
jmp
dec
sarb
lods
aam
mov
dec
mov
repz
pop
mov
aaa
rolb
push
mov
shl
sbbl
sub
mov
adc
xor
or
push
jo
std
pop
xlat
popa
jnp
stos
fsubs
lcall
stos
insb
jne
call
xor
icebp
pop
stos
xchg
sbb
or
mov
mov
cmp
sbb
xchg
insl
loop
push
lods
cmp
nop
stc
xor
inc
int
pop
fadds
or
lahf
sti
push
popaw
pop
insl
push
mov
push
or
std
mov
mov
pop
cld
aad
gs
or
in
jge
clc
sbb
lcall
pop
dec
cmpsb
insb
mov
clc
out
fmull
sar
push
aas
cli
xchg
xchg
add
pop
loopne
std
mov
mov
pop
cmp
lods
xchg
sub
ja
pop
mov
insl
std
or
hlt
cmp
pop
fs
push
bound
pop
scas
jb
mov
mov
fstps
ljmp
dec
popl
mov
shl
dec
lahf
btc
sbb
cwtl
popf
dec
push
jecxz
sarb
mov
pop
pop
call
xlat
in
pop
jg
add
mov
fildl
add
rcrl
pop
jle
jae
cmp
cli
sub
ljmp
scas
inc
mov
ror
push
cmp
cmc
or
xchg
and
xor
inc
push
pusha
outsb
mov
in
sarb
pop
mov
call
adc
adc
in
jecxz
pop
and
and
inc
cmp
ja
mov
cmc
sbb
imul
lcall
sub
std
pop
pushf
mov
jl
pop
lds
sbb
mov
xor
pop
xor
shl
inc
frstor
add
xchg
loopne
pop
aam
and
adc
mov
xor
jne
test
xchg
scas
pop
sbb
insb
fildll
imul
and
add
repz
out
pop
xor
mov
mov
or
pop
xor
mov
inc
gs
and
pop
rclb
jne
loopne
dec
mov
mov
das
fistpll
scas
pop
xorl
fsubr
sub
pop
mov
sarl
sbb
andl
stos
insl
icebp
push
pushf
test
pop
jmp
or
xor
fs
pop
mov
out
loopne
pop
in
cmp
adc
dec
sub
clc
mov
xchg
insb
push
pop
and
stc
lea
mov
mov
jp
mov
pop
or
xchg
or
popl
or
inc
and
sbbl
inc
int3
out
jle
push
pop
mov
adc
mov
cmp
in
fidivrs
fsubl
addl
scas
jno
sbb
out
cmp
pop
addl
xlat
dec
adcb
lcall
mov
out
cld
lock
mov
std
dec
xlat
dec
daa
pop
xchg
in
add
lret
bound
gs
and
jae
sbb
lods
mov
pop
imull
sub
jno
pop
pop
xor
pop
or
std
scas
and
sahf
jb
xchg
mov
je
int
jae
xor
fnsetpm(287
pop
jo
push
mov
call
sbbb
int
and
ss
adc
out
notl
fwait
les
mov
enter
xchg
xchg
pop
and
int
pop
mov
sbb
loopne
into
cmp
ja
loop
popf
out
fwait
sahf
rcll
pop
cmpsb
mov
mov
repz
stos
sbb
in
dec
pop
cmp
sbb
lret
and
and
cmp
mov
mov
int
jl
into
lahf
add
daa
flds
lret
addr16
lret
int3
mov
mov
test
or
adc
pusha
ror
pop
mov
rorb
fs
repz
paddd
mov
pop
movsb
xor
jno
sub
pop
shll
adc
dec
mov
jns
int
dec
cld
pop
and
or
ja
dec
popf
mov
lds
or
xor
pop
jb
sbb
inc
add
pop
sub
sub
insl
pop
rol
jo
jbe
pop
push
lds
sub
es
mov
lods
push
lea
pop
xchg
repz
xchg
sbb
cmp
xchg
iret
xchg
push
jb
inc
hlt
cltd
in
sbb
mov
jmp
mov
push
push
pop
pop
inc
loope
je
pop
mov
and
or
test
sub
sub
cmp
pop
shll
add
adc
test
jae
cmpsb
push
and
mov
cs
mov
jno
jle
pop
pop
mov
je
xor
xchg
adc
cmp
sti
sbb
adc
and
xchg
xchg
int
bound
jae
jecxz
xchg
out
cs
jecxz
pusha
pop
dec
stos
sbb
xchg
scas
rorl
pop
ret
aad
push
dec
dec
pop
js
mov
dec
mov
and
mov
sub
pop
inc
or
call
mov
test
popf
cmp
pop
pop
int
sbb
lahf
ds
mov
xchg
mov
stos
repz
jbe
lods
out
into
int3
std
dec
mov
mov
lcall
inc
outsl
pop
outsb
push
xlat
loope
sbb
pop
out
fnsave
pop
es
jo
insb
movsb
test
sbb
lahf
decl
pop
outsb
pop
int
and
jecxz
jle
cltd
xor
lods
roll
mov
decb
movsb
pop
xchg
fnstsw
and
pop
dec
loopne
fxch
cmp
fsub
jnp
inc
pop
fldpi
jecxz
and
push
pop
mov
pop
loop
js
lock
dec
and
sarb
test
call
mov
mov
cli
pop
test
arpl
fcoms
xor
pop
xchg
sub
jbe
add
test
mov
mov
das
pop
inc
push
inc
pop
in
and
mov
pop
mov
sbb
rclb
xchg
js
cwtl
adcl
inc
aaa
cmpsb
add
push
dec
pop
cmp
or
mov
fsubl
pop
mov
shr
xchg
pop
push
stos
mov
int3
adc
jb
jg
and
mov
std
into
push
scas
lods
cmpsl
out
add
jge
repnz
adc
sbb
addl
fstpl
pop
cwtl
fsts
jl
jne
mov
xchg
aad
xor
enter
sahf
sub
jo
pop
and
clc
into
pop
test
mov
sub
hlt
cmp
push
std
std
pop
dec
popa
aad
inc
pop
adc
mov
push
pop
lds
cmc
fs
stos
gs
xchg
xor
pop
push
push
call
sbbl
movsb
mov
pop
cltd
std
psraw
rol
jle
subb
aad
cs
data16
scas
iret
lods
jmp
sbb
mov
adc
rclb
pop
xchg
push
xchg
and
pop
imul
sub
imul
xor
pop
mov
or
jmp
pop
inc
arpl
fsubs
mov
dec
adc
test
out
sub
xor
mov
cmc
adc
dec
out
pop
mov
negl
xchg
cwtl
jno
cmp
rcrl
mov
add
mov
mov
cltd
call
fldt
aas
jo
xor
push
jle
pop
into
pop
push
jbe
dec
lret
mov
std
leave
inc
int
pop
adc
cmp
and
mov
int
das
and
mov
cld
inc
and
xchg
mov
or
sarl
popf
fs
pusha
jo
daa
dec
fwait
pop
cmp
sbb
add
add
insb
pop
cli
xchg
inc
jge
pop
decl
sub
mov
inc
sub
fwait
xchg
sbb
lret
push
lret
fdiv
or
lahf
mov
add
fisttpl
adc
adc
gs
jb
jae
jge
push
fstps
out
jbe
fsts
sahf
fmuls
fdivrs
pop
xor
jbe
dec
pop
sbb
xor
cmpsl
or
sbb
mov
lcall
adcb
push
pop
aas
mov
xchg
add
cltd
fwait
dec
sub
pop
jae
jg
adc
adc
pop
or
jp
add
aaa
mov
lahf
data16
dec
fldt
pop
mov
cmpsb
cwtl
pop
pop
pop
push
popf
pop
jb
cmp
pop
ret
call
arpl
pop
pop
int3
sub
pop
or
ds
dec
clc
sub
pop
scas
sbb
int
pop
sub
push
mov
adc
test
sub
sbbl
in
loope
aaa
jp
sub
nop
sub
pop
pop
push
pop
pop
dec
lods
dec
sbb
mov
decb
push
inc
pop
fmul
xchg
test
dec
mov
cmp
sub
push
xor
cmp
cli
fiaddl
scas
mov
adc
outsb
push
add
pop
add
jb
mov
les
in
fld1
xor
das
shll
dec
or
sbb
adc
sub
adc
enter
dec
aam
popf
cmp
inc
fdivl
test
pop
pop
imul
mov
mov
jmp
fistps
xor
jge
mov
mov
daa
fcmove
mov
pop
mov
cltd
lret
jnp
xchg
jo
mov
lahf
cs
ja
add
scas
arpl
aad
xorl
in
jecxz
sbb
mov
mov
and
mov
or
lret
jo
stos
les
pop
pop
mov
in
adc
int
loope
pop
sbb
mov
pop
out
cli
ret
lods
push
int
pop
or
outsb
sub
jbe
mov
out
push
xor
lahf
push
fnstenv
xor
jo
xchg
lret
sub
daa
and
xchg
pop
mov
insb
jae
and
xchg
leave
fnsave
xor
pop
pop
dec
ljmp
inc
loopne
ljmp
scas
sbb
test
ror
or
cltd
add
inc
sbb
outsl
push
sbb
pop
ja
sbb
sbbb
stc
adc
cmp
cmp
pop
mov
int
and
in
lea
roll
hlt
mov
lret
decl
sbb
jg
imul
sub
push
popf
fptan
dec
dec
pop
adcl
stc
pop
mov
xchg
jo
cltd
repnz
fsub
cmp
mov
lods
sub
les
pop
xor
notb
stos
scas
out
int3
int
jecxz
clc
jb
mov
mov
inc
stos
and
sbb
or
jg
jae
cmc
cltd
mov
push
push
jbe
hlt
orl
xor
add
cmp
pop
into
sub
in
pop
fiadds
je
jecxz
mov
cmp
sbb
rcr
inc
mov
sbb
dec
das
out
push
sbb
inc
adc
cwtl
and
or
lahf
movsb
scas
xor
clc
mov
sub
pop
enter
sub
or
push
pop
cltd
push
sub
jbe
mov
xchg
jo
fwait
pop
arpl
cmp
or
jbe
mov
mov
pop
pop
jae
cli
lahf
mov
mov
stc
push
xchg
or
pop
iret
pop
cmp
jmp
into
jns
or
rep
psubusw
enter
xchg
cltd
push
sub
jbe
lahf
sbb
imul
pop
or
shrb
cmp
addr16
icebp
int
add
pop
mov
pop
push
pop
cmp
int3
xchg
mov
insl
lea
imull
out
pextrw
add
mov
and
fwait
pushf
pop
jo
out
sub
out
add
xchg
into
xor
push
ss
pop
ja
cmp
sbb
lods
dec
dec
ljmp
hlt
mov
rolb
lcall
xchg
inc
sub
push
pop
sbb
les
pop
negb
es
test
and
stc
loope
mov
bound
pusha
daa
fildll
jle
pop
jmp
jbe
pop
inc
pop
loop
insb
loopne
movsl
pop
mov
adc
mov
pop
lahf
add
or
sbb
push
mov
insb
and
pop
cwtl
xchg
rcll
xor
add
fidivrs
jecxz
cwtl
and
fwait
imul
jg
xor
cmp
repnz
jbe
outsw
sbb
loop
pop
enter
arpl
add
mov
test
sub
movsb
pop
add
mov
mov
ret
sti
adc
hlt
out
movl
mov
xchg
popa
cmp
std
lahf
jns
dec
and
pop
xchg
adc
pop
outsb
movsl
push
sbb
mov
pop
clc
pop
jbe
pop
pop
jno
fwait
out
sub
aam
mov
pop
dec
jns
pop
cld
xchg
and
push
mov
push
pop
int
cmp
push
sbb
and
push
pop
mov
cli
cltd
dec
xor
test
out
jp
adc
test
dec
pop
addr16
cmp
pop
fldcw
pop
mov
mov
outsl
dec
insb
cmp
rol
push
pop
pusha
cmp
aad
dec
jge
int3
popa
mov
push
les
jb
push
pop
popf
or
jg
int3
push
and
scas
cltd
in
cmp
jl
adc
sbb
pop
loope
jecxz
jae
pop
inc
mov
into
add
sbb
bound
ss
ds
xor
or
mov
sbb
orb
inc
sub
pop
call
rclb
movsl
pop
mov
sub
and
adc
stos
dec
bound
pop
xchg
jmp
pop
and
lret
mov
shll
popa
or
jnp
fstpl
sub
pop
test
insl
into
sub
adc
jb
shl
pop
sbb
jle
mov
cmpsb
lods
imul
std
dec
mov
int3
pop
or
lea
aaa
sub
lret
xchg
mov
inc
mov
add
xor
mov
cs
out
movsl
outsl
and
inc
dec
loop
xor
xchg
pop
dec
mov
jl
push
mov
jnp
repnz
mov
mov
pop
fcmovbe
stos
pop
add
lret
cld
jge
sub
pop
mov
mov
dec
add
fstps
mov
sbb
imul
pop
inc
or
int
scas
mov
lcall
mov
sbb
dec
push
xchg
pop
jb
mov
aas
jns
mov
test
dec
pop
and
or
mov
mov
sbb
mov
inc
lea
loopw
pop
sbb
cmpsl
pop
inc
dec
lds
mov
xor
pop
gs
lret
cs
push
stos
divl
jo
jo
mov
lret
pop
test
jb
sub
ss
test
adc
inc
repz
rcll
pop
xlat
mov
add
movsl
sbb
arpl
insl
push
outsb
pop
mov
mov
sub
sbb
mov
pop
insb
or
push
mov
test
jbe
je
pushw
xor
inc
pop
cltd
adc
hlt
vaddss
cld
js
inc
rcll
xchg
cmp
pop
push
cmc
das
std
ljmp
pop
negl
stc
mov
sti
loopne
adc
mov
mov
imul
pop
mov
std
mov
fnsave
pop
sub
lcall
je
and
pop
inc
mov
in
sub
sbb
cmp
leave
mov
into
mov
cmp
add
add
pop
data16
xor
push
pop
xor
mov
cs
pop
cmp
loopw
cmpsb
pop
pop
aam
inc
dec
sti
mov
xchg
dec
out
iret
pop
pop
sbb
sarb
mov
jg
dec
sbb
mov
in
stos
dec
pop
and
sbb
pop
mov
push
shl
jmp
pop
inc
xor
jmp
dec
pushl
pop
icebp
lea
adc
and
pop
pop
push
xor
in
shrl
mov
jb
mov
inc
dec
push
fisttps
adc
mov
imul
repz
popa
pushf
test
sbbl
sub
dec
scas
pop
push
or
jmp
sbb
pop
add
lds
dec
mov
mov
push
js
ds
int
std
mov
or
jmp
push
cmc
cli
dec
pop
sub
rcrb
imul
mull
jle
mov
sub
cmp
int3
mov
call
lret
mov
in
pop
push
pop
aas
push
pop
int
jp
addb
push
mov
xchg
pop
jg
dec
pop
imul
inc
leave
cmpsl
pushf
pop
pop
xor
out
mov
mov
add
lahf
mov
dec
pop
lret
je
push
jb
fldt
dec
fldcw
and
or
out
lods
sbb
lea
pop
shrb
rol
in
mov
cmp
pushf
sbb
adc
xchg
int3
fisubs
roll
pop
in
in
pop
jno
test
push
push
pop
jne
mov
call
loop
xchg
repz
std
mov
test
and
inc
pop
das
dec
call
push
push
loope
int
rorl
pusha
mov
fistpll
out
pop
inc
pop
mov
pop
outsb
cwtl
pop
or
pusha
jb
push
adc
or
or
mov
mov
xlat
lds
adc
mov
out
mov
out
mov
pop
jge
xchg
push
addr16
pop
enter
call
loopne
loopne
pop
sbb
mov
lahf
lds
sub
jecxz
push
mov
lret
mov
sub
aaa
cltd
xchg
fidivrl
dec
addb
scas
push
inc
mov
mov
ficoml
int3
xchg
xorl
fmull
loopne
sub
mov
mov
pop
mov
mov
jp
sub
mov
movsb
int
stc
mov
test
pop
adc
addps
cmp
pop
sub
jb
push
fsubr
inc
xchg
int3
les
mov
pop
jo,pn
adc
popf
ja
mov
and
ficomps
jo
scas
xor
fs
jmp
test
ljmp
ss
lahf
adc
cmp
inc
lea
jo
push
out
popa
or
pop
adc
cmp
mov
pop
and
or
fs
push
xchg
pop
popf
lods
mov
lret
loope
out
mov
lcall
repz
pushl
mov
ss
dec
cmp
dec
out
jle
sub
xor
sbb
shll
sub
fisubl
in
cmpsb
xchg
sub
fmuls
ret
pop
aad
xchg
cltd
aam
or
shlb
adc
pop
inc
dec
inc
shr
cmpsl
scas
sbb
gs
fstps
sbb
xchg
lret
or
pop
je
pop
pop
inc
inc
lods
jne
pop
xchg
cmc
aas
inc
sbb
insl
or
push
clc
jecxz
imul
in
pop
push
or
mov
scas
popf
xor
in
xor
cmp
inc
pop
hlt
mov
sbb
pop
mov
imul
insb
push
pop
subb
stc
pop
jb
cmp
jle
imul
pop
inc
lret
push
jae
lds
cmp
stos
cmpb
inc
mov
or
and
test
fmul
and
pop
pop
sbb
inc
xchg
mov
dec
jbe
push
xor
or
scas
fsubrl
adc
dec
pop
outsl
adc
mov
pop
shrl
testl
and
negb
add
push
imull
xcrypt-ctr
cmpsl
pop
scas
int
push
inc
dec
jecxz
icebp
adc
xor
jb
daa
rolb
jle
inc
sbb
and
jnp
aaa
cmc
sub
xchg
and
stos
add
inc
fstpl
push
jno
cmp
push
scas
push
jne
clc
hlt
jb
mov
dec
fsubr
add
xchg
pusha
jmp
or
inc
dec
inc
hlt
std
pop
pop
daa
adc
ret
jnp
out
mov
xchg
xor
fsts
arpl
pop
adc
mov
inc
mov
push
jbe
into
or
mov
mov
getsec
nop
aam
dec
cld
movsb
cmpsb
int3
into
push
xor
lahf
fwait
mov
pop
pushf
push
inc
shlb
pop
pop
push
pop
ja
inc
push
or
hlt
frstor
mov
xor
in
mov
fnstcw
xor
mov
scas
and
mov
pop
push
std
test
xchg
xchg
xor
dec
inc
or
mov
sbb
pop
outsl
xchg
aam
cmp
sub
fsub
loop
pop
jmp
inc
mov
shrb
pusha
jnp
add
adc
imul
je
pop
daa
cmc
dec
add
sbb
lea
pop
hlt
dec
bound
arpl
jo
add
repz
xor
sbb
ss
cmp
pop
cmp
pop
lret
push
loop
sub
outsl
mov
arpl
mov
aad
in
adc
pop
sub
inc
xchg
pop
fwait
icebp
dec
lods
rorl
pop
and
fnsave
pop
data16
scas
call
or
mov
aas
and
push
cltd
cmp
ljmp
cwtl
jle
divl
scas
jnp
ret
jo
add
mov
and
pop
sti
int
addr16
sub
fildl
aad
in
mov
adc
xchg
inc
fcmovbe
add
in
xchg
ret
jnp
jmp
sub
mov
scas
push
push
int3
jg
cwtl
inc
cld
lahf
mov
sahf
add
xchg
or
fstpt
pop
jbe
push
clc
pop
in
mov
lods
leave
inc
in
adc
imul
xchg
dec
pusha
mov
outsl
mov
pop
and
inc
sbb
pop
mov
push
or
push
adc
les
pop
adc
mov
subb
pop
sub
mov
jp
unpcklps
xchg
sahf
sbb
lret
shrb
out
pop
dec
cmc
pop
das
imul
mov
push
shrb
push
lods
or
jecxz
gs
test
cld
out
adc
out
aam
mov
sbb
std
pop
push
fbld
push
int
mov
sub
xchg
pop
xor
inc
cli
test
and
out
adc
pop
ja
arpl
rcrb
pop
sbb
xlat
inc
push
mov
pop
push
enter
add
xchg
sub
repz
dec
mov
add
jg
sub
pop
and
ja
inc
push
mov
add
or
add
mov
lret
sub
dec
jo
pop
mov
jle
push
inc
pop
mov
push
jo
mov
test
fisubrl
les
xor
sub
loop
lahf
or
inc
fsubs
scas
mov
iret
stc
jmp
es
out
in
scas
sbb
mov
stc
cltd
push
jns
imul
pop
cmp
xor
lods
sub
dec
pop
divb
mov
ret
outsl
out
jo
and
mov
cs
pop
aam
sbb
in
cmpb
mov
int3
pop
sbb
push
sbbb
cltd
add
cmp
xchg
xchg
xor
das
mov
pop
push
mov
sub
push
bound
fidivrl
cwtl
adc
lods
xchg
jo
mov
outsl
fcomps
outsb
cs
lret
fcomps
mov
pop
in
dec
into
adc
subl
dec
cltd
std
jae
pop
sbb
cmp
xor
fs
mov
pop
sahf
xchg
repnz
mov
in
pop
inc
std
lret
imul
enter
fiaddl
dec
subl
out
sarb
adc
add
mov
pop
jg
sub
lcall
pop
out
add
jle
jge
mov
cld
jecxz
cmp
or
scas
and
fs
pop
test
lcall
aaa
mov
push
pop
jne
sbb
pop
xchg
push
out
outsl
mov
add
push
pop
xchg
sub
cmp
mov
mov
scas
inc
std
or
add
xor
dec
loop
cmp
push
inc
pop
or
pop
xchg
sahf
xlat
cmp
xor
cmc
outsb
and
xchg
sub
pop
xchg
je
jecxz
jo
lret
stos
into
add
jne
mov
jns
ret
std
dec
pop
iret
fbld
movsl
xor
push
dec
ss
jg
jo
scas
push
js
xor
fwait
add
sbb
sar
push
popf
mov
pop
mov
adc
mulb
pop
aad
or
cmp
int3
xchg
jl
adc
mov
lahf
ret
popf
xor
inc
mov
adc
or
push
and
fwait
out
in
mov
loope
daa
push
aad
sbb
jnp
or
stos
cmp
pop
sbb
pop
fs
mov
sbb
pop
mov
mov
jge
test
fisttps
mov
inc
pop
fsubrp
adc
push
pop
pop
mov
lahf
insl
sti
fildll
jecxz
or
stc
ss
adc
and
mov
pop
repnz
xor
push
stos
dec
lea
mov
test
mov
dec
dec
cmp
and
bound
lods
clc
cmp
ret
lcall
xchg
iret
push
pop
cmpsl
sub
push
stc
js
je
int3
pop
cltd
scas
and
xchg
adc
pusha
pop
adc
dec
sub
int
pop
jp
pop
and
addr16
push
inc
jle
popa
xor
imulb
pop
mov
xorl
pusha
mov
mov
mov
rcrl
mov
lret
aam
add
or
push
ret
mov
mov
add
sbb
ljmp
pop
and
in
shl
pop
inc
mov
jmp
int
aas
pop
inc
mov
jbe
and
and
test
rcrl
lcall
pop
lods
push
cli
jge
stos
cmp
ret
cld
dec
repnz
sub
xchg
pop
pop
mov
test
mov
mov
mov
aaa
push
sbb
pop
sub
push
and
xchg
int
mov
lret
cmp
mov
mov
mov
loope
xchg
insb
sbb
xchg
lahf
push
aaa
mov
out
fsubr
scas
push
xchg
loop
clc
add
insb
pop
jns
add
jae
push
or
mul
pop
pop
sbb
out
adc
sub
cmp
aas
mov
mov
add
inc
loope
mov
xor
pop
fs
sahf
dec
adc
insl
arpl
fisubrs
aam
mov
mov
orl
pop
pop
cmp
cmp
xor
adc
xchg
nop
int3
bound
pop
js
cmp
out
aam
sbb
adc
inc
hlt
rcrb
fs
or
jl
pop
insl
add
dec
call
cld
and
inc
xor
pop
or
cmc
dec
mov
pusha
mov
je
sbb
lahf
fwait
inc
xor
inc
aam
pop
sub
inc
jb
lret
cmp
pop
lea
gs
mov
add
clc
pop
sbb
andl
fildl
lret
xor
push
cmp
pusha
sahf
call
push
pop
aam
cmp
push
pop
sbb
jmp
cmp
pop
jl
push
ss
mov
lret
inc
inc
mov
pop
xchg
pop
aaa
mov
push
pop
scas
cmc
out
cwtl
push
add
add
out
lret
jp
rcrb
stc
fstpl
jns
andb
adc
xchg
dec
clc
lock
sahf
not
int
add
jb
xorb
mov
cltd
jbe
sahf
inc
fstps
fucom
inc
cld
sub
sbb
insl
in
fildll
mov
dec
iret
push
fisttps
jg
sub
ret
inc
jecxz
xor
test
dec
in
pop
enter
xchg
push
dec
pop
lds
sbb
insl
inc
pop
xchg
dec
mov
mov
pop
push
scas
scas
push
ret
mov
outsb
pop
or
repnz
lcall
push
dec
pop
repnz
adc
sbb
scas
jb
dec
pop
jo
push
aad
adc
xor
gs
add
jno
lahf
loope
adcl
cmp
jecxz
add
pop
shrb
scas
jl
pop
mov
jmp
sub
push
shlb
mov
push
imulb
outsl
pop
or
int
fwait
jl
mov
pop
or
roll
dec
sti
sub
cmp
sbb
xchg
idiv
push
xorb
dec
dec
and
xor
sbb
pusha
out
cltd
iret
pop
xor
cmpsb
cmp
cld
pop
mov
in
arpl
orb
jb
je
dec
mov
mov
mov
lea
jp
outsl
fdivs
mov
xchg
ficompl
movsl
push
int
sahf
rolb
mov
subl
aad
jmp
adc
shlb
pop
aaa
imul
test
jb
pop
push
jns
stos
inc
dec
jmp
fnstenv
push
dec
pop
aaa
mov
scas
sbb
mov
add
cmp
pop
int
shrb
sub
jecxz
push
stos
pop
loop
ficoml
enter
sbb
bound
aas
sub
sub
pop
mov
jle
adc
pop
incb
mov
pop
insb
rcrb
mov
mov
mov
pop
repz
pop
xchg
sub
dec
stos
lds
fcomps
mov
test
pop
rorl
jb
pop
ss
cmp
pop
in
sbb
int3
mov
int
inc
cs
cmp
leave
xor
push
pop
daa
pop
fsubrl
rcrl
or
jno
mov
shrb
add
xchg
aad
mov
insl
jns
dec
lods
cmp
and
jl
xor
jge
jp
lahf
iret
mov
dec
fisubrl
push
dec
scas
jmp
je
mov
rcl
mov
push
cmpsl
sbb
pop
mov
aas
mov
outsb
fidivs
xchg
push
fcoms
pop
dec
mov
int
lods
loope
js
xchg
cmp
das
pop
roll
or
test
mov
cld
xchg
lret
loop
in
adc
jae
dec
sub
pop
rolb
pop
test
clc
dec
pop
pop
jb
fisttpl
test
and
jg
idivb
inc
arpl
mov
xchg
jbe
sub
lock
push
xor
adc
pop
cmp
mov
fnsave
stc
sbb
mov
jg
fildll
pop
std
jecxz
int3
pusha
test
ret
roll
imul
imull
mov
aas
sarb
insb
nop
ja
or
push
pop
leave
lcall
pop
dec
add
in
xchg
dec
jo
push
jne
xchg
nop
out
ficoml
cltd
ljmp
push
push
xchg
pop
lret
in
inc
repnz
mov
mov
sbb
pop
fwait
shll
jge
jb
mov
popf
cltd
js
fstp
pop
insl
adc
jb
dec
mov
dec
mov
dec
xchg
pop
cmc
push
mov
and
add
lret
data16
jns
pop
jl
ja
push
addr16
popa
loopne
iret
pop
push
inc
out
sbb
mov
add
cltd
lret
push
enter
cmp
cmp
test
fcmovnu
adc
pushw
cmp
or
push
pop
sbb
jle
adc
aad
iret
fs
pusha
cmpsl
sbbl
dec
popa
rcrb
dec
push
in
arpl
pop
int3
sahf
mov
sbb
jo
xchg
test
lcall
movb
jno
dec
stos
pop
xchg
jge
int
call
bound
cmp
adc
jae
jge
inc
xor
jle
lret
sbb
fs
sbb
test
arpl
jmp
outsl
repz
sahf
pop
test
negl
mov
cmp
pop
shlb
lea
mov
shrb
mov
rcrl
xchg
loope
pop
in
dec
ds
fs
pusha
jb
mov
out
mov
lea
int
pop
add
jb
adc
sbbb
movsl
sti
fstp
out
push
jg
insb
int
pop
stos
adc
xchg
idivl
fwait
loopne
push
in
dec
inc
stc
call
mov
mov
pop
mov
dec
jns
mov
aaa
xchg
inc
mov
jp
xchg
jmp
sbb
mov
lock
movl
sbb
sbb
pop
sub
pop
mov
pop
lret
pop
inc
test
fucomp
push
mov
in
jns
pop
or
sbb
mov
inc
pop
inc
cmpsb
add
mov
nop
int3
xchg
sarl
into
ret
mov
or
das
lcall
sbbl
imul
xchg
fidivrs
sub
test
daa
sbb
sbb
jnp
idivl
sbb
leave
and
mov
adc
pop
inc
nop
mov
cld
sbbl
sbb
stc
imull
popf
adc
xchg
dec
orb
inc
mov
cwtl
in
jb
and
sbb
clc
push
add
jp
cld
std
pop
stos
mov
in
fstps
les
pushf
je
or
adc
ret
mov
dec
jne
orb
cs
stos
int3
dec
repnz
hlt
pop
cmp
pusha
mov
dec
cltd
pop
xchg
mov
pop
add
stos
cmpsl
mov
jl
cwtl
fdivr
pop
dec
or
pop
int
push
add
lret
pop
aas
das
add
sub
jg
in
enter
movsl
mov
lahf
pop
pop
lret
jle
mov
cs
outsl
daa
pop
cmp
cwtl
add
out
dec
pop
inc
gs
lds
pop
push
insl
lahf
jge
lock
fisttpl
adc
jp
adc
mov
xor
shrl
xor
arpl
gs
push
pop
dec
cmp
addps
repnz
push
popf
pop
sti
stos
mov
popa
pop
sbb
sub
lds
push
or
out
pop
sbbl
push
push
ljmp
pop
int
out
mov
sti
pop
sub
fwait
cwtl
sub
xchg
push
int3
pop
and
mov
fstps
in
rcrl
data16
daa
int
cmpsb
pop
xchg
adcl
mov
clc
pop
push
jbe
xlat
adc
js
sbb
icebp
and
pop
xor
pop
inc
add
shlb
pushf
pop
loop
int
jnp
ret
bnd
jb
push
mov
clc
push
scas
sub
inc
clc
lods
js
jmp
pop
xchg
pop
in
and
aam
mov
mov
fimuls
sub
mov
out
lods
and
xor
pop
lds
dec
mov
push
fists
out
pop
xchg
into
sbb
pop
shl
dec
gs
mov
push
or
arpl
dec
mov
dec
fimull
sbb
enter
ljmp
mov
out
rcrb
xchg
insl
and
jbe
pop
push
dec
or
adc
int
cmp
inc
mov
adc
dec
lret
push
movsb
adc
pop
jg
cmpb
sub
and
mov
jge
stc
push
ljmp
adc
hlt
pop
pop
cltd
cmp
and
pop
xchg
sub
inc
int
or
imul
scas
jecxz
stos
lds
out
mov
arpl
pop
fimuls
pop
lods
and
pop
push
jb
push
sub
pop
cmp
or
enter
gs
stos
push
pop
test
xchg
cmc
int3
in
sub
sbb
xor
popf
adc
repnz
pop
adc
adc
pop
pop
jbe
int
lea
add
arpl
mov
push
mov
mov
ror
xor
mov
pop
and
pushf
mov
cli
shlb
mov
pop
mov
orl
stos
jno
gs
dec
pop
int3
xchg
inc
or
mov
test
movsl
test
pop
sti
mov
out
cmpsb
sbbl
cmp
mov
scas
mov
inc
pop
pushf
mov
sub
fbld
sbb
fwait
dec
xchg
jecxz
pop
dec
lea
pop
jmp
cmp
adc
and
pop
lret
push
test
push
sahf
add
pop
jb
dec
out
adc
jnp
sar
pop
pop
punpckhbw
lahf
data16
jge
scas
leave
push
sti
adc
mov
adc
mov
lea
insl
mov
int3
out
pop
imul
inc
add
jbe
ror
ss
pop
test
lds
sbb
mov
shrb
lcall
add
jb
sti
cmp
int
dec
aam
push
adc
ss
mov
je
gs
adc
in
rolb
pop
aaa
cmp
loopne
fldcw
pop
hlt
popf
dec
inc
dec
movl
or
pop
xchg
int
inc
rcrl
in
test
stos
sbb
sub
push
addps
mov
pop
add
fstpl
jns
pop
adc
stc
icebp
mov
dec
out
and
pop
inc
lods
sub
inc
adc
cmc
xchg
mov
xor
int3
orl
add
jmp
rorl
jp
pop
mov
lea
imul
xchg
mov
pop
push
pop
sti
push
push
mov
lds
adc
test
int
inc
hlt
cmp
adc
pop
jbe
aam
or
xrstors
loop
stc
mov
adc
fists
jp
inc
aas
into
insl
jbe
pop
mov
mov
push
jns
pop
cli
mov
inc
ficompl
pop
push
xchg
add
cmp
lret
repz
repnz
lods
lds
aas
cmpsb
sub
add
pop
scas
mov
jl
sar
mov
mov
cltd
fs
cmp
pop
mov
dec
call
xchg
add
pop
sub
ds
ficomps
mov
dec
mov
lret
mov
sbb
arpl
xchg
pop
int
dec
pop
sbb
lcall
jnp
adc
int
addr16
jb
shll
stc
ss
push
mov
sub
mov
jb
dec
pusha
xchg
mov
mov
xor
mov
or
scas
clc
dec
pop
stos
push
inc
mov
cli
shlb
xor
int
movsb
jmp
pop
cs
sbb
push
and
sub
stos
lods
fbld
sbb
push
insl
pop
cmpsb
inc
out
pop
test
imul
mov
pop
lret
dec
or
jns
sbb
adc
dec
dec
xchg
jmp
es
xorl
jno
and
mov
arpl
sub
cmp
orb
negl
hlt
pushf
clc
inc
in
sbb
fcomip
xchg
add
movsb
jo
daa
xor
cmp
aad
lods
fcomps
insl
in
cmpb
js
jmp
inc
mov
std
aaa
pop
pop
test
sbb
in
mov
popf
scas
xor
sub
roll
movsl
addr16
xor
mov
pop
scas
or
sahf
push
mov
or
stos
dec
and
xchg
pop
jp
rclb
ljmp
ficoml
xchg
scas
mov
aad
pop
adc
scas
mov
idivl
rcrb
pop
roll
push
jb
add
sahf
ret
xchg
into
or
in
and
repnz
jnp
mov
jo
push
pop
imul
jbe
jp
clc
scas
sub
or
fildl
lcall
lret
xor
xor
shl
mov
sub
fstpl
cmpb
repnz
jb
pop
dec
inc
xor
pop
das
xchg
pop
jecxz
pushf
lret
fisubrs
sbb
fistpll
incb
cli
sbb
mov
int
aad
in
cltd
mov
adc
daa
dec
je
jbe
push
jo
add
sbb
cmp
lret
repz
sub
and
in
in
in
ret
cmpl
jb
pop
push
dec
sbb
jns
pop
push
mov
imul
rorl
movsb
divl
pop
lahf
aam
movsl
mov
jb
ficompl
jmp
fmulp
push
pop
cs
add
push
lret
push
jp
mov
pop
mov
pop
sbb
pop
pop
incl
dec
jnp
push
jb
dec
das
fdivl
daa
mov
repz
pop
pop
adc
fucom
movsb
iret
jbe
ljmp
test
aas
std
imul
loop
or
jb
call
aam
inc
pop
mov
out
clc
lretw
pop
or
push
fcomps
pop
push
push
int
jno
daa
jp
in
mov
rcrb
or
call
or
dec
push
ds
xchg
jbe
lods
pop
stc
fisttps
add
mov
pop
subb
and
dec
xchg
mov
pop
xor
in
bound
xchg
hlt
mov
mov
cmp
dec
pop
and
mov
xchg
fidivl
sbb
shrl
pop
fidivrs
into
stos
pop
mov
fsubrl
sub
or
pop
push
cmp
dec
sub
pop
mov
and
stos
daa
lock
jg
mov
jbe
sub
outsl
ffreep
xchg
imul
push
ror
scas
cltd
xchg
lea
push
jns
push
bound
adc
or
add
dec
std
mov
and
mov
test
push
cs
inc
sub
xchg
pushf
push
jl
pop
jg
jle
sbb
fistl
mov
mov
add
std
stc
and
shrb
pop
clc
pop
jae
mov
mov
test
dec
cmp
cltd
shll
aam
xchg
sbb
popa
fnsave
mov
mov
and
jne
pop
cmpsb
xchg
lahf
pop
mov
je
dec
dec
sub
dec
aas
pop
insb
mov
ds
and
mov
add
pop
mov
inc
cld
push
mov
add
xchg
or
pop
mov
mov
scas
mov
movsl
push
pop
jle
xchg
es
push
jae
inc
int
dec
pop
pop
xchg
inc
dec
jne
std
pop
test
mov
fisttps
lahf
movsb
fdivs
jo
ret
pop
jnp
int3
add
fstpl
fdivrs
pusha
pop
mov
dec
aas
pop
sbb
jne
call
adcl
sbb
popa
lea
add
int3
dec
in
lret
pop
loope
sub
dec
sar
sbb
cltd
negb
aad
bound
inc
or
pop
das
sbb
pop
movsl
push
pop
mov
stos
dec
pop
test
sub
cli
inc
or
jb
or
test
add
enter
jle
pop
xchg
push
xor
pop
mov
push
push
ret
pop
rclb
xchg
sbb
test
and
iret
clc
push
dec
jecxz
xor
scas
dec
pop
outsl
data16
cwtl
inc
pop
pop
and
ss
adc
pop
mov
bswap
mov
dec
jnp
xchg
pop
cmp
js
adcl
push
add
xor
out
mov
and
jae
mov
push
testl
repz
inc
sbbb
xchg
dec
loope
pusha
cli
int
jnp
and
add
mov
shr
js
mov
sub
xor
lock
dec
or
or
xchg
ja
scas
mov
pop
add
push
clc
aas
pop
ds
or
fidivrl
or
xor
mov
movsb
sahf
ss
push
mov
cmp
sub
fnstcw
jp
pop
sbb
xor
iret
pop
lods
sbb
out
push
and
cmp
push
jecxz
sub
cmp
fdivs
mov
int3
jmp
lea
pop
lcall
mov
xchg
xchg
jb
into
test
cs
dec
mov
aaa
fisubrs
dec
jnp
dec
fdivrs
sbb
pop
mov
push
fisttpll
negl
inc
pop
mov
aas
std
stc
cmc
pop
xchg
add
adc
fnstcw
hlt
ror
xchg
sti
adc
in
sbb
mov
mov
jl
jg
clc
sub
inc
imul
pop
pushf
sbb
mov
lahf
loop
jo
mov
imul
pop
pop
int
or
mov
shll
pop
jp
xchg
dec
mov
push
jnp
dec
push
adc
scas
or
mov
mov
mov
mov
fbstp
cmp
stc
pop
stos
ss
pop
or
hlt
pop
notl
mov
pop
sbb
push
lret
lahf
cmp
xchg
lea
mov
jne
pop
mov
popa
jbe
add
out
pop
outsl
frstor
lahf
fmul
inc
add
dec
jmp
and
xor
shlb
jnp
jo
mov
pop
int
cmpsl
pop
sbb
inc
dec
push
or
aam
mov
mov
add
pop
mov
fimull
aam
scas
adc
pop
add
mov
pop
xor
cmpsl
jl
sbb
push
push
pop
jp
aam
cmp
aad
je
mov
fnstcw
fnstenv
pop
int
mov
addr16
icebp
xchg
mov
sub
scas
pushf
sub
iret
pop
push
jo
cmpsl
dec
push
cltd
leave
enter
xchg
pop
dec
xchg
repz
pop
out
cmp
push
test
stc
dec
pop
mov
xor
sbbl
jge
push
inc
pop
mov
or
jmp
jno
and
cltd
sarb
cmp
clc
jbe
gs
and
or
pop
fs
dec
popa
mov
or
pop
sub
mov
push
daa
pop
xor
mov
jl
add
pop
cwtl
loopne
ja
addb
stos
js
addr16
js
or
pop
in
fwait
push
into
insl
xchg
in
pop
lret
or
int3
xor
pop
sub
and
mov
dec
dec
push
jb
orb
ss
int3
pop
mov
movsb
in
dec
pop
jmp
sbb
pop
add
xchg
clc
jl
push
int3
pop
test
fucom
mov
stc
test
fcmove
mov
pop
add
cmp
and
pop
pop
mov
mov
pusha
and
mov
push
dec
lahf
loop
xor
fisttpl
pop
cmp
addb
out
mov
gs
push
or
fcmovb
sub
push
aas
in
push
int3
sbbl
sbb
pushf
outsl
aaa
pop
ret
imul
pop
dec
dec
pusha
in
iret
fcoml
pop
inc
imul
push
sbb
xor
or
and
fildll
mov
in
dec
mov
mov
insl
and
xchg
jp
mov
or
outsl
stos
push
adc
cmp
mov
sahf
dec
or
fwait
dec
sub
lahf
add
fadds
pop
jb
std
mov
inc
fsts
sbb
cmp
fldl
int3
mov
and
lahf
js
mov
pop
pop
iret
in
gs
dec
lods
lahf
sahf
out
mov
outsb
stc
pusha
cmpl
dec
pop
jge
jne
xor
adc
test
add
push
dec
leave
cmpsl
insl
jae
mov
mov
inc
xchg
mov
rcrb
sbb
adc
pop
ljmp
aad
push
js
stos
lcall
pop
mov
mov
lods
sub
stos
rcr
add
inc
pop
into
push
and
xchg
in
aam
xor
dec
xor
lods
dec
idivl
shlb
adc
push
pop
xor
inc
fmul
mov
jns
pop
int
punpckldq
xor
ret
mov
addr16
int
lahf
stos
pop
dec
fisubs
imul
test
out
mov
mov
dec
mov
cltd
dec
xlat
shr
ljmp
mov
inc
adc
fnstcw
imul
sarb
pop
ss
pusha
or
lret
pop
and
sbb
mov
ss
jno
sbb
cmp
xchg
cmc
add
lea
icebp
mov
adc
mov
int
cmpsl
mov
fcomip
xlat
mov
mov
jbe
cli
insl
or
aas
into
aad
push
mov
scas
and
clc
cmp
sbb
inc
fwait
jo
loope
rcrb
test
mov
push
data16
insb
stos
out
pop
insb
jge
imul
fs
mov
sub
push
push
xor
into
jne
inc
ficoml
cmc
int3
lods
pop
xorl
leave
dec
je
mov
idiv
push
pop
pop
mov
sub
pop
adc
mov
cli
es
scas
sti
xchg
scas
sbb
pop
in
push
mov
mov
lahf
and
aam
pop
and
scas
inc
ja
dec
push
cmp
jl
test
mov
jmp
cmp
cmp
adc
mov
shl
stos
insl
ficompl
imul
pop
mov
cmpsb
push
jg
pop
lds
repz
push
xchg
jle
lahf
aam
or
fistpl
xchg
cmp
add
pop
jg
popa
and
scas
mov
dec
pop
sub
xchg
add
fisubl
fsts
or
mov
jns
std
insl
xchg
data16
sbb
pop
lods
cmp
fwait
jbe
adc
sbb
pop
jnp
xchg
fnstsw
pop
cmp
mov
pop
sbb
fucomi
stc
or
jecxz
mov
lret
add
lock
add
adc
pop
mov
pop
mov
sbb
fcoms
mov
jbe
mov
lea
sub
ljmp
icebp
lret
jno
imul
lock
sarl
fs
jg
xor
int3
pop
rcrl
push
inc
cmp
stos
dec
pop
inc
pop
and
adc
insl
les
xchg
pop
ds
shl
repnz
out
enter
lcall
pop
in
repnz
xchg
pop
pop
or
ret
pop
add
imul
into
hlt
xchg
rclb
mov
xchg
pop
add
lea
scas
pop
xchg
or
aam
int3
scas
pop
cwtl
sub
jl
pop
adc
test
adc
mov
cld
lods
sbb
lahf
push
out
jo
fistl
and
dec
jecxz
add
pop
xchg
xorb
lcall
inc
dec
in
jecxz
push
jo
std
movsl
pushw
xor
mov
mov
or
pop
pop
pop
bnd
mov
pop
in
xchg
int
jecxz
jmp
pop
cwtl
aaa
sbb
adc
lret
je
jne
jo
imul
int
push
bound
aad
push
ret
mov
push
lcall
xchg
xor
pop
call
fwait
and
shlb
inc
cld
inc
mov
add
pop
dec
adc
aam
outsl
push
jb
pop
out
sbb
push
mov
sbb
cld
add
dec
lret
pop
ja
mov
fmull
out
pop
rorb
sbb
jb
cli
sbb
push
clc
and
lahf
xchg
mov
cmpsl
push
inc
jecxz
ret
inc
scas
or
xor
jo
loope
stos
sbb
ds
mov
lahf
fbld
or
or
pop
jmp
in
pop
mov
push
push
dec
and
inc
int3
pop
fwait
pop
or
test
inc
fmuls
jp
jae
inc
fidivs
xchg
or
movsb
cmp
and
dec
dec
pop
test
and
daa
pop
jbe
in
dec
add
adc
xchg
es
xor
insb
mov
add
push
and
push
xchg
cmp
pop
lcall
sbb
or
fstl
out
pop
test
xchg
xlat
lret
pop
dec
pusha
mov
pop
pop
push
xchg
mov
int3
dec
pop
call
add
cltd
xlat
jecxz
je
pop
sbb
xor
aam
dec
mov
sub
ficomps
pop
sub
cmpsl
mov
mov
std
jle
push
inc
dec
cmp
cmpsl
mov
enter
mov
xchg
gs
call
es
push
sbb
or
imul
ljmp
leave
repz
in
jl
jne
and
mov
sub
jo
mov
out
lods
sbb
inc
pop
cld
mov
sbb
mov
loope
pop
pop
lea
daa
xchg
jbe
je
inc
in
aad
out
dec
fidivrl
addr16
add
xor
scas
or
inc
sbbb
aas
jnp
mov
mov
lret
dec
fdiv
lret
sbb
aas
mov
add
mov
push
inc
test
lret
loope
pop
and
fidivrl
shlb
mov
dec
jo
jno
push
fmulp
dec
rorl
pop
mulb
pop
pop
dec
out
int3
aad
cmpsl
pop
subl
inc
pop
and
pop
adc
push
js
xor
sahf
pop
in
int
pusha
ret
and
mov
rcrl
xlat
js
andb
lods
cmp
push
stos
pop
aam
ret
enter
mov
or
pop
push
mov
daa
scas
loope
mov
aas
lea
shrl
mov
lods
pop
cli
push
loop
xlat
jbe
ficomps
pushf
push
add
pop
int
loopne
decl
mov
dec
cs
xchg
mov
mov
in
inc
add
or
pop
inc
add
data16
dec
xchg
test
mov
mov
out
adcb
fstpt
pop
sarb
in
stos
fsubrl
sti
add
mov
test
push
dec
rcrl
stos
repnz
jne
lods
xor
sub
xchg
movsl
lahf
push
lds
push
adc
xlat
movsb
mov
or
jl
or
pop
jecxz
jns
jbe
fwait
push
mov
lahf
fsubrl
movsl
in
xor
lock
mov
repz
mov
mov
pop
sbb
es
add
sbb
shr
mov
sbb
pop
cmp
addr16
mov
jnp
and
idiv
cmp
fsubr
xor
and
insb
pop
push
adc
push
sbb
xor
cmp
aam
mov
pop
leave
int
mov
testl
xlat
pop
push
add
dec
sbb
aas
ds
js
cltd
or
xchg
mov
subl
xlat
jo
pop
pop
enter
jecxz
jbe
roll
mov
xor
std
subl
fsubrs
call
xor
aaa
xchg
int3
clc
xchg
jnp
lea
dec
pop
idivb
ja
rcrl
jge
inc
mov
and
push
out
push
incl
sbb
push
shlb
pop
inc
sub
lret
std
and
jb
mov
jge
gs
int
mov
into
stc
enter
lock
pusha
cmpsb
imulb
mov
pop
dec
rol
fldt
pop
add
xchg
fs
das
pop
int3
cmc
mov
pop
int
inc
cwtl
mov
pop
add
jp
mov
insb
or
arpl
jo
pop
aas
add
pop
or
jno
mov
shrl
cmp
mov
call
daa
cmpsb
mov
pop
pop
dec
shll
shll
std
jo
pop
mov
pop
xchg
loop
push
js
sbb
into
add
idivl
fsubr
ret
lcall
hlt
pop
outsl
cmp
mov
and
sub
push
in
or
adc
scas
nop
movb
dec
push
pop
out
xchg
jge
loop
or
ficompl
mov
fcoml
pop
jg
fs
pop
testl
scas
jle
xlat
shlb
pop
ret
sarb
cmc
int
mov
push
mov
sub
movsl
pop
clc
push
pop
std
in
call
decb
and
scas
aas
lods
jmp
ss
pop
xor
int3
xorb
ret
lods
mov
add
mov
dec
inc
pop
leave
sub
insl
xor
lock
daa
or
inc
mov
pop
jnp
xchg
xlat
out
pushf
fsubl
xor
bound
aam
push
lahf
loopne
and
mov
pop
push
cmp
sbb
outsb
or
int
mov
adcl
inc
into
scas
xlat
and
xchg
aam
mov
inc
adc
lds
mov
pop
pop
jecxz
mov
fsubs
data16
mov
repnz
cvtps2pi
adc
cs
aad
dec
arpl
xchg
jg
mov
or
jno
and
dec
add
xchg
xor
mov
pop
js
sbb
scas
dec
push
and
rcrl
mov
std
sbb
pop
inc
sub
pop
jl
aad
imul
mov
cli
dec
mov
je
dec
leave
frstor
fsubrs
mov
daa
ss
jno
pop
inc
push
sub
fwait
xor
dec
inc
jecxz
pop
sbb
lods
daa
dec
adc
or
xor
sbb
mov
dec
aad
pop
ljmp
pusha
mov
mov
lahf
xor
mov
roll
ja
lock
stos
int
or
gs
sub
inc
mov
jl
mov
cs
es
scas
lcall
ljmp
scas
fnstenv
bound
jns
mov
aas
mov
or
dec
jo
pop
scas
adc
rcrl
fcomps
movsb
movsl
inc
outsl
pop
ljmp
int3
jnp
repnz
xchg
pusha
pop
inc
pop
inc
jecxz
sbb
pop
sti
cmc
push
and
inc
jnp
in
adc
xchg
aaa
pop
stc
pushf
dec
mov
pop
mov
sahf
mov
cmp
add
arpl
cmp
push
int
inc
dec
adc
inc
adc
lea
push
test
xchg
jecxz
cmp
insl
fisubl
push
add
dec
or
xor
scas
mov
clc
mov
test
push
cmp
add
push
and
into
xorl
loopne
dec
dec
pop
out
sbb
pop
int3
adc
xor
pusha
xor
pop
lea
sbb
xlat
mov
decl
lods
add
enter
in
call
shr
pop
lret
mov
out
xchg
sahf
adc
pop
fiaddl
pop
cmp
xchg
jecxz
add
test
shlb
aam
outsl
pop
mov
lahf
insl
pop
aad
push
jp
pop
jb
les
adcl
xor
sbb
xchg
cmc
xor
pop
sbb
in
pop
stc
pop
arpl
pop
mov
adc
loop
xchg
pop
push
fs
jge
fidivs
jp
push
rorb
in
sub
sbb
sub
push
lcall
pop
cltd
adc
dec
xchg
pop
ja
sbb
and
sbbb
push
mov
push
pop
jb
ds
xlat
popf
outsb
pop
adc
mov
sub
sbb
jnp
addr16
mov
das
arpl
pop
cmp
sub
push
xor
jno
lahf
int
mov
inc
push
xor
hlt
dec
out
pop
lock
cmc
js
xchg
xor
stos
add
push
jne
mov
pop
lret
insb
subl
inc
sahf
pop
jbe
mov
out
jns
mov
dec
push
dec
mov
daa
mov
and
adc
cmpsb
sub
insl
pop
loopne
push
shll
je
pop
repz
mov
mov
int
pop
sbb
cwtl
sbb
inc
mov
jae
fcomps
jb
cwtl
sbb
imul
lds
lahf
xchg
cld
adc
int3
pop
inc
push
inc
pop
xchg
cmp
xor
and
fdivrs
ss
pop
je
xor
inc
pop
mov
cmp
test
in
insl
adcb
leave
xor
mov
dec
in
repz
jns
pop
mov
sub
lcall
pop
inc
insb
popa
cmpsl
xchg
nop
int
pop
test
sub
fists
push
adc
int
and
push
pop
mov
dec
pop
jecxz
jb
pop
shll
xchg
mov
or
mov
jle
xor
push
pop
jbe
adc
cs
pop
dec
mov
int3
xchg
pop
js
push
ret
lods
jbe
pop
push
insl
sbb
pop
dec
scas
mov
cmc
sbb
ljmp
pop
bound
mov
inc
sub
out
test
bswap
push
add
icebp
add
pop
pop
push
movl
cmp
sti
dec
fisubrs
xchg
sbb
int3
cli
and
pop
push
push
pop
addr16
cmc
push
mov
aaa
ljmp
insl
inc
sub
hlt
xchg
add
jns
mov
pop
xchg
das
cmpl
loopne
jno
sbb
pop
xchg
xlat
js
or
push
mov
mov
loop
pop
mov
add
pop
jmp
popf
das
fildl
aad
mov
adc
jns
mov
xchg
pop
and
cli
push
xchg
mov
jno
jo
aam
pop
int3
pop
scas
adc
xor
out
cmp
xor
mov
andl
popf
lods
loope
mov
sub
fldt
pop
xchg
es
addb
dec
std
or
pop
test
or
inc
mov
rcrb
idivb
pop
push
aaa
jno
push
sub
popa
clc
xor
pop
int3
insl
mov
inc
pop
sbb
jecxz
adc
cmp
dec
mov
test
insl
and
rorl
cmp
adc
dec
mov
sahf
xchg
mov
pop
sbb
inc
jnp
sub
or
add
pop
mov
dec
cmp
andl
xlat
ljmp
mov
push
mov
mov
fistpl
je
jecxz
test
xchg
pop
jb
inc
cmc
xchg
mov
mov
jg
je
movsb
push
xor
and
iret
rorb
incl
mov
add
add
mov
clc
cltd
mov
jg
lahf
das
fisttpll
mov
pop
push
mov
inc
and
xchg
cltd
lahf
fildl
fisubl
mov
xchg
loopne
jle
test
jp
lcall
lods
xchg
outsb
pop
jo
subl
gs
loope
lods
int3
mov
jb
imul
pusha
jno
mov
add
ljmp
add
nop
jae
sub
sbb
fnstenv
lret
dec
mov
jle
dec
pop
fstpl
jae
mov
loopne
pop
inc
sub
stos
mov
jns
pop
lods
push
jp
xchg
pop
lods
enter
xchg
sbb
or
rcrl
push
inc
push
inc
pusha
outsb
pop
jmp
and
pop
out
mov
jae
push
test
sbb
jmp
scas
std
push
jo
gs
fdivrs
inc
int
inc
jno
sahf
jecxz
popa
sub
enter
gs
push
adc
mov
lods
js
mov
aam
mov
mov
repz
push
or
sbb
fisubl
push
pop
jno
bswap
loop
daa
mov
mov
adc
lret
sbb
scas
int3
or
nop
xor
mov
out
lods
testb
sbb
mov
sub
mov
sbb
clc
xchg
dec
test
pop
sbb
add
xor
int
mov
pop
lods
popa
jbe
sbb
sbb
sub
mov
in
adc
xlat
and
sub
bound
lahf
dec
mov
xchg
int3
mov
jae
xor
lahf
xor
cmp
fcmovne
sahf
xor
sbb
adc
mov
cmp
mov
pop
xchg
mov
dec
mull
mov
sahf
ret
idivb
pop
out
out
mov
into
sbb
pop
cmp
movsl
jno
popf
jp
bnd
mov
aas
js
jmp
dec
xor
jo
stc
mov
pop
add
imul
stos
sub
and
loopne
pop
jecxz
cmp
cmp
add
cmp
clc
in
jns
jne
cmpb
dec
pop
sub
sbb
xchg
add
jecxz
in
clc
mov
xchg
push
push
pop
sbb
sbb
dec
mov
dec
jge,pt
insl
test
cmp
lods
dec
testl
xor
call
or
pop
or
ficompl
sub
sar
lret
bound
ljmp
pop
xor
test
jnp
add
or
int
pop
inc
dec
test
jbe
push
jl
pop
mov
add
mov
adc
lods
fistps
leave
mov
cmp
mov
dec
sbb
fimuls
fdivs
adc
addr16
cmp
scas
daa
adc
mov
mov
inc
fnstsw
ja
pushf
xchg
test
mov
fwait
jmp
cmp
xor
fdiv
fs
rclb
mov
jle
pop
push
dec
jbe
lea
add
lods
jl
adc
pop
adc
mov
je
sub
mov
movsl
jbe
mov
subb
dec
in
imul
pop
ret
xor
sub
add
sub
cmpsb
je
aas
adcb
daa
inc
jne
mov
in
int
or
fisubrs
mov
stos
adc
call
mov
cli
aam
mov
jg
inc
adc
pop
xchg
and
mov
jp
popf
jbe
adc
pop
jmp
push
mov
xchg
out
and
ficoml
pop
add
xchg
xchg
jbe
mov
jae
movsl
pusha
mov
pushf
xor
or
lcall
mov
cmp
sbb
icebp
cli
rcrb
and
pop
mov
and
fdivs
adc
adc
dec
lods
sbb
dec
repz
or
arpl
mov
cmp
sub
orb
pop
iret
inc
inc
pop
pop
push
or
cmp
out
je
sub
fistpll
push
sub
mov
cs
jb
pop
cmp
jbe
gs
pop
fs
push
xor
test
in
leave
jge
int
lock
jecxz
pop
test
dec
pop
xorb
jge
or
xchg
mov
sahf
out
pop
outsb
jno
lea
clc
insl
je
imul
daa
jno
xchg
inc
fistps
push
add
pop
cmp
and
pop
cs
ret
mov
pop
add
sub
pop
lret
or
stos
or
pop
xor
fwait
int
movsl
cmp
sbb
pop
mov
push
jo
dec
cs
jp
push
inc
push
push
jno
or
ds
les
mov
ss
and
mov
popf
push
xchg
flds
pop
into
pushf
ss
dec
push
fmuls
mov
pusha
loopne
jo
jecxz
sbb
stc
lcall
inc
sbb
pop
xor
dec
popf
insl
cwtl
setg
sbb
ffree
jb
in
pop
pop
inc
data16
roll
cmp
iret
ja
adc
cwtl
and
cld
pop
fisubrl
lds
sbb
faddl
adc
sbb
sub
aaa
pushf
cmp
mov
push
add
in
mov
fcoms
dec
push
adc
stc
sub
loopne
add
inc
stos
or
je
call
roll
xchg
out
lods
mov
pop
jle
sub
cmp
mov
xlat
jl
mov
pop
and
push
push
repnz
cmc
aad
inc
sbb
into
mov
pop
xor
xchg
pop
lods
pop
leave
push
push
jbe
adc
orl
rol
or
pop
mov
xchg
ret
lods
fcompl
mov
iret
jecxz
ret
call
mov
add
test
jge
or
pop
and
xor
adc
fcompl
xchg
jecxz
clc
cmp
push
inc
adc
add
cmp
push
mov
test
out
pop
and
pop
in
cmp
jmp
test
xchg
int
add
out
test
icebp
pop
jne
testb
push
or
pop
push
int
push
scas
xchg
cmp
mov
mov
shr
shrb
out
fistpl
lahf
aaa
bound
lock
pop
dec
insl
push
cmp
cmp
jl
jecxz
sub
jbe
and
scas
sbb
pop
cmp
xchg
arpl
jge
dec
mov
repz
dec
enter
push
int
sub
mov
pop
fiadds
and
pop
popa
gs
fs
pop
test
in
stc
sub
dec
test
add
inc
sub
scas
scas
pop
sub
jns
mov
xchg
cltd
push
lods
or
in
ljmp
mov
add
out
lahf
mov
xchg
stos
sub
mov
sub
mov
mov
mov
push
out
pop
pop
ja
fstps
leave
xchg
in
jb
dec
inc
pop
push
jmp
popf
mov
pop
push
imulb
fwait
pop
mov
jle
sbb
xor
pop
mov
adc
shlb
jo
fsubp
or
out
sbbb
cwtl
sbb
cmp
outsl
les
mov
adc
sub
pop
mov
xchg
sahf
jo
inc
jb
cmp
popf
push
mov
jns
aad
pop
pop
xor
mov
sub
mov
rcrl
mov
and
or
fidivrl
scas
xchg
jl
stos
popa
mov
cltd
mull
sub
nop
cmp
dec
stc
sub
dec
aad
mov
stc
jbe
jo
fneni(8087
and
xchg
or
dec
imul
inc
xor
xorb
push
hlt
mov
sub
push
pop
pop
push
sub
pop
mov
and
int3
mov
pop
ljmp
or
fcmovnb
push
push
adc
addr16
cmpsb
jmp
outsl
sar
mov
movsl
sti
dec
stc
insb
pop
dec
cltd
pop
les
jo
mov
mov
xlat
sub
cli
pop
fmuls
pop
pop
sbb
pusha
dec
cli
popf
mov
adcb
or
xchg
fsubrs
dec
pop
fadd
or
jmp
or
jp
ss
cli
pop
or
fcompl
arpl
fcmovbe
sbb
test
mov
push
cltd
dec
ljmp
inc
aas
dec
pop
or
xchg
ficomps
mov
insl
jbe
mov
pop
jp
push
dec
mov
into
xor
icebp
and
stc
shlb
pop
in
int3
mov
adc
mov
pop
loop
out
or
pop
jp
fistl
dec
stos
jle
nop
mov
call
xchg
jmp
das
push
xchg
pop
lcall
incb
xchg
fldenv
addb
dec
jecxz
push
in
pop
cmp
repz
addps
andb
idiv
pusha
adc
pop
cmp
mov
sahf
sub
adc
and
cmpsb
lahf
aas
inc
add
add
rcrb
lock
lea
mov
stos
mov
push
push
inc
jp
sahf
sub
pop
or
pusha
insl
mov
lcall
imul
xor
sub
push
jmp
xlat
xchg
shrb
mov
adc
sub
sbb
sbb
jle
cltd
mov
rolb
pop
push
xchg
ljmp
hlt
pop
aaa
push
imul
int3
es
sub
scas
call
sbb
sub
xor
mov
mov
scas
int3
mov
adc
xor
xor
adc
add
test
addr16
xchg
xlat
lahf
cmp
les
mov
fisubrs
ljmp
dec
pop
pop
das
adcb
jb
neg
jle
add
pop
jnp
inc
loope
pop
jno
mov
shlb
test
cs
fcmovbe
cmp
fildl
arpl
pop
jns
pop
mov
sub
push
jo
pop
or
adc
sbb
or
jnp
call
jge
pop
int
mov
xlat
cmp
fadd
sub
lret
clc
ficomps
jg
sub
xchg
sub
or
test
lock
pop
cmp
ljmp
fdivrl
push
int
dec
test
mov
pop
sub
imul
dec
lods
add
ja
sti
add
jae
push
or
subl
sub
sbb
push
push
rorb
pop
cwtl
add
jmp
int3
inc
aad
dec
mov
pusha
xchg
xor
xor
gs
sbb
repz
and
insl
adc
mov
xorb
mov
ret
in
int
fsubrl
popf
movb
sub
mov
fiaddl
in
scas
int3
jmp
mov
pop
loopnew
arpl
push
pop
iret
enter
imul
leave
pop
jmp
pop
int
mov
jbe
add
mov
popf
mov
lret
sbbb
mov
mov
pop
jp
daa
ljmp
xchg
inc
pop
sti
xchg
pop
xchg
cmpsb
sahf
mov
pop
cmp
lea
or
je
xchg
cltd
cmp
popf
mov
inc
jmp
pop
pop
scas
aas
std
cltd
sbbl
mov
ds
rcr
jns
push
scas
inc
pop
sahf
dec
or
pushf
mov
push
or
dec
pop
stos
pop
xor
sub
jo
pushf
mov
scas
mov
mov
and
xchg
pop
hlt
mov
pop
rorb
je
pop
sbb
push
jmp
lods
xor
pop
mov
dec
leave
int
lock
xor
add
cmp
rorb
fnsave
les
mov
mov
imul
sub
dec
pop
das
dec
xor
xchg
int
pop
cmc
sbb
je
pop
adc
mov
int3
in
leave
mov
mov
mov
mov
lods
sub
mov
mov
cld
sbb
cwtl
mov
imul
dec
shll
ret
sbb
adc
cmp
sbbb
scas
cmp
lods
aad
int
add
dec
insb
js
fildl
rolb
xchg
sbb
push
mov
dec
sub
jb
outsl
adc
cmp
sbb
pop
xchg
fs
inc
xchg
push
addr16
mov
pop
and
dec
in
pop
gs
out
ss
rcrb
ficompl
addb
adc
mov
pop
cmpsb
call
dec
mov
fistpl
or
loope
adc
data16
pop
iret
jbe
lds
es
lret
stc
pop
je
pop
sbb
mov
enter
pop
pop
add
mov
xor
xor
jp
pop
imul
jecxz
out
movswl
jnp
dec
pop
mov
mov
xchg
ss
rep
out
pop
mov
call
xchg
push
sbbb
lods
mov
lcall
imul
or
jg
dec
addr16
xchg
push
xlat
dec
inc
inc
add
mov
push
lods
or
fnstcw
adc
pop
jge
pop
idivb
jle
cmp
pop
mov
popl
mov
push
pop
push
test
orb
sti
pop
pushf
xchg
and
stos
fxch
pop
jb
mov
aaa
jns
pop
loope
loopne
mov
inc
int
call
lea
jo
mov
rcrb
pop
outsb
jl
cmp
xchg
lret
lret
mov
imul
pop
sbb
jge
int
in
idiv
xchg
mov
fs
loope
scas
ljmp
outsl
xor
lcall
pop
lahf
js
out
jb
sbbl
int3
rcrb
imul
xchg
cmp
inc
dec
or
jno
pop
mov
push
in
shrl
fadds
jecxz
pop
testl
test
or
xchg
lods
daa
jne
mov
fisttpl
movsl
pop
add
mov
xchg
mov
mov
repnz
into
mov
mov
in
push
and
scas
popa
sets
add
fs
mov
and
cmp
dec
mov
aas
fsts
xchg
jge
mov
subb
sbb
faddl
mov
cmc
dec
stc
push
pop
adc
aaa
dec
pop
and
sti
lret
mov
sbb
pop
pop
inc
cmp
adc
sbbl
ss
push
lock
jecxz
mov
or
inc
lea
inc
pop
pushf
subl
sbb
mov
std
ret
in
pop
xor
mov
mov
outsl
psrlw
cs
fistpl
jns
stos
push
repz
in
lcall
mov
cltd
jle
fdivrs
sbb
lock
mov
in
and
sub
xchg
jne
fs
rorl
pop
pop
out
loope
fwait
adc
inc
mov
fisttps
pop
je
pop
and
xchg
iret
xor
mov
add
xchg
dec
aaa
pop
jb
inc
push
jo
pop
imul
outsb
xchg
pop
inc
fsubp
rorb
mov
pop
sub
rcll
mov
fists
mov
movlps
out
out
pop
je
call
and
lret
inc
loope
int3
test
pop
and
pop
aam
or
lods
pop
ror
inc
outsb
mov
sbb
scas
add
nop
inc
loope
mov
inc
pop
pop
data16
sub
lcall
fbstp
sbb
aas
pop
movsb
mov
popf
add
fdiv
mov
pop
inc
cmpl
nop
imul
aam
je
pop
dec
scas
sbb
xchg
out
push
pop
fs
call
jl
lahf
pop
push
cmp
aam
cmp
mov
jle
scas
xchg
and
js
xor
fwait
int
or
mov
out
mov
imul
and
sti
mov
lcall
int
insl
pop
cld
jo
jne
adc
jns
iret
shr
xor
sbb
push
dec
jle
mov
push
scas
mov
add
mov
mov
sbb
cmp
stos
pop
xchg
shrl
rcrb
mov
hlt
aam
pop
mov
pop
jbe
push
ret
jecxz
pop
fstl
pushf
mov
jmp
in
clc
dec
nop
jo
dec
pop
mov
pop
enter
divb
popa
cmp
sub
xchg
pop
mov
pop
push
xor
jmp
xor
testl
loop
mov
push
lret
mov
in
aas
fcomps
scas
dec
mov
int3
mov
sub
pop
pop
ljmp
pop
xor
ret
pop
xor
mov
mov
call
pop
jle
sbb
sub
pusha
mov
faddl
in
sbb
pop
aas
mov
pop
lcall
jbe
jae
cmp
push
push
out
std
sti
movsb
pop
push
bound
cli
shl
add
mov
mov
push
pop
fildll
outsb
cld
inc
mov
mov
cmp
sbb
sahf
iret
pop
jns
dec
sub
push
xchg
loope
pop
pop
cmp
int
test
xor
iret
dec
sub
push
lods
or
out
xchg
mov
inc
mov
cmp
scas
mov
sub
int
sub
push
xchg
xchg
sub
adc
push
jns
jecxz
fwait
sbb
jge
pop
sbb
add
cltd
add
hlt
pop
xchg
adc
decl
pop
les
mov
push
fldl2e
pop
cld
and
cmp
das
lcall
out
dec
sbb
fldl
jno
xchg
sbbl
mov
pop
add
jecxz
push
cmp
mov
cmp
nop
mov
stos
mov
lea
test
cmc
xchg
lcall
addr16
mov
lods
in
pop
cmpsb
and
ret
dec
dec
mov
cld
mov
pop
lea
in
lds
jne
pop
rcll
jg
ja
push
dec
cmc
sub
xchg
pop
xchg
dec
fstpt
mov
xor
les
xchg
stos
jb
add
cmpsl
scas
cmp
into
js
dec
test
add
stos
addb
mov
call
pop
test
xchg
add
test
ljmp
mov
push
sub
fbstp
nop
or
scas
jecxz
mov
stc
jmp
adc
hlt
push
xchg
dec
lahf
push
mov
outsl
jbe
iret
fsubrs
ficompl
lea
fs
mov
fisubl
jecxz
pop
dec
test
xchg
aas
mov
testb
arpl
sbb
push
lds
cld
insl
adc
pop
jae
in
jnp
push
mov
lock
xchg
mov
repnz
ret
pop
shlb
dec
fstpt
adc
jecxz
cmp
fcompl
je
pop
xor
jo
fwait
jns
rcrl
xchg
outsb
mov
and
lret
pop
lods
push
idivb
out
jne
mov
decl
pushf
lods
xor
insb
and
cltd
jg
stos
imul
sbb
xchg
jo
mov
nop
mov
sub
jge
or
int
aam
jb
mov
jo
adc
imul
sub
into
pop
rclb
mov
or
add
lock
roll
pop
outsb
inc
jnp
push
lahf
jo
jge
fnstsw
pop
ficompl
in
pop
gs
cmp
mov
rcrb
ss
daa
jge
sbb
xchg
pop
mov
push
jl
pop
adc
dec
movsw
fwait
jo
into
and
pop
cwtl
lods
nop
push
int3
and
pop
push
rorl
inc
inc
sbb
pop
scas
int
jge
jae
xor
push
std
push
imul
dec
mov
push
aam
pop
repnz
add
dec
adc
sbb
or
stos
adc
orb
mov
push
pop
push
jbe
fildll
repz
pop
cmc
ss
pop
lret
in
dec
pop
sti
int
lock
cmp
repz
loopne
in
pop
fwait
popa
les
pop
das
or
cltd
fsubr
xor
xchg
dec
call
pushf
push
adc
in
pop
jecxz
lods
cmp
imul
daa
push
nop
and
add
ss
push
dec
pop
inc
lret
push
cmp
dec
aaa
arpl
mov
push
vpunpcklwd
insl
cmp
sub
lret
mov
cmpsl
mov
sub
int
jmp
or
fstl
in
cli
inc
fs
je
lea
nop
xchg
lods
es
mov
loopne
aas
jbe
xor
cwtl
addr16
pop
sub
scas
pop
mov
cmp
mov
add
insl
js
mov
sub
sahf
rcll
xchg
pop
fs
int3
repz
repz
and
data16
inc
sbb
inc
pop
xchg
push
push
inc
pusha
pop
adc
pop
pop
nop
sti
sbbw
pop
push
push
xor
jns
mov
lahf
add
fcomps
sbb
in
insb
into
cmp
daa
inc
adcl
xchg
mov
jo
pop
int3
pop
cwtl
ficoml
sub
scas
cld
scas
inc
test
dec
pop
adc
dec
or
stc
cld
sbb
lock
pop
into
stos
xlat
pop
int
fucomp
pop
dec
arpl
rcrl
jecxz
int
jg
pop
adc
jbe
negb
mov
mov
sub
fimull
out
out
cmp
cwtl
ds
or
int3
lcall
and
loop
mov
fcomp
xor
mov
add
jmp
ret
lret
jbe
dec
pop
adc
popa
pop
or
scas
scas
pop
idiv
push
mov
inc
mov
mov
or
fsincos
sbb
mov
mov
adc
ja
pop
arpl
cwtl
cmp
pop
out
xchg
mov
pop
sub
xchg
gs
sub
mov
rorb
add
jne
sbb
repz
sbb
mov
jbe
pop
push
xor
pop
shll
lock
int3
sbbl
add
fcoms
mov
push
pop
push
mov
pop
or
pop
jl
cld
iret
jb
push
or
mov
jbe
int
into
inc
and
pop
icebp
jle
test
push
jb
sbb
mov
cmpsl
repnz
sub
ret
scas
repz
cs
mov
xchg
jns
push
inc
aad
fisubl
xor
cmp
hlt
incl
stos
leave
int3
mov
and
aaa
scas
repz
add
pop
sub
jo
js
popf
lcall
pop
int
mov
outsl
inc
mov
pop
fwait
imul
imull
insl
and
xlat
pop
in
cmp
push
cwtl
pop
mov
in
sub
jp
in
cli
pop
cld
cmp
or
and
jbe
add
sti
mov
mov
movsl
mov
xor
and
inc
jb
pop
push
outsb
mov
xor
jbe
sbb
pop
arpl
push
dec
jb
lods
pop
mov
lea
int3
push
out
fidivrl
lret
mov
out
mov
js
fsubrl
out
pop
dec
or
lahf
inc
pop
cmc
fcmovu
dec
or
repz
pop
pushl
aad
shrb
cs
pop
rcl
or
pusha
pop
ds
xchg
dec
pop
stos
out
dec
testl
add
jp
pop
cmp
mov
test
push
test
mov
add
xchg
mov
jmp
push
and
push
xchg
jns
cmp
mov
pop
insb
xor
or
or
push
es
mov
mov
aaa
popf
imul
mov
inc
push
mov
dec
push
cmp
mov
out
pop
and
in
jo
sbb
and
clc
call
sahf
arpl
xor
push
push
jmp
add
jnp
sbb
daa
loopne
xorb
je
int
js
pop
pop
xchg
outsl
xchg
shr
inc
mov
inc
fiadds
dec
adc
jae
mov
inc
mov
mov
and
or
fnstsw
mov
in
add
push
push
lods
mov
inc
pop
insb
sub
xchg
mov
sbb
jo
mov
cmp
leave
in
pop
popa
cltd
insl
mov
pop
xchg
push
iret
sub
fsubrs
and
movsb
cltd
dec
push
in
mov
mov
dec
pop
aaa
nop
repz
lock
inc
and
dec
mov
jo
std
aad
ret
call
test
fmuls
in
mov
push
cmp
inc
loopne
andl
mov
les
sub
sbb
sbb
mov
mov
jge
mov
mov
jae
add
adc
divb
aas
mov
adc
faddp
push
addr16
pop
push
pop
jp
mov
add
shlb
pop
pushf
cltd
rorl
pop
dec
std
or
sub
jb
int
fnstenv
lahf
out
xchg
mov
repnz
rorb
mov
test
sbb
subl
in
pop
dec
adc
xchg
lret
cmpl
xor
cli
jbe
sbbl
adc
cmp
push
or
xchg
sahf
pop
and
scas
pop
mov
ds
push
adc
xchg
cmp
mov
xchg
and
in
shr
jb
xor
cmp
fs
sbb
sub
fcmovnu
imul
sarb
fcmovbe
hlt
xor
lret
pop
xchg
xlat
shlb
test
int
sub
fcomps
lret
xor
pop
sub
dec
mov
js
pop
jecxz
xor
aam
data16
mov
pop
pop
jle
sbb
push
fnstsw
pop
stos
lods
add
fdivl
int
mov
xchg
sub
gs
mov
pusha
cmpsl
aam
sub
pop
push
fisttps
stos
and
pop
test
into
jb
cmpsl
xchg
cmp
sub
js
mov
adc
xchg
fwait
into
jecxz
jne
scas
jp
std
scas
ficoms
mov
imul
daa
push
pop
test
jo
pop
mov
cltd
mov
sbb
jecxz
push
cmp
push
addr16
int3
shrb
ret
push
jge
lods
add
rclb
jno
ds
in
aam
pop
loope
jbe
add
leave
into
push
sbb
xor
push
shll
xor
sbb
pop
add
inc
pop
int3
into
in
sti
add
je
dec
sub
pop
dec
cmp
pop
int
fs
in
aad
pop
stc
lods
mov
pop
int
dec
or
sub
pop
jmp
int3
mov
ja
int
shlb
outsb
add
push
mov
pop
dec
test
or
inc
mov
sub
popa
dec
cli
add
mov
in
pop
das
stos
call
cmc
jo
mov
test
pop
push
inc
filds
sahf
pop
xchg
lret
and
adc
insl
pop
jbe
imul
das
std
cmp
fiaddl
inc
mov
mov
xor
sub
imulb
dec
sbb
ljmp
leave
cli
push
int
add
adc
xlat
out
inc
in
xor
in
arpl
pop
lret
int
mov
mov
mov
aas
sti
inc
push
lea
adc
mov
jmp
and
jb
push
inc
mov
xor
das
int
jge
ds
divl
into
fistps
xchg
sub
jne
cmp
aas
js
int
jg
push
push
cmp
loopne
dec
movsl
add
mov
add
push
or
and
mov
or
aaa
rorb
fcoms
std
shll
iret
fdivs
int3
mov
mov
pop
mov
push
and
fnstsw
ljmp
mov
mov
pop
lahf
scas
and
imul
repz
jns
add
lds
out
das
call
xchg
pop
pushf
cmp
shr
or
outsb
mov
mov
xchg
sub
fwait
jae
sbb
in
loopne
or
sub
mov
mov
mov
pop
or
pop
es
ficoml
mov
pop
mov
xor
notl
pop
jl
cmp
jle
xchg
jno
pop
lods
push
pop
mov
pusha
pop
out
xlat
nop
mov
fistl
mov
iret
movl
mov
rcrb
lahf
in
xor
xchg
cmp
in
inc
sub
test
mov
mov
scas
sub
mov
cmc
mov
testb
inc
mov
or
das
cmp
jbe
test
scas
xor
mov
push
xor
xlat
push
in
jbe
dec
loope
push
mov
jo
mov
cld
movsb
pop
loopne
push
out
pop
inc
int3
xor
push
push
and
sub
pop
add
sbb
mov
pusha
movl
jbe
out
in
xchg
inc
std
mov
rcrl
dec
sbb
xchg
es
scas
rcr
cltd
pop
int
ss
cli
pop
cmp
loopw
int3
pop
mov
or
jb
jle
pop
stos
jmp
popf
dec
bound
jb
jecxz
dec
push
pop
mov
in
jb
pop
test
shl
insl
cmp
dec
ret
scas
mov
sub
sbb
mov
adc
enter
mov
mov
insl
sahf
or
movsb
push
xor
std
xor
sub
stos
ffree
iret
mov
in
xor
mov
adc
fistpll
and
lea
int
push
jl
pop
push
jbe
and
sub
mov
lea
adc
cmc
lahf
adc
dec
cmp
sub
pop
jmp
int3
add
lcall
repnz
fistl
jmp
push
mov
fwait
push
push
or
sub
insl
daa
sbb
add
mov
pop
adc
inc
inc
dec
mov
pop
sbb
cld
cltd
push
lock
xchg
int
pop
and
fcomip
push
or
sbb
cli
mov
fistpl
jo
dec
pop
push
ss
adc
test
dec
and
stos
shll
fnstsw
pop
ljmp
and
fisttps
scas
pop
sub
mov
cmp
push
lahf
mov
data16
pop
stos
jae
ja
and
fbld
jb
fldl
test
out
lds
daa
les
push
cwtl
xor
pop
outsl
pop
mov
or
pop
lods
sbb
push
mov
and
jmp
push
js
lahf
ficoml
inc
pop
add
cmc
scas
jge
pop
push
js
cltd
les
jecxz
aaa
xchg
jg
pop
insl
fldt
sub
sbb
xchg
sbb
sahf
movsb
ret
arpl
repnz
pop
int
psubb
cs
inc
out
pop
mov
and
sbb
xor
aas
test
pop
pop
jb
push
jnp
dec
cmp
xchg
jle
testb
cltd
popf
mov
pushf
test
sbb
mov
cltd
xchg
or
sub
out
and
shl
pop
add
lods
test
dec
push
leave
xor
lods
mov
dec
and
mov
fisubl
mov
jle
arpl
xchg
pop
pop
mov
cli
rorl
or
mov
pop
sbb
pop
mov
cltd
pop
ja
cmp
repnz
sbb
fs
test
data16
out
loopne
dec
mov
sbb
lea
pop
cmpsb
shl
int
scas
mov
sbb
scas
sbb
jae
cmc
inc
pop
mov
stc
test
pop
mov
dec
sub
mov
inc
push
loopne
and
int3
mov
push
das
sbb
dec
or
sbb
pop
cmpsb
in
push
stc
cmpsl
int
pop
ret
fld
repz
testl
push
lret
and
aam
sar
out
or
dec
pop
or
sbb
test
add
xchg
loope
inc
gs
mov
sbb
push
sbb
jl
add
inc
popf
rorl
pop
test
dec
xchg
pop
or
shlb
jmp
loope
inc
pop
in
xchg
mov
sub
cltd
mov
jl
push
pop
push
fbld
pop
lahf
jg
and
pop
jne
rorb
pop
bound
sti
push
push
icebp
inc
sub
xor
mov
loope
jmp
std
test
mov
lock
fidivrl
push
jp
pop
lret
insb
cli
stc
int3
ficoml
mov
fsubs
into
mov
pop
pop
fwait
mov
lret
sub
pop
stos
cld
push
sti
xor
pop
and
pop
push
mov
test
in
test
daa
pop
mov
xchg
dec
imul
sbb
popf
xchg
cmpsl
gs
jle
pop
and
lret
cmp
lahf
cmp
loope
inc
cltd
arpl
jle
pop
mov
push
lock
out
and
loopne
pop
out
lods
lret
jne
push
fcompl
pop
inc
xor
lcall
push
cmp
inc
mov
gs
jl
std
jnp
pop
jae
mov
pop
movsb
add
test
pop
push
inc
mov
sub
xchg
lcall
cmp
fwait
pop
fs
push
pop
xchg
pop
mov
ret
iret
fbstp
pop
test
cmpsb
lret
pop
pop
adc
adc
cwtl
je
into
and
nop
and
lahf
cs
push
popa
fistpl
jmp
shlb
sbb
or
pop
data16
nop
xlat
fidivrl
xor
push
xchg
test
and
fcmovu
inc
nop
mov
lcall
pop
push
mov
repnz
pop
fdivl
xchg
push
movb
lods
pop
dec
mov
pop
pop
int3
inc
xchg
push
inc
pop
xchg
push
or
lret
jge
pop
dec
pushf
dec
test
hlt
pop
clc
pop
inc
shlb
mov
cmp
lds
sti
sub
pop
push
and
aam
mov
sbb
lods
or
pop
sbb
adc
or
popf
xor
cmpsb
mov
les
ss
fstpt
mov
out
push
cmp
and
jmp
xchg
inc
pop
imul
pop
jge
mov
pop
push
movsl
xor
and
out
push
rdmsr
xchg
cmp
gs
dec
insb
cld
hlt
stc
and
scas
mov
dec
pop
inc
das
fmul
dec
cli
pop
lods
mov
xor
mov
push
xchg
pushf
je
pop
inc
ret
cmp
stc
mov
pop
mov
push
and
shrl
pop
jmp
stos
push
andl
jb
pop
xchg
add
cmc
pop
add
sub
push
dec
xor
pop
dec
shrl
dec
and
mov
pop
pop
mov
pop
sarl
adc
dec
push
aaa
pop
into
mov
mov
xchg
sub
bound
cmpsl
adc
hlt
icebp
pop
push
repnz
jge
cmp
pop
int
cli
jbe
mov
push
sbb
xchg
int3
fisttpl
lock
xchg
adc
pop
fildl
jo
adc
pop
adc
xchg
stos
pushf
jg
popa
or
and
in
pop
mov
arpl
push
pop
inc
popa
pop
je
call
sbbl
pop
or
mov
bound
mov
or
inc
leave
pop
mov
fisttpll
shlb
cs
cmp
sbb
gs
sarl
aas
fmull
mov
int3
repnz
mov
add
push
dec
sbb
mov
rcrl
add
add
nop
pop
pop
inc
arpl
scas
aas
push
dec
mov
push
pop
mov
addl
sar
out
push
push
add
insb
in
in
mov
cltd
mov
jp
push
dec
and
insb
into
xor
sub
je
pop
xor
clc
into
xchg
pop
or
sbb
add
mov
push
pop
mov
pop
or
adc
fstpl
mov
cs
inc
bound
int3
lret
cwtl
mov
fildl
pop
push
jl
and
in
push
fdivl
sub
sbb
notl
fucomp
ror
int3
mov
outsl
mov
and
rcr
inc
aad
mov
aam
xchg
fdivrl
mov
push
pop
pop
fsubrs
dec
push
outsl
jns
pop
orb
addl
cltd
add
xor
pop
shll
adc
insl
jl
mov
pop
repz
jno
notb
and
xchg
js
add
rcl
pop
adc
iret
mov
cmp
mov
and
mov
sbb
pop
mov
mov
sub
dec
arpl
sbb
test
sbb
xchg
jae
pushf
scas
addr16
cmp
or
mov
mov
pop
int3
outsb
pusha
int
xchg
push
loop,pt
sub
pop
test
scas
inc
aam
rorb
ficoml
test
pop
popf
push
stos
mov
pop
in
sahf
pop
adc
lret
xor
fs
fnsave
je
mov
aaa
lods
fldt
insb
pop
add
cmp
clc
xchg
imul
scas
push
pop
sub
and
cli
pop
or
jecxz
add
rcrb
ret
gs
and
lods
cmpsb
pop
in
fildll
xor
lret
dec
adc
popa
sub
adcl
fcmovnu
scas
stos
notb
pop
aad
push
and
pop
jl
jns
lods
mov
pop
mov
ds
fs
gs
cmp
xchg
or
rorl
je
mov
ss
or
addl
adc
pop
clc
jb
sti
fsubrs
in
sub
sub
mov
mov
pop
and
sti
add
loopne
scas
jp
test
add
test
test
out
ret
pusha
ds
jae
sbb
icebp
mov
pop
sub
sbb
xchg
stos
mov
xlat
fldenv
pop
sub
shl
and
pop
push
dec
or
loope
enter
int3
xlat
mov
pop
cltd
sahf
out
in
lahf
std
shlb
inc
fs
pop
cmpsb
in
pop
nop
iret
mov
leave
mov
xor
shll
cmc
xchg
dec
cld
pop
add
inc
xor
adc
mov
mov
adc
inc
pop
call
aas
stos
mulb
xor
pop
fadds
push
and
sub
lahf
cmpsb
push
jns
imul
insb
pop
in
fsubr
je
fildll
sbb
test
sub
lahf
pop
cmp
mov
addr16
shrb
std
push
push
sbb
mov
mov
adc
outsb
stc
sbb
mov
dec
cltd
xchg
dec
add
iret
cltd
sbbb
outsb
movsl
inc
jmp
pop
stc
cltd
mov
add
pop
stos
add
mov
ja
jmp
out
idivb
aad
sub
mov
xor
xchg
pop
mov
pop
daa
or
bound
jecxz
fadds
pop
out
repnz
call
popf
xchg
jne
imul
dec
cmp
out
cltd
xor
testl
int3
icebp
popf
mov
cmc
int
loope
or
pop
arpl
pushf
and
in
imull
jae
sbb
and
out
int3
out
fs
ljmp
ss
add
sub
scas
jbe
pop
lret
ljmp
mov
clc
pop
jns
push
dec
pop
lods
cmp
xchg
stc
jmp
or
jns
mov
jae
or
stos
enter
xchg
pop
pop
mov
divl
pop
int3
mov
jns
pop
mov
dec
ror
jmp
outsb
pop
mov
push
loopne
int3
sub
scas
addl
push
into
dec
pop
loopne
pop
jne
das
xor
mov
fldenv
dec
in
stos
clc
loop
pop
call
pop
leave
mov
fwait
jle
xchg
clc
mov
xor
call
jl
dec
scas
dec
jbe
out
and
cmp
inc
jmp
add
or
lock
jo
push
or
scas
std
icebp
lods
mov
mov
and
jb
adc
fistl
jecxz
mov
mov
ja
mov
pop
mov
xor
icebp
sbb
push
inc
and
jns
pop
enter
mov
mov
fldt
or
outsb
pop
aas
xor
xchg
and
dec
in
dec
cmp
xor
cwtl
jb,pn
xchg
cmpsl
sahf
pop
pop
fldl
out
in
jge
insb
adc
push
xor
fidivrl
lock
sbb
or
int
jl
ja
mov
mov
pushf
sbb
inc
pop
xor
jbe
lret
leave
mov
test
arpl
testb
mov
push
out
loop
stos
rcl
xchg
push
sbb
dec
add
aam
mov
in
push
pop
test
movsl
dec
mov
fnclex
inc
add
inc
jo
mov
imul
sub
pop
pop
mov
adc
inc
gs
cmp
mov
test
loope
lds
mov
decb
pop
add
cwtl
adc
jecxz
inc
xlat
pop
and
pop
cld
jno
in
pop
idivb
jnp
push
inc
daa
jecxz
push
inc
cwtl
daa
insl
xor
in
adc
pop
repnz
mov
pop
sahf
and
inc
sub
shll
sub
jle
leave
jecxz
xchg
fsts
fcoml
mov
mov
xorl
push
sub
ds
pushf
clc
push
mov
fcmovu
mov
es
jmp
adc
fisubl
and
sar
or
inc
shlb
push
int
xchg
loope
and
insl
test
xchg
aaa
xor
or
sub
xchg
push
pop
pop
add
inc
cmp
fiadds
sbb
lahf
cmp
dec
sbbb
mov
cmp
xchg
jo
cs
pop
leave
mov
dec
mov
push
pop
pop
dec
or
mov
jns
mov
push
ficompl
out
and
pop
fs
shlb
dec
xor
test
mov
stc
ret
mov
outsl
pop
test
jl
dec
pop
std
pop
push
jo
aam
adc
stos
fstps
pop
pop
xor
fildl
mov
je
rolb
repnz
and
dec
addr16
insl
or
cmpsl
dec
inc
sub
loop
dec
jl
fnstsw
push
cltd
jmp
cmc
mov
lods
jle
jbe
imul
mov
int
fdivrs
xor
jns
pop
cmpsl
cmp
pop
push
pop
pop
mov
rolb
clc
mov
arpl
xchg
or
pop
in
test
fwait
mov
outsl
push
jge
repz
jno
inc
into
sbbl
fnstsw
cmc
cltd
adcb
dec
test
push
jp
pop
aam
in
fidivrs
add
sbb
sbb
orb
pop
psubusw
lcall
es
jge
xchg
clc
aaa
push
out
jecxz
arpl
or
shrl
fmuls
cld
mov
into
mov
or
lea
mov
in
repnz
pop
in
push
sub
xor
aas
iret
pop
xlat
add
ljmp
sahf
pop
jle
pop
clc
ds
jno
imul
adcb
mov
int
pop
cmp
fstpl
scas
leave
cli
insb
cmp
nop
mov
sbb
or
enter
mov
ficoml
mov
sarb
test
fdivl
dec
rorb
or
loope
hlt
pop
imull
mov
and
test
stos
pop
push
dec
cltd
mov
mov
out
jl
pop
pushw
pop
push
mov
jmp
mov
gs
sti
dec
test
pop
dec
pop
push
push
cli
lock
or
mov
and
xchg
call
jge
or
pop
dec
je
imul
mov
pop
sahf
test
xor
or
xor
aad
repz
mov
mov
sahf
ss
aad
cmp
pop
jno
dec
add
cmp
xchg
pop
out
dec
fsts
pop
loop
leave
nop
push
lahf
rcll
jb
mov
xchg
dec
repz
jbe
jnp
inc
pop
push
pop
pop
adc
push
in
mov
add
push
jb
pop
cmpsl
scas
mov
std
adc
sbb
out
or
daa
popa
push
pop
nop
les
movsb
sbb
mov
mov
xchg
notb
xchg
jmp
popa
push
pop
jge
shlb
add
lahf
rcll
inc
mov
dec
pop
adc
cmp
push
sub
mov
in
sub
or
sbb
pop
push
loop
mov
sarl
inc
sub
jp
out
cmp
outsl
cmpsl
lret
pop
mov
ljmp
mov
aaa
pop
test
int
sbb
test
aas
cmp
mov
xchg
outsl
pop
and
scas
or
pop
fwait
out
fnstsw
mov
xlat
insl
flds
pop
outsl
push
out
and
push
push
cmc
pop
and
sbb
stos
mov
pop
push
fdivl
mov
jb
icebp
cmc
rcrl
fnstenv
ret
push
pop
mov
or
addb
inc
xor
fcompl
dec
or
dec
jmp
mov
xor
ljmp
ret
sub
sbb
lret
mov
mov
push
popf
pop
xchg
daa
ss
pushf
push
lods
clc
push
dec
jl
xchg
out
xchg
pop
sbb
mov
stos
in
lcall
imul
loopne
sbb
fnsave
xorl
mov
pop
jle
or
xchg
jae
incl
and
pop
aas
mov
sbb
inc
into
popf
jmp
scas
popa
shlb
mov
int
cmp
mov
lods
sbb
ljmp
sub
lcall
push
test
and
mov
pop
lahf
push
hlt
inc
pop
fldcw
ja
pop
fstl
int3
mov
adc
outsl
jecxz
push
push
push
enter
es
push
xor
pop
pop
int
inc
pop
cmpsl
jg
das
pop
mov
push
ds
mov
sbb
in
rcrl
xor
sbbl
insl
int3
enter
mov
lret
das
mov
add
mov
dec
mov
test
jle
outsb
scas
mov
xor
out
out
jbe
mov
pop
gs
jne
jp
or
imul
xlat
sub
fisttpll
inc
and
stos
jo
ret
xchg
in
push
daa
cs
pop
aad
inc
fisttpl
je
pop
aam
dec
loope
jmp
clc
jmp
dec
add
fbstp
int
lcall
or
out
scas
push
rol
xor
test
aam
add
xchg
or
pop
das
push
cmpsb
pop
sub
jmp
aas
pop
mov
jnp
jp
push
add
dec
sbb
loopne
ljmp
push
pop
xor
and
out
pop
fimuls
adc
dec
int3
mov
inc
cmpsl
push
aam
jo
cmp
ljmp
jmp
or
inc
sub
loope
fcmovbe
sbb
in
and
jge
xor
clc
dec
fists
movsl
pop
sbb
scas
nop
cmp
xor
add
pop
mov
rorl
ljmp
in
pop
pop
gs
cmc
and
cmpsb
pusha
sbb
int
xor
test
int
pop
or
and
pushf
pop
add
xchg
pop
je
pop
leave
dec
hlt
lahf
dec
repz
cmp
int3
mov
aas
je
dec
inc
mov
or
adc
insl
shll
push
faddl
mov
arpl
es
fisttpll
imul
mov
aaa
pop
inc
jp
fwait
pop
pop
push
je
stos
pop
iret
cmp
scas
add
mov
pop
pop
dec
adc
jno
mov
ret
fisubrs
mov
pop
mov
sbb
and
inc
movsb
leave
lret
shll
cmpb
adc
es
jne
addr16
sub
or
inc
hlt
push
lods
sbb
in
xchg
sbb
fstl
gs
mov
sub
movsl
cmp
fcompl
mov
pop
push
jno
fstpt
int
shrb
pop
mov
fnstcw
cmp
stos
pop
adc
mov
mov
pushf
mov
fucomi
mov
inc
add
jne
sbb
pop
mov
xor
or
pop
pop
add
dec
pop
inc
mov
mov
pop
jbe
lcall
lret
fistps
mov
int3
sub
sub
lret
mov
jb
notl
fdivl
addr16
mov
xchg
scas
jns
dec
pop
lret
push
xchg
sbb
fstpt
adc
and
pop
insb
or
ja
sbb
pop
sti
mov
andb
shrl
lock
push
add
pop
jb
inc
in
ljmp
push
ljmp
jmp
and
xchg
jge
xchg
or
mov
bnd
jo
or
mov
mov
dec
pop
mov
pop
test
pop
push
jae
inc
inc
jns
outsb
pop
mov
mov
pop
lret
fcoms
sub
mov
pop
mov
push
sti
fimuls
or
daa
cli
jp
xchg
das
int3
lcall
scas
arpl
pop
mov
jno
mov
pop
lcall
lret
int3
mov
cmp
repnz
in
insl
adc
cld
mov
pop
push
xor
jno
dec
pusha
ret
test
mov
into
push
arpl
mov
imul
xchg
loope
fwait
jo
sbb
xlat
fsubrs
int
mov
push
arpl
mov
fdivs
pop
mov
out
and
stos
int3
push
inc
and
das
fisubl
sbb
and
mov
fabs
lcall
dec
aad
ret
push
iret
fisttps
lock
out
jle
js
pop
dec
lods
ret
sub
movsb
mov
adc
push
int3
dec
lret
mov
shlb
pop
decl
pop
mov
cmp
icebp
push
sbb
add
pushl
test
fbld
sahf
pop
int
ss
sub
pop
aam
and
push
popf
mov
pop
int3
call
repnz
sbb
enter
daa
loopne
or
jb
pop
jl
gs
pop
push
pop
leave
jbe
mov
stc
mov
dec
inc
hlt
fwait
adc
mov
hlt
cmp
push
jmp
and
roll
lock
pop
pushf
aas
cmpsb
iret
dec
jbe
data16
aaa
fwait
adc
mov
mov
add
test
dec
xor
cmp
xchg
push
leave
xchg
cmp
mov
test
inc
pusha
repz
pop
in
add
cmpsl
lahf
shl
stos
sub
pop
lret
mov
mov
xorb
divl
pop
or
xor
push
pop
int
or
pop
or
mov
pop
push
mov
xchg
jl
push
pop
arpl
pop
add
loopne
or
popl
push
push
pop
mov
adc
jnp
dec
bound
mov
mov
hlt
ss
xor
sbb
inc
pop
fstpt
xchg
loope
int3
dec
mov
inc
dec
ja
pushf
lds
outsb
push
lock
inc
pop
mov
scas
cmp
jbe
or
dec
popa
pop
pop
lods
add
jb
jle
cli
pop
xchg
ret
lock
push
mov
fdivrl
xchg
insb
sbb
cli
jb
dec
mov
cltd
and
cmp
ljmp
push
int
add
ficoml
sbb
clc
enter
daa
dec
pop
push
test
pop
adc
xchg
or
fcomps
insb
mov
mov
subl
inc
mov
fcoms
in
mov
mov
push
dec
adc
int3
sub
call
mov
pop
adc
pop
or
lods
mov
pushf
int
out
dec
jae
cwtl
pop
push
out
loope
mov
mov
mov
jge
jmp
jle
das
lds
pop
into
mov
add
xlat
adc
adc
pop
es
int
sub
pop
mov
sbb
inc
popa
xchg
outsl
sbb
or
int
popl
dec
test
dec
mov
out
sub
inc
mov
pop
dec
mov
dec
int3
sub
out
not
repz
scas
push
xor
lret
cmc
lcall
xlat
inc
pop
jb
aam
jle
lods
in
pop
stc
aad
mov
enter
bound
insl
jae
pop
or
addr16
lds
push
dec
repz
aad
lods
mov
cmp
push
push
inc
pop
inc
fistpll
loope
adc
leave
pusha
dec
sub
jbe
and
int
jmp
dec
aas
sbbb
in
lea
push
or
sub
pushf
in
bound
xchg
xchg
mov
lret
int
add
lret
jno
mov
and
shrb
ret
dec
xchg
cwtl
lahf
jo
and
gs
jg
repnz
lods
mov
test
lret
lret
push
fld
sbb
pop
lcall
mov
sbb
addr16
sub
roll
jo
scas
lret
data16
in
jmp
xchg
pushf
inc
pop
lcall
xchg
pop
ret
movsl
mov
pop
sahf
out
or
inc
xchg
sub
sub
sub
push
xlat
es
dec
mov
les
ss
cmpb
sbb
out
pop
in
dec
jge
lods
aad
stc
mov
add
ret
add
dec
ss
lea
sub
xor
scas
inc
push
pop
add
lds
cltd
pop
sbb
jl
hlt
loope
movsb
lret
sub
int
mov
mov
pop
imul
mov
jmp
cmp
jo
pop
bound
dec
mov
out
sbb
scas
adc
mov
shll
ljmp
loop
jge
xor
out
insl
pusha
jb
add
dec
aaa
subl
ljmp
or
mov
pop
sbb
jp
cltd
sbb
xchg
adc
pop
test
sarb
mov
cmpsl
inc
icebp
sub
mov
idivl
test
pop
sub
mov
imul
sbb
sbb
pop
sub
sub
out
insb
shlb
clc
int3
xlat
aas
push
cmp
cmp
mov
jbe
cli
cli
mov
test
cltd
mov
jle
lahf
mov
inc
int
fsubrp
scas
les
mov
mov
push
sbb
adc
xor
sbb
stos
mov
mov
xchg
adcl
shr
adc
pop
jge
mov
xchg
mov
scas
cmp
pop
out
and
cmpsl
stc
cwtl
pusha
xchg
pop
dec
jo
in
in
sbb
mov
gs
dec
ljmp
rorl
mov
push
mov
add
pop
cmp
data16
nop
push
xor
push
loope
jnp
and
jo
scas
pop
or
jmp
addr16
jns
sti
cs
adc
adc
mov
jg
aam
or
jle
mov
fmulp
dec
movsl
jo
repnz
jge
sub
pop
int
sbb
into
clc
push
or
push
push
addr16
jbe
outsl
mov
std
imul
fwait
leave
loope
mov
pop
aaa
adc
lret
pop
pop
sti
call
add
mov
fcomps
sub
add
loop
jge
push
pop
add
pop
lret
mov
pop
push
lret
stc
test
xchg
in
sub
pop
add
push
popa
add
test
jecxz
jne
pop
addr16
mov
inc
sbb
pop
or
pop
xor
pop
repz
sbb
xchg
dec
into
js
fimuls
or
or
ret
data16
dec
leave
pop
adc
loop
xchg
or
xor
fcmovb
xchg
cmp
mov
sub
sbb
push
lahf
or
fs
lods
aaa
shrl
cmp
pop
jbe
outsl
mov
pop
rcl
xor
arpl
jno
jp
sub
cmp
popa
stc
cmpsl
pop
loop
pop
dec
fistpll
pop
arpl
mov
jae
dec
cmp
iret
pop
and
int
inc
cmp
jbe
inc
jp
adc
es
mov
jecxz
jns
sub
sbb
sbb
ss
daa
scas
scas
jmp
pop
sbb
inc
lret
mov
adc
stos
fimuls
jnp
ja
dec
cwtl
sahf
ds
dec
pop
pop
push
movsl
pop
cld
adc
mov
pop
cltd
andl
int
mov
xor
mov
pop
btr
xchg
ja
sti
pop
xchg
mov
ficompl
int
add
ret
es
pop
fucomip
je
fdivr
fisubl
pop
int
sbb
divl
pop
gs
insl
add
lret
pop
cmp
lcall
xorb
push
pop
jnp
mov
sbb
sarl
xor
cltd
das
mov
in
jno
pop
in
and
lods
orb
xchg
les
imul
add
in
pop
xchg
cmpsl
mov
inc
mov
dec
jne
pop
fldt
std
mov
cmpsb
mov
rcr
pop
sbb
mov
mov
mov
out
xor
jbe
repz
in
lods
dec
cmp
ficoml
pop
daa
hlt
nop
int
add
pop
xor
stc
and
cltd
mov
ss
adcb
addr16
pop
cltd
pop
adcl
popf
sbb
pop
mov
outsl
sbb
pop
sbb
sub
repz
out
hlt
cli
push
pop
gs
mov
pop
ja
ficomps
push
fsts
cmp
pop
add
cld
mov
pop
mov
mov
push
jbe
cmp
xlat
movsb
or
in
inc
xchg
rcrb
and
xchg
repz
ficompl
mov
jo
shll
lahf
addr16
inc
inc
aaa
cwtl
mov
cmp
mov
loope
cltd
jge
dec
pop
pop
add
mov
pop
clc
inc
and
adc
je
xchg
mov
sti
cmpsl
test
xchg
ja
mov
outsb
out
cs
mov
div
xchg
xchg
lods
leave
fildl
out
aas
and
xor
jecxz
in
lret
pop
addr16
xchg
stc
fs
int3
mov
scas
pop
add
and
jge
jle
fs
mov
xchg
out
repz
push
push
fiaddl
lea
test
pop
pushw
sbb
nop
sti
mov
pop
jb
movsl
repnz
xor
lods
cmp
pop
mov
sub
mov
and
nop
sbb
stos
pop
in
jno
sbb
rcrl
inc
je
sub
push
out
sbb
mov
xor
out
sub
scas
adc
inc
push
or
je
dec
ret
jecxz
push
pop
scas
mov
std
mov
ret
pop
and
or
sbb
push
pop
jecxz
adc
int3
and
push
add
pop
in
fsubs
addb
xor
stos
cltd
sub
push
shl
pop
cmpsb
test
cltd
repnz
jmp
cmp
dec
inc
pop
cs
inc
mov
add
pop
int3
insb
out
mov
inc
pop
mov
cli
mov
cmp
daa
popa
push
repnz
mov
jne
frstor
out
arpl
sbb
std
pop
inc
mov
push
inc
bound
shrb
rcrl
out
pop
mov
or
mov
inc
loop
push
call
mov
xchg
jno
add
arpl
push
call
xchg
js
jle
pop
pop
ret
dec
dec
fs
test
jne
sbb
stc
fnstsw
movl
xor
and
jo
out
mov
xchg
loope
add
enter
pop
call
adc
in
mov
insl
pop
imul
jle
aas
mov
jge
pop
inc
int
mov
jb
outsl
push
hlt
in
lods
dec
xchg
stos
or
jne
jns
pop
jp
add
movsb
pushf
mov
push
push
cmc
flds
pop
flds
pop
mov
dec
pop
jp
push
bnd
dec
push
imul
fsub
xchg
pop
je
out
inc
sbb
scas
lods
add
fimuls
xor
inc
jae
cwtd
jl
mov
test
int
fiadds
pop
fs
aam
jae
sub
adc
sbb
xchg
dec
pop
insl
xlat
dec
les
mov
push
pop
jne
lret
mov
sub
jo
cli
les
lds
ror
adc
popa
ss
or
pop
push
dec
imul
pop
jmp
movsb
mov
stos
aas
or
mov
shl
xchg
dec
mov
stos
out
pop
ret
jb
pop
push
push
and
popf
add
insl
aad
xchg
or
push
pop
mov
imul
lods
push
sub
pop
dec
jae
loope
sbb
ss
push
mov
xchg
addr16
add
data16
popf
dec
bound
or
pop
xchg
add
cmp
push
repnz
je
xchg
fdivl
push
fildll
cmp
clc
lret
std
dec
addr16
mov
hlt
or
stos
jp
fdivrl
lret
test
pop
mov
push
mov
cli
pop
dec
sbb
and
adc
sbb
cmp
test
data16
mov
jl
je
adc
mov
aam
cmp
stos
jle
xchg
movsb
dec
sbb
add
and
and
fxch
sahf
inc
mov
adc
repnz
das
popf
jmp
pop
adc
mov
fistpll
jo
cltd
cmp
fisttpll
lods
mov
stos
icebp
mov
notl
dec
mov
stos
pop
roll
lret
and
loopne
mov
fldl
stc
or
push
mov
add
fistl
pop
add
arpl
sbb
sub
std
dec
pop
int3
jl
jo
imul
xchg
shrl
dec
addr16
mov
sbb
xchg
and
sbb
jnp
mov
pop
repnz
in
push
push
int
mov
in
ret
popa
subb
xor
lods
sbb
shlb
sti
jb
cmp
in
negb
into
inc
mov
lea
mov
pusha
cmp
in
frstor
mov
push
mov
rcrl
dec
das
cmpsl
mov
cmp
or
fmuls
push
pushf
pop
cltd
jbe
or
mov
xchg
adc
add
inc
adc
xor
adc
sbbb
testl
pop
ret
fcomps
fnclex
jecxz
test
or
xchg
sbb
mov
outsb
pop
sub
pop
fidivl
cld
push
jmp
dec
aas
sub
loopne
fcomps
push
or
mov
and
sbb
dec
cmp
ret
pusha
jns
popf
push
arpl
sbb
add
pop
test
push
pushf
outsl
arpl
adc
pop
add
lcall
sbb
cli
popf
jnp,pt
sbb
pop
nop
hlt
pop
cmpsb
jbe
push
push
insl
aaa
aam
lods
or
pop
movsb
fs
int3
lret
fcoml
lret
inc
int
pop
in
xchg
jae
or
push
test
mov
mov
rclb
andb
aam
repnz
addr16
pop
into
fsubr
mov
cwtl
insl
loope
push
jmp
repnz
and
movsl
push
mov
sbb
std
sbb
nop
xor
lahf
mov
pop
int3
sub
loopne
push
inc
lea
fistps
adc
xchg
add
sbb
bound
jbe
xchg
in
subb
int3
sbb
int
addr16
cmp
fwait
pop
pop
add
popa
xchg
mov
rolb
shrl
pop
int
lret
pop
mov
fistpl
mov
int
rcr
sbb
adc
pop
cltd
adc
dec
mov
add
mov
push
xor
jnp
and
shrl
leave
pop
mov
int3
test
in
ficomps
aad
pop
jbe
into
xor
pop
mov
push
and
inc
xchg
int3
pop
xor
xor
ror
mov
imul
sub
xchg
sub
xchg
or
and
push
ret
pop
daa
popf
push
das
and
lahf
mov
cmpb
or
jo
cmp
mov
out
mov
js
rcrl
or
and
mov
int
fbstp
out
sub
inc
call
ljmp
adc
push
xor
int3
pop
sub
sub
daa
cltd
in
aam
repnz
insb
pop
js
loopne
push
repz
fcomps
inc
lahf
pop
push
scas
dec
jnp
mov
jge
jo
lea
inc
pop
xor
xchg
fs
int
jno
push
xchg
push
shl
mov
dec
int3
jne
scas
ficoml
aas
test
mov
mov
xchg
dec
adc
cs
mov
pop
and
stc
les
xchg
jecxz
and
sbb
inc
cmp
dec
mov
clc
jne
push
lds
mov
inc
mov
test
rolb
jg
fisubl
cmp
pop
push
dec
call
jnp
pop
aam
dec
push
pop
mov
sarb
sub
iret
jae
aad
out
aas
js
and
xchg
xchg
mov
ficoms
fxch
fdivrl
lret
sub
adc
pop
test
sti
fbstp
pop
pop
outsl
fsubs
adc
dec
and
pop
xor
jecxz
mov
mov
pop
cmp
pushf
dec
in
mov
or
ret
lock
mov
hlt
pop
lahf
dec
call
es
push
out
incb
pop
mul
mov
and
dec
pop
xchg
sbb
cmp
pop
jbe
adc
sub
or
loop
sbb
mov
or
jge
fstps
xlat
dec
dec
pop
push
int3
sbb
shrl
nop
xor
jg
call
xchg
adc
add
incb
or
pop
push
dec
repnz
push
adc
dec
int
inc
mov
sbb
push
or
inc
out
fnstsw
int
jb
cmpl
int3
push
jbe
push
dec
es
pop
stos
pusha
jb
test
loope
jo
jecxz
pop
cmpsl
pop
repnz
rcr
sbbl
inc
adc
fdiv
mov
loope
lea
push
jbe
mov
fldcw
lret
pop
jnp
mov
fsubrl
sub
sbb
sti
pop
fwait
dec
push
pop
xchg
test
xlat
mov
pop
das
jb
ds
mov
icebp
jp
xor
pop
mov
int
and
sbb
mov
cmp
iret
js
bnd
mov
pop
fiadds
rorb
and
je
jae
jp
cmp
lahf
mov
sbbb
cmp
pop
insl
sub
dec
cli
les
test
pop
fldt
in
or
adcb
fcompl
mov
inc
pop
mov
pop
xchg
outsl
mov
jns
js
jb
adc
les
movsl
xchg
jp
mov
ret
subb
add
aas
imul
outsl
stc
push
adc
call
lahf
mov
push
pop
fcmovb
lcall
stc
mov
mov
andl
movsbl
xchg
dec
push
xor
fs
lahf
jg
mov
dec
sub
sbb
rcll
mov
neg
lahf
cltd
cmp
ret
dec
adcl
pop
adc
movsb
int
flds
push
pop
xor
sub
pop
ficomps
dec
test
int
cmpsl
mov
mov
lahf
mov
fldenv
fldl
push
mov
fs
adc
shlb
pop
lret
popa
or
repz
push
js
mov
loope
lahf
pop
mov
cld
ljmp
adc
fst
insb
int
pusha
test
cmp
push
mov
pushl
roll
pop
sub
scas
popa
sahf
lock
mov
mov
jbe
pusha
pop
pop
in
xchg
push
mov
lret
jo
lods
pop
or
jns
dec
push
pop
mov
sbb
sub
pop
int
popa
xchg
pop
imul
lahf
mov
dec
dec
cmpsb
hlt
out
outsl
xlat
pop
cmpsl
and
sub
cmc
mov
add
icebp
xchg
and
sets
mov
scas
fstps
cmp
cltd
fwait
pop
cs
mov
inc
cmp
mov
pop
data16
int3
xchg
inc
pop
out
fsts
jno
xor
mov
or
sbb
addl
daa
inc
inc
pop
nop
dec
push
scas
or
gs
int
and
push
pusha
sahf
sub
xchg
cmp
and
nop
xchg
clc
daa
lret
pop
dec
in
jo
rorl
mov
sar
sub
outsb
pop
and
jo
add
push
mov
popa
loop
pop
inc
enter
jbe
cmp
pop
imul
int
xchg
pop
idivb
jbe
pop
sarb
jo
inc
and
pop
pop
movsl
imul
push
adc
push
cmp
aaa
mov
inc
pop
fistps
arpl
fbstp
lods
int3
push
pushf
scas
add
mov
jbe
daa
ss
pop
loopne
and
int
loop
fisttps
shlb
aam
scas
pop
cld
int3
or
inc
adcb
pop
in
jecxz
sub
mov
pop
push
inc
int
mov
loop
sub
in
jae
cmpsl
data16
xor
popa
sub
cmp
mov
shl
test
data16
jecxz
xchg
mov
pop
mov
sub
fsubrl
pop
cmpsb
mov
loopne
rcrl
adc
sahf
mov
mov
push
jns
adc
pop
int3
sbb
inc
int
xor
rorl
pop
js
dec
mov
jns
mov
sti
cmp
lret
xor
lds
pop
pushf
int
loopne
xchg
pop
inc
mov
data16
cli
pop
fwait
stc
pop
sub
int3
inc
dec
inc
pop
lcall
rcr
pop
fadds
pop
aaa
out
and
repnz
pop
mov
xor
mov
pushf
leave
ficompl
jge
stc
fdivrs
int3
cwtl
pop
ret
lock
dec
jmp
int
pop
out
pop
in
call
pop
push
sbb
sbb
or
add
pusha
pop
int
outsl
repnz
adc
int3
stos
loopne
inc
push
sub
pop
inc
cmp
les
mov
jbe
pop
dec
and
jae
cmc
mov
lret
push
and
mov
aas
cltd
ja
xchg
dec
pop
outsl
xor
adc
addl
movsl
lock
xchg
xchg
mov
pop
adc
call
jbe
dec
mov
cwtl
les
pop
push
pop
leave
int
shl
enter
sub
iret
pop
fimull
popf
insl
mov
std
ds
test
fsubs
cmp
lcall
xor
mov
sbb
scas
xchg
push
cmp
cmpl
mov
pop
push
sub
lcall
mov
sbbb
xchg
and
jmp
test
pop
lock
add
mov
or
repnz
pop
shlb
rcrl
movsb
sbb
push
lea
mov
or
mov
in
into
inc
arpl
testl
fmul
jg
jl
or
adc
mov
mov
mov
dec
cmc
test
mov
or
mov
sbb
mov
jae
in
lret
pop
sbb
fsubl
mov
pop
jno
clc
dec
push
mov
xchg
and
std
pop
sbb
cmpsb
mov
loopew
pop
dec
int3
fldt
data16
popf
and
mov
cwtl
movsb
adc
sub
scas
xlat
push
das
inc
pop
outsb
stos
movsl
mov
push
and
lret
stos
ds
cltd
or
loopne
icebp
fsubrs
loop
nop
pop
inc
fs
out
mov
aas
dec
test
repz
xchg
jp
cmp
xor
dec
jno
scas
xchg
scas
pop
lock
pop
or
pop
pop
pusha
jns
jge
mov
icebp
pop
jae
add
aas
sub
sub
sub
pop
mov
adc
sub
sbb
pop
lea
fst
mov
xlat
or
gs
xchg
push
sub
jae
jbe
cltd
call
push
bound
lret
pop
or
push
jbe
cwtl
inc
aaa
stos
sub
mov
mov
out
dec
pop
call
jg
mov
mov
xor
and
inc
sbb
pop
jp
fdivrs
sub
sahf
jge
pop
leave
cmp
mov
addr16
pop
dec
jbe
pop
loopne
jb
test
or
pop
lahf
inc
push
sub
push
mov
dec
out
cmp
add
cmp
inc
pop
pop
fs
jb
inc
pop
sub
fistps
int
and
sub
or
aam
notb
and
aad
sahf
xor
lds
push
jecxz
pop
fxch
stos
outsl
mov
std
sahf
lcall
sbb
out
stos
mov
sbbb
push
pop
shlb
pop
inc
mov
or
jb
pop
lahf
pop
ja
pop
fstpt
pop
int
pop
or
adc
shll
aam
xlat
mov
insb
pop
push
sub
xchg
data16
mov
enter
adc
ja
jns
push
add
jo
or
jge
mov
pop
pop
jns
lcall
pop
shrl
push
call
push
pusha
pop
negb
inc
add
aad
mov
ucomiss
inc
lret
int
xchg
test
pop
popa
sbb
jp
cli
mov
lods
cmpsb
xor
fs
pop
add
aaa
stos
enter
mov
adc
jg
inc
mov
xor
mov
pusha
outsb
in
out
push
aad
daa
and
mov
cmc
stc
mov
testl
loopne
int3
sbb
ror
pop
pop
push
loop
and
mov
leave
sbb
cs
fistps
gs
adc
mov
loopne
fcomi
push
mov
sahf
pop
in
dec
fisubl
inc
pop
shll
push
mov
inc
xor
or
sbb
adc
inc
adc
pop
clc
fs
cltd
pop
mov
xchg
addr16
push
mov
ss
inc
jb
andb
in
mov
lcall
mov
arpl
out
cmp
lret
mov
xor
icebp
mov
mov
lods
lods
or
rolb
cltd
cmp
ds
aaa
mov
out
mov
scas
xchg
cmp
xchg
inc
mov
inc
mov
jecxz
int3
push
pop
arpl
sub
pop
cld
test
dec
cltd
mov
orb
int
mov
jecxz
sub
inc
scas
das
mov
out
pop
mov
daa
mov
fucomp
cwtl
sub
inc
js
nop
xlat
aas
faddl
call
dec
scas
pop
ds
adc
ficomps
push
es
cwtl
and
ljmp
jg
out
push
xchg
daa
sbb
pop
jge
push
push
dec
sbb
dec
pop
and
fdivr
call
dec
outsb
dec
arpl
mov
xrelease
xchg
pop
or
rcrb
lret
call
subb
dec
negl
xchg
inc
fmul
ds
mov
lahf
pop
in
pop
fidivl
jle
pop
in
fsubl
cli
fbld
mov
pop
test
cltd
hlt
popf
in
lds
adc
pop
outsl
ja
mov
mov
pop
pop
xlat
xchg
cmpsl
enter
in
aas
les
push
lods
cltd
pop
pop
and
mov
icebp
adc
int3
xchg
add
push
ja
push
jbe
cmp
mulb
and
add
push
mov
jbe
pop
cmpxchg
cmc
sub
test
jb
and
sti
or
pop
sti
cmp
mov
out
bound
mov
inc
jg
mov
xchg
jb
pop
das
mov
xchg
pop
bswap
push
cltd
bound
outsl
dec
xchg
rcrb
sub
dec
push
add
inc
sub
xchg
dec
clc
mov
jge
loop
xchg
lret
fistps
out
jbe
push
dec
adc
mov
js
lahf
aaa
pop
test
add
shlb
insl
dec
adc
sbb
sahf
lahf
cmc
pop
gs
lcall
hlt
aam
pop
scas
and
mov
je
pop
sbb
pop
int3
sbbl
xchg
pop
pop
mov
lds
test
jecxz
jo
sub
movl
push
sbb
jecxz
ss
pop
pop
inc
pushf
jle
pusha
mov
cli
push
or
push
sub
xchg
pop
or
jo
pop
ficoml
sti
xor
fdivl
pop
and
push
lret
dec
in
push
stos
pop
int3
pop
mov
mov
sbb
popa
jl
jb
mov
scas
add
mov
ja
adc
ljmp
adc
lea
fidivrl
fistpl
pop
subl
fmuls
pop
sbbb
je
imul
lods
jne
add
jmp
push
mov
pop
rorl
lock
mov
cmp
dec
adc
sub
push
jo
dec
add
push
out
or
pop
int3
aaa
dec
mov
pop
loope
addb
das
ja
cwtl
insl
pop
xor
cmp
ficomps
loop
fs
adc
divl
fcomps
mov
mov
sbb
nop
outsb
mull
lods
mov
push
lock
fsubs
fistps
adc
or
pop
adc
mov
sbb
dec
adc
push
or
int
andl
icebp
push
out
loope
pop
pop
xor
mov
int
xchg
repz
bound
push
rorb
loope
jo
out
push
sbb
mov
and
adc
fdivrs
sbb
cmp
jb
in
shlb
scas
xor
incl
cmp
inc
mov
fsubrl
xchg
cwtl
pop
dec
testl
data16
inc
lods
fstcw
popa
and
jp
xchg
push
fisttpl
cltd
insl
sub
pop
sbb
push
inc
push
mov
mov
xor
das
divl
adc
popa
lock
subb
push
sbb
mov
pop
call
push
mov
adc
sbbl
jb
stos
pop
std
loope
popa
sub
lock
pop
or
enter
mov
out
mov
cmpsb
cmp
sub
in
sti
xor
pop
adc
add
dec
jo
sbb
inc
orb
mov
mov
test
inc
mov
cmp
jge
aas
repz
xchg
xchg
aaa
or
dec
test
insl
adc
and
pop
dec
ret
fmull
test
sti
pop
jb
push
lahf
inc
add
jg
or
stos
pop
int
xor
push
stc
out
mov
mov
outsb
inc
lret
test
cmp
pop
lret
sbb
mov
adc
sbb
mov
ljmp
scas
fnsave
push
add
sub
xlat
pop
out
xchg
insl
hlt
xor
pop
mov
inc
xchg
jo,pn
pop
or
rcrl
out
popa
imul
push
cld
int
loopne
std
xchg
jecxz
inc
addr16
leave
dec
xor
cmp
pop
movsl
mov
gs
and
pop
fwait
jbe
xchg
test
pop
in
pop
mov
mov
jo
xchg
sbb
inc
fdivs
sbb
xor
dec
pop
dec
sbb
and
dec
ret
xchg
jns
int
subl
lcall
js
fldln2
sub
das
jns
jg
or
add
mov
xor
pop
lret
int
dec
gs
in
jns
lret
dec
xor
push
imul
mov
xor
cltd
js
pop
or
enter
icebp
add
or
dec
nop
int3
mov
outsl
fnstenv
scas
lret
mov
or
cmc
add
and
pop
stos
inc
fsubs
sbb
or
cmpsb
push
nop
sti
pop
jl
mov
or
mov
xchg
pop
jl
sbbl
jmp
mov
mov
cltd
adc
hlt
or
pop
aam
or
dec
daa
dec
bound
push
mov
dec
mov
enter
pop
movsl
adc
ss
mov
subl
dec
push
fiaddl
mov
pop
lahf
stos
loope
adc
sarl
sahf
pop
pusha
mov
mov
stos
and
iret
sbb
loop
popw
and
push
in
jnp
pop
jmp
lds
mov
sbb
dec
jns,pt
add
mov
orl
pop
pop
adc
in
fcompl
adc
mov
addr16
mov
and
scas
pop
ljmp
mov
mov
inc
or
sbb
popf
ljmp
mov
push
cmovge
xchg
pop
pop
inc
mov
fstl
stos
pop
int3
jp
mov
mov
fldenv
fcmovnbe
lock
sbb
dec
adcl
add
sbb
fldl
jecxz
fmul
pop
outsl
cmp
rcrb
fs
pop
rorl
sbb
pop
call
pop
imul
in
iret
xor
or
int
mov
cs
mov
sbbb
nop
add
rorl
scas
hlt
cltd
and
insl
lret
mul
enter
pop
lahf
int
cmp
pop
cmc
mov
jno
push
sbb
fstpl
lahf
dec
mov
xor
inc
rcr
xor
loope
and
or
adc
mov
fwait
lods
lret
psubusw
insb
mov
insl
xchg
xor
cmp
push
xor
and
jbe
dec
rol
cmp
stos
xchg
jl
ljmp
push
mov
gs
jecxz
mov
inc
adc
add
xchg
xchg
lea
mov
sub
pop
pop
sti
jo
int3
in
inc
ficomps
jns
adc
pop
in
add
gs
lcall
lods
mov
cltd
outsl
fucom
arpl
and
pop
mov
lods
pop
jnp
inc
jbe
mov
imul
jo
inc
mov
lods
jl
arpl
mov
scas
or
bound
stos
popf
xlat
jl
adc
daa
inc
cmc
lahf
cltd
add
jmp
or
imul
add
adc
push
pop
mov
push
mov
inc
or
mov
pop
sub
sub
pop
je
sub
stos
mov
adc
jbe
pop
pop
add
ret
pop
leave
and
jecxz
loopne
pop
shr
test
xor
fimull
mov
mov
dec
pop
bound
xchg
aas
dec
loope
pop
lret
popa
pop
pop
xor
sahf
dec
fs
ret
push
clc
pop
inc
dec
sbb
pop
and
fdiv
dec
xchg
pop
mov
imul
and
cmpsl
rorb
jo
pop
mov
sbb
fbstp
mov
outsl
sbb
sub
xchg
lods
inc
pop
and
pop
sarl
loope
inc
pushf
out
rcr
and
push
pop
je
xor
adc
out
and
ja
pop
shlb
push
lahf
int3
lret
test
int
jb
flds
dec
movsb
mov
in
aaa
lcall
shrl
out
mov
and
sbb
mov
inc
push
pop
pop
out
lods
pop
mov
mov
mov
insl
es
inc
jns
out
ds
push
adc
cltd
ljmp
ficomps
pusha
ret
in
shll
pop
lods
nop
xchg
add
jno
pop
jbe
pop
xor
daa
jmp
mov
push
mov
int
int3
mov
aad
jle
mov
pop
imul
xor
rclb
cli
mov
adc
pop
clc
and
sbb
fsubl
inc
pop
fucomip
dec
out
jo
mov
ds
xor
outsb
sub
and
add
out
jb
pop
aad
add
pop
jo
loopne
int3
push
pop
jb
pop
and
mov
pop
mov
push
repz
leave
ficomps
xchg
and
inc
pop
pop
sbb
aad
jae
push
repz
sti
push
push
cmpsl
ljmp
xchg
pop
movsb
lods
js
push
dec
pop
loope
out
pusha
mov
xor
add
sub
movsl
lods
jo
mov
fbstp
lcall
aam
aad
int3
lods
inc
mov
fcmovnbe
mov
inc
mov
push
sbb
js
rcrb
int
icebp
into
fidivrs
scas
inc
aaa
mov
scas
addb
jp
mov
push
stc
hlt
scas
repnz
jb
push
mov
pusha
push
dec
test
fs
aaa
push
ds
pop
out
pop
repnz
pop
dec
jnp
and
xchg
aad
sub
cmc
xor
mov
sub
jge
stc
sbb
push
xor
jbe
mov
pop
sarb
repz
jecxz
adc
lret
add
dec
or
cwtl
pop
xchg
mov
adc
jle
pop
adc
jge
add
push
add
lock
mov
bound
ljmp
inc
pop
addr16
pop
and
inc
call
inc
ficoms
pop
daa
fmuls
aas
ss
adc
outsb
outsl
and
sbb
orl
pop
bound
ja
pop
std
ljmp
jge
or
cltd
mov
mov
sti
jmp
pop
sbb
fldl
push
fnstsw
sbb
cwtl
sahf
lcall
jbe
dec
jae
pop
xor
aad
pop
jb
jmp
ljmp
aaa
dec
in
lret
mov
negl
aam
cmp
lods
dec
pop
daa
pop
sbb
pop
rorl
ja
jmp
repz
int
mov
cmc
push
es
xchg
in
imul
mov
pop
jmp
arpl
pop
mov
jae
movsl
leave
icebp
pop
sub
test
fwait
dec
repnz
inc
pop
int
adc
inc
or
lea
push
pop
jg
xor
sbb
scas
add
push
adc
rclb
pushf
repz
mov
sub
jge
inc
mov
mov
aas
sub
pop
roll
fnstsw
pop
loope
add
mov
aas
sti
push
lcall
jbe
jle
fcoms
mov
or
stos
pop
and
js
dec
aaa
fiadds
add
or
push
in
pop
cmpsl
movsb
or
sbb
pop
adc
cwtl
inc
inc
cmp
fadd
xor
xchg
test
bound
cld
mov
xchg
sarb
fildll
sti
or
bnd
xchg
adc
dec
dec
mov
cmp
push
scas
pop
and
fcoml
xor
cmp
test
sub
cmpsb
xchg
cmp
aam
add
pop
outsb
ss
sbb
push
jnp
jo
cmp
nop
or
fidivl
and
arpl
addr16
int
fdiv
dec
cmp
data16
loop
pop
or
adc
rolb
lods
aas
clc
mov
iret
mov
stos
jge
adc
in
pop
add
lea
fdivs
ret
or
cli
pop
cmp
fwait
push
scas
stos
dec
xor
sub
mov
inc
pop
sbb
aas
xchg
mov
sub
push
psllq
add
jns
xor
pop
xchg
dec
xor
lea
ljmp
inc
jp
lds
lret
pop
shll
push
dec
push
addb
pop
mov
aam
imul
lcall
sti
sbb
rcr
popa
lock
pop
mov
mov
aas
pop
bound
daa
push
sub
push
insb
and
pop
iret
in
cmp
fstps
mov
in
cmc
insb
pop
lcall
shlb
roll
addr16
sarl
sbb
pop
sahf
ss
ficoml
pop
in
inc
lret
repz
movsb
nop
stos
leave
jl
insl
lret
dec
stc
pop
jbe
add
dec
push
or
sarb
ljmp
or
fiaddl
mov
lods
adc
pop
daa
cmpb
cltd
pop
sub
lds
adc
jo
aad
pop
jns
sub
std
cmp
jb
push
stc
enter
jge
pop
int
sbb
mov
jbe
repz
sbb
mov
jns
dec
dec
xor
jge
mov
lock
adc
pop
inc
into
jecxz
sbbl
jno
xor
pop
sahf
jb
ljmp
jecxz
pop
sub
mov
fsubl
int3
fistpl
pop
shrl
je
push
ret
aaa
cmp
int
sub
sbb
pop
jb
imul
sbb
pop
scas
or
adc
dec
fists
jno
mov
dec
test
lahf
insl
shrl
jno
pop
mov
mov
int3
int
pop
divb
pushf
ret
in
mov
outsl
sub
and
or
xor
insl
sbb
pop
dec
sub
pusha
adc
pop
jae
lcall
cmp
mov
sbb
cs
stc
mov
cmp
cmp
pop
popa
repnz
dec
mov
pop
aad
and
movsl
pop
push
sub
in
call
lcall
adc
ret
out
out
divl
pop
je
inc
inc
push
int
loop
sbb
or
dec
pop
jmp
in
xchg
fisttps
xor
dec
push
das
xor
jecxz
fcmovbe
pop
in
jbe
pop
je
dec
faddl
in
xor
jnp
mov
sbb
mov
stos
sbb
decl
xchg
dec
push
and
dec
int
fistps
ret
ljmp
insb
das
repnz
in
mov
xor
rcll
jmp
jle
cwtd
push
mov
pop
sub
adc
inc
xorb
insl
gs
scas
or
addl
push
movsb
mov
xchg
dec
add
pop
mov
mov
pop
cmpsb
pop
add
xlat
pop
das
push
add
jle
pop
sbb
mov
add
rcr
scas
outsb
or
aas
int
pop
fisttps
jecxz
and
pop
nop
pop
push
daa
fiaddl
and
cmp
xchg
pop
pop
sbb
lods
add
pop
jb
jl
add
std
ret
fcompl
pop
sbb
enter
out
pop
inc
or
mov
lret
bound
in
andl
stos
xor
xor
mov
jg
xchg
jbe
adc
cmp
xor
scas
jb
int3
out
push
flds
stos
cmp
and
repnz
scas
xor
pop
sbb
into
jns
dec
mov
jl
das
call
mov
xor
push
sahf
add
cmp
or
push
test
push
scas
ja
out
gs
int3
lods
outsl
leave
lret
cltd
lods
loop
add
inc
pop
mov
aaa
pop
test
cld
jbe
stos
inc
sub
decb
xchg
orb
mov
mov
dec
sub
pop
jbe
outsb
cmp
in
add
xor
addr16
imul
cld
push
sub
dec
cli
pop
adc
dec
pop
rol
psllw
dec
leave
jae
push
idiv
and
sbb
sub
lea
int3
xchg
pop
stos
in
leave
out
inc
push
mov
jo
cld
pop
sbb
scas
add
xor
adcb
add
cmp
cmp
sbb
enter
ds
pop
xchg
xchg
mov
out
adc
mov
cmpsl
jae
push
sub
mov
and
pop
push
pop
call
push
ret
add
and
fwait
int
leave
pop
add
mov
mov
or
sub
fstpl
es
jae
arpl
mov
negb
inc
jo
and
rep
adc
mov
pop
cmp
push
imull
scas
mov
sahf
lods
aam
int
adc
stc
aas
dec
pop
pop
pop
test
push
adc
dec
loop
int3
into
pop
cmp
imul
adc
stos
mov
loopne
mov
pop
lods
cmp
mov
or
and
cmc
pop
push
inc
add
or
and
sub
xor
stos
dec
xchg
ss
jo
outsb
pop
jns
push
adc
int3
incl
out
pop
notb
pop
pop
mov
jle
pop
addr16
mov
mov
inc
imulb
pop
xor
mov
pop
scas
in
push
lock
aaa
and
dec
mov
insl
push
adc
das
mov
pop
or
mov
jbe
ja
fwait
pop
and
adc
out
and
and
xchg
cmp
dec
jne
sti
sbb
addl
dec
mov
inc
insl
xchg
pop
xor
flds
dec
out
adc
je
jecxz
sbb
xor
aad
leave
mov
out
cmpl
xor
lock
jo
popf
mov
push
lea
sub
fs
dec
stc
pop
sbb
and
int
test
sub
mov
sti
ds
dec
pop
sub
daa
sub
or
dec
int
pop
lret
cmp
adc
movsl
jns
pop
std
or
daa
mov
push
dec
loop
test
pop
in
mov
rol
lds
cmpb
mov
inc
mov
leave
lahf
arpl
jae
mov
push
fcomps
sti
pop
mov
rol
jo
negl
fisttpl
pushf
sbb
pop
xor
push
push
pop
mov
ret
pop
and
fs
pop
adc
mov
lods
lahf
rorl
das
pop
inc
lcall
dec
int
call
mov
out
dec
mov
inc
in
jns
pop
andb
pop
je
mov
xchg
inc
popf
ret
jg
clc
jl
mov
andb
rcrb
pop
inc
sar
jbe
and
movsl
jno
mov
int
pop
or
or
adc
fwait
int3
pop
jne
mov
ret
push
pop
mov
fcomip
xor
pop
bts
outsb
dec
inc
pop
sbb
fwait
stos
sbb
gs
mov
xchg
fadds
pop
or
cmp
pop
divb
sub
pop
xchg
decl
pop
and
pushf
ret
into
cltd
dec
lret
stos
pop
and
jmp
xor
pop
inc
fdivrl
mov
movsl
cltd
mov
push
arpl
sub
call
xor
and
jmp
dec
pop
fs
aad
ficoml
dec
repnz
jne
call
stc
sbb
addb
pushf
arpl
mov
imul
cmp
xchg
sub
mov
push
lock
fcmovu
and
rcrb
addl
pop
je
mov
xchg
xor
pop
loope
push
hlt
mov
push
out
xor
std
dec
filds
int
sbb
popf
in
mov
mov
mov
mov
and
mov
sub
fwait
sbb
mov
jecxz
mov
pop
adc
sub
imul
sti
pop
subb
hlt
cmpsb
addr16
push
pop
pop
fs
sbb
jb
pop
rcrl
cmp
mov
adc
dec
dec
mov
pop
mov
mov
mov
pop
jbe
cmpsl
ret
xchg
dec
pop
sub
arpl
and
daa
in
fsub
rcrl
jg
daa
push
adc
cwtl
pop
sub
dec
mov
pop
add
and
outsl
aas
push
sbb
jl
fldcw
fs
and
fimull
fwait
lea
jmp
xor
pop
cld
bswap
lods
fcomps
xor
pop
pop
jnp
pushf
xchg
lcall
lea
lret
xchg
lret
fcoms
call
pop
ret
sbb
icebp
xorl
jecxz
out
int3
pop
sar
cmp
std
xchg
lret
pop
test
jmp
push
cmp
mov
adc
mov
pusha
pop
jbe
pop
lahf
outsl
test
sbbl
fdivl
pop
xor
pop
dec
imul
mov
mov
adc
outsl
inc
cmp
sbb
push
mov
int3
imul
lods
sbb
aas
lahf
aad
loop
fcmove
in
sbb
cmp
lock
scas
std
dec
or
pop
mov
mov
jb
pop
iret
push
lock
and
sti
mov
pushf
pop
ja
int
sahf
loope
push
pop
in
test
push
xchg
jmp
icebp
mov
leave
pop
cs
out
inc
rorb
out
dec
lcall
mov
fiaddl
mov
fisttpl
fldt
sbb
cs
pusha
cltd
and
jbe
pop
sub
stc
bound
movsl
ret
adc
pop
shl
dec
imul
test
fcoms
movl
fidivl
int3
pop
and
jmp
jo
cmp
mov
mov
ret
pop
xchg
lea
dec
bound
lds
add
push
ds
dec
int3
cwtl
pop
loop
fisubl
inc
pop
int
pop
dec
insl
adc
call
loopne
aad
pop
lods
cmp
sbb
xchg
push
scas
push
jb
je
xchg
xor
push
sub
into
fsub
leave
int
cltd
dec
pop
pop
and
in
pop
mov
push
xchg
sbb
lods
xlat
mov
inc
mov
jno
inc
or
loopne
jo
mov
mov
pop
iret
dec
xchg
mov
cltd
cmp
mov
scas
fs
or
adc
pop
sub
ljmp
movsb
mov
mov
jne
scas
fs
pop
out
cwtl
xchg
pop
js
mov
int
adc
mov
repnz
mov
inc
lds
cmpsl
int3
cmpb
mov
mov
dec
dec
jmp
push
push
sub
dec
scas
enter
sarl
out
jmp
sbbl
dec
mov
sbb
in
xor
enter
mov
pop
push
push
or
adc
pop
dec
cmp
mov
sbbl
test
sbb
mov
xor
sbb
push
rcrl
or
mov
mov
pop
fistl
push
xlat
adc
ja
outsl
pop
test
pop
lods
les
dec
mov
fnsave
push
mov
int
imul
mov
jb
mov
pop
std
nop
xor
mov
je
add
or
cmp
ret
out
pop
pushf
jle
jb
mov
mov
mov
loope
or
fisubrl
jae
rcrl
dec
adc
pop
cmp
cmp
lcall
xchg
scas
mov
icebp
mov
adc
adc
leave
cmp
clc
mov
loop
int3
xor
cmp
js
mov
add
mov
xor
stc
mov
pop
cmpsb
dec
stc
cmp
mov
pop
sbb
sub
dec
icebp
push
test
lret
and
lock
adc
mov
xchg
inc
push
cwtl
sti
mov
scas
call
cmc
mov
out
shll
push
fisubl
push
pop
lods
addl
cmp
sbb
pop
add
ljmp
mov
pop
dec
cmc
mov
pop
jae
jbe
fstl
mov
mov
int
adcl
xor
mov
cmc
addr16
sub
lock
sub
icebp
divl
pop
jecxz
cli
int
add
popf
mov
cmpsb
stc
movsb
div
dec
cwtl
pop
test
fucom
inc
pop
rcrb
jle
das
jg
pop
sbb
mov
in
xor
xlat
lods
jnp
jb
mov
cmp
popa
fisttps
addps
scas
fmuls
mov
movsl
int
lret
sub
mov
jno
mov
cmp
fcomps
dec
fisttps
sbb
pop
and
mov
sub
pop
xchg
rorb
out
push
std
rcrb
adc
pop
xchg
int
ret
pop
mov
fstps
dec
or
sub
mov
scas
rorb
les
dec
mov
frstor
inc
out
pop
clc
or
mov
pop
jle
xor
jmp
mov
adc
sub
xchg
divb
dec
push
and
dec
fists
push
or
pop
sbb
push
ja
fstpt
xchg
pop
or
jle
lods
pop
xor
scas
das
cmpsl
decl
pop
mov
sub
mov
idivl
push
jb
pop
int3
push
mov
mov
inc
cwtl
mov
icebp
lcall
mov
dec
jp
aad
loop
and
scas
push
popf
rolb
pop
mov
orb
outsb
ret
and
and
mov
fimuls
iret
int3
pop
pushf
aas
imul
mov
or
pop
or
xchg
mov
mov
jbe
sub
mov
jae
dec
les
insb
lret
adc
mov
adc
cmpsb
or
repz
mov
xor
lea
stos
xchg
pop
cmp
xchg
pop
sti
mov
pop
pop
add
cli
fbld
add
mov
mov
js
mov
dec
mov
icebp
jge
xor
sbb
xchg
ja
jle
sbb
cmp
mov
in
ret
mov
int
int3
sub
aaa
add
jp
fcmove
mov
stos
cmp
xor
and
sub
sub
xchg
adc
fs
pop
xor
push
out
int
pop
sbb
pop
jns
pop
add
test
cltd
push
out
mov
jb
ret
xor
mov
push
lock
mov
leave
arpl
sbb
cltd
lock
xchg
jb
fmuls
xchg
pushf
mov
aas
stc
cmc
cmp
xor
outsb
xchg
push
sub
or
cmpsb
ds
mov
xchg
fsubp
cli
push
leave
dec
inc
mov
outsl
in
mov
or
cmp
lahf
lret
lahf
inc
std
fildl
cmp
pop
hlt
negl
push
jnp
lods
cli
or
pop
xchg
xor
pop
imul
cmp
sbb
mov
sub
int
and
push
dec
pusha
adcl
sbb
data16
lahf
push
pop
push
or
ss
pop
inc
xor
mov
mov
fistl
es
and
mov
rorb
mov
sbb
testl
sbb
out
add
or
and
xor
mov
add
inc
or
scas
xor
jge
andl
inc
adc
sarl
sub
clc
pusha
pop
ror
insb
stos
mov
adc
push
aas
sbb
adc
jb
sarb
outsl
ja
push
inc
subl
inc
fwait
inc
rcrl
cltd
sub
xorb
pop
dec
dec
cmp
mov
dec
and
mov
push
cmp
shrl
mov
sahf
fildll
pop
out
or
inc
pop
pop
xor
add
mov
xlat
lret
test
xchg
sbb
adc
xor
lahf
ja
stos
imul
and
mov
lods
out
jmp
dec
data16
stc
addr16
mov
add
push
orb
mov
cld
aad
int3
jecxz
mov
les
cwtl
jmp
das
aad
pop
sbb
push
mov
sub
add
inc
shrl
bound
push
cmp
xchg
sarl
pop
int
lods
mov
pop
sbb
aad
fwait
fs
pop
testl
inc
pop
rorl
mov
pop
cmp
lcall
arpl
aaa
jmp
outsb
or
lcall
dec
push
add
int
scas
ret
mov
cltd
lods
mov
js
and
pop
sbb
cmpsb
mov
nop
fs
ja
adc
in
and
scas
insb
sub
rorl
aad
jne
cltd
rcr
or
pop
nop
or
ja
and
in
xor
outsb
imul
add
jb
push
xchg
mov
mov
sub
fstpl
clc
xchg
jg
push
lods
lea
stc
or
sbb
mov
ds
fstl
xor
fildll
push
notl
or
frstor
and
pop
xor
xor
daa
fwait
push
cmp
add
inc
outsl
pop
xchg
out
add
and
rorl
sbb
lcall
jb
ficoms
cmpsb
pop
or
mov
std
loope
mul
inc
push
inc
mov
in
push
dec
jbe
mov
mov
mov
inc
mov
pop
in
jge
jmp
adc
xlat
leave
fdivrs
popa
loop
xchg
in
pop
mov
push
sub
aaa
dec
pop
xorb
add
stos
cltd
pop
and
int3
xchg
mov
lret
pop
arpl
jbe
lahf
data16
mov
cwtl
pop
xchg
sbbl
pop
or
je
mov
jp
pop
imul
mov
mov
xchg
pop
push
out
inc
pop
dec
sub
mov
add
dec
pusha
lret
cltd
jo
popa
ds
cltd
push
xor
ss
movsl
lea
mov
std
scas
jmp
iret
dec
ja
cmp
or
dec
arpl
into
pop
aam
add
call
jbe
add
in
dec
pop
xchg
pop
aaa
inc
pop
pop
xchg
push
adc
adc
cmpsb
int
std
push
shr
add
pop
pop
push
les
leave
mov
negb
mov
sbb
in
lret
mov
and
or
lea
pop
jbe
push
and
xchg
shlb
hlt
lahf
xlat
hlt
lods
sub
test
jb
sahf
mov
push
pop
dec
call
pop
mov
xor
mov
mov
sub
or
shlb
lahf
call
pop
add
notl
add
shlb
ret
mov
pop
fdivs
je
push
mov
std
sbb
mov
out
movsl
pop
in
jbe
out
ljmp
hlt
xchg
int
mov
adc
add
popa
sub
mov
in
and
fwait
int3
sahf
xchg
subb
insb
ja
aaa
add
out
pop
jb
mov
lea
pop
xor
ljmp
outsl
pushf
fistl
add
pop
push
or
mov
xor
jmp
or
gs
sub
add
mov
stc
xchg
pop
push
js
in
pop
aaa
lret
sbb
inc
int3
ja
jl
sbb
imul
inc
sarl
and
pop
xor
les
mov
pop
adc
fcmovb
stc
push
pop
sahf
add
cmc
and
into
sbb
mov
lea
pop
xor
mov
fmuls
rcrb
sbbl
push
xchg
outsl
cmpsb
sahf
pop
sub
stos
int3
pop
or
jecxz
movb
int
jne
in
cld
lret
jo
pop
xchg
push
and
cmp
mov
xchg
int
pop
scas
mov
aad
mov
js
icebp
and
pop
mov
jge
and
xchg
push
test
aaa
push
iret
mov
push
jb
inc
fcoms
pop
or
pushf
adc
jecxz
xchg
addr16
jnp
aad
pop
inc
inc
cmpsl
cs
xchg
fdivrs
xor
jecxz
and
jb
dec
test
pop
inc
das
sarl
mov
pop
sbb
jns
jo
pop
dec
in
or
jl
aaa
scas
pop
push
push
pop
sub
xor
push
gs
aam
out
pop
fimull
mov
or
addr16
incl
fildl
xor
clc
ficomps
fcomps
jbe
or
inc
jmp
pop
pushf
movsl
jl
cld
test
xor
adc
lret
test
shl
add
xchg
dec
push
cltd
cmc
aad
pop
pop
call
pop
inc
fadds
or
sbb
enter
adcb
pop
and
pop
dec
sub
mov
or
xchg
sub
dec
mov
push
jo
or
push
js
mov
fadd
repnz
loope
mov
mov
pop
pop
inc
out
outsb
adc
call
aaa
in
dec
cmp
jo
pop
out
xor
scas
xchg
cmc
fstpl
jbe
andl
lea
push
sbb
pop
push
cli
sbb
pop
lea
scas
sub
jge
mov
fnstsw
adc
pop
sub
adc
pop
mov
movsb
lret
test
fstps
or
or
jbe
ljmp
xor
ficomps
xchg
and
mov
imul
xchg
pop
or
xchg
jno
cli
movsl
daa
aam
int3
mov
mov
lds
mov
mov
bound
repz
pop
movsb
sbb
add
dec
pop
sbb
inc
xchg
andl
scas
in
aam
add
cmp
dec
or
jl
inc
leave
push
int
mov
cmc
pop
mov
fstps
lods
movsl
cmp
pop
jbe
push
in
mov
inc
in
sbb
lahf
pop
pusha
or
in
loopne
rcll
mov
mov
mov
pop
cli
aas
ja
pusha
lret
push
lods
std
pop
mov
mov
fistps
push
data16
je
pop
sbb
pop
fs
aas
shl
andb
sarl
xor
cmp
mov
orl
jbe
pop
push
cmpsb
sbb
jecxz
inc
and
push
js
outsb
jg
scas
roll
sbb
sub
lret
mov
pop
pop
add
sub
sub
pop
iret
out
dec
lods
xchg
inc
stos
xchg
jo
and
xchg
cli
fst
pop
int3
mov
js
or
sbb
rcrl
jo
int3
and
pop
fisttpll
divl
mov
cmp
pop
icebp
push
leave
xor
neg
jge
mov
fcoml
jbe
jecxz
clc
xchg
popf
mov
pop
sub
nop
xchg
xchg
lea
shl
mov
pop
sbb
ds
js
sarb
stos
cmp
test
pop
testl
negb
adc
outsl
call
or
push
pop
adc
out
sub
push
loope
ss
sub
sbb
iret
mov
call
add
dec
mov
dec
in
enter
nop
push
sub
mov
inc
and
shrl
sbb
pusha
shr
and
pop
mov
ret
push
icebp
sub
dec
pop
xor
mov
mov
inc
in
xchg
aad
out
out
jno
dec
xchg
pop
pop
out
pop
adc
push
imul
xchg
pop
int
sahf
scas
or
mov
pop
mov
sbb
dec
lahf
lds
mov
and
add
pop
rdtsc
dec
xchg
dec
lds
cmp
mov
jmp
jle
fdivrs
pop
lock
pop
aad
xchg
gs
das
insb
mov
jle
cmp
in
es
pop
mov
jno
adc
jbe
push
stos
outsl
fdivrl
add
pop
dec
clc
imul
push
pop
and
outsb
test
pop
int
in
and
dec
rolb
dec
mov
loop
cs
or
fcomps
xor
jo
pop
sub
mov
jp
dec
jb
xchg
mov
iret
pop
andb
pop
ret
push
mov
sbb
push
ja
push
test
jo
pop
mov
lock
adc
int3
addr16
les
dec
lret
int
pop
mov
inc
mov
pop
or
clc
out
jmp
pop
pop
mov
inc
or
fwait
mov
stos
test
lock
pop
ljmp
es
in
int3
mov
jb
lock
nop
notl
jecxz
jp
pop
push
in
sbb
sbb
leave
xchg
js
in
ljmp
cmp
pop
push
imul
inc
add
out
fisttpl
mov
pop
pop
jb
inc
adc
mov
pop
mov
and
cs
rclb
dec
mov
fnsave
dec
and
insb
in
sub
jmp
divb
mov
push
sub
loop
jle
sbb
pop
int3
mov
pop
in
mov
cmp
adc
or
imul
aaa
pop
pushf
sub
pop
jge
cmp
xor
stos
insl
jg
and
scas
mov
sbb
pop
dec
mov
sbb
sub
dec
add
loop
dec
test
insl
shrb
pop
mov
sbb
int
out
mov
mov
das
sbb
pop
dec
fisubrs
fldl
outsb
std
sub
in
mov
push
dec
xchg
fbstp
push
pop
insl
jle
push
lds
sub
sub
pop
mov
cmp
pop
push
incb
std
jp
stos
xor
pop
sarl
nop
std
cltd
stc
xor
mov
lods
cmpsl
pusha
fistpl
jecxz
sbb
xor
call
pop
out
ss
mov
pop
add
call
lcall
in
lock
push
in
aad
ljmp
dec
inc
mov
sbb
sub
xor
loopne
pop
mov
ja
enter
pop
out
mov
fs
lds
mov
movsl
fwait
mov
insl
repz
pop
mov
and
lock
pop
adc
popf
mov
addr16
mov
sub
sbb
stos
xorl
dec
mov
or
sbb
hlt
scas
pusha
fcoml
mov
shrb
popf
lds
mov
xchg
lahf
mov
sub
jnp
jmp
xor
out
sbb
lahf
mov
adc
mov
jo
imul
pop
push
push
push
jb
inc
add
sbb
jns
scas
test
xchg
gs
mov
mov
sub
outsb
and
dec
stc
pop
subb
xor
adc
sub
pop
data16
inc
or
mov
das
push
into
dec
cmc
lods
cmp
xor
push
ficoml
imul
aaa
sbbl
decl
sbb
inc
add
popa
fnstsw
fcomip
jmp
popf
test
mov
dec
pop
xorl
sbb
pop
or
mov
jecxz
imul
ss
mov
int
adc
sbb
mov
dec
or
movsb
cwtl
lcall
ja
add
pop
in
out
push
xchg
ret
lea
jmp
repz
pop
push
imul
int
into
idiv
pop
outsb
test
jbe
inc
cmpsb
pop
out
jl
jno
das
xor
pop
xchg
sbb
loope
out
ljmp
dec
sub
pop
orl
fcomps
dec
pop
mov
jbe
arpl
xor
push
mov
jmp
cmpsl
fucomi
sbbb
push
jg
jb
pop
jnp
pop
sbb
data16
outsb
push
mov
cmp
fimuls
test
pop
ror
push
cmp
loopne
mov
daa
fstp
mov
push
rcrl
loope
push
dec
aaa
jmp
xchg
je
int3
adc
jmp
ljmp
cmp
fistpl
mov
shll
stc
pop
insl
pop
daa
sbb
aaa
cwtl
mov
inc
mov
aam
xchg
dec
fwait
lea
or
and
dec
ss
arpl
mov
mov
and
pop
push
je
pop
and
inc
jg
into
dec
and
rol
cmc
xchg
xchg
int3
shl
repz
and
inc
pop
outsl
pop
leave
sbb
shrb
scas
jp
pop
cwtl
adc
sbb
pop
sub
scas
pop
add
js
sbb
jb
pop
outsb
mov
pop
lret
ret
insl
adc
jecxz
cs
dec
imul
mov
in
mov
sub
outsb
movsb
jg
sub
popf
cmp
adc
ja
orb
jle
sbbl
in
mov
inc
out
sub
mov
dec
clc
dec
sarl
pop
and
add
mov
pop
pop
arpl
pop
insb
xchg
sub
loopne
bound
cmpsb
fisttps
or
mov
pop
test
fstl
jae
lea
aam
push
loope
pop
cmp
lock
sbb
int
fwait
cs
clc
js
add
adc
mov
mov
cmp
pop
adc
jmp
imul
out
sub
std
fstpl
push
mov
cmp
pop
cld
notl
jecxz
out
pop
scas
cwtl
mov
inc
clc
pop
mov
add
leave
cltd
test
or
popa
or
loopne
sbb
out
test
pusha
lahf
sbb
stc
sub
and
pop
sbb
sbb
cmp
pop
fsubs
std
mov
pop
xchg
pop
mov
add
pop
pushw
fsubs
les
inc
pop
mov
js
in
in
mov
fsubrp
inc
mov
into
mov
add
sub
jo
adc
pop
sub
lds
icebp
not
mov
pop
fsts
mov
out
fsubr
negb
mov
xchg
clc
loopne
sub
sub
jns
pop
fnstsw
int
adc
clc
dec
bound
add
inc
outsb
scas
out
repnz
mov
out
out
pop
lahf
lret
std
ss
add
mov
jle
mov
push
dec
cmp
es
inc
mov
inc
xor
and
mov
mov
adc
add
movsb
cmpsb
sbb
out
ret
cmp
pop
and
push
std
stos
scas
dec
xchg
dec
aam
xchg
jl
outsl
and
sub
lea
dec
sub
jnp
inc
lcall
pop
repnz
push
push
test
push
push
scas
cld
hlt
or
cmp
xchg
mov
pop
mov
sub
int3
mov
outsb
scas
mov
inc
or
sbb
mov
ret
test
inc
shrl
mov
clc
inc
sbb
push
dec
movb
jb
rorb
xor
sub
sub
test
cli
lcall
stc
imul
dec
pop
int3
mov
inc
xchg
mov
mov
xchg
testl
cld
aam
jmp
cmc
jge
popf
jp
jbe
add
orl
pop
jmp
and
inc
xchg
ret
int3
fstpl
int
mov
pop
xchg
cmp
int3
mov
pop
sbb
jge
aad
mov
xchg
sbb
inc
insl
add
mov
repnz
pop
fs
pop
xchg
rorb
pop
cltd
xor
pop
ljmp
pslld
mov
xchg
mov
mov
pop
inc
clc
or
fwait
sub
mov
fsubrs
mov
ja
and
es
into
insb
jae
fidivrl
jbe
mov
outsb
loope
imul
mov
insb
stos
dec
movsb
sub
jp
and
xor
insb
iret
sbb
lret
pop
stos
dec
adc
sbb
lcall
pop
int
mov
lock
xchg
sbbb
jnp
loop
xchg
cmp
sahf
pop
jns
pop
mov
xor
les
xchg
test
mov
sub
jbe
iret
aad
sbb
lock
adc
mov
movsb
sub
push
andb
int
mov
scas
pop
jns
inc
cmp
dec
push
pop
push
and
push
mov
mov
sub
les
enter
mov
dec
inc
push
ret
aad
scas
les
and
dec
insl
pop
fwait
inc
std
xorl
loopne
mov
jge
push
pop
adc
inc
repz
icebp
int3
pop
out
sahf
push
pop
lods
insb
int
pop
loopne
mov
pop
and
leave
frstor
rclb
pop
inc
lock
jne
loopne
add
mov
lcall
add
and
sbb
loopne
lods
pop
xor
fsubs
ret
jns
int3
addr16
lcall
xor
mov
pop
mov
lahf
fcoms
mov
add
push
mov
nop
jl
hlt
inc
imul
pop
daa
jns
mov
push
popl
imul
pop
cmp
addps
or
rol
push
mov
pop
daa
jb
int
adc
inc
sub
push
mov
repnz
mov
out
jnp
mov
int
dec
enter
sbbb
jb
pop
jl
dec
test
push
fcompl
mov
inc
or
jp
dec
mov
lcall
int
add
jbe
pop
add
shlb
repz
cmp
rcr
fcomps
pop
cltd
mov
in
mov
or
and
out
hlt
sbb
jnp
sub
xchg
jmp
int
enter
add
sub
xor
in
dec
jecxz
pop
shlb
add
sbbb
xchg
lods
add
fbstp
paddw
int3
lahf
pop
cld
cmp
loopne
jb
pop
fistpl
stc
test
mov
enter
fnstenv
inc
mov
fwait
and
sub
mov
aaa
out
enter
in
pop
mov
lods
and
or
repz
and
push
fwait
lds
mov
imul
push
rcrb
lea
dec
je
daa
gs
dec
shl
pop
inc
mov
xchg
dec
pop
jmp
inc
push
push
fsts
mov
in
cmpsl
aad
sbb
pop
imul
in
ret
jb
cli
xor
imul
sbb
add
iret
subl
pop
pop
xchg
fisubrl
pop
push
pop
sub
push
test
push
or
xchg
mov
divb
push
pop
sbb
loopne
enter
movb
subb
int3
cmp
inc
xchg
pop
mov
and
xor
mov
lret
mov
push
daa
adc
adc
pop
pop
jb
and
rorl
push
dec
xchg
push
stc
jbe
push
hlt
pop
cmpsb
iret
cmc
repnz
pop
or
insl
pop
pop
insb
lds
jecxz
lea
jb
pop
imul
repnz
scas
jle
pop
lahf
bound
je
mov
clc
push
cmp
pop
cmc
inc
aad
in
imul
andl
pop
scas
test
adc
pop
pop
pop
xor
into
cmp
push
mov
jno
dec
pop
mov
jo
sbb
mov
insl
movsl
fnsave
cmp
mov
push
enter
mov
push
mov
imul
cs
test
jo
and
fcomi
and
pop
inc
cmp
push
ja
pop
adc
sbb
js
mov
mov
mov
push
push
shrb
mov
bound
jbe
jae
push
fcmovb
pop
adc
lret
dec
push
cmp
adc
cmc
cwtl
pop
ja
adc
lods
insl
pop
mov
notl
test
fwait
inc
mov
jbe
pop
add
shrl
cmc
aad
cli
mov
pop
push
pop
inc
pop
adc
aas
fcmovnu
popf
and
stos
xor
or
imul
ret
pop
in
jge
pusha
bound
dec
scas
jae
mov
sbb
test
cmp
stos
cmc
into
mov
push
in
inc
shrl
fistps
jbe
pop
fwait
pop
iret
adc
xchg
sbb
cwtl
pop
add
enter
sub
sub
fbld
jbe
mov
das
adc
leave
scas
int
pop
lock
test
sub
aaa
xchg
xchg
fadds
fcompl
dec
pop
push
leave
mov
lods
fstpt
or
pop
das
sbb
push
xchg
bound
inc
push
pop
pop
fcoml
rolb
ficompl
dec
repz
pop
cltd
inc
int
int3
sub
loop
outsl
ss
stos
pop
mov
sarb
pop
int
jmp
adcl
or
in
sbb
xor
sub
sub
xchg
jle
pop
out
xor
pop
clc
outsl
and
pop
jp
int
mov
mov
lds
jo
dec
jle
pop
xchg
into
push
add
jl
xor
add
mov
xor
aas
jecxz
or
fistl
sbb
pop
cmp
mov
jne
data16
and
bound
lock
inc
inc
mov
clc
pop
cmpsb
mov
jmp
lahf
outsl
ja
add
sbb
or
int
sti
jo
mov
orl
inc
xor
pop
shrl
or
mov
jns
icebp
cltd
or
mov
sub
js
fstps
fistpl
sub
add
std
in
or
jmp
pop
mov
xchg
sub
out
mov
ror
psubsb
jbe
mov
lds
outsb
ficompl
dec
pop
sub
xor
ljmp
mov
pcmpgtd
loope
adc
test
adc
mov
or
in
pop
push
pop
mov
lret
inc
fcompl
push
pop
movsb
pop
xor
push
fcmove
sub
mov
push
movsb
sbbl
lods
jg
inc
push
dec
aad
mov
pop
dec
data16
sbb
mov
pop
loope
pop
push
mov
jle
ss
test
aad
jecxz
insb
mov
dec
dec
pop
xor
cmp
roll
pop
shlb
cli
sub
rcrl
cmc
dec
cmp
xchg
pop
push
push
push
sbbb
sti
int3
xchg
inc
es
and
mov
pop
pushf
adc
bound
xchg
jecxz
sbb
lcall
mov
push
pop
pop
mov
add
dec
pop
and
ja
inc
pop
adc
int
inc
mov
test
into
fidivrs
pop
imul
sti
push
movsb
mov
mov
fsubs
out
dec
lods
nop
pop
lret
iret
fistpl
out
sub
xchg
pop
fdivrs
dec
cmpsb
cmp
movsb
addps
int
push
mov
and
or
pop
add
cmc
mov
fs
push
sub
lret
mov
push
pop
add
mov
dec
jge
pop
scas
or
addr16
push
lods
pop
dec
call
mull
fwait
jns
dec
loopne
int
flds
jmp
sub
pop
sub
testb
inc
jb
cmp
pop
mov
insl
xor
sub
daa
hlt
ret
pop
popa
int
jge
fdiv
sub
pop
lcall
inc
jo
pop
mov
adc
outsl
cli
das
decb
push
lahf
inc
mov
cmp
pop
out
jle
jbe
sti
lret
shlb
add
lods
test
add
mov
filds
shll
or
ss
or
jnp
sub
scas
imul
pop
in
dec
mov
and
mov
cltd
int3
add
leave
mov
jnp
lret
int
cmp
ds
les
int3
sub
mov
xchg
xchg
pop
push
outsb
inc
icebp
mov
out
cld
sbb
pop
xchg
dec
fdivrl
inc
fstpt
fidivs
stc
mov
inc
xchg
pop
ljmp
mov
out
pop
int
mov
push
push
xchg
pop
jno
mov
addr16
jl
sbb
mov
push
test
loopne
pop
cmp
cmp
int3
push
lcall
int
xor
cmp
aaa
xor
or
xchg
out
push
dec
ficomps
pop
sbb
mov
jo
repnz
add
scas
pop
lock
and
xorl
aas
or
hlt
pop
movsb
lahf
js
test
push
negb
xchg
cwtl
xchg
daa
pop
xor
pop
stos
adc
int
inc
faddl
subb
mov
pop
out
in
jmp
pop
xor
lods
roll
ret
jp
and
push
arpl
rorb
mov
popf
ds
pop
mov
mov
stc
not
pop
mov
cmp
das
pop
push
push
addl
shll
fwait
mov
fisubrl
pusha
pop
call
shlb
pop
and
inc
cmp
push
rorb
mov
jo
xchg
jge
fimull
pop
daa
ja
jmp
or
repnz
pop
or
int
mov
arpl
and
popa
push
push
sahf
mov
jae,pt
pop
xchg
pusha
int
dec
cltd
mov
stc
add
mov
sub
cmpsl
nop
cmp
cs
fcomp
mov
aad
int3
daa
leave
push
and
fs
fcompl
mov
or
jbe
and
xchg
mov
dec
inc
xchg
pop
sahf
push
push
scas
xchg
movsl
fwait
mov
mov
push
push
lret
iret
xor
imul
pop
jbe
loop
mov
in
mov
pop
insw
sbb
mov
pop
sbb
insb
in
out
pop
cmp
movsb
pop
jmp
pop
clc
sti
inc
pushf
subb
pop
popa
pop
test
dec
cmp
inc
lahf
cmp
sahf
pop
mov
cli
pop
repnz
mov
xchg
je
int
inc
loope
mov
jp
add
inc
sbb
dec
movsl
pop
jnp
rclb
ljmp
add
popf
sahf
sbbb
sub
sub
xchg
sub
mov
fadds
jecxz
inc
mov
stos
mov
dec
jbe
pop
jp
cmovge
pop
mov
arpl
mov
jnp
shr
or
lahf
xor
pop
xor
cmpsl
les
sub
pop
jno
stos
pusha
rclb
push
in
mov
adc
xchg
pop
mov
out
test
pop
std
aad
xchg
pop
lods
nop
lret
cld
daa
jecxz
fbld
mov
push
xor
popl
pop
js
or
cmc
pop
mov
pop
cli
mov
pusha
arpl
call
aaa
xor
fnstsw
in
mov
mov
inc
cmp
scas
cmp
fadds
push
adc
je
pop
xor
in
andb
pop
mov
jbe
xchg
pop
sti
in
jge
out
lods
js
jo
push
ja
inc
push
dec
call
je
pop
push
fnsave
push
fiaddl
and
adc
int3
pop
cld
leave
loope
cmp
jo
inc
inc
aad
mov
arpl
sub
and
imul
inc
out
stos
push
xlat
mov
xchg
sub
pop
and
xchg
loop
sub
jae
inc
pop
push
dec
ss
or
stos
pop
sti
dec
cli
dec
xchg
scas
pop
mov
bound
repz
and
jl
and
int3
cmpsb
or
lods
cmp
fcmovbe
popa
mov
jb
loop
xchg
mov
aaa
xor
bound
sub
rcrb
dec
sbb
pop
mov
mov
jo
mov
test
mov
int3
test
cmp
rclb
mov
test
into
and
sbbb
push
lods
ds
outsl
popa
jbe
xchg
add
pop
lret
movsl
lcall
out
popa
js
and
faddp
int3
shrl
ret
jo
xchg
or
inc
xchg
push
mov
pop
jbe
mov
cs
sub
pop
cmp
bound
cmpsl
pop
mov
lahf
sbb
pop
inc
scas
push
pop
ljmp
xchg
imul
push
pop
fisttpll
xor
ret
int
dec
cwtl
pop
cmp
shll
inc
mov
push
adc
mov
mov
insl
into
int
jae
in
test
push
mov
xor
test
mov
scas
xor
into
lahf
mov
sub
sbb
jbe
fisttpl
adc
pop
cmp
xor
dec
popa
std
inc
sub
inc
pop
int
das
pop
mov
pop
repz
in
aad
or
or
leave
lods
sbb
xor
xchg
ret
imul
cmp
push
pop
cmpsb
arpl
cld
scas
imul
mov
sbb
sbb
lahf
ds
imul
popf
dec
sahf
dec
fdivr
mov
pop
add
pop
fptan
stos
aas
int3
add
scas
cmp
fsubs
bound
jnp
sbb
sbb
mov
or
pop
mov
in
dec
or
push
jle
dec
jmp
jmp
mov
mov
sub
pop
and
inc
adc
or
int
in
and
cmp
fcompl
sub
cltd
jnp
pop
sbb
loop
push
pop
jo
dec
sbbb
inc
pop
lds
inc
push
mov
cmpsl
push
pop
and
mov
test
and
insb
sub
cmp
pop
jnp
dec
shlb
popa
mov
loope
jge
fisubl
scas
xchg
mov
cmp
stos
pop
pop
shll
jle
je
mov
jnp
rcll
pop
add
pop
cmp
lret
pop
push
ja
sti
or
in
and
pop
filds
push
idivl
push
flds
jb
repz
pop
movsl
out
mov
or
xor
xchg
cmp
pop
ret
xor
maskmovq
mull
pop
aam
xchg
xor
sbb
pop
addr16
pop
push
inc
lods
mov
sub
push
idivl
js
pop
sbb
xchg
arpl
stos
imul
lea
aas
mov
sbb
pop
mov
jecxz
xchg
rcr
mov
mov
and
push
flds
inc
and
mov
mov
test
int3
add
jecxz
sub
pop
into
push
and
rcr
int3
push
sub
pop
sbb
int
stos
mov
es
cmp
or
test
xchg
sub
fdivrs
sbb
jno
mov
scas
jns
aam
jl
pop
mov
lea
jo
mov
fs
xor
add
int
enter
mov
cmp
or
sub
fildll
inc
jb
stc
mov
pop
mov
and
or
flds
dec
popa
mov
pop
pusha
sub
repz
xchg
jo
mov
mov
sbb
loopne
vpcomb
or
cmpsb
movsl
pop
pop
and
add
daa
std
pop
lahf
clc
sub
pop
mov
gs
push
int3
pop
mov
mov
test
jo
and
push
lea
mov
scas
cmp
icebp
stos
pop
pop
lahf
mov
subb
stos
push
add
cmp
push
pop
cmc
lret
adc
ds
cmp
pop
add
jae
sbb
cltd
push
je
sub
and
stc
loopne
lds
int
outsl
ss
inc
and
test
push
scas
js
out
insb
mov
outsl
lods
inc
pop
pusha
sti
or
jp
mov
dec
adc
rorl
int3
bound
dec
ret
call
iret
xor
pop
sbb
jge
or
or
stos
in
data16
fidivrs
into
repz
sbb
sarl
aad
lds
mov
fisttpl
adc
add
repz
pop
jbe
add
inc
jg
pop
xchg
outsb
stc
jo
fldenv
mov
jbe
jnp
lahf
mov
std
sub
pop
pop
bound
pop
popa
adc
lea
aam
ja
bound
int3
pop
movswl
pop
int
mov
addr16
cli
pop
jecxz
rclb
and
xchg
sbb
arpl
xchg
mov
cmc
aad
add
mov
add
lahf
rorl
mov
into
mov
notl
inc
fsts
xor
arpl
or
lret
test
rcr
inc
inc
mov
mov
fwait
inc
pushf
ja
sbb
lret
xchg
lahf
jbe
les
mov
inc
and
mov
loop
mov
gs
adc
mov
cltd
lods
jnp
rorl
and
cltd
imul
daa
pop
push
loop
pop
xchg
cwtl
mov
xchg
out
js
fcoms
mov
imul
pop
sub
mov
stos
mov
or
popa
jne
pop
mov
jnp
nop
lret
jo
fbld
xor
sbb
pop
leave
call
pop
jle
push
jg
jecxz
int
fwait
push
jmp
fsubr
push
pop
test
orl
test
lods
xor
xlat
lock
sbb
icebp
lret
sbb
xchg
je
sti
outsl
push
or
pop
data16
int
out
add
pop
sete
leave
and
inc
mov
test
xchg
sbb
enter
lea
fistpl
sub
arpl
cmp
push
mov
adc
pushl
dec
pop
and
or
sbb
shrl
cli
gs
mov
in
lret
add
mov
mov
scas
test
loope
jecxz
pushf
pop
roll
fbstp
js
add
xor
push
sbb
out
mov
jbe
stos
mov
pop
int3
or
push
mov
sbb
dec
ret
leave
dec
pop
push
or
xor
lahf
sahf
movsb
out
add
imul
jg
jmp
int
jno
ja
mov
sbb
int3
adc
xor
inc
out
pop
int
pop
enter
xchg
sub
push
xchg
sub
xchg
dec
insl
or
leave
lret
imul
popf
stos
pop
xor
ret
cli
mov
dec
pop
in
push
xor
popa
leave
mov
dec
data16
repz
adc
xor
xchg
fdivrs
sbb
mov
push
das
movsb
dec
adc
pop
cmpl
dec
sbb
aam
push
xor
rcll
xchg
pop
cmpsl
pushf
in
mov
pop
or
sbb
pop
das
mov
push
cmp
xor
cmc
fwait
int3
sub
xchg
cltd
jo
adc
pop
dec
imul
or
inc
jmp
sub
clc
xchg
mov
push
pop
dec
test
test
jmp
jmp
xor
mov
xor
lods
jle
lahf
repnz
popf
int
sbb
pop
in
sbb
xchg
movsb
cmpsb
stc
js
addb
scas
adc
cmc
negb
mov
leave
jb
inc
dec
fdiv
arpl
mov
sbb
inc
ds
mov
adc
dec
pop
mov
loopne
pop
xchg
jo
out
lahf
gs
lahf
stc
jmp
mov
call
add
pop
pop
or
mov
frstor
imul
sbb
aam
aaa
mov
cmp
push
pusha
push
lock
fld
stc
movsl
xchg
jle
mov
inc
sbb
fdivl
pop
fs
ret
cmc
or
int3
mov
mov
or
aaa
pop
fcoms
pop
ficomps
cmp
in
je
mov
pop
rolb
jg
or
sub
imul
fldcw
sub
call
fdivrs
not
lret
add
inc
int3
rclb
pop
cmpsl
jnp
rorl
xchg
das
xchg
pop
int
mov
out
addr16
cwtl
pop
inc
mov
ret
dec
mov
pop
mov
add
pop
jne
test
xchg
int3
jnp
push
pop
xchg
sub
jmp
jne
jb
repz
mov
adc
push
pop
pop
stos
clc
mov
jnp
add
mov
cwtl
cld
jo
dec
sbb
jae
jmp
lahf
int
push
mov
enter
sbb
rcll
ficomps
push
xchg
in
loope
data16
je
mov
pop
sbb
cmp
int
scas
out
push
arpl
in
push
js
xchg
nop
push
loope
mov
mov
xor
pop
inc
pop
and
pop
ja
sbb
jle
push
fstpl
rolb
int3
pop
lahf
mov
inc
pop
movsl
imull
mov
mov
int
loopne
jg
mov
jp
out
movsl
cmp
xchg
mov
sarb
inc
jecxz
add
loop
fistpl
pop
cwtl
push
pop
mov
pop
add
and
pop
mov
push
cmp
rcl
stos
repnz
or
pusha
pop
pushf
pop
out
aaa
jnp
test
mov
dec
movlps
nop
out
rol
mov
pop
sub
pop
jmp
sbb
jecxz
enter
cmpsb
dec
push
push
ljmp
gs
mov
cmc
ret
and
pop
pop
jne
loop
dec
pop
roll
sbb
pop
push
mov
cmp
out
shll
jg
fsub
push
pushf
iret
pop
adc
bound
cmc
pop
jno
or
imull
dec
pop
mov
xchg
aad
sbb
add
pop
adc
sub
pop
adc
mov
pop
sbb
dec
int3
lcall
fdivs
push
jne
xchg
outsl
mov
cmp
sub
push
dec
mov
mov
mov
adc
lret
cmp
lods
add
inc
or
cmp
mov
mov
push
pop
mov
ret
sub
mov
cwtl
pop
mov
jge
push
shlb
repz
addr16
out
adc
loopne
jb
stos
jmp
in
xor
lock
inc
adc
lret
pop
xchg
sbb
push
add
test
xor
movsl
pop
stos
in
sub
orl
pop
insl
push
mov
pop
dec
fnstsw
pop
fmull
xchg
pop
mov
jae
shlb
sbb
jno
mov
pop
and
data16
jbe
inc
stos
out
faddl
ret
lea
mov
pop
jnp
ja
or
loop
js
fcmovne
inc
push
popf
mov
jno
iret
sbb
jmp
outsb
ficompl
pop
test
dec
in
int
sbb
jns
pop
into
pop
and
add
ret
roll
cli
lahf
cmp
add
push
mov
jb
adc
mov
lret
dec
loopne
mulb
jb
xor
adc
add
lock
sbb
fs
addr16
pop
lods
push
mov
sub
scas
outsl
and
cltd
add
pop
or
jle
pop
ja
aas
movsl
sbb
fs
jo
mov
jle
out
sub
repnz
pop
add
jl
pop
push
jb
pop
xchg
test
sub
js
mov
cmp
pop
rorb
pop
dec
lods
xchg
std
dec
jns
int
mov
xor
jno
pop
add
out
push
inc
stos
pop
or
mov
xor
lods
outsb
mov
mov
fmuls
int3
ljmp
int
xchg
sub
or
jge
sbb
xchg
pop
or
push
dec
lret
inc
xlat
sahf
pop
pop
pop
clc
mov
int
mov
push
jne
sbb
pop
mov
arpl
enter
xor
and
pop
inc
insl
pop
mov
pop
pop
jp
xchg
fdivs
xchg
dec
pop
cmp
jb
addr16
or
sbb
xchg
je
cmp
out
cmp
hlt
fstl
sbb
repz
or
inc
cmpsl
pop
mov
fiaddl
inc
test
adc
dec
inc
pop
cmp
jmp
cli
mov
ret
stos
inc
aad
cltd
xchg
mov
jp
add
call
ljmp
sub
jo
and
out
dec
mov
les
int
mov
fimull
dec
sbb
xchg
dec
pop
rolb
mov
jecxz
js
cmpsb
lahf
jp
fwait
and
sub
hlt
mov
pop
mov
lods
push
xchg
test
mov
fldt
inc
pop
scas
pop
int3
xor
xchg
call
lret
or
arpl
sub
xlat
cli
dec
hlt
mov
push
sub
pop
pop
or
xlat
pushf
push
pop
std
leave
cli
test
jbe
scas
and
mov
pop
push
push
adc
or
ror
mov
sbb
ret
add
xchg
xlat
push
rorl
addb
ret
mov
int3
mov
adc
cli
xchg
dec
cmp
lret
pop
jb
cmpsl
add
xchg
and
fwait
xor
in
sub
dec
bound
dec
sti
jl
pop
mov
xchg
or
aam
pop
pop
mov
repnz
pop
lret
test
push
inc
shrb
jl
sub
cld
stos
mov
in
fwait
xor
arpl
pop
mov
mov
xor
lea
das
and
dec
push
mov
xor
pop
jg
xchg
bound
pop
cmp
or
dec
xor
iret
jmp
test
and
flds
pop
push
add
lahf
mov
into
pop
clc
pushf
push
aas
cmp
negl
loop
cli
push
dec
scas
je
cmp
cwtl
orb
adc
stc
jno
mov
or
push
adc
add
mov
sbb
pop
leave
cmpsb
roll
ret
jp
push
add
push
pop
pop
sub
lods
repnz
jbe
pop
push
cmc
or
outsl
iret
push
cs
nop
repnz
jns
cmp
pop
daa
call
stos
rorb
pop
pop
push
loopne
push
stc
mov
mov
mov
jle
pop
jo
stos
jno
push
out
not
add
ficompl
jo
loop
push
or
pop
movsl
push
mov
xchg
jb
dec
mov
pop
test
or
scas
pop
loope
lods
jmp
lahf
jno
push
test
insl
pop
xlat
xchg
push
dec
mov
xchg
add
negb
fcomps
cmp
mov
in
jns
jl
add
jbe
xlat
xchg
sub
out
lods
pop
push
jp
data16
sbb
fcomps
mov
push
pop
adc
ret
pop
inc
fs
aaa
push
stos
push
pop
mov
cmpsb
push
adc
cltd
sub
cmp
pop
stos
enter
cmpsb
mov
rorl
int
sarb
ret
mov
push
stc
xchg
pop
xchg
push
stos
xchg
fimull
pop
push
scas
mov
pop
dec
inc
jl
xchg
jmp
pop
inc
push
addr16
fidivrs
mov
movsb
mov
sbb
or
xor
fmuls
insb
mov
icebp
cmc
push
adc
push
fldcw
push
push
pop
inc
pop
movsb
mov
fs
stos
xor
lods
hlt
aad
xorb
pop
les
sbb
mov
sub
inc
out
add
pop
fstpt
add
int
cmp
fwait
incl
scas
mov
loope
dec
mov
leave
lods
icebp
test
loop
iret
int
or
xor
inc
jb
aam
xchg
outsb
pop
sub
rorl
mov
jge
hlt
dec
xlat
mov
or
or
in
and
mov
fidivrl
pop
sbb
or
jne
sar
test
rcr
insl
sbb
insb
negb
rclb
mov
movsb
push
mov
mov
pop
xlat
jmp
pop
mov
push
pop
xor
or
testl
mov
push
cltd
aam
pop
cld
bnd
repz
dec
or
pop
scas
inc
pop
and
cmp
cmp
lcall
into
insb
rcrb
fists
cmp
int
bound
xchg
mov
adc
mov
jne
pop
cmp
and
jo
mov
int3
mov
mov
stos
xchg
jg
roll
xchg
mov
pop
popf
inc
inc
cmp
outsl
bound
sbbb
dec
out
in
pop
cmc
popf
imul
sub
mov
add
fisubrl
mov
add
fistps
add
pop
xchg
mov
jmp
lea
jb
popa
jnp
cmp
xlat
inc
lock
bound
pop
adc
sub
rcrl
sbb
movsl
push
insb
cmp
sbb
inc
or
mov
push
cltd
dec
jmp
stos
xchg
das
scas
mov
adc
jne
push
sti
in
add
pop
movsl
clc
mov
pop
repnz
mov
xchg
mov
mov
mov
jne
cmp
scas
or
adc
insb
movsb
aam
je
hlt
jae
loop
int
in
and
sbb
fldenv
sub
and
pop
jae
push
and
push
pop
rorb
int3
rolb
pop
and
movl
in
pop
lea
mov
leave
pop
inc
fists
lock
mov
mov
stos
test
pop
push
arpl
cs
cmp
int3
in
pop
mov
add
mov
xchg
cmc
mov
mov
cmp
in
mov
xor
addr16
sbb
call
fwait
or
bound
pop
ja
sbb
test
lods
push
pop
inc
pop
into
in
fists
jge
lcall
call
xor
cmp
pop
push
jne
fwait
ljmp
adc
push
push
addr16
xchg
aad
add
sbb
jno
push
pop
ja
je
add
stos
jecxz
xchg
xchg
jge
pop
in
add
sub
loop
into
ljmp
test
movsl
outsb
pop
jp
cwtl
pop
int
mov
dec
fadds
cli
mov
fsubs
xchg
ret
ds
pop
int
mov
sbb
mov
sbb
shrb
pushf
jmp
pop
insb
mov
add
cmp
sub
cmc
cltd
and
pop
dec
cmc
icebp
sub
test
sbb
push
mov
pop
into
out
fists
lcall
movsl
int3
fstps
mov
sbb
fld
std
cs
adc
mov
call
lods
lea
ds
stos
pop
jbe
test
addr16
jne
movsb
adc
out
cld
jae
cmp
cli
mov
cltd
mov
fsubrs
pop
jmp
mov
pop
xor
xchg
jbe
dec
mov
inc
insl
call
push
pop
mov
xchg
movsb
hlt
mov
faddl
fidivl
cli
lods
and
ss
cmp
pop
sbb
mov
pop
popa
pop
hlt
jle
addr16
cmp
adc
cmc
cld
ljmp
inc
in
pushf
fsub
mov
xchg
and
adc
imul
inc
push
dec
pop
sbb
mov
repnz
xor
fbld
mov
push
xchg
mov
clc
pop
cwtl
test
pop
or
jo
pop
fnsave
or
jp
pop
inc
jmp
repnz
inc
sub
pop
pop
adc
je
fdivl
lret
mov
sbb
add
mov
fs
repz
inc
pop
shlb
mov
cmp
mov
arpl
icebp
mov
pop
cmp
sbb
fcmove
shlb
add
adc
push
int3
pop
call
loopne
negb
sti
int
xchg
pop
ja
jecxz
mov
iret
lcall
popf
push
pop
jle
xchg
sbb
js
mov
dec
sub
xchg
pop
xchg
sbb
pop
hlt
inc
sbb
stc
jbe
mov
pop
insl
jmp
pop
nop
data16
mov
test
stc
dec
lea
push
fwait
in
sbb
mov
ljmp
scas
sub
int3
add
int
xor
xchg
stos
icebp
adc
loope
pop
xchg
jecxz
aam
or
inc
push
cmp
xor
pop
movl
inc
xchg
int3
dec
icebp
xchg
mov
inc
cmp
and
push
push
push
mov
dec
mov
jl
mov
mov
nop
xor
jmp
adc
mov
add
inc
clc
js
je
scas
or
shll
mov
ja
out
adc
jle
inc
je
loop
cmp
pop
popf
stos
xchg
sbb
push
lret
cmp
inc
add
test
aas
out
les
cmp
dec
mov
xchg
jns
add
fadds
ficompl
lcall
push
inc
xchg
cs
push
sahf
scas
idivb
jo
fisubl
cmc
loopne
out
adc
xor
cmp
push
pop
fistpll
mov
cmp
mov
mov
bnd
xchg
sbb
fistpl
pop
xor
or
bound
pop
mov
hlt
lea
ja
ljmp
mov
pushf
scas
jbe
popf
xchg
mov
and
dec
js
adc
mov
scas
xor
push
push
icebp
cmp
popl
push
cmp
pop
movsb
call
inc
push
sbb
mov
inc
sbb
sbb
add
movsb
ficompl
das
mov
jp
pushf
fdivrs
fmuls
test
inc
je
push
hlt
and
cmp
sbb
pop
or
inc
inc
repz
hlt
or
jl
dec
pop
repnz
xchg
je
insb
adc
popf
mov
cmp
hlt
fcmovnb
jae
gs
xor
mov
test
sbb
scas
adc
dec
xchg
cmp
popf
push
or
mov
hlt
cmp
lcall
mov
insl
or
mov
sub
add
pop
mov
xor
imulb
jno
sbb
sub
roll
cmp
je
xchg
inc
sbb
mov
loopne
int3
dec
inc
test
fcomp
test
roll
pop
cmp
mov
cwtl
ja
test
dec
xchg
pop
xchg
sar
or
lcall
xchg
sub
pop
int
push
adc
fldenv
or
mov
mov
or
dec
int
and
lahf
push
jnp
fcmovu
inc
mov
int3
into
cld
cmpsb
xor
mov
and
jb
pop
loop
jle
mov
xchg
pop
clc
mov
sub
pop
int
lods
aas
out
push
popa
add
inc
insl
dec
pop
clc
mov
fists
pop
out
int
jbe
fwait
adc
fnsave
inc
and
pop
clc
lods
mov
hlt
mov
stos
fcomps
outsb
or
mov
out
pop
cwtl
daa
cmpsb
inc
outsl
lcall
test
mov
rcrb
insb
mov
aam
out
popa
movsb
jo
inc
pop
out
xor
cltd
mov
mov
jae
pop
int3
xchg
imul
pop
out
out
stc
adc
repz
nop
fnsave
xor
pop
cmp
hlt
pop
mov
sbb
jmp
adc
mov
sbb
shll
pop
cld
cmp
add
add
and
stos
mov
pop
cwtl
lock
fwait
stc
cmp
shll
or
pop
fmul
xchg
cs
jmp
dec
adc
mov
or
ret
xchg
pop
cltd
pop
mov
cmc
xor
mov
pop
aaa
adc
jbe
pop
ret
inc
mov
cmp
mov
fnstenv
sahf
sti
and
sarb
fidivrl
xor
stc
mov
rcll
jecxz
imull
pop
aaa
pop
icebp
and
push
push
jb
ljmp
xchg
mov
adc
push
ja
lods
adc
or
xchg
stc
inc
jo
add
dec
mov
cld
adc
negl
mov
push
fstps
xor
jmp
mov
enter
cltd
mov
adc
pop
or
ds
pop
cld
pop
je
out
jns
int3
cmp
fisubs
or
add
shlb
sbb
lock
jl
insb
add
xor
mov
int3
sti
push
mov
mov
xchg
xchg
pop
or
sub
stos
jecxz
pop
adc
mov
or
mov
sub
dec
pop
test
jns
mov
fwait
lret
sbb
xor
cmp
dec
scas
xchg
pop
mov
sub
xchg
cmp
adc
pop
jbe
xchg
mov
dec
add
ljmp
or
fldt
inc
pop
pop
xor
jmp
aam
fildll
sahf
dec
out
pop
int
push
pop
xchg
or
cmp
or
je
call
nop
sarl
jmp
mov
sbbl
sub
mov
mov
or
aaa
xchg
xchg
dec
iret
ficomps
fidivrl
loop
dec
test
sbb
cmp
adc
lret
popa
icebp
pop
popf
cmc
lea
push
sub
stos
shr
movsb
dec
pushf
pop
pop
or
or
xor
dec
pop
sbb
out
push
or
loop
adc
pop
fwait
pop
mov
repnz
pop
nop
inc
push
jle
jb
mov
in
imul
add
xchg
out
adc
fadds
pushf
xor
pop
xor
pop
cmp
pop
pop
sahf
scas
xchg
sbb
add
pop
sbb
push
pop
aas
add
dec
pop
jno
ljmp
ret
stc
call
popf
mov
orl
pop
dec
sbb
sub
cmp
jae
rorb
pushf
push
xchg
inc
mov
iret
cltd
addr16
lcall
fcmovu
xor
sbb
dec
cmp
xor
int
rcrb
mov
enter
fstps
jle
mov
fsubl
pop
sub
adc
mov
lods
addr16
pop
stc
int
icebp
stos
or
mov
out
sub
jmp
ja
je
les
out
push
jnp
sbbb
pop
int3
lods
sub
int
mov
ret
add
in
pop
les
pop
pop
mov
das
xchg
jge
dec
sub
jns
mov
int
sub
adc
addr16
adc
out
sahf
ss
push
xchg
jae
lret
ja
out
in
mov
dec
xchg
mov
sbb
pop
in
insl
inc
sub
mov
pop
stc
fcomi
int3
or
mov
ljmp
sub
or
int
mov
cmp
dec
push
ficompl
lahf
mov
cmp
sahf
int
mov
stos
xchg
out
in
lods
sbb
push
fcoms
xor
sbb
or
dec
outsb
jmp
pop
lods
je
stos
fisubrl
cmpsb
xor
dec
jmp
sbb
stos
adc
xor
scas
fstpt
adc
aad
sbb
mov
xchg
and
pop
pop
lcall
dec
xor
cmpsl
jne
xchg
outsb
lret
inc
pop
int
inc
out
fcoms
mov
fs
loop
fldl
pop
mov
sbb
adc
sbb
xor
xchg
movl
test
mov
or
stc
scas
pop
sub
mov
adc
lock
fisubl
add
inc
data16
daa
cltd
repnz
rcrb
push
testb
imul
sub
jbe
out
sti
pop
ret
lret
mov
sub
or
ss
stos
or
xchg
jns
pop
dec
ficomps
and
mov
std
cmp
call
orb
lret
sbb
ret
repnz
mov
pop
mov
punpckhdq
xchg
dec
xor
push
pop
xchg
test
mov
shll
add
insb
lods
inc
mov
dec
cmp
out
test
loopne
lret
inc
pop
nop
xchg
cmp
sub
pop
jbe
xor
sub
push
push
and
js
mov
loope
sub
add
mov
ljmp
sub
std
out
or
pop
push
push
dec
outsl
fs
dec
dec
xchg
mov
sub
jo
jle
mov
shlb
jmp
adc
cmpb
dec
dec
addr16
mov
ljmp
pop
adc
or
mov
pop
repz
cmp
jbe
pop
or
xor
pop
xchg
adc
mov
push
daa
repz
pop
inc
dec
iret
jl
fs
push
pop
lea
jo
js
lock
pop
jno
jmp
push
ljmp
arpl
addr16
and
cmp
push
inc
cmp
xchg
mov
jmp
xchg
pop
fildll
pop
out
adc
decb
xchg
mov
sbb
lcall
pop
add
sbb
orb
push
repz
mov
orb
mov
pop
scas
adc
or
pop
dec
jne
jp
fwait
out
jns
mov
xor
sub
sub
hlt
enter
adcl
scas
push
jnp
mov
inc
aaa
pop
cmp
or
test
mov
xlat
fsub
xor
xor
adc
je
push
push
push
dec
push
dec
push
lahf
push
jmp
push
js
std
pop
sbb
test
mov
ss
rcrb
pop
lahf
imul
fwait
pushf
sub
dec
ret
pop
cmovle
xchg
adc
cmp
mov
xor
sbb
outsb
xor
lcall
pop
aas
fwait
mov
pushf
in
aaa
cmp
ret
add
xchg
mov
inc
pop
xlat
dec
out
std
pusha
mov
stc
pop
sar
outsb
dec
clc
pop
adc
pusha
add
mov
sub
loop
inc
mov
push
clc
push
aam
add
pop
and
and
jns
mov
call
adc
ja
or
dec
repz
or
rclb
and
mov
mov
arpl
pop
int3
dec
stos
addr16
cmp
sbb
push
pop
mov
lcall
fistpl
aaa
mov
js
popf
jnp
clc
cwtl
aam
jbe
mov
xchg
pop
sbb
es
xchg
aam
pop
cmp
inc
xlat
lret
and
xchg
in
pop
sar
push
cmp
pop
aam
add
pop
in
shl
sub
cmp
pop
movq
mov
sub
pop
hlt
dec
adc
psrlq
sub
xor
pop
aad
aad
inc
push
dec
addps
or
mov
sbb
arpl
sahf
popa
mov
dec
cli
dec
into
mov
cmp
push
xchg
gs
lahf
aam
xor
cmp
repz
out
push
ljmp
mov
mov
movsl
lahf
fstpl
repz
inc
sbb
cwtl
cld
in
enter
out
mov
scas
test
mov
cld
pop
xchg
or
mov
push
adc
pop
hlt
pop
add
pop
aam
mov
les
lret
jo
and
pop
or
pop
lods
pop
sti
aam
idiv
mov
cmp
shrb
pop
fucom
inc
into
sub
std
push
in
mov
mov
js
pushf
xchg
mov
or
psubusb
jge
mov
and
jle
sub
cli
push
test
pop
adc
dec
mov
fcos
sbb
sbbb
pop
in
pop
jp
mov
xchg
adc
scas
repz
rcrl
in
repnz
sarb
cwtl
outsl
mov
and
cmp
push
cmp
dec
ljmp
add
shrl
pop
mov
mov
push
mov
or
ja
mov
jne
and
leave
sub
pop
dec
cwtl
mov
dec
or
pop
stc
xchg
push
js
push
pop
mov
iret
lea
sbb
pop
sub
adcb
sbb
fs
mov
lret
cmc
or
pop
pop
sbb
data16
pop
pop
ret
hlt
arpl
cltd
xor
adc
sbb
and
call
sub
test
lods
cmp
cmp
xchg
xchg
out
rolb
outsl
lods
cmpsb
xchg
mov
bound
cmpsl
push
aaa
mov
push
add
xchg
mov
cmp
jns
rcrb
aam
fcom
lea
clc
push
ret
lret
cmpsl
in
sti
aaa
inc
inc
lret
xchg
ret
inc
mov
pop
push
sub
mov
jo
data16
pop
push
add
int3
cmp
xchg
add
pop
bound
mov
sub
test
xchg
push
inc
dec
mov
pop
data16
dec
fsubp
mov
xchg
out
test
fimull
inc
sbb
mov
push
jmp
mov
push
dec
inc
leave
mov
int3
inc
mov
int
in
pop
xorl
push
pop
lret
jo
push
lock
pop
hlt
ljmp
pop
cld
mov
push
test
xor
pop
push
jge
sub
pop
leave
ja
dec
into
add
xchg
repz
xor
or
leave
in
shr
and
pop
fs
movsw
or
push
and
mov
inc
cwtl
aad
or
push
mov
popa
out
or
imul
add
sahf
xchg
add
sub
push
cmp
cli
mov
sbb
or
mov
pop
or
jns
leave
pop
pop
fildll
hlt
dec
lods
pop
cli
dec
jg
arpl
dec
rcrl
arpl
cwtl
fnstsw
pop
sub
dec
mov
xor
pop
xlat
popa
sbb
sub
mov
test
lahf
pop
fldenv
push
mov
pop
mov
std
jl
jne
ljmp
adc
lds
mov
fsubl
fldt
lock
sub
xchg
repz
sbb
mov
jns
roll
insb
fisubl
xchg
stos
xor
pop
mov
in
dec
pop
xchg
add
adc
fbstp
adc
pop
add
pop
xchg
inc
xor
cli
mov
dec
xchg
sbb
xor
and
and
jle
mov
loopne
incb
sbb
pop
mov
lahf
cmp
and
push
mov
fidivrl
fnstcw
je
in
pop
pop
clc
pusha
lret
xchg
mov
xor
xlat
int3
lds
aam
mov
dec
mov
clc
jo
mov
add
cwtl
pop
enter
mov
sub
push
push
inc
dec
mov
push
pop
jnp
gs
mov
adc
aam
mov
les
mov
and
jmp
in
loop
pop
insl
adc
add
insl
mov
sbb
dec
push
hlt
setl
scas
add
ljmp
cmp
or
leave
xchg
fstpt
xor
out
in
aad
out
mov
jno
cltd
test
insb
pop
push
pop
cmp
mov
push
jbe
lret
icebp
pop
push
in
jl
jp
dec
jecxz
fstpl
mov
jae
jne
fstpt
push
xor
mov
test
xchg
testl
sub
and
in
inc
lods
or
lds
sbbl
push
pushf
dec
add
dec
mov
mov
jo
mov
shrb
ret
and
insl
std
jne
negl
call
pop
mull
out
pop
dec
pop
jb
lods
stc
dec
jge
gs
cmc
sahf
leave
push
mov
inc
pop
mov
ret
push
sub
mov
pop
adc
test
repz
xchg
cmp
and
or
mov
pop
insl
lds
repz
idivl
add
mov
mov
add
movsl
or
pop
in
int3
rorb
loope
jmp
aas
adc
mov
pop
add
ret
sbb
jge
gs
dec
fcomip
mov
in
fistl
xor
es
sub
mov
je
sbb
pop
test
adc
gs
imul
hlt
push
in
push
add
and
push
repz
fdivr
inc
inc
pop
aam
cld
lcall
mov
push
or
adc
pop
or
dec
movsl
push
aad
dec
lock
rcrl
inc
push
ljmp
add
dec
mov
add
mov
mov
sbb
push
ljmp
movsb
mull
xor
cmpsl
fdivl
jno
xlat
lock
lods
sbb
insb
adc
test
push
pop
in
les
stc
push
jp
push
gs
dec
cmc
bound
dec
pop
sarb
pop
fcomp
out
popf
sbb
xor
pop
sbb
lcall
xchg
sbb
pop
jp
push
lods
dec
push
bound
mov
fdivrs
mov
sub
rcr
xor
pop
add
fdivrs
jb
push
subb
push
cmp
fbstp
stos
add
jge
sbb
lea
jae
sbb
sbb
cmp
enter
cmpsb
xor
sbbb
inc
dec
fcmove
ret
filds
xchg
add
mov
cmc
call
jmp
xchg
mov
xor
fldt
pop
pop
and
sbb
cmp
test
test
or
inc
pop
push
shrb
in
pushf
sub
xchg
inc
neg
push
push
xor
fmull
addr16
jg
pop
les
sbb
insl
push
adc
mov
lock
sbb
jbe
stos
loop
gs
nop
push
pop
xor
lods
aam
pop
jl
data16
std
hlt
subl
cmp
xchg
movsb
jmp
add
xor
in
cmpsb
in
sarb
loopne
sbb
fcompl
cmp
in
sub
or
or
mov
xlat
lea
xor
push
mov
push
pop
jge
gs
and
pop
in
test
adc
lcall
sbb
lret
sub
addr16
sahf
fstpl
sbb
sbb
jmp
xchg
pop
fsub
insb
insl
loope
jecxz
mov
push
inc
in
sbb
movsl
pop
push
xor
aam
mov
fdivrl
mov
cwtl
or
mov
out
pop
mov
mov
mov
mov
pushf
sbb
bound
es
out
std
mov
mov
inc
pop
in
lea
pop
jns
cmp
pop
inc
rcl
sti
sbb
add
or
cltd
std
sub
jb
repz
cmpsb
push
pop
xchg
xor
lds
pop
pop
add
jb
push
cmp
cmp
into
push
lahf
sub
data16
push
and
repz
rorl
or
insb
mov
fsts
xchg
or
xchg
mov
xchg
pop
insb
jl
data16
hlt
pusha
dec
add
pop
sub
mov
inc
inc
jb
pop
pop
dec
lods
or
hlt
push
pop
adc
cmc
cmp
stc
cmp
fnstenv
insb
pop
adc
and
adc
push
dec
pop
jle
popf
dec
cmpsl
pop
lret
iret
sbb
test
jo
push
imul
adc
adc
push
lds
mov
call
push
add
or
insl
pop
sub
dec
insb
pop
jl,pt
push
mov
int3
pushf
scas
sbbb
pop
js
mov
push
xchg
sahf
shrl
bound
pop
inc
jle
stos
clc
lea
xchg
pop
push
aad
xchg
add
xchg
sbb
lods
fsts
push
in
pop
jp
sub
fs
clc
adc
loopne
xchg
sbb
insb
mov
mov
rcr
fadd
mov
sbb
and
mov
dec
adc
sub
or
pop
sbb
mov
repz
pop
fisttpll
adc
gs
or
stc
pop
js
pop
subl
hlt
cmp
dec
and
test
mov
cmp
dec
or
and
data16
mov
pop
in
cwtl
insb
lods
push
aas
addr16
pop
sbb
add
mov
mov
dec
mov
lock
jb
mov
stc
lcall
xchg
cs
icebp
pop
fs
adc
repnz
js
bound
dec
or
mov
fsubrl
test
push
or
mov
xor
js
lods
ds
cld
jo
push
ss
pop
mov
or
jp
lock
pop
lcall
add
adc
push
cmpsl
push
xor
mov
cmp
paddsw
bnd
push
adcb
lock
lret
sbb
jle
imull
adc
sbb
jp
mov
pop
pop
mov
test
push
scas
jl
dec
push
or
mov
adc
cmp
je
mov
pop
lods
pop
adc
test
dec
outsl
push
pop
in
xor
and
mov
imul
je
push
sbb
inc
xor
fisubrs
mov
dec
in
pop
out
push
xor
in
and
mov
stos
pop
adc
push
mov
enter
pop
insb
pop
pop
jge
pop
push
pop
sbb
lcall
mov
adc
push
test
data16
dec
and
and
jp
and
test
xchg
fstps
push
sbb
pushw
leave
scas
pop
adcl
clc
xchg
pusha
pushf
sub
js
jns
xor
sub
push
xor
insb
xchg
mov
pushf
inc
scas
lret
push
dec
and
or
adc
fisttps
or
xchg
mov
and
jo
js
pop
mov
ret
sbb
push
loop
call
test
pop
in
sbb
pop
mov
push
fsubr
int3
cmp
stos
jle
xchg
dec
lea
js
pop
push
enter
mov
sub
sbb
shll
aad
pop
push
adc
dec
lahf
insl
cmp
push
ss
push
or
fs
bound
lds
mov
lods
dec
add
insl
adc
cwtl
sbb
sub
pop
fdivl
test
mov
sub
sub
dec
or
push
mov
xor
enter
aam
pop
and
adc
cwtl
in
out
add
test
and
push
pop
ficomps
pop
mov
sub
xchg
imul
pop
andb
jl
movsb
insl
pushf
adc
test
pop
jbe
push
gs
push
adc
add
xchg
les
mov
clc
cmp
js
lods
sbbb
dec
push
in
push
mov
mov
dec
movsl
inc
js
aaa
pop
out
pop
jle
or
adcb
pop
push
xor
adc
push
xchg
pop
stos
xor
lock
lds
hlt
clc
push
pop
std
and
icebp
pop
sbb
cmp
or
adc
aaa
or
pushf
inc
sbb
sub
js
adc
pop
xchg
lahf
lods
dec
sbb
in
xchg
pop
ret
scas
xchg
test
dec
mov
pop
mov
sub
dec
mov
lods
pop
push
insl
adc
adc
ljmp
xchg
sbb
lock
xchg
sbb
mov
aad
aam
outsl
int3
cmovp
push
scas
test
push
mov
bound
mov
and
jecxz
mov
lods
insl
in
nop
cltd
xor
lret
int3
cwtl
mov
xor
or
ljmp
dec
rcr
sbb
pusha
sbb
jl
lods
cmc
xor
pop
fdivl
adc
mov
fsubr
xor
jp
fld
fcom
scas
imul
jge
and
dec
scas
adc
xor
neg
mov
or
jo
pop
dec
cwtl
repnz
push
rorb
repnz
xor
pop
in
popa
jge
jbe
rcrb
ja
xor
add
in
bnd
pop
sbb
push
push
stc
aam
fsubs
incb
jbe
cmp
sbb
lods
mov
icebp
xchg
mov
std
fs
dec
pop
dec
xor
mov
ret
in
jne
nop
jo
xchg
push
cltd
movsb
fnsave
pop
lea
stc
sti
mov
mov
data16
mov
sub
sbb
mov
in
lods
mov
hlt
cmp
es
dec
jae
data16
pop
rolb
pop
sub
pop
and
clc
mov
pop
add
fcomps
fcomps
sbb
test
sbb
into
insl
cmp
pop
fisttps
adcb
mov
test
stos
pop
or
adcb
mov
add
movsl
mov
mov
and
js
dec
cwtl
jae
fbstp
lea
jl
stos
pop
dec
sbb
mov
outsl
insl
push
push
xor
hlt
loopne
mov
jne
imul
std
out
pushf
push
shrb
push
push
cmp
sub
jle
dec
or
mov
mov
jo
aam
mov
fists
pop
mov
outsb
push
loope
scas
and
pop
lret
bound
cltd
movsb
rep
pop
jo
mov
jp
dec
leave
test
adc
cmp
pop
pop
push
subl
sub
dec
insl
mov
cmp
test
cmp
pusha
pop
push
testb
push
pop
sub
into
cmc
fstps
xchg
pop
add
xchg
fimuls
push
or
pop
sub
pop
dec
in
add
lods
in
ds
sbbb
cltd
cmp
cmp
jnp
data16
movsl
lahf
rclb
xor
push
pop
ss
out
jle
jg
sub
xchg
in
and
mov
int3
or
cltd
jp
gs
jmp
ret
jbe
mov
mov
push
pusha
mov
mov
sbb
pop
lea
inc
xor
jno
rorl
sub
sti
popf
pusha
imul
cmpsb
mov
jnp
jp
mov
xor
cmp
and
cmp
test
mov
pop
in
popa
sub
xor
or
xor
adc
loope
stos
mov
jg
lahf
std
lcall
adc
pop
dec
out
lods
and
cmp
xor
inc
mov
inc
jge
or
sti
cmpsb
stos
fcomps
mov
scas
xchg
push
and
pop
push
xor
cmpsl
mov
inc
pop
lcall
adc
sub
fbstp
cltd
movsb
push
push
out
push
dec
pop
adc
loop
pop
bound
das
add
js
imul
enter
scas
or
cwtl
icebp
mov
jecxz
add
xor
and
lret
lahf
loopne
cmpsl
jle
cmp
cmp
enter
dec
ret
or
cmp
call
orb
adc
pop
fistpl
stos
loop
jle
add
push
dec
test
mov
out
mov
test
lods
sbb
cmp
dec
insb
das
loopne
ret
push
shll
sub
rcrl
sbb
mov
jnp
mov
add
pop
pop
sbbb
js
mov
push
fistpl
mov
es
and
pop
js
or
repnz
fistpll
and
pushf
fistl
xor
outsb
fidivrs
sub
daa
mov
pop
aas
pop
sub
out
fists
mov
inc
mov
pop
fs
xchg
in
add
sbb
dec
cmp
outsb
sub
cmc
add
mov
or
fisttpll
inc
out
lds
push
lret
fwait
jmp
pop
dec
xor
sub
mov
or
scas
sbb
mov
fists
xchg
loope
and
sub
lcall
icebp
pop
cmpsb
imul
pop
and
pop
movsb
xor
xor
leave
pop
xchg
aad
mov
mov
pop
sbb
pop
xchg
inc
mov
mov
dec
call
push
and
daa
add
int
cmp
mov
push
es
mov
popa
call
pop
ret
cs
jecxz
scas
adc
dec
push
nop
stc
lods
lods
cmp
pop
inc
dec
roll
icebp
out
push
lds
mov
jno
vandpd
xchg
and
shrl
jecxz
mov
flds
pop
jmp
movsl
popa
cmp
sub
add
lock
sbb
ss
fwait
pop
in
jne
and
shlb
cmp
hlt
or
es
xor
mov
mov
arpl
pop
sahf
mov
pop
cli
mov
inc
sbb
mov
or
xchg
push
add
mov
dec
sbbb
sbb
mov
aad
mov
in
xor
adc
mov
stos
movl
push
sbb
push
add
mov
int3
pop
loopne
sub
lock
or
pop
call
pop
das
cmp
nop
and
cmp
pop
insl
fldcw
daa
mov
sbb
add
les
in
mov
and
xor
stos
jne
fsubl
or
pop
sub
ret
pop
dec
ja
stos
jecxz
outsl
mov
rcll
xlat
push
pop
sub
daa
sub
mov
aam
fildll
filds
loop
mov
push
jge
int
push
pop
inc
dec
push
jne
out
mov
add
mov
mov
out
xchg
loop
sbb
sub
pop
mov
aas
jne
pop
mov
add
adc
pop
mov
ret
mov
icebp
mov
cmp
jne
les
mov
pop
pop
or
sti
lods
pop
fists
mov
sbb
ss
fidivl
out
dec
in
pop
push
cmp
push
loopne
and
pop
inc
cmp
aas
mov
fstpl
out
add
inc
cltd
iret
sub
mov
stos
xchg
mov
inc
mov
in
stc
pop
subl
inc
addb
lods
cmp
and
push
fcmovnb
add
or
lods
enter
cmp
in
lret
sbb
mov
pusha
mov
mov
out
and
aas
movsb
fldt
pop
cmc
cli
sub
pop
push
adc
js
out
test
enter
mov
mov
mov
and
mov
sbb
dec
mov
add
hlt
pop
pop
xchg
arpl
imul
mov
aam
sub
cmp
mov
xchg
pusha
mov
and
fcoms
out
pop
xor
mov
stos
xchg
pop
out
fwait
mov
sbb
lcall
pop
push
lock
mov
lret
mov
pop
mov
pop
mov
push
fstpt
lock
mov
xor
add
cli
dec
cwtl
sub
mov
je
popa
adc
inc
ret
inc
sbb
or
xor
mov
nop
pop
lock
ret
cld
jbe
in
stos
mov
into
sub
mov
pop
mov
pop
cmp
cmp
testl
xchg
xchg
pop
test
pop
dec
sbb
jle
xor
lcall
pop
inc
and
pop
out
cmp
lods
in
or
test
sbb
shll
jns
pop
mov
xchg
and
mov
dec
pop
and
sbb
cli
mov
js
pop
loopne
enter
sub
in
push
insl
pop
xor
cmp
out
inc
lds
mov
sub
inc
roll
fstpl
out
or
sub
adc
mov
jmp
shlb
fdivl
jp
and
fldenv
popf
pop
rcrl
hlt
jl
pop
pushf
push
cmc
loop
daa
call
lahf
jp
inc
dec
aas
dec
pop
jns
movsb
add
adcb
jecxz
cmpsb
mov
or
enter
push
test
pop
int3
out
outsl
pop
adc
mov
jl
pop
rcrl
mov
fsts
addps
mov
pop
inc
lcall
pop
and
ss
adc
in
jmp
scas
insb
cmp
dec
stos
pop
pop
push
pop
daa
mov
mov
pop
adc
ja
jmp
mov
out
mov
in
jle
sbb
arpl
or
loopne
popa
adc
pop
popf
jle
test
pop
mov
adc
test
pop
mov
dec
xchg
imul
ljmp
out
jg
into
out
or
pop
ret
stos
insl
std
push
jne
jecxz
addb
pop
add
adc
cmp
das
repnz
fcomip
or
mov
push
sbb
or
pop
jbe
fcoml
cmp
and
pop
test
fists
push
js
sahf
mov
xchg
scas
pop
std
or
mov
and
pop
movsl
mov
pushf
mov
pop
enter
mov
xor
negb
lds
in
fs
lcall
lea
fstp
adc
data16
ficompl
jl
or
pop
jmp
xchg
push
js
and
aaa
jge
mov
hlt
jne
clc
sub
pop
mov
pop
pop
out
mov
push
and
popa
scas
xchg
push
dec
add
cmc
clc
sub
add
bound
ror
lahf
jp
mov
jae
push
test
mov
lret
iret
mov
pop
xchg
mov
push
aaa
and
shlb
mov
rcrl
jp
xor
xor
mov
stos
lahf
inc
sbb
sbb
in
jle
pop
ficoms
cmp
xchg
outsl
pop
cmp
cwtl
lea
loopne
test
loop
xchg
out
jno
jnp
sub
mov
pop
js
and
sbb
in
jnp
fwait
imul
decb
sub
lret
sbb
pop
outsb
iret
sub
es
fstpt
je
ret
sbb
inc
mov
cwtl
pop
sbb
pop
shrl
jp
xchg
test
cmp
mov
push
pop
mov
arpl
jns
mov
fiaddl
mov
aas
and
xor
imul
bound
or
ja
cld
dec
icebp
push
pop
in
int
mov
pop
xchg
pop
inc
frstor
pop
fcom
dec
imul
test
sub
ljmp
add
pop
mov
sub
pop
mov
inc
clc
aam
mov
shrl
xchg
xor
cmp
xor
lahf
inc
xchg
enter
and
fdivrs
pop
or
xchg
mov
enter
jmp
xor
push
iret
or
pusha
ret
mov
inc
jne
mov
or
nop
pop
fadd
jle
pop
push
sbb
popa
dec
hlt
dec
sbb
inc
mov
es
sbb
sbb
dec
ds
fists
adc
mov
xchg
inc
loope
pop
pop
dec
call
or
jbe
pop
iret
ss
insb
cmp
call
pop
pop
sub
enter
pop
cmpl
mov
lods
cli
fisttpl
jns
les
adc
pop
test
pop
cmp
insl
pop
aad
mov
loopne
cmp
push
pop
or
das
pop
mov
xchg
sub
int3
dec
ds
inc
mov
xor
pop
sbb
or
mov
lods
out
pop
pop
lret
cmp
aad
mov
sbb
les
add
bound
inc
mov
lods
fildl
jp
nop
test
pop
loope
mov
adc
fistl
pop
rcr
jns
stc
xor
jnp
aad
cmp
pop
movsl
or
inc
pop
push
rorl
pop
in
insl
stos
mov
ret
add
inc
or
and
mov
jns
sub
adc
jl
push
cmp
pop
das
or
jne
pop
cli
andl
and
mov
adc
xor
push
pop
mov
mov
pop
aas
jmp
or
jecxz
int
lock
shl
or
xorb
insb
fwait
or
pop
pop
out
bound
fs
imul
insb
sbb
jno
pop
fbstp
je
mov
aaa
adcb
pushf
dec
or
mov
jg
sbb
int3
sbbl
ret
xor
shlb
mov
pushf
dec
mov
aad
mov
mov
inc
fbld
test
inc
push
mov
cmp
cltd
or
addr16
ss
jb
xchg
jecxz
push
insb
out
dec
xchg
inc
push
mov
fwait
dec
insb
pop
xchg
jp
jae
adc
fsqrt
xchg
pop
mov
mov
pop
pop
jl
cmc
rcll
inc
les
pop
aaa
push
fisttps
movsb
incl
jp
mov
loopne
sahf
pop
popa
fwait
cld
push
rorl
pop
push
cli
mov
and
in
insl
jb
test
push
mov
pop
pop
xchg
push
mov
lock
mov
mov
cs
mov
test
sub
aaa
pop
ds
lret
pop
jge
arpl
sbb
or
and
mov
inc
pushl
dec
fistps
xor
lea
cmp
cmp
pop
mulb
call
inc
out
pop
pop
add
cwtl
jg
pop
xchg
aad
mov
popf
xchg
stos
hlt
mov
mov
jle
fs
ljmp
mov
mov
xchg
adc
in
pop
add
mov
mov
dec
cmp
lahf
daa
popf
neg
lret
jno
pop
jecxz
jbe
mov
jne
sub
mov
jns
mov
mov
mov
aam
pop
adc
lods
pop
popf
jl
pop
cmpsb
icebp
xlat
adc
push
les
xchg
ss
ds
mov
int
mov
repnz
pop
push
jae
xor
mov
sbb
stc
test
inc
out
and
ret
cmp
or
bound
test
pop
dec
lcall
aad
shlb
dec
cltd
xor
movsb
mov
pop
push
loop
out
cli
pop
mov
in
loope
sbb
dec
push
es
jne
inc
iret
pop
cltd
dec
sub
hlt
or
ljmp
xor
shr
ss
pop
lahf
mov
lret
icebp
cmpsl
pop
in
xchg
sub
mov
adc
scas
fwait
mov
push
cwtl
mov
cltd
sahf
or
lods
fimull
pop
mov
cmpl
mov
int3
sub
fisttpl
pop
mov
push
mov
cld
sub
idivb
sub
adc
popa
lock
gs
add
pop
mov
pop
mov
lret
mov
or
mov
in
pop
insl
xchg
dec
sub
mov
or
mov
mov
rorb
mov
mov
xchg
jg
lcall
leave
test
add
fisubl
addr16
leave
xchg
cwtl
rolb
scas
idiv
cmp
cwtl
fstpt
ret
sbb
loopne
ss
imul
inc
fcmovne
stos
pop
fiadds
mov
sbb
or
outsb
adc
lahf
xchg
pop
cmpsl
scas
dec
pop
shr
ret
fsubp
mov
add
mov
scas
mov
push
lcall
fbstp
push
js
pop
lahf
dec
les
jp
fldt
js
scas
cmp
fimull
mov
xchg
sbb
cmp
xchg
xchg
rol
xor
lret
push
pop
pop
imul
mov
or
mov
ficoml
inc
cmp
mov
mov
jns
push
push
test
adc
insl
pop
push
mov
pop
rcrl
lahf
mov
aad
and
and
mov
test
push
sbb
adc
fadds
lods
lret
sub
aaa
sbb
mov
mov
int
cltd
jmp
outsl
adc
mov
scas
jnp
fsubrp
rcrl
insl
xchg
das
rcl
fwait
mov
out
sbb
and
negl
daa
xchg
arpl
ret
dec
pop
in
std
sbb
lcall
pop
fcmovne
xor
jmp
aad
mov
mov
fisubrs
sarl
scas
push
repz
in
and
sub
fs
icebp
pop
clc
scas
jge
or
out
adc
pop
ljmp
fisttpl
mov
lahf
pop
mov
inc
in
mov
ljmp
pop
sbb
inc
push
xor
ss
xor
mov
mov
sbb
test
xor
sbbl
insl
jns
sbb
pop
sti
cmp
push
mov
sub
push
in
dec
stos
popa
out
pusha
pop
cmp
push
sub
inc
or
jnp
xor
mov
jg
inc
enter
push
xor
dec
pop
rcrl
sbb
xor
sbb
pop
mov
dec
mov
lahf
mov
notl
aaa
mov
arpl
loope
jns
test
dec
lods
cmp
fisttps
addb
cltd
out
adc
xchg
pop
iret
cmpl
jns
sub
pop
ret
inc
add
cmp
mov
push
add
out
jae
sahf
aam
fprem
das
xchg
iret
sub
push
stos
data16
enter
es
fdecstp
ficoml
cmp
push
push
dec
dec
sbb
adc
lea
pop
mov
movsl
push
lret
pop
test
xchg
je
stos
xor
sbb
aaa
mov
mov
dec
loope
inc
adc
std
jo
pop
iret
push
sbb
hlt
je
mov
mov
fnsave
sbb
mov
sub
push
ds
and
cmp
dec
dec
aaa
inc
pop
sbb
or
andl
popa
les
scas
fistpll
pop
push
mov
loop
pop
arpl
pop
push
stos
hlt
sbb
dec
jb
pop
inc
xchg
mov
pop
mov
push
sub
sbb
pop
js
jmp
pop
movsl
rcll
lods
and
out
xchg
adc
scas
mov
sub
dec
xchg
jge
push
mov
mov
mov
pushf
pop
in
adc
int3
xlat
push
movsb
pop
mov
push
cwtl
mov
pop
xchg
mov
or
or
pop
fsubrs
pop
add
lods
lods
jne
loopne
push
hlt
pop
xchg
in
les
iret
pop
in
outsl
cmp
xchg
pushf
mov
sub
in
mov
or
fildl
jns
pop
lahf
add
dec
int3
pop
pop
cld
mov
mov
cmp
scas
jge
jns
orb
movsl
add
lds
mov
mov
sub
mov
jl
fistpll
insb
jl
push
insl
and
mov
xchg
xchg
adcb
xor
inc
dec
int3
mov
pop
sub
ret
fcompl
mov
jl
ret
xchg
in
adc
pop
xchg
pop
jne
jge
test
movsl
adc
data16
arpl
or
pop
mov
int3
inc
sub
in
pop
lods
aad
hlt
or
mov
bound
cltd
pop
xchg
mov
sub
test
mov
pop
push
inc
sbb
add
and
insb
dec
int
fdivrl
or
mov
dec
and
je
imul
addps
and
pop
cmp
inc
push
xchg
or
pop
push
xor
jae
das
sbb
add
inc
addr16
mov
arpl
pop
or
out
jmp
mov
pop
push
push
mov
lahf
jl
mov
sbbb
adc
dec
and
imul
push
cwtl
fwait
pop
jp
push
imull
jno
int
pop
mov
fcomps
pushf
imul
xchg
sbb
pop
sbb
pop
bound
pop
jle
pop
lods
xchg
mov
dec
repz
jg
add
insl
sbb
imul
leave
or
ss
js
and
mov
mov
mov
add
push
inc
pop
fstl
icebp
push
xor
sbb
mov
pop
insl
xchg
leave
mov
sub
pop
sbb
mov
jmp
leave
stc
cmp
dec
daa
je
ja
jb
repz
push
out
pop
shrb
or
icebp
cwtl
cmp
inc
jbe
pop
les
inc
jo
lcall
icebp
lods
stc
push
and
lret
rcrl
pop
flds
loope
sub
xchg
fstpl
dec
sbb
pop
dec
in
pop
and
sbb
scas
subb
mov
lods
pop
and
pop
mov
dec
jbe
pop
inc
xchg
xor
sbb
stc
cwtl
pop
xor
cmp
fdivrl
out
pushf
rclb
pop
je
stc
sbb
cmp
pop
xor
or
xchg
pop
jb
std
imul
pop
les
lds
xchg
lea
scas
bndldx
popa
test
mov
mov
int3
lea
add
leave
mov
std
inc
aad
sub
fwait
sub
cmp
jl
pop
ljmp
repz
inc
sbb
mov
divb
in
cmp
mov
xchg
push
mov
test
arpl
int3
fstpl
pushf
and
jmp
push
fildll
leave
or
mov
pop
mov
sbb
xchg
test
add
out
adc
repz
js
mov
xchg
dec
jg
andb
hlt
and
adc
test
pop
ret
mov
ljmp
inc
ds
or
sub
pop
dec
mov
xchg
loopne
sti
repz
iret
inc
in
add
fwait
and
sbb
pop
pop
out
sbb
xchg
sti
jle
mov
je
pop
xor
aaa
js
lods
cmp
sbb
inc
ficompl
rorl
push
clc
push
pop
jo
leave
inc
jl
push
push
imul
and
sub
stos
mov
lcall
add
and
rcll
xchg
mov
pop
push
inc
mov
mov
push
pop
testb
sahf
or
out
sbb
pop
mov
or
fdivr
mov
pop
je
repnz
add
pop
xchg
mov
pop
in
jne
bound
sbb
dec
fcompl
xchg
xchg
mov
mov
mov
js
cltd
pop
popf
or
jmp
cmp
popa
jae
in
push
dec
xchg
pop
add
mov
fwait
jg
cmpsb
arpl
popa
stos
lea
jnp
mov
int3
in
and
jbe
cld
addr16
mov
mov
pop
or
inc
jbe
jno
xchg
pop
jns
repz
int
mov
dec
fcompl
or
sbb
bnd
test
pushf
daa
or
dec
fstps
std
dec
es
pop
push
mov
lds
pop
push
in
fsubrs
xor
leave
adc
push
lds
scas
fs
xchg
mov
jo
fstps
mov
stc
mov
add
dec
push
mov
mov
out
mov
pop
jo
pushf
sbb
lds
adc
push
sub
outsb
fistpl
and
adc
pop
dec
test
je
insl
cli
movsb
inc
cld
sarl
mov
mov
in
cs
pop
pop
fisttpl
sub
push
popa
repnz
lock
xchg
mov
shll
mov
out
push
pop
xchg
pop
sub
adc
pop
inc
out
dec
xchg
out
and
add
push
clc
cli
xchg
sbb
in
divl
stos
pop
pop
mov
jo
sub
and
cs
mov
mov
add
mov
insl
xchg
and
ret
cmp
pop
sbb
xor
pop
mov
pop
lock
popf
jge
mov
lahf
daa
or
jbe
fcompl
lret
sub
mov
arpl
cmp
cmpsb
pop
inc
hlt
push
stc
stos
lcall
mov
sbb
cmpsb
stos
pop
test
or
push
adc
jb
cmc
js
adc
sbb
xor
dec
movsl
xor
cmp
mov
scas
addb
sub
mov
or
and
shll
ret
lds
sbb
pop
dec
mov
cmp
movsb
mov
fmuls
jl
mov
cs
fsubrl
pop
adc
dec
pop
je
repz
jp
push
fsts
sbb
pop
fisubrs
movsb
inc
pop
and
loopne
mov
xchg
pop
push
lea
jnp
add
pop
add
push
jb
jge
cmp
pop
mov
cmp
mov
lods
push
pop
xchg
imul
sub
je
mov
or
scas
test
fdiv
inc
movsl
cmp
fnstsw
pop
fstpl
add
pop
cmpsb
or
pop
jns
lcall
add
cmp
jne
xchg
out
in
pop
loopne
aaa
out
and
call
or
iret
or
out
jecxz
pop
push
mov
cltd
fwait
sti
mov
adc
adc
shrl
sbb
adc
jae
lea
sub
cmp
pop
jno,pn
mov
push
cmp
out
jl
jp
and
xorl
out
mov
loope
jns
pop
mov
cmp
int3
dec
imul
pushw
int
mov
inc
push
mov
int3
lods
adc
clc
add
or
push
popa
pop
lcall
jbe
cmpsl
and
inc
fcomps
int
xchg
add
pop
or
cmp
rcrl
int
mov
pop
or
or
pop
movsb
imul
dec
cli
lret
fsubrs
in
outsb
fldenv
or
dec
pop
lods
adc
inc
dec
pop
cmpsl
mov
insb
push
sti
pop
test
sub
inc
and
pop
arpl
mov
pop
clc
movsl
cmp
inc
and
mov
lock
jno
or
ja
sbb
js
out
and
int
mov
stos
std
xchg
or
sbb
pop
mov
sbb
dec
fcmove
mov
xchg
pop
sub
xchg
fstps
imul
dec
or
push
jo
lret
adc
push
outsl
sbb
jl
rcrb
int
inc
xchg
pop
push
out
jae
je
mov
int
out
jmp
push
jbe
sti
cs
test
mov
inc
sbb
in
insb
dec
mov
aas
mov
imulb
enter
stos
addr16
dec
in
clc
fidivl
dec
insl
vphsubdq
pop
idivl
cs
in
je
xlat
cmpb
jno
leave
adc
sbb
sti
fsubl
rcrb
pop
jbe
aad
sbb
int3
lret
cmc
pop
popa
add
cs
lahf
pop
inc
les
sub
ja
imul
sbb
rcrl
pop
fiaddl
jnp
int
lret
stos
movsl
scas
fmull
bound
pop
loopne
outsb
sub
ficoml
loop
pushf
int3
add
dec
and
lods
popf
test
inc
lcall
xor
aad
jl
mov
mov
scas
mov
ja
jle
lahf
pop
inc
cmc
std
add
sbb
scas
sbb
int3
scas
xchg
sbb
and
data16
fwait
js
lods
jl
fisubl
cltd
pop
dec
lds
int3
pushf
push
add
sbb
dec
xlat
in
pop
inc
xor
call
add
or
sti
or
add
fstl
xchg
dec
mov
sbb
push
repz
sbb
stos
push
in
inc
stc
ret
pop
cltd
cld
in
add
mov
int3
and
imul
pop
pavgb
pop
fs
and
pop
popf
dec
ret
sub
cmp
arpl
pop
out
int3
mov
xchg
cld
adc
or
jmp
mov
mov
dec
pop
call
insl
js
pop
mov
mov
mov
inc
jmp
and
pusha
arpl
mov
test
inc
rolb
call
mov
pop
push
jne
fs
inc
xchg
ret
dec
xchg
pop
pop
arpl
sbb
enter
call
mov
pop
mov
data16
pop
loopne
mov
sbb
aas
cwtl
pop
imul
bound
sbb
enter
push
test
push
and
cmp
mov
pop
xlat
imulb
pop
data16
push
outsb
dec
pop
leave
inc
aas
sbb
push
arpl
mov
mov
pop
sahf
push
sbb
negl
es
pop
xchg
mov
movsb
pop
addb
sbb
xchg
pop
mov
xchg
dec
in
xchg
fs
lds
lret
pop
movsl
pop
pop
outsl
push
std
je
lahf
stc
mov
mov
pop
mov
lea
pop
loop
fsub
shr
push
sbb
mov
popa
inc
sub
dec
sub
pop
pop
mov
std
mov
repz
es
mov
inc
xchg
jecxz
cs
testl
in
dec
stos
pop
dec
mov
es
ret
ficoml
adc
ds
lahf
xor
test
and
pop
shrl
aam
incb
mov
loop
add
push
imul
and
fwait
scas
lret
and
stos
sub
nop
xchg
in
push
scas
cli
xor
lcall
pop
test
dec
call
xchg
xor
dec
invlpg
mov
les
push
popa
sbb
ja
push
sbb
iret
or
and
dec
jle
inc
ja
fisttpll
jne
dec
pop
sbb
mov
paddusb
cmp
xlat
in
push
add
sbb
ss
out
sbb
xchg
or
aaa
and
bound
cmp
aas
pop
jo
and
shrl
pop
subl
repnz
out
divl
dec
push
popf
jb
in
test
negb
xorb
jae
adc
pop
enter
sbb
and
call
dec
cmpsb
pop
data16
and
rcrb
lods
pop
stos
jnp
adc
fadds
mov
lret
mov
inc
fwait
hlt
fistps
dec
pop
or
sbb
out
lea
cwtl
sub
cmp
xchg
loop
out
pushf
dec
ja
roll
ss
jl
lods
sbb
jmp
or
adc
mov
jg
jbe
mov
cs
sbb
addr16
xlat
dec
and
test
pop
int
es
adc
pop
pop
xchg
jle
filds
bound
aaa
int
push
pop
fmull
pop
ljmp
lods
jge
inc
and
jbe
pop
mov
or
outsb
pop
leave
fcomps
test
idiv
sbb
pop
mov
fldl
int
popa
js
pop
out
xor
fwait
insl
ljmp
pinsrw
in
xchg
pop
inc
push
lret
dec
mov
pop
inc
rolb
cmp
add
sbb
mov
cmp
dec
mov
idivb
stc
jl
pop
sbb
subl
mov
jmp
xchg
pop
xchg
cmc
or
sbb
sbb
pop
cld
mov
es
pop
sub
mov
pop
push
or
sbb
movl
jae
sbb
sbb
add
test
fildl
push
rcl
pop
push
mov
and
sbb
loop
lcall
outsb
xor
cli
sbb
sbb
insb
fcompl
cs
and
mov
sahf
test
loop
shrl
pop
inc
test
cmp
pop
faddl
rorb
addr16
mov
add
mov
lcall
adc
repnz
dec
jae
push
pop
pop
lret
data16
pop
ja
cwtl
movsb
inc
outsl
push
addr16
pop
dec
mov
out
mov
xor
aam
pop
cmp
pop
push
int
jmp
das
ljmp
push
pop
adc
add
pop
test
scas
mov
fadds
push
mov
jp
pop
sub
or
stos
scas
iret
jns
mov
mov
fwait
data16
fsubrs
fs
xchg
jge
push
inc
pop
cwtl
xchg
jbe
mov
and
pop
rcrl
and
jl
xchg
int
sahf
jmp
mov
dec
xor
push
pop
adc
push
pop
mov
mov
sbb
fldcw
push
and
outsb
xchg
adc
add
jne
inc
xchg
jno
aam
and
int3
push
icebp
dec
fldcw
arpl
insb
scas
sarb
imul
lret
inc
jne
cli
loop
sar
jecxz
pop
sub
dec
in
mov
ljmp
adcl
xor
adc
das
fcmovu
add
mov
lods
pop
aaa
js
push
sub
rcrb
mov
daa
inc
test
and
popf
dec
or
out
sub
and
sti
xlat
arpl
pop
mov
sub
jb
jns
sbb
icebp
cmp
xchg
pop
push
outsb
into
cmp
pop
adc
cmp
dec
adc
fsts
xchg
icebp
fcompl
adc
push
dec
daa
and
pop
adc
outsb
lock
scas
out
lea
sbb
pop
adc
movsl
or
inc
outsl
fcomi
jmp
pop
out
push
scas
lahf
test
mov
mov
loope
xchg
and
out
and
sbb
sbb
stc
mov
scas
les
int3
xor
ret
xchg
insb
repz
lea
pop
and
pop
push
das
jp
mov
lods
in
dec
mov
stos
adc
pop
dec
xchg
and
gs
imul
loop
jne
jnp
mov
push
xchg
fcmove
xor
js
xchg
mov
addr16
sbb
mov
pop
fcomps
int3
pop
dec
out
xchg
sub
push
cs
scas
inc
and
or
and
sub
dec
jb
sbb
sbb
push
arpl
ja
loop
sbb
mov
shll
push
lds
sbb
out
xchg
mov
mov
mov
repz
fcomps
cmp
inc
lret
add
pop
movsl
xchg
or
in
andl
sbbl
int3
cmp
mov
add
cltd
push
das
mov
jle
inc
arpl
loop
mov
push
les
mov
data16
xchg
pop
test
mov
ds
insl
pop
arpl
xchg
sub
frstor
lea
les
rcrl
ficompl
or
xchg
push
pop
lods
repz
pop
xor
ljmp
pop
xchg
inc
aaa
pop
test
popa
add
lahf
pop
mov
and
pop
arpl
outsb
mov
negl
pop
adc
rorl
sbbl
repnz
jne
add
pop
mov
popa
push
in
mov
xor
dec
mov
add
dec
rcr
jge
sub
lahf
je
or
add
xlat
sti
pop
push
push
mov
cmp
mov
or
or
mov
mov
scas
jmp
cmp
lret
inc
lahf
sub
lahf
cmp
pusha
or
xchg
fldl2e
sbb
leave
imul
das
dec
pop
lahf
out
sbb
lods
mov
mov
dec
cmp
mov
pop
mov
add
jecxz
and
and
sub
push
or
ret
daa
push
push
dec
fsubr
pop
cmp
lahf
out
dec
mov
dec
test
push
push
in
lret
mov
imul
lcall
add
jns
dec
mov
aaa
shlb
int
or
fwait
js
inc
lret
add
dec
jmp
pop
sbb
jle
mov
pop
sub
pop
sub
push
inc
adc
inc
mov
das
sbb
filds
sub
mov
scas
jecxz
out
fdivrs
adc
sub
loopne
lahf
cwtl
iret
addr16
mov
push
into
sbb
mov
jmp
jo
stc
imul
test
shr
pop
cmp
sti
xchg
mov
lcall
int
scas
jne
xor
stc
shll
js
scas
sub
call
popf
fcmovu
pop
push
pop
xchg
in
std
push
pop
fiaddl
push
mov
pop
push
inc
dec
bound
lods
insl
dec
pop
or
imul
xchg
adc
fisubrs
xor
scas
lret
sbb
test
jns
pop
rolb
leave
add
and
sti
loopne
sahf
data16
lret
push
scas
lcall
inc
aam
sbb
xor
push
sub
pop
xchg
xor
mov
inc
clc
mov
mov
test
cmp
inc
in
sub
mov
fbld
out
pop
inc
pop
inc
cltd
sbb
pop
dec
mov
pushl
jg
mov
pop
shrl
mov
pop
pop
inc
out
pop
insb
addr16
xchg
jnp
mov
cltd
push
fimull
lcall
adc
lock
sbbb
divb
dec
les
inc
xchg
iret
sub
fsubs
aaa
xchg
je
pop
out
dec
enter
pop
mov
mov
dec
hlt
ljmp
sbb
lds
cmp
jno
xor
shr
mov
adc
shrl
fildl
mov
repz
ljmp
clc
mov
sti
jnp
inc
cmpsl
ljmp
pop
imul
push
mov
aam
stos
mov
pop
cmp
adc
fidivl
daa
mov
addr16
std
bnd
pop
imul
iret
push
cwtl
stc
call
scas
movsl
mov
xor
jmp
dec
pop
rorl
popf
pop
pop
pop
mov
pop
mov
incl
add
jns
and
jo
and
mov
mov
mov
stos
ror
repnz
and
aam
pop
cmp
ljmp
arpl
adc
cmc
les
js
add
fistl
jae
mov
out
mov
mov
imul
xor
pop
dec
in
dec
mov
mov
mov
jne
sub
jmp
sbb
stc
mov
dec
jg
push
lds
or
je
xor
stos
mov
mov
or
cwtl
pop
js
jmp
test
leave
daa
adc
ss
cwtl
mov
fwait
dec
push
test
ret
lods
xchg
dec
cwtl
xchg
cmp
push
lods
sub
or
mov
pusha
mov
pop
and
add
push
flds
mov
out
imul
dec
mov
gs
out
inc
mov
inc
mov
add
push
cmp
jbe
and
test
mov
dec
aad
scas
scas
inc
dec
cmp
jnp
pop
test
fisubrs
push
dec
mov
add
mov
adc
pop
adc
adc
pop
test
fstpt
lahf
aas
in
out
fidivrl
js
scas
movsl
ficoms
ljmp
inc
adc
sbb
leave
mov
xor
mov
fidivl
add
lcall
dec
mov
cli
mov
ds
andb
test
adc
mov
ds
pop
and
push
mov
fiaddl
movsb
or
mov
inc
jne
pop
movl
enter
dec
xchg
inc
idiv
mov
loop
out
mov
pop
mov
pop
pop
add
cltd
inc
cld
test
shll
mov
inc
shrl
test
mov
in
sbb
sbb
shl
stos
pop
leave
ljmp
push
fidivrl
mov
push
pop
imul
adc
ret
lods
mov
fistpl
xchg
cltd
push
adc
jo
cmp
out
sbb
scas
inc
mov
mov
jl
popf
aam
call
pop
pop
mov
mov
inc
test
and
pop
dec
dec
lods
sbb
stos
xor
jnp
push
dec
inc
xor
pop
jl
out
ret
cmp
cs
test
add
mov
adc
cli
cmp
insb
sub
pop
imul
lahf
popa
js
stc
repz
jnp
mov
adc
mov
fcmovbe
sbb
jnp
sbb
test
cmp
sbbb
push
or
sti
leave
scas
mov
pop
sbb
jmp
pop
push
lret
movsb
jb
pop
push
mov
pop
imulb
mov
dec
push
jo
pop
mov
and
mov
or
inc
addr16
xchg
jmp
mov
pop
xchg
pop
dec
ja
or
cmc
lret
xor
xor
pop
jle
stos
mov
pop
aad
cwtl
adc
cmpsb
sbb
call
pop
mov
lret
pop
out
or
mov
es
jo
dec
fimull
in
andl
push
ds
andl
sub
pop
pop
movsl
jmp
mov
hlt
adc
movsb
std
sbb
sbb
fs
popf
leave
inc
mov
xor
xor
push
inc
pop
in
les
push
jecxz
mov
lds
ljmp
lcall
js
mov
cli
test
scas
pop
lds
loop
clc
xchg
data16
pop
dec
and
add
rcrb
jge
adc
mov
movsb
and
cmp
cmp
fcmovne
xor
lahf
repz
sahf
pop
lods
in
mov
mov
lea
push
adc
mov
lcall
pop
out
lahf
or
outsb
fidivl
stos
mov
pop
cltd
sub
mov
mov
inc
add
jbe
pop
add
stos
fwait
dec
pop
push
das
mov
xchg
pop
mov
cmc
push
mov
lds
in
pop
pop
into
test
jge
sbb
jo
sub
hlt
or
js
ret
jae
pop
and
push
pop
inc
pop
outsl
mov
push
jne
mov
lock
jge
addps
aas
dec
jno
dec
dec
in
cmp
pushf
jbe
repnz
mov
scas
ljmp
jae
inc
cmp
add
arpl
outsb
push
push
pop
imul
cmc
incb
stos
mov
pop
shll
pusha
pop
cmp
sbb
cmpsb
sbb
pop
pop
aad
test
dec
mov
imul
mov
dec
mov
xchg
pop
sub
mov
jns
push
int3
mov
out
pushf
pusha
aam
mov
pop
negl
cmp
xchg
or
call
cs
pop
and
shl
xchg
jne
aad
inc
inc
pop
leave
and
insl
pop
dec
dec
test
cli
fists
scas
jp
mov
jne
jns
test
mov
test
cmp
in
imul
adc
xor
pusha
mov
jmp
loop
pop
popa
and
sahf
pop
xor
and
pop
mov
adcl
mov
roll
or
data16
pop
xor
cmp
insl
sbb
fld
push
stc
and
jmp
adc
cwtl
scas
aad
mov
out
call
rolb
push
popl
cmp
fwait
sbb
and
mov
jnp
pop
andl
ljmp
cmp
lret
jne
jns
bound
int3
sub
stos
sbb
pop
subl
add
stc
push
mov
mov
mov
out
pop
sub
mov
test
xchg
pop
pop
inc
cld
pop
inc
dec
nop
dec
inc
stc
cmp
idivl
pop
in
jno
pop
push
das
jne
inc
adc
adc
ret
or
adc
std
push
add
pop
das
mov
pop
arpl
mov
pop
pop
loope
xor
add
mov
add
dec
cmp
jno
adc
fmul
jns
sub
sub
add
lods
test
scas
add
sub
lret
inc
pusha
lods
push
xchg
pop
xor
cmp
mov
inc
out
pop
mov
aam
das
fidivrl
mov
sub
data16
es
pop
fsincos
cld
jnp
mov
mov
xchg
mov
add
jmp
aaa
icebp
gs
aam
scas
scas
adc
fnstcw
fcomps
sbb
pop
lret
push
mov
jno
es
and
or
sbb
mov
imul
pop
jmp
xchg
aam
push
xorb
xchg
add
pop
sub
enter
mov
xor
cmp
pop
rorb
xchg
test
pop
add
pop
test
cmp
fadd
and
out
or
inc
pop
gs
out
test
sbb
ljmp
test
jnp
mov
insb
leave
cmc
mov
cs
mov
test
adc
xchg
mov
add
stc
push
and
fs
xor
out
ja
stos
jno
inc
pop
arpl
or
fdivrs
adc
cmp
fidivl
in
aas
inc
incb
cwtl
inc
and
in
or
std
push
in
pop
sub
jle
push
pop
mov
test
and
in
xchg
mov
and
pop
mov
pop
xchg
sbb
pop
shrb
dec
cmp
adc
pop
bound
cmp
push
pop
ret
cmp
rcrb
cmpsb
mov
push
pop
nop
int3
xchg
and
pop
adc
jl
or
dec
mov
test
stc
out
pop
jbe
adc
add
adc
xchg
sub
sub
fnsave
out
mov
js
mov
inc
fidivl
or
xchg
lea
aad
repz
inc
aaa
pushf
inc
jl
fdivrl
adc
fisubrl
cld
rcrb
pushf
idivb
test
pop
add
cmp
dec
pop
out
mov
stos
xchg
stc
lret
jmp
pop
shll
loop
out
lds
and
xor
lea
lret
dec
xor
xchg
sbb
pop
imul
gs
dec
cmpsl
sbb
sub
add
mov
xor
sti
popa
cwtl
xlat
mov
push
cwtl
mov
push
pop
scas
xor
jns
mov
into
sub
pop
fiadds
mov
adcb
xchg
mov
insl
sub
ja
inc
dec
jns
jecxz,pt
xorb
or
push
cmp
inc
push
in
xor
add
pop
xchg
sar
arpl
test
lret
pop
mov
push
xchg
js
scas
xlat
or
call
movsl
shll
push
ret
enter
mov
loope
mov
push
fcompl
cld
and
and
xor
pop
jo
jno
add
mov
out
xchg
out
faddl
sbb
and
add
mov
mov
dec
lea
subb
jp
loopne
mov
movsb
aas
movsl
mov
js
lea
popw
ja
xchg
or
mov
xlat
xor
fwait
outsb
xchg
stos
sbb
jmp
push
loopne
mov
cs
or
add
xchg
dec
cmpl
je
cmp
int
mov
inc
dec
jb
add
sub
push
outsb
ss
enter
arpl
pop
pop
jmp
sbb
mov
mov
push
aaa
daa
push
scas
cmp
add
fistpll
add
ja
xchg
test
lds
pop
aam
or
dec
and
pop
mov
imul
js
pop
pushl
or
leave
not
jle
pop
out
stos
jecxz
jnp
jmp
cmpb
fidivl
pop
mov
lea
adc
repnz
jne
xor
test
fisubrl
push
dec
pop
fwait
test
push
hlt
push
sahf
xacquire
lret
xor
pop
leave
adc
or
mov
sbb
mov
daa
jnp
mov
sbb
into
ds
in
mov
sbb
ss
jecxz
pop
inc
cmp
adc
fsubrl
jnp
sbb
push
leave
jbe
sarl
or
dec
test
sbb
rcl
jae
mov
mov
mov
pop
pop
cmp
fiaddl
mov
sub
xor
jmp
pop
outsl
shll
mov
xor
pop
sti
mov
mov
lods
rolb
icebp
push
pop
mov
inc
dec
or
pop
ljmp
bound
mov
or
xchg
jbe
xor
cwtl
clc
mov
jp
fstpt
aaa
pop
add
pop
cmp
pop
es
arpl
or
xchg
xchg
mov
add
in
leave
xchg
cmp
aam
jae
xor
mov
iret
js
stc
cli
mov
pop
in
fidivrl
cmp
es
pop
jno
xor
or
iret
or
pop
push
popa
in
test
mov
loopne
lfs
or
pop
jp
aas
mov
xor
push
xchg
pop
aaa
ds
jmp
pop
orl
shl
inc
pop
sbb
ljmp
cmp
stc
fiaddl
pop
inc
pop
mov
mov
xchg
imul
mov
call
fcom
incb
js
mov
sahf
pop
imul
int
pop
ja
dec
push
jecxz
xchg
pop
in
sub
notl
mov
xor
mov
mov
jb
test
jns
pop
data16
stos
xor
aam
xchg
inc
push
jbe
pop
pop
fidivrs
xchg
jo
pop
mov
mov
dec
pop
jecxz
cltd
scas
mov
inc
xchg
adc
scas
fidivrl
je
imull
mov
out
mov
loop
jmp
mov
jl
rcrl
inc
dec
mov
fsubl
aas
daa
out
imul
dec
adc
es
mov
jmp
mov
xchg
jecxz
jg
dec
mov
xor
mov
xchg
outsl
push
mov
dec
adc
push
push
loope
clc
pusha
pop
out
ret
in
push
rol
push
arpl
movsb
shrl
scas
icebp
popf
xor
outsb
bound
and
les
lods
cmp
inc
inc
jecxz
repnz
cli
jno
mov
pop
aad
and
pop
imul
cmp
stos
daa
pop
dec
mov
lods
clc
pop
repz
arpl
imul
test
cmp
stos
hlt
rcrb
popf
movsb
lcall
xlat
lds
push
cmp
add
in
xchg
stos
loop
ja
mov
push
les
xchg
ret
and
pop
pop
adc
rclb
sub
push
repnz
mov
scas
ja
std
jge
mov
xlat
mov
adc
sbb
cmp
movsl
mov
je
jo
jnp
ficompl
mov
pop
sub
dec
xchg
stos
push
lret
xor
popa
mov
xchg
out
ret
push
adc
jge
and
dec
fs
push
enter
dec
fstpl
aas
pop
cmp
jns
das
and
jo
dec
cmc
mov
bound
mov
sti
fucomip
cmp
pop
cmpl
fcomps
adc
mov
and
push
call
jae,pt
cmp
scas
sub
adc
icebp
iret
jecxz
pop
jnp
lods
test
dec
stos
pop
sbb
or
sbb
jmp
mov
pop
xchg
mov
fcmovb
pop
fwait
mov
or
xchg
adc
jbe
int
jge
sbb
js
sti
xchg
pop
out
mov
cmpsb
pop
ret
push
xor
xchg
add
xor
outsl
rcrl
aad
lahf
loope
cmp
lret
jnp
mov
lret
jg
cmpsb
xor
or
sti
xlat
mov
mov
xchg
pop
mov
stos
xchg
mov
sbb
mov
mov
mov
scas
enter
es
xchg
dec
xor
stos
loope
mov
push
jb
and
pop
test
lcall
cmp
fs
scas
testl
jbe
jbe
jnp
fimuls
rorl
xchg
mov
or
mov
mov
outsl
and
sti
mov
mov
in
repz
push
pop
ret
jae
xchg
daa
fs
inc
pop
jl
repz
lods
sbb
lea
and
pop
mov
jmp
sbb
xchg
pop
sub
add
out
pop
inc
mov
mov
sub
fwait
jecxz
inc
scas
inc
shrb
loope
cmp
mov
pop
decl
dec
adc
xor
jecxz
test
dec
jo
cmpsl
mov
cmp
fwait
sti
xlat
test
mov
mov
fstpl
or
xor
xchg
outsb
pop
adc
fcom
pop
jnp
mov
inc
or
pop
addr16
push
fld
ja
out
jb
jl
dec
test
dec
mov
orl
gs
sbb
inc
dec
xor
push
lock
mov
js
mov
les
fiaddl
sbb
sbb
mov
js
add
mov
jmp
cmp
inc
fsub
idivl
lods
xchg
pop
sbb
in
test
mov
stos
mov
sbbl
dec
lds
pop
xchg
lahf
ret
rcl
pop
call
inc
adc
inc
and
add
test
pop
insl
mov
test
and
push
lret
sbb
lahf
mov
movsb
dec
sub
pop
sahf
push
jns
in
popa
inc
mov
mov
push
mov
cwtl
mov
jae
test
addr16
nop
jo
imul
adc
into
imul
int
jnp
aas
movsl
mov
mov
iret
mov
cltd
imul
sbb
mov
mov
sub
mov
xor
lret
sub
pop
cmc
or
dec
adc
inc
fsubp
in
mov
insb
in
jle
aam
enter
and
fsubr
pop
jecxz
insl
pop
mov
cltd
test
sbb
rcrb
and
insl
ja
aad
add
jl
inc
sbbl
and
out
mov
aas
repz
xchg
mov
divb
imul
sahf
outsl
jae
ja
and
inc
enter
mov
sbb
mov
clc
xlat
xor
gs
pop
xor
jl
stos
adc
push
and
xchg
inc
pop
and
pop
shll
pop
jmp
je
cwtl
inc
ds
pop
fistl
insl
dec
mov
pop
xchg
push
sti
xchg
pop
mov
dec
inc
inc
in
add
push
dec
fisubrs
xchg
insl
sbb
subb
out
xor
mov
ftst
jbe
jns
mov
jp
xchg
test
fmuls
push
sbb
jecxz
add
jne
hlt
cmp
in
pop
mov
test
push
ss
cmpsb
adc
push
xchg
addr16
pop
call
stc
dec
mov
sbb
in
inc
sbb
pop
push
jbe
mov
mov
pop
adc
cld
and
fidivrs
pop
sbb
lret
jge
or
pop
test
test
inc
icebp
lret
loope
ljmp
sub
or
and
sub
push
jnp
mov
lret
icebp
sbb
imul
sub
xchg
mov
fwait
xchg
push
js
push
jns
pop
mov
punpcklwd
jbe
scas
and
mov
pop
push
jmp
and
fwait
stos
pop
xchg
inc
jns
jecxz
sarb
in
popa
mov
mov
fucomp
adc
cli
sbb
mov
dec
test
mov
sub
cmp
fwait
lahf
ljmp
cld
fsubs
xchg
lods
pop
mov
mov
jno
cs
adc
pop
cmp
xchg
push
push
leave
mov
push
push
stos
dec
fidivrl
mov
rcll
jle
pop
xor
sbb
jl
adc
je
es
and
ret
cmp
fadds
push
sub
cs
pop
enter
xchg
adc
jno
dec
mov
inc
pop
mov
push
fcomps
xchg
mov
add
stos
inc
gs
cmpsb
lods
orb
movsb
std
pop
inc
shrl
or
pop
clc
in
mov
sub
pop
int3
repz
or
mov
pushf
popa
pusha
jae
mov
out
pop
push
nop
outsl
mov
jge
pop
jle
and
cmp
jmp
push
mov
ficomps
cltd
mov
cli
scas
data16
fcompl
adc
test
push
les
and
and
in
shrb
jp
push
arpl
jnp
ret
pop
add
pushf
push
lods
push
adc
out
shlb
mov
sbb
pop
push
cmp
mov
pop
outsb
pop
pushf
call
push
hlt
pop
cmp
mov
mov
adc
stc
xor
ds
xor
enter
cmp
hlt
pop
clc
mov
dec
mov
mov
movsl
and
pop
test
or
ss
or
lods
pop
rclb
xchg
popl
jmp
pop
cmp
in
add
jno
stos
into
sub
mov
and
int
xchg
inc
pop
add
pop
cmp
add
lds
cmp
iret
inc
pop
in
jae
inc
loopne
jno
pop
cmpsb
sub
xchg
push
mov
pop
jbe
push
popl
push
mov
dec
imul
fmull
out
loopne
pop
jmp
jmp
mov
ficoml
insl
sbb
add
push
mov
test
rclb
sti
adc
cmpsb
cmpl
add
and
in
sbb
adc
cmp
pop
xchg
pushf
test
push
sti
ror
sbb
clc
outsb
fidivl
pop
push
test
ja
fldenv
insb
dec
xlat
mov
rcll
pop
adc
arpl
or
negb
lods
std
pop
push
mov
adc
imul
outsl
xchg
xchg
in
mov
inc
mov
sahf
push
loopne
xchg
rorb
xchg
and
jne
jp
sbb
pop
jl
xor
dec
pop
lea
imul
mov
repz
ds
into
test
shrb
cmc
sti
loope
jmp
frstor
pop
das
gs
push
sub
mov
jl
mov
incb
lods
outsl
cs
fimull
movsl
pop
cmpxchg
jb
iret
test
cli
jnp
nop
out
fsubr
pop
int3
sub
xchg
inc
addr16
dec
pop
mov
imul
mov
push
xor
xchg
daa
mov
sbb
test
pop
push
ss
jp
cwtl
cli
mov
mov
addl
daa
sub
xor
mov
fwait
pop
lods
les
cwtl
arpl
cli
stos
test
mov
jecxz
or
mov
inc
out
arpl
mov
test
adc
rorl
sub
cld
dec
pop
xchg
sti
fwait
inc
sub
mov
imul
jl
ret
cmp
ret
fcompl
add
movsl
nop
std
push
pop
sbb
dec
cs
jmp
xchg
icebp
ror
bound
repz
mov
in
daa
dec
cmp
inc
in
pop
test
mulb
add
mov
or
cltd
cmpsl
imul
jle
pop
pop
cmp
dec
mov
sub
or
pop
mov
out
fidivrl
add
fmul
adc
cltd
pop
ficoml
jmp
sub
cmp
push
xlat
aam
sub
mov
cmp
or
mov
fldcw
nop
mov
adc
mov
xchg
scas
call
pop
test
sub
push
leave
xchg
xchg
outsl
sar
add
adc
mov
ja
cmp
out
ficompl
cmc
mov
fldt
jle
adc
sub
ja
adcb
lods
push
mov
and
adc
push
mov
repnz
sub
push
ret
fisttpl
movl
xchg
fucomi
adc
aaa
xchg
in
mov
xchg
jl
cwtl
dec
push
inc
ret
lret
pusha
insb
bound
pop
push
cmp
fcmovu
rcll
popl
cmp
jo
and
inc
mov
lcall
xchg
cmp
mov
fmuls
mov
js
pop
mov
mov
xchg
repnz
imul
push
add
shll
stos
cmpsb
mov
mov
mov
int
sbb
mov
mov
ljmp
mov
push
sbb
mov
mov
test
xchg
mov
sub
test
cmp
negb
cmc
shl
insb
xor
stos
call
mov
xor
jnp
cmp
scas
push
daa
outsl
test
pop
mov
imul
movsb
insl
leave
push
mov
repnz
cwtl
xor
mov
jae
inc
lds
in
fsubrs
movsl
xchg
ja
dec
pop
sbb
cmp
lock
xchg
subb
repz
inc
mov
sbb
lock
ret
dec
insl
push
mov
push
sbb
lcall
add
or
divb
push
int
movsl
sbbb
mov
pop
push
jp
out
or
mov
cwtl
pop
arpl
nop
fwait
mov
leave
ret
nop
add
inc
dec
xchg
lahf
mov
icebp
jecxz
out
jmp
repnz
inc
test
fwait
insb
xor
notl
repnz
mov
xchg
add
cmpsb
bound
adc
fwait
push
outsl
fiaddl
pop
imul
or
lea
lock
pop
fmuls
mov
enter
jne
iret
cmp
push
stc
mov
pop
scas
xchg
lods
fidivl
cmp
les
or
test
pop
imul
pop
test
loope
repnz
aaa
imul
xor
adc
mov
add
test
mov
dec
loopne
adc
xchg
sbbb
leave
xor
adc
push
or
sub
push
in
push
pop
aad
mov
scas
test
js
sbb
jle
ja
mov
mov
adc
ljmp
clc
mov
lcall
mov
or
adc
adc
loope
and
mov
stc
jae
lods
mov
pop
push
loope
mov
pop
mov
hlt
rcr
or
rcll
and
mov
cmp
adc
and
or
mov
jnp
push
hlt
fiaddl
or
sub
cmp
js
je
cmp
pop
test
mov
sbb
ljmp
ljmp
fldcw
push
lea
add
sub
xchg
sbb
push
inc
mov
mov
fxch
stos
mov
xlat
push
push
sub
push
fs
mov
dec
leave
adc
lea
addr16
ret
mov
rclb
cmp
out
pop
fistpl
xor
frstpm(287
xchg
test
stos
lret
xor
mov
cwtl
js
mov
mov
cmp
ret
pusha
xchg
xchg
or
mov
stos
idiv
sub
mov
lods
lret
add
mov
inc
lock
mov
stos
pusha
push
mov
cmp
or
xor
ficompl
fwait
call
mov
xchg
leave
pop
nop
mov
mov
adc
cmc
scas
pop
pop
test
scas
jl
xchg
mov
pop
ds
scas
mov
in
inc
lahf
repz
andb
mov
push
inc
mov
fsubs
repz
ret
dec
out
adc
pop
scas
xchg
test
stc
fwait
mov
imul
xor
xchg
addr16
shl
rorl
push
lock
jno
adc
dec
xchg
icebp
loopne
aam
gs
or
add
nop
ljmp
cmp
pop
decl
mov
push
into
cmp
adc
lcall
lock
lea
xor
arpl
stos
or
stos
sbb
scas
fs
cli
rcrl
add
stos
mov
cmpsl
mov
mov
inc
ja
jo
fistl
pusha
fcmove
lahf
stos
shl
pop
lret
fldt
xchg
push
mov
mov
push
pop
jmp
pop
mov
fistps
cmp
aad
mov
lea
xchg
mov
dec
jbe
push
push
xchg
push
and
xchg
mov
icebp
jmp
stc
pop
ret
pop
adc
and
cltd
sbb
movsl
out
test
add
addr16
mov
lret
leave
adc
stc
fisttpl
xlat
fistl
pop
hlt
mov
mov
imul
out
dec
sub
lcall
jmp
mov
stos
lret
inc
mov
in
sub
out
cmp
pop
iret
ds
xchg
sbb
pusha
repnz
fcomi
sub
addr16
negb
sub
sti
test
jmp
stos
add
lahf
or
clc
xchg
and
jmp
cltd
stc
add
mov
xchg
ljmp
xchg
mov
enter
sbb
mov
scas
mov
sbb
cli
cmp
movsb
jnp
pop
negb
leave
fisttpl
xor
jae
xchg
sbb
xchg
mov
mov
in
fpatan
outsb
scas
sub
or
fwait
and
pop
adc
xchg
xchg
test
enter
sub
pop
in
mov
cwtl
ficompl
sbb
sarl
jno
mov
inc
dec
mov
dec
inc
mov
imul
out
out
jmp
stc
inc
mov
scas
inc
dec
cmp
sub
lea
je
mov
dec
cmpsb
or
pop
fidivl
cmp
orb
xor
stos
aaa
mov
sti
insb
cmp
sbb
sti
sub
stos
mov
pusha
pop
lods
pop
lahf
mov
mov
dec
aas
repz
cwtl
mov
test
xchg
les
sbb
xchg
cwtl
mov
nop
lcall
test
js
and
fisttpl
stos
xor
cmp
div
xor
sub
cmp
pop
shrl
loop
stos
repnz
jp
into
mov
test
pushf
fistpll
pop
mov
inc
push
mul
adc
popf
ja
inc
divl
test
xchg
out
cmp
push
fwait
mov
call
cmp
mov
lds
cwtl
pop
add
idivb
dec
lahf
out
lock
out
mov
and
cmp
in
pop
and
mov
sahf
inc
add
mov
sti
add
sub
mov
ljmp
sub
sub
repz
jne
lahf
in
mov
add
mov
inc
sahf
jecxz
leave
mov
je
cmp
in
outsb
stos
test
pop
sub
adc
sti
cmp
sub
leave
fcomi
cs
in
cmp
sub
call
lcall
fdivrs
popa
mov
outsl
stos
mov
loopne
mov
lods
popl
xchg
fdivr
push
leave
mov
cmp
inc
mov
sbb
jl
imul
lret
jle
push
and
xchg
ljmp
nop
gs
pop
mov
mov
adc
xor
mov
leave
push
sbb
daa
lods
rcrb
rcrb
push
mov
lods
or
adc
xlat
jns
repz
sbb
inc
ficoms
cltd
mov
xor
mov
lahf
stc
pop
lock
jns
int3
fildl
icebp
loop
mov
repnz
fidivrl
inc
insb
jnp
aad
cmpsb
lods
mov
mov
es
pop
inc
movsb
rcrl
outsl
jne
fadds
push
call
inc
cmp
addb
inc
adc
pusha
nop
sbb
pop
mov
aas
dec
mov
cmp
mov
mov
fsts
inc
cmp
pop
fidivrl
xchg
repz
mov
xor
loopne
jmp
adc
ja
js
lds
gs
pop
inc
mov
loope
cmp
mov
xchg
adc
fs
ljmp
or
pusha
pop
cmp
cmp
sti
je
sbb
popa
imul
out
adc
adc
mov
or
inc
cmc
psubusw
fldt
sbb
xor
pusha
mov
or
aad
enter
jle
ficoml
adc
xchg
leave
jge
mov
test
fmuls
lock
mov
push
sbb
in
mov
shll
sub
mov
inc
std
int3
scas
in
jno
mov
and
insb
and
add
push
loop
or
icebp
adc
out
pop
shlb
mov
mov
mov
xchg
jns
lods
imul
test
in
insl
mov
sbb
push
cmp
and
fdivl
cltd
jns
mov
inc
js
loopne
or
adc
je
xchg
orb
hlt
mov
cmp
test
stos
adc
lcall
xchg
pusha
pop
mov
jecxz
add
insb
and
in
jno
mov
ja
sub
fistpl
jl
movsl
mov
jae
xor
adc
add
xchg
lahf
sbb
data16
mov
adc
cmp
nop
inc
mov
and
test
mov
mov
adc
mov
cmc
pop
add
pop
xchg
sub
mov
daa
les
fcomp
mov
ja
imul
pop
jae
mov
jg
xlat
aad
icebp
int3
leave
jmp
xchg
xchg
adc
pop
sbb
movsl
rol
sub
les
mov
iret
nop
xchg
mov
stos
lret
cmp
fwait
js
stc
mov
mov
das
and
mov
adc
push
scas
and
xchg
lock
sarl
mov
fstps
pushf
addb
fcmovbe
es
mov
lret
sub
xor
cmp
sbb
cmp
idivl
js
fstpt
xchg
cmp
aam
out
sbb
jno
repnz
fwait
test
push
aas
adc
mov
or
push
sbb
sbb
mov
mov
mov
adc
pop
cmp
jnp
ds
push
aad
mov
push
xchg
or
in
xor
jbe
pop
cmpsl
out
add
outsl
sub
fisubs
fidivl
mov
dec
lcall
adc
mov
jecxz
sub
les
inc
cmp
pop
push
mov
push
jne
mov
pop
pop
sar
bound
inc
add
inc
cmp
and
sbbl
out
in
cli
popa
inc
xchg
stos
adc
push
filds
cmc
inc
je
test
cmp
xchg
cld
pop
mov
mov
cmp
jp
std
popf
xchg
or
sub
divb
cld
shl
cmp
push
inc
stos
jno
mov
into
nop
mov
cmp
repnz
adc
mov
stos
repz
mov
jne
mov
hlt
sbb
push
mov
adc
ja
push
pop
icebp
add
dec
stos
out
and
pop
xchg
stos
mov
push
loop
icebp
mov
pop
push
shll
shll
cmpsb
test
mov
in
mov
out
popa
mov
cmpsb
movsl
jmp
xor
jnp
lret
lcall
adc
inc
repnz
inc
sub
test
lods
mov
pop
aad
mov
and
jg
cmp
ljmp
cmc
or
fisubrl
repz
div
jbe
lcall
mov
xor
pop
mov
pop
and
enter
xor
adc
pop
cmp
and
hlt
imul
repz
stc
pop
ljmp
outsl
cmc
mov
jnp
push
mov
mov
mov
dec
xchg
inc
sbb
cltd
sbb
inc
sub
leave
jl
pop
shrl
xchg
cmp
pop
lahf
cwtl
js
jge
ret
mov
popa
scas
xchg
jmp
pop
push
js
mov
popa
stos
in
pop
add
jno
scas
adc
mov
lahf
inc
lds
loopne
add
mov
push
jecxz
jb
cmp
mul
sti
dec
sub
xor
xor
push
push
lods
sub
adc
cmp
adc
rorb
mov
repnz
loope
xchg
test
or
mov
mov
mov
add
mov
dec
fsubrs
jge
repnz
out
pop
test
mov
insl
fcomps
test
repnz
mov
repnz
out
into
cmp
or
inc
iret
stos
mov
and
fwait
cld
mov
in
aaa
jg
aad
movsb
xlat
pop
sub
cmp
outsl
imul
mulb
cld
imul
icebp
adc
imul
add
test
mov
mov
adc
loop
mov
repnz
mov
mov
pop
loope
xchg
dec
outsl
mov
jns
dec
fistpll
push
mov
xchg
dec
stos
mov
jnp
in
mov
xchg
aas
inc
or
sahf
pusha
test
cmp
mov
les
sbb
sub
out
stc
sub
js
lret
stos
cmpsb
js
out
cld
outsl
mov
jnp
cmp
mov
and
and
mov
xchg
xchg
ja
push
jnp
mulb
jl
add
sbb
mov
inc
pusha
mov
pop
leave
push
pop
dec
cli
xchg
adc
cmp
dec
sub
pusha
pop
jbe
mov
mov
mov
xchg
mov
mov
cld
xor
movsl
cmp
adc
adcb
pusha
test
insb
call
and
pop
mov
fstpl
fstpl
mov
mov
lahf
lret
sahf
mov
xchg
adc
test
push
xor
push
pop
fdivrl
adc
xchg
push
movsb
xchg
out
dec
rclb
lret
push
cmp
push
ljmp
add
repz
push
mov
xchg
popa
stos
sub
adc
mov
adc
pop
mov
cmp
adc
cmp
fwait
lcall
ljmp
jg
je
push
rorb
mov
dec
mov
xor
rclb
sbb
xchg
xor
mov
mov
lcall
test
and
xchg
adc
xor
ja
or
cmp
xchg
lahf
test
lods
xor
dec
push
mov
jae
aad
push
out
test
scas
xchg
leave
pop
mov
int3
pusha
mov
hlt
stos
push
adc
jp
bound
cmp
push
mov
dec
dec
mov
adc
xchg
je
inc
ja
xchg
mov
hlt
dec
xchg
jl
cltd
mov
push
insb
push
add
cwtl
add
sarl
pop
xchg
loope
mov
arpl
adc
xchg
cld
out
insl
mov
repz
xchg
xor
inc
outsl
dec
xor
cltd
cmp
add
ficompl
clc
push
mov
mov
inc
repz
icebp
mull
add
mov
loop
dec
jo
mov
fldenv
shrl
mul
ret
sbb
mov
cmp
mov
hlt
xor
inc
sbb
lret
cld
lods
je
ljmp
test
xchg
sbb
inc
mov
xchg
mov
ss
popf
leave
pop
sbb
sub
xlat
xchg
fldenv
mov
loop
scas
xor
adc
leave
adc
push
add
aas
lcall
sbb
push
les
popa
jp
pop
call
xchg
xor
mov
in
pop
notb
hlt
pop
repz
mov
shld
pop
cmp
pop
sub
mov
cmp
jecxz
or
aas
pop
mov
repnz
mov
dec
call
push
ds
repnz
int3
test
ljmp
cmp
xchg
mov
and
and
lods
mov
test
pushf
or
add
test
mov
frstor
test
push
mov
fbld
fidivrs
stos
flds
sar
decl
pop
adc
fnsetpm(287
cmp
testb
pop
fisttpl
cmp
cmp
cmpl
sbb
cmp
fwait
cmp
inc
fistl
mov
cmp
adc
pop
cmp
jb
leave
es
xchg
pop
mov
mov
subl
xchg
jnp
cmp
loopne
testb
xlat
mov
js
push
jne
stos
xchg
ja
icebp
xor
into
fwait
lods
rcr
xchg
xchg
lods
cli
in
lods
mov
dec
int3
fisubrl
ficoms
mov
test
cltd
xchg
sahf
lcall
idivb
inc
in
cmp
gs
jbe
pop
sbb
cmpsl
cmp
aad
out
xor
push
dec
pop
or
sub
push
lods
xchg
add
mov
mov
sbb
dec
cmp
jecxz
mov
hlt
icebp
stos
imul
mov
xor
std
jmp
xchg
popf
jg
cmp
test
dec
ret
cmp
js
mov
xor
scas
or
shll
sbb
dec
xor
rorb
andb
sub
mov
imul
js
mov
cld
shll
push
pop
cmp
inc
push
pusha
sub
sub
shlb
inc
repnz
cmp
mov
push
dec
jnp
pop
jno
lahf
shlb
push
xchg
dec
stos
inc
lock
push
mov
in
jo
aam
mov
inc
pusha
test
jmp
push
fidivrl
test
jns
sbb
jg
dec
adc
std
rorl
mov
ficompl
fadd
mov
cmp
nop
mov
and
mov
mov
push
stos
loope
and
ljmp
sbb
test
sub
aad
in
fisttpl
subb
pop
pop
leave
mov
jmp
stos
sti
addr16
fwait
sar
insl
cmc
ret
jnp
cwtl
and
inc
adc
mov
and
fstpl
cmp
lcall
call
leave
aad
ljmp
jne
mov
sub
js
mov
jle
pop
pusha
xchg
pop
aaa
dec
jecxz
lods
or
sub
dec
xor
dec
cmp
arpl
adc
mov
and
sbb
xchg
cmp
je
jo
cmp
cmp
dec
mov
xchg
push
add
jb
mov
mov
xor
adc
xor
jg
push
dec
adc
mov
inc
and
fldln2
rep
jmp
es
loopne
xor
xor
hlt
inc
cwtl
inc
cmp
shrl
repnz
xor
push
lea
dec
mov
leave
int
test
sbb
imul
mov
scas
fucomi
push
sbb
fldcw
mov
and
push
mov
mov
shll
mov
cmp
mov
mov
rorb
mov
sbb
fisubl
mov
dec
mov
mov
inc
ja
pop
jmp
sub
jmp
xor
fcoms
cmc
inc
cmp
fwait
lds
imulb
fsubrs
pop
xchg
adc
cltd
pop
cmp
enter
leave
shrl
fwait
jle
sub
xchg
stos
fwait
xchg
in
inc
inc
push
ljmp
stos
repz
ja
aas
sbb
pop
inc
inc
stc
subb
xchg
inc
aaa
and
aas
in
or
mov
mov
push
pop
popa
push
add
sub
sub
mov
push
xchg
pop
push
out
sbb
stos
sub
xorb
orl
mov
pop
jnp
fnstsw
xchg
mov
mov
cmp
stc
or
sub
jb
push
fsubrp
outsl
or
lcall
lahf
jmp
scas
push
jl
mov
or
mov
ficompl
mov
test
cmp
subl
mov
stos
push
insb
lea
ss
jecxz
mov
lahf
lcall
daa
mov
sub
mov
lea
jge
rcrl
xchg
add
movsl
dec
mov
pop
fs
push
mov
lret
and
cmp
aas
or
hlt
movsl
lret
mov
leave
pop
add
enter
xlat
out
mov
call
xchg
push
repz
jo
imul
cmc
int3
fwait
xchg
xor
stos
mov
xchg
clc
idivl
icebp
mov
scas
pop
xor
pop
les
cmpsl
incl
jecxz
and
mov
xor
pop
mov
push
jae
sub
sti
ja
pop
mov
mov
mov
xorl
insb
push
pop
pop
lret
xlat
add
xchg
mov
cmc
sti
jmp
mov
jg
in
call
mov
or
test
mov
in
mov
adc
mov
adc
loopne
pop
mov
pop
mov
mov
inc
dec
pop
mov
xor
stos
pop
fsubrs
push
xchg
pop
sub
mov
and
jp
sub
xor
pop
les
jbe
je
mov
cmc
dec
enter
mov
cmc
dec
lea
xor
popa
jo
cmc
dec
leave
out
jl
js
jo
cmc
dec
mov
pop
cmpsl
xchg
mov
xchg
pop
stos
fstps
fcom
int3
in
jp
lea
fidivs
pop
mov
jne
lea
fidivs
dec
js
test
lea
loop
push
mov
je
lea
loop
push
mov
cmc
dec
lea
xor
popa
jo
cmc
jle
enter
mov
cmc
outsb
lea
xor
popa
jo
cltd
add
pop
fildl
dec
or
fs
mov
cmc
dec
lea
fidivs
fs
mov
cmc
dec
lea
fidivs
fs
mov
cmc
dec
lea
fidivs
fs
mov
je
lea
xor
pop
les
cmc
dec
lea
fidivs
fs
mov
cmc
dec
lea
fidivs
fs
mov
cmc
dec
lea
fidivs
and
cmp
jo
fiaddl
stos
mov
aam
in
jp
lea
fidivs
pop
mov
sub
xor
popa
pusha
pop
cmc
xor
adc
mov
cmc
dec
lea
xor
mov
cmc
dec
lea
loop
pop
mov
cmc
dec
lea
fidivs
dec
js
les
dec
pop
xchg
lcall
mov
mov
out
xchg
sahf
mov
dec
sbb
xchg
xchg
out
out
hlt
repz
xchg
xchg
mov
xchg
lret
div
cmc
ljmp
xor
jbe
push
pop
out
leave
popa
scas
mov
xchg
push
fldenv
loop
push
test
insl
mov
push
pslld
jbe
scas
rcr
pop
stos
cmp
and
jnp
and
mov
ljmp
jge
scas
mov
jg
pop
cmp
mov
mov
adc
mov
mov
add
jge
inc
jle
xchg
loop
hlt
shlb
sbb
fsubs
dec
add
lret
stos
xor
inc
adc
das
mov
dec
inc
xchg
add
mov
mov
or
jo
pusha
sbb
push
xchg
inc
xchg
push
mov
mov
test
pop
jg
lds
xor
adc
dec
fwait
pop
and
add
lcall
push
in
xchg
adc
or
xlat
fwait
mov
mov
xchg
test
mov
out
mov
xchg
lahf
sub
cmp
ud1
jl
mov
cmp
in
sbb
push
scas
inc
pop
push
ds
mov
rcrb
adc
mov
scas
inc
inc
popf
addr16
xchg
push
push
push
std
pshufw
mov
xchg
inc
scas
testb
and
mov
and
xchg
xchg
iret
mov
sbbl
loope
mov
leave
int
lret
pop
add
mov
mov
jl
mov
cmc
lock
notl
mov
mov
or
xchg
xchg
ret
add
pop
cmc
shrb
lock
sahf
fs
in
adc
cmc
mov
xchg
sub
lahf
lock
test
sub
stc
div
int
jb
rclb
cmp
xchg
dec
jle
lret
mov
repz
ja
pusha
cmp
fwait
enter
movsl
pop
mov
jle
pusha
jno
ret
jg
popf
pop
or
jo
repnz
addb
stc
push
mov
aam
dec
xor
mov
jbe
adc
mov
call
icebp
inc
pop
mov
repnz
rorl
repz
out
mov
inc
inc
jg
subb
mov
ja
xchg
pusha
cmc
lret
std
sub
mov
sub
sub
out
jle
gs
call
pop
inc
xchg
inc
mov
lea
not
pop
cmc
ds
pop
mov
push
aam
xchg
lock
and
mov
cmc
add
cs
icebp
adc
outsl
into
lods
mov
dec
mov
mov
mov
xor
and
pop
sub
mov
cmp
mov
sub
add
es
in
xchg
outsl
xor
sbb
stc
fucomi
push
and
sarb
jg
adc
lret
out
add
into
mov
sub
pusha
fidivrl
sub
push
mov
dec
jns
test
mov
icebp
push
or
or
jo
mov
xchg
shr
imul
or
into
xor
divb
sub
outsb
les
add
sub
pop
pop
out
sub
jbe
xchg
mov
repnz
sub
mov
and
enter
scas
jle
ret
pop
out
scas
lea
notl
out
adc
repnz
and
sub
hlt
xchg
adc
sub
lret
pop
lret
push
mov
bound
hlt
loop
test
inc
dec
scas
mov
xchg
cmc
lret
inc
mov
sub
std
ds
iret
cmp
adc
lret
mov
les
sbb
and
mov
fwait
dec
xchg
insb
pop
repnz
sub
xchg
jmp
xchg
sarl
add
xchg
lret
lahf
sub
bound
icebp
xchg
mov
cmc
shlb
and
sub
sbb
lods
dec
dec
bound
cmpsl
push
cmp
and
and
outsl
into
ss
push
or
mov
or
sbb
cmpsl
adc
shl
xchg
jmp
cli
xchg
xor
lahf
cltd
mov
bnd
push
out
and
xadd
into
nop
cmc
xchg
xchg
sub
mov
int3
cs
cld
fidivs
mov
xchg
push
sub
fwait
jne
push
mov
and
jno
mov
inc
jb
call
lds
lahf
jge
sbb
xchg
pop
xchg
push
xchg
out
jb
xchg
ljmp
adc
rcrl
pop
mov
rcl
test
lcall
repnz
adc
int3
cmc
pushf
xchg
lock
cli
and
popf
mov
pop
std
sub
out
in
mov
xchg
mov
aam
int3
push
sub
mov
xchg
add
jo
inc
xchg
push
out
mov
cmc
xchg
outsl
mov
jle
loop
ljmp
xchg
loop
es
sbb
sbb
imul
idivb
dec
pop
icebp
jmp
in
or
sub
sub
mov
shll
mov
ror
xchg
popf
cmp
sub
int3
dec
mov
lods
je
cmp
adc
lds
loopne
jnp
nop
sub
push
xchg
fisubrs
nop
and
stos
mov
repz
mov
adc
fisubl
sub
sbb
fildll
mov
mov
pop
xchg
rcl
add
push
push
mov
sbb
lods
mov
lcall
push
rcrb
add
sub
imul
add
aam
mov
push
shrb
xchg
mov
mov
add
xchg
lret
mov
adc
hlt
insl
lea
lahf
xchg
mov
sbb
cmp
enter
bound
pop
lret
leave
out
arpl
mov
adc
scas
cmp
xchg
inc
lods
dec
fnstcw
divl
jl
pop
and
into
insl
lret
mov
mov
mov
xor
xchg
mov
push
sub
and
int3
push
addb
mov
mov
test
and
into
insl
lahf
out
xchg
add
jae
pop
xchg
lahf
pop
inc
xchg
icebp
ret
and
inc
sub
out
push
or
int
test
inc
lahf
mov
xor
repnz
int
inc
ret
jns
testb
mov
repz
hlt
es
add
or
out
push
xor
js
loope
mov
xor
sbb
mov
mov
out
and
xor
xchg
jge
or
sub
cmp
xor
leave
mov
cli
inc
lcall
ja
cmp
or
lds
in
mov
xchg
inc
inc
mov
subl
lea
les
div
sub
dec
into
pop
cmp
adc
out
jle
repz
pop
hlt
or
push
mov
insb
xor
jecxz
testl
fisubs
sbb
lcall
xor
gs
mov
jo
jmp
cltd
mov
and
out
mov
and
rcrb
imul
out
mov
pushf
lahf
jno
lret
jbe
sub
push
jnp
sub
mov
and
mov
mov
into
repz
lcall
mov
iret
les
fmulp
stc
mov
fists
mov
scas
pop
shl
lock
lods
and
popa
arpl
xor
push
mov
or
or
mov
inc
xor
jecxz
mov
popa
add
repz
and
xchg
add
inc
loop
inc
mov
mov
dec
push
xchg
icebp
xchg
shr
movsl
or
shll
adc
inc
sbb
jle
es
fisubs
jmp
xor
mov
sub
mov
pop
shrb
push
mov
mov
rcrl
dec
cmp
lret
xchg
cmc
jno
sahf
icebp
repz
daa
mov
jb
sbb
stos
mov
inc
in
jl
sub
inc
cmp
aad
ja
ljmp
out
ret
and
dec
inc
shll
push
xchg
xchg
jmp
dec
sub
dec
xchg
mov
and
and
pop
xorps
adc
cmc
lret
xchg
xor
push
mov
mov
int3
or
lret
int
mov
notb
push
clc
repz
je
lods
int
mov
adc
sub
sahf
xchg
mov
outsb
in
mov
and
gs
sar
xchg
movsl
loop
rep
fwait
call
jne
adc
aas
movsb
mov
or
adc
xchg
icebp
rcll
mov
xchg
dec
ja
dec
inc
mov
mov
or
cmc
mov
jb
cmp
test
xchg
ds
imul
aas
cmp
or
aam
sbb
cltd
sbb
into
inc
sub
mov
out
sbb
mov
or
shll
mov
pusha
loope
test
dec
into
lret
pop
stos
sbb
pop
dec
and
push
jge
or
xorb
jl
imul
movsl
jne
pushf
mov
mov
repz
jbe
arpl
lcall
cmp
pop
adc
mov
cmc
push
scas
mov
int3
bound
mov
test
or
add
push
ja
mov
loop
loop
mov
mov
lods
xchg
addr16
inc
ror
xchg
sbb
mov
xchg
and
lock
out
test
mov
into
push
daa
cld
push
mov
xchg
ds
cmpsb
sti
dec
jg
cmc
cmp
repz
add
test
inc
adc
xchg
mov
sbb
rcr
mov
mov
sub
imul
mov
hlt
xchg
jo
or
in
daa
add
icebp
xchg
mov
jb
sub
and
aaa
leave
sbb
sub
shr
xchg
popa
leave
pop
mov
dec
sub
roll
test
movsb
xchg
imulb
mov
movsl
ja
pushf
xchg
adc
xor
rcrb
int3
xchg
cmp
cmc
xchg
in
xor
sub
or
cmp
aaa
ljmp
into
mov
ds
sbb
pop
adc
xchg
leave
arpl
sti
jnp
xchg
stos
sbb
mov
call
xchg
loop
xor
xchg
sub
in
cmp
mull
cmp
cltd
lea
into
sbbl
xchg
inc
sub
xchg
scas
int3
sub
xchg
xor
repz
lret
adc
lock
mov
jmp
cld
mov
xchg
cli
roll
xchg
dec
jl
xchg
rclb
div
inc
xor
sbb
sub
xchg
and
ret
shrl
test
ret
or
fs
cli
subb
push
roll
mov
cmpsb
mov
or
cmc
mov
mov
push
aam
inc
and
arpl
mov
and
leave
sbb
mov
cmpsb
or
mov
sub
jo
cli
sub
and
aad
mov
rcl
xchg
or
sub
cld
and
mov
sub
push
addr16
push
repnz
insl
mov
inc
in
lds
inc
decb
aad
sub
mov
xchg
mov
sub
popf
in
repnz
icebp
add
xchg
jo
mov
daa
jecxz
scas
fwait
test
sbb
inc
sti
mov
outsl
add
shrb
cmp
lods
jmp
ljmp
scas
add
jb
ss
push
movsl
jnp
int
jae,pt
scas
int3
enter
bound
mov
jno
mov
fwait
std
xor
xchg
sbb
mov
rcll
adc
fisubs
shlb
cs
push
ret
enter
stc
sub
sub
cmp
inc
lret
xchg
jecxz
mov
mov
mov
jecxz
jae
testl
sets
pop
pop
mov
sbb
push
jl
pop
xor
fwait
sahf
add
mov
jle
mov
xchg
sub
fstpt
out
and
push
inc
jge
fwait
movsb
mov
xchg
inc
std
cmpsb
cltd
inc
inc
jbe
and
push
lock
cmp
or
and
xchg
mov
jl
stos
add
icebp
sub
daa
adc
testl
sub
jbe
add
push
mov
mov
enter
push
inc
adc
xchg
jg
sahf
repz
lock
into
sbb
repnz
or
pop
mov
shll
sub
pop
sbb
add
xchg
enter
out
push
adc
jl
or
dec
mov
inc
push
inc
push
imul
in
jbe
xchg
mov
ja
movsl
jmp
jo
ljmp
and
push
paddd
daa
int
xchg
inc
cmc
loopne
dec
imul
mulb
lret
xchg
repnz
ss
xchg
movb
xchg
sub
pop
mov
sbb
jl
dec
repnz
jns
xchg
repnz
pop
movsl
jae
into
shrb
xchg
leave
cmp
fwait
cmpsb
sti
lock
xchg
mov
xchg
adc
mov
and
and
cld
rcl
or
pop
fstpt
and
into
mov
in
bnd
mov
mov
fisubs
or
xchg
out
imul
push
mov
out
fbld
fmul
sub
lds
shlb
jmp
mov
shl
ror
mov
pop
mov
popf
and
rcr
daa
orb
clc
push
loope
out
mov
mov
xor
sbb
icebp
jg
popf
jnp
xchg
lret
pop
out
xchg
gs
xchg
sub
lods
push
mov
mov
icebp
xchg
lods
sub
js
ficoms
or
aas
mov
loopne
sbb
mov
xor
sub
mov
mov
xchg
hlt
mov
rorb
sbb
sub
mov
icebp
inc
repz
rcrb
add
in
hlt
and
jmp
and
sub
push
cmpsl
jmp
inc
xchg
jl
std
aam
lea
loop
xor
icebp
dec
push
push
xchg
pop
insb
adc
rcll
mov
mov
addr16
addr16
std
mov
mov
adc
shlb
lret
mov
and
inc
sbb
push
mov
sbb
pop
sbb
sub
mov
repnz
add
xchg
add
fdivrl
fnstsw
div
iret
stc
xchg
sub
jmp
jnp
add
push
pop
shr
mov
stos
xchg
push
cmp
stos
mov
sub
fildl
lret
and
ljmp
stc
imull
mov
xchg
leave
jo
frstor
addr16
icebp
xchg
sub
inc
sub
sbb
mov
mov
adc
lds
std
or
pop
mov
repz
mov
mov
mov
test
adc
sub
out
sub
bound
pop
cmp
test
jge
or
add
into
jmp
lods
lret
pop
popf
repz
es
cs
and
out
into
iret
cmp
cmc
xchg
cmp
out
jmp
sbb
leave
icebp
xor
sarl
jl
into
aaa
xchg
idivl
pop
fidivl
sbb
test
mov
aad
and
jp
into
push
pusha
pop
dec
sbbl
xchg
inc
repz
cmpsb
sbb
add
xchg
jnp
xchg
scas
mov
data16
cld
or
adc
and
lret
adc
jne
nop
xchg
pushf
or
jno
lea
push
test
loopne
mov
xchg
inc
jne
out
mov
div
fwait
shl
dec
adc
xor
rep
nop
test
lret
inc
notl
stos
jge
repnz
outsb
std
arpl
adc
and
mov
pushf
fisubl
into
aad
mov
mov
add
inc
dec
sar
push
stos
icebp
sub
fwait
in
addr16
pop
or
inc
mov
out
cmp
inc
inc
inc
hlt
pop
mov
mov
ja
push
jge
leave
push
fstl
and
into
push
jo
push
sbb
lret
push
sbb
outsl
mov
mov
sahf
mov
mov
lea
mov
call
or
arpl
ret
fwait
cltd
test
mov
nop
jl
nop
out
push
pop
das
jno
or
call
dec
xchg
mov
push
sub
xchg
inc
outsl
repz
adc
mov
push
mov
out
frstor
mov
xchg
inc
xor
test
xchg
jae
cmpsl
and
repnz
sbb
inc
in
xchg
inc
adc
mov
mov
jg
xchg
iret
mov
fstpl
or
les
lods
rorb
gs
imul
xchg
jmp
pushf
and
add
leave
into
inc
nop
notb
lret
divl
dec
inc
scas
and
popa
sahf
pop
inc
fbld
mov
xchg
and
ljmp
mov
dec
cmp
into
int
adc
mov
xchg
jl
add
je
adc
repnz
mov
xor
lds
push
sbbl
repz
mov
data16
push
fnstsw
xchg
stc
fucomi
mov
push
test
sub
xor
lret
and
xor
push
test
xor
xor
sub
or
push
scas
adc
sbb
inc
mov
clc
mov
repnz
shll
push
or
jmp
out
jb
xchg
inc
jae
sub
xor
fs
inc
shlb
icebp
pop
repnz
and
popa
ja
mov
jmp
test
push
push
mov
js
daa
jmp
test
mov
in
mov
inc
mov
inc
jge
fisttps
xchg
stos
into
stc
lret
xchg
gs
cmpsb
repz
jne,pt
popf
mov
cmp
pop
xchg
clc
into
jb
sub
lea
inc
out
test
mov
jl
arpl
jno
mov
inc
aad
add
adc
mov
into
and
repz
adc
rep
and
pop
sbb
repz
dec
push
leavew
repnz
jl
sub
in
imul
call
lret
inc
and
adc
sub
das
aad
mov
arpl
mov
pushf
jmp
and
repnz
jge
sbb
adc
mov
mov
pop
stos
jmp
sub
mov
leave
ds
mov
rcll
jp
loope
jl
xchg
bound
lcall
scas
out
add
cmc
inc
jmp
mov
dec
push
mov
adc
test
pop
mov
mov
inc
push
jge
stos
repz
xchg
idiv
xor
sbb
shrb
imull
inc
testl
xchg
jo
and
sbb
and
mov
std
repnz
xchg
lret
inc
mov
inc
jbe
adc
mov
sub
loope
sbb
push
jb
lods
push
jmp
into
daa
mov
mov
jmp
das
pop
rorl
gs
imul
and
sarb
mov
xor
push
or
mov
ror
inc
bound
inc
jl
xor
call
and
out
aas
mov
adc
add
aam
mov
sub
pop
xchg
in
lret
xchg
data16
jne
add
icebp
xchg
adc
insb
movsb
imul
mov
test
icebp
int
clc
push
mull
pusha
in
jmp
adc
mov
mov
push
cwtl
push
andl
jnp
mov
xor
jno
fwait
sbb
xchg
push
pop
mov
push
dec
dec
mov
cmp
out
mov
or
mov
mov
adc
lcall
mov
dec
sub
mov
xor
into
push
adcl
sub
aad
or
cmc
mov
rcl
mov
add
xchg
out
es
and
shrb
mov
fstl
pushf
xor
in
int3
ja
adc
xchg
dec
jle
jno
adc
jo
mov
adc
jae
int
push
sub
cmp
mov
add
mov
lcall
xchg
pop
jge
int
roll
pop
or
push
rorb
mov
jge
ljmp
stc
lock
mov
xchg
repnz
mov
sub
cmp
in
je
stos
sub
jge
lock
xchg
jae
in
movsl
mov
pop
repnz
push
pop
popa
xchg
xchg
sbb
jbe
jb
lods
cmc
add
and
push
pop
test
push
cmp
les
loop
aas
shrb
div
arpl
xchg
out
int
lods
sahf
push
loop
push
cmpsb
mov
inc
int
mov
push
mov
push
ss
mov
jmp
push
sarl
jmp
cmp
pop
fisubs
subl
insl
mov
repnz
add
xchg
setp
or
incl
lcall
mov
scas
add
lcall
xchg
adc
xchg
and
jbe
roll
or
cmp
daa
shr
add
inc
ljmp
xchg
dec
int3
adc
movsb
fcomps
insb
pop
inc
sub
popa
loopne
stos
insl
add
cmc
sub
or
out
mov
mov
jae
xchg
inc
shll
mov
mov
mov
cmp
jns
jnp
dec
pop
in
lds
pusha
push
mov
mov
sub
lahf
pop
sahf
in
or
in
and
aam
notb
mov
lret
xor
mov
repnz
mov
and
xchg
lret
loope
pusha
in
push
out
jg
es
test
or
adc
insl
sub
xor
inc
xchg
cld
subb
push
in
and
and
outsb
sub
mov
hlt
ja
divl
pop
xchg
and
sbbl
mov
aas
add
pusha
sub
movsl
or
add
mov
inc
xchg
int
adc
mov
inc
int
and
jg
call
pop
repz
ficoml
out
popf
lret
inc
sub
jecxz
gs
inc
push
notb
xchg
cli
lea
test
fildll
repz
push
test
mov
sbb
dec
cmp
mov
shl
jae
in
popa
xchg
loop
decl
mov
sub
out
mov
mov
jp
cltd
sbb
das
int
inc
test
push
mov
xchg
pop
jge
loop
lahf
xchg
icebp
mov
mul
fwait
syscall
adcl
and
mov
fdivrp
mov
fdivs
movsb
mov
dec
lock
and
sub
ror
or
mov
insb
mov
sbb
jns
test
loopne
mov
stos
jl
fildll
push
into
gs
cwtl
sarl
add
and
out
pop
sahf
push
or
lock
push
mov
fst
push
inc
movsl
mov
and
dec
mov
push
adc
jbe
jo
or
mov
popf
outsl
repnz
xchg
into
pop
adc
jle
and
call
test
pushf
cwtl
leave
daa
ds
stos
negl
rcrb
adc
icebp
jg
xorb
test
daa
cmp
mov
daa
jns
mov
out
fstl
sbb
xchg
push
inc
dec
loopne
lret
dec
mov
xor
ret
xor
shlb
xor
pop
pop
leave
sub
lret
push
shrb
pop
popf
pop
shll
je
adc
scas
xchg
jne
lcall
addr16
std
lock
fisubrs
inc
or
push
fsubs
lock
xchg
dec
ret
lcall
iret
inc
sti
testb
xchg
decl
inc
dec
sbb
loope
cli
scas
sbb
repz
data16
mov
leave
xchg
ret
fwait
icebp
out
in
and
insl
push
cmp
mov
into
mov
les
jb
mov
jl
or
pop
xor
inc
jo
xchg
icebp
dec
cmp
jl
pushf
jns
lds
repz
mov
mov
int
xchg
test
mov
fisubrs
aas
ja
scas
shrl
dec
cmpsl
repnz
mov
pop
test
mov
sarb
mov
arpl
in
imul
mov
sub
pusha
xor
hlt
sub
and
repz
lahf
int3
pusha
in
push
imul
xchg
popa
sbb
sarb
mov
xchg
inc
mov
nop
jno
popa
imul
add
lahf
incb
icebp
adc
or
add
adc
inc
adc
jb
icebp
popf
repz
lea
mov
mov
int
xchg
pop
rcr
inc
scas
fisubs
scas
sahf
xchg
gs
push
test
insl
paddd
cmp
dec
cmp
mov
jno
in
fnstenv
sub
xor
pop
dec
and
adc
inc
xchg
in
mov
outsb
pop
sub
mov
sub
push
and
popf
mov
mov
mov
push
push
sub
or
sahf
pop
push
addr16
or
xchg
pop
leave
aaa
fsubrl
adc
int
dec
push
insl
mov
and
popa
adc
cmp
cmp
add
adc
cmp
pop
mov
pop
pop
nop
cltd
mov
mov
mov
push
mov
loop
pop
lahf
lret
mov
fstpt
jnp
xorl
ljmp
sahf
sahf
insl
lcall
fdivrs
or
shr
lret
push
lret
outsb
lret
ljmp
push
lods
and
testl
shr
ja
shlb
sub
xchg
pop
scas
push
mov
sub
das
xchg
jg
adc
mov
das
mov
pop
insb
scas
nop
push
xchg
or
enter
ret
sbb
jne
mov
sahf
cli
ljmp
mov
fildl
arpl
into
cs
jp
mov
ds
out
adc
mov
ljmp
repz
sbb
mov
xor
dec
adc
lret
sbb
stos
das
fmuls
xchg
pop
aaa
ret
add
dec
lcall
pop
mov
sub
rolb
pop
das
mov
out
idivl
leave
pop
mov
or
mov
lahf
repnz
mov
pop
movsb
cmc
sbb
out
push
mov
jp
mov
mov
mov
lret
pushf
bound
sub
lcall
mov
mov
inc
in
imul
mov
cmpsl
xor
das
mov
xchg
jmp
sahf
or
and
lret
lods
out
sub
je
sahf
es
mov
jo
pop
mov
cmp
jnp
lahf
xor
call
sti
jge
movsl
nop
mov
push
jmp
mov
orb
jp
int
pusha
sbb
lret
jecxz
test
xlat
sbb
enter
das
fildl
jmp
enter
push
inc
mov
mov
push
xor
das
push
inc
cmp
ret
xor
stos
mov
jb
jecxz
ljmp
and
sub
sbb
and
sub
xchg
xchg
or
pop
cltd
aaa
mov
out
imul
add
fildl
xchg
xchg
bound
inc
sbb
inc
push
and
lret
cmc
mov
adc
pop
in
push
dec
xor
add
test
pop
clc
adc
push
push
loopne
test
or
push
inc
fistl
sub
ret
pusha
jns
mov
lds
pop
or
mov
sbb
jp
or
fisttps
es
idivb
xor
bound
aaa
mov
lea
je
btc
sbb
mov
inc
xor
adc
add
shl
rcl
add
call
pushf
movb
lea
jne
rcl
sbb
add
sub
mov
jmp
mov
lds
insl
dec
inc
adc
cwtl
cwtl
push
adc
je
je
sub
fadds
sarb
inc
push
roll
push
cld
cmp
mov
cmc
pop
cmpsb
test
xor
sbb
dec
leave
adc
xor
xor
lea
fnstcw
and
ja
jne
sub
or
xor
mov
fldcw
mov
mov
mov
cmp
and
lock
push
lahf
out
xchg
icebp
arpl
test
inc
pushl
pushl
pushl
lea
jb
call
dec
inc
and
neg
sub
neg
xor
seta
seto
mov
seto
inc
jmp
movb
call
roll
add
adc
add
out
int
add
add
add
add
add
and
add
add
sub
add
add
add
addb
add
outsb
mov
add
add
add
xchg
and
xchg
mov
add
push
and
mov
out
cmpb
xchg
or
inc
lret
bound
dec
sahf
or
mov
xchg
cmpsl
aaa
jge
push
dec
loop
fmuls
je
arpl
sahf
jo
sbb
sub
jbe
xchg
stos
pop
fnstenv
cmp
cmp
out
lds
mov
xchg
icebp
fs
push
xor
xchg
xor
xchg
rcrl
subb
insb
dec
mov
fdivrs
jl
mov
or
or
mov
mov
sub
inc
sbb
push
sub
adc
cmp
dec
sahf
sahf
sbb
pop
push
sub
sti
xor
in
push
cmpsl
xchg
icebp
gs
movsl
out
cmp
std
cmp
mov
jae
mov
repz
cmp
jae
add
mov
jecxz
test
aam
mov
push
adc
cmp
ret
fwait
sub
stc
call
loop
ss
push
fdivrs
cmp
nop
adc
outsb
jbe
inc
adcl
jns
data16
orb
lret
sub
and
sahf
jmp
js
add
xchg
loop
inc
addr16
ljmp
sbb
je
leave
push
lea
jmp
pusha
call
jb
lret
cwtl
pop
mov
fidivl
push
dec
loop
out
scas
add
jle
lods
pop
clc
jno
push
jl
cmp
xchg
cmp
dec
cltd
aam
and
fistl
fs
rcll
mov
and
lcall
push
pcmpeqb
xor
lea
test
xchg
xchg
mov
out
mov
mov
mov
imul
xchg
lahf
lea
pusha
ret
add
popa
or
dec
fdivs
or
mov
mov
mov
std
gs
inc
push
mov
xchg
icebp
data16
decl
jbe
jl
add
into
lea
mov
movsbl
movzbw
mov
call
inc
testb
mov
xchg
popa
sbb
jbe
lcall
jb
xchg
fistpl
aas
and
sub
xor
out
mov
sub
mov
or
and
out
shlb
sub
add
aas
xchg
iret
insl
ja
xchg
mov
xlat
out
xor
fwait
pop
or
cs
test
cli
push
test
inc
es
fwait
mov
or
data16
lret
out
sub
adc
lea
shrb
clc
pushf
in
jno
das
in
decb
add
mov
mov
and
lahf
bound
shll
div
dec
imul
cwtl
in
jo
cmp
in
push
jo
int3
shll
xchg
icebp
stos
test
loopne
push
pushf
test
cmp
pusha
jmp
add
lea
bt
stc
add
pusha
call
sbbl
shll
jo
call
push
and
movsb
nop
in
xchg
clc
fnstcw
inc
pusha
or
aad
pop
stos
dec
mov
push
divl
jle
mov
lods
sbb
loope
push
in
andl
push
adc
pop
inc
add
cmp
imul
add
cli
push
push
jp
rolb
pushf
sub
mov
and
dec
testb
jo
lock
test
js
jl
inc
xchg
icebp
addr16
cmp
fs
jne
pusha
pushf
pusha
stos
push
pushf
pushf
lea
jmp
push
movw
movb
pusha
movl
pushf
pusha
movb
pushf
movl
mov
mov
pushf
lea
jmp
iret
ja
adc
xchg
sbb
iret
ret
out
iret
aaa
sbb
sub
xor
or
and
stos
pop
lock
jns
cmp
sti
xlat
sub
jne
mov
lock
mov
push
pop
xchg
pushf
xlat
lret
push
push
ja
arpl
mov
jns
rolb
add
inc
and
jno
pop
add
into
cmp
add
test
mov
add
hlt
add
in
dec
adc
mov
ficompl
mov
xor
inc
or
fcoms
lcall
cmp
jns
sub
fiadds
enter
cli
shlb
jno
sbb
enter
pushf
sbb
xchg
icebp
imul
sub
cs
xchg
lds
jg
repz
cmpsl
dec
test
testb
pop
push
negb
ret
sub
lret
pop
jnp
cmp
jp
insl
jp
xlat
mov
ficoms
xchg
icebp
push
dec
push
sub
movb
pushl
pushf
pushf
rep
movzbw
movsbw
bswap
mov
movl
pushf
pushl
mov
lea
jmp
push
or
push
jmp
pushf
movl
pusha
lea
jmp
add
je
cmp
pushf
pusha
push
push
lea
jne
jmp
je
insl
and
push
imul
xchg
cmp
sub
lahf
mov
sub
push
into
jbe
dec
sbb
outsb
dec
scas
cwtl
and
data16
push
repz
repnz
daa
inc
jecxz
stc
int
push
add
add
fisttps
mov
and
push
ret
div
hlt
loopne
xor
mov
scas
mov
shrl
push
mov
sbb
icebp
push
push
adc
xor
cmp
shr
clc
call
inc
movb
lea
call
bt
bt
cmp
pusha
lea
jae
test
pushf
cmp
mov
pusha
pusha
lea
jae
clc
cmp
pusha
lea
ja
not
push
inc
pusha
inc
setp
inc
seto
shl
push
jmp
mov
inc
adc
mov
gs
cld
das
pop
pusha
les
xor
mov
lea
fdivr
xor
popa
and
in
jns
imul
imull
xlat
jbe
movsb
mov
xor
mov
les
imul
repnz
and
icebp
imul
xor
bt
rol
dec
lea
jno
not
push
dec
mov
neg
rcl
cmp
sbb
xor
inc
call
mov
movsbw
lea
jmp
push
lea
call
pusha
call
pushf
movl
pushf
call
mov
xor
push
or
mov
ja
lret
cli
enter
or
out
hlt
pop
inc
xor
add
insl
inc
ss
jb
js
sbb
and
jmp
add
sub
push
mov
inc
das
jmp
jb
push
shlb
das
movsl
sbb
cltd
cltd
adc
fldenv
add
lea
ja
dec
not
inc
not
inc
pushf
setb
inc
adc
xchg
aas
rcr
mov
ror
ror
cmp
mov
test
pushf
stc
jmp
lea
pop
jmp
call
pushf
pushf
movl
pushf
pushf
lea
jmp
mov
adc
sub
movsb
or
fmul
xorb
stc
addb
or
dec
dec
push
xchg
push
dec
sub
in
hlt
movhps
push
jns
mov
mov
inc
and
push
or
roll
mov
data16
mov
xchg
icebp
insb
out
cmp
pusha
call
pushf
lea
je
xchg
add
jmp
lock
and
stc
dec
pusha
mov
cld
test
call
add
sub
mov
sti
cwtl
out
sub
cltd
cmp
rcll
and
sbb
sub
xchg
lret
test
pop
sub
jno
sub
inc
out
pop
stos
push
sti
xor
out
ss
add
mov
pop
sub
adc
mov
fnsave
fs
call
call
movl
pusha
pushl
popl
pusha
pushl
ret
pusha
mov
movsbl
mov
xchg
bswap
movsbw
mov
call
out
aas
mov
push
jne
lret
es
jae
xor
je
dec
and
push
cmp
notl
fistl
mov
xchg
mov
add
popa
les
add
negb
mov
ficoml
mov
and
pop
mov
es
xchg
mov
sbb
clc
pushf
pushf
and
imul
mov
push
inc
xchg
icebp
insl
mov
push
inc
sub
dec
mov
mov
mov
outsl
and
data16
sti
daa
icebp
or
and
and
cld
mov
imul
xchg
fcmovnu
das
xchg
push
loop
xchg
adc
ds
jecxz
inc
add
xlat
cmp
lock
dec
clc
cs
mov
clc
mov
mov
lea
push
fistl
icebp
shll
mov
mov
xor
jb
xchg
data16
fidivrl
sub
adc
add
popa
insb
inc
insb
insb
outsl
arpl
lea
je
not
pushf
mov
cwtl
lea
call
push
pushl
pushl
popl
push
mov
pushl
ret
mov
cmp
cmc
pushf
cmc
add
push
cmp
clc
cmp
test
call
mov
pushf
xchg
bswap
mov
bswap
pushf
jmp
sbb
mov
adc
pop
or
mov
dec
jmp
cmpsb
and
or
or
mov
bnd
cltd
mov
sub
mov
roll
aas
adc
cmp
lret
fisubs
out
push
add
adc
cli
lret
cmp
xor
clc
call
clc
aam
in
sub
jo
loopne
iret
xchg
mov
jnp
pop
jne
sti
cmp
cmpsb
ss
xchg
std
push
dec
mov
pop
sti
pop
in
lahf
and
jle
dec
gs
push
aad
cmpsl
fists
ds
loope
add
push
inc
inc
daa
mov
dec
lret
je
loop
fs
push
inc
lds
sti
push
cmpsb
int
adc
loopne
in
xchg
adc
imul
add
xor
sti
inc
in
add
sub
xchg
xchg
leave
jbe
aaa
xchg
push
pop
cmpsl
inc
xchg
icebp
jo
sub
inc
xchg
int3
and
fs
pop
and
mov
sbb
cmp
mov
shrb
xor
addr16
ljmp
inc
pop
or
scas
mov
shrb
leave
out
sarl
and
adc
jo
xchg
icebp
jo
lcall
xchg
int3
sub
jne
push
mov
lock
lock
pop
fmulp
mov
mov
fildll
inc
out
xor
addr16
adc
ljmp
aam
push
mov
lret
je
loopne
xor
xlat
cli
xor
stc
pushf
pop
add
adc
fnstenv
adcb
icebp
jo
outsl
dec
add
inc
js
je
jb
arpl
jae
jmp
pushf
lea
jge
jae
jmp
pop
xor
fwait
cmp
mov
pop
jl
push
movsb
add
movsb
push
adc
rcrb
dec
and
rcl
mov
xchg
xor
subl
cwtl
inc
mov
jne
std
popf
sbb
add
scas
push
repz
jno
lds
icebp
jno
repnz
lea
pusha
movl
movzbw
call
cmp
pusha
movw
lea
je
push
stc
cmp
pusha
pusha
mov
pushf
lea
je
push
push
lea
jmp
iret
mov
fisttps
adc
dec
frstor
jl
inc
add
sbb
pop
adc
fcmovb
es
jl
adc
cmc
test
or
addr16
jmp
je
mov
in
sbb
clc
sub
rcr
es
icebp
jb
gs
mov
pushl
ret
cmp
cmp
xor
jne
rol
xchg
cmp
test
mov
mov
adc
scas
out
js
scas
inc
jl
movsb
int
jmp
dec
push
es
scas
lds
add
scas
idivb
sbb
cs
fisubl
push
xor
repnz
inc
cmp
das
jecxz
push
in
movsb
pusha
dec
call
icebp
jb
adc
call
adc
add
and
jmp
inc
mov
fs
dec
scas
mov
outsl
lret
lret
inc
mov
mov
inc
cwtl
mov
dec
arpl
aas
aam
adc
pushf
faddp
fisttps
mov
and
bound
mov
xor
push
pop
rcrl
fwait
cs
das
adc
mov
aad
jecxz
xchg
aad
outsl
xchg
xor
nop
mov
in
je
fsubs
jae
inc
outsb
lea
jb
push
movb
pushf
cmpb
pushf
pushf
movw
mov
lea
jne
adc
stc
mov
jmp
mov
push
data16
mov
dec
adc
mov
sbb
jecxz
movsb
sbb
lret
jg
insb
loopne
fisttps
dec
jg
sub
cmp
jne
sbb
mov
adc
or
jecxz
jno
sub
outsl
dec
in
lods
test
aam
inc
cmp
aad
ficoms
dec
mov
cmpsb
bound
out
dec
adcb
lret
adc
add
iret
imulb
cmp
ret
sub
and
icebp
lea
pushf
cltd
inc
lret
push
dec
imul
xchg
aam
shrl
cmp
filds
iret
jge
icebp
je
adc
repz
mov
push
mov
lea
jmp
pop
mov
mov
cmpxchg
loope
outsb
inc
push
mov
loop
cmpsl
lret
lock
mov
aad
nop
or
or
xchg
cli
mov
out
sbb
out
cmp
rolb
fwait
push
dec
jae
stos
lahf
cmpsl
pop
imul
xchg
icebp
je
sbb
scas
addr16
cmpxchg
popf
in
jne
xor
jne
int
jo
add
addr16
mov
mov
add
pushf
or
cmp
movsl
loopne
mov
or
clc
and
shlb
loopne
xchg
icebp
je
xchg
xchg
jo
call
mov
xor
adc
jmp
add
mov
in
mov
and
jns
xor
push
sub
pushf
sub
data16
pop
add
add
testb
lcall
jne
push
jle
insb
add
cmc
adc
xchg
jecxz
fbstp
and
push
imul
loop
add
push
dec
hlt
movsb
fidivrl
ja
jns
andb
sub
out
pop
dec
lock
outsb
jle
outsb
aaa
add
mov
mul
mov
jbe
out
fs
imulb
mov
dec
call
mov
mov
push
xchg
mov
fsts
out
test
mov
ss
push
xchg
lahf
adc
cmc
xor
not
cwtl
pop
jo
cwtl
hlt
push
mov
stc
jge
lods
iret
aaa
mov
mov
xchg
pop
outsl
lret
arpl
add
or
popf
mov
push
fdivs
idivb
push
adc
add
pushf
mov
mov
in
or
scas
in
xchg
xchg
frstor
pop
inc
hlt
cltd
jo
jge
rolb
mov
iret
jae
jge
jle
in
sub
push
in
aam
or
orb
add
xchg
push
or
imul
les
addr16
fmull
cmpsl
xchg
sahf
xchg
call
mov
mov
push
mov
pop
xor
xchg
arpl
xor
lahf
push
add
sbb
and
push
mov
push
xchg
xor
xchg
rcrb
dec
fmull
or
pop
inc
adc
adc
jl
int
icebp
cmp
arpl
and
sahf
xorb
cmp
mov
xchg
daa
sub
mov
shlb
mov
xchg
fists
push
cmpsb
mov
out
movsb
adc
dec
mov
adc
sub
pop
xchg
icebp
jbe
push
adc
fnstcw
adc
mov
or
je
loopne
cmp
lods
jbe
add
pop
div
push
dec
push
mov
jns
idiv
or
sub
sbb
outsl
or
ja
and
jl
lock
and
rcrl
fs
ja
jmp
add
pusha
xchg
sbb
dec
into
ljmp
adc
adc
data16
mov
xchg
mov
jge
fsubr
pusha
or
leave
test
int
mov
push
in
mov
dec
les
xchg
out
sahf
sbb
jmp
sbb
sbb
and
cwtl
sti
fstpt
xchg
inc
sub
mov
rcl
rorb
lcall
push
jbe
jns
xchg
gs
add
inc
cmp
ja
xchg
push
lea
jo
push
push
mov
push
pushl
ret
hlt
cwtl
mov
mov
cmp
xchg
jp
mov
push
jmp
sub
push
sbb
inc
dec
fcomi
add
cld
jnp
mov
sub
bound
xchg
mov
in
jmp
xchg
sti
pop
in
ss
jo
xchg
enter
inc
jbe
pop
adc
lods
lods
jmp
mov
stos
mov
push
je
subl
std
sbb
mov
or
jno
pop
pop
pushf
movsl
je
mov
pop
in
pushf
js
lret
fs
fcoml
ret
xchg
icebp
jns
sti
xchg
addl
add
imul
ljmp
xchg
push
add
or
jmp
xchg
je
mull
dec
mov
cmp
aam
push
loopne
in
scas
mov
push
ds
push
movsl
icebp
pop
int
jmp
shlb
ret
add
jl
fimull
out
stos
mov
xchg
push
aas
xchg
pop
dec
push
inc
rorb
push
mov
imul
and
mov
dec
mov
and
xchg
icebp
jns
imul
jmp
mov
jmp
stc
cmp
jmp
jae
push
push
sub
outsl
and
roll
lock
mov
mov
in
cld
scas
ja
lods
jle
mov
sub
sub
dec
cld
xchg
mov
ss
pop
ja
jne
ja
mov
and
cmp
nop
fidivrl
in
sahf
fistpl
cmp
or
sub
mov
test
xlat
dec
push
cld
or
xchg
js
or
mov
jge
leave
pop
cmc
xor
rorl
push
adc
lahf
shlb
pop
inc
aas
jne
pop
and
xchg
movnti
aam
mov
xlat
cmpsb
cmp
fs
lcall
or
pop
mov
popa
pop
aad
das
test
aam
mov
aaa
jge
add
movsb
push
pusha
add
xor
push
call
call
pop
xor
or
in
adc
aas
pop
jnp
outsl
ja
clc
paddb
xor
nop
xor
adc
in
movsl
loopne
mov
cmc
jns
jnp
pop
imull
icebp
xchg
sub
and
loop
pop
mov
lfs
cld
rclb
in
pushf
andb
icebp
jp
and
xor
mov
jle
push
int
rolb
pop
mov
es
cli
and
pop
xor
sub
outsb
pushf
lods
pusha
int3
daa
out
stos
stos
jns
cld
loopne
adc
fdivp
or
in
add
lea
push
add
insl
fxch
jo
addr16
jae
sti
imul
push
or
jbe
inc
orl
xchg
aad
or
jle
cwtl
jmp
movsl
lcall
jg
fisttps
fisttpl
mov
xlat
outsl
insl
xchg
icebp
jnp
add
and
pushl
jmp
adc
outsl
mov
push
sub
ficoml
sti
dec
les
mov
sbb
js
and
cwtl
inc
mov
push
jno
and
dec
xchg
mov
inc
test
mov
out
fnsave
addl
add
movsb
leave
insb
add
hlt
dec
stc
lods
or
icebp
sarl
jnp
lds
rol
ja
cld
cmp
jp
mov
into
xchg
fiadds
jnp
test
ja
mov
xchg
ljmp
imul
or
roll
loop
enter
jmp
rclb
cmpsb
adc
loopne
js
cmp
cmpl
dec
xor
inc
inc
stos
fistpl
mov
xchg
push
xchg
icebp
jnp
xchg
sbb
cmp
movb
push
lea
je
cmc
jmp
sahf
repnz
rcll
mov
insb
shlb
cwtl
add
fsubl
addb
lock
adc
mov
mov
sub
cmp
pop
pushf
push
pushf
sub
icebp
mov
hlt
jo
pop
in
cld
and
call
dec
cmp
jmp
stos
scas
imulb
shll
and
sbb
xchg
mov
jo
add
adcb
lret
inc
stc
adc
inc
or
adc
dec
ret
or
sub
jp
xchg
fcoms
jg
inc
rclb
lahf
inc
pop
cmp
mov
arpl
push
pop
sub
jg
sbb
inc
cmp
arpl
mov
xchg
addb
pop
pop
adc
into
adc
xchg
xchg
cmpsb
push
sti
leave
push
fsubs
daa
sarb
jns
enter
int
jns
pop
mov
mov
xchg
xor
int
mov
aam
and
fld1
inc
mov
imul
icebp
jge
inc
fwait
pop
cmp
push
jae
lahf
cs
movsl
push
dec
xchg
icebp
push
mov
pcmpeqb
mov
dec
xor
in
sub
mov
out
push
jbe
sub
dec
pop
jl,pt
gs
inc
ror
add
xor
xadd
add
and
test
mov
rcr
mov
push
and
mov
cmpl
lcall
add
add
mov
pushf
movzbw
lea
jmp
cmp
sbb
mov
jae
jg
sbb
push
aam
dec
rcll
mov
adcl
cmpb
push
or
sub
out
movsl
xchg
addr16
mov
mov
je
mov
mov
jle
push
out
push
pop
sub
cld
sub
add
movsb
insb
mov
mov
add
mov
arpl
sub
in
cmpsl
int
pop
mov
sub
push
xchg
pop
or
sbb
xor
cltd
clc
pop
xor
pop
das
ficomps
mov
stos
movsl
pop
cmc
pop
dec
mov
xchg
icebp
jg
repnz
jmp
push
movl
pushl
jmp
roll
add
adc
add
out
int
add
add
add
add
add
and
add
add
sub
add
add
add
addb
add
outsb
mov
add
add
add
xchg
and
xchg
mov
add
push
and
mov
out
add
add
add
mov
push
lea
je
bt
call
in
andb
adc
shrb
fdivs
mov
xor
movsb
int3
xchg
or
movsl
xor
dec
loop
pusha
add
cmp
jge
sahf
jo
movsb
imull
lods
sbb
jno
dec
adc
dec
add
jmp
xor
stc
out
aad
push
icebp
dec
inc
das
xchg
icebp
jg
jge
call
test
cmp
movzbw
lea
not
mov
pushf
lea
ja
pusha
call
pushf
push
lea
je
bswap
lea
bswap
movzwl
bswap
bswap
pushf
lea
movsbw
movsbl
call
movsbw
mov
pusha
push
lea
call
pushf
jmp
cmp
stos
fwait
jns
xchg
rolb
bound
dec
scas
out
add
idivb
stos
xchg
rcll
push
dec
mov
fsubr
cltd
jns
xor
mov
mov
aad
add
mov
mov
adc
jecxz
fistps
aaa
movntq
andb
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
mov
or
call
cmp
mov
dec
imul
call
lahf
cmp
mov
sub
dec
aam
outsb
and
xchg
cmpsb
movsb
push
popf
popf
lds
std
ffreep
int3
stos
sub
mov
addb
pop
sbb
sub
sub
mov
hlt
fs
and
and
xchg
icebp
cmpb
in
push
idivb
out
xor
adc
or
xor
xchg
and
push
sbb
sub
jp
aad
pop
pop
in
xchg
mov
rol
mov
es
out
dec
push
fimull
leave
sub
mov
add
push
movsl
lods
loopne
xchg
xchg
sub
jg
fldl
popa
popf
cmc
std
and
add
lret
jne
or
xchg
not
pop
cs
add
testb
cmpl
out
lods
sbb
ficompl
lds
cmp
or
lock
das
jp
movsb
popa
les
mov
xchg
call
repz
stos
pop
fsubrl
mov
scas
outsl
sbb
das
addb
js
jno
push
inc
push
jg
aaa
in
or
mov
dec
call
sbbb
fldl
xor
inc
mov
lahf
lds
in
cmp
es
hlt
push
mov
jae
shll
and
out
xlat
cmp
and
adc
cmp
arpl
push
movsb
add
pushf
test
ljmp
cmpsl
pop
mov
std
repz
js
and
pop
loope
jp
mov
xchg
jge
xchg
lea
sub
push
lcall
sbb
in
inc
lcall
xchg
int3
sbb
mov
std
cli
pop
push
push
hlt
xchg
icebp
orb
lea
je
pushf
sub
pushf
jmp
mov
cmc
test
mov
xchg
xchg
or
mov
xchg
pop
sub
or
mov
mov
mov
jle
inc
pop
into
sbb
jns
cmp
ret
fwait
xor
mov
lcall
inc
ds
mov
lea
call
push
cmc
movw
cmp
pushf
jmp
dec
daa
cmp
das
dec
ja
fsubr
int3
mov
adc
mov
push
pop
jns
popa
ret
mov
loope
cmpsl
mov
jg
pop
fs
mov
in
and
xor
xchg
push
movsb
cmpsb
mov
in
jp
dec
fisttpl
in
ret
insl
adc
mov
loopne
in
ja
std
jge,pn
or
xor
loopne
inc
pop
out
sub
mov
xchg
adc
jb
aas
movsl
jbe
rolb
scas
in
mov
pop
pop
and
pusha
add
mov
push
mov
cmp
paddusb
mov
inc
dec
jmp
sahf
cmp
out
arpl
mov
fwait
repnz
dec
xchg
out
inc
push
xchg
pop
push
ret
into
subb
mov
pusha
popa
mov
cmp
xchg
push
loope
cmp
add
dec
testl
out
mov
sbb
les
cmc
repnz
mov
sub
or
add
add
shld
pushf
mov
shr
cmp
cmp
mov
push
repnz
pusha
jmp
enter
adcl
xchg
adc
stc
repnz
cli
jb
jle
sub
push
mov
mov
add
adc
pop
std
pop
push
dec
mull
fwait
andb
and
test
xchg
ds
sbb
cmp
adc
and
and
in
pusha
lock
and
xchg
icebp
test
lret
jns
sbbl
add
sbb
sbb
stc
add
lea
sub
bt
mov
jmp
rcl
mov
xchg
and
jge
inc
jbe
mov
and
push
sbb
jg
outsb
lds
add
adc
lahf
fcmovu
or
ficompl
cli
fs
cmpsb
filds
lahf
or
push
jle
pop
cmp
gs
inc
imul
xchg
jg
jno
mov
mov
outsb
into
jl
inc
xchg
out
cmpsb
icebp
mov
flds
cmpsb
mov
adc
xchg
cltd
push
sti
mov
cmpsb
and
cs
cltd
mov
push
sbb
xchg
icebp
test
xchg
dec
mov
adc
xor
aam
mov
test
lcall
call
or
jg
jo
fcoml
shlb
cmc
and
pop
jns
pop
sti
or
iret
in
dec
xchg
mov
xchg
inc
jns
das
mov
sahf
ficomps
ret
aad
movsb
xchg
icebp
test
add
xlat
test
pushf
push
call
dec
iret
pop
mov
fstl
cltd
icebp
gs
rcll
cmp
sub
add
push
ds
rclb
cmp
stos
xchg
jns
imul
cmc
adc
int
or
push
xchg
push
rcrl
mov
xchg
loop
xlat
sub
xchg
icebp
test
xchg
and
out
pusha
and
aaa
pusha
cmpsb
sub
popa
aaa
and
cmpsb
sub
jo
aaa
out
insb
and
cmpsb
out
aaa
cmpsl
pusha
aaa
es
addr16
and
cmpsb
aaa
sub
pusha
aaa
and
addr16
es
in
es
mov
jo
aas
cmpsb
fistpl
fnstcw
imul
js
das
mov
adc
mov
pop
mov
jp
add
test
dec
push
add
pop
dec
jge
loope
stos
loopne
xchg
xchg
addr16
adc
packuswb
aas
jnp
pushl
xchg
icebp
xchg
sub
in
jmp
lods
cmc
mov
mov
rol
lea
jns
pusha
pushl
dec
sub
jg
clc
stc
pushf
neg
movb
xor
pusha
jmp
cmp
test
cmp
pushf
lea
jae
push
pushf
movb
pusha
lea
jmp
lea
call
call
dec
jo
adcl
cli
aaa
call
jmp
cmp
movb
rorl
add
mov
mov
cmp
lahf
sub
pop
sub
js
xchg
pushf
daa
push
icebp
xor
pop
sbb
push
lods
add
loop
pop
test
pusha
mov
cmp
clc
call
sbb
and
push
call
xchg
jge
dec
push
test
pop
xor
or
test
push
dec
ss
rolb
jns
les
ja
movsb
mov
cltd
leave
cwtl
es
dec
nop
in
rol
fnstsw
subl
sbb
push
shr
aaa
pop
mov
pop
sahf
xor
loope
xor
movsl
and
jecxz
lods
pushf
js
in
xor
popf
inc
add
bound
ficoms
xchg
cmp
cmc
hlt
dec
mov
dec
ss
lahf
pop
test
test
inc
push
gs
mov
jo
push
push
in
mov
insl
in
popf
and
cmc
out
js
xrelease
jl
lahf
lahf
stos
mov
xchg
icebp
mov
xchg
jnp
mov
adc
pop
mov
inc
fwait
mov
fwait
iret
out
sub
add
outsl
sub
sub
jp
adc
repz
adc
je
movsb
sbbb
std
inc
sub
leave
or
lea
in
aas
ror
add
fs
mov
sbb
out
pop
aaa
test
adc
mov
mov
ljmp
xor
outsb
mov
push
rorl
sub
dec
sub
mov
lcall
push
and
mov
or
scas
xchg
mov
in
mov
mov
jno
jae
cmp
orb
lea
cmp
cmp
mov
sbb
sbbb
stc
pop
cmp
loopne
lds
fbstp
hlt
mov
nop
out
add
subl
mov
cmp
inc
xchg
in
jmp
add
stos
jecxz
push
notb
pusha
out
xor
pop
dec
cmp
lds
mov
pop
sbb
in
jge
and
pop
mov
loope
sbb
sbb
testb
sbbb
lock
push
es
or
jl
xchg
icebp
mov
decb
not
not
inc
dec
rol
xchg
aad
bt
shr
rcl
mov
adc
pusha
adc
sub
mov
bt
jmp
cmp
das
insb
addb
push
iret
mov
cmp
push
pop
sti
dec
mov
int3
mull
pop
stc
or
stc
bnd
imul
into
cmpsl
pop
jmp
pusha
iret
jno
je
mov
in
xorl
clc
xchg
fstpl
mov
adc
add
lock
sbb
repnz
dec
adc
loope
mov
cmp
push
pushf
lea
jne
not
cmc
call
cmp
fwait
rclb
in
lods
inc
add
dec
dec
loopne
or
cmp
adc
cmpsl
push
std
std
jne
cmpsl
jp
outsb
or
mov
test
fadd
js
ret
add
add
pushf
jge
sbb
inc
sbb
mov
mov
outsb
ret
push
aaa
xchg
aad
fildll
cmp
dec
fsts
push
outsl
stos
out
orb
cmp
fistpll
scas
pop
mov
push
fldcw
sbb
jg
jl
insb
or
or
cli
lods
xchg
in
cmp
dec
push
mov
xlat
or
orb
fwait
push
dec
in
movsl
fistl
sub
jnp
pop
aaa
sub
inc
pmuludq
sbb
movsl
jno
adc
shll
inc
xor
addr16
loop
mov
sub
cmc
shlb
jge
pop
in
push
flds
dec
movsb
or
dec
or
cmp
bound
adc
sahf
lcall
out
cs
add
sarb
push
std
cld
add
mov
dec
xchg
icebp
mov
repz
shr
bsr
mov
pushf
neg
rol
mov
jmp
xor
pop
mov
je
lret
mov
stos
imul
les
jecxz
jle
push
adc
aam
lcall
aaa
rolb
xchg
cli
enter
xchg
xchg
xchg
sub
ja
out
je,pn
mov
mov
inc
push
mov
xlat
sti
lahf
dec
sbb
inc
lods
mov
and
movsl
cmc
insb
pop
sub
fwait
mov
out
add
xchg
xor
push
push
les
fucomi
lret
cmpb
sub
popl
mov
lret
xchg
out
push
sub
icebp
mov
jnp
add
dec
aad
sbb
adc
jl
or
shlb
jl
xlat
xor
push
das
lods
adc
jle
loope
int
mov
xchg
pop
adc
push
xor
push
xchg
rorb
outsl
inc
in
lret
fwait
pop
enter
dec
fstpl
daa
mov
inc
outsl
jmp
fld
push
push
ss
mov
push
jb
out
into
orb
lret
push
xchg
icebp
mov
bswap
pop
mov
lea
bswap
movsbl
pop
lea
call
lea
jae
pushf
bt
cmp
lea
jnp
push
lea
jae
stc
cmp
pushf
pusha
lea
ja
inc
setne
inc
setno
dec
push
pushf
inc
lea
add
neg
rol
clc
xchg
btr
shl
lea
movsbw
mov
shl
push
bt
mov
add
jmp
lret
dec
or
movsb
ds
adc
mov
popf
dec
sbb
fucom
test
mov
cmp
add
pop
add
and
inc
addl
enter
out
ljmp
jl
jg
daa
in
mov
cmp
imul
mov
sbb
push
lods
push
lock
dec
push
mov
aad
outsl
movsl
in
loop
les
or
or
lret
jo
les
icebp
fsubs
movsbl
mov
lea
call
jmp
push
call
out
push
sbb
mov
orb
insl
orl
xor
xchg
in
sub
cltd
adc
mov
ret
mov
int
sub
ds
call
in
sub
inc
jecxz
ficoms
push
int
and
sub
ds
adc
inc
cli
ljmp
jne
xor
lret
pop
dec
nop
mov
divl
clc
adc
ja
shrb
stos
jp
add
push
fcom
push
aad
xor
and
negb
add
scas
sbb
adc
arpl
lret
mov
stos
insb
add
xchg
mov
call
inc
mov
mov
loope
push
and
sub
push
dec
insl
scas
xchg
lcall
adc
dec
aas
jmp
adc
incl
and
in
jmp
inc
dec
aad
mulb
lret
aaa
fiadds
stc
out
repnz
jmp
ja
xor
gs
sub
mov
test
xchg
adc
fcoms
mov
mov
mov
lret
add
std
cmp
orl
daa
inc
cmp
mov
jecxz
mov
and
mov
mov
push
jnp
les
dec
popf
das
popa
xor
es
ficoms
clc
jecxz
shl
dec
pop
cmpxchg
arpl
sub
sub
push
sahf
or
pop
leave
std
cmpl
or
xchg
fstpt
arpl
popa
xchg
mov
outsb
mov
fs
fstps
cmc
popf
in
xchg
icebp
jnp
push
lea
jae
stc
xor
call
call
add
dec
outsl
arpl
inc
jb
gs
inc
sub
mov
pop
shll
clc
in
mov
jl
adc
leave
sub
mov
or
inc
les
jge
dec
sub
aam
dec
jge
cmp
adc
movsb
test
fidivrs
inc
mov
in
repz
je
incl
push
roll
dec
mov
push
test
or
in
pop
cs
stc
fmul
shll
scas
cs
rol
test
shr
xchg
ficompl
test
xchg
cmpsl
add
sarl
shlb
cmp
ror
jns
mov
icebp
fiadds
push
pushf
pusha
movb
movl
pushf
pusha
pushl
lea
jmp
jo
push
cltd
add
clc
push
data16
push
stos
mov
mov
outsb
sub
mov
ret
cmpsb
cmp
pop
lds
shll
imul
push
imul
lahf
ds
lock
insl
pushf
popf
or
aas
cwtl
nop
cwtl
pushf
int3
pop
mov
xchg
icebp
xchg
fcomps
ss
dec
iret
das
inc
scas
sbb
imul
jg
push
rep
les
fdivp
bound
push
mov
iret
jo
inc
ds
and
adc
popa
mov
xor
js
fstl
cmp
xorl
andl
pop
in
cmpl
ret
lret
insl
or
inc
cs
cld
jecxz
rorl
xchg
shr
pop
scas
loopne
out
push
dec
mov
dec
mov
sub
mov
sub
pushf
fs
add
bound
movsb
and
flds
jbe
test
cmp
fs
stc
pop
push
and
xchg
mov
pusha
aaa
out
and
addr16
jo
aaa
out
insb
and
cmpsb
out
aaa
cmpsl
pusha
aaa
es
addr16
and
cmpsb
aaa
sub
pusha
aaa
and
addr16
es
in
es
mov
jo
aas
jmp
jno
push
sub
adc
daa
dec
ret
pop
fistl
stos
das
mov
or
sub
adc
push
dec
hlt
sbb
ss
ss
jns
xorb
xor
dec
insb
inc
dec
sbb
pusha
cmpb
sbb
cmc
das
xchg
icebp
xchg
jmp
cmp
movl
lea
lahf
movzbl
movzbw
lea
pusha
movl
movb
pushl
popl
pushf
pushl
ret
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
push
add
push
add
rclb
in
pusha
add
cmpsb
pusha
add
add
add
lods
push
sbb
xchg
in
test
cmp
add
sbb
mov
sub
add
xlat
lret
xchg
jns
xchg
sub
or
mov
lds
or
data16
add
cmp
imul
loope
icebp
xchg
push
and
push
movl
push
jmp
test
call
pop
roll
jns
jle
mov
adc
pop
call
or
push
mov
dec
pop
icebp
pop
xchg
int
sub
mov
sahf
ljmp
mov
and
out
scas
stos
mov
jg
push
mov
sbb
xor
xchg
icebp
xchg
cs
add
pushl
mov
push
lea
jmp
pushf
jmp
pop
ja
jb
insb
icebp
jmp
sbb
es
sub
jp
out
mov
repz
jg
daa
pop
rcrl
lret
or
adc
dec
imull
int3
int
popa
icebp
dec
in
ficoml
ljmp
fistpll
jne
push
adc
sti
or
xchg
mov
cltd
cwtl
push
cli
mov
lret
xchg
lods
push
sub
and
ja
adcb
push
jmp
mov
sub
xchg
and
pop
pop
cmp
decb
sahf
bound
mov
pop
bound
repz
mov
push
dec
and
repnz
sahf
scas
ja
daa
sub
jmp
inc
jae
fld
mov
xchg
rorb
push
lret
and
fcoml
cli
push
add
pushl
lea
je
bt
jmp
or
push
lea
jae
je
pushf
cmp
lea
pusha
movb
jmp
mov
call
adc
lea
push
call
imul
or
test
loop
movsl
imul
add
cli
addl
pop
mov
mov
sahf
inc
push
popf
mov
and
sahf
or
test
or
adc
pop
mov
sub
xchg
sbb
mov
cmp
xchg
push
out
lahf
mov
icebp
xchg
adc
iret
xorl
jbe
or
push
mov
add
xor
push
imul
sbb
mov
push
mov
push
pop
pop
roll
mov
mov
ss
mov
pop
cld
lret
jecxz
outsb
movsb
mov
subl
pop
ret
jne
test
aam
pushf
dec
mov
daa
jb
movsl
jae
addl
lea
bound
push
pop
xor
mov
jae
out
dec
fbstp
mov
loope
xorb
push
lods
fcomip
pushf
mov
dec
push
inc
gs
push
cltd
aam
arpl
dec
add
test
mov
mov
add
inc
sub
lock
lret
mov
inc
shr
mov
loopne
dec
popa
or
movsb
sti
mov
mov
repz
loope
fstl
sarl
fstps
rcll
roll
popf
mov
pop
sbb
mov
test
pop
dec
add
ja
fisubrs
mov
jge
sub
jg
mov
scas
mov
std
mov
outsl
adc
mov
test
sbb
sbb
mov
roll
repnz
or
leave
mov
pusha
js
mov
xor
cmp
clc
mov
and
out
popf
mov
xor
daa
pop
dec
adc
pop
inc
push
push
lret
sbb
ret
out
jmp
or
or
sbb
cmc
int
fstl
inc
cmp
sub
jl
dec
js
shll
test
sbb
fstp
in
xor
adc
daa
pop
or
xchg
stc
fdivl
and
scas
add
and
or
mov
aam
inc
jo
int3
cmp
jg
mov
mov
push
icebp
or
in
in
mov
lret
sub
xchg
cmp
js
cs
mov
rep
inc
inc
je
dec
mov
outsb
pop
pusha
mov
pop
icebp
shl
mov
xor
mov
add
out
cmp
mov
adc
pop
fsubrp
es
icebp
xchg
push
adc
mov
mov
setb
pop
bswap
mov
lea
js
push
lahf
lea
jmp
mov
dec
mov
mov
mov
cmpl
or
xor
arpl
mov
jns
push
xchg
dec
imull
mov
cmp
mov
xchg
push
fildl
arpl
jecxz
inc
insl
xchg
icebp
cwtl
sub
sar
je
and
repnz
jle
mov
push
jb
and
lods
sub
leave
hlt
es
pop
lret
jle
ret
pop
loop
repnz
xchg
fcoml
or
dec
sbb
das
das
mov
dec
pop
adc
xchg
icebp
cltd
add
and
add
pusha
int3
call
cmp
popa
popf
cmpsb
rcll
stos
les
push
jb
push
push
popf
sbb
cs
ja
sub
fdivr
mov
fs
dec
in
daa
pop
cmpsb
repz
sub
cmpsb
test
in
add
int3
inc
xor
dec
sbb
jle
xchg
jb
xor
push
and
icebp
cltd
lcall
jge
pop
mov
ljmp
movsl
les
test
push
out
inc
jecxz
iret
mov
aam
ljmp
inc
imul
xchg
cmp
lcall
inc
adc
mov
ficoml
lret
xor
pop
data16
mov
xor
sbb
fucomip
cmp
dec
and
xchg
aaa
mov
pusha
int3
movsb
xor
push
sub
int3
push
pop
lcall
mov
dec
mov
xlat
sub
xchg
aam
gs
xchg
icebp
lcall
dec
jne
push
pushl
movb
lea
call
push
push
lea
jmp
pushl
popl
mov
pushl
ret
pusha
movl
pusha
pushf
pushf
pushf
lea
jmp
hlt
lahf
loopne
mov
ljmp
jge
in
add
add
xchg
rol
adc
push
xchg
pop
std
pop
adc
dec
stos
movsb
push
test
movsl
and
lahf
arpl
insl
das
repz
dec
sub
ja
stc
btc
mov
mov
jmp
packuswb
dec
mov
jecxz
cmp
adc
sub
xchg
add
mov
fiadds
bswap
shrd
sub
lea
not
neg
mov
shrd
rcl
mov
ror
sub
add
bts
shr
lea
xor
mov
ror
shl
bswap
add
movzbl
mov
jmp
cmp
xchg
adc
sbb
insl
sub
xor
movsl
lods
mov
test
pop
or
cli
pusha
mov
rcll
repz
cmp
pop
inc
sbb
sahf
xorb
enter
in
mov
in
mov
cmpsl
out
outsb
xchg
sub
jle
jbe
icebp
fisttps
inc
fbld
lea
pop
imul
das
aaa
xchg
das
lret
mov
xchg
repnz
xchg
mov
mov
jae
cmp
push
call
pop
inc
pop
dec
repnz
sbb
or
pop
leave
jns
idivl
adc
and
inc
test
mov
xor
jle
lcall
int3
jne
xor
add
xor
mov
cmpb
and
lcall
je
mov
ss
fs
or
test
mov
sbb
and
xchg
xor
sbb
popf
dec
test
xchg
or
inc
pushf
enter
mov
mov
pop
sti
add
nop
scas
int3
push
outsb
retw
out
sbb
cmc
push
xor
jb
inc
int
pop
add
cmp
sahf
lods
sub
pop
push
lods
add
add
imul
xchg
mov
xchg
lods
unpckhps
dec
sub
in
in
or
xor
adc
fdivrl
cmc
mov
gs
pop
mov
daa
inc
cmp
pop
push
and
push
imul
ja
mov
xchg
pop
sbb
test
cld
lods
adc
aaa
addr16
or
daa
aaa
adc
outsb
sbb
mov
ret
pop
lds
add
jns
mov
je
lock
sbb
out
mov
pop
out
mov
inc
fistl
or
cs
pop
adc
sub
mov
and
or
loopne
inc
pop
mov
and
xor
ficoms
insl
jae
ficompl
mov
in
push
pop
cmp
cmp
mov
aas
sub
mov
pop
inc
je
ss
or
out
jmp
push
jecxz
shl
addr16
xor
outsl
fistl
push
push
cmp
cld
outsb
add
jg
push
ds
adc
in
adc
mov
inc
lods
and
cmp
aad
loopne
add
call
jnp
sub
bound
call
inc
xchg
pop
adc
in
mov
push
xchg
icebp
popf
dec
add
sbb
stos
mov
or
in
push
adc
lock
pop
jl
jns
data16
push
or
cmp
push
pop
call
test
jns
sbb
sbb
add
outsb
rcrb
add
add
and
popf
jns
adc
jns
int3
test
pop
out
adc
mov
xor
cmp
cmp
xor
or
ret
mov
mov
leave
leave
mov
dec
mov
out
subl
mov
notb
lcall
xchg
icebp
sahf
enter
add
dec
jns
fsts
pop
in
jns
or
jecxz
out
ret
flds
xor
cmp
jns
es
push
ljmp
lret
push
adc
nop
adc
cmpsl
or
jbe
pop
out
cmp
dec
lcall
xor
es
mov
out
rorb
pop
mov
ja
push
push
adc
stos
inc
adc
pop
xchg
icebp
lahf
pop
hlt
xor
shl
movb
jmp
rorb
cmc
lods
scas
ficoml
cmp
jbe
ss
repz
inc
cmp
add
push
dec
test
xchg
sub
scas
jecxz
mov
ss
cmp
stc
test
and
xchg
dec
clc
lret
clc
adc
pop
inc
jg
iret
into
sub
or
inc
lea
jae
pusha
pushf
pushf
mov
lea
jne
pusha
pusha
push
push
stos
pushl
movb
push
lea
jmp
push
cmc
mov
cmc
or
call
sti
push
jp
fwait
aad
xorb
les
or
sbb
push
mov
inc
loop
out
ljmp
push
aaa
cmpsl
mov
fs
adc
sahf
dec
loopne
aad
subl
test
push
das
sub
sti
dec
jg
push
pop
pop
int3
cmc
push
push
push
imul
lods
mov
pop
pop
push
lods
and
push
ja
dec
push
call
fildl
lcall
xor
ds
xor
cmp
xor
loope
push
mov
cmp
push
dec
fisubs
lea
popf
lock
jecxz
xchg
icebp
mov
test
push
test
call
jmp
mov
gs
dec
xchg
test
adc
in
mov
inc
inc
or
push
cmpsl
fldl
inc
imul
dec
cs
pop
adc
sub
insl
stos
sahf
jmp
inc
add
add
xor
jl
int3
push
jbe
mov
movaps
xchg
lret
stos
push
out
stos
andl
pop
jp
add
popa
xchg
cs
jnp
shll
xor
shr
ds
cmpsl
pop
jle
scas
mov
sbb
shrl
icebp
mov
andl
add
inc
and
fcompl
call
add
mov
lods
adc
add
incb
movl
lea
je
lea
call
pushl
pusha
movw
mov
pushf
movl
movsbl
lea
lea
pushf
movl
push
call
outsb
imul
fcoms
or
xor
fldl
mov
pop
mov
inc
jno
mov
push
call
pushf
inc
and
int
sub
pop
cltd
xor
pushf
ret
push
lods
sar
lds
nop
dec
sbb
mov
lock
js
icebp
mov
mov
xchg
call
sbbb
lret
xchg
loop
cmpsb
sahf
dec
pop
fisubrs
mov
jb
lock
add
in
xor
push
mov
hlt
mov
xor
sbb
pop
fsts
add
jge
push
mov
jle
inc
push
pop
sbb
out
dec
or
mov
sbb
popa
mov
cld
cmp
lea
jns
mov
adcb
fucomp
aad
mov
jne
outsl
push
lock
std
std
mov
insb
xchg
mov
ret
jge
int3
xor
leave
fistps
mov
pop
stc
ss
add
pop
in
call
inc
aam
push
rolb
fbld
adc
test
in
cltd
roll
xchg
inc
out
shr
xchg
push
mov
add
pop
fadds
jb
and
jmp
push
fildl
adc
ficoml
mov
pop
jg
in
dec
mov
dec
mov
sahf
jne
pop
fnstsw
pop
dec
cli
sub
sub
mov
hlt
in
dec
inc
in
push
pop
xchg
das
cmp
stos
mov
icebp
orl
pop
nop
outsb
movsb
xor
movsb
es
popa
int
test
mov
xor
jg
enter
in
int
sbb
loope
pop
rolb
lea
popf
mov
add
or
popa
push
adc
divb
fdiv
aaa
xchg
sub
popf
popf
lcall
adc
movsb
push
xchg
push
xchg
xor
inc
adc
xchg
out
insl
arpl
pop
or
xchg
mov
jbe
fbstp
insb
sub
jns
fsts
lds
sub
and
push
push
mov
pop
je
and
jo
mov
notl
xchg
icebp
mov
fs
je
call
ror
sub
daa
push
adc
aam
mov
mov
movzbw
movzbw
clc
sub
shl
cwtl
or
push
or
push
das
clc
jmp
push
call
pop
push
mov
and
mov
sub
sbb
push
stos
push
dec
add
test
subb
adc
mov
pop
in
loop
popf
and
sub
push
mov
pop
mov
outsl
jnp
pushf
stos
pop
insl
cmpsl
inc
cli
insb
push
pop
test
xchg
int3
mov
idiv
xchg
test
das
mov
xchg
test
gs
or
or
lret
int3
and
sbb
lods
push
inc
and
push
movl
movzbw
lea
call
sbb
xor
sub
sbb
mov
dec
add
fsub
jne
mov
add
test
iret
push
push
dec
or
aam
dec
pop
jns
fwait
out
inc
sub
mov
sub
je
cmp
mov
push
out
sub
xchg
icebp
movsb
daa
sub
lea
adc
pop
movsb
rorb
aad
aad
cmp
test
outsb
push
pop
decl
sub
mov
mov
outsb
sbb
lods
adc
lods
sbb
lods
jle
scas
pushf
mov
lcall
xchg
jo
jno
jmp
loopne
xor
pop
repz
enter
dec
inc
lea
std
cmc
mov
cmp
add
push
push
js
arpl
gs
add
repz
test
loop
inc
and
dec
ds
dec
stos
xchg
mov
and
ret
jp
mov
hlt
dec
imul
jl
xor
push
popa
mov
pop
push
jnp
cmc
xchg
sub
and
data16
dec
leave
add
xchg
jne
cltd
mov
sbb
jbe
fldt
jmp
xchg
into
data16
sub
aam
sbb
mov
xor
out
dec
inc
mov
fisubs
xor
in
cmp
jns
imul
nop
xor
jge
mov
test
inc
mov
in
xchg
test
out
mov
fwait
push
inc
jb
loop
inc
or
jmp
add
icebp
gs
dec
addr16
jbe
mov
imul
push
repz
mov
test
jl
mov
xchg
icebp
cmpsb
fwait
push
daa
xchg
jmp
movzwl
bswap
pushf
jmp
mov
bt
rol
mov
bt
bt
dec
and
mov
setp
cmp
ror
sub
lea
jmp
mov
js
enter
imul
jns
mov
sbb
testb
xchg
pop
loop
or
sub
js
xchg
xchg
out
cmpsb
cmpsl
adc
and
ds
dec
or
sbb
xlat
inc
stos
adc
clc
mov
iret
mov
das
sub
mov
add
mov
orl
cmp
dec
orl
xchg
loope
jge
xchg
adc
xchg
mov
test
dec
sub
add
sbb
into
add
inc
mov
popf
jns
push
aas
das
xchg
insb
adc
push
xor
ljmp
movb
adc
enter
mov
cmp
bt
push
stc
xor
pushl
pushf
pushf
inc
cmp
shr
pushl
jmp
cmp
and
jg
xor
imul
dec
sbbl
mov
jb
lcall
scas
dec
pop
jl
xor
sbb
sarb
mov
xor
outsb
push
and
incb
pop
lahf
mov
sub
icebp
and
out
das
xchg
std
repnz
loope
insl
sbb
cwtl
sbb
add
adc
sahf
dec
cmp
ja
sbb
lods
push
int3
add
push
jmp
sahf
popf
jnp
fdivrs
jle
xor
mov
mov
xchg
icebp
test
fstpl
and
decb
mov
test
dec
mov
mov
sbb
xor
aas
mov
push
or
inc
aas
push
dec
jo
lcall
sahf
inc
xchg
daa
sub
shlb
in
or
xor
sub
sub
and
call
aam
repnz
icebp
test
xor
adcl
add
fs
add
pusha
call
mov
push
adc
sbb
cmpsb
mov
push
mov
ret
mov
pop
mov
mov
lret
loopne
fcomip
and
or
jo
mov
mov
jb
out
mov
scas
push
jp
test
mov
inc
or
push
out
add
pop
inc
fwait
and
push
in
push
sbb
add
cmp
repz
cmp
and
sub
push
outsb
dec
cmc
imul
pop
push
bound
nop
jnp
dec
cli
jbe
addb
jg
jmp
dec
xchg
icebp
test
fbld
aas
std
inc
imul
xor
insb
fwait
andb
adcl
out
xor
adc
stos
out
mov
xchg
jecxz
outsb
jecxz
mov
jns
or
jno
js
call
ret
jnp
insl
lods
in
mov
arpl
mov
jnp
rorb
mov
mov
jg
enter
into
repnz
fistpll
sahf
fs
mov
add
jl
jmp
add
mov
mov
push
jno
jmp
jmp
loope
enter
mov
or
push
xchg
add
adc
mov
insb
enter
addr16
lock
push
mov
cmp
inc
inc
mov
out
sub
rorl
xchg
inc
push
fisubs
adc
sti
out
pop
es
imul
arpl
adc
xchg
icebp
stos
mov
sub
btr
call
xchg
test
push
push
pop
imul
in
test
cli
inc
inc
mov
mov
fwait
jae
mov
stos
stos
mov
ss
or
fcmovb
add
and
inc
push
ret
int3
or
std
jbe
das
ficompl
shrb
sub
and
inc
sub
sbb
stos
sahf
inc
out
dec
fldt
and
jae
xor
shrl
icebp
std
insb
pop
xchg
icebp
stos
adc
popf
lea
je
rcl
neg
add
call
pushf
lea
call
call
stc
stc
push
or
push
pushf
jmp
mov
mov
lea
jne
bt
pushf
mov
test
pusha
push
or
pushf
lea
je
pushf
movsbw
pushf
lea
lea
movzbw
movzwl
pushf
movsbl
not
lea
movzbl
pushf
not
push
mov
pusha
call
pushf
mov
lods
stc
push
stc
rol
pushl
pusha
call
push
pusha
call
jmp
out
mov
mov
or
lea
cmc
cmc
dec
sbb
inc
iret
jle
ja
mov
push
gs
clc
add
out
pushf
data16
notl
push
scas
fbld
mov
xchg
fdivl
fs
xlat
cmp
adcb
cmp
andb
testb
mov
push
nop
adc
push
push
push
mov
test
fsubl
fwait
xor
inc
into
dec
pusha
cwtl
push
xchg
jmp
movsl
xor
cmc
sub
sub
dec
mov
jno
popf
pop
dec
push
push
sub
das
call
in
aaa
out
or
add
sbb
lcall
adc
push
jmp
and
dec
mov
stos
imul
or
mov
fs
cmp
mov
bound
push
push
xchg
sub
mov
sar
xchg
icebp
lods
xor
pushl
movl
pushl
pushl
movb
lea
jmp
out
pop
xchg
mov
out
cmpsl
adc
clc
push
sbbb
lods
call
test
out
push
sarl
sahf
cmpsb
loope
sub
mov
xor
xchg
sub
cmp
cltd
fimuls
addr16
fs
and
clc
adc
insb
inc
xor
push
add
enter
mov
ljmp
push
pusha
push
ss
add
aas
in
mov
pop
and
aas
js
mov
cmp
mov
mov
outsl
test
sub
xchg
imul
jle
in
dec
pop
in
out
pop
xchg
aad
daa
repz
mov
jns
push
sbbl
xchg
outsl
popa
lea
inc
es
into
mov
adc
out
call
sub
jae
stos
mov
dec
pop
fisttpl
les
daa
movsl
adc
repnz
mov
hlt
inc
mov
std
mov
xor
mov
mov
and
les
dec
xor
rcl
or
bound
sbb
cld
sbb
cli
imul
subl
scas
inc
subl
and
aad
pop
std
inc
xchg
or
lret
call
test
add
subb
scas
fistpl
xor
sbb
clc
pop
cmpl
mov
push
iret
sub
xor
fdivs
ljmp
ss
and
hlt
and
inc
addr16
mov
push
int3
fiadds
sbb
test
xor
or
sbb
jle
popa
enter
mov
stc
in
or
push
inc
cmp
jb
setne
andb
sbb
mov
les
xchg
clc
add
outsl
mov
or
or
shll
and
imul
gs
rclb
pushf
lea
jmp
pop
jns
mov
adc
mov
loopne
pop
and
xor
and
in
sbb
inc
lcall
lods
and
xchg
subb
add
repnz
fistl
xchg
cmp
lea
pop
ds
pop
add
insl
push
or
imul
shll
xor
sti
mov
imul
and
pop
or
into
sbb
and
stos
mov
mov
or
lds
mov
daa
call
popf
test
cmp
mov
push
and
mov
icebp
mov
divl
addr16
xlat
daa
pop
and
adc
ja
lcall
out
test
mov
add
stos
fs
dec
pop
icebp
daa
push
js
loopne
jnp
stc
xchg
js
push
or
scas
add
lret
test
lcall
jle
call
cmp
jns
mov
lods
cmpsl
test
add
les
add
pop
ret
adc
das
stos
xchg
insb
ds
aaa
or
lea
xchg
push
dec
loop
fstpt
dec
xchg
js
mov
sahf
jo
nop
imull
imul
mov
cmc
mov
dec
mov
xor
xchg
icebp
mov
pop
lcall
scas
mov
cmpsl
bound
push
mov
dec
in
pop
xor
xchg
mov
clc
dec
fidivrs
inc
xor
aam
lods
popf
in
ljmp
jnp
out
dec
jl
sahf
pop
jl
jmp
int
jge
jno
idivb
mov
adc
test
fimuls
fcompl
in
mov
lds
popf
iret
aad
movsb
mov
xchg
and
or
cwtl
in
movsb
insb
adc
mov
cmpsb
mov
mov
jp
sti
or
dec
add
and
xor
outsl
jge
sti
jecxz
xor
leave
jno
jmp
xorb
jge
cmpsb
adcl
sbb
mov
xor
and
sbb
mov
roll
lods
xchg
outsb
movsl
movq
sti
dec
cmpsl
fildll
imul
sub
add
or
ficoms
mov
jmp
leave
jmp
icebp
mov
lahf
outsb
aaa
dec
cs
jge
xchg
fadds
cli
push
mov
mov
repnz
jg
lcall
mov
mov
mov
aaa
outsl
ds
xchg
scas
dec
pop
and
mov
nop
push
add
mov
popa
jne
xchg
mov
lods
rolb
rclb
jns
shrl
mov
dec
dec
jmp
in
and
in
ret
adc
push
sahf
out
aam
icebp
mov
mov
es
into
add
movsl
out
sbb
subb
test
jl
popf
jbe
mov
cmp
sub
shrb
xchg
jecxz
ret
push
sub
fiadds
mov
mov
aad
jns
jp
pop
stos
js
sbb
push
jl
es
scas
in
pop
jo
sub
pop
and
mov
aad
xchg
je
or
sub
push
rorb
mov
test
jmp
or
out
or
inc
movsb
jmp
xchg
icebp
mov
ja
push
repz
jl
and
add
popf
imul
std
sbb
outsb
test
ljmp
shl
jne
inc
dec
sbb
add
or
jge
int3
mov
lcall
ret
sub
jecxz
dec
jb
jmp
mov
jle
jns
lcall
push
and
and
sbb
cltd
std
movsl
daa
xchg
icebp
mov
rcrw
or
add
adc
mov
out
lahf
push
adc
push
sti
orb
loop
hlt
lcall
orl
loopne
repz
pop
popf
mov
shrl
jge
iret
lock
pop
xor
js
cmp
aaa
aad
mov
popa
sub
dec
int3
xor
hlt
xchg
xchg
icebp
mov
mov
push
cmp
add
dec
mov
out
sbb
jne
jge
outsb
or
sub
dec
in
inc
scas
lret
bnd
jb
cmp
lea
and
cmp
mov
push
xchg
adc
and
icebp
mov
js
jmp
lods
test
hlt
mov
mov
dec
jae
add
add
movsl
repnz
xor
and
rclb
mov
test
sub
movsb
mov
mov
xchg
push
outsb
adc
shlb
mov
xchg
dec
pop
jmp
add
inc
push
xchg
icebp
mov
push
fsubrs
outsl
into
xor
push
popa
aaa
jne
bound
mov
repz
int
jae
add
add
jg
clc
xor
pop
lea
or
mov
out
xchg
popa
mov
cltd
fmul
cmpsb
addr16
dec
in
xor
test
mov
in
xor
and
dec
das
lret
sub
and
or
or
cmp
push
pop
lcall
repnz
icebp
mov
xchg
clc
mov
xor
xchg
jb
fidivl
sahf
push
mov
push
pop
fldl
cmpb
cmpsb
mov
or
sahf
adc
pop
push
sbb
xchg
sarb
outsl
or
test
cmp
iret
insb
push
ret
stos
adcl
jae
jl
pop
mov
mov
sub
jmp
out
scas
xor
shl
test
pusha
in
sub
test
xchg
icebp
mov
mov
fdivr
lcall
inc
and
shll
call
neg
bt
pushf
xor
push
push
jmp
bswap
lea
push
call
movl
pusha
mov
pushf
lea
jmp
bswap
pushf
mov
mov
or
jmp
jmp
mov
sbb
lahf
push
push
xor
addr16
fistpll
mov
idiv
and
mov
and
sub
cmp
sahf
xlat
sub
sub
xor
mov
out
adc
jb
ljmp
divb
icebp
mov
ror
jnp
sbb
and
add
sbb
cmp
flds
call
icebp
sti
sub
ss
arpl
xchg
inc
jmp
adc
sbb
inc
fs
add
ss
in
pop
xchg
fnsave
adc
sub
mov
jmp
inc
js
adc
loopne
xor
adc
pop
xorb
or
ret
in
outsb
ret
adc
nop
divl
dec
cmp
dec
push
stc
xlat
aas
lods
std
inc
ret
mov
out
out
push
cmc
aaa
push
pusha
and
ficoml
scas
jecxz
sub
out
in
lock
dec
push
push
in
std
pusha
inc
aad
popa
enter
mov
aam
addb
in
je
mov
arpl
cwtl
hlt
shlb
or
adc
insb
adc
in
lcall
fs
fs
xor
in
es
sub
push
xchg
stos
imull
stos
pop
addb
xor
fdivp
je
rolb
sub
cwtl
jle
stos
sub
aas
or
adc
fnstsw
or
call
inc
jg
lods
ret
fs
icebp
mov
pop
cmp
test
mov
add
mov
cltd
sub
sub
pusha
cmp
call
push
mov
xchg
ret
and
es
mov
mov
clc
pop
or
push
push
dec
cmpsb
outsl
and
cltd
pop
jno
jns
xor
pop
inc
sub
mov
cmp
jp
clc
jp
out
or
inc
cmp
mov
dec
sub
insl
gs
rclb
xchg
and
stos
arpl
mov
jmp
sbb
add
sbb
xor
push
push
dec
add
sbb
mov
sahf
xchg
in
mov
mov
xlat
fistpl
push
xchg
ja
dec
daa
pop
jmp
aaa
sti
pop
xchg
icebp
mov
inc
scas
aas
dec
insb
dec
adc
add
scas
push
or
mov
and
adc
into
dec
stos
inc
addr16
and
pop
and
sti
jns
cmp
pop
ljmp
mov
scas
stos
scas
arpl
sub
lcall
inc
in
xor
mov
and
popa
cli
push
mov
sub
addr16
nop
lods
ss
push
and
pop
inc
mov
sub
popfw
popf
lret
lods
std
add
adc
loope
mov
jmp
xchg
icebp
mov
adc
rol
adc
sbb
clc
adc
call
mov
lods
mov
inc
or
test
fisubrs
cmc
mov
mov
mov
cmovb
ljmp
mov
push
pushl
fcoms
outsl
dec
pop
cs
outsb
push
mov
dec
push
xchg
mov
inc
lcall
dec
inc
je
icebp
mov
pop
mov
lea
ja
call
ret
daa
jecxz
mov
fcompl
scas
sti
jae
jae
jae
mov
sti
or
jne
push
dec
mov
pop
mov
jns
sbb
repnz
das
dec
jae
out
cs
cmpsl
lret
fdivp
mov
loop
enter
cs
sub
addl
cmp
test
cmp
pushf
lea
ja
not
inc
call
pushl
call
call
lea
je
push
bt
jmp
xor
add
outsl
mov
outsl
jb
sbb
rorb
push
dec
ss
movsl
inc
daa
or
pusha
movsl
in
arpl
xchg
mov
imul
add
sbb
sub
ss
icebp
push
lds
cmp
jne
mov
into
mov
imul
xchg
call
imul
sbb
popw
insb
sbb
xorb
inc
bndstx
mov
in
fsub
orb
xchg
adc
xor
jne
xchg
inc
xchg
icebp
mov
push
inc
mov
fs
outsb
outsb
mov
testb
pop
call
mov
dec
dec
fwait
lds
jns
ficoms
lds
imul
inc
loop
pop
mov
aam
adc
adc
clc
cwtl
subb
pop
shrl
xchg
push
out
pop
dec
xor
and
dec
adc
lods
stc
xchg
mov
sarb
mov
mov
je
pop
and
lcall
sahf
sub
icebp
push
jmp
push
ret
jl
dec
int3
scas
jb
clc
dec
dec
adc
mov
xor
jnp
shrl
sbb
cmp
stc
sbbl
popa
aad
cmp
or
sbbl
aaa
inc
ljmp
pop
nop
xchg
fcoms
jle
ds
icebp
mov
inc
cltd
jl
adc
dec
out
cli
cmpsb
inc
imul
fimuls
mov
popa
pop
push
or
inc
fs
adc
testl
and
ljmp
mov
test
mov
aad
and
cwtl
sub
xor
outsb
add
pop
mov
mov
push
mov
cmpsl
push
rcl
out
test
or
or
fst
xor
imul
arpl
mov
pop
cwtl
test
ret
inc
jg
shrl
stos
sub
jb
and
subb
in
ljmp
fistpl
push
lcall
adc
push
pushf
dec
add
stos
jle
dec
clc
xchg
icebp
mov
mov
sti
add
test
bt
jp
and
bt
pushf
pushf
pusha
add
pushf
pushl
movw
mov
lea
jmp
pop
dec
jno
push
xchg
das
inc
sub
mov
repnz
dec
adc
cmp
xchg
mov
add
cmp
push
stos
ss
push
in
in
mov
jl
loopne
movsb
int3
ds
lret
loop
mov
jecxz
rolb
mov
insb
clc
xor
shl
or
push
loopne
jmp
ljmp
cmp
aam
aaa
cmpsl
ret
outsl
xor
jb
xor
sub
sub
test
push
fwait
iret
push
inc
cmp
hlt
loope
js
arpl
jecxz
mov
adc
mov
xchg
sbb
notl
cmpsl
sti
xor
mov
jns
test
popa
mov
hlt
sub
movsl
mov
or
hlt
nop
lret
out
xor
sub
popf
and
sbb
and
rolb
jns
pop
loope
adc
shll
into
jbe
aaa
cwtl
push
xor
pusha
out
sbb
or
mov
sbb
pop
loope
loope
mov
lret
inc
inc
xor
cs
dec
dec
add
adc
sti
xor
ds
sub
pop
pop
mov
inc
dec
ret
rcll
jge
jl
mov
stos
movsb
cmp
ja
out
mov
clc
xor
dec
pop
xlat
orl
fistpl
mov
jg
sbb
lods
cmc
ror
xor
inc
fstps
pop
je
pushf
movsl
std
int
rcll
adc
movsl
xchg
icebp
mov
in
fpatan
lock
jmp
mov
mov
jo
mov
xchg
adc
scas
test
or
inc
aad
testb
repnz
sbbl
or
cmp
roll
inc
and
sarl
in
cmpsl
and
mov
cmp
in
mov
sub
out
fwait
pop
fwait
push
jecxz
dec
ja
push
adc
sub
sbb
jbe
sbb
pop
lret
jns
cltd
aam
icebp
and
mov
push
xchg
dec
ds
popa
cwtl
mov
ljmp
push
popl
in
dec
dec
outsb
push
jg
mov
xchg
pop
xchg
jle
push
es
dec
inc
or
xchg
lods
push
adc
test
movsl
sbb
pop
pop
mov
fstpl
iret
lea
ss
adc
cmp
les
adc
push
jo
push
pop
fdivr
jb
std
aas
in
or
push
fisttpl
cld
ss
cmp
dec
sub
scas
daa
sti
add
clc
daa
sarl
ja
sbb
cmpsb
dec
xor
in
aam
xchg
icebp
rorb
sbb
rcll
xor
xor
dec
inc
or
push
pop
or
out
push
dec
in
dec
mov
mov
jns
jae
jb
sub
mov
lcall
mov
neg
mov
aam
daa
mov
mov
stc
and
xchg
in
cmpsb
add
mov
cli
pop
pop
sub
test
push
jno
mov
cmc
loope
lcall
push
pop
bound
shlb
fnstcw
xchg
pop
adc
cmc
ror
mov
xchg
sbb
sbb
and
call
mov
mov
mov
mov
sbb
sbb
push
adc
push
add
sub
jnp
loopne
xchg
xchg
xchg
xchg
sbb
out
test
cld
push
lods
clc
leave
sub
add
xlat
dec
jbe
ret
pop
cli
push
inc
aam
aam
xchg
lcall
faddp
mov
xor
or
mov
mov
adc
das
xor
pop
or
arpl
adcl
ret
jae
add
jg
adcb
push
add
pop
jae
in
cmp
fs
pop
out
and
sbb
cltd
repnz
push
jecxz
sti
and
pop
movsl
ret
rclb
popf
dec
call
inc
call
ret
out
sbbl
test
shrl
mov
imul
pop
fsubl
jecxz
out
pop
mov
xor
cmp
pop
loopne,pt
mov
xor
stos
mov
sbb
insb
add
ret
xor
jbe
add
test
mov
loope
call
das
and
mov
cmp
mov
xor
out
add
lret
fdivr
out
jge
lret
xchg
icebp
shrl
sub
cmpb
add
push
movl
push
pushf
lea
jmp
push
dec
dec
push
inc
push
dec
cs
insb
add
mov
dec
add
pushf
lea
call
pusha
pushf
bt
pusha
sub
pushf
jmp
mov
push
or
rclb
xchg
in
adc
icebp
cs
repnz
xorb
repnz
inc
or
push
xlat
mov
push
dec
into
out
add
or
pop
fisttpl
fisubrl
andl
jge
popa
xor
cmp
xchg
icebp
ret
mov
xchg
icebp
call
jmp
rcl
btr
movsbw
sub
push
movsbw
sub
mov
lea
rol
call
leave
or
enter
xchg
mov
es
lretw
jp
jnp
sub
dec
fwait
or
fstl
jo
add
jmp
add
pushl
outsl
fiaddl
xchg
int
lcall
sti
and
push
into
lret
ljmp
jnp
push
stos
add
xchg
xlat
mov
je
shlb
clc
sbb
ret
insl
movb
cmp
push
mov
lods
add
mov
int
cmp
mov
adc
pop
das
sti
jb
jo
mov
jne
mov
or
xor
ret
push
adc
repz
popa
shrl
ret
mov
and
mov
movl
pushf
mov
pusha
push
lea
jmp
scas
dec
bound
mov
adc
xchg
popa
cmc
pop
shll
add
jne
mov
push
mov
repz
or
test
or
mov
cli
jg
xchg
sbb
mov
inc
mov
out
sbb
jmp
mov
out
iret
mov
push
ret
cmpsb
jb
mov
scas
cmpsl
sub
mov
add
jg
fwait
add
pop
jnp
cmc
xchg
icebp
ret
mov
inc
dec
lret
adc
cli
mov
mov
cmp
das
ljmp
mov
pop
out
xor
xor
push
movsl
jp
xor
sbb
ja
dec
lret
sbbb
inc
mov
je
inc
in
jg
mov
dec
cli
xchg
push
pushf
push
inc
lea
inc
jl
fidivs
leave
ret
cmp
pop
mov
mov
sbb
enter
xorb
bound
mov
inc
rcrl
outsb
aaa
pop
or
loopne,pt
inc
in
es
xchg
pop
shrl
or
or
call
call
sar
mov
mov
cmp
xor
push
mov
jne
xorb
xchg
jns
cmp
icebp
in
pop
clc
movzwl
rcl
mov
cmc
call
mov
movsl
jl
inc
stc
xor
insb
fs
push
jns
jge
aam
xchg
das
mov
mov
mov
movsb
jle
addr16
adcl
arpl
mov
push
xor
scas
dec
pop
jecxz
ret
fnsave
mov
stos
add
popf
lcall
jl
dec
push
xor
and
pusha
cmp
add
xchg
push
pop
jl
cwtl
mov
lret
sub
and
mov
sub
pop
sub
cli
call
das
das
mov
icebp
shl
test
cwtl
or
add
lods
xlat
andb
scas
movsb
adcl
sbb
pop
scas
push
dec
push
lock
lcall
ss
test
comiss
add
xchg
loopne
xor
xchg
iret
call
mov
pop
jb
pop
movsl
sub
jns
stc
fs
gs
insb
push
rorl
in
pop
fdivs
inc
repz
sub
leave
pushf
push
jns
or
shl
sbb
sub
pop
jnp
sub
ret
scas
mov
pop
insl
les
mov
call
sbb
dec
jmp
pop
sbb
popf
imulb
adc
sub
pop
lea
stos
es
jmp
cmc
pop
adc
inc
imul
mov
pushf
mov
sub
addb
outsl
in
mov
or
mov
adc
mov
adc
push
jge
cltd
dec
xchg
ja
or
lds
inc
sbbb
mov
cmc
cmp
test
pop
push
shlb
xlat
shr
shl
movw
stc
bswap
mov
shr
clc
add
dec
pushf
rol
add
lea
stc
cmc
xor
bt
mov
call
je
push
adc
out
mov
pop
jge
xchg
jle
xchg
pop
dec
sub
adc
in
outsb
iret
pop
sub
fmuls
mov
xchg
idivl
test
push
fsubs
fcoms
loope
mov
fdivl
xchg
icebp
mov
and
movl
pusha
movl
movw
pusha
mov
lea
jmp
nop
je
xor
adc
mov
mov
rcll
adc
in
sub
dec
add
je
hlt
hlt
mov
sahf
mov
mov
sub
out
mov
imul
push
test
stos
lcall
imul
js
pop
pop
xchg
icebp
pop
sbbl
mov
loopne
movsb
out
lods
aad
cmc
dec
xor
test
xor
lea
mov
fcoml
push
lcall
pop
dec
and
stos
and
repnz
divl
xchg
push
adc
shll
fwait
rol
dec
mov
ret
enter
das
std
push
sbb
mov
inc
cwtl
mov
jl
clc
xchg
icebp
enter
dec
stc
test
stc
shl
call
shl
cmp
mov
aad
stos
cltd
xor
jp
push
pop
sub
push
loope
cmp
lcall
push
in
jns
sub
cs
and
lds
adc
or
stos
pop
jno
cmp
mov
icebp
leave
and
xor
sub
mov
add
adcl
dec
imul
add
add
repnz
jmp
addr16
mov
enter
mov
in
push
xchg
mov
scas
hlt
imul
xchg
bound
pushf
pop
jl
inc
stos
das
sbb
inc
mov
inc
pushf
movl
repz
fucomip
or
sub
fs
pop
in
cmp
nop
and
jb
dec
loope
cmp
xor
sbb
jle
jp
mov
jg
push
sub
fnstenv
lea
xchg
fisubrs
scas
and
fldcw
sbb
testb
ret
mov
imull
cmpsb
jecxz
int
imul
mov
je
inc
nop
aad
jbe
mov
inc
test
sbb
test
xor
mov
bswap
jns
sub
insb
xor
push
shlb
iret
mov
pop
scas
sbb
xchg
adc
ds
and
pop
or
xchg
add
fcomps
or
call
iret
push
cltd
into
mov
popf
and
dec
fucomp
mov
mov
or
push
jl
push
push
mov
pop
mov
push
adc
cmpsl
sbb
pop
and
cwtl
sub
scas
push
jp
cmp
nop
add
lds
shlb
or
test
xchg
xor
xor
and
pop
je
std
mov
ss
or
sub
outsl
and
sub
pushf
into
push
add
cmpsl
std
pop
les
lods
mov
pop
jbe
dec
xchg
mov
fildl
movsl
fcompl
lret
jmp
cmp
loope
fstp
pop
jb
and
lahf
fcom
and
and
ljmp
mov
push
jle
pop
pushl
loop
push
imul
xor
andl
cmp
inc
movb
dec
sbbl
jo
mov
push
leave
dec
lods
aaa
ljmp
cmp
js
cmp
jmp
sarb
dec
sub
inc
mov
scas
sub
inc
sbb
lret
adc
sbb
dec
cmp
push
imul
daa
or
jbe
mov
mov
pusha
std
fs
and
idivb
mov
stos
shll
inc
into
dec
cmp
push
add
pop
addr16
out
dec
fdivr
push
sub
add
fcoms
adc
mov
clc
subl
cmpl
in
dec
daa
push
test
gs
addr16
call
xor
bound
mov
fsubrs
cltd
xor
outsl
cmp
dec
dec
sarb
jle
out
in
mov
jmp
mov
adc
jmp
pop
es
loope
or
add
mov
aam
enter
adc
jmp
mov
negl
pop
ret
ljmp
mov
in
xchg
pop
mov
fadd
scas
shrl
cmpsb
fildll
pop
jb
jp
add
cmpsb
sub
loopne
mov
sbb
insl
ja
incl
addr16
sbb
adc
mov
sub
outsl
lods
call
imul
cld
mov
adc
cld
adc
icebp
sarb
push
mov
jp
mov
jl
push
data16
add
lahf
bswap
fsubrs
nop
xchg
and
jmp
int
inc
inc
aas
js
xor
test
or
push
pop
repz
and
fs
imul
sbb
add
cmpsb
mov
xlat
pop
adc
mov
xchg
mov
repnz
mov
test
popa
mov
push
cltd
lea
jnp
and
insb
andl
notl
pop
jge
or
add
insb
add
xor
fistps
mov
sbb
adc
gs
mov
jge
cltd
loopne
xchg
js
repnz
dec
enter
cmp
adc
jne
repz
nop
jmp
mov
and
pop
sub
rorl
pop
cmp
addr16
hlt
popa
adc
cmpsb
add
in
rorb
stos
push
cwtl
loope
xor
push
jecxz
jge
inc
cmovge
std
insb
mov
cmp
cmp
adc
sub
jge
cmp
or
xchg
out
clc
fcompl
sbb
outsl
sub
cld
jp
or
jle
std
push
sub
sbb
mov
pop
pop
aas
pop
aas
ljmp
mov
mov
andl
daa
prefetch
adcb
enter
fcompl
or
aaa
fisttps
lahf
outsl
leave
pushf
scas
adc
fmul
jae
insb
dec
mov
sahf
push
je
xchg
outsb
sub
adc
ret
mov
ds
stc
fcompl
adc
jns
lret
es
cli
inc
mov
sub
insl
and
ljmp
aaa
mov
enter
add
pop
pop
mul
lret
pop
mov
or
xchg
xchg
leave
icebp
or
enter
push
xchg
fimull
fwait
adc
inc
dec
sub
clc
cli
pop
adc
sub
ja
mov
ds
push
sahf
xchg
int3
popa
mov
into
add
jmp
sub
fadds
inc
cmp
sub
push
std
imul
lods
imull
fcmovnb
adc
mov
cli
out
popa
shlb
jmp
out
sub
ret
int3
imul
sub
cmp
cltd
push
mov
cmc
cs
jmp
cld
xchg
lods
stc
sti
push
loopne
jno
mov
out
and
jne
mov
sub
mov
sbb
dec
lea
pusha
sbb
test
add
aad
sbb
rolb
xchg
loop
xchg
cmpsl
repnz
in
test
mov
add
ja
fmul
ja
inc
ret
dec
iret
cmp
push
data16
fidivl
sahf
and
xchg
aam
add
fisttpl
ja
xor
push
xchg
jmp
in
push
shr
sub
or
fld1
out
in
mov
ljmp
pop
sar
mov
mov
jae
mov
jns
scas
push
fldt
int
jo
fildl
mov
retw
jmp
sbb
dec
idivl
into
mov
ds
cmp
inc
pop
dec
test
pop
sub
mov
inc
addl
sbb
aam
fsubrl
call
xor
adc
scas
pop
int
jb
cmpsb
cwtl
fdiv
out
add
ret
sub
jb
fiaddl
enter
xchg
cmpsb
mov
mov
xchg
lret
pushf
stc
es
repz
jl
adc
mov
push
push
add
mov
scas
addr16
cmp
add
and
xor
imulb
fwait
cltd
aam
cmpsb
cli
loop
and
out
cmpl
xchg
and
xchg
ja,pn
fstpt
in
mov
stos
xchg
cmp
popa
jnp
xor
test
inc
hlt
lock
lahf
adc
mov
cmpsl
xor
mov
dec
cmp
andl
fistps
repnz
pusha
pushf
pcmpgtd
xchg
arpl
out
sbb
notb
les
lret
fstpt
cmp
dec
xor
or
add
rorb
adc
jecxz
dec
pop
push
dec
xor
repz
adcb
cli
mov
jbe
mov
dec
sbb
imul
cmp
mov
push
dec
fbld
popf
cmp
lcall
int
sub
push
jmp
sbbb
incb
push
add
add
popf
inc
inc
cld
jmp
adc
ja
cli
std
out
dec
cltd
sub
call
nop
xchg
sbb
jns
popa
adc
popa
ja
sbb
add
cmpsb
xor
sub
negb
jge
cli
ds
aad
cmpsb
daa
add
mov
pushf
cmp
add
scas
int
pop
xchg
cmp
or
int3
std
fimull
bound
iret
mov
int3
inc
push
xor
push
scas
mov
xlat
lock
fstpt
add
dec
das
insl
ja
loope
sub
gs
stos
dec
cmp
cmp
arpl
ja
lock
movsl
fmull
xchg
aas
test
cmp
outsb
fs
jg
ret
adc
outsl
adc
mov
aaa
cmc
or
cltd
inc
xor
sub
xchg
pusha
mov
xchg
aaa
xchg
fwait
pushf
shlb
fwait
mov
scas
aam
out
mov
cld
stc
xchg
lcall
cmpsl
sbb
sbb
xchg
sub
sarl
lods
inc
mov
fcmove
imul
pop
ds
pop
mov
inc
outsl
jnp
adc
xor
mov
test
out
std
mov
test
push
call
aas
lcall
fcompl
mov
mov
adc
xchg
cmp
dec
ss
test
and
add
dec
ffree
sbb
push
outsl
imull
push
test
cltd
and
xchg
cmp
sub
xor
and
leave
push
cmp
and
inc
inc
xchg
xchg
std
jae
out
adc
sub
adc
mov
nop
jp
arpl
add
lret
sbb
leave
ud2
push
loop
int
jle
or
sub
and
imul
in
sub
jl
adc
push
leave
xor
or
xchg
flds
pop
cwtl
fs
scas
negl
mov
jbe
gs
cmpsb
dec
mov
stos
cmp
clc
lods
mov
jnp
adc
mov
repz
pop
adc
mov
test
mov
ret
cltd
and
addl
test
pop
cwtl
push
test
je
jne
mov
inc
xchg
sarl
inc
ss
pusha
sub
shll
mov
fadds
imul
xchg
sub
lret
aaa
repz
loopne
ja
cmpsl
loop
jbe,pt
into
test
fsubs
stos
mov
jecxz
fstpt
jnp
xlat
out
clc
xchg
or
es
nop
cmp
jp
loope
pop
cwtl
sub
or
mov
mov
mov
cs
int
xor
push
xchg
push
add
aas
sub
fdivs
mov
sbb
sbb
loope
cmpsw
xor
push
ret
sub
adc
sbb
mov
xchg
outsl
jge
push
sbb
iret
bound
rcrl
jno
cmp
pushf
in
sbb
loop
leave
es
add
shrl
mov
mov
arpl
clc
mov
or
sti
push
mov
loope
lcall
pop
push
test
pop
insb
rorb
bound
mov
jg
in
imul
dec
rclb
xor
ljmp
in
and
das
out
and
enter
shlb
movsb
xlat
lods
ljmp
and
stos
iret
lea
cmp
icebp
cwtl
and
ja
adc
loop
xchg
add
icebp
adc
pop
push
dec
notb
mov
arpl
dec
insb
cmpsb
or
imul
mov
jb
add
stos
mov
dec
pop
or
mov
mov
cmpsl
push
push
xchg
xchg
ret
cmp
in
mov
test
lahf
mov
mul
jae
jne
inc
es
sbb
lock
jbe
int3
sbb
icebp
fsubl
loopne
ljmp
xchg
stos
loop
push
inc
loopne
shll
sbb
xchg
mov
mov
and
push
xchg
inc
dec
divb
cld
idivb
push
fistl
and
mov
call
mov
repnz
inc
mov
test
pop
ret
xchg
pop
aad
dec
lea
cmp
jne
xchg
aam
mov
xorb
loope
sbb
add
mov
adc
and
div
pop
xchg
inc
sbb
outsl
push
and
inc
rdpmc
ds
xchg
pushw
adc
mov
add
or
sub
cmp
shrb
movsl
das
and
jl
jp
sub
dec
inc
fldl
gs
js
xor
movl
das
mov
jbe
loopne
cmc
lea
es
sbb
push
fisttps
notb
inc
sub
mov
mov
add
insl
movsb
or
jbe
das
jge
imul
aad
jne
jns
test
dec
push
sarb
lods
inc
cmp
xchg
sub
sbb
insl
mov
sub
cmp
push
jns
add
mov
jo
cmc
mov
mov
out
sahf
sbb
shl
mov
lret
inc
inc
jb
push
sbb
xor
jg
cltd
push
cmp
inc
dec
cltd
cmpsl
hlt
lods
sbb
xchg
ds
test
out
fwait
cmpsl
dec
add
sbb
xchg
pop
pop
mov
cmp
fsin
inc
sbb
lcall
sarl
mov
lret
xchg
xchg
mov
push
inc
xlat
fsubrl
and
sbb
cmp
add
xor
movsl
sbb
popf
jne
movsb
add
dec
hlt
xchg
cld
and
aas
test
jmp
ficoms
inc
sbb
mov
rcl
mov
imul
repz
lcall
jge
cmc
xor
ljmp
xor
aas
xchg
outsl
inc
dec
in
push
dec
insb
push
imul
xor
xchg
hlt
push
push
lods
sti
mov
outsl
gs
push
outsl
lods
jns
repz
pop
pop
or
lods
daa
jo
inc
lcall
sub
jmp
push
out
push
adc
ret
or
cli
scas
or
cmp
mov
cmpb
ss
fisttpl
iret
test
xchg
clc
es
pop
cmc
mov
push
and
xchg
aam
or
test
pop
fimuls
fstl
dec
adc
std
mov
enter
addr16
cmp
test
inc
sub
mov
lock
in
or
jae
sbb
sub
cmpsl
sbbb
sbb
inc
inc
std
sub
test
fcom
push
pop
lock
pop
and
test
into
or
clc
aad
clc
cld
fs
and
xchg
mov
notl
and
dec
nop
and
sarb
add
mov
ds
sub
testb
std
daa
mov
in
push
dec
fcoml
rclb
and
sub
dec
rolb
movl
sti
cmp
mov
sarb
inc
loope
pop
sbb
jle
pop
rolb
push
fistl
hlt
xor
inc
lds
pop
out
adc
sub
sbb
push
push
mov
jno
mov
inc
sub
cld
inc
call
lea
pop
xor
cmp
cmp
loope
std
cli
mov
mov
iret
mov
mov
jle
rorl
cmovp
pop
adc
dec
push
das
mov
insb
pop
adc
jo
adc
mov
jnp
adc
sub
jecxz
push
push
dec
lods
lea
push
lret
mov
mov
negl
loopne
dec
cmp
or
incl
bound
lods
call
dec
mov
dec
cmp
ret
jae
dec
ss
xor
mov
fistpll
dec
mov
dec
pop
add
loop
scas
in
stc
jmp
jnp
lock
test
ds
lods
add
pop
xor
cs
lret
jbe
rclb
mov
sbb
cmpsb
ret
cmpsl
lods
push
loop
loop
jecxz
scas
rclb
dec
mov
in
in
xchg
je
int
sbb
or
pop
cmp
push
xchg
das
loope
in
int3
inc
xor
int3
mov
adc
jle
cld
jle
xor
sahf
xchg
fcompl
nop
mov
xchg
scas
int3
pop
scas
bound
jmp
jmp
inc
push
cmp
lock
aam
mov
inc
divb
jmp
jecxz
xlat
mov
add
nop
aaa
jmp
test
cs
mov
cmp
dec
push
add
fisttps
push
inc
adc
jns
dec
mov
jo
sbb
mov
ljmp
fs
jbe
inc
inc
cli
adc
mov
clc
stos
movsl
fdivrp
inc
sbb
mov
inc
xchg
shlb
mov
dec
add
or
lods
mov
cs
adc
mov
rcll
cli
cmp
test
pop
and
repz
jae
rclb
pop
mov
sbb
or
dec
sub
adc
into
jg
jmp
out
sbb
cmp
or
inc
shrb
fsubl
pusha
bound
scas
stos
cmpsb
jbe
jno
jns
push
aaa
repnz
sub
lock
cmc
addl
fmuls
mov
sub
lret
out
gs
pop
add
fcmovu
jge
cmp
lea
inc
adc
sti
rcrb
cmp
iret
inc
pop
stos
ljmp
jge
jge
pop
sbb
sbb
jmp
inc
push
push
outsb
pop
orl
sub
adc
les
fcoml
xor
add
in
xchg
and
addl
out
iret
aad
icebp
or
into
push
or
xchg
fnstenv
fsubrp
push
pop
and
adc
xchg
mov
xchg
call
fldt
and
enter
and
adc
lds
cmpl
repz
sub
jg
into
pop
cmp
inc
xor
lods
scas
xchg
jmp
int
add
mov
les
push
cmp
adc
aad
pop
sbb
xor
mov
pop
imul
or
jnp
mov
std
in
and
dec
jecxz
outsb
pusha
mov
lods
jmp
sub
mov
mov
sub
imul
pop
mov
push
sti
loope
xchg
push
cld
insw
or
xchg
sub
mov
addl
movd
repz
cltd
into
lret
lcall
loop
ret
cmp
or
mov
dec
sub
imul
xor
sub
fsts
or
test
mov
or
mov
icebp
push
inc
sbb
sub
dec
imul
xor
or
xlat
add
and
push
cmp
or
in
call
adcb
xor
xchg
inc
or
fstl
mov
xor
pushf
adc
pushf
pushl
pushf
jmp
push
pushl
ret
call
not
sbb
add
mov
cmc
call
ds
lret
lahf
jge
and
adc
sub
std
lods
xchg
int3
jle
ja
loopne
lret
add
lcall
xchg
movsl
clc
jne
rorb
or
lods
mov
nop
xchg
pop
inc
rcrb
mov
imul
stos
push
gs
je
jle
aas
enter
sub
inc
nop
in
pop
cld
inc
fdivr
js
clc
sbb
icebp
fiadds
mov
inc
and
fmulp
pusha
add
mov
cwtl
lock
jnp
mov
add
jno
sbb
lods
outsl
je
cmp
inc
int3
shll
lock
pop
cmp
cmp
ds
arpl
mov
adc
stos
mov
lret
cmpsl
fs
pop
mov
inc
sarl
jl
dec
and
lcall
or
jle
xchg
mov
rorl
mov
pop
lar
and
popa
loop
aaa
and
inc
pop
jle
xlat
divl
popa
mov
lret
aam
xchg
aas
sub
mov
add
pop
pop
sbb
and
mov
bswap
xchg
mov
jmp
mov
inc
push
call
pop
xor
lods
aaa
pop
mov
cmp
enter
nop
mov
je
inc
pop
clc
std
gs
pop
jecxz
xchg
xor
jno
mov
lea
mov
mov
fmull
xchg
clc
je
pop
dec
push
jbe
sbb
xchg
push
mov
in
jnp
add
mov
mov
lcall
mov
jbe
push
sbb
push
test
icebp
fisttps
pop
ds
bnd
hlt
adc
jp
xchg
mov
pop
addr16
sbb
adc
add
ljmp
sub
pop
sahf
out
push
jns
ds
sahf
aaa
sub
mov
fdiv
sbb
fildll
int
cmp
pop
xchg
mov
stc
fstl
mov
je
add
ror
cmc
xor
mov
bt
test
sub
call
sbb
daa
rolb
and
std
xor
pop
push
xchg
push
push
sub
add
add
xor
movsb
dec
dec
lea
fdivl
arpl
cmpsb
push
loopne
sbb
fadds
arpl
loop
mov
addr16
inc
adc
clc
mov
xor
jl
outsl
mov
cmp
aas
ljmp
jno
cmc
loope
test
or
icebp
loope
icebp
in
ds
lret
or
lea
push
scas
fwait
mull
or
jae
cli
sub
push
sub
sub
jmp
jmp
bound
xor
add
movsb
adc
mov
push
mov
adc
inc
aam
out
jecxz
repnz
fcomps
mov
hlt
mov
icebp
loope
cmp
dec
mov
fcompl
xchg
dec
mov
or
cltd
push
nop
lock
xorl
dec
cs
nop
sbb
push
jns
mov
das
dec
dec
movsl
mov
push
or
pop
jnp
mov
ret
jnp
jo
push
bswap
fwait
jecxz
das
jg
xor
xor
sahf
inc
iret
dec
adc
mov
sub
stos
je
sub
and
add
jecxz
push
dec
pop
mov
loopne
sbb
add
push
sub
cmp
push
sub
xor
loope
jle
mov
mov
xchg
sbb
out
sub
ror
lea
add
call
push
mov
xchg
or
adc
lret
push
xchg
jno
or
push
out
mov
sub
or
mov
or
lock
popf
mov
push
cld
aaa
dec
loopne
mov
jge
xor
inc
mov
dec
and
imul
inc
pop
dec
lods
jnp
popf
cmp
add
cmc
ret
jo
fcomps
mov
sbb
pop
fisubrl
cld
jle
dec
xor
clc
or
add
insl
je
add
scas
adcl
lahf
nop
sub
inc
mov
xlat
push
repnz
outsl
mov
cmpsl
pop
mov
ss
or
and
movb
pusha
movl
jmp
pop
pop
lea
adc
scas
pop
fsubrs
sbb
xchg
inc
mov
out
add
lret
mov
xchg
inc
sbb
idiv
cmp
xchg
xchg
out
cmp
jmp
out
xlat
ficompl
scas
cmp
or
inc
sub
imull
cmp
stos
out
lcall
ja
push
sub
pop
mov
pop
push
mov
testb
sbb
or
scas
inc
ljmp
lods
sub
out
xlat
xchg
pop
dec
mov
cmp
fwait
add
ss
lods
mov
add
sahf
imul
jb
push
ficomps
into
mov
xor
pop
cmp
outsb
jns
jg
sub
xchg
or
fs
adc
repnz
mov
inc
adc
pop
xchg
es
pop
mov
lea
sbb
subl
push
xchg
cmp
or
fldt
adc
pop
js
lods
bound
fisttps
lcall
sub
or
shl
bound
loop
ss
jmp
idivb
movsb
cmp
lods
pop
push
push
or
xchg
andb
mov
mov
adc
aad
add
iret
aaa
nop
out
in
jmp
pop
push
mov
xchg
cmp
pushf
das
lods
lods
pop
xchg
xchg
cmp
ja
or
mov
fwait
cmc
scas
into
lods
test
mov
pop
sub
jae
repnz
add
jb
inc
jmp
jb
test
inc
stos
and
mov
enter
sbb
js
repnz
pop
movsl
imul
jl
cmp
jnp
cmp
lods
pop
inc
xchg
push
cmp
and
fwait
or
fldt
cmpb
xchg
imul
stc
sbb
push
divb
mov
ja
lock
lods
fwait
jl
stos
fisubrs
loop
mov
lret
pop
lods
pop
incb
cmp
sub
fcomps
mov
vpcmpeqd
sub
fwait
inc
fwait
pop
repnz
cli
jmp
sarl
and
mov
xchg
cmpsl
sti
icebp
or
mov
fistpl
test
cmp
mov
mov
mov
add
out
jns
xchg
loop
push
cmp
xchg
stos
add
mov
ret
inc
xorb
loope
jns
iret
xchg
lods
sbb
stos
xchg
or
sti
je
mov
xor
lcall
imull
mov
fwait
push
mov
into
push
mov
or
daa
cli
pop
mov
pop
bound
insb
jmp
cmp
scas
incl
xor
shl
ljmp
in
xchg
mov
idivl
jg
sti
adc
add
test
inc
mov
mov
stc
leave
adc
mov
cmpb
ds
push
stos
add
mov
aam
pop
mov
sti
mov
lcall
sub
add
mov
shlb
pop
pop
mov
repnz
ja
sti
mov
sbb
sub
sub
xchg
jl
and
ja
xchg
shl
mov
lret
pop
stos
cli
push
test
jnp
dec
xchg
fwait
cmp
inc
mov
sub
xorb
fistpl
sahf
sbb
fwait
cmp
push
push
mov
and
aad
xchg
sub
mov
or
jle
sbb
inc
les
or
sti
and
pop
test
or
cmp
data16
mov
mov
jecxz
gs
push
hlt
sbb
lods
jo
cltd
mov
inc
aaa
cltd
inc
in
sbb
jnp
cmp
and
mov
mov
adc
lahf
pop
and
mov
cmp
fwait
cltd
mov
sbb
mov
jae
or
pop
xchg
push
sbb
or
add
jns
jnp
fwait
xor
or
stos
aad
sbb
cmp
lcall
insb
xchg
adc
inc
imul
push
xchg
mov
out
loopne
mov
repnz
sti
subb
stc
test
test
scas
sti
sub
divl
mov
cmc
pop
in
inc
andl
jge
in
or
test
test
push
das
lea
in
daa
cmp
adc
push
stos
mov
jmp
push
xor
jge
int
add
aaa
mov
mov
das
mov
mov
mov
ss
mov
add
xor
lods
fldt
fldl2t
aam
cmp
icebp
fwait
inc
je
fisubrl
leave
in
mov
repnz
cmp
jmp
xor
xlat
in
or
xor
pop
lcall
stc
mov
mov
lahf
in
negb
pushf
lea
ja
xor
lret
mov
mov
mov
cltd
fwait
jae
not
mov
lret
mov
jp
insb
stos
cmp
call
les
lret
lcall
ret
xchg
or
cli
sub
inc
sub
ret
repnz
in
movsb
leave
adc
fcmovnb
stos
popa
negb
popa
mov
sbb
fldln2
mov
test
nop
add
popa
in
std
aaa
push
popa
ficompl
jns
outsb
popa
aad
adc
popa
sub
and
mov
mov
popa
stos
mulb
lcall
outsb
or
mov
sub
inc
pop
aaa
mov
cmp
insl
daa
imul
fwait
mov
insl
lea
jmp
mulb
fcmovnb
negl
ret
pop
in
lds
lahf
sbb
es
outsl
sbb
mov
stos
sub
cmp
jbe
notl
cmp
stos
fimull
or
cmp
pop
ljmp
movsb
xor
add
adc
sub
xchg
sub
in
jnp
fwait
push
fstpt
cmp
mov
imulb
lods
mov
ja
inc
fimuls
add
push
mov
mov
aaa
leave
aaa
mov
and
cmp
add
test
flds
rol
pop
in
pop
and
cmp
imul
je
sub
imul
push
mov
add
push
dec
sbb
daa
test
lahf
lock
push
and
add
sti
mov
mov
cmp
sti
sbb
cmpsb
push
or
loope
scas
sub
cmp
dec
pop
xchg
or
jno
dec
sub
xchg
add
push
fnstenv
dec
xchg
dec
out
cmc
mov
fwait
xlat
or
nop
outsb
das
push
sti
rep
es
fimull
xor
mov
aad
xor
or
fisttps
inc
bound
dec
push
call
dec
test
stos
jne
sub
dec
repz
jecxz
jae
xor
jns
je
inc
insb
pop
mov
or
lds
cltd
mov
dec
fbstp
cwtl
mov
popa
fidivl
cmp
push
out
es
mov
testb
repz
or
dec
xor
lret
negb
out
cli
mov
and
ret
shr
lods
je
mov
mov
mov
lahf
popf
cmp
loop
mov
lods
iret
or
mov
cmp
cltd
ja
lahf
pop
stos
pop
pop
std
aaa
cltd
cltd
mov
popa
inc
pop
roll
cmc
fmul
cmp
icebp
out
push
jecxz
push
or
xor
xchg
mov
dec
adc
xchg
mov
mov
dec
lret
or
imul
imul
stos
dec
ret
mov
cmp
push
mov
xchg
or
orb
cmc
cmp
arpl
adc
sbb
orb
lea
mov
stos
or
pop
rcr
daa
movsl
repnz
xchg
lahf
jmp
or
mov
stc
push
pop
mov
lea
lods
out
int3
lahf
int
test
or
or
mov
faddl
out
lds
mov
xchg
mov
out
xorl
jnp
ljmp
adc
add
mov
jno
fsubrl
or
and
push
xchg
dec
pop
xor
push
int
push
add
jmp
orl
into
xor
xor
or
mov
pop
mov
mov
pop
pop
mov
cmp
rol
mov
icebp
fstps
std
fstpl
fwait
ret
mov
lret
lret
dec
add
dec
fidivl
mov
iret
sbb
iret
mov
das
xor
iret
call
loope
or
push
in
jmp
out
je
mov
rcr
push
xchg
js
mov
jmp
scas
lea
adc
and
sbb
jne
mov
mov
popf
out
out
int3
sti
mov
push
cli
mov
fwait
xchg
cmp
loope
push
sbb
jne
test
jge
cld
in
sbb
test
hlt
sbb
outsb
stos
es
stos
pop
movsl
mov
fwait
mov
cmp
in
movsl
mov
rcl
in
push
push
icebp
jae
and
adc
mov
adc
sbb
lahf
rolb
push
adc
mov
call
popf
cmpsl
pop
insl
mov
mov
rcrl
adc
mov
bswap
sub
repz
xor
jl
adc
int3
add
inc
lods
and
pop
lret
insb
cmc
movsl
mov
push
push
cmp
mov
pop
out
sbb
fisubrl
xchg
pop
test
push
mov
icebp
shlb
in
fiadds
cmp
mov
xor
test
pop
inc
cmp
xor
test
sub
add
xor
outsb
mov
lds
mov
cmpsb
dec
pop
cmp
push
aas
lock
incl
scas
dec
xlat
cmp
adc
nop
cmp
pop
rorl
cli
xor
jmp
loope
inc
cltd
xor
sti
test
stos
mov
jb
mov
mov
lods
push
sbb
cmp
test
mov
adc
negl
clc
inc
lahf
popa
mov
pop
and
scas
xchg
ret
mov
cmpsl
dec
nop
jne
jecxz
shrb
ds
insl
cmp
ret
loope
and
js
jo
push
imul
jecxz
push
hlt
shlb
lods
in
mov
adc
pop
scas
ja
jne
leave
mov
lods
les
enter
lahf
pop
sub
xchg
mov
mov
movsl
lock
cwtl
js
push
push
cmp
lahf
std
pop
xchg
mov
pop
int3
or
add
and
xor
lods
dec
and
out
or
inc
ret
leave
sub
push
stc
rorl
push
mov
rorl
inc
dec
jecxz
jl
insb
punpckhwd
dec
xchg
pop
test
mov
mov
sahf
pop
sti
leave
sbbb
push
push
mov
cmp
xchg
ds
dec
stos
in
and
fwait
sbb
mov
cmp
enter
imul
lods
loop
clc
mov
lahf
shll
je
jmp
daa
cwtl
ret
cmp
mov
jmp
adc
cltd
sbb
scas
mov
cmp
aam
or
clc
mov
or
pop
pop
cmp
inc
mov
fsts
iret
lcall
lret
pop
fs
xchg
hlt
mov
jb
lds
sti
xor
sbb
clc
mov
xchg
jnp
stos
fs
lret
mov
xlat
adc
nop
sbb
push
jo
jmp
insl
lock
inc
loop
pop
or
mov
int3
mov
cmp
xor
dec
mov
pop
popa
mov
imul
in
mov
pop
or
inc
adc
pop
mov
dec
mov
adc
neg
js
inc
pop
or
mov
dec
je
xchg
icebp
or
aas
xchg
add
jmp
test
or
push
lea
mov
scas
inc
pop
sbb
movsl
imul
push
lea
xlat
test
and
and
push
inc
mov
mov
insb
sub
mov
popf
out
pusha
mov
adc
cmpsb
enter
cmp
xchg
mov
jmp
lcall
add
rcr
lea
cmp
pushf
inc
ret
ja
cmp
movsb
aad
or
push
adc
shrl
arpl
out
jp
sub
dec
cld
mov
or
cmp
lock
xchg
int
cltd
inc
imul
mov
hlt
stos
mov
into
mov
call
aas
outsb
pop
icebp
pop
mov
jle
stos
imul
lea
div
in
call
cltd
test
cld
mov
ret
aas
mov
idivb
call
lahf
ss
loop,pn
out
mov
xchg
outsl
mov
nop
outsb
stos
sbb
cmp
mov
xlat
popf
inc
testb
es
mov
push
imull
lds
scas
lods
cmpsb
ficoml
dec
xchg
xchg
sbb
mov
xchg
cmp
lret
sub
xchg
repz
stos
pusha
mov
mov
add
push
mov
fwait
lock
in
mov
sub
mov
mov
adc
pushf
in
pop
pop
add
sar
orb
es
mov
mov
cmp
push
mov
mov
fstpt
nop
xorb
cmp
stos
dec
stos
movsb
mov
mov
sti
cltd
and
in
lock
xchg
mov
lds
fisubl
insl
fisttps
jae
sbb
dec
nop
pusha
mov
pop
nop
je
out
divb
adc
mov
adc
sbb
jne
mov
xlat
cmp
xor
ret
xor
or
dec
mov
sub
les
mov
push
movsb
inc
pop
ja
ret
push
and
fdivrs
push
aaa
out
fdivrl
gs
cmpsb
jns
mov
sbb
and
aad
sub
fs
adc
movsl
sub
pop
xor
hlt
setne
jbe
or
scas
iret
jecxz
pop
movsl
popf
dec
and
lahf
xchg
test
sbb
push
xchg
insl
mov
dec
shlb
or
dec
pop
icebp
pop
icebp
xor
std
fldt
int
stos
adc
rcrb
imul
jmp
ret
or
aad
xchg
nop
fidivl
js
add
sub
dec
inc
mov
fimull
or
in
pushf
rclb
pop
fsubs
sub
dec
inc
pop
mov
arpl
imul
stos
mov
mov
fwait
xchg
push
mov
pop
popf
leave
aas
dec
ljmp
mov
inc
mov
inc
dec
cmc
adc
sub
mov
mov
mov
aam
push
sti
movsb
repnz
mov
pop
mov
imul
mov
fsubrs
sbb
cmpsb
shl
jno
push
mov
sbb
mov
cmp
sub
and
je
in
xchg
adc
leave
xor
dec
or
xor
mov
aaa
cmc
adc
jnp
mov
cs
ficompl
divl
iret
adc
fwait
out
sbb
sbb
shlb
shlb
jg
cmc
lods
gs
add
sbb
test
adc
add
lds
jmp
xor
fwait
cmp
pop
cmp
lods
fldt
add
xchg
pop
mov
outsl
testl
das
add
cmp
movsb
sbbl
ret
cmpsl
jnp
pop
inc
cmp
sub
mov
sbb
sub
mov
aam
rorl
lahf
aaa
mov
test
aaa
outsl
pop
cmpsl
leave
mov
xor
mov
imul
mov
lahf
or
and
xor
xor
test
ljmp
jl
gs
lret
jno
push
cmp
cmc
adc
rorl
adc
fs
roll
sbb
jne
pop
das
mov
mov
cmp
scas
cmpsl
rcl
addr16
mov
ficompl
into
arpl
lods
or
repnz
faddl
fcmovnb
jle
jmp
std
inc
lret
into
test
pop
cld
in
shll
add
call
ret
xchg
mov
push
add
dec
or
les
adc
fsubrp
mov
pushaw
aas
fwait
sub
dec
dec
adc
sub
sbb
cmp
pop
and
stos
fstpt
dec
cwtl
dec
cmp
jmp
insl
negb
bound
je
xchg
add
movsl
cmp
xor
cltd
cmp
lds
adc
scas
aaa
push
stos
fnstenv
stos
xlat
mov
aaa
jmp
cmp
pop
jge
mov
lret
loop
inc
sub
movsb
mov
lret
lds
and
mov
push
mov
ss
je
xchg
or
xchg
movsb
test
mov
and
sbb
mov
mov
cmp
pusha
cmpsl
inc
fsts
cli
and
mov
idivb
pop
sti
hlt
lods
pop
add
sbb
nop
js
jg
cmp
mov
sub
jo
div
cmpsl
and
mov
pop
mov
xor
add
scas
xor
adc
out
enter
test
xchg
mov
mov
adc
cltd
sbb
lods
mov
mov
mov
mov
test
imul
dec
hlt
mov
mov
mov
lds
jns
add
enter
lods
mov
cs
adc
outsl
rorb
mov
mov
and
jg
dec
xchg
mov
or
ret
inc
sbb
js
push
gs
pop
mov
push
fmuls
dec
sub
and
imul
pop
cmp
test
add
jmp
imul
outsb
push
pop
movsl
jl
clc
iret
pop
das
mov
cltd
cmp
lea
adc
lret
push
mov
clc
hlt
xchg
adc
pop
clc
cmp
out
jmp
xchg
icebp
fwait
push
jmp
jb
out
pop
aad
mov
int
outsl
js
ja
pop
shr
lods
out
xor
sbb
mov
lret
sub
fmulp
cmp
lods
mov
pop
clc
in
mov
fcomps
pop
int3
sub
lds
mov
jno
cmp
push
xlat
xor
jne
mov
test
pop
call
mov
xor
push
pop
mov
pop
fwait
lods
fcomps
push
push
aam
cmp
inc
popa
scas
sub
jl
iret
xchg
lods
xor
jmp
out
loope
mov
andl
ror
lock
xor
cltd
pop
or
mov
sbb
out
mov
mov
das
out
cltd
cmp
jo
cmpsl
mov
addr16
cli
xchg
out
sbb
lret
sub
testb
cmp
xchg
cmp
sub
mov
mov
enter
push
loopne
jmp
ja
pop
cmpsl
js
mov
testb
scas
sub
mov
sub
mov
in
dec
scas
adc
cmp
add
fucomp
mov
inc
clc
sbb
fs
xor
fbstp
stos
out
repz
xchg
in
xorb
testb
sbb
push
fwait
pop
dec
into
mov
sbb
jns
mov
mov
outsb
ret
mov
js
negl
and
lret
and
stos
push
mov
int
rcll
push
negl
lea
jecxz
in
insb
fwait
xor
sti
cltd
xchg
pop
push
stos
lcall
imul
lods
fcomi
stc
mov
sub
mov
andb
cmp
cli
sbb
repnz
xchg
mov
scas
inc
jo
push
fstpt
clc
cmp
adc
ja
fwait
repnz
out
testl
mov
lcall
xor
add
mov
mov
mov
jecxz
imul
lcall
insb
lret
xor
insb
xor
cld
stos
xchg
cs
fwait
insl
sahf
std
pop
divb
sti
jne
sbb
test
mov
movsl
out
and
xlat
xor
into
xchg
lds
sbb
jge
or
push
mov
mov
negl
cltd
shr
pop
xor
dec
daa
testb
xor
mov
sub
push
sub
pop
push
fbld
sbb
sub
sub
loop
lods
pop
js
mov
inc
inc
push
std
mov
scas
add
adc
popa
cmp
ljmp
insb
lcall
mov
daa
sub
fs
push
rclb
fstpt
xor
mov
out
lock
sbb
cmp
mov
xor
adcb
popa
add
sub
daa
sbb
ret
jb
mov
and
mov
divb
xchg
push
scas
sbb
sbb
sub
into
xchg
xchg
inc
scas
pop
fwait
cs
mov
aaa
dec
ret
ja
aam
mul
pop
mov
and
cmc
popw
ja
lods
inc
or
mov
mov
cld
dec
out
adc
push
outsl
rol
sbb
jl
decl
lods
sbbl
pushf
pop
negl
xor
push
les
mov
ja
dec
jp
xchg
sti
es
daa
test
mov
sub
jp
xlat
ja
daa
xchg
and
aad
push
push
sbb
mov
and
xabort
mov
aaa
mov
pop
out
mov
add
shl
xor
addr16
mov
sbb
mov
leave
dec
xor
pushf
push
sbb
pushf
cmp
add
movsl
sahf
or
mov
ljmp
test
push
gs
icebp
sub
and
ret
cmp
xchg
dec
mov
xor
cltd
mov
or
enter
imul
dec
sub
sbb
jae
xchg
mov
lods
leave
jne
popa
test
inc
dec
jp
fimull
mov
mov
adc
sub
sub
push
cs
push
sbb
negl
outsb
pushf
ret
jg
cltd
or
mov
outsb
dec
lahf
jnp
push
call
mov
mov
lcall
sbb
xor
fisttpll
filds
insl
fstps
aam
pop
pushf
xchg
mov
jge
out
clc
and
fwait
mov
sub
dec
dec
outsl
add
leave
sti
leave
xchg
and
add
mov
sti
xor
nopl
cmc
cmp
sbb
test
stc
adc
jecxz
mov
test
dec
jmp
xlat
pop
lock
ret
testl
pop
mov
leave
outsb
mov
xor
push
jae
test
cmp
nop
sbb
and
mov
roll
ret
test
insl
mov
jns
mov
xlat
mov
jno
js
xchg
dec
or
mov
mov
int3
jae
subl
mov
shrb
mov
mov
sahf
mov
addr16
xchg
stos
add
std
ljmp
subb
sub
stc
in
jns
aad
xchg
jg
cmc
push
inc
cmc
sbb
adc
mov
jp
out
pop
xchg
and
push
iret
cmp
pop
and
push
adc
adc
addr16
xchg
mov
js
out
cmp
pop
subl
sub
ret
dec
stos
sub
out
mov
out
or
scas
movsb
or
or
mov
cmpb
lret
xchg
mov
jmp
data16
sti
pop
ret
sub
imul
loope
mov
mov
mov
movsl
inc
sub
or
mov
mov
fisubrs
adc
xor
sub
fwait
scas
sub
jmp
lret
mov
fwait
sti
js
sub
pop
push
inc
cmp
iret
fmull
je
test
xchg
xchg
or
sarl
jbe
lea
enter
mov
outsb
repz
scas
mov
push
outsl
into
int3
fnstcw
test
push
lods
cmpsl
stos
call
sub
push
sahf
xor
sub
jl
cltd
lret
lcall
adc
xor
push
out
cmp
pop
push
lods
stos
xchg
cs
push
ja
cld
cmp
paddsb
sti
pop
xor
fbstp
jmp
pop
xchg
mov
adc
pop
push
xorl
mov
xor
sbb
xor
jle
mov
sub
cmp
loope
cmp
fildl
negl
or
or
test
xchg
sub
fsubr
lods
inc
cmpsl
or
movsb
mov
push
jmp
mov
lds
jg
pop
call
ret
stos
push
in
iret
outsl
aam
push
stos
jmp
adc
fwait
dec
mov
scas
mov
or
lea
ljmp
frstor
pushf
sub
pop
loopne
add
mov
adc
clc
dec
add
mov
scas
lds
cltd
ljmp
shl
inc
sub
lods
dec
adc
ss
adc
stos
dec
xor
push
cli
mov
cli
lret
pop
add
cmpsl
add
xor
loope
or
dec
cwtl
aaa
loopne
sub
enter
shlb
adc
mov
daa
lods
inc
jns
arpl
or
pop
pushf
lahf
sbb
mov
mov
push
fwait
jno
mov
lds
jae
test
jns
cmp
sbbb
ljmp
mov
call
sub
imul
nop
mov
pushf
enter
hlt
xor
fsubrp
xor
mov
cmp
xor
lcall
dec
mov
fstps
fisubrl
sarl
jmp
mov
cmp
xchg
stc
les
jae
sub
jns
test
pop
fistpl
sarl
xor
lret
cmc
jmp
mov
stos
jbe
cmp
je
or
je
mov
pop
lcall
dec
repnz
repnz
xchg
sbb
jb
push
mov
mov
sti
push
cmp
or
sub
mov
cmp
mov
mov
fmuls
negl
js
mov
push
faddp
jmp
fwait
ja
mov
xchg
jns
xor
lahf
mov
and
loopne
les
pop
cltd
cmc
add
pop
inc
out
xor
jmp
fwait
nop
sub
ja
mov
pop
mov
fwait
cmp
cmp
lret
and
les
cmp
xor
into
pop
rorl
adc
jnp
mov
push
mov
pop
or
and
fdivrl
cmpsb
dec
adc
push
in
not
fdivrl
inc
mov
cmp
adc
xchg
test
outsl
addr16
mov
cmp
xor
push
cwtl
fcmovnu
repnz
test
mov
fsubrs
push
cmp
jo
stos
xchg
inc
lds
mov
mov
test
fldt
dec
out
xor
imul
mov
sub
jb
rol
cmp
dec
insb
mov
mov
repz
lcall
xchg
mov
cli
sub
sbb
cmpsl
mov
imul
negl
pop
pop
xor
xorb
sub
jb
out
iret
dec
dec
arpl
lods
adc
in
fucomip
loopne
push
bound
mov
lods
pop
xchg
fdiv
mov
ds
ficoml
cmp
push
lret
xchg
nop
pop
aas
cwtl
cmp
repz
loopne
xor
dec
mov
jnp
dec
cmp
cmp
loopne
jns
xlat
xchg
into
pop
jl
aas
std
mov
pop
push
stc
add
gs
xchg
jle
push
push
movl
mov
pusha
pushf
pushl
lea
jmp
xchg
call
sub
and
or
sbb
ja
je
imul
test
sub
insb
pop
push
addl
loop
mov
call
mov
or
xor
iret
push
inc
mov
adc
push
loopne
cmp
mov
or
fimull
xchg
repnz
mov
add
mov
add
add
add
add
pop
add
add
add
add
add
ficompl
add
add
add
add
add
jmp
pop
add
add
add
add
add
fistpl
add
cmc
pop
add
fwait
and
adc
pop
add
cmc
pop
add
add
pop
add
cmc
pop
add
and
and
pop
add
cmc
pop
add
fwait
and
sub
pop
add
cmc
pop
add
fistpl
add
mov
movsb
insb
cmp
out
dec
push
pop
fbstp
and
cmpsl
out
fbstp
push
popa
cmc
cmp
fbstp
dec
jmp
aam
clc
movsl
sub
dec
or
lret
xchg
loope
ja
push
dec
ret
dec
xchg
in
gs
jns
popf
inc
jae
mov
jmp
cmc
cwtl
mov
xlat
sub
dec
mov
ss
sub
jnp
in
imul
pop
pop
xor
fstpt
xchg
mov
sbb
pop
in
jecxz
cmp
jge
xor
repnz
push
aam
or
sub
push
loop
lcall
jle
lahf
adc
insl
test
xchg
clc
xchg
fs
aas
xor
fdivs
sbb
repz
aam
lea
pushf
in
mov
popf
outsl
mov
inc
sahf
sbb
fnsave
dec
lock
jns
dec
pop
mov
ja
fisttpl
or
andb
aad
cmp
hlt
cld
sbb
pop
je
xchg
repnz
mov
lea
je
pusha
mov
cwtl
pushf
mov
pushf
call
pusha
pushf
push
rep
jmp
les
adc
sbb
add
movsl
xchg
insl
inc
mov
cmp
add
icebp
jns
clc
push
dec
lods
enter
decl
cmp
mov
sub
and
incl
push
sbb
and
mov
inc
dec
imul
int
jmp
xor
fs
jae
jmp
fsubs
dec
les
orb
imul
fwait
add
nop
sbbb
popf
test
es
in
insb
test
call
je
xchg
repnz
pushl
movl
pusha
call
cmpsb
adc
fnstsw
mov
cmpsb
push
xor
mov
mov
dec
and
out
or
adc
aaa
pop
push
rcrl
sub
ja
and
xor
js
insb
dec
or
lahf
in
xchg
stc
fdivrp
jp
sbb
enter
repnz
mov
cmpsb
jbe
fists
call
push
clc
mov
repnz
mov
test
push
xlat
push
dec
pop
pushf
shl
cmp
jns
call
daa
pop
dec
cs
mov
insb
xchg
pop
dec
into
lar
cs
shrb
fwait
push
add
call
jno
push
jmp
pusha
pusha
push
dec
jmp
pop
insb
test
add
jle
data16
mov
xchg
gs
setb
push
dec
imul
rcll
inc
dec
arpl
stc
rcrl
cmpsl
push
imul
jmp
stos
mov
rcll
leave
sub
in
or
cmp
outsb
mov
mov
mov
cld
xchg
fsub
stc
mov
movsb
scas
cmp
push
mov
aad
repnz
jl
jns
mov
xchg
data16
push
js
mov
jo
jo
xchg
inc
cmp
imul
mov
mov
in
aas
ficoml
push
mov
in
push
or
loopne
imul
pop
movsl
int3
ja
xlat
std
cld
push
in
mov
push
sub
xchg
repnz
enter
int
leave
jmp
stc
cmp
pusha
push
mov
mov
lea
jne
call
nop
pop
jl
xlat
int
add
jo
sar
push
and
in
fdivs
adc
or
ljmp
add
jle
xchg
fisubrs
arpl
push
push
jp
aad
mov
pop
mov
stos
out
inc
cli
cmp
ljmp
jge
jmp
push
jl
fstps
inc
jl
fucomip
imul
pop
cmpsb
scas
jecxz
xchg
xchg
sbb
and
jmp
xchg
push
mov
lret
std
sbb
dec
ja
or
sub
cmp
pop
mov
inc
in
loop
loop
adc
test
jno
pop
mov
ret
les
add
mov
inc
push
push
dec
and
mov
sub
jns
scas
popf
jno
sub
je
mov
cmpsl
inc
jmp
out
mov
jg
pop
clc
pop
aas
xor
or
inc
sub
mov
sub
in
imul
sub
cmp
daa
and
push
nop
dec
into
test
ret
pop
sub
jmp
cmpsl
loopne
xchg
xchg
cmpsb
cmp
out
popf
jo
insl
xchg
lea
jnp
mov
pop
gs
mov
pusha
sbb
or
int3
xchg
mov
pusha
mov
inc
mov
mov
mov
lea
pusha
pusha
jmp
pusha
pusha
lea
call
jmp
bt
test
mov
btc
bsr
jmp
imul
cmp
fildll
inc
repz
pop
imul
scas
jbe
and
bound
inc
aam
cmpl
testl
jmp
cli
sbb
xchg
push
push
inc
loop
enter
sahf
xchg
frstor
loopne
xor
shll
arpl
leave
inc
imul
pop
pop
mov
jle
outsb
rcrb
add
call
lret
aad
call
sbb
test
fistps
insl
inc
add
repnz
rcr
xchg
mov
jmp
cli
adc
cmp
dec
repz
add
pop
mov
mov
iret
adc
inc
imul
out
push
cmpb
imul
jno
loope
add
je
inc
imul
jae
add
pop
fwait
jno
cld
mov
iret
xlat
ret
mov
xchg
xchg
scas
insb
xchg
imul
jle
sbb
mov
push
mov
incl
inc
ljmp
and
sbb
pushl
dec
push
dec
test
sahf
push
mov
lcall
add
jb
jnp
scas
arpl
scas
pop
iret
lret
inc
insl
xchg
repnz
push
mov
and
xchg
sub
adc
push
lds
cmp
enter
popa
or
or
jl
push
dec
or
push
push
adc
pushf
or
sub
cmp
cmc
adc
inc
repnz
subl
add
xchg
dec
xchg
repnz
sub
aaa
inc
cmp
xchg
gs
dec
jp
jle
cmp
mov
mov
ret
dec
test
divl
cmpsl
mov
dec
shlb
out
lcall
sub
adc
xor
mov
cs
ret
lahf
popa
mov
push
mov
sahf
ret
xchg
repnz
and
xor
xorb
xor
fcmovu
lcall
add
adc
repz
push
or
jno
xchg
aaa
jbe
mov
jns
icebp
imul
insb
mov
mov
xchg
jnp
cmp
aas
adc
pop
xchg
xchg
repnz
jge
loopne
clc
fstl
out
outsb
sub
testb
dec
mov
neg
mov
add
jbe
push
not
push
dec
dec
cltd
or
mov
xchg
outsl
jns,pn
fxch
xor
sbb
nop
divb
dec
pop
outsb
mov
loope
add
sub
lea
repnz
mov
add
stos
push
mov
test
mov
dec
pop
xor
xchg
add
enter
mov
dec
adcb
jecxz
adc
sub
xchg
add
test
mov
not
add
lods
hlt
sbb
and
add
cmp
int3
test
pop
fidivs
test
add
pushl
add
and
into
faddl
xchg
add
sahf
push
mov
out
int
xchg
add
jne
enter
add
jle
test
cmp
or
dec
hlt
or
faddl
test
add
adc
add
inc
lods
sahf
hlt
or
lret
add
pop
cmp
and
les
addb
loope
movsb
aas
cmc
ret
addb
mov
out
xor
xchg
aaa
mov
add
add
xchg
mov
test
inc
insl
hlt
xor
xchg
add
mov
xor
mov
aam
fadds
xchg
add
movsb
mov
xchg
into
and
xchg
add
mulb
into
xchg
add
retw
sbb
add
cmp
xlat
es
xor
iret
add
cwtl
in
adc
add
push
mov
mov
add
jmp
lret
add
hlt
dec
fmul
add
jmp
push
enter
add
cld
inc
stos
mov
adc
add
lcall
and
mov
and
negb
push
mov
add
pop
jo
jne
enter
add
add
divl
cmc
mov
aaa
add
mov
xor
lret
jne,pn
into
xor
xchg
add
and
xchg
test
sarb
addb
dec
dec
gs
add
cmp
xlat
ret
mov
fcmovbe
push
mov
add
fmull
xor
hlt
fiaddl
mov
and
jle
mov
adc
add
aaa
sbb
cmc
add
sbb
add
xor
es
dec
pop
xchg
add
mov
jns
pop
outsb
stos
jbe
sbb
jecxz
mov
dec
lahf
ret
pop
mov
mov
xor
std
push
imul
cmp
lock
outsl
and
xor
mov
pop
in
iret
mov
add
cwtl
cmpsb
lret
push
xorb
les
mov
jmp
mov
jmp
jmp
push
fwait
lods
scas
xchg
push
sub
xchg
mov
push
mov
fidivs
cmp
jmp
pop
pop
out
jg
xchg
outsb
cmp
aaa
jle
loopne
or
mov
imul
cmpsb
inc
inc
pop
mov
sub
push
lahf
push
loopne
xor
call
xchg
daa
mov
pop
xchg
add
ret
sbb
pop
filds
mov
or
pop
and
aas
shl
pop
sbb
lcall
int
pop
sub
jge
jge
or
xor
sub
lock
or
or
sets
pushf
pushl
pusha
mov
push
pushf
mov
pusha
pushf
movb
push
pushl
ret
aaa
andl
testb
cwtl
add
mov
pop
mov
or
sbb
fwait
decb
pop
xchg
pop
lea
lock
push
cli
xor
mov
arpl
lahf
push
out
shlb
sar
mov
imul
fnstsw
sub
cmpsl
dec
or
imul
push
fdivl
in
vcmpps
imul
ret
dec
std
push
in
cmpsl
dec
inc
je
ja
out
add
push
mov
sub
hlt
add
pop
sbb
add
ret
xor
pop
popa
jb
lea
cwtl
lods
adc
lret
std
aaa
js
or
stos
cmp
or
or
fs
dec
into
insl
xor
inc
lcall
in
enter
lahf
cmp
out
pop
lret
inc
ret
fisubrl
xchg
repnz
pop
cmp
ja
inc
xchg
cmc
xchg
insb
cwtl
xchg
mov
lods
xchg
sbb
sub
mov
jge
mov
mov
xchg
xor
ss
int3
xor
and
lcall
cvtdq2ps
cltd
dec
cmp
jle
ss
cmp
scas
sbb
sub
mov
push
adc
or
dec
xor
mov
sub
pop
shl
int3
imul
arpl
xchg
jp
mov
sub
stc
cmp
pushl
popl
call
jmp
pushf
lea
je
call
bound
xlat
adc
outsb
mov
xor
lret
repz
xor
pop
or
sahf
add
addb
mov
das
xorl
jns
stos
xor
cmp
out
and
push
decl
or
int
ss
ds
stos
outsb
adc
inc
jge
jnp
gs
scas
jnp
inc
xor
mov
cmp
stc
or
insl
inc
push
ja
pop
cli
je
adc
cmp
sbb
cld
outsb
aas
fwait
mov
gs
jnp
gs
xchg
jno
js
pop
pushf
inc
fldenv
push
push
xor
mov
js
je
or
outsl
jmp
sub
out
iret
shrb
pop
fdivl
pop
mov
call
ljmp
push
xchg
in
jle
mov
addb
mov
push
cwtl
push
pushf
ja
cmc
push
inc
icebp
lock
es
add
shll
mov
cmp
adc
pop
fwait
mov
push
in
fnstcw
jp
jbe
outsl
scas
test
mov
andb
int
sarl
daa
cmc
jne
pop
imull
push
mov
imul
cmp
int
pop
fnstsw
xchg
jno
add
in
and
in
push
out
sbb
stos
xchg
repnz
test
in
inc
xchg
outsb
xchg
add
and
mov
adc
mov
out
testb
insl
int
pop
and
lods
xor
int3
pop
push
das
ja
inc
mov
decb
lret
sti
hlt
out
in
xchg
repnz
cmp
mov
sub
jmp
pop
lods
scas
pop
scas
pop
mov
daa
mov
xor
mov
repnz
pop
mov
lcall
jb
addr16
pop
inc
dec
or
cmp
sbb
fstpt
and
xchg
jnp
jbe
cs
fadds
fidivs
mov
jle
and
or
pop
pop
pop
mov
imul
dec
cmp
movsb
pop
enter
clc
cwtl
cmp
insb
in
rolb
gs
nop
sub
pusha
pushf
mov
sahf
mov
mov
cmp
xor
mov
sbb
lds
xchg
push
std
pop
scas
inc
mov
outsl
cli
mov
pop
inc
lcall
cmp
in
call
js
inc
sub
scas
fsubs
scas
cmp
inc
cs
sub
sbb
loopne
cmp
pop
or
sub
adcl
and
call
insb
cmpl
js
adc
call
lods
imul
jno
es
add
ljmp
mov
je
xor
jno
and
and
mov
pop
adc
push
jno
jne
insl
or
cmp
adc
cmp
push
cmp
pop
repnz
mov
pop
mov
mov
cmp
iret
mov
enter
dec
push
mov
mov
pop
xor
call
push
pop
push
cs
jnp
fwait
jmp
out
jb
fs
push
mov
mov
loope
lret
insb
sbb
adc
xchg
push
sbb
or
sub
stos
mov
dec
sub
iret
add
fcoms
push
and
outsl
in
imul
mov
xchg
add
mov
push
repz
push
hlt
fbstp
cmp
pop
add
jecxz
xchg
imul
js
push
aaa
mov
and
aaa
push
mov
bnd
inc
repnz
jne
xchg
aam
push
xorl
js
pushf
mov
sub
aaa
fistl
jnp
imul
xchg
lock
aam
dec
inc
mov
test
and
lods
cmpsb
mov
dec
ss
sbb
outsl
xor
stos
push
cmp
push
mov
push
mov
es
sarb
jns
icebp
test
sub
add
jno
hlt
sbb
repz
sti
insl
sub
add
fisttpl
sbb
or
mov
ljmp
xchg
ja
int3
aas
push
push
out
imul
sbb
ja
mov
mov
adcb
and
jnp
mov
mov
pusha
stc
pop
pop
xor
adc
adc
lds
or
cmp
push
mov
push
enter
clc
push
aas
in
cmp
jns
sbb
mov
and
insb
pop
divb
cmpsl
jl
ds
imul
hlt
fistpl
cmp
pop
xchg
sbb
xchg
repnz
lods
aas
aad
or
lea
jne
lea
movsbw
movzbw
mov
pusha
pushl
movw
mov
lea
jmp
movsb
add
sbb
add
lret
daa
xchg
push
mov
jb
mov
lods
or
fists
jbe
dec
adc
rcll
add
inc
jns
sahf
lods
sbb
mov
and
icebp
mov
pop
call
lock
xchg
repnz
inc
test
and
sahf
sub
xchg
mov
mov
mov
sbb
bound
pop
mov
int3
push
dec
pushf
xchg
cltd
dec
mov
cld
adc
jecxz
sahf
sub
push
sub
popf
pop
das
lret
mov
test
jl
rcr
test
vpcmpeqb
pop
xchg
repnz
mov
not
lea
pushl
pusha
push
push
xchg
not
not
mov
not
movl
movsbw
lahf
lea
movb
call
bt
push
btc
rcl
push
bsr
push
btc
call
push
jmp
test
jmp
add
dec
gs
popa
addr16
outsl
js
add
pusha
jmp
mov
call
cmp
call
jmp
add
dec
outsl
popa
fs
imul
add
insl
adc
add
adc
sub
lock
pop
je
mov
gs
cmpsb
or
adc
pop
cmp
jae
aaa
popf
cmp
mov
pusha
lock
rcrl
test
fcmovb
mov
into
sub
mov
mov
mov
stos
mov
std
dec
xchg
pushf
xor
adc
and
or
xchg
cld
xchg
cltd
in
xor
mov
repz
mov
dec
inc
test
sub
popa
cmc
xor
adc
or
cmp
insl
ffree
mov
roll
sub
inc
dec
repnz
lret
gs
push
jo
dec
pop
xchg
repnz
enter
add
push
xchg
dec
fmuls
aas
xor
adc
or
jmp
in
pop
cmp
jp
xchg
jns
enter
sub
mov
jp
sub
repnz
test
shr
jno
sub
xchg
repnz
dec
rcrl
ret
push
push
add
jge
cltd
jge
pushf
inc
ljmp
inc
scas
hlt
test
sub
popa
add
test
lods
xor
mov
sbb
lret
xor
lods
push
or
fmull
loop
sahf
stos
mov
sahf
repnz
sub
mov
das
jae
aam
jne
dec
jp
out
enter
outsl
mov
and
or
or
jne
ds
sub
ljmp
add
cld
movsl
pop
jge
iret
inc
aaa
cmp
adc
jnp
sbb
xchg
repnz
dec
daa
sbb
jne
dec
imul
adc
xrelease
or
movsl
pop
jl
xchg
pop
or
adc
daa
and
imul
test
xor
push
sub
in
add
pop
lock
add
das
inc
out
mov
adc
scas
pop
dec
clc
test
jp
repnz
sbb
mov
mov
cwtl
adc
adc
add
add
cmpsb
int
dec
out
xchg
pop
mov
sbb
sahf
jne
pop
ja
adc
push
xchg
jmp
es
sar
ret
jbe
fildl
pop
jnp
mov
xchg
repnz
or
adc
cmpl
pop
pusha
mov
bswap
pop
pusha
pushl
ret
pushl
rep
bswap
movsbw
movzbw
mov
pushf
lea
jmp
mov
pop
push
xchg
movsl
dec
bound
ds
sahf
stos
aaa
cli
xor
sbb
mov
aas
push
push
pop
subl
xchg
shll
pop
adc
arpl
sbb
mov
ret
or
sub
sbb
popl
sbb
inc
and
mov
outsb
orb
sub
inc
adc
pusha
out
mov
dec
xchg
repnz
mov
xchg
clc
lret
inc
aam
xor
sub
dec
jbe
mov
sub
sbb
dec
push
mov
xchg
push
stos
xlat
les
negb
jecxz
mov
push
clc
mov
sub
jae
mov
jbe
jo
add
jnp
dec
and
fsubl
lcall
jp
ret
add
jp
popa
push
scas
adc
mov
ljmp
ja
arpl
out
pusha
aad
xor
je
je
adc
insb
xchg
repnz
cld
dec
jmp
out
jbe,pt
mov
cs
or
push
ret
sbb
mov
fmulp
dec
or
xlat
loop
dec
cmp
jo
lods
shrl
xchg
sub
les
ja
jg
cmp
rolb
push
ficomps
cltd
outsb
xchg
sbb
movsl
sub
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
rorb
shld
push
bts
test
push
shr
or
setl
push
rcl
push
rol
jmp
xor
add
bt
test
pushf
mov
or
call
jmp
add
movw
lea
jmp
pushl
pusha
test
or
pushf
pushl
jmp
cmp
pop
cmpsl
cmp
sar
sbb
mov
mov
or
imul
add
or
pop
xchg
cli
push
dec
sub
ret
ja
ret
mov
sub
xchg
hlt
pop
xchg
insb
jmp
cli
lret
outsl
jmp
pop
mov
aaa
or
xchg
mov
cmc
xchg
repnz
cmp
cmp
adc
add
push
lea
je
mov
mov
mov
lahf
lea
bswap
lea
call
pop
mov
movsb
fs
and
push
icebp
popa
dec
fnstcw
dec
add
fs
xor
inc
cmp
lcall
out
pushf
sub
repz
xchg
mov
pop
shlb
xchg
sbb
xchg
andl
jno
movq
pop
mov
xor
mov
dec
jno
icebp
pop
and
lods
mov
mov
inc
cld
std
rolb
cmp
jo
inc
mov
xchg
repnz
dec
pop
or
push
pushl
call
push
push
xchg
sahf
jp
cwtl
movsb
xor
dec
les
jo
adc
nop
add
inc
or
cld
mov
push
xor
insb
push
dec
xchg
insb
pushf
cmc
test
jns
adc
negb
std
loop
xor
repnz
lea
fadd
mov
inc
pop
sti
sti
xchg
adc
pop
xchg
repnz
jmp
lahf
ret
add
cmp
add
and
dec
mov
loop
cmc
pop
rorl
fldl
jns
fs
xor
call
and
int
sub
test
popa
pop
push
into
and
push
stos
ds
loop
aas
fbld
das
lahf
out
repz
dec
int
aaa
decl
dec
push
bts
pop
and
or
jnp
sarb
cli
lret
push
xchg
push
push
or
mov
popl
jle
mov
iret
xor
bound
pop
or
push
sbb
in
aas
fisttps
pop
test
lahf
loopne
outsb
out
ljmp
xchg
cmp
sbb
scas
sbbl
xchg
push
adc
push
xchg
dec
pop
pop
fs
repnz
and
sub
movsb
xchg
inc
xchg
jp
inc
jg
ja
mov
lea
push
ret
mov
mov
jg
pop
sub
add
cli
adc
and
xchg
test
jg
sub
in
lret
mov
jbe
in
mov
imul
xor
xlat
aad
mov
cwtl
add
push
scas
ds
jmp
mov
mov
jmp
hlt
les
in
pop
pop
sbb
mov
push
mov
dec
packssdw
out
jle
mov
sub
arpl
dec
cmp
in
dec
pusha
pop
mov
xchg
pop
pushf
adc
pop
xchg
repnz
and
int
adc
arpl
mov
fwait
xlat
push
cmpsb
test
or
lahf
push
aas
or
push
inc
sub
sub
adc
inc
orl
mov
cmp
or
scas
dec
aam
lret
daa
mov
xchg
repnz
mov
and
call
jmp
popf
imul
add
cli
adc
and
push
rcr
mov
pop
or
mov
jg
dec
or
xchg
xchg
pop
mov
mov
sub
ret
out
and
xor
cs
inc
adc
mov
shr
xor
or
fs
ja
pushf
pushl
inc
inc
inc
rcr
xchg
rcr
mov
cmp
mov
pushf
mov
shld
shr
mov
pusha
bt
cmc
stc
sub
call
loope
call
sbb
xor
xorb
cld
pop
add
or
stos
pop
pop
inc
mov
adc
sar
loop
jns
mov
xlat
sub
imul
mov
mov
test
fmul
xlat
test
mov
jo
lock
cmpsb
pusha
push
movl
push
pushf
jmp
mov
stos
adc
negb
sbb
push
inc
pop
cli
lret
dec
cs
sbb
mov
cmp
and
jb
mov
out
xorb
lret
ja
sti
ja
pop
das
lret
imul
repnz
xchg
arpl
imul
out
cmp
mov
mov
inc
ror
xchg
aaa
into
sub
imul
outsl
mov
scas
nop
or
pop
es
dec
push
test
jge
insb
push
jbe
push
ja
push
lock
add
pop
inc
inc
test
dec
jno
imul
jecxz
lret
or
js
mov
repz
adc
xlat
pop
lahf
out
dec
xchg
repnz
pop
call
pushf
inc
pushf
adc
movb
pusha
push
mov
pushl
ret
movl
pushl
pushf
pusha
lea
jmp
pushf
pushf
movw
jmp
cmp
pushf
pushf
lea
jb
stc
cmp
push
pusha
lea
ja
pushf
stc
add
sub
cmp
bt
jmp
insb
push
push
push
pop
adc
bound
push
rorb
popf
loop
into
lea
jbe
inc
inc
subb
pop
jno
xchg
movsb
std
pop
xchg
rcll
in
xor
jae
outsb
push
cmpsb
and
mov
sbb
mov
mov
sbb
and
fistps
subb
lcall
xchg
clc
shrl
mov
pop
pop
fisttpll
es
pop
hlt
or
dec
out
pop
xchg
jne
fmull
and
pop
push
sub
dec
into
mov
stos
iret
mov
mov
xchg
push
xor
xor
xchg
sahf
out
popf
add
cmp
lds
ret
or
pop
lea
out
push
lcall
jb
test
add
int
ret
repnz
int
movsb
scas
in
neg
adc
into
pop
inc
push
sub
imulb
inc
push
shrl
sbb
xchg
sub
push
push
cld
jo
add
out
jl
mov
repz
test
outsl
subl
cmp
lcall
imul
cmp
push
add
jmp
shrb
push
xchg
loop
clc
fiaddl
xchg
push
ret
xor
pop
in
mov
xchg
in
out
inc
popa
jno
add
cmp
add
insl
sub
loope
push
mov
imul
dec
fdivrl
cmp
mov
mov
mov
push
dec
dec
jp
hlt
lahf
outsl
push
jnp
jns
fimull
xchg
push
std
mov
sahf
cmp
push
repz
mov
or
iret
aad
repnz
sbb
call
push
push
inc
push
xor
cs
insb
add
add
add
xor
mov
bound
inc
jb
cli
addr16
pop
pop
or
xor
hlt
ret
fsubp
push
dec
test
mov
inc
or
adc
or
clc
loope
adc
repz
std
ret
setle
out
mov
xchg
repnz
cmp
push
arpl
gs
scas
shll
outsl
pop
jg
stos
cli
sub
orl
fsubrs
mov
sbb
sub
pop
jmp
cmp
jge
fwait
mov
aas
fildll
and
sahf
cmp
jne
xchg
xor
test
add
insb
sub
fmul
scas
xchg
repnz
fs
jne
bswap
mov
pusha
pushf
pusha
pushl
lea
jmp
jmp
mov
lahf
in
mov
xchg
repnz
arpl
inc
pop
int
test
mov
ficompl
enter
lret
ja
lret
jp
cmp
repz
jl
jle
cmp
in
and
pusha
jb,pn
adc
xchg
outsb
bound
jl
jecxz
out
mov
leave
add
mov
inc
mov
xchg
repnz
cmc
repnz
call
mov
inc
pushf
push
pushf
lea
jmp
lods
sti
lods
std
adc
repz
cmovae
addr16
subl
mov
decb
jp
push
mov
push
dec
adc
aaa
mov
je
jns
sahf
mov
inc
jp
lea
mull
je
adc
adc
push
fs
xchg
repnz
pop
sub
xor
fisubl
mov
xor
push
sub
mov
leave
push
jns
xor
and
pop
out
add
push
and
or
ficomps
xor
and
ret
subl
push
incb
jnp
in
imul
pop
cmp
xor
mov
adc
mov
jmp
dec
clc
cmp
test
xor
call
add
test
es
loopne
mov
and
xchg
add
mov
or
fstpl
sarb
cwtl
cmpsb
inc
pop
sub
cmc
ret
dec
pushf
jge
lahf
das
std
mov
stos
jb
pop
xchg
xchg
mov
pop
xchg
lahf
ret
cmp
test
sti
enter
inc
lea
push
lea
call
push
push
jmp
cli
xchg
pop
lock
and
cmp
mov
jb
inc
out
repnz
hlt
loop
mov
mov
std
adc
jae
jl
dec
cmc
mov
insl
adc
call
adc
nop
ljmp
ficompl
fcomip
pusha
xor
popl
fnstenv
es
push
icebp
lret
lahf
mov
pushf
aas
adc
mov
sub
mov
jecxz
loopne
xchg
pop
sub
mov
xchg
inc
int3
sbb
mov
cmp
icebp
ljmp
or
add
cmp
cmp
pusha
movw
push
mov
lea
jb
bt
cmp
pushf
pusha
push
pushf
lea
jae
inc
rcl
shl
mov
mov
test
shld
rcl
bts
mov
not
shl
pusha
mov
mov
jmp
call
lea
je
jmp
pushl
pushl
movl
mov
movl
movb
pusha
pusha
movb
lea
jmp
dec
ja
mov
stc
pop
shl
lods
dec
push
xor
push
dec
jns
ljmp
sbb
aam
cmpsl
mov
mov
lret
mov
xor
sbb
pop
mov
and
cmp
inc
ror
gs
out
xchg
xor
or
mov
fildll
mov
mov
fwait
sbb
lods
nop
call
xchg
repnz
push
pusha
pushf
inc
call
movl
lea
pusha
lea
push
jmp
gs
test
and
xchg
aas
inc
jecxz
aaa
pop
fbld
bound
das
xchg
or
xchg
movsl
nop
mov
jo
dec
jmp
jge
clc
jmp
int
addr16
or
pop
xor
sub
inc
out
inc
push
aas
pop
cmpsl
out
aas
mov
xchg
repnz
sbb
xchg
adc
sub
push
int
js
and
pop
push
movl
inc
scas
stos
push
dec
sar
out
popa
push
and
push
cmp
xlat
sub
cmp
fisttps
xor
sbb
jb
dec
inc
aad
cmp
push
sbb
adc
cmpsb
xchg
repnz
inc
or
cmpsl
aas
jl,pn
out
dec
mov
sbb
subl
sub
sub
or
outsl
mov
xor
sbb
inc
inc
pop
jns
mov
shll
fnstcw
jb
ret
jae
xchg
sbb
jae
into
fisttpl
cmpsl
jmp
xchg
repnz
mov
and
call
pusha
sub
mov
pusha
mov
lea
jne
pusha
lea
call
push
pushf
mov
pushl
lea
jmp
movl
jmp
pushf
movl
jmp
orb
adc
sub
sbb
sbb
cs
movsb
inc
ja
push
lret
xor
dec
push
fstl
sbb
add
movd
stos
gs
addr16
ds
movsl
inc
test
mov
imul
xor
mov
push
cmp
imul
jbe
fldenv
rcrl
insl
xchg
imul
add
xor
shll
dec
clc
mov
add
insb
push
mov
orb
fsub
cmp
jae
out
push
push
pop
lcall
outsb
sbb
aad
add
add
mov
push
inc
cwtl
movzbl
pop
sub
popa
cmpsl
lahf
push
imul
cld
stc
xor
xor
shl
push
les
lret
sahf
mov
xchg
xchg
mov
int3
mov
jp
movsb
gs
jmp
sahf
mov
fistpl
cmp
cmc
pop
push
stos
dec
or
cwtl
jge
mov
or
mov
mov
movsl
dec
or
movd
call
clc
xor
rcrl
out
jle
daa
sub
sub
push
insl
inc
stc
sbb
sub
cmp
add
push
sbb
sub
jnp
lea
jae
stc
clc
call
mov
or
cwtl
out
and
fsubrp
sbb
push
push
mov
xchg
push
jg
xor
psubusw
mov
or
aaa
sub
repz
test
push
arpl
pop
pop
mov
stos
in
sub
mov
fisubl
pushl
call
push
cmc
test
and
bt
test
jmp
push
rcl
mov
stc
jmp
call
cmc
call
pusha
jge
xchg
lods
shl
push
leave
sub
pop
test
imull
and
sbbb
ljmp
neg
and
js
int3
and
or
out
mov
inc
ret
xchg
xor
xchg
repnz
adc
ja
push
pushf
movl
push
pusha
mov
jmp
cmpl
xchg
popf
push
loop
aaa
and
xchg
mov
stos
jle
add
mov
iret
add
and
jmp
aad
dec
sbb
xor
jp
pop
sub
or
test
test
lcall
iret
push
jmp
push
sti
jo
fisubrs
inc
mov
sub
sbbl
fistps
setp
stos
xchg
repnz
xchg
test
inc
inc
pop
xchg
jecxz
ja
stos
pop
divl
sbb
inc
cmp
push
mov
jns
pop
and
pop
jb
cmpsb
sahf
fidivl
ljmp
push
xlat
cmpsb
xorl
jae
mov
test
xchg
or
mov
pop
dec
shrl
jo
nop
sub
pusha
int
fwait
add
fbstp
aad
enter
xchg
repnz
shlb
ret
stos
setl
jmp
pushf
movl
push
movb
pushf
mov
lea
jmp
call
aas
sub
scas
cmp
mov
jp
out
or
dec
xchg
lahf
lods
push
xchg
or
aaa
add
pop
add
pop
in
jns
fmul
andb
clc
pusha
int
inc
pop
stos
hlt
mov
loope
xchg
mov
rol
adc
or
xchg
pop
sbb
cmp
je
inc
ret
lea
jb
push
pusha
pusha
pushl
ret
xchg
call
pushf
push
push
movl
mov
mov
pushf
movl
pushf
pushl
ret
lea
pushf
pushf
mov
movl
movb
pushl
popl
movb
movb
pushl
ret
pushf
lea
jne
pusha
stos
mov
pusha
lea
jmp
push
push
mov
jmp
push
aad
push
push
rcrb
icebp
adc
aam
pop
jle
mov
stos
xchg
movsb
movlhps
pushf
xchg
fdivl
push
int
mov
push
loop
xchg
cmp
xor
dec
jmp
lret
sub
push
sbbb
push
and
out
shlb
xchg
repnz
xchg
arpl
and
pop
or
jmp
lea
je
das
cwtl
neg
sub
bsf
sbb
mov
lahf
rol
push
mov
setae
add
movsbw
clc
shr
lea
setnp
or
push
mov
movb
push
bt
or
jmp
push
pushf
movl
pusha
pushf
pushf
lea
jmp
push
lea
call
call
mov
pushl
popl
pushf
movw
movw
push
pushl
ret
sbb
mov
sbb
inc
aaa
or
ja
fwait
fwait
outsb
push
pop
mov
mov
aam
and
xchg
ja
divl
dec
xchg
ja
repz
pop
dec
pop
xor
mov
stos
xchg
pop
or
inc
and
mov
lahf
fimull
cmp
mov
lcall
inc
sbb
pop
sub
xor
inc
mov
std
sbb
sub
add
push
in
shll
aaa
xor
jb
mov
arpl
mov
lret
xchg
repnz
js
bt
add
stc
pushf
mov
pusha
cmc
movb
clc
test
jmp
movb
adc
movb
push
lea
call
call
pusha
jmp
lds
adc
dec
jne
popf
sbb
imul
add
or
lds
sbb
fcoms
push
call
aaa
fld
std
jns
cmpsb
push
enter
xchg
out
push
arpl
push
sbb
test
test
adc
in
sub
jl
movsb
es
repnz
pop
or
addr16
in
rcrb
mov
add
add
push
cltd
cs
lea
aaa
shr
jns
sub
push
gs
dec
movsl
ffree
and
pop
adc
jb
adc
xor
adc
std
stc
pop
in
xchg
repnz
pushf
jmp
push
sar
mov
and
or
rcl
stc
sub
not
push
adc
test
sar
push
aas
neg
push
movsbl
sbb
pushf
sub
movsbw
lea
movb
jmp
rol
bt
cmp
pusha
xor
cmc
bt
call
pop
pushf
pusha
pushf
pushf
lea
js
push
jmp
mov
rep
bswap
mov
mov
pushf
lea
jmp
outsl
push
adc
or
xor
jb
fiaddl
or
xor
mov
fstl
sbb
add
aas
jns
test
adc
or
add
jbe
sub
je
or
test
les
mov
repnz
xor
inc
and
cltd
add
inc
dec
scas
pusha
pushf
lea
jmp
push
outsl
ret
into
push
adc
dec
fadd
jo
cmp
push
inc
sbb
mov
imul
sbb
pop
jns
outsb
xor
out
out
pop
push
mov
in
xchg
pop
lock
jmp
leave
lods
inc
cmc
andl
xor
or
add
lea
jae
pushf
call
pusha
lea
jae
cmp
cmp
call
cmc
shl
cmp
mov
bt
and
call
mov
and
cwtl
dec
clc
ja
mov
xorps
pop
add
xlat
or
sub
out
add
jecxz
dec
cmc
pop
adc
cld
mov
mov
sub
mov
xor
cmp
xchg
jbe
lret
inc
jecxz
mov
fistpll
pop
stos
sub
xchg
repnz
add
bt
add
push
pusha
pushf
lea
jne
pusha
pushfw
popw
not
stc
push
mov
push
call
add
push
push
push
pushf
lea
jmp
pusha
mov
mov
sub
pushf
call
mov
call
test
dec
ficoms
outsl
ror
inc
into
aaa
outsl
int3
imul
sub
or
jae
les
push
dec
lds
jo
mov
mov
sub
stos
mov
dec
stos
cmp
outsl
and
stos
lahf
inc
mov
ja
ja
call
mov
daa
add
push
fsubr
sbb
insb
hlt
push
aam
lret
and
loopne
mov
outsl
lahf
or
push
inc
mov
pop
pop
testb
ss
push
std
test
xor
xchg
sti
push
movsl
pop
sbb
cmp
jb
outsl
or
dec
mov
pop
frstor
and
mov
inc
scas
push
mov
repz
sbb
inc
pop
sbb
cltd
inc
and
mov
or
push
add
fstpl
or
rcrl
push
dec
and
dec
inc
ror
addl
xlat
sub
pop
ret
lds
test
jae
sbb
movsl
sti
mov
cmp
out
pop
add
cli
pop
xchg
mov
mov
adc
dec
aam
adc
mov
and
push
dec
pop
jbe
in
das
cmpsb
mov
sub
test
sbb
or
jp
add
sub
scas
imul
nop
mov
jp
scas
not
cmp
or
lds
sub
aas
movsl
adc
xchg
cmpsl
jge
mov
inc
adc
gs
cmp
rol
lods
je
hlt
xchg
repnz
loopne
sub
and
ljmp
leave
inc
jmp
xor
sar
rorb
mov
and
add
jge
jne
lds
jnp
cmp
insb
jl
push
nop
or
jae
inc
ljmp
or
sub
pop
test
in
je
add
xchg
repnz
push
push
pusha
movl
pushf
pushl
movl
pushl
pushl
movw
lea
jmp
push
pushf
push
movl
push
push
movl
lea
jmp
call
add
push
pop
jo
xchg
lods
jae
aas
fimull
ljmp
scas
jp
fimuls
add
push
push
dec
jno
stos
mov
lahf
sbb
and
inc
xchg
pop
inc
mov
pop
lret
packsswb
repz
repnz
jle
clc
push
not
sub
pushf
aam
mov
bt
mov
stc
clc
call
xor
adc
xchg
jnp
inc
and
adc
add
sbb
add
arpl
scas
mov
push
dec
dec
int3
inc
mov
pop
pop
jb
xor
fld
cltd
sub
jl
mov
pushf
in
out
scas
sub
jg
mov
aaa
jg
xor
lods
xchg
repnz
add
mov
xchg
lcall
call
jno
lods
test
lea
pop
cmp
sbb
in
sub
jb
add
push
pop
sub
js
lahf
mulb
cmpsl
sub
addb
out
pop
repz
or
fdivl
fldenv
das
lods
mov
sbb
repnz
inc
xor
jnp
aas
or
mov
std
movsl
cmp
push
jne
jl
popa
mov
icebp
fsts
xor
rorl
outsl
ret
push
pop
push
pop
mov
in
xor
ffreep
fistps
add
push
jbe
mov
rol
xor
pop
fidivs
inc
cmp
rclb
ret
sti
mov
negb
mov
mov
stos
push
bound
stos
sub
jo
inc
cld
test
xor
arpl
jbe
addl
repnz
ja
and
xchg
shrl
cltd
scas
ss
cli
aaa
addb
shll
in
js
sahf
fcoml
mov
adc
les
hlt
xor
or
or
cmp
fimuls
outsb
adc
xchg
repnz
shr
inc
jmp
ret
enter
jmp
lea
call
pusha
push
adc
call
push
jle
cs
or
cmp
bound
ss
ret
int3
sub
adc
pop
out
push
fidivrl
cmp
adc
jecxz
out
xor
iret
lea
sti
jae
out
lahf
mov
bound
sbb
lret
out
cmpsl
std
mov
xchg
sar
push
add
ljmp
and
push
out
leave
mov
fnstcw
dec
into
sbb
sub
cmp
xor
mov
mov
dec
pop
les
sub
adc
test
mov
movsb
pushf
or
lods
cmp
shlb
clc
xchg
sbb
cs
mov
inc
stc
pop
dec
xchg
inc
stos
cwtl
lcall
in
setns
xchg
push
or
aad
xchg
xor
loop
sub
hlt
in
mov
aam
pushf
nop
cmp
dec
inc
faddl
push
fistpl
lock
pushf
inc
hlt
nop
cwtl
jo
test
js
movsl
loope
aad
out
cmp
xlat
xor
out
movsl
inc
sahf
sub
adc
shr
sbb
negb
xchg
push
call
ss
test
push
gs
arpl
inc
pop
inc
jp
loop
out
push
out
dec
cwtl
xchg
repnz
xchg
rorb
orl
jmp
test
int3
in
mov
leave
popa
fstpl
pushf
fmulp
inc
movsb
dec
jecxz
iret
imul
push
aaa
aaa
jle
lods
nop
icebp
push
xchg
xlat
mov
xor
or
lock
or
xchg
repnz
push
jl
push
inc
xchg
xchg
xchg
test
mov
add
aaa
jle
int
push
cmp
xchg
fs
xchg
lds
es
out
daa
cmp
add
ret
pop
pop
push
inc
and
lahf
mov
sbb
xor
xor
xor
std
jo
fwait
add
jg
jle,pt
lcall
outsb
movsl
inc
jno
call
fdivl
dec
pop
jb
xchg
mov
pop
lods
mov
pushf
addr16
add
int
and
fnstenv
jns
cmc
mov
mov
icebp
sbb
mov
loop
mov
fwait
xchg
out
aaa
push
daa
and
fwait
aas
jg
xchg
repnz
and
mov
pop
add
test
icebp
pushl
mov
jg
adc
insb
cmp
mov
popa
sbb
cld
scas
cmpsl
mov
push
dec
dec
mov
mov
jns
out
push
sub
test
rcrb
flds
inc
adc
add
pop
xchg
repnz
sub
decl
mov
mov
jl
add
clc
call
cwtl
jl
pop
rcl
adc
movsb
insb
adc
les
fmuls
push
pop
add
es
inc
rorb
jns
out
out
sub
orb
sbb
mov
loop
aas
push
addl
movzwl
sti
mov
cmp
mov
push
jbe
das
lret
fisttpl
mov
dec
dec
jmp
lahf
xor
inc
ret
btsl
xlat
xchg
das
jg
push
mov
scas
fsubr
shl
sahf
in
push
push
mov
arpl
mov
pop
das
fistpll
leave
push
add
push
divb
push
dec
mov
int
add
adc
pop
data16
aaa
je
push
add
push
icebp
push
ds
or
cmp
faddp
scas
jnp
mov
and
in
std
loopne
int
insb
popf
out
cmp
cmp
repnz
out
sub
mov
mov
pop
bound
dec
in
pop
cmpsb
mov
repnz
pop
jo
repnz
sbb
jge
dec
inc
xchg
cwtl
lea
fsts
sbb
jnp
xchg
pop
int
mov
leave
rorl
pop
push
hlt
sbb
movsl
inc
xor
imul
pusha
fs
cmpsb
sbb
imull
add
in
push
sbb
sub
jg
rorl
addr16
pop
inc
sbb
inc
mov
xchg
repnz
div
repz
jmp
mov
movsb
lock
fs
pushf
js
aam
outsl
lods
mov
and
xchg
jae
inc
sub
push
inc
or
jp
pop
dec
out
sub
or
xchg
mov
xchg
jo
push
adc
mov
and
xchg
repnz
addl
rclb
popf
mov
sub
mov
pop
jbe
jnp
sahf
sub
add
hlt
lret
in
call
scas
xlat
das
out
jb
mov
popf
cmpsb
fsubl
mov
fs
loopne
jge
jp
repz
adc
inc
jae
pushf
xlat
daa
setbe
in
cmp
movl
arpl
push
int3
sub
test
adcl
shl
ds
rcr
push
int
jg
test
add
jbe
rolb
daa
mov
add
push
xlat
pop
and
mov
xchg
or
and
xor
loope
sbb
jbe
data16
iret
or
cs
testl
into
xor
mov
insl
nop
call
dec
negl
pop
out
ret
iret
mov
push
pop
fisubrl
pop
scas
mov
imul
sub
addr16
xchg
repnz
fildl
lcall
setae
sahf
stc
mov
push
test
aad
lea
inc
push
dec
lret
xchg
jp
jmp
stos
ret
dec
aaa
mov
sub
into
gs
jne
push
fsubs
movsb
mov
sbb
sbb
loope
xor
or
mov
cmp
scas
mov
fisttpl
call
inc
or
arpl
jne
cmpsl
lahf
lods
inc
mov
insb
xor
jne
pop
stos
fidivrl
sbb
out
add
sub
cs
je
nop
call
xor
push
insb
sbb
int3
xor
mov
adc
fistps
dec
xchg
repnz
lods
lcall
ret
stc
jae
push
stc
cmpb
pushf
lea
jne
rcl
btc
adc
xor
and
cmp
dec
mov
ror
rcr
add
and
rcl
mov
jmp
cmp
xchg
not
shl
movsbw
stc
mov
movw
pushf
sub
movb
push
rep
mov
pop
pushl
movsbw
mov
pushf
pushf
lea
jmp
movsbl
mov
pusha
movl
mov
bswap
push
mov
mov
mov
pushf
pushf
pushl
ret
test
or
pushf
pushf
lea
jne
not
add
mov
test
pusha
pusha
test
or
call
call
pusha
push
push
stos
pushf
mov
movw
call
call
in
aad
xchg
push
mov
jae
das
push
cmpsl
sbb
lret
ret
out
xchg
push
icebp
jbe
push
push
jmp
and
mov
rcrb
or
jg
push
mov
enter
push
or
aaa
out
stos
or
cmp
das
push
xor
dec
int3
jno
add
ret
cli
jmp
jmp
and
fs
add
sub
push
jle
test
cmp
cmc
orb
cwtl
out
mov
test
mov
jno
push
aad
or
subl
dec
shll
arpl
jns
popa
mov
mov
out
cmpsb
mov
cmp
lahf
jg
out
cmp
movl
add
or
adc
cwtl
out
xchg
rcrb
js
rcr
push
mov
pop
xor
push
js
sarl
push
dec
lret
js
mov
mov
sub
sahf
push
xchg
loope
adc
sub
jle
ja
out
mov
out
and
insl
xchg
repnz
rcrl
scas
or
xchg
scas
sub
cmp
imul
out
dec
sbb
repz
adc
mov
cli
fidivrs
xchg
mov
add
push
call
insl
scas
in
add
xchg
dec
ljmp
push
sbb
xor
repz
into
mov
push
or
sub
pop
stos
ret
xchg
icebp
sbb
push
dec
es
js
cmc
test
sub
clc
dec
xchg
lret
insb
leave
mov
ja
das
mov
push
mov
lcall
and
ljmp
loopne
mov
ja
pop
adc
cmp
repnz
scas
pushf
or
mov
push
xchg
pop
testb
xchg
mov
xor
push
test
inc
ret
icebp
mov
dec
or
pop
xchg
cwtl
fwait
jge
leave
rcll
stos
sarl
pop
adc
fists
js
sbb
push
push
scas
jle
cmp
stc
std
mov
fwait
out
sub
jnp
ljmp
sub
out
push
mov
jns
pop
repz
push
orl
ja
and
push
inc
jns
or
cs
adcl
push
repnz
lds
lods
in
xor
sub
aad
subl
ss
push
fwait
testb
into
sub
mov
sub
or
push
scas
stos
pusha
test
pop
mov
inc
push
dec
cmp
mov
iret
sti
jns
stos
js
dec
cmp
das
jbe
push
out
mov
sub
or
shl
mov
rcrl
cwtl
pop
cmp
pushf
mov
xchg
repnz
mov
movl
pushl
push
pushf
movw
lea
jmp
push
cmpb
push
mov
lea
jne
movsbw
daa
adc
pusha
xor
jmp
call
inc
fildll
orl
int
mov
inc
pop
sbb
push
or
fmul
push
dec
inc
pushf
ja
jg
loopne
mov
aam
mov
rcrl
xor
push
sub
aad
and
dec
lahf
outsb
jnp
ja
subl
push
xchg
repnz
dec
jle
mov
inc
int
cltd
sbb
cmc
xor
fstl
adc
lret
or
lods
cmpsl
lods
repnz
lods
cmp
shl
xchg
jns
mov
pop
sub
mov
ja
sub
adc
dec
adc
push
ja
dec
mov
xor
adc
rcrb
jmp
out
dec
inc
setle
mov
bsf
shl
cmc
sar
mov
seto
neg
mov
cmc
clc
mov
test
xor
pushf
stc
ror
call
gs
sbb
leave
stc
push
mov
jns
hlt
pop
aad
popf
outsl
or
mov
int
pop
push
div
jp
fimull
inc
jb
sbb
lods
pop
pushf
mov
mov
mov
daa
lds
lret
dec
repnz
cld
out
rcll
ds
add
adc
into
jg
pop
mov
adc
and
test
mov
cmp
push
pop
adc
adc
mov
push
test
jne
add
test
sti
sub
inc
add
mov
mov
in
and
jno
mov
mov
lahf
hlt
inc
pop
test
inc
cmpsb
xor
clc
lahf
movsb
shr
pop
jg,pn
mov
std
dec
push
add
fs
mov
in
pop
hlt
aam
jb
cmp
xchg
pop
sbb
pop
aaa
mov
subl
pop
bound
or
ja
xorb
sti
adc
push
rclb
dec
pop
pop
roll
divl
out
imul
popf
jp
stc
xchg
mov
call
pop
sarl
lahf
out
jmp
stc
sarl
dec
pop
jle
xchg
test
push
sbb
inc
imul
int3
pop
push
inc
lret
lcall
stos
pop
fcmovne
cmp
sub
push
adc
mov
fiadds
pop
cmp
push
mov
sahf
std
dec
sti
pop
push
mov
dec
mov
nopl
cmp
js
cli
jecxz
or
and
xchg
insb
jo
fisttps
dec
bsr
int
mov
mov
movsb
sarb
mov
cld
outsl
cmp
inc
push
faddl
addr16
xchg
imul
andl
scas
shlb
pop
mov
xchg
inc
adc
aad
arpl
or
lret
fwait
push
sub
ret
push
pop
mov
je
dec
pop
loopne
paddq
jecxz
dec
xor
mov
pop
test
and
arpl
sbb
test
pop
mov
aam
push
ja
and
sbb
cmp
sbb
test
cmc
repz
add
sub
jns
pop
and
jl
jmp
or
dec
pop
xchg
adc
leave
pop
aas
cwtl
ljmp
and
pop
std
xor
and
fstpt
adc
pop
mov
bnd
sub
pop
dec
mov
mov
sub
jae
sti
ljmp
imul
lods
jp
adc
add
mov
rcrl
xchg
or
incb
vaddsd
pop
popa
pushf
out
or
pop
add
xchg
cld
or
and
fnsave
cmp
fistps
in
pop
mov
mov
and
pusha
ds
lret
lods
mov
pop
enter
cmp
fnstcw
and
xor
fs
mov
or
xchg
pop
xor
sub
scas
pop
push
cmp
sub
fsts
xchg
or
add
xchg
int
push
xchg
mov
fwait
mov
sbb
mov
mov
scas
cmc
stos
mov
lahf
mov
clc
addr16
fistl
or
lock
mov
push
mov
fwait
aad
jae
xor
cltd
cmc
xchg
xor
jb
or
inc
mov
ljmp
dec
sub
fwait
lcall
xchg
sub
sub
xchg
sti
mov
ret
xor
push
dec
mov
sub
mov
enter
xchg
nop
ljmp
call
sbb
out
lcall
mov
jbe
mov
jne
mov
cmp
sbb
and
xlat
mov
jp
xor
cmc
test
lret
lea
jnp
inc
cmp
insb
push
mov
jecxz
jnp
sbb
out
sbb
out
aaa
sbb
test
out
xchg
cltd
sub
divb
mov
pop
aaa
push
stos
adc
pop
fwait
lcall
mov
and
xlat
stos
arpl
or
clc
jnp
shlb
lahf
jns
scas
or
or
inc
neg
pop
daa
sbb
xor
stos
mov
xor
pop
mov
daa
mov
stos
pop
arpl
cwtl
mulb
cmc
js
jo
or
shrb
repz
dec
mov
adc
out
xor
add
into
mov
mov
mov
stos
repz
mov
sbb
jg
das
mov
not
fs
scas
mov
pop
ja
mov
fwait
mov
lea
mov
cltd
pop
dec
test
fstps
and
pop
pop
scas
push
jns
mov
pop
xor
pop
inc
imul
or
stos
jns
mov
mov
add
mov
lock
sti
in
xlat
mov
jo
sbb
scas
cmc
jmp
xor
sub
xor
scas
jae
aaa
stos
inc
cmp
sti
mov
inc
cmp
sub
jmp
negl
cwtl
dec
out
clc
loop
test
cmc
cmp
lcall
pop
xor
inc
jnp
xchg
lcall
mov
mov
fildl
popf
cmp
fwait
sbb
test
mov
lret
pop
rcrb
mov
sbb
lret
pop
mov
xchg
das
fidivl
lret
cmp
cmc
pop
nop
mov
clc
push
fsubs
cmp
test
xor
jg
fistpl
mov
sbb
jecxz
das
pop
jp
jp
mov
mov
mov
fidivrl
xor
pop
lret
mov
stc
cmc
fnstcw
jns
sti
pop
repz
cmc
cwtl
xor
fdivs
mov
loopne
ret
sbb
mov
cmc
cmp
cmp
divl
jns
mov
sbb
mov
fwait
shll
jnp
fnstcw
mov
mov
dec
fwait
and
mov
sti
pop
scas
jge
mov
sbb
cmc
pop
popf
jle
mov
int3
xchg
lcall
mov
mov
sbb
cmp
cltd
scas
mov
lret
xor
test
push
sbb
mov
mov
lret
fsubs
mov
js
rep
jle
lea
test
jae
fistl
lret
sbb
pop
lret
lcall
sub
sbb
jp
sub
push
das
cltd
cmc
stc
dec
pop
sub
lcall
sbb
fwait
mov
sbb
mov
in
ret
cmp
subb
insb
in
xor
cli
cmp
push
mov
shrl
push
cmpsb
dec
and
les
pop
push
outsb
sarl
xchg
sub
pop
lods
jecxz
insl
les
dec
jb
bound
xchg
sahf
inc
sbb
int
sub
xchg
jno
push
adc
jmp
dec
insb
lods
popf
cltd
push
lahf
or
pop
mov
hlt
and
das
jno
mov
adc
push
enter
outsl
xchg
mov
sbb
repz
icebp
mov
mov
cwtl
sub
add
mov
mov
mov
mov
aad
dec
mov
ss
cltd
stos
mov
jmp
cmp
mov
out
sti
inc
div
xchg
pop
sub
pop
and
jg
mov
div
aad
maskmovq
testl
testl
push
aaa
cli
xchg
cltd
xor
outsl
cmp
xor
mulb
in
xlat
inc
fwait
mov
outsl
jbe
mull
xchg
adc
testl
je
nop
pop
sbb
out
cmpsl
adc
stos
pop
ljmp
int
adc
testl
loope
mov
jmp
mov
sbb
cmp
cmc
adc
aad
inc
cltd
xchg
inc
jg
mov
ljmp
xlat
mov
negb
jb
xchg
cmp
cli
aad
push
rcl
push
cwtl
mov
add
repnz
mov
sahf
xchg
inc
lret
aad
imul
xchg
inc
sbb
shlb
xchg
inc
repnz
mov
ja
test
xchg
inc
addr16
and
inc
iret
testl
pop
mov
cmp
divb
insb
push
push
add
fwait
xchg
outsl
mov
aaa
adc
xchg
xlat
push
stos
xor
push
and
mov
divl
push
call
movsb
add
or
cli
loop
xchg
and
push
xor
dec
repz
cmc
adc
add
adc
cwtl
mov
cmp
lock
ret
rcll
cmp
fcmovnb
jnp
stos
aaa
sub
xchg
xor
icebp
stos
sub
xchg
jb
stos
fistpl
outsb
mov
mov
jmp
adc
mov
cmp
out
or
not
sub
or
sbb
and
mov
mov
xor
cmp
jnp
mov
add
pop
jno
jmp
xchg
pop
jb
xchg
and
mov
sbb
rolb
icebp
xor
lock
ljmp
scas
out
inc
mov
pop
int
jno
addr16
jmp
xor
adc
fcoms
neg
pop
sub
ret
add
lret
repz
jecxz
sbb
adc
cltd
or
mov
fisubrl
pop
xchg
es
js
fldcw
dec
mov
fcmovnbe
inc
out
arpl
pop
test
je
lds
scas
ret
loopne
xor
jl
adc
fs
ss
or
mov
mov
inc
scas
cld
inc
repz
cmc
and
sub
or
push
adc
add
pop
call
pushf
popa
xor
or
push
arpl
out
inc
pop
lods
or
aam
out
stos
lock
fdivrs
pop
push
fs
ljmp
or
pop
and
pop
call
les
pop
pop
sahf
push
jno
push
fidivrl
mov
pop
les
icebp
cmc
mov
loopne
dec
sub
and
pop
out
mov
and
pop
dec
movsl
sbb
pop
jb
fldenv
test
xchg
pop
pop
or
sbb
fs
int3
test
aad
pop
stos
jno
int
adc
jmp
fisubrl
xchg
mov
in
cmp
sbb
das
ret
mov
int3
jnp
loop
jle
ljmp
aad
shll
scas
cmpsb
and
mov
mov
push
mov
xchg
jmp
sub
ja
xchg
int
das
xor
ss
rcr
jo
pop
imul
in
pop
lea
ljmp
add
mov
mov
push
into
xor
fisttpl
mov
insb
mov
mov
dec
pop
sarl
pusha
inc
pop
mov
lret
jmp
bt
jo
pop
fdivr
fstl
jnp
and
and
sbb
stos
mov
dec
sbb
lods
adc
sub
cwtl
mov
int3
pop
or
aad
pop
sub
loopne
inc
mov
fnsave
inc
sbb
pop
mov
mov
push
loopne
mov
ficompl
and
ret
sarb
mov
inc
pop
mov
and
sarl
pop
jmp
inc
mov
mov
mov
and
outsb
cmp
push
pop
dec
push
sbb
decl
jo
push
xchg
jnp
sub
inc
rcr
aaa
and
sbb
pop
mov
jge
test
inc
pushf
das
repz
pop
push
xchg
loop
pop
sbb
or
pop
dec
jl
in
icebp
xor
xchg
adc
pop
xor
pop
xchg
cmp
cmpsl
js
or
lcall
mov
mov
adcl
lahf
scas
arpl
mov
pop
inc
mov
and
xor
lret
pop
iret
jo
arpl
mov
clc
pop
addr16
aas
adc
jmp
cmpl
fsub
loope
push
sbb
mov
insb
ficoml
mov
out
pop
pushfw
lret
sub
mov
jmp
or
push
pop
lcall
adc
jbe
iret
js
push
sbb
js
aam
pop
test
push
jl
jecxz
adc
xchg
in
xor
arpl
adc
pusha
sub
in
ljmp
jge
xlat
jp
cmp
cld
test
incl
lcall
cmc
pop
mov
mov
xor
pop
and
push
and
movsl
repz
pop
aaa
add
xchg
repnz
sti
negb
int3
mov
jbe
cwtl
shr
mov
fidivl
mov
or
or
push
arpl
out
loop
dec
mov
idivl
arpl
insl
add
enter
and
dec
lea
xchg
mov
test
insl
aad
in
mov
shll
xor
stc
mov
push
mov
mov
mov
pushf
lods
movl
jmp
test
bt
add
clc
jmp
cmp
cwtl
ret
rorl
lea
fnstenv
push
cltd
loope
adc
mov
or
push
cmc
orb
dec
rcl
mov
fnstcw
xor
inc
adc
repnz
cmp
push
xchg
add
or
call
and
cmp
testl
or
das
mov
push
mov
push
dec
repz
fwait
xor
jns
sbb
mov
iret
jno
test
cld
xchg
or
xor
jne
nop
nop
sbb
std
lret
fildl
push
pusha
push
and
test
bt
stc
add
pushf
pushf
lea
jmp
jns
rorl
lret
cwtl
lods
mov
fsts
sbb
insl
jns
sub
test
js
adc
pop
or
pop
dec
movsl
xchg
int3
int
or
cmpsl
sub
lea
xor
inc
cwtl
pop
cmp
icebp
add
sti
mov
push
sub
adc
inc
lcall
ret
sub
add
sti
mov
inc
mov
outsl
pop
int
and
cltd
sbb
xor
cmp
mov
sahf
or
test
push
dec
cli
jecxz
lock
xlat
subb
jns
mov
rolb
sahf
leave
jp
pop
dec
mov
jne
jmp
flds
dec
js
xchg
repnz
pop
gs
push
cs
add
test
test
xor
mov
and
cs
sub
bnd
pushf
in
push
and
adc
cmp
into
shll
aaa
mov
ljmp
sahf
sbbb
sbb
outsl
fucomp
imul
lret
pop
pusha
or
clc
sbb
or
adc
in
out
dec
and
loope
cmp
cmp
or
popl
test
push
xchg
repnz
test
jno
hlt
shld
pushf
mov
inc
sub
clc
add
neg
mov
bt
clc
test
jmp
push
je
es
int3
or
pusha
das
lret
lret
push
cmp
dec
mov
lret
mov
jmp
icebp
ret
int
ja
stos
mov
mov
cmp
inc
mov
ficoml
or
xlat
outsl
scas
or
dec
mov
sbb
outsl
fs
pushf
ss
test
mov
sahf
mov
jbe
daa
inc
dec
popf
cmpsb
repz
insb
ss
mov
shrb
inc
sbb
mov
pop
dec
inc
movsb
xchg
dec
insb
inc
pop
pop
icebp
dec
movsb
loope
inc
in
mov
sbb
out
outsb
call
pop
fwait
ret
add
push
mov
pop
xor
lds
xchg
xor
xchg
repnz
test
or
mov
movl
bound
fwait
lods
mov
xor
scas
movsl
mov
es
xor
mov
inc
test
sub
sub
je
movl
decl
repnz
out
adc
test
ficoml
jne
cmpsb
out
push
add
out
dec
sarl
xchg
jbe
mov
ljmp
push
movsb
cld
lock
dec
mov
outsb
mov
fcmove
mov
aad
xchg
push
pop
mov
nop
out
sti
pop
inc
lock
xorb
test
pop
mov
icebp
str
push
jmp
add
insl
popa
insb
insb
outsl
arpl
jmp
mov
cwtl
push
stos
loope
jle
inc
and
rorb
cs
add
xchg
dec
push
dec
cmp
jmp
xor
data16
jnp
addr16
cs
outsl
movsl
xchg
clc
jo
lock
test
xchg
repnz
and
pusha
lea
jl
pushf
pushf
rep
pop
lea
mov
pushf
movb
lea
jmp
call
push
jne
repz
cmp
mov
jo
xor
sbb
int
int3
sub
xchg
add
sbb
lahf
repnz
cld
cs
gs
mov
mov
enter
xchg
xchg
fdiv
loopne
xor
dec
dec
idivb
jns
stc
xchg
mov
lods
imul
push
push
jmp
insl
sbb
jl
shlb
cmc
insb
dec
jl
or
out
mov
fadds
ret
ficompl
in
cmp
dec
mov
loope
xchg
repnz
movsl
aaa
pop
pop
inc
jmp
xor
push
or
xchg
cmp
dec
xor
filds
or
les
pop
push
push
dec
push
arpl
xchg
sbb
movsb
inc
adc
sub
stc
cld
xchg
mov
dec
out
sahf
adc
mov
and
pop
rclb
dec
or
ljmp
add
jmp
push
rcrb
adc
xchg
xor
shrb
jg
outsb
lret
push
inc
loop
jle
lcall
lods
and
stos
int3
dec
aaa
js
cmpsb
mov
pop
repnz
pop
inc
push
lcall
addr16
dec
sub
sbb
insl
add
popa
int3
mov
adc
add
shlb
dec
adc
pop
cwtl
mov
cmp
lahf
mov
aad
mull
add
shll
inc
xchg
ret
xor
rcrl
inc
mov
dec
das
mov
daa
push
jae
xchg
repnz
lds
adc
dec
mov
push
xor
dec
mov
insb
mov
dec
movsb
xchg
xchg
xor
mov
scas
int3
xor
jns
es
lods
int3
imul
or
xchg
xor
mov
aad
das
std
shll
test
and
jge
addr16
xchg
mov
test
mov
pusha
idivb
jl
jmp
cmp
lahf
xchg
cmpsb
sti
insb
and
mov
sub
test
subl
and
movl
push
push
pushf
pushf
lea
jmp
sti
xor
sbb
jecxz
pop
push
pushl
inc
lods
adc
mov
in
imul
add
adc
subb
push
mov
outsl
scas
pop
jnp
add
rcrl
movsb
cli
pop
pusha
aad
cmpsb
push
or
or
push
aad
cmpsl
data16
dec
cmp
mov
ljmp
dec
cmp
push
jne
es
in
pop
mov
in
ret
ret
sbb
movsl
push
out
inc
jle
xor
xchg
add
bound
cwtl
cwtl
xor
sub
ficoms
xchg
lret
in
lock
add
rorb
add
xchg
cli
js
fwait
pop
movsl
mov
xchg
fsubs
out
mov
mov
push
jnp
push
lock
mov
add
inc
popa
out
or
int3
add
lret
aas
sarl
imul
xor
xchg
and
cmpsl
xchg
cld
mov
xchg
std
out
mov
fistpll
push
mov
sub
push
fs
ficomps
pop
movsl
cmp
call
mov
aaa
push
push
inc
sub
orl
bound
gs
dec
pop
cmc
mov
xor
ss
iret
add
bound
jp
xchg
repnz
pop
sub
jmp
in
call
cwtl
js
cmp
outsb
bound
sub
or
or
sarb
ret
dec
pop
imull
std
jns
jmp
stc
xchg
in
mov
push
frstor
mov
fcmove
testb
jbe
sbb
ret
xchg
repnz
pop
sbb
aas
jg
shlb
xchg
mov
dec
cltd
lea
jmp
jae
gs
inc
xchg
add
mov
add
push
pop
scas
pop
add
cmp
fadds
pop
or
movsb
xor
test
ds
cmp
mov
mov
daa
insb
xlat
adc
stos
ljmp
into
addb
scas
jp
inc
loope
xchg
push
dec
inc
mov
sbb
adc
clc
fsub
dec
fisubs
fidivs
xchg
nop
xchg
repnz
out
enter
inc
xchg
mov
imul
out
sbb
jp
stc
fs
int
push
fildll
es
ret
or
gs
ja
inc
int3
lea
xor
pop
jp
clc
imul
sbb
push
mov
pop
out
cs
xchg
sub
cmp
mov
test
call
cmp
jmp
mov
jmp
and
cmp
enter
repnz
push
sub
push
pop
pop
jg
lods
cmc
dec
rorl
add
pop
dec
rcll
outsl
cld
aam
fcomps
rsm
xlat
mov
lods
push
repnz
sbb
test
aad
cmc
int
mov
jmp
lcall
jns
in
jmp
insl
and
imul
jmp
mov
mov
leave
jne
mov
jmp
lahf
mov
or
mov
mov
adc
cs
pop
mov
cmpsb
idivb
or
add
test
sbb
std
dec
mov
les
ds
xor
xor
je
inc
popfw
mov
pushf
pushl
lea
jbe
inc
pusha
pushf
mov
jmp
ja
ds
adcl
pop
pop
push
xchg
mov
xor
push
push
ss
pop
jne
dec
mov
pxor
rep
xchg
sub
lods
ljmp
dec
push
mov
dec
dec
into
push
adc
lret
inc
mov
repnz
mov
mov
lea
jmp
stc
push
adc
xchg
pop
or
scas
xchg
ljmp
or
or
pop
push
dec
sbb
cmc
mov
lahf
stos
adc
sub
pushf
stos
leave
gs
sbb
icebp
add
pop
add
rcrl
inc
mov
lds
pop
sti
testb
push
js
call
call
neg
push
ret
orb
mov
or
sahf
inc
cmpsb
dec
lds
add
pop
mov
stos
dec
aam
fistpll
hlt
lods
movsb
aam
je
rcrb
cld
pop
insb
es
repnz
loop
aam
out
lret
cwtl
adc
xchg
add
repz
fistl
push
or
and
push
dec
hlt
jmp
imul
out
sub
adc
mov
and
push
outsl
xchg
xchg
cmpsl
push
or
mov
ret
stc
pop
sub
mov
xor
stos
dec
sub
cmpsb
push
push
shrl
jbe
imul
mov
rol
leave
pusha
sub
int3
rcrl
add
iret
mov
jne
stos
cmovle
into
jbe
cmp
and
and
push
push
lret
sbb
cmp
stos
pop
fcompl
int3
in
fwait
lods
repz
movl
cmp
scas
push
mov
mov
jnp
in
pop
adc
bound
ret
insl
das
std
sbb
mov
lods
xchg
repnz
adc
cmp
pushl
lea
jae
push
cmp
jmp
pusha
lea
call
inc
ds
aam
adc
mov
jl
or
fcompl
mov
stos
push
or
pop
xor
sbb
jecxz
mov
lahf
test
sar
aam
cmp
lods
insl
clc
xor
gs
test
lods
xchg
sbb
repnz
jae
cmc
js
fldenv
rcrb
popa
pop
rorl
sub
sbb
or
bound
fdiv
notl
mov
int3
mov
sub
xchg
jns
inc
inc
daa
ja
cmpsb
imul
xorl
mov
mov
sbb
cltd
test
repnz
pop
in
test
dec
aam
cmpsb
rorl
mov
insb
or
fmuls
nop
enter
jb
pop
shrb
sub
mov
bound
inc
lods
insl
loopne
adc
ret
jnp
xchg
xchg
lods
hlt
aad
xchg
sub
mov
or
jo
js
stos
xor
cmc
cmpsl
pusha
push
and
arpl
inc
out
and
nop
mov
in
pushf
jmp
push
jle
mov
xchg
pop
mov
lds
xchg
aam
cwtl
clc
nop
in
lock
dec
xchg
repnz
mov
pop
mov
mov
stos
and
cli
jle
ds
mull
inc
push
add
lds
test
test
xchg
add
push
divl
ds
les
push
out
jmp
adc
repnz
loopne
adc
pop
sar
call
jge
xchg
cmpsb
adc
sbb
pop
mov
stc
sbb
sarb
push
aas
xchg
test
roll
pusha
add
subb
or
mov
add
andl
insl
or
add
andl
arpl
sahf
xchg
pop
push
pop
stos
inc
lahf
push
sub
mov
scas
cmp
mov
iret
lds
ret
jmp
enter
pop
leave
adc
mov
jbe
jnp
pop
inc
mov
pushl
lock
pop
stos
mov
lods
xchg
dec
jae
shlb
sbb
xchg
adc
out
inc
mov
cmp
sbb
rep
cld
sahf
loopne
pushf
adc
sbb
ja
jmp
and
lods
das
or
ja
xchg
dec
cmp
popf
pop
leave
js
stc
jnp
stc
add
and
xchg
leave
sbb
add
mov
movsl
sbbb
inc
cwtl
mov
mov
xlat
mov
mov
lods
or
sti
mov
mov
jno
push
lahf
jo
cmp
ret
mov
fistps
jnp
movsl
cs
sub
push
or
lods
jecxz
inc
in
fadds
jg
pop
ljmp
mov
cs
pusha
add
andl
iret
in
imul
adc
xlat
dec
popf
jnp
lcall
imul
sub
testl
xor
dec
adc
mov
cwtl
fmul
scas
imul
sub
rol
mov
mov
or
adc
enter
arpl
adc
pop
xchg
scas
push
sti
adc
testl
repnz
scas
inc
jmp
fs
insb
sub
cld
rorl
xchg
dec
push
ds
icebp
mov
jl
addr16
lcall
adc
sbb
cmp
pop
inc
fsubrs
int
adc
scas
cmp
xchg
pusha
jnp
lods
js
aaa
pop
mov
call
xor
pop
test
dec
cmpsb
dec
repnz
ljmp
and
nop
loop
jl
in
mov
pop
cs
adc
add
jne
xchg
jecxz
nop
sti
mov
cmp
cmp
popf
fimull
mov
mov
lcall
sarl
jle
add
pop
or
roll
sahf
pop
lahf
sub
pop
sbb
imul
ljmp
sub
pop
pop
cmpsl
ficoms
dec
mov
sbb
push
imull
mov
ret
xchg
sbb
cltd
inc
push
jno
cli
lret
popa
mov
aad
out
ljmp
fiaddl
adc
jno
loope
xchg
xlat
fwait
add
aaa
sbb
jl
adc
add
pop
lods
arpl
xchg
jnp
cmp
dec
mov
je
mov
xchg
cmpsb
cmovae
lret
lods
and
mov
popf
cld
mov
fwait
inc
icebp
jb
js
dec
shrb
movsl
ret
pop
mov
clc
cmp
insb
fstpl
aas
pop
gs
push
xchg
jl
outsl
leave
mov
pop
lock
sub
test
cwtl
push
fldt
cli
lahf
jmp
outsl
ret
movsl
xor
inc
rorl
cmp
cmp
adc
pop
xchg
dec
mov
leave
repnz
mov
divb
sbbb
decl
jg
push
lods
mov
mov
call
lahf
shll
jo
xorl
popf
ret
adc
pop
jo
or
jno
sbb
mov
ret
xorb
xchg
inc
mov
or
pop
dec
mov
stos
and
mov
scas
popa
xchg
fsubs
xchg
pop
out
push
je
aaa
fsubr
mov
pop
sbb
cmp
lods
cmp
lock
leave
fbstp
hlt
int3
dec
xchg
nop
xchg
sti
sbb
xrelease
cmp
pop
ja
mov
xchg
mov
cmp
mov
adc
repz
test
xchg
cmp
sti
fistps
fldenv
dec
fildl
adc
fists
faddl
aaa
jmp
add
lcall
jne
out
fidivrl
icebp
cli
inc
xchg
je
push
cmp
jns
out
lret
xchg
mov
pop
dec
std
test
cltd
outsb
xchg
into
mov
bnd
xchg
mov
shlb
enter
lds
or
pop
or
pop
and
inc
or
cli
out
scas
cmp
xchg
add
pop
imul
hlt
popf
or
scas
add
js
nop
inc
push
add
dec
mov
cmp
ljmp
ds
stos
lods
or
cmp
clc
test
xorb
das
or
sub
out
lods
push
jmp
pop
call
lock
mov
shl
add
or
push
in
dec
xchg
cmp
pop
in
inc
xchg
add
fmul
pop
ja
jmp
dec
mov
mov
mov
jns
lods
adc
jnp
or
mov
js
dec
fidivl
hlt
mov
xchg
inc
in
push
xchg
jmp
stc
aaa
sbb
insb
cs
fwait
push
dec
sti
cmp
fdivrs
mov
sub
out
ljmp
mov
cmp
or
mov
xchg
or
hlt
lods
cmp
xor
pop
inc
dec
xor
adc
rcrb
stc
and
jmpw
scas
mov
insl
inc
popl
or
xchg
cmp
jns
mov
fwait
lahf
test
scas
pop
dec
lds
aam
nop
aaa
cli
mov
pop
cmpsl
icebp
test
nop
fdivp
sub
fwait
mov
out
mov
shlb
cmp
add
fiaddl
inc
lods
fwait
lds
mov
pop
mov
shll
stos
inc
fildl
ret
dec
mov
inc
std
mov
pop
dec
mov
mov
mov
push
push
jno
es
add
push
xchg
jp
mov
xchg
jne
cwtl
adc
inc
shll
xchg
mov
jbe
ss
dec
adc
cli
sti
lahf
sarb
rolb
add
cmpsl
mov
pop
mov
cwtl
add
rclb
mov
inc
push
push
adc
mov
pop
xor
jae
inc
testb
pusha
inc
adc
xchg
in
push
lds
out
mov
xlat
mov
adc
les
aad
je
test
pop
sbb
hlt
cltd
pop
xor
adc
inc
mov
cmp
sub
or
insb
add
inc
std
xchg
stc
xor
leave
into
stos
add
cmp
idivl
pop
mov
jg
loope
lret
out
das
mov
test
sbb
cmp
mov
rclb
repz
stos
stos
scas
add
adc
lcall
xor
ret
lcall
mov
lods
bound
sbb
pop
mov
js
and
cmp
or
sbb
shll
xchg
mov
push
sub
js
aas
out
mov
andb
mov
out
dec
inc
les
dec
imul
in
divl
jl
or
mov
fnstenv
pop
outsb
push
or
adc
jl
jbe
mov
inc
inc
mov
pusha
pop
jmp
stc
in
add
stc
and
iret
outsl
imul
jne
sub
imul
cmc
lret
jl
jno
ss
imul
ljmp
movsl
jmp
xchg
sub
xor
cmp
lret
subl
stos
mov
sbb
ds
push
adc
nop
pop
fadds
pop
pop
stos
adc
int3
lahf
scas
cmp
sub
mov
sarl
iret
stos
adc
and
xchg
or
mov
insl
adc
add
mov
stos
fisttpl
cmp
mov
mov
jne
pop
lock
mov
mov
mov
std
or
fisubl
inc
ljmp
jl
out
push
lock
mov
fistpll
xchg
mov
inc
mov
sbb
sarb
jl
into
and
or
stos
iret
ret
repz
push
sub
lods
stos
xchg
cmp
xor
fidivrl
subb
or
mov
test
loopne
jnp
fwait
and
adc
daa
lret
jp
mov
sub
mov
out
daa
repz
in
jo
pop
mov
insb
pop
xchg
mov
cmp
and
adc
dec
mov
fxch
leave
lds
ljmp
dec
mov
mov
push
xchg
fcompl
stos
push
les
sbb
mov
je
lcall
inc
outsl
mov
cmp
adc
mov
fidivrs
adc
push
lods
xor
fcmovb
loopne
pop
adc
push
mov
and
jb
mov
fs
mov
or
ljmp
jmp
jmp
mov
jae
ljmp
arpl
bound
mov
stos
cmpsb
mov
cmc
and
stos
ss
or
adc
js
lock
icebp
test
xor
mov
mov
xchg
cmpsb
sbb
fcmovb
daa
leave
fiaddl
cmp
xor
xchg
out
lods
in
test
mov
fwait
mov
sar
bnd
sti
push
gs
mov
fwait
movsb
pop
xor
add
mov
aaa
das
popa
mov
outsb
xlat
in
dec
lods
mov
sbb
xchg
fwait
sarb
data16
fwait
add
nop
mov
jne
fwait
push
les
mov
mov
lret
sbbl
testl
add
out
jns
adc
dec
fcmovnb
inc
mov
hlt
imul
cmpsl
and
fwait
mov
mov
pop
xchg
lret
cmp
pop
sub
stos
fwait
cmp
sub
pop
mov
cmc
or
lcall
cli
test
imul
pop
lret
test
xlat
fcmovb
mov
sbb
dec
xor
mov
cmp
stc
mov
sub
test
rcrb
imul
imul
cmp
enter
sub
xor
mov
leave
sbb
ljmp
fiaddl
test
mov
sub
sub
mov
mov
nop
fmuls
pop
xor
frstpm(287
sbb
imul
mov
sub
clc
xchg
or
or
sub
negl
js
test
mov
mov
mov
xchg
lret
fwait
cmc
pop
fisttpl
lds
mov
mov
mov
mov
popa
fcomps
mov
stos
aaa
jmp
clc
in
clc
fistpl
push
mov
fldcw
lret
mov
xchg
cld
mov
xchg
pushf
push
push
ret
push
mov
pop
je
and
dec
ret
pop
push
sbb
xchg
lret
popf
cmp
xor
fwait
ret
cli
push
fs
mov
cmp
fadd
jno
fwait
lcall
pop
jl
push
jmp
sti
scas
lods
adc
cmc
sbb
jo
add
push
cmp
test
adc
test
dec
adc
push
push
in
mov
pop
js
sbb
jecxz
add
sub
mov
addr16
mov
je
rorb
stos
std
mov
and
push
insb
pop
inc
mov
jno
mov
jmp
fistl
lcall
icebp
pop
lcall
lock
push
cmpsl
les
mov
mov
dec
pop
mov
leave
testb
stos
mov
scas
inc
outsl
fxch
jnp
dec
sti
sahf
insb
stos
mov
jns
test
dec
push
push
sbb
sub
cli
xor
xchg
inc
pop
sbb
add
cmp
add
pop
pop
fdivr
scas
mov
test
popa
fcmovnu
loope
mov
cmp
pop
xchg
aas
inc
cmp
in
pop
fiaddl
daa
std
cmpsl
lahf
adc
pop
lods
cmp
mov
lret
cmc
push
popf
xor
inc
sbb
add
loopne
leave
cmp
in
inc
test
ljmp
cli
sbb
xor
fistps
mov
lahf
mov
mov
mov
enter
lret
fistl
jb
add
mov
mov
push
sbb
pop
mov
xchg
dec
push
mov
adc
mov
pop
js
push
cltd
pop
fwait
pop
clc
shlb
stos
and
jno
pop
cwtl
mov
sub
bound
out
pop
das
mov
pop
mov
movsl
and
cmp
fcmove
sti
stos
test
add
cmp
sub
in
mov
pusha
mov
push
in
pop
mov
mov
or
psllq
and
push
jecxz
icebp
mov
jp
test
sub
adc
sar
pop
dec
nop
sti
or
out
lahf
inc
lods
xchg
insb
lock
jp
inc
dec
mov
out
push
adc
mov
sti
movsb
mov
mov
push
ljmp
in
mov
push
hlt
aam
lea
into
mov
sub
push
pop
mov
sbb
fsubrs
sahf
inc
cltd
cmc
cmp
xchg
imul
adcl
iret
sbb
xchg
and
jp
mov
xchg
dec
call
ljmp
adc
xor
fldt
jo
cmpsl
cmp
xchg
lahf
in
mov
repz
inc
push
push
daa
mov
and
loope
ljmp
stc
add
mov
fdivr
test
ljmp
dec
adc
sub
push
je
pop
xlat
les
fidivrl
dec
push
aam
push
push
add
stos
pusha
pop
mov
fimull
rcrb
push
jns
jmp
lret
pop
jb
mov
xchg
test
fcmovb
fs
dec
mov
xor
jns
mov
adc
jae
daa
fmull
jbe
dec
mov
icebp
dec
jnp
leave
mov
xor
add
cmp
addl
pop
sub
dec
mov
pop
insl
add
cmp
repz
or
imul
data16
xor
adc
fidivrl
adc
jno
push
push
xor
in
in
adc
xchg
and
rcrl
jno
test
adc
push
jo
inc
push
inc
sub
outsl
inc
jae
pop
scas
enter
lcall
fadds
inc
push
popa
mov
jge
adc
inc
dec
lock
cmp
adc
repnz
sbb
jnp
dec
test
cmpl
pop
call
adcl
repz
xchg
jecxz
mov
int
sbb
xchg
mov
mov
adc
je
test
xor
scas
dec
sbb
in
inc
jae
xor
pop
cmp
xchg
fisubrs
xchg
daa
cmp
inc
ret
sarb
dec
shlw
xchg
mov
test
repnz
lods
divl
sub
mov
jnp
jo
push
lahf
movsb
leave
out
movsl
stc
fbstp
push
sbb
add
sub
je
mov
cmp
cmp
repnz
sub
stos
fldl
push
lea
add
clc
mov
xchg
pusha
xchg
xor
push
fwait
cmpsb
dec
lcall
push
push
pop
or
daa
fsubs
jnp
sbb
cmp
mov
fwait
add
and
mov
sub
in
mov
nop
out
popa
es
inc
filds
adc
lret
dec
lock
arpl
cmp
inc
cld
or
dec
adc
das
jnp
subb
mov
fs
pop
lret
xor
int
out
les
cltd
pop
stos
adc
pop
or
dec
js
xlat
inc
jle
das
jl
adc
in
push
mov
test
lock
daa
mov
sub
int
mov
or
jnp
sbb
je
inc
hlt
sahf
add
ret
icebp
lock
xchg
mov
mov
test
xchg
cli
mov
xor
popa
stos
dec
clc
xchg
lods
mov
sub
clc
and
mov
icebp
push
jecxz
mov
inc
jge
fidivl
cmp
cmp
orb
aaa
mov
das
clc
scas
inc
pop
ja
mov
insb
mov
insl
inc
jo
jg
inc
test
or
addr16
aaa
mov
insl
add
adc
add
mov
inc
push
repz
xchg
stos
and
or
ljmp
repnz
fld
mov
ds
sbb
adc
jno
lret
pusha
shrb
mov
lock
repnz
xor
ss
add
and
lcall
aaa
xlat
jp
jne
ljmp
mov
outsl
testl
mov
ja
mov
jecxz
or
jno
push
dec
pusha
add
mov
lcall
pop
xor
iret
pop
mov
adc
xchg
jbe
jmp
and
scas
inc
movsb
mov
std
out
adc
xchg
ljmp
inc
cmc
es
inc
mov
clc
fisubrl
call
scas
shrb
mov
mov
xchg
adc
mov
pop
std
into
ds
push
adc
mov
pop
shlb
or
sub
out
mov
or
lock
insb
jbe
push
add
dec
cmp
cmpsl
mov
cltd
inc
js
aas
aas
xchg
push
sbb
sbb
movsl
sub
dec
insl
push
mov
aad
xchg
aad
fistl
mov
je
add
mov
push
fstpl
jmp
lds
aam
fwait
test
cmp
push
xor
push
ficompl
in
cmp
out
xlat
mov
popf
mov
inc
cmp
lds
jecxz
sub
mov
fimull
sub
xlat
aas
jl
aam
repnz
leave
dec
cmp
fistl
and
inc
lret
mov
cltd
adc
in
nop
xlat
testb
push
test
pushl
pop
stos
je
imul
into
mov
push
int3
ror
pop
stos
pop
mov
popa
adc
sub
or
sbb
insb
outsl
sahf
movl
cwtl
lock
mov
push
mov
push
jns
and
xor
pop
cmp
inc
js
or
cmp
cmp
cmpl
jg
fisubrl
mov
xor
pop
in
hlt
mov
dec
imull
out
cmp
js
xlat
jae
push
aas
pop
insl
push
cmp
jnp
loopne
fstps
sti
stc
xchg
aaa
punpckhdq
mov
aad
mov
outsl
test
dec
fwait
pop
cmp
cs
fildl
cmpsb
inc
aam
cmp
shrb
jae
push
daa
in
add
mov
jno
mov
sbb
inc
inc
cmp
push
sti
sti
push
inc
ds
mov
in
fiaddl
pop
jmp
cmp
call
into
fdivrp
lret
add
rcll
ret
fsubrs
mov
movsl
or
sbb
add
cmp
and
push
xchg
clc
insl
insb
fnstcw
fldt
iret
mov
xchg
insb
in
mov
mov
pop
aam
scas
xchg
xchg
or
or
mov
cmp
in
repz
sarb
pop
iret
push
push
xlat
icebp
pminsw
inc
aam
insb
clc
pop
xor
icebp
repnz
jbe
cmc
mov
ret
pop
mov
pop
pop
cmp
movl
pop
cmp
mov
xor
dec
and
fwait
or
add
mov
fisttps
xor
push
inc
cli
push
arpl
gs
sahf
mov
sbb
xchg
out
stos
inc
xor
fisubrs
aas
sti
sub
inc
sbb
leave
xor
xlat
cmp
dec
jmp
push
inc
xlat
icebp
adc
into
cmp
lea
cltd
mov
popa
in
in
stc
sbb
mov
int
mov
loope
mov
mov
mov
cmp
pop
xchg
sbb
leave
stc
pop
adc
cmp
in
mov
mov
lock
cltd
mov
cli
loop
std
cltd
pushf
jnp
adc
ljmp
dec
inc
jg
or
mov
out
nop
inc
push
or
xlat
cmp
add
addr16
cmp
inc
sbb
adcl
cs
mov
mov
in
in
inc
test
test
and
sub
int3
in
add
repz
mov
xor
pop
loopne
lock
movsb
test
adc
out
xchg
dec
mov
nop
sbb
mov
das
inc
lock
mov
fsubr
mov
cwtl
stc
cmp
addr16
in
adc
adc
mov
push
pop
xchg
fstpl
dec
and
cltd
or
cld
aam
repz
and
rcll
pop
pop
inc
into
push
mov
mov
out
divb
sbb
call
add
fidivl
repz
das
pop
repz
shrb
fldt
aam
mov
sub
lods
pop
jp
add
pop
pop
dec
stos
call
pop
aad
and
jl,pn
das
bound
jmp
pop
ret
jne
rcrl
pop
mov
mov
pop
out
vunpcklps
pop
jo
mov
push
push
push
push
dec
lods
mov
movl
mov
push
repz
gs
pop
out
mov
cmp
mov
sbb
mov
cmp
cltd
xor
or
out
lahf
mov
mov
pop
scas
mov
daa
adc
mov
jecxz
into
cwtl
mov
xchg
test
sbb
fstpl
cli
js
xchg
sub
mov
aaa
cmp
pop
lahf
sarl
mov
sub
jbe
xchg
dec
mov
addb
push
jno
mov
pop
inc
out
pushf
dec
mov
fs
sub
pop
cmpsl
add
repnz
sub
jl
add
call
scas
inc
xchg
mov
mov
mov
pushf
jl
mov
dec
repz
cmp
adc
repz
xchg
cmpsb
mov
mov
mov
fsubrl
pusha
jg
pop
iret
gs
and
pop
flds
pop
sbb
div
les
mov
and
push
mov
lret
cmp
mov
fcomi
test
dec
mov
scas
pop
insl
dec
fwait
mov
movsb
mov
add
popf
xchg
out
jnp
jl
insb
mov
mov
sbb
mov
in
xor
je
xchg
mov
sbb
mov
inc
xor
pop
repz
cmp
pop
ds
inc
jl
mov
cmpsb
aaa
loop
pop
push
aad
in
out
add
fiaddl
xchg
mov
push
mov
mov
movsl
xorl
add
mov
popa
push
int3
mov
iret
xchg
outsl
jecxz
jg
imul
imul
jg
sbb
pop
xchg
loop
loop
push
mov
jecxz
push
sbb
dec
enter
test
push
sbb
repz
sbb
xlat
adc
mov
sbb
in
push
inc
lods
iret
popa
mov
mov
pop
shll
scas
inc
adc
mov
mov
xor
sub
pop
aas
inc
xchg
flds
inc
inc
test
addr16
js
es
mov
pop
std
outsl
add
sbb
push
adc
xor
jmp
jne
cmp
and
sahf
pop
push
ud2
fnsave
xor
in
cmp
jns
and
es
or
xchg
stc
pop
insb
xor
js
mov
and
dec
pop
lret
xor
mov
mov
js
fcom
test
dec
ret
push
xchg
jnp
out
movsb
gs
xchg
sub
stc
mov
pop
fstpt
or
jno
mov
jle
mov
xor
data16
jp
adc
insl
js
cli
icebp
pop
jmp
xchg
mov
clc
std
xchg
scas
sahf
sarb
jecxz
mov
cmp
jecxz
xchg
call
mov
pop
in
incl
jp
or
nop
xchg
stos
shl
pop
inc
or
sub
test
inc
cld
dec
in
aas
pop
loop
sbb
test
test
repz
stos
and
mov
pop
xchg
lret
inc
xchg
movsl
pop
mov
sahf
in
mov
sbb
sub
mov
jo
pop
jae
adc
and
gs
cwtl
dec
arpl
push
lea
jno
adc
xor
testb
gs
iret
pop
xchg
outsl
cli
inc
mov
push
inc
aaa
and
lahf
lock
pop
in
mov
pop
popf
adc
dec
leave
push
and
pop
adc
xor
popa
scas
movl
js
or
sub
pop
push
aad
ss
mov
jmp
adc
adc
mov
fsts
js
jl
fistpl
icebp
loope
jo
sub
push
xchg
stc
fs
fisttpl
mov
aaa
imull
and
into
jle
mov
xor
rcrl
lret
pop
sub
aam
add
inc
mov
orl
cs
lret
inc
pop
add
xchg
lds
repz
jnp
jp
sbb
fadds
fstps
add
dec
pop
and
mov
or
mov
xor
addr16
in
lcall
pop
mov
mov
faddl
or
test
mov
pushf
pop
jnp
shl
pop
icebp
cltd
sbb
and
fistpl
cmp
and
inc
inc
jno
jne
dec
and
lret
pop
mov
orl
mov
scas
insb
jge
jg
or
ds
lret
stos
imulb
mov
sbb
shrl
enter
sbbl
fsubr
daa
pop
xor
dec
lock
outsb
mov
scas
mov
pop
mov
jecxz
jo
jb
int3
xor
or
repnz
fwait
mov
xchg
cli
nop
mov
inc
inc
jo
sbb
pop
imul
pop
dec
mov
loope
dec
popa
stc
cwtl
out
test
pop
ds
cmc
xchg
pop
daa
add
sub
clc
jns
imul
inc
dec
cltd
popa
ja
stos
add
aas
cmc
and
icebp
cltd
inc
pusha
pop
mov
xor
lret
xchg
pop
inc
test
nop
mov
lret
xchg
add
fimull
fiadds
scas
icebp
push
out
sbb
pop
dec
js
sub
jmp
ret
lds
push
pop
popa
mov
or
and
sarb
stos
add
xor
mov
test
add
jnp
push
ds
mov
jo
xchg
mov
je
lret
pop
popa
cmpsb
test
fstp
sahf
aaa
scas
mov
icebp
jbe
sbb
je
imul
jnp
add
pop
shll
xor
dec
mov
mov
pop
push
movsb
xor
scas
lock
imul
or
loop
add
sbb
mov
cs
push
pop
adc
push
pushf
in
lods
jmp
test
std
mov
adc
pop
pop
int
sbb
pop
scas
pop
in
aad
lahf
test
dec
or
jne
cs
pop
mov
sbb
mov
loop
scas
out
mov
pushf
fmul
push
aas
mov
inc
pop
xor
out
add
pop
cmp
mov
pop
mov
imul
pop
clc
int3
jmp
cwtl
jg
ficompl
push
icebp
cld
mov
andb
test
pop
mov
xchg
pop
jbe
or
mov
add
fcomp
pop
in
adc
ret
mov
rcrb
test
outsb
pop
pop
and
add
adc
xchg
jo
pop
mov
iret
ja
pop
je
fistl
js
pop
enter
push
add
pop
outsl
pop
int
sti
test
mov
ja
pop
or
fdivl
push
dec
xor
mov
es
sub
mov
fildl
cltd
push
scas
sbb
mov
rcll
mov
sti
lahf
and
xchg
insl
bnd
rcll
push
mov
cwtl
les
and
push
imul
lret
pop
fidivrl
pop
dec
scas
or
xor
inc
fcomps
pop
jae
xorb
mov
xchg
fwait
or
das
jl
loope
or
cmp
push
pushf
subl
xchg
xchg
mov
es
cmp
cmp
into
int3
jo
pop
lret
call
mov
mov
dec
mov
mov
pop
dec
ljmp
mov
es
jle
cmp
fistpll
and
adc
pop
pop
lret
push
bound
out
adc
mov
sub
and
jle
sub
pop
int
imul
cli
mov
pop
stos
xchg
test
out
pop
xchg
push
std
test
hlt
or
sahf
jnp
mov
popa
xchg
ss
lds
cld
sbb
mov
pop
fucomp
repz
inc
jno
stos
scas
js
pop
xor
push
pop
mov
add
flds
loopne
fdivrs
mov
arpl
mov
pop
aas
leave
or
popa
mov
into
push
pop
push
je
push
cmp
pop
jnp
push
fldt
push
pop
and
pop
mov
mov
in
pop
lcall
dec
pop
jmp
xchg
add
cmpsl
cwtl
iret
fbstp
scas
lock
pusha
lods
cld
mov
xchg
popf
cmp
sub
scas
rorb
and
jmp
mov
nop
mov
inc
sbb
popfw
lds
pop
loop
push
or
clc
arpl
or
sbb
fs
mov
xchg
mov
dec
cmp
icebp
pop
fs
or
dec
adc
pop
movsl
jo
inc
xor
in
pusha
dec
scas
popf
pop
andl
pop
icebp
sbb
fcompl
cmpl
sub
inc
adc
xchg
mov
dec
jnp
xchg
imul
xor
and
adc
mov
xchg
sbb
lcall
sbb
jns
mov
jl
pop
jb
fwait
cs
pop
cmp
fidivrl
xor
arpl
jae
lcall
fcomps
fdivl
js
xchg
adc
lds
lret
leave
mov
insb
mov
mov
cmpl
movsl
mov
xchg
fnstenv
push
xlat
xor
mov
mov
mov
mov
sbb
test
in
lret
rcll
shll
arpl
cmp
cli
push
sahf
cmp
add
and
cltd
orl
negb
mov
scas
xor
js
addb
cmpsl
mov
pop
movsl
rcrl
pusha
cmp
lret
lea
enter
out
mov
sub
cli
imul
iret
fwait
or
dec
hlt
call
cs
cmpsl
ficomps
movsb
pop
lret
fstps
pop
stos
xchg
mov
dec
popf
sbb
xor
and
mov
xchg
jecxz,pn
icebp
imul
jle
sbb
jmp
and
xor
pop
push
xchg
push
pop
push
addr16
jne
insb
xchg
pop
inc
and
addps
mov
test
mov
pop
jne
mov
sub
fildl
pop
adc
lcall
mov
jmp
movsb
xor
mov
pop
xor
fs
cmp
jg
jg
sub
or
gs
mov
sub
lret
es
clc
aaa
dec
ss
subb
add
pop
sahf
sub
andl
jae
pop
lahf
fsubr
xlat
fstpt
test
repnz
leave
daa
das
enter
cmp
cmp
push
stc
pop
xor
pop
sub
cmp
test
inc
test
out
imul
inc
cli
mov
jo
push
aaa
xor
and
loopne
adc
dec
sarb
cs
into
push
lret
test
fdivs
push
outsb
or
inc
pop
or
jns
in
cld
pop
ja
fcoml
pop
into
mov
jo
pop
lea
adc
pop
in
xchg
add
popf
lock
scas
jg
arpl
mov
sbb
in
pop
loop
lret
pop
stos
fadds
sbb
pusha
mov
inc
pop
call
or
lret
test
xchg
mov
pop
out
inc
pop
pop
fcompl
mov
push
sbb
lret
cltd
lea
mov
mov
pop
fisubrl
gs
pop
ret
mov
test
insb
loopne
lahf
inc
sub
sub
pop
push
jecxz
mov
pop
mov
arpl
jecxz
mov
sbb
push
cld
out
push
cmp
stos
xchg
stc
jle
lret
sbb
cltd
and
into
and
jl
cltd
push
sub
fidivrs
xchg
out
mov
pop
add
lcall
imul
pusha
jns
mov
pop
and
lods
ja
pop
mov
imulb
rolb
cmp
scas
or
neg
imul
push
xchg
mov
pop
stos
mov
pop
stos
pusha
inc
rcrb
push
pop
das
push
and
cmp
or
loopne
stc
dec
mov
stos
mov
outsl
ret
xchg
inc
out
push
ss
pop
lret
cmp
mull
rcll
dec
cmpsl
sti
lret
mov
lock
int3
iret
pop
out
insl
fistpl
adc
mov
pop
enter
aad
sub
xlat
add
ficoms
jae
jl
sub
loopne
sti
pop
mov
adc
mov
adc
pop
aas
xor
in
mov
and
jno
jae
imul
es
ret
stc
mov
mov
sbb
adc
xchg
xor
je
add
and
enter
cmpsb
mov
inc
popa
push
test
mov
pop
adc
les
or
and
mov
sbb
andb
sbb
dec
sbb
jno
sbb
mov
cmpsl
incb
pop
adc
sbb
sub
xor
in
stos
pop
push
sbb
negb
fcompl
cltd
xbegin
push
push
pop
sbb
dec
push
pop
das
pop
rcll
inc
loopne
pop
in
jmp
sbb
pop
pop
fwait
mov
mov
int3
mov
jb
js
pop
stos
mov
push
fs
jp
push
xlat
dec
movsb
inc
rcrl
mov
jae
mov
inc
pop
jmp
in
xor
xlat
mov
clc
js
insb
sahf
adc
pop
push
mov
filds
scas
xchg
fidivl
pop
adc
jp
test
ficoms
and
xchg
jl
aad
add
mov
inc
inc
xor
ret
mov
pop
loop
orb
jle
add
dec
inc
outsl
cld
mov
mov
pop
fsubl
xchg
call
rcrl
movsb
add
sub
pop
cs
and
and
pop
mov
call
or
xor
lahf
cmp
movsb
jg
orb
adc
fs
sbb
int3
out
add
dec
scas
fwait
mov
enter
in
cmp
inc
sub
lds
stc
cmpsb
scas
dec
sbb
decl
adc
xchg
out
and
ljmp
add
jle
jl
xor
sub
aad
pop
xchg
xchg
adc
pop
lods
adc
xor
fwait
sbb
into
mov
jecxz
jp
pop
push
sbb
ret
enter
xor
aaa
lahf
jl
insl
flds
inc
or
mov
and
lods
addl
mov
jb
and
das
jbe
cmp
pop
mov
add
fucomi
push
pop
std
stos
mov
jne
in
dec
test
sarl
lret
scas
lret
dec
cmp
sbb
fdivrs
mov
mov
or
mov
dec
cmp
fsubs
mov
adc
cmpsl
jae
leave
jle
movsb
mov
dec
xchg
sub
push
jmp
fsts
int
jl
mov
cmp
lcall
mov
fists
mov
xlat
fnstsw
jb
pop
loope
jg
lcall
pop
pop
push
setbe
inc
push
cmpsl
dec
add
pop
arpl
aas
fstps
jb
int3
or
xorl
lea
xor
out
sub
sub
push
cmpsl
mov
leave
fadds
mov
lods
pop
jle
sbb
mov
cmpsl
fsubs
add
sbb
loope
dec
test
jmp
mov
out
testl
sub
lcall
mov
stos
in
xor
pop
sbb
xor
and
fwait
sarb
dec
xchg
mov
sti
mov
je
mov
test
out
jmp
dec
pop
jbe
add
out
pop
cmpsb
pop
mov
and
negb
dec
pop
push
sahf
adc
fld
cli
sarb
icebp
sbb
push
stc
jae
in
int3
lods
fcom
dec
fwait
or
jbe
pop
xor
incl
sbb
or
test
mov
inc
xchg
negl
enter
lahf
icebp
mov
mov
dec
lahf
mov
mov
pop
mov
orb
cwtl
imul
fists
mov
cmp
push
ss
pop
pop
in
xchg
or
pusha
sbb
fmulp
mov
jmp
push
fs
cmpsl
push
cmc
pop
daa
test
push
mov
mov
fcmove
cmpsl
add
and
push
out
push
jl
cmp
adc
in
fcoml
fisubrl
stos
repnz
mov
pop
mov
cmp
xor
mov
out
mov
imul
mov
push
out
xor
shlb
dec
inc
test
sti
add
adc
jnp
mov
xchg
bound
jnp
dec
leave
cmp
out
sub
xchg
or
and
pop
mov
mov
mov
push
cmp
enter
jecxz
adc
pop
js
push
ficoml
cmp
incl
movsl
jb
insb
cs
stos
sbb
aas
mov
mov
cltd
leave
negb
sbbl
ljmp
sub
popa
lcall
adc
mov
movsl
and
cmp
scas
dec
xchg
mov
stos
jmp
ja
repnz
fucomi
loope
mov
cmp
shll
add
add
subl
push
mov
adc
das
xor
push
inc
mov
jecxz
mov
adcb
pop
mov
orl
mov
mov
cmp
stos
scas
mov
mov
in
xchg
mov
adc
stos
jl
or
cmp
insl
fstpl
lea
pushf
mov
add
mov
mov
cmp
adc
inc
cmp
sahf
cmp
aam
xchg
sbb
imul
mov
mov
dec
enter
inc
pop
pop
pop
fistpl
sar
movups
insl
xor
fidivs
pop
pop
push
orl
pushf
and
std
mov
pop
clc
stos
mov
cmp
jb
push
xchg
mov
es
pop
movsb
inc
mov
xchg
aam
pop
fbld
jb
pop
cmp
ss
or
mov
push
push
jns
into
mov
mov
jecxz
cwtl
pop
in
sub
jp
rcrl
pop
or
sahf
cmp
cmpsl
adc
das
call
pop
mov
jg
push
mov
push
jno
push
shrb
jo
clc
pop
mulb
cmp
ljmp
and
cwtl
pop
fistpl
into
xchg
movsb
ds
call
repz
pop
iret
push
mov
ja
int
pop
inc
pop
pop
xchg
jmp
pop
mov
xchg
pop
adc
stc
daa
pop
test
pop
icebp
ja
fucomp
fcomi
pop
fdivs
repnz
pop
popa
aas
pop
mov
and
add
js
cwtl
fsubr
lcall
je
outsl
out
pop
orl
mov
pop
lea
int3
xchg
pop
add
pop
pusha
sarl
inc
jnp
xchg
pop
dec
add
sub
push
xor
cld
mov
mov
mov
into
shl
shrb
push
inc
and
inc
mov
fwait
pop
cs
xor
pop
les
or
enter
jb
in
aad
fs
sub
imul
pop
mov
mov
daa
xlat
jb
lcall
cmp
dec
lahf
lahf
xchg
lds
xchg
outsb
ret
jmp
add
push
mov
xchg
leave
push
xor
outsl
cltd
pop
pop
adc
adc
pop
pop
xor
dec
sub
jg
test
sbbl
adc
fsubl
sub
lahf
push
imul
push
call
jns
pop
fisubrl
incl
cld
in
sbb
in
jp
jecxz
pop
scas
cmp
fbld
out
das
scas
cld
xor
repnz
out
pop
loopne
add
inc
and
arpl
sub
dec
stos
push
fistpll
bound
cmp
mov
xchg
pop
cld
lods
addr16
pop
pushf
sti
add
sarb
xor
sbb
and
aaa
das
mov
inc
fldenv
pop
add
add
jne
out
lret
pop
ret
aas
xchg
clc
outsl
mov
je
adc
fstl
cli
pop
pusha
es
jo
sub
mov
sbb
xchg
mov
pop
add
jnp
xor
fldcw
mov
sub
dec
fldt
xchg
lds
iret
pop
lods
lock
dec
mov
sub
adc
push
mov
mov
mov
cmp
jge
addr16
sbb
inc
lock
pop
xor
ja
or
jo
pop
jg
cmp
mov
mov
fstp
popa
adc
dec
mov
imul
insl
jns
outsb
cld
in
scas
lea
cmp
fstpl
sub
shll
enter
insl
pop
xchg
pop
xor
dec
inc
in
faddl
sbb
or
pop
mov
inc
int3
jns
mov
inc
outsl
inc
adc
cmp
push
mov
arpl
imul
push
js
jmp
nop
test
ja
mov
add
mov
mov
lods
pop
dec
mov
jle
scas
push
pop
sbb
push
lock
lods
cmp
loopne
movl
faddl
jae
addr16
mov
pop
jns
add
pop
fcompl
lahf
xchg
je
sbb
mov
mov
insb
pop
pop
out
jl,pn
sbb
scas
dec
dec
cwtl
pop
arpl
pop
or
subb
push
pop
mov
jnp
sub
lods
ds
stos
pop
push
nop
or
les
cmp
sahf
imul
stos
xchg
lea
dec
mov
das
cwtl
int3
fiaddl
pop
fnstenv
push
jp
adc
pop
mov
orl
scas
xor
dec
mov
add
jl
mov
negl
push
fisubrs
mov
pop
inc
sahf
and
sub
fbstp
mov
sbb
xlat
stc
rcll
cld
push
sbb
dec
mov
in
push
out
xchg
add
out
rcl
pushf
mov
js
jge
xchg
xchg
faddl
adc
xlat
loop
pop
lods
adc
inc
sub
inc
sub
cli
or
stc
call
cmpsb
pop
mov
add
in
jecxz
movsl
outsb
sub
cs
dec
inc
dec
into
cmc
pop
pushf
or
jecxz
aad
sarl
pop
pop
inc
push
fsubs
scas
fs
or
frstor
add
dec
cmpsl
or
sti
xor
mov
addb
out
dec
pop
pop
jmp
adc
cli
pop
xlat
pop
imul
std
push
pop
out
add
pop
cmpsl
rcrb
sub
or
sti
mov
fdivl
push
cmpsb
jmp
pop
fiadds
movb
sbb
rcrb
popf
jp
hlt
js
xor
std
inc
je
and
pop
roll
clc
popf
cli
mov
dec
aad
fs
inc
js
aaa
mov
xor
sbb
xchg
jecxz
xchg
aas
mov
imul
mov
fsubr
nop
add
addr16
jnp
xchg
gs
mov
int
xchg
sbbb
add
mov
daa
inc
mov
jmp
sbb
pop
subl
jne
mov
dec
pop
pop
addr16
jl
movsb
pop
xchg
pop
cmp
lret
std
pop
mov
cli
clc
jno
bound
lcall
cmp
aaa
mov
sbb
fs
lods
or
or
and
rcll
push
insb
cmp
dec
pop
cmp
jae
pop
leave
and
xchg
daa
mov
mov
jge
xchg
cmpsb
inc
mov
push
pop
cmp
sti
lods
mov
pop
pop
pop
push
in
mov
fsub
test
pop
dec
jmp
jg
scas
push
mov
insb
mov
add
sub
or
fistl
ficoml
mov
jne
mov
jnp
inc
pop
xchg
pop
xchg
sbb
cmpsb
mov
push
fsubrs
add
jns
jbe
in
pop
push
xchg
xchg
jge
inc
in
adc
scas
or
popa
outsl
jne
sar
mov
fcmovnu
lds
jl
mov
jp
movaps
imul
mov
mov
pop
lret
pop
adc
or
movsb
das
pop
ret
adc
push
mov
aad
dec
outsb
dec
pop
cmp
ljmp
mov
mov
lret
pop
xlat
mov
psubsb
pop
inc
mov
cli
mov
out
mov
adc
sub
pop
mov
adc
pop
push
popf
jge
cld
sbb
imul
pop
pushf
mov
vmovaps
inc
mov
test
add
rcr
loop
mov
outsb
testb
enter
aaa
jo
pop
cmpl
sbb
mov
aad
push
mov
push
ja
and
les
sahf
cld
dec
lock
sub
pop
cmpsb
inc
rcl
push
mov
call
sub
mov
aam
add
dec
mov
lcall
jl
pop
push
lret
ficompl
pusha
mov
jmp
insb
jecxz
cld
pop
loope
pop
mov
cmpsl
jnp
icebp
pop
add
mov
into
adc
js
ret
mov
xor
sahf
jg
mov
sub
push
pop
jge
pusha
in
fdivl
adc
cmp
push
mov
pcmpgtd
dec
fidivrl
stc
dec
add
mov
mov
adc
lahf
pop
lret
sahf
jnp
mov
mov
mov
nop
mov
lea
mov
add
cli
cs
mov
sbb
lea
or
loope
lret
or
cmp
repz
mov
jns
or
push
cmp
aas
ja
or
mov
pop
sbb
mov
mov
test
sbb
popf
mov
mov
cmp
sub
fdivrs
or
mov
or
fwait
xchg
lret
ficomps
aam
scas
adc
in
pop
cmp
fistpl
sub
inc
jmp
out
daa
xchg
pop
jmp
scas
gs
ret
lret
fildl
mov
mov
icebp
lgs
daa
push
bnd
shlb
and
cwtl
jecxz
out
inc
pop
adc
jo
add
mov
popf
mov
cmp
stos
add
push
and
adc
pop
rolb
mov
dec
jae
dec
mov
push
sub
mov
movsb
pop
cmp
xor
jp
jo
push
push
sub
pop
test
cmp
pop
dec
bnd
out
push
jbe
pop
jl
xchg
mov
sti
pop
loopne
or
sbb
xchg
mov
dec
aad
add
pop
ljmp
lods
pop
adc
dec
imul
inc
int3
pop
and
mov
fistpl
out
add
or
sahf
iret
scas
mov
sbb
mov
jnp
mov
pop
in
stos
jl
mov
cmpsl
das
je
jae
repnz
addb
jnp
dec
mov
notb
sub
sub
pusha
pop
jbe
outsl
jl
iret
fisubl
sub
xchg
daa
out
cmp
stc
mov
dec
gs
test
ds
xor
insb
and
push
fucomip
sub
pop
nop
xchg
jo
inc
outsb
pop
cmp
jnp
pop
mov
jl
loopne
inc
and
jo
ds
add
push
push
mov
pop
insl
push
mov
icebp
or
out
decb
cmp
mov
mov
pop
jmp
dec
mov
pop
cmpsb
iret
pushf
fwait
rolb
jl
push
cmp
in
sahf
inc
mov
pop
test
sarb
hlt
lcall
cmp
test
push
xchg
sbb
les
stc
scas
jecxz
cmpb
sbb
jo
sbb
sahf
jns
mov
sbb
int3
inc
and
lds
and
pop
bound
into
hlt
arpl
jno
movsl
mov
xor
pop
lods
rol
ss
pop
and
mov
fwait
pop
jecxz
jle,pt
jnp
jo
and
cli
scas
xor
pop
pop
jne
mov
mov
pop
jp
mov
dec
mov
fcomi
add
repz
jge
pop
out
iret
xor
pop
and
sbb
pop
dec
mov
mov
or
mov
pop
xor
mov
cltd
outsb
xchg
dec
jg
and
and
add
dec
xor
shll
lahf
mov
pop
jno
das
scas
out
mov
adc
insb
sbb
xchg
test
mov
test
fcmovnu
lahf
mov
or
jns
pop
pop
hlt
dec
inc
pop
lcall
add
sub
bound
fildll
mov
js
lahf
lcall
jg
mov
pop
pop
int3
movsl
cmpsb
add
pop
lea
jg
insl
adc
jns
bound
xlat
iret
or
lahf
mov
fsubs
fiadds
sbb
rorb
xchg
push
xchg
mov
inc
push
pop
mov
xchg
lea
sbb
jo
sti
call
mov
and
jecxz
inc
pop
mov
lahf
lea
jns
test
ret
cltd
cmp
and
lcall
jge
xchg
out
sbb
mov
ja
adc
or
jg
cmp
scas
lea
subb
icebp
lahf
dec
gs
push
add
adc
or
jmp
dec
pop
fiaddl
push
out
ljmp
or
icebp
dec
jae
pop
and
loop
sbb
stc
adc
jl
adc
adc
mov
lcall
push
fnsave
fstpt
jl
push
lea
cmp
add
and
aam
mov
bound
iret
lock
stos
ficomps
cmp
ljmp
mov
jl
pop
js
cwtl
lea
jo
cmpsl
pop
cmpb
lock
sbb
inc
lahf
mov
pop
popa
addr16
adc
xchg
mov
push
leave
out
gs
shrb
hlt
pop
cmp
fcmovnu
sbb
test
mov
popa
ja
ds
lea
sbb
and
lret
add
pop
imul
dec
inc
scas
cmp
cmp
mov
or
mov
insb
icebp
mov
aad
dec
mov
xchg
mov
into
ret
scas
jg
add
sub
pusha
mov
mov
movsw
pop
ds
mov
pop
mov
pushf
ja
adc
testb
in
stc
cmp
inc
movsb
and
inc
ss
fnstenv
pop
in
push
out
repnz
movsb
addps
xor
fsubrs
scas
rcll
sbb
push
inc
js
mov
rcrl
mov
xchg
rcrl
gs
std
cmp
jbe
pop
mov
ds
mov
pop
cmc
rorl
xchg
inc
pop
mov
pop
rorl
out
leave
test
mov
js
loope
hlt
pop
pop
fadds
add
lahf
mov
push
bound
cld
scas
in
sub
testl
jp
and
pop
std
mov
mov
mov
out
int
dec
nop
rcrl
and
ss
cmpsb
or
or
test
inc
scas
ret
mov
clc
sub
ljmp
dec
pop
mov
add
daa
mov
mov
xchg
or
push
sub
int3
adc
loopne
push
pop
inc
insb
cmovg
or
outsb
rolb
int
pop
jae
pop
mov
sub
pop
inc
aaa
cmp
adc
add
pop
mov
fdivrs
test
cmc
pop
int3
ret
int
rclb
jecxz
push
xchg
mov
lds
int
int3
cwtl
dec
mov
sub
mov
addr16
jecxz
daa
mov
sti
and
pop
dec
sub
xor
cmp
pop
mov
ds
jo
sbb
push
mov
add
mov
jnp
inc
or
pop
pop
sub
mov
cwtl
lret
imul
rcrb
scas
jle
sub
sub
cltd
pop
in
ljmp
insb
fcompl
pop
dec
jecxz
repnz
sarl
daa
cmp
and
push
pop
fwait
pop
push
xor
sub
movsb
jl
lock
notrack
jo
pop
js
mov
or
daa
push
scas
repnz
hlt
xchg
push
xchg
clc
and
imul
pop
inc
jnp
cli
dec
mov
dec
fildl
dec
loopne
push
lea
outsb
call
in
bswap
loop
popa
scas
fstps
or
and
inc
popa
jnp
push
xchg
pop
std
inc
jne
xor
dec
cmc
mov
pop
cmp
cmp
dec
fsubrl
push
aas
mov
push
pop
lcall
clc
push
sti
and
dec
mov
mov
push
jecxz
inc
sub
rorl
in
or
fldpi
pop
aam
dec
imul
ficompl
dec
lods
popa
mov
lods
jbe
jmp
testb
sbb
jg
ret
jns
mov
and
mov
cld
pop
outsb
dec
sub
mov
jnp
pop
inc
aas
push
add
fcom
pop
add
aad
scas
or
cli
je
cmp
adc
pop
sub
loop
sbb
push
negl
push
and
mov
dec
int3
dec
leave
mov
dec
icebp
mov
enter
scas
fldcw
out
inc
xor
mov
jns
dec
pop
cs
inc
ficoms
mov
mov
mov
mov
in
pop
test
or
push
pop
lret
xorl
adc
jl
scas
sub
add
loop
stos
and
cltd
fistpl
jbe
mov
lods
aaa
ja
jge
mov
sti
orb
and
cwtl
mov
mov
test
ret
shl
pop
pop
inc
mov
movb
fnsave
hlt
fidivl
repnz
push
notl
xlat
add
shrb
add
lcall
xor
sbb
push
xchg
dec
push
pop
dec
sub
leave
ret
mov
je
adc
aad
out
sub
pop
lret
stos
in
mov
ljmp
mov
sbb
push
enter
aaa
mov
leave
call
and
mov
xorb
push
dec
pop
xor
aas
sbb
call
xchg
xor
or
aam
inc
mov
lea
ss
out
mov
rclb
mov
inc
mov
xor
dec
outsl
aas
daa
pushf
outsb
push
xchg
daa
shl
push
hlt
cli
iret
mov
popf
adc
sahf
scas
mov
mul
ja
sub
scas
add
ljmp
add
leave
dec
jl
fildll
shlb
je
fmull
dec
mov
cs
xchg
cmp
scas
arpl
inc
push
pop
sbb
jo
cs
adc
dec
pop
ss
mov
lds
loopne
ljmp
je
jnp
ret
cmp
cli
mov
ret
xor
dec
lods
jmp
mov
mov
addr16
ljmp
push
push
mov
pop
cmp
rcll
in
je
fstl
sbb
ficoml
scas
leave
cmp
sub
sbbl
pop
xchg
mov
adc
add
sbb
insb
mov
adc
jle
mov
pop
push
iret
mov
mov
fs
daa
insl
sbb
dec
lahf
cs
mov
mov
pop
imulb
dec
mov
call
sti
sbb
leave
fidivl
cmp
pop
lcall
aam
mov
pop
mov
sub
leave
dec
push
lds
repz
mov
push
adc
mov
add
sbb
arpl
lahf
rolb
insl
sbb
jl
gs
stos
in
xlat
push
adc
in
adc
lea
cmp
mov
dec
not
inc
pop
outsb
mov
cmp
mov
scas
cmp
aaa
mov
mov
div
repz
dec
mov
cmp
jnp
arpl
add
jl
cmp
fs
jmp
cmc
loope
cltd
and
test
daa
pop
rolb
mov
lahf
mov
adc
xor
mov
dec
fsubrs
stos
or
leave
pop
loop
dec
mov
fcoml
cmp
push
aas
pop
bnd
stc
lcall
sub
and
xor
pushf
icebp
xor
rol
lret
inc
xchg
or
aas
fldl
dec
stos
fwait
lahf
int
hlt
sub
subl
dec
scas
stos
cmp
and
xor
mov
cs
outsb
mov
ds
pusha
push
out
cwtl
mov
push
lock
repnz
cmpsb
cmp
sbb
cmc
out
xchg
ret
dec
jg
adc
outsl
xor
negb
push
mov
sub
xor
inc
mov
mov
add
aaa
inc
adc
xchg
mov
das
insb
imul
inc
push
inc
dec
mov
out
xchg
mov
mov
lds
stos
cmp
push
outsl
cmp
fwait
sbb
and
shrb
int
mov
or
mov
outsb
xor
mov
nop
mov
in
cmp
mov
and
mov
mov
cmc
adc
adc
mov
lahf
xchg
repnz
in
test
fmuls
lcall
pop
push
mov
enter
std
stos
lods
xchg
out
mov
cld
clc
lcall
out
insb
pop
out
sub
out
mov
lods
sbb
daa
and
xchg
push
add
jo
xchg
leave
das
cld
js
in
lods
and
rorb
out
mov
mov
lcall
pop
int
push
and
loop
cmc
mov
xchg
cmpsb
and
pop
sub
test
and
lock
aam
mov
sub
xchg
xor
or
pop
mov
push
sub
negb
sahf
xor
pop
mov
out
test
movlps
pop
imul
mov
arpl
scas
pop
jle
out
mov
iret
je
arpl
mov
insb
pop
pop
or
sbb
mov
inc
out
cmp
cmp
ljmp
adcl
test
and
enter
push
test
dec
scas
push
xchg
in
and
js
dec
scas
mov
mov
lods
mov
pop
and
aam
je
sti
out
repz
dec
lcall
arpl
lods
mul
lret
call
loopne
push
fistpl
xchg
int
cmp
test
jnp
pop
fistl
enter
or
inc
aas
sbb
mov
mov
mov
or
ficoms
jbe
test
push
sti
cmp
push
xchg
lods
pop
scas
jnp
test
mov
popa
dec
push
xlat
pop
cmp
loop
jp
fldenv
in
push
lcall
adc
push
inc
unpcklps
pop
out
xchg
pop
loope
cs
imul
movsl
mov
lods
cwtl
mov
dec
add
jo
inc
adc
das
iret
jle
jecxz
fs
pop
xor
stos
pop
mov
mov
adc
hlt
and
insl
fnsave
notb
loop
arpl
push
fadds
and
insl
cwtl
daa
push
les
movsb
sub
sbb
xchg
jmp
pop
sub
pop
outsb
and
jle
cmp
int3
sbb
jno
stos
pop
fdivs
sub
dec
mov
pop
stc
or
push
xchg
dec
sub
in
jmp
rorb
pop
pop
mov
shrb
pop
and
cmp
pop
cmp
xchg
inc
push
pop
loope
push
ja
dec
jp
push
bound
pop
jmp
xorl
sbb
jo
mov
out
pop
test
icebp
mov
pop
out
adc
adc
xor
clc
sbb
rcr
or
mov
addr16
in
fisttpll
clc
push
insb
push
jecxz
rcrl
cmp
cmp
cmp
cmp
rcr
mov
insl
outsl
mov
mov
xchg
adc
push
xlat
int
lods
jmp
enter
mov
sbb
sub
stos
gs
mov
je
shll
outsb
xor
cmp
cmp
pop
hlt
shrb
dec
cmpsl
pop
mov
xlat
xchg
int3
pop
ror
sub
jae
pop
pop
pushf
rcll
inc
jbe
pusha
or
push
lcall
adc
xor
call
pop
mov
push
mov
insb
pop
cmp
iret
mov
pop
jg
xchg
ret
mov
inc
imul
xchg
dec
pop
lret
xchg
decb
lcall
push
push
sbb
push
xor
xor
mov
jns
pop
sti
nop
aas
es
xchg
addb
in
xchg
push
scas
cld
xchg
inc
dec
mov
fimuls
lods
add
dec
mov
es
mov
push
xlat
mov
ja
xor
sbb
jne
mov
xor
or
jnp
stc
aaa
pop
adc
sbb
pop
pop
loop
cwtl
pop
lcall
dec
xor
pop
add
subb
pop
cmp
fistpl
sbb
xor
rorl
mov
sarb
aad
repz
pop
mov
cmp
and
cmpsb
ret
pop
cld
jae
out
gs
pop
and
inc
lret
loopne
xchg
xchg
lcall
xlat
mov
mov
mov
ret
jge
pop
jmp
xchg
cwtl
mov
ja
pop
pop
xchg
test
stc
add
fcmovnu
out
sbb
fisubl
mov
xchg
pop
or
mov
iret
inc
inc
mov
std
add
pop
inc
xchg
js
bound
cwtl
out
pop
jecxz
pop
push
mov
and
pop
dec
push
xchg
out
in
pop
jle
pop
dec
roll
pop
xchg
call
or
jnp
aas
pop
mov
mov
in
or
pop
sub
mov
ret
outsb
mov
call
jo
pop
mov
cmp
rcrl
loope
sub
push
sbb
and
xor
popa
insl
pop
ja
scas
mov
out
sbb
inc
mov
js
loope
push
push
scas
and
gs
das
in
lds
sub
adc
mov
pop
data16
push
clc
adc
sti
sbb
pop
inc
call
push
or
lods
pusha
adc
lret
pop
push
repz
pop
shlb
push
out
pop
xchg
push
inc
add
subl
pop
pop
and
pop
xchg
pop
mov
sbb
xor
mov
cmp
cmp
xor
push
outsb
cmpsl
xorl
pushf
lea
out
push
rcrb
sub
xor
repz
jge
movl
sbbl
loopne
and
jnp
cmp
pop
or
into
mov
jg
mov
nop
xor
pop
loopne
mov
mov
das
cmc
test
pop
inc
xchg
mov
pop
jle
mov
mov
out
lods
cmp
mov
jbe
scas
adc
pop
outsl
test
mov
pop
popa
repz
or
test
add
in
cmpsl
ret
mov
or
mov
push
pop
mov
xor
fwait
pop
cld
jg
popa
fists
push
loopew,pt
scas
xor
xlat
pop
sbbl
out
inc
and
and
test
add
inc
mov
add
cld
pop
mov
addb
sbb
push
pop
fisttpll
lds
and
pop
inc
xor
test
cmpb
test
scas
add
xchg
pop
pop
jno
jns
and
loop
mov
iret
popa
mov
mov
jae
mov
dec
leave
pop
lea
mov
test
mov
out
hlt
imul
mov
jbe
pop
push
fwait
incl
movsb
sbb
pop
scas
lahf
jmp
in
dec
mov
stc
xchg
dec
pusha
cmpsl
sub
fisttpl
mov
cld
mov
notl
pop
or
inc
mov
rcll
mov
out
mov
insl
lret
jo
pop
fcmovnb
movsl
mov
nop
jg
pop
pop
mov
xor
adc
inc
inc
cmc
jo
jbe
fldenv
mov
mov
push
pop
sbb
nop
mov
scas
jno
mov
enter
outsb
inc
pop
int
imul
int
mov
int
or
dec
imul
pop
mov
add
cmc
clc
call
dec
fdivrs
push
pop
out
dec
aas
or
push
adc
or
pop
xchg
dec
mov
xor
add
fcmovnu
rol
test
fwait
lret
sbb
test
lds
sahf
mov
and
inc
aam
mov
mov
pop
jne
push
or
subb
add
lahf
adc
arpl
jbe
jg
fists
cmc
add
adc
dec
adc
cmp
mov
pop
fwait
mov
enter
clc
pop
inc
push
adc
and
and
mov
cli
fisubrs
out
jl
into
in
leave
dec
pop
or
outsb
rcrb
ret
loop
call
push
jo
sbb
bound
adc
nop
lcall
repz
dec
out
pop
jae
pop
bound
jno
test
dec
enter
scas
fists
xor
shll
cltd
mov
pop
fdivp
int3
jecxz
cli
shll
xchg
xor
lods
pop
daa
mov
loop
pop
inc
pop
mov
fnstenv
dec
fwait
push
mov
pushf
cwtl
xchg
cmc
xchg
fcompl
fists
mov
test
xchg
cmp
pop
mov
sbb
jbe
xor
push
out
inc
xchg
out
pop
cli
push
aad
in
sbbb
repnz
rdmsr
jmp
dec
jecxz
sub
lret
mov
jle
lret
mov
cmp
mov
pop
enter
lgs
lahf
fcomp
loop
sbb
loopne
fmuls
cld
ljmp
inc
aad
fwait
jnp
jnp
mov
dec
nop
mov
test
add
lods
dec
insb
fld
pop
cli
sar
fs
ja
xchg
data16
lret
or
daa
addr16
pop
jle
cli
hlt
push
push
addr16
popf
mov
stc
cmpsl
jp
das
or
mov
inc
dec
pop
aam
mov
push
mov
orb
imul
sahf
push
pop
pop
add
pop
add
dec
test
push
ret
xor
mov
pop
bound
mov
addr16
mov
inc
pop
mov
or
lock
cmc
jg
je
cmpsb
sbb
pop
and
dec
pop
test
cmp
pop
movsl
daa
leave
clc
adc
arpl
adc
mov
pop
push
js
in
sub
xchg
lods
pop
mov
clc
push
sbb
mov
data16
xchg
mov
sbb
fisubrs
dec
mov
pop
xor
add
ja
and
dec
and
scas
add
mov
fs
scas
xor
cmp
fildl
ret
add
insb
addr16
add
mov
jmp
jp
dec
ret
js
sub
pop
pop
sub
fs
jle
or
xor
and
or
xorb
inc
dec
push
pop
fadd
jnp
pop
xchg
cmp
nop
daa
sub
fisubrl
xchg
mov
or
and
or
ret
insl
inc
pop
adc
cmp
lret
inc
stos
cld
pop
addr16
push
mov
add
push
std
mov
in
scas
mov
insl
mov
jmp
pop
jo
pop
loope
push
xchg
movsl
test
pop
dec
cwtl
cmp
add
mov
in
cmpl
rcrb
mov
int3
lahf
scas
xchg
mov
les
push
adc
scas
insb
call
sahf
mov
dec
dec
aaa
repnz
pop
inc
addr16
xchg
lods
icebp
inc
pop
adc
mov
fisubs
out
mov
inc
cmp
xor
js
ficomps
or
jae
cmc
lret
push
and
inc
imul
mov
pop
in
ret
pop
pop
stc
inc
je
jno
dec
pop
jl
dec
in
rorb
mov
test
sbb
mov
jl
mov
scas
mov
test
xor
jbe
scas
shlb
fisttpl
je
xchg
inc
mov
mov
popa
or
fcmovnbe
mov
sbb
add
std
fs
xchg
sahf
sbb
leave
xor
pusha
pop
inc
jo,pt
aaa
mov
jne
cld
push
mov
fcoms
outsl
pop
jb
cmp
and
loope
pop
lock
inc
dec
mov
sbb
xor
and
data16
je
test
inc
xor
imul
jae
xchg
jns
test
xchg
adc
pop
movsb
push
xchg
in
push
jecxz
sub
mov
dec
pop
hlt
int3
ret
and
xchg
test
xchg
cltd
mov
jns
insl
push
jg
pop
pop
push
pusha
iret
sbb
and
inc
pop
out
sbb
or
or
outsl
mov
xchg
lea
in
mov
cs
sub
pop
jnp
rcr
ja
push
pop
mov
pop
pop
add
incb
xchg
push
test
fists
ret
das
jle
mov
pop
mov
xchg
roll
ja
arpl
pop
in
push
jae
mov
add
js
fldcw
frstor
push
test
sub
xchg
cld
pop
rcrb
mov
sahf
addr16
mov
adc
dec
out
xchg
popa
stc
xchg
in
fistps
fistpl
cmp
arpl
out
pop
lds
sbb
inc
sub
pop
xchg
fcoml
push
pop
out
sbb
or
ljmp
mov
mov
arpl
or
stos
adc
out
pop
jle
fnstenv
push
movsl
xchg
mov
inc
jg
pop
mov
pop
pop
stos
sbb
bound
fidivl
pop
mov
jnp
sub
push
push
mov
adc
push
and
inc
repz
cmp
int3
mov
std
daa
pop
pop
mov
iret
add
mov
pop
cmp
jmp
pop
xor
pop
in
add
repnz
jo
test
pop
pop
lcall
pop
lea
jl
pop
lahf
out
pop
push
mov
fisttps
mov
pop
int
mov
movsl
push
pop
adc
fmuls
rol
adc
sbb
pop
mov
in
push
add
lret
cmp
cli
lods
fldenv
pop
outsb
jge
dec
push
sbb
add
nop
and
cmp
mov
mov
jae
dec
dec
mov
pop
push
push
jge
jl
lock
adc
into
ja
pop
jb
lods
addr16
aaa
sbb
jl
daa
outsb
aam
fldcw
cltd
jae
jp
mov
hlt
loope
daa
mov
mov
pop
push
pop
in
clc
aad
jbe
out
loope
xchg
adc
or
stos
icebp
pop
dec
dec
cltd
pop
pop
mov
andl
pop
mov
cmp
xor
test
xchg
je
sub
dec
iret
xchg
mov
mov
xchg
push
sbb
sub
pop
xor
add
rcrl
mov
and
jne
sahf
out
ja
pop
mov
pop
push
mov
inc
out
lds
sbb
pop
inc
push
lahf
pop
xorl
loopne
adc
push
pop
mov
jmp
clc
or
adc
notb
aas
mov
sbb
pop
push
ss
pop
aad
dec
pop
push
pop
mov
daa
mov
dec
mov
insb
and
dec
push
jns
jns
jae
mov
mov
mov
pusha
ret
pop
jl
jne
pop
je
sbb
fistps
xchg
mov
pop
mulb
popa
insb
mov
xchg
xchg
movsb
ja
and
arpl
dec
fwait
push
xchg
movsb
mov
fdiv
sbb
jmp
pop
in
mov
mov
mov
inc
cmp
xchg
pop
sub
lods
cmp
in
insb
dec
les
mov
sahf
int
pop
sbb
dec
pop
lret
jecxz
mov
cmp
movsb
pop
xchg
cmpsb
out
test
xor
pop
mov
jge
dec
pop
loop
int3
push
rclb
mov
mov
dec
pushf
lret
test
inc
pop
inc
movsb
pop
out
mov
in
fcompl
ficoml
jp
std
rol
test
call
adc
sbb
jge
jns
inc
mov
mov
push
dec
mov
dec
pop
mov
and
stos
jbe
add
leave
fdiv
nop
mov
insb
js
cld
xlat
and
mov
jns
fwait
mov
mov
mov
jae
int
jg
lahf
push
mov
jmp
out
add
repnz
gs
push
mov
shrl
gs
icebp
sbb
in
mov
pusha
outsl
out
cli
mov
or
int
loop
pop
test
mov
lahf
sub
call
neg
pop
jl
cwtl
lcall
test
repz
sahf
pop
push
movsl
test
cmpsb
adc
jns
loopne
fistps
mov
enter
mov
call
mov
cltd
pushf
popa
cld
mov
in
leave
rcr
mov
push
inc
mov
lahf
jmp
lret
xor
shlb
push
ss
ss
pop
push
negb
or
fcmovnb
in
movsb
pop
aad
cmp
shll
jp
pop
lret
not
push
mov
stc
mov
jmp
in
cmp
scas
adc
aad
xchg
sub
popf
fdivrs
pop
clc
xor
jnp
repz
ljmp
cltd
scas
cmp
mov
test
popa
ror
loopne
jne
mov
jo
cmpsl
mov
loope
mov
mov
ja
out
mov
std
sbb
jbe
push
sbb
push
in
inc
adc
aaa
test
mov
in
sbb
cmpsl
in
outsb
divb
fisubs
pop
cmp
xor
fmuls
outsl
xor
pop
pop
mov
adc
jmp
pop
and
pop
loope
mov
xchg
lret
pop
pop
call
lret
push
sahf
mov
cli
mov
cmpsb
sarl
lods
adc
add
inc
cs
or
fists
pop
pop
jb
sbb
sub
scas
mov
lods
repz
insl
pop
out
xchg
cmp
aas
in
es
jg
xlat
negl
mov
or
mov
sbb
dec
xchg
mov
test
pop
aam
std
push
dec
cld
pop
arpl
sub
pop
mov
mov
add
cmpsl
pop
or
mov
jb
outsb
test
mov
nop
aad
dec
mov
xor
push
fucom
mov
es
fwait
add
cmp
pop
sub
push
cmp
ret
ss
mov
sbbb
dec
pop
hlt
int
pop
mov
adc
inc
mov
mov
adc
pop
js
fnstcw
xchg
inc
mov
test
and
pusha
or
les
outsb
sub
mov
aam
pop
insb
mov
test
xchg
jp
inc
ret
mov
lcall
div
pop
cwtl
mov
loope
dec
or
sahf
pop
inc
pop
and
pmullw
sbb
rorl
fcoml
cmp
cmpl
lds
nop
dec
pop
cmpsb
pop
sbb
pop
inc
pop
mov
mov
imul
pop
push
and
addr16
lcall
dec
rcl
add
cmp
xchg
mov
pushf
mov
pop
mov
xor
lods
cmp
cwtl
push
cmpsb
adc
add
or
xor
pop
jae
and
pop
or
push
cmp
dec
loopne
adc
dec
fidivs
jns
repz
sub
test
sub
and
ret
jno
push
out
cmpsb
mov
push
gs
adc
faddp
in
and
inc
nop
adc
pop
or
cmpsb
inc
setg
push
mov
mov
add
inc
bound
std
pusha
mov
cmp
test
data16
js
mov
mov
jbe
inc
push
inc
dec
xchg
push
ret
xchg
popl
call
mov
cwtl
xchg
adc
out
sub
sbb
jbe
dec
repnz
jns
adc
dec
popf
xchg
lods
jno
sub
xchg
and
ja
in
and
adc
jbe
lcall
dec
cs
mov
and
pop
or
push
mov
les
xor
inc
mov
sbb
mov
outsb
pop
jmp
fcompl
pop
ss
mov
stos
or
pop
sbb
mov
repnz
mov
cwtl
push
mov
adc
pop
aam
mov
and
push
jno
insl
xchg
lret
adc
js
mov
cmp
push
push
loopne
cmp
jnp
adc
in
cld
pop
sarl
adc
mov
pop
shr
dec
cmpsl
inc
or
add
pop
pop
aas
call
jmp
les
push
pop
sub
and
lods
mov
and
out
lock
sub
test
setg
popa
adc
shll
pop
mov
mov
mov
fwait
lods
sahf
scas
push
mov
std
fcomps
sti
sub
pop
filds
cmc
dec
loopne
pop
jb
mov
loop
sub
int
pop
inc
lods
push
push
leave
es
or
xchg
movsl
pop
adcb
add
pop
xchg
scas
sbb
sbb
adc
jno
gs
test
sbb
xor
xor
pop
and
dec
xchg
scas
sub
int
out
cltd
jne
jl
cmpb
pop
inc
mov
testl
in
dec
std
push
cmc
jg
aaa
gs
pop
pop
push
movsl
cli
in
pop
jle
sub
or
inc
add
or
aad
xchg
es
out
outsl
pop
je
sub
cmpsb
pop
inc
pop
dec
sti
pop
fisttpl
pop
jne
int
push
or
pop
or
sti
mov
sbb
lret
mov
cli
inc
js
cli
sbb
ljmp
test
inc
mov
jmp
mov
jns
mov
dec
pop
xchg
testb
neg
sahf
jl
xchg
jmp
loope
test
pop
sub
pop
and
mov
pop
mov
sahf
scas
mov
pusha
fcomps
ljmp
dec
add
adc
into
pop
mov
or
inc
test
out
pop
or
inc
mov
pop
aaa
push
cmp
and
and
jno
cltd
scas
scas
mov
mov
mov
xor
ret
addr16
pop
mov
adc
cmc
dec
sbb
pop
out
mov
or
mov
pop
insl
dec
inc
xchg
cmp
cmc
fimull
out
add
scas
pop
fnstenv
sbb
push
jns
xor
pop
in
jbe
xchg
or
lret
mov
inc
jnp
push
jg
cwtl
xchg
mov
or
pop
es
ret
in
pop
push
adc
sub
push
pop
add
lock
or
mov
add
cmpsb
movsl
pop
pop
pop
jl
adc
or
push
dec
pop
loope
in
mov
sbb
pop
and
xor
lret
jae
cli
mov
jle
add
mov
je
xchg
sbbl
sbb
pop
jb
scas
xlat
or
sbbl
xor
and
xor
in
push
popf
pop
or
lret
mov
xchg
inc
sahf
jns
pop
cld
in
sbb
js
pop
pop
fnstenv
pop
cld
add
dec
xor
fimuls
data16
jmp
fistpl
and
xchg
jns
pop
imul
inc
pop
out
add
inc
sub
sub
push
jmp
mov
or
ret
and
cmpsb
insl
sbb
push
or
pusha
mov
mov
xchg
pop
dec
push
xchg
test
mov
loopne
lds
pop
inc
sub
sbb
xchg
mov
test
fldt
arpl
negl
or
scas
fisubl
stos
dec
popa
pop
inc
outsl
cwtl
cld
jo
rolb
inc
push
inc
enter
or
pop
jno
lods
testl
pop
xor
sub
mov
mov
fsubrs
pop
cs
test
scas
shlb
into
lcall
push
sub
xchg
movsl
imul
pop
sub
pop
aas
movsb
les
mov
outsl
adc
xlat
cmp
inc
fs
les
jle
pushf
jge
pop
mov
xor
loope
and
jne
rol
pop
in
jl
scas
adc
mov
movsb
fisubrl
or
pop
jb
in
push
pop
pop
xor
push
mov
jo
sub
scas
lods
cmp
or
inc
pop
pop
jnp
sbb
mov
or
sub
mov
ret
or
cmp
pop
sar
addb
adc
cwtl
pop
cmp
pop
lods
data16
leave
icebp
pop
pop
shrb
cmp
scas
push
mov
sarb
pop
stos
cmpsl
pushf
das
data16
add
movl
cmp
pop
push
or
jns
in
xor
scas
dec
push
push
pop
aam
ret
push
rorb
cmp
scas
cmp
jecxz
or
sbb
jg
mov
out
popf
push
into
inc
stos
pop
or
xor
pop
repz
push
aad
sar
rolb
cmp
push
out
out
pop
lahf
mov
pop
das
adc
jns
inc
or
dec
push
lahf
shl
stc
sbb
gs
mov
fcmovnbe
movsb
sub
scas
adc
cmp
mov
jl
push
mov
mov
xchg
or
in
xor
js
inc
mov
sub
mov
scas
lret
jg
cmp
mov
xchg
mov
js
insb
adc
add
pop
pop
pop
filds
test
cli
ss
push
xlat
adc
in
mov
clc
bswap
mov
pop
jo
fcoml
pop
jp
add
aam
mov
adc
xlat
pop
pop
xchg
clc
adc
mov
and
jl
fxtract
testb
inc
mov
sti
jle
mov
aas
xor
push
fisubl
pop
jb
mov
dec
decb
negb
adc
and
movsl
and
cmp
lahf
mov
mov
mov
mov
fistpl
sahf
inc
sbb
nop
cs
cltd
leave
cwtl
cmp
add
in
or
gs
push
sbb
ljmp
sub
fcmove
lock
jo
scas
jae
fiaddl
out
adc
lcall
mov
cltd
imul
mov
xchg
pop
cli
dec
xchg
stos
movsl
mov
dec
out
adc
push
push
pop
cmp
jo
icebp
xchg
jmp
dec
mov
xchg
jae
dec
cmpsl
mov
mov
or
dec
sbb
sti
adc
ficompl
jecxz
inc
fisubrl
stos
fdivr
inc
add
jecxz,pn
lret
mov
cltd
rcll
fs
inc
pop
pop
fwait
pop
adc
sbb
inc
lahf
ja
cmp
bound
lret
lcall
sbb
cmc
or
insb
lahf
jl
mov
mov
xchg
jmp
push
dec
pushf
rclb
rolb
xchg
cmpsl
mov
scas
xchg
sbb
pop
add
add
pop
sub
sub
jns
pop
hlt
and
xor
jge
push
dec
icebp
dec
adc
test
imul
stc
jg
pop
ljmp
pop
cs
aas
scas
mov
mov
jge
ss
sbb
pop
lock
or
outsb
repnz
fdivs
xor
leave
pop
and
mov
into
cs
lea
sahf
sub
sbbb
cli
pop
xchg
push
push
std
dec
daa
pushf
jbe
pop
bound
sbb
inc
out
in
adc
fstpl
icebp
stos
pop
popa
adc
fistpll
and
xor
rol
mul
outsb
push
pop
pusha
pop
fwait
stc
pop
push
test
subb
pop
test
xor
inc
mov
fsubp
cld
pop
cmp
jl
lea
pop
xor
adc
push
dec
cmpb
leave
mov
inc
lret
scas
sarl
inc
pop
xorl
pop
cmpsb
xor
sub
add
dec
pop
test
hlt
cmpb
lret
ds
je
dec
xor
adcl
rcrl
adc
pop
sub
sub
dec
lahf
inc
aaa
sbb
pop
adc
icebp
bound
insb
jb
mov
test
mov
xor
inc
and
bound
dec
or
call
pop
fcmovu
xchg
loopne
popf
pop
xor
lret
das
mov
xchg
xor
fists
jmp
popf
arpl
mov
xchg
shll
dec
fs
call
cmp
mov
jl
mov
rcr
popf
lret
jae
fstenv
pop
add
popa
mov
inc
xchg
push
movl
adc
xchg
jge
mov
pop
push
jp
sub
add
inc
or
rclb
icebp
fstpl
dec
mov
pop
clc
pop
adc
mov
loope
mov
xorb
mov
lahf
sub
mov
or
dec
fimull
xchg
and
roll
cmp
cltd
pop
or
mov
pop
mov
sbb
scas
mov
roll
add
push
dec
shll
push
lahf
pop
fs
xor
and
sub
adc
mov
int3
popf
or
xor
cwtl
cltd
add
sbb
repnz
mov
pop
divl
mov
pop
dec
mov
cmp
out
daa
mov
adc
pop
adc
int3
pop
pusha
pop
mov
xchg
and
out
shl
dec
aad
mov
pop
dec
mov
out
xchg
dec
push
in
daa
pop
pop
sbb
jle
loope
loop
adc
jae
pushf
jecxz
stc
call
and
pop
pop
mov
arpl
xchg
push
ret
or
and
in
outsl
cmp
sub
mov
jne
sbbb
aad
cmp
arpl
scas
lods
cmp
inc
fmuls
out
inc
xchg
inc
cmp
pop
inc
fbld
xchg
negb
sbb
repnz
xchg
jno
mov
mov
fisubl
pop
test
inc
and
jb
sbb
out
out
add
imul
add
scas
lock
fldcw
rcrb
xor
repz
xlat
pop
test
ret
fs
adc
fcmovnb
movsb
sub
out
mov
and
pop
pop
shrl
es
sbb
shrb
fdivrp
js
pop
dec
pop
int
fcompl
pop
and
and
popl
pop
push
inc
lods
sar
inc
pop
jno
xorb
bound
adc
fwait
pop
int
inc
mov
pop
and
push
cmp
out
cmp
pop
fwait
scas
mov
jb
xchg
lods
int3
xor
sub
mov
flds
add
jp
pop
scas
xchg
pop
xor
jb
pop
sbb
cmp
aam
ljmp
push
ret
in
pop
stos
cmp
pop
cmp
cmpsb
fstl
addr16
push
addr16
xchg
nop
pop
stos
lds
arpl
insb
xor
in
mov
clc
out
sub
clc
push
stos
mov
out
mov
cli
ss
sti
fadds
push
add
or
xchg
pop
pop
sub
pop
pop
push
xor
ja
and
out
push
inc
in
dec
mov
adc
test
mov
push
call
das
sbb
out
add
loop
jmp
cmp
push
js
pop
lods
daa
inc
mov
jns
out
repz
sahf
je
rorb
pop
jns
int3
cmp
in
mov
imul
pop
dec
mov
push
scas
insl
mulb
xor
cs
cld
sbbb
fisubrs
xorl
push
push
xchg
pop
loopne
scas
es
xor
jge
pop
xor
imul
mov
ficoml
adc
xor
xlat
sbb
pop
jl
xchg
xchg
mov
and
xchg
int
pop
adc
cmp
pop
pop
push
xor
stc
aad
in
pop
inc
into
inc
dec
mov
rol
pop
mov
push
pop
pop
jno
pushf
loopne
cmp
pop
mov
es
out
inc
xor
add
scas
lret
cmpsb
call
pop
not
inc
dec
cmp
pop
push
lods
ja
cmc
das
leave
jns
in
and
sub
add
ljmp
dec
mov
and
fwait
popf
mov
mov
lret
or
xor
dec
mov
inc
fnstsw
jnp
fsubs
call
lcall
arpl
lods
mov
pop
pop
lcall
cmpsb
lahf
or
insl
out
fisubrl
sub
cmc
loope
mov
push
lret
les
add
pusha
scas
jge
pop
jns
test
and
js
loope
xchg
popa
pop
inc
das
dec
jne
pop
dec
jecxz
sub
push
sub
mov
add
imul
xchg
add
inc
ficompl
stc
sub
enter
rcll
pop
adc
fadd
jbe
pop
xor
js
xor
mov
je
push
int
das
test
fwait
xor
push
dec
jae
jmp
xlat
pop
insl
or
pop
pop
aaa
movsb
out
ja
fists
in
xor
jl
les
lea
and
mov
pop
pop
mov
mov
scas
rcr
fwait
cs
pop
lret
or
int
xchg
sbbb
xlat
es
mov
outsl
mov
shr
or
add
xor
pop
jge
xchg
cmp
in
pop
in
sbb
out
mov
test
mov
in
pop
les
jo
pop
in
sbb
arpl
daa
int3
pop
push
je
rol
jns
mov
lret
leave
jnp
and
inc
imul
sub
icebp
mov
pop
lahf
mov
mov
shrl
daa
js
lods
fisubrl
xchg
mov
arpl
cmp
test
push
inc
out
jbe
pop
inc
jno
loopne
outsb
into
and
mul
jmp
inc
push
xchg
push
pop
movb
cmpsl
lret
pop
lcall
jne
int
xlat
into
das
cwtl
sub
pop
in
stos
and
push
fs
pop
sub
pcmpgtd
push
sbb
insb
pop
insl
or
cld
pushf
fistps
out
pop
dec
cmp
icebp
pop
and
adc
or
pop
outsl
pop
fmul
arpl
pop
mov
cmp
or
inc
add
icebp
pop
or
dec
sub
repnz
xchg
ret
cmp
mov
stos
shlb
dec
mov
jecxz
pop
std
pop
bound
inc
je
jnp
mov
dec
sub
sbb
in
fsubrl
cmc
fldenv
pop
ljmp
pop
cmp
push
mov
cwtl
repnz
repnz
fs
lahf
adc
mov
cmp
jmp
jl
add
movsb
mov
add
ds
mov
pop
cmp
or
in
pushf
xchg
mov
movsl
push
xchg
dec
insb
iret
test
sbb
sub
push
xchg
cmp
mov
mov
mov
push
in
stos
jno
mov
add
cmp
loope
mov
fsts
pop
mulps
push
test
fcomps
adc
push
daa
mov
addb
icebp
pop
in
cld
jle
cmp
pop
jae
xchg
mov
pop
mov
jmp
mov
int3
lea
aaa
or
mov
adcl
xor
fnstsw
mov
jle
fstl
jmp
ss
push
ljmp
push
jns
pop
mov
dec
sub
in
adc
loop
aas
pop
mov
jmp
arpl
sbb
decl
jge
mov
adc
bound
fildll
adc
jo
adc
jbe
cltd
inc
repnz
out
xchg
std
stos
jmp
lds
cwtl
add
scas
mov
aad
or
and
iret
ljmp
mov
popa
sete
pop
aam
mov
pop
mov
cmp
jae
jo
cmpsb
int
sub
mov
movsb
push
imul
cmp
orb
movsl
cmpsb
jp
xorl
sub
popf
shlb
jge
mov
das
pop
pusha
mov
dec
pop
testl
imul
sub
popf
pop
pop
shl
add
or
mov
and
pop
sbb
mov
js
sub
aaa
push
dec
pop
mov
pushw
inc
les
cmp
add
cmp
sbb
inc
adc
jecxz
sub
or
fiaddl
cs
jb
fidivrl
add
adc
int3
fnstcw
je
inc
sbb
jb
ljmp
cltd
test
ret
lea
cmp
cmp
roll
dec
in
mov
push
aaa
out
mov
imul
stos
cmpsl
scas
mov
xchg
add
fstps
gs
dec
lea
lcall
mov
fcompl
push
inc
scas
xor
stc
mov
add
pop
add
mov
push
std
push
popa
sti
pop
testb
pop
mov
or
sbb
test
lret
addr16
dec
xor
cli
das
fcmovnu
rcrl
insl
xchg
pop
adc
cltd
push
cmp
cmc
cmp
cmp
lock
out
mov
cmp
push
xchg
mov
fistps
ds
mov
lea
pop
repz
cmp
loopne
add
push
fwait
mov
xor
jo
mov
mov
mov
dec
pop
arpl
js
dec
dec
or
call
xchg
sbb
jmp
orl
xor
sahf
dec
call
mov
bound
mov
icebp
mov
movsl
jno
xchg
mov
popa
xor
mov
cmp
jb
sbb
fidivl
mov
fisttpl
outsl
jo
mov
cmp
iret
arpl
js
push
inc
in
and
mov
xlat
fwait
mov
push
cwtl
add
adc
fs
arpl
out
cmpsb
cltd
cmp
stos
sbb
in
jmp
in
mov
pop
fisubrs
or
adc
js
loop
stos
cmp
clc
iret
adc
repz
lahf
xchg
shlb
fiaddl
les
ret
mov
xchg
mov
adc
popa
add
jl
repnz
inc
push
data16
cmp
or
movl
mov
out
test
mov
ljmp
lret
cmp
shll
mov
arpl
repnz
or
push
mov
jecxz
mov
pushf
pop
pop
std
arpl
mov
sub
addr16
sbb
xor
mov
lret
out
cmp
mov
fcoml
mov
jmp
jg
pop
pop
insl
std
xchg
sbb
dec
or
addr16
hlt
stos
test
fistps
inc
push
scas
out
xchg
jnp
jge
pop
stos
int3
mov
sub
or
mov
push
ss
cmc
pop
cmp
jecxz
sub
out
push
jo
inc
mov
dec
adc
insb
sahf
cmp
mov
imul
sub
pop
push
fisubl
mov
jbe
jns
arpl
js
add
loop
pop
inc
scas
lahf
push
es
pop
daa
aad
mov
gs
scas
repnz
lock
mov
cmc
adc
pop
mov
fs
push
jne
xor
mov
out
and
or
lcall
stos
cmp
push
and
pop
xchg
push
sub
not
les
pop
dec
push
push
and
fcoms
pop
pop
add
push
xchg
and
mov
jmp
int3
adc
adc
mov
pop
lods
sahf
arpl
lods
push
mov
push
fldenv
aad
pop
dec
movsb
inc
mull
pop
pop
outsl
mov
fwait
movsb
pop
cmp
adc
mov
sti
jmp
jno
dec
pop
call
inc
or
sbb
mov
mov
inc
pop
pop
iret
push
dec
xlat
or
lret
shrb
sub
sti
clc
js
pop
inc
or
adc
ss
loope
pushf
push
stc
push
ficompl
sbb
sbb
inc
jnp
bound
ljmp
insl
pop
ret
dec
mov
xchg
pop
into
fcmovb
dec
add
dec
fisubrs
in
stc
popa
sub
jecxz
mov
cmpsb
push
inc
pop
add
add
or
push
lods
ds
push
sub
aam
cmp
pop
adc
sbb
clc
arpl
dec
movsl
pop
lods
mov
fsubr
push
int
fldt
mov
add
or
mov
shrl
jb
mov
mov
dec
sub
cmp
mov
sub
scas
dec
xor
stos
lods
mov
push
pop
lea
imul
mov
mov
hlt
or
cmp
pop
cmovnp
sub
scas
rcrb
mov
ret
loopne
xor
pop
mov
lahf
stos
ds
inc
pop
sbb
insb
inc
xchg
adc
xor
cmp
jmp
mov
mov
inc
leave
push
and
pop
cmpsl
shr
aas
xor
movsb
arpl
inc
push
pop
daa
add
cmc
cwtl
out
push
mov
xchg
adc
jb
sahf
jle
and
lea
inc
pop
iret
dec
xchg
cmp
xchg
pop
pop
cltd
faddp
pop
imul
ret
fnstsw
aam
ss
mov
repnz
pop
je
dec
sbb
xor
out
mov
push
int3
pop
cli
loopne
movsl
xlat
push
addb
pop
ja
fmull
push
loope
add
aam
mov
test
pop
lock
pop
mov
repz
pop
or
pop
jecxz
es
test
jns
dec
stos
cltd
test
or
pop
cs
repnz
pop
xorb
add
sbb
cmp
cmp
or
push
cmp
pop
mov
mov
lahf
sbbb
cs
cmpsl
lds
xor
adc
adcl
sbb
xor
jmp
test
loop
stos
pop
cmc
xor
add
inc
jnp
repnz
cmp
add
cwtl
adc
fwait
jecxz
incl
adc
popa
add
lods
cmp
lret
and
andl
add
fistpl
das
mov
outsb
pop
out
arpl
jge
pop
add
ljmp
cli
inc
and
mov
xor
jns
push
outsl
cld
dec
cmp
sarl
loope
push
repz
xor
dec
sub
fmull
out
push
and
movsb
mov
in
bound
pushf
repz
shll
mov
ljmp
mov
stos
cld
inc
and
sbb
pushf
add
daa
xchg
mov
mov
inc
sub
fidivs
push
lahf
jge
and
scas
sbb
cmc
mov
inc
enter
push
scas
les
pop
data16
xlat
adc
jo
jp
pop
or
cltd
stos
ds
xchg
jnp
cli
mov
mov
mov
pop
add
push
sub
pop
stos
or
nop
cmp
add
leave
pop
pop
adc
dec
pop
sbb
movsl
mov
mov
push
mov
cmc
push
pop
aad
addr16
js
add
cs
sbb
fcomps
mov
in
mov
pop
pop
fildll
and
xor
pop
out
fidivrl
pop
adc
iret
pop
sbbl
mov
mov
push
and
cltd
movsl
jmp
out
and
xchg
xor
sbb
je
rcll
mov
dec
xchg
es
pop
push
outsb
arpl
bound
fstps
mov
cwtl
lock
push
and
sbb
leave
pop
push
mov
jp
lret
pop
cltd
inc
test
data16
or
mov
xchg
pop
dec
into
mov
xchg
jecxz
push
xchg
and
mov
or
jnp
inc
dec
adc
xchg
mov
push
sbb
lods
sub
pop
or
inc
pop
cli
dec
jle
mov
outsl
adc
jp
xchg
mov
pop
je
xor
jg
sub
pop
in
data16
aam
out
jecxz
das
sub
sub
add
fs
jp
rcrl
sbb
leave
lret
inc
sbb
aaa
pop
data16
jbe
int3
pop
sub
and
dec
jns
sub
pop
inc
push
insb
std
shrl
cmpsb
pop
sub
and
push
bound
xchg
cltd
sbb
mov
stos
add
test
mov
jp
or
mov
jmp
nop
cld
mov
cli
idivb
inc
mov
pop
mov
inc
sub
imul
emms
mov
mov
xchg
clc
adc
pop
loop
lret
add
pop
xchg
and
mov
fsubrs
pop
test
cmpsl
mov
pop
mov
lds
pop
aad
pop
jae
sub
mov
fildl
sub
cmp
add
xchg
dec
or
je
in
xchg
mov
pop
cmp
test
fstl
ficomps
xchg
cmp
sbb
cmc
subl
dec
in
fstl
lret
ds
add
push
xor
or
add
lods
sub
mov
loop
inc
push
divb
ffreep
out
adc
aaa
pop
fadds
mov
adc
pop
jmp
mov
popa
jae
stos
div
or
movsl
sub
push
bnd
sub
call
pop
jmp
adc
fdivp
or
mov
add
push
jae
inc
lcall
dec
les
test
lahf
pop
stos
outsb
adcl
pop
cld
enter
xchg
icebp
pop
xchg
lret
cli
lahf
mov
xchg
insb
aas
mov
pop
rcl
mov
pusha
lea
repnz
mov
cld
mov
mov
push
jb
pop
outsl
mov
pop
pop
xchg
dec
jg
xchg
in
js
pop
hlt
add
inc
sub
or
imul
mov
push
jns
pop
shlb
xor
ja
dec
ljmp
test
mov
xor
and
sbbl
adc
inc
fimull
xchg
mov
sbb
loop
das
scas
lahf
jecxz
int3
fcomi
xchg
xchg
cmp
inc
dec
pop
or
cmp
pop
pushf
insb
call
arpl
dec
jns
push
mov
pop
dec
fcompl
pop
iret
arpl
mov
orb
xor
jo
nop
mov
xchg
jecxz
adc
dec
xlat
mov
xor
sub
sbb
cli
mov
and
cmp
aaa
xchg
cs
arpl
inc
jb
pop
in
adc
pop
xchg
pop
pop
call
mov
cmp
xor
cs
mov
cmpsl
mov
xchg
jl
pop
push
ss
or
daa
jbe
out
in
dec
inc
inc
pop
and
mov
pop
mov
out
lods
xchg
fsubl
in
test
mov
cmc
jns
xor
push
pop
push
jg
pop
xchg
push
inc
pavgw
scas
dec
test
or
and
pop
jecxz
bound
fiaddl
int
pop
xchg
mov
fwait
pop
mov
inc
xchg
mov
inc
lods
inc
and
cli
ret
test
mov
inc
pop
jg
in
cmp
dec
xor
jp
xchg
clc
loop
insb
mov
pop
mov
dec
pop
bound
rcrb
lcall
repz
icebp
pop
adc
xor
push
cmp
jno
gs
xchg
lret
push
sub
and
pop
jge
loop
frstor
popa
stos
in
shrb
pop
push
dec
stc
shll
shll
repz
jae
xchg
pop
ja
push
into
in
pop
rcr
inc
adc
xor
pop
jp
pop
jae
andl
jmp
stc
pop
mov
mov
and
in
mov
jns
xor
fisttpl
pop
xchg
imul
cmp
out
pop
dec
subl
xchg
in
stc
out
push
movsl
mov
lock
push
sub
mov
or
pop
into
aad
cmpsb
popf
mov
mov
xchg
mov
sub
cmp
cmpl
adc
cmp
fs
cmp
hlt
loope
cmp
mov
call
push
js
outsb
pop
es
sti
in
push
xlat
add
pop
imul
push
fwait
push
stos
mov
loop
pop
jp
xor
dec
xor
dec
mov
sub
pop
sub
mov
sbb
jg
dec
sbb
loop
cld
dec
outsb
pop
testb
add
fists
call
mov
pop
mov
or
fdivl
xor
mov
xor
and
pusha
ficomps
dec
je
adc
enter
sub
add
mov
popa
jo
fwait
movsl
pop
pop
pop
mov
leave
add
outsb
add
lret
daa
fstl
adc
cmpsl
repnz
and
sub
pop
in
mov
mov
mov
test
xchg
test
sub
push
cmpsb
cld
xchg
cmc
jp
add
and
mov
cmp
test
fldenv
pop
mov
lea
inc
ljmp
pop
imul
decb
popa
insb
mov
xchg
je
dec
cmpsl
pop
add
arpl
out
out
xchg
sbb
rol
enter
rclb
mov
int3
outsb
loop
dec
fldenv
dec
pop
lods
lret
ds
std
aam
ja
and
adc
stc
daa
sub
sub
adc
lret
ljmp
or
or
aad
pusha
insb
jmp
in
ja
lods
mov
add
or
clc
or
test
jl
out
adc
cmp
cmpsb
outsl
out
mov
pop
xchg
pop
out
popf
es
addr16
in
jae
sbbb
out
xor
movsb
pop
ja
push
js
mov
sub
inc
rcrb
stc
ss
or
arpl
jl
mov
pop
add
and
mov
sub
sub
test
jg
mov
cmp
test
lock
mov
xor
and
mov
pop
imul
sub
sbb
inc
jle
push
xchg
in
lahf
xor
pop
mov
mov
mov
pop
xor
jnp
cmp
dec
xlat
pop
out
arpl
dec
mov
das
mov
sti
jns
mov
lds
imul
xchg
lahf
lahf
inc
or
int
mov
mov
xor
testb
mov
or
push
push
mov
inc
lahf
push
cmp
shl
sbb
aad
int
xor
sub
xchg
sbb
das
loope
mov
mov
pop
sahf
and
flds
out
push
je
pop
jne
pop
out
pop
shll
jmp
rcrl
fistl
mov
pusha
loope
sub
xor
aaa
add
adc
dec
push
pop
leave
push
ret
repnz
sub
jo
enter
push
pop
loopne
ljmp
xchg
pop
ljmp
push
mov
pop
sti
xor
xchg
adc
sahf
pop
int3
ljmp
mov
xor
and
xchg
inc
enter
mov
sar
decl
lret
lea
cmp
jl
pusha
pop
rorl
loope
push
xchg
pop
in
popa
cltd
jo
pop
ficomps
iret
fcomps
cmp
ja
mov
fistps
les
sbbl
call
repz
mov
movsl
iret
inc
xchg
or
mov
jecxz
pop
xlat
scas
add
dec
mov
andb
sahf
pop
add
xchg
add
fldcw
fbstp
das
sbbb
mov
fsubrl
or
popa
adc
lcall
pop
pop
xchg
pop
add
jne
pop
pop
outsl
or
sub
loope
pop
xorb
pushf
jle
xchg
std
push
outsb
adc
loop
lods
jns
jecxz
divb
scas
add
mov
cli
or
xor
and
dec
out
in
mov
lea
inc
loopne
pop
and
push
sarb
sahf
sub
mov
mov
jg
or
pop
lods
je
pop
fs
mov
xor
out
mov
shlb
ljmp
pop
fnstenv
cmp
nopl
or
mov
mov
push
cmp
ret
pusha
push
adc
scas
xchg
mov
add
push
cmp
loope
mov
mov
mul
xchg
xor
pop
dec
ja
jp
jbe
mov
sub
mov
jno
lock
sbb
cld
xor
cmp
mov
int3
ret
enter
icebp
mov
js
rolb
sbb
dec
xchg
pop
mov
adc
push
jle
lret
jnp
movsb
pop
xchg
fdivrl
mov
sub
pop
push
push
add
dec
push
pop
pop
mov
mov
and
xor
mov
pop
fnstsw
test
dec
pop
rcrb
lret
lcall
push
pop
dec
xorl
out
dec
popa
pushf
dec
push
scas
dec
dec
fsubrl
clc
ljmp
pop
sub
xchg
sar
sub
cmpsb
into
negb
movsb
xor
rorb
aam
and
out
mov
lcall
shll
inc
sbb
out
pop
daa
pop
hlt
iret
xorb
outsb
pop
pop
dec
inc
xchg
sub
jecxz
sbb
mov
pop
dec
rorl
pop
cmp
dec
sbbl
jo
cmpsl
nop
and
mov
hlt
jnp
pop
mov
add
mov
pop
inc
xor
pushf
bound
fdivr
rcrb
cltd
jb
gs
daa
pop
dec
ret
cmpsl
pop
dec
jns
aaa
lahf
mov
fwait
inc
fidivl
imul
out
inc
pop
in
push
in
scas
and
loopne
cli
push
fsubrs
dec
pop
add
lds
push
pop
mov
sbb
mov
pop
and
sub
push
xor
jecxz
adc
scas
icebp
roll
mov
lahf
cs
pusha
pop
decl
and
outsb
imul
lret
xor
pop
push
clc
adc
insb
add
xor
jno,pt
out
jl
mov
cmpsb
in
cwtl
sub
imul
pop
stos
and
fwait
sti
sbb
jle
into
loopne
add
cmc
sub
inc
imul
pop
push
iret
gs
or
pop
stos
mov
mov
dec
inc
in
pop
std
cld
in
jecxz
push
mov
dec
push
jg
pop
pop
inc
mov
jle
sahf
mov
jno
je
scas
out
push
xchg
out
push
cmp
fstps
dec
shll
scas
scas
rcrb
jno
jne
mov
xor
cmpb
mov
push
push
sahf
lods
xchg
jmp
test
int3
or
inc
and
lcall
sub
idiv
xchg
and
pop
sbb
pop
test
test
bound
and
stos
dec
rcr
xchg
xor
ljmp
ret
pop
jp
dec
mov
or
shlb
adc
int3
aam
push
repz
lds
ja
cmc
in
mov
xchg
mov
daa
push
pop
push
pop
xor
nop
cwtl
pop
in
add
xchg
mov
leave
push
lcall
ljmp
fldenv
and
test
fidivs
imul
adc
xchg
fs
divl
and
push
cmp
rcrb
ror
int3
fistps
fcoml
jle
xchg
pop
test
adc
xor
push
repnz
pop
push
push
xor
dec
pop
popl
nop
loope
jecxz
pop
and
xchg
outsb
js
pop
dec
cmc
push
mov
rcl
cld
sub
xchg
cli
repz
movsl
and
mov
push
scas
cmp
cwtl
xchg
mov
js
push
retw
pop
jle
sbb
rorl
mov
push
adc
mov
rorl
fwait
ss
dec
add
cmp
incl
aad
pop
lcall
insl
pop
mov
ja
sahf
inc
scas
imul
sbb
mov
fmul
mov
jle
pop
scas
cmpsl
pop
jns
fcmovnu
pushf
pop
sbb
imul
sbb
push
pop
gs
aaa
xchg
je
jne
lcall
dec
xchg
pop
adc
subb
js
mov
fcomps
lcall
cmp
mov
and
cmp
mov
mov
jns
lea
cltd
cmp
leave
mov
movsl
xorl
out
pop
sbb
xlat
mov
fwait
pop
and
fcoml
jns
out
xchg
les
ret
lea
xchg
sbb
ss
mov
inc
hlt
or
pop
out
pushf
jae
mov
mov
pop
lahf
xchg
jb
gs
pop
lret
push
lret
mov
fidivrl
mov
and
cmp
push
or
stc
mov
pop
ret
pop
mov
adc
jae
scas
imul
insb
testb
lock
js
adc
loopne
outsl
sub
or
sbb
mov
cmpsl
mov
mov
mov
out
push
enter
dec
lret
test
arpl
pusha
cmp
sub
xchg
daa
sbb
out
loopne
mov
aas
mov
shrl
or
jp
lahf
add
xor
ret
ja
fcmovb
cmp
adc
fcoml
pop
or
in
jb
push
idivb
add
jge
mov
cltd
nop
int
xchg
lods
pop
fstpl
lahf
lds
or
movsw
xchg
and
xor
cmp
and
xchg
mov
out
adc
sub
popa
mov
xchg
sub
add
pop
rol
cld
jae
adc
pop
lahf
add
rcrb
mov
call
ret
mov
jmp
outsl
mov
adc
ret
mov
daa
mov
xchg
orl
fcomp
pop
pop
push
pop
lret
mov
mov
cmp
pop
leave
lods
dec
mov
lds
inc
pop
add
and
dec
test
adc
cmpsl
mov
sbb
fbstp
adc
jns
sbb
push
stos
mov
xchg
and
pop
add
cld
push
dec
pop
mov
or
popl
mov
in
repz
cmp
mov
add
jg
cmp
dec
bound
test
cmpsb
scas
adc
jb
jae
lret
pop
mov
cmp
mov
lahf
lods
pop
scas
rcrb
stc
or
stos
dec
loop
push
shrb
lock
movsb
es
repz
sbbl
rcrb
shlb
das
in
sbbl
mov
mov
loop
mov
leave
notb
push
incl
lods
mov
fldenv
aam
divl
or
shrl
lock
pop
xor
ljmp
test
in
mov
pop
ljmp
adc
jno
cld
jg
sub
sarb
mov
clc
xor
ss
sub
mov
cs
xlat
outsb
dec
sti
cmp
sbb
mov
int
pop
mov
test
cmp
cmp
insl
sahf
pop
prefetch
sahf
ljmp
add
ss
stos
loope
ret
sub
fcomi
jae
fidivrl
jne
fdivl
je
inc
sbb
in
adc
mov
dec
out
adc
hlt
lcall
mov
jmp
pushf
xchg
pop
dec
sub
xchg
js
daa
ret
or
cmc
mov
fisttps
cltd
cltd
xchg
icebp
and
cmp
cmc
stc
lcall
mov
cmp
in
xchg
into
mov
lock
scas
sahf
push
xor
lret
dec
fidivrl
mov
xor
gs
iret
jno
sbb
mov
or
inc
mov
mov
icebp
ret
adc
clc
mov
jp
aas
mov
jnp
cmp
jnp
cmp
and
mov
xor
movl
fidivs
jns
sti
pop
scas
adc
jmp
repz
xchg
ret
aam
adc
pop
sbb
push
test
add
insl
subl
sbb
aaa
push
lods
bnd
mov
cmp
into
push
dec
dec
push
mov
pop
lea
cmpps
loopne
lods
test
push
pop
pop
popa
sub
out
cltd
repnz
pop
pop
repz
ljmp
or
popf
subb
je
lods
ret
add
sbb
in
jle
sub
lret
fnstenv
leave
xchg
fcmovnb
out
mov
push
pop
loopne
test
push
out
push
mov
leave
subb
movsl
das
js
repz
std
das
lahf
cli
xlat
jmp
sub
and
popf
push
stos
ror
jecxz
cmp
pop
mov
xor
loop
outsb
jl
inc
cmp
fldt
pop
xchg
test
xchg
sbb
mov
mov
sbb
aaa
shrb
adc
stos
aad
dec
sbb
pop
mov
push
fisttpl
xchg
orl
mov
cltd
mov
scas
pop
icebp
dec
jge
jae
fwait
xchg
mov
ret
dec
push
fstpt
pop
or
cmp
pop
and
dec
imul
imul
add
or
jne
sub
cmp
mov
lea
movsl
dec
ret
fcmovu
arpl
mov
das
push
in
cmp
bound
cltd
je
push
mov
add
int3
xchg
aas
or
insb
xchg
inc
push
std
sub
ljmp
cwtl
je
stc
xchg
adc
lods
mull
cmp
loopne
or
cmc
in
clc
dec
sbb
cmp
daa
pushf
movsb
dec
outsl
aas
enter
dec
xchg
sub
mov
mov
mov
adc
repnz
cmp
xchg
shl
sti
out
cmp
inc
inc
pop
sbb
test
jnp
outsl
xor
sbb
mov
popf
ficoml
stc
out
arpl
mov
test
cli
fwait
in
lock
jmp
dec
add
lcall
outsb
js
cltd
and
lods
dec
das
sti
fistpl
ja
test
idivl
inc
push
popa
out
mov
cmp
push
push
sub
jle
test
or
fisttpll
mov
and
xor
pop
mov
pop
decb
add
fistl
mov
loopne
addr16
mov
sbb
sbb
cmp
sub
aaa
lods
pop
clc
mov
iret
cltd
mov
fidivrl
pxor
popa
cli
js
sti
aas
add
mov
dec
outsb
mov
mov
stc
test
jno
addr16
out
in
icebp
push
mov
fiaddl
cwtl
pop
jle
push
or
add
addr16
mov
pop
xchg
mov
mov
push
pop
xor
pop
adc
stos
inc
and
in
pop
int
lret
add
lcall
push
ja
cmp
pop
cmp
insb
orb
mov
loope
imul
inc
out
pop
cmc
rcpps
insl
mov
test
je
cmp
add
mov
cld
cwtl
testb
fildl
add
xchg
pop
arpl
dec
stc
lods
sar
mov
pop
adc
push
mov
or
fdivrl
and
push
sub
stos
imulb
idiv
fstps
xor
push
daa
sbb
adc
xchg
sbb
loop
inc
pop
inc
push
into
lods
pop
stc
ss
imul
scas
scas
loop
inc
int
cmc
sbb
mov
gs
sbb
mov
mov
push
int
jmp
lock
fidivl
in
loop
mov
or
pop
mov
cmp
mov
popf
jno
out
scas
mov
dec
dec
push
xchg
cmc
or
jno
add
xchg
pop
imul
pop
cmpsb
add
inc
push
daa
pushf
aas
lea
add
pop
call
je
sahf
xorb
pop
adc
mov
out
sbb
or
or
and
cmp
mov
insl
inc
mov
jns
js
rorb
das
pop
jne
xchg
pop
cmc
inc
and
cwtl
lcall
inc
enter
mov
pop
mov
jo
pop
and
push
xor
icebp
mov
lds
push
pop
lahf
rorl
rorl
add
lcall
pop
int3
jno
and
fdiv
pop
dec
and
push
jne
push
mov
push
scas
pop
pop
jge
lods
mov
pop
pop
sti
testl
xor
int3
addr16
fsts
aas
cwtl
lahf
pop
push
addb
pop
popf
mov
sbb
sub
lcall
fmull
lcall
loop
pop
packuswb
cmp
out
sbb
pop
jg
xor
sbb
fdiv
jecxz
in
pop
push
dec
mov
int3
add
jns
fimuls
stc
pushf
adcb
pop
lcall
pop
mov
dec
repz
jno
xchg
sub
out
movb
loope
stc
sbb
cmp
inc
fsubrl
and
pop
xchg
push
movl
mov
or
flds
stc
insl
cmpsb
xchg
push
negl
pusha
jmp
jmp
xorb
in
orl
mov
cmc
adcl
or
pop
jmp
leave
mov
pop
fdivp
lods
push
pop
adc
jecxz
pop
subb
push
mov
fnstenv
or
push
pop
dec
fwait
add
sbb
jecxz
and
inc
imulb
pop
pop
pop
cmp
mov
jns
adc
pop
and
xor
das
pop
aam
clc
out
cltd
loop
lods
jb
xchg
inc
jmp
and
mov
add
cmp
pop
inc
clc
adc
mov
xchg
in
mov
call
dec
andb
adc
mov
imul
lret
pop
push
adc
pop
jae
fs
xchg
xor
ss
xchg
in
or
pop
lods
xor
jne
push
out
leave
loop
mov
fdivrl
and
loope
mov
dec
call
int
dec
dec
mov
cs
pop
push
mov
add
lods
sahf
xor
lahf
add
cmpsl
fistpl
pop
insl
and
faddl
xor
sbb
mov
sub
fsubrs
pop
stos
add
js
mov
push
cmpsl
pop
ret
and
fisttps
pop
adc
jmp
std
or
cmp
daa
das
inc
pop
xor
inc
or
pop
lret
lods
jne
xor
mov
test
lret
int3
or
mov
mov
int
mov
pop
aad
push
fnstenv
ret
push
pop
std
divl
out
mov
pop
pusha
pop
xor
xchg
xor
inc
mov
unpcklps
rcrl
shlb
pop
push
cwtl
insl
jnp
inc
mov
lods
enter
pop
frstor
jp
das
shll
pop
xchg
mov
sub
cltd
push
mov
inc
dec
cwtl
sti
test
pop
movsb
xor
insl
xchg
push
fnsave
div
test
out
pop
dec
mov
inc
mov
scas
sti
jge
lock
sbb
pop
adcl
cmp
rcrb
push
mov
pop
mov
cmp
std
pop
push
push
xchg
and
mov
cmp
mull
mov
adc
dec
cltd
cmpsb
fbstp
popf
mov
les
aaa
test
outsl
fcoms
push
add
addr16
daa
pop
fcoml
or
aas
and
and
sbbl
pushf
mov
push
jecxz
fistpll
mov
mov
pop
pop
push
adcl
outsb
mov
dec
adc
push
popf
xchg
mov
out
insb
mov
mov
xchg
and
push
push
fdivrl
jle
les
aas
sahf
loopne
dec
pop
mov
inc
sub
mov
clc
fisubl
loopne
cmp
dec
pop
push
int
and
pop
clc
dec
pop
inc
loopne
les
add
sub
in
ja
daa
fdivl
adc
fucom
int
ds
push
pop
es
mov
push
dec
out
roll
mov
ss
ret
pop
loope
push
jae
movsb
mov
pop
mov
mov
push
daa
cmp
pop
ret
and
adc
ret
arpl
rcll
xchg
test
push
pop
mov
xlat
dec
int3
adc
add
rcr
pushf
pop
jge
lock
mov
ss
xchg
add
das
pop
inc
xor
test
out
xchg
pop
stos
cmpsl
adc
shl
mov
pop
lock
rcll
inc
rcrb
outsb
and
jp
imul
clc
or
add
fnstcw
or
std
cli
jae
mov
xchg
lahf
xchg
into
push
dec
xchg
xchg
mov
in
xchg
add
adc
lret
aad
xor
insl
fidivrl
jo
out
incl
pop
les
lahf
iret
and
inc
pop
xor
scas
popf
inc
fsubp
xchg
jns
popl
cmp
jl
lods
pop
mov
add
ja
call
push
rolb
sahf
gs
mov
lods
jo
add
fnstcw
std
mov
aam
in
repnz
push
dec
mov
jl
pop
out
cmc
js
pop
jg
pop
std
xor
movsb
lahf
scas
shrb
nop
jns
lods
in
dec
cmpsb
lret
mov
bound
jp
ficompl
xchg
xlat
arpl
subb
or
mov
sub
pop
rclb
push
sub
push
in
fcoms
fidivl
pop
jl
cmp
ss
jb
and
aaa
jnp
mov
lea
fwait
sarl
or
adc
not
mov
shrl
pop
outsb
gs
xchg
add
stos
inc
dec
divb
mov
dec
lahf
jecxz
vmulpd
cmpsl
sub
xor
push
dec
aaa
cltd
mov
pop
jg
cmpsb
cmp
mov
js
ror
fmuls
mov
adc
ret
pop
sbb
fcomps
adc
aad
ja
push
mov
cmp
movsb
mov
or
scas
les
nop
pushf
fcoms
lds
in
popf
in
std
aas
dec
pop
daa
sub
jae
xchg
aaa
pop
bound
sar
sbbl
imul
cltd
push
mov
ret
sbb
inc
mulb
insl
pop
outsl
pushf
ljmp
jns
pop
xchg
loopne
xorl
xor
pop
rclb
mov
jnp,pn
adc
gs
mov
jp
aad
pop
test
pop
sbb
pop
mov
add
bound
scas
xchg
pop
adc
leave
jns
cli
rcrl
bound
sub
ds
sbb
into
neg
push
jle
mov
out
and
and
addr16
cli
pop
xchg
rep
lcall
sub
push
fidivl
gs
fucomip
cmp
jecxz
push
lcall
in
out
repnz
cmp
inc
mov
lret
nop
mov
sub
jno
xchg
dec
adc
adc
add
pop
add
es
insl
pop
jae
js
std
mov
pop
inc
xor
mov
mov
pop
lret
cmp
lret
fs
inc
sub
jo
pop
jecxz
roll
pop
aaa
fistps
inc
mov
or
pop
inc
push
in
xchg
pop
dec
adc
or
sbb
pop
pavgw
push
mov
fstl
popf
and
stos
mov
xchg
dec
int3
mov
sub
in
mov
sub
clc
test
adc
and
pop
popa
xchg
push
jle
push
lock
std
out
insb
cmp
int
data16
pop
out
adc
cwtl
in
sahf
dec
insl
aas
push
negl
fimull
mov
adc
pop
aaa
in
and
sub
or
sbb
clc
pop
pusha
lahf
fmull
mov
leave
push
dec
pop
xor
out
xchg
iret
pop
aaa
cmp
xchg
mov
push
sbb
roll
scas
pop
sub
mov
add
pop
xlat
jo
loope
lahf
mov
inc
or
push
out
pop
fcoms
mov
fs
loop
fadds
and
fsts
imul
mov
inc
fsubl
pop
pop
push
cmp
negl
cs
xchg
leave
and
loope
pop
lret
dec
mov
and
stos
cmp
cmp
cmp
iret
pop
push
mov
mov
enter
call
dec
adc
dec
insl
pop
dec
pop
sub
pop
enter
pop
sbb
pushf
addr16
and
js
scas
sub
cmp
inc
sti
repnz
vunpckhps
cltd
nop
das
jl
xchg
andb
scas
mov
negb
pop
pop
lds
or
pop
mov
imul
pop
add
sub
dec
setge
push
jp
or
inc
pop
test
sbb
stos
pop
mov
pusha
nop
inc
outsb
out
pop
push
xchg
subl
scas
imul
sub
jmp
les
ja
xchg
shr
cmc
test
mov
inc
mov
icebp
adc
stos
leave
xchg
mov
pop
push
mov
rcrb
add
push
ficoms
mov
outsl
call
xchg
mov
jg
push
fcom
pop
cld
stos
xor
scas
jno
xor
sub
sbb
cmp
push
mov
les
pushf
mov
and
lock
test
popf
push
lret
daa
xor
dec
pop
xor
adc
je
lcall
mov
pop
pop
pop
and
cmp
pop
adc
fs
pop
mov
mov
movsl
pop
rolb
ds
push
and
jno
packsswb
push
inc
or
xor
mov
pop
sbb
cmp
cmp
out
push
lock
mov
pop
leave
sarl
lcall
movsb
pop
and
std
rcr
jle
repz
fs
test
sbb
jmp
push
or
pop
xchg
fneni(8087
inc
inc
pop
arpl
pop
xor
inc
jo
add
pop
scas
int
test
xlat
push
cwtl
sbb
pop
cmc
mov
sahf
pop
nop
push
mov
inc
and
xchg
movsb
mov
and
xchg
imull
or
in
pop
mov
test
inc
nop
sbb
movsb
xor
fs
sbb
stos
mov
jecxz
vcvtss2sd
mov
mov
inc
fiaddl
in
mov
fcmovbe
fstps
xlat
daa
lahf
pusha
mov
cli
cltd
sub
test
and
dec
inc
pop
popa
sub
loopne
fcmove
std
lock
in
pop
imul
roll
lret
inc
psubsb
mov
pop
cmp
addr16
cmc
pop
adc
push
clc
xchg
iret
pop
imul
pop
or
out
jns
mov
or
bound
pop
cmp
insb
pop
jae
rclb
cmp
fstps
sbb
and
fmuls
hlt
scas
mov
leave
pop
nop
inc
jne
push
jo
sub
xor
aas
stc
ret
jnp
push
cmp
incb
into
pop
pop
movsl
mov
xchg
pop
push
mov
icebp
pop
aam
sbb
xchg
dec
out
inc
mov
and
insl
sarl
sbb
add
xchg
cmp
xor
pop
push
fsubrs
test
loopne
jecxz
mov
fwait
pop
pop
repnz
aad
mov
out
pop
jnp
mov
push
lret
lds
icebp
pop
pushf
jo
fdiv
push
ds
lcall
mov
sub
pop
mov
pop
in
cmc
leave
fbld
sub
inc
stos
push
jecxz
xor
hlt
int
dec
ret
or
add
sbb
into
add
cmpb
pop
std
cs
fmuls
mov
sub
imul
scas
pushf
lds
sbb
pop
jae
pop
jg
push
xor
mov
pushf
and
pop
or
jae
jno
pop
xchg
pop
dec
push
mov
ds
mov
xor
iret
jo
dec
xor
lea
pop
test
mov
pop
mov
cmc
popf
mov
ror
arpl
sahf
add
testb
dec
pop
loope
push
add
lahf
pop
and
or
movaps
dec
pop
cmp
mov
repnz
pop
mov
test
out
pop
pop
je
movsb
roll
push
lods
daa
jnp
pop
pop
xorl
sbb
fdivrs
or
xchg
dec
push
mov
shll
inc
dec
loop
loopne
pop
jae
push
aas
rorb
pop
stc
mov
mov
add
lret
adcl
xor
pop
shll
push
inc
fwait
fidivrs
sbb
subb
pop
lock
sbb
pop
ficoml
push
pop
iret
pop
movsl
int3
js
fists
pop
dec
jp
lahf
ljmp
pop
cmp
and
xchg
jne
pop
dec
leave
mov
addr16
cmp
mov
sub
aad
or
mov
in
cld
jecxz
pop
icebp
add
pop
frstor
cmp
or
pusha
pop
out
push
in
jno
popf
arpl
sbb
cwtl
clc
mov
xchg
movsl
mov
arpl
pop
out
inc
jbe
sahf
xchg
pop
inc
ret
pop
and
int
movsl
mov
hlt
mov
push
imul
imul
int3
ret
test
xor
mov
fs
dec
fistpll
jbe
mov
jl
rcrl
jb
hlt
fsubrl
lods
lret
fisttpl
fnsave
and
or
rcrl
push
jecxz
inc
jp
mov
adc
mov
test
xchg
adc
jl
pop
mov
mov
out
rcrb
mov
push
mov
pop
mov
fimuls
push
fldl
push
mov
aam
pop
lods
addr16
roll
repz
icebp
lret
add
mov
pop
pop
rorl
push
cmp
sbb
lea
jp
inc
sub
pop
pop
xchg
fistpl
mov
pop
pusha
xchg
xchg
xorps
aam
or
pop
xor
stc
andl
pop
imul
adc
jl
aam
mov
repnz
or
xor
sbb
mov
pop
loopne
dec
clc
adc
lods
daa
mov
scas
sub
fcomps
adc
push
mov
mov
pop
lock
out
mov
adc
pop
mov
aam
fwait
cld
repnz
or
sbb
cltd
pop
stos
sub
outsl
adc
test
stos
xchg
pop
sbb
pop
test
and
mov
in
push
mov
mov
jnp
idivl
jl
pop
inc
fnstcw
sti
adc
and
lods
jg
mov
mov
pop
pop
fistl
mov
or
mov
fstps
xchg
jecxz
enter
mov
in
pop
cltd
lret
mov
aaa
push
mov
cs
fimuls
fstpl
in
xchg
dec
add
out
nop
jmp
insb
sahf
pop
test
xchg
sub
cmp
shll
pop
xor
dec
push
push
jp
pop
arpl
inc
in
push
loop
pop
outsb
add
jbe
rcrl
fs
bound
cltd
test
test
cmp
fldt
loop
fwait
inc
out
or
in
mov
mov
rcrl
inc
jae
pop
pop
fnsave
xor
scas
push
pusha
cmp
outsb
dec
sbb
hlt
sub
push
stos
pushf
pop
mov
pop
pop
mov
dec
jne
pop
loop
mov
pop
xchg
ja
stos
add
sub
and
pop
sbb
stos
dec
mov
xchg
pop
cmpsb
ss
add
jl
adcl
popf
and
mov
or
mov
mov
push
cmp
mov
pop
inc
js
mov
fnstenv
pop
xchg
dec
or
pop
leave
aad
and
dec
jne
js
add
push
cmp
je
or
dec
and
or
inc
scas
pop
mov
and
pop
mov
pusha
and
pop
into
jo
js
mov
push
sbbl
mov
or
gs
sub
pop
sti
jb
ficompl
bound
adc
jns
fisttpl
jo
jnp
incl
cwtl
insl
les
fcomps
out
cli
mov
dec
pop
mov
push
mov
pop
sbb
mov
pop
jmp
es
sbb
ret
adc
and
lcall
sbb
shlb
movsl
push
imul
fcomi
mov
adc
sbbb
int
divb
loope
jmp
adc
pop
jl
clc
mov
aam
imul
or
pop
push
inc
fldt
dec
std
fildl
and
pop
ss
xchg
xlat
dec
in
fadds
data16
movsl
icebp
sbb
jge
adc
hlt
and
lds
repz
addr16
rorl
pop
rcll
scas
cmp
inc
fnstsw
adc
arpl
repnz
add
dec
out
push
lahf
loopne
cmp
out
in
shlb
movsl
sub
dec
mov
rcll
ss
xchg
test
or
push
cltd
js
push
not
js
mov
pop
cmc
pop
dec
cmpsl
dec
ret
lahf
inc
lds
or
popa
lods
fsubrs
daa
fbld
js
pop
jb
jp
js
push
daa
std
jecxz
in
not
mov
loop
dec
mov
sub
jge
cmp
repnz
loop
aad
push
out
pop
fsubs
std
add
cmovns
dec
mov
cmp
jns
cmpsl
fsincos
mov
stos
decb
cmp
clc
pop
mov
fcoms
xchg
nop
cmp
pop
ja
adc
mov
adc
cmp
mov
mov
sbb
xor
add
xlat
fstps
mov
cltd
leave
jg
cmpsb
mov
mov
inc
ljmp
xor
sbbb
pop
leave
or
xlat
lcall
aad
push
jecxz
mov
lcall
jmp
popa
fldl
movsl
push
pop
cmp
dec
sub
jp
js
lret
push
mov
push
cmp
pop
scas
js
repz
pop
int
mov
pop
addr16
test
xor
xchg
xchg
fcompl
imul
enter
mov
push
popa
mov
xor
sub
aas
pop
sbb
push
fwait
call
fcomps
dec
dec
dec
mov
mov
push
sbb
fisttpll
sbb
andb
jecxz
ds
ss
jl
test
push
mov
sahf
mov
pop
mov
vpackssdw
lods
aad
es
lods
pop
into
sbb
jae
shll
inc
rcr
xlat
aad
mov
std
std
pop
lret
dec
out
or
mov
fcomp
daa
xchg
scas
mov
mov
adc
je
pop
in
add
into
mov
lea
pop
push
push
jle
or
mov
jmp
out
ficomps
mov
fbld
jns
pop
dec
lods
pop
movsb
adcb
mov
cmc
je
dec
xchg
sub
dec
js
inc
out
or
mov
addr16
mov
fidivrl
push
lds
movsl
data16
cmp
out
mov
jle
cmp
or
xlat
daa
rcrl
les
pop
mov
loope
xchg
sub
stc
js
pop
adc
mul
cwtl
pusha
mov
xor
or
shl
cmpsl
fs
scas
jg
inc
pop
add
int
and
repz
daa
ljmp
out
sti
adc
mov
inc
in
imull
scas
pop
add
pop
cmpsl
sti
daa
mov
stos
repz
jmp
pop
and
ja
lahf
into
ret
sbb
incb
mov
ljmp
cmpsl
jnp
shrb
pop
sti
xchg
xchg
jbe
stos
lret
pop
and
cwtl
test
mov
sti
fidivl
pop
fmul
pop
sbb
cs
stc
mov
cli
test
dec
in
fcompl
arpl
leave
dec
xchg
inc
mov
cmpsb
scas
push
adc
pop
incb
pop
push
xchg
arpl
pop
aam
inc
push
xchg
jne
push
mov
lds
mov
xor
sbb
call
cwtl
lcall
adc
add
test
sbb
adc
lods
ss
cli
scas
out
inc
pop
cmp
insb
imul
lods
jnp
ret
daa
cmp
cwtl
cmc
fstl
scas
sarl
dec
das
mov
pushf
leave
lds
cmc
xchg
addr16
jae
inc
mov
dec
lods
sub
inc
push
pushf
sbb
mov
sbb
xchg
das
call
cwtl
add
movsb
add
cmp
in
ret
pushf
pop
fsubrl
xchg
jo
roll
pop
mov
mov
sarb
push
lahf
lods
jnp
scas
sbb
pusha
cmp
mov
aad
sub
cmp
mov
jns
mov
outsl
xchg
into
fcmovbe
dec
adc
push
mov
shll
imul
sahf
push
xor
cmp
push
dec
mov
xor
dec
add
add
pop
iret
xor
pusha
ja
cmp
aaa
pop
std
into
dec
fisubrs
mov
jecxz
jp
mov
pop
dec
cmp
or
add
out
mov
fmuls
leave
jne
xchg
cmc
mov
sub
lahf
test
movsl
mov
pop
mov
ss
andb
pop
lea
jl
mov
or
sbb
ljmp
add
fsubl
and
jbe
xchg
int3
ljmp
pop
push
scas
push
jmp
jo
mov
adcb
mov
shlb
dec
pop
cmpsb
add
je
fdivl
popa
pop
int
ret
sbb
sbb
pop
xchg
jae
pop
sti
push
add
and
aam
mov
mov
pop
sbb
lds
mov
mov
hlt
pop
jae
jg
movsb
push
dec
mov
mov
xor
cmp
aad
mov
and
mov
push
jle
push
imul
insl
fwait
mov
push
cld
fwait
adc
daa
inc
gs
xchg
lcall
sti
xor
decb
scas
lahf
inc
loope
js
dec
push
mov
sub
fmull
stos
stc
mov
ljmp
jnp
lods
pop
inc
dec
mov
movl
jp
mov
lcallw
repnz
pop
mov
in
cmp
pop
popa
mov
fsts
fwait
aam
add
sbb
jmp
out
sub
pusha
es
xchg
sub
mov
aaa
xchg
dec
fwait
mov
mov
lret
dec
in
or
movsl
xchg
lock
fisubrl
fnstsw
das
inc
or
cmp
fidivrs
leave
stos
push
cmpsb
cmp
add
push
gs
pop
movsl
and
inc
out
ljmp
or
adc
jne
mov
loopne
pop
mov
pop
aaa
pop
adc
insl
mov
mov
fisubrl
sbb
loope
in
xchg
mov
mov
push
cmp
test
sbb
mov
std
in
adc
dec
add
shlb
jno
xlat
ss
aas
push
test
push
movsb
scas
cmp
inc
push
stos
inc
arpl
jbe
cli
xor
mov
xchg
test
test
push
sarb
xchg
pop
cmpsb
mov
xor
cmp
scas
imul
xchg
cmpsb
adc
scas
icebp
push
and
repz
pop
sub
and
mov
mov
mov
push
aad
cmp
dec
imul
fidivrl
push
adc
idiv
lods
mov
mov
xchg
popa
fwait
push
div
repnz
jmp
adc
in
psubusb
cmp
call
dec
xor
fwait
cmp
enter
mov
push
pop
ja
testb
mov
pop
test
mov
pop
sti
push
xchg
test
lea
clc
mov
mov
iret
mov
lahf
push
push
pop
mov
pop
jg
subb
fwait
xchg
pop
pop
xorb
mov
loop
pop
and
bound
or
and
lea
mov
cmp
jl
scas
lods
testl
or
repnz
pop
fadds
cmp
pop
sahf
and
les
pop
leave
xchg
sub
scas
test
pop
jmp
out
rep
jg
inc
xor
mov
aam
mov
imul
stos
inc
les
pop
pop
pop
xor
repz
xor
nop
lcall
ja
and
repz
sub
add
cmc
scas
pop
push
das
inc
push
fsubs
sahf
mov
lret
movsl
xor
cld
icebp
sub
js
out
xchg
sub
mov
pop
pushf
push
or
les
xchg
jg
in
pop
movsb
or
push
mov
push
mov
push
push
pop
mov
lahf
jmp
cwtl
mov
xor
sub
pop
mov
cmpsb
dec
pop
and
lret
mov
pop
sub
xchg
loop
pop
sbb
pusha
inc
fmuls
ret
lret
pop
popf
pop
adc
sub
pop
cmc
and
dec
mov
test
sarl
inc
imul
sub
pop
cmp
and
pop
out
mov
scas
mov
and
lret
sti
add
push
sbb
rcrb
jl
adc
out
ljmp
cmp
icebp
enter
and
pop
outsb
dec
out
leave
pop
cs
add
mov
ja
add
imul
push
sub
lods
jns
pop
repz
pop
jne
pop
daa
outsl
push
dec
out
dec
loope
push
scas
mov
dec
mov
mov
mulb
xor
add
mov
dec
sub
mov
adc
push
int3
mov
in
cmp
test
xchg
dec
ficoms
dec
ud1
bound
mov
mov
pop
and
adc
popf
and
outsl
sahf
sub
mov
mov
imul
mov
xor
push
and
lock
cmp
popf
jmp
sub
sbb
cmp
out
pop
movsb
or
sbb
popf
sbb
in
pop
xchg
aam
js
adc
cmc
mov
fst
mov
push
mov
lret
cmp
cmp
sti
gs
mov
iret
lea
mov
adc
fldcw
mov
xchg
xor
or
jno
sub
cmpsl
pmullw
mov
movsb
jno
pop
push
xor
adc
mov
xchg
into
pop
ret
ss
xchg
sub
cwtl
into
xchg
aaa
jne
xchg
push
cmp
mov
jl
cmp
test
pusha
stc
sti
mov
jmp
adc
and
je
cmc
xchg
movsb
push
xor
and
repnz
mov
jg
mov
insl
loop
popa
pusha
mov
and
cli
daa
jb
pop
rcr
xchg
mov
ss
jmp
scas
xor
repz
fimull
pop
leave
cmp
xchg
ja
lahf
ret
pop
mov
and
loope
lea
pushl
sub
dec
sub
dec
xor
repz
sub
mov
ja
mov
movsb
test
packuswb
fisubrl
nop
adc
test
hlt
dec
test
jmp
mov
push
dec
inc
cmp
pop
imul
pop
mov
xor
jae
jge
jg
cs
mov
inc
sub
pop
inc
std
cmpsl
mov
stc
popa
mov
fildl
pop
andl
or
mov
push
daa
ss
mov
mov
and
add
dec
daa
mov
mov
ret
sub
in
pop
aad
sbb
cmc
mov
push
inc
sub
pop
dec
outsb
mov
in
ficomps
xorl
imulb
ffree
outsl
ficoms
and
pop
lret
out
cmp
aam
pop
and
mov
test
mov
pop
cli
stos
fs
jo
xor
lea
dec
ds
dec
pop
int
aad
pop
lahf
lock
inc
aas
or
dec
adc
pop
test
int3
mov
iret
adc
inc
out
scas
jo
sbb
pop
jb
dec
add
sub
in
and
mov
push
and
daa
mov
mov
mov
sarl
pop
lahf
mov
cmp
dec
sub
mov
addr16
in
mov
cmp
aaa
outsb
cli
lcall
jo
pop
lea
add
fwait
in
test
mov
and
push
sbb
mov
outsb
push
cmp
inc
xchg
fcomps
out
lret
add
cltd
mov
inc
mov
outsb
xor
out
mov
cmp
or
jnp
lret
adc
pop
dec
mov
es
lret
xchg
fidivrs
js
jecxz
cmp
push
loop
pop
iret
stos
loopne
mov
mov
scas
insb
push
mov
pop
sti
jns
cmp
mov
fldcw
ja,pn
js
in
pop
and
lock
je
jecxz
adcb
lods
mov
push
or
mov
xchg
mov
xchg
pop
gs
xorb
mov
movsl
mov
pop
lock
pop
pop
lea
push
arpl
inc
scas
outsb
fsubrl
in
cmp
decw
push
mov
xchg
es
sbbb
mov
and
push
sub
addl
aas
psubusb
push
fsts
adc
lahf
jnp
dec
mov
xchg
mov
lds
pop
lahf
fildl
out
nop
pop
pop
inc
lcall
cmc
xorl
movsl
dec
pop
pop
and
mov
out
adc
cld
daa
and
fidivl
mov
lea
pop
xchg
or
and
cs
aam
pop
push
scas
ret
dec
rcrb
imul
fidivs
mov
sbb
xchg
mov
ds
or
repz
pop
xchg
in
push
popf
pop
fists
push
scas
popa
or
jno
xchg
out
dec
fidivrl
pop
xorb
jecxz
sub
pop
clc
jo
call
pop
inc
cmp
jns
adc
repz
jg
rep
xchg
pop
mov
stos
fcmovbe
pushf
icebp
sbb
jnp
aam
sbb
mov
push
pushf
fsubrl
sarb
mov
test
pop
mov
addr16
pop
dec
lret
shrb
sarl
jg
js
fldcw
dec
mov
scas
int3
popf
loopne
adc
cmpsl
pop
cs
inc
sbb
out
out
aas
mov
mov
insb
ret
sub
enter
out
sub
pop
cld
outsl
mov
decl
and
push
lea
lds
pop
or
std
andb
adc
mov
sbbl
sbb
xor
pop
movsb
mov
adc
lahf
es
mov
dec
scas
pop
fwait
cld
mov
xchg
xchg
push
push
pop
data16
mov
int
mov
repnz
xor
lret
sub
sub
test
cwtl
loop
add
jnp
das
mov
fmuls
fisttps
icebp
pop
loop
mov
ficomps
testb
repz
lret
cmc
pop
vsqrtsd
pop
xchg
aad
shll
cmp
movsl
imul
xchg
mov
leave
pop
xchg
jmp
xchg
test
mov
es
jmp
cmp
pop
test
ret
push
pop
jne
cwtl
dec
mov
sbb
and
sarb
bound
or
pop
jae
rorl
icebp
fbld
xchg
sub
movsl
ret
incl
jno
out
ret
jmp
and
pushf
mov
inc
pop
xchg
outsb
add
and
sti
mov
sbb
push
pop
sahf
movsb
pop
xorb
stos
add
push
mov
sbb
push
ret
lahf
movb
test
and
scas
aas
mov
clc
popf
xor
pop
sbb
xchg
dec
jg
call
xchg
dec
sub
cltd
test
pop
xor
ret
int3
push
std
lods
xchg
pop
sarl
stos
mov
sub
arpl
testb
jb
pop
enter
jmp
add
mov
addb
ficomps
and
inc
jge
rorb
mov
nop
sbb
out
adc
mov
inc
xchg
pop
push
out
call
xor
pop
mov
std
pop
jns
xor
leave
or
das
pop
cmp
orl
add
mov
ljmp
jns
sti
lea
add
es
adc
push
scas
loopne
ficoms
insb
dec
mov
faddl
ret
pop
pushf
push
mov
rorb
fxch
inc
and
sahf
addr16
cmpsb
push
pop
fsubl
xchg
mov
imul
inc
push
pop
dec
jns
mov
scas
mov
lcall
cmp
mov
mov
mov
pop
std
scas
mov
jge
je
pop
xor
popa
xchg
jmp
pop
xorl
fisttpll
insb
sti
popa
stos
in
fcmovnbe
cmp
leave
xchg
mov
andb
pop
fimull
mov
into
mov
lods
stc
pop
jle
xchg
adc
hlt
xchg
add
xor
push
add
lahf
jnp
jbe
pop
movsl
leave
sub
pop
lret
loopne
mov
mov
sub
jmp
sbb
aaa
sti
sbb
jg
pop
int3
addr16
leave
mov
pop
rorl
inc
imul
jle
jecxz
cltd
add
rcrb
cmp
and
jnp
pop
pop
pop
popa
mov
mov
pop
stos
mov
pop
sbb
mov
aas
sbb
inc
jae
push
jo
fwait
dec
lret
pop
ds
mov
fsubp
cwtl
pop
adc
out
xchg
lahf
xorl
insb
sub
dec
mov
sbb
in
and
mov
mov
xchg
lahf
mov
imul
pop
popf
adc
movl
out
cmpsb
pop
sub
sub
jg
pop
or
pop
cmp
pop
in
pop
sub
call
int3
cmp
data16
xchg
pop
mov
push
inc
push
ss
clc
mov
xchg
std
mov
scas
ficoml
push
dec
gs
fs
les
inc
xchg
cmp
mov
and
and
mov
pop
adc
pop
rolb
adc
cmp
pop
enter
sbb
loopne
push
pop
cmp
push
pop
lds
sub
test
rorl
mov
cld
sbb
scas
push
mov
xchg
push
les
mov
xor
stos
lahf
ds
aad
dec
push
pop
repz
in
pop
sub
mov
dec
js
push
fldenv
add
adc
mov
xor
lds
or
outsl
sarl
icebp
aad
test
cld
dec
pop
xchg
sar
or
jo
push
mov
xchg
out
jnp
pop
adc
sub
sarl
sbb
fs
mov
outsl
jmp
inc
sub
mov
fwait
out
xchg
sbb
pop
fdivr
mov
mov
xchg
add
rcrl
int
dec
jne
add
int3
inc
sbb
cltd
stos
jo
sbb
pop
lds
mov
loop
or
bound
mov
lcall
in
jb
mov
and
vcvtsi2ss
lahf
and
push
int3
aas
pop
xchg
loope
sti
add
push
push
pop
aad
or
icebp
pop
mov
jo
mov
fwait
and
vpcmpeqw
xchg
stos
jnp
cmp
jno
cltd
pop
xchg
aas
mov
xlat
mov
adc
push
fs
popf
add
xchg
jle
push
enter
inc
xor
pop
mov
xchg
dec
sbb
test
jno
int
pop
jl
adc
add
jne
push
mov
je
int3
fdivs
int
dec
mov
jne
ds
das
cwtl
stos
fdivrs
lock
sub
adc
iret
pushf
andb
inc
pop
jns
leave
cli
mov
incb
ret
cmc
call
mov
pop
orl
xchg
mov
lahf
cmp
inc
test
mov
fs
inc
cmpsl
cmp
mov
inc
mov
xchg
cmp
mov
rcr
mov
enter
lret
mov
pop
sbb
jno
adc
add
mov
mov
or
inc
scas
les
sub
adc
sbb
xor
pop
negl
fists
mov
pop
adc
xchg
into
daa
jnp
push
jl
fimull
jae
and
insb
and
sub
imul
pop
sub
push
pop
loope
loopne
jnp
ljmp
jp
imul
dec
fcomps
pop
mov
gs
out
add
or
mov
pop
aam
insb
push
movsb
lea
push
cli
cmp
pop
xlat
rorb
mov
mov
jle
xchg
xchg
pop
xor
rcl
cmp
mov
push
dec
sbb
pop
mov
fdivrl
pop
mov
iret
test
addr16
pop
pop
push
into
and
xchg
mov
pop
sbb
jmp
negl
test
lret
arpl
sbb
sbb
arpl
ficompl
mov
fistpl
test
in
aaa
pop
push
push
repnz
xor
cltd
nop
bound
or
push
pop
and
jb
outsb
lods
in
pop
xor
repz
jg
sbb
pop
jmp
ss
iret
dec
pop
xchg
pop
jno
popw
insb
movsb
pop
lret
addb
popa
ret
lahf
cs
mov
pop
push
movsl
lcall
mov
fstps
sub
xor
outsb
aad
pop
xchg
addb
stc
add
mov
popa
push
imul
inc
cwtl
stc
adc
mov
sti
js
les
pop
repz
sub
cld
mov
scas
sarb
cmpsb
pop
pop
mov
test
mov
jl
mov
xlat
into
cmc
lods
jmp
repnz
jmp
and
mov
scas
xchg
jl
xchg
popa
mov
pop
shr
push
push
in
filds
or
call
dec
es
in
xor
pop
push
jmp
and
stos
test
jns
pop
dec
jge
sbb
insb
pop
mov
inc
lods
popf
dec
sub
jns
xchg
xor
and
scas
cld
outsl
lea
push
rorb
test
movl
sahf
pop
in
imul
pop
aas
cmp
jae
sarl
mov
jge
pop
cmp
out
lea
std
or
cmp
stos
dec
aaa
sub
in
mov
xchg
cwtl
les
scas
pop
fmuls
xchg
clc
sti
xor
mov
and
mov
add
in
test
jmp
scas
repz
adc
jo
push
pop
mov
xchg
push
or
out
push
pop
fcomip
mov
mov
pusha
cmp
mov
pop
fdivrs
inc
inc
sub
pop
inc
sbb
jnp
insl
andl
scas
imul
sub
lods
or
and
int
leave
imul
and
mov
pop
and
data16
cmp
adc
pop
cmpsl
pusha
xlat
aad
and
or
sub
sbb
lea
pop
hlt
aaa
adc
push
pop
pop
pop
or
adc
cld
sbb
pop
pop
push
dec
into
aas
dec
nop
cli
pop
outsb
cmpsb
test
mov
add
ljmp
loopne
xchg
lahf
push
fnstsw
sub
sarb
add
push
fsubl
sahf
lock
xchg
cltd
mov
xchg
mov
rcr
decl
jb
or
and
mov
sub
out
fists
add
jmp
js
or
or
popf
pop
xchg
push
jp
pop
ret
pop
mov
mov
mov
leave
push
push
pop
xor
or
aam
add
pop
xor
cmp
sub
ficomps
dec
mov
xchg
pop
cmp
pop
mov
shl
pop
sbb
pop
or
in
mov
pop
outsl
rcrl
fstps
sbb
clc
cmp
sub
clc
mov
leave
arpl
or
mov
outsl
cld
push
pop
jp
cmpb
mov
mov
push
cld
sbb
rcl
mov
insl
push
push
pop
ret
jo
mov
cmp
scas
inc
addr16
xor
aam
in
xor
pop
sub
sbb
outsl
inc
fcom
cwtl
sti
pusha
mov
int
lods
xchg
stos
xchg
sarl
inc
repnz
imul
pop
mov
jno
or
movsl
jp
inc
xor
fwait
pop
push
clc
movsb
in
fnstsw
out
push
out
jl
push
mov
push
mov
insb
mov
sbb
xchg
fldl
mov
or
pop
and
push
rcrl
mov
xchg
lret
ficompl
sbb
out
pop
pop
xor
sti
mov
mov
push
jne
xor
pop
sarl
and
aad
mov
push
mov
andb
jnp
jmp
inc
test
mov
in
pop
lar
lahf
mov
enter
je
mov
aad
imul
out
sub
pop
xchg
aam
in
inc
sbb
adc
xchg
pop
pushf
pop
pop
add
scas
mov
xlat
jns
pop
test
sub
cmp
adc
je
jo
add
ficompl
pop
scas
hlt
push
sub
ret
mov
push
or
pop
pop
and
pop
and
in
jl
xchg
pop
pop
cmp
mov
jge
pop
jmp
sahf
into
xchg
mov
lret
pop
scas
movsl
in
outsl
push
movsb
push
pop
xchg
nop
fistl
aaa
out
inc
jbe
pushf
push
mov
sub
and
inc
out
mov
pop
mov
mov
add
adc
cltd
lods
ds
pop
lods
mov
in
dec
enter
enter
subl
pushf
fstpl
fidivrl
jo
mov
xchg
push
sub
lea
cwtl
jb
gs
pop
dec
ljmp
insl
lds
or
popf
cmp
leave
cmp
js
movsl
into
and
popf
jns
lret
shrb
addr16
lret
ds
lahf
pop
insb
mov
pop
inc
mov
jnp
insl
sub
shll
pusha
xor
cmp
stc
mov
push
mov
enter
ljmp
jae
dec
lahf
imul
mov
cmpsb
sbb
scas
inc
addr16
fcomps
arpl
jmp
fcmovu
xchg
pop
push
idivb
dec
pop
jg
or
xor
inc
mov
jg
aaa
call
fs
xor
addl
pop
mov
arpl
mov
jbe
pop
dec
js
shrb
cli
test
roll
fists
xchg
mov
ret
push
pop
lret
jecxz
cmp
out
push
pop
outsl
scas
es
and
mov
mov
jb
push
pop
dec
mov
lret
cmpsb
pop
ja
cmp
nop
mov
les
push
fstp
bnd
xlat
shr
jle
mov
scas
xchg
sti
stos
cmpsb
xor
pusha
inc
pop
mov
pop
dec
mov
lahf
ficomps
pushf
stos
mov
ja
ret
mov
add
cmp
dec
add
pop
xchg
loope
out
gs
pop
stc
lea
push
aaa
mov
cmp
lods
cli
pop
jl
jmp
push
outsb
xchg
pop
movsb
js
mov
addr16
pop
mov
arpl
pop
adc
adc
jbe
mov
mov
jno
adc
mov
xchg
out
lret
lret
mov
push
lret
xlat
push
xchg
lcall
out
clc
scas
inc
ret
xchg
movsl
or
sbb
addb
xor
dec
movsb
loopne
pop
out
cmc
mov
dec
lret
pop
jnp
jae
mov
jbe
push
fnstsw
cmp
mov
test
fsub
call
fwait
xchg
jae
jno
adc
push
xor
arpl
sbb
test
push
xchg
pop
sub
xchg
leave
jl
out
push
jb
cmp
loopne
loop
jnp
mov
mov
jp
idivl
test
cwtl
mov
mov
stos
cltd
mov
loope
and
add
jne
lret
jge
sub
lcall
sbb
cld
mov
outsl
bound
mov
mov
pop
inc
les
pop
ja
xchg
jne
push
xor
mov
stos
jp
mov
mov
sub
mov
jo
push
insl
jne
mov
loop
aas
pop
ret
popa
inc
shlb
push
inc
mov
mov
xchg
sub
filds
add
pop
cmpsl
dec
cmp
loopne
pop
scas
lods
jb
inc
int
push
pop
shll
push
or
push
cld
pop
cltd
jnp
mov
pop
or
and
outsl
sbb
jl
xchg
or
aad
rcrb
inc
push
mov
adc
jne
xchg
fcoms
push
enter
leave
rcll
mov
mov
lea
add
mov
mov
add
repnz
adc
pop
and
popa
sbb
pop
push
mov
movsl
cmpsb
xchg
insl
push
enter
daa
sbb
mov
pop
add
out
mov
mov
pop
mov
test
xor
cs
addb
icebp
mov
push
outsb
mov
fwait
pushf
insl
clc
ficompl
imul
xor
pop
imul
addb
sub
pop
sahf
int3
pop
out
dec
insl
dec
das
pop
pushf
cmp
push
mov
adcl
je
stos
adc
lcall
xor
push
fcoms
sub
or
loope
bound
add
pop
pop
stos
jecxz
xlat
inc
inc
inc
push
mov
notb
shl
ljmp
jnp
xchg
scas
xchg
in
push
pop
mov
lods
fistpll
push
push
pushf
dec
insb
mov
cmpb
mov
sbb
adc
pop
adc
mov
sub
sbb
leave
test
cmp
fstps
lahf
mov
test
xchg
xchg
movsl
icebp
pop
daa
stc
cmp
int
jle
pop
jl
stos
cmp
fmuls
jns
flds
pop
jnp
sub
jp
push
push
cmp
movsl
mov
bound
dec
xor
sarl
xchg
in
sbb
xchg
adc
lahf
add
shrl
pop
pop
stc
wrmsr
daa
mov
cmp
ljmp
in
adc
sbb
lret
lods
jns
pop
mov
in
rclb
jle
mov
ret
popa
nop
cmp
jns
testb
xor
leave
sub
rcrl
xchg
jbe
adc
cmp
stc
pop
adc
jg
sbb
lahf
rorl
adc
stc
repz
cmp
sbb
cwtl
inc
jno
mov
aad
in
mov
xchg
adc
pushf
push
add
popf
pop
loope
inc
pop
cld
mov
inc
hlt
sbb
dec
push
jo
sub
dec
pop
inc
jp
mov
pop
pop
jne
fistps
pop
lret
andl
pop
mov
lahf
mov
out
jnp
push
mov
mov
push
sbb
stc
mov
pop
test
addr16
dec
fiaddl
in
pop
push
icebp
arpl
scas
mov
add
or
clc
scas
das
inc
pop
jb
iret
sbb
push
cwtl
lcall
dec
pop
xor
ret
enter
mov
movsl
cwtl
push
dec
filds
pop
in
add
lods
insb
into
pop
mov
stos
jo
pop
jmp
cmp
lock
sbb
bsr
cltd
mov
jae
in
push
or
ja
xor
icebp
add
imul
and
push
fcomp
inc
pop
dec
mov
pop
dec
sbb
shrl
pop
out
mov
in
xchg
mov
push
mov
outsl
mov
push
rcrb
pusha
cld
lods
movsb
jle
mov
jecxz,pn
outsl
das
int3
sbb
or
jmp
pop
adc
stc
fstpl
arpl
or
iret
sbb
mov
scas
stos
push
mov
jp
cmp
sbb
adc
pop
jo
add
faddl
lods
and
mov
jno
pop
rcrl
jecxz
cmp
pop
scas
std
aam
dec
pop
push
lods
icebp
cmp
fst
inc
test
adc
pop
or
in
and
pop
cmp
inc
inc
popa
dec
cmpsl
fisttps
pop
repnz
mov
pop
out
jle
out
mov
dec
xor
lret
or
jbe
jecxz
rcrl
sub
loop
pop
sarl
push
aad
je
rcrl
push
pushl
and
setae
or
scas
or
cli
fcoms
push
mov
jge
xor
inc
pop
movl
fwait
hlt
fdiv
push
clc
inc
shrb
scas
fdivs
and
pop
loope
or
add
fs
pop
xchg
pop
lcall
inc
int
xor
pop
pop
nop
cld
repz
and
mov
push
cmp
cmp
out
pop
pop
ja
fnstenv
and
cmp
add
mov
mov
jle
fucomip
popa
adc
dec
cmp
mov
sbbb
xor
fstps
dec
pop
mov
pop
stos
mov
pop
enter
stc
pop
clc
adc
mov
push
push
repz
jno
inc
add
jb
push
adc
jecxz
insb
push
mov
pop
mov
shrl
push
pop
aas
sub
cld
stos
pop
jl
cmpsb
shlb
das
jo
jecxz
pop
sarl
sub
pushf
dec
xchg
dec
in
gs
cmpsl
jp
scas
jbe
add
adc
sub
cmc
jbe
fs
inc
cmp
push
cmp
xchg
push
je
inc
aam
movsl
pop
fxch
add
lds
xor
cltd
mov
xchg
pop
mov
inc
test
dec
jbe
out
sbb
push
fldl
and
pop
sti
cltd
stc
push
mov
dec
pop
pop
loop
sbb
mov
sbb
fildll
push
mov
pop
imul
lret
jbe
pop
lea
pop
insb
lock
xchg
mov
mov
push
pop
dec
add
pop
dec
hlt
pop
push
push
fwait
nop
movsb
sbb
sbb
push
dec
loopne
mov
xor
push
call
mov
data16
push
jecxz
rcrb
push
pop
push
es
dec
mov
in
ret
mov
push
cmpb
dec
cmpsl
add
pop
gs
pop
subl
pop
push
cmp
and
jge
mov
pop
xchg
ss
mov
iret
ret
scas
bound
pop
stc
into
sahf
test
sbb
ja
cmpsb
fs
cmp
mov
dec
pop
cmp
and
mov
pop
rorb
xchg
dec
pop
enter
sbb
ret
scas
pop
adc
and
pop
iret
aam
sti
sarb
and
mov
rcrl
jnp
and
into
sub
dec
ss
inc
jecxz
pop
mov
stos
mov
shl
inc
push
insl
cmpsb
sbb
pop
mov
shl
outsb
mov
pop
mov
or
cmc
cli
je
fisttps
dec
mov
pop
pop
push
mov
in
into
in
filds
fldcw
mov
imul
or
nop
fidivl
scas
cltd
sbb
add
dec
clc
xor
pop
pop
aam
jbe
push
dec
pop
or
jmp
pop
js
pop
addb
das
or
xchg
rcrl
js
test
mov
popf
loop
pop
jbe
and
inc
pop
push
dec
jne
test
xchg
shl
subl
jmp
in
mov
js
add
aad
adcb
iret
cmp
push
inc
sarb
and
jge
dec
push
pop
out
jl
lret
or
inc
ds
lods
mov
xchg
pop
stc
cmp
stos
sbb
xor
dec
inc
loope
xor
ds
jb
popa
shll
lods
stos
and
movsl
inc
repz
fwait
mov
xchg
pop
pop
mov
pop
bound
aas
mov
addb
and
fcmovnu
pop
push
pop
gs
sahf
movsl
pop
mov
mov
repz
jle
lods
sarl
fdivr
rcrb
cwtl
pop
lods
movsl
xor
pop
loopne
cmp
cltd
pop
in
adc
push
mov
cmpb
sub
aam
pop
aas
sbb
int3
xor
in
push
mov
pop
xor
cwtl
mov
cmc
mov
les
leave
jo
sbb
dec
fadds
call
rolb
and
push
xchg
es
stc
jmp
and
into
pop
pop
mov
leave
or
pop
xor
ret
jmp
pop
mov
jnp
pop
movsb
addr16
ret
xchg
loope
add
push
and
pop
push
fistps
sbb
cmpl
push
pop
pop
dec
adc
inc
arpl
fldt
pop
xor
movsl
mov
lret
mov
sub
lea
ss
or
outsl
sub
pop
iret
adc
pushf
ret
mov
jbe
inc
cmp
subb
push
int
aas
lahf
mov
les
cmp
jle
jecxz
or
sbb
dec
dec
ret
mov
popf
pop
sub
dec
subb
js
lahf
rorb
mov
out
mov
test
outsl
xchg
push
sub
jge
addl
repz
push
data16
inc
mov
mov
sub
mov
popa
mov
mov
fwait
jle
add
pop
mov
mov
mov
fsubs
adc
inc
fsubl
js
xchg
cmp
add
pop
mov
jns
pop
ds
mov
pop
icebp
inc
pusha
xor
mov
arpl
inc
sub
lret
lods
sti
or
out
xchg
imul
outsl
pop
out
xchg
inc
and
pop
mov
xor
cmpsl
pop
sbb
lret
hlt
rorb
mov
jp
mov
jno
jecxz
mov
pop
mov
adc
adc
pop
adc
loope
mov
xchg
lret
stos
or
dec
jecxz
xor
sbb
mov
out
pop
rcrb
xor
fistpl
lahf
lcall
lds
cmpsl
pop
shlb
pop
enter
aaa
out
adc
sub
add
and
and
push
dec
je
loop
mov
pop
xor
mov
test
cltd
pop
push
mov
jmp
mov
mov
pop
pop
fxch
lret
jp
pop
scas
in
or
aam
lds
xchg
pop
imul
pop
popa
push
pushf
xor
pop
out
cmp
push
stc
or
lea
popf
adc
mov
mov
fstpt
les
iret
mov
sbbb
fldl
cmp
gs
cld
adc
arpl
sbb
lcall
ss
mov
pop
in
int
cmpsl
outsl
jnp
lret
rorl
neg
mov
cld
xchg
and
je
cmp
inc
lret
jmp
inc
sahf
push
xchg
fisubrl
fnstcw
arpl
dec
pop
les
adc
xchg
pop
cmpsb
sbbb
xor
pop
mov
hlt
fnstcw
xor
pop
ss
ds
std
mov
fs
nop
pop
enter
mov
ret
aad
push
cmp
dec
lods
or
mov
mov
clc
enter
mov
loopne
sub
sub
cmp
sbb
in
loope
mov
mov
fwait
pop
imul
dec
and
jnp
pop
sarl
out
sub
xchg
sbb
pop
push
lea
arpl
icebp
jne
popa
push
push
testl
pop
lock
fidivrl
out
addr16
das
pop
cmp
nop
std
jb
jo
pop
jge
dec
sub
mov
out
lahf
jl
fisubl
mov
pop
stos
fnstcw
mov
xlat
lock
mov
cmp
repz
jns
sahf
push
js
jmp
shl
jecxz
fisubrl
jnp
jno
fwait
lds
xchg
xor
fidivrl
mov
cmc
stos
xchg
inc
push
mov
sbb
and
aaa
inc
jnp
cmp
inc
xchg
mov
out
push
out
push
adc
lret
add
ficompl
inc
mov
adc
or
sbb
mov
sbb
loop
in
test
mov
jg
cmp
sarb
fnstcw
insl
sbb
bound
dec
pushf
outsb
adc
xchg
shrl
stos
mov
cwtl
mov
xchg
dec
nop
hlt
sub
leave
fidivl
out
mov
mov
jge
iret
bnd
cmp
arpl
mov
scas
lods
adc
xor
lahf
dec
push
pop
and
arpl
lcall
pusha
cmp
and
and
push
out
pop
add
shr
movsl
out
jmp
adc
loopne
cltd
in
add
into
pop
loope
mov
xchg
shlb
addr16
mov
in
adc
outsb
mov
pop
ret
mov
pop
or
push
jg
popa
sbb
pusha
fistps
push
pop
push
hlt
cltd
push
fwait
pop
repz
add
ficoml
sub
ret
pop
cmpsl
fisttpll
pop
out
fcoms
das
and
clc
lods
icebp
bound
mov
out
into
add
sbb
int
xor
push
jmp
pop
mov
out
adc
cltd
call
cmpsl
loope
pop
mov
jb
and
sbbb
or
lcall
xor
daa
and
lret
jo
jge
loopne,pt
cmp
pop
or
daa
add
pop
cltd
in
lahf
aam
mov
out
mov
pop
cmp
mov
adc
jno
cmp
inc
sub
pop
push
dec
testl
cmp
pop
test
dec
not
pop
push
cld
rcrl
push
pop
sbb
cmp
mov
stos
cmpsb
leave
stos
in
mov
jbe
std
lock
mov
push
xchg
jmp
fsubrl
or
xchg
int3
pop
pop
add
inc
jmp
inc
je
movsb
adc
mov
testl
add
call
pop
loopne
inc
sahf
adc
or
data16
nop
inc
test
ss
mov
dec
push
xchg
vaddps
mov
aad
jge
movsl
jmp
sub
stos
sarb
scas
inc
lahf
in
or
icebp
dec
mov
adc
push
mov
pop
cmp
dec
mov
pop
loopne
jnp
addr16
cmp
pop
orb
sbb
mov
pusha
out
jl
scas
jno
add
dec
insl
cwtl
pushl
popa
add
mov
nop
fstps
and
sbb
test
rcrb
iret
movsb
shl
adc
xchg
dec
negl
jne
pop
mov
dec
adc
pop
pop
decb
daa
add
xchg
movsb
mov
stos
test
mov
xchg
pop
pop
mov
pop
orl
mov
int
repnz
adcb
push
and
jo
movsl
inc
mov
pop
clc
aas
fidivs
out
pop
cmpsb
sbbl
cwtl
enter
outsb
pop
pop
int3
xchg
test
dec
pop
dec
sbb
fistps
stos
xor
add
inc
cmpsl
iret
adc
and
inc
ficompl
add
mov
dec
push
jb
push
cltd
xor
push
mov
cltd
ja
xchg
andb
jne
test
fstpt
fwait
mov
insl
das
or
or
pop
xchg
cltd
xchg
adc
dec
aad
scas
lret
or
push
in
test
arpl
mov
out
pop
pop
xchg
pop
mov
and
lahf
and
mov
scas
in
les
int
sbb
mov
pop
fcompp
out
inc
mov
aaa
pushf
clc
mov
pop
mov
test
cmp
xchg
adc
dec
dec
imul
mov
rcrl
sub
mov
sub
pop
pop
and
xor
inc
cld
mov
mov
ret
pop
pop
sbb
insl
aad
adcl
mov
cli
fidivl
mov
push
jle
sub
and
pop
ficomps
jge
hlt
sbb
pop
cld
stos
jne
into
dec
loopne
pop
fadds
sub
mov
xchg
fwait
nop
imul
clc
loop
rcll
test
pop
xor
std
out
popf
dec
lods
aas
out
xor
pusha
pop
loope
adc
in
xchg
das
mov
sbb
pop
lea
or
mov
pop
xor
jg
cmp
je
cmpsl
mov
daa
jo
adc
std
fsubs
lret
pop
and
fwait
push
pop
mov
mov
push
jbe
faddl
sub
xchg
pop
and
out
sub
in
pop
and
pop
mov
insl
cld
pop
sbb
fsubrl
dec
dec
orb
sub
mov
pop
out
out
add
inc
lahf
cmp
and
fiaddl
jg
mov
fdivl
pop
fistpl
mov
ds
imul
int
inc
pop
pop
lcall
pop
sbb
jecxz
data16
dec
push
push
jns
dec
pop
pop
xchg
mov
sbb
mov
mov
xchg
pop
push
rorl
push
mov
sub
pop
mov
out
pop
xor
adcb
push
cmovs
repnz
pop
pop
jb
and
adc
sub
pop
pop
push
sub
fiaddl
push
movsl
pop
int
sub
pop
and
pop
cmp
and
outsb
das
mov
pusha
dec
push
and
shll
and
movsb
mov
lods
imull
mov
nop
leave
jg
stc
pop
loope
adc
stos
stos
push
neg
jle
pop
test
lret
adc
adc
stos
lcall
lahf
mov
push
cwtl
jo
pop
or
inc
dec
or
jg
jecxz
fs
pop
and
inc
cmpsb
out
pop
icebp
push
fwait
mov
push
xchg
add
enter
and
jne
inc
adc
adc
mov
in
mov
fnsave
jno
pop
pop
cmp
mov
dec
outsl
or
testb
pop
cmpsb
ds
sub
mov
pop
push
test
rcrl
arpl
mov
icebp
xchg
fidivl
pop
adc
dec
int3
push
sub
pop
push
scas
out
ja
xor
outsl
lret
stos
add
xor
cmp
call
and
out
es
add
sub
adc
mov
outsl
push
pop
push
xor
inc
test
mov
xchg
ss
cltd
pop
nop
aad
pop
xchg
adc
dec
arpl
cmp
lret
aaa
insl
sub
stos
pop
imul
mov
ficompl
scas
and
cmp
mov
insb
pop
sub
pop
sub
rcrl
jecxz
pop
rcrb
inc
gs
push
mov
adc
sahf
or
test
aas
cmc
fdivr
sbb
pop
push
jns
add
push
sub
mov
pop
xor
pushf
lods
in
sub
lret
mov
mov
pop
adc
pop
xchg
lcall
pusha
rolb
push
cmp
icebp
or
idivl
ret
daa
xlat
add
and
pop
and
cmpsb
mov
pop
ljmp
push
mov
xchg
pop
enter
insb
mov
dec
lahf
mov
xchg
xor
lret
mov
lret
pop
sarb
mov
fistl
pop
aaa
pop
jne
ret
xor
std
ficompl
dec
cltd
pop
inc
mov
mov
mov
xchg
cs
fnstenv
in
pop
in
fdivrs
loop
xchg
xchg
stos
add
mov
adc
add
movsb
push
and
hlt
ja
leave
ficoml
addr16
addr16
in
sub
lahf
imulb
jmp
add
scas
dec
and
fnstsw
aas
dec
and
push
mov
xor
push
cmp
inc
lods
imul
lds
push
mov
flds
lock
adc
repnz
movsb
xchg
movsl
popa
andl
fdivl
xor
flds
mov
jp
xor
pop
movsl
int
sti
test
fdivrl
and
inc
mov
mov
dec
mov
xchg
data16
dec
sti
sbb
in
jns
pop
negb
ljmp
xchg
push
sti
aad
mov
pop
sub
add
fwait
imul
stos
fbld
clc
and
imul
or
jo
leave
push
push
out
ret
adc
and
pop
mov
pop
add
inc
out
lret
mov
iret
cmp
pop
lcall
adc
inc
call
cmp
sahf
ret
xor
mov
fnstsw
sarl
pop
cmpsl
jg
es
pop
rorb
cmp
loope
dec
jle
adc
sub
jb
sarb
jge
cmpsb
xchg
xchg
or
stc
sub
out
or
lods
push
enter
push
dec
out
jg
dec
fs
shll
mov
and
sbbb
fdivs
movsl
dec
xchg
xor
pusha
or
cmp
sti
repz
andb
push
mov
loopne
pop
pop
aad
mov
cld
fcomp
or
add
pop
xchg
les
mov
xor
in
lods
inc
scas
into
fiaddl
inc
cli
lods
add
pop
hlt
lahf
jge
loop
inc
out
pop
aam
movsl
cmp
or
push
leave
mov
outsl
pop
loope
mov
dec
push
scas
adc
stos
jbe
cmpsb
pop
mov
push
aam
inc
xchg
push
mov
sub
xor
xchg
pop
aaa
aad
sub
cmp
add
out
lret
arpl
test
imul
push
mov
or
inc
lcall
mov
test
xchg
pop
jnp
lods
cmp
incl
pop
scas
stc
ja
shrb
pop
mov
push
lods
cmpsb
adc
mov
ret
inc
cld
das
add
in
inc
xor
pop
dec
fs
or
icebp
xchg
test
mov
jo
das
mov
jns
pop
int
sub
sbb
sub
jns
pop
loop
mov
andb
cmpsb
fwait
imul
pop
sbb
or
sti
pop
sar
mov
push
fisubs
mov
add
xchg
xchg
jmp
xchg
pop
mov
push
test
loope
sbb
mov
dec
xor
fcoms
stc
xor
pop
aam
testb
shlb
aaa
push
inc
scas
subl
pop
arpl
cmp
mov
push
pop
test
jmp
pop
clc
xor
scas
pop
pop
shlb
cld
and
mov
js
add
into
add
cmpsl
xor
sbb
hlt
lahf
mov
in
xor
mov
cmp
mov
cs
shll
js
xchg
jno
xchg
jae
mov
pop
sub
lcall
adc
aad
cltd
push
xchg
or
mov
sbb
push
cltd
inc
subb
sbb
or
pop
mov
pop
movsl
lret
or
xchg
lahf
mov
fiaddl
dec
jmp
pop
addr16
jle
adc
div
stos
aas
cli
pop
xor
stc
outsl
sub
pop
clc
je
mov
xor
pop
loopne
out
xchg
push
mov
hlt
pop
call
mov
jmp
mov
jno
mov
cmp
and
jecxz
pop
adc
nop
xor
inc
jmp
mov
ljmp
pusha
sbbb
push
inc
add
loopne
pop
pop
xchg
outsb
xchg
xor
sub
andb
pop
xor
cmp
lret
out
jge
push
dec
sbbb
rcll
xorb
int
ret
mov
repnz
cmp
push
mov
and
mov
icebp
inc
cmp
out
loopne
pop
outsl
or
mov
movsl
shlb
jl
xchg
jnp
insb
jae
pop
dec
ss
call
adcl
pushl
cmpsl
mov
gs
inc
pop
cmp
sub
mov
cld
mov
lret
sbb
pop
daa
add
pop
loop
ss
test
push
jp
pop
dec
scas
jp
xor
mov
adc
pop
addr16
pop
inc
jecxz
jo
and
cmpsb
sbb
jbe
dec
popf
mov
pop
test
xacquire
mov
pop
and
pop
das
xchg
push
fidivl
cmpsb
call
jmp
or
clc
sub
mov
data16
push
sub
jl
mov
pop
orb
push
sarb
lret
ds
mov
push
jmp
inc
pop
hlt
mov
add
mov
mov
loope
bound
mov
push
divb
pop
mov
cmp
popa
sbb
mov
push
scas
jne
sub
jecxz
push
sub
sub
mov
xchg
xchg
mov
pop
inc
add
mov
test
fcmovnu
nop
stos
mov
mov
add
les
cmc
icebp
sbb
shrb
sbb
std
hlt
pop
jnp
paddq
cld
mov
out
push
dec
pop
lods
add
adc
xor
ret
xor
adc
or
mov
pop
dec
aaa
lret
mov
pop
hlt
out
loopne
ret
pop
loop
call
adc
pop
enter
sub
pop
jne,pn
imul
loope
insb
mov
into
push
dec
xchg
mov
es
lock
adc
dec
sar
inc
pushf
pop
outsl
imul
jge
pop
jno
ror
sbb
in
push
in
xor
and
jns
mov
jl
jb
ds
cmp
mov
shrb
pop
lret
mov
mov
xchg
sti
pop
xchg
inc
mov
sub
fsubs
decl
cmpsb
pop
or
push
jge
pushf
pop
dec
or
pop
sarl
jle
arpl
lods
xabort
rorl
inc
sbb
pop
aad
aaa
test
mov
in
pop
movsb
and
cmpsb
pop
xchg
movsl
push
xchg
push
insb
rcrb
fisubrl
cmp
imulb
pop
push
bound
dec
test
aam
inc
mov
iret
dec
xor
mov
pop
sarl
push
sub
push
mov
sbb
insl
aam
pop
inc
std
xchg
jo
and
mov
add
rorb
sahf
jnp
sub
out
stos
movb
pop
sbb
and
mov
addr16
pop
les
pop
mov
pop
push
xchg
sti
xor
pop
jno
xchg
cmp
mov
in
ret
outsl
pop
cwtl
out
jmp
or
pop
rcrb
push
fmuls
jno
and
pop
pop
xor
adc
adc
fistpll
fucomi
cs
dec
inc
jb
xchg
and
sbb
dec
imul
test
ja
adc
pop
jl
lahf
lcall
fnstsw
pop
rclb
rcrl
cli
in
or
dec
fcoms
mov
iret
repz
jecxz
and
idivl
push
xchg
rcrl
stc
fcompl
fcoms
dec
movsb
add
rcl
call
pushf
popa
dec
mov
inc
mov
nop
movsl
mov
bound
xchg
test
out
sub
push
and
mov
xlat
push
pop
inc
jecxz
imul
scas
lret
pop
outsl
xor
or
lock
cltd
iret
xchg
pop
sbb
mov
dec
pop
push
push
insb
js
movd
fiaddl
pop
mov
sub
out
stos
dec
add
mov
fcoms
jbe
pop
cwtl
cltd
in
mov
pop
popf
sbb
push
mov
and
lahf
adc
pop
and
cmp
sahf
mov
mov
rcr
xor
push
sbbb
mov
fwait
and
repnz
mov
mov
sub
js
mov
in
pop
lcall
jl
lock
cmp
pop
mov
ss
sti
dec
jge
push
pop
push
sti
ss
test
push
lea
clc
mov
movsl
fidivrl
cld
xchg
pop
fistpl
adc
fidivl
outsb
cmc
and
jo
test
arpl
pop
and
lea
sbb
mov
iret
adc
xor
pop
pop
pop
lea
pop
movsl
mov
and
mov
out
jbe
ja
inc
ljmp
push
leave
into
repnz
es
sub
ret
jle
dec
fstpl
test
mov
sbb
pop
aad
jns
js
aam
jne
psubb
icebp
test
lea
out
pop
add
jg
loopne
arpl
xorb
jge
cmp
lods
mov
dec
sbb
xchg
inc
pop
cld
inc
inc
js
jp
push
shlb
lcall
gs
ret
lea
or
push
push
mov
fdivl
outsb
aam
dec
fs
test
std
pop
pop
inc
xor
sbbb
sbb
and
push
inc
sbb
das
nop
fcmovnb
es
add
adc
xor
jg
jle
mov
inc
fstps
dec
pushf
pop
lds
inc
xchg
mov
xchg
or
fucomp
pop
pop
aam
lcall
int
xchg
pop
inc
lock
push
mov
lcall
mov
inc
cli
jbe
jl
xor
push
clc
movsb
add
fcomps
mov
jnp
in
fs
ficoml
or
or
mov
pop
adc
ja
into
push
and
or
dec
xlat
stos
xor
jmp
ja
int3
mov
fptan
pop
scas
movsb
xchg
test
mov
hlt
orb
ficomps
inc
dec
jnp
ret
sbb
push
xlat
sarb
or
pop
aas
mov
mov
jle
xor
stos
pop
nop
mov
pop
subb
jae
icebp
pop
xchg
pop
mov
inc
sub
pop
imul
arpl
addr16
adc
mov
sbb
xchg
cwtl
push
pop
xlat
lds
sti
dec
adc
dec
xchg
mov
or
xlat
insl
xor
ficoml
ret
jns
pop
movb
pop
fistpll
pusha
adc
mov
mov
mov
pop
out
push
cli
xchg
push
jge
cmp
dec
stc
ja
lahf
mov
lea
adc
shll
xchg
out
test
cmp
pop
jecxz
sarl
adc
or
pop
stos
pop
dec
mov
in
xchg
cmc
lahf
lods
dec
aaa
sti
mov
frstor
lret
xor
mov
loop
fdiv
inc
mov
xchg
test
cli
pop
push
repnz
lods
jge
aas
mov
mov
out
roll
sub
xchg
jecxz
sub
cli
push
pop
fstpt
sbb
xchg
aad
lahf
mov
loopne
jnp
test
mov
add
pop
fiaddl
cwtl
stos
pop
and
cmp
int3
mov
fs
faddl
sub
sub
cwtl
cmp
pop
push
pop
mov
test
mov
sti
sbb
mov
xchg
add
mov
hlt
xchg
out
pop
push
jnp
into
pop
or
insl
sbb
sub
icebp
sub
test
sbb
pop
rcr
subb
adcl
incb
push
xlat
ret
loope
pushf
dec
pop
lahf
mov
sbb
fildl
pop
push
jl
push
sbb
scas
adc
lret
movsl
pop
nopl
sti
ds
leave
cld
pop
aaa
or
push
jge
addr16
push
lods
insb
mov
out
mov
lock
ss
js
xor
std
jns
arpl
pop
rorb
add
and
pop
lcall
leave
sbb
mov
and
xchg
shrl
out
test
push
dec
cwtl
dec
adc
pop
jg
cmp
pop
and
mov
cwtl
lahf
mov
sub
ljmp
mov
lahf
fbstp
enter
pop
ds
or
mov
inc
pop
test
pop
jb
mov
and
inc
adc
pop
lods
out
xchg
mov
cmpsl
xchg
pop
out
ret
push
mov
dec
jp
mov
sub
jae
xchg
pop
pop
test
jo
jne
shrb
out
pop
imul
mov
pop
mov
pop
cltd
out
push
cmpb
push
pop
ljmp
or
mov
jecxz
adc
repnz
stos
pushf
push
jns
scas
pop
pop
sbb
push
out
fnstenv
sub
jbe
cltd
mov
pop
jle
insb
jno
bound
je
xchg
dec
and
popa
scas
adc
xorl
imul
inc
int3
dec
scas
mov
repz
enter
fs
rcrl
push
sti
js
fadd
jmp
out
pop
fidivl
push
pop
and
dec
mov
insb
nop
mov
pop
push
fld
repz
dec
mov
adc
sahf
lods
ret
pusha
enter
pop
faddl
dec
rcrl
pop
adc
xchg
repz
stc
shlb
ja
pop
je
mov
pop
and
inc
xchg
mov
scas
pop
test
scas
movsl
int
in
push
les
xchg
jns
loope
mov
adc
aas
repnz
inc
subl
adc
clc
dec
imulb
jo
mov
ret
sbb
dec
in
pop
mov
inc
dec
nop
lcall
cltd
test
test
mov
addr16
inc
sub
pop
or
xor
or
mov
sbb
cltd
je
shrl
xor
push
hlt
pop
mov
pusha
pop
cmp
mov
mov
jno
add
lahf
add
cwtl
ljmp
adcb
xor
subl
push
popf
pop
out
push
mov
push
stc
negb
insb
xor
ja
imul
pop
sahf
lcall
mov
push
sbb
adc
lahf
gs
ja
mov
pop
inc
dec
push
pusha
test
push
adc
mov
cli
mov
cmp
adc
mov
mov
fnstsw
test
fcmovne
xchg
arpl
dec
sbb
fs
xchg
sub
test
mov
push
xchg
xor
jns
xlat
lret
pop
sub
or
ss
xor
cmp
enter
lahf
xchg
addr16
sbb
or
mov
mov
mov
mov
fistpl
aam
push
pop
out
int3
dec
enter
pop
idivl
loopne
pop
stos
mov
adcb
popa
xchg
outsb
and
xor
jno
cli
shlb
mov
cmp
jg
pop
scas
cld
lds
add
lea
pop
add
in
call
mov
das
loope
or
and
std
xchg
scas
rcrl
cmpsb
stos
stos
sbb
xor
xor
mov
mov
pop
mov
xchg
xor
leave
stos
mov
or
pop
or
pop
in
and
lods
adc
pop
dec
jg
inc
pop
daa
insl
xor
jle
or
pop
dec
out
fadds
jl
add
or
fmuls
stos
mov
cmp
daa
xchg
bound
clc
lcall
cmp
cld
xor
fwait
inc
pop
leave
mov
subb
jae
and
cmp
stos
push
pop
lds
jl
scas
imul
jns
enter
sub
ja
mov
or
push
decl
mov
cmp
fmul
ss
popf
out
dec
popfw
aad
das
fnsave
push
cmp
or
pop
addr16
mov
outsl
out
nop
cmp
sbb
sbb
mov
dec
push
or
outsb
mov
mov
add
pop
sbb
popa
cmpsb
adc
pop
dec
out
stc
push
mov
inc
and
mov
jg
jp
into
repz
jb
pop
push
jo
xor
and
adc
dec
pushf
call
stos
mov
ljmp
pop
jmp
jns
in
test
cmpb
scas
inc
ficompl
xlat
mov
nop
lea
jne
add
ljmp
adc
push
stos
jp
jle
or
hlt
pushf
xchg
push
out
fs
jmp
dec
lods
nop
icebp
xchg
push
sbb
cmp
fwait
into
popa
daa
jbe
in
xchg
jnp
bound
lock
mov
test
push
mov
movsb
mov
les
push
cmp
inc
mov
loop
mov
sbb
lcall
leave
cmp
mov
dec
mov
push
pop
add
ret
mov
fisubrs
stos
jmp
scas
das
mov
sub
and
jle
lahf
rcll
cwtl
das
popa
iret
pop
mov
push
fdivp
ja
fldl
data16
icebp
outsb
and
lahf
mov
adc
pop
push
cmpsb
ja
in
pop
mov
sti
fisubl
iret
sti
mov
lret
jmp
les
test
cmpsb
mov
movsl
pop
and
cmp
xchg
mov
inc
sbb
sbb
mov
inc
out
or
mov
orl
xchg
ljmp
pop
sub
repz
and
xorl
cmp
adc
xchg
cmp
fwait
cmp
adc
notb
push
jecxz
mov
xchg
imul
jl
lret
push
pop
jno
push
push
pop
dec
cld
xor
xchg
dec
insl
push
pop
mov
adc
mov
sub
enter
sub
sbb
add
es
add
fld
pop
or
mov
rcrl
pop
xchg
dec
xchg
xor
ficomps
or
mov
pop
fildll
sub
leave
push
pop
add
rcrb
addr16
ret
rcrb
or
insb
cmp
jns
sub
repnz
pop
xorl
or
lahf
out
pop
dec
pop
int3
or
push
mov
pop
push
lret
pop
popf
shrb
mov
stc
cld
mov
movsl
pop
inc
test
pop
cmc
das
push
xlat
out
sti
fcompl
mov
xor
pop
lret
popf
int
pop
lods
pop
xchg
outsl
adc
mov
push
fimuls
xchg
int3
aas
sub
fildll
dec
mov
fmull
sbb
pop
push
es
and
or
add
cmp
pop
daa
mov
mov
pop
shll
adc
arpl
mov
cltd
fwait
out
pop
xchg
pop
jmp
gs
cli
lret
mov
aad
fadds
inc
ror
mov
mov
sbb
fstpl
mov
inc
mov
jmp
outsb
jns
pop
repnz
pusha
mov
lods
add
scas
mov
pop
adc
pop
jno
mov
cmp
in
fcmove
mov
movsl
movb
push
sub
popa
inc
jns
xchg
mov
stc
gs
or
stos
cmp
add
xchg
jmp
or
andl
sbbb
push
xchg
jnp
push
dec
mov
ljmp
rcr
jp
cwtl
inc
xor
cmp
sarb
js
mov
pop
popf
inc
xor
inc
or
mov
aaa
pop
ss
sbb
dec
test
pop
or
fwait
out
roll
aas
stos
mov
out
xlat
scas
adc
push
mov
or
dec
sbb
pop
mov
cmp
imul
fwait
inc
repnz
mov
testl
icebp
cli
nop
mov
jnp
or
mov
mov
loop
adc
lahf
mov
fld
mov
xchg
pop
outsb
cmp
pop
jne
push
add
sti
dec
jno
rcrl
fmul
cmp
pop
pop
pop
in
sub
fldz
pop
xor
sbb
pop
pop
je
ljmp
add
or
jnp
aas
pop
jne
mov
std
mov
fisubl
jnp
loope
dec
pop
xchg
xor
jb
out
adc
sbb
shrl
ss
xor
mov
scas
int
jo
xor
lods
mov
decl
xor
push
or
mov
out
jge
mov
aam
mov
jo
mov
xchg
dec
clc
sub
pushf
shrl
adc
jmp
inc
pop
xor
mov
repz
mov
pop
cmp
sbb
mov
fildl
jmp
outsb
addr16
and
sti
out
inc
push
aad
cmp
sub
daa
jl
test
ljmp
jge
pop
repnz
pop
cmp
jb
and
push
bound
push
xor
outsl
sti
cmpsb
iret
mov
mov
push
add
pop
pop
push
pop
mov
sub
data16
movsl
jns
pop
jns
mov
lahf
in
fildll
stc
pop
lock
pop
inc
or
mov
push
adc
jns,pt
pop
push
xor
xor
adc
mov
fbld
call
or
inc
jg
sbb
pop
inc
mov
jle
pop
dec
pop
jo
rcrb
lcall
mov
jns
inc
sub
cltd
push
sbb
mov
scas
dec
cmpl
repnz
push
call
pop
xchg
mov
test
mov
mov
sbb
call
xchg
add
fwait
pop
in
mov
mov
adc
pop
mov
mov
in
ret
pop
bound
xchg
mov
pop
icebp
sub
or
sahf
out
mov
pop
aam
xchg
daa
sbbb
dec
or
pop
ljmp
pop
jns
mov
pop
pop
sbb
jle
or
pusha
add
xor
pop
dec
and
push
sub
xor
jmp
cmpsb
mov
adc
stos
push
js
jle
pop
push
dec
clc
stos
sub
xchg
pop
pop
out
pop
or
std
rorl
jnp
mov
lret
and
mov
jbe
jle
fcompl
mov
aam
mulps
cmp
mov
push
jg
inc
lds
clc
and
into
and
mov
pop
jp
push
push
addr16
mov
pop
daa
loop
pop
mov
sbb
aas
std
cli
rorl
outsl
mov
fdivr
dec
push
mov
enter
call
int
jbe
push
push
cmovge
dec
lock
adc
xor
pop
ds
outsb
jnp
ljmp
lret
nop
dec
lds
pusha
int3
add
pop
fxch
in
shlb
lds
sub
inc
pop
pop
je
push
fstpl
fildll
rcrl
negb
mov
das
xor
iret
jae
or
setg
sarb
and
or
cltd
mov
xchg
pop
ficoms
test
leave
pop
mov
cmp
push
and
pusha
inc
or
inc
push
cli
call
nop
or
mov
jbe
pop
push
or
xchg
lahf
dec
xor
jl
mov
popl
ds
lds
je
and
scas
xor
push
jae
and
aas
xchg
or
jmp
fdiv
push
sbb
ficomps
ss
sub
pop
into
sbb
pop
cwtl
jnp
push
mov
pop
cs
add
popf
pop
test
mov
mov
add
cltd
dec
les
fistl
jo
mov
mov
and
cld
pop
mov
jnp
pop
push
popf
test
push
sbb
add
sub
jmp
pop
jecxz
int3
repz
mov
jae
mov
adc
pop
rsm
pop
mov
jp
mov
outsl
push
mov
loope
clc
inc
cmp
sbb
or
or
sub
mov
xor
mov
cmp
adc
aaa
push
xchg
popa
ret
sti
popf
add
arpl
inc
cmpsb
mov
mov
movsb
pop
pop
dec
sarb
xor
test
fistpll
imul
mov
insl
inc
jge
or
xorl
jnp
pop
es
movsb
data16
lret
sbb
cmp
xor
pop
push
fdivrp
mov
lcall
fstps
and
xchg
nop
fidivl
pop
rcrl
pushl
mov
fdivs
ret
mov
mov
dec
out
lret
dec
aam
mov
lret
sbb
fsubr
dec
jecxz
scas
cmpsb
fwait
shll
popa
ss
or
pop
pop
clc
insl
push
jecxz
mov
cli
pop
or
popa
adc
int3
jecxz
lcall
adc
shll
jo
or
cltd
jecxz
cmp
mov
repz
xor
jbe
jle
pop
dec
test
xchg
aaa
test
pop
dec
mov
mov
push
inc
out
xor
dec
movsb
jecxz
push
lea
mov
pop
ds
shl
aad
sbb
mov
inc
in
mov
cmp
stos
sbb
xor
sti
dec
pop
xchg
es
imul
jne
mov
iret
pop
inc
aam
xchg
xchg
pop
mov
pop
ljmp
inc
pop
in
imul
dec
in
in
popa
andl
cltd
scas
out
pop
jmp
cld
mov
out
xor
stos
scas
ja
scas
hlt
sti
addr16
mov
stc
lret
inc
mov
pop
in
scas
cmc
js
pop
pop
fldt
xor
sbb
movsb
lret
cwtl
pop
testl
dec
sbb
popf
pop
scas
mov
roll
jns
mov
pop
movsl
lahf
mov
inc
cmp
aam
gs
pop
add
je
mov
sub
dec
push
push
mov
xchg
sahf
mov
mov
jle
pop
bound
andb
pop
add
or
sub
or
pop
push
pop
jl
sbbl
adc
inc
pop
push
inc
in
mov
dec
ret
sbbl
test
push
lock
xlat
cmp
jmp
mov
pop
sub
dec
pushf
loopne
sbb
mov
shlb
mov
adc
mov
insl
sbbl
cltd
cmp
cmp
mov
pushf
int
sbbb
adc
scas
pop
sub
in
nop
arpl
pop
cmp
add
jmp
testb
pop
mov
sbb
cmpl
int
cmp
adc
test
jnp
or
hlt
jmp
test
pop
mov
enter
mov
stc
inc
lods
pop
jbe
adc
leave
rcrl
pop
fstp
and
ds
ja
pop
xor
mov
in
pop
std
inc
es
negb
pop
fmuls
les
arpl
outsl
lret
jne
das
jnp
add
sbb
cmp
mov
sbb
int
sahf
in
mov
inc
xlat
jle
sub
arpl
popf
mov
sub
dec
leave
sbb
mov
int
pop
in
jne
pop
insb
inc
cs
in
sahf
xchg
sti
and
sub
sub
xor
inc
inc
push
shll
and
jecxz
imul
lock
push
leave
mov
pop
inc
int3
rol
stc
pop
cmp
pop
or
push
es
pop
aaa
lods
popf
adcb
pop
iret
stos
std
pop
test
push
pop
pop
out
outsb
es
orl
lea
jecxz
pop
cmp
pop
sahf
xor
popf
lods
movsl
pop
rol
ja
fisttpll
pop
fdivrl
or
xor
adc
hlt
pop
in
daa
pop
mov
fsub
sub
push
sub
mov
xor
shld
clc
pop
pop
in
push
pop
or
push
dec
loop
pop
pop
bound
test
dec
or
lret
int3
jnp
mov
dec
pop
sbb
pop
adc
pop
ret
outsl
je
fsts
cmpsb
inc
push
adcl
dec
pop
push
mov
jmp
sbb
stc
das
pop
mov
dec
and
mov
lret
test
leave
mov
push
fiaddl
nop
mov
dec
int
mov
out
pop
push
push
push
pop
movsb
mov
ret
xchg
test
xlat
mov
inc
sti
das
push
pop
mov
push
outsb
je
pop
pop
cwtl
xorl
pop
frstor
out
pop
addr16
fcompl
mov
lds
pop
add
pop
in
jbe
and
mov
mov
mov
pusha
pop
inc
fsts
pop
inc
mov
fcoml
test
pushf
pop
sti
shl
xchg
pop
cmp
lret
pop
mov
sbb
imul
filds
pop
jae
jge
sbb
lods
pop
jae
test
cs
into
repnz
adc
sbb
xorb
push
int3
inc
jp
decb
pop
xor
pop
sbb
or
negb
cmp
sub
rcr
icebp
pop
sarb
mov
je
xchg
mov
cmp
pop
mov
jmp
inc
inc
adc
pusha
mov
stos
ds
cmp
aas
pop
lret
rcrl
push
jae
imul
push
adc
lock
adc
sbb
arpl
mov
pusha
mov
flds
test
shlb
out
push
sub
mov
out
mov
arpl
push
pop
sbb
data16
stos
sbb
imul
fdivr
pop
xor
add
adc
and
jo
shl
pop
and
cmp
daa
mov
pop
xor
sub
jo
lods
scas
dec
in
negl
pop
sub
push
push
call
mov
rcll
enter
sbb
lods
lcallw
jmp
xchg
jg
mov
jb
pop
insb
cmc
outsb
out
imull
sbb
cltd
filds
pop
inc
pop
xchg
xor
cmp
das
pop
in
scas
jmp
call
cwtl
pop
push
lds
push
pop
push
and
lahf
je
clc
add
mov
inc
jno
aas
ljmp
and
adc
test
xor
mov
pushf
arpl
push
fcoms
ds
iret
mov
aas
mov
and
pop
lahf
scas
or
or
xor
pop
pop
adc
jg
sbb
fistpl
lret
pop
int
outsb
lea
aad
or
xchg
jge
mov
pop
mov
inc
dec
aas
jb
out
insl
ss
jecxz
add
lock
push
adc
sbb
jb
mov
addl
insb
jge
subb
gs
mov
xchg
scas
insl
push
mov
call
out
push
pop
and
mov
pop
pop
inc
cmp
sar
pushf
sub
sahf
dec
mov
pop
mov
xchg
mov
pop
sbb
pop
pop
mov
jp
pop
xchg
mov
cmpxchg
inc
and
dec
rcrb
push
cmp
pop
add
or
sub
sbb
popf
pop
mov
sbb
adc
sbb
adc
stos
clc
dec
loope
enter
pop
jne
test
adc
pop
stc
out
loope
aas
mov
int
push
dec
pop
push
and
push
cmp
cmp
jae
or
loopne
jg
and
adc
test
outsb
mov
pop
fs
cld
femms
pop
addb
xchg
pop
iret
out
push
aaa
sub
enter
in
and
repz
jae
in
mov
push
mov
xchg
add
fidivl
shrb
leave
and
dec
pop
movsl
add
mov
in
lcall
fstpt
xor
mov
add
dec
push
cmpb
xchg
pop
ljmp
add
pop
jecxz
iret
dec
mov
xchg
add
cmpb
pop
shl
push
arpl
jae
rcrl
out
or
pop
popa
or
pop
dec
dec
xchg
and
js
pop
cltd
nop
push
mov
pop
xchg
into
pop
push
test
push
nop
add
icebp
jp
pop
jnp
mov
push
pop
out
pop
xchg
adc
aam
dec
scas
push
sbb
int
xchg
or
pop
mov
jne
fs
es
and
xor
mov
cli
stos
dec
pop
mov
push
pop
ret
dec
daa
jne
test
loope
bound
mov
pop
adc
ss
mov
or
call
sbb
xchg
pop
xchg
test
xor
and
shll
inc
dec
pop
dec
adc
daa
sub
pop
mov
push
mov
pop
and
sbb
push
jg
or
and
pop
push
pop
mov
lcall
adc
subl
jecxz
movsl
push
pop
lock
dec
xchg
pop
lret
cmc
push
push
pop
lods
mov
pop
jns
shrl
testl
das
sarb
mov
call
rorl
fcompl
push
or
jecxz
addps
sub
and
xor
adc
push
jne
jnp
dec
lods
outsb
arpl
in
cmp
aam
jns
mov
pop
mov
xchg
dec
mov
push
and
std
inc
daa
pop
fistpl
jno
push
adcb
jns
pop
adc
cltd
lods
sbb
lret
pop
mov
adc
mov
fwait
push
push
inc
mov
nop
add
dec
std
mov
ljmp
decb
cmp
mov
xchg
test
pop
xor
xchg
jg
or
and
and
mov
adc
cmp
fidivl
neg
stos
data16
mov
loopne
dec
mov
cmpsb
push
pop
repnz
out
xchg
mov
test
hlt
inc
pop
mov
sbb
pop
push
push
sub
cmp
or
sbb
pop
mov
jmp
pop
mov
sub
fbstp
and
push
loope
jecxz
sarb
daa
cli
into
mov
xchg
cmp
inc
jae
fmul
adc
and
inc
mov
mov
pop
mov
mov
pop
or
sub
and
mov
dec
and
or
pop
sub
dec
jp
dec
xchg
loop
dec
pop
pop
ja
pop
out
xor
inc
lcall
push
dec
in
adcb
xlat
adc
negl
push
or
xorl
push
mov
cmp
aad
call
sbb
mov
sbb
arpl
and
fmuls
mov
adc
lea
cmp
ficompl
xorl
ret
jle
push
in
and
mov
shl
pop
lea
jle,pn
lcall
jb
out
jle
mov
jg
in
pusha
sub
and
push
lret
vcvttss2si
pop
test
xchg
or
dec
test
mov
frstor
pop
scas
jo
movsb
lret
cmp
jb
mov
pop
dec
cli
sarl
js
in
sbb
jl
fwait
jmp
in
insb
sub
sbb
movsb
hlt
lret
fstpl
ret
jge
adc
xchg
js
xchg
push
sbb
pop
or
cmc
insl
mov
popf
fdivrs
pop
mov
mov
aas
leave
jmp
iret
pop
mov
call
dec
add
faddp
ss
pop
jns
test
out
inc
lods
cmp
pop
mov
rol
add
scas
xchg
dec
sbb
cmp
aaa
cmpsl
mov
mov
push
jbe
pop
icebp
push
dec
sbb
mov
mov
add
jnp
ljmp
push
into
jne
push
mov
imul
lods
nop
scas
add
js
gs
jnp
repnz
icebp
pop
xchg
lcall
ljmp
pop
and
cmp
fmull
pop
xor
jg
outsb
inc
and
int3
xchg
cwtl
xchg
mov
movsl
mov
mov
pop
dec
xor
repnz
cwtl
inc
mov
notb
decb
xchg
push
fiadds
ret
xchg
popa
sahf
dec
test
pop
dec
inc
jne
jb
pop
nop
mov
imul
cmp
xchg
sbb
loopne
inc
aad
enter
aam
xchg
insb
pop
test
pop
push
mov
repz
cmp
nop
and
add
jp
mov
xor
enter
xchg
mov
fwait
and
lds
mov
rcrl
mov
jecxz
hlt
fs
pop
inc
and
pop
mov
pop
sbb
outsb
mov
mov
add
fwait
popf
push
jg
pop
xor
dec
pop
dec
stc
cmpsl
and
pop
fmull
aad
mov
int
aam
mov
xor
ficompl
fcoml
jbe
imul
jp
or
aam
dec
fcomps
pop
push
xchg
mov
mov
xchg
nop
pop
adc
imul
pop
cmpsl
jae
clc
fstpt
push
pop
mov
stos
and
sahf
popf
sbb
arpl
loop
pop
sub
xchg
call
lret
add
subb
daa
or
or
fiaddl
mov
xchg
cmp
jl
pop
leave
xor
ret
sbb
pop
gs
pushf
cmp
out
mov
mov
imul
inc
test
push
pop
into
jmp
sbb
repnz
jbe
xchg
ret
sub
add
insl
pop
adc
cmp
test
pop
inc
fwait
xchg
and
ss
xchg
cmp
pushf
js
and
lret
mov
dec
scas
in
jecxz
cltd
cmp
mov
lock
rcrl
cmp
push
repnz
and
lahf
mov
psubusw
adcl
data16
add
xlat
sbb
mov
in
daa
pop
jle
in
out
inc
jne
push
lcall
push
dec
xor
mov
xchg
mov
mov
int3
or
and
cwtl
and
pop
inc
pop
pusha
outsl
lods
mov
mov
pop
inc
lods
jae
inc
js
or
les
test
aaa
out
mov
pop
ljmp
cmp
mov
in
sbb
clc
pop
cld
pop
inc
and
fidivrl
pop
sub
push
cmp
pop
fs
jmp
sahf
ja
pop
shll
push
mov
aad
dec
mov
push
fcomps
rolb
push
dec
pop
into
cwtl
xchg
sub
and
les
psubq
jb
jbe
dec
inc
xchg
add
pop
sbb
enter
push
pop
cmp
pop
cmp
jecxz
je
push
pop
xorb
mov
pop
mov
push
es
fisubs
mov
fsubs
cltd
mov
inc
mov
mov
or
ret
mov
cmp
ficompl
cmc
in
dec
lock
pop
jae
jge
pop
xchg
sub
inc
xchg
sahf
pop
sub
out
in
movsb
inc
mov
mov
fldcw
lret
cltd
icebp
out
test
pop
mov
jo
cwtl
mov
lods
aas
and
pop
outsb
xchg
sub
adc
inc
arpl
mov
push
test
mov
cmp
pop
inc
faddp
jp
cmp
mov
pop
das
sbb
dec
mov
pop
pop
mov
sbb
and
pop
loopne
inc
xchg
fucom
pop
test
sub
mov
mov
jns
adc
fidivl
xchg
int
stc
mov
aam
out
xlat
adc
pop
mov
push
jae
pop
out
xchg
and
clc
mov
bound
cwtl
and
js
hlt
mov
scas
pop
pop
fucom
sarb
xor
out
loope
xchg
pop
jge
je,pn
mov
lahf
mov
mov
rcr
subl
push
adc
sbb
mov
insl
dec
cmp
sub
fidivrs
inc
enter
pop
inc
pushf
or
push
cmp
xchg
mov
xchg
adc
mov
mov
pop
addb
das
pop
out
shll
xor
sarb
int3
pop
xor
push
pop
add
out
aas
mov
xor
jb
add
xchg
mov
mov
jbe
fmul
stc
rcrb
xchg
clc
mov
xchg
and
loop
lret
int3
repnz
out
jo
or
mov
fdivs
pop
cmovns
jnp
in
xor
mov
mov
cs
test
sbb
fadds
ljmp
dec
xchg
cwtl
fistl
stos
mov
sub
movl
xor
mov
cmpsl
mov
jge
adc
cmp
sti
pop
dec
lods
mov
cmp
cwtl
jecxz
mov
push
cmp
xchg
jge
add
in
loopne
push
pop
scas
push
pop
jl
les
jmp
mov
ja
js
sbb
out
adc
dec
cmpb
data16
shlb
pop
adc
jmp
clc
es
mov
mov
wrmsr
out
pop
mov
sbb
pop
adc
sub
sbb
mov
lahf
in
sbb
or
push
lcall
sti
mov
lock
loopne
inc
add
lods
add
mov
inc
or
jns
jne
imul
cmp
push
int
dec
loop
pop
dec
jnp
sbb
scas
mov
aad
sub
mov
lahf
das
sbb
aaa
dec
jo
mov
fsincos
inc
sbb
pop
loope
xor
jb
mov
int3
daa
pop
push
xor
inc
pop
rorb
leave
repz
xchg
fdivrl
add
sbb
test
push
or
sbb
ficompl
pop
popf
adc
pop
test
test
mov
xchg
pop
mov
sbb
adc
jne
test
repnz
pop
add
andb
fistpl
push
ret
jns
push
cs
sbb
call
pop
rorb
ret
cmp
nop
add
jmp
outsb
sub
pop
cltd
es
inc
cmp
xchg
sahf
sarb
ds
lret
loopne
out
pop
ja
pop
lea
shr
js
mov
cmpsl
cltd
call
insb
clc
fstl
aam
ljmp
lock
mov
inc
cmp
decb
insl
xchg
inc
aam
sbb
mov
mov
pop
cmc
push
pop
les
pop
adc
inc
jne
mov
sbb
xor
xor
cmp
icebp
fsubr
adc
out
pop
out
sbb
dec
pop
xchg
cmp
or
push
mov
push
jl
cmp
sbb
ret
cwtl
mov
and
pop
int
popf
cmp
adc
mov
pop
aam
leave
inc
je
pop
xor
pop
out
push
test
subb
inc
jg
call
jge
cltd
cmc
mov
and
or
add
loope
adc
bound
push
rclb
in
pop
pusha
inc
sub
sti
stc
lea
jg
adc
into
mov
jmp
pop
push
outsl
pop
jp
and
adc
or
pop
fidivrl
cmp
arpl
pop
mov
xchg
sub
loope
push
pop
push
in
jbe
xchg
adc
jge
mov
mov
iret
cmp
ret
jb
pop
xchg
pop
jno
jg
popf
lcall
jl
pop
mov
pop
xchg
inc
mov
stos
mov
dec
addr16
cmp
push
mov
sti
cs
mov
jns
xchg
or
mov
jecxz
push
fistl
call
push
mov
dec
push
ret
fistl
scas
in
inc
mov
insb
test
jno
xchg
leave
push
adc
aam
pop
js
shlb
jmp
mov
cld
icebp
adc
mov
mov
cmpsl
xchg
xchg
adc
sbb
in
mov
movsl
xchg
mov
cmp
adc
mov
les
ficoml
cmc
into
in
dec
mov
imul
mov
lock
ret
fidivs
outsl
sub
lods
leave
pop
mov
mov
jns
daa
js
mov
pop
mov
call
clc
mov
sbb
cmp
pop
sbb
lea
lret
adc
dec
jnp
pop
pop
sub
or
mov
cmp
mov
fnstcw
mov
out
mov
nop
pusha
insl
push
xor
inc
repz
pop
cwtl
movsb
mov
cli
adc
xor
lret
movsb
gs
pop
pop
lods
cmp
lods
lods
jns
testl
or
test
orl
test
push
dec
sub
pop
lock
loop
std
leave
sub
cs
mov
dec
nop
idiv
aad
int
lahf
lods
dec
pop
pop
fsubrl
mov
in
inc
or
cld
xchg
cmc
out
insl
pop
push
or
or
push
ficoml
gs
cli
xor
pop
adc
adcl
lahf
mov
imul
cmp
rcrb
lods
cmp
filds
sub
std
mov
cmpsb
clc
jbe
lret
dec
pop
cmp
pop
add
lods
cwtl
pop
mov
into
xchg
pop
adc
push
add
pop
int3
pop
jle
cmpsl
std
into
andb
mov
and
pop
dec
or
pop
addb
pop
pop
adc
mov
daa
pop
repz
lcall
mov
sbb
js
or
mov
and
push
and
das
in
shlb
cmp
fimull
pop
shr
stos
cmp
mov
pop
sbb
mov
jnp
mov
pop
pusha
in
sbb
inc
push
dec
inc
ret
sbb
fadds
jae
fidivl
pop
pop
xchg
es
ljmp
imul
loop
push
push
dec
push
xchg
push
fldt
pop
cmc
int3
adc
pop
mov
cmp
into
and
xchg
dec
push
or
imul
ret
fimuls
push
out
popf
aam
and
popa
mov
pop
ret
xlat
arpl
rcrl
jo
push
cmpsb
push
pop
mov
mov
cmp
addr16
fmul
nop
icebp
repnz
mov
mov
es
lcall
test
jp
test
sbb
outsb
loope
sub
xchg
xchg
call
repz
mov
xor
mov
jmp
out
cmpsb
cli
subl
int
test
pop
mov
adc
bound
mov
and
fbstp
test
pop
adc
sbb
jmp
pop
mov
pop
pop
jno
pop
out
cmp
sbb
mov
lret
push
pop
insb
xchg
dec
adc
add
iret
jp
ds
es
pop
arpl
imul
ss
jl
aad
pushf
mov
dec
push
jns
dec
stos
pop
out
fsubs
insb
add
out
ljmp
mov
loop
xor
cmpsl
sub
adc
test
mov
lock
dec
mov
mov
or
hlt
gs
insl
sub
jl
add
cmpsl
push
push
or
pop
aas
loope
mov
pop
mov
mov
pop
dec
loop
movsb
out
adcl
mov
push
flds
lcall
rcrb
push
aas
inc
mov
mov
add
dec
push
fcomps
adc
sbb
mov
jp
stos
xchg
lahf
mov
shrl
push
dec
pop
imul
dec
pop
pop
push
stc
and
mov
enter
fdivrl
pop
jne
stos
iret
and
pop
lods
js
dec
cmp
sub
lods
push
hlt
pop
enter
popf
push
mov
mov
repnz
cltd
pop
xchg
mov
mov
or
out
pop
scas
fcmovnbe
sbb
xor
dec
or
into
jle
psubw
js
pop
sarb
icebp
xchg
stos
mov
sbb
sbb
xchg
stc
jne
push
sub
pop
pop
mov
jnp
in
inc
jne
xchg
cmp
jg
adc
sub
hlt
cmp
cmp
pop
fstl
leave
push
js
call
lds
sub
pop
mov
push
inc
or
sahf
or
dec
xchg
nop
mov
ja
notb
mov
das
push
and
jne
loope
jmp
mov
movsl
out
dec
lock
or
nop
mov
push
popa
lahf
jp
outsl
pop
gs
mov
stos
movsb
pushf
pushl
daa
inc
andl
jo
add
dec
mov
push
lcall
pop
mov
cmp
loop
mov
sbb
add
jo
sarl
dec
lea
mov
jns
jge
ffreep
dec
rol
jl
mov
fistpl
jle
aam
xlat
pop
int3
push
pop
mov
inc
and
scas
mov
in
xchg
rcrl
adc
cmp
jg
xlat
insb
pop
es
int
test
js
pop
dec
inc
cltd
mov
pop
aaa
xchg
fistps
dec
xorl
pop
xor
mov
fwait
stos
fsts
jne
lods
pop
bound
adc
add
jecxz
vcvtdq2ps
sbb
loopne
sub
mov
leave
nop
mov
cmpsb
add
mov
jnp
sub
pop
mov
xchg
in
mov
inc
pop
test
mov
add
lcall
pop
adc
xor
lret
mov
dec
outsb
xor
xchg
sbb
sub
mov
sbb
data16
adc
fistpll
sbb
mov
adc
fsubrs
or
or
xor
nop
mov
push
xor
pop
mov
jne
fimull
and
js
repz
sti
sub
fsubrl
bound
into
and
popf
xor
sub
push
pop
out
xor
pop
sbb
sbb
popa
pop
aam
lods
mov
lds
cltd
xchg
and
out
shrb
imul
or
lock
loope
lea
pop
sti
bound
jo
adc
adc
cmp
sub
pop
jne
mov
xchg
std
pop
lea
cmc
test
ss
cmp
pop
add
sbb
mov
xchg
mov
cwtl
movsb
mov
mov
in
sbb
nop
pusha
pop
sarl
mov
jns
fstps
push
jno
mov
lahf
mov
scas
xchg
sbb
mov
fwait
shr
pop
sbb
push
mov
pop
cli
ds
mov
ret
sub
mov
pop
incb
xchg
arpl
aad
rorb
and
push
cmpsb
push
mov
pop
inc
add
inc
jb
dec
mov
push
jle
popf
xor
ficoml
repz
divl
sbb
test
mov
fidivrl
cs
pop
out
fwait
xchg
jno
dec
mov
mov
jns
mov
arpl
xor
rcrb
inc
loopne
xor
into
inc
cmp
jbe
mov
ja
push
and
pop
sub
add
add
pop
and
lods
scas
sub
aam
cmpsl
lcall
or
dec
mov
or
fld
in
pop
pop
dec
addr16
inc
push
lock
mov
pushf
orb
pop
enter
inc
rcrb
push
push
dec
mov
sbb
cmp
enter
or
lret
push
pop
xor
mov
inc
filds
fcompl
clc
cmc
arpl
iret
xchg
cli
jns
pop
test
int3
mov
pop
movsl
add
jbe
cmp
pop
cld
adc
pusha
push
data16
inc
push
stos
pop
fisubl
lahf
cmpl
mov
cmc
pop
push
cvtpi2ps
xor
iret
andb
pop
push
out
filds
pop
in
ret
dec
xchg
mov
cmpsb
push
sbb
push
add
dec
fcmove
shlb
jb
pop
pop
imul
inc
inc
outsl
jnp
pop
pusha
inc
fnstcw
mov
sbb
aad
pop
sub
fisubrl
mov
push
pusha
test
imul
cmpl
popa
cld
pop
mov
add
mov
imul
jne
loopne
or
pop
ds
mov
and
pop
fcompl
cmp
shrb
repz
pop
movsl
push
mov
mov
inc
loopne
adc
add
mov
imul
dec
pop
push
jns
stos
xchg
sbb
icebp
in
mov
sub
dec
pop
data16
adc
pop
bound
or
mov
int3
push
mulb
xchg
mov
sub
popa
aam
or
into
mov
or
mov
pop
pop
dec
jecxz
mov
sbb
sbb
fwait
imul
addr16
xorb
mov
dec
dec
jo
push
into
or
into
outsb
notl
inc
jg
arpl
test
jmp
and
mov
lock
mov
lods
jbe
repnz
push
mov
pop
xor
jae
xor
fcmove
cmp
pop
sub
addr16
ljmp
cmp
and
icebp
sbb
lret
mov
jle
test
push
mov
mov
faddl
sbbb
sbb
cmp
pop
sub
mov
inc
jnp
dec
inc
in
in
dec
mov
add
jbe
xor
ret
cltd
aaa
inc
jl
add
adc
adc
ljmp
out
pop
mov
xchg
dec
jne
pop
inc
icebp
repz
popa
cmp
decl
bound
pop
xor
insl
negb
lret
lods
dec
adc
sub
inc
clc
inc
pop
sub
jno
out
mov
and
mov
in
jge
push
xchg
pusha
jo
repnz
pop
sbb
mov
mov
pop
rcrl
int3
sbb
fistpll
pushf
ficoms
or
fcompl
daa
cltd
pop
enter
dec
sbb
xchg
popf
arpl
shrl
mov
jns
cmp
add
pop
and
movb
test
sbb
pop
mov
add
insb
push
call
imul
fimull
xchg
or
mov
sbbb
inc
divb
mov
fidivrl
pop
movsl
cmp
out
cmp
dec
je
lea
push
mov
fdivs
xchg
aaa
mov
xchg
push
test
adc
aad
inc
sub
jecxz
int3
cwtl
or
inc
pop
xor
neg
dec
fs
mov
mov
jbe
cmp
cmp
jecxz
lret
mov
mov
cmpsl
fisubs
andl
sbbb
fmull
es
cmp
lret
pop
imul
sub
push
testl
mov
lret
mov
add
mov
aas
test
fildl
jne
fwait
lods
dec
mov
mov
and
and
sti
dec
scas
mov
xor
mov
mov
sbb
xchg
das
enter
push
daa
rorl
sbb
sbb
into
bound
sar
inc
scas
xchg
mov
fwait
pop
pop
loopne
pop
add
icebp
je
imull
daa
ss
mov
mov
jp
pop
sub
xor
add
mov
adc
jnp
lahf
pop
mov
insl
jp
sbb
sub
pop
mov
mov
xchg
sub
arpl
sarb
or
mov
mov
stc
jae
test
arpl
bound
pushf
insl
cmp
inc
ficomps
mov
mov
cs
xchg
xor
dec
daa
or
fcmovbe
jno
in
test
shrl
popf
mov
jmp
mov
ret
dec
push
or
and
out
fldl
pop
ret
leave
xor
lcall
subb
xchg
add
lahf
test
pop
push
adc
mov
mull
es
rcrl
lret
and
fnstenv
jnp
sbb
jg
add
loopne
lods
cli
cld
add
lahf
test
pop
pop
inc
movsb
sub
negl
xor
pop
sbb
out
pop
pop
add
mov
jp
push
inc
enter
cmpsl
mov
and
pop
orb
lret
jp
fistpl
mov
movsl
out
jne
pop
lods
adc
popf
xor
fadd
xor
popf
nop
fdivs
pop
jb
roll
pop
mov
aaa
xchg
jecxz
push
inc
jmp
bound
mov
iret
push
fdivs
loop
dec
pop
cmp
mov
das
nop
shl
test
mov
in
inc
or
jbe
pop
dec
jae
out
ret
jne
lock
pop
loope
lret
mov
xor
fidivrl
sub
loop
jp
ret
in
lret
pop
fbstp
fisubrl
sub
call
xor
loope
aam
test
insb
pusha
cmc
jp
cs
iret
adc
or
movsl
out
imul
test
jne
cld
pop
push
imul
arpl
mov
jge
lods
push
pop
pop
inc
shrb
adc
push
sti
jl
xchg
repnz
arpl
out
pop
das
popf
and
pop
jmp
pop
and
or
mov
sub
xchg
mov
pop
lcall
stos
mov
adc
ja
fadd
and
ss
sbb
outsl
dec
loopne
fmull
cmpsl
clc
jl
cmp
mov
test
adc
xchg
nop
xchg
xor
mov
aad
ljmp
ret
mov
pop
jmp
cmpsb
sub
cltd
dec
pop
outsb
int
xlat
pusha
in
xor
add
xchg
imul
lcall
out
cltd
in
mov
movsl
or
enter
push
add
inc
stc
xchg
sbb
lahf
jge
mov
icebp
pop
rclb
pop
aaa
sbb
pop
mov
outsl
out
mov
mov
and
dec
int3
imul
dec
sbb
mov
push
pop
lods
mov
das
lret
mov
jge
pop
adc
in
or
sub
cmc
call
jns
dec
dec
pop
mov
cmp
sub
sbb
sahf
add
cmp
lret
jle
fwait
and
pop
sti
int
shll
jnp
sbb
lods
not
mov
adc
jge
mov
push
dec
pop
bnd
cli
fnstcw
mov
es
pop
lret
cmpsl
outsb
into
mov
or
mov
pop
inc
xchg
scas
mov
mov
and
call
out
push
mov
ret
js
jo
pop
neg
xchg
repz
pop
and
add
outsl
mov
inc
rcll
sbb
sub
mov
inc
xchg
pop
aad
lahf
iret
cmc
sbb
cltd
or
inc
mov
daa
push
popl
aaa
sbb
scas
movsb
xchg
jne
mov
pusha
das
pop
jge
jb
fs
loopne
mov
sub
fisubrl
mov
inc
or
pop
sti
dec
xor
pop
push
call
mov
js
pop
test
jecxz
adc
movsb
sbb
mov
repz
in
jnp
int3
inc
insb
sub
xlat
imul
jbe
mov
in
mov
mov
pop
pop
imul
outsl
add
sbb
mov
fistpll
jnp
cltd
mov
cmp
sub
mov
lods
pop
je
push
mov
mov
in
ret
sbb
rcrl
jmp
pop
int
stos
mov
adcb
pop
pushf
sbb
dec
cmp
bound
pop
push
lds
jmp
and
mov
into
pop
push
sub
test
xchg
sbb
popa
pop
inc
addl
jecxz
pop
inc
inc
sbb
lea
into
pop
rolb
test
pop
mov
std
pop
ljmp
fnsave
scas
cmc
jo
and
ja
repnz
arpl
xlat
mov
pop
popa
lea
and
loop
mov
pop
sub
lret
or
lods
div
push
stc
call
xor
mov
mov
out
addr16
pusha
cwtl
pop
call
or
pop
stos
xor
mov
mov
test
mov
adc
cmpsb
imul
pop
xchg
cmp
xchg
enter
fistps
rcrl
lods
cs
ljmp
dec
and
pop
adcl
repz
cmp
into
outsl
test
or
cltd
loope
mov
pop
mov
call
and
mov
mov
jne
std
outsl
xor
pop
in
mov
mov
pop
dec
push
test
das
mov
dec
mov
sub
adc
pop
nop
insl
xor
xor
mov
fiaddl
push
gs
daa
cmp
lret
add
push
in
pop
push
and
cli
xor
sbb
outsb
pop
jns
or
adc
subl
and
cmp
pop
push
inc
enter
pop
adc
mov
ljmp
repz
jge
inc
add
out
loop
mov
pop
jl
push
pop
dec
mov
cmc
sti
fcmovb
int3
test
xor
xlat
scas
dec
inc
mov
inc
mov
pop
mov
xchg
loopne
or
insl
pop
dec
and
mov
scas
sbb
mov
jb
pop
lahf
repz
enter
lcall
cmp
movsb
pop
jp
and
pushf
pop
lcall
fwait
or
xor
stos
ror
mov
std
xchg
pop
sbb
fmull
pop
cmp
pop
dec
iret
add
pop
stos
xchg
pop
sub
or
jae
push
pop
test
stc
nop
add
aam
xchg
cmpsb
sbb
sbb
mov
xchg
test
sub
xor
dec
jg
ret
adc
negl
movsl
imul
stc
xchg
add
imul
mov
jmp
and
test
mov
or
mov
mov
pop
pop
in
in
xchg
sahf
cltd
push
cs
dec
nop
pop
out
sub
ja
inc
or
add
hlt
aaa
jp
js
pop
repz
fs
ret
fdivl
mov
add
jp
cmp
cmp
mov
dec
jbe
lret
jl
andb
sbb
mov
jo
stos
pop
adc
clc
or
nop
aam
add
cmp
popa
stc
lods
cmc
inc
mulb
movsb
xlat
fistl
jle
cwtl
into
cmpsl
lods
call
js
mov
xchg
out
jle
inc
and
pop
dec
push
cmp
push
mov
pop
pop
sub
mov
pusha
push
xor
insl
or
ja
fcompl
push
or
loop
pushf
inc
fwait
add
out
out
xor
insb
mov
sbb
enter
add
loope
adc
inc
push
pop
stos
mov
add
fbstp
pop
xlat
or
or
pop
mov
pop
fcmove
lea
adc
shlb
ljmp
sub
xchg
mov
lock
cltd
cmp
jnp
add
xchg
movsl
andl
cmp
and
add
lods
stc
mov
xchg
fisubl
ficoms
add
adc
xchg
pop
les
or
je
test
jae
shl
pop
pusha
orl
stos
mov
test
mov
inc
icebp
cmc
pusha
add
adc
movsl
ror
cmp
aas
or
xor
add
mov
mov
sti
inc
lds
imul
jne
js
clc
pop
outsl
sub
pop
dec
pop
and
stc
jle
push
jnp
jmp
jle
lret
repz
aaa
fbstp
xchg
stos
jns
mov
subl
xchg
dec
mov
pop
push
cmp
lcall
xchg
fstps
fidivrl
mov
leave
inc
add
inc
fcmovb
mov
sbb
xchg
lods
xor
xor
sar
sbb
test
jp
test
mov
jns
cltd
ljmp
add
dec
dec
sbb
jl
cltd
adc
shlb
push
push
inc
mov
cmp
cmpsb
or
leave
xor
dec
sub
jbe
fmull
mov
js
adc
and
lea
aas
ret
outsl
test
mov
push
addl
movsl
pop
mov
fisubl
inc
scas
add
and
enter
xchg
sub
repnz
adc
and
bound
mov
repnz
icebp
stos
push
loopne
insl
cmp
repnz
lcall
mov
stos
xor
jbe
stos
add
cmp
cmp
pop
jmp
repz
sub
movsl
pop
sbb
leave
jg
stos
pop
add
jecxz
movsl
mov
jae
pop
push
inc
cmpsb
pop
jae
and
aas
shl
enter
repnz
aad
leave
aas
rorl
dec
js
jbe
pusha
pop
cltd
stos
cmp
cmp
sbbl
push
xor
adc
cltd
lods
aas
cmp
test
in
into
pop
js
mov
pop
aaa
addr16
sub
cmp
in
mov
dec
and
dec
lods
push
mov
cmp
xor
adc
movsl
mov
addb
mov
stos
test
add
in
mov
jo
xchg
mov
add
mov
test
scas
dec
outsl
cwtl
xchg
dec
stos
dec
pop
adc
xor
mov
cmp
cmp
sbb
fst
sbb
pop
jns
shrl
push
push
pushf
out
addr16
in
cmpsb
rorb
mov
cld
mov
xor
jo
test
js
std
test
and
in
or
mov
mov
pop
int3
sub
std
scas
aam
rcr
pop
or
mov
ljmp
movsb
sbb
mov
or
xor
xor
mov
movsl
int
and
xor
push
mov
mov
and
inc
or
call
pushf
cli
fsub
mov
xchg
xchg
movsb
xor
js
jmp
lret
popf
repz
pop
xor
leave
add
inc
pop
push
cmp
mov
mov
or
nop
mov
mov
ljmp
pop
fwait
icebp
sbb
dec
ljmp
adc
jmp
dec
xchg
addr16
insl
ret
pop
outsb
sti
cmp
fiaddl
mov
lcall
scas
roll
dec
inc
aas
or
or
jno
cmp
xchg
mov
testb
cmp
addr16
jnp
pop
mov
pusha
or
loop
scas
mov
mov
fsub
out
scas
push
mov
mov
into
repz
cli
out
shr
std
dec
pop
pop
xor
and
es
and
cmp
jecxz
fcomps
xchg
mov
cld
idiv
imul
mov
lahf
icebp
mov
aam
inc
cli
pop
xlat
les
andb
pop
mov
xchg
clc
popa
out
loope
push
cmp
jg
stc
stc
fmull
pop
mov
sbb
pop
pushl
xchg
pop
lods
in
adc
xor
push
xor
subl
pop
jnp
imul
shr
das
push
pop
outsl
je
lods
mov
or
jp
and
fidivrl
imul
insb
jns
stc
mov
pop
lret
aad
push
fmull
outsb
mov
adc
mov
inc
lahf
loopne
clc
fidivrl
or
push
in
inc
scas
sbb
adc
mov
rcrb
and
lret
loope
ficomps
mov
jo
scas
lcall
dec
in
xchg
cs
sub
inc
and
pop
xchg
or
push
pop
inc
sub
pop
xchg
sahf
adc
lods
push
or
mov
xchg
lret
sbb
shrl
addr16
pop
cmpsl
pushf
pop
or
les
sub
aad
mov
pop
scas
popf
stos
pop
push
mov
inc
adc
push
jo
mov
out
into
cmpsl
cld
dec
push
pop
leave
add
push
pop
out
int3
mov
xchg
cltd
adc
pop
lods
push
lods
inc
icebp
addr16
dec
jge
xchg
lock
pop
test
mov
int3
sbb
xchg
pop
insb
bound
and
int
jns
in
outsb
jae
pop
jl
jp
push
and
fdivrs
xor
pop
rcll
jmp
ljmp
addr16
cmpsl
xor
and
push
xchg
dec
stos
xchg
popf
pop
movsb
pop
mov
mov
sbb
dec
scas
imul
sub
test
js
adc
mov
ss
push
scas
pop
int3
xchg
xchg
arpl
pushf
pop
inc
cmp
in
push
loope
fsubl
add
pop
loop
int
js
mov
push
pop
inc
mov
dec
jecxz
and
pop
repz
pop
xchg
out
insl
aaa
lods
loopne,pn
and
or
inc
sti
pusha
dec
pop
rolb
mov
jo
or
push
pop
loop
dec
or
shlb
sbbb
mov
lds
fldt
dec
test
repnz
sub
add
xor
mov
inc
ficoml
mov
mov
mov
cmpsl
ud0
cmp
insb
pop
scas
push
mov
and
das
aas
lods
push
pop
sub
inc
pop
xchg
shl
es
sahf
jns
stos
fldt
bound
cltd
pop
or
fs
push
hlt
adc
add
int
sahf
jp
pop
xchg
cmpsb
filds
pop
inc
pop
aad
mov
sub
inc
repnz
sbb
mov
js
adc
cmc
xor
sbbl
leave
dec
aam
adc
mov
fstpl
mov
shlb
sbb
imul
xchg
out
mov
fwait
push
jns
or
mov
pop
jb
sbb
pop
dec
cmp
adc
inc
and
sub
ficompl
inc
pop
call
lds
addr16
cld
popf
or
ljmp
stc
ljmp
imul
sub
xchg
fistl
stos
shlb
leave
pop
adc
fs
stc
mov
mov
add
add
push
cmp
lret
ds
fistl
sahf
adc
nop
dec
cld
xorb
jnp
jae
fdivs
lret
popa
adc
mov
mov
push
bndstx
out
pop
pop
fwait
jp
ja
into
push
mov
movsb
inc
movsl
and
ficoml
inc
mov
lahf
fbld
push
lods
xchg
shll
adc
int3
arpl
push
or
lahf
repz
or
mov
pop
ja
mov
jb
iret
mov
cmp
int
xor
pop
enter
push
test
pop
mov
mov
movsb
mov
cmpb
add
fwait
std
mov
push
sbb
pop
push
adc
mov
movsb
fldl
pop
jns
int
inc
xchg
pop
fwait
sbb
mov
xchg
test
dec
mov
mov
pop
icebp
cmc
iret
es
pop
loopne
fisubrs
pop
in
mov
das
mov
xor
and
rclb
ret
dec
bound
sbb
xchg
lahf
adc
gs
test
pop
xor
mov
pop
adcb
sbb
aad
mov
repz
and
enter
jp
push
inc
mov
xchg
int
mov
incl
xor
dec
scas
mov
mov
pop
and
push
enter
pop
mov
cltd
mov
out
cmp
pop
pop
pop
or
cmpb
into
push
ss
imul
pop
stos
inc
mov
and
repz
pop
into
add
xor
dec
cltd
lcall
or
popa
sbb
pusha
xchg
jo
pop
fadds
fs
mov
mov
dec
pop
mov
daa
fwait
xchg
add
jp
mov
imulb
mov
jnp
fcomip
mov
mov
imul
pop
popf
pop
cmp
arpl
mov
mov
push
je
sbb
aas
sbbb
push
pop
popa
dec
aam
out
jl
pop
daa
in
ret
sbb
stc
add
adc
sarb
xor
clc
mov
jno
pop
jmp
push
pop
cmp
dec
iret
leave
pop
jnp
mov
es
mov
imul
lret
push
push
enter
jne
adc
fnsave
cmc
jmp
mov
and
mov
popf
adc
pop
mov
add
decb
fs
and
jmp
cmp
sti
inc
xchg
leave
mov
and
pop
and
fcoms
pop
adc
push
jo
cmp
mov
addr16
and
pop
in
mov
cld
aas
adc
data16
pop
sahf
jmp
inc
cmp
xchg
les
pop
pop
fisttpl
je
outsl
pop
pushf
out
fldl
andl
cmc
scas
aaa
mov
clc
or
test
imul
pop
jle
icebp
ds
pushl
out
pop
pop
test
xchg
pop
xor
adc
xchg
aas
test
or
pop
xchg
fwait
inc
pop
insb
sbb
pop
pop
push
call
out
loop
mov
push
and
pop
fcmovb
jmp
cmp
jle,pt
pop
popf
mov
push
lcall
fwait
sbbl
xor
pop
mov
out
cmp
fs
ds
pop
xor
mov
test
or
ret
scas
insb
xchg
mov
pop
push
cmp
mov
sti
sbb
cwtl
push
imul
sub
pop
sbb
jns
pop
jle
mov
lahf
pop
rcl
sbb
or
dec
mov
loope
dec
repnz
cmp
cli
pop
mov
shll
pop
int3
shll
dec
sub
adc
popf
jge
fistpl
pop
sub
add
sub
mov
pop
jmp
pop
mov
push
in
mov
inc
push
arpl
lock
xor
and
mov
push
pop
test
dec
jb
enter
inc
gs
popa
mov
pop
lods
movsl
mov
push
stos
in
mov
or
jbe
xchg
push
je
mov
fistpll
push
adc
stc
or
mov
fmuls
push
imul
into
cmp
aaa
add
sahf
mov
fidivl
adc
pop
pop
cmp
add
sub
out
fmull
cmp
dec
cmp
pop
aam
pop
adc
dec
adc
popa
cmp
lock
lret
je
jecxz
mov
pop
into
add
sub
mov
sarb
into
fidivs
daa
mov
mov
sbb
adc
test
loope
fnstcw
gs
ljmp
mov
icebp
cmp
fsubrp
mov
sub
dec
xorl
push
mov
xlat
pop
jmp
iret
cmp
leave
adc
adc
pop
xchg
std
ret
lcall
dec
loopne
xor
cmp
mov
mov
sti
jge
dec
aaa
out
push
gs
and
stos
mov
or
jo
test
scas
das
mov
pop
pop
mov
mov
push
clc
dec
jns
pop
push
mov
imul
cmp
call
aad
mov
scas
mov
fcomps
out
pop
mov
mov
push
sub
insb
popa
inc
pusha
mov
out
sub
ret
sub
jle
dec
ss
push
inc
pop
sbb
pop
pop
fisubrl
push
sahf
aas
inc
mov
cmp
or
xchg
pop
sbb
jmp
push
xor
jns
cmp
mov
and
in
pop
les
pop
cmp
aam
push
lret
ljmp
and
lahf
out
gs
nop
and
inc
outsb
add
xchg
arpl
cmp
pop
pop
push
inc
dec
sbb
and
cld
pop
scas
push
test
lods
ret
xchg
xor
jne
out
dec
pop
sub
push
dec
outsl
sbbb
xchg
rcrb
sub
in
inc
fisttpll
xorl
sti
push
pop
mov
test
jg
inc
cmp
jb
pop
mov
mov
lea
ret
xchg
xchg
pop
or
mov
pop
sbb
iret
pop
add
aaa
fdiv
daa
jnp
add
pop
in
repz
test
sbb
scas
push
jmp
pop
pop
dec
loope
pusha
add
fmul
insb
les
pop
fnstcw
jle
mov
pop
lret
data16
or
iret
lods
mov
gs
adc
push
nop
cltd
push
jae
scas
aas
lret
test
dec
stc
stc
shlb
pop
add
cwtl
add
and
cmp
cltd
fstpl
push
xor
das
jnp
addr16
sub
stos
outsl
inc
loope
pop
test
pop
jp
addr16
push
jl
pop
pop
sub
or
add
lret
pop
test
jecxz
cmpl
jns
dec
push
ljmp
loop
insl
lcall
orb
mov
mov
sbb
jg
pop
stos
insb
ror
mov
scas
add
push
xor
cmp
pop
jp
ret
xor
lcall
pop
stc
xchg
mov
inc
sbb
xor
jp
fisubs
dec
pop
mov
lods
mov
cmp
xor
clc
sub
pop
out
int3
mov
lods
aaa
sub
dec
es
and
sarl
ficompl
add
hlt
jmp
outsl
mov
push
lock
scas
ds
and
cvtps2pi
dec
push
push
dec
jmp
jns
dec
mov
xchg
mov
dec
jo
pop
cld
popa
mov
pop
and
imul
cmc
push
sub
pop
aas
enter
mov
xor
push
sahf
lds
cmp
shrl
inc
jl
mov
lea
lahf
mov
cmpsb
fsub
pop
aam
lods
sub
xchg
das
bound
leave
ficoml
out
push
push
sub
pop
out
mov
scas
in
aas
das
clc
jl
mov
pop
lahf
mov
jo
loop
pushf
pop
lret
std
push
mov
xchg
jno
add
pop
jnp
jb
pop
ljmp
jbe
mov
and
out
adc
js
cwtl
xor
sarb
int3
rcrl
pop
pop
fnsave
andl
add
loopne
cmc
mov
mov
bound
ds
inc
inc
xchg
dec
iret
gs
sub
mov
sub
inc
or
dec
mov
inc
dec
enter
cmpsl
adc
lcall
cmp
xchg
test
jo
push
inc
cmc
sbbl
ljmp
andnps
jo
add
jle
pop
pop
ret
mov
dec
pop
movl
jl
push
mov
jbe
jo
pop
shrb
hlt
out
int3
xchg
adc
pushf
cmc
dec
adcb
add
pop
adc
iret
dec
jl
aaa
test
ret
cs
or
rorl
mov
in
mov
adc
pop
pop
add
pop
call
stos
pop
movsl
jl
adc
aas
push
std
inc
pop
les
cmpsb
popl
popf
aam
sbb
and
test
rolb
pop
shrl
fdivl
sbb
pop
mov
cmp
ret
adc
inc
sub
les
add
in
pop
and
cmp
pop
lock
fbstp
inc
adc
rclb
les
pop
stc
sbb
push
adc
inc
dec
inc
scas
mov
fxch
ss
pop
cld
insl
mov
icebp
add
push
pop
sbb
arpl
dec
dec
fcompl
xor
loop
jl
scas
mov
adc
and
xchg
pop
cwtl
pop
dec
inc
cmp
sbb
xchg
int
testb
mov
lahf
jbe
dec
ret
add
xchg
sbb
insl
adc
flds
mov
push
pop
inc
mov
pop
cli
jae
fsts
fcomps
add
pop
xor
pusha
int3
mov
pop
dec
inc
sub
pop
mov
jp
je
mov
mov
aas
mov
fildll
inc
jne
popf
inc
inc
pop
mov
and
mov
jecxz
adc
rcl
push
jmp
pop
dec
or
mov
popf
pop
xchg
mov
cmp
imul
xor
add
jecxz
mov
jle
hlt
dec
lock
daa
mov
out
fcmovnb
dec
aaa
rcrl
inc
or
sub
jmp
xchg
iret
mov
lea
pop
std
in
sub
mul
pushf
pop
sub
jns
jae
das
pop
or
sbb
lret
out
shr
lods
pop
inc
outsb
mov
divl
cmp
pushf
mov
fwait
pop
ds
adc
subb
pop
test
mov
int
mov
jle
mov
mov
loopne
das
pop
jmp
adc
jbe
stos
into
imul
mov
movsl
lahf
xchg
or
fisttpl
lret
dec
mov
jns
scas
loop
jo
sahf
cltd
dec
cmp
pop
push
fdivl
inc
scas
ja
fstl
jns
mov
mov
push
push
or
fimull
sbb
xor
push
out
pop
mov
xchg
bound
pop
pop
aad
xchg
sbb
mov
jnp
xlat
push
inc
mov
movsb
add
pop
dec
mov
std
xor
insl
enter
aad
mov
aas
mov
pop
pop
les
mov
arpl
into
mov
push
sbb
inc
into
jbe
jecxz
push
popf
mov
sub
and
xchg
orb
mov
cwtl
inc
xor
sub
jae
mov
imul
mov
adc
aam
adc
rcrl
push
rcr
jge
rcrb
add
mov
mov
xorl
and
fwait
jle
jmp
jb
scas
cmp
mov
and
cli
movb
push
bound
pop
repnz
lret
pop
xor
jne
pop
sub
notl
fwait
xchg
mov
jmp
test
pop
int3
leave
mov
cmpsl
sbb
add
pop
inc
mov
and
xchg
lcall
ret
pop
ja
testb
jnp
pop
jmp
pop
mov
ret
or
pop
and
mov
jle
mov
subb
mov
sub
pop
repnz
fcomp
sub
push
jno
lret
pop
movsl
and
lcall
fwait
sub
fdiv
lea
bnd
sub
das
mov
fwait
das
insl
mov
int
add
or
sbb
scas
scas
outsb
out
cmp
rcrb
add
divb
lcall
lds
sar
cmp
out
add
xchg
jmp
jmp
xlat
jnp
mov
fs
imul
mov
or
adc
sub
ffree
negb
jne
xchg
lea
out
mov
es
and
mov
rorb
and
adc
dec
das
mov
sbb
pop
mov
or
pusha
pop
cmp
xorl
lahf
xchg
daa
cltd
out
xchg
and
add
dec
or
sub
push
std
aaa
sub
stc
push
leave
mov
stos
ret
mov
ret
pop
aam
xchg
cmpsl
mov
xorl
nop
scas
inc
adc
rclb
ja
pop
push
xor
ficomps
leave
adc
fnstcw
in
imul
cmpsb
movsl
scas
adc
or
stc
out
jmp
add
into
cli
sub
mov
mov
mov
mov
sbb
rcrl
movsb
cmpsl
mov
adc
mov
lods
sbb
xor
xchg
leave
ljmp
sbb
pop
mov
xor
lods
pop
mov
push
cmpsl
sub
cmp
je
and
fsubr
jg
mov
or
sub
int3
or
mov
jne
cltd
mov
adc
sbb
inc
sbb
jnp
sahf
push
mov
sbb
sti
jns
outsl
and
pop
fdivs
lahf
popa
fucomi
push
inc
jae
stos
pop
mov
dec
repz
int3
icebp
mov
and
test
pop
xor
inc
negl
stos
mov
mov
fistpll
xchg
mov
sbb
das
jae
aam
test
jmp
cmp
mov
inc
jmp
imul
push
push
and
lock
pop
stos
add
adc
push
mov
int
mov
out
clc
pusha
cmp
add
ret
cmp
cwtl
repnz
push
sti
xor
sti
pop
shrb
mov
push
add
icebp
jl
add
jge
pop
into
ljmp
xor
imul
xchg
mov
in
inc
scas
mov
divl
jmp
je
test
xor
sahf
mov
int3
push
mov
lds
imul
dec
test
mov
sti
push
inc
ljmp
push
fcmove
or
xchg
xchg
js
sbb
dec
ret
push
leave
push
aad
scas
mov
lods
sti
xor
xchg
dec
ja
mov
into
pop
sub
cltd
fcompl
cmp
lock
mov
into
ficomps
fdivrs
push
push
pop
cs
scas
out
lods
sub
nopl
inc
dec
std
mov
xchg
pop
mov
fbld
pop
xchg
std
dec
pop
leave
sub
test
push
xchg
add
faddl
cwtl
mov
sahf
inc
lret
fcompl
inc
jb
jecxz
lcall
into
push
lcall
or
pop
cmp
mov
fdivrl
ret
daa
dec
xor
pop
leave
add
je
xchg
inc
pop
sub
push
mov
pop
push
pop
out
mov
or
test
scas
and
xor
pop
pop
add
pushf
aas
push
sub
dec
pop
inc
pop
push
jae
test
fidivs
jne
outsb
test
add
mov
pop
jo
push
push
loop
mov
cli
mov
mov
testl
cmp
pop
aaa
mov
lods
idivl
mov
sub
push
mov
jo
jbe
cmpsl
sbb
mov
insl
daa
out
mov
xlat
and
scas
movb
sbb
pop
unpckhps
hlt
jl
mov
sub
mov
or
sbb
pop
pop
out
push
cli
jle
outsb
xchg
outsb
insl
mov
sti
jns
or
xor
popa
sub
dec
and
sarl
cmp
sbb
or
test
test
lea
push
pop
pop
into
push
mov
pmullw
shlb
mov
jnp
pusha
inc
lret
xchg
cld
mov
icebp
insb
pushf
xor
mov
mov
adc
adc
pop
push
mov
popf
add
shrl
outsb
or
dec
pop
mov
repnz
add
or
lea
lods
mov
mov
cmpsl
dec
cmp
pop
adc
adc
dec
mov
mov
test
mov
mov
orb
jmp
call
in
fsubrs
mov
or
inc
notb
inc
mov
mov
fsubrp
fmul
lahf
xor
loop
xchg
ret
cmp
mov
add
xor
or
pop
cmp
out
out
pop
in
pop
in
das
push
pop
or
jnp
cmp
sbb
sbb
pop
stos
daa
pop
stos
ds
add
mov
pop
mov
push
xchg
test
or
lock
hlt
enter
cmp
mov
mov
scas
pop
pop
pop
mov
shlb
ret
mov
fdivrs
jno
mov
pop
pop
push
lcall
sbb
lods
in
sbb
loop
jmp
je
pop
push
dec
fwait
cs
mov
sarb
jne
or
outsl
jb
sub
or
and
inc
sbb
and
std
mov
mov
mov
cmpsb
mov
jb
pop
repz
xchg
movsb
shll
outsl
fidivs
mov
xchg
mov
mov
in
push
push
adc
pop
jp
dec
nop
in
ficomps
jne
bound
ret
pop
jg
push
pop
popa
sbb
lods
pop
fdivrs
lcall
popf
fndisi(8087
pop
fs
or
pop
in
xrelease
fildl
nop
mov
xor
mov
jg
mov
aaa
xchg
int
lea
jne
ret
mov
pop
cmpsb
inc
lahf
xchg
orl
mov
aaa
pop
aad
mov
xor
adc
shrl
cs
dec
xor
mov
cmpsl
xor
mov
les
dec
xchg
mov
mov
mov
jo
pop
aaa
mov
adc
gs
jle
movl
pop
add
xorl
stos
rcrb
fidivs
pop
mov
mov
mov
push
sub
sbb
jp
mov
jnp
xor
cmp
pop
roll
mov
pop
lcall
mov
call
in
cmp
dec
jb
push
mov
in
mov
add
xor
mov
adc
lret
pop
jno
push
add
mov
dec
xorl
pop
pusha
mov
mov
popf
in
mov
sbb
test
fstps
pop
xchg
aam
xchg
js
pop
xchg
fdivr
pop
or
fbld
pop
jno
jecxz
movsb
cmp
std
pop
and
push
mov
js
and
orl
mov
mov
js
cmp
lret
pop
lret
movsl
jae
jle
pop
mov
mov
push
fisttps
out
jnp
das
pop
xor
sbb
xor
pop
outsb
push
pusha
jle
push
cmp
mov
pop
adc
xlat
add
fbstp
mov
popf
shll
pop
mov
lock
xchg
and
test
or
fwait
mov
dec
pop
cmp
sbb
ret
mov
pop
or
and
pop
mov
jg
punpckldq
fistpl
mov
sub
push
out
sub
adc
pop
push
pop
sbb
add
lahf
js
add
mov
ret
negb
pop
jns
cmp
repz
jne
lods
je
mov
aam
xor
xlat
ret
lahf
pop
push
ljmp
nop
mov
ret
xchg
sbb
adc
jl
jg
stos
jne
mov
pusha
cmp
and
pusha
pop
or
cmp
xor
cmp
ret
mov
cmc
cltd
mov
inc
das
sub
sbb
jb
xlat
adc
mov
dec
or
xchg
fcoml
dec
pushf
scas
scas
or
mov
lcall
mov
lea
mov
iret
jbe
leave
mov
xor
add
mov
adc
cmp
mov
aas
xchg
clc
lds
push
lcall
add
mov
pop
adc
cmp
push
xor
or
dec
xchg
xchg
gs
imul
lea
cmp
sbb
shrb
add
add
in
jp
sahf
xor
sub
repz
je
fldcw
leave
fxrstor
lahf
int3
dec
sub
add
fstp
fmul
test
push
adc
or
roll
mov
inc
adc
sbb
fwait
mov
mov
jmp
and
sub
aam
inc
add
aaa
mov
test
xlat
hlt
mov
aas
cltd
sbb
xchg
pop
and
out
mov
loope
inc
pop
cmp
dec
mov
lret
mov
pop
dec
das
inc
and
cmp
xchg
cltd
mov
cli
cld
pop
shr
cmp
les
rcr
push
xor
mov
pop
mul
jecxz
test
push
cmp
xchg
lock
or
xchg
fldenv
push
pop
or
pop
movsb
or
push
idivb
lret
adc
insb
pop
sub
pop
popa
cwtl
and
neg
sti
sbb
loope
push
ljmp
jmp
pop
push
adc
fildll
sahf
arpl
dec
pop
shll
jecxz
add
pushf
push
mov
repz
mov
pushw
xchg
shll
add
shrb
pop
arpl
sti
aas
jg
mov
mov
xchg
cmp
cmp
xor
inc
sbb
fsubrs
jbe
insb
push
add
cmp
inc
repnz
adc
pop
fs
ret
stos
pop
rcrb
jne
mov
adcl
prefetch
dec
test
sahf
xchg
pop
fsts
and
push
cmp
lahf
xor
mov
cmp
mov
pop
stos
sbb
cli
sub
movsb
pop
jnp
in
mov
adc
xchg
fisubs
sub
xor
cld
pop
xchg
and
scas
mov
push
fistl
adc
pop
mov
dec
lcall
shrl
jbe
mov
incl
inc
pop
pop
popf
mov
lret
dec
loope
repz
pop
mov
scas
add
mov
dec
sbb
xchg
rcrb
or
nop
imul
outsb
mov
shlb
pop
jo
sub
lock
fbld
push
das
and
and
arpl
insl
and
scas
inc
sbb
xchg
add
xor
pop
pop
pop
icebp
stos
in
lahf
jmp
fstps
push
push
push
or
andl
dec
pop
aad
adc
leave
jle
sub
rcr
add
arpl
jne
jmp
pop
lret
adc
out
mov
movsb
jmp
pop
cmp
popf
or
scas
pop
in
stos
xor
stos
mov
shl
push
pop
xchg
pop
sti
js
enter
aam
mov
negl
push
out
adc
testb
jne,pn
outsb
adc
push
jnp
fcompp
imul
scas
dec
adc
mov
out
movsl
pop
fnsave
or
scas
test
pop
dec
outsb
dec
pop
lds
loopne
push
sti
mov
bnd
pushf
mov
std
mov
leave
in
arpl
xchg
add
dec
hlt
jbe
sub
push
movsl
pop
addr16
fidivrs
dec
mov
inc
dec
xchg
pop
fwait
stos
je
into
adc
xorb
push
outsl
pop
repz
dec
mov
mov
cmp
cmpsl
rcrb
cwtl
hlt
or
js
pop
shr
cmp
xchg
pop
lahf
push
out
outsb
arpl
iret
negl
testb
fwait
push
pop
and
lcall
xchg
sub
dec
iret
pop
xchg
lcall
adc
call
sub
add
dec
mov
push
xchg
mov
icebp
sub
mov
sbb
imul
inc
fsubrs
nop
cmp
xor
adc
lods
pop
mov
lahf
add
pop
out
addb
repz
jp
sub
pop
dec
pop
std
pop
test
jmp
cmp
sub
popf
mov
mov
and
lods
xchg
sarb
xor
mov
bound
fdivs
xor
pushf
sbb
xchg
or
inc
cmp
mov
and
or
and
lret
mov
cmp
lahf
test
lret
xor
imul
sbb
fwait
cmpsb
pop
mov
mov
push
sarb
push
rcll
sbb
pusha
call
iret
adc
pop
mov
cmp
int3
pop
xchg
adc
sbb
out
fstps
es
addr16
xor
pop
mov
xchg
lret
scas
test
dec
sti
jbe
fldenv
fiaddl
repnz
add
ss
iret
mov
cli
mov
or
or
pop
stos
hlt
leave
push
in
jecxz
subb
jp
pop
paddsb
push
imul
push
fdivr
pop
sub
fmul
or
addr16
ds
sub
xchg
pop
push
loope
sbb
mov
pop
mov
mov
inc
pop
aaa
add
jne
inc
push
fistpl
cmp
mov
mov
orl
pop
mov
pop
xchg
sbb
leave
xchg
dec
inc
xchg
or
pop
filds
pop
push
scas
mov
neg
mov
fcoml
ficompl
pop
add
mov
push
or
mov
pop
sti
cmp
pop
clc
mov
cmpsl
sbbl
in
ss
outsl
sahf
ret
xchg
scas
jg
mov
push
jnp
pusha
movsl
pop
add
xor
mov
pmaddwd
arpl
and
fsubrs
scas
jb
ret
addr16
fstps
mov
movsb
xchg
sbb
div
fbld
jecxz
mov
xchg
sbb
movsb
mov
sbb
pop
add
dec
fistps
and
push
jecxz
ret
pop
pop
xor
mov
roll
pop
sarb
jno
pop
ret
mov
mov
cwtl
mov
outsb
or
mov
push
mov
sbb
das
fs
lock
js
subl
sti
add
lret
mov
sarb
sub
shll
mov
test
aad
lret
pop
jmp
out
pop
popf
inc
sub
fcomip
push
jmp
daa
cmpsb
leave
stos
int3
es
pop
repz
sbb
xlat
into
pop
pop
sub
mov
std
inc
push
pop
jmp
xor
or
sbbl
jae
push
test
pop
sarb
xchg
mov
pop
mov
cmc
xchg
jo
pop
push
dec
sub
cli
and
mov
mov
lea
xchg
sti
mov
or
pop
adc
pop
pusha
dec
mov
int
pop
dec
dec
sub
jg
pop
shlb
lcall
enter
push
mov
mov
pop
dec
jp
lds
cmp
mov
loopnew
test
gs
sbb
scas
pop
insb
ret
add
or
mov
jle
xchg
cwtl
fidivl
fcoml
pop
mov
mov
test
shrl
aam
pop
notb
jp
repz
jmp
outsl
push
inc
pop
pop
fmul
dec
pop
or
sub
xlat
jl
scas
movsl
es
imul
clc
repnz
dec
pop
stos
setg
cmp
sti
adc
insb
and
mov
clc
inc
fs
xor
mov
nop
es
pop
adc
mov
scas
pop
and
sbb
mov
pushf
and
xor
xor
mov
dec
jle
lahf
rcl
in
repz
les
pop
out
dec
mov
aas
in
popl
push
mov
adc
add
adc
inc
mov
rorl
pop
jecxz
out
in
in
pop
dec
adc
sbb
jmp
lcall
pop
subl
js
jo
sahf
mov
jae
es
dec
loop
sbb
les
int
and
xor
add
xchg
or
xchg
mov
dec
or
xchg
sub
and
fistpl
idivb
rolb
test
ja
dec
ret
pop
fsts
in
lods
inc
in
lcall
enter
bound
xchg
mov
jecxz
insl
pop
sub
movsb
lcall
pop
sbb
aas
cmp
pop
or
aaa
aaa
dec
adc
std
call
inc
sarl
mov
ja
dec
xchg
test
insb
cmp
ret
pop
inc
into
cltd
bnd
sbb
sbb
cmp
in
jae
cltd
and
std
cli
pop
sti
adc
or
pop
mov
pop
cltd
leave
lahf
pushf
push
or
dec
and
sbb
mov
fwait
rcr
lcall
pop
lea
pusha
in
mov
idivl
addb
lock
pop
cltd
pop
imul
test
mov
mov
in
loope
lahf
lea
imul
stos
mov
test
cmp
mov
jp
icebp
sub
cmpsl
sub
and
mov
pop
mov
mov
or
jmp
pop
push
stos
pushf
ss
cld
pop
pop
pop
imul
mov
adc
xor
mov
aas
test
mov
in
pop
hlt
clc
jbe
push
mov
movsb
mov
cld
mov
adc
cmp
cltd
arpl
jmp
sti
xchg
imul
ret
stos
push
jl
pop
popa
js
les
dec
jo
jg
sub
add
dec
pop
mov
out
out
mov
sti
sbb
int
and
cmp
test
cmova
mov
mov
call
add
lods
ljmp
pop
push
pop
cmp
jae
rclb
lret
lcall
std
pop
fs
pop
mov
in
flds
cmp
lret
lods
pop
into
and
scas
in
adc
cmpsl
pushl
pop
pop
mov
mov
pop
and
dec
pop
mov
mov
ja
pop
adc
push
mov
aad
enter
jg
xor
pop
sbb
adc
pusha
fsubl
mov
pop
mov
dec
or
negl
iret
add
jae
dec
xor
xchg
xlat
jmp
add
mov
fcoml
jne
addps
dec
mov
test
imul
adc
pop
pop
out
mov
pop
iret
call
lahf
aam
mov
fcmovb
test
cs
lcall
lret
or
jl
int3
push
sbb
inc
lock
pop
mov
push
jnp
roll
sahf
pop
sbb
and
int
xor
adc
adc
push
dec
mov
scas
or
pop
and
or
push
add
data16
xchg
out
mov
scas
mov
push
fisubrl
adc
push
lods
addl
jne
fst
fs
pop
lret
stos
imul
fists
in
or
lods
roll
hlt
mov
pop
pusha
mov
pop
in
loope
lds
sar
cmc
sub
scas
std
push
inc
xor
pop
in
cwtl
sbb
xor
pop
pop
xor
pop
rcrl
jle
pop
shrl
stos
pop
push
inc
daa
pushf
push
stc
rorb
or
mov
clc
and
cmp
in
pop
cld
xchg
cmp
ljmp
xor
jne
mov
movsl
out
in
mov
daa
pop
out
jb
aam
xbegin
mov
fsubs
or
pop
mov
mov
cltd
add
stc
pop
adc
inc
push
movsl
call
dec
and
cmp
cmp
outsl
lods
pop
in
or
jg
int3
bound
sub
fsubs
pop
ljmp
enter
jge
xchg
scas
cwtl
adc
sbb
jae
jne
push
cmp
mov
ret
or
mov
inc
dec
icebp
jne
stos
mov
shrb
fwait
xchg
iret
xorl
mov
shll
hlt
dec
pop
dec
pop
or
negl
mov
sti
stos
in
mov
lahf
sbb
rclb
sub
or
mov
lods
jl
enter
and
add
test
pop
leave
sti
shrb
dec
dec
call
mov
or
mov
das
or
lods
jge
jns
out
jg
in
adcb
fstps
lcall
pop
add
sbb
mov
fmuls
ficoml
adc
add
shll
mov
add
pop
aaa
sub
adc
mov
jno
xor
imul
or
fwait
and
pop
sub
xchg
stos
xor
sarl
call
fisttpll
pop
xchg
fs
pop
mov
jge
fwait
shrb
pop
ret
add
dec
data16
pop
call
pop
testl
lods
loope
cmp
iret
sahf
pop
stos
sub
pop
cld
rcr
jl
mov
aas
push
or
jae
vpsllq
pop
rcll
sbb
ss
sub
mov
pop
jo
mov
adc
jecxz
daa
loop
push
pop
sub
out
cmpl
pop
mov
inc
test
and
sbb
sbb
push
and
mov
lcall
rcrl
inc
sub
in
pop
shl
je
dec
pop
js
mov
pop
pop
pop
mov
mov
and
lret
mov
push
or
pop
xchg
pop
cmp
lahf
pop
xchg
flds
pop
jmp
pop
adc
fdivl
mov
mov
or
push
pop
pop
jmp
inc
xor
pop
mov
call
add
jnp
data16
out
lret
sbb
pop
push
mov
enter
icebp
fwait
stc
or
ja
lret
pop
arpl
notb
cltd
mov
mov
pop
ja
jne
stos
cmp
pop
dec
loop
mov
mov
mov
movsl
mov
xor
pop
sub
xchg
out
push
out
push
pop
jp
mov
scas
dec
xor
test
push
das
dec
xchg
jne
lcall
loope
mov
add
ret
lret
aad
and
repz
sbb
or
xchg
xor
pop
add
into
fsubr
pop
cmp
pusha
das
xor
push
ss
rcll
mov
jb
leave
das
mov
mov
lods
loopne
jbe
xor
xchg
jne
mov
jmp
ror
push
loop
pop
je
jbe
dec
dec
stos
sbb
movsb
pop
je
adc
mov
cmpsl
push
fiaddl
rcrb
sbb
jge
aas
or
loope
mov
jns
cmc
scas
ja
pusha
addr16
icebp
jp
pop
mov
push
dec
std
pop
test
cmpsl
scas
aaa
mov
jns
movsb
ds
mov
outsb
sub
fldl
mov
xor
mov
dec
pop
jecxz
dec
sar
imul
addr16
push
adc
inc
xor
mov
pop
leave
mov
icebp
mov
aaa
add
out
popa
inc
pop
add
mov
sbb
sbb
jbe
ds
pop
or
sbb
pop
or
mov
pop
lea
pusha
jae
pop
sub
push
jb
push
outsb
scas
sbb
or
shl
add
lods
lcall
cltd
push
jp
pop
in
imul
insb
mov
jno
neg
aad
mov
jmp
call
jno
bound
in
gs
mov
xchg
mov
leave
in
cmp
mov
cmp
sub
mov
pop
cmp
lret
pop
inc
rcll
add
aaa
ss
pop
add
in
addl
mov
jl,pn
popa
sbb
pop
pop
out
fistpl
pusha
inc
cmpsl
cmp
enter
or
negl
fucomip
pusha
sbb
pop
pop
sahf
jb
cld
inc
scas
pop
bound
sub
add
fimull
push
pop
pop
jecxz
xor
in
test
ret
pop
aad
xchg
dec
orl
cmpsl
cmp
mov
mov
fptan
pop
outsl
pop
loope
sbbb
and
mov
dec
jbe
mov
in
pop
or
pusha
or
and
mov
pushf
imul
leave
dec
cmp
sbb
xchg
mov
pop
iret
popa
sub
test
mov
gs
fisttpl
ret
and
mov
dec
mov
sbb
sbb
inc
or
pop
loopne
or
cmpsl
jp
js
add
cmp
mov
fwait
jns
pop
cs
iret
jle
mov
adc
pushf
das
pop
xorb
shl
mov
and
adc
lods
xor
xor
and
dec
mov
pop
in
fmuls
inc
pushf
mov
adc
cmp
push
xor
fimuls
fnstsw
add
adc
lea
push
inc
dec
inc
fwait
jns
mov
sbb
add
mov
add
cli
out
inc
jnp
aas
jmp
push
lods
jo
ja
jb
scas
lahf
movsb
out
jl
repz
popl
push
and
fcmove
or
lret
xorb
cltd
pop
fwait
testb
enter
fcmovu
pop
cmc
shll
dec
clc
mov
leave
pop
cmp
fistpl
mov
in
ljmp
adc
scas
fcmovnu
cmc
lahf
add
xor
es
rclb
xor
and
movsl
rcrb
mov
ss
scas
pop
sub
lret
add
in
jge
in
mov
fnstsw
and
cmp
xchg
or
fs
or
sbb
sub
jl
outsl
fmuls
jnp
or
jne
xor
cld
int3
jecxz
push
mov
lods
pop
pop
sub
mov
rcrb
cs
add
js
mov
xor
lret
lds
mov
leave
cmp
int3
or
test
xchg
sub
and
repnz
gs
lret
jecxz
xchg
les
push
pop
pusha
or
imul
sub
arpl
jne
jo
daa
insb
push
jns
cld
adc
in
scas
mov
mov
aad
gs
push
push
jmp
xlat
push
xchg
mov
dec
pop
xchg
xchg
mov
pop
call
daa
push
fsts
and
pop
push
sub
ss
or
pop
dec
adc
in
iret
lret
inc
pop
lcall
mov
nop
mov
or
movb
mov
cmc
inc
push
mov
icebp
outsl
dec
cld
pop
pop
sbb
das
fstp
push
in
inc
les
mov
sbb
pop
test
xchg
sub
or
sbb
out
fstps
pusha
aad
mov
mov
imul
scas
bound
imul
or
in
add
call
mov
mov
push
adc
ljmp
mov
mov
mov
sub
pop
fisubs
je
test
mov
mov
push
in
pop
jmp
dec
cmp
push
lret
adc
pusha
mov
jb
mov
shll
addl
dec
or
out
sti
pop
mov
int3
jns
rcrb
xchg
adc
ds
dec
mov
jecxz
das
roll
inc
lds
fs
sbb
test
jbe
sub
xchg
jl
push
mov
rcrl
inc
or
lcall
in
pop
insl
jns
xor
mov
and
mov
adc
test
cs
stc
mov
pop
mov
sbb
mov
sbb
arpl
mov
je
adc
pop
sub
or
mov
pop
fdivr
repz
push
xor
je
sub
push
test
xor
dec
adc
pop
add
jae
cwtl
iret
pop
outsl
and
jnp
lea
daa
sub
mov
pop
cwtl
ret
stos
int
imul
mov
pop
ss
or
xchg
aaa
xchg
scas
mov
insl
hlt
adc
fldenv
dec
push
and
jl
pop
js
cmp
les
out
rcll
outsl
lcall
adc
sbb
and
addr16
out
cmp
mov
add
mov
mov
lods
pop
pusha
call
mov
jnp
jne
rolb
flds
aas
xor
dec
imulb
xchg
jp,pn
dec
mov
gs
iret
xorl
lods
imul
xchg
lahf
mov
and
sub
pop
xchg
js
xchg
mov
addps
xor
or
stos
in
fistpl
test
xor
mov
mov
mov
pop
mov
stc
pop
dec
mov
sarl
pop
push
or
xor
mov
mov
js
mov
pop
test
ss
cmc
out
sbbl
xchg
xor
aad
mov
push
pop
add
or
scas
xchg
loop
mov
dec
pop
mov
pop
ljmp
ret
jge
sub
cmp
pop
jmp
cmp
pop
movsb
adc
pop
negl
xor
out
sbb
jb
inc
mov
mov
or
and
pop
out
inc
pop
dec
cmpl
pop
mov
orl
imul
sbb
fcmovu
outsl
jmp
pop
jl
and
mov
push
fimuls
pop
ret
xchg
or
sbb
in
scas
insl
out
add
rcll
mov
mov
jecxz
xor
popa
or
fmuls
xchg
cmp
stc
pop
les
push
pop
inc
cmp
xchg
fistpl
dec
xchg
mov
lret
pop
pop
pop
mov
pop
mov
mov
pop
mov
gs
inc
pop
test
mov
or
cs
pop
scas
stc
pop
movl
xchg
jge
movsb
push
inc
dec
ret
pop
pop
or
loope
xchg
fwait
add
and
sbbb
rcrb
mov
push
jo,pt
lock
out
sub
mov
pushf
dec
movsb
inc
and
andb
out
out
pop
jo
movsl
xchg
nop
push
inc
in
je
adc
test
lret
std
adc
mov
pop
xchg
loop
pop
and
dec
cmp
inc
pop
mov
in
addr16
lahf
dec
push
loop
ss
cmc
ror
hlt
mov
xchg
cltd
pusha
imul
and
xor
dec
jp
pop
sti
movsl
adc
xchg
fadds
pop
dec
pusha
inc
or
pop
lret
nop
lea
pop
jno
add
and
in
les
lret
and
cwtl
sbb
nop
xor
dec
pop
js
fwait
ljmp
ret
fnstsw
sub
mov
xchg
lahf
cmc
jecxz
mov
cmp
pop
orl
xor
int
idivb
pop
sbb
xor
call
or
xchg
pop
and
cmp
mov
pop
or
arpl
pop
inc
sub
call
and
fcoms
xor
mov
push
fcomi
jg
ficomps
jp
or
pushf
scas
mov
sbbl
cmpsb
cwtl
cli
sub
pop
mov
inc
fisubl
nop
pop
inc
xchg
std
out
mov
push
push
insb
xlat
stos
pop
mov
xchg
xchg
and
rolb
inc
int3
ret
stos
inc
xlat
pop
fcoms
dec
mov
xchg
int
cmpsb
pop
in
fsubrp
rorl
lock
or
js
pop
faddl
dec
jge
pusha
jne
xchg
pop
insb
cmpsl
dec
cli
add
push
xor
lods
add
sub
lock
inc
andb
rorb
mov
pop
pop
mov
mov
xor
add
das
dec
pop
mov
sarb
ds
mov
sbb
fisubrl
test
xchg
es
cmp
test
or
mov
pop
xor
mov
in
xchg
or
sub
add
push
cmp
mov
pop
icebp
sarl
xchg
jmp
aam
and
int
mov
and
sub
and
sbb
loop
outsb
mov
or
and
popa
cld
mov
ds
inc
jp
outsb
inc
mov
iret
fmull
pop
dec
aas
push
sub
pop
loopne
sarl
ja
mov
pop
inc
jmp
in
test
jns
sub
sti
and
mov
nop
pop
sub
pop
or
pop
cwtl
orb
clc
jbe
or
xor
aaa
loope
scas
outsl
mov
jl
push
mov
inc
fsts
test
loopne
popa
les
and
mov
mov
js
test
mov
and
or
pop
rorb
push
xchg
mov
sub
add
dec
pop
loop
pop
mov
stc
cmpsl
sbb
xor
jns
pop
or
push
cmpsl
shrb
or
lds
pop
call
inc
cmpsl
dec
jp
sti
aaa
cmp
push
in
pop
cmp
out
pop
out
pop
lea
adc
sbb
fs
xchg
shll
pop
es
pop
dec
add
mov
pop
fcomi
mov
mov
push
inc
call
pop
xchg
cltd
ljmp
fcompl
push
data16
and
cld
ret
ljmp
out
paddusb
dec
mov
pop
or
mov
scas
add
cmp
and
aam
sbb
adc
call
arpl
push
jg
xchg
xor
in
loope
pop
mov
push
pop
pop
push
shll
dec
sarb
out
pop
insb
mov
cltd
fildll
fdivl
mov
cmp
pop
test
jle
or
mov
or
mov
mov
aam
adc
fprem1
scas
cs
adc
push
jns
sbb
adcl
jno
xchg
adc
gs
mov
call
dec
icebp
cmp
push
pop
jae
pop
xor
mov
push
cmp
mov
mov
call
stc
xchg
mov
jp
lret
jecxz
push
pop
cmp
pop
ret
les
and
sbb
lea
cmp
scas
adc
mov
daa
into
mov
pop
loope
mov
pop
jg
sub
jmp
sub
cmpb
outsl
pop
lock
mov
pop
adc
pop
test
dec
vaddpd
adc
mov
pop
push
add
dec
xlat
sbbl
leave
test
std
push
pop
mov
ljmp
cltd
fimull
mov
add
icebp
jp
cs
scas
pop
lret
cmp
int
push
cmp
pop
or
jns
aad
and
push
mov
clc
leave
mov
mov
int
cmp
loope
mov
fdivrs
jae
and
jns
push
bound
cld
mov
in
fadd
xchg
jg
cmp
sbb
jb
pop
lcall
test
pushl
sarb
lret
xchg
enter
add
stc
fists
out
sbb
ss
movb
popl
loope
in
sbbb
mov
insb
cmc
sub
add
jnp
repnz
jo
pop
mov
inc
cltd
pop
mov
dec
addr16
js
inc
sub
or
inc
data16
add
mov
fmuls
pop
nop
xor
movb
and
ret
out
sub
in
loop
nop
sbb
leave
pop
mov
xchg
add
scas
cmp
pop
in
mov
sbb
ret
adc
or
dec
and
push
subl
push
pop
push
mov
addr16
sub
and
test
jb,pn
fstps
mov
lds
inc
sub
jmp
rorb
mov
mov
push
sbb
pop
imul
jne
nop
fndisi(8087
imul
add
int
mov
mov
loop
fdivrl
orl
mov
mov
movsb
pop
out
es
sbb
loopne
pop
dec
sahf
cmp
push
mov
xchg
test
test
lret
push
cmp
daa
pop
fdivs
push
sbb
or
stos
xchg
mov
insb
inc
sub
jge
push
xchg
cwtl
jae
nop
scas
adc
pop
test
dec
mov
adc
in
je
bound
add
shlb
loope
pop
cmp
sub
xchg
jb
pop
inc
jl
and
ss
fistpl
lcall
mov
pop
xchg
ret
ja
addr16
cld
out
shlb
sbb
sti
pop
out
adc
xchg
xchg
ss
pop
sbb
rcl
aas
lods
mov
pop
xchg
je
push
pop
cmp
add
pop
ret
aam
inc
mov
movsl
pop
cmp
cmp
fmul
lds
ljmp
fsts
mov
mov
clc
xor
cmpsl
pop
scas
seta
adc
pop
pop
inc
es
sbb
gs
dec
mov
sbb
bound
imul
jge
ret
pop
xor
add
pop
scas
mov
popf
shll
adc
pop
sub
lods
loopne
add
and
pop
cltd
ja
jno
dec
mov
sti
or
pusha
pop
jecxz
int
xchg
push
pop
jnp
imul
dec
jmp
pop
iret
xchg
or
pop
sti
lahf
or
pop
inc
and
out
pop
mov
adc
pop
fimull
jb
jecxz
scas
movsb
imul
lods
in
test
xchg
pop
into
push
cmpsb
xorl
repnz
stos
and
jmp
add
outsl
lret
je
pop
arpl
mov
lods
scas
jbe
lock
push
mov
mov
pop
imul
lret
hlt
jo
out
repnz
cwtl
sarb
jns
pop
sbb
lods
addr16
mov
pop
aam
in
cs
xchg
lahf
jmp
xor
das
and
jo
pop
or
push
jne
jg
cmp
or
stos
add
inc
nop
cli
mov
jp
fwait
in
mov
pop
sbb
mov
adc
mov
ds
mov
add
adc
dec
mov
mov
inc
js
push
pop
pop
test
jnp
in
push
or
les
aam
in
pop
xor
or
sub
aaa
scas
sbb
icebp
faddp
and
jg
xor
mov
sub
cmp
jbe
push
cmc
pop
xchg
arpl
or
popf
cmpsl
mov
jb
pop
dec
adc
xchg
push
xchg
push
in
inc
add
dec
ja
pop
inc
sbb
frstor
pop
movsl
pop
aas
fcomip
push
mov
shrb
addr16
stos
in
sahf
pop
push
fisubl
cmp
and
jle
pusha
inc
mov
jns
sbb
add
int3
xchg
mov
stc
leave
cmp
dec
sbbb
cmc
sub
jmp
mov
dec
pop
imul
add
stc
popa
int3
out
scas
sbb
addr16
xor
shrl
addr16
stos
mov
das
sbb
or
pop
popa
in
push
insb
lret
dec
mov
neg
ffree
ja
push
ljmp
cs
js
lcall
cmpsl
jnp
lret
bound
pop
jne
mov
mov
pop
je
ja
xchg
pop
in
inc
and
jg
shlb
sahf
bound
dec
fcomps
rcr
mov
push
add
outsl
pop
xchg
dec
push
cmp
dec
addr16
out
mov
push
xchg
dec
dec
pop
pop
cmp
dec
mov
je
imul
pop
pushf
lcall
in
lahf
add
or
fstps
sub
je
pop
jnp
sub
shrl
pop
xchg
sub
push
pop
lret
in
hlt
push
stos
cmc
lea
dec
pop
jb
ret
gs
xor
pop
lock
loop
jg
aaa
pop
xor
fimuls
divl
pop
xor
pop
xor
xchg
repnz
inc
std
pop
mov
inc
mov
fdivrs
mov
push
adc
mov
ret
not
out
addr16
lret
jecxz
test
pop
pop
in
dec
aad
push
int3
pop
adc
test
dec
xchg
jl
popf
cmp
inc
jo
out
push
mov
adc
pop
loop
std
inc
test
loope
pop
push
add
es
andl
inc
scas
popa
jb
pop
stos
shr
sti
adc
pop
mov
mov
jae
adc
int
cmpl
pop
leave
jo
rorl
jne
xchg
mov
jae
notl
pop
mov
mov
loop
lods
mov
testb
pop
ss
and
xchg
add
imul
and
pop
es
pop
imul
jl
dec
js
cmpl
pop
jnp
pop
pop
mov
bound
shrl
push
ret
ret
jecxz
cli
inc
pop
repnz
test
out
pop
loopne
jbe
inc
pop
sarb
pop
add
xchg
and
pop
rorl
push
enter
and
fildl
or
push
cmp
mov
sti
pop
in
xor
xor
push
mov
pop
in
pop
idivl
push
and
hlt
pusha
frstor
cmp
pop
jnp
movsb
dec
and
icebp
pop
jmp
xor
out
pop
sbb
int3
push
loop
dec
pop
pop
pop
xorl
sub
jle
xor
adc
mov
pop
mov
xchg
pop
gs
push
push
lea
pop
push
push
movsl
xor
adc
pop
dec
sarl
jae
adc
out
shlb
imul
into
dec
and
fistpl
ja
add
sub
pop
inc
sub
mov
clc
popl
lret
loop
test
ds
pop
pop
enter
or
mov
fwait
xchg
mov
outsl
es
stc
sbbb
mov
pop
test
dec
int3
fdivp
inc
sbb
mov
xor
push
mov
push
sahf
and
push
int3
cmpsl
ds
jbe
sbb
cmpsb
repz
xchg
xlat
xor
xchg
dec
pop
stc
or
cld
pop
jl
bound
sub
insl
xchg
pop
add
push
lds
pusha
pop
xchg
std
jp
mov
or
jae
sti
sarb
repz
mov
sub
scas
or
ret
in
jns
mov
mov
adc
cs
fdivr
lahf
pop
or
sbb
or
out
ljmp
lcall
adc
lock
pop
or
call
rcl
and
mov
push
or
dec
pop
jb
jg
clc
loopne
mov
lods
mov
lret
pop
pop
aaa
push
aam
mov
jge
mov
mov
in
fsubs
cmc
clc
leave
lahf
mov
xchg
mov
xchg
js
cmp
fidivrl
daa
adcl
mov
push
sub
fldcw
lea
ljmp
cmp
and
xchg
cmp
mov
stc
out
push
test
int
test
fists
add
mov
jae
stos
cli
les
mov
dec
xor
or
sub
sbbl
mov
pop
jne
outsb
cmp
or
ds
mov
mov
xor
push
mov
pop
lcall
stc
dec
pop
and
xor
cmp
cmpsl
loop
mov
jo
pop
fs
hlt
sub
inc
mov
fists
movntq
jp
out
or
addb
xor
dec
jnp
pop
les
daa
pop
inc
mov
or
fistps
in
mov
insb
cmpsl
push
pop
sbb
ljmp
mov
mov
fiaddl
add
insb
and
jnp
or
out
je
dec
mov
fstpl
fistps
push
repz
adc
mov
mov
dec
push
cmp
insb
jne,pn
jecxz
jbe
xchg
pop
les
outsb
pop
pop
mov
push
pop
adc
ljmp
bound
sbb
push
rcll
cli
mov
and
bound
punpckhbw
loopne
xor
mov
jl
pop
pop
cli
pop
pop
cld
aaa
dec
push
pop
sub
fwait
repnz
popf
mov
adc
mov
popl
add
aad
mov
cltd
xchg
rcrl
and
and
xor
leave
pop
xchg
enter
jmp
out
and
nop
jnp
or
shr
pop
dec
and
pop
mov
iret
jb
fcoml
int
or
fstl
and
std
mov
rcrb
pop
pop
sub
xor
cs
sub
pop
cmp
or
imul
call
and
lahf
cmpsb
sub
imul
sbb
sbb
bound
mov
cmp
out
fcmovbe
cmp
lahf
pop
inc
cmc
cmp
mov
mov
loopne
cmp
cwtl
lods
pop
movsb
out
pop
sub
data16
pop
sub
lock
pop
jns
repz
dec
rcrl
mov
fs
jo
and
push
movsb
dec
popf
pop
aaa
and
cltd
scas
dec
popa
cld
adc
jns
jbe
pop
jne
stos
adc
jg
mov
js
cmpsl
jae
push
ljmp
imul
mov
sbb
cmp
scas
add
cmp
repz
push
jg
add
clc
xor
les
rorl
xor
pop
mov
pop
repz
jae
fdivrs
mov
xchg
aaa
inc
cltd
imull
xchg
cmp
outsb
pop
sub
push
jecxz
ds
mov
gs
sbb
ret
and
rclb
push
cld
scas
pop
pop
adc
cmp
mov
xor
mov
pop
popf
push
mov
jg
mov
lods
xor
mov
inc
pop
jecxz
pop
arpl
cli
leave
and
stos
ss
xchg
pop
sbb
bound
cmp
imul
pop
dec
jb
push
pop
loopne
pop
mov
sub
cs
scas
aad
leave
fistps
out
pop
adc
not
pop
inc
stc
mov
mov
pop
or
lea
mov
arpl
loopne
pop
loopne
std
lock
sub
cmc
mov
mov
or
or
insb
mov
aas
clc
push
sbb
mov
lcall
or
push
rorl
fsubrl
out
pop
push
add
sbb
dec
data16
jmp
int3
pop
jp
cmp
hlt
add
cmovne
mov
adc
add
pop
test
das
ja
push
cmpsl
jnp
insl
pop
xchg
adc
pop
push
bound
mov
sbb
shlb
mov
jno
sub
je
in
dec
mov
into
or
sub
bound
xor
dec
mov
js
scas
push
pop
std
das
cld
jge
sub
pop
pop
push
mov
daa
cmp
mov
pusha
cltd
pop
adc
xor
xor
mov
loopne
push
sub
pop
cmp
icebp
push
dec
push
mov
daa
sbb
pop
shrl
in
cmpsl
ret
mov
les
out
inc
outsb
mov
add
pop
in
jb
jnp
push
lret
adc
adc
pop
lea
mov
scas
mov
idivb
add
mov
loope
mov
std
ds
or
pop
enter
mov
lahf
sbb
mov
mov
add
loope
fsubr
sbb
sub
pop
pop
cwtl
je
jo
js
sti
sti
les
nop
mov
sbb
cmp
scas
push
ficompl
mov
pop
mov
mov
xchg
lcall
loope
inc
or
fistps
ds
loopne
jae
jno
addl
test
cmp
push
add
test
pop
iret
jbe
jg
mov
xor
inc
scas
popl
jb
mov
pop
inc
lahf
test
les
push
insl
notb
je
subb
mov
faddl
pop
sbb
call
repnz
jmp
sar
mov
jb
movsl
mov
xchg
dec
repz
xor
xchg
pop
movb
push
pop
gs
xchg
mov
stc
push
mov
lock
outsb
js
pop
jge
dec
pop
imul
test
add
xchg
pop
mov
lods
xchg
mov
mov
dec
or
pop
mov
lea
mov
jno
sub
fiaddl
mov
pusha
mov
sub
imul
pushf
dec
pop
enter
fbstp
js
xor
and
ja
push
mov
and
cmp
sbb
shlb
rcll
dec
mov
in
push
jno
pop
pop
pop
or
popa
andl
jns
pop
shlb
loopne
xchg
aas
std
ja
xchg
ret
jmp
out
cmp
sub
pusha
testl
jnp
lea
je
mov
pop
mov
jp
mov
push
subb
dec
jp
pop
movsl
lahf
inc
outsl
cmp
inc
loope
pop
ds
jnp
movsl
cmc
pop
hlt
adc
into
mov
mov
insb
mov
loop
jns
cli
add
loopne
rcrb
fcmovbe
pop
repnz
cmc
pop
sub
inc
pop
mov
mov
iret
xchg
into
pop
fisttps
jmp
cmp
dec
stc
lcall
mov
ret
pop
mov
out
pop
cmpsl
adc
mov
and
jo
test
cmp
rcr
fimull
cli
dec
fsubrl
icebp
roll
lret
outsl
mov
pop
xor
stos
aad
pop
mov
into
inc
xchg
notb
pop
mov
lret
cmc
fldcw
push
xchg
test
popa
pop
pop
aas
xchg
das
add
or
dec
push
jne
inc
pop
push
ret
pop
adc
aaa
lcall
pop
in
fadds
push
mov
fwait
bound
jge
notl
pop
les
arpl
icebp
push
mov
loopne
dec
imul
xchg
cmp
aad
lcall
bound
leave
pop
xchg
in
aas
stos
test
xchg
scas
std
stos
in
and
xchg
daa
pop
rclb
mov
js
jl
je
sti
mov
lods
ljmp
out
ljmp
push
insl
lahf
inc
add
adcb
fwait
mov
or
ret
jo
adc
push
dec
or
xchg
dec
add
adc
mov
mov
pop
mov
mov
mov
pop
lods
adc
cld
out
pop
leave
pusha
jne
cmpsl
aaa
inc
pop
es
divl
xchg
ljmp
xlat
popa
bound
jmp
mov
mov
cmpb
shlb
sbb
aaa
xor
lret
arpl
ja
pop
ljmp
add
pop
push
mov
inc
pop
dec
push
aad
inc
clc
mov
aaa
mov
sbb
push
xor
pushf
mov
mov
push
add
sbbl
mov
lock
movsl
lods
mov
clc
add
lret
adc
je
adcl
mov
fsubr
fs
rclb
mov
pop
push
movb
repnz
cmpsb
sbbl
test
or
cmp
leave
popa
mov
pop
mov
sub
aad
sub
mov
pop
cmp
jmp
gs
iret
shrl
aas
jle
push
js
pop
mov
xchg
mov
cmpb
aas
repnz
mov
pop
mov
mov
xchg
loopne
push
popl
cld
sbb
inc
pop
xlat
data16
pusha
pop
fdivrs
cltd
out
rclb
or
dec
leave
xlat
sbb
push
orb
and
inc
xchg
push
popf
sbb
jmp
fcomps
and
aad
bound
pop
movsl
push
cvtps2pi
stos
aad
add
fisubrs
jae
pop
repz
xchg
jns
pop
sub
cmp
sbb
pop
bound
and
mov
xchg
or
repnz
mov
or
movsl
jnp
or
dec
fwait
mov
rolb
push
cmp
nop
sbb
cmp
push
or
xchg
adc
ret
cmp
in
sahf
out
imul
and
in
fwait
les
ficoms
pop
push
scas
pop
cmp
jecxz
pop
push
test
or
stos
adc
faddl
insl
cli
or
xchg
pop
das
or
icebp
mov
inc
cs
inc
cwtl
push
add
int3
xchg
outsb
mov
and
mov
ret
pop
cmp
mov
cld
mov
popa
mov
pop
je
and
pop
jecxz
repnz
mov
sbb
inc
imul
pop
out
scas
add
sbb
scas
pop
cli
data16
jl
sbb
sub
mov
sbb
push
dec
push
fsubrs
push
imul
sbb
sti
pop
dec
xchg
popf
xchg
pop
xchg
test
lds
clc
add
insb
pop
int
ss
outsl
sub
jbe
pop
scas
lea
mov
or
pop
mov
xchg
loop
std
std
pop
pop
adcl
ficoms
lret
imul
bound
jmp
rcrl
fists
mov
popf
sub
push
pop
ret
dec
and
jbe
pop
lret
inc
fistpl
pushf
lahf
into
or
les
cmpsb
ret
out
test
cmp
fwait
sbb
pop
std
movsl
popf
in
inc
imul
mov
pop
fcompl
push
fwait
out
stos
pop
cltd
cwtl
mov
jb
sbb
mov
pop
pop
shlb
and
sub
jbe
test
test
xor
test
lret
ficompl
lcall
pushf
or
jmp
std
jl
and
push
out
lea
push
pop
push
stc
dec
imul
mov
out
fisttpl
sbb
mov
test
push
dec
pop
movsb
jp
mov
mov
out
int
test
clc
hlt
mov
cmp
pop
ja
xchg
leave
pop
fildll
push
mov
cmp
mov
xchg
into
fistl
push
and
cs
pop
imul
sbb
rcrl
imul
rcrb
mov
hlt
inc
xchg
clc
cmpsl
pop
arpl
xchg
and
inc
or
jae
imul
jmp
mov
adc
aas
dec
sti
mov
scas
arpl
push
mov
out
sub
and
imul
xor
iret
icebp
push
pop
test
inc
popf
push
fwait
mov
es
cld
shrl
cmp
pop
orl
pop
lcall
inc
out
and
sbb
dec
pop
js
jl
popf
icebp
arpl
mov
test
cmp
call
pop
insl
xor
aaa
mov
pop
mov
push
adc
add
xor
and
mov
xor
shl
or
push
sbb
mov
jae
call
pop
xchg
pop
or
add
cltd
dec
cmc
jmp
repz
dec
and
enter
push
ret
xorl
mov
in
popa
mov
pop
cli
pusha
mov
ret
add
dec
mov
fsubrs
daa
imul
and
mov
push
inc
pop
mov
pop
incb
adc
pusha
inc
add
out
pop
popf
xlat
jge
mov
das
dec
dec
add
pushf
and
js
scas
mov
jb
filds
cmp
mov
xchg
pop
outsb
iret
mov
inc
or
mov
pop
xor
icebp
mov
divb
xor
dec
test
out
lcall
jno
sbb
pop
int3
inc
ljmp
mov
sahf
stos
into
insl
clc
ret
push
jbe
jne
jg
loope
shrl
jge
je
mov
bound
mov
movb
lret
sarl
jae
sub
mov
fcomps
mov
inc
neg
pop
dec
push
pop
jge
out
gs
pop
xchg
leave
cmp
addr16
jle
xchg
and
loop
fidivl
and
icebp
insl
dec
cwtl
fists
push
sti
hlt
aaa
leave
xor
xlat
sbb
scas
or
jl
cmc
pushl
dec
pop
clc
or
pop
cmp
and
cmp
pop
pop
sar
enter
out
inc
sub
dec
test
sub
icebp
pop
pop
in
jnp
jno
nop
fs
or
f2xm1
int
enter
loope
dec
jae
inc
inc
pop
in
clc
arpl
pop
jnp
mov
pop
inc
sbb
lock
mov
inc
pop
cltd
mov
pop
in
push
pop
mov
mov
sub
jo
pop
roll
pop
dec
mov
sbb
out
inc
stos
xor
insl
xor
lcall
in
lods
hlt
loop
clc
mov
mov
stos
add
fstps
inc
and
push
add
icebp
scas
mov
cltd
jle
pop
movsb
shll
xor
or
jl
icebp
xlat
lret
out
jno
pop
mov
call
jg
pop
xchg
pop
xorl
cmp
push
mov
aam
push
jmp
adc
ljmp
rcr
iret
insl
pop
sbb
mov
repnz
in
icebp
xor
xchg
pop
mov
add
into
jne
inc
scas
dec
fwait
push
xor
sbb
mov
jge
lock
pop
mov
inc
sbb
orb
fadd
inc
pop
xchg
mov
jle
and
xchg
out
in
sbb
aam
pop
jge
mov
adc
mov
dec
pop
ret
inc
out
push
fiadds
jp
push
outsl
mov
fidivrl
adc
sbb
pop
lahf
adc
lock
push
add
dec
out
pop
mov
xchg
loope
cwtl
xor
pop
xchg
ret
scas
rorb
cmc
lods
or
pop
xor
push
or
inc
lock
andb
ljmp
insb
xor
or
mov
movsb
stos
push
cmp
jmp
mov
pop
in
lcall
push
mov
cwtl
cmp
fldcw
jnp
cwtl
sbb
xchg
xchg
sbb
jp
mov
aaa
sub
repnz
mov
iret
or
pop
aas
mov
jns
les
movsb
pop
mov
sar
inc
pop
mov
lcall
and
mov
pushf
ret
rcrb
mov
inc
pop
mov
jb
pop
rcr
push
push
scas
pop
push
lock
inc
movsl
add
divl
hlt
out
sub
mov
adc
pop
fisttps
jae
notb
lret
or
mov
lea
test
inc
out
int
repz
pop
roll
into
divps
fstpt
repz
push
and
adc
and
sub
cltd
mov
pop
xchg
push
sub
rcrl
and
cmpsb
add
popf
loop
movsl
and
fisttps
popf
daa
pop
adc
nop
iret
mov
sahf
cltd
shl
sub
arpl
add
pop
and
inc
cs
and
imul
pop
faddl
xor
pop
mov
cmp
pop
gs
mov
pop
adc
out
or
mov
adc
xchg
sbb
mov
lea
push
xchg
stc
dec
pop
stos
inc
xchg
sub
std
loop
out
lea
lea
or
pop
scas
cmp
es
mov
lods
data16
or
push
mov
es
repz
jae
clc
inc
insl
cwtl
mov
xchg
cmp
mov
and
adc
movsb
je
pop
push
iret
push
pop
inc
dec
adc
mov
out
xlat
xchg
lahf
cmp
imulb
lods
fstp
and
loop
inc
or
jae
aam
cwtl
sbb
fildl
mov
push
push
pop
mov
pusha
int3
push
sbbl
sub
addr16
xchg
in
test
cmp
mov
fwait
pop
jl
mov
es
fidivl
dec
push
and
jle
pop
pop
in
xchg
jmp
jnp
mov
pop
mov
cmp
add
mov
pop
xor
addr16
push
jnp
pop
pop
movsl
frstor
adc
mov
or
cltd
pop
popa
js
stos
cld
xor
mov
adc
daa
pop
dec
sub
js
lock
fstps
in
cmc
add
xor
scas
out
or
out
outsb
adc
cmpsl
pop
add
pop
dec
popa
sbb
int
mov
ret
dec
lock
xor
setp
rcll
mov
shr
sbb
cld
pop
negl
in
pop
inc
push
rclb
mov
in
fs
push
aad
or
test
lods
cmp
loopne
ret
sbb
adc
xchg
cmp
fdivs
sbb
jo
add
mov
fstpt
data16
mov
fcmove
mov
pop
xor
shl
idivb
push
lahf
aas
stos
mov
sahf
or
andl
and
negl
pop
xchg
cltd
lods
xchg
pop
lcall
in
mov
clc
js
out
mov
dec
repz
pop
sahf
mov
push
std
lret
arpl
cld
xchg
dec
push
inc
push
fidivrs
mov
dec
sbbl
bound
fidivl
pop
xor
pop
std
mov
sub
cmpsb
jmp
in
cmc
inc
pop
xor
rclb
pop
or
cmp
adc
pop
mov
mov
rcrl
pop
pop
leave
imul
and
pop
adc
lods
sti
dec
mov
cmp
sub
add
push
dec
mov
xchg
mov
test
push
aaa
add
fcmovnb
pop
out
jb
in
jne
pop
push
jns
jmp
pop
inc
dec
mov
imul
xorl
xor
insl
fbstp
pop
mov
cmp
fdivrs
cli
xchg
clc
clc
sub
adc
sbbb
push
sub
out
fsubl
dec
fldt
xchg
pop
mov
dec
push
test
xchg
push
or
push
stos
mov
fistl
inc
fsubrl
push
insb
pop
push
pop
push
enter
fs
into
pop
imul
mov
orl
inc
in
nop
cmpsl
pop
std
xor
and
push
popa
scas
repnz
add
push
mov
das
into
testl
push
repnz
lret
or
int
outsb
sbb
cmpsl
mov
loop
dec
in
imul
fsubr
pop
sbb
lock
fmuls
mov
cli
arpl
inc
mov
pusha
out
sbb
pop
sbb
cmp
and
sbb
and
outsl
icebp
mov
push
mov
cmp
dec
pop
mov
mov
cmp
jnp
push
inc
stos
jno
mov
das
xchg
cmp
negb
cld
in
scas
scas
dec
repnz
sub
mov
pop
sarb
xor
lds
mov
mov
dec
repz
push
inc
mov
dec
dec
adc
push
pop
in
call
xor
ja
repz
xchg
inc
adc
jecxz
sub
daa
and
mov
popa
popl
dec
cmp
pop
lret
movups
xchg
ja
add
cltd
and
xor
jns
jp
das
add
sarl
out
inc
clc
ja
pop
faddl
cmp
stos
jbe
cmp
fiaddl
ret
aad
aam
dec
pop
or
xor
out
mov
icebp
adc
pop
pop
repnz
mov
scas
dec
scas
push
adc
or
hlt
mov
test
rcrb
pop
pop
bound
clc
test
jmp
int
mov
jp
lret
insl
aad
cmc
outsb
mov
fdivs
inc
sahf
out
push
cltd
ds
out
xor
arpl
insl
mov
std
pop
lods
sbb
dec
or
pop
dec
jns
pop
cmp
int
pop
and
and
xchg
cmp
shr
stos
test
pop
xchg
push
mov
in
pop
lret
fnsave
dec
mov
and
aad
in
and
shrb
lea
scas
repnz
lret
mov
inc
js
and
sub
jecxz
sub
les
jb
sbb
in
stc
cmp
mov
test
enter
mov
push
or
mov
jo
out
xchg
and
mov
jl
pop
mov
sahf
into
out
pushf
aas
mov
and
mov
inc
xchg
jl
cmp
or
jecxz
push
xchg
cmp
jle
lahf
out
push
rcrb
inc
gs
and
push
or
xchg
je
arpl
rcrb
stos
jmp
pop
je
dec
jg
push
jp
xchg
stos
outsl
adc
mov
pop
lret
inc
cmp
ficoml
push
xor
cmp
dec
int3
mov
cltd
cli
inc
adc
and
roll
testb
push
adc
out
ds
lcall
push
stc
repnz
jle
cmp
push
sar
pop
adc
lcall
xchg
sbb
bound
add
jl
mov
mov
mov
pop
xchg
aad
roll
push
addr16
xchg
lods
test
sbb
aam
jo
xchg
xlat
pop
cmp
imul
sub
leave
pop
xlat
mov
aam
sti
adc
add
adc
cmp
mov
push
rol
cmp
ja
repnz
stos
pop
lret
push
test
outsl
je
adc
push
mov
cmp
jns
jmp
adc
push
leave
mov
sbb
test
imul
lcall
and
cmp
pop
movsl
pop
jno
std
lret
cmp
mov
stos
push
cmp
imul
gs
mov
and
add
aas
out
outsb
add
arpl
jbe
movsl
and
dec
jle
mov
or
push
in
pop
push
push
sub
mov
jo
out
fs
pop
out
data16
pop
pushf
xchg
dec
push
into
mov
sbb
jl
pop
jne,pn
daa
cwtl
dec
add
adc
int
out
js
pop
add
fcoms
pop
mov
lcall
pop
gs
aam
loope
test
pop
stc
js
pop
pop
leave
dec
mov
push
aaa
clc
adc
shll
or
out
fdivl
fst
fdivs
mov
inc
movsl
ds
xor
sub
fsubrs
pop
and
sti
in
cmp
mov
pop
int3
xor
dec
pop
clc
fs
mov
scas
push
fdivrl
pusha
jle
and
push
mov
xchg
shrb
mov
nop
lret
xchg
rcrl
push
fimull
mov
in
pop
or
lds
and
mov
pop
aaa
pop
pop
ret
mov
pop
lods
mov
inc
adc
and
dec
pop
push
test
out
dec
and
push
push
push
sti
xchg
pop
sub
ret
xor
xor
pop
sbb
sbb
shr
icebp
lock
insl
dec
arpl
aad
add
sub
adc
pop
push
cld
pop
aam
push
repz
sahf
insb
pop
into
mov
outsb
popf
pop
out
jne
ss
mov
pop
and
mov
adc
ss
dec
jbe
jb
and
sub
scas
adcl
push
mov
or
jecxz
mov
push
ja
mov
dec
xchg
shr
pop
out
insl
ds
int
xor
sub
push
pop
mov
mov
shrb
and
add
and
jo
mov
mov
std
add
test
fdivs
lahf
cmp
aam
pop
xor
cmp
pop
pop
lea
sbb
scas
ret
pop
sub
sub
movsl
pop
stos
dec
pusha
repnz
cmpsl
pop
push
sbb
mov
xchg
loopne
mov
jno
shlb
js
pop
or
add
rclb
scas
mov
push
mov
cmp
sbb
loopne
cmp
and
or
dec
lock
pop
add
js
pop
pusha
iret
scas
and
xchg
popf
mov
sarl
sub
dec
stos
and
jle
in
test
pop
dec
in
push
sub
mov
imul
fs
stos
hlt
adc
lock
sub
sbb
scas
pop
insb
mov
add
das
mov
in
xlat
cmp
imul
lahf
sti
push
test
rol
pop
pop
mov
push
and
cmpsl
adc
daa
pop
pop
loop
ret
sbb
mov
pop
ja
jns
loopne
adcl
pop
insl
dec
cmp
pop
cltd
mov
inc
mov
jp
ja
cmp
jae
pop
add
loope,pn
jb
lcall
inc
adc
jecxz
jp
pop
add
pop
sbb
xchg
adc
cmp
fwait
cmp
or
pusha
pop
or
pop
push
xor
cmp
or
fsubrp
les
notb
pop
push
xchg
stos
inc
cmpsl
pop
push
xchg
sbb
sbb
dec
jbe
fistps
xchg
and
mov
xchg
cmpsb
sarb
jmp
pop
mov
mov
pop
bound
xor
jp
cmpsb
push
js
pop
cli
das
mov
ret
xchg
pop
ja
icebp
xorl
loop
call
movb
pop
mov
xchg
mov
mov
sub
mov
repnz
rol
roll
or
jo
xchg
pop
pusha
push
pop
out
imul
push
or
mov
mov
scas
inc
out
nopl
pop
sub
dec
mov
pop
dec
xlat
and
pop
aaa
pop
and
jmp
push
mov
bound
das
ja,pn
xchg
fwait
jnp
lahf
jbe
pop
test
add
jecxz
mov
addr16
or
test
jl
out
daa
dec
pop
mov
repz
mov
imul
mov
jg
lea
out
pop
dec
inc
or
push
pop
jne
add
stos
lea
das
pop
movsb
inc
int3
xor
fstpl
pop
dec
push
or
repz
pop
scas
sti
imul
iret
xor
es
sub
mov
push
fcoms
dec
pop
dec
out
mov
xlat
cltd
test
ficomps
mov
mov
pop
mov
addr16
lahf
int
arpl
ss
sub
push
es
mov
fildl
mov
pop
fld
mov
clc
das
mov
out
jg
pop
movsb
dec
loop
xor
movsl
repz
int3
test
fcomp
loopne
mov
out
fcomps
pmovmskb
out
dec
pop
xchg
subl
aas
sbb
push
pop
repnz
lods
and
pop
add
arpl
test
hlt
adc
out
mov
pop
scas
fidivrs
test
cwtl
push
lcall
pop
xor
mov
jle
icebp
pop
stos
repz
aam
testb
pop
jge
out
shll
popf
cltd
mov
in
cmp
xor
pop
jg
mov
popa
push
pop
sbb
negb
jl
jnp
sub
xchg
sbb
sbb
adcl
pop
aaa
pop
lods
xor
scas
sbb
xchg
test
sbb
fcmovnu
adc
ds
sbb
pop
aam
fstpl
pop
test
pop
rcrb
out
adc
or
hlt
pop
imul
in
jns
mov
mov
stos
jae
fnstenv
pop
cwtl
repz
ficoms
pop
cmp
add
jbe
pop
push
mov
fldenv
pop
cmp
outsb
outsb
jns
and
adc
push
pushf
mov
nopl
sub
cmp
lea
adc
pop
pop
dec
and
pop
sub
pop
inc
push
repnz
mov
pop
jno
test
shrl
jnp
out
xchg
aas
and
fbld
lret
mov
cli
pop
rorl
or
loopne
icebp
lret
repz
add
pop
jns
imul
jg
ret
pop
push
mov
mov
jg
pop
sbb
shlb
arpl
jns
stos
pop
cmpsl
fsubl
inc
lret
pop
and
xor
mov
xchg
xchg
rcrb
bound
fldcw
dec
inc
cwtl
mov
mov
jb
push
adc
loopne
mov
xchg
iret
add
mov
sub
pop
push
adcb
jecxz
call
adc
xor
pop
xchg
pop
or
pop
push
sbb
cmp
in
mov
movb
loope
fildll
pop
add
cld
mov
pop
cmp
bound
pop
push
cltd
sbb
dec
mov
mov
pop
jge
or
lds
mov
adc
addr16
ret
pop
out
test
xor
es
xchg
adc
bound
shll
dec
cmpsl
pop
mov
cmc
leave
cwtl
ret
or
fdivs
and
pop
pop
in
push
fisubrs
stos
pop
push
icebp
push
push
jno
and
pop
les
pop
jo
out
add
jns
dec
fisttpl
popa
addr16
push
mov
lds
negb
xorb
adcb
es
adc
mov
incb
push
pop
sbb
call
pop
and
or
mov
pusha
inc
fildl
pushfw
mov
cmp
and
mov
scas
lods
add
jge
xchg
popf
push
pop
jp
mov
scas
lret
in
stc
scas
jns
arpl
in
push
stc
and
icebp
cmp
lea
fs
sbb
loope
andps
into
scas
aaa
inc
cs
push
fstps
xchg
movl
push
out
or
pop
int
fdivs
xchg
rcr
fistl
cmp
enter
mov
pop
pop
pop
leave
xchg
enter
popa
mov
cmp
arpl
idivb
push
push
sahf
mov
stos
sbb
dec
or
sub
sub
xchg
gs
sbb
lahf
adcl
mov
leave
adc
testl
imul
jecxz
in
cmp
lea
stc
jo
sbb
test
rolb
arpl
inc
ljmp
mov
inc
mov
xor
pop
inc
pop
add
imul
adc
lods
cmp
mov
add
jno
popf
pop
adc
repnz
mov
push
dec
sub
push
mov
sub
cmp
mov
sub
push
or
dec
and
jecxz
mov
mov
push
dec
test
jecxz
shrb
out
push
sub
jb
shlb
fistpl
fs
push
cmp
xor
sub
push
pop
inc
icebp
cmp
fdivl
xor
push
into
xchg
and
or
xor
jb
ret
negl
repnz
fisubrl
pop
je
mov
pop
pop
jle
add
push
xor
rol
scas
adc
and
std
jmp
push
cmpsb
pop
jne
and
mov
stc
pop
ret
pop
cmp
int
mov
mov
jns
mov
out
enter
add
sbb
addr16
mov
das
cmp
sub
aam
inc
jae
mov
xor
cwtl
mov
mov
nop
popa
pop
mov
fisubl
cmp
stos
stos
pop
pop
jae
test
adc
pop
bound
fwait
jns
cmp
push
stc
aaa
fldcw
int
fstpl
xchg
stos
imul
rclb
rcrl
mov
push
ja
mov
xchg
jnp
jecxz
pop
mov
xchg
arpl
mov
imul
sbb
subl
or
mov
mov
test
jae
mov
add
mov
test
fucomip
or
inc
pop
sahf
test
lea
je
fstps
mov
mov
pop
push
xchg
in
pop
insb
push
pop
inc
xchg
add
sbb
aas
push
add
sbb
std
fld1
push
push
push
pop
leave
sbb
pop
jns
enter
xchg
xor
xchg
lods
cld
mov
rcrl
bound
mov
imul
fldt
xor
lcall
addr16
sbb
js
jb
pmaxsw
in
push
je
jnp
pop
lahf
push
xor
pop
xor
scas
cmp
scas
test
pop
subb
scas
imul
pop
popa
or
sbb
sub
test
and
xor
add
lret
mov
lea
fucom
xor
int
jmp
jp
mov
cmp
pop
push
imul
js
xor
in
mov
inc
int3
pop
in
dec
shlb
mov
add
add
sbbl
sarb
cld
fdivs
std
fdivr
aaa
adc
push
dec
or
ret
lahf
mov
fstpt
into
xchg
les
jo
pop
je
xchg
cmpsb
adc
pop
mov
fxch
loopne
pop
repz
dec
xor
arpl
xchg
and
ficompl
mov
das
push
dec
cmp
add
push
fsubrp
mov
negb
jl
or
addr16
pop
xor
push
push
pop
adc
jecxz
ljmp
es
add
mov
inc
pop
outsl
fisttps
fidivl
inc
sub
push
xor
cmpsl
push
xchg
inc
inc
fs
ja
cmp
lcall
test
stc
cmp
daa
and
pop
je
mov
lea
pushf
fwait
mov
xorl
mov
jge
adc
adc
mov
sbb
lret
in
dec
mov
cltd
mov
jmp
fstps
ficoml
jmp
push
std
mov
test
mov
mov
push
jmp
inc
nop
loop
adc
xlat
mov
out
jns
jge
mov
jp
mov
ljmp
push
ds
fdivrs
sarl
mov
xchg
rcrb
jmp
push
pop
shrb
loope
loopne
xchg
xor
mov
nop
hlt
jmp
cmp
adc
jle
ret
dec
aad
repz
xchg
aas
gs
adc
adc
fwait
mov
std
clc
mov
sub
enter
repnz
cmp
addr16
add
gs
adc
jbe
or
in
and
inc
scas
jns
mov
mov
add
jge
cmp
fisubs
aaa
pop
sar
sbb
daa
mov
jl
mov
outsb
lock
clc
dec
test
stos
mov
test
pop
or
fcmovnb
sahf
push
sbb
pop
pop
imul
xlat
pop
mov
mov
cmp
test
testl
enter
sub
xor
pop
cmp
std
mov
imulb
jbe
divl
stc
mov
fnstenv
mov
adc
or
mov
neg
cmp
pop
loop
cmp
vmaxsd
imul
adc
xchg
lret
push
ds
loope
cmp
fstpl
fsts
pop
add
adc
xor
shl
jb
arpl
xor
scas
cmp
fisubs
mov
ret
pop
sbb
mov
cmpsl
das
jb
jl
inc
out
xor
call
sbb
adc
fistps
lret
aad
lds
out
fnsave
xchg
sbbb
push
shll
js
cmpsb
fldenv
inc
mov
mov
scas
xchg
mov
repnz
mov
iret
push
and
lock
cmp
lahf
pushf
push
mov
out
les
pop
divl
jp
fidivrl
sbb
mov
adc
xor
out
cmp
into
dec
ret
adc
ficomps
pop
inc
xor
and
iret
inc
xchg
mov
mov
push
push
pop
pop
movsb
and
mov
xchg
clc
dec
cltd
in
mov
pop
sbb
jge
inc
dec
nop
bound
dec
mov
rcrl
mov
leave
movsb
adc
arpl
push
and
or
push
mov
int3
sbb
pop
or
mov
jg
sub
int
pop
icebp
outsl
xor
inc
out
jne
mov
mov
and
insb
or
push
push
sbb
sub
push
dec
out
and
jne
or
inc
das
ret
push
mov
stos
dec
sahf
mov
pop
push
shlb
pop
pop
push
outsb
call
dec
pop
xor
sar
cmpsl
sub
aam
arpl
xchg
push
dec
mov
and
pop
or
pop
sbb
add
pop
jl
pusha
push
sbb
cld
pop
movb
cmpsl
push
push
pop
mov
gs
lcall
aaa
loope
sarb
mov
add
ss
and
push
insb
pop
cltd
fldt
inc
sbb
add
dec
or
lods
xor
outsb
jb
mov
jp
xlat
into
in
pop
shl
inc
mov
rorb
fiaddl
cmpsl
pop
insl
ds
out
add
idivl
out
jle
mov
mov
ret
jmp
pop
and
imul
aam
arpl
pop
sbb
mov
pop
mov
into
bound
roll
xor
in
ja
fisttpl
jns
pop
pop
mov
xchg
pop
mov
mov
cmpsb
loopne
jge
sub
fcompl
xor
xor
fisubrl
xchg
cmp
and
pop
add
add
mov
shl
inc
fisubl
in
cmp
pusha
pop
insl
je
mov
pop
stc
loop
fisubs
cmp
pop
cmovo
filds
ss
stos
call
lods
pop
pop
mov
jp
aam
fwait
test
or
mov
pop
push
int
xchg
inc
lea
jp
scas
mov
pop
cmpsb
jo
jo
jle
xor
adc
push
mov
cmc
adc
or
scas
mov
loope
xchg
mov
ja
xchg
xor
sahf
sbb
pop
mov
xor
test
jbe
pop
je
adc
dec
pop
fnsave
sbb
pop
lods
and
xor
daa
mov
add
mov
xor
sbb
xchg
adc
jmp
pop
inc
cmpsb
jnp
aas
mov
mov
sbb
test
dec
pop
add
movl
arpl
adc
data16
cltd
mov
pop
mov
out
subb
or
jbe,pn
pop
sahf
jno
mov
in
pop
or
movsl
pop
repnz
pop
mov
ja
gs
mov
mov
pop
jg
add
or
out
push
dec
push
pop
orl
sub
imul
pop
mov
into
and
addr16
aam
pop
push
mov
jl
lds
dec
ss
mov
ret
cmp
pop
xchg
repnz
pop
pop
xchg
mov
xchg
lea
mov
mov
jbe
push
inc
ds
test
test
jno
xchg
ljmp
adcb
and
fsubs
pop
jmp
sub
mov
mov
and
rclb
sub
rclb
pop
pop
in
mov
pop
stos
push
lret
xlat
stos
aaa
lahf
push
lret
sti
pop
popf
icebp
sbb
lahf
mov
sub
loop
dec
pop
xor
ss
sbb
pop
xlat
imul
pop
sbb
scas
test
or
int
cmp
imul
pop
sub
iret
jno
xchg
pop
aaa
lods
mov
out
mov
dec
scas
push
dec
cwtl
dec
insb
icebp
cmp
in
fcompl
psrlw
rcrl
xor
push
push
fstpl
and
mov
pop
push
mov
push
and
push
pop
xchg
cmp
and
ljmp
fincstp
ffree
shr
add
loopne
out
jecxz
sbb
pop
sbb
inc
ljmp
imul
and
mov
mov
sar
pop
pop
jp
pop
xorl
pop
sbb
jae
inc
iret
scas
cmpsl
fbstp
sbb
mov
ds
cmp
mov
mov
dec
jge
sbb
pusha
pop
push
mov
pop
pop
in
add
icebp
cmpsb
jno
push
stos
clc
pop
sub
popf
pop
ret
mov
mov
test
mov
mov
mov
jnp
rcll
imul
adc
adc
jb
sahf
jl
mov
inc
mov
mov
scas
pop
mov
stc
push
iret
xchg
in
mov
outsl
xchg
andl
fadds
jno
loop
mov
mov
ljmp
inc
pop
inc
sti
test
pop
pusha
push
stos
mov
pop
movsl
in
xor
push
jmp
mov
cmp
and
jns
mov
nop
inc
mov
stc
pop
lea
add
push
dec
mov
ficompl
sbb
mov
pop
test
push
adc
in
mov
fisttpl
jle
mov
push
jl
jbe
cld
clc
and
test
inc
lea
pop
loope
pop
iret
dec
mov
mov
out
jb
fstpt
xchg
pop
adc
into
addb
rcr
in
pop
cmc
cltd
sub
addr16
jge
mov
inc
mov
data16
or
aam
les
pop
outsb
xor
jbe
lock
ret
mov
popf
mov
movsb
mov
pop
jmp
push
clc
and
cmp
xor
cli
xchg
mov
and
fs
sar
cmp
pop
jecxz
jge
xor
jle
pop
int
cmp
dec
out
pop
dec
bound
inc
rolb
jnp
rcrl
mov
adc
fmuls
cmp
scas
mov
cmp
pop
into
dec
aaa
dec
out
mov
adc
call
idivb
mov
and
mov
pop
xchg
fidivl
push
sub
scas
push
das
jnp
xchg
or
pop
jb
and
xchg
test
fwait
mov
fidivl
fmulp
lods
filds
cmp
adc
lahf
out
in
or
je
pusha
fcmovnbe
or
lahf
mov
leave
pop
test
push
xchg
aam
in
jl
xchg
adc
dec
sub
mov
mov
icebp
jae
in
mov
mov
dec
inc
mov
sub
nop
adc
stos
lret
or
mov
insl
not
push
pop
gs
inc
xor
push
lahf
int3
sbb
cmp
out
dec
pop
jo
xor
mov
or
add
add
rorl
pop
pushf
dec
shlb
loope
pop
arpl
into
scas
repnz
lret
pop
cli
leave
sbb
xor
test
inc
rcrl
bnd
std
mov
in
push
mov
or
popf
pop
push
aaa
dec
loopne
lea
lret
cmc
int3
arpl
lds
and
sahf
inc
outsl
icebp
add
push
lcall
add
aaa
int3
cmp
int
cli
fs
ret
popa
lds
pop
loope
mov
jns
pop
ds
pusha
rcl
cwtl
mov
stc
sbb
scas
add
in
andb
int
cli
pop
cli
scas
and
jbe
sub
xor
jne
mov
adc
clc
inc
sbb
out
pop
test
mov
hlt
sbb
jecxz
cmpsb
fstpl
xor
xchg
cld
pop
test
jle
out
sub
dec
call
mov
imul
or
stc
push
and
pop
push
and
mov
jb
pushf
es
pop
dec
pop
mov
xor
sub
scas
mov
mov
inc
iret
cltd
gs
sub
cmovne
inc
xor
insb
add
aas
fiaddl
ss
mov
pop
sub
aad
mov
popf
fistpl
push
pop
jecxz
pop
outsl
nop
sub
and
mov
mov
push
sbb
pop
iret
shlb
inc
mov
xchg
stos
gs
xor
cmp
or
push
pusha
test
fucom
mov
xor
das
and
sbb
pop
into
out
ljmp
pop
xchg
mov
inc
pop
pop
xor
test
and
adc
repnz
bound
cmovnp
push
sbb
and
sub
pop
jmp
adc
sti
dec
loop
ja
adc
add
pop
pop
sbb
ljmp
leave
inc
inc
scas
jge
fisttpl
fdivrs
pop
or
pop
inc
jo
mov
pop
pop
push
adc
test
lret
popa
out
inc
lea
pushf
pop
cmp
aam
lahf
notb
push
xchg
mov
ret
fidivl
xchg
daa
in
mov
jp
add
mov
popf
push
pop
inc
mov
mov
jno
cmp
loopne
sub
nop
jns
add
pop
shr
jnp
inc
mov
mov
push
or
pop
push
test
jne
pushf
add
lret
xchg
sbb
out
pop
scas
lods
push
stc
mov
sub
add
jae
cltd
pop
sub
mov
dec
arpl
clc
popf
add
sbb
and
pop
xlat
push
sub
add
fmuls
pop
out
js
dec
xchg
ret
negl
lock
mov
aad
aaa
push
fdivp
fldt
cmp
mov
push
jne
mov
mov
das
xor
adc
and
jp
jge
pop
pop
fstpt
pop
in
fnstenv
mov
jecxz
sub
outsb
xchg
nop
push
sbb
sub
xor
adc
push
pop
scas
xor
pop
daa
pop
and
push
pop
xor
lret
pop
jmp
dec
loope
pop
xchg
fcomps
adc
fnstenv
fs
lods
bound
and
je
mov
xchg
pop
jp
inc
push
adc
rcll
fisttpl
pop
lds
xor
test
mov
or
xchg
bnd
mov
iret
fildl
cmp
xlat
lahf
std
pop
cltd
adc
subb
pop
lds
xor
adc
mov
ret
mov
ds
aaa
je
sbb
push
inc
jecxz
pcmpeqd
cmc
pop
fwait
and
pop
lods
mov
mov
add
lea
mov
ficompl
add
pop
movsl
fcomi
sbb
push
pop
jge
cmp
dec
decl
lods
pop
divl
xchg
add
out
mov
out
pushf
hlt
jl
xorb
insl
adc
loop
mov
stos
es
lods
imulb
push
pop
push
sbbb
mov
leave
fsubl
data16
imul
rcr
fdiv
ja
mov
fs
icebp
xlat
faddl
insb
cmp
sub
cmp
call
je
pop
or
pushw
mov
negl
mov
and
pop
mov
pop
mov
mov
lock
push
jb
jne
pop
js
mov
pop
mov
push
pop
pop
jmp
insl
xor
aas
loope
daa
aam
adc
adc
xor
pop
lahf
mov
mov
add
sbb
mov
jae
adc
jmp
inc
sub
mov
xchg
clc
or
pop
sbb
xchg
jae
jno
mov
mov
fistps
jbe
imul
ja
aad
pop
pop
repnz
cmp
or
decb
adc
push
sbb
xchg
arpl
dec
adc
xchg
fidivrl
fcmovb
repz
sbb
jp
pop
cli
push
pop
test
lock
imul
or
rorl
xor
pop
push
imul
test
scas
jno
mov
pusha
dec
pop
iret
fiaddl
pop
imul
mov
mov
add
mov
repnz
xchg
mov
mov
lahf
mov
pop
cmp
pop
testb
les
test
and
out
pop
std
ds
inc
xchg
rclb
mov
mov
jns
sti
sahf
push
imul
pop
sbbb
or
lret
jge
pushl
pusha
out
test
pop
cmpsb
xchg
cs
pop
scas
xor
pushf
pop
negb
ljmp
fisubl
mov
shlb
psubb
mov
xchg
out
pop
jae
cmp
mov
fisubl
in
ja
jo
pop
sub
sbb
es
mov
sub
fsubrp
mov
dec
rcl
popf
js
lock
pop
pop
or
scas
pop
cs
cmp
pop
mov
out
add
mov
js
cmp
pop
sbb
loopne
movsl
int
or
in
add
addr16
jo
pop
lock
xchg
cmp
cld
addb
adc
pop
mov
add
jmp
lcall
jmp
lahf
jp
push
pop
leave
adc
push
xorb
pop
jns
adc
mov
sbb
daa
scas
sbbl
imul
test
mov
fcom
mov
push
pop
sub
fidivrl
jg
dec
out
lock
add
gs
jnp
iret
js
jge
sahf
sbb
mov
or
push
inc
outsb
or
push
fstpt
xchg
jecxz
sub
adc
pop
ljmp
sbb
jecxz
stos
push
fcoml
leave
pop
mov
aad
negb
mov
jmp
pop
popa
or
xor
cmpsl
test
jb
mov
jae
push
push
adc
xchg
aas
lea
mov
pop
out
sahf
mov
xor
sarl
and
and
in
pop
push
les
stc
rcll
cmp
adc
pop
jge
xor
sahf
mov
aaa
int
cltd
sub
mov
std
sbb
pusha
xchg
lahf
movsb
cmp
inc
fstpl
cmp
je
inc
mov
pop
cld
bt
add
xor
out
adc
sbb
and
ficoml
xchg
xlat
push
pop
fcomip
adc
fwait
dec
sub
xor
pop
mov
jbe
pop
mov
fimull
insl
cmp
pop
push
in
pushf
add
pop
and
es
pop
dec
lods
hlt
leave
mov
and
sub
push
clc
pop
insl
sarl
mov
inc
pop
mov
int3
sahf
mov
xor
shrl
mov
mov
mov
sub
cs
repz
mov
xchg
xor
xchg
call
push
push
cmp
scas
cli
lods
mov
cmp
cltd
cmp
in
mov
push
cwtl
sub
nop
pop
icebp
mov
outsb
lods
push
pop
and
pushf
outsb
pop
jge
ficoml
cmp
lcall
lahf
stos
and
xchg
or
xor
out
and
shll
pop
iret
add
cmp
pop
dec
leave
cs
mov
mov
insb
popa
bound
fs
mov
fimull
fucomp
movsb
lahf
xor
shr
cltd
out
mov
mov
loope
adc
cmp
int3
inc
jecxz
lcall
fimuls
xchg
mov
js
bound
fisttpll
pop
cli
and
or
pop
xchg
pop
adc
imul
jecxz
pop
pushf
xchg
dec
xlat
mov
pop
mov
mov
sub
sbb
cmovs
mov
popf
mov
and
outsb
hlt
jecxz
cwtl
xor
scas
jbe
mov
int
cltd
add
testb
pop
jp
cmp
push
das
add
int3
fnstsw
pop
sub
scas
pop
ja
pop
xchg
mov
cmpsl
leave
jno
mov
test
rcrl
repnz
jg
cmp
scas
inc
cld
mov
jns
sbb
movsl
jnp
or
das
dec
adc
cmpsb
pop
jle
sarl
or
inc
inc
call
mov
push
mov
xor
arpl
pop
pop
jecxz
mov
sbb
loope
icebp
inc
jnp
adc
mov
mov
push
jmp
sub
xchg
ret
jns
mov
mov
into
xchg
js
out
loope
lahf
dec
mov
dec
fldt
and
mov
cmp
scas
rcrb
cmp
mov
pushf
pop
xchg
sub
xchg
out
dec
das
outsb
pop
iret
test
pop
rcrb
cli
add
sbb
cs
sahf
aad
xor
adc
gs
dec
out
rcrb
xor
jg
xchg
arpl
sbb
scas
jno
push
pop
xlat
fnstenv
enter
pop
or
jne
aaa
cld
lret
pop
cs
and
mov
sub
sbb
lahf
push
mov
imul
pop
or
mov
lahf
push
shll
sbb
inc
cltd
push
arpl
and
enter
shl
push
cmp
fistpll
int3
mov
inc
jmp
push
daa
stos
add
pop
xchg
mov
mov
jbe
out
dec
sbb
inc
dec
das
out
pop
cli
xor
cmp
scas
sbb
pop
jmp
dec
insb
push
cmp
xchg
and
repz
dec
push
lcall
xchg
jb
test
mov
mov
xchg
pop
cmpsl
call
mov
sbb
or
pop
loope
lahf
in
mov
push
push
push
mov
mov
jnp
dec
pop
mov
inc
jg
jle
dec
push
lret
push
cmp
xchg
sbb
hlt
cltd
test
movsl
jle
jne
mov
sbb
gs
adc
pushf
inc
fcoms
lret
and
push
mov
jmp
pop
lret
xchg
movsb
lcall
jnp
mov
or
mov
test
insl
or
mov
pop
ss
push
mov
sbb
mov
dec
iret
dec
pop
and
into
jo
cmp
cmc
stos
sbb
sti
in
shrb
xorb
loope
repz
jne
popf
xor
sub
in
and
mov
xor
jg
scas
cmc
add
fadds
lds
mov
ds
and
ret
jle
fimuls
out
lahf
pop
add
push
push
ret
pop
test
add
pop
adc
dec
shl
nop
scas
lock
cli
sahf
xchg
clc
aaa
addr16
test
jno
mov
and
push
scas
pop
jne
mov
jecxz
push
loope
into
dec
add
js
pop
sub
aam
push
fnstsw
mov
loop
and
in
imul
xchg
cli
jmp
sub
int
push
pop
icebp
adc
in
pop
mov
rorl
pop
ret
inc
scas
dec
cmp
mov
test
lahf
push
sti
or
pop
sbb
mov
add
cmpsl
cmc
inc
mov
lahf
cmp
fsubrs
int3
adc
es
push
mov
adc
nop
fisttpl
ret
test
scas
hlt
mov
xchg
das
and
push
xor
xor
cli
int
iret
pop
sub
pop
les
cltd
mov
pop
pop
sub
and
mov
pop
popa
cwtl
pop
adc
xor
sub
rcll
gs
sbb
lahf
dec
icebp
xor
cmp
bound
mov
nop
aas
in
outsb
jg
popa
pop
test
mov
sbb
sar
pop
xchg
movsb
stos
test
repnz
xchg
mov
inc
pop
leave
xor
push
xlat
mov
pop
nop
sbb
pop
sub
hlt
outsb
subl
mov
icebp
push
pop
fidivrl
mov
adc
inc
das
sbb
cwtl
pop
xchg
std
inc
lcall
pop
adc
rcll
lea
mov
jb
cs
jg
xor
sub
leave
push
and
out
lock
or
in
data16
mov
movsl
pop
fsubl
pop
movsb
mov
sbb
clc
les
popf
dec
add
xchg
cmp
je
pushf
inc
jb
mov
fisubl
sbb
ja
push
fwait
jo
cmp
pop
pop
lea
mov
push
daa
ss
fwait
lahf
xor
inc
add
test
int3
inc
xchg
mov
xchg
push
movsl
lret
sbbl
sti
lods
jle
push
mov
inc
push
add
mov
jle
cld
fmuls
pop
cmp
sub
scas
cmp
cmp
lret
pop
xchg
popf
mov
mov
sbb
hlt
mov
fstpt
ficompl
mov
lds
pop
loopne
mov
xor
jge
xor
jle
dec
sub
xor
cmp
dec
lcall
out
cld
sub
loope
test
fists
cmp
imul
xor
fs
cmp
and
xchg
dec
pop
add
cmpsb
xor
cmp
repz
pop
ds
outsl
popf
pusha
mov
mov
inc
wrmsr
pop
xchg
and
sub
mov
or
int3
adc
jp
in
push
sbb
mov
or
mov
pop
aad
dec
lds
cwtl
pop
push
sbb
inc
repnz
je
cmp
mov
sti
flds
jecxz
int3
scas
pop
push
outsb
dec
test
sub
stos
xor
mov
jge
call
loop
mov
add
sbb
mov
mov
push
inc
xor
cmc
fwait
dec
dec
mov
outsl
jnp
scas
push
gs
mov
xor
addr16
sbb
xor
jle
mov
and
pop
pop
dec
lret
pop
cmp
add
pop
mov
in
or
pop
add
mov
inc
pop
adc
jle
dec
or
pop
mov
iret
sub
xlat
pop
jge
dec
lahf
idivl
das
mov
add
daa
insl
xchg
js
pop
pop
jbe
fucom
xor
xor
jns
pop
cmp
mov
pop
push
mov
sub
jno
stos
adc
jl
pop
mov
mov
dec
dec
gs
push
xor
pop
push
mov
mov
xchg
js
bound
or
das
aam
mov
test
repz
mov
jle
in
movsl
pop
and
jne
out
rcrb
sahf
dec
lock
add
fldl
mov
push
inc
repz
js
dec
scas
sar
push
loopne
push
pop
cmp
iret
lds
inc
mov
out
repnz
icebp
lds
ret
push
repz
fcmovnu
test
popf
aad
es
mov
dec
inc
pop
mov
cltd
or
outsb
xchg
mov
test
js
insb
mov
fcomps
mov
mov
aam
jnp
cmp
lods
mov
jns
lods
out
pop
mov
popf
std
loope
pop
arpl
pushf
jae
pop
fsubrs
clc
adc
mov
dec
pushf
fisubl
adcb
cmpsl
pop
push
pop
pop
cld
imul
fnsave
ja
stos
out
cmp
adc
test
cmp
or
mov
mov
pop
add
mov
int
or
mov
sub
pop
decl
int3
aaa
movsb
pop
lret
arpl
mov
add
pop
jb
add
rcrb
or
jecxz
sub
sub
call
stos
jae
xchg
jo
pop
sahf
aaa
mov
dec
aad
andb
jno
mov
and
or
int
fwait
mov
pop
pop
pop
push
adc
push
int
jmp
jmp
pop
ljmp
and
push
adc
sub
sbb
cld
fwait
test
pop
xchg
jmp
das
cmp
out
dec
pusha
shl
xchg
pop
imul
pop
imul
xor
or
lods
movd
int
in
test
scas
dec
out
enter
push
leave
jl
xchg
fcoml
pop
aad
lahf
push
scas
je
push
mov
sbb
cmp
pop
vpinsrw
hlt
mov
mov
dec
adc
pop
cmpb
mov
pop
xchg
std
or
repnz
outsb
mov
mov
ret
mov
cltd
imul
and
jae
pop
fcoml
ret
and
jno
xchg
dec
in
mov
mov
in
gs
pop
cmpsb
mov
pop
into
cltd
jo
pop
inc
imul
repz
mov
insb
pop
cmp
pop
xor
jp
test
lret
dec
pop
adc
xor
sbb
jmp
movsl
inc
mov
pop
sahf
pop
xchg
aaa
mov
inc
pop
in
cs
out
mov
jb
scas
leave
sbb
push
clc
popa
jns
pop
fldenv
movsb
stc
pop
jnp
cltd
sbb
loopne
mov
sbb
dec
push
stc
movsl
fdivrl
test
xor
shrb
pop
jl
and
push
bound
jns
xchg
fisttpll
xor
sbb
sbb
das
pop
leave
fisubl
mov
add
xor
loop
xchg
cli
shrb
repnz
xchg
jns
and
or
push
loope
mov
mov
fiaddl
pop
out
xchg
test
lahf
es
add
or
pop
dec
jne
mov
xor
lcall
mov
inc
fsubs
out
cmpb
sbb
cmp
out
pop
cmpsl
pop
ficompl
push
shrb
fistps
inc
xor
pop
pop
outsb
iret
ja
jmp
mov
insb
xchg
popa
pop
fsubs
jge
and
pop
pushf
inc
jle
cmp
sbb
repnz
xchg
or
sbb
mov
pop
imul
xchg
lods
dec
fdivs
pop
mov
mov
ror
mov
ret
outsl
mov
divl
cmp
and
mov
ljmp
sahf
jbe
int3
fldt
jge
push
jo
rorb
pop
out
aas
in
das
cmp
sarl
sbb
adc
int
pop
repz
or
jb
es
adc
xchg
pop
imul
add
test
notl
pop
js
pop
fwait
pop
movsb
adc
mov
push
scas
jle
sub
mov
xlat
out
xor
in
mov
adc
mov
pop
cltd
mov
inc
mov
xlat
cmpsb
mull
pop
scas
mov
jae
imul
sub
jecxz
jne
cmp
ret
cmp
divl
add
ret
fwait
dec
dec
xlat
jns
arpl
push
enter
xchg
pop
push
lret
mov
rcrl
dec
outsb
je
addl
sbb
dec
sbb
push
pop
push
and
cmpb
sbb
sti
pop
jns
test
jbe
mov
pop
mov
daa
fs
lcall
cmpsb
rcrb
stos
xor
imul
add
or
mov
das
nop
mov
scas
jne
pop
push
inc
data16
lods
jecxz
and
jge
aad
shl
pop
cmp
sbb
jle
pop
test
sub
shrl
cli
inc
jb
fwait
xchg
pop
jns
imul
jne
lock
pusha
fdivrs
stos
scas
push
pop
push
mov
pop
popf
push
dec
movsb
push
andps
sbbl
cli
fwait
cmp
pop
das
adc
dec
push
xchg
mov
in
sub
pop
mov
mov
lea
es
pop
mov
mov
pop
jbe
pop
add
push
mov
cmpb
das
mov
pop
mov
js
pop
mov
daa
jg
push
adc
int
test
inc
stos
cmp
pushf
pop
push
adc
insb
fidivrl
jnp
sbb
cwtl
lock
mov
dec
pop
cmpsb
daa
xor
fwait
pop
lcall
shll
hlt
push
shlb
mov
and
lods
pop
icebp
add
push
add
pop
mov
sub
das
sbb
pop
mov
cmp
pop
es
ljmp
mov
shlb
inc
fldl
pop
movsb
aad
inc
jno
int3
pop
cltd
mov
jecxz
push
sbb
mov
daa
pop
cld
pop
mov
pop
pop
stos
std
sbb
fmulp
shlb
lods
jne
call
mov
push
pop
pop
push
mov
jo
or
mov
push
rorb
pop
pop
pop
sbb
fistl
add
aaa
xchg
push
out
test
ja
pop
popa
dec
xchg
dec
test
int3
pop
in
mov
pop
push
fsubs
cmpsb
mov
stos
int
dec
jmp
addr16
scas
jbe
jnp
cmp
add
js
mov
and
jle
outsb
pop
or
fistl
mov
mov
or
fidivs
dec
push
mov
add
jno
cmp
out
pop
mov
into
aas
daa
push
int
pop
std
jb
insb
ret
xor
leave
pushf
pop
xchg
jbe
push
push
sbb
adc
dec
push
insl
pop
in
jmp
popa
ret
pop
lods
mov
idivb
sbb
mov
dec
and
xor
ret
adc
pop
mov
shll
xchg
xor
inc
fcompl
mov
ss
or
jg
jns
rolb
repnz
cli
mov
add
push
pop
aas
aaa
sbb
pop
sub
scas
add
lods
mov
js
pop
or
push
clc
adc
out
or
sub
xchg
cmp
pushf
daa
mov
sub
cwtl
jle
inc
movsb
ja
std
ljmp
pop
xchg
movsl
data16
scas
and
popf
pop
lcall
je
andl
push
pop
pop
xchg
mov
mov
xchg
mov
mov
pop
stos
addb
inc
jno
pop
mov
adcl
ja
shrl
or
pop
push
xor
add
add
xor
loopne
adc
call
jae
jae
aaa
xor
and
fidivrs
pushf
pop
test
sbb
xor
or
mov
sbb
lock
sahf
shll
clc
or
mov
xchg
mov
push
insb
test
sahf
jle
add
jp
pop
cld
insl
cmp
adc
sub
dec
and
pop
xchg
aam
mov
jge
test
outsl
mov
mov
sbb
mov
xchg
mov
and
and
jecxz
popl
in
mov
mov
push
inc
sub
sub
pop
lods
mov
jle
or
pushf
cmpsl
das
xchg
ret
pop
push
cmpsb
outsl
sahf
mov
inc
mov
mov
dec
dec
push
sbb
push
call
mov
popf
push
js
sti
push
mov
pop
scas
scas
ds
sbb
cmpsb
sbb
lret
pop
xlat
mov
mov
push
ds
xchg
imul
setns
adc
add
mov
out
mov
pop
mov
rcrl
pop
popa
push
repnz
int
pop
fisubl
fidivrs
inc
fmuls
aas
xchg
pop
insb
pop
roll
mov
in
push
dec
hlt
loope
sub
jb
in
fwait
push
pop
ja
insl
xor
push
jecxz
stos
repz
clc
jno
mov
test
lods
pop
adc
cmpsb
mov
scas
xchg
push
test
mov
outsb
repz
out
sub
inc
xchg
pop
lock
sub
mov
pop
clc
pop
xlat
mov
sarb
out
push
ja
adc
in
cmpsb
mov
lret
cmp
aam
sub
fsubr
pop
loope
insb
and
xchg
pop
adc
addr16
push
xorb
push
fcomp
push
popa
arpl
jbe
lods
in
dec
ljmp
pop
mov
loop
negb
lds
lea
out
scas
fadds
add
dec
and
mov
and
jnp
inc
ljmp
jno
inc
cmpsb
jne
pop
jecxz
push
sub
pop
mov
repnz
pop
test
cmp
enter
arpl
out
mov
mov
jl
xor
js
lods
sbb
lret
rcll
or
pop
sub
sbb
outsb
insl
dec
lods
mov
xor
das
dec
into
hlt
adc
add
cltd
mov
jo
into
scas
xchg
ja
mov
xchg
push
mov
fwait
push
cmp
mov
jp
mov
out
mov
arpl
sbb
lahf
icebp
lods
into
and
xchg
repz
mov
mov
std
test
mov
or
push
jno
sahf
js
xchg
fwait
cmpb
lcall
pop
cld
jnp
inc
pop
mov
sub
call
or
es
das
jae
test
rcrb
stos
popa
xchg
out
or
call
gs
jbe
push
movsb
dec
adc
ds
nop
cmp
es
lock
mov
and
pop
sbb
jb
cmpsl
ficoml
into
repz
ja
pop
insl
stos
push
or
out
movsl
stos
data16
jmp
ret
popf
cltd
stc
cli
cmp
mov
andl
aad
dec
clc
cmp
dec
test
mov
adc
pop
mov
int
inc
fsubs
lcall
lock
fldenv
pop
scas
andb
xor
pop
leave
push
icebp
sti
lret
jb
hlt
cmp
jbe
pop
sti
movb
lahf
movsl
mov
and
xchg
adc
mov
push
ficoml
popa
je
enter
pop
or
sbb
fstps
pop
sbb
sub
pop
test
mov
scas
adc
shrl
and
test
cs
sbb
add
mov
lret
out
ljmp
in
insb
and
iret
pop
ficoml
jo
aaa
pop
sti
cmpsb
jg
ret
aad
sbb
xchg
push
mov
xor
lea
ss
pop
filds
add
mov
pop
cmpsl
cmp
movsb
lock
ds
mov
pop
fucomp
jecxz
lods
adc
mov
add
stc
rcrb
pop
fcoml
pop
add
cli
dec
sub
add
sbb
outsb
std
pop
loop
scas
lock
cltd
test
jae
cs
fwait
mov
mov
mov
pop
inc
mov
pop
mov
cltd
sbbl
add
mov
sbb
pop
pushf
popa
mov
jo
xor
pop
stc
cmpsb
xchg
pop
enter
cmp
enter
stc
sahf
cbtw
popl
call
dec
fs
jecxz
negl
imul
out
insb
std
or
fisttps
mov
cmp
xchg
inc
enter
lds
mov
mov
xchg
cmp
pop
out
dec
adc
ffree
mov
jle
pop
sub
jnp
pop
pop
popl
gs
or
pop
pop
lods
adc
lcall
addr16
divb
subl
pop
adcb
xor
mov
pop
add
gs
sub
mov
and
add
and
and
sub
arpl
sub
inc
lods
push
mov
ficompl
xchg
pop
in
fdivs
loope
pop
jb
cmp
sub
inc
xchg
mov
inc
outsl
sbb
sub
rorb
movsl
pop
into
push
enter
out
cmpl
jp
vmread
pop
push
loope
and
ja
lds
pop
ret
test
lret
daa
pop
jmp
sbb
shlb
cmc
roll
xchg
add
hlt
jmp
dec
mov
mov
imul
jmp
arpl
scas
subl
int
or
cmp
movsl
sub
push
pushf
pop
dec
adc
fstps
addr16
sti
ficoms
push
pop
add
pop
add
pop
adc
xchg
iret
lret
dec
icebp
popa
pop
jp
test
mov
and
jae
mov
push
aad
add
lret
pop
mov
ds
inc
dec
out
pop
adc
je
icebp
cld
shrl
pop
rolb
pop
outsl
mov
test
pop
loop
lahf
mov
and
pop
xchg
lock
mov
xorl
lods
push
lahf
mov
cmp
jb
fs
inc
ja
jmp
dec
gs
adc
pop
xor
mov
push
gs
xor
pop
stc
cmpb
mov
adc
lret
lahf
cmp
mov
lea
xor
test
outsl
dec
sub
pop
in
jno
shlb
pusha
cmp
mov
add
cmp
cmpsl
and
daa
pop
stos
or
xor
sub
movsb
push
pop
xor
jge
pop
imul
push
lret
push
pop
into
ret
rcrb
arpl
push
lods
adc
imul
xor
adc
test
mov
pop
ret
pop
add
ret
xchg
jbe
movb
popa
mov
ljmp
pop
cmp
movsb
xor
pop
sbb
xchg
fistpl
pop
fwait
inc
out
in
pop
ret
sbb
in
pop
inc
pusha
add
cmp
clc
cli
fildll
pop
push
jle
pop
leave
ret
pop
fadds
or
mov
paddd
sbb
mov
dec
js
int
fisttps
push
push
mov
jb
pop
repz
call
jge
fildl
pop
shrl
insb
pop
mov
xchg
cmp
xor
sub
lret
push
dec
and
xchg
enter
cli
xlat
pop
add
jg
jp
scas
arpl
jo
xchg
push
call
sub
lahf
pop
push
shl
test
out
js
sub
push
lea
shrl
jecxz
in
ficoms
popf
push
clc
repnz
fidivrl
sub
dec
dec
sub
mov
add
mov
mov
adc
pop
aaa
cwtl
push
pop
repz
push
es
sbbb
sbb
and
ljmp
loop
ds
pop
fildl
fdivrl
test
cmp
lret
scas
cld
xor
mov
mov
clc
push
test
mov
pop
loop
mov
cli
jle
jg
adc
in
or
pop
dec
in
mov
mov
pop
mov
adc
sub
jge
or
rcll
push
jnp
inc
inc
jne
fcmovnu
jmp
push
sub
sbb
pop
xchg
pop
xchg
pop
inc
aad
adc
mov
sbb
aam
jns
inc
lret
mov
mov
xor
je
sbb
cli
and
xchg
into
or
mov
iret
push
pop
xchg
mov
inc
lods
aas
cwtl
dec
pop
jecxz,pt
and
pop
je
sbb
pop
out
xchg
fcoml
aaa
and
pop
push
div
rclb
sub
aad
xchg
das
dec
jbe
mov
clc
jle
scas
mov
pop
push
clc
xorl
pop
xor
pop
movsl
stos
xlat
shll
xorb
shlb
push
inc
pop
jno
in
mov
pop
repz
test
pop
lcall
xlat
pop
mov
jbe
out
pop
push
fistpll
test
push
pop
test
xor
cmp
dec
aam
and
jp
cs
inc
mov
pop
dec
test
lret
sub
mov
repnz
jne
inc
mov
addr16
nop
inc
xchg
outsl
inc
and
es
cltd
stos
pushf
push
daa
cmp
dec
fcomps
lret
hlt
jge
loop
pop
adc
fstl
pop
daa
data16
inc
arpl
sbb
mov
fs
adc
mov
dec
mov
mov
xor
inc
pop
xchg
lret
mov
loopne
push
testl
dec
mov
movsb
dec
pop
pop
ficomps
shrb
mov
jecxz
cwtl
and
mov
scas
movsl
lcall
rcrb
push
push
jns
cs
mov
or
push
jl
sub
pop
cltd
or
push
pop
pop
shlb
enter
lea
jmp
leave
fs
adc
sbb
and
addr16
pusha
sub
dec
hlt
fcmovnbe
push
mov
mov
repz
lcall
andl
mov
outsl
sub
fcomps
cmp
loopne
add
nop
pop
movsl
sbb
out
xchg
pop
scas
or
pop
loop
dec
cmp
repz
mov
pop
lock
add
push
rcrl
mov
xor
jo
pop
sbbl
pushf
scas
mov
jo
scas
pop
cmp
sub
sahf
mov
jg
push
jle
xchg
jno
mov
call
ja
repnz
insl
orb
clc
sub
rcrl
push
lret
iret
out
cmpl
mov
push
repz
pop
pmaddwd
std
mov
mov
pop
pop
nop
fisttpl
cmp
xor
sahf
inc
popl
mov
mov
mov
inc
xlat
fistps
jb
inc
pusha
jbe
loope
out
aas
cmc
or
icebp
push
sbb
fistps
dec
shrb
lea
lock
test
or
inc
sti
pop
sub
jo
xchg
loopne
xchg
push
nop
pop
sbb
in
mov
mov
movsl
pop
or
xlat
xchg
ficoml
repz
popa
test
adc
cmp
jp
push
cwtl
mov
in
rorb
outsb
mov
loope
mov
cwtl
push
cltd
ja
movsl
push
add
mov
es
mov
ljmp
push
popf
jnp
xor
lods
int3
mov
xchg
or
setnp
and
mov
xchg
inc
mov
pop
dec
push
ljmp
scas
push
and
sbb
hlt
shrb
xor
out
jne
adc
xchg
std
mov
dec
mov
sub
addl
adcb
lods
idivb
aaa
pop
aad
lea
mov
sbb
js
nop
mov
loopne
jp
int3
inc
push
add
mov
clc
in
cmc
pop
xchg
ja
sub
cmpb
pop
sbb
aaa
out
mulb
popf
ficompl
fcmove
adc
jne
jmp
dec
or
xchg
mov
pop
dec
xlat
xchg
daa
test
push
stc
sarb
add
add
sarl
xor
fcmovnb
sub
pop
xor
bnd
roll
pop
in
divl
pop
pop
pop
mov
mov
popl
dec
mov
insb
jecxz
and
aas
cmp
in
stc
pop
lahf
xor
xlat
filds
and
mov
fldl
cmp
das
xor
aas
outsb
movsb
inc
pop
or
sub
jmp
cmp
ror
inc
xor
mov
xor
outsb
sbb
jne
fsubrs
pop
pop
cmp
push
mov
pop
xlat
and
lods
jnp
insl
pop
cmp
repz
push
movl
sub
xor
mov
pop
lods
pop
lret
mov
out
pop
gs
jns
pop
pop
push
sbb
fcomip
sti
xchg
test
jmp
cwtl
popf
mov
popf
and
mov
and
push
mov
cmp
repz
ja
out
fstpt
pop
xchg
clc
stos
std
push
xor
daa
lret
mov
fcomps
ret
frstor
sbb
cltd
mov
jle
xchg
adcb
arpl
sti
pop
and
stos
mov
mov
mov
imul
mov
inc
inc
or
mov
enter
daa
cmp
jl
sub
js
and
add
mov
dec
pop
push
pop
push
cmpsb
test
sub
mov
inc
pop
aas
mov
pop
xor
call
mov
push
scas
lahf
or
xchg
mov
pop
dec
js
pop
int3
outsl
cmp
push
repnz
out
pop
pop
mov
mov
test
inc
dec
adc
std
call
jne
dec
add
pop
pop
or
test
cmp
test
mov
dec
hlt
push
out
pop
ljmp
sbb
pop
jge
test
xor
or
or
sti
sub
xchg
mov
icebp
mov
es
jge
push
inc
mov
arpl
cltd
mov
or
xchg
pop
sub
lock
test
mov
sub
aas
pop
repz
stc
and
push
pushf
cmp
pop
dec
xchg
cmpsb
xor
mov
fstpt
iret
xor
mov
sarl
fistpll
mov
ret
push
sbb
inc
push
fists
popa
pop
ficompl
pop
or
out
rorb
jecxz
or
push
jae
pop
outsl
jle
fs
repnz
pop
lret
int3
jg
iret
testb
cmp
pop
adcb
test
sub
out
sarb
clc
lods
int
pop
insb
push
dec
insl
push
pusha
pop
lret
pop
inc
aaa
cwtl
loopne
push
jmp
mov
push
pop
sbb
lahf
mov
fistps
mov
pop
in
jo
jmp
insb
sub
push
add
js
mov
pop
push
xchg
stos
lret
add
or
sbb
adc
pop
addr16
lock
daa
cmp
pop
ds
xchg
mov
shlb
callw
pop
sub
adc
test
das
dec
pop
inc
jmp
es
mov
dec
xchg
shrl
ljmp
jnp
setp
pop
pop
lock
jne
push
dec
das
pop
mov
mov
fwait
gs
dec
and
xlat
popf
add
pop
inc
jb
loopne
dec
jle
pop
inc
mov
sbb
mov
xor
mov
loopne
sub
mov
fcmovbe
jle
dec
or
sti
mov
xor
clc
jb
movsb
sbb
das
push
jns
pop
fwait
push
cmpsl
out
dec
in
repz
loope
sbb
push
pop
sub
adc
pop
mov
or
mull
dec
mov
in
movsl
ss
sub
push
movsb
pushf
mov
inc
iret
arpl
or
call
jnp
popf
cmpsl
inc
push
popa
pop
movsl
pop
mov
scas
push
xchg
jns
push
sub
cmc
mov
adc
enter
dec
adc
daa
sbb
jecxz
cmp
and
movsb
call
pop
sti
push
jge
icebp
cli
xchg
stos
stc
mov
lahf
xor
jns
clc
bound
frstor
pop
xor
nop
mov
add
dec
cmp
into
push
or
and
add
je
test
mov
icebp
iret
outsl
pop
mov
inc
push
xchg
push
movsb
bnd
nop
dec
mov
sbb
cmc
pop
outsl
movsl
dec
lea
inc
jne
mov
push
mov
xchg
ficompl
insl
repnz
cmpsb
aaa
sub
pop
add
jl
mov
in
xor
adc
nop
loope
std
movsb
mov
add
insb
fnstenv
test
pop
int3
mov
subb
lcall
rcrl
pop
iret
xchg
je
or
out
sbb
cmp
cmp
es
cmpsl
jnp
inc
pop
sub
imul
ss
lret
outsl
xor
addr16
xor
xchg
cmp
popa
pop
nop
sbb
fsubs
or
repnz
cmp
insl
pop
mov
sub
xor
pop
lods
addb
adc
pusha
int
dec
hlt
inc
jb
pop
mov
andb
add
shlb
jecxz
outsl
repnz
sbb
popf
mov
push
mov
sub
sbb
sbbb
outsl
cli
je
jp
pop
hlt
pop
stos
in
inc
mov
enter
out
cmp
sahf
xor
sub
mov
cmc
xchg
cmp
cltd
clc
adc
jl
mov
loop
push
dec
pop
mull
pop
or
fmuls
mov
scas
divl
fnstenv
loopne
std
orb
mov
loope
jne
mov
or
pop
movsl
add
pop
jne,pt
dec
shlb
loope
imulb
push
cli
pop
or
mov
scas
adc
pop
inc
inc
sahf
fcompl
cmpsl
push
mov
lret
dec
mov
dec
push
orb
and
pop
movsl
aaa
xorb
adc
jle
sub
xchg
pop
add
pop
xor
adc
mov
cmpsb
and
sbb
xor
repz
cmp
mov
or
fcom
cltd
pop
in
mov
jp
push
push
add
sbb
adc
cmp
test
outsb
jbe
inc
lret
test
xchg
mov
sbb
and
sarl
pushf
pop
cwtl
std
jae
aad
mov
daa
or
and
es
dec
xchg
sub
cwtl
mov
dec
fists
add
xor
outsb
pop
dec
push
sbb
pusha
jmp
hlt
insl
mov
sbb
clc
gs
cld
cwtl
mov
sbb
leave
or
test
js
pop
cmp
mov
icebp
jb
out
inc
iret
sbb
adc
mov
out
xchg
and
dec
sbb
leave
arpl
aaa
inc
sub
adc
xchg
fwait
pop
xchg
add
xchg
out
mov
lds
jae
mov
aas
lods
xor
mov
jmp
inc
mov
insb
cmpsl
jp
lods
and
pop
xchg
test
sbb
xchg
loopne
mov
nop
sub
into
ds
add
out
mov
cli
lods
ffree
sbb
jl
sub
pop
pop
hlt
mov
scas
xor
in
inc
xor
adc
pop
test
imul
push
sbb
and
cwtl
fnstenv
fisubrl
inc
out
in
cld
mov
mov
mov
push
repnz
mov
pop
cwtl
jl
out
sbb
test
push
stc
or
pop
es
mov
add
add
cmpb
xor
jno
loopne
lret
lret
and
and
sbb
pop
gs
adc
std
pop
push
pop
ljmp
mov
pop
pop
testb
jb
inc
fistl
ja
orb
clc
fwait
sub
inc
imul
scas
out
sbb
and
pop
aad
pop
push
adc
lahf
inc
fcoms
scas
cmp
pushf
in
pop
fistpll
aam
pshufw
cmp
jns
inc
push
push
mov
xor
xor
add
stos
inc
movsl
sub
mov
pop
sbb
lods
mov
pop
dec
or
mov
incl
sbb
xchg
popf
outsb
mov
cwtl
test
xchg
and
mov
xchg
or
fwait
iret
pop
push
out
pop
testb
out
adc
inc
cld
arpl
jle,pn
and
movsl
cltd
aam
pop
popf
test
mov
and
xor
push
mov
add
shll
pop
lods
cld
mov
adcl
mov
mov
mov
xchg
out
je
pop
mov
xor
pop
push
loop
cli
imul
pop
pop
adc
jl
jecxz
out
lea
mov
gs
pop
push
and
sbb
jnp
xchg
push
pop
ds
xchg
xor
sbb
pop
ret
pushf
int3
sar
pop
inc
mov
lea
adc
arpl
dec
pop
pop
jle
outsl
mov
pop
pushf
fists
shlb
pop
jg
adc
jecxz
pop
mov
xchg
cmp
dec
pop
repz
mov
stos
mov
lods
out
adc
dec
icebp
mov
sti
or
popa
jle
or
lahf
dec
ljmp
movsl
cwtl
or
sahf
mov
xchg
push
xchg
sti
clc
mov
and
and
dec
jo
add
sub
pop
test
lock
je
rorb
pop
mov
roll
sti
mov
sub
shrb
ficomps
cmp
push
leave
pop
xchg
mov
or
pop
jb
in
mov
jnp
and
ljmp
push
rclb
pop
orb
dec
xchg
pop
movsl
fiadds
negl
lods
or
sbb
jno
sbb
loope
fimull
sbbb
xchg
lcall
or
pop
add
mov
in
fidivl
test
sub
lret
test
push
cmc
loope
push
lret
push
js
push
pop
dec
sub
pop
dec
sbb
push
repnz
leave
pop
or
lahf
cmc
stos
rcr
jnp
push
pop
push
insl
bound
dec
xor
leave
adc
test
jecxz
jmp
cmp
jo
mov
outsb
sub
sar
push
loopne
pop
push
xchg
inc
and
les
imul
testb
enter
cmp
jo
cli
sub
mov
fnstenv
jecxz
dec
mov
xchg
mov
lds
stos
aad
adc
inc
and
movsl
lret
and
and
mov
test
jbe
push
lds
aas
pop
and
pop
and
lcall
push
and
mov
pop
pop
xor
dec
adc
mov
shlb
and
cwtl
add
xor
in
repz
daa
mulb
fwait
int3
lods
jae
adc
dec
adc
inc
xchg
fistl
pop
pop
mov
nop
popa
xchg
arpl
pusha
cld
cltd
clc
cmp
pop
mov
mov
dec
addb
aas
dec
xor
adc
pop
mov
int3
xor
dec
popf
loop
adc
lcall
dec
inc
test
sbb
popf
lea
in
push
insb
fdivrs
add
adc
shll
or
leave
cmp
dec
ljmp
add
inc
xchg
fadd
xchg
mov
iret
adc
push
shl
pop
sbb
jg
sub
popa
das
repnz
and
jge
mov
xor
leave
push
sbb
ljmp
out
xor
mov
mov
icebp
jl
sub
jecxz
cmpb
lods
adc
pop
cmp
jmp
dec
js
or
push
and
mov
sbb
cmp
shlb
push
imul
sbbl
push
pop
fistl
pop
push
push
mov
cs
inc
js
adc
cs
mov
adc
cwtl
sbb
mov
pop
add
pop
mov
inc
inc
mov
lea
rcr
jno
sub
in
xor
jns
jb
movsb
out
push
leave
dec
fwait
inc
jle
mov
sarb
bound
xchg
sub
dec
add
addb
aad
adc
fistl
cmp
mov
xchg
xor
jnp
fnsave
xchg
cmp
sub
lret
icebp
fwait
out
inc
pop
push
loope
neg
xlat
add
out
jg
inc
and
xor
and
ret
test
sbbl
repnz
sub
or
lock
fmuls
pop
fwait
nop
stos
push
inc
jbe
jg
test
ret
leave
push
mov
sbb
cmp
lock
xor
mov
mov
and
call
pop
cmpsl
scas
xchg
pop
cmp
or
inc
pop
mov
repz
mov
into
scas
jo
ja
sbb
sbb
fldl
lea
sbb
ficompl
or
sbb
push
xchg
aas
sti
or
mov
inc
pop
jnp
icebp
mov
or
cmp
add
mov
push
adc
movsl
push
pop
xorl
sti
sahf
in
movsl
pop
sbb
test
or
mov
mov
cmp
and
pop
notb
sahf
adc
push
mov
and
xchg
cwtl
sti
pop
push
ret
xor
dec
mov
hlt
pop
repnz
mov
jne
cmc
mov
add
pop
push
ja
dec
fisubrs
push
insb
ret
data16
cmc
leave
mov
sub
or
xchg
sti
test
pop
xchg
push
inc
inc
mov
mov
mov
sub
xor
adc
cmc
inc
stos
inc
push
nopl
mov
sub
fs
js
cs
repnz
shl
add
fisttpl
cmp
sub
pop
stos
dec
pop
movsb
fstp
adc
push
fcom
mov
imul
push
dec
mov
andb
cwtl
inc
pop
dec
xor
mov
jb
and
pop
into
sub
pop
pop
jb
fists
pop
repnz
lea
aaa
scas
pop
cmc
jbe
loopne
push
or
push
mov
imul
sbb
data16
xchg
pop
mov
jmp
hlt
fadds
dec
imull
jns
cmp
cltd
into
pop
ret
pop
scas
push
inc
ja
jle
fbstp
xor
pop
pop
outsb
cmpsl
or
daa
add
imull
cs
push
out
mov
orl
es
add
cmp
and
jae
cmpsb
xor
jp
xor
repz
shll
je
push
fldcw
fisttpl
loopne
jl
mov
mov
jnp
lock
loope
lea
and
mov
adc
movsb
cmp
jnp
jb
stos
je
out
xchg
pop
fisubrs
cld
dec
pop
lock
out
mov
fidivrl
or
hlt
jge
mov
insl
cmp
fwait
lcall
movsl
cmp
sbb
cmp
adc
push
jle
push
cmp
dec
test
out
lret
and
sub
dec
inc
push
and
stc
data16
lret
push
jge
jb
jne
xlat
jmp
hlt
fidivl
inc
test
sbb
push
idivb
das
cmp
mov
add
mov
jl
adc
jnp
cld
test
lods
add
mov
xchg
in
adc
pusha
fistps
das
testl
bound
jle
das
lcall
sahf
dec
mov
cli
push
mov
cmpsl
pop
push
je
cmp
cmp
cwtl
mov
mov
fiaddl
add
jmp
cmp
sbb
and
sbb
inc
fwait
jnp
insl
mov
pusha
mov
popf
iret
cmp
mov
jmp
lahf
mov
push
fsubl
and
outsb
cli
mov
pop
push
fidivrl
push
mov
imul
aam
cmp
orb
arpl
hlt
push
xchg
lea
xchg
dec
movsb
mov
aaa
hlt
xchg
xchg
mov
push
sbb
mov
xchg
adc
and
scas
mov
cmp
loop
sub
sahf
dec
pop
ljmp
mov
fstl
xorb
pusha
xchg
and
jns
push
push
xchg
fildll
mov
mov
movsl
cmp
gs
sahf
mov
cmp
rclb
clc
out
inc
andl
aas
in
cmp
sbb
pop
fistpl
add
adc
jae
mov
xlat
push
sti
push
mov
stc
sar
pop
adc
lcall
scas
test
mov
cltd
ss
mov
fs
dec
adc
xchg
ljmp
test
xor
push
cmp
cmp
push
test
mov
rcrl
mov
sbb
mov
push
cmp
fistps
je
push
daa
cmp
or
pop
sahf
sbb
sbb
xchg
lods
push
ss
adc
pop
es
lahf
movsb
lcall
cltd
fwait
cmp
push
sub
jno
mov
mov
jle
mov
cli
mov
cmc
xchg
dec
add
cmpsb
or
fsts
mov
std
bound
negl
mov
xchg
or
xor
cltd
rcll
dec
inc
cmp
lods
dec
cmp
push
adc
test
adc
loopne
dec
test
fistpll
xorl
loope
daa
aaa
leave
enter
mov
loopne
scas
cmp
add
lahf
mov
inc
jno
scas
dec
rcrl
inc
xor
sub
rolb
int3
mov
dec
stc
sahf
ljmp
sub
ss
cmp
test
and
inc
mov
fs
in
dec
dec
fcmovnu
lea
mov
fldenv
sbb
xor
push
fcmove
andb
or
cmpsl
testb
adc
lea
mov
int3
jno
mov
jae
pop
enter
dec
add
push
sbb
inc
mov
stc
inc
lea
in
out
test
pop
push
scas
push
scas
cmp
and
sarl
mov
lds
push
add
xor
scas
or
pusha
pop
cld
icebp
jb
sbb
pushf
lret
jnp
mov
cmpsl
sub
repnz
repz
add
push
jecxz
cs
pop
jno
and
pop
pop
adc
mov
push
pop
push
cld
inc
push
cltd
pop
cmpsb
sbbb
in
cwtl
lods
mov
inc
or
pop
xchg
mov
movsl
lods
pop
add
or
stc
dec
mov
pop
jae
stos
adc
add
push
and
pop
sbb
cmpsb
sbb
push
lds
xor
pop
hlt
mov
insl
notb
jmp
scas
loope
pop
pop
jl
pusha
inc
jle
lret
pop
and
mov
lahf
or
pop
test
pop
mov
test
pop
sti
xor
xor
into
fstpt
xlat
lods
mov
push
orb
rol
sub
sbb
sbb
or
mov
sub
das
rolb
xchg
mov
push
lds
add
shll
pusha
repz
call
pop
add
inc
rcrl
and
cmp
mov
jmp
mov
mov
pop
testl
inc
pop
sahf
mov
xor
pop
inc
mov
loope
and
mov
test
pop
adc
pop
or
push
xor
stos
mov
jg
fwait
outsb
arpl
scas
and
xor
sbb
mov
leave
inc
jecxz
imul
xchg
xchg
inc
add
mov
mov
ss
push
sbb
mov
inc
je
ret
loop
jl
loope
and
fwait
jp
pop
adc
into
mov
push
mov
addr16
stos
inc
lock
mov
jecxz
xlat
dec
pop
push
stos
scas
pop
pop
les
fnstenv
push
pop
loop
xchg
and
jns
sbb
out
inc
jl
jo
jecxz
in
icebp
push
pop
rolb
test
popf
or
sub
loop
enter
aas
pop
enter
pop
add
aaa
jmp
mov
cmp
test
push
pop
loope
pop
pop
adc
xor
jge
daa
adc
pop
fstps
fisubrs
jg
lahf
mov
jnp
pop
push
push
enter
stos
jecxz
mov
in
adc
les
shrb
stc
pop
gs
aad
ds
mov
bnd
cs
pop
insb
pextrw
dec
jne
xchg
insb
mov
test
or
iret
in
loope
inc
popf
mov
push
jne
leave
or
call
sub
mov
out
jecxz
repz
pop
incb
xchg
cmp
inc
rcl
xor
lahf
stos
jnp
outsb
fistpl
ljmp
sub
pop
iret
mov
pop
push
in
push
cltd
leave
loopne
pop
das
je
sub
mov
dec
pop
scas
mov
xchg
test
in
sbb
xlat
pop
fldt
sar
cmpsb
lds
lahf
dec
inc
xor
fcomps
pop
dec
rorl
pop
das
nop
outsb
sub
mov
fistps
mov
mov
jb
fdivs
add
sti
negb
mov
aam
add
mov
pop
inc
mov
ret
fsts
in
aas
into
jnp
arpl
aaa
sub
inc
or
pop
ret
mov
stos
jg
sbb
mov
xor
mov
lahf
jle
gs
clc
xor
cltd
jmp
mov
mov
jns
stos
lret
insb
stc
pop
adc
pop
add
jae
in
sub
cmp
test
mov
cs
jecxz
sbb
lock
cwtl
xor
and
je
divb
out
sbb
sub
pop
mov
xchg
pop
aaa
sti
lret
and
pop
outsb
xor
and
std
or
mov
inc
push
int3
lods
gs
test
jle
cld
into
pop
imul
es
mov
dec
inc
cwtl
mov
out
dec
pop
lcall
jo
mov
outsb
lea
jp
flds
popa
mov
mov
dec
and
aad
lock
pop
repnz
jp
fldl
mov
icebp
mov
lds
pop
pushf
xor
sbb
jl
insb
rorl
adc
and
xchg
leave
dec
push
pop
xchg
in
pop
dec
adc
inc
jg
test
fwait
cmpsl
ret
aam
mov
sbb
ds
jne
hlt
mov
push
mov
les
int
cmc
cmp
mov
aas
pop
rorl
pop
xor
cmpsl
xor
inc
arpl
adc
mov
lahf
and
pop
lods
aaa
or
ret
mov
push
sub
jg
mov
pop
rolb
pop
mov
mov
fildl
scas
pushf
adc
into
hlt
inc
sub
ds
mov
lcall
cmp
xlat
ds
in
or
aaa
adc
xor
push
mov
cmpsl
js
mov
pop
cmpl
mov
xchg
mov
pop
cld
movsl
push
or
divl
inc
cmp
add
and
notl
inc
out
sub
or
inc
mov
dec
roll
pop
scas
cltd
out
xchg
pop
pop
pop
jle
pop
gs
fistpl
lea
and
add
arpl
mov
push
pop
xchg
popa
sub
pop
inc
jb
js
pop
lods
push
xchg
sub
mov
mov
or
mov
jecxz
mov
mov
fucomi
pop
dec
mov
ljmp
addl
mov
mov
sarl
pop
mov
and
insl
stc
and
lock
mov
pop
mov
jne
mov
adc
push
lret
pop
push
xchg
jbe
ret
push
pop
adc
xor
pop
add
dec
fisttps
push
fisubs
std
into
pop
inc
dec
ficoml
pop
pop
repz
pop
aad
pop
in
fs
pop
mov
cmp
xchg
xchg
pop
pop
sub
iret
test
sub
cld
outsl
or
fistpl
xchg
lods
sbb
inc
repz
pop
cmp
fsubs
call
pop
mov
mov
jecxz
add
fisttpl
lret
out
cli
nop
pop
mov
mov
pop
es
das
xchg
and
fstps
cmp
pop
mov
xchg
sahf
cmp
iret
fs
adc
imul
fsubrs
xchg
jg
pusha
pop
dec
sbb
and
pop
ja
addb
xchg
neg
push
mov
lret
or
jl
pop
sub
test
pop
inc
xchg
xchg
pop
dec
std
mov
fisttpl
test
pop
rcll
mull
xchg
jmp
mov
sbb
fldt
data16
pop
fidivl
inc
dec
lcall
cs
js
sbb
lahf
clc
in
mov
push
xor
sbb
ja
pop
fdivl
stc
lret
pop
mov
xlat
pushf
ret
mov
repz
pop
jge
cmpsl
outsb
je
adc
iret
lock
sbb
xchg
mov
aam
jbe
dec
pop
stc
lahf
lahf
sub
or
adc
out
stc
add
sbb
out
push
pop
jmp
clc
cmp
pop
and
loopne
xchg
int3
aas
and
out
mov
fs
or
out
pushf
out
pop
add
mov
mov
or
stos
cmpsb
pop
mov
iret
fcomps
es
push
hlt
xchg
cld
and
pop
clc
mov
push
pop
cmp
inc
inc
add
popa
pop
adc
in
xor
mov
ja
test
xchg
cwtl
adc
push
xor
xchg
dec
lea
leave
test
shrb
enter
sbb
dec
aad
daa
pop
push
inc
sub
pop
in
fwait
mov
lret
lcall
push
stc
jnp
jle
adc
sub
and
lock
sbb
xor
add
push
xchg
pop
xchg
out
mov
pop
push
sbb
xor
out
xlat
xchg
pop
or
lahf
inc
sbb
xor
ljmp
pop
mov
aas
icebp
add
xchg
clc
cmp
sbb
ficoml
and
mov
and
xor
push
xor
lret
lds
daa
outsb
sbb
jmp
and
mov
lock
push
mov
shrb
pop
icebp
cmp
inc
ss
addr16
mov
rcrb
sub
xorb
cmp
cs
repz
adc
mov
shlb
xchg
pop
call
js
lods
sbb
pop
pop
lock
mov
xor
mov
mov
les
add
fmul
xor
cli
add
add
andl
orb
data16
test
test
daa
jae
pop
push
cld
mov
xchg
cmc
je
rorb
mov
fcmovu
jbe
lahf
mov
cli
add
mov
hlt
mov
inc
cs
clc
jp
movsl
xchg
notl
sub
add
outsb
mov
pop
leave
js
mov
mov
xchg
jb
loopne
shlb
fsubs
in
mov
xlat
xchg
xchg
inc
ljmp
fs
xor
sahf
stos
sub
hlt
xor
cltd
jl
in
cmp
xchg
inc
xlat
sbb
push
push
mov
sub
pop
jo
stos
or
test
jns
sbb
lcall
ficoms
fisubl
jns
or
pop
enter
xchg
mov
and
xchg
test
in
push
or
mov
jnp
lods
divb
jno
xor
js
jge
lret
push
scas
sbb
lds
sub
push
ficompl
into
adc
leave
adc
dec
pusha
cmp
repz
cmp
inc
imul
es
ret
inc
loope
cmp
sbb
out
fnstenv
cs
push
test
fistl
sub
out
cmp
xor
inc
add
rcll
add
sbb
xor
scas
push
test
mov
into
rcll
pop
dec
xchg
pop
fwait
gs
pop
fcomps
mov
addr16
dec
call
inc
out
or
out
push
out
pop
mov
dec
add
pop
push
mov
mov
pop
sbb
outsb
mov
in
xor
xor
pop
cmp
xor
pop
mov
inc
ret
mov
add
pop
repnz
xchg
pop
cmp
loopne
test
or
pop
adc
fidivl
pusha
int3
pop
mov
fisubrs
pop
bound
leave
cmp
fiaddl
pop
mov
daa
int3
pop
jle
in
mov
ss
pop
jo
xchg
dec
mov
enter
cmp
inc
popf
loopne
pop
leave
mov
bound
pop
cld
out
pop
repnz
mov
or
xchg
js
pop
lret
inc
out
cwtl
std
mov
pop
push
aam
pop
pusha
dec
pop
orb
sbbl
mov
mov
js
mov
jg
les
push
repz
fstpl
xor
imulb
outsl
mov
mov
cs
pop
sahf
sbb
add
aas
jae
mov
jecxz
mov
mov
pop
xchg
rcl
pop
lcall
cltd
pop
mov
std
cmpsb
mov
sbb
repnz
pop
data16
arpl
dec
fnstenv
mov
pop
jmp
daa
pop
out
push
pop
pop
cld
gs
stos
pusha
rcrl
jae
pop
lods
test
pop
inc
ja
out
hlt
mov
mov
dec
push
mov
invd
pop
or
mov
dec
xor
pop
ret
and
pop
lods
sbbb
test
mov
out
leave
in
loopne
or
testb
sbb
or
lret
aas
int3
push
dec
scas
pop
filds
xchg
lahf
cmp
js
dec
jns
mov
insb
and
inc
xor
insb
sbb
or
sti
pop
pop
scas
xchg
subb
pop
xchg
jl
out
daa
and
pop
stos
arpl
hlt
pop
imulb
fildl
jo
cmc
mov
iret
stos
dec
mov
and
cli
pop
adc
lods
cs
mov
jne
insb
add
std
xchg
pop
fsubs
lret
pop
movsl
mov
jmp
sarb
add
scas
lcall
inc
push
cmp
pop
or
jle
push
in
pop
sub
dec
push
and
mov
ljmp
scas
cmp
add
cmpsl
pop
pop
and
or
dec
and
fnsave
adc
cli
mov
dec
and
mov
add
lock
test
mov
push
sti
dec
xchg
cld
xor
push
call
jle
sub
mov
cs
outsb
adc
movsb
xor
sarl
jns
pop
xorl
out
fildll
stc
loop
mov
xchg
pop
test
pop
roll
pop
inc
pop
fldt
pop
movsl
jnp
jbe
cli
push
fs
push
mov
aas
cltd
decl
pop
adc
bound
and
add
sbb
aam
pusha
push
pop
sbb
cwtl
jae
sar
cmp
mov
inc
lret
cld
cmp
sbb
mov
xor
popa
jo
fwait
mov
dec
dec
pop
inc
ljmp
pop
jg
pop
sbb
popa
pop
jle
inc
sahf
mov
call
not
arpl
rcrl
sbb
dec
enterw
jmp
add
hlt
lds
test
sbb
jle
cs
dec
pop
loopne
outsl
xor
rcrl
dec
pop
or
push
bound
sub
dec
pop
add
test
push
mov
push
adcb
xor
add
cltd
test
mov
dec
loopne
pop
xchg
jle
jmp
push
insb
pop
fdivs
and
mov
mov
stos
mov
enter
sahf
cltd
negb
iret
stc
imul
in
ss
dec
jno
sbb
imul
inc
pop
add
pop
pop
mov
dec
clc
std
xor
andb
push
mov
pop
or
int
xchg
xor
xor
sub
push
fwait
pop
inc
mov
movsb
leave
pop
xlat
push
jp
incb
pop
arpl
sbb
mov
sbb
neg
daa
pop
repnz
adc
and
mov
push
mov
and
sub
pop
jl
sbb
jno
xchg
call
fstpl
cmp
sbb
dec
jns
fcmovne
mov
stc
lcall
pop
dec
mov
cmpsl
xchg
jns
fistpll
enter
mov
xchg
push
inc
loope
stc
mov
xchg
movb
pop
sarb
mov
and
jp
pop
fimuls
ljmp
test
mov
xchg
arpl
dec
sbb
pop
cli
pop
cld
pop
outsb
dec
mov
and
push
std
pop
inc
jae
jle
sbb
test
cmovge
dec
pop
cmp
xor
xor
push
fs
cwtl
xlat
ret
mov
inc
gs
fdiv
cmp
xor
es
adc
mov
fbstp
scas
mov
ljmp
xchg
mov
bound
xlat
insb
gs
add
fstl
rcr
lahf
sti
inc
jo
fldcw
mov
notl
or
adc
mov
into
mov
repnz
ja
mov
dec
xchg
lea
mov
cli
mov
pop
jge
adc
lcall
out
lahf
lock
mov
pop
das
in
cmp
gs
xchg
add
in
pop
sub
jnp
sbb
pop
loope
push
adc
movsb
hlt
lret
jle
ret
and
nop
inc
push
adc
aam
mov
sbb
fdivr
push
pop
pop
lods
jae
xor
pop
nop
aam
ljmp
dec
daa
stos
out
push
or
ja
cmp
scas
popf
dec
sub
cmp
xchg
xorl
pop
repz
sahf
add
cmp
push
test
std
jmp
pop
testb
and
add
push
leave
iret
mov
inc
ja
shll
dec
in
pop
mov
shrb
mov
scas
or
sbb
or
inc
push
shr
arpl
pop
jmp
sti
adc
fld1
shrb
xlat
js
lds
es
imul
inc
xor
cwtl
pop
jnp
and
insb
xchg
pop
test
data16
cmp
out
jo
fimull
pop
dec
sub
inc
pop
cli
inc
loop
sub
shlb
nop
dec
or
mov
and
jns
addr16
cmp
add
lahf
push
pop
mov
pop
rcrb
addr16
sub
and
mov
rcll
xor
mov
lea
int3
ja
clc
lds
pop
jae
adc
push
test
aaa
sub
pop
scas
pop
jnp
imul
sahf
repnz
xchg
inc
leave
jo
dec
add
cmp
dec
loopne
pop
pusha
pop
imull
pop
movsb
pop
lcall
test
shll
xor
jns
or
in
inc
dec
jp
enter
push
cmp
fldcw
xor
mov
add
mov
lahf
xorl
sahf
jg
aaa
push
daa
or
cmp
jbe
lret
out
lret
or
dec
jmp
pop
pop
filds
jge
pop
repnz
aam
mov
fdivrp
mov
int
imul
mov
xor
movsl
mov
enter
stc
arpl
mul
pop
pop
jns
mov
call
sbb
pop
xor
ss
jo
mov
lahf
addl
fidivl
stos
lret
gs
daa
pop
inc
cmp
jmp
mov
xchg
arpl
test
decl
add
pop
stc
pushf
xchg
sbb
aas
adc
mov
jge
cmp
stos
mov
xor
popf
sbb
dec
fdivs
scas
aad
cmp
movsb
fsubr
cmc
inc
pop
xor
pop
sub
xchg
push
loopne
rclb
cmp
in
lods
jg
xor
inc
cvtdq2ps
push
pop
movsb
xor
enter
jmp
leave
aam
dec
xor
jns
inc
push
sbbl
bound
xchg
mov
ljmp
pop
je
push
lahf
sub
xchg
jl
sahf
xor
adc
cmpsb
mov
popf
pop
call
pop
mov
pop
jp
dec
cwtl
xor
loope
scas
in
out
ret
cltd
jl
pop
pop
pusha
push
loopne
cmp
push
notb
jno
adc
inc
sub
pop
mov
push
cwtl
xchg
pop
or
and
loopne
mov
and
mov
in
xorl
pushf
jnp
lret
stc
xor
sbb
sbb
pop
cli
popf
pop
fisubs
ja
pop
aad
je
in
mov
outsl
adc
sti
pop
fidivl
or
dec
pop
mov
popa
mov
mov
ja
and
addr16
mov
adc
test
push
mov
mov
mov
bound
add
mov
fstpt
mov
pop
cltd
xor
cmp
imul
sbb
pusha
mov
aaa
push
rclb
jmp
je
xor
pop
and
mov
mov
pop
into
mull
or
cmpsb
pop
mov
dec
outsl
ja
lods
mov
adc
js
add
or
das
push
mov
hlt
addl
jecxz
cmpsl
pop
dec
out
test
sbb
mov
pop
fsubrl
add
push
mov
adc
xor
inc
mov
inc
dec
movsb
and
popa
pop
in
fsts
mov
pop
insl
mov
add
movsb
out
xor
addr16
inc
jecxz
xor
adc
js
xor
js
fldt
leave
repnz
gs
ret
cltd
xchg
pusha
out
je
pop
sub
and
pop
cmp
adc
dec
pop
fistpl
daa
movsb
xchg
inc
bound
dec
and
pop
dec
sub
xchg
call
add
loop
mov
pop
mov
fbld
pop
bound
pop
xchg
mov
push
stos
or
sbb
pop
xchg
test
push
jle
pop
scas
bnd
bound
shll
rcrb
mov
or
pop
sbbl
add
nop
or
push
mov
movsl
insl
xchg
movsb
ss
and
jb
pop
outsl
cltd
fistl
in
repz
sub
add
cwtl
sbb
mov
mov
xor
arpl
mov
xchg
nop
lea
pop
fldenv
repz
pop
fldt
xor
pop
or
es
jmp
dec
loope
sbb
jnp
mov
adc
cmpl
dec
rcrl
cmc
das
ja
add
pop
pop
cltd
xor
cli
stc
iret
and
mov
inc
pop
sub
lods
mov
pushf
mov
sub
ss
mov
rcrb
xlat
fcmovnb
popf
mov
pop
sbb
or
outsb
in
rcrl
mov
sbb
orb
sub
adc
es
andb
test
add
pop
daa
fdivr
cltd
pop
mov
je
bound
mov
ja
adc
pop
mov
dec
pop
adc
stos
add
pop
push
xor
dec
out
pop
xchg
pop
mov
outsb
cmp
scas
mov
sahf
or
sti
pushf
pop
add
insl
shlb
inc
pop
jg
fcomps
pop
orb
pop
insb
cmpsb
cmpsl
fcomps
push
pop
imull
adcb
shr
lds
stos
andl
inc
cmp
mov
pop
insl
xor
cmpsb
mov
sbb
arpl
xor
mov
xor
pop
adc
dec
ss
ds
mov
into
xlat
sbb
es
in
je
cmp
cli
sbb
pop
imulb
mov
pop
or
fsubrs
or
mov
pusha
aaa
fwait
mov
mov
fnstenv
fisubrl
mov
cwtl
lahf
sub
shlb
cltd
in
lret
pop
iret
add
mov
push
xchg
sub
dec
push
xchg
jo
pop
movsb
fwait
shrb
mov
pop
jae
dec
ljmp
jbe
addr16
adc
lcall
jl
mov
loope
adc
movsl
cltd
out
and
pop
pop
in
inc
imul
scas
mov
pop
add
or
xlat
mov
cld
rclb
mov
cwtl
xchg
imul
adcl
or
mov
std
sbb
push
pop
jbe
xchg
icebp
inc
sbb
repnz
xor
lock
cmp
inc
js
cmpsb
pop
test
pop
push
negb
movb
fwait
loopne
pop
xchg
inc
insl
int3
popa
jp
pop
pop
or
repnz
outsl
pop
xchg
mov
or
out
stc
gs
jbe
mov
pop
push
bound
adc
into
out
and
mov
out
or
jbe
out
add
jp
scas
dec
pop
mov
ja
lcall
out
pop
and
enter
stc
pop
int
mov
fdivl
in
sub
imul
sub
push
xchg
ret
mov
cmpsb
add
or
adc
pop
pop
loope
pop
test
mov
add
fcompl
adc
pop
or
idivb
sbb
test
cli
mov
jl
pop
dec
add
pop
imul
lcall
mov
mov
jae
rolb
pop
mov
iret
inc
pop
arpl
mov
and
outsb
mov
inc
xchg
xchg
pop
mov
insb
sti
loop
mov
mov
fisubl
push
mov
sub
pop
cmp
push
out
ljmp
pop
subb
arpl
cmc
add
or
pop
cli
pushf
dec
test
outsb
sub
subl
repnz
aas
mov
aaa
addr16
dec
lahf
call
jmp
push
xchg
pop
add
mov
mov
rcrb
bnd
rcrb
insl
and
push
loopne
or
pop
mov
rcrl
stc
aas
pop
iret
fidivs
xor
mov
stos
pop
jl
scas
movsb
into
ss
jmp
vxorps
negb
aam
out
push
jns
fistps
fdivl
scas
lcall
hlt
inc
pop
cld
out
pop
mov
dec
mov
loopne
pop
push
fisubrl
push
out
xchg
jg
push
mov
add
call
pop
les
es
xchg
fists
mov
pop
pop
add
or
xor
push
fimull
xor
sbb
or
mov
fcmovb
sbb
dec
pop
pop
sbb
test
cmpsb
push
inc
mov
sub
hlt
test
mov
test
mov
adc
out
lahf
push
pop
fldt
pop
xor
test
inc
dec
xlat
mov
pop
data16
or
mulb
rcrl
hlt
out
pop
fs
jne
jmp
icebp
lcall
pop
jnp
mov
iret
jmp
scas
pop
int
dec
ret
rcll
nop
mov
repz
sbb
cmpsl
jns
dec
xor
inc
or
sbbl
pop
mov
in
xor
or
pop
fs
push
sub
stos
pushf
mov
lret
stc
cli
pop
icebp
aaa
lods
ret
xor
mov
add
or
rcr
pop
mov
imull
pushf
cmpsb
orb
dec
fildll
xchg
aaa
insb
add
mov
mov
jb
in
jbe
sbbl
sub
mov
mov
in
mov
pop
cmp
faddl
cmpsb
out
mov
int
sub
xchg
in
out
popf
in
mov
mov
test
cmp
jg
xchg
cs
pushf
mov
adc
les
mov
add
xlat
pop
pop
inc
int3
enter
xchg
pop
jae
sub
pop
std
mov
jg
and
push
scas
push
pop
movsb
rcrl
xor
and
xchg
mov
fdivr
sub
mov
pop
fildl
sbb
fadd
pop
dec
mov
mov
jbe
push
xchg
loopne
pop
xor
cwtl
lds
pop
pop
add
and
xchg
insb
add
shll
push
pop
cmc
roll
ret
lods
aaa
ss
dec
cli
push
iret
repz
mov
arpl
add
cltd
pop
les
mov
scas
aas
jp
cmp
rcr
xor
mov
xor
and
and
pop
pushf
pop
mov
out
adc
scas
inc
sbb
ds
in
pop
fmuls
pop
js
add
xor
mov
xor
pop
add
sbb
pop
stos
xchg
mov
or
out
push
adc
inc
dec
mov
test
testb
xchg
mov
mov
dec
adc
pop
imul
or
mov
in
std
sbb
or
xchg
mov
flds
fldenv
hlt
sub
and
int
xchg
mov
test
ret
and
lea
and
nop
scas
jo
shl
add
stc
sarb
gs
pop
setno
mov
push
call
adc
jl
test
jbe
push
mov
cmp
mov
add
jp
aaa
mov
push
push
ficompl
lock
pop
jg
cld
subl
mov
iret
fdivl
fnstenv
or
xor
pop
das
mov
inc
ret
pop
xlat
in
and
fsubr
lret
push
ficomps
idivb
fists
lea
push
pop
sub
jl
fcoml
fcompl
jae
sub
push
imul
cltd
mov
pop
cli
les
jo
pop
push
test
fnstsw
pop
mov
lods
cmp
mov
cmp
mov
jne
icebp
xor
sub
xchg
fcoms
push
pop
in
adc
pop
mov
call
loop
mov
dec
xor
mov
push
push
add
orl
push
mov
mov
sbb
sbbb
add
scas
insb
mov
cld
lcall
lahf
pop
and
push
pop
imul
dec
jmp
and
pop
jne
lock
mov
push
scas
adc
cmp
pop
js
sbb
mov
outsb
scas
jg
cmp
inc
pop
out
gs
and
in
pop
jnp
mov
sub
inc
dec
fidivs
pop
fcomip
jnp
iret
mov
mov
mov
sbb
scas
mov
xchg
adc
clc
xor
sbb
push
fnstsw
jae
pop
pop
xor
pop
sbb
ret
mov
pop
scas
into
add
test
pop
fimull
imul
test
movsl
jnp
xor
inc
std
lcall
stos
and
ljmp
scas
outsb
jle
stos
lcall
sbb
xor
cwtl
repnz
aam
rcrl
das
imul
pmulhw
mov
call
push
test
ss
or
dec
stos
fimull
fisttpll
pop
add
sbbl
push
or
fistpll
ss
nop
and
add
sub
adc
pop
test
fcom
fwait
icebp
jmp
dec
aad
mov
jmp
loop
js
mov
fnstenv
sti
out
pop
push
cli
lods
test
pop
aad
mov
pop
inc
lods
xor
cmp
loope
pop
js
pop
rolb
lcall
bound
out
rol
imul
sbb
mov
mov
jl
pop
push
int3
adc
push
cmc
mov
pop
fsubs
cltd
outsl
xlat
pop
aas
jo
incl
push
cs
ficoml
xor
pop
subl
add
cmc
sbb
xchg
repz
push
inc
jmp
mov
or
xor
pop
mov
push
das
jnp
int
mov
ret
adc
loopne
insl
xchg
pop
fwait
cmc
loop
popf
sbb
pop
stos
dec
jecxz
push
jl
outsl
jle
pop
adc
aad
cli
add
sub
aam
inc
jno
push
out
cld
mov
clc
pop
mov
xchg
in
sti
andl
arpl
xor
pop
adc
and
rorl
pop
pop
loope
out
sbb
mov
sti
pop
xchg
dec
push
add
enter
addr16
inc
lea
pop
pop
arpl
xor
pop
fst
sti
sbb
push
pop
les
xchg
adc
push
pop
sub
loopne
cs
cmp
jp
andb
iret
movsb
push
pop
mov
stc
icebp
aas
pop
out
insl
push
xchg
hlt
pop
aam
out
and
xor
sbb
cmp
jle
je
push
jge
xchg
lret
out
jmp
pop
adc
add
pop
fistpl
sahf
mov
loop
mov
fidivrl
repz
pop
pop
push
cmp
aam
ficomps
outsb
and
push
sub
scas
jl
mov
push
pop
mov
pop
gs
addr16
mov
xchg
in
mov
repz
lods
ficoml
popa
loopne
jge
mov
mov
mov
or
pop
push
xor
mov
inc
fnstcw
aad
sbb
sub
popf
pop
sbbb
int3
aam
jmp
lahf
push
cmp
fidivl
and
jne
pushf
inc
fistps
stos
adc
xlat
and
xchg
je
sub
fmul
testb
mov
arpl
aaa
cmp
sarb
mov
repz
xchg
movsl
mov
or
pop
insl
dec
int3
sub
cmp
push
roll
and
jno
dec
pop
add
js
scas
icebp
xchg
inc
aaa
aam
and
mov
adc
rcll
and
jmp
push
hlt
add
cmp
inc
jnp
lods
ss
ret
jecxz
jmp
push
js
inc
imul
ret
mov
lds
leave
adc
pop
mov
or
pop
push
jbe
movl
pop
lret
fldcw
cli
scas
in
xor
xchg
mov
cmp
lcall
pop
sbb
ror
xchg
push
push
inc
inc
cld
xor
mov
int
xor
pop
sbb
out
popf
mov
push
push
mov
add
mov
dec
mov
fs
xchg
mov
rcrb
test
ds
nop
jnp
mov
mov
mov
insl
cmp
sbb
decb
inc
idiv
mov
fcmovbe
out
jno
fimuls
cld
js
lcall
mov
stos
dec
sbb
adc
mov
mov
sub
or
jle
mov
cmpsl
jnp
sbb
adc
mov
fs
jl
pop
jge
sub
jge
movsl
xor
pusha
xchg
ja
jmp
inc
cld
sbb
and
call
cwtl
or
rcll
sub
fcmovnb
movsl
scas
leave
mov
add
arpl
cmpsl
adc
stos
loop
sub
push
aaa
andb
mov
subl
cmp
mov
add
test
js
in
popa
imul
or
push
or
mov
add
pop
sub
adc
sar
lea
outsl
fs
imul
dec
mov
testl
cld
inc
or
notl
ret
test
adc
pop
jmp
xor
adcb
sbb
xchg
and
mov
int
fs
aaa
push
dec
sub
icebp
and
lcall
cltd
dec
mov
jmp
add
loopne
sar
xchg
shll
lret
pushf
xlat
mov
and
adc
mov
jns
cmp
sub
pop
inc
std
cltd
mov
pop
daa
rorl
xor
nop
sar
mov
lahf
testl
jl
pop
add
xchg
mov
test
sahf
pop
inc
pop
hlt
dec
pop
cwtl
mov
filds
aas
jecxz
sbb
add
enter
and
or
pop
cltd
sbb
icebp
cmpl
xchg
and
xlat
das
pop
push
add
nop
jp
jge
mov
aas
inc
imul
mov
pop
or
cmpsl
pop
fnstenv
add
pop
std
or
mov
push
sub
aam
js
negb
xchg
xchg
jnp
adc
ja
xchg
dec
pop
je
out
imulb
divl
push
dec
or
lock
mov
add
jns
cmc
scas
jle
lret
cli
cltd
jp
or
xchg
mov
jecxz
xor
mov
pop
inc
dec
ficomps
loope
add
sub
leave
or
icebp
or
mov
faddl
cmp
pushl
fdivr
cs
imul
sub
popf
pop
push
sarl
inc
insb
shrl
lock
mov
dec
mov
lods
add
ljmp
pop
loopne
xor
mov
add
xchg
mov
inc
lods
add
cmp
lret
shrb
add
pop
inc
es
pop
movl
xchg
mov
sbb
out
pop
xor
push
adc
pop
mov
jbe
push
daa
test
xchg
push
fisttpl
insb
je
mov
out
pop
aam
mov
mov
sahf
fimuls
js
pop
lret
or
cmp
test
je
push
mov
imul
aas
subb
les
jmp
mov
lahf
dec
xlat
ret
mov
mov
and
xor
pop
xchg
iret
call
int
dec
adc
dec
out
inc
decl
int3
lods
loope
mov
lea
arpl
pop
mov
aas
and
push
push
add
fcomps
iret
mov
jge
fsubl
lds
and
ret
test
aad
pop
cmpsl
xchg
xchg
rclb
push
dec
mov
mov
mov
xor
dec
pop
push
or
pop
pop
scas
sbb
fxch
adc
cmp
jne
sbb
pop
js
pop
add
mov
pusha
push
push
mov
mov
pop
cmp
xor
push
rcrb
inc
into
pop
fcomps
popa
aam
pop
outsl
out
movsl
jne
inc
pop
add
sbb
sbb
lods
mov
mov
dec
int3
and
out
push
pop
stc
add
fbstp
inc
xchg
out
xchg
movsl
pop
addr16
sbb
in
xor
fwait
fs
mov
movsl
int3
icebp
rcrb
testl
cmp
clc
push
movsl
push
lcall
cmp
aad
mov
pop
adc
mov
rclb
mov
pop
fimull
aaa
jle
sub
gs
xchg
mov
xchg
fcoml
jl
ret
cmp
cmp
aad
dec
cmp
mov
stc
mov
int
test
pop
daa
cmc
adc
and
inc
pop
pop
out
mov
or
xor
lods
out
leave
jne
stos
jbe
sbb
pop
mov
pop
cmp
addl
jae
mov
mov
fisubrs
sbb
pop
pop
pop
repnz
sbb
scas
sbbl
imul
cs
pop
std
xchg
das
cmp
and
pop
or
pop
sti
test
test
push
pop
push
jmp
xchg
and
push
jp
mov
and
adc
cmp
into
mov
jo
push
je
cmp
inc
mov
popa
pop
xor
adc
ror
loopne
jge,pn
jae
and
mov
lds
jp
lret
mov
cmp
jnp
xchg
popf
pushf
std
jg
jbe
fsubrp
dec
jo
pop
add
ss
pop
mov
sub
in
notl
aad
cmp
stc
mov
subb
push
in
pop
insb
out
cmc
pop
pop
cmp
rcrb
aad
jge
in
enter
in
iret
filds
and
insb
mov
jecxz
aad
pop
test
arpl
jo
mov
and
or
lret
icebp
mov
xor
sarl
aam
insb
fstps
xchg
sarb
add
nop
hlt
pop
xchg
push
in
mov
scas
or
pop
popa
mov
lods
lds
ljmp
and
mov
adc
fistpl
aad
xlat
out
notl
jbe
pop
cmp
int
out
int3
bound
jmp
js
out
cwtl
mov
jno
fmulp
xor
jo
xor
xchg
cmp
mov
mov
jle
rcrb
xor
std
shll
cmpsl
int3
sbb
stc
insb
mov
pop
pusha
subl
lahf
jmp
pop
repz
rcrb
add
scas
mov
icebp
stc
mov
fistps
mov
sub
xor
into
xchg
lret
gs
and
sub
nop
cmp
fidivs
test
pop
popf
mov
mov
inc
mov
mov
rclb
add
dec
sbb
mov
stos
sbb
xchg
pop
pop
in
js
add
pop
gs
push
scas
pop
inc
push
jns
leave
jle
dec
pop
pop
adc
mov
stos
sbb
xchg
push
lcall
add
addr16
ret
out
test
iret
cltd
xlat
dec
and
das
jmp
insl
push
int
pop
pop
hlt
leave
cmp
sub
mov
mov
mov
bound
lods
pop
jno
stos
sbb
and
pop
lods
jb
sbb
out
loop
push
pop
lea
jecxz
decl
pop
sub
shrb
jo
lock
mov
xchg
lea
or
out
stos
leave
mov
adc
jg
lock
fdivs
jns
inc
mov
pop
push
inc
mov
pop
test
push
scas
ret
lods
hlt
test
aad
fld
fbld
dec
lds
lea
jbe
repz
scas
push
pop
popa
enter
outsl
clc
push
push
pop
int
fs
mov
cmp
sbb
xor
pop
aad
xor
and
inc
pop
mov
mov
inc
pop
adc
inc
lods
dec
cmp
pop
cmp
mov
rcrb
popf
mov
in
daa
pop
and
nop
pusha
ret
loopne
rcrb
ljmp
ss
push
loope
lahf
sbb
aaa
sahf
and
mov
add
testl
add
jbe
cwtl
int3
cmc
lahf
pop
jnp
inc
in
jae
das
lret
pop
mov
scas
ror
scas
lock
or
mov
push
adc
mov
shrl
pop
in
xor
pop
in
stos
out
aas
jg
mov
lahf
adc
ljmp
iret
sub
jg
aad
mov
push
pop
push
xor
mov
sbb
int3
negl
pop
pop
sbb
cmpsl
pop
or
lock
test
inc
jae
std
or
push
sub
js
out
and
mov
lds
pop
sub
rcrl
lret
xchg
push
mov
pop
mov
jg
sbb
outsb
mov
movsl
pop
dec
mov
subb
les
cli
addr16
push
xchg
cmp
adc
nop
dec
cmc
xchg
pop
out
cli
lds
pop
or
inc
sbb
mov
pop
xchg
test
lret
mov
mov
imul
or
pop
loope
push
movsb
mov
enter
xchg
mov
js
test
dec
test
pop
pop
lock
pop
adc
inc
and
mov
scas
movsl
pop
pop
outsl
pop
imul
mov
pop
push
push
sbb
xchg
or
pop
mov
aaa
mov
pop
shr
pop
add
arpl
into
leave
cltd
cld
jbe
pop
popf
adc
aas
xor
mov
jno
iret
inc
mov
das
scas
or
mov
mov
shlb
fsubrs
pop
inc
cltd
icebp
outsb
push
stc
fidivs
int3
xchg
xchg
xchg
ficompl
adc
xor
or
aad
mov
scas
pop
jmp
or
std
mov
add
pop
mov
pop
pop
loop
push
test
insl
shl
stos
inc
call
jae
jbe
pop
adc
cmp
pop
dec
lods
movsl
sub
xchg
clc
ss
jne
inc
cli
mov
arpl
xchg
rol
pop
cmp
cli
adc
mov
xchg
enter
pop
push
sbb
inc
ds
add
sbb
loope
push
and
aad
mov
std
push
mov
or
mov
pop
cmpsl
icebp
or
rolb
mov
jns
cltd
cmpsl
dec
cmpsb
jb
pop
call
fmulp
fsubl
fdivrs
jecxz
dec
mov
jge
mov
pop
fidivrl
mov
jne
js
hlt
rcr
sub
pop
arpl
xchg
dec
pop
pop
cmp
ret
mov
outsl
mov
fnstenv
pop
stos
xor
cmp
and
mov
imul
adc
pop
jne
cmpl
lret
mov
or
push
mov
xchg
pop
into
pop
push
cwtl
imul
je
sub
mov
pop
std
lea
cmp
mov
fisubrl
sub
inc
pop
sbb
les
loopne
xor
ret
es
mov
pop
addl
sbb
int3
jbe
pop
hlt
dec
in
mov
xlat
int
aaa
cli
sbb
or
dec
pop
and
adc
pop
xchg
and
xor
ljmp
or
mov
daa
pushf
pop
clc
divl
push
mov
enter
call
or
and
lods
dec
loopnew
popf
push
pop
scas
pop
sub
inc
jl
inc
pop
jecxz
xor
or
out
fldcw
pop
xchg
lret
mov
out
shl
pop
repz
pop
stc
shlb
aaa
ja
mov
and
push
cmp
data16
or
das
int3
push
sub
pop
and
push
cmp
inc
pop
movsb
pop
adc
in
pop
mov
cmp
inc
jns
leave
pop
imul
xchg
xor
fimull
fs
pop
nop
andl
adc
jecxz
cmc
notb
movsl
or
pop
push
outsb
sbb
fistpl
xchg
inc
je
add
push
dec
in
mov
inc
xchg
es
mov
or
in
std
pop
mov
pop
nop
cli
js
mov
xor
push
cmpsl
test
mov
negl
gs
sar
dec
push
pushf
out
test
lea
xchg
pop
int3
in
sub
cld
pop
jb
jbe
into
push
xchg
leave
mov
push
mov
pop
push
pop
or
sbb
sub
out
push
dec
lock
out
xchg
fisubl
mov
cmp
inc
mov
pushf
rol
sub
movsl
mov
cmpsl
pop
xor
sub
out
in
adc
ret
shlb
push
pop
push
push
negb
out
and
and
xor
xlat
fisubrl
mov
mov
xor
push
pop
push
add
pop
fidivrs
in
mov
mov
scas
mov
ds
ret
imul
dec
mov
scas
insb
cmp
movd
jo
or
fs
arpl
scas
loope
fs
dec
or
xchg
fists
fstp
fstpt
data16
lds
xchg
xchg
movsl
mov
aad
shll
inc
cmp
push
ret
orb
xor
or
lods
sbbl
xchg
nop
imul
xor
mov
adc
cli
adc
mov
adc
mov
sbb
loop
sbb
cltd
ficomps
enter
cmp
cmp
and
and
mov
and
xchg
pop
add
daa
push
sbb
lods
mov
cmp
sbb
bound
jno
pop
sub
dec
stos
popf
push
lods
mov
mov
mov
mov
jo
sbb
push
cltd
movntq
out
lcall
add
addr16
sbb
mov
enter
cmp
or
scas
mov
cmp
fsubl
pop
cmp
popa
xchg
cmp
sti
jl
and
sbb
cmp
or
adc
jns
pop
mov
push
or
stc
jge
sub
or
leave
jns
das
shrl
cmp
sub
hlt
xor
dec
dec
imul
inc
cmp
lahf
sti
mov
imul
movsl
jb
mov
les
mov
fcoms
fdivl
cld
mov
pop
or
cmpb
ljmp
repz
push
fistpl
push
lock
loop
jne
aaa
jae
movsl
cltd
filds
pop
add
jo
in
mov
daa
xor
adc
nop
out
out
sub
cmp
push
inc
stc
pop
repnz
leave
pop
cmp
dec
inc
ss
cmp
icebp
and
and
cmp
jne
ss
out
sbb
sub
push
mov
mov
mov
cld
insl
push
lret
repnz
icebp
jmp
sub
ds
ror
popf
popa
add
push
xchg
insl
icebp
xchg
scas
lcall
or
mov
cmpsl
jecxz
sub
icebp
xchg
ficompl
push
adc
xor
push
mov
pop
add
dec
mov
cmp
add
insb
ss
cmp
jno
enter
mov
imul
test
in
dec
scas
sub
popa
lret
pop
add
pusha
repnz
popf
lock
sbb
out
pop
pop
in
xor
sti
ret
popa
push
pop
jbe
mov
ja
jecxz
pop
loope
and
movsb
clc
push
pop
aad
dec
xchg
push
mov
cmp
outsl
jo
pop
adc
add
add
stos
xor
rcrl
movsl
mov
insb
fdivrs
pop
mov
push
pop
les
mov
lret
lret
jge
pop
aam
cltd
sbb
mov
scas
cmp
mov
icebp
pop
or
incl
movsb
mov
sub
sbb
cmp
push
pop
cmpsb
dec
or
push
sub
pop
fwait
xor
arpl
iret
pop
sbb
nop
push
push
cld
pop
pop
dec
dec
xor
mov
xor
jbe
mov
push
sub
scas
push
stos
clc
inc
push
push
pop
push
mov
arpl
insl
ljmp
daa
fstps
repz
popa
pushf
mov
add
cmp
mov
xchg
sbbb
std
into
mov
mov
xchg
icebp
add
in
xor
inc
dec
adc
pop
outsl
popf
aas
add
scas
xchg
pop
imul
adc
jl
push
aam
pop
xor
inc
push
addr16
pop
xor
jg
mov
xor
push
pop
divl
mov
push
sbb
jle
scas
out
push
ret
ja
jecxz
std
pop
and
popl
pop
lret
dec
cmpsb
xchg
pop
mov
loope
fmull
mov
arpl
xchg
add
push
adc
pop
push
sbb
sbb
sti
mov
test
lock
pop
inc
mov
xchg
rep
ret
add
pushf
xchg
xor
add
pop
jmp
dec
pop
jle
ja
pop
xchg
mov
cmp
fnstcw
mov
add
sbb
xor
or
pop
sub
ret
ret
bound
pop
in
mov
mov
cld
mov
sbb
xchg
dec
xlat
bound
lcall
cltd
sub
in
repz
lcall
arpl
pushf
dec
dec
sbb
int3
lahf
push
xor
fisttpl
repz
pop
subl
out
pop
orl
jge
popa
sub
int3
out
mov
mov
xor
mov
jnp
xchg
pop
ds
fldcw
out
push
arpl
pop
pop
cmp
adc
shl
jno
pop
test
js
mov
fcmove
xchg
mov
pop
ret
pop
cmp
lds
arpl
fsubs
mov
fwait
adc
outsl
sub
xlat
pop
fldcw
mov
daa
sbbl
mov
sbb
fildl
push
xor
mov
jbe
jecxz
jno
pop
inc
inc
xchg
add
shll
hlt
pop
mov
call
rclb
mov
add
mov
pushf
jmp
xor
pop
push
mov
sub
daa
inc
add
popf
test
clc
cmpsl
fstps
xor
pop
leave
loopne
lcall
mov
jno
pop
cmp
pushf
xchg
lds
jmp
pop
not
or
cmc
mov
push
xor
std
jecxz
mov
test
jle
shlb
push
cmp
xchg
mov
add
pop
leave
in
jae
loop
sub
rcl
cmp
dec
push
pop
lcall
movsb
sti
mov
cmp
std
pop
push
adc
push
cmp
and
inc
sbb
sub
mov
out
into
pop
mov
inc
jae
and
add
je
out
xlat
mov
push
mov
lock
jl
dec
cmc
pop
mov
movsl
ss
jnp
enter
add
pop
xchg
dec
jge
cmpsl
sub
call
insb
sbb
xchg
or
shl
inc
out
cmc
or
jp
scas
outsl
test
jne
stc
shl
cli
xor
int
xchg
cld
cmpsb
pop
mov
push
shrb
jae
jb
pop
lock
xor
pop
or
jmp
bound
dec
arpl
push
pop
fwait
icebp
mov
pop
scas
cmp
in
leave
adc
add
mov
jp
xchg
dec
xor
aaa
test
stc
sub
sbb
call
mov
pop
loope
ds
xor
or
shlb
mov
mov
jecxz
pop
cmp
or
sarl
pop
cmpsl
adc
pop
pop
ljmp
ret
sti
inc
mov
stos
adc
fnsave
fstps
repnz
xchg
and
cmp
mov
mov
dec
mov
jle
pop
pop
xor
pop
cmove
nop
xchg
js
push
pop
or
adc
xor
fs
int
stos
aas
pop
and
sbb
pop
repnz
xchg
cmp
mov
dec
pop
adc
in
cmp
stc
lcall
ret
fs
pop
jno
sarl
js
jae
push
fwait
adc
push
stc
add
jmp
rcll
push
pop
pop
popa
dec
dec
ror
fisttpll
aas
in
test
mov
fbstp
mov
movsb
nop
cwtl
push
scas
and
mov
test
fsubs
adc
adc
mov
adc
adc
mov
repz
pop
loop
out
ficoms
pop
mov
pop
das
inc
stos
or
add
push
call
mov
das
mov
pop
pop
cmp
movl
subl
add
out
pop
adc
fistps
ficomps
push
cmpsb
ret
dec
or
dec
lcall
jbe
push
push
test
mov
lea
into
mov
dec
pop
leave
xchg
mov
mov
mov
pusha
cmp
inc
fists
test
popf
stos
lret
data16
lods
jle
ljmp
xor
or
inc
out
sub
jp
pop
insb
cmp
ljmp
popa
cltd
pop
in
add
mov
imul
and
jno
mov
test
and
jge
ret
mov
in
sub
jl
mov
pop
mov
mov
movsl
popf
mov
jno
pop
test
in
js
xchg
aas
roll
ret
imul
out
or
mov
test
pop
cmp
xchg
scas
scas
aas
outsb
add
out
xchg
ret
and
rcrb
pop
inc
test
add
mov
cld
push
scas
inc
enter
jbe
jp
pop
lahf
cmp
and
int
bound
xor
inc
out
push
or
scas
pop
addb
shlb
lock
or
mov
pop
lcall
leave
mov
cmp
sbb
stos
cmp
cld
or
scas
jmp
cmpsl
in
mov
das
pop
pop
xchg
movsl
in
mov
sbb
pop
pop
pop
into
xor
pusha
pop
notb
jbe
xchg
mov
shl
mov
push
push
or
fadd
jge
fs
scas
and
ret
leave
movsl
or
jmp
aam
sti
gs
xorb
cltd
push
and
cmp
aam
mov
rcl
stos
sbb
push
std
push
movsl
mov
adc
and
add
lahf
fwait
leave
mov
addr16
inc
inc
cwtd
add
mov
jg
cmp
mov
inc
pop
pop
xchg
dec
imul
add
cmpl
xchg
fidivrl
lds
ss
pop
sbb
dec
xchg
andb
outsb
xchg
fwait
pusha
nop
or
mov
lds
aad
mov
xchg
test
decb
shrb
jno
pop
xchg
out
sti
in
test
adc
push
movsb
mov
adc
lods
int3
sbb
popa
xor
xor
push
push
cmp
repz
add
cmp
sub
icebp
xchg
outsb
pop
aam
dec
mov
hlt
cld
ret
mov
or
mov
fidivrs
mov
les
scas
adc
mov
ljmp
and
sub
ljmp
stos
mov
inc
xchg
cmp
icebp
mov
pop
xor
mov
jecxz
call
repz
ficoml
sub
ret
adc
xchg
xchg
push
ljmp
movsl
lds
mov
fwait
dec
adc
pop
mov
pop
push
jecxz
addr16
insb
movsb
xor
sbb
xchg
iret
adc
popa
dec
pop
mov
xchg
pop
or
aam
push
xor
mov
je
adc
ss
cmp
scas
mov
rol
push
aad
xchg
leave
mov
adc
popa
repz
adc
xor
xchg
pop
cmp
stos
jle
xor
cmc
pop
insl
test
push
push
les
pop
mov
rolb
and
dec
sbb
pop
pushf
xor
jo
orl
or
mov
insb
pop
sahf
data16
inc
xchg
push
sub
test
orb
out
add
in
sub
cmpb
sbb
shll
push
mov
movsb
scas
pop
sbb
cmpb
and
sarl
jae
ficoml
fistl
addr16
into
push
scas
pushf
clc
push
dec
jge
pop
shrb
or
in
mov
cli
mov
cmp
push
jmp
out
sahf
pop
movsb
push
lret
sbb
hlt
fcomps
loop
outsb
aad
mov
push
aam
add
inc
mov
iret
xchg
mov
jle
pop
or
push
mov
and
sbb
loopne
sub
mov
fildl
imul
dec
mov
fs
sbb
cli
adc
scas
pop
or
mov
mov
inc
stos
lea
js
aas
pop
outsl
fcmovbe
mov
sbb
sbb
in
mov
enter
cmp
adc
jns
and
ficomps
pop
jmp
inc
es
inc
pop
aaa
pop
ftst
fdivl
clc
popf
mov
pop
lods
pop
push
pop
call
jbe
mov
fistpl
test
push
pusha
test
out
or
mov
lcall
es
loop
jo
xchg
out
jge
inc
pusha
jp
incl
stc
je
into
sysret
fildl
jle
pop
mov
pop
outsl
test
insb
pop
ror
sub
mov
sbb
mov
jg
fcoml
jno
fbstp
jns
enter
xchg
pop
pop
lods
divl
and
ljmp
mov
pop
adc
pop
xchg
in
mov
loopne
stos
mov
mov
fidivrl
push
out
adc
cmp
pushf
cmp
dec
mov
out
cs
mov
inc
cmp
pop
jge
insb
and
leave
push
jle
fisttpll
cs
xor
push
jecxz
and
and
or
shlb
insl
sarb
pop
cmpxchg
jecxz
jbe
mov
sbb
pop
mov
xchg
jae
and
pop
ja
pushf
into
fwait
loop
test
push
cmp
pop
idiv
mov
and
pop
pop
ljmp
mov
xor
mov
xchg
dec
fnstenv
jbe
ficomps
dec
pop
shlb
inc
pop
jns
jecxz
sbb
clc
jnp
test
adc
and
pop
adc
inc
out
stc
test
enter
in
fldenv
stc
dec
je
pop
addr16
sub
sbb
fmul
xchg
dec
js
popa
adc
mov
std
mov
pop
repz
sbb
add
jbe
pop
cmpsb
push
fsubs
outsb
sub
and
and
mov
mov
pop
jo
shlb
pop
fidivl
jecxz
rcr
adcl
pop
aaa
xchg
pop
bound
push
and
inc
pop
xchg
cltd
mov
sahf
pop
pop
test
mov
mov
pop
std
adc
hlt
sbb
fcompl
arpl
test
outsb
mov
sub
cwtl
movsb
pop
ror
mov
jge
pusha
xchg
xor
dec
fldt
sti
and
adc
xor
in
insl
lahf
aaa
jmp
lods
fadds
add
inc
add
jnp
push
jmp
stc
out
pop
mov
pop
sbb
and
outsl
push
mov
loopne
rcrl
imul
jl
sub
lcall
dec
xor
lret
jno
xchg
and
hlt
leave
cld
adc
adc
pop
ret
mov
fiaddl
xor
and
mov
pop
scas
mov
add
mov
shlb
cmp
out
jnp
jle
push
out
xlat
push
jecxz
xor
loope
or
mov
jb
fidivs
sub
dec
rclb
or
jmp
add
xor
mov
fldenv
sbb
cmpsl
cwtl
xor
jbe
cmp
jnp
lret
mov
sub
mov
mov
mov
lret
xchg
in
adc
cli
pop
xchg
cltd
xchg
mov
cli
add
sbb
lea
aas
cli
in
test
mov
lea
ret
pop
icebp
pop
jne
dec
pop
aas
add
cmp
pop
dec
mov
mov
adc
add
lahf
mov
adc
popl
cltd
cmp
fnsave
push
ret
insb
ror
outsl
jl
add
jo
loop
sub
inc
bound
mov
mov
cmp
dec
aam
in
das
mov
rcrb
xchg
push
jle
cmp
dec
mov
les
fisubrl
in
loop
test
hlt
out
pop
jne
push
sub
inc
loop
inc
sub
push
mov
push
push
daa
inc
adc
jb
push
call
push
or
rclb
jno
rclb
subb
mov
test
and
mov
xchg
cli
dec
adc
test
mov
jl
mov
mov
add
fiaddl
cmc
push
fisttpl
repz
push
and
arpl
mov
pop
dec
rorl
xchg
jl
xor
adc
aaa
lock
cmp
std
mov
mov
lcall
xchg
pop
mov
xchg
ds
push
mov
pop
jae
cmp
lret
movsb
mov
pop
pusha
iret
mov
rcrl
and
fdiv
xlat
nop
xor
mov
mull
jnp
ficompl
movsl
mov
pop
pop
ss
out
mov
clc
mov
xchg
or
pop
push
pusha
xchg
jmp
jb,pn
pop
insl
popf
fistpl
mov
aaa
pop
add
into
shrl
xchg
sbb
add
rolb
sbb
xor
mov
or
push
pop
test
pop
lea
test
les
and
pop
divb
jae
dec
pop
sbb
xchg
mov
mov
loop
fdiv
push
pop
xor
int
shrl
inc
scas
jle
pop
fs
int
pop
cmc
lods
jmp
jmp
cmpsl
xor
sub
sbb
add
push
fidivs
mov
mov
imul
lods
pop
outsb
idivl
scas
cmc
into
in
xchg
mov
pop
ja
add
imull
int
mov
addr16
test
arpl
int3
add
xchg
lret
lea
add
inc
lcall
xor
scas
fldcw
call
sbb
mov
mov
inc
pop
xor
xchg
lock
cltd
negb
clc
pop
push
or
insl
push
pop
xchg
andb
push
lret
pop
and
mov
sbb
cltd
sbb
outsl
cmc
push
pop
aaa
sti
addr16
pop
inc
pop
mov
and
inc
loope
xchg
fildl
pop
es
or
mov
add
push
test
repz
pop
push
push
in
rclb
leave
pop
cmp
lret
push
call
mov
inc
mov
hlt
stc
lods
stc
pop
xchg
je
mov
pop
adc
sbb
std
aam
cli
clc
mov
and
insl
add
mov
or
pop
stos
push
mov
xchg
ss
mov
jns
dec
loopne
leave
inc
cmp
xor
add
shl
pop
dec
or
test
adc
shrb
je
test
add
pop
push
aam
jbe
mov
push
mov
int
dec
lea
cmp
mov
rcr
jg
cwtl
outsl
cmp
iret
ss
test
ret
insb
ljmp
dec
pop
push
mov
pop
xchg
pop
nop
sbb
repnz
mov
push
jmp
mov
call
mov
inc
jl
adc
sub
mov
sahf
cmpsl
mov
and
and
jl
push
faddl
cmpsb
jecxz
dec
mov
pop
dec
insb
dec
xor
sub
gs
xlat
fs
mov
mov
repnz
enter
arpl
push
xor
jnp
out
mov
pop
xchg
stc
pop
inc
fsubs
push
xor
leave
push
push
or
jmp
dec
outsb
scas
dec
rorl
in
pop
cmpsl
jecxz
call
pop
cmp
fisttpl
lahf
xor
cmpsl
adc
fsubp
jo
sbb
or
pop
mov
cmpsb
ja
into
mov
adc
out
pop
sub
mov
mov
popa
fildl
xlat
pop
inc
call
dec
ss
pop
xchg
mov
sbbl
ljmp
jecxz
add
mov
xor
rorb
cwtl
pop
insw
and
push
mov
pop
pop
sar
push
nop
les
imul
mov
pop
pop
xlat
fiaddl
add
nop
cld
ret
inc
sarb
pop
dec
adc
call
movsb
sub
outsb
rcrb
popf
inc
js
pop
cmp
sbbl
push
inc
call
mov
mov
pop
hlt
shrl
jae
loop
pop
in
xlat
ret
pop
jecxz
scas
sbb
adc
sti
pushf
sahf
pop
repz
mov
pop
push
dec
push
cmp
sbb
scas
xor
mov
dec
mov
push
pop
xor
rclb
out
repz
mov
push
scas
hlt
sub
pop
xchg
cmp
cmc
sub
add
sti
cwtl
divb
pop
shlb
into
add
or
scas
js
in
shll
pop
sbb
mov
clc
scas
adc
jne
jmp
mov
mov
sbb
mov
xchg
mov
mov
stos
rcrl
jbe
je
pop
mov
pop
sbb
dec
add
push
jns
mov
cmp
dec
scas
idivl
mov
je
push
ss
inc
inc
push
insl
sbb
lret
inc
icebp
cmp
and
dec
mov
fidivrl
pushf
in
push
mov
in
das
scas
mov
and
jge
mov
imul
jae
mov
pop
jl
iret
outsl
hlt
gs
mov
imul
mov
lcall
xor
pop
xchg
gs
int3
cmp
cwtl
push
inc
aad
dec
sti
push
into
pop
cmp
lahf
cmpsl
js
add
lahf
push
mov
xor
pop
xchg
cmc
mov
mov
inc
sub
fmuls
out
pop
pushf
pop
movsl
test
cmp
pop
pop
mov
jno
xlat
call
xchg
mov
scas
int
jmp
sub
and
sub
adc
notb
mov
loopne
jne
add
pop
dec
sahf
or
cltd
orb
dec
lcall
stc
fs
lods
adc
adc
js
push
lahf
push
mov
sbb
jae
and
adc
sti
or
pop
mov
insb
mov
loopne
out
pop
nop
pop
or
mov
pop
andl
gs
loopne
mov
scas
and
sbb
nop
add
sub
or
popf
push
pop
jnp
lcall
inc
mov
stc
dec
mov
cs
or
jns
roll
daa
xchg
cltd
xchg
dec
xchg
aas
inc
and
cmp
cmp
jb
or
and
jns
stos
cli
jge
loope
mov
sbb
imul
mov
fs
push
sbb
push
jnp
rcrl
push
jbe
addr16
cltd
ret
inc
out
scas
imul
pop
addb
and
adc
mov
push
push
imul
out
pop
lahf
push
stos
adc
add
sti
sub
mov
jbe
jp
outsb
jg
mov
aaa
push
orl
xchg
mov
pop
pop
pop
and
pop
ret
mov
xchg
push
lods
pop
inc
push
addr16
or
lahf
adc
and
leave
andl
rcl
push
jmp
mov
mov
xor
push
mov
decb
jg
mov
pop
mov
mov
add
pop
xchg
fidivl
sub
fcmovnbe
cld
lds
mov
stc
insb
inc
les
dec
orb
sbb
xchg
adc
cmp
xlat
js
cmp
mov
cltd
add
lds
pop
sahf
cmp
mov
and
pop
scas
and
push
mov
pop
lahf
std
mov
test
lret
sub
pop
js
inc
pop
cmc
jle
loopne
mov
fimuls
mov
jmp
pop
pusha
sub
movsb
or
pop
pop
push
rolb
int3
and
pop
cmp
cmp
push
or
test
lret
out
add
mov
adc
gs
mov
push
pop
mov
iret
int
negl
mov
mov
out
bound
out
adc
cmp
outsl
inc
xchg
push
stos
push
lret
mov
pop
or
out
jp
fimull
incb
leave
decb
or
out
test
push
inc
pusha
in
pushf
xchg
leave
popl
hlt
addr16
inc
mov
adc
adc
shl
loopne
adc
jb
xor
movsl
std
shlb
mov
fimull
test
fwait
nop
mov
push
es
sti
je
pop
xor
arpl
push
sbb
cmp
cmp
cltd
pop
jp
addb
loopne
repz
mov
mov
cmp
mov
cmp
cmp
add
dec
jb
mov
cmp
dec
adc
or
cmp
adc
je
mov
lock
jecxz
call
mov
jl
dec
rcrb
in
add
lods
lock
cmp
repz
fbld
xor
cli
sti
push
adc
movb
dec
mov
mov
bound
ljmp
pop
into
cmpsl
dec
fstpt
xor
push
mov
loop
in
pop
popf
icebp
incb
setns
pop
iret
in
out
dec
jne
push
mov
jecxz
sarl
xor
or
mov
jle
in
dec
mov
stos
sbb
outsl
aad
xlat
adcl
fistpll
pop
push
jecxz
add
cli
add
loop
xchg
inc
popl
fwait
mov
pop
or
lret
in
pop
push
jecxz
inc
std
ret
frstor
lcall
shrl
inc
jbe
pop
out
xor
pop
daa
push
ret
push
das
negl
add
je
insl
pop
out
pusha
gs
sbb
insb
sbb
addb
in
mov
push
nop
adcl
hlt
jns
xlat
clc
sub
or
fmuls
jmp
fistps
mov
stos
stos
pop
ficoms
aaa
pop
cmp
mov
mov
pop
lods
sub
mov
push
fstpt
and
pop
mov
mov
xchg
sbbb
icebp
push
xchg
pushl
lcall
xchg
pop
push
shr
jecxz
sbb
pop
add
xor
dec
lds
hlt
cmp
xor
mov
mov
cld
mov
or
cmp
aam
mov
pop
daa
dec
das
rcrl
add
scas
subl
push
dec
fsin
dec
and
dec
pop
fdivp
lahf
pop
mov
movsl
adc
pop
out
mov
and
fidivrs
mov
xchg
iret
jb
call
aad
sbb
leave
pop
outsb
jns
mov
pushf
xchg
pop
lret
out
fistpl
mov
sarb
icebp
pop
adc
pop
or
mov
or
outsl
push
xchg
dec
xorb
xor
inc
mov
in
add
rcrl
leave
les
lock
pop
subb
fcmovne
ds
pop
jle
xchg
push
cli
cld
lcall
pop
andl
icebp
or
push
mov
jns
jmp
lds
pop
add
test
arpl
in
rcl
cli
or
insl
fistpl
mov
aas
pop
adc
loope
imul
ds
inc
mov
ror
mov
mov
inc
insl
dec
mov
xchg
cwtl
sti
data16
jle
jb
sbb
pop
add
and
ljmp
ja
imul
lock
aam
push
pop
xchg
out
inc
xor
pop
dec
push
pop
imul
bound
mov
jp
aas
jo
cmp
pop
pop
mov
push
seta
pop
sti
fwait
push
add
insl
mov
outsb
daa
pop
repnz
xchg
lret
lahf
dec
push
inc
xchg
xchg
jg
dec
pop
lret
adc
pop
rcrb
bound
add
cmpsl
test
add
or
jno
pop
insl
aad
or
push
in
inc
pop
push
mov
in
fwait
xchg
movsb
mov
add
jle
pop
bound
push
pop
sub
xchg
in
sti
inc
pop
cmpsl
stos
mov
test
scas
call
pop
or
pop
xchg
imul
mov
mov
outsb
movsb
push
mov
pop
cmp
jecxz
jb
pop
push
mov
insl
pop
lods
mov
cmp
push
test
loope
xorb
sbb
mov
xlat
es
lea
outsb
pop
cmc
jg
and
xor
pop
dec
push
popa
add
pop
adc
sti
cs
ret
out
stc
bound
pop
rclb
inc
cmpsl
jmp
popa
dec
jo
retw
push
lahf
xor
pop
lods
into
mov
sahf
pop
rclb
insb
inc
and
les
and
out
scas
pop
xor
pop
xor
pop
cmp
sbb
mov
out
mov
gs
fstpt
inc
pop
movsb
adc
ja
popf
dec
sbb
pop
cmp
cmpsb
scas
push
pop
cmpsl
sub
ljmp
call
xor
pusha
ret
cmpsl
pop
mov
pop
inc
jle
add
xchg
stc
xchg
mov
push
fistpl
es
test
cmp
fidivl
ficomps
outsb
addr16
add
push
divb
xchg
pop
sub
adc
in
add
pop
push
outsb
aaa
or
or
cmc
fsincos
and
cld
pop
test
xor
sub
shlb
mov
pop
popa
pop
add
out
mov
loop
pop
mov
mov
pop
cld
jl
ret
mov
pop
sub
xchg
subb
les
jp
lret
xorl
xchg
movsl
push
or
add
fcomi
fldcw
outsb
jo
and
pop
aad
pop
lahf
fistpll
popf
lea
orb
and
pop
inc
mov
push
jecxz
mov
rorb
jle
icebp
add
popf
cmp
pop
jmp
mov
pop
pop
cmp
push
iret
sbb
test
pop
in
add
cmp
pop
test
mov
push
lret
pop
sub
adc
pop
cs
lret
xor
cli
xor
sbb
ds
mov
test
sub
jbe
out
pop
ss
xchg
out
push
adc
mov
push
mov
pop
in
mov
es
out
cmp
jns
les
aad
fs
jecxz
mov
add
adc
add
fcoml
cld
and
dec
js
pusha
test
sub
cmp
test
mov
mov
mov
aas
sbb
pop
notl
mov
pop
mov
mov
movsb
lahf
sub
cmp
push
push
insb
bound
inc
outsl
hlt
loop
out
adc
add
fistpll
cmp
test
data16
pushf
std
out
add
dec
jnp
cmp
pop
pop
xor
dec
outsl
inc
repnz
leave
je
in
sub
or
jbe
mov
lret
mov
vmovmskpd
and
cmpb
dec
pop
sbb
ljmp
je
paddsb
shr
aaa
dec
cmpb
pop
xchg
fsubs
push
inc
test
jmp
mov
add
ret
movsl
cli
pop
aad
rorb
pop
or
pop
mov
addl
mov
dec
push
stc
lds
mov
inc
jecxz
dec
pop
out
add
mov
push
xchg
andl
out
sahf
pop
inc
les
jbe
test
push
mov
faddl
in
sbb
mov
pop
in
insb
scas
stos
movsb
addr16
add
jae
pop
and
jbe
mov
dec
xor
mov
lcall
mov
or
adc
in
dec
rep
pop
or
popa
cld
push
int
adc
add
shrb
pop
stos
sub
cmp
je
push
mov
pop
add
fisubl
adc
mov
inc
cmp
repnz
adc
aaa
pop
pop
mov
enter
pop
fistpl
and
lret
add
mov
inc
ret
add
aaa
pop
mov
imul
sub
mov
cltd
push
movsl
cltd
pop
mov
mov
xchg
lea
add
mov
pop
clc
enter
pushf
push
jae
pop
add
or
ret
pop
xor
pop
jo
pop
imul
mov
fadds
jns
data16
test
mov
out
std
jo
push
add
or
jb
in
xor
divb
int
and
out
enter
mov
idivb
mov
iret
ljmp
cld
daa
js
lods
js
fidivrs
inc
sbb
xchg
sub
pop
in
addr16
loop
pop
dec
adc
lock
andl
pop
mov
mov
jg
or
xchg
or
pusha
mov
sbb
pop
mov
adc
dec
push
xchg
sbb
pop
andps
rcrl
mov
adc
aam
int
scas
shrb
xor
lods
test
rcrl
cltd
repnz
test
jo
jg
jns
bound
dec
adc
pop
mov
cmp
sbb
inc
pop
dec
fdivs
sarl
cmpsl
pop
or
pop
lods
cmp
sbbb
adc
sbb
dec
pop
or
mov
jle
xchg
out
mov
add
jl
pop
sub
mov
test
cmp
add
ret
push
mov
test
jae
pop
mov
mov
inc
pop
mov
outsl
ret
lret
out
dec
shlb
test
dec
jge
lahf
out
sub
fxch
xchg
jmp
pop
outsb
add
xor
mov
push
pusha
popf
jnp
push
dec
daa
and
dec
sbb
pop
pop
xchg
mov
sub
and
fldenv
test
pop
jmp
test
pop
xor
fs
adc
push
hlt
scas
jb
repnz
mov
push
fprem
cs
pop
push
dec
ds
cmpsb
pop
aam
mov
insl
pop
int
stos
imul
mov
aad
xchg
adc
pop
and
sbb
mov
pop
jl
ljmp
test
fsubl
xor
pop
jns
cmc
ss
push
jecxz
or
mov
pop
mov
adcl
xor
hlt
ljmp
nop
or
lds
into
ja
pop
jb
jecxz
sbb
inc
xor
lock
lahf
dec
filds
mov
inc
dec
push
mov
mov
xor
pop
cmp
inc
mov
pop
dec
mov
aam
test
mov
loopne
xchg
adc
push
adc
ret
mov
iret
inc
clc
outsl
sub
pop
int
fsubp
scas
aaa
outsl
or
scas
mov
pop
gs
iret
cmp
nop
pop
inc
jmp
sub
pop
inc
icebp
leave
xchg
cli
lcall
jg
cld
repnz
adc
push
addr16
out
pop
dec
and
insl
inc
lret
or
pop
mov
push
repz
stos
jl
mov
pop
cmpsl
inc
pop
or
daa
dec
pop
mov
fisubl
pop
es
mov
pushf
aaa
scas
pop
and
cmp
pop
out
mov
sbbl
dec
int
pop
jne
loop
cmp
loopne
pop
sbb
fcoms
jne
rcrb
dec
push
out
out
push
mov
shlb
mov
or
or
pop
mov
hlt
rclb
ret
loopne
mov
lret
pop
cmc
cmp
mov
pop
dec
adc
xchg
mov
mov
sarb
or
add
pop
adc
cli
ret
pop
popa
add
lret
dec
fxch
pop
pop
push
imul
pop
push
sbb
test
loop
inc
xchg
int3
dec
push
insb
dec
xchg
mov
int
in
mov
pop
push
sbb
outsb
data16
scas
ljmp
je
adc
xchg
push
scas
pop
pop
mov
pop
decb
in
mov
out
fs
fdivs
das
sahf
aas
fsubrl
inc
pop
dec
icebp
cmp
push
mov
jp
mov
pop
pop
xor
out
addr16
cmp
clc
jo
call
xor
sbb
incb
aam
pop
pop
and
mov
xchg
ret
mov
mov
int
or
and
mov
aam
std
or
popa
inc
pop
pop
pop
push
aaa
icebp
cmc
push
iret
mov
sbb
sbb
and
mov
add
xor
cltd
je
mov
pop
sbb
pop
jmp
fbld
test
jne
sbb
pop
icebp
sbb
ja
or
fstps
mov
pop
into
scas
add
scas
push
cmp
push
fsubs
pop
std
iret
sub
mov
xchg
int
rolb
testb
mov
leave
pusha
inc
cli
mov
mov
in
mov
mov
sbb
adcb
pop
pop
or
sti
push
pushf
pop
data16
push
push
bound
jmp
sub
jge
pop
cmp
stos
les
dec
sbbb
jns
pop
ret
and
lds
mov
movsl
test
pop
pop
repz
add
sbb
xor
push
lret
pop
enter
jbe
popf
lret
pusha
lahf
add
pushf
mov
in
mov
call
pop
xchg
push
push
or
push
mov
clc
or
leave
pop
das
inc
mov
jno,pn
push
dec
sti
adc
dec
and
mov
stc
lret
fs
mov
sub
pop
pop
ja
mov
mov
jmp
sbb
pop
jb
stc
rcl
test
data16
mov
adc
insb
cmpsl
pop
mov
mov
ljmp
jno
or
mov
mov
mov
insb
hlt
pop
ret
xchg
add
pop
xor
xchg
mov
pop
pushf
arpl
cmpsb
cs
js
xlat
pop
inc
dec
shl
cmc
es
adc
jnp
xchg
in
push
add
jecxz
cli
xlat
inc
sbb
inc
in
dec
int3
push
sub
xchg
jl
adc
cmp
mov
add
and
aas
arpl
push
xor
int3
jne
pop
mov
xor
pop
xor
hlt
sbb
cmp
or
inc
notl
or
daa
jne
pop
mov
fwait
mov
xor
mov
pop
push
xor
outsb
call
fadds
cmp
out
scas
insb
mov
mov
xchg
pop
or
adc
jo
negb
imul
push
fwait
sbbl
mov
sub
mov
pop
in
mov
jnp
repz
mov
add
fnstcw
xor
cmp
pusha
or
pushf
ret
test
jno
scas
jmp
inc
mov
pusha
jns
xchg
xchg
test
pop
mov
jne
ss
pushf
stos
pop
gs
ds
mov
cmp
jne
in
xchg
and
add
dec
movsl
mov
mov
lds
cli
imul
inc
xor
dec
or
jge
insb
mov
fisttps
dec
pop
or
lods
mulb
pop
sub
mov
pop
data16
scas
xchg
dec
dec
cs
cwtl
mov
adc
adc
sbb
pop
jp
aam
pop
nop
sub
lds
fsubs
push
inc
cwtl
cmp
in
imul
mov
xchg
call
sub
ret
jmp
mov
pop
xchg
mov
cmpl
mov
adc
mov
int3
pop
out
inc
mov
repnz
mov
outsb
sub
ret
bound
clc
int
jne
lea
iret
aas
mov
push
das
pop
dec
scas
mov
stos
sbb
sub
pop
ror
sub
test
lea
mov
outsl
mov
insb
jle
push
cwtl
xchg
pop
pop
popf
jp
frstor
fsts
inc
roll
addr16
outsb
arpl
lds
bnd
pop
jmp
pop
push
sbb
sbbl
mov
pusha
dec
jo
pop
shll
repnz
xor
mov
sbb
mov
scas
fstpt
pop
add
add
mov
ficomps
jne
mov
outsb
add
mov
xlat
pop
pop
inc
insb
cmp
lahf
fdivrp
pop
outsl
scas
jb
dec
or
cwtl
lahf
cltd
pop
hlt
push
in
xchg
xchg
and
pop
test
lret
rcr
out
dec
insb
sbb
cmc
and
stos
gs
add
fisubl
add
xchg
push
fld
pop
mov
xchg
add
dec
fsubl
out
gs
scas
mov
lods
xchg
cmp
jae
in
lret
lock
sub
mov
fcoms
mov
stos
xor
mov
rclb
mov
push
push
adc
pop
sub
scas
movsl
gs
idivb
enter
xchg
pushf
sti
adc
mov
xor
pop
clc
cmp
aam
adc
adc
shrb
push
imul
pop
mov
mov
stos
lds
lcall
sbb
js
mov
pusha
fs
and
cmp
push
repnz
mov
ljmp
scas
movsl
icebp
sub
mov
mov
cmp
std
aam
mov
dec
xchg
dec
dec
stc
test
mov
cmp
mov
sbb
insl
addr16
or
lock
cmp
mov
and
adc
push
xor
addr16
movsl
insb
out
daa
xchg
icebp
js
in
mov
or
xchg
cmp
mov
mov
shll
fnstcw
dec
push
aas
ss
push
stos
fisttpll
cmp
sahf
sbb
inc
xor
cltd
fists
mov
in
add
lds
scas
aaa
loopne
add
dec
aam
into
mov
stos
mov
inc
dec
or
adc
loope
inc
dec
fistpl
lcall
add
cmp
cltd
cmc
and
test
cmp
dec
push
lock
push
sarl
icebp
hlt
add
incb
in
dec
in
in
push
pop
test
scas
sub
mov
mov
test
xchg
jnp
mov
xor
adc
cmp
jno
dec
pop
rorb
fnstsw
or
dec
les
add
mov
pop
mov
push
fincstp
cmp
lea
dec
mov
test
in
clc
movsl
jecxz
push
pop
rcrl
pop
int
ljmp
adc
je
fldt
repz
cmpsb
mov
scas
shll
ret
mov
cmp
push
xchg
pushf
movsb
lea
add
mov
int
lock
popl
fwait
addr16
pop
cmp
sbb
clc
jl
lcall
mov
jmp
hlt
mov
stos
mulb
mov
inc
fs
inc
mov
xor
sbb
lcall
cmc
lret
xchg
fstpt
cmp
inc
int3
mov
lock
testl
notb
repnz
gs
cmp
int3
mov
fsubs
mov
mov
lcall
mov
mov
dec
xchg
cs
and
jmp
push
sub
cmp
xchg
pop
push
push
or
icebp
popf
cs
lcall
add
cmp
mov
cmp
scas
fistl
sbb
fwait
sbb
push
pop
test
jge
mov
in
cmpl
mov
es
sub
fmul
std
jnp
and
pop
mov
dec
sbb
xchg
dec
adc
pop
push
ret
mov
popa
aas
mov
pusha
jne
dec
push
mov
pop
cmpsl
jnp
and
xor
sub
sub
mov
stos
aad
adc
lock
into
scas
pop
inc
lcall
push
pop
test
sahf
stos
sbb
and
xchg
pop
push
frstor
pop
pop
add
mov
test
lock
jno
push
lahf
xchg
mov
lret
jge
push
or
dec
or
push
pop
repnz
dec
loope
mov
fsubrl
cltd
push
jmp
jnp
testl
pop
jne
jle
sbb
test
pop
aam
cli
mov
cmpsl
push
sub
loop
adc
mov
cwtl
jge
push
pop
or
dec
lods
decl
mov
subl
jg
fsub
dec
popf
pop
xor
adc
mov
pop
xchg
rcll
pop
pop
mov
aaa
lods
cs
mov
cld
sbb
xchg
pop
sub
pusha
sub
or
jns
push
pop
fisttps
mov
icebp
pop
pushf
repz
testb
imul
dec
and
xor
sbb
faddp
pop
mov
pop
xor
sbb
adc
icebp
push
push
ljmp
mov
pop
lods
aas
inc
insl
mov
pop
cmpsb
pop
and
mov
mov
pop
jecxz
mov
pminub
pop
imul
out
pop
ret
jno
cmp
iret
or
repz
ja
pop
scas
testl
xchg
mov
gs
push
test
loop
or
dec
scas
and
jmp
mov
adcb
insb
add
inc
jecxz
fdiv
pop
cld
loope
dec
mov
sub
outsb
mov
pop
xchg
sub
mov
mov
rclb
pop
cli
pushf
push
xor
cmp
xlat
es
out
imul
sti
mov
test
push
pop
mov
and
in
pop
push
mov
sub
rcrb
xchg
imulb
mov
sbbl
clc
and
clc
lret
pop
pop
in
pop
stc
ret
imulb
push
push
sub
rolb
cli
xor
arpl
mov
push
xorl
xchg
push
pop
icebp
imul
scas
dec
sub
pop
dec
dec
xchg
jecxz
xchg
and
pop
roll
pop
inc
mov
or
xchg
in
jge
insb
lds
rorl
ljmp
std
fldl
push
pop
fistpl
pop
hlt
xchg
ss
into
loop
inc
mov
pop
mov
or
mull
call
adc
mov
mov
fldcw
sub
pop
xchg
push
mov
jns
sbb
call
dec
xchg
xchg
cld
cmp
arpl
xchg
dec
pop
lret
orb
sarb
in
pop
fidivl
add
xor
repnz
sbb
scas
jmp
cmp
sti
or
movsb
fstpl
insb
and
pop
aam
pop
scas
xor
outsl
or
cmpsl
arpl
bnd
mov
xor
mov
or
inc
push
xchg
push
pop
mov
cmp
ret
and
daa
jns
jne
stos
mov
pop
pop
sti
popa
push
pop
xchg
pusha
call
les
aam
scas
cli
es
popa
pop
fcmovu
dec
add
xor
cmpl
leave
fnstenv
pop
repz
push
mov
fistl
mov
aam
std
dec
jg
repnz
lahf
adc
inc
add
pop
jmp
clc
mov
lahf
or
pop
std
add
aas
jo
pop
push
push
push
daa
je
mov
adc
push
jmp
mov
sbb
lahf
int3
inc
mov
jle
lcall
test
mov
pop
jb
fmuls
pop
jmp
pop
and
inc
mov
cmp
mov
sbb
adc
cmc
pop
xchg
push
push
ljmp
mov
mov
int3
fadd
and
mov
pop
sbb
mov
push
movsl
pop
cmpsl
push
outsl
dec
add
loop
mov
aam
add
popa
mov
lahf
fistps
ret
scas
insb
push
jno
shlb
aaa
das
mov
mov
loope
push
push
test
jnp
das
aad
lea
fnstsw
arpl
aaa
add
mov
das
sub
sbb
pop
mov
sbb
xchg
loop
mov
pop
xchg
pop
push
fwait
dec
popf
push
xchg
pop
scas
jge
out
cli
mov
fistpl
leave
xor
cmp
inc
pop
xchg
xchg
dec
adc
push
scas
aas
cmp
lret
fcoms
fcomps
call
hlt
mov
pop
mov
dec
gs
jmp
xchg
lahf
cwtl
loope
lcall
popf
sub
mov
repnz
sbb
loopne
fcomps
adc
inc
repz
inc
std
xor
jno
pop
jmp
lahf
and
xor
jmp
sub
pop
push
pop
jb
mov
aad
fbstp
pop
pop
pop
test
push
mov
pop
push
in
jge
in
shlb
mov
sub
cmp
sbb
xchg
xor
in
pop
or
dec
cmp
sub
cmp
adcl
push
mov
and
sub
subb
sbb
movsb
push
add
fs
and
adc
mov
ss
mov
in
pop
pop
jmp
cli
cmp
cltd
pusha
pop
jne
loopne
xchg
inc
scas
lret
ja
clc
pop
imul
lcall
cmp
enter
dec
mov
jl
pop
mov
jnp
mov
arpl
jle
mov
cmp
add
adc
mov
cmp
aad
hlt
in
je
out
pop
jb
mov
sub
jg
mov
sub
cli
and
pop
movsb
mov
mov
test
adc
int3
push
scas
lods
and
cwtl
gs
sub
ja
cmp
cmp
jae
pop
jl
inc
adc
mov
or
xor
pop
xchg
sbb
ret
mov
icebp
xor
ss
pop
subl
or
push
fbstp
ret
adc
iret
cmp
dec
cld
popf
cli
loop
push
aad
jecxz
pop
dec
cmc
jg
scas
xor
xorb
dec
addr16
lret
jo
dec
inc
or
push
arpl
orl
jae
adc
sbb
sub
xor
mov
pop
cli
lea
jmp
mov
mov
lret
jg
mov
fstps
stos
pop
xchg
cld
lods
mov
mov
inc
xchg
sahf
aas
pop
pusha
sbb
jb
dec
repz
xchg
pop
xchg
stos
jle
dec
aam
lret
ja
or
add
push
and
and
scas
je
xor
loop
pop
lods
lods
fists
out
pop
mov
int
sahf
inc
pop
xchg
xor
xor
push
cmpsl
push
scas
pop
mov
mov
in
xor
pop
push
pop
divl
push
iret
pop
lahf
aas
cld
ficomps
lods
dec
push
pop
lods
out
mov
out
imul
stos
in
hlt
fstps
dec
pop
pop
imul
decl
pop
les
mov
fwait
xchg
cmpsl
pop
xor
sti
sub
mov
mov
inc
sarb
loope
adc
cwtl
sbb
cld
shrl
ficomps
les
int
mov
clc
fwait
cli
fidivrl
mov
pop
lea
lock
pop
cmp
imull
mov
int
ljmp
pop
das
sbb
daa
push
cmp
xchg
and
adc
push
adc
xchg
or
pop
mov
mov
jae
fldt
rorb
inc
js
je
fcomps
sub
insb
mov
sti
rcl
fwait
cmpb
pop
jne
cwtl
jg
jo
in
cmp
xchg
jmp
xchg
xorb
lret
and
stos
mov
pop
or
clc
ror
lahf
sub
mov
cmp
jp
lret
lret
dec
cmpsl
sbb
shlb
jmp
movsb
ljmp
push
insl
sbb
stc
fwait
lcall
mov
rclb
loop
pop
mov
cmp
inc
data16
pop
in
in
loope
fstpt
cmp
or
jnp
inc
cmp
cltd
pop
fcomp
add
sub
adc
je
gs
cwtl
cmp
jle
xchg
pop
mov
ljmp
xchg
pop
fldenv
btr
test
cmc
lds
pop
pop
cmp
cmp
test
sub
es
xor
cmp
popa
jmp
imul
cld
sub
jbe
jne
popa
in
mov
rolb
cwtl
cmp
sbb
push
movsl
mov
leave
add
pop
bnd
leave
pusha
daa
div
je
ret
insb
gs
xchg
xor
pop
fwait
imulb
lret
xchg
pop
aad
mov
mov
jle
gs
mov
mov
jp
ficompl
pop
push
xchg
ficompl
imul
push
xchg
fsubrl
mov
and
mov
out
push
fimull
jmp
pop
neg
ja
movsl
mov
mov
pop
sub
cmp
cmc
sbb
paddsw
jecxz
aad
mov
std
fsubrl
mov
fcmove
push
xor
ret
pop
sbb
aam
hlt
pop
mov
jne
js
jg
mov
pop
jecxz
pop
push
jae
cwtl
test
inc
nop
mov
pop
popf
xchg
movsb
outsb
test
cs
js
pop
mov
cmp
fs
xor
inc
xchg
pop
mov
daa
cmp
sbb
jecxz
pop
stc
pop
jp
push
fwait
push
mov
adc
aam
pop
pop
xor
sbb
and
push
movsb
leave
es
call
pop
pop
sahf
ja
ror
pop
fdivrl
andb
movsl
jmp
pop
fcomps
adc
pop
rolb
xchg
cwtl
pop
dec
nop
xor
jae
or
sub
inc
and
sub
cmp
inc
aad
push
cmp
mov
test
adc
or
or
nop
out
xchg
pusha
out
pop
enter
fcoml
pop
add
test
in
mov
ljmp
adcb
rcrb
mov
dec
enter
mov
ljmp
adc
jo
inc
pop
add
popa
loop
out
dec
mov
cmpsb
add
fwait
ljmp
sbb
pop
into
xor
std
pop
insb
test
sbb
mov
mov
ja
loop
inc
popf
sbbb
xorb
mov
loopne
lret
test
pop
loope
jnp
jle
xchg
lods
sbb
pop
adc
fwait
mulb
pop
fcoml
xchg
jo
sbb
pop
push
repz
xor
pop
xor
gs
adc
xor
leave
aas
push
jecxz
and
stos
mov
cmpsl
fstpt
mov
cld
pop
ss
das
test
dec
movsb
mov
cmpsl
sub
pusha
mov
pop
sub
push
jge
pop
sub
fs
cmp
xchg
and
push
shrl
fsubl
xchg
jb
ljmp
sbb
dec
xor
movsl
leave
pop
inc
ss
fs
mov
out
cmp
rcr
push
push
cs
adc
in
mov
aad
sbb
add
or
sub
iret
cmp
cmp
jae
adc
pop
jno
aas
mov
cld
lods
jmp
and
repz
jae
jo
cmp
sbb
inc
stos
in
pop
cmp
push
daa
cltd
pusha
popa
pop
stos
cmp
jae
fidivs
das
cmp
mov
call
lcall
inc
sarb
and
sbbl
dec
adc
popf
mov
push
fucom
lahf
mov
imul
lods
mov
std
in
arpl
fwait
or
xor
xchg
imul
fistl
push
outsb
xchg
ret
cmp
lds
ret
sub
pop
js
mov
pop
mov
add
stos
pop
mov
mov
js
stos
add
out
pusha
aas
jne
cltd
movsl
mov
adc
push
push
adc
mov
jb
xor
inc
loop
mov
rcrl
push
mov
mov
mov
aad
repz
and
sub
and
xchg
cmp
dec
in
mov
cmp
add
mov
jno
pop
movsl
pop
ret
fs
sahf
int3
push
pop
xor
loope
or
in
mov
pushl
dec
pop
sub
ficomps
pop
cmc
cmp
mov
jae
loop
xorl
jb
call
push
inc
push
out
scas
mov
cltd
pop
xchg
fwait
dec
test
pop
jns
add
iret
inc
jecxz
cltd
xor
inc
xchg
push
and
push
icebp
lret
xor
dec
mov
rcrb
pop
aam
adc
imull
pop
insl
or
pop
push
lock
mov
jno
pop
aam
int
fwait
adc
pop
movl
rol
scas
cmc
cld
push
xor
cltd
popa
dec
jp
and
sub
call
pushf
jo
pop
rclb
inc
jge
fdivl
bound
dec
pushf
xchg
out
inc
cltd
mov
jo
iret
stos
fadds
and
out
mov
push
rcl
outsl
shl
push
jmp
pop
sbb
xchg
jbe
pop
and
lock
clc
or
pop
cmp
pop
ja
jnp
imul
cmpsb
lds
fsub
pop
xor
mov
outsb
mov
mov
jne
imul
and
xorl
lahf
pop
fldl
dec
data16
mov
sub
pop
lret
or
pop
xor
mov
lret
pop
sub
mov
aad
int
fwait
xchg
sbb
cmc
push
pop
sbb
shll
jl
cwtl
and
into
movsb
pop
pushf
dec
insb
jne
xchg
adc
arpl
pop
cmp
add
sti
push
mov
dec
mov
stos
ljmp
xchg
cli
jmp
cltd
pop
rorl
mov
aas
inc
negb
cmp
sbb
mov
fs
push
xor
jle
jecxz
sub
pop
jno
movsl
jmp
lret
lcall
push
dec
mul
mov
inc
call
pop
jp
adc
jne
aad
inc
fstl
inc
mov
jnp
pop
icebp
punpckhwd
divb
push
pop
push
inc
loop
ficomps
pop
cmc
mov
pop
jb
je
sub
scas
test
test
shlb
cmpsb
and
fdivs
xor
pop
lcall
stos
pop
pop
je
std
in
xchg
jecxz
sbb
movb
cli
sub
in
pop
pop
int3
push
daa
out
cmpl
sub
jno
sbb
cmp
and
test
sub
sar
mov
loope
dec
and
ficompl
pop
add
push
enter
or
ret
scas
inc
out
mov
int3
dec
sub
or
je
dec
mov
loope
adc
pop
pop
jb
push
cld
mov
jne
hlt
dec
pop
mov
fistpl
lods
mov
pop
call
inc
outsl
int3
pop
sbb
lret
adc
aaa
lahf
in
xlat
pushf
lahf
fldenv
cpuid
jns
imul
add
dec
insl
aaa
jl
push
cwtl
pop
shl
scas
jmp
pop
xchg
mov
ss
add
cmp
fdivrs
pop
pop
fisubrs
add
addl
pusha
pop
jecxz
lcall
sbb
out
xor
push
in
js,pt
test
push
inc
dec
test
pop
hlt
js
scas
jae
test
and
outsb
fistps
cwtl
push
dec
imul
jnp
mov
addl
stc
mov
hlt
push
lret
fstps
std
jp
pop
mov
imul
pop
dec
mov
sbb
pop
je
stos
ret
fwait
rcrl
dec
mov
sub
aam
pop
lods
pop
jmp
sbb
mov
mov
ja
sub
cmp
fbld
pop
daa
push
loopne
mov
lahf
add
or
pop
out
sub
rorb
add
cmpsl
loopne
pop
adc
mov
pop
pop
push
fistl
out
xchg
pop
orl
and
ret
push
out
mov
mov
pushf
pop
and
jno
jecxz
fucom
pop
data16
sahf
fwait
cltd
mov
andb
add
leave
mov
sbb
gs
jae
aam
mov
rcrb
out
push
lods
loop
leave
iret
xlat
mov
inc
inc
or
shr
mov
pop
pop
push
cli
lods
inc
lds
insb
adc
sub
std
xchg
aaa
nop
mov
pop
cwtl
cmp
mov
lds
mov
pop
cmp
out
xchg
cld
push
cmp
and
sbbb
lock
xchg
pop
sub
mov
pop
ret
es
pop
sbb
popa
stos
lcall
push
push
mov
outsb
sbb
clc
or
jb
in
cmp
out
push
mov
jge
pop
cwtl
pop
stos
aad
pop
in
mov
adc
in
in
std
cmp
int3
jle
pop
pop
lods
pop
add
fisubrs
in
pop
in
push
das
jle
inc
shr
test
adc
dec
sahf
aas
mov
fadds
insb
into
mov
movb
shrb
call
push
mov
movsl
mov
mov
jge
scas
jg
xchg
and
pop
jle
mov
mov
pop
loopne
sbb
cmp
xor
cmc
pop
popf
xorb
pop
push
mov
pop
jg
fwait
mov
cmpsl
fstp
sbb
out
or
and
lcall
xor
sbb
mov
pop
mov
pop
jmp
mov
add
push
pop
cmovae
ss
loope
pop
push
int
int3
lahf
aad
lds
dec
cmc
mov
or
je
mov
fsubs
pop
xor
inc
sbb
adc
xchg
mov
outsb
fcomps
xor
mov
mov
ds
inc
test
pop
jo
fistl
mov
ljmp
lahf
jecxz
lods
es
sahf
xchg
fsubr
mov
mov
notb
mov
pop
adc
mov
repz
daa
in
shlb
add
mov
xchg
sahf
les
jle
sub
xchg
mov
mov
leave
fbstp
jg
stc
sarl
int3
pop
in
shl
sub
fisubrl
jle
outsl
jbe
pop
xor
pop
xor
jae
add
push
pop
mov
in
xor
mov
and
adc
scas
lods
push
jmp
mov
push
pop
xchg
movsb
mov
add
jg
pop
jecxz
push
mov
bound
scas
sub
ret
in
fcompl
loop
pop
popf
cmp
sbb
popa
fcmove
stc
xchg
pop
jge
imul
sbb
inc
xchg
pop
sub
daa
movsl
push
hlt
xchg
push
jp
nop
pop
sub
pop
pop
loopne
or
aas
ret
orl
negb
repz
jecxz
inc
movsb
sub
sub
jmp
fistpll
and
add
insb
mov
ljmp
push
call
pop
lcall
jbe
lods
jns
out
xor
push
clc
outsb
pop
xchg
and
pop
test
xchg
bt
dec
xchg
push
imul
and
xchg
call
ja
sarb
orb
xor
fcomp
adc
pop
clc
push
leave
gs
int3
ljmp
pop
pop
lret
enter
sbb
jge
mov
je
push
or
inc
xor
iret
pop
roll
pop
xor
pop
pop
lahf
call
sub
xchg
xchg
pop
jg
rcr
mov
lock
cli
inc
cmp
cmc
mov
fdivrs
and
sbb
fistps
out
mov
ficoms
pop
clc
test
lret
xor
mov
repnz
mov
insb
ret
dec
mov
pop
cmpsb
ljmp
pop
fwait
in
rcr
hlt
fiadds
add
mov
outsb
pushf
pop
in
sbb
cmp
pop
mov
or
das
je
push
mov
ja
mov
loopne
jle
mov
jge
movsl
xor
in
shrl
jmp
adc
mov
mov
subb
add
and
sbb
and
cmc
add
fiadds
add
insb
push
scas
ss
inc
cmpl
imul
in
arpl
mov
mov
pusha
arpl
cs
dec
scas
ds
fwait
dec
dec
jae
in
xchg
sbb
jns
push
sub
jb
lret
sbbl
sbb
jg
shll
es
arpl
jno
sbb
icebp
pop
pop
cmpsb
push
add
loop
sarl
mov
ljmp
clc
ret
push
pop
xchg
mov
sub
jmp
adc
dec
icebp
movsb
pop
cmp
ret
pop
mov
pop
adc
pop
out
jno
aad
add
in
xor
jns
movsl
dec
insl
or
sbb
mov
xchg
scas
inc
jae
sbb
cltd
mov
mov
push
cmp
push
pusha
pop
imul
stos
mov
loope
push
fnstcw
pop
dec
mov
loop
shrd
push
lea
adcb
mov
sbb
pop
addr16
xor
xchg
pushf
sbbb
inc
ljmp
cmpsb
iret
mov
stc
icebp
push
xor
fstp
pop
lret
in
scas
hlt
and
xchg
insb
leave
adc
sbb
pop
mov
ss
sbb
into
dec
sub
push
jecxz
cltd
movsl
xchg
jp
or
jg
adc
rol
rorl
fildll
lret
pop
mov
jbe
iret
mov
stc
idivb
into
jnp
xor
dec
xchg
add
test
xchg
pop
cwtl
fsts
lods
stos
test
je
pop
fs
gs
cwtl
ss
cwtl
sbb
scas
sbb
das
call
scas
push
mov
cmc
pop
popf
pusha
xor
xorb
cmp
aam
xlat
dec
sbb
pop
mov
cmpsl
cmp
pop
pop
pop
fisubs
out
mov
lahf
nop
test
stos
in
dec
mov
xor
lea
push
mov
clc
xchg
jl
push
xchg
mov
into
dec
lahf
jmp
loop
and
pop
pop
cmpsb
xchg
add
aas
and
dec
scas
mov
sar
jge
iret
orb
add
test
cltd
and
sbb
das
lods
fcompl
push
pop
jbe
shl
push
xchg
lret
scas
gs
pop
cmp
xchg
push
xor
clc
in
aaa
xchg
add
pop
sub
mov
mov
in
popa
pop
push
xchg
cmovnp
pop
dec
leave
loope
ret
xchg
pop
mov
adc
aas
pop
sbb
push
pop
push
push
dec
xorb
sbb
mov
lahf
pop
jno
push
cmp
and
jmp
jae
popa
popf
xor
data16
lret
pop
dec
pusha
pop
lcall
mov
adc
mov
inc
nop
dec
ljmp
sub
pusha
cli
jmp
inc
test
daa
cltd
out
pop
out
dec
cmp
pop
sbb
mov
push
test
int3
add
pop
pop
bound
xchg
adc
lahf
test
sbb
dec
arpl
pop
cltd
cmpl
cmpsl
pop
test
lret
jg
pop
jae
aad
pop
cltd
and
jnp
inc
pop
or
lea
std
adc
pop
addr16
and
daa
adc
pop
cmp
inc
pop
mov
push
jge
pop
in
sbb
cmp
cwtl
gs
mov
lock
push
mov
adc
js
into
or
pop
dec
pop
popa
mov
pop
gs
sub
dec
jae
pusha
outsb
mov
push
mov
int3
pop
adc
cmp
add
pop
popf
mov
adc
lock
cmp
into
mov
pop
xor
inc
decl
dec
and
jle
jne
adc
cs
pop
mov
dec
cld
mov
lods
cwtl
add
fwait
inc
jg
sub
push
jb
loopne
lea
sarb
pop
mov
xchg
ss
mov
das
dec
mov
sub
imul
frstor
push
sbbb
sub
mov
mov
xchg
push
mov
ja
fucompp
inc
daa
pop
mov
push
aam
jb
pop
and
pop
leave
imul
rcrb
and
push
xor
popf
bnd
pop
decb
sti
xchg
pop
rcrl
out
cltd
pop
imul
adc
rcrl
xor
jbe
scas
mov
dec
jns
add
add
push
cmp
push
sub
ljmp
lods
adc
pop
icebp
pop
push
adc
jecxz
test
in
dec
into
pop
lods
xlat
insb
mov
pop
test
cmp
pop
or
out
insl
inc
pop
stc
imulb
pop
daa
lret
add
je
loop
mov
cmp
sub
test
pop
sarb
push
jge
mov
dec
pop
jbe
test
add
filds
loopne
shrb
mov
pushf
inc
pop
sarl
negb
mov
ja
out
and
enter
mov
lods
dec
inc
iret
add
ret
mov
bound
pop
pop
and
and
pop
and
or
test
mov
jg
fists
hlt
xchg
lods
test
sbb
cmp
fdivp
mov
pop
xchg
adc
xor
je
push
clc
aad
mov
and
bound
lret
mov
add
in
mov
lock
ret
cmpsl
dec
jo
cld
pop
xlat
add
fsubrs
pop
cmp
sub
mov
xor
bound
xchg
sbb
cs
xchg
adc
jno
pop
push
ds
test
push
sahf
or
push
cltd
aas
out
mov
test
inc
cmp
mov
outsl
push
sbb
dec
adc
repnz
ret
loop
fidivrl
or
mov
leave
xchg
pop
mov
sub
sub
lcall
cwtl
gs
pop
stos
jns
xlat
mov
push
test
push
negb
stos
sbbl
and
mov
xchg
jno
shrb
js
pop
mov
mov
enter
lahf
test
bound
cmp
jo
std
les
sbb
sub
lcall
fadds
or
nop
jp
pop
daa
or
inc
popa
xchg
cmp
pop
ret
jecxz
cltd
pop
ja
test
das
leave
lahf
popf
add
mov
dec
jl
clc
xchg
cmp
std
mov
sbb
mov
fnstcw
jp
sub
cmp
or
pop
loope
icebp
pop
aas
jb
insb
arpl
sbb
pop
inc
mov
cmp
sub
jmp
out
enter
popa
pop
pop
out
mov
lods
ljmp
and
or
imul
negl
ja
jle
call
mov
push
push
lcall
ds
add
pop
cwtl
in
stos
cmp
xchg
mov
shr
pop
dec
bound
adc
pop
push
push
push
mov
pop
test
pop
pop
iret
fbld
mov
add
mov
jle
subl
push
mov
sub
fs
cwtl
enter
fdivrs
push
mov
mov
sub
into
and
jecxz
xchg
lea
sarl
or
out
loopne
scas
push
fwait
insb
pop
mov
sub
imull
cmpsb
pop
mov
sub
jmp
add
shl
adc
lcall
mov
xchg
or
lret
insl
lds
sub
or
bt
lock
leave
les
jbe
lahf
adc
pop
push
xchg
or
imul
dec
leave
xchg
push
or
incl
pusha
repz
loopne
mov
daa
add
fcoms
cmc
pop
fidivs
cmpsl
in
pop
stos
stc
or
cltd
iret
lods
xlat
pop
cwtl
fdivl
ffreep
adc
out
and
dec
adc
xor
jecxz
pop
pop
in
or
pop
mov
pop
nop
pop
mov
xchg
sti
or
jge
inc
fs
pop
sbb
out
pop
fwait
test
mov
jnp
iret
push
out
xor
js
mov
dec
pop
sahf
push
lods
xchg
repz
cli
imul
cmp
pop
imul
js
movsb
fcompl
int
pushf
jg
neg
roll
pop
sub
stc
daa
mov
push
sbb
pop
or
out
in
adc
popa
pop
cmp
dec
out
xchg
fwait
pusha
mov
sbb
scas
inc
dec
ret
mov
pop
inc
jnp
push
mov
popa
add
or
sar
add
pop
mov
inc
jbe
pop
add
into
pop
jle
xor
xchg
sarb
cs
adc
js
mov
mov
sarb
sbb
subb
push
inc
fsubrl
mov
and
outsl
fs
sbb
int
loop
movsb
sbb
pop
xchg
lods
das
pop
pop
incl
popf
int
out
ja,pn
mov
cld
inc
lahf
inc
mov
add
jg
je
lds
js
or
out
pop
lds
jnp
and
pop
and
ss
jne
scas
ud1
push
std
inc
lock
cli
mov
outsl
outsl
fldt
mov
adc
lcall
push
lock
pushf
push
mov
and
adc
inc
sub
or
mov
mov
ret
daa
and
scas
xor
aas
push
cltd
jnp
or
ret
adcl
lret
shll
mov
push
push
ljmp
and
adc
out
std
adc
mov
out
and
test
daa
fldl
mov
and
cmc
fstpl
cmp
or
bnd
cmp
cltd
pop
fimuls
popf
mov
push
adc
das
shll
dec
cwtl
sub
dec
dec
mov
cmp
add
or
dec
and
test
mov
cmp
call
xchg
repnz
pop
xor
cmpsl
pop
mov
mov
insb
mov
or
or
pop
pop
fs
xor
repnz
mov
out
in
popa
push
inc
push
pop
ret
inc
sahf
cmp
jnp
adc
cmp
jl
repnz
in
and
add
scas
mov
das
in
enter
pop
cs
push
sub
sub
rcl
cmp
adc
jge
and
fcompl
jmp
ss
les
outsb
pop
xchg
sub
pop
out
add
imul
inc
fnstenv
dec
add
ja
pop
imul
btr
push
fs
pop
xchg
inc
adc
lea
lods
aad
pop
movsl
stos
je
xor
pop
push
dec
test
sub
cmp
aam
sub
xchg
jmp
fsubl
xorb
sti
bound
jg
dec
adc
jns
std
jno
sahf
inc
jb
xchg
mov
repnz
mov
sti
out
stc
mov
rorl
mov
lods
pop
pop
inc
into
bound
clc
xor
cmp
mov
aas
jbe
push
sbb
sub
outsb
into
testl
pop
jae
xchg
xchg
std
pop
pop
andl
pop
stos
mov
insb
nop
push
push
inc
jle
fcomip
out
mov
cmpsb
sub
sub
add
rcrb
or
xor
dec
pop
jno
inc
fcomps
ret
ds
and
movsl
xchg
dec
nop
cli
mov
sbb
jb
pop
pushf
and
inc
mov
arpl
aas
dec
cltd
cmp
and
mov
cmp
or
pop
sti
movsb
jno
adc
subl
out
aam
into
pop
dec
shrl
aas
and
mov
inc
lods
nop
shlb
pop
fisubrl
into
in
or
pop
cmp
mov
pop
push
sub
adc
sbb
sarb
push
icebp
pop
enter
scas
cmp
jns
sbbb
and
pop
jne
xor
jge
sbb
leave
push
inc
mov
ds
mov
call
cmp
push
scas
ja
pop
jg
inc
stc
bound
jns
call
dec
aas
mov
cwtl
mov
add
or
lds
int3
xchg
pop
cmpsb
pop
add
mov
shrl
cmpb
clc
rcrb
xchg
push
fucomp
mov
add
inc
addr16
shl
push
cmpsl
and
sub
ret
int3
pop
xchg
jp
pop
into
dec
loop
cmpsl
and
xor
lock
sub
lods
fs
or
into
push
sarl
cli
add
das
movsl
mov
pushf
icebp
and
or
cld
fdivp
sbb
push
or
push
sub
daa
imul
jb
lds
mov
orb
sbb
dec
sbb
push
fistpll
mov
lods
cmp
pop
fistpl
filds
stos
mov
push
pop
popa
cmpsb
int
pop
repz
xchg
ja
shlb
call
xor
mov
pushf
fistpll
cmc
sbb
sti
add
ljmp
pop
xor
enter
cltd
cmpb
movsl
scas
push
sti
add
leave
xchg
dec
lret
pop
xchg
ret
pop
add
inc
xchg
mov
les
pop
cmp
xchg
inc
mov
sbb
shrb
mov
rcrl
or
mov
xor
jb
jo
hlt
dec
or
ljmp
xorb
int3
aaa
scas
test
and
out
pop
xorps
fiaddl
xor
sbb
mov
imul
pop
mov
add
and
out
inc
pop
bound
cmpsb
or
popf
add
mov
imul
pop
pop
fdivr
pop
push
and
pop
xchg
imul
push
repnz
jg
jp
dec
pop
lock
cwtl
dec
js
add
xchg
push
xchg
mov
sub
dec
mov
push
pop
data16
mov
ljmp
in
fistps
ret
call
arpl
sarl
lcall
xor
sub
fnsave
jns
jle
mov
hlt
jbe
and
cmp
jp
es
jb
fwait
imul
sbb
push
jmp
sub
jo
fmul
xchg
mov
data16
inc
insl
enter
mov
push
cmpsl
in
sbb
fs
cmp
sbb
repz
cmp
sbb
fwait
sub
pop
mov
mov
rcrb
jmp
add
mov
or
lcall
fstp
pop
mov
orb
pusha
pop
sub
movsl
adc
jo
dec
bound
stos
ret
cwtl
test
pop
pop
sbb
or
pop
pop
imul
out
add
lahf
out
das
jge
loopne
ja
sbb
sbb
cld
mov
or
dec
pop
lds
dec
push
ficomps
dec
testb
inc
pop
pop
mov
pop
sahf
es
fs
or
push
xchg
adc
jle
and
sbb
scas
hlt
pop
loopne
je
out
pop
push
mov
fmull
pop
fstps
int3
pushf
push
jns
pop
std
out
scas
push
adc
leave
mov
stos
dec
cltd
cmp
cmp
shr
ds
pop
xchg
xorl
les
mov
iret
out
int3
jo
mov
ds
pop
lcall
movsb
out
mov
cwtl
and
aad
jmp
and
sti
popf
movsl
pusha
add
out
fcomps
mov
mov
pop
fnstsw
adc
movsb
pop
aad
ds
pop
loopne
pop
add
scas
adc
dec
jp
fwait
std
sbb
pop
sbb
sahf
pop
inc
fwait
or
or
mov
push
mov
gs
pop
xor
mov
xor
xchg
pop
sbb
pop
lods
mov
adc
stc
sahf
aas
push
lea
push
mov
xchg
enter
pop
xchg
hlt
lods
shlb
fiaddl
aas
xor
cli
or
adc
sti
pop
xchg
inc
push
shrl
pushf
or
pop
and
inc
inc
pop
mov
xchg
aad
enter
les
pop
push
mov
push
push
outsl
push
pop
dec
or
dec
cmp
mov
adc
negl
push
out
adc
inc
ds
mov
mov
sbb
inc
scas
xorl
js
pop
out
int
dec
mov
cltd
pop
mul
inc
lea
push
mov
mov
dec
mov
adc
icebp
mov
inc
jns
mov
dec
in
xor
pop
jecxz
repnz
divl
outsb
sbbl
enter
pop
adc
dec
add
ret
adc
jbe
std
inc
dec
int
pop
xor
cmpb
pop
scas
jne
sahf
jae
cmp
pop
xchg
dec
mov
xlat
cwtl
in
lcall
fldcw
adc
push
dec
loope
enter
test
mov
push
lods
pusha
dec
negb
in
jp
add
mov
mov
leave
lock
xchg
inc
push
bound
mov
push
mov
aaa
cmp
pop
in
stos
jge
adc
fistps
jle
mov
insl
or
outsl
mov
sub
pop
lret
sub
jmp
out
mov
mov
dec
xchg
push
adc
sbbb
scas
add
pop
adcl
lods
incb
mov
dec
jo
ficompl
cs
nop
cmp
ja
lret
dec
int
mov
fwait
testb
mov
call
mov
or
jmp
pop
mov
and
pop
lock
and
shll
push
in
xor
sbb
movsl
leave
or
cmp
jns
movl
clc
mov
aam
lret
add
mov
cmp
into
call
inc
arpl
fmulp
lods
in
out
out
sarb
xchg
int
jo
jge
sub
repz
pop
aam
inc
cli
pop
mov
icebp
cmp
or
mov
inc
push
mov
cmpsl
adc
call
lahf
movsb
lea
cmp
xchg
fcmovu
mov
xlat
adc
xor
mov
sahf
sbb
jl
sarl
cmp
xchg
pop
mov
pusha
addr16
push
sti
pop
rorl
fwait
lahf
or
mov
test
aaa
stos
mov
sbb
dec
jne
xchg
sub
xor
push
scas
xchg
test
mov
cmp
inc
in
pop
pop
pop
sar
cld
add
stc
pop
and
test
es
popa
pop
stos
mov
jecxz
and
cld
insb
clc
mov
pop
mov
mov
pop
cmp
enter
jmp
lods
dec
push
cmp
jg
inc
pop
into
insl
cmp
mov
cltd
sbb
xchg
enter
xor
sbb
pop
mov
les
dec
add
sub
sarl
stos
js
push
int
pop
pushf
dec
xor
jbe
and
xor
push
mov
pop
fidivl
inc
in
gs
inc
fistpl
pop
mov
add
insb
fbld
ret
add
push
ss
test
inc
js
dec
stos
icebp
jne
fldcw
lahf
jb
nop
ficompl
mov
inc
cli
pusha
xchg
dec
cmpsl
pop
repnz
aad
push
mov
fbstp
push
inc
sbb
pop
aam
test
pop
add
fwait
cmp
out
add
inc
mov
inc
fcoms
or
inc
popf
pop
test
bound
pop
push
fdivp
inc
inc
addb
data16
xor
sbb
mov
mov
ficoms
aad
movsl
sbb
pop
cs
pop
roll
mov
and
arpl
into
jecxz
push
mov
lock
adc
pop
bound
push
into
pop
push
xchg
jae
xchg
pushf
out
outsb
ja
and
fwait
pop
into
ret
ljmp
jecxz
test
sbb
pop
cmp
push
out
pop
mov
pop
das
int3
scas
sti
xchg
mov
push
xor
fwait
inc
test
push
aaa
enter
mov
fstps
xor
aas
push
fs
sahf
dec
mov
mov
out
pop
test
dec
lea
or
out
je
ja
mov
shll
push
jecxz
jne
pop
test
stc
cmc
mov
flds
lcall
outsb
jle
inc
xor
mov
daa
push
negl
or
fdivr
mov
lahf
dec
popa
cmpl
js
sbb
ds
adc
cmp
add
xor
rcrl
ficoml
push
add
push
insl
pop
scas
pushf
and
pop
aad
outsb
test
aam
or
dec
sbb
mov
stos
pop
cli
addl
adc
pop
xchg
movsb
ror
daa
jge
in
pop
popa
xor
mov
outsl
pop
in
jb
mov
sti
pop
sbb
int3
pop
pusha
pop
pop
jb
xor
push
call
hlt
or
mov
aaa
mov
inc
mov
lcall
inc
jnp
sbb
pop
cltd
adc
push
stos
fwait
lahf
mov
lods
push
inc
loopne
fidivrl
fs
popa
and
cmp
test
data16
fimuls
fs
into
mov
notb
mov
ret
dec
aam
std
fdivrs
adc
mov
ret
cmp
je
imul
xchg
call
cmp
dec
cmp
mov
out
leave
fnstsw
jno
or
out
lea
xchg
inc
or
loopne
sub
mov
mov
push
pop
jne
xor
jo
xor
sbb
ljmp
lcall
enter
or
insl
imul
inc
xchg
lret
pusha
lds
cltd
mov
shl
cld
fs
adc
stc
stos
xchg
mov
xchg
les
pop
pop
adc
aad
adc
enter
inc
push
out
lahf
into
jns
lods
adc
sbb
mov
cli
es
jo
pop
jmp
inc
inc
sbb
cmp
mov
ret
push
popf
xor
mov
lods
neg
enter
cmp
and
pop
test
lcall
fisubl
cmp
sbb
fnstenv
pop
push
pop
sbb
imul
ss
add
or
mov
mov
flds
dec
in
repnz
sti
xor
sti
ljmp
test
fidivrl
fwait
in
mov
stos
pop
mov
lock
popl
push
scas
cmpb
lret
lock
hlt
add
mov
cltd
mov
adc
adc
adc
xchg
leave
negb
lahf
stc
mov
sub
jmp
mov
pop
xor
daa
stos
pop
jg
fwait
pop
inc
in
inc
es
add
adc
je
lods
cmp
ljmp
jmp
or
push
imul
jp
mov
sbb
into
sub
jo
movsl
jge
iret
mov
and
fstpt
out
dec
fwait
or
jo
icebp
ljmp
dec
lods
maskmovq
notl
sbb
sbb
aaa
js
mov
dec
mov
jl
clc
inc
pusha
scas
aaa
pop
aam
xor
mov
lcall
and
xchg
pushf
lret
out
pop
pop
mov
adc
sbb
jg
jge
xchg
faddl
jge
cli
jmp
cmp
and
inc
sub
pop
push
ss
arpl
adc
xor
nop
xlat
jle
outsl
repnz
shl
pop
bound
movsl
jmp
addr16
cltd
mov
mov
dec
push
ficomps
adc
pop
hlt
in
pop
scas
xchg
cld
pushf
jae
jno
pop
sub
jo
sub
cmp
cmp
and
popf
mov
pop
dec
jnp
aaa
cmp
sbb
push
pop
out
lock
inc
in
mov
popa
incb
clc
aad
pop
sahf
mov
lret
inc
jo
mov
pop
outsl
mov
pop
out
xchg
jecxz
sbb
pop
cmp
lret
lahf
sbb
mov
inc
cs
pop
hlt
fdiv
sub
mov
mov
cmp
mov
mov
cmc
and
pop
mov
mov
ficoml
jecxz
mov
sub
movsb
xchg
mov
mov
shrl
jecxz
les
out
nop
pop
dec
int
inc
lret
jg
test
and
pop
loope
xor
mov
sbb
mov
scas
jb
adc
or
mov
adc
fidivl
fistpll
sbb
enter
js
mov
mov
sarb
jge
sti
lcall
popa
add
data16
sbb
dec
ljmp
sub
outsb
lret
in
ds
fidivs
xchg
pop
call
lods
jp
mov
mov
out
push
adc
xchg
lahf
push
pop
popa
or
mov
ss
add
xchg
lock
push
xor
lahf
mov
lea
cmp
cli
inc
loopne
iret
js
fdivp
xor
stos
pop
jmp
inc
mov
nop
xor
mov
ds
xchg
in
mov
pop
pop
aaa
inc
adc
adc
jg
fcmovb
sbb
ds
sar
cwtl
stos
cltd
stos
call
loopne
pop
lahf
subl
bound
ret
pop
fidivrl
add
cmp
and
pusha
ficompl
sbb
sub
iret
push
inc
pop
stos
stos
cmp
loope
mov
push
fistpl
ret
inc
adc
dec
cmp
out
js
mov
xchg
dec
and
sbb
xchg
ret
adc
imul
jns
lea
insl
scas
mov
dec
andb
call
cmp
cmpl
jecxz
movsb
pop
mov
sbb
out
das
pop
adc
sbbb
ja
xchg
sbb
push
nop
lcall
mov
rep
push
in
pop
mov
pop
xchg
push
rcrl
loop
or
lods
cmp
cmc
scas
rcr
pop
fildll
das
cld
je
dec
and
jl
or
lcall
ret
pop
dec
pushf
inc
sub
lock
sbb
loopne
mov
in
and
xor
dec
rcll
mov
stos
leave
std
mov
jb
cmp
insb
pusha
lret
mov
cmp
sahf
mov
mov
or
fsubrs
into
dec
imul
fimull
mov
jp
xor
adc
push
mov
in
cmp
ret
test
testl
fldcw
test
test
frstpm(287
dec
sub
and
mov
aam
cmp
leave
add
flds
imul
add
inc
fimull
cmp
popa
in
movsl
js
clc
jge
sbb
rorb
add
adc
loop
xchg
clc
fcomip
lea
dec
fisubrl
pop
mov
out
test
das
es
popf
cmc
dec
adc
pusha
lret
fnstsw
inc
xchg
inc
pushf
mov
dec
and
icebp
bnd
jmp
fsts
jge
jmp
sbb
inc
sbb
inc
adc
or
jl
pop
push
outsl
sbb
rcrl
sub
shl
cwtl
pop
fdivs
decl
push
pop
mov
or
dec
cmp
test
sbb
pop
gs
mov
pop
popf
icebp
sbb
mov
and
addr16
or
push
push
insl
xchg
enter
xor
pop
push
add
inc
push
sbb
jp
movsb
pop
repnz
daa
jnp
ficomps
jg
loopw
push
pop
dec
test
ret
push
pop
pushf
mov
std
lcall
sub
in
xor
mov
lods
cmc
jecxz
xchg
mov
orl
inc
pop
mov
lods
cmp
adc
pop
inc
xor
jecxz
and
pop
mov
adc
jecxz,pn
incb
pop
enter
popa
les
rcrb
out
iret
sbb
sub
test
and
dec
pop
cwtl
pop
lret
mov
sbb
dec
xor
pop
xchg
int
nop
ss
cwtl
loopne
push
pop
lcall
test
pop
inc
cmc
sbb
push
data16
dec
rcrb
sarl
insl
jnp
mov
loopne
mov
adc
or
fs
imul
pop
stos
cs
daa
xchg
add
mov
pop
xchg
add
mov
mov
pop
popf
in
sub
xor
in
loop
call
dec
or
movups
aas
sub
dec
mov
fidivrl
or
adc
mov
adc
add
filds
pop
inc
pop
lcall
fwait
adc
arpl
push
sbb
mov
pop
or
ljmp
ret
stc
inc
stos
in
pop
movsb
add
fmull
sarb
cwtd
push
stos
xchg
gs
push
adc
add
inc
es
shlb
mov
sbb
adc
or
loope
ficoml
cli
mov
pop
xchg
and
mov
xchg
add
pop
test
dec
pop
push
jle
add
fsubs
xor
jno
sbb
sbb
mov
shr
xor
bound
cld
lods
jb
aam
dec
pop
test
mov
xchg
scas
inc
test
jno
push
stc
dec
pop
daa
pop
pop
and
cmp
sub
arpl
dec
loope
ret
in
sbb
push
popl
pop
xchg
inc
mov
les
fidivrl
pop
pop
out
sbb
int3
mov
stos
fmuls
sbb
ficomps
mov
mov
dec
inc
in
bound
mov
popl
cmpsb
cmpsl
adc
jo
push
xchg
jg
repz
inc
dec
pop
aad
xor
js
mov
pop
into
imul
arpl
and
imul
add
loop
or
mov
gs
pop
pop
rorl
mov
jecxz
mov
leave
fcmovne
ljmp
mov
aaa
shrb
jmp
pop
lods
out
dec
mov
mov
rolb
pop
jmp
adc
mov
mov
aas
pop
jo
cmp
push
xchg
xchg
mov
adc
mov
cmp
mov
pop
inc
xor
int
adc
lahf
rol
xchg
cltd
pop
pop
bound
and
push
cmp
imul
jmp
and
push
xlat
pop
out
sub
loop
leave
les
in
in
iret
push
sbb
mov
or
dec
sbb
mov
lock
sahf
sub
inc
aaa
jl
mov
push
cwtl
fwait
jmp
mov
pop
push
or
sti
push
scas
mov
inc
lods
jl
mov
mov
add
cli
cmc
sub
sti
in
pop
rcrb
scas
aam
pop
rorb
pop
icebp
mov
pop
pop
mov
or
sub
mov
ret
enter
push
insl
pop
push
je
pop
les
clc
pop
lcall
and
shlb
jle
cli
mov
dec
cltd
lahf
dec
fcoml
ss
pop
mov
scas
adc
cli
cld
scas
push
adc
jbe
mov
pop
scas
ss
jmp
sbb
mov
pop
or
movsb
arpl
mov
sbbb
jnp
bound
sbb
je
pop
test
mov
pop
fmuls
or
lds
push
mov
cmpsl
insb
jno
xor
inc
repz
movsb
or
pop
mov
lods
jo
pop
std
aaa
cmp
mov
xor
dec
int3
mov
cmp
popf
fadds
mov
cmp
jb
mov
adc
mov
lret
xchg
movsl
int
sti
pop
int3
sahf
and
gs
sbb
ficompl
jno
add
adc
outsl
pop
fcmovu
cmp
cmp
mov
icebp
sbb
sar
fstl
jo
sahf
sbb
inc
adc
cwtl
in
xchg
jae
sub
addl
adc
or
lds
inc
xchg
in
mov
push
cmp
sbb
and
clc
jnp
test
aas
cwtl
shlb
pop
test
dec
scas
push
fimull
and
je
repnz
push
ret
hlt
ficoml
inc
imul
pop
les
inc
js
jbe
xlat
mov
out
data16
xor
pop
pop
mov
xlat
mov
or
jne
aas
inc
cwtl
pop
sti
adc
daa
mov
jle
cld
sbb
mov
scas
out
test
jp
inc
cmp
pusha
push
jbe
out
xor
je
add
jp
lahf
inc
pop
pop
ds
and
push
cld
jne
pop
mov
mov
or
jb
movb
mov
cmp
adc
pop
add
mov
roll
push
das
jb
insb
pop
inc
cvtps2pd
lods
mov
ss
sub
pop
xor
or
scas
scas
mov
cmpsb
sbb
mov
ret
pop
sub
push
jno
inc
lahf
dec
popf
cs
and
ljmp
stos
pop
xor
mov
fcomi
or
inc
sahf
movsb
pop
sbb
out
aad
and
cmpsb
mov
push
mov
mov
out
pusha
mov
addr16
mov
addr16
mov
mov
sbb
cmp
enter
loope
outsb
and
and
in
pop
lods
mov
mov
addl
sub
jge
std
mov
sbb
push
jg
pusha
dec
mov
mov
rcrb
lahf
mov
add
divb
addr16
sbb
pop
dec
icebp
fstl
arpl
mov
sbb
jp
mov
mov
out
mov
add
rcrl
xchg
sbbb
jne
mul
fdivl
mulb
adc
or
pop
mov
jnp
cmp
push
lods
faddl
fistpl
sbb
fnstcw
mov
xor
sbb
call
push
mov
mov
xchg
pop
in
leave
xchg
add
xchg
pop
adc
lods
cmp
jbe
ret
adc
mov
push
js
sub
pop
lahf
lock
pushf
adc
jge
pop
rorb
in
add
mov
sbb
push
dec
out
ljmp
dec
cltd
test
mov
aas
ss
stos
pop
addl
es
cmc
mov
and
push
cld
sarl
xchg
pop
int
dec
out
subl
scas
mov
inc
mov
addb
dec
call
sub
pop
sbb
ja
pop
mov
jb
icebp
xchg
popa
sti
pop
out
das
mov
jae
fadds
outsl
and
out
pop
pusha
dec
xor
adc
dec
jp
lahf
mov
cmp
fnstcw
pop
fsts
out
adc
pop
cmp
gs
jle
hlt
pop
lods
ficoms
repz
mov
jns
jbe
loopne
jmp
xor
mov
pop
enter
sbb
sbb
sbb
aad
out
add
dec
and
lea
daa
addr16
rcr
pop
leave
mov
and
out
xchg
in
mov
lcall
cmp
mov
sbb
int
rcrl
adc
mov
xchg
adc
mov
adc
pop
shl
sub
inc
jb
pop
xorb
popa
add
sub
enter
cmp
popa
loope
xchg
xchg
dec
fadds
js
movsl
dec
fwait
sbb
cmp
pop
jge
xor
fisubrl
mov
shlb
dec
pop
bound
outsl
pop
frstpm(287
nop
cli
int
cltd
test
inc
jge
inc
pop
jp
aas
sbb
in
jno
sbb
movsl
mov
adc
pop
fcomi
jns
jo
cltd
lods
and
gs
je
rorl
and
pop
insb
add
lock
mov
loopne
adc
or
mov
icebp
pop
daa
movsb
es
and
push
ja
out
cmp
push
lock
or
pop
shlb
or
dec
hlt
jae
shr
out
lcall
lods
lret
xchg
cmc
fldenv
sbb
cmp
jge
lahf
mov
in
cltd
and
mov
fdivrp
pop
add
pop
add
xchg
sbb
pop
pop
and
leave
adc
jmp
pop
xor
imul
inc
es
pop
adc
and
test
inc
xlat
fs
pop
mov
jmp
adc
inc
push
and
pop
add
arpl
mov
jnp
popa
jns
shrl
cmp
mov
stos
pop
call
mov
popf
cmpsl
mov
fcoms
lret
inc
pop
mov
push
or
or
les
push
mov
xchg
std
mov
popa
ficompl
jnp
sahf
cmp
in
or
repnz
clc
in
jbe
inc
adc
xchg
mov
das
push
xchg
pop
jmp
jo
negl
cltd
imulb
outsb
xor
mov
jns
je
icebp
clc
pushf
cmp
pop
loope
push
jp
push
mov
cltd
push
ljmp
shrb
or
mov
lods
pop
dec
dec
repnz
mov
pop
mov
push
in
jo
scas
jne
loop
cmp
sbb
jecxz
xor
sbb
mov
or
pop
js
scas
je
inc
iret
xchg
jo
pop
and
push
mov
scas
dec
decb
je
xchg
js
and
daa
sub
lret
pop
inc
pop
mov
ja
or
cmc
out
pop
cwtl
and
mov
jne
xchg
out
loopne
push
jo
inc
shlb
mov
and
int3
jb
sbb
call
pop
stos
xor
pop
lods
push
mov
jecxz
mov
fs
orb
xor
cmc
sub
pop
xchg
shll
es
inc
sarl
aas
pop
xlat
sbb
addr16
faddl
popa
mov
data16
mov
lret
mov
stc
sub
and
xchg
repz
mov
or
stos
rcrl
mov
in
mov
add
roll
movsb
leave
stos
mov
jne
fisttpll
mov
and
popa
or
inc
sbb
je
cmp
pusha
call
dec
push
xor
xchg
out
sbb
inc
xchg
hlt
mov
or
pop
xchg
fwait
push
add
sbb
sbb
pop
jmp
or
fcmovnu
movsb
lret
leave
mov
mov
imul
ljmp
jg
sbb
mov
cmp
pop
cltd
rcll
js
fisubrl
dec
push
cmp
out
sub
ljmp
fidivl
pushf
pop
outsb
add
test
cmp
add
xor
out
xchg
xor
jle
lds
xchg
test
add
iret
adc
cltd
lock
dec
loop
fcomps
adc
sub
sub
lahf
cmc
lods
dec
ret
pop
dec
pop
fisubrl
es
icebp
fwait
in
ret
imulb
inc
inc
dec
xlat
or
into
out
jns
inc
pop
jbe
mov
xchg
adc
nop
sahf
cmp
mov
imul
push
arpl
ret
inc
xchg
dec
lds
jmp
fimull
mov
cmp
push
pop
fcmovbe
sbb
leave
dec
jns
test
outsl
cs
fsub
mov
jne
test
imul
jle
mov
or
in
pop
jl
insl
popf
stc
in
pop
aaa
adc
or
idivb
cwtl
lods
dec
push
lea
inc
sub
jge
add
xchg
imul
pop
xchg
enter
xor
nop
pop
jb
std
add
orl
sbbl
xchg
sub
js
sbb
insb
fdivrs
mov
push
ret
loop
push
movsb
ljmp
pop
loope
mov
mov
jle
stc
mov
pop
mov
mov
xchg
stos
pop
ficoml
loop
stc
push
dec
mov
mov
fisubl
test
in
add
pop
inc
push
mov
sbb
sbb
pop
mov
pop
and
jge
dec
out
xor
mov
xor
cmp
clc
sub
or
mov
and
sarl
clc
pop
aas
xchg
loopne
rcrl
inc
xchg
pop
lret
sub
mov
aaa
out
scas
push
mov
clc
mov
jp
and
into
inc
add
jnp
les
push
dec
scas
insl
mov
mov
pop
sbb
xor
sub
mov
pop
dec
push
sbb
lret
pop
cli
jne
clc
xor
and
ficoms
test
movnti
adcl
sti
add
mov
xchg
jle
out
fsubr
dec
dec
jge
fnstenv
xchg
xlat
pop
push
mov
mov
lret
ret
ljmp
pop
pop
mov
pop
xchg
cmp
mov
mov
arpl
mov
repnz
addr16
dec
mov
es
imul
outsl
mov
mov
js
push
stos
sub
pop
push
jns
mov
stos
push
adc
std
fwait
les
adc
aaa
xchg
xchg
dec
pop
pushf
and
dec
mov
add
dec
mov
xchg
outsb
pop
pusha
lods
pop
in
pop
pop
fcomps
sbbb
iret
pop
and
xchg
mov
jl
fnstsw
mov
adc
dec
mov
call
test
inc
sub
mov
dec
push
jo
pusha
incl
ljmp
aaa
lahf
pop
push
inc
xchg
lods
pushf
sbb
xlat
imul
int
add
loopne
or
jns
pop
aad
addr16
fldl
sbb
test
out
push
push
into
jmp
adc
dec
sub
outsl
cmpsl
imul
aaa
sbb
inc
scas
in
pop
ret
cmp
sbb
jmp
fwait
insl
and
dec
lea
mov
cli
pop
lds
mov
or
sub
dec
pop
std
mov
mov
outsb
xchg
add
cs
inc
jne
and
insb
scas
js
jno
dec
divb
dec
pop
jg
sbb
enter
and
add
mov
cld
popf
pop
out
cmpsb
inc
lea
dec
pop
or
out
fisttpll
push
mov
fwait
rorb
insb
and
in
adc
out
cmc
or
pop
sbb
and
jno
cmp
pop
inc
dec
outsb
imul
xchg
popa
pop
fisubrl
xor
cmc
pop
insb
adc
sbbb
mov
imul
jl
adc
dec
enter
ret
andb
data16
push
sub
insl
mov
repz
mov
pop
mov
lahf
cmp
cmc
sub
mov
push
xlat
push
out
push
mov
add
scas
mov
aas
or
mov
lods
xchg
xlat
or
mov
add
les
pop
pop
adc
mov
mov
out
pop
je
and
andl
pop
out
pop
xchg
test
or
pop
inc
push
and
lods
pop
inc
or
sub
dec
jb
mov
pop
out
push
imul
xchg
mov
jb
xor
rol
pop
inc
add
fistpll
loopne
pop
cmc
pop
popf
dec
pop
inc
xchg
bound
arpl
inc
jl
pop
movsl
mov
les
pop
testl
mov
pop
sub
push
inc
xchg
jae
pop
dec
and
jl
mov
sarl
cwtl
jg
movsb
pop
fnsave
push
adc
adc
pop
xchg
bound
out
mov
pop
mov
jl
adc
subl
pop
pop
stc
add
push
pop
or
mov
push
jns
sub
test
stc
roll
iret
stos
stos
les
cmpsb
je
pop
push
cmovae
cwtl
fwait
sti
lret
pop
or
mov
lods
rorb
mov
aaa
fwait
dec
jae
pop
and
mov
pop
cltd
cmp
mov
dec
xor
inc
ret
mov
xorb
adc
sbb
fdivl
xchg
das
jecxz
xchg
pop
cli
and
mov
push
mov
add
lahf
lret
rclb
ja
cmpsb
mov
lea
repz
in
loop
outsb
sbb
pop
faddl
scas
cmp
pop
in
add
fbstp
iret
pop
cld
jp
mov
lret
pop
adc
divb
dec
sub
hlt
pop
or
lahf
mov
and
jbe
pop
jmp
pop
daa
sar
ds
scas
sbb
movsb
enter
insl
push
mov
mulb
shlb
pop
rcr
adc
insl
xchg
pop
repnz
jp
pop
cld
cmc
loope
pop
dec
orb
push
xchg
rcrl
jecxz,pt
and
sbb
push
outsb
push
call
lods
pop
bound
pop
xor
dec
gs
mov
mov
mov
pop
mov
pop
mov
ds
shll
cli
pop
sub
mov
pop
movsb
test
andb
adc
mov
pop
and
jecxz
adc
pop
jne
jno
pop
loope
add
xchg
pop
loopne
lret
ja
and
pop
rolb
insb
sarl
pop
jmp
xchg
dec
outsb
test
mov
fbstp
mov
pop
and
bound
fs
or
jns
into
shll
mov
jne
popa
sub
jbe
pop
pop
add
arpl
cmp
pop
cmpsl
ds
addps
add
dec
push
dec
push
pop
mov
jmp
add
loopne
mov
es
mov
nop
sub
mov
outsl
fwait
cwtl
push
pop
xlat
sub
mov
movsb
loopne
inc
xor
test
mov
shl
sarb
sbb
pop
adc
push
lods
mov
popf
scas
gs
int3
pop
out
mov
imul
into
mov
mov
pop
enter
pop
xchg
jp
mov
gs
xchg
jo
mov
pop
sbb
js
shlb
arpl
xorl
mov
loopne
mov
insb
sub
dec
lret
subl
scas
roll
sub
xchg
call
pop
add
mov
mov
lods
dec
gs
js
icebp
fs
mov
add
pop
int
shll
xor
mov
mov
in
jecxz
lret
pop
je
inc
icebp
jbe
cmc
pop
push
stos
jno
pop
xor
pop
push
es
mov
inc
sbb
pop
push
or
daa
inc
mov
pop
adc
mov
sarb
pop
dec
test
pop
repnz
int3
pop
push
mov
pushf
testb
mov
rolb
pop
into
bound
dec
pop
xchg
jecxz
push
mov
loope
jno
lahf
mov
mov
cmp
sarl
popa
sbb
daa
mov
fadd
add
iret
pop
popa
in
xchg
inc
fists
pop
cld
pop
xor
ss
cltd
fsubrs
nop
icebp
mov
leave
lds
sti
cwtl
or
inc
xchg
dec
mov
mov
movsl
fidivrl
mov
mov
fdivrs
cmpsb
lods
pop
push
xchg
push
mov
mov
jl
loope
ja
pop
pop
mov
mov
pop
mov
sti
push
out
fnstcw
stc
lds
push
mov
push
incb
sbb
bound
fisttpl
push
xor
outsl
cltd
lret
jp
sub
sbb
subb
mov
out
enter
in
mov
push
ss
sub
mov
jg
cmpsb
inc
iret
ja
pop
sahf
outsl
fdivs
push
xchg
xor
pop
mov
aaa
jg
pop
sahf
cmpsl
mov
fwait
lds
dec
mov
mov
mov
ja
mov
jg
add
adc
cmp
xchg
pushf
mov
dec
adc
add
jp
dec
pop
fs
fmull
rcrl
pop
cs
cltd
pop
adc
mov
xorb
push
lods
repnz
dec
push
jmp
aad
adc
stc
adc
addr16
scas
push
cld
or
rcll
nop
jns
sbb
sub
pop
add
mov
mov
cmp
pop
outsb
jp
jo
pop
clc
aad
xor
jne
mov
aam
scas
ja
test
sbb
shlb
test
jnp
sarl
add
pop
xadd
aam
sub
in
fwait
or
add
rolb
fcompl
repnz
push
cmp
pop
pop
inc
mov
scas
scas
jnp
pop
sbb
cltd
stc
jno
or
in
xor
lcall
mov
add
pop
into
mov
or
inc
out
inc
mov
adc
js
pop
sahf
jbe
push
fwait
lock
add
xchg
adc
pop
enter
lds
mov
out
dec
push
lret
pop
sub
js
or
std
ss
pop
sbb
mov
jns
mov
neg
push
sbbb
mov
xor
fisttpl
mov
ficompl
in
mov
mov
loop
cld
sbb
sbb
add
in
aaa
leave
mov
mov
lret
cwtl
cli
sahf
push
xor
mov
negb
lds
xchg
into
aad
cmc
pop
dec
pusha
adc
test
xchg
dec
push
pop
jnp
cmp
cmp
popf
sahf
sbb
std
fidivrl
jmp
stc
mov
and
mov
adc
orb
imull
ja
jl
loopne
push
jno
data16
mov
mov
pop
cmp
sbb
adc
push
mov
mov
sub
test
scas
sarb
loop
xchg
add
loopne
or
push
mov
ds
adc
pop
ljmp
cmp
aas
xor
lea
cmc
pop
push
cmp
xlat
or
ja
icebp
lret
fadd
cmp
cmp
mov
jbe
mov
mov
je
das
mov
xchg
cmp
fistpl
repz
pop
in
mov
inc
mov
xorl
sub
xchg
add
sbb
or
and
mov
pusha
sbb
lods
xlat
mov
pop
rclb
mov
pop
xor
pop
iret
or
jg
shlb
bound
adc
sahf
scas
xchg
jne
dec
fisubrl
mov
fisubrl
pop
push
or
stos
xorb
rolb
push
sahf
pop
or
loope
dec
pop
insb
xchg
test
ljmp
adc
mov
mov
xor
gs
in
daa
pop
ret
in
or
mov
lock
inc
mov
sub
or
pushf
out
pop
push
xchg
fadds
dec
fs
ret
jo
pusha
cmp
pop
bound
inc
pop
std
arpl
into
push
push
xchg
clc
push
cmp
pop
inc
scas
addb
sarb
mov
je
push
in
sbb
into
lods
pop
xor
jg
jbe
test
pop
popa
mov
lea
inc
and
xchg
mov
in
arpl
pop
jb
mov
shr
mov
pop
mov
adc
aas
fidivrl
enter
mov
fdivs
pop
sbb
loopw
mov
test
mov
js
inc
icebp
pop
cmp
dec
lods
jp
dec
out
mov
popa
xchg
call
les
pop
cmp
in
es
faddl
pushf
daa
jns
lahf
inc
add
shlb
xor
mov
pop
jnp
xchg
movsl
in
xorl
cs
bound
or
sbb
sbbb
sub
scas
dec
xor
mov
xor
fcomps
push
jmp
jecxz
dec
sub
pop
mov
lods
mov
mov
jno
rolb
fsubl
mov
jge
int3
mov
popa
sbb
xchg
push
cmp
leave
push
mov
cmpsb
mov
mov
fwait
pop
lret
cs
dec
gs
mov
out
sbb
subb
fdiv
pop
ds
pushf
jno
mov
xchg
inc
pop
divb
cli
pop
xchg
sbb
data16
add
pop
pop
fsts
lcall
xor
push
cs
push
fldt
js
enter
xor
and
test
scas
dec
or
fwait
lds
cltd
xor
test
cmc
xorb
pop
fimuls
insb
das
ljmp
int
scas
add
test
aaa
pop
stc
and
outsb
mov
jge
adc
je
repnz
push
insb
sbb
out
pop
add
call
and
loope
jecxz
sbb
add
gs
insl
outsb
xchg
out
or
ss
std
repz
mov
inc
pop
jle
repnz
mov
cmp
in
call
push
mov
in
sub
dec
inc
sbb
jecxz
xchg
insb
shl
test
arpl
dec
jo
pop
jle
leave
xor
jg
dec
mov
jnp
jbe
lcall
cmp
pop
icebp
fcomip
lds
pop
pop
push
xlat
in
mov
daa
rol
mov
xchg
pop
cmp
jno
aas
mov
pop
lret
push
pusha
and
fisubs
clc
inc
pop
int3
push
ds
lret
jno
mov
loop
mov
sub
pop
push
stos
jo
and
and
xchg
aaa
data16
adc
cmp
xor
ljmp
je
mov
pop
aam
pop
stc
outsl
sbb
cli
xor
ror
fistpll
fwait
pop
aaa
and
adc
pop
pop
mov
mov
add
inc
mov
adc
adcl
jg
out
fldenv
mov
sub
movb
sbb
stos
scas
in
jp
test
loope
lahf
repz
fldcw
pop
lods
or
pop
xor
dec
fs
xlat
xchg
pop
into
call
dec
inc
pop
sti
push
pop
cwtl
test
lret
fsubrp
cs
or
pop
je
xchg
dec
subb
pop
fcmovu
or
ja
mov
pushf
pop
sub
inc
call
mov
inc
jae
mov
and
mov
ja
adc
rcrb
popf
jne
pop
ljmp
rcrb
pop
xor
sbb
loope
shl
push
stos
and
pushf
mov
in
inc
push
mov
jno
aas
add
sub
repnz
xchg
addb
out
and
imul
mov
sbb
aam
fistpl
ror
hlt
dec
jno
mov
dec
fldt
imul
gs
inc
pop
push
mov
add
mov
decl
push
fwait
imul
insl
pop
fsubp
mov
loope
xchg
cltd
in
add
fldenv
das
pop
sbb
xor
lock
aam
xlat
cli
pop
lahf
fs
push
pop
push
test
shlb
pop
mov
add
inc
jl
pop
in
mov
or
pop
mov
pop
push
orl
shll
lret
lods
ret
imull
inc
sbb
sub
adc
sbb
adc
add
insb
ret
xlat
test
push
sub
cld
xchg
and
pop
stc
pop
push
cs
push
pop
pop
ljmp
mov
xchg
mov
adc
xchg
add
mov
outsl
dec
add
xchg
pop
jo
jb
fbstp
mov
jmp
dec
scas
les
jae
pop
movsb
pop
inc
xchg
daa
jo
dec
fmul
pop
rcrb
sub
adc
and
lahf
sbb
sub
pop
jp
aas
pop
loop
dec
pop
fstl
cld
out
pop
or
mov
aam
movsb
pop
addr16
jmp
popf
push
jns
dec
pop
mov
dec
xor
insl
shlb
pop
mov
pop
or
outsb
dec
outsb
mov
fcompl
roll
jl
js
loopne
ss
ret
jmp
mov
ja
mov
in
mov
aad
fstps
xor
pop
jns
imul
and
cmc
insl
pop
pmullw
inc
pop
cltd
mov
sub
mov
icebp
sbb
lds
mov
sbb
jp
mov
gs
mov
loopne
inc
xor
ffree
cmc
or
stos
pop
into
sub
sbb
lahf
mov
fdivrs
fcmove
jmp
cmp
repnz
outsb
dec
imul
lods
hlt
pop
pop
mov
pop
lahf
fstl
add
sti
xchg
or
adc
lods
test
or
sahf
pop
push
fisubrs
daa
push
xor
sub
jb
sbb
push
mov
pop
aad
es
jmp
xor
cld
cmc
js
add
cmpsb
in
inc
xor
mov
mov
sahf
mov
mov
scas
pop
or
mov
repz
adc
or
fstl
dec
loopne
mov
pop
mov
fs
pop
adc
lea
addr16
cmp
sbb
jns
xor
pop
fldt
jne
js
mov
push
pop
pop
out
mov
rcrl
cltd
pop
out
sub
mov
push
lret
mov
push
es
push
xor
sti
pop
cmp
and
lods
sbb
cld
scas
xor
cmp
in
mov
insb
ret
addr16
pop
fidivl
sub
pop
jns
stos
mov
loopne
mov
cmp
inc
or
add
mov
stos
mov
mov
mov
and
mov
xchg
shlb
add
jp
push
pop
sub
adc
push
and
pop
call
in
pop
xor
push
jns
adc
push
loope
leave
clc
pop
pop
sub
xchg
pop
push
out
std
cmp
xor
cli
inc
lret
jns
divb
mov
pop
aam
jnp
inc
push
sbb
popa
fs
lea
cmp
cmp
hlt
xchg
push
push
aam
scas
push
cmp
outsb
mov
fnstsw
pop
cmpsl
lea
rcrb
idiv
adc
push
dec
jb
hlt
stos
push
xchg
fwait
cld
or
andl
int3
insb
pop
pop
test
pop
pop
push
inc
subb
loopne
jne
pushf
pop
jo
fs
sub
and
xor
out
mov
fcompl
int
add
lahf
aam
insl
lea
fidivrl
enter
shl
imul
out
sarb
dec
pop
pop
mov
adc
mov
sub
repnz
repnz
lock
xchg
mov
jg
sbb
mov
outsl
stos
push
sub
mov
cmp
test
sbb
je
xchg
jmp
pop
inc
ret
push
inc
dec
push
push
ficompl
movsl
icebp
or
mov
scas
cmp
leave
mov
cmp
mov
icebp
dec
jge
fsubrl
fwait
aam
xorb
xchg
pop
cmp
mov
roll
add
add
out
pop
into
fidivrl
cmpsb
ss
fisttpl
cltd
dec
shll
sbb
mov
push
cld
pop
adc
pminub
jecxz
les
cmp
dec
stc
ficompl
les
test
mov
adc
and
in
xchg
scas
jne
andl
scas
mov
inc
mov
jb
jno
iret
inc
mov
xlat
dec
pop
jbe
sbb
stos
pop
testb
aad
daa
sbb
shlb
sbb
push
cmp
push
iret
pop
lahf
movsb
ja
pushf
es
and
lds
add
idiv
push
mov
or
pushf
pop
into
clc
cmp
mov
in
pop
dec
mov
popf
pop
sbb
test
in
leave
into
pop
pop
test
add
scas
scas
jmp
cltd
xor
pop
xor
movsb
xchg
cmp
test
idivb
mov
mov
push
inc
ljmp
pop
push
push
outsb
dec
stos
pushf
xchg
mov
or
and
xor
faddl
das
aas
cmp
sbb
mov
pop
test
mov
test
shll
jns
cmp
filds
xchg
pop
inc
or
mov
jl
nop
out
mov
addr16
jg
mov
lds
andb
sbbl
call
pop
jbe
outsl
xor
sbb
sbb
cmp
rcrl
aam
pop
daa
rep
stos
sub
lret
ret
mov
mov
fs
sahf
cwtl
pop
test
or
and
cmp
lcall
sbb
adc
repnz
add
jl
fidivrs
add
divl
inc
sub
jae
jle
pop
pusha
inc
leave
dec
xchg
inc
jp
pop
push
cmp
jg
arpl
pop
les
inc
stc
xchg
arpl
pop
enter
and
loop
ret
mov
push
mov
pop
cmp
or
arpl
pop
cmp
xchg
add
in
pop
xor
test
subb
cmp
pop
pop
sub
sub
pop
inc
mov
test
ss
lahf
in
mov
int
fs
mov
jbe
and
pop
mov
push
mov
scas
jo
iret
adc
stos
es
gs
sbb
pop
ss
sbb
cld
inc
jg
cmp
sub
add
or
aad
aas
push
hlt
leave
pop
popa
out
icebp
pop
adc
push
rcrb
sbb
inc
lret
mov
pop
jecxz
pop
xchg
mov
and
xor
hlt
fcomps
andps
pop
xor
push
xor
mov
sub
pop
push
and
pop
pop
inc
inc
pushf
imul
movsl
sahf
push
mov
cmp
sbb
mov
pop
dec
jb
fpatan
in
rorb
es
pop
insb
adc
pusha
jmp
pop
dec
cli
add
and
cltd
dec
mov
or
sbb
enter
inc
arpl
xchg
jno
pop
xchg
std
inc
and
xchg
sahf
ljmp
push
stos
pop
out
std
loopne
pop
fstl
leave
imul
pushf
rol
mov
iret
filds
add
shlb
push
xchg
int
push
push
mov
cmp
fwait
xor
into
push
or
jmp
popa
sub
leave
cwtl
rcrl
or
sub
pop
inc
popa
sar
jge
call
out
add
sbb
pop
scas
add
es
outsb
push
lret
stos
mov
pop
cli
loope
dec
mov
cmp
jmp
loopne
das
pop
jbe
enter
push
pop
call
in
inc
pop
cmp
xchg
mov
mov
cmc
clc
inc
sub
pop
xlat
repz
xor
cmpl
aad
cmpsl
test
fbstp
fisttpl
stos
push
jmp
scas
mov
sbb
inc
mov
out
adc
mov
rcr
dec
cmp
fs
pop
ja
push
pop
push
pmaxub
scas
repz
and
or
cmp
std
mov
sbb
xchg
ret
shrb
in
repnz
pop
jne
gs
mov
jmp
mov
cmp
mov
ds
pop
and
fldt
pop
pop
adc
cmp
rcrl
dec
mov
fldenv
pop
add
pop
popa
sub
mov
filds
mov
sub
adc
in
jns
push
out
test
fimuls
out
jg
lret
fs
or
dec
lret
lds
pop
imul
stc
jmp
std
outsl
shlb
lods
cld
pop
jge
or
in
and
jo
xor
or
pop
das
out
and
lds
lret
jmp
mov
loopne
outsb
fsubl
fidivrl
test
insl
jl
dec
jb
lds
sbb
movsl
sbb
jbe
imul
in
fsubs
dec
fsts
daa
add
stos
pop
pop
dec
movsb
fstl
into
pop
cmp
push
xlat
dec
lahf
dec
pop
rcr
push
pop
ficompl
xchg
or
pop
jns
mov
test
test
insb
out
mov
lahf
pop
inc
push
pop
es
out
jno
jp
push
or
sub
imul
arpl
cmove
fsubrl
inc
cltd
mov
sahf
jno
pop
andl
call
pop
out
sub
fstl
pop
rcrb
xchg
out
cmpb
cwtl
test
add
pop
mov
loope
pushf
sbb
and
inc
out
lock
sti
add
pop
mov
aaa
push
jle
pop
dec
stc
push
out
cwtl
fisubs
mov
and
mov
inc
pop
xchg
fiaddl
bound
jmp
sbb
mov
pop
int
push
and
cwtl
cld
cmc
pop
shl
dec
in
cmpsb
xchg
ficomps
aad
jo
repz
jecxz
ficoml
popa
xchg
gs
fiadds
mov
pop
scas
pop
dec
mov
pop
call
stos
mov
pop
icebp
gs
out
hlt
insb
mov
idivl
sub
ret
pop
mov
pop
test
xchg
mov
pop
xlat
daa
dec
jb
mov
or
pop
sub
cmp
call
adc
push
inc
sub
jno
or
pop
sub
xor
xor
mov
jg
add
cmp
ja
dec
pop
mov
subb
icebp
inc
out
sub
js
jl
xor
adc
scas
movsl
loop
pop
or
dec
pusha
pop
ret
popa
adcb
sbbl
clc
mov
and
jecxz
mov
xor
pop
pop
xchg
scas
push
push
std
out
sub
pop
or
pop
mov
xchg
pop
inc
daa
cwtl
mov
adc
aaa
jnp
mov
or
dec
sbb
mov
in
out
sbb
stos
mov
jp
xor
leave
fidivs
pusha
loopne
pop
xchg
pop
push
pop
stc
jo
in
sbb
push
mov
mov
out
cmpsb
add
shlb
sahf
pop
pop
cmp
ljmp
jnp
mov
out
and
xor
pop
cmp
mov
jge
and
ror
pop
test
jno
push
les
xor
xor
stc
enter
dec
and
xor
lahf
push
pop
adc
xor
inc
and
js
fisttpl
out
fcompl
sbb
lahf
iret
push
xchg
in
sbb
lcall
mov
fisubrl
dec
pop
jge
lea
adc
push
mov
add
xrelease
xor
cmp
add
jge
mov
adc
movups
pop
bound
cltd
jno
mov
mov
or
jecxz
add
sub
cld
pop
aaa
xchg
mov
dec
cs
mov
enter
pop
mov
js
pop
lds
pop
mov
popf
call
dec
sub
inc
in
xchg
push
cld
aas
xchg
sub
jmp
jle
pusha
pop
sbb
call
push
mov
pop
ror
push
mov
cmc
xorb
pop
inc
xchg
cmpsl
mov
pop
xor
adc
mov
pop
pop
clc
adc
or
mov
dec
and
mov
xor
sbb
cmp
sbb
xchg
xor
sub
arpl
fs
pop
addr16
fdiv
loop
adc
pop
mov
jns
jge
sbbb
pop
mov
arpl
out
xlat
adc
fstpl
push
pop
sbb
scas
xchg
jecxz
ja
sbbl
nop
cmp
mov
leave
and
mov
test
jnp
test
pop
outsb
mov
pop
inc
add
sbb
inc
and
pop
mov
ljmp
mov
cli
cli
repnz
jno
sbb
clc
pop
jmp
roll
push
shrb
mov
dec
sti
mov
cltd
cwtl
dec
cmp
jge
jns
sub
adc
insb
dec
fiaddl
jnp
mov
lea
push
ret
pop
dec
cmpsl
fstpl
nop
and
pop
jnp
pop
rorl
sbb
pop
jno
add
jg
enter
mov
das
imul
movsb
ror
pop
loop
cmp
adc
or
pusha
fistps
pop
out
cmp
or
js
and
sub
in
xor
cmp
in
into
hlt
sbb
rorb
out
fidivrl
movb
js
xor
xchg
mov
jnp
add
jnp
push
sub
mov
pop
fisttpll
and
push
xchg
or
xlat
dec
call
pop
rcrl
fnstenv
fs
push
inc
xlat
cld
pop
fdivrl
aas
xor
dec
dec
mov
js
sbb
mov
mov
pop
mov
mov
call
add
cmp
mov
inc
inc
loopne
lods
fwait
fwait
pop
mov
add
mov
sub
fisubl
inc
jne
jp
dec
pop
ja
das
pop
in
xor
mov
lods
mov
push
out
dec
jo
repz
inc
lds
pop
in
into
stos
out
test
mov
push
xchg
sbb
jmp
mov
sbb
jbe
sbb
ljmp
adc
lods
cltd
lahf
cmc
test
filds
test
pusha
sbb
into
lods
sbb
push
add
xor
or
mov
scas
cmp
mul
mov
insb
sbb
aam
inc
loop
scas
jb
adc
lds
lret
mov
imul
rol
inc
cmp
loope
pusha
dec
and
dec
mov
popf
rorl
lahf
fidivs
xor
mov
mov
mov
cmc
mov
mov
xor
sbb
mov
ficoml
icebp
sbb
push
push
sti
inc
fsubl
adc
pop
mov
fisubs
mov
dec
ljmp
int3
push
ficompl
mov
cmp
xchg
dec
and
inc
js
cltd
cli
add
cmp
lret
inc
push
mov
jl
sub
shrb
mov
es
testl
pop
lret
or
mov
lods
fldcw
jmp
mov
pop
repnz
cmc
pop
or
cmp
repnz
pop
inc
xchg
icebp
push
adc
lahf
test
push
add
add
xchg
pop
repz
sbb
pusha
mov
and
mov
cmp
add
fdivrp
dec
ja
mov
dec
cmp
decl
adcb
test
xorb
mov
test
lods
sbb
inc
pop
xchg
std
adc
or
insl
rcrb
push
add
test
xor
push
cmc
mov
popa
imul
sbbl
mov
jle
mov
mov
push
xor
xchg
jne
cmpsb
xor
pop
pop
pop
pop
test
ljmp
imul
es
dec
push
or
mov
pop
lods
fwait
les
mov
addr16
stos
out
lret
sub
inc
in
pop
cltd
data16
cld
inc
adc
pop
shrl
fisubrl
je
nop
pop
sub
fs
in
mov
jecxz
lea
cmp
fnstcw
push
dec
movsl
jnp
stos
pop
pop
loop
jno
shll
mov
in
push
ret
mov
in
mov
lea
popa
pop
popf
sbb
jmp
push
pop
cmp
dec
xor
push
add
repz
scas
stos
xchg
mov
xchg
lcall
xchg
gs
repz
inc
jno
add
jno
lahf
cmp
call
cmp
adc
inc
fld1
xchg
lret
icebp
jno
mov
pop
stos
shrd
subb
mov
mov
inc
xchg
pop
pop
in
out
inc
mov
call
mov
outsb
adc
pop
or
dec
cwtl
sbb
add
push
fstpl
pushf
sbb
fwait
in
das
ja
jle
stos
mov
js
test
xchg
cltd
dec
cmp
in
fisttpl
imul
pop
lea
lret
rcll
fnstenv
repz
dec
dec
in
add
mov
imull
js
inc
mov
cmp
test
icebp
xor
fcompl
cmp
inc
xchg
jne
std
sbb
pop
fldl
xchg
pop
cmp
aas
jae
fistl
imul
daa
add
fistps
and
lahf
pop
repnz
adc
scas
cli
pop
fs
mov
push
and
sub
cld
mov
inc
fistpll
fnstcw
mov
mov
xchg
push
lock
push
sbb
xchg
pop
and
mov
adc
add
clc
sbb
inc
inc
pop
pop
push
dec
xchg
sar
add
inc
dec
push
in
sbb
outsl
sub
and
pop
ret
xchg
cmp
test
ja,pn
mov
leave
pop
enter
js
jns
sbb
mov
pop
mov
das
jbe
pop
jnp
adc
cmp
mov
mov
hlt
or
sbb
pop
pop
addr16
and
pop
aaa
jns
sub
and
sub
adc
and
stc
enter
repz
ret
aaa
jl
pushf
scas
outsb
adc
inc
fmuls
adc
stc
dec
pop
fnstcw
push
pop
pop
pushf
int
call
shrb
stos
pop
clc
sub
bound
jno
sbb
cld
insb
mov
lds
push
mov
test
cmp
mov
pop
sub
mov
adc
add
pop
pmulhuw
sub
daa
ss
iret
pop
cli
fidivs
jecxz
sbb
pop
mov
fsubr
pop
in
stc
imul
jge
lods
and
xor
inc
pop
jnp
lcall
jle
outsl
and
cwtl
pop
jmp
jl
lsl
mov
idivb
push
cs
es
aaa
ret
aad
add
pop
ficoms
in
and
pop
pop
pop
or
push
stos
pop
rcrl
cmc
pop
dec
ret
pop
mov
iret
jl
lret
dec
xor
cltd
addl
mov
mov
sahf
pusha
pop
scas
fsubp
stc
mov
enter
in
jae
pop
repz
cmp
sub
in
jl
rcrl
fcoms
push
pop
jp
or
test
xchg
rolb
pop
call
push
and
mov
lret
jbe
xchg
jb
sbbb
push
pop
inc
pop
lods
repz
ret
jle
dec
push
lods
scas
shll
jl
lcall
and
add
push
pop
lcall
add
in
lock
fcomi
pop
test
mov
push
xchg
adc
pop
nop
in
movsb
jp
mov
pop
pop
addr16
jg
cwtl
scas
arpl
gs
pop
mov
push
inc
jle
pop
cmp
mov
cmpsb
stos
and
xor
pop
and
mov
sub
fst
push
lret
pop
adc
das
mov
sbb
flds
pop
in
pop
or
decb
lds
lcall
out
sbb
pusha
pop
sub
mov
pop
jmp
adc
std
stos
dec
pop
xor
jmp
xchg
cli
pop
loope
jl
sbb
xor
pop
insl
cld
sti
pushl
add
push
rcll
fs
jno
fbld
test
ss
fiadds
cli
xor
in
fldcw
mov
add
dec
inc
mov
sbb
cmc
jno
movsl
loope
out
insl
jmp
shlb
pop
pop
inc
int
or
sub
filds
hlt
fstpl
lods
addb
pop
fwait
mov
sahf
jge
adc
int
pop
push
pop
xchg
jae
pop
push
push
sahf
xor
jnp
outsl
dec
mov
leave
fldcw
mov
inc
and
dec
push
xchg
add
mov
add
xor
arpl
outsb
jle
add
ret
sbb
stos
stos
adc
sbb
stos
sub
cld
add
lock
lret
push
mov
cmpb
ss
adc
jb
mov
dec
lcall
arpl
in
call
xchg
jl
cltd
adc
adc
fs
push
jge
push
add
cmp
add
adc
rorb
xchg
sbbb
cltd
inc
sahf
mov
add
mov
jb
and
lahf
js
loop
aaa
pushf
push
cmpsl
cmp
xor
sti
fisttps
insl
sahf
pop
imul
mov
sbb
imul
movsl
mov
stc
fisubrl
addr16
sahf
mov
scas
cmp
in
cmp
or
mulb
cltd
lret
mov
ja
lret
stos
subl
jno
or
cs
and
jp
roll
pop
mov
add
pshufw
cli
fnsave
inc
inc
add
pop
adc
push
sti
add
out
shrl
xchg
gs
fiaddl
sbb
imul
ret
stos
pop
sbb
inc
stc
fwait
and
cmp
imul
dec
inc
xchg
xchg
push
mov
pop
lods
dec
mov
xor
mov
xchg
sbb
pop
inc
pop
jns
out
dec
adc
rcrb
sub
lods
or
dec
mov
mov
lods
dec
stc
jbe
sub
fmuls
repz
and
lods
inc
fistps
mov
call
jnp
or
imul
pop
fstpl
mov
jg
arpl
fdivrl
mov
mov
fsubs
mov
mov
scas
nop
js
je
push
mov
pusha
loopne
mov
imul
fiaddl
cwtl
cltd
int3
dec
pop
out
mov
pop
add
xor
mov
sti
push
mov
or
pusha
mov
jmp
and
mov
movsb
in
popf
mov
inc
fdivrs
jle
pop
sbb
or
sbb
stos
sahf
jp
xor
dec
dec
imul
jp
gs
clc
imul
xchg
js
sbb
mov
xchg
test
sbb
rol
cs
test
shll
adc
dec
sbb
imul
mov
stos
call
mov
dec
or
xchg
jp
pop
jne
mov
imul
insl
pop
mov
js
cmp
dec
pusha
mov
adc
clc
jp
ror
lret
cmp
arpl
pop
jno
dec
popf
lcall
sub
cmp
cmpsl
push
leave
clc
sarl
stos
mov
xchg
sbb
mov
dec
fcmovu
clc
cmp
lds
sti
pop
cmp
imul
mov
push
mov
cmp
popf
cmp
test
shlb
mov
stos
cmc
mov
arpl
jb
je
sbb
sbb
mov
out
fdivrl
dec
jle
call
lahf
nop
addr16
fisttpl
sbb
add
jbe
in
mov
stos
ret
je
xor
push
cmc
adc
test
and
ret
sahf
fstps
push
jp
mov
repz
and
ret
cmpsb
mov
fnstcw
aam
sub
sbb
inc
lret
push
inc
or
addl
dec
ss
mov
jb
sbb
mov
pop
lcall
or
fwait
lods
je
and
icebp
clc
sub
call
or
sti
or
pop
push
outsb
jb
test
inc
jno
or
jo
mov
and
push
sub
jl
pushf
nop
cmp
mov
adc
mov
dec
notl
jnp
jp
int
test
imul
sub
jmp
arpl
mov
pop
loope
jb
mov
test
sbb
dec
push
cmpsb
dec
fwait
sbb
js
cmpb
dec
jnp
jns
in
out
daa
push
into
sub
cltd
fwait
xchg
sbb
rolb
jmp
out
imul
pop
fisubrl
mov
mov
mov
mov
xor
sub
fprem1
cmp
and
mov
fcoml
insl
xchg
stc
test
cmp
jmp
cwtl
movsb
pop
test
inc
icebp
sub
adc
add
leave
add
dec
sbbb
and
sbb
test
cltd
lock
adc
adc
cltd
stos
sub
cmpb
mov
inc
stc
rorl
cltd
pop
call
mov
stc
je
jns
sbb
xor
mov
xchg
loope
mov
mov
mov
sbb
test
cmp
jo
mov
divl
sbb
pop
cld
rcl
loop
sti
ljmp
cmp
cmp
sbb
and
and
jecxz
jg
sbb
clc
pop
jmp
add
fcmovne
mov
sahf
or
sbb
stos
sub
jmp
xchg
mov
leave
jp
xor
pop
pop
sub
das
lahf
push
or
add
jbe
mov
mov
adc
pop
aas
ret
cmpsl
mov
inc
cltd
push
dec
sbb
mov
mov
adc
or
xchg
mov
and
repz
pop
fcmovu
fldenv
scas
je
aaa
clc
fbld
std
jns
jg
into
jp
test
shlb
xchg
loop
or
lock
ljmp
not
ss
xchg
lds
or
fwait
ret
rcl
popa
sub
adc
cltd
lcall
xchg
mov
pop
pop
jnp
lret
popf
cmpsb
jbe
dec
lret
ret
sub
jmp
sbb
mov
shrb
sbb
xchg
dec
sbb
repz
fdivrs
jmp
outsb
pop
dec
mov
or
call
mov
or
xor
aaa
stos
xor
sub
sbb
and
jmp
mov
jb
dec
lods
js
pop
jbe
hlt
cmp
sahf
pop
outsl
fs
add
pop
lcall
jp
repz
cmc
cli
fnsave
repz
xor
xor
lcall
add
sbb
mov
cmpsb
mov
xchg
jbe
pushf
inc
ljmp
cwtl
pop
push
jmp
ljmp
push
pop
mov
push
idivl
mov
inc
in
dec
jmp
or
jmp
cmp
jge
sub
ja
mov
xor
inc
jnp
imul
dec
mov
inc
test
mov
stos
xchg
sbb
cld
outsl
pop
jne
sub
enter
sarb
mov
mov
je
aaa
jmp
and
push
sub
push
pusha
out
mov
pop
inc
imul
jp
add
stos
test
mov
cltd
mov
xchg
dec
loopne
mov
add
push
jbe
pop
mov
mov
scas
popa
cmp
mov
xor
mov
std
scas
push
fisubrl
xchg
pop
sbb
stos
fbld
xchg
aad
repz
mov
ljmp
mov
cltd
cmp
sub
xchg
out
push
rorl
pop
dec
mov
add
cltd
scas
pop
xchg
sbb
or
jo
add
enter
mov
cltd
lret
cltd
mov
dec
cmp
push
repnz
in
sub
sbb
push
adcb
xchg
lret
pop
add
pop
hlt
pusha
rolb
mov
mov
decb
jp
stc
or
lahf
int3
push
jbe
arpl
push
jo
repz
fisubrl
test
sbb
pusha
stos
mov
pop
mov
adc
sub
xchg
push
movsb
xchg
sub
jb
cmp
stos
dec
add
or
pop
mov
into
push
mov
mov
xchg
add
push
jbe
leave
pop
jp
cmc
sub
inc
sbb
cltd
sbb
pop
xchg
pop
sbb
jno
push
cmp
popf
mov
xor
das
mov
out
ja
inc
mov
mov
push
adc
xor
iret
insb
loop
push
cltd
lcall
inc
jp
adc
fcomps
mov
ror
dec
inc
push
fcomps
jecxz
test
and
fsubp
pusha
sbb
je
fstpl
cltd
adc
dec
jle
adc
mov
mov
jmp
inc
inc
icebp
xlat
enter
pop
pop
add
jae
cltd
andb
dec
lods
inc
xchg
arpl
pusha
or
or
sub
xchg
cmp
sbb
dec
dec
mov
stc
xchg
fisubrl
pop
jmp
adc
mov
xchg
or
mov
loopne
mov
lods
mov
nop
add
mov
xchg
jne
mov
pop
jno
in
push
inc
ljmp
add
je
mov
std
movb
cmp
jl
repz
or
out
mov
xchg
fwait
outsb
das
sub
and
into
jge
aam
aas
mov
into
jae
xchg
lcall
dec
or
pop
xor
fwait
lcall
sti
pushf
ds
fildl
cmp
in
mov
pop
cmp
out
mov
movsl
pop
sub
pushf
mov
mov
lahf
mov
push
mov
hlt
ffreep
adc
inc
fs
out
ficoml
inc
repz
mov
pop
jbe
mov
call
shlb
addr16
and
negb
sub
stos
mov
mov
pop
mov
outsb
push
jle
push
push
fxch
adc
bound
cmp
sub
add
mov
ficompl
sarl
and
mov
xor
fwait
mov
std
adc
pop
cmp
jbe
test
sbb
pop
or
pop
mov
out
je
xor
push
fcoms
daa
dec
sub
rclb
call
dec
push
jmp
pushf
das
pop
sbb
xchg
or
iret
add
lret
lcall
jp
lea
lahf
jb
mov
mov
icebp
pop
jge
sub
sub
jmp
out
fwait
push
pop
movsl
cli
dec
sub
dec
xor
pop
loop
adc
sarb
mov
enter
sbb
or
leave
xor
jg
stc
call
cmp
pop
loopne
cmp
sub
pop
xchg
xor
psrlw
jecxz
flds
je
cmp
pop
add
xorb
jp
fxch
push
dec
lret
pop
xchg
and
mov
lods
pop
mov
sahf
iret
js
test
jge
test
stos
pop
repnz
xchg
push
inc
pop
push
je
xchg
int3
es
out
fsts
pop
fdivl
in
cmpsl
jno
and
adc
add
fdivp
lods
mov
push
sub
shr
stc
pop
mov
jb
mov
jle
mov
pop
sub
jnp
inc
mov
cmp
mov
xchg
adc
cld
pop
dec
insl
xchg
and
dec
xchg
pop
pushf
int
cmpb
sbb
cmc
xchg
fistpll
cmp
or
out
xchg
cmpsl
pop
sub
pop
les
mov
push
out
and
add
mov
push
pusha
pop
fidivl
fildll
sahf
jns
or
cmpsb
leave
pop
loopne
test
movsb
sbb
fstpl
mov
aas
out
push
les
in
pop
pop
fld
xchg
fucomip
inc
sbb
popf
pop
repnz
xor
bound
pop
dec
jb
pop
mov
dec
xchg
lods
adc
nop
mov
cmp
push
push
std
add
out
aad
mov
pop
fnstenv
dec
pop
lret
sbbb
ret
or
mov
fsubrs
xorb
xchg
cmpsb
lds
sbb
icebp
pop
mov
and
mov
pop
test
inc
js
xlat
pop
rorl
jp
jmp
push
inc
rorb
mov
lahf
rcl
xchg
or
sub
dec
jp
aas
jle
fldl
mov
loop
fisubrs
inc
push
add
lret
scas
add
xchg
xchg
pop
dec
jge
in
mov
lahf
pop
pop
repz
ljmp
mov
pop
in
ret
push
dec
pop
sbb
stos
xor
pop
cli
push
jecxz
ds
repz
in
pop
call
push
jecxz
or
lahf
mov
ss
cvtps2pi
repnz
rorb
mov
pushf
dec
mov
mov
pop
jae
xchg
stc
sbb
pop
in
adc
insl
test
pop
mov
std
xor
sahf
xor
or
lods
pop
data16
jl
pop
push
stc
adc
adc
or
push
test
xlat
das
outsb
dec
and
negb
or
mov
pop
and
mov
inc
pop
test
pop
in
cmpb
imul
or
lret
jmp
and
dec
cmpsb
aad
dec
lea
sub
add
mov
pop
pusha
sbb
or
leave
mov
or
fdivr
pop
jne
xor
or
stos
je
mov
and
pop
pop
dec
xchg
pop
divb
sbb
shlb
xor
aad
out
adc
mov
and
pop
inc
and
cmp
dec
lahf
lret
jo
sub
xor
push
pop
fstl
mov
push
iret
push
scas
jns
pop
push
pop
sbb
lret
je
xchg
pop
sbb
jg
pop
cmpsl
pop
jecxz
jo
mov
fwait
lret
sti
insl
sarb
jo
mov
adc
cwtl
inc
or
fcomps
fs
popa
insl
pop
pusha
xor
sbbl
cmp
pop
inc
and
mov
and
adc
les
icebp
ret
loop
pop
mov
inc
stos
mov
lret
sub
push
pop
ds
jno
xchg
cltd
adc
subb
fidivrl
idivl
out
mov
fldenv
inc
stos
pop
add
mov
aad
popa
sub
sbb
sbb
mov
pop
xchg
cmc
mov
add
or
cmp
jmp
je
pop
aas
mov
jo
pop
xchg
xchg
push
xchg
sub
push
into
movsl
pusha
jo
daa
mov
pmuludq
sbb
mov
and
jge
xor
adcb
pop
das
xor
add
out
inc
jo
jnp
mov
in
cmc
mov
inc
pop
je
insl
push
jge
rcrl
sahf
test
push
fwait
dec
mov
pop
cli
in
and
lcall
inc
les
fstpl
js
movsb
shrb
aas
or
ss
lods
rorl
jns
dec
ficompl
sub
jb
lret
daa
out
cmp
clc
insb
xchg
mov
push
inc
ret
mov
pop
cwtl
jnp
lock
pop
and
pop
xchg
sub
mov
pop
jmp
cltd
sets
std
out
fs
mov
sub
or
dec
test
dec
ds
mov
fdivrs
pusha
push
and
pusha
inc
jnp
jnp
cmp
fists
dec
mov
iret
inc
cmp
jns
loopne
mov
cmc
pop
xorb
lret
pusha
sti
pop
mov
fdivs
adc
push
push
jbe
adc
stc
jnp
ret
add
rorb
push
into
pop
lea
imul
in
xlat
fbld
loope
test
xor
mov
pop
imul
pop
lahf
mov
xlat
mov
jmp
xor
pop
fwait
mov
fucompp
test
and
jge
mov
ret
push
mov
sub
sar
jl
imul
jne
mov
push
push
pop
sbb
out
mov
cmc
fcomps
fs
hlt
mov
inc
rcrb
aad
mov
push
loopne
inc
cltd
into
pop
mov
mov
and
rclb
iret
inc
pop
or
add
fildll
xor
push
pop
out
addr16
into
xchg
sar
or
daa
lahf
nop
mov
push
lods
cmpsl
rcr
outsl
cmc
pushf
jecxz
pop
movsl
mov
jecxz
xchg
cwtl
in
repz
cmp
andl
sub
mov
fnstenv
stos
and
loopne
cs
jno
test
mov
lock
mov
mov
add
mov
mov
push
add
dec
rcrl
pop
inc
and
push
jmp
or
push
mov
stc
fbstp
sbbb
xchg
les
inc
jl
pop
sub
mov
and
insl
insb
xor
lcall
sahf
test
pop
pop
cmp
out
pop
ret
addr16
lret
add
adc
scas
cmpsl
mov
push
mov
fstps
sbb
into
adc
out
cld
sub
in
lods
fsubrs
fdivrs
xlat
and
pushf
xor
pop
inc
mov
insb
fcoml
mov
pop
pop
push
dec
outsb
mov
sub
cmp
jg
xchg
sbb
popa
sbb
sbb
jo
pop
or
push
and
push
inc
arpl
sub
mov
shl
subb
pop
sbb
fwait
pop
cmp
mov
and
dec
imul
mov
mov
das
fwait
pop
lods
insl
repnz
mov
out
int
loope
pusha
cmp
xor
mov
div
xchg
sti
nop
into
xor
push
mov
pop
push
movsb
cltd
hlt
out
dec
std
pop
or
mov
xchg
or
pop
into
sbb
scas
aam
dec
xchg
mov
mov
jl
mov
sub
dec
pop
call
pop
xor
and
sub
adc
pop
sbb
test
pop
cmp
push
adc
cmpsl
jns
pop
es
cld
push
or
scas
stc
leave
gs
mov
loope
shl
pop
fnstsw
popf
push
add
lcall
movsb
mov
jns
lods
repz
mov
inc
pop
faddp
adc
xor
mov
pop
inc
push
push
jp
les
ja
icebp
outsl
je
add
sbb
xchg
sbb
pop
out
mov
or
or
jae
push
sbb
aam
xor
or
dec
mov
pop
dec
ret
mov
xor
mov
cli
mov
loope
dec
pop
dec
xchg
pushf
test
scas
xchg
mov
enter
push
in
aas
add
or
pop
clc
and
mov
popf
icebp
movsb
insb
push
movsl
mov
jno
adc
clc
div
les
mov
lret
in
sub
js
sahf
pop
or
lock
pop
add
mov
jae
daa
inc
pop
pop
repnz
xor
xchg
ljmp
push
pop
ret
and
sbb
dec
sub
fadds
adc
and
data16
mov
pop
sbb
cltd
pusha
sbb
repz
sub
jo
mov
pop
sub
cmpl
cmp
dec
xchg
inc
jp
jo
pop
cmp
inc
aas
fiaddl
pop
lds
sbb
scas
movsb
in
out
mov
out
gs
popa
push
pop
jle
inc
mov
pop
adc
mov
inc
dec
and
mov
lods
xbegin
mov
inc
fadd
stc
ret
pop
or
fdivrs
enter
mov
repz
cmp
mov
dec
in
pop
pop
add
pop
push
push
mov
movsl
loope
push
pop
sbb
jle
pop
xchg
mov
adc
pop
insb
jnp,pn
pop
daa
aam
testb
sar
add
scas
inc
dec
sub
addb
scas
mov
xor
aad
fstps
imul
cli
test
mov
out
cmp
sbbl
or
cwtl
imull
clc
mov
lret
test
popa
pop
mov
push
mov
cs
outsl
mov
pop
dec
loope
das
sub
out
dec
ljmp
out
mov
sbb
mov
jbe
pop
pop
mov
cltd
xchg
scas
dec
clc
sti
push
xchg
sbb
adc
ret
xchg
xorl
movsl
into
test
mov
pushf
cwtl
jae
pushf
enter
lret
pop
lahf
or
lahf
pop
rcl
sbb
pop
pop
xorl
or
lret
scas
xchg
into
xchg
jg
js
fs
jnp
insb
mov
add
cmp
mov
sub
shlb
lahf
add
dec
xor
inc
loopne
out
scas
cmp
pop
std
filds
mov
xor
or
out
decl
mov
xchg
mov
mov
loopne
mov
sti
lcall
out
dec
mulps
inc
movsl
in
dec
xchg
pop
loope
into
out
jl
or
out
pop
addr16
shl
adc
mov
pop
cli
xlat
mov
xchg
fbstp
add
popf
pop
inc
clc
xchg
sub
mov
daa
dec
mov
je
test
stos
pop
push
in
pop
jb
pop
hlt
pop
push
loope
shrb
xchg
imul
fnstsw
in
sbb
jl
mov
and
pop
push
test
adc
xor
push
mov
add
test
pop
mov
push
sub
inc
fildll
mov
pop
lcall
jmp
pop
push
ret
push
lea
pop
sbb
rclb
lods
cli
xchg
or
ret
mov
pusha
icebp
jnp
xchg
cmp
clc
mov
test
dec
adc
ret
ficomps
adc
in
cmp
loop
dec
and
mov
xchg
fldt
cmp
mov
idivl
out
pop
movsb
mov
cmc
ret
pop
and
fs
pop
xor
pop
jmp
cld
xchg
pushf
pop
inc
xor
out
std
xor
and
cmp
add
fcmovnu
mov
mov
mul
xchg
arpl
pop
cli
jb
cmp
mov
nop
testb
mov
pop
jno
js
sbb
xchg
jbe
jp
sbb
pusha
jle
orl
xor
js
pop
mov
in
pop
adc
fcompl
and
pop
movsb
insl
push
decb
inc
divl
das
and
js
xchg
sti
sub
jl
cmpsb
outsl
push
stc
pop
or
movsb
adc
xchg
push
fistpll
xchg
or
movsb
mov
ljmp
fstpt
roll
popf
dec
inc
clc
jmp
lds
xchg
cmp
xor
mov
xchg
sbb
add
pop
jecxz
shll
sub
and
in
inc
push
loop
out
pop
std
scas
and
andl
pop
and
popa
out
add
repnz
xchg
mov
fs
pop
dec
test
flds
mov
shrl
lret
idivb
js
repz
mov
cmp
repnz
movsb
or
pop
mov
inc
sub
sub
ficoms
es
mov
jae
daa
mov
or
cmp
scas
lret
xchg
imul
aam
pop
sahf
dec
rcr
and
inc
jbe
dec
jmp
pop
jb
fstpt
sub
mov
cwtl
pop
add
orb
mov
xor
mov
aam
pop
mov
repnz
push
pop
or
add
xor
and
lock
adcl
mov
xor
push
cmp
lock
inc
stc
jb
xor
or
je
mov
mov
lods
mov
insl
outsb
push
mov
mov
or
addb
add
mov
pop
lds
add
ja
pop
jl
xor
jo
xchg
dec
insl
dec
loop
xchg
xor
sarb
cmp
adc
xchg
sti
dec
pop
shlb
stos
nop
sbb
or
out
add
rcl
adc
add
and
mov
mov
lods
add
sbbb
jnp
loope
iret
mov
fists
call
and
push
out
or
jecxz
out
cmp
fstpt
lds
fwait
aaa
lret
fistps
pop
sbb
push
mov
cli
icebp
jle
pop
outsl
sti
push
lock
ds
lret
or
push
pop
les
nop
dec
pop
cmpsl
andb
pop
loopne
ret
mulb
mov
mov
mov
popf
sarl
sbb
pop
cmpsb
repnz
clc
addr16
sub
aad
add
movsb
dec
add
cmp
ja
cmp
pop
inc
add
inc
sbb
push
pop
jb
inc
icebp
push
fstps
shlb
imul
lock
pop
pop
frstor
fwait
push
nop
jmp
fwait
pop
pop
pop
adc
ret
ljmp
mov
jmp
mov
pop
push
push
push
mov
adc
pop
mov
stos
fsubl
stos
out
in
loop
ret
mov
add
mov
dec
fdivrl
fisttpl
ja
pop
leave
xchg
loope
sti
xor
cmpsl
daa
sbb
shrl
mov
mov
inc
packsswb
ret
cmpsb
pop
fs
imulb
int3
dec
daa
insl
outsl
sahf
pop
pop
nop
std
xchg
or
ret
pop
jnp
cwtl
dec
or
pop
mov
jo
push
pop
mov
ss
inc
and
call
daa
pop
xchg
mov
and
cltd
sub
fbstp
adc
xor
mov
loop
jae
imul
pop
rcrb
subl
mov
or
pop
adc
jb
pop
sarl
lcall
mov
lods
loopne
or
inc
std
xchg
pop
fsub
out
jb
sbb
dec
and
sbb
mov
pop
pop
push
outsl
pop
sub
orb
sahf
or
jnp
stc
gs
fnstsw
jae
jl
lret
adc
pop
xchg
pop
xchg
bound
lods
xchg
push
imul
xchg
pushl
mov
mov
into
cld
imul
mull
sbb
jne
fstpl
aam
aaa
push
pop
aad
loop
jmp
push
lock
lods
xor
pop
or
in
orb
dec
mov
dec
je,pt
sbb
mov
into
lret
adc
int3
xchg
push
insb
jbe
out
je
add
out
inc
sbb
sarl
lret
jnp
or
js
dec
scas
mov
push
adc
fcmovnu
and
push
sbb
scas
add
push
adc
lods
lahf
and
mov
aaa
loop
lahf
or
mov
pop
scas
es
out
inc
daa
mov
jecxz
andb
fs
xor
cli
add
repz
jmp
cltd
out
pop
jo
pop
psllw
mov
pop
mov
push
push
test
pop
es
cltd
xor
cmpsl
sti
sbb
sub
cmp
sbb
loopne
xchg
pop
push
pop
xchg
andl
mov
fstl
int3
inc
lea
fsubs
mov
andl
xlat
push
dec
out
pop
xor
jns
dec
mov
mov
xchg
pusha
cmpsl
js
pop
inc
xor
jmp
addr16
pop
dec
ret
mov
pop
pop
cs
push
jecxz
jl
mov
clc
je
jb
xor
das
sub
xchg
or
mov
pop
xcrypt-ofb
cmpsl
jmp
jae
add
dec
pop
sub
inc
sbb
jl
out
cli
jne
pop
sbb
scas
icebp
or
adcb
mov
mov
pop
pop
gs
dec
inc
sbb
push
mov
xchg
cld
jno
pop
leave
test
pusha
push
fucom
fstps
call
jo
pop
test
dec
adc
pop
adc
jnp
cld
xor
push
mov
pop
out
xchg
and
mov
mov
jg
pop
les
mov
lods
cmpsl
out
dec
pop
pop
fnstcw
ss
fs
jge
fdivs
pushf
movsb
icebp
repnz
mov
push
mov
shlb
insl
push
pushf
sbb
xlat
mov
out
mov
push
jle
cld
in
mov
pop
xchg
bound
lahf
aam
outsb
outsl
dec
pop
mov
pop
pop
mov
xor
nop
pop
fcmovu
sub
scas
rol
xor
insl
pop
push
jns
xchg
and
cmc
imul
pop
sub
adc
es
sbb
push
xchg
lds
pop
or
leave
test
out
cmpsb
pop
inc
push
xchg
push
lock
mov
aam
lcall
aad
dec
pop
mov
lret
decb
hlt
add
push
mov
pop
jp
mov
cmp
cld
xchg
js
pop
ret
mov
mov
fstps
xor
fwait
mov
ret
adc
xchg
dec
pop
mov
or
leave
mov
or
sbb
fwait
rcrb
andb
movsb
xlat
pop
adc
mov
adc
push
aam
inc
iret
pop
loop
std
adc
xchg
sbb
aas
lods
cwtl
es
and
push
lcall
xlat
scas
push
jecxz
mov
mov
push
fists
pop
mov
cmpsb
sbb
dec
sub
test
pop
mov
pop
fistpl
cmc
pop
pop
adc
mov
pop
mov
mov
fs
sbb
jp
xchg
pop
mov
loope
mov
and
icebp
mov
test
repnz
fsubrl
insl
mov
push
iret
test
pop
or
push
mov
add
out
sub
pushf
das
mov
jns
cmp
xchg
pop
dec
fsubrl
dec
mov
repz
fcomps
imul
aas
sbb
gs
andb
dec
pop
cmpsb
out
aam
mov
loopne
mov
or
mov
add
pop
ja
jno
and
xor
xchg
aaa
js
imul
clc
xor
cmp
pop
push
jns
out
in
stos
or
inc
sti
push
pop
fsubrs
sbb
call
pop
sti
xchg
xor
aaa
fdivrs
sbb
notb
sbbb
call
mov
int
in
push
or
clc
and
cltd
ljmp
fldenv
loop
pop
inc
stos
shlb
sarb
push
fdivl
fcoms
xor
aaa
enter
scas
popa
in
cmp
xchg
js
sbb
adc
stos
sub
daa
xchg
xchg
test
xchg
outsl
push
inc
pop
dec
xchg
xor
icebp
outsb
lret
cmpsl
lds
sub
ds
scas
cmp
jge
xchg
or
js
pusha
pop
fdivr
sbb
addr16
jmp
lea
insl
outsb
jl
pop
out
sbb
lock
sub
pop
pushf
enter
inc
subb
jae
cmp
mov
and
aas
scas
int3
pop
ret
fwait
push
mov
cmp
sarl
inc
jg
mov
mov
bound
scas
or
pop
daa
cmc
push
pop
cli
int
sub
or
pop
sub
or
xchg
scas
cmp
loopne
push
std
js
stos
pop
jge
jo
add
aas
call
loopne
pop
fidivrl
stc
and
dec
sub
out
pop
adc
jmp
cmp
cmp
cmpsb
adc
cmp
mov
les
pop
insl
in
xor
jo
adc
add
xor
arpl
jg
loope
inc
cmp
push
fs
lahf
cmp
push
xor
orb
adc
daa
or
xchg
push
sub
mov
xchg
jnp
sub
jg
dec
push
dec
and
adc
mov
pop
jmp
dec
cwtl
out
pop
cmpb
mov
jns
imul
or
fwait
rcll
mov
inc
out
adc
dec
jae
mov
test
jae
mov
in
sbb
movsl
lahf
std
inc
mov
xchg
fimull
push
leave
sti
jns
lods
cmp
int3
cmpsl
push
mov
cwtl
adc
data16
bts
pop
movsl
sub
pop
cmc
gs
push
and
mov
mov
adc
loopne
aas
pop
call
dec
dec
xor
adcl
int3
mov
dec
or
pop
out
mov
lret
inc
pop
and
xchg
insl
and
aad
jmp
subb
clc
ss
adc
mov
add
aaa
scas
mov
fdivrp
cmp
adc
outsb
xlat
sarb
sbb
lea
fisubrl
loop
push
faddl
shrb
sbb
cltd
aas
ja
orb
lock
lods
in
or
loope
je
cmpsl
lcall
cwtl
imul
xor
inc
dec
mov
adc
mov
mov
stos
scas
jo
rcrb
pop
jle
mov
movl
cmp
cmp
mov
test
push
insl
jb
lcall
pop
test
dec
out
mov
fists
xchg
jg
scas
imul
mov
mov
mov
push
lret
add
insb
or
cmp
push
fnstsw
sbb
or
data16
in
mov
and
movsl
out
dec
aaa
cmp
and
or
cmpl
adc
push
sub
cltd
call
adc
dec
aas
cmpsl
mov
scas
leave
iret
jne
sbb
xor
dec
cmp
push
stos
sub
fwait
mov
lret
cmp
dec
dec
and
adc
pop
test
cltd
ja
sarb
inc
in
or
shr
sbb
cmpsl
or
mov
fmuls
lret
or
pop
pop
pop
test
mov
pop
dec
cmp
dec
dec
jecxz
or
lcall
sbb
fcomps
sub
add
das
mov
shlb
jne
mov
sbb
cmp
lods
jnp
xchg
out
mov
or
push
push
add
pop
ret
inc
dec
and
jae
inc
fnsave
lret
ljmp
fcom
sbb
cmp
and
sbb
fisttpl
push
mov
add
dec
pop
lods
add
jo
stos
ffreep
xor
dec
je
pop
sbb
cmp
pop
sbb
mov
scas
lahf
outsl
fisttps
mov
mov
jae
xchg
ficompl
daa
and
pop
adc
mov
sbb
xor
sbbl
mov
fucomi
push
rcrb
jecxz
rcrl
call
loop
inc
mov
fnstenv
pop
leave
or
mov
ss
fisttps
iret
cld
pop
mov
dec
addr16
test
mov
fnstcw
jge
cmpsl
push
or
pop
in
movsb
or
mov
add
sbbb
lret
into
mov
clc
and
mov
mov
hlt
mov
inc
scas
gs
inc
adc
hlt
test
sub
dec
and
fs
mov
mov
cld
sub
pop
adc
sub
or
pop
out
in
push
or
mov
pop
sbb
sbb
lcall
push
push
inc
mov
gs
les
xlat
sub
stc
aam
loop
add
sti
nop
dec
pop
lds
stos
cmpsb
pop
sar
mov
data16
inc
dec
pop
fdivp
jns
dec
xchg
push
and
mov
nop
mov
ficoms
test
out
sbb
jns
mov
pop
lcall
lcall
pop
sarl
enter
adc
jae
and
cmp
mov
push
xchg
scas
mov
cmp
or
pop
mov
push
jne
fwait
aaa
dec
test
fwait
ret
test
push
enter
xchg
int
insb
sub
lahf
cmp
cmp
pop
mov
and
cmpsl
push
adc
xchg
scas
jne
push
xchg
inc
aaa
inc
push
imul
cmp
mov
add
mov
enter
ds
lret
orl
lcall
push
pushf
sbb
into
lahf
in
lods
dec
cmpsb
xor
cmp
fcmovnb
mov
inc
int
or
shll
sub
xchg
stos
out
call
in
outsl
mov
cmp
mov
lods
xor
mov
cmp
in
sbb
fwait
pop
sub
adc
mov
xchg
cmp
adc
cli
mov
adcl
ss
ja
push
mov
jecxz
hlt
jmp
ljmp
insb
mov
xchg
inc
loope
mov
pop
scas
jns
int
push
cmpsl
cmp
mov
inc
inc
push
roll
mov
fildl
inc
push
test
mov
in
dec
cmp
subb
cmp
mov
shlb
ret
dec
outsb
or
aaa
cmp
mov
cmp
push
sub
mov
or
es
xchg
inc
pop
in
daa
fistpl
aas
pop
mov
dec
fsts
sti
adc
xchg
cwtl
xor
lahf
fisubrs
call
xor
in
push
push
icebp
xor
or
jo
push
cmpsl
xorb
icebp
in
ficomps
jl
pop
insl
pop
xchg
imull
cld
inc
pop
mov
mov
sub
or
insl
and
lahf
or
sub
xchg
pop
sbb
mov
cmp
xor
mov
fsubs
jnp
arpl
adc
hlt
sbb
cmp
push
out
push
mov
cmp
pop
sub
cmp
xor
je
or
addr16
xchg
sbb
clc
pop
add
imul
out
cs
scas
loope
ja
in
pusha
addr16
test
pop
mov
pop
les
mov
dec
jns
mov
fdivrl
pop
pop
push
sub
pop
ror
hlt
xor
insb
xchg
shrl
xchg
out
push
mov
sbb
dec
pop
pop
pop
jno
in
out
mov
xchg
call
sbb
ss
mov
test
pop
sbb
pop
push
xchg
pop
fiaddl
in
mov
sbb
call
repz
cmp
test
or
pop
mov
xchg
sub
dec
pop
pop
push
jp
mov
pop
int3
repnz
mov
cs
pop
daa
or
nop
add
stc
shlb
dec
or
ss
cmp
sub
test
adc
inc
lds
xchg
test
lea
into
add
jp
xor
pop
jle
mov
mov
add
aas
cmp
cs
push
add
bound
pop
cwtl
sbb
incb
mov
loope
adc
add
out
push
cwtl
das
int3
pop
leave
mov
mov
pop
test
add
mov
jo
or
cli
addl
test
mov
add
scas
sbbl
pxor
or
sarl
das
mov
movsb
or
jns
pop
dec
xor
dec
int
inc
not
mov
cmp
mov
mov
imul
xchg
adc
sahf
out
inc
cmp
fistpll
inc
pop
or
popf
inc
lock
pop
fdivr
cmp
push
jae
adc
popa
pop
ret
out
jno
lods
nop
mov
lcall
insb
sub
sbb
pop
es
out
pop
outsb
mov
mov
or
mov
jle
daa
mov
push
mov
push
jnp
pop
sbb
sub
sahf
dec
sbb
mov
mov
xchg
sti
jg
jle
pop
mov
add
addr16
sub
add
rcrb
pop
es
sbb
pop
sbb
in
mov
mov
outsl
test
bound
in
cmpsl
xor
pop
pop
popa
xor
rcll
cmp
sbb
sbbl
pop
lods
fsubl
adc
pop
adc
popa
sbb
mov
xor
xlat
mov
lahf
pop
clc
loop
pop
dec
sbb
out
pop
ljmp
push
sahf
and
dec
stc
ds
push
or
ja
sbb
mov
cmp
lret
scas
sub
shll
cmp
xor
push
negl
pop
inc
and
aad
sbb
or
or
out
lidtl
mov
inc
pop
ds
cli
mov
pop
adc
xchg
in
out
insl
scas
dec
push
stc
sub
ret
pop
test
outsb
xchg
ficompl
xorb
jecxz
jb
pop
inc
mov
ds
mov
add
lock
popf
icebp
jmp
lds
testl
in
sbb
pop
dec
and
clc
pop
and
pop
fimuls
das
shl
xor
dec
push
pop
or
lods
mov
pop
shlb
sub
xchg
xor
mov
sbb
jmp
ja
jno
in
mov
pushf
mov
dec
inc
sub
subb
mov
popa
push
and
lock
fcmovu
dec
loopne
xchg
cmpsb
cmp
ljmp
lret
pop
fs
lahf
jbe
call
mov
pop
cmc
imul
mov
jmp
mov
out
sbb
call
push
lods
mov
pop
push
adc
xor
pop
gs
aam
jg
stos
pop
add
mov
and
push
sbb
js
rcl
dec
in
pop
pop
lret
pop
add
lods
imul
scas
sbb
or
jne
xor
cmc
mov
out
scas
push
pusha
fiaddl
addr16
pop
sub
pop
adc
rclb
es
rorb
les
sbb
pop
mov
orl
xchg
mov
push
int3
pop
flds
sbb
mov
incb
pop
inc
pop
mov
mull
xchg
xor
inc
out
scas
aad
mov
and
pop
sarl
push
jo
hlt
ja
dec
mov
adc
mov
add
jbe
mov
push
cld
sbb
stos
scas
pop
sar
es
lods
sub
pop
int
xchg
lds
cmp
fiadds
jno
les
dec
jbe
mov
ja
cmp
or
adc
mov
pop
cwtl
pop
fisubl
ja
pop
xchg
pop
push
push
sbb
pop
ljmp
dec
out
push
push
mov
fcomps
aad
push
pop
mov
fs
pop
pushf
ret
fsubrl
dec
movsb
pop
push
xor
adc
cmp
add
fldenv
js
xchg
pop
pop
paddq
pop
out
sub
mov
cmpsl
push
scas
stc
cmc
push
jns
mov
or
repnz
adcb
scas
popa
xchg
xlat
inc
lock
jl
fidivrl
or
sub
fstps
lea
add
cmp
sbb
and
fistl
adc
push
mov
cmp
lods
daa
lahf
dec
jo
push
ss
pop
dec
push
and
push
sbb
cmp
pop
movsl
in
jmp
adc
sbb
mov
mov
lea
dec
les
rcll
pop
stos
repz
ret
lea
sahf
sub
sub
pop
cmpsb
cld
js
dec
orl
sub
pop
mov
xor
push
std
les
leave
add
xchg
loop
lock
mov
sub
mov
data16
sbb
scas
or
fnstcw
mov
cmp
sub
pop
xor
das
addr16
mov
pop
mov
clc
out
cs
push
jno
in
fs
pop
xor
out
std
pop
mov
mov
cltd
ljmp
mov
pop
cmp
movsl
pop
fstl
add
lret
push
andb
pop
pop
pop
mov
pusha
push
push
pop
ror
loopne
mov
fsubr
pop
xor
dec
lods
lea
scas
sbb
adc
outsb
adc
shlb
inc
mov
inc
push
call
adc
xchg
add
lds
cmp
mov
in
jl
pop
jmp
cmp
pop
pop
cmp
lret
stos
dec
jmp
cmpsl
cmp
stos
jno
loopne
pop
sbb
lds
mov
scas
pminub
jae
jbe
pop
arpl
aas
in
xlat
or
leave
pop
lret
cwtl
lods
lcall
dec
cmp
inc
add
in
std
sbb
or
push
cwtl
or
lahf
mov
pop
addl
mov
push
ret
xchg
jle
push
pop
pusha
je
sub
cmp
inc
cltd
sbb
pop
lock
and
inc
inc
jmp
push
sbb
pop
mov
test
jle
fdivp
pop
and
xchg
dec
mov
mov
aas
xchg
dec
pop
inc
xchg
pop
or
mov
les
mov
pop
popf
out
jecxz
mov
jp
mov
pop
rcrb
xchg
rcrb
ret
iret
repz
push
inc
sub
pop
xchg
dec
outsl
xor
mov
mov
loope
fstpt
fildll
dec
in
pop
clc
shll
sub
pusha
pop
into
adc
jg
cs
and
mov
adc
add
lods
xchg
popa
and
lret
lds
loopne
aas
push
sbb
mov
aam
xor
pop
repnz
sub
cmc
sbb
adc
push
xchg
ja
loopne
aad
int
push
or
pop
ljmp
lea
clc
mov
jle
aaa
jne
pop
pop
lea
mov
pop
fnstcw
insl
pop
adc
and
ja
sarl
xchg
pop
std
bound
hlt
pop
aas
dec
pop
fmul
scas
sub
pop
ret
jmp
mov
push
jnp
mov
js
pop
movb
nop
lea
push
xchg
subb
jno
les
dec
pop
push
cmovs
adc
pop
ljmp
push
pop
loope
push
je
pop
pop
int
push
inc
mov
movsb
push
dec
popf
out
hlt
std
dec
and
pop
test
mov
out
jle
adc
sahf
pop
stc
outsb
xor
mov
dec
in
push
adc
test
jmp
sbb
subl
mov
mov
and
notl
and
mov
xor
std
mov
call
ds
pop
inc
iret
inc
out
movsb
ss
loope
ret
cmpsl
dec
mov
imul
pop
sbb
fistps
shlb
call
test
jns
sub
pop
cmc
popf
mov
xor
cli
div
scas
mov
dec
test
mov
sti
scas
scas
mov
clc
jae
mov
add
lods
xchg
mov
sub
cltd
pop
inc
sbb
sti
push
xor
and
pop
sbb
xchg
cltd
inc
mov
stos
fldl2t
repz
je
or
fs
pop
add
xor
push
scas
pop
and
out
or
pop
cmp
in
xlat
int
pop
lods
push
int3
stos
movb
outsb
push
std
xor
pop
call
popa
cwtl
cmp
js
mov
add
test
pop
hlt
pop
jns
inc
ds
lock
jmp
fists
push
mov
js
stos
adc
sti
sbb
xchg
scas
mov
aaa
mov
adc
ret
pop
pop
das
test
stc
mov
push
fisubrl
adc
pop
iret
sub
clc
xor
lods
dec
push
mov
and
stos
cmp
dec
hlt
shrl
popf
test
push
mov
loopne
fbld
shlb
pop
sbb
fisttps
lahf
mov
push
sub
and
lea
dec
push
mov
pop
fistps
shlb
pop
leave
pop
mov
fwait
negb
mov
mov
fxtract
inc
gs
pop
jle
dec
repz
cmpsl
mov
mov
in
je
in
inc
pop
mov
xchg
imul
imul
fwait
aaa
cmp
pusha
pop
addb
shll
in
mov
pop
out
cmp
xorl
cmp
mov
pop
xor
inc
fcoms
pop
push
sbb
pop
cmp
shl
inc
pop
mov
and
inc
jecxz
mov
sub
int3
ds
fidivrl
or
adc
adc
imulb
mov
or
out
pop
pop
dec
bound
sbb
mov
fdivrs
subb
mov
movsl
and
xchg
scas
roll
xor
out
cwtl
xor
push
out
lods
fwait
jnp
popa
pop
xchg
dec
cmp
das
sub
test
enter
adc
pop
pusha
lods
aad
push
pushf
aam
pop
mov
sbb
mov
sub
imul
lahf
and
jo
enter
ljmp
fisubl
popf
cwtl
dec
adc
jnp
inc
push
pop
add
icebp
lret
jae
pop
jb
sub
sub
jle
shlb
scas
ljmp
clc
dec
pop
sarl
das
adc
scas
cmpsb
jns
insb
xchg
stos
pop
jg
dec
movsl
ja
or
lret
sarb
jnp
loopne
fsubl
fidivl
and
mov
and
adc
xor
pushf
sbb
pop
popa
int3
and
ljmp
cmp
inc
jns
mov
pop
imul
int3
sub
bound
inc
out
stos
movsl
jnp
ret
mov
test
cld
pop
shlb
sub
mov
cmc
push
sbb
mov
pop
push
mov
mov
jmp
pop
inc
pop
sbb
dec
jo
pop
pop
jno
add
cwtl
pop
rclb
mov
xor
shll
push
xor
fwait
and
inc
int3
xchg
mov
xchg
lahf
inc
out
sub
je
sahf
dec
sub
cmp
jg
or
sbb
filds
jno
out
mov
pop
dec
mov
pop
sbb
cmovp
and
sub
xchg
cli
add
cmp
push
pop
insb
pop
push
cs
jl
mov
mov
jb
js
mov
push
jg
cmp
and
pop
mov
xchg
stos
jo
pop
mov
or
pop
xchg
insb
cmpsb
adc
mov
mov
jno
pop
add
pop
jno
inc
pop
jmp
cmpsb
cmp
movsb
mov
pop
sub
jge
jns
pop
cwtl
repnz
dec
adc
push
pop
sbb
xchg
add
jbe
xlat
mov
fst
mov
mov
pop
lock
bound
fldcw
loope
in
xor
pop
ret
pop
subl
cmpsb
pop
ljmp
cmp
jbe
cli
js
mov
fdivs
call
mov
aaa
ret
sub
fisubl
fstps
sub
mov
lods
add
pop
cmp
scas
imul
mov
xchg
js
dec
push
data16
fsubrs
in
scas
push
mov
aaa
mov
pop
outsl
lea
and
rcrb
fdivs
stc
inc
adc
aas
jle
pop
stos
lds
add
pop
mov
jge
cmp
pop
adc
cld
add
enter
xor
dec
outsb
add
lret
cmp
sub
fxam
sbb
mov
in
push
jno
popf
stos
push
imul
movsl
pop
sahf
sarl
fldenv
cmp
pop
add
or
call
test
mov
dec
cltd
pop
cmp
jae
nop
insl
rcrl
fs
xchg
inc
mov
push
inc
adc
rcrb
jbe
ss
or
dec
xchg
jbe
pop
es
sbb
mov
nop
xchg
mov
sub
jb
mov
cwtl
push
jge
ret
pop
mov
pxor
test
cmp
mov
xchg
sbb
add
pop
pop
sub
hlt
cmp
scas
or
adc
or
arpl
or
pop
in
sub
xchg
fstpl
cmc
sahf
in
add
and
mov
das
or
dec
pop
or
pop
add
mov
pop
xchg
daa
int
cwtl
sub
mov
stos
mov
jo
pop
pop
int
mov
outsb
mov
test
outsl
mov
pop
inc
pop
iret
jmp
mov
inc
in
cwtl
adc
cmpb
xchg
mov
add
cltd
ds
mov
mov
cmpsl
mov
mov
xchg
dec
adc
lds
mov
fsts
push
pop
sub
dec
sub
mov
xchg
pop
pop
jg
mov
xor
loop
pop
mov
xlat
insb
xor
mov
sbb
sub
push
aaa
jp
stos
divb
stc
pop
lahf
daa
pop
xor
xor
cmp
lea
andl
aaa
addb
filds
fcomi
pop
pop
jle
sbb
ljmp
sub
jg
mov
xchg
pop
ficoms
cld
call
bt
daa
xlat
test
push
shrl
jl
hlt
add
jmp
pop
stos
rcl
adc
inc
iret
cmpb
mov
pop
out
rcrb
jno
repz
jb
xor
mov
or
aad
pop
mov
dec
ret
stos
cmp
into
inc
sti
fimull
push
daa
lret
mov
pop
or
loopne
scas
fisttpll
pop
stos
dec
cmp
loope
cmp
or
xchg
mov
insb
dec
dec
xchg
fdivrs
stos
inc
out
lcall
test
mov
mov
movsl
stc
jl
cltd
and
xchg
or
cs
cmp
inc
sbb
pop
leave
repz
ljmp
push
ffreep
lea
cmp
add
inc
sbb
jl
cwtl
cmpsb
mov
sub
inc
fdivrs
pop
mul
adc
push
inc
add
lret
inc
mov
add
pop
cltd
adc
xchg
std
push
icebp
fimuls
ret
popa
js
roll
mov
mov
stos
cmp
cli
fneni(8087
and
lahf
test
add
mov
in
aas
lods
dec
fcomi
pop
dec
lret
sub
call
xchg
mov
push
cmp
fistl
add
aam
fsubr
mov
jns
stos
imull
xor
popf
andb
jo
dec
or
add
xchg
mov
xor
mov
xchg
mov
cmp
loopne
mov
fidivrl
sbb
je
xor
jle
jge
nop
pop
fdivs
pushf
fdivr
mov
mov
test
movsb
push
in
shlb
dec
xchg
mov
les
xor
aas
adc
xor
leave
clc
sub
pop
adc
xchg
je
lret
ret
mov
cmp
and
or
insl
pop
mov
cwtl
outsl
pop
test
dec
movsb
inc
pushl
pop
jbe
and
cmp
or
scas
or
stc
jmp
inc
mov
fstl
push
cli
fcoms
pop
aas
dec
cwtl
or
jnp
jecxz
das
mov
lds
out
js
lret
dec
rcrb
fiaddl
inc
scas
pop
insb
arpl
lods
pop
repnz
jmp
pop
sbb
cmp
pop
sbb
bound
xchg
cmc
pop
mov
inc
sub
xor
arpl
aad
pop
inc
cld
js
push
or
and
sti
lret
mov
gs
test
push
jbe
mov
jecxz
popa
adc
in
inc
rcrb
sbb
dec
pop
add
xchg
popa
mov
cmp
lahf
fdivrs
cltd
sarb
pop
loope
scas
or
jmp
jle
mov
call
xor
mov
xorl
jns
negb
in
pop
xor
test
loopne
test
sub
inc
subb
sbbb
jne
jl
sbb
xchg
push
jp
clc
adc
pop
repz
loope
and
scas
or
xchg
jns
pop
xlat
cli
int
mov
inc
int3
pushf
push
and
mov
push
push
mov
out
ret
mov
add
xchg
sbb
lret
aam
aas
inc
jecxz
jns
or
sub
add
int
sub
mov
push
mov
das
adc
je
leave
mov
mov
jge
pop
out
push
lds
shl
pop
mov
xor
jle
popa
push
jno
mov
stc
xchg
call
adc
enter
int
dec
jle
pop
aas
sub
lahf
push
loop
jo
push
pop
popa
pop
shl
icebp
shlb
ja
cmp
adc
mov
sbb
scas
jmp
fmuls
jge
xchg
push
mov
idivl
mov
mov
mov
or
sbb
inc
jg
pop
lods
sub
imul
mov
lahf
mov
pop
icebp
xchg
data16
or
cmp
std
jns
int3
fldenv
out
nop
pop
sbb
mov
mov
mov
filds
jle
jecxz
push
push
pop
cmp
mov
jbe
cmp
mull
sub
adc
or
mov
rorb
ds
and
add
cld
dec
call
aas
mov
sub
test
and
fcmovu
xchg
js
jp
stos
pop
or
and
das
xchg
push
movsb
aad
test
outsb
gs
xchg
cs
jmp
pop
add
cmp
fcompl
mov
pop
jmpw
pop
scas
cmc
cli
adc
sbb
xchg
mov
pop
push
jmp
mov
loop
out
mov
jecxz
push
lods
pop
pushl
mov
or
pop
aas
cmp
mov
cs
dec
or
in
xor
push
adc
rcr
mov
cmp
leave
loopne
sub
sbb
xor
sub
mov
fistl
jle
mov
mov
ret
sbb
test
dec
inc
cli
mov
insl
jbe
or
mov
mov
push
or
adc
test
fwait
mov
lcall
xor
push
or
mov
jmp
adc
push
test
dec
push
mulb
adc
ljmp
into
jg
fs
daa
leave
test
and
mov
push
pusha
fisubrl
imul
ret
test
sbb
es
lock
ljmp
loop
pop
in
pop
movsl
jno
mov
imul
push
sub
loop
adc
dec
jnp
gs
jge
lea
cmp
pusha
loopne
sub
or
push
jle
pop
fiadds
xchg
loopne
adc
adc
dec
xchg
dec
jbe
push
cmp
push
push
stos
mov
les
cmc
adc
pop
push
xor
sti
xor
jmp
dec
inc
push
jbe
mov
ljmp
movsb
mov
cmp
dec
push
scas
mov
fcmove
mov
arpl
pop
mov
int3
pop
pop
into
pop
sbb
lcall
enter
mov
inc
and
insl
add
es
int
jns
fcompl
adc
and
mov
js
inc
add
pop
scas
xor
push
shlb
pop
mov
cmp
xchg
dec
test
and
repnz
fldcw
jg
xor
cmp
pusha
mov
pop
add
lcall
dec
lock
out
repz
mov
mov
push
sbb
stc
fistpll
jnp
loop
in
sbb
clc
aad
movsb
mov
jg
jne
xor
xchg
testb
ficomps
je
pop
fistpl
push
lea
pop
in
xchg
mov
xchg
dec
adc
dec
pop
cmp
push
jbe
mov
mov
pusha
imul
xor
ljmp
fidivl
push
scas
xchg
rcll
pop
cmp
and
mov
pop
mov
ficompl
pop
pop
daa
jae
adc
lcall
ss
lret
mov
fdivrs
sbb
jl
jle
xchg
into
adc
fistps
iret
pop
pop
mov
mov
addr16
cmp
or
push
push
jae
inc
and
add
stos
insb
xor
adc
xchg
lret
das
sbb
mov
dec
pop
and
scas
jbe
push
sub
bound
mov
and
fcompl
cmp
scas
pop
test
std
dec
pop
cmp
ss
imul
pop
xchg
gs
xchg
test
pop
pop
pop
fstl
js
mov
jns
dec
out
push
push
rorl
shlb
mov
mov
jbe
leave
or
shl
nop
sarl
daa
mov
pop
or
pop
dec
fistps
das
hlt
ja
mov
lds
cwtl
inc
ret
sub
or
push
movsb
pushf
loopne
mov
je
pop
mov
sub
pop
mov
jge
and
movsl
lahf
es
xor
out
pop
sub
fildll
insb
jae
sbb
jmp
mov
push
cmp
out
loop
sub
fucom
dec
push
pop
idivb
xor
jle
test
pop
addb
add
add
int3
mov
leave
lret
gs
pushf
mov
movsb
push
mov
xor
out
pop
popa
call
imul
mov
push
aam
loope
rcrb
sub
js
pop
sub
repnz
xchg
push
in
or
inc
add
cmpsl
pop
add
add
add
imul
dec
mov
test
fisubrl
mov
cli
mov
scas
lds
or
push
test
roll
or
into
pop
out
adc
mov
dec
add
cli
mov
xchg
in
lock
pop
jb
push
cmp
mov
mov
pop
outsb
arpl
outsl
or
punpcklbw
mov
mov
out
pop
push
inc
sbb
mov
inc
cmp
or
lret
pop
nop
mov
push
cmp
xor
vunpcklps
mov
mov
sbb
jb
xchg
loop
push
sub
pop
mov
mov
xor
outsb
jae
mov
leave
ss
xor
pop
int
push
mov
jb
dec
inc
mov
pop
sub
or
sahf
sbb
mov
inc
and
or
fstpt
mov
jae
std
jb
mov
xor
fwait
mov
je
dec
bound
popf
adc
inc
xlat
lret
cs
sbb
pop
sub
je
pushf
mov
pop
jg
cmp
mov
fidivl
mov
pop
test
jns
inc
sub
adc
fistl
and
popa
cld
pop
movsl
shll
pop
stc
fisttpl
jecxz
je
pop
mov
inc
pop
rolb
scas
jbe
in
cltd
or
xor
pop
mov
test
in
testl
mov
enter
cmp
test
pop
mov
add
or
mov
or
inc
jp
mov
add
cmpsb
pop
pusha
mov
out
mov
lret
ss
cli
pop
sub
adc
loopne
cltd
shlb
enter
mov
inc
lahf
jp
loopne
ficoml
ret
pop
int3
pop
fs
cli
aam
pop
xchg
mov
adc
jge
int3
jp
pop
loopne
mov
pop
fnclex
mov
data16
xor
add
xchg
leave
mov
push
ss
pop
cmp
inc
or
fnstenv
cltd
sti
std
cs
pop
cmpsl
jns
mov
loop
adc
xor
cmovge
lcall
cmpsb
pop
insb
stc
dec
out
scas
lods
or
dec
ret
xlat
bnd
dec
pop
and
xchg
pop
mov
clc
lcall
insb
xchg
pop
hlt
push
frstor
imul
push
outsl
mov
sub
adc
aad
mov
xchg
pop
aas
or
call
aad
and
xchg
and
jp
inc
dec
push
int
xor
mov
fisttps
in
pop
imul
sub
lods
sbb
lds
inc
mov
cld
mov
pop
leave
cmp
mov
fstpl
lods
mov
aad
lret
test
jo
sbb
test
or
clc
ss
push
dec
les
push
test
movsb
lret
lock
pop
push
inc
imul
nop
mov
pop
pop
sub
dec
sbb
dec
jnp
cmc
cmpsb
xor
jne
insl
dec
test
sbbl
cmp
adc
fcmovnbe
mov
push
lcall
xchg
and
fcoms
fcomip
sahf
scas
pop
mov
cmp
aad
and
xor
leave
mov
mov
fs
fs
or
mov
push
dec
pop
or
cmp
inc
jecxz
pop
in
cmp
movsl
ficompl
dec
loopne
mov
dec
cmp
scas
push
std
ret
pusha
mov
mov
push
movsb
pop
sub
mull
imul
ja
int
cmpb
mov
jl
dec
jmp
pop
filds
pop
push
and
cmpsl
dec
cmc
stc
pop
mov
loopne
push
outsl
hlt
and
mov
mov
fbld
pop
out
mov
dec
test
add
dec
shll
mov
mov
cmc
cmp
mov
rcrb
sub
pop
fisttpll
aam
fdivl
pop
ret
sbb
imul
ror
mov
dec
pop
dec
fsubrl
adc
stos
pop
mov
pop
push
mov
mov
cmp
mov
sbb
adc
mov
push
popa
pop
mov
je
ret
dec
cld
pop
cmp
cmc
fcompl
out
shll
popa
pop
push
int3
cld
inc
les
clc
dec
arpl
xchg
xchg
mov
ljmp
test
push
or
push
xor
inc
mov
call
lds
cvtps2pd
arpl
jmp
pop
fwait
push
mov
push
lcall
ds
xor
push
ficoml
mov
jmp
mov
pusha
arpl
mov
fidivrl
ljmp
mov
dec
testl
dec
push
pop
sbb
jae
imul
dec
pop
iret
jge
xchg
ret
jmp
add
pop
cmpsl
adc
scas
lret
push
inc
out
fdivrs
xlat
or
insl
mov
gs
xchg
add
jle
or
add
out
in
mov
mov
mov
xchg
pop
ljmp
jnp
leave
adc
jge
leave
dec
clc
mov
add
popa
test
cmp
stc
nop
mov
cmp
cltd
mov
popa
aam
stos
cmp
test
cmp
cmp
adc
cmp
fistl
jle
mov
jl
cmp
inc
out
fistl
lea
sbb
movsl
pop
js
push
xor
imul
pop
jmp
pop
jns
ret
test
sbb
push
fs
adc
mov
push
push
inc
add
sbb
pop
loop
je
imul
adc
pop
lret
sbb
in
inc
and
insl
add
loopne
pop
aad
imul
repnz
fistpl
mov
jb
stos
mov
pop
cld
xor
push
pop
or
dec
fisttpl
xchg
pop
test
cltd
xchg
mov
fwait
mov
jp
fbstp
test
les
and
pop
mul
add
stc
sahf
pushf
mov
push
xchg
add
addr16
and
stos
inc
call
ret
xor
repnz
test
pop
mov
xchg
data16
testl
cmpsb
sub
push
leave
pop
jecxz
stos
mov
out
in
lret
jg
mov
mov
cltd
mov
xchg
stc
sub
pop
lcall
out
pop
in
push
push
inc
mov
xor
mov
inc
movsb
add
js
sbb
mov
nop
jge
jb
shll
pop
int3
into
test
push
in
pop
jg
fiadds
jnp
dec
cld
pop
adc
cltd
nop
pop
scas
movsb
enter
mov
mov
dec
dec
scas
cltd
std
mov
push
sbb
leave
cli
mov
in
xchg
or
mov
pop
jg
adc
and
in
mov
idiv
dec
test
xchg
mov
hlt
lret
pop
sti
rcrl
or
stc
movsb
cmpsb
xchg
mov
insl
push
out
jns
pop
push
xchg
adc
in
pop
cmpsl
pop
aad
mov
xor
sbb
jp
inc
inc
push
xlat
or
out
sbbb
and
inc
xor
pop
fwait
cs
dec
pop
cmove
in
push
cmp
lahf
mov
cmp
sub
adc
mov
faddl
or
pop
or
fucom
pop
xchg
lock
jecxz
xor
or
pop
mov
and
pop
fwait
rcl
push
pop
pop
pop
push
gs
cmp
pop
sbb
test
adc
mov
and
mov
test
push
pop
movsl
xchg
loope
mov
clc
jbe
test
jnp
add
iret
sub
outsb
outsl
loope
push
rcr
arpl
push
pop
fisubrl
and
pop
outsl
mov
bound
gs
xchg
push
fidivrs
test
scas
nop
pop
push
jne
add
sti
xor
pop
ljmp
jecxz
jae
int3
adc
in
mov
inc
sbb
inc
pop
cmp
and
jbe
push
mov
inc
sub
jno
pop
sbb
aam
jl
loop
pop
inc
or
sti
xchg
idivb
cs
pop
and
sbb
sub
ja
inc
xchg
fwait
pop
adc
add
sub
and
cmpsb
pop
imul
mov
pop
aam
outsb
inc
fistps
fnsave
sub
push
out
sub
pop
js
pop
icebp
fbld
mov
sbb
mov
cmp
and
xor
pop
movsb
fisubrl
lret
xor
bnd
sub
pop
clc
repz
mov
fucomp
sbb
mulb
fwait
jecxz
sti
lods
pop
lret
fbld
pop
xchg
dec
pop
insb
sarb
cmp
jae
cld
int
test
rcrl
xor
inc
dec
adc
pop
sub
dec
pop
xor
dec
cmpl
fldl
in
cmp
jb
push
insb
xor
out
pop
push
sar
fidivrl
pop
les
or
sahf
jge
out
mov
outsl
add
aaa
pop
nop
inc
rol
cmp
or
sub
jnp
adc
pop
add
imul
pop
cltd
aas
movsl
in
pop
je
sbb
stos
mov
lret
pop
lcall
pop
dec
xor
and
out
pop
rcrb
add
jl
mov
addr16
movl
addr16
out
dec
pop
push
or
push
pop
into
jo
js
pop
dec
sbb
fisubs
or
and
pop
lahf
in
mov
mov
stos
imul
sub
jo
mov
or
stos
es
aam
jb
and
jne
pop
sub
add
pop
inc
jl
pop
push
and
push
mov
add
pop
ret
dec
aad
mov
mov
mov
cmp
loop
jbe
es
pop
push
ljmp
mov
clc
popf
xor
pop
in
lahf
pop
xchg
imul
repz
fsub
pop
ret
or
fimuls
ret
fstpt
in
sub
pop
adc
jae
xchg
push
mov
out
cltd
dec
shl
or
pop
cmpsb
insl
xchg
loopne
cmc
das
mov
jo,pt
mov
inc
mov
dec
test
adc
pop
aam
add
ljmp
lret
sbb
pop
or
cltd
fisttps
fwait
leave
int
or
adc
sti
gs
xchg
cmp
pop
fistps
hlt
subb
cs
pop
out
add
out
jns
pop
inc
pop
xchg
incl
popa
dec
repnz
mov
in
xor
or
mov
fdivp
xchg
mov
adc
pop
out
mov
xor
incb
into
fwait
pop
ss
lcall
shr
xchg
aaa
pop
mov
pop
das
xor
into
pop
daa
sbb
mov
mov
in
pusha
in
pop
pop
pop
ds
xchg
cmp
je
cli
sbb
sub
mov
sbb
in
push
inc
lds
dec
in
add
call
jecxz
subb
mov
pop
lret
push
pop
adc
push
mov
push
and
cmp
lret
inc
xor
sbb
lea
outsb
pusha
pop
sub
pop
scas
jge
sbb
pop
dec
pop
mov
xor
lret
sbb
add
out
bnd
int
aad
ljmp
xchg
adc
lret
pop
imul
out
aad
ds
xchg
fcmovbe
cli
sub
jg
pop
rcrb
cmp
adc
das
xchg
and
jge
lahf
pop
out
mov
mov
pop
xchg
fsts
push
xor
addr16
mov
or
js
mov
jne
ja
in
xor
scas
mov
and
sbb
fstpl
pop
or
les
std
mov
add
mov
jns,pn
push
cmp
sahf
and
and
leave
mov
dec
mov
cmp
mov
xor
stos
fwait
push
mov
loop
mov
adc
fwait
dec
shlb
xchg
pop
movb
lods
adc
pop
xchg
pop
sub
je
sbb
mov
mov
ljmp
ret
cmp
xchg
movsl
dec
xchg
in
js
pop
test
popf
or
clc
sub
mov
mov
ljmp
cmp
dec
cmp
push
push
jmp
adc
mov
inc
pop
add
mov
jnp
mov
sahf
inc
adc
fdivrs
mov
rcr
or
loopne
dec
das
pop
mov
sahf
pop
push
insl
mov
mov
outsb
test
leave
or
fwait
loop
push
dec
sbb
mov
out
jl
push
cmp
lcall
sbb
fnsave
sbb
mov
adc
and
cmp
je
mov
push
mov
inc
mov
cmpsl
loop
cmp
dec
les
repz
pop
imul
ja
add
and
pop
jb
jno
lahf
inc
sub
or
js
and
sbb
mov
xor
mov
divb
xchg
pop
mov
add
cmpl
mov
in
push
mov
leave
nop
mov
inc
push
sub
pop
sar
sbbb
popa
jp
shrl
mov
pop
add
inc
mov
pop
dec
test
sbb
outsb
clc
pop
repnz
mov
add
pop
jo
cltd
fidivrl
in
das
adc
stc
pop
pop
dec
cmp
call
xor
and
mov
jmp
xor
jle
add
mov
pushf
jecxz
jns
mov
popf
jge
pop
mov
mov
test
sub
inc
xchg
cltd
jmp
fidivs
pop
repnz
mov
mov
push
fcoml
lret
pop
sub
shlb
cltd
lret
dec
daa
imul
mov
mov
lock
dec
fiaddl
mov
sbb
popf
push
xchg
and
xchg
pop
dec
cmc
dec
mov
jge
int
xchg
loopne
cmp
pop
fbld
aaa
rcll
movl
fwait
sub
scas
movsb
push
shld
inc
pop
fisubrl
jnp
sbb
scas
cmpsl
sbb
pop
mov
or
lahf
xor
sub
sub
push
mov
sti
jne
xlat
mov
out
mov
inc
sbb
xchg
or
pop
testb
cld
mov
push
sbb
insl
pop
jl
xchg
std
call
flds
dec
notb
je
fisttpll
mov
cmp
pop
pop
gs
adcb
and
fmul
lret
xor
pop
pop
mov
shll
imul
inc
std
pop
lock
cmp
inc
mov
pop
jecxz
mov
popf
inc
adc
pop
push
pop
pop
pop
adc
pop
push
into
subl
jmp
pop
lods
lret
sbb
dec
pop
stos
test
dec
push
pop
mov
daa
lock
and
sub
imul
aaa
mov
cld
mov
xchg
shl
fucomp
test
out
cmp
pop
cld
inc
sbb
adc
xchg
sbb
pop
test
std
mov
or
mov
mov
pop
scas
test
add
pop
jno
in
lcall
call
dec
out
cli
cltd
cltd
push
lahf
pop
or
jnp
loopne
and
stos
scas
push
imul
xor
movsb
pop
add
test
sub
lcall
out
aad
sub
sahf
lret
lea
pop
jno
sar
pop
sbb
mulb
pop
mov
xchg
mov
jbe
ljmp
add
jo
mov
mov
roll
movsl
mov
ret
cmp
loope
rcll
pushw
xor
pop
inc
mov
and
int
negl
jno
movl
fcompl
dec
and
sbb
idivb
adc
sub
out
xchg
push
mov
movl
mov
movsl
pop
xchg
pop
testb
mov
addr16
ret
sahf
push
pop
lret
xchg
pop
pusha
sub
int
inc
sub
mov
dec
lret
out
rclb
pop
inc
mov
add
imul
pop
in
fnsave
pop
mov
shl
bound
lret
fdivrs
pop
ja
push
inc
mov
out
pop
or
test
push
mov
sub
pop
les
jb
leave
mov
jmp
jnp
mov
lret
jno
pop
mov
hlt
bound
scas
insl
outsl
stc
xchg
push
stc
jno
xor
and
adc
and
dec
push
inc
pop
push
je
xor
bound
push
pop
aaa
dec
xchg
filds
push
int3
pop
inc
cmp
gs
mov
iret
lcall
mov
pop
or
pop
fldl
sarl
loope
push
das
hlt
adc
call
mov
mov
fisubrl
in
adc
inc
jne
loope
mov
lods
pop
mov
xchg
xor
push
pop
sbb
les
pushf
imul
or
mov
ret
dec
fsub
aas
mov
dec
fisttps
mov
xchg
stos
sub
pop
ret
mov
push
pop
pop
dec
mov
repz
insl
jecxz
mov
pop
ret
orb
das
and
sub
mov
mov
adc
cmpsb
int
pop
out
mov
int3
loope
lcall
out
in
insb
inc
sbb
pop
inc
bound
pop
jae
mov
imul
sbb
lods
dec
addr16
push
mov
in
pop
xchg
ljmp
pop
pop
xchg
mov
xchg
push
mov
pop
test
sahf
xchg
les
out
pop
mov
xchg
cmpsl
loopne
repnz
clc
push
pop
stos
adc
stc
lods
std
pop
cmpsb
clc
sbb
lcall
mov
cmp
pop
jo
sub
xchg
addl
xchg
repz
cmpsb
cmpsl
fists
icebp
enter
dec
in
popa
pop
les
pop
fwait
dec
inc
cmp
inc
and
repz
pop
lahf
xor
fwait
xor
shrb
stos
sbb
pop
cmc
dec
pusha
ficoms
xchg
dec
lahf
cli
xor
inc
ficoml
shl
push
fadds
mov
cs
imul
aas
sbb
ds
addr16
sahf
pop
mov
rcrb
push
shll
scas
and
loope
pop
inc
sub
pop
stos
mov
add
cmp
pop
dec
fadd
loope
les
push
out
add
sahf
in
or
pop
dec
xchg
pop
stos
cmpl
cld
pop
pop
inc
sahf
sti
loopne
mov
mov
fsubl
pop
lahf
mov
cwtl
xchg
sbb
arpl
dec
pop
test
iret
jg
insl
pop
loope
je
dec
mov
mov
push
dec
sbb
pop
pop
lods
lcall
push
in
inc
sub
sbb
gs
mov
lret
mov
jp
pop
stos
pop
add
lcall
loopne
push
push
cmp
imul
mov
out
fnstenv
fbld
mov
gs
mov
imul
stos
out
aam
in
test
mov
jbe
xchg
jb
sbb
js
stos
mov
mov
data16
pop
sbb
sub
cli
push
jns
sub
cmp
shll
pop
jo
inc
push
push
sbb
pop
popa
mov
cwtl
adc
pop
cmp
in
cmp
bound
je
sbb
out
xor
pop
xor
lahf
add
mov
out
add
lods
fwait
jnp
fcomps
or
push
adc
dec
pop
inc
test
mov
loop
cmp
scas
push
mov
stc
rorl
addr16
adc
sbb
out
cmpsb
mov
je
shll
or
repz
jecxz
pop
dec
sub
mov
cltd
imul
push
subb
icebp
and
cmp
mov
adc
cli
lock
pop
mov
push
mov
sarb
sbb
scas
mov
mov
arpl
jb
js
cmp
test
pop
add
fcomps
ja
repz
add
cmp
negb
cwtl
push
pop
mov
int
stc
inc
out
negl
mov
fsubrl
stos
les
push
inc
pop
push
add
sbb
xlat
or
shll
movsl
dec
mov
mov
adc
lahf
xchg
icebp
xor
and
jp
jbe
scas
ljmp
xchg
xchg
fimull
sbb
pop
jmp
dec
cld
outsb
outsb
jae
cmp
jle
das
dec
cld
fs
pop
out
xor
ljmp
lods
dec
sbb
jl
push
and
mov
loop
push
jle
lods
repz
repnz
sub
xchg
xor
jmp
mov
imul
bnd
arpl
pop
negb
enter
popf
jno
jns
pop
push
mov
sarb
lahf
cmp
out
jg
inc
cltd
negb
mov
or
ja
pop
mov
in
jg
shrb
bound
mov
pop
cltd
loopne
rcl
jns
adc
sahf
sbb
pop
ja
mov
dec
daa
add
push
xor
das
sbbb
xchg
dec
ss
stos
psubusb
mov
xlat
lret
mov
xor
cmpb
nop
mov
mov
pop
push
push
andb
clc
mov
jp
mov
dec
or
aaa
pop
ficoml
pop
hlt
pop
mov
addr16
or
mov
leave
in
ss
testl
sbb
pushf
ja
scas
sub
push
or
arpl
push
cs
sub
or
lahf
cmp
xchg
add
test
mov
add
pop
pop
repnz
in
seto
out
cmp
push
frstor
lret
mov
pop
push
pop
out
jb
add
adc
ret
inc
nop
movsb
lods
negl
aaa
xchg
sub
mov
dec
xchg
arpl
pop
scas
lret
or
add
adc
sarb
mov
cmpb
repz
mov
dec
or
and
out
push
shrl
fwait
pop
jb
inc
mov
mov
push
enter
sahf
pop
cmp
fs
add
sub
es
sbb
and
insb
pop
movsl
scas
stos
sbb
inc
cmc
pop
into
cmp
xchg
es
bound
pop
sbb
test
xchg
rclb
bound
pop
fsub
scas
jb
sub
xchg
inc
mov
loop
sbb
dec
lds
cmpsb
push
lahf
pop
aaa
outsl
dec
cmp
mov
repz
mov
pop
and
mov
jecxz
mov
addb
in
xor
xchg
aas
jne
cmp
mov
mov
daa
add
faddl
sub
xor
out
add
push
push
pop
rcl
lahf
sbb
dec
ss
movsl
mov
mov
fadd
out
pop
cld
sbb
dec
mov
in
shrl
mov
dec
mov
mov
scas
jg
mov
imul
rorb
aam
sub
pop
add
ss
mov
pop
push
lret
xchg
and
addb
sbb
mov
jbe
stc
andl
push
xchg
cmp
push
mov
iret
and
sub
fdivr
or
mov
push
shll
pop
in
into
pop
jge
sarb
mov
test
pop
mov
jmp
mov
and
inc
xor
add
xor
cmp
sub
pop
mov
stos
lcall
js
pop
xor
push
jae
mov
pop
into
mov
push
es
into
jo
jmp
inc
scas
mov
and
rcr
out
pop
xor
jmp
add
pop
pusha
data16
adc
push
jb
decl
xor
jmp
xlat
xor
lret
push
mov
imul
scas
scas
inc
je
xchg
jecxz
in
fistpl
and
sub
in
xorb
lcall
xchg
cmc
movsb
mov
mov
jo
push
push
pop
sbb
enter
jmp
fs
cwtl
pop
dec
and
cs
jp
scas
ds
xor
aas
daa
fdivrs
pop
cmpsl
scas
mov
jo
dec
out
leave
addr16
cmp
lret
mov
pop
in
aad
pusha
imul
pop
pop
cltd
inc
andl
popf
push
mov
push
leave
iret
hlt
cs
scas
inc
sub
or
mov
fists
outsb
fildl
push
mov
push
call
cmpsl
lahf
sti
pop
call
rorl
sbbb
in
push
jne
xchg
inc
mov
adc
mov
pop
ljmp
push
scas
jecxz
nop
jbe
lcall
rol
mov
pop
xchg
or
inc
sub
sbb
lahf
dec
fidivl
sbb
pop
xlat
mov
jmp
cmp
pop
and
pop
ret
push
lea
xchg
pop
and
test
add
cmp
shl
fs
mov
loop
sub
xchg
fstpl
xchg
push
mov
mov
fadds
push
fistps
mov
ret
stos
gs
pop
js
in
jbe
popa
adc
hlt
mov
xor
stos
xor
mov
adcb
and
int3
inc
push
jo
pop
decb
jg
xchg
cmp
sbb
dec
movsb
in
cmp
or
repnz
pop
loop
ja
push
ds
or
mov
xchg
sbb
mov
out
pop
mov
cwtl
nop
xchg
jp
insb
pop
popa
or
adc
sub
sbb
das
stos
dec
pop
out
cmp
sub
jne
sbbb
lock
mov
sbb
outsl
sbb
in
pop
push
mov
xchg
xchg
jg
adc
pop
sarl
out
loope
scas
and
xchg
test
arpl
mov
mov
shr
daa
xchg
adc
mov
pop
clc
inc
adc
sarb
sub
arpl
pop
js
js
jbe
pop
lahf
fadds
leave
icebp
cmp
dec
shlb
loopne
pop
outsl
lds
inc
orb
mov
lret
or
and
push
nop
addr16
jl
mov
cwtl
pop
jb
adc
subl
push
pop
sub
pop
repz
mov
lahf
dec
out
xor
sub
jmp
sbb
mov
clc
dec
pop
aam
adc
pop
mov
shrl
pop
movsl
dec
mov
jl
dec
ret
pop
and
shr
pop
inc
mov
fsts
sub
sbb
lods
scas
in
mov
xor
mov
daa
or
mov
out
lahf
xor
mov
sub
mov
mov
jle
xor
cmp
in
jmp
adc
test
dec
xchg
outsb
mov
adc
xor
cmp
clc
mov
arpl
scas
xchg
stos
mov
clc
pop
lahf
test
call
mov
pop
xchg
aam
data16
flds
out
mov
inc
cmp
pop
aaa
jb
pop
pop
das
push
mov
lods
adc
pop
cwtl
repz
fisubrl
inc
std
sti
pop
xchg
lret
scas
stc
mov
out
lret
xor
or
out
shll
xchg
cmc
loop
sbb
mov
dec
adc
popa
jb
out
pop
sbb
push
fmulp
mov
pop
leave
pop
and
mov
inc
fdiv
or
push
pop
mov
xor
xlat
mov
ret
pop
push
inc
inc
sahf
stos
mov
pop
sub
xor
call
fcompl
fs
mov
and
in
fstpl
dec
mov
push
pop
xor
mov
push
popa
fcoms
sbb
out
mov
xor
lods
and
xlat
stos
pop
adc
sahf
subl
jle
dec
sub
add
cmp
outsl
pop
jbe
ret
push
pop
mov
fwait
mov
ss
data16
mov
inc
fcoms
adc
adcl
mov
pop
orl
mov
outsb
lahf
mov
lea
dec
fsubrl
add
push
inc
repz
adc
or
sbb
sub
jl
cltd
out
jg
fidivl
sbb
les
jl
sub
pop
xchg
push
repz
mov
daa
sbb
cld
lahf
jnp
mov
mov
mov
fdivl
xchg
push
xchg
in
pushf
ret
add
inc
jge
xchg
movsb
scas
loop
ret
pop
stos
cmp
sub
jmp
dec
ds
fwait
hlt
popa
and
std
jle
push
incl
fs
sbb
test
mov
jecxz
inc
pop
adc
pop
popa
inc
and
inc
fsubrl
mov
dec
pop
cwtl
mov
lahf
mov
jo
jnp
mov
andl
mov
popa
xlat
ss
cmp
out
icebp
stos
scas
jp
idivb
jbe
xchg
adc
sbb
mov
jae
fimull
mov
fs
ret
repz
add
pop
aaa
pop
lea
xor
ret
les
decb
mov
fimull
test
xchg
inc
cmpb
jmp
jne
cmp
stc
gs
and
cltd
mov
inc
lcall
adc
mov
add
inc
in
jge
pop
pop
cltd
ljmp
cld
lock
aas
jmp
mov
mov
fimull
cmp
stos
pop
sub
in
fwait
fwait
test
pop
cmp
inc
repz
dec
stos
pop
jne
adc
pop
mov
movsl
and
xchg
adc
mov
inc
in
pop
pop
mov
lds
cwtl
sbb
adc
in
rcrb
cmp
mov
mov
repnz
xor
cmp
int3
test
xor
in
jae
and
inc
mov
mov
xchg
push
mov
xchg
mov
movsb
mov
pop
xchg
out
cmpb
jnp
sbb
sub
lret
dec
cmc
imul
imul
pop
out
mov
jecxz
jne
cmp
aas
lds
rcll
xor
mov
in
mov
sbb
jnp
pop
sub
test
in
loopne
jno
pop
dec
mov
clc
test
push
mov
push
scas
rclb
jns
mov
mov
lret
ret
adc
ss
in
pop
shlb
add
stos
mov
mov
sbb
pop
test
pop
stos
lahf
mov
arpl
daa
dec
fdivl
sbb
sub
and
push
pop
hlt
jmp
iret
adc
mov
stc
or
sbb
sahf
add
pop
add
out
pushf
inc
adc
sbb
rcll
dec
insb
aas
pop
jp
pop
xlat
in
xor
push
jle
popf
out
cmp
aas
lret
xor
fdivrs
pop
or
jne
popa
pop
jle
xor
cmc
cltd
sbb
outsl
pop
mov
lea
shlb
sub
mov
pop
sbb
mov
lret
pop
cli
xor
int3
scas
cmp
sub
add
movsb
pop
js
aaa
outsb
mov
mov
mov
or
mov
jnp
push
pop
mov
mov
dec
sub
lahf
pushf
cmc
aam
xchg
cmpsl
adc
or
stos
in
outsb
xor
pop
stc
out
out
lds
pop
ret
ret
arpl
push
or
enter
loope
push
lods
loopne
add
adc
mov
mov
aaa
pop
mov
sahf
pop
repz
ss
insb
and
xchg
push
mov
into
in
or
lock
call
insl
xor
sub
or
cmp
xchg
pop
inc
xor
xor
pop
test
loop
mov
pop
pop
jbe
popw
int3
sbbl
aas
inc
dec
and
push
pop
jge
lods
sbb
pop
lret
pop
fmull
aad
sti
aaa
rcrl
leave
jns
aas
les
and
sbb
sbb
mov
add
clc
mov
pusha
cltd
push
pop
add
mov
mov
pop
sub
cmp
test
pop
lds
mov
jmp
jns
shlb
cmp
or
pop
xchg
jno
std
add
clc
jae
dec
in
out
js
pop
out
mov
int
lcall
add
mov
pop
mov
mov
negb
and
faddl
cmp
cltd
inc
jmp
loopne
and
add
pop
lods
and
fs
icebp
mov
pop
es
fsubr
shlb
nop
loope
mov
xor
mov
aaa
mov
hlt
test
pop
pushf
adc
ficompl
add
outsb
adc
push
xchg
hlt
repz
fnsave
push
xchg
pop
xchg
popa
xchg
imul
pop
loop
add
mov
mov
xchg
pop
mov
push
xor
pop
add
mov
cmp
cmp
add
pusha
orb
jbe
mov
jno
jg
jle
xchg
out
xchg
int
out
sar
enter
adc
sbb
es
xchg
pop
cmpsb
int3
into
push
mov
push
xchg
sahf
pop
and
lea
scas
and
cltd
jne
adc
pushf
mov
shrl
and
aam
xor
lret
pop
fs
pop
sbb
pop
xor
xchg
or
jo
and
pusha
push
push
outsb
push
imul
adc
xlat
mull
out
in
stos
xor
sbb
adc
or
dec
mov
inc
jecxz
cltd
movsl
scas
mov
shll
data16
add
ss
push
push
add
push
scas
pop
fbstp
xor
adc
mov
negb
stos
ficompl
int3
mov
shlb
sbb
sbb
in
add
aad
pop
bound
push
nop
jl
xchg
rcr
mov
cmp
xchg
cmp
adc
ror
insb
int
ds
icebp
mov
call
push
cmp
fsubs
lea
leave
and
outsb
mov
pop
mov
cwtl
xor
aam
flds
cli
shrb
in
dec
mov
xor
inc
data16
push
xchg
ficoml
xchg
rclb
cwtl
pop
sub
test
pop
popa
in
js
xor
xchg
push
push
dec
enter
add
sub
mov
xchg
mov
mov
or
popa
cmp
xchg
cmp
and
pop
cmpsl
pop
jmp
and
mov
insl
outsb
lds
add
mov
ss
inc
cmp
pop
fs
bound
mov
mov
dec
filds
pop
mov
shll
in
bound
das
pop
imul
or
push
adc
jmp
stos
call
cld
movsb
aam
in
lds
push
and
dec
fdivs
xchg
jnp
pop
adc
push
out
mov
test
int3
int
inc
pop
pop
lahf
sbb
push
lds
arpl
or
and
push
pop
push
mov
aas
mov
rcrl
mov
inc
jne
hlt
push
movsb
adc
dec
push
and
mov
pushf
imul
out
or
add
aam
in
fidivl
and
testl
inc
repz
fmuls
adc
andb
dec
mov
mov
pop
mov
sbb
je
dec
das
push
mov
push
imul
sub
fdiv
pop
jo
dec
stc
push
cmp
pop
repz
int3
push
or
lret
or
add
jae
aam
sahf
mov
pop
nop
dec
pop
inc
dec
testl
clc
dec
or
in
repnz
jecxz
add
out
outsb
sbb
inc
movsl
xor
pop
sub
pop
and
sub
xor
ret
pop
test
push
sbb
xchg
dec
or
dec
inc
outsb
notl
iret
lretw
sbb
and
pop
fdivl
stos
lcall
and
ja
shl
push
mov
out
mov
xor
lcall
orl
notl
and
subb
scas
int
push
xchg
inc
clc
jae
or
mov
adc
pop
pop
pop
mov
out
scas
xchg
push
mov
jle
clc
lahf
dec
mov
jp
jecxz
jo
aas
pop
cmp
fs
and
in
push
mov
push
cmpsl
mov
mov
xchg
pushl
adc
mov
pop
mov
push
ds
rorl
inc
pusha
in
ljmp
andb
scas
sub
xor
inc
push
dec
pop
inc
add
and
lahf
xor
push
lret
test
cltd
inc
pop
in
test
inc
movsb
push
stc
xchg
lahf
insl
sub
mov
ret
negl
dec
rorl
stos
mov
sahf
fmul
das
sbb
test
movsl
mov
imul
mov
hlt
pop
lea
mov
jmp
sub
into
adc
pop
xor
pop
cltd
insl
push
lods
jecxz
sbb
pop
push
push
rorb
dec
adc
mov
push
xchg
pop
push
fcoml
pop
jp
aas
xor
push
fsubrs
fisttpl
mov
push
fiadds
shrb
cmp
adc
pop
sarl
push
sub
pop
lock
pusha
pop
movsl
fwait
adc
loop
out
mov
cltd
insb
mov
int
cs
sarl
cmpsl
roll
out
push
pushf
mov
mov
cmp
pop
call
mov
mov
jecxz
cmpsb
jno
notb
imul
sbb
lods
in
cmp
lock
pop
jg
cli
into
int
inc
out
cltd
je
test
test
xor
jmp
mov
mov
xchg
jo
adc
notb
jnp
sbb
jg
pop
cmp
loopne
xlat
push
lea
jbe
lahf
inc
push
xor
pop
aas
fsts
dec
leave
mov
cwtl
out
dec
scas
adc
ficoms
insl
and
xor
pop
std
mov
bts
push
aam
pop
dec
filds
fsts
jbe
mov
xchg
jbe
mov
cld
cmp
clc
sub
and
push
cmp
loop
dec
ja
daa
or
rcrb
fldenv
sub
or
scas
cmpsb
ss
pop
xor
mov
pop
inc
and
lahf
pop
xchg
lret
jae
dec
mov
stos
cs
lret
pop
xchg
jmp
adc
sbb
jge
pop
cmp
lods
sbb
in
pop
jmp
aam
and
pop
leave
jge
lods
ret
shlb
push
shr
addps
out
mov
xchg
xchg
dec
pop
mov
sbb
push
popf
mov
hlt
mov
bound
pop
shl
lods
push
adc
xor
sub
or
adc
sbb
cli
fld
pop
ret
mov
arpl
pop
pop
add
mov
inc
shlb
sahf
push
pop
outsl
ret
sub
cs
push
xchg
pop
fld
jbe
push
dec
iret
test
cmpsl
das
xchg
mov
pop
mov
mov
or
push
dec
fisubs
mov
dec
jle
adc
stos
sub
cli
test
adc
in
pop
dec
sbb
push
cmp
fcoml
sbb
stos
pop
mov
adc
cmp
push
pop
and
push
mov
shll
or
fimuls
jle
fnstenv
sub
cs
lahf
push
pop
or
push
sbb
dec
add
stos
test
pop
mov
lret
or
pop
push
sub
xor
xor
lahf
leave
xchg
fistl
adc
xchg
cmp
inc
mov
imul
sub
mov
lea
mov
pop
fisubl
pop
daa
pop
jo
test
rorl
adc
mov
sub
jmp
leave
fistpl
fdivrs
lcall
pop
add
mov
mov
adc
jb
mov
mov
pop
adc
sbb
pop
xchg
test
popa
mov
pop
test
rcrb
pop
dec
mov
sti
movb
push
dec
mov
insb
adc
xchg
and
sahf
std
les
mov
jmp
pop
mov
pop
fisubs
subb
pop
popf
cs
rclb
inc
bound
inc
mov
addr16
or
dec
pop
mov
xor
mov
pop
cli
cltd
rorl
dec
pop
fistpl
jl
or
mov
lahf
orl
daa
mov
push
sbb
out
dec
ret
js
lcall
and
pop
pusha
mov
stos
test
jo
in
mov
push
int
fisubs
cli
pusha
pop
lods
xchg
jp
cs
imul
xor
mov
sbb
mov
scas
dec
xor
jge
aad
std
pop
fists
pop
xor
mov
in
mov
pop
pop
ja
adc
push
aam
mov
in
cltd
lds
jmp
test
pop
sbb
das
push
stos
cmp
mov
jle
push
jmp
pop
xchg
jb
dec
mov
mov
hlt
pop
pushf
lds
in
push
xor
jno
loope
mov
iret
or
cli
mov
fwait
mov
dec
xchg
icebp
dec
add
arpl
inc
jge
pushl
mov
jae
test
pop
or
pop
es
jne
out
arpl
dec
into
lea
ds
mov
cltd
mov
outsb
xchg
clc
xchg
lretw
push
pop
nop
sbb
sbbb
fbld
in
xor
out
sub
mov
cmp
sbb
pop
fadds
mov
stos
clc
aas
bound
jl
or
cmp
mov
fwait
out
push
add
lret
mov
and
mov
cmp
sti
mov
inc
lret
mov
les
adc
and
arpl
pop
mov
fistpll
sbbb
clc
outsl
pop
push
adc
adc
pop
mov
push
xchg
leave
movsb
inc
lods
push
sub
in
cmp
mov
pop
push
aas
std
jo
jge
daa
fwait
mov
outsl
ja
inc
cs
push
stc
mov
fcomi
pop
imul
jns
xor
mov
in
push
mov
pop
leave
cwtl
cmp
cmp
jmp
jns
movsb
jae
pop
add
xchg
xchg
mov
loop
jle
add
or
out
pop
adc
cmc
dec
pop
imul
cwtl
loope
test
or
addr16
clc
xlat
pop
and
push
adc
pop
push
int
mov
popa
std
in
shll
push
sarb
jge
mov
sahf
and
mov
iret
mov
nop
pop
adc
loopne
jno
xchg
xchg
cwtl
cmp
dec
js
fwait
cmpsl
hlt
nop
dec
pusha
rcrb
fisttpl
mov
ljmp
pop
fcompl
idivl
lret
in
cltd
mov
pop
lods
stc
pop
dec
jb
sub
jmp
push
pop
into
push
popa
mov
jns
scas
xchg
jbe
and
in
mov
add
jge
scas
iret
imull
psllq
dec
stc
xor
inc
mov
mov
cmp
lds
add
bound
or
jecxz
arpl
mov
imul
xor
lahf
rclb
pop
addr16
push
out
xchg
or
pop
xor
in
jg
loop
jp
pop
addr16
xor
fbstp
out
mov
mov
jecxz
fwait
pop
cmc
pop
or
loop
insl
xor
jae
shl
push
mov
sti
and
pop
insl
jns
push
jnp
xor
xor
ds
sbb
mov
mov
icebp
sub
lods
push
push
lods
shlb
sbb
pop
or
cld
lahf
dec
test
sbbl
out
lds
shll
leave
jnp
sbb
iret
pop
mov
push
lcall
mov
pop
sub
push
jb
cli
push
pop
imul
cld
pop
pop
icebp
rorb
int3
inc
loopne
fsubrs
clc
add
in
mov
fcmovnu
dec
mov
subl
popa
stc
xchg
mov
or
mov
mov
pop
fsubrl
mov
jecxz
aaa
xchg
mov
pushf
cmp
lods
ret
add
pop
je
icebp
mov
pop
xlat
ljmp
push
aam
pop
pop
dec
inc
loop
lds
mov
pop
cmp
inc
aas
and
je
loopne
movsb
out
das
lahf
shlb
les
je
orl
add
ret
push
enter
jnp
movsb
or
iret
pop
add
lcall
pop
mov
stos
pop
push
pop
or
dec
test
popf
adc
or
xor
pop
idivb
pop
jle
sti
mov
in
mov
adc
fcmovbe
cmp
pop
sub
xor
mov
scas
out
insl
sbb
sbb
jg
dec
adc
pusha
inc
pop
js
sbb
push
loop
push
pcmpeqb
lret
shl
pop
sbb
mov
fildll
pop
mov
push
pop
clc
jp
insl
js
loopne
mov
pop
icebp
mov
sub
outsl
push
lret
cmp
movsb
pop
stc
sahf
fildll
mov
cmp
sbbb
xchg
cmp
xor
jo
sub
xor
inc
pop
lret
or
sti
or
jno
pop
js
int3
leave
xor
inc
jb
cmp
repz
pop
lods
int3
jno
jecxz
dec
jbe
mov
bound
fdivrs
cwtl
je
subl
in
aas
lods
push
pop
pop
pop
add
jbe
xchg
push
dec
adc
subl
adc
xchg
add
popf
pusha
cli
pop
xchg
movsl
clc
lock
mov
shrl
lods
or
mov
fstpl
mov
sbb
cmpl
cmp
inc
mov
outsb
sbbb
imul
xchg
jl
push
divb
xor
popa
sbb
fldt
jmp
push
repnz
mov
jmp
je
arpl
mov
les
rcrb
cmpsl
sbb
pop
cmp
dec
mov
push
test
out
stos
pop
pop
push
mov
adc
cmpl
mov
mov
cltd
push
outsl
pop
mov
imul
or
hlt
int
pop
sbb
mov
push
jl
and
hlt
lahf
cmp
pop
out
je
ret
fstpl
mov
leave
sub
clc
push
popa
jecxz
sbb
and
call
jge
loope
sbb
pop
xor
sti
arpl
fildll
pop
mov
mov
xchg
fwait
mov
push
movsl
or
mov
cmp
inc
jecxz
push
mov
aaa
xchg
mov
adc
rorl
mov
pop
adc
mov
mov
dec
fidivl
inc
dec
lahf
cmp
cmp
imulb
cmpl
lds
mov
mov
outsl
xchg
cmp
mov
xchg
pop
shll
fs
pop
push
mov
lock
imul
add
pop
inc
mov
mov
xchg
stos
pop
mov
cmp
mov
leave
adc
dec
mov
int3
pop
pop
jbe
in
cmp
push
stos
or
inc
test
in
arpl
inc
pop
mov
xchg
cmp
sbb
lds
adc
cmp
stos
sbb
rolb
or
test
adc
mov
pop
lds
insl
adc
pop
inc
cwtl
addr16
inc
push
pop
jge
mov
sbb
in
pop
arpl
adc
cmp
pop
xlat
rcll
imul
mov
pop
out
and
pop
loope
push
stc
inc
mov
sbb
jle
pop
int
jmp
fimull
jae
sbb
rolb
outsb
pop
xchg
arpl
jle
ss
mov
pop
xor
aam
repnz
jbe
add
sub
divb
mov
ljmp
pop
orb
loope
imull
inc
xchg
cs
pop
adc
mov
adc
fidivl
stos
popl
pop
repz
clc
cli
scas
adc
inc
xor
cltd
xchg
in
mov
sbb
sub
iret
push
das
inc
out
mov
nop
cwtl
and
cmpsb
sbb
inc
pop
nop
lea
out
ljmp
jmp
pusha
stc
jle
jle
or
jns
insl
idivl
es
test
cmp
movsb
mov
xchg
inc
xor
inc
shll
mov
adc
pop
push
jmp
xchg
sub
pop
test
aad
pop
xorl
sti
pop
adc
jecxz
push
mov
push
hlt
mov
int3
cmp
popf
iret
test
lcall
sbb
xchg
pop
je,pn
pop
cmp
orl
shl
dec
fadds
lahf
fistpl
data16
mov
mov
lret
mov
imul
xchg
mov
pop
sub
cld
xor
inc
and
inc
sbb
addr16
out
sbb
xchg
les
mov
fs
ret
pop
or
js
outsl
pop
and
mov
mov
xchg
mov
jmp
lods
mov
mov
loopne
mov
xor
sbbl
pusha
pop
and
neg
js
xchg
xor
sub
loopne
daa
pop
adc
lea
leave
lcall
and
idivl
pop
loop
movsl
mov
fwait
testb
iret
xchg
mov
test
sbb
ja
or
inc
ljmp
xchg
hlt
adc
jle
xor
mov
aas
repnz
outsb
ficomps
cmp
push
mov
lret
push
push
push
popf
fidivl
jbe
sbb
push
loop
pop
jne
insb
add
aaa
mov
loope
sbb
adc
rcrb
xor
push
outsl
push
cmc
call
lahf
mov
out
inc
mov
fsubr
and
scas
xor
jecxz
testl
lahf
inc
scas
push
sub
inc
or
dec
pop
add
popa
cmp
in
jo
and
lods
nop
or
stc
adc
fcoms
and
mov
in
filds
test
mov
xor
mov
sbb
sub
pusha
cmp
ja
jae
data16
in
aad
in
cmp
cmp
push
nop
fidivl
scas
adc
mov
popa
xor
jp
add
pop
cs
dec
jae,pt
jb
jne
sbb
adc
pop
push
loope
xlat
pusha
xor
fs
dec
inc
or
test
outsb
jl
scas
insl
iret
jmp
mov
pop
je
lods
repz
pop
sub
lea
xchg
pop
stos
pusha
addb
imull
mov
bound
icebp
mov
inc
xor
inc
ss
sbb
mov
sub
mov
mov
add
push
mov
push
cltd
cmp
lods
mov
out
and
cmp
fidivrs
pop
cmc
push
push
insl
pop
pop
cld
shlb
loop
jle
push
lods
mov
pop
mov
inc
fistl
sbb
jae
pop
rolb
fsts
mov
dec
pop
cmp
addb
push
jns
clc
xchg
pop
ja
fcomps
sbb
xor
mov
rcrb
inc
xlat
add
lret
pop
pop
xor
popf
pop
mov
gs
add
mov
jo
sti
loop
into
scas
cmp
push
pop
shll
push
inc
mov
sub
stc
fmul
xchg
sub
push
aam
cld
in
mov
mov
add
jne
add
orb
in
or
lods
ja
inc
jns
xor
cltd
cmp
xor
mul
cmp
inc
sub
jns
sbb
sub
aad
mov
movsl
pop
fidivs
nop
mov
enter
inc
sub
jno
stos
sbb
daa
test
loopne
pop
repz
xlat
cli
mov
lcall
jg
sub
pop
xchg
dec
imul
cld
mov
sub
vpshlw
cwtl
sub
leave
jne
jecxz
dec
push
mov
lret
sbb
and
iret
js
sbb
mov
or
aad
push
fisubrs
add
mov
xor
adc
mov
cld
mov
ljmp
add
mov
stos
ficoms
jb
pop
inc
push
mov
pop
std
sti
inc
jbe
out
in
leave
jmp
sbb
dec
popl
ret
pop
dec
jecxz
cmc
stos
pop
xchg
xchg
movsb
mov
and
jo
mov
test
or
mov
iret
xchg
int
rorl
lock
ficomps
pop
ss
inc
cmp
scas
cmc
idivb
es
in
ficompl
pop
sub
mov
test
pusha
decl
pop
adc
jbe
pop
repnz
addr16
daa
int
mov
inc
push
dec
jae
fcomps
mov
popa
pop
sahf
mov
dec
xor
pop
leave
pop
cmp
sbb
pop
subb
mov
jb
push
pop
test
add
pop
lret
outsb
addl
stc
push
add
pop
clc
mov
ds
xchg
pusha
bound
iret
sub
sbb
inc
pop
das
jne
mov
jo
push
mov
pop
insl
and
aam
imul
lahf
sub
or
xchg
fwait
mov
cmp
fcmovb
movsl
adc
adc
out
rcl
or
mov
xchg
add
sbb
or
lcall
fs
outsl
je
mov
sahf
sbbl
pop
push
jno
jmp
cmp
outsb
lods
mov
pop
mov
sub
mov
pop
nop
pusha
in
sbb
dec
mov
add
int
push
daa
lahf
enter
cs
lods
inc
aad
cmc
enter
or
mov
jno
jns
lret
or
push
jg
pop
popf
stos
mov
movsb
mov
add
mov
pop
jo
out
fcoml
stos
pop
nop
mov
mov
cmp
jno
push
jo
xor
push
xchg
mov
pop
or
out
push
aad
inc
addr16
dec
pop
push
adc
pop
or
add
pop
xor
scas
nop
or
stc
pop
dec
mov
sbb
sub
mov
test
pop
icebp
ret
imul
mov
sub
out
pop
aam
push
sub
aaa
mov
in
add
iret
jne
pop
jae
movsl
push
or
rcrl
pop
mov
scas
imulb
mov
lret
jne
cmp
pop
pop
adcl
inc
decl
pop
jge
leave
sbb
decb
add
sub
mov
inc
flds
cltd
loopne
push
stos
std
loop
mov
sbb
dec
loopne
xor
xchg
js
mov
shlb
ffreep
push
gs
pop
mov
dec
xchg
pop
inc
and
daa
add
xchg
sub
scas
adc
movsb
pop
push
arpl
push
pop
adc
pusha
ret
push
fcomps
mov
es
out
push
lods
push
outsl
pop
repz
sbb
pop
push
push
jae
out
xchg
pop
test
sub
in
aad
mov
lock
and
add
or
mov
mov
repnz
scas
sarl
movsb
insl
xchg
in
inc
pop
in
push
cwtl
lcall
daa
sbb
aad
cmp
cmp
pop
add
inc
mov
sbb
stc
jb
cmp
mov
cmpb
dec
or
pop
jo
test
aas
mov
cmp
sbb
das
clc
pop
arpl
lret
daa
jmp
xor
and
arpl
out
mov
lock
cmpsl
jno
test
sub
ret
decb
mov
in
fwait
daa
inc
cld
rcrb
imul
cltd
mov
adc
xor
aaa
into
sbb
cmc
dec
or
adc
xorb
and
imul
addl
mov
pop
fprem1
or
xor
fdivl
jno
scas
cld
idivb
push
push
gs
pop
daa
adc
out
push
popa
bound
pop
xchg
imul
scas
addr16
mov
push
out
sub
mov
fcmovu
int3
sahf
mov
and
testl
jle
std
sub
push
xor
cwtl
out
cmc
or
xchg
dec
inc
push
ss
pop
mov
enter
inc
mov
hlt
pushf
in
stc
inc
repnz
shrl
push
addb
mov
jb
dec
adc
lds
es
pop
sub
ret
ret
push
jb
lods
call
lods
hlt
js
xchg
dec
loope
sbb
jl
adc
cwtl
mov
ljmp
xchg
pop
lret
in
imul
adc
pushaw
std
cmp
lret
mov
xchg
ljmp
xchg
cltd
jecxz
das
mov
mov
push
and
pop
pop
dec
sar
sbb
mov
pop
sbb
fldt
add
ds
push
in
aam
mov
sbb
imul
mov
fadds
mov
cld
test
mov
cmp
aaa
test
adc
push
stc
imul
add
outsl
mov
daa
jp
lcall
repnz
jmp
jl
int
gs
mov
cld
mov
cvtdq2ps
push
mov
mov
das
std
fstps
scas
or
mov
in
hlt
fstps
jb
and
in
xor
pop
sarb
adc
jle
sbb
pusha
imul
or
pop
mov
inc
mov
addr16
shrl
cwtl
repz
push
mov
cmp
xchg
int
out
and
les
push
iret
gs
xor
pop
test
lods
jp
int
sbb
cmp
movsb
mov
addr16
dec
fs
and
jl
or
mov
lahf
mov
xor
sub
cli
scas
sbb
lahf
and
arpl
aad
pop
sbb
test
pop
sbb
mov
ja
aaa
sbbl
cltd
out
jbe
fwait
xor
dec
out
push
or
stos
sbb
or
scas
in
mov
pop
mov
je
pop
les
mov
xlat
sbb
and
pop
add
clc
or
mov
inc
sbb
xchg
out
sbb
mov
push
xlat
out
popf
pusha
push
dec
clc
push
pop
inc
pop
mov
dec
xor
pop
enter
add
mov
out
lret
dec
scas
insb
pop
dec
mov
pop
jg
cwtl
mov
inc
ss
scas
and
inc
imul
or
pop
mov
jmp
loopne
pop
mov
cld
cmpsb
push
loop
pop
mov
jl
pop
or
push
mov
cmp
movsb
insb
in
fs
and
xor
sub
sbb
in
add
out
fpatan
fcomps
pop
push
fisubrl
mov
pop
push
mov
inc
pop
adc
push
pop
pop
out
adc
mov
jns
loope
push
mov
sub
pop
pop
idivl
iret
sub
pop
outsl
clc
xchg
adc
and
pop
sub
inc
mov
mov
lahf
lret
xchg
pop
nop
inc
int3
adc
mov
pop
pop
lods
add
aad
dec
shrb
push
clc
inc
loope
arpl
pop
jns
fs
ja
pop
cs
arpl
jg
dec
imul
mov
mov
stos
fdiv
enter
js
lret
xor
mov
ja
lcallw
outsb
pop
jecxz
imul
sarb
jo
push
mov
iret
pop
adc
sub
sbb
pop
or
add
aas
lods
jnp
pop
xor
iret
adc
lds
mov
bound
cmp
add
and
mov
cld
dec
push
stos
jecxz
pushf
push
dec
les
pop
sub
lods
adc
inc
imul
pop
or
popa
adc
pop
push
loopne
outsb
add
pop
fwait
and
vpmovusdb
repnz
xor
push
loop
push
pop
out
xor
imul
rolb
pop
leave
pop
sbb
addr16
lods
mov
ret
es
arpl
lahf
sbb
mov
pop
lods
pop
rolb
mov
pop
cltd
stos
outsb
xor
cmp
jg
adc
and
pop
cld
jge
insb
fstpt
stos
xlat
or
sub
repz
lret
cmpsl
jl
sub
sbb
stos
sbb
pop
fisubrs
add
pop
adc
and
and
pop
out
sub
mull
fisttps
adc
dec
inc
push
pop
xchg
lahf
loop
frstor
or
push
movsb
mov
pop
adc
inc
enter
mov
push
pop
int
jns
jmp
adc
loopne
mov
pop
mov
cmp
pop
int3
clc
cmpsb
sbb
pop
popl
les
and
adc
sub
arpl
or
lods
dec
lock
mov
mov
inc
pop
dec
add
clc
out
dec
pop
adc
stos
out
sbb
movsb
pop
xor
xor
test
sub
mulb
js
repz
pop
daa
add
rorb
sbb
push
out
int
inc
imul
jecxz
dec
insb
pop
std
in
push
mov
or
xchg
mov
adc
xlat
out
pop
xchg
jle
sub
stos
sbb
ficoml
and
mov
dec
loope
mov
xchg
out
js
popf
addr16
les
data16
mov
lcall
pop
int
outsl
test
push
xchg
add
mov
out
pop
jne
lods
mov
stos
add
xor
pop
call
cmp
pop
mov
int3
shll
or
push
cli
jo
or
pop
xor
lret
popf
ljmp
dec
xorl
scas
push
mov
imul
mov
inc
out
mov
into
es
in
mov
push
pop
mov
sub
pop
xchg
mov
xor
dec
ret
lock
andl
cmp
or
add
xor
dec
test
pop
stos
xlat
movsl
jl
and
mov
dec
mov
pop
pop
sti
pop
add
jp
pop
repz
mov
loope
hlt
push
mov
lea
sub
xor
pop
inc
pop
loope
xor
std
mov
xorl
test
adc
pop
pop
pop
inc
lods
mov
bound
nop
push
out
aam
scas
sbb
pop
dec
xor
movsl
mov
mov
ljmp
scas
lods
pop
sbb
test
or
push
pop
hlt
push
push
pop
inc
fcomip
push
sub
pop
sbb
leave
rcrl
cmp
push
xor
in
pop
xor
sbbl
scas
jae
pop
shll
sti
cmp
int
stos
fwait
into
stc
sbb
jp
pop
mov
aas
push
inc
mov
cs
cld
xchg
adc
cmp
imull
pop
dec
cwtl
ret
lcall
add
sbb
lret
test
pop
adc
imul
lods
cmp
inc
pop
out
fcompl
and
xor
movsl
and
ret
das
in
dec
daa
loope
sub
cld
xor
popa
fdivs
shll
push
jne
insb
orl
sub
andb
pop
mov
stos
ss
pop
imul
push
testb
mov
int3
ret
sbbb
stc
in
cmp
add
mov
out
or
jo
mov
push
add
pusha
je
or
in
bound
pop
xchg
add
mov
dec
lds
xor
stos
negl
pop
adc
lret
add
mov
es
fldl
dec
cli
and
mov
movsb
out
int
pop
ss
neg
mov
mov
inc
mov
adc
imul
jle
fadds
adc
push
out
cli
mov
xchg
or
sbb
pop
lock
into
push
and
mov
ret
lcall
push
sub
movsb
jg
mov
mov
loop
pop
or
jmp
pop
testb
xchg
push
icebp
sbb
and
mov
inc
scas
pop
xchg
mov
lea
xchg
adc
xchg
fidivrs
cmp
lret
and
fdivr
in
prefetch
or
sti
movsl
sbb
popa
fbld
cmp
jae
pop
pop
add
pop
in
lahf
mov
fbstp
mov
xchg
pop
dec
subl
pop
dec
fiaddl
push
mov
mov
inc
mov
pop
lea
pop
mov
adc
arpl
leave
or
sarb
inc
popf
dec
pop
repnz
aam
aas
gs
push
aas
in
sub
mov
pop
dec
js
jno
xorl
xchg
jp
clc
pop
mov
shrl
pop
push
aad
lods
fisttpl
pop
cs
popf
stc
add
pop
gs
xor
or
movsl
dec
jle
pop
popf
pop
fucomp
addr16
imul
mov
test
es
inc
fwait
int
test
mov
jle
inc
mov
rcl
shl
ficompl
je
insb
lds
test
inc
adc
sbb
aas
pop
pop
pop
rcll
jp
xchg
cli
pop
cmp
gs
pop
ret
in
bound
jmp
leave
adc
xor
sbb
jg
cmp
fwait
stos
push
pop
fcmove
push
scas
mov
and
mov
and
inc
int3
and
sbb
stos
popa
jmp
mov
test
jns
mov
sub
jp
fildll
pop
sbbl
or
add
lcall
xor
stos
cltd
rcrb
test
push
mov
mov
xor
fsin
pop
sbb
into
push
imul
jmp
in
cmp
pop
and
je
and
xchg
dec
stos
pop
xlat
mov
stos
pop
jg
inc
mov
loope
lds
pop
cmp
mov
xchg
mov
int3
jle
pop
mov
andb
popf
aad
lret
dec
cmp
pop
xchg
jnp
imull
mov
pop
sub
imul
pop
dec
pop
mov
jl
setnp
jae
fmul
jne
in
push
fistps
fs
aam
and
mov
ficompl
pop
loop
aam
out
ret
mov
sbb
sub
pop
sbb
testl
pop
and
pop
fcmovbe
pop
mov
xchg
lods
jbe
es
data16
and
inc
in
pop
xor
fisubl
xchg
or
mov
mov
outsb
sti
divb
jnp
es
lret
sub
cld
push
movsb
pop
pop
mov
pop
inc
aaa
stc
add
inc
enter
out
lea
fistpl
test
sub
cmpsb
das
xchg
bound
addr16
jmp
mov
xchg
pop
adc
xchg
frstor
adc
fcoml
hlt
jge
fists
std
mov
js
xchg
sbb
push
add
push
scas
push
mov
pop
mov
mov
mov
sti
sbb
daa
dec
rolb
aas
out
cmp
sub
jne
pop
push
lcall
pop
and
xor
xor
push
sbb
mov
outsl
xor
push
cmp
sbb
arpl
out
mov
fcomps
inc
pop
pop
push
jnp
push
mov
dec
xchg
pop
dec
icebp
incl
inc
es
pop
sub
out
pop
sbb
repz
lods
pop
xchg
jmp
push
or
xor
in
test
aaa
push
pop
int
jle
jb
insl
lret
nop
pop
scas
mov
sbb
mov
test
les
pop
jle
mov
mov
int3
or
add
scas
dec
popa
add
fnstcw
mov
test
and
mov
rclb
lret
cmpsb
sub
insb
and
pop
pop
add
dec
bound
es
js
cmpsl
test
lcall
pop
popa
mov
mov
das
cmc
sub
xchg
pop
loopne
pop
cmp
mov
shrl
mov
pop
inc
xchg
aad
mov
nop
sbb
in
scas
fsubrl
cmp
sbb
mov
cld
jmp
cs
fstpt
ljmp
test
jle
mov
xor
pop
leave
push
jo
mov
sub
push
sbb
and
xlat
or
fmull
jecxz
fistl
fdivrp
addr16
insl
negb
ja
fcom
xor
pushf
add
stos
xor
push
aas
pop
jo
sub
mov
andl
sbb
dec
mov
mov
pop
movsl
ss
inc
mov
cmp
out
or
mov
jae
adc
jecxz
and
lods
cld
mov
movb
push
pop
mov
aam
ds
sub
xor
mov
pusha
in
pop
outsb
cmpsb
orl
jbe
adc
jo
jns
pop
xor
in
out
mov
mov
mov
jp
pop
test
adc
lret
fnstenv
xor
or
pop
cld
xlat
pop
adc
mov
xchg
and
insl
jmp
pop
pop
repz
push
mov
xor
icebp
pop
pop
mov
dec
sarb
mov
lods
ret
popf
inc
in
adc
fidivl
scas
or
mov
lods
sub
movsl
stos
fcomi
sti
adc
and
xor
sahf
jp
ss
pop
rolb
jo
xchg
fldenv
cmp
jl
data16
hlt
rcrl
pop
cmpsl
or
cmp
daa
movl
cmp
sbb
in
xchg
mov
and
andb
das
mov
cmc
fldcw
mov
leave
outsb
xchg
pop
stos
in
cltd
mov
pusha
jle
into
xchg
sbb
mov
mov
xchg
push
jbe
sub
cmp
push
mov
enter
push
fildl
or
ljmp
outsl
xchg
lret
push
fstl
shll
jmp
pop
mov
or
push
jecxz
adc
or
es
and
call
pop
fnsave
rclb
jle
push
pop
fcom
into
adc
std
pop
xor
push
dec
loopne
lret
or
fstps
lret
mov
or
mov
cs
pop
rcrl
lods
repz
sarb
pop
or
or
mov
out
pushf
popa
mov
adc
imul
leave
mov
pop
jl
sub
xor
pop
add
or
pop
xchg
xchg
stc
adc
xor
jp
addr16
popa
mov
je
inc
pop
mov
mov
cmp
js
dec
push
xor
leave
sub
ret
imul
or
add
mov
pop
ret
lret
xor
pop
or
jne
inc
jle
test
cmpb
fucomi
cld
cs
scas
stos
add
stos
or
jbe
mov
faddp
repz
sbb
xchg
cltd
sahf
pop
shll
jge
xor
dec
inc
lret
jmp
add
rcr
loop
push
int3
cld
lret
add
hlt
jmp
pop
das
pop
xor
and
mov
aas
mov
mov
out
ficoml
inc
mov
fidivrs
sbb
loop
mov
mov
mov
lods
dec
pop
jmp
sbb
adc
mov
sub
pop
loopne
and
test
cmp
xor
push
add
mov
ss
push
or
dec
xchg
mov
lods
pop
jno
aad
inc
call
mov
add
jne
cmc
aas
test
inc
adc
pop
shrb
xor
icebp
imul
flds
in
inc
orb
lods
jg
sbbl
inc
shrb
mov
mov
cwtl
pop
mov
pop
sub
shlb
std
push
shr
pop
lret
sbb
daa
in
push
test
pop
test
push
out
mov
iret
mov
lods
mov
pop
add
mov
cmp
pop
dec
pop
pusha
out
in
and
sbb
pop
dec
sbbl
push
aad
lahf
add
les
jl
dec
das
sub
cmp
mov
fimull
outsl
pop
fwait
insl
popa
movsb
aad
rcrb
push
and
cmp
sti
lahf
test
sbb
xor
or
insb
repnz
cmpsl
fstps
xchg
frstor
es
scas
add
push
inc
or
cwtl
lcall
cmp
movsl
jl
cwtl
stos
adcl
ret
loop
dec
pop
dec
mov
sahf
in
sbb
notl
sbb
sbb
mov
push
addr16
mov
pop
lea
sub
jns
push
mov
nop
cmp
inc
leave
stos
push
xchg
notb
sub
lock
pop
cltd
cmc
cmp
jo
jnp
das
sbb
sub
mov
jnp
mov
nop
scas
jmp
sbb
add
adc
jns
fimull
jp
adc
push
pop
fcmovnbe
sbb
inc
mov
cltd
adc
mov
adc
xchg
pop
mov
cmp
inc
in
dec
pop
add
cld
or
dec
jne
mov
fidivl
jp
pop
movb
sub
hlt
daa
sahf
jae
fwait
cmpsl
pop
add
call
repnz
or
mov
aam
out
test
imul
lods
pop
mov
shll
cmp
subb
pop
fldenv
mov
out
repz
test
negb
dec
add
mul
call
cmp
mov
jns
imul
orl
pop
nop
adc
into
ret
jno
cmpsl
pop
dec
fisubrs
pop
mov
cmp
jmp
pusha
pop
repnz
sub
inc
xor
xchg
sbb
out
fiadds
lret
scas
or
sub
cmp
jns
or
xchg
sahf
adc
pop
mov
fmulp
and
pop
xchg
mov
xlat
and
mov
sub
neg
loope
add
pop
pop
mov
aam
jmp
ret
call
or
out
adc
cld
mov
aas
js
jge
iret
xchg
dec
mov
and
cmp
xor
sarb
rcrb
sub
fs
out
push
pop
dec
mov
push
push
lahf
mov
sbb
fiaddl
aam
dec
cmp
mov
pop
sub
ret
mov
mov
mov
mov
fbld
push
mov
push
push
inc
fiaddl
mov
mov
hlt
pop
lcall
push
cmp
and
hlt
dec
mov
frstor
lahf
fsubs
jns
push
inc
pop
mov
mov
push
loop
or
push
adc
mov
stos
sbb
into
jg
pop
mov
sub
scas
mov
clc
adc
cmp
mov
fadd
pop
aas
xchg
dec
negl
xchg
test
xor
insb
fnstenv
ret
lahf
lock
pop
aas
mov
mov
pushf
jns
or
enter
and
sarl
aad
out
pop
fs
nop
inc
push
jmp
sub
dec
pop
add
dec
sti
lods
mov
loope
pop
add
dec
push
push
add
xchg
pop
pop
out
je
pop
xchg
arpl
mov
mov
or
enter
outsb
aam
insb
fcmovnbe
cmp
xchg
imul
stc
push
ja
cmp
aam
push
fildll
add
shlb
gs
subl
pusha
cmp
pushf
mov
pop
pop
pop
xchg
sti
push
mov
mov
es
inc
rorl
cli
pop
xor
insb
or
arpl
pop
xlat
outsb
sub
pusha
lcall
popf
out
pop
xor
mov
scas
pop
or
fcomi
adc
mov
outsl
cld
fs
jno
ja
sub
and
outsb
cmp
call
xchg
mov
jnp
leave
pop
aaa
mov
cmpl
pop
cli
gs
scas
insl
std
repnz
dec
mov
pop
mov
adc
add
das
inc
dec
sti
xchg
mov
push
cmc
pop
push
add
ret
cmp
mov
mov
cmp
orb
pop
mov
popa
mov
fldl
mov
jns
mov
add
sub
cmp
or
sbbl
std
lahf
sub
mov
push
or
mov
cmp
neg
mov
sbb
pop
jmp
cmpsl
cs
jmp
sbb
pop
xchg
loopne
std
mov
lahf
inc
movsl
inc
push
fld
neg
mov
pop
or
mov
inc
adc
mov
xchg
or
fs
stos
push
cmp
or
scas
inc
dec
fndisi(8087
dec
inc
jne
pop
out
call
cmp
icebp
negb
loopne
bound
shrb
inc
pop
mov
mov
pop
out
mov
les
mov
dec
xor
repz
adc
pop
push
jecxz
pop
cmp
fs
rcrl
cmpsl
pop
scas
es
mov
in
cltd
fstpl
mov
and
add
lret
in
pop
aas
cmc
lea
test
sub
fistpll
loope
aaa
sub
fildl
mov
mov
pop
push
jbe
pop
aaa
xchg
pop
dec
cli
xor
pop
test
inc
mov
add
call
adc
xor
insw
mov
push
mov
sti
lret
sbb
std
in
out
fistpll
sub
mov
inc
push
xlat
and
scas
mov
js
out
pop
repnz
dec
out
jmp
inc
jecxz
xor
lods
bound
pop
xchg
shlb
mov
inc
mov
fisubrl
lcall
adc
push
inc
fdivrs
sbb
jns
lret
mov
and
fidivrl
jp
shl
cmpsl
mov
pop
adc
add
dec
xchg
scas
call
pop
mov
or
cs
add
shlb
mov
push
sbb
jne
pop
sbb
outsl
ja
mov
lock
test
pusha
in
hlt
pop
inc
out
add
pop
pop
or
add
pop
jo
xchg
stos
sub
test
xlat
dec
inc
mov
fisubrs
mov
pop
pop
mov
jg
mov
pop
add
inc
push
stos
inc
mov
test
pop
jnp
mov
sub
fldenv
inc
mov
pop
int
pop
jle
sbb
scas
notb
mov
add
xor
sub
lcall
cld
pop
test
mov
push
gs
inc
pop
mov
jbe
pop
ret
jecxz
pop
xor
xor
pop
sar
sarb
sub
mov
enter
les
push
out
jbe
mov
fsubs
bound
sbb
int3
les
pop
mov
aam
pop
cmp
push
pop
mov
mov
pop
jmp
int3
addr16
pop
outsb
fmuls
adc
mov
fidivrs
fcmovb
mov
push
push
pop
add
jb
sub
jo
dec
fistl
fldl
jp
lret
sub
sbb
xor
add
jnp
cmp
dec
mov
jecxz
jne
cli
in
scas
stos
mov
roll
mov
aad
lar
push
enter
jns
or
repz
call
pusha
push
pusha
fdivs
sbb
jmp
adc
lods
leave
fdivs
inc
mov
loopne
enter
mov
adc
ficoms
rcrb
adc
outsb
xchg
or
xchg
jns
add
fldenv
sub
aad
rclb
hlt
cmc
push
popf
ficoms
xchg
inc
xor
fisubl
into
jb
dec
mov
mov
and
mov
mov
enter
lret
add
dec
adc
mov
mov
or
dec
fbld
add
scas
pop
adc
pop
mulb
jns
pop
inc
dec
sbb
or
and
jns
aaa
lock
pop
xchg
ljmp
je
add
sub
jmpw
jns
sbb
jecxz
subl
gs
or
xchg
xor
mov
push
sub
popa
clc
push
pop
jns
or
sub
pop
inc
imul
and
xchg
cmp
mov
push
les
pop
popa
shlb
pop
in
scas
adc
cwtl
outsb
mov
add
xlat
pop
adc
pop
xor
ljmp
sub
ds
mov
sub
scas
jae
and
jnp
in
mov
mov
js
fcomps
mov
icebp
fistps
ret
rorl
push
lret
loop
xor
pop
je
pop
sbb
pop
rcrb
dec
mov
test
adc
jno
pop
pop
pop
cld
add
lahf
mov
mov
fcmovnbe
arpl
out
push
fwait
subl
bsf
dec
inc
ret
clc
repz
aad
adc
dec
pop
fbld
push
pop
dec
jbe
sti
out
mov
mov
jae
mov
jge
sahf
arpl
sub
xor
jns
lods
lret
add
mov
mov
mov
aad
lahf
pop
jl
cmp
pop
hlt
jg
shr
popa
lods
pop
iret
je
icebp
mov
mov
pop
shll
xchg
jmp
loope
xchg
jnp
rol
call
daa
pop
mov
scas
adc
fisttpll
dec
and
lret
dec
dec
arpl
add
xlat
adc
push
nop
pop
xor
xorb
stc
add
js
aam
icebp
int
js
jns
pop
xchg
cmpsl
imul
and
loopne
pop
jp
inc
xor
or
pushf
or
pop
int
bound
out
jnp
and
mov
or
push
mov
jnp
loopne
insb
and
in
pop
push
lahf
loop
and
fsubs
scas
cmpsl
inc
incl
js
aaa
xor
ret
add
cmp
adc
bound
ss
lea
ja
xor
loope
lret
pop
inc
std
cs
mov
xlat
inc
mov
mov
xchg
jle
lahf
fcompl
cld
sub
jne
sub
test
gs
mov
jae
call
sahf
push
sbb
imul
xchg
sbb
ret
js
fisubrl
stos
sbb
pop
mov
add
push
insl
mov
mov
xchg
mov
pop
xchg
xor
je
iret
sub
in
insw
and
dec
mov
fistpl
and
push
cmp
repz
sub
xchg
pop
push
add
scas
jp
pop
std
lea
dec
push
dec
pop
jne
loop
mov
ret
cld
mov
add
jb
pop
rolb
add
mov
sbb
negl
loop
fldcw
les
js
popl
scas
pop
clc
cmp
loope
cmpsb
inc
or
fiaddl
pop
jo
and
enter
lea
and
shrb
dec
mov
or
jbe
pop
mov
icebp
bound
dec
cmp
or
scas
test
push
push
dec
stc
jg
std
pop
dec
jne
int3
mov
xchg
ds
mov
inc
ss
rcrl
inc
aas
insl
mov
lock
pop
xchg
stos
loopne
sbb
cmp
xor
add
and
loope
xchg
cmp
clc
pop
inc
and
add
pop
pop
std
mov
sbbl
cmp
lods
xor
outsb
or
sub
nop
movsb
add
scas
mulb
cmpsl
pop
pop
cmp
aaa
push
sbbl
fnstenv
mov
aam
daa
inc
mov
pop
sub
adc
test
lods
loopne
imul
add
dec
or
in
jno
inc
jmp
pop
jne
jae
push
mov
scas
mov
stos
mov
inc
int3
inc
pop
insb
xchg
data16
push
pop
pop
nop
mov
or
xchg
mov
push
hlt
jecxz
push
pop
lods
imul
mov
pop
add
call
or
fbld
lea
mov
xor
je
stc
test
pop
loope
inc
sub
pushf
lds
mov
jg
mov
sti
add
psadbw
add
or
pop
sub
imull
pusha
daa
sbb
mov
or
fdivs
and
mov
adc
fcoms
outsb
jae
push
repnz
scas
stos
jmp
dec
pop
mov
mov
gs
aam
jecxz
and
cltd
sbb
sbb
push
out
xchg
add
mov
mov
mov
jo
pop
popf
rclb
push
fldt
sarb
lret
pop
cmp
loope
pop
mov
pop
or
fcmovu
adc
pop
pop
pop
loope
repnz
imul
mov
push
jle
roll
xchg
mov
test
hlt
js
cmp
fadds
enter
fsubs
xchg
dec
mov
jbe
lds
pop
mov
mov
mov
bound
adc
mov
push
pop
mov
adc
pop
ret
leave
jns
pop
mov
sub
mov
pop
pop
and
pop
jecxz
loopne
cmp
pop
out
lret
mov
jmp
add
fcoms
lcall
repz
fs
decb
mov
test
aad
jp
pop
pop
ja
or
outsb
mov
cwtl
das
jo
movsl
fsubrs
enter
repnz
push
popa
sete
ret
out
pop
clc
loope
fisubs
pop
sbb
xor
nop
jb
hlt
pop
mov
daa
mov
pop
aaa
xor
inc
jmp
repnz
loope
out
inc
popa
pop
mov
sti
pop
mov
mov
jae
mov
mov
test
mov
stos
sub
pop
jle
mov
pop
or
add
mov
ja
or
cmp
sub
mov
outsl
insl
scas
out
xor
xchg
push
pop
cltd
movsl
inc
std
mov
and
std
in
jo
or
inc
mov
cmp
arpl
jbe
jmp
mov
cwtl
push
pop
mov
loop
xchg
std
in
pop
xchg
lods
das
je
cmp
lds
lret
mov
xchg
and
mov
add
add
jae
xorl
lcall
lret
mov
pop
into
loopne
adc
jle
mov
pop
mov
bound
adc
sub
imull
pop
shr
add
cmp
fcomps
pop
fldt
pop
insb
jae
push
popa
push
jmp
pop
loop
inc
cs
mov
sub
bound
push
cmp
push
pop
std
xchg
pop
iret
push
sti
sarb
leave
loop
cmp
xor
lock
pop
aas
cs
gs
dec
pop
add
inc
ret
adc
push
mov
cld
in
push
or
sbb
insl
pop
leave
popa
addb
cmp
push
pusha
fsubrs
sub
pop
aaa
xchg
pop
lahf
xor
ds
out
pop
and
and
lods
cmp
sbb
cwtl
inc
jge
xchg
outsl
mov
in
pop
pop
negl
loopne
cmp
hlt
pop
push
lahf
lret
add
push
lcall
mov
ret
mov
pusha
adc
les
mov
push
andb
cmp
ret
push
lea
lret
push
scas
mov
sti
dec
adc
pop
in
imul
or
push
xlat
ret
cmp
dec
loopne
pop
in
mov
pop
or
inc
mov
outsl
adc
movsl
mov
fsub
sarl
loopne
mov
xchg
adc
movsb
dec
test
inc
or
pop
or
rolb
push
rolb
mov
ss
jb
add
sub
popa
in
or
mov
sbb
js
ret
add
rol
cmp
adc
ret
insb
cld
out
push
pop
lods
pop
cwtl
cmp
out
sbb
ficomps
aam
fadds
decl
pop
stos
pop
in
add
inc
lahf
mov
xchg
ret
cltd
cmp
cld
mov
lods
daa
xchg
cmp
call
xor
lahf
cmp
pop
pusha
fimull
sub
push
pop
adcl
imul
scas
dec
cmpsb
daa
ret
das
cli
mov
jmp
mov
jbe
pop
cmp
iret
scas
mov
aad
lods
push
jnp
test
sub
out
pop
xchg
dec
pop
shlb
pop
in
jno
lea
pop
or
fsts
mov
aad
in
ljmp
ret
dec
lock
sbb
push
pop
dec
mov
sbb
mov
pop
jbe
xchg
pusha
dec
push
pop
dec
xor
mov
enter
xchg
mov
in
out
mov
mov
inc
frstor
jae
pop
jnp
dec
push
xor
daa
out
pop
je
arpl
pop
mov
xchg
pop
adc
push
or
int
inc
sub
or
fidivrl
lcall
rcrl
in
pop
and
jle
mov
mov
jle
sub
pop
xchg
sub
inc
stos
out
in
mov
ret
test
das
sahf
jne
sbb
add
push
pop
pop
sbb
mov
inc
sbb
pop
lods
jmp
stc
jb
inc
push
icebp
aas
popf
cmp
enter
xchg
out
and
aad
push
sub
in
push
mov
pop
pop
int3
and
arpl
mov
adc
clc
xor
fidivrl
test
mov
in
out
adc
mov
ret
pop
jne
inc
mov
das
mov
push
mov
cmpsl
hlt
xlat
dec
pop
lds
pop
push
outsb
xchg
dec
dec
jl
fdivrs
cli
test
imul
in
iret
pop
ds
sbb
out
orb
fwait
adc
inc
pop
sbb
mov
sbb
inc
pop
sub
pushf
fidivrs
mov
xor
push
pop
rcrb
insl
lahf
rcrb
push
out
xchg
pop
test
fisttpl
pop
jae
cwtl
jecxz
jp
jno
pop
cmp
std
inc
in
pop
and
test
stc
push
pop
in
js
clc
popl
popa
cs
dec
xchg
xchg
mov
pop
mov
mov
in
add
pop
sbb
scas
mov
mov
pop
fildll
sti
cwtl
jmp
imul
out
lods
scas
jb
scas
mov
in
daa
test
mov
fsubr
pop
ficompl
cmp
stos
arpl
jno
insb
jb
scas
add
nop
jo
mov
mov
loopne
push
jno
test
insb
icebp
pop
mov
pop
push
adc
stc
mov
leave
insl
dec
add
pop
scas
popa
cmp
arpl
xor
lret
fiaddl
or
dec
fs
iret
xchg
mov
cltd
pop
addl
pop
add
inc
cmpb
leave
aam
movsb
dec
mov
test
fistps
cmp
mov
jmp
sbb
jne
inc
sub
cmpsl
jp
in
xchg
stc
div
mov
add
or
popa
or
mov
mov
and
pop
cs
mov
pop
sub
cmpsb
popf
push
jne
pop
add
sbb
xchg
xchg
ss
dec
and
gs
pop
leave
pusha
mov
and
aas
daa
ljmp
clc
sarl
dec
xchg
mov
inc
cmp
mov
jl
mov
icebp
add
jp
leave
adc
lret
in
inc
pusha
cmpsl
lods
xchg
push
fwait
lahf
lods
xchg
cmpsb
or
and
sub
cmp
xor
cmp
outsb
sbb
cmp
jle
int3
adc
jno
sbb
pop
push
mov
dec
inc
push
jne
pop
call
stos
fists
popa
stc
mov
pop
or
mov
adc
cmp
mov
outsb
ret
and
call
xchg
pushf
cltd
mov
iret
mov
add
sbb
fiaddl
repnz
mov
push
cmp
xchg
imul
fwait
mov
mov
or
push
fwait
add
pop
stos
pusha
imul
lahf
arpl
ficoms
loop
movsb
pop
xor
jmp
adc
orb
jo
cmpsl
pop
sub
shlb
out
mov
pop
fldcw
adc
mov
mov
or
rcl
mov
push
andb
lahf
lock
fcmovu
test
pop
dec
les
jg
cmp
pop
lahf
mov
sbb
stos
jmp
or
xchg
xchg
mov
lret
in
mov
push
jb
stc
pop
cmp
imul
movsl
jge
mov
xchg
dec
add
mov
dec
out
sbbl
cmp
sahf
cmc
out
mov
push
mov
ss
or
mov
mov
dec
out
xchg
mov
mov
cmp
or
jmp
lret
call
jno
leave
pop
test
iret
xchg
dec
lret
jmp
out
xor
xor
pop
cld
cmp
xchg
js
lods
push
and
inc
mov
add
je
sti
inc
mov
cltd
mov
cmp
jl
xor
mov
aas
mov
pop
cmc
dec
test
fwait
sbb
fistpl
es
add
sub
sti
and
in
or
inc
repnz
mov
ficompl
fisubl
lds
sub
out
loop
or
loop
movsl
xchg
sysexit
js
sbb
xor
add
sbb
mov
adc
pop
add
out
adc
mov
cmp
imul
or
bound
adc
sti
fldl
xchg
sbb
aaa
idivb
xchg
dec
clc
roll
fs
daa
mov
test
xchg
mov
sub
sahf
pop
push
lahf
sub
lods
jmp
and
and
mov
pop
inc
xor
mov
iret
fstpl
pop
inc
xor
imul
mov
jmp
xchg
pop
rep
lea
les
stos
mov
inc
fwait
and
inc
sub
mov
sub
jp
dec
dec
sti
push
sub
mov
inc
cmp
xchg
imul
pop
xchg
adc
outsb
pop
xor
iret
mov
pop
or
pop
xchg
rcrl
call
cmp
sub
adc
ds
call
inc
push
pop
pop
popf
cltd
sbb
mov
push
jp
jb
inc
pcmpgtw
js
scas
in
or
pop
int
aam
mov
arpl
xor
jae
enter
xchg
or
clc
clc
popa
pop
int3
fsub
shll
in
jecxz
std
pop
jb
push
inc
popa
mov
pop
pop
jl
inc
inc
cmp
out
pop
cli
cs
lret
or
pop
jns
dec
jge
mov
pusha
mov
cmp
sarb
cmpsb
fwait
bt
mov
adc
pop
je
ljmp
lods
mov
rcll
addr16
push
pop
push
lods
jns
je
test
xchg
dec
mov
ret
imul
pop
push
cwtl
pop
icebp
lds
movsl
cmp
lahf
push
ds
push
and
add
pop
xchg
xchg
lea
cmp
js
mov
int3
pop
test
in
out
aas
test
jbe
push
dec
cwtl
js
or
pop
lods
fwait
leave
inc
lret
xchg
mov
je
fdivrs
lahf
add
xchg
push
jbe
in
push
fcomps
pop
or
addb
repnz
out
bound
pop
mov
adc
mov
sbb
or
movsl
ja
pop
neg
daa
mov
xorl
mov
inc
mov
lods
ds
mov
cmc
outsl
ret
bound
pop
loopne
xor
out
jbe
jg
and
rcrb
arpl
lcall
lock
push
roll
jns
or
mov
fistpll
in
je
cmpsb
sbb
sbb
aaa
mov
pop
or
add
pop
jp
arpl
or
mov
in
pop
mov
pop
pop
jo
and
pop
add
pop
testb
fidivl
aaa
or
add
or
clc
out
pop
push
pop
dec
cmp
push
inc
pop
addr16
and
adc
jge
inc
je
repnz
and
fwait
pop
repz
sarl
jg
ljmp
idiv
call
aaa
and
ss
cmp
inc
enter
dec
fistps
mov
jno
dec
xchg
pop
mov
ljmp
sub
pop
arpl
mov
cmpsl
mov
and
xlat
enter
push
negb
pop
pop
or
test
mov
mov
jecxz
cmpsb
imull
push
and
add
cld
xchg
sub
lret
sub
cmp
fcomps
std
icebp
dec
or
xor
shl
in
scas
in
cmpsl
loopne
sbbb
popf
ret
shlb
push
pop
jge
sub
inc
cmpsb
xlat
mov
mov
or
mov
pop
lahf
cmc
inc
scas
mov
push
cmp
lret
mov
and
xchg
mov
add
mov
cmp
adc
pop
incb
mov
push
inc
xor
sbb
hlt
js
jle
mov
push
inc
sbb
cwtl
pop
aam
movl
sahf
and
and
mov
pop
pop
test
rol
fidivs
repnz
and
gs
mov
rcl
sub
int
inc
jl
aad
fs
mov
cltd
sbb
dec
or
lods
jg
jo
pushl
sub
lret
ficoml
sub
inc
or
mov
sbb
test
sbb
inc
sbb
icebp
test
bound
stos
clc
inc
pop
rolb
aam
lcall
repnz
jo
mov
jp
and
or
stos
nop
aam
aam
cmp
xor
fists
pop
data16
push
mov
out
stos
pop
in
mov
pop
xor
mov
mov
add
add
inc
mov
jo
sub
cmp
jae
pop
cltd
xor
cmp
js
and
lahf
outsl
icebp
adc
xlat
fsubs
pop
pop
add
repz
pop
adc
dec
adc
dec
push
inc
mov
lcall
leave
and
mov
pusha
pop
sbb
imul
adc
jne
fs
xchg
js
mov
cs
pop
xchg
xlat
scas
cwtl
cmp
test
adc
adc
pop
shrl
or
pop
jo
out
int
pop
lcall
loop
fists
pop
or
cmp
fldl
popf
pop
fidivl
test
inc
stos
push
fisubl
repz
dec
lahf
xchg
call
push
insl
das
fnsave
pop
adc
sbb
in
jecxz
mov
cmp
and
xor
and
fsts
pop
xchg
lcall
mov
pop
sbb
xor
cmp
pop
cmp
leave
scas
adc
push
dec
sarb
lcall
fnstsw
iret
xchg
lret
pop
adc
enter
jae
pop
imul
push
test
and
loopne
into
mov
testb
jns
mov
ss
add
repz
pop
adc
mov
pop
scas
add
test
outsb
pop
xchg
pop
jecxz
in
xchg
mov
call
pop
jbe
adc
xchg
ficompl
and
mov
out
loopne
dec
or
clc
jno
sbb
sbb
pop
gs
or
pop
loope
test
arpl
mov
pop
stos
cmc
push
int3
out
sbb
pop
enter
cld
inc
cmp
sub
mov
test
sbb
pop
test
ds
pop
push
and
movsl
stos
jp
mov
rcll
pop
gs
fisttpll
pop
fsubl
xchg
push
pop
and
cmc
sub
stos
pop
lods
push
pop
fld
pop
dec
pop
scas
loop
add
cmp
xor
or
or
popf
aam
pop
pop
xchg
dec
js
fldcw
movsb
pop
pop
lea
and
sbb
out
mov
fistpl
outsl
cmpsb
daa
pop
int
xchg
outsb
sub
and
and
pop
int
add
lret
pop
jo
negb
hlt
sbbl
pop
mov
fisubrl
arpl
jmp
test
dec
pop
xor
mov
and
jge
ret
pop
repnz
xorl
dec
cmp
je
insb
dec
cmpsl
lahf
pop
in
push
push
pop
mov
xlat
jb
mov
data16
mov
cli
mov
lods
repnz
in
xchg
push
sub
repz
xchg
iret
stos
dec
add
jecxz
add
les
push
aad
es
and
scas
pop
xor
gs
fistps
arpl
mov
jecxz
imul
ficomps
daa
push
xor
es
push
fildll
jo
mov
and
jle
pop
push
sbb
scas
not
dec
int
mov
scas
pop
inc
out
xor
push
xchg
inc
sbb
outsl
cld
pop
sbb
jno
mov
mov
in
daa
cmp
fdivr
lahf
xchg
clc
push
pop
xor
mov
daa
jecxz
ss
push
sti
xor
data16
in
xor
xchg
mov
pop
sub
dec
mov
movzbl
pop
adc
gs
xchg
xchg
xchg
jns
pop
sub
shlb
aad
idivl
xchg
in
loopne
pop
insb
out
xor
imul
xchg
cli
insb
inc
adc
addr16
outsl
popf
aad
mov
repz
pop
int
fwait
dec
cmp
xor
cs
pop
lcall
add
shl
sbbb
mov
sti
mov
push
call
mov
sub
movl
jmp
sbbb
test
inc
mov
std
pop
xor
xchg
std
out
scas
xorb
ljmp
jbe
mov
in
insb
jb
fistl
int3
dec
rcrl
pop
pop
mov
incb
jno
pop
dec
add
movsl
arpl
outsb
or
popa
push
pop
dec
cmp
ficoml
dec
cld
or
lret
lret
or
lea
test
jl
mov
adc
adc
sbb
dec
xchg
dec
cltd
sbbb
or
xor
int3
xchg
push
sub
pop
or
cmp
pop
xor
push
ds
adc
test
lcall
or
daa
cld
stos
push
pop
jle
fcmovne
pop
mov
mov
dec
rcrl
or
xchg
push
push
int3
or
arpl
out
lret
lahf
pop
add
sbbl
imul
out
sub
and
loop
into
mov
in
pop
or
cmpsb
fwait
xchg
xor
mov
pop
mov
insb
adc
mov
push
roll
shlb
arpl
sbb
imul
or
xlat
pop
inc
aad
jecxz
cmc
ja
imul
scas
movsb
es
test
loope
mov
push
or
loop
xchg
dec
xchg
mov
sbb
pop
loope
push
call
pop
xlat
js
out
jmp
pop
stc
or
adc
or
adc
sub
pop
sub
outsb
js
in
test
lret
inc
loopne
cli
push
jp
scas
add
pop
insl
cmp
rcrb
dec
andb
jae
pushf
inc
sti
mov
test
pop
cmp
cltd
mov
mov
pop
jbe
test
and
mov
scas
push
sbb
xlat
mov
aam
pop
mov
jnp
lock
adc
push
sub
push
lahf
pop
pop
jo
fimull
and
xchg
pop
fwait
xor
cltd
jmp
call
mov
fcmovb
lret
pop
stc
gs
sar
pushl
pop
sub
loop
pop
pop
xchg
xchg
lock
icebp
call
fadd
push
bound
and
jl
cmp
imul
out
sbb
adc
xchg
sbb
imul
lock
mov
loop
mov
mov
shll
pop
stos
out
push
or
negl
xchg
sbb
stos
inc
lahf
inc
pop
mov
jae
pop
and
daa
xchg
mov
arpl
cmpsl
xor
jmp
pop
mov
fsts
das
arpl
popf
or
jl
lahf
imul
xchg
pop
mov
mov
xor
push
cmp
outsl
rol
mov
imul
pusha
ljmp
jmp
xchg
scas
pop
test
cltd
cmp
inc
jne
or
mov
pop
out
adc
out
lcall
sbb
and
jb
mov
sbb
push
xor
mov
sbb
push
aad
mov
mov
push
pop
cli
arpl
mov
adc
test
popa
push
pop
xchg
sub
out
sub
pop
out
cltd
sbb
push
mov
lret
lods
sub
inc
mov
adc
je
jno
imul
mov
jo
outsb
cmp
loop
or
add
sti
repnz
jnp
lret
adcb
mov
sbb
mov
inc
pop
jno
cmpsl
pop
shrb
lea
sub
mov
push
sub
or
push
mov
std
mov
aas
aad
inc
pop
es
fs
or
fistps
and
pop
sub
pop
mov
mov
xchg
pop
iret
arpl
std
mov
comiss
inc
mov
push
ljmp
pusha
sbbl
ss
xor
sub
dec
inc
xchg
testl
sub
fistps
push
pop
and
aas
outsl
sbb
lods
lock
lret
sbb
add
jl
rcll
add
mov
out
hlt
call
and
bound
aaa
inc
mov
mov
daa
xchg
lods
clc
js
pusha
mov
xchg
idiv
sub
pop
aaa
jecxz
call
pusha
lret
xchg
mov
push
pop
dec
imul
sahf
in
rcrb
outsl
add
xor
pop
punpckhbw
fs
test
cmc
cmp
or
inc
dec
add
stos
mov
mov
pop
cmp
or
cltd
mov
stos
pop
xlat
in
movsl
test
pop
and
enter
scas
pop
and
xchg
jl
and
sbb
pushf
cmp
shl
dec
adc
mov
adc
fs
mov
mov
in
inc
push
pop
lcall
xchg
mov
jp
and
pop
mov
push
cmpsb
jl
fwait
mov
dec
jge
and
pop
clc
test
enter
cld
repz
xor
shl
ds
ficoms
and
mov
cwtl
inc
adc
adc
int
pop
mov
dec
lea
lods
dec
or
dec
xor
mov
pop
enter
pop
dec
cmp
int3
push
push
mov
fmuls
mov
enter
ljmp
clc
loope
dec
push
fistpl
dec
jp
pop
xchg
lahf
and
aad
pop
mov
insl
inc
jle
add
mov
lods
fs
cmp
mov
pop
hlt
scas
insl
movsl
xchg
and
xchg
pop
cmp
cli
push
mov
sub
sub
gs
ret
mov
xor
mov
push
ss
jecxz
pop
es
jae
and
pop
mov
or
sbb
daa
rorb
sbb
jae
push
aad
mov
xor
cmc
daa
pop
test
xchg
push
push
and
xor
cmp
sbb
push
sbb
pop
inc
out
and
fisttps
lcall
sub
rorb
loope
jle
and
sbb
lcall
mov
and
pop
xor
push
cmpsb
pop
das
dec
mov
mov
mov
js
jae
fs
clc
push
pop
jp
in
xlat
cmc
mov
pop
sbb
sub
jle
das
jecxz
mov
pop
out
pop
and
decl
mov
adc
mov
pop
xor
cmp
inc
jmp
je
test
adc
pop
and
cltd
aad
and
pop
push
lods
call
hlt
mov
rolb
in
xchg
sub
mov
insl
xor
jnp
mov
pop
test
aas
pop
jmp
fidivrl
outsb
ja
ljmp
sub
shrl
cs
scas
xchg
push
mov
lods
inc
pop
lret
push
or
pop
lcall
sub
fcmovnu
cwtl
repz
fnsave
lahf
cmp
iret
daa
aaa
mov
loop
push
adc
sar
add
loope
jae
adc
add
js
pop
mov
rclb
xchg
mov
mov
adc
xchg
add
popf
jp
inc
xor
push
cmpb
pop
inc
pop
push
pop
int3
aad
and
and
pop
popf
and
push
cmp
pop
push
stos
jmp
jl
sub
pop
lahf
lret
jmp
mov
lret
pop
mov
inc
or
mov
cmp
cltd
popa
loop
cld
jno
push
xor
scas
in
adc
std
pop
sbb
mov
pop
push
jle
mov
sub
cmp
ret
dec
pop
popa
scas
cltd
cs
test
hlt
mov
pop
xor
jl
int
sub
and
call
mov
mov
pop
negl
gs
fcmovnu
push
lahf
and
fnsave
fstps
pop
aam
pop
je
movsl
insl
push
mov
cmp
adc
mov
inc
enter
pop
push
and
xchg
inc
dec
mov
lods
bound
shrl
scas
pop
repz
cmp
pop
dec
stos
mov
sbb
jne
fnstcw
add
out
enter
stc
and
mov
pop
pop
popf
jl
mov
bound
sbb
push
outsl
arpl
sti
int
leave
mov
fwait
std
pop
pushf
jmp
lea
andb
js
in
mov
jno
or
ficomps
aaa
cs
pop
js
mov
je
ljmp
lods
addb
stos
test
pop
push
daa
mov
xor
mov
ret
dec
and
outsb
mov
push
popl
popfw
jecxz
pop
cmp
mov
xor
push
insl
pop
pop
clc
jmp
pop
dec
sbb
and
xchg
cli
pop
out
clc
mov
pop
or
mov
jbe
rcrb
and
sub
mov
pop
inc
lret
mov
cli
adc
and
pop
jge
lds
sbbl
stos
mov
dec
ds
mov
pop
adc
or
mov
scas
jmp
fmul
cwtl
xchg
add
in
pop
jle
cmp
clc
sub
add
ds
jns
lahf
lret
lret
jne
xchg
xchg
mov
sub
xlat
pop
pushf
pop
push
add
pop
xor
jae
out
mov
lods
mov
lahf
inc
jle
gs
jmp
stos
cmp
jmp
cmp
mov
pop
mov
xchg
sub
mov
pop
pop
vpandn
sub
mov
mov
nop
pop
in
inc
cmp
or
iret
sbb
xchg
popa
sahf
sub
aad
xor
push
xor
pop
pop
fadd
stos
mov
xchg
mov
in
xor
sbb
pop
inc
xchg
and
inc
out
pop
popf
fisubl
sub
cli
dec
xor
pop
mov
lahf
adc
xchg
push
pop
and
lret
call
jno
pop
xchg
add
pop
mov
jp
jnp
xor
adc
scas
pop
mov
mov
cwtl
mov
dec
das
pop
es
pop
mov
lock
push
pop
bound
imul
scas
lahf
pushw
aad
adc
pop
dec
lds
mov
and
lcall
cli
pop
ljmp
mov
add
repz
xchg
sub
out
jnp
push
push
aam
xchg
xchg
ja
gs
lret
ret
int3
xchg
pop
js
xor
xor
imul
xlat
std
scas
fcoms
cmp
cmp
out
fs
mov
into
imul
push
cld
test
cmpb
mov
jb
ret
adc
sti
lcall
jg
test
pop
arpl
inc
mov
stos
mov
hlt
leave
push
pusha
shlb
test
jmp
jmp
cmpl
cmp
repnz
addr16
pusha
movsb
dec
leave
adc
mov
cmp
xlat
pop
xchg
inc
sarl
adc
pop
mov
cli
stc
mov
fcoml
imul
jb
out
xor
out
sub
imul
jns
and
inc
je
or
add
inc
sub
sub
aam
xchg
push
jp
out
pop
fcompl
call
bt
xchg
fisubrl
stc
mov
mov
mov
dec
lahf
sbb
insl
jb
mov
pop
in
xchg
add
dec
xorb
or
xchg
jns
or
inc
sub
pop
xchg
pop
mov
pop
fs
stos
cmc
and
stos
mov
enter
inc
or
data16
adc
add
loop
lahf
nop
dec
adc
pop
cmc
fisubrs
mov
mov
jne
outsb
push
mov
cmp
mov
push
push
data16
push
jecxz
test
fisubl
inc
pop
fldl2t
push
out
cwtl
outsl
pop
push
roll
mov
jle
cmp
test
mov
lcall
push
notb
pop
xchg
mov
jno
scas
loopne
adc
or
ja
movsb
std
mov
les
pusha
mov
sbb
sti
stos
sahf
push
xchg
shrl
inc
sub
xor
pop
xchg
mov
aaa
sbb
mov
mov
pop
push
add
inc
mov
mov
push
dec
and
mov
mov
pop
adc
jl
fwait
out
fadd
push
pop
and
aam
pop
cmp
rcl
test
mov
xchg
scas
pop
sbb
add
mov
dec
pop
mov
int3
push
icebp
mov
cli
jno
pop
and
xorb
add
pop
mov
mov
fildl
cmp
or
cmp
arpl
rcrb
sub
aaa
fists
mov
ret
test
pop
aad
push
xor
cwtl
cmpsb
pop
stos
mov
lds
sbb
xchg
pop
mov
loop
inc
push
pop
mov
pop
fwait
pop
push
push
out
or
xor
pop
cld
xor
sbbl
fsub
pop
les
ret
jno
jb
insb
lds
adc
pusha
mov
pop
std
and
lret
dec
loope
xchg
dec
mov
fildll
dec
mov
xchg
cs
pop
cmp
xor
pop
push
les
or
jne
ret
jle
adc
cltd
sub
cmp
sbb
inc
test
into
in
out
push
sub
imul
mov
nop
push
jmp
xchg
add
pop
xchg
mov
les
rcrl
fwait
addl
sti
xor
int
jo
scas
mov
mov
dec
sub
pop
xchg
push
pop
inc
add
or
pop
dec
mov
pop
orl
data16
into
repz
xchg
std
jnp,pn
mov
jecxz
xor
and
pop
inc
jo
xor
pop
mov
test
je
cmp
pop
mov
lcall
mov
cs
imul
push
or
jbe
pop
mov
pusha
xchg
inc
frstor
ss
jg
dec
jae
cltd
test
dec
adcl
push
pushf
inc
frstor
add
mov
jb
pop
outsb
pop
subb
aaa
in
and
push
jne
lret
fisubrs
jecxz
mov
das
mov
xchg
lods
arpl
pop
cli
pop
xchg
cmp
push
lahf
dec
aaa
shl
iret
mov
sahf
pop
xor
bnd
mov
popa
pop
hlt
xlat
xor
pop
sarb
out
daa
pop
push
dec
cmp
movsb
mov
outsb
vpinsrw
pop
and
rcrl
es
mov
test
cmp
dec
bound
lcall
mov
stc
mov
pop
sbbb
sub
xor
pop
xchg
pop
pop
adc
adc
mov
push
fnstenv
or
add
cwtl
test
lret
stc
leave
sar
mov
js
mov
push
push
test
pop
sbbb
mov
arpl
movsb
pop
sub
call
pop
aaa
adc
neg
sub
enter
inc
sti
jp
push
pop
lahf
jge
mov
out
xchg
in
ds
jnp
adc
add
sahf
sarl
fdivl
and
cld
mov
lock
mov
scas
cmc
pop
sub
mov
ja
push
sub
cmp
in
leave
jmp
sbbl
lcall
cmp
lds
enter
dec
dec
popf
mov
xlat
push
ja
pop
rolb
and
adc
mov
xchg
dec
jae
into
aam
lods
cld
ss
or
sbbb
rolb
and
lods
fcomps
jno
scas
test
fs
pop
daa
sbb
sbb
movsl
pop
lahf
sarb
int
mov
es
cltd
movsb
fisubs
push
int3
repz
adcl
add
mov
xor
and
cld
test
gs
lret
ret
jge
jne
js
pusha
push
mov
dec
test
mov
mov
pop
fdivrs
sbb
mov
jns
mov
in
pop
cwtl
pop
fs
and
lock
fcompl
xor
pop
jae
out
jg
fsubs
int3
mov
cltd
dec
cmp
pop
rcr
stc
dec
lret
jbe
pop
stos
addr16
in
push
mov
pushf
ret
into
pop
aad
je
jnp
test
adc
xor
push
inc
cmp
pop
icebp
les
pop
arpl
test
jno
stc
pop
pop
push
sub
mov
scas
pop
cmpsb
jge
jl
jae
push
and
cltd
pop
es
pop
or
sbb
in
or
insl
enter
or
aad
dec
aas
in
addr16
int
xchg
fmuls
addr16
pop
fisttpll
idiv
cli
mov
mov
add
test
sub
adc
push
jne
adc
bts
jecxz
add
mov
sarb
push
test
lods
mov
sub
test
dec
dec
mov
pop
push
xor
xchg
lea
dec
jns
sbb
cwtl
xchg
ret
in
adc
popf
dec
lfs
sbb
aaa
add
enter
mov
cmpl
stos
sbb
jl
pop
cs
test
pop
sbb
pop
outsb
in
adc
aaa
mov
stos
test
pop
jae
popf
and
pop
fwait
mov
or
pop
nop
cmc
arpl
mov
rcl
push
loopne
mov
pop
pop
scas
cmp
divb
dec
ret
or
shll
into
dec
repz
add
push
pop
mov
jb
push
jl
sbb
xchg
bound
cmp
out
sub
rcrl
outsl
mov
xor
ds
nop
cmp
sub
inc
lcall
mov
dec
daa
dec
push
jae
mov
push
lret
mov
call
cs
and
lret
xchg
mov
push
cli
jmp
mov
jno
add
xchg
adc
inc
imul
rorl
ret
pushf
mov
int
and
xchg
dec
mov
dec
loope
scas
jl
js
sub
fdivs
cwtl
call
movsb
jbe
xor
out
mov
shrd
ss
or
mov
mov
out
adc
addr16
in
mov
lahf
xchg
cltd
repnz
fidivs
dec
inc
imul
mov
pop
andb
and
lahf
rol
xchg
scas
cltd
cmp
xor
pop
andl
dec
shlb
lret
mov
int
sbb
pop
aaa
fs
ljmp
add
in
dec
and
lahf
pop
jmp
adc
stos
add
in
xor
adc
mov
mov
lahf
sbb
add
int3
lcall
scas
push
add
inc
jb
fstp
xorb
in
pop
divl
xchg
aam
es
and
out
pop
pop
insl
xchg
and
shlb
ds
in
outsb
xchg
imul
adc
jg
xor
scas
sbbb
icebp
shlb
repz
adc
int
ret
add
adc
cmc
mull
or
mov
inc
and
mov
scas
cwtl
and
outsb
jge
mov
sbb
test
mov
or
pusha
pop
fs
xchg
inc
push
xchg
fistps
clc
orb
jp
test
cltd
neg
inc
arpl
dec
cmp
pop
or
mov
fucomi
in
notl
pop
mov
out
pushf
sbb
sbb
mov
rcr
pusha
popa
lods
mov
push
ds
adc
and
dec
sbb
std
pop
adc
ret
jae
pop
inc
xor
pushf
adc
xchg
push
push
dec
cld
icebp
pop
xor
mov
les
xchg
pop
push
push
xchg
dec
dec
pop
mov
push
and
nop
xchg
loope
xlat
sbb
rolb
call
cmp
fdivl
xlat
out
pop
xor
hlt
aaa
popf
movsb
mov
jno
std
mov
call
addr16
mov
out
hlt
lea
in
xchg
mov
dec
pop
mov
jecxz
pop
xchg
mov
and
push
mov
cmp
gs
lret
and
ficoml
jecxz
daa
ret
push
pop
repnz
lds
rcrb
mov
rcrl
dec
adc
inc
aam
cmp
pop
jne
mov
sbb
pop
fisttpll
mov
sbbb
pop
lcall
mov
and
inc
aas
addr16
dec
pop
aad
ljmp
pop
mov
shll
xor
int
inc
mov
add
mov
mov
jb
fldenv
imul
pop
pop
inc
lret
cmpsl
cmp
mov
inc
lahf
imul
pop
dec
cmp
fiaddl
lcall
push
icebp
lcall
jne
lods
in
mov
pop
in
or
pop
cmp
movsl
add
les
repz
aad
cmp
jmp
cmpsl
scas
mov
ds
or
mov
cmp
call
scas
inc
sub
enter
cmc
lret
aas
ljmp
mov
jg
out
enter
and
mov
movsb
mov
inc
push
in
test
pushf
or
mov
pop
sub
xor
pop
dec
mov
jo
pop
mov
mov
mov
sub
cld
jnp
ret
sbb
iret
outsb
xor
das
adc
xor
imul
in
movsb
in
out
mov
out
push
fdivrs
rorl
mov
cmp
fs
lock
inc
bndldx
push
lcall
test
cltd
mov
xchg
sbb
adc
arpl
lea
pop
adc
stc
inc
in
test
sub
pop
cwtl
push
mov
dec
xchg
pop
cmp
or
mov
flds
dec
mov
lahf
hlt
inc
movl
xor
dec
arpl
fcmovb
bound
lods
adc
outsb
and
popf
mov
xchg
xchg
stos
dec
push
lahf
test
repnz
cwtl
sti
mov
push
or
push
pop
mov
fldlg2
mov
nop
scas
add
lret
dec
jbe
cmp
jb
pop
or
xchg
adc
add
ljmp
iret
adc
pop
in
cltd
orb
pop
arpl
inc
sbb
or
jno
pop
mov
pop
add
push
dec
stos
pusha
cmp
mov
cltd
mov
loope
rcll
cwtl
into
pop
sarb
push
push
or
adc
mov
push
mov
lcall
push
pop
iret
mov
bndstx
addb
lea
dec
lds
pop
sbb
stos
mov
fidivs
pop
jnp
cmp
pop
mov
mov
add
sub
add
imul
pop
mov
mulb
movsb
aad
dec
mov
mov
mov
push
pop
jns
and
mov
fmulp
aas
repnz
setno
lahf
cmpb
sbb
sbb
fadds
adc
psrad
jmp
jp
repnz
enter
lea
into
jg
jmp
cmp
sub
jp
mov
pop
pop
inc
int3
orl
xlat
pop
sbb
mov
ret
repnz
inc
push
out
inc
mov
xlat
add
cltd
repz
pushf
cmp
dec
mov
mov
cmpsl
pop
test
xchg
sti
repnz
mov
faddl
ss
fdivs
out
aam
mov
loop
gs
test
out
jecxz
xchg
popa
xor
lahf
sahf
in
enter
jne
shll
aas
test
adc
xchg
pusha
pop
mov
nop
ss
xor
adc
jle
lods
add
add
adc
adc
shl
js
add
movsl
mov
out
fbstp
pop
push
sub
fdivl
pop
scas
in
push
lods
fwait
xlat
ds
pop
nop
cltd
adc
sbb
stos
scas
mov
popf
inc
jae
aad
inc
sub
add
pop
xchg
lock
jae
lret
aas
test
pop
xor
or
mov
push
jp
push
xchg
mov
pop
hlt
inc
inc
shrl
roll
xor
jns
mov
adc
mov
aam
jmp
dec
dec
in
xchg
xor
pop
inc
mov
xor
xchg
repz
test
push
lods
fcompl
icebp
xor
pop
and
mov
xor
pop
popa
mov
xchg
into
hlt
push
inc
adc
pop
push
repz
in
push
jb
in
or
movsl
out
out
sbb
imul
shlb
adc
mov
loopne
inc
and
enter
sbb
cmp
insb
cmp
pop
shl
or
cmp
xor
pop
popa
test
and
jp
add
jl
ret
and
adc
pop
jle
ljmp
jl
or
je
pushf
aaa
popa
dec
mov
sub
sahf
fildll
cmp
sub
add
notl
pop
jle
mov
sbb
sub
jmp
cmp
xchg
outsl
jmp
cmp
jbe
jecxz
and
sbb
pop
inc
inc
test
jo
pop
ror
or
hlt
dec
jg
pop
jge
dec
inc
xor
sbb
mov
push
jne
loop
dec
jns
test
sbb
jnp
clc
imul
sub
dec
jno
scas
adc
ds
pusha
inc
pop
dec
ss
xchg
sub
jae
aad
mov
push
sbb
out
lret
fstl
mov
sbb
mov
sbb
pop
js
and
dec
aad
mov
xchg
push
pop
pop
nop
dec
mov
or
pop
daa
stos
push
sub
pop
sub
out
mov
lret
arpl
rcr
sbb
cli
pop
in
out
les
mul
aaa
xchg
cwtl
pop
inc
pop
shrl
xor
push
mov
xor
cmpsl
cmc
sbb
xchg
pop
stos
sub
std
mov
sbb
xor
pop
mov
push
and
jecxz
pop
adc
popf
mov
cmp
jb
ds
xorl
or
pop
pop
xor
fsubs
dec
das
xor
lret
test
sbb
push
mov
sbb
push
push
dec
mov
mov
jmp
imul
std
mov
aad
sbb
pop
inc
fdivrs
xor
xchg
xchg
sbb
pmaddwd
pop
and
push
jg
pop
adc
mov
xor
push
add
pop
addb
xchg
pop
sub
pop
cmp
mov
cwtl
add
dec
movsl
sub
or
dec
pop
je
ss
xchg
imul
out
in
cmpsl
xchg
push
popf
shll
icebp
stc
pop
jno
sbb
inc
push
pop
mov
or
cwtl
loope
dec
or
roll
push
pop
mov
scas
jle
and
sbb
xor
pop
popa
loop
cmc
daa
cmpsb
mov
pop
out
jbe
clc
iret
imul
cld
sbbb
jo
les
sub
mov
mov
sahf
inc
pop
fs
push
mov
and
movl
inc
stos
xchg
ds
dec
stos
mov
sub
repnz
pushf
pop
add
mov
xchg
or
loope
push
add
out
rol
add
sub
mov
fwait
jle
xchg
idiv
pop
jbe
mov
nop
sahf
and
xor
mov
addr16
sbb
imul
lea
out
push
pop
pop
pop
and
cli
shll
lret
push
lock
shl
cs
arpl
pop
cmp
mov
jne
loopne
shll
sbb
loop
shl
cmovae
mov
mov
out
imul
adc
std
sub
or
pop
int
pop
les
push
cwtl
push
xor
jmp
mov
mov
and
pop
mov
mov
pop
sbb
mov
mov
je
adc
pop
pop
mov
ror
xchg
cmp
cld
fnstcw
add
mov
mov
fisubl
pop
ljmp
xchg
in
mov
je
fisttpl
pop
arpl
stc
cmp
sbb
push
out
inc
shrl
lods
das
cmp
mov
and
lea
pusha
push
pop
into
xor
pop
add
gs
inc
adc
mov
out
mov
sbb
andb
and
sub
push
or
imul
pop
jo
cmp
pop
repz
fmulp
arpl
pop
addr16
fmuls
push
mov
rol
cmp
cs
inc
push
cmc
adc
sbb
lahf
mov
sahf
mov
xchg
xchg
pop
int
xor
mov
push
lahf
pop
div
xchg
cli
cmp
test
pop
aaa
dec
scas
or
fcompl
subl
pop
add
adc
pop
add
bound
or
pop
pop
mov
cmc
jo
rcll
scas
xchg
loope
stc
pop
push
dec
and
or
cmp
fs
mov
pop
push
dec
rol
pop
cmc
jns
pop
mov
popf
out
and
or
add
mov
out
sbb
mov
xlat
sub
notb
fadds
in
mov
lock
jge
xor
jae
jle
mov
pop
sbb
inc
and
cli
sbb
xchg
fisubl
cmp
dec
lahf
mov
mov
lods
pop
add
lea
neg
jo
fs
add
insb
outsl
pop
mov
mov
mov
cld
icebp
sub
add
fsubrs
mov
xchg
pusha
xchg
inc
fdivl
xor
lods
mov
hlt
jge
adc
into
push
imul
gs
iret
adc
inc
sbb
pop
lret
repz
rclb
fiaddl
cmp
sbb
nop
cltd
mov
loop
loopne
pop
sbb
pop
sahf
outsb
xchg
mov
insl
popf
sbb
or
xor
add
leave
lock
pop
out
lea
data16
movsb
mov
xchg
stos
or
inc
cmp
mov
repz
sbb
pop
adc
pop
iret
divb
mov
lret
and
mov
jmp
mov
jnp
jo
fisubs
add
pop
adc
push
pop
mov
jmp
dec
adc
xchg
jle
sbbl
jmp
fldl
pop
push
ret
mov
pop
push
mov
push
cmp
mov
jnp
push
iret
mov
pop
sbb
sub
add
xor
cmp
sub
mov
loopne
mov
push
fildll
sub
adc
call
mov
fucomip
je
mov
push
mov
fcomp
sarb
push
xlat
push
pop
ds
push
es
icebp
pop
sub
mov
fdivrs
inc
mov
pop
subl
lcall
sahf
fmuls
xchg
pop
and
inc
inc
sub
xor
push
cmp
bound
xor
mov
in
xchg
jns
outsl
add
test
xchg
dec
pop
rcr
fcmovu
dec
sub
mov
mov
jae
out
adc
out
pop
cmp
inc
pop
mov
gs
adc
pop
loopne
push
fs
adc
mov
or
or
outsl
andb
push
dec
lahf
jmp
adc
dec
push
repnz
cs
jecxz
movsl
lcall
data16
enter
push
ss
xor
mov
ljmp
mov
pop
mov
ret
pop
jg
or
and
pop
lds
out
mov
mov
xor
repnz
adc
or
inc
push
loope
fwait
call
or
dec
scas
fstpt
xor
nop
push
jge
mov
jge
pop
mov
pop
push
fsubp
pop
jg
out
jns
dec
js
stos
dec
lcall
popf
inc
lea
out
and
sub
clc
ret
call
pop
pusha
lea
mov
test
push
fwait
into
sub
daa
stos
pop
test
stos
into
push
roll
sbb
xor
inc
sbb
xchg
lods
xorb
scas
mov
cmp
cmp
sbb
sbb
add
jle
jno
sub
cmp
cmp
hlt
or
into
inc
add
jl
cmp
mov
pop
inc
cmp
adc
inc
adc
pop
jbe
and
lcall
fidivrl
sub
mov
getsec
xlat
data16
mov
ja
pop
lods
jbe
inc
lods
fwait
pop
cmp
out
jnp
add
ja
xor
cs
jmp
mov
push
push
sarl
sbb
dec
fimull
sti
cld
sahf
and
inc
in
in
sub
stc
shll
mov
aad
leave
xchg
leave
insb
fidivl
pop
dec
popf
mov
js
fisttpll
ljmp
jne
fwait
addr16
stc
shr
add
mov
leave
adc
xor
pop
sub
imul
rcll
cld
sti
mov
inc
push
mov
pop
outsb
add
aaa
mov
repz
sbb
fisubrs
nop
test
cmpsb
sarb
xchg
sbbl
mov
sub
mov
inc
pushf
push
adc
cmp
cmp
std
shll
fnstenv
jo
in
adc
je
cmp
xchg
in
orl
fwait
sarl
lods
fnstcw
daa
add
int3
cmp
mov
test
or
mov
xchg
pop
dec
mov
je
mov
dec
js
jp
add
push
test
fwait
jnp
negl
dec
nop
out
fsub
pop
sbb
stc
cmp
pop
sarb
jl
inc
jnp
xchg
aam
and
cltd
lret
sbb
dec
xor
test
mov
in
fisubl
sti
pop
xchg
ds
dec
cltd
fcmovb
pop
ss
pushf
std
cmpsb
stos
pop
xchg
cmp
cltd
daa
sub
adc
mov
jne
fiaddl
xor
push
sbb
data16
cmc
xchg
enter
inc
cli
lods
pop
mov
xchg
or
stos
lcall
sub
leave
cmp
aas
aaa
fiaddl
xor
movsl
cmp
inc
or
dec
push
hlt
push
dec
popa
aad
hlt
push
imul
mov
aaa
addl
adc
push
pusha
inc
mov
xchg
adc
xlat
inc
push
bound
push
jl
push
push
cltd
mov
sub
stos
repz
cmp
xchg
cltd
pop
cmpsl
mov
outsb
int
push
int
sub
pop
mov
loop
out
jne
xor
call
lret
adc
clc
cs
and
and
mov
cmp
xor
pop
dec
push
fs
in
leave
leave
adc
add
aad
shll
adc
xor
xor
js
or
cmp
mov
fsubr
pop
jae
pop
lahf
xor
inc
mov
lahf
xchg
inc
adc
sbb
inc
mov
scas
das
pusha
dec
dec
int3
dec
stc
sub
bound
cwtl
sarb
mov
pushf
mov
push
push
push
mov
mov
inc
aas
andl
pop
popa
test
or
mov
mov
out
je
scas
lods
mov
fnstenv
cmp
adc
cmc
jb
inc
sbb
pop
xor
sbb
mov
scas
cmpsw
or
jecxz
push
inc
rorb
add
fdivr
add
dec
lret
mov
xchg
jp
in
inc
push
mov
cmpsl
sbbb
mov
repnz
cmc
pop
fwait
imul
push
mov
xor
xchg
test
mov
cs
cmc
mov
adc
sub
dec
pop
mov
aaa
test
hlt
in
mov
pop
andl
jae
pop
mov
or
pop
test
pop
daa
and
rcr
mov
stc
fs
imulb
js
ds
mov
ret
cmpsl
or
mov
cwtl
loopne
inc
mov
inc
je
hlt
scas
sarl
inc
std
push
ss
fistps
jl
fldenv
jg
mov
pop
mov
xorb
sbb
mov
pop
cmpsb
ljmp
and
cmp
scas
cmp
jae
into
jl
xchg
sbb
repz
mov
pop
pop
faddp
mov
mov
aad
push
pop
or
outsb
pop
push
gs
loop
xor
pop
pop
lea
lret
pop
dec
loope
leave
mov
bound
test
fisubrs
pop
clc
std
pushf
andb
mul
jne
rcrl
mov
sti
test
pushf
fists
lods
push
int
stc
sbb
mov
mov
je
xor
idiv
mov
cs
dec
pop
les
shlb
jmp
nop
jge
adc
sub
pop
fwait
pop
push
icebp
pop
mov
pop
or
pop
push
pop
lret
and
and
adc
inc
fldenv
outsb
dec
pop
out
cmp
dec
jb
push
int
pop
mov
mov
lret
and
data16
mov
ret
iret
aad
mov
cmc
repz
insb
mov
push
std
aaa
cmp
sub
out
inc
inc
fisubl
add
fists
fsubrl
pop
mov
xchg
pushf
in
jecxz
cmp
pop
inc
mov
loope
adc
out
adc
mov
pop
or
pop
jg
fmul
and
mov
add
mov
xor
pushf
cmpsl
aaa
sbb
pop
lcall
or
sti
mov
pop
mov
jecxz
pusha
pop
and
scas
insl
jb
stos
mov
insb
xor
into
push
rcrb
nop
mov
cmpsl
or
mov
mov
lea
push
out
fwait
lds
xchg
or
fstpl
lahf
push
sbbl
add
cltd
arpl
cwtl
pop
xor
and
test
aad
mov
xlat
dec
sti
cmp
xor
pop
test
add
xchg
das
mov
in
testl
mov
in
lock
out
scas
mov
pop
js
sbb
and
cs
insb
aaa
loop
sbb
xor
inc
clc
in
mov
pushf
pop
scas
mov
lods
cmp
ja
dec
adc
sbb
arpl
gs
les
movl
add
lahf
cmp
xchg
or
sub
sbb
insl
pop
cmpb
jge
sarb
sarb
orb
daa
cli
inc
mov
in
pop
push
adc
cmp
pop
pop
sbbl
jmp
push
sub
sub
push
pop
int
pusha
in
and
stc
jp
aam
sbb
movsl
mov
fidivrl
cld
adc
mov
in
bound
mov
cmpsl
mov
sbb
pusha
test
xchg
and
ss
inc
xor
mov
lods
push
xchg
cmpsl
mov
xchg
sub
push
pop
dec
sbb
loopne
stos
add
mov
je
mov
xchg
mov
inc
rcrb
das
movsb
mov
jb
imul
in
dec
cmp
adc
jecxz
stos
inc
pop
ss
clc
jne
or
lret
sub
in
andb
outsl
jecxz
pop
nop
rcr
data16
shlb
pop
pop
cmp
mov
jl
sarl
pop
imul
es
les
int
or
popa
add
push
add
fnstenv
fcmovne
leave
or
dec
jmp
pop
dec
jge
pop
mov
pop
push
mov
pop
pop
clc
nop
mov
jns
out
mov
pop
sub
filds
std
movsb
inc
dec
sbb
je
hlt
mov
adc
sarl
cmp
xchg
xchg
in
cmp
mov
lcall
clc
push
data16
inc
mov
xor
pop
add
pop
gs
js
mov
out
push
les
sbb
leave
scas
jbe
jmp
xor
in
stc
stos
pop
mov
xchg
pop
fbld
xchg
dec
pop
arpl
or
xchg
mulb
test
cmp
pusha
out
xor
mov
aad
mov
je
pop
shl
jns
shld
andb
push
rcrl
imul
ja
movsl
loopne
pop
mov
sbb
pop
push
lret
jns
add
sub
inc
pop
push
cmp
enter
ret
scas
rcrl
adc
pop
sub
add
movsb
into
sbb
or
aad
mov
add
mov
dec
repz
pop
push
and
insl
loope
pop
add
subl
out
pushf
pop
cmp
push
call
pop
pop
shrl
sub
mov
mov
pushl
test
cmpsb
jnp
js
adc
xchg
mov
mov
xorl
dec
xlat
pop
pop
jl
fs
and
jne
iret
or
enter
cli
mov
xlat
sbb
cmp
popa
inc
fldt
sbb
pop
and
lcall
cs
or
push
aad
adcb
mov
cwtl
fadds
enter
pop
push
pop
dec
jo
jg
es
test
adc
popa
int3
pop
divl
inc
or
xchg
push
pop
js
je
scas
push
aam
pop
loop
shll
jmp
pop
sbb
and
int
pop
pop
sbb
scas
shrb
aas
or
pop
ret
jecxz
call
sbb
or
daa
loop
mov
ret
test
pop
xchg
xor
inc
pop
int3
lret
jne
ret
out
jmp
mov
sbb
mov
add
sub
dec
stos
ljmp
lret
imul
pminub
and
mov
js
test
push
pop
and
cs
lahf
and
dec
xor
xchg
pop
dec
rcr
stos
outsl
mov
cmpsb
test
mov
sbbb
xlat
std
lods
pop
jge
dec
mov
add
sub
idivb
mov
mov
lds
fisubrs
jno
mov
aam
clc
popl
loope
arpl
cmp
lods
pop
repz
cli
sbb
imul
daa
pop
pop
scas
hlt
ret
orb
mov
loope
cmp
jo
mov
fimull
les
inc
fwait
lahf
lods
cmpsb
mov
insb
sarl
outsb
bound
adc
test
icebp
fistps
jmp
es
pop
dec
mov
xchg
cs
jne
mov
lods
bound
pop
pop
cld
jmp
fwait
cmp
xor
sub
das
xchg
fisttps
adc
mov
jge
mov
in
mov
sbb
add
pop
mov
mov
push
dec
lcall
movsb
add
insb
loope
xor
imul
pop
inc
in
mov
stc
pop
scas
push
orl
sbb
std
mov
test
lea
sub
cld
insb
out
push
rcll
shlb
mov
adc
xchg
pop
xchg
push
orl
pop
xchg
push
cmpsl
add
pop
adc
loope
inc
mov
iret
mov
shrl
mov
dec
fcmovnbe
les
mov
mov
fldt
aam
inc
pop
in
out
lret
inc
jecxz
inc
mov
lods
push
add
pop
and
cwtl
pop
cmpsl
subl
imul
je
cmp
pop
scas
lcall
pop
push
in
xchg
lock
movsb
xchg
ss
cmp
notb
cltd
jno
inc
pop
pop
sub
push
cmp
cmp
xchg
mov
stos
cwtl
test
out
push
mov
cmp
rcrl
mov
test
ficoml
jge
pop
repz
adc
add
jle
mov
push
pusha
dec
pop
mov
fmuls
pop
inc
pop
or
and
out
push
add
pop
jno
jb
xor
mov
cmc
das
pop
in
out
icebp
dec
sub
mov
xchg
inc
outsl
sub
xchg
mov
mov
test
pop
push
push
pop
cld
mov
pop
in
inc
push
pop
sub
aaa
push
es
mov
push
stos
pop
lock
mov
pop
pop
cmc
pop
mov
es
xchg
dec
push
outsl
pop
xchg
out
mov
sub
push
xlat
mov
imul
shrb
inc
sbb
dec
inc
lahf
jl
jnp
pop
add
jno
scas
push
xchg
pop
sbb
and
dec
adc
cmp
inc
insl
lret
aad
out
mov
in
testl
movsb
xlat
imul
mov
ficoms
test
inc
stos
jne
push
ss
dec
incb
mov
arpl
in
inc
and
inc
push
int
push
js
clc
pop
fsubr
and
lock
inc
mov
dec
movsl
inc
jle
fimuls
jmp
mov
call
fldenv
fs
mov
mov
xor
ds
cld
cwtl
xchg
and
cwtl
mov
push
push
pop
lcall
push
lock
je
inc
hlt
fcompl
mov
add
sti
into
lock
mov
popf
pop
and
ret
mov
ficoms
dec
icebp
cmpsb
lahf
xchg
test
ja
lods
pop
mul
pop
pop
jno
stos
sbb
cmp
adc
call
flds
icebp
xor
push
cmp
pop
xor
and
lret
in
lock
and
and
cmpsl
cmp
jb
fsubl
push
push
xchg
out
vminps
mov
sbbb
gs
pop
ret
fidivrl
sbbb
or
rorb
inc
mov
dec
test
sar
std
pop
cltd
mov
shlb
dec
arpl
cmp
pop
cwtl
jecxz
nop
mov
push
cmp
pop
mov
inc
shll
pop
or
fbld
loope
push
fistpll
pop
cmp
in
test
jno
xchg
mov
pop
repnz
icebp
adc
cmp
adc
rcrb
loopne
mov
add
pop
push
divb
jnp
fistpl
scas
mov
les
sahf
iret
cmp
std
lods
fs
push
cmp
pop
or
repz
stos
mov
mov
clc
xchg
into
cmp
sbb
imul
cltd
mov
ljmp
je
fs
mov
sbb
xor
fistpl
sbb
inc
pop
pop
xchg
xchg
add
rcll
les
loop
or
push
adc
dec
icebp
sti
or
loopne
fisttps
mov
mov
mov
mov
orl
sbbb
mov
enter
popf
sbb
mov
fcom
int
movsl
xchg
pop
mov
cmp
subb
orb
lock
jo
mov
sahf
out
fildll
pop
jp
popf
inc
sub
sub
fmull
mov
jl
jmp
mov
pop
pop
xchg
loop
sub
or
pop
ss
jno,pn
cmp
mov
sbb
mov
mov
cmc
lret
loopne
pop
add
lds
and
pop
push
push
test
mov
sbb
movsb
pop
mov
negl
pop
lods
sarl
mov
mov
je
mov
pop
daa
sbb
adc
and
inc
sti
mov
or
mov
pop
jo
xsaves
mov
pop
push
mov
loop
fimuls
cmp
icebp
xor
push
pop
fwait
fs
subl
push
js
pop
test
subl
adc
js
pop
psubw
in
mov
jbe
cmc
xor
lods
sti
dec
int
xor
pop
fcoms
push
push
cmpsl
shr
pop
push
mov
mov
mov
fstpt
pop
imul
cmp
sbb
sbb
mov
cld
in
test
adc
pop
ficoms
stc
sahf
dec
inc
dec
sbb
pop
sub
add
cmp
xchg
je
hlt
mov
push
mov
adc
xor
mov
shl
cltd
xchg
stos
test
loope
adc
pop
lds
inc
mov
pop
add
insl
mov
ret
movsl
mov
fstp
jecxz
inc
jae
pop
dec
pop
stos
cmp
int3
pop
cmp
pop
jno
mov
pop
xor
andb
jl
push
rorl
stos
pop
pop
pop
fdivrs
arpl
cld
push
mov
jne
clc
sbb
sti
sti
std
out
xchg
les
lahf
stos
inc
outsl
int3
pop
xchg
int
fadd
and
add
lret
mov
and
pop
ja
outsl
mov
pop
cs
imul
cltd
fistps
pop
pop
clc
or
and
add
sbb
aad
decl
in
cwtl
xchg
xor
xorb
subb
fs
jecxz
pop
andl
mov
in
mov
ret
pop
jmp
rorl
ds
dec
int3
mov
fisubrl
repnz
xor
pop
inc
sbb
mov
jns
bswap
cmpl
mov
lahf
inc
ret
or
les
push
lret
loop
pop
pop
jge
movsl
or
add
push
lock
jp
pop
mov
cmp
inc
inc
pop
pusha
jg
xor
pop
sbb
hlt
sub
push
std
pop
push
lods
fcoms
and
or
pop
ret
js
pop
xchg
push
mov
cmc
test
cmp
or
jo
arpl
sbb
lret
in
mov
scas
faddl
rorb
cltd
inc
addr16
arpl
outsl
jns
outsb
out
repz
movsb
pop
pop
repz
in
fwait
dec
mov
cmp
mov
pop
xchg
xor
fmulp
pop
add
push
filds
clc
lret
loop
pop
and
icebp
push
jecxz
xchg
xchg
mov
xor
mov
subb
pushf
sbbb
stos
xor
imul
aas
popa
and
add
adc
xor
js
push
xor
shl
xor
mov
adc
cmove
fcomp
jg
pop
loopne
sub
out
sbb
jnp
add
cmp
scas
xchg
jecxz
sbb
daa
clc
inc
push
adc
adc
xchg
mov
test
or
adc
mov
cmp
sub
sub
and
iret
xor
xor
inc
lahf
mov
push
inc
fimull
shl
ljmp
rcrl
mov
aad
loop
repz
and
pop
add
mov
xchg
cmp
or
stos
and
repz
lret
pop
add
shlb
pop
xor
dec
cmpsl
inc
sbb
pop
adc
pop
test
mov
call
cmp
inc
pop
dec
test
add
lret
jo
ret
pop
pusha
pop
inc
outsb
adc
out
sahf
fcomps
xchg
or
pop
adc
sti
test
lret
lods
fs
clc
icebp
bound
pop
jnp
pop
insl
xor
pop
mov
aad
dec
out
es
sbb
push
cmc
std
adc
jbe
add
fsubr
gs
mov
lret
xchg
outsl
call
stc
mov
pop
addr16
pop
mov
pop
loope
outsl
or
mov
mov
mov
sbb
inc
test
adc
xor
sbb
jp
and
xchg
das
pop
lahf
and
cmp
inc
jecxz
lods
je
add
or
jg
add
insb
pop
cmc
sub
stos
mov
xor
adc
add
xchg
cmpsl
das
pop
sub
lret
inc
std
sbb
mov
xchg
pop
loope
fimuls
fwait
or
mov
arpl
xchg
inc
jne
pop
ret
mov
pusha
add
shrb
testb
fdivl
xchg
pop
sub
scas
inc
lahf
loopne
mov
cmp
fldpi
mov
fcoms
lahf
orl
pop
popf
push
sti
repnz
enter
sahf
mov
mov
ret
rcrl
mov
pop
jg
dec
xchg
push
or
scas
pop
mov
or
shrl
jp
and
out
mov
or
jb
sub
inc
or
clc
rorl
xchg
fildll
shlb
je
cli
mov
rorl
cmpsb
cmp
xchg
cwtl
pop
nop
jns
jmp
rcrl
push
fstl
sub
sub
inc
xchg
stc
xchg
fstps
sub
out
or
pop
cmpsb
push
pop
mov
jnp
insl
pop
dec
ja
shll
sarl
push
fs
inc
add
push
pop
popa
mov
mov
pop
mov
push
sbb
cmpsb
mov
in
jnp
jge
sub
jae
ds
xchg
popa
stc
rorb
stos
repz
repz
fldt
mov
or
mov
sti
lcall
mov
in
fnstcw
mov
outsl
jbe
and
pop
sub
mov
pop
insb
rclb
ljmp
aaa
les
cmpb
inc
imul
jno
dec
adc
push
repz
lret
into
je
mov
pop
jns
pop
lret
mov
and
add
repz
mov
mov
shll
ljmp
in
mov
adc
jo
push
hlt
lds
adc
sub
stos
dec
xlat
push
mov
fdivs
das
or
sbb
test
jbe
jp
fisttpl
xchg
push
insb
mov
mov
push
decl
fldcw
aaa
stos
aam
iret
sbbl
add
mov
insb
pop
fisubrs
test
out
pop
jl
add
or
mov
sub
jp
mov
orl
fadd
jb
and
push
pop
add
xor
daa
ficoml
inc
fidivl
sbb
lahf
dec
cli
loope
pop
adc
pop
cmp
and
pop
out
insl
rcrl
fwait
lret
repnz
std
mov
push
das
daa
push
addr16
jle
pop
xchg
mov
mov
stos
sbb
push
arpl
xor
cltd
cltd
fidivrl
pop
and
jg
dec
lcall
cmp
inc
push
test
pop
xor
cs
dec
pop
fmuls
addr16
aam
shr
test
mov
mov
popf
or
lods
sbbl
xchg
add
and
test
int
sbb
xchg
repz
sbb
xchg
pushf
movsl
mov
mov
pop
std
push
scas
lret
scas
adc
pop
mov
roll
pop
or
jne
push
fs
fstpl
in
stos
rcrb
pop
aad
fs
cld
lods
mov
or
inc
in
dec
ficompl
push
loopne
popa
mov
sub
ret
repnz
mov
dec
hlt
push
in
push
jo
mov
ret
stc
out
cs
je
dec
js
pop
test
mov
fstps
pushf
out
sbb
arpl
mov
sub
xchg
adc
cmp
or
xor
mov
push
sbb
pop
or
pusha
dec
pop
mov
pusha
gs
xor
xchg
test
dec
test
mov
adc
fistpl
in
ja
xor
ljmp
pop
sbb
ret
cli
mov
jb
add
push
cmp
mov
and
insl
inc
cmp
call
xchg
sub
movsb
fwait
pop
ds
adc
mov
ja
mov
int
fcmovbe
lods
scas
pop
int
imul
outsb
lret
pop
or
sbb
jg
jl
pop
pusha
lcall
mov
notb
ss
push
pop
mov
mov
and
inc
dec
cld
pop
mov
xor
pop
xor
xchg
aam
cltd
push
rorb
pop
sti
fldl
test
cmpsl
rorl
mov
sbb
bswap
enter
mov
scas
dec
rcrl
dec
insb
sub
add
mov
aad
stc
out
outsb
sub
pop
add
popl
and
xor
mov
test
adc
test
or
push
xchg
icebp
pop
or
xchg
push
push
sarb
dec
adc
mov
mov
pop
int
xor
jno
hlt
pop
in
add
mov
pop
push
and
lea
fstpt
inc
pop
lret
test
test
mov
pushf
pop
pop
out
std
inc
scas
add
adc
xchg
jo
sbb
sbb
mov
pop
mov
pop
xor
stc
fidivs
xchg
pop
or
es
pop
xchg
ret
fdivrl
pop
jnp
sbb
inc
movsl
adcl
aas
mov
pop
jnp
pop
mov
pop
adc
sarl
gs
lea
dec
cmpsl
push
pop
mov
add
sub
dec
sbb
cmp
pop
pop
adc
mov
inc
fwait
shl
push
xorb
cwtl
cli
jbe
inc
stc
jns
or
xor
mov
lods
mov
pop
sub
sbb
mov
or
xrelease
add
ret
insl
loopne
mov
sbb
pop
push
in
mov
repnz
xor
pop
jo
fistpl
cmp
add
mov
xor
push
pop
fldl
fistpl
fildll
inc
pop
mov
pop
roll
outsb
or
sbb
pop
es
xchg
data16
mov
cmp
cmp
movsb
pop
pop
int
imul
clc
lret
xchg
and
jnp
jo
jge
sbb
pop
cmp
pop
xchg
cmp
pop
popa
pop
in
data16
lret
cli
pop
sub
dec
ret
pop
stos
int3
jns
adc
xor
add
push
pop
ret
fsubr
mov
movsl
pop
js
insb
jmp
mov
mov
aam
pop
aas
or
ret
sbb
adc
pop
cmp
mov
pop
in
xchg
sbb
dec
cltd
sahf
pop
rorl
scas
mov
cld
loope
stos
pop
or
movsl
dec
mov
pop
xor
into
push
sar
sbb
fwait
pop
stos
dec
gs
mov
js
mov
sbb
sub
jno
sarl
mov
mov
out
ficompl
rcll
adc
mov
clc
aas
push
out
jmp
pop
mov
xchg
push
inc
mov
stos
sbb
stos
loop
lahf
js
sbb
pop
loop
pop
daa
dec
mov
add
pop
inc
lret
nop
push
pop
lea
mov
lcall
je
rcrb
pop
icebp
jmp
sub
xlat
imul
test
xchg
adc
aaa
pop
jg
das
pop
pushf
xchg
mov
push
pop
sbb
lahf
rolb
fcomps
popa
jne
jp
or
push
pop
mov
sbb
dec
dec
mov
push
push
rcrb
pop
icebp
inc
jp
cwtl
mov
push
mov
aas
pop
inc
js
imul
mov
adc
enter
adc
pop
cmc
jo
xor
test
in
fmul
mov
fiaddl
aad
xchg
outsl
push
nop
mov
bndldx
les
int
dec
pop
inc
pop
or
sbb
pop
xchg
jae
ret
int3
jp
pop
pop
shll
xchg
push
inc
fcompl
mov
loop
fmuls
sbb
stos
lahf
js
pop
iret
and
xor
cmp
std
scas
adc
pop
add
int3
stc
xor
idiv
push
mov
cli
std
xor
fcomps
xor
in
pop
pop
sbb
cmp
pop
mov
dec
fisttps
adc
inc
outsl
cltd
jno
leave
dec
sub
gs
push
dec
data16
pop
mov
pop
and
js
push
scas
je
pop
pop
push
dec
mov
dec
mov
pop
fsts
jecxz
inc
dec
jae
fisttpll
sbb
stos
in
xchg
pop
push
enter
leave
mov
addr16
pop
fsubs
or
sbb
scas
mov
adcb
xchg
sub
sbb
sub
cmp
sub
add
and
fcomi
dec
in
out
call
mov
jae
mov
cwtl
filds
xchg
cmpsb
stc
jl
mov
mov
ret
pop
mov
adc
xor
jae
add
sbb
dec
lret
dec
mov
mov
fistpll
in
pop
xor
push
ljmp
ss
bound
jmp
mov
adc
mov
rcrb
xor
mov
inc
pushf
out
jne
sub
test
xchg
sub
scas
js
jno
lds
enter
sbb
in
add
mov
cltd
movsl
jno
mov
iret
ljmp
push
test
test
pop
pop
hlt
push
fcmove
in
sbb
pop
insl
pop
dec
and
addr16
fwait
inc
xlat
fldl
mov
call
js
adc
andl
in
jp
pop
cltd
les
fcmovbe
std
ror
dec
test
adc
xchg
xchg
adc
lcall
roll
adc
fdivrl
ljmp
nop
push
xchg
mov
fists
rolb
adc
xlat
adc
mov
push
mov
pop
add
mov
jbe
xchg
cmc
lds
jecxz
pop
jl
fbstp
pop
cmp
out
jns
add
fldt
xor
xchg
lds
stc
sub
sti
mov
sub
test
push
lods
sbb
dec
out
cmpsb
push
pop
ficompl
push
xchg
je
fmul
dec
sbb
jl
scas
std
xor
jle
jp
cmp
popf
and
jp
int
adc
mov
call
arpl
mov
jae
aas
push
xchg
fwait
sub
jl
aas
gs
pop
ljmp
cmp
mov
fwait
sbb
mov
dec
add
mov
xorb
loopne
jne
sub
ficompl
push
pop
and
pushf
pop
je
dec
test
fdivs
jp
leave
notb
or
lods
roll
sti
cmp
sbb
movsb
xchg
in
add
pop
mov
sarl
push
xor
mov
push
stc
push
mov
mov
push
push
mov
fwait
cmp
hlt
jmp
bnd
inc
and
pop
xor
pop
pop
lcall
das
inc
or
inc
mov
add
shrb
adc
dec
and
adc
pop
mov
mov
mov
test
dec
jbe
mov
lret
adc
pop
adc
inc
jbe
xor
push
xchg
push
pop
shl
in
or
and
sub
push
mov
sbb
subb
inc
pop
push
lea
push
mov
subl
les
pop
stos
xchg
movsb
pop
pop
push
dec
jne
pop
xchg
pop
jl
andb
mov
push
addb
pop
sub
js
loop
xchg
sbb
lods
cmc
pop
das
sbb
jbe
jne
out
pop
ret
cmp
xchg
sub
push
or
loope
aaa
pop
mov
and
loop
ficomps
fstps
xor
jbe
inc
lcall
ds
out
inc
lods
into
adc
wrmsr
mov
mov
fists
add
pushf
xchg
mov
pop
jl
mov
add
fmuls
hlt
sbb
pop
shlb
xchg
mov
xchg
pop
sbb
lods
and
push
mov
jecxz
push
pop
incl
pop
nop
cmpb
sbb
push
out
pop
mov
and
pop
jb
or
stos
shlb
mov
ja
mov
shrl
sbb
lock
loopne
addr16
pop
stc
xchg
enter
cmpsb
sbb
mov
sbb
ja
pop
cltd
or
data16
mov
push
in
push
mov
pop
stos
out
lea
sub
lahf
mov
xchg
cmp
lods
sbb
and
subb
negb
ret
mov
and
pop
pop
subl
pop
in
imul
imul
mov
xor
sub
mov
out
repz
and
outsl
pusha
rcrb
fs
hlt
push
mov
leave
pop
or
pushf
mov
pop
mov
cmp
jecxz
and
pop
nop
inc
push
mov
dec
xchg
mov
sahf
pop
outsl
loope
cmp
insb
rorl
pop
push
jmp
lahf
xchg
lods
std
bound
out
mov
pop
push
cmp
cmpsb
xor
pop
sarb
lcall
popa
nop
xchg
lahf
jge
insb
mov
scas
xchg
mov
popa
pop
out
dec
fwait
push
pusha
aaa
into
or
daa
xchg
mov
adc
pop
sub
jae
out
push
fwait
ret
push
ret
or
imul
roll
fs
pop
xchg
mov
stos
fbld
pop
pusha
push
ss
icebp
lret
in
adc
movsb
adc
dec
arpl
pop
sti
scas
lock
fcomp
mov
add
mov
pop
jmp
sahf
xor
dec
enter
int3
je
fldcw
jecxz
pushf
xlat
cmpsl
test
pop
add
mov
mov
jmp
xchg
xor
fcmovb
inc
nop
lcall
pop
les
aam
mov
cmpsl
pop
sahf
stos
sbbl
pop
jae
ja
sub
pop
repnz
punpckhbw
mov
mov
xorb
mov
pop
pop
int
xchg
lds
fstpt
pop
dec
out
mov
pop
mov
xchg
das
pop
frstor
add
insb
cwtl
push
pop
subb
cmpsl
gs
lds
icebp
dec
adc
jnp
out
test
jns
add
sbb
mov
xlat
repz
pop
loop
ret
adc
pushf
jnp
stc
out
leave
fstl
cmp
in
or
adc
nop
push
pop
push
xchg
sbb
pushf
or
mov
xchg
mov
xorb
pop
xchg
out
adc
pop
mov
pop
jecxz
mov
pop
pop
int
inc
aad
fucomip
sbb
pop
jle
push
inc
cs
push
idivl
lcall
jnp
mov
les
xchg
push
leave
rcrl
inc
pop
inc
mov
hlt
in
das
je
lahf
fstpt
sub
rorb
ds
fistps
push
inc
xor
scas
push
cmp
cmp
inc
mov
cmpsl
mov
imul
xchg
push
inc
sbb
les
lahf
cmp
std
and
xor
mov
pop
ljmp
fists
inc
jmp
mov
push
xor
in
dec
sbb
lret
mov
pop
das
mov
hlt
lock
push
push
mov
mov
pop
dec
ds
sub
test
hlt
aas
mov
fldenv
inc
mov
cltd
sti
lahf
jp
mov
mov
leave
rclb
out
rorl
jecxz
in
sbb
lods
enter
mov
push
pop
repz
jl
pop
jmp
imul
adc
mov
jbe
fcos
mov
xor
ucomiss
jns
cmpsb
inc
divl
cmp
mov
cmp
ret
pop
popf
mov
adc
cmp
pop
mov
out
lahf
popa
jle
or
movsl
jecxz
mov
jmp
cmpsl
dec
pop
test
inc
pop
in
push
mov
cmc
xor
push
pop
psubq
ret
dec
gs
sub
test
mov
mov
movsb
aas
aam
shll
jg
pushl
int3
sbb
adc
xchg
pusha
and
repnz
lock
fbstp
pop
mov
xor
lods
insl
add
data16
push
push
pop
and
and
xchg
sti
mov
dec
mov
add
aad
das
pop
dec
hlt
xlat
imul
jnp
cltd
dec
or
mov
cltd
pop
pop
inc
jmp
jb
and
pop
push
sub
shrb
pop
and
int3
loope
mov
lds
and
leave
lods
ret
cmpsb
sub
mov
mov
jl
xor
add
in
xchg
pusha
and
test
mov
pop
jae
frstor
lea
pop
jp
push
jl
int
mov
clc
inc
rcrb
call
test
mov
push
xor
pop
arpl
jecxz
and
push
pop
call
or
adc
pop
in
add
pop
bound
aad
pop
mov
fsubrl
xchg
das
sbbl
rorb
pop
jg
mov
mov
push
cmpsb
push
aaa
inc
enter
pop
popa
cmp
notb
pop
xchg
add
adc
xchg
and
fists
std
push
sarl
dec
gs
shll
aas
popl
lods
ja
scas
dec
mov
repz
cmp
jmp
cmpsl
push
adc
pop
xchg
mov
out
andl
cltd
cmc
je
add
into
ss
bound
decl
lods
inc
clc
fmulp
mov
pop
add
sbb
inc
pop
jo
mov
std
in
push
or
or
daa
pop
je
hlt
mov
mov
pop
sbb
adc
jmp
mov
scas
ss
pop
lret
add
popf
adc
mov
imul
inc
addb
push
or
xor
push
fwait
sbb
mov
adcl
pop
mov
jp
mov
in
imul
fistl
push
loop
pop
inc
mov
icebp
pop
sbb
and
pop
in
iret
cmc
inc
jb
cmpl
imul
insl
das
cmc
fcoms
push
inc
xlat
call
clc
inc
negb
andl
fcomi
jmp
cs
xchg
jno
out
scas
incb
dec
ret
mov
pop
xor
test
cmp
sub
into
fadd
lds
ja
es
xchg
push
jne,pn
aas
popa
or
mov
in
push
addr16
out
movsl
ljmp
push
pop
bound
pop
test
rcll
incb
pushw
pop
shlb
in
lahf
xor
pop
movsl
add
mov
inc
mov
fbld
je
das
cmp
mov
shlb
jg
inc
pop
outsb
mov
pop
push
pop
lds
push
cs
pusha
repz
fldcw
mov
std
xor
xor
pop
jno
push
adc
scas
repnz
mov
inc
jmp
add
xchg
rorl
shl
mov
test
adc
fiaddl
push
push
jg
gs
dec
pop
and
addb
fisttps
pop
mov
cmp
int3
pop
pop
mov
adc
pop
push
ds
aas
arpl
cmc
ja
loopne
sbb
fnstcw
xchg
mov
outsl
aas
jmp
hlt
ss
fisttpll
ds
cld
push
pop
dec
inc
mov
pop
adc
mov
and
shrb
mov
cmp
inc
pushf
sbb
mov
lret
lret
mov
and
addr16
pop
ja
std
sti
cmp
sub
es
add
jno
or
pop
sbb
mov
in
push
pop
pop
aas
adc
pop
daa
icebp
and
dec
push
dec
pop
sbb
fnstenv
and
mov
fdivr
xchg
ret
mov
adc
xor
pop
lret
dec
add
cmp
sub
dec
push
iret
lcall
sub
and
pop
fdiv
mov
dec
or
addb
ljmp
or
out
jge
fdivl
cmp
outsl
jb
fs
pop
inc
mov
lcall
mov
jae
cld
in
and
mov
dec
popa
scas
pop
shll
aaa
pop
sub
fucom
add
je
pop
pop
mov
mov
cwtl
jbe
ret
sbb
xchg
in
inc
push
cli
pop
ja
mov
jp
sub
adc
sub
push
lahf
dec
enterw
movsb
mov
gs
pop
xor
sbb
add
fwait
push
les
in
fnstcw
scas
or
hlt
push
or
int3
out
cmp
jecxz
xchg
cmp
mov
mov
xchg
and
mov
repz
scas
mov
rorl
pop
das
inc
repnz
scas
shl
pop
pop
cmp
inc
dec
sbb
push
fldt
mov
in
cmp
push
or
mov
fdivrs
jecxz
inc
cmp
shrb
lcall
xor
ret
dec
mov
fdivr
adc
mov
pop
xchg
int3
sbb
ret
mov
or
into
pop
cmpsl
cmp
pop
int
jge
lcall
adc
add
ja
scas
in
add
enter
pop
pusha
sbb
mov
mov
push
inc
pop
insl
push
sti
insb
or
jns
inc
mov
mov
aad
cmp
stos
pop
lret
testb
shl
push
pop
cmpsb
push
mov
sub
lds
pop
rcrl
xchg
scas
testl
push
fiadds
xor
jge
fwait
rclb
sbb
and
sbb
dec
lods
rorl
pop
les
sub
imul
incl
push
jmp
and
stc
idivl
xchg
dec
mov
pop
sub
add
repz
stos
inc
dec
pop
out
pop
sub
leave
aaa
hlt
pop
jno
mov
jecxz
repnz
in
jo
ja
mov
insb
stos
lret
mov
adc
shll
dec
xor
sbb
xchg
aam
or
pop
jnp
in
lcall
fdivr
xor
jge
pop
dec
adc
lcall
sub
mov
test
push
sbb
pop
mov
iret
mov
aaa
shrb
stc
dec
stos
ret
mov
dec
fsubs
pop
pop
mov
xchg
pop
fimull
or
hlt
loop
inc
pop
add
cmp
lcall
and
push
mov
in
inc
push
xchg
into
cltd
add
adc
cmp
sbb
rorb
jne
xchg
vmread
repnz
dec
pop
cli
adc
orb
daa
test
cwtl
arpl
push
xchg
movsl
dec
jns
into
xchg
loope
lret
iret
add
pop
mov
push
xlat
pop
fisubl
and
pop
adc
push
lahf
lods
mov
pusha
pop
inc
jbe
nop
mov
and
sbb
and
stc
ret
or
adc
add
jb
and
mov
les
pop
in
dec
inc
stc
aam
repz
cmp
push
sub
adc
pop
divb
mov
popf
lods
es
pop
inc
pushf
sub
adc
pusha
mov
sbb
cli
hlt
scas
mov
shll
cmpb
cmc
mov
sbb
push
scas
sub
dec
rclb
cmp
stos
cmp
cmc
mov
fstpl
insl
mov
imul
jo
mov
sub
pop
cmp
pop
sbb
mov
insb
scas
cmp
cmp
pushf
pusha
cmpsb
loop
mov
sbb
pop
pop
dec
xor
inc
sub
jmp
sub
add
jae
or
lahf
daa
push
mov
inc
and
add
pop
and
out
pop
add
imul
loope
lods
in
push
movsl
into
jle
cld
std
xchg
jge
ret
push
arpl
sbb
pop
jo
mov
subl
jge
adc
sbb
xchg
test
pop
and
ret
xor
gs
pusha
jb
pop
cwtl
mov
cmp
popf
lahf
pop
movsl
xor
mov
or
test
sub
pop
hlt
add
cltd
inc
sbb
cmpsb
imul
push
sub
pop
sbb
popf
cmp
mov
pop
das
scas
int3
scas
mov
daa
pop
xchg
mov
or
cltd
or
xchg
pop
push
call
arpl
inc
adc
adc
cmp
or
enter
or
ljmp
sub
dec
ds
mov
bound
pop
pop
or
mov
lahf
in
fst
pop
sbbl
cmp
fisttpl
negb
pop
pop
inc
or
cmp
jle
push
scas
cmp
dec
jns
cmp
aam
sti
das
fistps
mov
pop
pop
sub
cli
sbb
push
addr16
repz
xchg
ss
xchg
sub
pop
aam
fsubs
imul
mov
ja
pop
dec
imul
or
push
clc
fnstcw
jb
push
into
push
call
jl
mov
dec
scas
clc
leave
in
or
test
pop
testb
cld
cmp
das
ret
mov
pop
clc
push
mov
xchg
testl
insl
loopne
sbb
js
int
pop
into
and
ffreep
sbb
dec
pop
shrl
cltd
mov
lahf
mov
push
pushf
pop
xor
sbb
inc
movsb
pop
mov
or
xchg
push
pop
fdivrs
pop
cmp
xchg
mov
add
pop
fcomip
cmpsb
sbb
popf
int
pop
and
sti
sub
add
lods
xor
daa
sub
outsl
pop
notl
and
jns
mov
leave
pop
jmp
fwait
cmp
fisubl
pop
xchg
lcall
sub
inc
pop
adc
inc
pop
call
add
pop
aaa
lock
mov
scas
out
push
cmpsb
adc
aam
push
jle
xor
dec
xchg
leave
mov
sbb
out
dec
sahf
cmp
jl
dec
stos
mov
cld
cwtl
std
jl
push
push
push
inc
or
addr16
dec
test
shrb
cs
in
push
sbb
std
adc
push
xor
je
fsubrs
or
inc
push
fisttpll
push
shrb
or
or
negl
scas
or
cmp
andb
pop
out
adc
jns
cmpb
or
jmp
mov
in
lret
in
sub
mov
xor
mov
bound
mov
pop
sub
jp
inc
in
cmpsl
push
push
add
pop
mov
push
inc
pop
inc
aas
mov
jns
into
mov
shlb
mov
xor
in
mov
pop
cmc
in
add
jl
out
push
xchg
sbb
lds
cmpsl
fwait
jb
pop
shrl
repnz
lods
jo
xor
fsts
pushf
xor
inc
or
daa
cmp
jge
xorl
jnp
and
imul
mov
jg
pop
adc
or
mov
fbstp
mov
xor
dec
bound
movsl
add
repnz
and
shr
push
test
pop
pop
sbb
jge
and
pop
sub
xor
sbb
popl
sbb
add
push
jg
inc
and
mov
pop
fsubrs
je
cld
lods
aad
cmp
lods
add
mov
ljmp
and
xor
pop
fmul
push
pop
fs
mov
push
out
shrl
dec
mov
push
insb
sub
mov
push
lahf
loop
sub
dec
out
sahf
sub
adc
pop
scas
push
or
xchg
pop
add
dec
and
mov
mov
mov
adc
push
pop
lret
push
push
pop
fildl
sub
pop
mov
adc
data16
pop
push
js
sbb
arpl
xor
push
adc
or
add
addr16
pop
fsubrl
pop
hlt
js
fisttpll
arpl
loope
xchg
int3
xchg
out
sti
stc
out
in
cs
adc
cltd
test
jecxz
fwait
test
stos
cwtl
mov
sub
pop
dec
xor
dec
in
cmovl
jg
adc
iret
loopne
pop
mov
xchg
orb
dec
pop
mov
push
aaa
fcompl
fnstenv
imul
cli
stos
jmp
mov
iret
pop
pop
sarl
scas
mov
aad
pop
and
mov
stos
mov
cmpsl
fnstcw
push
cmp
cmpsb
mov
aad
pop
inc
mov
adc
sti
sbb
negb
cltd
jb
and
adc
pusha
mov
imul
jle
movsl
mov
mov
jo
xchg
mov
lods
pop
and
mov
or
sub
dec
mov
leave
and
mov
icebp
inc
clc
pop
mov
ret
pop
mov
ss
aad
push
push
outsb
mov
int
lods
shlb
ret
mov
inc
fistpl
adc
dec
or
xor
imul
add
jmp
mov
out
fidivl
mov
dec
addr16
loopne
inc
out
and
sub
fs
push
jno
mov
mov
movsb
adc
and
repnz
and
add
dec
test
rcrl
arpl
mov
mov
dec
mov
xor
cwtl
mov
pop
or
jle
ss
or
outsb
mov
pop
insb
sahf
sub
pop
cmp
out
inc
pop
loop
in
or
push
or
jae
sbb
push
adc
sbb
clc
mov
aas
add
mov
test
in
out
mov
cld
xchg
jl
cmpsl
dec
jmp
insl
mov
out
mov
jns
lea
push
xchg
les
das
jb
ja
pop
and
push
push
push
jl
mov
stos
call
jae
ljmp
imul
add
pop
pop
inc
or
jp
repnz
mov
xor
and
fisttpl
inc
addr16
pop
mov
add
ds
mov
or
pop
mov
aad
loopne
pop
sarb
and
aas
lcall
xchg
stos
dec
adc
and
lods
sub
xchg
push
and
jbe
scas
cmp
sbb
aad
pusha
sarb
inc
aas
jb
test
lods
dec
cltd
sbb
add
pop
scas
movsb
arpl
jl
cwtl
jg
sub
movsl
dec
in
int3
or
add
jl
lcall
mov
cmp
inc
nop
mov
cmp
notl
arpl
sbb
and
xchg
shrb
clc
dec
inc
pop
dec
aam
pop
fldenv
stos
bound
push
jnp
icebp
pop
gs
push
or
and
pop
dec
fs
cli
mov
pop
pop
popa
pop
xor
shrb
into
sbb
repz
and
pop
xchg
cmp
ret
repnz
inc
cmp
pop
xor
mov
xor
inc
jge
adc
mov
pushf
pop
ja
repnz
or
out
loopne
clc
and
cmpsl
pop
lds
js
sti
xor
sbbb
icebp
pushl
hlt
and
jbe
cltd
jmp
fwait
and
pop
test
adc
in
sub
pop
mov
cmpsb
pop
inc
shrl
ret
lahf
fcoms
pop
test
into
jnp
adc
jb
cmp
shll
mov
ds
pop
push
idivb
pop
aad
mov
pop
xchg
push
dec
das
pop
mov
and
push
and
sub
clc
push
adc
in
xchg
out
lds
je
nop
mov
or
push
fnsave
pop
and
pop
sub
pop
pop
mov
or
add
cmp
xchg
js
les
pop
and
jmp
pusha
test
mov
mov
ss
pop
stos
sarl
push
pop
sarb
lds
pop
les
add
sbb
xor
lods
subb
sub
mov
xor
cmp
mov
jbe
mov
xchg
pop
adc
ja
sti
pop
dec
inc
or
mov
pop
dec
jmp
xchg
sbb
popf
pop
data16
lret
add
movswl
sbb
cs
mov
dec
nop
pop
cmp
rcr
mov
cmc
dec
enter
adc
je
sub
lcall
call
and
pop
push
std
sub
xchg
leave
mov
pop
jbe
addr16
push
mov
pop
add
xor
call
or
xchg
lret
mov
punpckhbw
add
in
sub
mov
cmp
imul
lret
pop
rcr
pop
sbb
lea
push
pop
pusha
cs
mov
fildll
pop
sbb
pop
int
lods
push
in
scas
aad
clc
aas
mov
pop
repnz
mov
cmpsb
fcmovnbe
test
stc
xchg
mov
lret
aas
xor
fsubs
sub
jmp
in
sbb
cmp
cmc
scas
insb
inc
mov
ss
mov
push
mov
pop
popf
stos
cli
insl
pop
pop
fwait
les
lods
add
xor
pop
pop
and
add
mov
cmp
test
pushf
in
add
dec
loope
cld
jecxz
fsubrp
inc
jb
push
push
jp
in
push
lret
repnz
mov
std
dec
and
cld
fadds
jg
cltd
loop
pop
pop
testb
jno
mov
test
fisubs
cmp
cmp
fsubrl
lods
adc
mov
xor
jne
inc
outsb
mov
jmp
in
pop
arpl
cwtl
cmp
pop
pop
fldl
repnz
pmulhw
pop
daa
sti
inc
sub
fxch
pop
mov
add
dec
pop
adc
pop
mov
pop
fadds
cli
ja
seta
jno
fwait
pop
out
call
sub
lret
adc
jbe
dec
mov
xor
sub
lcall
adc
cmp
jl
pop
adc
enter
mov
push
cmp
adc
pop
mov
pop
sbb
insl
cmp
test
xchg
movsb
pop
lods
push
dec
adc
loop
xor
daa
lret
fsub
addb
daa
push
clc
adc
jg
jle
cmp
cmp
ret
pop
leave
mov
and
loop
xor
lock
push
cmp
pop
movsl
fdivp
pop
jecxz
xchg
mov
out
lcall
subb
jl
dec
push
setp
mov
sbb
ret
xor
or
push
out
push
mov
iret
std
adc
sarl
icebp
xchg
pop
mov
jmp
cltd
fidivl
pop
call
and
test
hlt
cli
xor
movsl
xchg
scas
pop
mov
push
nop
xchg
pop
or
outsb
mov
push
iret
inc
push
cltd
xor
sbb
mov
stc
mov
inc
adc
jge
js
pop
mov
sahf
xchg
sbbb
cld
push
cmpsl
xor
cmc
and
sbb
lcall
sbb
dec
xor
jecxz
xor
int
imul
inc
mov
sahf
pop
xor
xor
fimuls
aad
sbb
icebp
stos
ja
lock
or
cmpsb
xchg
xchg
fnsave
in
jo
mov
les
fwait
inc
pop
jnp
sbb
lods
stc
sar
adc
mov
fidivrl
pop
js
push
fwait
or
xchg
pop
fidivs
mov
push
arpl
or
fwait
dec
mov
jg
sub
pusha
xlat
mov
xor
pop
pop
iret
int3
cmp
xchg
sbb
mov
add
xchg
scas
in
ljmp
ja
outsb
or
outsl
dec
pop
in
pop
sbb
jbe
js
add
in
lods
fildl
pop
add
sbb
scas
mov
jge
lods
adc
fnstenv
iret
and
sbb
inc
test
xor
jb
pop
mov
pop
sbb
or
pop
cmp
adc
pop
mov
jno
push
jns
pop
sub
aaa
mov
ljmp
lcall
pop
daa
out
xchg
xor
pop
dec
rcrb
mov
in
fcomps
js
loop
xchg
inc
jecxz
sbb
cwtl
out
inc
out
mov
mov
test
dec
xor
ss
ljmp
cmpsb
xchg
mov
sarl
jge
mov
sub
mov
cmp
xchg
pop
xchg
or
inc
jo
add
and
cmp
mov
mov
dec
mov
push
icebp
inc
outsl
lcall
shrl
inc
scas
and
xchg
int
aam
mov
sbb
mov
cmp
cmp
popa
and
inc
imul
pop
push
xor
sub
add
cmp
sbb
addr16
mov
fisubl
mov
mov
in
sbb
lcall
pop
out
fidivrl
adc
add
pop
pop
adc
test
sbb
push
lea
aaa
sarb
notl
pop
pop
xchg
fcmovu
loopne
jp
cmpsl
mov
out
subb
push
push
sbbl
and
out
pop
shlb
xor
pop
aaa
outsb
cmp
xchg
pusha
mov
push
mov
bound
adc
mov
cwtl
push
pop
mov
mov
subl
sar
xor
xchg
or
lock
sbb
pusha
inc
push
pop
repnz
call
cltd
or
or
lcall
cmp
jmp
mov
jg
sbb
aas
insl
push
daa
pop
cwtl
int3
push
mov
loopne
inc
push
jbe
sub
xlat
or
leave
fs
adc
or
dec
aaa
inc
out
ljmp
cmpsb
push
pop
js
into
and
mov
cmp
adc
or
jmp
in
mov
aas
sarb
popa
sub
iret
dec
xor
lods
push
leave
repz
mov
repz
or
fistl
movsb
xchg
pop
add
xchg
ret
pop
scas
xchg
sbb
cmc
popa
jl
adc
sub
sub
ljmp
mov
ljmp
xor
rolb
sti
pop
loop
dec
sbb
sbb
push
rcr
xchg
fucomi
ret
popa
stc
testl
icebp
bound
sub
test
cltd
xor
pop
int3
lea
push
scas
dec
xor
sub
mov
xor
adc
aam
pop
fwait
dec
mov
nop
ljmp
sbb
repz
xchg
lcall
lahf
vunpcklps
scas
loopne
outsb
sti
rcll
add
jmp
mov
push
xchg
lret
push
js
pop
mov
xchg
adc
mov
sub
push
pusha
pop
stos
cmp
sub
imul
pop
cltd
cmp
and
xorb
enter
scas
cmp
test
dec
jl
lods
dec
aam
imul
inc
insl
das
mov
repnz
sahf
stos
mov
jmp
push
cmpsl
sub
scas
dec
cmp
jle
and
cltd
pusha
imul
mov
fcoms
cltd
sti
cmp
icebp
call
jbe
pop
xchg
mov
sub
push
cs
das
in
loope
mov
rorb
lahf
xchg
pop
push
mov
jns
sub
xor
loopne
or
cmp
pop
mov
dec
fimuls
mov
cld
stos
cwtl
jno
pop
jae
cmp
loop
lock
pusha
xchg
pop
hlt
jmp
cmpsl
outsb
push
inc
fs
mov
pop
pusha
dec
pop
stos
jecxz
pop
and
je
cltd
je
ficoml
pop
inc
pop
or
rcll
mov
and
pop
lock
xor
adc
mov
dec
imul
adc
inc
mov
pop
scas
subb
xchg
pop
repz
lock
and
mov
out
fxch
shrl
pop
sbb
or
cmp
rcrl
cwtl
jmp
pop
fmuls
sbb
mov
jo
xchg
popf
xchg
pop
pop
xorl
adc
add
int3
cmp
out
popa
mov
stos
add
fcmovne
pop
andl
adc
mov
push
push
pop
mov
jmp
pop
imul
jne
lods
jge
pop
dec
pop
sub
cmp
out
test
pop
inc
pop
sahf
nop
pop
pop
inc
inc
dec
xchg
sbb
in
sbb
cs
stos
push
push
mov
sbb
mov
adc
sbb
xchg
xchg
cmp
das
push
pop
jo
cmp
pop
cmovg
iret
pop
loop
ss
cmp
in
jns
push
or
mov
pop
xchg
cmpsb
test
adc
adc
cmc
ljmp
jbe
sbb
stos
dec
push
imul
aaa
icebp
pop
dec
nop
dec
scas
and
push
ja
push
cltd
daa
sub
pop
cmc
scas
push
aam
pop
add
mov
ret
cmp
test
ret
add
lock
mov
movb
jo
mov
fstps
js
pop
ss
pop
add
cmp
pop
or
or
xchg
stos
in
pop
mov
adc
pop
aas
sub
sbb
and
adc
ljmp
add
adc
mov
or
jg
jp
hlt
fidivl
jnp
inc
mov
ds
movsl
test
popf
fcoms
push
mov
pop
test
dec
sub
call
lahf
shl
sub
iret
subl
pop
aas
popf
mov
pop
pop
out
call
fsts
pop
xchg
adc
es
jns
pop
repnz
call
lahf
xchg
inc
ja
pop
or
scas
and
cbtw
sbb
mov
and
insl
sbb
ss
inc
pop
test
pop
int3
pop
inc
shll
or
pop
add
in
pop
aam
clc
pop
fs
jo
mov
xor
daa
push
jecxz
jp
fistl
fldl
mov
push
fiaddl
mov
and
lcall
push
lret
aas
and
push
jnp
jne
dec
lahf
add
cli
dec
arpl
pop
cmp
in
cmp
adc
pop
jecxz
jp
scas
enter
xchg
aas
sbb
jbe
pop
inc
mov
sbb
xchg
pop
sbb
push
movsl
call
arpl
pop
in
out
cltd
mov
sbb
ss
mov
test
sbb
jb
push
pop
sbb
neg
lret
inc
sbb
add
lods
repz
dec
or
mov
jge
mov
sbb
roll
xor
mov
push
mov
sub
pop
fldenv
cmpsb
out
fmull
or
pusha
mov
jle
cmp
pop
loope
int3
cmpsl
pop
mov
outsb
lock
push
pop
or
pop
cmpsl
pop
scas
fs
add
cmp
xor
test
rcl
shl
mov
ffree
mov
arpl
inc
shll
fcomip
dec
js
in
jle
xchg
in
mov
std
pop
rcrb
hlt
jecxz
adc
loope
mov
int
sub
pop
js
lods
adc
outsb
sub
lret
mov
mov
push
add
cltd
push
push
push
in
loopne
add
dec
cmp
push
mov
xchg
popa
cmp
sub
sbb
jb
inc
scas
test
arpl
aas
pop
repz
push
lret
outsl
pop
cmpsb
dec
xchg
daa
fistpll
inc
lahf
push
addr16
jb
dec
dec
mov
push
outsb
out
fistl
mov
mov
pop
sub
into
stos
pop
cwtl
negl
xchg
pop
std
inc
xor
flds
daa
pop
xchg
pop
jno
mov
xchg
pop
mov
aam
inc
lahf
scas
outsl
lret
scas
jns
out
jo
test
dec
sbbb
pop
fistpll
push
adc
sbb
inc
sbbb
xor
add
js
xchg
sub
lcall
cs
jg
es
mov
cmp
test
add
mov
fistpl
xchg
inc
lret
pop
cli
jmp
and
scas
mov
imul
in
sbb
cmp
jge
mov
adc
mov
sub
jl
lods
or
xlat
sbb
ja
push
es
pop
lods
dec
mov
pop
sub
xchg
sub
sarb
xor
and
fdivrl
pushf
or
jg
aas
adc
pop
and
push
loopne
cmp
bnd
pop
ja
xchg
jns
imulb
pusha
cmp
pop
into
xchg
sbb
mov
fistpll
adc
pop
sub
sbbl
jne
add
js
mov
mov
fs
hlt
sub
lret
jns
pop
adc
gs
scas
aad
rol
outsb
mov
pop
mov
mov
xchg
sbb
test
xchg
fmull
cmc
pop
dec
sub
dec
ret
pop
iret
movsb
mov
jge
aaa
sub
lods
repnz
xchg
sbb
xchg
cmc
pop
ret
test
pop
repz
pop
es
pop
scas
cmc
add
jns
mov
push
xor
je
lds
outsb
inc
pop
stos
jne
pushl
push
mov
sub
loop
pop
pop
fistpl
push
cmp
int
mov
pop
xchg
ljmp
lock
dec
or
ficomps
mov
mov
in
out
das
add
push
call
std
enter
pop
rcrl
stos
xor
xor
mov
sub
adc
push
pop
loopne
mov
loope
pop
push
int3
mov
mov
movsb
pop
sarb
and
jl
inc
cli
adc
jecxz
xchg
arpl
ds
push
add
lret
mov
lcall
sbb
iret
add
pop
leave
addl
rcrb
std
lahf
adc
in
pop
push
stos
js
adc
xchg
push
jle
sarb
pop
mov
pop
fdivs
mov
jb
pop
aad
inc
inc
mov
pop
faddl
roll
sub
mov
mov
cmp
test
pop
pop
xchg
mov
mov
mov
lret
ss
jnp
call
idivl
fsubp
pop
jge
cs
pop
nop
add
test
scas
cmp
cltd
int3
inc
sub
dec
call
mov
mov
cs
cmp
mov
leave
cmp
jecxz
aas
shrl
sbb
lea
dec
jg
xchg
jle
cli
xchg
pop
push
sbb
iret
ds
pop
out
imul
mull
pop
pop
ret
insl
inc
jnp
ds
jle
pop
add
xor
out
jl
jne
pop
jmp
inc
pop
cmc
mov
or
cmp
fmuls
mov
and
callw
lea
gs
das
xchg
push
mov
out
aam
pop
mov
cmpsb
sbb
call
out
cmp
push
fstpl
jb
insb
jno
push
pop
inc
mov
aaa
xchg
push
addr16
mov
aad
pop
pop
and
or
pop
mov
push
pop
and
fmul
gs
adc
push
lret
jne
or
mov
sub
dec
sbbb
push
shl
lret
push
lods
sbb
fnstenv
scas
pop
movsl
call
das
pop
cld
pop
inc
jmp
idivl
orb
and
inc
xor
jb
pop
cmpsl
inc
bound
push
pop
sub
neg
scas
cmp
jmp
icebp
mov
mov
adc
loopne
pop
mov
cmp
pop
lret
inc
lcall
loopne
in
out
xlat
sbb
fistpl
cs
cltd
pop
loope
xchg
jbe
out
xor
mov
cli
imul
and
adc
dec
das
xchg
pop
movsl
data16
popa
xchg
inc
sbb
lret
push
gs
pop
imul
xor
out
test
push
mov
cmpsb
loop
pop
pop
lds
push
daa
leave
sbbb
xchg
rclb
mov
or
sbbl
insb
adc
pop
push
aaa
push
popa
sti
lret
dec
adc
ret
call
icebp
and
das
jl
inc
adc
fsub
push
mov
jnp
and
mov
es
push
insl
sub
outsl
mov
pop
dec
scas
dec
sbb
lods
push
push
hlt
je
imul
insb
or
mov
js
pusha
push
pop
lods
hlt
inc
je
test
fmul
xor
or
mov
or
push
adc
fs
flds
pop
pop
das
out
adc
sahf
mov
pop
clc
fs
add
cmpsb
fnstsw
mov
repz
dec
test
out
leave
xchg
lret
dec
xchg
push
pop
mov
and
lret
out
lds
stc
cmpsb
and
decl
sbb
mov
sub
outsl
lds
push
rclb
xchg
or
jp
stos
movsb
xchg
repnz
jae
sahf
loope
mov
push
sbb
and
outsl
mov
rclb
popa
mov
in
jmp
pop
rcrl
fadds
ret
fdivrl
cmpsb
mov
sbb
pop
sub
out
dec
push
sub
iret
bound
pop
dec
push
arpl
pop
scas
adc
and
into
mov
mov
outsl
pop
push
not
int
gs
pop
mov
pop
mov
pop
dec
mov
in
add
lock
into
mov
push
push
pop
push
lahf
pop
xor
dec
pop
sub
arpl
inc
scas
or
pushf
add
mov
pop
xlat
fildll
cltd
bound
lds
out
lods
pop
jle
das
jbe
fmull
mov
cmp
mov
cltd
out
xor
pushf
bnd
fxch
and
jecxz
aas
dec
pop
cmp
sbb
pop
divb
jl
test
pop
test
aas
mov
xchg
gs
ss
sbb
push
cltd
cmp
shr
pop
pushf
dec
pop
test
lods
mov
and
lods
cmp
inc
stos
cwtl
xor
push
pop
push
jl
sarl
das
jns
cmp
cli
and
adc
out
jns
push
xor
sbb
mull
or
pop
adc
or
push
pop
jecxz
fisubrl
call
mov
rcr
xor
cld
test
das
imul
pop
aaa
ret
xlat
insl
pop
sar
repz
push
or
sti
or
std
cld
cs
js
in
mov
xor
sbb
imul
sub
or
sub
pop
pop
add
lods
out
xor
pop
pop
jo
fimuls
and
mov
or
sar
xchg
data16
cltd
aaa
stc
adc
dec
daa
jns
clc
or
or
outsb
pop
sbb
pop
adc
test
push
addr16
mov
clc
jbe
jne
mov
cmp
out
xor
pop
mov
jge
popfw
adc
pop
inc
inc
fdivl
jmp
fdivs
xorb
or
lret
xchg
pop
sbb
cs
outsl
mov
xchg
push
rcrb
dec
stos
and
lods
sub
in
es
inc
js
pop
aas
mov
lahf
mov
in
lods
mov
jmp
pop
xchg
loopne
push
insl
xor
aad
lds
pop
mov
mov
xor
lea
cmc
mov
cs
fsubs
pop
das
xchg
and
lret
cmp
loop
dec
dec
cwtl
mov
and
push
dec
scas
fistps
mov
notb
inc
pop
sub
adc
and
ret
test
lret
js
pop
inc
push
hlt
std
dec
pop
ds
pop
clc
leave
or
push
stos
inc
shll
mov
js
push
add
mov
adc
test
out
push
shlb
sbb
ret
std
pop
fbld
andb
sub
add
mov
jmp
cmp
adc
dec
sub
aad
mov
push
pushf
mov
pop
int3
out
fcmovne
sub
lock
pop
sbb
sbb
and
mov
mov
push
addl
inc
sbb
in
xchg
pop
adc
dec
mov
pop
mov
lret
leave
out
cli
ret
gs
pop
pop
out
aad
fucom
aaa
inc
pop
mov
jge
cmpsl
dec
mov
scas
xchg
mov
inc
addr16
mov
xchg
add
add
lahf
lods
orl
bound
mov
dec
pop
mov
xor
mov
nop
sbb
cmpsb
scas
xor
pop
push
clc
das
lea
shr
push
cmp
loope
or
pop
dec
pop
mov
fsubp
adc
add
inc
cld
sub
sbb
mov
dec
or
testb
and
lock
push
mov
clc
flds
imul
mov
pop
arpl
in
push
scas
pushf
mov
jae
cmp
fs
pop
jns
sub
pop
mov
fcmovb
xor
ret
push
pop
les
sbb
adc
pop
pop
hlt
jbe
mov
pop
imul
adc
mov
adc
test
dec
jns
cld
das
dec
jge
dec
pop
in
jbe
jo
jnp
adc
pop
fcomps
cld
mov
add
push
or
pop
mov
call
lret
adc
out
andb
sbbb
cmc
pop
cmp
fbstp
call
mov
xor
mov
shr
or
pop
sbbb
out
nop
jle
pop
mov
or
cmpsb
test
fstl
sbb
lahf
fs
or
out
out
inc
lea
scas
imul
jmp
jp
pop
sbbb
add
pop
or
aaa
push
cmp
adc
inc
push
and
mov
mov
icebp
sbb
scas
sub
adc
mov
pop
mov
aad
cmp
push
pop
loopne
inc
ljmp
out
xchg
mov
pop
jecxz
add
jnp
lods
ret
jns
repz
int3
repz
inc
push
jbe
jp
pop
daa
mov
xchg
sbb
pop
push
xor
stos
mov
cmp
adc
adc
pop
out
mov
jecxz
test
shll
mov
adc
push
dec
xchg
stc
mov
int3
mov
out
lret
mov
inc
sbb
lret
les
cltd
mov
andb
lahf
jge
lahf
ja
sbb
adc
mov
mov
or
adc
cmp
and
arpl
sbb
sub
aaa
xor
dec
popf
jbe
aaa
pop
dec
f2xm1
cmp
pop
cltd
out
rolb
pop
loop
cmpsb
mov
jae
sbb
test
imull
or
jnp
pop
out
outsb
fstpl
push
repz
pop
or
push
rcrl
adc
xlat
jbe
inc
gs
enter
pop
pop
insl
out
mov
mov
adc
les
flds
xchg
mov
cmp
in
sbb
sbb
pop
hlt
cmp
stos
pop
mov
out
idivb
scas
pop
leave
ficoml
ss
lods
cmp
push
pusha
cmpsl
inc
fisttpll
ret
mov
and
int3
adc
iret
rcll
xor
pop
mov
mov
cmp
aas
lcall
into
fistl
jo
std
fmull
mov
cltd
push
jno
sub
pop
cwtl
xchg
popf
scas
add
jae
pop
in
mov
nop
mov
sbbb
repnz
push
lea
cmp
mov
or
xor
xchg
mov
lea
mov
push
push
xor
xchg
in
push
inc
mov
lret
jns
cs
inc
mov
fsub
sbb
cwtl
ja
frstor
and
fmuls
push
pop
lret
xchg
sub
ficomps
pop
push
inc
sub
scas
imul
mov
jle
arpl
pop
cmpsl
xchg
add
mov
loop
fsub
pop
pop
mov
stos
mov
pop
fcomps
adc
mov
sbbl
xor
fcmovu
jb
call
lahf
or
jmp
push
loop
pop
push
test
fists
inc
mov
repnz
add
mov
sub
fs
sub
jnp
push
movsl
arpl
sahf
mov
jbe
add
pop
mov
mov
lahf
adc
mov
lods
and
pop
rolb
xor
repz
icebp
pop
pop
xor
lea
jnp
pop
xchg
cmp
scas
xchg
lret
mov
push
aas
push
push
ja
mov
aam
or
fisttps
and
outsl
sub
mov
pop
sub
jae
adc
les
or
dec
roll
dec
sahf
rdtsc
xchg
pop
mov
movsl
addr16
dec
xchg
jne
xchg
sbb
add
sub
push
icebp
cmp
mov
pop
pop
mov
mov
xchg
lods
mov
mov
mov
lcall
xchg
push
and
xor
out
inc
inc
rcr
pop
jmp
pop
jno
jbe,pt
push
adc
pop
xchg
jae
popa
xchg
lcall
pop
popf
xlat
incl
outsl
pushf
push
fistl
xchg
sbb
sbb
jmp
push
sub
loop
mov
and
out
frndint
repnz
enter
loope
push
mov
rcrl
pop
xor
mov
jno
xchg
xchg
scas
pop
clc
push
stos
arpl
add
sti
insl
rcrb
aam
adc
fdivl
cmp
loop
stc
mov
cmp
pop
dec
jl
in
mov
lods
mov
rcl
pop
daa
push
mov
push
push
aam
mov
test
xchg
and
mov
outsl
adc
fdivl
pop
adc
sub
cmp
fisubrl
ret
jmp
out
gs
sbb
sub
cmp
pop
lds
pusha
or
jbe
scas
lret
je
pop
lods
inc
jne
ljmp
jns
jmp
hlt
pop
cmc
das
jg
in
push
xorb
daa
jp
or
add
push
or
mov
sahf
out
out
outsl
cltd
mov
pop
mov
aaa
push
mov
mov
xor
pushf
repz
daa
jnp
das
pop
sbb
orb
pop
pop
sub
add
sbb
xchg
inc
sbb
test
lea
rol
jecxz
adc
adc
sub
jb
in
inc
fdivrs
push
movb
adc
push
es
push
fildll
outsb
inc
call
jo
out
pop
std
cmpsb
jbe
aas
repz
pop
iret
jnp
mov
pop
icebp
adc
popa
roll
rcrb
inc
cmpsl
mov
cmp
aas
adc
pop
mov
sbb
sti
divb
ss
mov
pop
sub
jae
scas
push
pop
lods
bound
sub
push
xor
mov
out
outsb
cmpsl
jecxz
adc
mov
push
or
push
mov
and
pop
or
iret
xchg
dec
lods
mov
fstps
bnd
mov
cwtl
inc
pop
arpl
cmc
fs
push
scas
js
jb
push
mov
dec
xor
es
mov
fldt
mov
sbb
push
inc
not
pop
push
cmp
jge
xchg
aaa
popf
mov
leave
xchg
jg
cmc
lds
cltd
or
inc
add
test
into
shll
push
jns
push
push
jl
add
mov
je
or
nop
aam
add
scas
push
sbb
mov
cld
mov
call
scas
or
mov
mov
fidivrl
les
fldt
sbb
jbe
jbe
jl
fldenv
xchg
fs
stc
lods
es
ficompl
pop
xor
jl
xchg
loop
pop
xchg
push
cli
icebp
pop
jns
push
clc
mov
enter
fcom
adc
inc
sbb
lahf
lea
sbb
inc
test
pop
stc
jge
cmp
dec
lret
adc
fdivl
xor
sbb
out
cltd
jecxz,pn
fistpl
je
sub
mov
movsl
imul
add
xchg
dec
fsubl
pop
lret
lret
pop
jmp
loopne
and
cmp
jns
cmp
call
sub
ds
xchg
xor
or
pop
jb
xor
push
sbb
leave
push
sbb
jge
mov
mov
repnz
jnp
or
xchg
loop
data16
hlt
pop
jge
scas
xchg
ss
cwtl
pop
add
mov
cli
dec
pop
cmpsb
mov
daa
lock
cmovge
or
arpl
lods
pop
sub
je
dec
sti
nop
mov
cmpsl
xchg
push
adc
and
clc
pop
lods
lea
and
cmpsb
hlt
icebp
enter
add
outsb
mov
xor
pop
int3
mov
filds
stc
mov
xor
push
inc
ljmp
push
xlat
pop
inc
inc
jp
in
in
fnstenv
sbb
sbb
gs
mov
popa
cmp
pop
ss
sti
ja
inc
cmpl
or
pop
mulb
add
std
pop
rorl
pop
ret
dec
lcall
insl
dec
inc
outsl
mov
imul
mov
pop
adc
push
add
arpl
scas
mov
pop
fisttps
jge
sub
xor
addl
lcall
mov
mov
fiadds
jnp
push
xchg
sahf
lock
enter
imull
push
mov
push
lcall
shll
push
mov
pop
xchg
pop
sbb
jp
mov
pop
ljmp
push
js
scas
cld
and
cmp
jmp
pop
cmp
pop
movsl
xchg
outsl
push
or
sub
imul
sub
shll
out
mov
in
call
jno
bound
sarb
into
jmp
xor
rcrb
dec
fidivs
dec
add
sub
cmp
mov
mov
push
adc
aas
cmc
pop
adc
pusha
repz
push
les
mov
lcall
out
clc
sbb
hlt
pop
insb
jo
sub
pop
xchg
les
mov
or
adc
cwtl
fldt
sub
xor
dec
push
popa
or
int3
xchg
rorb
mov
divl
add
in
out
divb
pop
daa
addr16
jecxz
or
popf
jnp
shll
dec
or
jnp
jne
or
popf
idivb
jo
dec
out
jg
pop
scas
mov
pusha
pop
jecxz
sbb
out
or
mov
inc
xchg
xor
enter
dec
jbe
and
push
les
pop
test
xchg
pop
imul
mov
call
lret
or
or
push
add
gs
xchg
sub
add
js
pop
std
inc
arpl
or
test
rcrb
hlt
scas
ss
inc
cmp
aas
pop
mov
or
mov
test
xchg
pop
or
add
pop
xlat
ficompl
fstps
aad
mov
pop
arpl
push
testl
adc
add
shlb
test
mov
xor
test
jge
pop
movsl
xchg
test
and
xorl
dec
mov
fidivl
sbb
xchg
xor
cmpsl
push
mov
sahf
int3
test
ss
jecxz
std
test
fsubs
pushf
or
jg
xchg
and
fisttpll
pop
xchg
mov
mov
iret
pop
mov
movsl
add
pop
mov
cmp
mov
repz
ficompl
inc
pop
enter
pusha
insl
adc
push
cmpsb
mov
pop
cwtl
jo
lock
pop
push
lcall
or
insl
dec
pop
or
cltd
les
sbb
popa
jnp
add
das
pop
cli
or
dec
lahf
jecxz
or
fildl
and
jo
pop
test
ja
testl
cltd
cli
scas
adc
pop
inc
dec
cmp
pop
inc
fldcw
sub
jb
pop
pop
jmp
cmp
cmp
mov
out
xor
fisubrs
bound
push
pop
shlb
push
sti
pop
nop
in
pop
add
inc
pop
mov
leave
std
fidivl
mov
jae
push
fildl
adc
sub
dec
pop
xorl
loop
out
xchg
fwait
cmp
fwait
mov
mov
pop
outsl
test
jo
ljmp
ss
aam
add
mull
pop
adc
or
rorb
jb
fs
bound
shlb
adc
and
out
fcompl
sub
pop
test
jbe
add
je
xchg
out
fsubs
loopne
dec
mov
add
jge
fstpt
scas
insl
pop
push
shrb
imul
adc
out
test
cli
scas
sarl
test
mov
inc
loope
inc
xchg
call
sarl
inc
outsb
lea
jae
add
je
and
mov
sub
call
cmp
mov
fistpl
and
adc
pushf
pop
mov
jl
add
xor
dec
fcoms
pop
test
xchg
testb
add
cmp
mov
mov
aas
xor
mov
outsb
pop
popf
push
fnstenv
pop
and
xor
mov
pop
mov
js
fcoms
pop
rcll
rclb
fsts
jb
push
pop
and
movsl
mov
flds
aad
imul
push
pop
jae
jmp
sbb
sub
mov
xchg
in
xchg
addr16
xor
xchg
fstpl
inc
ret
movb
mov
cmpsl
mov
pop
push
pop
cmp
into
popf
iret
loopne
loop
dec
hlt
jno
cmpsb
roll
pop
jp
sahf
das
pop
lods
lret
xor
sbb
pop
loope
shll
xor
mov
pusha
xor
jp
pop
pop
rorl
xchg
jae
repnz
inc
nop
imul
mov
clc
lods
aas
inc
outsb
pop
mov
dec
jne
pop
and
pop
pop
pushf
push
shlb
jg
mov
sbb
nop
cmp
in
dec
push
push
jbe
or
outsb
pop
test
or
mul
pop
call
add
adc
pop
lock
pop
sbb
mov
jge
repnz
jae
xchg
sahf
sub
pop
pop
dec
rcl
dec
inc
je
pop
push
sti
lahf
rolb
sbb
popf
dec
test
pop
adc
xchg
pop
dec
inc
sbb
pop
mov
pop
mov
clc
mov
mov
add
mov
mov
jno
aam
push
dec
dec
cmp
pop
ljmp
xchg
mov
testl
wbinvd
pop
roll
insb
pop
and
mov
jb
or
mov
icebp
mov
pop
test
aas
lods
aad
lods
adc
xchg
sbb
stos
or
into
dec
pop
mov
inc
push
push
test
lret
fisttps
test
fnstsw
and
adc
pop
adc
jg
sbb
jecxz
sbb
mov
inc
pop
fwait
arpl
cmp
pop
mov
daa
iret
pop
dec
nop
sahf
xor
pop
mov
lret
push
sub
shlb
aad
bound
int
lret
mov
ds
cltd
mov
pop
jne
mov
xorb
clc
icebp
scas
in
outsl
int3
push
mov
sqrtps
pop
sub
mov
lret
fisttpl
mov
pop
pop
adc
inc
mov
push
xor
xor
mov
ds
data16
inc
mov
pop
push
mov
shll
jne
dec
shl
or
sub
shlb
xchg
ret
in
mov
cmp
push
fadds
fldcw
jns
cltd
and
and
mov
rcr
fisttpll
mov
lret
jecxz
scas
jbe
and
and
pop
std
or
adc
adc
push
repnz
sti
push
neg
add
mov
and
enter
cmpsb
mov
repnz
mov
dec
push
jns
repz
push
ljmp
scas
std
outsl
xchg
icebp
cwtl
mulb
push
aas
push
pop
call
js
pop
pop
jb
test
push
out
mov
jno
sbb
adc
pop
jnp
push
fildll
push
mov
jbe
fnsave
pop
aaa
cld
add
mov
in
push
sbb
pop
roll
push
pop
std
testl
add
imul
lods
cmp
adc
shlb
js
pop
into
mov
out
dec
sub
aam
loopne
roll
sub
jge
lods
cmpsl
sbb
push
adc
dec
sbb
in
mov
sub
sub
popf
int3
dec
rcll
mov
pop
inc
mov
aad
xlat
mov
pop
mov
in
sub
jbe
sbb
movsb
rclb
mov
cli
jge
incb
push
dec
jne
sub
inc
sub
imul
lea
mov
sbb
gs
pcmpgtw
pop
mov
jp
cs
imul
movsl
fldl
sbb
ss
cmpsb
or
fiaddl
test
dec
mov
insl
push
daa
ja
sub
add
icebp
pop
ja
mov
mov
lahf
dec
aas
arpl
fimull
jmp
aad
pop
mov
in
add
shrb
jecxz
imul
sarb
dec
cmp
int
test
test
adc
pop
mov
adc
mov
mov
cmpsl
notl
cmp
pop
lock
jmp
fcmovnbe
insl
lret
fidivrs
adc
stos
divb
mov
sbb
popf
out
jbe
xchg
loopne
stc
pop
sbb
add
outsb
jecxz
or
mov
pop
hlt
scas
out
lret
addb
mov
adc
cltd
je
xchg
pop
xchg
mov
sub
add
or
jbe
add
jns
inc
push
sbb
decb
jb
cli
sub
je
xor
dec
sbb
mov
icebp
push
idivb
and
test
pop
jmp
mov
sbb
cld
aad
jns
or
xor
cld
sbbb
mov
repnz
cmp
leave
sahf
mov
pop
xchg
mov
add
adc
fildl
ja
lods
ljmp
inc
jp
in
inc
orl
mov
mov
pop
out
xlat
xchg
iret
sub
insl
sub
push
stc
dec
aaa
lcall
les
pop
das
or
lret
fs
jnp
pop
pop
and
or
or
jns
test
sarl
lods
pop
lock
cltd
cmpsl
fisttpll
in
adc
stc
fnstsw
arpl
sbb
int
xchg
sbb
out
cmc
inc
dec
movsb
fnstenv
rcrb
scas
mov
jecxz
push
and
xchg
call
jge
push
inc
call
sub
and
pop
ret
adc
fcom
out
mov
pop
imul
sahf
mov
mov
pop
jo
es
mov
mov
mov
addr16
mov
loopne
gs
and
xchg
adc
mov
loop
cmp
mov
enter
in
jns
jb
pop
xchg
mov
out
jmp
es
fdivrs
cmp
push
stos
mov
mov
fistps
fstps
jno
testl
cld
scas
aam
ja
jecxz
lock
mov
mov
or
mov
lds
ror
and
pop
dec
fs
xlat
test
sub
jmp
dec
dec
jns
pushf
pop
xor
int
push
dec
jl
fstpl
push
sbb
pop
adc
leave
push
scas
addl
pop
pushl
inc
cmc
jo
pop
xor
notb
xchg
or
test
pop
inc
inc
adc
push
pop
pop
or
xor
mov
leave
sbb
xchg
pop
pushf
dec
and
push
jl
ss
pop
fcmovbe
xchg
add
pop
repz
out
dec
push
pop
pop
sub
push
stos
jbe
mov
jne
fistl
loop
pop
xchg
out
inc
push
pop
xchg
lods
jp
popf
lcall
dec
sub
xor
sahf
xlat
pop
pusha
push
add
enter
dec
xchg
xor
and
pop
sub
or
xchg
outsb
ja
fdivl
inc
scas
mov
pop
pop
mov
arpl
pop
in
pop
mov
lahf
mov
cltd
fisttps
sub
pop
scas
cmovge
adc
movsl
fmull
ret
pop
cmp
dec
pop
xchg
arpl
mov
sbb
stos
adc
pop
ret
loop
in
addr16
out
pop
sbb
mov
arpl
add
jle
cmp
into
movsb
mov
lds
pop
clc
dec
cmp
push
scas
les
pop
jno
aam
fistpll
cmpsb
int
je
mov
in
imul
push
test
inc
xor
outsb
data16
mov
pop
adc
adc
pop
out
pop
movsl
pusha
inc
arpl
xor
pop
push
dec
mov
out
in
jo
ret
lahf
and
iret
jp
pop
addr16
mov
out
add
jb
movsl
pop
pop
xor
aas
pop
mov
push
loop
add
pop
enter
xchg
jg
jl
stos
or
popa
mov
jno
pop
pushf
push
jle
es
sarb
scas
xchg
ret
push
repnz
push
fisubrs
fucom
adc
jo
xchg
mov
shll
popf
cmpsb
mov
pop
jg
es
lahf
shll
dec
ss
fisubrl
push
pop
mov
dec
xor
or
pop
cltd
jno
jp
mov
pop
or
pop
pop
inc
push
outsb
add
xrelease
mov
and
fists
push
lahf
xchg
add
mov
nop
mov
fnstenv
xor
mov
lods
test
fistpl
fs
lahf
inc
jmp
xor
cwtl
xchg
mov
lea
inc
pop
les
enter
fstpt
pop
aas
mov
scas
inc
mov
cmp
mov
adc
out
cmc
dec
add
mov
dec
jge
pop
push
fistpll
mov
daa
jo
orl
divb
mov
jne
stc
push
inc
xor
sub
inc
or
fisttpl
inc
pop
iret
mov
clc
xchg
mov
sub
leave
ficompl
ljmp
addl
pop
out
mov
cmp
jecxz
jp
stos
mov
adc
pop
lcall
add
sti
fldl
out
cmc
pop
mul
insb
scas
pushf
sub
ret
imul
or
out
pop
imul
mov
sbb
stos
int3
pop
and
pop
imul
imul
fisubs
mov
fistpll
xor
mov
and
inc
mov
pop
cmpsb
sub
add
push
mov
test
and
sahf
pop
je
and
stos
ret
outsl
fwait
add
and
jl
mov
push
icebp
outsl
lcall
pop
inc
shrl
mov
sbb
adc
cmpsb
jg
xor
fwait
notrack
pop
mov
fxch
bound
mov
repnz
sbb
mov
fmul
das
pop
add
loope
aas
test
icebp
mov
arpl
mov
mov
popa
cltd
cmp
gs
jnp
mov
enter
mov
icebp
or
push
mov
pop
mov
mov
cmpsl
inc
sub
dec
pop
cld
pop
rcrb
adcb
jl
sub
call
sbb
enter
addr16
ss
mov
imul
inc
sub
scas
mov
xchg
mov
stc
dec
sbb
sbb
lret
scas
cmpsb
mov
pop
mov
rclb
cmc
pop
scas
aas
aaa
decl
pop
jg
lret
popf
dec
cmpsb
pop
data16
inc
aaa
mov
sub
mov
int3
adc
stc
sub
pop
mov
int
mov
clc
fwait
scas
dec
push
fwait
add
pop
inc
sub
cmpsl
mov
fdivl
iret
aaa
in
mov
imul
xchg
sbb
jne
mov
cld
lcall
pop
sbb
fmull
in
mov
pop
inc
mov
mov
call
lret
movl
pushf
fstps
jne
jecxz
scas
mov
lret
xchg
ret
cltd
inc
inc
sbb
lahf
movsl
mov
jae
fnstenv
mov
imul
xor
xchg
out
fidivl
test
jl
or
enter
jbe
sti
idivb
sub
out
fstpt
aaa
add
jnp
inc
mov
add
mov
and
scas
mov
fistl
pop
and
inc
ja
mov
push
mov
scas
sti
lds
icebp
es
mov
xor
push
bound
popf
popw
ss
mov
pop
jge
mov
mov
sbb
enter
fwait
cwtl
sub
fwait
test
sub
fildl
leave
ret
stc
inc
mov
jbe
loop
scas
mov
or
fcmovnb
and
xchg
daa
dec
shll
xor
cltd
pop
lret
idiv
ret
shlb
hlt
add
sub
xchg
pop
jb
test
imul
pop
pusha
insb
sub
in
push
lahf
pop
xor
pop
negl
push
jb
cmpsl
mov
sbb
out
push
out
pop
mov
in
or
das
mov
sub
loopne
sub
stos
cmp
mov
cmpsl
stos
jp
sub
push
lods
pop
adc
xlat
dec
out
mov
pop
out
pop
dec
insl
mov
pop
dec
mov
repnz
jb
xchg
inc
lret
adc
mov
outsb
test
pop
cwtl
push
cmpsl
dec
loopne
pop
negb
push
push
and
cli
cmp
pop
xor
fisubrl
pop
pop
push
lret
enter
mov
mov
push
inc
adc
jle
jns
lret
push
popw
pop
mov
or
fbld
pop
fcompl
in
mulb
sbb
dec
loope
sub
dec
and
xchg
lcall
lea
pop
dec
add
repz
adc
sub
mov
movsb
loopne
dec
sti
sbb
repz
inc
movb
push
jp
add
mov
clc
cmpb
bound
lods
adc
pop
lahf
jb
icebp
mov
xor
out
adc
int3
jecxz
add
mov
jmp
cli
mov
icebp
pop
fmull
fmuls
out
movsl
mov
pop
jmp
inc
in
cmc
pop
cmp
int3
sub
mov
mov
ds
add
lahf
addb
push
sbb
pop
jmp
add
fdivs
test
loopne
mov
push
cmp
adc
leave
sub
stos
insb
adc
jl
add
fcmovnu
aad
pmaxsw
mov
stos
cs
jg
fstpl
js
mov
pop
loop
lods
ss
mov
fbstp
jo
out
mov
xchg
xchg
repz
out
push
popa
loope
stos
jl
movsb
mov
sarb
int
imul
mov
lret
mov
jge
aaa
and
cmp
adc
or
out
xchg
pop
jle
push
and
and
jl
mov
cltd
push
xlat
lahf
lret
and
add
lcall
rcrl
mov
inc
je
sbb
push
mov
mov
cmp
stos
add
je
jecxz
stos
inc
pop
inc
adc
das
shlb
nop
out
std
pop
aad
addr16
aas
cwtl
jmp
sarl
add
pop
dec
push
mov
fsub
pop
or
pop
mov
inc
push
mov
outsl
dec
sbb
test
adc
dec
pop
jne
lret
leave
repnz
in
cmp
cmc
fcmovne
pop
pop
lods
pop
xor
lahf
shlb
mov
ss
add
xchg
in
mov
pop
rorb
inc
sbb
sbb
xor
loope
test
pop
mul
pop
cmp
lods
dec
pop
std
test
mov
pop
das
mov
leave
and
xchg
mov
sub
pop
pop
repz
aad
pop
pop
stc
mov
pop
fcmovb
fidivs
arpl
push
lods
pop
jp
xchg
jnp
xor
pop
xor
sarl
pop
cmc
sub
xlat
sbbb
pop
xchg
mov
loopne
lods
pop
data16
in
idivb
or
xchg
sbb
sub
cli
pop
subl
cmp
adc
fxch
in
sub
push
pop
sbbl
push
cmp
push
sbb
int
fsubs
add
adc
pop
cmpl
inc
sub
cli
mov
pop
jnp
or
xchg
imul
push
repz
pop
repnz
push
mov
pop
push
int
mov
out
xchg
sub
bound
jp
lds
jle
js
roll
and
pop
fisubrl
scas
sub
dec
pop
and
stos
mov
in
pop
mov
rcll
out
xchg
out
pop
cs
mov
test
test
cmp
fwait
fs
pop
sbb
bound
inc
xor
pop
cmpl
pop
cmc
cmp
mov
mov
xlat
jb
mov
xor
repz
addr16
out
pop
jecxz
push
lods
fisttpl
mov
jmp
inc
pop
stc
sub
ljmp
sub
repz
std
int
mov
int3
inc
fadd
jne
adc
fstpt
sbb
pop
jnp
stc
shlb
cltd
repz
fldz
add
loopne
mov
pop
or
cmp
cli
jns
pop
add
mov
imul
sbb
cmp
pop
repz
inc
adc
mov
inc
sbb
jg
repnz
cmpsb
mov
mov
and
cmp
jnp
mov
pop
jno
sub
lods
ds
repz
ljmp
dec
mov
fxam
lret
out
jns
mov
xchg
aaa
xor
and
push
stos
movb
loop
rcll
pop
xor
cmpb
popa
sub
cltd
pop
daa
icebp
push
lahf
fcomps
push
mov
ret
mov
mov
sub
movsb
or
jns
call
dec
pop
lahf
adc
mov
pop
pushf
pop
divl
cwtl
xor
outsb
jne
push
out
icebp
cltd
xchg
mov
sbb
pop
scas
imul
xchg
std
pop
push
push
stos
cmp
pop
sbb
nop
repz
ds
push
pop
popa
cmp
pop
lods
xor
adc
jo
cltd
jmp
sub
add
mov
lock
daa
out
int3
repz
cmp
in
repz
sub
adc
out
mov
xor
push
repnz
mov
mov
stos
pop
std
mov
sbb
push
loope
mov
fisubl
cmp
fstpt
loope
and
or
popl
xchg
mov
add
cmp
xchg
dec
insl
adc
stos
imul
daa
mov
mov
icebp
aad
aaa
cmpsl
ret
fwait
repz
pop
or
andl
xor
jl
pop
xchg
push
mov
sub
ljmp
dec
xor
mov
adc
xchg
pop
lcall
in
lahf
int3
aaa
loopne
cmp
mov
fmulp
jl
sub
pop
push
pusha
xchg
and
orl
movsb
scas
lahf
mov
repnz
jno
repz
out
cltd
loopne
mov
and
stc
pop
mov
lods
sbb
cmp
pop
insl
jle
sbb
and
hlt
pop
andl
andb
pop
mov
cmc
lcall
flds
iret
icebp
dec
insl
stos
mov
cltd
repz
clc
pop
in
cmp
out
pop
jge
lret
mov
call
push
xchg
xor
sub
cltd
jns
das
fstl
sbbb
adc
mov
mov
dec
jne
pusha
and
rcrb
fsubrs
mov
mov
call
push
lahf
fldt
xor
out
adc
push
data16
mov
bound
sbb
mov
sub
jge
cltd
out
push
divb
nop
stos
inc
or
pushf
mov
push
xor
lea
pop
repz
out
pop
jae
mov
int
dec
pop
jle
stos
sub
xchg
dec
xor
fidivs
pop
popf
mov
jne
fiaddl
xchg
mov
cmpsb
xchg
sub
pop
xchg
mov
mov
cmp
pop
inc
mov
pusha
xor
jns
jmp
imul
fisubs
xor
stc
loopne
jo
repz
mov
sbb
movsl
or
pop
test
in
cmp
bound
pop
xchg
dec
mov
int3
mov
cltd
stc
sti
pop
and
jge
adc
pop
sbb
adc
fstpt
xor
mov
add
ret
fwait
lahf
mov
adc
mov
lret
lods
aaa
jmp
sub
dec
in
test
mov
mov
lods
jmp
push
out
sbb
cltd
daa
push
fadds
lret
mov
jae
fisttpl
lahf
xorl
ss
xchg
jg
mov
jnp
arpl
fwait
push
fwait
mov
cltd
pop
jnp
push
push
cli
sbb
mov
jmp
xchg
xor
ja
jno
xchg
mov
or
pop
jns
pop
fisttpl
jnp
lcall
sub
cmp
repz
mov
arpl
fstpt
jae
xlat
outsl
call
sbb
cmp
xchg
lret
xchg
addl
and
dec
mov
jg
jnp
mov
sub
lret
ja
test
scas
outsl
out
imul
and
adc
scas
mov
cmc
sub
fcomps
sub
fcomps
sbb
repz
cltd
das
inc
mov
aas
lret
test
clc
fmuls
jmp
lods
xchg
orl
jmp
inc
stc
jmp
sbb
mov
sub
outsl
xchg
cmp
cld
lret
ja
cmp
push
mov
jg
mov
xor
jo
jle
mov
xchg
scas
jecxz
inc
jnp
in
adc
out
cmpl
or
out
push
xchg
mov
lret
push
jae
xchg
test
xchg
pop
lahf
sti
cmp
xchg
repnz
xor
roll
clc
xchg
dec
arpl
fidivrl
mov
cmp
stos
lahf
ja
ja
sub
dec
pop
mov
cltd
mov
push
loope
mov
mov
inc
imul
jnp
mov
orb
das
addr16
jbe
lods
sub
mov
in
nop
mov
cmc
sbb
sbb
ja
imul
negl
jae
pop
test
fcomps
sbb
mov
rcll
add
nop
dec
sbb
sbb
push
xor
fwait
mov
test
sbb
push
sahf
push
dec
inc
inc
push
jns
xchg
and
andl
fcomps
jg
icebp
outsb
stos
jmp
fwait
sbb
mov
dec
sti
addr16
fcomps
cwtl
lods
popl
hlt
in
push
mov
stos
rcrl
cwtl
adc
sbb
mov
push
inc
mov
lret
lods
dec
nop
or
mov
std
jnp
push
mov
fidivs
lods
mov
out
arpl
mov
xor
cmp
push
jg
push
mov
pop
inc
das
pop
fisttpl
ja
inc
fcmovbe
pop
nop
jp
mov
jnp
or
push
shl
popa
repz
stos
rcrl
jb
lret
aaa
ja
mov
xchg
arpl
lock
mov
outsl
jne
inc
xchg
push
jae
sets
lods
jg
xor
jnp
xor
fwait
das
or
inc
xchg
ret
or
adc
pop
dec
mov
lret
dec
sbb
fstpt
in
mov
ljmp
push
test
adc
add
imul
jae
stos
lds
out
ljmp
mov
fistl
dec
dec
mov
lcall
jo
push
addr16
lcall
sub
sub
xor
jo
stc
and
hlt
cmp
pop
sbb
rcl
push
jmp
lods
or
rcl
cmpsl
addr16
insb
sbb
cltd
clc
dec
call
int
dec
or
mov
loop
xchg
sbb
mov
hlt
adc
and
or
jmp
in
or
adc
std
in
inc
jno
push
out
stc
insb
cwtl
add
out
push
dec
pop
inc
and
lods
sub
jne
in
jg
testb
mov
xchg
test
rcl
lea
and
mov
jmp
gs
clc
sbb
fistl
jmp
mov
push
or
sbb
jns
or
push
push
jmp
cmp
or
movsb
ja
or
xor
mov
xor
andb
or
cmpsb
outsb
mov
out
lahf
data16
repnz
testb
movl
push
pushf
pushl
lea
jmp
push
inc
xchg
test
loop
imul
out
divl
imul
jmp
fcmovnb
jmp
mov
or
xor
into
pop
outsb
and
testb
add
ret
inc
rcr
arpl
aad
in
add
adc
xor
xchg
dec
and
cmp
xchg
test
cmp
mov
jp
pop
jg
push
mov
test
adc
and
xlat
jno
enter
push
push
aad
aad
imul
mov
lahf
mov
mov
outsb
mov
mov
int3
cltd
mov
xor
stos
inc
mov
sti
xchg
mov
dec
pushf
push
add
lret
mov
jg
push
pop
out
test
out
mov
imull
arpl
cli
mov
push
fldl2t
push
nop
cmp
adc
xchg
jb
test
lods
mov
adc
mov
sbbl
std
or
sub
arpl
mov
hlt
jp
add
pop
sub
fldenv
cmp
outsb
push
sti
test
inc
test
pushf
int
inc
xor
int
adc
testb
clc
test
stos
test
push
xlat
add
and
jl
mov
lret
outsb
push
subb
rcrl
push
out
inc
push
hlt
mov
sub
sub
dec
test
test
mov
and
test
gs
add
test
jl
frstor
mov
pop
and
clc
lcall
mov
push
jmp
call
pushf
call
pushf
mov
stc
jmp
pusha
mov
jmp
inc
pushl
movb
lea
call
pushf
lea
jns
stc
cmp
push
jmp
std
in
in
inc
out
adc
adc
pop
mov
loope
push
mov
mov
push
inc
cli
addr16
fidivs
xchg
jnp
test
jo
xchg
aaa
or
cmp
xchg
fwait
lcall
mov
cmc
icebp
int3
imul
inc
or
sub
push
and
inc
inc
subl
lret
cs
jge
cmpsl
outsl
inc
mov
lods
gs
popa
sbb
mov
pop
leave
out
push
pop
scas
addr16
es
cmpsb
push
into
xchg
push
ja
xchg
notb
push
test
push
xchg
mov
push
dec
push
pop
adc
lds
js
test
jle
lea
dec
dec
pushf
clc
stos
int3
mov
push
jae,pt
adc
sub
lahf
pop
jbe
sub
sub
mov
notb
clc
imul
pushf
xor
clc
pusha
mov
jl
xor
outsl
cmp
or
lea
push
xor
jns
movsb
inc
adc
xor
shrb
inc
jb
mov
stos
jle
aas
xor
outsl
or
mov
dec
fbstp
ret
lock
ds
xchg
insb
mov
dec
add
or
pop
outsl
mov
enter
int
test
fwait
adcl
int
fisttpl
jge
fcmovb
dec
in
xchg
out
test
dec
ret
movsl
jno
fs
push
repz
mulb
and
or
mov
fstl
arpl
orb
mov
pop
jb
ret
lcall
mov
cmpsb
mov
xchg
notb
jmp
repnz
cmc
cmp
pusha
call
mov
jb
push
incb
push
scas
out
adc
pushf
popf
xchg
adc
das
mov
stos
push
mov
mov
push
and
mov
adc
mov
dec
sub
or
jnp
or
mov
fsubl
pop
enter
sub
xchg
jne
test
mov
or
jnp
adc
std
inc
mov
hlt
and
popa
cmc
and
or
push
loopne
and
add
add
cmp
sti
call
xor
xor
fs
insb
add
and
pop
and
pusha
lea
call
pushf
mov
mov
pusha
pushf
movb
pushl
lea
jmp
inc
movb
shrb
icebp
icebp
stc
adc
and
pop
sub
inc
push
add
add
push
add
push
mov
daa
mov
insb
test
push
out
dec
addr16
mov
jnp
lock
inc
xor
xchg
adc
bound
lods
stc
mov
dec
mov
addr16
lods
insb
mov
insb
xchg
notb
ret
pop
test
fwait
insb
adc
scas
jecxz
ret
ja
pop
aas
scas
ljmp
or
or
in
fdivrs
dec
sub
subb
mov
fcomp
imull
add
test
popl
lock
mov
cld
cmp
jp
notb
sub
mov
push
pushf
push
pushl
ret
pushf
pusha
pushf
movl
call
shl
pop
mov
jnp
dec
push
lret
mov
outsl
and
bound
pusha
xchg
inc
into
or
jo
aas
xor
cmpl
leave
test
push
cmp
divl
lret
arpl
add
adc
shl
int
dec
sub
sub
xchg
notb
dec
sub
jmp
adc
lods
adc
enter
insb
dec
popa
cmp
adc
and
jle
or
push
xchg
mov
sbb
and
cmpsl
out
mov
xor
stc
leave
jae
jmp
and
or
out
cli
sbb
push
pop
mov
xchg
notb
mov
pushf
inc
rorl
xchg
adc
xor
lret
fwait
cld
jae
in
push
jbe
and
inc
in
out
inc
sti
lock
mov
mov
loope
dec
bound
jl
xchg
pop
in
dec
pop
in
les
adc
mov
out
scas
mov
into
fstl
xor
arpl
roll
cmp
outsl
mov
lods
lahf
mov
sub
inc
cmp
movsl
movsb
jmp
pop
xchg
notb
xor
je
xchg
scas
adc
or
jl
pop
push
ss
pusha
pop
inc
test
push
std
adc
outsl
dec
add
sbb
negb
xor
fsubl
movsb
popf
cld
mov
mov
xor
movsb
dec
mov
jl
jmp
ja
stc
pusha
pop
inc
lret
or
mov
cmc
xchg
notb
sahf
jecxz
lock
std
std
test
xchg
insl
in
mov
ret
ja
js
enter
sub
rcrl
ret
ss
xchg
lahf
pop
in
jge
fxam
rcr
dec
je
dec
aam
push
rolb
fldcw
adc
test
sbb
ds
frstor
inc
xchg
arpl
xchg
push
xchg
mov
or
xchg
or
mov
pushf
pop
fmull
pushf
lea
jae
test
jmp
std
jge
add
popa
xchg
push
jbe
out
out
bound
daa
inc
push
shrb
fisttpll
dec
sbb
xchg
aaa
outsb
daa
jb
jb
xchg
lretw
div
test
xlat
push
cmp
mov
sahf
shl
jbe
sbb
outsb
shll
and
push
cmp
scas
in
scas
cmove
or
test
in
mov
in
adc
test
and
aad
shll
gs
stos
push
add
pushf
jge
divb
adc
xchg
loop
dec
outsb
inc
jb
xchg
notb
xorl
push
lcall
dec
mov
aam
jge
or
fcom
xchg
fisubl
mov
bnd
sub
dec
add
nop
sbb
test
xor
add
ljmp
xor
pop
mov
sbb
mov
fiadds
bound
int
mov
mov
movsl
or
jno
in
les
jg
int3
inc
loope
sub
push
leave
mov
pop
popf
fdiv
xchg
lds
xchg
loop
lahf
cmpb
jecxz
lcall
mov
add
jnp
add
jecxz
andb
push
xchg
and
cmove
ds
out
jp
push
arpl
push
cmpl
int3
sbb
xchg
jne,pn
dec
fs
fistpl
xchg
fbld
jnp
inc
mov
ror
sub
lahf
sub
sub
and
push
outsl
aam
jb
dec
idivb
scas
loope
pop
mov
xor
sti
jmp
push
icebp
mov
xor
nop
rcrb
push
ret
push
xchg
notb
xor
adcb
push
mov
loope
sub
xchg
xchg
aad
cmp
xchg
dec
lret
or
jecxz
mov
lcall
shll
pop
iret
cmpb
xor
xor
inc
jo
dec
jae
sti
sbb
jb
jb
out
arpl
fwait
xchg
aas
xor
sbb
push
add
fldenv
add
add
add
add
add
add
pushf
int
add
int
add
add
add
add
insl
jl
dec
sar
lret
jne
mov
mov
inc
scas
jae
xchg
sbb
mov
dec
lea
add
jle
loop
pop
data16
push
sti
sbb
pop
test
out
movsl
mov
cmp
rol
lret
std
lods
jns
pop
xor
push
lcall
cmp
push
out
dec
mov
xor
push
add
push
testb
shrl
sarb
xor
jge
pop
out
jb
js
popf
dec
lea
sbb
outsb
mulb
and
faddl
fbstp
or
sti
mov
xor
dec
dec
rcll
jg
mov
xlat
dec
ds
mov
call
push
push
sbb
addl
addr16
and
test
xchg
jae
mov
mov
fldcw
adc
pop
push
outsl
fldl
pop
out
les
adc
mov
lret
inc
cli
xchg
lahf
pop
mov
jmp
hlt
adc
push
jg
dec
pop
lock
mov
adc
pop
repz
adc
or
lret
mov
test
scas
xchg
js
mov
insb
cli
arpl
push
dec
dec
or
in
repz
dec
cli
inc
mov
arpl
ss
pushf
ljmp
aas
movsl
aas
repz
xchg
mov
sub
fimull
mull
loopne
mov
fs
addl
and
lcall
inc
das
sbb
fs
jne
out
ss
push
lcall
lcall
popa
pusha
out
icebp
aad
cmp
cmp
adc
sub
dec
or
pop
mov
ret
mov
inc
iret
stos
ljmp
in
adc
aaa
sub
sub
push
mov
adc
or
dec
stos
repnz
jmp
mov
lods
pop
or
add
inc
loope
mov
xchg
mov
sti
test
cmp
xlat
sbb
xchg
xlat
cmp
and
pop
dec
or
test
arpl
push
outsb
jns
int
pop
hlt
lods
mov
js
xchg
adcb
ret
psubq
inc
xor
push
pop
xchg
push
adc
out
add
addr16
cmp
mov
sub
push
fcompl
sbb
stc
andb
das
add
mov
xchg
sbb
hlt
out
xchg
jne
cli
jbe
fsubrs
in
maskmovq
testl
or
stos
xor
data16
inc
push
ja
sub
xor
inc
jl
jae
push
ror
xchg
xor
ja
inc
clc
inc
sub
cld
addb
push
shrl
sub
jbe
stos
sub
or
pop
and
cmp
pop
sbb
dec
aaa
aad
push
mov
mov
dec
xchg
xchg
and
jnp
sbb
mov
sub
jbe
dec
clc
fwait
cmpsb
sbb
lcall
pop
and
lcall
daa
xchg
shlb
push
std
xchg
jecxz
mov
pop
movsl
gs
in
cmp
sub
add
dec
xchg
ret
xor
or
imul
pop
xor
cmp
xor
dec
pop
add
mov
mov
ds
test
scas
pop
xor
lcall
gs
push
pop
pop
push
divl
cs
aad
mov
and
test
lret
mov
inc
mov
jae
outsb
cli
clc
inc
push
dec
pop
cmc
sahf
push
pop
fs
sub
js
ljmp
jbe
mov
subl
daa
incl
jp
gs
imul
add
repz
add
xor
fldl
pop
xor
loope
sub
and
inc
imul
jns
jno
stos
out
mov
mov
xchg
pop
in
mov
jne
sarb
test
loope
xor
stos
sarl
and
sbb
and
xchg
jmp
sbb
mov
add
aaa
aaa
aaa
sbb
push
mov
dec
dec
int3
pop
imul
push
xchg
les
and
out
pop
sbb
lahf
jmp
sub
lea
movsb
bnd
cmp
notl
add
psrld
shlb
jecxz
sub
outsl
mov
sbbl
out
std
mov
xchg
and
sahf
out
xchg
dec
ja
pop
lea
pop
nop
out
mov
xchg
addr16
test
repz
in
hlt
sbb
insb
imul
jge
das
sub
inc
cmp
sbb
shlb
jl
cmp
jnp
mov
dec
clc
mov
jge
jecxz
jmp
xor
cli
outsb
test
popf
loope
sub
jp
icebp
adc
movsb
adc
int3
lock
andl
scas
test
mov
lcall
lret
push
push
andb
pop
test
mov
fisubs
mov
inc
in
jmp
adc
lcall
cwtl
inc
jecxz
lock
sub
jp
jb
lcall
inc
test
aas
jbe
idivb
fwait
xchg
cmp
mov
push
mov
xlat
sbb
out
fdivl
out
lods
les
push
xchg
divb
push
lods
inc
mov
xor
out
cwtl
pop
jl
fmull
jo
nop
lods
inc
pop
aas
mov
popa
cltd
iret
outsb
inc
cltd
icebp
dec
std
cmp
adc
popf
sahf
test
mov
sub
dec
dec
fisubrl
push
inc
gs
and
cli
cmp
loop
adc
push
call
xchg
mov
sarl
adc
in
push
sbb
test
cmpsl
mov
sub
stos
scas
pop
aaa
repnz
jb
jmp
and
or
adc
pop
das
in
mov
xorl
xlat
mov
cmp
sti
jb
push
fwait
ret
lcall
outsb
mov
xchg
and
js
scas
arpl
push
ja
addr16
add
ljmp
jns
rcrl
pop
fimuls
push
dec
xor
and
sbb
push
dec
out
ds
out
inc
sub
das
lahf
add
mov
stc
enter
rcr
cwtl
into
push
cwtl
mull
mov
and
mov
outsb
cmpsb
jae
fsubrl
jnp
adc
scas
jns
push
adc
loopne
mov
pusha
fdivrl
cld
daa
dec
xor
mov
sbb
and
mov
insb
js
jo
sbb
and
mov
jbe
enterw
mov
popf
lock
xor
mov
xor
mov
or
loope
sbb
inc
mov
xchg
aaa
aam
mov
dec
cmc
push
cmpsb
inc
pop
and
outsb
and
loopne
xchg
rcll
xor
push
out
outsb
sbb
jo
cltd
xor
pusha
shlb
xor
imul
mov
push
cli
cmp
cmp
and
mov
cwtl
insl
imul
outsb
shl
cmp
push
cli
push
push
add
jge
push
xor
orl
aam
enter
adc
or
das
jg
cltd
fsubrs
jmp
or
pop
jmp
mov
arpl
movsb
rcrl
adcb
pop
sbb
or
add
mov
and
mov
pop
arpl
rolb
stc
cmp
cmp
fcomip
or
popa
or
jl
in
xchg
xchg
das
xor
sub
pop
xchg
lods
ljmp
xchg
inc
jne
aam
add
mov
sbb
xchg
es
adc
sbb
dec
xor
jb
mov
add
movsl
and
mov
inc
mov
mov
mov
ljmp
enter
pop
dec
in
dec
inc
or
pop
cmp
sbb
sub
clc
stc
xchg
pop
stc
lds
xchg
adc
xchg
jmp
dec
xchg
pop
xchg
xor
adc
adcl
int
ljmp
dec
aas
sbb
enter
int3
int
lret
add
or
popf
dec
add
ret
insb
hlt
mov
xchg
jb
inc
testb
scas
and
aaa
lret
fstl
les
sub
inc
sub
imul
sub
rclb
cmp
ret
loopne
sbb
inc
jbe
pop
push
jne
jns
daa
dec
in
add
ficoml
inc
jge
jne
sbb
jae
fidivrl
push
jl
adc
push
lret
sbb
scas
dec
and
xchg
push
push
mov
loop
jmp
call
mov
mov
in
cmp
aas
jns
jp
loopne
xor
mov
fnsave
and
xchg
adc
xor
add
jle
push
xchg
imul
daa
xor
stos
mov
out
punpcklwd
push
push
in
jbe
stc
and
jb
inc
push
stos
gs
int3
clc
push
mov
push
ss
push
sub
int3
dec
and
outsb
ror
notl
push
mov
jle
mov
xchg
sbb
shrl
sub
cli
xor
jns
add
pop
out
lret
fcompl
std
and
fs
clc
and
pusha
clc
xor
adc
inc
pop
sub
inc
sbb
stc
cltd
ret
mov
movsl
mov
jae
shr
xor
pop
popf
push
lret
xchg
and
adc
call
repz
cmp
xchg
pop
mov
mov
jecxz
xlat
js
clc
daa
adc
mov
stos
daa
iret
mov
xor
andl
pop
aas
or
sub
mov
iret
pop
sbb
fsubr
sbb
leave
hlt
mov
lcall
inc
stos
xlat
jb
fs
mov
fidivrs
inc
jecxz
aas
mov
push
lods
jo
in
fcompl
rcl
and
lock
into
sub
jnp
jbe
mov
mov
aas
mov
inc
fmuls
mov
inc
movsl
out
mov
cmp
mov
aad
xor
test
mov
sahf
ret
pop
mov
loope
xchg
inc
fcomp
je
arpl
sbb
popa
ret
shlb
xchg
pop
sub
ja
inc
jp
shl
add
inc
pop
scas
scas
ja
cmpsb
mov
xor
idiv
aam
cmp
sbb
mov
js
call
out
cltd
dec
pushf
add
int
ret
cld
push
pop
cmp
mov
subl
shl
adc
pop
sub
xchg
mov
sbb
jae
push
inc
xchg
iret
call
daa
sbb
sbb
pop
scas
lret
in
or
shl
jae
arpl
movb
aad
inc
ss
push
in
lret
push
push
mov
add
add
add
push
xor
add
imul
xor
movl
jmp
cmc
pushl
imul
mov
add
pushf
pushf
pushf
movw
lea
jmp
pusha
movl
lea
ja
push
cmc
call
sub
aaa
mov
adc
xchg
pop
sarb
stos
sub
mov
mov
mov
dec
leave
jnp
nopl
mov
jnp
icebp
fcompl
push
stos
adc
lea
addb
push
ficoms
sub
loopne
mov
add
rorl
xor
shll
adc
jp
push
push
sbb
cmpsl
test
ja
out
xlat
jecxz
push
add
lds
in
inc
inc
lock
addr16
dec
and
and
cwtl
cwtl
clc
shrb
in
lret
dec
sub
cmp
mov
jg
or
out
xchg
jnp
repnz
pop
sub
xor
ljmp
or
dec
xor
add
nop
scas
push
enter
shll
mov
daa
dec
jmp
dec
movswl
pop
xchg
mulb
xchg
pushf
movl
call
movb
push
lea
jne
not
movb
pusha
lea
setge
pop
mov
setno
cwtl
lea
jmp
lea
jne
pushf
mov
pusha
jmp
jmp
pushf
cmp
pushf
pushl
ret
mov
cmp
jmp
xchg
aas
aam
pop
lcall
add
rol
adc
sub
push
test
and
push
push
pop
dec
adc
int
pop
pushf
jno
mov
scas
add
push
xchg
xor
sub
nop
mov
xchg
rol
mov
loope
int
sub
pop
and
sbbb
aas
leave
inc
inc
insl
add
loop
packssdw
fsubs
into
push
xor
pop
shl
inc
mov
add
pop
xor
cmp
sbb
mulb
xchg
xlat
lea
jne
jmp
mov
cwtl
add
xor
mov
xchg
lret
shlb
fldl
int
mov
int
out
pop
xor
dec
lahf
fadds
dec
xor
xchg
gs
out
pushw
cmp
addl
pop
xlat
les
push
dec
sub
fs
jns
inc
xchg
jp
pop
loopne
popa
shl
fistl
movsb
push
mulb
jmp
mov
mov
bound
sbb
test
imul
es
pop
pop
loop
sbb
clc
shll
sbb
sbb
mulb
mov
popl
pushf
lahf
mov
jmp
pushl
lea
jge
pusha
mov
cwtl
pushl
popl
lea
movzbw
call
aam
cmp
fwait
adc
out
and
inc
sahf
push
push
arpl
jb
or
test
adc
jmp
repz
movsl
push
mov
mov
and
push
insl
andl
xorl
pop
cmpl
fs
jae
cmc
jmp
dec
inc
out
out
sbb
cltd
or
push
je
xor
xor
add
shl
imul
jo
popa
mov
out
ret
das
leave
mov
pop
push
xor
inc
sbb
adc
ja
push
out
pop
mov
sub
ds
adc
pushf
adc
daa
cld
mov
jmp
dec
popa
jl
inc
mov
xor
shl
pushf
pushf
shlb
push
cmp
add
pushf
jnp
mov
test
push
sbb
push
nop
adcl
jno
add
push
mov
sub
repnz
add
xchg
fcomp
imul
xchg
xchg
jl
push
fdivrs
cli
or
scas
pop
cmp
movsb
sub
and
cmp
xchg
mulb
sub
call
cmc
bt
jmp
push
pusha
pusha
lea
jmp
fcmovu
push
adc
dec
push
push
cld
push
lods
cltd
dec
pop
sub
mov
and
sbb
adc
mov
inc
or
sub
push
sub
and
push
push
stc
cmp
or
insb
sub
xor
mov
sbb
jl
dec
pop
dec
add
push
jb
mov
pop
lea
sbb
pushf
mov
pop
out
out
cmp
adc
pop
cmpsb
scas
test
data16
int
lcall
mov
adc
lods
rclb
sti
movl
jmp
xor
jmp
mov
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
pop
jg
sbb
mov
fildll
xchg
cli
xchg
int
stos
mov
add
inc
push
cmc
pop
xorb
imul
shrb
add
ljmp
mov
push
ret
pop
popf
stc
and
mov
sarb
das
pop
cmp
out
out
in
imulb
mov
lods
adc
les
out
jnp
pop
mov
cwtl
inc
mov
fiadds
ret
xor
inc
pop
repz
pop
dec
test
or
lock
or
ds
dec
pop
popf
cli
cwtl
pop
insb
mov
test
jp
xlat
orb
rcrb
imul
sub
pushl
imul
into
loop
repnz
outsb
data16
push
xor
sbb
push
into
dec
les
xlat
mov
stc
je
fcmove
cmovb
cmp
add
fbstp
pop
xchg
push
and
test
orb
cwtl
cld
popf
and
cmp
xchg
hlt
and
iret
lcall
fldcw
mov
rorb
stos
decb
ficompl
xchg
imulb
mov
lds
sbb
int3
test
int3
dec
sub
or
push
leave
jl
push
push
jnp
cltd
cmpb
inc
std
mov
xchg
xor
mov
pop
push
inc
pop
mov
cwtl
jl
insl
fdivrs
lock
push
xchg
imulb
stos
out
pushl
pushf
pushl
movl
pushf
lea
jmp
pushl
popl
not
pushf
push
mov
seto
movzbw
jmp
pusha
shr
pushf
jmp
mov
cmc
sub
jmp
mov
mov
lea
jmp
pushf
pushf
popl
jmp
bt
mov
sub
jmp
pushf
clc
cbtw
cmp
pushl
test
clc
cwtl
stc
bt
sub
mov
jmp
mov
push
pusha
lea
jmp
jmp
pusha
pushl
popl
mov
lea
jmp
mov
call
xor
bswap
and
mov
cmp
stc
stc
jne
sub
jmp
test
not
stc
clc
clc
test
sub
cmc
and
push
push
call
jmp
mov
pushf
push
mov
pusha
pushf
lea
jmp
mov
cmp
add
cmc
bt
mov
pushf
test
sub
pushf
dec
call
jmp
mov
pusha
pushf
pushl
lea
jmp
bswap
push
pop
and
mov
bt
mov
cmp
cmc
cmc
add
push
mov
push
lea
jmp
cmc
mov
sub
cmp
bt
cmp
mov
bt
movb
sub
push
pushf
push
lea
jmp
clc
bswap
pushf
mov
shrd
add
pusha
not
mov
btc
mov
jmp
add
stc
cmp
mov
bt
cmp
stc
add
pusha
mov
pusha
pushf
push
mov
pushf
mov
movb
lea
jmp
cld
pushf
rep
not
sar
movsbw
mov
jmp
stc
clc
push
ror
stc
xchg
pusha
cmp
xor
cmp
stc
push
test
sub
cmp
cmp
mov
call
bt
setb
push
pushl
mov
mov
sar
mov
pusha
sub
sub
ja
pushf
bt
shl
lea
js
mov
pushf
push
push
pushf
popl
call
sub
call
stc
stc
xchg
mov
mov
cmc
add
test
push
xor
push
pushl
cwtl
clc
mov
jmp
rcl
shl
movzbl
push
pusha
stc
mov
xor
jmp
inc
lea
jp
push
pusha
clc
rol
pusha
clc
cmc
bt
sub
call
pushf
pushl
popl
mov
pushf
pushf
lea
jmp
pushf
pushl
pushf
pusha
lea
jmp
pop
sete
cwtl
call
sub
jmp
jmp
jmp
sub
test
bt
add
jmp
sub
clc
mul
push
movw
mov
jmp
push
pushf
popl
pushf
call
movsbw
and
mov
clc
add
pusha
pushf
pushl
lea
jmp
xchg
bswap
pushf
pop
lea
repz
xchg
movsbw
not
push
mov
push
mov
dec
pushl
movsbl
xchg
push
pushf
lea
mov
call
mov
mov
lea
jge
push
mov
mov
mov
pushf
pusha
lea
jmp
bt
stc
stc
rol
stc
pusha
mov
pusha
sub
bt
stc
push
cmp
sub
cmp
movw
mov
movw
pushl
test
mov
sub
mov
push
lea
jmp
add
setge
pushf
call
jmp
pushf
cmc
sub
call
cmc
stc
stc
mov
test
jmp
jmp
sub
call
sub
mov
call
pushf
pushf
mov
mov
pushf
push
pusha
lea
jmp
lea
jmp
push
rcr
notl
das
rcl
ror
xor
mov
stc
sub
cmp
jmp
pushl
popl
pusha
lea
jmp
cmp
stc
stc
xchg
jnp
test
pushf
pushl
xor
call
adc
shrd
mov
bt
call
bt
cmp
xor
jmp
lahf
mov
pusha
movb
mov
push
jmp
call
movb
call
pusha
pushf
pusha
pushf
popl
pushf
pushl
mov
pushl
popl
pushf
mov
movb
mov
lea
jmp
sub
mov
cmc
pushf
test
sub
cmc
push
shr
jmp
xor
bt
bt
test
pushf
xor
mov
test
mov
stc
bt
cmp
clc
sub
pusha
mov
mov
lea
jmp
jmp
test
xor
stc
shl
mov
cmp
jmp
movw
mov
jmp
mov
not
call
push
mov
lea
jmp
rdtsc
cmc
sub
call
jmp
movzbl
pusha
xor
or
sub
movsbw
btc
add
btr
rcr
shr
not
add
not
call
sub
pushf
clc
movb
call
cmc
bswap
aas
aas
mov
pushf
adc
inc
neg
mov
test
add
jmp
movl
pushf
pushf
pushl
mov
pushf
movl
pushl
ret
bts
das
mov
cmc
bt
add
call
call
push
mov
push
push
mov
pushf
pushf
popl
call
push
pushf
mov
xor
and
pushf
neg
not
setp
pop
inc
cmp
and
add
movzbw
xor
bsr
mov
jmp
inc
call
lea
jne
test
stc
xor
pushf
jmp
cmp
pushl
pushf
sub
clc
call
jmp
sub
pushl
bt
clc
cmc
add
call
mov
mov
push
mov
lea
jmp
mov
pushf
mov
lea
jmp
call
mov
jmp
sub
call
shl
daa
mov
not
sar
add
mov
clc
jmp
push
pushl
popl
pusha
push
pushl
pushf
lea
jmp
cmp
mov
adc
xadd
push
mov
adc
xor
shl
mov
aas
mov
rcl
mov
jmp
mov
push
pushf
popl
mov
push
pusha
pushl
popl
mov
pushf
lea
jmp
dec
jmp
cmp
mov
bt
add
stc
ror
bt
pushf
cmc
pushl
xor
test
add
cmc
push
stc
test
mov
call
sbb
mov
rcr
lea
mov
test
mov
bt
stc
pusha
add
mov
shrd
pusha
call
lea
jo
pushf
pushl
popl
pusha
pushf
movw
lea
jmp
push
lea
push
pusha
pushl
popl
xchg
not
mov
movsbw
movl
xchg
mov
seta
inc
inc
sar
not
shld
add
neg
btc
cmp
lea
xadd
sub
shl
shl
push
lea
cmp
shr
cmc
shld
mov
shl
shrd
bsf
add
mov
bts
mov
sbb
bsr
btc
movzbw
xor
setae
pushl
rcr
ror
lea
call
push
pusha
lea
jmp
add
cmc
ror
pushf
jmp
movzbw
jmp
xchg
mov
mov
mov
setp
dec
push
pushf
sete
movzbw
pushl
popl
setp
push
movl
mov
mov
movzbw
inc
cmc
test
bt
shld
not
cmc
bts
adc
bsf
neg
shl
movsbw
bsr
mov
btr
and
sub
shrd
movsbw
mov
xadd
neg
shl
ror
mov
rcl
add
xchg
bsf
sbb
mov
lea
xor
pusha
rol
ror
bswap
dec
pusha
pop
lea
dec
jmp
ror
pusha
dec
not
dec
btr
not
movzbw
sar
rcl
xor
test
sbb
call
mov
pushf
movb
pushf
lea
jmp
pusha
jmp
mov
mov
pusha
lea
jmp
mov
pushf
pushf
mov
lea
jmp
rep
or
shl
shrd
bsf
mov
not
or
mov
jmp
jmp
and
aas
lea
mov
call
pushf
mov
mov
lea
pusha
pushf
mov
pushf
push
pushl
pushf
lea
jmp
bt
pusha
mov
pushf
pushf
pushf
lea
ja
sub
push
pushf
mov
pusha
lea
jne
push
push
movb
test
sub
call
mov
pusha
movb
mov
movw
lea
jmp
pushl
popl
pushl
push
lea
jmp
stc
aaa
inc
aas
mov
dec
add
mov
stc
stc
jge
test
add
pusha
mov
mov
lea
jmp
jmp
pushf
cmp
sub
movb
movb
lea
jmp
stc
add
push
mov
call
lea
jne
bsf
mov
stc
and
call
mov
movb
mov
jmp
jmp
ror
mov
movsbw
mov
bt
bt
xchg
clc
xor
clc
clc
bt
add
jmp
shld
add
mov
inc
bsf
and
mov
jmp
not
cld
cld
lea
jmp
jmp
sar
movzbw
shld
mov
pusha
and
dec
shld
mov
movb
pushf
call
pushf
mov
jmp
pusha
mov
movb
lea
jmp
jmp
call
push
lea
jmp
pusha
bt
pushl
popf
push
movb
movb
lea
jmp
lea
jne
call
pushf
popl
jmp
not
jmp
btc
ror
call
pushf
pusha
push
call
mov
pushf
pushf
lea
jmp
push
mov
pushf
pushf
pushl
lea
jmp
jmp
ror
jmp
rcr
ror
mov
lea
clc
cmp
push
lea
ja
daa
add
sub
xchg
mov
cmc
aas
lea
shld
rcr
lea
push
sub
bts
lea
shl
pop
stc
and
and
call
inc
or
not
pop
movsbl
inc
neg
inc
lea
mov
sub
cmp
sub
pusha
bsr
bsr
btr
lea
bsr
test
btr
inc
mov
rol
dec
btc
sbb
add
bt
shrd
or
or
mov
call
pushf
popl
call
call
pushf
mov
mov
movw
pushf
push
lea
jmp
bt
xor
pushf
lea
ror
movsbw
dec
pop
dec
rcr
movzbl
shld
clc
not
test
xor
lea
shld
movzbl
stc
shld
mov
pushf
test
test
sub
clc
add
mov
pushf
pushf
mov
push
movb
movb
pushl
ret
neg
pusha
jmp
mov
pushf
movb
lea
jmp
movb
sub
lea
jp
mov
call
mov
call
btc
mov
push
add
push
pushf
pusha
pushf
popl
jmp
pushf
shr
or
call
mov
jmp
pusha
pushf
lea
jne
call
pushl
pushl
popf
movw
lea
jmp
pushf
popl
pushf
call
jmp
jnp
cmc
test
bswap
jmp
mov
mov
pushl
push
mov
jmp
call
call
mov
pushf
jmp
pushf
mov
call
movzbw
mov
cld
push
std
cld
cld
pushf
mov
pushf
push
rep
btr
mov
bswap
sbb
xor
mov
bt
stc
jmp
pushf
call
push
push
push
lea
jmp
push
lea
jmp
pushf
jmp
test
clc
test
bt
bswap
pushf
push
sub
movb
call
jmp
push
pushf
lea
jmp
neg
jmp
jmp
movb
dec
push
dec
sbb
not
lea
shld
add
xor
rcl
movzbl
call
pusha
call
movzbl
movzbw
movzbw
push
mov
movzbw
movsbw
push
lea
push
seta
repz
popl
setbe
not
jmp
push
push
pushl
popl
movl
lea
jmp
mov
push
movb
pushf
pushl
ret
pushl
popl
push
mov
pushf
pushf
lea
jmp
mov
jmp
pushf
lea
jns
xchg
jl
pusha
pushl
pushl
movl
pushl
pushl
mov
movb
pushf
mov
pushl
ret
sub
xor
movsbl
neg
setb
dec
inc
shr
and
not
mov
cmp
jmp
pushf
popl
movb
pushf
mov
movb
pushl
popl
movb
lea
jmp
push
mov
pusha
mov
pusha
movb
movb
mov
lea
jmp
call
push
mov
pushf
pushl
push
pushl
lea
jmp
movl
decl
call
pusha
jmp
pusha
pushf
mov
mov
pushf
push
movw
lea
jmp
movb
mov
push
pushf
mov
pushf
lea
jmp
test
clc
pushl
add
call
push
movb
lea
jmp
lea
jne
not
shl
xorb
bswap
pusha
lea
mov
pushf
lea
jmp
mov
bt
pushl
add
jmp
push
pushf
sub
pushl
mov
mov
movw
lea
jmp
adc
pushl
popf
mov
call
call
cmp
cmc
cmp
pushf
pushf
call
ror
push
movb
dec
bt
jmp
bsr
sub
lea
je
bswap
movsbw
mov
pusha
lea
pushf
popl
pushf
pusha
pushl
mov
lea
jb
pushf
mov
std
lea
std
movzbl
lea
mov
jmp
lea
pusha
pushf
lea
jmp
pop
xchg
movzbl
push
mov
repz
movzbw
push
dec
inc
movzbw
push
dec
pushl
pusha
movl
jmp
movb
pushf
xor
cmc
pushl
jmp
mov
pushf
jmp
call
stc
jmp
call
call
movw
jmp
adc
xor
shr
neg
mov
clc
cmp
xor
clc
bt
bt
clc
neg
pushf
rol
stc
call
mov
pop
call
jmp
pushf
popl
push
pushl
mov
pushl
popl
movb
mov
mov
pushf
lea
jmp
mov
pushf
call
jmp
lea
mov
movb
mov
mov
bswap
movsbl
mov
pushf
call
btr
mov
stc
sub
pushf
call
pusha
push
movw
pushl
popl
pushf
movw
lea
jmp
pushf
shr
test
shl
mov
add
jae
test
sub
call
cmc
clc
pushl
rol
test
clc
sub
pushf
jmp
neg
bt
call
mov
pushf
not
push
mov
call
not
movzbw
mov
mov
pushf
jmp
stc
cmc
xchg
bt
call
movzbw
not
cmp
sub
xor
adc
xor
cmc
adc
bsf
movzbl
ror
mov
pushl
sub
cmc
cmc
add
pushf
jmp
jmp
push
pushf
popl
pushf
pushf
movb
pushl
popl
movl
lea
jmp
mov
pushf
pushf
divl
movb
movb
mov
push
mov
call
movl
jmp
shl
btr
clc
mov
dec
call
pushl
popl
pushf
pushl
movw
lea
jmp
call
push
mov
pusha
pushf
mov
lea
jmp
pushf
push
pushl
popl
pushl
lea
jmp
movw
xchg
pushf
pushf
push
movl
pusha
jmp
mov
pushf
mov
pushf
movw
call
pushl
popl
pushl
lea
jmp
jmp
pushl
popl
pushf
mov
movb
lea
jmp
pusha
mov
jmp
call
pushf
mov
push
pushf
pushf
call
pushf
pushf
cmp
test
shl
call
mov
bswap
inc
inc
xadd
rol
cmp
and
not
not
rcl
lea
neg
sub
pushf
push
lea
ror
sub
shrd
xor
push
lea
shl
adc
mov
rol
rol
add
inc
lea
mov
bswap
test
rcl
xor
stc
pop
push
call
movb
mov
pushf
movl
lea
jmp
xchg
bswap
lea
jb
pusha
bswap
mov
mov
lea
jno
push
lea
mov
bswap
repz
push
jmp
sub
mov
mov
mov
sub
mov
mov
mov
into
mov
mov
pop
movsb
mov
sub
mov
mov
mov
movsb
mov
sahf
mov
xchg
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
sub
mov
scas
mov
mov
mov
sub
mov
mov
jge
mov
sub
mov
mov
and
mov
sub
mov
lods
mov
sub
mov
mov
mov
sub
mov
mov
cltd
sahf
mov
sub
mov
mov
mov
cltd
sahf
mov
mov
mov
pop
test
mov
mov
mov
into
mov
mov
xchg
shlb
mov
mov
or
mov
daa
mov
mov
pusha
scas
mov
xchg
mov
mov
cmpsb
movsl
mov
pusha
scas
mov
mov
mov
jmp
scas
mov
cltd
sahf
mov
cmpsb
movsl
mov
int
mov
pusha
scas
mov
xchg
shlb
shlb
mov
mov
cmpsl
mov
mov
mov
mov
movsb
mov
stos
test
mov
mov
mov
and
mov
int3
mov
mov
mov
mov
mov
mov
mov
mov
jge
mov
pusha
scas
mov
les
mov
stos
test
mov
or
movsb
mov
cmpsl
mov
mov
cmpsl
mov
mov
xchg
shlb
mov
mov
nop
mov
mov
movsb
mov
arpl
mov
jno
mov
nop
mov
mov
shlb
lods
mov
pop
test
mov
mov
mov
sbb
mov
mov
mov
mov
jno
mov
dec
mov
mov
push
test
mov
sbb
mov
popf
mov
mov
sahf
lahf
mov
ljmp
mov
mov
mov
ljmp
mov
mov
mov
mov
mov
push
mov
daa
mov
mov
xor
mov
cmpsl
mov
mov
or
mov
pop
movsb
mov
mov
mov
test
mov
int
mov
int3
mov
mov
jno
mov
into
scas
mov
mov
mov
mov
mov
mov
mov
mov
dec
lods
mov
cpuid
mov
cmpsb
movsl
mov
or
mov
push
mov
mov
mov
push
test
mov
int3
mov
mov
stos
mov
mov
sahf
mov
nop
mov
mov
mov
dec
mov
mov
push
test
mov
mov
mov
les
mov
ljmp
mov
test
mov
mov
mov
or
mov
cmpsl
mov
mov
sub
mov
push
test
mov
cltd
sahf
mov
es
mov
or
mov
jmp
mov
mov
nop
mov
mov
mov
mov
dec
mov
mov
int
mov
dec
mov
mov
adc
mov
mov
mov
cpuid
mov
into
scas
mov
dec
mov
mov
push
test
mov
into
scas
mov
push
mov
into
mov
mov
push
test
mov
push
test
mov
les
mov
or
mov
or
mov
movsbw
mov
movsbw
jmp
pushf
call
pusha
jmp
test
sub
stc
pushf
test
add
call
mov
movb
push
pushl
ret
mov
call
movw
bt
pushf
add
bt
bt
ror
pusha
xchg
bt
add
pushf
xor
clc
pushf
cwtl
stc
pushf
pushf
jmp
lahf
rdtsc
movsbw
lea
mov
mov
push
movzbw
jmp
mov
mov
mov
pushf
mov
mov
lea
jmp
mov
pushf
movl
pushf
push
lea
jmp
pushf
push
inc
movl
pusha
call
pushf
popl
pushf
jmp
pushl
popl
pushf
movb
pusha
lea
jmp
jmp
mov
pushf
pushf
pushf
pushl
ret
mov
pushf
mov
jmp
pushl
jmp
sub
pushf
div
movb
mov
movw
pushl
mov
pushf
jmp
push
call
lahf
call
bt
pusha
mov
test
sub
pushf
jmp
pusha
pusha
add
push
mov
pushf
push
movb
pushl
lea
jmp
pushf
mov
pushf
pushl
ret
pushl
jmp
jmp
call
movzbl
std
xchg
mov
mov
call
neg
rcr
mov
dec
rcl
mov
bt
test
cmp
bt
sub
cmc
push
bt
cmp
shl
pusha
pushf
call
sub
mov
push
stc
sub
cmp
jmp
jmp
pushl
popf
movb
push
pushf
lea
jmp
lea
pusha
mov
mov
lea
jmp
lea
not
pushf
call
movb
pushl
popl
pusha
mov
lea
jmp
add
push
call
pusha
push
lea
jnp
stc
rol
pushf
clc
stc
sub
call
movl
jmp
neg
pushf
xor
pushf
not
movzbl
push
mov
bt
cmc
add
clc
mov
cmc
or
push
lea
je
pushf
pushf
cmp
clc
xor
call
pushf
add
jmp
shr
inc
movzww
jmp
jmp
stc
pushl
ror
call
push
call
rcl
bt
and
add
mov
pushf
mov
cmp
test
add
pushl
mov
pusha
lea
jmp
and
mov
std
std
movb
std
pushl
popf
pushf
pushf
movb
lea
jmp
pushf
xchg
push
pushf
pushf
call
inc
jmp
sbb
shl
movzbl
call
sub
jmp
movzbw
sub
lahf
dec
mov
or
cmc
sbb
rcr
mov
test
push
cmp
bt
sub
stc
pusha
cmc
shr
lea
jne
mov
pushf
pushf
pusha
pushf
pushf
popl
lea
jo
popl
pushf
push
pusha
mov
lea
jmp
sub
bswap
lea
stc
mov
cmc
push
add
movb
mov
mov
lea
jmp
shl
pushf
mov
mov
movb
add
pushl
jmp
pusha
pushf
pusha
lea
jmp
ror
mov
clc
movsbl
add
not
mov
shr
xor
btr
mov
pushf
stc
shl
test
jmp
mov
mov
movsbw
setns
push
mov
mov
pusha
movb
lea
cpuid
jmp
sub
push
movb
movb
mov
lea
jmp
shr
mov
cmc
or
test
clc
sub
jle
xor
pushf
jmp
cmc
pushl
stc
stc
jmp
neg
movsbw
sub
bt
mov
rol
or
shrd
rol
xor
cmc
btr
rcl
ror
movzbw
dec
dec
clc
xor
stc
xor
shld
add
bts
xor
xor
sar
sub
shl
mov
push
pushf
stc
add
jmp
pusha
lea
jge
pushf
lea
jne
jo
mov
pusha
movb
lea
jmp
mov
lea
jb
push
pushf
popl
call
pushf
jmp
push
jmp
cwtl
cwtl
mov
xor
rcr
mov
pushf
add
jmp
mov
mov
movb
pusha
mov
movb
pushl
ret
rcr
neg
shl
sub
movzbl
rcr
shr
rcl
xor
bts
cmc
test
neg
ror
rol
bt
btc
bts
jmp
call
mov
dec
pushf
movb
xor
cmc
jmp
clc
mov
jmp
pusha
pusha
lea
jmp
movb
mov
pusha
pushf
mov
push
lea
jmp
mov
mov
std
mov
mov
pushf
cld
pushl
jmp
sub
das
mov
rcr
test
adc
pusha
mov
pushf
bt
clc
pushf
not
push
not
stc
bt
and
push
pushf
call
adc
jb
clc
shr
mov
stc
cmc
add
pusha
add
bt
bt
ror
test
test
clc
clc
xor
clc
jmp
sets
bswap
mov
pushf
call
sar
movsbl
shrd
xor
mov
sbb
rol
mov
cmc
cmc
push
add
push
lea
js
push
mov
pusha
push
push
lea
jmp
inc
xor
cmc
cmp
movsbw
stc
add
bt
rcr
adc
mov
bt
add
jmp
movzbl
jmp
clc
clc
add
cmc
bt
bt
xor
push
cmc
call
pushf
push
lea
jmp
aaa
shl
sar
mov
neg
lea
mov
and
sar
or
mov
stc
clc
pusha
add
bt
clc
shld
pushf
call
cmc
mov
test
jmp
mov
push
mov
jmp
add
movw
pushf
mov
pushf
popl
pushf
pushl
jmp
pushf
mov
push
jmp
mov
jmp
sbb
clc
xchg
mov
or
bsr
shld
mov
push
pushl
pusha
clc
not
pushl
cmp
jmp
pushf
inc
call
mov
pushl
push
pushl
lea
jmp
call
sbb
mov
inc
clc
jmp
jmp
movb
pushf
popl
pushl
pushl
popl
pushl
pusha
lea
jmp
push
mov
movb
push
pusha
lea
jmp
mov
pusha
pushf
lea
jmp
pushf
pushf
pusha
pushf
popl
pushl
mov
pushl
popl
pushl
pushf
mov
lea
jmp
pusha
push
push
jmp
pushf
mov
pusha
pushf
popl
mov
pusha
jmp
pushl
jmp
pusha
mov
jmp
pushl
popl
mov
mov
lea
jmp
decl
movb
jmp
cmp
cmc
mov
cmc
mov
push
jmp
pusha
pusha
clc
sub
cmp
cmpl
call
clc
rol
pushl
mov
neg
cmp
cmp
xor
jmp
cmc
call
mov
movb
lea
call
call
mov
mov
mov
lea
jmp
movb
pushl
mov
pushf
pushf
movb
pushf
popl
pushf
jmp
cld
call
call
jmp
call
clc
add
push
jmp
lea
jmp
pushf
mov
and
lea
je
push
pusha
pushf
popl
jmp
add
add
push
call
mov
not
mov
pusha
movzbw
mov
call
push
push
lea
jnp
pusha
mov
jmp
pushf
mov
movw
lea
jmp
pusha
shl
pushl
mov
jmp
mov
pushl
mov
movl
push
lea
jmp
push
pushf
popl
jmp
lea
jns
pop
lea
pop
pushf
pushl
ret
pusha
mov
push
pusha
push
pushf
lea
jmp
mov
push
movw
lea
jmp
mov
pushf
push
pushl
ret
push
test
add
call
lahf
mov
aam
mov
lahf
aad
mov
push
pushl
call
pushl
popl
pushf
pushf
lea
jmp
lea
jmp
mov
pushf
call
push
seta
mov
pusha
call
