jo
iret
xchg
out
lea
jae
or
inc
lods
jns
test
dec
add
push
jbe
cmp
in
cmp
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
pusha
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
jb
add
mov
add
fstpt
jg
rcrb
and
mov
int
or
cltd
shll
test
push
aas
or
dec
ret
lds
scas
mov
push
jge
jmp
sahf
dec
pushf
xor
scas
add
stc
pop
mov
jle
push
or
xchg
fisubl
push
rorl
in
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
jle
sbb
jge
cs
ljmp
pushf
pop
jle
adc
es
insb
pop
mov
mov
jge
sbb
jo
clc
and
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
lea
mov
push
pop
rep
push
push
pop
sub
mov
shl
mov
add
add
xor
add
pop
test
je
push
sub
jl
pop
sbb
ja
jmp
pushl
ret
push
pop
loop
cli
add
sbb
pop
scas
adc
push
lods
mov
lds
pop
int3
fcoms
mov
and
stc
ja
fimull
lds
xchg
cmp
in
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
imul
pop
je
in
aad
ljmp
addl
fstsw
push
or
or
cmp
adc
or
fildl
mov
sub
push
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
cli
cmpsb
mov
adc
push
sub
xor
stos
cmpsl
xor
adc
push
pop
dec
mov
ds
push
repnz
cmpsb
lods
and
add
jle
fcomps
shll
cwtl
push
fsubrp
push
adc
jo
jg
mov
mov
push
cmp
adc
movsb
jl
pop
into
adc
or
xlat
xor
xor
aam
insb
push
call
stos
cmpsl
les
mov
cli
pop
outsl
mov
imul
sti
popf
test
in
das
mov
fmull
aam
xchg
hlt
jns
lahf
cmovg
repnz
icebp
lods
testb
pop
xor
fprem1
es
and
mov
or
push
cmpsl
rcrl
out
int
cmp
iret
loope
xchg
test
in
inc
pop
mov
sbb
push
popa
pop
daa
clc
add
rolb
jmp
push
push
arpl
fisttpl
jae
dec
and
mov
ret
and
fwait
pop
fs
dec
sbbl
pop
insl
cmc
push
fdivl
xlat
movsl
push
inc
movsl
sbb
icebp
or
ljmp
leave
cmp
xor
int
mov
shrb
pop
xlat
and
xchg
dec
xor
sub
push
sub
gs
les
xchg
add
cmc
lds
call
mov
jle
mov
xchg
pushf
adc
fsubr
scas
push
cmp
sbb
in
insb
adc
xor
rcrb
dec
icebp
mov
dec
out
lods
pop
xor
push
int3
insb
or
fbstp
repnz
adc
mov
lods
ja
pop
push
pusha
addr16
out
test
aaa
aam
adc
push
or
sub
jae
adc
sbb
inc
sub
jg
arpl
add
fiaddl
xchg
mov
loop
mov
jecxz
in
jbe
mov
pusha
lcall
in
lds
addr16
inc
xor
cmp
jmp
popf
fnstsw
or
popa
adc
mov
lahf
test
ret
rcrl
icebp
push
xlat
inc
push
or
out
add
xchg
aaa
mov
leave
jp
cmp
bound
pop
add
fs
aaa
lock
jns
pop
cli
ljmp
ljmp
add
xchg
cmp
dec
dec
shll
shr
lahf
jbe
sbb
and
cmp
movsl
lock
scas
dec
not
movsb
push
icebp
cmp
in
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
push
push
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
push
call
add
pop
sub
mov
add
ret
ret
cmp
jo
and
xor
sti
push
jecxz
add
mov
loope
loop
fiaddl
insb
lcall
add
mov
mov
lahf
das
in
dec
xchg
push
repnz
stc
lods
icebp
adc
stos
inc
ret
jl
and
and
push
in
mov
les
add
jbe
lock
add
pop
xchg
jnp
jg
sub
lods
int3
mov
leave
outsb
ss
inc
test
and
mov
sub
cs
push
mov
ja
ret
js
outsl
shll
add
cltd
cmp
xlat
pop
sarb
inc
les
xorl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
ret
stos
pop
push
push
int
adc
inc
inc
stc
ja
jbe
xor
adc
and
mov
ss
push
add
les
jecxz
hlt
insb
xor
and
inc
loop
push
sub
lock
xchg
test
ret
testb
lock
stos
jge
push
dec
das
sti
loope
stc
dec
mov
ss
pop
aaa
adc
lds
pop
ja
push
std
lcall
adcl
xor
mov
fcompl
sub
dec
imul
inc
and
in
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
inc
inc
sbb
jl
out
ret
das
add
popf
mov
xchg
fadd
push
inc
adc
dec
in
adc
push
imul
iret
js
adc
pushf
ljmp
pushf
jb
adc
sub
in
push
sub
je
and
out
sub
mov
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
roll
int3
cmp
or
pusha
cwtl
xchg
adc
sub
test
arpl
push
and
push
mov
mov
in
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
int3
jge
call
jmp
dec
pop
xor
inc
or
xchg
cli
adc
push
ss
xor
in
push
das
adc
xor
adc
inc
inc
push
adc
push
nop
cmpsl
test
sbb
addb
push
dec
push
pop
rolb
aaa
test
inc
pop
push
out
in
cltd
fwait
aad
pop
xlat
or
cwtl
imul
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
mov
sub
mov
push
push
subl
push
subl
mov
inc
mov
call
sub
mov
pop
mov
mov
lea
push
pop
or
mov
mov
xor
sbb
sbb
lea
mov
sub
or
sbb
add
mov
pushl
sub
sub
pop
bswap
sub
cmp
jne
xor
mov
nop
call
sub
ret
add
add
in
sub
push
push
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
imul
aas
fidivs
out
and
cmp
jnp
and
test
mov
in
pop
inc
xchg
sub
push
jl
xor
in
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
call
add
pop
sub
mov
add
ret
nop
inc
jg
in
xor
xchg
insb
pop
mov
test
imul
fisubrl
push
jecxz
cwtl
adc
and
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
adc
packsswb
cmp
into
mov
into
pop
lcall
xchg
ret
or
push
push
mov
mov
cmc
stos
loopne
aam
mov
cmp
data16
aaa
jno
xor
je
xchg
out
enter
mov
aam
addr16
xchg
loope
pop
in
or
sbb
mov
pop
pop
testl
adc
jmp
add
mov
cld
pop
mov
adc
aad
icebp
out
cmp
stc
xchg
lret
mov
pushf
daa
es
xor
mov
pop
mov
lods
adc
mov
aad
cwtl
jl
vsubsd
pop
pusha
xchg
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
iret
popl
fprem1
dec
out
jb
ds
ror
fwait
push
inc
sbb
jnp
iret
shrb
lods
clc
lds
in
test
pop
pop
ljmp
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
or
fstpl
fsubrs
push
inc
iret
jecxz
test
addr16
testb
sbb
mov
in
jne
sarl
xchg
dec
mov
jo
dec
lcall
jge
adc
jae
mov
popa
pop
push
dec
fwait
imul
aas
fisubl
loope
leave
add
xchg
imul
loope
xchg
mov
push
popa
xchg
dec
out
push
push
mov
scas
cli
jno
popf
outsl
test
sti
flds
js
mov
cs
movsl
mov
out
push
orl
mov
push
pop
and
lock
adc
outsb
jb
jnp
je
cmp
sbb
aaa
xchg
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sahf
out
jbe
movsb
fcoms
in
test
mov
enter
jecxz
outsb
sub
jo
and
mov
out
hlt
cmp
std
ret
aad
imulb
xchg
out
jbe
testl
mov
push
dec
cmp
std
fwait
out
aad
mov
es
and
push
jecxz
cmp
sbb
push
aaa
addr16
aaa
mov
hlt
mov
leave
loopne
stc
xchg
dec
pop
cmpsl
mov
roll
rolb
imul
call
mov
stos
outsb
movsl
sbb
hlt
rolb
into
xor
sub
rorl
dec
mov
cmp
ret
std
pop
dec
loop
push
sbb
mov
repnz
fwait
call
in
mov
fists
ljmp
insb
jge
sbb
jp
mov
test
daa
jg
cs
adc
sbb
cmc
xor
sbb
repz
pop
arpl
movsl
pop
jge
test
mov
xchg
add
loop
mov
push
sbb
jg
push
cmp
mov
lods
test
adc
jnp,pt
int
fldl
jp
dec
dec
push
pop
adc
mov
pop
push
sarb
jmp
vmresume
push
mov
je
or
mov
sti
stc
mov
jno
cmpsl
jle
add
cmp
pusha
jl
mov
scas
dec
roll
dec
data16
add
fbstp
push
xchg
sub
cld
mov
jnp
dec
call
lahf
push
push
sub
stos
pusha
mov
scas
push
pop
sbb
cmpsl
push
fsubp
ror
inc
xor
and
in
adc
sbb
jns
adc
sti
adc
cmp
mov
mov
push
imul
pop
and
fdivrs
ds
sarb
das
movb
ret
dec
inc
mov
mov
inc
sbb
jge
inc
push
movsb
shrl
pop
mov
test
test
outsb
xchg
sub
jp
inc
rcr
dec
xor
lods
adc
aam
data16
out
scas
aas
dec
shlb
sahf
bound
mov
mov
add
xlat
push
sub
mov
or
mov
shll
push
movsb
inc
shrl
fidivl
sarl
pop
clc
mov
mov
pop
cmpsb
fcmovnb
popf
icebp
jg
pop
lret
xlat
orb
shlb
test
es
arpl
pop
and
pop
cmpsl
arpl
inc
dec
mov
adc
movsb
pusha
lcall
lahf
cltd
pop
push
stos
movsb
icebp
out
mov
pop
push
aaa
pop
xchg
dec
mov
pop
adc
mov
jecxz
dec
mov
test
fwait
test
sahf
int
mov
mov
faddp
mov
or
inc
lods
repnz
push
mov
xlat
scas
or
mov
sub
mov
mov
insb
jae
xchg
loopne
mov
pop
cmc
xchg
mov
pop
mov
mov
sub
jb
mov
fisttps
and
or
lods
ss
aas
aam
push
mov
xchg
jmp
push
lahf
add
pop
pop
xor
inc
lret
mov
es
adc
pop
add
cld
xor
cli
xlat
sbb
leave
daa
add
push
mov
add
movsl
xorb
loope
insb
xchg
and
xchg
jge
pop
xor
int
sub
xchg
pop
push
sub
aam
add
cli
loop
adc
sub
or
mov
inc
pop
jmp
je
push
lret
push
xchg
movsl
movsb
loopne
in
push
es
pop
out
push
add
cmp
and
lret
fnsave
movl
mov
mov
es
pop
sub
pusha
bound
sub
test
xlat
ret
xchg
mov
cmp
lret
pop
sbb
loope
adc
dec
mov
sbb
add
add
push
mov
push
dec
stos
pop
ljmp
mov
pusha
add
les
and
and
lret
xor
divb
push
mulb
mov
sar
cmp
iret
sub
xor
out
jae
push
incl
scas
hlt
xor
sti
cmp
pusha
sbb
sub
mov
adc
movq
sahf
sarb
mov
and
xor
bound
push
loop
mov
pop
outsb
fcompl
push
pop
pop
jl
ds
xor
out
movsb
cmp
pop
dec
sbb
in
pop
fistpl
sub
push
cli
rorl
std
ret
imul
xor
imul
jp
ret
xor
dec
jns
inc
push
movsb
cmpsl
cmp
and
adc
push
lahf
jmp
adc
sbb
push
pop
push
dec
cmc
stos
pop
cmpsb
fcmove
es
and
push
pusha
aaa
xchg
mov
into
inc
test
pop
stos
sub
pop
fst
push
mov
cmp
movb
cmp
mov
adc
push
subl
imul
pop
push
inc
sbb
dec
add
xor
and
mov
test
push
inc
aam
mov
sub
push
mov
ss
std
dec
xor
lret
xor
lret
pushf
or
ljmp
dec
mov
jbe
xchg
testb
or
jae
add
pop
and
mov
stc
xlat
push
stc
outsb
pop
cmp
scas
loop
test
enter
or
mov
push
xchg
xor
fldcw
sub
sarl
cli
jno
sub
push
mov
fucomi
xchg
iret
test
inc
daa
xchg
cli
cli
pop
add
cli
bound
jle
pop
clc
cmp
add
lcall
push
lcall
daa
cmp
fdivl
cmp
lods
mov
xor
js
mov
or
or
inc
add
outsl
inc
sub
fnstsw
cmp
cwtl
sbb
sbb
mov
mov
jo
mov
dec
stc
pop
mov
ja
lret
dec
cmpsb
pop
mov
jne
lret
dec
movsb
pop
mov
jae
lret
dec
mov
nop
pop
xlat
mov
mov
fistpl
add
sti
pushf
les
push
aaa
sbb
sub
int
and
cltd
imul
out
rol
.byte
lret
