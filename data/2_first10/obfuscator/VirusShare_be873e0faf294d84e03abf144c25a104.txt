std
jmp
sbb
adc
add
adc
inc
roll
loopne
adcl
and
or
add
mov
add
addb
add
or
addl
or
push
addb
sbb
idiv
xor
adcb
adc
jp
add
and
push
or
or
sarb
or
lods
jg
loope
add
inc
and
rcrb
xchg
add
adc
pop
or
xchg
add
ljmp
add
push
and
addb
pusha
loope
pusha
loopne
and
fldt
add
mov
loopne
jo
xor
in
in
faddp
rorl
or
push
orb
loope
push
xchg
add
push
cmp
cmp
xor
xchg
cmp
xchg
cmp
add
loope
pusha
adc
jbe
testb
mov
push
or
ret
add
jo
or
incb
addl
inc
add
adc
or
jg
insb
and
cmp
pop
loope
add
push
push
pop
jo
jo
incb
sbb
loopne
rorl
add
jo
push
xor
sbb
pusha
notb
sbb
mov
jo
inc
xorb
dec
cmp
int
push
into
cmpl
xor
lock
fwait
and
pusha
or
cmp
and
push
add
sarb
or
fdivs
push
sbb
add
or
adc
xor
xchg
cmp
mov
mov
push
inc
inc
pop
sub
inc
or
movb
or
outsb
push
pmaxub
sub
out
ret
mov
in
push
add
push
addb
ror
cs
ud2
pop
lock
ret
add
add
or
cmp
cwtl
and
add
rcll
sbb
loope
cmp
sbbb
cs
adc
mov
cmp
inc
pusha
or
jl
xor
pusha
mov
cs
xor
push
movsb
loope
push
or
je
addl
orb
subl
jp
ret
mov
sahf
xor
lret
mov
or
add
mov
xchg
fcompl
pusha
add
pusha
shll
and
sub
pusha
add
mov
or
pusha
cmp
mov
mov
cmp
push
push
xchg
sbb
sub
addl
mov
cmp
sbb
push
sub
mov
cmp
mov
pop
ret
xchg
sbb
adc
xchg
sbb
cmpsb
clc
sbb
and
jo
push
push
cmp
psubsb
cmp
adc
adc
fimull
push
or
rclb
xchg
or
xor
shlb
loopne
jmp
push
push
add
or
and
adc
xor
arpl
fadd
pusha
adc
jo
push
or
addl
subl
pusha
and
or
push
add
push
mov
andl
adc
sbb
inc
or
out
insb
adc
or
add
push
xchg
push
shll
and
or
inc
shll
aad
jecxz
inc
xchg
loop
rcrb
rorl
mov
push
inc
dec
call
shl
pusha
adc
push
icebp
mov
or
push
ret
cmp
add
fsubs
lods
mov
or
outsb
xchg
shrl
push
xchg
inc
or
inc
cmp
jge
push
inc
and
jo
or
and
cwtl
ret
and
xchg
shrb
jbe
scas
sbb
aam
cmp
push
orb
rolb
add
xor
ret
inc
js
cmp
mov
pop
add
push
xchg
and
sbb
push
jo
lods
cmp
push
fadd
pop
jbe
stos
add
add
and
test
push
inc
fs
aam
int3
mov
mov
cmp
pop
and
sub
cmpsb
push
adc
add
mov
shl
mov
inc
sarb
inc
pusha
int
dec
pusha
push
movsb
push
or
cltd
xor
sbb
mov
mov
or
push
mov
inc
jno
cmp
ret
sub
addb
xor
add
push
enter
add
push
inc
and
es
insb
scas
pusha
push
popf
push
mov
fisubl
sbb
dec
and
or
lret
or
or
or
movsb
stos
push
add
loope
push
shll
add
push
adcb
out
push
and
icebp
xor
dec
test
orb
push
test
ret
push
sarl
mov
rol
data16
call
jmp
push
xchg
hlt
xchg
adc
pusha
call
xchg
dec
xor
sbb
xchg
add
push
lods
fcom
pop
andl
xorb
push
sbb
pop
mov
cld
pusha
and
subl
sbb
cltd
adc
xchg
cli
insb
xchg
lock
int3
movsb
sub
push
ret
test
movsb
mulb
lods
inc
sbb
or
sbb
pusha
mov
je
dec
mov
lods
pusha
add
add
inc
cs
sbb
push
mov
push
mov
add
loope
add
gs
es
or
shlb
ret
imulb
push
mov
ds
xchg
mov
cmp
dec
add
popa
data16
mov
test
mov
lods
mov
add
xchg
adc
dec
dec
add
or
mov
ret
push
add
hlt
mov
xchg
shlb
outsb
fcompl
sbb
add
outsb
cmp
cs
sahf
movsb
es
push
enter
add
push
and
int3
lcall
loope
lcall
adc
pusha
mov
inc
ret
data16
pusha
inc
inc
sub
push
add
jb
jo
pusha
or
add
adc
add
cmp
or
cmpsb
or
add
adc
adc
push
loope
aam
jo
loope
sbb
cmp
loopne
push
outsb
dec
push
sbb
sbb
insb
xor
and
xor
mov
or
movsl
or
jo
nop
push
shll
stos
and
xchg
or
cs
call
push
sbb
psrld
adc
xor
lods
mov
sbb
orl
mov
stos
jo
pop
roll
sbb
and
loope
mov
lock
push
fcoms
add
cld
rclb
or
pusha
pop
add
push
call
sar
ret
jo
add
dec
popa
mov
jb
cli
pusha
dec
push
test
mov
int3
fiadds
xchg
ret
jl
jle
femms
cmp
or
mov
mov
jo
sub
dec
shlb
xchg
lret
xchg
push
add
add
adc
xchg
xchg
and
xchg
pusha
es
push
push
in
lar
or
add
add
loopne
mov
test
or
inc
ds
out
mov
orb
adcb
pushf
mov
or
xchg
xchg
mov
lods
test
pop
xor
push
inc
movsl
xor
mov
and
ds
cs
cltd
inc
addb
add
push
enter
add
push
mov
and
inc
add
pop
in
loope
pop
xchg
mov
orl
push
inc
add
insb
adcl
dec
js
mov
lret
es
or
xchg
rorb
or
sbb
roll
jl
shrb
movb
or
test
clc
dec
and
add
mov
mov
push
add
dec
and
or
dec
mov
xor
and
test
push
mov
sub
outsb
pusha
inc
fs
sub
sbb
in
sub
mov
test
pusha
add
add
xor
pop
add
int3
hlt
sbb
testb
imul
mov
rolb
xor
xchg
and
or
and
loop
mov
jo
cmp
aad
cmpsl
add
fwait
dec
pusha
add
mov
add
push
cltd
pop
inc
xchg
test
adc
sub
cmp
xchg
push
push
pusha
adc
adc
add
or
cwtl
xchg
mov
adc
xor
sub
xor
push
inc
hlt
dec
cmpsb
mov
jo
xor
mov
push
je
insb
or
and
push
les
sbb
fimuls
dec
or
cwtl
jo
xchg
inc
lock
les
pop
or
es
and
or
xor
jo
mov
mov
sub
in
cmp
stos
cmp
jecxz
pop
push
and
or
or
adcl
xchg
pusha
mov
pop
push
push
aam
incb
or
sub
add
aam
push
subl
inc
push
cmp
loope
lret
sbb
push
jle
sbb
mov
mov
or
or
sahf
pusha
out
push
lock
or
mov
and
int3
dec
fidivrl
sub
pushl
daa
dec
shrb
push
in
add
loopne
push
mov
bound
and
adc
cmp
cs
inc
stos
mov
test
shlb
sbb
dec
nop
loope
mov
stos
cmp
jp
sbb
sub
or
sub
push
and
push
pop
xchg
and
mov
or
sub
sbb
adc
out
call
xchg
test
sub
cmp
inc
mov
push
scas
push
dec
add
test
mov
push
dec
sub
or
sbb
xchg
ret
stos
int3
inc
push
pop
loopne
push
mov
scas
push
add
sub
aam
push
pop
adcl
push
sbb
fucom
xor
js
push
pop
add
inc
pop
inc
subb
add
fiadds
js
xchg
jne
ret
dec
cmpsb
in
loopne
inc
pusha
push
sub
mov
test
mov
ljmp
jbe
push
outsb
or
stos
sbbl
loop
loopne
shrb
cltd
adc
or
xchg
rorb
add
roll
dec
push
fcompl
addb
adc
faddl
cmp
mov
enter
arpl
cmp
add
inc
aam
jb
inc
or
push
in
sub
inc
and
xchg
or
mov
push
push
cwtl
stos
xchg
cmp
jp
cmp
or
int3
add
sbb
add
dec
adc
lock
enter
sub
clc
fmuls
xor
push
pop
inc
unpcklps
cwtl
push
sub
push
add
pop
and
mov
cmp
shrl
jle
fs
add
jbe
test
push
inc
and
add
xor
add
and
orl
push
add
sahf
xchg
adc
dec
sbb
xor
add
fldl
add
add
add
inc
xchg
bound
mov
xor
sarb
test
or
push
cmpb
jb
int3
push
enter
cli
stos
sbb
add
add
push
shlb
mov
sbb
or
pusha
call
and
xchg
pop
or
btr
outsb
cwtl
shl
ss
add
mov
orb
in
add
cmp
xchg
sbbl
adc
orb
mov
push
ret
dec
fstpl
sub
add
addb
cwtl
jp
hlt
add
or
cmp
scas
sbb
jb
or
or
in
pop
hlt
push
xchg
xchg
push
inc
pusha
inc
bound
push
mov
inc
rorb
je
jbe
xor
pop
add
jo
addb
sarl
test
or
push
push
or
jp
or
pop
sub
lods
sbb
pop
push
cmp
sbb
and
in
in
loopne
js
inc
add
andb
mov
rcl
pusha
fimull
sub
or
push
xchg
or
out
push
fdivrs
or
jecxz
push
cltd
movsb
fmull
sub
or
inc
movsl
nop
mov
or
push
push
push
es
dec
into
js
or
nop
ds
inc
xchg
int3
or
int3
scas
les
loopne
xchg
mov
pop
or
inc
push
test
pusha
push
xchg
adc
xchg
lock
xchg
enter
subl
add
add
ret
xchg
lods
dec
inc
out
adc
add
add
lret
ss
mov
push
out
addb
inc
sub
outsb
or
xor
rorl
push
push
push
cmp
rol
popa
orl
pushf
xchg
add
je
pusha
or
cmp
sub
xchg
xchg
cmp
jb
or
push
test
sbb
nop
ret
test
xchg
mov
out
in
cwtl
sbb
ss
rolb
add
mov
int3
inc
add
add
loop
sbb
sbb
sahf
insb
ret
scas
pop
adcb
cmp
xorl
push
dec
pop
sbb
sbb
xchg
mov
ret
pusha
ret
adc
xchg
data16
add
nop
shlb
cld
nop
jle
jo
jnp
es
xchg
subl
pusha
push
rolb
add
push
add
xchg
shll
cwtl
setb
push
jo
xorl
out
mov
push
or
and
adc
add
jbe
loopne
push
xchg
pusha
movsb
sbb
jbe
repnz
push
add
add
out
push
xchg
adc
push
adc
test
rcrb
push
test
or
loopne,pt
mov
sub
add
mov
push
mov
cmp
lcall
and
and
or
movsb
push
add
inc
push
fs
test
shll
adc
jbe
jo
daa
stos
movsb
dec
mov
outsb
push
movsl
push
sub
into
dec
orl
ret
pop
or
add
fs
and
scas
add
les
out
rclb
stos
mov
mov
ret
jbe
clc
push
les
and
xor
and
test
or
in
or
and
ficomps
test
or
or
lods
js
sbb
jb
cwtl
or
or
jl
sarl
lods
les
adc
fs
or
xorb
dec
test
xor
ret
pop
and
add
or
adc
or
addb
push
loope
mov
sahf
jo
and
push
push
or
mov
out
mov
insb
andl
pop
xchg
inc
xchg
cmp
jle
dec
mov
in
out
mov
adc
and
je
test
or
sub
cs
cmpsb
pushw
nop
pusha
adc
add
xchg
mov
pop
push
dec
ljmp
jl
xchg
sbb
icebp
shl
cmp
adc
dec
mov
lods
roll
sbb
xor
cld
loopne
insb
mov
int3
mov
test
cld
mov
inc
add
inc
testb
dec
add
fsubr
mov
and
adc
movups
dec
dec
or
cmp
cltd
add
push
ficoms
add
roll
dec
pusha
mov
pop
in
push
xchg
push
clc
jbe
xor
outsb
inc
adc
sbb
ss
inc
adc
inc
xchg
test
mov
or
and
sahf
add
mov
dec
and
cmp
dec
orl
cs
xchg
shl
sbb
cmp
mov
inc
and
pop
and
fmull
sar
orl
push
add
sbb
hlt
dec
fs
outsb
test
cwtl
sbb
mov
lds
xor
or
sbb
xchg
adc
je
xor
movsb
xor
in
mov
push
inc
loop
cmp
xor
sub
mov
adc
pushf
rolb
lcall
pop
xchg
and
mov
push
jo
faddl
jmp
inc
add
popa
ror
push
push
rorl
push
cmp
out
xchg
xchg
mov
psraw
pop
movnti
xor
jns
mov
lods
mov
shll
adc
ss
cmp
stos
add
push
inc
cltd
loopne
mov
out
cltd
inc
je
pop
or
subb
add
pusha
addb
xor
xor
in
adc
push
orl
fwait
lcall
add
sarb
or
dec
and
mov
dec
test
xor
daa
orl
repnz
mov
add
inc
outsb
or
push
ljmp
adc
jne
hlt
loop
inc
cmp
sbb
insb
jb
push
loop
push
orb
in
int3
loop
inc
and
dec
and
loope
pusha
push
xchg
lods
add
pop
pop
int
and
xor
lods
add
push
mov
ret
out
push
push
cs
mov
mov
dec
popa
je,pn
xor
rorl
xor
loopne
adc
pop
push
pusha
mov
inc
mov
pop
dec
and
pop
pushf
or
add
jo
add
inc
xchg
faddl
data16
movsb
push
add
roll
loop
pusha
pusha
ret
repnz
lods
push
cmp
pusha
in
xor
movsb
js
mov
push
dec
add
adc
in
add
xor
add
cmp
jmp
dec
or
loope
jl
loopne
mov
loopne
mov
adc
pop
jo
es
pop
test
push
add
nop
pop
add
push
xchg
xor
or
push
or
rcll
adc
push
rolb
ss
push
ljmp
mov
xchg
dec
in
pop
sbb
pusha
sbb
shrb
pop
daa
or
mov
mov
nop
js
adc
sbb
dec
add
pusha
push
pop
sub
add
sub
or
xchg
leave
sub
outsb
cmp
ds
shll
je
sahf
addps
cmp
inc
push
cmp
xor
loopne
add
es
push
or
ret
xchg
adc
addr16
or
inc
in
roll
test
xor
or
out
lods
push
out
inc
or
dec
daa
xlat
enter
call
add
je
mov
mov
pop
es
lcall
mov
or
ret
unpcklps
mov
cwtl
push
adcl
dec
je
pop
xor
inc
pusha
lods
mov
jle
les
pusha
jo
je
push
or
es
lret
movsb
adc
sbb
pop
lds
lret
cli
sub
inc
loope
and
mov
sbb
cmp
xor
in
pop
fimull
pusha
daa
dec
xchg
mov
and
or
cli
xchg
sbb
push
add
push
and
or
xlat
add
cmp
xor
aad
sbb
pushw
xchg
sub
nop
and
cmp
cwtl
or
push
cmp
sbb
sub
inc
push
cmp
pushf
add
adc
loope
test
xchg
inc
gs
sbb
nop
loope
mov
inc
mov
test
push
into
sbb
pop
inc
and
sub
cmp
mov
adc
sbbl
and
sub
mov
enter
ds
inc
mov
dec
or
add
xor
adc
xchg
call
and
pusha
add
jp
pushf
push
jp
push
pop
loopne
push
xchg
scas
dec
push
and
mov
and
pusha
cmp
dec
fs
mov
fmull
jo
xor
mov
andb
or
sahf
xchg
sbb
lret
push
rolb
es
xchg
ss
out
xchg
pusha
cli
outsb
lods
addb
push
push
loopne
cwtl
lods
sbb
lcall
sbb
outsb
push
mov
push
and
push
and
add
add
dec
lods
mov
xor
dec
movsb
add
sub
xor
fs
or
mov
sahf
loopne
sub
sbbl
mov
push
js
test
push
mov
sbb
pusha
push
add
loopne
xor
mov
add
je
sbb
or
test
cs
inc
mov
and
dec
push
stos
cs
js
sahf
outsb
sbb
xchg
adc
sub
lods
push
sub
push
or
inc
push
lret
jle
cld
inc
loope
pop
mov
add
loopne
and
fsubs
in
adc
add
and
andb
lcall
push
clc
jl
push
cwtl
inc
icebp
bound
cwtl
data16
mov
test
adc
into
test
mov
or
cmp
stos
pop
and
ret
sub
lods
lcall
and
cli
mov
movsb
in
sbb
push
rorb
cs
xor
call
cwtl
pusha
sub
mov
pop
sbb
dec
push
aaa
push
adc
xorb
mov
aam
nop
xchg
sbb
pop
mov
test
andl
data16
cmp
jae,pn
clc
add
stos
jle
test
dec
push
dec
and
mov
xor
push
test
mov
mov
cli
rclb
fcoml
adc
fadd
pusha
stos
xchg
rolb
sbb
les
add
movnti
push
and
push
pusha
jo
push
aam
pusha
push
test
sub
pop
push
add
xor
rorl
push
test
or
imul
pusha
test
out
fs
xor
or
cli
cmp
mov
cmpsb
jo
or
jbe
push
xchg
sarb
stos
mov
cmp
cmpsb
outsb
pop
xchg
add
aam
adc
test
dec
push
and
adc
and
addb
add
or
push
pop
jp
jmp
sub
in
xchg
loopne
pop
adcb
add
xchg
in
nop
mov
or
dec
cmp
mov
push
cmp
adc
push
cmovb
cwtl
pusha
or
sub
sub
mov
inc
xchg
ret
jo
loop
es
push
movsb
or
sahf
shrl
inc
or
adc
rcll
add
push
js
bound
cmpsb
pop
pop
push
mov
adc
cmpsb
pop
loop
push
lds
push
and
test
or
outsb
push
shl
and
sub
pop
jle
cmpsb
sbb
or
pop
and
loope
addl
into
push
cmpsl
adc
ficoml
lret
xor
js
dec
psubd
add
loopne
xor
movsl
xor
sub
pop
xor
jb
inc
cmp
ficompl
xchg
add
cmp
loopne
and
jle
lods
jae
add
pop
cmpb
push
in
dec
or
in
cmp
or
mov
push
cmpsb
or
sbb
shlb
add
test
mov
mov
in
lods
cmp
js
loopne
xchg
shll
roll
cli
nop
mov
sbbl
out
add
jbe
popa
xor
dec
and
mov
sbb
xchg
int3
xorb
test
push
dec
test
ret
add
sbb
stos
hlt
or
movsb
push
lods
aam
sbb
shlb
push
xor
jb
xor
sub
add
dec
popa
mov
jo
testb
mov
test
rol
ror
rclb
pusha
mov
mov
and
cs
add
ljmp
je
mov
and
xor
cs
push
js
fsubs
sbb
sbb
mov
cli
or
push
subl
cmp
in
je
cmpb
push
push
insb
sbbl
inc
cmp
or
adcb
sub
mov
mov
js
insb
ds
push
xor
test
and
in
cmp
pusha
dec
ss
shll
shl
jb
jae
sbb
xor
and
sbb
add
mov
pusha
add
add
cwtl
or
cmp
push
or
rol
loopne
add
clc
shlb
adc
int3
punpckldq
fadds
mov
scas
mov
shl
out
shl
pop
pop
mov
test
cli
loopne
jo
xchg
in
sbb
cmp
xor
ja
or
cmp
push
call
and
or
push
sbb
andl
mov
sbb
jae
dec
mov
outsb
sub
test
or
insb
pop
add
xchg
mov
sbb
xchg
xor
dec
and
test
mov
rcll
rcl
or
adc
push
xor
xor
inc
sbb
sti
imul
add
mov
mov
cs
inc
shll
push
cwtl
pop
aaa
sub
out
lock
inc
dec
fists
and
pop
mov
rcl
loopne
inc
push
add
add
lcallw
cmpb
sbb
repnz
outsb
dec
adc
aad
andl
pop
aad
lret
mov
enter
insl
rcll
xor
rolb
add
addl
fiadds
or
xchg
sbbb
add
loop
andb
cmp
les
sub
push
sbb
jbe
or
sbb
in
out
push
sbb
add
and
cmp
scas
push
add
xor
loopne
push
in
sub
mov
lcall
mov
sahf
push
lods
jecxz
rorb
sbb
or
mov
add
fmuls
and
or
js
adc
inc
sbb
and
and
pop
int3
add
mov
add
fisubl
add
nop
dec
add
lods
or
mov
lcall
es
fsub
cs
inc
xchg
in
jb
test
jle
xor
sahf
inc
in
shrb
jp
inc
mov
or
push
mov
mov
ret
or
inc
mov
inc
push
adc
push
dec
adc
push
aam
sbb
enter
pusha
sbb
push
add
inc
cmpl
xlat
rclb
loopne
repnz
cmpl
add
pop
xor
jo
inc
pusha
sbb
add
inc
inc
rcrl
mov
xchg
jbe
fsts
movsb
fisubrs
adc
or
mov
sub
int3
or
sbb
es
cli
cwtl
adc
push
xchg
scas
xor
ljmp
adc
lcall
push
popa
adc
mov
add
shlb
in
pusha
cld
scas
dec
fs
dec
in
pop
fs
rol
inc
adc
mov
xchg
andl
call
push
xchg
jp
int3
mov
add
dec
pusha
mov
inc
fidivl
aam
enter
pop
test
or
inc
andl
lods
xchg
ret
inc
cs
sub
xchg
mov
push
insb
add
sbb
dec
faddl
or
jl
xchg
mov
mov
adc
movsl
cmpsb
call
shrl
idivb
push
cmpl
inc
or
orb
or
xchg
mov
push
shr
mov
adc
sbb
adc
xchg
outsb
sub
and
sub
push
xchg
or
ds
add
mov
push
mov
js
test
loope
adc
clc
add
or
out
cmp
dec
popa
add
cmp
repnz
xor
push
pop
adc
cs
add
fs
daa
cmp
xor
fcompl
cmp
mov
rorl
and
xchg
lret
or
add
scas
inc
jo
xor
shlb
pop
loope
ss
push
and
push
mov
into
push
push
mov
add
or
push
shrb
or
xchg
inc
add
orb
andb
and
xchg
pop
loope
xchg
and
fcoml
add
push
rorb
dec
dec
inc
test
lret
cmp
adc
bound
cmp
aam
xchg
lret
lock
test
and
bound
out
sbb
mov
sbb
xchg
add
mov
in
mov
inc
popa
jo
bound
pusha
inc
fimuls
shll
dec
in
out
insb
adc
outsb
and
and
push
cmp
mov
movsl
push
int
xchg
psubd
rcl
aaa
pusha
or
xchg
js
pusha
add
mulb
mov
loope
xor
push
or
rorb
mov
dec
cmp
add
roll
add
add
jo
cwtl
inc
or
rcrl
cmp
or
pop
add
cmovo
add
roll
dec
xchg
xor
pop
inc
pop
push
push
jbe
into
inc
add
jo
inc
inc
pop
inc
or
push
pusha
xor
adc
orb
gs
cmpsb
add
popa
push
push
push
or
push
mov
xchg
add
mov
sub
xchg
pusha
andb
add
xor
mov
xor
sbb
mov
andl
mov
out
test
scas
roll
enter
sub
enter
push
xchg
push
push
or
mov
cmpsb
xor
inc
push
sub
fmuls
xor
lcall
or
adc
cmp
addl
cmp
insl
addl
jnp
and
dec
andb
nop
loop
pop
inc
sbb
adc
adc
add
add
rcrb
sbb
add
shrl
adc
xchg
je
jbe
add
bound
cmp
sarb
lods
push
pop
stos
test
incb
dec
adc
add
sbb
add
orb
ret
outsb
add
out
cwtl
ret
sbb
jl
jo
xor
add
dec
or
mov
push
add
dec
and
cmp
les
push
insb
cmpb
dec
and
addb
mov
xor
jbe,pt
rorb
mov
pop
adc
add
loopne
xchg
adc
andb
xor
rcll
fdivrs
shll
add
jl
add
dec
push
and
pop
mov
ret
add
pop
xchg
dec
loope
lock
lods
sbbl
push
je
add
add
xor
adc
inc
dec
add
xor
adc
stos
or
jne
or
push
mov
add
or
test
ret
loopne
shrb
cmp
add
dec
add
mov
push
xchg
add
jo
push
icebp
push
clc
or
jb
dec
push
mov
lret
in
push
sbb
xor
xchg
sbb
loope
xchg
push
adc
sbb
jge
pop
xor
loop
mov
inc
rolb
add
leave
push
jp
sbbb
pusha
add
loopne
cwtl
mov
pusha
inc
es
loope
test
adc
or
mov
es
mov
loop
jno
test
sbb
push
or
adc
inc
push
repnz
xchg
add
imul
or
lcall
jo
or
dec
ret
sub
add
adc
rorl
divb
js
dec
sub
jb
dec
test
dec
pop
ljmp
data16
js
mov
xor
push
sbb
loopne
ljmp
pop
or
mov
mov
js
loopne
add
or
and
in
movsb
dec
popa
in
xor
sbb
and
ss
and
cmp
fidivrs
lret
push
add
push
xor
inc
lods
je
and
movsb
xor
adcb
loop
and
inc
push
ret
negb
and
adcb
jo
add
push
and
or
lret
sbb
pop
push
add
cmpsb
or
stos
push
push
adc
mov
cmp
mov
inc
adc
movsl
xor
pop
jle
jo
inc
push
xor
push
push
loopne
adc
inc
movsl
cs
pop
adc
sbbl
shll
loop
xor
imulb
and
and
mov
rol
inc
cwtl
inc
or
movsb
shll
fisubrl
cmp
adc
adc
mov
push
rorl
inc
mov
add
add
and
orb
xor
add
cmp
xchg
push
rol
xchg
or
sbb
jle
xor
cmp
shll
loope,pn
fidivs
ret
adc
bound
inc
push
jmp
xchg
cltd
or
pushf
dec
fiaddl
das
mov
stos
cmpb
sbb
cmpl
mov
mov
pop
roll
test
adc
mov
and
sub
cs
or
sbb
enter
dec
lods
fadds
adc
add
and
fsubs
xchg
shrb
push
int3
mov
jo
in
add
int3
cmp
cs
add
mov
popa
mov
add
xchg
dec
mov
adc
push
sub
inc
stos
xor
add
js,pt
addl
push
popa
and
in
js
push
sbb
sub
dec
mov
push
data16
mov
sbb
adc
aam
or
mov
pop
pop
add
sub
pusha
add
xchg
lcall
int3
mov
leave
or
xchg
push
or
xchg
push
js
loope
pop
add
and
inc
adc
jo
push
faddl
xchg
inc
jp
js
cs
or
inc
nop
negb
add
inc
insb
jbe
add
push
pusha
xchg
add
pop
rorl
xchg
dec
xchg
rolb
sub
shr
rorl
orl
shl
adc
sbbb
sbb
lret
add
lock
xor
adc
mov
jp
add
mov
cmpl
cmp
inc
orl
or
and
test
push
pop
outsb
les
adc
shrb
cld
xor
adc
jb
cmp
and
mov
jb
add
addb
adc
adc
cs
sub
or
test
mov
jne
push
pusha
or
pop
je
cs
push
xor
pop
mov
push
mov
mov
movsl
shlb
xchg
pop
push
sbb
xchg
lcall
inc
das
xor
jo
lcall
add
add
fs
into
pop
js
adc
sub
prefetch
jo
into
inc
sbbb
xchg
add
cld
sbb
push
add
test
rcll
xchg
dec
or
jo
dec
cs
dec
push
js
push
adc
mov
adc
push
sub
sbb
inc
sbb
addl
adc
and
and
loope
ss
dec
push
mov
lret
cld
ds
adc
cmp
cmpb
add
test
hlt
push
inc
xor
pop
roll
es
test
cmpsb
push
sbb
mov
jle
cmp
and
push
add
cmp
sub
add
add
loopne
ljmp
lret
add
dec
adc
je
and
sbb
and
out
je
inc
add
or
sub
or
sbb
fs
push
mov
add
pop
jo
faddl
mov
outsb
mov
xor
mov
adc
add
mov
mov
sarb
and
pusha
dec
shlb
mov
add
sub
push
add
pop
and
addl
or
or
xchg
add
push
js
or
mov
cmp
lcall
adc
adc
dec
sub
lock
add
cmp
xchg
sbb
mov
or
adc
pop
mov
push
ret
inc
pop
sarl
cwtl
loope
inc
pop
in
decb
push
pusha
or
or
cmp
loopne
aam
fmull
add
or
loopne
rcrb
inc
mov
jo
cmpsb
xor
call
or
xchg
nop
adc
mov
inc
je
add
add
rclb
sub
mov
shrl
or
jp
into
mov
mov
mov
mov
adc
mov
push
sbb
sbb
or
cs
adc
ds
int3
xor
add
rcrb
adc
shll
sarb
push
mov
clc
cmp
andb
stos
dec
outsb
loopne
into
and
push
loop
dec
push
inc
lds
or
ret
fisubs
cmp
scas
bound
and
mov
pusha
scas
xchg
in
add
ds
xor
mov
ds
push
ror
cs
mov
sbb
int
jl
or
xchg
inc
inc
adc
ret
sbb
pusha
add
ljmp
sbb
xchg
sbb
cmp
or
sbb
or
pusha
test
mov
add
xor
in
cli
add
in
loope
cltd
movsb
sbb
xor
adc
adc
add
push
mov
dec
mov
inc
push
subl
insl
jb
add
xchg
push
add
adc
or
cmp
lods
mov
mov
rclb
xchg
push
test
inc
divps
push
push
and
in
mov
xchg
sub
pop
rol
in
xor
cmp
je
adcl
pop
add
leave
pop
shll
and
and
push
data16
cltd
sub
inc
out
loopne
or
cmp
lret
pusha
adc
rclb
xor
and
add
hlt
addl
add
adc
xor
or
adc
movsb
test
mov
or
mov
push
cld
mov
jno
inc
jl
add
or
or
xchg
push
sbb
push
mov
add
adc
test
arpl
js
fs
pop
inc
mov
sub
int3
loop
insb
sahf
or
test
shlb
cmp
ljmp
pushf
add
jo
out
xchg
rcrb
ret
jl
mov
add
es
xchg
xchg
jne
sub
push
xor
inc
and
mov
pop
pusha
inc
mov
add
push
insb
enter
test
or
sbb
xchg
sub
loopne
add
add
push
mov
int3
pop
or
add
addb
ficoms
rorb
stos
dec
mov
and
sub
hlt
ss
adc
ret
loope
mov
sub
scas
xchg
xor
rorb
loopne
test
sbb
sub
loopne
shrl
cmp
or
pop
cmp
adc
mov
lods
inc
test
mov
sub
popa
add
sbb
push
pop
dec
les
mov
xchg
and
cli
mov
mov
decb
xchg
mov
ret
push
mov
outsb
testb
mov
sbb
adc
mov
mov
xchg
insl
setns
dec
xor
lcall
cmp
xor
push
into
and
sbb
pop
movsb
rorl
or
adc
mov
adc
into
addl
fsubl
lcall
cld
mov
sub
jo
out
hlt
or
add
mov
xor
test
js
outsb
or
inc
and
lret
push
sub
fs
lcall
mov
xor
lods
push
or
or
mov
inc
and
add
nop
add
push
orb
mov
pop
jo
add
lods
data16
bound
push
push
add
rolb
pusha
xchg
adc
loopne
cltd
and
sbb
mov
push
xchg
sbb
push
dec
inc
jo
popa
fdivl
lret
in
popa
xor
jp
or
ret
jle
test
or
mov
clc
add
mov
or
jo
add
xchg
and
loop
push
aam
bound
sub
sub
push
imul
jb
jp
int3
or
and
mov
sbb
mov
dec
pop
sarb
push
lea
cmp
sub
mov
sbb
jg
add
cwtl
dec
sub
pop
add
adc
pop
xchg
add
sub
inc
mov
and
inc
pusha
cbtw
data16
loop
sbb
sbb
cmp
dec
push
add
lret
xor
gs
xchg
dec
xor
inc
or
sbb
pop
sub
divb
and
mov
shlb
bound
int3
es
add
rclb
lea
and
or
xchg
or
test
cli
test
test
sbb
mov
shlb
mov
or
cltd
outsb
sbb
sub
add
jl
test
int3
and
inc
adc
xor
push
xchg
lcall
push
addb
clc
xchg
inc
rcrb
push
xchg
dec
push
add
pop
and
enter
adc
ficomps
inc
ret
sub
addb
sbb
ret
xor
xchg
jo
rorb
xchg
dec
or
in
test
add
sub
mov
jbe
adc
cltd
adc
addl
xchg
pop
repnz
inc
cmp
ljmp
add
xchg
call
inc
loopne
sbbl
add
push
adc
jp
aam
adc
add
push
add
jo
xchg
inc
add
xor
shl
sbb
test
and
add
sub
xor
data16
pushw
gs
bound
ret
popa
or
and
dec
movsl
mov
xor
test
mov
dec
orb
and
add
loopne
int3
adc
cwtl
dec
pop
movsl
lds
xor
andl
pusha
and
addl
or
jo
test
dec
adc
mov
xor
fiaddl
adc
mov
sub
mov
in
loop
cmp
xor
cld
mov
xor
inc
inc
adc
or
inc
adc
cltd
loop
test
push
xchg
loopne
loope
dec
inc
sub
or
xor
cmc
mov
rolb
lock
jbe
subps
test
push
incb
adc
push
sbb
add
mov
cmp
mov
inc
cltd
fdivs
mov
push
xchg
pushf
push
lods
push
cmp
sub
out
cmpl
in
jbe
mov
sbb
sbb
push
popf
test
push
or
adc
push
or
pusha
in
push
jb
nop
pop
xchg
inc
push
sub
rorl
fcompl
js
adc
inc
xor
jo
pop
mov
add
add
pusha
mov
pop
arpl
sub
sbb
cmp
adc
push
inc
movsl
ss
lock
dec
push
adc
push
test
or
shll
out
push
xor
dec
add
or
adc
repnz
sbb
test
add
clc
ds
mov
inc
cs
push
gs
loop
add
scas
or
mov
push
mov
in
dec
in
cld
jo
hlt
add
add
xchg
push
xor
sub
sbbb
rorb
cld
movsb
push
inc
inc
xchg
and
and
ss
cmp
push
and
push
xchg
cltd
lods
mov
jl
ret
and
mov
lret
pushf
push
jb
ret
sub
dec
loop
adc
out
adc
ss
pusha
adc
and
pop
sbb
add
sbb
rorb
adc
loope
subb
mov
push
push
mov
xor
sbb
test
inc
add
andl
or
add
adc
cli
add
mov
xchg
sub
sub
mov
test
ljmp
ret
jb
push
pusha
pop
or
pop
mov
loopne
sub
xchg
addb
scas
rorl
mov
inc
mov
mov
jae
and
adc
dec
pop
ret
rcll
inc
sahf
js
pop
push
adc
mov
mov
add
dec
subl
mov
movsb
inc
jle
aam
int
sbb
jo
in
jp
inc
push
pop
or
mov
test
icebp
fisubrl
loop
add
mov
out
xorb
mov
js
dec
cmp
mov
sub
shlb
sti
push
testb
pop
dec
xor
test
pop
push
inc
pushf
push
add
dec
or
push
and
mov
pop
mov
bound
inc
popa
push
sbb
testb
adc
add
and
inc
in
out
data16
orb
or
loopne
les
mov
sahf
xchg
shll
pop
lods
fsubrl
xchg
loop
adc
or
xchg
mulb
inc
fmulp
mov
adc
inc
xchg
mov
loopne
test
call
mov
inc
xchg
push
inc
inc
and
and
jbe
lcall
pusha
jb
int3
cmp
mov
inc
xor
xchg
inc
ret
push
mov
cmp
xchg
and
sbb
fadds
xchg
push
mov
inc
bound
inc
loop
loopne
test
or
push
or
push
add
test
inc
sub
andl
cmp
add
inc
popa
rolb
adc
cmp
cld
sbb
pop
sbb
dec
lock
inc
add
jo
jle
add
mov
int3
loopne
mov
faddp
mov
sbb
xchg
push
and
into
inc
dec
sub
pop
loope
mov
movsb
psubsb
add
rol
sbb
xchg
lods
sbb
adc
add
push
stos
push
fs
jle
xor
and
cmp
ljmp
xor
add
inc
dec
loop
rcrl
in
sbb
js
sub
mov
sub
pop
sbb
jb
aam
lea
mov
mov
inc
sbb
mov
push
ljmp
out
or
movsb
adc
and
enter
roll
subb
cwtl
adc
push
fs
push
push
fs
pushf
roll
sbb
push
stos
xor
add
inc
or
and
shll
and
stos
sub
roll
push
and
cltd
ret
pop
ds
or
fimull
push
outsb
cmp
dec
and
add
or
add
push
outsb
adc
add
andl
push
sub
call
cmc
test
mov
xor
dec
fidivrl
adc
test
add
or
jecxz
adc
test
push
mov
dec
data16
pop
push
or
fidivl
fsubrl
xchg
adc
cs
xor
inc
mov
and
or
pop
mov
int3
push
or
inc
nop
dec
add
test
xchg
fdivl
rclb
or
stos
loop
aam
sbb
push
adc
roll
daa
stos
rorb
add
jo
into
pop
push
inc
insb
sub
sbb
lock
and
pop
push
add
andl
fidivrs
xor
sbb
sub
add
ljmp
xor
and
or
bound
adc
subb
mov
pop
add
sbb
push
mov
xchg
and
push
inc
push
call
add
sar
loope
xchg
add
ficomps
stos
add
or
ret
xorl
repnz
inc
subps
or
shrl
rolb
hlt
add
loope
int
xor
lods
cld
ds
aam
sbb
adc
loopne
cwtl
or
fadd
andb
ret
lcall
add
push
pop
push
jo
or
jl
adc
test
inc
or
xchg
inc
add
insb
sbb
xchg
add
jne
xchg
loopne
int3
mov
mov
popa
dec
or
inc
xor
mov
mov
add
add
test
stos
pop
xchg
push
sbb
pop
pusha
or
loopne
jle
pop
loope
nop
adc
push
mov
or
push
and
cld
add
push
and
mov
movsb
add
cmp
xchg
les
sub
add
mov
adc
and
dec
sbb
mov
mov
sbb
mov
adc
adc
and
hlt
es
add
mov
movsb
mov
sub
lock
ret
sbb
into
mov
add
add
push
adc
dec
inc
push
sbb
pusha
lcall
sub
ret
or
add
inc
loopne
push
xor
sbbl
ret
jb
mov
sahf
dec
orb
jno
xor
xchg
add
push
xor
jb
and
test
cmpsb
add
xor
call
sbb
xchg
insb
or
ss
insb
or
or
sbb
inc
pushaw
push
jp
testb
sbbb
mov
int
add
or
sub
or
push
and
mov
xchg
adc
mov
add
cs
aam
daa
or
push
dec
test
add
and
call
xchg
mov
xchg
pusha
out
or
fsubr
andb
and
out
pop
cld
pop
je
test
adc
adc
movsl
xor
push
faddl
or
sub
mov
andl
test
xor
mov
dec
xor
add
loopne
pop
and
mov
xchg
inc
mov
xchg
cltd
push
dec
or
or
add
mov
or
inc
mov
push
and
orl
xchg
fsubl
insb
shlb
add
push
mov
cmp
inc
adc
cmp
push
push
ret
and
or
cli
xor
pusha
bound
inc
jp
mov
pusha
xor
add
int3
in
push
add
adc
gs
and
cli
orb
mov
orb
shll
shlb
in
insb
fdivrs
cmp
sbb
pusha
and
cmp
or
push
adc
or
lldt
pushf
push
mov
add
ret
out
xor
icebp
ret
and
addb
in
ret
mov
cmp
pop
or
push
cwtl
dec
push
in
mov
aam
push
push
rcrb
xchg
nop
or
cmp
loopne
xor
popa
mov
push
xchg
or
rol
js
jp
push
test
mov
mov
lcall
and
xor
outsb
mov
adc
xchg
jbe
data16
loopne
movsl
add
call
push
mov
rcrb
shlb
lcall
loopne
rcrl
sub
xor
test
add
xchg
dec
lock
xchg
jo
xchg
inc
push
popf
in
adc
shll
adc
sub
mov
orb
es
data16
pop
adc
mov
and
push
inc
xor
cmp
and
ret
movsl
andb
cwtl
loope
es
and
sub
push
mov
inc
lods
dec
add
jnp
add
push
data16
lcall
rolb
adc
or
insl
xor
lock
hlt
sbb
adc
push
subb
cmp
adc
adc
rclb
xchg
popa
xor
rclb
adc
loop
test
dec
inc
addb
mov
popf
leave
dec
sub
or
call
or
js
aam
sahf
pusha
adcl
push
xor
ret
cmp
mov
movsb
jo
add
add
push
pop
in
out
rolb
stos
inc
data16
xor
inc
xor
loope
mov
fs
lret
test
adc
add
inc
mov
add
fs
lock
test
sbb
stos
jo
dec
dec
sbb
push
sbb
or
xor
aam
jne
and
mov
adc
inc
push
mov
ret
addl
inc
lock
sbb
orb
mov
loopne
or
xor
inc
addb
inc
pop
lock
in
aam
xor
add
and
punpcklbw
stos
rorl
or
lock
fcmovbe
sahf
test
jo
stos
pop
negb
add
adc
rclb
and
adc
xor
mov
cwtl
nop
adc
push
test
cmp
enter
mov
subl
adcl
inc
movsb
xor
jbe
mov
adc
mov
test
sbb
cmpsb
xor
scas
pop
push
orl
sub
adc
add
or
xor
inc
addl
pop
adc
push
test
inc
sub
sahf
adc
rcll
test
xor
mov
loop
ss
xor
aam
pop
mov
and
sbbl
fs
jo
mov
and
pushf
nop
lods
add
xor
jbe
in
enter
pop
cwtl
push
ss
xchg
pusha
jo
les
and
pop
mov
int3
push
mov
inc
loop
mov
loope
mov
int3
in
dec
cwtl
loop
enter
sbb
mov
xchg
aad
pminub
movsb
or
adc
xchg
push
out
cmpsb
shlb
outsb
sub
bswap
outsb
push
mov
js
sbb
cmp
je
int3
inc
mov
mov
dec
loope
push
lock
ret
sbb
les
inc
bound
pushf
and
enter
js
cltd
dec
add
sbbb
sub
add
loope
test
add
sub
rol
inc
xchg
adc
sub
add
les
test
pusha
movsb
sbb
push
or
ds
add
inc
jb
jl
sbb
loopne
xor
or
pop
popf
rclb
rorb
inc
or
mov
and
inc
mov
test
add
push
or
jp
in
pop
push
inc
xchg
and
je
adc
call
push
loope
xchg
add
lock
xor
test
mov
mov
aam
data16
sbb
add
pop
inc
inc
xor
xchg
add
mov
push
and
push
shlb
cwtl
ret
js
mov
into
pusha
mov
adc
mov
sbbl
xchg
and
push
cwtl
inc
add
inc
test
dec
or
dec
sbb
or
shl
or
ror
ljmp
sahf
add
mov
xchg
sbb
add
sub
dec
mov
movb
adc
push
outsb
mov
and
jl
test
js
pusha
push
mov
sahf
sbbb
jle
sub
or
xchg
mov
jo
xor
add
lock
adc
adc
subl
push
ret
add
popf
test
xchg
or
add
cs
sbb
adc
lcall
in
mov
popa
push
ret
ljmp
cltd
add
push
mov
jo
insl
sarb
nop
push
mov
inc
inc
and
dec
sar
ret
xchg
inc
inc
adc
push
pusha
inc
or
and
in
nop
inc
xor
dec
jp
or
push
hlt
clc
sbb
push
add
lret
add
aam
xchg
push
add
push
rclb
or
add
sbb
loope
inc
sub
dec
xor
push
mov
sub
and
shlb
mov
sbb
ss
or
loopne
push
xchg
add
inc
cmp
xor
mov
xor
mov
lcall
mov
sub
in
fs
fsubrs
rorb
pushw
add
unpcklps
xchg
dec
mov
pusha
jo
and
or
mov
cmp
stos
ret
cmp
push
js
cmp
inc
cwtl
pusha
adc
ret
add
adc
cmpl
and
dec
or
cmp
xchg
test
and
and
pop
add
lds
mov
inc
jp
and
fcoms
and
add
pop
mov
andb
xor
push
sub
add
pop
and
push
mov
push
jo
fidivrl
add
dec
popa
sub
push
sub
push
mov
fs
in
adc
xchg
aam
pop
or
inc
into
pop
mov
addb
adc
ficoms
or
push
push
sub
fidivrs
and
cmp
or
add
mov
ret
inc
lods
sub
xchg
jmp
pop
add
push
push
inc
mov
scas
or
loop
pop
pop
mov
shll
js
push
shlb
mov
add
aam
or
ret
mov
cmp
inc
inc
cmp
add
es
adc
jo
jno
push
addr16
add
add
push
and
mov
loopne
ret
cwtl
mov
call
cwtl
sub
or
mov
xchg
dec
fs
or
ret
out
je
inc
sarb
push
push
shlb
daa
jo
and
ret
add
jo
and
add
add
sbb
add
xchg
sahf
sub
ljmp
mov
adc
mov
arpl
inc
je
add
addb
dec
dec
and
add
mov
add
aam
subb
icebp
or
stos
add
push
arpl
pop
mov
ret
gs
adc
mov
push
or
sbb
or
pusha
orb
nop
fmuls
adc
xor
addb
test
jo
jl
xor
push
mov
add
sbb
shlb
jae
in
cs
push
sbb
pop
or
adcl
addb
andb
sub
repnz
and
rclb
decl
inc
sub
inc
mov
add
inc
add
add
mov
inc
dec
push
jl
sub
outsb
decl
add
ret
xor
cld
fisttpl
inc
mov
rolb
add
mov
fmul
ret
push
dec
ss
mov
cmp
dec
sub
mov
nop
dec
dec
inc
popa
inc
inc
fdivs
jns
mov
fimull
inc
jb
dec
add
push
push
stc
mov
add
mov
jno
cmpsb
dec
fwait
mov
fisubrs
xchg
ja
imul
cmpsb
loopne
outsl
fs
out
inc
pop
inc
addr16
push
push
dec
jne
fsubrp
pop
push
jne
outsb
mov
mov
imul
add
push
cld
scas
shlb
dec
lea
push
xchg
push
pop
jo
cld
fsubl
xor
add
fiadds
inc
mov
insl
push
add
and
fisttpl
iret
jmp
sahf
dec
jbe
push
lea
push
push
cmp
push
loope
add
in
add
add
lds
lcall
fdivrl
or
jge
pop
xchg
dec
bound
lea
lret
testl
dec
add
loop
ret
mov
push
jno
add
dec
add
push
int3
mov
fsubp
xorb
incb
and
xor
push
dec
pusha
clc
inc
mov
int3
lock
lret
or
fs
mov
ret
out
sahf
addr16
jns
cli
pop
dec
mov
fistps
insl
lock
dec
push
fs
dec
add
lods
cltd
dec
mov
shl
cmp
sub
stos
jno
jne
cmp
adc
xor
pop
jg
mov
pop
add
rorl
bound
xor
inc
xor
jl
jmp
push
fcoms
std
xadd
shlb
mov
push
sbb
insl
add
push
push
lock
mov
mov
mov
push
push
inc
mov
or
les
sbb
repnz
loopne
mov
in
dec
insl
pushf
push
mov
dec
aaa
pop
adc
movl
inc
cmp
test
bnd
fnstsw
decb
jne
ljmp
movsb
mov
mov
xor
ds
jno
push
inc
jp
push
das
outsb
add
add
cmp
inc
rorb
mov
dec
inc
push
mov
stos
pop
inc
xlat
enter
cmpsl
mov
inc
pop
rclb
je
or
js
pop
ss
in
sub
dec
loopne
mov
addr16
fadd
dec
dec
sbbb
mov
cmpsl
ljmp
fsubrl
xchg
mov
test
pop
fcomi
mov
sbb
dec
hlt
sub
jbe
dec
adc
loop
popa
stos
cmpsb
lret
mov
addr16
ds
mov
loopne
mov
mov
repnz
or
pop
mov
shlb
mov
cld
push
stos
lock
or
adc
lds
inc
xlat
lret
repnz
mov
aas
pop
fiadds
jbe
leave
xor
cmp
xchg
dec
stc
pop
push
inc
dec
adc
mov
fdivp
mov
dec
dec
movups
fwait
push
mov
sbb
insb
ret
dec
pop
hlt
mov
mov
cmpsl
rcll
add
pop
loopne
pop
dec
add
jmp
in
inc
mov
ss
xor
dec
push
fists
aaa
push
dec
pop
inc
push
in
or
or
sti
push
pop
adc
jnp
shrb
inc
xor
jo
popa
pop
or
mov
movb
call
inc
dec
movl
ret
test
jge
mov
dec
scas
pop
push
push
inc
ds
dec
cltd
pop
xchg
fsubr
clc
ss
or
out
je
in
inc
in
repz
stos
enter
dec
jb
dec
faddp
mov
jecxz
push
dec
pop
bound
rol
call
addr16
dec
addl
dec
and
bound
xor
dec
inc
lret
mov
test
out
in
or
cmp
loop
dec
jb
cli
mov
dec
sbb
pop
xor
adc
inc
femms
jnp
ja
mov
xor
add
mov
stos
sbb
inc
hlt
push
add
mov
xor
jle
push
dec
jbe
add
shll
jns
push
mov
repz
pop
dec
fdivrs
sbb
sub
push
sarl
call
je
jo
aaa
mov
jmp
jno
add
call
outsl
adc
sub
adc
imul
dec
push
aad
inc
enter
inc
fidivl
push
adcl
mov
call
xchg
mov
out
jo
loopne
int
jns
addr16
mov
ret
std
sbb
dec
sub
mov
subb
pusha
xor
add
pushf
jge
shl
outsl
js
push
stos
and
push
nop
or
icebp
or
push
jns
aaa
pop
dec
outsl
push
inc
insb
push
dec
lret
cmpsl
iret
ss
fstpt
popa
dec
mov
mov
pop
xor
insl
insl
pop
clc
aam
sysenter
mov
cmp
sub
mov
or
sbb
inc
sub
mov
xchg
xchg
jb
dec
aas
jo
inc
sti
sti
mov
cmp
cmc
mov
adc
or
ss
jne
bound
add
dec
inc
bound
jo
popa
push
mov
add
add
shll
pushf
ret
gs
cli
cmpsl
rorl
jno
shl
xor
jo
push
push
or
pop
jne
jge
jmp
repz
push
into
dec
push
arpl
xchg
test
iret
mov
mov
dec
inc
stos
stc
adc
xor
subb
pop
jno
jle
cltd
out
cmpsl
inc
dec
dec
mov
movb
lret
cmpsb
cmp
inc
aaa
loopne
bound
ret
sarb
or
orl
ret
movsl
sti
inc
dec
shrb
fnstsw
lods
or
inc
push
jo
inc
pop
dec
ffree
xlat
call
mov
push
aaa
push
xor
adc
push
or
push
inc
outsb
add
call
push
pop
or
aas
imul
add
cs
cmp
outsl
inc
dec
dec
out
iret
lock
cmp
repz
outsl
jo
lret
jp
cmc
or
cwtl
shlb
insl
mov
in
cmp
mov
dec
scas
fninit
lods
inc
dec
insl
shll
inc
inc
dec
inc
std
aaa
dec
xor
ret
dec
xor
push
push
add
jmp
outsl
jns
ret
mov
add
roll
insb
push
push
jno
adc
jb
push
lret
push
rcll
ret
sbb
insb
jle
inc
push
inc
ds
shll
add
inc
add
cmpsb
fimull
stos
inc
repnz
inc
push
dec
add
loopne
cmp
or
shll
negl
lret
xor
loopne
sub
in
jecxz
pop
mov
imul
sbb
outsb
pop
push
pusha
inc
add
iret
outsb
fsubrp
popa
bound
inc
mov
push
or
dec
jne
rolb
add
pop
cld
in
or
inc
js
pop
insb
repnz
out
sti
rclb
cmpsb
sbb
mov
add
shll
mov
xor
dec
mov
aaa
je
push
int
push
or
inc
inc
push
xor
mov
outsl
hlt
fstps
mov
jbe
push
xorb
call
push
jns
cmpsb
xchg
and
into
mov
mov
sbb
adc
inc
std
incb
pop
push
pop
mov
rcl
clc
movsb
dec
or
lods
incb
or
xor
insb
mov
jo
inc
inc
jae
mov
xchg
inc
xchg
dec
in
lock
mov
jne
xor
aad
mul
les
fdivr
push
gs
sbb
jns
inc
enter
std
shrb
pushf
xchg
inc
inc
sbb
mov
dec
loopne
cmp
push
inc
cwtl
mul
jle
pop
les
jg
inc
push
pop
in
outsl
out
sbb
mov
push
inc
add
push
and
mov
dec
es
rcll
dec
pop
es
xor
in
jns
or
ficomps
mov
mov
pop
ljmp
and
push
push
xchg
roll
outsb
jae
hlt
scas
leave
lock
dec
inc
dec
push
mov
pop
ds
mov
stc
push
add
fs
dec
dec
jbe
mov
std
icebp
push
push
dec
fidivrl
dec
inc
dec
cli
xorl
cmc
inc
data16
cld
out
push
dec
repz
dec
cli
sbb
adc
fs
sahf
pop
jbe
jge
push
jo
or
bound
jb
cld
mov
jmp
lret
adc
cli
mov
inc
test
dec
add
lods
sub
push
mov
arpl
mov
test
or
shlb
push
cs
inc
xor
jbe
push
mov
loopne
clc
fbld
fcmovb
mov
dec
push
fildll
xor
cmpsb
cmp
inc
scas
les
fcmovne
dec
int3
jne
xor
repnz
push
insl
mov
sbb
out
arpl
inc
xchg
rcrl
or
pop
retw
lds
ja
outsl
ss
loopne
mov
jae
jb
out
gs
adc
inc
pop
test
stos
sub
js
ja
xor
dec
sub
inc
inc
mov
and
insb
imul
mov
sbb
push
pop
push
out
dec
mov
std
mov
or
sarb
jns
dec
lahf
fsubrs
push
jbe
push
mov
xor
inc
popf
sbb
dec
fdivr
add
adc
xor
inc
arpl
hlt
js
adc
jg
mov
push
cmp
mov
in
ret
pusha
mov
je
jle
sbb
inc
pop
out
outsb
push
push
movsb
test
jg
sub
mov
xor
inc
xor
push
dec
les
lahf
adc
adc
call
dec
add
ret
in
sahf
jno
mov
les
and
jno
jbe
flds
cs
or
jno
ret
fcoml
xchg
js
pop
adc
jge
fsubrl
ret
into
dec
mov
fadd
xor
outsb
orb
inc
out
pop
je
lock
pop
rorb
cmp
pop
orb
jne
dec
pop
pop
divb
mov
add
jp
adc
clc
dec
pushf
ret
test
ret
dec
push
inc
jle
adc
mov
cmp
fisubrl
inc
aas
js
pusha
push
inc
ja
xchg
push
out
pusha
dec
jns
shl
inc
fiadds
pop
fiadds
xor
dec
sbb
dec
stos
or
test
add
dec
bound
xchg
or
dec
jp
and
xchg
and
ja
outsl
popa
adc
dec
mov
insl
cwtl
inc
rcll
mov
mov
bound
push
push
jbe
outsl
push
dec
push
mov
xor
push
lret
sysexit
sbb
dec
dec
mov
push
dec
dec
icebp
movsb
data16
pop
dec
inc
outsl
inc
and
jno
outsl
inc
jo
sbb
jo
add
jo
inc
xlat
outsb
cld
or
js
push
adc
jmp
push
call
insb
cld
mov
inc
dec
fdivs
aas
push
xor
divl
orb
push
lock
or
shlb
jbe
push
fmull
pop
cs
dec
int3
and
cmp
lea
push
push
mov
shl
outsb
xor
lcall
addl
push
jmp
pop
xor
fadd
dec
xor
in
inc
ja
data16
aad
push
test
hlt
xchg
ret
xchg
jl
aad
addr16
xor
push
dec
outsb
dec
dec
andl
add
inc
adc
inc
fadds
dec
into
stc
lahf
outsl
xlat
push
adc
xchg
mov
adc
jnp
push
ret
or
rcrl
dec
dec
sbb
imul
xchg
out
dec
xor
js
and
push
in
pop
pop
call
inc
xchg
lret
jge
stc
js
mov
mov
xor
pop
xor
sbb
inc
mov
addb
dec
xor
and
scas
in
out
pop
dec
js
jns
inc
ss
ss
push
sub
cli
xchg
pop
subl
movsb
out
je
jns
rcrl
xor
insl
insl
inc
ja
shl
arpl
outsl
ret
loopne
cld
mov
repz
fwait
mov
inc
fimull
aaa
inc
imul
lea
mov
rcrb
jae
ficompl
sahf
push
ss
adc
mov
dec
push
push
adc
add
lds
roll
pop
lret
pop
inc
mov
lea
mov
add
mov
push
insb
cmp
push
repnz
movl
clc
inc
sub
mov
push
das
ficomps
insl
push
jl
jnp
stos
ljmp
lea
jecxz
dec
jno
push
frstor
into
push
repnz
cltd
mov
inc
popl
dec
inc
lcall
or
xchg
xor
cld
rorl
incl
popa
push
adc
js
je
loope
push
xor
clc
mov
inc
lock
imul
push
add
xchg
xor
inc
cltd
sti
test
mov
aam
imul
out
rcr
dec
pop
add
js
hlt
add
xorb
xchg
outsb
divb
xchg
pop
mov
rcrl
into
movsl
mov
xor
in
ljmp
dec
cmp
inc
push
push
sbb
jmp
int3
and
jmp
out
xor
jmp
ss
repnz
dec
inc
rolb
mov
aam
call
mov
aaa
outsb
imul
fcmove
lods
or
pop
fucomp
push
xor
inc
mov
push
add
out
inc
fistl
cmp
rclb
dec
push
xor
pop
clc
call
add
js
inc
insl
mov
ss
sub
mov
ljmp
or
pop
cmpsl
cmp
pop
dec
jae
test
pop
sbb
stc
in
in
add
ljmp
push
cmp
cmp
cltd
fstp
mov
ja
mov
bound
arpl
inc
rcrl
push
imul
insb
movsb
and
dec
cmp
outsl
arpl
iret
and
imul
jne
push
stos
insl
mov
mov
sub
jmp
dec
or
std
rclb
push
push
pop
popf
outsb
inc
cmp
stos
pop
pusha
push
stos
xchg
loopne
dec
dec
xchg
push
pushf
or
push
imul
bound
test
sub
push
pop
test
icebp
dec
adc
clc
or
dec
out
push
enter
push
pop
int
jl
mov
clc
xor
add
jp
fisttpll
pop
outsb
inc
cli
push
je
fucomip
je
inc
adc
jo
mov
push
inc
sbb
lods
inc
push
xchg
or
stos
mov
js
dec
xor
dec
fildll
dec
inc
pop
out
popa
js
ss
add
cmp
in
scas
fcmove
push
dec
inc
push
sarl
daa
jle
jp
jl
push
xor
jo
dec
dec
push
test
outsl
push
push
loopne
shl
cmp
inc
shlb
push
pop
dec
inc
push
testl
ret
dec
jae
dec
stos
adc
xor
mov
outsb
cmpl
inc
outsb
dec
push
push
outsl
stos
xchg
cmc
cmp
shll
sti
scas
cmp
add
dec
repnz
in
inc
stos
pop
pop
mov
adc
sbb
cltd
ds
sbb
cld
xchg
pop
sbb
loopne
xor
add
test
xchg
jne
sub
out
cs
mov
push
push
arpl
int
xchg
add
arpl
sbb
movsb
dec
or
scas
add
daa
lods
pop
add
jecxz
jb
sbb
lds
pop
pop
jns
xor
mov
inc
pop
mov
bound
and
nop
sbb
es
sbb
cld
jne
xchg
arpl
repnz
arpl
je
pop
arpl
push
sbb
cmp
insl
jbe
mov
arpl
inc
sub
inc
mov
adc
jns
fnstenv
inc
pop
pop
pop
xchg
std
pusha
add
leave
xor
xchg
cmp
and
add
mov
or
sub
scas
add
sbb
add
lds
aaa
mov
enter
push
pop
jae
sbb
stos
dec
add
in
push
in
ss
or
inc
and
daa
arpl
mov
shlb
bound
dec
push
stc
mov
movl
mov
dec
pop
cmpsl
icebp
int3
dec
pusha
pop
enter
imul
sbb
mov
sub
popw
and
scas
add
pop
add
mov
pusha
adc
sti
push
mov
in
mov
mov
orl
enter
dec
icebp
out
and
xor
inc
jg
cs
pop
test
mov
lret
add
push
sbb
popa
add
mov
movsb
shufps
or
imul
or
mov
push
sbb
loope
and
out
aaa
inc
push
or
insl
and
sub
ss
mov
lods
dec
pop
fsubs
fsubrl
scas
pushf
sarl
in
mov
out
xor
push
lds
shll
add
xchg
out
pop
lds
int
xor
push
jbe
add
arpl
dec
mov
in
call
bound
pop
ljmp
ret
dec
out
xor
sbb
add
push
es
inc
mov
hlt
inc
dec
mov
inc
xchg
jmp
popa
rcrl
test
js
fcompl
call
into
push
je
popa
outsl
push
outsl
adc
sub
ja
push
jbe
ljmp
xor
fstpl
cwtl
leave
outsl
inc
dec
xchg
lret
mov
dec
inc
inc
nop
dec
bnd
incl
mov
loopne
inc
inc
add
loope
dec
jns
jmp
insb
imul
jge
in
aaa
pusha
jne
inc
mov
dec
ljmp
into
rcr
out
inc
push
lcall
inc
outsl
pushf
cmp
push
or
cld
imul
mov
mov
inc
aas
cmc
and
push
mov
dec
jns
pop
xor
in
ljmp
push
push
push
dec
adc
push
bound
inc
cmpsb
add
cmp
idiv
dec
lock
loop
outsb
ss
roll
mov
jmp
add
cmp
data16
dec
lods
add
jle
inc
rol
in
push
pop
ljmp
dec
xchg
add
mov
inc
add
push
shlb
jne
cmp
daa
or
mov
shl
mov
mov
lock
orl
pop
movsl
mov
or
addb
test
and
out
mov
pop
je
cmpsb
mov
out
push
test
dec
jl
data16
loopne
popa
push
jae
imul
xor
add
bound
repz
adc
movsb
push
push
gs
shlb
push
jo
mov
or
scas
add
cmpsl
dec
clc
mulb
sbb
push
push
in
pop
push
push
xlat
inc
dec
inc
pusha
inc
pop
sarl
sub
call
and
loopne
rorl
push
push
insb
call
or
push
adc
jp
add
leave
or
fists
dec
dec
jo
icebp
jge
js
sbb
inc
inc
xchg
test
push
adc
ja
inc
jp
jg
imul
shl
pop
jb
jmp
test
int
cmp
mov
push
popl
popa
inc
cmovs
test
faddl
ret
mov
mov
lret
sub
mov
pop
lret
cmp
addr16
add
adcb
cld
push
mov
xchg
fisttpll
dec
out
mul
dec
mov
aaa
dec
insb
push
outsb
jno
jo
into
inc
rclb
pop
lock
pop
repz
rolb
pop
pop
ret
push
xor
adc
cmpsl
pop
sbb
adc
xchg
mov
dec
add
xor
pop
inc
inc
out
iret
hlt
mov
mov
inc
xor
inc
xchg
lock
in
shll
hlt
jmp
dec
addr16
dec
dec
add
pop
or
push
cmp
aad
gs
mov
lret
pusha
and
push
insl
jg
mov
push
inc
dec
jle
cs
pop
xor
je
adc
sbb
xor
xor
xchg
xchg
insl
hlt
arpl
dec
cmp
adc
adc
stc
xchg
add
arpl
pop
add
pop
repnz
arpl
xchg
add
sarb
shrb
pop
sbb
fimuls
push
or
test
jb
shrl
pop
inc
sbb
xchg
sub
xorb
jno
pop
cmp
divb
add
mov
jo
subl
sub
or
xchg
paddd
xchg
pushl
add
jg
push
testl
xor
mov
shrl
sbb
orb
in
cmp
sub
jbe
mov
mov
sbb
xchg
out
or
nop
cmp
push
adc
sahf
xchg
lret
push
lea
loope
push
mov
or
mov
int3
xchg
mov
sarb
sahf
into
aas
sti
cmp
xchg
xchg
ret
mov
inc
dec
adc
subl
mov
test
xor
pop
dec
dec
fisttpll
sbb
into
adc
cmp
mov
sbb
jae
out
inc
or
test
out
out
subl
xchg
add
push
mov
aad
xchg
inc
pop
pop
inc
cmpsl
add
push
leave
and
in
and
popa
loope
enter
ss
dec
insl
ljmp
mov
xor
outsb
push
or
lock
xor
in
inc
int
mov
dec
sbb
addl
popa
inc
cmpsb
sub
std
jge
push
xchg
pop
mov
and
stos
addr16
shll
inc
shlb
adc
shrl
mov
push
adc
pop
mov
adc
adc
in
sub
addb
fidivs
dec
shlb
and
mov
cli
addl
mov
popa
rol
jo
mov
repz
mov
xchg
adc
lds
xchg
xor
nop
mov
les
loope
and
test
adc
dec
ret
popw
repnz
mov
loope
inc
inc
lcall
std
lahf
push
movsb
ljmp
xchg
pop
mov
jo
imul
repnz
mov
sub
xor
jne
sbb
push
mov
stos
jecxz
mov
cs
push
test
push
lahf
and
mov
adc
enter
sbb
rorl
dec
idiv
jno
inc
movsl
inc
fnstsw
pop
repnz
int
sub
pop
inc
sbbb
adc
jno
fistps
lret
stos
xchg
xchg
icebp
xlat
jo
ss
jo
xor
add
jg
ss
fmuls
jae
add
push
repz
lret
jmp
ret
dec
inc
add
inc
inc
xor
mov
xor
aam
mov
popa
or
hlt
jg
jmp
push
loopne
dec
dec
inc
inc
cmp
pop
fdiv
adc
mov
outsl
aaa
lret
addr16
jbe
add
sbb
jmp
push
ror
inc
pcmpeqb
out
idivl
mov
jae
jo
lret
lock
shlb
adc
add
pop
xor
jo
js
lock
add
and
outsb
jno
rcrb
fdivr
dec
mov
loope
aaa
jae
outsb
jmp
mov
inc
xchg
sub
push
test
push
mov
stc
inc
call
ja
push
inc
dec
clc
incl
and
test
outsl
and
inc
dec
add
inc
push
push
popaw
stc
cmp
jl
fdivrs
test
dec
movsl
xchg
cwtl
dec
mov
dec
sbb
push
sub
jae
push
call
les
push
inc
sbb
push
fs
out
imul
or
arpl
dec
ss
outsb
cmp
jo
mov
or
mov
das
jecxz
in
cmp
and
xor
test
push
enter
fcmovnb
sub
and
adc
jne
outsb
iret
movsl
repz
call
in
inc
les
pop
outsb
popf
inc
clc
inc
sbb
inc
loop
mov
into
cld
push
push
gs
mov
dec
push
and
leave
push
jp
jle
pop
xor
jbe
jbe
fs
inc
add
inc
inc
dec
cli
in
aas
mov
outsb
push
sub
pop
imul
push
push
inc
jbe
lods
push
inc
and
outsl
jg
daa
mov
pop
push
fdivl
outsl
push
fwait
inc
dec
xor
out
lret
mov
xor
inc
ja
dec
push
add
cmp
dec
push
mov
add
push
push
gs
lock
push
pop
cwtl
rcll
gs
pushl
es
xor
mov
cltd
mov
lds
std
add
lock
enter
inc
cmpl
mov
add
dec
mov
jbe
dec
push
jo
add
orb
pop
inc
and
jns
xor
inc
popa
jae
pop
xor
dec
jbe
imul
xchg
dec
outsl
bound
mov
ret
add
bound
jns
int
and
pop
fiadds
sub
in
cmp
cwtl
lods
or
jno
or
in
movsb
lea
filds
imul
dec
and
dec
adc
int3
inc
repnz
bound
insl
int
lea
ret
mov
test
gs
inc
push
hlt
or
pop
pop
subb
pop
sbb
sub
imul
fiadds
dec
and
mov
add
or
or
adc
or
mov
in
in
nop
pop
mov
jmp
inc
daa
mov
mov
pop
es
js
loope
add
dec
mov
dec
cmp
fwait
rorl
push
popl
stos
or
mov
test
jno
gs
jno
dec
and
lahf
fcom
nop
mov
sbb
shrb
dec
fistps
scas
xor
in
sti
mov
mov
mov
pop
in
adc
sub
push
sbb
ljmp
mov
in
rolb
xor
add
rcrl
jbe
xor
and
clc
mov
xchg
cmp
pop
mov
adc
mov
xor
mov
pop
mov
notb
or
cmp
push
xor
insb
pusha
adc
dec
xlat
movsl
adc
arpl
in
sub
aam
adc
cmc
add
dec
jne
xlat
xor
pushf
xchg
mov
add
sbb
jo
sbb
arpl
shll
pop
adc
push
pop
and
popf
jb
add
faddl
je
imul
xor
je
adc
sub
and
rorl
lcall
in
lret
xchg
inc
loope
dec
imul
mov
push
mov
xlat
loope
es
dec
inc
and
xor
sti
and
cmpl
mov
xchg
jo
enter
push
fnstsw
cltd
test
and
pushf
xchg
jecxz
enter
out
arpl
jmp
xor
dec
inc
add
dec
enter
jns
add
adc
cmp
xor
pop
xlat
jp
or
daa
add
jns
sti
add
push
sbb
fadds
pusha
xor
in
push
xor
dec
adc
dec
pop
jo
es
xchg
jo
inc
push
jl
mov
xchg
sbbl
inc
add
jbe
out
add
push
or
mov
push
imul
aas
xchg
and
lds
test
sub
add
xor
test
xor
sbb
movsl
inc
movsb
adc
mov
mov
mov
or
push
push
mov
cmpb
aaa
add
add
insb
jae
add
jmp
call
push
sub
std
outsl
jbe
dec
add
out
sti
inc
call
rorb
in
inc
add
mov
sub
xchg
lret
add
sbb
mov
sarl
push
sbb
mov
filds
pushf
add
jbe
inc
jl
test
push
shll
inc
xor
push
inc
call
mov
call
imul
mov
inc
ja
xor
dec
outsb
dec
or
ret
xor
fucomip
push
addr16
xor
dec
jo
mov
ret
insb
push
jle
pop
rcrb
ret
inc
add
push
dec
inc
xor
xor
xor
jns
add
inc
das
mov
cmp
ffreep
add
rol
sti
cs
je
bound
pop
call
ror
adc
inc
inc
sub
call
lods
mov
icebp
cmp
dec
push
jo
ret
setle
dec
pop
ja
push
push
xchg
pop
movsl
jg
mov
dec
add
cmpxchg
and
mov
cld
aaa
sbb
jbe
dec
inc
add
inc
add
dec
cmp
push
jae
insb
adc
imul
inc
js
pusha
push
cmp
outsl
dec
scas
out
ds
divb
add
push
fistps
hlt
mov
push
fbld
pop
call
jb
jl
je
popa
add
or
xor
daa
add
inc
outsl
fisubrs
mov
test
mov
or
ret
push
daa
sub
mov
mov
and
jns
rorl
loope
xor
scas
push
push
out
insb
inc
inc
and
pop
out
xchg
pop
jnp
test
repnz
mov
shlb
xchg
movsl
cwtl
xchg
cmp
cmp
sub
cmp
sbb
notl
mov
and
mov
xor
shrb
pop
test
jno
loop
shlb
ret
int3
cs
lods
mov
aas
push
jmp
xlat
popa
cltd
push
push
cltd
sbbl
mov
leave
aad
mov
mov
testl
mov
and
inc
add
add
out
test
or
lock
add
cmp
test
xor
adc
call
leave
dec
cwtl
inc
bound
mov
or
repz
or
mov
das
jo
loop
pop
dec
shll
mov
inc
sub
std
push
or
adc
iret
daa
xchg
lcall
lea
scas
or
add
xchg
addb
addr16
adc
push
out
add
sar
sbbb
or
cmp
sub
add
xchg
loop
push
fcomps
push
in
loopne
jns
mov
mov
std
cmpsl
mov
adc
add
lret
adc
pusha
push
cmp
cltd
test
add
mov
sbb
test
loope
and
xchg
in
scas
adc
xlat
pop
add
mov
fadd
mov
fcmovnbe
and
sbb
xchg
enter
lea
push
sbbl
mov
inc
xor
adc
test
sbb
mov
jne
inc
push
or
cmpsb
jns
ss
mov
inc
inc
push
pop
js
lcall
jmp
inc
ror
adcl
push
loope
loopne
fbld
mov
enter
inc
imul
fwait
xchg
rolb
xlat
and
mov
pop
jno,pn
dec
sbb
int3
adcb
jecxz
add
dec
in
pop
push
cmpsb
dec
xorl
add
out
xchg
cwtl
es
pop
fmuls
loope
jo
inc
cwtl
dec
out
mov
adc
sbb
sub
arpl
add
ss
shl
inc
cmp
fiaddl
insl
mov
jae
mov
push
jns
and
leave
jo
adc
scas
stc
movsl
adc
xor
sahf
dec
pop
vcomisd
sti
mov
loopne
pop
cmovp
pusha
push
pop
dec
loop
ljmp
push
dec
sub
inc
loopne
fdivs
adc
inc
fisttpll
inc
jo
in
jns
shrb
jmp
insb
dec
incb
cli
mov
inc
push
insl
pop
push
insl
dec
add
out
push
push
rcl
jp
cld
subl
xlat
dec
inc
std
adc
cli
out
dec
xor
jne
fs
xor
popf
fisttpll
inc
xor
testl
hlt
fsubs
es
push
push
and
dec
hlt
bound
in
sahf
rcrb
jno
add
js
dec
push
imul
bound
popa
push
pop
inc
dec
sbb
sub
sub
repz
fdivs
stos
sbb
inc
je
xor
inc
ljmp
jmp
push
jecxz
call
cmp
insb
dec
dec
cwtl
incb
pop
std
sub
push
ret
lcall
insb
xor
ljmp
or
bound
push
push
push
and
mov
arpl
outsb
ss
rorb
outsl
lods
and
adc
cwtl
dec
pushf
ljmp
mov
inc
xor
fdivrp
popa
insl
outsb
inc
xchg
cli
in
and
fisttps
les
enter
inc
dec
mov
xchg
xor
sbb
insb
push
xor
stos
movsb
test
ss
inc
jno
xor
pop
test
jb
pusha
lret
hlt
ret
sbb
push
pop
pop
dec
hlt
ja
dec
push
cli
test
mov
xor
inc
push
jnp
push
xchg
push
js
bound
jb
dec
sbb
lods
push
lods
or
rcll
testb
outsb
mov
jno
data16
sub
dec
mov
push
inc
push
push
push
add
pop
repnz
rcll
xchg
sub
aam
loope
mov
inc
js
push
ja
xchg
mov
and
push
je
sbb
inc
dec
add
inc
push
popa
push
aam
insb
imul
shl
push
insb
scas
fidivl
xchg
push
inc
push
data16
sub
cmpsb
shrb
jmp
es
xor
ss
aad
out
bsf
subl
cmp
or
mov
sbb
leave
in
push
adc
cmp
adc
stc
and
stos
mov
lahf
xchg
roll
sbb
iret
jecxz
add
js
xchg
push
add
cltd
cltd
pop
loope
dec
push
outsb
in
lea
ds
ret
shrl
fnstcw
insl
popf
syscall
dec
les
stc
add
pop
and
addl
add
into
cmp
lods
pusha
add
jno
xor
and
stos
push
adcl
push
shlb
les
test
jg
xchg
mov
pop
mov
and
add
sahf
aas
jns
cs
addr16
cmp
and
and
aaa
jo
inc
jecxz
xchg
inc
adc
adc
mov
stos
pop
orl
sbb
outsl
mov
push
test
adc
test
push
imul
pop
and
adc
cmp
aam
dec
scas
sub
lds
das
inc
xchg
add
cwtl
sbbl
inc
add
xor
inc
testl
stos
xor
cmc
push
jmp
gs
das
loope
bnd
cmpsb
push
push
or
mov
mov
shll
call
data16
cmpsb
mov
mov
inc
xor
add
pushf
cmp
lock
jmp
jg
nop
int
mov
dec
lds
shll
xchg
push
jne
iret
sub
popa
mov
jae
inc
jns
xchg
and
fdivp
xchg
add
push
shrl
mov
mov
push
imul
fldl
lods
dec
dec
xchg
xchg
ret
and
cmpsb
loope
in
adc
sub
ljmp
fcoms
repnz
xchg
int
pop
or
cmpsb
insb
jo
stos
jmp
js
sub
lds
outsb
arpl
pop
dec
insb
aam
jo
decb
adcb
sbb
cwtl
xchg
pushw
inc
add
mov
dec
or
cmp
cmpsb
dec
dec
add
repz
outsl
sub
mov
lret
jns
movsb
es
int
loop
mov
pop
jmp
add
orl
sbb
sbb
xor
nop
popa
inc
movsb
pop
add
sub
dec
inc
push
test
mov
jmp
mov
jno
aad
pop
add
inc
dec
sti
lock
xchg
ja
lret
push
mov
in
fbstp
test
mov
aad
or
jmp
or
shll
hlt
cmp
mov
leave
stos
rcl
and
test
jae
hlt
and
addr16
jo
inc
loop
pop
xor
test
inc
ret
cli
add
jb
mov
sub
add
jmp
cmp
add
fcoms
imul
adcl
cwtl
xchg
ficoms
add
in
ja
mov
mov
push
and
cmp
dec
add
sub
jae
mov
outsb
jae
inc
dec
adc
fs
mov
outsb
jle
inc
xor
ret
pop
push
addr16
imul
push
popf
mov
or
push
mov
jnp
filds
sar
push
jne
push
leave
mov
cltd
cli
push
cmc
dec
sbb
outsb
js
mov
out
popa
adc
dec
mov
bound
cmp
orb
inc
or
dec
dec
add
push
cmpb
or
dec
jp
sub
dec
push
add
sbb
decb
pop
mov
mov
shll
je
fsub
imul
cwtl
fisubl
inc
jne
ret
xor
push
cmp
push
mov
pop
and
repnz
sbb
inc
push
shrb
sbb
insl
inc
je
mov
xchg
in
shll
bswap
inc
popa
xchg
ficoms
adc
push
and
xchg
ljmp
add
xor
ret
dec
mov
clc
add
inc
mov
dec
sbb
jnp
mov
cmp
js
dec
jmp
xor
inc
add
xchg
test
loop
dec
insl
pushf
sti
dec
push
test
cwtl
push
mov
sbb
inc
dec
nop
cltd
jp
dec
xor
sbb
push
pop
outsb
js
pop
pop
jge
imul
dec
nop
daa
icebp
sbb
push
pusha
pop
mov
jb
das
pusha
mov
mov
xor
push
jns
fcoms
xor
push
dec
lahf
cmpsl
cmp
popa
cmp
rolb
mov
aam
mov
repz
scas
add
mov
inc
out
mov
in
push
call
mov
mov
adc
mov
add
sub
stc
shlb
mov
adc
or
mov
bound
and
mov
mov
int
inc
sar
pusha
movsb
data16
imul
push
loope
loopne
aaa
xor
mov
mov
jmp
cmpsl
add
jmp
sbb
test
add
loopne
mov
sbb
nop
xchg
xchg
sub
data16
xchg
jns
leave
add
rcrb
adc
fwait
call
mov
xchg
ret
pop
inc
ret
mov
jno
adc
fs
leave
fmul
push
mov
xor
push
push
stc
pop
mov
scas
add
cmp
inc
lods
xchg
pop
sbb
xor
dec
and
add
cmp
xchg
imul
icebp
popa
adc
push
stc
add
loop
gs
movsb
sbb
jo
mov
cs
xor
push
lea
mov
pop
push
shlb
mov
xor
fldenv
and
lahf
shrl
mov
lret
or
sub
sahf
je
leave
sub
sbb
mov
inc
jno
push
inc
mov
pop
or
sarb
int3
hlt
and
cmp
mov
pop
in
int
adc
in
mov
push
rcr
pop
jmp
daa
add
inc
sub
shll
scas
rcll
or
out
xlat
insl
push
movb
mov
sahf
les
pop
mov
xchg
inc
insb
xchg
jnp
mov
movsl
sub
or
sqrtps
or
sbb
dec
and
mov
push
inc
rolb
push
pop
arpl
lea
push
pop
mov
sbb
in
test
rcr
inc
or
imul
sbb
sbb
sbb
jnp
add
add
iret
test
dec
push
lcall
inc
jmp
test
ja
pusha
scas
imul
xchg
je
mov
int
fwait
sbb
adc
repz
rcrb
push
bound
xchg
lock
sbb
mov
shr
loop
cmp
jl
cmpb
or
repnz
mov
bound
in
test
lea
cmp
iret
and
jb
ljmp
cmp
leave
cmpsl
popa
push
add
js
mov
add
adc
es
dec
fst
mov
xorl
pop
jns
and
shrl
jb
mov
mov
rolb
in
push
ret
jno
mov
ret
sub
test
insb
imul
xchg
add
sub
push
les
loopne
rcll
push
mov
gs
adc
dec
inc
lds
lret
jae
dec
mov
add
push
cli
and
lds
repz
fs
inc
call
mov
adc
adc
dec
inc
and
sbb
push
push
cli
das
fwait
or
in
pop
shll
pop
mov
inc
dec
outsl
fsubrs
outsl
dec
dec
add
dec
xor
mov
roll
imul
pop
inc
push
popf
add
pop
mov
push
push
dec
rorb
je
imul
and
insl
adc
mov
lock
imul
pop
jno
xchg
cmpsl
add
outsl
sub
dec
inc
dec
sub
cld
lea
scas
add
jle
inc
ret
hlt
fmull
add
mov
push
xor
or
sbb
je
mov
fs
call
int3
outsb
push
fs
inc
test
lea
push
lret
insl
push
ss
push
faddl
push
popf
push
call
fs
push
inc
dec
aam
cli
jns
imul
cs
orl
xchg
loop
inc
arpl
fs
mov
lcall
scas
mov
inc
popa
xor
xor
inc
push
jno
sbb
mov
mov
add
filds
xorb
jmp
mov
pop
push
jb
inc
sbb
lahf
xor
enter
mov
leavew
sbb
sub
dec
jnp
push
and
sbb
ljmp
xchg
mov
dec
iret
or
loope
adc
xchg
push
notl
jo
lret
add
insb
fiadds
and
dec
pop
sub
bound
test
add
jbe
movsb
push
sbb
aaa
ja
cmp
in
add
push
ja
and
xorb
loopne
adc
inc
xor
mov
or
insb
dec
push
popf
das
add
sub
pop
jnp
add
lock
insb
xor
mov
inc
mov
dec
clc
in
add
or
and
add
inc
jo
jo
mov
stos
push
fdivp
lods
faddp
inc
dec
xor
xorb
mov
aaa
outsb
jb
inc
gs
movsb
pop
fisttpl
xor
inc
insb
xor
test
sub
icebp
mov
jge
or
iret
icebp
push
psubsw
sbb
or
movl
aas
clc
and
in
cmpsl
push
add
icebp
cwtl
fstps
sub
push
lds
leave
test
jl
sub
repnz
or
stos
lods
inc
push
inc
pop
les
mov
push
je
xor
push
push
cltd
dec
xchg
adc
mov
xor
roll
jmp
test
adc
fsubp
fists
sbb
mov
push
mov
xchg
xor
pusha
mov
xor
rcrb
dec
sarb
push
nop
out
mov
jns
inc
inc
mov
mov
shr
mov
out
cmp
adcb
adc
mov
out
jae
xchg
sti
push
mov
dec
add
and
xchg
push
sub
pushf
js
sbb
movsb
call
mov
in
jp
sbb
pusha
mov
sub
mov
pushf
ja
sahf
je
xchg
adc
stc
or
cmp
mov
push
shlb
dec
and
rolb
insl
inc
in
xchg
push
cmp
clc
push
pop
push
pusha
or
mov
gs
lahf
push
cmp
cmpl
dec
xor
and
ret
aad
inc
stc
pusha
sbb
pop
mov
xlat
cmp
jle
outsl
dec
and
sub
arpl
ret
adc
sub
xchg
cld
mov
bound
push
sbb
cmpsl
aam
lahf
je
std
sbb
out
pop
js
jae
sub
jbe
movsl
aam
lds
adc
mov
add
adc
cmc
sub
lcall
add
add
ret
pop
jecxz
jge
mov
cmp
xchg
mov
scas
xor
aam
or
xchg
mov
jle
push
mov
ja
inc
inc
ss
int
imul
inc
test
xor
or
and
addr16
lock
xchg
inc
pop
aas
mov
daa
mov
ja
sbb
xor
pop
add
xor
and
pusha
or
insb
insl
jl
and
jnp
bound
xchg
push
mov
aas
imul
ljmp
pop
and
movb
jg
dec
and
jae
popf
inc
mov
jnp
mov
xchg
rorb
out
cmpsb
mov
call
push
sahf
push
add
repnz
or
xor
stos
mov
je
nopl
sbb
push
repnz
dec
psubb
sub
je
jo
mov
adc
jae
xchg
pop
cmp
stos
roll
ret
sbbl
jae
test
inc
daa
test
stos
mov
sub
mov
mov
fstpl
dec
pop
imul
adc
in
pop
xlat
mov
dec
jp
movsl
mov
in
sub
adc
jno
imul
aaa
mov
pushf
xchg
out
hlt
cs
aaa
push
popf
sbb
or
scas
or
or
and
mov
jns
cmp
js
lds
inc
das
rorb
pop
bound
sub
add
cmp
inc
in
loopne
movsb
dec
pop
scas
jle
inc
test
push
jg
sbb
xchg
arpl
shrl
adc
jp
ljmp
sub
les
inc
push
mov
dec
or
sbb
and
sbb
add
mov
shlb
ret
fdivr
dec
mov
push
out
push
hlt
iret
inc
adc
and
jo
push
fldenv
inc
cmpsb
adc
fmuls
xor
inc
loop
jno
sbb
dec
lcall
aam
inc
sub
pop
inc
fnstsw
gs
add
dec
dec
push
cs
xor
insl
pop
push
xor
push
stc
mov
test
dec
mov
or
jbe
jbe
fistps
pop
ret
inc
shlb
insb
je
inc
mov
mov
insb
dec
adc
add
and
lock
xor
rcrl
mov
push
iret
outsl
pop
test
push
pop
jne
sub
imul
add
ret
mov
in
pop
inc
arpl
sti
hlt
in
mov
mov
out
push
addr16
rorl
and
sbb
push
insl
inc
add
js
adc
push
enter
or
sbb
add
enter
xor
xchg
in
xor
dec
jns
ljmp
push
and
sub
jns
movsl
ja
fdivrs
bound
pop
pop
aaa
sbb
stos
fs
dec
std
adc
adc
xchg
mov
shlb
dec
cltd
mov
xor
xorl
dec
pop
ss
push
sti
and
outsb
test
das
adc
insl
mov
ljmp
xchg
daa
pusha
outsl
bound
shlb
push
out
outsb
dec
testl
jge
stos
mov
mov
les
pop
jb
incb
cmpsb
pop
add
dec
xorl
data16
pop
rorb
add
mov
inc
dec
xchg
adc
fdivp
and
js
inc
sub
orb
repz
mov
imul
mov
adcb
inc
aam
sbb
jbe
js
push
sub
lock
dec
mov
imul
movb
lock
jo
lahf
sbbl
jp
and
decb
call
inc
int3
jno
dec
push
lahf
jmp
imul
das
mov
inc
pop
jae
dec
jo
jns
inc
sub
inc
sbb
outsb
loop
push
sub
repnz
dec
insb
jo
mov
in
movsl
pop
loope
cmp
enter
movq
ss
cmp
inc
push
outsb
xor
fiaddl
or
mov
dec
inc
add
sub
outsl
mov
inc
loopne
pop
push
xor
getsec
inc
dec
mov
sub
leave
add
lar
xor
movzwl
xor
dec
add
mov
dec
cmp
inc
mov
fsubr
out
insb
pop
cmp
lret
cmc
test
adc
mov
push
das
sub
fucomi
sahf
inc
xchg
push
or
inc
pusha
or
loopne
ljmp
pop
or
dec
mov
xchg
or
popa
aas
mov
add
bound
popf
test
add
jns
repnz
sbb
ret
out
or
inc
jbe
fldl
mov
flds
inc
adc
hlt
js
inc
dec
inc
test
sbb
add
inc
cli
enter
bound
add
mov
jecxz
jle
jns
or
inc
lret
sub
and
jo
call
out
jb
xor
inc
jne
test
pop
or
or
mov
mov
icebp
ss
pop
out
jae
popa
mov
jg
xchg
shrl
add
inc
in
jno
sar
gs
dec
dec
arpl
xchg
into
rclb
mov
bound
dec
push
or
mov
mov
adc
lock
dec
push
push
scas
ret
cltd
ds
in
push
decl
sbb
dec
add
push
xor
sbb
dec
jbe
hlt
push
inc
mov
popa
or
iret
mov
jnp
push
jne
inc
sub
callw
je
push
outsb
xor
clc
loopne
push
mov
imul
loop
push
mov
repnz
inc
add
loopne
cmp
imul
test
dec
push
outsb
je
pop
lock
adc
jns
sub
xchg
stos
cmp
push
outsb
fstps
or
popa
mov
push
and
push
cmp
xor
cmp
mov
inc
dec
inc
pop
or
add
int
pop
orl
and
pop
xor
rol
ss
hlt
pop
add
movsb
lret
or
fdivr
push
icebp
dec
dec
push
pop
pop
sub
push
jno
pop
pushl
push
adc
repnz
ljmp
pop
or
lds
mov
icebp
dec
jne
outsl
xor
shlb
xor
jae
ret
xlat
or
xor
dec
ds
add
pop
loope
inc
push
add
es
or
inc
cmp
mov
nop
adc
sub
xchg
pmaxub
add
sbb
mov
push
or
lcall
je
push
fdivrs
cwtl
out
push
xor
jmp
ljmp
or
xor
sahf
ret
mov
loopne
cmpsb
dec
inc
inc
mov
into
push
insl
inc
sbb
imul
dec
mov
or
pusha
lock
scas
push
bound
cmpsb
scas
clc
inc
xor
dec
int3
movl
jecxz
rcrb
xor
dec
inc
cmpsb
loopne
dec
ss
dec
mov
adc
push
arpl
shlb
loope
aaa
push
xor
push
cmpsl
pop
xlat
stos
loopne
fisubrs
movsl
dec
testl
cmpsb
mov
jne
jo
lock
loopne
add
outsb
imul
int3
jl
lcall
sbb
or
cmp
push
ds
outsl
dec
inc
cmp
xchg
push
mov
or
pop
pop
movsb
ss
xchg
and
popa
dec
int
inc
loopne
cld
scas
jo
push
clc
pop
push
loopne
mov
addr16
and
pushf
ret
push
sub
out
push
push
push
jmp
xor
jg
cwtl
adc
sbb
test
insb
mov
jbe
push
add
jb
repnz
inc
add
mov
int3
out
dec
dec
jo
pop
test
decl
cmp
inc
jl
in
push
push
mov
fcmovu
dec
sub
insb
pop
rorb
lock
fs
repnz
sbb
push
inc
mov
shl
cs
aad
jbe
xor
push
dec
inc
add
cmp
mov
xor
jne
or
in
pusha
push
fldcw
pop
sbb
call
inc
pop
or
imul
pusha
lret
pop
sahf
xlat
adc
xor
ljmp
dec
add
push
mov
push
add
adc
inc
add
sub
lret
loope
cmp
rcr
test
cmp
push
arpl
mov
outsb
dec
arpl
dec
imul
clc
or
dec
fs
dec
loopne
add
push
addl
add
or
or
int3
enter
inc
imul
rol
mov
dec
dec
and
fs
add
pusha
mov
fisttpl
insl
ret
pop
adc
enter
dec
xlat
lock
rol
ret
inc
push
ss
out
jo
je
repnz
test
repz
andl
call
sbb
fs
mov
push
rcr
cmp
outsl
pop
scas
divb
sub
iret
cmpsb
push
pop
inc
push
push
outsb
sub
test
jae
mov
pop
inc
lods
stc
sarl
je
aaa
mov
inc
dec
mov
iret
in
std
addr16
push
shll
rorl
mov
jnp
arpl
dec
popa
movb
mov
mov
xchg
mull
fcompl
mov
rorl
popa
push
jmp
push
adc
paddd
dec
jecxz
xchg
and
test
adcb
or
bound
mov
push
sbb
push
cs
les
bound
push
xor
mov
push
stos
mov
es
push
rclb
enter
lea
mov
cltd
popa
insb
scas
addr16
add
and
das
insl
adc
add
popf
xor
inc
jno
pop
mov
std
lahf
or
mov
sub
mov
mov
push
add
mov
cwtl
inc
cs
bound
outsl
mov
pop
xor
adc
stc
nop
dec
push
pop
xchg
xor
add
aam
mov
mov
shrl
test
fcmovb
pop
add
mov
data16
dec
mov
cmp
pusha
push
sub
push
fs
mov
jae
push
pop
test
lds
sbb
les
pop
lret
xchg
ss
sub
es
adc
xor
enter
add
adc
inc
dec
mov
or
shll
jl
push
lea
add
add
rcl
push
push
mov
pop
add
orb
in
xor
and
inc
mov
rolb
arpl
dec
in
and
popf
rcrl
loope
shrb
mov
lcall
inc
mov
add
xor
adc
inc
aas
dec
pushl
inc
andb
aam
adc
mov
ret
es
or
sbb
aaa
lds
push
mov
pusha
int3
jge
xor
sbb
imul
mov
shr
jb
das
fmull
imul
inc
dec
xchg
cmc
dec
sbb
lahf
mov
mov
adc
cmpsl
iret
inc
push
push
lea
and
lds
aaa
les
push
push
pop
xor
orl
subb
or
adc
fimull
icebp
sub
xchg
or
or
inc
adc
es
and
aad
fnstenv
ror
and
add
and
inc
inc
ljmp
cmp
add
add
lea
push
call
aad
ror
ret
dec
in
push
push
xchg
test
scas
cmp
in
lret
jecxz
add
dec
rclb
rcrb
ror
xchg
orl
inc
mov
xor
es
test
mov
lahf
andl
pop
add
xchg
adc
pop
xlat
mov
addr16
jp
xor
sbb
gs
sahf
adc
xor
dec
and
int
jno
inc
jno
ljmp
aam
pop
mov
stos
jmp
mov
adcl
pusha
es
sahf
dec
pop
mov
xchg
stos
push
mov
daa
dec
movsl
test
or
add
in
ficompl
dec
push
jo
les
lcall
stos
add
fdivl
push
jle
fldenv
mov
imul
cwtl
push
cmp
xor
inc
add
dec
fwait
test
pop
fwait
jmp
adcl
loopne
push
sub
imul
imul
or
fiaddl
mov
outsb
sbb
shr
notl
popa
push
outsl
call
popf
pop
loope
push
sub
scas
dec
push
rorl
in
mov
test
mov
fistpl
addr16
or
push
jmp
add
add
fs
or
lds
lds
js
bound
mov
xor
dec
sbb
xor
pop
push
add
mov
pushf
add
cmc
mov
shlb
add
adc
iret
shll
std
repnz
inc
into
mov
fwait
rcl
or
stos
jbe
mov
mov
test
fldt
xchg
andl
dec
adc
sbb
and
mov
add
ret
jno
movb
mov
mov
xor
push
or
in
add
in
xor
shll
iret
leave
cwtl
bound
mov
lods
pop
dec
mov
movntq
sahf
xchg
and
loope
xchg
mov
mov
pop
call
dec
mov
or
int3
or
mov
aad
bound
iret
rorb
loope
lret
addb
xor
inc
clc
fnstcw
dec
imul
mov
add
mov
out
into
push
inc
mov
outsb
add
addb
enter
sub
cmpsl
loopne
dec
aaa
nop
aad
popa
daa
cmc
mov
xlat
es
cmp
clc
data16
add
cmpb
add
ret
xlat
jns
cmp
push
je
lea
or
mov
arpl
ret
sbb
mov
or
inc
xchg
inc
mov
or
mov
jle
sbb
push
jne
push
ljmp
pop
ret
fdiv
cli
dec
fs
push
push
jae
dec
dec
outsl
xchg
rolb
push
mov
inc
cli
xor
imul
jl
fsubr
in
jns
or
in
inc
mov
fs
orb
or
dec
les
jg
imul
jo
or
sub
lock
push
and
gs
gs
adc
add
pushf
add
inc
std
sbb
insl
push
jne
inc
imul
inc
sar
xchg
push
and
push
push
jg
loopne
mov
add
push
adc
clc
inc
or
mov
jmp
popf
pop
imul
push
ret
dec
inc
pop
bound
sahf
out
xor
lcall
insl
inc
in
xchg
add
cld
out
dec
pop
ja
dec
out
inc
shlb
ret
incl
jb
inc
jbe
sub
dec
jae
outsl
or
jbe
leave
ret
mov
dec
insl
popa
or
or
or
orl
dec
xor
pop
cmp
aaa
dec
rclb
dec
test
call
inc
adc
arpl
push
imul
push
setle
dec
or
pcmpeqd
add
push
pop
inc
ret
insl
dec
dec
inc
loop
fiadds
fistl
add
addr16
dec
pop
jp
in
cmpsb
adc
xor
inc
fld
lds
xor
in
dec
jne
sbb
or
push
xchg
rcr
adc
dec
pop
dec
inc
pop
mov
ret
stos
ret
dec
cmp
jns
add
push
push
in
notl
xor
clc
and
jno
pop
push
pop
mov
jno
in
dec
push
adc
dec
ja
jb
dec
lods
fdivs
repz
sar
push
js
ja
inc
jnp
push
jne
fidivl
inc
lret
sbb
pop
or
imul
ret
lock
push
or
ret
pop
out
inc
inc
loope
mov
push
inc
fidivs
add
push
xorb
imul
push
inc
push
std
sub
js
inc
test
push
mulb
push
fmulp
inc
popf
pop
cli
pop
or
test
mov
jmp
sbb
lds
adc
int
xor
push
jne
pop
mov
mov
cmp
jae
mov
js
mov
adc
xor
xchg
outsb
xchg
test
fwait
fs
loopne
jnp
inc
lock
xchg
jae
fldcw
xor
movsb
pop
jp
sub
daa
adc
test
scas
fistpll
dec
scas
les
lcall
push
mov
jle
pop
sub
add
push
andl
cmc
int3
rorb
pop
shlb
add
adc
outsl
jle
aad
dec
cmc
adc
mov
pop
ret
hlt
add
pop
pop
subl
cmc
jecxz
adc
or
cmc
lret
cmp
mov
sbb
inc
icebp
ret
fstl
fsubs
xchg
cmpsb
mov
dec
push
repnz
xor
jl
lds
punpcklbw
mov
aad
push
lcall
inc
subb
in
test
mov
inc
mov
add
jno
xchg
into
push
dec
xchg
mov
pop
or
incb
enter
inc
inc
addb
subb
inc
adc
leave
xor
int3
or
push
sub
cmp
dec
outsl
and
inc
xadd
in
add
aam
dec
loope
xchg
xor
cmp
jecxz
and
push
add
ds
shrb
pop
jg
push
add
pop
stos
stc
movsb
stos
dec
repnz
cmp
dec
icebp
xor
xor
pop
and
add
and
pop
pop
lcall
dec
loopne
stos
iret
hlt
dec
lock
clc
bound
add
repz
rolb
fmul
adc
dec
mov
inc
mov
and
pop
jbe
fs
xor
out
clc
daa
inc
adc
or
xor
andb
ret
inc
sbbl
push
fnstsw
and
pop
call
dec
sti
sbb
cltd
mov
data16
xchg
je
pusha
subl
test
test
ret
pushf
aad
xor
xor
add
and
ss
xor
xchg
cmpsl
scas
testl
mov
mov
insl
js
xchg
movsb
jmp
mov
lds
fs
insb
fstl
add
push
mov
fistpl
dec
mov
mov
cmpsl
xor
stos
scas
fwait
stos
andb
pop
test
in
pop
repnz
mov
xor
gs
test
call
lret
enter
and
and
mov
mov
xor
dec
test
je
dec
imul
adc
xlat
dec
jmp
mov
movsb
popf
cmp
xchg
dec
in
jge
push
pop
dec
daa
adc
inc
cld
pop
insl
movsl
mov
ds
fs
mov
and
dec
cmp
dec
dec
dec
or
jge
repnz
add
dec
mov
dec
mov
test
loopne
loope
inc
adc
jmp
mov
push
push
or
pop
nop
clc
inc
dec
fs
aaa
dec
je
inc
jo
loop
sar
repnz
cmp
mov
sbb
xchg
inc
dec
mov
pop
fimuls
jno
pop
mov
ficoml
imul
sbb
fisttps
inc
dec
jae
arpl
xor
jg
aas
sbb
lret
push
fwait
cli
jle
into
push
mov
sub
sti
mov
enter
cmp
rcll
jno
sub
enter
aaa
push
jl
push
in
outsl
jle
mov
cli
or
icebp
sub
jnp
and
xor
and
sahf
enter
mov
sti
adc
inc
pop
stos
inc
sbb
mov
inc
pop
cmp
cmp
add
dec
int3
bound
test
aas
mov
imul
cmpsl
dec
push
jg
adc
push
xchg
je
lock
dec
mov
int3
je
stos
test
inc
jb
repnz
gs
xorl
lea
push
in
sbb
movsb
les
mov
mov
or
jge
mov
ret
outsb
pop
filds
iret
js
js
dec
or
xor
mov
xor
dec
jne
outsl
dec
call
or
dec
mov
push
iret
xchg
test
jne
mov
int3
mov
and
add
fisttpll
add
pop
into
push
sub
clc
sahf
loop
push
out
inc
or
cmp
sub
pop
jo
in
inc
mov
fiadds
int3
test
pop
loop
gs
xchg
xchg
lock
adc
inc
dec
loope
cli
sub
inc
push
jo
lcall
push
lret
mov
out
subl
loopne
jg
pop
js
insl
and
test
fnsave
loope
mov
push
push
mov
test
outsb
popf
push
mov
xchg
out
or
xchg
loope
loope
mov
sub
enter
out
push
push
adc
int3
bound
jno
and
subl
negl
sbb
mov
rcr
shl
nop
jns
jne
lods
stc
add
adc
or
cmc
and
aad
mov
sahf
xchg
daa
loop
push
xor
lahf
scas
inc
adc
dec
sahf
sbbl
or
xor
das
dec
orl
or
aad
or
mov
push
lfs
filds
and
adc
inc
cmp
push
pushf
adc
push
pushw
push
inc
mov
lds
rcrl
pop
mov
inc
sbb
add
push
sub
jo
inc
xchg
test
icebp
adc
push
shl
test
mov
inc
add
mov
lret
imul
lret
jns
aaa
icebp
loopne
bound
ja
jns
scas
loopne
scas
loope
or
loop
mov
sub
loop
sub
add
in
xor
xlat
test
or
or
test
pop
jnp
cld
jno
mov
xor
xchg
xor
xchg
xor
mov
fs
mov
xchg
jno
jge
mov
pop
lds
sbb
leave
orl
sbb
mov
jge
or
jmp
mov
sub
daa
je
jns
add
rcl
mov
sbb
mov
pop
arpl
test
test
mov
enter
dec
adc
xchg
fadd
xor
sbb
or
adc
or
sub
mov
fisubl
popa
outsl
cltd
cmp
mov
ret
add
ljmp
gs
shll
mov
ss
cmp
addr16
mov
cmpsb
mov
fwait
mov
jnp
lods
ret
jns
xlat
pop
mov
cmp
inc
cmp
loopne
ret
les
pop
xchg
fistl
dec
or
test
mov
sub
je
testl
pop
shlb
xor
add
xchg
or
push
insl
sbb
enter
mov
lds
mov
dec
jae
add
in
ret
push
jmp
aaa
sub
das
outsb
pusha
push
mov
imul
and
inc
jno
adc
lahf
or
dec
pop
das
insl
movl
or
scas
or
stos
dec
push
add
xchg
sbb
sbb
int
sbb
int
aaa
in
repz
enter
mov
imul
xchg
cmp
dec
adc
mov
inc
push
and
push
mov
pop
push
loopne
dec
ljmp
inc
push
ret
dec
js
push
dec
aaa
pop
cmp
dec
push
xor
aad
add
and
ss
push
insl
cli
outsb
xor
adc
inc
mov
gs
add
test
fimull
orl
or
test
mov
jle
xlat
add
daa
mov
sti
aas
mov
fisubs
push
enter
jae
loop
push
in
dec
inc
inc
mov
lret
mov
imul
inc
push
les
jmp
dec
adc
call
mov
imul
imul
xchg
lock
push
adc
hlt
push
dec
mov
sub
dec
imul
push
push
push
jl
loopne
ret
inc
dec
leave
add
insb
inc
pop
imul
in
imul
sub
leave
popf
ds
shrb
lret
fsubs
or
je
mov
or
ja
push
xor
xor
mov
or
jmp
lock
inc
mov
cmp
sub
ret
push
gs
inc
mov
push
jae
push
mov
or
pop
xor
xchg
and
sti
imul
sahf
adc
mov
mov
and
xor
mov
sub
xor
push
mov
outsl
inc
add
outsb
cmp
push
pop
mov
ja
rcll
push
push
pop
or
jg
imul
push
and
dec
adc
pop
add
adc
xchg
fadds
inc
dec
mov
inc
push
jl
cmpsb
movl
sbb
movsl
or
jb
aaa
inc
jecxz
jge
into
inc
mov
mov
push
lret
int
push
adc
sub
out
bt
sub
insb
dec
dec
aaa
stc
dec
pop
enter
mov
js
call
or
push
jmp
sub
lock
xor
call
ja
dec
cmp
mov
js
cmp
fildl
jp
sbb
inc
cwtl
pop
in
or
dec
fucomp
push
adc
rclb
xchg
inc
loop
push
push
out
push
add
xor
cmp
jno
subb
inc
sbb
enter
popa
add
inc
sbb
inc
and
sarb
or
out
imul
jo
push
xor
mov
inc
sub
rclb
sti
mov
xor
and
leave
or
inc
jmp
arpl
push
adc
rclb
jo
adc
push
pop
add
xor
sbb
and
adc
lret
add
jne
sub
inc
mov
mov
bound
sbb
jo
pop
clc
nop
mov
dec
or
popa
xor
inc
pop
mov
shl
add
cmp
xchg
mov
inc
insb
or
sbb
movsl
push
subl
adc
adc
out
ss
shl
pop
push
loope
sbb
ljmp
push
xchg
mov
inc
aas
sti
sub
pop
sub
sbb
test
movsb
pop
jnp
xor
inc
inc
adc
pop
sbbl
shrl
adc
mov
iret
shrb
shrb
adc
sbb
loop
jo
add
negb
out
mov
mov
pop
jae
sub
insl
dec
xor
add
pop
rol
addb
popa
mov
jo
jne
xor
sbb
xor
cmp
pop
cmpsl
sbb
adcb
lret
bts
and
sbb
stos
pop
dec
push
movsl
jno
js
xchg
mov
scas
or
push
inc
sbb
sub
jns
sbb
push
loope
mov
mov
sub
inc
mov
shrb
or
imul
push
push
jmp
orb
mov
pop
notl
xorl
or
or
fwait
add
sub
inc
pop
nop
idivl
jb
sbb
cmp
jno
push
sub
pop
repnz
push
inc
xchg
lock
std
pop
data16
jns
popa
lea
shrb
xor
push
mov
adc
cwtl
inc
movsl
mov
push
fisttpl
ljmp
dec
nop
dec
inc
or
ds
outsl
sbb
arpl
loope
pushf
ljmp
ja
out
imul
xlat
push
pop
out
bound
ficoms
js
sub
sub
sbb
aaa
jnp
adc
push
popa
pop
dec
cmpsb
mov
xor
mov
imul
dec
imul
dec
jp
sbb
dec
adc
js
xchg
fcompl
mov
add
jp
push
inc
xor
fimull
mov
xor
out
adc
daa
or
dec
cmp
push
dec
or
cmp
dec
cld
lret
inc
dec
add
cltd
xlat
inc
sub
arpl
stos
xor
icebp
testw
mov
push
dec
subb
inc
test
into
inc
push
lret
dec
nop
fimull
dec
push
inc
insb
or
notl
pop
in
or
push
setbe
jb
mov
pop
sub
dec
repnz
push
inc
push
pop
push
jg
outsl
dec
je
inc
ret
mov
cmpsb
jns
outsl
jge
sbb
dec
adc
sbb
jg
xor
inc
js
cmp
push
cld
dec
mov
dec
ss
inc
ss
xchg
add
dec
sahf
jo
cli
dec
mov
fs
jle
jno
and
cld
sar
les
push
push
cwtl
push
sbb
pusha
ja
or
test
imul
push
imul
mov
add
enter
cmp
mov
ret
int3
xor
jnp
test
nop
lret
fs
ds
cmc
sbb
cmp
mov
cmc
mov
push
lret
mov
fisttps
test
ljmp
dec
outsb
loopne
pop
fcmovb
or
pmaxsw
mov
dec
jne
push
pop
dec
mov
addr16
push
gs
gs
hlt
pop
and
jp
fmuls
sub
bound
xor
or
mov
cmp
and
sarb
cli
rorl
ret
adc
cmp
insb
push
mov
dec
push
push
dec
push
sub
int3
clc
js
icebp
fcmovnb
and
insb
dec
push
xchg
sub
mov
call
dec
icebp
inc
shl
hlt
push
dec
dec
lret
ds
dec
rolb
idivl
inc
dec
mov
fdivr
mov
je
shll
xor
jb
sub
gs
jo
popa
and
not
push
dec
xor
or
and
pop
ss
mov
je
outsb
push
dec
pop
fldcw
dec
test
jbe
outsl
dec
inc
push
pop
repz
test
push
je
lock
ficoml
sbb
movsb
push
roll
shll
jl
lods
lock
insl
mov
xor
push
stc
lock
push
in
dec
rcl
push
shlb
inc
lods
inc
roll
xor
push
inc
xchg
repz
pop
add
fdiv
push
ret
ja
add
repz
inc
pusha
stos
lret
dec
mov
iret
jecxz
jo
mov
push
inc
pusha
push
sbb
cmpsb
push
fdivl
mov
cmc
test
push
inc
xor
shl
sub
in
cmp
outsl
dec
inc
sub
lret
pop
pop
repnz
cmp
ja
ljmp
bound
xchg
in
lock
call
pop
cmp
jmp
mov
dec
xor
icebp
inc
xor
jbe
popa
movsb
out
mov
movsl
dec
xchg
data16
push
pop
push
xchg
push
inc
xchg
cmp
pop
arpl
test
fdivs
insl
dec
data16
or
or
xor
push
adc
push
push
xchg
das
sbb
adc
push
dec
mov
inc
and
movsb
jl
xchg
das
push
stos
pushf
and
push
ja
rorl
shrb
push
push
ljmp
outsl
je
into
je
jne
mov
movsb
ds
jne
inc
shrb
dec
xor
lret
aad
pop
fwait
xchg
repz
adcl
roll
out
push
in
andl
data16
mov
movsb
inc
xchg
lahf
add
xor
jge
sbb
dec
in
and
test
cmp
inc
xor
xchg
mov
popa
add
add
std
fimull
test
xor
jl
dec
mov
bound
cwtl
cmpl
mov
cmc
in
dec
sbb
cmp
popa
sbb
movsb
and
mov
xor
out
add
cwtl
lods
insl
jp
pushf
fadd
in
cli
and
push
add
lret
cmpsb
aad
sbb
insb
sub
xlat
rcrb
jnp
cmpl
sbb
xchg
add
adc
inc
mov
sub
and
daa
jmp
dec
pop
enter
mov
inc
popa
or
mov
scas
in
sbb
xchg
mov
fs
pop
faddl
popf
sbbb
aas
mov
call
js
aad
or
xchg
xorl
xchg
jno
in
jno
orl
jp
add
push
pop
mov
push
lds
stc
cmp
das
sub
xchg
jno
pop
push
nop
pop
insl
xor
mov
js
mov
jns
cmp
das
inc
pop
scas
push
cs
bnd
dec
leave
or
dec
sub
inc
inc
pop
mov
mov
xor
and
loope
addl
outsl
jnp
adc
js
and
cmp
addl
dec
das
inc
popa
xchg
xor
and
jnp
add
sbbb
ja
pop
stc
sbb
test
push
sub
out
lods
mov
rorb
test
jo
or
sub
jecxz
sbb
loope
fldenv
leave
stc
mov
rdpmc
jo
aam
imul
or
add
lahf
mov
cld
stc
clc
in
daa
dec
lahf
push
rcrl
mov
pop
icebp
mov
inc
shlb
sbb
mov
push
fistpll
lahf
cmp
add
xorb
nop
mov
in
jge
push
popa
adc
cmp
inc
or
sub
inc
inc
rclb
lds
sub
out
pusha
or
xchg
in
shll
adc
and
mov
leave
dec
fldl
adc
rclb
lret
push
mov
fisubrs
pop
fcompl
add
push
inc
enter
mov
shr
stos
xor
sgdtl
in
pop
add
mov
mov
in
xchg
mov
push
dec
pop
adc
pop
cs
and
arpl
sub
test
mov
in
cmc
xchg
shll
fdivr
hlt
push
mov
sub
add
pop
test
xchg
scas
loope
xchg
mov
std
pop
add
jle
loopne
xor
js,pn
cmp
inc
adc
mov
mov
mov
mov
rcl
lcall
push
movsb
mov
mov
xor
cmpsl
out
xlat
arpl
xor
jne
jmp
push
or
cwtl
xchg
das
jmp
cmc
subb
push
add
shrb
aad
repnz
adc
in
fcoml
mov
jo
mov
push
add
loope
test
repz
gs
insl
jp
adc
out
roll
sbb
loopne
repz
push
sub
enter
mov
pmovmskb
xor
and
cs
test
mov
cmp
out
adc
fidivs
add
mov
fstpl
icebp
and
lahf
scas
popa
sbb
shl
test
xchg
push
inc
out
xlat
pop
push
inc
xor
repz
adc
xchg
sbb
push
mov
rorb
mov
and
bound
xor
xlat
imul
ret
imul
ficoms
pop
push
sub
inc
pusha
mov
test
je
arpl
mov
xchg
cwtl
xchg
ljmp
adc
sub
call
sahf
test
sbb
popa
addb
mov
mov
mov
sbb
sub
adc
stos
js
insl
ds
pop
shrb
sbb
inc
test
dec
leave
dec
jmp
popa
out
adc
or
out
les
xchg
mov
mov
adc
inc
xchg
jnp,pn
jo
movsb
xchg
inc
xor
adc
mov
cltd
mov
bound
and
mov
dec
test
lahf
push
and
sub
adc
push
pushf
add
pop
push
std
xchg
add
fdivl
add
push
xchg
inc
mov
xor
arpl
cmc
movsb
xorl
xchg
sub
in
pop
popa
fs
xlat
in
mov
sahf
insl
push
les
dec
dec
pop
loope
xchg
jbe
gs
push
mov
xor
ret
jo
jg
das
add
mov
add
push
xor
pop
ja
or
je
negb
enter
dec
arpl
and
das
les
jl
xor
aas
adc
sbb
lea
rorl
or
mov
lcall
dec
rcrl
mov
mov
pop
and
xor
mov
mov
mov
adc
and
in
arpl
inc
or
stc
fwait
mov
lahf
push
ret
daa
scas
lock
lret
sbb
push
nop
adc
out
imul
cwtl
cmp
scas
test
mov
in
daa
and
adc
lea
xchg
loope
ret
lock
push
lods
add
in
sub
sub
mov
mov
rcl
mov
xchg
push
sahf
fucomp
arpl
sbb
popf
xor
dec
cmp
mov
or
call
dec
or
add
xor
and
xchg
mov
mov
jns
jmp
pop
xor
add
cld
arpl
mov
je
and
pop
adc
jmp
mov
cmpsl
test
repz
ret
mov
pop
adc
sub
movsl
or
push
mov
and
lods
mov
subb
mov
push
adc
cmpsl
lea
lea
cmp
ret
mov
or
or
dec
bound
popf
aam
add
inc
mov
adc
adc
cmp
aas
mov
push
ja
popa
inc
jecxz
ret
add
int3
js
shll
in
fldl
arpl
out
icebp
cmp
orl
xchg
shl
mov
fdivrs
inc
or
cmp
or
push
sub
std
sub
ret
pop
add
push
js
push
outsl
cld
test
mov
add
rolb
dec
loop
pop
push
inc
popf
icebp
push
and
dec
jne
lret
mov
loop
xor
sahf
ret
je
insb
sbb
push
jns
push
push
arpl
mov
sbbl
sbb
insl
ss
not
clc
adc
jae
push
add
jbe
and
cmp
dec
pushf
arpl
out
or
cmc
pop
outsb
bound
roll
add
sub
mov
push
cld
iret
inc
dec
sbb
aaa
fidivrs
xchg
or
hlt
vsqrtsd
push
sbb
rcr
dec
and
shll
adc
mov
dec
push
jp
outsl
pop
adc
ret
push
hlt
or
pop
adc
jge
adc
cmp
int3
in
xor
and
add
dec
fdiv
rolb
dec
fsubr
lock
inc
xor
jecxz
push
xor
insb
ja
int3
push
fisubrs
mov
rol
dec
push
add
je
out
inc
jbe
mov
mov
dec
xor
les
and
sub
gs
repnz
mov
pop
shlb
push
mov
cmp
or
je
lods
mov
cmp
cmp
xor
in
xchg
repnz
mov
clc
fistpl
inc
jne
addr16
xchg
js
nop
pop
adc
es
pop
mov
push
cmp
nop
inc
pop
or
inc
push
or
lcall
ret
repnz
jnp
outsl
aaa
push
mov
jle
rorb
rcrl
or
cmc
jg
sub
int3
rorb
imul
or
sub
and
mov
js
pop
sti
fcomps
push
outsl
mov
pop
add
fs
inc
jbe
dec
fldl
dec
sahf
call
rclb
push
mov
je
into
std
aas
add
stos
inc
push
incb
inc
add
rol
push
imul
pop
arpl
icebp
xor
adc
mov
outsb
adcl
dec
mov
in
push
push
adc
outsb
inc
popa
cs
add
shrl
or
movsb
scas
addb
pop
or
das
and
pop
dec
pop
push
or
loop
push
inc
mov
hlt
outsb
je
jno
lods
cmp
add
sbb
clc
mov
cmova
jb
test
imul
dec
adc
push
xor
inc
les
inc
add
mov
sub
xor
sbb
inc
nop
mov
xor
ficoml
xor
jge
test
jno
push
push
std
lock
mov
push
jg
xor
rclb
gs
jbe
inc
cmp
imul
inc
ss
sub
dec
push
or
xor
inc
xchg
pusha
xchg
push
cli
inc
adc
jbe
sub
xchg
xor
or
out
data16
jo
je
dec
ret
sbb
push
pusha
in
jae
inc
ret
mov
insb
shr
dec
addr16
add
inc
inc
jns
cld
cmp
jp
fisttpll
fisubl
mov
dec
mov
loopne
ret
adc
push
and
dec
jp
sti
rcrb
cmp
push
jl
lea
inc
call
das
insb
xor
outsb
repnz
push
test
mov
xchg
mov
xlat
jp
jne
xchg
dec
aas
adc
sub
fmulp
movsl
popa
hlt
xor
gs
inc
sub
mov
or
jg
jp
push
inc
add
push
push
push
pop
inc
push
pushf
imul
sbb
sbb
jb
mov
lods
mov
out
js
or
mov
lret
aaa
test
dec
push
mov
jne
aad
out
shl
call
leave
xor
mov
fsubs
add
jmp
cmp
sbb
inc
push
sub
sbb
xor
js
sahf
cmp
js
xor
leave
push
inc
push
fmuls
jl
jb
mov
inc
fs
ret
gs
adc
sti
test
inc
jo
sub
jbe
clc
popa
mov
mov
insb
hlt
xchg
ss
gs
xorb
enter
dec
movsb
pop
ja
popa
in
icebp
sub
fwait
jmp
adc
inc
push
pusha
aam
jne
dec
aam
or
and
inc
xor
mov
pop
rorb
out
ret
test
mov
push
stos
dec
adc
sub
imull
rcll
mov
ss
add
dec
cmp
xchg
mov
div
dec
mov
adcl
fiaddl
jp
shrl
fwait
rorb
scas
inc
roll
sub
sub
or
inc
pop
or
roll
mov
arpl
mov
jbe
popa
and
repz
pop
or
test
add
adc
ret
jmp
add
test
ret
rclb
or
push
mov
jnp
cmp
outsb
outsb
push
pop
aam
and
sbb
into
mov
icebp
adc
lods
cmc
add
sbb
in
lcall
lcall
mov
add
cwtl
sbb
jle
mov
inc
add
and
popa
mov
adc
xor
add
cmp
add
mov
inc
add
cwtl
and
jns
inc
push
jle
mov
flds
call
aas
lods
jno
iret
shll
xor
and
sbb
xchg
dec
dec
mov
mov
jmp
or
push
stc
inc
je
sub
sub
aaa
je
mov
data16
movsl
into
mov
cwtl
sbb
inc
xor
fucom
fisttpll
cmp
ret
mov
stos
repz
or
pop
mov
lret
aad
jecxz
jle
gs
xchg
and
hlt
dec
lcall
addb
jmp
clc
cmp
mov
in
mov
xor
mov
xchg
imul
xor
stos
mov
dec
ss
and
push
push
pushf
popa
ret
aam
insl
jl
sub
cld
add
lret
dec
mov
ret
aad
ss
call
or
mov
xor
inc
pop
push
jge
rorl
std
xlat
cmp
sahf
or
adcl
repnz
pop
dec
in
add
sbb
adc
jecxz
cwtl
mov
jecxz
scas
shl
adc
cmp
lods
add
mov
dec
dec
cmpsb
fwait
xchg
sub
pusha
jp
bound
rcr
clc
out
mov
pop
jmp
out
sbb
mov
push
push
adc
pop
sub
jl
inc
or
test
xchg
into
dec
loop
into
push
pop
xor
jmp
iret
and
dec
sbb
and
xchg
jecxz
xorb
out
dec
add
fistpll
stc
pop
inc
xchg
lds
in
pcmpgtd
cmp
push
dec
popf
fwait
dec
lret
xor
xor
je
mov
rcll
pop
ljmp
outsl
push
les
dec
std
adc
jo
sub
xor
push
mov
sbb
lret
dec
sarb
dec
es
nop
mov
in
push
add
jns
sbbl
add
sub
xlat
adc
sar
clc
mov
stos
push
inc
mov
rolb
divb
ret
pushf
ljmp
or
jae
mov
inc
dec
add
cmp
ss
fbstp
push
outsb
jns
mov
fwait
mov
pop
sub
sbb
inc
jno
mov
outsb
les
or
add
xchg
das
mov
jae
test
mov
push
popf
cmc
rclb
mov
push
adc
popa
sbb
pusha
cmp
jo
and
inc
lahf
add
inc
pop
rorl
push
test
jne
insl
xchg
outsl
fstl
test
stos
push
add
repz
sub
xchg
or
imul
andl
lret
int
push
and
or
sub
loope
test
sub
repnz
test
int
in
dec
clc
mov
push
push
arpl
sbb
loop
mov
jnp
push
stc
pop
aam
push
ja
aad
or
icebp
jns
inc
sub
cmpb
add
xlat
int
jno
sub
rclb
inc
loope
stc
repz
imul
dec
jno
rcrb
xchg
out
mov
loopne
add
xlat
test
sub
inc
fwait
popa
pop
fwait
subb
mov
shrl
shrb
jo
arpl
sbb
in
cmp
ffreep
lcall
fimuls
push
int3
and
xor
inc
jne
icebp
mov
in
and
inc
ret
inc
add
out
nop
mov
mov
arpl
mov
or
inc
es
je
scas
mov
nop
inc
cs
rorl
sub
cmp
add
test
mov
popl
mov
mov
jno
test
xor
repnz
inc
je
add
mov
incb
cmp
and
add
arpl
jae
test
mov
sub
push
ret
mov
repz
pushf
and
adc
xorb
das
mov
aad
sub
mov
lds
mov
add
sub
stos
loope
push
xchg
mull
adc
push
gs
ja
lods
or
ljmp
rclb
loope
leave
ret
mov
icebp
pusha
ljmp
jno
je
je
rorl
mov
dec
popa
mov
dec
xchg
fs
jmp
bound
jl
sub
sbb
incb
in
popa
movsb
push
popa
jl
shl
cld
or
jne
jne
fadds
xor
rclb
push
cs
insb
imul
bound
shr
adc
leave
mov
push
mov
push
xor
cmp
ficomps
insl
mov
cwtl
jl
outsb
insb
imulw
inc
inc
insl
mov
mov
cmp
inc
push
sub
xchg
mov
and
dec
jo
xorl
imul
arpl
testb
xor
inc
int3
insb
xchg
mov
dec
push
pop
cs
cmpsl
add
test
mov
xchg
mov
xchg
dec
imul
xor
dec
aaa
inc
dec
ljmp
dec
inc
popf
imul
inc
push
mov
lahf
imul
stos
adc
loope
loope
dec
dec
es
pusha
sub
inc
inc
fisttpll
mov
dec
inc
js
xor
loopne
inc
lock
mov
jne
add
cli
ret
jb
bound
mov
dec
ja
imul
jno
ss
xchg
mov
xor
jg
pushl
inc
jg
jmp
inc
test
add
inc
lret
or
push
dec
add
mov
xchg
inc
pop
movb
int
pop
mov
mov
fld
movsb
popa
pop
xor
sti
pop
pop
imul
mov
dec
arpl
ficoms
dec
jae
outsw
add
sbb
dec
inc
add
dec
pop
inc
inc
mov
pop
push
dec
clc
aas
inc
insb
add
push
lea
xchg
pop
inc
bound
dec
lock
mov
inc
data16
dec
arpl
mov
push
popa
fimull
jecxz
mov
xor
mov
fs
inc
jb
inc
enter
test
rcr
and
hlt
adc
sbb
push
nop
push
jle
ljmp
roll
push
dec
xor
dec
mov
test
jno
imul
cmp
sbb
scas
fs
dec
mov
mov
test
cmp
cmp
dec
fidivrl
test
sub
dec
inc
xor
xchg
xchg
fidivs
inc
mov
inc
pop
cltd
sub
lock
hlt
adc
pop
addb
and
je
cmp
jae
cmp
enter
orl
sbbb
out
pop
dec
aaa
insb
mov
cmp
inc
out
out
adc
imul
outsl
pop
inc
dec
xor
shll
imul
sti
ficoml
popa
jae
jmp
inc
xor
sub
clc
flds
add
mov
dec
dec
sub
and
add
outsb
clc
outsb
jl
outsl
inc
or
pop
dec
aaa
cmpsb
arpl
pop
js
sti
mov
inc
inc
adc
sub
leave
mov
push
push
push
aas
jmp
mov
in
push
iret
out
pop
xchg
push
ss
notb
sub
ret
dec
std
out
inc
push
jmp
mov
data16
js
repnz
pop
xchg
xor
loope
lds
push
jb
xchg
mov
pusha
fsubl
cmc
lahf
fstps
inc
xor
out
cs
inc
xchg
cld
add
cltd
fisubs
sbb
jnp
pop
jne
js
ljmp
jg
push
cmp
inc
pop
dec
dec
jge
insl
js
inc
push
push
jbe
and
sub
shll
inc
aam
dec
xor
test
inc
sub
pop
sub
fadd
movsb
pop
and
and
lock
insb
jns
rorb
push
js
sbb
ss
ss
bound
add
jbe
gs
or
and
sbb
aam
int
mov
cmp
mov
sub
sti
add
aad
dec
adc
data16
fwait
imul
mov
pop
cwtl
fs
adc
test
sbb
and
push
dec
lret
in
xchg
mov
jb
sub
js
ljmp
ja
xchg
push
jno
xchg
out
push
iret
mov
xchg
jo
in
jae
inc
sarl
insb
pushf
dec
push
jp
adc
test
or
mov
pop
outsb
jbe
xor
outsb
cmp
cmp
cmp
inc
insl
inc
arpl
and
cmpsl
iret
cmc
cli
std
add
gs
aas
xor
out
inc
inc
dec
cmp
mov
adcb
push
mov
jmp
outsl
loop
ret
dec
or
inc
fldt
dec
inc
sub
sbb
dec
int
xchg
sbb
ret
pop
aam
pop
insb
mov
fs
mov
test
sbb
xorl
or
mov
jae
cwtl
jne
lret
dec
rolb
aas
loop
push
push
xor
inc
dec
incl
outsl
iret
pop
cmpsb
out
fs
sub
ja
push
addl
jmp
into
jae
ljmp
in
rcll
inc
jb
ror
outsb
adc
mov
sbb
lods
icebp
jmp
insl
dec
les
jae
addl
mov
shll
in
lock
in
arpl
arpl
or
lods
push
inc
inc
cli
mov
nop
pop
aaa
js
push
lret
ljmp
cmpsl
movsb
mov
addr16
cmp
mov
inc
lock
mov
inc
fcmove
wbinvd
cld
es
or
push
push
loope
adc
inc
pop
rorb
outsl
push
adc
mov
out
jne
aaa
loopne
jnp
sbb
out
clc
or
inc
in
push
add
and
push
insl
mov
mov
dec
push
in
les
out
pop
jne
outsb
xor
push
das
adc
or
push
sub
decb
movsb
add
pop
das
rcrl
aas
mov
or
call
rolb
rep
ret
push
in
gs
xchg
mov
inc
arpl
or
inc
dec
ljmp
js
jmp
jae
orb
mov
mov
pop
add
nop
pop
xchg
inc
push
cwtl
jo
mov
jo
in
lock
cmp
inc
addb
ret
out
pop
xchg
clc
test
xchg
inc
out
sbb
inc
inc
es
aas
mov
add
gs
mov
iret
loope
push
xchg
inc
push
addl
push
inc
popf
push
cmp
repnz
jl
dec
test
dec
push
xchg
call
ljmp
mov
mov
je
add
inc
pop
incl
mov
pusha
dec
xor
and
gs
clc
mov
cmp
push
fiaddl
sbb
dec
pop
ljmp
mov
push
es
cmp
inc
push
lock
add
dec
push
fsubl
inc
xchg
mov
dec
aas
addb
shlb
xor
dec
popa
mov
pusha
rorl
mov
stc
jae
call
mov
pushf
push
clc
outsl
push
ja
jo
xlat
jae
jae
xchg
shrb
clc
inc
dec
inc
inc
dec
scas
push
push
loopne
dec
jne
inc
outsb
ljmp
and
dec
jbe
ret
popaw
jecxz
adc
push
sbb
js
jne
ss
filds
mov
add
jbe
inc
mov
push
mov
jne
push
inc
sbb
aas
xchg
cmp
and
push
adc
mov
stos
lcall
xchg
inc
dec
incb
inc
loopne
enter
and
adc
je
int
mov
gs
xor
add
dec
dec
dec
jns
jb
std
jo
shll
xor
in
movd
add
inc
push
sbb
addb
rol
push
int
xor
loope
fwait
sub
inc
inc
xor
push
push
or
ret
dec
push
pop
and
xor
mov
or
fs
sbb
push
loopne
cwtl
push
ljmp
fcmovnbe
in
enter
aam
rol
dec
push
add
add
push
pop
loop
ljmp
in
mov
mov
mov
std
dec
inc
adcl
inc
scas
test
or
and
fcmovbe
movsl
or
call
lods
cmp
imul
add
leave
mov
out
in
sub
and
sub
adc
inc
jecxz
popf
cmc
pop
repnz
pushf
mov
out
rolb
add
adcl
mov
mov
ret
mov
pop
outsb
adc
push
addr16
mov
sbb
mov
test
sub
ret
push
push
cmpsl
scas
add
mov
loope
sarl
in
or
lcall
outsb
and
inc
popf
lea
push
inc
mov
es
sbb
andl
gs
push
imul
and
cltd
shrb
jne
lcall
xchg
lock
or
push
lds
mov
sub
jmp
sub
sub
loope
pop
pop
fdivrl
adc
push
sbb
xor
loopne
jns
mov
lea
inc
les
xchg
jnp
loope
cmpsb
adc
xchg
push
lahf
xchg
sti
fidivl
push
jo
sbb
mov
frstor
aam
sti
stc
mov
inc
mov
mov
das
dec
inc
test
cmpb
push
adc
dec
and
jge
addl
pusha
or
push
sbb
jp
and
inc
xorl
jns
sbb
mov
mov
popf
jle
mov
imul
movsl
dec
push
adc
pop
loop
push
sbb
add
test
sbb
add
mov
and
bound
mov
and
gs
loope
pop
mov
cmp
jmp
loope
scas
xchg
add
sbb
sub
dec
jnp
push
pusha
push
or
xchg
aas
xchg
aas
or
int
push
mov
pusha
and
add
cmp
shrb
das
inc
ffree
int
in
rclb
cltd
loope
adc
jbe
rorb
xchg
jo
sbb
fwait
dec
add
push
subl
jecxz
loopne
xchg
data16
cmp
je
push
xchg
xchg
sbb
outsl
test
mov
mov
jge
xchg
sub
xor
inc
cs
jle
add
dec
subb
and
stos
inc
rcrl
orb
cmp
jno
fistl
imul
sbb
and
cltd
and
cmpsb
push
aad
js
dec
mov
mov
push
lds
sub
cs
push
mov
test
push
jno
lods
add
pop
lods
lcall
shl
test
fnstenv
scas
inc
push
bound
jle
dec
xchg
xchg
into
dec
dec
fcmovbe
dec
hlt
outsb
jb
aad
add
ss
mov
xchg
mov
hlt
daa
sbb
leave
mov
inc
dec
jbe
jo
call
aam
jp
rorl
scas
test
push
xchg
add
cltd
pop
popf
sub
adc
leave
hlt
inc
leave
gs
in
sub
out
clc
movb
dec
outsl
jno
mov
and
jmp
pop
bnd
mov
push
into
mov
xor
push
fnstsw
push
xchg
bound
dec
fs
addr16
mov
mov
sti
dec
or
insl
in
push
fucomip
cmpsb
push
pop
sbb
aaa
loopne
addr16
aam
stos
mov
jae
jo
les
loop
jns
xchg
gs
adc
in
cwtl
sahf
ss
or
in
mov
movsl
outsl
jecxz
mov
mov
sub
frstor
mov
mov
je
hlt
mov
xor
pop
or
lods
jbe
pop
lcall
pop
push
movsl
jno
dec
push
sbb
pop
cmp
pusha
jg
mov
xor
inc
bound
aas
add
dec
fisubrl
movsb
filds
je
dec
and
sbb
push
sahf
inc
out
mov
ja
roll
inc
adc
popa
fs
jno
jp
adcb
rorb
pop
xchg
call
dec
rcrb
push
dec
sub
mov
enter
mov
push
jo
inc
and
push
sahf
in
inc
cmp
call
dec
mov
sar
cmp
mov
pop
and
push
add
add
jae
leave
push
dec
cmp
inc
ja
adc
shrb
mov
dec
ljmpw
fadd
cmpsl
movsb
push
xchg
ss
jb
jae
and
xchg
dec
movsb
push
dec
loop
repz
call
mov
xor
dec
inc
add
sbb
add
jmp
jno
sbb
rorl
add
dec
mov
leave
imul
and
stos
ret
daa
pusha
orb
add
dec
rolb
inc
bound
lods
push
xor
movsl
push
dec
addr16
inc
xor
movsb
inc
sbb
or
push
arpl
push
mov
shlb
nop
push
dec
mov
fsubr
xchg
cmp
dec
push
add
andl
sbb
rclb
mov
xchg
sahf
jle
roll
pop
dec
inc
sub
cli
call
mov
cmp
fdivp
in
lock
gs
movsl
mov
fisubs
insb
cmpsl
xor
xor
xchg
loopne
sub
cmpsb
adc
dec
inc
and
xchg
mov
inc
pop
inc
mov
cmpsl
ljmp
fsqrt
fs
fwait
int3
out
push
rol
ljmp
xor
sbb
push
loop
cmc
dec
je
dec
cwtl
mov
into
mov
xchg
mov
das
out
dec
lods
xchg
ret
dec
jmp
add
rcl
loopne
pusha
scas
rcl
data16
jae
pop
pop
sub
xor
xor
hlt
cltd
xor
push
fiaddl
lock
repz
rclb
outsb
dec
cli
orl
enter
pop
xchg
mov
xor
dec
pop
mov
xchg
fisubrl
jns
jp
leave
outsl
or
adc
bound
outsb
pop
xor
inc
sub
add
cmovge
pop
inc
test
fsubl
test
je
add
out
stc
test
loope
dec
mov
add
pusha
je
outsl
loop
sub
sbb
insl
popa
xchg
and
les
xchg
movsb
push
lea
or
add
inc
jnp
jne
and
leave
das
pop
popa
je
pop
pop
scas
iret
arpl
insb
inc
cmp
ljmp
pop
adc
adc
shll
dec
fimuls
fwait
shlb
dec
arpl
rorl
dec
and
lds
dec
les
jl
cwtl
and
mov
aad
popa
test
add
jl
cmpsb
nop
dec
addr16
pushf
clc
nop
sbb
fbld
and
sbb
push
std
sub
mov
jecxz
add
popf
mov
cmp
popa
add
push
imul
fs
push
dec
lcall
hlt
inc
inc
mov
cs
mov
rol
shlb
sbb
push
insl
pop
xchg
xchg
add
clc
sub
mov
sbb
leave
push
lods
inc
dec
fwait
jns
and
les
lock
stos
add
jge
xchg
push
nop
adc
push
dec
ja
adc
mov
fisubrs
fdivl
repz
icebp
in
pop
mov
xor
dec
leave
dec
mov
jmp
fldt
ret
das
dec
rorl
pop
pop
stc
and
sub
mov
cltd
in
and
mov
shll
movsl
add
mov
les
jne
loop
std
addb
lahf
jbe
add
inc
adc
pop
adc
fimuls
inc
xor
pop
xchg
adc
xchg
pop
push
sub
mov
rcrl
or
jmp
pop
pop
pusha
xor
and
pop
lock
test
inc
mov
scas
sbb
pop
xlat
and
cld
scas
and
pop
push
das
lods
gs
push
aaa
rol
pop
popf
ret
add
and
add
pop
lods
loopne
rcll
mov
arpl
or
roll
cltd
mov
inc
das
cmc
jecxz
pop
pop
jg
std
add
mov
and
and
mov
nop
push
add
inc
js
inc
les
jns
pusha
dec
add
mov
xor
lock
cltd
ret
stos
push
xor
sub
orb
in
sbb
loope,pt
insl
or
adc
xor
cmp
or
mov
push
stos
jp
dec
sub
in
scas
mov
mov
icebp
xchg
mov
sbb
int
mov
pop
mov
sbb
add
or
and
in
or
add
je
testb
mov
lock
dec
dec
pop
mov
test
mov
mov
mov
inc
dec
aaa
pop
or
xor
andb
cwtl
movsb
xor
sub
inc
add
add
fimull
mull
aaa
sub
imul
and
push
outsb
and
dec
fcomip
sbb
xchg
push
jbe
ja
ss
cmp
jmpw
push
insb
push
stos
pop
arpl
cmpsb
mov
sub
mov
jns
xchg
lahf
push
xor
xlat
cltd
fwait
cwtl
mov
les
aad
popa
leave
mov
shrb
faddl
xchg
adc
mov
shll
fcoms
push
outsb
adc
loope
mov
imul
bound
les
test
lock
pop
lods
loopne
cmpsl
dec
mov
mov
shrb
push
xor
out
pop
and
subl
and
add
les
mov
leave
pop
loope
mov
aam
gs
arpl
shrb
push
jb
dec
jle
xor
arpl
push
mov
sti
and
enter
and
sub
lds
cs
push
fucomip
and
icebp
and
mov
sbb
inc
add
sbb
icebp
or
je
sbb
sub
mov
inc
imul
add
je
mov
faddp
shlb
daa
push
sahf
mov
or
sub
or
xchg
ljmp
stos
xchg
jbe
and
dec
les
xor
pop
les
xorl
push
inc
mov
mov
test
loopne
or
and
pop
lcall
pop
push
cmp
aad
pop
cli
mov
add
call
mov
pop
xor
lock
push
imul
lret
rolb
test
cmp
mov
pop
inc
pop
mov
mov
dec
mov
sub
add
or
add
push
clc
xor
fstpt
jno
inc
gs
mov
mov
popf
push
xor
leave
pop
outsl
dec
in
cmp
popf
xchg
int3
faddp
adc
sub
add
push
shll
arpl
rolb
cmp
push
int
push
aam
mov
cmp
addl
inc
pop
rcll
xchg
out
cmp
flds
popa
ret
cmp
mov
test
pop
inc
sub
repz
pop
scas
out
adc
pop
scas
inc
out
jne
aaa
gs
lret
xchg
call
cmp
inc
les
aad
imul
add
or
xchg
inc
xchg
adc
roll
adcl
pop
mov
arpl
push
mov
sub
inc
movsl
aad
pop
sbb
and
cmp
mov
orps
aaa
roll
shrl
xor
xchg
icebp
repz
mov
sbb
xorb
lcall
jmp
outsl
push
inc
mov
test
aam
shlb
pop
pop
test
loopne
pop
jo
mov
add
testb
dec
nop
push
jecxz
jp
lret
xchg
or
lret
lret
ficoml
out
dec
sub
cmp
outsb
inc
lea
outsl
dec
push
dec
pusha
pusha
sub
adc
push
pop
shlb
call
jne
jb
bound
xchg
mov
popa
push
push
jmp
jbe
inc
enter
inc
or
mov
inc
jb
xor
push
pop
xor
insb
ret
and
ret
test
mulb
dec
adc
cli
jne
push
filds
stc
adc
adc
or
and
je
aam
ret
mov
ret
sub
shlb
dec
ja
and
movsb
jo
popf
js
aaa
xor
push
mov
out
push
sbb
mov
mov
jo
insl
jb
inc
xor
dec
xchg
or
adc
idiv
adc
popa
nop
shlb
push
xchg
popf
inc
or
test
jo
icebp
jo
dec
jle
dec
add
and
jno
inc
cwtl
xchg
gs
movl
sub
aas
adc
dec
or
movsb
bound
daa
jecxz
aam
push
cmp
mov
and
lret
sub
lock
push
fwait
fadds
shrb
mov
out
arpl
cmp
icebp
xor
je
cmp
test
fadds
ror
inc
dec
and
jns
adc
mov
mov
test
xor
fs
or
pop
data16
roll
cmp
mov
push
mov
xor
push
out
je
jmp
push
jo
dec
and
stc
push
ret
push
es
push
lds
iret
inc
dec
js
push
aaa
pop
inc
sbb
or
and
push
add
mov
push
jg
hlt
mov
dec
insb
icebp
test
dec
imul
sbb
pop
jns
imulb
mov
xor
pusha
sbb
je
testb
inc
dec
sub
dec
lcall
inc
movsb
push
xorb
adc
dec
cmp
pusha
push
inc
jns
je
dec
push
xlat
jnp
mov
jns
repnz
iret
clc
push
sbb
xlat
jbe
jae
test
in
xchg
ds
mov
dec
jae
push
cli
adc
mov
pop
aas
xor
mov
popa
addb
lret
clc
rclb
repnz
jb
stos
rol
xchg
sub
in
scas
lods
lods
je
test
pop
mov
pushf
adc
rclb
sbb
xor
in
stc
pop
roll
inc
lods
aaa
sbb
pop
aad
ljmp
push
or
or
daa
push
icebp
cs
mov
repz
cmp
push
daa
cmp
fistpl
mov
adc
lcall
stos
orb
and
loope
fadd
or
xchg
cs
jle
pop
xchg
test
outsl
fucom
lods
xor
je
pushf
lods
sub
pop
imul
cwtl
inc
sub
push
pop
dec
adc
jo
xor
call
xor
push
mull
mov
jae
add
jne
repz
dec
fiaddl
jbe
lcall
int3
rcr
inc
adc
fs
add
push
in
mov
or
push
mov
jo
lea
rcll
mov
cmp
sbb
out
xchg
lret
repz
jno
sbb
out
adc
inc
add
sub
jnp
jg
jns
sub
xchg
loope
sbb
xor
call
sbb
inc
divb
inc
cs
std
cmpl
dec
xchg
and
fimull
inc
fistl
xor
sbb
movsl
jae
jl
jecxz
jno
cmp
mov
test
jno
jns
mov
arpl
jmp
mov
es
sub
xor
and
test
and
leave
push
dec
gs
das
movsl
mov
xor
lahf
hlt
pop
xorl
cmp
pop
test
loope
add
push
stos
xor
fmuls
mov
add
xchg
mov
ja
mov
lcall
lods
andl
or
push
sbb
bound
scas
sbb
in
jmp
shll
adc
xor
mov
xchg
inc
adc
pushf
in
loopne
mov
and
dec
prefetchw
jo
inc
in
push
pop
sbb
rorb
lods
hlt
add
pusha
inc
fbstp
push
lods
imul
test
mov
pop
or
inc
dec
das
cwtl
or
adc
xor
pop
and
cmpsb
mov
shll
in
popa
test
cmp
movsl
test
daa
jmp
aad
mov
pop
icebp
outsl
push
mov
mov
xor
mov
xor
ljmp
dec
inc
inc
and
mov
push
cli
ret
add
xor
xor
dec
dec
cmpb
js
inc
int
mov
loop
addr16
inc
jle
into
cmpb
mov
lods
mov
fs
dec
jno
scas
inc
push
das
leave
pop
pop
cmc
add
push
stos
in
add
and
ret
or
popl
inc
repz
es
dec
jb
fcmovu
ret
xor
mov
inc
push
lret
adc
inc
popf
cmp
pop
xor
mov
push
dec
mov
sti
dec
mov
inc
mov
inc
rolb
dec
inc
cli
sbbb
add
cld
sub
xor
push
fdivrs
repz
jne
pushf
mov
fmull
movsb
movsb
mov
test
fneni(8087
dec
jne
mov
push
mov
movsb
push
repnz
shrb
xchg
inc
sbb
hlt
push
pop
mov
mov
adc
rolb
xchg
xchg
jno,pn
pusha
test
adc
rcrl
mov
cs
pop
dec
xor
dec
rclb
and
or
movsb
cmpsl
in
dec
push
add
bound
outsb
and
add
rcrb
push
inc
loope
jo
clc
dec
pop
pop
leave
mov
push
fdivs
add
popa
je
and
sbb
je
testb
mov
push
add
mov
inc
inc
incb
or
dec
mov
add
inc
add
mov
ds
mov
jle
icebp
out
xor
cmp
ljmp
xlat
add
jle
in
dec
push
ja
lret
dec
aas
lahf
jae
cmp
in
fmuls
arpl
xor
or
imul
inc
fs
inc
cmpsb
aam
movsb
mov
fbstp
mov
ljmp
add
out
int3
sub
push
xchg
imul
insb
gs
hlt
loope
lret
fsubr
aaa
outsl
dec
lcall
aad
push
inc
xor
sahf
cmpsl
mov
sub
dec
outsl
ja
jnp
popa
jp
push
insl
outsl
push
jl
or
push
inc
mov
orb
dec
jl
inc
shrb
pop
shrb
ss
push
lret
jo
aas
es
and
in
dec
inc
cwtl
mov
or
push
ljmp
adc
das
enter
jecxz
push
adc
out
mov
lcall
jo
scas
cmp
leave
lds
loope
cmp
inc
pop
jecxz
lret
pop
enter
ret
sbbl
jno
ret
mov
dec
sbb
push
adc
movsl
test
push
roll
and
roll
mov
pop
imul
popa
imul
inc
and
adc
dec
dec
xchg
pop
or
xlat
scas
dec
xor
jno
lahf
xor
or
push
jae
jno
mov
fistps
and
xchg
leave
xchg
or
add
adc
jno
add
ja
movsl
xor
icebp
es
popa
mov
subl
pop
mov
jmp
repnz
lods
mov
push
pop
add
add
in
xor
dec
and
pop
test
rolb
stos
mov
ja
lds
mov
push
or
cmpl
lret
mov
jecxz
pop
dec
ud1
popa
pop
insb
adc
cmpsb
scas
nop
push
mov
pop
xor
mov
adc
mov
ja
jae
add
aaa
mov
sbb
mov
pop
inc
sti
lcall
call
sbb
nop
mov
aad
ret
sbb
out
xchg
out
dec
xor
pop
cmp
inc
in
sarb
add
inc
mov
movnti
jmp
mov
xor
mov
test
push
mov
popa
les
mov
push
pop
int
cmpl
add
cmp
mov
mov
adc
mov
mov
or
fisttpl
push
ret
or
cmp
and
dec
loop
jge
lods
lcall
xor
dec
mov
adc
mov
inc
sub
pop
icebp
add
fistpll
fistl
xor
in
or
pop
arpl
xor
lret
jl
nop
or
daa
punpcklbw
adc
test
inc
into
les
fmull
rdpmc
inc
lcall
or
dec
add
in
cmp
mov
xchg
jno
mov
shr
lds
add
incl
push
aad
lea
fs
aad
or
jns
bound
pop
mov
and
add
jp
dec
cmp
inc
mov
xor
fnstcw
insl
inc
push
dec
lods
rorb
pop
fs
test
cmc
inc
es
adc
cli
lahf
cmp
add
lods
outsl
ret
adc
dec
cmp
stos
inc
sbb
enter
enter
xchg
loopne
stos
xor
add
xor
push
out
sbb
inc
jb
loopne
inc
pop
xor
or
add
daa
inc
xorb
xchg
lea
lds
sbb
or
add
bound
daa
mov
ja
mov
and
add
movsl
mov
lret
dec
mov
and
pop
xchg
adc
addb
push
cmc
je
dec
jle
add
jno
sub
sub
xchg
cmp
dec
inc
push
dec
xor
out
ljmp
or
inc
sahf
leave
mov
xchg
push
test
lds
adc
sbb
mov
pop
mov
pop
popa
test
ja
ja
pop
fistps
inc
xor
push
sub
or
dec
scas
mov
shlb
xlat
call
dec
or
fs
jg
dec
push
jl
roll
xchg
push
cwtl
adc
or
movb
lea
movsb
cltd
push
mov
inc
pop
xchg
les
aas
ja
jno
xorl
ljmp
inc
and
das
add
pop
and
call
sub
test
lea
jnp
popa
mov
push
in
xchg
cwtl
mov
aam
xor
dec
add
int
mov
push
add
xlat
inc
and
xchg
pop
push
pop
add
movsb
ret
mov
add
sub
and
ljmp
ficompl
cmc
sbb
adc
in
push
sbb
ss
movsb
inc
shrb
add
repnz
and
jmp
popa
jnp
repz
push
arpl
dec
iret
mov
pop
inc
xchg
dec
sub
jns
lret
push
imul
push
pop
push
inc
dec
shlb
scas
arpl
pop
adc
scas
inc
inc
mov
scas
pop
pop
popf
and
push
add
add
mov
ret
pop
add
xor
jle
into
dec
adc
jne
mov
adc
xlat
inc
rcll
rcll
lock
aam
call
sbb
testl
out
addr16
insl
and
push
jg
scas
inc
in
xor
cmp
adc
lds
pop
aas
xorb
mov
cmp
inc
sarb
rclb
xor
cmp
enter
ljmp
ss
xchg
mov
push
mov
sarb
ja
xor
sub
fs
sti
pop
sub
movb
imul
inc
add
imul
imul
fistpl
daa
mov
inc
in
gs
loopne
lods
movsb
add
sub
jl
hlt
int3
repnz
add
std
pop
dec
add
xchg
push
cs
bound
roll
cli
mov
xchg
push
cmp
dec
in
ja
add
xor
mov
push
dec
sbb
or
dec
dec
inc
add
lock
outsl
in
insb
inc
pop
ret
xor
add
test
adc
jns
dec
outsl
add
ja
pmaxub
shrb
xor
mov
popa
lock
inc
lcall
repnz
xor
xchg
jno
push
jbe
add
xor
jmp
lods
lret
add
hlt
jae
add
dec
testl
sbb
rcl
loopne
inc
mov
push
mov
push
lret
mov
push
inc
inc
inc
inc
inc
inc
push
push
es
decl
mov
jmp
push
aaa
addr16
jl
les
add
xchg
aam
nop
mov
fidivl
jbe
mov
or
arpl
add
rorb
dec
lods
pop
push
inc
or
cli
test
jae
loope
push
push
or
ja
dec
outsl
dec
sub
lods
adc
pop
inc
call
xchg
mov
nop
shll
movsb
test
sub
cmpl
push
repnz
xorb
dec
jmp
out
xchg
cmpsb
mov
inc
cmpsl
pop
dec
xor
mov
insb
pop
add
adc
repnz
pop
ret
add
add
mov
test
xchg
and
add
arpl
xor
add
add
sub
cmp
add
pop
jp
push
adc
aad
inc
fisubrs
mov
cmp
push
sbb
xchg
mov
lds
bound
in
adc
jge
orl
and
subl
ret
mov
loop
dec
xchg
xor
xchg
push
mov
jmp
fstpl
and
and
inc
ss
rorl
lahf
dec
shr
addr16
roll
rolb
push
xor
inc
scas
or
or
or
sbb
iret
jo
pop
xorl
stos
or
sub
push
daa
nop
clc
cli
hlt
gs
xchg
xlat
sbb
mov
rcr
sbb
lea
loope
add
fldcw
pop
and
push
outsb
sub
inc
loop
jge
incl
push
and
add
push
test
cmpsb
daa
les
push
or
repz
xchg
or
push
andb
loop
dec
pop
add
xor
dec
ds
pop
arpl
inc
cmp
cmp
add
adc
lds
add
mov
in
sub
lcall
orl
cwtl
add
push
xor
sub
mov
and
sbb
add
adc
xlat
in
ja
dec
mov
in
push
mov
pop
pop
cmp
push
lea
add
pushl
and
mov
mov
test
and
inc
mov
mov
cmc
mov
jle
arpl
mov
loopne
xchg
outsl
and
pop
sbb
jle
sbb
and
xor
dec
rolb
push
mov
in
inc
loope
aam
add
rclb
mov
push
pusha
addl
jmp
test
enter
cmp
adc
and
outsl
add
pushf
fadds
lret
in
add
clc
inc
add
bound
jp
jne
mov
cvtdq2ps
mov
dec
and
enter
and
inc
xchg
dec
movsb
ss
mov
movl
and
lret
inc
je
dec
jbe
sbb
mov
pop
dec
mov
dec
mov
das
out
lret
dec
fisubrl
dec
mov
pop
mov
enter
imul
cmp
sub
out
outsb
push
or
lcall
js
add
or
dec
sub
push
dec
add
or
xor
push
add
pop
sti
xor
adc
test
les
shrl
jbe
push
shlb
cmpl
jne
lret
outsl
xchg
or
sub
lret
inc
dec
imul
add
rorb
dec
movsb
clc
mov
js
test
and
sbb
cwtl
andb
sub
xor
js
pushf
shl
aam
dec
push
add
not
cli
xchg
test
cmp
enter
adc
mov
repz
ljmp
les
or
lods
fs
xor
div
push
aaa
xor
je
pop
sbb
sub
out
lock
call
mov
xor
enter
dec
cs
or
dec
movsl
dec
add
dec
adc
push
leave
out
xor
add
ret
shrb
in
repz
daa
sbb
and
sbb
aam
or
mov
inc
les
cwtl
mov
sbbb
push
fstpt
pop
daa
push
or
mov
dec
or
imul
mov
mov
int
movsl
test
or
fldenv
gs
scas
cltd
insb
cmp
mov
sbb
push
mov
pop
mov
in
dec
xor
sub
or
and
add
push
dec
ja
ret
mov
cmpb
rcrb
sbb
add
jae
adc
mov
cmc
or
pop
dec
inc
adc
dec
rcr
mov
clc
addl
jno
push
add
insl
dec
adc
mov
jbe
or
jnp
in
or
pop
xchg
cmpsl
test
testb
adc
test
nop
dec
push
inc
push
dec
or
jno
leave
adc
mov
subb
xor
stos
add
rclb
jmp
stos
mov
jmp
adc
add
or
xor
and
lock
ljmp
inc
insl
mov
sbb
push
mov
xor
ficomps
lea
int3
jns
xchg
shrl
fisubrl
lds
or
stos
dec
int3
and
test
fs
lea
pop
daa
addr16
adc
lret
mov
inc
jg
cmc
mov
loope
mov
fwait
rcl
cmp
xor
or
and
push
xlat
cmpl
mov
sbb
in
movsl
sbb
xor
mov
decb
outsb
jo
push
dec
dec
arpl
cwtl
or
jne
mov
sarb
mov
orl
adc
jae
and
lahf
subb
push
ja
lret
inc
jecxz
into
push
ja
arpl
js
inc
fstpt
dec
ffreep
out
in
mov
ret
jb
jns
push
adc
into
out
pop
inc
scas
dec
mov
add
nop
or
in
dec
cli
out
pop
xor
orb
push
inc
xchg
fidivs
aam
loop
and
cld
pop
cmp
push
lret
push
iret
sbb
test
idivl
in
inc
lds
aam
ret
xor
sahf
jbe
lods
add
lea
jl,pt
mov
inc
xor
dec
hlt
mov
mov
lcall
mov
test
xor
pop
push
fiadds
inc
mov
add
movsb
push
add
call
xor
bndstx
jg
adcl
xor
dec
insb
mov
and
push
addr16
jb
inc
fmul
adc
mov
sbb
dec
out
daa
xor
mov
push
pop
push
inc
ret
pop
stc
lock
push
push
xchg
icebp
lcall
push
sub
or
or
ret
mov
inc
out
out
movl
pop
rolb
movsl
push
test
xor
dec
aas
xor
stos
in
xchg
mov
mov
or
or
cmp
test
or
call
inc
jo
inc
shld
dec
jge
lcall
push
mov
pop
jmp
sub
dec
mov
repnz
jnp
pop
loop
or
fists
xor
add
lods
push
in
inc
add
add
test
popa
dec
sahf
adc
enter
subl
inc
aaa
test
inc
es
and
and
sbb
jmp
pop
outsb
or
es
jecxz
jo
test
dec
popa
jno
xchg
jge
sbb
and
cmp
push
push
pop
int3
stc
fldl
or
xor
sarb
pop
xor
ret
add
xor
adc
in
pop
rcll
xchg
jno
jl
sub
adc
mov
dec
add
adc
sub
sbb
xchg
sbb
stos
fnstenv
mov
insl
cmp
add
xor
sbb
cmp
inc
aad
inc
add
test
cmpsl
pop
out
mov
fs
xor
loop
ja
jae
add
sbb
jns
in
or
push
cli
out
mov
dec
jmp
cmp
mov
imul
repz
leave
addb
testl
add
jbe
out
ret
fsubrs
jo
inc
movsl
sub
and
cmp
lahf
test
mov
pop
cwtl
shlb
dec
sub
lcall
into
inc
int
sbb
mov
mov
adc
lock
mov
jmp
in
adc
xor
sub
cmp
imul
imul
lods
mov
ss
je
jl
adc
sbb
dec
popf
shlb
fwait
cmp
push
cmp
loop
cmp
adcl
mov
out
mov
insl
pop
test
subl
sbb
int
sbb
pop
sbb
add
sbb
pusha
jbe
leave
cmp
inc
or
add
es
mov
and
push
dec
dec
cwtl
lods
pop
popa
sbb
add
fwait
popf
mov
xlat
bound
out
jb
xor
aam
icebp
xchg
xchg
mov
mov
mov
add
push
or
mov
daa
mov
popl
push
adc
xchg
arpl
imul
dec
and
push
mov
jns
iret
mov
fdiv
jmp
std
testb
test
pop
scas
in
jle
dec
test
or
pop
arpl
inc
mov
ret
jo
aad
cs
popf
sub
insl
inc
mov
or
dec
int
xor
push
dec
mov
icebp
cmpb
adc
lock
inc
cwtl
sub
pop
addl
ret
mov
or
ret
ret
xchg
push
test
mov
add
adc
lret
and
push
mov
jno
fiaddl
mov
dec
daa
mov
fldt
sub
int
nop
pavgb
sub
add
sub
adc
xlat
push
push
and
cmp
gs
outsl
nop
shrl
in
cmp
test
rcll
dec
mov
pushf
jbe
cmp
lahf
push
mov
jge
xchg
cltd
jne
adc
shrb
push
out
inc
add
out
popa
adc
push
lret
dec
gs
or
push
dec
or
xchg
mov
add
add
fmull
and
or
jle
push
sbbl
bound
mov
mov
sub
clc
inc
push
jmp
sub
je
push
fstps
mov
jae
fadds
fiaddl
dec
lahf
es
add
js
leave
xchg
dec
insb
fidivl
mov
mov
faddl
mov
adc
jo
push
lds
mov
adcl
jmp
lret
loope
or
push
mov
add
stc
add
sbb
test
adc
sub
mov
jl
inc
inc
sub
cmpsl
in
dec
or
pop
sub
sbb
std
sbb
nop
vphsubbw
sbb
scas
add
cmpsb
clc
and
mov
inc
xor
dec
je
cmp
and
sub
xchg
or
in
jge
mov
pop
inc
push
fldenv
mov
leave
inc
add
pusha
shl
jle
push
inc
mov
shll
fucompp
push
scas
pusha
daa
xchg
or
sahf
in
icebp
xor
inc
xchg
and
mov
loopne
jns
jno
out
or
mov
aas
gs
pop
push
xchg
mov
or
pop
gs
pop
pushf
popa
cltd
inc
loopne
and
cld
out
mov
frstor
fwait
rcrl
sbb
xchg
lds
add
test
movsl
push
test
lods
mov
je
ss
push
xlat
pop
xor
jno
add
mov
add
test
mov
shl
adcl
or
iret
rcpps
roll
mov
test
stos
xchg
push
or
in
xchg
add
lret
add
mov
scas
testl
or
ds
addr16
push
sbb
pushf
and
cmp
sub
andl
dec
ja
les
jge
and
lea
xlat
and
or
enter
cmpsl
scas
es
loopne
xor
lock
sbb
pop
adc
aad
popf
pop
jmp
pop
imul
mov
lea
and
adc
or
adc
aas
sbb
sub
inc
rcl
loop
test
sub
cli
pop
clc
inc
out
xor
stc
cs
nop
and
jno
push
push
xchg
mov
xor
insl
sub
add
call
jae
sub
int
mov
divb
inc
loopne,pn
inc
mul
push
add
dec
sub
rolb
inc
loope
jp
pop
xor
dec
inc
push
sbb
imul
xor
push
push
jo
lock
or
ljmp
inc
dec
aas
jmp
insl
fwait
dec
jne
imul
and
dec
xor
push
xor
aam
jb
pop
inc
daa
test
sub
data16
inc
dec
xchg
divl
cmc
dec
adc
loopne
or
xor
popf
add
mov
addr16
js
jno
add
lods
rorb
sbb
daa
or
pop
fadds
xorb
js
xchg
push
outsb
and
mov
dec
add
dec
ss
push
mov
movsb
in
xchg
jbe
xchg
fdivr
pop
mov
push
imul
inc
shlb
mov
je
sub
and
push
pop
add
sarl
xchg
pop
scas
or
scas
and
nop
dec
push
xlat
int3
push
mov
push
fidivrl
mov
and
arpl
addr16
movsl
dec
pop
rorb
jl
inc
fs
out
popa
popa
adc
or
jo
fs
mov
or
dec
dec
pop
cmp
testl
xor
push
mov
add
sub
popa
cld
jae
mov
xor
gs
in
jecxz
mov
add
jae
push
lock
into
or
fwait
mov
pop
inc
ja
arpl
in
dec
pop
orl
test
or
push
pop
addr16
incb
jnp
cmp
ja
fdivrs
push
insl
push
ret
inc
fs
dec
mov
rol
out
or
pop
imul
leave
add
jecxz
insl
inc
inc
push
loopne
adc
sbb
js
dec
insb
jne
adc
dec
mov
push
bound
dec
xor
cmpsb
out
imul
ss
jb
jle
xchg
popa
js
pushf
hlt
arpl
jle
dec
inc
push
pusha
loop
inc
dec
ja
and
int
clc
pop
adc
das
clc
lods
cltd
out
arpl
sti
cmpsb
fildl
imul
push
push
pop
shlb
fs
jbe
pop
outsb
dec
mov
sub
ret
cli
fs
inc
test
test
adc
pop
add
mov
add
dec
mov
outsb
jle
fimull
or
popa
xor
outsl
insb
call
xor
sbb
push
rorb
insl
sub
cmp
push
mov
xchg
aas
out
dec
dec
mov
jmp
push
jbe
lods
xchg
popf
ljmp
inc
or
dec
inc
or
inc
dec
clc
push
scas
addl
imul
dec
push
imul
test
fstps
mov
mov
pusha
ret
ljmp
sti
sub
add
dec
jmp
add
inc
dec
jp
pop
inc
push
xchg
bound
insl
or
mov
ret
inc
inc
dec
jo
std
cmp
dec
xor
out
nop
aam
add
inc
push
push
jne
push
dec
aas
mov
sbbb
mov
inc
in
hlt
bound
push
ret
dec
push
inc
inc
push
out
jno
imul
jle
incb
ds
mov
jnp
clc
xchg
inc
pop
iret
ljmp
jo
arpl
cmp
out
clc
inc
test
jle
push
cmp
inc
dec
inc
scas
out
and
sti
dec
jl
icebp
shll
test
aad
mov
je
add
add
mov
ljmp
jae
sbb
or
mov
push
jmp
push
inc
addl
shrb
movsl
xchg
adc
mov
dec
push
or
or
leave
les
clc
pop
or
jno
jno
arpl
inc
pop
cwtl
mov
psubsw
addr16
mov
cld
add
push
bound
mov
clc
push
pop
inc
and
mov
xchg
mov
xchg
outsl
cmpsb
adc
xchg
fsubs
je
mov
nop
or
mov
push
outsb
pusha
sub
outsb
jp
mov
sbb
and
push
dec
xor
cld
rorl
push
mov
cmpsb
xor
jae
rcrl
enter
ss
cmpsb
pop
inc
and
jb
sbb
out
incl
lock
jne
dec
leave
roll
mov
lea
pop
add
es
sub
dec
mov
pop
mov
dec
push
je
movsb
inc
loopne
gs
lcall
lock
insb
inc
push
push
js
sub
sub
pop
data16
aas
es
bswap
outsl
fsub
addl
in
inc
lcall
mov
or
dec
xor
repnz
in
inc
jae
push
fs
xchg
pop
dec
les
xorb
dec
repnz
xor
clc
inc
cwtl
inc
jne
xor
dec
push
lock
jae
aaa
xor
inc
mov
or
inc
movsb
xchg
inc
mov
inc
dec
into
xor
inc
arpl
shr
mov
ret
es
pop
cli
addr16
push
in
and
dec
xchg
xor
mov
popa
mov
add
pop
push
jp
aam
ret
rorl
xchg
shlb
das
sbb
ja
imulb
leave
jno
stos
mov
adc
loope
dec
out
aaa
inc
data16
fnstcw
push
call
daa
xor
and
in
jae
mov
jae
jmp
inc
and
mov
mov
aas
push
cmp
mov
shlb
dec
push
imul
inc
dec
jmp
dec
push
or
sbb
and
push
lea
xlat
push
pop
stos
add
dec
loope
daa
cld
xor
cmp
bound
outsl
and
adc
stos
ds
inc
jg
imul
pop
inc
sbb
repnz
lods
add
jb
ret
inc
jp
or
add
pop
aas
test
repz
aaa
imul
insb
orb
sub
movsl
mov
call
inc
inc
add
les
in
clc
add
mov
mov
xor
xor
add
sub
cld
and
sbb
xor
imul
popa
dec
dec
rorb
and
jle
icebp
xor
adc
jo
jo
fiaddl
insb
in
insb
popa
add
aaa
fsts
into
mov
or
ds
sbb
pop
mov
ret
adc
insb
roll
ret
dec
xchg
mov
mov
dec
sarb
xchg
ljmp
cli
xor
fcoms
push
jne
insl
cmp
sub
test
mov
jo
movsb
add
lods
shlb
nop
and
pusha
ret
es
add
jo
sbb
aaa
xor
jb
loop
dec
dec
inc
push
pop
or
insl
stos
cltd
imul
xor
dec
mov
push
enter
and
ljmp
cwtl
and
mov
mov
add
aas
imul
test
aaa
or
popa
leave
roll
or
pop
xor
add
fs
mov
sahf
xor
cs
or
fadds
jno
mov
xor
lcall
add
push
or
push
mov
xor
push
and
mov
loope
enter
adc
test
test
adc
shlb
xchg
movsl
sbb
mov
dec
pop
xor
addb
xchg
pop
stos
or
xchg
pop
adc
or
mov
mov
call
mov
add
cld
nop
push
daa
arpl
push
pop
aam
pop
add
jmp
lock
jbe
sub
push
cmp
lea
int
push
sbb
push
std
call
mov
and
insb
inc
pusha
stc
insb
sbb
pop
je
add
test
cmp
lret
imul
push
add
jno
push
and
les
sub
add
pop
push
mov
push
cmpsb
mov
mov
js
and
sub
sbb
in
push
push
or
pop
idivb
out
ret
dec
flds
pop
pop
rorb
push
or
sub
adc
rorl
add
push
rcl
pop
mov
adc
inc
push
mov
cli
mov
xorb
xlat
xlat
call
aaa
mov
ss
iret
data16
mov
and
out
in
push
mov
gs
aad
pop
je
pop
cmc
ret
and
dec
pop
out
xchg
or
push
push
pop
jmp
push
in
leave
test
mov
adc
jb
popa
in
int3
movsl
sub
xchg
aam
lods
cmp
push
adc
insw
pop
sub
gs
or
shll
je
fxch
pop
pop
rcrl
adc
add
push
sub
xor
mov
xor
lods
cmp
jl
mov
scas
insl
sub
or
movsb
stos
mov
daa
push
dec
mov
arpl
jns
xchg
xchg
adc
push
mov
add
and
sbb
fcompl
dec
dec
rcrb
scas
ss
divl
fwait
dec
xchg
mov
push
inc
sub
or
jmp
push
add
inc
push
rorb
dec
add
mov
aaa
fsts
or
mov
loope
mov
incl
or
sub
cmpsb
pop
loopne
scas
ret
repz
xor
sub
arpl
addr16
xor
inc
add
jo
arpl
call
mov
test
sub
add
inc
push
data16
sbb
xor
xor
mov
jp
xor
pop
stos
loopne
add
popa
call
fs
add
in
inc
or
and
lret
add
or
mov
and
movsl
inc
lock
cld
push
and
bound
xor
add
lret
ljmpw
dec
dec
push
sahf
hlt
inc
sahf
ret
idivl
push
hlt
push
dec
sub
negb
inc
push
ljmp
push
imul
stos
xor
stc
rclb
ficoml
sub
push
fimull
ljmp
fs
inc
add
jle
call
push
rclb
push
outsb
std
dec
aam
mov
rcll
in
js
imul
dec
insl
aaa
and
addr16
sbb
jbe
lods
imul
fs
inc
xor
mov
and
sbb
add
rcll
into
lock
push
js
add
push
add
daa
cmp
dec
xor
es
outsb
enter
dec
divb
hlt
aam
dec
jb
cmp
fwait
je
imul
cs
jb
lods
dec
jns
xor
push
ja
jecxz
leave
call
push
and
mov
jns
ss
call
outsb
mov
rorb
push
mov
call
jge
push
xchg
mov
fs
push
movsl
pop
lret
pop
pop
xchg
pop
and
into
stos
mov
xor
inc
mov
dec
sub
mov
orl
inc
stos
pusha
mov
push
gs
std
push
ljmp
dec
cmp
cmpb
dec
mov
adc
add
add
adc
xorl
adc
inc
fucomip
inc
gs
dec
xchg
inc
test
into
inc
popa
mov
aam
mov
push
dec
xor
leave
push
adc
call
xlat
adc
xor
iret
or
pop
and
ljmp
out
rol
push
rol
xor
mov
mov
cli
inc
fsubrs
mov
lods
or
dec
inc
addl
dec
push
add
sbb
pop
clc
dec
dec
push
xor
dec
xor
popa
imul
jecxz
add
ret
xchg
xchg
mov
fcomp
jo
dec
roll
push
fsubr
add
xor
push
push
ljmp
push
das
lods
inc
or
fadds
xchg
inc
jecxz
out
aas
mov
xor
popf
mov
insl
inc
popa
gs
fs
dec
xchg
rclb
pusha
ret
push
das
mov
inc
and
inc
mov
ret
push
js
xchg
decb
out
aaa
pop
dec
clc
imull
aaa
dec
push
cmpsl
orl
xchg
push
fs
stc
jbe
push
xchg
add
sbb
lock
jns
movsl
sbb
repz
dec
mov
inc
add
imul
xor
dec
or
ret
insl
push
dec
dec
mov
push
les
push
lret
push
fcmovnb
push
adc
push
bound
adc
jbe
popl
push
jns
adc
push
push
dec
je
mov
mov
pushf
xor
lret
fwait
test
push
mov
outsl
pop
inc
jp
test
icebp
mov
in
cwtl
into
push
dec
jnp
or
in
pop
pop
push
push
inc
push
pop
add
jp
scas
test
push
push
lods
aaa
jne
inc
fldenv
xor
adc
fwait
inc
fistpl
xchg
push
push
push
fmulp
inc
jae
loopne
shrl
in
inc
dec
jecxz
lret
dec
add
and
pusha
loope
add
sti
cmpsb
add
int
cmp
js
shll
dec
int3
dec
ljmp
adcb
dec
cmp
inc
dec
lea
loope
lock
shl
mov
addr16
sub
push
inc
pop
cld
lock
sbb
jnp
enter
pop
push
xor
push
bound
aas
mov
xor
dec
add
into
pusha
test
cmc
das
sbbl
push
push
sub
push
inc
inc
das
mov
push
jp
jae
push
jbe
xor
push
jo
imul
push
or
jbe
inc
stc
pop
test
js
inc
scas
js
insl
daa
ret
daa
out
push
sbb
add
sub
mov
push
ljmp
or
repnz
ss
push
xor
cmc
push
fsubrl
aam
inc
push
js
jnp
xchg
out
jne
insl
push
aas
and
outsb
aad
rcl
scas
dec
mov
adc
sbb
divl
xor
dec
inc
mov
fdiv
cmp
dec
imul
push
dec
cwtl
mov
mov
lahf
addr16
fwait
loopne
test
fadds
and
pop
dec
xchg
fs
insl
jmp
rcrb
dec
dec
push
push
inc
dec
fadds
xor
add
pop
add
dec
fmul
roll
cmpsl
cli
inc
push
mov
pop
lods
test
lret
jo
loop
int3
pop
and
sub
add
push
jnp
xor
shll
add
inc
fisubrs
popa
test
inc
clc
lods
dec
ds
popa
inc
arpl
jmp
inc
jbe
mov
call
sbb
inc
inc
sub
cwtl
ljmp
std
pop
and
outsl
push
dec
ljmp
xor
test
sbb
or
push
mov
push
test
sub
fs
inc
mov
rcll
fidivrl
sbb
pusha
xchg
xor
clc
or
flds
bnd
push
outsb
sbb
jbe
dec
out
int3
dec
arpl
rolb
sub
cmp
nop
in
notl
sub
or
mov
pop
orl
cmovns
leave
dec
push
cmp
loopne
add
or
in
cltd
das
or
test
cwtl
dec
adc
pushf
rorb
call
repnz
loopne
dec
sahf
int
jmp
add
mov
ret
xor
push
pusha
mov
lods
pop
and
sbb
xchg
out
cmpsl
cltd
fisttpl
or
test
into
mov
mov
jecxz
dec
dec
jl
dec
push
cmc
shrb
add
or
inc
cmp
std
fs
cltd
dec
cmp
leave
outsl
jno
fcoml
fiaddl
xor
inc
or
ret
dec
sub
jbe
fsubr
add
aas
add
out
inc
or
add
pop
les
mov
insb
dec
clc
or
and
and
stos
pop
repz
stos
ljmp
jo
lret
stos
cmp
aam
test
xchg
jle
and
pop
push
mov
xlat
fisttpl
dec
pop
pop
inc
sbb
popf
rclb
cmp
jae
push
out
loopne
xorb
sub
mov
mov
out
lahf
dec
jmp
inc
pusha
mov
mov
push
je
cld
xchg
sub
mov
data16
inc
adc
shll
dec
pop
loope
sbb
inc
xor
jne
push
xor
jae
test
movsl
aad
popa
xor
jo
cmp
aad
daa
enter
addb
cmc
jno
xor
push
ss
testl
sub
add
lret
cmc
xchg
fisttpll
sub
inc
xor
movsb
mov
jb
push
dec
roll
mov
bound
insl
xor
dec
adc
iret
jo
imul
inc
xchg
movsl
dec
in
push
fwait
push
mov
andl
cmpsb
jb
mov
aaa
dec
into
xchg
jmp
js
lock
sbb
and
mov
jmp
cmp
ffree
adc
andb
cs
inc
ret
push
fsubr
jp
xchg
add
inc
fs
dec
or
hlt
fidivl
outsl
jg
jp
mov
cmp
cmc
inc
xor
bound
push
sti
lock
push
loop
inc
jno
push
cmp
sti
pop
add
fcomps
int
and
addr16
out
gs
add
jmp
into
dec
inc
xor
shrw
shlb
xor
jb
fimuls
add
inc
scas
incb
pop
adc
inc
jns
inc
xor
lea
cmpsb
inc
dec
rol
imul
sbb
adc
data16
sub
xor
ret
lds
jmp
dec
cmp
cmpsl
jle
push
jb
imul
dec
push
insb
jns
loope
pop
inc
out
jae
std
inc
mov
cli
mov
outsl
outsb
js
jae
rcl
ds
push
and
and
sbb
cmp
repz
aam
push
in
cli
sbb
pop
xchg
aad
inc
loop
addr16
lret
jb
or
xor
sbb
cmp
adc
xor
xlat
je
lods
pop
orl
xor
pop
fs
mov
bound
push
adc
loope
adc
dec
lock
cmp
inc
sbb
inc
sbb
dec
aaa
in
aad
into
mov
jbe
test
int3
dec
xor
mov
push
mov
and
adc
inc
xor
popa
bound
inc
popf
shrb
sbb
hlt
jl
les
andb
push
dec
mov
mov
aas
push
rcrl
jb
inc
mov
ret
js
iret
shr
adc
add
mov
into
arpl
adc
outsl
pop
into
mov
push
jp
pop
pusha
jb
js
inc
xlat
push
cld
inc
push
inc
push
xor
jp
inc
pop
sub
push
dec
mov
jne
fs
in
inc
jecxz
jb
arpl
lods
push
adc
das
sbb
cli
add
inc
call
cmpsb
inc
loop
shlb
fsubrs
sub
leave
xor
xor
dec
dec
dec
leave
sahf
test
or
inc
xor
add
inc
inc
xor
cld
add
add
adc
aas
fadds
cmpsb
test
dec
or
push
pop
mov
dec
add
repz
lcall
lcallw
inc
push
inc
clc
dec
hlt
mov
pusha
imul
push
js
and
sbb
into
dec
inc
dec
xor
bnd
xor
jns
ss
pushf
xchg
shl
lods
insl
insb
iret
inc
ds
pop
xchg
dec
enter
cmp
dec
inc
outsb
inc
lcall
ret
cmp
mov
outsb
test
push
insb
pop
popf
sbb
xor
sub
lret
xchg
into
push
cwtl
lret
scas
iret
sbb
dec
inc
dec
and
cltd
fidivrl
mov
push
pop
dec
jmp
das
inc
pusha
jo
and
movsl
sahf
sahf
mov
shlb
popa
mov
mov
ja
mov
out
popa
fs
inc
fidivs
rcr
dec
imul
sbb
xor
dec
cmc
push
push
popf
sub
xchg
add
pop
jno
inc
mov
rcll
push
mov
mov
sbb
mov
sub
cmp
adc
xor
mov
dec
cmp
xchg
fnstsw
sub
xor
adc
pop
shll
mov
sarl
arpl
or
mov
loopne
add
xchg
es
out
xor
arpl
mov
push
rorb
jge
pop
xor
and
xor
clc
jo
cmc
cmp
inc
mov
movsb
xchg
lea
inc
icebp
cltd
rorl
js
inc
mov
loopne
cmpsb
les
mov
add
mov
sbb
in
inc
rclb
sbbl
mov
xor
add
add
sub
dec
sbb
add
mov
jae
rorl
inc
push
cmp
push
ret
add
aas
hlt
aam
jns
sub
xor
jmp
mov
stos
ljmp
sub
mov
pop
pop
xlat
inc
je
lods
aaa
cmp
pop
shl
jb
jg
dec
push
pusha
stc
xchg
push
pop
cltd
pop
data16
movsb
cmpsl
mov
cmpsb
stos
adc
gs
push
lahf
hlt
nop
pop
sahf
shrl
nop
subl
push
pusha
mov
dec
leave
je
and
sub
stos
aad
aad
arpl
loope
xchg
loope
push
adc
je
ljmp
mov
push
mov
sbb
in
mov
xor
sub
add
add
sub
mov
lds
xor
test
inc
mov
or
loopne
lret
movsb
pushaw
imul
inc
aam
imul
das
jno
mov
cmp
arpl
dec
or
adc
xchg
jle
xorl
and
sbb
jno
mov
and
fwait
pop
adc
ja
sbb
adc
adc
jo
ret
push
adc
mov
lea
flds
subl
test
jae
adc
pusha
aad
fwait
and
and
aas
test
cmc
les
push
bound
std
std
filds
cmpsb
outsb
sub
add
jb
aaa
cmp
mov
add
pusha
jg
xchg
loope
int3
cmp
dec
adc
or
fcmove
cmc
lea
inc
inc
imul
inc
sub
iret
hlt
addr16
movsl
ss
lret
and
cmovnp
gs
adc
xlat
scas
mov
mov
cmp
mov
mov
scas
inc
subb
es
and
dec
or
ljmp
es
loopne
sbb
lcall
and
iret
push
nop
repnz
fldt
add
pop
sbb
icebp
or
jmp
sub
lret
mov
shrl
in
ret
dec
add
push
in
ss
cmp
and
dec
or
mov
xchg
rcrl
stos
bound
leave
dec
add
out
pop
dec
sub
jb
stc
aad
enter
sub
addr16
in
loop
scas
xor
cmp
pop
pop
test
push
mov
pop
inc
push
push
call
sbb
push
loopne
adc
shrb
sbb
jmp
in
addl
push
dec
pop
push
jno
inc
fimull
pop
and
and
mov
lcall
mov
cld
sbbb
popa
insb
insl
cwtl
dec
sbb
jmp
sub
xor
fdivl
adc
dec
scas
push
xor
sbb
inc
imul
cmp
in
push
add
mov
nop
movb
aam
imul
push
lea
ljmp
sbb
sub
xchg
and
push
lock
sar
jae
call
das
lods
adcl
cld
fwait
movsb
loope
jle
shrl
mov
cs
out
or
or
add
add
ret
jae
add
mov
adc
inc
test
vpaddb
rolb
mov
jno
cmp
test
push
mov
std
ds
clc
inc
gs
mov
add
cmpsl
arpl
pop
inc
shrl
stos
add
jecxz
mov
xor
jmp
or
aas
loop
jbe
xor
push
or
or
mull
adc
jae
jecxz
xor
mov
loopne
dec
loop
call
sub
in
mov
inc
arpl
jg
lea
test
stc
inc
cltd
or
arpl
mov
add
shll
sbb
mov
mov
add
out
xchg
out
sub
pusha
mov
es
pop
adc
nop
jl
pushf
loopne
dec
and
inc
popf
push
popa
loop
loop
vmread
inc
sbb
nop
mov
add
cs
pusha
repnz
xchg
repnz
push
shll
cmc
cmpsl
iret
adc
lock
mov
adc
jns
inc
sbb
adc
lea
pop
mov
rorb
push
push
scas
fs
in
mov
sti
cmpsb
jne
popa
push
and
dec
outsl
imul
loopne
mov
mov
rolb
mov
negl
push
rorb
sub
inc
rorb
dec
push
xor
xchg
incb
jnp
push
or
adc
bound
adc
mov
fs
add
xor
push
bound
icebp
mov
jo
data16
inc
adc
mov
mov
mov
adc
add
and
shl
sub
repz
repnz
add
lcall
pushl
ja
fistl
test
fs
xor
scas
push
dec
push
test
push
rclb
jmp
sbbb
lcall
pop
push
mov
dec
ss
push
test
hlt
push
cmc
xchg
aaa
mov
xchg
mov
popa
jns
test
movsb
push
mov
or
jo
icebp
iret
mov
cmp
xor
pop
ja
leave
push
nopl
jns
adc
add
sbb
push
mov
mov
loope
push
les
or
inc
or
sub
mov
add
adc
pop
sub
cmp
or
dec
call
nop
out
xchg
mov
jo
xor
and
aaa
lahf
or
rclb
or
test
mov
mov
cmp
xor
imul
push
out
inc
push
sbb
mov
push
mov
ret
test
imul
mov
lock
minps
mov
jmp
fwait
add
mov
xchg
jb
in
sbb
push
roll
inc
inc
bound
pop
push
xor
push
mov
xor
mov
jmp
xor
popa
mov
adc
gs
lret
push
js
mov
std
das
or
shll
pushf
xor
push
push
or
outsl
ficoml
mov
aam
scas
ljmp
adc
rcl
in
cmp
outsb
dec
dec
push
push
jno
and
lods
andl
push
cmpsl
adc
push
shrb
pusha
popf
jmp
roll
push
add
arpl
sub
lds
jmp
es
out
inc
lahf
fcomip
cld
mov
pop
jno
mov
in
xchg
stos
and
andb
jbe
fdecstp
pop
mov
cmp
shl
xchg
xor
ja
pop
cmp
gs
add
sbb
push
dec
ds
aaa
rol
inc
dec
sbb
xor
outsb
fisttps
xor
jb
stos
orl
fidivrl
cs
sub
pop
mov
cli
pop
dec
idivb
nop
fdiv
test
fwait
add
aad
lods
adc
mov
lea
jg
ret
xor
xchg
ja
mov
test
add
rcrb
rclb
pop
or
xor
xchg
jne
add
iret
mov
ret
lods
mov
icebp
cmp
and
loopne
orb
test
jne
insl
inc
sbb
mov
xlat
gs
shll
adc
mov
loopne
daa
xor
mov
cmp
lods
inc
loope
push
and
add
xchg
sub
xchg
nop
jg
add
dec
mov
add
jns
adc
add
add
add
inc
add
icebp
faddl
call
test
mov
xchg
icebp
adc
and
or
loope
daa
pop
inc
sbb
xor
arpl
sub
dec
xchg
aam
sub
pop
fs
xlat
outsl
mov
cli
loope
lret
pop
vaddsubpd
loopne
loope
jmp
pop
icebp
inc
sub
inc
jae
int
call
lds
fwait
pop
icebp
leave
sarb
stc
ljmp
xchg
leave
inc
fsubrp
mov
sbb
rolb
mov
bound
imul
outsl
cmp
orb
insb
inc
outsl
insb
mov
push
rclb
push
mull
test
dec
inc
xor
jl,pn
push
fmuls
sub
push
mov
ret
test
pop
arpl
js
inc
push
ss
jno
shr
pop
sahf
push
jns
cwtl
inc
loop
out
mov
repz
jne
push
sub
in
int
je
push
sbb
dec
cltd
out
cmp
mov
and
sub
icebp
cmp
add
mov
sub
fldenv
sbb
dec
es
and
push
imul
inc
sbb
outsl
ss
push
popf
inc
ret
push
jp
ss
dec
ja
push
adc
dec
inc
dec
sub
jns
mov
jecxz
mov
rol
cwtl
and
jb
xor
dec
sbb
pop
loope
adc
aas
sbb
jbe
pop
pop
cmpsl
outsb
or
jmp
xchg
fcmovne
rclb
int3
fadds
push
push
into
adc
inc
xor
pop
faddl
mov
jle
ss
jb
js
sbb
cltd
xorb
popa
je
js
mov
test
outsl
lods
decl
fs
cmpb
rorb
push
inc
or
scas
pusha
jge
xchg
mov
cmp
test
or
jo
lret
sbb
int
add
adc
jmp
push
mov
rclb
dec
inc
dec
xor
inc
imulb
loopne
scas
xor
je
repnz
out
xchg
subl
testl
push
imul
dec
sbb
push
pushf
test
adc
faddl
sub
mov
imul
adc
adc
icebp
jno
jno
das
mov
push
test
pushf
jb
or
insb
xchg
int
in
cmp
inc
adc
rclb
std
aaa
dec
inc
aaa
inc
mov
push
sub
inc
outsb
arpl
popa
bound
push
jg
dec
xor
push
repz
push
add
cmpb
das
mov
jne
cmp
xor
cld
dec
aam
dec
push
insb
xor
aas
dec
mov
cli
mov
mov
test
dec
fmull
gs
jns
push
push
jg
cmp
sbb
xor
je
adc
ret
shlb
ret
popa
inc
xor
push
shrb
cmp
cltd
jae
lret
mov
mov
dec
mov
jno
mov
pop
stos
jns
popa
rorb
push
dec
dec
add
nop
cli
adc
push
outsl
inc
subl
mov
pop
pop
out
insb
dec
xor
and
jmp
xor
shll
cmp
add
into
pop
dec
push
outsl
sub
faddp
insb
mov
push
imul
cmpb
jmp
xor
add
lahf
add
xor
push
les
cmpsl
les
loopne
add
lock
aaa
ss
inc
mov
call
dec
sti
imul
imulb
mov
mov
cwtl
test
cmp
dec
dec
outsb
jo
dec
mov
sbb
pop
dec
aam
insb
push
mov
daa
leave
call
push
inc
sbb
cmpsb
in
xchg
icebp
rcrb
mov
xchg
ljmp
pop
push
xchg
insb
jl
int3
rcll
xchg
clc
mov
jne
lret
jge
and
lret
and
test
push
hlt
push
mov
push
stc
rol
xchg
sahf
mov
add
ljmp
repnz
ljmp
dec
sbb
add
insb
inc
push
call
jge
pop
lcall
imul
daa
or
cmp
divl
sub
loope
lret
cmp
dec
sti
sub
jb
add
fdivs
fnstcw
cmp
insl
ret
loopne
in
inc
inc
push
mov
outsb
xor
jmp
mov
dec
dec
jno
push
aaa
inc
dec
dec
lret
add
push
leave
or
mov
imul
scas
adcl
mov
adc
xor
lret
pop
and
test
ds
push
pusha
movsb
out
in
dec
mov
test
outsl
push
mov
jae
inc
xchg
fcmovnb
add
xor
rcll
mov
insl
mov
insl
ja
imul
ret
jbe
dec
mov
fs
imul
inc
push
pop
push
mov
test
jno
cli
mov
movsb
dec
inc
xchg
arpl
push
or
idiv
fs
int3
inc
xor
inc
or
dec
popfw
leave
sub
push
xchg
jp
lock
add
push
sbb
cld
pop
paddsb
xor
ja
jb
lock
add
jbe
sbb
ss
insb
addr16
rcrb
xchg
push
stos
push
cmp
in
jcxz
lock
ja
addr16
xor
and
dec
sbb
xor
scas
jo
inc
jle
or
outsl
cmp
fsincos
sub
call
fsubrs
push
aad
inc
dec
mov
shrb
xor
sti
add
lret
push
jp
push
punpckhbw
enter
jge
iret
aam
arpl
jbe
mov
pop
dec
lret
adc
ret
ret
push
call
loope
ss
lret
inc
pop
or
xor
dec
lret
mov
xor
inc
dec
ja
sbb
insb
jne
xchg
xchg
arpl
je
cmp
bound
sahf
daa
fidivs
mov
gs
fisubrs
fs
inc
pop
sbb
push
mov
and
adc
inc
dec
sub
add
shrl
arpl
subb
cmp
les
call
out
lock
icebp
inc
add
int
add
or
jae
sub
or
mov
pop
add
sti
sbb
inc
and
add
sub
inc
jge
inc
jae
pop
sahf
jp
or
mov
rolb
push
icebp
inc
negl
loope
jge
mov
add
mov
adc
ret
push
cmpsl
mov
xchg
add
test
adc
rorl
cmp
pop
shll
nop
xchg
out
int
popf
cmpsl
andb
jg
dec
inc
sbb
nop
imul
aam
and
sub
aam
ror
sub
fistl
sbb
icebp
push
test
and
das
test
mov
or
loope
addb
cmp
inc
xor
add
dec
jo
add
jbe
jecxz
xor
jge
dec
dec
add
mov
pop
jno
sahf
cmp
xchg
enter
push
fsubs
outsb
js
push
loopne
mov
jae
push
leave
leave
mov
push
adc
sub
ds
dec
mov
dec
int
inc
imul
std
jno
dec
fdivl
sub
nop
aad
add
mov
pop
inc
movl
mov
xorl
in
or
cmp
pop
cwtl
or
xchg
cmc
daa
dec
add
aas
popa
das
pop
dec
rcrb
test
jmp
add
out
mov
fnstenv
xchg
inc
pop
rolb
xchg
pop
and
and
mov
jl
dec
sahf
sahf
decl
sub
repz
lret
xchg
rorb
aad
aad
jae
bound
push
decb
pop
push
iret
inc
clc
add
xchg
pop
int3
xchg
arpl
inc
orl
jg
ret
rcrl
xor
sub
inc
mov
push
test
pop
clc
pop
mov
inc
xchg
arpl
lock
inc
stos
or
mov
xor
and
lds
test
shlb
inc
xlat
mov
test
test
mov
push
mov
leave
xchg
arpl
rcll
iret
enter
js
testl
and
pop
lcall
sbb
icebp
xchg
pop
mov
and
mov
or
arpl
add
repnz
add
int3
enter
add
mov
daa
adc
mov
data16
repnz
add
ret
rcl
dec
jge
ror
scas
mov
fs
bts
adcl
mov
jecxz
inc
xor
inc
jno
lahf
adc
add
mov
jl
rclb
popf
xor
repnz
rcl
mov
nop
or
jmp
xchg
sbb
lods
icebp
jb
cmp
shll
push
in
lcall
jno
js
add
bound
add
mov
shlb
arpl
rcr
sbb
ret
arpl
loope
inc
pop
and
jnp
dec
daa
push
test
cmpsb
push
movsb
setp
repz
xchg
push
aad
lock
jl
cmc
push
push
push
jg
les
stc
or
add
mov
mov
push
mov
repnz
inc
aaa
aad
add
gs
lret
dec
pop
jb
aaa
mov
stos
cmp
add
pop
add
scas
movsb
sbb
jae
enter
push
add
jle
and
add
pop
leave
mov
out
xchg
adc
dec
ret
les
sbb
mov
mov
dec
adc
lds
xchg
das
jo
repz
add
sbb
jne
lcall
imul
add
add
push
mov
les
cmp
push
adc
dec
sbb
pushf
xor
xor
add
ja
jl
test
vmovq
mov
jnp
ret
movsb
inc
and
or
aad
aam
and
orb
dec
arpl
cmp
cmp
dec
addl
fsts
xchg
dec
test
sbb
lret
add
shlb
sbb
inc
xchg
leave
sbb
pop
dec
or
or
imul
mov
dec
pop
cmp
inc
xchg
pop
loopne
mov
xchg
mov
out
add
pop
adc
nop
jg
add
daa
pop
push
cwtl
out
add
mov
sub
pmulhuw
aam
inc
pusha
sub
shl
cmpsb
and
push
dec
or
mov
les
movsb
cmp
icebp
inc
test
or
and
lods
cs
or
add
repnz
or
nop
sti
xchg
lock
xchg
cs
and
jns
out
imul
xor
fldcw
sbb
pusha
pusha
rol
cs
cmpsb
push
pop
xlat
xchg
xchg
lea
adc
dec
bound
and
mov
add
es
stos
call
dec
mov
ret
insl
aas
test
mov
loop
pop
mov
or
and
pop
arpl
and
aad
shrb
xlat
xor
mov
jg
push
cli
sbb
mov
shl
jb
inc
roll
aaa
xchg
in
inc
and
pop
lret
mov
mov
and
adc
ja
and
sahf
in
mov
scas
adc
xor
cmp
ds
pop
fwait
inc
push
adc
sbb
inc
inc
adc
add
lods
pop
adc
iret
ljmp
or
daa
lods
pop
in
mov
outsl
movsl
sbb
adc
push
xchg
dec
jns
cwtl
push
cltd
insb
pop
mov
movsb
stc
inc
and
adc
arpl
mov
jne
add
jnp
subb
sbb
adc
dec
and
inc
sbb
idivl
insl
mov
loopne
push
repnz
add
xchg
pop
inc
mov
sti
lock
pop
test
jne
insl
and
pop
sub
shl
sarl
dec
lcall
xor
adc
push
push
adc
sub
pop
movsb
xchg
sub
fsubrs
adc
inc
fwait
mov
imul
add
stc
inc
xor
jmp
push
das
inc
sbb
xchg
bound
inc
fs
call
mov
or
add
in
pusha
dec
or
subl
jo
mov
movsb
push
fs
add
cs
push
nop
mov
out
mov
cmp
mov
mov
and
cmp
addb
mov
popf
and
add
pop
or
imul
shlb
cld
rolb
std
add
add
sbb
popa
xor
loope
inc
sbb
fldcw
stc
imul
and
pop
lods
or
orl
divl
or
ss
imul
loop
dec
jecxz
ret
aad
add
adc
sbb
push
jbe
lds
pop
mov
pop
inc
inc
rclb
or
loopne
inc
sub
stos
pop
xor
xor
test
pusha
cmp
sub
pusha
adcb
outsl
sti
pop
push
leave
mov
add
sbb
mov
scas
sarl
addl
ret
fwait
cmp
pop
mov
js
inc
addl
and
mov
mov
xchg
test
movsb
add
push
je
mov
sarl
mov
test
stos
pop
dec
pop
cmpsb
and
fstps
inc
pop
sbb
or
xchg
pop
mov
dec
sub
add
inc
and
add
cmc
pop
and
cltd
addl
or
fdivrs
cmp
lahf
addl
mov
adc
lcall
xchg
jb
dec
cmp
dec
cld
mov
cmp
test
push
ret
daa
loope
jne
xor
xor
xlat
mov
inc
jecxz
in
pop
popa
sub
test
adc
inc
adc
loope
hlt
push
in
ds
pop
ljmp
xorl
cs
shr
xchg
fidivs
push
ss
xchg
mov
add
xchg
dec
mov
pop
mov
pop
addl
cltd
aam
mov
bound
pop
or
adc
addr16
adc
ret
imul
add
pop
lcall
fsubr
adc
sbb
ret
loopne
mov
push
test
gs
mov
scas
in
iret
jg
adc
add
dec
dec
add
jecxz
lods
inc
or
jno
push
mov
or
cmc
lods
stos
pusha
mov
mov
pop
push
in
lea
push
pushf
in
ja
cmp
rolb
mov
adc
or
inc
push
add
jno
mov
push
loopne
push
mov
mov
leave
sub
xor
cmp
mov
mov
out
aaa
movsb
insb
sbb
sbb
inc
dec
dec
xor
mov
add
addr16
scas
sub
mov
movsl
cmp
imul
loope
push
add
ror
cmpsb
repnz
fs
sbb
dec
lcall
xchg
mov
nop
push
lret
cwtl
jnp
push
call
sub
sar
shll
or
jae
andb
xor
add
stc
push
sbb
cmp
iret
jno
dec
ret
dec
sahf
loop
movsl
mov
xchg
cltd
push
out
dec
jnp
fstps
or
mov
lds
xor
push
dec
jo
inc
stos
add
iret
test
aam
cmp
mov
xchg
mov
inc
lcall
dec
xor
jmp
cmpsb
push
jg
push
call
int3
shrl
cmp
xor
cmp
adc
xor
pusha
ret
xorl
mov
push
data16
jl
fistpll
xor
sbbl
cmc
push
dec
cmp
sbb
mov
mov
pusha
sti
scas
test
sbb
xchg
or
xlat
stos
jno
enter
adc
cmp
shlb
mov
xchg
push
lcall
mov
andb
mov
ret
insb
aaa
push
xor
cli
mov
sub
mov
or
xor
mov
arpl
add
shlb
addb
push
add
mov
mov
loope
pop
loopne
aad
imul
lods
fnstsw
mov
iret
xor
add
jno
pop
repnz
fisubl
pop
sub
aam
loop
insl
sbb
xor
cmpsl
mov
addb
iret
add
orb
sub
or
ja
xchg
lods
stos
rclb
arpl
movsb
add
or
clc
mov
inc
lcall
pop
je
or
push
and
sub
and
adc
in
cmpsl
push
xor
cmp
sbb
inc
sbb
fisubl
test
inc
inc
xchg
leave
and
mov
ret
imul
pop
int
xchg
shrl
imul
or
shrl
ljmp
bound
loop
sub
aaa
and
mov
arpl
out
cltd
xlat
daa
loop
inc
dec
and
push
loop
push
mov
sbb
adc
xchg
out
xchg
sbb
xor
cmpsb
mov
push
adc
int3
pop
nop
push
adc
daa
mov
stos
mov
push
iret
arpl
in
push
mov
dec
outsl
adc
push
mov
mov
xchg
mov
push
pusha
pop
inc
dec
aad
inc
push
test
or
or
xor
add
enter
mov
or
add
insl
dec
pop
sbb
cltd
arpl
ja
adc
ret
cli
ret
push
inc
mov
loope
sub
in
mov
enter
popa
movsl
inc
add
stos
loop
adc
leave
movl
sahf
cld
sti
xchg
loope,pn
and
dec
pop
xor
lods
push
sub
pop
std
dec
sbb
adc
sbb
dec
xor
mov
pop
inc
movsb
add
imul
add
mov
roll
daa
and
fs
out
ljmp
scas
test
sub
xor
jb
xor
call
push
sub
inc
xlat
push
imull
ss
rcrb
pop
xchg
orl
sbbb
inc
in
test
lret
dec
add
daa
inc
call
sbb
or
add
add
xchg
cmp
mov
push
jge
dec
or
leave
cmp
mov
enter
sbb
add
xorl
mov
mov
lahf
push
cmp
fwait
cmpsb
jl
les
pop
in
ret
or
adc
add
mov
xchg
jp
mov
xchg
les
adc
dec
mov
sbb
pushf
pop
call
and
adc
sub
test
nop
pop
pmaddwd
ffree
mov
jbe
xor
add
lods
ja
dec
cmp
mov
xlat
sahf
add
push
mov
add
inc
data16
jp
rorl
jne
adc
sbb
scas
inc
dec
cmp
add
movsl
pop
jp
jns
push
cwtl
or
dec
popa
inc
inc
fidivs
push
scas
test
mov
push
pop
cmpsl
xchg
dec
jo
mov
imul
rcl
mov
scas
rolb
pop
imul
cmpsl
xor
push
daa
sti
test
outsb
add
sub
mov
fistpll
loopne
sub
cmp
or
cmp
out
ret
pusha
xchg
jl
mov
sub
add
subl
lcall
mov
inc
lcall
cli
mov
pop
sbb
xor
jmp
icebp
pop
lret
test
sarb
dec
jge
mov
push
int
rorl
sbb
imul
bound
mov
jp
mov
gs
pop
mov
xor
adc
outsb
popa
add
sbb
push
xchg
insl
add
sbb
inc
xor
pop
sahf
sub
pop
and
mov
or
add
pop
or
add
cs
sbb
aas
xchg
push
xchg
xchg
enter
cwtl
outsl
cmpl
es
rolb
push
push
mov
btr
dec
mov
xchg
sub
sub
and
lret
pop
inc
gs
pop
pop
lds
and
mov
xor
popa
adc
in
push
mov
xor
adc
subb
inc
inc
shr
mov
mov
ds
adc
xchg
or
push
sbb
popf
ret
pop
lods
mov
pop
or
filds
mov
inc
or
adc
sbb
inc
lock
imul
cltd
pop
or
add
xchg
add
scas
imul
sub
xor
fidivrl
cld
daa
push
sbb
xchg
sbb
xchg
xor
aam
sbb
mov
sbb
push
jno
xor
data16
push
shrb
mov
popa
inc
dec
icebp
cmp
mov
inc
loopne
clc
fs
sbb
loop
inc
jg
cltd
rolb
clc
adc
jp
inc
or
push
nop
andl
or
add
lcall
fbld
shll
pop
xchg
jne
jae
dec
xchg
sahf
pusha
pop
pop
dec
push
and
add
add
mov
daa
cmp
test
icebp
stos
int
std
inc
pop
xor
movsl
xor
jne
rcrl
and
push
lret
movsl
rorb
sbb
add
mov
add
sbb
mov
inc
mov
lods
daa
pop
pop
adc
push
popf
addl
push
mov
mov
sbb
xor
pop
and
pop
or
movsl
mov
or
aad
out
xlat
jecxz
inc
ret
leave
das
sbb
or
and
ja
adc
lcall
xor
cmp
mov
or
pop
push
pop
xorl
cmc
or
sbb
popa
dec
dec
adc
popa
mov
enter
jns
andl
sbb
int
pusha
dec
push
ret
adc
lahf
add
jmp
fs
shlw
stc
inc
out
rcll
cmpb
adcb
cltd
adc
add
fsubrl
jle
imul
mov
add
cmp
sbb
pop
sub
or
jb
push
imul
inc
xor
loopne
xor
jno
mov
mov
push
cmp
lds
sbb
roll
sub
mov
jns
daa
or
add
sbbl
call
loopne
inc
jo
nopl
ret
mov
jno
gs
sbb
pop
aam
inc
lret
adc
pop
inc
nop
xor
add
and
pop
lcall
int
and
inc
push
pop
cmp
add
jno
sub
mov
enter
mov
xor
testl
nop
ss
xor
and
cmp
mov
fstps
xchg
jp
add
mov
adcb
dec
js
mov
cwtl
dec
xchg
testb
stos
mov
das
jne
xchg
dec
mov
adc
push
lahf
je
sbb
pusha
inc
add
dec
pop
and
in
push
cwtl
scas
dec
cmpsl
lock
inc
test
cmpl
xchg
test
mov
ret
pop
add
jo
push
outsl
or
sbb
mov
jae
aaa
scas
add
stc
stos
pop
es
jmp
push
mov
and
je
sub
subl
fsts
ds
shlb
jo
lret
and
imul
mov
mov
std
sbb
in
imul
cmpb
nop
jg
jne
cmp
push
or
mov
test
outsl
xchg
fwait
popf
das
push
push
rclb
push
dec
ret
or
cli
test
outsl
ret
xor
push
mov
inc
sbb
mov
jo
gs
sub
jbe
jns
loopne
mov
aaa
int
push
adc
test
adc
sbb
pop
rcrl
pop
jno
mov
xor
sub
mov
ljmp
jecxz
or
adc
pusha
cs
cmp
loop
mov
xchg
jns
sbb
out
sub
test
arpl
shll
push
fistl
repz
lds
xor
mov
push
mov
and
inc
rcl
xor
pop
mov
pop
push
test
jecxz
push
add
xor
bound
mov
add
adc
push
or
sbb
and
call
jecxz
je
sbb
inc
push
pop
enter
hlt
call
lahf
push
push
mov
popf
jmp
add
into
push
jg
add
push
adc
xchg
mov
int3
adc
loop
repnz
not
adc
inc
fldt
cmc
xchg
xorl
pop
out
arpl
jns
adcl
aas
sbb
subb
xor
cld
inc
clc
or
xor
cmp
andl
movb
ljmp
jns
testl
das
leave
pusha
adc
mov
and
jg
movsl
lods
sub
in
out
push
and
addb
add
jno
bound
dec
dec
addl
jb
mov
pusha
in
cmc
inc
cmpl
pop
scas
jmp
insb
frstor
sbb
mov
mov
jnp
aad
push
push
arpl
leave
push
sub
test
and
bound
adc
push
push
and
cltd
jae
iret
push
sbb
sub
fbstp
daa
lock
and
add
mov
cmp
pop
xor
inc
popf
sti
inc
cs
addb
add
pop
daa
xor
jne
xor
ror
pop
add
cmp
and
js
aam
loope
mov
cld
bswap
inc
push
test
add
subl
inc
loope
leave
sbb
mov
sub
add
arpl
add
in
inc
push
subps
test
push
jecxz
mov
adc
xchg
je
pop
dec
jmp
adc
hlt
and
mov
push
xor
add
in
or
jl
jl
out
inc
xor
jbe
inc
mov
xchg
add
outsb
icebp
call
call
clc
jns
test
loop
cmc
icebp
jno
or
prefetch
aam
pushf
into
add
dec
cmpsl
fsubl
cltd
lea
inc
movl
xorb
add
xor
insl
nop
inc
pop
enter
subl
stc
shl
jle
mov
xchg
push
push
andl
dec
mov
pushf
mov
xchg
mov
pop
cwtl
and
pop
jecxz
outsl
ret
push
roll
shlb
dec
nop
mov
and
push
scas
dec
aaa
sbb
inc
add
xchg
jns
push
andl
and
add
insl
sti
mov
or
jne
cwtl
sub
out
loopne
mov
icebp
imul
lcall
pusha
pushf
fstpt
mov
adc
loopne
std
and
cmpsb
dec
icebp
adc
inc
pop
sbb
dec
add
add
xor
int
push
mov
inc
ret
nop
pop
js
sahf
add
sbb
push
adc
mov
fisubrs
dec
inc
push
int
xor
xor
lcall
dec
pop
mov
das
and
dec
scas
cmp
jg
mov
dec
mov
add
nop
orl
ss
rol
flds
mov
push
cmp
rol
imul
xchg
sar
std
or
mov
mov
pop
mov
jge
mov
cmpsl
cmpsl
outsb
rolb
inc
jne
adc
rorl
cs
out
ret
nop
and
sbb
movsl
pop
dec
add
xor
adc
xchg
xor
or
orb
add
mov
pop
in
dec
adc
xchg
pop
dec
arpl
popf
fildl
cmc
mov
icebp
popf
push
cltd
jmp
xchg
add
xor
out
xchg
lcall
mov
push
dec
or
pop
jb
lcall
add
jmp
push
ret
mov
enter
aaa
xchg
pop
iret
sub
inc
adc
xor
adc
add
jnp
xchg
out
mov
add
add
rorl
xchg
das
int
add
sbb
xor
xchg
cmp
add
sti
dec
add
std
jo
xor
push
add
pop
inc
add
fdiv
sbb
mov
or
jo
add
mov
into
mov
or
sbb
call
xor
lock
int
insl
insl
int
cmp
pop
jno
sub
xchg
xor
inc
add
andb
inc
xor
mov
dec
ret
in
cmp
cli
xchg
lret
lods
add
sbb
push
dec
pushf
ss
dec
cwtl
sub
xor
sbb
lcall
xor
push
sub
xor
inc
repnz
mov
sub
push
popf
pop
dec
push
xor
lahf
dec
sub
test
sbb
stc
mov
cwtl
push
in
popf
movsb
cmp
imul
imull
xor
lds
cwtl
and
xchg
push
frstor
dec
mov
popf
mov
cs
adc
out
leave
push
imul
push
orl
rcrl
push
push
leave
jb
xor
adc
add
stos
mov
inc
xchg
xchg
lock
das
jo
sub
pop
aaa
sbb
adc
add
ret
rcll
aam
sbb
inc
xor
add
push
leave
enter
and
jmp
ds
rorl
push
out
and
movsl
xor
xor
loopne
lcall
ret
xor
jmp
mov
inc
inc
hlt
cmp
in
and
and
and
jne
ret
mov
pop
fistpll
mov
inc
in
fistpl
inc
sahf
mov
xchg
dec
imul
out
int3
jo
test
outsb
cmp
cmc
and
enter
adc
jb
je
inc
xor
cltd
ljmp
test
imul
sub
ret
xor
enter
xor
inc
sub
push
mov
es
dec
addb
xchg
pop
mov
or
or
out
stos
call
imul
sbb
xlat
aad
mov
jb
adc
mov
bound
cmp
jo
test
xor
std
stos
shrb
test
dec
jnp
xlat
shrb
jae
lahf
repnz
test
xor
lcall
xchg
and
sbb
xor
test
cmp
andb
mov
orb
mov
pop
in
call
xchg
adc
add
mov
cltd
mov
hlt
add
xor
in
filds
in
add
ja
mov
pop
jl
jae
pusha
stos
cmpsb
xchg
sbb
push
movsb
mov
cwtl
rorl
xor
add
std
cltd
pop
push
popa
dec
cmpsb
sysret
dec
or
adc
ss
jns
out
int
or
mov
xor
mov
mov
test
loope
jno
inc
jmp
repz
jecxz
dec
and
ds
pop
mov
and
call
mulb
jo
je
and
or
inc
cmp
jp
std
sti
aam
add
pop
shrb
test
adc
rolb
repnz
ss
loopne
sub
bound
xor
dec
and
inc
repnz
cmp
jmp
shrl
sub
in
rorb
ljmp
push
pop
and
add
mov
sbb
fstps
ss
ret
xchg
and
cmp
fs
push
xor
sbb
add
ror
cmpl
test
sbb
xchg
pop
add
stos
lea
jae
loop
add
pop
xchg
mov
addb
aaa
or
rcll
jb
sbb
cmpsl
cmp
les
jmp
aad
pop
subl
add
imul
sub
insb
xchg
adcl
lods
sub
or
add
jo
cmpsb
push
or
add
pop
pop
xchg
mov
icebp
nop
inc
pusha
push
movsl
dec
xor
or
es
rcl
sbb
mov
push
cld
pop
mov
imul
or
and
bound
stc
mov
or
pusha
stc
inc
push
cmp
cmpb
cmp
das
test
push
pop
inc
lcall
add
xchg
test
or
or
aaa
imul
loopne
arpl
stos
jge
aam
lds
shl
adc
fwait
add
imul
pop
push
mov
xor
jge
rorb
sbb
pop
inc
insl
add
inc
mov
rcl
inc
or
aad
sbb
pop
cmp
mov
fwait
shll
iret
mov
add
lcall
orl
push
ljmp
mov
lahf
mov
inc
cli
xchg
stos
push
ljmp
add
dec
fisttpll
push
ljmp
xlat
cli
sahf
loopne
repz
orl
add
es
mov
shlb
add
andl
add
add
aam
mov
bound
inc
or
adc
xor
dec
dec
test
mov
pusha
imul
sub
arpl
and
repnz
ret
or
push
shrl
sbbl
or
adc
add
pop
sbb
jb
ret
sbb
mov
xchg
xchg
add
mov
repnz
orb
jg
imul
and
adc
sub
add
pop
adcb
inc
scas
mov
sbb
lcall
xchg
lahf
ret
orl
sbb
add
lea
adc
shlb
xor
xchg
cs
cmc
push
nop
shrb
add
ja
mov
xor
loopne
push
cmp
dec
adc
sub
push
aad
subb
adc
add
ljmp
jns
adc
cmpsb
cs
sbb
sbb
inc
dec
pop
insl
push
mov
jo
pop
push
lret
or
dec
rolb
mov
cmpsl
int3
adc
pushf
fucomip
scas
mov
sbb
scas
sub
pop
fimull
repz
sbb
push
pop
rcl
stos
arpl
pop
pop
or
insb
push
xchg
mov
pop
and
jne
mov
or
inc
xchg
mov
add
mov
ret
js
adc
sbb
xchg
ror
push
pop
je
ja
add
das
fwait
in
inc
pop
or
subl
sti
add
add
cmp
dec
outsb
pop
enter
add
test
test
mov
pop
mov
mov
pop
push
stos
mov
outsb
xchg
sahf
aad
dec
cld
sub
add
jne
out
add
adc
stos
fcoms
mov
incl
test
das
aam
adc
or
das
cmpsb
mov
mul
loopne
subl
jmp
xor
xor
add
ret
cwtl
dec
nop
pop
subl
icebp
mov
xchg
push
jecxz
in
jmp
cmp
adc
jg
dec
incb
pop
andb
xor
and
ds
movl
cmpl
sbb
push
into
stos
sub
and
sub
outsb
test
enter
stos
xor
pop
adc
mov
gs
aaa
test
jmp
mov
xor
loop
dec
lds
or
cmp
sub
inc
shlb
xor
xchg
lea
push
repz
adc
jne
adc
xlat
add
adcl
cwtl
loop
aad
pop
mov
sbb
adc
arpl
adcl
test
mov
out
jl
push
ja
js
add
imul
insl
lret
repnz
arpl
rclb
or
call
iret
hlt
iret
cmpsl
inc
mov
pop
xchg
pop
adc
pop
pop
subl
xchg
dec
mov
xor
mov
dec
enter
bound
pop
inc
fbld
sub
dec
push
inc
pop
mov
mov
pop
xchg
pop
xor
add
or
push
psubd
sbb
cs
sti
cmp
hlt
mov
pop
sbbl
lds
pop
push
pushf
jmp
cmp
ds
add
popa
xor
jmp
int
test
ret
inc
xchg
inc
fcoms
jle
es
push
inc
int3
inc
sbb
call
sti
mov
test
test
pusha
sub
fcmovnb
push
add
int3
push
cmpsl
pusha
cmp
rol
add
lock
inc
xchg
loop
sbb
add
push
adc
or
mov
jb
stc
mov
stos
nop
sbb
add
pop
fs
add
aad
movsb
mov
negl
repnz
or
sahf
or
jno
inc
dec
add
sub
adc
hlt
push
dec
sub
dec
imul
mov
push
push
fsubs
lahf
add
mov
mov
clc
push
sub
pop
cmove
bndstx
push
pop
shlb
cwtl
xor
je
cmp
addl
jns
add
xchg
mov
xor
sbb
ret
inc
xor
inc
js
or
dec
arpl
insl
rcrl
subl
outsl
adc
add
sbb
pop
sbb
mov
imul
test
push
pop
push
or
add
fwait
push
dec
decl
aam
fsubrs
sub
jle
push
or
es
les
pop
add
inc
add
mov
andb
movsb
dec
iret
mov
add
je
jge
mov
mov
add
jne
lcall
mov
mov
add
sbb
xorb
inc
shlb
jne
roll
jb
inc
or
icebp
sbb
or
push
jl
lods
mov
je
inc
sahf
mov
fs
sbb
inc
push
mov
add
test
cmp
adc
adcl
imul
push
xchg
data16
fbstp
xchg
pop
jge
popa
lcall
sbb
dec
mov
mov
inc
int3
shll
cmp
xorb
rolb
outsl
fsubs
test
pushf
adc
sub
jo
sub
and
and
push
pop
aam
test
data16
sbb
arpl
pop
push
sbb
xor
daa
shlb
pop
xor
or
inc
in
add
mov
jnp
sbb
push
cmp
arpl
mov
mov
je
pop
mull
loopne
jo
iret
das
xor
lods
mov
pop
jne
add
push
xchg
xchg
adc
inc
mov
pop
jmp
add
outsl
adc
sub
loop
xchg
in
push
imul
leave
sbb
fstps
andl
and
imul
jne
xor
jmp
pop
adc
xchg
xor
xchg
sahf
mov
loopne
add
push
dec
add
inc
sbb
stos
mov
mov
or
inc
push
sar
push
xor
add
xor
dec
mov
cmp
jno
dec
jb
cwtl
lahf
cmpsl
cs
push
je
aam
cld
les
out
xchg
pushf
mov
ljmp
or
std
stos
pop
test
inc
push
rcrb
nop
sub
das
or
movsl
pop
and
sub
and
mov
outsb
or
popl
orl
cmpsb
add
mov
or
or
adc
lock
xchg
xlat
test
and
mov
or
popa
jmp
xor
inc
xor
sbb
nop
pushf
mov
xor
popf
sub
xlat
adc
cmp
scas
and
scas
add
cmp
push
cmpsb
and
and
lcall
pop
xor
cmp
or
shl
fisttpl
cwtl
and
sbb
sub
cmp
jo
xchg
cmp
sbb
and
fistl
sbbl
xchg
sub
pop
jne
nop
daa
cwtl
icebp
cwtl
arpl
lcall
mov
jge
sbb
xorb
dec
call
dec
mov
xorl
mov
dec
jmp
mov
in
sbb
testb
and
push
insl
mov
popf
cmp
dec
mov
mov
pop
cwtl
or
mov
sbb
das
mov
mov
pop
sub
cmp
mov
lea
insl
dec
mov
pop
xchg
jno
fldt
xor
cwtl
mov
es
mov
loope
mov
mov
adc
arpl
fnstenv
fistpl
adc
push
outsb
in
sbb
loopne
cmc
push
sbb
adc
add
call
ja
hlt
out
xchg
int3
fsubrp
orl
inc
mov
jle
push
cmp
sbb
sub
xorl
imul
jl
daa
cmpsl
sub
inc
xor
pop
pop
pop
icebp
pop
ret
ljmp
fsts
cmc
mov
cltd
mov
cmpsb
fistpl
push
les
sbb
pop
stos
push
pusha
push
push
push
sub
adc
sub
adc
cs
xchg
inc
roll
xor
dec
movsl
sub
cmpl
jl
imul
mov
sub
and
and
aam
leave
arpl
inc
sbb
xor
pop
push
stc
cmpsb
inc
push
push
cmp
stc
or
dec
mov
call
add
push
inc
mov
bound
in
adc
push
loope
outsl
jns
popa
aas
dec
dec
adc
repnz
test
push
push
aad
push
mov
test
pop
das
sbb
mov
aaa
loope
pop
or
mov
lods
sbb
inc
push
mov
loop
test
jno
andl
test
sbb
lcall
dec
jo
push
pop
adc
adcl
dec
pop
inc
hlt
add
outsl
lret
add
sbb
dec
popa
bswap
pop
xor
xchg
scas
xor
push
jne
or
xchg
mov
jne
cmp
add
push
jo
cmp
and
cmp
fxtract
push
add
int
mov
jno
xor
int3
jno
add
jne
inc
dec
adc
push
inc
mov
sbb
add
es
pop
in
test
sub
addl
scas
add
jae
push
cwtl
je
sbb
dec
xchg
sub
test
decb
scas
or
adc
inc
mov
xchg
sbb
adc
push
jne
fsubs
dec
adc
inc
adc
adc
adc
imul
idivb
nop
lahf
and
lea
mov
bound
pop
pusha
add
aam
jg
cmc
std
dec
int3
orl
jl
out
mov
xor
daa
inc
add
adcl
sbb
ret
jne
test
dec
dec
mul
push
mov
xchg
xchg
jne
mov
push
inc
aas
add
and
mov
inc
mov
and
imul
mov
push
sbb
xchg
adc
add
cmp
fldcw
sbb
fwait
scas
sub
call
shrl
add
or
aam
dec
rolb
push
xor
adc
or
scas
jl
jnp
test
jo
nop
cltd
testl
and
loop
and
inc
add
das
rcll
sbb
add
jne
sahf
lar
cmp
popa
mov
add
adc
pop
adc
add
icebp
mov
jmp
hlt
push
cs
pcmpgtd
test
adc
sub
stos
and
xchg
sub
xor
jns
clc
jno
push
mov
adc
push
cmp
daa
test
add
cmp
and
adc
pop
push
and
pop
leave
in
lahf
pop
or
or
add
add
xchg
push
out
xor
or
adc
xchg
cwtl
or
adc
mov
jnp
pop
ret
jecxz
inc
add
movsl
icebp
inc
sub
daa
addb
ljmp
add
xorl
insb
or
int
outsb
adc
lods
and
test
js
add
mov
std
push
shr
js
add
addr16
bound
orb
xchg
xor
jae
inc
stos
push
xor
add
push
lods
sbb
xchg
lret
std
dec
mov
iret
mov
cmp
xchg
faddl
jae
insl
add
lahf
ret
mov
loope
aaa
pop
hlt
rolb
pushl
inc
jae
cmpsl
cmpb
rclb
or
dec
fnstenv
pop
sbb
ret
pop
popf
sarb
push
and
movsl
imul
mov
imull
bound
cmp
jecxz
fs
cmp
sbb
pop
fldt
and
or
cmp
int
icebp
dec
popa
sub
push
roll
cmpsl
add
test
sub
arpl
adc
jnp
adc
dec
mov
mov
jg
sbb
xchg
add
push
xchg
cmpsb
stos
mov
loope
cmp
or
cmp
sbb
xchg
ljmp
les
in
out
xor
dec
and
mov
test
icebp
xor
int
xchg
adc
sbb
cmp
or
mov
and
cmpsb
dec
jne
inc
cmp
dec
inc
lcall
jnp
les
adc
popa
and
and
mov
mov
mov
fiaddl
or
dec
int3
jae
mov
add
xorl
es
fadds
jae
cmpsb
outsb
push
aaa
cmovno
pop
scas
mov
aad
inc
jnp
sub
pop
and
es
fs
xlat
ret
cmpsl
or
and
pop
rolb
cld
mov
bound
pop
aam
lret
mov
adc
sub
fidivl
test
scas
sbb
nop
hlt
stc
js
pop
mov
ss
adcl
lods
subl
cmc
dec
pop
adc
arpl
call
pop
jno
andb
mov
push
mov
int3
mov
cmp
inc
movsl
sub
stos
int
xor
inc
pop
mov
sbb
adc
jmp
out
xchg
leave
pop
push
subb
xor
xchg
ja
bound
into
mov
cmp
mov
push
push
aam
inc
xor
sbb
adc
mov
lahf
inc
xchg
cmp
lret
add
jo
jp
xchg
cmc
scas
popf
mov
adc
cmp
outsl
enter
sub
aas
shll
push
mov
xor
shrb
in
dec
xchg
movsl
sarl
imul
popa
cwtl
adc
xlat
pusha
repnz
sbb
ljmp
add
cmp
repnz
test
shll
mov
fwait
dec
insl
add
test
int3
insl
loope
int
fnstcw
dec
scas
mov
inc
in
pushl
inc
popa
loopne
xchg
dec
pushf
mov
jle
cwtl
scas
xchg
dec
data16
xchg
cmpb
int
adcl
popf
inc
rcll
ss
add
cwtl
in
inc
lea
xchg
adc
aam
jge
inc
dec
dec
pop
dec
mov
pop
cmp
les
push
add
movb
ret
mov
push
cltd
std
sbb
mov
clc
int3
rolb
aam
jae
mov
or
dec
insl
lods
mov
test
adc
lret
lods
fldt
fbstp
mov
pop
frstor
and
pop
mov
pop
test
push
sub
lds
sbb
cmp
fisttpl
jne
add
xchg
inc
xor
mov
int
xchg
xor
add
and
das
hlt
or
mov
ret
add
into
adc
cmpl
mov
lret
mov
mov
dec
and
les
push
xchg
mov
call
xorb
add
push
mov
xchg
inc
outsb
sbb
inc
xor
xchg
pop
mov
imul
or
leave
sub
outsb
xor
push
push
inc
shlb
imul
mov
xor
inc
push
adc
sub
arpl
test
lret
jns
adc
cwtl
mov
mov
inc
and
mov
and
int
mov
lods
aas
mov
aam
jnp
xor
loop
jne
jae
xor
inc
xchg
push
xor
add
xlat
and
adc
pop
sub
or
pop
mov
push
adc
and
icebp
hlt
adc
dec
jp
pusha
inc
pop
xor
shlb
insb
pmovmskb
jle
sbbw
adc
imul
ss
or
jmp
jmp
mov
sub
xchg
push
xchg
aas
insl
loop
add
cmp
incb
sub
add
xor
mov
pusha
adc
dec
lcall
sub
dec
mov
mov
pop
mov
test
push
seta
jecxz
orb
shrl
jp
jge
inc
or
sbb
inc
and
mov
mov
in
inc
arpl
or
xlat
inc
jne
movb
dec
cwtl
cmpsb
imul
jmp
or
mov
rorb
jg
or
inc
ret
jmp
imul
mov
adc
add
sbb
in
pop
orb
push
or
sbb
dec
xlat
pushf
dec
push
jmp
sti
jp
sbb
cmp
dec
popf
es
sbbl
out
dec
pushf
jecxz
out
das
mov
test
or
xchg
pop
shll
movsb
adc
out
push
jecxz
add
mov
mov
mov
daa
rorl
and
push
mov
ret
int3
xor
and
arpl
ja
lods
jne
imul
mov
or
iret
mov
and
sbb
and
pop
inc
push
les
xchg
xor
lds
mov
jno
and
xor
mov
iret
jp
mov
xchg
inc
dec
sub
jmp
push
cwtl
sbb
cmp
add
les
faddl
lds
mov
aad
scas
in
dec
or
add
or
int
aaa
cmp
jns
or
lods
repnz
fldl
leave
or
fnsave
inc
adc
loopne
sub
in
add
jno
mov
arpl
cmpsb
inc
and
add
ret
lods
cltd
jl
in
loopne
neg
push
pusha
inc
pop
je
stc
jnp
sahf
add
and
incl
scas
in
gs
adc
pop
inc
adcb
sub
inc
push
or
pop
mov
push
and
sbb
push
loope
and
aas
idivl
outsl
dec
push
sti
dec
mov
mov
jmp
xchg
inc
mov
imul
je
popa
insb
inc
insb
insb
inc
add
std
imul
inc
dec
repz
ret
cmovge
insl
sbb
cltd
subl
inc
xchg
xor
insb
lcall
dec
adc
and
pop
bound
inc
dec
cmp
adc
lea
inc
movsb
pop
sub
call
lahf
add
xchg
sbb
outsb
sbb
bound
mov
test
in
sti
push
les
push
out
test
mov
roll
sub
sub
sahf
pop
or
xchg
sbb
xor
mov
mov
imul
lods
dec
lcall
push
push
fcoml
push
or
mov
dec
dec
or
sbbl
mov
add
les
sub
push
cmp
push
jo
addr16
sahf
or
and
out
and
ret
add
aad
jecxz
cmp
mov
xor
cmp
icebp
jae
jmp
loope
mov
jecxz
pop
lods
lds
jo
mov
cmp
fildl
fstl
loopne
bound
lea
xchg
push
sbb
xchg
int
xchg
push
test
dec
add
sbb
push
push
mov
or
lcall
inc
sub
cs
xchg
adc
adc
testb
rolb
push
icebp
or
mov
mov
push
fistps
andl
stc
add
test
jnp
out
add
add
movsb
inc
fwait
inc
jp
add
adc
cwtl
nop
int
dec
pop
leave
dec
mov
dec
inc
sub
rorl
sbbl
cmp
fwait
pop
xchg
inc
sarl
inc
lahf
inc
mov
clc
pop
or
or
fnstenv
pop
loope
ret
loope
daa
nop
lret
mov
ljmp
push
mov
pushf
loope
jns
ljmp
hlt
dec
add
push
push
mov
sub
adc
pop
popa
popf
fwait
movsb
test
inc
cs
test
xchg
cmp
test
sub
pusha
cmpl
repnz
aaa
das
inc
dec
movsl
cmp
push
add
sub
out
xchg
icebp
dec
cs
movsl
mov
les
dec
sbb
mov
xor
jge
pop
cmpl
stos
mov
inc
lds
xor
sub
into
ljmp
lods
call
cltd
stos
adc
mov
in
imul
pop
xor
fs
test
or
dec
sbb
and
test
inc
mov
negl
int3
add
adc
test
mov
and
movb
sub
add
fldenv
xor
xchg
cltd
add
sbb
adc
add
push
sub
test
push
xchg
or
adc
jb
jae
pop
xchg
jne
xor
cmp
dec
rclb
inc
cs
cmp
dec
lret
popf
pushf
xor
mov
dec
inc
and
adc
insl
into
cmp
push
add
mov
push
jns
xchg
sub
aam
xor
inc
es
xor
dec
or
repz
push
add
mov
outsl
push
mov
add
cmp
and
mov
and
shl
pop
repz
out
enter
loope
xchg
mov
out
push
inc
sbb
sahf
inc
inc
lcall
ret
insl
rcll
pushl
or
xor
outsb
adc
arpl
inc
and
lret
in
popf
inc
test
stos
ret
inc
mov
jno
repz
out
insl
mov
mov
push
in
jno
mov
cmp
xor
je
scas
loopne
jmp
jg
add
adc
adc
leave
xorl
xchg
mov
or
add
nop
out
sub
clc
out
mov
cmpsl
stos
iret
inc
push
lods
sub
sub
mov
add
adc
adc
push
or
or
mov
xchg
cmp
mov
mov
push
roll
add
jl
mov
inc
fimull
arpl
jmp
lahf
fnsave
add
add
ds
push
add
icebp
inc
add
addl
sbb
icebp
gs
ret
das
push
incl
push
sbb
in
iret
jg
mov
push
lret
call
xor
xchg
test
jne
pop
fwait
dec
pusha
lea
push
xor
jo
mov
les
inc
pop
lea
ljmp
lods
mov
mov
dec
nop
mov
pop
rcl
dec
roll
or
call
add
leave
jno
leave
enter
or
mov
out
mov
lcall
adc
adc
dec
addl
ret
addb
outsb
dec
adc
jns
push
lods
cmp
iret
push
imul
push
push
xchg
sbbl
aaa
inc
xchg
or
cmp
stos
insl
mov
add
or
jmp
out
test
out
inc
mov
lds
iret
mov
push
or
xor
pop
cmpsl
loopne
cs
cmp
cs
clc
add
mov
jo
clc
sbb
jo
add
adc
xlat
insl
daa
adc
hlt
or
jne
je
nop
test
insl
stos
inc
insb
dec
pushf
sarb
in
pop
adc
and
add
nop
dec
test
dec
adc
outsb
cmp
ret
or
sbb
inc
push
ljmpw
rol
rep
dec
cmp
cld
or
mov
dec
mov
repz
push
cmpsl
sub
rol
xor
mov
mov
add
aad
testb
add
stos
xor
test
xchg
inc
aaa
inc
xchg
inc
xchg
push
loope
loopne
dec
jecxz
adc
les
jo
push
jns
in
ret
and
lcall
loope
add
scas
sub
mov
test
imul
xchg
sbb
out
push
add
aaa
jmp
imul
rol
add
mov
push
add
imul
inc
mov
or
cmp
lods
mov
imul
repnz
sbb
lcall
pop
inc
enter
test
xor
and
int3
adc
out
xor
stos
adc
sub
sbb
sbb
sarl
nop
bound
jne
mov
add
add
jo
in
jg
mov
subl
lcall
scas
xor
divl
fisubrl
stos
int
inc
xchg
jbe
sbb
fisttpll
movsl
xchg
int3
rclb
mov
adc
adc
jo
and
call
out
aam
dec
dec
and
xchg
fwait
daa
aam
cmpsl
push
fst
mov
jo
cmp
scas
mov
xor
rcl
jno
push
mov
xlat
pcmpgtd
loopne
ss
mov
scas
cld
bound
and
or
das
jecxz
les
fcomps
fisubs
addr16
js
and
lock
sbb
cmp
popaw
sub
mov
mov
mov
stos
rcrb
in
aaa
insl
lds
aad
mov
or
dec
pushf
xchg
test
mov
scas
lcall
lcall
cmpsb
in
cs
repz
add
movsl
test
xchg
ret
repz
arpl
nop
dec
jecxz
fwait
pop
push
rorl
scas
leave
cmpsl
adc
or
mov
xor
repnz
xchg
aas
mov
mov
inc
inc
mov
or
jbe
push
loop
jmp
fstpt
sahf
out
bound
jge
arpl
fwait
push
pop
add
or
inc
pop
pusha
jb
gs
lcall
stos
movsb
mov
fcoms
sbbb
push
cmpsb
xchg
outsl
int
dec
xor
frstor
ret
xor
mov
out
arpl
xchg
push
pop
mov
mov
jo
mov
mov
insb
ss
call
and
pop
xchg
outsl
addl
mov
xor
shlb
add
push
dec
xchg
lods
stos
rolb
leave
jbe
sub
xor
push
je
sbb
sbb
inc
outsb
inc
mov
mov
gs
sahf
push
daa
inc
jo
cmpsl
pop
movsb
sub
add
sbb
push
sbb
jo
sbb
testb
inc
sbb
xor
dec
mov
dec
pop
add
and
and
push
dec
mov
shrl
adc
orb
mov
sub
add
cmp
lcall
inc
jne
pop
ret
loope
pushf
sbb
inc
dec
push
xchg
or
add
pop
cwtl
adc
decl
push
in
cmp
arpl
inc
andb
push
xchg
push
xor
pop
xchg
or
xorl
jne
in
xorb
and
gs
and
push
hlt
add
sub
sub
lods
mov
loop
test
jb
push
bound
push
add
pop
xor
inc
add
ficoms
orb
push
outsb
cwtl
mov
dec
or
and
jmp
in
jecxz
push
stc
push
mov
fidivl
mov
inc
cmpsl
inc
rcrl
cmpsl
icebp
shll
xchg
inc
fidivs
rcrl
mov
inc
decl
filds
mov
mov
andb
inc
mov
pop
rorb
adc
lds
insb
mov
mov
sbb
dec
cmp
repz
or
test
push
loope
add
stos
pop
stos
data16
mov
adc
push
into
rol
cli
inc
aam
push
mov
adc
aam
mov
das
jo
fcoml
mov
mov
or
add
push
adc
adc
stos
out
mov
jle
dec
adc
lret
xor
and
sub
inc
and
aam
popf
push
jo
pop
popf
or
add
enter
add
xor
jnp
pop
add
add
arpl
mov
jl
xor
adcl
xor
out
lret
add
push
cmp
outsb
rcrb
cmp
mov
loop
jo
or
subb
push
or
clc
mov
jl
sbb
mov
pop
popf
xchg
pop
ret
sub
jge
cltd
push
mov
cmpl
loope
add
xchg
jns
aas
mov
jae
mov
sahf
jbe
ja
rorb
mov
adc
mov
jne
inc
and
shl
fdivr
xlat
push
pusha
jmp
sbb
fs
and
sbb
stos
add
mov
jno
or
pusha
mov
ret
mov
aas
test
mov
faddl
sahf
daa
in
lcall
jo
xchg
inc
mov
push
leave
pop
mov
jg
push
dec
sbb
or
xchg
mov
rorb
lock
nop
jp
sub
lea
xor
fld
sub
inc
or
mov
jo
add
push
movsb
lahf
xor
cltd
pop
icebp
call
jae
mov
xor
add
push
or
inc
shlb
in
or
and
mov
jo
insb
lock
cmp
pusha
mov
jg
or
mov
cmc
sti
inc
and
mov
sub
dec
repz
lock
fwait
push
mov
push
or
out
xor
xor
loopne
sub
das
pusha
jns
fcomps
xchg
or
push
xchg
lcall
cmp
test
call
mov
cmpsl
lds
js
jo
add
scas
or
push
pop
movb
adc
mov
inc
xchg
dec
out
arpl
sbb
addr16
jl
aam
lds
daa
in
push
adc
lea
test
scas
mul
es
daa
fistpl
or
test
cwtl
or
inc
leave
cmpsl
pop
fcoml
xor
mov
aas
je
add
adcl
inc
fadd
mov
jne
jge
dec
cwtl
inc
cmp
mov
mov
rcrb
cmpsl
or
add
add
add
adc
daa
pop
jmp
je
das
inc
adc
stc
sub
imul
mov
in
rorl
lds
pop
insl
and
pop
fwait
imul
mov
push
inc
xchg
inc
sbb
cmpl
les
aad
je
sub
jl
lock
pushf
and
rclb
roll
es
test
or
dec
sbb
dec
and
mov
mov
icebp
jmp
repz
add
sbb
xor
imul
pop
ret
test
nop
cmpsl
ljmp
inc
add
or
int
imul
push
rolb
jecxz
dec
lods
mov
xchg
xor
fidivrl
jg
lret
clc
mov
and
in
xchg
hlt
ds
loope
rcrb
dec
xor
sbb
xchg
and
push
jnp
call
mov
cwtl
movsl
icebp
ds
xor
in
imul
or
mov
xor
xchg
mov
in
pop
push
fdivrs
push
or
cmp
add
cmp
and
adc
inc
adc
ret
fisubl
xchg
jns
add
mov
cmp
jbe
enter
mov
icebp
add
jne
sbb
in
jo
adc
jo
sar
push
pop
push
or
xchg
jl
jl
xor
divl
aaa
push
mov
push
push
xchg
add
mov
and
nop
xor
and
sar
or
sbb
pop
pop
fldl
jno
add
test
gs
loope
mov
prefetch
cmp
and
cld
scas
pop
rcr
fisttpl
inc
in
repz
or
nop
cld
in
inc
and
mov
mov
or
decl
mov
ret
addr16
pushf
adc
stos
pop
adc
lock
lock
in
rcll
pop
mov
sub
mov
and
dec
scas
loope
xor
adc
push
andb
add
adc
adcb
xor
in
test
dec
imul
jbe
subb
xchg
xchg
push
ret
adc
mov
jp
ret
call
push
fldl
pop
and
dec
mov
add
in
and
mov
ds
jne
arpl
adc
pushf
test
sub
sbb
jo
cltd
xchg
xor
xor
sbb
or
sbb
add
pop
push
movsl
push
cmpsl
pop
pop
imul
cmc
dec
jle
ljmp
or
adc
test
mov
push
andl
lds
in
inc
dec
push
filds
xor
jecxz
jle
iret
xchg
jo
ret
inc
or
pop
cmpsl
shll
and
inc
sub
push
mov
cmp
adc
loopne
dec
push
inc
test
inc
repnz
mov
loop
rcrl
inc
or
jecxz
adc
and
add
jo
rorl
pushf
mov
or
fnstsw
out
les
and
cmp
xchg
out
dec
andb
add
popf
pop
inc
and
and
in
adc
mov
scas
cmpl
mov
cmp
inc
repnz
mov
rcrl
arpl
or
sub
xor
cmp
adc
push
dec
pop
jecxz
adc
jne
mov
adc
inc
push
sub
orl
lds
fwait
add
imul
push
mov
es
inc
inc
outsb
bound
mov
add
jno
jmp
mov
lret
js
sub
and
shrb
fcmovnu
inc
inc
cmp
lret
popf
es
cltd
dec
sbb
pop
mov
mov
mov
sbb
cmp
int3
inc
stc
mov
jmp
roll
jb
ss
cmp
xor
add
ret
les
subl
xor
cmp
mov
xchg
pop
jno
mov
frstor
mov
cmpb
push
arpl
jmp
jg
cli
mov
jl
aaa
add
out
fisttps
pop
cld
mov
add
xchg
push
shll
mov
int
roll
iret
jae
mov
lods
imul
movsl
pop
dec
push
je
cmp
shrl
inc
test
inc
xor
and
rcrb
jl
jb
pop
add
xor
mov
fimull
rcrl
pop
jecxz
mov
mov
cmp
adc
dec
repnz
adc
lods
dec
push
dec
cwtl
xor
inc
sub
pop
push
test
cltd
aad
out
push
inc
in
aad
bnd
mov
xchg
sbb
movsb
mov
adc
test
add
dec
mov
pop
sahf
sub
pusha
pop
aam
jge
mov
in
lcall
jno
mov
int
sahf
cmp
and
call
shlb
or
scas
cwtl
pushf
pushf
pusha
sahf
in
cltd
aaa
cs
inc
test
add
adc
loope
xchg
jb
push
test
xchg
push
pop
pop
pop
pop
sarb
enter
imull
push
add
sbb
gs
in
lds
cmp
fnstsw
xchg
xchg
fildll
push
pushf
cmp
jnp
cmp
outsb
add
ljmp
add
adc
stc
inc
cmp
call
lds
cmp
pop
jnp
push
add
or
push
mov
or
hlt
out
outsl
push
dec
lods
xchg
or
mov
lret
xchg
leave
shrl
mov
cmp
push
xor
call
sub
adc
inc
mov
mov
test
sub
andl
inc
ret
or
sub
mov
or
rolb
outsl
insb
int
dec
ds
adcb
sub
outsb
and
in
mov
sub
js
xchg
mov
inc
lods
xchg
push
xlat
ret
add
xchg
cmp
mov
add
add
inc
cwtl
mov
hlt
add
stc
or
and
aaa
arpl
faddp
jecxz
dec
addr16
loope
and
push
movsl
add
add
push
clc
inc
cmpb
and
adc
dec
xor
adc
mov
out
mov
repnz
adc
inc
leave
out
jmp
je
dec
cmp
daa
lahf
test
mov
cmpsb
jns
je
jp
jns
sub
add
mov
or
sbb
dec
mov
fs
mov
dec
cwtl
dec
push
dec
cmpsl
add
ret
add
inc
sbb
xor
test
or
cli
jo
lahf
push
and
rolb
ss
enter
sbb
push
inc
and
jb
out
fisttpll
pop
xlat
inc
shll
mov
pop
or
loopne
mov
cld
or
rorb
xchg
add
jecxz
test
lret
mov
ja
dec
lea
xchg
gs
mov
lods
adc
cmovns
das
inc
xor
mov
adc
mov
popa
mov
je
or
mov
adc
call
pop
cwtl
mov
push
xchg
inc
inc
test
or
int
xlat
ret
outsl
cli
loopne
push
cwtl
jo
add
mov
adc
or
pop
or
and
rclb
push
sbb
mov
push
shlb
dec
adc
adc
dec
push
xlat
pop
jno
lea
adc
nop
inc
out
xor
xchg
sub
shrb
js
pop
push
rolb
lds
lahf
jno
pop
push
dec
ret
call
pop
mov
xchg
sbb
inc
inc
insl
invlpg
push
popa
test
nop
jge
inc
dec
call
push
inc
sbb
jns
fstl
cmpsb
inc
cmc
data16
sbb
mov
cmp
sarb
push
and
mov
das
push
adc
pop
xor
sbb
inc
and
hlt
mov
add
mov
and
test
sti
jl
or
pop
dec
cmp
lea
jno
jmp
inc
pusha
cwtl
insl
jo
mov
xor
mov
das
inc
xor
mov
sbb
pop
xchg
sub
subl
aas
and
cmpsb
clc
aad
call
es
adc
aad
inc
test
and
sbb
push
add
int
gs
out
jle
bound
je
jmp
lods
dec
lret
iret
insl
pop
int
je
mov
subb
sub
push
sbb
cmp
pop
adc
fnstsw
int
sub
imul
cltd
jns
loop
adc
mov
jle
sub
insb
js
es
jbe
dec
mov
lock
push
aad
adc
and
xor
jmp
addr16
std
jns
or
jp
push
or
enter
ret
icebp
daa
add
icebp
adc
dec
sub
dec
pop
push
stc
stos
inc
xor
adc
add
or
add
pop
mov
mov
or
test
mov
and
dec
mov
sahf
shlb
je
pop
add
mov
sbb
int
test
notl
rolb
mov
sub
mov
and
push
nop
mov
cmp
cltd
out
shr
aam
sbb
enter
jae
sbb
shlb
and
and
or
cs
jmp
xor
and
xchg
add
insl
add
movsl
jecxz
mov
pop
js
pop
adc
xchg
push
cwtl
cmpsb
push
popf
dec
fisttpl
add
rorb
fisubs
push
fwait
div
mov
ljmp
daa
xchg
lcall
adc
call
stc
sub
out
daa
dec
add
cld
add
xchg
jge
es
loop
inc
jle
xor
loopne
push
sub
out
mov
inc
fs
stos
jp
dec
cld
sbb
mov
adc
xlat
pop
lret
es
xor
lea
inc
int3
orl
jae
mov
xor
mov
aad
cmpsb
rclb
fisttpl
xchg
add
adc
xorb
cmp
push
xchg
fucomi
daa
inc
adc
test
das
push
add
mov
xchg
mov
lods
adc
push
andb
xor
add
and
jns
xchg
xor
mov
cmp
popa
stos
imul
mov
add
add
enter
out
push
out
xor
clc
push
mov
mov
orb
mov
sbb
xchg
pop
negl
shll
arpl
mov
xor
jmp
inc
inc
test
pop
push
lcall
adc
pop
pop
jmp
xor
call
sbb
scas
add
lock
lea
aad
cmp
roll
iret
js
mov
mov
inc
jb
sbb
jne
dec
push
dec
xor
cltd
push
jbe
mov
jno
inc
or
cmp
push
cmp
ljmp
mov
enter
aam
lcall
sbb
gs
xchg
push
mov
mov
add
sarb
ret
arpl
add
jno
xor
test
xchg
mov
test
jb
vmovhps
adc
loope
jns
xor
or
push
mov
mov
adc
mov
mov
ret
push
inc
jmp
adc
scas
adc
scas
les
jl
add
sbb
cwtl
pusha
xchg
mov
pop
ret
inc
repnz
mov
and
stos
lcall
add
jmp
shrl
push
int
inc
adc
lods
pushl
mov
imul
movsb
test
sbb
test
inc
jmp
mov
xchg
lahf
xchg
aaa
test
mov
xor
and
rorl
mov
dec
movsl
cltd
mov
push
fimuls
xsaveopt
fimull
add
mov
or
dec
xchg
cmp
mov
orl
push
aam
xor
adcb
icebp
rclb
out
mov
add
outsl
js
nop
outsb
popf
jle
clc
mov
pop
cltd
or
lret
pop
scas
imul
sbb
movsl
fldcw
mov
cmpsl
movsb
insl
cltd
xchg
pop
aam
aad
sbb
and
add
inc
aad
loop
inc
pop
push
int
jecxz
push
orl
std
lcall
pop
inc
sub
sarb
sub
mov
mov
fildll
jne
pop
push
or
inc
stos
stos
cmp
xor
adc
inc
sbb
pop
loope
scas
inc
sbb
xor
call
dec
js
xchg
push
dec
sbb
sub
add
add
sub
mul
or
lea
shrl
test
push
mov
mov
out
lods
inc
fldl
dec
cwtl
xor
shrb
adc
mov
xchg
push
in
sub
cmp
mov
dec
sbb
pop
loope
mov
jne
orb
stc
nop
fildll
shl
ja
dec
das
pop
add
lret
push
or
daa
cmp
scas
lahf
xchg
xor
jno
movsl
mov
cmp
inc
fistpll
sub
inc
dec
roll
lcall
dec
adc
dec
jmp
dec
jb
jg
fistl
dec
sbb
lea
and
fisttpll
inc
dec
sbb
pop
push
gs
test
loop
movsl
inc
pop
xchg
push
call
sbb
fldcw
push
popl
adcb
rorl
rcrb
gs
bound
in
xchg
cmp
imul
push
iret
jae
pop
ds
pop
xor
and
and
jne
jge
cmp
push
and
xchg
inc
repnz
mov
cmp
xchg
cmp
and
in
sub
arpl
gs
cmc
add
sbb
jecxz
in
adc
mov
stos
and
dec
sar
inc
add
inc
pop
xor
sbb
nop
mov
mov
cmc
jb
jle
xchg
lock
adc
mov
cwtl
dec
test
call
sti
sbb
jae
jb
jmp
das
pushf
adc
xor
icebp
xchg
adc
cmpb
inc
mov
rol
pop
push
mov
and
add
mov
test
loop
xor
pushf
mov
mov
testb
scas
popa
pop
ret
fcoms
shl
xor
add
add
shlb
dec
lds
stos
push
lret
cmp
lea
and
and
and
push
aam
add
sub
and
sbb
push
and
scas
lods
mov
cmp
stc
jno
int
stos
push
push
arpl
in
loope
adc
rolb
or
sub
push
cmp
movsl
sub
xor
mov
xchg
imul
arpl
add
stos
fwait
cs
or
outsb
andl
jl
pop
movsl
add
lock
inc
lds
lea
mov
xchg
and
pop
pop
add
mov
mov
shrl
clc
decl
gs
pop
leave
hlt
mov
lea
mov
add
adc
dec
or
mov
jge
nop
sbb
xor
pop
cmp
and
push
pusha
mov
xor
sarb
push
inc
pop
or
and
xchg
or
sbb
push
ret
and
mov
inc
inc
adc
inc
sub
test
loop
mov
imul
or
shrl
pushaw
inc
mov
ret
and
pushf
push
test
mov
jl
cwtl
loopne
jl
mov
das
xor
lahf
or
cmp
inc
lea
add
xchg
lods
in
mov
sarb
add
aaa
arpl
pop
inc
jmp
iret
cmp
jmp
jno
aas
cwtl
mov
test
sbb
fidivl
lods
cmpsb
cmp
sub
pop
xchg
xchg
sub
jnp
stos
xchg
mov
dec
pop
dec
or
stos
jno
xor
bound
xchg
add
nop
insb
js
sub
pushf
loopne
stos
push
xlat
addr16
inc
adc
xor
mov
add
loopne
xchg
jbe
imulb
test
cmp
sbbb
out
cmp
dec
and
mov
jecxz
push
sbb
inc
push
dec
cmp
je
cwtl
dec
cmc
pop
stos
add
jmp
ss
jecxz
loope
outsb
fwait
je
andl
sub
std
or
or
int
jno
ds
mov
push
xchg
inc
icebp
mov
jne
rorl
xchg
or
rorb
stos
fisttpl
xor
lods
mov
lea
dec
js
push
push
add
repnz
mov
sbb
xchg
icebp
insb
pop
insl
xor
in
ficomps
xor
mov
rclb
int
icebp
aam
add
cli
mov
adc
dec
jge
or
rclb
ljmp
mov
mov
stos
mov
popa
push
mov
or
push
xor
daa
mov
nop
dec
es
imul
test
adc
push
aaa
mov
insb
fidivl
imul
mov
cmp
jecxz
sub
xchg
sbb
push
sbb
fs
add
rcll
sbb
dec
loope
testb
scas
push
movsl
xchg
out
push
out
xchg
mov
shl
repnz
loop
jo
addr16
cmp
push
roll
dec
popa
pop
xor
xor
dec
outsl
sbb
lahf
xchg
and
and
leave
or
jns
mov
sbb
add
inc
jb
or
inc
shlb
push
outsl
stos
sbb
add
cmc
aaa
fiadds
orb
sbb
test
cli
mov
aaa
mov
js
call
pop
cwtl
cmpsb
cs
dec
in
dec
xlat
push
xchg
jp
push
cltd
out
fwait
xor
pop
push
lea
and
inc
sub
mov
adc
cmp
jns
ss
outsb
push
adc
pop
cmp
push
mov
popf
sub
xor
scas
js
or
xor
dec
xchg
xchg
xchg
mov
cmp
shrl
xor
sbb
fcoml
aas
fcomi
cs
lret
loop
mov
mov
dec
in
mov
nop
mov
les
or
lods
cmpsl
mov
mulb
int
mov
sbb
dec
andl
aaa
inc
pop
sbbb
nop
push
stos
xchg
adc
mov
or
inc
in
ret
pop
aaa
lock
loopne
sub
in
or
cmp
aad
and
xchg
cmc
fnstenv
inc
lods
pop
test
test
outsl
inc
in
cmpsb
or
iret
sti
inc
xlat
sub
jg
insb
jmp
sbb
cmp
dec
pop
int
dec
add
ret
dec
or
movsl
hlt
loope
push
add
cmp
test
add
pop
or
add
adc
xor
sarl
test
pop
inc
aas
mov
adc
arpl
bound
and
arpl
cli
sub
sbb
pusha
bound
xchg
inc
inc
xchg
add
loope
mov
insb
adc
mov
adc
jg
lahf
xor
insl
pusha
rcl
ret
pop
or
push
pop
pop
fldt
cmpl
or
movsb
icebp
mov
xor
stc
mov
inc
lahf
xchg
shrl
or
rclb
aaa
shl
xchg
ret
jecxz
shll
das
adc
jl
loopne
dec
xlat
or
xor
adc
jo
pop
inc
dec
cmp
dec
jnp
addb
mov
mov
mov
outsl
fs
jg
pop
pushf
cwtl
inc
pop
sbb
in
das
adc
cmp
add
repz
xor
or
or
inc
jbe
jo
mov
fcomps
inc
les
jecxz
adc
bound
addl
cmp
mov
fdivr
movsb
dec
scas
xchg
insb
movsl
loop
arpl
adc
dec
lea
mov
pop
sahf
push
adc
add
push
cmpsb
out
pop
lods
mov
dec
leave
jo
sub
or
pop
int
inc
dec
repz
ret
or
add
int
es
jmp
dec
cmpb
ja
or
divl
test
pop
push
inc
ljmp
adcb
xor
cmp
orl
mov
cs
out
pop
je
cwtl
and
mov
and
pop
adc
push
arpl
shlb
or
icebp
subb
cld
adc
jno
rclb
sub
lcall
sub
std
xchg
test
adc
vmovups
lods
mov
mov
jge
jg
out
adc
add
push
add
shlb
mov
lea
pop
push
ret
mov
pusha
jl
test
sbb
push
mov
fcomps
loopne
bound
jp
cwtl
mov
dec
push
cmp
adc
bound
int
cld
and
aas
dec
cmpsb
jo
subb
shrl
jl
loope
jo
and
or
inc
fsubl
cmpsb
xchg
fucomi
das
arpl
or
xor
fwait
inc
cmp
pop
add
xor
xor
adc
inc
cs
mov
stos
pusha
cmp
addl
inc
inc
mov
add
xor
lcall
inc
xchg
loope
add
loope
add
pop
add
pop
repnz
xchg
bound
loop
pusha
loop
das
lcall
xchg
add
nop
mov
mov
inc
fiaddl
xor
pop
pop
and
movsl
xchg
imul
sbb
mulps
xchg
push
sbb
adc
pusha
pop
adc
decl
leave
sub
cs
rcrl
mov
outsl
and
in
add
bound
test
hlt
pop
insl
push
xor
jmp
lret
dec
add
orl
addl
enter
das
xlat
popa
and
sbb
movsl
orb
lock
adc
sbb
jecxz
push
push
push
mov
enter
aad
sbb
push
inc
adc
loopne
mov
mov
jg
shlb
adc
mov
nop
dec
pop
sbb
adc
out
scas
add
pop
pop
mov
ljmp
in
cmpsb
jns
jae
gs
or
cmpsb
or
inc
jns
es
inc
ss
call
push
fadds
dec
sbb
mov
adc
test
adc
xor
or
adc
aam
popf
cmp
test
les
or
pop
push
sbb
cmp
xor
es
insl
out
or
mov
xchg
sub
es
cmp
xor
jae
sub
test
or
adc
push
cmpps
dec
xorl
push
cmp
or
movsb
shll
and
ret
adc
movsl
push
dec
mov
push
dec
cmpsl
mov
aas
scas
out
sub
mov
cmc
push
and
andb
mov
and
clc
sbb
push
mov
addb
xchg
push
add
push
lea
add
mov
nop
inc
sbb
and
push
mov
push
inc
mov
loopew
xor
in
jge
rcrl
pop
arpl
add
dec
xchg
push
push
sbb
inc
sbb
outsl
jl
mov
add
xchg
jl
xchg
ljmp
mov
cltd
push
enter
sub
les
xchg
fisttpll
add
xchg
sub
dec
push
mov
add
lds
outsb
xchg
mov
mov
cmpsl
push
xchg
sbb
add
xor
idivl
sbb
and
mov
pop
popa
movsb
cmp
inc
pusha
cmpb
pop
xchg
or
or
jp
shrl
dec
pop
pushf
xor
sub
push
lods
sarl
xor
push
int3
shrl
inc
popa
test
or
aas
inc
es
dec
lds
adc
ss
jmp
xlat
arpl
pop
push
or
outsl
icebp
sub
repnz
mov
pop
adc
mov
rcll
xchg
xor
adcb
mov
nop
or
and
shlb
mov
add
sub
add
xchg
popa
xor
loope
or
lods
push
adc
or
imul
into
js
cs
orb
popa
ja
jo
xorl
loopne
iret
inc
and
or
ja
in
add
or
or
or
popf
sbb
adc
push
scas
imul
add
and
rcrl
jmp
push
sub
xchg
cmp
and
dec
test
fldcw
je
addl
das
sbb
jg
cmp
test
dec
pop
stos
sbb
iret
mov
test
in
lret
mov
xor
mov
add
mov
add
mov
jo
lret
xor
idiv
cmpsl
lcall
xor
cwtl
push
pop
adc
pop
sbb
int
test
xchg
add
xor
add
movl
pop
cmp
adc
and
mov
inc
jno
push
loopne
and
divb
push
push
test
inc
mov
in
addr16
loopne
lock
sub
push
inc
call
popa
xor
lahf
pop
sbb
jo
or
popl
scas
mov
nop
or
adcb
mov
pusha
ljmp
adc
mov
add
jne
sub
cmp
lret
cs
loopne
mov
or
push
push
mov
and
into
xor
pop
mov
sub
add
daa
rclb
sub
push
adc
aam
sbb
xchg
xor
dec
ret
push
and
out
inc
add
cmp
lods
cmp
insb
adc
dec
adc
and
xor
mov
popf
push
mov
pop
insl
lahf
pop
add
aad
sti
lret
cmc
lds
dec
cmp
xchg
mov
outsb
mov
or
xchg
scas
ror
cmp
pop
adc
add
mov
clc
dec
in
adc
bound
adc
or
sub
sbb
mov
in
xor
xlat
scas
cmp
jp
dec
jecxz
add
add
cmpsb
sbb
dec
pop
enter
adc
inc
mov
decl
fmull
mov
loopne
cmp
scas
mov
jmp
lret
arpl
movsb
cltd
jg
mov
negl
inc
cmp
dec
mov
push
ret
jl
inc
mov
shlb
loope
cmc
inc
push
subl
pop
cmovbe
fmuls
imul
loope
or
fbld
push
int
loope
adc
insb
loope
mov
lcall
jne
jne
imul
jo
enter
out
daa
sub
mov
aaa
ficoml
sbb
inc
jge
or
or
push
push
push
es
jle
xor
adc
stc
shl
mov
xor
cmp
in
sarl
out
pop
dec
stos
aaa
shlb
rorb
test
popf
sbb
pop
in
fs
loop
mov
xor
lea
cs
pop
je
pop
pop
lds
repnz
push
lds
nop
out
aaa
inc
pushf
mov
lea
imul
fwait
sbb
mov
mov
inc
fwait
sbb
adc
cmpsb
add
inc
dec
and
shll
leave
cmp
imul
in
add
in
mov
fld
push
sbb
ds
add
std
inc
adc
cmp
add
mov
inc
adc
push
loop
in
testl
cmp
xchg
jae
xor
or
push
xchg
std
ja
adc
mov
pop
xchg
xor
out
push
sbb
or
and
in
int
mov
push
xor
test
xchg
xchg
fldt
pop
add
std
mov
nop
stos
mov
pusha
and
jbe
inc
sbb
in
jo
xlat
rcl
stos
push
or
sub
xchg
icebp
push
push
or
xor
je
cmp
cmp
xchg
mov
cmp
leave
add
stos
jmp
dec
pop
mov
ss
xchg
bound
inc
loopne
cwtl
lcall
push
dec
push
fadd
rolb
js
addr16
sub
add
push
data16
jl
mov
je
add
shll
popl
enter
pop
mov
add
in
dec
sbb
leave
xor
or
xchg
mov
cmc
push
sbb
and
sub
jno
sbb
pusha
xchg
test
in
inc
and
adc
lahf
pop
rorl
cs
in
or
enter
je
push
popa
inc
addr16
or
inc
stc
inc
pop
dec
das
sbb
int3
push
into
imul
shlb
xchg
mov
add
nop
orl
sub
sbb
or
pop
jno
shl
lcall
js
jo
cmp
nop
scas
icebp
inc
lock
push
mov
das
nop
xchg
dec
xor
jmp
add
pop
jb
test
add
push
adc
shlb
cmpsl
adc
fsubl
mov
popf
bound
js
mov
cmp
stc
jecxz
push
push
xlat
inc
push
mov
mov
and
ret
lods
js
inc
push
ret
ret
jo
push
inc
aad
fdivr
test
cltd
imul
ja
mov
and
pop
icebp
add
pop
cmp
stos
or
jno
cld
adc
sub
mov
fs
inc
pop
inc
push
pop
pop
clc
pop
dec
xchg
cmp
stos
gs
cmp
push
or
dec
pop
cs
icebp
inc
pop
push
inc
and
cmp
movsl
push
cmp
cmp
insl
or
cmpl
fwait
mov
je
xchg
xor
test
hlt
ljmp
and
mov
add
and
lret
loop
jl
or
repz
mov
adc
add
lea
bound
aaa
insb
push
imul
aaa
int
cwtl
aam
pop
in
pop
mov
add
push
pop
jno
enter
adc
pop
and
imul
imul
icebp
lea
bound
cwtl
lock
adc
add
add
sahf
jge
mov
add
or
xchg
adc
fbstp
jno
clc
or
push
popa
dec
fnstsw
jb
call
pop
jmp
into
das
jecxz
adc
add
sub
dec
and
rclb
loope
fstpl
es
in
loope
inc
lcall
and
shrb
lods
es
xchg
out
or
and
int3
cmp
inc
subl
mov
cltd
int3
fincstp
mov
lock
add
lods
in
inc
orl
and
push
mov
mov
mov
sbb
mov
xchg
xor
ljmp
add
or
pop
or
shlb
pop
sbb
and
jno
dec
dec
or
orb
ss
insl
sbb
mov
sbb
sbbl
jecxz
fwait
lods
inc
jecxz
jecxz
mov
or
mov
or
jl
sbb
ja
mov
pop
add
adc
push
jp
out
out
je
dec
gs
ret
nop
inc
pop
pushf
add
push
xchg
mov
sbb
scas
fildll
stos
and
sub
inc
ret
insl
icebp
inc
int
adc
push
pop
rcll
pop
jno
dec
lds
push
cmpsb
mov
into
cmp
add
adc
sbb
jmp
pop
cmp
sbb
ret
xchg
inc
test
inc
pop
movsl
xchg
sub
xchg
inc
sub
push
stos
mov
mov
sbb
jmp
push
rcr
inc
mov
loop
cli
dec
xor
decl
sbb
in
jl
jecxz
sbb
test
xor
xor
cmc
cmp
aaa
add
add
cmp
test
mov
aad
cwtl
bts
xorps
xchg
imul
pop
cmp
sar
test
pop
pop
xchg
inc
add
and
xchg
insb
cwtl
inc
repnz
xor
cltd
jmp
pop
pop
pop
xchg
adc
xor
mov
dec
leave
adc
stos
loope
fst
and
xor
cltd
data16
popf
inc
sub
jecxz
pop
add
jne
push
inc
add
xchg
call
lahf
cwtl
cmpsb
and
cmp
add
pop
cmp
scas
test
sti
cmp
bound
pop
nop
xchg
hlt
ja
adc
popf
fnsave
add
or
adc
shlb
enter
adc
xchg
xchg
mov
inc
aaa
xor
insb
xor
xor
pop
jecxz
pop
pop
inc
repnz
aaa
inc
or
pusha
sbb
lret
xchg
xchg
ss
and
mov
dec
fldt
inc
nop
push
xor
cmp
scas
in
out
cmpsl
jecxz
jge
pop
jle
loopne
fcoml
mov
push
mov
adc
cmp
sbb
add
inc
test
add
test
add
push
mov
xchg
movsb
addr16
ljmp
incb
and
scas
vpunpcklbw
mov
mov
cwtl
push
or
or
or
sarb
dec
adcl
jmp
shrb
pusha
sbb
jnp
cmp
jno
and
icebp
mov
test
xchg
pop
lret
cmp
lds
mov
jb
jo
pop
and
mov
and
into
outsl
and
repz
sub
cmc
cltd
xor
mov
jno
or
adc
push
arpl
mov
nop
and
cmp
les
sbb
mov
imul
stos
sub
cs
xorl
insl
mov
mov
popl
daa
pop
mov
xlat
push
add
sbb
dec
orb
inc
push
sarl
mov
insl
loop
das
inc
add
cmp
ret
sub
pusha
ret
daa
jno
and
mov
inc
aam
pop
cmc
fimuls
dec
jle
dec
jmp
xor
adc
div
jns
add
lahf
adc
jo
cmp
in
mov
xor
mov
in
orb
or
jns
sub
lret
sbb
ret
insb
repnz
imul
and
mov
push
pop
push
jge
add
cwtl
outsl
push
dec
cmp
cmp
dec
xchg
mov
js
and
push
repnz
add
movsl
adc
outsb
lcall
cs
lods
jnp
push
out
sbb
daa
jle
int3
sti
lods
pop
pop
ret
dec
ds
push
ja
push
mov
add
jl
roll
test
roll
jae
add
mov
dec
pop
cmp
les
inc
xchg
add
mov
xor
fsubrp
mov
repnz
lret
pop
pusha
cmpsb
add
fwait
int
push
xor
imul
cmc
and
sub
inc
inc
leave
call
add
cs
pop
sbb
in
mov
push
jns
and
pop
shrb
lret
cwtl
jo
jno
dec
push
push
loope
pusha
dec
pushf
sbb
dec
in
imul
add
add
movl
add
add
adcb
add
rcl
stos
adc
adc
sbb
cmp
loopne
popl
push
sbb
insl
inc
aad
xchg
data16
sbb
mov
push
xchg
pop
push
and
xor
xchg
pop
ds
rol
add
xor
in
mov
adcl
gs
pop
ret
adc
test
mov
lods
push
add
ret
ret
mov
mov
sbbb
fnsave
pop
movsb
stos
xchg
and
leave
pushf
push
push
daa
mov
mov
and
xchg
cmp
outsb
lahf
ljmp
jecxz
lcall
aam
mov
jmp
pop
xchg
xor
sbb
xlat
or
mov
add
push
orb
push
shlb
add
scas
pop
idivl
xor
dec
jg
pop
adc
mov
sbb
push
mov
inc
pop
gs
and
fiaddl
shll
sub
rcrb
cs
lock
cmp
sub
shrb
sbb
jnp
and
lods
paddusb
xlat
sub
fsts
jl
cmc
mov
sbb
loopne
mov
sbb
pop
cmp
adc
add
in
xchg
dec
fsubp
jae
push
sahf
push
lea
lea
sbb
rol
sahf
fs
jno
ret
sbb
rolb
jnp
mov
adc
rclb
shl
xor
rorb
and
and
push
ret
das
pop
jno
mov
or
and
cmp
push
int3
rclb
leave
push
repnz
rcrl
xchg
fldt
lret
stos
test
xor
cmp
aam
iret
cld
jmp
inc
lahf
or
and
xchg
movsb
inc
push
adc
dec
xchg
ret
sbb
testb
push
movsb
call
and
dec
adc
jbe
mov
sbb
and
mov
subb
shll
jge
sbb
les
in
inc
adc
repnz
fadd
je
iret
push
or
xchg
imul
sub
ds
pop
in
mov
popa
add
xor
cmp
insl
imul
movsl
adc
cmp
cmp
inc
add
loope
mov
pushf
js
mov
into
sub
daa
jmp
mov
fldl
dec
pop
lea
loopne
pop
pop
jbe
in
sub
and
shl
mov
xchg
sbb
imul
mov
jno
or
and
push
add
inc
test
bnd
jo
push
inc
or
jns
lea
nop
sarb
test
sbb
sub
into
pop
mov
sub
adc
dec
xlat
movsb
add
xchg
xchg
adc
inc
push
imul
rclb
add
sub
xchg
sti
adc
mov
pop
hlt
adc
push
aas
cmp
xchg
insb
cmp
scas
dec
data16
test
xchg
push
pop
cli
je
sbb
dec
jecxz
jo
add
scas
add
mov
fxch
jecxz
push
loop
ret
es
sub
popf
or
jge
enter
adc
push
xchg
push
lods
or
int
dec
xchg
push
rcr
and
mov
lods
mov
rol
cmpsl
aas
inc
sub
add
fsts
jmp
test
aad
lock
stos
rol
sbb
jp
sbb
sub
mov
cli
addb
add
bound
push
adc
pusha
lods
xchg
fsubrs
imulb
xlat
or
pop
push
xchg
cmp
inc
cmp
mov
arpl
cs
imul
adc
adc
jle
adc
cmpsb
and
add
loopne
in
inc
push
mov
add
popa
add
inc
add
xchg
cmpsb
ss
add
bound
popf
sbb
or
inc
or
cmc
mov
inc
lods
loopne
jecxz
adc
jecxz
jge
or
mov
xchg
mov
and
xchg
inc
mull
adc
xchg
add
mov
scas
adc
adc
ret
adc
filds
inc
pop
testb
jp
xchg
adc
call
sarl
pop
inc
add
inc
cmpl
pop
and
inc
je
iret
sbb
ret
stc
addr16
adc
adc
jno
add
pushl
mov
xor
and
fsubrl
push
mov
add
movsb
or
int3
mov
repnz
stos
pusha
adc
in
inc
xchg
mov
add
mov
lcall
std
stos
xchg
sbbl
adc
mov
jno
jl
sbb
outsb
sub
rorl
pop
leave
adcl
cmpl
push
dec
and
stos
xchg
sub
sahf
jl
pop
int3
movd
mov
mov
fbstp
sbb
lods
ja
repz
xchg
mov
add
inc
outsl
pop
jo
aam
psllq
jl
leave
inc
jge
mov
xchg
repz
popa
loopne
xor
rcrb
jae
pop
mov
sti
inc
fwait
adc
or
or
mov
cmp
dec
inc
lcall
addb
jg
iret
ret
mov
rolb
repz
and
daa
inc
or
rcl
shll
xor
push
push
mov
add
test
pop
shlb
sub
add
inc
dec
mov
dec
rclb
fs
pop
int3
inc
movsl
or
shll
lock
pusha
xlat
decl
sbb
xor
xchg
fbstp
mov
pop
and
rcrl
adc
ret
sbb
xchg
iret
fstpl
rcrl
or
pop
pop
lock
cltd
push
push
loope
fs
jo
cmpb
fisttpl
adc
lods
adc
adc
pop
xor
pop
cmpsb
addr16
imul
subb
pushf
es
jno
jp
or
mov
sbb
pop
addr16
test
or
adc
cmp
outsl
mov
sbb
rorb
jae
mov
jg
mov
sbb
mov
fcoml
xor
adc
js
shlb
sbb
cmpsb
xor
xchg
and
lret
cmp
pop
xor
test
dec
fadd
sbb
pop
cs
jg
pop
jmp
hlt
mov
inc
pop
bound
lods
sarl
cld
call
push
cmpsb
jge
mov
clc
dec
push
jmp
and
mov
int
jno
fwait
cmp
aad
negl
dec
test
clc
lret
add
dec
arpl
inc
les
xor
je
in
push
loopne
daa
mov
mov
xor
add
sbb
leave
push
adcl
dec
jne
fmuls
xor
insb
jmp
or
and
cmp
das
test
dec
cli
lcall
push
pushf
sbb
cmp
push
movsl
inc
xlat
push
mov
mov
add
sbb
fisttps
ss
lods
inc
dec
xor
and
addl
inc
cmp
test
in
add
sub
js
dec
imul
dec
cld
adc
js
mov
and
xchg
xchg
bound
pop
xchg
mov
scas
les
cmp
mov
lcall
shrl
pop
mov
ret
js
mov
push
dec
sbbl
je
and
test
mov
xchg
inc
roll
nop
add
notb
dec
aaa
mov
add
xlat
dec
jns
wbinvd
cmp
fs
movsb
xchg
pushl
pop
int3
pop
loop
pop
push
pop
inc
inc
jae
ret
test
daa
lock
xchg
push
call
xor
mov
adc
movsl
push
sbb
pop
jp
jecxz
or
or
test
mov
adcl
add
adc
inc
jno
jg
daa
jno
movb
add
mov
aam
pop
repnz
movsl
push
or
jae
lds
inc
xor
adc
and
mov
lock
cmp
cmp
add
and
xor
mov
push
inc
pop
orb
push
fisubrs
js
xor
mov
push
xchg
jmp
cmp
xchg
cmpsb
dec
stc
add
movsb
jmp
out
or
cmp
loop
mov
jae
mov
fnstsw
notl
push
mov
insb
add
pusha
scas
das
push
les
pop
mov
outsb
and
adc
add
cmp
sub
shr
std
xor
or
ret
and
sbb
sbb
jo
icebp
mov
push
popa
and
ja
repz
cmc
shlb
xchg
add
jno
xchg
push
cmp
and
loopne
js
add
outsl
enter
jge
jecxz
mov
adc
or
dec
nop
mov
jns
push
test
dec
repz
mov
daa
rcll
leave
mov
and
stc
cmp
or
in
movb
or
bound
or
mov
outsl
mov
pop
add
test
cmp
loop
inc
and
mov
dec
jp
inc
sub
es
pop
xchg
add
jno
sti
mov
xchg
in
rcrl
push
loope
or
addr16
daa
or
outsb
cmp
cmp
mov
jecxz
or
or
pop
loopne
into
fdiv
rcrb
in
je
or
fdivl
aas
icebp
jle
sub
stos
add
daa
sbb
movsb
sub
cmp
cltd
and
mov
addl
out
add
mov
imul
das
repz
push
inc
push
cbtw
jb
pushf
push
xor
xorl
inc
je
push
mov
rol
imul
loop
inc
dec
dec
sbb
lcall
lahf
orb
inc
xchg
add
sbb
iret
jbe
popf
jne
mov
dec
aam
lds
pop
pop
lret
in
aas
and
add
push
rcll
dec
add
mov
sbb
leave
adc
adc
in
pop
inc
aaa
add
add
dec
mov
cmpsl
mov
adc
imul
loope
pop
ljmp
popa
dec
lea
clc
fnsave
movsl
movsl
mov
mov
inc
std
mov
lea
xchg
xor
imul
in
push
fadds
inc
adc
ret
pop
mov
sub
loopne
lock
shrb
jmp
push
mov
push
stos
sub
adc
xchg
push
push
rcrl
xchg
imul
lret
cmp
inc
sub
mov
test
lahf
or
add
rorl
push
mov
ja
aad
mov
shlb
push
mov
insb
in
faddp
mov
out
cmp
das
dec
sbb
mov
pop
push
cmpl
es
push
add
dec
in
scas
jmp
jge
jns
jno
pop
and
pop
enter
adc
bound
ds
or
inc
enter
xor
arpl
int
sbb
inc
ret
pusha
in
or
xor
mov
sub
mov
je
and
push
mov
shl
cmp
test
xchg
and
xchg
roll
cmp
mov
adc
in
hlt
arpl
adc
imul
es
or
int
rolb
mov
dec
jge
jg,pn
adc
inc
insb
mov
pushf
sbb
jmp
fnsave
pushf
int
add
adc
xor
add
jno
mov
xor
out
xchg
inc
fimuls
push
mov
sub
add
mov
in
push
and
jae
mov
xchg
cmp
lahf
cmpsb
or
scas
add
out
call
mov
mov
sub
ret
sbbl
push
jbe
dec
jo
bswap
and
aad
shrl
push
sub
imul
aam
out
popf
popf
int
cmp
cmp
dec
sbb
jns
cmpsb
lea
push
cmp
lahf
shl
iret
nop
popf
mov
cltd
jo
push
sti
pop
rcll
or
loopne
cmp
jge
mov
mov
mov
and
fildl
nop
sub
pushw
push
jnp
dec
add
or
push
pop
push
loope
addr16
dec
sub
cmpsb
push
stc
jns
pop
cs
add
lret
jg
push
test
test
push
inc
push
adc
or
xchg
mov
push
subl
cmpsb
dec
mov
aaa
jmp
inc
mov
mov
mov
movsb
inc
xor
xchg
or
sbb
test
out
cli
decl
cmp
adc
enter
fldt
xchg
add
jg
fdivrs
jmp
pusha
loop
std
cmp
cli
fldl
dec
sbb
inc
or
pop
push
jecxz
sbb
jns
sbb
push
inc
mov
xchg
rolb
adc
out
fcomi
imul
sub
ss
sub
add
dec
pop
subl
ljmp
jb
push
arpl
sub
js
das
cwtl
xor
add
xor
nop
icebp
aad
mov
dec
adc
iret
pushf
jo
or
push
or
xor
and
stc
data16
pop
push
or
dec
loopne
mov
icebp
test
inc
loopne
xchg
adc
adc
stos
loope
push
add
aam
sahf
pop
loope
bt
daa
paddd
arpl
and
shll
cmpsl
ja
lds
adc
jne
jbe
int3
movsl
push
cmp
mov
jne
es
out
nop
jns
mov
out
or
xchg
inc
sub
mov
lods
enter
loop
jne
and
inc
mov
add
add
push
decl
push
sbb
add
out
mov
pushf
fbld
fistps
scas
repnz
xchg
cwtl
mov
loopne
sub
adc
xlat
push
es
or
or
dec
and
test
je
inc
jmp
xor
mov
pop
push
les
stos
dec
adc
sbb
fwait
add
sahf
mov
sub
rcll
in
inc
pop
dec
add
daa
sub
dec
adc
pop
pop
xlat
in
or
lods
sbb
repnz
add
sub
mov
sub
dec
icebp
mov
mov
test
rorl
imul
or
push
adc
int
shlb
adc
xorl
lcall
inc
mov
sbb
jnp
xor
adc
pop
add
xor
add
ret
add
mov
fisubl
push
mov
movsl
in
mov
movsl
sbb
mov
ret
pop
mov
cwtl
std
sbb
sbb
sbb
or
xchg
add
bound
fimuls
ss
in
and
jno
push
push
sbb
pop
adc
push
pop
dec
jle
stos
popf
sbb
adc
dec
xchg
nop
lods
imul
aad
add
lds
or
rorl
sub
leave
pop
pop
cmp
push
cmc
dec
adc
ret
js
push
pop
dec
mov
popa
and
xor
leave
mov
pushf
test
insb
push
cld
jmp
push
add
sub
mov
addb
dec
jle
cmp
jnp
or
rorb
out
test
mov
cmp
inc
sbb
push
inc
popf
inc
std
jne
push
sub
outsl
popa
sub
xor
ds
pop
lea
xchg
sbb
add
add
rcrl
add
outsl
getsec
cltd
xchg
in
dec
movsb
aam
roll
andl
sbb
stos
jne
lcall
stos
xor
sbb
fstl
mov
jge
xor
cmp
sub
xchg
or
ffree
test
rclb
add
stos
mov
cmpb
mov
leave
mov
and
pop
leave
iret
sarl
sub
sbb
dec
dec
adc
mov
add
xor
lret
lret
push
dec
lea
das
push
lds
push
popa
aas
inc
enter
or
dec
ds
pusha
dec
movsb
imul
jne
push
jae
and
mov
movsb
stos
pop
mov
stos
roll
aaa
scas
or
jne
or
cmpsb
dec
cmp
ljmp
enter
add
popf
pop
jp
or
pop
inc
jmp
add
mov
sub
out
push
dec
pop
test
fsts
sbb
adc
dec
add
jno
cmp
hlt
jae
add
inc
insl
cmpsl
es
inc
xor
adc
sbb
arpl
rorl
out
fisttpll
and
mov
mov
xchg
adc
mov
adc
or
jno
insb
mov
push
stos
stos
pop
adc
out
add
push
sarl
loop
je
add
sbbb
cmp
lcall
inc
lcall
or
dec
les
mov
or
addl
or
lcall
mov
fildl
sbb
push
xchg
mov
cwtl
cwtl
or
lret
incl
lahf
loope
xor
jo
fs
add
sub
and
push
in
add
popa
or
sub
sbb
cmp
add
add
adc
cs
or
inc
add
imul
push
mov
cmp
add
jo
sub
les
xchg
pop
jno
popf
sub
push
mov
setg
adc
and
outsb
or
sbb
popa
mov
sti
or
mov
add
stc
inc
inc
xor
jecxz
pop
cmp
mov
jl
loopne
sbb
push
cmpsl
cmp
ds
mov
add
sbb
lcall
es
dec
js
pop
gs
xchg
or
and
shlb
inc
inc
mov
xchg
dec
in
je
rcrb
sbb
or
jecxz
mov
or
stos
add
mov
push
rorl
stos
gs
mov
mov
sub
icebp
pusha
adc
fmuls
add
stos
lret
inc
push
adc
and
jo
mov
or
imul
fimull
jge
stc
push
movsb
and
mov
add
xor
insb
cmp
iret
mov
cmpsl
or
pop
pop
jno
and
call
or
fmul
push
inc
push
dec
enter
int3
lods
pop
ret
dec
aad
dec
mov
inc
ja
repz
push
dec
cmpsl
pop
mov
xor
pop
lods
insb
xchg
aas
mov
xchg
mov
int3
mov
loop
jo
dec
inc
mov
or
add
jnp
dec
loopne
cmp
fistpl
add
int
xor
push
dec
sub
test
stc
repz
add
in
fldl
out
adc
xor
push
cmp
mov
aam
pusha
mov
jb
subb
push
pop
mov
add
and
scas
mov
fildll
sti
test
in
xor
push
pop
cltd
push
ret
jle
clc
ret
sbb
cwtl
xchg
neg
shrl
addb
insl
mov
xchg
out
inc
push
xchg
imul
popa
hlt
lret
in
push
aaa
rclb
mov
ficompl
mov
jp
pop
scas
pop
adc
filds
rorb
nop
adc
add
lahf
sbb
fcompl
xchg
pop
cs
nop
xlat
jne
or
or
stc
jle
mov
mov
loopne
push
xchg
sub
bound
movsb
es
int
out
xchg
test
inc
inc
movb
and
out
pop
or
pop
lea
or
xchg
ljmp
mov
pop
cmc
loop
push
repnz
loopne
addl
mov
outsl
mov
cmpb
test
insl
or
clc
loopne
jbe
movsb
popa
jae
pop
shlb
shr
or
or
ret
test
fildl
sbb
push
in
sbb
ret
loope
inc
sahf
push
repnz
pop
and
add
jecxz
jae
or
add
dec
pushf
cmp
jo
test
bound
adc
inc
int
push
mov
mov
mov
pop
lea
mov
negb
sub
push
mov
aad
cmpsl
cmp
adc
xchg
ja
adc
aaa
and
inc
pop
aad
outsl
and
es
pop
xor
add
sub
push
outsl
adc
fildl
outsb
rolb
aam
add
imul
cmc
leave
shlb
insb
jmp
pop
lods
and
nop
mov
xor
push
or
push
xchg
adc
pusha
dec
call
mov
addr16
or
pop
push
adc
jns
jne
push
int
xchg
das
out
ret
rolb
scas
aam
jecxz
mov
mov
lcall
pushl
pop
pushf
sub
imul
or
into
popa
enter
or
das
adc
push
jge
add
add
ljmp
ljmp
aaa
mov
aaa
fmuls
or
pop
cli
movb
sbb
jns
xchg
mov
and
test
add
shrl
data16
jb
test
in
imul
subl
push
adc
movsb
test
mov
jbe
pop
mov
cmp
shll
push
push
enter
dec
cmp
xor
dec
sbb
cmp
ljmp
jne
cmovl
sbb
push
cwtl
sub
idivl
xlat
fiadds
cmp
mov
add
adc
inc
mov
cltd
or
pusha
cltd
jg
mov
sbb
inc
dec
sbb
aaa
mov
mov
jno
sbb
cmp
cmp
xor
or
pusha
test
vmovntdq
movsb
or
sub
subl
mov
xchg
pop
mov
xor
outsl
or
arpl
pop
push
dec
daa
mov
fnstenv
xchg
mov
adc
stos
stc
fldenv
adc
cmp
xor
mov
jno
adc
dec
xchg
mov
add
les
mov
stos
xor
das
jmp
xchg
mov
subb
fldcw
pop
cmp
sub
iret
icebp
cmp
sub
xor
cmpl
xchg
inc
lcall
negl
or
mov
test
xchg
out
sub
xor
adc
out
popa
lds
jns
cmp
mov
cltd
cmpsl
push
xor
push
call
loope
xor
lcall
cwtl
mov
push
xchg
pushf
inc
or
xor
hlt
sub
dec
push
std
pusha
adc
movsb
repnz
sub
jns
sub
lds
pop
jg
adc
push
and
push
jno
popf
jp
decl
jae
sub
rolb
push
repz
fwait
jge
rcll
push
inc
sub
pushf
insb
adc
jmp
fisttpl
iret
mov
repnz
sub
fnstsw
loopne
push
jb
fsts
sbb
or
xchg
push
repz
sbb
cld
cmpl
add
mov
xchg
inc
pop
push
dec
dec
push
loopne
jo
shll
mov
leave
call
adc
push
add
imul
or
or
xor
lds
or
stc
sbb
lods
pop
aam
push
mull
sub
push
daa
aad
insl
sbb
decl
add
lret
rorl
addr16
fdivrs
pop
adc
sub
push
jbe
push
es
ret
jne,pt
push
rorb
xor
dec
push
mov
aad
loopne
rcrb
aad
imul
call
outsb
std
pop
mov
mov
cmpsb
push
jo
or
popa
je
adc
adc
in
out
shrb
or
outsb
loop
popf
stc
fwait
or
scas
scas
mov
int
mov
movsl
dec
push
jns
repz
and
sub
rorl
outsl
adcb
in
lea
test
lcall
cmp
dec
adc
leave
push
or
mov
adc
push
ja
or
shl
push
rcr
xchg
cmp
rcll
and
ret
enter
pop
mov
xchg
clc
ret
and
dec
inc
das
jmp
pop
xchg
cmp
adc
data16
adc
inc
scas
mov
pop
push
mov
popa
sbb
mov
jbe
test
add
add
add
sar
inc
mov
sbb
shld
adc
test
cli
cmp
dec
mov
inc
incb
pop
rcll
mov
insb
cwtl
mov
push
mov
test
mov
or
mov
pop
imul
mov
or
rcl
daa
push
xchg
pop
push
and
stc
lret
es
int
gs
mov
push
leave
icebp
pop
push
xchg
jl
adc
adc
das
and
test
rcrb
jo
or
mov
xchg
andb
add
cli
push
cmc
jg
and
mov
push
sub
lds
test
outsl
mov
or
mov
jne
mov
ror
and
dec
popa
jle
push
sub
or
call
add
gs
adc
jmp
jge
sub
jo
lea
xchg
jp
jns
fnstsw
push
aaa
arpl
dec
inc
jmp
jmp
mov
jmp
push
push
jne
dec
pop
push
or
xchg
aaa
adc
es
pop
loop
mov
notl
jo
movsb
loope
adc
popf
adc
pop
negl
ret
aam
mov
mov
pop
addl
xor
scas
jmp
jae
imul
mov
je
gs
cmpb
pop
xor
or
sub
and
jl
mov
test
lock
call
loopne
cli
sti
inc
mov
mov
les
sbb
cmp
ss
popf
loope
dec
add
cmp
cmp
mov
mov
inc
fucomip
pop
mov
into
adc
stos
loope
xlat
sbb
mov
inc
stos
pusha
and
jp
fildl
mov
mov
mov
cmp
dec
jg
movb
ljmp
add
adcb
xchg
les
ss
or
loop
fstpt
lcall
aas
or
inc
js
repnz
scas
aam
or
add
mov
add
movsl
fists
pop
les
push
inc
out
mov
pusha
pop
mov
lods
repnz
pop
mov
cmpsb
jns
sbb
cmpsb
negb
jnp
dec
fwait
movsl
test
jmp
push
add
aam
cmp
mov
ret
add
mov
shrb
in
pop
mov
lahf
daa
movsb
cmc
or
and
daa
int
jo
loope
sbb
inc
mov
push
push
add
add
test
cmpsl
dec
int
into
mov
dec
xor
addr16
in
push
pusha
cmp
mov
mov
push
cmpsb
imul
or
and
and
lret
pavgb
mov
inc
cmpl
insl
lods
xchg
push
sub
cmc
and
icebp
cltd
sub
js
or
inc
adc
or
and
pop
xor
xchg
add
jmp
mov
sahf
jo
inc
inc
je
das
insl
andl
sahf
sub
jmp
sbb
imul
sub
popa
stos
and
sbb
xor
inc
cwtl
cwtl
push
or
pop
pop
stos
and
and
jnp
cmc
inc
out
jo
xchg
test
push
adc
and
push
lret
sub
adc
cmc
movsl
cmp
jmp
bound
out
sub
jmp
mov
arpl
and
pop
mov
test
adc
ljmp
sbb
pop
inc
sbb
fdivl
dec
mov
popl
and
js
arpl
adc
dec
mov
lods
dec
les
or
xchg
pop
sbb
inc
jmp
enter
sub
mov
mov
je
push
pop
inc
sub
dec
or
es
fwait
mov
inc
mov
dec
cwtl
xchg
sub
sbb
roll
aad
fistpl
ljmp
mov
xchg
jg
push
cmp
dec
and
push
dec
xrelease
adc
pop
aad
xor
xor
stos
jo
ret
call
push
sarb
lea
inc
pop
xorl
inc
in
jns
jne
push
adc
cmp
rolb
add
and
jno
aas
mov
rol
mov
pusha
loop
add
sahf
stos
imul
mov
mov
pusha
sbb
cli
jno
mov
xor
testl
push
or
stos
mov
movsb
add
call
sub
add
mov
dec
push
or
rolb
pop
test
test
and
jo
mov
roll
inc
xchg
lret
push
mov
orb
cltd
das
lahf
pop
enter
mov
or
dec
push
or
fstpl
dec
jecxz
pop
jb
aas
in
or
rcl
gs
or
aas
or
in
jge
out
xchg
inc
xchg
out
dec
mov
cmp
pop
push
xor
xor
cwtl
and
inc
or
or
cmpl
dec
rcll
xchg
ret
dec
ja
push
pop
or
add
or
jle
dec
xchg
cmp
jne
adc
cmp
pop
inc
enter
out
adc
add
addr16
inc
sub
push
cmp
and
or
add
sub
inc
pop
sbb
adc
int3
sbb
add
push
pop
and
mov
mov
pop
sub
xchg
lret
lret
testl
jnp
les
pusha
xchg
inc
leave
and
add
push
xchg
push
dec
inc
pop
and
ret
mov
ljmp
js
add
mov
rcll
rclb
mov
cmpl
cmpsb
flds
cmpsl
js
inc
test
out
push
lahf
or
das
sbb
incl
insl
shlb
cld
jg
hlt
push
out
nop
mov
ret
push
mov
lea
or
inc
pop
stc
or
jmp
arpl
add
sub
sbb
mov
ds
cmpsl
ret
mov
in
xor
mov
sbbl
mov
xor
in
xor
inc
add
push
jnp
fcmovb
inc
sarb
cmp
and
jmp
mov
imul
rcrb
das
stos
in
add
push
jmp
or
mov
inc
and
add
jmp
enter
incl
push
lahf
sbb
cmp
icebp
sbb
xchg
sub
insl
mov
xlat
insb
fs
ret
addb
mov
add
lahf
add
ret
leave
daa
push
or
addr16
and
xor
push
bound
fsts
mov
es
jne
inc
or
pop
xchg
je
xchg
fwait
add
or
ja
sub
xchg
gs
inc
dec
or
add
sbbb
mov
daa
inc
scas
xlat
xchg
dec
sub
add
dec
dec
push
pop
fs
and
push
inc
cmp
out
add
subl
loopne
jbe
pop
or
roll
jl
or
xor
and
sub
enter
push
or
inc
imul
xchg
filds
fwait
outsb
pop
roll
sub
jno
shll
jae
sub
mov
sbb
mov
sbb
jae
je
mov
popa
dec
das
pop
or
mov
adc
add
je
push
jge
lds
adcb
sub
or
adc
inc
repnz
mov
inc
adc
sub
popa
add
xchg
dec
adc
orb
and
and
cld
jmp
fs
inc
mov
rolb
sub
gs
cmp
xor
cs
insb
add
cmp
js
add
arpl
push
mov
jno
insl
push
mov
add
daa
outsb
mov
inc
mov
mov
ret
mov
rorb
jge
mov
lock
and
push
or
adc
add
or
pop
xchg
test
pop
xor
push
inc
repnz
pusha
outsb
jnp
or
push
or
jge
lea
sub
aam
pop
test
cmp
icebp
sbb
mov
loope
dec
push
xorb
rep
jmp
push
and
mov
pop
and
xchg
popf
lcall
mov
hlt
arpl
cmpsl
push
stos
adcb
das
or
push
and
mov
inc
or
jne
and
shrb
ds
and
aam
and
stos
nop
mov
jo
push
pop
div
dec
sub
push
adc
sbb
xlat
fisttpl
aad
mov
sbb
xchg
es
xlat
xacquire
or
pusha
das
adc
insl
xchg
aad
or
fistpll
add
ret
mov
stos
add
pop
popf
jo
push
dec
adc
rolb
jmp
jnp
push
movsb
xor
mov
stos
rolb
in
xchg
mov
test
dec
push
push
adc
ret
dec
add
pop
push
in
loopne
jmp
push
and
rorl
cmp
mov
lods
adc
add
jne
arpl
push
ss
add
mov
inc
or
hlt
inc
lods
or
ljmp
insb
add
dec
mov
movsl
test
mov
add
shr
or
adc
jno
insl
pop
repnz
or
xor
add
fadds
mov
cmp
shlb
mov
sbb
shlb
mov
les
cmp
mov
outsl
inc
movsb
inc
xchg
sub
pop
sub
ret
dec
in
pop
jo
adc
shr
in
push
push
add
add
jg
rorl
cmp
sahf
mov
mov
sbb
and
mov
and
movsl
sbb
xor
or
sub
adc
dec
rclb
rolb
add
add
arpl
cs
pop
lret
inc
mov
lret
aas
sbb
mov
arpl
adc
scas
xlat
fwait
add
xor
mov
inc
mov
add
jbe
add
fdivs
cmpsl
hlt
mov
cli
mov
icebp
gs
xchg
subb
pop
pop
addl
jo
push
sbb
inc
rcll
call
ret
cmc
and
in
loopne
pop
js
testb
add
es
mov
rcrb
jae
dec
pop
ljmp
cmp
push
mov
cpuid
push
push
je
icebp
call
gs
add
daa
dec
xchg
add
jnp
lds
xchg
pop
les
jecxz
sbb
addb
addl
clc
mov
and
or
das
ret
test
mov
adc
outsl
loopne
inc
dec
cmpsl
test
mov
sti
or
sbb
ljmp
nop
divl
stc
lea
mov
jne
sub
add
jmp
mov
sub
in
into
or
ficoms
pop
xor
jge
bound
and
mov
repz
leave
rolb
add
jo
pop
mov
lds
dec
enter
ds
ss
cmp
mov
insb
sub
xchg
inc
movsl
shl
movsb
add
or
add
out
cmpsb
cwtl
mov
pop
mov
fisttps
cmp
xor
mov
xchg
push
sti
aad
mov
stos
pop
inc
rol
or
pusha
or
cltd
sbb
sbb
dec
rcll
stos
sbb
rolb
loop
adc
and
out
cmp
xor
adcl
call
outsl
mov
loopne
sbb
pop
mov
cmp
pop
rolw
jb
add
and
and
add
or
es
xor
push
ret
insb
push
xor
pop
dec
leave
jecxz
sar
mov
or
jae
xor
jbe
int
cmp
push
sbb
shll
adc
pop
pop
sar
test
mov
xchg
jne
mov
xchg
mov
int
xorl
push
popa
push
pop
push
divl
fwait
sub
jmp
and
repz
loopne,pn
cmp
xlat
xchg
cmpsl
out
cwtl
pusha
jb
pop
pop
add
mov
or
lods
inc
dec
in
rcrb
loope
cmp
lods
and
roll
fcoml
dec
and
movd
inc
mov
cs
mov
test
xchg
xchg
rol
je
or
daa
add
pop
inc
loopne
mov
in
pop
loopne
cs
push
mov
jo
inc
jp
pop
gs
mov
xchg
push
stos
daa
cmp
or
std
incl
out
mov
mov
leave
in
popf
adc
and
dec
mov
push
pusha
inc
cs
add
andb
xorl
mov
fnsave
stc
fcmovnb
inc
jno
sbb
xor
and
xor
dec
lods
adc
add
rcl
movsb
inc
jg
das
adc
and
sahf
or
je
dec
paddd
push
dec
cmc
sbb
and
dec
mov
xor
icebp
inc
inc
and
add
sbb
adc
int
xor
pop
lcall
mov
xchg
xchg
mov
mov
test
or
mov
mov
lods
jnp
sti
jmp
adc
movsb
es
rcll
and
adc
dec
ret
mov
lcall
inc
mov
adc
flds
sub
test
inc
or
lahf
push
lcall
sbb
in
push
imul
or
ljmp
out
inc
sub
adcb
push
dec
pop
or
and
sub
iret
cmp
loope
xor
dec
adc
scas
push
insb
ljmp
mov
xchg
xchg
lea
xchg
ret
mov
cmpsb
jo
fldcw
jns
jecxz
fs
cmpl
inc
mov
or
cmp
jne
maxps
adc
inc
pushf
adc
dec
repz
or
mov
rolb
je
and
add
xchg
xchg
cs
repnz
pop
repnz
pop
sub
cld
popf
or
mov
mov
push
add
and
inc
mov
outsb
insb
add
inc
mov
push
inc
pop
xchg
nop
mov
mov
xlat
pop
mov
popf
mov
adc
cmp
rcll
loop
sub
xchg
mov
lea
inc
shll
and
popf
mov
decl
push
clc
mov
shlb
sbb
repnz
add
push
push
push
adc
push
mov
jle
push
inc
add
pop
sbb
sub
lahf
jo
nop
fcompl
xor
xor
jecxz
scas
xor
xchg
xchg
cmpsb
or
mov
cwtl
push
xor
xchg
xchg
enter
push
mov
push
andb
mov
add
jp
push
inc
hlt
inc
cmc
mov
mov
cmp
aam
pushf
shll
mov
pop
cmp
pop
push
pop
push
leave
xchg
sbb
jmp
pop
xor
dec
jnp
fucomp
mov
push
je
add
add
inc
mov
and
sub
xlat
emms
adc
and
dec
mov
shld
bound
sbb
aaa
in
push
xor
filds
mov
outsl
rolb
addl
adc
dec
fisubs
inc
mov
sarb
imul
scas
jno
nop
push
push
aaa
push
rol
daa
test
mov
sbb
imul
mov
push
sub
jle
pop
mov
mov
bound
xchg
arpl
xor
test
push
lods
shlb
inc
adc
popa
pop
icebp
add
dec
jae
or
jl
xchg
push
sub
repz
fsubl
jo
mov
out
mov
xor
sbb
inc
addl
cmp
or
add
jge
mov
cmpb
rcr
lea
push
fwait
dec
inc
movsb
cmp
adc
lds
leave
or
fsts
mov
pop
and
shl
cmp
mov
xor
xchg
shrl
outsl
loope
jge
lret
and
push
pop
enter
aad
push
dec
xor
jne
push
fisttps
dec
aam
gs
pusha
rolb
fwait
and
or
stos
test
bound
and
fists
sbb
rol
test
shlb
cld
stos
mov
or
daa
cmpsl
and
daa
adc
nop
lods
fisubrs
push
add
popa
shll
or
jnp
jp
cmp
or
hlt
js
add
clc
sbb
bound
out
sbb
adc
or
jecxz
mov
add
mov
cmp
mov
in
les
add
push
push
icebp
adc
and
sbb
test
xchg
aam
jne
mov
add
xchg
push
outsl
outsl
jbe
cld
movsb
mov
or
fdivrl
adc
sbb
orb
and
mov
xchg
cwtl
nop
inc
loop
rclb
dec
pop
xor
mov
cmp
xchg
lods
roll
add
xchg
and
imul
sbbl
mov
jp
add
mov
shlb
dec
push
enter
sub
test
inc
insb
or
mov
inc
jb
call
inc
dec
dec
adc
or
jo
and
call
mov
mov
adc
inc
nop
jo
cmp
addr16
inc
inc
and
mov
cmpsl
push
dec
bound
popa
test
cmp
push
mov
mov
or
aaa
pop
stc
aas
jmp
iret
int
icebp
xchg
stos
sub
add
and
aam
sahf
push
cltd
pusha
loopne
xlat
imulb
lret
push
loope
xchg
sbb
inc
jecxz
xchg
mov
push
cmp
xor
cmp
dec
mov
movsb
stc
mov
push
sub
outsl
adcl
pop
mov
inc
in
imul
pusha
push
jns
add
xchg
cmpsl
adc
add
add
loope
std
cmpl
xchg
pushf
inc
push
sbb
daa
adc
push
test
dec
mov
scas
mov
adc
or
pop
dec
rcl
inc
inc
add
popf
xchg
push
adc
cmp
xor
mov
ljmp
pusha
mov
popfw
xor
mov
pop
cmp
sbb
xchg
adc
sti
jae
hlt
orl
jmp
xor
inc
sbb
pop
fsubs
les
jno
mov
addr16
cwtl
gs
sub
mov
xchg
sbb
jb
mov
xor
pop
fldcw
daa
add
in
aam
xchg
mov
jmp
xorl
xor
lods
lcall
call
shrl
dec
sbb
sub
adc
testl
movsb
stos
fildl
push
js
fdivs
cmp
inc
and
movsl
stos
jns
jno
push
pop
mov
ds
xchg
aas
pusha
aaa
add
jmp
dec
mov
leave
add
wrmsr
aas
inc
jge
stos
iret
ds
and
imul
in
outsb
sub
jo
movsb
pop
cmp
mov
push
xchg
pop
add
jb
aam
sbb
pop
or
jl
add
xchg
je
sbb
ret
rcrl
in
xor
or
inc
bound
movsb
and
sarl
cmp
shll
add
mov
xor
andb
xchg
mov
adc
sub
lods
jmp
or
movsb
add
test
mov
dec
ss
pop
cmp
loop
mov
push
or
sub
inc
dec
mov
sub
xor
test
or
int
push
loopne
rclb
cltd
mov
push
adc
in
add
sbb
or
cmpsb
lds
push
or
add
cmp
or
mov
out
push
add
or
rcrl
adc
lock
sub
mov
mov
scas
cs
jne
mov
mov
pop
push
daa
xchg
ror
ja
push
loop
scas
add
adc
lret
adc
movsb
xchg
push
xchg
push
addr16
lock
jne
fwait
mov
rorb
add
sbb
add
xchg
cmp
in
add
push
fnstcw
ror
cmp
rcll
or
test
stc
xchg
pop
mov
adc
push
popf
jno
adc
cwtl
loopne
mov
frstor
xchg
dec
sbb
pop
mov
int
iret
sbb
xchg
adc
add
daa
loope
lret
mov
push
repnz
pop
push
stc
push
fnsave
outsl
hlt
int3
pop
leave
sub
jo
orb
aad
add
jno
sti
xor
mov
mov
mov
xchg
repz
push
addl
test
loope
sbb
jo
popa
cmpsl
xchg
xchg
push
mov
ja
sbb
pusha
lea
hlt
rcrb
sbb
scas
sbb
iret
dec
jle
cmp
jle
sub
and
adc
push
les
mov
jne
sbb
cmp
or
mov
mov
pop
add
mov
fnstsw
xor
inc
mov
cmpsb
mov
sbb
and
fstpt
jns
adc
lcall
in
or
js
cmp
imul
push
das
in
add
add
xor
adc
cwtl
arpl
add
push
sub
pop
lahf
push
cmpb
js
adc
mov
sub
pop
xor
pop
movsl
mov
lea
jmp
imul
rorl
enter
lret
mov
mov
inc
rcrb
es
pop
jno
sbb
pop
push
scas
sbbb
hlt
xlat
adc
adc
add
add
jno
add
and
add
jmp
repnz
movsb
add
xor
or
ret
loopne
test
movsb
mov
inc
jns
jp
jne
mov
sub
les
xor
pusha
int
xor
shll
push
mov
into
push
es
mov
mov
ja
mov
or
loope
inc
mov
dec
in
pushf
mov
xorl
inc
sti
sub
pop
inc
pop
aaa
ret
sbb
mov
cmc
imul
sbb
pop
xchg
and
and
or
push
pop
jne
xlat
inc
push
lcall
adc
insb
sar
js
aaa
dec
push
mov
nop
sarb
loopne
stos
fsubr
sti
rcll
in
push
and
ffreep
mov
mov
xchg
push
push
xor
rcrb
pop
inc
arpl
pop
xchg
je
xor
jl
das
clc
mov
fdivs
inc
push
aam
jmp
ja
or
inc
test
jae
sbb
or
push
inc
or
clc
or
pop
sbb
add
inc
rorl
add
mov
jg
dec
paddq
sahf
loopne
loope
and
mov
mov
pop
cmp
sbb
mov
mov
cmpsl
and
mov
xchg
lahf
pop
mov
inc
pop
in
icebp
add
sbb
add
es
pop
push
pop
add
mov
xchg
jl
sti
ret
adc
jmp
mov
ljmp
loope
or
cmp
fwait
stos
push
push
push
scas
lcall
cmp
push
sbb
test
shl
loop
push
loope
cmp
pop
pusha
jg
jne
xchg
rcl
ret
mov
pop
scas
inc
js
test
push
inc
dec
es
ss
cli
je
pop
cwtl
outsb
pushf
sub
cli
push
aaa
shll
jo
cwtl
sbb
dec
jnp
ffreep
adc
xor
fadd
push
loope
jg
stos
jb
dec
jp
addb
push
xor
mov
clc
mov
push
push
xor
jno
or
jae
enter
jns
jmp
mov
cmp
popf
mov
popf
fisttps
jne
test
or
pop
mov
cmp
add
cmp
stos
lea
test
pop
lea
jns
mov
add
leave
dec
icebp
dec
imul
decl
pop
jmp
je
lods
clc
movsl
fldcw
movsb
shlb
or
and
xchg
test
pushf
decb
sub
out
adc
loopne
fstps
popa
fs
or
popa
xchg
adc
scas
or
icebp
pop
aaa
jb
xor
jno
mov
dec
loop
loopne
jmp
cmpsb
dec
pop
add
lods
jp
inc
xor
aad
cld
mov
hlt
or
add
or
sarb
clc
mov
pop
nop
cmp
sub
add
xchg
or
mov
aad
dec
imull
inc
add
mov
sub
mov
je
outsl
fsubrp
pusha
and
push
sub
push
mov
sub
scas
lds
push
dec
out
jge
xchg
lcall
xchg
mov
inc
das
inc
sbbb
in
xchg
imul
or
movsb
dec
push
xorb
js
les
or
loopne
mov
call
adc
jmp
cld
add
push
ret
mov
nop
mov
mov
push
add
pop
or
adc
std
clc
aas
pop
mov
daa
inc
or
xchg
sbb
dec
xchg
mov
mov
jmp
mov
mov
mov
mov
and
and
add
je
pop
fistl
das
mov
test
cs
sub
inc
cmp
cmpsl
lcall
cmp
bound
inc
inc
xlat
imul
pop
faddl
cmpsb
arpl
sub
cltd
or
add
sbb
dec
pop
jmp
dec
inc
pusha
arpl
imul
or
inc
adc
jo
loopne
mov
push
add
sbb
cmp
das
mov
sti
sub
stos
jecxz
test
mov
inc
sub
loopne
sub
stc
mov
mov
mov
pop
icebp
clc
push
cmpsl
lock
loopne
cmpsb
mov
test
or
loopne
mov
mov
push
sub
push
popa
cmp
jmp
sub
loopne
sbb
insl
pxor
lea
or
push
daa
dec
mov
mov
test
add
xchg
push
jo
jmp
gs
in
add
cmp
mov
jge
pop
mov
mov
arpl
mov
rorl
jmp
retw
xchg
andb
sahf
mov
mov
sbb
shll
and
inc
dec
sbb
test
call
push
mov
mov
loope
pop
cwtl
stos
add
pop
sbb
push
and
push
ret
addr16
pop
sub
sahf
mov
add
ss
je
mov
fdiv
xchg
jg
repz
mov
inc
and
pop
lcall
jmp
sub
mov
mov
sbb
jo
inc
lods
je
rclb
test
out
fstpl
or
das
nop
or
test
sbbl
jge
lods
out
movl
or
int
add
xor
cltd
ja
loopne
push
shll
jl
and
cwtl
xor
pop
les
outsl
or
mov
mov
adc
cwtl
mov
dec
mov
inc
mov
or
dec
lcall
push
dec
push
xor
rcrl
call
xorb
pusha
shrl
fiaddl
icebp
scas
add
adc
movl
cmp
in
push
nop
and
adc
jb
adc
lcall
imul
jno
bnd
jae
bound
sar
bound
inc
cmp
jmp
push
add
inc
or
adc
ret
mov
mov
push
xchg
pop
xchg
shll
cmpl
sub
mov
sbb
je
ljmp
stos
rol
popf
negl
outsl
sbb
push
add
push
imul
dec
pusha
rcrl
mov
aad
cld
add
rcl
popf
addr16
stos
cmpsl
ljmp
inc
std
jmp
daa
in
fsincos
inc
push
dec
data16
mov
xor
fists
push
roll
adc
test
jmp
popa
xchg
sbb
in
ret
hlt
ret
pop
pop
sbb
icebp
fidivl
inc
out
pop
xchg
xorl
adc
push
jae
inc
push
inc
add
xchg
scas
fs
divps
mov
sbb
jno
movsl
aas
push
push
mov
sti
lea
cmp
fwait
js
imul
adc
test
xchg
jo
dec
inc
in
ret
push
daa
mov
xchg
stos
push
mov
add
push
sbb
sbb
inc
fisttps
sbbl
and
pop
call
sub
jg
xchg
cmp
inc
adc
adc
xchg
cmp
arpl
jae
dec
cmp
jge
inc
mov
pop
cmpsl
or
xor
jmp
fistl
loop
mov
test
adcb
mov
iret
jge
cmpb
push
sub
nop
cmp
or
rol
loope
daa
inc
push
adc
outsl
inc
rorl
and
data16
aaa
sbb
adc
pop
stos
sub
or
ret
xchg
cmp
in
ret
fistpl
faddl
mov
mov
xor
lcall
inc
int
aas
cs
xchg
pop
filds
cmpl
pop
std
inc
out
bound
je
and
js
pop
and
cmp
pop
lods
push
and
ljmp
xlat
mov
dec
out
das
sarl
sub
push
fs
xor
mov
jno
jg
movl
mov
lret
inc
jecxz
and
mov
dec
pop
dec
int
adc
cmp
imul
jecxz
fstl
rorb
negl
rol
and
shl
es
in
jle
sbb
test
inc
push
dec
inc
xchg
cmp
scas
xor
pop
test
addr16
pop
mov
cld
fisttps
cmpsb
pop
mov
xor
sub
cmp
rcr
push
lret
xor
inc
out
test
push
adc
shlb
hlt
inc
inc
jb
xor
rol
mov
sbb
cmp
mov
insl
inc
es
mov
sbb
push
pop
inc
insl
ljmp
dec
push
mov
mov
push
dec
xor
mov
stc
iret
in
mov
cmpsl
es
sarl
pop
sub
xor
jmp
hlt
imul
test
inc
js
ret
repz
mov
fs
and
cltd
inc
ret
dec
ss
pop
dec
stos
or
jge
xchg
std
or
leave
mov
push
jo
or
movsl
push
test
clc
adc
dec
cmpsl
push
push
mov
popf
adc
mov
push
sbb
scas
mov
mov
repz
pusha
dec
lcall
rorb
or
dec
xchg
repnz
in
xor
inc
daa
mov
lret
in
gs
rcrb
adc
dec
lcall
les
and
sub
mov
push
pusha
mov
dec
dec
imul
jo
jbe
outsb
fwait
sub
add
pop
jnp
xchg
outsl
cmp
inc
testl
inc
sahf
mov
and
mov
inc
or
ret
push
lds
add
pusha
jno
cmp
add
mov
cmp
filds
rorb
dec
in
test
daa
lods
sub
sbb
stos
sbb
add
leave
dec
or
rolb
dec
mov
movsb
sub
mov
enter
es
mov
addr16
shll
daa
js
xchg
fs
sbb
shll
xor
bound
and
and
push
push
dec
ret
lock
pop
and
fprem
fstl
xor
xchg
icebp
jne
in
add
arpl
add
add
mov
fwait
fwait
movsb
mov
inc
std
and
pop
lods
cltd
bound
add
xchg
mov
pop
mov
mov
add
and
aaa
mov
jno
outsb
rcrb
out
or
and
in
cmp
and
jnp
out
pop
sbb
pop
mov
push
push
xchg
leave
daa
inc
bound
xor
cwtl
jne
ja
mov
cmpsb
add
bound
push
xchg
mov
aad
rorl
stos
sti
sbb
mov
inc
jae
mov
mov
fnsave
je
add
repnz
mov
movsb
pop
pusha
adc
fwait
arpl
cmc
loop
and
fisubrs
or
sub
lcall
xchg
ss
sub
inc
int
dec
nop
cmp
jl
inc
mov
lods
push
popf
les
xor
or
push
mov
add
pop
or
lea
movsb
stc
aas
fmull
loop
mov
sub
xor
pop
dec
xor
mov
mov
imul
lahf
jge
add
jno
and
ja
shll
cs
sub
test
push
cmp
mov
loope
add
loop
daa
fisttps
inc
bound
subl
ret
or
movsb
je
outsl
fwait
mov
lods
or
xor
aaa
scas
cmc
xchg
push
test
cmp
jne
cmp
mov
lcall
hlt
lcall
cmp
adc
daa
dec
ds
jl
das
movb
add
or
pop
jo
es
rorb
andb
scas
sbb
test
push
lea
xchg
addl
je
das
sub
jg
in
mov
adc
cmp
cmp
test
adc
push
add
and
lds
cmp
jne
sbb
pop
in
xor
mov
or
jmp
std
scas
push
je
xchg
cwtl
or
lret
mov
lds
call
jne
xlat
push
test
inc
dec
push
fidivrl
cwtl
arpl
movsb
sbb
nop
loop
sahf
mov
xchg
cmp
sbb
mov
scas
loope
icebp
push
sub
sub
add
int
sub
inc
push
mov
adc
dec
mov
stc
enter
ret
push
add
and
pop
shrb
repnz
jecxz
movsb
andl
insb
pop
sti
arpl
or
and
test
es
add
inc
ljmp
push
cwtl
add
push
sbb
cmp
inc
mov
lahf
jne
loopne
sbb
xor
jb
loop
lods
or
dec
jne
cwtl
aaa
movl
movl
jmp
xlat
mov
sbb
xor
enter
cmp
das
loopne
pop
xchg
mov
sbb
aam
inc
aam
cmc
sti
jb
push
insl
les
push
xchg
and
sbb
mov
js
lds
xor
aad
jg
mov
mov
js
inc
leave
mov
jp
addr16
xor
shll
loopne
mov
inc
xchg
call
add
mov
gs
add
and
sbb
adc
mov
xor
jne
xor
rep
loope
ds
pop
add
xor
sub
add
or
ljmp
data16
insb
orl
les
cld
cmp
inc
das
clc
test
push
xchg
test
or
sub
adc
addb
pop
add
inc
push
pop
popf
xchg
sub
sbb
cmp
pop
pusha
popa
insl
cmp
loop
sub
or
adc
movsl
imul
and
enter
stos
jl
adc
xchg
jmp
popf
adc
push
add
inc
add
outsl
leave
ret
inc
xchg
out
pop
add
sbb
nop
test
mov
and
lods
dec
out
nop
cmp
push
dec
sub
or
push
popf
mov
int
orb
cltd
jmp
mull
mov
jno
dec
rcrl
sbb
stos
sbb
pop
xchg
mov
imul
ja
jns
xor
lret
jecxz
ret
adc
inc
sbb
or
mov
xlat
lcall
repz
fnstsw
xor
or
xlat
and
mov
mov
iret
insl
bound
xor
xchg
cmpsb
and
ja
mov
pop
shrb
mov
xchg
or
mov
iret
in
pusha
mov
push
arpl
xchg
jle
bound
adcb
push
pop
popa
mov
ficomps
jns
imull
scas
addr16
stc
mov
test
inc
sbbl
jbe
and
mov
gs
fisttps
add
les
and
inc
lds
or
shlb
in
out
imul
pop
mov
sti
dec
xor
and
addl
loope
inc
int
cmpsl
ret
or
or
mov
inc
pop
inc
add
cmp
fs
inc
pop
enter
fwait
lcall
sbb
xor
test
outsl
out
push
jo
insl
in
gs
test
and
jno
es
xlat
leave
mov
inc
add
dec
ss
das
aad
lds
loope
xchg
lea
adc
pop
jo
mov
xor
imull
push
push
test
xor
xor
add
dec
xor
ljmp
mov
xorl
mov
icebp
ffree
pop
mov
mov
popf
test
push
aam
add
mov
aad
mov
neg
popf
add
addr16
xor
xorl
jb
cmp
adc
mov
test
cwtl
or
call
mov
andl
clc
out
mov
sbb
ljmp
pusha
push
test
outsb
adcl
adc
call
xlat
jecxz
add
add
mov
add
dec
or
xor
sbb
notl
add
sar
push
aam
sbb
jne
jecxz
mov
aam
loop
push
cmpsb
mov
aam
addr16
dec
inc
pop
pop
add
push
mov
cs
or
pop
stos
inc
enter
mov
dec
xchg
sbb
sbb
push
mov
in
or
scas
aam
leave
xchg
xchg
push
or
mov
or
pop
add
mov
pop
xorb
push
inc
rol
ror
mov
stc
inc
andl
stos
rcrb
flds
sbb
push
pop
sub
mov
sbb
insb
sbb
add
movl
mov
fsubrs
add
push
es
dec
cmp
sub
sub
fadd
sub
out
iret
pop
mov
xchg
mov
mov
shrb
movsl
xor
pop
leave
arpl
cmp
jo
push
aas
dec
ret
shll
dec
inc
mov
xchg
pop
pop
or
enter
xchg
in
sbb
push
push
sub
fistl
sub
lock
cmpsl
cmc
jno
xor
popf
rclb
add
ret
sbb
xchg
adc
jo
add
lret
xor
push
jmp
push
pop
jecxz
pop
outsl
adc
insb
lods
inc
sbb
fcomps
loope
cld
je
xor
scas
fnstenv
inc
push
push
adc
out
sub
test
out
in
ret
inc
jb
loopne
mov
push
and
adc
lea
inc
sbb
scas
mov
ret
in
add
adcl
mov
cmpsl
or
cmp
adc
push
mov
pop
or
mov
ljmp
mov
in
jp
outsb
jp
sub
jecxz
shl
sub
sub
xor
pushl
sub
jge
ja
pop
jne
mov
mov
adcb
idiv
fnsave
jl
popa
aas
loope
movsl
fsubl
jl
outsb
mov
xor
test
loopne
jge
and
adc
jb
adc
lcall
push
add
out
cmp
and
mov
mov
jb
cli
in
bound
sbb
xlat
sub
cmp
and
jmp
xor
es
cmpsb
jno
or
pop
push
call
xchg
and
int3
xchg
test
js
aam
inc
ss
mov
aaa
outsl
js
js
push
outsl
xchg
shlb
mov
add
and
lcall
and
mov
add
mov
lret
push
or
lret
mov
dec
repz
incl
push
into
sbb
sub
and
fs
lret
dec
jo
lret
mov
dec
incl
lds
pop
fmulp
pop
adc
je
pop
jns
and
rcrb
je
pushl
fstpt
dec
das
jge
pop
adc
enter
adc
call
fcompl
daa
jb
aam
xchg
ja
lret
xor
popa
xorb
fucomi
int3
int
incl
lds
jo
xor
sbb
adc
sti
push
pop
pop
sbbb
mov
and
stos
pushl
dec
add
mov
jle
mov
es
stos
aad
mov
incl
lods
add
sbb
lods
push
xor
sbb
and
jno
push
push
fwait
push
outsb
ret
les
in
mov
inc
sbb
fwait
add
dec
jns
std
pop
hlt
aad
insl
dec
mov
jg
loop
push
pop
inc
stos
sub
ret
mov
mov
js
call
push
insb
outsl
sti
add
or
sbb
add
cmp
jg
stos
pushl
les
insl
push
rcrl
shlb
push
test
imulb
mov
mov
enter
sbb
xchg
and
iret
sbb
sahf
jg
sbb
idiv
mov
mov
ds
sbb
adc
jge
push
xor
adc
mov
les
push
sbb
push
loop
push
sbb
dec
idiv
fistl
and
leave
adc
mov
dec
push
push
or
mov
jmp
add
into
stos
push
push
lahf
stos
fwait
js
cmp
ljmp
jge
incl
stc
mov
pcmpgtw
and
push
ret
adc
dec
cmp
inc
insl
sub
lcall
inc
sti
mov
sbb
push
fs
pushl
push
ret
push
fs
push
daa
mov
dec
or
arpl
out
movsb
adc
mov
jbe
push
mov
dec
orl
pop
mov
divb
xchg
mov
cmp
jecxz
pusha
mov
imul
jg
popa
lds
subb
bound
xor
dec
cld
adc
pushl
xor
pop
inc
sbb
sahf
jne
mov
jmp
adc
hlt
andl
cld
inc
sub
adc
mov
outsb
nop
data16
dec
pop
cmp
inc
test
pop
mov
cmc
mov
pop
sbb
pushf
fdivl
outsl
idiv
pop
mov
js
or
jge
push
icebp
pop
cmp
inc
cmp
pop
mov
loopne
or
xor
es
or
enter
out
pop
inc
pop
or
xchg
ljmp
std
fdivrs
push
out
adc
add
adc
pop
mov
mov
in
nop
sahf
mov
stos
scas
jp
cltd
imul
or
mov
arpl
fistpll
pop
mov
pop
aad
mov
pop
ror
cld
or
mov
push
mov
into
mov
mov
pop
cmp
aad
sbb
dec
adc
stos
inc
pop
or
dec
sbb
call
or
or
jmp
aaa
icebp
rcrl
adc
lret
sti
fwait
mov
mov
lock
xor
fisttps
mov
cwtl
jg
jnp
enter
scas
add
lret
cmp
std
push
test
cmc
stc
out
lods
call
in
xchg
mov
std
outsb
cld
push
test
push
xchg
mov
test
push
jns
mov
mov
in
cmc
cmp
ljmp
or
in
push
test
mov
icebp
cli
sti
or
xorb
sub
push
sbb
cmp
push
cmpsl
in
mov
jle
mov
int
scas
cld
jb
js
cmp
mov
dec
movsl
cli
mov
mov
sbb
mov
test
mov
xor
mov
lcall
inc
pop
sub
dec
movsb
stc
or
or
ficoms
cli
andl
pushl
mov
and
cmp
cmp
loope
mov
ss
ljmp
xor
mov
cmp
inc
sbb
cmp
divb
push
lret
sti
loopne
or
mov
das
mov
cld
ficoms
movsl
testb
sbb
mov
mov
mov
fdivs
cmc
dec
stc
js
leave
ds
imul
push
mov
lahf
hlt
inc
in
pop
dec
dec
scas
pop
sti
js
movsl
hlt
dec
sahf
imul
repz
dec
or
xor
cmp
scas
cli
cmp
repnz
dec
repz
mov
mov
test
add
outsl
fs
and
cmp
lcall
cli
pushl
sbb
inc
popf
jge
and
in
ficoml
lock
test
icebp
inc
cvtpi2ps
jg
incl
push
das
push
clc
inc
pushf
mov
lock
pop
push
gs
jmp
pop
push
push
jecxz
clc
cs
decb
jg
mov
scas
aas
cltd
out
inc
push
cld
xchg
or
fdivp
int3
fwait
clc
mov
xlat
out
mov
cwtl
in
stos
in
jbe
sub
aam
fildl
fcomps
sub
in
xchg
and
lds
inc
mov
cmc
sub
icebp
addl
and
ss
ljmp
xor
std
pushl
or
sub
jmp
inc
xchg
xchg
sub
insl
sti
mov
jmp
jle
cmp
jnp
cmp
sub
sub
xor
aas
push
jmp
sbb
and
inc
or
leave
add
sti
loop
std
push
xchg
rcrb
aaa
xchg
call
jnp
aaa
xchg
out
inc
and
mov
pushl
jo
fildll
in
xor
out
mov
sbb
call
cmp
inc
scas
jge
fdivrs
nop
in
insb
cmc
mov
and
fildl
mov
jb
pushf
into
fs
or
cmp
in
in
hlt
mulb
les
loopne
xchg
in
js
aaa
mov
dec
inc
das
inc
adc
lcall
in
in
mov
xor
filds
adc
call
loop
lret
lcall
pop
mull
inc
fidivs
mov
pusha
icebp
mov
fbstp
mov
inc
mov
ss
and
jp
lret
loopne
adc
pushl
adc
sub
dec
xor
es
aaa
rclb
cmp
sar
dec
roll
pushf
cmp
scas
sahf
enter
xor
sbb
fmulp
in
lea
jg
push
test
xor
and
icebp
fidivrs
fwait
movsl
mov
je
ficoml
cmp
mov
cmp
cmp
push
imul
pushl
ss
mov
call
jo
xor
call
cmp
xor
xor
ja
fisubl
pushl
outsb
pop
sub
and
loope
data16
push
and
test
out
lcall
mov
ds
pop
in
fldcw
or
sbb
adc
addl
and
dec
call
fsubs
stos
jnp
sub
mov
pop
fdivl
gs
test
push
or
arpl
fisubrl
adc
mov
icebp
xor
subb
xchg
xlat
cmp
xlat
in
sub
cmp
jns
xor
mov
int
andb
mov
pushl
sub
xor
jmp
and
mov
sub
mov
sub
mov
push
fdivl
pop
mov
or
sub
jg,pn
mov
mov
or
sti
add
push
jmp
push
addr16
push
jge
mov
push
sub
mov
fldl
mov
jbe
data16
jbe
dec
and
lret
ljmp
aam
test
pop
sbb
gs
and
push
call
in
push
outsl
int3
cld
jmp
pop
addl
jp
jbe
imul
pop
jb
and
or
stc
fistps
jbe
or
into
and
sbb
into
mov
pop
sahf
lea
bound
and
in
mov
aam
mov
outsb
dec
into
scas
xchg
pop
jo
mov
jne
and
sbb
mov
add
ja
mov
aaa
cwtl
clc
mov
jl
add
cld
std
and
or
or
pop
cwtl
sbb
pop
push
sbb
fdivrp
out
sti
pop
and
bswap
pop
jne
or
rorb
jecxz
xor
push
ljmp
mov
push
je
push
pop
mov
pushw
inc
mov
imul
mov
jmp
je
or
mov
repz
stc
pop
mov
insl
enter
or
push
pop
loopne
pop
int3
lods
std
jp
mov
outsl
sbb
or
jbe
es
sbb
jae
jb
mov
out
adc
incb
and
jne
xor
adc
fidivl
imul
not
pop
jno
add
rcrl
lds
inc
push
in
pop
mov
ljmp
mov
and
arpl
sbb
dec
push
data16
adc
movsl
in
int3
or
out
clc
pushl
int
pop
js
outsb
ret
outsl
dec
ja
pop
inc
sbb
or
and
mov
pop
stos
adc
ret
lds
in
ficoml
adc
jg
mov
xlat
push
push
adc
ljmp
mov
movsb
cmp
push
test
insb
roll
mov
sbb
pop
fs
and
shlb
sbb
arpl
adc
call
jp
aad
imul
push
xchg
adc
jo
cmp
mov
cmp
insl
add
mov
outsb
sub
insb
shlb
push
repnz
push
or
cld
ret
call
imul
push
inc
adc
cld
insl
mov
pusha
and
push
mov
je
or
std
mov
mov
int3
dec
and
jo
xchg
cmp
adc
call
ret
mov
inc
pop
xor
dec
sub
mov
xor
jg
fdivl
popa
arpl
mov
mov
gs
mov
sbb
lcall
aad
fcmovu
loop
add
movsb
mov
mov
mov
sbb
decl
cmc
enter
nop
daa
pop
mov
ret
mov
fs
or
popa
dec
mov
mov
bound
in
add
jmp
data16
sbb
iret
in
mov
popa
mov
xor
into
xor
push
mov
jo
adc
push
or
sbb
pusha
mov
adc
fucomip
out
test
lcall
sbb
in
sub
sub
dec
jo
pop
mov
mov
jg
add
or
mov
mov
sbb
add
incl
pop
mov
movsb
test
lock
shrb
in
clc
cld
movb
pop
mov
scas
pop
pop
fcmovne
fwait
lcall
inc
mov
push
push
inc
or
fs
sar
incl
pop
cmp
cltd
mov
mov
mov
mov
pushf
or
and
pop
es
sti
jg
inc
mov
int
in
test
pop
mov
xchg
add
lcall
jg
sbb
scas
insl
or
jg
cltd
les
add
xor
push
or
fildl
decl
cwtl
dec
push
scas
add
add
stc
pop
scas
scas
fsubr
add
add
out
sti
jmp
lods
add
insl
pop
xchg
dec
push
in
or
cli
push
in
incl
adc
add
int3
sbb
inc
push
push
lods
popa
mov
lret
inc
pop
add
addr16
incl
mov
ret
stos
add
lea
inc
inc
mov
mov
fistps
enter
fldenv
inc
stos
ds
push
stos
adcb
flds
ljmp
sub
dec
sub
fdivr
add
call
add
cmpsb
mov
inc
out
mov
imul
cmpl
popa
mov
call
fucomip
or
insl
inc
push
lods
js
or
aaa
sub
dec
in
hlt
push
bound
pop
fstpl
frstor
push
add
xchg
ret
cld
xchg
cmpsb
cld
fptan
pop
adc
jne
in
cwtl
cli
dec
xor
jg
dec
scas
ror
cmp
pop
mov
stc
mov
fildll
repz
sti
decl
xor
xor
mov
fisttps
clc
iret
lret
push
inc
les
jmp
mov
or
ss
push
test
mov
cmp
loopne
xchg
push
or
xchg
pop
clc
insl
mov
inc
mov
ljmp
pop
cwtl
testb
mov
decl
cmp
push
fwait
mov
or
out
into
fdiv
xor
hlt
dec
mov
rcr
ljmp
negl
cld
dec
lahf
lds
xchg
xor
adc
xor
neg
push
sbb
shr
shlb
outsb
fdivrl
repz
mov
inc
sub
lcall
fimull
popf
jle
stos
notb
inc
xor
in
outsl
decl
repnz
xchg
aas
pushf
icebp
xchg
test
or
sub
inc
pop
xchg
push
sbb
cmp
sti
mov
cmp
push
gs
xlat
arpl
dec
adc
jle
es
cmp
mov
dec
aad
xor
outsl
aas
arpl
das
popa
push
sub
ljmp
jge
shlb
sub
jns
add
ret
mov
xor
jmp
adc
popa
pop
cmc
pushf
push
inc
jns
pop
repnz
or
push
sbb
push
xor
movlps
and
imul
add
push
lahf
and
xlat
fdiv
cltd
add
lods
or
mov
filds
loope
rorb
inc
pop
sbb
xchg
pop
imul
arpl
pop
mov
jmp
loope
lcall
add
test
pop
jns
es
scas
sub
add
subb
popf
jns
push
int
sbb
scas
sub
and
repz
sub
je
push
notl
mov
mov
cmpsl
mov
xor
or
mov
pop
aaa
mov
ret
mov
and
test
pop
push
xchg
movsl
out
mov
mov
cltd
xchg
lock
mov
scas
mov
mov
jno
adc
lcall
shl
leave
dec
add
iret
pop
mulb
aaa
rol
mov
stos
sbb
arpl
xchg
add
jbe
or
add
in
push
adc
stos
clc
rcl
ret
xor
xlat
push
pop
jo
pop
cwtl
mov
sbb
cmp
sub
fs
adc
cmpsl
movsb
aad
and
test
sub
test
aam
inc
fdivrs
ljmp
shl
sbb
les
pop
cmpsl
fldl
sub
in
out
sub
pop
inc
inc
fwait
stos
bound
add
mov
sub
or
mov
adc
dec
ret
jmp
dec
adc
repz
dec
adc
shll
shrb
testl
mov
aad
mov
mov
xchg
mov
push
pushf
outsl
test
and
loope
stos
or
pop
push
xlat
add
je
and
bound
bound
sbbl
xor
rclb
mov
sti
jo
push
mov
adc
xchg
dec
pop
outsl
jae
adc
aaa
mov
xchg
mov
enter
shl
and
push
sbb
mov
insl
mov
jecxz
das
xor
mov
lret
xor
or
scas
fdivl
sbb
add
enter
inc
fcomip
stos
add
aas
int
loop
push
pop
or
fwait
mov
add
fwait
cmp
push
scas
xor
test
cmp
mov
mov
cmc
jno
adc
stos
mov
dec
jo
jp
xor
push
jo
jge
mov
repz
xchg
rcl
dec
std
fistps
mov
add
pop
jb
stc
arpl
sbb
rorl
push
pusha
mov
mov
inc
inc
sahf
adc
add
popf
cmp
test
mov
cwtl
pop
lahf
out
mov
fldenv
adc
jbe
rorl
fsts
ret
in
sbb
or
in
pop
inc
pushf
bound
xchg
mov
inc
roll
pop
cmc
subb
push
movsl
loope
add
xor
dec
add
xchg
cmp
xchg
or
test
call
mov
shll
jne
or
fcoms
sbb
inc
mov
adc
inc
sub
fnsave
xor
pop
rcl
mov
add
sub
fistpl
loop
lcall
leave
imul
js
fwait
popa
cmp
or
adc
inc
nop
jno
outsl
sbb
jle
sub
jle
andl
and
cmp
or
shlb
mov
jns
xchg
mov
orb
stos
mov
rcrb
mov
add
adc
xor
jnp
mov
bound
sub
mov
mov
out
insb
mov
mov
iret
aad
leave
roll
xchg
sahf
jne
pop
js
sahf
rolb
add
repnz
xchg
loop
dec
mov
pushf
dec
xor
or
add
inc
pop
insb
lods
cwtl
test
scas
adc
jge
cmp
jecxz
xchg
je
push
dec
push
or
cmp
cmp
mov
xor
cmp
add
mov
push
rol
ss
pop
addl
addb
cmpsl
orl
fildl
cld
rorb
imul
in
dec
mov
cmpsl
repnz
push
add
mov
xchg
push
sbb
lds
les
xchg
negl
lea
lds
mov
jl
inc
or
ja
repnz
inc
add
js
mov
sbbl
xor
clc
xor
add
popf
or
cmpsl
xchg
mov
mov
push
push
jecxz
movsl
mov
fsubl
xor
subb
rolb
adc
mov
insb
jge
sar
or
les
add
jno
push
adc
xor
cwtl
xor
incl
add
push
popa
imul
je
jo
gs
bound
arpl
js
in
std
push
gs
data16
jae
outsl
outsb
dec
outsb
outsw
inc
es
outsb
push
outsb
data16
inc
arpl
je
inc
imul
jnp
jge
cmp
outsl
sub
push
aam
imul
sti
push
imul
popa
pop
dec
outsl
bound
int
lock
xor
popa
sub
outsl
insl
insl
push
dec
imul
jne
dec
popa
insl
shlb
lods
pop
push
aaa
inc
and
push
cmpsb
push
cmp
je
xor
adc
jno
ja
pop
push
or
gs
dec
cmp
outsb
arpl
imul
adc
adc
cmp
jae
movsl
push
dec
jo
addr16
add
fcoms
orb
adc
lods
jae
jne
sub
int
sbb
jb
jns
cmp
gs
mov
push
push
xchg
ja
dec
popa
jo
xchg
clc
inc
dec
jae
inc
inc
push
push
fs
jns
lods
loope
fdivrp
and
insb
sarb
andb
sub
push
push
xor
int3
sbb
adc
fdivrs
inc
inc
mov
imul
dec
das
lds
inc
add
arpl
lods
addl
push
daa
inc
stos
aas
cltd
test
inc
clc
inc
inc
and
js
sub
and
into
or
inc
insb
sbb
lods
loope
push
xchg
outsl
ja
imul
push
outsl
insb
jne
loope
or
imul
push
sub
pop
iret
aam
pop
mov
jle
push
jae
pop
dec
dec
inc
daa
pusha
fdivrs
inc
addl
xchg
sbb
fs
xor
and
cmp
or
cmp
fsubrl
xchg
addr16
inc
sub
icebp
push
outsl
ja
jb
pop
imul
call
add
rorl
aas
sbb
ret
outsl
fs
mov
scas
inc
addr16
inc
and
mov
and
jae
ret
inc
mov
push
jl
jnp
jp
push
jne
push
fsubl
addr16
sbb
or
inc
add
ret
mov
aam
pop
pop
imul
adc
es
jp
xchg
cmpsl
add
pop
insb
arpl
movsl
fs
js
lods
outsb
mov
add
adc
sub
add
arpl
jbe
pop
pop
lahf
mov
cli
or
insl
push
dec
mov
push
add
jae
imul
aas
jne
repz
fnstenv
out
lahf
sbb
push
push
outsl
lock
mov
inc
mov
ret
jns
test
sbb
inc
outsb
cmpsb
xorb
lock
pusha
jo
mov
xor
loop
sahf
push
mov
mov
sub
push
push
push
mov
add
mov
insb
popa
pop
andb
fs
ds
outsl
aaa
mov
push
sbb
outsl
inc
push
mov
sbb
data16
dec
push
popa
pusha
inc
outsl
js
pop
loop
push
jnp
sub
in
add
mov
sbb
or
push
into
or
lahf
es
dec
sarb
cmc
in
cmp
dec
ja
pop
jae
dec
mov
and
adc
add
js
dec
dec
int
es
arpl
push
sub
and
scas
jbe
adc
pop
mov
push
pop
lahf
fnsetpm(287
sahf
sbb
dec
mov
mov
push
xchg
inc
in
jo
inc
and
jno
or
mov
aas
outsb
addb
inc
mov
roll
loopew
jo
sbb
or
pop
xchg
jo
inc
inc
negb
jo
cmp
gs
mov
sbb
sub
add
fucomp
cs
sbb
adc
pusha
mov
adcb
jmp
jmp
cli
pop
sbb
add
sbb
xchg
add
add
add
add
outsl
sti
add
sbb
daa
mov
add
adc
inc
add
sarb
add
pop
add
sti
sbb
push
push
push
adc
adc
bsr
nop
add
add
fidivrl
orb
je
push
xor
cltd
push
mov
fidivrl
and
lret
or
sub
mov
sahf
cmp
insl
inc
repnz
cmp
push
cs
mov
push
add
adc
cmp
push
ja
cs
iret
add
dec
add
loope
inc
inc
jg
xchg
add
dec
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
mov
add
push
inc
