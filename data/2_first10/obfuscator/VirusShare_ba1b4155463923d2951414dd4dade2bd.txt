jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
not
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
not
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
not
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
not
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
not
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
not
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
not
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
not
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
not
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
not
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
not
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
not
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
test
je
mov
test
jl
mov
mov
add
cmp
jg
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
jne
mov
pop
pop
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
dec
mov
mov
movl
or
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jle
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
inc
add
mov
mov
inc
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
cmp
jl
mov
mov
mov
inc
xor
cmp
mov
mov
jge
cmp
jge
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
jmp
mov
inc
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
add
cmp
jl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
pop
pop
sub
pop
mov
pop
ret
pop
pop
or
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
add
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
movb
mov
mov
mov
pop
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
movb
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
movb
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
pop
add
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
movb
mov
mov
xor
pop
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
movb
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
pop
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
movb
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
xor
movb
mov
pop
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
mov
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
movb
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
movb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
mov
mov
movb
pop
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movb
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
movsbl
mov
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
push
call
movsbl
mov
xor
mov
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
and
test
jne
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
push
call
add
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lods
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
jne
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
push
push
mov
mov
mov
xor
xor
xor
mov
dec
test
jl
inc
mov
movl
cmp
jge
mov
mov
mov
mov
lea
movzbl
shr
mov
or
and
mov
lea
mov
sub
xor
mov
shl
shr
and
add
cmp
jge
mov
add
mov
mov
inc
jmp
mov
dec
cmp
jge
mov
add
mov
mov
add
mov
mov
add
jmp
mov
add
mov
mov
inc
xor
xor
incl
decl
jne
test
jle
add
mov
mov
inc
mov
movb
pop
pop
mov
pop
ret
nop
jmp
call
mov
repz
popl
mov
mov
pushf
pushf
lea
jmp
pushl
popl
movb
mov
lea
jmp
pushf
add
pusha
jmp
call
movzbl
bts
push
mov
cmc
btc
clc
btr
mov
bt
add
pusha
mov
pushf
pushf
lea
jmp
repz
popl
pushf
pushl
pushf
mov
mov
push
mov
movb
lea
jmp
pushl
not
jmp
mov
mov
lea
jmp
jmp
push
mov
movw
mov
lea
jmp
jmp
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
mov
mov
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
mov
mov
movb
movb
movb
mov
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
mov
mov
mov
mov
lea
movb
push
movb
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
call
lea
push
call
lea
mov
push
call
mov
lea
push
call
lea
mov
push
call
lea
push
call
mov
lea
push
call
lea
push
call
lea
mov
push
call
mov
lea
push
call
lea
mov
push
call
lea
mov
push
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
call
mov
movb
movb
mov
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
movb
mov
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
mov
mov
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
mov
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
mov
movb
movb
movb
lea
mov
push
push
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
call
mov
movb
mov
movb
mov
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
lea
movb
push
push
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
movb
movb
movb
movb
movb
movb
lea
mov
push
push
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
call
mov
lea
movb
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
call
mov
movb
movb
movb
movb
movb
movb
movb
lea
movb
push
push
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
call
mov
lea
push
push
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
movb
movb
movb
movb
movb
movb
lea
movb
push
push
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
movb
mov
movb
movb
movb
movb
movb
movb
movb
lea
movb
push
push
mov
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
movb
movb
movb
lea
movb
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
call
mov
movb
mov
movb
movb
movb
movb
lea
movb
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
lea
mov
push
push
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
call
mov
mov
lea
movb
push
push
mov
movb
movb
movb
movb
movb
mov
movb
mov
movb
movb
call
mov
lea
push
push
mov
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
call
mov
movb
mov
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
mov
lea
push
push
call
mov
mov
lea
movb
push
push
movb
movb
movb
movb
movb
movb
movb
call
mov
lea
push
push
mov
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
call
mov
mov
lea
movb
push
push
movb
movb
movb
movb
call
mov
mov
lea
movb
push
push
movb
movb
movb
movb
movb
movb
call
test
mov
jne
pop
pop
pop
pop
add
ret
mov
lea
push
push
movb
movb
movb
movb
movb
movb
call
test
mov
jne
pop
pop
pop
pop
add
ret
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
test
mov
jne
pop
pop
pop
pop
add
ret
mov
lea
push
push
movb
mov
movb
movb
movb
call
test
mov
jne
pop
pop
pop
pop
add
ret
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
mov
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
lea
movb
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
mov
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
lea
push
push
mov
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
lea
mov
push
push
call
lea
mov
push
push
call
mov
lea
push
push
call
mov
movb
mov
movb
movb
movb
lea
movb
push
push
movb
movb
movb
mov
movb
movb
movb
movb
mov
movb
movb
call
pop
pop
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
jmp
pushf
mov
pusha
mov
mov
mov
pushl
pushf
pushf
mov
push
call
bt
add
bt
add
cmp
pusha
sub
jmp
out
add
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpw
je
pop
pop
xor
pop
mov
pop
ret
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
jne
pop
pop
xor
pop
mov
pop
ret
and
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
cmp
jbe
mov
add
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
inc
mov
cmp
jl
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
add
cmp
je
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
je
movl
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movsbl
add
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
mov
push
mov
call
add
cmp
movl
je
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
add
cmp
movl
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
subl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
sub
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
lea
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
lea
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
add
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
subl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movsbl
xor
mov
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
add
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
push
push
push
push
push
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
mov
push
mov
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
test
jne
mov
test
jne
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jmp
int3
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sysenter
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
push
mov
mov
push
test
push
je
mov
mov
mov
push
mov
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
test
jne
mov
test
jne
mov
mov
mov
push
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
push
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
jmp
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movb
mov
xor
lea
rep
stos
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
mov
push
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
push
call
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
push
call
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
push
call
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
cmc
mov
not
movb
stc
not
push
and
pusha
mov
pushf
pushf
popl
jmp
call
nop
nop
nop
nop
nop
nop
nop
jmp
call
add
mov
jmp
jmp
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
mov
pushf
pushf
lea
jg
pushf
call
out
fildll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
call
xchg
cmc
sub
push
push
jmp
push
mov
pusha
jmp
pushf
pushf
popl
pushl
pushf
pushl
pushl
popl
pushf
movl
pushf
lea
jmp
bsf
bswap
inc
mov
cmc
stc
stc
add
lea
jo
mov
call
mov
bt
cmp
call
pushl
pushl
mov
pushf
mov
lea
jmp
push
call
bt
xor
aas
mov
dec
mov
call
jmp
call
cld
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
xor
lea
movb
rep
stos
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
idiv
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
or
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
pop
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
lea
cmpl
jne
cmpl
je
cmpl
je
jmp
mov
push
call
add
jmp
cmpl
je
mov
push
call
add
jmp
jmp
mov
mov
movb
mov
mov
mov
mov
mov
mov
movzbl
imul
imul
lea
lea
mov
rep
mov
mov
mov
xor
or
call
mov
mov
mov
movzbl
imul
imul
lea
movb
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
mov
movl
movl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
movsbl
mov
push
xor
push
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
mov
pop
ret
nop
push
mov
mov
call
movsbl
mov
push
xor
push
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pushf
pushl
popl
pusha
push
pushl
movl
lea
jmp
mov
call
mov
nop
jmp
push
mov
pushf
push
lea
jmp
cltd
mov
lahf
mov
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pusha
pushl
popl
push
lea
jmp
call
nop
nop
nop
nop
push
mov
mov
call
push
push
push
call
popl
cmpl
jne
movb
mov
xor
lea
rep
stos
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
popl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
jmp
mov
test
mov
pushl
popf
mov
push
movw
push
lea
jmp
push
xchg
sub
mov
mov
call
push
push
push
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jae
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpb
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpb
je
movl
movl
mov
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
mov
call
push
push
push
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jae
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpb
jne
movl
movl
mov
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
mov
push
call
mov
push
push
mov
call
ret
nop
push
mov
mov
call
push
xor
push
push
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
xor
push
push
cmp
push
mov
mov
je
cmpl
je
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
test
je
mov
mov
mov
xor
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
flds
fcomps
fnstsw
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
mov
cmp
jb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
cmp
jae
cmp
jb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
add
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
test
jne
mov
test
jne
mov
test
je
movl
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
mov
jge
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
xor
lea
movb
rep
stos
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
mov
mov
mov
xor
xor
push
mov
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
lea
shr
rep
mov
and
rep
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
mov
push
push
push
push
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
add
mov
mov
push
push
call
push
call
mov
push
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
add
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
push
mov
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
add
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
push
push
call
mov
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
push
call
movsbl
mov
xor
mov
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
xor
lea
rep
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
and
test
je
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
cmpb
je
mov
mov
mov
mov
cmp
jne
addl
addl
cmpb
jne
movl
jmp
sbb
sbb
mov
mov
mov
cmpl
jne
mov
add
mov
jmp
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
push
call
test
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
push
push
call
lea
push
call
add
jmp
mov
lea
mov
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jle
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jle
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
mov
mov
movsbl
mov
mov
mov
xor
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
mov
xor
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
lea
movb
rep
stos
stos
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
mov
push
push
push
movsbl
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
addl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
mov
mov
ret
push
mov
mov
call
push
push
push
movl
movb
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jne
mov
and
cmp
je
mov
and
cmp
je
mov
and
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
jmp
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
xor
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
add
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
xor
lea
movb
rep
stos
stos
mov
push
call
mov
mov
mov
movsbl
mov
xor
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
lea
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
xor
lea
mov
mov
rep
stos
stos
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
test
jle
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
xor
lea
rep
lea
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
inc
cmp
mov
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
inc
cmp
mov
jl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jle
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
push
push
call
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jle
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
push
mov
mov
mov
push
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
push
push
call
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
mov
add
cmp
jle
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
call
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
mov
test
je
lea
push
push
push
call
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
call
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
mov
add
cmp
jle
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
push
mov
mov
mov
push
mov
push
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
lea
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
call
mov
add
cmp
jle
test
je
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
call
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
mov
mov
mov
movl
cmpl
jne
jmp
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmpl
je
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
lea
push
lea
push
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
movl
jmp
mov
cmpl
jne
cmpl
je
cmpl
jne
push
push
push
mov
push
call
add
jmp
push
push
push
mov
push
call
add
jmp
call
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jbe
cmp
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
mov
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
mov
mov
push
mov
push
mov
push
push
mov
call
add
cmp
je
cmp
jb
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
mov
jl
mov
test
je
mov
mov
push
mov
mov
mov
call
mov
add
test
push
push
push
jne
mov
push
call
add
jmp
mov
mov
mov
jmp
push
call
add
jmp
call
test
je
call
xor
mov
pop
cmp
pop
pop
push
jne
mov
push
call
nop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jbe
cmp
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
mov
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
mov
mov
push
mov
push
mov
push
push
mov
call
add
cmp
je
cmp
jb
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
mov
jl
mov
test
je
mov
mov
push
mov
mov
mov
call
mov
add
test
push
push
push
jne
mov
push
call
add
jmp
mov
mov
mov
jmp
push
call
add
jmp
call
test
je
call
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
movsbl
push
push
xor
mov
mov
mov
mov
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
movsbl
mov
movl
xor
movl
movl
mov
mov
mov
mov
mov
mov
test
je
push
push
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
test
pop
pop
jbe
cmp
jae
push
movl
call
mov
add
test
push
jne
mov
push
jmp
push
call
nop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
sub
mov
pop
pop
ret
mov
mov
sub
mov
mov
mov
mov
pop
pop
ret
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
mov
mov
add
mov
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movb
movl
movb
mov
xor
lea
rep
stos
stos
movb
mov
xor
lea
rep
stos
stos
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movsbl
mov
xor
mov
mov
mov
mov
mov
movl
cmpl
jne
jmp
mov
mov
cmp
jb
movzbl
lea
movb
inc
rep
movb
mov
mov
imul
add
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
cmp
jb
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
jmp
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
jne
jmp
mov
cmp
jb
movzbl
mov
lea
rep
lea
push
lea
push
call
add
test
je
jmp
mov
mov
imul
add
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
movb
jmp
mov
cmp
jb
cmpb
jne
cmpb
jne
cmpb
jne
lea
movb
cmpl
jne
cmpl
je
mov
and
test
jne
mov
mov
imul
add
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
movsbl
xor
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
push
mov
mov
push
mov
xor
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
nop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
mov
xor
cmp
jbe
cmp
jbe
mov
jne
mov
cmp
jae
mov
cmp
jne
cmp
jbe
xor
cmp
jae
mov
cmp
pop
pop
jae
cmp
jbe
mov
jne
mov
cmp
jae
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
xor
mov
xor
lea
mov
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
call
mov
mov
xor
lea
rep
mov
add
test
je
lea
push
push
push
call
jmp
mov
mov
lea
push
rep
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
xor
lea
lea
rep
mov
lea
sub
lea
mov
shr
rep
mov
and
inc
rep
push
call
mov
mov
xor
lea
rep
mov
mov
lea
lea
shr
rep
mov
push
and
rep
call
lea
mov
push
call
add
mov
mov
mov
xor
lea
rep
mov
test
je
lea
push
push
push
call
jmp
mov
mov
lea
push
rep
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
xor
lea
lea
rep
mov
lea
sub
lea
mov
shr
rep
mov
and
inc
rep
push
call
mov
mov
xor
lea
rep
mov
mov
lea
lea
shr
rep
mov
push
and
rep
call
lea
mov
push
call
add
mov
mov
mov
push
call
add
mov
movl
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
mov
call
movsbl
push
push
mov
push
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
push
cmp
push
push
jne
mov
push
call
mov
mov
mov
add
push
mov
push
push
push
call
mov
add
cmp
mov
jae
test
je
test
je
movl
mov
push
push
mov
push
push
call
mov
mov
add
cmp
jae
test
je
test
je
mov
mov
jmp
mov
test
mov
je
test
je
cmp
jne
mov
mov
mov
call
mov
mov
movl
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
je
cmp
jne
mov
mov
mov
call
mov
mov
movl
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
mov
movl
xor
cmp
mov
jae
xor
mov
pop
ret
mov
mov
add
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
jbe
cmp
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
mov
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
mov
mov
mov
push
mov
push
mov
push
push
mov
call
add
cmp
je
cmp
jb
mov
test
jne
mov
mov
jmp
mov
mov
mov
inc
cmp
mov
jl
mov
test
je
mov
push
push
push
call
mov
push
call
push
push
push
call
push
call
mov
push
test
jne
mov
push
jmp
push
call
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
imul
add
mov
cmp
je
mov
mov
mov
mov
mov
mov
nop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
xor
push
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jbe
cmp
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jle
lea
lea
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
mov
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
cmp
jl
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jb
sub
jmp
sub
mov
mov
mov
cmp
jb
sub
jmp
sub
mov
cmp
jae
mov
ret
nop
push
mov
mov
call
movsbl
push
mov
mov
push
xor
mov
push
mov
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
push
push
push
push
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
je
mov
mov
mov
mov
lea
mov
push
push
push
push
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
call
lea
mov
mov
test
je
push
push
call
add
test
jne
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
nop
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
call
movsbl
mov
mov
xor
push
mov
mov
push
xor
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
je
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
movl
mov
mov
mov
mov
mov
mov
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
cmpb
je
pusha
lea
mov
cld
movsl
movsb
popa
movb
lea
mov
sub
sub
mov
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pusha
lea
mov
cld
movsl
movsb
popa
movb
lea
mov
sub
sub
mov
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pusha
lea
mov
cld
movsl
movsb
movsb
popa
movb
lea
mov
sub
sub
mov
movb
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
pusha
pushf
lea
lea
add
mov
lea
lea
add
mov
call
popf
popa
movsbl
xor
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
pusha
pushf
lea
lea
add
mov
call
popf
popa
movsbl
xor
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
push
mov
push
push
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
lea
movzwl
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
jmp
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
je
mov
mov
mov
lea
lea
mov
push
push
push
push
call
add
cmp
jne
push
push
call
add
test
jne
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
movl
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
add
movl
pop
pop
mov
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
mov
push
xor
push
push
movl
mov
pusha
pushf
call
test
jne
movsbl
xor
mov
mov
mov
mov
mov
mov
mov
movzwl
add
mov
movzwl
mov
mov
popf
popa
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
cmpb
jne
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
call
mov
xor
mov
lea
mov
push
push
movl
mov
call
mov
mov
mov
push
lea
push
push
call
test
je
mov
mov
mov
push
push
push
push
call
mov
add
mov
push
push
call
push
call
add
pop
add
ret
mov
call
movswl
movswl
mov
mov
lea
mov
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
lea
push
push
push
push
mov
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
add
push
push
mov
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
lea
push
push
push
push
mov
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
push
mov
lea
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
add
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
lea
push
push
push
push
push
call
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
mov
cmp
jne
mov
test
jne
mov
mov
mov
push
mov
push
push
push
push
call
ret
mov
mov
push
mov
push
push
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jne
mov
mov
mov
push
mov
push
push
push
push
call
ret
mov
mov
push
mov
push
push
mov
push
push
call
ret
nop
nop
nop
nop
nop
push
mov
cmp
jne
mov
mov
mov
push
mov
push
push
push
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
mov
cmp
jne
push
push
call
add
mov
mov
push
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
mov
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
call
add
push
push
mov
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
add
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
push
mov
push
push
push
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
push
mov
push
mov
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
add
mov
push
push
push
push
call
push
call
mov
push
push
push
push
mov
call
push
call
mov
mov
push
push
push
push
call
push
call
mov
push
push
push
push
mov
call
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
mov
push
push
call
mov
push
push
push
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
push
push
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
push
push
mov
call
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
push
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
add
mov
push
push
push
push
call
push
call
mov
mov
push
push
push
push
call
push
call
mov
push
push
push
push
mov
call
push
call
mov
push
push
push
push
mov
call
push
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
mov
push
push
push
push
push
push
push
call
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
mov
push
call
mov
push
push
push
push
push
push
push
mov
call
add
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
call
mov
add
push
push
push
push
push
push
push
call
mov
add
mov
push
push
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
push
push
mov
call
mov
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
push
push
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
push
push
call
push
push
push
mov
push
mov
push
push
push
call
push
push
push
mov
mov
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
mov
mov
push
push
push
push
call
add
mov
push
push
mov
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
call
mov
add
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
add
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
mov
call
push
push
push
push
push
push
mov
push
call
mov
add
mov
push
push
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
call
mov
mov
push
push
push
call
mov
add
mov
mov
mov
push
push
push
shr
push
mov
imul
cltd
and
and
add
sar
push
mov
imul
cltd
and
add
sar
push
mov
imul
cltd
and
add
sar
push
mov
imul
cltd
and
add
sar
push
push
push
push
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
push
push
call
push
call
push
call
mov
add
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
mov
lea
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
mov
lea
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
mov
lea
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
push
call
mov
push
push
call
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
push
push
push
call
push
push
call
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
mov
push
push
mov
push
push
push
push
call
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
push
push
push
movl
call
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
mov
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
mov
xor
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movsbl
mov
xor
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
rep
movsw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
inc
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
inc
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pushl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
incb
cmpb
jb
movb
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
call
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
push
push
push
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
mov
mov
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movsbl
mov
xor
mov
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
mov
push
mov
mov
mov
mov
mov
call
mov
add
mov
cmpl
jb
push
mov
push
call
movl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
jne
call
ret
cmp
jne
call
ret
nop
nop
mov
push
push
push
movsbl
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
test
je
xor
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
ja
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
jne
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
mov
call
push
xor
push
push
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
mov
lea
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movb
mov
xor
lea
rep
stos
stos
mov
xor
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movsbl
mov
xor
mov
cmpl
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
call
add
test
je
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
rep
movsw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
call
add
movl
mov
mov
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
inc
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
inc
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pushl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
incb
cmpb
jb
movb
xor
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
mov
push
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
nop
nop
nop
mov
push
push
push
push
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
movl
pop
ret
nop
nop
push
mov
mov
call
push
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
push
push
call
add
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
push
push
call
add
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
je
sub
je
dec
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
cmp
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
mov
and
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
cmp
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
cmp
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
mov
cmp
jne
mov
and
cmp
mov
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
add
mov
mov
cmp
jne
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmpw
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
push
push
call
cmp
jne
call
movl
jmp
push
push
call
test
jne
mov
test
je
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
cmp
jne
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
mov
xor
cmp
je
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
call
call
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
call
pop
pop
xor
pop
pop
ret
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
xor
push
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
mov
mov
xor
mov
xor
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmpl
jb
lea
lea
push
mov
lea
push
push
push
call
add
cmp
mov
je
movzwl
push
mov
push
mov
push
movzwl
mov
mov
mov
mov
call
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pusha
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cld
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
popa
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
test
jne
call
test
jne
mov
test
jne
mov
test
jne
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
incb
cmpb
jb
movb
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
mov
jne
mov
mov
jmp
inc
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
movl
pop
mov
pop
ret
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movl
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
je
mov
and
cmp
jne
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
cmpl
jne
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
mov
nop
cmpl
je
cmpl
jne
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
cmpl
jne
movl
cmpl
jne
movl
mov
imul
mov
cmpl
jne
mov
mov
mov
mov
push
mov
push
push
mov
push
call
add
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
jne
mov
mov
mov
mov
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
cmpl
jne
cmpl
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
jne
mov
mov
mov
mov
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
jne
mov
mov
mov
mov
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
cmpl
je
cmpl
jne
cmpl
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jne
mov
mov
mov
mov
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
cmpl
jne
push
mov
push
push
call
add
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
mov
jne
cmp
je
movl
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
lea
movb
rep
mov
stos
stos
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
mov
jge
mov
xor
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
xor
cmp
je
mov
lea
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
je
push
call
mov
mov
push
call
add
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
cmp
je
movl
movsbl
mov
push
xor
push
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
mov
jge
mov
mov
mov
movzbl
imul
imul
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
cmpw
jne
mov
mov
mov
test
jne
mov
test
je
cmpw
jne
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
cmp
je
movl
movsbl
mov
push
xor
push
push
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
mov
jge
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
mov
lea
mov
mov
cmpw
jne
mov
mov
mov
test
jne
mov
test
je
cmpw
jne
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
push
mov
mov
call
mov
push
push
xor
cmp
push
mov
mov
mov
je
cmpl
je
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
call
test
je
mov
mov
mov
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
flds
fcomps
fnstsw
test
je
lea
lea
push
lea
push
push
call
add
test
je
mov
push
jmp
lea
lea
push
lea
push
push
call
add
test
je
mov
push
call
add
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
xor
push
push
cmp
push
mov
mov
mov
je
cmpl
je
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
call
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
mov
mov
xor
mov
fildll
mov
mov
fstps
fildll
fstps
flds
fdivs
fstps
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
flds
fcomps
fnstsw
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
int3
int3
int3
jmp
push
push
mov
pushf
push
mov
mov
movb
mov
pusha
pusha
jmp
push
jmp
cmc
add
pushf
jmp
pop
in
nop
nop
nop
nop
nop
nop
nop
jmp
lea
aaa
test
lea
xadd
sar
bsf
setge
sub
inc
rcr
lea
bts
inc
and
pop
ror
btc
bts
sub
bswap
mov
movzbw
mov
bswap
jne
pushf
pushf
popl
bswap
movzbl
not
push
mov
movzbl
movzbw
xchg
mov
std
call
pushl
mov
pusha
pushf
mov
call
cwtl
rdtsc
pushf
cmp
sub
call
movzbl
lea
bswap
lea
mov
call
pushf
call
pushf
pusha
mov
pushf
push
pushf
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
je
mov
mov
add
lea
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
mov
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
incb
cmpb
jb
movb
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
je
mov
mov
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
je
mov
mov
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
test
mov
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
sub
push
mov
je
sub
je
dec
jne
mov
mov
and
add
cmp
ja
xor
mov
jmp
push
push
call
cmp
jne
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jb
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
add
movl
xor
pop
pop
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
mov
push
test
je
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
pop
mov
pop
xor
pop
pop
ret
push
push
call
test
jne
pop
pop
mov
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
pop
pop
mov
pop
pop
ret
mov
mov
cmp
jne
and
cmp
mov
jne
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
call
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
mov
xor
mov
mov
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
xor
mov
mov
mov
mov
push
push
mov
mov
push
push
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
xor
test
jle
mov
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
cmp
jl
pop
pop
xor
pop
pop
ret
xor
push
mov
push
mov
push
mov
push
mov
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
jle
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
cmp
jl
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jne
and
cmp
jne
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
pop
pop
xor
pop
pop
ret
call
call
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
add
mov
mov
push
push
push
call
mov
mov
add
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
mov
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
mov
push
int
adc
into
add
or
add
or
add
add
cmp
add
jg
add
xchg
fiadds
adc
fldl
adc
roll
adc
loop
adc
jecxz
adc
in
adc
loopne
adc
testb
add
add
add
push
adc
adc
adc
adc
adc
adc
adc
adc
or
adc
or
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
push
push
mov
mov
mov
mov
mov
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
mov
add
cmp
mov
mov
jb
mov
cmp
jb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
cmpl
je
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movsbl
mov
xor
mov
mov
sub
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
movl
movsbl
mov
xor
mov
mov
cmpb
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
je
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
sub
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
movl
movsbl
mov
xor
mov
mov
cmpb
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movl
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
cmpl
je
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
sub
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
xor
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
idiv
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jge
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cltd
idiv
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmpl
jne
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jb
mov
mov
sub
mov
mov
cltd
idiv
mov
sub
mov
mov
mov
movl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
mov
call
push
push
xor
mov
xor
lea
mov
mov
rep
mov
mov
stos
stos
movsbl
xor
xor
cmp
mov
mov
mov
mov
mov
je
push
push
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
mov
xor
lea
rep
mov
mov
movzbl
imul
imul
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpb
jne
mov
test
je
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
add
test
jne
mov
inc
cmp
mov
jl
mov
jmp
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
mov
call
lea
movl
push
call
add
test
je
mov
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
cmpw
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzwl
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzwl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jb
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzwl
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
mov
movl
movl
movsbl
mov
xor
mov
cmp
je
mov
cmp
je
mov
cmp
je
movzwl
mov
cmp
jne
mov
mov
cmp
je
mov
movzwl
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzwl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jne
movzwl
movw
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
movzwl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
jne
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
movzwl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
jb
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
dec
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
jb
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jae
movzwl
movw
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
mov
movl
cmp
je
mov
cmp
je
mov
cmp
je
movb
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
mov
mov
mov
cmpl
je
mov
mov
cmpl
je
mov
movb
mov
cmpl
je
mov
cmpb
je
movb
mov
cmpl
je
mov
movb
mov
cmpl
je
mov
movb
mov
cmpl
je
mov
cmpb
je
movb
mov
cmpl
je
mov
movb
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
movsbl
mov
mov
xor
push
mov
mov
mov
push
xor
xor
mov
mov
xor
cmp
mov
mov
mov
je
cmp
je
cmp
je
mov
movb
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
nop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
jne
mov
test
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
call
mov
test
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
test
pop
je
call
mov
test
je
call
mov
test
je
call
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movl
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
cmp
je
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
mov
mov
cmpl
jne
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
nop
cmpl
je
cmpl
jne
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
cmpl
jne
movl
cmpl
jne
movl
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
mov
mov
mov
imul
mov
cmpl
jne
mov
mov
push
mov
push
push
mov
push
call
add
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
stos
stos
mov
push
push
push
call
mov
push
push
push
mov
call
mov
add
mov
push
push
call
mov
push
call
mov
mov
push
push
push
call
mov
add
mov
push
push
call
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
lea
mov
push
push
push
call
lea
push
call
lea
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
call
mov
push
call
add
lea
mov
push
push
call
mov
lea
push
push
push
push
call
mov
mov
push
push
push
call
add
cmp
mov
jne
lea
push
push
call
mov
push
call
add
lea
lea
mov
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
call
mov
push
call
mov
add
lea
mov
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
call
push
push
push
mov
xor
lea
movb
movb
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
push
call
mov
push
push
push
mov
call
add
xor
test
mov
jbe
mov
xor
lea
lea
rep
mov
push
push
push
push
call
lea
lea
push
push
call
mov
lea
push
push
call
inc
cmp
jb
mov
push
call
mov
add
lea
movl
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
xor
lea
movb
rep
stos
stos
mov
push
push
push
call
mov
add
mov
mov
push
push
call
mov
add
test
je
mov
xor
lea
sub
rep
mov
mov
mov
lea
shr
rep
mov
lea
and
push
rep
mov
push
push
push
call
mov
lea
test
jne
mov
push
call
add
movl
mov
pop
pop
pop
pop
add
ret
nop
nop
mov
call
push
push
push
mov
xor
lea
movb
movb
rep
stos
stos
mov
xor
lea
push
rep
stos
stos
mov
push
push
push
call
mov
push
push
push
mov
call
add
xor
test
mov
jbe
mov
xor
lea
lea
rep
mov
push
push
push
push
call
lea
lea
push
push
call
mov
lea
push
push
call
inc
cmp
jb
mov
push
call
mov
add
lea
movl
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
xor
lea
movb
rep
stos
stos
mov
push
push
push
call
mov
add
mov
mov
push
push
call
mov
add
test
je
mov
xor
lea
sub
rep
mov
mov
mov
lea
shr
rep
mov
lea
and
push
rep
mov
push
push
push
call
mov
lea
test
jne
mov
push
call
add
movl
mov
pop
pop
pop
pop
add
ret
nop
nop
mov
call
push
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
lea
push
call
mov
push
push
push
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
add
mov
push
mov
push
call
push
call
mov
xor
mov
push
mov
push
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
mov
push
lea
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
mov
push
lea
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
mov
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
lea
mov
rep
stos
lea
mov
push
stos
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
push
push
push
mov
call
mov
mov
xor
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
mov
push
push
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
lea
mov
rep
stos
lea
mov
push
stos
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
push
push
push
mov
call
mov
mov
xor
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
mov
push
push
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
add
xor
mov
mov
mov
mov
mov
lea
mov
push
push
mov
push
push
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
lea
mov
push
push
mov
push
push
mov
mov
mov
call
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
xor
mov
add
mov
mov
mov
push
mov
push
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
push
push
push
call
add
lea
lea
mov
push
push
push
mov
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
lea
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
push
push
push
call
mov
push
push
push
mov
call
mov
push
push
push
mov
call
mov
mov
push
push
push
call
mov
add
mov
push
push
push
call
mov
add
mov
push
push
call
push
call
mov
mov
lea
lea
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
lea
mov
rep
mov
push
stos
push
push
stos
call
add
lea
lea
mov
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
push
push
push
je
mov
push
call
lea
push
call
add
jmp
mov
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
lea
mov
rep
mov
push
stos
push
push
stos
call
add
lea
lea
mov
push
mov
push
push
push
push
push
call
mov
push
call
mov
add
cmp
mov
push
push
push
je
mov
push
call
lea
push
call
add
jmp
mov
push
call
mov
push
push
push
call
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
lea
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
xor
mov
push
mov
push
mov
push
mov
mov
mov
call
add
lea
lea
mov
push
push
push
push
push
mov
push
call
mov
push
call
mov
add
cmp
mov
je
mov
push
push
push
jmp
mov
push
push
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
mov
mov
mov
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jb
movl
mov
add
cmp
jb
movl
movl
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
cmpl
jne
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
jmp
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
jne
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
movl
nop
jmp
jmp
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movsbl
mov
xor
mov
mov
cmpl
je
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
mov
cmpw
je
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movw
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
nop
pop
pop
pop
mov
pop
ret
int3
push
mov
mov
call
push
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
push
push
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
call
pop
pop
mov
pop
ret
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
jne
jmp
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movb
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movb
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
movl
movsbl
mov
xor
mov
cmpl
jne
jmp
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmpl
jne
movl
push
lea
push
push
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
push
lea
push
push
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
push
lea
push
push
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
mov
push
push
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
call
movsbl
mov
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
mov
mov
xor
push
mov
mov
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
mov
cmp
jne
mov
mov
cmp
jne
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
movl
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
mov
push
mov
xor
mov
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
movl
test
jle
mov
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
call
add
test
je
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
mov
mov
inc
add
cmp
mov
mov
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
test
jne
mov
mov
lea
rep
jmp
lea
push
push
push
call
lea
push
push
call
mov
decl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
mov
mov
mov
push
push
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
lea
lea
movl
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
xor
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
mov
mov
lea
rep
jmp
lea
push
push
push
call
lea
push
push
call
mov
incl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
mov
mov
push
mov
push
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
lea
lea
movl
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
push
mov
xor
push
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
mov
add
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
mov
shr
rep
mov
and
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
cmp
mov
mov
mov
mov
je
mov
mov
jmp
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
lea
movl
mov
jmp
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
test
mov
jne
test
jne
push
call
mov
mov
mov
mov
add
inc
add
add
cmp
mov
mov
mov
jl
pop
pop
pop
mov
pop
ret
inc
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
test
jl
lea
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
mov
inc
add
cmp
mov
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
test
je
lea
lea
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
mov
mov
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
lea
lea
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
test
jne
mov
mov
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
stos
mov
xor
lea
mov
rep
mov
mov
stos
stos
lea
push
push
push
push
call
test
je
mov
mov
push
push
push
push
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
movl
jle
mov
xor
lea
lea
rep
mov
mov
push
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
mov
lea
lea
xor
repz
je
sbb
sbb
test
je
mov
mov
inc
cmp
mov
jl
mov
mov
lea
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
movl
test
jle
mov
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
cmp
je
mov
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
movl
movsbl
mov
xor
mov
movl
movl
movl
movsbl
mov
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
cmpl
jne
jmp
movsbl
mov
xor
mov
mov
cmpl
jne
call
test
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movsbl
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmp
je
mov
mov
jmp
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
je
mov
jle
lea
movl
mov
jmp
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
lea
push
push
push
call
push
mov
call
add
test
je
mov
test
je
mov
test
jne
mov
mov
mov
mov
inc
add
add
cmp
mov
mov
mov
jl
pop
pop
pop
mov
pop
ret
mov
movb
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
cmp
jle
mov
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
test
jne
mov
mov
inc
cmp
mov
jl
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
xor
movb
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
mov
test
jle
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
call
add
test
je
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
mov
mov
inc
cmp
mov
jl
mov
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
call
movsbl
push
push
mov
push
mov
mov
mov
xor
xor
mov
mov
mov
mov
lea
xor
movb
mov
mov
xor
mov
mov
xor
rep
stos
cmp
mov
stos
jb
mov
mov
mov
mov
mov
mov
movzbl
imul
imul
lea
lea
mov
rep
mov
mov
mov
mov
mov
lea
movb
movzbl
mov
lea
lea
mov
rep
mov
mov
movzbl
imul
sub
mov
call
mov
mov
mov
movzbl
imul
imul
lea
movb
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
lea
mov
mov
mov
mov
rep
mov
stos
stos
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
mov
xor
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
imul
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
je
mov
lea
push
push
call
add
test
jne
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
lea
mov
mov
mov
rep
mov
stos
stos
movsbl
xor
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
test
je
mov
mov
jmp
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
test
jle
movl
mov
xor
lea
rep
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
call
test
je
lea
lea
push
push
call
add
test
je
mov
push
call
add
mov
mov
inc
add
cmp
mov
jl
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
not
pushf
pusha
sub
movb
call
mov
mov
call
jmp
pushf
div
jmp
fcoml
add
rolb
pushf
outsl
cld
jmp
aad
lcall
mov
aad
push
out
add
jp
in
nop
nop
nop
nop
nop
nop
nop
nop
jmp
shl
mov
movb
pusha
movb
mov
lea
ja
pushf
pushf
movw
pushf
popl
pushf
pusha
push
call
pushf
bt
cmc
lea
cmc
cmc
clc
pusha
ror
push
sub
stc
push
test
sub
movw
push
mov
push
lea
jmp
add
movw
call
sub
mov
movb
pushf
imul
pusha
mov
jmp
pushl
mov
pushf
popl
jmp
mov
pushf
mov
mov
lea
jmp
jmp
dec
jmp
pushl
lea
jne
jmp
movb
lea
ja
daa
mov
bts
lea
jmp
mov
pushl
mov
call
pusha
push
call
pushf
mov
pushf
mov
call
push
pushl
popl
pushf
pushf
pushl
lea
jmp
push
sub
pusha
shr
jmp
adc
add
btc
clc
rol
stc
not
rcl
shld
rcl
add
sub
movsbw
bswap
inc
movzbl
jmp
jmp
pushl
jmp
mov
jmp
aam
rcr
mov
ror
mov
cmc
jmp
pushf
mov
push
repz
popl
mov
pushf
mov
pushl
pushf
pushf
lea
jmp
jmp
cmc
cmp
pusha
add
push
pushl
pushf
pushf
mov
pushf
pushf
mov
pushf
lea
jmp
pushl
popl
movl
mov
lea
jmp
pushf
mov
pushf
movb
pushl
repz
popl
pushf
pushf
call
mov
pushf
mov
pushf
lea
jmp
call
jmp
pushf
popl
movb
call
cmp
add
mov
not
call
pushl
popf
pushl
mov
movb
movb
lea
jmp
movw
test
add
jmp
aam
jmp
pushf
popl
pusha
lea
jne
push
pushl
popl
pushf
push
lea
jmp
mov
movb
pushl
pushf
pushl
ret
pushl
popl
movb
pushf
lea
jmp
push
inc
not
push
setb
call
clc
rcl
cmp
mov
rol
test
mov
clc
bt
call
push
pushf
rep
rol
shld
stc
shl
mov
cmc
bts
mov
pushf
cmp
jmp
call
lea
cld
pusha
std
xchg
not
mov
call
pushf
pushl
popl
movw
mov
pushf
push
lea
jmp
dec
cmp
shl
pusha
mov
bt
setp
neg
pop
shld
ror
aaa
pop
cld
movsbw
xadd
pop
pusha
adc
mov
inc
pushl
popf
not
pushf
mov
cltd
push
mov
movzbw
pushf
mov
mov
mov
setno
jmp
mov
mov
lea
jb
push
mov
call
push
call
mov
mov
pushf
pushf
pushl
lea
jmp
pusha
pushl
mov
mov
call
stc
mov
pusha
clc
cmc
pushf
add
pushl
lea
jmp
mov
shl
mov
push
movb
stc
add
pushl
mov
mov
lea
jmp
call
add
sub
clc
shr
not
or
mov
rcr
or
bt
pushf
sub
stc
call
mov
jmp
lea
pop
jmp
call
push
call
movb
mov
pushf
pushf
mov
mov
mov
push
pusha
mov
call
clc
clc
sub
pusha
pushl
ror
test
test
push
sub
movw
jmp
pushf
pushf
mov
jmp
bt
xor
jmp
pusha
bt
mov
not
test
cmc
sub
bt
cmp
cmp
and
mov
call
pushl
jmp
mov
push
movb
pushf
movw
lea
jmp
jmp
jmp
mov
pushf
movb
push
pushl
ret
jmp
pushf
call
mov
call
mov
pushf
pushf
popl
call
pushl
mov
pushf
mov
mov
jmp
pusha
mov
pushf
pushf
lea
jmp
pusha
mov
pusha
mov
pushf
mov
jmp
push
push
pushf
pushl
popl
push
pushf
pushf
push
lea
jmp
push
mov
pushf
pusha
pusha
call
sub
pushl
stc
and
pushf
push
pusha
jmp
call
call
pushf
mov
pushl
pushf
popl
pusha
call
mov
call
mov
jmp
xor
movb
test
mov
clc
cmc
test
test
sub
jmp
mov
jmp
jmp
mov
pushl
popl
movw
movl
movb
lea
jmp
stc
sub
clc
call
mov
push
lea
jmp
call
mov
pusha
lea
jmp
mov
call
mov
movb
call
pushf
pushf
mov
jmp
stc
pusha
stc
add
call
pushf
pushf
pushl
popl
movw
push
mov
pushf
lea
jmp
push
mov
jmp
movb
mov
call
pushf
push
mov
pusha
push
pushf
mov
lea
jmp
test
sub
call
pushf
pushl
pusha
add
jmp
movb
movl
inc
pusha
decl
jmp
bt
pushf
add
jmp
bts
xchg
bt
mov
shl
add
pushf
mov
jmp
shr
sub
mov
rcl
sbb
call
mov
call
rol
rol
setbe
shrd
movzbl
clc
btc
shl
shl
xor
jmp
mov
mov
mov
pusha
jmp
pushl
pushl
popl
pushf
pushf
lea
jmp
push
jmp
pushf
mov
movw
call
movb
pushl
repz
popl
jmp
sub
call
lea
jae
ja
call
mov
push
push
mov
call
call
mov
push
mov
mov
lea
jmp
pushf
jmp
sar
not
movzbl
pusha
cmp
xor
movb
xor
clc
cmc
sub
pushf
push
movb
sub
jns
add
cmc
rol
pusha
pushf
xor
cmc
clc
mov
mov
sub
jmp
stc
rcl
setge
bt
mov
jmp
pushf
mov
push
pushl
call
mov
call
mov
pushf
push
pusha
pushf
lea
jmp
mov
pusha
mov
pushf
mov
movw
movl
pushl
movb
lea
jmp
mov
mov
pushf
call
test
jmp
mov
call
push
pushf
mov
pusha
push
pushf
pushf
lea
jmp
sub
call
pushf
pusha
mov
movw
mov
pushf
mov
movb
mov
jmp
pushf
bswap
mov
setp
mov
pushl
setbe
mov
movsbw
mov
movb
movb
movw
mov
pushl
ret
stc
clc
cwtl
stc
test
sub
call
pushl
mov
pusha
push
movb
lea
jmp
pushf
call
jmp
cmp
jmp
mov
jmp
movb
bt
sub
call
call
mov
pusha
pushf
popl
call
pushf
call
sub
pusha
pushl
call
shl
stc
shld
sub
movzbw
inc
jmp
pushl
popl
push
push
lea
jmp
pushl
mov
push
lea
jmp
pusha
lea
setns
mov
pushl
movzbl
mov
pushf
push
dec
pushf
stc
bt
pushl
add
pushf
jmp
call
movzbw
lea
cmc
bt
cmc
cmp
call
mov
mov
push
push
pusha
lea
jmp
call
pushf
popl
jmp
mov
pusha
pushl
pushf
push
lea
jmp
push
mov
jmp
pushf
pushf
pushf
popl
pushf
pushf
pushf
pushl
popl
push
pushl
lea
jmp
mov
inc
clc
mov
jg
add
push
lea
jl
push
pusha
pushf
popl
jmp
push
rep
pop
rol
inc
mov
add
call
pusha
jmp
pushf
pushl
call
inc
clc
rol
cmp
cmc
add
call
mov
mov
pushl
pushl
push
lea
jmp
das
mov
call
bswap
mov
sar
mov
jmp
mov
repz
popl
lea
js
push
pushf
lea
jmp
mov
jmp
mov
call
cbtw
pusha
btr
and
notl
cmp
pusha
pushf
btr
mov
cmp
clc
sub
mov
pushl
test
and
mov
pushl
push
call
shl
pusha
bt
clc
shr
test
or
bt
bt
xor
movw
jmp
push
pushf
popl
push
call
pushl
pushf
pusha
pushf
popl
call
push
jmp
pushf
popl
movb
call
call
add
ficoms
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
test
je
xor
test
jle
movl
movl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
inc
add
add
cmp
mov
mov
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
push
movw
push
mov
pushf
movw
jmp
jmp
cmp
nop
nop
nop
push
mov
mov
push
push
mov
sub
push
mov
je
dec
jne
mov
and
add
cmp
ja
xor
mov
jmp
call
pop
pop
xor
pop
pop
ret
call
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
mov
test
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
mov
test
jne
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
call
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
mov
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
mov
xor
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
cmp
jne
mov
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
pop
pop
xor
pop
pop
ret
push
push
call
cmp
jne
pop
mov
pop
xor
pop
pop
ret
push
push
call
test
jne
pop
pop
mov
pop
pop
ret
push
push
call
cmp
jne
push
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
push
call
test
jne
push
push
call
pop
pop
xor
pop
pop
ret
call
call
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
push
push
push
movl
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
movl
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
mov
push
push
push
call
push
call
push
push
push
push
call
add
pop
pop
xor
pop
pop
ret
nop
outsb
clc
add
inc
stc
add
pop
cli
add
and
add
in
add
jbe
add
adc
add
lock
mov
add
sub
add
adc
testb
add
adc
testb
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
push
pop
adc
or
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
push
push
push
push
call
call
mov
lea
push
push
call
mov
push
call
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
push
push
call
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
movl
movl
movsbl
mov
xor
mov
cmpl
jne
jmp
mov
mov
cmp
je
movzbl
cmp
je
mov
inc
mov
mov
push
mov
push
mov
push
call
add
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movl
movsbl
mov
xor
mov
cmpl
jne
jmp
mov
mov
cmp
je
movzbl
cmp
je
mov
lea
mov
mov
push
mov
push
mov
push
call
add
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
push
push
push
movl
movl
movl
movsbl
mov
xor
mov
cmpl
jne
jmp
mov
mov
cmp
je
mov
cmp
je
cmpw
je
cmpw
je
cmpl
je
lea
mov
mov
mov
push
call
mov
mov
push
mov
push
mov
push
call
add
nop
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
call
movsbl
mov
push
xor
xor
cmp
mov
mov
je
mov
cmp
je
mov
mov
cmp
mov
je
mov
cmp
mov
je
mov
cmp
je
cmp
jae
push
mov
mov
imul
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
call
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
xor
push
push
cmp
push
mov
mov
je
movsbl
mov
xor
mov
cmp
mov
je
xor
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpl
ja
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
test
je
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
imul
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movzbl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
mov
mov
mov
mov
push
push
push
call
add
nop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
xor
mov
xor
lea
mov
rep
stos
xor
mov
movsbl
mov
mov
stos
mov
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
push
push
push
call
mov
lea
push
push
push
call
add
lea
lea
push
push
call
mov
push
push
push
call
add
lea
mov
push
push
call
mov
push
call
add
lea
lea
mov
push
push
call
lea
push
call
mov
push
lea
push
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
call
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
push
push
push
movl
call
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
push
push
push
movl
call
add
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
sub
push
mov
je
sub
je
dec
jne
mov
mov
cmp
jne
mov
and
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
rep
mov
mov
mov
cmp
jne
push
push
call
add
cmp
jne
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
jne
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
pop
pop
xor
pop
pop
ret
cmp
jne
push
push
call
cmp
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
cmp
jne
push
push
call
cmp
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
cmp
jne
push
push
call
cmp
jne
mov
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
push
call
test
jne
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
mov
and
cmp
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
cmp
jne
push
push
call
cmp
jne
mov
test
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
mov
test
je
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
cmp
jne
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
movl
xor
pop
pop
ret
mov
mov
cmp
jne
push
push
call
add
cmp
jne
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
cmpw
jne
push
push
call
cmp
jne
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
push
push
call
test
jne
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
xor
pop
pop
ret
call
call
mov
push
push
push
call
mov
add
xor
mov
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
mov
push
push
push
mov
call
mov
add
mov
push
mov
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
push
push
push
mov
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
push
push
push
call
xor
pop
pop
pop
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
push
call
pop
pop
xor
pop
pop
ret
push
mov
mov
call
movsbl
mov
mov
xor
push
mov
mov
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
movsbl
mov
mov
xor
push
mov
mov
xor
push
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
mov
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
push
push
push
push
call
mov
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
lea
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
cltd
sub
mov
mov
mov
add
cltd
sub
mov
sar
sar
sub
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
cltd
sub
mov
mov
mov
add
cltd
sub
sar
sar
sub
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
push
mov
push
mov
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
add
cmp
mov
jle
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
mov
call
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
xor
mov
cmp
setne
dec
and
push
push
call
add
inc
cmp
mov
jle
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
lea
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jne
push
push
call
test
je
push
push
call
test
je
push
push
call
test
jne
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
call
mov
test
jne
pop
pop
xor
pop
mov
pop
ret
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
push
push
push
mov
cmp
movl
je
cmp
jne
mov
test
jne
mov
test
je
push
call
test
je
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
jmp
mov
cmp
jne
test
jne
mov
test
je
mov
test
je
push
call
test
je
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
cmp
jne
test
jne
mov
test
je
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
cmp
jne
test
jne
mov
test
je
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
test
jne
mov
push
push
push
call
add
mov
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
cmp
jne
test
jne
mov
test
je
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
test
jne
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
push
call
test
jge
cmp
jne
xor
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
mov
mov
mov
test
mov
je
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
push
mov
mov
mov
push
push
rep
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
lea
push
push
call
add
test
je
mov
mov
mov
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
test
je
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
xor
test
jle
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
add
inc
cmp
jl
mov
mov
mov
push
call
test
jge
cmp
jne
mov
test
je
push
push
push
push
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
movl
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
mov
cmp
jle
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
xor
test
jle
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
inc
cmp
jl
mov
mov
cmp
jne
test
jne
mov
test
je
mov
test
jne
call
cmpl
jne
call
cmpl
jne
call
call
call
call
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
jne
mov
test
jne
push
push
push
push
call
pop
pop
pop
ret
push
push
push
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
rcr
neg
mov
clc
add
mov
clc
sub
pushf
shl
pusha
mov
movb
pusha
jmp
lea
mov
pusha
pushf
call
mov
jp
movzbl
not
push
mov
movsbw
repz
call
movw
mov
pushf
pushf
pushf
movb
lea
jmp
xchg
dec
movzbw
sbb
xor
neg
inc
neg
xor
bswap
or
lea
movzbl
movl
btc
sub
shl
sar
shl
rol
mov
pushf
shrd
mov
pop
cmc
lea
add
bswap
mov
rol
mov
push
mov
lea
stc
sub
bt
bswap
add
seto
call
pushl
jmp
mov
movb
lea
jmp
push
pushf
pusha
mov
push
movb
mov
pushf
pushl
mov
pushf
mov
push
pushl
pushf
mov
mov
pushl
call
push
mov
jmp
repz
popl
pushf
call
jmp
pop
insb
int3
int3
int3
int3
int3
int3
int3
jmp
pushl
popl
push
pushf
movb
push
lea
jmp
mov
call
mov
call
mov
mov
jmp
pushf
pushf
pushf
mov
pushl
pusha
movb
movb
lea
jmp
call
pushl
popl
push
movb
lea
jmp
pushl
popl
movzbw
push
push
movzbw
mov
setne
lea
dec
shl
btr
xor
rcl
bswap
sbb
bsr
cmc
lea
pushf
setb
inc
btr
sub
adc
mov
bsr
bsr
shr
mov
adc
call
push
rcl
ror
pusha
stc
adc
and
shld
and
mov
call
push
push
mov
jmp
mov
lea
jae
mov
call
pushf
popl
pushf
call
pusha
std
mov
call
jmp
call
pushf
popl
lea
jns
push
pushf
pushl
pushl
popl
pusha
push
lea
jmp
jmp
jmp
jmp
call
cld
jmp
dec
mov
and
sub
mov
push
call
pusha
pushf
mov
mov
movb
push
call
mov
pusha
mov
pushf
call
call
push
mov
stc
int3
int3
push
mov
mov
call
push
push
push
movl
movsbl
mov
xor
mov
movsbl
mov
xor
mov
cmpl
je
mov
cmpb
jne
cmpb
jne
movl
movl
cmpl
je
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
movl
movl
mov
jmp
jmp
pop
pop
pop
mov
pop
ret
int3
int3
jmp
sub
das
cmc
lea
adc
rcl
pushf
and
inc
sub
not
mov
pushf
lea
pushf
popl
pushf
xchg
xchg
push
lea
mov
call
cmp
add
call
mov
push
mov
movl
lea
jmp
mov
call
shld
adc
daa
mov
sbb
neg
xor
rcl
mov
clc
sbb
sar
pushf
mov
test
add
clc
shld
call
call
int3
int3
int3
int3
int3
int3
int3
jmp
pusha
movw
pushl
pusha
repz
popl
jmp
rol
not
rcl
shl
not
clc
inc
shrd
btr
sub
inc
movb
setge
movzbl
not
pusha
lea
bswap
inc
mov
pushf
pushf
pushl
dec
bt
add
pushf
mov
jmp
pusha
lea
js
push
jmp
pushl
pushf
popl
push
jmp
pusha
mov
jmp
pushf
call
mov
pushf
push
mov
mov
mov
call
lea
js
repz
push
jmp
jmp
pushf
mov
mov
push
mov
mov
mov
jmp
btc
sub
jne
sub
bswap
not
dec
bts
not
rol
shr
stc
xor
movsbw
shld
sbb
bsf
mov
jmp
pushf
pushf
popl
call
mov
pushl
lea
jmp
setnp
rol
bsf
xor
bt
ror
inc
mov
push
call
call
mov
call
pushl
call
sub
pusha
pushf
pushf
shl
jmp
jmp
jmp
call
inc
push
jmp
repz
popl
jmp
jmp
jmp
setge
mov
stc
cmc
pushf
movb
sub
jmp
movzbw
bt
test
bswap
mov
shld
shl
rol
mov
test
call
call
mov
clc
movb
add
push
lea
js
mov
push
pushf
lea
jmp
pushf
repz
popl
push
call
push
pusha
mov
jmp
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
call
mov
push
push
push
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
push
push
push
push
call
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
test
je
push
movl
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
push
call
add
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
bts
push
mov
add
clc
rol
mov
jmp
pushf
pushf
popl
pushl
call
pushf
popl
jmp
movb
pushl
pushf
popl
call
lea
jne
mov
push
pushl
pusha
pushf
lea
jmp
popl
push
push
lea
jmp
jbe
setno
inc
mov
inc
clc
mov
pusha
cmc
cmc
sub
clc
shr
call
jmp
iret
nop
nop
nop
nop
nop
jmp
aaa
das
aad
mov
shr
inc
bsr
stc
mov
stc
not
js
cmc
bt
not
test
test
call
push
mov
mov
lea
setg
push
xchg
mov
call
pusha
pushf
mov
pusha
lea
jmp
and
jmp
movw
call
cmp
shld
bswap
adc
movzww
jmp
call
call
push
call
lea
je
push
pushf
popl
jmp
bt
stc
clc
add
pusha
pushf
pushl
call
btr
rol
clc
mov
mov
jmp
pusha
pushf
popl
push
pushf
movb
pushl
popl
pushf
pushf
mov
lea
jmp
pushl
popl
push
pushl
push
pushf
lea
jmp
stc
sub
test
pushl
xchg
bt
sub
jg
sub
push
push
lea
ja
ror
test
jmp
call
pushl
popl
pushf
lea
jmp
mov
jmp
movzbl
push
jmp
call
nop
nop
jmp
pushf
pushf
popl
mov
jmp
push
call
mov
mov
cmp
xor
bt
movw
add
pusha
pushf
bt
rol
call
pushl
popf
mov
push
lea
jmp
pushl
mov
pushf
pushf
mov
mov
lea
jmp
movb
pushl
popl
movw
mov
movw
movb
lea
jmp
add
jmp
pushl
popl
movw
movw
movl
mov
lea
jmp
call
shrd
xor
rcl
mov
jmp
xor
call
xchg
aad
clc
mov
btc
sar
mov
pusha
cmp
jmp
call
pushf
jmp
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
push
call
mov
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
movl
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
mov
push
push
push
call
add
mov
sub
add
mov
sub
add
dec
mov
add
inc
lea
mov
sub
sub
add
lea
pop
pop
ret
nop
nop
nop
nop
jmp
pushf
mov
pusha
pusha
push
mov
lea
jmp
pusha
mov
pusha
pushf
push
lea
jmp
pushf
push
jmp
pushf
mov
push
call
mov
movb
mov
lea
jmp
jmp
xlat
aad
nop
nop
nop
nop
jmp
bt
sar
neg
das
mov
cmc
cmp
bswap
clc
push
xor
stc
cmp
cmp
call
pushf
sar
pushf
jmp
mov
mov
mov
push
mov
pushf
lea
jmp
pusha
push
mov
push
lea
jmp
dec
mov
jmp
cmp
cmc
cmp
add
clc
push
rol
call
stc
stc
jmp
pushf
test
push
sub
pusha
pushf
div
pushf
mov
jmp
jmp
mov
call
pusha
pushf
pushf
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
int3
jmp
pop
dec
add
adc
jne
adc
out
add
inc
inc
add
adc
out
adc
add
adc
lock
and
add
adc
cmp
adc
je
adc
add
adc
inc
add
adc
jmp
adc
out
add
sub
out
add
inc
inc
add
adc
out
add
mov
add
adc
fadds
adc
aam
adc
faddl
adc
dec
add
adc
inc
add
adc
repz
mov
add
jecxz
add
pop
add
adc
out
adc
jne
adc
adc
mov
adc
add
repz
in
repz
in
repz
xchg
add
adc
aam
adc
out
adc
adc
repz
pop
dec
add
adc
jmp
adc
aas
add
adc
aam
adc
faddl
adc
add
adc
mov
adc
out
add
and
lds
adc
repz
and
jmp
adc
aas
add
adc
add
adc
add
adc
mov
adc
add
adc
out
add
cwtl
lds
adc
out
adc
dec
add
adc
mov
adc
mov
adc
add
adc
in
add
mov
add
jecxz
add
and
adc
aas
add
adc
add
jecxz
add
into
aas
add
adc
mov
adc
add
adc
inc
add
adc
fadds
adc
inc
add
adc
inc
add
adc
adc
repz
and
adc
add
into
aas
add
adc
add
and
adc
add
adc
adc
faddl
adc
add
adc
faddl
adc
aas
add
adc
add
and
adc
add
adc
aam
adc
add
adc
add
adc
dec
add
adc
add
adc
aam
adc
add
adc
out
add
mov
add
xor
adc
jmp
add
in
repz
pop
dec
add
adc
cmp
adc
cmp
adc
add
iret
out
add
mov
adc
inc
add
adc
add
in
repz
inc
in
add
sbb
add
adc
repz
inc
in
add
int
add
adc
in
add
push
and
adc
add
jne
add
adc
jne
adc
add
push
out
add
inc
in
add
push
inc
add
adc
add
adc
and
adc
add
fucompp
add
inc
in
add
dec
fadds
adc
repz
dec
fadds
adc
add
adc
repz
call
mov
adc
out
adc
inc
add
adc
aas
add
adc
je
adc
adc
adc
aam
adc
ljmp
mov
add
adc
out
add
inc
jmp
adc
cmp
adc
aad
adc
add
bts
mov
stc
add
push
pusha
mov
lea
jl
pushf
mov
pushf
pusha
movb
lea
jmp
jmp
mov
mov
jmp
jmp
pushl
pushl
mov
pushl
pusha
lea
jmp
mov
movb
mov
jmp
pusha
mov
pusha
lea
jmp
rol
jmp
pusha
lea
pushl
mov
pop
mov
call
mov
call
call
dec
call
cmp
add
pusha
jmp
jmp
pushl
pushl
popl
push
lea
jmp
add
shld
clc
mov
lea
inc
bts
mov
push
pushf
add
mov
push
pushl
mov
mov
lea
jmp
pushf
mov
jmp
mov
pushf
pusha
lea
jmp
repz
popl
pushf
movl
movw
call
mov
rep
btc
movsbw
clc
mov
shrd
cmc
mov
jmp
adc
clc
mov
stc
mov
bsf
clc
add
stc
mov
bt
jl
push
cmp
sub
jmp
push
add
mov
pushl
mov
mov
push
pushf
pushl
lea
jmp
mov
pushl
lea
jmp
pusha
pusha
push
pushl
popl
pushf
mov
pushf
lea
jmp
call
setl
setnp
xor
mov
clc
bt
test
add
pusha
pushf
pushf
mov
pushf
pushl
push
lea
jmp
push
push
ror
bt
xor
movzbw
dec
btr
setae
ror
rcr
ror
shr
rcr
and
shl
cmc
shl
mov
push
call
rdtsc
mov
rcl
not
btc
rcr
mov
pushf
mov
cmc
bt
sub
stc
bt
mul
pusha
call
pusha
mov
pusha
pop
pushl
lea
xchg
pop
bswap
lea
inc
pushl
popl
push
movl
bswap
push
movzbw
mov
call
movb
sub
bt
pusha
bt
shr
pusha
lea
je
push
pusha
mov
pushf
jmp
pushf
push
mov
mov
movw
movb
movb
lea
jmp
call
pusha
idivl
movw
mov
push
pushf
mov
mov
mov
mov
push
jmp
stc
add
mov
test
add
lea
jp
pushf
pushf
mov
pusha
pushf
lea
jmp
jmp
bts
mov
shl
mov
call
stc
stc
bt
pushl
pushf
pusha
clc
add
cld
pushl
popf
pushf
lea
jmp
jmp
push
pushf
popl
jmp
sar
mov
test
mov
pusha
pushl
clc
clc
sub
clc
stc
push
shr
push
call
mov
pushl
popl
mov
pushf
movw
movb
lea
jmp
pushf
call
bsf
cmp
das
setae
mov
clc
stc
cmp
stc
add
push
pusha
pushf
pushf
mov
pushf
jmp
cbtw
clc
cmp
cwtl
test
cmp
sub
call
pushf
mov
mov
call
aad
adc
mov
shr
call
jmp
pusha
push
mov
mov
mov
pusha
movb
mov
call
mov
call
mov
pusha
mov
repz
popl
call
pusha
pushf
pushf
ror
test
sub
test
clc
cwtl
test
cmp
sub
call
pushf
call
jmp
pushl
popl
push
movl
pushl
lea
jmp
lea
jbe
mov
pushf
pushf
pusha
lea
jmp
movb
mov
mov
call
push
repz
popl
call
mov
pushl
movb
pushf
push
lea
jmp
xchg
bt
sub
cmp
push
sub
push
push
mov
xchg
jmp
movw
push
mov
call
pusha
mov
pushf
mov
call
shl
pusha
rcr
mov
push
bsf
mov
clc
call
cwtl
jmp
jmp
pushl
mov
call
pusha
pushf
pushf
popl
pushf
pushf
mov
pushl
popl
movb
mov
mov
pushf
lea
jmp
pushl
popl
mov
push
push
mov
lea
jmp
pushf
dec
cmp
xor
bt
stc
xor
call
jmp
cld
std
cld
movw
call
mov
mov
movb
lea
jmp
dec
jmp
mov
movb
lea
jns
pushf
call
call
mov
push
mov
pushf
pusha
call
pushf
mov
mov
movb
lea
jmp
sub
jmp
mov
pushf
pushl
movb
lea
jmp
mov
mov
mov
pusha
call
movsbw
jmp
push
push
push
mov
movl
mov
lea
jmp
sub
jmp
stc
jmp
mov
rol
setne
btc
mov
pushf
clc
pushl
sub
mov
movb
clc
mul
pushl
mov
pushf
mov
pusha
pushf
popl
pushf
pushl
popl
pushl
mov
lea
jmp
bt
sub
pushf
pushf
jmp
jmp
pushl
movw
mov
pushl
lea
jmp
call
repz
call
pushf
mov
mov
call
pushf
mov
pushf
pushf
repz
popl
pushl
mov
pushf
pushf
movb
push
lea
jmp
mov
call
mov
pusha
mov
jmp
pushf
not
pushf
popl
not
movsbw
movw
pushf
xchg
pop
mov
cld
mov
std
lea
lea
jmp
repz
popl
push
call
push
mov
pushf
lea
jmp
sar
ror
mov
movsbw
movzbw
shrd
add
bswap
adc
adc
sub
ror
rol
dec
mov
push
test
jmp
pushf
call
shl
movzbl
bsr
xor
bsr
dec
not
add
bts
pusha
rol
btc
not
bsr
rol
lea
inc
rcl
inc
pusha
add
rcl
bsf
shr
bt
xor
movw
ror
btc
mov
pushf
mov
stc
add
jmp
mov
mov
cmc
and
xor
rol
mov
pushf
adc
shl
rcr
mov
bt
add
movl
movw
shrd
jmp
xor
cmc
mov
call
push
movsbw
movzbw
jmp
pushl
popl
pushl
push
pushf
push
lea
jmp
pop
and
lods
aad
aaa
cmpsl
mov
inc
push
jecxz
pop
outsl
dec
mov
in
imull
pop
outsl
dec
mov
mov
movsl
pop
outsl
inc
mov
sti
mov
fcomps
outsl
data16
lea
mov
and
pop
mov
mov
jno
push
ss
mov
mov
inc
js
movsl
pop
mov
movsl
mov
xor
fisttpl
mov
mov
adc
pusha
int3
push
adc
pop
clc
nop
dec
sbbb
repz
push
push
adc
insl
fwait
std
push
push
cwtl
repz
push
movzwl
dec
push
sbb
jge
ljmp
in
cmc
push
sbb
pop
sub
push
sbb
sbb
cli
push
cmp
movsb
xchg
imul
cmp
cmp
cmp
hlt
or
push
cmp
mov
es
xchg
push
cmp
mov
enterw
cmp
jg
lcall
adc
fsubl
push
mov
ror
push
cmp
adc
push
push
pop
hlt
aad
pop
addr16
push
push
cmc
xor
dec
jl
js
push
imul
push
push
icebp
jae
inc
clc
jl
push
push
scas
mov
iret
adc
mov
sti
xchg
test
mov
es
push
push
hlt
xor
movsb
outsl
dec
stos
push
push
mov
sti
imul
je
adc
jle
push
push
pop
hlt
cld
movsl
ret
push
push
push
hlt
cli
mov
push
in
cli
call
push
mov
inc
lea
push
pop
xor
pop
shll
mov
clc
inc
and
xor
cmp
clc
fwait
push
cmp
xor
nop
mov
xor
in
sub
push
sbb
push
add
push
push
jecxz
divb
cmp
push
adc
mov
cmp
and
push
adc
xor
ja
sub
clc
aaa
icebp
xor
push
adc
and
adc
clc
xchg
iret
jnp
push
adc
jmp
mov
inc
push
adc
repz
adc
or
std
movsb
into
rcr
push
push
push
xor
std
fstps
xor
clc
xor
push
test
xor
clc
xorl
cmc
test
xor
push
bt
xor
pushf
pushl
popf
movb
pushl
ret
cli
sub
int
push
aaa
icebp
add
pop
add
jb
add
sbb
arpl
enter
inc
sarl
dec
int
jmp
push
sbb
and
push
fnstcw
add
int
insb
scas
pop
jecxz
ret
xchg
mov
push
aaa
push
or
repz
sarl
jo
dec
xor
loope
sub
clc
out
mov
inc
or
xor
cmc
push
aaa
sbb
cld
leave
jae
fwait
xchg
push
call
loope
inc
fmul
and
mov
push
out
jne
les
loopne
fwait
mov
aaa
stos
cltd
lahf
lret
stos
cmp
cmc
sub
cmp
popa
call
jmp
sub
sti
jns
pop
test
lea
mov
mov
pop
gs
lret
cltd
or
enter
stc
fcomps
out
add
sahf
pop
repz
iret
gs
or
in
nop
mov
pop
popf
das
push
add
pop
mov
jle
popl
dec
pop
jge
mov
mov
jge
sete
jno
es
in
nop
arpl
aas
cmp
pushf
add
jns
in
je
dec
and
les
js
push
xchg
sti
imul
outsb
cmp
icebp
inc
subl
or
mov
jb
inc
fld1
sbb
push
arpl
sub
pop
dec
loopne
aad
lret
push
dec
mov
into
subb
loopne
xchg
lods
clc
mov
adc
dec
std
pop
jmp
cwtl
shrb
cmp
outsl
adc
cmc
clc
gs
cltd
sarl
ss
enter
adc
xchg
es
xlat
movsl
nop
mov
fs
mov
ja
mov
xchg
shlb
xor
adc
insl
aas
seto
in
outsl
xchg
scas
into
push
adc
adc
sub
pop
imul
sub
aam
push
lahf
jnp
cmp
xchg
jne
stos
aam
fwait
jle
mov
cmc
filds
adc
mov
cmp
hlt
es
aaa
aad
xor
push
mov
popf
popf
and
inc
add
mov
aad
insl
repz
or
mov
and
cld
les
leave
inc
loopne
mov
mov
jae
xchg
mov
adc
and
cmp
insb
movsl
push
jg
stc
sbb
jl
test
imul
lcall
cli
dec
out
sbbl
push
dec
cmp
mov
mov
outsl
ret
dec
lcall
mov
push
dec
insl
push
cs
ds
xlat
cmpb
inc
jne
push
and
xchg
clc
adc
and
xchg
cmp
in
rorb
rcr
xchg
push
les
pop
cltd
mov
iret
pop
jp
push
pop
jnp
dec
fs
mov
mov
cs
mov
jge
inc
xor
ret
inc
sub
ljmp
ret
cmp
pop
insb
cwtl
sti
dec
xchg
enter
sbbl
repnz
mov
shrb
or
sbb
jle
je
pop
xchg
pop
jmp
mov
cmp
sbb
cmp
mov
sub
pop
mov
mov
jns
cltd
fcmovnbe
inc
int3
in
jmp
loope
push
push
shl
aas
in
xor
push
or
cmc
jb
adc
mov
mov
popa
push
mov
shll
nop
and
cmp
out
ffree
in
sbb
sbb
dec
xor
in
subl
arpl
inc
das
jg
sub
test
fs
mov
jp
lea
add
inc
pushl
mov
movl
mov
in
or
push
dec
lret
cmc
dec
inc
inc
push
in
out
ret
sbb
test
push
jno
mov
stos
pop
ds
cmpsl
cmpl
leave
js
mov
jo
lret
dec
mov
mov
adc
idivl
push
rcrb
dec
sub
ljmp
and
out
push
hlt
in
add
xchg
jmp
jg
sti
dec
lret
dec
sub
stos
lahf
sub
xchg
pusha
mov
push
pop
es
out
jge
sbb
popfw
pop
pop
enter
sbb
cmp
sarl
jmp
push
cld
mov
mov
xchg
ja
mov
mov
pop
or
jne
enter
pop
add
cmp
frstor
inc
ret
and
std
ds
or
das
push
push
or
lret
cmp
and
mov
xchg
mov
mov
dec
shll
xchg
inc
in
shll
lds
jle
jae
loopne
je
stos
lret
repz
pop
sbb
lret
shrl
je
gs
cmpsb
xchg
inc
lods
and
scas
push
imul
sub
fistpl
inc
call
cmpsb
icebp
lea
inc
cmovg
sub
cltd
dec
pop
or
push
jo
jae
repnz
ret
test
sahf
shll
addr16
xchg
mov
rclb
int
add
enter
and
mov
cli
push
xchg
adc
out
jno
hlt
out
sbb
xchg
jns
push
cli
pop
lds
mov
add
fcmovnbe
outsb
mov
out
or
fldt
sti
inc
stos
mov
adc
pop
mov
jns
mov
inc
mov
sbb
xchg
xchg
cltd
rcl
clc
icebp
mov
sbb
xchg
mov
push
cld
pop
lahf
cmc
xchg
push
popf
dec
shll
mov
scas
dec
imul
cmpsb
and
in
test
push
out
loop
jns
push
jl
add
and
call
js
fdivr
repnz
and
mov
ret
popa
adcb
test
lods
loop
sub
dec
lock
cmpsl
dec
out
jg
xchg
jle
push
xchg
jg
push
jecxz
movsl
jns
js
std
xchg
adc
add
das
sbb
out
adc
jge
ds
cltd
jbe
aad
and
dec
rcll
outsl
pop
sti
xor
pop
arpl
adc
frstor
jbe
dec
inc
cmp
incb
mov
pop
insb
mov
fadds
add
mov
scas
lock
jp
adc
xchg
sub
xchg
xchg
xchg
pushf
xchg
jmp
scas
pop
push
pushf
xor
add
sub
ds
scas
xchg
xorb
xchg
push
push
in
rol
jne
push
push
das
xor
mov
mov
push
pop
lock
out
lock
imul
mov
mul
in
iret
dec
test
dec
es
aas
cs
push
mov
incb
cmc
in
jne,pt
jge
xchg
outsb
je
cs
add
pop
stos
cltd
pop
bound
mov
jb
into
pusha
cld
sbb
adc
neg
loope
jl
fwait
out
icebp
out
adc
out
adc
pop
call
fdivrl
mov
out
pop
sahf
out
repnz
cmp
xchg
mov
cmp
mov
and
in
cmp
adc
dec
fidivrl
inc
frndint
sbb
mov
cs
cs
inc
lret
pop
cmp
lcall
push
bound
loopne
adc
lock
inc
test
dec
lods
lods
fstp
jo
inc
fcomps
mov
inc
fdivl
sbb
call
insl
add
push
mov
mov
mov
and
loop
lcall
adc
dec
out
lret
or
addr16
std
ret
iret
jae
enter
rclb
push
sbb
inc
push
jae
popf
gs
or
mov
divb
push
fisttps
adc
xor
xchg
out
jl
xor
or
stos
repnz
inc
push
and
mov
sub
sbb
adc
jo
popf
jl
divb
push
xor
jb
push
cmp
notrack
mov
xor
outsl
lcall
pop
popa
mov
orb
adc
cmp
mov
dec
fcomi
out
je
mov
inc
in
jl
pop
adc
sbb
jae
fwait
mov
xchg
out
mov
add
push
daa
add
scas
in
scas
sbb
enter
mov
cld
lret
into
mul
jnp
dec
pop
sub
lds
aaa
push
es
and
dec
aam
cwtl
dec
cmp
mov
mov
xor
int
xor
inc
fucom
call
jbe
adc
or
in
test
dec
out
fstl
cld
sbbl
out
es
sbb
sub
dec
or
mov
out
xor
or
jecxz
inc
cmp
mov
in
mov
data16
dec
mov
int3
cld
mov
jno
popf
mov
fadds
daa
das
sbb
cmpsb
das
push
jp
xchg
into
lods
jb
mov
lret
push
stc
xor
mov
leave
pop
cwtl
xchg
pop
or
xor
ja
icebp
jecxz
flds
xor
and
sub
dec
out
lds
sub
int3
incl
and
lods
xchg
adc
sub
fmuls
aaa
mov
fisubs
adcb
movsl
cmp
mov
aam
faddl
and
flds
pop
cmp
dec
xor
cmp
outsb
icebp
mov
pop
dec
bound
outsb
push
stos
outsl
add
add
movb
outsb
fadds
ja
jmp
pop
xor
mov
jg
mov
cmc
inc
int3
or
pop
jbe
mov
sbb
je
cmp
lcall
test
popa
jg
call
clc
fisubs
mov
fdivs
pop
mov
sahf
cmp
jo
mov
lcall
lods
xchg
sbb
js,pt
dec
sahf
xchg
cmp
mov
fwait
push
int
pop
push
jns
aaa
cld
xchg
fs
daa
into
jge
add
test
sbb
jo
add
je
inc
inc
mov
cmp
add
mov
mov
stos
repnz
adc
sbb
es
xor
dec
add
lahf
loop
mov
add
mov
push
dec
mov
aas
inc
xchg
adc
xlat
mov
sahf
aad
sarl
adc
sbbb
add
fisttpll
dec
fs
push
sub
pop
je
pop
jge
data16
lret
dec
mov
test
nop
sbb
xchg
jp
jle
hlt
cmpsb
xchg
stos
mov
insl
cmp
mov
xchg
fcompl
cmp
icebp
ljmp
std
sbb
ret
outsb
int
add
xchg
mov
add
pushf
lods
sti
faddl
je
aas
out
ror
push
dec
mov
icebp
fisubl
push
sub
fsubrs
gs
ss
test
xchg
in
movsl
xor
loop
jle
dec
add
pop
xchg
in
sub
sbb
popl
ror
loop
je
jg
xchg
fwait
adc
lahf
and
cmpsl
cmp
pop
mov
popa
jmp
and
adc
xchg
adc
ja
cmp
pop
adc
push
push
pusha
js
jae
xchg
push
jo
pop
pop
inc
in
jg
pop
testl
test
xor
cld
movl
dec
flds
xor
inc
push
repnz
sbb
outsl
mov
pop
stc
ljmp
cmp
mov
mov
pushf
mov
loopne
mov
loop
or
and
fidivs
mov
xchg
mov
jo
into
pop
and
pop
xchg
sub
scas
and
int
lds
hlt
mov
int3
pop
daa
clc
xchg
adc
fs
pop
add
lahf
call
leave
fs
lods
sub
pop
push
movsl
cmc
mull
jae
repnz
adc
dec
call
nop
scas
pop
cld
xchg
es
adc
mov
in
jno
pop
test
pushf
xchg
test
xchg
sahf
add
mov
push
adc
mov
mov
popf
aas
pop
or
scas
arpl
xchg
inc
xchg
mov
test
push
je
and
jmp
repz
fcomps
jnp
repz
xchg
sub
aaa
push
pushf
imul
leave
inc
int
sub
fistps
sub
sbb
repz
jo
adc
loop
out
adc
scas
mov
cmp
dec
imul
sub
mov
push
fstpl
cmpsl
iret
ret
xchg
in
push
push
repz
jecxz
mov
inc
mov
sub
test
imul
iret
pop
test
arpl
ljmp
add
insb
inc
cmp
in
mov
fidivs
ret
enter
mov
xchg
sbb
inc
cs
clc
out
cwtl
divb
push
jg
mov
icebp
adc
rolb
movl
pusha
jmp
movb
movl
pusha
pushf
movb
movl
lea
jmp
jmp
bt
xorl
cmp
xor
pushl
clc
xor
call
pusha
pushf
popl
cmp
call
int3
add
jge
dec
scas
scas
sub
jl
xor
cltd
das
ja
enter
mov
lcall
in
into
das
repz
sub
iret
scas
or
xor
arpl
cs
repz
cmp
pop
mov
test
in
scas
sub
cltd
mov
ror
jmp
mov
xchg
cmp
add
push
push
popa
push
inc
imul
or
rolb
arpl
inc
aad
shlb
mov
xor
mov
into
push
je
rcll
iret
and
popa
test
std
bound
pop
add
and
xchg
scas
scas
sub
in
mov
cwtl
sub
add
and
cmp
jmp
pop
jns
push
push
imul
mov
testl
jmp
cmc
jp
dec
fbld
xor
dec
leave
imul
cs
shll
loope
repz
sar
andl
jg
xchg
daa
sub
mov
cli
cwtl
and
xor
dec
idiv
shll
mov
daa
push
addb
jne
inc
stos
mov
xor
or
rcll
nop
and
cmpb
jp
xchg
xchg
fisubs
xor
xchg
sahf
jg
sti
push
mov
lret
lds
fadd
repnz
ss
sbb
andb
mov
arpl
icebp
jae
dec
int
dec
and
push
aaa
aas
sbb
push
mov
jmp
mov
in
mov
jle
pushf
mov
add
xchg
push
in
mov
ss
fdivs
sti
mov
lods
add
loopne
cmp
in
add
inc
lret
addr16
adc
mov
lret
ds
test
dec
fidivl
ret
fsubrs
fisubrs
sahf
imul
pop
xlat
adc
jle
pop
add
jnp
jg
pushf
lea
icebp
inc
movsl
scas
or
loop
dec
test
xor
mov
mov
jne
aaa
ret
inc
lds
push
and
icebp
subl
shlb
mov
lcall
sbb
xchg
or
ficomps
mov
push
in
mov
shlb
mov
loop
adc
dec
cmp
sbb
sub
sbb
lret
adc
insl
pusha
ret
hlt
fwait
push
xor
lahf
les
stos
jp
dec
fstps
imulb
inc
mov
push
outsb
or
mov
fisttpll
mov
push
jae
lahf
mov
in
mov
xchg
add
dec
sub
push
lret
rcl
adc
jge
mov
fisubrs
sbb
std
lds
dec
mov
arpl
imul
pop
mov
dec
sub
scas
popa
and
mov
push
sub
mov
ljmp
popa
js
xchg
pop
dec
cmp
sbb
addr16
imul
repz
ret
add
testl
add
lret
inc
lret
cmc
sub
adc
pop
daa
testl
in
cmpl
stos
mov
xlat
in
popa
addb
mov
dec
xor
les
xchg
inc
ficoms
sarl
aas
mov
and
or
add
movsl
ja
dec
sub
xor
or
mov
push
adc
les
and
jns
subl
mov
xchg
xlat
push
xchg
and
xchg
sub
shll
pop
rclb
jle
stos
xchg
fisubl
es
push
xchg
stos
mov
data16
jne
outsl
into
loope
call
add
jmp
je
and
loop
cmp
lret
popf
inc
hlt
ficoml
push
sbb
sahf
mov
push
dec
xor
sbb
fnsave
sbb
cmp
inc
sbb
push
arpl
and
pop
sub
stos
notb
adc
stos
imul
shll
out
ja
mov
cmpsl
clc
sub
test
xchg
ret
outsl
in
js
popf
mov
sbb
and
int3
test
aad
ds
push
test
xchg
leave
mov
flds
sbb
sarb
jo
lds
es
cwtl
add
jge
xchg
movsl
repnz
mov
jb
mov
sbb
aad
movsl
int3
cmc
lahf
dec
sub
popa
mov
add
pop
test
push
lret
test
pusha
mov
cltd
call
movsl
adc
adc
loop
inc
loopne
jp
sbb
xchg
arpl
addb
xchg
sub
movsl
pop
pop
jg
aas
les
dec
and
push
out
xchg
xor
xlat
gs
xor
inc
sbb
frstor
in
and
jae
scas
adc
sbb
cmpsb
dec
pop
loopne
movsb
into
frstor
in
adc
jg
les
lahf
pusha
cs
jne
sub
imul
scas
sbb
insb
ljmp
mov
mov
shl
cwtl
leave
or
addr16
test
pop
ret
sbb
stos
test
jne
jp
sbb
push
rorl
pop
cs
dec
sbb
push
push
lods
ret
fmull
aam
lahf
jl
mov
cltd
cmp
out
and
jg
test
insb
icebp
cs
out
fs
mov
jecxz
dec
mov
adc
sbb
aaa
insb
ja
popf
daa
imul
add
and
fs
mul
scas
add
loopne
ret
jbe
mov
lret
imul
xor
push
mov
sarl
add
ja
add
insb
mov
push
jmp
pop
add
pop
mov
inc
leave
push
xchg
and
mov
push
test
lods
add
dec
xor
pop
into
lea
cmp
jne
das
push
shlb
lods
pop
lahf
mov
pop
pop
repz
sub
lret
out
aad
add
enter
mov
pushf
repz
jge
call
pop
xor
jmp
insb
call
dec
jg
jecxz
mov
lcall
sbb
jno
mul
xchg
xor
aaa
in
add
dec
outsb
mov
lret
mov
adc
push
data16
push
adcl
clc
scas
sbbl
call
ficomps
scas
jge
shll
jnp
out
repnz
movsl
pop
popa
icebp
ja
push
sti
insl
or
jmp
mov
mov
push
mov
sbb
addr16
out
pop
cmpl
je
adc
xchg
add
xchg
iret
sbb
cmp
add
insl
jge
and
icebp
in
pop
jle
cmpl
pop
jbe
imul
stos
mov
neg
popa
xchg
leave
adc
enter
pop
xchg
outsl
xchg
nop
and
jno
fisttps
mov
sar
mov
faddl
hlt
xchg
sub
xor
addb
repz
dec
outsl
out
in
push
jge
ljmp
pusha
xchg
fldl
mov
inc
jae
sub
push
add
inc
mov
inc
nop
movsl
outsb
addl
xor
sarl
int3
push
xchg
and
fcmovnb
lods
jo
mov
imul
inc
add
mov
sbb
push
cli
jl
arpl
sbb
push
xor
mov
test
loope
or
push
out
shrl
xlat
mov
sub
cwtl
push
in
xchg
push
or
pop
fisubs
in
bound
test
roll
inc
pop
adc
ret
jecxz
sbb
push
pop
add
add
test
mov
xchg
sub
jge
cld
inc
loop
mov
xchg
jg
iret
pop
clc
pushf
insb
add
sbb
add
inc
dec
sti
adc
mov
jbe
dec
sbb
or
push
stos
xchg
mov
daa
and
xchg
sub
imul
inc
or
dec
sbb
mov
dec
and
fidivl
in
mov
hlt
pop
int3
pop
je
pop
inc
fs
lahf
xor
rcll
aaa
dec
test
sub
pop
bt
pushl
popf
push
pushl
ret
pushf
popl
pushf
clc
xor
cmp
xor
pushf
xor
cmc
xor
cmc
mov
xor
jmp
xor
pushf
bt
xorl
clc
xor
test
xor
jmp
test
sbb
push
sub
das
jae
add
testl
decl
pop
or
movsl
lret
jle
cs
push
dec
dec
jns
mov
loop
rep
pop
mov
mov
gs
aaa
mov
sarb
and
imul
sbb
lds
lahf
sbb
dec
out
pop
add
outsb
dec
xchg
popa
xor
fisubrs
pop
sahf
jmp
and
les
cmp
fidivl
push
test
jae
inc
inc
int3
add
dec
pop
shrb
inc
ret
add
insb
mov
jae
sbb
imul
cmpsb
sahf
lods
mov
fisubs
sbb
ret
insl
xor
iret
cmp
and
popa
sti
jge
les
sub
mov
dec
or
in
cli
lds
add
push
xor
mov
fcmovnbe
jl
push
and
mov
push
sub
shrb
aaa
inc
push
fwait
mov
inc
popa
stos
inc
fwait
outsb
repnz
xchg
xchg
sub
stos
jns
xor
or
sbb
imul
sbb
and
enter
or
sbb
imul
cld
cmpsl
add
stos
push
cmp
leave
adc
xor
push
out
cmp
fs
sbb
mov
xlat
mov
jge
mov
shll
outsb
out
std
scas
cmpsb
mov
nop
daa
dec
mov
mov
fs
cmpsb
popa
es
ljmp
loope
xlat
imul
fwait
outsb
insl
iret
xchg
sbb
inc
cmc
loopne
call
xor
nop
jne
movsl
inc
jnp
or
jns
add
dec
sub
jae
fs
fs
rcll
pushf
out
insl
push
push
into
cltd
add
xor
jp
sub
sbb
movl
fstps
inc
xchg
ficoml
or
fstps
or
jcxz
adc
push
es
adcb
or
loope
mov
cmp
sub
pop
cmpsb
inc
mov
or
insb
push
sbb
push
sbb
xchg
ficoml
sbb
cmp
out
sbb
mov
mov
jle
pop
adc
sahf
cmp
inc
lcall
pusha
xchg
dec
or
push
jo
jg
enter
iret
jmp
xlat
ljmp
xor
push
mov
pop
lcall
loope
in
insl
jb
push
mov
es
stos
and
sbb
and
outsb
mov
ds
cmp
push
pop
iret
mov
mov
out
inc
adc
jp
cmpsb
and
pop
adc
sti
mov
jge
jle
push
enter
xchg
cmpsl
or
mov
dec
imul
out
pop
inc
js
inc
fcoms
mov
adc
jb
push
jo
pop
dec
fimuls
mov
push
out
xchg
out
pushf
xor
mov
test
or
push
ds
imul
jmp
pop
decl
mov
leave
ficoml
pusha
sbb
and
sub
mov
in
xor
inc
cmp
push
daa
push
sahf
pop
popf
insb
arpl
popf
pop
out
cmp
rcrl
les
pop
xadd
cwtl
fs
repnz
aam
pop
divl
push
dec
mov
movsl
pop
push
rcrb
mov
push
bnd
enter
mov
rcrl
cld
cmc
cltd
cmp
out
int
inc
bound
adc
test
mov
cltd
inc
fld
dec
add
mov
outsl
pop
jmp
sarb
or
push
movsl
in
adc
sbb
dec
mov
cs
adcb
lods
out
mov
insb
loope
repnz
in
and
je
inc
js
data16
mov
pusha
pop
pop
push
into
dec
test
pop
in
sub
or
or
and
pop
loope
mov
inc
lcall
xchg
dec
adc
cli
imul
dec
sub
mov
adc
lods
pop
fnstsw
mov
es
inc
in
mov
int
jp
test
cltd
push
imul
movsl
sbb
lcall
in
fdiv
add
stos
rol
rorl
ror
sbb
add
aam
inc
xor
fcmovnu
xrelease
inc
sbb
rclb
ficompl
sub
inc
icebp
jmp
add
xlat
pop
xor
pop
sbb
jae
movsl
fldl
stos
pushf
push
sahf
dec
dec
dec
add
jle
or
movl
fdivrl
jne
xchg
cmp
push
mov
push
jmp
shlb
push
shll
jne
sbb
or
andl
jp
leave
fwait
sti
cmpsl
cmp
pop
mov
test
xor
jmp
lret
mov
mov
inc
xchg
jnp
fisubl
dec
push
lds
push
rol
mov
or
adc
mov
inc
mov
shll
pop
mov
stos
mov
xlat
mov
sbb
or
or
pop
xlat
inc
sub
popf
into
add
jno
outsb
out
outsb
mov
mov
mov
arpl
mov
test
lock
or
jge
add
ret
loop
rcll
xor
sbb
sub
mov
int
jb
sbb
pop
or
sub
jb
dec
out
test
pop
cmp
mov
fidivl
sahf
cmp
decl
mov
jo
adc
mov
cltd
loopne
int
mov
icebp
pop
popa
rcr
shl
into
xchg
xor
mov
std
xor
push
adc
push
mov
pushf
push
loope
fwait
xchg
adc
incb
iret
mov
insb
xchg
sbb
dec
lods
push
xchg
mov
scas
cmp
int3
es
movsl
dec
out
sbb
xor
cs
jmp
rcrb
mov
jmp
out
in
mov
daa
mov
or
or
imul
xchg
xchg
mov
shr
add
or
fs
pop
icebp
mov
adc
clc
ja
pop
ficomps
aam
push
pop
addr16
fisubs
sub
mov
jae
jmp
std
sbb
in
inc
sub
add
test
dec
jecxz
sub
movsl
lods
push
ljmp
jo
test
jae
xrelease
scas
dec
aam
mov
sahf
mov
cmp
add
fcoms
push
cmc
pavgw
int
or
xchg
sbb
fdivs
xor
sbb
aam
mov
xchg
lgs
sub
shl
call
int3
pop
ret
in
test
fmuls
dec
fwait
dec
inc
movsb
add
cli
jg
push
xchg
or
lret
xor
sbbb
icebp
dec
cmp
sub
and
ss
push
push
icebp
fcmovnb
xor
push
mov
insl
jno
dec
adc
push
int
jp
cmc
and
jp
repz
call
les
hlt
jbe
pop
sbb
lds
sbb
pop
dec
cmp
std
xchg
and
int3
push
mov
or
add
test
dec
sbb
mov
arpl
cmp
push
dec
dec
dec
mov
dec
rcrb
mov
jo
fcmovnb
out
push
inc
pop
and
test
sub
mov
testb
pusha
pop
pop
out
in
arpl
jge
loope
push
cmp
or
repz
mov
imul
lds
ss
jae
andb
mov
into
in
adc
mov
xchg
adc
xor
push
insb
jg
mov
insb
icebp
ret
mov
push
jo
sub
mov
jp
pop
lods
fimuls
inc
cmc
popf
adc
jl
inc
inc
add
push
inc
lods
enter
roll
fidivrs
out
aad
daa
in
aas
cld
mov
cmp
mov
xchg
push
sbb
mov
add
adc
gs
xrelease
dec
inc
xor
xchg
pop
add
or
aam
dec
push
pop
adc
mov
mov
icebp
jo
or
cmpsl
rolb
pop
mov
daa
stc
icebp
sti
in
sub
jb
mov
adc
rcrb
negb
mov
clc
mov
mov
push
test
and
arpl
sub
cld
inc
dec
inc
mov
fmuls
inc
xor
mov
insb
js
clc
std
dec
lds
roll
je
or
add
pop
push
sub
push
in
in
mov
push
sub
loope
or
inc
fstl
xor
out
jns
movsb
jbe
sbb
stos
adcl
xchg
pop
pop
mov
pushf
movl
pushf
pushf
mov
lea
jmp
call
pusha
pushf
popl
cmc
push
xorl
stc
push
xor
pusha
clc
xor
push
bt
xor
bt
pushf
xor
cmc
call
movl
movb
pusha
pushf
lea
jmp
sub
es
sbb
mov
sub
or
lods
std
pop
mov
cvtps2pd
push
xchg
mov
iret
repz
gs
mov
pop
sarl
jmp
mov
ret
js
fxch
dec
or
mov
andl
xchg
xor
imul
inc
jle
imul
cmp
hlt
fnstcw
or
fsubrl
push
fwait
int
imul
jbe
xor
jb
push
outsl
cmp
sbb
jns
pop
mov
push
or
or
fbld
sti
popf
shlb
add
daa
aam
push
mov
lcall
xor
mov
adc
jo
arpl
lcall
sbb
imul
xchg
push
inc
lret
sahf
aaa
loop
into
stos
jmp
fimull
inc
icebp
xchg
stos
pop
popa
rcl
cmpsl
cs
lret
in
sbb
hlt
js
pop
lea
lcall
sub
xchg
les
fldt
loope
sub
cld
push
in
sti
sahf
cmp
mov
inc
jae
sbb
push
or
pop
mov
mov
movsl
mov
and
xorl
mov
fwait
int
adc
sbb
pop
xor
xchg
push
insb
jne
mov
dec
shrb
inc
lcall
mov
in
hlt
jp
popa
add
fimuls
mov
gs
punpcklwd
addr16
shll
addb
jbe
pusha
xchg
or
inc
sarb
test
mov
push
rclb
ret
div
xor
jge
scas
pushl
popf
mov
pushl
ret
pushf
bt
xor
jmp
push
pusha
pusha
movl
mov
jmp
pushf
pushf
mov
pushf
movl
jmp
jmp
call
pusha
movl
pushf
pushf
pusha
movl
push
pushf
mov
movb
lea
jmp
xchg
adc
int3
imul
jle
daa
jp
adc
push
insl
mov
subb
out
cmp
sbb
and
in
push
rsm
cmp
popf
gs
sub
ret
mov
fldenv
push
fwait
das
push
shll
aad
icebp
xchg
rolb
test
cmc
popf
jge
loopne
push
jmp
xor
mov
pop
xchg
test
int3
add
loop
stc
call
mov
addl
jne
stc
xor
rclb
adc
push
fwait
imul
push
scas
push
cmp
lock
jne
fists
adc
jns
push
test
pop
cmp
insb
push
fs
loop
test
mov
je
loop
jge
ret
xchg
and
mov
shrb
dec
pop
xlat
ret
inc
xchg
sub
ljmp
sub
fsub
ret
cmp
imul
je
xchg
int3
addr16
mov
inc
mov
out
sbb
test
push
ljmp
test
movsl
out
adc
mov
mov
int3
inc
call
add
mov
nop
pop
insb
sbb
push
pushf
xchg
mov
fisubrs
adc
add
mov
xorb
sarl
hlt
mulb
loop
sub
jo
out
inc
enter
cmp
negb
sbb
mov
adc
mov
lock
daa
repz
pushf
mov
pop
mov
jg
mov
test
sub
sub
dec
sbb
pusha
arpl
cmovne
test
pusha
push
jne
popa
mov
ret
push
lcall
and
sbb
push
lret
pop
out
mov
stc
into
out
rorb
lret
inc
inc
xchg
xchg
mov
loopne
xor
adc
and
dec
sbb
shlb
divb
repz
in
fistpll
ss
sub
push
cltd
stos
or
inc
mov
pop
jecxz
pop
sbb
push
or
dec
icebp
out
cmp
call
divb
test
repnz
jp
shll
shl
mov
inc
ret
cmpsb
out
jle
fcmovnb
jno
cmp
cli
test
clc
mov
outsl
adc
and
shl
into
jmp
pop
or
movsl
ret
or
adc
lret
add
xchg
in
mov
sbbb
sub
push
out
shlb
and
inc
add
mov
mov
sbb
dec
movb
pop
or
ja
and
in
and
push
ljmp
bound
int
test
push
outsl
pop
js
lret
inc
out
imul
push
xor
cli
lds
sahf
jno
and
xor
loope
sub
je
xor
or
add
popf
pushl
pushl
ret
pushf
pushf
popl
cmp
test
xor
pushf
xor
push
pushf
xor
pushf
xor
mov
xorl
mov
call
call
pushf
movw
pusha
movl
push
movl
pushf
pusha
pushf
mov
lea
jmp
lcall
mov
outsl
gs
inc
rclb
scas
sarl
ja
rcll
cmp
jl
shr
inc
push
xchg
fxch
cmc
aad
addr16
dec
fdivl
xor
sub
add
sbb
push
pop
xchg
mov
out
fdivl
mov
lods
dec
in
lea
movsb
mov
xchg
and
pop
add
sbb
xchg
sbb
pop
test
cmp
out
cld
push
call
jne
ret
or
dec
jae
mov
movsb
inc
jl
shl
fisttpl
cltd
dec
xor
and
dec
insb
mov
mov
cmp
cmpl
and
cmp
movsl
push
out
jno
and
repnz
and
xor
lods
movsb
test
test
add
mov
imul
inc
dec
xchg
adc
in
cmp
insl
ljmp
insb
arpl
fistpll
je
pop
xor
jae
stos
sub
into
push
mov
mov
sbb
rcll
aas
sbb
jne
sub
ret
adc
dec
ror
xor
mov
mov
notl
push
fmuls
ja
sub
sbb
gs
mov
das
mov
lcall
push
rolb
pushf
xchg
popf
aad
xchg
popa
and
test
rcll
sub
dec
xchg
sub
jp
test
or
loop
ss
add
pop
lods
jb
mov
xchg
push
mov
loop
push
bnd
jecxz
ret
and
out
mov
xor
mov
leave
inc
push
pushw
mov
in
or
or
push
imul
push
lods
push
xorl
into
xchg
xor
enter
jbe
cmc
in
faddl
jmp
pop
cmpsb
mov
mov
loope
movb
xchg
mov
or
or
and
xor
call
aam
xor
js
mov
ja
into
mov
dec
jmp
inc
stos
inc
ret
inc
ret
adc
dec
ret
mov
adcb
fimuls
sub
daa
mov
out
cmp
xor
hlt
in
mov
adc
sahf
mov
xor
fsubrl
add
sub
xchg
sbb
cmp
mov
xchg
xchg
fstps
cmp
test
ret
int
jne
outsb
rolb
loopne
cmp
pop
decb
xchg
inc
xor
leave
mov
mov
ss
jbe,pt
add
xchg
jge
inc
je
xchg
jnp
fnstenv
insb
mov
adc
repnz
jmp
popa
je
jbe
xor
pushf
pop
je
or
out
cmp
loop
and
push
stc
cs
stc
xor
mov
out
stos
push
stos
lds
nop
pop
sbb
add
dec
push
daa
and
insl
loopne
xchg
pushf
jnp
pop
out
loop
fwait
pushf
pop
push
pusha
push
cmpsb
dec
rcrl
xchg
jae
inc
sub
stos
xor
cmp
adc
push
call
mov
movsb
pushf
sahf
xchg
and
pop
int3
pushf
push
push
je
stc
cmpsb
cmp
mov
sbb
jge
sbb
in
ss
hlt
data16
testb
xchg
dec
pop
mov
aam
sbb
pushf
lea
jno
jge
into
push
cmp
jnp
jnp
rclb
repnz
in
gs
adc
nop
addr16
iret
clc
jecxz
cmp
lock
jl
mov
pop
dec
inc
mov
add
insb
xchg
or
xlat
sti
ds
sbb
lock
movsb
loopne
sarb
lods
cmp
into
outsb
xchg
cmc
in
add
cmp
cmp
and
leave
insb
cld
mov
lods
rcll
ds
aaa
loopne
push
add
xlat
cmpsb
push
xor
push
stos
mov
sub
aaa
mov
loop
push
xor
and
mov
cld
sub
popf
fisubrs
adc
mov
xchg
xchg
out
push
xlat
and
into
jnp
jo
lahf
jb
outsb
adc
popf
dec
push
cld
dec
out
adc
xchg
inc
stc
test
arpl
jle
push
je
mov
xlat
pop
xlat
xor
dec
cwtl
dec
xchg
je
aad
jns
fistl
je
data16
push
lds
mov
sbb
push
cmp
mov
mov
xchg
jae
mov
mov
aam
dec
popfw
lret
sbb
daa
int
adc
xchg
shl
repz
icebp
jne
xchg
and
pushf
mov
repnz
mov
lahf
push
mov
push
mov
xchg
sbb
pusha
loopne
mov
or
cs
dec
push
sti
or
stos
mov
xchg
mov
dec
subl
push
jle
rorb
stos
stc
mov
lcall
mov
sti
or
or
cmp
mull
or
out
fimuls
push
and
pcmpeqd
lods
cld
xchg
adc
jnp
cmpsb
cs
pop
ja
jecxz
mov
add
test
lods
ja
movsl
adc
xchg
nop
outsl
fprem1
jbe
dec
out
xor
fidivl
das
mov
out
int
outsl
mull
and
pop
fisttpl
inc
mov
out
and
imulb
fprem
leave
repnz
sub
xchg
andb
mov
sbb
movsl
pop
dec
clc
inc
rcll
add
jb
push
pop
push
pusha
cmpsb
imul
push
and
fwait
jecxz
push
lds
mov
daa
push
fistl
fsubs
pop
pop
rcrb
stos
enter
dec
or
xor
push
fwait
inc
inc
lret
mov
sub
fisubrl
mov
sbb
adcb
and
jne
cli
inc
test
test
fs
clc
div
aas
xor
ficoml
lock
loop
dec
adc
lods
adc
mov
add
jns
imul
adc
push
fldl
loopne
or
or
mov
xchg
mov
adc
das
dec
addr16
divl
adc
outsb
gs
sub
push
sbb
shr
jno
cmp
dec
pop
xchg
mov
mov
arpl
lods
lret
test
lcall
xor
adc
ja
cs
andl
bnd
push
in
sbb
or
ja
mov
es
push
push
fisttpll
inc
das
dec
cmp
inc
inc
inc
mov
mov
js
push
xchg
push
sti
outsl
pusha
jl
jno
mov
jb
mov
scas
popf
sar
jge
inc
jmp
cwtl
push
inc
sbb
sbb
mov
and
popa
gs
push
and
aad
fiadds
push
mov
js
xchg
mov
lahf
mov
mov
adc
sub
fldt
sub
or
adc
jp
imul
pop
stc
popa
hlt
pop
pop
out
inc
fwait
or
lret
jb
out
jno
add
xchg
imul
adc
jge
xorl
adc
cwtl
inc
test
pop
in
and
dec
xlat
aam
cmc
test
outsl
adc
pop
scas
popf
or
push
pop
stos
jbe,pn
xchg
pop
test
mov
inc
xor
adc
imul
push
cmp
flds
imul
outsb
mov
fcompl
sub
jae
sbb
mov
cltd
pop
pop
pop
jo
push
jnp
pop
ret
aad
lahf
cs
call
out
cltd
cmp
mov
arpl
add
loopne
repnz
ss
xchg
incb
jne
aad
outsl
add
xor
cltd
in
adc
xor
lea
cmp
xor
cmp
jo
lds
sub
xor
push
dec
in
or
add
inc
mov
adc
inc
aas
mov
sub
out
pop
mov
imul
sbb
fbld
mov
inc
fs
mov
lock
cmpsb
repz
jmp
xchg
bound
mov
xor
mov
jg
mov
cld
pop
add
inc
xlat
leave
push
pushf
popl
pushf
pushf
xor
jmp
pushf
pushf
popl
cmp
xor
call
add
adc
js
and
cli
inc
aad
rolb
mov
les
push
addl
stc
xlat
sahf
mov
pusha
scas
push
push
xchg
push
pop
out
add
dec
loope
pop
bound
mov
loopw
xor
push
call
setno
push
and
push
aam
push
insl
and
imul
mov
cld
out
mov
xchg
sbb
loopne
dec
in
loopne
pop
xchg
push
sub
or
pop
ds
xchg
ljmp
inc
imul
orl
mov
mov
push
decl
push
cmp
push
cmpsb
mov
push
jecxz
push
test
xor
cmp
adc
xchg
out
add
sub
dec
rcrl
adc
shlb
js
test
clc
or
inc
fiaddl
stos
dec
push
xor
bound
insb
jmp
inc
jecxz
mov
push
push
pop
mov
jl
push
sahf
push
jle
mov
ja
ljmp
rorb
ja
push
frstor
mov
mov
loope
pushf
push
shrb
aam
cmp
loopne
fbstp
inc
scas
div
adc
das
cli
out
popa
or
movsb
out
add
movsb
loop
shll
xchg
es
aaa
test
mov
inc
ret
or
inc
lcall
mov
mov
pusha
andl
push
into
jp
cmovbe
aam
jns
sbb
cs
jmp
leave
pop
or
jnp
xor
movsb
push
cltd
jg
scas
jp
in
in
cmp
inc
cwtl
dec
add
mov
dec
push
ds
xchg
mov
xchg
and
in
imul
and
ret
xchg
insb
inc
inc
outsl
push
xor
loopne
out
jb
popf
or
gs
inc
cmp
push
das
fcomi
xor
push
or
test
popa
rcrb
and
shr
popf
roll
icebp
inc
lcall
sbb
test
fmuls
mov
imul
pop
mov
cmovle
clc
insb
scas
das
sub
push
xor
dec
cmp
push
xchg
rcrl
xor
test
into
insl
jp
aad
js
out
inc
inc
es
sub
dec
xlat
stc
movsb
inc
pop
daa
rolb
das
aad
adc
out
push
push
xchg
adc
popf
adc
bound
ret
aam
and
mov
das
mov
xor
xor
dec
rorl
mov
mov
roll
jns
mov
mov
mov
mov
sbb
ret
dec
xchg
xor
mov
jg
mov
icebp
lea
sub
pop
lea
stos
xchg
int
lods
lods
sbb
mov
inc
cld
mov
sti
dec
or
sub
xor
push
ficompl
sub
inc
inc
xlat
and
xor
cld
inc
lds
mov
adc
popf
lcall
mov
aam
shll
icebp
dec
inc
aad
je
loopne,pt
xlat
mov
daa
lcall
out
fsubl
ret
dec
pop
jae
mov
and
mov
pop
mov
into
ret
jg
jns
ficompl
cmpsb
and
sbb
data16
pop
call
push
jne
out
cmp
je
lods
mov
sub
aam
loop
sub
lea
mull
cmp
sub
jb
shl
pop
jns
cmpsl
sub
clc
test
insl
ljmp
jle
mov
mov
mov
push
cld
aaa
test
call
punpcklwd
jl
dec
and
sbb
jecxz
jp
popf
inc
jbe
sbb
lods
xchg
sti
adc
in
lds
movsl
insl
cmp
loop
divb
iret
cli
movl
push
pushf
pushl
jmp
xchg
adc
imul
and
sub
xor
adc
andl
dec
adc
mov
test
je
push
std
dec
push
ss
add
faddl
sub
fwait
or
aas
cmp
dec
sub
out
inc
add
and
cmpsl
jmp
mov
shlb
daa
lcall
shll
sbb
push
pop
int
dec
push
mov
inc
cmpsb
rcrb
or
je
xor
or
and
ds
out
movsl
xor
subb
mov
and
test
outsb
scas
cmp
orl
add
out
jl
add
cmp
das
aad
cmp
aam
loopne
test
cmpsb
xchg
in
jecxz
aas
notb
mov
push
jle
out
jnp
psubw
add
xchg
push
mov
pop
sbb
inc
pushf
jmp
aad
pushf
sti
shrb
aad
xchg
pop
movsl
cs
lds
pop
in
lret
pop
sub
or
pop
bound
in
push
jne
fwait
sahf
mov
and
jnp
cmpsl
dec
jnp
dec
jmp
mov
pop
repz
push
jge
inc
out
sub
ret
sub
xor
mov
leave
popf
js
pop
in
mov
cld
divb
popa
lahf
mov
dec
and
pushf
popl
clc
xor
bt
xor
cmc
stc
xor
stc
xor
pushl
push
xor
cmc
call
adc
je
and
in
push
mov
insl
das
xor
sub
dec
mov
push
mov
pop
aam
cld
jle
fisttpll
lods
pop
call
cmp
jae
cmp
fdivr
out
int3
pop
mov
hlt
cwtl
cmp
in
mov
repz
mov
in
sub
sub
mov
dec
or
jbe
int3
cmc
imul
xchg
fiadds
shl
pop
mov
ret
icebp
iret
ret
popf
arpl
xchg
sub
jg
sub
mov
add
add
pop
call
shl
pop
test
xchg
ret
dec
hlt
ret
mov
add
mov
in
dec
xchg
xor
xchg
lahf
mov
aaa
fisubrl
mov
mov
shrl
push
into
push
mov
sbb
xchg
test
or
dec
insl
ss
mov
dec
sbbb
test
or
lret
fcmovnbe
push
popf
add
bound
lds
mov
scas
dec
xor
stos
sbb
lsl
mov
cwtl
mov
push
cli
mov
jmp
mov
bound
sub
int
lods
xchg
inc
leave
call
out
mov
sub
stos
xlat
xor
cmpl
push
mov
clc
mov
popa
testl
sarb
jbe
adc
push
rorb
popf
sub
mov
cli
fisubs
test
mov
push
ret
int
push
adc
jge
ret
and
dec
jmp
mov
subb
push
inc
jg
jmp
imul
push
test
test
pop
push
sub
pop
pop
mov
push
clc
imul
push
lret
mov
pop
es
divb
addl
leave
xor
and
jl
fidivl
test
cld
jge
push
in
iret
jae
sub
leave
imul
es
popf
dec
lahf
mov
fnstenv
imul
cmpsb
and
mov
pop
fsubrl
xchg
adc
or
pop
out
ss
inc
aas
add
outsb
or
xor
jbe
les
out
loop
fldenv
push
jns
jecxz
xorl
es
inc
ret
pusha
mov
popa
mov
pop
cli
and
mov
inc
xchg
adc
pop
sbb
test
jbe
enter
inc
mov
mov
push
dec
cs
pop
pop
out
mov
jp
push
mov
sbb
gs
mov
stos
insb
mov
call
xor
dec
cmp
test
fisubrs
xchg
pusha
int3
call
cmc
and
in
fisubrl
stc
add
dec
fstp
and
aas
push
add
arpl
add
pusha
sub
push
cmp
cmc
jecxz
mov
arpl
jno
cld
pop
adc
xor
adc
pop
xorl
loop
mov
clc
stos
loop
icebp
push
pop
in
test
push
into
xbegin
push
lret
ds
pop
rcl
rcll
sbb
fwait
push
mov
das
cld
cmp
mov
add
es
in
data16
cmp
in
mov
xor
push
xor
int3
aad
das
mov
cmc
sbb
pop
mov
inc
sbb
jbe
imul
mov
pusha
sub
cmp
sbb
aad
jecxz
popf
shrl
bound
push
push
das
mov
xchg
cmp
scas
dec
xor
clc
rcrb
pop
std
xlat
jo
lret
xchg
add
ljmp
push
cmp
movsb
xlat
loope
cmpsb
shlb
les
add
rorl
dec
xor
push
or
in
pop
push
test
pop
jg
les
shlb
lods
testl
lret
push
xor
mov
mov
in
loop
inc
lds
cmpsl
test
cmp
rorl
decl
inc
mov
add
mov
clc
jne
inc
mov
adc
loope
iret
pushf
fst
sbb
lcall
clc
sbb
xchg
cmpsb
jb
movsb
xchg
int3
enter
cs
fst
bound
int
fsubs
push
std
mov
jb
lock
lahf
mov
mov
jg
gs
daa
cmpsb
movsb
lock
dec
sub
pop
fs
sbb
int
jg
and
imul
js
imul
test
push
repz
jns
enter
xor
add
mov
imul
push
mov
pop
je
icebp
xchg
lock
pop
jl
mov
loope
jne
xor
add
icebp
imul
mov
xor
ljmpw
ds
pop
aam
xor
mov
int
pop
jle
insl
rcl
ds
pop
xchg
cmp
fcoms
cmp
fcmovnb
adc
movsl
jb
xchg
pop
push
mov
je
fnstcw
in
sub
jmp
movsb
das
insl
dec
mov
push
rcrb
push
mov
sbb
cltd
lcall
scas
push
in
stos
xor
jecxz
pop
inc
or
into
dec
imul
mov
push
xlat
xchg
call
neg
pusha
xor
scas
lods
stos
pop
inc
rorl
loopne
push
ja
mov
sub
aad
les
outsl
push
mov
lea
outsb
push
and
sub
jmp
jp
jecxz
adc
mov
imul
mov
movsl
inc
cmp
push
in
adc
push
test
inc
xchg
cmp
pop
outsl
dec
lods
mov
lret
sti
or
sub
mov
mov
push
inc
je
xchg
xlat
push
inc
jmp
adc
xchg
inc
sbb
popa
push
jmp
out
mov
pop
repz
stos
mov
ds
pop
cmp
bound
jg
sbb
sbb
out
outsb
mov
negl
mov
push
gs
daa
arpl
push
pop
gs
mov
aaa
push
add
pop
mov
test
fmulp
sub
les
cs
int3
jno
mov
imul
lahf
sub
mov
scas
dec
jmp
pushf
mov
fdivrl
add
call
sbb
xchg
sbb
cld
jo
adc
les
dec
into
push
addl
dec
add
cmp
pop
xor
lret
lock
xchg
test
or
push
add
ds
pop
imul
adc
dec
mov
out
lods
je
lcall
repnz
dec
xor
enter
out
repz
dec
scas
adc
jbe
sbb
xchg
jecxz
popa
adc
push
ret
in
in
sub
movsl
inc
cmp
mov
jle
push
sbb
pushf
sub
push
stos
and
jl
jo
mov
dec
inc
pop
jb
push
addr16
push
dec
pop
mov
mov
dec
in
fdivrl
add
rcl
ljmp
hlt
jp
mov
or
fsincos
push
push
in
movsb
mov
xchg
pushf
push
call
cli
dec
cmp
addr16
and
cmp
dec
or
ja
test
lret
jle
stc
sub
fisttpll
stos
xchg
mov
cmp
or
lcall
fisubrs
rcrb
loope
mov
enter
cli
mov
fwait
cmp
int
mov
sbb
pop
cwtl
mov
mov
mov
push
into
divb
stos
push
dec
in
imul
xor
mov
pop
test
shl
mov
fldl
mov
jns
mov
ljmp
movsl
dec
jmp
pop
sub
aaa
int
mov
inc
push
popf
shlb
xlat
sbb
enter
adc
pop
adc
push
stos
je
cmpsb
xchg
fidivl
push
ficompl
xor
fbld
rcrl
lret
mov
adc
mov
orl
xor
vandps
cmpsb
out
gs
sbb
and
aam
ret
mov
xor
jle
shl
adc
push
push
outsl
mov
xorb
outsb
xor
mov
rorl
mov
in
lret
loopne
test
jns
fistpll
dec
movsbl
lret
push
sub
jnp
repz
shl
sub
jne
sti
mov
pop
mov
jl
jle
icebp
shl
push
sbbb
lock
clc
fsubrl
push
jno
subl
push
std
cmpsl
lock
pop
bswap
mov
in
shrd
or
in
xor
pushf
ds
ret
sbb
std
xchg
loope
les
into
leave
xchg
and
sub
loopne
test
addb
pop
sub
push
or
fwait
call
mov
fldenv
xchg
sbb
in
cmpsb
inc
in
add
pop
in
aam
xchg
sub
leave
pop
stos
push
sti
and
es
xchg
inc
scas
pop
xor
push
add
pop
mov
jno
inc
shlb
dec
cmp
push
jmp
adc
and
movsl
pop
sahf
inc
call
ja
pop
loopne
das
stos
jmp
sbb
ret
mov
das
xor
subl
in
cmpsl
adc
in
or
cmp
out
xlat
int
mov
push
movsl
cmp
xchg
sbb
pop
loop
push
popa
fcmovbe
arpl
mov
sbb
in
outsb
jae
dec
pop
inc
outsb
call
or
sbb
pop
test
stc
mov
pop
pop
scas
xchg
nop
mov
adc
push
pop
es
dec
rcrb
outsl
repnz
bound
pop
out
or
add
repz
out
outsl
das
push
fnstenv
pop
fdivp
fld
lret
cmp
fistpll
jle
xchg
or
jns
jb
inc
push
xor
pop
scas
popa
lods
aas
mov
adc
outsb
sbb
adc
inc
stos
ds
test
mov
dec
cmp
leave
sbb
dec
cmp
repz
pop
mov
loop
push
sbb
lock
test
repz
int
orl
arpl
lret
mov
push
mov
inc
add
aam
sbb
dec
adc
test
sahf
sbb
dec
test
sarb
incl
push
pop
sub
jge
sub
mov
adcb
xor
loop
rorl
imul
adc
sahf
inc
ret
pop
loope
mov
ret
dec
imul
lock
jle
imul
inc
pusha
out
into
push
lret
sbb
fs
arpl
cmp
jbe
mov
xor
inc
int
mov
jle
sbbb
adc
dec
mov
jmp
dec
cmpsb
lahf
adc
xor
iret
sbbb
jle
fsubl
sub
js
lahf
loope
in
jl
js
dec
xchg
outsl
aas
inc
xor
pop
ljmp
mov
into
sub
test
or
and
mov
ds
dec
inc
and
pusha
dec
or
xchg
push
jg
adc
mov
repz
adc
sbb
pop
in
jae
dec
xor
aaa
mov
out
mov
adc
inc
xor
sti
xor
lods
sub
jge
inc
int
mov
add
ss
flds
xor
in
jle
lcall
cmpl
fcmovb
stos
xlat
dec
or
leave
cld
adc
stos
popf
daa
daa
and
mov
lea
jnp
movsl
mov
mov
imul
jg
addl
out
out
sub
je
mov
lods
push
cmpsl
daa
inc
movsl
dec
sub
dec
and
xchg
inc
mov
bound
das
xchg
push
out
movsb
aaa
mov
clc
jg
pop
je
out
push
dec
jg
and
mov
mov
aad
xchg
js
or
out
push
adc
mov
test
int
push
xor
add
jle
mov
dec
outsb
mull
repnz
and
imul
sbb
in
mov
dec
loop
lret
cmp
lock
fwait
xor
sub
pop
sub
stos
fwait
mov
in
loop
mov
adc
mov
inc
psubusb
mov
shll
into
lds
js
jl
sbb
push
jno
adc
xor
sub
test
mov
push
pop
pop
stc
cmp
insb
loop
jmp
jnp
add
add
pop
fwait
outsb
adc
pop
sub
mov
push
pop
sbb
mov
or
and
add
jns
mov
into
mov
dec
das
push
xchg
ret
popl
nop
mov
fxch
push
push
mov
mov
sub
stos
pop
inc
sarb
mov
fmull
push
stos
xor
xchg
cmc
xchg
cmp
cmpsb
je
shl
xor
pop
inc
xchg
add
add
js
mov
lds
lock
or
pop
mov
mov
lods
cli
add
dec
imul
mov
cmpl
xchg
js
and
fdivrs
es
fstps
push
in
lret
jno
rcll
lock
testl
loop
mov
orb
stc
mov
insb
mov
xchg
adc
jbe
out
dec
mov
dec
leave
push
sahf
mov
popf
pop
stos
xor
jbe
xchg
mov
and
push
jbe
outsb
mov
stos
jae
sbb
sub
or
addb
inc
mov
xor
jmp
or
dec
and
sahf
and
cmp
dec
inc
dec
jl
jecxz
mov
sbb
inc
iret
push
roll
inc
jo
movsl
pop
cmp
mov
mov
adc
fs
sub
adc
adc
sbb
in
hlt
scas
jecxz
jns
stc
inc
ret
or
or
stos
push
xchg
ja
fsubs
pop
jb
fwait
stos
pop
add
into
and
ljmp
sub
sub
sbb
mov
xor
rcrb
mov
rcrb
pop
mov
dec
js
aaa
lret
push
jo
aad
inc
test
jae
adc
jno
or
xor
movsl
adc
sbb
movsl
jge
lds
testb
or
pop
jmp
inc
pop
pop
mov
inc
sbb
rorb
lret
xlat
xor
ret
fcmovb
jmp
or
xor
xchg
pop
pop
testb
sbb
les
mov
lret
gs
xchg
loop
ret
cmp
push
mov
pop
mov
push
in
das
rcl
pop
mov
mov
inc
and
lcall
mov
lret
xor
xchg
movb
ret
mov
jo
lea
lods
push
out
test
cmp
pop
push
sbb
mov
fcos
pop
inc
adc
shll
jg
addr16
add
lret
cld
mov
jg
rcl
or
jnp
fstl
cwtl
pop
xchg
mov
dec
mov
fisttps
pop
lods
sub
jno
push
mov
dec
ror
lret
lcall
jnp
inc
mov
dec
fists
addr16
int3
jecxz
xor
pop
mov
int
sbb
aas
mov
pop
fisubl
ret
dec
ret
outsl
xchg
cmp
mov
leave
pop
cltd
cmp
pop
pushf
sahf
les
mov
cld
jne
dec
jb
insl
stc
fisubs
sbb
push
cltd
dec
add
jecxz
fistl
mov
loopne
sub
jge
inc
fldt
loop
int3
js
dec
jae
jge
mov
mov
movsl
jae
divb
adc
loopne
mov
mov
xchg
sbb
add
inc
sbb
sbb
mov
dec
je
sbb
sbb
fildl
ja
imul
daa
clc
iret
cmc
pop
mov
fs
jns
pop
loopne
push
subl
inc
aad
loopne
push
das
mov
inc
fcompl
rorl
adc
dec
adc
fistpll
sub
jge
lret
ss
cmp
push
pop
icebp
mov
incb
pushf
jmp
mov
rcrb
les
lock
js
push
xor
and
call
inc
bound
in
cli
lea
gs
mov
jnp
push
into
xor
frstor
lret
jnp
ja
repnz
ret
adc
gs
inc
cmp
adc
jno
xor
mov
push
dec
bound
and
cmpsl
ds
das
aaa
sbb
ret
mov
imul
imul
icebp
in
cmp
into
dec
test
sub
jo
lea
and
pusha
sbb
mov
add
xchg
rcl
lahf
movsl
pop
hlt
shll
ret
addr16
mov
xorl
lods
push
icebp
loopne
xlat
jae
sub
pop
hlt
push
lods
dec
inc
inc
leave
sbb
jge
pushf
cmpsb
lret
mov
dec
int
fwait
jmp
mov
js
out
addb
repz
call
or
dec
fwait
ss
sti
movsl
fs
rorb
lods
xor
xchg
sbb
mov
outsl
addr16
cmp
popa
test
aaa
jo
cmpsl
xlat
dec
or
cltd
push
in
xchg
pop
addr16
pop
dec
or
pop
push
cmpsb
cmp
mov
jg
jne
lods
push
jae
in
mul
jno
xchg
or
test
dec
subb
idivl
rcll
cmpsb
xor
xchg
ss
jg
pop
mov
out
sti
mov
jl
xchg
nop
pop
stc
jl
xor
enter
outsb
xchg
xor
loop
dec
cld
pop
popf
sub
mov
shlb
movsb
addb
mov
incb
ret
cmp
pop
push
cmp
and
loopne
clc
shlb
or
sub
jo
push
lock
push
aad
loop
and
rcll
fistpll
xlat
adc
cli
dec
mov
xor
pop
negb
push
push
notb
xor
popa
lcall
push
decb
xor
movsl
shll
adc
pop
xchg
cmp
iret
mov
jg
mov
adc
cmp
add
jbe
in
xor
push
mov
cmpsl
dec
ds
gs
inc
and
jp
push
mov
out
pushf
sub
adc
adc
outsl
mov
cmpsl
out
div
pop
insb
repz
mov
test
repnz
into
mov
mov
pop
xlat
rcll
cld
inc
push
test
jg
aad
movsb
das
mov
dec
shll
ret
sub
lahf
cmp
std
adc
jne
loopne
stos
cli
jl
pop
fbld
push
icebp
xor
mov
ret
add
push
out
lcall
or
xor
stos
sbb
lret
aam
dec
stos
jmp
into
into
std
pop
push
inc
movsl
jnp
addr16
xchg
jecxz
or
es
hlt
jle
push
loop
xor
js
out
setb
stc
add
mov
cli
jle
or
xor
cmp
in
inc
and
cmpsb
add
pop
sbb
sbb
cli
inc
lret
sbb
scas
jecxz
outsb
sbb
mov
push
push
mov
pop
out
cmp
or
iret
out
cwtl
xor
jnp
sbb
out
cltd
pushf
call
add
or
add
pop
dec
inc
icebp
inc
out
pop
out
jno
xor
lods
mov
fwait
xchg
cmp
xor
xor
sub
repz
jmp
push
test
or
xor
int
insl
and
ret
in
mov
push
pop
mov
xor
jl
dec
call
ss
fldl
fdivs
shrb
pop
incl
mov
cs
pop
in
sarb
mov
sbb
popa
into
dec
pop
or
pop
push
fwait
jmp
or
es
add
test
add
jnp
rcll
pop
aas
cmpb
mov
lret
mov
mov
push
pop
fildll
ret
mov
fsubrs
xor
push
cmc
inc
or
ss
lahf
leave
hlt
push
add
pop
adc
addl
lret
popf
jo
push
in
outsb
xor
xor
lret
cmc
out
jg
lahf
loope
mov
dec
ja
test
sub
sbb
outsl
test
outsl
push
inc
jg
mov
aaa
pop
popf
dec
mov
insl
fdivrs
lret
fadds
scas
pusha
push
mov
jmp
mov
pop
xchg
adc
fsts
test
ljmp
fwait
jnp
mov
icebp
popa
and
push
shrl
lock
or
mov
orl
hlt
fildll
insl
sti
data16
idivl
insb
mov
scas
dec
add
fisubl
pop
mov
xchg
fstpt
testl
test
sti
sub
xlat
cmp
pop
call
int3
push
mov
dec
jnp
cwtl
push
cmp
push
sub
insb
movsl
cmp
int
idiv
and
sbb
mov
pusha
lods
jecxz
inc
dec
push
mov
xor
cld
les
aam
mov
add
lcall
jo
rolb
call
and
add
sub
pop
jns
ljmp
fidivl
arpl
xchg
mov
ja
repnz
push
push
sbb
or
xor
mov
repnz
add
dec
lea
jmp
pushf
movl
jmp
xor
bt
xorl
jmp
xor
pushl
xor
pushl
xor
clc
jmp
cmp
arpl
insl
mov
xchg
jmp
std
push
sahf
call
xchg
push
in
sub
imul
xor
sub
jae
addl
xor
mov
imul
dec
xchg
movsl
pop
dec
xchg
sub
cmc
cmp
mov
popf
test
mov
push
jbe
and
dec
cmp
out
inc
sbb
mov
nop
fcoms
add
pusha
push
sbb
push
cmp
int3
jbe
jb
xlat
sbb
sub
inc
mov
mov
test
sbb
ss
add
push
loop
mov
dec
out
push
aam
dec
sub
mov
sub
out
fwait
cld
jge
and
jmp
jp
lea
mov
push
mov
mov
mov
jns
inc
inc
dec
jnp
jl
cwtl
jae
std
jno
adc
xor
jo
push
xor
imul
ss
repz
iret
pusha
jg
int3
pusha
es
and
in
fisttpl
lret
jb
xlat
test
negl
mov
aad
fiaddl
xchg
mov
gs
es
rcrl
xor
movb
call
in
sbb
push
cmp
orb
popf
dec
cmp
add
mov
jle
xorb
hlt
and
cmp
stos
add
sub
into
sub
pop
lods
push
and
leave
mov
inc
fisttps
mov
pusha
mov
adc
aad
dec
jg
fists
push
shlb
mov
push
ja
xorb
aad
push
pusha
xchg
cmp
and
and
out
and
dec
jg
imul
icebp
sub
dec
inc
in
mov
ljmp
addb
mov
mov
out
add
jmp
dec
jg
icebp
loope
xor
adc
pop
arpl
lds
xacquire
mov
sbb
js
cmpsb
inc
enter
ret
mov
add
sub
clc
lods
dec
pop
add
aam
mov
mulb
fldenv
pop
push
stos
or
pop
add
adc
adcb
and
leave
push
outsl
cltd
or
fiadds
icebp
pusha
and
and
fdivrl
addr16
fs
xchg
lcall
pop
lock
pop
mov
shlb
mov
dec
adc
inc
out
test
scas
fiaddl
mov
mov
pop
push
jno
das
cltd
imul
mov
xor
dec
shlb
jmp
adc
in
mov
inc
sub
inc
test
les
scas
mov
cmp
pusha
mov
push
mov
mov
cmp
cmpsl
das
mov
inc
in
test
shr
imul
jge
dec
or
lock
je
cwtl
inc
sbb
xorb
push
mov
sub
std
inc
aad
push
xor
push
nop
lods
pop
push
lret
outsl
in
mov
ucomiss
in
or
dec
mov
fcmovnb
xor
adc
cwtl
sub
xchg
stc
out
das
or
cs
addr16
les
xchg
push
adc
loop
mov
mov
sbb
inc
sarb
aaa
xor
je
scas
out
sub
jnp
push
dec
or
push
cwtl
jecxz
add
dec
addb
loop
fiaddl
jne
nop
xchg
fdivrs
in
mov
xchg
cmpb
sbb
pop
sbb
outsb
push
sbbb
xchg
cmpsb
mov
xchg
dec
loop
sbb
and
addb
xlat
add
ret
cmp
adc
dec
cmp
sbb
xchg
push
dec
icebp
push
fmull
mov
pushf
inc
call
lcall
or
adcb
xor
or
aas
divl
je
scas
mov
add
sub
mov
lds
test
jae
adc
or
adcl
fsubrs
jle
mov
xchg
in
jp
inc
movl
sti
or
dec
shrb
out
sbb
test
adc
cwtl
aaa
lret
mov
pop
cmp
jno
stos
dec
movsb
lods
fwait
mov
add
in
jnp
mov
inc
jns
xchg
js
test
outsl
pop
bound
or
mov
xor
ds
movsl
mov
pusha
fisttps
aas
and
enter
scas
popa
out
sbb
in
xor
mov
jno
cs
or
test
add
inc
das
mov
mov
and
jmp
cmp
arpl
jecxz
push
mov
sti
add
sbb
jnp
xor
add
mov
lahf
adc
xchg
xor
dec
fs
int3
mov
mov
dec
popa
pop
and
into
sub
and
xstore-rng
cmpsl
add
add
in
xor
cmpsl
mov
mov
pop
or
imul
data16
jmp
mov
inc
xchg
inc
mov
jbe
inc
aad
and
and
mov
xchg
mov
cld
adc
dec
stc
popa
fs
js
pop
scas
xor
fistpl
stos
jb
outsb
inc
jge
cwtl
sbb
popl
popf
add
sbb
jns
nop
dec
jno
add
dec
insb
or
sub
add
mov
sahf
jle
in
xchg
push
push
out
sti
jge
int
popf
sub
repnz
lds
push
adc
or
nop
aad
lods
adc
cmp
fidivl
aaa
fistps
adc
inc
fwait
aaa
test
dec
jnp
stc
sub
jo
or
bound
outsb
dec
dec
je
mov
into
mov
repz
iret
cli
daa
push
jnp
pop
scas
xor
test
cmp
test
out
push
out
and
inc
pop
sahf
loope
sub
andb
mov
enter
or
sbb
push
bound
jl
mov
mov
js
adcb
shlb
mov
shll
nop
stos
sbb
dec
lahf
and
mov
mov
fs
cmp
jbe
mov
int
jmp
push
push
push
lahf
jb
and
jbe
fnsave
xchg
xchg
call
scas
and
popa
loop
es
cmp
test
mov
ficoml
movl
pop
mov
ljmp
into
test
xchg
rolb
and
lret
repz
add
jbe
sub
es
jmp
push
insl
icebp
jae
inc
outsb
mov
out
out
jmp
pop
flds
subl
aaa
in
mov
nop
adc
sbb
out
xor
dec
jo
cld
out
jge
aaa
pusha
je
mov
jae
mov
loopne
pusha
xor
push
pop
mov
jecxz
repnz
pop
mov
push
ror
push
push
jno
jbe
mov
movsb
aaa
xor
add
and
dec
lods
dec
adc
xchg
in
jecxz
jae
push
daa
pminsw
inc
out
or
sub
inc
sub
push
test
cmp
mov
dec
or
movsb
sub
fisubs
testl
adc
sub
inc
mov
pop
int
outsb
stc
sarl
outsb
dec
aaa
pop
cmp
arpl
mov
arpl
clc
sub
xorl
jbe
je
ljmp
sarl
jno
pusha
push
inc
mov
mov
sub
inc
cld
hlt
mov
das
sbb
or
cwtl
int
scas
dec
sub
jns
mov
test
jae
stc
jmp
dec
outsl
bnd
inc
ret
jb
stos
les
and
pusha
adc
iret
rorb
pop
and
dec
push
scas
stos
and
push
movlps
xchg
out
cltd
mov
fildll
mov
repnz
pop
fadds
adc
mov
pop
jmp
dec
aam
cli
dec
sub
mov
xor
nop
sbb
out
lea
test
mov
pop
pusha
orl
lock
mov
jecxz
or
mov
mov
jmp
test
or
fsts
mov
mov
push
sahf
cs
inc
mov
mov
es
dec
cmp
mov
and
cwtl
xor
leave
pop
jo
mov
outsb
mov
mov
mov
or
std
push
loopne
mov
xor
jle
stos
cs
and
push
dec
cli
outsl
mov
add
stc
xchg
sbb
sbb
nop
inc
cmc
fdivrl
mov
jo
jne
arpl
push
and
lea
sbb
idivb
mov
push
aam
sbb
es
cld
adc
mov
jp
xor
dec
sahf
sub
das
inc
cli
xchg
negl
or
shrl
lock
xchg
jmp
xor
inc
fildll
push
lock
inc
or
sbb
stos
jae
out
mov
and
loop
stos
inc
mov
int3
mov
fimull
popl
mov
push
pop
push
into
sub
stos
scas
fwait
shl
rcrl
pop
inc
repz
rorl
mov
mov
call
inc
loop
mov
sbb
cmp
xchg
in
arpl
push
sub
rolb
mov
xor
ret
xor
bt
xor
jmp
pop
pop
cmpsb
cmp
bound
pop
scas
cld
dec
xchg
jmp
sahf
out
ds
mov
enter
push
das
and
pop
mov
lcall
add
jnp
into
push
or
or
lea
xchg
push
mov
hlt
je
pop
das
cmp
dec
call
xchg
jg
lahf
ret
mov
cltd
call
div
xchg
fdivrs
loope
stos
xchg
lcall
dec
xor
ret
dec
int3
push
cwtl
mov
xchg
inc
ja
cmp
fisttpl
jg
add
add
mov
inc
jmp
ret
fucomp
or
xorb
cmpsl
mov
sbb
xor
testb
add
lds
lock
jno
inc
xorb
adc
mov
scas
sub
daa
jl
movsl
inc
les
leave
push
sub
jl
mov
xchg
mov
mov
push
jp
push
xchg
daa
push
jne
mov
cmp
inc
repz
push
add
push
sbb
mov
push
xchg
aas
jo
sbb
lahf
ljmp
pop
and
nop
cld
xor
jg
xor
push
cs
lret
test
aas
adc
cmpsl
test
xor
inc
jge
pushf
pushf
pusha
xor
test
xor
call
pushf
jmp
call
xorl
bt
bt
xor
pushl
stc
xor
cmp
cmp
xor
pushf
pushl
xor
cmp
xor
call
pushl
popf
movl
pushf
pushl
ret
mov
xor
imul
test
arpl
addr16
test
add
lcall
mov
cmp
xor
mov
push
popfw
aaa
pusha
lret
and
mov
jo
dec
xchg
jne
mov
xchg
cld
pop
lcall
call
outsl
std
xor
jle
jl
push
mov
dec
pop
aas
mov
xchg
jmp
dec
shll
orb
int
nop
xchg
jmp
sub
imull
cltd
fcompl
mov
sub
sbb
cwtl
sbb
jbe
xchg
pop
addr16
xlat
mov
decl
in
cmpl
push
pop
movsb
rol
dec
mov
imul
setne
push
or
shll
inc
fdivs
cwtl
cmp
sahf
xor
jg
orb
jmp
std
cmp
lock
call
mov
xlat
dec
inc
movsl
mov
in
pop
push
dec
int
out
dec
sub
mov
movsl
xchg
mov
scas
stc
push
or
sub
push
jae
and
sbb
or
or
mov
mov
loop
cmp
cmpsb
out
clc
jge
dec
fdivp
ljmp
je
rcrb
push
adc
sti
inc
inc
and
cmpsb
test
inc
jle
push
into
xchg
mov
xchg
jo
inc
jb
es
push
xchg
xor
inc
test
js
lret
mov
aas
aam
xchg
add
lods
outsb
jns
imul
mov
arpl
bound
or
test
movsb
xlat
push
test
push
sub
pop
mov
add
lds
stc
inc
shrl
popa
jp
xor
outsl
out
mov
mov
or
ljmp
cltd
dec
cmp
orl
jns
aas
xchg
push
and
ljmp
popa
orb
xchg
sub
mov
lock
fmull
fisubrl
add
out
lret
loope
movsb
cmp
dec
jg
lock
das
or
pop
sar
add
pop
or
xor
bound
cs
dec
ror
ss
cwtl
das
lcall
or
cwtl
sub
mov
mov
mov
jne
jle
add
imul
in
scas
pop
fcmovb
add
mov
mov
mov
mov
mov
pop
test
sub
leave
jb
pusha
in
ja
test
popf
aaa
pop
fs
jp
mov
cltd
ja
movsb
dec
testl
or
xor
nop
iret
pop
adc
rorb
popa
mov
or
ja
adc
outsl
pop
fcomp
dec
into
mov
popf
stos
std
mov
dec
push
mov
dec
shll
xchg
and
inc
cs
mov
out
pop
push
out
sbb
inc
mov
sbbb
mov
mov
push
aad
insl
jne
inc
inc
movsb
daa
mov
mov
jmp
cmp
jae
and
aas
nop
aam
and
xchg
leave
stc
pop
and
movsb
mov
test
jecxz
mov
xchg
enter
jo
cmc
mov
cmp
rcrb
dec
xchg
xchg
fnsetpm(287
jp
adc
sub
rorb
daa
divb
or
sub
pusha
mov
mov
fwait
mov
xor
jecxz
sub
orb
jnp
mov
xlat
aas
ss
pop
mov
push
or
aad
in
mov
mov
insb
or
dec
imul
mov
mov
lds
subb
jmp
jns
fidivrl
xchg
neg
xlat
aas
data16
leave
adc
dec
pop
push
cmp
addr16
stos
dec
jo
sub
adc
push
jle
fcmovbe
cld
fisubs
mov
xchg
xlat
aas
or
test
mov
inc
xor
sub
sub
jmp
jle
sbb
xchg
andb
movsl
je
xchg
sbb
add
out
jmp
scas
xor
aas
fsubr
xchg
sub
shll
mov
mov
pop
repz
out
push
xlat
dec
lea
mov
stos
test
ret
fists
mov
or
mov
dec
mov
out
js
repz
push
popa
jo
cmp
adc
jle
enter
ljmp
loopne
pop
and
push
xchg
jmp
dec
or
stos
and
out
daa
aad
adc
adc
jmp
popf
inc
in
push
sbb
js
pop
push
mov
jmp
sbb
fnstenv
mov
push
mov
pop
iret
stos
popf
in
adc
testl
sbb
divl
pop
pop
or
adc
jp
out
bound
shl
push
into
shrb
filds
xchg
mov
mov
dec
xchg
xchg
or
mov
ss
mov
inc
xor
xor
jne
xchg
wrmsr
dec
insl
sbb
lret
inc
ljmp
cwtl
or
stc
jp
push
aad
xchg
mov
fucom
xchg
mov
and
push
and
in
loopne
mov
out
pop
jne
jo
inc
ss
int
jno
pushf
out
pop
out
outsl
cmp
hlt
dec
adc
fnstenv
jl
push
xor
shll
fwait
adc
dec
cmp
jo
xorb
mov
fldz
jg
rclb
gs
out
inc
mov
call
xor
out
jne
leave
mov
in
push
outsb
frstpm(287
movl
popa
faddl
mov
lods
inc
mov
jnp
add
inc
incb
stos
dec
or
not
popa
jmp
xor
or
lret
mov
or
rcr
lods
cld
mov
test
xor
add
sbb
push
xchg
aam
pop
or
es
out
int
or
or
stc
xchg
imul
or
pop
mov
cmpsb
dec
repnz
dec
cmp
dec
and
xor
pop
jp
aad
push
popf
fisubs
scas
movsl
mov
dec
lds
push
jecxz
leave
mov
dec
xchg
and
fadd
dec
out
cmp
aam
lret
push
pop
lahf
dec
enter
jne
dec
push
dec
mov
pop
loop
shl
addb
ror
cs
repz
sub
es
pop
arpl
xor
mov
leave
rol
stos
lods
lcall
dec
push
std
adc
repz
lods
pop
or
shlb
out
xchg
sbb
mov
lea
cld
jg
push
ja
clc
push
inc
push
or
push
lcall
ficoml
dec
in
xor
sahf
xor
arpl
mov
push
pushf
cmp
insb
popf
ret
xor
push
push
aaa
je
sub
sbb
push
mov
mov
sbb
mov
fldcw
pop
orb
adcb
and
aaa
sub
sub
in
aam
andl
les
inc
mov
inc
ds
fdivp
in
dec
fsubrp
mov
fwait
movsl
ret
dec
fistps
cmp
xchg
jle
fdivrl
jo
cld
lahf
test
pushf
popf
sub
cmp
xchg
jns
inc
cmp
nop
loop
hlt
ja
mov
cmpsl
lret
orb
test
and
insl
clc
mov
inc
jae
xchg
ljmp
bound
xor
push
xlat
mov
push
xchg
arpl
pushf
imul
repz
sub
mov
lcall
xor
les
adc
lock
rorl
mov
sbb
or
pop
lret
sbb
cmp
mov
push
inc
lret
pop
lods
inc
das
imul
fld
mov
je
negl
fistl
imul
sub
or
sub
jl
aad
pop
mov
aas
fcmovbe
mov
mov
rclb
dec
je
in
lret
movsb
daa
cld
hlt
and
add
push
xchg
dec
jmp
push
and
mov
pop
cmp
outsl
lret
inc
and
dec
inc
enter
loopne
cmp
sbb
fwait
and
imul
cli
dec
or
movsl
sar
std
mov
or
test
mov
mov
loope
cmpsl
sbb
cld
in
es
shlb
bound
mul
add
xchg
dec
or
sub
adc
cmc
gs
and
jae
mov
rolb
and
dec
mul
jb
xchg
lea
cmc
mov
cwtl
sarb
cmp
pop
mov
cmp
jno
out
jnp
in
push
mov
xor
ss
jg
aaa
movsb
je
push
sub
data16
mov
push
mov
inc
test
mov
adc
je
in
jecxz
sub
jge
pop
mov
incb
jge
push
xchg
and
pushf
push
fnsave
push
xchg
popf
jne
out
mov
sbb
cld
pop
sub
jmp
pop
jo
mov
lds
jge
adc
stc
pop
mov
xchg
mov
loop
jo
jp
pop
push
dec
fldl
dec
arpl
outsl
idiv
xchg
scas
push
cmpsl
sbb
repz
push
adc
or
sbb
movsl
jbe
fildl
push
loopne
sub
jg
loope
test
in
leave
mov
and
mov
mov
mov
aas
pushf
out
cltd
xor
fwait
inc
sub
cwtl
inc
jbe
fisttpl
cld
in
aad
in
or
lods
and
fistpll
inc
sub
jle,pt
push
jnp
stos
or
loop
test
jg
cwtl
adc
scas
fidivrs
or
sbb
add
or
repz
sub
mov
jge
shl
outsb
mov
mov
pop
adcl
jb
repnz
sbb
sub
popf
lret
es
pop
sub
in
imul
mov
jg
pop
xchg
fcomi
loope
sbb
es
and
and
jmp
xchg
and
mov
fistpl
pop
jbe
push
or
insb
dec
out
jmp
sub
inc
jmp
sahf
cmp
test
leave
movsb
or
scas
mov
scas
dec
inc
xor
sub
dec
out
xchg
mov
mov
test
dec
pop
add
pop
jb
and
xchg
jle
fucompp
rclb
fcmovnu
or
dec
insb
inc
mov
push
cmp
icebp
mov
decl
in
imul
mov
sbbl
jnp
insb
adc
inc
mov
push
movsl
rcrl
test
xor
and
inc
add
or
pusha
sbb
adc
orl
lret
mov
pop
cmp
mov
or
test
xchg
cmp
ja
aam
xchg
stos
int
adc
test
loope
les
mov
insb
jbe
ljmp
inc
jo
mov
imul
js
mov
cwtl
mov
sbb
out
and
bnd
sub
ret
xor
or
or
in
or
bound
lock
cmpsl
mov
mov
divb
add
iret
addr16
loop
push
mov
add
sar
pushl
popf
pushf
pushl
ret
sarl
cmp
repz
aaa
test
or
clc
adcb
lds
outsb
pop
mov
push
scas
cmp
sbb
hlt
jp
aad
repnz
insl
mov
mov
mov
and
xchg
test
in
jg
jp
out
mov
push
stc
pop
out
and
mov
or
adc
dec
mov
iret
shll
jecxz
and
pop
iret
push
addb
jmp
bound
cltd
xlat
pop
push
jmp
rcll
pop
loope
ja
jecxz
mov
aad
enter
and
add
enter
dec
rorl
rcrl
mov
aad
lea
cmp
movsl
jl
loope
pusha
ret
mov
std
das
es
adc
jle
cmpsl
popf
sbb
hlt
sbb
into
shrl
pop
pop
out
leave
hlt
out
add
cmp
mov
mov
jmp
pusha
fidivs
add
mul
arpl
rol
pop
xor
mov
xchg
fs
sub
push
push
jmp
rcrl
adc
jmp
push
stc
dec
in
or
in
sub
sub
xchg
jnp
inc
cli
pop
dec
jbe
enter
or
pop
mulb
push
imul
jbe
jb
aaa
jo
mov
push
rolb
pop
xchg
adc
test
cmpsb
cmp
jo
xchg
mov
mov
pop
je
pop
lods
mov
popf
fstps
in
lods
stos
xchg
and
cmp
fwait
push
or
mov
sub
xchg
xor
xchg
enter
gs
sub
jnp
es
adc
js
popa
outsl
or
mov
cli
xchg
mov
popf
cwtl
jne
popf
mov
sbb
mull
and
test
jne
mov
in
xchg
push
dec
mov
daa
jl
popf
dec
popf
ror
adc
out
or
call
pop
in
je
or
pusha
cld
or
mov
in
mov
lds
adc
xor
xchg
lods
adc
sub
clc
icebp
mov
sub
cmc
clc
xor
subl
jmp
shlb
ds
aad
stos
repnz
enter
jmp
push
mov
push
lret
sub
nop
daa
pop
shlb
fwait
xchg
xor
mov
xor
mov
xchg
pop
test
daa
dec
test
cmp
addb
adc
imul
repz
clc
jg
data16
je
cli
decl
and
adc
sub
inc
aas
cs
loope
xchg
pushf
mov
mov
dec
mov
and
push
nop
fdivs
sub
cld
jbe
cmc
add
xorl
ljmp
mov
je
xchg
push
inc
xchg
or
xor
push
and
idiv
jnp
int3
add
arpl
jecxz
rcll
stc
mov
jp
fiaddl
sahf
mov
rcl
pop
cmpsb
inc
push
stos
nop
xchg
pop
test
sub
out
inc
pop
call
cli
fsubp
iret
lret
lods
fiadds
dec
dec
mov
jae
shlb
push
scas
sbb
stos
xchg
sub
mov
jp
ja
or
lcall
jo
dec
call
mov
push
or
mov
add
pop
cmp
cmpsl
mov
mov
mov
jns
lret
push
insb
in
es
ss
and
aad
daa
mov
mov
push
and
je
dec
cmp
stc
fwait
mov
mov
xchg
in
pop
fsubl
ja
xchg
popf
cmp
std
imull
jp
xchg
pop
xchg
mov
xor
in
and
in
jl
in
cmp
pop
mov
nop
mov
sbb
jae
in
inc
loopne
or
xor
sarb
lock
out
ljmp
gs
insb
mov
fcoml
push
push
sti
mov
push
and
xchg
or
js
lods
jno
jl
pop
jg
lods
sbb
idivl
faddl
add
pop
fdiv
fwait
in
pop
inc
xchg
rcrb
pop
add
jmp
ja
pushf
push
dec
call
scas
xor
jno
int
xlat
leave
cwtl
xorl
sbb
call
mov
or
lret
sub
mov
insl
pop
jle
push
aas
xor
xor
xchg
sub
lahf
movsl
fmull
shlb
fldcw
push
cmovl
ljmp
or
cwtl
sbb
inc
sti
adc
dec
push
cmpl
jg
dec
scas
insl
push
rcrb
mov
sub
mov
ret
insb
push
inc
sbb
mov
pop
std
push
dec
inc
jecxz
insb
and
out
inc
mov
nop
pusha
sub
sub
dec
push
jmp
jmp
jmp
test
xor
movb
cld
pushl
popf
mov
pushf
pushl
ret
pushf
pusha
pushf
pushf
movl
movb
jmp
xorl
pusha
call
push
pushf
popl
push
xor
call
iret
sbb
repz
icebp
mov
pop
mov
dec
xchg
fsubl
js
push
sub
stos
xchg
in
push
repnz
sbb
push
mov
inc
and
movaps
mov
mov
mov
into
push
std
sub
sbb
hlt
and
in
mov
test
pop
or
pop
in
adc
fdivrl
imul
mov
hlt
ljmp
scas
xchg
lods
inc
insl
dec
lea
in
and
test
movsl
sub
add
sbb
cld
cmp
mov
cld
sub
aad
xor
movsb
inc
xor
fstpl
fsub
lahf
ficompl
lds
loop
jno
inc
in
dec
nop
pop
cli
cmpsl
or
sysenter
pop
inc
lcall
push
stos
rol
and
in
adc
push
add
repnz
pop
push
inc
inc
addr16
aad
jnp
xor
pop
xchg
or
pop
clc
jb
xor
mov
sub
pusha
xchg
popf
xchg
lods
lcall
adc
add
ret
out
jae
mov
xor
in
loop
and
sarl
fimull
enter
leave
addb
mov
or
lahf
imulb
add
andl
add
nop
xor
or
and
popl
push
dec
pop
test
lods
popa
enter
flds
stc
jnp
jo
stos
lods
icebp
fwait
inc
inc
rcl
sub
daa
and
or
in
pop
add
repnz
mov
cltd
jle
sbb
push
ljmp
orl
lahf
icebp
mov
pop
in
ja
ds
hlt
aam
adc
movsb
adc
pop
fiaddl
adc
aam
sbb
jns
ljmp
aaa
ret
inc
xchg
into
scas
sub
jge
out
in
pushf
inc
pop
xchg
and
dec
jnp
test
insb
out
push
cmpb
out
fsubs
dec
aaa
je
inc
fisttps
cli
idivl
inc
lret
or
idiv
adc
fs
in
mov
cmc
mov
inc
sbb
pushf
xchg
aas
pop
cltd
loopne
lcall
movsb
sbb
imul
pop
jbe
loop
pmullw
cmc
ss
dec
pop
dec
jbe
mov
dec
lret
lea
fcmovnb
ds
mov
push
ret
cmp
mov
pop
mov
xchg
or
in
push
imul
dec
jmp
fnstcw
out
rcrb
jae
mov
adc
inc
xor
lea
adc
pop
pop
out
mov
add
pop
ds
pop
adc
or
inc
cli
std
mov
xchg
jo
or
mov
pop
sub
roll
in
and
int3
pusha
pushl
movw
movl
pusha
mov
mov
lea
jmp
aam
mov
loope
ds
int3
inc
call
cmp
cli
cmp
subb
mov
hlt
pop
jp
lods
mov
xor
data16
gs
icebp
rorl
xchg
push
jb
and
enter
data16
lods
xor
subb
sub
in
fs
xchg
mov
pop
adc
mov
roll
lods
scas
mov
scas
dec
dec
jno
cmp
stos
inc
fnstcw
mov
mov
jle
pop
mov
outsl
testb
roll
dec
cwtl
movsl
enter
jbe
jo
stos
notb
push
lahf
lret
insb
in
sti
shlb
shlb
insb
out
pop
test
stos
xchg
cmp
lcall
popa
testl
mov
xchg
mov
fs
scas
sub
pop
cmp
inc
push
out
mov
jp
aam
fwait
mov
pusha
stc
es
lret
adc
jns
mov
shrb
dec
lret
dec
mov
sti
stos
aad
push
and
inc
sbb
push
mov
push
in
jge
neg
add
shll
in
je
nop
cmp
dec
mov
clc
sbb
popa
ret
jb
cmp
ljmp
mov
sub
cmp
loop
pop
mov
sti
ja
or
out
mov
imul
pop
js
mov
push
push
adc
sub
cmp
cmp
xchg
rorl
rcrl
and
stos
pop
or
popf
mov
mov
push
cli
sub
pop
iret
xor
mov
shll
idivl
stos
sbb
adc
mov
jg
andb
adc
fdivrl
push
fisubs
mov
scas
es
js
pop
je
push
push
jnp
fwait
rcr
out
and
fsubrl
scas
xchg
in
and
sbb
outsb
jmp
testl
sub
dec
lret
mov
xor
loopne
les
xchg
jo
setp
jg
movsl
push
push
xchg
popf
push
sarl
test
jmp
add
call
cltd
xchg
pop
mov
lcall
sahf
pop
ja
mov
add
inc
mov
inc
mov
sbb
and
popf
inc
iret
xchg
dec
sub
out
jle
sub
mov
jle
mov
pop
les
aam
pop
mov
jecxz
rol
inc
and
flds
movsl
cmp
scas
rolb
adc
mov
cltd
rdtsc
mov
ljmp
ficompl
cltd
call
add
xchg
sahf
jge
push
dec
mov
mov
xchg
mov
scas
pop
mov
xchg
icebp
sarb
xchg
inc
in
or
movb
sti
adc
or
push
sbb
popf
mov
int
xlat
cli
fidivl
xor
xchg
cmp
ret
fisubl
aaa
add
mov
lret
idivb
sub
mov
cwtl
mov
aam
inc
inc
lea
pop
repz
dec
push
fwait
jns
stos
in
aad
sbb
xchg
add
lahf
stc
pop
adc
mov
fmull
push
loopne
pop
push
seto
push
push
sub
scas
decb
outsl
push
jns
cli
scas
mov
xchg
and
pop
add
xor
inc
pop
les
add
fs
add
cli
in
js
imulb
fs
or
dec
pop
dec
xor
inc
call
repz
cwtl
cld
mov
dec
ja
sub
icebp
in
mov
fisubl
push
inc
sarl
push
lcall
mov
add
cmp
pop
insl
adc
out
jg
bnd
mov
outsb
movsl
sub
mov
gs
rcrl
jg
clc
mov
push
lods
adc
xor
bound
jnp
dec
mov
pop
imul
enter
inc
stc
inc
and
scas
pop
ja
popa
sti
mov
test
cmpsl
lods
idivl
pop
sbb
or
test
adc
sbb
int
or
mov
dec
push
mov
and
fwait
mov
mov
pop
push
nop
or
mov
repnz
xor
dec
lret
push
mov
xchg
lea
xlat
stos
lcall
jne
sub
xchg
or
inc
dec
aad
inc
mov
lret
add
push
movl
or
xchg
lret
pop
int
xor
sahf
or
dec
ds
sub
sub
xor
mov
pop
and
and
leave
xor
jns
leave
popf
jle
sbb
cltd
cmp
adc
in
xchg
mov
pop
je
ret
jp
pop
addr16
xchg
inc
aas
adcb
mov
inc
fstl
or
in
lds
lods
call
hlt
loopne
jno
sbb
fwait
sbb
mov
jg
xor
cmp
dec
xor
mov
bnd
stos
out
jl
pop
int3
mov
push
push
popa
ror
loope
out
xchg
xchg
dec
xor
fld
rol
int3
cltd
sbb
sbb
aam
push
cmp
aaa
int3
fdivrl
mov
out
adc
insl
mov
cmp
jae
xchg
adc
es
seto
sub
jno
jp
sub
arpl
and
pop
call
adc
pop
push
in
mov
pop
ja
jge
push
cmp
xor
pop
mov
mov
ljmp
cmp
pop
movsl
ds
or
inc
mov
add
xchg
loop
mov
jns
inc
ss
cmp
jns
std
loope
rcll
ja
add
divl
xchg
and
push
mov
cs
xor
lahf
mov
mov
icebp
or
push
cli
outsl
cwtd
dec
jne
movsl
mov
loopne
cltd
cld
das
and
aam
sub
outsb
add
adcl
sbb
leave
add
jno
lret
jo
mov
jmp
mov
xlat
imul
idivb
cmc
lret
int3
jmp
adc
shl
and
lods
movsl
sub
xor
and
arpl
gs
adc
mov
dec
xor
push
lods
jo
popf
mov
push
outsb
jb
imul
pop
cmp
sti
clc
jbe
scas
outsb
push
push
push
dec
aaa
cmp
lcall
mov
mov
xor
hlt
fwait
outsl
arpl
push
xor
pop
xchg
and
push
pop
inc
sub
mov
sarl
negb
lcall
mov
sub
pop
cld
test
call
in
ds
mov
cmp
xlat
xor
decb
shll
cmp
sahf
stos
sub
int
in
mov
pop
push
add
fldl
push
cmp
sbb
jae
dec
ret
mov
orl
gs
sub
mov
cmp
inc
aad
xchg
and
out
mov
jns
xchg
inc
ja
lds
jo
outsl
adc
movsb
ljmp
rcl
sbb
sti
pushf
sub
inc
jge
push
in
add
or
in
and
ficomps
stc
push
jno
add
mov
fcmovnb
inc
dec
cltd
pop
push
cmp
clc
xor
mov
add
es
filds
cmp
pusha
shld
cli
movsb
mov
stc
fwait
xlat
sbb
and
mov
mov
test
cltd
fnsave
or
les
or
sub
popa
mov
inc
push
rol
push
mov
and
mov
xchg
sub
pushf
or
mov
and
or
subb
mov
mov
push
out
aaa
out
fwait
jge
jg
pop
xchg
jbe
xchg
dec
aas
sbb
mov
jecxz
orb
mov
ror
ljmp
aaa
and
enter
out
adc
call
call
ror
mov
imul
mov
push
test
pop
mov
sbb
andl
movsl
testb
adc
jns
push
inc
mov
dec
adc
sub
lret
out
cmp
test
jl
jecxz
in
lods
dec
xchg
or
aaa
fs
aam
fisttps
out
stos
sbb
inc
stc
sahf
stos
sub
push
mov
push
xor
fcmovbe
cli
data16
jne
jno
xchg
pop
sbb
addb
out
fs
into
stos
inc
push
add
jo
jb
pop
inc
xor
jecxz
out
lcall
movsb
and
ficoml
xor
pop
xchg
xor
sub
test
xchg
pushl
sahf
mov
or
leave
stc
dec
shrl
pop
mov
stos
int3
and
cmp
cltd
sbb
inc
stos
fmuls
inc
cmpl
insl
add
sub
lods
nop
push
out
int
insl
add
mov
js
adc
mov
dec
inc
or
test
inc
pop
stc
fildl
imul
mov
sub
leave
jge
push
aas
fidivrs
inc
leave
sbb
shll
gs
mov
push
in
fmul
cli
mov
mov
mov
xchg
pop
mov
mov
cmp
sub
xor
fldcw
mov
jge
jl
loopne
dec
je
rcr
inc
sub
push
ret
sti
stos
cmp
stos
xchg
mov
push
in
jo
dec
outsl
mov
sbb
pop
test
mov
arpl
mov
and
out
jg
mov
and
jne
clc
cmp
jo
lods
jb
fisubrs
lret
xchg
insb
inc
pop
inc
data16
lret
pop
icebp
inc
dec
jno
gs
adc
js
fucomi
and
fistpl
xor
fsts
stos
xor
cltd
fistpll
lods
stc
dec
xchg
fsubrl
fwait
ret
cmp
sub
in
das
sub
int3
fldt
lcall
sti
cmp
mov
dec
dec
in
cmpsb
nop
jne
scas
mov
daa
mov
push
adc
dec
dec
int
lods
es
out
push
pop
push
sbb
sbbl
lock
hlt
in
iret
stc
dec
adc
in
adc
sti
lods
iret
xchg
icebp
fcoml
pop
pavgb
dec
data16
inc
insb
xchg
jl
repnz
scas
sbb
test
lret
sbb
jg
jl
aaa
sti
xchg
and
mov
push
xor
inc
sbb
out
pushf
xchg
push
dec
xor
or
pushf
pop
cwtl
xor
push
cmpb
and
lock
pop
push
dec
pop
leave
mov
imul
stos
sub
imul
in
lret
xlat
sub
xor
sahf
jg
das
add
out
inc
das
sti
movsl
push
stos
inc
jns
mov
mov
sbb
dec
aam
sub
jmp
mov
mov
pusha
mov
xor
shrb
fwait
in
xor
jg
pop
cmp
lret
xor
pop
or
sbb
stos
mov
rclb
inc
jl
cltd
fcmovne
xchg
imul
jecxz
les
iret
fs
dec
jmp
push
lea
jae
pushf
mov
movl
call
imul
mov
in
xor
test
and
push
outsl
hlt
ret
jle
push
test
paddb
xlat
jb
inc
dec
inc
call
dec
push
jmp
inc
and
fs
xchg
imul
popa
adc
shrl
mov
ret
cwtl
or
xchg
jne
test
pop
out
mov
aam
loop
fs
push
stc
xchg
fwait
jmp
std
jae
pop
in
push
mov
xor
push
repnz
sbb
outsl
addb
into
mov
into
jns
orl
es
add
pop
popf
xchg
xchg
mov
sbbl
icebp
or
out
neg
repz
leave
bound
and
fcmovne
xlat
mov
shl
cli
push
sbb
and
xlat
ds
les
iret
fld
lods
call
mov
xchg
mov
add
insb
mov
ret
push
inc
aas
mov
in
daa
or
adc
or
adc
mov
push
fldcw
pusha
repnz
pop
cli
dec
cwtl
adc
cli
and
inc
ljmp
jle
adc
mov
lods
and
out
fdivs
sti
outsl
scas
mov
lods
xor
pop
and
xor
push
rclb
js
inc
or
and
mov
adc
sbb
into
vpshufhw
cmp
rcrb
pop
test
scas
ds
mov
cli
dec
lahf
cmp
adc
or
and
lock
sbb
sbb
sbb
cld
dec
mov
dec
xchg
cmpsl
adc
jno
sub
out
inc
divb
add
mov
add
ljmp
stos
inc
sub
in
icebp
xor
in
fldt
jl
lahf
loope
xchg
and
fbstp
mov
add
pop
xchg
insl
add
dec
repnz
sti
aas
mov
jno
into
insl
add
cmp
int
inc
enter
jle
xchg
fisubl
cmp
pop
inc
jnp
pop
sub
aam
mov
arpl
ljmp
jecxz
sub
lret
and
cmpsl
adc
rorb
imul
divb
mov
popa
repz
inc
in
mov
or
and
loopne
mov
adc
xchg
in
adcl
rorb
stos
aaa
pop
inc
mov
insl
icebp
cmp
loop
and
mov
mov
mov
cltd
fs
mov
xchg
insb
mov
mov
push
lods
aas
xor
lds
sbb
sub
cld
xchg
ds
adc
mov
sub
test
dec
fiaddl
and
and
adc
inc
imul
repnz
inc
sarl
shrb
xor
dec
adc
js
cmp
push
pop
sahf
ret
out
scas
jl
or
scas
jle
cs
add
and
into
ja
adc
xchg
cltd
and
cld
divb
mov
jmp
cmc
pushl
popf
pushf
pushl
ret
call
ljmp
push
sahf
mov
test
and
adc
aaa
loopne
sti
xchg
jmp
scas
sbb
rclb
cmc
enter
aaa
es
dec
loop
sub
ss
and
add
enter
lods
cmp
ja
pop
push
out
jecxz
out
daa
jmp
xchg
arpl
push
ljmp
neg
ja
scas
ja
inc
out
ljmp
adc
push
cli
and
mov
and
dec
pusha
mov
fists
fs
xchg
ja
scas
xor
shr
popa
cmp
sar
add
add
mov
vpackuswb
mov
nop
daa
adc
jne
pop
in
cld
inc
jecxz
stos
cmp
cmpsl
and
scas
adc
loopne
jle
js
jge
aad
mov
shlb
aaa
jnp
cld
cmc
jle
pop
fisubl
xchg
cmp
add
lret
mov
pusha
xchg
outsb
setbe
cmp
popl
mov
cmp
or
and
dec
sahf
cmp
lods
jle
add
push
or
xlat
pop
imul
aam
jae
in
ljmp
stc
xchg
and
add
push
inc
data16
jl
mov
jle
pop
test
mov
stos
imul
pop
out
iret
pop
movsl
xor
test
push
pop
cmp
mov
mov
aam
decb
cmpsb
out
add
stos
adc
adc
sarb
xchg
mov
fsubp
rolb
inc
push
jl
jp
jp
repz
roll
cli
dec
pushf
imul
js
call
aam
push
iret
push
mov
push
ror
sarl
add
cmc
sub
std
cmpsl
lret
stos
push
push
pop
pop
adc
jbe
lods
pushf
xchg
cld
push
jle
test
adc
das
or
das
cmp
push
cmp
subb
pop
push
out
xor
inc
mov
into
cld
jne
andl
dec
add
cmpsl
shlb
fbstp
jle
add
outsb
or
jp
gs
repz
lea
dec
or
aam
mov
dec
test
shrl
aad
cmp
jns
aas
xlat
push
lcall
xchg
mov
inc
inc
fnstcw
sbb
and
add
jbe
lds
add
mov
ret
dec
icebp
leave
jmp
cli
enter
js
xor
addb
pop
in
int3
push
mov
mov
sbb
xor
jg
fisubrl
push
mov
inc
mov
inc
imul
mov
xchg
or
int3
sbbl
cmp
inc
aaa
icebp
scas
push
cmp
pop
leave
or
mov
mov
pop
int3
mov
ss
dec
or
lods
cmpsl
test
jmp
in
test
dec
fstpt
mov
repz
pop
inc
jae
cmp
cmc
push
or
repz
cs
je
into
mov
ss
xor
mov
sti
sub
mov
out
add
fcmove
push
out
daa
mov
shrb
shrb
adc
in
lods
cmp
mov
int
sub
cltd
adc
dec
jle
jg
jo
imul
movsb
ss
outsl
pop
fldl
and
int3
stc
pop
jmp
sbb
stos
stc
mov
adc
mov
lret
mov
insl
leave
mov
insb
arpl
fistpl
pop
dec
pop
cwtl
sbb
frstor
mov
cmp
or
nop
inc
push
movsl
out
pop
cli
xor
aad
out
int3
fsubr
int
lret
jae
iret
imul
pop
cmpb
loop
fimull
or
inc
sbbb
mov
xchg
add
mov
pop
jecxz
add
inc
aaa
daa
jnp
ljmp
jno
jmp
jmp
ret
outsb
es
sbb
ret
dec
and
mov
or
inc
aaa
test
cmpsb
mov
mov
and
test
clc
cmp
sbb
std
add
xchg
xor
cmc
jnp
sbb
pop
leave
dec
push
lock
xor
dec
adc
rcll
push
fsubl
mov
mov
or
insl
sbb
dec
adc
push
leave
push
mov
pop
aaa
fnsave
out
mov
xchg
xor
dec
popl
cmp
ss
xor
insl
fsubl
and
add
dec
fdiv
inc
stos
movsl
addr16
pop
ds
ljmp
sti
mov
xchg
and
push
mov
test
mov
push
fsubl
ret
lcall
adc
cmp
dec
lea
je
lods
iret
jbe
xor
sub
cltd
xor
mov
cmpsb
stos
not
jl
fdivrl
not
pop
xchg
jnp
xor
in
xorl
push
dec
sbb
add
mov
rorl
cmp
cwtl
jp
out
jae
mov
jl
push
jne
pop
aam
xor
sbb
xchg
mov
and
mov
testl
inc
jae
sub
arpl
imul
aaa
mov
hlt
ficomps
aas
push
and
gs
sbb
mov
lahf
adc
push
xor
nop
push
fwait
sbb
pop
jbe
test
bound
pop
bound
aaa
fidivrl
pushf
jns
inc
xor
xchg
or
push
xchg
nop
cmp
sub
cli
loopne
ficomps
and
and
pop
push
lods
das
stos
aad
jno
cmp
inc
adc
roll
imul
movb
xchg
sub
jmp
inc
les
into
sbb
sti
inc
or
iret
dec
stos
data16
adc
into
leave
xor
je
and
icebp
sbb
lahf
and
mov
shrl
sti
shr
mov
out
add
aaa
into
and
mov
jo
mov
pusha
pusha
adc
xlat
inc
pusha
in
or
aas
jns
stc
jp
fwait
dec
test
mov
or
bound
mov
dec
inc
aam
lret
je
pop
dec
loop
lret
cmp
fidivs
test
pop
and
lret
je
fucomp
sbb
into
mov
nop
mov
sub
fidivl
jg
int
and
or
sbb
add
popa
sub
mov
popf
xchg
jns
lcall
ss
jb
inc
into
mov
sub
jbe
ficompl
cld
xlat
jbe
loopne
pop
cwtl
inc
in
rcrb
add
mov
orb
jg
into
lret
xchg
int3
jp
imul
pop
loope
or
or
dec
jge,pn
mov
loope
and
mov
negb
mov
jno
fimull
push
ficoms
jae
pop
mov
pop
ret
mov
sbb
rolb
rcrl
mov
clc
jge
pop
xor
fdivrs
sub
pop
loop
jno
cmp
jne
mov
jg
pusha
fisubs
sbb
sub
sahf
sbb
sbb
out
jnp
in
mov
sub
cmp
xchg
shrl
jnp
push
setle
ret
cmpsb
mov
xchg
aam
adc
adc
loope
mov
jns
stos
xchg
pop
xchg
jnp
clc
sbb
dec
incb
mov
out
jp
ret
dec
int
stos
xor
jb
stos
dec
mov
jno
gs
push
or
dec
iret
and
cld
outsl
test
aad
incb
pop
fstl
mov
rcrl
in
pop
mov
cmc
loope
or
xchg
xchg
pop
repnz
mov
leave
cmp
mov
jne
orl
pushf
movsl
lea
enter
clc
add
mov
arpl
out
fwait
xadd
push
test
xchg
add
pop
dec
lret
cs
push
lock
sbbb
adc
hlt
jbe
pop
fcomps
incb
jnp
addr16
cmp
dec
add
lret
nop
sub
fiadds
loope
inc
pop
and
in
fidivrl
or
dec
add
adc
aaa
ja,pt
sub
add
out
mov
sti
in
lret
sub
or
out
or
inc
or
lods
js
sbb
pop
mov
popf
pushf
pushl
ret
hlt
fildll
mov
stos
jle
push
pop
test
dec
xchg
out
test
sub
pushf
rorb
xor
aaa
hlt
mov
les
mov
das
ret
sti
push
sub
sub
aaa
pop
fstl
arpl
pop
test
popf
xlat
pusha
pop
out
out
loop
sub
dec
mov
ss
sar
and
das
or
out
xchg
je
fcompl
fwait
insl
mov
cltd
sub
push
cmp
xchg
xchg
inc
clc
sbb
or
cmp
pop
pusha
lcall
dec
fidivl
outsl
dec
jle
inc
test
and
or
jb
xchg
inc
add
jno
jge
fmull
imul
or
cltd
pop
adc
mov
das
mov
lcall
sahf
add
outsb
test
mov
jo
adc
pop
fnstsw
adc
data16
sbb
jbe
orb
inc
or
loope
fildll
dec
mov
ss
mov
push
inc
lahf
cwtl
add
pop
mov
cld
sbb
lock
mov
movsb
repz
sub
ret
xor
jne
mov
rcll
push
jmp
popl
mov
sbb
hlt
cmp
xchg
cwtl
jne
mov
push
xchg
test
mov
push
dec
mov
xchg
std
cli
js
ret
or
fwait
push
jns
push
fidivrs
jl
adc
push
test
adc
mov
mov
cmc
je
xor
sbb
mov
pop
in
pusha
es
mov
or
addr16
xor
inc
mov
nop
mov
xor
aaa
mov
jo
mov
mov
out
push
stos
shrl
push
ja
pop
xor
int
fs
or
das
dec
push
or
mov
scas
adcb
lds
xor
aas
loope
cmpl
mov
or
sbb
test
cmp
and
push
scas
jle
jge
mov
loope
push
jbe
cs
jns
mov
cmp
dec
xchg
sub
sarb
aad
mov
and
rcll
adc
test
add
xchg
cmp
add
cwtl
sub
mov
ret
aas
imul
cmp
test
inc
add
clc
shl
add
and
xor
loopne
cli
jbe
push
cmpsb
mov
jb
test
jl
inc
rcll
dec
mov
xor
leave
adc
cmp
stos
mov
dec
sub
aad
js
lds
pop
movsb
mov
push
mov
das
test
pop
into
fdivrs
cld
enter
popf
push
adc
adc
push
mov
and
les
lahf
loopne
push
mov
insl
fidivrs
cmp
mov
jmp
sbb
fisubrs
xchg
dec
std
jbe
repnz
fnstenv
jae
lret
inc
lret
insl
dec
dec
dec
arpl
cltd
jl
jbe
imul
dec
inc
fsts
xor
fisubrl
inc
mov
jmp
sti
sbb
jns
push
fwait
mov
sub
sub
cmc
mov
insb
outsl
or
sub
and
sub
sbb
and
mov
stos
divb
mov
inc
xlat
imul
and
shlb
insb
mov
inc
sar
sub
lret
sub
insb
and
xchg
jecxz
mov
rolb
mov
stos
pop
cmp
in
inc
nop
repz
push
mov
cld
xor
ficoms
or
cmp
xor
jg
dec
enter
fwait
dec
ret
jl
hlt
aas
add
hlt
jge
add
lahf
lods
xchg
ds
sub
mov
inc
shrl
push
mov
jnp
xchg
iret
aad
lcall
repz
insl
or
or
subl
lods
cli
xchg
sub
sub
ja
test
pop
stos
inc
mov
adc
or
iret
pop
jp
pop
lods
mov
ret
jp
add
pop
movsl
jns
je
into
ljmp
orb
mov
mov
lret
xor
push
adc
lret
push
mov
aas
psrad
divb
repnz
xlat
cmpsl
add
pusha
pushf
pushf
popl
pusha
movb
xor
clc
xor
bt
xor
movb
bt
xor
bt
test
xor
call
jmp
push
cmp
pop
lods
subl
mov
and
or
mov
or
pusha
mov
aaa
ss
aad
cmp
js
mov
sbbb
pushf
jno
mov
xor
mov
repz
mov
enter
adc
aad
inc
fs
pop
hlt
repz
sbb
fldt
or
xchg
mov
notb
ficoms
jg
je
jl
inc
jbe
fcomps
lret
sbb
fnsave
add
es
int
sahf
iret
sub
jb
mov
nop
sub
mov
fsubl
mov
popf
es
rclb
fildll
xchg
xchg
psubusb
cmc
rcrb
push
fidivs
cli
mov
test
lds
pop
jae
mov
ret
mov
arpl
push
jmp
mov
sbb
inc
pop
jne
mov
into
and
adc
mov
hlt
std
add
outsl
in
test
add
push
fildl
cmc
fcmovnb
dec
in
push
jae
and
rolb
or
adc
rcll
mov
jg
in
lahf
cwtl
mov
cmpsl
pop
faddl
popa
cmp
and
test
jnp
pop
lret
lahf
out
push
jnp
scas
jno
dec
sub
loop
push
lods
aaa
jnp
fimuls
mov
dec
jno
dec
cmp
roll
dec
data16
repnz
xor
pop
mov
adc
mov
in
xor
fwait
sbb
adc
pop
push
in
test
imul
jge
sahf
ds
sub
ljmp
mov
rcrl
ljmp
mov
out
xchg
arpl
add
mov
inc
mov
mov
mov
sub
mov
cmp
lods
stos
mov
outsb
xchg
lock
mov
jo
xor
out
cwtl
out
and
mov
pop
sub
movsl
js
or
lret
xor
add
pop
std
enter
mov
dec
xchg
add
les
xor
aad
cmc
cmc
xor
pushf
pushf
xor
jmp
mov
out
jno
xor
das
hlt
and
mov
dec
movsb
push
stos
stc
mov
lcall
inc
das
push
in
sbb
jnp
cmp
rcrl
cli
or
mov
jge
adc
mov
arpl
test
mov
nop
and
jns
ds
test
pop
cwtl
repz
call
ljmp
std
les
pop
or
nop
cmp
jo
inc
ja
push
ret
insb
jl
inc
aad
fs
and
jns
decl
adc
ljmp
test
mov
scas
mov
in
rorb
cmc
jno
mov
mov
repz
sub
mov
push
adc
push
out
xchg
cmc
jne
and
outsb
push
inc
std
mov
sbb
mov
mov
bound
dec
add
aaa
pop
xchg
sbb
dec
mov
sahf
xchg
and
jb
jno
ja
lds
mov
add
aas
add
fcmovne
add
add
int3
addr16
sub
mov
or
pop
sbb
dec
scas
or
pushl
xor
xchg
aad
jmp
cmc
cmp
dec
pop
pop
push
fwait
idivl
sarl
sbb
out
mov
popa
repz
push
xor
test
insb
pop
and
gs
mov
xor
adc
dec
and
repz
jbe
aam
cmpsb
add
dec
lods
insl
jp
mov
dec
cmp
mov
test
cmpb
pop
mov
inc
lret
and
into
xchg
and
mov
inc
jmp
test
xchg
push
adc
mov
dec
xor
lret
aaa
and
push
movsl
cmp
divb
out
and
adcl
mov
mov
fldcw
sbb
orb
mov
sub
add
mov
lcall
sub
inc
xor
dec
jl
cwtl
adc
call
mov
pop
sbb
nop
xchg
jmp
rclb
mov
xor
add
in
add
pop
jb
cmc
shll
or
push
push
inc
sar
mov
pushf
or
jno
inc
imul
xchg
adc
push
shlb
sub
fcomps
mov
xchg
andl
xchg
insb
mov
pop
push
leave
sbb
pushf
jae
and
sbbb
mov
jo
xor
add
mov
aas
in
pop
add
shlb
loopne
lcall
in
repnz
cmpsl
push
movsl
push
lds
bound
jnp
and
xchg
dec
mov
lret
or
cltd
mov
inc
call
xlat
mov
cmp
leave
inc
test
jmp
fadd
xchg
push
sbb
mov
push
and
mov
inc
call
out
sub
jp
inc
jnp
add
cli
nop
pop
shl
xor
push
jp
lcall
int3
pop
test
repnz
int
ja
mov
or
cmp
cmp
aas
leave
inc
inc
xchg
jbe
mov
and
xor
push
cli
push
leave
inc
cmc
pusha
adc
insb
push
cmp
divb
push
inc
mov
test
and
popa
sub
xchg
inc
sbb
andb
dec
aad
ret
cmc
jmp
pusha
in
andl
mov
pop
xchg
loopne
sub
fwait
sbb
jg
xchg
aaa
pop
mov
lahf
and
scas
push
call
lock
push
popf
or
or
sbb
popa
inc
add
int
das
test
sbb
clc
fwait
mov
adc
movsb
es
sub
rclb
dec
lea
push
lret
lods
movsl
mov
mov
or
push
jp
mov
mov
jbe
add
out
xchg
aad
stos
xor
das
stos
lock
and
jp
sbb
enter
jge
test
mov
push
push
in
lret
lock
je
mov
fbstp
out
or
int
enter
push
mull
dec
dec
loope
out
add
jb
cli
scas
movsb
xor
mov
movsl
notl
enter
popf
addl
test
or
jmp
sbb
mov
jbe
js
push
icebp
and
fildll
sbb
push
aam
ja
xor
rorb
jae
mov
loope
cmp
adc
inc
test
lahf
jae
inc
xor
cld
imul
cltd
adc
das
pop
jle
push
clc
xchg
pop
dec
sub
adc
or
std
xor
dec
das
adcb
les
js
and
ljmp
dec
mov
pop
adc
xchg
fs
inc
aad
insb
loop
cld
icebp
pushf
mov
xchg
es
hlt
hlt
fnstcw
aas
lds
lahf
mov
in
loop
push
js
hlt
mov
notl
jae
popf
shl
daa
fwait
adc
enter
iret
xor
dec
mov
gs
das
hlt
mov
dec
lds
outsb
test
cltd
xchg
ljmp
push
inc
stos
dec
iret
adc
ja
or
sbb
aas
in
inc
pop
into
scas
sub
enter
outsb
ljmp
lds
add
adc
pop
ffreep
fstl
mov
repz
idivb
adc
cmp
push
xlat
pop
xor
xchg
lea
xchg
push
out
movsl
leave
sbb
and
cld
push
adc
std
shlb
xchg
dec
adc
pop
or
test
loop
loope
out
mov
jnp
cmp
inc
rcll
lcall
add
inc
in
popf
inc
pop
inc
aas
shrb
inc
aaa
test
dec
push
push
xchg
pusha
xchg
and
push
movsb
push
leave
ror
sahf
mov
fstpl
xor
lret
sbb
jmp
ret
mov
xor
jbe
jmp
cmc
xor
scas
into
mov
imul
jo
insl
pop
sub
jp
mov
test
lahf
mov
mov
pop
cmp
jnp
mov
cmpsl
and
add
xlat
add
pop
aaa
mov
sbb
jnp
dec
sarb
and
pusha
xlat
rol
insl
pop
stc
scas
mov
cmp
mov
cltd
or
push
xor
xor
lret
rol
pop
imul
xor
jge
rcrl
sbb
sub
cs
insl
xor
es
lret
gs
sahf
cs
xor
mov
sbb
xor
jp
add
adc
adc
or
call
aaa
int3
in
sub
scas
ss
jle
fdivrs
idivb
pop
sbb
movsl
add
scas
outsb
call
mov
negb
jbe
lods
lcall
mov
sbb
push
faddl
mov
dec
sbb
inc
fdiv
loopne
in
pushf
adc
lods
and
sub
fmuls
jg
inc
cmp
cltd
mov
fimuls
test
xchg
out
unpcklps
xor
jmp
andl
jae
repz
mov
or
mov
xor
stos
push
inc
inc
jp
outsl
mov
inc
popf
cmp
push
rcrb
cmp
jne
and
mov
push
pop
add
rolb
jbe
mov
and
mov
pop
jp
rcrb
jo
xchg
aad
int3
jne
pop
push
in
sbb
pop
add
enter
xchg
jae
scas
push
xchg
jp
or
xor
jmp
andb
push
loopne
cld
lahf
ret
ret
icebp
mov
xchg
mov
sbbl
cli
mov
jmp
mov
jae
push
fdivrp
movsl
out
fs
adc
cmp
lret
sub
fldcw
or
dec
lret
dec
das
mov
roll
cli
cmp
cs
cmpsb
cmp
push
mov
xchg
inc
xlat
stos
mov
jo
add
pop
scas
mov
xor
shll
or
pusha
ror
loopne
pop
xchg
adc
jecxz
add
xchg
sbb
cmp
xor
mov
inc
loop
jnp
push
dec
cmp
cmp
cwtl
jae
stos
fsubs
cmp
push
gs
cltd
and
iret
push
lcall
rorb
mov
sub
insl
add
lods
adc
add
imul
pop
insl
add
adc
cs
inc
mov
ret
add
mov
fidivs
ljmp
pop
cmp
in
shlb
sub
out
insb
xchg
fisubl
or
jmp
popa
rcr
les
mov
xor
into
ret
mov
arpl
dec
int3
adc
lcall
bnd
push
lods
fwait
adc
mov
adc
les
sbb
lret
aas
inc
inc
or
xchg
addr16
cwtl
and
xlat
aas
pop
fcompl
xor
imul
imul
jo
fidivl
pushf
bound
add
std
xchg
pushf
stos
or
xchg
movsl
cwtl
pop
inc
cmp
not
inc
mov
push
inc
mov
mov
faddp
fwait
mov
pop
shl
jo
aas
sarl
movsb
lea
push
inc
push
std
xchg
sbb
icebp
xor
xchg
popa
cmpl
nopl
cmp
cwtl
push
jp
inc
aad
rolb
sbb
and
dec
push
add
inc
das
fldenv
popf
pop
nop
or
adcl
mov
pop
popf
or
mov
aas
push
xchg
or
sbb
xchg
ficomps
mov
aas
imul
cli
jp
cmpsl
mov
adc
mov
dec
fdivrp
clc
push
sub
ljmp
es
lods
das
fldl
xor
aas
sbb
mov
inc
cs
int3
mov
sbb
jno
push
pop
mov
mov
push
mov
pop
jnp
ljmp
and
add
mov
adc
xorl
or
pop
adc
int
mov
aas
mov
mov
in
push
sahf
jmp
aad
cld
dec
fbld
add
std
xor
add
adc
push
mov
cmp
mov
jecxz
pop
loope
out
jne
cmp
xchg
fadds
rolb
push
shll
jae
int
pop
sbb
push
mov
add
iret
pusha
push
stc
aad
cwtl
xchg
mov
mov
lods
jle
call
lret
cmp
icebp
mov
shll
sbb
sub
push
daa
cmpsl
divb
lea
sub
cmp
bt
xorl
cmp
xor
cmp
pushl
popf
mov
pushl
ret
movl
pushf
movl
push
mov
push
pusha
lea
jmp
sub
lock
push
jno
push
pop
icebp
jbe
xor
inc
lret
mov
decl
clc
fbstp
and
push
adc
shll
jae
dec
xchg
xor
xchg
cmpsb
imul
aaa
mov
inc
add
mov
in
xchg
mov
call
or
and
xchg
mov
outsb
inc
push
subb
cld
bnd
pushl
sti
stos
dec
lock
ror
outsl
pop
add
movsl
xor
subl
sarb
roll
mov
mov
in
jmp
and
pop
ret
jge
mov
sbb
sti
daa
lods
stc
jge
lahf
test
arpl
stos
xor
adc
daa
or
lods
ljmp
mov
lods
imul
or
and
sub
jge
aam
jae
cmp
and
int
sbb
adc
cli
cmc
xchg
out
or
mov
mov
aad
movsb
inc
call
cltd
sahf
mov
pop
in
roll
mov
mov
push
add
addr16
push
and
mov
sub
jne
push
loope
addr16
xchg
adc
mov
in
mov
mov
arpl
jno
ljmp
pop
dec
or
mov
jno
stc
hlt
xor
aas
aaa
leave
cs
mov
add
jbe
in
fldl
loopne
mov
xor
cltd
push
fcoml
adc
stos
pop
jmp
lds
inc
mov
inc
mov
pop
insl
pushf
lods
jns
inc
jnp
push
in
cltd
and
loopne
pop
pop
or
dec
push
aas
jns
adc
je
outsl
and
jecxz
push
repz
cwtl
test
inc
mov
test
hlt
je
adc
fwait
push
fs
push
cwtl
je
jmp
mov
inc
fildl
jmp
cltd
push
arpl
push
xchg
pop
inc
shlb
lahf
sbb
stos
mov
mov
andb
push
or
addr16
imul
dec
mov
jl
je
in
mulb
xchg
jecxz
popf
jo
push
inc
cmp
aad
cmp
and
xorl
xor
jg
das
cmp
push
cmc
cmpsb
lret
lods
lahf
xor
adc
sub
cmp
adc
or
fstps
dec
ja
or
shll
lods
fistl
lret
lock
js
add
and
ds
adc
mov
or
fstpt
xchg
rcr
rcll
pop
adc
stos
push
repnz
sub
repz
movaps
jnp
or
jle
in
sti
add
stos
mov
les
into
loop
daa
dec
push
dec
lret
mov
fsubrl
pop
fcmovnbe
sbb
jns
push
ret
dec
xchg
arpl
in
mov
out
ja
int
cwtl
sbb
add
mov
imul
cmp
and
mov
jecxz
mov
in
push
and
pop
inc
mov
push
lods
jb
addr16
movsb
lods
mov
in
pusha
cmpsb
mov
repnz
xor
sbb
jb
imul
xchg
inc
popf
ds
sbb
pop
mov
adc
cld
loop
and
xor
mov
inc
push
add
jno
add
dec
mov
dec
push
push
inc
cmp
sub
cwtl
cmp
fildll
mov
lret
rcrl
and
push
jae
nop
jns
mov
divb
dec
jae
bt
xor
pushl
call
call
xor
bt
bt
xor
stc
bt
xor
call
xor
push
xor
stc
xor
push
pushl
popf
movb
pushl
ret
vcvtsi2sd
inc
int
dec
and
mov
cmp
int
mov
and
fisttpll
or
sbb
inc
leave
push
out
test
adc
push
xor
bound
pop
or
adc
addl
sbb
imul
or
cmp
ss
pop
and
shrb
sahf
into
inc
test
cmp
rclb
cwtl
push
aaa
jns
test
test
sub
ss
xor
pop
les
scas
lcall
or
shrb
adc
das
frstor
jl
bound
and
push
hlt
push
bound
adc
push
mov
loope
cmpb
jecxz
mov
jg
or
add
dec
mov
pop
stos
imul
call
mov
das
push
adc
xchg
jge
repz
pop
or
ljmp
shlb
scas
lock
or
mov
lock
xor
and
adc
cmp
mov
lahf
stos
ret
fadd
inc
cmpsl
pop
loop
mov
rorb
test
aas
inc
sub
outsb
hlt
cmp
push
dec
or
jg
sti
mov
test
adcl
or
ljmp
add
shlb
bound
mov
repz
and
aaa
bound
lahf
out
sub
inc
inc
xchg
xchg
mov
push
pop
dec
sbb
xchg
sub
mov
mov
mov
negb
mov
mov
lods
les
arpl
sub
lods
mov
inc
adc
mov
inc
sub
pushl
out
nop
jno
scas
xor
cmp
into
pop
cmp
add
out
outsb
adc
mov
adc
mov
sarb
aaa
out
scas
clc
xchg
loop
int3
inc
scas
bound
mov
inc
pop
insb
and
jp
cmc
insb
out
sub
iret
enter
pop
lea
shl
rcrl
fcomi
pop
mov
fisubl
mov
cli
push
ret
push
pop
jno
ss
out
aad
mov
cmp
mov
sbb
xchg
and
loope
xchg
xor
jp
cmp
in
xchg
add
cmpl
sti
jns
ja
out
and
push
data16
mov
xor
daa
mov
enter
flds
adc
adc
mov
mov
rcrb
cmp
adcb
xor
sbb
sub
or
les
pop
push
xchg
js
mov
repz
xchg
pop
pop
stos
decb
sub
daa
int3
pop
shr
and
xor
xor
add
andb
push
stos
insb
pmulhw
sub
cmp
jle
push
jecxz
add
xorb
adc
fnsave
popa
and
mov
stc
jbe
push
mov
push
cmp
adc
out
mov
hlt
lea
ffreep
aas
or
repz
imul
mov
addr16
aaa
and
mov
cmc
or
cmp
push
fwait
xor
ljmp
and
ret
mov
mov
sbb
call
movsl
scas
pop
mov
mov
popa
mov
and
pop
jg
pop
mov
mov
jg
jp
cmpsb
outsl
aaa
or
lahf
enter
lret
lds
rclb
lahf
int3
dec
pop
cmpsb
popf
dec
aaa
outsl
pop
outsb
cmpsb
lahf
jae
sbb
rcrb
mov
inc
fsubrl
mov
mov
sbb
add
lret
lds
push
sbbb
fnstsw
mov
inc
lret
mov
dec
filds
cmp
push
shll
mov
lahf
mov
in
push
cmpsl
and
gs
mov
adc
mov
push
push
and
std
xchg
add
push
pop
aas
pop
push
xor
pop
addb
jno
sub
push
int
cltd
xchg
subw
lret
lea
fidivs
inc
or
lret
cmp
clc
lahf
int3
inc
cwtl
daa
and
push
add
push
divb
iret
imul
and
and
pusha
movl
pushf
movw
push
lea
jmp
call
movl
pushf
pushl
movw
movb
lea
jmp
lea
jnp
push
call
pop
fsubrs
mov
cmp
testb
lahf
hlt
inc
mov
pop
insb
stc
int3
repnz
mov
sub
add
mov
sub
lret
loop
cmp
scas
mov
test
mov
mov
mov
inc
bound
push
rcll
mov
or
pop
xor
mov
xor
push
pop
arpl
inc
cld
xchg
testb
dec
int
bnd
sar
add
push
bnd
xor
inc
mov
imul
fs
add
push
outsl
mov
call
dec
in
aaa
push
aas
push
fs
add
stc
lcall
push
add
mov
cmp
dec
int
loopne
cs
push
outsl
jg
gs
sub
sub
jo
cs
fsubl
test
hlt
aad
pop
fnsave
into
xchg
jl
or
add
out
insl
rcll
cmpsb
lcall
add
dec
push
cmp
aad
iret
add
test
jb
andb
sub
orl
repnz
dec
leave
out
push
cmp
mov
add
ja
mov
cmp
loopne
jle
push
add
andb
mov
push
push
xor
mov
jae
pop
test
mov
push
pop
xor
movzbl
test
xor
dec
mov
sbbb
ret
test
mov
outsl
and
push
lahf
ss
iret
and
cmp
mov
ss
in
sti
icebp
nop
mov
jbe
cmp
arpl
sbb
cmpl
xchg
ljmp
push
sbb
ds
les
inc
pop
or
mov
mov
mov
or
lods
cmp
xor
and
iret
jmp
movl
movb
pushf
pusha
push
lea
jmp
movl
pushf
lea
jmp
xor
cld
std
pushl
popf
mov
pushl
ret
pushf
pushf
popl
movb
call
jmp
stos
pop
outsl
add
cmpsl
mov
and
add
mov
dec
test
pop
in
mov
cli
fmuls
pop
ss
imul
cmpsl
jmp
daa
jmp
or
ret
adcl
testl
jno
cwtl
testl
cld
je
jmp
cwtl
jae
push
xchg
stos
xor
push
jl
sarl
push
shll
testl
lock
fdivrp
loope
mov
xchg
stos
mov
lds
pop
jne
sarb
int3
int
fs
mov
inc
jae
jnp
ds
lcall
test
mov
and
call
add
xor
test
push
sub
iret
ljmp
ret
lret
jle
stos
pop
lods
xor
test
inc
sub
inc
jns
cmp
xchg
mov
fldl
push
daa
xor
xchg
vshufps
bound
daa
dec
das
adc
and
inc
std
mov
aas
aas
adc
je
push
mov
sahf
dec
loop
cmpsl
cmp
ret
int
aas
icebp
inc
mov
pusha
xor
adc
cli
dec
fildll
mov
cmp
mov
mov
repnz
dec
in
pop
jb
jns
roll
test
mov
cld
addb
jns
jnp
sbb
fbstp
fs
stc
inc
std
test
dec
xor
cmp
rolb
add
pop
and
fsubrs
mov
jo
jns
js
adc
or
pop
xor
cmpsb
xchg
pop
or
or
xchg
push
push
dec
movsl
jle
cmpsl
add
pop
and
mov
pop
sub
cwtl
imul
xor
or
xchg
and
in
push
shl
fnsave
les
popa
out
add
add
sub
or
iret
pop
fistl
inc
inc
sub
ret
mov
add
lods
test
push
mov
jmp
lret
iret
jb
push
xchg
lcall
int
sbb
scas
jnp
divb
movsb
push
and
ja
pushf
movl
jmp
jl
pushf
pushf
pushf
movl
lea
jb
pushf
movl
pushf
movb
lea
jmp
daa
and
test
lods
ret
call
jns
pop
jb
pop
lods
add
cmp
pop
sahf
into
mov
adc
xor
jb
in
dec
out
cmp
adc
pop
pop
or
push
mov
xlat
pop
stos
inc
mov
and
lcall
mov
lods
add
repz
xchg
insb
jmp
aad
cmpsl
mov
dec
jbe
stos
int3
les
sub
mov
cmp
sahf
imul
stos
sahf
in
les
cmp
fdivl
into
mov
xor
mov
push
pop
mov
and
sbb
jns
pop
xor
cmp
mov
dec
fists
cmp
mov
mov
cmc
das
data16
sbb
js
loop
mov
scas
jns,pn
xchg
dec
jmp
mov
adc
popf
ret
fdivl
rcr
pop
sbb
nop
mov
pusha
dec
aam
loop
push
hlt
andl
pop
ljmp
lcall
cwtl
mov
enter
out
push
bound
pop
inc
add
test
pop
in
scas
loopne
aaa
pop
cmp
push
push
sbb
aaa
jp
imul
push
in
ds
dec
fimull
sahf
cmp
push
sub
scas
adc
xchg
adc
mov
xchg
xchg
outsb
outsb
cmp
cmp
lock
aas
sarl
repnz
and
out
mov
lret
sub
xchg
inc
test
mov
loop
hlt
movl
sub
hlt
and
push
xchg
adc
pop
jl
and
lahf
stos
les
testl
adc
cmpsb
bsr
imul
lock
fdivr
notl
or
xor
jns
pop
jmp
push
or
rep
mov
test
std
cld
push
jnp
xor
and
int3
and
mov
psubsw
pop
cli
lahf
dec
dec
repnz
lret
mov
lods
imul
cwtl
jecxz
or
gs
xchg
enter
dec
std
and
pop
xor
dec
iret
adc
fbld
fisttpl
test
inc
test
push
ficomps
xchg
inc
cmp
push
sbb
xor
pop
dec
push
repnz
aam
inc
fcoms
sub
pusha
popf
shll
lcall
and
sarb
xor
adc
xchg
mov
push
dec
mov
jnp
ss
movb
xchg
jge
inc
push
sbb
push
push
or
push
out
mov
rclb
ror
xor
push
fsts
dec
popa
shl
pushf
mov
lcall
and
jae
or
test
xchg
clc
test
add
das
int
xchg
test
in
inc
insl
pop
loope
pusha
pop
mov
jae
fwait
lods
pop
pop
xchg
stos
cs
sbb
sub
jmp
es
lret
fisttpl
xor
dec
sbb
push
cs
fsubs
sbb
js
xchg
aad
mov
mov
dec
inc
mov
jns
loop
dec
mov
mov
shrb
ret
enter
mov
mov
in
push
addr16
enter
dec
cmp
std
sbb
notb
mov
loope
add
nop
lret
xor
out
sub
sbbl
in
pop
mov
sbb
out
aaa
aam
mov
mov
data16
aam
add
jno
jge
repnz
cltd
mov
jae
pop
sbb
pop
adc
scas
stos
jno
add
add
cmc
js
xor
out
xor
shrb
sahf
push
cmp
aaa
cmp
iret
mov
xchg
flds
test
mov
xor
stc
jle
ljmp
adc
xor
sti
stc
push
jo,pn
js
jne
aad
scas
stc
jp
aas
enter
fisubrs
fiaddl
xor
xchg
addr16
mov
fildll
pop
xor
popf
xchg
imul
scas
dec
subb
dec
repnz
push
icebp
orb
icebp
jae
cmp
push
jbe
xor
mov
mov
mov
loopne
fadd
inc
hlt
mov
mov
add
dec
subl
push
fcmovbe
cmp
add
dec
sbb
add
dec
inc
xchg
adc
loopne
cmp
or
jbe
rcll
push
sbb
not
or
aad
outsb
inc
sbb
xor
int3
dec
divb
sub
rclb
cmp
jle
or
mov
dec
popf
out
cmp
ret
divb
jne
ja
cmp
xor
in
test
movl
add
jnp
push
xchg
das
mov
pop
jl
movsl
lret
sbb
mov
loop
and
cmp
call
mov
add
cmpsl
xor
js
sub
mov
push
je
add
sarb
lods
and
sbb
int3
cltd
push
enter
lret
sarl
mov
inc
rorb
mov
dec
mov
xor
pop
xorb
les
sbb
repz
mov
xor
dec
sbb
sbb
insb
sub
bound
imul
push
sbb
jl
ja
sarb
cmp
sub
fistpl
add
enter
pop
data16
jbe
dec
mov
jp
mov
scas
jp
cltd
push
loope
push
clc
aaa
xor
cwtl
cld
roll
push
add
gs
add
addr16
js
aas
adc
xchg
stos
sbb
outsb
xchg
pop
mov
test
cmpsb
out
in
lcall
scas
adc
imul
mov
dec
xor
cli
sub
mov
push
sub
in
out
loope
sub
push
out
ljmp
insb
pop
lcall
filds
xchg
push
hlt
push
sub
jo
in
movsl
adc
arpl
xchg
and
adc
lahf
pop
adc
push
xchg
push
fstpt
jecxz
jp
cli
sbb
icebp
and
push
xor
shl
cmpl
int3
pop
inc
fwait
dec
out
scas
inc
mov
mov
testl
dec
inc
and
aas
or
hlt
outsl
push
data16
in
jae
orl
jl
push
adc
pop
mov
cwtl
mov
or
ds
loop
xchg
leave
mov
pop
fldenv
push
dec
clc
mov
sub
aam
jo
stc
mov
fistl
xor
fstl
pop
and
pop
in
insl
pop
pop
in
lret
stc
mov
inc
xchg
in
cltd
jmp
into
lahf
andl
jge
jno
addr16
cmp
mov
popf
jb
or
insb
fdivrs
psubb
mov
test
push
test
repz
psubb
xor
sbbl
pop
divl
xor
push
and
lahf
lret
push
cltd
cltd
pop
mov
pop
data16
nop
es
sarl
popf
test
xor
jae
ja
aam
pop
push
jp
xor
jns
jno
fcoml
leave
push
movaps
mov
mov
cmpsl
clc
mov
rorl
pop
addr16
cs
neg
inc
inc
stc
scas
adc
rcll
cmp
hlt
inc
jns
add
sub
mul
insb
dec
ret
js
int3
fcoml
imul
sbb
outsl
xchg
lock
inc
or
pop
jecxz
fistpll
lds
popf
dec
mov
mov
dec
jg
rcl
rcrb
jo
ficomps
sbb
sbb
jb
push
sbb
jecxz
jno,pt
les
push
mov
sub
push
lea
dec
xchg
fwait
std
mov
dec
inc
mov
int
sbb
adc
push
cmc
into
pushf
scas
cli
mov
sub
jg
xchg
dec
push
xchg
sbb
cmp
or
pop
fimull
sahf
pop
xor
les
mov
mov
adcb
jae
subl
lahf
dec
xlat
inc
xchg
fists
test
adc
nop
jb
mov
sub
pop
mov
pop
ret
inc
and
sub
movsl
mov
jno
cmpsb
fdivl
inc
mov
pop
in
insl
pop
cli
mov
jmp
mov
stos
addr16
jle
cmp
pop
pop
rcl
xchg
leave
xchg
mov
aad
inc
out
andb
xchg
out
cmp
out
mov
lock
xor
repz
dec
gs
insl
shr
hlt
dec
movsb
hlt
cmp
cmp
mov
mov
divb
loop
add
std
xlat
inc
clc
and
jno
push
insl
lock
aam
scas
lahf
mov
movsl
daa
pop
dec
mov
mov
mov
arpl
sub
and
repnz
inc
das
cmp
call
daa
lds
iret
daa
das
push
xchg
ret
xchg
sbb
lea
pop
or
lret
pop
mov
adc
call
dec
mov
icebp
dec
aaa
or
addl
mov
dec
or
das
in
stos
pop
push
push
mov
inc
ret
add
push
push
das
outsl
sbb
jbe
inc
scas
jae
sarl
cld
fsubs
imul
or
xchg
sub
xchg
pop
add
xor
xor
or
sbb
push
test
flds
movsb
dec
test
cmp
ret
dec
lods
hlt
ficomps
stos
and
inc
xchg
bound
scas
dec
cmp
in
mov
push
push
scas
inc
inc
mov
pushf
fs
loopne
ss
lret
ficompl
clc
mov
mov
push
sti
cmpsb
adc
mov
in
mov
and
lods
in
mov
mov
scas
testb
sub
lret
fisubrl
lret
out
cli
mov
out
repz
lret
movsb
xor
xchg
and
test
out
pusha
jo
or
xor
xchg
es
rcll
arpl
shlb
das
mov
cmp
mov
jns
ds
lea
mov
mov
ficoml
repz
or
jae
pop
push
pop
out
in
pop
mov
push
test
stc
mov
inc
stos
pop
lods
dec
push
add
cli
mov
dec
mov
mov
test
inc
int3
sbb
and
jnp
arpl
xor
imul
or
enter
or
mov
sar
or
in
and
ja
cmpb
push
ret
push
and
mov
push
and
xor
fs
add
int
add
xchg
call
mov
xchg
cmp
cmp
rol
loop
adc
xor
in
es
pusha
add
cmp
jmp
shll
je
les
scas
push
jo
arpl
pushf
and
rcll
and
cmp
pop
test
jmp
mov
mov
data16
ror
jmp
sbb
pop
lock
enter
testb
mov
fwait
and
shlb
mov
std
mov
aas
fs
xchg
and
inc
enter
lcall
iret
into
repz
adc
aaa
lahf
movsb
pusha
out
pop
fldcw
jle
sub
or
fstp
sub
mov
pusha
xchg
lds
inc
inc
stos
xor
jp
pop
aaa
adc
ficoml
in
std
sub
lret
xor
mov
fcmovu
xor
test
adc
insl
push
shll
out
and
pop
jle
scas
mov
pop
aad
test
or
push
das
popa
xchg
pop
adc
repnz
call
imul
push
sahf
jecxz
outsl
jl
in
rolb
xor
jnp
setbe
in
jae
inc
xchg
sub
cmp
lods
frstor
and
inc
xchg
addr16
inc
adc
in
lret
fistl
add
pop
and
add
adc
test
add
arpl
push
or
xor
jb
cmp
mov
mov
lcall
adc
in
lretw
stc
mov
inc
adcb
sti
call
rcl
fisubl
mov
pop
faddl
mov
mov
ret
in
jecxz
mov
jmp
jl
dec
xchg
push
cmp
imul
inc
insl
jp
aaa
mov
mov
sbb
arpl
pop
pop
movsb
pop
add
sbb
icebp
push
arpl
pop
mov
divl
push
int
fistps
inc
aas
faddl
push
push
fneni(8087
sub
jecxz
inc
popa
js
jle
data16
aad
lcall
mov
loopne
les
mov
add
pop
mov
lret
xor
push
repz
scas
cwtl
repz
sti
mov
or
push
hlt
push
or
outsl
sbb
std
cmp
push
repz
out
xchg
call
adc
push
xor
cli
fisttpl
inc
inc
stos
les
mov
mov
push
out
outsl
cmc
inc
push
adc
mov
xorb
push
andb
fcmovb
lods
inc
inc
outsl
jp
out
pop
mov
test
dec
outsb
in
jno
pop
in
rcrl
les
mov
and
icebp
loopne
imul
xchg
dec
mov
inc
xchg
adc
and
repz
in
pusha
xor
and
inc
pop
popf
xor
or
insl
mov
sbb
jmp
sbb
jns
dec
rcrl
stos
sub
or
pop
pop
xchg
adc
jno
clc
cltd
push
pop
xor
aad
clc
cmp
test
repz
cmp
sahf
sub
ret
stos
push
rcrb
call
nop
xor
mov
je
icebp
push
enter
leave
mov
fcmovnb
rolb
nop
cmpsb
pusha
pop
mov
inc
jno
add
dec
aas
popa
sub
jle
jns
nop
lea
das
scas
cmp
dec
jl
and
inc
or
cmp
mov
mov
add
push
aad
mov
ja
sahf
dec
push
cmp
jnp
jno
ja
sub
arpl
in
sbb
frstor
add
sbb
loope
fsubl
push
popf
lds
pop
dec
les
mov
pmaddwd
aam
call
imul
fimull
push
adc
add
fs
add
add
xchg
mov
sbb
xchg
sahf
adc
arpl
mov
test
mov
sub
push
xchg
popa
xor
faddl
movsb
sbb
in
pop
push
jg
pop
scas
lret
adc
xor
pusha
bound
stc
adcb
stc
jl
sbb
mov
xchg
adc
push
pop
shr
sub
push
adc
es
and
jmp
adc
sahf
lret
push
cmp
fldt
sbb
inc
outsl
or
jecxz
frstor
dec
xchg
inc
rcrl
push
mov
ljmp
je
pop
aam
repnz
and
mov
fwait
push
jle
iret
or
ds
or
cld
mov
insl
jae
addb
xor
jnp
inc
rcll
push
inc
mov
push
test
fstpt
aam
mov
jo
sub
lcall
call
mov
mov
lcall
mulb
stos
pop
dec
pop
inc
mov
pop
int3
inc
cmp
popf
stos
jno
mov
mov
or
pop
ret
subl
xchg
in
xor
sbb
pushf
pop
adc
stos
pop
cmp
test
xor
and
mov
adc
jmp
xchg
fs
icebp
mov
push
pop
adc
inc
test
hlt
sbb
sbb
sbb
popa
fisubs
mov
mov
mov
nop
fmull
repz
shr
push
pop
sub
pop
xchg
lods
faddl
clc
push
mov
mov
mov
imul
loop
push
shll
icebp
add
cmp
cwtl
aas
stc
call
roll
ss
sub
dec
adc
rol
cmp
sbb
rcrl
push
int3
addr16
lret
mov
jnp
add
xchg
inc
cld
xchg
jge
pop
insb
test
out
pusha
jno
xchg
in
inc
stos
dec
aaa
loopne
cmc
mov
add
sbb
xchg
xor
jmp
xchg
pop
data16
jg
stos
push
mov
jo
cli
xchg
scas
xchg
pushf
ret
es
ret
ljmp
add
pop
lock
sbb
cmc
mov
ret
fbstp
mov
js
scas
add
or
jb
adc
fisubrl
xchg
xor
add
push
jbe
insl
mov
lret
pop
gs
pop
push
mov
rcr
xchg
push
jbe
notl
inc
ret
jge
sti
xchg
daa
in
outsl
pusha
inc
adc
pop
fsubl
mov
fisttps
push
enter
push
jecxz
xchg
pop
aad
in
das
ja
mov
imul
fisttpll
in
mulb
inc
iret
pop
sarl
lds
cmp
jge
in
sub
cmp
adc
mov
xchg
fbstp
dec
shr
xchg
push
adc
xchg
filds
cmpsb
mov
add
test
fdivr
fisttps
and
inc
push
mov
jns
loopne
sarl
das
and
inc
mov
flds
jmp
adc
sub
add
arpl
sbb
int
dec
fwait
sbb
sahf
jmp
out
mov
loop
xor
dec
rcl
test
lods
popf
and
mov
cld
dec
push
clc
jmp
push
push
loopne
rorb
fmull
mov
test
out
xchg
aas
negl
fnstsw
adc
jno
xor
ret
push
in
ds
add
test
rorl
lret
jecxz
jmp
pop
test
add
sub
lods
jnp
pop
in
enter
sbb
aam
push
mov
lret
and
sbb
dec
jbe
fisttpl
lret
jecxz
cmp
jns
test
jne
cmp
loopne
pop
stos
xor
dec
nop
cmpb
xlat
sbb
xor
jmp
sahf
xchg
rep
popa
push
pop
inc
rolb
insb
lret
sbb
and
or
in
pop
cli
popa
loopne
mulb
dec
jb
adc
les
nop
xchg
lods
push
aas
lds
mov
mov
pop
xrelease
jmp
inc
fcompl
jmp
stos
sub
imul
sub
jle
enter
mov
jl
addb
movl
lods
adcb
mov
out
fstpl
inc
roll
push
adc
push
ss
stc
insl
pop
int
pmuludq
out
push
fiaddl
or
and
xor
and
cs
test
mov
hlt
cmpsl
inc
jmp
jge
jg
mulb
push
pop
xchg
cld
cmpsl
stos
fmuls
cmp
adc
imul
out
mov
std
int3
cwtl
popa
xor
int3
pop
divb
movl
call
xor
clc
stc
xor
stc
xor
cmc
xor
movb
xor
cmc
bt
xorl
std
stc
pushl
popf
pushf
mov
pushl
ret
pushf
pushl
pusha
movl
pushl
pushf
push
movb
lea
jmp
call
test
push
mov
inc
jecxz
inc
pushw
pop
mov
imul
push
mov
fdivr
and
stos
mov
dec
jecxz
sbb
lods
push
inc
mov
out
mov
sbb
fidivrs
sub
jns
pop
push
gs
into
add
xchg
push
pop
dec
adc
out
mov
jb
mov
repz
mov
xor
cmp
gs
in
inc
mov
jb
enter
mov
out
xor
mov
add
cwtl
jmp
push
push
rorb
rolb
lock
rcrl
sahf
std
sbb
std
push
gs
sub
ja
popa
inc
pushf
lds
addl
or
jnp
jb
push
push
pop
jae
dec
cltd
xor
icebp
jp
adc
jmp
push
inc
xchg
loop
push
cld
lods
lret
jmp
jmp
pop
and
add
call
dec
push
dec
mov
lods
mov
ja
mov
sbb
inc
xchg
mov
adc
xchg
sbb
add
shrb
pop
iret
sbb
push
or
xor
lahf
popf
outsl
repz
cmpsb
fdivrl
xor
and
pusha
cmp
adc
addr16
pop
jge
adc
dec
cs
mov
cmp
sub
xor
dec
xchg
loopne
scas
mov
fstpt
cltd
mov
push
imul
stos
lret
dec
aas
lret
cmp
adc
lret
icebp
inc
daa
loop
lods
stc
jl
fcmovne
ret
scas
xor
dec
outsb
in
into
rcll
or
xchg
lds
lods
xor
js
out
mov
push
xchg
sahf
cltd
out
mov
mov
mov
add
sbb
popf
cmp
out
popf
xchg
mov
sbb
push
inc
push
push
and
sti
into
mov
xor
push
enter
sub
sti
out
iret
test
adc
repnz
cmp
fdivl
pusha
jl
cmp
jecxz
push
scas
pushf
aas
pop
lret
mov
mov
fildll
pop
xchg
cwtl
aam
push
iret
lahf
pop
lods
cmpsl
test
sub
jbe
cmp
xchg
jno
subl
jg
popa
push
jae
inc
mov
and
adc
arpl
insb
pop
or
or
xchg
aaa
scas
push
in
arpl
clc
pop
jnp
mov
push
cmc
xchg
ret
int
daa
jo
mov
ret
scas
dec
cmpsb
adc
out
mov
movmskps
pop
mov
icebp
jp
inc
shrl
fs
cli
cld
pop
and
jecxz
xchg
test
rcr
lret
jnp
les
lods
loop
xchg
pusha
sub
jl
adc
jo
cmp
cmpl
imul
shrl
push
add
sbb
scas
jecxz
pop
in
adc
push
xor
ds
xchg
jg
cmpl
movsb
push
cmc
xor
out
push
shrl
and
mov
aaa
add
scas
jp
and
enter
xchg
lret
in
mov
loopne
push
jns
xorl
jb
xor
imulb
adc
es
in
jle
inc
idivl
mov
inc
push
or
inc
inc
sbb
jae
and
lds
data16
xchg
mov
incb
inc
mov
divb
sub
ss
inc
mov
das
xor
sub
out
pop
aas
xor
repz
in
out
pop
aas
xchg
insb
into
pop
das
push
mov
lods
ja
mov
dec
imul
and
lret
mov
aaa
std
sub
in
push
cmp
jo
out
mov
cmpsl
jbe
add
js
fistpll
sub
dec
lock
push
and
loop
mov
loope
repz
das
loop
ss
and
flds
lods
push
clc
cld
fadds
sbb
xchg
cld
outsl
pusha
sti
push
call
shlb
mov
push
push
sarl
nop
dec
push
push
aaa
stc
lods
subb
out
lds
jge
es
inc
pop
jl
push
repz
loop
add
xchg
lcall
mov
out
ret
nop
pop
xor
fsubs
xor
stos
push
inc
mov
dec
popf
fcmovu
fsub
stos
pop
pop
test
pusha
mov
insb
cmp
pop
xorl
cmpsl
in
lret
cwtl
shrb
mov
test
jge
les
pop
aam
xchg
jg
stos
mov
fdivrl
fs
out
xor
iret
jp
cmp
pop
mov
mov
mov
mov
ret
scas
std
fcoml
inc
lret
jg,pn
lods
lods
adc
popf
push
pop
lock
and
inc
pop
mov
icebp
mov
pushl
jmp
movsl
fcmove
xor
jbe
dec
hlt
icebp
adc
inc
ss
xor
sbb
dec
inc
fdiv
pop
in
lock
ficompl
inc
rcrl
inc
out
ds
cmp
add
adc
and
out
xchg
outsb
xlat
inc
adc
or
int
aam
dec
push
repz
mov
rcrb
inc
xor
xchg
push
test
cmpsl
lea
sbb
sub
xchg
nop
shlb
lahf
out
cwtl
in
cmpsl
xor
roll
pop
inc
dec
insb
lods
idivb
xor
repnz
mov
lods
xor
in
mov
and
dec
nop
sbb
scas
jge
push
jbe
jg
mov
pushf
fs
cmc
divb
jae
mov
push
fsubrl
mov
sbb
or
mov
add
xor
inc
shrl
cmpsb
jge
lods
mov
fadd
push
xchg
fwait
pusha
sub
ljmp
cmp
xchg
push
cmpl
daa
adc
sub
popf
or
add
dec
ffree
mov
loope
sti
sub
negl
push
xor
pop
js
or
outsb
push
aam
shl
outsb
inc
notb
adc
push
orl
clc
pop
mov
inc
lret
outsb
xrelease
sbb
xor
jno
inc
mov
test
nop
lcall
pop
xchg
clc
and
sub
sarl
enter
fwait
jo
ja
sub
cld
cwtl
jb
jmp
adc
fbld
push
xlat
enter
daa
cmp
pop
mov
neg
scas
mov
imul
pop
pop
jne
subl
jle
lods
sti
outsb
js
rolb
xor
mov
ret
sub
or
xor
push
adc
in
cli
sub
popa
dec
decb
push
push
mov
inc
icebp
repz
jb
mov
call
das
pop
addb
movsl
pop
push
xchg
add
add
stos
lcall
cmp
jnp
out
test
pop
fldcw
pop
jle
icebp
loop
jmp
rclb
jno
xor
xchg
inc
hlt
dec
inc
das
mov
push
jl
push
js
mov
mov
push
jmp
testl
es
jp
cmpl
shrl
push
xchg
lret
pop
push
mov
adc
add
imul
cmp
dec
mov
das
sar
out
xchg
aaa
into
aam
mov
push
pop
icebp
mov
scas
je
divb
jne
mov
mov
in
lods
cli
inc
xchg
in
jp
sub
inc
mov
dec
fidivl
inc
test
adc
insl
mov
mov
dec
or
xor
ds
mov
rcrb
mov
lret
out
or
xlat
std
flds
cmc
push
aas
pusha
dec
mov
divb
push
sbb
repz
aad
es
xor
int
icebp
jmp
mov
and
push
loope
cmp
cmp
in
fiadds
inc
push
jg
mov
rorl
mov
jl
subl
push
dec
fwait
leave
mov
mov
cld
call
imul
mov
xor
outsb
cmpsl
push
xor
add
mov
push
cmp
mov
mov
int3
in
xor
data16
loop
negl
xor
orps
int
and
gs
call
jbe
jg
xchg
and
popa
loopne
or
inc
jb
stos
xor
fdivrl
fs
es
int
fnstenv
out
js
js
out
cmp
pop
in
insl
jb
cs
dec
xor
mov
popf
jl
xor
fmuls
pcmpgtb
push
push
shll
cmp
sbb
aas
mov
outsl
mov
dec
cltd
push
sub
inc
inc
push
ds
test
mov
std
clc
ja
jns
xor
jmp
js
sub
adc
dec
fisubs
call
loopne
iret
push
xchg
and
and
shlb
scas
pop
mov
add
lret
inc
sbbb
jl
mov
dec
enter
ss
test
jbe
xchg
fildll
jno
mov
mov
nop
int
out
cwtl
add
xchg
pop
mov
shlb
icebp
ficomps
xchg
mov
xor
fnstsw
sub
xchg
sub
vaesenclast
mov
stos
adc
stos
and
clc
out
inc
rclb
shl
roll
and
xchg
fsubrs
fcmovnbe
ret
js
mov
out
cmpsl
inc
rolb
xor
cmp
mov
and
dec
in
jne
or
jno
cmpb
les
push
out
test
and
mov
lcall
mov
cmc
faddp
aad
outsl
add
decl
mov
outsb
bound
adc
pop
lods
inc
movb
cld
ljmp
loop
mov
sbb
js
mov
dec
jg
xor
xor
pop
fstpl
lods
and
jmp
inc
es
push
mov
movsb
sub
mov
stos
mov
ds
les
nop
std
stc
push
fldenv
mov
jmp
adc
shlb
adc
mov
imul
jge
jle
lcall
mov
into
ret
cmp
push
idiv
or
add
into
sub
stc
js
inc
fdivs
popl
cmpsl
pop
rcrb
js
fs
repnz
jno
scas
andl
mov
push
lds
stos
sub
xlat
dec
mov
cmp
mov
lahf
cmpsl
jmp
mov
in
jno
pushf
jl
fstpt
dec
mov
sbb
in
adcb
aas
orb
push
jb
mov
push
lcall
lahf
mov
aas
iret
mov
xor
lods
mov
pop
adc
aam
outsl
adc
or
pop
jl
xor
lods
idiv
jno
jns
push
aad
stos
push
in
xchg
jg
idivl
or
mov
clc
cmp
cmc
and
rcr
test
xlat
lock
pop
rolb
xor
loopne
xchg
sbb
xchg
adc
jecxz
test
push
sbb
or
mov
cwtl
ds
data16
or
cmp
out
pop
addb
sub
lret
push
lcall
push
pop
dec
dec
xchg
hlt
shr
mov
ficomps
jbe
mov
cmp
dec
dec
sahf
andb
cs
mov
jbe
sbb
or
daa
cmp
cmp
xchg
xchg
test
aad
inc
cmpsl
test
mov
jg
mov
jno
add
adc
mov
sub
pop
adc
sarl
jmp
es
inc
ret
lfs
mov
cmc
jnp
das
cli
and
mov
pop
icebp
int3
outsb
clc
rcll
inc
mov
mov
adc
adc
mov
mov
mov
imul
test
ja
inc
shlb
sbb
pop
pop
subb
and
lock
push
xchg
sbb
call
dec
or
push
mov
pop
mov
dec
mov
jno
cmpsl
or
lret
pop
fcmovne
pop
sub
repnz
jmp
sub
inc
rorl
aas
inc
je
adc
ljmp
push
mov
test
scas
cmpsl
popa
movsl
jne
pop
xchg
nop
test
jp
jl
push
mov
push
loopne
push
leave
sbb
scas
popf
dec
xor
xchg
fistpl
sbb
out
sti
or
call
and
out
nop
out
mov
sbb
out
fwait
jmp
or
dec
dec
int3
cli
testb
das
push
xor
mov
mov
cmp
sub
and
rcrb
mov
adc
push
fneni(8087
sub
inc
add
lock
in
fistps
sbb
in
mov
repz
out
mov
decw
in
push
xchg
popa
orb
loop
js
int
loopne
test
icebp
mov
arpl
fbld
cmpsb
out
jl
lcall
mull
and
mov
out
movsl
iret
xchg
testl
iret
xor
xor
dec
add
popa
ljmp
in
cmp
mov
sbb
into
jb
hlt
jge
scas
or
jl
enter
insl
in
mov
adc
cmp
push
or
or
mov
lcall
in
xlat
mov
xor
imul
loope
test
mov
loop
and
adc
pop
xchg
movsb
cmp
test
cmp
cld
adc
es
stos
sbbl
aad
fisubl
into
into
cmp
push
xchg
sub
push
leave
ja
jge
sub
or
fs
add
lret
sbb
mov
js
notl
and
js
inc
in
lock
stc
and
mov
and
fsub
push
enter
ljmp
sbb
shr
outsl
pop
mov
cmp
aam
pop
mov
mov
dec
mov
cmc
pushf
xchg
in
xor
adc
sbb
cltd
sahf
xor
jge
insb
repnz
fdivr
stc
push
adc
jns
gs
jo
fdivr
jp
cmpsl
rcll
outsl
mov
mov
mov
pop
add
aas
into
push
cmp
inc
dec
ds
push
repz
repz
jp
stos
inc
sub
inc
test
aaa
aaa
test
cwtl
pop
fcomps
cmpsl
sbb
inc
xor
int
sbb
jbe
mov
jae
mov
mov
cmpsb
out
xorl
jmp
pop
inc
inc
les
pop
sbb
sahf
jmp
insl
rolb
push
mov
dec
adc
jge
out
aam
gs
hlt
mov
ljmp
aam
subl
js
repnz
sbb
cmp
arpl
cmp
in
cmp
mov
popf
iret
rcll
sahf
lds
lock
addr16
lahf
jno
adc
insl
pusha
push
and
lock
or
lcall
sub
jno
mov
dec
dec
or
cmp
add
ja
push
mov
sub
jle
mov
loopne
stos
and
fldenv
xchg
jb
xchg
loope
mov
lds
repz
aas
aam
adc
imul
dec
loopne
xor
and
sbb
mov
popa
xor
int3
xchg
insb
aas
imul
jecxz
xor
test
jmp
pop
xchg
daa
inc
mov
add
mov
idivl
pop
dec
popf
sub
inc
sub
out
sub
adc
inc
shlb
rcrb
cmp
cli
dec
xchg
mov
mov
pop
xchg
ret
jo
sbb
pop
pushf
dec
movsb
xor
popf
add
popf
push
adc
pop
mov
dec
adc
scas
lret
outsl
inc
sbb
sti
adc
hlt
xorl
aam
push
shlb
or
push
stc
in
sbb
push
jno
cmp
sti
adc
decb
xlat
cltd
test
loopne
push
xchg
outsb
inc
gs
add
imul
pop
push
push
push
test
arpl
adc
sbb
in
jb
add
jl
in
sti
adc
or
inc
repnz
nop
sbb
aas
dec
lret
div
mov
jo
pusha
fistpl
jnp
fisttpll
out
loop
inc
add
insb
xor
adc
ret
lret
push
push
cltd
xchg
fisubrl
mov
les
popf
mov
fldcw
jne
or
fisubrs
les
inc
add
mov
jg
popa
out
mov
pusha
mov
and
addr16
iret
jns
ror
jp
jmp
xchg
mov
jns
nop
aad
dec
inc
cmp
roll
mov
fiadds
bound
lds
add
daa
adc
xlat
inc
xor
push
cmp
popa
jmp
sub
dec
xor
or
andl
rcll
aaa
cmc
adc
add
aad
pop
and
jb
pop
fstpl
jg
lods
icebp
test
cld
mov
mov
mov
cwtl
mov
jmp
std
adc
sub
into
shr
push
aam
sbb
aad
std
leave
mov
pop
cmpsb
xor
jg
cmp
dec
movb
in
addb
dec
jne
xchg
fisubrs
add
movsl
cmp
divl
push
lea
stc
cmpsb
leave
mov
mov
inc
movsl
sahf
in
mov
add
inc
adc
push
push
push
mov
rsm
sub
xchg
cmc
aas
sbb
inc
mov
fcmovnb
aam
mov
push
mov
lds
push
xchg
push
fwait
xor
lods
mov
adc
or
mov
imulb
cli
int3
test
mov
stc
jp
inc
into
mov
lods
out
fcoml
push
aam
stc
xchg
sbb
xlat
fdiv
fsubrs
test
aas
imul
jmp
insb
ret
loope
mov
out
iret
mov
mov
loop
xchg
mov
repnz
dec
test
shrb
cmp
outsb
pop
arpl
aas
pop
lcall
sub
mov
xchg
test
fadd
mov
dec
cmp
jge
jge
add
fxch
xor
stc
jl
mov
adc
rorb
mov
fsubrs
cmp
inc
sub
leave
idivb
jns
aad
jecxz
pop
sub
ljmp
pop
jb
or
inc
mov
outsl
xchg
fucom
or
mov
out
hlt
orb
lock
pop
nop
fwait
movsb
lods
or
daa
mov
cmpsb
pop
iret
sbb
fldcw
mov
je
out
pop
iret
std
leave
lret
or
fdivl
sbb
call
insb
mov
lahf
lods
lods
xor
andl
and
jmp
or
cmpsb
dec
inc
jns
lods
push
mov
xchg
cwtl
fistps
sti
sahf
push
push
in
cmpsl
cs
inc
pop
loopne
mov
pop
enter
ljmp
gs
call
push
pop
rorb
mov
mov
fcompl
outsl
icebp
aam
test
mov
mov
adc
jp
fcomps
and
inc
inc
daa
shrl
xor
es
ja
fcoms
dec
cltd
cmc
xchg
sbb
jmp
mov
jl
mov
lds
pop
sub
mov
or
sub
mov
inc
insb
jnp
push
fs
dec
add
push
push
mov
movb
mov
fldcw
pop
pop
jge
pop
mov
jg
arpl
aad
lcall
loope
pop
sbb
or
sbb
xor
push
ljmp
jl
xchg
dec
mov
sbb
call
pop
pushf
sub
lds
jne
aaa
add
dec
push
in
jl
daa
cmp
xchg
sar
shlb
lds
fidivl
xor
xor
in
shlb
popf
fimuls
jno
adc
sbb
and
push
dec
mov
or
cmp
xor
mov
or
jo
push
notb
outsb
imul
cmc
inc
loope
lahf
sub
and
je
fildl
jmp
xlat
lahf
sbb
mov
xchg
jo
jecxz
out
mov
mov
mov
cmp
insb
fs
jb
loope
fwait
loopne
ljmp
int
xchg
pop
int
mov
xchg
test
mov
and
daa
xchg
add
insl
rclb
mov
pop
xchg
and
or
cld
push
xchg
rcl
test
aas
ret
inc
dec
xchg
sbb
gs
xor
jne
pop
test
out
scas
xor
fstpl
dec
lret
or
repnz
fisttpll
imul
sub
push
mov
dec
aaa
jo
out
jae
fdiv
mov
add
sbb
jo
nop
xor
faddl
or
fcomi
sub
add
icebp
out
mov
ret
or
sbb
jge
out
icebp
rorb
or
iret
cli
push
fs
cmpsb
xchg
cmp
outsb
dec
mov
shlb
iret
gs
jnp
xlat
xlat
mov
and
and
add
std
pop
sub
rolb
xor
xchg
sbb
jecxz
stos
jl
dec
jg
xchg
push
mov
push
cmp
leave
sbb
test
dec
leave
cmc
in
call
iret
es
jp
sahf
adc
add
jb
jo
cltd
outsl
roll
ret
mov
mov
jl
inc
iret
mov
add
repnz
out
ret
fists
loopne
cmp
mov
je
in
add
jno
nop
rolb
fcompl
sub
in
sbb
aas
call
push
rcll
movsl
clc
repz
out
mov
inc
cmp
push
push
fs
push
mov
stos
int
testb
insl
cmp
leave
lcall
jmp
into
scas
int
push
clc
mov
or
push
aad
es
jnp
leave
mov
pop
mov
bound
adc
stos
cmp
leave
lods
fnstcw
mov
dec
inc
push
mov
ror
ss
inc
lahf
xor
or
jg
leave
dec
xor
dec
adc
push
daa
cmpsl
in
lcall
jecxz
test
stc
adc
in
adc
mov
pushf
int
or
sbb
lret
addr16
faddl
test
inc
push
scas
js
sahf
cmpb
inc
and
mov
mov
dec
pop
lds
jnp
push
in
mov
mov
push
lcall
jo
sahf
push
mov
out
xchg
mov
cmp
into
dec
mov
ds
subl
mov
mov
cmp
aad
iret
std
mov
movsl
out
int3
imul
add
imulb
pop
xchg
push
test
xor
lock
es
push
hlt
jp
dec
sar
dec
sub
lcall
pmullw
mov
out
mov
sub
fsubrs
sub
mov
sbb
jns
ss
les
or
inc
stos
jo
mov
sub
inc
mov
push
loope
xchg
push
or
cmpsb
divb
or
mov
pop
test
mov
jp
cwtl
pop
push
js
mov
and
popf
movb
pushl
ret
push
jmp
movl
pushf
movl
push
lea
jmp
pop
inc
xchg
sub
push
adc
mov
pop
mov
inc
fisubrl
mov
xlat
js
in
mov
fldl
js
jb
sahf
sub
ret
aam
push
sarb
jb
add
sarb
adc
les
arpl
int3
jnp
or
push
aam
imul
dec
dec
xchg
adc
shrl
out
outsb
pop
in
pushf
sbb
mov
and
lock
ljmp
or
int3
pop
push
inc
mov
mov
push
cmp
xor
jno
sbb
bound
lcall
sbbb
adc
scas
xchg
in
xor
pusha
pusha
sub
mov
cld
jg
es
rdmsr
rorb
mov
jb
sub
mov
int
inc
jnp
jns
push
push
and
sti
pop
notl
sahf
fcoms
sub
std
xchg
pop
pop
call
scas
mov
cwtl
push
mov
cmp
sbb
mov
fwait
nop
xchg
or
lahf
cmp
dec
dec
daa
lods
sub
xchg
push
lcall
dec
into
adc
aaa
mov
jnp
and
je
xchg
cltd
sarb
sub
push
jne
sub
and
dec
cmp
test
out
cmp
insb
push
outsl
add
cmp
mov
int3
lods
xchg
jo
jnp
mov
adc
pushf
outsb
fwait
adc
andb
rcrl
adcb
xchg
or
std
ds
jl
icebp
mov
in
das
enter
inc
pop
cmpsl
jns
es
mov
aas
loope
push
pushl
pushf
popl
clc
xor
stc
call
call
xorl
bt
xor
stc
xor
test
test
xor
jmp
jmp
pusha
xor
pusha
xor
push
xor
movb
push
xor
stc
test
xorl
test
xor
test
pushl
popf
mov
mov
pushl
ret
xor
cmc
pushl
popf
pushf
pushl
ret
pushl
popf
pushl
pushl
ret
movl
call
push
call
pushf
call
movl
call
xor
movw
xor
push
xor
clc
pushl
xorl
call
xorl
cmc
xor
test
movb
xor
cmp
xor
stc
xor
call
cmp
jns
mov
dec
lahf
repnz
popf
testb
ss
push
and
arpl
adc
out
and
testb
dec
dec
out
in
adc
pop
jns
addl
inc
sub
adc
add
aaa
les
xchg
cmpb
fadds
aad
repz
stos
lahf
or
push
xchg
fnsave
ret
leave
inc
pop
into
dec
aas
sub
push
int3
frstor
aas
push
lea
and
xchg
out
addr16
fpatan
sbb
dec
pop
mov
mov
in
enter
les
inc
adc
mov
xor
std
arpl
js
mov
dec
lret
or
xorb
push
int
inc
sub
xor
sarl
inc
loope
sbb
loopne
push
and
aas
xor
sbb
dec
inc
mov
mov
jl
jb
xor
call
adcl
in
popf
mov
popa
jmp
sub
arpl
mov
aam
mov
xchg
aaa
push
ret
sub
jne
jnp
lcall
and
icebp
lods
push
push
ljmp
pop
rclb
mov
rcrb
jo
jno
dec
lahf
stc
out
cmp
or
sub
je
jle
inc
mov
fisubrs
cmp
test
dec
lea
inc
mov
xchg
cmpsb
shll
jge
repz
mov
adc
mov
int3
xchg
inc
sbb
pusha
divb
cli
ljmp
jmp
mov
and
and
sub
daa
push
test
fstl
ds
test
or
adc
repnz
add
outsl
cmpsl
cmp
pop
scas
sbb
xor
pop
and
lret
cmpl
jbe
and
cli
data16
dec
lret
sub
rcrl
mov
out
mov
xchg
add
pushf
popl
bt
pusha
xor
call
stc
xor
stc
push
xor
test
xor
test
clc
xor
stc
bt
xor
mov
cmc
xor
call
movl
mov
pushf
pusha
lea
jmp
xor
jmp
lock
scas
xor
dec
lock
movsb
bound
ss
inc
popf
repz
sub
push
incb
and
sbb
jl
push
das
inc
ret
std
orl
mov
mov
pop
dec
aam
ret
imul
mov
pop
pop
call
push
icebp
jbe
repz
sbb
sub
sbb
inc
std
test
inc
xrelease
inc
lock
aad
loop
cmp
mov
cmp
pop
rorl
inc
jp
cmc
addl
add
push
out
stos
cmpsb
inc
mov
roll
or
fcoms
sbb
jge
lock
into
scas
dec
sar
test
cs
out
test
pop
mov
pop
push
imul
iret
sti
lea
jg
rcrl
pop
rorb
cwtl
ljmp
pop
xchg
and
cwtl
push
fs
shlb
ret
jle
out
mov
js
pop
out
push
addr16
repnz
inc
rorl
arpl
add
and
call
ds
jl
or
dec
or
add
mov
push
or
dec
xchg
sub
sub
repnz
stos
sub
mov
cmp
mov
and
negb
insb
pop
sbb
cmpsl
xor
rcr
mov
jns
mov
xor
inc
mov
ffreep
pop
push
pop
fdivs
nop
enter
cltd
out
add
int3
rclb
int3
push
mov
mov
shrb
dec
test
std
jl
cli
jnp
movsl
mov
jno
or
add
int3
dec
cs
divb
jle
je
cmc
mov
jle
pop
cld
rolb
sbb
data16
dec
sbb
rorb
jl
or
xchg
repz
cmp
push
imul
or
divb
fildl
shlb
sbb
push
mov
das
jle
pop
xor
sub
push
jae
into
push
sbb
push
test
push
fldcw
mov
jg
shll
inc
xor
jle
or
lret
xor
test
shll
pushf
xchg
inc
sub
adc
or
pop
inc
jae
add
cli
sub
mov
adc
sub
cmp
cmpsb
pop
mov
pusha
jle
xchg
addl
loop
pusha
rorl
shl
je
lock
outsb
mov
pop
cmpsl
cmp
ret
fidivs
fld
int3
lods
test
mov
add
sub
iret
add
loopne
add
rclb
xchg
sub
mov
sbb
mov
pusha
xlat
in
les
fcoms
adc
imul
jnp
dec
push
lods
cmc
repnz
test
arpl
adc
xor
xchg
int3
mov
xlat
sar
lods
clc
jne
dec
imul
stos
adc
das
inc
jmp
stos
sbb
ret
xchg
pop
sub
sub
or
test
fimull
push
jne
cmp
inc
xchg
and
mov
xchg
dec
inc
fisubrl
mov
dec
jns
jle
je
or
test
sub
sub
std
mov
push
movsl
clc
inc
mov
sub
or
scas
loopne
push
stc
dec
xor
jp
dec
inc
in
repz
popf
shlb
inc
or
std
out
push
cs
push
xchg
es
xchg
mov
leave
lods
push
nop
rclb
enter
dec
cmpb
and
push
sbb
jle
inc
mov
fucom
movl
and
and
popa
test
cmp
adc
xorb
sub
cs
pop
test
xchg
in
jno
into
cmpsl
xor
or
lea
mov
lcall
xchg
or
cltd
mov
mov
int3
adcb
xchg
jg
mov
js
out
aas
vmovhps
mov
cmovne
mov
jle
mov
mov
ret
imul
add
aas
xor
mov
insl
sbb
xchg
leave
mov
sbb
fs
jo
jmp
xor
repz
pop
sub
sbbb
xor
adc
repz
sbb
cs
rorb
adc
mov
dec
pop
pop
push
xchg
outsl
std
clc
cld
or
out
std
jno
xor
fs
addr16
nop
xor
insl
pop
fisubl
jbe
dec
iret
aam
pushf
fisubrs
push
inc
lds
fbstp
dec
roll
mov
jbe
packsswb
in
cs
pop
jl
lret
popf
mov
das
or
adc
fucom
adc
test
pop
lret
cwtl
ljmp
mov
sbb
lcall
fldcw
mov
shl
sbb
or
mov
daa
fildll
add
push
cmp
and
mov
cld
lret
xchg
arpl
xchg
divb
lcall
mov
fcmovu
xchg
sub
rorl
aad
and
lret
mov
jp
xor
incl
pop
dec
aas
arpl
inc
xlat
sub
cmp
add
and
xor
js
rcr
stc
ret
lret
cmp
imul
mov
push
xor
es
arpl
lcall
lock
test
popa
jo
loope
add
and
cli
dec
cmc
es
scas
sbb
pop
or
lcall
inc
adc
add
iret
or
mov
sbb
or
clc
jmp
leave
sahf
fs
insl
divb
lret
add
stos
xor
gs
push
aad
inc
repnz
fcomps
jg
mov
mov
jp
mov
cmpsl
rclb
mov
pop
daa
scas
adcb
adc
jle
cmp
mov
popf
sub
es
pop
pop
lods
push
or
cld
add
loope
mov
mov
out
push
cmpsl
movsl
jl
dec
outsb
pop
adc
push
jmp
mov
andb
pop
pop
sub
rclb
mov
jecxz
ret
or
inc
mov
clc
sbb
pop
push
cmpsl
movsl
addr16
dec
xlat
jge
push
lods
dec
mov
out
ss
out
push
scas
adc
pop
pop
push
mov
ret
stos
xchg
loope
jge
fldenv
mov
shrb
inc
cmp
jg
pop
lret
push
cmpsl
movsl
inc
jb
push
cmpsb
sahf
es
pushf
dec
fildll
or
loope
sbb
hlt
cmp
dec
icebp
and
nop
xor
mov
lret
jg
pop
icebp
push
dec
add
andb
jp
lods
stos
out
and
pop
jnp
enter
adc
xchg
rcl
call
jmp
xor
loop
roll
lahf
mov
scas
ljmp
dec
test
out
cwtl
push
loope
adc
push
pusha
or
lahf
sub
loope
shl
roll
outsl
out
lea
testl
push
or
adc
loop,pn
jle
or
add
xor
jl
mov
inc
jns
out
jae
xor
xor
pushf
js
pop
xchg
xchg
stc
je
bound
mov
insb
out
rclb
pop
inc
jns
cmpsl
das
loope
stc
test
push
mov
dec
xor
ljmp
xchg
das
push
lods
pop
dec
scas
and
pop
lahf
aas
mov
adc
and
sarb
cmc
ljmp
and
fisubs
aaa
mov
scas
dec
push
aad
sbb
pop
decb
stos
daa
test
es
cmpsb
mov
sbbl
stc
mov
mov
push
vmovshdup
xor
pop
mov
ljmp
insl
in
repnz
je
movsl
xor
faddl
push
jo
int3
mov
add
fimuls
add
jb
cmp
test
lods
cmp
pop
ficoml
fmull
mov
xor
cs
sbb
mov
lcall
dec
insl
scas
mov
rorb
pop
mov
xchg
mov
jno
loop
gs
sub
pop
inc
jbe
cmp
sub
bound
adc
ds
and
js
fwait
dec
fs
mov
sub
ret
pusha
mov
mov
xchg
pushf
push
addr16
dec
andb
mov
cmp
fdivr
aam
mov
xchg
adc
pop
rolb
cmp
sti
fcompl
and
pop
xchg
mov
lds
push
nop
add
fisttpll
pop
push
mov
sub
lock
testl
rcrb
fcomps
lods
lret
cmc
jmp
popa
adc
gs
lcall
les
mov
push
pusha
mov
out
das
add
in
repnz
ret
cmp
dec
cltd
daa
or
inc
mov
mov
out
mov
arpl
xchg
pop
outsb
xlat
inc
movsl
push
call
mov
outsb
xchg
aad
jecxz
xor
lcall
hlt
not
push
xchg
push
jb
adc
and
mov
ss
or
icebp
and
pop
sub
or
std
xor
das
es
cmpl
out
xchg
mov
mov
stos
and
clc
mov
enter
sub
test
cmp
xlat
std
lock
push
sbb
jmp
inc
xchg
jb
cmpsl
and
pop
stos
add
sub
pushw
divb
pop
stos
test
incb
add
lods
sub
les
inc
std
int3
jbe
push
jle
js
sahf
and
les
sahf
sbb
inc
cmp
sti
ds
leave
mov
popa
insb
hlt
inc
inc
push
cld
jge
in
js
sub
xor
push
stos
ds
mov
scas
cmc
mov
out
gs
cwtl
ljmp
add
data16
popf
dec
pop
mov
shrl
mov
cmp
and
ljmp
dec
enter
xlat
lea
rol
stos
sub
pop
je
daa
fadd
iret
gs
sub
and
and
ret
jne
gs
mov
xlat
cli
sbb
xor
outsl
pushf
fdivrl
cmp
add
hlt
mov
repz
push
jo
ret
inc
mov
testl
roll
out
cli
ret
jecxz
sbb
sub
int3
out
xchg
mov
sub
cmpsb
repz
push
cld
push
pop
mov
rclb
jp
stos
and
pop
adc
xor
nop
outsl
ret
in
mov
dec
jle
nop
mov
lock
nop
pop
rorb
add
movsb
mov
jbe
outsb
in
sarb
jle
add
inc
jle
out
out
push
sti
dec
test
or
xor
in
dec
out
dec
das
inc
jb
out
mov
mov
das
addb
loope
mov
sti
int
or
in
roll
inc
int
mov
push
push
xchg
lahf
shr
out
iret
adc
and
in
xlat
push
pushf
ss
xor
cmp
or
cld
sbb
rorb
jp
push
inc
dec
sbb
dec
cwtl
cld
push
scas
in
and
add
mov
stc
jl
add
xchg
cmp
and
and
fwait
xor
pop
xchg
lahf
test
add
mov
bound
mov
cmpsb
jmp
loop
sarb
add
std
fildl
ret
fimuls
add
test
rolb
icebp
mov
nop
lods
xor
mov
test
lret
addl
dec
iret
lds
xchg
cli
push
mov
cwtl
jb
mov
cld
loope
imul
clc
cltd
sub
push
pop
lcall
pop
mov
fldenv
xchg
orb
or
push
push
pop
jmp
jecxz
fstpl
clc
adc
jg
sbb
cmp
stc
xor
cs
jle
push
cmp
out
andl
mov
cmp
push
cli
scas
andl
jae
insl
arpl
xchg
leave
rcrl
aad
fs
mov
movsl
ret
ret
fs
subb
jae
jnp
sub
arpl
ljmp
rolb
ds
sarb
mov
jns
pop
push
fisubl
fwait
out
je
sub
xlat
aad
push
lahf
push
fs
sahf
dec
fsubrl
stos
push
shlb
jp
das
movsb
xlat
xchg
cmc
stos
mov
jno
or
iret
vaddsubps
xchg
jge
sbb
in
adcl
movsb
push
mov
hlt
in
jp
ss
inc
jle
push
movb
scas
pop
std
jmp
add
rcrl
sub
repnz
pop
aam
cmpsb
je
xchg
add
repz
out
pop
icebp
int
or
pop
ficoms
out
mov
sub
rcl
jp
imul
add
xchg
vmovlps
push
or
adc
das
add
cmp
das
or
jb
ret
mov
out
stc
sbb
xor
sub
ret
jge
andb
es
imul
and
repz
sbb
fs
rolb
cmp
in
in
adc
outsb
aaa
xchg
mov
scas
adcl
mov
int
adc
xor
adc
rcrl
stos
es
movl
pushl
lea
jmp
xorl
pusha
bt
xor
cmc
xor
cmp
bt
xor
bt
pushl
popf
push
pushl
ret
jns
xchg
shll
fwait
and
mov
imul
shrl
test
mov
fildl
xchg
dec
mov
pop
xchg
dec
out
adc
xor
xchg
arpl
inc
lea
xor
outsl
and
imull
outsb
pop
in
out
push
fucomp
aaa
cld
xchg
inc
in
neg
cmpb
inc
xor
lods
pop
add
in
adcb
imul
nop
jnp
xchg
sbb
aas
stos
jecxz
loop
sti
jg
int3
mul
fildl
mov
xor
fst
fstl
xchg
aad
pop
lcall
and
cli
clc
repz
jge
test
fisubs
sub
and
adc
knotw
outsl
stos
fildl
sub
push
cli
out
jl
push
in
cld
cli
dec
test
xchg
xor
pop
loope
call
pop
jns
cmp
push
adc
add
jns
loopne
pop
test
mov
stos
repnz
addr16
ja
sbb
int
jl
cmp
sbb
sbb
or
mov
adc
ja
xlat
inc
cmp
xor
cmpsb
arpl
test
jle
shrl
aas
mov
inc
fists
ret
adc
aad
pop
test
jns
stos
scas
adc
or
hlt
push
ds
sbb
jno
ret
pop
popf
leave
mov
mov
adc
adc
or
nop
pushf
pop
rcrb
push
mov
stos
push
dec
nop
dec
fldt
int3
pop
scas
sub
test
aas
dec
sub
fidivrl
dec
sti
leave
loopne
lret
loopne
inc
arpl
and
cmpsl
stos
mov
sbb
cwtl
xor
outsl
jo
xor
add
add
sub
pop
insb
jl
mov
or
pop
push
daa
pop
xchg
jg
ret
adc
sarb
push
ljmp
pop
in
scas
jp
sbb
add
daa
dec
mov
shll
xor
test
or
scas
mov
test
push
ret
dec
rolb
pminub
mov
dec
jge
sbb
bound
or
push
mov
in
sar
jmp
xchg
cmp
mov
xorb
loop
ljmp
and
fsubrl
push
dec
into
adc
bnd
xchg
dec
movsl
stc
xor
pop
enter
loopne
mov
xor
stos
dec
into
sti
sbb
mov
jp
inc
cmp
cmp
stos
and
inc
mov
repnz
xor
mov
push
ljmp
or
dec
push
repnz
loop
sbb
dec
scas
lret
push
loope
lods
jp
xchg
les
pop
inc
push
add
rol
das
inc
shr
jo
inc
daa
xlat
xchg
add
mov
or
ds
mov
outsl
fs
lret
incb
inc
test
insb
xor
in
jle
arpl
jmp
pop
lret
jbe
fisubrs
mov
inc
arpl
arpl
jno
andb
sub
add
pusha
push
lock
movsb
adc
dec
xorl
scas
xor
jne
shr
jp
inc
pop
xchg
cmp
mov
mov
leave
sarl
push
mov
stc
cmp
jmp
sbb
add
mov
mov
jle
loop
dec
fidivl
call
xchg
lods
sub
or
or
sub
pop
pop
pushf
jecxz
push
xchg
mov
inc
cli
mov
xchg
shrl
lods
pop
xchg
sub
aas
dec
sub
lahf
aaa
push
jl
sbb
mov
add
xchg
and
jmp
in
jle
clc
jae
sbb
mov
insb
fldenv
repz
stos
stos
cmp
shll
dec
inc
into
sbb
jp
les
pop
xchg
jle
popf
mov
repz
dec
rep
and
jbe
inc
sbb
jae
into
push
push
mov
jns
aas
enter
fisubs
adc
jbe
sbb
daa
movsb
loop
idivl
std
inc
ret
add
add
lcall
iret
imul
sbb
add
out
add
push
push
scas
dec
mov
int
sahf
fists
jle
loop
mov
in
out
push
aam
xchg
push
jae
popa
test
mov
cmp
mov
push
xchg
into
mov
sub
cwtl
sbb
data16
mov
xchg
stos
popf
cmp
jb
xchg
shlb
aas
sub
mov
lock
and
lret
push
movsl
ret
aaa
fsub
xchg
jg
gs
mov
mov
aaa
subb
sub
imul
cs
mov
hlt
mov
mov
das
es
sarb
das
icebp
sub
call
inc
roll
leave
into
and
ljmp
js
sbb
xchg
xor
into
mov
mov
add
mov
mov
pop
push
xor
inc
xor
out
repnz
sub
add
push
subl
jge
mov
fiadds
dec
sbb
shl
paddb
mov
mov
dec
mov
mov
mov
ds
lret
jle
mov
push
pop
popa
push
iret
pop
repnz
lret
aam
fidivrl
aad
das
aam
sub
lods
jmp
push
out
inc
das
pop
pop
pop
jl
mov
dec
cmpsl
push
push
out
test
cwtl
mov
ret
gs
test
stos
xor
icebp
mov
mov
mov
jge
sbb
in
lds
pop
mov
or
insl
bound
cld
cmp
aas
mov
cwtl
imul
loope
or
lcall
ljmp
lods
out
jp
push
aam
xor
mov
lret
mov
call
sbb
outsb
xchg
cli
outsl
push
lret
in
dec
out
jne
mov
out
pop
cltd
cld
inc
cltd
xor
pop
test
in
int3
shlb
mov
mov
sbb
inc
outsl
xor
sub
and
lret
ret
lea
cmp
sbb
test
loop
mov
inc
mov
push
xlat
pusha
cmc
insl
inc
xor
mov
je
or
cli
or
aaa
sbb
enter
movsb
cwtl
add
or
cmp
fistpll
mov
mov
mov
ljmp
mov
popf
mov
cmpsl
adc
int3
dec
xchg
sbb
popf
mov
pushf
imul
js
lock
mov
mov
cld
sahf
cltd
lds
dec
aad
sarb
xor
adc
push
lahf
mov
pushf
aam
push
mov
and
stos
lds
sub
pop
inc
mov
js
xor
sbb
and
mov
movsb
fdiv
xlat
cmc
aaa
push
bound
dec
shl
inc
gs
jae
inc
lret
imul
push
or
adc
mov
lahf
push
push
inc
out
mov
add
stos
mov
jae
aaa
call
lock
mov
lock
push
into
and
outsb
pop
inc
xchg
aas
leave
pop
inc
mov
in
mov
inc
shl
aaa
push
sahf
test
int3
add
insb
iret
adc
cltd
testb
mov
dec
jmp
mov
pop
pusha
sahf
ror
jl
fstpl
addr16
fnstsw
pop
fists
lods
in
aad
hlt
mov
andl
pop
mov
bnd
inc
ret
xor
mov
xchg
mov
pop
xor
ret
mov
lock
add
nop
dec
cltd
fldl
jb
arpl
mov
sbb
xchg
pop
stos
inc
out
dec
scas
push
lods
inc
out
std
cmpsl
mov
mov
jbe
cmp
xor
sbb
aaa
inc
sahf
mov
ja
xchg
xchg
xchg
sarl
mov
test
rorl
shrb
gs
cli
xlat
les
mov
je
fs
mov
push
fldcw
fcomps
jne
mov
dec
lahf
sub
invd
add
cltd
repz
bound
pop
cmp
dec
push
repz
xor
sar
sub
movsl
pop
hlt
sbb
loope
movsb
jns
add
inc
push
jnp
stos
jo
divb
dec
test
cld
fistpll
and
lea
jmp
xor
stc
pusha
xor
bt
cmp
xor
call
jmp
xlat
iret
and
imul
push
mov
push
jo
ja
jp
out
lea
dec
dec
jle
push
dec
pop
mov
dec
lea
pushf
adc
arpl
test
mov
mov
mov
dec
enter
jae
sub
fistpl
add
jle
xchg
and
incb
cmp
inc
jns
popa
iret
inc
scas
popf
or
call
push
sahf
mov
sbb
jl
xchg
dec
mov
ljmp
aam
outsb
push
sarb
jae
clc
sbbb
ljmp
xchg
jo
inc
in
mov
les
cmp
push
mov
ja
pop
lret
fcoms
out
icebp
sub
xchg
add
dec
jg
adc
xor
cmp
pop
inc
leave
sub
mov
fldenv
mov
lds
loopne
insl
arpl
out
pop
inc
add
das
out
fwait
pop
dec
pop
stos
jl
fldl
loopne
cmpsb
enter
daa
lods
fmuls
addr16
mov
pop
popf
das
adc
fadd
inc
loop
insb
inc
les
dec
dec
or
sbb
lcall
adc
test
push
add
cli
test
jbe
shlb
int3
lods
or
pushf
mov
popf
mov
pop
movsb
mov
mov
divb
cmpsl
addr16
xchg
int3
pop
pop
pushw
addr16
dec
nop
fsubs
mov
lret
pushf
pushf
mov
popf
mov
pop
aas
aaa
pop
sahf
dec
jecxz
icebp
inc
xchg
xor
fnsave
sub
inc
jnp
scas
mov
sub
inc
xor
sub
stos
lock
enter
jg
pop
negb
lds
movsb
xlat
jmp
jae
mov
and
and
xchg
inc
xor
mov
xchg
sbb
cmp
les
jns
clc
inc
jecxz
mov
je
cwtl
lods
push
in
in
imull
fimull
test
push
xor
dec
xor
add
movsb
push
or
pushf
data16
add
ja
lret
popf
loopne
xorb
dec
jg
mov
sub
divb
divb
cmp
sub
add
call
xor
pushf
xor
movb
pushf
xor
cmc
pusha
xor
cmp
cmc
xor
pushl
xor
mov
xor
jmp
jmp
push
pushf
push
movl
call
movl
mov
pusha
movl
push
push
push
lea
jmp
movl
pusha
pusha
pushl
pushf
movl
push
push
pushf
lea
jmp
xor
clc
xor
jmp
xor
bt
cmp
xor
pushf
pushl
popf
push
pushl
ret
pushf
pushf
popl
pushf
xor
jmp
pushf
push
movl
mov
lea
jo
pushf
movl
push
pusha
lea
jmp
call
call
xor
cmc
pushl
popf
pushl
pushl
ret
call
call
push
xor
sub
mov
inc
enter
aad
jg
add
xor
pop
sub
mov
out
lds
fiadds
mov
lea
or
add
addl
adcl
dec
inc
jbe
dec
aaa
fidivrl
ljmp
mov
jb
out
aas
pushl
pop
xchg
fadd
cmp
insb
test
test
idiv
inc
into
clc
xchg
bsr
jge
fists
mov
nop
cmpsl
mov
fists
lds
and
popa
mov
sbb
mov
setne
stos
push
sarb
in
pop
mov
cmp
mov
inc
dec
stc
dec
and
mov
fnstcw
das
bound
or
mov
or
and
mov
xor
lahf
scas
dec
jmp
insb
bound
out
mov
repz
or
adc
pusha
leave
fcomps
xor
jg
xchg
sub
fnstsw
xchg
adc
inc
push
je
neg
jl
mov
xchg
int
push
lds
adc
ret
ds
dec
mov
or
or
pop
movsl
negl
mov
sbb
jns
call
inc
xchg
scas
rorb
mov
cmp
lret
cmpsl
aaa
xor
je
cmp
fwait
cmpsb
out
mov
sahf
sbb
cmp
dec
xchg
mov
push
enter
pop
test
push
orb
adc
ret
sbb
push
vpackuswb
pushl
je
fldt
repz
cmp
pop
dec
rcl
and
pushf
pop
lcall
push
lods
cmp
cmp
sahf
insb
adc
in
sbb
fwait
xchg
enter
cmpsl
subl
mov
pop
test
push
movsl
enter
or
xorb
outsl
jae
xchg
lock
outsb
xchg
mov
push
jle
idivb
loope
outsb
mov
push
inc
sti
sbbl
add
loopne
mov
mov
sbb
outsl
lret
insl
jb
outsl
inc
mov
sbb
stos
cmp
gs
push
pop
cmpsb
es
das
pop
and
fstps
pusha
mov
stos
lret
aaa
outsl
and
mov
out
and
or
mov
jge
xchg
fidivs
daa
mov
or
in
insb
into
stos
arpl
imul
dec
jp
inc
sbb
lock
lret
or
push
jns
icebp
fadds
xchg
andl
clc
lock
dec
sbb
mov
divb
push
in
cmpsb
in
inc
xchg
loop
xchg
mov
or
inc
inc
sbb
pop
mov
movsl
dec
lods
das
jno
scas
add
movsb
xor
cmpb
lods
xor
clc
jno
idivb
divb
aam
movsl
push
and
repnz
add
sbb
sbb
adcl
adc
jo
or
inc
and
into
mov
enter
mov
in
jb
psubsw
divb
xor
jmp
inc
in
stos
xchg
enter
inc
icebp
jns
out
rol
in
cltd
pop
in
jge
aas
or
xor
jle
fimuls
cmp
sub
and
xchg
cs
subb
mov
mov
in
lret
arpl
enter
inc
outsb
jge
push
sbb
push
mov
and
xchg
or
ret
fs
xor
push
inc
outsb
push
mov
cmpsl
dec
stos
xchg
enter
and
add
push
dec
cmp
cmp
jno
pop
push
insl
aaa
pop
and
outsl
pop
sub
mov
lret
mov
ret
out
stos
xchg
enter
fsts
xlat
das
add
test
lods
sub
aam
mov
sbb
xor
pop
and
push
insl
aaa
sub
insb
mov
or
sbb
inc
mov
sub
mov
adc
test
add
mov
clc
jb
xor
rcr
ret
inc
call
xchg
xor
in
dec
stc
lcall
jmp
fadds
fldl
cmc
andb
test
or
xchg
inc
loop
ja
push
andb
icebp
xor
or
sub
ret
cltd
cmc
lea
mov
inc
cmpps
loopne
outsb
fisttpl
decl
mov
ss
icebp
je
inc
bound
outsl
dec
jecxz
mov
imul
les
lods
pop
push
mov
aad
mov
xor
xchg
mov
lcall
and
jp
add
or
and
add
dec
out
jle
mov
lds
ss
test
cmp
inc
mov
js
pop
add
fsubs
and
sahf
ja
add
dec
mov
dec
xor
or
mov
aaa
lods
aaa
xchg
cmp
inc
mov
cmp
adc
ljmp
mov
scas
mov
push
cmp
popa
aaa
lods
das
dec
and
add
jne
xor
push
jp
inc
adc
push
repz
outsb
sub
push
push
daa
mov
mov
and
shlb
jg
imul
fnsave
mov
push
mov
xor
xor
jecxz
scas
xor
xchg
rclb
ret
imul
mov
or
dec
lods
dec
sub
in
sub
rcll
subb
jg
sbb
js
inc
cmp
mov
mov
mov
sub
ficoml
fildll
push
aam
push
inc
int
xor
out
sahf
or
push
dec
push
test
scas
jnp
dec
aaa
sub
sub
adcb
int
je
nop
sbb
in
push
insl
out
insl
stos
xor
adc
sbb
or
daa
les
dec
outsl
into
mov
xor
inc
inc
jns
shlb
out
sbb
cld
clc
popa
jge
jns
inc
cmpsb
or
addr16
lahf
and
xchg
sub
xor
or
in
pop
cmp
test
fadds
mov
nop
int
out
adc
jp
aaa
pop
push
jns
mov
sub
jmp
lods
jbe
lcall
out
popa
xchg
mov
mov
scas
fistpl
rcrb
or
iret
jl
xchg
insb
or
sbb
and
xchg
repnz
mov
jbe
mov
mov
iret
jle
pop
xchg
and
add
jle
mov
stc
in
and
sbb
xchg
sbb
adc
clc
mov
fistpl
popa
fistl
inc
movb
mov
pop
xchg
jnp
test
and
xor
mov
in
and
jl
and
movsb
in
add
into
dec
or
cmp
in
les
ror
lahf
in
lds
sub
mov
or
jmp
push
or
and
mov
sub
idivb
mov
add
gs
ret
cmp
cmp
jge
mov
cmp
and
adc
mov
in
les
xchg
and
jmp
rolb
adc
nop
dec
inc
in
jb
sahf
adc
pop
mov
xchg
xlat
mov
jg
dec
lret
pop
int
and
xor
push
xlat
mov
jno
mov
xchg
fdivs
mov
arpl
inc
pop
lds
movsb
or
jnp
sub
insl
mov
push
int3
add
bound
rorb
out
dec
sbb
std
ret
add
pop
jl
xchg
push
jns
aaa
bound
aas
add
stc
cmp
outsl
xchg
pusha
pop
das
scas
sub
pop
in
lods
fnstsw
lret
lds
add
scas
push
push
adc
jae
cmp
inc
sarl
test
in
lahf
add
xor
ljmp
xlat
adc
xor
das
cmp
mov
ljmp
cmp
xchg
and
cmpsl
jnp
inc
lret
pop
daa
jb
lahf
jecxz
fidivs
dec
test
sbb
jg
inc
sub
adc
hlt
adc
popf
or
pop
out
stos
jmp
mov
xor
or
sbb
or
fwait
pop
movl
in
mov
mov
push
push
jno
or
jle
iret
fisubl
mov
sbb
movsl
xor
push
lods
mov
push
or
xchg
push
out
mov
jbe
push
inc
mov
pop
loopne
test
test
jno
mov
fdivrl
sbb
xchg
sti
pop
xchg
push
push
loope
imul
mov
rolb
shlb
adc
push
aaa
aas
inc
inc
mov
push
rcll
lahf
dec
xor
rcll
inc
int3
lret
sbbl
inc
or
and
gs
div
jp
movl
stc
das
add
pop
cwtl
cmc
in
scas
jmp
or
fs
sbb
push
jo
push
cmp
ja
dec
stc
sub
add
addb
mov
dec
mov
add
fprem
out
into
test
test
or
pmullw
iret
jl
xchg
sub
cmpsb
and
test
aad
cld
das
cmp
movsl
lret
push
fs
xchg
aas
jle
in
stc
inc
dec
add
in
scas
sbb
xor
std
adc
in
jnp
cmpsb
pop
lds
or
mov
sbb
mov
xor
add
mov
pop
arpl
xchg
je
mov
sub
fiaddl
imul
jo
in
hlt
pusha
gs
iret
scas
dec
ffreep
mov
ret
mov
repz
sbbb
js
fwait
sbb
push
test
lods
mov
jge
into
push
dec
pushf
sbb
jo
xor
pop
mov
js
dec
push
out
cwtl
pop
mov
sbb
fldt
jle
dec
in
push
scas
ror
popf
imul
lds
lret
scas
outsl
jmp
push
es
sahf
icebp
test
aam
jle
push
cmpsb
divb
nop
push
mov
cmpsl
dec
pop
cs
and
es
inc
cltd
cs
push
jbe
mov
mov
roll
out
add
loopne
or
mov
pop
xchg
push
ja
rcrl
fidivrl
rolb
fwait
pushf
and
ret
out
je
pushf
loopne,pt
mov
rcl
out
xchg
mov
in
push
xchg
cmp
dec
cmc
lahf
dec
stos
dec
pop
cs
fs
pop
jns
and
repnz
leave
pop
mov
rol
idiv
sub
rorl
idivb
leave
sbbl
test
xchg
dec
rcrl
adc
jecxz
int3
shr
adc
sbb
das
pop
loope
enter
xchg
rolb
push
mov
mov
pop
jns
mov
call
mov
out
fcoml
daa
mov
daa
shll
xor
iret
mov
or
nop
mov
jg
inc
ds
or
dec
jle
push
mov
incb
push
in
push
sub
movsl
pop
jbe
adc
or
pusha
push
mov
dec
repz
dec
lret
or
push
adc
imul
std
aas
or
test
mov
xchg
aam
and
pop
or
or
sahf
test
pop
mov
pushf
or
fwait
rclb
or
mov
imul
pop
mov
orb
add
fst
mov
loopne
rcrb
je
cld
cmp
in
ljmp
sub
pop
and
inc
inc
fbld
sub
int
shll
pminsw
inc
insb
push
dec
movl
and
out
or
jns
loop
in
fmull
in
ja
dec
cmp
inc
inc
adc
mov
mov
sub
je
inc
xor
nop
fstl
les
mov
cmc
dec
sub
insb
test
dec
mov
inc
scas
arpl
ret
inc
shlb
shlb
xchg
pop
pop
xchg
std
lods
sarb
faddp
pusha
and
mov
add
pop
or
mov
and
pop
out
mov
inc
imul
pop
cmp
in
pop
icebp
sahf
mov
jle
inc
pop
mov
pop
adc
jge
mov
test
dec
fsts
rclb
and
jns
in
add
sbbb
test
jo
in
xor
fstps
sbb
stc
jecxz
sub
and
sub
das
lret
dec
jge
xchg
cmp
out
incb
pop
mov
insb
iret
and
aas
fsubrs
jne
mov
nop
xchg
dec
mov
push
xor
push
mov
imul
mov
cltd
xchg
adc
cmc
pop
adc
pop
fldl
daa
push
inc
cmp
mov
into
jne
mov
ja
lock
jno
mov
jae
adc
cltd
sub
push
jnp
js
sub
mov
outsb
loope
jp
aas
xor
cmpsb
imul
sti
cmp
dec
ror
sbb
aas
jmp
fisubs
add
scas
cwtl
ja
sbb
pop
pop
mov
inc
popf
sub
xchg
push
fiaddl
outsb
cmpsb
pop
repnz
xor
mov
fildll
xchg
les
fiadds
stos
xor
pop
xchg
bsr
push
out
sbb
push
test
dec
addr16
int3
pop
lds
pop
cmpsl
sbb
enter
cmp
sub
and
loopne
jecxz
xorb
sub
xor
in
or
lds
loop
pop
xchg
loope
inc
rclb
push
aad
ds
jne
pop
nop
adc
or
sub
add
insl
movsb
jb
push
pop
or
ja
mov
dec
or
cmpb
pop
inc
loopne
cmp
lds
xor
push
mov
cwtl
out
cmp
cmp
dec
pop
aad
jo
lods
xchg
inc
ljmp
aaa
mov
jl
sahf
or
mov
lods
icebp
dec
sahf
and
imulb
jp
mov
sbbb
inc
sarl
inc
ds
xor
sub
pop
outsl
cwtl
jge
cmp
jns
test
jmp
push
test
mov
cmp
cmp
inc
or
xor
lcall
xor
loop
in
mov
repnz
xchg
sub
pusha
mov
enter
xchg
cmp
or
sbb
pop
out
mov
je
scas
cwtl
sbb
cmp
aam
popf
cmp
ss
dec
cmp
xchg
jbe
inc
adcl
jmp
frstor
push
push
push
test
cli
mov
mov
test
int3
lcall
jge
ss
jmp
dec
stos
jmp
ja
fcomip
movsb
iret
sub
fstl
fcoms
mov
lcall
mov
cmpsb
icebp
mov
push
loope
fwait
roll
push
shl
fisubs
in
test
popa
out
pop
ret
and
or
mov
sbb
out
mov
loop
cmp
push
xchg
and
sub
pop
loope
mov
adc
pop
call
arpl
xchg
adc
mov
int
cltd
sbb
outsl
mov
and
cmp
fistpl
and
les
aam
mov
mov
dec
add
mov
jmp
mov
es
lret
ror
dec
aas
push
and
sbb
push
add
jle
movsb
pop
inc
add
inc
sarl
call
inc
pop
mov
movsl
in
incl
jl
cmc
pop
lds
in
dec
mov
mov
or
dec
mov
popf
dec
les
sbb
jg
repnz
adc
sbb
xchg
mov
add
lea
pusha
sti
addr16
xor
cmp
add
imul
cmp
ret
dec
mov
leave
sub
popf
xchg
jnp
adc
jl
rcrl
jge
add
scas
xor
xchg
and
cmp
loopne
jp
or
xor
push
fwait
jecxz
jl
sub
add
popf
rolb
jo
adc
addl
ret
pop
inc
dec
out
rorl
mov
loopne
movsb
arpl
adc
jecxz
pop
dec
xor
cmp
out
fmulp
mov
mov
addr16
aaa
jnp
push
and
lods
pushl
ja
into
jmp
aad
adc
dec
inc
ss
pop
ret
fbld
pop
mov
inc
add
pop
dec
cmpl
rcrl
mov
dec
mov
push
cmp
or
daa
fsubrs
mov
test
push
jnp
lea
fidivrs
repnz
dec
mov
pop
xor
dec
push
push
mov
xor
int3
xor
or
outsl
jns
cmp
dec
fdivrl
mov
test
stos
inc
fldenv
or
ljmp
mov
sub
mov
cmc
outsb
repz
dec
jge
cmpsl
inc
jmp
out
jns
and
loopne
out
out
jl
cmc
nop
test
push
cmc
jl
inc
out
std
das
imul
push
sti
aam
or
mov
cmpl
movl
cwtl
dec
loop
or
dec
scas
not
jae
es
andl
ret
mov
pop
lds
or
add
out
idivb
fsubr
fbld
cmp
imul
mov
cwtl
pop
lcall
addr16
adc
sarb
inc
test
inc
leave
jnp
adc
jl
mov
lock
pop
repz
rorl
cli
andl
subb
push
ja
pop
fsubp
push
add
mov
das
mov
sub
cs
stos
cmp
and
and
lea
cmp
sub
xlat
jbe
les
aam
and
je
inc
xchg
push
divb
jbe
push
pushl
movl
push
mov
pusha
movl
pusha
pushf
push
push
lea
jmp
ja
aaa
test
xchg
jecxz
jmp
fcmovnbe
mov
jecxz
pusha
add
sbb
and
jno
jne
add
lahf
inc
sub
and
jge
xor
sbb
repz
or
push
cmp
pop
scas
mov
pop
rcrl
rolb
imul
stc
outsb
xor
fs
imul
pop
cmp
sub
sub
xchg
xchg
mov
xchg
sbbl
xchg
mov
pop
push
sahf
and
jnp
sbb
jne
inc
dec
clc
mov
and
out
je
mov
jae
push
ss
inc
xchg
mov
adc
mov
jb
pop
inc
xor
movsb
sub
cmp
or
xor
mov
dec
les
fs
jne
dec
mov
call
pushf
mov
mov
dec
les
cmpsl
subb
push
xchg
pop
cld
jecxz
out
repnz
fcompl
xor
xchg
out
lcall
inc
xchg
out
lds
jbe
fimull
adc
dec
dec
xchg
sub
jmp
test
or
cmpb
jmp
subb
test
mov
cmp
rorl
movsl
je
xor
clc
sahf
aas
pop
addl
out
movsl
xor
jae,pt
push
cmp
lea
mov
and
xchg
mov
xchg
jne
lods
lahf
imul
jl
add
pop
stos
sub
cld
test
out
ret
push
mov
stos
aam
jge
popa
out
mov
nop
or
iret
roll
dec
les
jmp
das
or
shrl
and
pop
scas
sbb
roll
inc
and
or
pop
ljmp
or
fwait
xor
xchg
add
adc
fcomps
dec
mov
inc
sbb
in
push
ss
insl
outsb
aad
xor
jge
scas
adc
pop
sti
fidivrs
inc
push
push
mov
imul
mov
bnd
pop
fistpl
mov
vmread
mov
add
imul
sub
data16
jecxz
mov
sbb
mov
aam
xlat
iret
repz
aam
adc
leave
pop
inc
ja
cmpb
sbb
and
xchg
adc
xor
pop
mov
adc
add
or
jb
inc
int
push
dec
mov
or
add
addr16
adc
ja,pt
push
leave
inc
aas
mov
mov
lea
push
gs
cli
mov
sub
mov
or
popa
mov
loopne
mov
lcall
sub
test
mov
sbb
or
inc
les
lcall
adc
push
sbb
fdivs
jecxz
fbstp
lret
adc
or
fdivs
lea
pop
into
ljmp
xlat
loope
inc
test
or
sbb
dec
cmpsl
hlt
cmpsl
imul
out
mov
adc
stos
ljmp
mov
add
movsb
or
hlt
std
mov
pop
ror
int3
lds
inc
les
dec
cmp
pop
clc
mov
xlat
pop
pop
xchg
cs
scas
out
inc
and
int3
adc
cmp
lods
dec
fldcw
pop
cmpsl
cli
shld
cmp
fwait
mov
mov
and
adcl
insl
push
jmp
rcrb
hlt
jns
cmpsl
ret
aaa
imul
mov
ret
inc
sbb
paddq
lahf
mov
stos
or
mov
sbb
push
in
aam
or
jbe
out
cwtl
xchg
and
jg
pop
mov
xor
movsl
lret
lcall
jnp
aad
cmpsl
push
add
imul
and
aas
adc
mov
xchg
icebp
dec
loopne
or
lret
jcxz,pt
lods
testl
aam
cmc
test
fwait
insb
jl
add
pop
loope
stos
jle
push
xchg
pusha
insb
loope
rolb
ficoml
es
divl
push
int3
dec
aad
push
cltd
and
loopne
hlt
sbb
mov
pop
in
pop
cmp
in
inc
mov
mov
mov
or
jge
shlb
inc
fcomps
mov
jmp
inc
adc
out
repz
jns
inc
mov
fcoms
and
inc
mov
rcrb
mov
ja
out
dec
pop
adc
push
int3
jle
mov
sbb
scas
incb
and
popa
loope
jb
jo
adc
lret
insl
orb
jne
cmp
xchg
and
js
push
in
push
fwait
movsl
xchg
jne
dec
sahf
dec
lcall
pop
mov
dec
pop
cs
sbb
es
jbe
mov
push
iret
mov
js
fcmovnbe
pop
pop
and
cwtl
in
mov
out
call
adc
pop
fadd
stos
xor
test
xlat
mov
dec
xlat
ret
fcmovnu
mov
mov
test
push
mov
or
cmc
pop
or
pop
adc
mov
xchg
push
pop
inc
outsb
jnp
inc
iret
les
test
shr
imul
xor
stos
aaa
mov
std
loope
out
push
jbe
imul
inc
out
xor
cmpsb
and
sbb
adc
out
aad
lahf
add
outsb
add
or
cmp
test
or
push
xlat
sub
inc
test
sti
aas
popf
adc
cmp
decl
push
mov
jne
mov
xorb
rorb
push
sahf
sbb
mov
mov
cmp
jbe
adc
adc
push
test
out
aam
pop
inc
mov
push
movsb
mov
dec
pop
iret
push
cmp
push
out
push
add
int
mov
shll
std
pop
cltd
in
dec
jne
rcrb
imul
mov
mov
pop
cwtl
jno
push
xchg
int
das
fwait
addb
mov
xchg
xchg
push
shrb
in
fnstsw
mov
jo
sbb
sbb
in
inc
pop
fistpl
sub
bound
sub
jns
cwtl
xor
popa
push
mov
pop
retw
mov
mov
pop
add
loopne
das
cmp
sub
jp
in
mov
test
insb
into
ret
cmp
inc
mov
add
les
mov
jb
jo
mov
loope
mov
test
call
sti
bnd
jo
inc
roll
mov
or
or
pop
es
mov
sub
loope
cmp
lock
mov
cmc
imul
adc
into
mov
nop
inc
xchg
pop
fstpt
orl
jg
cld
mov
sub
into
pop
mov
cmp
ja,pt
mov
inc
mov
cmc
test
and
and
sub
ficoms
jl
inc
iret
dec
movsb
fcmovbe
dec
add
imul
fisttpll
dec
sub
add
jo
pop
ficoms
jle
or
xor
scas
fmul
inc
nop
sub
xor
mov
shrb
outsb
mov
shl
mov
sarl
pop
int3
mov
loopne
sub
xor
loope
mov
add
divb
pushf
pushf
popl
cmc
xor
call
pusha
xchg
ljmp
jns
sbb
mov
mov
jmp
insb
test
sub
xlat
xchg
mov
movsl
push
in
fdivr
fs
push
out
orb
popa
add
pop
or
mov
push
gs
int3
push
scas
fildl
xor
jns
pop
adc
lds
orb
xchg
and
xlat
xchg
jecxz
cmp
stc
test
les
stos
pop
sub
ljmp
and
das
pop
push
or
imul
xchg
jge
in
mov
inc
sti
mov
jg
push
dec
sub
fildll
cmpsb
ficoms
popa
in
icebp
inc
ja
aaa
mov
pop
push
jmp
xlat
xchg
mov
xorl
inc
xchg
sub
xor
or
xchg
xchg
movsl
fimuls
lods
ss
fwait
sub
jl
aam
cmc
xor
add
jp
xchg
inc
and
cmp
xchg
mov
xor
and
test
cmc
mov
jbe
jne
xchg
loope
mov
ds
loopne
call
test
push
add
out
cld
or
pop
add
mov
outsl
ret
push
pushf
cmp
mov
lds
sarl
jae
mov
cs
iret
int
mov
jns
sub
xchg
push
nop
xchg
out
jb
mov
xor
or
sbb
outsb
in
lcall
shl
mov
mov
fidivrs
mov
inc
in
adc
xor
in
rorl
push
lcall
cs
add
sub
ja
sbb
notl
push
icebp
out
mov
ja
pop
inc
mov
repz
ja
fcom
int
int3
xor
push
std
mov
pop
addr16
inc
fs
mov
jecxz
mov
fisubs
inc
xor
sub
addr16
jno
aas
in
and
stc
push
int
push
sahf
sbb
jne
add
rsm
lods
push
cltd
and
nop
ss
sbb
mov
jmp
pop
movsl
mov
in
adc
int
and
sbb
lods
add
repz
jno
fwait
cld
out
stc
rcrl
imul
ja
pop
cmpl
idivl
or
or
stos
and
test
arpl
idivl
cmp
ss
pop
dec
add
daa
inc
into
push
cld
cwtl
lahf
cmpsl
es
call
adc
xor
enter
rorl
sarb
je
out
mov
arpl
xchg
or
lea
xchg
je
dec
pop
ret
stos
jbe
push
inc
xor
or
test
in
fisubrs
repz
jnp
ficoml
out
push
aad
or
in
or
dec
ret
cmp
inc
and
arpl
jge
mov
add
call
nop
es
jns
and
xchg
repz
dec
push
mov
mov
scas
pop
push
mov
inc
and
add
enter
sub
and
add
push
stc
inc
loop
stos
inc
enter
push
cmc
mov
les
inc
sahf
cmp
cmp
imul
dec
xlat
faddl
call
int
adc
lahf
and
sbb
jecxz
stc
in
loop
mov
pop
or
xor
jecxz
sub
sbb
out
cmp
sub
push
push
in
xchg
push
cwtl
push
mov
xchg
adc
jne
or
pop
cmpb
pop
mov
sub
push
dec
pop
add
dec
add
inc
negl
sub
ss
xchg
nop
jns
jecxz
leave
inc
les
and
ja
xlat
pusha
sbb
fcomi
and
ss
sbbl
push
out
xor
adc
inc
fstps
push
pop
mov
jg
mov
mov
cmc
or
ljmp
inc
sub
ret
and
cmp
and
fs
mov
mov
lds
dec
stos
ss
out
mov
loope
cs
hlt
xor
lret
pop
xchg
insl
repz
jle
cltd
pushf
nop
ljmp
fistl
dec
lret
adc
and
movsl
stos
dec
les
mov
lds
xchg
stos
stos
lds
add
icebp
fsubs
mov
jae
lret
js
xchg
sub
aam
xlat
les
in
push
cmp
mov
push
jo
pop
pop
jbe
or
sbb
push
sbb
xchg
cmpsl
push
pop
jae
and
sti
jnp
lods
int
dec
ret
cmp
fucomp
lret
and
movsl
inc
cmp
xor
push
jle
and
or
loop
int3
mov
fdivl
dec
jnp
fsts
fs
mov
rcrb
insb
xchg
out
dec
je
jns
ficompl
icebp
inc
fisubs
add
fcoms
inc
inc
mov
pop
clc
cmpsl
xlat
int3
cmp
rolb
out
fs
sahf
and
pop
js
mov
cmp
gs
lret
es
ss
in
data16
push
add
inc
pop
adc
mov
fwait
sub
scas
mov
xor
dec
cli
andl
pushf
push
out
mov
insl
daa
fsubl
repnz
add
cli
xor
addl
arpl
and
pop
mov
inc
cmp
hlt
pop
xor
jmp
cwtl
xchg
xchg
adc
xchg
icebp
mov
jg
inc
jg
inc
inc
jb
movsb
mov
mov
jo
out
idivl
jno
ret
ss
mov
adc
pop
mov
imul
icebp
cmp
mov
mov
push
mov
sbb
int
lahf
adc
push
push
push
xor
mov
aad
or
xchg
mov
mov
adc
insb
and
stc
add
mov
das
neg
mov
push
lds
mov
ljmp
iret
push
orb
push
addr16
arpl
mov
cli
test
test
inc
cs
sbb
mov
pop
sbb
jl
push
or
adc
and
lea
jl
push
inc
mov
sub
dec
lock
xchg
jp
or
lahf
jp
push
mov
dec
xchg
jecxz
fs
push
fstps
mov
fistps
pop
aad
mov
in
and
test
inc
add
inc
xor
inc
dec
mov
hlt
fildl
lods
adc
adc
das
loope
insl
mov
sub
xchg
push
pop
xchg
popf
lock
cmpsb
cmp
sbb
jnp
rorb
and
mov
or
mov
arpl
clc
es
nop
test
pop
ljmp
lods
icebp
mov
inc
push
sbb
loopne
mov
push
jae
cli
int
dec
int3
or
cltd
in
mov
and
and
lret
xor
xor
lods
mov
push
xlat
pusha
jno
sbb
idivb
jp
sub
lods
inc
sub
movsl
inc
add
imul
jae
mov
dec
fistps
lods
popf
repz
out
push
icebp
jns
aas
aam
cmc
adc
adc
roll
adc
jbe
xchg
repnz
push
jo
insb
outsl
push
add
mov
gs
stc
dec
lea
mov
imul
dec
xchg
lock
cmpsl
adc
pand
mov
jns
xor
pushf
movb
movl
mov
pushf
jmp
push
adc
add
shrl
arpl
jg
pop
das
fadds
fdivl
ja
mov
pushf
mov
xchg
mov
rorb
fidivs
push
jp
les
push
cmc
mov
push
ret
mov
xor
mov
ljmp
mov
sub
jp
or
jge
adc
adc
push
lods
gs
push
push
insb
push
pop
iret
sbb
mov
stc
dec
rcrb
mov
repz
jo
cmp
inc
movsl
jl
xchg
ljmp
and
jle
outsl
add
sub
sahf
arpl
in
mov
push
push
jmp
int3
add
add
bt
pushf
xor
pusha
test
xor
push
test
xor
clc
jmp
cmp
xor
movb
stc
xor
movb
xor
call
in
mov
dec
mov
push
iret
ret
jmp
sub
and
mov
test
cmc
xchg
fwait
enter
lret
jb
lods
inc
xlat
je
pop
dec
daa
and
iret
jp
les
push
bound
clc
push
iret
sbb
or
push
xchg
mov
test
pop
test
and
test
mov
ja
enter
push
iret
cli
cltd
mov
icebp
imul
dec
push
insb
mov
or
test
das
lock
xor
loop
push
jl
xchg
mov
cmpsb
cmc
inc
push
push
iret
adc
sti
xchg
leave
sahf
sub
icebp
sub
outsb
push
mov
out
shl
cmp
outsl
fimuls
rolb
xor
push
mov
pop
and
or
cld
xchg
imul
inc
repnz
adc
jmp
out
cmpsb
sub
lock
mov
push
add
mov
jle
and
mov
xchg
fidivrl
dec
cmp
adc
xchg
int3
fwait
mov
push
pushw
inc
sbb
mov
mov
sbb
xchg
cmp
test
rcrl
fbstp
jle
jmp
addl
lock
xchg
and
push
lahf
negb
inc
and
test
iret
fcoms
jne
test
aad
int
push
aas
mov
repz
mov
mov
sub
fsubl
jle
nop
cld
loopne
pop
repnz
jl
mov
fsubrs
aas
cmp
in
insb
add
mov
nop
jge
mov
mov
rclb
sbb
xchg
xor
xchg
jno
mov
inc
es
daa
pop
push
dec
mov
pop
cmp
adc
pop
mov
sbb
push
test
cld
jmp
mov
cmp
and
mov
lcall
iret
jae
pop
add
fiaddl
insb
mov
and
mov
shrl
inc
lret
ret
jp
pop
or
mov
adc
clc
mov
les
push
call
dec
mov
popf
out
gs
int3
xor
mov
inc
xchg
add
movsb
je
adc
imul
ds
imul
lcall
and
insl
jl
mov
dec
rcrb
inc
inc
stc
mov
icebp
aam
cmp
orl
out
je
sub
mov
and
push
daa
and
repz
sub
push
lock
and
pop
dec
cli
jne
cmpsb
lock
jle
jne
fcmovnu
fidivs
jo
incb
and
push
cmp
pop
mov
add
mov
sbb
sub
cmp
ds
jl
xor
mov
orb
fbstp
mov
mov
shll
cmp
inc
fistpll
out
dec
out
xchg
cmp
cmp
push
int3
in
jb
sti
xchg
adc
pop
mov
aaa
pop
in
fidivrs
push
xor
push
pushl
sbb
fcmovne
mov
mov
sbb
popa
into
lea
rcrl
adc
hlt
int3
sbb
jecxz
ucomiss
das
mov
mov
repz
bound
bound
in
inc
lahf
push
push
sbb
jp
mov
mov
mov
sbb
inc
lahf
ror
outsb
xchg
cmp
jmp
push
cltd
push
or
das
fs
aad
ja
negb
jl
lods
adc
push
mov
pop
insb
mov
adc
ss
mov
and
mov
xchg
fucomi
mov
js
xchg
cmp
adc
lods
xor
adc
addb
cmp
popa
rdmsr
adc
or
stos
push
shrl
or
in
pop
cmc
repnz
std
fmul
mov
popf
and
xor
xor
hlt
insl
mov
sub
lcall
in
fmuls
outsb
idivb
lret
dec
enter
pop
jl
sub
mov
mov
rcrb
pop
sbb
mov
dec
fcmovnb
inc
xchg
fbld
lret
cmpsl
loope
adc
mov
fcomi
aas
adc
sbb
xor
pop
pop
mov
pop
aas
push
and
enter
sbb
je
mov
jns
test
pop
mov
fsubrl
fidivrl
jge
mov
add
and
add
jge
adc
int
stos
xchg
sbb
outsl
decb
or
cmp
mov
adc
and
in
scas
push
iret
cmp
je
and
xchg
adc
push
rcrl
dec
out
inc
mov
in
xor
popf
fwait
into
leave
les
rcl
loopne
mov
lds
pop
cltd
test
mov
mov
mov
push
repnz
unpckhps
adc
dec
pop
add
mov
sahf
call
repz
xchg
rol
clc
mov
ds
jp
sub
daa
cmpsl
ljmp
out
mov
popa
or
mov
inc
inc
cld
roll
mov
and
stc
mov
mov
push
cmc
bound
lods
cld
incl
lods
insl
negl
and
mov
cmp
jo
adc
imul
add
add
add
out
negb
lock
scas
push
mov
xor
xor
or
xchg
sub
and
mov
test
jp
inc
inc
pusha
mov
in
jb
lcall
int
pop
jae
aam
push
xor
jp
popf
outsb
inc
mov
nop
mov
pop
addb
enter
pop
jle
push
or
push
in
lret
imul
mov
cmp
inc
dec
sub
lahf
stc
inc
lcall
mov
fsubrl
stos
shlb
adc
popf
sub
ficoms
xor
js
cli
pop
jmp
outsb
out
fcomi
fnstcw
dec
jns
movsl
ficompl
xchg
daa
or
and
pop
sahf
xor
cmc
stos
popf
mov
ds
push
mov
and
or
loop
xchg
cltd
into
mov
mov
push
int3
cld
lock
jb
jge
cmpl
fildl
xchg
dec
les
or
dec
aam
mov
decb
repnz
inc
fdivs
stos
xor
lret
push
pop
scas
cmp
adc
repz
sbb
sbb
shll
mov
cmpsl
fsts
aad
cmp
xlat
mov
xor
in
jno
dec
pop
push
lret
daa
scas
lock
pop
je
lcall
mov
jecxz
sbb
jp
loope
nop
cmp
orb
movsb
cld
mov
or
cmpsb
lock
loope
dec
adc
je
leave
std
cmc
sahf
scas
xor
cmp
jp
cmpsb
sbb
bound
pop
insl
and
gs
mov
inc
stos
mov
clc
cltd
xchg
adc
pop
jge
out
xorb
cmpsb
add
sarl
mov
out
pop
xchg
jp
xor
dec
in
cmpsl
xor
insb
ficoml
sbb
testb
sub
cld
aas
aad
mov
orb
pop
mov
fstps
aaa
mov
ljmp
imul
jns
scas
dec
jle
incb
push
xorl
push
leave
sub
js
push
std
mov
pop
xchg
packssdw
jnp
push
aam
fwait
xchg
mov
pusha
cmp
into
push
push
test
pop
int3
xchg
scas
pop
jp
adc
pop
sub
ret
xchg
fs
lret
loopne
adc
divb
mov
xchg
jecxz
jo
sbb
mov
or
xor
pusha
pushl
pusha
movl
pushf
mov
pushf
movl
pushf
pushf
movw
mov
lea
jmp
movl
call
movl
push
movb
call
movl
pushf
pushl
pushf
lea
jmp
xorl
test
xor
std
pushl
popf
push
movl
pushl
ret
push
movl
pushf
pusha
lea
jmp
dec
inc
xchg
sbb
dec
outsb
push
addr16
fs
sub
mov
xlat
lea
xlat
and
sbb
inc
leave
push
sub
or
or
mov
jp
mov
xor
and
mov
setnp
inc
jo,pt
in
push
lahf
rolb
stos
inc
sbb
dec
mov
pop
movsl
mov
mov
mov
add
gs
insl
stos
aas
imul
jg
and
xchg
pusha
mov
subb
mov
dec
push
test
and
sbb
cli
cmc
jne
inc
push
push
pop
pop
jno
rcrb
xor
jne
sub
mov
insb
movsb
inc
xchg
cs
je
test
dec
loopne
rolb
jl
add
mov
push
push
movsb
sub
inc
mov
mov
outsl
push
and
pop
loopne
movsl
into
mov
pop
add
icebp
in
mov
push
pop
and
jg
ss
push
test
out
inc
jne
pop
pop
jno
je
push
cli
fisttpl
xor
xchg
movsb
test
mov
cmp
mov
arpl
imul
xchg
inc
rcrb
lods
jle
and
divb
cmp
cmpsl
jmp
gs
das
mov
lock
outsb
push
mov
xchg
push
rolb
pop
dec
outsb
push
mov
xchg
or
xchg
loope
cli
test
pop
scas
int3
pop
add
orl
fwait
das
mov
stos
divb
ds
and
inc
fs
jo
rolb
scas
jne
pop
add
into
repnz
shlb
in
das
mov
adc
jl
inc
add
sbb
rolb
and
pop
mov
jbe
mov
ja
repz
aas
hlt
mov
lock
fwait
das
mov
dec
xchg
mov
sub
cmp
std
xor
add
jbe
nop
aam
out
mov
inc
in
rolb
mov
mov
xor
push
popf
test
or
fidivl
pop
nop
lcall
jecxz
and
jb
cmpsb
rcl
xlat
add
pop
push
push
push
imul
add
mov
xchg
fnsave
rclb
test
out
and
mov
cli
nop
pop
jl
vpcmpgtd
cmp
mov
jp,pt
add
push
les
push
fdivs
jecxz
sbb
sub
andb
fisubrs
ficoms
add
xchg
mov
and
out
sti
fdivl
xchg
sbb
dec
jge
xor
xor
cltd
mov
xchg
cmp
lods
jge
out
xchg
and
add
mov
xor
in
ret
adcl
xchg
jns
pop
lahf
nop
jge
jp
xor
mov
into
xlat
push
xchg
xor
cmp
es
and
int
stc
test
mov
incl
pop
js
add
adc
fwait
and
fistl
and
push
pop
pop
out
adc
jmp
push
leave
sbb
daa
shll
aad
jge
mov
add
xor
adc
jecxz
inc
adc
pop
loope
loopne
xor
popa
loope
mov
fisttpll
sbb
mov
cmp
fsubrp
push
shl
jmp
lret
mov
mov
push
cltd
xor
lret
cld
call
lds
imul
outsb
ja
fstpt
add
out
es
popf
lret
andl
repz
shrb
pop
in
jmp
or
jae
mov
ret
sbb
jle
sub
pop
pop
cld
pop
push
push
inc
mov
pop
outsl
lfs
adc
loope
and
mov
adc
sbb
push
mov
add
mov
les
test
mov
cmpsl
jmp
mov
mov
shlb
jb
iret
sub
xorl
jl
and
dec
roll
or
jge
push
sarb
mov
adc
test
and
daa
fsubrl
addr16
sbb
fisubrs
mov
daa
jb
ja
testb
in
js
rcrl
lods
mov
loopne
adc
cmp
xor
ror
sub
in
je
dec
xor
pop
dec
mov
inc
dec
sub
popf
call
aad
add
mov
out
adc
int3
mov
mov
jae
fisubrs
add
gs
push
popa
das
cmovae
pop
test
imul
shlb
mov
shl
cmp
mov
nopl
stos
ds
arpl
outsl
iret
and
mov
sarb
inc
fisttps
push
mov
jns
xor
ljmp
mov
ret
pop
rorl
add
xchg
adc
xchg
xchg
inc
divb
mov
js
fbld
pop
lahf
jecxz
mov
enter
mov
sub
sbb
cld
sub
cmp
shlb
inc
nop
sub
lods
aam
cwtl
les
sub
sub
imul
or
pop
fbld
mov
add
das
dec
dec
addl
mov
ja
push
in
cld
inc
jmp
scas
pop
ljmp
push
fs
popa
mov
int3
jmp
hlt
dec
push
or
mov
push
xchg
outsb
stc
cmp
pushf
push
jle
jge
xor
ret
push
or
bound
daa
call
cmp
aad
cltd
addr16
rolb
hlt
lds
mov
ficoms
inc
push
mov
adc
lods
and
movb
ljmp
jno
xchg
push
cmp
pop
lret
or
ficoms
sub
pop
jbe
or
gs
jno
inc
add
fisttpl
xor
sub
shlb
insl
cmc
mov
fisubl
stc
mov
inc
mov
rcl
jae
iret
lret
test
push
shl
sub
sbb
outsb
stos
fxch
mov
cmp
adc
dec
cltd
xor
jp
push
mov
cmp
sbb
test
jb
cwtl
mov
or
mov
jnp
fcmovb
cmp
sbb
sarl
inc
aad
cmp
pop
sarb
inc
adc
insl
cld
add
adc
jl
sbb
lods
cmc
in
jge
push
call
aaa
mov
rcrl
aaa
imul
pop
insb
mov
movsl
cltd
xchg
mov
cwtl
add
cmp
adc
xchg
daa
push
jnp
aaa
pop
add
int
push
pop
mov
and
out
add
mov
xchg
inc
mov
inc
and
inc
lods
xor
xor
loop
pop
out
mov
push
sub
jne
xchg
mov
out
lock
into
movsb
dec
repnz
dec
xchg
and
pop
mov
pop
mov
jnp
mov
jb
popfw
ss
stc
lcall
jl
dec
mov
cli
lahf
adc
loope
push
adc
and
xlat
mov
jo
cs
cmp
cmp
stos
mov
pop
stos
shld
nop
cltd
mov
mov
mov
sub
add
cmp
cmpb
es
add
lea
gs
in
out
cmp
xchg
repz
sarl
fcomps
xchg
xchg
or
push
pop
std
pop
push
popf
add
inc
mov
pop
sbbl
adc
inc
loopne
jne
inc
aaa
inc
and
popa
in
pop
sbb
jnp
cltd
cld
pop
iret
xchg
ljmp
jne
adc
fstpt
xlat
fimull
outsl
or
in
push
sti
mov
dec
pop
orl
popa
out
pushf
sbb
or
jmp
in
cwtl
fstpt
mov
in
lock
xor
shrl
cmp
addr16
mov
jge
mov
shrb
sbb
fstl
das
test
xor
mov
fsub
cwtl
inc
fsubl
shll
jmp
outsl
and
fucomi
mov
dec
or
nop
fldt
lahf
out
and
sti
inc
fsts
and
inc
xor
pop
jecxz
enter
iret
repz
call
pop
test
dec
lahf
xor
lock
lahf
pop
push
xchg
rorb
aaa
mov
pushf
sub
push
or
mov
cld
mov
fsubp
cmp
adc
icebp
fdivrs
sar
imul
xchg
imul
jae
movl
xchg
push
test
lret
mov
aas
mov
aaa
dec
xorl
rorb
lods
pusha
arpl
or
add
pushf
xor
call
pushf
lea
jg
pusha
movl
push
movl
pushl
pushl
pushf
lea
jmp
mov
popa
mov
out
inc
mov
jae
mov
mov
jbe
aas
mov
pop
mov
xchg
adc
sahf
pop
arpl
jmp
int
in
adc
or
into
mov
xchg
mov
mov
imul
cld
pop
push
mov
pop
xorb
inc
into
hlt
push
mov
push
pop
movsb
lds
adc
sbb
mov
out
test
inc
mov
mov
imull
ljmp
notb
mov
negb
jnp
test
cli
xchg
inc
lock
sbb
dec
lret
mov
mov
test
lock
pop
fsubl
cmp
jne
stc
fistl
cmc
sbb
add
subb
push
and
push
pop
cmp
and
stos
cli
xchg
lret
std
fistpll
xchg
push
pop
neg
jne
out
fstps
inc
jl
inc
fcmovb
pop
aam
ret
out
xchg
mov
push
push
sahf
jae
lcall
std
xchg
cli
mov
dec
test
aas
push
dec
push
in
xchg
testl
in
roll
imul
fs
mov
push
xchg
jno
add
jns
nop
sbb
push
or
mov
lahf
mov
subb
clc
xchg
sbb
add
ja
cli
xchg
clc
sbb
ljmp
std
xchg
js
imull
push
pop
mov
pop
inc
mov
pop
or
aad
cmpb
jne
xor
and
std
mov
imul
sbb
in
cltd
jo
mov
mov
in
aaa
int
repnz
sub
jne
jae
xorl
push
in
push
aas
stos
lret
push
mov
es
leave
xor
aam
inc
rcrl
shlb
push
push
lahf
cmp
or
mov
cmp
cmpsb
or
sbb
mov
mov
jge
insl
cmc
stc
pushf
mov
rclb
xchg
mov
test
and
movsl
xchg
push
repz
lea
push
push
dec
clc
in
sub
adc
lret
adc
xlat
iret
pop
pop
inc
leave
sub
pushf
pop
push
mov
sbb
leave
cmp
inc
or
jo
cmp
or
lcall
mov
sahf
js
push
jp
or
mov
xchg
pushf
in
mov
sub
or
sbb
mov
push
pushf
subl
or
clc
push
in
sbb
inc
and
dec
cmp
je
mov
outsb
push
movl
jae
xchg
push
push
rorl
push
mov
mov
jae
push
dec
mov
loope
jmp
scas
add
cli
stc
mov
out
mov
or
outsb
push
scas
or
movsl
xchg
mov
cmp
mov
arpl
pop
cmp
in
shrl
push
sbb
dec
jp
fisttpll
stc
fisubrs
pusha
push
faddl
jle
mov
aas
push
mov
sub
xchg
dec
pop
cmp
adc
subl
test
in
das
xchg
jae
mov
inc
ret
jne
sub
in
mov
dec
push
cmp
cmpsl
sub
test
cmc
rcrl
lea
decl
fwait
inc
dec
sub
stos
sbb
adc
in
cmc
scas
mov
jp
push
inc
jmp
lds
inc
cmp
lods
es
and
imul
in
out
movsl
mov
add
sub
out
call
mov
call
mov
std
push
push
int
lods
xor
fisttpl
dec
sub
scas
cmpsb
jnp
lods
fisttpl
idivl
and
xor
sahf
inc
stc
bound
mov
mov
pop
push
stos
inc
out
and
roll
addb
cmp
popa
lahf
loope
xchg
sbb
aad
mov
pop
inc
ret
add
addr16
in
xchg
add
and
lret
pop
enter
cmp
mov
sbb
lret
dec
sbb
ret
pusha
add
jecxz
jno
push
xchg
ret
jmp
fisttps
adc
hlt
outsb
push
mov
ss
and
xlat
addb
or
jge
dec
sahf
ljmp
ja
jnp
scas
fs
xor
sub
out
and
jnp
xor
xor
and
xor
int
inc
and
stos
mov
cmpsl
in
cmp
outsl
mov
xchg
jg
inc
pop
in
addr16
fdivl
adc
add
cmpsb
cmp
inc
mov
jp
or
jmp
ret
mov
std
leave
inc
mov
in
outsl
mov
or
inc
pop
movsb
and
ret
mov
lds
in
or
ljmp
adcb
sub
mov
repnz
fcoms
push
xchg
xor
push
adc
into
push
sub
sbb
push
into
insl
repz
pop
xchg
adc
aad
xchg
or
cmpsl
pusha
cmpl
popf
pop
xor
cmp
ss
lods
jb
test
adc
push
stos
lea
js
mov
dec
jg
adc
clc
sub
in
jle
push
mov
mov
pop
dec
je
push
xchg
ficompl
movsw
pop
rcr
in
es
xor
add
aaa
push
mulb
popa
int
mov
pushf
jne
mov
outsl
adc
aaa
stos
add
aam
ss
inc
dec
mov
and
std
pushf
cmp
push
inc
imul
sahf
jle
mov
sbb
test
in
cwtl
notl
inc
inc
clc
enter
cmp
cli
out
popf
adc
out
ret
loope
stos
movsb
sub
data16
out
and
repz
push
lock
mov
and
leave
shl
push
jno
jp
or
push
and
or
and
loop
fmuls
in
sarl
sbbl
enter
pusha
call
mov
mov
popf
fsubl
and
ljmp
daa
test
push
jae
mov
imul
mov
daa
inc
icebp
sub
jl
push
dec
cmp
pop
pop
pop
popa
mov
pop
leave
ja
pop
xchg
popf
inc
repnz
ficoml
cld
xor
arpl
fstpl
cmp
mov
test
shlb
mov
outsl
jle
lods
popf
xchg
inc
aas
fcoml
push
inc
cmp
fcompl
test
push
iret
and
sbb
add
rorb
mov
mov
insl
lods
xchg
clc
dec
mov
scas
inc
adc
rcrb
outsl
std
mov
out
fmul
sbb
xchg
xchg
sbb
imul
lcall
cs
sarl
mov
or
int
xchg
daa
push
cmp
imul
xchg
or
xor
push
aam
inc
fs
pop
jns
and
lret
mov
mov
outsl
push
aaa
rclb
out
lret
push
in
aam
cmp
mov
lock
and
sarb
inc
xor
movsl
js
mov
mov
xor
movw
pushf
popl
pusha
xor
call
pushf
pushl
pushf
movl
movb
call
call
movl
je
pushf
movl
pusha
pushf
push
lea
jmp
pushf
pusha
mov
movl
pushf
pusha
pushf
lea
jmp
movl
pusha
mov
pushl
movb
lea
jmp
pushf
jmp
movl
pushf
lea
jmp
das
sbb
cli
popf
sbb
iret
xchg
icebp
dec
fwait
jmp
push
stos
cli
nop
mov
add
adc
adc
mov
or
les
and
aam
jmp
ds
cld
test
invd
jl
xchg
fcompl
inc
ss
xor
aaa
xor
mov
xchg
stos
mov
data16
rolb
icebp
sbb
xchg
xchg
add
mov
rorl
push
jl
or
int
loope
cs
add
out
iret
hlt
imul
sub
aam
sbb
sub
mov
loope
jb
rorl
mov
out
dec
mov
int
mov
xchg
mov
jecxz
shll
sub
push
cmp
ds
mov
push
inc
test
ret
out
push
arpl
lock
inc
mov
cmp
ffreep
inc
jmp
jne
inc
and
adc
pop
and
outsb
shrl
sarb
faddl
xor
hlt
mov
pop
pop
out
imul
jae
test
xchg
pop
and
negl
sub
jg
test
aas
stos
repz
popa
mov
scas
mov
mov
dec
lret
out
dec
pushf
sbb
add
inc
ss
and
cli
jnp
xchg
sub
in
fisubl
sub
adc
bound
xchg
cmp
pusha
push
pop
test
pusha
lods
ss
mov
fisttpll
lret
xchg
xchg
mov
xlat
flds
jmp
fldcw
ja
and
divb
pushf
pusha
movb
movl
pushf
push
movl
mov
lea
jmp
jmp
dec
and
bound
jne
and
inc
xor
cmc
pusha
dec
pop
mov
nop
jnp
xor
xchg
lret
mov
fdivr
jb
imul
push
je
jns
xchg
ljmp
xchg
fnsave
and
push
mov
iret
add
stos
hlt
loopne
dec
dec
fstpl
outsl
add
xor
xor
xchg
inc
sub
jp
es
stos
shlb
push
push
pop
xchg
xor
jle
int
loope
add
dec
imull
sbb
xor
add
mov
and
data16
outsl
add
iret
add
out
mov
jl
and
sarl
push
out
jae
outsb
jae
cmp
aaa
xor
mov
dec
in
fstps
jp
lret
xor
test
repz
inc
loope
or
iret
test
xorl
stos
xor
xchg
aam
push
mov
fsubl
push
xchg
cwtl
sbb
ret
fnstenv
test
or
insl
xchg
aaa
xchg
jne
and
out
stc
mov
dec
adc
cli
repz
jbe
fs
lds
cmpsl
das
dec
testl
inc
pop
push
pusha
test
or
mov
mov
jle
mov
push
sub
repnz
scas
sub
sti
or
in
imul
dec
jecxz
push
adc
sbb
pushf
jne
cmp
adc
icebp
jp
sub
xor
fwait
sbbl
mov
xchg
xchg
xor
xor
push
dec
push
jle
sbb
cmc
pop
cmpsl
fwait
ds
or
sbb
int3
mov
sbb
dec
aam
push
addb
add
mov
mov
imul
add
sbb
mov
out
xchg
fs
push
and
call
pop
jne
jle
test
xor
mov
xchg
js
xchg
popl
dec
push
fsubl
jne
xchg
and
xor
stos
sub
inc
addr16
fldcw
movsl
pushl
loope
cwtl
call
fistl
cmc
fisubs
scas
xor
cmc
subl
pop
jge
mov
std
clc
in
hlt
std
push
or
jns
mov
jno
lods
fnsave
and
imul
mov
rcll
mov
cltd
orb
in
sbb
dec
jmp
and
daa
ljmp
inc
insb
cltd
cmc
adc
pusha
pop
fs
arpl
out
lds
mov
in
or
mov
fsubr
imul
loopne
mov
fadds
repz
fwait
add
movsb
fxch
pop
int
cmp
fs
push
lret
push
pushf
pop
je
ljmp
or
or
popf
mov
scas
lret
sub
call
sarl
das
push
out
cmpl
out
or
jmp
frstor
sub
push
cwtl
and
aam
lret
data16
ds
ljmp
sub
sbb
dec
inc
scas
lret
inc
pop
ret
jnp
or
push
gs
push
add
cmpsb
mov
fidivrl
loope
inc
cmpb
jne
mov
out
shrl
fsubrs
nop
mov
dec
mov
das
das
popf
and
stos
sbb
xor
mov
mov
addr16
sbb
mov
fs
xor
pop
dec
cld
insb
jp
push
jns
push
lcall
out
int
scas
out
daa
clc
jle
sub
jns
add
mov
adc
js
xchg
incb
mov
adc
xchg
or
cmp
inc
jp
jbe
sbb
mov
arpl
sub
jo
inc
adc
mov
cmp
out
mov
adc
daa
mov
and
icebp
test
shrl
out
dec
jne
pop
scas
gs
dec
lcall
sahf
mov
push
imul
add
sub
notl
cmp
imul
mov
test
je
mov
mov
shr
push
mov
inc
arpl
jno
and
int3
aaa
scas
into
sub
mov
adc
adc
sub
and
dec
into
jo
in
sub
mov
gs
xchg
or
pop
outsl
mov
in
xor
std
int3
test
and
mov
pop
movsl
outsl
add
xchg
xchg
repz
lods
lahf
fstp
and
cmpsl
xor
std
sarb
add
ret
enter
loopne
add
xor
cltd
push
sub
jno
lock
cld
rolb
leave
mov
lret
adc
out
or
xchg
ss
outsl
bound
jg
pushf
les
test
jmp
mull
cmpsb
mov
xor
in
mov
js
xchg
and
and
pop
fwait
cmp
gs
add
negb
mov
into
pop
and
cwtl
loope
sahf
sub
int3
iret
js
pop
jl
xlat
les
add
inc
sbb
repnz
jne
loop
xchg
push
nop
xorb
ret
mov
clc
arpl
jns
aaa
mov
cmp
out
insb
jmp
cltd
mov
iret
cmp
lcall
mov
jle
mov
sbb
and
adc
lea
clc
sahf
sbb
test
or
dec
rcrb
and
inc
adcb
insb
mov
add
movb
or
scas
rorb
ret
or
push
dec
sub
add
ficoml
dec
cmp
mov
push
jo
les
sbb
inc
call
xchg
mov
pop
mov
das
jno
pop
mov
dec
xor
repnz
inc
push
add
xor
add
lcall
test
je
mov
ficomps
sbb
mov
loop
lea
mov
or
shll
mov
pop
pop
pop
nop
test
mov
int
pop
add
xlat
imul
mov
fstps
dec
sbb
jo
pop
xor
aaa
orb
sahf
add
mov
lahf
ret
or
sub
and
cwtl
xchg
mov
out
fwait
int3
lea
jl
xchg
jp
push
lock
orl
loope
xlat
mov
ja
sub
or
mov
addr16
idivb
adc
inc
mov
jae
xor
loop
in
imul
pushl
gs
xor
xor
sahf
mov
iret
js
xchg
xchg
fdivrs
push
mov
repnz
outsl
jae
push
mov
dec
mov
faddl
cmp
xor
add
outsb
mov
pushf
add
lods
xor
rcll
stos
in
loope
xchg
int3
call
push
jecxz
xchg
sti
xadd
movsb
dec
das
rcrb
addr16
and
sbb
jb
int3
pushf
xlat
jbe
dec
js
out
pop
negl
dec
add
cld
arpl
xchg
in
push
mov
dec
push
aaa
mov
sarb
cmpsl
outsb
imul
mov
mov
int
movsl
repz
mov
xchg
push
inc
cmp
in
cwtl
hlt
inc
pop
inc
into
and
pop
adc
jno
lods
adc
sbb
call
fisubrl
pop
sub
das
push
inc
dec
xor
add
or
mov
outsl
sbb
enter
sub
lret
ror
push
jmp
adc
es
sbb
pushf
sahf
jmp
sahf
fs
repnz
push
push
mov
sub
pop
cmp
or
iret
adcl
sub
push
sub
xchg
xchg
lahf
jecxz
inc
sbb
int
je
or
xchg
fs
lock
adc
sub
fxam
rcrl
xor
push
pushf
add
pop
pop
test
and
cltd
xor
dec
aad
outsl
jge
push
cmpsl
pop
adc
icebp
scas
push
xchg
sti
jae
xlat
jns
test
mov
mov
lock
sub
scas
incb
inc
sub
movsb
ret
inc
in
jae
in
out
aam
fcompl
fldt
jo
dec
push
out
data16
xor
push
push
arpl
xchg
shll
icebp
jb
mov
mov
push
push
fildl
mov
leave
jle
or
jmp
pop
sbb
sbb
int3
xchg
jo
std
popa
push
push
cld
ret
loopne
push
imul
and
pop
hlt
sbb
je
cmc
outsb
test
imul
mov
ret
rcrb
sbbl
stos
and
inc
sbb
dec
inc
push
fmull
stc
nop
scas
aas
sub
xchg
daa
inc
aas
and
cmp
push
pushf
cmp
aas
sbb
add
int
repz
cmc
fildll
cwtl
sub
mov
in
pop
cmp
bound
jmp
adc
mov
mov
pop
sub
dec
je
gs
gs
jno
int
lcall
fstps
clc
shrl
in
sbb
lret
add
adc
arpl
pop
cli
inc
jmp
dec
adc
mov
or
mov
in
xchg
mov
push
imul
or
or
ss
mov
sub
dec
jne
mov
xor
dec
fwait
xor
dec
xchg
ss
xor
or
fdiv
mov
aad
xor
roll
xlat
bound
test
out
mov
sbb
out
pusha
pop
push
cmp
sub
stos
les
push
pop
int3
dec
mov
enter
jl
dec
js
jge
movsb
xor
xor
xchg
sub
cwtl
lret
and
pop
je
inc
xchg
xchg
adc
ret
jmp
rcll
hlt
or
fiadds
sbb
lahf
movsb
cmc
js
inc
data16
out
fadd
popa
lcall
lret
icebp
enter
movsb
inc
push
movsl
repz
call
sbb
lahf
inc
repz
xchg
fldenv
call
aam
gs
lods
mov
inc
je
nop
out
jb
mov
push
lret
inc
jle
adc
dec
xor
fildll
mov
pop
xchg
xchg
sbb
jbe
popf
sub
inc
movl
lds
mov
sbb
test
sub
dec
mov
popf
es
and
mov
lods
mov
pusha
leave
dec
xor
pslld
jmp
mov
add
mov
aad
test
aam
jp
jl
lds
sbb
jb
inc
arpl
dec
add
sbb
test
push
fistl
out
test
movsb
icebp
and
add
add
adc
push
sub
jnp
xchg
push
mov
rcll
mov
jbe
scas
xlat
imul
addr16
xor
out
loope
popf
mov
mov
xlat
adc
sub
loopne
push
scas
dec
ret
cmpsl
cmp
xchg
pop
fsubl
mov
popf
adc
rcrl
mov
outsb
add
popa
inc
mov
and
lcall
stos
jae
jecxz
rclb
loopne
mov
icebp
les
push
or
adc
dec
add
iret
js
pushf
jl
push
in
mov
std
lea
sbb
xor
movl
pushf
mov
pushf
lea
jmp
dec
pop
insb
hlt
push
cmp
jbe
cli
outsb
rclb
mov
add
icebp
jnp
stos
push
mull
call
sub
push
mov
repnz
jns
stos
ss
mov
stos
xor
in
repz
cli
mov
mov
fadd
adc
int3
xor
std
sub
push
push
test
sbb
push
fnsave
pop
cli
adc
aam
push
int3
dec
mov
mov
xchg
ds
mov
add
dec
nop
push
es
lret
lods
inc
in
shlb
push
sti
push
gs
cmp
inc
rcrb
pusha
call
rorb
mov
add
push
cmp
gs
data16
movl
test
rolb
cltd
cmc
into
adc
dec
push
shrl
cmpsb
mov
push
rorl
adc
stos
into
mov
stc
sbb
pushl
repnz
mov
movsl
je
ret
mov
or
adc
inc
jl
fadds
ret
xchg
and
jp
popa
mov
test
nop
push
daa
aas
mov
icebp
sbb
xor
std
nop
dec
dec
add
jno
or
push
and
dec
fsubrl
push
mov
push
inc
jb
pusha
mov
or
sub
imul
adc
push
mov
je
mov
xor
lods
mov
push
cltd
dec
call
stos
xor
jmp
mov
test
setae
jne
sub
sub
push
mov
es
lods
xor
cmp
je
jbe
rcll
push
jo
mov
xchg
xor
movsl
adc
mov
lret
mov
pop
inc
and
sub
pop
cwtl
addl
mov
inc
out
cmp
scas
sub
xchg
addr16
outsb
dec
cli
xchg
push
dec
clc
scas
inc
cmp
jmp
adc
jnp
or
sbb
cmp
push
jmp
dec
and
mov
rcll
dec
and
test
add
icebp
pop
stos
aaa
popaw
mov
adc
lds
mov
imul
adcl
jo
inc
cld
clc
xor
inc
lret
dec
jns
jmp
inc
nop
mov
or
add
cmp
mov
xor
fs
popf
push
sub
ss
jge
xorl
push
clc
mov
fdivr
loop
xchg
in
jo
int
leave
fcmovnu
movsl
loope
leave
test
je
and
xor
jo
sbb
cmp
push
daa
xor
scas
rolb
mov
fnstcw
push
hlt
repz
les
push
iret
push
fwait
sub
gs
int
fs
cmp
sub
imul
rcrl
mov
adc
and
cltd
pop
mov
and
inc
sub
test
leave
scas
jmp
lret
shlb
sub
and
add
xor
and
decb
insl
jo
mov
scas
mov
dec
mov
lds
gs
fwait
pusha
hlt
or
mov
ljmp
je
xor
loope
aam
mov
cs
mov
cli
out
aam
pop
stos
xrelease
xchg
dec
xlat
mov
fcompl
outsb
fiaddl
cwtl
aad
xor
xchg
imul
mov
adc
mov
in
mov
mov
xor
pop
in
jnp
push
ret
sub
addl
fisttpl
lahf
movsl
jne
sub
pop
arpl
xchg
insl
sub
mov
jb
inc
scas
fcmovb
inc
xchg
shll
xchg
shll
rcrl
ds
pop
mov
cwtl
enter
out
loop
dec
lods
fs
mov
test
gs
arpl
test
push
out
jbe
mov
xor
cmp
js
test
std
or
or
xor
inc
cli
pop
mov
adc
adc
repz
jnp
xchg
nop
jecxz
incb
sub
push
popa
pusha
inc
mov
jp
mov
jnp
lock
dec
ret
push
movsb
in
test
jne
movsb
inc
aad
roll
push
xchg
cmp
jg
rorb
add
pop
mov
mov
lahf
ficoms
fsubrl
in
mov
ret
ret
in
adc
cmp
xor
ds
xchg
fisubrs
mov
arpl
push
in
inc
cmpl
xor
jo
jae
xchg
jp
pop
lret
cmp
pushf
andb
jnp
xor
movsb
pop
cmpsb
arpl
adc
xchg
pop
xchg
cmp
es
pop
jp
mov
xchg
test
xchg
sbb
sub
les
stos
inc
mov
pop
clc
or
ss
add
push
popf
sbb
aaa
ja
int
fwait
dec
loopne
sub
xor
fmul
nop
xor
add
jmp
aaa
dec
movsb
pop
fidivs
scas
addr16
gs
nopl
xor
and
imul
out
mov
inc
lret
outsb
mov
in
push
or
imul
les
outsb
pop
inc
push
inc
fidivl
shl
iret
ds
in
stos
cmp
leave
sbb
cmp
cmp
xor
jb
ja
sbb
pop
xchg
dec
dec
and
aas
les
scas
xor
loopne
push
and
loopne
ss
psubd
xor
adc
out
xchg
xchg
sahf
ja
mov
clc
dec
and
jmp
nop
sub
dec
lret
mov
mov
mov
shll
repz
adc
insl
shll
xchg
test
jp
orl
add
shlb
sbb
fsubrs
out
out
rol
pop
pop
adc
mov
inc
pop
pushf
sbb
jg
push
shll
movsl
xchg
xchg
leave
les
jp
das
mov
xchg
lret
arpl
xchg
ja
and
inc
inc
popa
dec
mov
adc
and
and
addr16
jo
mov
cmpsl
inc
jge
sub
ds
add
dec
pop
lahf
xor
sub
or
subb
lcall
cli
inc
or
or
fdivl
ds
mov
addb
adc
jo
push
and
int3
add
mov
cmpsl
rol
push
out
fucomip
add
jl
xchg
pop
or
repz
mov
pop
sbb
test
push
js
push
movl
mov
inc
in
jno
sbb
mov
xchg
fists
loop
lods
popf
int3
jnp
inc
mov
movsl
insb
pop
imul
mov
add
xchg
push
ds
push
mov
adc
mov
dec
fisttpll
dec
out
mov
or
in
das
stos
rorl
push
inc
and
pop
nop
sub
pusha
and
imul
ficoms
push
lds
pop
popf
xor
mov
loopne,pn
hlt
push
sub
adc
fistpll
test
dec
mov
xor
push
xchg
es
repnz
inc
in
jae
imul
xchg
das
sub
sub
inc
xor
push
push
or
insb
mov
dec
add
aas
inc
iret
pop
lods
xor
insl
xchg
sbb
roll
daa
rcrl
cmp
lock
cld
mov
enter
mov
inc
xchg
xor
std
xchg
ret
sbb
cmp
aad
pop
negl
inc
cmc
jns
mov
cmp
jnp
jns
jb
mov
xchg
ds
adc
push
push
popf
call
aam
xor
test
ljmp
outsb
ja
out
mov
pusha
fisttpl
pop
and
aas
push
push
cwtl
xchg
sar
and
sbb
in
mov
scas
jl
pop
dec
jnp
or
sbb
je
mov
out
add
dec
add
divb
clc
pushl
popf
pushf
pusha
pushl
ret
cmp
xor
clc
bt
xor
stc
xor
cmc
xor
call
push
pusha
movl
pushf
push
pushf
lea
jmp
movl
pusha
pushf
movl
push
movw
mov
lea
jmp
jmp
and
pop
dec
sub
repz
ret
stc
mov
jns
comiss
outsb
mov
cmp
fldl
jae
sti
lahf
mov
int
sbb
mov
add
repz
sqrtps
or
push
dec
jmp
ret
sti
daa
mov
arpl
mov
cmp
std
shll
mov
loope
fidivrl
sbb
pop
jb
mov
loop
jge
and
sub
cmpsb
rol
sbb
inc
and
cmp
addr16
int3
imul
std
fbld
scas
gs
xor
jmp
ret
rolb
push
xchg
mov
stos
lret
aaa
jg
int
jmp
das
pop
xchg
jbe
test
push
mov
jae
jecxz
jne
adc
cmp
stos
js
push
pop
dec
pop
sbb
push
jnp
dec
fistps
arpl
inc
xchg
bound
push
mov
popf
out
inc
mov
mov
stos
or
imul
or
das
movsl
pop
lcall
aas
std
cs
inc
adc
pop
test
inc
shll
sub
push
inc
ja
inc
xlat
xchg
fisubrl
ds
or
hlt
dec
nop
jo
mov
mov
adc
jle,pn
shrl
test
rcll
popa
out
add
lret
fsubrl
lcall
pop
mov
into
sbb
jbe
aad
imul
inc
into
xchg
or
mov
insb
add
jl
imul
mov
sbb
movsb
ja
jmp
pop
jnp
mov
ljmp
sub
out
arpl
xchg
mov
ret
ja
shrb
push
pop
xor
xor
jnp
xor
lock
scas
add
ficompl
outsl
push
iret
or
stos
scas
or
xchg
ljmp
mov
testb
sub
cmpsb
testb
in
out
cmp
mov
sub
lock
pop
lock
fs
dec
dec
nop
jb
nop
mov
inc
cwtl
out
rorl
or
test
pop
fnstenv
cmp
lds
les
jne
xchg
shrl
cwtl
sbb
add
je
push
jecxz
adc
adc
aam
sbb
in
xchg
lds
int3
pop
aaa
mov
mov
fists
incb
in
sbb
lock
jb
insl
adc
popf
iret
push
aas
loopne
adcb
mov
stos
inc
movsb
roll
push
stc
lods
bound
pop
xlat
jns
jb
inc
lock
jb
repnz
outsb
iret
and
cmpsl
loop
or
dec
out
ficoml
and
cli
je
xor
cmp
es
add
lcall
pop
or
negb
out
xchg
xor
pop
jnp
cmp
test
test
mov
push
jo
inc
popf
idivl
inc
daa
lods
data16
dec
jb
jae
popa
mov
stos
das
call
jb
cmpsb
aas
lea
xor
xchg
inc
pop
aad
test
pusha
jecxz
push
hlt
jecxz
ret
repnz
or
cli
lcall
ss
mov
dec
movsb
mov
xchg
out
xor
or
xchg
add
mov
cmp
lock
mov
mov
shrl
loope
cwtl
push
xchg
mov
test
adc
aam
out
jbe
in
cwtl
int
lret
sub
xchg
ds
es
sbbl
mov
jl
mov
dec
cs
xchg
add
loopne
adc
ud1
mov
nop
wbinvd
int3
jno
pop
push
dec
xlat
sbb
push
add
push
xor
insl
repz
jg
push
cld
cmpsb
xchg
repnz
fadds
push
dec
int
push
cmp
and
cwtl
jl
lds
sub
jnp
cmpsb
leave
scas
xor
dec
gs
or
aam
push
dec
mov
mov
cmc
or
pop
addr16
mov
lods
clc
xchg
sbb
js
jns
in
cwtl
jecxz
outsb
mov
aam
shlb
sbbb
mov
jbe
hlt
adc
pop
add
js
je
stc
inc
imul
and
pop
cwtl
scas
and
out
xchg
xchg
xor
adc
divb
sub
add
sbb
jb
jecxz
mov
mov
dec
in
mov
sti
lcall
add
fldl
and
dec
lret
shrl
add
push
xchg
dec
loope
insb
xlat
push
sahf
fwait
sub
mov
push
sahf
pop
jno
cwtl
in
repnz
cltd
popf
cmp
call
cmp
lret
iret
mov
inc
scas
pop
sarb
testb
int
push
mov
fisubrl
mov
inc
sbb
sarl
mov
out
xchg
mov
adc
aaa
enter
ss
fwait
or
lds
push
cmpsl
jl
imul
push
fs
jg
inc
rcrl
je
int
adc
bt
int3
push
fbld
daa
and
decl
insb
pop
add
jecxz
xchg
call
mov
pop
jns
jns
enter
xor
and
mov
inc
imul
fimull
push
mov
sbb
inc
test
and
and
push
dec
or
mov
adc
lods
fdivrs
inc
sbb
sbb
pop
push
in
jbe
lods
aad
mov
mov
addr16
mov
sbb
lea
fsubl
bound
mov
sbb
push
mov
or
and
je
in
lret
sub
leave
xchg
pop
mov
ss
cmp
inc
and
sub
mov
mov
addr16
xor
inc
nop
sub
cs
inc
cwtl
inc
pop
mov
repnz
jno
push
movsl
stos
es
inc
loopne
jne
mov
dec
aas
adc
jbe
ficoml
lret
pop
jmp
test
cld
into
add
mov
push
adc
dec
dec
jne
dec
sbb
pop
add
push
popa
pop
sti
cltd
or
jmp
cmp
xor
adc
dec
scas
xor
pop
add
xchg
gs
mov
add
popa
leave
inc
sbb
cs
loope
les
outsb
or
lcall
ss
pop
mov
pop
stos
mov
push
rcr
in
mov
movsl
push
inc
pop
icebp
lret
push
pop
or
cmp
rcll
xlat
jl
xchg
lea
xchg
cmp
leave
iret
fsubr
pop
jns
int
push
push
jno
dec
lock
cltd
pop
cmc
popf
pusha
pushf
and
mov
test
into
push
sub
pop
adc
std
jns
xchg
es
xor
inc
ja
arpl
dec
xor
push
idivl
in
mul
push
xor
data16
dec
sub
mov
mov
int3
shrl
pop
ds
inc
push
ret
push
xchg
dec
ffree
mov
je
stos
mov
fistl
pop
push
out
bnd
scas
xor
push
jge
dec
sbb
into
cmp
bnd
dec
icebp
mov
add
addr16
test
movsl
mov
inc
and
aad
ret
sub
movl
insb
jne
iret
pop
lret
out
xchg
ret
cmpsl
xchg
cmp
lret
addr16
mov
add
int
lods
fcomps
adc
fcomp
insb
gs
adc
das
mov
or
mov
jmp
jo
vpshad
std
dec
xchg
push
in
cwtl
test
mov
loopne
dec
or
mov
mov
mov
enter
or
push
fisttps
mov
inc
pop
push
and
cmp
mov
add
js
repz
in
rcl
sbb
pop
call
sbb
in
loopne
sbb
das
adc
sahf
aaa
pusha
dec
int3
in
dec
xor
sti
orb
sub
cmpsb
mov
sub
mov
or
mov
out
addr16
addl
jo
push
add
or
and
fildll
adc
inc
xor
jg
push
shlb
mov
pop
loopne
xor
xorl
bt
call
push
jmp
push
jmp
pushf
push
movl
jmp
movl
pusha
pushf
lea
jmp
call
repnz
clc
pop
add
mov
dec
sbb
js
xchg
jecxz
aas
in
test
cwtl
xchg
mov
add
and
pusha
out
jnp
sub
stos
aad
clc
daa
cmp
mov
mov
fiadds
xchg
div
sbb
addr16
add
pop
dec
push
stos
iret
lock
sti
aam
outsb
push
or
nop
sbb
leave
add
mov
mov
dec
outsl
test
into
fisubs
out
mov
outsb
cmp
pop
pop
adc
inc
iret
negb
cmp
sub
adc
loope
lods
lcall
mov
adc
lret
popf
xchg
push
aam
outsb
add
pop
lods
dec
addb
jae
adc
outsb
testl
fwait
test
cmpsb
mov
xchg
sbb
push
out
outsb
ljmp
inc
arpl
test
push
fcom
popf
aas
loop
xchg
pop
imul
sbb
stos
div
lret
sub
js
fwait
pop
in
adc
scas
lods
stc
sub
cltd
mov
fnstcw
aam
sub
scas
add
insb
mov
mov
js
mov
roll
scas
out
jae
ljmp
pop
mov
cmp
mov
xorl
mov
mov
sbb
in
or
ss
test
and
out
mov
ficoms
out
pusha
andb
les
add
mov
xchg
js
cmc
mov
inc
mov
dec
in
and
dec
inc
mov
ret
mov
mov
push
mov
dec
lret
stos
scas
sahf
inc
out
adc
lds
out
shrl
lock
push
in
addl
lods
sub
popf
cmp
adc
xchg
or
sbb
jmp
sub
jl
int3
je
lret
or
out
mov
pop
filds
pop
inc
xor
push
jecxz
mov
dec
and
es
dec
in
mov
daa
leave
jle
out
out
sub
sub
sub
jno
in
lock
test
push
sub
or
sbb
xchg
mov
div
lock
nop
rcl
gs
out
or
push
inc
cmc
scas
pop
ljmp
insb
popf
icebp
incl
sub
pfadd
add
lods
xor
in
cld
jnp
dec
jb
pop
scas
fdivrp
fsubrl
loopne
loopne
cmpsl
dec
testl
push
out
dec
jecxz
sbb
jb
pop
dec
loopne
adc
fwait
int
outsl
mov
jmp
or
add
arpl
andl
cmpsb
pop
imul
pop
adc
mov
lea
adc
or
xchg
sbb
jp
rcrl
mov
adc
pop
fstps
scas
test
inc
ja
xor
cli
cmc
cmp
xchg
xchg
sub
xorb
repz
fchs
fs
dec
push
push
fstps
pop
and
pop
sub
xlat
insb
pop
inc
cwtl
dec
iret
push
mov
mov
mov
jb
ss
pop
pop
mov
mov
call
sahf
inc
hlt
mov
popf
and
push
faddp
repnz
inc
pop
pop
cld
out
test
pop
add
sar
aas
sbb
push
pop
ficoms
cmpsb
mov
sbb
jne
xchg
fwait
sbb
mov
fildll
adc
adc
xchg
and
popa
inc
lds
xchg
dec
xor
lcall
lret
out
pop
pop
mov
fsubl
arpl
testb
push
jle
popa
stos
push
popa
cmpsb
les
stos
jle
mov
and
nop
mov
jno
iret
es
fadds
mov
je
push
mov
arpl
push
cmp
test
adc
xchg
pop
dec
cmp
inc
imul
dec
fidivl
add
leave
xor
or
sbb
insb
mov
test
test
nop
or
mov
adc
pop
cmp
mov
mov
mov
insl
add
stos
popa
push
jnp
xor
jno
mov
popf
pop
xchg
pop
cmp
inc
pop
idivb
lret
or
sbb
in
pop
in
inc
xor
adc
add
aam
lcall
rol
add
je
pop
into
cmpsb
inc
xorl
mov
fcomi
data16
adc
arpl
dec
negb
out
sub
cld
cli
jg
cmp
into
or
cli
jmp
cwtl
and
or
cli
jl
or
imul
inc
jle
mov
xor
or
fidivrs
mov
sahf
inc
js
adc
idivl
mov
das
insl
pushf
iret
push
pushf
xor
clc
repz
insb
jo
adc
outsl
hlt
loope
push
dec
gs
cmpsl
jbe
jg
movsl
iret
xchg
pop
add
sub
icebp
jb
cmpsl
push
lret
jb
xor
jmp
imul
clc
jmp
sub
insb
xchg
cmp
bnd
rolb
or
mov
push
jnp
dec
inc
sub
push
push
sub
loope
movsb
push
mov
mov
pusha
jge
xchg
dec
xorl
les
xor
out
rclb
aad
rorb
out
lahf
sbb
scas
mov
leave
rcr
fdivs
fs
jl
cmp
push
push
lret
out
add
enter
outsl
sahf
aaa
pmaxub
xchg
ja
xor
add
inc
out
add
inc
jb
int3
dec
xor
xorl
push
lock
hlt
mov
idivl
daa
mov
gs
and
clc
push
add
dec
rorl
shlb
negb
or
fs
and
enter
mov
ja
subl
jl
sbb
sahf
aaa
imul
jge
sarb
or
sbb
fisttpll
push
roll
das
data16
push
rcrb
pop
pop
xchg
test
jmp
rolb
xor
fs
cld
lahf
das
popa
inc
add
pop
ficomps
sub
xor
mov
fstps
mov
or
sub
movsb
pushl
jbe
sbb
stc
lds
jns
shll
jmp
arpl
cltd
add
inc
lret
aad
loope
inc
test
cld
pop
inc
adc
xchg
xor
xor
cmc
addr16
or
ja
jge
pushw
xlat
mov
mov
jmp
test
es
fst
xor
pop
jne
or
rolb
negb
cwtl
mov
in
fisubrl
xchg
inc
sbb
ficoml
test
push
mov
adc
stc
or
mov
ret
inc
xor
incb
test
enter
aaa
cmp
pop
jecxz
add
mov
in
inc
test
jns
rcll
pusha
in
sub
mov
aam
dec
xchg
aaa
mov
jae
stos
movsb
lret
add
jmp
jae
outsb
or
jno
popa
xor
and
xlat
jno
pop
pop
mov
stos
sub
jae
push
scas
popf
mov
mov
call
in
jnp
xor
ja
dec
std
sbb
hlt
loopne
scas
fsubp
mov
shlb
out
add
jg
sbb
xor
fdivs
cmp
test
std
push
jl
mov
jnp
repz
inc
loop
mov
lds
adc
mov
mov
pushf
push
dec
test
pop
insb
mov
mov
jns
pop
dec
imul
add
repnz
xchg
cmp
sub
insb
dec
insl
movsl
pushf
mov
mov
mov
xor
sbbb
push
and
xor
jo
jns
and
bound
out
or
je
xor
jns
shl
loope
mov
inc
aas
add
dec
in
ljmp
cmp
jo
jns
adc
jbe
es
cmp
push
ret
scas
mov
ja
das
inc
lcall
xchg
xchg
mov
jns
dec
pop
ret
cmpsb
into
std
clc
fwait
xchg
in
cmp
pop
in
shll
push
and
repnz
jbe
fiaddl
mov
mov
xor
loopne
cltd
push
pop
out
jp
cmp
pop
cltd
sub
popf
shlb
add
cmc
mov
aam
rolb
xor
repz
xor
jmp
std
xor
push
ds
in
xchg
dec
gs
cmp
out
lea
inc
dec
jb
movsl
jno
shll
cmp
jge
add
fwait
mov
mov
xor
mov
fistl
test
imul
jmp
out
mov
loope
and
inc
xchg
shlb
iret
sub
fnstsw
mov
mov
adc
jge
xchg
cmpsb
or
mov
sub
pop
inc
dec
sub
pop
in
xchg
inc
je
and
sub
ret
mov
pop
into
pop
sub
testl
inc
test
fmul
mov
mov
hlt
cmpsl
add
add
push
imul
arpl
sbb
mov
xchg
add
jae
jns
xchg
lcall
arpl
shrl
xchg
mov
pushf
xchg
pop
fs
cmp
xlat
fldcw
jp
dec
loope
pop
dec
push
sbb
fidivs
mov
out
xchg
xor
stc
sbb
addr16
and
push
adc
sub
fsubl
notl
outsb
pusha
push
in
mov
xchg
insb
xchg
mov
dec
mov
in
inc
xor
in
js
cmp
inc
leave
stos
stc
int3
jge
repz
inc
ret
inc
sar
pop
sbb
cmc
cmp
cs
adc
ss
add
stc
push
and
push
shrl
mov
sbb
ficompl
popf
es
dec
iret
xor
sub
cld
das
sti
lock
lahf
notl
in
ficomps
cmpsb
pop
rcr
mov
inc
int
push
mov
rcrb
int3
dec
leave
vcvtdq2pd
add
fistpll
nop
mov
mov
dec
dec
inc
shr
and
aad
andl
lds
mov
mov
mov
jmp
out
dec
jge
mov
xlat
pop
in
xor
cmp
into
repnz
lds
pop
push
jp
cmp
or
or
push
roll
aaa
pop
xchg
clc
insl
or
push
adc
jnp
push
cs
and
mov
ds
inc
xchg
sub
push
enter
cmp
notl
aam
shl
xor
je
int3
ds
cmp
mov
xchg
adc
or
daa
aam
jl
popa
mov
xlat
hlt
jo
mov
mov
shlb
rolb
dec
mov
dec
cmp
xchg
jecxz
pop
int3
imul
in
mov
jno
bnd
and
xchg
imul
scas
sub
pop
call
lret
ret
mov
test
xchg
enter
inc
cmp
decl
cmc
orl
jp
jp
jmp
test
shlb
ret
push
xchg
pop
mov
ljmp
jbe
out
inc
sbb
lcall
and
lahf
sub
sbb
mov
xchg
sarb
popf
idivb
and
inc
jmp
cmp
inc
insl
addr16
mov
bound
fisubs
pop
mov
test
rclb
aas
pop
nop
xor
mov
pop
movsb
mov
je
and
mov
and
sub
leave
inc
scas
adc
cmc
cmp
das
dec
enter
dec
pop
movsb
add
and
dec
jne
xchg
or
push
sbb
test
jo
inc
sarb
pop
or
pop
repz
add
ja
ret
ljmp
sub
pop
rol
xor
pushf
jne
outsl
movsb
nop
push
mov
xor
mulb
cltd
in
inc
lock
mov
and
sub
push
sub
cld
jmp
test
and
fs
mov
aaa
mov
mov
in
jne
push
xchg
dec
loop
cs
clc
jecxz
jno
lea
out
rcll
rcrb
incb
pop
in
push
daa
sets
push
loopne
fidivs
mov
lcall
and
rcrl
inc
lahf
test
adc
lcall
insl
add
cmp
jae
data16
mov
lcall
jmp
sti
cmp
push
int3
sahf
push
mov
orl
stos
push
mov
ja,pn
lods
imul
inc
insl
xchg
inc
mov
inc
fmuls
out
jp
xchg
mov
std
push
test
repz
les
cli
add
and
pop
mov
dec
ljmp
and
adc
cmp
dec
out
mov
clc
daa
in
xor
mov
adc
inc
roll
add
jle
or
sahf
inc
ss
mov
cs
jp
jg
push
iret
sbb
adcl
imul
xchg
addr16
inc
int3
cmp
jb
es
movsl
xor
mov
in
fidivrl
mov
call
int
pusha
sahf
xor
ljmp
push
mov
call
mov
push
nop
dec
dec
mov
mov
orb
cmp
mov
fwait
mov
dec
ret
mov
in
mov
call
gs
lock
inc
out
fidivl
sahf
jge
lret
mov
lcall
cli
lcall
mov
jb
xchg
out
sub
push
test
pop
repz
shrb
mov
jecxz
pop
into
rolb
das
push
je
add
aad
jno
bound
stc
out
jp
sub
cmp
or
cs
pop
dec
fildl
jge
dec
shr
xchg
cwtl
xor
pop
test
popa
jge
pop
xor
lods
aam
rorl
mov
sbb
fisubl
clc
sbb
sbb
inc
iret
pop
movsb
rcl
jnp
aad
daa
test
jl
xor
lods
add
jno
ficomps
pushf
sub
out
mov
into
or
pusha
jno
ss
mov
rcr
and
loope
mov
iret
push
add
sahf
stos
dec
xchg
jle
lds
stos
fstl
lock
dec
pop
or
jge
inc
xor
dec
cs
aam
dec
mov
inc
sub
sub
lods
xlat
xchg
pop
xchg
and
jle
push
jmp
or
arpl
popf
xchg
test
adc
pop
shll
jmp
loop
adc
adc
stos
pop
mov
in
cmc
vfrczss
dec
push
and
cmpsl
mov
test
ljmp
mov
out
pop
lds
jmp
nop
push
or
xchg
stc
xchg
shl
xor
pusha
aam
inc
sub
pop
xchg
mov
push
cmovbe
mov
ljmp
call
jae
push
popf
leave
cld
shl
sub
aas
fisubrs
cltd
dec
sar
aaa
fs
stc
shlb
jnp
icebp
jnp
pop
shll
and
mov
xlat
jge
pop
xchg
mov
pop
pop
lods
fnstcw
in
jb
or
or
call
clc
mov
pop
xchg
and
cmpb
testl
mov
cltd
lahf
lret
jg
outsl
imull
sub
sub
std
and
mov
aam
orl
inc
xchg
mov
test
mov
cmpsl
push
jecxz
outsl
ret
or
xchg
push
loop
pop
test
das
enter
mov
out
mov
nopl
sbb
popf
mov
mov
mov
mov
pop
xchg
loopne
sahf
sbb
mov
sbb
cmp
cmpsb
dec
ret
dec
xor
inc
push
imul
mov
mov
jns
jae
out
scas
push
js
leave
es
aas
mov
add
stos
cmp
mov
lock
popf
jbe
or
into
stos
xlat
add
int
xchg
test
leave
add
loope
or
outsl
sub
push
fs
scas
lret
loope
lods
and
adc
in
lcall
arpl
xor
push
push
dec
cmp
inc
dec
and
fnstsw
sub
pop
sbb
in
cmpsl
es
mov
inc
ret
mov
inc
int3
cmp
mov
stos
stos
shll
ss
push
leave
out
loope
ficoms
push
cmc
scas
inc
sbb
ficompl
and
out
pop
pop
xor
push
out
and
pusha
inc
xchg
sub
inc
adc
popa
pop
incl
jle
test
fistpll
stos
jno
scas
sbb
xor
sub
aas
dec
xor
scas
sbb
jae
clc
and
dec
and
mov
in
test
notb
clc
xchg
sbb
add
or
idivl
adc
repz
jb
popf
push
mov
dec
add
xchg
mov
push
or
cmp
gs
dec
adc
jnp
jmp
neg
and
pop
cmpsl
mov
inc
inc
mov
shr
inc
pop
dec
fcomps
dec
add
ja
aad
dec
inc
xchg
mov
xchg
sbb
es
or
inc
jle
xor
into
fdivrs
dec
cmp
shrb
sbb
test
cli
adc
adc
adc
sbb
push
mov
inc
jne
movb
cmp
roll
adc
xchg
inc
rol
cltd
addr16
mov
xor
negb
lea
or
negb
test
xchg
mov
mov
mov
pop
int3
ds
aam
xchg
es
mov
sbb
mov
jmp
iret
repnz
jp
push
out
inc
jno
xchg
adc
inc
mov
mov
adc
mov
mov
insb
int3
test
sub
mov
icebp
pushf
lea
xor
hlt
adc
int3
cmp
dec
mov
or
std
lock
mov
lods
mov
in
int3
in
popa
fsubp
out
jg
mov
dec
mov
lods
cmc
and
mov
pop
sbb
mov
mov
insl
xor
aad
sti
nop
mov
testb
xor
insb
dec
nop
es
cld
xchg
push
dec
rorb
and
jmp
dec
mov
loope
and
inc
add
pop
fnsave
cs
enter
mov
loopne
leave
add
ja
test
push
mov
in
pop
fcompl
and
ljmp
sbb
sub
sub
mov
jp
or
xor
cwtl
ficomps
dec
xchg
scas
push
xor
xchg
inc
mov
push
sbbb
sti
fs
rorb
and
add
push
stos
pop
cli
xchg
sahf
mov
insb
dec
and
icebp
insb
fs
push
cltd
dec
inc
mov
mov
js
jge
into
dec
xchg
ficoms
push
and
pusha
mov
lret
and
test
jge
sbb
fiadds
inc
mov
out
mov
or
sbb
xchg
or
add
jo
or
xchg
sbb
clc
jnp
and
mov
shlb
cmp
jne
cmp
xchg
sbb
lods
pop
jl
ljmp
cmpsb
xchg
pop
movsl
mov
sbb
rcrl
xor
sbb
rcll
add
push
and
out
in
adc
movsl
mov
bound
dec
jnp
xor
push
jecxz
pop
pop
add
pusha
xchg
push
sub
jne
or
sbb
out
dec
mov
icebp
stos
cmpsl
gs
rcrb
out
in
lock
or
jb
fs
jecxz
xlat
pop
cltd
push
lcall
repnz
or
and
mov
or
or
test
sub
adc
ds
xchg
xor
pop
pop
ljmp
jmp
xor
mov
add
add
inc
ja
mov
repnz
and
shrl
in
xchg
inc
mov
enter
std
fildl
movd
sbb
jp
stc
fcoms
mov
fcomps
xor
jle
aaa
test
repnz
scas
jmp
jmp
aad
jmp
sub
jp
xor
dec
or
cmp
mov
out
ljmp
mov
and
adc
xchg
inc
or
dec
repnz
push
sub
rorb
test
inc
mov
pop
push
jp
sub
repnz
js
sub
push
add
testb
out
and
push
mov
dec
in
cmpsl
and
test
jns
mov
repz
in
pop
push
fldl
mov
dec
addr16
adc
out
les
ds
push
xchg
daa
or
sbb
cli
or
imul
pushf
jg
movsb
sbb
js
jle
rcll
les
std
ja
cmp
cmp
dec
adc
mov
xlat
jg
repnz
adc
push
ds
add
push
push
mov
nop
and
les
lock
leave
xchg
jl
mov
jne
es
inc
jl
fstpl
jmp
ret
imul
xor
fwait
and
xchg
iret
pop
jmp
pop
xor
inc
and
jl
or
xchg
or
add
xchg
jbe
imul
fnstcw
inc
fcmovb
cmc
in
mov
lret
dec
stos
addr16
push
imul
pusha
jmp
int
clc
stc
test
sahf
xor
rcrl
ficoms
imul
shrl
and
push
lds
adc
push
fsubr
clc
scas
popa
pop
scas
mov
sub
jge
in
imul
aam
out
test
inc
cmp
cmpsl
dec
shll
and
ja
xchg
iret
jge
sub
in
lahf
daa
add
test
xchg
das
scas
out
fnstenv
mov
mov
fwait
lahf
xchg
mov
cmp
lcall
xchg
call
fisubrs
shlb
inc
sub
xchg
sahf
cmp
sbb
shll
fisubrs
pop
gs
lret
cmp
je
push
push
andb
adc
std
clc
in
or
fsubr
and
dec
andl
cmp
loop
jb
pop
or
movsl
mov
or
int
jns
jmp
or
mov
outsb
movsb
pop
repz
jge
test
cmp
or
jnp
or
ror
mov
cltd
sub
vpmaxud
or
xlat
mov
out
test
push
or
aas
xor
out
mov
jmp
push
es
lds
lahf
divb
movl
pushf
call
xor
bt
pushl
popf
movb
pushf
pushl
ret
cmc
xlat
pop
scas
loope
xor
mov
or
out
xchg
push
fwait
lea
call
xchg
loopne
jno
roll
stos
es
sub
jle
ficomps
or
je
loopne
nop
les
in
jl
push
mov
lock
out
or
outsl
jbe
pushf
in
ret
mov
mov
xchg
sti
and
lret
mov
inc
iret
adc
aam
push
cli
dec
test
mov
repz
imull
shlb
pop
and
add
inc
insl
mov
add
push
pop
pushf
pop
iret
pop
push
pop
and
sub
push
pop
push
mov
or
shll
jnp
psllw
out
mov
ret
mov
jb
loopne
push
mov
cmp
stos
push
inc
pop
mov
inc
fmull
jmp
xor
add
daa
scas
xor
insl
fmull
aaa
loop
mov
aad
in
loope
mov
repz
bound
push
sbb
mov
push
push
mov
and
dec
ja
jmp
dec
jns
jnp
mov
cli
call
in
jl
xchg
sub
lea
cmp
cmpsb
leave
fisttpl
into
mov
mov
push
rclb
ret
xor
aaa
int
loop
push
fstpt
out
pop
push
xchg
dec
aam
push
ds
mov
lods
leave
add
push
pop
cld
idivl
ja
ret
adc
ficomps
mov
inc
mov
dec
cmp
mov
cmp
mov
nop
sub
xorl
cmp
fwait
stos
mov
mov
xor
lret
rcrb
inc
xor
dec
enter
in
test
lods
movsb
or
lock
cmp
or
mov
pop
dec
std
mov
push
lcall
and
out
movsl
xchg
cli
jmp
jp
test
or
lret
es
imul
arpl
addr16
sbb
sahf
dec
data16
movsb
fsubrp
adc
fldcw
lods
push
sub
sbb
add
divb
inc
pop
repz
pop
or
and
test
xchg
jmp
sbb
addb
addb
lret
jae
lea
adc
xchg
inc
int
lret
cltd
xor
stos
ret
fbstp
sbb
fcmovbe
pop
test
popa
jmp
xor
dec
popf
stos
sbb
cmp
ss
int3
cmp
inc
aad
mov
aas
sub
dec
jne
imul
das
aaa
mov
push
imul
inc
outsl
push
add
adc
adc
rcll
adc
or
push
mov
xchg
or
scas
xchg
insb
icebp
dec
sbb
cwtl
and
imul
out
jne
inc
in
mov
xchg
jbe
mov
inc
mov
dec
and
jno
ret
dec
mov
stc
imul
xchg
adcl
mov
stos
cmp
daa
xor
inc
pop
dec
stos
insl
cmp
mov
cmp
pop
imul
mov
imul
mov
jae
cltd
fsubs
punpckhdq
mov
aad
out
add
test
shll
leave
out
jae
outsb
inc
pop
ss
int
pop
mov
sbb
push
inc
rcr
repnz
test
sbb
pop
or
jg
test
sbbb
es
and
bound
inc
aaa
mov
std
andb
dec
xchg
out
inc
pop
dec
shr
push
dec
in
pop
movsl
rolb
rcrl
push
xchg
lds
adc
jns
int3
jmp
jge
mov
add
icebp
icebp
bound
addb
jae
xor
xor
adc
mov
dec
jg
subb
les
sbb
pop
sti
insl
push
pop
add
icebp
loopne
das
lret
inc
xchg
sbb
outsb
and
push
inc
sub
cmp
pop
mov
cli
inc
mov
rcrb
xor
ss
jg
mov
adc
pop
out
popf
and
out
icebp
jmp
mov
adc
out
js
add
and
inc
outsl
cltd
subl
cpuid
popf
add
adc
lret
out
das
sahf
xor
loop
sub
shll
and
idivl
dec
cmpl
std
push
pop
mov
ret
mov
jge
jnp
iret
xchg
ja
inc
lea
mov
push
aas
ret
gs
in
incl
pop
jl
push
mov
push
mov
into
pusha
or
xor
xor
test
inc
mov
int3
xchg
popa
das
add
lret
aam
and
push
out
dec
imul
adc
pop
pop
das
pop
divb
and
scas
aaa
push
ja
push
scas
in
cmp
test
aas
inc
imul
push
and
push
jmp
lea
dec
inc
out
push
fsubr
cmp
mov
in
js
pop
mov
stc
dec
push
push
pop
cmpsl
xor
scas
in
adc
pop
ss
push
xchg
mov
and
pop
call
jmp
mov
mov
lods
outsl
ljmp
scas
in
fisubs
fs
cli
data16
ja
stos
xor
test
out
das
pop
lret
adc
mov
push
mov
push
scas
in
cwtl
nop
adc
dec
enter
pop
lods
sub
push
aam
mov
and
mov
mov
jmp
inc
adc
push
and
and
enter
xor
aaa
mov
icebp
jg
sub
iret
pop
pushf
cmp
pop
adc
scas
loope
mov
lds
push
fadd
pusha
icebp
loopne
imull
sti
pop
test
sahf
test
int
sar
lahf
cmp
int3
jmp
jo
mov
cmpsb
rcll
mov
icebp
frstor
ror
rcrl
adc
xor
push
mov
xor
std
cltd
daa
xchg
inc
ja
movsb
cld
mov
rorl
lret
pop
add
or
out
lea
pop
test
out
xor
mov
mov
fs
dec
inc
dec
cs
sbb
add
adc
push
sbb
jbe
push
rorl
xchg
adc
inc
sbb
push
sub
push
xor
fdivs
hlt
pop
sub
int
or
add
or
out
push
push
pop
cltd
sbb
xchg
inc
in
pop
das
sub
in
jns
ret
in
std
pop
sbb
in
sar
mov
je
cmp
in
cld
dec
leave
pop
mov
sahf
lods
pop
je
arpl
outsl
mov
ret
sbb
cmc
hlt
ret
mov
nop
lret
pop
xchg
jp
fists
dec
sbb
nop
push
int
loopne
clc
xor
or
insl
test
stos
mov
lcall
push
and
stos
ret
lcall
clc
jne
add
stc
inc
test
sub
and
outsl
movsb
adc
aaa
dec
jl
inc
jno
notb
pop
daa
add
repz
cmp
cmp
jg
or
stc
mov
ja
pop
iret
pushf
das
mov
jmp
fdivrl
add
add
sub
cmp
xor
mov
in
sti
jb,pn
pop
mov
jle
push
cmpsl
mov
and
ret
push
stc
dec
jne
enter
test
adcb
xchg
jae
push
test
xchg
jns
fs
mov
fdivrl
or
cltd
js
in
aad
shr
mov
mov
ss
and
out
dec
and
jle
aad
or
not
xchg
jns
inc
sub
hlt
dec
int
out
lods
push
or
lods
push
mov
mov
ret
and
testb
inc
outsl
into
stos
mov
jp
cmp
nop
movsb
and
sbb
pop
fisubrs
test
jecxz
sub
lret
mov
mov
mov
in
mov
inc
nop
adc
jmp
mov
in
jbe
adc
clc
and
test
cmp
push
repnz
les
xchg
dec
out
lcall
lods
out
jb
or
nop
adc
mov
popf
cmp
cmp
lret
or
enter
fimull
pop
fcomp
or
out
out
icebp
dec
call
leave
aam
sbb
or
push
arpl
test
popf
dec
xor
pop
jne
ljmp
sbb
adc
push
stc
and
clc
in
mov
cmp
subb
ds
jbe
aad
leave
shlb
or
outsb
pop
or
movsb
popf
lret
cmpsb
bnd
inc
lods
das
mov
cmp
into
jo
jle
test
out
rcrb
stc
in
cmp
in
aaa
arpl
dec
push
enter
jmp
xor
pop
mov
inc
push
inc
pop
dec
sar
jp
inc
cmp
inc
mov
push
addb
mov
std
loope,pt
repz
xor
jae
fwait
sbb
mov
aas
cmp
mov
fwait
pop
nop
or
add
aas
shrb
jbe
sub
dec
inc
imul
mov
push
mov
insb
aam
jle
push
in
push
cs
xchg
push
xchg
dec
int
stc
in
mov
repz
in
sbb
cmp
push
pop
mov
sbb
jmp
int
add
jp
or
pusha
fdivrl
nop
aas
adc
int
xchg
fcoml
fwait
dec
roll
push
adc
and
cltd
daa
stos
popa
xchg
je
mov
push
fs
stos
mov
cs
adc
cmp
jbe
cmp
or
pop
test
mov
movsl
test
push
shlb
mov
fcoms
int3
inc
shr
push
fimull
mov
mov
imul
mov
icebp
add
repnz
sub
and
mov
xchg
and
icebp
arpl
popa
jmp
scas
cmpsl
cmp
ss
push
insb
push
jbe
inc
mov
sbb
bnd
mov
je
popf
cmp
lock
roll
mov
xchg
xchg
imul
push
int
xchg
or
jns
arpl
or
cmp
inc
inc
cld
mov
xor
test
dec
lea
jg
repnz
and
sbb
into
xor
dec
adc
and
rol
sti
in
xor
sub
cmp
lret
pop
ret
popf
and
fs
jmp
das
aas
lock
inc
into
jno
ret
pop
ja
adc
sbb
sub
pop
adc
cmp
pop
cmp
orb
xlat
pop
pop
test
data16
mov
pop
inc
imul
dec
das
imul
mov
nop
inc
in
adc
into
xor
jbe
es
cld
movsl
lods
ret
dec
cmp
push
iret
enter
mov
ret
xchg
sbb
jno
cmp
lret
addr16
shll
aam
es
loopne
jnp
dec
and
mov
roll
out
pop
imul
push
and
arpl
lret
dec
pop
add
out
jp
rcrl
jl
js
push
adc
mov
stos
fwait
xchg
pop
enter
pop
jp
xorb
outsb
arpl
xchg
mov
addr16
jle
dec
adc
push
fisttpll
ret
movsl
mov
xlat
mov
xor
fmul
std
push
xor
test
push
mov
add
leave
push
inc
sub
pop
fcoml
add
out
pop
sbb
inc
call
mov
inc
shld
lods
mov
mov
lret
jmp
jmp
mov
push
cmpb
inc
and
lods
lret
mov
and
int3
mov
and
js
mov
dec
pop
lss
mov
je
mov
mov
cmp
test
and
adc
dec
jecxz
xor
ss
in
inc
int
mov
mov
filds
cmp
cmp
cmpsl
or
sub
or
cmp
xor
cmpb
fs
push
std
fsubl
cmpsb
push
mov
pop
stos
iret
sbbl
ret
jbe
and
xlat
sub
stc
js
lock
insl
dec
fistl
fmulp
pop
fcoml
xchg
arpl
and
sbb
lods
jno
aaa
bound
cwtl
nop
test
mov
cwtl
pushf
pop
pop
call
mov
push
aam
scas
jmp
pop
push
inc
scas
loope
mov
in
pop
loope
xor
roll
xchg
or
jno
insl
xor
xor
ret
mov
pushf
inc
or
into
lret
push
or
mov
data16
and
lds
xor
jmp
or
ret
icebp
stos
stc
dec
shlb
mov
or
into
or
iret
xor
dec
movsb
cmp
push
jl
and
and
std
dec
int3
adc
jnp
sbb
ljmp
xor
cltd
push
push
dec
or
push
pop
decb
rcr
in
and
pop
xchg
xchg
xor
mov
xchg
mov
ljmp
jb
and
cmp
fbld
mov
xlat
sub
sahf
cmp
xchg
xchg
addr16
push
mov
and
fstpt
xlat
or
iret
in
stos
push
in
sti
xchg
mov
sbbb
or
sbb
iret
push
sahf
add
and
xchg
and
jb
xchg
cmpsl
sahf
push
lcall
sub
push
subb
cmp
leave
addl
push
mov
les
outsb
xchg
mov
mov
sub
mov
fnstenv
mov
add
cmpsl
sbb
repnz
xchg
scas
sbb
xchg
and
imul
xor
pusha
aaa
cmp
pop
xlat
testl
pushf
scas
fnsave
jns
xchg
sub
mov
cmp
xor
outsb
sub
mov
cli
test
cmpsl
inc
leave
mov
add
mov
cmpb
sbb
push
cmpsb
andb
lret
dec
lds
cli
les
fsubl
lods
std
cmp
xchg
adc
cmp
out
ret
es
clc
mov
xor
jo
adc
or
sbb
cmp
pop
cwtl
push
fwait
ljmp
outsb
sbb
adc
mov
rolb
push
cld
or
lret
cmpsb
shl
nop
xor
pop
jmp
loope
iret
dec
lods
call
xchg
xchg
xor
in
push
inc
jns
push
xor
ja
int
push
mov
lea
jns
mov
js
push
mov
adc
fbstp
xchg
into
nop
orb
imul
pop
pop
mov
mov
jl
jnp
push
sbb
jmp
mov
ss
sbb
jne
xor
and
push
inc
mov
mov
and
cld
cmp
gs
adc
cmp
fbstp
fdiv
push
mov
fistps
invd
test
jge
clc
push
imul
and
and
pop
jge
daa
mov
mov
dec
add
lret
push
push
mov
imul
arpl
aam
pop
popf
and
mov
sbbl
inc
cmc
sub
dec
movl
icebp
mov
mov
lahf
dec
shlb
jb
dec
xchg
dec
repnz
or
insb
mov
movsb
aas
lds
addb
mov
ret
je
subl
cmp
push
xchg
mov
mov
and
dec
shrl
mov
jp
out
dec
lods
dec
test
popf
stos
addb
push
xchg
pop
bound
mov
push
mov
scas
fwait
xchg
mov
mov
mov
lret
into
and
sub
cltd
cbtw
adc
push
notrack
push
popa
xchg
orb
dec
push
xchg
inc
stos
scas
adc
insb
jns
mov
rol
pop
mulb
and
lret
sbb
shll
push
dec
xchg
ret
adc
shr
jmp
pop
mov
mov
sub
sub
dec
loope
cmp
sub
xchg
or
adc
cmp
loopne
push
mov
gs
push
push
rcr
in
lods
xor
fcomps
insb
jle
sub
mov
inc
mov
loopne
and
pop
mov
inc
in
mov
cmp
fdivs
push
dec
lret
pop
pop
dec
xor
xor
and
popf
inc
push
stc
adc
jmp
loopne
inc
cmp
dec
out
repz
mov
lods
adc
stos
xor
add
push
ljmp
clc
adc
lahf
imul
call
jecxz
cmp
cli
mov
inc
clc
aas
xchg
daa
outsl
popf
loope
rcll
clc
mov
stos
jge
fwait
call
call
jne
fcompl
imul
xchg
loopne
and
mov
xchg
xor
mov
inc
testl
fwait
mov
inc
mov
test
sub
mov
sarb
lea
pop
loope
add
dec
aaa
imul
push
inc
in
sub
push
std
and
cmc
dec
push
shll
pop
mov
loopne
push
fwait
jbe
sbb
test
inc
jge
dec
xor
jp
cwtl
es
ret
arpl
pop
xchg
push
das
push
mov
mov
pop
das
pop
jle
daa
mov
jae
mov
fldenv
rclb
pop
movsb
lods
xlat
cmc
addb
es
xchg
mov
dec
popa
in
jb
push
rorl
out
insl
mov
mov
fiadds
mov
mov
sub
addr16
stos
inc
sarb
xchg
sub
orb
mov
pop
das
push
fsubrs
dec
test
xchg
sbb
add
and
mov
sbb
xor
mov
ljmp
and
xor
insl
jg
hlt
jb
mov
dec
mov
xchg
inc
fstps
xor
pushl
test
xchg
xor
jle
js
popa
in
stos
cli
scas
aad
xchg
mov
and
jl
cmp
fsts
sbb
mov
and
dec
ror
cmp
dec
cmp
sbb
jbe
mov
mov
jle
aas
gs
test
push
add
fisttpll
movsl
shll
pop
cli
dec
sbb
scas
push
sti
sbb
adc
orl
dec
jo
xor
sub
bound
mov
jne
sub
daa
push
aad
pop
dec
adc
dec
dec
mov
roll
and
mov
jg
sbb
enter
in
lcall
rcll
fsts
orb
testl
pop
stos
xor
ret
adc
rcrl
out
jl
jp
enter
fwait
ret
mov
jecxz
sbb
mov
je
scas
pop
and
pop
push
and
inc
jecxz
and
roll
loopne
mov
jbe
mov
push
pop
es
lds
subb
mov
imul
imul
mov
sub
xor
mov
outsb
mov
push
or
push
rcll
pop
nop
outsl
push
cli
testl
add
jecxz
inc
mov
mov
enter
xor
outsb
pop
inc
mov
es
in
sbb
insb
dec
int3
cmp
fadd
xor
test
rclb
adc
rclb
rcl
in
cmpsb
cmp
inc
in
ror
inc
enter
rcll
mov
loopne
je
cmp
jg
push
or
notl
inc
fisttpl
mov
mov
rclb
adc
ss
push
iret
add
cltd
or
dec
stos
adc
fcmove
loope
add
imul
fcoms
lds
and
mov
std
mov
sbb
aad
pop
lahf
pop
pusha
out
movsb
and
into
pop
sbbl
call
adc
push
xchg
and
arpl
hlt
ljmp
pop
fstpl
stc
mov
mov
dec
and
std
pop
adc
test
jns
aad
xor
or
xchg
test
sub
inc
jo
out
mov
ja
add
pop
sub
xor
imul
jp
aaa
and
dec
cmp
ds
pop
pusha
out
fmuls
cmpsb
sub
xchg
ds
jl
mov
testb
inc
in
sbb
cld
cltd
cmc
test
ret
cmc
loopne
ljmp
jbe
jp
jmp
xchg
adc
imul
mov
mov
stos
inc
sbb
loope
cmp
mov
gs
sub
pop
inc
imul
arpl
mov
push
repnz
mov
rcrb
jle
std
lcall
push
or
pop
cmp
mov
rcr
jb
shl
insb
pop
and
ret
dec
jl
int
or
xlat
test
dec
movsb
loop
jno
stc
lods
je
call
fildll
jmp
pusha
pushf
popl
test
stc
xorl
test
jmp
add
insb
jg
mov
inc
setae
mov
and
lea
inc
insl
xchg
jae
lock
stc
in
filds
push
inc
lahf
mov
xchg
add
out
lock
mov
icebp
das
and
icebp
popf
out
nop
jge
cmpsl
or
sti
pop
seto
mov
cwtl
push
lods
cmpsl
roll
fs
js
sub
cmp
insb
jecxz
mov
pusha
add
test
xchg
pop
inc
insb
inc
setae
xchg
and
mov
push
movsb
in
adc
cmp
insb
bound
and
and
xor
in
push
fwait
inc
jmp
fcoms
jns
cli
call
jmp
jo
dec
out
in
stos
inc
iret
sbb
push
pop
mov
mov
mov
cmp
adc
adc
in
mov
adc
sbb
aad
inc
cmp
data16
test
repnz
mov
mov
jmp
mov
push
adc
aas
mov
test
mov
mov
push
sub
and
lods
sub
dec
jmp
inc
add
xchg
shll
sbb
mov
ror
xchg
mov
jge
add
and
sbb
cltd
cmp
jle
cltd
sbb
popf
call
inc
shll
add
stos
inc
rorl
dec
scas
sahf
sub
icebp
mov
mov
add
addr16
jl
stc
popf
bound
mov
inc
and
jmp
sbb
mov
add
dec
add
or
movsl
xchg
add
dec
lret
inc
sarl
mov
xor
popa
scas
jne
je
xchg
sub
lahf
mov
int3
call
jnp
sbb
addr16
sbb
dec
or
repnz
inc
jne
dec
dec
sub
jno
enter
dec
jno
shlb
cwtl
jmp
scas
das
scas
lods
sti
jnp
push
and
rclb
bound
mov
inc
mov
lock
stc
test
cmp
insl
out
insl
repnz
dec
push
cmp
cmc
sub
push
mov
data16
jbe
pop
sub
test
dec
bound
or
inc
mov
jb
fisttps
add
dec
add
int3
and
inc
rcrb
mov
daa
movsl
in
test
and
dec
out
adcl
jle
out
stos
inc
sub
insl
or
push
popf
pmuludq
jle
repnz
sub
fnstenv
add
mov
out
js
lods
fidivs
popa
sar
stos
fmuls
or
incb
xchg
cmpsb
xchg
mov
or
insb
mov
mov
mov
fs
lcall
adc
lea
scas
pushf
pop
mov
push
xorl
mov
outsb
adc
loope
dec
mul
sarl
mov
lahf
jmp
mov
inc
repnz
xor
jb
push
popa
jae
mov
mov
mov
xchg
xor
mov
mov
jl
mov
pop
movsl
push
and
aas
call
loopne
and
cmp
mov
mov
add
sbb
jp
dec
dec
pop
divb
mov
and
loop
push
std
int
repz
loopne
cld
lahf
jecxz
add
ds
xor
and
enter
aas
scas
stos
int
repnz
push
mov
outsl
pop
ret
lahf
mov
lar
sub
xchg
outsl
inc
fnstsw
fidivs
imul
push
aas
dec
cmc
mov
nop
and
sbb
push
mov
aaa
jecxz
out
sbb
aad
add
imul
mov
out
sub
fistps
mov
lret
xchg
cwtl
xor
in
scas
dec
movsl
int
and
xchg
jns
sbb
lods
cmc
or
mov
xor
test
dec
sub
adc
and
mov
and
cmp
lcall
nop
mov
mov
mov
loop
mov
pushf
int
pop
xlat
mov
adc
out
movb
loope
xor
test
fs
js
into
xor
pop
pop
mov
lea
sbb
sbb
jp
pop
lods
fsubr
xchg
mov
or
les
ljmp
inc
imul
imul
sahf
jmp
sub
xor
stos
hlt
out
aad
loopne
pushl
mov
in
push
hlt
xchg
sahf
call
arpl
lds
test
mov
repnz
ret
int3
or
lret
cmp
lret
test
cmp
aam
pushf
pop
in
and
insl
cwtl
nop
daa
test
dec
cmpsb
cmp
shlb
cltd
or
pop
lock
sub
xchg
and
jnp
mov
mov
mov
pop
push
fnstsw
es
test
pop
or
xchg
fsubrs
cld
xor
lcall
jl
lret
jecxz
es
out
das
hlt
test
mov
divl
mov
jnp
push
jl
loopne
scas
nop
adc
xor
in
popf
fistps
mov
cld
push
int
test
leave
mov
sbb
pushf
push
cli
cmpsb
inc
leave
pop
test
out
and
jae,pt
in
ss
xchg
or
das
jge
icebp
xlat
repz
mov
sbb
divb
daa
pop
mov
cmp
push
movsl
cmp
adc
mov
and
and
push
inc
sub
ljmp
xchg
add
std
leave
sub
neg
push
xor
sbb
in
jle
jb
repnz
pop
mov
mov
insl
loopne
sbb
scas
xor
jo
fsts
and
sub
call
mov
mov
mov
xor
push
fldl
lds
aam
test
cmp
jg
inc
subb
cld
inc
call
lcall
xchg
jbe
in
push
add
mov
in
sahf
sbb
popa
pop
sub
xchg
pop
cmp
adc
jecxz
and
aam
stos
xchg
subl
adc
clc
pushf
mov
outsb
mov
mov
xchg
inc
insb
pop
inc
push
push
cmpsl
lcall
js
scas
ds
or
add
push
jns
pop
push
fsubl
or
out
jae
dec
push
in
aad
imul
outsb
jge
jmp
xchg
adc
ficoml
jno
xchg
mov
ficoms
movsl
loope
shrl
into
popa
mov
xor
mov
sbb
cld
cmpsb
mov
add
repz
mov
mov
xchg
cmp
cmp
cld
icebp
mov
lret
in
into
cmp
popa
scas
inc
loop
mov
loop
cld
push
inc
sbb
lahf
sbb
ljmp
sbb
lods
sti
add
ret
push
pushf
add
sub
jle
rcll
cs
mov
push
ror
icebp
fistpll
or
out
ja
push
and
dec
or
mov
push
int3
xchg
and
movsl
idivb
push
sub
jb
fsub
xor
fs
popa
cmpsb
lock
clc
xchg
jnp
bound
loop
push
das
push
stc
es
es
or
daa
jmp
outsb
pop
jno
dec
xchg
xor
mov
arpl
jp
xor
mov
xchg
sbb
jg
xor
sbb
cmp
nop
or
cs
and
xor
int
sbb
shrb
test
adcl
sub
mov
divb
push
pushl
popf
push
pushf
pushl
ret
push
cmp
int
outsl
rcll
mov
jecxz
les
xlat
ud2
lods
xor
test
decb
jns
push
xor
mov
lods
push
mov
lret
rcrb
add
ret
call
and
xor
push
test
hlt
out
bound
cmp
test
popf
mov
aam
rclb
xchg
fisubs
sbbb
push
and
xchg
das
int3
outsl
or
cmpsl
xor
out
js
movsb
lods
sub
fwait
sub
mov
std
sub
cwtl
jle
out
ret
rcrb
int3
sbb
ret
ror
xor
dec
out
xlat
mov
stc
out
lds
sbb
jmp
pop
shll
mov
sti
lds
xchg
xchg
enter
and
mov
hlt
mov
mov
pop
xor
add
mov
cmp
idivl
shlb
xor
jnp
popl
test
fisttpl
loope
jne
js
add
push
lret
lods
hlt
jecxz
xor
aam
pop
pop
dec
or
fstpt
cmp
mov
insb
sahf
mov
xor
ljmp
pop
int3
hlt
and
std
jge
push
and
outsb
pop
aaa
outsl
pop
in
mov
pusha
test
mov
addl
mov
shll
shlb
cmc
mov
lea
dec
jg
push
pop
jne
test
add
xor
jo
mov
inc
mov
mov
xor
or
fcoms
mov
adc
lret
mov
sarl
pop
mov
add
pusha
push
or
pop
inc
je
mov
adc
in
xor
mov
lods
sbb
jg
jle
inc
into
dec
cltd
xor
mov
and
adc
pop
ljmp
pop
pushf
and
iret
loop
loope
sbb
inc
pop
mov
xchg
or
cld
push
mov
jnp
inc
and
and
add
pop
ja
add
xor
in
add
mov
call
bsr
inc
orl
xchg
rcll
xor
mov
mov
xchg
cmp
popa
jge
test
mov
push
xchg
fldt
mov
lods
xor
push
test
or
push
pusha
jmp
cmc
fmulp
or
rolb
mov
jp
or
pop
andb
dec
add
mov
cmp
sbb
cmp
xor
sahf
mov
xchg
lret
xchg
push
ja
xchg
js
sti
dec
test
mov
hlt
add
es
stos
nop
mov
enter
ficomps
xchg
dec
repnz
les
arpl
xchg
lcall
shrb
imul
ret
xor
pop
dec
shlb
jb
cmc
sub
xor
mov
cmpb
push
or
xchg
hlt
push
es
pusha
idivl
push
cmp
push
mov
or
jnp
fdivs
push
xchg
jo
test
lahf
rcrb
rolb
pop
cltd
jge
scas
sbb
add
jne
repz
push
inc
push
jmp
insb
negb
gs
jle
cltd
xchg
popf
sub
int
jne
jg
mov
dec
imul
cmp
clc
cld
mov
cmp
push
jg
cmp
out
mov
aad
popa
xor
test
lret
mov
or
mov
iret
pop
sub
cmpsl
jns
and
divb
call
pushf
push
movl
call
pusha
pusha
pushf
popl
movb
clc
xor
push
xor
jmp
add
sub
ss
ja
sbb
dec
decl
or
lods
incl
adc
outsb
negb
inc
imul
mov
jge
mov
gs
nop
in
mov
mov
and
mov
pusha
push
ret
pop
jecxz
mov
jmp
fmull
jmp
push
loop
push
adc
push
leave
mov
hlt
hlt
sbb
sub
and
sbb
outsb
xchg
jl
ss
call
pusha
movsl
mov
pop
jge
sti
adc
lret
cmpsb
andl
mov
out
mov
call
xchg
cld
out
add
repnz
dec
mov
sbbb
repnz
in
int
imul
xor
dec
int
mov
orb
pop
inc
xchg
shr
adc
jns
ror
dec
lea
dec
leave
pop
xchg
jo
cmp
xchg
jl
jmp
leave
dec
push
push
das
cli
jp
or
popa
subb
nop
test
rorl
adc
mov
jno
mov
sbb
adc
xchg
xchg
xlat
sbb
sbb
ret
ja
in
jb
adc
mov
xchg
sbb
xor
jo
hlt
loopne
aam
ficomps
push
test
addb
into
dec
into
call
repnz
pop
bound
pop
lds
cmp
test
mov
mov
scas
inc
mov
mov
adc
into
and
jb
push
leave
pusha
aaa
scas
cmpsb
sub
push
jmp
dec
cmp
or
sbb
or
or
pop
mov
jmp
and
mov
dec
fnsave
test
dec
add
jmp
add
stos
cmp
std
sar
xor
dec
xchg
mov
inc
addl
adc
imul
fwait
adc
or
xor
lea
adc
popf
xor
call
xchg
xor
loop
ficompl
scas
int3
hlt
cmc
lcall
stos
ljmp
mov
xchg
test
leave
push
lahf
inc
sub
add
in
push
sti
and
popa
push
mov
mov
mov
cli
sti
push
sbb
add
call
mov
cmc
push
movsl
das
je
pop
mov
xchg
jg
cmc
add
add
mov
pop
xchg
jnp
xchg
jg
movsl
inc
int3
adc
inc
adc
inc
sub
dec
lcall
pop
adc
scas
hlt
test
dec
shlb
pop
mov
push
pop
pop
test
ret
sub
and
es
sbb
sub
fdivs
ljmp
enter
cmpsl
stos
in
xchg
cs
movb
sahf
insb
push
inc
sub
jb
push
xchg
push
idivb
xchg
sbb
push
jns
sbb
je
inc
hlt
jle
negl
dec
repnz
test
adc
push
add
inc
or
mov
jg
lcall
and
pushl
repz
mov
pushw
or
lods
xchg
aaa
rorb
cmpsb
aam
mov
lcall
mov
jne
ret
outsl
divl
pop
fsubl
lods
sub
in
cmpsb
push
jnp
sti
jecxz
std
fmull
enter
je
jb
in
pushl
xchg
xor
mov
add
in
sbb
test
test
popa
nop
xchg
sar
xchg
pusha
xchg
arpl
inc
jns
es
mov
popf
mov
les
mov
rcrl
ss
and
cltd
mov
mov
icebp
xchg
test
in
sub
aaa
sbb
imul
xchg
xorb
dec
jnp
not
repnz
pusha
sbb
mov
add
aaa
rcrl
movsbl
shll
scas
push
push
push
fistl
repz
add
arpl
call
clc
inc
stc
push
xchg
roll
push
cmp
jmp
jp
sub
lret
imul
cmp
pop
lods
cmc
into
push
push
add
in
call
xor
sub
xchg
call
sub
les
test
jae
out
pop
sub
scas
mov
shlb
aaa
test
adc
jb
movntq
sub
outsl
and
adc
aad
mov
sbb
sbbb
addr16
jae
fdivrl
or
pop
dec
dec
mov
mov
enter
push
insl
lock
jg
pop
push
inc
dec
cmp
add
sbb
hlt
pop
pop
ljmp
lea
mov
xor
sub
mov
das
mov
jl
loope
daa
pop
dec
rorb
dec
push
or
mov
inc
in
fisttpll
imul
rcrl
js
or
clc
mov
addb
xor
jnp
mov
jp
push
mov
jbe
inc
dec
sub
ja
jle
lods
pop
and
xor
push
jmp
je
pop
clc
das
mov
aaa
outsl
nop
mov
rcll
and
cmp
sbb
jnp
aas
pop
jg
mov
subb
mov
mov
mov
add
movsb
mov
jmp
jmp
add
or
insl
std
xor
shl
imulb
mov
inc
enter
push
sub
dec
xchg
sub
jae
loopne
xchg
das
aas
out
sbbl
cld
jb
mov
xchg
lods
daa
add
sti
out
sub
and
test
cmp
in
adc
jmp
or
inc
ljmp
fadd
scas
sahf
add
lret
mov
js
in
mov
jmp
cmp
xchg
cmc
int
cs
pop
leave
cwtl
mov
arpl
pop
dec
cmpsl
mov
cld
popa
cltd
mov
sarl
or
inc
sub
dec
stc
fcomps
and
inc
cltd
xchg
adcl
xchg
mov
xor
loope
sbb
and
icebp
out
jns
pop
sub
push
fsubs
loope
push
in
addl
sbb
pushf
outsb
lea
push
enter
mov
xorb
ss
mov
loope
lea
pop
adc
fcmove
xchg
aaa
mov
out
jecxz
std
inc
ret
mov
xor
mov
rcll
popf
or
jo
jl
add
xor
jnp
add
rorb
sahf
add
pop
jmp
loop
cmc
pop
mov
xchg
test
dec
js
ret
outsl
xor
jmp
push
fiadds
fdivr
out
inc
mov
cmp
mov
in
jne
cmp
std
aas
push
loopne
inc
std
insl
pop
fcompl
movsb
sub
outsl
pop
xchg
testb
mov
in
jmp
outsb
jg
adc
jns
inc
addr16
fmuls
xlat
hlt
pop
cmp
out
lret
add
fstpt
add
pop
inc
or
call
push
mov
xchg
std
xor
out
xchg
bound
mov
mov
add
call
xor
std
cmc
pushl
popf
push
pushl
ret
xor
bt
xor
call
stc
xor
pusha
xor
bt
pusha
xor
stc
clc
xorl
pushf
call
xorl
pushf
movw
xor
cmc
test
xor
cmc
xor
pusha
cmp
xor
mov
bt
xor
stc
bt
pushl
popf
pushl
pushl
ret
or
pop
or
add
ljmp
cmp
jg
dec
add
xor
cmp
inc
mov
or
push
movsl
sbb
dec
mov
scas
sahf
movsl
xor
and
scas
cld
outsb
pop
mov
mov
mov
dec
stos
cmpsb
add
mov
scas
ds
ja
or
mov
sub
cmp
outsb
pop
aaa
mov
or
push
add
xchg
adc
mov
int
adc
push
mov
shrb
mov
mov
add
lods
ja
jnp
ret
mov
sub
ret
adc
into
mov
ljmp
stos
push
adc
inc
jge
jg
icebp
out
clc
cmpsl
adc
lds
or
dec
push
xor
nop
cmpl
call
test
dec
jb
inc
arpl
jle
sbb
sar
and
mov
mov
mov
sbb
mov
adcl
mov
mov
in
xor
push
stc
loopne
jno
and
fwait
cltd
jmp
in
pop
inc
leave
sub
movsb
cmp
jp
or
xor
inc
stc
fcoms
inc
repnz
test
int3
pop
fmull
imul
ret
aad
add
imul
adc
cmp
test
mov
bound
pop
arpl
xor
xor
dec
ret
jae
int
pop
sub
movsl
dec
insl
push
or
out
into
fcomp
incb
fyl2x
subb
cmc
sub
inc
sbb
stos
jnp
paddq
xor
jbe
ja
mov
lret
xchg
out
jp
and
push
jae
aam
or
out
push
inc
inc
jnp
fyl2x
or
leave
jbe
insb
or
cmp
jg
ss
adc
jne
or
int3
gs
cwtl
xor
and
repz
into
push
and
sbb
xchg
adcb
outsl
xchg
cltd
jp
xchg
mov
sub
adc
xorl
inc
movsb
imul
lods
sahf
pop
adc
cmc
add
jecxz
sbb
or
imul
cmp
ja
or
sub
iret
cmc
sbb
out
or
push
int3
mov
xor
iret
sahf
outsb
inc
jae
xor
pushf
jmp
pusha
pushf
pushf
popl
call
call
call
jmp
call
xorl
test
call
cwtl
test
jo
mov
sub
sbb
int
je
or
and
cmpsb
push
addr16
cltd
or
or
in
xchg
test
push
outsl
xchg
lea
mov
repz
cli
std
sub
lods
cwtl
inc
in
sbbl
shlb
ret
dec
xchg
es
mov
fsubrl
jmp
jbe
xchg
cmpsb
push
aam
jno
les
outsb
cs
cwtl
and
inc
lea
xchg
mov
jb
arpl
jo
or
push
sbb
sub
test
pushf
xchg
jbe
push
clc
fstpl
add
dec
mov
fdivrs
or
xor
test
mov
push
ss
rorl
std
outsb
or
inc
pop
cmp
cli
push
jg
adc
scas
dec
enter
lds
jnp
ss
dec
mov
sub
scas
mov
push
test
in
sub
in
jnp
es
loopne
je
push
xchg
sub
stc
mov
stos
add
cmpsb
adc
scas
sbb
push
mov
out
fwait
lcall
sub
insb
mov
cmp
data16
icebp
addb
leave
cmp
rclb
je
push
pop
add
scas
cmp
std
repnz
cmp
push
test
mov
lea
cltd
sarb
rolb
lock
fadd
test
mov
stos
jne
xor
mov
pop
and
cmc
xchg
xchg
loope
addb
push
adc
mov
ds
mov
xchg
mov
in
jns
push
jmp
jge
push
out
cmp
or
in
sub
sbb
pop
mov
notl
dec
and
mov
adc
mov
loopne
add
lods
lret
repz
jnp
jl
pop
xor
bound
pop
repnz
mov
xchg
sti
aam
inc
pop
dec
notb
xchg
push
fdivl
sub
jle
jle
rcll
dec
popf
leave
dec
cmpsb
mov
insb
sbb
and
push
dec
jnp
ficoml
add
mov
jg
jmp
movsl
enter
test
jg
mov
subb
loope
xor
cmp
shr
cmp
mov
call
add
sbb
scas
mov
lahf
stos
mov
je
jecxz
jge
fucomi
subb
into
out
add
jb
sub
popf
cmpsb
dec
jnp
mov
lock
rorb
mov
mov
sub
subl
hlt
subb
lret
test
dec
mov
dec
les
cmpsl
mov
clc
stos
fwait
and
jp
or
jmp
jp
inc
pusha
andl
rcrl
fnsave
cmp
adc
cwtl
adc
add
add
inc
mov
jl
or
pop
mov
add
pushf
or
andl
jge
cmp
push
int
pushf
inc
mov
inc
mov
mov
into
insl
dec
int3
push
lods
cmpb
ljmp
mov
add
scas
xchg
cs
mov
stc
movaps
lods
push
fstpl
stc
mov
out
jp
aaa
cmp
sbb
mov
idivb
imul
jns
test
outsl
inc
dec
int
pop
pushf
fildll
mov
roll
outsb
xor
sbb
arpl
mov
mov
mov
sahf
loope
sbb
xchg
mov
inc
arpl
mov
in
test
mov
lret
clc
add
cmp
or
lods
ja
push
test
push
adc
fists
orl
cmc
aad
pop
loopne
add
sub
pusha
jg
mov
mov
pop
and
iret
mulb
sbb
jns
out
sub
pop
lret
les
dec
lret
sbb
movsb
xlat
out
sbb
cmp
jge
dec
mov
sub
imul
cmpsb
dec
xchg
add
push
decl
push
test
cmpsb
xor
or
xchg
push
rorl
cli
pusha
pop
lahf
repnz
add
fildll
fstl
aam
mov
sbb
cmp
enter
pushl
jle
xchg
mov
movsb
jge
and
je
icebp
nop
jo
cmp
xchg
pop
xchg
jo
or
sub
and
rcrb
xchg
push
or
adc
pop
cmc
and
pop
sahf
xchg
dec
pushf
inc
pushf
mov
cmp
inc
push
xlat
pop
xchg
and
mov
in
andb
add
push
ljmp
pop
nop
xchg
insl
push
push
outsb
mov
or
test
push
inc
orb
and
jge
hlt
shll
mov
pop
ffreep
cmpl
orb
fcoml
adc
outsl
mov
cld
jg
cli
scas
add
aas
fdivp
pop
or
aad
sub
dec
lea
jp
push
andl
sub
cmp
pushf
scas
sbb
pop
mov
jle,pn
pop
pop
cmpb
ljmp
add
fnsave
jp
dec
and
aaa
scas
call
jae
pop
test
shr
or
sub
mov
shlb
add
adc
lea
sub
adc
sbb
lahf
outsl
sub
sub
inc
repz
aaa
pop
cwtl
cmp
xor
mov
xchg
ja
jmp
jns
ljmp
test
jae
sarl
les
test
lock
adc
pop
repz
je
mov
scas
xlat
push
push
cs
adc
sbb
cmp
inc
call
repz
out
daa
out
jbe
aas
insb
push
inc
mov
aaa
aas
ss
mov
mov
xchg
test
sbb
jg
inc
push
les
lods
jle
and
pop
or
test
out
aam
or
xchg
das
loopne
mov
test
movsl
out
mov
clc
movb
mov
jns
inc
lret
lcall
mov
fistpll
mov
inc
xchg
sub
lret
hlt
lock
mov
jle
push
in
nopl
cmc
insb
bswap
in
push
xchg
inc
loopne
dec
xchg
lock
rol
cmc
les
lock
or
lods
aaa
jp
addl
ret
pop
addr16
xlat
jns
insl
cmp
jmp
mov
xchg
lock
adc
pop
jmp
call
xchg
jle
hlt
xchg
ficompl
in
inc
rcrb
data16
adc
inc
xor
adc
mov
dec
lock
das
loop
adc
dec
movsb
mov
cmp
in
sbb
dec
movb
repnz
sub
in
and
lock
pop
cmp
xorl
ret
int3
out
imul
test
dec
js
aas
pop
or
inc
ds
iret
test
das
orb
mov
stc
fdivs
and
inc
fs
and
mov
mov
in
dec
cmp
jbe
mov
movsl
jo
addr16
scas
daa
pop
mov
popf
mov
mov
inc
and
xchg
cwtl
cmp
add
shl
jmp
xchg
fiadds
into
dec
mov
cmpsb
mov
int3
pop
or
insl
movsb
fdivl
push
push
push
sub
les
inc
xchg
xor
fsubl
stc
xchg
test
mov
jb
out
add
jge
inc
lea
lods
jl
sbb
sbb
and
nop
insl
sbb
psllq
nop
xchg
adc
fisubs
inc
cli
mulb
pop
stos
pop
icebp
mov
outsb
jecxz
jb
gs
push
mov
es
fisubs
icebp
call
pusha
xchg
adc
lds
hlt
xor
push
cmp
shrl
mov
pusha
cwtl
ss
sub
shll
popf
mov
pop
rep
xlat
sbb
xchg
gs
jecxz
adc
xchg
insb
jecxz
in
sbb
lock
pop
aad
push
add
loop
and
push
repz
std
sbb
inc
xor
ret
cmp
or
or
lea
add
jo
fs
and
mov
dec
fiaddl
inc
push
mov
cmpsl
in
or
mov
mov
leave
fistpl
cmc
dec
cmp
outsl
cwtl
ret
or
and
sub
fisubrl
mov
andl
cs
xor
addl
xlat
mov
test
sub
outsl
das
lret
into
repz
jnp
mov
jge
scas
sbb
aaa
movsb
lds
cld
test
or
rcrb
pop
subb
xchg
cmp
jbe
or
jl
mov
sub
pop
mov
rcll
or
cwtl
andl
fdivrs
sub
cld
xchg
push
push
leave
nop
mov
movsl
sub
hlt
pop
dec
or
push
shlb
jb
lcall
in
in
scas
ss
ljmp
sarl
movsl
inc
scas
pop
out
stos
rcrb
adc
seto
push
shrb
mov
nop
stos
pop
idiv
bound
sbb
push
mov
jle
imul
es
mov
jbe
cwtl
cmp
sti
lods
ficoml
mov
cmp
mov
adcl
push
pop
dec
jle
pop
pop
pop
add
cs
pop
lahf
xchg
test
add
mov
test
xchg
sbb
ds
adc
pop
cmpl
cmc
pop
and
fadd
mov
pop
dec
sub
sbb
mov
mov
dec
inc
cltd
into
mov
ror
dec
stos
dec
shlb
out
and
mov
ds
mov
adc
or
pop
cmpsl
sti
daa
push
loop
mov
arpl
repz
pop
popf
imul
jo
pushf
or
shrb
jecxz
sti
aaa
mov
xor
and
pop
in
pop
xchg
or
in
into
pop
fiaddl
jl
aam
mov
and
add
inc
sbb
movl
mov
mov
adc
movsl
sub
add
jb
test
fmuls
mov
sub
out
jmp
out
sub
xor
ret
ror
mov
test
int3
xor
lret
ret
push
fwait
outsb
jo
jne
orl
je
dec
adc
mov
xor
enter
xchg
cmp
ret
cmpsb
pop
cmpsb
jmp
xchg
sbb
push
sub
movsb
mov
pop
in
out
cli
xchg
mov
lock
dec
aam
lock
into
sbb
rolb
jle
add
mov
fisttpl
jge
mov
or
sub
inc
push
dec
or
cwtl
jne
inc
flds
pop
dec
dec
mov
sbb
mov
fs
movsl
cmp
data16
push
sub
hlt
mov
cs
insl
pop
stos
lahf
and
aad
repnz
mov
sub
jo
and
subl
xor
dec
cmc
pop
mov
mov
dec
cpuid
js
mov
push
lock
fcomi
popl
pushf
insb
stos
ss
fwait
divl
xor
lods
testl
les
fisubrs
adc
xor
nop
push
dec
es
jle
mov
or
outsb
loop
test
jl
mov
mov
pop
loop
test
mov
fmuls
cltd
mov
iret
cmc
xchg
cmpsb
inc
sub
mov
and
xlat
mov
or
mov
jmp
or
sub
pop
leave
inc
mov
pop
xor
fucom
mov
jb
cmp
or
mov
jnp
or
clc
xchg
cmp
pop
xchg
repz
push
xchg
pop
and
mov
fcompl
xor
popa
mov
sbb
add
in
inc
xchg
sub
jmp
outsb
mov
sarb
lods
sub
and
shl
cmova
aam
dec
xchg
sub
clc
jle
lds
xchg
hlt
lahf
faddl
outsl
push
imul
xchg
test
test
xchg
cmp
sub
call
gs
stc
add
jge
add
dec
jo
adc
pop
fisubs
scas
push
repnz
adc
push
lret
stos
cmp
mov
dec
in
pop
cmp
sarb
inc
fwait
dec
scas
pop
sub
mov
mov
or
scas
fcmove
addr16
loop
clc
cmpb
test
sbb
neg
push
in
je
add
lret
or
cs
fbstp
xchg
call
xor
push
repz
fldcw
jp
pop
in
dec
sbb
ret
sub
mov
xlat
jns
mov
jne
je
jecxz
mov
popa
mov
stos
push
popl
shl
or
in
lods
mov
sub
xchg
mov
xchg
pop
mov
lods
in
xchg
inc
xchg
int
pop
mul
sub
dec
cmp
pop
mov
xchg
xchg
imul
xchg
cwtl
ret
sar
in
imul
xchg
xor
cmp
enter
mov
das
dec
xchg
movsl
les
cmpsb
stos
out
nop
mov
jbe
lods
scas
xchg
cmp
and
push
in
insb
scas
cmp
xlat
inc
dec
sub
sbb
cmc
loop
inc
xchg
sarb
mov
addr16
xchg
jo
jne
aaa
into
mov
pusha
fbld
mov
popf
les
pop
in
dec
adc
xchg
faddl
xor
dec
sbb
push
bound
loope
ret
xorb
adc
les
xorb
test
sub
lods
out
mov
dec
mov
out
mov
mov
sbb
hlt
call
inc
jmp
loope
aas
movsb
sub
nop
cltd
or
out
mov
xchg
sub
stos
and
lahf
cmp
dec
popf
in
jecxz
shrl
sbb
xchg
dec
or
dec
pop
dec
cmpl
ret
pop
inc
sub
repz
cmp
inc
inc
pop
jnp
jecxz
mov
pop
hlt
pop
push
sbb
jbe
push
push
pop
sub
mov
mov
out
inc
pusha
out
adc
xchg
jge
outsb
cmp
ret
add
xor
push
pop
ljmp
lret
push
test
pushf
add
pop
fwait
notb
cmp
mov
cld
mov
pusha
mov
cmp
sub
shll
test
subl
dec
push
loopne
loope
mov
lret
mov
xor
aad
inc
jb
repnz
in
stos
ret
mov
divl
cmp
ss
cwtl
cmp
sti
xor
sbb
adc
pop
ljmp
aas
sub
push
hlt
cltd
dec
and
cmp
xchg
arpl
pop
jns
mov
frstor
lods
dec
ret
fadd
clc
and
and
dec
inc
pop
pop
and
scas
mov
push
xchg
fidivl
in
jnp
bound
das
sti
sbb
psrld
test
inc
xchg
mov
jbe
dec
sub
inc
mov
and
test
sbb
pop
scas
aad
or
mov
lret
aam
ss
psllq
xor
arpl
push
fstps
xchg
mov
fisubrl
ret
in
xchg
cmp
ret
sub
pushf
dec
xlat
insl
mov
xchg
adc
rcrb
push
or
popf
jae
push
loopne
jnp
divb
movl
pushf
push
movb
pusha
lea
jmp
mov
dec
or
sti
inc
mov
sub
push
shll
in
cmp
inc
fldcw
and
mov
stos
shlb
int3
mov
pop
orb
ja
pop
stos
sub
loope
sahf
std
and
xchg
push
inc
cmpsb
lock
jmp
xor
mov
inc
mov
mov
inc
add
outsb
out
dec
cld
adc
fadds
dec
adc
jmp
jmp
adc
pop
and
in
fnstenv
pop
cmpl
xchg
sub
pop
test
add
sti
mov
es
push
in
dec
cmp
hlt
mov
hlt
pusha
incb
repnz
bound
pushf
es
scas
mov
fdivrl
xchg
mov
insl
push
cs
loopne
dec
push
pop
inc
stc
add
xchg
xchg
repnz
pop
mov
add
test
mov
push
mov
xchg
pushl
movsb
push
xchg
outsb
and
push
or
ja
out
mov
adc
inc
out
xchg
mov
out
cwtl
dec
js
in
dec
testb
inc
int3
pop
mov
mov
insl
push
iret
es
bound
inc
incl
les
pushf
add
fbstp
sbb
and
fs
test
sub
mov
fimuls
cmc
mov
mov
jle
pushf
stc
sbb
sti
out
popa
pop
lods
xor
and
fs
sbb
cmp
fs
xchg
xchg
mov
mov
dec
jle
lods
cmp
xor
insl
jmp
sbb
sub
mov
fldcw
pop
pop
sbb
push
sbb
ret
popf
lock
lret
ret
jp
cmp
xlat
adc
sub
dec
mov
out
adcl
divb
cmpsl
mov
push
fsubl
jo
out
sub
xor
xlat
sub
xchg
pop
or
enter
mov
test
movsb
js
icebp
test
sub
xor
inc
fistpll
sbb
jnp
cld
cli
inc
mov
or
arpl
out
out
mov
lret
mov
in
mov
dec
adc
scas
sbbb
in
and
xor
xor
clc
stc
xor
bt
push
pushl
popf
pushl
pushf
pushl
ret
pushl
popf
push
pushl
ret
pushl
movl
pushl
pushf
movl
pusha
lea
jmp
xor
stc
xor
push
mov
xor
clc
cmc
xorl
movb
xor
test
movw
pushl
popf
pusha
pushl
ret
pushf
pushf
popl
cmp
cmp
xorl
cmc
xor
cmc
clc
xor
cmp
cmp
xor
clc
clc
xor
jmp
call
jmp
jmp
and
push
out
lods
cld
lahf
lods
mov
and
fsubrs
jl
pop
outsl
test
sbb
adc
ss
push
mov
out
sub
test
cmp
into
push
addr16
sub
dec
outsb
out
out
and
dec
pop
pop
aam
mov
outsl
stc
jge
pop
inc
stc
pop
dec
cld
movsl
mov
mov
daa
rcr
scas
cmp
pop
mov
and
mov
jne
out
adcl
lods
jmp
rorl
out
and
rcrb
mov
fs
ficomps
orps
jne
clc
out
pop
ret
pop
sbbb
push
xchg
lea
or
mov
aaa
mov
mov
sub
in
nop
lods
mov
xchg
inc
add
pop
cmc
jle
pop
mov
xchg
or
fstl
rolb
xor
dec
and
inc
fsubl
dec
repnz
inc
sarb
mov
ret
movsb
dec
in
cli
loope
icebp
sbb
les
int3
push
decl
aas
popa
adc
mov
adc
neg
lahf
movsl
orb
in
jo
outsl
pop
sub
jnp
xor
dec
aam
push
sahf
aas
int
cmpsb
shl
add
mov
sbb
scas
xchg
mulb
mull
test
jno
ds
cmp
adc
xchg
aas
aaa
sub
inc
adc
in
xchg
add
pop
inc
cmpsl
pop
or
fwait
push
push
mov
inc
lret
lcall
mov
xlat
pop
mov
mov
jne
push
lock
cmp
push
fistl
add
ljmp
jmp
jae
mov
sbb
addr16
sbb
xchg
fidivrs
int3
xchg
pusha
xor
or
lret
mov
add
dec
inc
push
je
cmpsb
jo
or
mov
jns
fwait
cwtl
in
jecxz
mov
adcl
xchg
mov
popf
loope
jl
sbb
mov
inc
sbb
sub
out
cmp
fxsave
mov
insb
addl
popa
dec
insl
xchg
adc
mov
loope
push
loopne
orb
mov
adc
sbb
push
fsubrs
shr
pop
jg
aad
ffreep
rol
fidivrl
mov
xchg
mov
dec
pushf
pusha
pop
mov
lret
mov
cmc
push
repnz
jp
into
push
cmc
jo
sbbl
jl
loope
mov
cmp
sbbl
shrl
jae
in
lret
or
cmp
aas
mov
and
movsb
pop
lds
cmpb
adc
sub
sbb
rcr
mov
xchg
in
mov
add
adc
inc
std
into
ficompl
mov
dec
mov
std
pop
movsb
test
roll
incl
xor
adc
mov
push
jp
mov
sbb
insb
iret
into
dec
imul
add
test
popa
mov
in
mov
fcoml
jb
jns
mov
pop
movsl
inc
lds
xchg
sbb
imul
pop
lds
imul
adc
or
jb
in
idivl
call
dec
cmp
cli
int3
movsb
jp
sbb
pushf
inc
out
or
test
cmp
test
add
add
movsl
ja
pop
fwait
divb
shlb
in
pop
jb
jmp
fsubrl
jo
lret
leave
les
and
scas
inc
subb
dec
inc
pop
into
mov
inc
pusha
mov
subb
scas
and
mov
xor
in
inc
jnp
out
mov
ret
dec
scas
sbb
outsl
sub
test
xchg
enter
sti
mov
push
pushf
out
cmovp
adc
jno
inc
lahf
enter
inc
ror
push
pusha
aam
dec
xrelease
jb
xchg
cmp
xchg
mov
add
aas
aad
lcall
fcomps
enter
add
sbb
dec
xor
ds
mov
dec
out
fwait
cmp
dec
iret
lock
pop
in
push
xchg
fcompl
pop
dec
sbb
int
lods
push
push
imul
subb
pop
daa
data16
ret
jle
xchg
pusha
gs
xor
pushf
int
jle
xor
cmpsl
pop
loopne
adcl
dec
jae
in
mov
call
sti
bound
add
mov
shrl
xor
jmp
pushf
jmp
in
sub
xor
and
adc
or
sar
and
loopne
or
and
in
mov
mov
bound
orb
push
rcll
ret
imul
mov
fisubl
cmpsl
sub
hlt
jb
mov
pop
cmp
js
fdivrl
or
xor
mov
dec
mov
sbb
cmp
jo
mov
push
lahf
addr16
imul
sub
or
inc
mov
push
fbld
aam
sub
test
mov
rcl
pop
inc
jp
adc
sbb
push
cmp
imul
pop
mov
in
jge
ljmp
jg
mov
enter
dec
cmp
adc
and
ret
inc
xor
aas
fldcw
outsl
addr16
sbb
mov
lret
imul
out
mov
repnz
mov
outsb
ja
adc
lds
cmp
dec
pop
pop
push
pop
negl
loop
mov
cmc
fs
dec
push
pop
inc
shll
fdivrs
out
pop
or
outsl
mov
push
and
inc
ret
enter
jg
dec
xlat
aam
dec
and
mov
loopne
daa
adc
dec
and
mov
pop
dec
out
dec
ds
inc
jmp
and
pop
mov
push
mov
inc
fucomp
sub
scas
imul
ds
icebp
mov
sarb
repnz
stc
shrl
jmp
xor
mov
cltd
addr16
mov
in
jle
shll
push
rcrl
jb
sub
cmp
inc
mov
xchg
rcrb
popf
push
sub
cmc
mov
inc
xor
inc
add
sbb
mov
dec
cmp
inc
aas
pop
iret
inc
lods
lret
mov
rcl
cmp
addl
int3
lock
pushf
or
ret
jae
xor
fsubrl
mov
js
into
test
outsl
push
pop
or
xchg
scas
and
and
sbb
rorl
and
push
and
add
out
adc
jmp
pop
frstor
out
mov
mov
push
sub
xlat
pop
divb
cmc
xor
clc
jmp
jmp
jmp
pushf
pushf
jmp
xor
call
fistl
bound
inc
cwtl
jmp
roll
push
ljmp
mov
cli
mov
sbb
sub
jno
dec
aam
mov
mov
xchg
test
adc
scas
sub
cmc
mov
push
jle
add
jo
mov
std
scas
test
lret
mov
jb
out
jge
cmp
pop
mov
add
mov
mov
ret
cmp
sbb
mov
popf
sub
rolb
cmp
xor
inc
xchg
and
das
jmp
push
mov
sub
aad
enter
xchg
out
popa
imul
fsubs
out
mov
std
dec
mov
lcall
sbb
pop
dec
push
jecxz
pop
ficomps
cmpsl
and
sbb
jnp
movsb
mov
es
shrl
cmc
adcl
pop
lea
lretw
jg
add
push
fbstp
je
mov
pop
fnsave
inc
push
or
enter
sbb
popa
fstpt
fdivrp
inc
pop
aas
mov
mov
push
inc
push
shl
mov
loope
dec
pop
mov
pop
clc
add
dec
jno
pop
push
sbb
cs
lcall
xor
jne
fnstsw
inc
cli
mov
andb
in
ja
pop
pop
pusha
bound
mov
xchg
and
loopne
sbb
mov
add
or
popf
inc
testl
cld
mov
and
fstl
push
xor
and
xchg
fldcw
jne
mov
push
rolb
insl
adc
ja
inc
cmp
push
clc
adc
and
outsl
sbb
aaa
mov
xchg
pusha
rolb
rcr
cwtl
adc
fsubs
pop
dec
lret
scas
xchg
inc
xor
in
push
push
leave
dec
arpl
xorl
out
cmp
and
xor
jns
mov
lea
sbb
pop
jnp
cmc
stc
xchg
shl
popf
scas
cld
enter
outsb
pop
dec
inc
sub
lods
flds
add
sub
stc
push
les
mov
dec
leave
cltd
cmp
je
mov
xchg
lock
fstl
mov
addb
mov
arpl
cmp
push
push
stos
in
push
or
popa
lods
add
push
xchg
ret
pop
popa
sub
xchg
sbb
lock
pop
jmp
and
out
scas
xor
mov
test
sbb
push
sub
stc
fimuls
mov
xchg
lock
sub
rcr
xchg
ljmp
xor
imul
add
cmpsl
dec
fldcw
test
fs
jp
lcall
push
std
cwtl
push
add
adc
imul
sbb
mov
stos
and
int3
push
cld
mov
outsb
scas
xlat
xchg
xchg
or
test
gs
iret
shlb
clc
call
and
push
adc
mov
and
mov
in
js
xlat
divb
jae
dec
aad
add
rcr
xchg
fldenv
jl
and
mov
push
mov
movsl
int3
in
adc
pop
repz
mov
push
in
add
test
outsl
lcall
out
popa
jmp
in
pop
or
cld
or
xchg
lcall
loopne
sbb
inc
test
fistl
cltd
cmp
xor
fs
lods
dec
mov
jno
pop
imul
jbe
xor
stos
loop
mov
test
add
mov
mov
adc
sub
pop
fnsaves
cmc
xchg
jae
mov
jne
ljmp
ljmp
repnz
sbb
xlat
pop
ret
shl
mov
lcall
iret
aaa
dec
bound
mov
test
dec
in
cmc
inc
int3
pushf
jo
sbb
sbb
mov
jae
movsl
mov
add
test
add
pusha
push
movl
push
jmp
out
out
mov
jne
ss
insl
mov
dec
mov
or
and
ficompl
nop
ss
lock
push
popa
cld
xchg
and
mov
mul
xor
push
lret
xchg
xor
mov
sbb
out
bound
push
xchg
xor
mov
shll
xchg
adc
and
lret
jg
lds
or
push
jb
ret
push
ja
pusha
rcrb
cmp
clc
subl
dec
sub
and
dec
pop
scas
mov
jnp
dec
or
jb
push
enter
push
jns
mov
pop
fmul
loope
leave
cmp
call
dec
cmp
in
in
adc
aad
stos
enter
mov
add
stos
mov
xchg
loope
popf
xor
mov
movsb
and
test
subb
inc
std
jle
sub
dec
or
hlt
scas
add
cmp
movb
movsl
jmp
lret
not
adc
and
outsl
fisubrs
pop
mov
aad
sahf
shl
mov
sub
push
pop
scas
cmp
pop
lds
sbb
sub
pop
inc
or
rol
adc
pop
movsb
xchg
jecxz
xchg
lret
bound
sub
sahf
xchg
sub
adc
sti
addl
cltd
adc
in
enter
orl
add
cmpsl
xor
push
add
scas
jge
jbe
xchg
mov
test
push
jns
mov
mov
mov
pop
jp
aad
test
push
ss
shl
push
xchg
dec
out
jp
ret
xchg
jno
std
in
into
dec
xchg
cs
jmp
int3
inc
push
xor
fs
rcrb
dec
and
stos
rcrl
pushf
mov
je
scas
mov
test
divb
push
movl
pushf
mov
lea
jmp
jmp
mov
ljmp
imul
fsubrs
sbb
test
and
aas
add
jecxz
hlt
fildll
movsl
sub
test
insl
scas
fwait
mov
mov
fistl
mov
mov
aas
es
in
push
mov
or
and
sub
aad
push
icebp
ja
pop
ljmp
add
mov
fistl
jb
mov
pop
dec
cmc
pop
das
pinsrw
repz
and
rcll
or
xor
push
xor
inc
mov
lcall
in
outsl
lret
stc
adc
clc
loope
cltd
xor
nop
jecxz
mov
mov
roll
cltd
or
mov
jp
inc
xor
mov
lea
xor
adc
xchg
cmp
jmp
sbb
or
scas
int3
leave
and
out
xor
fcoms
dec
movb
push
roll
adc
in
cmc
aam
sub
mov
pop
sub
mov
rcr
push
pop
xor
dec
out
mov
orl
movsl
clc
rorl
inc
mov
mov
stc
fiaddl
push
inc
push
in
mov
test
jmp
ficomps
into
into
jl
sub
xlat
fiaddl
mov
mov
mov
jp
cmpsl
mov
outsb
frstor
sbb
fnstenv
nop
scas
jp
repnz
addr16
ret
cmpsb
sbb
push
sbb
push
pop
mov
repnz
in
sahf
jns
adc
loope
or
cs
inc
test
je
ja
aas
mov
inc
pop
dec
addl
repnz
mov
shlb
pop
and
xor
loope
rep
out
fs
test
add
jnp
pop
pop
enter
xchg
hlt
repnz
jle
hlt
push
push
das
dec
jnp
aam
inc
push
xor
xor
xchg
sub
cmc
enter
jle
lret
stc
jns
fcomp
xlat
cmc
adc
adc
cmp
arpl
mov
jo
mov
repz
mov
dec
aad
push
das
dec
pop
cmp
pusha
mov
cltd
ret
push
or
iret
pop
int
fiadds
lahf
loopne
jnp
dec
mov
pop
out
mov
add
push
in
jl
das
int3
dec
int3
cli
in
cwtl
lea
rclb
lret
xchg
inc
roll
jns
imul
stc
xchg
push
mov
sahf
lea
cmp
adc
decb
add
lret
xchg
xchg
mov
push
jl
and
aas
xchg
push
cmpsl
lock
xchg
nop
loop
test
call
divb
in
adc
ja
push
roll
hlt
jnp
push
push
pop
jge
loop
or
adc
inc
cld
lock
das
outsb
mov
and
inc
pop
in
sbb
mov
lret
push
mov
pop
push
xorb
popf
xchg
gs
fwait
popa
sub
xor
imul
and
iret
push
fs
movl
pusha
pushf
movb
lea
jmp
xor
movw
xor
jmp
pusha
pushf
movl
push
call
movl
mov
pusha
pushf
lea
jmp
movl
push
pushf
pusha
movl
pusha
lea
jmp
xorl
jmp
call
jmp
pushl
movl
pusha
push
call
xor
mov
test
xor
movw
bt
xor
bt
xor
stc
clc
xor
cmc
pushl
popf
push
pushl
ret
jmp
movl
push
lea
jmp
push
push
pushf
lea
jmp
mov
pusha
movl
push
mov
lea
jmp
push
jmp
jp
xchg
and
outsl
sub
lret
xlat
push
repz
daa
popf
cli
cmp
jbe
ret
stc
nop
shlb
test
jnp
mov
mov
fistpll
adc
jo
enter
dec
or
int3
lock
mov
std
and
sub
iret
sti
adc
xchg
jmp
or
nop
shr
rcl
add
adc
jmp
xlat
push
mov
fstl
add
outsl
sub
lods
lods
sub
adc
xor
cmp
nop
rclb
push
cmp
dec
push
scas
inc
loop
cmp
add
adc
into
adc
dec
into
xchg
and
xchg
or
fs
inc
pop
mov
sbb
inc
out
stc
nop
rol
jnp
jns
mov
xchg
jl
cld
rdmsr
fwait
sub
cltd
xchg
jp
into
push
icebp
jns
sahf
aam
cmp
popf
sbb
dec
lahf
lock
repz
or
add
pop
adc
aaa
mov
xchg
rcr
push
dec
pusha
jo
clc
dec
fdivrs
pop
mov
roll
jno
mov
into
repz
mov
mov
movb
mov
outsb
sbb
addr16
scas
cltd
into
jbe
cs
push
movsl
xorb
xchg
loop
arpl
sbb
in
outsb
mov
inc
xchg
and
ss
divl
xchg
xchg
ljmp
ja
xor
push
enter
or
push
sbb
nop
lcall
cmp
xchg
jae
aad
xlat
jmp
xchg
das
cmp
jnp
pusha
push
js
sbb
cmp
ss
and
outsl
push
in
jge
mov
fldl
fnstcw
sub
aam
dec
xor
cmp
lahf
pop
sahf
fsubs
cmp
pop
je
ljmp
adc
adc
outsb
dec
dec
inc
lret
pop
fistpl
mov
adc
push
xlat
fnstenv
push
jmp
adcl
ret
jbe
pop
sub
mov
daa
add
mov
stc
mov
dec
dec
aas
jbe
or
mov
pop
mov
sub
jecxz
cld
push
push
arpl
pop
cmc
mov
mov
push
cmpl
jns
mov
test
test
shll
add
mov
xchg
movsl
stc
xor
incb
jbe
adc
in
mov
cmpl
push
add
inc
cmp
adc
sub
out
shlb
popa
pop
repnz
xchg
insb
jg
nop
lret
jecxz
sub
lods
or
out
jne
adc
cmp
outsl
ja
push
lcall
repnz
dec
cmp
jmp
notb
imul
or
or
mov
bound
jb
cmp
adc
lods
out
mov
jne
adc
lret
test
cmp
test
call
or
stos
and
mov
cltd
and
push
pop
dec
xor
mov
add
add
xchg
or
ret
sub
jle
adc
xor
and
push
subl
cld
setne
in
mov
negl
mov
loopne
adc
pop
jle
mov
or
test
lea
nop
pushf
xchg
push
and
icebp
jl
roll
iret
add
dec
xor
aad
xorb
and
xchg
xchg
in
popf
lcall
lret
dec
lret
scas
pop
addr16
inc
jne
test
or
sub
mov
sub
mov
adc
cmp
sbb
negl
cltd
outsl
pop
inc
test
xchg
inc
mov
add
or
pop
pop
out
mov
mov
dec
pop
inc
int3
test
xchg
mov
adc
or
lcall
test
fcmovbe
push
nop
push
stos
jne
xor
cmp
mov
push
jp
mov
pop
divl
mov
push
inc
outsb
das
scas
mov
jl
jg
dec
out
mov
outsb
mov
jns
lods
push
jmp
mov
mov
xchg
jecxz
lahf
sub
mov
cs
pop
pop
leave
lret
imul
mov
notl
mov
mov
test
loopne
popf
inc
lret
dec
loop
xor
jo
cmp
in
test
mov
push
xor
ret
out
das
mov
cmp
jno
jecxz
inc
push
push
cwtl
jae
iret
sbb
xchg
jecxz
loop
inc
test
out
xor
cs
in
and
or
xor
mov
jecxz
test
xchg
push
mov
add
fistl
cld
sub
data16
rorb
out
and
hlt
sbb
das
ja
dec
inc
jge
fmull
and
stc
divb
xor
cmp
enter
mov
test
mov
jmp
mov
test
mov
sbb
aad
int
sub
jg
cmpsb
jmp
je
nop
addb
mov
mov
pop
pop
iret
sti
repnz
pop
test
rclb
popf
js
add
out
sbb
sahf
sub
dec
adc
sbb
pop
pop
xor
inc
sub
in
sub
xor
xor
sub
add
cld
sub
cld
ljmp
xchg
sub
cld
loop
xchg
sbb
dec
mov
lods
push
fnstcw
or
pop
addb
rclb
cmpsb
mov
xor
xor
mov
daa
into
inc
xor
cli
sub
fbstp
push
ret
xor
testl
shll
call
je
jnp
pushf
lods
pusha
fisubrl
icebp
pop
icebp
icebp
fsubs
add
cmpsb
adc
jecxz
repnz
jmp
lods
jno
lahf
sbb
fwait
dec
push
ja
sbb
mov
dec
daa
sub
int3
out
rorb
test
clc
dec
lret
push
aas
pusha
or
into
dec
push
dec
ljmp
xor
addr16
test
mov
mov
pop
hlt
repz
sarl
movsl
mov
jg
mov
jmp
or
mov
pop
in
out
lods
xchg
push
repz
lods
jle
test
mov
std
or
lret
jne
lahf
mov
mov
sub
jno
test
stos
pop
inc
dec
test
mov
test
gs
xor
dec
xor
lahf
jl
and
fdivl
rcrb
cmpsl
jne
sub
popa
jmp
sti
incl
dec
out
jo
ljmp
adc
lods
lods
push
inc
mov
aad
fidivrl
js
dec
cmpsb
das
hlt
ret
and
in
imul
mov
pop
ljmp
lods
shlb
addr16
adc
clc
lods
fs
adc
stos
inc
inc
fdivl
push
and
mov
xchg
in
sbb
andb
pushf
or
push
in
sbb
inc
or
lock
jl
inc
mov
xor
sarb
push
loopne
insl
jnp
mov
mov
cmpsl
and
adc
jg
negb
dec
jae
sbb
xchg
in
imul
scas
shll
test
inc
call
nop
and
adc
cmp
nop
xchg
inc
adc
aas
lret
aam
jne
les
pushf
addl
jo
jno
push
cld
ja
mov
sub
inc
nop
and
mov
sub
xchg
mov
mov
xchg
adc
aad
adc
test
mov
daa
out
push
pushl
pushf
popl
stc
xorl
pushf
xor
bt
cmc
xor
call
movl
mov
pusha
lea
jmp
push
xor
pusha
xorl
test
stc
xor
stc
xor
pushf
bt
xor
movl
xor
std
cmp
pushl
popf
push
mov
pushl
ret
call
pusha
push
movl
mov
pusha
movl
pushl
mov
lea
jmp
stc
xor
cmc
xorl
test
xor
pusha
xor
cmc
test
xor
clc
xor
cmp
xor
bt
pushl
popf
movl
pushl
ret
and
ficoml
pop
rcl
xchg
ss
sbb
adc
movsb
jo
test
repnz
add
push
xchg
cmpsl
out
stos
xor
ret
es
in
sbb
cmpsb
fwait
mov
push
scas
stos
out
repnz
adc
mov
loope
movd
and
lea
sub
repz
ljmp
aas
lds
push
fidivrl
jbe
ret
std
mov
mov
dec
shrl
inc
into
pop
sub
xor
sub
sub
lods
dec
mov
incb
popf
pop
fwait
enter
push
inc
mov
sbb
js
push
push
fidivrl
inc
out
popf
out
movsl
std
jl
sarl
adc
sub
dec
cmc
jne
in
je
inc
or
cli
xor
nop
out
adc
mov
lcall
xor
mov
mov
stc
and
and
inc
in
out
mov
test
repnz
pop
push
mov
adcl
jno
jno
inc
add
mov
aas
ret
out
sub
imul
leave
jmp
mov
loop
int3
pusha
mov
divb
ret
in
push
imul
pop
sbb
aad
fildl
imul
mov
mov
divb
pushf
mov
movl
pushf
movb
pushl
movl
movw
movw
movw
lea
jmp
movl
xor
stc
xor
pushf
jmp
push
jmp
call
xor
cmp
clc
xor
pusha
bt
pushl
popf
mov
pushl
ret
xor
aas
int
pop
dec
sub
popa
jg
int
or
xor
fdivrs
ret
lds
popf
mov
sbb
xchg
jp
sbb
shlb
lret
add
cwtl
dec
lock
scas
sarb
or
jne
cmp
mov
popa
jle
and
push
sub
jge
and
cmc
notl
call
mov
sahf
orl
aas
aad
mov
aad
in
popa
jle
and
cli
ds
adc
sub
cmp
mov
sahf
sbb
adc
sbb
sets
out
inc
repz
pop
popa
jle
leave
shr
in
xchg
je
xchg
adc
and
cmp
dec
xlat
pop
pop
test
sub
loopne
cmpl
subl
dec
rcll
mov
inc
rcrb
jo
jle
push
push
jbe
imul
push
jl
dec
cmpsb
test
dec
mov
cwtl
sbb
add
gs
and
sahf
mov
insl
mov
inc
xorb
sbb
jne
jbe
push
mov
mov
loop
jg
outsb
inc
scas
bound
aam
call
cmc
sub
push
iret
int
scas
hlt
subl
and
dec
xor
out
pop
clc
cmove
test
inc
outsb
or
inc
jb
pop
inc
iret
lcall
test
jb
xor
adc
sub
inc
imull
mov
jge
add
cmp
inc
ret
cmpsb
rclb
pop
jl
lods
add
jmp
pop
jae
inc
mov
dec
inc
add
dec
enter
jmp
fs
and
jmp
xor
sbb
pop
mov
ss
jns
lret
sbb
sub
mov
iret
daa
insb
sub
and
pop
movsb
das
outsb
dec
xor
mov
xor
mov
xchg
push
inc
dec
cmp
mov
adc
test
ret
adc
lods
dec
add
mov
dec
sub
lods
mov
out
aad
add
clc
push
test
movsl
out
fadds
dec
mov
jge
push
nop
push
sahf
pushf
lock
push
sbb
and
pop
rolb
les
test
and
idivb
ret
int
xor
push
pop
ret
sub
neg
jecxz
hlt
outsl
or
inc
inc
cmp
adc
jns
andb
sub
ret
mov
cmp
sahf
push
mov
or
lret
fnsave
mov
test
or
aas
pusha
loope
mov
xchg
test
mov
enter
or
mov
mov
mov
sub
xor
in
mov
cltd
mov
mov
jbe
test
test
adc
cmc
das
adc
add
fcoml
stc
xchg
push
cmp
rcrb
dec
orb
cmpsl
rcrb
lretw
out
loop
stos
lret
lods
mov
jmp
mov
gs
imul
xchg
out
pop
fwait
and
mov
xchg
mov
mov
adc
xchg
ja
lods
and
cmpsb
xor
mov
rcrl
call
out
push
into
imul
fcompp
scas
add
movsl
xchg
in
xor
push
je
fwait
jmp
add
out
and
xchg
push
pop
outsb
lock
cmp
mov
arpl
test
das
fnstenv
push
sbb
inc
push
pop
lods
push
insb
cmpsl
test
mov
lock
lret
jp
jle
inc
xor
lods
xacquire
call
pop
xorb
test
jmp
std
adc
cmp
dec
mov
stc
aad
xchg
jae
mov
pushf
mov
jne
pop
mov
mov
inc
push
add
imul
sahf
dec
mov
cs
out
jge
enter
mov
test
aaa
call
orb
cmp
hlt
aas
arpl
test
ljmp
cmp
pop
popl
jbe
adc
popf
mov
cmp
fwait
push
dec
lea
ret
je
push
jb
adc
subl
cmc
mov
cmp
test
or
hlt
and
and
ljmp
jne
gs
scas
adc
jge
adc
stos
pop
in
jns
inc
aad
lock
dec
cmp
mov
int
mov
mov
stos
mov
subb
pop
test
or
cmp
sub
fptan
ljmp
dec
add
dec
jbe
mov
fldt
push
add
xor
lods
sbb
mov
mov
mov
mov
mov
cli
or
stos
sub
xorl
lcall
jmp
loope
sub
in
movsw
das
adc
test
pusha
outsl
xchg
das
pop
out
jmp
cmp
mov
adc
xor
jecxz
jnp
jnp
mov
add
inc
or
push
into
sbb
sub
rorb
call
leave
nop
adc
mov
clc
aaa
scas
jmp
jmp
mov
js
pop
sub
fisttps
clc
dec
pop
das
mov
lret
test
dec
sbb
xchg
sub
cs
jbe
adc
add
fstpl
jb
mov
push
add
and
push
test
test
cmp
sti
mov
mov
repz
add
sbb
cmp
mov
xchg
stos
push
mov
sbb
and
xchg
idivl
mov
cs
inc
sub
data16
ret
add
or
xor
mov
mov
pop
roll
fcompl
and
cmp
xor
xorb
fs
cltd
cmp
adc
inc
inc
xor
push
pusha
jg
ficompl
cmp
outsl
jmp
fnstcw
dec
pop
add
xchg
xor
sub
pop
lret
mov
mov
test
and
push
xchg
mov
xor
fs
insl
adc
dec
lret
in
call
add
mov
inc
mov
add
mov
mov
fstpt
jne
cli
roll
je
scas
lcall
lds
mov
stos
push
insb
xor
push
push
sbb
xchg
pushf
loop
xchg
rol
mov
sbb
cmp
mov
popa
cmp
mov
mov
cmp
pop
sbb
or
pop
xlat
push
popf
push
push
int
adc
hlt
jae
sbbb
jae
adc
lcall
andb
mov
ds
lahf
jae
push
rcr
cld
cmpsl
incb
nop
loop
cld
cmp
mov
aad
or
pop
int3
in
dec
adc
pop
mov
push
mov
shlb
sub
push
push
rcrl
mov
fdivrl
pop
aam
mov
add
jl
ds
insl
push
int3
cwtl
scas
ss
sbb
mov
or
or
fcomi
stc
pushf
dec
flds
sahf
sub
and
scas
arpl
pop
sub
test
xchg
dec
pop
push
out
sbb
fwait
ret
mov
in
into
jecxz
and
xor
ja
xchg
xor
sub
lcall
xlat
testb
cmp
mov
outsl
cmp
dec
sub
test
pop
and
jge
sbb
mov
cmp
xchg
mov
sbb
shrl
jmp
cmp
fildll
jle
dec
loope
xchg
adc
lock
and
ds
rolb
sub
jp
mov
test
pop
pusha
in
aas
aam
mov
jnp
inc
mov
inc
cmp
movsb
arpl
in
push
mov
adc
jge
das
dec
cwtl
pop
cs
stc
and
das
or
stos
ds
out
nop
enter
and
popa
push
xor
adc
rorl
cmp
add
iret
data16
jmp
jmp
pushf
popl
push
xor
clc
xorl
stc
test
xor
mov
xor
stc
xor
pusha
pushf
xor
cmc
xor
cmp
bt
xor
cmp
cld
pushl
popf
pushf
pushl
ret
movl
pusha
mov
pushl
lea
jmp
xor
clc
stc
xor
mov
mov
xor
clc
stc
xor
cmc
pushf
pushl
popf
push
mov
pushl
ret
mov
movl
pushf
pusha
pushf
lea
jb
push
push
movb
lea
jmp
jmp
mov
movl
call
movl
mov
mov
pusha
pushf
lea
jmp
lods
test
data16
adc
movsb
testl
pop
stos
xchg
daa
pop
jns
stc
inc
cmp
jecxz
mov
dec
fbstp
mov
fwait
sarl
test
lods
fsubs
insl
repnz
mov
loope
pop
pop
das
or
sub
frstor
and
sahf
pusha
jecxz
repz
std
stos
cmp
repz
mov
shlb
push
lea
fcmovne
cli
out
sti
loope
jnp
es
movsbl
xlat
jo
add
pop
fisubs
xchg
inc
xor
js
jge
cld
test
cmp
sub
jmp
adc
lcall
cmpsl
scas
scas
mov
mov
dec
testl
lods
aas
pop
ret
scas
sub
or
push
andb
pop
lock
inc
lock
cmp
mov
addr16
mov
test
jnp
dec
mov
and
jp
jo
mov
lret
shll
xchg
push
ljmp
test
stc
lds
scas
push
inc
pushf
movl
call
xor
pushf
clc
xor
stc
jmp
movl
push
call
xor
push
stc
xor
pusha
xorl
jmp
call
pop
add
or
mov
hlt
cmp
adc
inc
pop
daa
push
das
rclb
inc
mov
icebp
xchg
fld
jecxz
xchg
dec
adc
aas
movb
sbb
push
or
and
loopne
mov
sbb
ret
dec
ss
inc
cmpl
int3
inc
mov
mov
cwtl
lods
bswap
jo
cmpl
cs
push
in
mov
nop
xor
sub
jle
ds
idivb
push
subl
mov
or
ret
sarb
sbb
cmc
ss
gs
jb
iret
and
xor
notl
jns
xchg
mov
bswap
add
call
sbb
ret
xor
push
lret
mov
xlat
ficompl
jmp
inc
adc
outsl
mov
and
imul
xor
cmpsl
iret
or
imul
push
testb
fnstsw
xchg
sbb
roll
jle
repz
cmp
and
pop
out
lds
jp
cmp
cmp
mov
mov
mov
rclb
cmpsb
sub
mov
mov
test
test
or
cmp
inc
mov
xor
lcall
and
sub
xchg
and
pop
int
imul
repnz
pop
pop
repnz
ds
addr16
pushf
mov
in
fadds
mov
add
mov
scas
add
mov
rclb
in
push
fmulp
pop
lods
ja
or
mov
sbb
add
xchg
xchg
sbb
sub
pop
xchg
jae
sbb
adc
jl
jbe
push
icebp
jl
dec
lret
push
mov
imul
push
mov
mov
bound
lret
gs
xchg
test
push
clc
pop
out
mov
leave
mov
or
ret
and
popf
pushf
movb
pushl
ret
xor
cmp
push
pushl
popf
movb
pushl
ret
push
movl
pushf
lea
jmp
pushf
movl
jmp
pushf
pushl
pushf
popl
pushl
test
xor
bt
xorl
call
jmp
lret
das
adc
add
clc
mov
cmp
xlat
sub
xor
jge
mov
inc
out
jnp
xlat
aaa
jns
sub
jne
mov
or
inc
int
xchg
pop
sub
dec
jp
insl
push
sti
cmpsb
sub
jae
out
mov
out
mov
pop
out
sbb
pop
dec
inc
or
into
mov
ljmp
jg
stos
or
and
or
or
xor
test
sbb
bound
test
cmp
dec
call
arpl
call
jae
xor
dec
clc
lock
pop
jne
mov
mov
push
cmp
cmp
and
cmp
out
cmp
dec
xchg
out
xor
adc
or
imul
std
jne
aam
inc
sub
dec
dec
or
fwait
push
cmp
sbb
pop
push
jmp
lods
inc
jb
push
lret
stos
pop
inc
into
and
jo
std
arpl
cmp
cwtl
fiadds
adc
mov
or
and
mov
dec
inc
xchg
rcl
mov
arpl
pop
cmp
jg
movsb
mov
xor
pop
mov
cmpsl
scas
jg
movsl
rcl
addr16
mov
scas
fwait
insl
cld
inc
lret
inc
lret
test
pop
mov
xor
jl
cmpsb
out
cmp
cmp
push
js
mov
inc
and
ret
insb
fcomi
push
outsb
in
xchg
fimuls
and
push
aam
mov
adcb
inc
shrl
lcall
push
hlt
repnz
lret
shlb
sub
xor
cld
mov
mov
les
arpl
jb
mov
js
out
movsb
pop
loope
adcl
aad
dec
jo
jns
push
jns
dec
and
ss
jmp
mov
xlat
mov
popa
mov
lret
stos
xchg
fidivs
jno
mov
and
or
divb
scas
daa
jae
call
sbb
xor
push
ljmp
mov
hlt
jecxz
cmpsb
daa
mov
push
mov
lds
or
cltd
jg
xchg
mov
daa
and
push
mov
adc
inc
mov
pop
int
cmpsl
or
clc
jge,pn
in
imul
xor
mov
lahf
fcmovnu
inc
pop
fsts
jae
xchg
adc
repz
xor
xor
insb
jnp
sub
repz
adc
jmp
mov
decl
jmp
jo
sub
jno
ja
mov
push
cltd
mov
jns
sub
xor
xchg
xchg
push
std
pop
cmpsb
rol
push
repz
pop
add
outsl
daa
dec
sub
mov
and
jge
mov
xchg
jbe
adc
into
inc
pushf
pop
mov
cmp
adc
cmp
inc
mov
xor
pop
or
fbstp
loop
les
dec
fwait
addr16
aad
jnp
sbb
fimull
lret
sub
xor
jbe
in
mov
insb
inc
adc
xor
dec
in
in
sub
in
mov
pop
cmp
lret
insb
pusha
mov
jno
xor
stos
push
inc
jp
lods
cmp
or
cs
insl
mov
jmp
mov
dec
xor
lret
xor
dec
inc
jg
in
je
or
inc
ljmp
inc
mov
not
outsl
rclb
int3
jle
dec
sub
fwait
cltd
in
mov
jmp
sarl
push
mov
jb
pop
aad
outsl
cmp
fistpl
divb
or
mov
int3
shl
fwait
out
jecxz
je
pcmpgtb
push
cmp
pop
jp
xor
jnp
mov
push
lret
sbb
or
cmpsb
push
ss
dec
push
push
jo
out
cld
mov
xchg
mov
cmp
xor
jmp
jns
int
cwtl
test
lods
xor
shrl
insl
inc
jnp
push
xorb
mov
adc
and
aas
lods
leave
dec
xorb
xlat
push
push
pop
push
adc
fs
xchg
sbbb
cmp
mov
test
imul
mov
mov
icebp
ljmp
fldl
pop
push
adc
orb
pop
outsl
mov
jmp
ds
ret
rorl
push
into
push
lret
arpl
add
cwtl
mov
mov
imul
pop
jl
pop
insb
jb
test
jmp
or
cmc
lock
pop
xlat
pop
lods
xor
rcr
push
sahf
jae
lods
jp
inc
rorb
fcoml
mov
sahf
ret
add
sti
sahf
and
fs
xor
bound
aaa
test
cmp
imul
mov
loopne
and
out
and
jo
inc
shlb
scas
jae
push
mov
sbb
mov
mov
andb
jp
mov
jbe
rorb
pusha
add
fbld
dec
ret
stos
lret
aaa
outsl
and
mov
daa
jp
outsb
push
movsb
mov
movsl
sub
add
jle
fnstcw
out
xor
mov
push
jp
dec
lret
push
lods
and
xor
push
test
mov
sub
sub
push
mov
iret
rcrb
mov
push
sub
mov
inc
cmp
fcmovu
add
jo
and
aam
push
divb
cld
mov
out
stos
std
push
loopne
pop
rorl
mov
test
negl
jmp
adc
dec
jo
jp
push
movsb
stc
dec
cwtl
in
inc
int3
in
dec
push
adc
ret
xor
outsb
gs
ret
out
in
ss
mov
mov
divb
imul
gs
pop
cmc
ljmp
jo
xchg
sub
jo
push
mov
xor
push
addl
sar
movsl
cmpsb
pop
lock
pop
lock
mov
xchg
das
adc
pop
div
jb
out
repz
enter
inc
out
out
outsl
adc
pop
hlt
mov
dec
add
sbb
cs
adc
xor
inc
lock
in
or
fwait
iret
cli
shlb
insb
repnz
pop
lcall
lahf
xchg
enter
dec
int3
add
cltd
or
aas
adc
clc
icebp
inc
cwtl
sbb
std
test
xor
out
ret
dec
call
sub
adc
pop
xchg
rcr
or
fcmovnb
stos
ljmp
or
xor
pop
cmpsb
inc
xchg
add
mov
push
sub
ret
push
mov
cwtl
inc
vpor
and
adcb
cmc
divb
lret
sahf
in
cmp
cmp
mov
add
and
scas
lret
shl
clc
cs
call
aas
jge
jecxz
dec
xchg
das
adc
pop
fadds
mov
icebp
and
dec
sbb
mov
pop
aas
orl
push
pushf
sub
xchg
adc
lret
pusha
pop
adc
out
inc
mov
mov
ret
mov
sub
pop
mov
jmp
xchg
xor
int3
aad
pop
dec
sbb
pop
jne
les
sbb
in
sub
inc
sar
out
sbb
dec
lods
sub
or
xchg
imul
scas
lret
or
scas
lock
push
push
cltd
adc
ds
faddl
mov
cwtl
xchg
and
adc
idiv
lods
cmp
cs
ss
ret
sti
mov
push
lock
jge
push
cli
mov
roll
and
popw
pusha
add
xchg
cmp
cmp
cmp
sub
scas
rcrl
and
push
lret
mov
xor
jae
movsl
inc
dec
xchg
cmp
push
repz
int3
mov
enter
and
mov
out
fsubp
adc
nop
xchg
fsubl
les
adc
xchg
add
jbe
das
es
sahf
fwait
call
mov
mov
mov
dec
ret
push
mov
add
into
inc
push
push
and
or
cmp
adc
pop
shrl
fldcw
cmp
adc
popa
sub
inc
sarl
sbb
bound
push
shlb
jb
fucom
sub
and
cltd
imul
repz
sahf
std
inc
ret
add
push
arpl
pushl
sbb
mov
outsb
and
jnp
cmp
sar
aam
aas
lods
sbb
enter
xchg
lods
xchg
and
xor
or
pop
add
cmc
scas
xor
pop
inc
sbb
mov
das
mov
js
movsl
pop
jg
out
rorl
addr16
arpl
xchg
enter
dec
push
pop
cmp
fldt
ds
or
pop
js
jno
inc
mov
or
lahf
or
sbb
ret
stos
xchg
and
jbe
movsb
setns
cli
cmp
jmp
jb
xchg
xchg
jg
inc
sub
outsl
xchg
push
push
mov
scas
mov
or
adc
icebp
jns
mov
push
mov
and
pop
push
test
xor
subl
sbb
lcall
scas
jl
sub
fstpl
movsb
iret
jecxz
pushf
clc
js
and
mov
ja
inc
fcompl
cli
pop
inc
xchg
push
adc
add
icebp
movsl
repnz
sarl
jmp
adc
dec
xor
push
lret
adc
jmp
addr16
scas
sub
pop
inc
xor
push
cmp
ja
int
cmp
movsl
adc
je
fdivr
addr16
add
leave
sub
iret
push
pop
cld
fld
stos
sub
pop
push
and
cmp
sbb
fcmovnu
sbb
push
das
jns
sub
nop
sbb
jns
shlb
xchg
test
in
data16
sub
xor
mov
sub
pop
mov
pop
mov
cwtl
out
shlb
sbb
push
setbe
shlb
mov
outsl
adc
lret
ret
cmp
sbb
pop
jb
xchg
xor
pusha
pusha
pushf
popl
test
test
xor
mov
xor
stc
xorl
test
xor
stc
xor
pushf
cmp
xor
pushf
xor
call
pushf
pushf
popl
test
xor
bt
cmc
xor
stc
xor
push
xor
pusha
cmc
xor
pushf
stc
xorl
pushf
pushf
xor
clc
cmp
xor
pushf
pushl
popf
pushl
pushl
ret
call
jmp
pusha
mov
movl
call
movw
movl
pushf
push
pushf
push
lea
jmp
sbb
ss
sbb
and
xchg
xchg
repnz
inc
shrl
cltd
and
push
push
divl
outsb
cmp
je
in
or
in
adc
mov
and
cmp
js
xchg
sub
mov
fiadds
call
mov
or
jns
lea
inc
cmp
cmp
push
xor
gs
adc
imulb
es
push
test
lahf
ret
lret
int
lret
popa
xchg
mov
push
aas
lcall
xor
add
mov
int3
mov
daa
mov
add
push
stos
clc
push
xchg
iret
inc
mov
sbb
mov
jno
cmp
mov
or
jle
xor
psrad
push
jno
mov
mov
push
fisttpll
imul
push
xchg
mov
movsb
divl
jg
scas
stos
testb
icebp
ja
push
movsl
xchg
lds
loopne
mov
xchg
mov
push
cmc
mov
adc
imul
cmpsb
and
inc
jecxz
push
leave
ret
adc
xor
xchg
stos
dec
scas
mov
pop
mov
fsubs
mov
cmp
mov
dec
pop
fistps
aad
cmp
push
add
rcl
push
dec
insl
insb
xor
or
adc
mov
jmp
sbb
cmp
jnp
fisttpl
cmp
mov
lds
test
adc
mov
sbb
pop
mov
arpl
pop
popa
mov
xlat
sub
or
sub
or
ja
js
xchg
dec
cltd
repz
xor
nop
push
mov
inc
adc
cmp
enter
andnps
inc
popa
out
test
ss
or
data16
mov
and
jmp
repnz
mov
aaa
repz
stos
repz
push
push
sarb
adc
xchg
push
addr16
sbb
cmp
xchg
shll
fiadds
sub
scas
push
push
mov
mov
movl
lds
shrb
rol
subb
cmp
inc
cmp
fnstcw
pop
scas
das
mov
inc
insl
xor
outsl
ljmp
or
iret
pop
jno
sbb
sbb
int
jecxz
int
push
fmull
adc
lea
inc
ror
aad
jl
in
scas
aas
mov
out
lahf
xor
out
pop
mov
cmc
shl
shl
test
add
pushf
fwait
into
rcrb
adc
sbb
in
or
xchg
cmp
test
xchg
dec
fwait
inc
dec
xchg
jne
jno
fstl
nop
movsl
sub
sti
mov
xor
mov
dec
out
insl
jp
jecxz
dec
lea
mov
cmp
sub
fmull
pop
pop
jno
xchg
pop
outsb
mov
int
push
stos
dec
push
pmaddwd
imul
jae
pop
lret
idivb
int3
lds
out
aad
push
and
and
pop
adc
das
das
pop
aaa
push
shll
pop
jo
notl
xchg
ja
mov
mov
fsubrl
xlat
dec
sub
dec
incl
cmp
mov
insb
push
stos
sar
and
enter
and
mov
mov
dec
fiaddl
mov
xchg
xchg
cs
ret
decl
js
mov
scas
loop
and
cltd
mov
sub
jl
cltd
add
dec
cmp
xor
pop
push
add
popa
jge
jbe
cmp
outsb
test
fisubs
pop
xchg
adc
sub
test
jns
lcall
lods
and
jecxz
jne
rol
xlat
cltd
pop
or
mov
into
mov
or
mov
bound
fsubrl
push
lret
stos
cmpsl
sub
push
popa
and
rcll
jl
jno
stc
dec
in
push
cmpb
test
push
cmp
dec
int3
ret
fldenv
cmp
out
pop
icebp
test
sbb
pop
arpl
hlt
xchg
pop
lods
xor
add
ret
mov
lods
xor
sarb
leave
out
xlat
lods
addl
push
xchg
jg
je
push
pushf
fldcw
jno
add
movl
dec
xlat
sub
mov
and
cmp
fadds
data16
addr16
ret
je
imul
je
mov
lock
dec
mov
xchg
imulb
pop
in
rclb
outsb
aas
data16
repz
xchg
std
aaa
push
adc
sahf
iret
push
arpl
popf
enter
sbb
aam
sbb
sbb
js
inc
dec
xor
int3
stc
in
inc
ret
iret
int
mov
mov
mov
lret
inc
mov
leave
jno
sbb
adc
fs
faddl
pop
sub
pop
ficoml
jno
cmc
dec
aam
test
clc
mov
xlat
sahf
stos
mov
and
les
sahf
jb
je
cltd
and
movsl
ss
lcall
std
dec
xchg
add
mov
push
stos
and
std
xchg
push
xchg
pop
push
faddp
addr16
hlt
push
rcll
mov
mov
or
sbb
lcall
data16
add
imul
xor
cmp
test
fldenv
cmp
push
xchg
and
pop
fstpl
jge
dec
push
lds
inc
jmp
mov
loope
insb
cmp
out
sub
adc
pop
test
bound
nop
dec
inc
push
pop
cs
ret
and
jns
pushf
daa
push
jae
sub
stc
js
orb
pop
fnstenv
pop
inc
in
dec
sub
in
sub
fnstcw
shrl
in
push
clc
jmp
into
jp
test
jecxz
test
shrl
inc
jbe
mov
mov
mov
xor
cmpsl
sub
pop
je
sbb
lds
mov
cmp
mov
in
lods
rolb
mov
adc
inc
cmovle
xchg
test
fldt
xorb
xchg
imul
jnp
ds
mov
sbb
xor
jmp
dec
fldl
ss
jnp
lock
aaa
ret
mov
shl
stos
daa
sti
leave
sbbb
data16
int3
push
test
xchg
inc
jb
mov
add
push
ljmp
dec
mov
push
ror
push
pushf
and
pop
push
mov
xor
xchg
pusha
mov
fwait
fs
pop
jmp
fwait
and
cmp
mov
cmp
mov
out
lods
daa
out
test
test
fsubrl
and
dec
cwtl
mov
cwtl
add
push
mov
dec
in
jno
add
test
cwtl
jbe
mov
fisttpll
in
les
sbb
jo
ret
inc
xor
loope
pop
adc
cmp
xor
frndint
mov
lcall
stos
das
insb
divb
int
int3
mov
scas
inc
out
repnz
sub
and
cmp
xor
mov
push
ss
or
cmp
and
cmp
push
or
push
lcall
mov
test
dec
enter
outsb
sahf
or
push
loop
lea
test
jns
push
rorb
cmp
adc
incl
jnp
sti
pop
test
xor
push
clc
xor
cld
pushl
popf
mov
movb
pushl
ret
xor
cmp
xor
call
pushl
popf
pushf
pushf
pushl
ret
jmp
xor
test
pushl
popf
pushf
pushl
ret
push
pushf
pushf
popl
cmp
stc
xor
clc
clc
xor
test
xor
bt
xor
jmp
pushf
call
call
sub
mov
dec
xchg
fbstp
test
pop
outsl
cld
xchg
add
jnp
jnp
and
addr16
aad
sub
push
inc
aas
sti
xor
out
cmpsl
mov
inc
cmp
nop
aas
cld
test
sbb
cmp
add
adc
fwait
test
jo
fnstcw
xlat
test
mov
mov
popa
dec
mov
fistpll
fimull
shlb
jg
adc
xlat
movsl
fucom
aam
cltd
push
xchg
xlat
adc
ja
dec
popf
cwtl
mov
divb
cmp
movsb
jae
mov
incl
sub
adc
rorl
das
sbb
sti
idiv
jl
pop
mov
sbb
insl
loope
xor
sub
add
xor
jo
cwtl
lret
or
test
rorb
daa
outsl
loop
out
data16
sar
and
mov
dec
loope
inc
sarb
mov
pop
outsb
push
ficompl
testb
stos
push
adc
outsl
fnsave
lahf
adc
cmpsb
stos
xor
pusha
clc
das
fmull
push
sbb
int3
push
jp
aaa
test
sub
xlat
and
mov
xor
xor
cmpsl
dec
inc
pop
gs
pop
push
lret
outsb
shll
idivb
or
and
push
jge
push
rclb
stos
fdivr
mov
sub
push
xor
mov
repz
out
mov
test
dec
mov
xchg
pop
pop
jns
out
mov
mov
mov
bnd
and
out
clc
loop
scas
repnz
push
push
pop
pop
dec
mov
dec
repz
into
cmp
out
inc
inc
test
pushf
and
mov
mov
pop
xor
jmp
push
xchg
pop
dec
mov
into
jg
fisubrs
mov
xor
jo
xchg
rclb
sbb
or
in
aad
pop
mov
jo
mov
mov
xchg
push
xchg
std
pop
add
pop
imul
push
mov
inc
mov
jb
ret
stos
pop
imul
into
add
test
jecxz
call
push
inc
xchg
repz
jge
push
add
jns
pop
inc
inc
in
adc
mov
loopne
cmpsl
adc
cld
sub
fnstcw
push
cli
sub
dec
icebp
sub
xchg
pop
add
shl
lea
lea
dec
xor
loopne
mov
and
repnz
jbe
mov
xor
adc
nop
stos
mov
dec
mov
push
into
adc
movsb
fnstsw
jb
inc
dec
dec
pusha
cltd
sbb
push
adc
cs
dec
xor
je
jb
insb
fstps
xchg
sbb
in
lret
cmp
out
mov
and
pop
dec
fdiv
xor
jmp
xchg
sbb
nop
mov
cmp
sti
rcll
cwtl
aaa
mov
and
bound
rolb
js
inc
mov
cmp
add
push
cmp
mov
call
hlt
cmp
add
push
insl
push
fldenv
repz
or
mov
cmp
jbe
xchg
sub
dec
pop
and
inc
cmc
jbe
sarb
rcrl
jns
popf
cmp
cltd
mov
lahf
aas
pop
fisubl
jbe
push
test
pop
sub
sbb
cmp
je
in
in
shll
add
pop
mov
inc
test
es
cmp
in
jno,pt
arpl
adc
pop
shrb
add
das
js
and
andb
jp
dec
push
in
adcb
int
es
or
dec
dec
mov
hlt
pop
pop
ja
mov
in
inc
cmp
frstor
or
stos
call
push
pushf
popl
pusha
pusha
xor
cmc
jmp
roll
mov
aas
xchg
out
int3
push
aam
dec
lcall
adc
rcll
icebp
pop
mov
ficoms
mov
ss
in
push
xchg
lret
loope
les
ret
fistl
repnz
mov
test
outsb
scas
dec
sub
push
mov
sbb
cltd
inc
adc
adc
out
push
in
pushf
dec
mov
cmp
inc
cmp
test
push
lds
mov
mov
out
lods
sbb
fmulp
xor
xorl
call
mov
jg
iret
push
mov
push
cld
testb
xchg
jp
mov
int3
out
sub
pop
xor
mov
xchg
mov
push
push
rcll
scas
xor
in
sarb
fists
mov
fldcw
ret
xchg
shlb
add
movsl
clc
repnz
sub
jb
mov
lcall
xchg
jge
inc
data16
fimull
mov
xor
test
add
call
sbb
adc
xor
fnsave
jb
fcomip
adc
ja
rclb
shrd
push
sbb
pushf
add
push
lret
mov
outsl
or
push
adc
xor
xor
std
sub
movsl
daa
stos
push
jle
data16
xchg
stos
cld
push
dec
push
xchg
fnstsw
std
popf
mov
gs
lods
movsb
outsb
movsb
mov
je
fistps
adc
addr16
jno
js
push
aam
movsl
jmp
enter
push
loopne
xchg
inc
cmp
pop
cli
sarb
cmp
es
jno
inc
in
xchg
decl
imul
push
adc
sbb
mov
mov
stos
aaa
arpl
cvtps2pi
addb
notb
loopne
jmp
mov
insb
mov
out
fcmovb
jmp
xchg
fcomps
aas
cmp
pop
xor
test
push
andl
lret
pop
xchg
xor
push
mov
repnz
adc
call
push
sarl
std
inc
negl
jl
sbb
jmp
jmp
mov
jmp
aas
in
rcr
test
sahf
mov
shlb
push
rcrb
ja
mov
mov
imul
sub
scas
fdiv
jmp
or
into
lock
dec
jmp
add
shll
adc
sub
mov
xchg
ja
mov
sbbb
cltd
mov
pop
repz
loope,pt
sub
stos
ss
jns
mov
in
and
mull
aam
hlt
and
add
lods
xlat
pop
jno
pushf
and
inc
fldcw
shlb
es
xchg
dec
push
lret
add
dec
and
jle
pop
insl
sbb
jno
imul
cmp
cmpb
loopne
call
xchg
xchg
pop
shrb
inc
adc
adc
pop
cmc
lahf
ret
movsl
dec
fildll
lahf
cwtl
xlat
dec
arpl
loopne
push
push
and
ds
xchg
mov
mov
loop
xor
addps
cwtl
repz
nop
inc
into
stc
and
xor
into
dec
dec
pushf
andl
mov
frstor
out
rcrb
nop
adc
mov
sub
lds
nop
xchg
mov
mov
adc
cmpsl
insb
xor
shrl
fdiv
cmp
push
loopne
xor
adc
movl
call
xor
pushf
xor
cmc
stc
xor
mov
xorl
test
xor
cmc
xor
test
xor
clc
jmp
push
movl
pushf
movl
push
lea
jmp
cs
jmp
lds
sar
sbb
add
pop
out
pop
sub
ret
int
js
mov
ds
test
scas
inc
in
xchg
outsb
add
xchg
fildl
addr16
push
ds
test
ret
cmp
andb
lcall
test
inc
pop
mov
dec
imul
testl
movsb
sti
mov
xchg
mov
out
dec
add
loopne
sbb
hlt
jle
push
dec
sub
clc
sub
es
xor
pop
test
adc
and
sub
rorl
mov
pop
aas
sahf
in
outsb
in
insb
push
popf
inc
rcll
push
mov
jne
call
add
shl
lods
push
inc
les
cwtl
push
movsb
roll
cbtw
push
and
in
add
mov
sbb
dec
addr16
jnp
xchg
notl
or
add
dec
mov
adc
or
std
popf
mov
lods
pop
dec
outsl
push
mov
fisttpll
cmp
test
pop
clc
jns
dec
xlat
jnp
xor
bswap
data16
mov
jl
enter
movsl
call
pop
inc
enter
inc
fcompl
inc
daa
movsb
sar
or
int3
lock
scas
mov
out
addr16
xlat
imul
lods
xchg
pop
mov
out
outsb
jg
mov
pop
push
cmpsl
iret
pop
xchg
pop
pop
stos
pop
xchg
mov
cmc
in
mov
dec
xor
mov
mov
push
cmp
push
cltd
test
outsb
cmp
cmp
pop
xchg
dec
test
mov
sub
je
jnp
cmp
xchg
and
inc
dec
push
std
bound
test
fstpl
test
jg
sub
out
dec
mov
ret
cmc
mov
pop
bound
das
mov
lea
xchg
test
fbld
pop
push
movsl
and
mov
ficoml
ret
jnp
cli
ret
xchg
push
jle
out
or
or
fcmovne
ret
out
push
jmp
jle
outsb
lcall
jecxz
jl
sbb
jg
cltd
push
mov
or
pop
push
andl
sub
jne
mov
movsl
adc
mov
jge
addr16
inc
mov
push
sbb
fcmovu
sbb
jg
add
pop
cmp
jae
leave
jp
mov
adc
and
inc
enter
push
icebp
repz
mov
addr16
push
idivl
repnz
sbb
pushf
stos
aaa
xlat
push
hlt
les
in
icebp
and
lods
mov
jle
dec
stos
push
lds
mov
popf
inc
push
and
add
add
inc
xor
dec
dec
sub
sarl
icebp
outsl
in
das
mov
jecxz
addr16
mov
push
imul
pop
dec
aaa
mov
pop
in
push
lea
jle
pushf
rorl
add
mov
ret
mov
mov
push
xor
fdivrp
xchg
mov
push
dec
fildl
data16
mov
out
and
dec
mov
or
inc
sbb
push
rclb
pushf
gs
and
aaa
imul
xor
jp
dec
fbld
xor
jmp
mov
jns
jae
xchg
js
dec
cmpsb
fcoml
inc
ret
repz
loope
pop
cs
ret
test
imul
mov
cwtl
push
push
subb
push
cltd
rorb
outsl
adc
dec
xor
bnd
sub
int3
subl
jae
fiadds
add
hlt
mov
pop
in
adc
inc
push
ss
cmp
cmp
mov
pop
pop
mov
imul
mov
bound
testl
push
jo
in
xchg
push
xor
and
enter
lea
adc
mov
add
hlt
inc
rolb
push
insl
sahf
aaa
call
sbb
xor
and
mov
rcrb
cltd
fsubrl
jnp
inc
loop
cmpsb
aaa
fstp
mov
mov
dec
push
jl
aaa
mov
or
jb
mov
stos
dec
jge
add
out
dec
arpl
fsubl
add
or
ret
jne
sub
mov
ljmp
pushf
push
xchg
pop
mov
test
dec
fiadds
sbb
jno
sbb
mov
inc
mov
add
stc
andb
dec
xchg
xor
mov
hlt
inc
mov
push
or
push
sahf
jae
inc
mov
mov
jae
incb
dec
stos
adc
sbb
fwait
out
xor
jb
push
and
sub
mov
push
sub
mov
sub
mov
fmulp
mov
inc
mov
mov
jle
pop
jecxz
mov
repz
cmp
inc
ss
outsb
fstps
dec
jb
mov
scas
ss
or
lods
cmp
pop
sbb
fisttpll
cli
jae
inc
in
ss
push
xorl
xor
mov
dec
cmp
in
sub
push
inc
xor
inc
aaa
push
cmpsb
dec
clc
fstps
lods
mov
outsl
push
and
cwtl
inc
cmp
ss
mov
ret
push
pop
aad
test
cmp
push
pop
xor
movsl
sti
cmc
sub
sti
js
inc
outsl
test
add
fcmove
fisubs
es
xchg
sbb
inc
loope
addr16
sbb
mov
ret
mov
or
jge
enter
sub
push
and
jbe
xchg
mov
mov
or
jg
mov
xchg
sahf
addl
dec
gs
push
cli
jae
shlb
cld
ja
xchg
aam
test
out
clc
xlat
push
repnz
add
repnz
pop
push
jl
out
cld
and
jg
sbbl
ss
inc
push
rorb
and
inc
cmp
inc
and
jecxz
jge
fwait
sbb
adc
adc
stos
imull
in
add
push
inc
xor
push
cmp
arpl
js
test
and
xorb
aad
and
xor
and
arpl
out
in
fisubrs
test
xor
or
ljmp
cmp
mov
adc
and
cmp
int3
xorb
pcmpgtb
fidivl
jge
cli
outsb
imul
adc
pop
jns
bound
adc
jo
push
es
xchg
or
mov
and
or
movsl
dec
and
adcl
fucom
int3
lods
rcrb
imul
sub
dec
ret
outsl
popa
loop
movl
and
mov
push
or
inc
pusha
inc
pop
dec
pop
pop
iret
shrb
in
test
rolb
adc
jno
adc
lret
pop
push
inc
cli
inc
cltd
mov
pop
scas
xchg
cmp
fisttpll
mov
pop
jmp
test
inc
aad
jle
adc
lret
cmp
cmp
push
inc
int3
push
mov
jnp
out
mov
lea
in
push
dec
lds
enter
mov
testb
mov
xor
adc
push
push
fldcw
add
test
mov
lock
shlb
out
adcl
mov
or
es
push
xor
sub
addr16
fcomip
sub
idivb
test
mov
and
out
andb
movsb
mov
pop
mov
ds
repz
cmc
and
push
cmp
into
pusha
mov
mov
into
cwtl
push
lds
push
jne
je
cmp
mov
add
adc
out
or
rorb
aas
mov
imul
inc
cmp
and
nop
test
jl
loopne
cmpsl
or
pop
mov
fs
mov
adc
jb
sub
test
and
leave
cmp
pushf
jne
add
dec
xchg
aad
rcl
xor
out
jg
mov
popf
idivb
cmp
popf
lcall
fst
mov
pop
punpckldq
xchg
mov
daa
jb
mov
or
mov
jl
dec
ret
add
fwait
ss
xchg
add
test
cmc
jle
gs
ret
jne
das
pop
mov
jmp
xchg
cmp
and
rcr
adc
add
enter
push
xor
les
xchg
lds
dec
lods
sub
cmp
mov
insb
leave
scas
enter
idivl
ds
cwtl
lods
pop
bnd
dec
xor
jp
ficompl
call
push
mov
int
scas
fadds
pushf
rcrb
mov
repnz
jb
mov
movsl
adc
mov
out
jge
pop
ljmp
es
cmp
pushf
xor
cmc
clc
xor
pushf
mov
xor
movw
pushl
popf
pushf
pushl
ret
push
call
cmpsl
outsl
add
jae
add
fdecstp
mov
decl
lahf
inc
inc
jo
mov
ljmp
or
sub
scas
pop
lret
and
jno
int3
jns
leave
push
or
pop
imul
outsl
sub
dec
jo
fdecstp
mov
add
jg
push
add
aaa
lds
aaa
or
or
int3
and
aad
cli
test
mov
pop
andb
lret
sar
loopne
xor
and
dec
jo
cmc
and
or
notl
shlb
cmp
cmpsb
popa
out
and
int
mulb
fsts
orl
fsubrs
cs
test
xchg
xrelease
shlb
or
cmp
xchg
cmp
inc
sub
enter
pop
loopne
fs
jle
nop
xor
lea
and
andb
mov
cmpsb
xchg
xor
lret
xchg
cs
push
pop
cmc
push
mov
rcrl
scas
ss
mov
arpl
pop
jns
jnp
push
dec
aas
inc
xor
out
jbe
imul
pop
dec
lcall
pop
jge
fwait
xchg
insl
xor
xchg
insl
cltd
dec
xchg
pop
pusha
div
mov
int3
aaa
stos
mov
test
scas
data16
fisubrl
lret
mov
xor
out
aad
addb
cmc
gs
jmp
stc
and
outsl
ret
push
and
lahf
ljmp
popa
cld
cmp
movsb
xchg
mov
push
jmp
sub
mov
iret
xor
pop
pop
pop
mov
arpl
into
xor
lcall
test
xlat
bnd
insb
sub
sub
int3
call
lock
loop
movsl
xchg
and
jle
lret
stos
mov
add
mov
pop
and
cli
jbe
lcall
adc
mov
outsb
dec
xchg
subb
sahf
dec
stos
jbe
ret
in
inc
xor
cmp
subl
mov
out
push
sbb
cwtl
fwait
mov
xchg
xlat
add
mov
test
mov
mov
xchg
cld
jg
repz
test
push
arpl
das
ja
pop
je
and
aas
lret
push
fcompl
mov
sti
dec
aad
scas
sub
mov
neg
pop
dec
xchg
stos
cmp
out
rolb
in
and
dec
cmp
gs
ljmp
clc
popa
sub
jb
sub
cmc
or
sub
mov
lea
in
in
inc
loope
fmull
loopne
add
lds
dec
dec
mov
mov
loope
lret
jg
lods
mov
ret
icebp
es
rcrb
and
mov
setae
nop
pusha
out
cmp
cmc
mov
and
loop
scas
lcall
add
aad
out
mov
in
or
lds
shll
mov
ret
add
call
mov
mov
je
mov
xlat
xor
das
mov
popf
jns
popf
movsb
movsl
cmpsl
push
xor
mov
pop
dec
cmp
fs
pop
enter
push
repnz
or
movsb
out
sbb
cmp
popa
dec
ss
mov
inc
cmp
sahf
movsl
sub
xlat
xchg
je
stc
cli
jp
cli
xchg
xchg
aaa
jo,pn
shll
test
dec
mov
clc
jl
cmp
popf
add
cmpsb
cltd
out
inc
push
sti
addl
icebp
cltd
inc
mov
and
push
cs
fwait
xor
and
nop
andb
clc
gs
jns
ss
lods
popa
jle
decb
out
pop
push
pushf
lcall
decb
out
cmp
pop
jae
test
jg
ret
nop
das
add
push
aas
mov
xchg
inc
lds
xchg
mov
and
push
mov
cmpsb
mov
push
jmp
stos
and
pop
cltd
mov
scas
nop
popa
adc
push
xchg
pop
mov
or
in
out
jae
pop
jmp
shll
jbe
movsb
lods
dec
imul
mov
sbb
jle
xorb
lret
or
dec
aaa
xor
xchg
imul
js
xlat
add
sbb
and
imul
loop
mov
repz
or
sbb
inc
lds
cmpsb
mov
int
mov
iret
jo
cltd
xchg
ret
popa
scas
sbb
popf
sub
shrl
loopne
sbb
test
jns
mov
add
add
push
je
sub
arpl
lahf
sbb
ss
jge
or
adc
or
xchg
loop
or
xchg
fwait
push
xchg
enter
ret
mov
inc
enter
push
jg
ds
mov
sbb
rcr
ret
std
mov
inc
in
mov
mov
pop
test
sbb
in
sarb
dec
rcll
mov
les
push
xor
pop
xchg
out
add
pop
out
jl
inc
cmp
jg
ja
pop
aam
movsb
dec
add
cld
call
aam
xor
cmc
outsl
sbb
xchg
fwait
or
and
adc
int3
xchg
icebp
lock
das
mov
popa
xchg
fsub
mov
imul
or
mov
pusha
sbb
inc
cmp
dec
stos
outsb
mov
mov
jb
insb
das
pusha
sub
dec
push
inc
add
adc
test
jle
into
adc
or
sbb
imul
aaa
xchg
loope
int
aaa
add
ja
inc
and
sbb
movsl
mov
inc
stc
push
add
es
or
cmpsl
mov
inc
jne
pop
adc
xor
and
repnz
jae
fmuls
outsl
pop
fists
jg
xor
cmc
outsl
add
lds
ss
shll
mov
inc
mov
orl
clc
les
scas
cmp
pop
stos
fst
sbb
out
pop
fcompl
sub
inc
ret
ja
stos
icebp
sub
mov
xchg
iret
in
imul
mov
mov
pop
xor
ds
xchg
and
pop
xor
stc
push
repz
imul
cmp
fistpl
cmp
sbb
mov
xacquire
mov
mov
push
leave
sub
dec
jne
jns
mov
or
dec
ja
jge
lock
and
dec
xor
scas
add
jae
mov
xor
lods
cli
cwtl
jbe
cs
test
mov
repnz
in
jmp
push
mov
pop
cmp
outsl
add
fimuls
push
xchg
inc
addr16
lds
fwait
adc
and
pusha
out
faddl
mov
jb
pop
sbb
mov
mov
jnp
sbb
pop
push
ret
mov
fwait
push
loop
gs
mov
imul
jp,pt
inc
aad
outsb
pusha
push
fcompl
jl
je
cmc
fs
lods
inc
or
loopne
mov
sub
xor
mov
fbstp
call
sub
sbb
mov
add
andb
jmp
int
popa
pop
mov
test
add
enter
fsubl
push
popf
das
pop
loopne
fadd
hlt
push
rcll
movsb
jne
xchg
xor
jno
pop
or
clc
in
sti
push
aad
data16
fldcw
xchg
outsl
dec
pop
icebp
mov
sub
leave
movl
movw
pusha
pushf
pushf
lea
jmp
pushf
jmp
pushf
call
mov
and
cwtl
in
xchg
xchg
dec
in
sarl
decl
sbb
xchg
add
mov
int3
xor
std
ljmp
and
sbb
outsb
ljmp
mov
jno
in
mov
pcmpgtd
pop
push
xchg
mov
outsl
addb
add
out
subb
jae
dec
repnz
aaa
mov
movsl
fdivp
loop
aad
cmpsb
in
adc
iret
leave
sahf
lret
inc
vmovsd
fisubrl
push
pop
cmp
jnp
mov
fwait
push
sub
push
cmp
xchg
sahf
orl
loopne
subl
mov
sbb
add
out
add
ja
pop
jbe
icebp
lcall
mov
test
rorb
shr
fsubrs
das
fs
sbb
sub
clc
sub
loope
sub
loope
sub
xchg
mov
lods
adc
lret
fyl2xp1
xor
sbbb
lods
sub
mov
mov
push
cmp
push
lock
cld
jnp
mov
adc
mov
cmc
loope
mov
mov
jae
fidivrl
ffreep
in
popf
or
mov
jno
jg
sbb
xor
add
mov
and
std
scas
cmp
push
adc
jns
push
movsb
fildll
and
xchg
push
mov
sarb
shrb
stc
clc
movl
dec
shlb
push
aas
cwtl
pop
xchg
aaa
pop
or
cmp
mov
push
test
pop
repnz
leave
add
mov
xor
push
test
hlt
les
jne
sub
jl
ljmp
and
push
mov
arpl
xor
and
es
fwait
xchg
filds
call
mov
sarl
xchg
pushf
adc
stc
mov
fcoml
dec
rcll
jmp
sbb
lret
idivb
clts
dec
pop
mov
xchg
inc
sbb
out
pusha
lods
in
in
mov
jg
shl
hlt
dec
test
mov
push
ds
call
mov
clc
icebp
sbbl
test
outsl
add
xchg
mov
enter
das
inc
cs
lock
pop
sbb
rcr
in
and
sbb
mull
mov
lret
pop
inc
sub
jl
setne
pop
subl
mov
or
rol
fbstp
cli
das
lret
xorl
jno
dec
mov
mov
jg
push
fcomip
bnd
xor
lods
lret
cmp
cmpsb
xchg
and
adc
add
fwait
and
add
sub
mov
mov
idiv
add
pop
in
sub
out
pop
std
push
xor
repz
pop
jp
xchg
ljmp
test
repnz
mov
push
push
sbb
sbb
dec
mov
push
mov
clc
push
pop
andl
cltd
aam
xchg
cmpb
inc
test
add
shlb
or
cli
setne
pop
loop
mov
int
mov
cmp
pop
in
pusha
cmpl
mov
pop
pop
loop
data16
mov
cwtl
test
xor
pop
xlat
mov
pop
push
stos
fs
mov
adc
jo
data16
imul
out
mov
and
xor
fisubs
iret
adc
jne
mov
jae
mov
xlat
jne
jp
cmc
fisttpl
sahf
imulb
push
rcll
dec
cld
clc
cmp
outsl
in
pop
int3
out
mov
mov
cmp
or
dec
or
rcr
not
es
add
ss
mov
sub
cmp
mov
dec
inc
jle
clc
sbb
mov
stos
inc
and
int3
lcall
nop
mov
data16
lods
shlb
cwtl
dec
out
gs
push
ljmp
cmp
shrb
movl
pushf
pushl
pusha
lea
jmp
cmc
xor
test
xor
call
xor
jmp
xor
call
clc
xor
push
xor
cmp
xor
pushl
pushf
xor
bt
pushl
popf
pushf
pushl
ret
jmp
aas
jo
pop
subb
pop
adc
and
push
cmp
jns
ret
jl
nop
xchg
dec
fidivrl
xorb
adc
ja
test
notl
inc
pushf
jns
mov
shrl
cmp
daa
ss
out
sbb
pop
cld
imul
outsl
xor
stos
mov
mov
adc
fs
loope
add
cmp
cmp
js
mov
cmp
sbb
insb
mov
mov
jl
or
std
jne
inc
dec
clc
addr16
push
shll
mov
andl
mov
mov
inc
mov
decl
push
mul
leave
push
dec
movsb
xor
cmp
mov
add
lock
cwtl
push
sti
mov
xchg
sahf
ja
jnp
mov
in
shll
xchg
and
pop
inc
in
jmp
outsb
fprem
mov
dec
roll
in
jbe
pop
pop
imul
das
cltd
fisubl
fbld
cmp
lods
bound
nop
and
rcll
push
mov
sbb
xchg
sub
add
jns
push
jle
dec
in
jns
inc
lods
and
pop
cmp
xchg
jle
push
ds
lret
mov
jb
sub
jl
inc
xlat
add
adc
pmuludq
fisubs
xlat
fistpl
jno
in
gs
ja
notb
add
xchg
inc
xor
jge
cs
gs
sub
cltd
lds
imul
push
popf
and
into
pop
lods
xor
and
inc
sbb
test
cmpb
mov
or
push
outsl
aam
lods
lahf
xchg
adc
jmp
pop
sbb
loope
cmp
mull
jbe
add
xorb
push
sub
aam
movsb
sbb
mov
insb
in
insb
jno
dec
xchg
adc
pushf
mov
sbb
push
sub
es
mov
lea
das
sub
xchg
inc
shlb
aas
sub
pop
in
rcll
inc
addr16
je
dec
test
rolb
xchg
mov
ds
or
push
mov
mov
inc
xor
xor
mov
fildll
sbb
dec
int
repnz
and
in
pop
lds
pop
cmp
fdivrs
jo
popa
test
scas
bound
sub
cs
in
push
cld
test
outsb
enter
lret
mov
mov
test
subb
xor
mov
adc
sub
ret
or
jecxz
sbbl
push
pusha
cmp
jns
fwait
sahf
pop
pop
leave
sub
gs
imul
cmp
lret
ljmp
sub
xchg
jmp
jmp
and
sub
lods
in
xchg
mov
ret
add
and
ror
outsl
xor
pop
arpl
xchg
pop
mov
add
jp
push
les
mov
push
outsl
movsl
jmp
dec
repz
mov
pusha
out
sbb
icebp
movsl
or
mov
and
push
clc
push
std
scas
int3
gs
cmpsl
in
pop
js
add
roll
jne
jns
mov
cld
adc
notb
bound
adc
and
daa
mov
xchg
bound
cs
jbe
test
out
fnstcw
fmuls
push
test
test
mov
sub
aaa
mov
jmp
cmpl
mov
cltd
sub
sub
rcrl
movsb
sbb
test
repnz
outsl
mov
fldl
rcrl
lcall
dec
call
lods
in
bound
sub
jecxz
inc
in
idivb
push
push
mov
pop
loopne
cmpsb
shl
dec
enter
pop
mov
push
test
and
les
pop
jecxz
xor
loope
daa
adc
push
test
idivl
lcall
call
je
and
clc
xchg
out
add
mov
cmpsb
sub
incb
xor
xchg
stc
xor
mov
pop
jbe
dec
lock
cmp
adc
lea
mov
or
mov
mov
pop
sub
daa
mov
popa
cli
add
or
pop
je
or
inc
push
sbb
jnp
repnz
sahf
pop
divl
ss
test
movsl
jl
inc
dec
ret
mov
sbb
pop
leave
pop
jp
pop
andl
mov
insb
push
adc
push
mov
pop
cwtl
jecxz
out
sub
outsb
jnp
mov
push
push
cmp
mov
outsl
dec
les
ret
imul
ja
sub
fcmovnbe
sbb
or
jl
jmp
jge
outsb
dec
lods
leave
inc
sar
lods
jno
in
or
fs
stos
movsb
std
enter
lahf
pop
cwtl
jnp
mov
fdivp
movq
mov
push
or
test
add
sbb
in
leave
push
xlat
pop
test
and
popf
or
mov
call
mov
xchg
xor
cmp
rol
sub
loopne
sbb
fdivrs
dec
or
jne
std
pop
jno
mov
mov
jnp
jb
out
and
test
paddsw
je
loopew
mov
test
adc
int
and
and
lret
sub
cwtl
push
mov
rol
js
xlat
mov
les
jl
aam
mov
sub
adc
sub
xor
or
cs
pop
push
int
pop
jle
cmp
sub
or
pop
aam
pop
add
pop
mov
mov
xchg
lcall
push
out
xchg
jne
stc
or
fld1
pusha
iret
sbb
jo
pop
inc
jmp
test
inc
ss
pushf
and
cmp
fnstenv
mov
and
xlat
out
stc
ffreep
and
aam
movsb
xor
inc
dec
sub
inc
loop
xor
jne
pop
out
ret
jmp
ret
mov
mov
sbb
loope
add
repnz
popa
add
sbb
pop
cmp
xor
and
jno
add
mov
js
jne
int3
and
sub
push
cmc
sahf
cmp
mov
in
out
mov
sti
or
push
cmp
jmp
dec
jno
jb
sub
fistl
mov
or
movsb
icebp
xchg
mov
pop
into
lea
add
clc
loopne
cld
adc
cld
dec
xchg
and
or
js
dec
fidivrs
ss
mov
mov
and
mov
pop
add
dec
inc
int3
sbb
xor
mov
lcall
inc
mov
loop
dec
stos
jg
inc
xchg
outsb
push
or
fsubl
xor
and
aam
mov
arpl
pop
or
out
cmp
mov
mov
ja
sbb
push
pop
in
repnz
iret
adc
pop
fcomip
mov
cmp
mov
ss
repz
les
mov
loope
lods
xor
mov
jnp
sbb
xchg
mov
arpl
aam
lcall
push
fwait
sarl
cli
jae
inc
imul
fs
in
push
jns
scas
pop
or
insl
cmp
adc
sar
icebp
mov
jnp
and
data16
scas
mov
push
idivb
daa
jp
decb
xor
sub
mov
into
gs
in
jmp
mov
xchg
aad
fcoms
sbb
aaa
and
adc
aas
outsl
push
pop
mov
xchg
xor
adcb
mov
lret
popf
insl
out
idivb
nop
jb
mov
pushf
popl
cmp
xor
pusha
call
out
sub
xorb
fistpl
push
fs
mov
scas
pop
or
icebp
inc
dec
sarl
pop
scas
or
xor
push
fcomps
cltd
inc
repz
loopne
lods
pop
or
xor
ds
pop
scas
inc
xchg
ljmp
loop
mov
fs
sbb
lahf
in
pop
or
push
cli
movsb
shufps
push
cld
repnz
andb
ljmp
cmp
mov
mov
dec
jg
pop
bound
xor
icebp
inc
sub
mov
into
je
sahf
mov
jnp
test
hlt
daa
sbb
cli
out
sbb
adc
jno
test
dec
into
dec
ret
xchg
pop
lcall
cmp
arpl
mov
rcll
mov
push
icebp
lea
jle
movsl
das
adc
lods
sub
inc
jnp
cwtl
jle
pop
jbe
mov
or
das
lret
popa
test
or
ss
jns
data16
jle
and
lods
mov
and
push
subl
lock
add
testl
inc
out
clc
daa
pop
mov
sub
nop
cmp
out
sbb
mov
cmp
sub
in
mov
fs
jp
insb
stc
inc
loop
xor
faddl
mov
shll
stc
mov
je
mov
jecxz
loope
clc
sub
xchg
and
mov
test
dec
fnstsw
adc
aad
les
lret
adc
rclb
ds
jnp
lods
sbb
and
daa
into
cmp
data16
fnsave
push
leave
pop
dec
lea
cli
out
fldl
or
leave
xor
inc
xor
mov
inc
fmuls
and
xchg
pop
jno
lcall
add
cmp
sub
lret
cmpsl
jmp
mov
test
fnsave
dec
add
xchg
dec
iret
push
push
mov
inc
movsl
and
xchg
pop
mov
jo
repnz
jo
lds
xchg
mov
jle
loope
jne
mov
imul
pop
cltd
js
insl
jae
test
in
in
and
or
ds
cmp
mov
cs
in
pop
jmp
xor
pop
insl
jae
cltd
inc
int
push
mov
mov
repnz
inc
mov
shlb
es
lods
lds
bound
repnz
test
cwtl
mov
mov
nop
jo
and
clc
clc
push
outsb
insl
or
cltd
xor
push
and
sbb
cmpl
inc
lret
lcall
repnz
inc
scas
xchg
fs
cmp
adc
or
xor
daa
xchg
andb
pop
push
dec
loop
and
xchg
mov
loopne
mov
push
add
fcmove
xor
push
mov
dec
ds
inc
loopne
sbb
insb
mov
cmp
adc
insl
lahf
sub
inc
dec
ds
dec
cmp
call
cli
ret
mov
incb
mov
cs
and
cmpsl
in
adcl
push
aad
add
pop
inc
lret
add
shrl
out
add
scas
movsl
xor
jg
inc
shlb
sbb
xor
add
xchg
pop
clc
pusha
adc
negl
scas
int
jmp
dec
gs
mov
and
lods
sub
lcall
inc
jno
inc
sbb
mov
add
bound
int3
mov
dec
popf
adc
sub
mov
xchg
es
in
hlt
inc
scas
scas
les
or
jge
inc
xor
inc
stos
mov
enter
dec
std
lods
mov
mov
fsubrs
orl
mov
jbe
xor
mov
dec
sub
inc
inc
ret
dec
int
push
stos
xor
or
fcoml
xor
push
fsubrl
shll
mov
dec
sti
scas
movsb
adc
decb
lret
sub
mov
xchg
mov
lods
mov
xchg
ljmp
in
into
mov
xor
int3
gs
xor
xor
in
mov
xchg
cwtl
cmpsb
pusha
out
cli
dec
inc
add
adc
lret
repnz
pop
imul
ffree
insb
jo
test
adc
testl
movsl
movsl
xor
insl
mov
cmp
pop
add
scas
push
pop
jb
jg
ljmp
xor
mov
rcrb
scas
jle
jns
inc
add
mov
aas
push
fadds
call
push
fiaddl
push
adc
pop
add
fwait
mov
addr16
pop
fsubp
xor
mov
adc
and
imul
mov
aas
adc
das
pushf
mov
xor
xchg
pop
cmp
out
pop
je
fcompl
clc
mov
fstpl
jnp
dec
adc
or
push
clc
mov
sbb
jecxz
inc
sub
or
mov
mov
push
jge
push
sub
fistl
or
push
cmp
mov
inc
fs
fsub
pop
or
dec
add
ja
daa
stos
js
repnz
insb
push
mov
xor
lock
iret
fisttps
shrl
pop
int3
fiadds
insb
in
iret
jnp
clc
mov
lahf
push
nop
aam
add
test
or
or
aaa
push
dec
dec
aad
sbb
and
cmc
mov
cltd
sar
add
sahf
mov
inc
cmc
jg
imul
inc
pop
dec
xchg
mov
sahf
cmpsl
and
mov
jnp
push
in
lods
xor
enter
mov
shrl
pusha
ss
cmp
mov
jae
negl
into
jmp
push
clc
mov
andl
ret
ret
inc
add
arpl
cmp
sysret
mov
sbb
inc
dec
dec
scas
cwtl
xor
cmpsb
lret
mov
pop
jb
es
aas
sbb
jle
jae
push
int3
jne
lcall
xorl
frstor
pop
jl
or
adc
xor
adc
nop
xlat
jb
sub
mov
push
and
mov
or
aas
sbb
mov
nop
add
xchg
cmp
push
ret
fstpt
sbb
sahf
hlt
repz
dec
and
popa
into
and
mov
jg
sbb
dec
stc
mov
loopne
lods
xlat
cltd
cwtl
scas
sbb
and
mov
jbe
icebp
mov
hlt
dec
dec
jle
addr16
fisttpl
push
adc
dec
enter
jge
ja
in
xchg
mov
and
lcall
jp
loope
into
test
add
lods
ds
mov
adc
stos
pop
or
xor
orl
pop
sub
push
movl
int
mov
xor
and
ret
add
jno
mov
stc
cltd
push
pop
inc
cs
dec
add
pop
cmpsb
out
pop
je
in
jl
fiaddl
int3
and
scas
aas
mov
in
sarb
mov
inc
aad
lds
pop
clc
loop
addr16
loopne
bt
ret
imul
das
push
cmp
in
aad
jno
out
dec
jne
bound
push
lcall
andps
divb
testb
lret
cmp
ss
sub
inc
sbb
or
insb
iret
int
add
sbb
nop
mov
insb
mov
test
xlat
xor
fstl
scas
loopne
fstpl
shlb
xchg
fs
loope
out
std
out
insb
fucomi
mov
aas
stos
jecxz
mov
fiadds
mov
imul
addr16
xchg
fwait
repz
pop
xchg
jge
iret
dec
in
stos
push
and
and
push
adc
cmp
in
ret
jo
lret
lds
dec
je
or
mov
xor
aam
arpl
cli
xchg
cbtw
idivb
mov
ror
sub
mov
push
pop
ud0
stos
and
lods
out
out
dec
add
push
jmp
jp
cld
outsl
add
ret
out
int
pop
scas
jge
arpl
mov
or
call
lahf
and
xchg
cmp
dec
adc
push
rolb
jle
pop
adc
out
pop
notl
dec
cld
test
jmp
push
sti
mov
sbb
or
test
fidivs
sub
adc
push
push
test
push
jmp
dec
add
sbb
cmpsl
mov
lcall
test
xlat
popa
repz
shl
jmp
xor
pop
xor
xlat
push
mov
jne
sbb
jmp
push
jmp
adc
enter
and
mov
mov
test
push
ja
aam
dec
add
and
ljmp
add
jne
or
cli
jbe
xor
mov
jecxz
stos
pop
dec
pop
push
lret
jae
aaa
inc
out
fcmovu
sub
outsl
jo
jbe
mov
pop
pop
test
sbb
push
pop
push
test
jmp
mov
lock
inc
mov
or
sub
cmp
inc
fadd
xchg
push
cmp
sub
rorl
inc
xchg
out
and
movsl
jae
je
cmp
push
pushf
sub
mov
or
out
jnp
outsl
jo
jbe
mov
fcompl
cmp
pushf
cmp
jge
dec
sub
jle
and
data16
and
mov
mov
mulb
sbb
xor
jmp
dec
mov
scas
stc
add
jae
xor
add
push
rclb
or
or
jmp
push
add
dec
cld
outsb
pop
mov
mov
xor
or
mov
mov
and
ja
outsl
enter
insb
daa
mov
pop
pushf
pop
mov
icebp
jle
addl
inc
sub
mov
sbb
mov
and
sbb
pushf
int
xor
loope
sub
lahf
jecxz
dec
sarb
cmp
in
ljmp
and
rcrb
sbb
jne
mov
and
cmp
mov
test
xchg
mov
mov
add
jecxz
pop
test
sub
sub
dec
les
das
add
fisubl
mov
adc
mov
out
dec
fwait
jl
lret
mov
ret
mov
lods
adc
add
out
pop
inc
enter
rcl
or
loope
pusha
sub
and
cmp
cmp
cmpsb
adc
fdivr
js
cmp
xor
jo
xchg
fcomi
aad
movsl
insb
call
fidivrs
insb
push
mov
mov
negl
popf
pop
arpl
push
xor
insb
dec
add
xchg
mov
js
out
imul
mov
popf
and
orb
pop
and
in
fisttpl
push
or
cmc
mov
xlat
cltd
xor
push
adc
mov
ret
mov
daa
push
jo
dec
adcb
pop
jmp
mov
hlt
xchg
inc
leave
mov
inc
popa
lea
mov
adc
push
int3
loop
pop
data16
int
das
push
sbb
pop
ss
mov
ret
mov
mov
ds
or
cmpsb
fimuls
adc
push
int
div
jp
mov
sbb
les
add
sub
jle
out
mov
cmpsb
pop
test
imul
mov
jmp
xchg
movsl
cmpsb
xchg
push
fisttpll
movsb
sub
or
aad
das
stos
inc
lds
movsl
daa
leave
xchg
jge
inc
ret
movsb
insl
jmp
mov
mov
mov
cmpsl
pop
cmp
fs
cmp
sub
jg
cmp
mov
cmpsb
cltd
orb
or
insb
out
insb
lcall
in
insl
mov
insl
mov
mov
mov
adc
ds
in
jns
cmp
mov
mov
and
int
sti
hlt
cmp
xor
pop
movsb
xor
test
or
adc
loopne
clc
mov
ss
or
pop
mov
xor
add
mov
icebp
imul
push
fsubs
push
xchg
daa
dec
sbb
lcall
mov
out
mov
and
filds
enter
push
lock
lods
pop
fisttpll
jle
lds
cwtl
and
sub
dec
xor
jmp
lds
gs
inc
fs
sbb
pusha
fcmovu
sub
repz
sbbl
jo
movsb
or
cmp
sbb
push
mov
es
scas
sub
filds
in
cld
jl
dec
fs
jl
add
jp
das
xchg
testb
in
sub
bnd
dec
or
out
loopne
and
std
xor
mov
adc
lret
mov
pop
dec
test
and
pop
push
push
fstpt
push
aad
mov
cltd
or
fsub
lds
icebp
inc
prefetch
ret
sbb
fs
nop
fcoml
and
aas
mov
dec
leave
adc
cmp
test
les
inc
cmc
and
clc
inc
sub
std
fmuls
clc
nop
jmp
std
adc
clc
pop
mov
fidivrs
xor
pop
jmp
leave
out
sub
xor
push
adcl
nop
int
dec
mov
sarl
adc
nop
fisttpll
xchg
adc
xlat
in
pushf
add
push
call
inc
in
sub
inc
mov
daa
inc
jge
aas
rorb
fiaddl
loope
inc
or
inc
push
js
cwtl
lea
out
push
loope
inc
clc
mov
and
mov
dec
rorl
mov
xchg
cwtl
popf
cmp
ja
pop
in
cmp
sub
divb
push
fdivrs
stos
clc
inc
mov
stos
mov
pop
movsl
adc
mov
mov
addr16
lods
push
mov
adc
adc
mov
xor
inc
subl
shrl
aaa
add
add
or
or
imul
or
decb
in
int
pop
fdiv
pop
mov
inc
dec
repnz
fdivl
sbb
inc
mov
mov
xchg
rcpps
aad
in
add
jnp
mov
lods
in
inc
add
enter
xor
enter
xor
popf
and
cmp
push
xlat
loope
inc
mov
cltd
xchg
arpl
mov
mov
lods
and
cmp
xchg
add
jmp
pop
ljmp
pop
and
cwtl
dec
lock
jne
roll
push
mov
add
mov
cmp
sbb
cmp
mov
rcrl
and
std
test
int3
fisubs
mov
xchg
inc
in
pop
pop
lret
or
fstl
push
insl
fldcw
adc
xchg
dec
pop
cmc
and
stos
test
sbb
stc
adc
xor
repnz
adc
cmp
cmc
mov
pop
xchg
outsl
add
pop
jmp
push
pop
mov
fucomi
std
push
mov
sub
xor
push
stc
mov
pushl
push
js
adc
dec
gs
sub
shll
jle
lds
lds
loop
and
rolb
ja
call
push
sub
aas
inc
jmp
sub
leave
adc
mov
dec
mov
cmpxchg
enter
mov
js
sub
pop
cmp
arpl
push
pushl
push
rcrb
fs
xor
adc
mov
fdivl
bound
sti
inc
xor
rclb
push
cmp
fs
imul
xor
mov
jge
xor
pop
loopne
movsl
mov
jno
fists
xchg
inc
mov
cli
mov
jge
inc
lock
sbb
push
cld
adc
das
clc
xchg
inc
addl
out
aaa
insb
insl
cmp
add
nop
mov
adc
jmp
sub
push
mov
jg
mov
in
push
mov
nop
add
shrl
fdivr
ja
lds
add
js
mov
jl
int
dec
mov
sub
movsl
cmp
stos
cmp
in
icebp
inc
out
xlat
inc
ficomps
sbb
lds
outsl
adc
sub
inc
jb
cmp
daa
fdivr
pushf
ror
loopne
bound
adc
sbb
push
xchg
mov
pop
pop
inc
and
mov
insb
fsubrl
or
xchg
inc
sub
pop
lods
sbbb
xor
inc
or
sbb
mov
cltd
jge
xor
mov
rorl
cmc
add
nop
push
xchg
jl
ficoml
stos
into
out
push
cmc
movsb
out
inc
mov
in
xor
push
test
inc
sarb
subl
es
imul
arpl
pushf
loopne
sar
jmp
mov
mov
add
cmc
sahf
cs
add
pop
rcl
or
cmp
lock
sti
out
clc
cli
scas
mov
fucomip
adc
inc
insl
xor
aam
loopne
cmpsb
and
leave
cli
in
lret
mov
loopne
mov
push
add
shlb
or
mov
sbb
push
iret
or
ret
out
push
in
or
xor
mov
fistpl
stc
dec
push
in
scas
sbb
jno
aas
sahf
jnp
adc
es
movsb
xchg
movsl
xchg
enter
jns
mov
inc
sarb
cld
ffreep
xchg
mov
push
adc
mov
add
mov
lahf
test
or
pop
mul
inc
fs
testl
mov
leave
dec
fildl
sub
rsqrtps
rclb
inc
xor
mov
aaa
mov
std
das
and
jns,pt
aad
jne
adc
ss
inc
scas
push
fistpll
push
fisttpll
mov
sbb
out
scas
mov
and
mov
mov
out
jp
test
cmpb
ds
stos
test
jbe
push
xchg
mov
test
xor
sbb
mov
stos
cmpsl
add
out
or
lret
stc
out
stc
fbld
cli
test
pop
mov
sub
out
aaa
add
test
ret
pop
pop
scas
sub
dec
xchg
test
pop
es
cwtl
pop
cmp
pop
in
bound
mov
xchg
dec
mov
movb
stos
rolb
clc
rcl
mov
fbstp
pop
orb
pop
inc
fsubrl
cmpsl
jae
push
aad
pop
dec
bnd
mov
xchg
xor
mov
inc
jmp
ret
mov
or
jmp
and
fadds
in
or
dec
fbstp
cmpsb
or
add
cld
lods
inc
icebp
cmp
dec
push
lret
pop
outsl
ret
xchg
inc
mov
idivb
mov
push
test
cvtps2pd
mov
mov
cld
and
orb
cwtl
push
ja
cmp
pusha
jmp
cli
ja
mov
test
mov
pop
ljmp
shll
inc
mov
jecxz
sahf
push
sahf
and
arpl
shrb
xchg
out
dec
push
cmp
cmp
insb
stc
push
inc
push
push
ja
hlt
mov
add
in
jge
jo
and
outsl
push
shll
jmp
add
lret
mov
stc
jne
or
or
push
ja
lods
rorb
cmc
xor
adc
cmp
stos
stos
mov
sub
cmp
pop
xchg
adcb
or
cmp
pop
lock
push
jl
mov
mov
push
cmp
mov
mov
mov
outsl
dec
out
mov
jecxz
shl
push
out
dec
or
out
jle
lahf
pop
pop
xor
jp
push
fwait
adcl
push
scas
enter
pause
dec
mov
outsb
cld
data16
fdivs
mov
jo
ds
jle
and
inc
xchg
loop
lods
aas
mov
and
pop
filds
clc
fs
add
dec
fildl
int3
push
cmpsb
divb
roll
xorb
jmp
xchg
inc
and
mov
mov
mov
ret
inc
addl
push
inc
jp
scas
jns
addb
scas
cmpsl
movsb
movsl
and
xor
cmp
es
jge
fistl
je
cmp
sub
xchg
ret
aas
ret
pushf
call
mov
xchg
mov
push
lcall
mov
test
test
add
hlt
pop
loopne
out
sahf
or
mov
jne
jg
or
or
jp
mov
je
orl
in
bound
sub
pop
sbb
jmp
dec
xchg
and
push
cmp
xor
lret
mov
nop
pop
stos
mov
pusha
push
fimuls
in
ss
incl
push
enter
cld
mov
dec
sub
inc
into
dec
les
daa
sub
lcall
add
mov
imulb
iret
loop
pop
fnstsw
inc
stos
sub
data16
fs
mov
inc
sbb
gs
daa
rcr
mov
rolb
mov
repz
dec
sbb
loopne
movsb
pusha
adc
add
test
stc
adc
cmp
jne
dec
out
xchg
jae
fnstcw
xchg
vmwrite
mov
sbb
inc
jl
and
fisttpll
xchg
stc
jp
add
push
sahf
push
mov
jno
std
ret
sbb
iret
ja
xchg
jo
shrb
bnd
pop
nop
jg
lock
xor
fmull
add
in
aad
inc
fwait
sub
or
or
mov
lds
fwait
jns
adc
or
imul
pop
xchg
pusha
xchg
insb
pushf
lock
imul
and
je
mov
adc
repz
adc
pusha
push
dec
cmpsb
push
test
repnz
push
jo
pop
dec
inc
aad
ret
cmp
test
adc
mov
daa
outsb
cmpsl
xor
popf
xchg
adc
scas
jge
jnp
loope
or
les
adc
jmp
inc
xchg
rcll
pusha
divb
inc
and
adc
inc
les
dec
inc
je
mov
inc
shr
add
push
cmp
rorb
addr16
pop
mov
popa
push
mov
mov
cmc
pop
jmp
jecxz
xor
iret
int
je
cs
out
cmp
orb
add
aas
inc
mov
jecxz
popa
outsb
jne
out
xchg
cmc
hlt
and
mov
mov
pop
fisubl
mov
push
std
jle
jmp
in
and
mov
add
lds
jnp
pop
or
jb
xchg
sub
sahf
or
ds
sbb
xor
cs
inc
insl
fwait
enter
mov
stc
mov
mov
outsb
scas
popf
adc
fadds
mov
mov
mov
ret
jmp
inc
jl
pop
cmpb
mov
inc
pop
inc
cmpb
mov
loope
scas
fildl
mov
in
movsl
cmp
cmp
cmpsb
xchg
lret
dec
pop
fwait
push
xor
mov
dec
xlat
mov
cmp
jbe
adc
and
jg
xchg
sbb
popa
lret
sub
jl
add
fcmovb
repnz
xchg
or
or
pop
in
fisttpl
xor
in
in
pop
adc
fimull
mov
das
pushl
shll
pop
mov
mov
jl
sub
or
mov
pop
push
loopne
and
es
xchg
mov
into
leave
ljmp
out
dec
adc
rclb
jae
inc
daa
cmpsb
xor
push
aad
or
jmp
jl
sahf
and
test
inc
jnp
push
cli
jmp
push
rorl
and
ja
enter
imul
and
ds
jge
push
xor
and
sbb
hlt
xlat
add
pop
push
lea
es
mov
js
subl
cwtl
adc
test
das
lods
icebp
cmp
test
gs
test
mov
loope
gs
std
xchg
mov
ss
mov
movsl
xor
pop
adc
rcrb
sbbl
loopne
std
enter
dec
dec
dec
or
ret
clc
or
add
jl
sti
stc
shlb
lret
into
xchg
pop
xchg
shlb
jmp
insb
std
scas
mov
jnp
in
lret
xor
sub
jnp
jnp
sbb
cmp
cmc
pushf
mov
insl
mov
fistpl
add
sti
in
pop
mov
mov
push
xchg
add
scas
jne
push
xchg
pop
cltd
add
loopne
cmpsb
or
rep
out
mov
test
out
ret
jae
dec
hlt
mov
fsubr
and
gs
sbb
push
cmp
repnz
jle
mov
imul
fs
aad
imul
add
pushf
jbe
mov
lret
int3
stos
stos
and
sub
fs
lea
push
aas
movsl
ret
or
jno
dec
jle
dec
aam
mov
add
mov
xchg
dec
mov
mov
daa
and
out
adc
js
mov
adc
sbb
add
mov
xchg
loop
ss
mov
xchg
cld
mov
jl
push
jno
sub
mov
mov
mov
ret
lock
inc
inc
dec
add
lcall
clc
pop
insb
cmc
jge
pop
out
stos
sarl
lods
dec
das
shlb
cs
into
push
add
push
add
aad
xchg
popf
inc
stc
stos
les
in
push
inc
outsl
mov
js
sbb
fistps
int
jno
popf
mov
les
push
js
fwait
les
jo
loope
gs
cmp
jp
int3
fisttps
inc
xor
adc
xchg
sbb
xor
sub
adc
jne
pop
jle
in
jmp
or
sbb
sbb
push
xchg
stc
loope
mov
inc
aam
push
xchg
pop
insb
adc
mov
aad
je
ja
cmp
je
loopne,pt
lods
dec
jbe
mov
add
in
icebp
sub
and
les
mov
mov
add
mov
inc
mov
push
push
test
in
or
xchg
push
push
test
das
sub
mov
add
out
jbe
adc
cld
sub
mov
scas
imul
add
movsb
or
adc
das
inc
xchg
das
and
testl
cld
sub
cli
xchg
add
cmp
add
jecxz
push
mov
lock
iret
mov
lds
test
addr16
mov
or
clc
ja
ss
adc
sub
int
xlat
lcall
jmp
rcl
mov
mov
cld
sub
or
push
sbb
in
ret
mov
in
in
xchg
repz
test
cmc
ret
mov
idivb
icebp
inc
mov
jecxz
xchg
out
mov
sub
dec
ret
sbb
and
stos
inc
mov
and
adc
enter
into
inc
shlb
ret
jns
lods
pushf
es
push
mov
jg
jbe
insl
dec
lret
insl
sahf
repz
cli
dec
inc
je
aam
xchg
lret
repz
enter
push
loopne
sub
xchg
or
mov
je
into
idivl
out
mov
mov
mov
loop
pop
ljmp
ss
scas
sbb
lcall
std
aas
sti
in
adc
push
rcrl
mov
push
dec
cmp
xchg
push
and
aas
ficomps
insb
mov
jge
ljmp
mov
mov
jns
sbb
icebp
outsl
pop
xchg
rolb
sbb
inc
xchg
mov
sbb
cmpsb
fimuls
dec
dec
dec
mov
add
jbe
popa
inc
mov
xchg
or
sub
xlat
stc
pop
adc
mov
sbb
stc
push
imul
lock
or
jns
sub
loope
dec
xchg
lods
jno
popa
mov
xor
mov
mov
cmpsb
sub
test
cld
lods
int3
jno
mov
jo
cmp
test
fcmovu
sub
fstps
sbb
xchg
xor
jmp
and
fldenv
lcall
push
xchg
pop
test
loope
mov
pop
insl
lods
test
xchg
pop
pop
shll
mov
pop
xchg
push
filds
icebp
fcoms
cmpl
int3
fwait
sbb
pop
loopne
mov
jle
jle
test
dec
scas
icebp
fst
sbbb
leave
addr16
inc
jp
xchg
jo
shrb
cmp
stos
and
hlt
insl
lods
xor
clc
js
call
cmpsl
add
dec
lods
stc
cmpsl
jo
mov
jno
add
stos
cmp
daa
adc
jno
adc
ret
mov
sub
sahf
mov
xor
xchg
pop
stos
xchg
orb
inc
jo
out
jo
cmp
cltd
xchg
add
mov
in
gs
shrl
cmp
mulb
jbe
push
icebp
fcompl
lret
and
sbb
pop
std
jo
inc
stc
call
aad
lea
lods
shlb
mov
inc
cmc
fcompl
pop
mov
in
fcompl
rol
inc
mov
cmpsl
aam
push
sti
rcr
orb
ljmp
hlt
test
pusha
imul
iret
fsubrl
xchg
das
cwtl
cli
leave
ret
sub
int
pop
xchg
cmp
scas
dec
int
outsl
xchg
frstpm(287
mov
mov
inc
mov
push
iret
push
lcall
ljmp
and
ret
test
pop
sub
mov
fmul
push
stos
and
cmpsl
call
std
mov
mov
lds
push
and
test
mov
jg
jp
push
call
into
les
leave
popa
sub
sub
dec
cmpsl
cli
test
cmc
sbb
dec
jo
insl
jmp
ljmp
jne
cld
scas
mov
fsts
mov
mov
mov
fmuls
sar
cld
xor
or
aam
sbbb
into
fwait
imul
adc
xchg
push
push
jmp
pushf
pusha
movl
pushl
jmp
call
cli
repnz
push
sbb
cmp
sbb
rorb
lcall
icebp
add
mov
es
push
and
add
movsl
sub
clc
push
inc
jb
loop
rcll
dec
fldenv
leave
imul
ds
and
pop
fnsave
mov
idivl
fstps
ret
adc
jl
push
cmp
pop
call
pop
cmc
lret
and
pop
mov
dec
push
ds
jo
ret
stos
sub
into
je,pt
mov
or
mov
movsb
sbb
push
js
sub
push
jl
js
xchg
push
inc
es
scas
das
mov
jp
repnz
shll
std
or
and
sbb
mov
mov
adcl
repz
cmc
fs
jmp
test
lock
and
outsl
rcrl
mov
rcrl
jl
or
pop
fucomip
cmp
push
mov
lock
mov
pmuludq
mov
iret
mov
pop
in
mov
mov
je
cs
mov
sbb
andb
fs
fsubrl
fidivl
cmp
out
or
in
out
jle
ljmp
push
test
movsb
rclb
xchg
test
imul
inc
inc
lock
subb
cwtl
pop
push
cs
jnp
test
outsl
mov
xchg
jo
mov
or
lcall
cmpsb
scas
add
jo
fs
pop
fcomi
add
into
dec
js
lods
add
sbb
push
mov
shl
test
iret
stc
xor
lods
bound
push
jne
lcall
jns
or
aaa
mov
inc
loopne
popf
sub
mov
es
js
pop
out
shrl
sbb
lods
lret
or
pusha
ljmp
fs
add
xchg
pusha
add
pushf
enter
out
jl
je
imul
test
mov
adc
jbe
test
aam
imul
into
movsl
das
idivb
out
xor
das
and
adc
lods
push
lcall
test
inc
xchg
sub
movsl
dec
ja
sub
sub
dec
stc
push
jmp
sbb
jl
stos
jle
jae
or
push
in
and
lahf
cmp
pop
bound
xor
ds
lods
push
fldt
in
mov
pop
aam
add
cwtl
cmpsb
pop
stos
inc
mov
lcall
test
repnz
insb
jmp
mov
jno
out
pop
xor
out
xchg
jge
jg
shll
xor
push
insl
dec
fldenv
jnp
in
fcomps
cmp
lea
fsubl
cmp
subl
mov
sti
push
andb
mov
xchg
fs
mov
sub
jae
sbb
xor
lock
scas
add
imul
and
xchg
pushf
in
iret
js
popf
iret
je
cltd
adcb
bound
and
and
scas
fadds
sub
cmp
or
fst
add
sub
mov
cmpsb
and
jns
pop
popf
jae
call
jne
cs
push
ret
jnp
sub
xor
fldl
jmp
sub
push
jbe
insb
sbb
mov
pop
adc
xlat
add
gs
out
mov
xchg
icebp
mov
add
add
daa
shrd
adc
fldt
ud1
popa
rdpmc
pop
pushf
pusha
scas
add
mov
fldcw
inc
imul
cmp
jl
popa
dec
cwtl
push
pop
ds
xchg
xor
dec
pushf
push
aas
or
mov
test
fs
pop
or
push
pusha
mov
push
sub
add
xchg
sbb
cmp
sbb
rol
and
xor
jmp
pushl
movl
mov
push
lea
jmp
xor
bt
pushl
popf
mov
pushl
ret
jmp
sbb
mov
adc
pop
popa
mov
push
cwtl
loope
lret
loopne
testl
mov
divb
ffreep
inc
push
lea
xchg
gs
or
aaa
mov
cmp
enter
bound
mov
movsl
inc
jno
add
push
lock
dec
pushf
call
je
inc
push
clc
sub
jne
mov
sahf
add
cwtl
out
lock
movsl
mov
in
jae
xor
cwtl
push
adc
inc
and
lahf
pop
popf
add
fwait
pop
aam
add
sub
shrl
fcoms
fs
mov
jge
outsl
add
hlt
in
jge
dec
inc
mov
loopne
push
jo
and
sbb
xchg
andb
add
jbe
call
adc
mov
push
inc
stc
stc
sub
inc
cwtl
test
inc
mov
cld
pop
mov
aad
push
popf
sbb
and
clc
dec
test
pop
mov
cmp
stc
mov
movsl
jl
jge
outsb
out
xchg
mov
mov
pop
inc
pop
add
idiv
enter
pop
pop
movsl
and
cmpsb
lcall
stos
nop
pop
mov
loope
inc
ja
dec
pop
xchg
pop
pop
jmp
mov
adc
bound
pop
xchg
push
in
sub
shll
gs
arpl
loope
and
aam
orl
arpl
sbb
mov
imul
das
cmp
icebp
lahf
sbb
mov
push
add
or
mov
dec
mov
xor
sub
xor
dec
inc
sar
ficoml
jno
pop
sub
mov
in
js
incl
add
adc
inc
outsl
mov
push
xchg
push
in
mov
ret
xor
idivb
ljmp
in
mov
jae
pop
data16
inc
rcrb
dec
into
push
lods
cmp
mov
sub
ss
or
adc
or
adc
and
pop
push
and
mov
push
and
mov
popa
xor
wbinvd
lds
dec
cmp
cmc
rol
je
lods
fs
lret
mov
idivb
ljmp
scas
std
jmp
add
cmp
movb
movl
movw
pusha
pushf
lea
jmp
call
call
movl
push
pushf
lea
jmp
pushf
movl
pusha
pushl
movb
lea
jmp
sub
mov
fidivl
test
pop
test
xchg
push
jge
mov
clc
mov
stc
cmpsl
add
sbb
cmp
mov
push
shr
scas
movsb
or
pop
xchg
aas
icebp
adcb
cld
and
jnp
dec
fiaddl
in
ljmp
aam
mov
stos
shlb
and
in
popf
or
and
add
mov
add
jle
pop
aas
aad
aaa
pop
shlb
mov
push
repz
sub
fmull
aas
fdivrl
sarb
fiaddl
loop
aam
bound
icebp
cmp
cmp
push
mov
mov
insl
push
and
int
mov
cltd
mov
pop
or
xor
or
adc
xor
pop
mov
mov
loop
sahf
adc
add
or
pushf
xchg
mov
scas
imul
jmp
out
in
imul
sbb
pusha
pop
aaa
xor
inc
test
jg
das
fnstsw
enter
dec
popf
int3
fwait
sbb
es
fwait
dec
xchg
xor
jne
xchg
test
je
ss
inc
outsb
fisubl
sub
sti
mov
fidivl
fcmovne
jl
adc
fadd
repnz
insb
loop
sbb
sub
push
cmc
pusha
or
xor
in
dec
lahf
and
xchg
scas
pushf
ja
loopne
notl
std
xchg
fneni(8087
mov
imul
mov
cltd
add
cmp
adc
push
cltd
push
or
dec
xchg
mov
out
jb
ret
mov
daa
add
pop
in
fsubr
fisttpl
loop
lahf
xor
push
sbbl
lods
cwtl
jle
pop
fidivl
or
shlb
jno
mov
jl,pn
dec
jecxz
mov
pop
inc
cs
cmp
xor
movsl
popl
not
aam
and
mov
lret
pop
aaa
addr16
xor
or
fistl
rorb
shlb
adc
in
dec
jle
cwtl
cli
jno
adc
dec
xchg
pop
mov
push
mov
addr16
dec
cltd
fsubrl
mov
es
mov
add
bt
popa
cli
add
jne
xchg
and
inc
adcb
andl
dec
fwait
xor
test
inc
pop
xchg
pop
pusha
hlt
fistpll
out
imull
es
lds
cmp
dec
mov
outsb
lcall
out
sahf
jne
imul
pop
aas
loop
push
and
icebp
adc
jo
testb
inc
imul
or
mov
cmc
push
pop
add
iret
dec
mov
and
scas
dec
push
lds
pushf
sub
subl
pop
jo
js
pop
cmpl
lock
xchg
dec
mov
dec
movb
fiadds
ja
push
push
inc
cmp
mov
xchg
cmc
jb
das
ret
mov
xor
inc
enter
ds
mov
push
and
ja
mov
jmp
cmp
aaa
lret
repz
mov
mov
and
loope
push
xor
pop
mov
test
mov
jae
dec
flds
adc
out
or
sahf
jne
dec
and
int
or
and
and
fs
xchg
push
cmpsl
adc
mov
insb
xlat
js
add
xor
repz
xchg
cmpsl
imul
mov
inc
pop
lret
cmp
mov
mov
insl
add
mov
ror
ljmp
mov
sbb
loope
mov
nop
jnp
fs
loop
ret
or
adc
mov
push
dec
shrb
test
in
mov
mov
ret
xchg
arpl
mov
lods
dec
push
or
aam
cwtl
fidivl
cmp
xor
icebp
or
mov
lea
insl
pusha
pop
adc
sti
inc
shlb
shl
fs
pop
fists
jg
sbb
shll
rol
add
push
rcll
cs
cmpsb
mov
fwait
jb
icebp
adc
lret
arpl
mov
mov
faddp
cmp
rolb
lock
mov
flds
adc
insb
test
add
adc
insb
repz
mov
add
enter
mov
movsl
add
test
mov
mov
rcrl
jbe
arpl
mov
pushf
cltd
sti
add
loope
enter
leave
jns
aas
inc
outsl
in
fisubrs
sub
xchg
sbb
out
scas
inc
rolb
ret
sub
xor
aam
and
shll
mov
jb
push
call
int
repz
adc
aas
addr16
ja
cld
xchg
jne
inc
test
and
repz
inc
call
adc
jne
xchg
sti
sbb
adc
jl
cwtl
shl
sti
mov
imull
sbb
sbb
cmp
in
mov
mov
jmp
adc
adc
or
pop
shlb
test
js
push
mov
loopne
pushf
ljmp
mov
jb
sbb
aas
mov
jns
or
jb
sbb
jp
push
or
stos
cmp
jo
inc
xlat
or
sarl
dec
fs
cmp
ja
add
xchg
cmc
imul
pushf
daa
mov
jns
cwtl
jns
mov
sbb
xor
push
or
jno
lock
and
test
fbld
addr16
jecxz
jae
imul
pop
out
pop
outsb
xchg
hlt
sbb
and
mull
int
cmp
push
jecxz
adc
xchg
sbb
dec
sbb
shr
xchg
lods
inc
xchg
adc
das
lea
fs
ds
ljmp
mov
ja
lock
outsl
lods
nop
mov
sbb
mov
mov
int
cmpsl
sbb
mov
xchg
xchg
outsl
ds
rol
mov
push
stos
sub
stos
push
cmc
movsl
stc
mov
dec
inc
shr
jmp
call
mov
lret
icebp
cli
in
leave
int3
in
or
add
sbb
xchg
mov
push
sbb
idivl
inc
push
mov
cs
inc
aas
fcompl
aaa
insb
mov
iretw
add
xor
inc
mov
iret
movsb
jg
addr16
mov
jl
int3
jns
inc
insl
push
mov
fnstsw
push
jbe
add
loopne
xchg
cld
lods
int
jmp
add
loopne
pop
fdivr
mov
arpl
scas
add
mov
push
or
pop
mov
sub
jo
in
jns
fstpl
arpl
out
push
jo
pop
pop
ss
xchg
aaa
inc
imul
push
inc
test
dec
xorb
push
or
xor
sar
hlt
dec
mov
in
stc
sub
mov
sbb
mov
les
sahf
fisttps
stc
mov
xchg
inc
push
cmp
fdivrs
sub
jo
xchg
adc
jae
sarb
mov
push
xorb
outsl
stc
mov
add
push
popf
lcall
mov
mov
sbb
push
mov
dec
mul
cmp
lds
aam
int3
adc
lods
and
xchg
cmc
jnp
push
or
mov
jle
mov
gs
sbb
scas
outsb
pushf
femms
mov
cmp
mov
xchg
xor
push
add
fisttpll
js
sub
mov
cmp
rcrb
insb
loop
sub
dec
loope
mov
inc
inc
mov
and
aaa
inc
and
arpl
mov
mov
fistpl
fsubp
arpl
je
fiaddl
popl
mov
lds
test
push
xchg
mov
jmp
sbb
dec
pop
jle
and
mov
scas
xor
in
loopne
push
insl
or
xchg
inc
lcall
rorb
lahf
sub
addr16
ret
adcb
mov
sub
lock
lcall
mov
fldt
cmp
out
gs
sbb
in
je
popa
lock
or
jb
test
lcall
std
inc
aam
ds
jb
testl
add
inc
add
mov
jmp
lcall
xorl
and
push
inc
inc
adc
dec
das
inc
add
inc
icebp
inc
leave
adc
fldcw
cmp
lahf
das
aad
or
mov
stc
inc
or
iret
mov
pop
movsb
pushf
das
sub
adc
outsb
lock
dec
fcmovnu
in
aad
fdivs
mov
mov
jno
xchg
push
add
cld
rcl
push
adc
push
aas
cmp
iret
pop
into
lret
cli
fldcw
cmpsb
mov
fwait
adc
mov
pop
inc
push
dec
mov
rolb
jbe
push
add
sub
sub
pand
lods
sbb
xchg
push
mov
mov
mov
mov
dec
xor
xlat
jo
js
dec
out
push
jae
in
add
loope
xchg
stc
pop
ret
test
mov
xchg
hlt
std
pop
fs
pop
pop
mov
sbb
repnz
jns
insb
out
push
jne
adc
shl
xorl
mov
movb
xchg
push
shlb
mov
xor
sbb
mov
ret
jmp
negl
repnz
sbb
jp
push
pop
and
sbb
jp
adc
xor
nop
popf
enter
fdivp
test
lret
pusha
daa
int
dec
jl
out
pop
and
pop
jbe
jo
or
mov
cli
and
xor
lds
and
enter
jecxz
inc
scas
adcb
idivb
fidivs
cld
add
lods
testb
movsb
test
mov
inc
xlat
lods
fdivr
and
mov
fcomps
cmpsb
lods
fisubl
xor
cltd
xchg
xchg
in
test
mov
mov
mov
bound
mov
into
push
lea
push
enter
cld
fwait
mov
mov
shrl
sbb
xorl
sti
loop
dec
int3
add
gs
add
pushf
fwait
or
lcall
mov
fcoml
out
jbe
dec
iret
sbb
sbb
addr16
lock
scas
and
inc
xchg
out
cmovns
jge
test
and
sbb
jle
mull
imulb
adc
xor
dec
call
xchg
and
mov
xor
iret
imul
push
loope
aaa
and
dec
flds
xorl
insb
gs
dec
xchg
xor
fisubrl
fmull
sbb
mov
mov
mov
lds
aaa
addl
fisubrs
iret
cltd
ror
out
lcall
cmp
addr16
fnsave
in
mov
mov
sti
or
xchg
hlt
andl
addr16
cmp
aam
jae
pop
imul
ljmp
adc
add
cmp
mov
cltd
dec
pop
sbbl
jmp
das
shl
pop
or
inc
fisubl
cltd
xchg
adc
jmp
repz
rorb
jo
popf
mov
xchg
mov
stos
push
repz
lret
jne
addr16
in
jne
decb
pop
cltd
sub
jns
jnp
push
addr16
mov
test
pop
pop
int
xchg
mov
xchg
mov
push
pop
pop
sti
shrb
rcrb
xchg
shr
or
daa
mov
fldenv
and
lods
xchg
mov
int3
imul
and
lret
lahf
jnp
sbb
dec
inc
movl
movb
movl
pushf
movw
pushf
movw
lea
jmp
xchg
sbb
mov
push
mov
push
cwtl
xchg
in
je
push
ret
fimuls
fwait
movsb
jno
and
xlat
pop
mov
adc
xchg
push
xchg
add
xor
ljmp
push
dec
xchg
aas
mov
sub
test
and
out
jl
inc
flds
inc
cld
mov
or
cld
pop
data16
repz
mov
mov
pop
out
push
pop
cmp
jecxz
mov
sbb
or
push
les
push
push
mov
jge
popa
xor
push
repnz
shlb
popf
inc
lea
clc
pop
jp
or
mov
shll
mov
lret
push
push
mov
dec
mov
call
lods
in
cmpps
mov
pop
mov
fisubs
pop
mov
aaa
into
movsl
xchg
jg
mov
pop
push
sub
je
jp
ret
sub
mov
mov
mov
jbe
das
test
inc
bound
rcl
roll
mov
or
cmp
jl
stc
mov
dec
fiaddl
xchg
cmp
in
xlat
in
out
pop
pop
mov
lcall
das
push
push
repz
push
fisubs
pop
cld
xchg
jecxz
mov
in
adc
xor
aaa
addr16
lds
outsb
insl
and
cmpb
and
push
dec
stos
test
roll
and
and
adc
xlat
imul
jl
mov
pop
or
xor
aas
xchg
cld
scas
fistpll
or
frstor
jg
mov
adc
dec
iret
adc
and
lds
loopne
mov
inc
cs
jmp
sti
mov
hlt
lret
sbb
lea
push
xor
lahf
int
imul
fbld
xor
movsb
add
and
xor
hlt
sub
sub
jecxz
mov
cs
lods
lcall
aad
inc
mov
and
icebp
inc
sbb
push
jge
xlat
icebp
jae
dec
ds
cmp
cmp
push
adc
cmpsb
in
out
and
cmp
je
xchg
mov
adcb
hlt
in
xchg
ljmp
cs
scas
sbb
xchg
sbb
lcall
xchg
out
pusha
adc
mov
lea
pop
dec
call
xchg
xchg
mov
loop
aam
cmpsb
roll
mov
into
or
int
fldenv
mov
cmp
dec
dec
mov
push
test
pop
js
mov
push
lcall
mov
cmp
hlt
adc
pop
and
push
mov
mov
xchg
fldcw
push
jle
sbb
shld
mov
out
xchg
mov
shrb
jbe
jo
xor
icebp
dec
sub
fstps
imul
jl
out
sarl
mov
les
and
loopne
ffree
cmp
shll
xchg
rorl
xchg
xchg
xchg
pop
push
mov
mov
aam
into
sbb
iret
and
mov
push
pop
fisubs
into
negb
inc
or
sub
jecxz
push
shr
mov
addb
mov
movsb
idivb
aam
ds
pop
test
test
clc
sub
ds
sub
xchg
xchg
je
out
mov
add
cld
nop
out
or
stos
jns,pn
cltd
fidivs
mov
js
add
cmp
jg
add
push
popf
data16
stc
leave
jb
incl
pop
sub
mov
mov
or
sub
shr
mov
jns
pop
adc
xor
shrl
cmpsl
cmc
xor
cmc
xor
stc
pushl
popf
push
pushl
pushl
ret
pushf
popl
cmc
xor
pusha
test
xor
pushf
xor
stc
xor
cmc
xorl
stc
push
xor
cmc
bt
xor
stc
xor
clc
call
jne
xchg
and
cli
push
movsb
icebp
cmp
cmpsb
mov
xor
in
sti
cmp
cs
mov
das
and
ljmp
pop
pop
loopne
mov
jae
std
dec
iret
adc
shl
dec
sub
jo
lahf
or
mov
ljmp
jl
mov
mov
mov
out
shlb
jle
icebp
addl
adc
nop
fdivrl
enter
push
dec
addb
mov
or
mov
add
enter
push
pop
cmp
pushf
xchg
dec
test
dec
cli
xlat
sbb
stos
sub
mov
jbe
lds
jae
rcr
push
pause
fistps
icebp
jne
sahf
inc
enter
int
mov
mov
mov
mov
rclb
jns
jb
dec
pop
push
xchg
inc
or
pop
fidivs
movl
push
pop
mov
sahf
arpl
jmp
xchg
cmpl
cmc
jae
xchg
sub
xchg
imul
jecxz
pop
outsl
test
xchg
pushf
xchg
clc
jnp
inc
fisttpll
sbb
pushf
and
dec
inc
dec
push
cmp
int3
mov
fisubrs
xchg
cmp
inc
rcl
lods
cs
ljmp
xor
pop
xchg
orb
push
lods
cmp
or
dec
mov
xor
jle
fiadds
and
push
stos
xchg
push
fistl
arpl
sub
hlt
mov
mov
xchg
dec
jnp
jl
mov
mov
push
inc
xchg
sub
jns
mov
out
repnz
mov
lea
mov
add
inc
adc
xor
cmp
cmpsb
xorb
mov
push
lret
pop
stos
inc
jle
jo
xor
bound
in
push
push
jb
jle
gs
dec
jnp
jae
in
cmpsl
aaa
xchg
shlb
negl
mov
jns
lds
mov
fs
out
divb
dec
sub
push
rcll
mov
jns
in
fmuls
dec
sub
sub
lock
cmp
sti
jecxz
and
aad
out
shrl
mov
xchg
jo
inc
test
inc
leave
push
stos
lcall
jae
cmc
ljmp
sbb
jmp
cmpsb
fwait
lods
cmp
sahf
das
adc
xor
adc
dec
loopne
mov
cmp
out
loopne
and
mov
cmp
in
je
dec
insb
mov
mov
inc
icebp
dec
inc
cltd
mov
cmp
lea
in
lea
rorb
mov
mov
mov
sti
rcr
popa
or
cmc
mov
movsb
push
push
sbb
sbb
dec
test
add
cld
mov
or
popa
lods
adc
dec
stos
mov
xchg
loop
lods
mov
adc
jmp
cmp
add
and
pop
in
dec
mov
and
aaa
mov
pop
add
cld
lock
xlat
lret
out
jp
fmull
or
sti
jae
push
mov
add
dec
rcrl
cmp
jns
fsts
cmp
dec
jnp
popf
roll
dec
mov
aaa
mov
test
enter
push
add
mov
stos
sub
inc
repnz
daa
cmc
out
xor
ficomps
lock
shlb
cmpsl
aaa
das
dec
fwait
fwait
outsl
dec
sbb
pop
subb
call
test
faddl
jp
fucomip
lds
idivb
rcr
jmp
movb
pusha
movl
push
pusha
mov
pushf
lea
jmp
jmp
movl
pushl
lea
jmp
pusha
pushf
popl
call
lcall
mov
dec
cmpsb
clc
mov
jmp
pop
mov
adc
imul
repnz
push
fisubs
stos
and
outsl
adc
sarb
cld
jne
out
xor
into
inc
xchg
sub
pop
or
mov
daa
enter
cs
cmpsb
jg
mov
outsl
ljmp
xchg
movsb
mov
mov
jnp
ds
gs
cmp
ret
push
ljmp
xchg
fs
add
dec
out
enter
jmp
sbb
mov
mov
negb
test
popa
dec
imul
inc
int
stos
and
clc
cmpsb
lods
pop
dec
push
sahf
dec
mov
test
xchg
fmuls
popf
and
outsl
pop
scas
test
jae
jp
xchg
xchg
jmp
mov
mov
rdpmc
and
and
out
and
lock
inc
addr16
pop
pop
xchg
and
push
aaa
dec
inc
cmp
pop
jbe
sub
scas
fiaddl
int3
push
loop
test
push
jb
jmp
mov
mov
test
aas
aad
enter
inc
push
jp
pop
mov
jno
mov
mov
mov
fistl
pop
insl
xor
andl
sbb
insl
in
sbb
cmc
cmp
add
sub
aad
dec
and
test
rolb
enter
nop
jo
out
in
out
xor
mov
mov
push
pop
dec
rorb
xor
inc
jle
out
or
ret
cltd
inc
mov
xor
cwtl
xlat
popa
lea
mov
scas
fildll
mov
xlat
inc
cs
xor
aad
std
pop
and
lea
xchg
mov
push
divl
mov
push
int
xchg
dec
test
icebp
xchg
in
or
adc
rclb
movsl
negb
xchg
jo
imul
xor
mov
fdivrs
lds
cmpsb
push
mov
dec
xchg
mov
push
aas
inc
mov
sbb
sub
add
jnp
out
sahf
ja
imul
outsl
dec
jnp
inc
sub
loop
arpl
shll
sub
push
lds
les
pop
push
push
push
sbb
addr16
pop
lret
loopne
cmpsb
xchg
jp
push
mov
ljmp
iret
add
stos
mov
inc
xor
jg
or
inc
lret
daa
or
cmp
mov
and
in
test
repnz
xor
scas
sbb
aad
dec
cs
inc
and
lahf
pop
rcrl
repnz
mov
mov
divl
inc
sarl
fs
dec
shlb
sub
jl
mov
cmovl
add
out
rclb
cmpsb
adc
stc
bound
sub
or
inc
ja
mov
xchg
xchg
mov
dec
out
mov
fdivp
incl
testl
mov
cmpsl
pop
movsb
mov
jmp
std
mov
out
and
push
jno
cmp
in
rclb
shlb
push
or
xor
testb
push
jecxz
cmp
stos
idivb
int3
fadds
imul
js
add
cmp
mov
mov
mov
push
dec
and
enter
fsubrl
inc
addr16
test
mov
cmp
sbb
and
xor
call
cmpsl
and
jmp
pop
ja
jb
inc
in
xchg
cmp
test
data16
pop
adc
mov
cwtl
cmc
sbb
adc
test
cmp
pop
sub
gs
cld
lds
jae
ja
sub
jnp
mov
adc
ret
in
fdivs
ljmp
adc
test
clc
xlat
enter
sbb
in
pop
add
jmp
jnp
mov
cld
or
clc
cli
and
out
pop
or
xlat
pop
fisubs
mov
jg
js
mov
mov
mov
test
pop
addr16
leave
lock
mov
dec
mov
mov
lret
shlb
cmpsb
jmp
stos
sahf
or
add
and
stc
fstpl
dec
icebp
stos
pop
fists
in
xlat
in
xor
cmp
pushl
and
dec
cltd
sub
mov
gs
repz
push
mov
gs
in
test
mov
lods
cli
pop
dec
push
gs
mov
xor
loop
push
sti
and
sbb
lahf
aaa
mov
aas
ljmp
pop
xchg
adc
dec
arpl
insb
cmpsl
lods
pop
jmp
jo
enter
mov
jo
xchg
xor
sub
adc
repnz
mov
push
repnz
sarl
rol
jl
add
xor
dec
inc
fistps
or
cmpsl
mov
shlb
loop
push
sbb
push
popf
nop
pop
movsb
adc
aaa
add
mov
jnp
pushf
das
add
add
iret
push
sahf
les
mov
mov
ds
and
test
ret
int
daa
repz
enter
cmp
test
pushf
out
repz
inc
mov
dec
fcomp
dec
add
push
aam
cmp
push
mov
add
cmpsl
loop
into
push
cld
dec
or
sub
iret
test
test
push
push
out
xchg
or
pop
dec
adc
pop
push
out
jb
push
dec
inc
inc
outsl
mov
mov
add
scas
cmc
pop
or
je
std
push
jne
add
xor
mov
mov
loope
dec
iret
jno
in
in
movsb
push
stc
push
xor
dec
mov
and
dec
pop
add
in
cmp
dec
int
ds
hlt
std
jecxz
add
stos
clc
jmp
into
int3
in
cmp
pop
repz
sbb
mov
jbe
dec
js
adc
fbstp
dec
ret
sarb
adc
pshufw
push
imul
inc
outsb
jnp
sbb
arpl
imul
inc
loopne
rorl
or
addr16
dec
enter
imul
test
mov
dec
cmp
sbb
orb
fidivrl
fnstcw
repz
lds
mov
mov
sti
sub
add
pop
sub
fisubl
lods
pop
ja
enter
adc
cmp
clc
shlb
and
lods
push
out
popf
inc
mov
mov
adc
lcall
inc
pop
add
or
or
outsb
and
fsub
lds
mov
in
add
push
movsb
inc
dec
stos
lret
scas
xchg
push
sub
movsb
add
push
mov
add
sahf
js
mov
shll
jmp
test
jp
lds
inc
cmpsl
inc
mov
int
xor
das
scas
inc
xor
mov
outsl
out
in
ds
fdivr
inc
cmc
jns
leave
lret
jl
jp
shl
jecxz
sti
cmp
stos
into
mov
cmp
lgs
and
loope
dec
out
pop
jns
pusha
adc
mov
and
jnp
mov
in
jnp
leave
lods
mov
bnd
push
stc
mov
xor
lock
stc
or
and
lock
push
and
imul
sub
jnp
push
dec
lds
mov
or
dec
cs
add
push
je
pop
mov
and
and
adc
inc
pushf
nop
xchg
sbb
dec
into
push
cmpsl
cmp
fwait
fwait
rorl
mov
insl
jp
adc
test
pop
or
inc
int3
sub
ja
std
cli
fists
lret
fdivs
xchg
into
das
pop
push
bound
jmp
or
cmp
insl
arpl
dec
out
loope
ds
mov
mulb
pop
push
testl
sti
push
mov
enter
in
jmp
xor
nop
and
in
aaa
lret
and
adc
fiadds
es
mov
movsb
iret
in
and
arpl
lods
stos
mov
jmp
mov
xchg
pop
in
mov
sbb
in
pop
adc
adc
jp
xchg
xor
cwtl
inc
stos
xchg
popa
repnz
into
mov
jecxz
add
mov
pop
adc
xor
or
sti
int
sub
fdivrl
inc
dec
repnz
popa
add
inc
pop
loopne
or
mull
test
shlb
sub
outsb
inc
or
jb
add
add
xchg
adc
scas
shl
fnstcw
lret
jne
incl
jb
mov
mov
addr16
xchg
std
jno
sub
je
ja
pop
fsubl
mov
push
adcl
xor
xchg
push
inc
lods
sub
int
pop
pushf
call
push
lods
cltd
mov
movsb
pop
imull
adc
mov
push
xor
bnd
pop
loopne
sub
icebp
mov
pushl
ja
sub
jnp
insb
adc
mov
imul
pusha
insb
mov
das
sbb
mov
cmp
and
cmc
inc
into
inc
xchg
dec
aad
push
stc
dec
pop
mov
loope
sbb
xlat
stc
fstps
xor
jo
mov
in
mov
ret
adc
rorb
mov
mov
mov
outsb
pop
dec
xor
mov
inc
int3
adc
xchg
subl
dec
adc
mov
pop
push
std
testb
repz
inc
pop
in
mov
xlat
adc
data16
mov
cmp
imul
mov
pop
mov
andl
fmul
add
clc
sub
mov
cmc
and
nop
sahf
jns
mov
jnp
add
mov
jae
xchg
pop
fwait
loopne
dec
pop
mul
jmp
es
fists
inc
into
sbb
lock
out
jmp
pop
and
mov
pop
jecxz
jbe
cmc
or
push
repnz
cmp
outsb
sti
arpl
cli
fmull
int
adc
sub
cmp
pop
add
int3
movsl
adc
mov
push
rcrl
mov
dec
mov
arpl
pop
and
imul
pushf
jnp
mov
in
out
sti
add
sti
or
stos
scas
jmp
in
stc
jb
dec
orl
fadd
dec
ljmp
jmp
mov
cmp
cs
cltd
add
adc
daa
in
mov
dec
test
out
jne
jle
add
insl
in
dec
js
adc
mov
xlat
jnp
xchg
sub
adc
dec
out
cmp
cmp
arpl
pop
mov
out
jne
fbstp
rcrl
inc
lret
sbb
subb
jns
cmc
push
cmc
sbb
push
call
inc
orl
pop
add
xor
dec
xchg
pushf
xchg
dec
aad
gs
lcall
adc
hlt
and
mov
mov
adc
jo
adc
mov
lahf
jl
cmp
pop
xchg
xchg
xor
jg,pt
test
rcrl
add
arpl
or
daa
iret
mov
test
xchg
lahf
mov
hlt
inc
jecxz
mov
scas
xchg
and
mov
mov
push
add
jae
cmpsl
iret
icebp
adc
cli
pop
stos
rclb
push
mov
setbe
mov
movsb
xlat
insl
push
sbb
mov
lods
push
mov
pop
pop
push
and
hlt
inc
rcrb
test
xor
jne
or
cmp
mov
xor
dec
int
pop
sub
sub
dec
dec
movl
movb
pushf
pushl
lea
jmp
jbe
scas
cmp
add
mov
pop
mov
dec
mov
jl
push
and
aam
sbb
mov
or
jge
jecxz
sbb
movsb
rcr
fcmovnb
mov
cmp
arpl
scas
out
ficompl
jnp
lods
fbld
notl
pop
or
jmp
movsl
aaa
imul
mov
popf
mov
shl
sti
mov
push
bound
into
xchg
sub
dec
cld
jae
cwtl
jnp
iret
lea
xorl
scas
daa
lret
test
fbstp
cli
in
push
inc
popa
and
push
pop
and
test
mov
and
xchg
in
push
dec
in
lret
out
addr16
mov
filds
jg
setne
sub
push
ja
int
nop
mov
or
xchg
outsb
mov
shll
lea
jmp
dec
clc
in
sub
xlat
stos
jbe
or
mov
rorl
pusha
movl
jmp
xor
stc
stc
xor
stc
xor
pushf
cmc
xorl
bt
xor
test
clc
xor
push
stc
pushl
popf
push
push
pushl
ret
jmp
pusha
movl
pushl
pushf
lea
jmp
addr16
lods
inc
lret
adc
fldenv
stos
repz
xchg
in
xchg
test
push
add
lret
xor
ja
mov
sub
shl
lods
std
cld
popf
sarl
hlt
jnp
aad
aaa
mov
shl
rcrl
inc
add
sbb
add
into
ja
nop
pop
and
or
push
pushf
sahf
into
movsb
pop
cwtl
shrb
dec
das
xchg
push
push
mov
add
push
imul
data16
push
add
sbb
fdivr
sbb
cmc
dec
subb
sti
mov
add
mov
lds
mov
std
clc
add
dec
ljmp
jl
adc
test
rclb
shrl
js
pusha
movl
movb
pusha
jmp
pusha
movl
pushf
mov
pushl
push
lea
jmp
push
mov
movl
pusha
lea
jmp
push
jmp
xor
jmp
xor
bt
xorl
test
bt
xor
pushf
bt
xor
pusha
xor
clc
cmc
xor
clc
pushf
xor
clc
movb
pushl
popf
pushf
pushl
ret
xor
cmp
test
xor
test
xor
cmp
clc
xor
pushl
test
pushl
popf
push
pushl
ret
pushf
pushf
movl
movl
pusha
pushl
pushf
movl
pushl
lea
jmp
push
orl
and
out
outsb
pop
xchg
xchg
xor
cld
stos
sub
xchg
js
dec
movl
mov
fldt
inc
inc
arpl
pop
fldcw
jns
leave
stc
call
cwtl
fisubl
lods
xor
pop
negb
pop
xchg
mov
pop
popa
lods
ljmp
test
popa
mov
aam
cmpsl
imul
sti
repz
xor
bound
xchg
addr16
fmuls
out
pop
mov
in
ffree
xchg
cmpsl
imul
xchg
bound
jge
popf
sub
push
ja
les
xchg
into
sub
jbe
not
cmpsl
and
and
mov
or
cmp
cmp
mov
mov
outsb
mov
mov
in
or
mov
cwtl
imul
or
fimull
clc
test
cli
ljmp
lock
dec
fst
push
jno
mov
mov
lods
or
cmp
popf
lock
out
outsb
jmp
mov
incb
icebp
ja
jb
fcomps
mov
dec
and
fiadds
popf
inc
in
adc
mov
popf
push
pop
jmp
into
mov
popa
dec
popf
andl
sarl
cmpsb
icebp
mov
jecxz
lock
jne
inc
enter
jns
ljmp
mov
mov
dec
jp
jns
shl
pusha
mov
pavgb
pusha
pop
scas
aaa
jl
out
je
jecxz
insl
fnstenv
and
in
xchg
dec
test
or
mov
arpl
cmp
scas
adc
aas
dec
xor
cmp
inc
ret
loopne
aam
jae
in
pop
imul
stc
stos
lcall
sti
sbb
ret
mov
adc
dec
call
dec
negb
xor
and
adc
out
das
fsubr
imul
stos
or
aas
dec
pop
leave
mov
into
mov
sub
neg
sub
je
mov
mov
push
cmp
push
xorb
pop
lods
mov
inc
jg
add
dec
int
ja
or
cmp
push
js
mov
sbb
push
in
filds
imul
rorb
xchg
xchg
fisubs
xor
fwait
jae
cmpsl
scas
xchg
sbb
enter
adc
xchg
ret
or
mov
push
out
cmp
lahf
dec
inc
jns
stos
jge
cs
scas
test
bound
dec
rorb
or
lahf
testl
movsb
jg
cmp
mov
subl
cmp
sti
jno
or
out
push
or
mov
xor
mov
mov
or
ret
lods
fwait
pop
and
daa
insb
idivb
jbe
into
dec
cmp
leave
xlat
mov
push
imul
mov
xlat
lret
inc
fs
mov
ret
xor
mov
mov
add
mov
or
lds
cltd
outsl
aam
data16
lret
jg
cmc
out
fld
movsl
test
stos
pushf
stos
mov
je
sub
shrb
stc
jae
repnz
test
in
imul
or
or
adc
loop
push
or
mov
push
faddp
mov
ret
cs
dec
fldln2
and
lret
push
mov
inc
or
cmp
loop
mov
push
dec
ret
xor
insl
idivb
jns
mov
loop
xor
lods
dec
xlat
push
push
ds
dec
lret
sub
jp
xor
dec
stos
mov
mov
pop
test
xchg
and
push
adc
jne
xor
mov
xorb
lcallw
xchg
aam
pop
ss
sbb
enter
push
mov
cmpsl
loop
xchg
rdtsc
scas
cmp
arpl
or
mov
cmp
mov
js
mov
lock
test
mov
inc
jb
outsb
dec
sub
cmpsl
hlt
jae
cmpsl
jo
insl
push
shll
xor
xor
push
icebp
push
or
das
je
jnp
xor
sub
shlb
xorb
push
add
adc
xor
daa
adc
gs
enter
sub
fimull
cs
mov
pop
dec
xlat
pop
push
bound
dec
sbb
insl
cmp
clc
sub
lods
push
sti
lahf
inc
sbb
enter
and
scas
or
or
ss
mov
icebp
subb
and
shll
pop
in
push
push
loop
lret
pop
xchg
dec
repnz
or
rcrb
pop
movsl
inc
lds
lea
inc
xor
psllq
enter
and
je
push
sbb
cld
push
inc
and
jl
mov
pop
test
out
pop
xor
cltd
cmp
push
imul
pop
jb
or
xchg
sub
jp
jle
es
pop
mov
jmp
and
xchg
iret
pop
inc
sahf
int
ds
pop
jl
movsl
pop
sub
inc
add
gs
lods
scas
insl
dec
mov
mov
out
in
mov
stos
lret
shll
aaa
adc
xchg
aam
out
push
ret
pushf
or
cli
xor
das
movl
or
sbb
fistpll
xchg
lcall
push
xchg
js
mov
cmp
test
lock
ljmp
jmp
fnsave
sbb
jle
cmp
addl
adc
or
scas
add
sbb
sub
out
pop
inc
les
popl
adc
mov
cs
add
jns
daa
fildl
imulb
adcb
push
mov
loop
xor
sbb
mov
cmpsl
lret
jnp
stos
adc
fsubr
lahf
mov
dec
insl
in
jnp
xor
xchg
testl
dec
adc
xor
fldpi
xor
daa
dec
jbe
mov
mov
jle
mov
imul
inc
push
aad
push
loop
mov
jne
and
mov
rolb
mov
aas
mov
jmp
pop
fisubrs
cmp
ja
jle
lea
jp
cmp
mov
lea
test
pop
push
mov
std
idivb
int3
dec
mov
xchg
xor
mov
addr16
aam
cmp
mov
cmc
testb
jl
or
mov
cmp
lods
inc
aam
xchg
fsub
mov
in
or
pop
js
sbb
push
push
xorl
repnz
out
enter
cld
notl
sbb
int
mov
movb
mov
gs
xor
dec
dec
jnp
inc
pop
push
dec
or
mov
insl
jnp
mov
mov
sbb
xchg
aam
xchg
fucomip
rcrb
sbb
mov
dec
stc
mov
mov
ds
icebp
nop
and
lret
ds
dec
cmc
dec
iret
lcall
adc
inc
lret
mov
icebp
jns
data16
sub
out
push
inc
push
cmp
sub
inc
pushf
sub
ret
push
sub
push
dec
aaa
xor
xchg
fs
xlat
lods
into
or
mov
pop
jns
fwait
popf
push
inc
call
test
repz
jp
cmp
and
pushf
das
mov
xchg
push
movsl
idivb
xchg
out
jne
pop
test
sti
add
push
cli
jns
fwait
stc
mul
mov
pop
stos
and
dec
fldl
sub
mov
cmp
andl
cmp
lret
cld
cs
or
push
ficompl
lods
pop
mov
fldenv
xchg
mov
jmp
cmp
test
mov
lds
or
xchg
gs
shlb
rolb
idivb
cmp
mov
or
jp
ss
stos
in
idiv
shll
or
jg
and
addr16
xchg
mov
or
mov
push
in
xchg
ret
add
mov
ds
mov
pop
cmp
or
jle
lods
and
nop
and
popf
sbb
or
hlt
sbbb
ret
jecxz
addr16
iret
mov
lret
jns
in
testb
jle
lret
stos
test
inc
xchg
push
in
andb
sbb
or
dec
adcl
cmpsl
xor
jns
movsl
dec
negb
push
inc
xor
adcb
mov
inc
int3
xor
xchg
cltd
call
inc
aad
loopne
add
sbb
or
popa
or
xor
jp
xchg
cmp
in
and
lcall
mov
sbb
fs
push
or
pop
jae
cltd
pop
lods
sarb
fcoml
lds
retw
ret
aam
dec
dec
fcmovnu
and
in
add
not
jp
inc
inc
clc
outsb
fxam
orl
in
jns
hlt
in
fdivs
lock
jae
loope
sahf
je
les
fwait
mov
jle
aaa
dec
jp
das
mov
xlat
sti
dec
fistpl
dec
out
or
sub
rorl
mov
ret
xchg
xchg
adc
icebp
in
mov
dec
in
js
jmp
mov
sarl
add
mov
sub
xchg
imul
test
push
repnz
es
inc
inc
mov
sub
xchg
jle
negb
scas
pop
movsl
lock
cmp
pop
cmpsl
test
adc
addr16
imul
xchg
inc
in
jl
xor
push
ret
xor
iret
fadds
into
xchg
xor
sbb
push
rclb
mov
add
inc
cs
rcrl
pop
push
movb
sbb
add
sub
jnp
jno
fistpl
jnp
inc
aas
shlb
pop
fwait
imul
dec
add
sub
iret
pushf
sbb
push
sbb
ljmp
in
insl
pop
sbb
sbb
push
push
dec
cmp
adc
mov
popf
movsl
popf
jecxz
stos
sub
je
cmp
inc
mov
std
xlat
popf
psraw
jne
pop
movsb
pop
push
ljmp
pop
clc
js
push
int
push
dec
cmp
mov
jns
mulb
das
pop
adc
daa
inc
sti
mov
inc
ljmp
das
mov
push
loope
fcoms
es
push
jle
int
shll
inc
fistpl
mov
push
push
push
mov
lds
lds
xchg
add
xchg
into
in
mov
aas
xchg
add
out
mov
sbb
fcompl
or
ds
fsts
xor
or
insl
dec
test
test
mov
fldenv
fcoml
iret
mov
jno
jb
inc
cmpsb
imul
xchg
mov
fnstsw
mov
adc
popa
jne
jns
push
into
mov
icebp
adc
jbe
repz
adc
cmc
mov
push
das
aam
xor
jge
xchg
mov
scas
frstpm(287
lds
cld
xor
mov
mov
sbb
add
int
fisttpl
mov
mov
sbb
pop
js
push
xchg
out
mov
int3
add
sbb
push
mov
outsl
add
jb
push
je
jmp
rcll
es
push
loopne
push
cld
dec
xchg
ja
cltd
sarb
bound
jbe
sar
jecxz
lcall
out
xchg
or
shll
or
jb
lcall
lods
inc
adc
sarb
mov
pop
loop
sbb
inc
cmp
scas
cmp
inc
andb
xor
mov
jmp
pop
push
jp
cmp
push
lret
decb
jne
mov
push
mov
inc
mov
xor
xor
lods
negl
add
insl
push
popf
mov
and
ret
inc
enter
test
std
pop
lods
jb,pn
cmp
test
ljmp
jecxz
ljmp
mov
inc
mov
int3
jge
les
test
in
jb
dec
mov
push
and
xchg
fstl
scas
ds
scas
aaa
pop
les
cmp
jl
or
xchg
pop
iret
pop
mov
cltd
push
pusha
bnd
scas
lea
mov
mov
js
inc
repnz
adc
rolb
in
data16
inc
lods
jmp
mov
jecxz
push
pusha
add
mov
pop
jecxz
push
rcll
dec
cmp
cmpsb
or
or
sub
mov
out
mov
xchg
or
aas
rorl
push
adc
sbb
push
pop
dec
fdivrs
inc
adc
cltd
shl
push
jae
mov
cmpsb
ret
sti
mov
jo
loop
iret
sbb
push
aad
xchg
pop
pusha
fsub
push
das
iret
rorb
jl
in
sbb
mov
jecxz
les
dec
mov
pop
popf
loope
call
add
sbb
push
popa
cli
adc
or
cli
clc
dec
int3
adc
mov
iret
cmp
fwait
addr16
mov
shl
sub
outsb
mov
inc
aad
jmp
sub
ret
jge
loopne
shlb
xchg
xor
dec
scas
sub
sub
or
push
enter
sbb
in
or
adc
loope
sub
pop
jbe
inc
mov
mov
mov
ret
insb
ja
xor
into
subb
xchg
cmp
pop
aad
test
cwtl
ljmp
xlat
inc
dec
mov
cmp
xor
loopne
inc
aad
orl
ss
jae
sbb
lock
push
or
lock
xchg
xor
mov
incl
test
popa
popa
daa
mov
jmp
mov
mov
gs
in
out
mov
test
mov
pop
xchg
fxch
or
stc
push
rorl
add
inc
pop
loopne
mov
movsb
mov
mov
ret
test
imul
inc
popa
loope
mov
lret
lods
xchg
rdtsc
mov
push
pusha
jns
loop
je
inc
cmc
sbb
jae
lea
mov
xchg
sti
inc
imul
int
xchg
sub
xchg
mov
sbb
popa
pop
out
and
dec
int3
mov
xor
out
push
ret
stos
xor
jg
mov
lahf
xor
cmp
adc
and
and
mov
sub
sbb
pop
je
dec
inc
cli
out
lret
loopne
mov
dec
sbb
inc
inc
xor
jo
nop
aam
in
dec
jl
insl
cmc
sahf
test
push
mov
push
aas
push
sub
bound
dec
inc
outsl
in
or
ljmp
mov
jo
dec
in
mov
daa
push
mov
xchg
aaa
lret
lods
insb
popf
and
bound
lret
push
xor
pop
jg
mov
push
xlat
scas
enter
add
sub
or
pop
adc
faddl
daa
mulb
rcrl
aam
inc
sbb
add
push
sub
loopne
mov
add
cs
mov
iret
mov
mov
cvtps2pd
or
push
enter
sub
lods
notl
pop
out
aaa
and
popl
sbb
mov
shrl
cli
dec
dec
jae
xor
js
rol
xlat
cmp
pop
sahf
das
lods
rorb
cltd
xchg
add
mov
xchg
mov
mov
movb
in
sbb
mov
das
mov
cld
cmp
inc
rolb
insl
mov
movsl
inc
call
xchg
fistpll
push
sub
cmpb
test
pop
jge
ljmp
test
icebp
push
jnp
adc
enter
pushf
lcall
lea
mov
fcmovnb
aas
loope
pop
xor
sahf
cmp
cld
and
sahf
adc
mov
fdivl
lock
xor
inc
xchg
push
sti
addr16
sti
stos
xor
xchg
test
sub
pop
rcrl
pop
jmp
leave
adc
xchg
sbb
lods
pop
sti
movsl
cmpsb
and
cmp
les
sub
call
or
clc
jae
cwtl
lahf
xor
xor
loope
das
addl
fsubrs
dec
lcall
jb
dec
xchg
repz
insl
es
lds
mov
cmp
mov
mov
or
int3
push
fdivr
stos
fucomip
adc
cmpsl
negl
and
or
xchg
mov
imul
adc
dec
les
xor
xchg
mov
push
mov
cwtl
jecxz
test
cmpsb
cmp
or
test
or
dec
and
mov
xchg
divl
add
imul
iret
lret
xchg
or
cs
xor
xchg
loope
mov
lcall
mov
xor
fsubs
add
or
sub
dec
mov
rolb
std
xchg
adc
mov
gs
mov
out
addr16
shrl
xor
mov
xlat
mov
insl
in
adc
sahf
mov
and
scas
and
out
imul
inc
imul
outsl
std
out
test
sti
sbb
or
jns
sbb
test
mov
add
icebp
cmpsl
mov
push
mov
cmp
aad
cmp
rolb
shll
shrl
sub
data16
andb
mov
fadds
bound
push
lret
sub
mov
je
out
sahf
dec
sbb
mov
mov
and
popa
hlt
inc
and
and
add
cltd
and
mov
add
sbb
fwait
jl
lret
ret
and
scas
das
jp
mov
scas
add
mov
mov
jge
ss
push
xor
gs
nop
jecxz
stos
sbb
mov
addb
jae
and
les
push
movsl
mov
sahf
cltd
les
sti
daa
sbb
fdivrl
jge
cmp
sti
xor
pushl
popf
push
pushl
ret
push
movl
pusha
movl
pushf
pusha
pushl
mov
lea
jmp
xor
stc
call
jmp
push
movl
jmp
movl
jmp
pushf
popl
test
xor
stc
xor
stc
xor
pusha
jmp
adc
inc
shrb
rcr
movsl
sti
dec
xchg
aad
jnp
sub
jb
jg
or
pusha
dec
push
arpl
xor
add
or
cmpsl
mov
lds
test
hlt
mov
in
push
mov
rorb
xchg
add
jp
cmpsb
xchg
push
mov
mov
rcll
cwtl
ret
popa
push
sahf
repz
subb
xchg
xor
cmc
pop
call
cld
scas
push
insb
cmp
cli
jmp
bound
mov
mov
sub
fimuls
sbb
pop
popa
cmp
stos
les
xchg
insl
mov
in
popl
dec
xor
outsb
arpl
sahf
subl
inc
enter
jbe
pusha
sbb
data16
cmp
push
jns
push
adc
rclb
xchg
mov
cmp
loopne
sahf
arpl
rclb
mov
dec
idivb
sub
rol
call
jmp
jmp
daa
mov
fbstp
bound
push
sahf
jmp
ret
mov
loop
test
cs
clc
ljmp
xor
call
repz
xor
cmp
push
xor
addr16
sub
insb
and
inc
repz
mov
push
icebp
xor
push
subl
ss
push
movsl
push
adc
mov
mov
xchg
mov
jnp
add
cmp
sub
aad
push
ss
insl
sbb
stos
mov
mov
loopne
xchg
push
jg
sti
cmpsl
arpl
jg
pop
addb
mov
jnp
sbb
jns
add
adc
pusha
dec
pushf
and
or
lret
mov
pop
andl
in
inc
aas
add
mov
mov
mov
shll
cmc
jne
lods
mov
adc
nop
rcrb
push
aas
ja
mov
and
ds
cld
arpl
and
sub
je
fidivs
pop
jg
inc
roll
int
adc
dec
cmp
gs
adc
jb
ret
and
or
out
scas
xchg
adc
sbb
scas
cli
sub
add
mov
fmulp
cli
in
adc
ret
loope
fldenv
outsl
adc
iret
in
cmp
out
mov
sub
mov
and
or
or
fimuls
sarb
fstpl
push
xchg
push
and
cmp
repz
sarb
push
mov
nop
je
xchg
mov
adc
sbb
movsl
xlat
xor
imul
pop
pushf
sbb
test
inc
xchg
sbb
jo
adc
fstpl
mov
inc
lret
insb
outsb
mov
dec
lcall
orb
aam
and
mov
push
dec
je
ss
mov
int3
dec
idivb
sub
ud0
test
popa
sbb
or
mov
xchg
or
aam
xor
inc
mov
repnz
pop
inc
fstpl
push
and
popa
scas
cmp
and
push
sub
dec
in
xchg
inc
cmp
hlt
jno
xor
idivb
sub
fcmovnbe
inc
sub
mov
test
xor
lea
gs
sub
mov
aad
aaa
shlb
stc
arpl
mov
push
aam
rorb
stos
sub
jecxz
cmp
cltd
jge
in
insl
or
pop
pop
movsl
push
fcomps
aaa
mov
or
aad
sbb
imul
pop
adc
pusha
sub
cmp
fdivs
cmp
add
ret
ss
push
xor
cli
icebp
jnp
adc
hlt
xchg
in
dec
mov
and
stos
cmp
jo
test
push
lods
data16
lods
flds
imul
mov
dec
outsb
push
outsl
call
js
pop
jmp
jnp
adc
std
icebp
sbb
addr16
xlat
lea
push
test
mov
popa
adc
fsubl
xchg
aaa
mov
cmpb
stc
in
pop
push
jb
jl
pop
hlt
sbb
insl
push
test
ret
adc
inc
mov
lret
sti
jnp
adc
push
adc
lds
adc
adc
lahf
sbb
rolb
mov
das
dec
leave
and
test
sbb
mov
data16
jecxz
mov
out
cmp
lea
movsb
xlat
shll
pop
mov
push
push
adcb
test
xlat
pop
repz
iret
pop
push
inc
adc
rol
pop
push
mov
mov
sub
jns
sub
inc
loopne
add
push
in
sti
or
push
out
inc
out
movsl
push
xchg
push
adc
sti
aam
stos
cmpb
add
lret
popa
sarl
xlat
and
dec
fildl
or
sbb
xorl
push
cmpb
je
fisttpl
fdivl
cltd
lret
das
addb
rcll
std
jo
stos
lock
ljmp
dec
out
inc
test
lods
subb
int
cmp
mov
push
sub
insb
in
xor
push
stos
lahf
sub
lahf
inc
push
xor
lret
inc
adc
rcl
jo
mov
xchg
fstpt
pop
leave
jb
pop
inc
shlb
push
decb
cmp
out
push
mov
movsl
int3
mov
cmp
fistpll
fcoms
loope
movsl
sub
fstp
mov
jb
xor
mov
loop
fwait
negl
call
adcb
out
push
out
andl
inc
push
insl
pop
mov
or
sub
rcrb
icebp
pop
mov
xchg
rcrb
mov
dec
sub
jg
jg
fldt
mov
or
sarl
xchg
shl
jg
xchg
pushf
lock
dec
out
mov
shrb
shlb
rolb
adc
mov
iret
xchg
mov
inc
in
test
into
hlt
fstpt
rcll
and
pusha
xor
cmpsl
pop
notl
push
insb
lea
rclb
sub
xchg
repz
sbb
clc
jle
pop
pop
in
mov
push
inc
mov
lret
mov
imul
cmp
xor
cs
sahf
cmpsl
xchg
pop
adcl
ljmp
shrl
xchg
das
adc
fcmovb
mov
sti
sbb
lock
int3
decl
icebp
fs
orl
mov
roll
adc
inc
mov
adcb
inc
ja
scas
dec
fdivp
or
cmpsb
jl
movsl
xchg
movsb
mov
cltd
cmp
mov
ljmp
mov
sti
lret
lock
pop
jg
cmp
mov
xlat
ss
insl
lods
mov
cmp
movsb
jae
inc
arpl
pop
add
test
jo
ss
aas
push
and
mov
popa
xchg
jp
dec
cmc
imul
pop
loop
fmuls
xor
test
adc
or
push
mov
sbb
pop
hlt
sbb
and
inc
xor
in
xchg
aas
out
inc
es
pop
loop
jge
shl
pop
das
mov
xchg
mov
cld
adc
xor
in
iret
cld
clc
xchg
sbb
inc
cltd
xchg
jl
or
add
and
ret
push
call
pop
push
mov
roll
mov
pop
out
mov
outsb
jecxz
sbb
leave
jno
pushf
lea
scas
xor
or
pop
dec
xor
and
jbe
xchg
inc
add
pop
mov
adc
test
push
adc
mov
sbb
fmull
js
test
inc
pop
inc
lock
jnp
aam
add
clc
and
pop
pop
cwtl
push
dec
xor
push
lock
sub
mov
xor
cmp
in
leave
test
adc
dec
shlb
jb
fldenv
xor
int3
insl
lahf
icebp
mov
sarb
and
sub
rol
stc
mov
cmp
sbb
fs
mov
leave
mov
push
cpuid
test
jbe
cltd
xor
mul
push
ja
call
lret
lds
jb
insb
lret
clc
push
inc
mov
add
fcoml
push
jmp
jno
gs
xor
inc
movsb
mov
and
add
mov
push
or
pop
fstp
inc
jp
jle
mov
stos
inc
daa
jae
mov
and
or
test
ss
cli
mov
xor
mov
mov
in
mov
fxch
adc
js
popl
inc
mov
jmp
out
in
shrb
subl
and
add
xchg
sbb
mov
jnp
pusha
cmpsl
cmp
imul
push
movsb
push
rclb
add
mov
cmpb
push
xor
in
dec
test
cld
insb
sbb
int3
das
sbb
mov
and
mov
call
test
xchg
jmp
jne
cli
inc
ret
jb
fimuls
sub
inc
cmpsl
rol
jns
stos
int3
push
loopne
mov
add
xlat
xor
call
cli
and
arpl
aaa
push
dec
mov
subl
leave
push
jae,pn
imul
jge
pop
add
loopne
add
loopne
in
scas
inc
mov
andl
in
jle
adc
daa
mov
or
or
xor
je
mov
xchg
mov
mov
and
clc
push
push
jecxz
int
movsb
test
lret
sub
not
xchg
pop
mov
arpl
mov
aaa
jno
sbb
inc
mov
cld
scas
mov
pop
xor
test
aad
mov
lcall
loop
dec
js
inc
mov
movsb
pop
out
or
jb
inc
ret
roll
movsl
jo
sarl
arpl
xor
pushf
push
inc
pop
je
out
mov
or
mov
pusha
sbb
lods
jns
adc
cwtl
xor
and
add
stos
xor
aas
test
in
jae
xor
cmp
iret
sbb
insb
sbb
mov
cmc
rol
sbb
mov
xor
pusha
inc
sub
pop
xchg
movsb
lea
int
idiv
adc
fistps
jmp
fsts
pop
mov
add
jl
in
imul
decb
mov
inc
sub
jnp
jmp
dec
xchg
inc
fsubs
xchg
test
cmp
sbb
mov
aas
mov
stos
fisttpl
pop
mov
fiadds
pop
test
fnstsw
inc
fcomps
or
imul
ret
call
aas
sbb
lods
dec
aam
scas
cmp
jno
and
insl
push
push
lock
cmc
sbbl
aaa
and
orl
repz
dec
xor
sbb
insl
gs
cmp
mov
in
mov
jbe
lret
push
push
xor
lods
jl
sbb
shl
dec
sub
mov
xlat
test
inc
mov
ret
xchg
imul
cmp
mov
mov
movl
push
movl
pushf
lea
jmp
pushf
pushf
popl
pushf
xor
call
push
pusha
pushl
movl
pusha
jmp
sbb
push
fidivrs
push
iret
sbb
leave
and
lret
xchg
out
rorb
push
mov
adc
add
int3
ficoms
int3
pop
es
inc
jnp
pop
xorb
and
popf
fwait
call
mov
pushf
pop
inc
sahf
loope
add
fsubl
mov
jp
pop
sub
hlt
mov
insl
mov
loopne
jmp
mov
arpl
push
jle
in
and
inc
jne
sbb
ret
cmp
sub
sti
cmp
clc
out
outsl
roll
cmp
sub
xor
scas
in
ret
pop
test
int
clc
lock
push
test
and
mov
jmp
lret
push
mov
dec
push
mov
mov
cltd
cs
pop
outsb
call
lcall
mov
dec
or
cmp
sub
mov
or
fildl
mov
jmp
mov
decb
call
fisttpll
xchg
movsb
inc
int3
add
xor
pop
in
test
test
xor
dec
cmc
data16
dec
mov
cmp
push
mov
or
inc
cmp
mov
jnp
mov
mov
cmp
cmp
xor
dec
icebp
gs
mov
out
ret
nop
or
loopne
or
pop
test
int
aad
mov
pop
sub
lret
xchg
pop
sub
jns
cmp
ljmp
xor
push
in
jnp
pusha
sbb
mov
pop
in
xor
or
loopne
dec
cmc
test
sbbb
add
sbb
lock
cli
xchg
sbb
mov
xor
cmp
dec
mov
popa
popf
jle
fbld
ror
inc
outsl
arpl
inc
dec
mov
xchg
mov
dec
and
out
data16
fsubrs
stc
and
mov
scas
inc
add
hlt
lahf
and
sub
jo
xor
repz
pop
mov
addr16
mov
shlb
stos
repnz
dec
cmp
jmp
mov
stos
pushf
cmp
push
inc
arpl
adc
xor
ret
cmp
hlt
mov
je
icebp
orl
pop
sbb
add
sub
mov
gs
push
pop
icebp
cmpsb
dec
add
dec
notb
out
scas
jle
outsb
xor
adc
sub
je
nop
and
loopne
leave
lret
xchg
jae
mov
inc
imul
shr
out
and
loop
inc
sbb
aaa
fsubr
mov
cli
inc
sar
adc
pop
sbb
jns
push
mov
mov
out
lret
and
sarl
adcb
push
rorl
sbb
addr16
jmp
into
sarl
outsl
mov
mov
movsl
mov
dec
xor
jmp
je
cmc
js
sahf
adc
and
dec
fld
inc
mov
add
pop
gs
or
sub
dec
rcl
and
xchg
xchg
jl
call
push
pop
push
fwait
or
cwtl
pop
movsb
inc
outsl
adc
xor
lock
xchg
jo
push
cmp
jbe
jmp
lahf
add
add
cmp
idivl
and
mov
inc
fists
cmp
cmpsl
mov
add
cmc
jmp
mov
sbb
fdivr
in
neg
add
mov
pop
sbbb
addr16
adc
xor
sbb
mov
and
data16
test
out
and
xor
pop
xor
jo
into
mov
shlb
sbb
xchg
pusha
movl
pusha
push
push
lea
jmp
aam
pop
xchg
adc
sbb
pop
push
scas
call
dec
fwait
repnz
shll
pusha
dec
scas
jae
and
jp
mov
scas
cmp
mov
sar
xor
sarl
popa
push
rcrl
lahf
cmp
rorl
pop
pop
out
jae
dec
lret
add
aaa
sub
call
xchg
mov
and
cs
and
sub
add
int
insl
and
and
and
push
daa
rcrb
leave
lea
ds
arpl
inc
movl
adc
mov
push
jns
pop
test
sbb
and
out
mov
dec
mov
dec
sti
gs
arpl
cmpsb
add
mov
int3
mov
ret
cli
das
sbb
js
cltd
or
xchg
bound
pop
lret
sub
cmp
popf
sbb
ror
lahf
lret
mov
pop
mov
cmp
xchg
xor
imul
subb
cltd
push
mov
std
cmp
push
aam
popf
xor
mov
call
xchg
arpl
mov
push
dec
add
xchg
jp
and
mov
data16
stc
enter
sti
lds
idivb
sbb
add
bnd
subb
stos
mov
test
sub
push
je
enter
and
push
icebp
or
cmp
jno
jl
ljmp
push
popf
pop
clc
adc
or
xchg
lret
pop
mov
or
pop
pop
loopne
rcll
and
mov
push
ljmp
xor
mov
pop
das
jg
outsl
and
jl
adc
inc
push
inc
aaa
rclb
inc
adc
push
xchg
xchg
pushf
lods
es
out
cmc
insb
pusha
xchg
inc
xchg
fwait
shrb
jne
in
and
outsb
cltd
mov
or
and
ds
adcl
cmp
mov
push
pop
aaa
aam
adc
or
lcall
inc
scas
lret
push
cmp
inc
xor
pop
pop
and
and
jmp
es
jl
xchg
mov
les
loop
mov
int
lret
ret
jo
xor
xchg
inc
xor
mov
dec
mov
sbb
outsb
sahf
movsb
movsl
js
jg
in
cmp
and
pop
mov
inc
xor
adc
xchg
xchg
fbld
sub
cmc
test
out
jbe
push
test
push
lret
out
mov
test
std
sub
and
sub
xor
rcrl
fsubs
sub
push
cwtl
fiaddl
fcompl
fidivs
and
fmuls
sbb
mulb
jne
push
cmp
mov
inc
in
sbb
add
push
push
sahf
sbb
or
les
inc
int
inc
dec
xchg
jmp
xlat
mov
sub
and
sub
iret
mov
shll
rclb
or
ljmp
test
dec
xchg
cmp
nop
popa
sub
jo
cmp
pop
fistpl
in
jno
cs
jl
sbb
or
ljmp
test
les
cli
mov
loopne
js
and
adc
cmp
xor
sub
xchg
push
sub
and
dec
or
sbb
movsl
sub
mov
xorl
mov
lods
push
adc
add
aaa
in
mov
das
jbe
xor
and
add
adc
sub
xor
out
lcall
cwtl
lea
lcall
idivb
adc
dec
popf
xor
mov
stos
jo
cmp
filds
iret
lret
in
fnstenv
scas
aaa
or
adc
pop
jge
pusha
jno
lahf
fldt
lcall
fwait
and
cs
imul
les
push
or
test
jbe
push
out
xor
orb
pop
pop
mov
jmp
rcr
inc
shl
and
jge
arpl
fisttpll
stc
dec
mov
jb
pop
fisubrs
mov
jbe
xor
lcall
cmp
push
add
leave
adcb
test
jp
mov
adcl
mov
popf
xor
add
jb
and
push
mov
inc
and
jne
leave
pop
fcompl
stos
xor
lcall
icebp
or
adc
jge
xchg
xchg
mov
adc
test
cmpsl
daa
sub
dec
cmc
mov
pop
popa
retw
daa
mov
rcrb
ljmp
and
mov
dec
mov
pop
cmpb
pop
repz
jb
inc
les
mov
hlt
sub
mov
xchg
xor
out
xchg
je
cmp
jae
fisttpl
push
xchg
imul
sbb
add
push
mov
int3
pop
hlt
xchg
outsl
hlt
jno
cmp
data16
ret
ret
and
mov
dec
xor
inc
leave
push
jecxz
xor
xor
inc
fisubrl
and
jb
movsb
into
cmp
mov
mov
add
mov
pop
xor
test
add
inc
mov
push
test
dec
mov
mov
mov
pop
push
mov
stc
pop
jns
test
push
add
jnp
jmp
pushf
adc
cmp
dec
out
or
fucom
xor
int
dec
mov
div
addr16
or
jle
pop
stc
test
mov
mov
xor
pop
stc
aad
test
sahf
sbb
pusha
loopne
int3
stc
sbb
pop
add
pop
arpl
mov
pop
sbb
in
ficoml
les
jns
dec
in
mov
fimuls
xor
iret
mov
popf
lcall
sahf
std
push
sub
sbb
insb
ret
cltd
and
inc
loopne
mov
shl
bound
fs
mov
mov
sti
sbb
xor
mov
out
test
push
lods
sub
jmp
jecxz
xchg
outsb
and
dec
loop
out
jecxz
outsb
or
dec
cli
sub
repz
jae
ja
or
lds
sarl
jmp
hlt
xchg
add
out
test
fwait
sbb
push
xor
pop
or
push
cmpsl
adc
push
pop
jb
mov
outsl
mov
xchg
pop
cmp
nop
jbe
and
cmp
jl
repnz
mov
nop
cmpsl
mov
xor
lahf
imul
push
cmp
into
and
repnz
sbb
jl
dec
jmp
pop
sub
and
aad
sub
stc
imul
outsl
and
xor
data16
les
mov
cmc
fdivs
xchg
dec
cmp
fwait
inc
cli
ret
push
dec
adc
sbb
jo
jge
jb
pop
pop
popa
leave
frstor
clc
xchg
mov
mov
mov
test
xchg
fsubs
fisttpll
js
shlb
cltd
rolb
insb
mov
nop
mov
mov
sub
repnz
sti
out
rcrl
insl
push
sti
xchg
lret
cmp
push
rcll
lahf
fisttps
xchg
aad
fistpll
sarb
cs
pop
pop
lds
outsb
push
mov
mov
clc
out
sbb
cmp
push
inc
movsb
out
or
dec
sub
loop
sar
mov
or
jb
imul
aad
hlt
push
add
out
pushf
subb
lret
pop
stos
mov
mov
xor
xlat
mov
je
out
es
xchg
lea
lods
cmc
and
cmc
jge
bound
mov
add
mov
or
test
mov
dec
aas
data16
mov
mov
xor
test
jle
iret
lahf
daa
mov
loope
pusha
xchg
xor
adc
lods
push
mov
mov
jbe
jecxz
nop
cltd
out
shrb
lods
lods
xchg
cmp
mov
shlb
inc
insl
pop
jecxz
xorl
mov
les
adc
jge
xchg
or
jnp
xchg
or
sti
add
jbe
cli
test
cmpl
add
xchg
mov
mov
adc
fldt
mov
fincstp
in
lea
xor
pop
sahf
icebp
es
cli
ljmp
fsubrs
mov
and
jo
adc
mov
and
arpl
xchg
fbstp
cmp
stos
leave
roll
jecxz
jmp
popf
inc
cs
jecxz
repz
repz
fnstsw
or
sbb
repnz
lock
testb
in
enter
ja
pop
int
and
popa
popf
jge
cli
iret
lahf
xchg
aaa
cmpl
jge
outsb
jno
add
mov
pushf
or
jnp
jo
adc
push
and
imul
jae
and
jp
nop
repnz
test
std
lds
jns
leave
adc
loopne
fs
in
stos
cltd
iret
pop
aad
shr
pop
pop
insl
ds
jp
bswap
pop
or
jecxz
lahf
or
inc
enter
fcmovnb
dec
popf
cmp
push
mov
dec
pop
inc
enter
push
adc
dec
ljmp
xchg
cmp
scas
xchg
inc
pusha
cwtl
adc
pusha
xor
sub
xchg
mov
pop
lret
bound
push
add
lods
or
mov
stos
stc
mov
aam
xorl
bound
popf
popl
push
sub
std
sub
or
cmc
gs
clc
gs
movsb
mov
iret
inc
mov
mov
sahf
mov
rorb
xchg
outsb
fnsave
mov
add
add
or
fmulp
sarl
or
scas
xor
sbb
jl
ja
jnp
dec
xchg
int3
and
data16
stc
sbb
scas
sbb
fistpl
mov
push
cmp
adc
pop
fsin
in
loop
push
pop
ss
in
insb
pusha
add
leave
iret
xor
test
fwait
cltd
les
sub
pushf
sub
mov
dec
dec
aam
pop
add
push
sarb
or
nop
jmp
jmp
push
cld
mov
test
or
out
pop
in
fwait
push
mov
test
ficoml
jmp
insl
loop
fstl
fwait
sbb
and
cltd
jnp
es
das
mov
in
jns
out
adc
fidivrl
cmpl
and
mov
mov
jge
sub
out
dec
imul
lods
aas
insb
xchg
pop
jmp
fdivp
gs
or
aam
jmp
arpl
addr16
jecxz
sti
cmp
sub
insb
sbb
roll
push
loop
xor
in
jae
adc
lcall
dec
jg
insb
mov
cs
pop
stos
fcmovnbe
outsl
sbb
pop
and
cmp
ja
sahf
inc
fsincos
jb
fs
or
jno
mov
int
sahf
dec
lcall
jno
cmp
add
fwait
fs
outsb
pop
cmp
xor
xchg
shlb
hlt
js
out
xchg
jg
jne
dec
push
cmp
cmp
cmp
add
push
stc
cmp
jb
fisttps
ja
mov
cmp
push
push
stos
jecxz
jb
or
mov
call
or
into
addl
cltd
jmp
mov
sti
jne
adc
mov
mov
je
sub
sub
adcb
mov
cmp
xchg
add
and
push
mov
cmc
xchg
jne
ret
adc
dec
xor
add
pop
pop
cltd
mov
dec
ja
es
roll
xor
mov
mov
sub
les
xchg
data16
idivb
or
int3
bt
xor
push
xor
push
cmp
xor
clc
push
xor
movb
pushl
popf
movb
pushl
ret
mov
movl
pusha
push
lea
jmp
movl
push
call
movl
lea
jnp
push
movl
call
xor
pushf
xor
movl
bt
xor
bt
xor
bt
xor
jmp
call
xorl
call
xor
test
pushf
xor
call
mov
clc
mov
lea
es
push
push
sahf
jmp
mov
pop
popa
dec
xor
loop
mov
adc
inc
adc
inc
sub
bound
or
adc
adc
lea
inc
sahf
mov
mov
in
rclb
adcl
popa
cmc
cltd
push
mov
mov
push
jne
sbb
xchg
add
pop
fbld
inc
xorb
xor
push
mov
push
mov
jg
pop
jmp
sti
pop
mov
enter
out
scas
loopne
push
adcb
jae
decb
add
adc
sti
push
sub
inc
push
les
inc
xchg
sbb
or
adc
jle
mov
cmpsb
dec
mov
xchg
das
jp
inc
cmpsl
xchg
push
mov
jns
mov
pop
in
mov
mulb
cmp
or
pop
movsb
cmp
mov
fisttps
in
rcrl
jl
xchg
pop
cmp
jnp
dec
test
insl
pusha
sbb
clc
lcall
sti
inc
or
lahf
jl
lret
mov
imul
repnz
dec
inc
sub
mov
cmp
mov
add
or
inc
dec
jmp
push
dec
adc
fsubrs
jo
pop
stc
mov
push
ror
dec
test
je
inc
ds
pusha
add
lea
lret
mov
lret
xchg
mov
dec
xor
into
je
cmp
hlt
scas
jns
pop
test
xor
mov
push
in
aas
testl
sahf
cmp
hlt
adc
and
ficompl
inc
add
push
mov
adc
loop
xchg
or
stc
adc
or
das
ret
push
lret
push
mov
jl
push
in
cmc
mov
jae
addr16
sub
aas
and
pop
lcall
js
pop
aaa
push
jbe
or
idiv
loope
in
mov
fimuls
sbb
mov
push
and
lret
cmc
out
stos
xlat
pop
fdivrl
stos
inc
popa
or
mov
das
jl
fstl
dec
jae
xchg
and
fcom
iret
lock
inc
mov
sbb
fwait
pop
and
cmp
xchg
or
leave
repz
es
or
pop
push
push
into
sub
push
jnp
jae
test
ja
dec
cmp
adc
orl
fnstcw
sub
mov
add
mov
xchg
and
inc
dec
enter
xchg
shr
movsb
cmp
imul
ret
cmp
xor
cmp
pop
lock
sarb
push
adc
xlat
loopew
ret
arpl
fnstsw
in
mov
mov
outsb
shll
sub
mov
pop
pop
adc
or
lods
xchg
and
inc
rolb
push
jp
iret
sbb
push
lahf
push
into
leave
ljmp
fdivrl
pop
jno
xchg
cmp
andb
data16
das
fcmovnb
adc
add
cld
xchg
loope
xchg
add
jecxz
adcl
dec
cmp
adc
and
push
jns
sbb
lret
inc
or
lahf
dec
dec
rcrl
test
pop
pop
jo
sbb
pop
cmp
or
hlt
arpl
mov
mov
insl
and
mov
push
fcmovnu
sub
and
test
push
idivb
or
fsubrl
imul
dec
fwait
jne
dec
jns
add
push
pushf
pop
mov
mov
rorb
push
out
imul
ucomiss
lret
mov
cmp
mov
stos
hlt
xchg
lds
xor
test
ffree
push
jae
call
je
insb
dec
rcl
rcrb
xor
push
inc
iret
add
push
fstpt
mov
cmp
jmp
and
xor
xor
lock
sahf
mov
mov
and
add
mov
sbb
fistpll
cmp
ds
mov
push
inc
jmp
or
mov
adc
sub
shl
lock
icebp
mov
cld
das
jb
inc
lcall
je
push
cmc
iret
mov
cmp
inc
mov
and
test
stos
std
ljmp
imul
lret
pushf
pushf
movb
lea
jmp
call
xor
stc
xor
cmc
call
pushf
movl
pusha
pushl
movw
lea
jmp
pusha
pushf
popl
cmc
xor
bt
clc
xorl
bt
mov
xor
pusha
xor
cmc
bt
xor
cmp
pushf
xor
cmc
xor
bt
xor
push
call
pusha
pushf
popl
clc
test
xor
clc
movl
xor
test
xor
movb
test
xor
jmp
pushf
popl
cmc
xor
push
xor
pushf
xor
movb
pusha
xorl
test
xor
movb
test
xor
test
xor
jmp
pushf
movb
jmp
pushf
pusha
push
pushl
movl
jmp
xchg
adc
in
xchg
test
imul
xchg
loopne
or
jno
flds
xor
adc
push
es
lock
or
xchg
sub
lcall
jo
int3
pop
ljmp
lods
das
outsb
pop
jmp
mov
in
xchg
inc
loopne
inc
popf
ficoms
mov
testl
inc
cs
mov
xor
or
xchg
cmp
mov
fwait
and
incl
jbe
insl
push
inc
mov
mov
xor
in
push
mov
lret
test
insb
imulb
or
repz
adc
sbb
mov
adc
jecxz
and
sbb
dec
xchg
and
cmp
movsl
dec
cmp
test
rcr
pop
adc
adc
add
inc
mov
aad
mov
add
sub
repz
inc
inc
push
cmpsb
repz
push
icebp
pop
xchg
xchg
push
lret
ds
insb
push
mov
movsb
push
stc
in
int
fprem1
cmp
shll
fisubrs
mov
push
jle
xor
jp
les
xchg
jge
hlt
inc
movb
sbb
popf
mov
fs
mov
jns
push
mov
or
pop
test
test
ret
stos
sub
sbb
xchg
je
aas
dec
xchg
clc
hlt
xchg
and
push
or
cwtl
sub
sbb
xchg
inc
dec
push
add
sbb
call
fiaddl
push
mov
and
aaa
testl
cmp
arpl
mov
pusha
xchg
addr16
and
sub
sub
daa
and
cwtl
push
cmc
sbb
or
clc
iret
fwait
sahf
dec
sub
inc
ja
call
testb
adc
cmp
pop
xlat
call
pushl
popf
mov
mov
pushl
ret
call
jmp
pushf
popl
pushf
xor
stc
xorl
bt
xor
pushf
xor
pusha
xor
push
xor
jmp
pusha
jmp
push
ljmp
cmp
push
jnp
cmp
loopne
adc
push
imul
push
arpl
sbb
add
dec
jb
hlt
roll
sbb
push
lcall
and
adc
scas
leave
xchg
inc
mov
popa
and
dec
out
add
push
ss
push
dec
in
jle
or
cmp
add
vmovsd
scas
leave
xchg
jg
adc
push
out
je
call
and
push
mov
push
jle
lods
and
hlt
loope
fldt
sub
jo
leave
xchg
in
movsl
lds
pop
lret
jl
scas
xchg
and
jo
mov
mov
sub
mov
fwait
and
xlat
push
ss
jae
popf
jno
rorb
mov
daa
sub
or
add
in
mov
add
cmpsl
pushf
daa
out
xor
cld
mov
jmp
inc
fimuls
out
fwait
sub
scas
mov
testl
lea
mov
sbb
xor
pusha
inc
cmp
mov
outsb
mov
inc
mov
xorb
outsb
or
fmull
fstpl
mov
cmpsl
test
and
out
mov
enter
sub
mov
add
fmul
stos
xchg
push
pusha
jmp
mov
mov
or
add
aaa
dec
int3
idivl
cmp
xor
fisttpl
mov
repz
movsb
cltd
mov
push
sub
mov
imul
imul
je
test
dec
mov
mov
sub
jl
adc
mov
test
cmpsl
fisttpl
add
push
mov
in
lds
pop
mov
test
mov
adc
daa
lret
xchg
daa
sbb
inc
in
mov
jae
nop
sbb
lods
add
addb
mov
pushf
jge
rorl
cmp
and
push
push
andl
sti
xor
das
iret
mov
mov
sbb
mov
xor
xchg
icebp
cwtl
xchg
adc
popf
jb
js
xchg
push
xchg
loope
sahf
and
mov
leave
lock
add
imul
loop
aad
lret
xchg
pop
push
outsl
push
jne
cmpsb
xchg
xor
push
stos
xchg
mov
xor
adc
rolb
or
adcl
dec
outsl
andl
add
cld
pop
movsl
outsb
cwtl
inc
call
xor
test
loope
mov
data16
pushf
adc
fwait
addl
aas
add
cmpsl
mov
push
addr16
in
pop
ret
xlat
mov
enter
push
in
std
pusha
xlat
xor
icebp
lds
sub
cmpb
xchg
dec
mov
sbb
xchg
dec
lret
sub
lret
rorl
cmpsl
sbb
pop
xchg
and
mov
aam
push
es
dec
mov
test
inc
test
add
scas
pusha
shrl
insl
out
jns
push
jo
jae
mov
sbb
cmp
scas
out
fstpt
fidivl
xchg
repz
mov
cli
jbe
orps
mov
dec
jb
mov
movsb
jl
sbb
pop
or
jmp
lds
add
xor
mov
sub
xor
xlat
imul
push
fwait
xor
inc
dec
ret
inc
test
dec
or
test
divb
lds
xor
bound
shll
les
cmp
jb
es
stc
imul
enter
fcmove
mov
je
rorb
add
out
adc
mov
mov
sub
lahf
inc
push
xor
mov
and
movl
mov
sub
or
pop
pop
mov
mov
int3
push
dec
mov
sub
sub
inc
mov
mov
xlat
push
stos
je
fisubl
testb
add
lret
xchg
push
fwait
and
test
in
rcll
outsl
cmp
and
imul
jl
mov
jno
out
daa
mov
mov
pusha
out
and
insl
jl
stc
inc
sub
ret
iret
jge
ret
ret
push
stos
mov
xor
add
push
pop
sbbl
mov
cmp
push
addr16
loop
add
push
in
mov
stc
add
push
adc
sahf
and
mov
dec
and
dec
cs
xor
mov
arpl
stos
sar
adc
loope
inc
inc
stc
outsb
mov
mov
mov
addl
mov
inc
pop
out
movsl
or
cmp
jb
jmp
inc
lret
cld
mov
push
inc
fldt
lea
sti
pusha
std
bound
cs
rcrl
popa
lods
dec
jp
icebp
sbb
sub
clc
dec
fwait
adc
dec
xchg
pop
es
arpl
pop
xor
inc
cmp
push
cmp
inc
xor
std
xchg
mov
fstp
fwait
loopne
dec
int3
rcl
mov
daa
test
popa
jmp
in
pop
mov
mov
and
dec
daa
scas
std
jp
xor
aaa
rol
and
hlt
subl
out
incl
lock
testl
movsb
sub
test
lahf
push
sbb
cmp
add
dec
aaa
pop
pop
mov
adc
inc
aas
push
xchg
and
popf
jns
jl
adc
push
mov
mov
pop
cmpsl
sti
leave
jecxz
xchg
or
test
lea
lds
js
fdivr
dec
jo
dec
or
push
shl
mov
scas
pusha
pop
adc
cmp
ds
mov
push
nop
outsb
popa
mov
jle
push
jae
add
jle
mov
jae
cmp
pop
mov
mov
push
sub
cmp
arpl
push
mov
sbb
popa
iret
mov
push
aas
ret
or
mov
shlb
cwtl
push
and
jbe
mov
jp
lea
clc
sti
enter
out
mov
dec
xchg
std
das
push
bound
jl
addl
push
aad
cmpsb
mov
inc
sub
ss
add
insb
fisttps
into
mov
insl
stos
xor
dec
addb
aas
xor
nop
pop
push
inc
imul
lds
or
add
pop
push
hlt
daa
les
pop
nop
aaa
shrb
lcall
cli
push
clc
in
push
push
fldl
ljmp
and
mov
mov
scas
pushf
rcll
xor
and
sbbb
out
or
cltd
cmpsb
push
std
stos
movb
ret
mov
call
mov
aad
push
mov
scas
sub
sbb
add
les
cmpsb
mov
aaa
iret
shld
aas
enter
daa
popf
dec
push
es
out
repnz
pop
mov
enter
or
and
dec
idiv
fidivrs
ja
or
pushf
inc
divb
inc
mov
pop
mov
out
outsl
mov
cmp
push
aaa
lcall
nop
data16
imul
push
loope
test
sti
pop
sbb
repnz
lret
les
push
int
xchg
sbb
jnp
mov
or
jge
ret
inc
test
cmp
inc
dec
sub
xchg
addr16
dec
mov
jle
pop
dec
mov
lret
adc
xor
mov
out
mov
loope
add
ret
out
mov
xchg
jmp
jg
idivb
jle
lret
je
adc
add
add
mov
imulb
push
cmpsl
stc
call
pusha
movb
pushf
popl
clc
call
push
pushf
movl
push
mov
pushf
pusha
lea
jmp
sbb
pop
in
stos
push
cmp
jle
das
jne
adc
mov
add
mov
scas
flds
aad
jecxz
rcrb
nop
and
ret
adc
push
dec
jae
pop
inc
test
pop
inc
cmp
jp
jg
cmp
pop
sti
jo
adc
dec
mov
mov
in
and
jp
adc
lret
xor
and
adc
ja
cltd
repnz
data16
jo
or
adc
jp
cmc
mov
mov
cld
loopne
mov
mov
mov
sbb
std
dec
xchg
push
sub
pop
dec
subl
shll
jbe
cwtl
jb
ret
push
gs
lahf
icebp
test
aas
aam
gs
int
in
jne
inc
mov
fidivs
les
jg
and
dec
das
data16
xchg
divb
not
jae
clc
xor
ljmp
mov
out
or
mov
mov
fbstp
std
repz
pop
add
add
add
repz
sarl
mov
mov
dec
test
adc
dec
mov
int
sbb
and
cmpb
jecxz
sub
pop
push
add
add
stc
sti
out
jno
mov
inc
dec
jg
jp
cmp
add
cmp
pusha
rorb
cli
out
push
sbb
popa
data16
pop
or
inc
mov
in
insb
arpl
scas
pusha
call
movsl
sub
sub
rorb
cld
push
add
xchg
sbb
inc
pusha
push
out
ss
loopne
xchg
leave
adc
fistl
cmpl
movsl
movsl
mov
addb
push
lret
jmp
fwait
in
lods
in
lds
popf
and
mov
adc
mov
or
test
shr
pop
push
into
mov
xchg
test
je
add
dec
idivb
jnp
sbb
movsb
sub
in
pop
mov
sbb
add
or
test
mov
push
movsb
pushf
cmp
jne
test
xchg
in
hlt
aas
fstl
std
test
xchg
add
jnp
jp
xchg
mov
sbb
out
fistpl
aas
orl
iret
scas
daa
fstps
cmp
fs
dec
jne
mov
dec
xchg
es
ficompl
imul
sub
jne
pop
insb
jb
insl
test
sahf
inc
or
jae
adc
outsl
or
test
stc
and
pop
push
loop
or
sbb
mov
push
cs
mov
add
cmp
pop
pop
adcb
xchg
adc
ljmp
cltd
mov
sbb
ljmp
addr16
cmpsb
inc
fbstp
adc
push
fildll
out
adc
xor
pop
push
dec
pop
insb
ja
shll
sub
in
add
addr16
mov
adc
lahf
cmp
jecxz
std
cli
lcall
shll
icebp
inc
nop
into
pop
hlt
mov
or
jg
push
push
je
pop
pusha
push
xor
call
adc
jmp
inc
jbe
fstpt
in
loopne
dec
daa
test
mov
pusha
cmpsb
out
bound
in
inc
jo
int
cs
pusha
xchg
ret
or
sbb
sub
pushf
cwtl
stos
xor
outsl
push
in
mov
xchg
cmp
hlt
add
mov
sub
and
mov
lcallw
out
pusha
pusha
xchg
mov
inc
addr16
pop
idivl
mov
mov
sub
aad
jbe
and
jle
inc
jbe
or
sub
sub
inc
xlat
je
mov
das
jmp
xor
sub
ret
mov
jle
xor
test
fisubs
sbb
js
dec
sbb
add
insb
pop
cmpsl
pop
pop
mov
rclb
pop
mov
dec
filds
sub
add
mov
jae
out
mov
inc
pop
inc
in
cld
cmc
jecxz
push
push
sahf
into
ret
push
aam
mov
loop
out
in
addr16
mov
pop
dec
ja
xorl
stc
addl
xor
ja
or
cs
js
mov
leave
dec
sti
jl
aas
cmp
loope
xchg
or
or
mov
push
mov
xchg
cmp
sbb
jb
add
cmc
lds
cmp
fcmove
push
adc
mov
test
push
out
sub
mov
cld
icebp
sbb
pop
xchg
aas
xor
ret
out
rcrl
mov
mov
outsl
and
cmp
cmp
push
pop
mov
cwtl
jne
cmp
jnp
data16
sub
mov
pusha
mov
mov
xor
jae
hlt
test
stos
dec
nop
fcos
imul
adc
cmp
jnp
cmp
push
popf
aas
ja
pop
xor
lahf
test
lock
pop
inc
cmp
loope
nop
inc
in
outsl
push
mov
call
stos
jns
es
lea
clc
mov
pop
xchg
cmp
jg
xchg
sbb
mov
mov
je
mov
lods
inc
sbb
xor
cmp
pusha
xor
cmc
xorl
cmp
xor
movb
clc
xor
test
xor
push
cmp
pushl
popf
movb
push
pushl
ret
jmp
call
mov
pusha
lea
jl
push
pusha
mov
lea
jmp
xor
cmc
call
jmp
fcmove
and
in
movsl
data16
push
test
sub
jle
test
cmc
jle
pop
dec
xchg
out
sub
mov
inc
cmp
clc
mov
ja
cmp
mov
out
popf
in
pop
gs
or
mov
mov
popf
jae
call
pusha
pop
cmp
and
dec
sub
dec
sbb
cs
push
cmp
and
mov
sub
or
xor
or
mov
pop
out
xchg
mov
xchg
jl
sahf
mov
adc
lods
sbb
inc
in
adc
lahf
sbb
mov
mov
fisttpl
mov
dec
xor
aam
mov
std
inc
inc
and
lret
cmc
out
mov
xchg
adc
pop
pop
addr16
push
mov
mov
jle
jmp
push
dec
ss
cmp
sub
add
push
nop
xchg
jecxz
insl
jmp
jno
mov
mov
imul
rclb
cmc
sub
xchg
jne
push
adc
bound
push
jb
sub
mov
leave
xchg
push
dec
jb
movl
push
lea
jmp
pushf
call
pushf
pushf
popl
jmp
call
jmp
jecxz
cmpsb
xor
adc
jecxz
or
bound
loope
xchg
ret
xchg
pop
or
stos
xlat
jbe
dec
pusha
les
xchg
adc
push
xor
outsb
mov
rcr
push
sub
xchg
mov
cmp
adc
addl
test
je
out
mov
mov
jecxz
push
jge
sub
fwait
sbb
cmp
addr16
push
mov
outsb
sub
mov
movsb
sub
filds
addl
ds
jecxz
inc
mov
test
xor
dec
mov
mov
fldenv
mov
insb
repz
cmp
cwtl
cwtl
or
enter
outsb
loope
sbb
jbe
cmc
mov
dec
in
insb
xor
and
mov
call
lock
iret
mov
movsl
fisubrs
test
pop
rolb
insb
sti
movsb
shll
dec
lret
imulb
mov
rolb
mov
data16
sub
inc
lock
hlt
lds
pop
loop
imulb
sub
ret
out
loop
arpl
imul
fimull
or
and
loopne
inc
addr16
xor
cltd
ds
pop
roll
sub
int
cmp
lea
lret
and
arpl
inc
imul
mov
push
pop
or
dec
pop
ret
jnp
fwait
and
jnp
mov
das
sub
and
xchg
shll
push
test
js
sbb
pop
mov
mov
mov
dec
testb
fistps
test
mov
cmp
imul
negb
push
incl
mov
out
rcr
sub
cmp
dec
xchg
das
scas
out
adc
or
addl
loopne
adcl
out
jg
xor
andb
insl
pusha
xchg
add
mov
jle
hlt
ret
xchg
sbb
ror
xor
mov
jmp
push
pusha
pusha
lea
jmp
in
sbb
inc
std
sbb
js
mov
push
inc
mov
sbbb
insl
sbb
loop
and
js
mov
fcmovb
pop
je
mov
jno
int
mov
scas
and
ljmp
push
dec
std
sbb
sbb
xchg
lods
cld
dec
sub
leave
not
jae
loop
loopne
popa
or
aad
xor
jo
cmc
or
sti
nop
mov
add
std
sbb
add
orb
shll
fwait
inc
imul
insb
negl
cli
sti
and
mov
bound
add
lock
sti
cwtl
mov
xchg
and
and
mov
loop
mov
int3
xchg
jbe
cld
test
lret
mov
loope
sbb
push
cltd
push
mov
insb
insl
inc
adcb
dec
push
pop
es
push
lahf
sub
insb
imul
adc
ljmp
popf
xor
jno
dec
in
roll
in
cmp
push
jmp
ljmp
sub
sbb
or
pusha
push
icebp
pop
dec
sarl
pop
mov
rcl
and
adc
push
add
pop
ja
ret
scas
xchg
adc
or
jl
xor
imul
xor
sub
jecxz
repz
adcb
std
jae
sar
repz
mov
es
out
pop
sbb
add
sar
fwait
push
rcrl
or
shrl
ss
cmp
dec
out
push
jle
neg
cmp
nop
pop
add
xchg
jnp
data16
test
or
hlt
and
mov
sahf
push
out
inc
pusha
fcoml
mov
xor
insl
out
insb
loop
popa
iret
js
adc
cld
pop
pop
nop
push
fsubs
mov
mov
mov
je
sbb
and
mov
lret
xor
xchg
sbb
pushf
lcall
data16
ja
repnz
jmp
test
or
add
sbb
hlt
pusha
jae
insl
jae
std
sub
adcb
xchg
cld
addr16
cmp
pop
mov
adc
xor
adc
rolb
cmp
arpl
in
xor
cwtl
jne
and
mov
enter
test
mov
into
lock
int3
mov
lret
or
idivb
int3
repnz
lcall
ds
cmp
xor
jmp
mov
movsl
mov
xchg
add
inc
dec
pop
mov
xchg
add
mov
or
push
ja
jp
push
in
jg
dec
xor
mov
or
jge
mov
repz
xor
pop
jns
fwait
sub
mov
aam
arpl
pop
xor
je
dec
lcall
lock
lods
adc
call
insb
sbb
jns
xchg
mov
cld
lods
xchg
xchg
enter
cmpsb
mov
rolb
mov
out
push
outsb
mov
call
jl
fcmove
mov
jo
popa
enter
das
cmpsl
arpl
test
call
add
les
push
fdivrs
ljmp
test
jge
mov
jae,pn
inc
mov
sub
inc
insl
mov
sarl
dec
xchg
fsubrl
fsubl
stc
int3
rcl
xor
cmp
jmp
xor
xor
scas
push
scas
movsl
jge,pn
inc
dec
cmc
sahf
loopne
xchg
ret
mov
shll
test
inc
out
fs
insb
or
mov
jns
dec
cmp
jo
jmp
xchg
test
xor
outsl
sbb
xchg
sub
dec
fiadds
lret
out
jne
sbb
jle
ja
jae
loopne
in
cs
mov
pop
push
xor
push
imulb
ret
lret
add
out
sub
pop
cs
je
pushf
cwtl
sahf
push
sbb
adc
jae
cmc
aas
rorb
dec
cwtl
xor
les
pop
push
pop
ljmp
mov
mov
mov
fisubrl
iret
aam
cwtl
and
fwait
int3
jg
xchg
lods
add
adc
in
pop
popf
es
mov
mov
sbb
xor
add
in
jne
lret
iret
sbb
jmp
inc
or
sbb
ja
pop
cmp
xor
cltd
inc
je
or
shll
icebp
adc
inc
dec
cmp
push
icebp
jl
jae
xor
ficompl
clc
in
stc
and
mov
push
popf
xor
mov
pop
and
lds
stos
jbe
mov
aas
test
mov
aam
push
inc
in
test
stos
xchg
sbb
push
cmp
pusha
push
int3
outsb
fldenv
mov
xchg
jmp
mov
push
jg
addr16
jbe
xor
sarb
frstor
cmp
int
jg
adc
mov
ds
mov
jecxz
lret
std
shlb
mull
lea
jge
setb
gs
mov
ret
mov
xor
sahf
add
std
or
in
mov
dec
in
pop
sarb
fisttps
adc
push
cltd
adc
dec
testb
scas
dec
and
pop
insl
jb
das
scas
sub
xchg
or
rsm
data16
or
dec
push
xchg
iret
jbe
jb
into
pop
mov
sub
lret
or
rorb
call
mov
fucomp
dec
lret
cmp
dec
jbe
call
popa
adc
movb
sub
fwait
push
iret
xor
push
cmpsb
push
shl
and
lret
or
jle
call
lods
pop
or
xor
rolb
cmp
data16
aas
mov
sti
insb
mov
xchg
fidivs
xor
int3
mov
loopne
loop
in
dec
cmp
fwait
out
cmp
pop
pop
inc
scas
sbb
mov
adc
adc
loope
cmc
stc
std
mov
sahf
pop
popf
pop
vpcmpgtb
sub
or
mov
outsb
fimull
mov
loopne
incl
dec
lods
rclb
jbe
mov
int
add
call
andl
xor
add
cmpl
sub
jge
cmpsb
jnp
inc
aas
lds
xchg
pop
and
sti
call
stos
jnp
xor
jno
cmp
js
icebp
jbe
jae
outsb
mov
pop
out
cmp
mov
das
in
stos
enter
in
xchg
sbb
ja
ret
mov
sub
pop
pushf
pushl
je
test
push
xchg
lcall
imul
sub
aas
jb
inc
sub
push
std
mov
movsb
jecxz
jno
mov
aam
insb
pop
pop
lock
fsubr
cwtl
inc
in
add
push
sub
js
mov
and
call
jno
jns
movsb
and
daa
xor
cmpsb
dec
inc
ficomps
push
cmp
xchg
stos
out
mov
add
loope
test
xor
and
cli
fisubs
xchg
stos
cmp
jno,pn
jg
and
dec
xchg
js
ficoms
daa
pop
mov
in
xchg
fistpl
xor
mov
push
loop
ljmp
push
rcl
inc
mov
pop
push
and
mov
pop
and
dec
inc
arpl
push
xor
ffree
je
dec
lods
or
pop
inc
clc
push
scas
xor
pop
in
push
pop
mov
mov
sbb
sbb
or
jmp
andl
movsl
test
test
je
jecxz
xchg
add
add
add
sub
push
scas
fs
in
jb
mov
popa
mov
divl
xchg
cmp
je
rol
sbb
sarl
mov
sar
outsb
loop
in
out
sbb
out
sahf
ret
dec
stos
pop
out
add
shl
add
sarl
cmp
outsb
fs
jge
iret
scas
add
and
jmp
hlt
adc
pop
movsl
cmp
in
loope
xchg
jp
fwait
lret
leave
sbb
cltd
xchg
cmp
and
pop
in
test
or
jg
push
jno
xor
or
mov
dec
adc
mov
or
xchg
mov
je
arpl
lahf
lret
dec
fistpll
idivb
push
inc
cmp
adc
shll
inc
and
stc
cmp
xor
cmc
stc
xor
push
xor
movw
xor
call
call
push
movl
push
pushf
mov
movw
lea
jmp
pusha
pushf
popl
push
jmp
sar
mov
neg
mov
inc
add
stos
sti
xchg
out
clc
lea
das
popf
dec
push
lcall
jno
ss
pop
test
and
cmp
fwait
cmp
cmpsl
aaa
pop
xchg
enter
add
mov
pop
in
cltd
inc
push
mov
xor
mov
subl
xlat
sub
and
into
rolb
lds
pop
dec
je
xchg
jl
xor
or
das
push
lret
jp
cmp
jne
pop
and
shlb
pop
jnp
into
rolb
xchg
inc
shlb
test
mov
ret
cmp
pop
call
add
cmpsw
ds
or
das
popf
std
shlb
add
push
mov
mov
push
or
xlat
pop
mov
mov
inc
aaa
lods
and
test
int
int3
inc
rorb
and
daa
cld
aad
in
fld
std
add
pop
fcoms
sub
int
sarb
fdivp
push
lret
add
nop
ret
scas
xchg
push
test
pop
pop
scas
cmp
stos
mov
cmp
sbb
jecxz
pusha
adc
jl
fwait
sbb
stc
lea
jmp
sub
std
fnstcw
jge
insb
jg
das
in
jne
nop
or
jle
in
pop
add
mov
fsubrl
push
dec
push
adc
mov
and
mov
iret
rcll
sub
int3
clc
outsb
mov
call
push
movsl
mov
or
pop
adc
jnp
sub
push
scas
or
bound
mov
jmp
cmp
rcll
insl
add
aad
add
ss
push
repz
outsl
into
push
and
int3
xchg
add
lcall
push
loopne
cmp
mov
inc
mov
stos
sbb
inc
lret
addr16
outsb
push
mov
pop
incl
inc
jne
clc
mov
enter
jge
insl
mov
mov
jecxz
dec
rcl
and
movsl
aaa
cmp
loopne
mov
jle
rolb
aad
xchg
mov
xor
mov
mov
test
fnstsw
stos
fucom
rcrb
dec
aad
push
pushf
je
jne
xor
fs
lret
psubusb
std
pop
add
xlat
mov
pop
loopne
int3
pop
les
mov
jne
jmp
jle
sahf
or
mov
jl
cmc
daa
xor
cmp
push
lret
inc
pop
or
xor
jg
lcall
nop
push
push
ljmp
sbb
cld
idivl
daa
loope
jns
sbbb
fwait
movsl
lea
out
outsb
mov
dec
push
add
or
and
cmpsb
xchg
cli
xor
add
jg
cltd
dec
push
and
shll
mov
enter
push
sub
mov
pop
push
mov
cld
add
jno
adc
jl
jge
cmc
pop
rorl
mov
sub
dec
inc
mov
jg
es
cmpsl
xchg
leave
sub
dec
xor
jo
pushf
xor
imul
inc
adc
loopne
scas
inc
sbb
int3
mov
dec
cmp
test
in
sbb
ljmp
or
out
add
mov
stc
push
xor
pop
cmc
xor
ds
cmpsb
jge
add
fs
sbb
push
cmpsl
push
inc
stos
ret
ds
pusha
mov
and
xchg
addr16
jl
pushf
mov
cmp
in
mov
xchg
pusha
add
in
in
add
in
in
adc
cmc
mov
pop
test
cmp
cwtl
cmp
mov
jg
mov
lea
inc
arpl
jbe
leave
clc
ljmp
push
packssdw
in
push
mov
jne
sub
jbe
pop
data16
pushf
psubusb
push
mov
daa
jb
jmp
mov
sub
push
xchg
popa
sbb
xorb
lea
cltd
sbb
arpl
add
dec
int
and
in
movsl
or
mov
dec
adc
and
movsl
inc
test
mov
add
adc
xchg
aaa
ror
jg
push
jmp
cltd
das
mov
je
mov
xor
insb
inc
repz
mov
pop
inc
rorl
arpl
outsl
sti
or
insb
dec
ret
push
mov
pop
fistpll
rol
add
ja
repnz
incb
push
fcompl
lods
jge
push
ficomps
ljmp
or
in
or
rcr
pusha
dec
cmpsb
enter
sub
mov
cmp
clc
and
mov
mov
xchg
stos
data16
xchg
mov
outsb
jecxz
fbld
fsubrl
cmp
inc
mov
lea
push
popf
pop
mov
mov
adc
adc
add
sbb
xchg
jle
movsb
or
adc
mov
or
lcall
mov
arpl
dec
cs
mov
and
jecxz
fists
imul
inc
jae
xchg
out
lahf
cli
xor
inc
or
call
arpl
lods
fwait
add
jo
adc
inc
or
out
scas
imul
mov
sbb
push
into
dec
int3
lret
cmpsl
xor
ss
call
xchg
dec
stc
lods
cmp
cld
cmp
out
call
mov
add
fidivrs
mov
or
imul
sbb
mov
push
inc
aad
pop
aas
and
xor
push
sarb
frstor
jg
mov
jge
add
mov
push
ret
jg
sbb
aam
call
adc
mov
popa
ljmp
mul
inc
jle
xlat
inc
mov
jae
cmp
in
imul
xchg
ss
cltd
fisttps
cmp
pop
xchg
push
push
test
push
mov
cmp
add
sbb
lds
out
int3
sub
test
mov
add
into
je
jle
dec
in
xor
push
jb
mov
aam
mov
pop
insb
jmp
push
enter
push
or
jl
mov
sub
loop
push
xchg
shr
lods
loopne
pop
out
mov
scas
adc
adc
xchg
inc
xor
ret
adc
js
push
fcoms
das
clc
xchg
popa
popa
xlat
sbb
xchg
andl
fwait
push
iret
jne
outsl
sbb
sbb
jb
mov
pop
cmp
cld
push
fbld
inc
cmp
fwait
inc
pop
inc
in
test
dec
out
aam
push
push
inc
xor
inc
mov
rcr
insl
inc
jno
push
push
loopne
cmp
addr16
adc
insl
pop
mov
pop
inc
mov
and
dec
mov
mov
enter
cmp
ret
xorb
add
mov
into
xchg
scas
add
inc
cmp
aam
loopne
sahf
int
subl
sti
out
mov
cmpsb
mov
loopne
sar
nop
dec
mov
cwtl
jnp
mov
les
and
fmulp
push
mov
shl
sbb
sahf
jno
cld
cli
dec
into
cpuid
aam
jnp
out
pop
sahf
mov
xchg
in
scas
inc
imul
repnz
movsl
push
scas
push
cmp
out
stos
push
mov
push
fdivs
add
movq
repnz
mov
ss
mov
and
and
loopne
xchg
movsb
sub
pop
cs
push
sub
sub
ficoml
or
xor
mov
sub
test
mov
sub
and
inc
mov
pop
or
movsl
sahf
cld
sarl
nop
inc
sahf
xor
aas
lods
jns
sahf
into
cmp
xchg
imul
lds
mov
pop
test
repz
arpl
std
dec
push
pop
stc
push
xorl
cmp
xor
mov
pushl
popf
movb
pushl
ret
push
pusha
pushf
popl
bt
pushf
xorl
clc
xor
movw
bt
xor
test
test
xor
call
pusha
movl
push
movw
pushl
lea
jmp
xor
bt
pushl
popf
movw
pushl
ret
mov
movl
push
lea
jmp
pusha
mov
movl
mov
lea
jmp
pushf
movl
pusha
pushl
pushf
lea
jmp
movl
mov
pusha
movw
lea
jmp
pushf
pushf
popl
call
mov
shrb
jg
sub
cmp
fildll
jae
sbb
incl
lcall
in
lret
mov
jmp
mov
xchg
je
or
lcall
lahf
mov
xchg
sbb
jmp
aaa
cmp
push
fisubl
shl
push
scas
cmpsl
mov
lods
movsl
xlat
lret
adc
loope
lea
jle
mov
sbb
mov
icebp
xor
push
mov
and
dec
and
jl
jecxz
dec
test
sti
mov
xchg
pusha
sub
mov
idivb
pop
mov
push
movl
pushf
pushl
lea
jmp
jmp
push
mov
movl
mov
lea
jmp
xor
pusha
cmc
xor
pushf
xor
cmp
clc
xorl
bt
test
xor
stc
xor
push
xor
push
pushl
popf
push
mov
pushl
ret
jl
push
push
pushl
movl
pusha
movl
movb
pusha
lea
jmp
ret
clc
dec
jl
inc
in
cmp
inc
xchg
dec
loopne
push
loopne
push
or
icebp
mov
add
cmp
adc
rcrb
mov
cli
cltd
pop
call
leave
out
mov
jle
jle
arpl
lods
fldl
jp
cs
jno
in
cmp
ret
sub
js
xor
ret
sub
dec
insl
adc
rclb
ja
sub
out
push
push
jae
std
sbb
mov
cmp
add
mov
test
mov
jno
in
inc
int3
push
jnp
aam
aad
push
imulb
push
movsb
nop
fidivl
mov
shrb
mov
aas
pop
jnp
lods
sub
push
test
xor
push
sbb
jne
and
sbb
xchg
and
mov
jl
fdivr
jbe
adc
shlb
mov
jns
mov
lock
lods
xor
jmp
adc
xor
dec
or
lea
ucomiss
ds
sub
int3
pop
add
jmp
movsb
in
mov
push
jae
adc
mov
loop
stc
cmp
ds
pop
outsl
sub
push
xchg
test
jecxz
jp
sub
mov
jb
add
sbb
xchg
gs
outsb
push
xchg
cmpsb
fsubp
into
mov
scas
mov
dec
nop
mov
stc
jg
pop
push
andl
add
scas
ss
sbb
pop
addr16
fistpl
testl
sub
jle
sub
or
clc
xchg
push
mov
fidivrl
arpl
clc
pop
add
sub
cmpsb
mov
lret
fisttps
mov
stc
imul
ss
jb
jl
and
sub
mov
call
xor
mov
or
xor
sbbb
jl
mov
adc
js
movsl
mov
jmp
mov
enter
scas
push
fisubl
pop
xor
mov
sub
and
jle
mov
jnp
add
lahf
and
push
loopne
mov
mov
and
ret
push
das
mov
dec
loope
or
dec
xchg
int3
push
inc
xor
jae
pop
mov
addr16
int
mov
call
cmp
sbb
imul
mov
fldcw
cmp
ljmp
pop
fidivl
fmulp
mov
add
sub
xor
xchg
or
cmp
cmpl
dec
gs
or
pop
fimuls
loop
rorb
cmp
mov
stos
clc
fimull
dec
xchg
xchg
cld
sarb
or
cli
and
dec
push
cmp
or
loope
pop
mov
jmp
push
scas
ja
lds
in
adc
mov
out
stos
cmp
cmp
xchg
outsb
and
rcr
out
push
les
mov
inc
mov
pop
aas
daa
sti
sahf
out
mov
mov
stos
leave
div
xor
cli
orb
rcrl
and
mov
add
popa
push
movsb
mov
inc
ret
add
adc
gs
sub
mov
adc
aam
out
xor
aas
andl
roll
in
fildll
mov
jge
mov
repz
in
aam
mov
in
fistl
inc
pop
xchg
push
jmp
mov
lret
rcrb
daa
cmpsb
sbb
inc
shll
test
aam
xlat
xor
call
jg
sub
sbb
icebp
mov
sub
push
dec
add
mov
jno
xchg
in
out
and
mov
out
push
dec
jns
dec
ds
push
xor
pop
aad
insl
push
push
xchg
xchg
push
popa
cli
jns
dec
shlb
insb
dec
dec
jmp
test
in
scas
mov
and
daa
cmpsb
sub
inc
inc
lcall
loope
xchg
imul
xchg
jae
stos
int
pop
xor
orb
push
cmp
pop
popf
xor
scas
divl
xor
pop
push
xchg
xchg
xchg
ret
rcll
mov
jns
inc
jnp
mov
fidivrl
aas
cmpsb
mov
sbb
call
add
fcoms
cwtl
jge
in
sbb
aam
pop
cmp
sbb
das
push
xor
dec
int3
imul
inc
fiaddl
sub
cmp
mov
mov
or
sbb
pop
and
dec
mov
in
sub
shlb
adc
cmp
lcall
mov
cmp
outsb
insl
daa
jno
cwtl
shll
ja
push
mov
test
xchg
or
mov
popa
mov
mov
fiadds
and
push
movsb
ja
mov
int3
lret
aaa
repnz
enter
lods
sub
ficoms
cmp
or
lods
mov
mov
xchg
mov
mov
dec
xchg
das
fsub
fadd
fcoml
cmp
mov
movsb
jge,pt
mov
jnp
xchg
inc
dec
cmp
jle
mov
and
jg
out
rorl
addr16
jl
mov
and
cmp
add
mov
jns
cld
mov
out
mov
hlt
ret
cs
testb
lea
mov
imul
test
jb
stos
mov
scas
pop
jae
push
aaa
mov
aaa
add
cmpl
xor
add
and
repnz
and
inc
fistl
sbb
sti
in
in
mov
aas
in
in
push
call
loop
aas
popa
stos
xor
das
sbb
movsb
push
cwtl
aad
in
sub
bnd
jmp
ficoml
out
or
fcompl
mov
cltd
adc
mov
pop
and
std
sub
iretw
add
mov
lds
xchg
and
inc
pusha
fstps
js
imul
adc
addl
les
jne
xor
xlat
fcmovbe
es
outsl
sub
dec
xorb
xor
test
cltd
xor
mov
inc
aaa
loop
xchg
inc
push
pop
cltd
out
fsubl
and
test
dec
pushf
mov
decl
dec
stos
adc
inc
xor
mov
xor
push
enter
pop
lcall
xor
lahf
aam
stos
push
inc
adc
repz
xor
frstor
mov
pop
and
orb
push
cli
loope
mov
xchg
xorl
mov
in
dec
lcall
ds
out
adc
add
repnz
in
or
test
cmpsb
mov
xchg
add
cmpsl
insl
bound
enter
and
cmp
imul
out
jno
ljmp
adc
ret
inc
jne
jmp
cmp
inc
and
iret
inc
cmpsb
xor
sbb
repz
xchg
mov
xor
mov
call
call
jl
aam
and
fstps
jp
jp
popa
addr16
pop
je
cmp
mov
stos
pop
pusha
clc
dec
xchg
push
and
or
and
sbb
loope
repnz
dec
lret
lea
lea
or
jmp
push
mov
cmp
sbb
cmpsl
and
test
adc
fs
ret
popl
sar
rcrl
dec
push
jecxz
scas
xor
cmpsb
cltd
jns
inc
push
insl
pop
mov
inc
cmp
jp
lds
and
adc
mov
xchg
pop
mov
jno
inc
mov
stos
aam
push
movsl
mov
pop
jb
mov
inc
je
dec
ret
lea
xor
lods
aas
mov
daa
shll
adc
daa
aad
sub
mov
rolb
cmp
popf
inc
jmp
add
mov
ret
cli
fimull
lret
repnz
mov
insb
hlt
ja
push
arpl
test
repz
add
and
jg
mov
leave
push
jb
push
fcomps
arpl
leave
and
mov
cld
xchg
loope
pop
inc
or
ja
mov
outsl
movsl
xchg
sbb
ret
mov
mov
iret
out
cmc
push
xchg
dec
mov
cld
dec
adcb
mov
xor
rorl
shl
out
lds
push
or
sbb
xor
jbe
pop
idivb
push
dec
jae
pushf
popl
cmp
xor
cmc
clc
xor
pushf
mov
xor
pusha
stc
xor
movb
xor
call
mov
sbb
aam
jmp
pop
or
ret
push
pop
or
xchg
mov
sub
adc
and
arpl
sbb
fldt
jnp
mov
gs
psubsb
jmp
mov
adcb
pusha
test
imul
or
mov
faddl
push
cmp
pop
mov
cmp
or
dec
add
into
icebp
addr16
sub
jns
rcl
imul
inc
adc
inc
das
mov
hlt
fldenv
mov
fildl
es
sub
adc
test
mov
xchg
jp
push
in
add
jne
imul
sbb
pushf
ret
jae
inc
cmp
cli
gs
fcomps
test
cmp
push
scas
push
sub
adc
scas
or
pop
or
repz
dec
int3
dec
dec
popf
sub
xor
mov
rcll
dec
cli
insb
push
lods
inc
fimuls
gs
push
push
cwtd
dec
repz
mov
mov
and
pop
jmp
js
sub
ret
adcb
lcall
mov
add
inc
vpaddusw
fwait
jb
inc
aaa
push
mov
andl
arpl
inc
jg
mov
xor
sbb
jl
adc
imul
dec
jb
jge
cmp
sbb
clc
add
pop
jnp
fstpl
lcall
pop
ficomps
cmp
jae
cmpsl
cmpsl
int
decl
scas
mov
enter
pop
dec
fcmovnb
aas
loope
imul
mov
jo
iret
cltd
clc
jne
and
inc
or
sub
rorb
gs
gs
ja
adc
lock
stc
cli
adc
jno
iret
pushf
dec
xchg
aas
xor
mov
adc
jb
fdiv
je
sub
dec
cltd
mov
cmpsl
xor
and
mov
and
cmpsl
out
push
in
shl
cmpsb
movsb
icebp
jo
dec
ss
popa
imul
enter
hlt
jl
insb
insb
stos
je
or
aaa
fcoms
mov
ficompl
xor
add
loop
sti
push
hlt
xor
add
repz
in
inc
aad
add
xor
test
repnz
bound
adc
or
cmp
cmp
xchg
sbb
cmp
inc
lea
inc
dec
sbb
dec
pop
and
mov
xlat
push
mov
inc
bound
ds
xor
cmpsl
insl
jns
subl
add
imul
xor
inc
mov
and
push
dec
pop
xchg
popl
inc
and
cmp
cmpsl
mov
xor
mov
xchg
mov
jo
adc
in
mov
mov
add
aas
jmp
in
popf
mov
insb
loopne
lret
sub
inc
je
rep
cwtl
xchg
sub
ss
sbb
pop
pop
fmuls
inc
mov
fldl
je
enter
into
mov
sbb
inc
loope
imul
push
sub
jbe
stos
icebp
rorl
neg
icebp
in
out
das
ss
add
pusha
cmp
push
dec
insb
mov
scas
loope
xlat
pop
decl
mov
xabort
repz
lahf
adcl
sti
mov
loop
xor
mov
popa
jmp
out
sub
pop
pop
out
push
nop
inc
mov
das
jns
add
in
xchg
inc
pop
popf
and
add
leave
inc
popf
stos
call
lods
adc
pusha
fisubs
mov
dec
sub
dec
movsb
push
loop
adc
mov
sbbb
jge
hlt
cmp
stos
int3
mov
jno
test
test
ja
popf
aaa
addr16
sbb
jns
push
aam
icebp
sti
je
ficoms
jle
add
xchg
cmp
out
xchg
inc
in
stos
jge
aas
out
daa
sahf
and
orb
loop
cld
inc
aam
and
popf
stos
xchg
push
mov
xchg
insl
ljmp
iret
or
pop
in
push
jb
jae
dec
cs
jno
xchg
mov
mulb
and
dec
xchg
lret
jp
ds
leave
jg
dec
hlt
fwait
shl
movsl
aas
mov
in
neg
mov
call
pop
test
in
outsl
addb
negl
cmpsb
stos
idivl
push
dec
jno
rcrl
add
or
mov
cmc
enter
leave
or
iret
push
xchg
in
in
inc
dec
sub
fsubrp
inc
dec
int
fcomps
aaa
pop
ror
lock
xlat
dec
les
dec
popf
xor
jg
fwait
and
leave
pop
loope
repz
mov
xor
addr16
sbb
push
inc
dec
mov
mov
mov
mov
loopne
jb
rcl
fsubrl
ret
sub
insl
push
mov
arpl
movntps
mov
push
mov
aam
dec
frstor
push
jae
inc
jnp
push
out
outsl
aaa
mov
xchg
pop
mov
nop
adc
and
mov
xchg
mov
push
jecxz
push
push
mov
lds
and
lds
out
jmp
pop
inc
mov
dec
sbb
aaa
sbb
ret
out
mov
sarl
adc
jge
or
or
imul
mov
dec
push
out
fstps
cmp
jb
xchg
adc
pop
cmp
push
std
jbe
sarb
jle
ja
ja
cld
mov
sbb
xchg
mov
push
dec
je
lock
lea
mov
pop
push
dec
es
xor
jle
scas
cs
mov
imul
sbb
mov
sbb
mov
and
pop
dec
sbbb
aas
pop
aad
xchg
cs
xlat
aad
sahf
push
mov
dec
loopne
shrl
push
jg
lock
cmp
mov
mov
dec
fcmovb
les
out
sub
jmp
push
and
push
pop
test
xor
cmpsl
xchg
xorl
jg
push
in
ror
xlat
mov
pop
pop
outsl
push
jecxz
cs
cmp
jecxz
aaa
push
xor
dec
lods
dec
insb
sti
out
adc
out
inc
mov
or
out
mov
repnz
mov
hlt
mov
sarb
jno
loopne
andl
sbb
mov
das
insl
fcompl
lods
orb
nop
add
pop
bound
ds
pop
xor
push
ret
xchg
arpl
inc
fstl
aam
dec
fwait
jge
mov
ret
mov
sub
mov
cli
data16
mov
push
sub
xchg
mov
add
and
es
test
cmpsl
cmp
xlat
jmp
popa
sub
loop
and
cmpsb
arpl
js
pop
flds
test
mov
dec
test
dec
sub
neg
cmp
mov
cld
loop
and
mov
cmp
xor
dec
cmc
pop
pop
or
imul
xchg
loope
pop
bnd
aad
jecxz
xor
or
sahf
sub
repz
inc
sarl
push
push
syscall
ljmp
mov
incl
leave
xor
adc
mov
mov
fdivs
lock
push
jecxz
lods
loop
cmpl
jb
inc
rclb
jb
mov
stc
popf
cwtl
mov
test
out
mov
lret
sub
clc
stos
jbe
in
pop
aas
cmp
pusha
loopne
fs
divb
push
lds
jmp
adc
push
mov
xor
mov
jns
filds
test
gs
and
cmp
aad
ljmp
cs
mov
inc
pop
xchg
add
gs
pusha
pop
mov
loopne
mov
push
jge
mov
out
or
ss
lahf
push
jmp
loope
ret
inc
sub
nop
or
in
xchg
inc
jmp
orb
fstps
pop
jbe
mov
inc
int3
push
mov
sarb
pop
dec
inc
cmpb
xchg
pop
pop
mov
js
jns
jp
pop
lcall
fincstp
sub
xchg
cli
call
push
sahf
insb
cmpl
mov
clc
add
jbe
testb
lods
xor
inc
aas
mov
cmpsb
fldt
cmp
lea
daa
inc
or
mov
ret
out
adcb
icebp
das
scas
testb
iret
call
out
push
lea
insl
push
mov
les
mov
cmpsl
pop
mov
xorl
je
jno
lea
in
les
shr
xchg
inc
testb
jmp
lahf
pop
jo
fisttpl
scas
add
or
push
mov
xchg
shr
aas
lds
test
xor
dec
xchg
daa
test
xchg
loope
mov
inc
ja
sti
es
call
xchg
idivl
mov
das
test
lahf
fidivl
mov
mov
imul
stc
jo
int3
leave
or
lahf
inc
nop
fwait
and
cmp
pop
movsb
cmp
jns
push
inc
fistl
mov
pushf
je
lret
mov
pushf
dec
dec
cwtl
dec
mov
push
out
jne
sub
pop
out
loop
fstl
test
cmp
cmp
push
mov
js
mov
outsl
jmp
pop
bound
test
jnp
ljmp
cmp
pusha
or
dec
rcrb
mov
push
inc
mov
in
fcomps
sti
and
out
lea
jl
ss
jecxz
inc
or
fldcw
mov
mov
les
push
pushf
jge
sub
sbb
fimuls
mov
outsb
xchg
jle
or
cwtl
sbb
push
adc
pop
mov
ljmp
sti
mulb
xlat
dec
clc
out
dec
stos
sub
xchg
out
sarl
je
nop
and
int3
stos
xchg
es
ss
jle
dec
dec
loopne
call
test
mov
or
jge
mov
or
rcl
push
loop
rolb
inc
xlat
ret
shlb
das
imul
repnz
fsubrl
push
aad
mov
push
cmpsb
dec
fnstcw
mov
or
mov
ret
clc
fistl
aad
jae
adc
cs
lea
ljmp
mov
dec
outsb
imul
hlt
or
xor
mov
pop
and
fs
scas
int
sub
insb
sbb
ss
mov
lods
pop
int3
loope
mov
inc
les
inc
int3
adc
push
call
xorb
pop
fnstsw
inc
dec
add
jge
push
test
sub
pushf
sbb
adc
jno
mov
arpl
cmp
stos
push
icebp
sbb
cmp
insl
fs
cmp
arpl
jmp
adc
movsl
xor
rcrl
loop
int3
pop
pop
or
repz
sbb
inc
ja
insb
mov
xlat
and
int
push
ss
je
cmp
xchg
xor
adc
mov
pop
sbb
ficompl
sahf
in
jle
add
jbe
xchg
cmp
xchg
dec
mov
inc
int3
aaa
fs
std
add
out
aas
out
add
enter
mov
std
daa
and
add
mov
push
cmp
out
sub
incb
add
sbb
dec
scas
sbb
aam
cli
jg
push
rcrb
scas
sub
dec
cmp
out
es
dec
jecxz
repnz
cmp
pop
negl
jne
nop
aaa
mov
fsubs
mov
out
movsb
mov
xchg
sbb
test
xchg
adc
gs
aad
jne
mov
lret
and
mov
mov
push
aam
cmp
mov
and
movl
pusha
pushf
push
lea
jmp
xor
stc
xor
bt
call
pop
lea
xchg
repz
cmp
sub
lods
in
das
fimuls
notb
test
cmp
ds
push
addl
inc
fcom
pop
xchg
enter
roll
fiaddl
adc
movsl
cmp
xchg
jge
adc
ss
aas
daa
jle
out
nop
mov
stos
xchg
mov
repnz
mov
adc
andl
mov
mov
clc
cmpsb
cmp
mov
jle
out
pop
add
fnstsw
lret
pop
add
ret
fs
mov
movb
xchg
leave
pop
mov
cmpsl
push
pop
loop
cltd
sbb
jbe
inc
into
sbb
jle
out
adc
movsb
lds
sbb
push
add
das
lds
xor
hlt
sarl
xchg
xchg
imul
cs
or
and
xchg
mov
or
scas
cmp
clc
jae
adc
rcrl
add
jle
dec
jecxz
xor
neg
xor
subl
fdivrs
cmpsb
and
in
add
pop
out
test
pop
or
pop
andb
or
dec
jmp
jp
ljmp
out
push
inc
add
lea
sub
and
push
inc
lahf
cmp
xchg
fildl
jns
jecxz
dec
mov
into
cmp
les
arpl
cmc
lods
inc
sub
or
shlb
and
in
repnz
repz
ljmp
sbb
fisubrl
ret
xchg
dec
outsl
or
call
mov
xchg
mov
adc
incb
or
xchg
cmp
mov
or
push
sbb
sbb
loop
mov
jg
jbe
int
jno
decl
cmp
sub
test
xchg
xchg
pop
fcomps
daa
mov
loop
jmp
xor
mov
sti
cmp
pop
int3
fistpll
mov
xchg
xor
add
mov
xchg
adc
insl
push
sti
mov
cmp
int3
hlt
push
xchg
pusha
repnz
dec
cmp
or
fists
sbb
hlt
jno
pushf
call
dec
pop
xchg
push
and
stos
cmpsl
fwait
cmpsb
cltd
sub
mov
jnp
out
jl
dec
jne
pop
imul
jno
repz
scas
cmpsl
and
dec
cs
aam
mov
aad
push
shll
fwait
sub
mov
mov
loopne
xor
xchg
mov
fldt
sub
or
int
call
and
hlt
push
mov
adcb
aas
mov
call
jbe
cmpps
mov
push
mov
stos
mov
dec
cmpsb
mov
arpl
pop
imul
ret
push
xrelease
stos
lea
jge
pop
mov
inc
sub
jae
or
mov
and
lcall
nop
mov
js
out
data16
adc
jae
pop
je
mov
xor
mov
xchg
shll
add
imul
insl
inc
sbb
add
in
outsb
adcb
es
inc
and
mov
or
jecxz
dec
mov
add
ficomps
push
mov
into
or
rcl
pop
in
es
push
jb
cltd
das
sbb
push
inc
loop
jl
mov
test
mov
cwtl
mov
or
lea
push
ret
fidivrl
inc
lcall
bound
push
mov
sub
arpl
adc
nop
shll
shlb
fmull
lea
fs
push
movsl
mov
pop
mov
cmp
sbb
inc
pop
cmpsl
mov
mov
push
cmp
mov
jnp
cmp
push
ja
out
insb
mov
push
cltd
bnd
mov
pop
divb
lds
and
jg
dec
out
push
mov
ja
push
ret
xchg
mov
enter
xor
clc
mov
pop
loop
mov
cmpsb
subb
fidivs
jo
mov
leave
ret
fdivp
repz
jae
or
int
lret
dec
pop
mov
and
xchg
sub
stos
xchg
pushf
pop
fisubs
xchg
mov
jge
loopne
daa
loopne
cmp
pusha
push
test
repnz
jg
jg
inc
je
iret
cld
addl
bound
dec
faddl
lods
inc
nop
pusha
inc
inc
xor
popa
sbb
insl
xchg
into
pop
scas
dec
iret
sbb
dec
jg
jmp
add
pop
dec
fnstcw
lret
in
xor
loopne
sbb
add
xor
mov
imul
or
push
loop
aas
ljmp
dec
xor
inc
jae
int
popa
pushf
xor
mov
mov
stc
and
in
inc
push
movsl
das
stc
out
repz
je
sarb
sbb
fucomi
enter
cmp
mov
push
jecxz,pn
add
inc
and
aad
and
mov
ljmp
lds
jl
ss
lret
adcb
in
jne
cmovb
lock
cmp
aad
std
mov
dec
jns
sahf
sarl
push
movsl
fwait
mov
shr
imul
gs
jle
test
and
movsl
test
jl
fidivs
xor
jmp
fwait
ja
jmp
mov
arpl
test
movzbl
int
icebp
data16
jo
int
push
pop
ret
sar
cmp
and
shll
push
dec
jmp
mov
lcall
sbb
push
mov
dec
fdivrs
xor
rorb
gs
scas
loop
into
insb
adc
jecxz
push
push
pop
sbb
leave
push
pushf
xor
jbe
mov
jae
ljmp
test
scas
inc
rolb
fists
dec
shll
stos
imul
pop
scas
enter
sub
adc
pop
fisubl
mov
fsubrs
ficompl
int3
mov
dec
lret
pop
cmpsb
and
call
insl
dec
and
adc
bnd
adc
push
out
sbb
cmp
inc
addb
loopne
lock
pop
lret
cs
ja
xchg
jl
cmp
add
cmpsb
jmp
pop
sbb
fcoml
inc
shrl
mov
push
inc
fs
arpl
lcall
ds
and
mov
and
sub
ret
cmp
mov
test
or
xorb
mov
std
jge
pop
aaa
push
jle
xchg
cmp
inc
cmp
add
out
daa
mov
xor
add
sbb
rdtsc
xor
sti
or
lret
out
jecxz
sub
les
int
adc
in
jbe
cli
stos
push
addr16
and
sbb
lcall
fbstp
jns
dec
pop
mov
sbb
testl
shrl
mov
dec
popa
adc
or
and
pop
fcmovb
dec
lock
push
adc
ljmp
adc
cltd
jae
mov
aas
insl
shrb
bound
sbb
pop
sbb
push
ljmp
out
jbe
push
ffree
push
adc
adc
cwtl
out
jb
lcall
pop
out
add
mov
cwtl
jle
jl
sti
dec
mov
push
lahf
sbb
and
es
pop
shrl
cmc
push
mov
mov
sbb
shrb
dec
stos
and
mov
xor
xchg
mov
addr16
fimuls
fldlg2
sub
repz
sub
subl
mov
mov
out
jg
push
sub
les
cltd
xchg
xor
push
mull
adc
dec
pop
out
mov
lret
cmp
mov
add
in
std
cmpsl
mov
dec
xchg
fldenv
lret
repz
clc
es
xor
cli
lcall
pop
mov
xchg
mov
cltd
sub
out
xor
data16
addr16
push
mov
mov
mov
jp
icebp
fistpll
mov
insb
pusha
xorl
jo
mov
aam
mov
jecxz
xorb
add
out
test
cmc
cmp
and
js
cmp
mov
negl
pop
mov
jae
fdivrs
enter
push
into
sahf
in
mov
sahf
xchg
outsl
sti
inc
rclb
push
xchg
fstl
aas
sahf
repz
push
pop
aas
dec
xor
movsb
add
xchg
cmpsl
scas
dec
iret
cmpsb
xchg
lods
repnz
icebp
test
lods
xor
pop
fidivrl
sarl
mov
sbb
jo
cmp
add
mov
sub
dec
jns
lret
js
lcall
jnp
cmp
pop
jbe
cwtl
lods
std
test
inc
sbb
and
xlat
pop
sbb
lret
loop
in
cltd
cs
ja
adc
mov
pop
lods
out
ja
fwait
push
dec
add
ljmp
and
and
cwtl
or
icebp
push
movsb
sub
and
aaa
in
jg
push
mov
push
jmp
sbb
stos
mov
mov
jmp
jl
stc
or
leave
and
mov
cmpsb
sub
jns
mov
and
xchg
push
lods
xor
xchg
jge
and
test
or
cmp
push
pop
fsubrl
movsb
dec
push
push
aas
mov
ds
imul
adc
flds
mov
in
and
mov
in
sbb
mov
cmpb
data16
cmp
mov
xor
jne
xor
sbb
leave
inc
inc
cwtl
push
pop
jmp
sbb
sbb
aas
rcrl
adc
lahf
xchg
xchg
mov
push
or
fstps
and
rorl
and
mov
imul
jmp
clc
cmp
adc
jp
cld
insl
push
xor
sub
adc
in
push
mov
hlt
or
cld
sbbl
ss
pop
jge
dec
mov
inc
rorl
sub
or
mov
mov
inc
mov
mov
stc
xor
out
and
dec
out
cmp
lret
lahf
loop
dec
sbb
lods
test
loop
int3
fisttpll
les
inc
imul
lock
mov
movsl
and
cmp
jmp
frndint
push
sar
popf
dec
je
shl
scas
loope
es
xchg
and
cmp
sub
push
jbe,pt
push
dec
into
leave
ljmp
pop
mov
aad
mov
dec
movsb
rcl
hlt
xchg
mov
in
jle
push
jmp
cld
rcrb
cs
scas
sbb
mov
mov
add
fistpll
mov
loope
xchg
shlb
sub
sub
inc
dec
jbe
push
sbb
je
xor
imul
inc
outsl
add
dec
jns
call
fildl
lea
xchg
mov
mov
fisttpl
fdiv
ss
or
shl
shrb
mov
repz
mov
cmp
xlat
ds
shlb
add
ret
pop
cmpsb
cltd
daa
ret
shlb
mov
mov
loopne
pusha
push
hlt
xchg
sbb
nop
mov
inc
arpl
ja
pusha
lret
in
jne
movsb
cmp
inc
daa
push
xor
stos
mov
loope
sbb
inc
int3
movsl
sbb
sub
mov
sub
mov
leave
sub
into
mov
push
fmulp
push
mov
testl
lods
dec
lret
pop
push
lret
push
mov
sbbb
ja
mov
cwtl
and
bnd
xchg
mov
outsb
or
cmp
cs
xor
jae
xchg
mov
xchg
ret
sub
and
pop
fsubr
add
and
addr16
mov
mov
leave
insl
push
loop
fbld
sbb
inc
ret
pop
or
in
pop
aad
xchg
xor
and
shlb
push
enter
jmp
cld
inc
out
mov
dec
cmp
adc
sti
inc
and
in
cld
les
or
inc
ret
out
sahf
call
jo
fldcw
faddl
jae
mov
ret
lods
stos
ljmp
inc
mov
pop
mov
imul
mov
scas
inc
rol
mov
outsl
popf
dec
stos
ja
inc
pop
aaa
insb
mov
test
mov
int
enter
inc
das
adc
xor
ret
fs
cmp
sub
popf
je
mov
push
lock
jne
inc
mov
fisttpl
scas
rorb
mov
int
mov
das
insb
filds
ljmp
jnp
outsl
mov
int
icebp
enter
outsl
jecxz
loopne
sbb
fdivrl
or
push
fs
sub
and
in
dec
pop
outsb
pop
pop
mov
add
popf
cmp
dec
xor
imul
fld
sub
cltd
adc
repnz
push
sbb
enter
jle
sti
dec
cmp
popa
dec
push
cmp
in
mov
push
xlat
fabs
inc
loopne
mov
adc
loop
mov
sarb
mov
daa
int
and
ds
aas
ds
loop
mov
cmp
mull
popa
negl
add
fcmovnbe
cld
and
mov
mov
lea
movsl
cmp
repnz
mov
test
mov
xor
and
scas
xchg
pop
push
js
xor
xorb
js
xchg
test
nop
in
mov
fsubrs
adc
mov
je
mov
mov
loop
jb
rorb
adc
lcall
mov
icebp
jge
cld
add
clc
fidivl
mov
fwait
idivl
inc
sub
push
inc
xorb
pop
lcall
mov
pop
out
lods
mov
pop
mov
in
repz
pushf
mov
mov
cmp
jo
adc
lret
out
jne
adc
sbb
lock
imul
shlb
shr
les
lods
add
arpl
call
rorl
pop
pop
lods
cmp
push
aaa
popa
jecxz
lret
jno
cmp
mov
in
bound
insb
mov
jg
jge
sbb
loop
repz
xchg
sub
sbb
sbb
jecxz
ss
jg
push
lock
push
cmpl
repz
shll
sti
xchg
in
cmp
mov
jne
jnp
lret
pop
push
aad
sbb
lahf
decb
adc
lret
repnz
arpl
xor
test
cmpsl
scas
cmc
cld
cmp
nop
inc
dec
bound
aad
shll
or
int3
bound
mov
dec
lock
lea
loope
mov
imul
sub
xchg
loop
scas
mov
mov
pop
jmp
cmp
add
dec
mov
pop
pop
repnz
jle
jg
cmp
lds
int3
test
int3
cltd
mov
lahf
mov
xchg
mov
push
sbb
idivb
xlat
pop
scas
push
sub
push
popa
jns
roll
inc
cmp
cmp
test
call
dec
xor
cwtl
addb
and
cmp
xor
cmp
pop
and
push
std
adc
ljmp
dec
push
cld
mov
and
ljmp
jnp
mov
popa
test
mov
dec
in
test
pop
popl
xorl
adc
mov
push
movsl
adc
fs
mov
adc
mov
sub
pop
mov
mov
fs
inc
xchg
jge
mov
std
mov
inc
loope
sub
pop
xor
dec
inc
cmp
mov
cmp
jecxz
jl
fstps
cmp
xchg
cmp
jp
dec
ds
xchg
sbb
iret
add
test
out
adc
cmp
sub
insb
fsqrt
jl
inc
inc
pop
push
jnp
jno
jb
in
sbb
insb
hlt
hlt
popa
lret
aad
pop
icebp
out
or
or
insl
mov
fwait
and
and
adc
sub
in
pop
aam
dec
test
xlat
dec
dec
mov
push
stc
shr
dec
mov
mov
mov
ds
push
aad
mov
sub
popf
dec
sbb
or
push
push
lret
std
push
pop
fcmovnbe
lds
adc
add
push
mov
fstp
xchg
movsl
xchg
sbb
mov
cltd
cmp
adc
jns
in
leave
fs
outsl
mov
xchg
nop
xchg
mov
dec
ret
cmp
adc
mov
testb
cli
lahf
fists
aas
mov
jb
dec
dec
andl
jne
and
cmp
mov
mov
mov
les
xchg
mov
cmp
shlb
push
adc
and
mov
xchg
cld
mov
jg
sub
cmpsb
xchg
push
mov
roll
mov
and
lods
mov
xchg
in
xor
shrb
rclb
push
pop
adc
sbb
or
mov
mov
mov
xchg
inc
cmp
mov
out
pop
ss
out
push
mov
sbbb
dec
push
outsb
cmp
int
mov
ja
sub
mov
cmp
push
lds
jg
mov
add
jmp
jmp
xchg
mov
fiaddl
push
in
jg
addb
adcb
dec
adc
arpl
pop
subb
dec
cld
and
test
pop
rolb
xchg
aad
icebp
out
aaa
popa
pop
cmc
sub
jg
scas
shll
int3
out
je
subb
and
push
aaa
jno
ja
or
jg
push
loopne
aaa
ret
roll
mov
cmp
mov
xor
enter
test
cmp
xor
stc
jmp
xor
cmc
test
xor
bt
xor
stc
pusha
xor
bt
call
jmp
xlat
pop
mov
mov
je
inc
adc
lret
mov
pop
cmpsb
icebp
mov
stos
loope
cwtl
dec
fildl
outsl
adc
push
cmpsb
popf
out
mov
aam
pop
jecxz
pop
xchg
or
loopne
mov
dec
out
mov
scas
nop
or
daa
lret
and
xlat
fsts
repnz
and
sbb
adc
in
mov
mov
push
je
inc
ja
mov
jbe
lods
adc
test
inc
pop
mov
push
add
mov
adcb
subl
fcoms
jae
jnp
jo
ja
push
sbb
std
adc
popf
aaa
sarl
pop
in
ja
fisttpl
add
scas
insb
pop
aad
ret
and
adcl
inc
call
ljmp
sar
mov
xor
mov
cld
in
neg
push
notl
sbb
repnz
pop
cmp
mov
fldenv
hlt
out
dec
es
addr16
lds
xchg
jno,pt
clc
xor
in
pop
xor
in
not
decb
mov
sub
stc
inc
xchg
fdivp
inc
loopne
jne
ss
cltd
push
mov
movsl
mov
hlt
repnz
xorb
pop
sbb
popa
hlt
pop
xchg
fwait
ret
out
push
pop
call
sbb
push
fidivrl
mov
int3
mov
jnp
cmp
push
pushf
popl
bt
pushl
xor
jmp
pushf
movl
movb
lea
jmp
pushf
push
push
movl
call
jmp
xor
adc
mov
icebp
and
hlt
sbb
andl
jbe
dec
shll
mov
jo
jmp
add
fst
jmp
jp
das
in
and
repz
mov
icebp
or
repz
test
ljmp
lea
jp
fidivrs
xor
inc
xchg
cmpsl
rcll
lea
test
inc
pop
sbb
imul
icebp
popl
inc
adc
jns
inc
xchg
in
icebp
test
jo
pop
pop
mov
jo
out
notl
adc
aam
xor
pop
cmp
or
vpunpckhqdq
jp
addb
dec
popf
sub
jb
leave
ljmp
test
jo
test
pop
orl
mov
jl
push
mov
cs
add
jmp
sub
or
adcl
or
mov
jl
adc
inc
adc
loope
push
adc
mov
push
lock
push
lea
lods
dec
in
pushf
popf
js
lret
or
push
rcrl
mov
jae
and
out
push
aaa
mov
xchg
jns
jle
and
leave
jo
iret
adc
data16
mov
mov
sub
mov
pcmpeqw
mov
dec
and
mov
into
jns
cltd
jne
dec
fcom
add
mov
ljmp
mov
add
push
or
inc
cmp
or
jmp
sbb
mov
shll
sbb
addb
iret
push
xchg
sub
mov
dec
mov
aam
aam
mov
pusha
lahf
mov
mov
xchg
scas
mov
scas
enter
cs
in
jecxz
push
dec
cmp
imul
jb
call
dec
mov
jnp
jns
adc
mov
pusha
and
das
xor
ds
mov
in
xor
add
sbb
inc
lds
scas
xor
adc
das
mov
push
insl
mov
jnp
jns
inc
cltd
movsb
lahf
push
repz
sub
popa
loop
dec
xor
mov
push
mov
or
cmpsl
sub
push
cmc
cmp
mov
fistps
jo
hlt
out
dec
mov
adc
decb
sarb
xor
movl
dec
or
fdivrl
adc
push
ds
cmp
std
inc
push
test
in
lods
cltd
pop
mov
movsl
repz
inc
add
and
jl
es
gs
ja
xchg
mov
inc
mov
pop
in
lds
xchg
enter
aam
sbb
das
shrl
fdivs
jmp
adcl
repnz
mov
mov
out
mov
imul
ds
jo
fldcw
dec
stos
loop
in
push
repz
shl
addr16
fisttpl
lahf
xchg
shlb
jle
ds
cmpsb
jbe
shlb
faddl
cmp
sbb
into
imul
sarb
sub
mov
jmp
fcmovbe
aam
dec
insl
icebp
and
mov
xlat
xlat
sub
sub
xchg
ret
loope
adc
orl
lock
ss
out
pop
in
rcr
pop
aad
pop
cmp
cmpps
push
jnp
adc
jmp
mov
inc
push
ja
jo
jg
movsb
mov
sarb
fs
mov
cmp
je
adc
mov
mov
test
pop
shrb
in
aad
jb
sub
mov
dec
idivb
iret
gs
das
rclb
jo
loopne,pn
fsubl
cmpsl
out
mov
or
adc
shlb
xor
pop
ss
mov
inc
pop
fmuls
fldl
mov
scas
add
inc
cmp
pop
pop
sbb
aam
sbb
mov
push
cli
cmpsb
dec
call
or
cltd
sub
movl
dec
add
adc
pop
loop
aam
sbb
pop
xor
jge
mov
aas
push
and
rorb
and
xchg
inc
pop
xchg
sub
adc
jns
cmc
inc
fmull
in
jnp
clc
mov
dec
or
es
stc
xchg
mov
and
test
nop
add
sub
imul
fsubrl
xchg
push
dec
bound
sub
repz
sbbl
fbstp
in
pop
cld
xor
xchg
push
aaa
stc
cld
cmp
icebp
mov
shrl
es
orb
dec
jl
adc
popa
dec
add
push
dec
cmpsl
clc
fstpt
or
rclb
std
stc
xchg
adc
rclb
clc
mov
dec
pop
inc
push
sub
fnstenv
add
arpl
cltd
lahf
std
aas
stc
inc
int
xor
in
jo
push
sbb
xor
inc
scas
stos
push
cmc
sahf
mov
and
out
push
mov
pushf
fdivrl
repnz
aad
fists
mov
or
shll
push
in
push
mov
rcll
pop
test
gs
cli
add
insb
push
sbb
push
inc
test
shrb
cmp
add
xchg
pop
lret
mov
movb
clc
shlb
js
cmp
mov
movsb
pop
stos
stc
loopne
rolb
inc
aam
push
scas
mov
lret
aad
cmp
push
mov
rorb
sbb
pop
xlat
pop
mov
xchg
in
push
out
ljmp
push
aas
xchg
icebp
xchg
dec
mov
fmul
jmp
data16
sti
inc
rorl
jae
rorb
push
mov
jns
xor
push
or
add
mov
mov
sarb
mov
dec
lds
xchg
aas
jmp
cwtl
out
decl
ja
aaa
inc
inc
mov
pushf
mov
jmp
jo
lods
clc
jnp
out
lahf
mov
push
scas
aas
mov
call
push
in
mov
cmp
ljmp
loop
mov
sahf
or
or
arpl
inc
lds
xor
mov
addr16
out
cmp
repz
jae
dec
out
shll
jmp
lret
xor
jb
pop
data16
aas
ret
out
insb
fnstenv
or
push
fwait
mov
mov
sbb
add
mov
xchg
cmp
les
pop
sar
cmc
sbb
adc
std
loop
sbb
mov
push
mov
push
xchg
cmp
push
out
cli
and
push
mov
scas
mov
push
dec
sub
xchg
or
jo
mov
inc
xchg
add
cmp
xchg
fdivrl
inc
fisubs
cld
icebp
imul
fildl
mov
pushf
pop
clc
sbb
int3
push
call
lret
lahf
mov
sub
enter
lods
popf
fcoml
rclb
cmp
xor
aad
call
cmc
jg
pop
movsb
ficoms
scas
or
xchg
in
imul
mov
aaa
mov
jns
aad
icebp
jb
push
fcmovnbe
add
lods
test
sbb
sbb
daa
inc
add
mov
aad
xor
xchg
jl
lret
push
cwtl
xor
hlt
pop
packuswb
in
cmp
adc
cmpsb
mov
clc
aad
es
mov
and
daa
inc
dec
fst
push
pushf
cmp
scas
mov
jnp
movsl
xchg
fsubrl
test
jl
popa
fisubl
mov
pop
outsb
repz
jmp
je
fwait
sub
daa
lret
fstpl
mov
push
inc
push
add
or
inc
pop
cwtl
aas
mov
xor
inc
adc
movb
sbbl
pop
fwait
int
jmp
sbb
push
sbb
inc
push
movsl
cmp
in
lret
pop
mov
adc
imul
xor
stc
test
push
xchg
mov
mov
mov
pop
xchg
dec
add
pop
mov
push
jp
mov
popf
sbb
adc
push
xchg
xchg
or
stc
jl
and
dec
into
mov
jno
add
sub
push
cmpb
enter
lcall
sub
je
cmp
shlb
push
jp
les
mov
stc
sub
pop
arpl
scas
jbe
pop
out
mov
popa
lods
mov
hlt
jecxz
add
inc
cmc
pusha
xor
stc
xor
test
call
movl
pusha
movl
movw
pusha
lea
jmp
push
pusha
movl
pusha
mov
lea
jmp
push
movl
movb
pusha
lea
jmp
call
jmp
pusha
movl
call
pushf
movl
push
pushf
pushf
lea
jmp
pusha
movl
pusha
lea
jmp
stc
xor
cmp
pushl
popf
mov
pushl
ret
andl
mov
lret
mov
pop
mov
or
push
jns
push
cmp
rcrb
icebp
rcll
mov
invd
mov
popfw
adc
sbb
xor
fidivrl
les
jns
js
pop
dec
leave
adc
adc
pop
cmp
test
and
xor
std
push
cmp
stos
mov
stos
cmp
rorb
sti
loopne
cs
cmp
mov
insb
and
out
dec
fidivrl
stos
aas
add
mov
dec
adc
mov
mov
mov
cmp
mov
add
bt
xor
pushl
cmp
xor
push
jmp
mov
push
test
and
pop
jl
sbb
out
movsl
adc
push
jecxz
test
notb
andl
cmpl
xlat
data16
andl
xor
cmpsb
xchg
xor
cmp
ds
and
repz
pop
push
ja
lods
les
repz
shrl
jmp
inc
aas
pop
inc
cltd
sub
inc
arpl
and
mov
pushf
cmp
push
jmp
cmpsb
lds
shrl
aad
sbb
jns
push
push
add
cs
call
push
and
daa
push
sbbl
inc
mov
cltd
sub
and
jmp
add
push
xchg
sbb
shrl
inc
test
xchg
inc
xor
lods
fadds
jnp
pop
rclb
cltd
mov
lea
sbb
xor
pop
cli
push
cmp
pop
adc
jbe
outsl
les
stc
dec
ds
fidivl
and
pop
test
mov
lock
mov
xchg
mov
lcall
xor
sub
and
xchg
xchg
jno
sbb
aad
ret
pop
out
es
stos
das
je
and
xchg
cmp
jns
sub
test
arpl
sub
adc
mov
ret
into
pop
sub
jle
test
push
sbb
rorb
pop
dec
rorl
out
sub
push
mov
mov
ja
mov
inc
enter
add
dec
jmp
dec
pop
xchg
push
jecxz
or
sbb
add
nop
movsl
sbb
daa
jge
sarl
pop
adc
or
fstpt
adc
push
lods
push
sub
xchg
arpl
dec
scas
jbe
dec
mov
dec
cmp
mov
lea
leave
repnz
lock
xor
mov
xor
mov
out
xchg
adc
mov
lds
stos
int
imulb
mov
aas
or
mov
leave
and
lahf
and
lret
push
ror
xor
jmp
dec
int
mov
adc
lret
jo
xchg
pop
mov
iret
push
clc
jae
xchg
pusha
int3
xor
out
mov
movsb
xchg
ret
pop
cmp
stos
push
movsb
ja
inc
jb
xlat
popf
stc
jnp
inc
and
imul
inc
movsb
cmc
cmp
movsl
mov
sub
mov
jmp
cmpsb
xor
sbb
gs
mov
testl
test
mov
ljmp
push
popf
push
cld
in
or
pop
push
adc
hlt
mov
lods
push
jae
test
mov
sbb
add
sub
xchg
or
test
mov
scas
js
mov
sti
mov
bound
add
sarl
sbb
add
pop
push
add
xchg
pop
imul
xor
or
mov
movsb
pushf
ror
mov
fcomps
or
sub
push
icebp
add
or
icebp
leave
mov
jmp
push
pop
mov
sarl
fists
enter
divl
cmp
jg
movsb
fwait
movsl
or
pop
fistpl
scas
orl
jecxz
push
pop
push
xlat
and
mov
jmp
shrl
mov
pop
insl
adc
data16
pop
sub
pop
sti
jns
adc
call
sbb
and
and
jl
out
push
cmp
add
flds
shlb
adc
lcall
shlb
mov
xor
out
jbe
sub
jle
xchg
cmovle
push
loop
mov
push
push
sub
movsb
push
shrb
scas
jns
enter
sar
test
mov
cmp
dec
lret
mov
inc
cwtl
adc
test
cmpsl
imul
mov
dec
cwtl
icebp
es
cmp
xor
stc
idivl
sbb
outsl
mov
aam
cmp
push
lret
sti
andl
insb
scas
icebp
adc
push
dec
xchg
lret
movsl
cmp
lret
push
xchg
loop
lcall
popa
lods
inc
jbe
out
pop
sub
xchg
stos
in
xchg
rcrb
in
jnp
in
outsl
out
cs
cld
movsb
sub
dec
rorb
bound
std
jae
cmp
xlat
mov
jl
cld
mov
jle
fdivs
sub
xchg
sub
xchg
xor
cmpsl
xchg
mov
adc
pushf
sbb
push
mov
xlat
mov
gs
pop
fsubrl
leave
arpl
adcl
adc
ret
mov
and
inc
daa
jmp
xor
mov
fidivl
push
and
or
nop
mov
push
pushf
aam
scas
dec
cli
rcll
bound
fwait
lcall
outsl
scas
inc
imul
loopne
jmp
stc
aam
pop
pop
cmpl
movsl
jp
aam
pop
fistpl
and
cld
jge
lods
xor
iret
les
inc
rol
das
push
int
xchg
add
sarl
hlt
jg
repz
pop
pop
inc
dec
mov
inc
dec
push
mov
cmp
mov
movsl
mov
repz
mov
nop
sub
sti
mov
pop
mov
or
out
mov
push
jns
add
fcmovu
or
mov
jmp
jne
xor
ss
arpl
fsubp
jecxz
nop
jae
xor
inc
inc
mov
dec
fstpl
leave
scas
fisttps
pop
fbld
inc
mov
mov
cmp
insb
ljmp
adc
pushf
mov
je
aas
cmpsb
mov
or
data16
in
pop
mov
push
xor
push
push
xor
inc
adcl
push
add
inc
add
mov
push
or
lods
lret
mov
xchg
inc
pop
int3
dec
mov
adc
lock
stc
lret
push
jp
out
cmp
popa
loope
push
mov
es
sbb
push
cmc
sti
popa
xor
push
hlt
add
dec
stos
mov
push
sub
xchg
xchg
jns
ret
cs
fcoml
or
lods
mov
cltd
push
jge
test
or
xchg
shll
pop
int
xchg
mov
push
mov
mov
daa
popa
out
jb
cmp
jae
push
addl
lds
and
mov
sub
sub
mov
in
and
shrb
dec
xlat
aad
pusha
xchg
and
pop
adc
xor
dec
lds
or
mov
and
stos
inc
mov
mov
std
jnp
jp
mull
dec
xchg
addl
imull
xor
sti
in
and
or
inc
je
xor
enter
push
dec
aad
sbb
sbb
push
mov
inc
adc
sbb
sbb
sub
mov
mov
inc
aaa
jbe
adc
stc
movsl
gs
mov
pop
loopne
mov
push
add
push
inc
dec
pop
pop
push
lock
rcll
out
cld
in
fists
sub
test
aas
imul
cwtl
jg
pop
jg
cld
stos
aaa
vmread
push
fldlg2
fidivrs
mov
in
adc
outsl
xchg
jns
mov
rcll
jge
mov
lea
in
mov
repz
adc
fisubrl
mov
mov
popl
pushf
pusha
xor
cmp
stc
xor
call
jmp
push
push
call
or
sub
insb
push
sub
or
jns
adc
lcall
fisttpl
sub
mov
orl
lds
movsb
or
jp
out
mov
and
xor
sti
gs
mov
loop
sbb
pop
ljmp
ret
shll
lods
scas
mov
repz
push
xor
dec
loope
or
add
and
sbb
xchg
je
ret
sarl
lods
mov
push
scas
decl
cmp
int
aad
scas
mov
mov
lds
lahf
cmp
lret
dec
mov
popf
lret
orb
push
mov
pusha
fistps
xchg
adc
lret
decb
sbb
and
in
pop
xchg
inc
addl
aas
sub
test
aas
pop
sbb
or
push
jg
or
sbb
test
in
push
movsb
loope
xor
dec
jg
fs
push
aad
cmp
fsubr
cwtl
dec
and
ret
inc
xor
ljmp
sub
fwait
sub
sub
dec
cmp
cltd
cs
jp
cmpb
jg
cmp
xchg
dec
int
rcr
sarb
xor
pop
push
ret
jbe
push
es
aam
jle,pt
rcr
roll
les
jb
insl
ljmp
mov
cs
fsubrp
dec
insb
ja
fsubs
sahf
in
cmp
mov
or
xor
jno
pop
inc
lret
or
js
xchg
js
test
pop
int
cli
insb
inc
cwtl
add
pop
lcall
divl
mov
mov
sub
jl
fistpll
pop
sub
adc
arpl
xor
mov
mov
outsb
sti
mov
push
dec
lods
adc
pop
and
js
mov
dec
fsubrs
push
xchg
sbb
cwtl
xchg
filds
adc
cs
cmpsb
sub
and
inc
mov
icebp
xor
data16
stos
jno
dec
incb
arpl
out
scas
lods
cltd
int3
idivl
or
in
repnz
sar
mov
xorb
cmp
sub
inc
cmp
fstpl
jg
inc
outsl
fstl
jge
xchg
cmp
inc
fidivrl
sti
or
cwtl
jecxz
inc
nop
cmp
int3
cld
scas
sbb
scas
push
enter
xor
cltd
adcb
xchg
push
push
outsl
std
movsb
cmp
mov
scas
lret
adc
daa
inc
mov
bound
push
adc
in
sub
mov
sbb
fs
push
push
loop
dec
outsb
out
outsl
test
mov
aam
ds
sub
sbb
cmp
scas
fcmovbe
addl
loope
jle
sbb
jnp
and
mov
push
mov
inc
incl
push
cmpsb
fwait
xchg
inc
mov
dec
out
addr16
inc
hlt
sbb
inc
ja
out
xor
mov
jbe
sub
adc
jg
shrb
jno
repnz
mov
sahf
jnp
cmc
js
sti
mov
das
int
cwtl
inc
lcall
fcomp
jl
xor
stc
addb
addr16
xor
sub
mov
mov
aaa
mov
clc
arpl
test
out
jbe
pop
fcoms
lahf
and
push
subb
iret
add
add
jae
js
dec
pop
fsub
dec
loopne
jne
cmpsb
inc
mov
or
jae
int
mov
cli
mov
cld
xor
mov
mov
cmp
jl
adc
add
loopne
call
ljmp
dec
cmp
jb
jo
jp
mov
jne
inc
and
dec
jle
dec
out
or
pop
shll
fnstcw
clc
loop
adc
fstpt
lea
out
sub
xchg
xchg
dec
jmp
popa
cmp
js
inc
sub
mov
sahf
jg
test
jae
push
imul
add
sbb
pop
icebp
jns
push
xchg
fwait
ret
push
cmp
ss
nop
mov
cmp
cmp
rclb
push
mov
mov
cmc
pop
or
test
lods
rolb
mov
xchg
loop
jge
xor
pop
jg
lds
sub
hlt
jnp
fidivrs
adc
lods
mov
scas
add
inc
jmp
inc
xor
jl
ds
inc
fadds
in
jo
pop
mov
sub
into
rolb
ret
xchg
and
jmp
andb
xor
mov
dec
fistpl
mov
mov
cld
cmp
int3
and
movsl
jns
stc
add
sbb
cld
mov
push
popa
dec
fisttpl
mov
xlat
jge
push
sub
jne
rorl
lcall
and
cmp
xor
mov
pmovmskb
push
hlt
jl
add
lods
aas
aam
fld
dec
add
dec
clc
pop
jg
dec
pop
adc
and
cmp
jl
testl
into
sub
cmp
push
fcom
sub
sti
mov
jmp
mov
mov
movsl
fadd
js
dec
mov
sahf
inc
mov
sbb
mov
sbb
jne
lahf
mov
shlb
mov
dec
add
cltd
hlt
mov
call
aas
sub
in
jne
adc
mov
in
mov
lea
xchg
inc
jo
movsb
xor
in
push
ljmp
or
pushf
xor
mov
inc
std
sub
push
inc
push
dec
mov
ja
daa
repz
js
push
mov
xor
sub
push
xchg
pop
inc
stos
popf
mov
xchg
inc
xchg
mov
push
and
xchg
push
jae
jp
data16
out
outsb
in
push
and
fisubl
dec
popa
push
inc
es
xchg
subb
jnp
ss
mov
xlat
shll
add
sbb
mov
inc
jecxz
adc
dec
je
cmpb
push
push
js
inc
cs
mov
mov
cltd
mov
mov
push
mov
test
jns
aaa
hlt
bound
xchg
mov
mov
cmpsl
mov
daa
maskmovq
idivl
push
xchg
fldl
xor
fmuls
pusha
push
jmp
mov
sbb
mov
dec
adc
jbe
jb
mov
lock
mov
sbb
aad
xchg
adc
inc
loopne
adc
mov
hlt
jnp
sahf
into
dec
imul
fidivl
or
dec
jno
lea
rorb
jge
mov
jg
imul
leave
insb
push
ljmp
gs
hlt
mov
fisubl
test
sub
sbb
mov
test
je
mov
dec
je
out
out
fadd
mov
fmull
and
fisttps
xor
aam
inc
dec
sbb
jle
movsl
push
stos
xchg
sub
xchg
jl
cwtl
jns
sub
cmp
int3
inc
mov
adc
fs
pusha
cltd
and
sbb
push
xchg
popf
mov
call
divb
push
test
xor
mov
inc
je
jp
daa
cld
pusha
insb
in
jle
cltd
enter
mov
inc
or
out
cltd
movsl
xlat
out
mov
ret
in
loop
shll
jne
ret
cmc
jb
or
mov
mov
call
idiv
call
mov
sub
cmp
jns
mov
adc
xlat
jno
mov
pop
mov
pop
xchg
mov
mov
push
mov
dec
jo
addr16
push
mov
push
push
cmp
aad
imul
mov
repnz
xchg
add
lret
call
xchg
test
fs
jecxz
mov
in
cmp
loope
fwait
ror
imul
sbb
sti
cltd
loop
shr
aad
sbb
sub
add
cmp
aaa
lret
fcmovnu
cmp
cli
in
outsl
loop
or
in
in
cmp
push
testl
and
pop
enter
xchg
cmp
sub
mov
cwtl
addb
orl
push
daa
and
jo
adc
pop
mov
xchg
sub
sbb
dec
movl
js
jo
inc
sub
decb
pop
mov
adc
inc
add
sbb
mov
push
std
dec
mov
and
daa
dec
insl
lods
and
and
push
negb
repz
xchg
sbb
or
dec
cmpsb
sub
in
fldenv
push
jge
fsubr
aaa
in
testb
mov
mov
in
pop
sbbl
xor
inc
push
fimull
adc
mov
mov
pop
es
enter
nop
rorb
jmp
popf
mov
jl
cmp
lcall
aaa
mov
xor
mov
bound
cmp
aam
add
mov
adc
jle
pushf
jl
inc
shlb
add
xor
add
std
loopne
cwtl
jns
sub
jp
lret
xchg
sbb
jp
hlt
sahf
cmp
and
adc
es
into
sub
js
fadds
jne
rorb
insl
add
inc
out
jnp
cmpb
mov
push
out
or
test
jns
pop
addr16
push
push
jle
cld
sbb
dec
loope
lea
xchg
loopne
pop
stos
inc
lds
mov
jl
mov
mov
loop
out
sbb
dec
mov
nop
aaa
and
test
or
jno
or
mov
pushl
cmp
mov
hlt
push
and
out
add
sbb
imul
jae
jg
sub
xor
mov
xor
jno
popa
std
dec
int
xor
sti
pop
xlat
jb
jmp
int
lea
into
jnp
push
dec
aas
dec
adc
push
in
xchg
int
addb
ret
cmpsb
adc
dec
fwait
xor
lret
xchg
arpl
sub
cmc
mov
test
mov
cmc
pusha
push
jno
addb
adc
adc
in
xlat
pop
cltd
push
rcr
arpl
adc
xchg
add
aas
andl
imull
xchg
push
or
scas
orl
lds
ret
or
insl
test
adc
pop
dec
xor
fsubr
xor
aad
and
cmp
testb
pusha
or
inc
nop
mov
or
insl
cwtl
push
sbb
pop
dec
dec
and
aas
mov
movsb
sub
mov
insl
icebp
cmp
dec
mov
int3
inc
jb
cmpsl
adc
aaa
and
mov
ljmp
sub
mov
xchg
jge
pop
sbb
xor
fwait
xchg
jo
xor
push
call
je
dec
mov
xchg
or
xor
lock
pushf
movsl
scas
cwtl
sbb
cmp
push
jbe
cmp
scas
ss
mov
add
xchg
sarl
mov
xchg
sbb
imul
sar
mov
jb
mov
inc
cmovns
jecxz
mov
mov
cmpsb
sbb
sbbb
and
jge
cmc
sbb
adc
fsub
xchg
pop
xchg
nop
loop
test
pop
rolb
fadds
sbb
push
xchg
imul
movsb
xor
ss
dec
sti
mov
jle
repnz
xor
mov
sbb
push
repz
shll
imul
sub
xchg
push
aas
nop
push
mov
es
and
push
int
pop
sub
inc
js
data16
jp
push
das
inc
clc
add
jne
sbb
inc
pop
jg
in
popl
fs
lea
pop
andl
out
cmp
rcrl
jae
arpl
icebp
pop
test
and
lret
adc
pusha
mov
rclb
xchg
jo
stos
cld
cltd
sbb
repnz
adc
fsubl
adcl
int3
xchg
in
and
adc
dec
jg
stos
stos
push
nop
dec
rcll
inc
lds
pop
ret
loopne
setno
js
xor
push
jge
fucomp
jmp
push
fistl
and
or
inc
test
out
repz
add
xlat
mov
fst
cmp
sub
shll
pop
sub
push
push
inc
into
and
mov
mov
xor
cmp
push
mov
mov
into
pop
pop
inc
shrb
ss
fldenv
sti
or
jo
rol
insb
stos
pop
push
xchg
in
jmp
push
dec
aam
je
adc
lcall
inc
push
bt
mov
xor
push
bt
xor
jmp
xor
pushf
xor
call
sub
mov
pop
ja
cmp
mov
mov
pushf
out
divb
adc
pop
call
push
mov
add
add
jns
dec
movsl
mov
xor
sbb
mov
xor
dec
shll
mov
xlat
add
and
lock
popf
mov
fiaddl
fisttpll
sahf
fwait
fnstenv
les
int3
dec
xchg
and
inc
xor
add
hlt
mov
mov
mov
cli
cmp
jecxz
bound
lock
fimull
jl
jae,pt
lods
lods
jge
int3
negb
cwtl
xchg
jmp
jae
dec
inc
sbb
cld
in
jmp
mov
repz
ficoml
pop
cwtl
push
enter
sbb
dec
out
js
pop
push
in
inc
xlat
cmpsl
aad
xchg
jmp
into
push
jp
push
sub
aad
movsb
lods
mov
xor
insl
out
out
rorl
lret
arpl
push
mov
mov
enter
mov
xchg
rcpps
aaa
loopne
das
mov
sbb
adc
or
push
xlat
pop
mov
cmp
sub
mov
jno
push
push
xchg
stos
pop
cmp
inc
mov
cli
fmul
xor
loopne
mov
push
xchg
das
mov
push
sahf
jmp
orb
ja
xor
xchg
lea
fldenv
lahf
loopne
shr
jecxz
add
shl
cli
push
mov
into
push
fldt
inc
pop
aam
bound
or
insb
sub
push
push
loope
enter
insb
pop
outsb
subl
xor
push
dec
sahf
in
push
sub
shlb
cli
ds
xchg
sub
call
ficompl
add
pop
mov
pop
stos
inc
jae
pop
and
jnp
aam
mov
jecxz
inc
push
rcrb
test
ja
lcall
adc
pop
dec
cwtl
mov
movsb
or
sbb
outsl
adc
push
cltd
in
cmc
js
cs
imull
jbe
push
insl
mov
shrb
ret
or
push
out
pop
mov
jge
jno
sbb
aaa
dec
popf
xor
xchg
xor
mov
xlat
dec
insl
push
dec
push
add
loopne
scas
dec
shll
ret
adc
jnp
aad
mov
inc
inc
sub
inc
sub
xchg
sti
addr16
leave
add
popf
cld
push
mov
outsl
das
push
push
dec
xor
fdiv
mov
adc
mov
sub
sahf
pushf
es
fisubrl
dec
or
test
xor
and
xor
push
int3
movsb
mov
repz
mov
push
and
idiv
outsb
add
lret
adc
mov
sbbb
and
dec
repnz
jp
add
mov
or
cmp
mov
in
std
cmpb
std
push
stos
aaa
cmp
sbb
out
lahf
dec
cmc
jo
xchg
loopne
sbb
shlb
sub
sbbl
gs
cmp
jo
outsb
loope
int3
xchg
pusha
daa
test
dec
and
int
addr16
int3
and
or
je
rol
data16
mov
jae
mov
push
idivb
mov
movb
movl
mov
mov
jmp
jmp
inc
test
mov
flds
mov
push
add
jmp
pop
or
into
out
pxor
in
jp
inc
in
fs
adc
ljmp
cli
sbb
repz
loopne
dec
sub
lret
or
out
int3
sbb
mov
add
imul
test
mov
mov
roll
jmp
scas
addr16
aad
js
ss
fisubs
or
cli
pop
hlt
dec
xchg
aaa
int3
sbb
fdivr
rorb
jp
xor
int3
mov
imul
hlt
and
out
mov
fwait
stos
mov
pop
jnp
aam
int3
sbb
pop
mov
xor
je
cwtl
aaa
mov
stos
sub
mov
xchg
or
loopne
adc
add
cltd
fdivr
jmp
adcb
xor
es
or
inc
and
aam
mov
or
sub
test
pushf
push
adc
fcomps
mov
gs
out
mov
ret
jl
cwtl
or
adc
arpl
jg
xor
jae
or
test
cmp
repnz
adc
movsb
pop
pusha
ljmp
arpl
mov
fcoml
xor
jmp
in
push
jns
std
push
stos
lcall
testb
nop
xor
out
test
and
dec
pop
xlat
mov
mov
and
cmp
insl
cs
je
test
dec
mov
dec
xor
out
shlb
dec
insb
stos
mov
mov
aam
setbe
lcall
pop
mov
cltd
lahf
xchg
mov
rol
mov
sub
ljmp
cmp
sub
cld
mov
and
mov
das
lret
lock
xor
shll
shl
cmpsw
aas
or
pushf
xchg
mov
jl
mov
cmpsb
pop
pop
rcrl
std
adc
push
inc
mov
daa
movb
inc
fs
popf
sub
mov
jns
sub
stc
arpl
add
cmp
add
cld
cli
inc
lds
ja
loope
std
stos
aaa
and
cmp
aad
jno
test
shlb
and
lods
cmc
xchg
mov
mov
xchg
movl
mov
or
cmp
jae
push
sarb
push
and
push
pushw
ss
enter
ja
out
loopne
data16
and
test
mov
ficoms
add
jmp
scas
push
ret
push
mov
scas
jl
mov
fisttpl
push
lea
lds
lods
cmp
jno
fildl
or
in
pop
gs
test
shrb
iret
mov
loopne
or
aaa
mov
cwtl
jge
mov
sub
jp
iret
out
roll
dec
or
int
inc
leave
dec
mov
cli
adc
xor
inc
addr16
aad
adc
in
sub
jae
out
mov
push
add
sub
lahf
xor
dec
jp
nop
inc
xor
sub
xchg
pusha
sbb
sub
out
aam
inc
sbb
js
adc
sbb
or
sti
adc
push
push
dec
pop
inc
int
out
or
fdivrs
imul
adcl
cwtl
mov
shll
adc
mov
mov
adcl
cli
aam
jecxz
dec
cltd
ret
stos
and
push
repz
fcmovne
push
repz
cmp
inc
xlat
pop
movsb
inc
into
setns
insb
fsubrp
rclb
push
jle
jb
cmc
lahf
pop
ucomiss
scas
pop
dec
lcall
or
outsl
add
sbb
addl
lods
das
xchg
rcll
cmp
test
fmuls
pop
fstpl
stc
cmpsl
leave
push
push
jmp
push
xor
mov
pop
or
mov
mov
fistpl
jnp
test
mov
cwtl
xor
icebp
sub
mov
subb
leave
jno
jae
add
loopne
movsl
hlt
xlat
sbb
xchg
in
pop
dec
fsubl
pop
notb
mov
inc
mov
test
sub
mov
fsubs
mov
cwtl
push
jo
sub
jo
pop
cwtl
adc
jmp
xchg
dec
frstor
imul
cli
out
clc
in
jg
or
fnsave
je
hlt
out
into
test
jno
push
mov
and
stos
mov
xor
lret
cmc
out
call
arpl
dec
cmpb
sahf
dec
call
movsl
dec
stc
dec
cmp
jb
mov
xor
js
add
mov
sar
xor
dec
jecxz
pop
bound
dec
and
test
dec
mov
movsb
je
lock
pop
fwait
mov
in
mov
mov
aam
stos
jmp
repz
jb
xchg
mov
fmull
push
and
lods
les
adc
dec
xlat
out
xor
ud0
inc
mov
mov
in
das
jns
sbb
pop
test
jecxz
loope
mov
push
ljmp
mov
test
mov
or
mov
insb
jecxz
pop
xlat
jns
jb
add
adc
or
or
scas
jnp
pop
sbb
xchg
cmp
scas
mov
dec
xchg
inc
mov
hlt
jge
or
scas
fsts
outsl
popa
nop
and
cmpsl
mov
leave
push
inc
add
fsub
push
pop
pusha
xor
js
dec
push
aaa
and
add
cmp
or
pop
push
mov
add
aas
daa
or
cmp
bound
push
in
jp
popf
inc
dec
push
aas
mov
or
and
nop
pop
gs
negl
int3
pop
push
mov
movsb
in
addl
xchg
scas
mov
sub
mov
div
test
in
xchg
xchg
hlt
add
fiaddl
into
idivl
out
in
inc
rcrb
mov
out
xchg
add
enter
lods
cs
sbb
ret
dec
and
mov
ret
popf
ret
das
andb
shl
pop
pop
jecxz
and
push
mov
sub
mov
in
and
inc
jmp
or
lock
push
outsl
mov
add
adc
lcall
loop
jecxz
in
jne
pop
lret
ja
mov
sbb
add
mov
lret
cmc
xor
push
lcall
pop
insb
jmp
pcmpgtb
push
sub
jns
into
cpuid
push
push
test
push
xlat
movsb
mov
and
shlb
cmpsb
cli
dec
xchg
pop
and
add
cli
add
jne
mov
xchg
xor
into
out
icebp
in
sub
ljmp
mov
jle
movsl
mov
nop
sbb
fs
popf
outsb
lock
mov
mov
enter
push
aam
test
les
nop
mov
jb
mov
ss
enter
sti
inc
loop
movsl
cmp
cs
pop
xlat
push
sarb
out
test
inc
fs
jmp
nop
inc
in
pushf
mov
jmp
sbb
sub
jl
xlat
fiadds
ss
aam
inc
stos
xchg
or
in
mov
movsb
orl
mov
mov
out
jge
inc
repnz
rolb
aam
dec
lahf
push
outsb
pop
pop
loope
xchg
sbb
jnp
scas
cwtl
mov
out
adc
mov
leave
fldcw
and
jp
movsb
xor
sahf
push
out
mov
jmp
test
xchg
push
jecxz
xor
lock
sub
ret
stos
sub
roll
pusha
test
and
jecxz
sahf
inc
mov
pop
push
jecxz
add
sbb
pop
push
mov
call
fisubrl
scas
jb
add
fwait
push
idivb
addl
lret
jno
push
movl
push
pushf
movl
push
lea
jmp
xchg
arpl
cmp
sub
hlt
inc
sub
jge
push
rcll
xchg
jns
in
test
xor
aas
ss
xor
lret
adc
hlt
in
push
lret
test
ljmp
push
push
or
cmc
jns
mov
and
loop
fistpll
sti
pop
out
mov
adc
xor
sarl
sbb
daa
rorl
jnp
push
cmp
jecxz
aad
xor
out
int
jns
add
pushf
outsl
xchg
or
push
subl
je
out
mov
and
sub
ret
popf
push
add
mov
int3
adc
mov
ljmp
push
add
xor
sub
inc
lock
and
dec
xchg
xchg
dec
mov
adc
cld
loop
push
inc
or
int3
push
repz
add
jb
adc
pop
add
call
cli
ja
enter
jae
cmp
std
push
xor
jmp
enter
mov
cmpsb
mov
mov
into
jno
stos
xor
jo
aas
and
cmpl
int3
add
xlat
sbb
aas
sbb
mov
cmp
hlt
jecxz
jae
roll
xchg
in
push
xor
dec
nop
and
xchg
data16
lcall
mov
and
fildl
or
and
xchg
jns
inc
fcmove
test
stos
or
sahf
out
pop
pop
and
inc
xlat
sarb
loopne
cmp
cmc
jge
xor
adc
lds
xchg
lret
pop
inc
ss
sbb
in
aaa
int
mov
cld
xchg
and
cmp
xor
push
add
test
pop
or
nop
sahf
pop
jb
pop
pop
xor
mov
sbb
dec
int3
push
and
mov
lahf
push
pop
mov
lods
loope
test
test
testl
addr16
xor
push
xor
jo
push
subb
xchg
lea
mov
sub
jae
push
lock
cltd
test
pop
into
jmp
out
mov
les
pop
sti
mov
push
divl
cmp
pusha
lods
push
aad
dec
cs
inc
jle
ss
aam
xchg
and
lods
sub
jae,pt
leave
add
xchg
fcoml
dec
and
cltd
xchg
cltd
repnz
decl
sbb
mov
push
mov
fistl
sbb
sbb
cmp
sub
inc
xchg
xchg
sbb
int
jmp
test
pop
pop
dec
push
cmp
sub
push
inc
aam
adc
fistpll
cmp
nop
movsb
xchg
inc
out
push
fcomps
fprem
push
les
cltd
mov
jae
shlb
les
cmpsl
dec
mov
adc
dec
rclb
mov
cmpsl
jns
jae
fistpl
jmp
popa
mov
jl
cmp
jbe
sub
out
rol
enter
gs
mov
add
sbb
jnp
test
jne
popf
int3
shrb
cmc
arpl
sarb
addr16
sub
jecxz
or
out
xchg
les
mov
sbb
popf
sub
scas
cld
bound
or
fcompl
in
hlt
sub
ret
pop
and
imul
test
jmp
push
mov
pop
xchg
out
jbe
sbb
cmp
xor
lods
xchg
in
dec
and
mov
addr16
imul
add
or
pop
jp
mov
xchg
fsubl
idivb
idivb
decb
pop
fiadds
cwtl
js
cwtl
jno
jnp
pop
sub
sarl
in
xor
lea
xchg
rorb
jne
stos
lret
push
rcrl
subl
les
ss
movsl
add
mov
mov
jo
push
fldt
and
mov
lret
ljmp
push
or
sub
pop
nop
push
xchg
andl
fimull
add
cwtl
jo
sbb
sub
leave
push
push
fnop
sti
scas
lods
mov
mov
paddd
and
xchg
mov
jl
lret
xchg
cwtl
jo
js
mov
int
enter
mov
fistpll
ret
lahf
jns
lock
sti
inc
aad
adc
addr16
ret
pop
adc
sbb
push
test
jae
push
int
and
lret
sub
movl
xor
cmp
mov
and
pop
ljmp
loop
inc
or
leave
and
cmpsl
fs
mov
jge
jl
pop
or
pop
mov
out
sbb
sub
xchg
ds
mov
sub
orl
dec
int3
pop
scas
xor
fcomi
aaa
jnp
push
insb
out
push
outsl
mov
or
sbb
in
fldt
inc
ficoml
cld
addr16
fwait
pusha
inc
es
jnp
add
int3
stos
stos
in
call
or
pop
insl
cld
scas
sahf
add
jb
je
mov
inc
insl
divw
out
insl
test
test
hlt
in
push
mov
dec
enter
or
cmpsb
loopne
mov
notl
add
and
mov
bound
jb
jl
jg
push
jo
lds
fnstenv
inc
xlat
xchg
out
movsl
xchg
daa
cltd
roll
mov
data16
loopew
icebp
test
popf
in
lret
or
out
jg
or
jmp
xor
push
shrb
es
jmp
cmp
ret
adc
rcrb
je
jg
push
stc
fcomps
mov
loop
push
ja
mov
inc
fcmovbe
push
push
icebp
aam
in
lea
mov
sarb
mov
pop
sub
sub
and
or
std
mov
jnp
notl
stc
xor
je
imul
movswl
xchg
mov
mov
cwtl
out
cmp
xchg
dec
xchg
fdivrl
popf
inc
movsl
mov
imul
add
jo
xor
mov
jmp
lods
movsl
or
fs
or
add
addl
fs
hlt
out
ja
test
sub
mov
imulb
lods
lds
cmp
popa
fisttpl
loope
or
imul
cwtl
leave
xor
push
out
fsubl
popl
repz
adc
jle
test
stos
pop
or
stc
and
bound
push
fwait
xor
jle
jp
fstpt
dec
and
inc
xchg
fisttps
stc
out
outsl
mov
paddq
int3
out
adc
xlat
daa
jp
or
xor
pop
icebp
mov
sub
clc
and
mov
loop
and
test
jp
add
jle
or
popf
jge
daa
push
aam
jle
dec
xchg
lods
mov
pusha
jbe
sub
aas
inc
mov
xchg
jns
mov
mov
stos
cmp
and
sarb
rorl
and
insb
adc
mov
and
xor
sub
mov
mov
inc
ficompl
mov
icebp
cmp
xlat
push
int3
je
jmp
loop
sbb
mov
jb
lods
mov
inc
scas
dec
adc
stc
fstl
jmp
addr16
sbb
fadds
mov
fidivrl
out
jae
jg
dec
testl
jnp
or
cmp
rcrl
dec
iret
push
fcmovnu
sub
pop
jnp
mov
pop
lret
out
movsl
clc
xlat
int
sub
inc
fcoms
mov
negb
fstl
cmp
cmpsl
mov
test
jns
dec
adc
jnp
dec
xor
int
pop
xor
out
inc
rcl
sub
dec
sub
mov
mov
sbb
and
stos
sbbl
idivb
add
jmp
sbb
mov
pop
aad
dec
rorb
mov
inc
adc
inc
out
mov
fcoml
cmp
mov
fldl
cmp
test
std
pop
fdivrl
pop
lods
xor
push
pushf
sub
mov
xor
aam
into
pop
sub
sbb
std
inc
loop
das
repnz
sub
push
ficoms
mov
ret
ret
inc
mov
xchg
xchg
cmp
mov
mov
lcall
push
sub
and
xor
aad
xor
ja
xchg
dec
idivb
cmc
mov
outsl
in
icebp
cltd
or
jl
jl
xchg
imul
rorl
mov
andl
loop
jns
mov
aam
xchg
into
test
or
nop
jmp
pop
cli
xor
mov
int
andb
cmp
xor
adc
push
les
lods
sbb
inc
dec
lock
sub
popa
movb
sbb
in
sub
cltd
call
mov
ljmp
leave
or
sub
inc
cmp
int
ret
sbb
or
or
xchg
xor
and
mov
cltd
xor
jecxz
adc
lret
or
aam
mov
ljmp
push
js
repnz
imul
pusha
rcrb
in
cmpsb
ss
lods
and
jg
rcr
jmp
lds
jno
shlb
push
loop
loopne,pn
mov
outsb
fninit
push
pusha
aas
mov
shl
pop
adc
and
lds
jnp
jp
jp
sarb
lds
mov
jp
xchg
or
xor
ficoms
scas
mov
or
addr16
out
or
mov
mov
and
xor
negl
adc
push
mov
jge
cli
sti
mov
push
pop
iret
repnz
testl
aas
icebp
inc
ud0
fs
mov
jns
sbb
add
jg
pop
cmp
jae
mov
outsl
out
test
les
push
cmp
lock
jle
jp
push
xchg
push
lods
fcom
sbb
mov
jl
jbe
push
jle
sbb
pushf
xor
out
add
mov
pop
pop
sub
jbe
fcompl
push
jae
je
pop
mov
in
jp
enter
sbb
xchg
cmp
mov
jo
fmuls
xchg
jne
in
test
cld
cmp
pop
xchg
ds
insb
cmp
jnp
pop
mov
call
adc
jo
mov
sbb
pop
mov
sbb
mov
cmpsl
sbb
shll
push
mov
adc
push
xor
and
testb
mov
cli
cmpsl
nop
mov
aam
outsb
push
mov
jle
pop
xchg
int
aas
mov
pop
adc
ds
mov
repz
jae
arpl
dec
mov
cmp
push
aas
cmpl
stc
lret
das
push
out
data16
and
scas
or
xchg
adc
jb
adc
add
jne
add
adc
stc
nop
or
dec
packuswb
sub
jne
pop
jg
mov
mov
test
dec
andb
pop
xor
pop
dec
out
and
adc
push
and
mov
sahf
jae
jbe
inc
movsl
or
or
and
imulb
cmpsl
lahf
and
cmp
add
mov
rclb
in
xchg
andb
les
test
mov
loopne
out
mov
xchg
mov
fbstp
fisubl
lods
inc
rcl
sub
mov
popf
jb
cmp
aas
mov
ljmp
or
cmpsb
inc
cmp
cwtl
ja
fistl
nop
test
shl
cmpl
fs
sti
add
scas
jb
int3
cmpb
jae
lods
js
add
xor
ljmp
dec
and
int
insl
or
xchg
jl
les
ljmp
mov
inc
jmp
adc
pop
sub
mov
pop
xor
jno
pushl
xor
cmc
cmc
xor
clc
pushl
popf
pushf
pushf
pushl
ret
pushf
pushf
popl
clc
test
xor
pushf
stc
xorl
bt
stc
xor
clc
bt
xor
cmp
call
jmp
pushf
movl
pushf
jmp
xor
mov
clc
xor
pushf
pushf
xor
test
mov
xor
bt
bt
xorl
jmp
pusha
pushf
popl
stc
bt
xor
pusha
xorl
bt
stc
xor
jmp
xor
mov
xor
clc
xor
test
xor
pushf
cmp
xor
jmp
pusha
call
xor
test
xor
stc
xor
std
pushl
popf
pushf
movb
pushl
ret
movl
jmp
movl
push
pushf
pushf
lea
jmp
pushf
movl
pushl
jmp
xchg
adc
in
loop
ja
es
adc
test
bound
in
jno
cmp
lcall
or
pusha
hlt
rcll
push
jns
sbb
iret
dec
test
or
pop
in
icebp
xor
add
xor
sbb
and
insb
jns
ja
cmp
inc
pushf
stos
imul
lret
mov
lods
dec
das
in
push
jae
mov
shll
or
out
aad
andl
xlat
in
mov
rorb
ja
fisubrl
sub
in
lahf
xchg
subb
jne
fwait
into
cmpsl
insb
push
rol
and
sbb
gs
sub
ss
in
mov
inc
jmp
sbb
lret
sbb
setp
fldl
ret
repnz
sub
mov
inc
out
fwait
outsb
mov
add
push
leave
pushl
xchg
popf
push
adc
pushf
imul
mov
out
cmp
jmp
cmp
cwtl
lods
cwtl
test
lods
pop
and
int
push
nop
push
mov
daa
pop
push
push
cmc
movsb
lock
mov
jp
loopne
xlat
or
inc
cmp
loope
xor
lret
adc
enter
scas
daa
orl
jle
cmp
xchg
mov
repnz
fsubrp
idivb
sub
ljmp
fsubrp
push
lock
mov
shll
outsl
sbb
js
mov
shlb
mov
in
insb
mov
hlt
xor
sbb
rolb
mov
jnp
push
jnp
pop
xchg
sarb
inc
aaa
pop
aam
pusha
pop
es
stc
or
jmp
test
sbb
mov
dec
clc
lret
hlt
enter
loop
push
sub
loope
add
jmp
and
sahf
pop
in
jns
jo
mov
faddl
in
inc
pop
xchg
int
xlat
push
and
test
fidivrl
lods
repnz
mov
enter
flds
adcl
loope
out
mov
frstor
in
sbb
mov
mov
ret
sahf
sbb
and
leave
push
shrb
add
imul
ret
push
and
iret
xchg
dec
addr16
call
es
jnp
cmp
dec
js
inc
ret
sahf
inc
mov
dec
sbb
in
add
aad
inc
inc
nop
sbb
addb
sbb
popa
push
and
fs
push
inc
push
in
call
pop
jo
in
mov
imul
aam
mov
js
inc
xchg
push
lods
popf
popa
jp
aas
outsb
push
xchg
fstpt
call
jb
xorb
jo
push
mov
sti
and
mov
lods
cltd
loope
xor
mov
jmp
imul
test
jnp
push
es
jne
mov
adc
sbb
adc
ret
dec
mov
fadds
fstps
int
scas
inc
sub
int
pushl
cmc
inc
add
pop
shlb
inc
mov
cmp
jne
inc
or
stos
jge
sbb
mov
inc
sbb
idivb
in
test
xor
inc
ret
push
in
mov
in
jg
adc
add
popa
adc
not
outsb
cli
test
les
ljmp
out
je
idiv
iret
mov
stos
jp
pop
ret
insl
or
adc
push
aas
in
rsm
outsl
hlt
jmp
sbb
les
outsb
sahf
xchg
cmp
mov
mov
gs
push
outsl
lds
gs
xor
scas
shl
popf
xor
ss
cld
cmp
out
adc
sbb
test
adc
int
loop
cmc
jo
push
cmp
jne
and
movsb
lods
mov
imulb
je
sub
sbb
xchg
or
mov
cmc
mov
pop
aad
xchg
mov
in
adc
lcall
jns
sub
jp
inc
call
dec
ret
cmp
inc
cmc
mov
inc
mov
mov
sti
dec
enter
scas
lods
or
aas
orb
iret
mov
add
push
mov
call
sub
fcoml
pop
inc
and
push
mov
dec
dec
arpl
setno
push
cmp
jecxz
cmp
imul
xchg
shll
lds
sahf
gs
jl
idivb
out
pusha
lods
scas
fmulp
sub
and
leave
adc
in
test
xor
xchg
mov
lcall
xchg
shll
sbb
mov
adc
maskmovq
add
scas
xchg
inc
ss
mov
push
jg
idiv
push
fcomps
mov
insb
push
mov
cmpsb
sub
jno
fld
repz
insl
jae
subb
std
sbb
pop
addb
std
movsl
int
pusha
fbstp
mov
push
jmp
inc
inc
test
inc
lds
sahf
ror
lock
xchg
jg
out
adc
iret
stc
or
pusha
mov
pop
cmp
in
loope
mov
das
adc
mov
inc
test
daa
jne
std
xchg
sbb
or
cmpsb
push
jmp
adc
cmpsb
smsw
xchg
sub
add
xchg
pop
xlat
pop
out
xor
test
nop
shr
cli
fstps
movsb
insl
stc
clc
jmp
fcos
fnstenv
pop
loopne
arpl
dec
pop
dec
js
or
xchg
daa
dec
xchg
test
or
addr16
out
xchg
add
jo
fidivs
mov
lds
cmp
and
repnz
push
mov
mov
pusha
inc
ret
movsl
push
ljmp
daa
inc
in
inc
push
xor
add
or
imul
addl
inc
arpl
sub
mov
cmp
mov
mov
cld
pusha
inc
bound
xor
sahf
jle
mov
imul
cmp
sbb
xor
lcall
xchg
stos
std
enter
mov
pusha
inc
fistl
push
jno
test
sbb
icebp
js
fwait
in
adc
lahf
mov
es
or
inc
f2xm1
sub
jo
shl
cld
pusha
inc
lahf
mov
outsb
hlt
scas
hlt
out
jp
popf
stos
jecxz
sub
out
outsb
mov
inc
xchg
sbb
lahf
mov
and
mov
push
leave
dec
mov
sub
scas
sub
push
lret
fadd
aas
dec
xchg
int
xchg
cwtl
cltd
xchg
mov
mov
addr16
cld
mov
cmp
popf
inc
jno
sub
adc
loop
dec
out
fisttpll
aam
cmp
inc
std
xchg
and
fistpll
push
repnz
sbb
mov
pop
ds
sbb
lods
sarl
test
sbb
inc
jo
or
inc
adcl
xchg
push
mov
aad
gs
xchg
mov
fistpl
pop
test
sbb
or
popf
jmp
aad
pop
sub
jo
test
cmp
adcl
cwtl
adc
push
lcall
hlt
sub
dec
push
jo
xlat
adc
ljmp
adc
clc
lods
push
testb
sub
fistpl
lods
xchg
imul
push
fcomps
sub
aad
dec
push
scas
add
pusha
js
ljmp
rclb
and
xchg
add
sbbl
mov
test
test
ljmp
cs
xchg
mov
pop
call
xchg
push
adcb
loop
fmuls
inc
sarl
mov
adc
testl
inc
cli
pop
repnz
jo
testb
mov
push
mov
pop
cmc
aad
or
daa
push
xchg
enter
dec
sbb
pop
dec
shl
outsl
xchg
lds
lea
jbe
shl
sbb
and
enter
push
dec
mov
xor
addr16
out
pop
inc
and
roll
adc
inc
lret
icebp
js
gs
repz
ret
out
sbb
add
adc
repz
aaa
and
enter
insl
jmp
in
ss
and
ss
sbb
mov
sbb
mov
xor
fldenv
add
dec
int3
adc
out
sbb
ljmp
dec
movsl
out
lock
dec
sbb
and
in
int3
shlb
fadd
decl
aaa
ja
adc
xchg
cltd
or
push
dec
pop
loop
test
outsl
lahf
int3
out
pop
mov
mov
clc
fwait
and
add
out
loopne
inc
dec
aas
xor
cmp
push
in
jbe
dec
in
jns
add
cmpsl
push
jns
jmp
push
xchg
ss
add
testb
cmpb
shl
jo
repnz
faddl
shll
jb
pop
mov
sub
ss
mov
scas
lahf
nop
lds
add
cld
jmp
mull
test
and
arpl
and
sub
arpl
iret
rcll
nop
scas
mov
xchg
test
add
mov
push
lret
or
sarb
mov
lret
inc
out
hlt
lods
or
int3
and
sbb
jecxz
scas
mov
mov
mov
mov
inc
mov
ja
mov
pop
movsl
aas
and
std
pop
hlt
subb
jmp
lcall
xor
add
fwait
inc
rclb
mov
jae
test
shr
add
stc
cmp
push
popl
xchg
sub
mov
pop
push
xor
xchg
in
repz
adc
xor
rorb
push
cmc
push
out
outsl
sub
mov
je
pushf
pop
pop
addl
xchg
out
fsts
ret
pop
push
mov
push
icebp
js
push
sbb
hlt
rcr
ret
xchg
shrl
push
jno
imul
jmp
mov
adc
ljmp
dec
cmp
movsb
mov
mov
xor
aaa
es
lea
stos
cmp
movsl
idivb
cmpsb
add
pop
gs
sti
dec
into
data16
inc
inc
pop
pop
stos
dec
lock
push
inc
mov
cwtl
jo
and
fsubrs
test
sbb
fistl
pop
out
sub
or
pop
mov
pop
lock
dec
insb
aam
iret
mov
fldt
es
insl
imul
xchg
cmp
pusha
int3
jp
jecxz
gs
jge
xor
xchg
push
in
imul
test
pusha
xchg
fldpi
int
dec
mov
mov
test
mov
add
xor
fdiv
mov
fcoms
imul
sub
xchg
rorl
dec
testb
pop
pop
out
mov
ficompl
dec
inc
mov
jno
dec
fsts
lahf
push
and
int
cmpsb
daa
loopne
loop
lahf
andb
jne
mov
int3
cmpsl
cmp
jecxz
test
inc
and
xor
xchg
dec
sbb
repz
es
mov
mov
push
cmpsl
jmp
adcl
pop
mov
lahf
das
je
and
add
rorb
cmp
pop
dec
in
test
jg
pushl
xchg
cmp
ret
ljmp
pop
inc
ret
xor
jb
in
and
cs
hlt
fmul
clc
icebp
or
pop
lahf
fbld
sbb
jns
lahf
test
pop
push
push
xor
call
out
xlat
cmp
lods
jge
cmp
cli
adc
popf
aaa
mov
inc
pop
pop
stos
mov
fdivrs
popf
stc
or
jecxz
inc
ds
cs
dec
sbb
inc
lret
loop
rolb
pop
sub
popf
jp
jg
outsb
addr16
xchg
inc
inc
shll
xlat
ss
stos
fists
xchg
sbb
mov
pop
inc
jle
push
repz
xor
stc
mov
inc
cmc
mov
cmp
ja
pop
nop
xor
push
add
in
leave
cmp
or
out
ficoms
jle
and
sub
jle
sti
roll
dec
and
jmp
popf
jns
js
mov
jne
mov
lahf
adc
add
and
dec
stos
icebp
mov
inc
or
dec
daa
push
shll
subb
test
xchg
scas
repz
jbe
pop
cmp
aaa
push
xchg
and
cmp
out
rcrb
sub
mov
and
pop
sub
lods
movsb
push
mov
aad
mov
decb
shlb
fstps
and
cmp
daa
mov
imul
out
sahf
pop
cmp
out
jmp
xchg
cmp
xchg
push
mov
jbe
sahf
pop
test
xor
stos
in
push
hlt
sub
jle
dec
int
imul
mov
scas
sub
in
in
ss
push
stos
arpl
sbb
cs
cmp
mov
mov
rcll
sbb
out
aad
and
inc
hlt
test
shlb
sub
jno
push
scas
lahf
mov
scas
lods
std
das
and
inc
and
push
mov
pop
testb
mov
mov
dec
cmpsl
std
dec
stos
lcall
nop
and
leave
cmp
pop
or
imul
fs
mov
movsb
mov
cmpsl
sub
pusha
dec
xor
sbb
sti
inc
insl
idivl
xchg
ja
pop
xchg
cld
scas
shll
imul
fsubr
xor
js
inc
shr
out
jecxz
pop
xchg
add
cmpsb
nopl
es
lods
in
push
rorl
dec
aaa
arpl
or
lods
jnp
pmullw
jb
cmp
imulb
sbb
jge
movb
xorl
cmc
cmp
xor
cmp
pushl
popf
pushf
pushl
ret
xor
pushl
xor
clc
clc
xor
test
xor
push
xor
test
xor
cld
std
pushl
popf
pushf
push
pushl
ret
call
push
jmp
push
pushf
movl
jmp
std
fildll
movsb
dec
mov
mov
popa
lods
hlt
inc
sahf
clc
dec
xchg
out
cmp
popf
orl
xchg
aam
in
xchg
jge
xchg
sbb
daa
xchg
lret
jge
xchg
and
mov
lahf
cltd
ret
mov
dec
lock
cmp
add
mov
lea
js
repnz
xor
push
ficompl
xchg
shr
mov
pushf
xchg
inc
stc
push
sbb
pushf
sbb
cmp
mov
xchg
adc
jp
mov
incb
out
dec
xor
jmp
jo
in
adc
xchg
cmc
ja
sbb
mov
lcall
std
jle
push
xlat
mov
dec
mov
leave
push
cmp
push
push
adc
in
dec
stos
or
pop
jmp
stos
xchg
mov
inc
sbb
in
nop
sahf
mov
clc
ffreep
pushf
mov
mov
adc
lds
frstor
frstor
mov
aaa
lods
and
iret
cmp
daa
mov
lods
ret
test
cmpsl
mov
idivb
loop
les
cmp
and
lret
leave
mov
subb
push
iret
push
mov
sub
lods
push
dec
xchg
pop
idivb
adc
clc
ljmp
mov
repz
jg
inc
mov
hlt
sub
ljmp
stos
sbb
sbb
jbe
sahf
mov
adc
or
push
rcrb
into
mov
or
pop
cmp
inc
jns
icebp
pop
popa
ret
push
popf
sbb
xchg
sub
mov
cwtl
push
or
mov
not
orb
fildll
into
lods
idivb
loop
xchg
mov
jp
lret
in
fistpl
nop
jbe
mov
lea
rorl
ret
jp
into
sti
out
xor
lds
call
inc
pop
xchg
dec
fisttps
xor
inc
fidivl
jb
rcl
xorb
mov
pop
mov
mov
sar
mov
sub
popa
std
sub
xor
xchg
and
xor
dec
jae
fwait
mov
outsl
xor
ja
cmp
lcall
mov
sub
lea
mov
addr16
xorb
int3
cmc
popa
aam
dec
fidivl
push
pop
iret
xchg
dec
movsb
mov
xlat
shl
loopne
xchg
into
jg
ljmp
pop
sbb
inc
mov
jb
inc
mov
aam
adc
aad
stos
cli
cwtl
mov
lahf
shrb
inc
xor
push
fsubl
fsubl
paddsw
dec
sti
push
xchg
pop
loopne
out
jp
scas
mov
cmp
rolb
test
mov
in
push
int
lcall
pop
mov
flds
clc
and
dec
inc
mov
pusha
pop
cmc
cmp
andb
sbb
mov
pop
repz
cmpsl
inc
inc
call
pop
neg
arpl
jbe
shlb
int
dec
pop
mov
sahf
mov
pop
xchg
inc
mov
in
loopne
test
ret
or
cmpsb
cli
call
and
sahf
xlat
arpl
ror
fwait
out
and
sub
push
mov
pop
inc
das
xor
fists
int
inc
sbb
adc
mov
sub
sbb
xchg
sub
mov
es
mov
cltd
mov
rol
neg
das
loope
loop
adc
mov
jmp
mov
hlt
add
lods
ret
mov
out
jnp
dec
dec
mov
aaa
popf
mov
les
sbbb
xchg
dec
dec
cmp
inc
cmp
fmul
sub
cmp
add
pop
inc
les
scas
xor
mov
movsl
test
sbb
into
insb
ljmp
pop
fcoml
jno
sahf
in
loop,pt
mov
mov
les
xor
sub
stc
sbb
or
aaa
mov
pop
out
dec
sub
and
mov
loop
mov
ljmp
add
mov
adc
adc
scas
data16
cmp
pop
gs
cmpsb
sbb
mov
push
sub
or
mov
int
loop
call
dec
jmp
mov
adc
shlb
jl
pop
inc
out
into
ljmp
lahf
test
cmpsb
cmpsb
sub
outsl
hlt
sub
mov
jmp
call
dec
inc
subl
insb
dec
into
mov
inc
xchg
cmpsl
and
inc
jbe
mul
ljmp
xchg
mov
fisubrs
mov
xchg
jle
pop
rcl
in
mov
cmpsb
mov
xor
sub
jo
mov
mov
fdiv
cli
push
dec
jns
repz
arpl
into
repz
sbb
shrb
pushf
jge
sbbl
jns
gs
cmc
into
outsb
pop
dec
xor
push
or
fmuls
outsl
hlt
mov
lods
mov
dec
icebp
lods
push
mov
adc
int3
dec
dec
xchg
adc
add
dec
cmp
mov
pop
mov
dec
scas
mov
dec
call
cmp
int
in
sti
sub
jnp
inc
lret
out
and
int3
pop
fildll
cmpsb
mov
sbb
adc
jno
das
pop
imulb
rcrl
jno
sbb
fmul
push
mov
cli
stos
ret
jl
dec
movl
push
insl
pop
and
lea
mov
scas
daa
push
pop
or
jmp
xchg
sbb
das
mov
xor
xor
xchg
add
insl
cmp
push
xchg
mov
dec
lahf
aad
jecxz
das
gs
loopne
lret
or
out
popa
cmp
adc
mov
fbld
test
jne
inc
lret
add
or
lock
inc
jg
rclb
push
xorb
adc
test
jge
lods
inc
push
std
in
loope
inc
inc
cltd
andb
sub
sub
adc
data16
outsb
cvttps2pi
xchg
inc
repnz
std
sub
cmp
sbb
xchg
mov
adc
xchg
into
dec
cmp
aas
addb
mov
or
dec
sub
push
mov
ja
mov
pop
inc
adc
mov
adc
sbb
aaa
add
popf
movsl
in
push
push
insl
jae
lds
imul
icebp
adc
loopne
mov
or
fs
push
mov
sub
add
fwait
stos
jns
testb
sub
movsl
sarl
add
jb
test
je
push
in
fdivl
scas
pop
es
in
ljmp
xor
repnz
adc
xor
mov
lds
cmpsb
mov
fimull
push
push
xchg
adc
jnp
lock
inc
addr16
lds
jne
dec
add
adc
xor
dec
out
mov
xchg
fcoms
jae
loopne
das
aam
out
insl
scas
cmp
pop
cmp
push
out
and
xchg
push
push
sbb
shl
push
ret
lds
inc
lds
mov
cmp
jnp
in
sbb
arpl
sbbb
push
lea
mov
cmp
addr16
push
inc
loopne
cs
scas
test
cmp
dec
shll
data16
inc
mov
add
xchg
pop
leave
push
popa
rcll
test
adc
sbb
clc
cmp
ljmp
es
int
sbb
xor
lahf
xlat
sbb
xchg
sbb
jb
inc
sub
and
leave
push
or
arpl
cli
loop
inc
sbb
ja
mov
push
mov
pushf
lock
sub
cmp
fists
xor
xorl
clc
fstpl
jno
bound
test
xor
mov
mov
adc
fadds
xchg
out
fsubr
lods
push
mov
or
ds
mov
mov
mov
mov
push
pop
cmp
fmuls
adcb
in
neg
push
sahf
fstp
dec
push
xchg
dec
and
int
mov
iret
pusha
lret
dec
shl
fnstenv
xchg
std
insb
xchg
jl
push
fs
shll
inc
rorl
add
insl
jge
ret
ja
movsb
movsl
cmp
mov
insl
stos
sub
test
outsl
mov
lods
push
out
xchg
push
jge
sbb
iret
stc
and
pop
loop
xlat
outsb
jmp
mov
jbe
cmp
dec
leave
push
jecxz
cmp
out
test
add
adc
out
cmp
scas
cmp
inc
in
frstor
sub
push
fisubs
orl
add
std
xor
add
mov
popa
in
ja
ljmp
inc
add
xchg
push
and
jae
test
cwtl
fildl
fmuls
lds
inc
sti
jbe
mov
aas
mov
and
shlb
ss
sbb
xor
dec
add
cmp
sbb
add
out
fwait
stos
cld
jns
inc
mov
push
pop
sub
dec
pop
inc
lock
dec
dec
nop
or
push
mov
xor
lods
inc
shlb
sbb
pop
dec
fwait
add
xchg
jmp
mov
sub
jae
mov
bound
movsl
xchg
add
stos
loopne
or
pop
jno
push
add
adc
push
insl
fadds
xor
cmc
andl
mov
in
fbld
mov
mov
out
mov
into
cwtl
arpl
pop
mov
cmp
xchg
pop
pop
pop
inc
xchg
sub
lea
fildll
jl
pop
imul
jb
jmp
outsl
test
jbe
inc
outsb
and
stc
hlt
adc
jbe
fidivl
inc
dec
dec
clc
mov
jb
test
in
cmp
sub
ljmp
loop
push
sbb
mov
movsb
lcall
inc
push
adc
ss
mov
pop
mov
jne
movsb
repnz
sub
or
movsb
adc
std
gs
lods
fcmovbe
push
adc
inc
mov
mov
or
insb
or
loop
or
or
push
out
jecxz
pop
cmp
test
addb
push
insb
sbb
out
sub
mov
adc
add
ljmp
inc
ljmp
rcr
nop
xor
dec
xchg
xchg
in
pop
dec
pop
fld
movsb
xor
movsb
subb
sbb
push
and
xchg
into
je
mov
jmp
sub
adc
in
lds
out
enter
int3
add
dec
jbe
sub
mov
xor
scas
lods
incb
or
fbld
dec
imul
and
sbb
xor
sbb
mov
cwtl
jecxz
movsl
cmp
push
aam
pop
addr16
rcrb
mov
sub
outsl
dec
repz
xor
ja
fnstcw
and
gs
ds
cmp
decl
popf
aam
xor
push
sbb
mov
outsl
or
sub
pop
pop
mov
sub
xchg
sub
int3
xchg
arpl
adc
cmp
pop
inc
loope
test
call
cmp
les
inc
mov
lock
sahf
dec
test
ja
mov
pop
xchg
in
insb
mov
popf
in
mov
mov
test
xchg
mov
idivb
rorb
in
dec
push
jle
pop
out
pop
push
es
mov
sti
jns
inc
orl
push
incl
cwtl
fwait
mov
jb
cmp
xchg
xchg
scas
sub
pop
sub
dec
shr
inc
pop
and
in
ret
hlt
jbe
inc
xor
fsubrs
lds
dec
idivb
xlat
sub
in
je
std
inc
inc
and
movsl
fadds
and
fs
jmp
movl
push
push
pushf
lea
jmp
call
push
movb
movl
pushl
pusha
lea
jmp
pusha
movb
pushf
popl
bt
xor
cmc
xor
cmc
xor
pushf
cmp
xorl
mov
xor
test
xor
cmc
xor
pushl
xor
cmc
pushl
popf
push
pushl
ret
adc
popa
std
jecxz
adc
dec
jmp
push
testl
add
xor
std
sub
stos
fcmovnbe
shl
lcall
or
sub
data16
je
loop
xchg
pop
lret
iret
fdiv
push
push
pop
icebp
adc
fs
and
rclb
ljmp
das
movsl
pushf
mov
pop
int3
pop
sbb
call
mov
aas
jns
iret
into
push
dec
inc
mov
mov
sub
fwait
or
in
jb
pop
test
loop
cmp
mov
arpl
pop
lcall
mov
dec
add
jmp
or
and
mov
inc
adc
jmp
or
stos
inc
and
shll
movsb
cmp
pop
fwait
in
push
lock
xchg
std
jb
ret
dec
and
cmc
stos
pop
pop
sahf
mov
stos
mov
sarb
sub
mov
icebp
ljmp
xchg
fnstenv
rclb
jne
rorb
pop
test
xchg
bound
data16
sub
dec
lcall
dec
inc
sbb
fadd
inc
xchg
pusha
add
shl
ja
cli
mov
jp
mov
inc
cmp
popa
push
test
cltd
xor
iret
movsl
test
dec
call
popa
loope
movsb
sub
pushf
sbb
jb
cmp
cli
in
ret
into
push
fldcw
mov
lret
pop
mov
sub
and
jb
pop
ds
clc
sti
clc
in
jb
adc
xchg
bound
sbb
and
dec
xchg
sub
inc
ret
add
mov
scas
dec
sbbl
xchg
lods
jle
cmpsb
ja
push
sbb
lea
repnz
loopne
les
je
mov
fld
push
jecxz
aad
add
rcrl
clc
idivb
sarb
pop
sbb
sub
sub
and
add
add
std
dec
aad
fcoml
aas
pop
in
test
or
push
jl
mov
xchg
xlat
pop
daa
mov
insl
pop
setnp
mov
inc
adc
pop
push
fcoml
cmp
push
push
lret
add
sbb
jne
jecxz
addl
xor
iret
cltd
data16
loop
nop
bound
test
cmp
mov
sbb
in
pushl
xor
clc
pushl
popf
movw
mov
pushl
ret
pusha
pushf
popl
test
xor
clc
pushf
xor
call
pushf
pushf
movl
jmp
xorl
mov
push
xor
mov
xor
call
pushf
popl
push
xor
pushl
jmp
pushf
pushl
call
add
sub
mov
push
bound
inc
xor
subl
jbe
fldt
mov
mov
mov
mov
fwait
es
push
in
xchg
add
push
js
dec
jecxz
repz
jmp
mov
push
mov
xchg
mov
and
fsts
pop
out
xchg
jnp
inc
inc
xchg
mov
jae
sub
sbb
call
jle
ret
mov
adc
lret
jne
fnsave
outsl
test
inc
insb
adc
pop
xor
popa
or
pop
or
cmp
push
subb
pop
mov
imul
sarl
push
mov
dec
cwtl
xor
or
inc
inc
mov
outsl
mov
sbb
mov
sti
ja
pop
aaa
rcrl
mov
mov
and
and
movsl
or
stos
adc
mov
push
mov
xor
push
pop
add
sub
out
push
pusha
fisttps
cmp
leave
ret
cmp
xorl
jmp
stos
fcoms
inc
hlt
and
lds
inc
jns
int
out
shll
jecxz
test
jae
mov
shlb
dec
ds
adc
inc
into
mov
nop
cmc
adc
lock
inc
orl
cmpl
adc
adc
enter
mov
adc
adc
les
lret
pop
mov
int3
roll
lahf
or
test
xchg
adc
xor
in
jae
lret
aad
cwtl
out
out
or
and
inc
scas
cltd
add
and
push
xchg
subb
leave
cmp
push
push
test
or
rolb
xchg
pop
mov
xchg
test
or
xchg
stc
jb
daa
icebp
push
push
out
aaa
mov
subb
inc
out
enter
out
dec
add
sub
pop
lods
in
roll
adc
push
lods
cmp
cmp
add
adc
cs
testb
insb
pop
mov
xor
pop
push
or
inc
daa
movsb
xor
mov
loop
insb
mov
es
test
lock
fdivl
mov
stos
cmp
iret
mov
leave
push
lods
cmp
dec
mov
js
std
cmpsb
adc
mov
popa
pop
pop
rcrb
lds
mov
inc
loopne
sub
out
jl
sub
movsl
fmulp
ret
clc
sbb
cmpsb
pop
inc
sub
mov
adc
std
pusha
lret
add
cmp
add
cmpb
cltd
pop
sti
pop
mov
push
aaa
pop
mov
addb
inc
lods
xchg
inc
sub
mov
sti
mov
pop
stos
es
ficoms
xchg
js
xor
fimuls
bound
es
inc
aaa
sub
jl
sbb
xchg
movsl
fstl
inc
jmp
jo
ret
sar
sbb
pop
sub
and
cmp
xor
dec
inc
mov
aam
sub
icebp
popa
fs
dec
iret
cmpsl
mov
sub
jne
adc
sahf
loope
aaa
push
mov
mov
lea
fadd
cmp
sti
xchg
sub
mov
in
push
icebp
cltd
outsb
pop
jnp
dec
mov
sbb
jmp
aaa
add
mov
in
xor
cmp
call
pop
outsb
sub
sub
mov
inc
ret
cmpsb
aas
jmp
and
mov
mov
hlt
xchg
lods
fcomp
out
nop
mov
pop
mov
leave
jl
xor
mov
cmp
or
and
xchg
or
xchg
sbb
xorb
out
xchg
notb
push
dec
xchg
adc
pop
bound
mov
add
pop
mov
mov
adc
fildll
scas
cs
mov
xchg
inc
outsb
cwtl
js
insb
pop
iret
cmp
push
inc
gs
fildll
fdivr
scas
push
xor
bnd
xchg
xchg
mov
dec
jmp
js
pop
aam
movsl
push
rorl
adc
xor
ss
xor
lea
pop
add
dec
sub
cmp
and
popa
mov
mov
jne
cli
xchg
and
int3
mov
outsl
pop
loop
pushf
xor
pop
ljmp
mov
add
lea
push
fstpt
insl
ja
xlat
push
ja
push
cmpsb
leave
popa
loop
or
xor
pushf
leave
and
mov
aaa
fisubl
and
jns
in
push
xor
mul
push
xchg
lcall
cltd
pop
sti
and
imul
pop
or
loop
into
dec
inc
cmpsl
cmpb
pop
or
nop
mov
rcll
fstpt
pop
in
iret
jo
ret
lock
mov
cmp
rcr
int
popa
call
bound
xchg
outsl
shr
je
hlt
ja
fildll
sbb
in
mov
xchg
sbb
movl
pop
icebp
out
rclb
fistps
mov
cmp
adc
lds
or
jle
sti
lcall
jle
pusha
js
sub
or
add
dec
ss
out
mov
inc
cmp
push
push
mov
add
pop
inc
imul
fnstcw
lret
jmp
add
cmp
jl
popf
add
xchg
iret
cmpsb
fwait
iret
outsl
in
push
pop
jne
jbe
jle
inc
fstpl
sbb
addr16
pop
adc
dec
enter
sub
fsubp
pop
adc
xor
cld
sub
inc
or
mov
movsb
pop
in
in
and
sub
mov
cmpsl
xor
xchg
dec
ficompl
add
sti
jg
lea
inc
sti
xchg
sbbl
popa
push
ror
sbb
sbb
mov
jae
sub
xor
ret
mov
test
mov
repnz
fistps
and
lret
cmpsl
pop
outsl
js
outsl
fs
jnp
mov
mov
aas
xor
inc
sub
mov
inc
cld
mov
push
sahf
pushf
ud1
and
xchg
jge
add
push
inc
dec
cmp
std
jns
in
mov
pop
xor
out
incl
leave
mov
mov
xlat
lret
mov
push
jg
inc
pop
hlt
and
push
incl
pop
sbb
andb
push
xor
or
jecxz
dec
call
rorl
inc
scas
inc
movsb
jl
mov
sbb
sub
jg
mov
push
and
ja
lds
lods
push
call
out
fsubl
adc
pusha
imul
shll
mov
sub
pushf
cmp
in
mov
mov
sbb
dec
mov
rcll
adc
aad
push
rcll
sbb
mov
xlat
cwtl
adc
rol
ja
xchg
addb
fiadds
cmp
test
in
lea
sub
in
scas
je
xchg
mov
and
adc
lmsw
pop
loope
push
jl
sbb
test
bound
cmp
in
add
in
add
sti
adc
inc
ds
dec
add
rcll
or
sbb
mov
xchg
jae
lret
imul
push
rorb
int
arpl
cmp
push
xchg
idivb
push
mov
addr16
mov
inc
cmpb
out
lods
adc
mov
xchg
stos
add
fs
adc
int
mov
xchg
pop
mov
pop
mov
in
iret
or
jg
aad
xchg
and
dec
shl
or
imul
push
dec
pusha
push
not
divb
andb
movsb
out
shll
fsts
adc
push
fnstcw
add
jae
pop
repnz
arpl
cmc
sub
dec
sarb
mov
dec
sub
dec
jo
je
and
sarb
mov
or
add
add
fs
sub
rcr
scas
adcb
shll
scas
idivb
lret
mov
fs
jg
xor
pushf
movl
pushf
pushf
lea
jmp
test
xorl
cmc
call
fisubrl
adc
lods
or
jge
faddl
orb
cmpsl
cmp
sbb
jge
repnz
movsl
pop
icebp
sbb
or
add
pop
xchg
inc
roll
xor
jge
jae
dec
push
push
mulps
and
sbb
lods
or
dec
pushf
adc
fdivr
xor
js
jbe
push
repnz
xor
mov
in
icebp
in
or
out
mov
lods
or
xchg
sub
sub
cmp
cmp
les
xchg
lea
dec
lods
scas
cmp
inc
cmc
aaa
in
subl
lods
or
xor
pop
loope
push
inc
xor
je
inc
fisttpll
inc
jp
ja
bnd
jge
bnd
jnp
std
je
js
ss
in
jb
xor
and
scas
xor
lahf
xor
loope
push
cmp
mov
das
push
rcll
push
repnz
push
popa
mov
dec
cmpb
enter
out
sub
mov
jp
xchg
scas
adc
cmp
mov
jbe
sub
or
into
pop
subl
and
dec
add
add
jp
inc
add
outsl
lods
lahf
lds
mov
mov
cmp
mov
mov
lret
adc
out
lcall
adc
pushf
sbb
cmc
xchg
pop
pop
call
fnstsw
mov
dec
push
daa
jne
mov
mov
scas
mov
jb
cmp
lret
test
pop
outsb
push
subl
pop
mov
nop
jge
push
nop
adc
dec
jnp
out
pusha
lahf
fld
dec
std
cmp
subl
cld
mov
mov
xchg
adc
mov
repnz
fildll
xor
push
pop
test
ret
xchg
sbb
xor
cmpsl
sub
push
sub
sarl
inc
xor
adc
lds
cs
cld
dec
dec
dec
lret
sub
faddl
jbe
cwtl
shll
xchg
mov
mov
xlat
jmp
jnp
jg
dec
aam
mov
rorb
xchg
lds
xor
and
stos
call
add
sub
mov
fisttpll
scas
pop
push
into
pop
fwait
out
dec
sbb
jge
mov
jge
jnp
lea
xor
gs
inc
ret
xor
mov
pushf
push
addb
stos
add
js
inc
mov
out
cld
or
daa
stos
int3
jo
icebp
mulb
sbb
sbb
sbb
adc
insl
mov
divps
inc
ret
or
mov
push
mov
jnp
adc
fsubrl
iret
jmp
in
cmpsb
daa
clc
ljmp
mov
jo
iret
push
icebp
repz
mov
mov
mov
mov
pop
push
pop
xor
jle
pop
bound
clc
daa
sbb
pop
sbb
insl
cmc
xor
pop
dec
rcrl
and
shlb
fstps
negb
dec
sbb
add
loopne
or
test
stc
sbb
enter
dec
xchg
cmp
push
inc
addb
ds
cwtl
popf
test
xor
push
mov
fcmovb
cmp
push
in
and
push
int3
inc
lds
mov
push
jl
xor
cld
and
sub
outsb
fcomp
push
sub
in
idivl
leave
pushf
mov
sub
sbb
dec
push
xor
xchg
cmp
push
pushf
and
adc
scas
dec
mov
xchg
or
sbb
test
cs
add
pop
in
xor
inc
and
pop
mov
pop
mov
cmpsl
mov
lcall
mov
mov
stos
xchg
cld
mov
jnp
decb
sub
cmpsb
push
into
lcall
repnz
jae
dec
inc
push
or
or
incl
cwtl
mov
mov
and
data16
ss
dec
sub
bound
pop
adc
imul
jmp
xchg
cld
mov
aas
clc
jmp
sbb
shrl
pop
ret
xchg
push
lahf
mov
sub
loope
sbb
dec
cmp
xor
pop
fsubs
or
les
test
mov
aam
cli
inc
arpl
and
dec
lcall
push
cmp
jp
cmp
jns
mov
imul
mov
test
dec
stos
jb
inc
jne
hlt
cmp
out
jno
xchg
xchg
rcll
dec
outsb
push
ljmp
sub
pop
mov
dec
pop
xlat
mov
pop
insb
gs
in
sbb
scas
cli
movsb
xchg
ds
fsts
xor
mov
mov
movsl
sub
pop
or
test
add
mov
movsl
mov
pop
xchg
or
in
fsts
and
jne
xor
les
sbb
mov
dec
mov
mov
loopne
mov
mov
mov
pop
fistps
pop
push
popa
dec
popf
xchg
pop
ficompl
and
sahf
pop
jo
rorb
sub
sub
xlat
adc
sub
mov
outsb
pop
aam
js
sbb
pop
ret
ja
xor
cltd
out
xchg
or
lods
scas
push
add
jl
call
push
lock
cs
stos
pop
sahf
adc
mov
adc
lcall
popa
xlat
dec
push
repnz
jno
jg
pop
clc
xlat
ret
jl
mov
inc
repz
popa
imul
adc
adc
clc
adc
sbb
mov
leave
lods
pop
neg
sub
into
dec
push
jge
out
xor
movsl
rolb
jmp
push
jecxz
sbb
mov
scas
call
pop
mov
xor
sub
js
and
dec
jb
add
imul
mov
frstor
inc
scas
int3
mov
aas
push
aad
xor
xor
pop
int
test
subb
mov
cmp
mov
out
or
sti
mov
iret
mov
xchg
add
jno
xchg
into
fisubs
mov
cmp
testb
aam
or
inc
jnp
add
jl
jl
mov
adc
sbb
mov
pop
mov
or
daa
push
test
sahf
push
iret
adc
movsl
sub
fidivrs
xchg
lds
test
out
aas
shll
push
jg
jl
lods
push
and
cltd
dec
in
in
in
dec
jae
push
and
sub
jmp
dec
in
xchg
clc
cmp
pop
add
add
push
fistl
mov
xor
pop
out
jl
rclw
int3
outsb
mov
jb
push
cwtl
popf
pop
mov
ljmp
mov
out
pop
mov
test
repz
xchg
mov
aaa
ret
sahf
push
inc
cmp
mov
fnsave
xchg
outsl
jmp
je
fcomp
rcrb
push
daa
adc
sti
shll
mov
sub
movb
mov
mov
sub
ljmp
jp
std
std
add
loopne
mov
or
xchg
push
in
jle
fs
adc
adc
sbb
daa
sub
mov
cs
das
lcall
in
push
gs
xchg
lods
xchg
enter
adc
aad
jbe
or
cld
fsubrs
add
negb
pop
addr16
iret
outsl
mov
push
cltd
test
out
inc
jge
lock
push
add
into
dec
int
shlb
xchg
subb
jbe
xor
mov
sub
jnp
mov
add
cltd
ja
int3
data16
inc
mov
lods
add
stos
inc
mov
sbb
imul
inc
inc
sub
mov
xchg
aad
mov
lock
aaa
idiv
jnp
iret
push
nop
push
mov
or
cmovb
adc
ret
cld
out
scas
les
jmp
std
lods
pop
mov
inc
outsl
adc
inc
in
fsts
mov
idivb
cmp
and
jecxz
mov
add
leave
jp
sbb
xorps
icebp
adc
push
cltd
sub
or
or
inc
pop
cltd
mov
jp
or
cmp
sbb
pop
pop
dec
or
sub
stos
jl
mov
sbb
adc
pop
cmpsb
mov
jae
and
mov
lret
pusha
mov
sbb
sbb
jne
push
mov
mov
test
mov
mov
pop
popf
xchg
or
scas
mov
mov
mov
sbb
add
pushf
xor
cmp
mov
dec
cmpsb
imul
or
mov
insl
aas
adc
mov
xchg
inc
iret
repz
xor
das
or
je
pop
adc
mov
mov
fwait
sbb
mov
dec
add
sbb
outsl
mov
pop
pop
sar
bound
pop
cmpsb
sub
lret
ret
mov
sarb
aad
aam
and
dec
push
inc
ret
gs
test
mov
fs
mov
les
mov
sub
es
addr16
cmp
pushf
fimuls
popf
out
xor
ds
fldcw
frstor
cmp
mov
je
fwait
dec
or
outsb
mov
std
lcall
dec
fcoms
add
cld
mov
push
lea
jmp
pushf
pushf
pushf
popl
bt
xor
clc
xor
bt
clc
xorl
cmp
pushf
xor
call
xchg
adc
pusha
xchg
aam
test
sbb
xchg
shrl
imul
sbb
pusha
lret
ja
pop
inc
fs
mov
or
inc
and
stos
negl
imul
adc
lds
pop
mov
xor
ljmp
dec
in
mov
push
in
jae
into
hlt
sbb
sbb
imul
xor
addl
and
scas
pop
loope
or
dec
jo
xchg
rclb
std
mov
push
das
mov
in
es
push
cltd
fildl
adc
aam
scas
add
or
adc
cmp
inc
rorl
insl
cli
ffree
push
jns
aad
icebp
test
xchg
shlb
clc
lods
test
mov
jp
test
int
aad
inc
lock
inc
shrl
xchg
xchg
dec
inc
dec
lods
or
jp
sar
test
addr16
in
push
push
jo
ljmp
in
inc
lods
sub
cmp
push
dec
pop
cmp
fnstenv
xor
imul
les
add
pushf
lods
cld
les
push
sub
xchg
icebp
stos
push
fiadds
and
popa
hlt
jl
subl
xchg
add
adc
cmp
cmp
pop
mov
lods
xchg
adc
xchg
push
xor
subb
mov
xchg
mov
adc
fnstsw
mov
lahf
sbb
xor
filds
movsl
insb
mov
jns
scas
xor
fsub
add
lods
mov
jecxz
fwait
jl
lcall
cli
fwait
loope
pusha
mov
lods
adc
aad
add
gs
sbb
or
in
jae
xor
mov
add
add
mov
int3
popf
push
cltd
rcrb
mov
adc
xchg
adc
dec
loop
pop
cmc
push
rol
xchg
cmpsb
or
jne
lcall
stc
clc
cmpsb
pop
pusha
popf
inc
movsb
fsubrs
adc
xor
cli
xor
add
adc
mov
dec
rclb
adc
add
lcall
sahf
mov
mov
int
je
and
rorb
fmuls
dec
shrb
out
lret
pop
fsubr
or
nop
or
mov
leave
sbb
rcll
dec
cmp
stos
push
push
sub
xlat
dec
or
mov
test
call
xor
xchg
push
dec
push
mov
setb
push
cs
or
adc
jl
loope
ror
gs
mov
and
jge
lods
lock
daa
out
std
push
cmp
xchg
out
xchg
aam
test
xchg
enter
push
xchg
xor
xchg
ja
imul
jge
mov
in
add
and
gs
rorb
xlat
mov
lret
mov
es
cmp
scas
mov
dec
push
mov
out
sbb
add
dec
movsl
push
cmpsb
cltd
sub
pop
scas
adc
fdivl
adc
mov
xchg
push
sahf
xchg
adc
repz
std
lahf
lret
hlt
loope
pop
pop
ja
cld
mov
cwtl
or
and
shll
add
cmpsl
xchg
sbb
lds
imull
fstpl
jae
jo
and
stos
xor
cmpl
call
cli
rorb
shlb
mov
xchg
add
mov
repnz
mov
add
sbb
xchg
pop
arpl
or
loop
xchg
leave
clc
fsubs
adc
hlt
add
inc
inc
sub
inc
cmp
xorl
adc
addb
jmp
dec
and
xchg
dec
sarb
or
cmp
sbb
sahf
xchg
and
les
notl
into
pushf
ljmp
ret
arpl
rol
inc
mov
xchg
setno
jp
cmp
in
push
mov
test
or
es
lret
adc
mov
or
mov
lcall
je
iret
mov
outsl
insb
pop
stos
sub
lret
popf
inc
ljmp
loope
push
enter
ret
and
out
dec
lahf
mov
inc
inc
pop
roll
mov
xlat
pop
cmpb
sbb
push
mov
push
dec
cmp
pop
dec
dec
push
adc
cmpsb
pop
ss
push
jmp
dec
add
stos
jle
sahf
xchg
and
inc
sbb
stos
add
push
dec
fcomp
sub
or
sub
stos
lea
insl
pop
sub
aaa
xchg
insl
mov
ret
jle
cmp
xorb
and
insl
notb
test
xor
xchg
or
add
in
pop
sti
jne
pop
stc
mov
sbb
xchg
in
sub
cmp
xor
mov
add
dec
iret
or
rcl
cmp
adc
lds
jge
rcr
dec
call
pop
paddusb
pop
lods
inc
rolb
xor
pop
cmp
faddl
cmpsb
add
push
sub
add
jmp
sub
sti
push
sbb
icebp
out
cmp
out
loop
std
pop
call
arpl
mov
jnp
mov
lret
push
or
pop
lods
jecxz
mov
xchg
adc
jge
js
les
add
and
cmp
mov
bound
or
lahf
or
dec
inc
xchg
cli
stos
lods
fmuls
loope
add
cmp
sub
xchg
shlb
pop
sbb
jns
mov
in
jo
jb
adc
sbb
mov
fdivs
add
and
fs
cmc
pop
ja
xor
lahf
insb
dec
sbb
testl
fwait
mov
or
push
mov
addr16
mov
and
sub
xchg
out
sbb
movsl
dec
add
in
in
int3
mov
cmp
ss
push
jbe
xchg
mov
xchg
and
push
or
arpl
dec
add
mov
fdivr
jbe
ss
jg
pop
adc
cmp
add
mov
cs
mov
pop
cmpsb
add
rolb
cld
sarl
xchg
imul
mov
adcb
repz
movsl
push
stos
pop
testb
push
scas
cmp
pop
test
popf
repz
mov
push
push
sbb
pop
imul
mov
sub
in
movsl
in
inc
sbb
add
inc
cmp
dec
dec
cld
hlt
mov
dec
decb
pslld
getsec
pushf
loope
mov
leave
mov
inc
sub
pop
mov
add
sub
xchg
mov
test
std
jle
icebp
fs
loop
pop
hlt
bound
add
mov
rclb
and
adc
push
icebp
loop
push
mov
jno,pn
xor
xor
push
mov
mov
xchg
sbb
add
jecxz
adc
pushf
out
sti
ds
inc
jp
push
add
cs
mov
incb
dec
pusha
scas
rorb
jecxz
imul
scas
jle
and
ret
xchg
pop
xor
ss
adc
lcall
mov
mov
pop
lods
clc
dec
fucomi
bound
xchg
pop
push
and
xchg
ss
or
leave
mov
into
inc
divl
clc
or
cwtl
push
pop
out
out
xor
leave
push
pushf
dec
xlat
add
mov
mov
call
idivb
ss
jbe
pushf
pushf
popl
stc
cmp
xor
push
xor
bt
xor
pusha
xorl
stc
mov
xor
cmp
xor
pushf
xor
cmp
jmp
out
sub
lahf
lahf
push
test
cmp
mov
imul
pop
inc
jmp
sub
pop
cltd
push
adc
cmp
mov
add
mov
push
cmp
andl
xchg
sub
aaa
adcb
mov
dec
repz
fisttps
mov
scas
imul
in
fimull
sarl
orl
push
jno
popa
notl
push
pop
addb
jl
or
lahf
imul
gs
movl
movw
call
ret
ljmp
out
out
adc
xor
lcall
inc
cmc
repz
testl
xchg
loop
add
adc
les
cli
cwtl
jmp
lods
int
or
lahf
mov
xor
and
movsl
imul
jo
mov
mov
outsb
rclb
repnz
or
mov
and
loop
iret
shlb
arpl
cmc
repz
std
in
add
sub
or
add
or
arpl
loop,pn
dec
add
dec
in
mov
xchg
and
fsubrl
scas
mov
jae
cmc
repz
cmpsl
xchg
jnp
sbb
push
pop
movsl
jge
mov
das
mov
cmp
mov
xchg
and
std
dec
lret
add
aas
sahf
pop
mov
out
shl
in
xor
das
dec
mov
leave
push
lcall
push
sbb
orb
jmp
or
fwait
mov
test
lahf
xor
fistl
scas
fldenv
xor
adcl
dec
sub
jno
or
jae
idivb
loope
mov
les
push
fdivs
cmp
aas
add
add
mov
mov
filds
push
sbb
pop
or
jae
sub
inc
pop
dec
imul
mov
xchg
loop
jmp
add
movsb
fisttpll
pop
inc
shll
scas
push
scas
inc
into
out
inc
or
pop
cmp
scas
add
pavgw
mov
inc
out
adcb
mov
mov
scas
xchg
test
hlt
jp
fwait
cs
cmp
jmp
mov
and
pop
out
push
outsl
pop
push
push
cmp
push
inc
stos
enter
scas
jecxz
aad
dec
push
push
mov
test
inc
int3
mov
loope
jb
jno
out
jae
aam
cmove
ja
rclb
mov
jbe
inc
push
mov
das
mov
mov
mov
arpl
icebp
mov
in
jmp
ret
adc
fsts
sub
outsb
mov
les
lods
xor
mov
or
sar
adc
pop
add
rorl
cwtl
sbb
mov
outsb
negl
jmp
sbb
mov
shl
inc
inc
mov
call
jbe
or
mov
aam
sbb
push
dec
daa
or
rcll
pop
movsl
mov
xchg
lods
mov
test
and
aad
in
jp
lahf
sahf
mov
dec
mov
mov
jp
xchg
mov
and
popa
jp
aas
inc
add
mov
fsubrl
test
loop
popa
lods
inc
mov
fwait
xorl
mov
ja
mov
mov
fstl
call
xchg
leave
andb
ja
xchg
outsb
movsl
fnstsw
arpl
neg
mov
dec
and
xchg
xchg
popf
dec
icebp
stc
stc
rcll
mov
dec
xor
xor
jno
addr16
ljmp
mov
lods
and
mov
adc
out
in
jp
scas
xchg
cmpsb
enter
aam
push
and
and
jp
jl
mov
movb
aas
add
push
idivl
push
inc
fisubs
xor
inc
mov
add
shl
xor
iret
pop
add
mov
insl
cld
adc
jb
mov
gs
jle
mov
mov
jnp
push
in
jnp
pop
jmp
mov
jecxz
mov
and
sbb
out
bound
and
ret
pushf
inc
popf
pop
ss
dec
test
xor
mov
jo
cmp
push
out
cmc
xor
movsl
xchg
int
pushf
hlt
ret
pop
andb
sbb
dec
or
rorb
test
sarb
stc
js
push
repnz
xchg
mov
ret
hlt
push
movzwl
mov
push
loope
mov
sbb
out
pop
and
add
jne
sub
lods
cmp
xchg
iret
pop
cmp
pop
xchg
cld
ja
leave
in
fsts
jle
cmpsl
dec
jns
sbb
pop
ss
mov
test
aas
test
orb
lret
mov
jns
pop
lret
aad
jbe
inc
cmc
mov
les
push
xchg
in
mov
inc
stc
dec
jo
mov
cmp
add
cmpsb
pop
push
mov
pushf
out
xchg
fs
mov
sti
cmp
mov
xchg
push
adc
push
aas
rol
imul
xchg
mov
dec
sub
mov
mov
sbb
pop
pop
int3
dec
xchg
cmp
push
inc
imul
call
jae
add
fadd
push
mov
nop
add
jp
xchg
out
or
or
pop
loope
pop
in
mov
repnz
imul
xchg
fcoml
xchg
jnp
and
fldenv
xor
xchg
adc
cmp
xor
adc
push
fsubrl
les
push
mov
push
inc
push
ss
mov
aaa
xchg
push
or
int
out
cmc
cmc
inc
xchg
or
in
in
cmp
cmc
mov
popa
or
mov
jno
xlat
add
test
and
push
je
mov
mov
xchg
inc
lret
cmovns
or
dec
pop
sahf
notl
sub
scas
cwtl
xchg
into
ret
jle
lock
dec
data16
lds
popf
sbb
push
fistpl
sahf
test
mov
pop
aaa
fbld
je
mov
cmpb
xorb
push
pop
out
sbb
xchg
sbb
sub
and
aaa
ret
sbb
adc
jle
inc
lret
out
sti
sbb
cs
cs
test
mov
in
and
nop
pop
jg
jnp
xor
or
pop
inc
stos
xor
in
mov
xchg
inc
enter
gs
mov
loope
stos
mov
dec
mov
jb
sub
cs
les
int3
out
mov
les
cmp
inc
xchg
mov
fsubr
in
sub
loope
xchg
push
shrb
xor
inc
in
mov
adc
or
addb
sub
xlat
inc
test
xchg
push
pop
mov
xchg
stc
add
rcr
jge
fistps
jl
in
pop
rcll
ret
inc
and
jnp
loop
sbb
sbb
mov
xor
push
adc
ds
adc
and
add
mov
imul
or
jle
add
sbb
in
lods
arpl
mov
add
add
cmp
push
pop
xchg
addl
int3
pop
outsl
and
movsl
cmp
cmp
adc
scas
arpl
push
lock
push
cmc
lods
nop
pop
sub
inc
xorb
push
inc
cmpsb
lret
push
scas
push
sub
or
or
test
or
and
int3
out
fstps
jns
sub
test
jle
push
lods
jne
and
icebp
push
sti
iret
lods
xchg
out
mov
mov
idivb
sub
les
mov
out
movb
movl
pusha
lea
jmp
push
cmp
mov
in
cmp
loop
jne
or
xor
and
pop
and
cmp
dec
dec
and
nop
push
arpl
mov
mov
pop
cmp
negl
inc
fistpl
jno
lock
ds
or
jnp
popa
inc
inc
jge
mov
dec
or
inc
inc
test
xchg
sti
mov
push
inc
aaa
aad
jo
sbb
call
test
scas
lahf
shrb
loope
clc
cmp
sub
cmpsl
jmp
and
mov
dec
and
mov
data16
cmp
cmpsl
sub
insb
dec
mov
ret
push
imulb
or
add
jo
jno
mov
push
jge
mov
sarl
lcall
xlat
das
movsb
fs
icebp
and
lahf
enter
lahf
and
je
popa
adc
jo
addb
in
jnp
dec
jo
jmp
mov
fnstenv
lock
fwait
repz
pop
leave
xchg
xchg
ret
insb
repnz
arpl
dec
jno
mov
movsb
push
popf
es
out
lea
lahf
andb
es
psubd
es
xor
mov
pop
push
out
test
imul
xchg
std
xor
and
xchg
in
push
xor
dec
jp
insb
dec
stc
insb
and
rolb
inc
and
mov
fcmovb
sti
push
inc
jnp
inc
mov
jne
imul
cmp
cmp
xor
cmpsb
dec
call
and
xchg
mov
jecxz
push
jmp
push
int3
into
bnd
pop
cmp
in
xchg
ja
or
aam
mov
addr16
pop
pop
add
es
call
cmp
adc
mov
add
idivb
mov
ss
sub
and
popf
pusha
pushl
ret
call
pushl
pushf
popl
cmp
xorl
stc
xor
call
pusha
movl
push
jmp
add
push
out
xchg
and
xchg
frstor
outsb
sbb
xchg
jno
jmp
push
lods
stos
shlb
cmp
out
out
lret
cmp
push
jmp
dec
rcl
fstl
xor
shlb
outsb
adc
add
mov
loop
das
ss
or
fdivrs
mov
pop
cmc
mov
pop
inc
pop
int
mov
or
dec
mov
jno
das
mov
mov
push
mov
dec
test
ja
mov
dec
leave
pop
xor
test
sub
loope
mov
flds
repnz
mov
outsl
push
aad
out
adc
and
mov
and
shlb
scas
icebp
mov
in
add
xor
addb
pop
andl
push
inc
push
aaa
mov
mov
dec
loop
sub
fdivr
fs
in
xchg
fucomi
or
sub
push
mov
mov
out
and
es
add
mov
mov
mov
jecxz
cwtl
fcmovbe
mov
push
iret
xchg
orb
mov
push
sub
inc
iret
sahf
insl
test
sbb
fiadds
pop
inc
into
mov
lcall
mov
lds
xor
mov
pop
test
mov
sub
repz
mov
or
xor
jns
adc
and
stc
psrlw
int
lods
ret
xor
xor
pop
adc
mov
mov
cmp
shl
and
dec
test
stos
mov
incl
adc
pop
mov
and
mov
stos
mov
enter
ljmp
fisttpl
out
mov
add
and
shlb
and
das
and
pop
pushf
sub
sbb
inc
bnd
sbb
mov
mov
push
negl
sti
pop
add
pusha
fwait
lcall
add
loop
cmpsl
fisttpll
icebp
test
jno
dec
pop
mov
mov
test
pop
scas
xchg
xchg
mov
or
xor
mov
out
mov
lock
dec
test
les
xor
popw
test
xor
in
sbb
mov
add
je
pop
mov
hlt
adc
jmp
dec
pop
movsl
imul
incb
adc
jnp
mov
ds
dec
jns
loopne
fstpl
push
mov
push
jae
jae
ret
movsl
shll
pop
pop
add
add
mov
iret
mov
xchg
pop
aad
call
mulb
mov
shll
xchg
jnp
lahf
xchg
lds
lock
adc
push
jecxz
ja
jg
push
jge
cli
and
jl
pop
and
jnp
pop
push
pop
inc
insl
cwtl
les
inc
jae
add
pop
mov
inc
aas
test
pop
jno
lds
xchg
xchg
fildl
cld
xchg
jge
test
add
aam
fldt
mov
xor
push
push
in
mov
pushf
pop
adc
loop
loope
pop
jns
adc
jnp
sub
imul
inc
add
rclb
das
and
add
pop
sub
leave
dec
xchg
es
add
mov
pushf
dec
or
adc
test
jo
cwtl
mov
adc
ret
lahf
push
xchg
xor
pop
dec
mov
in
insb
enter
cmp
lahf
cmpsb
or
xchg
push
cltd
sbb
hlt
aad
mov
sub
mov
fdivs
mov
mov
aas
loop
inc
pop
fsts
cs
movl
push
add
cld
xchg
cmpsb
inc
mov
pop
mov
dec
mov
mov
out
cmp
or
pop
add
cmp
jle
das
cmp
xorl
lods
dec
cmpsl
add
jb
cmp
sahf
fs
arpl
jp
or
inc
mov
cmp
dec
pop
test
in
jmp
insl
outsb
mov
stos
cmp
push
pop
push
pop
pop
mov
loop
cvtps2pd
fisubrl
fidivl
repz
add
mov
out
push
es
in
and
cmpsl
and
or
mov
push
jge
push
int3
enter
fistpll
push
dec
rcl
outsl
daa
neg
or
stos
movb
nop
sbb
stc
es
ja
ret
mov
enter
inc
test
dec
inc
cmpsb
outsl
int
andl
out
and
fdivrl
sbb
mov
jg
jp
xlat
aas
lahf
mov
pop
push
ljmp
pop
jno,pt
addr16
pop
adc
sbb
dec
les
int3
leave
add
je
ficoms
outsb
add
push
sarl
in
stos
cwtl
xchg
ficoml
call
dec
gs
push
cli
cmp
mov
dec
push
xor
or
insb
mov
xchg
xlat
jo
xor
out
lods
fs
mov
dec
push
or
aaa
push
push
repnz
mov
xchg
arpl
fsubs
test
xor
int3
xor
mov
jl
mov
cmp
daa
movsb
loopne
inc
push
mov
rcll
ss
jg
jl
mov
cmp
push
pusha
movsl
fstl
cmpsb
ljmp
sbb
add
andl
sbb
gs
pop
mov
dec
mov
scas
and
sbb
sti
push
or
inc
stc
aam
inc
adc
inc
and
popf
or
subl
sub
in
sarb
cmp
jb
dec
lcall
or
and
mov
popf
and
cli
nop
je
je
mov
test
inc
xchg
mov
push
arpl
adc
repnz
jmp
addr16
dec
adc
fstl
mov
dec
out
mulb
rcrl
ds
fcmovbe
in
or
push
sahf
add
movzbl
sahf
shl
xchg
div
xchg
xlat
loope
pop
pop
push
mov
jl
add
mov
js
add
dec
dec
bound
out
ret
stc
jg
pusha
cmp
sbb
sub
lock
xchg
loop
inc
xchg
mov
push
jp
mov
jmp
ret
rolb
jb
cwtl
ljmp
push
fcoms
mov
inc
cmpl
std
nop
push
inc
data16
out
into
lahf
or
inc
inc
cli
test
mov
loopne
dec
pop
scas
mov
rorb
pop
fcoms
xchg
out
mov
push
cmp
xor
xchg
jns
subb
sbb
jl
je
jne
inc
loop
imul
scas
test
aad
mov
pop
insb
jg
mov
add
gs
adc
in
adc
jle
in
or
mov
xchg
jge
dec
scas
cmpsl
ror
cmp
fs
mov
imul
mov
mov
add
xorb
in
push
lea
mov
int
or
push
xchg
leave
aad
sub
cmpb
xchg
fsubs
jl
gs
call
mov
pushf
pop
push
pop
adc
fwait
dec
ret
dec
out
test
xchg
js
cmc
xchg
sti
call
add
mov
sbb
mov
xchg
inc
frstor
rolb
add
sub
cwtl
sbb
mov
xchg
xor
cmc
xchg
adc
push
loop
mov
sub
mov
inc
ficompl
add
or
pop
imul
iret
lock
xor
jns
and
int
mov
test
js
mov
jge
xchg
bound
lcall
pop
in
out
enter
int3
pusha
or
jp
sub
jno
jg
dec
lret
outsl
or
cmp
stos
dec
andb
push
lock
cmp
and
in
jae
sbb
lods
sahf
jge
jae
lea
push
imul
jecxz
mov
cmpsl
int3
mov
fcoms
pop
sarb
xchg
aam
sbb
dec
inc
mov
dec
inc
sbb
test
jne
adc
arpl
push
add
sub
scas
andl
inc
and
lcall
cwtl
cltd
or
add
jbe
test
in
mov
jp,pn
xlat
lret
ja
outsl
mov
xor
in
xchg
bound
pop
push
lods
push
int
cli
inc
aam
int
add
cmpsb
stos
xchg
jge
xchg
les
int3
std
cmp
ja,pt
dec
sub
adc
or
ljmp
mov
push
add
mov
addr16
fidivrs
mov
adc
mov
shr
xor
cli
mov
lret
cld
icebp
xchg
lods
popf
add
call
adc
cwtl
fiaddl
out
xchg
cltd
inc
loop
test
pop
jb
rcll
cmp
push
jno
or
inc
pop
cmp
mov
add
addb
leave
push
sahf
aaa
mov
cmp
movsl
xchg
push
outsb
xor
sti
mov
mov
fwait
jae
loopne
push
xchg
loopne
xchg
jl
or
and
loopne
sbb
and
jae
popa
idivl
push
jp
sub
or
mov
hlt
loope
outsb
inc
adc
mov
push
es
jae
orb
jecxz
cli
stc
push
inc
cmp
mov
adc
adc
sbb
mov
idivb
sbb
ret
repz
bt
xor
clc
jmp
pusha
and
push
jo
sahf
adc
dec
imul
cmp
dec
cmpsl
inc
push
popa
in
push
push
sub
xchg
xlat
pop
out
sub
cs
loopne
fwait
cmpsb
rolb
repnz
pop
in
icebp
push
inc
cmp
mov
push
pop
mov
flds
push
data16
in
mov
scas
xor
push
jp
js
adc
xor
xor
fldl
out
cmp
scas
inc
arpl
pop
popa
in
push
test
and
mov
pop
inc
pop
mov
xchg
sahf
adc
or
clc
in
jp
jne
mov
test
bound
into
mov
mov
popa
in
push
imul
addr16
lds
daa
scas
xor
cltd
and
pop
hlt
jnp
test
mov
test
xchg
lods
cmpsb
sub
lods
push
fcoml
cmp
sbb
bound
xor
imull
sbb
ja
or
gs
inc
sti
mull
jo
cmpsb
stos
clc
mov
mov
xor
rcll
rclb
jne
sbb
mov
jnp
mov
lahf
push
jmp
shll
cmpsb
and
push
roll
shll
mov
push
out
daa
push
push
mov
lahf
xlat
ret
inc
roll
mov
jg
popa
out
sahf
pop
repz
sbb
fimuls
into
mov
cld
std
arpl
hlt
fisubl
mov
pop
xchg
mov
filds
xchg
cmp
inc
fs
mov
jmp
sti
sbb
aad
inc
mov
stos
inc
xor
inc
dec
push
pop
andl
pop
xchg
test
xchg
push
les
cmpsl
sbb
je
dec
fcom
adc
shlb
add
hlt
add
adc
shrb
cmp
mov
loope
bound
jbe
add
daa
rcrb
clc
ss
add
xor
adc
dec
adc
lods
lahf
sub
dec
mov
xchg
pop
cmp
jl
movsb
xchg
dec
cmc
int
sti
lock
stos
in
xlat
jl
test
xor
sub
stos
mov
int
loopne
outsb
inc
xor
and
adcl
inc
inc
cmp
jle
test
stc
or
je
sarb
xor
sbb
xchg
scas
push
xchg
cld
xor
mov
jmp
loop
call
jge
sub
fsubs
lret
outsb
dec
lret
andb
into
aad
xchg
daa
jl
pop
push
aad
xchg
fsubl
xor
jg
rcr
sti
mov
sub
mov
repz
pop
sub
or
andl
sbb
call
lods
cmp
inc
stos
mov
push
psubq
sub
test
fwait
and
jno
insl
adc
lret
pop
xor
mov
sub
iret
mov
andl
lea
sti
hlt
mov
mov
lock
out
or
stos
pop
popa
cmp
jno
adc
pusha
cwtl
mov
lods
adc
mov
cmp
adc
stc
pop
cmpsb
or
stos
mov
jno
jle
cmpsl
decl
push
std
popa
jge
and
scas
sbb
aam
fcoms
xor
mov
frstor
iret
lds
pop
test
dec
mov
out
jp
out
in
inc
leave
or
inc
enter
sbb
out
bound
ss
lahf
cmp
xchg
stc
sahf
cmpsb
or
add
pop
mov
push
inc
bnd
pop
mov
test
cmp
mov
mov
push
vpunpcklwd
xor
idivl
stos
jecxz
filds
in
je
sbbb
push
pushf
adc
mov
lret
inc
or
inc
pop
or
xor
inc
push
cmp
sub
mov
cltd
mov
adc
adc
pop
aam
test
mov
sub
adc
stos
jmp
sbb
movsb
bnd
or
cmp
scas
ljmp
daa
test
insl
push
add
pop
rcr
mov
mov
jmp
mov
or
movsbl
iret
adc
jg
dec
loopne
sahf
lea
add
adc
mov
ja
scas
and
sbb
test
mov
pop
icebp
outsl
dec
xor
xchg
lods
sbb
and
inc
ja
xchg
call
sub
ljmp
loop
fwait
arpl
je
cmp
add
add
pop
inc
imul
xor
outsb
dec
in
pop
decb
test
or
icebp
xchg
es
rolb
les
cltd
add
push
pxor
push
xchg
cmp
out
stos
push
int3
inc
mov
pop
push
jnp
outsb
popa
cld
xlat
fs
lods
dec
lret
cmp
cmp
mov
inc
in
vprotd
mov
xchg
ja
jecxz
out
cmp
lsl
inc
sarl
mov
jns
or
jo
nop
repz
cmp
dec
js
rol
cli
in
xlat
and
aas
sbb
gs
sbb
and
in
adc
cld
add
push
add
adc
subb
imul
inc
lds
das
mov
mov
cmp
cmpsl
push
pop
inc
in
sti
addl
stc
ficomps
sti
and
in
adcl
test
adc
mov
jb
mov
mov
or
aam
push
inc
out
out
orb
cltd
pop
mov
je
inc
mov
insb
insl
loopne
dec
into
pop
insb
scas
test
sbb
cld
shll
xchg
xor
dec
sahf
dec
cmp
sti
mov
mov
adc
mov
jae
sub
loop
fwait
aad
mov
push
and
stos
and
sahf
or
jg
mov
loop
add
lahf
fsts
movsl
and
mov
xor
lret
clc
loope
sub
in
or
rcll
fists
fucomip
sbb
lret
cld
ss
push
js
xor
push
jmp
loopne
addl
xchg
jb
test
mov
test
add
add
inc
mov
es
dec
in
pop
jb
mov
fists
adc
js
mov
xchg
lea
insb
inc
push
xor
sti
fldcw
or
pop
sti
mov
fs
loop
mov
inc
gs
sbb
add
in
mov
insl
jp
inc
mov
xchg
or
push
push
cmp
inc
or
adc
and
gs
xlat
push
es
or
push
andl
loop
jg
fwait
aam
sahf
pop
aas
stos
rorb
stc
dec
sbb
data16
call
inc
mov
loope
dec
arpl
fsubs
rclb
xorl
insl
and
or
sbb
js
mov
fstpl
inc
sub
popl
lods
pop
fprem
pop
mov
pop
mov
xchg
mov
pop
adc
mov
ret
or
lret
xchg
inc
dec
cmp
push
pushf
das
ret
cltd
push
cmp
rcl
mov
or
test
cs
das
inc
ss
push
mov
jne
addb
push
rclb
xor
push
pop
and
ds
and
inc
aas
sub
addl
outsb
idivb
les
xorl
repnz
pusha
int3
insb
mov
pop
add
dec
mov
subl
xlat
mov
xor
mov
aad
xchg
sub
aam
mov
add
aad
and
cvtpi2ps
mov
add
clc
stos
mov
and
mov
inc
jg
das
inc
enter
sub
dec
jns
jns
mov
push
repz
dec
icebp
and
addl
mov
mov
fcomps
pusha
stos
inc
roll
clc
das
sub
sub
xor
rcr
pop
push
je
fs
jge
mov
push
rcrl
pop
insl
popa
jecxz
lret
jge
daa
sbb
fldl
test
into
in
inc
pop
lcall
mov
jmp
jno
or
cmpsl
push
or
or
les
imul
push
mov
inc
cmc
xor
cmp
push
pushl
popf
push
pushl
ret
imul
inc
aam
xchg
pop
insl
cltd
andl
aad
jb
shl
sbb
jmp
add
xor
mov
add
sub
mov
mov
sarb
fildll
inc
or
mov
inc
pop
adc
std
scas
xor
push
inc
jp
add
inc
loope
je
aam
cmpsl
xor
mov
fisubrs
mov
and
out
loope
mov
addl
jl
pop
mov
inc
cmp
push
cmpsl
cmp
sbb
testb
arpl
xorl
jp
jo
adc
inc
push
xor
jmp
dec
push
push
mov
iret
lahf
xchg
jae
jp
inc
add
dec
mov
lret
adc
sbb
dec
std
dec
rcll
add
mov
sbb
lods
fimuls
jnp
cmp
mov
orb
jbe
ja
jp
sbb
lret
test
je
or
and
lret
cli
pop
lahf
jmp
xchg
outsb
int
xchg
fisubl
adc
aam
jge
mov
decl
push
stos
push
inc
fs
xchg
cld
dec
inc
mov
out
jns
add
mov
xor
iret
dec
xchg
xor
je
int3
or
inc
cmp
push
mov
pusha
sbb
mov
fdivr
mov
scas
push
cli
sub
jae
cli
inc
fnstenv
push
xor
push
sbb
dec
sbb
inc
ljmp
pop
xchg
jmp
mov
clc
fidivrs
lret
int3
adc
int
push
jl
and
in
jno
fsubrp
cmp
iret
dec
push
push
fcmovnu
and
roll
xlat
ret
cmc
or
out
test
outsl
push
roll
xchg
bnd
add
lcall
pop
sub
mov
jbe
xchg
jp
in
je
xor
push
lods
add
jmp
incb
das
bound
stc
xchg
arpl
insl
or
out
cmp
out
popa
dec
ds
jns
jo
notb
add
mov
les
dec
jns
out
add
out
movsl
insl
insb
jo
push
dec
push
lcall
adc
in
push
jmp
jmp
jmp
call
movl
mov
jmp
pusha
pusha
movl
pushl
movw
pushf
lea
jmp
push
push
movl
mov
call
outsl
inc
shr
xor
mov
les
mov
push
push
add
cmpsl
outsb
icebp
adcl
xchg
inc
push
lret
stos
xchg
ret
psadbw
or
xchg
xchg
xchg
inc
mov
xorl
xor
xchg
and
insl
adc
icebp
in
hlt
repnz
or
movsl
aaa
and
mov
out
lret
std
daa
push
xchg
inc
push
xchg
mov
push
pop
pop
andb
rorb
cs
push
es
std
loop
dec
or
sbb
dec
fldenv
sbb
fdivrl
xchg
inc
push
sub
mov
out
cld
cli
push
add
popa
sti
movsl
dec
imul
add
sub
or
inc
fldenv
jo
adc
dec
xor
or
xchg
inc
push
xchg
sbb
out
mov
mov
sbb
pushf
adc
movsb
insb
subl
adc
and
pop
mov
pop
test
lret
sahf
and
jae
xchg
push
jp
int
jnp
shlb
mov
out
xor
mov
add
mov
insb
xchg
shrl
inc
mov
mov
xchg
daa
xchg
or
ds
iret
int
shlb
loopne
xor
cmp
or
iret
sti
add
fwait
sbb
jecxz,pn
push
sbb
inc
mov
out
sbb
fxch
dec
int3
dec
lcall
jg
fcmove
inc
xor
pop
bound
and
pop
sarb
sub
gs
and
lret
mov
ljmp
sub
mov
imul
js
jge
loop
sti
out
xchg
ljmp
aam
ret
push
jns
addr16
add
mov
cli
adc
sbb
jp
jb
cli
inc
mov
mov
dec
xchg
sub
or
adc
mov
push
mov
mov
aam
mov
inc
pushf
sbb
out
fucomip
xor
outsl
mov
push
das
shll
mov
pusha
sbb
pusha
xor
xor
push
xor
or
mov
xchg
outsl
dec
jle
cli
aad
adc
outsb
jmp
xchg
jmp
shll
cltd
sbb
ret
cmp
mov
aam
or
cltd
js
jp
mov
pop
xorl
int3
ss
pop
cmpsb
jmp
mov
fdivrl
sbb
push
and
push
test
insl
dec
imul
inc
cmp
pop
aas
mov
push
mov
adc
push
ljmp
ss
add
cmpsb
xchg
jns
inc
mov
test
jno
fdivp
imul
out
and
sub
sti
xchg
xor
in
push
es
mov
icebp
sbb
ljmp
mov
enter
sbb
test
sub
or
push
mov
bound
ljmp
stos
popa
sub
dec
sub
pusha
xor
adc
jae
not
push
repnz
outsb
fcoml
pop
int
jg
cmp
inc
int3
fxch
dec
dec
nop
adc
test
inc
cmp
xchg
inc
mov
push
sub
test
sarl
push
les
cmpxchg
imul
rorl
jo
leave
sub
in
add
push
jmp
cltd
jl
mov
xor
push
mov
xchg
sub
inc
outsb
fildl
pop
data16
int3
cmpsl
lds
call
xlat
or
movsb
sub
cmpsb
inc
jmp
xor
mov
add
outsl
js
stos
sub
movsb
lods
mov
jmp
inc
pop
pop
cmp
adc
or
push
daa
pushf
xorl
and
sbb
lret
and
in
ja
les
sbb
out
mov
push
xlat
mov
sub
adc
mov
and
pop
jb
popa
jge
jns
dec
or
outsl
sti
fistpl
lds
stos
test
testl
inc
lea
fsubrl
xor
imul
mov
fnstsw
addr16
subl
bound
lods
fisttpll
xchg
xlat
push
xchg
and
xor
mov
test
sub
or
shll
out
mov
hlt
into
cmpsb
mov
jo
pop
sub
mov
ss
loope
xor
fcmovne
aaa
iret
or
sub
es
push
push
jge
and
push
mov
testb
push
cli
push
mov
scas
repnz
dec
mov
lcall
out
push
inc
mov
stos
shrl
xchg
rol
adc
lahf
xor
add
adc
push
xor
sub
es
mov
aam
cmp
mov
outsl
arpl
iret
cwtl
xor
mov
xchg
insl
push
ret
inc
lret
push
mov
jns
xchg
sarb
out
fwait
and
jecxz
mov
iret
std
push
dec
gs
xor
adc
dec
dec
lret
push
mov
test
add
xchg
sbb
inc
in
lock
push
adc
xlat
cltd
or
add
sub
jnp
inc
orb
fbld
jae
iret
or
stc
mov
sub
pause
adc
fcom
fcmovb
dec
lods
imull
pop
shr
mull
xchg
fsubrs
das
or
fldt
popa
sahf
inc
mov
mov
loop
dec
lock
jp
xor
pop
pop
test
jb
sbb
mov
ret
rcll
shll
xchg
dec
testl
bound
sti
xchg
popa
pop
pause
sbb
es
sub
cmp
iret
mov
sub
mov
bound
sub
jns
inc
outsl
dec
jne
int3
outsb
inc
xor
movsb
enter
lock
mov
cwtl
xor
rcrb
pop
inc
into
and
xchg
in
pop
sbb
jmp
popa
cli
mov
repz
adc
xor
xchg
dec
jg
test
add
xor
out
insb
pop
jbe
lock
xor
mov
mov
xor
mov
pop
pop
leave
cmpsl
jae
fstpt
mov
daa
adc
mov
in
fdivr
jmp
dec
push
aas
push
or
mov
daa
dec
es
sbb
jp
fldcw
cmp
cltd
pop
pop
lods
pop
cmp
rorl
rep
std
or
fbld
mov
dec
pop
loop
jae
aaa
test
cmpsl
repnz
iret
test
int3
dec
fisubs
adc
push
bound
test
stos
ds
nopl
call
lea
xchg
xor
jno
jnp
mov
xchg
cmpsb
dec
dec
xorb
push
testb
jbe,pt
jmp
dec
mov
sub
sub
inc
push
test
mov
push
jmp
jb
xchg
mov
inc
cltd
sub
sahf
xchg
fwait
test
in
lea
adc
in
es
mov
inc
cld
test
nop
or
fistl
mov
popa
push
loope
aaa
mov
mov
mov
cwtl
mov
fcmovu
fnsave
nop
fstl
pop
test
fwait
and
das
xchg
xchg
test
pop
mov
jnp
jmp
mov
inc
mov
in
jge
inc
aam
data16
xchg
push
scas
orl
fwait
mov
add
movsb
jne
or
mov
cmp
je
mov
leave
movl
push
pusha
push
movl
push
lea
jmp
jmp
dec
cmp
lcall
loope
ja
sub
je
adc
sub
std
add
pop
adc
lods
test
sbb
cmp
cmp
push
hlt
leave
movsl
inc
xor
bound
testb
cmpsl
aaa
ret
push
lods
jbe
inc
leave
jge
dec
ret
mov
or
inc
jp
iret
pop
dec
mov
gs
mov
mov
inc
cmp
jle
mov
inc
scas
sar
aam
iret
mov
cmc
xor
adc
sbb
pop
div
cmp
mov
rolb
hlt
test
fmull
push
cmc
mov
mov
daa
out
mov
mov
sub
insb
lds
mov
cmp
mov
cmp
jnp
inc
mov
addr16
inc
mov
dec
cmp
xchg
dec
pushf
test
testl
xor
iret
push
push
scas
std
repz
push
add
cmc
roll
pop
sbb
inc
rclb
subb
inc
mov
jge
subl
lods
pop
and
mov
mov
push
mov
idivl
xor
lods
jmp
shlb
sub
push
in
nop
ret
sub
fldl
pop
or
mov
cltd
std
pop
add
clc
stc
mov
loope
aaa
xlat
xor
lret
test
pop
sub
mov
arpl
aas
sub
sti
mov
mov
jp
pushf
test
cld
outsl
in
xchg
sbb
test
and
mov
dec
mov
inc
aas
fbld
xor
out
inc
push
lcall
push
or
inc
jne
aam
imulb
sarb
inc
or
lods
jg
and
daa
push
cmpb
cli
xchg
push
pop
pop
fld
test
adc
jbe
int
sahf
insb
xor
cmp
cmpsb
adc
jmp
or
cmpl
xchg
fisubrs
adc
jb
add
push
xchg
pusha
xchg
in
lds
les
or
ljmp
in
add
ss
push
xor
and
sub
hlt
divl
add
push
ljmp
jno
xchg
pop
cmp
leave
mov
xor
inc
in
mov
mov
push
ljmp
out
add
cwtl
xchg
in
movsb
pop
jecxz
sbb
mov
xor
iret
test
fcoms
movzbl
sbb
stc
gs
and
add
push
fwait
pop
mov
push
jmp
push
cmp
int
lret
les
pop
rcr
bound
icebp
inc
jae
add
dec
xchg
jne
mov
pop
cmp
add
add
and
inc
insb
rcrl
mov
add
jae
push
jnp
mov
pop
shll
and
mov
sbb
jl
cmp
push
or
jne
xlat
pop
cmp
cwtl
pop
mov
xchg
jecxz
mov
ja
hlt
inc
push
lods
pop
xbegin
push
jp
jl
lret
sbb
push
test
ret
dec
sbb
cmp
lcall
adc
pop
insl
cltd
cld
ljmp
nop
or
aad
push
or
cmc
mov
iret
leavew
dec
cli
mov
sbb
sti
push
sbb
subb
rorb
or
mov
vxorps
dec
push
cltd
adc
or
push
dec
inc
inc
xor
popa
push
adc
sub
xchg
out
inc
scas
push
fidivl
inc
xchg
and
mov
stos
leave
xor
int
xchg
jecxz
clc
jp
pop
int
xchg
mov
out
xlat
or
iret
dec
mov
cmp
xor
and
fsubr
adc
mov
ret
xchg
inc
fistpl
fwait
sti
lds
push
cmc
mov
dec
pop
jl
or
pop
fsubl
inc
cmp
and
test
rolb
jo
call
xchg
int
mov
push
mov
inc
iret
pop
jbe
divb
xchg
dec
xor
jns
cmp
aaa
cmp
mov
lds
and
lods
dec
cmpsb
sbb
cs
push
mov
adc
js
rol
jmp
add
outsl
mov
push
jp
scas
sbb
dec
cmp
ljmp
lea
int
call
out
lret
js
cmp
sub
sub
dec
adc
lds
and
lret
es
pop
xlat
in
das
mov
sti
mov
outsl
out
cmpsb
negb
test
sbb
xchg
pop
sbb
cmpsb
inc
out
in
jne
cmp
adc
xlat
add
imul
pop
and
mov
idivb
add
cli
add
inc
mov
in
pop
daa
loopne
sbb
mov
dec
stos
cli
inc
shlb
movsl
int3
cmpsb
fcoml
add
lret
jo
jb
fisubrs
adc
sub
xor
inc
xchg
push
ficomps
test
sub
aas
pop
mov
jae
adc
into
ret
getsec
xor
pop
scas
inc
mov
xor
xchg
push
add
jb
fsts
testb
int3
push
mov
and
cmp
push
pop
dec
pop
int3
push
pop
add
add
jbe
push
pop
push
mov
push
in
popl
fiaddl
and
outsl
hlt
sub
sbb
fld
inc
in
outsl
pusha
cmpsb
les
fcomps
je
xchg
mov
pop
xchg
sbb
nop
adc
cld
jle
cwtl
sub
aaa
jns
sarl
fwait
xor
inc
loope
ja
dec
dec
iret
and
jl
inc
jmp
xor
cmpsl
mov
inc
and
stos
sbb
pop
movsb
inc
jbe
out
stc
in
push
adc
mov
mov
loope
aad
add
and
sub
mov
or
aaa
xor
and
inc
sub
aaa
xor
mov
mov
adc
daa
popf
fists
inc
sub
cmp
pop
mov
jl
cmpb
sbb
xor
jnp
incl
push
test
jns
ss
adc
cmp
decl
push
in
outsl
xor
xor
sub
cmpsb
jo
sbb
imul
idivl
xchg
in
fs
sahf
pop
lods
cli
dec
mov
insl
xchg
ret
or
lcall
mov
icebp
mull
ret
rcll
mov
je
shll
fsubl
dec
xchg
xor
cmp
pop
sbb
rolb
jns
fwait
lock
push
cld
jle
aam
mov
stos
and
sti
lret
jg
mov
xchg
xchg
ja
aas
inc
stos
push
or
push
out
addl
xchg
push
pop
in
ficoms
aad
in
mov
ret
push
and
nop
jnp
sbb
or
inc
xor
cld
sub
cmpsl
outsl
xor
or
push
js
adc
add
mov
lcall
lret
test
adc
push
mov
cmc
pop
inc
push
mov
fwait
lds
dec
fmulp
push
jmp
std
pushf
xor
xchg
bound
mov
or
test
mov
push
ror
loopne
aas
sub
scas
fisubrl
mov
mov
or
imul
push
sub
pop
repnz
roll
sbb
fstps
push
mov
fucomip
inc
jnp
inc
or
sbb
outsb
pop
aad
fistpll
fistpll
sub
icebp
mov
mov
int
int3
pusha
xlat
int
sub
xchg
dec
sub
shr
jl
push
ljmp
jne
jno
xchg
repz
sbb
jmp
pop
test
add
push
nop
repnz
nop
cmp
test
jb
lcall
sub
scas
mov
inc
loopne
ljmp
ret
daa
inc
aaa
in
pushf
mov
andb
adc
adc
inc
in
push
or
aaa
mov
stos
sub
imul
push
int
adc
in
xchg
sub
sbb
data16
push
xor
test
xor
cmp
iret
out
sub
mov
mov
add
sti
and
enter
lock
push
inc
jl
cmp
push
jnp
aaa
dec
repz
mov
inc
sub
pop
stos
fadds
repz
mov
lods
sub
cmp
inc
das
test
xor
scas
add
adc
xor
mov
adc
push
jmp
push
pop
push
cmp
ljmp
test
mov
dec
rcrb
sub
loope
and
loop
and
xchg
shl
out
inc
out
les
fs
gs
xor
je,pt
or
andb
and
pop
fnstsw
pop
in
cmp
lahf
jb
or
pusha
idivb
jge
cli
in
push
inc
nop
and
arpl
cmp
and
scas
jbe
jne
mov
dec
xor
mov
imul
shrl
mov
mov
push
xorl
and
or
loopne
pop
out
je
mov
adc
cmpsl
mov
and
pop
sub
mov
loop
in
imull
ljmp
or
iret
cmp
jo
mov
add
cs
insb
or
add
rcr
into
pop
or
dec
dec
adc
dec
rcrb
test
jns
addr16
push
sub
sbb
sbb
movsb
xor
daa
fists
test
lret
or
fsubrl
mov
arpl
jno
mov
ret
inc
sub
add
dec
push
xor
cmp
push
ljmp
jle
lcall
scas
loope
xor
test
jbe
out
push
stc
mov
leave
push
xor
mov
sahf
inc
push
les
lahf
mov
push
and
dec
gs
xchg
pusha
sub
jg
inc
aaa
mov
sbb
sbb
les
dec
mov
push
jle
stos
aad
or
jnp
push
outsl
ret
int3
push
xchg
and
idivb
jg
push
fnstcw
aas
mov
ss
jle
xchg
nop
popa
push
mov
adc
inc
lret
mov
jmp
lods
jmp
lahf
push
imul
sti
test
cmp
repz
adc
rclb
sbb
fcmovb
lods
ss
xchg
push
jns
js
push
sahf
cmp
pcmpgtb
nop
dec
sbb
scas
call
cmp
sarl
cmc
inc
testb
vpmacsdql
scas
sub
and
lds
mov
xorb
lret
out
popf
arpl
lock
loope
lret
sbb
push
mov
mov
and
xor
nop
cmp
movsb
mov
mov
mov
pop
insl
mov
enter
dec
aad
dec
xchg
mov
sbb
fcoml
jo
scas
mov
or
mov
pop
test
idivl
push
push
adc
lods
push
push
push
mov
lock
jae
ror
nop
cs
mov
sub
push
pop
jbe
ds
add
cwtl
sbb
in
pusha
xchg
xchg
mov
push
bound
add
push
adc
lret
imul
lds
pop
out
retw
pop
std
push
scas
cmp
movsl
mov
jg
lea
xchg
addl
xchg
inc
rcl
and
les
adc
es
dec
mov
and
pop
mov
cli
mov
pop
aas
fs
mov
lret
sar
shrb
das
fdivrs
test
sub
ss
cmp
mov
xor
test
scas
mov
repnz
mov
fmuls
les
xchg
ret
inc
mov
iret
mov
xchg
ud2
shll
leave
xchg
pop
idivb
jns
mov
call
hlt
fbstp
lds
iret
std
mov
dec
movsl
push
mov
jbe
cmc
cwtl
ret
sbb
test
stos
repnz
or
test
rcrb
out
and
dec
lret
inc
sub
jecxz
jp
sarb
cmpsb
sub
and
popf
fwait
out
jp
dec
enter
aaa
mov
lcall
stc
jmp
jne
hlt
aad
aaa
outsb
into
dec
call
mov
js
ljmp
mov
adc
adc
xchg
pop
dec
outsl
fwait
movsl
mov
adcl
out
test
jle
mov
pop
into
cmpsb
xchg
mov
jo
es
pop
cs
imul
daa
and
push
xor
addr16
lea
pop
pop
mov
insb
enter
xor
mov
pusha
outsl
pop
filds
lds
cmp
xchg
mov
xchg
loopne
repnz
int3
test
popf
lea
scas
stos
inc
or
xorb
cmp
inc
push
pop
hlt
repnz
pushl
xchg
or
cmp
lds
scas
xor
add
mov
sahf
mov
xor
xor
mov
lcall
or
or
sbb
sub
jnp
or
dec
arpl
and
ds
out
xchg
mov
leave
mov
pop
dec
xchg
sub
and
cs
std
filds
add
cmp
mov
ds
aas
mov
sbb
sub
sub
cld
es
mov
fxtract
lcall
dec
add
and
mov
fdivs
mov
lods
mov
incb
sub
push
aad
jle
push
test
loope
cmp
push
push
jmp
fs
pop
mov
push
mov
cwtl
aas
loopne
or
test
pop
lods
mov
mov
orb
mov
std
sbb
jno
pusha
out
imul
jnp
repnz
xchg
loopne
scas
gs
fcoms
sbb
mov
addr16
rcrb
int3
inc
add
mov
and
mov
and
and
add
ret
add
sub
je
andb
jl
push
fildl
and
and
les
pop
lods
lea
mov
and
lret
movsl
js
sub
insl
idivb
jp
add
mov
dec
sub
test
pop
jbe
and
sbb
testl
jae
mov
jnp
out
lcall
adcl
aas
push
mov
jp
pop
push
out
jo
cmp
bnd
lret
ja
call
dec
cmp
pop
mov
dec
sub
mov
cmp
mov
in
or
dec
inc
imul
sub
and
imul
inc
ja
add
call
pop
or
pop
jns
xchg
adc
pop
xchg
cmp
mov
inc
ficoml
push
enter
ror
push
dec
aaa
cmp
movsl
or
jbe
lret
push
iret
lahf
lea
mov
sub
aad
ret
in
fldcw
mov
cmp
cmp
jae
dec
jp
aas
sub
adc
mov
sahf
mov
xlat
dec
mov
cmc
jmp
outsb
mov
jnp
sub
xlat
fst
sti
ljmp
and
push
testl
cmp
out
jne
and
pop
cmp
cmp
xchg
scas
jmp
icebp
cmp
test
mov
cmovbe
xor
jb
push
push
jbe
jbe
mov
in
int3
mov
popa
jne
mov
push
jns
jp
push
cmp
imul
and
xchg
sahf
aad
sub
movl
cmp
dec
or
jl
cltd
rcrl
xor
popa
shl
js
mov
ret
cs
or
fs
dec
lea
stos
cmp
pop
notl
fisttpll
aas
repz
add
xor
mov
dec
xor
lock
pop
cmp
stos
pop
movsl
and
sbb
out
imul
pop
push
andb
shr
or
iret
mov
xor
shr
div
loopne
test
add
rolb
inc
repz
or
or
mov
lret
out
pop
adc
dec
gs
push
dec
int3
lret
fbstp
dec
ds
dec
mov
jecxz
jae
jg
mov
lea
dec
testl
and
ja
dec
dec
loopne
jle
pop
push
iret
jno
push
inc
mov
movsl
add
pop
out
jo
ret
dec
xchg
and
fistpl
into
scas
sub
cmp
shlb
and
push
jbe
dec
cmc
fsubrs
and
inc
in
pop
sahf
or
ret
cltd
outsb
aas
push
xrelease
and
int3
ret
cwtl
out
jg
daa
je
or
xor
pop
fcompl
stos
xor
push
inc
push
xchg
out
pop
or
xchg
pop
mov
jle
pop
movhlps
pop
mov
dec
ds
push
sahf
aam
das
fisubrs
cmpsb
jmp
mov
fimull
push
insb
aas
movsb
inc
dec
bound
js
inc
lahf
aas
push
fildll
mov
mov
pop
cmp
leave
xchg
shr
ss
push
xchg
addr16
mul
pop
sbb
lahf
adcl
pslld
pop
and
jecxz
out
inc
lret
xlat
test
dec
jns
testb
mov
bnd
xchg
inc
or
daa
test
sbb
and
aaa
xor
call
jnp
int
rorl
mulps
dec
fidivl
aas
inc
jle
fidivs
jae
shr
pushf
xrelease
dec
cmpb
jmp
xchg
inc
cmp
adc
cmp
outsb
fidivs
jbe
nop
pop
dec
jle
dec
xchg
iret
repnz
scas
lcall
int
pusha
fbld
mov
pusha
or
cmp
aad
mov
jge
test
jg
pushf
test
dec
xor
xchg
gs
xchg
ja
hlt
les
cltd
push
popa
stc
das
data16
lret
daa
xchg
mov
jo
jmp
push
lahf
jnp
inc
rcrb
xor
popf
inc
rclb
or
stc
jbe
xchg
and
icebp
sbb
repz
push
sahf
outsl
sub
sub
rorb
pop
scas
sub
pop
orl
jo
test
dec
xorl
jge
rcrb
push
push
sbb
jnp
int3
inc
repz
or
aam
push
add
dec
loop
jle
call
jl
pop
in
sub
lahf
adc
and
popf
ret
and
pop
enter
dec
flds
sbb
add
adc
sahf
xchg
xor
sub
mov
push
xchg
test
rcrb
cmc
in
push
mov
sahf
movsl
mov
jecxz
push
in
cmc
in
repnz
jae
or
mov
mov
xlat
mov
into
repnz
sub
and
cmpsl
and
ret
hlt
in
xlat
mov
nop
jl
mov
ja
cwtl
jle
or
add
cmp
add
orb
neg
cmp
or
in
and
daa
stos
fidivrs
or
pop
outsl
lock
push
shlb
sahf
lret
jns
bswap
jno
xchg
xchg
popa
or
mov
mov
lods
stos
nop
scas
scas
xor
cmp
pop
sub
and
inc
mov
fwait
je
inc
dec
cs
loope
insb
add
xlat
inc
jbe
push
aad
jbe
cmp
push
rcll
mov
pushl
mov
inc
sarb
add
push
fdivs
xchg
add
and
adc
iret
data16
and
lret
rcrl
adc
mov
mov
test
insl
jo
push
adc
imul
iret
int
adc
push
clc
xchg
inc
jle
in
sbb
fisubs
sub
cmp
into
dec
in
cmp
lds
jmp
jne
ss
mov
dec
push
xchg
inc
adc
mov
or
cwtl
jbe
les
frstor
arpl
and
lds
je
clc
lea
adc
sbb
add
or
jle
gs
frstor
inc
sahf
cmp
and
push
push
in
and
test
and
jg
repnz
jg
idivb
jo
and
pop
push
cld
sti
stc
pop
subb
jl
sbb
mov
add
adc
test
sbb
out
mov
sbb
repnz
adcb
stos
and
cmp
fildl
sbb
jl
js
cwtl
pop
xor
lods
push
fmull
out
pop
pop
cmp
test
jo
imul
lods
jbe
pop
shll
idivb
jae
xor
mov
aaa
dec
jnp
jg
sub
push
push
addr16
lods
mov
je
adc
or
jge
leave
mov
push
sub
sbb
jp
cmp
gs
cwtl
and
xor
dec
xor
pop
int3
cmpsb
repz
pop
sbb
insl
cmp
iret
adc
push
out
mov
push
cltd
add
movsl
bnd
xor
push
lret
fisubrs
mov
push
lods
jmp
mov
loop
scas
adcl
pop
add
jle
lcall
sub
sub
lcall
add
mov
pop
xchg
sbb
mov
cvtps2pi
push
iret
in
dec
dec
pop
outsl
idivb
lret
dec
xchg
aam
stos
pop
push
sbb
mov
icebp
mov
idivb
jb
dec
xor
fs
jnp
push
movl
pushf
pusha
movb
pushf
lea
jmp
out
test
sbb
movsb
add
adc
fyl2xp1
jg
lahf
xlat
orl
pop
addb
popa
add
mov
dec
dec
inc
and
bound
mov
mov
mov
mov
je
cmpsb
ja,pn
mov
test
dec
sahf
in
addl
das
mov
sbb
mov
jle
shl
or
sbb
mov
xlat
xor
popf
shl
in
decl
addr16
push
jbe
clc
mov
fidivl
imul
add
data16
jno
xorb
and
or
pop
lock
dec
sahf
inc
call
dec
test
add
push
mov
jg
mov
jno
fwait
cs
add
pop
add
lahf
xchg
sbb
outsl
out
je
pop
fisubs
mov
or
or
lcall
push
adc
adc
mov
dec
push
cmp
sarl
cltd
fisttpl
lret
xchg
popa
rcrb
imul
leave
repz
lds
and
and
jle
mov
les
mov
pop
pop
sbb
loope
arpl
jg
inc
outsb
push
fdivrs
add
pop
bnd
dec
xor
and
and
das
adcb
jo
jg
int3
scas
push
in
jo
pop
arpl
sar
mov
cwtl
clc
dec
nop
test
in
iret
mov
mov
clc
inc
ret
setle
cs
sub
xchg
dec
addr16
mov
stc
mov
andb
fldl
mov
nop
fs
jae
je
pop
jnp
push
inc
test
aam
xchg
fdiv
cmp
jno
push
add
add
push
mov
cli
out
je
mov
ja
fisttpl
pop
dec
or
and
addr16
dec
jge
adc
int3
repnz
or
mov
subl
xchg
push
ret
mov
jb
gs
push
or
xor
orl
and
lods
aas
es
inc
sahf
loope
jo
rorb
or
pop
out
adc
xor
inc
jnp
movsl
aad
aas
cld
adc
xor
sbb
jp
mov
mov
pop
imul
psubq
lods
mov
mov
lds
mov
iret
outsl
shl
arpl
xchg
or
sbb
xchg
roll
jmp
gs
jo
in
ds
aam
jle
inc
aad
mul
push
jo
sub
decb
imull
or
into
sar
xchg
movsb
cmpsl
in
test
jecxz
jge
sub
xchg
jnp
outsb
leave
mov
jmp
pusha
push
in
loopne
push
jl
mov
pop
std
int
loop
mov
xchg
sub
mov
mov
xorl
and
imul
push
xchg
gs
jb
cmc
jnp
movsl
cmp
inc
jo
loopne
dec
addl
js
dec
je
push
jle
sti
fistps
dec
jnp
push
aad
sbb
iret
push
aas
xor
pop
loop
shr
push
js
or
dec
pop
fidivs
lahf
sub
jmp
iret
outsb
jno
mov
scas
mov
push
movsl
push
cltd
jnp
mov
inc
lods
filds
clc
adc
ror
sbb
cmp
push
xchg
sub
xchg
data16
push
mov
stos
aad
outsb
jg
and
xchg
mov
stos
dec
shrb
filds
push
jp
cmp
in
icebp
cmp
les
sbb
mov
adc
mov
xchg
cmp
test
js
jne
dec
loop
out
insl
mov
call
pop
cmp
je
mov
ss
jbe
sbb
fnstenv
rolb
clc
leave
xor
or
mov
mov
sbb
insl
repz
shl
scas
pop
and
lret
or
insl
or
and
ret
inc
popf
sub
pop
fwait
popf
hlt
test
or
mov
lods
mov
leave
mov
ret
inc
mov
dec
dec
sbb
push
xchg
sbb
shl
aas
fsts
cltd
inc
bound
jbe
inc
pop
sbb
cmp
fwait
jl
sbb
sarb
sbb
push
xchg
xchg
xor
inc
ds
inc
shl
sbb
ss
fstp
sub
add
mov
mov
lea
xchg
pop
loope
jle
movsl
fistl
jp
rolb
inc
enter
push
push
jecxz
in
pusha
shrl
jle
and
pop
xchg
mov
pop
pop
mov
into
mov
inc
enter
jle
adc
fldt
std
int3
lds
mov
dec
lret
inc
mov
adc
mov
mov
mov
or
inc
pop
lods
je
repz
jbe
and
addr16
cli
dec
sbbl
or
ss
into
and
arpl
frstor
loop
xchg
dec
xchg
mov
mov
adcb
jno
xor
jo
repz
sub
or
aad
lret
cwtl
adc
insl
adc
push
out
pop
dec
inc
dec
xor
leave
jl
jo
rcrb
movsl
mov
cwtl
pop
test
and
dec
sub
add
xchg
lahf
mov
push
xchg
lea
adc
mov
cmp
sbb
pop
jecxz
insb
add
sbb
lds
incl
rclb
fmuls
addl
das
cmp
pushf
mov
adc
lds
add
neg
movsl
mov
inc
mov
fnstcw
ficoms
adc
jo
fidivrl
or
aaa
xor
std
dec
iret
sub
ja
push
adc
lret
and
sbb
lods
cli
aam
add
popf
adc
mov
fistpll
dec
inc
inc
mov
lods
pop
cmp
xchg
push
push
push
dec
ret
add
cmp
cmc
push
and
fadds
cmpsb
stos
cltd
push
jo
repz
cs
repnz
cltd
pop
outsl
fidivrs
sbb
aas
int
sub
imulb
xchg
sub
mov
mov
rcl
adc
arpl
sbb
mov
insb
mov
inc
xchg
pop
pop
mov
addps
call
cmovb
repnz
cmp
mov
push
test
cmpsb
dec
or
test
insb
mov
ret
inc
push
adc
addr16
leave
out
jl
mov
mov
cmp
test
js
dec
das
stos
dec
cli
xlat
shlb
or
xor
inc
mov
and
cmpsb
fst
lret
adc
mov
xor
mov
aad
xchg
stos
jnp
fcmovne
push
mov
into
ds
int3
inc
ret
dec
mov
dec
stos
mov
mov
pop
cmp
out
test
in
loope
cmp
push
pop
aaa
sub
inc
xor
jg
es
mov
sbb
adc
scas
push
js
ds
imul
sbb
push
pop
movsl
loop
inc
adc
repz
or
ret
rcr
out
fisttpll
mov
pop
adc
adc
xchg
inc
cli
mov
mov
in
jmp
xchg
xchg
cmpl
cs
add
cltd
idivl
cwtl
frstor
jns
adc
out
outsl
mov
mov
push
cs
adc
sahf
cmc
into
arpl
cmp
clc
jbe
pop
mov
pop
lea
mov
xchg
iret
push
or
xor
jae
dec
dec
pop
popa
dec
aad
mov
cmp
mov
add
rcll
jecxz
ret
jns
sahf
dec
cli
ljmp
fs
lock
jmp
mov
movsl
cld
sbb
cmp
jp
cmpl
int3
lcall
lock
ret
ds
sbb
xor
inc
push
pop
mov
xchg
cmp
rep
mov
sub
sub
fxch
pop
popf
das
adc
sbb
pop
dec
inc
pop
js
gs
adc
sar
adc
ja
imul
rorb
mov
fisubl
and
xor
ret
test
pmaxsw
sub
lock
leave
mov
lret
mov
jmp
test
adc
gs
push
mov
mov
xor
and
sarl
inc
mov
xlat
out
bound
and
lret
fs
mov
xchg
dec
rolb
mov
push
fiaddl
or
popf
jno
sbb
insb
xchg
js
les
jne
into
lods
dec
dec
addl
outsb
aas
psrlq
cmp
imul
outsl
push
je
int
shrl
jnp
sbb
adc
inc
or
dec
lock
out
sbb
cli
push
mov
iret
xor
scas
inc
fnsave
inc
fnstsw
rolb
dec
pop
cmp
les
js
push
test
cmpsl
cs
loop
push
int
sbb
xchg
pop
add
add
outsb
daa
out
iret
stos
jp
mov
mov
aad
cmovg
lcall
add
adc
pusha
shll
shlb
ds
cli
cli
imul
push
or
inc
and
cmc
lods
and
aas
dec
pusha
dec
ret
sbb
jecxz
aad
dec
pop
pop
sub
push
call
dec
lret
jg
ss
jp
pop
aaa
cmpsl
xorb
dec
lds
jl
mov
cmp
mov
scas
mov
pop
lret
iret
int3
add
fxch
jmp
data16
ljmp
sub
add
mov
lret
outsb
mov
sbb
rorb
aam
jns
in
cmp
pop
or
inc
cli
push
adcl
pop
aam
jb
and
fisubs
sub
shlb
or
cwtl
pop
cmp
gs
mov
sub
les
aas
idivb
addr16
mov
in
add
add
testb
imul
jne
int
imul
cltd
mov
pop
test
das
jle
pushf
sub
idivb
flds
pop
loope
push
jmp
pop
outsl
bound
fisubrl
push
or
sbb
lret
cmpsl
repnz
jno
divl
cmp
pusha
out
mov
add
mov
sti
push
mov
testl
jp
jmp
das
mov
mov
mov
mov
mov
adc
inc
sahf
inc
out
test
imul
inc
div
inc
and
jp
mov
bswap
xchg
mov
arpl
in
jne
jp
jo
or
inc
imul
sahf
dec
jecxz
and
adc
inc
mov
icebp
cltd
popa
das
cld
xchg
arpl
loopne
pushl
movl
pusha
movl
pushf
pushl
lea
jmp
xorl
pushf
cmc
xor
jmp
addr16
lea
mov
inc
and
shrl
jnp
and
or
dec
ja
cmp
inc
bound
dec
popf
cmp
or
movsl
mov
push
into
mov
mov
std
xor
mov
pop
out
jb
cs
jecxz
aad
xor
popf
out
lods
xor
shrl
pop
fstpl
jmp
imul
pop
daa
mov
aad
lods
cli
fsub
sbb
mov
out
push
je
and
jae
verw
push
popa
int3
adcl
out
mov
cltd
push
jg
scas
nop
or
and
and
imul
xor
mov
sub
lods
cmp
cmpsl
repz
mov
in
mov
ja
in
or
and
mov
jle
add
cltd
jmp
divl
cmp
jmp
testl
mov
xchg
ja
pop
dec
frstor
jmp
lret
imul
pop
es
ficoms
je
aad
clc
fwait
jo
or
cmpsb
mov
pop
add
adc
xlat
add
push
mov
xor
cwtl
and
add
cmpsb
jnp
sub
dec
lret
pusha
push
mov
movl
pushf
jmp
jmp
xchg
std
dec
xchg
aam
ja
adc
jl
cmp
aas
int
loop
xor
mov
inc
je
jle
movsb
out
mov
and
clc
pop
ljmp
ljmp
cmc
mov
pop
xchg
ds
gs
cmp
xchg
mov
jmp
cmp
xchg
sub
pop
add
imul
aaa
lret
fstps
sub
lock
cmp
movsb
push
sub
inc
fcoms
and
mov
jge
cwtl
and
bound
pop
test
ffree
outsb
or
push
jmp
int
imul
call
fisubrl
jmp
imul
pop
dec
or
pop
sub
das
loopne
add
adc
test
adc
pop
xchg
lea
xchg
pop
bound
xchg
data16
adc
test
xchg
aam
jg
xlat
xor
dec
rolb
push
sub
daa
mov
iret
aam
stos
call
ret
repz
jb
pop
ret
test
add
mov
inc
mov
fdivrs
mov
mov
jno
icebp
dec
inc
adcl
inc
mov
adc
sbb
jb
jnp
popf
stos
daa
mov
dec
push
pop
push
lret
xchg
sub
sbb
jne
dec
fmul
ret
or
cmp
fildll
outsl
mov
or
enter
jge
test
inc
shlb
gs
pop
xor
test
loop
aam
jg
mov
fisubl
pop
dec
mov
xchg
sbb
push
mov
xlat
fstl
inc
jp
and
std
sti
add
pop
cmp
and
jmp
repnz
imull
lcall
dec
ds
or
adc
not
sub
push
nop
jb
lock
xchg
xor
inc
jmp
lods
jb
xchg
mov
mov
and
pusha
hlt
out
sar
and
test
dec
jb
aaa
xchg
aad
pushf
addr16
enter
add
aad
pop
out
or
subl
iret
jo
arpl
fstl
movsb
rolb
pop
outsl
lock
jae
jno
iret
sbb
adc
xor
add
or
xchg
nop
dec
push
xor
adc
arpl
notb
roll
cmp
push
inc
adc
dec
and
mov
loop
stc
push
jge
sub
inc
push
sbb
addb
push
pushf
lcall
fmul
sti
hlt
cmova
fs
js
sub
cwtl
cmp
dec
jle
addb
aam
mov
nop
sbbl
and
xchg
sbb
push
out
fucomi
pop
aad
and
cmp
ret
fisubs
cmp
dec
aas
sub
nop
xor
notb
std
adc
sub
inc
and
inc
jne
popa
mov
sub
jmp
pop
lcall
lahf
jae
nop
mov
push
xor
icebp
repz
ficomps
ret
push
push
adc
lods
es
jno
xor
jecxz
xor
aam
and
cmpsl
divl
pusha
mov
psadbw
js
adc
xchg
loope
xchg
jo
cmpsl
xchg
and
mov
pop
inc
int
cwtl
xchg
and
xchg
ret
and
insl
int3
loop
mov
sbb
adc
fsubrl
fisttpll
outsb
mov
dec
ret
mov
arpl
mov
pop
in
cmp
mov
test
call
pusha
xor
bt
push
xorl
cmc
xor
bt
mov
xor
stc
xor
cmc
movb
xor
mov
xor
jmp
xor
test
xor
call
sbb
cltd
or
les
sub
xlat
xor
mov
insb
mov
xchg
xchg
pop
mov
lock
pop
das
dec
xchg
xor
sbb
dec
daa
push
add
loop
mov
arpl
mov
dec
sahf
popf
adc
push
popf
and
sarl
cmp
jecxz
sub
sbb
std
sub
mov
jb
addr16
int3
push
in
and
mov
mov
cmpsb
stos
rep
test
popa
adc
rolb
inc
jecxz
mov
int3
gs
mov
insl
inc
add
cwtl
insl
jae
movsb
xchg
outsl
sbb
jnp
dec
popa
dec
in
jge
sti
ret
stos
es
lds
xor
or
cltd
imul
push
and
cmp
jmp
lds
popa
mov
dec
popf
testb
jns
js
mov
mov
sahf
mov
test
cmpsb
xlat
ret
push
sahf
negl
jg
sbb
mov
sbb
bound
mov
outsb
out
insb
mov
rcrl
sbb
inc
fstl
gs
inc
divl
mov
mov
aam
aam
shrl
xor
fs
scas
inc
mov
pop
inc
out
jg
cmpsl
adc
out
repz
cmp
and
sbb
mov
add
into
icebp
shrl
imulb
cmp
fwait
test
jp
mov
incb
push
jae
or
dec
xchg
dec
fwait
les
jae
movsb
sahf
lea
xchg
sub
cmp
fildll
mov
lahf
mov
mov
shl
jno
repz
mov
cmp
push
xlat
cltd
jns
rclb
mov
dec
ds
dec
fucomp
dec
mov
cld
xchg
inc
or
out
gs
jg
gs
stos
and
push
mov
pop
sub
insl
pop
mov
mov
fcoml
adc
out
mov
call
shrl
dec
add
idivl
or
fiaddl
push
out
sub
movsb
sub
sti
mov
pop
cli
and
fiadds
dec
orb
dec
stos
mov
inc
imul
lahf
and
outsb
or
fwait
xchg
lcall
scas
sub
pop
cmpsl
jb
sub
popf
lods
or
xchg
into
out
adc
nop
leave
jne
mov
adc
adc
xor
xor
cld
jle
faddl
lock
fsubl
xor
pop
loope
std
stos
outsb
cmp
nop
pop
sti
andb
jne
add
shrb
std
mov
outsl
adc
stos
sub
aaa
fisubs
or
add
test
or
imul
es
leave
pusha
std
nopw
dec
jae
int
add
popa
in
cmp
xor
adc
or
sub
mov
xor
mov
sbb
call
nop
fbstp
push
push
andb
loopne
mov
mov
ss
dec
mov
dec
lea
pop
inc
sub
fidivrs
mov
adc
jb
lds
xchg
mov
gs
xor
inc
ljmp
int3
jp
pop
add
mov
outsb
pop
out
xchg
movsb
and
addr16
fucomip
sahf
ror
gs
push
push
movsl
cltd
adc
jnp
dec
repz
push
leave
aad
push
cmp
or
pusha
jbe
cmp
xchg
cmp
ret
ret
mov
ds
leave
sbb
into
es
sub
pop
ret
outsb
lock
push
in
xor
sub
mov
out
in
dec
cld
mov
cmp
aam
sahf
xor
sub
ret
pop
inc
sbb
cmpsb
and
rcr
nop
push
sub
mov
pusha
xchg
jne
and
push
mov
xor
stos
in
xchg
scas
in
insb
mov
mov
add
cmpsl
or
out
jg
jp
xchg
jmp
scas
dec
and
xchg
mov
xor
pop
popa
xchg
addr16
inc
xor
push
dec
leave
adc
xchg
ret
in
or
jo
push
jmp
addr16
mov
adc
sbb
jb
pop
mov
jmp
mov
jae
decl
jne
popf
stos
daa
in
xor
sub
stos
loopne
jne
mov
int
inc
push
pop
call
adc
stos
cmp
push
test
xor
add
fwait
les
mov
add
mov
cmp
jb
aas
push
iret
mov
lods
jnp
and
idivb
pop
int
or
movl
pushf
movl
pushf
pushf
push
movb
lea
jmp
movl
push
mov
pushl
pusha
lea
jmp
pushf
test
xor
cmc
xor
cmc
xor
pushf
xor
push
bt
xor
mov
xorl
call
sub
jp
inc
cwtl
mov
ljmp
mov
lock
push
imul
out
mov
call
ret
adc
ret
adc
xor
cmp
data16
pop
push
or
sbb
aam
std
sahf
aas
lods
cltd
pop
pop
cmpsl
pop
pop
add
mov
cmp
scas
insl
repz
push
cmp
call
rcl
cmpsb
mov
pop
repz
cmp
cltd
pop
pop
imul
pushf
pop
dec
daa
push
xchg
dec
jmp
jle
call
lahf
mov
pop
test
dec
jecxz
fwait
int
loopne
pop
pop
jbe
aad
cwtl
and
in
fsubs
roll
adc
jg
mov
push
mov
cmp
push
shrl
mov
push
lahf
jb
callw
imul
movsl
adc
push
jge
inc
pushl
or
mov
dec
into
push
popf
and
sbb
addr16
imul
adc
push
adc
and
inc
test
jbe
hlt
jle
xor
shll
mov
bnd
add
fdivs
gs
test
sarb
lock
outsb
bound
jmp
gs
mov
lret
gs
mov
cmp
shrl
aas
jb
es
cwtl
add
icebp
bound
ja
jno
mov
push
dec
rcll
loop
cmp
pop
mov
xor
and
push
rcll
inc
xor
fwait
push
mov
out
clc
ja
into
mov
fwait
nop
jns
pop
xor
sar
sub
xchg
es
cmp
cltd
mov
or
xor
cmpsb
jae
fwait
sub
cmpb
aam
xlat
cmp
cmp
imul
sub
cmp
adc
jmp
je
mov
inc
sbb
push
outsb
mov
mov
loopne
loope
mov
iret
jo
addb
dec
push
movsl
xchg
jge
mov
into
jbe
cs
xor
cltd
xchg
movsl
jne
pop
xchg
ret
cmp
or
push
ficoms
cmp
rcrl
mov
pushf
push
push
fiaddl
sub
sbb
fs
stos
cs
mov
mov
mov
pop
sahf
mov
fcompl
xchg
and
scas
lds
nop
sbb
push
push
stc
xor
jl
add
imul
mov
push
stos
or
nop
test
xor
or
les
sub
ljmp
leave
xor
dec
lret
stc
pop
adc
inc
ret
sbb
stos
popf
lea
push
sbb
iret
sbb
inc
xchg
outsb
xchg
mov
cmp
push
jne
or
pop
dec
mov
out
add
or
out
inc
lds
in
fnstcw
addr16
mov
loopne
mov
loopne,pn
and
xchg
mull
ds
or
shll
ljmp
dec
pop
fildll
aaa
mov
imul
cmpsl
push
or
cld
pop
cmp
rcrl
jne
xor
test
fstps
sub
je
push
xlat
adc
stos
mov
cwtl
sarl
scas
test
or
push
inc
sub
inc
test
ret
ss
jae
inc
xlat
push
mov
arpl
and
xor
in
dec
cltd
rcr
dec
in
cmp
ret
xor
dec
xchg
pop
andb
jno
jg
pusha
test
jno
pop
loop
mov
pop
mov
mov
xchg
xor
in
arpl
and
pop
inc
cltd
mov
fadd
add
cli
or
test
inc
out
cwtl
fimull
mov
push
movsl
cltd
mov
addr16
out
insb
insb
mov
lods
inc
lret
mov
adc
xchg
fdivl
xor
pop
cld
sub
fmuls
xchg
push
mov
lods
sahf
loop
movsl
inc
push
adc
sbb
xchg
imul
lods
xlat
pop
mov
jle
and
dec
std
scas
pushf
sbb
cmc
sub
xor
jb
outsb
cld
repnz
mov
xchg
push
pop
pop
loope
jl
and
nop
popf
insl
jecxz
leave
leave
pop
or
push
adc
in
jne
cpuid
or
mov
subl
repz
fmulp
bound
mov
inc
or
jbe
sub
mov
rorl
push
test
ret
push
popf
je
test
push
mov
inc
mov
sbb
cmp
mov
add
inc
enter
push
and
mov
xchg
mov
cmpsb
mov
out
sub
int
cmp
pop
or
jg
subb
inc
inc
adc
adc
lcall
xchg
mov
jbe
dec
rcll
out
adc
cmp
adc
mov
divl
jmp
inc
push
or
inc
imul
mov
mov
jmp
cmpsb
adc
dec
mov
dec
int
xchg
xchg
sbb
inc
leave
mov
negb
mov
inc
mull
aad
loopne
inc
add
sub
mov
push
mov
xor
rcrl
xchg
mov
xor
das
xor
add
imul
sbb
outsb
mov
jne
repz
mov
adc
sub
imul
out
cmp
push
nop
pop
cmpsb
sub
cmc
aad
push
in
fdivl
mov
out
push
pop
fidivs
out
mov
add
dec
es
adc
jae
popf
test
sbb
leave
mov
js
loopne
cmpsl
mov
pop
movsw
fsubl
mov
sbb
mov
cld
adc
jb
das
sbb
rcrl
sbb
lds
fisubl
add
ret
sbb
and
leave
setbe
pop
or
mov
adc
lock
jmp
scas
cltd
and
push
mov
pop
fwait
call
jecxz
mov
xor
xor
shrl
idivl
clc
xchg
xchg
cmc
add
sahf
xorb
das
nop
mov
shll
jne
in
lahf
cwtl
mov
cld
mov
mov
test
inc
scas
lret
push
ficoml
pushf
test
repz
rcr
and
ret
aaa
ret
sbb
ljmp
mov
fdivrl
cmp
or
push
addb
mov
dec
mov
loop
scas
cmp
int3
sub
jnp
dec
lea
sbb
clc
and
pop
out
cmpsb
out
enter
jae
push
mov
fsubrs
lods
pop
push
leave
jp
ja
lods
push
sbb
push
lea
imull
out
movsl
mov
sbb
mov
cli
pop
ss
mov
mov
and
pop
inc
dec
add
fbld
jb
cmp
ja
jge
lret
aam
cmp
mov
jp
imul
sbb
lcall
fcoms
sbb
cmp
dec
xor
cmp
mov
movsl
xor
test
mov
fsubs
scas
adc
push
divl
sarl
ret
mov
adc
mov
push
push
aad
xchg
adc
cld
and
xchg
loop
jl
repz
push
repnz
gs
arpl
out
imul
xor
mov
iretw
idivl
jge
mov
or
movsb
adc
shll
idiv
mov
movsl
inc
fisubs
sub
jg
adc
jge
dec
js
shrl
lahf
test
jb
out
cmc
inc
adc
loopne
lea
sbb
out
repz
cwtl
roll
sbb
push
sbb
scas
xor
sub
fwait
mov
out
fsincos
sub
shr
or
pop
jae
movsb
jno
jge
test
nopl
clc
test
jl
movntq
mov
and
outsb
xchg
jp
les
aaa
fst
push
or
push
pop
jmp
cmp
lahf
mov
ss
mov
cmp
into
xchg
mov
fwait
push
mov
and
push
cmp
rcrl
xchg
test
in
subb
mov
xchg
mov
xor
cltd
and
mov
add
mov
repz
inc
jo
push
cmp
out
sub
mov
sbb
sub
les
xor
and
lret
shl
mov
fsubrs
and
xchg
fcoml
test
xor
push
adc
sbb
imul
decb
mov
sub
jb
and
and
pop
in
ja
inc
frstor
jne
push
xchg
and
mov
lret
lds
push
cmp
ja
mov
jmp
pop
dec
aas
sub
mov
stc
jg
mov
jnp
aaa
ret
xchg
mov
pop
lret
mov
in
push
sub
push
inc
xor
lods
xor
sbb
vshufps
and
pop
fsubrp
in
pop
jmp
scas
call
xor
imul
inc
in
pusha
pop
fidivrs
sti
movsb
jnp
test
stos
or
aam
in
inc
jb
adc
shrb
sub
mov
push
mov
adc
lods
int
stc
sbb
and
fcmovb
daa
sub
jo
rclb
loope
mov
je
or
cmp
outsb
loope
imull
dec
imul
mov
jge
cmp
mov
jl
and
jns
ds
test
mov
nop
xchg
adc
aas
adc
jb
jnp
mov
xor
ljmp
stos
adc
lods
add
xchg
inc
mov
pop
in
dec
arpl
in
xor
ret
fdivl
mov
ljmp
xchg
jp
lods
ss
int3
in
dec
add
sub
in
es
lahf
dec
push
cmp
incl
adc
sbb
inc
das
mov
std
addb
fldcw
out
ljmp
aam
arpl
je
jge
in
sub
jae
movsb
sarb
orb
inc
push
je
js
jnp
xor
inc
lret
sti
jge
imul
mov
cmp
mov
lds
out
scas
sbb
or
mov
jle
addr16
or
pushf
jns
sar
fwait
push
ret
mov
mov
xchg
jb
aaa
cmp
jae
pusha
cmp
jnp
lds
add
in
lret
adc
test
aam
adc
daa
shll
mov
stc
ljmp
xorb
mov
push
rorb
xchg
mov
dec
mov
sbb
sbb
jl
cmp
shl
dec
jmp
sub
add
setns
popa
call
aaa
xchg
sub
jmp
lahf
jae
mov
xor
aaa
fdivrs
sbb
adc
and
arpl
inc
sub
fdivs
inc
and
pushw
push
repz
jg
std
dec
out
mov
in
mov
lods
stc
out
mov
out
minps
and
stc
nop
sbb
push
sub
dec
ljmp
adc
inc
bound
sub
ds
mov
and
sahf
mov
in
and
pop
jne
scas
pop
push
pop
shlb
repz
cmp
push
adc
cmp
xor
lds
mov
daa
fcomi
xor
sbb
sub
xchg
sti
loopne
out
sbb
xchg
shr
roll
aad
cmp
xor
in
push
mov
inc
enter
std
jl
cmp
jge
adc
jp
and
sahf
data16
dec
repnz
insl
or
cmp
idivl
enter
out
push
dec
xlat
push
fisttpl
add
sub
jb
popa
dec
xlat
loop
xchg
stc
lock
popl
lea
aaa
mov
mov
jnp
mov
loop
inc
xor
dec
fsubl
pop
lods
sub
in
je
lods
cmp
jne
popf
mov
jb
in
push
xor
sarl
int
arpl
xchg
jbe
add
add
push
inc
mov
aaa
and
call
adc
js
std
xor
adc
stos
js
jg
mov
dec
repnz
cmp
add
bound
xchg
clc
mov
shr
pop
adc
xchg
pushf
add
mov
es
mov
dec
stc
loopne
int
fadd
inc
or
popf
push
mov
out
add
in
mov
jl
mov
dec
and
and
mov
xchg
jge
je
mov
pop
sbb
pop
sbbb
in
add
dec
lcall
sub
rclb
aas
jecxz
pop
cmpsl
fisubrl
cwtl
add
lock
cmp
addr16
das
or
fcoml
adc
out
out
stc
cmc
popf
push
jno
out
cli
pop
addb
sub
filds
mov
cmp
and
loopne
loope
hlt
dec
xorb
pop
cltd
ror
inc
adc
aam
imul
sub
lods
jnp
jecxz
jbe
inc
jns
test
icebp
fisubl
and
inc
adc
jno
cmp
mov
jbe
out
cltd
aaa
mov
mov
add
out
sar
and
pop
into
mov
ljmp
movsb
lea
sub
cmp
ja
push
out
pop
std
push
add
xchg
xchg
aas
mov
and
jnp
push
jle
jge
testl
cmpsb
push
arpl
in
es
xor
pop
push
xchg
jnp
cmp
mov
jg
add
jbe
andb
popf
sub
push
mov
das
push
das
sbb
nop
adcl
out
lahf
push
mov
test
pop
mov
movsl
xlat
dec
rcrb
jp
loop
pop
das
inc
je
pusha
mov
pushf
mov
push
scas
clc
jbe
push
or
dec
inc
movsl
or
aam
ret
jbe
xchg
inc
gs
xor
sub
dec
cltd
adc
pusha
mov
push
sarl
mov
mov
movsl
or
adc
push
pop
dec
shlb
ds
push
mov
sarb
sub
sbb
clc
imul
stc
xchg
push
mov
ret
mov
nop
sub
ljmp
sub
mov
adc
add
mov
cwtl
and
add
sbb
mov
mov
sub
test
popf
jo
pop
clc
xchg
insb
inc
lret
frstor
mov
xchg
mov
pushf
stc
sub
cs
lcall
vpsubb
inc
mov
rol
sbb
mov
pop
xchg
imul
test
xchg
test
xor
push
push
cmp
scas
sbb
sbb
sub
and
ret
das
mov
call
or
aas
into
push
or
int
loopne
lods
and
mov
je
jo
add
into
cmp
repnz
out
pop
lret
jle
jae
out
jne
imul
mov
imul
mov
daa
xlat
popf
pop
andb
shlb
dec
cmpsl
xchg
lds
mov
bound
mov
and
inc
mov
cmp
or
xchg
jecxz
or
pop
dec
push
add
add
add
and
cmp
or
inc
sti
nop
xorl
cld
movsl
mov
or
push
stc
stc
pop
fucom
lcall
xor
adc
in
addl
stos
jl
pop
not
or
cmp
addr16
cmp
xor
pusha
test
xor
cmp
pushf
xor
test
test
xor
call
xor
clc
xor
stc
stc
xor
call
mov
fdivrs
mov
inc
popa
pop
ret
dec
cmp
stos
xchg
sbb
pop
rorb
dec
push
mov
testl
or
insl
pushf
test
pop
je
roll
dec
and
inc
arpl
jb
mov
insl
jb
lret
jge
sbb
mov
pop
sarb
sub
or
icebp
rcrl
mov
jo
mov
stos
rorb
js
sbb
pop
loopne
inc
arpl
sarb
fdivrs
mov
push
xchg
and
jns
andb
jmp
inc
out
fnstenv
insl
dec
out
stc
xchg
into
std
adc
pop
inc
enter
orb
mov
in
test
das
ficomps
xchg
fistl
cmp
sbb
mov
jle
fwait
push
mov
xchg
jmp
xor
jle
sbb
or
test
pop
add
jl
repz
repnz
add
ss
outsl
mov
popa
pop
sub
xlat
jp
movsl
lock
pop
arpl
pop
bound
mov
lods
xor
pop
dec
js
mov
bnd
cmp
int
lds
cs
bound
push
in
add
lods
out
in
or
xor
jbe
ljmp
shll
imul
push
aas
loop
xchg
es
roll
pop
cmpsl
ja
xchg
push
mov
pop
push
mov
xchg
mov
cmp
cmpsl
xchg
and
test
jecxz
addl
jle
push
or
pop
leave
push
dec
and
xchg
stc
stos
xchg
add
xchg
out
popa
out
out
cmp
jmp
rorl
fbld
sub
mov
loop
hlt
fs
js
inc
sbb
pop
push
cmp
insl
mov
jecxz
and
idivb
addb
mov
adc
sub
pushf
cltd
js
and
mov
adc
lahf
jl
add
out
mov
stos
loop
lods
stos
outsb
add
xor
xchg
mov
outsl
fwait
mov
in
mov
push
cli
adc
pop
lcall
fcmovnu
sub
mov
add
fldt
mov
call
cmp
hlt
mov
push
cmp
sub
jo
cwtl
and
mov
dec
fistpl
jne
mov
or
stos
es
lahf
xor
mov
mov
das
ljmp
repz
pinsrw
sub
sbb
outsb
push
idivl
inc
mov
decw
bnd
and
jmp
shr
movsb
das
mov
mov
lret
das
fwait
or
xor
sti
aas
mov
pop
xor
mov
data16
pop
inc
out
xorb
mov
push
mov
cmc
sahf
nop
imul
outsb
push
bnd
dec
cmp
sti
jnp
out
or
pop
push
pop
xchg
es
orl
and
cmp
aaa
outsb
push
dec
ja
fildl
fiaddl
add
pusha
je
add
popa
mov
xor
idivl
mov
pushf
cmp
mov
lahf
and
mov
dec
stc
movsb
or
add
mov
lret
lds
clc
aaa
scas
sub
lock
imul
dec
dec
popf
enter
mov
ret
dec
int
or
push
repnz
scas
fimull
pop
dec
sarl
clc
popf
rolb
push
jecxz
inc
test
push
movsb
sub
add
sub
xchg
sub
mov
movsl
adc
inc
xchg
pop
add
sahf
icebp
sarb
xchg
imul
xor
adc
adc
lock
imul
lret
loopne
xor
rcrl
push
cmp
gs
jno
pop
lods
push
or
pop
sbb
std
cmc
jl
into
push
xchg
and
jns
push
add
push
cmp
test
mov
mov
add
xlat
dec
xorl
mov
repz
cmp
pop
fiaddl
or
push
dec
insl
popf
push
stc
inc
orb
addl
lods
push
inc
sti
stc
cmpb
inc
sar
sub
into
in
loopne
or
lahf
movsl
push
inc
scas
mov
sbb
pop
lds
mov
out
popf
dec
rorb
dec
mov
push
mov
push
gs
or
mov
jns
enter
xlat
pop
lea
add
push
subb
jecxz
lret
mov
adc
sub
or
pusha
jmp
dec
push
sarl
loope
nop
cmp
in
sahf
mov
cmp
jae
call
mov
aaa
lret
orl
inc
cmp
aad
hlt
ss
sub
pusha
into
adc
pop
cmc
mov
push
mov
jnp
inc
jecxz
xor
pop
mull
mov
add
ljmp
sahf
xchg
sub
xor
and
test
jo
lret
and
je
incb
aad
in
ja
inc
aaa
jl
arpl
loop
test
cmpsl
mov
or
movsb
sbb
mov
ficompl
mov
xor
cmc
out
dec
int
movsl
sub
std
repz
fidivs
mov
mov
jge
mov
cmp
repz
fstps
mov
je
mov
push
out
lcall
stc
pushf
sbb
jl
pop
out
mov
jl
cmovns
sbb
sub
out
rorl
sti
fidivrs
push
dec
lret
in
stos
adc
cmpsl
mov
mov
xor
fidivs
add
pushf
xorb
cmp
push
xchg
add
cwtl
add
andb
cltd
sahf
and
movsl
pop
jnp
pop
pop
pop
nop
cmp
jg
aas
and
cmpsl
aaa
imul
and
cmp
xor
cmpsb
dec
cmp
icebp
test
call
testl
stos
out
jb
inc
push
into
sbb
jne
mov
mov
push
add
pop
scas
int3
repnz
in
fnstsw
add
scas
pop
aad
pusha
flds
sbb
lods
mul
xlat
out
dec
test
or
in
push
arpl
insb
test
mov
sub
sub
mov
jmp
dec
rcrb
xor
sub
jae
loop
lds
cmp
gs
je
pop
pop
pop
ret
aas
or
inc
dec
lea
and
jp
adcl
dec
sbb
jcxz
popa
addl
mov
push
jnp
jl
fiadds
lcall
test
mov
test
jl
jne
cld
and
insl
pop
add
es
shlb
fcomps
or
enter
xor
arpl
je
sub
mov
sbb
iret
and
or
loop
fbstp
int3
jae
enter
sbb
xchg
repnz
loope
xchg
mov
sbb
jae
xor
es
nop
xor
xchg
add
jne
jnp
inc
fisubs
cmp
fsubs
imul
in
inc
xchg
imul
les
xchg
mov
inc
das
fs
cwtl
cmpsb
mov
pop
cmpsb
lret
out
out
xchg
mov
push
dec
lret
push
mov
jne
in
loop
mov
sahf
outsl
mov
mov
xor
cld
push
fsts
sahf
sbb
shll
ror
ds
stos
sub
add
aaa
dec
out
mov
cmpsb
int
sbb
add
sub
jg
xchg
popl
outsb
call
ja
repnz
sub
sbb
push
sub
cwtl
mov
pop
sbb
fcompl
pop
movsb
loope
in
test
ljmp
insl
push
jmp
les
mov
mov
xchg
loop
add
xchg
mov
in
imul
repnz
jne
xchg
mov
cmpsb
cmpsl
jp
and
cmp
idivb
mov
inc
and
in
movw
movl
pushf
push
push
mov
lea
jmp
xor
clc
bt
xorl
test
xor
pushf
xor
call
pushf
movl
movb
lea
jmp
pushf
popl
jmp
xor
jl
xchg
shl
lods
cwtl
inc
addr16
arpl
sbb
stc
xchg
imul
add
cmp
mov
rsm
subb
lea
pop
xchg
aas
or
notb
cld
mov
cld
xor
inc
mov
in
mov
in
pop
or
push
jmp
clc
aad
sbb
jl
cmpsb
icebp
push
adc
fdivl
ds
adc
pop
mov
sbb
sub
sbb
pop
inc
cmpsb
icebp
iret
jne
cli
loope
mov
dec
iret
leavew
or
mov
jmp
movsl
pop
mov
inc
add
xchg
insl
inc
push
loope
orb
cmp
popa
lods
xor
mov
lds
outsl
mov
jo
xchg
ljmp
dec
cmp
cmp
pusha
lahf
fwait
mov
xchg
gs
push
sbb
push
add
sbb
dec
flds
add
loope
cmp
push
mov
or
pop
adc
or
xor
lods
cwtl
mov
les
arpl
push
jecxz
fs
bound
fisttpll
je
mov
xor
ljmp
lea
test
mov
push
cmp
rolb
jns
loop
adc
cmc
jl
lods
hlt
mov
loope
or
xor
sub
pop
push
cmp
mov
xchg
sahf
push
add
xchg
lret
mov
shrb
inc
cmp
and
sahf
push
nop
cmp
lahf
loope
push
sbb
mov
ja
hlt
sti
xor
mov
sub
data16
nop
mov
jmp
pop
out
mov
nop
leave
adc
sub
test
stos
mov
mov
es
push
pop
loop
lds
mov
jno
push
aas
aam
cwtl
inc
pusha
sub
or
pop
sub
sub
test
scas
mov
sub
mov
mov
push
sti
aas
fs
and
call
sub
ret
jecxz
shrl
hlt
jg
mov
mov
mov
inc
sub
and
mov
sub
push
or
sub
ja
push
inc
mov
push
clc
pop
bound
or
and
cmp
popa
mov
or
inc
loopne
xchg
sbb
push
push
hlt
jno
mov
push
scas
mov
sbb
movb
mov
cld
addl
inc
outsb
lcall
inc
jmp
cmpsl
mov
pop
stos
cmp
pusha
mov
cmpsl
push
pop
std
hlt
sbb
push
sub
aad
mov
pop
loop
les
inc
sahf
mov
fs
stos
and
roll
sub
cmp
add
xchg
in
and
lret
jno
ss
imul
std
hlt
adc
jecxz
and
xor
fxch
jnp
mov
shlb
jnp
mov
add
subb
repz
add
pop
and
std
hlt
push
rolb
dec
pop
push
cld
es
lret
jg
lret
ja
iret
clc
add
jb
mov
cld
adc
lock
shll
jg
nop
mov
push
jg
jo
dec
loopne
push
or
jmp
cmp
xchg
pop
std
hlt
inc
mov
xorl
call
pop
or
mov
insb
ljmp
jle
inc
mov
dec
cs
mov
cmp
pop
test
aam
leave
and
cli
cmpl
mov
lahf
std
adc
jnp
loope
hlt
test
inc
mov
mov
and
out
lods
inc
mov
sub
mov
aas
loopne
adc
jg
and
pop
jno
xlat
xchg
jp
call
stos
cs
jp
in
hlt
sbb
jmp
push
bound
push
cmp
js
es
out
jne
pop
fildll
lds
into
lds
cmp
outsl
pop
inc
out
mov
fld
rcll
ds
mov
add
fwait
dec
jns
mov
dec
mov
push
in
jnp
push
out
scas
and
outsl
or
jae
add
cmp
cmpsb
and
lahf
sub
test
push
clc
push
std
sbb
lea
sbb
jle
mov
xchg
pop
ret
sbb
cli
in
cmpsl
inc
push
cmpsl
mov
mov
inc
inc
rclb
pop
mov
mov
dec
test
or
les
xor
decb
bound
inc
dec
sbb
jl
cwtl
sub
cltd
ds
mov
inc
scas
shlb
sbb
shrl
sarb
popa
xchg
pop
stc
ret
add
sbb
and
inc
js
lahf
gs
xor
push
test
or
clc
insb
xlat
mov
iret
outsl
push
xor
push
cmp
inc
adc
and
in
test
adc
jbe
and
call
popf
mov
int
pusha
mov
xor
cmpsl
inc
lret
test
and
in
pop
xchg
in
call
pusha
add
fidivl
stc
nop
pusha
xor
jb
xchg
xchg
aad
std
sub
ds
pop
negl
and
call
call
or
enter
mov
cmp
icebp
pop
ret
aam
sahf
aaa
loopne
pop
mov
das
out
cmp
or
add
xor
pop
lcall
mov
mov
xor
inc
and
add
lcall
jecxz
aas
push
xchg
lods
insb
inc
rolb
pop
dec
jl
ficoms
jnp
je
jne
jmp
arpl
or
repz
jne
idiv
div
stc
insl
mov
loope
in
stos
mov
out
jmp
inc
stos
test
push
jp
cmp
ja
mov
jl
pusha
or
in
adc
fst
pop
sbb
xor
les
test
or
cmp
in
cmpb
pop
push
jg
add
mov
adc
sete
orl
adc
daa
lods
cmp
xchg
add
lret
xor
dec
xchg
mov
dec
test
fisubs
xor
lods
hlt
loopne
xchg
pop
pushl
int3
adc
rsm
push
sub
mov
push
cmp
aam
rcl
pop
cmpsb
inc
lret
xor
sbb
ja
imul
idivb
cld
cwtl
pop
dec
stc
inc
xor
cmc
jp
les
inc
mov
pusha
cld
mov
sub
lds
mov
inc
pop
cli
sbb
jp
inc
out
mov
push
or
push
mov
mov
pop
cmp
cltd
xchg
cmpsb
push
sbb
inc
pop
inc
imul
ds
push
mov
outsl
fdiv
jp
inc
jecxz
bound
aam
jbe
cli
lret
addl
jle
or
aaa
fbld
xchg
cmp
adc
pop
subb
mov
stos
inc
mov
insb
mov
out
daa
mov
sbb
sbb
stc
repz
mov
mov
push
in
loopne
cltd
mov
aad
xchg
lcall
push
sub
idivb
clc
dec
xor
jae
cs
push
leave
add
das
les
jbe
repz
push
add
sbb
lret
aaa
sbb
lock
int
mov
orl
push
int3
push
rclb
inc
sub
jo
mov
lods
notl
scas
xlat
std
pusha
mov
dec
cmp
daa
test
and
add
and
iret
sub
adc
ficompl
inc
cli
fimull
bts
es
push
adc
adc
cmp
adc
or
xor
push
lahf
mov
inc
adc
inc
ret
inc
rorl
jge
sub
outsb
jle
loop
cli
lea
mov
ja
iret
sub
pop
outsb
push
mov
test
mov
fiaddl
xchg
out
mov
mov
pop
popa
sub
cltd
les
cmp
lahf
test
das
push
fmuls
pop
push
imul
icebp
jne
dec
push
fisubs
inc
sub
jo
cli
xchg
rorb
xchg
loop
stos
clc
pop
sub
sbb
mov
jp
pop
orb
lock
adc
inc
pop
stc
fiaddl
pop
mov
loopne
les
into
push
push
mov
mov
pop
jo
adc
orl
jecxz
test
and
es
or
and
lock
add
sbb
insl
xchg
nop
clc
sarb
adc
push
xor
cwtl
aas
mov
push
aam
mov
aas
pop
popf
aad
mov
xchg
cs
adc
push
enter
inc
push
mov
jmp
add
pop
nop
mov
daa
outsl
mov
xor
insl
jbe
out
mov
mov
in
dec
shlb
das
loop
cmp
sbb
xchg
cmp
lret
in
push
sub
ljmp
stos
cld
xor
inc
mov
popa
dec
in
sbb
inc
scas
lret
dec
lret
adc
iret
and
subb
fdivs
pop
ss
clc
mov
outsl
mov
clc
int3
mov
xor
mov
paddd
enter
sti
loope
add
jle
fwait
mov
cmpl
mov
jo
enter
mov
stos
decl
popf
xor
faddp
jp
mov
xchg
pop
dec
inc
flds
mov
cltd
lds
mov
or
cs
fs
xchg
outsl
sub
push
inc
pop
lcall
and
aaa
outsl
test
pop
add
pop
mov
xchg
out
dec
pop
push
subl
test
nop
test
ret
sub
mov
sub
sahf
ss
mov
or
sub
rcl
outsl
inc
addr16
lods
aas
int
mov
jge
xor
jl,pt
pushf
pushf
loopne
cld
mov
lcall
imul
jbe
ljmp
push
dec
mov
fsubrl
shrb
xor
mov
lock
pop
pop
movsb
in
push
test
pop
cld
mov
add
arpl
xchg
int3
jnp
push
lahf
xor
jge
push
or
das
insl
loopne
sub
das
sbb
call
lea
es
in
je
shlb
xor
inc
push
add
out
jae
test
pop
pop
adc
aas
and
out
jg
int3
mov
pusha
in
iret
mov
cld
mov
pop
xor
and
sbb
dec
ljmp
pop
int3
push
testb
push
insl
bound
sbb
ret
lcall
dec
jp
sbb
adc
add
les
xchg
idivb
cmp
mov
inc
xchg
out
adc
jecxz
dec
clc
xchg
and
mov
mov
push
jne
dec
shll
jns
leave
stos
or
push
mov
inc
sub
leave
pop
loop
loopne
leave
push
popf
xor
jnp
shlb
mov
push
nop
test
test
nop
pop
pusha
jmp
xor
fs
roll
mov
dec
fwait
inc
movsl
cmp
mov
push
out
push
lea
bnd
mov
test
ss
stc
adc
nop
jns
xor
into
addr16
icebp
pop
rcrl
cltd
and
xchg
xchg
sub
shll
lret
fidivrl
pushf
bound
gs
lock
mov
mov
js
or
fstps
lods
fnclex
ja
jmp
lcall
sub
mov
xlat
mov
out
pop
adc
gs
test
and
xor
pop
insl
out
xchg
stos
cld
out
loopne
dec
test
outsl
dec
mov
push
loop
mov
jmp
imul
and
jo
cs
adc
popa
pop
sbb
jns
pop
xchg
fsubs
dec
stos
xchg
hlt
fstps
das
in
shll
divl
adc
int
sbb
inc
shll
rorl
cmpsl
xchg
push
add
mov
mov
lahf
addr16
and
ss
ja
jbe
push
sub
inc
in
or
adc
sub
fwait
int3
dec
dec
xchg
adc
jmp
test
or
and
aad
adc
pop
jno
out
mov
pop
repnz
sbbl
xchg
sbb
call
shr
pop
or
mov
sub
inc
adcb
xchg
sbb
jl
movsl
aam
xor
das
inc
in
cmpsb
aas
jbe
push
out
fcmovnbe
mov
pop
in
in
sub
ret
push
xchg
cs
mov
pop
cs
daa
shlb
cs
inc
lock
aas
xor
jp
fists
lret
sbb
loope
adc
mov
mov
jp
cld
lretw
sub
cmp
mov
dec
int
loopne
movb
fnsave
push
pop
fwait
mov
cmp
je
and
jg
bound
jno
dec
das
and
xchg
popf
pop
leave
stos
shl
cmp
leave
push
jecxz
lret
push
mov
mov
ljmp
add
fimuls
in
imul
mov
sbb
pop
pop
pusha
out
ja
sbb
adc
adc
hlt
in
ficoml
xor
out
jle
fcoms
inc
int3
nop
pushf
lahf
lcall
push
js
xchg
xor
dec
popf
cwtl
enter
out
mov
jb
js
mov
dec
stc
xorl
addl
test
jl
push
and
nop
jge
and
jne
adc
test
fcoms
mov
jge
fs
ffree
inc
in
repz
ja
iret
roll
div
fdivp
push
lock
fcmove
sarb
faddl
dec
sbb
out
iret
shlb
aaa
xchg
sti
stos
dec
jbe
ficoml
push
push
insb
ret
or
leave
js
jne
test
lods
inc
pop
data16
mov
dec
lret
jo
push
jge
shlb
mov
in
push
or
pop
pop
cmp
push
lret
and
inc
mov
loop
cwtl
inc
out
adc
push
mov
je
lahf
xor
mov
insl
xor
sub
jge
cmp
add
iret
popa
dec
call
lods
sub
jg
fs
scas
pushf
bound
cmp
sarl
inc
daa
mov
xchg
and
xorb
jb
jnp
dec
fsubs
lcall
popf
shr
push
mov
call
es
in
mov
sub
pop
push
add
fidivrs
in
icebp
arpl
push
inc
ss
cs
cwtl
cmp
inc
es
mov
lds
jle
inc
ss
cmpsb
jbe
mov
mull
pop
jge
fucomp
imul
xchg
test
mov
dec
cs
add
aaa
aas
fdivr
pop
movl
jge
in
fisttpll
or
xchg
cli
test
push
imul
push
adc
jg
sahf
loope
xchg
std
icebp
out
and
push
stos
adc
or
xor
pop
negb
mov
push
or
rorb
push
sahf
rorl
iret
and
xchg
int
les
aas
xchg
movsb
xchg
in
lods
test
arpl
inc
push
and
cmc
pop
mov
cld
jb
push
jbe
fs
jge
mov
mov
loop
into
mov
testb
pop
dec
mov
pop
jg
iret
cmp
iret
fiadds
icebp
jns
xchg
and
out
xchg
inc
in
test
out
jge
push
cmpsl
jge
repz
push
jecxz
movl
scas
jge
sub
imul
fisubs
mov
add
lret
xchg
lret
and
gs
ja
pushf
movl
pushf
movb
pusha
push
lea
jmp
int
adc
xor
fwait
icebp
inc
mov
das
js
or
je
scas
jge
mov
jle
fwait
xchg
cmp
loope
mov
or
sub
push
cmp
out
hlt
sub
pop
xchg
test
add
push
rol
inc
push
or
jp
push
adc
dec
lea
mov
xchg
adc
callw
dec
lret
shll
lahf
movsb
or
jle
dec
add
push
inc
adc
mov
das
xchg
mov
leave
imul
and
pop
stc
lret
sub
push
sub
das
inc
jno
push
psubsb
jl
adc
dec
idivb
test
aad
pushf
movb
movl
push
call
movw
movl
call
movl
pushf
lea
jmp
pop
lahf
icebp
ja
sub
rorb
jecxz
cltd
in
jle
xchg
cmp
cli
test
jecxz
and
sbb
stos
in
mov
adc
dec
insb
lods
xchg
lods
lds
cmp
add
ret
cmp
fldcw
xchg
jge
mov
cmp
or
pop
push
fstpt
jo
aam
sub
lret
rclb
sub
imul
inc
scas
inc
js
gs
mov
lahf
cs
outsl
mov
fdivs
sbb
mov
das
xchg
dec
sub
mov
inc
mov
adc
push
les
mov
jmp
lock
and
cmp
jo
jae
jecxz
subl
jb
mov
sbb
jmp
int3
sahf
ljmp
fdivrp
adc
pop
sub
scas
push
ret
xchg
ljmp
repz
sti
or
push
imul
iret
jns
adc
cld
inc
rol
fs
in
mov
idivb
stos
popf
inc
xor
push
fldenv
in
into
cmp
sbb
pop
lods
clc
jnp
mov
out
sbb
lcall
rolb
daa
mov
and
mov
stos
insb
push
mov
int3
pop
movsb
and
sub
call
aas
lcall
mov
es
mov
inc
jge
test
xchg
jbe
xchg
and
mov
dec
fwait
or
xchg
in
repnz
jl
sbb
push
or
push
dec
inc
outsl
lcall
js
push
pop
pop
and
mov
fildll
xor
loop
loopne
lcall
or
inc
and
iret
popa
cmp
pusha
push
pushf
movl
pushf
pushf
mov
lea
jmp
xor
bt
cmc
xor
jmp
jmp
xor
cmp
bt
xorl
pushf
xor
cmc
jmp
stc
inc
mov
mov
movsb
jp
stos
cmp
icebp
mulb
push
imul
cmp
fisttpll
mov
dec
iret
xchg
xchg
adcl
push
cs
cmpsl
xchg
and
ja
cmpsb
imul
sbbl
insb
add
ja
aaa
mov
cmp
adc
andl
loope
sub
mov
enter
sbb
sub
jb
lods
inc
lret
add
lds
cltd
lods
mov
push
xchg
test
stos
mov
enter
cmp
cmc
call
fists
ret
push
jg
ja
aaa
clc
mov
jo
dec
out
add
jle
call
mov
cmp
push
xchg
and
mov
sbb
lock
jb
mov
or
sub
mov
pop
test
dec
jmp
adc
stos
xor
sarl
add
mov
das
test
jmp
in
cs
dec
cmpsb
cmp
decb
ljmp
insl
jp
fldl
jge
cli
mov
into
push
mov
sub
cmp
cmpsb
sar
addl
pop
into
insl
fmul
ficoml
sbb
lea
fcmovbe
test
lods
push
fwait
xchg
pop
das
push
xchg
pop
ljmp
sahf
xor
sub
push
fwait
cmp
decb
daa
ret
xor
sbb
xchg
push
cmp
cltd
addl
add
nop
and
ljmp
popa
aaa
sbb
addl
shlb
cmp
jmp
lds
mov
mov
lar
mov
aam
inc
dec
push
sbb
push
or
jnp
mov
jbe
inc
mov
fisubl
outsb
insb
sar
jns
mov
cmpsb
inc
jge
arpl
lahf
cltd
stos
cmp
lahf
add
xor
sbb
shl
cmpsb
push
push
scas
push
les
imulb
stc
imul
mov
popa
orl
enter
ret
pop
stc
lret
jae
iret
int3
outsb
ror
insl
fistpl
or
ds
fsts
sbb
test
xlat
cmpl
sar
mov
lods
sbb
das
nop
jns
test
js
aam
clc
pop
incl
adc
pusha
mov
adc
inc
cmp
in
dec
mov
mov
mov
aam
int
pop
or
lods
pop
out
pushf
pop
mov
mov
dec
pop
adc
cld
mov
push
jae
pop
data16
mov
lret
pushf
mov
std
sbb
cmp
push
xchg
mov
sub
push
cmc
jg
dec
mov
sbb
xlat
pop
inc
outsl
add
mov
out
sti
aad
sub
adc
sti
mov
push
mull
adc
cs
ret
sbb
cmp
ljmp
and
pop
or
cwtl
ss
jg
lock
mov
lahf
cs
cmp
fcom
cld
lock
mov
xchg
sub
inc
and
sub
popf
push
ret
jb
xchg
lret
dec
mov
mov
js
lret
cmc
hlt
aaa
scas
lcall
sbb
cmp
xchg
outsl
cmc
or
xor
call
and
in
xchg
cmp
sbb
cmp
mov
adc
aaa
cmp
aam
lahf
and
hlt
je
pop
dec
push
aas
jb
cmp
es
ljmp
jns
push
lret
and
jo
lea
stos
cltd
aam
inc
push
mov
jecxz
lods
xor
fimuls
or
es
jne
scas
and
push
lcall
add
aas
mov
cmp
adc
xor
seto
cmp
push
adc
pop
mov
mov
addr16
cmp
mov
das
int
testb
in
or
pop
lods
mov
jo
loope
jmp
lock
push
xlat
es
inc
inc
xchg
mov
mov
xchg
and
push
ret
cs
cs
pushf
scas
cli
js
add
fdivrs
lahf
fwait
aaa
rolb
mov
ret
pop
dec
adc
mov
lock
scas
cmp
fsts
decb
repnz
inc
and
mov
cmc
iret
outsl
stos
scas
jb
push
dec
clc
imul
add
push
das
enter
sub
test
stc
and
mov
mov
mulb
sbb
dec
addb
sub
jns
xor
das
sub
mov
or
mov
and
mov
pop
out
cwtl
inc
dec
jbe
adc
pop
aam
aam
pop
adc
dec
fnsave
pop
mul
cmp
pop
and
cmpsl
inc
sbb
daa
add
xor
movsb
call
scas
cltd
mov
xlat
inc
je
in
mov
in
or
mov
cltd
js
cmp
or
psllq
ja
mov
push
sbb
mov
dec
cmpsb
jbe
sbb
cmpsl
lcall
mov
pusha
loopne
movsb
add
adc
mov
push
xor
roll
lret
nop
push
xor
add
sbb
or
sub
ffreep
cmp
dec
xchg
sub
jnp
and
sub
or
ja
dec
dec
and
xchg
sbb
jbe
sub
data16
xchg
add
mov
mov
cmp
sub
ljmp
sahf
inc
int3
push
mov
cmp
push
cwtl
inc
push
lret
xor
in
fwait
inc
fstl
or
lcall
push
xchg
or
cwtl
xchg
iret
and
les
stc
and
xchg
mov
flds
repnz
outsb
lock
mov
pop
or
jl,pn
stos
lret
and
daa
xchg
icebp
repnz
mov
push
dec
mov
lcall
adc
mov
jo
in
testb
into
cmp
mov
inc
out
add
jns
jo
add
mov
pop
push
movsl
push
mov
jle
mov
pop
ret
rclb
js
movsb
mov
movsb
sahf
int
fsts
xorl
cli
adc
jo
pop
pop
mov
sub
or
dec
fstp
jmp
stc
mov
stos
push
popf
cmp
stos
jae
mov
dec
mov
cltd
sbbl
pusha
lock
lock
adc
sub
outsb
push
sbb
lock
pop
mov
lret
cmp
stos
lret
js
fs
xchg
int
sbb
sahf
cs
lea
popf
sbb
mov
in
aas
add
je
rolb
xchg
sbb
xchg
cmp
dec
rorl
adc
mov
jns
mov
pushf
testl
test
enter
out
imul
sbb
gs
stc
stc
lds
out
call
movsl
xor
and
pop
pushf
sub
jmp
inc
cltd
xchg
jb
stc
sbb
outsb
aad
ja
and
inc
cmp
push
call
adc
pop
outsb
adc
add
push
dec
cwtl
add
in
jae
inc
ljmp
mov
dec
jecxz
je
pop
fs
ljmp
jbe
andb
stos
cmp
pusha
cli
bound
pop
push
in
sbb
xchg
mov
movsl
inc
dec
push
mov
push
mov
inc
jne
subb
inc
or
rcrb
or
push
scas
adc
dec
outsl
push
stos
cmp
inc
pop
rcrl
cmp
xorl
push
mov
xor
clc
pushl
popf
push
pushl
ret
xor
stc
bt
xor
mov
pushf
xor
call
jl
push
movl
pusha
mov
pushf
pusha
movl
push
pushf
lea
jmp
clc
xorl
call
xor
push
xorl
call
sti
shll
adc
mov
ljmp
enter
scas
mov
lds
mov
xchg
sahf
and
mov
add
frstor
sub
pop
dec
lea
loop
adc
jns
dec
ss
add
in
xor
ljmp
ror
clc
adc
cmp
loopne
ss
icebp
and
push
jl
inc
cmc
add
call
push
dec
fucomp
popa
rol
jno
popf
jge
inc
cmp
in
cmp
subl
jle
int3
add
loope
lock
popa
sbb
add
sbb
test
lret
je
xchg
sub
dec
xorb
rorb
sub
sbb
pop
push
movsl
and
insb
mov
add
xchg
lahf
lock
xchg
mov
dec
pop
fcompl
aas
roll
mov
and
scas
inc
dec
sub
mov
pop
in
inc
popf
popa
sub
aad
insl
in
fimuls
icebp
jle
inc
in
jae
lods
sbb
sbb
xor
int
imul
fisubl
js
hlt
sub
lods
jle
ficoml
mov
adc
pop
add
mov
sub
loopne
insl
mov
mov
mov
mov
rolb
pmaxsw
inc
popf
insb
neg
loope
testb
xor
cmpsb
loopne
out
push
jecxz
fdivrs
loope
adc
jp
pop
jne
push
jae
sub
add
test
dec
ret
push
cs
add
push
andb
out
fimull
shrl
jb
ret
rorb
mov
pushf
movsl
sbb
add
sub
roll
popf
add
imul
fmul
sarl
pop
sbb
nop
jns
outsb
addr16
cmpsb
ret
or
insl
hlt
add
mov
scas
mov
add
sub
aaa
inc
inc
or
dec
rorl
lcall
pop
fnstsw
mov
aam
push
sub
sbb
cltd
adc
fidivl
testb
xor
fistps
in
lods
xchg
sbb
repz
inc
in
xchg
pop
add
mov
aam
shl
mov
rorb
dec
fstps
jmp
and
rcl
test
rcl
push
sub
gs
pop
movsl
sub
pop
pop
cmp
sub
insl
sbb
jle
xlat
push
outsb
dec
inc
test
dec
and
push
cmp
pop
inc
repz
enter
iret
inc
subb
outsb
add
inc
push
jmp
and
outsl
mov
jb
aam
in
add
aad
ret
rcll
inc
insb
roll
xchg
in
into
dec
sbb
pop
arpl
cmpsb
lcall
out
mov
jns
cltd
push
jl
std
pop
jns
andb
sbb
mull
mov
inc
mov
arpl
cmp
cmp
bound
lods
rolb
popf
and
dec
ss
sbb
add
mov
repz
dec
inc
dec
dec
mov
dec
lret
mov
cmp
shrw
scas
xchg
mov
fiaddl
sub
leave
je
jp
lods
enter
cmp
lods
push
aam
insl
and
pop
push
loopne
lret
bound
scas
add
and
cmp
arpl
jno
mov
das
popf
test
push
xchg
xchg
and
adc
mov
loop
jl
cmp
and
jns
mov
mov
dec
movb
pop
pop
rorl
fildl
cmpsb
mov
add
cmp
pop
push
scas
mov
in
mov
push
fmul
inc
outsb
sbb
cmp
imul
es
push
test
xchg
add
pop
mov
mov
add
out
adc
nop
adc
mov
mov
ret
adcl
push
sbb
lahf
push
pop
into
loop
pmulhuw
out
in
or
xchg
inc
mov
repnz
xchg
inc
adc
xor
fcoms
xor
imul
cmp
pop
cltd
or
pop
dec
add
imul
ss
jmp
jo
fstpl
test
fldcw
dec
pushf
in
ds
fwait
rcrb
inc
rcll
lcall
mov
mov
nop
ds
push
mov
in
arpl
add
daa
out
cltd
cmp
push
je
pop
pushf
push
fst
jae
testl
insb
xchg
xchg
xor
mov
sbb
subl
je
in
add
mov
cltd
js
xchg
cmp
xor
jg
mov
lcall
add
es
inc
mov
imul
cmp
mov
push
cmp
xor
fstpt
jmp
cmp
push
movsb
mov
jns
adc
push
adc
sahf
dec
in
stos
xorb
andl
call
lret
insb
out
jne
jnp
cs
add
and
xor
shll
add
pushl
mov
or
ljmp
xchg
enter
test
pop
loop
cmpsb
cmc
ds
sbb
ret
ss
jmp
push
xor
sti
sub
push
ret
loopne
xchg
and
pop
or
dec
mov
ss
cmp
push
lret
mov
pop
jb
mov
ds
and
cmp
mov
dec
out
lock
sbb
pop
dec
inc
push
push
ljmp
movsb
mov
rcll
xor
pop
rcll
dec
imul
push
jb
add
cmp
or
inc
sti
or
ljmp
movb
push
fistl
fimull
test
sbb
adc
pop
inc
stos
sbb
fdivl
scas
push
lods
daa
mov
add
das
and
fisubl
sub
mov
cmpsl
xchg
xor
xchg
jge
test
add
xchg
xor
fistl
and
and
jge
ss
imul
aad
xchg
jl
or
pop
dec
fmuls
lock
pop
inc
dec
xor
jns
xor
push
push
xorb
and
std
insb
push
mov
push
add
iret
ror
ss
ficoml
cld
mov
ret
sbb
cld
iret
stos
decb
cmc
dec
xchg
mov
mov
xchg
movsb
inc
sub
mov
stos
aaa
imul
inc
cld
mov
add
sti
call
push
stos
push
aad
pop
add
jge
test
mov
and
mov
dec
aaa
mov
xor
cmp
jbe
in
mov
inc
add
mov
add
jge
shr
das
mov
jne
push
cmp
sbb
fs
mul
aad
insl
mov
mov
pop
or
leave
add
gs
cs
mov
xor
stos
mov
mov
inc
decb
dec
cmp
pop
cs
ss
fsts
cmpsl
xchg
adc
inc
lret
jl
cmc
repz
leave
add
test
pop
dec
fildll
das
jp
sbb
jle
sub
lret
ds
mov
mov
stc
loop
imul
hlt
pop
imul
lods
vpaddsb
cmp
rcll
adc
movl
pusha
movl
pushl
pusha
pushl
lea
jmp
pushf
popl
cmp
xor
cmp
cmp
xor
clc
call
inc
sub
scas
int3
imul
or
data16
sbb
test
repnz
mov
or
sbb
or
loopne
inc
xlat
addr16
adc
dec
lret
dec
mov
mov
adc
pop
test
sbb
out
lods
dec
xor
fdivs
mov
in
push
enter
in
jg
jb,pt
add
call
sti
pop
dec
addr16
test
inc
mov
out
push
fs
xchg
push
mov
das
xor
out
xlat
pop
jge
pop
mov
sbb
cmp
cld
adc
adc
xchg
movsl
or
stc
or
pop
out
mov
negl
mov
lcall
enter
in
jbe
call
inc
add
in
xor
cltd
popa
mov
sbb
push
out
pop
incb
jle
shll
add
xchg
enter
jmp
ret
loope
mov
jl
xor
mov
insl
jo
pushf
pop
pop
lahf
je
pop
sarb
fnstenv
sbb
or
adc
push
push
and
lods
push
iret
rcl
shrl
aam
and
addr16
fisubrs
stos
dec
fildl
cli
in
push
jge
je
fstpt
lea
cs
js
ror
lea
sub
sub
jge
jo
jp
loop
xchg
std
mov
jmp
or
dec
insb
pop
or
imul
inc
mov
push
xor
shll
idivb
xchg
jae
mov
inc
and
test
xor
test
xor
bt
xor
call
jge
push
movb
pushf
movl
jmp
mov
add
sub
insb
sti
lahf
jmp
movsb
lret
mov
popa
mov
push
outsl
mov
loop
add
idivl
jl
lret
stos
push
jp
xorl
into
insl
repz
inc
push
mov
xchg
in
pop
inc
sub
jnp
cli
dec
pop
sub
pop
add
add
outsb
cmp
ja
dec
xor
insl
lahf
es
mov
fs
add
add
arpl
sahf
cmc
sub
xor
imul
mov
lahf
jbe
dec
and
pop
test
adc
mov
dec
push
popf
sbb
jl
aam
dec
sub
mov
pop
dec
jno
sub
xor
and
xchg
mov
mov
bnd
rorl
jne
idiv
jecxz
nop
add
mov
cmp
push
dec
cmp
lods
add
xchg
cmpsb
aas
repz
test
cmp
push
xchg
cmp
add
mov
mov
test
nop
jmp
aaa
jg
dec
mov
loopne
add
repz
or
popf
fsubrl
pop
jmp
imul
and
subb
scas
js
aas
sbb
mov
mov
subb
add
ret
push
jge
fisttps
mov
mov
sub
jae
ror
jbe
leave
xor
cs
cltd
and
adc
or
mov
out
adc
cmpb
repz
cmp
cmp
daa
pop
fsubl
ret
dec
xchg
sbb
mov
rdtscp
jbe
pop
inc
lds
out
stc
push
jae
jp
testl
rorb
call
fistpll
movsl
jl
push
aad
cmp
test
inc
aad
movsl
pop
mov
fldl
cli
add
pop
pop
push
insb
dec
pop
sbb
push
test
dec
push
and
sbb
jmp
test
sub
pop
adc
jmp
out
int
cmp
mov
cmp
cmpsb
outsl
cmp
sbb
rcr
xchg
xchg
mov
adc
push
in
inc
cmp
das
arpl
repnz
cli
lret
loopne
mov
jmp
add
jge
sub
ret
insb
repnz
jle
out
and
icebp
pop
lretw
and
dec
outsb
enter
das
mov
adcl
inc
icebp
loope
push
int3
mov
in
pop
cli
sar
shl
icebp
test
mov
sahf
xor
shlb
fisttps
jno
add
inc
dec
addb
xor
jecxz
add
mov
mov
dec
sti
dec
daa
pop
add
and
loopne
sub
xlat
pop
sbb
inc
ds
push
jmp
pop
adc
orps
in
or
scas
pop
sbbl
ja
testl
int
sub
mov
nop
hlt
in
cmp
jns
ja
insl
data16
sub
popf
push
inc
sub
movsb
jecxz
pop
mov
xchg
jbe
mov
outsb
sbb
mov
fists
aas
mov
ds
scas
loopne
rorb
ss
out
mov
aaa
fwait
cmp
daa
lock
mov
pop
xor
and
and
pop
mov
dec
enter
test
lea
push
out
mov
scas
add
popa
int3
or
push
add
in
loop
mov
or
mov
mov
pop
out
icebp
out
imul
pop
sarb
sub
repz
outsl
fstps
xchg
sbb
fadd
les
es
add
push
outsl
icebp
bound
mov
outsl
add
mov
cwtl
sub
dec
push
popf
in
push
stos
das
jne
sub
jg
jb
repnz
mov
cltd
sub
cmp
pop
repz
add
mov
sub
ficomps
sub
aad
cmp
movsw
in
xor
pop
jle
in
xchg
pop
sbb
cwtl
fstp
bound
sub
push
jmp
jmp
inc
divb
xchg
test
scas
das
mov
fnstsw
addb
jmp
mov
and
pop
jne
test
or
fwait
int3
dec
pop
lret
xor
fcoms
test
js
cmp
out
inc
cmp
pop
cmp
fcmovb
inc
call
ss
mov
push
sub
push
xchg
dec
loope
imul
cmpsb
aaa
and
push
pop
mov
aaa
pop
sbb
ljmp
add
push
sti
cmpsb
nop
ja
test
xor
push
jo
icebp
hlt
mov
pusha
scas
cmpsl
in
test
adc
push
mov
repz
dec
dec
cwtl
adc
pop
sbb
int3
in
test
mov
push
mov
out
andnps
push
pop
ret
popa
cmp
push
rcll
mov
mov
mov
mov
frstor
shll
lods
sbb
movsb
xchg
outsl
lea
es
addr16
cltd
nop
std
sbb
in
outsl
idivl
data16
mul
mul
arpl
neg
inc
das
ljmp
inc
push
dec
mov
sbb
jo
imul
jnp
or
rcll
dec
xor
fldt
xchg
adc
dec
or
cmp
mov
jmp
sahf
or
fwait
adc
and
sub
adc
mov
test
sbb
xor
lahf
mov
arpl
add
in
subl
test
inc
rclb
fsubs
pop
mov
sub
pop
lea
dec
push
mov
stc
inc
loopne
arpl
out
popf
or
call
mov
jbe
add
mov
xor
push
out
xchg
and
test
loope
pop
cmp
mov
xor
jl
or
xor
repnz
or
sarl
shll
mov
xchg
cmp
dec
mov
sub
ljmp
and
sbb
cmp
and
in
cmp
int
sbb
test
cli
jge
ds
inc
shrb
mov
popa
adc
icebp
shlb
jo
ljmp
imul
mov
mov
sub
sbb
push
repnz
add
push
xor
xchg
xchg
popa
xchg
xchg
adcb
jmp
fisttpl
je
inc
lds
xlat
add
xor
push
rcrb
mov
mov
pop
cmp
pop
je
push
addr16
cmp
les
and
cmp
mov
pop
inc
in
mov
dec
fidivrl
fcmovnb
push
xor
pop
add
add
sub
mov
dec
je
movsb
rcrl
or
cmpsl
adc
out
negb
inc
pop
jecxz
push
cltd
std
insb
loop
pop
test
cmp
arpl
or
aam
dec
insl
negl
push
add
cld
sar
mov
jnp
cld
mov
cmp
fstpl
jmp
mov
jne
push
cmpsl
push
das
sbb
repz
mov
shlb
sbb
movsl
and
arpl
xchg
mov
cld
jbe,pt
mov
and
ret
fstpt
lret
sub
enter
xchg
in
or
jecxz
aam
mov
mov
lahf
sbb
pop
mov
int3
mov
test
mov
jle
pushf
fldt
out
pop
lods
dec
push
lods
pop
jl
and
pop
add
int
xchg
jo
pop
mov
and
test
add
test
dec
je
lds
lods
enter
add
int3
adc
iret
xchg
or
cmp
adc
jmp
inc
and
movl
call
fsubrs
and
push
aas
xchg
leave
jle
or
dec
ficompl
cmpsb
xlat
iret
push
inc
imul
enter
shll
xchg
mov
sbb
outsl
push
and
in
mov
in
enter
add
pop
repz
cmc
movsb
mov
sub
pop
push
jecxz
pop
ss
cmp
and
mov
stc
mov
xchg
xchg
xchg
lret
xor
mov
pop
lcall
jns
xchg
jl
and
cmpsl
cmp
das
ret
lock
dec
xchg
xchg
jecxz
sub
jle
std
mulb
or
jp
movsb
sub
fiaddl
add
scas
cmp
lds
xchg
mov
mov
test
cli
daa
dec
inc
jae
daa
cltd
out
mov
jecxz
xchg
fwait
mov
scas
loop
pop
sbb
sahf
jecxz
clc
flds
pop
stc
out
test
sbb
push
inc
mov
push
leave
inc
sbbb
add
pop
cld
jb
inc
hlt
repnz
jno
inc
addr16
inc
mov
cmpsb
subb
mov
outsl
adc
jmp
or
push
jns
xor
fidivl
aam
cmp
sub
fsubl
jg
pop
fwait
dec
in
outsb
xor
mov
sub
clc
testb
lea
cli
out
pop
iret
push
cmp
imul
jbe,pt
daa
jl
sarl
dec
popl
jle
int3
dec
fadd
jno
mov
jno
jp
in
mov
int
sahf
sub
pop
aam
push
mov
fxam
stc
pop
push
ss
out
mov
orb
push
jg
jae
jmp
mov
inc
in
arpl
scas
jns
daa
mov
xlat
cmp
xchg
sub
in
and
aad
adc
pop
mov
cld
imul
addr16
push
daa
or
rorb
inc
jnp
shll
cli
cld
icebp
add
push
or
mov
js
pushl
or
scas
xor
inc
int
mov
and
subl
sbb
sbb
push
cwtl
xlat
arpl
rcr
push
cmp
jbe
add
or
out
add
adc
stc
jo
mov
ljmp
outsb
outsl
lods
mov
inc
popf
and
std
ljmp
pop
in
sub
mov
repz
adc
sub
addb
mov
pop
add
lahf
aas
or
sub
pusha
adc
ret
push
sub
inc
sub
push
rolb
sbbl
jno
shrb
shlb
adc
xor
leave
xlat
xchg
pop
cs
popf
push
cmp
cmpsb
cmpsb
in
repz
aas
or
add
mov
xor
out
loopne
push
inc
out
cmpsl
aaa
add
inc
fnstsw
sbb
pushf
and
push
or
adc
pop
cli
imull
or
dec
les
loop
dec
pop
mov
je
das
int
test
stos
sahf
jnp
rorb
xchg
sbb
mov
jmp
ret
adc
jp
xchg
fldenv
cmc
addr16
xchg
ficoms
mov
dec
xacquire
mov
xchg
cmp
pop
notb
pop
mov
xchg
jp
and
addb
xchg
jnp
push
mov
xchg
test
jae
int3
fistpll
imul
cld
xchg
int3
mov
pop
sub
in
adc
add
mov
stos
movl
mov
mov
push
inc
fsubrs
scas
aaa
jo
sbb
jnp
xchg
cmp
mov
xchg
shlb
outsl
mov
mov
pop
andb
xorl
imul
jge
and
xchg
fisttpll
mov
jle
push
cmp
mov
vmulpd
mov
xchg
lods
imul
xchg
ret
adc
push
xchg
inc
xlat
pop
leave
push
gs
sti
repz
mov
decl
pop
push
sbb
daa
add
xlat
leave
dec
fldt
ret
push
mov
xchg
push
fbstp
cmp
jg
out
hlt
aas
ficompl
sub
dec
imul
std
and
lcall
shrb
inc
adc
adc
add
mov
pusha
and
cs
dec
or
outsl
in
int3
js
cwtl
xlat
pop
fldln2
push
dec
pop
jle
xor
dec
movsl
xor
data16
and
iret
dec
or
xor
lahf
test
sub
dec
push
sbb
dec
jmp
mov
in
mov
in
add
ret
or
scas
dec
lods
std
or
mov
push
cmp
cmp
cmp
mov
mov
mov
push
xchg
les
lock
xchg
pop
loopne
lock
lahf
adc
sbb
mov
jbe
popf
icebp
movhps
in
adc
push
je
mov
repz
out
hlt
inc
iret
adc
sub
daa
ret
pop
sub
addr16
mov
ds
sub
sahf
es
movl
push
in
lods
jp
and
adc
add
mov
mov
add
into
pop
es
add
test
jp
jmp
sub
call
out
outsl
push
mov
les
repz
mov
adc
pop
mov
in
xor
out
shlb
stc
pushf
nop
sub
jl
shrb
pop
sbb
jb
jge
insb
sub
xchg
sub
pop
sbb
je
mov
jns
popa
inc
rcrb
cmp
mov
lcall
lea
stos
hlt
data16
xor
dec
pop
push
loop
xlat
jg
add
mov
and
xor
dec
xor
push
out
imul
pop
ja
hlt
popf
stos
sbb
outsl
jge
mov
gs
nop
cs
out
cmp
inc
mov
mov
test
gs
cmp
in
add
adc
sub
inc
mov
aas
sti
hlt
mov
sbbb
sahf
xchg
test
sub
test
cmp
das
hlt
push
insb
lock
push
xor
imull
out
mov
lret
in
mov
xchg
sub
cmp
jno
mull
scas
push
mov
jns
lea
or
jno
ret
aaa
cwtl
iret
jne
xchg
and
mov
add
aad
cmc
push
fcmovnbe
ret
push
lock
scas
inc
aaa
xor
nop
mov
push
fisttps
pop
mov
test
aas
shll
mov
push
sbb
popf
fwait
jmp
lods
cmp
xchg
sbb
mov
fisttpl
addr16
push
out
mov
jmp
jmp
into
out
stos
repz
aaa
mov
ss
jmp
cs
mov
xchg
xchg
jb
int
pop
sbb
cmp
popf
mov
es
les
xor
or
popa
fwait
or
push
ret
add
stos
inc
adc
adc
incl
or
lea
add
sbb
scas
inc
add
repz
sub
imul
mov
jle
cmp
inc
add
inc
mov
mov
xor
dec
and
jo
jp
outsl
stos
pop
mov
or
mov
in
pop
in
adc
aaa
cmp
repz
cmp
lcall
mov
ret
arpl
mov
jle
jnp
icebp
xchg
mov
stos
dec
sub
sub
inc
lock
push
imul
inc
gs
lret
sub
jp
jecxz
dec
lcall
add
scas
adc
jb
cmp
sbb
in
js
and
repnz
dec
out
fistl
fs
adc
aad
sbb
lods
aam
mov
pop
add
cmp
inc
enter
enter
mov
adc
scas
lea
pop
add
mov
icebp
mov
cmpsb
sub
lret
movsl
sub
scas
mov
xor
cwtl
cmp
mov
jo
push
dec
pop
xchg
cmp
cmc
out
cs
in
pop
aas
andl
or
imul
sahf
mov
scas
ror
in
pop
pop
cmpsl
ja
sti
push
movl
sbb
add
add
fdivs
sub
pop
cwtl
mov
out
lret
pop
repnz
test
inc
push
dec
outsb
cmc
sub
mov
sbbl
sbb
pusha
mov
cwtl
inc
cmp
lods
mov
dec
enter
adc
cltd
rdtsc
jmp
jno
lock
pusha
push
push
push
or
ficomps
sbb
mov
adc
xchg
lods
cs
call
rorb
movsl
rolb
lock
cmp
in
cmp
jo
sub
mov
xor
cmp
insb
push
cmp
aam
loopne
fsubrs
loop
xlat
sub
imul
ja
ds
popa
adc
pop
es
js
test
imul
mov
pop
xchg
sbb
data16
jecxz
aad
fs
xor
xlat
cmpsb
shl
push
repnz
jl
adc
aaa
inc
adc
pop
rol
sbb
ljmp
mov
push
mov
inc
aam
jg
out
aaa
or
jne
or
or
mov
xchg
in
pop
push
rcrb
fmuls
pushf
sbb
xor
jle
lahf
lock
lods
sub
imul
dec
inc
pop
push
test
idivb
roll
ljmp
dec
xchg
pop
push
pop
cmp
subb
test
mov
and
jle
push
lods
jnp
add
xor
dec
lds
xchg
aaa
or
mov
gs
dec
mov
mov
xor
out
pusha
mov
icebp
mov
pusha
aaa
insb
mov
jge
out
add
test
fwait
arpl
cld
lret
cmp
icebp
cwtl
add
jns
mov
aad
out
sub
int3
ss
aaa
fcoms
ret
push
jbe
iret
sub
adc
lock
mov
jo
and
adc
push
jne
jns
push
mov
ret
loope
sbb
push
aad
out
pop
mov
lock
jecxz
push
cs
push
xor
loop
out
xlat
sub
adc
push
xor
add
add
pop
jg
aad
out
int3
jmp
xor
adcb
push
or
sub
adc
cmpsb
test
jbe
mov
pusha
popa
cmp
add
aad
out
or
fs
mov
xor
sbb
aaa
jg
ret
inc
lds
xor
divb
gs
xor
mov
xlat
adc
mov
addl
and
fcmovbe
push
xchg
sbb
xchg
sbb
jmp
push
iret
es
sub
adc
inc
loopne
push
dec
insb
popa
mov
testl
shl
inc
pop
jecxz
sbb
mov
dec
pop
mov
sbb
in
in
lcall
bound
pop
subb
push
nop
ficoms
fs
aaa
fstps
or
push
shll
insb
jg
scas
pusha
push
xor
mov
jl
popa
mov
xchg
fidivrl
sahf
adc
xor
loopne
adc
fmulp
pop
in
daa
xchg
cwtl
incb
pop
fs
fdivrs
test
push
jle
jg
cld
push
sbb
movl
das
xor
or
push
cmp
jg
dec
fisubrl
dec
adc
cs
lea
into
jecxz
dec
pop
mov
shlb
enter
jmp
fs
jp
mov
dec
dec
adc
jle
je
pop
lods
lock
arpl
das
les
mov
pop
into
dec
aam
pop
mov
jle
adc
fcomp
insb
jmp
lcall
aad
inc
cmc
bound
imull
movsl
mov
jecxz
icebp
js
mov
shrl
loope
cmpsl
arpl
cmpb
xchg
xlat
pop
xchg
sbb
repz
repz
xchg
cltd
clc
mov
push
xor
lret
push
ror
pop
test
mov
sub
adc
lret
jg
scas
xor
arpl
scas
xlat
xorb
les
scas
daa
fsubrs
fcmove
and
cli
je
sub
xorl
sub
movsb
js
lcall
push
add
ss
int3
lods
shl
movsb
insl
jl
mov
sub
add
xchg
jae
mov
idivb
sahf
icebp
cmp
lock
enter
adc
adc
mov
mov
mov
bound
sbb
or
popf
loopne
push
insb
pop
mov
push
popf
lea
mov
cmp
sarl
push
mov
fmuls
imul
jbe
out
adc
stos
nop
lcall
mov
push
and
cli
xchg
cmp
jbe
cmc
outsl
call
mov
inc
mov
insb
inc
adc
mov
jl
cmp
sbb
or
negl
add
mov
xchg
out
std
lcall
lods
sub
cmp
scas
jmp
aam
dec
stos
data16
ret
leave
sbb
enter
xchg
shl
jb
pushf
or
jl
cltd
inc
stos
mov
ja
fnstsw
dec
xchg
mov
sarl
ds
dec
ret
outsb
push
xor
push
dec
aad
inc
ljmp
lret
dec
js
les
dec
in
loope
fdivp
sahf
out
sbb
aaa
sub
in
cmc
push
xchg
pop
jmp
rorl
stc
scas
cmpsl
or
inc
mov
les
mov
cmp
or
gs
leave
sub
repz
sbb
test
lea
mov
ss
add
pop
into
sbbl
push
je
js
leave
dec
xor
jne
jne
loop
inc
jg
out
fsubs
stos
sub
outsl
aaa
and
pop
push
mov
mov
push
sbb
push
aas
jecxz
into
movsl
xchg
xor
sarl
mov
and
and
xchg
adc
xchg
jbe
ja
pop
scas
aaa
jmp
pop
int
xchg
mov
xlat
aad
dec
repnz
movsb
and
outsb
in
sub
ret
inc
scas
push
fidivl
ljmp
ret
push
xchg
ja
ja
ss
lods
xor
out
fcomps
dec
or
cmp
fucomp
scas
or
inc
out
test
push
ret
xlat
sbb
fiadds
pop
rcr
mov
sti
out
pop
fsubl
push
stc
out
lds
out
mov
je
sub
mov
fs
and
xchg
push
fprem
stc
ljmp
cmp
xor
lahf
dec
mov
xchg
repnz
leave
dec
test
outsb
clc
icebp
sti
in
pop
xor
or
or
lahf
repz
cli
mov
pusha
xor
jbe
jge
leave
jmp
add
aad
gs
stc
xor
pop
cmc
cs
fisttpll
popa
inc
and
lock
dec
das
fstpt
aaa
xor
mov
mov
add
adc
and
add
or
sbb
shlb
push
fisubrs
push
rorb
pushf
out
dec
push
jmp
enter
mov
mov
jb
cmp
fdiv
push
lret
imul
bound
mov
inc
or
mov
push
icebp
repz
enter
outsb
in
sub
mov
mov
adc
loope
popa
adc
pushf
stos
mov
mov
test
pop
cld
cwtl
mov
ljmp
cmp
add
inc
push
sub
mov
scas
adc
sbb
sub
sbb
fimull
xchg
fists
xor
jne
lock
dec
sarl
mov
sbb
xor
aas
adc
insb
push
xchg
push
ljmp
fld
in
fnsave
fdivp
jno
sub
popf
test
or
push
outsl
sub
addr16
inc
cs
mov
roll
jl
mov
jecxz
mov
fnstcw
adc
mov
mov
enter
scas
jl
or
data16
notl
push
stos
push
xor
idivb
add
cltd
pop
xor
xchg
push
inc
sbb
test
jl
sub
jge
js
sbb
ds
dec
xor
nop/reserved
pop
sub
push
scas
push
xchg
xchg
ss
repnz
std
push
push
push
mov
lods
mov
and
pop
mov
jne
fidivrl
or
loope
std
xchg
xchg
sub
jne
filds
push
mov
jns
pop
push
int
cltd
sbb
leave
ljmp
sbb
popf
call
aas
mov
idiv
pminsw
ret
pop
fistps
lahf
cmp
mov
pop
dec
ret
xor
xchg
mov
mov
inc
xor
out
jns
push
mov
mov
xlat
gs
rcll
movsl
int3
nop
or
mov
out
je
arpl
int3
pop
inc
inc
xchg
inc
aaa
inc
xor
cmpsb
arpl
or
or
mov
imul
mov
shlb
fimuls
and
sub
mov
dec
pop
fs
inc
mov
push
fisubl
cmp
xchg
inc
xor
ret
add
leave
stc
js
jecxz
insl
adc
test
std
cmp
imul
pop
xchg
xchg
sub
das
jge
mov
add
call
je
sub
jmp
jne
cli
dec
sub
ror
xor
or
enter
xor
sbb
pop
sub
mov
iret
test
pop
orl
or
add
pop
pop
jno
sti
gs
xchg
adc
cmp
adc
mov
pusha
andl
push
mov
ljmp
sbb
mov
push
cld
lahf
inc
sub
sbb
xlat
rcrb
sti
movsl
xchg
cmp
lds
inc
xchg
enter
leave
scas
sbb
out
sbb
push
inc
lahf
mov
in
out
out
pop
lahf
loope
and
jae
loope
pop
cmc
mov
hlt
outsl
and
sbb
sub
mov
pop
mov
test
push
adc
cli
and
outsl
sub
ljmp
ds
stos
inc
rcrl
mov
mov
movlps
popl
test
mov
ljmp
xor
orb
loope
clc
mov
xor
adc
mov
aad
mov
jne
dec
nop
and
imulb
inc
lret
fcomi
mov
pop
nop
xchg
or
ja
ja
sbb
or
lods
fs
mov
test
je
mov
insb
xchg
leave
pop
push
sbb
xchg
pop
repz
dec
mov
push
dec
lret
jne
imul
testl
lret
mov
pusha
not
ja
push
cmpsl
das
je
jecxz
mov
call
mov
and
sbb
jle
mov
adcb
loop
sub
mov
adc
insl
and
inc
lret
andl
mov
xchg
sbb
push
dec
movb
js
mov
pushf
sbb
xor
inc
push
add
mov
ficompl
push
dec
and
lds
xchg
mov
jb
popf
jge
add
std
inc
roll
bound
nop
or
sub
lret
add
icebp
cmpsb
add
jg
sub
sbb
mov
mov
les
dec
imul
popf
mov
mov
xor
in
scas
ret
add
test
insb
lret
sbb
out
pop
or
daa
insl
movsb
xchg
sbb
push
or
push
adc
xchg
or
cltd
sbb
test
push
inc
adc
pop
mov
and
scas
je
int
sti
or
loopne
sub
call
jne
ss
jg
jae
push
fnstsw
stos
push
xchg
push
imul
hlt
mov
scas
adc
test
lods
jle
ret
lret
ljmp
push
aas
stc
add
cmp
out
jl
popf
jns
into
outsl
mov
and
cli
aas
cmpsb
mov
loope
ficomps
iret
jp
or
scas
in
cmp
push
clc
popa
xchg
pop
mov
and
pop
inc
pop
dec
inc
mov
shrl
dec
jle
jo,pn
adc
inc
icebp
mov
je
mov
rolb
inc
loop
jae
ficoml
cmp
rclb
cltd
ja
adc
es
cltd
xorl
popf
xchg
sub
sbb
cmp
in
or
xor
lods
sbbl
and
aas
cs
subb
ret
or
and
xchg
push
mov
and
mov
into
in
jl
mov
sub
mov
xchg
mov
mov
out
aam
subb
push
in
push
push
test
jle
xchg
popa
pop
push
sbb
xchg
adc
push
or
mov
pop
arpl
mov
orb
sahf
aaa
add
js
xor
test
cltd
fcmovne
imul
jns
adc
pop
xchg
sbb
ret
ret
xor
push
push
fsts
lods
fildl
dec
aas
int3
shll
pop
push
loop
push
dec
in
or
or
fld
test
outsb
adc
jmp
cmc
mov
loop
fisttpll
cli
jle
sar
cs
outsb
int
pushf
and
xor
jp
cmc
sbb
mov
jno
scas
les
cld
mov
jno
movsl
inc
pop
jb
cmpsb
stos
cld
bound
in
dec
dec
xlat
and
xchg
lret
mov
fdivrl
stos
arpl
insl
push
pop
jb
cmp
jb
mov
inc
mov
scas
jg
mov
bnd
sti
orb
jecxz
imul
push
popf
mov
push
inc
push
mov
arpl
hlt
aaa
lds
mov
lods
lcall
push
imull
movsb
or
iret
imul
adc
int
out
dec
rorl
hlt
cmp
sub
or
outsl
sub
jmp
leave
cmp
pop
imul
mov
shll
arpl
add
shlb
sub
mov
and
mov
mov
add
gs
adc
lcall
nop
inc
pop
add
and
and
test
mov
lock
push
or
adcb
sbb
push
repz
push
loop
push
in
inc
lock
ret
push
cs
jp
lret
and
mov
xor
repnz
pop
jmp
js
cwtl
daa
add
inc
adc
testl
mov
lods
pop
add
mov
fcoms
cmp
inc
ficoml
sub
pop
lods
push
imul
inc
cmpsb
stc
popf
dec
arpl
scas
stos
xchg
and
inc
fnstsw
mov
scas
push
xchg
dec
jne
les
add
lret
cmpsb
jl
mov
push
fistps
cmp
xor
push
jle
push
jecxz
ja
sub
cld
aad
pop
shll
jns
inc
fwait
in
mov
mov
leave
jnp
xchg
mov
xchg
jne
inc
fwait
mov
setne
int3
xchg
mov
rcl
sub
push
dec
leave
aam
pop
out
arpl
data16
mov
arpl
sub
mov
push
nop
sbb
insb
pop
je
enter
js
cwtl
pusha
fwait
movsb
fwait
ljmp
fcoml
adc
sub
in
fldenv
mov
push
sbb
cmp
fs
mov
das
es
cmp
les
inc
lret
mov
loop
adc
sub
sbb
push
mov
pop
fnstsw
inc
xor
lea
xchg
sbb
pop
aad
lcall
jp
gs
or
mov
ret
pop
push
mov
cld
jbe
mov
xchg
sahf
scas
out
imul
dec
cmp
dec
je
icebp
sub
sbb
lods
xchg
and
mov
imul
cmp
ss
sbb
outsl
push
or
fcompl
mov
dec
icebp
fmuls
mul
sub
jl
outsb
das
pop
push
or
lret
xorl
mov
sub
nop
rclb
and
or
cmp
pusha
rcl
cmp
mov
js
in
jns
mov
cli
jne
pop
lods
jp
pop
adcb
jo
add
loopne
cli
div
and
cwtl
sbbl
jg
pop
add
or
jmp
push
aas
outsb
mov
mov
push
sbb
cmp
fildll
mov
jno
out
enter
ficomps
fs
jbe
aad
push
mov
ret
xor
cltd
jl
cld
cltd
mov
mov
pop
les
ret
pop
mov
ror
pop
fldenv
mov
mov
mov
pop
repz
cmp
push
mov
dec
out
add
cltd
nop
mov
nop
gs
and
add
dec
jb
and
mov
dec
mul
into
add
jp
in
cwtd
xor
jo
dec
lods
cld
push
mov
dec
pop
push
rcrb
pop
stos
mov
cwtl
sub
jp
jecxz
test
subl
sti
jp
push
add
gs
jecxz
push
mov
sbb
add
mov
pop
cmpsb
out
outsl
mov
adc
inc
imul
mov
inc
pushf
mov
mov
and
pop
xor
mov
lahf
inc
in
or
adc
inc
cmp
mov
movsb
xor
push
idivb
in
bound
cld
jmp
movl
pushl
movb
pushf
call
xorl
cmp
xor
cmp
xor
pushl
xor
jmp
movl
pushf
pusha
lea
jmp
xor
cmp
cmc
xor
stc
xor
stc
call
ret
clc
dec
loopne
sub
cmp
jo
pushl
jle
fldcw
fldenv
xchg
dec
mov
addb
add
jp
pop
add
xchg
lock
andl
xchg
cmp
lock
lcall
mov
sub
insl
call
xor
stos
inc
je
rorl
int
mov
dec
push
xor
repnz
jl
sbb
mov
shl
aaa
ret
pop
aam
les
jno
mov
loope
xchg
and
int3
sub
jae
add
outsl
dec
lods
inc
outsb
xchg
mov
dec
sub
sbb
ss
cmp
aam
mov
mov
js
ja
pop
pop
mov
in
ss
cmp
dec
mov
cmp
xlat
enter
mov
stos
add
sub
cltd
sti
mov
cmp
xchg
outsb
mov
lods
int
rol
mov
add
xchg
xorb
pushf
jb
xlat
cmc
scas
ja
jmp
aas
cwtl
cmpb
sbb
cltd
dec
arpl
and
filds
or
roll
ret
out
sbb
mov
jle
jmp
xor
mov
add
mov
je
je
cli
xchg
leave
and
xchg
mov
sbbb
enter
lods
dec
lret
dec
xorl
shrb
xor
cmp
inc
sbb
and
cmp
or
loop
movl
jmp
movb
lock
mov
stos
xor
add
or
sbb
in
cmp
inc
ret
xor
sahf
xchg
mov
ds
cmp
ret
mov
out
and
add
stc
xchg
inc
insb
dec
jp
aam
jne
xor
dec
out
mov
test
push
jne
outsl
addr16
std
pop
repz
add
lahf
jo
mov
inc
fsub
enter
shlb
adc
mov
test
mov
xorb
or
cmc
fisubs
add
sub
adc
mov
mov
mov
xor
mov
xchg
push
dec
inc
fcompl
sub
sbb
fdivrl
vaddsubps
cld
add
dec
add
adc
xchg
inc
leave
and
push
push
mov
rcl
mov
mov
imul
inc
aam
and
mov
pushf
or
sub
jmp
adc
pushf
iret
inc
scas
xor
xchg
inc
scas
inc
cmp
mov
push
call
push
cmpsl
xchg
mov
enter
cwtl
pop
jp
test
xor
jns
scas
ret
jp
call
aam
scas
pop
scas
inc
arpl
push
push
clc
dec
mov
mov
push
push
fildl
das
sbb
mulb
or
cmp
fs
je
lods
mov
jecxz
adc
orl
pop
fstl
add
jns
cmp
and
ja
mov
add
adc
or
fstpt
push
mov
xor
addr16
int3
mov
mov
dec
jp
jo
test
inc
xor
xorb
stc
pushf
and
std
xchg
dec
dec
fldt
cmpsl
call
jmp
sub
jns
aas
rorb
cwtl
cmp
jnp
xchg
cmp
movsl
dec
or
mov
mov
pop
xchg
in
inc
cmpsb
rolb
lcall
js
mov
int
lods
test
outsb
sbb
je
enter
mov
sbb
push
pop
outsl
push
shll
call
push
or
push
mov
call
pop
pusha
adc
and
out
je
sub
sbb
fistpl
jne
repnz
sbb
xor
add
dec
les
out
addr16
mov
xchg
sub
and
stc
dec
sti
pop
sahf
pop
fistl
add
push
mov
add
cmp
inc
rclb
sahf
and
and
sahf
dec
xchg
test
adcl
call
scas
nop
jne
lds
and
xchg
inc
mulb
inc
out
stos
outsl
sbbb
dec
and
jbe
ret
aas
mov
repz
cmp
pop
dec
mov
das
jg
jecxz
push
lcall
dec
jae
pushf
mov
push
jb
dec
pop
ja
sti
mov
roll
mov
nop
push
jmp
mov
cmp
mov
pop
cld
mov
push
mov
out
and
mov
push
inc
insb
dec
xchg
stos
xchg
jbe
ja
jns
mov
adc
cmc
cmp
das
xchg
dec
and
dec
cmp
add
pop
ficomps
cmp
sbb
add
xor
mov
ds
xchg
jb
mov
xor
sub
lods
push
movsb
dec
mov
or
ret
stos
lea
lea
add
mov
ficompl
or
movsb
dec
sub
lret
cmp
pushf
fisubs
sbb
cmp
nop
lods
sub
cmp
loop
aad
and
inc
and
sbb
shrl
cmpsl
push
inc
and
les
jle
push
and
fisubs
mov
jnp
mov
add
mov
mov
push
aam
mov
push
or
andb
dec
gs
loopne
push
jp
inc
push
imul
sub
out
mov
adc
fldl
int
add
jnp
adc
repz
push
push
and
jl
sub
sbb
mov
xlat
mov
push
pop
push
xchg
and
push
xchg
jle
sbb
xchg
and
lea
lahf
cmp
sub
movsb
or
cmpsb
jecxz
mov
divl
mov
xor
loope
push
mov
mov
adc
cmp
lock
mov
push
xchg
sub
js
pop
push
cmp
and
xchg
dec
or
pop
add
lods
sub
jmp
xchg
fadds
aas
mov
mov
sub
int
jecxz
in
inc
push
gs
xchg
shll
cli
add
sub
pop
mov
cld
jnp
mov
dec
cmp
dec
xchg
lds
ss
pop
in
mov
call
into
push
push
aad
and
xchg
lock
addr16
shl
mov
js
ja
in
dec
inc
test
inc
and
push
aad
mov
mov
pop
out
out
ljmp
pop
add
dec
ret
mov
jg
out
xor
inc
mov
dec
in
loop
push
leave
mov
cmpsb
cwtl
daa
dec
push
mov
sub
scas
bound
repnz
xchg
dec
test
pusha
dec
ss
int3
xchg
dec
push
cwtl
cltd
sbb
aas
and
test
jecxz
cmp
andl
adc
push
sahf
sbb
push
mov
fucomi
cwtl
cmpl
inc
loop
xchg
dec
frstor
popl
mov
outsb
movsb
push
mov
movsb
cwtl
and
icebp
hlt
push
call
std
xchg
mov
iret
stos
gs
repz
or
lret
mov
mov
stos
jb
idivb
out
imul
imul
aam
outsb
mov
pusha
mov
adc
push
fcomps
dec
mov
and
lahf
arpl
int3
jp
ret
mov
fstpt
test
jmp
daa
mov
cmp
daa
movsb
out
mov
fincstp
pop
jmp
int
and
add
fstpt
jp
sti
push
jb
imull
in
xlat
std
mov
push
or
and
mov
cmpsl
sarb
fisubl
or
or
fiadds
cmp
aam
les
cmovno
mov
aam
cmpsb
cmp
scas
xor
mov
inc
ja
mov
sbb
cmc
ja
sub
ss
adc
sbb
sub
js
sub
and
mov
lahf
mov
push
sbb
xchg
jle
mov
out
cltd
pop
jnp
test
dec
sbb
pop
pop
fsub
sub
icebp
mov
out
mov
shrl
cli
dec
es
cld
dec
push
scas
add
lds
repnz
cld
xchg
fstp
es
mov
add
add
jg
cmp
add
cmpsl
push
ret
mov
mov
mov
int3
push
add
jl
mov
ret
xor
jp
filds
jbe
shll
xor
scas
int
push
jmp
or
scas
fisttpl
stos
or
fwait
xor
loopne
sub
in
jb
mov
push
faddl
sbb
enter
or
xchg
or
push
mov
ds
and
lds
int3
lcall
inc
inc
inc
mov
cld
mov
in
int3
jge
push
pop
cmpsl
notl
stc
dec
mov
clc
adc
and
pusha
sub
and
and
jne
mov
adc
je
sub
push
push
stos
scas
in
lock
inc
ljmp
rol
mov
dec
jp
orl
daa
dec
leave
aam
jne
push
add
xor
sti
into
mov
mov
idivb
loope
mov
pop
aaa
push
clc
test
xor
pusha
xor
cmp
xorl
cmc
movb
xor
mov
xor
pushf
test
xor
jmp
push
xor
stc
test
xor
stc
mov
xor
push
xor
bt
call
xchg
push
aad
addb
sub
adc
add
add
push
and
mov
rcrl
scas
sar
jno
or
sbb
dec
icebp
inc
ss
mov
gs
mov
iret
mov
mov
mov
std
sub
cmpsl
repz
in
sbbl
lods
push
aam
gs
andb
adc
aad
dec
add
mov
inc
in
xchg
std
or
pop
adc
sub
dec
sub
pusha
sub
rclb
and
rol
inc
and
imul
and
lea
jmp
movl
jno
pusha
pushf
push
movl
pushf
mov
lea
jmp
pushf
popl
push
xor
bt
xor
pushf
xor
cmc
bt
xorl
call
xor
call
call
pusha
pushf
popl
pusha
xor
bt
xor
jmp
call
pushf
movl
jmp
xor
pushf
clc
xorl
test
xor
call
push
pushf
push
call
push
push
pusha
movl
pusha
push
mov
lea
jmp
pop
jns
pop
mov
cld
ds
mov
pop
movsb
notl
incl
out
dec
jecxz
dec
cmc
inc
enter
outsl
das
mov
out
arpl
cli
cmp
js
aam
and
outsb
imul
fstpl
imul
lret
xor
les
push
jae
mov
cmpsb
loope
xchg
xchg
mov
loop
rcrb
bound
push
fisubrl
mov
idivb
loop
pop
dec
pusha
jmp
jp
or
cmp
pop
rcll
sub
and
clc
jecxz
inc
sti
out
out
test
push
add
cmpsb
popf
cli
ja
rcrb
and
xor
enter
test
jbe
push
jge
clc
jno
xor
sub
pop
adc
lcall
sti
jno
enter
pop
enter
sub
jbe
xorl
aas
jmp
jecxz
iret
js
jns
icebp
sub
mov
xor
inc
popa
cli
stc
lds
aaa
gs
inc
in
test
sub
pop
lret
insl
mov
sub
test
cld
and
inc
cmc
out
xlat
xor
subl
mov
out
repnz
jg
cs
mov
outsb
sbb
cmpsl
adc
mov
out
add
mov
mov
das
ret
jb
and
int3
cmp
je
data16
je
inc
and
sti
xor
pusha
mov
rolb
ret
cs
test
mov
pusha
shll
icebp
mov
mov
mov
mov
lret
mov
sub
mov
in
lret
jecxz
adc
in
mov
sarb
jecxz
xlat
test
xchg
sarl
nop
sbb
gs
outsb
xchg
insb
outsl
and
sbb
fcmovnb
test
jle
xchg
jb
jp
or
jmp
inc
sub
daa
inc
cmc
int3
int3
movsb
sub
mov
pushf
pop
pop
xor
nop
lds
cltd
cmp
xor
pop
iret
jnp
add
jmp
lods
xlat
push
fwait
cmp
imull
xchg
andb
lret
mov
test
scas
loop
fdivrs
push
mov
lods
sahf
mov
dec
pushf
add
push
int3
xchg
sub
outsl
incb
dec
push
sub
dec
and
movsb
sub
push
mov
imul
push
incl
or
call
pusha
call
call
pop
pop
mov
inc
outsb
and
das
mov
stos
jo
fmulp
add
mov
push
shll
mov
mov
sbb
pop
movsl
cmp
movb
cltd
enter
stc
sbb
jg
sub
push
loop
repnz
xchg
andb
ret
popf
mov
rorb
jl
mov
mov
lods
dec
mov
push
movsb
sbb
ret
adc
sub
lds
xchg
sub
xchg
inc
int
sbb
push
mov
test
adc
int3
add
lret
jns
push
jg
stos
pop
scas
mov
nop
xlat
and
popf
fs
jne
ss
insl
je
jno
xlat
push
ja
adc
aad
cld
pop
xchg
frstor
jb
dec
dec
frstor
mov
dec
cltd
ljmp
xor
and
sbb
or
pop
push
jno
rorl
dec
add
pushf
mov
mov
dec
les
lcall
out
icebp
fwait
sti
cmp
mov
out
mov
mov
push
fucomi
pop
xchg
psllw
outsb
scas
inc
insb
add
adc
test
icebp
mov
sbb
mov
ja
push
inc
daa
sbb
cltd
dec
std
js
mov
pop
xchg
loop
loope
pop
pop
inc
xchg
pop
xor
cmp
imul
jb
mul
xor
cld
dec
out
ret
pop
fistpl
fimull
adc
jg
pop
mov
xchg
cmc
xor
out
mov
xor
lock
js
out
add
clc
prefetcht1
dec
out
xlat
pop
push
test
adc
sub
dec
xor
adc
or
cmova
fidivs
outsb
ljmp
es
movsl
gs
scas
fstpl
aaa
sub
jo
xchg
fldcw
cmc
pop
cmp
jmp
repz
push
fmuls
cmp
lcall
ret
clc
test
xor
dec
pop
into
push
in
mov
dec
in
jge
ret
addr16
dec
enter
repnz
sahf
lock
out
in
fisttpl
call
adc
xchg
jae
cmp
rcll
push
movsl
mov
xchg
mov
stos
enter
lock
adc
daa
into
adcb
idivl
dec
jne
loope
push
dec
push
inc
es
cmp
cmp
sbb
and
push
bound
je
and
loope
add
cmc
jmp
jo
xchg
lds
xor
xchg
cmp
rcll
lds
push
jle
movsb
sub
jg
dec
loopw
in
insl
test
add
popa
inc
cs
mov
outsl
mov
xchg
imul
js
push
sbb
pusha
dec
shlb
inc
ja
js
mov
jno
lods
std
cli
xchg
cli
rol
aad
mov
pop
aaa
adc
cmpsl
jl
add
fdivrl
dec
inc
jnp
cltd
xchg
std
and
dec
int
push
and
rorb
int3
mov
add
push
call
movl
pusha
pusha
pushf
movb
lea
jmp
jbe
aam
xchg
cmc
sbb
inc
stos
movsb
jnp
sub
mov
cli
cltd
adc
jno
test
sarl
mov
jmp
push
sub
cmp
push
loope
daa
inc
sbb
out
inc
push
rcrl
aad
pop
inc
xor
inc
stos
daa
dec
dec
je
out
push
mov
cli
xchg
iret
icebp
loope
push
popf
mov
clc
sbb
cmpsb
outsl
pop
mov
dec
aad
sbb
pop
bound
mov
loop
or
mov
shr
setne
pop
sbb
fs
xchg
int3
jmp
inc
stos
xchg
xchg
hlt
xor
push
mov
pmuludq
pop
rcll
fldenv
movsb
lock
lcall
inc
sub
mov
test
jle
mov
js
repz
jg
test
mov
xlat
pop
cmpsl
ss
mov
xchg
mov
fnstenv
push
sub
pusha
loopne
lds
fadd
jge
lahf
inc
enter
xor
mov
pop
or
scas
sbb
insb
bnd
dec
push
dec
lds
jl
sub
cltd
mov
stos
std
mov
pop
shll
push
sbb
pop
jp
jnp
mov
out
and
negl
sub
ss
dec
jne
adc
sub
xor
ja
lock
fistps
gs
jo
inc
or
mov
push
jno
mov
loopw
cs
push
loop
pop
xchg
clc
sub
aam
adc
xor
loope
mov
mov
xor
popa
pop
cmpsl
ja
jbe
jne
out
inc
les
mov
fcoml
inc
add
xchg
dec
insb
add
cmp
inc
mov
mov
jmp
rcll
or
int3
ret
stos
aad
leave
sub
adcb
ja
jae
dec
int3
push
lret
fs
push
loop
outsl
jl
stos
sbb
mov
mov
cmpsl
xor
repz
jb
pop
fldenv
mov
jo
loop
dec
xor
inc
nop
test
es
inc
shl
fidivrs
push
jp
push
into
loop
in
jo
jo
push
fsubrl
mov
pop
loopne
inc
xchg
lret
sub
xor
andb
ret
mov
sarl
mov
dec
roll
cmp
stos
cltd
jl
jge
jg
jmp
rorb
inc
lds
imul
mov
mov
add
sti
lcall
imul
insl
mov
test
nop
iret
jp
sbb
inc
mov
pop
lret
gs
outsl
add
arpl
adc
testb
call
mov
push
pop
mov
cmpsl
or
test
jnp
sub
call
jae
mov
cmpsb
addr16
push
pop
xchg
lods
vpmaddwd
je
sahf
push
or
fnstenv
mov
sbb
mov
scas
int3
popa
fistpl
insb
int3
ret
lods
enter
sbb
bnd
cmp
add
jp
sub
dec
addr16
and
scas
push
jmp
push
std
fstps
cltd
ljmp
arpl
idivl
fists
inc
cmp
mov
cmc
sbb
test
mov
cmc
icebp
sbb
mov
sub
rcll
dec
jne
adc
addb
mov
arpl
mov
pop
jge
std
and
adc
sti
fimull
xchg
cs
outsb
jmp
cmpl
mov
jg
push
js
sbb
pop
in
dec
stos
ljmp
data16
test
mov
pushf
sbb
cmc
pushf
or
sub
out
sub
iret
pop
lcall
js
outsb
pop
mov
dec
inc
jl
xchg
test
adc
pop
xchg
jmp
push
js
sbb
lds
mov
cmp
std
pop
jnp
jnp
push
scas
test
fcmovnu
jne
loope
xchg
inc
cmc
movsl
and
cld
lock
out
fcomps
xchg
xchg
mov
pushf
dec
mov
in
aam
jbe
mov
dec
aam
sti
sub
mov
lea
cld
subb
mov
fsubl
ret
bound
xchg
cltd
in
cmpsb
ds
nop
xor
and
test
dec
repnz
jl
mov
push
fsubs
mov
hlt
jg
gs
imul
pop
cmpsb
mov
and
loop
and
xchg
ljmp
mov
jns
jle
push
pop
pop
cltd
lcall
das
ret
repz
aam
fwait
mov
or
pop
iret
pop
gs
push
dec
enter
mov
fsubs
inc
mov
fisubs
idivb
cwtl
inc
fadds
jle
pop
shll
int3
jae
cmp
shll
fs
popf
sbb
loope
push
sbb
addr16
jb
rorl
adc
gs
mov
inc
mov
mov
mov
mov
fistpll
inc
fcmovb
stos
jle
fists
sbb
test
mov
movsl
jne
and
clc
pusha
jb
mov
push
sub
les
gs
jp
jnp
int3
call
lock
fimull
inc
cmc
pusha
mov
push
insb
cltd
stc
jg
jbe
xor
adc
push
fs
cli
ret
adc
sbb
mov
sahf
cmp
or
out
push
in
test
or
sbb
in
add
inc
mov
sub
hlt
repnz
int
xlat
bound
std
sub
cmp
fcomip
and
jecxz
scas
jg
mov
sbb
aad
dec
inc
xorl
xchg
sub
dec
jno
xchg
mov
popa
sbb
gs
jmp
out
loopne
dec
cmpsb
mov
icebp
ja
mov
and
sbb
sbb
mov
fmull
movsb
shlb
push
loopne
xor
adc
pop
shlb
loopne
loope
ss
jge
dec
sahf
pop
fldcw
xorb
sahf
jp
lods
push
out
dec
out
std
jge
push
jnp
enter
mov
in
jmp
cmpsb
scas
pop
pminub
xchg
ljmp
inc
ret
dec
xchg
sub
cltd
mov
push
or
cmp
repz
sbb
mov
jle
and
shlb
mov
push
in
lock
mov
adc
cltd
pusha
lret
pop
pop
sti
cltd
jnp
pop
leave
in
repnz
lds
inc
in
fnsave
lret
repnz
je
loopne
mov
gs
stos
mov
xchg
popa
je
cld
sbb
fcomi
out
sub
mov
cld
cmc
aaa
xor
adc
je
sbb
fadds
mov
mov
xchg
pushf
push
je
js
xchg
or
into
jb
jno
shrl
jg
sub
or
mov
pop
xchg
and
in
adc
cmpsb
and
cmp
mov
mov
xlat
xor
pop
mov
mov
xchg
inc
mov
push
lock
movsl
pushf
scas
mov
in
and
call
loopne
imul
add
outsl
fisttps
in
xchg
or
mov
andb
es
xor
push
jmp
adc
mov
dec
jne
inc
sub
lds
lcall
das
shll
rclb
sub
and
xor
idivb
rorb
std
mov
jo
mov
xor
stc
stc
xor
call
adc
out
mov
aaa
mov
xor
mov
pop
stos
and
pop
imulb
pop
aam
lock
scas
xchg
stos
xchg
xchg
repz
adc
cmp
adc
fstp
and
pushf
and
negl
sub
xchg
xor
into
loop
xor
or
dec
stos
xchg
cmp
xchg
adc
clc
cli
jno
lds
cli
aam
mov
sub
andb
stos
push
test
in
and
out
call
nop
aas
insb
mov
mov
mov
lret
aad
jae
outsb
popa
cwtl
frstor
hlt
adc
mov
or
mov
rol
dec
lods
into
lret
dec
in
sarb
movsl
pop
cmpsb
sub
dec
add
ret
xor
ljmp
jecxz
jmp
xchg
jae
xchg
ja
scas
icebp
xchg
sbb
and
mov
pop
into
pop
xor
fldcw
mov
xchg
xchg
add
mov
orb
sar
rcrb
adc
push
lea
push
cmp
insl
mov
fldenv
hlt
cld
jno,pn
mov
xorl
mov
sub
mov
pop
nop
iret
lds
filds
push
xchg
sub
mov
adc
inc
ljmp
es
sub
or
push
lods
imulb
nop
test
icebp
push
decl
pop
dec
pop
inc
push
push
lret
jl
sub
or
ja
lret
test
jno
xor
mov
push
in
lahf
dec
xor
scas
pop
scas
add
mov
loop
int3
enter
sub
and
insl
cli
inc
leave
mov
mov
addl
mov
xchg
mov
push
cs
mov
jle
rorl
cmp
ret
or
fdivrs
cmp
mov
out
add
adc
mov
movsb
clc
pop
enter
fidivs
push
xor
int3
dec
add
out
jp
sub
aaa
mov
dec
mov
mov
fxch
xadd
inc
in
ljmp
pop
cmc
xor
inc
je
decl
aam
loope
add
aad
mov
mov
pusha
xchg
and
test
scas
mov
ret
fnstsw
mov
push
lcall
sub
ret
push
xchg
cmp
stos
imul
sbb
adc
mov
mov
mov
enter
cs
mov
arpl
xchg
lcall
add
mov
pop
fwait
add
hlt
imul
das
negb
icebp
pop
popf
out
dec
pop
xchg
sub
andl
arpl
inc
out
icebp
outsl
push
aaa
push
sub
inc
jno
loopne
ss
loop
lds
enter
in
js
sub
test
and
inc
out
sbb
push
int
lret
mov
iret
in
cmp
inc
iret
repnz
sbb
jge
daa
or
pop
push
imul
jns
add
and
mov
pop
pop
scas
enter
sbb
fs
sbb
out
sbb
mov
cmp
nop
pusha
das
add
xchg
pusha
cmp
inc
outsb
xchg
or
xor
mov
scas
daa
adc
adc
jb
or
pop
jno
scas
stc
clc
xor
call
pushf
cmp
stc
xor
jmp
call
inc
sub
mov
inc
pop
mov
pop
add
lcall
fsubl
icebp
shrl
popa
xchg
subb
int
aad
jno
add
xchg
rcrb
ficoms
cli
fistl
movsb
mov
push
xchg
scas
pusha
sub
xlat
jl
repz
sub
jb
or
add
jns
pop
lret
push
sbbl
fcomps
arpl
aam
pop
inc
and
lret
mov
xchg
push
dec
fimuls
mov
insb
and
fcompl
inc
sub
hlt
mov
mov
sbb
je
fimuls
xor
push
lahf
aam
mov
cmpsl
insb
add
lcall
cmp
fimuls
or
cmc
jmp
movl
pusha
movw
movw
lea
jmp
movl
mov
movb
lea
jmp
bt
xor
cmp
xor
stc
xor
clc
xor
pusha
cmc
xor
pushl
pushf
xorl
call
pushf
xor
call
mov
jmp
call
pushl
popf
movb
movb
pushl
ret
xor
stc
xor
test
xorl
mov
xor
cmc
xor
stc
xor
mov
clc
xor
call
pusha
pushf
popl
mov
xor
test
xorl
pushf
call
pushl
popf
pushf
pushl
ret
pushl
call
jmp
pushf
push
movl
push
jmp
push
lea
jle
push
movl
push
movl
pusha
lea
jmp
fbld
sub
push
lret
stc
mov
imul
enter
lret
sub
jnp
push
mov
movsb
pop
fisubl
std
ds
lds
mov
add
int
add
and
stos
testl
in
repz
ds
pop
adc
mov
jnp
jnp
aad
ljmp
sub
leave
xchg
add
fwait
cmp
dec
xchg
dec
popf
iret
lahf
shl
pop
ret
out
outsl
xchg
int3
mov
movsl
xchg
and
sbb
xor
push
mov
pop
out
sarl
out
pop
stos
cmpsb
std
das
sbb
std
in
sub
fsubs
sub
sbb
xchg
jl
sbb
pop
repz
adc
out
lods
xor
movsb
testb
leave
cli
pop
out
in
imul
sbb
mov
mov
dec
mov
inc
mov
test
in
pop
mov
mov
out
movsl
dec
flds
inc
js
adc
or
add
cmp
inc
xchg
insl
aam
nop
jle
xchg
fisttps
pop
fmuls
shrb
adcl
imul
lods
add
cli
jae
sbb
inc
cmp
icebp
nopl
pop
arpl
mov
bound
inc
sub
popf
or
in
loop
xor
inc
xor
or
iret
lock
cs
xchg
adcb
xchg
movsb
nop
stc
jbe
cld
bound
ret
pop
xor
pushf
fldt
je
adc
mov
mov
aaa
pop
sub
dec
xor
gs
xor
loopne
or
stos
outsl
jmp
jno
adc
push
out
js
pop
mov
test
xor
lods
repz
cmpsb
add
mov
stc
sbb
fwait
sub
mov
jnp
iret
loop
xor
sub
adc
inc
imul
in
push
xchg
jmp
std
out
sub
inc
dec
pmulhw
mov
add
jb
gs
cwtl
scas
cmpsb
arpl
sbb
mov
ret
daa
in
fwait
je
push
add
scas
xor
push
in
in
mov
clc
push
or
jmp
cwtl
cmp
ret
in
mov
scas
xchg
fptan
hlt
mov
jmp
fistpl
mov
aam
dec
xchg
pop
or
aaa
mov
cli
jno
popw
inc
jp
mov
sub
push
jnp
ret
push
ret
push
add
push
hlt
lock
xchg
mov
sarl
and
jae
or
xchg
or
adc
mov
mov
jmp
stos
cmp
movsl
rorl
and
cmpsl
jns
mov
test
ror
push
nop
aad
mov
jecxz
mov
lock
in
in
mov
loopne
xchg
pop
and
rolb
xor
adc
xor
mov
jge
push
pop
ljmp
ret
push
fistps
xchg
pop
test
jmp
or
xor
iret
mov
xor
adc
lret
and
fidivl
mov
pop
stos
sub
outsb
out
mov
idivb
lret
stc
cmp
inc
cli
repnz
mov
add
leave
dec
addb
sbb
jmp
bound
frstor
add
pop
cltd
dec
cs
inc
lret
or
dec
mov
aad
pop
das
movsl
mov
inc
call
mov
cmp
aad
rcr
lods
cmp
repz
mov
cmp
sarl
in
mov
js
out
inc
cmc
adc
push
out
pop
in
adc
pushf
or
call
imul
or
fsts
dec
cld
xchg
and
xchg
aad
js
inc
int3
mov
scas
int3
fnstcw
ror
ss
pop
scas
adc
mov
and
push
push
movsl
aas
fcoms
and
mov
leave
or
inc
repz
sub
pop
in
aam
enter
rcll
insb
xchg
push
pop
cmp
fstpl
lods
cmp
cmp
lret
sbb
gs
mov
jmp
inc
sub
dec
dec
jge
mov
xchg
mov
mov
outsl
popf
jle
push
addr16
test
fstps
stos
loop
in
js
in
or
mov
insl
mov
lea
jl
test
mov
inc
mov
xlat
cs
jle
xor
mov
sbb
aaa
lret
cwtl
ds
inc
jmp
dec
xchg
push
and
icebp
jl
stos
push
jns
jmp
jnp
roll
lods
add
and
mov
xor
lods
dec
fimuls
fisttpl
ret
insb
loope
mov
jle
jno
out
jecxz
cmp
pushf
sbb
ss
xor
xor
cmp
xor
fcomip
mov
jns
dec
xlat
jge
xchg
subb
cmove
aaa
ret
gs
rcrl
ss
mov
neg
loope
out
cmp
push
les
lret
leave
push
movsl
loop
cltd
inc
aaa
sub
pop
repz
mov
mov
or
shlb
out
decl
xchg
mov
movsb
cmp
imul
rcrl
addb
ret
inc
loopne
adc
cltd
cwtl
enter
sbb
lret
movsl
ret
imul
push
aas
jg
outsb
jl
pop
aaa
cltd
cmp
mov
das
add
test
rcrb
pusha
or
cmp
mov
push
sub
jmp
idivb
les
mov
push
inc
xchg
pop
dec
adc
mov
fsubs
outsl
lret
lds
jnp
hlt
mov
and
je
xor
out
push
push
jno
sub
fstps
adc
in
xor
xorl
dec
or
xchg
fildl
mull
inc
stos
jns
mov
outsb
in
cmp
adc
pop
test
mov
lcall
iret
fsub
rolb
push
mov
call
mov
jnp
mov
mov
dec
lret
ds
out
mov
fcmovu
nop
lcall
mov
pop
sbb
cs
add
xchg
ds
ja
jns
cwtl
test
and
ret
pop
std
pop
push
push
fldenv
dec
mov
pop
push
ds
xchg
test
mov
das
push
sbb
ffree
lods
scas
cwtl
mov
mov
out
mov
movsl
mov
sbb
push
or
imul
cld
xor
cld
enter
jge
popa
nop
jg
mov
add
pop
int3
nop
aaa
scas
shlb
mov
lcall
push
push
pop
sub
and
cltd
pop
pop
sub
imul
cli
push
push
pop
mov
sbb
xor
push
sub
imul
mov
adc
xchg
fwait
sti
idivl
dec
sbb
sub
push
idivb
xlat
pop
adc
adcl
inc
outsl
xor
test
xor
inc
or
dec
jb
cs
push
mov
negb
mov
stos
pop
frstor
cld
daa
sbb
push
leave
inc
stc
mov
test
loopne
mov
xchg
and
pop
leave
sbb
sti
es
lret
enter
mov
cmp
xor
push
dec
subb
out
popf
out
mov
sarb
push
mov
in
lea
and
dec
jge
je
out
scas
into
ret
push
mov
movsl
jb
add
scas
xchg
or
mov
cmp
adc
shrl
push
negb
xorl
test
jmp
pushl
popf
push
pushf
pushl
ret
mov
test
adc
add
test
rcl
stos
inc
loop
sub
loop
scas
ljmp
inc
mov
xchg
cs
adc
mov
insl
adc
shll
or
adc
mov
push
std
mov
mov
int3
pop
cli
fwait
mov
mov
or
mov
mov
aad
adc
xor
mov
loope
mov
adc
mov
inc
fs
loop
scas
out
inc
rcrb
xchg
dec
lcall
fs
xchg
and
insl
fwait
mov
fisttps
pusha
cmp
mov
jno
lret
pop
call
dec
cs
push
test
leave
push
mov
pop
xchg
ljmp
jmp
cmp
lock
js
lahf
mov
sbb
cltd
popl
loope
pop
pop
test
or
adc
or
or
add
push
fs
and
inc
les
imul
xlat
mov
mov
sahf
sarl
inc
popf
dec
ja
ret
arpl
xor
pop
movsb
cmp
and
out
xlat
popa
sbb
sbbl
sbb
sbb
sub
jmp
jne
lret
dec
lcall
xlat
inc
push
cmpsb
dec
mov
sub
mov
and
mov
mov
jle
addl
stos
pushf
push
adc
push
pop
push
ss
mov
dec
mov
xor
pop
in
std
pop
xchg
out
inc
loop
pop
aaa
cli
mulb
aas
shlb
int3
sbb
scas
pushf
lcall
xlat
pushf
ret
andl
imul
mov
mov
negb
or
push
pusha
adc
in
fisttps
or
dec
aas
pop
jb
adc
scas
push
jl
loop
adc
std
ja
jl
fs
lods
cs
ror
popl
xor
mov
aam
cmp
je
mov
lahf
jnp
sbb
sub
jo
les
sbb
cmp
xlat
add
out
sub
xlat
jmp
frndint
and
xor
or
enter
data16
xchg
or
inc
dec
xor
shlb
nop
shlb
fsubrp
rcl
lahf
repz
add
sti
out
jmp
faddl
cmp
mov
int3
aaa
aam
xorl
push
bound
loope
add
adc
push
adc
dec
int3
add
sub
push
ret
jns
dec
cmpsl
mov
loopne
pop
jno
push
pusha
andl
std
sbb
ret
stos
xchg
jg
ficoml
push
xchg
adc
ss
stos
enter
or
data16
aas
pop
fistpl
sbb
popa
cli
add
push
cmpsb
movsl
aas
jmp
push
lcall
adc
aad
filds
xchg
lock
jae
jl
mov
mov
lods
repnz
lock
lock
test
jp
sub
sbb
negb
or
ret
dec
fsts
movsb
subl
testl
mov
stc
leave
rcrb
xchg
xor
mulb
popa
dec
outsl
push
mov
int3
inc
les
test
ret
jno
xor
mov
pop
mov
push
pop
in
loopne
ret
call
xchg
pop
es
leave
push
pushf
leave
pop
lss
cmpsb
pop
pop
loop
mov
inc
lret
or
cmp
in
loope
mov
push
iret
cmp
jne
cmp
jbe
xor
xchg
xchg
fwait
jge
cmp
pop
cmp
enter
aad
and
shlb
pop
in
mov
les
add
jnp
decb
lock
sbb
mov
add
mov
popl
imul
hlt
nop
sbb
dec
adc
in
mul
push
idivb
pop
fnstsw
dec
outsl
loopne
dec
cmpsb
fwait
sub
mov
xlat
fs
es
xor
sub
lret
jmp
mov
stc
flds
call
ret
jge
sub
in
into
mov
cmp
outsl
mov
or
call
lock
leave
mov
xor
leave
int3
cs
pushf
aas
movsb
das
jne
sar
sub
push
fidivrl
xchg
addr16
xor
mov
cmp
mov
pop
shlb
xor
rolb
fimuls
adc
jb
mov
cmp
cmp
inc
sti
iret
sub
xchg
dec
stos
cmp
lahf
notl
icebp
loopne
cmc
mov
jae
add
in
inc
xchg
jmp
outsl
pushf
sbbl
pop
push
push
rclb
sub
insl
mov
fdivrp
dec
andb
or
popa
jbe
pop
ja
xchg
test
dec
lret
push
scas
fmul
push
aam
mov
add
leave
setg
sub
or
lahf
lods
cld
shll
inc
test
addb
fistpll
shll
dec
pop
inc
sub
push
and
push
cwtl
inc
xor
jle
push
out
fcompl
mov
push
divb
inc
sbb
call
adc
insb
jp
movsb
enter
cmpb
mov
rolb
movsl
subb
test
inc
cmpsl
lods
fistpll
xchg
push
jmp
mov
xchg
mov
pop
shrl
adc
or
call
mov
sbb
xchg
sub
cmp
xchg
and
dec
gs
repz
mov
pop
mov
pusha
rorb
ret
xor
or
cs
add
mov
je
repz
add
mov
pop
stos
cmp
xchg
sbb
add
out
prefetch
or
insb
stos
sbb
mov
inc
sub
push
pop
xchg
popf
stos
rorl
inc
stos
xor
push
adc
sbb
jne
dec
lea
mov
pop
out
lods
add
and
lea
fcoml
dec
lcall
rcrl
fldl
dec
or
xor
rcrl
dec
xchg
push
xorl
xor
fs
mov
xchg
or
rol
adc
push
jne
fistpll
xchg
ret
jle
jns
imul
xlat
fsub
les
xor
xchg
pop
or
pop
daa
loope
mov
push
inc
outsl
pop
fistps
xor
jns
mov
dec
test
test
sahf
mov
mov
int3
push
push
mov
and
mov
add
jbe
cmp
jbe
mov
push
pop
cmp
fdivr
jmp
mov
jecxz
xchg
fsubs
and
mov
pop
add
fsubl
sbb
cli
sub
iret
pushf
push
pop
out
xchg
jae
jno
cmp
push
mov
lds
pop
mov
pop
cmpsb
hlt
mov
push
cmp
push
insb
push
or
ljmp
pop
outsl
out
fstl
pop
sbb
pushf
push
js
testb
mov
push
lret
aam
jo
outsb
das
pop
cwtl
jnp
mov
out
cmp
push
or
fidivrl
mov
dec
dec
sahf
sub
adc
jecxz
cmp
xor
add
stos
arpl
add
iret
repnz
cmpsb
pop
pop
and
xchg
push
fnstsw
mov
xor
and
xchg
inc
dec
std
mov
cld
mulb
incb
or
add
cmp
jno
mov
test
aam
sbb
enter
xor
iret
in
sub
xchg
cmp
pop
xchg
sub
cmpsl
inc
cmpl
mov
mov
and
insb
cltd
mov
mov
outsb
out
inc
imul
cmp
arpl
add
push
jae
add
sub
mov
je
push
dec
aaa
cmp
mov
jecxz
or
xor
xchg
arpl
ret
dec
mov
xlat
dec
xchg
leave
mov
jg
mov
ja
shr
cltd
stos
or
inc
fstpl
and
movsb
ja
xchg
adc
pop
sbb
sbb
jbe
stos
mov
cmp
fisubrl
mov
lods
repnz
xchg
dec
insl
fsubs
cmp
pop
jne
rep
xchg
movsl
sbb
jmp
leave
dec
mov
popf
fwait
ljmp
xor
push
hlt
sbb
sbb
or
ret
in
loopne
xor
gs
xor
inc
adc
repz
add
stc
loop
hlt
daa
lahf
sti
pop
vcvtps2dq
scas
adc
pop
add
sbb
outsb
aad
insb
push
lock
xchg
pop
add
test
adc
arpl
add
jnp
test
add
cli
ljmp
repz
fstpt
xchg
cli
cmp
into
push
mov
and
xchg
notb
jnp
shl
je
push
lea
out
xchg
mov
or
pop
ja
mov
inc
daa
movsb
xor
jno
mov
mov
and
daa
push
dec
mov
nop
ja
xlat
and
enter
lock
and
jg
int3
dec
mov
inc
pop
adc
mov
jl
mov
clc
fbstp
add
cltd
popf
into
fdivs
repnz
or
pop
int3
fmul
aas
call
repz
rclb
sarb
sti
jl
mov
lret
fsubrs
sbb
stos
mov
out
lahf
push
stc
dec
sbb
adc
in
enter
cmp
mov
mov
or
xchg
sbb
out
scas
out
stc
jb
mov
cmp
fisubrl
sub
sbb
mov
or
cmp
mov
pop
loopne
popa
or
inc
fwait
or
insb
pusha
jmp
xor
mov
pop
sub
iret
cmpsl
jne
or
mov
mov
cltd
push
fistps
or
dec
enter
pop
idivb
cmp
adc
movb
movl
pusha
movw
lea
jmp
aad
and
js
negb
inc
add
cmp
fstpt
jle
lods
inc
sbb
and
push
xor
in
andb
mov
lds
jl
movsb
repnz
jecxz
dec
repnz
xor
xchg
push
mov
ror
sbb
dec
cwtl
mov
mov
dec
and
cmp
or
addr16
mov
or
pop
test
jecxz
mov
sub
rcl
mov
fldln2
and
ljmp
xor
test
out
mov
fwait
es
imul
ja
sub
shrb
mov
hlt
xchg
loopne
sub
cmp
dec
dec
xchg
or
or
pop
loope
mov
sbb
cltd
mov
cmp
jecxz
or
roll
in
out
daa
mov
sbb
lods
cli
mov
sub
insl
sti
inc
jns
push
div
test
fs
jns
cmpsb
push
push
or
dec
mov
push
add
inc
jp
ret
loopne
outsb
data16
adc
mov
incb
pop
ret
dec
scas
lret
push
adc
mov
adc
mov
test
inc
lahf
push
jmp
lea
add
mov
out
call
mov
or
push
cli
and
movsl
lcall
adc
sub
negl
ss
pop
jo
popa
add
enter
mov
pushf
shlb
cwtl
push
pop
outsl
imul
sbb
mov
repnz
sbb
add
sbb
jne
jmp
scas
mov
out
or
adc
insl
pop
ret
pop
dec
popa
inc
and
and
pusha
cltd
mov
imul
leave
xchg
cmp
addr16
popf
mov
lods
cmc
jmp
xchg
out
ja
inc
fadds
out
mov
inc
popf
mov
lret
fadds
movsl
push
das
cs
daa
push
aad
sarb
adc
cwtl
adc
sub
inc
imul
lods
sub
push
int
cmp
adc
mov
sahf
pop
sub
pop
scas
push
push
lcall
or
or
fwait
push
add
cmp
mov
addr16
in
mov
test
movsl
out
sub
mov
cmpsl
js
cmc
stos
mov
or
iret
mov
fnstcw
dec
fnstsw
adc
pop
out
cld
add
outsl
sbb
mov
add
xchg
dec
nop
test
cmpb
ds
jmp
mov
lods
cmp
andl
sbb
dec
push
ret
mov
in
je
out
scas
pop
fs
mov
jle
les
aaa
mov
sbb
ja
adc
pusha
subl
xchg
les
jecxz
std
imul
mulb
pop
ret
lock
push
inc
cmp
mov
insb
andb
iret
xchg
xchg
pop
xchg
and
or
pop
add
cmc
in
push
sti
adc
mov
stos
daa
call
iret
lds
outsl
pop
pop
mov
cli
out
cld
push
adc
mov
cmpsl
hlt
lea
ret
loopne
push
mov
pop
push
and
and
inc
aas
xchg
movsl
repnz
pusha
aaa
rorb
mov
or
adc
mov
loope
inc
push
ffreep
outsb
or
fstpl
jge
enter
lods
inc
lock
lret
or
test
test
cmp
mov
bound
dec
repz
dec
js
aas
test
scas
es
xor
aas
ss
jmp
or
ss
inc
add
leave
mov
push
mov
repz
jecxz
mov
mov
dec
adc
insb
jge
mov
add
inc
jmp
jge
outsl
push
lret
jge
cltd
or
outsl
adc
jno
cmp
in
xchg
addl
jnp
shr
jb
ljmp
loope
cmpsl
rorl
mov
inc
mov
scas
jno
int
mov
xor
mov
test
or
xor
jns
adc
fcmovbe
jmp
aas
push
outsb
fisttps
cmp
imul
lods
pop
scas
mov
in
jle
inc
imul
fisubs
jle
insb
jmp
mov
mov
mov
ljmp
mov
or
into
push
std
stos
cmp
in
insb
xlat
test
dec
mov
dec
cmp
and
and
js
pop
loop
lret
mov
ret
xor
add
scas
cli
cmp
in
jp
adc
dec
lock
rolb
mov
mov
mov
dec
in
rolb
mov
and
aas
cld
imul
fidivrl
mov
mov
insl
sub
mov
pop
clc
cmp
add
daa
rorb
gs
roll
in
adc
jnp
rorb
add
push
fcmovne
xorb
cmp
add
pop
mov
sti
cli
jo
xchg
call
jb
outsb
in
loopew
xchg
xor
cmpsb
sub
xchg
enter
pop
pop
xor
mov
ret
or
das
ret
out
cld
push
out
test
add
fildl
mov
int3
pop
jmp
outsl
in
xor
mov
adc
dec
jge
je
popf
stos
xchg
sbb
mov
jbe
cwtl
xor
mov
hlt
pop
gs
pop
cmp
sar
mov
insb
pop
loopne
movsl
sub
imul
add
int
xor
push
jno
push
int
pop
incl
xor
jmp
jl
gs
pushl
mov
imul
sbb
jns
pop
leave
shll
ja
sahf
pop
mov
ss
sbb
aaa
dec
out
aaa
xchg
outsl
xor
or
fnstsw
dec
lret
test
xchg
ja
arpl
fprem
fldcw
das
or
stos
addr16
inc
int
mov
mov
inc
mov
fwait
sbb
pop
mov
add
jno
dec
sbb
popa
push
into
dec
mov
cli
dec
mov
popf
test
mov
stos
cmp
or
scas
xor
icebp
mov
add
mov
inc
push
jnp
dec
cmc
jnp
jmp
add
lret
sub
testb
xchg
jno
xchg
inc
adc
icebp
ret
xor
mov
mov
js
insl
scas
pop
xchg
xorb
lret
mov
cmp
cld
ds
mov
inc
rolb
and
ja
psubsb
and
into
push
push
mov
das
jecxz
inc
shlb
inc
frstor
lahf
push
jb
ljmp
mov
mov
inc
sub
mov
push
js
xchg
js
shll
in
sbb
fisttps
cwtl
daa
into
out
xchg
push
dec
pop
push
addb
pop
nop
les
leave
mov
mov
enter
pop
push
mov
push
mov
mov
das
rorb
imul
mov
incl
lock
int
test
xor
movsl
out
mov
add
out
adc
push
add
adc
flds
cld
mov
mov
sbb
jae
fs
push
push
cmp
into
aam
aaa
mov
and
xor
push
push
loope
scas
daa
insl
add
stos
cltd
jb
adc
std
push
xchg
jmp
or
mov
xchg
sbb
aad
xchg
mov
mov
call
inc
sub
jg
dec
enter
divl
pop
sbb
je
lock
lock
test
jmp
and
add
mov
jae
xchg
xlat
fisubrs
mov
mov
lods
dec
xchg
ja
push
pop
dec
leave
iret
mov
jae
scas
les
cs
loopne
pop
and
jbe
jmp
cmp
int
mov
xchg
xchg
fcoml
sub
leave
jnp
insl
out
push
std
xchg
push
dec
outsb
adc
xchg
scas
jmp
pop
push
jnp
ret
jle
pushf
fldz
mov
dec
std
lock
test
xchg
stc
mov
mov
hlt
xor
mov
push
mov
je
push
mov
inc
jnp
lret
inc
jl
sbb
clc
dec
inc
add
sub
dec
iret
outsl
or
xor
mov
sub
lret
sub
xor
dec
and
dec
mov
lcall
mov
pop
inc
call
xor
loop
sbbl
and
in
or
fiaddl
or
mov
popa
aam
loop
adc
imul
xor
add
fistps
sbb
or
mov
lods
mov
fldcw
push
xor
popa
push
psrad
lock
out
fildl
jbe,pt
mov
sbb
sub
scas
sub
jb
xor
inc
xchg
sub
popf
ret
xor
out
fnstcw
lcall
or
ret
roll
cmpsl
es
ret
xor
mov
and
cmp
jecxz
into
or
cmp
and
xor
lods
or
cltd
lcall
jle
mov
cmpsb
leave
in
in
pop
aas
mov
and
pop
and
push
sub
loopne
mov
jp
xchg
loop
sti
pop
lea
jbe
push
nop
jecxz
addb
sbb
loop
aad
add
dec
jg
loop
fs
sbb
pop
jno
jg
fsubl
mov
cmp
scas
in
pop
fidivl
mov
dec
push
pushf
xor
xor
push
fmull
call
adc
adc
push
or
pop
pusha
ja
jl
adc
mov
icebp
push
cwtl
sbb
jg
popa
sbb
sbb
or
mov
xor
jo
xchg
pop
mov
lods
lret
sbb
rorl
ljmp
cltd
dec
cmpsl
xchg
mov
ficomps
sub
dec
and
sahf
push
push
inc
dec
xor
sub
add
xor
arpl
jmp
or
inc
ja
adc
mov
test
cs
sub
adc
sbb
jmp
dec
scas
test
subb
aad
push
push
push
int3
adc
cmp
mov
pop
pop
in
les
cwtl
inc
pop
in
jge
jle
aam
rcll
shll
sub
sbb
shrb
mov
mov
lds
pop
xor
dec
test
js
cs
test
repnz
jl
pop
test
scas
stc
lea
pop
jmp
in
mov
mov
sub
push
lret
out
and
xor
cmp
inc
andb
ja
cli
push
jg
test
xchg
cs
sti
mov
sbb
inc
push
data16
pop
push
fimuls
and
sub
fdivr
and
jae
inc
or
imul
pop
sbbb
inc
shrl
sti
and
pop
mov
fsubr
mov
mov
mov
aas
jno
idivb
popa
mov
or
xchg
mov
fld
ret
mov
aad
pop
pusha
push
dec
addl
es
xorb
cmp
repz
lret
and
mov
shlb
sub
push
dec
in
mov
pusha
movsl
xor
inc
arpl
sub
mov
push
push
arpl
add
add
mov
gs
dec
xchg
xchg
adc
pop
test
mov
mov
mov
push
iret
mov
add
push
orl
das
mov
push
sti
fwait
ror
imul
decl
repnz
cmp
call
push
push
add
mov
repnz
pop
pop
cmc
cmp
loopne
gs
std
test
mov
and
and
int3
mov
xchg
roll
cltd
scas
mov
and
adc
cmpsl
and
test
testb
dec
lods
sbb
xchg
adc
pop
pop
mov
stos
pop
adc
sub
sahf
mov
pop
imulb
lret
push
inc
repnz
and
cmp
ret
lds
jmp
aas
imulb
adc
insl
mov
nop
mov
scas
adc
add
addr16
cmp
call
or
push
mov
and
mov
rcr
pop
sub
fwait
jl
mov
ret
mov
orl
jbe
aam
and
loopne
jnp
xchg
adc
gs
pop
xchg
sarl
sub
ljmp
ja
push
aaa
xor
mov
jbe
sbb
outsb
lcall
lds
sbb
into
and
fists
clc
adc
sti
test
mov
mov
adcl
sub
xchg
aad
stos
popa
and
pop
jecxz
loop
xchg
roll
clc
push
aam
movsb
cs
inc
pop
pusha
or
push
mov
pop
push
imul
cld
inc
ficomps
xor
xchg
jle
cmc
sbb
jmp
cmpl
aam
push
sbb
push
mov
mov
jg
cmp
loop
rolb
insb
xchg
call
cli
mov
out
or
aaa
push
nop
xchg
andps
gs
je,pn
jge
push
mov
add
iret
idiv
jb
adc
pop
inc
jl
mov
out
clc
fnstcw
out
pop
and
dec
scas
sbb
pop
inc
in
push
mov
lret
cmpsb
xor
pop
out
push
inc
lock
xor
data16
sarl
in
mov
arpl
lock
mov
fs
decl
sbb
dec
adc
faddl
lods
clc
adc
nop
mov
arpl
add
std
push
xchg
repz
pop
xor
cwtl
add
aas
lods
push
lcall
or
add
pop
pop
mov
insb
clc
mov
dec
push
xrelease
lret
mov
outsb
mov
mov
jge
sbb
pop
iret
jne
outsb
repnz
adc
lcall
mov
lock
push
inc
in
cmp
inc
cmpsb
fnstenv
sahf
xor
dec
adc
into
les
push
jnp
jmp
pop
insb
std
push
adc
popf
push
jle
mov
sbb
mov
arpl
xor
mov
stc
fdivr
add
test
and
cmp
fstl
out
movsb
in
push
pushf
mov
pop
notl
clc
jp
sbb
pop
cmpsb
pop
adcl
push
lret
xchg
std
pop
cltd
adcb
insl
jb
cmp
mov
jp
or
xchg
and
fdivp
push
and
pop
sub
mov
push
out
sub
dec
xchg
and
xchg
sar
jmp
mov
out
movsb
mov
aam
xchg
popf
sbb
sub
dec
loopne
jle
pop
lcall
mov
je
adc
aaa
into
push
fcoms
enter
push
stc
push
rclb
cmp
adc
push
xchg
pusha
sbb
pop
aaa
mov
dec
imul
pop
jmp
loopne
or
fcmovne
ljmp
pop
xchg
insb
adc
repz
testl
loop
mov
mov
das
mov
dec
add
imul
or
sub
jg
jmp
mull
arpl
iret
mov
std
out
les
hlt
outsl
or
in
arpl
jg
int3
inc
repz
je
xorl
fwait
add
xor
ds
insb
lds
xor
cmpl
dec
dec
repnz
sets
jae
cmc
pop
cltd
aas
mov
lcall
fisttps
mov
mov
scas
shlb
sbb
fwait
push
sbb
dec
xor
subb
mov
xor
adc
fbstp
idivl
adc
adc
sbb
outsl
push
mov
dec
fildl
in
sbb
cmp
popf
push
xchg
dec
inc
xchg
movsb
mov
sbb
jns
pop
aas
adc
lcall
push
test
inc
push
xchg
ret
loope
jle
rclb
xor
out
in
ljmp
xchg
cmp
or
cwtl
es
and
call
lea
aam
ja
leave
inc
mov
add
and
cmp
mov
mov
aaa
repnz
sub
icebp
insb
mov
jo
loop
lods
fmull
xchg
adc
in
mov
pop
mov
pop
jae
lock
pop
xchg
std
pop
push
pop
push
andl
addr16
mov
inc
pop
jae
add
aaa
mov
sti
sub
scas
push
test
sahf
add
jle
pop
iret
popl
push
fnstsw
sahf
cs
jo
pop
fdivr
stc
mov
cmpb
stos
loopne
es
test
jo
int3
movl
lret
addr16
push
push
jns
jbe
pop
xor
cmp
imul
jne
lret
push
add
sub
imul
pop
aas
mov
daa
xor
and
lahf
in
sahf
lcall
inc
shll
mov
sub
or
add
rcll
inc
jle
cmp
push
and
cs
sbb
sbb
lds
loopne
mov
adc
and
stos
sti
cmp
pmovmskb
adc
bound
decb
xor
movsb
ljmp
xor
push
lcall
es
inc
add
cmp
rorb
xchg
adc
adc
mov
add
or
xlat
jbe
sbb
dec
mov
push
int
jecxz
mov
xor
cwtl
mov
inc
xchg
popf
xor
push
jl
cmp
inc
aam
and
mull
stc
xchg
sbb
jo
orb
sbb
out
add
test
add
pop
popaw
and
add
and
cmp
inc
out
fldl
or
call
mov
pushf
jge
mov
sbb
ds
and
idivl
cltd
insb
cmp
in
mov
idivb
and
popa
in
mov
add
loope
xor
sub
insb
mov
mov
lret
addr16
dec
xchg
pushf
arpl
sub
scas
sahf
lret
ret
bound
insb
mov
dec
repz
mov
popa
add
cmc
mov
sbb
push
add
adc
add
mov
repnz
cmp
dec
data16
jae
repnz
sub
mov
in
cwtl
sarb
int3
xor
adc
jl
mov
sub
iret
dec
adc
ljmp
aas
inc
jno
adc
or
mov
push
push
mov
rcrb
lods
xor
mov
add
add
dec
pop
jge
mov
int
and
out
imul
lcall
mov
jle
cmp
jae
sbb
movsb
popf
loop
out
mov
dec
sar
dec
inc
mov
xor
negl
pop
popf
cli
cmp
les
insl
ficomps
ljmp
jne
mov
sahf
sbb
push
jge
dec
bswap
out
test
rcll
fwait
push
leave
fidivrs
push
mov
mov
sti
xchg
sbb
and
pop
cltd
test
cmp
cwtl
jno
mov
in
ret
mov
popf
jb
cmp
mov
outsl
int3
sub
js
inc
iret
stos
cmp
xor
mov
xchg
sbb
xchg
rcll
loopne
jae
xchg
xor
mov
and
insb
dec
in
imul
int3
mov
scas
xchg
or
jecxz
dec
pusha
pop
fwait
inc
subl
ss
sbb
xor
push
mov
and
testb
add
push
ret
push
mov
sub
orl
sub
cmp
and
cwtl
dec
mov
mov
jecxz
pop
les
mov
jp
mov
repz
cmp
stos
sbb
add
icebp
cmp
sub
pusha
aaa
popf
dec
push
jne
adcb
adc
aam
repz
dec
ds
adc
mov
std
and
gs
mov
pusha
adc
ljmp
arpl
add
in
notl
pop
stos
pop
or
pop
pop
mov
cmp
aad
inc
ret
rorl
mov
push
or
mov
jle
fldenv
push
imul
xor
inc
fadd
scas
data16
inc
leave
jmp
imul
or
daa
mov
mov
dec
xlat
fninit
das
cmp
cld
mov
ljmp
scas
sbb
ret
dec
adcb
mov
push
lcall
add
rcrl
push
mov
push
outsl
cmc
sub
sbb
clc
rcll
pop
xor
dec
test
xor
pop
xchg
test
and
jle
cmp
fisttpll
mov
sbb
hlt
fistl
sbb
neg
int3
sub
ret
add
cmp
cmp
mov
pop
mov
les
fistps
lret
sub
rcrl
cmpsl
push
lods
clc
icebp
fisubl
add
cwtl
add
lahf
jnp
pushf
and
clc
fisttpl
cmp
push
shll
notl
dec
les
xchg
sarl
push
test
cmp
push
rol
dec
loope
jno
shll
and
cmpb
push
add
jle
stos
cmp
mov
sub
inc
std
push
mov
jo
daa
sbb
add
pop
in
push
into
lret
les
dec
lea
adc
push
daa
or
or
rol
scas
test
fisubrl
add
in
call
fstpl
jnp
dec
mov
insl
xor
and
or
dec
test
jmp
cmp
les
push
xchg
fidivs
cs
mov
popa
mov
aad
bswap
mov
mov
mov
mov
jmp
adc
xor
dec
inc
mov
lods
cmp
inc
loop
mov
rdpmc
or
out
out
inc
std
popa
std
aas
insl
lcall
dec
sti
add
inc
inc
mov
mov
jge
call
lock
aam
sub
ret
loopne
mov
inc
pop
loop
jge
mull
fldenv
loop
stos
xlat
add
mov
insl
inc
xchg
pop
jg
sti
cwtl
je
inc
add
into
push
xchg
lcall
aam
xchg
stos
outsl
cmp
roll
xor
ds
fldenv
jno
lds
pop
dec
sbb
dec
jl
jae
pushf
push
and
dec
sub
out
leave
mov
cld
inc
mov
jecxz
out
fcompl
aam
xor
xchg
jnp
xlat
insl
movsl
push
fildll
and
imul
ret
dec
lret
pop
andb
add
std
shll
push
sub
xor
ficoms
dec
dec
and
dec
mov
jne
adc
jge
je
fists
sti
test
sub
cmpsl
jge
ljmp
outsb
jmp
cmc
pop
sbb
jae
sbb
fcomps
out
outsl
jecxz
loope
adc
repnz
or
xchg
adc
data16
push
jp
loopne
imul
mov
adc
and
jns
pop
xor
xor
pop
mov
outsb
jg
js
add
mov
outsl
adc
ficoml
adc
sub
and
jae
and
ret
pushf
lock
imulb
out
out
lock
cmp
mov
ret
dec
test
addl
mov
das
lods
mov
and
pop
std
lds
push
mov
add
fists
and
xchg
inc
pop
pop
push
inc
in
xor
mov
in
in
and
das
mov
add
or
adc
leave
pop
pop
push
jecxz
pop
adc
add
adc
nop
adc
notb
sbb
imul
cmp
inc
adc
add
out
adc
daa
jo
adc
xchg
fstl
cmpsl
out
ljmp
pusha
fwait
jnp
push
inc
mov
push
ficoml
adc
mov
adc
in
ret
test
xchg
aas
xor
roll
inc
sbbl
in
pop
in
add
mov
fsts
push
sti
push
sub
mov
incl
push
out
pop
inc
fmull
sbb
stos
sbbl
outsb
mov
and
filds
dec
lods
in
or
pop
rcl
cli
inc
loope
popf
and
mov
icebp
in
xchg
sbb
nop
jle
jp
adc
lret
mov
jnp
or
jmp
sub
leave
jb
stos
pop
fists
fsts
stc
mulb
cld
jns
inc
and
add
add
inc
pop
or
push
loopne
out
ficoms
fsubs
add
ljmp
pop
mov
mov
or
addr16
jns
mov
xor
clc
inc
fildll
cmp
xchg
mov
dec
pop
inc
xchg
orb
nop
xor
popa
push
pop
sbb
mov
push
test
insl
dec
orl
stos
stos
sbb
sub
pop
lods
dec
rclb
mov
inc
into
mov
pop
xlat
xor
jg
out
mov
loope
xchg
cltd
jae
adc
mov
mov
ds
push
aaa
mov
lcall
mov
fdivrs
faddl
push
mov
sbb
mov
cmc
jmp
mov
lret
push
pop
inc
lret
repnz
inc
pop
xor
dec
popf
xchg
notb
xchg
int
jg
addr16
add
or
pop
push
mov
iret
scas
jle
out
xchg
mov
push
mov
ficoml
addr16
jb
cwtl
sbb
xor
cltd
fs
idivb
sbb
push
jl
jbe
in
mov
daa
jne
pop
insb
mov
nop
push
je
cmp
out
jo
adc
xor
xor
sub
aam
imul
andb
stos
jmp
mov
fidivl
mov
lock
xor
and
mov
mov
fisubl
cwtl
lds
sbb
xor
rorb
mov
scas
and
jg
loope
cwtl
adc
push
cmp
shrb
adc
lret
mov
rcl
mov
mov
in
pop
push
cmp
das
xchg
sub
pop
mov
push
xchg
or
and
scas
cmp
in
jns
in
cltd
pop
shrl
stos
xor
les
dec
addr16
cld
jne
pop
mov
inc
outsl
pop
pop
jge
shll
sbb
dec
xchg
push
jns
mov
mov
push
fbld
lods
cmp
xor
and
jbe
movsl
cmp
aaa
enter
popa
gs
sub
push
sbb
jmp
xchg
or
loop
stos
xlat
push
test
cmpsl
shl
in
shlb
test
pop
lock
mov
inc
subb
fbstp
mov
movsl
rcr
iret
push
dec
loop
fstp
insb
sbb
js
push
in
pop
fsubr
xchg
mov
xor
push
xor
call
add
repz
fstpl
inc
push
mov
xchg
jle
pop
jbe
dec
sbb
lcall
push
pop
jecxz
test
test
or
in
test
jecxz
add
adc
add
or
idivb
sbb
sbb
jmp
xor
stc
xor
call
push
movl
call
jmp
pushf
movb
lea
jl
push
pushf
pushf
push
pushf
lea
jmp
jmp
imul
stos
icebp
mov
or
push
test
pop
cmpsl
ljmp
push
mov
mov
add
sbb
ficoms
fcomps
pusha
cmp
das
stos
jl
outsb
sbb
lds
jo
scas
pop
fistl
enter
bound
cmp
in
int
sub
pop
mov
jg
add
mov
les
jmp
in
fs
or
pop
movd
push
rorl
fwait
mov
lods
dec
stc
pop
pop
sub
push
jno
or
mov
test
mov
cmp
xor
or
dec
push
mov
push
imul
arpl
lcall
dec
jo
popf
or
and
hlt
lock
mov
test
xchg
shlb
lock
fwait
push
dec
mov
fcmovnbe
rcrl
sbb
xchg
stos
insl
in
call
sbb
and
imul
dec
popa
sarl
add
mov
gs
lret
dec
mov
mov
jg
jl
fsubrl
xchg
sbb
scas
out
adcl
sti
out
rclb
mov
xor
fcomps
pushf
mov
shlb
mov
xchg
sbb
jnp
out
int3
dec
std
xor
sbb
nop
cmp
lds
test
mulb
stc
xchg
lods
mov
mov
pop
stos
mov
sub
cwtl
imul
mov
insl
jnp
and
lret
jns
insl
or
jmp
inc
cmp
inc
dec
mov
shll
lahf
jno
or
mov
push
into
idivb
adc
bound
test
in
jo
dec
adc
or
xchg
fsubs
mov
sti
sub
or
jmp
push
push
sti
inc
dec
mov
cmpsb
xor
jo
xor
xor
hlt
sub
lods
push
int
fcoms
adc
test
scas
sbb
add
mov
orb
aaa
xor
adc
add
aad
push
mov
mov
add
push
mov
or
push
mov
mov
adcb
sbb
fildll
pop
and
sbb
adc
push
lods
cmp
es
push
lock
dec
mov
rol
fbld
les
cmpsl
and
arpl
mov
xlat
xchg
out
cmp
in
cltd
adc
ret
jae
cltd
cmp
or
jmp
add
roll
pop
movsb
scas
jnp
loopne
cmp
jecxz
mov
pushl
pushf
inc
stc
inc
xor
leave
inc
scas
out
in
fs
cmc
rolb
ficoms
fidivrl
movsb
push
push
jb
dec
push
inc
sbbl
shlb
cmp
js
cmp
test
lock
mov
jle
add
cmp
pop
mov
pop
cltd
fbstp
loop
mov
sbb
aas
loop
enter
fsub
shl
loope,pn
enter
sub
jl
hlt
ds
pop
adc
mov
push
cltd
pop
inc
push
or
loopne
sub
push
mov
xchg
fisubrl
jne
out
fcomps
sub
outsb
pop
fwait
dec
push
popf
aam
nop
outsb
and
addr16
inc
mov
mov
mov
popf
test
shlb
mov
xor
add
xchg
mov
insb
pop
push
test
cmc
cmp
inc
sub
push
mov
lods
daa
add
daa
push
dec
sbb
sub
cmp
xor
loop
pop
xchg
orb
jmp
inc
dec
mov
idivl
mov
mov
pop
sub
cmp
cbtw
popl
into
pusha
xor
bt
xorl
jmp
push
cmp
sub
fiadds
fidivs
or
push
push
test
jns
imul
mov
mov
leave
aas
xorl
outsl
test
faddl
pop
std
movsb
lods
nop
outsb
mov
mov
cmp
inc
enter
out
push
sub
sbbl
js
add
in
sbb
cmpsl
aas
scas
outsl
sahf
stos
cmpsb
pop
cmpsl
mov
js
cmp
cltd
mov
push
out
adc
pop
dec
and
leave
and
div
mov
pop
xchg
or
jmp
popa
sbb
ljmp
sbb
or
lods
cmp
mov
incb
pop
popa
notb
je
mov
jno
push
enter
adc
jns
inc
mov
testl
sub
pop
inc
jo
test
jbe
aaa
sub
push
or
pop
mov
or
lret
lahf
jle
mov
add
inc
inc
andnps
enter
shll
xchg
cli
cmp
or
lds
daa
lea
sbbb
cmp
das
push
xchg
pop
mov
test
cmp
hlt
jo
hlt
mov
xor
ja
aas
xchg
dec
sub
ja
jl
dec
lods
bnd
test
imul
fisubrl
dec
in
or
mov
gs
call
out
loope
rorb
jae
adc
fadds
nop
pop
cmp
jne
fwait
pop
hlt
sbb
push
mov
test
mov
pusha
inc
movb
add
or
cmp
push
add
push
jbe
pop
cmp
mov
outsb
add
lahf
dec
les
push
sti
xorb
inc
in
inc
xchg
sar
sbb
faddl
in
mov
xchg
test
scas
nop
adc
ss
xchg
xlat
mov
aas
mov
push
aas
mov
mov
inc
cmp
stos
cmp
xor
addr16
push
lods
inc
mulb
jae
cld
jecxz
lret
mul
js
xchg
fdivl
jecxz
and
and
push
imul
push
inc
push
cmp
jo
pop
js
sbb
adcl
xchg
push
push
mov
mov
js
mov
adc
cltd
cmp
add
inc
shl
rol
inc
inc
mov
pop
xor
pusha
dec
cmp
sbb
fmul
pusha
lea
lods
icebp
sub
xchg
es
inc
rorl
jg
mov
pop
and
mov
add
in
adc
aam
std
push
jnp
lahf
ljmp
out
adcb
pushf
jbe
idivb
adc
fwait
mov
dec
outsl
arpl
insl
enter
or
repnz
das
sahf
dec
cli
pop
xor
hlt
into
mul
or
or
loope
out
ja
or
xor
pop
ror
lock
ja
cld
inc
mov
nop
jns
cld
push
shl
fwait
adc
dec
fnsave
and
cmp
outsl
xchg
test
mov
adc
add
or
add
lods
int3
stos
sbb
aaa
test
cltd
sbb
xor
rolb
push
cli
les
jnp
test
cmc
daa
mov
lock
call
sub
cmp
mov
cmp
jmp
imul
das
or
sub
mov
icebp
push
jp
pop
push
jmp
loop
test
int3
js
and
lea
ret
ret
fdiv
testb
mul
shll
sarb
test
pop
sti
fndisi(8087
sbb
je,pn
and
nop
inc
stos
cmp
pop
notb
xor
out
add
mov
jp
ret
inc
add
pop
loop
mov
idivb
adc
aad
pusha
movl
jmp
adc
daa
mov
loop
dec
mov
scas
xchg
mov
pop
inc
test
movsb
das
dec
insl
or
sub
jg
mov
shrl
mov
cmp
out
xor
repz
mov
sub
call
addr16
movsb
dec
jb
loop
push
icebp
test
pop
insl
jnp
xchg
jb
xor
push
mov
cld
push
setns
xchg
xchg
mov
jo
iret
clc
fists
jae
sahf
mov
jmp
inc
xchg
int3
jmp
lods
lods
sbb
dec
sub
cmpsb
les
fstl
hlt
push
loop
orb
inc
pop
add
pop
repnz
nop
enter
push
xchg
sbb
pop
or
and
in
scas
or
loop
mov
lahf
out
mov
and
mov
jns
jno
rol
xlat
daa
out
xchg
aas
and
mov
out
out
mov
daa
test
xorl
aad
jmp
testb
jo
sbb
outsl
mov
ret
and
rorb
outsb
jle
mov
cltd
dec
aas
in
jnp
les
cmp
incb
push
push
pop
mov
or
cwtl
popf
pop
loop
or
in
ds
jge
and
addr16
mov
cmp
xchg
pop
or
iret
jbe
and
pop
inc
aas
out
inc
iret
mov
sbb
and
push
arpl
arpl
call
inc
mov
int
dec
ljmp
push
daa
loop
inc
test
dec
xor
xchg
mov
mov
pop
cs
mov
sbb
test
and
mov
test
jbe
mov
cwtl
in
sbb
ja
sub
dec
in
rclb
mov
jo
sub
je
xchg
inc
pop
or
adcl
jae
sti
inc
jge
dec
jmp
pop
sub
aas
dec
jl
mov
pop
aam
int3
pop
lods
sub
mov
lods
in
insl
lret
and
inc
jmp
mov
xchg
push
in
or
xchg
sbb
cmp
xchg
inc
mov
sub
fsts
cmp
dec
xor
mov
jo
jne
mov
dec
int3
test
loope
pop
or
cli
pop
add
jne
mov
adc
cmp
shl
sbb
mov
sbbb
imul
insb
mov
clc
cmp
mov
lock
jg
jb
dec
jb
sub
and
jle
xor
pop
cwtl
xchg
add
push
and
ret
or
fldcw
negl
mov
rcll
inc
push
cmp
daa
add
lods
xchg
ja
ficoml
jno
mov
add
lret
loopne
mov
xor
inc
push
sbbb
push
jmp
mov
mov
test
fwait
push
inc
out
jae
dec
outsl
stos
loope
sbb
sub
divb
clc
lcall
inc
push
lret
aam
cmc
mov
mov
xlat
add
mov
cs
xor
insb
pop
push
dec
mov
dec
ja
add
ret
pop
push
push
test
test
cmpsl
jne
pop
hlt
js
pusha
les
pop
out
movsl
iret
mov
push
test
fisubs
mov
inc
stc
in
in
mov
iret
dec
enter
sub
fnstcw
or
jns
mov
dec
sub
mov
test
mov
out
das
adc
rcrl
pushf
lcall
xchg
mov
das
or
push
fdivrl
iret
and
es
mov
out
or
mov
inc
inc
out
cmp
dec
out
rclb
rcrl
dec
push
loope
out
add
mov
leave
dec
sub
aad
dec
icebp
mov
sub
xor
inc
sbb
std
mov
fwait
xchg
sbb
stos
and
adc
sbb
loop
bnd
cmp
xchg
push
out
mov
popa
adc
sub
int3
lahf
cli
mov
dec
lret
dec
sahf
xor
clc
xchg
push
lahf
jg
xlat
jns
repz
jne
pop
jns
fcoms
jmp
xchg
ficomps
pusha
mov
push
arpl
xchg
jp
push
jp
push
mov
popf
flds
cmp
loope
pop
leave
add
add
pop
push
shrb
jnp
scas
movsb
push
jle
int3
inc
and
cmc
inc
or
mov
mov
aaa
inc
push
ret
push
mov
dec
sub
jnp
mov
adc
mov
pop
mov
pop
dec
test
inc
inc
inc
scas
mov
repnz
push
pop
sub
rcl
sbb
popl
shl
into
add
arpl
cmpsb
dec
pop
gs
add
pop
cmp
test
movsb
fsubrs
push
xlat
fwait
xchg
mov
mov
cld
xchg
push
or
add
mov
mov
mov
stc
xchg
or
add
jge
pop
jmp
lcall
sbb
pop
dec
cmp
cmp
pop
cmp
jns
lea
adc
mov
repnz
pop
sbb
loope
and
ret
inc
xchg
enter
outsl
int3
jo
into
or
push
cmp
dec
mov
mov
stos
daa
jb
xchg
fsubrl
push
cmpsl
ss
and
fisubs
add
lods
jge,pn
hlt
bound
mov
mov
call
packsswb
insb
and
ss
pop
mov
inc
and
mov
jb
out
mov
pop
mov
in
cmp
mov
jp
mov
addr16
sar
icebp
cmc
sub
cli
inc
push
cmc
sub
rorb
sbb
es
push
mov
test
enter
mov
cmc
mov
inc
push
ss
inc
lret
outsb
jns
jbe
mov
loope
test
mov
lock
cltd
clc
or
dec
inc
dec
loop,pn
sbb
iret
push
jg
and
ljmp
insl
xchg
mov
xchg
js
in
mov
ret
in
cltd
or
aas
sbb
mov
pop
loop
movsb
add
shrl
das
mov
push
push
mov
mov
push
addl
out
in
fcoml
jae
mov
adc
popf
or
sbbl
ds
in
fwait
inc
add
mov
daa
int3
lret
lds
rclb
pushf
push
inc
ret
mov
sub
ss
adc
cs
jo
mov
add
xchg
je
xchg
jp
hlt
jmp
pop
insl
push
or
inc
idivb
lret
sbb
add
inc
cmp
adc
mov
les
mov
xor
insb
jmp
inc
mov
xchg
mov
jnp
cmp
aaa
cmp
adc
sub
mov
fcomps
lahf
out
stos
add
in
xor
ljmp
cld
push
adc
sub
xor
addb
adc
xchg
orl
sti
cmp
cmp
ja
xor
lret
gs
ja
fdivl
cmp
lds
dec
cmp
mov
repnz
iret
lret
or
mov
rolb
mov
or
int3
mov
adc
push
sub
adc
xor
or
xor
push
ficoms
pop
js
push
fwait
mov
call
add
jge,pn
or
mov
sub
test
add
inc
jl
fs
ret
mov
push
adc
pop
clc
jl
add
loop
mov
jg
add
sbb
lods
daa
into
inc
or
dec
push
fs
out
fsts
cmpsl
adcl
mov
xor
add
cli
push
fidivs
cmc
push
lock
call
shll
lea
cld
sub
cmp
repnz
cmpsb
jne
stc
xor
test
pusha
xorl
cmc
xor
movl
pushf
xor
push
cmp
xor
call
push
call
stc
xor
pushl
clc
xor
movb
xor
pusha
pushl
popf
pushf
movl
pushl
ret
clc
xorl
cmc
call
pushf
popl
pusha
xorl
clc
xor
bt
pushf
xor
pushf
stc
xor
jmp
jmp
push
push
pushf
popl
pushf
xorl
clc
xor
cmc
xor
pusha
stc
xor
stc
xor
call
bt
xorl
cmc
pusha
xor
clc
xor
movb
pushl
popf
pushf
pushl
ret
or
addr16
xchg
idivb
jo
ror
fwait
lds
mov
aad
jmp
mov
popa
mov
subb
sub
pop
out
pop
aas
call
adc
gs
and
mov
ja
cmpsl
xor
subb
int3
jne
leave
fcomi
cmp
jo
mov
popf
aas
add
aad
adc
inc
pop
sahf
enter
ja
mov
push
repz
mov
outsl
xor
pop
clc
mov
mov
ret
or
xor
jb
inc
dec
inc
push
je
and
cwtl
ja
add
sbb
arpl
aaa
mov
xchg
sbb
fcmovu
sub
cwtl
lods
cmpsl
int
fsubs
test
jg
pusha
cmp
icebp
mov
pop
pop
pop
in
je
mov
jecxz
jmp
mov
inc
repnz
scas
xchg
pop
iret
inc
aad
stos
lods
das
rclb
in
xor
and
push
push
scas
inc
mov
popa
loope
mov
in
lds
scas
mov
pop
pop
pop
cmc
es
xorl
cwtl
test
mov
bound
sbb
imul
rcrb
insl
out
sarl
pop
in
cmp
popf
push
dec
iret
icebp
add
mov
dec
mov
fisubl
push
push
cmpsb
xor
pop
jl
add
adc
sbb
xchg
jg
sbb
aas
xchg
push
stc
pushf
ret
dec
jae
imul
lret
in
sub
pushl
xchg
adc
push
in
lret
enter
cld
pusha
sub
xor
add
ljmp
cmp
add
pop
xor
rcrb
xlat
sbb
sbb
inc
cmpsl
mov
jle
js
push
inc
sbb
movsl
fsubrl
pop
cmp
xchg
dec
inc
jns
rolb
lret
out
mov
fwait
fwait
jae
mov
sbb
das
mov
dec
pop
clc
add
jne
adc
jb
nop
loopne
out
ret
adcl
add
inc
cld
mov
cmp
inc
mov
sarb
cld
xor
mov
shll
xchg
sbb
scas
xchg
call
add
add
cli
into
xor
xchg
addr16
js
xor
or
inc
loope
hlt
and
sbb
mov
mov
cld
mov
cmpsb
xchg
mov
andb
add
in
xor
pop
mov
or
pop
mov
lret
dec
orl
inc
mov
jge
inc
fcoms
push
stc
sub
incb
push
mov
pushf
cs
fstl
xchg
aad
lret
ds
popf
push
aas
pop
divl
sub
jecxz
aas
das
popf
mov
mov
and
dec
mov
pop
pop
cmp
stc
int
daa
pop
pop
inc
pop
jmp
xor
jmp
mov
xlat
aas
ljmp
shr
or
ljmp
mov
fistps
xchg
mov
sbbb
add
mov
pop
and
fwait
pop
ss
add
adcl
mov
inc
mov
loopne
addr16
nop
cmp
push
cmp
roll
loop
sub
sub
std
cwtl
imul
out
push
add
fstps
jl
pop
mov
pop
dec
stos
lahf
pop
sub
sar
adc
out
push
movsb
icebp
or
outsl
je
in
dec
dec
dec
call
mov
sti
insb
ja
roll
sub
icebp
fnstcw
imul
mov
and
push
iret
xor
out
nop
mov
stos
push
movsl
adc
adc
jbe
repz
dec
dec
xchg
ret
add
sub
adc
dec
movsb
sub
scas
ror
pushl
pop
lret
insb
push
cmp
iret
and
test
dec
imul
sti
xchg
dec
test
mov
call
mov
ret
movsb
jno
mov
jne
aaa
mov
xchg
movsb
xchg
inc
scas
out
jnp
setb
fldl
lock
xor
outsl
push
dec
mov
sbb
call
mov
mov
lds
sarl
iret
pop
jle
xor
mov
sbb
pop
xchg
adcl
or
cltd
xchg
xchg
pop
and
push
mov
xor
in
and
adc
lcall
js
mov
shrl
fwait
dec
cmp
jge
icebp
sbb
out
mov
jle
out
xlat
push
xlat
push
fwait
cmp
xchg
int
lea
or
sbb
test
das
add
adc
movb
fs
xchg
push
jmp
mov
inc
sbb
xor
pusha
lret
mov
mov
mov
cmpsl
shrl
adc
fwait
iret
xchg
push
add
gs
jo
mov
out
or
movmskps
jmp
and
jbe
or
jle
bound
push
repnz
adc
sub
cmp
or
cs
in
pop
adc
xchg
adc
or
cltd
mov
sub
mov
mov
js
mov
cmp
and
push
imul
adcl
sarl
mov
xor
add
repnz
fimuls
repz
out
mov
rcrl
adc
loopne
lret
stos
push
mov
push
inc
sar
push
push
cmp
xor
sub
mov
sub
push
dec
dec
js
and
cli
icebp
lods
push
clc
jns
xor
in
pop
int3
mov
sahf
mov
out
aad
cmp
jle
lea
loopne
and
arpl
xor
fwait
cmp
cmpsb
iret
and
pop
outsl
js
cld
mov
sahf
cltd
cmp
lods
push
icebp
hlt
sbb
cld
cmp
push
pop
inc
lods
orb
ja
push
cmp
pop
xchg
lret
pop
sti
mov
push
loop
fnstsw
mov
mov
lea
cmpsb
test
arpl
jae
ficoms
movsb
in
xor
std
jns
sbb
aad
lea
scas
scas
stos
adc
mov
das
mov
adc
xor
sahf
mov
jne
sahf
adc
dec
push
pop
test
mov
mov
sbb
out
add
testb
add
mov
mov
jge
jns
aas
push
sahf
push
mov
sbb
dec
push
sub
mov
mov
roll
std
add
push
repnz
push
adc
in
repnz
xchg
or
mov
mov
arpl
and
mov
inc
in
cmp
leave
outsl
movsl
xchg
sbb
loope
gs
and
xchg
js
stos
fwait
lret
jp
data16
and
lcall
mov
lods
iret
scas
mov
clc
gs
test
lea
jns
push
pop
lock
out
push
xchg
jb
mov
movsb
loopne
inc
add
xchg
rcrb
out
cmp
mov
sahf
mov
and
mov
mov
idivb
cmpsb
pop
mov
dec
rcl
and
movsb
sub
hlt
rcll
sub
cli
div
inc
mov
sarl
lcall
adc
lods
xchg
lock
cmp
adc
fcoml
and
test
mov
dec
xchg
loop
xor
js
test
dec
pushf
lock
add
xlat
ja
jl
into
xchg
repz
adc
lods
dec
out
push
enter
cmp
scas
cmp
push
sahf
mov
outsb
mov
test
dec
rol
cmpsl
lret
aaa
add
jmp
add
lahf
mov
loop
add
leave
cmp
pand
rcll
into
jo
mov
fwait
xor
mov
fnstenv
push
mov
adc
dec
shlb
icebp
in
test
jecxz
dec
adc
es
fdivrl
mov
mov
inc
rcrl
sbb
mov
mov
push
jmp
fwait
hlt
pop
aaa
daa
aas
pop
sub
sysret
mov
jo
sub
hlt
mov
pop
repnz
cltd
jae
subl
push
mov
push
jp
rcrb
cwtl
lret
sbb
or
mov
ret
and
push
mov
push
xor
lods
mov
jo
aam
mov
push
inc
xchg
popa
dec
push
or
sub
jno
mov
dec
inc
testb
xchg
ljmp
adcl
ss
popf
imul
cmp
jle
pusha
jmp
clc
xor
call
xor
pushl
clc
xorl
mov
xor
cmc
stc
xor
test
stc
xor
mov
pushf
xor
test
pushl
popf
pushf
mov
pushl
ret
pusha
pusha
movl
pushf
call
xor
clc
xor
clc
cmc
xor
bt
xor
call
call
movl
mov
pusha
lea
jmp
pushf
mov
movl
jge
push
pusha
pushl
lea
jmp
call
adc
ss
and
add
in
clc
jp
inc
jecxz
dec
lret
stos
in
jp
sbb
add
out
xchg
lods
and
push
lea
popf
and
loopne
popf
aad
stos
sub
push
cmp
shrb
ljmp
mov
dec
or
pop
arpl
add
inc
mov
sbb
sahf
push
push
dec
mov
stc
addps
pop
adcb
flds
cs
jle
inc
frstor
sub
stos
fcom
in
pop
xchg
jne
xchg
mov
push
hlt
mov
in
test
ss
push
mov
inc
int
dec
push
repz
adc
insb
repz
cmp
hlt
jnp
push
aas
sub
gs
call
ljmp
call
jmp
stos
jne
mov
pop
add
pop
test
adc
sbbl
js
out
cwtl
pop
xlat
and
sbb
dec
test
cmp
cmpsb
add
xchg
aaa
dec
jg
imul
pop
and
inc
icebp
in
jge
mov
pop
ficoml
and
xchg
je
push
loop
or
jle
dec
dec
mov
dec
add
lods
enter
xchg
ja
loope
pop
out
stos
jnp
xchg
sub
adc
add
jns
cmpsl
jmp
jmp
mull
mov
xor
push
push
pushf
sub
xchg
and
xorb
xorl
xchg
and
nop
fsubs
cmp
sti
lea
push
xchg
push
pop
in
push
daa
adc
pop
fdivrl
add
jne
or
roll
jge
and
and
and
fnstenv
cmp
sub
sub
fwait
inc
add
push
mov
xorl
pop
add
push
arpl
into
imulb
out
adc
jp
jmp
je
xchg
sub
lods
and
or
add
mov
dec
mov
pop
in
es
adc
jle
xchg
cmpl
mov
or
xor
loope
js
cmp
stos
sub
loop
sti
fwait
int3
mov
add
ja
lret
enter
div
adc
cmp
movsl
xor
cmp
int
mov
push
mov
mov
sub
mov
lcall
mov
inc
push
cmp
mov
mov
mov
clc
idiv
jb
sbb
rcrb
loope
ja
add
lods
std
movsb
sub
mov
lret
jo
add
movsl
lea
mov
sub
js
into
push
mov
mov
ret
sbb
sbb
cmp
jg
aas
lahf
push
push
rcl
std
jmp
cmpsl
fistps
arpl
pop
insl
push
lock
pop
fistps
adc
std
das
out
jns
lret
cmp
mov
ljmp
add
jge
and
sbb
nop
gs
adc
es
js
ret
rclb
and
cmp
add
mulb
rorl
sbb
inc
adc
mov
inc
cmc
jne
xchg
test
pushf
enter
cmp
push
mov
nop
mov
push
ds
mov
jp
sbb
rorl
jns
or
mov
cmp
in
add
pop
xchg
cmp
mov
out
jne
cmp
adc
jl
mov
pushl
popf
push
pushl
ret
pusha
jmp
pusha
push
movl
pushl
pusha
lea
jmp
xor
movb
cmp
xor
cmp
xor
stc
xor
bt
xorl
stc
xor
test
call
mov
test
cmp
cmpsb
insl
ret
ret
movsl
jmp
sub
dec
mov
inc
arpl
xchg
fistpl
hlt
adc
lods
cs
add
dec
xor
and
cmp
sbb
add
inc
dec
popf
and
mov
js
jmp
jae
add
outsb
fs
shll
pop
mov
fdivrp
xchg
xor
inc
test
inc
shlb
sbb
movsb
xchg
mov
fcomps
loop
xchg
test
outsb
dec
test
aas
hlt
push
pop
lods
push
push
mov
cmp
out
leave
mov
stos
inc
sar
scas
fsubl
std
mov
into
mov
clc
cmp
outsl
xchg
imull
jnp
sbb
jno
je
mov
out
aad
test
adc
shll
addr16
mov
test
iret
out
inc
mull
pusha
es
xor
or
xchg
leave
shl
sub
in
test
mov
add
xchg
mov
cmpb
or
ret
sbb
push
stos
fmul
add
lods
sub
aad
loope
xor
loope
lahf
ror
sti
notl
push
push
repnz
fstpl
jge
cld
js
insl
cltd
pop
popf
push
cmp
mov
fldcw
pop
mov
jns
lret
loope
shll
or
in
jo,pn
arpl
mov
mov
sbb
fnstcw
mov
pop
rolb
imul
bound
jb
arpl
scas
fucomi
cmp
fstps
sbb
aas
inc
sub
push
aad
scas
dec
add
mov
aam
jmp
icebp
rorb
adc
mov
shl
aas
loope
jmp
jne
adc
sbb
xor
loop
jnp
adc
mov
pusha
sub
cmp
lods
cmpsb
pop
mov
insl
in
pop
repnz
push
jns
and
adc
cmp
pop
cmp
mov
in
test
or
push
sub
xchg
insb
jmp
int
pop
jge
jns
pop
or
dec
js
sbb
addb
dec
leave
setg
or
jne
jmp
pop
in
cmp
xchg
inc
or
mov
cmp
cmp
ja
incb
fwait
cwtl
jle
inc
xor
fs
mov
ret
std
rcl
mov
dec
aas
mov
jb
mov
dec
or
test
imulb
jne,pt
pop
inc
outsb
imul
addl
loope
cmp
cmpsl
test
outsb
cmp
imul
in
xchg
test
outsb
adc
push
icebp
jne
cwtl
inc
lock
or
mov
mov
push
shl
pop
int
fcomps
cmp
push
jg
sub
lret
dec
fstps
mov
scas
jg
idivb
jbe
mov
xor
cmc
clc
pushl
popf
pusha
mov
pushl
ret
push
pushf
lea
jmp
dec
and
arpl
leave
push
jmp
mov
aaa
mov
pop
dec
push
lock
add
sbb
inc
cmp
inc
fwait
xor
dec
mov
popf
in
or
lret
aas
sub
seto
arpl
in
bswap
ja
repz
sarl
mov
pushf
cmp
lock
pop
push
popa
jb
push
mov
add
leave
ljmp
mov
sub
je
push
dec
repz
push
lock
aam
and
rcr
sbb
bswap
mov
sbb
icebp
mov
adc
stc
jp
repnz
aad
aad
lds
adc
dec
push
xor
imul
iret
pop
or
sbb
mov
push
icebp
movsl
cwtl
jge
lods
cmp
stc
cmc
xchg
sbb
and
mov
add
dec
dec
outsb
jmp
xor
cmp
les
rorl
xchg
js
dec
mov
mov
mov
aad
packuswb
dec
add
mov
mov
dec
call
inc
movb
inc
push
add
sbb
aaa
sub
add
xchg
sbb
sub
shlb
jbe
mov
inc
mov
add
es
lret
fs
and
xorl
sub
add
movl
pop
mov
insb
inc
jecxz
test
sbb
ret
mov
std
jnp
xor
daa
lret
rclb
mov
add
push
cmp
xchg
js
xor
sub
pop
fwait
popa
stos
mov
xor
push
cs
xor
push
inc
or
xor
mov
ficompl
cmpsb
add
add
lock
ret
jmp
sub
fcom
popf
cmp
cmp
jo
aaa
sbb
sub
xchg
test
cmpsb
gs
nop
rcl
jno
mov
cmpsb
fcompl
xchg
xchg
mov
rorl
xor
hlt
and
push
mov
mov
push
call
fdivrs
sahf
les
pop
push
scas
add
xor
leave
cmp
fistps
in
stos
out
jge
jge
sub
xchg
repnz
pop
mov
adc
mov
mov
ficoms
decl
cmp
add
std
add
ljmp
or
outsl
mov
push
dec
lahf
and
sbb
jb
ror
push
cmp
pop
das
xor
add
stos
out
dec
fwait
scas
popf
rsm
jb
ljmp
out
adc
in
or
test
or
je
nop
lret
scas
inc
stos
inc
pop
lds
fisubrs
and
std
xor
mov
out
rcrl
pop
mov
xor
xchg
xchg
mov
setnp
mov
pop
push
mov
cmp
loope
and
xchg
cmp
inc
testb
out
sub
cmpsb
push
xchg
testb
inc
enter
mov
ja
in
xchg
xchg
jg
fmuls
add
addr16
nop
shll
iret
mov
cmpsb
scas
lea
mov
mov
dec
mov
cmp
pop
push
lret
add
insb
testb
jns
insb
push
fmuls
cmpsl
jnp
inc
adc
dec
push
test
jnp
repz
or
lret
lods
rclb
push
and
and
lret
dec
sbb
xor
push
pop
test
cmp
sahf
dec
lret
xor
cmp
loop
enter
xchg
fists
dec
dec
cmp
mov
rcll
outsb
fs
psllw
icebp
jmp
xchg
inc
mov
ss
fidivl
pop
test
daa
cwtl
mov
dec
nop
arpl
popf
cltd
lret
dec
rolb
cmp
in
pop
fimuls
ret
in
sub
xchg
pop
mov
or
mov
mov
jp
in
sub
lret
lock
fisubrl
jno
das
je
stos
jp
mov
cmp
negb
jno
pop
lods
sbb
mov
pushf
into
fadd
hlt
inc
add
in
mov
push
in
xchg
movsl
sti
fs
cmpsl
or
outsl
push
jecxz
lcall
add
mov
cmc
orb
ja
and
jno
push
test
arpl
xchg
je
pop
mov
inc
popa
cmpsb
ret
jl
test
pop
sahf
xchg
in
mov
jecxz
xor
inc
jg
adc
mov
jns
push
sbb
stc
hlt
js
js
xorps
xchg
push
enter
rol
mov
stc
xor
mov
stc
sbb
pop
btl
mov
push
imul
pop
aam
mov
dec
test
add
pusha
and
mov
pop
enter
sbb
xor
leave
xor
inc
popa
faddl
repz
push
in
jbe
mov
mov
lret
fisttpl
jmp
and
lods
lock
out
enter
pop
or
out
and
push
push
icebp
in
cmpsb
mov
jne
add
push
ss
jae
xchg
bound
lcall
cmp
inc
addl
cwtl
or
xor
iret
scas
je
push
mov
lea
scas
inc
notl
push
loopne
mov
xchg
and
jle
xlat
pop
imul
outsl
xchg
sbb
pop
shl
pop
cmp
xchg
sbb
pusha
mov
sub
sub
mov
sbb
cmp
add
pop
cli
shll
cwtl
and
dec
xor
sub
mov
cmp
pop
xchg
mov
xor
jge
sarl
call
jne
adc
popa
pop
mov
jno
sti
sub
mov
stc
pop
loope
pop
pop
sar
pop
xchg
fmull
add
popf
test
mov
adc
shr
or
cmp
mov
push
loopne
or
mov
mov
jns
add
or
int
push
dec
xor
mov
mov
jmp
add
xchg
cld
div
mov
sbb
aas
pop
andb
push
jge
and
les
adc
fldt
scas
xchg
cld
pop
int3
int
add
or
insl
stos
out
fiadds
and
jp
and
scas
xor
sahf
jnp
inc
int3
mov
push
pop
icebp
fdivrp
test
adc
dec
stos
in
xchg
fwait
push
aam
cli
inc
fiadds
sub
shlb
repz
sub
jge
jle
push
push
xor
pusha
out
jne
xchg
add
pop
scas
lock
jecxz
push
mov
insb
cmpsb
stos
leave
insb
inc
jmp
push
fstpt
pop
cwtl
imul
and
bound
sub
test
inc
jno
inc
inc
filds
jns
adc
rcr
mov
mov
mov
int3
adc
dec
loope
mov
ret
dec
xchg
pop
arpl
in
pushf
mov
test
dec
xchg
pop
or
daa
mov
mov
movsl
mov
jge
dec
andb
subb
je
fwait
sbb
xchg
fidivrs
fwait
pop
cmp
xor
in
xchg
in
das
adc
out
in
sbb
lcall
mov
push
sub
jl
clc
jl
testl
movsl
in
lahf
ret
or
or
push
sub
dec
lds
dec
push
aas
ret
jno
sub
inc
xchg
gs
mov
testl
adc
fisubs
clc
loop
or
mov
push
cmp
push
fstpl
sub
jp
sti
in
mov
arpl
jne
push
xchg
and
xchg
cmp
jg
xchg
cwtl
sbb
out
arpl
adc
push
xchg
pop
sbb
fsubp
xor
add
fwait
imul
jae
mov
sub
insl
mov
mov
scas
jno,pn
daa
inc
sub
pop
jns
jne
jl
inc
stc
xor
popa
cli
mov
jl
push
xchg
jge
sbb
mov
insb
fimull
xchg
je
mov
in
mov
ret
pusha
jl
std
enter
or
idivb
imul
js
jmp
or
add
mov
mov
insb
mov
push
loopne
pop
jmp
fisttps
rcrb
fiadds
ss
dec
shlb
mov
jne
sbb
or
adc
push
inc
lds
aad
and
mov
pop
mov
imul
xchg
mov
adcb
push
fadd
std
out
mov
xchg
cmp
add
cmp
push
lock
lods
clc
push
push
mov
pop
fisttpl
and
push
arpl
sbb
icebp
lea
cmpsl
addr16
loopne
xchg
cld
mov
xor
push
fistps
in
mov
hlt
pusha
or
ret
jmp
sub
inc
repz
sub
mov
les
adc
sbb
dec
sub
add
fsubs
lods
sub
pop
sub
dec
lret
insl
mov
ja
add
inc
enter
push
into
js
xor
hlt
mov
clc
aas
lret
dec
and
es
inc
mov
arpl
fcoms
jecxz
loopne
or
mov
lds
idivb
imul
and
outsl
or
xchg
cmc
ret
jnp
push
addr16
imul
or
or
or
sbb
sbb
adc
pop
loop
scas
cmp
call
outsl
mov
mov
sbb
push
lods
out
test
scas
sbb
iret
loop
pop
lahf
sub
rorl
pop
mov
out
xor
rclb
test
idivb
dec
pop
sti
andl
dec
jbe
out
inc
mov
dec
pop
jbe
aas
std
ds
loope
call
dec
cwtl
add
push
js
jmp
push
movsl
jmp
push
dec
in
out
mov
push
out
enter
sbb
mov
test
cmp
push
or
mov
jmp
xor
cmc
cmp
xor
call
jns
push
pusha
pusha
movl
lea
jno
pushf
pushf
movl
pusha
push
push
lea
jmp
inc
daa
jae
xchg
aad
add
divps
and
or
loop
enter
and
jae
pushf
mov
lods
mov
jb
aaa
data16
leave
sti
vphsubdq
repz
ljmp
or
mov
fcomps
jmp
inc
into
sbb
jmp
push
fwait
out
adc
xchg
in
xchg
cmpsb
xchg
push
mov
imul
lods
addr16
in
popf
mov
scas
sbb
cmp
mov
iret
std
cmpsl
lret
mov
and
add
cmp
mov
xchg
cs
sub
pop
mov
or
mov
mov
xor
inc
xbegin
add
fisttpll
cmp
and
xchg
fwait
roll
or
jge
lahf
jp
dec
icebp
jge
jno
fwait
jns
jne
push
fsubl
mov
je
or
lcall
and
fucom
xchg
cli
dec
fsubs
gs
test
xorb
pusha
pushf
popl
call
xor
mov
xor
movb
xor
pusha
test
xor
cld
pushl
popf
pushf
pushf
pushl
ret
pushf
pusha
movl
pushf
lea
jmp
mul
aaa
lret
mov
lahf
in
jae
sbb
adc
int
sbb
dec
pop
push
movsl
int3
and
and
xchg
fadds
xchg
je
cmp
mov
ljmp
and
fstps
jmp
pop
mov
addb
pop
dec
pop
push
gs
mov
cs
dec
sahf
lea
pop
inc
jo
repnz
pop
or
xchg
stc
pop
adc
pop
fcomps
mov
ljmp
dec
mov
pop
fcomps
das
mov
out
jecxz
add
mov
bound
dec
dec
test
mov
cmp
sub
inc
mov
mov
pushf
mov
xor
pop
inc
enter
cmp
lock
sbb
rcll
hlt
cmp
pushf
into
ret
mov
fiaddl
add
negb
cmpsl
and
out
cwtl
push
mov
sbb
ss
xchg
ljmp
idivl
jbe
dec
outsb
jl
stos
mov
fstpl
mov
push
push
fnstcw
xor
mov
or
add
movsl
mov
fsubrl
push
rcrb
mov
xchg
mov
xchg
ret
and
inc
ret
stos
push
push
jno
sbb
jns
sub
imul
xchg
in
repnz
ficompl
rorb
rorb
sub
loope
pop
sub
jp
fwait
shlb
lock
xor
scas
fdivl
orl
iret
push
lahf
mov
xchg
fldcw
pusha
push
inc
stos
pusha
aad
dec
pop
inc
lock
outsl
and
aas
and
mov
mov
decl
push
fxch
add
sub
push
jb
lcall
arpl
jns
push
dec
fistpl
push
sti
loop
sbb
sbb
mov
sti
or
or
push
clc
cltd
outsb
scas
and
add
leave
dec
sahf
lock
ds
mov
imul
jl
mov
sbb
cltd
out
pop
push
es
imul
inc
pop
mov
fbstp
idivb
test
xor
gs
and
adc
mov
pop
or
cltd
or
mov
mov
jnp
out
mov
cltd
sahf
icebp
jge
gs
ja
repnz
inc
mov
cmp
sub
leave
out
push
cmp
push
inc
and
out
and
mov
or
movsl
inc
sub
jmp
or
xor
xor
addl
js
leave
test
cmpsl
jp
or
and
scas
sub
cmp
mov
in
lock
std
push
pushl
popf
push
push
pushl
ret
jmp
pushf
popl
push
xor
clc
pushf
xor
jmp
pusha
pusha
mov
lea
jno
push
jmp
call
xor
pushf
xor
pushf
xor
pushl
xorl
call
jmp
out
shll
shl
cmpb
or
jp
adc
idivb
mull
insl
cs
jl
nop
out
repnz
xchg
lods
in
or
inc
jns
mov
daa
xchg
push
mov
inc
sti
cmp
andl
mov
inc
mov
lahf
pop
mov
add
fisttpll
xor
out
mov
push
aam
fsubs
mov
cs
dec
adc
cmpsl
mov
dec
jno
add
push
inc
fisttpll
mov
mov
pop
jno
jg
aas
xchg
popa
jns
out
or
or
std
xchg
sbb
or
lret
nop
pop
sub
mov
fistps
cmp
push
adc
and
iret
push
and
mov
xor
movl
pushf
lea
jmp
pushf
popl
call
push
call
jmp
pushf
movl
pushf
movw
mov
lea
jmp
stc
mov
bound
cld
movsl
mov
mov
inc
mov
mov
dec
outsl
loopne
jo
sub
cmp
xchg
cmp
inc
adc
dec
or
fwait
cltd
stos
std
push
popf
jmp
mov
neg
lea
add
xor
les
fidivs
mov
in
inc
push
jmp
mov
cli
in
int
jge
int
mov
fistpll
push
xor
into
xchg
sub
loope
jne
mov
and
dec
subl
lock
push
ret
cmpsl
dec
dec
jb
jl
scas
sub
jge
inc
sbb
fisubrl
mov
ret
xchg
shrb
xor
ret
pop
pop
mov
into
pop
and
andl
jmp
mov
add
rclb
sub
popl
int
or
cmp
mov
mov
sbb
pop
push
xchg
xchg
in
fdivr
ja
ss
mov
xchg
outsw
pop
inc
dec
ret
push
jae
lret
stos
cmpsl
add
mov
or
outsl
sti
add
mov
std
in
mul
jae
sub
dec
cwtl
in
or
pop
mov
mov
adcl
imul
inc
leave
or
dec
and
mov
inc
push
bound
push
jno
cmp
cltd
pop
sub
push
xor
in
outsl
je
cmp
xchg
ret
cs
in
in
bswap
sub
cltd
mov
in
mov
sbb
ficompl
arpl
std
mov
mov
addr16
es
xchg
pushf
sbb
outsb
ss
add
cmc
sbb
loop
daa
mov
push
jmp
cli
out
inc
push
loope
stos
cmp
int3
aas
and
xchg
xor
cld
mov
jnp
dec
call
out
dec
cld
shlb
cmpsb
test
clc
aad
fs
mov
push
lods
xor
cli
fnstcw
pop
xor
les
inc
sarb
cmpsl
rol
push
jb
jecxz
iret
push
pushf
jne
sbb
cwtl
popa
into
jle
vmwrite
push
xor
subb
cld
push
xchg
pusha
iret
fcom
adc
nop
ret
xor
inc
pop
mov
sarb
mov
sbb
outsb
test
lret
xor
scas
xor
dec
loopne
imul
push
das
stc
cli
rclb
stos
sub
push
repz
inc
mov
mov
adc
xor
xor
daa
enter
sub
mov
jg
push
fistl
ffreep
cmp
cltd
hlt
cli
fnstenv
sub
adc
cld
sub
gs
mov
icebp
out
and
mov
xor
jge
fnstcw
add
sub
aam
enter
mov
xor
add
sub
cmp
add
adc
sub
cltd
popa
scas
stc
jo
icebp
inc
loopne
xchg
pop
jbe
dec
mov
dec
enter
xchg
mov
fistpl
dec
lahf
pusha
fwait
jnp
leave
cmp
cmpsb
or
inc
add
call
sbb
jge
ljmp
stc
dec
imul
leave
popf
lods
ljmp
testb
pop
adc
xor
inc
dec
push
xor
jnp
mov
jb
pop
push
insb
xchg
sahf
adc
clc
lret
aaa
fistpl
mov
fsubs
lds
sbb
ljmp
lods
mov
mov
inc
and
xchg
jbe
stos
jecxz
push
mov
dec
mov
mov
dec
jp
sub
insl
fistps
jg
in
repz
js
inc
mov
pop
inc
jg
jne
xchg
dec
jb
out
mov
shlb
add
adc
movsl
xor
mov
mov
loopne
lods
push
xchg
in
rol
cli
mov
cmp
aad
mov
cmp
mov
negl
outsl
lock
pop
pusha
fsts
movsb
fdivl
or
ret
fwait
jge
aas
pop
mov
xchg
pop
mov
roll
test
mov
xlat
add
leave
testb
lcall
les
jmp
fists
or
pop
ret
sub
lret
inc
nop
lret
enter
xor
iret
push
out
add
add
leave
add
pop
cld
xchg
push
fwait
and
push
nop
add
sub
cmp
sub
pop
or
ljmp
jg
gs
xchg
fsubrl
jmp
das
fnstsw
mov
push
stc
das
xor
js
xor
test
dec
mov
cwtl
lods
loop
sub
lds
pusha
cli
pusha
popf
and
inc
movsl
pusha
lock
mov
mov
cmp
push
pop
scas
and
pop
inc
mov
pop
push
cmpsl
pop
imul
fmul
pop
fisubs
dec
rcrb
lods
xlat
cmp
cmp
pop
adc
mov
mov
dec
add
jns
sbb
xor
stos
clc
imul
nop
xchg
sbbb
rol
dec
jns
je
ja
sbb
xchg
sub
jno
dec
testb
dec
mov
scas
xchg
add
cmpsl
xor
add
decl
mul
jecxz
jb
ficomps
pop
outsl
mov
repz
clc
mov
xor
mov
mov
adc
pop
mov
addr16
lea
icebp
out
sub
xor
cmp
mov
movsb
imul
testb
mov
push
lock
hlt
mov
rcll
dec
nop
in
pop
inc
fs
pop
push
lock
test
push
je
lcall
lods
xchg
cmp
lock
ja
faddl
inc
mov
cmp
sbb
sbb
imul
out
mov
xchg
lret
add
push
push
into
in
sub
and
mov
push
mov
das
les
shrl
inc
sub
jmp
into
jo
xchg
pop
aam
dec
and
push
xor
not
out
das
scas
and
daa
sbb
mov
in
xor
sub
and
push
or
and
out
ss
mov
stos
dec
in
cvtpi2ps
push
dec
pop
or
mov
lds
mov
add
arpl
jo
pop
xchg
dec
out
std
data16
cli
sub
xchg
out
js
dec
movsl
inc
push
mov
outsl
push
or
add
xchg
stos
cmp
sahf
sbb
test
xchg
int
inc
std
call
sub
fxch
mov
fs
jnp
sbb
scas
mov
movb
and
loope
call
and
lret
jmp
test
rcl
push
sahf
ss
jmp
pop
xchg
push
add
jg
test
lret
mov
mov
notl
adc
dec
lods
or
repnz
enter
push
negl
jae
imul
or
pop
enter
inc
sar
and
and
xchg
movsb
and
setb
mov
lea
ljmp
imul
mov
pop
or
data16
adc
inc
imul
push
mov
aad
rcll
fprem1
sbb
insb
cmp
xchg
shrl
imul
inc
test
lods
mov
rcrl
clc
mov
ljmp
xchg
sti
ficomps
mov
mov
jb
xchg
pop
push
rcrl
pushf
fiaddl
mov
mov
sbb
iret
pop
pop
mov
fnsave
dec
les
mov
out
out
popa
mov
lea
lods
mov
lret
enter
and
sub
mov
lds
icebp
push
cmc
sub
mov
out
cli
jmp
ret
icebp
call
and
loop
aad
das
sbb
in
jl
clc
std
push
fsubl
sub
dec
les
add
jae
sbb
ret
loopne
mov
add
jns
dec
mov
out
repz
mov
repz
mov
idivb
pop
cmpsb
data16
push
stc
mov
xor
bt
bt
xor
pushf
xor
test
clc
xorl
movb
xor
call
mov
pushf
mov
movl
mov
pushf
mov
lea
jmp
jmp
addr16
fcomps
les
or
or
jl
push
jle
mov
push
add
adc
insb
aaa
in
mov
ficompl
addr16
outsb
pushf
xor
daa
xchg
mov
insb
sub
enter
or
sbbl
push
or
cmp
insl
mov
arpl
mov
xor
ret
sub
in
adcb
add
pusha
xor
xchg
mov
cmpsb
test
dec
popf
and
mov
dec
pop
inc
aam
lret
inc
push
addr16
mov
push
mov
or
fnsave
lds
stos
xor
fwait
mov
xchg
xchg
xchg
shl
fs
int3
in
cwtl
mov
xor
loop
imul
test
scas
sbb
xor
outsl
xchg
or
addl
mov
daa
xchg
and
xchg
cmp
inc
cwtl
or
roll
stos
pop
in
push
insl
int
inc
dec
inc
cmp
pop
shl
jl
push
in
pop
insl
mov
jne
xchg
xor
adc
iret
ds
out
mov
lahf
mov
sbb
jo
push
fmuls
add
fnstcw
popf
out
call
push
fidivrl
icebp
and
repz
sbb
test
xchg
cwtl
sbb
push
xchg
adc
sbb
or
fdivrl
xor
lahf
lods
mov
mov
and
lods
jecxz
xor
das
scas
icebp
xchg
xchg
or
int
adc
mov
adc
mov
and
daa
lods
dec
enter
pop
stos
sbb
aaa
rcl
sub
sub
mov
xchg
dec
imul
pop
cvtpi2ps
jmp
add
ss
or
adc
jbe
rorl
mov
enter
test
xchg
pop
mov
or
or
push
jle
test
lods
lcall
mov
push
test
dec
sti
dec
jnp
js
inc
scas
lret
sbb
loop
mov
jecxz
int3
jbe
jle
lock
add
inc
hlt
cmpb
xchg
jle
dec
cmp
adc
shrb
shlb
mov
fwait
jl
insl
insl
push
push
xor
sar
push
cmp
rcrl
call
push
mov
cmp
pop
mov
jg
xchg
movsl
mov
scas
les
xor
dec
inc
jbe
insb
push
ficoml
in
subl
ljmp
es
pop
adc
mov
fmuls
cld
fistl
test
jl
jge
iret
testl
lret
pushf
ror
arpl
arpl
pop
mov
jb
loop
rcr
hlt
sbb
adc
loop
mov
sub
cmp
push
out
dec
cmpsl
fs
daa
pop
pop
and
inc
fldcw
mov
adcl
pop
jecxz
test
ss
jns
aas
inc
jns
xchg
out
clc
xchg
dec
scas
inc
xchg
push
pop
arpl
mov
dec
jo
dec
adc
mov
dec
inc
push
hlt
js
push
orb
jmp
jbe
cwtl
sbb
ret
lahf
jle
mov
and
and
mov
xchg
cltd
int3
nop
sarb
clc
mov
dec
aas
shlb
sbb
cmp
push
xchg
lds
cmpsl
fcomi
push
mov
pushf
lcall
sub
mov
cmp
jns
out
push
inc
and
or
cmp
dec
sbb
test
dec
sbb
test
dec
adc
repnz
dec
out
pop
out
push
ds
idivb
push
adc
fucomi
mov
cld
ljmp
pop
je
pushf
popl
pusha
cmp
xorl
pusha
clc
xor
pushf
jmp
pushl
movl
mov
pushl
mov
pusha
lea
jmp
jmp
movl
call
pusha
pusha
pushf
popl
call
outsl
xor
cmpsl
cli
dec
lcall
mov
mov
push
xchg
and
sub
jb
fcmovu
jbe
mov
jp
in
and
push
out
mov
ds
jb
add
fwait
and
data16
pop
in
mov
ja
inc
xor
decl
mov
xchg
sbb
cmp
cmpl
test
aaa
mov
data16
fcomi
pop
add
mov
test
into
mov
jmp
lret
jb
pushf
test
and
sbb
out
mov
cmp
mov
cmp
es
cli
inc
mov
cmpsl
or
ficoms
int3
cmp
ret
sti
cmc
sbb
jae
jo
dec
lcall
ds
cwtl
cmp
loop
push
jno
or
mov
mov
xor
test
xor
push
xchg
es
iret
clc
sub
loopne
or
mov
fst
push
mov
lret
xor
or
das
sbb
inc
push
test
das
adc
sub
inc
xor
sti
pop
popf
and
xchg
sarb
aaa
mov
or
sbb
aam
push
popf
je
sub
stc
mov
int
hlt
xchg
cmp
frstor
sub
inc
sub
push
jl
adc
sbb
sbb
mov
cmpsb
adc
jmp
fwait
push
push
dec
loope
xchg
and
cmc
cmp
inc
mov
and
lea
sbb
mov
and
fisubrl
adc
lret
ja
call
xchg
pop
ljmp
enter
jae
pop
jae
sbb
add
pop
jecxz
repnz
movsl
cs
lods
cld
jge
inc
rol
scas
mov
mov
std
fstl
cs
hlt
jbe
fwait
adc
leave
add
mov
jp
cmp
or
pop
adc
cmp
push
jns
xchg
and
loop
notb
xchg
adc
push
test
push
iret
fdivrl
cmc
mull
dec
rcrb
and
lret
and
push
dec
jge
xchg
test
pop
or
aam
jnp
imul
jg
pusha
push
cmp
cmpsl
push
out
sahf
in
pop
push
inc
jl
mov
lea
push
push
cmp
sbb
ret
sbb
adc
cmp
cmp
aam
repz
loop
lds
cmp
push
stc
stc
jmp
clc
ljmp
scas
cmc
cmp
adc
xchg
mov
jo
mov
flds
jae
mov
jo
stc
inc
aad
jge
jg
fsubs
adc
cli
pushf
fsubrs
mov
sbb
push
popf
mov
insb
jle
addl
inc
add
mov
fs
loope
adcb
push
pop
jmp
push
mov
std
adc
je
popa
fcmovbe
xor
or
repz
jecxz
ljmp
es
pusha
jecxz
inc
xchg
fimuls
jp
loope
jmp
push
pop
inc
dec
dec
out
mov
dec
jp
dec
mov
xorb
fildl
fidivs
inc
outsl
pushf
jns
jnp
cmp
ret
jle
jns
sbb
out
mov
loope
lods
div
sub
sub
sub
icebp
fisttpll
cmp
dec
test
mov
iret
and
das
inc
fldenv
pop
inc
fldt
dec
cmp
subb
js
leave
ljmp
jp
jmp
cwtl
loopne
sub
shlb
or
lods
call
adc
inc
scas
pop
stos
or
sahf
out
mov
dec
sbb
mov
idivb
push
stos
arpl
sbb
mov
lahf
testb
xor
lods
clc
jg
jae
mov
mov
test
pop
lods
sbb
orl
dec
movb
mov
xchg
js
mov
imul
stc
ret
jp
sahf
out
lcall
and
pop
mov
jmp
into
and
add
pop
jl
xchg
pop
xchg
sbb
loope
ja
sarb
pushf
sbb
pop
or
sbb
aas
cmp
mov
jb
aad
lods
cwtl
sahf
cmp
jae
fcompl
lret
adc
xchg
mov
es
mov
filds
push
stc
or
push
pop
leave
cmp
and
cmp
mov
test
cmp
ds
cmp
test
jbe
mov
jmp
and
aas
insl
sub
mov
sbb
sub
push
sbb
pop
sub
jmp
popf
repnz
lock
arpl
cmp
xchg
and
push
xor
decl
inc
arpl
stos
test
or
jge
sbb
mov
mov
scas
int
into
or
mov
icebp
loopne
pop
xor
xchg
mov
idivb
dec
or
stos
pushf
pushf
lea
jne
pusha
movl
push
call
pusha
xor
cmp
call
jmp
pop
dec
xchg
es
and
add
jmp
cwtl
fisubrs
jp
or
mov
cmp
push
and
jns
pop
jp
mov
loope
dec
sbb
push
fbld
inc
insl
xchg
lret
movsb
push
insl
pop
fldcw
int
xrelease
hlt
xor
sbb
test
mull
subl
aad
cmp
bound
dec
mov
push
lods
xchg
cmp
outsb
pusha
and
dec
mov
popa
lock
mov
jno
sbb
iret
jmp
xchg
and
mov
stos
xorl
lret
mov
aas
aam
dec
loop
jge
mov
nop
fwait
mov
insb
shl
out
loop
adc
mov
outsb
lea
or
xor
imul
add
mov
js
insb
testl
out
in
cltd
aad
mov
mov
lods
pop
loope
into
adc
adc
test
pop
jg,pt
xor
adc
jl
jp
leave
or
adc
rclb
leave
arpl
inc
cltd
imul
pop
mov
xor
push
pusha
movl
movl
pusha
lea
jmp
jmp
push
pusha
mov
movl
push
movl
mov
pushf
lea
jmp
pushf
cmp
xorl
clc
jmp
pushf
pushf
popl
call
movl
pushf
pusha
lea
jmp
mov
movl
pushf
pushf
lea
jmp
call
call
shl
test
sub
rorb
scas
cld
mov
mov
es
clc
cmp
clc
fistpl
repnz
and
pop
aam
lea
jmp
aad
in
test
out
ret
mov
gs
aas
shlb
mov
mov
ds
nop
nop
ret
icebp
mov
fcomi
test
dec
ss
scas
inc
test
jl
inc
fldenv
and
lods
push
repnz
or
rolb
sub
ljmp
bound
adc
lcall
out
adc
sbb
test
mov
stos
sbb
xchg
iret
and
lods
add
mov
pushf
push
das
or
and
dec
popa
pop
jmp
ss
cmp
jbe
cmp
sbb
mov
inc
add
leave
mov
dec
popl
cmp
rclb
push
jecxz
test
add
scas
xchg
jle
mov
jb
sarl
xor
xchg
and
les
int
inc
mov
jae
jge
xchg
std
push
pushf
leave
mov
xor
push
and
sbb
cmpsb
dec
inc
clc
xor
test
fcmovbe
cmp
mov
movsb
sub
pop
arpl
outsl
out
mov
pushf
fldcw
lods
pop
add
mov
js
xor
pushf
pop
mov
push
out
je
mov
shll
push
mov
mov
inc
ror
or
icebp
jb
dec
rcll
pushf
and
nop
cmp
sub
adc
cmp
lret
int
cld
xchg
xor
mov
fsubr
pop
xchg
inc
or
stc
lods
in
sbb
iret
push
mov
dec
xor
popa
cmpsb
push
sbb
add
js
in
sub
out
addl
adc
ficoms
in
jb
adc
inc
mov
aam
in
enter
sbb
pop
lahf
and
xor
aaa
pop
mov
outsb
ja
in
add
and
stos
xchg
adc
xchg
sahf
cmpsl
jl
out
sbb
fisubs
xor
icebp
adc
add
in
jno
sti
mov
xlat
xchg
cwtl
imul
mov
psrlq
popa
mov
inc
push
jo
lret
leave
out
shlb
lret
jmp
ljmp
mov
popf
jmp
loop
jns
add
mov
ljmp
xchg
in
add
push
inc
mov
xchg
test
dec
push
dec
dec
mov
push
fisubl
mov
idivl
sub
jg
push
add
clc
push
push
push
fcompl
test
aas
sub
inc
insb
call
pushf
inc
leave
dec
ljmp
movsl
lods
or
and
dec
fcom
lcall
adc
pop
fsubl
mov
das
pop
sbb
loope
mov
cs
cli
mov
fstpl
jp
sub
ja
mov
cs
jnp
mov
sub
lcall
cwtl
pop
addr16
xchg
pop
mulb
push
scas
dec
ret
push
inc
in
xchg
cmp
mov
ljmp
sub
rclb
mov
jb
shl
in
repnz
cmp
in
mov
mov
mov
sub
jmp
inc
jae
in
mov
in
and
ret
or
lods
clc
icebp
sub
jecxz
push
fcomps
popf
mov
int3
dec
and
inc
xchg
stos
sbb
add
pusha
or
pushf
cs
hlt
dec
add
pushf
dec
out
aad
pop
out
jecxz
sub
mov
repz
faddl
xchg
dec
jb
ja
mov
fcmove
insb
mov
xchg
std
push
push
push
push
fbstp
dec
idivb
dec
cs
outsl
sti
jg
in
das
stos
cwtl
push
movsb
clc
inc
test
adc
or
mov
add
push
mov
into
jns
add
dec
daa
mov
sahf
sarb
rcl
and
or
fs
into
jo
cli
idivb
dec
dec
scas
in
cmc
dec
pop
in
sahf
sbb
aad
adc
push
out
push
stos
xchg
sbb
roll
inc
stos
and
xchg
mov
or
and
jp
sbb
cmpsl
sub
xor
sub
inc
cmp
inc
mov
pop
sbb
push
cmp
xadd
sub
stos
test
jle
inc
ret
testl
cmp
pop
xor
cmc
mov
lds
inc
idivb
dec
and
pushf
movw
pushf
movl
push
pusha
mov
lea
jmp
pusha
xorl
clc
clc
xor
pushf
xor
cmp
bt
xor
call
jb
js
sbb
ljmp
sahf
sbb
lea
sbb
int3
mov
pop
mov
cmp
or
mov
lahf
cltd
dec
cmp
ret
pushf
ficoml
adc
inc
nop
ja
stos
push
sub
sub
add
insb
stos
push
sub
cltd
push
and
cld
mov
dec
push
lcall
cld
aas
sarb
mov
mov
push
sbb
or
mov
jle
cld
mov
iret
add
or
sbb
cmp
adc
les
fnsave
mov
xchg
or
es
arpl
test
cmc
scas
inc
jecxz
dec
inc
daa
push
dec
mov
inc
les
mov
push
lahf
daa
cmpsb
out
push
fmuls
lock
cmpb
xchg
push
xchg
scas
sbb
mov
jle
mov
sbb
xchg
or
sub
aam
jle
shr
dec
push
insb
aad
rcrl
loop
mov
bswap
mov
out
jb
aaa
lret
scas
pop
iret
int
mul
imul
in
add
add
xchg
xchg
jno
push
xchg
inc
dec
repnz
ljmp
rcll
mov
sti
out
clc
loopne
add
adc
fwait
pop
andb
idivb
daa
xchg
push
sbb
es
loopne
cmp
adc
lret
mov
mov
cmp
roll
mov
or
cmp
pusha
dec
pop
or
cli
add
xchg
jp
pusha
loope
mov
push
rolb
lock
cmpsb
fstp
sub
cmpsl
and
daa
add
adc
jo
cmp
jno
mov
or
dec
fcmovnb
inc
adc
stos
dec
mov
out
or
mov
cmp
xchg
sbb
sahf
pop
pop
in
inc
xor
mov
jb
jecxz
mov
xchg
pop
shlb
push
pop
shrl
jmp
imul
arpl
cmp
push
repnz
xor
sbb
and
dec
cld
mov
icebp
nop
sti
pop
mov
pop
jne
loope
or
jge
cmp
mov
cltd
iret
repnz
sarb
dec
rcr
rclb
in
inc
icebp
fmuls
pop
scas
loop
sbb
stc
cmp
aaa
pop
xchg
popa
adc
sub
or
jb
or
xchg
pop
mov
rcll
loope
rorl
xchg
adc
adc
jg
mov
cmp
push
sbb
cli
cmp
add
rcr
push
adc
insb
mov
into
push
jp
adc
test
lahf
xchg
push
push
xchg
sbb
xchg
je
cmp
inc
fcomps
cmp
xchg
push
in
imul
push
mov
or
inc
callw
lret
or
add
stc
xor
cmp
popa
add
sarl
inc
outsb
imul
rcll
xor
fxch
pop
cli
lcall
sub
iret
mov
dec
mov
inc
ret
push
inc
out
loope
sar
scas
push
clc
sahf
sbb
sbb
out
xor
rcll
imulb
nop
hlt
jg
adc
dec
es
xor
mov
mov
sbb
fcos
mov
loope
pop
adc
add
jo
notb
mov
in
mov
add
aas
ss
xchg
ret
pop
pusha
mov
int
or
inc
jecxz
cli
aaa
sbb
or
bound
jae
xchg
add
das
cmpsb
and
sarb
jl
fs
add
xor
aaa
mov
out
adc
les
cmp
fmull
out
cwtl
mov
mov
cmpsl
push
pop
mov
dec
sbb
in
push
or
inc
xor
push
fsubrl
xchg
bound
adc
mov
jns
test
popf
in
pop
push
cs
insl
outsl
pusha
call
xor
cmp
mov
pushl
popf
push
pushl
ret
pushf
call
call
pushf
xor
cmc
xor
movb
bt
xor
clc
pushl
popf
mov
pushf
pushl
ret
or
add
movsb
in
xor
cli
dec
loopne
push
push
inc
in
loope
fbld
mov
imul
aam
lock
jle
mov
push
fwait
mov
insb
repnz
jne
sarb
lcall
pop
insl
mov
push
repz
mov
sbb
bound
mov
push
add
add
xor
inc
xchg
cli
mov
popf
ljmp
and
scas
lcall
pop
aam
dec
mov
jnp
test
mul
aam
push
das
mov
imul
cmc
sbb
loopne
adc
adc
sub
test
lods
xchg
dec
xchg
xchg
mov
sbb
push
sbbb
fcoms
leave
or
jns
pop
fcompl
dec
lcall
fs
cwtl
mov
inc
insb
pop
jmp
lret
dec
xor
decb
push
sbb
scas
clc
aam
add
mov
aad
shr
pop
aad
fisubl
lock
mov
sub
sub
repz
test
push
and
mov
pop
inc
std
nop
repz
clc
sbb
scas
dec
aas
mov
pop
sub
lea
hlt
call
sub
rcl
xlat
fsubrl
pop
jecxz
mov
cmp
push
lcall
fmull
and
xchg
mov
imul
sub
pop
fistl
xchg
inc
cmpsb
ds
sub
test
cmpsl
loope
add
outsl
rcrl
test
sub
or
subl
mov
push
sbb
ss
mov
or
in
daa
jge
testb
das
jb
or
or
add
mov
inc
and
test
xchg
inc
out
xor
lds
mov
inc
out
mov
lcall
nop
sbb
pushf
xor
cmp
add
pushf
popl
push
stc
xor
test
cmp
xor
cmc
xorl
bt
cmc
xor
cmc
movw
xor
jmp
push
jmp
dec
aaa
jnp
inc
ss
stc
pop
and
into
and
adc
or
or
jo
rolb
sbb
outsb
xchg
xor
dec
out
jp
pop
aam
sub
inc
aas
push
js
test
or
fwait
lds
cmpps
mov
xor
addr16
or
inc
rolb
ret
adc
sub
idivb
xor
insb
leave
or
mov
pop
out
sub
pushw
mov
push
xor
adc
adc
movsl
pop
roll
shrl
push
pop
enter
xor
mov
dec
je
fcoms
movsb
pop
sahf
pop
jg
stos
nop
jbe
repz
fwait
or
adc
outsb
dec
jl
cli
scas
jle
mov
ret
push
scas
in
bound
cmp
les
cmp
daa
or
rcll
push
clc
sahf
sbb
xchg
hlt
ljmp
mov
hlt
jg
sub
roll
jb
cmpsl
xor
jo
je
jne
int3
or
inc
xchg
xor
sub
cmc
sub
negb
mov
push
in
js
and
movsl
lock
fwait
sarb
dec
leave
pop
cmp
test
pushf
lods
fdivl
push
inc
test
push
in
and
f2xm1
jecxz
clc
push
dec
cmp
mov
stos
cwtl
push
lret
add
push
iret
jne
bound
pop
das
in
adc
out
fldt
ficompl
sub
loope
loopne
fdivrl
insb
dec
jge
pop
ds
stc
enter
and
popf
cmp
inc
sub
ret
loope
les
jns
dec
mov
out
mov
lahf
idivb
mov
inc
and
sub
sbb
fs
jmp
jmp
xor
test
xor
jmp
push
jmp
and
imul
hlt
pop
fistl
and
mov
inc
xchg
jecxz
jne
filds
daa
dec
sbb
inc
je
pop
out
sbb
jmp
inc
adc
push
pop
repz
cmpsb
xchg
jnp
dec
out
mov
adc
mov
xor
daa
pop
lret
popa
jo
insl
xchg
jmp
dec
test
mov
out
cld
jmp
adc
and
mov
ja
push
in
cwtl
mov
xchg
je
lahf
and
ror
cmp
push
xchg
cmp
subl
xlat
rcl
sahf
jl
mov
test
fwait
push
pslld
mov
xor
mov
inc
or
icebp
jbe
mov
mov
cli
ficomps
testl
and
mov
lock
pop
outsb
out
fstpl
rcrb
xchg
outsb
sbb
sbb
pop
fdivrs
push
push
mov
pop
adc
jae
mull
lock
cmp
push
hlt
mov
dec
movsb
insl
cmpsl
lods
jge
not
movsb
push
jecxz
jne
dec
mov
mov
call
fsub
int3
mov
scas
mov
mov
scas
or
outsb
sbb
dec
ss
sbb
icebp
or
adc
pop
divl
pop
fimull
sbb
inc
roll
jb
std
dec
jecxz
lahf
sub
push
lahf
xor
xchg
jnp
mov
test
and
in
xchg
push
xor
jge
mov
push
scas
shlb
lods
cmpsl
sub
and
out
shll
push
aad
movsb
fbld
jle
sti
add
lret
and
fsubl
lret
push
cmp
jp
pop
mov
shl
aam
pop
movsb
andl
dec
clc
js
jo,pt
cwtl
cli
daa
scas
push
movb
cmpsb
scas
fs
fdivp
imull
pop
pop
or
data16
mov
aaa
or
inc
pop
fisttps
dec
sub
clc
pop
jmp
push
pop
sub
ret
nop
pop
xor
fbstp
or
mov
jb
aas
addr16
push
add
test
push
jb
sbb
xor
pop
jle
ret
or
nop
ja
sub
loope
cltd
jmp
push
and
repz
inc
enter
lods
leave
dec
dec
mov
ja
insl
dec
jns
mov
ja
loopne
or
pop
jbe
icebp
dec
cmpsl
jge
xor
or
outsb
add
or
int3
je
scas
push
std
adc
enter
push
xchg
es
sbb
lea
pop
xor
mov
inc
sahf
aad
pop
push
icebp
jns
jb,pt
or
int3
push
daa
imul
mov
and
outsl
xor
pop
mov
push
or
stc
mov
mov
roll
xchg
sbb
pop
dec
in
cmp
dec
ja
out
daa
and
dec
xchg
and
dec
jle
cld
cltd
cmpsb
jo
pop
push
adc
xchg
pop
stc
out
pop
cmpsb
lods
fimull
jbe
in
adc
mov
stc
out
xchg
aaa
sub
mov
stos
push
sbb
and
ret
enter
insb
inc
jb
lds
cmc
and
in
into
clc
dec
dec
arpl
loopne
jbe
sbb
jae
cmp
or
subb
mov
dec
test
cmp
pop
push
mov
lret
subl
pop
popa
add
push
mov
insb
pop
xor
idivb
mov
cmc
aas
pop
sbb
mov
mov
dec
leave
dec
mov
fdivl
shr
and
shll
push
inc
rcrl
lea
mov
push
repz
push
pop
loop
add
aas
cld
xor
fsubl
mov
jp
dec
cs
ss
pop
mov
push
dec
fcmovu
sub
mov
sub
movsb
les
je
sub
test
mov
popf
and
cmp
fists
jg
and
jno
mov
hlt
xor
dec
sub
nop
je
mov
fs
les
lcall
jo
jne
adc
mul
andb
fsubl
idivb
mov
xchg
je
or
push
pop
mov
repnz
fisubl
pop
std
das
cmp
negb
loop
mov
xor
imul
cs
clc
test
xchg
push
dec
lret
adc
pop
outsb
add
das
arpl
out
xor
pop
pop
cmp
xor
and
es
fiaddl
popf
cs
mov
lcall
cmpsb
add
adc
lods
je
jmp
cli
fnsave
rcl
or
jge
sti
push
fisubrs
jecxz
scas
in
and
jo
mov
int
mov
fistps
and
outsb
cmc
cmp
mov
outsl
and
xor
rcll
lcall
mov
mov
adc
int3
arpl
js
movsl
sub
pusha
sbb
cltd
inc
lods
addr16
scas
push
inc
outsb
fisubl
fildll
sbb
jbe
fildl
ja
mov
jne
xchg
pop
inc
or
xor
xchg
les
and
add
push
notb
in
lods
aas
sub
andl
mov
pop
mov
push
std
dec
push
and
lret
pop
lds
cmpsb
mov
pop
mov
movsl
lds
inc
and
push
mov
adc
and
pop
jge
pusha
lods
mov
clc
fnstsw
adc
mov
das
movsb
outsb
jle
push
add
repz
mov
sub
and
push
jl
xchg
lcall
dec
cltd
xor
fs
mov
mov
stos
dec
into
loop
push
loopne
mov
or
lcall
stos
pushf
xor
lock
in
jae
or
cmp
orl
out
mov
inc
shll
je
xchg
ret
sub
scas
pop
xlat
jb
xor
test
cs
outsl
mov
cmpsl
jle
mov
scas
dec
jb
aad
push
rol
jbe
aam
test
mov
aad
mov
cmp
addr16
inc
jmp
lret
sbb
fidivs
lods
stos
push
mov
inc
cwtl
cmovne
ret
jecxz
mov
lret
fistps
mov
int3
push
sbb
mov
sub
mov
fsubrl
mov
fstp
loop
mov
in
mov
push
pop
mov
jg
divb
xor
sub
dec
leave
push
jg
and
hlt
ficoms
push
mov
add
and
int3
mov
mov
adc
fst
push
lcall
rep
cmp
sbb
icebp
sbb
dec
lods
nop
jae
push
fstps
test
jp
sub
lods
add
addr16
jae
stos
pusha
ss
ret
orb
xchg
loopne
mov
icebp
pop
shll
ret
je
push
out
repz
adc
jg
das
fidivrl
xchg
in
icebp
dec
filds
mov
ljmp
arpl
flds
fbld
inc
ret
inc
push
jge
js
jl
hlt
lea
ljmp
enter
cmp
loop
or
movsb
stc
out
xchg
mov
sub
mov
push
mov
xor
in
out
xchg
xor
mov
mov
xchg
out
mov
js
mov
dec
test
jne
icebp
in
add
or
xlat
cmpsb
push
or
ret
idivb
mov
int3
shll
call
pusha
movl
jmp
lea
js
push
movl
push
pushl
lea
jmp
push
push
mov
iret
or
and
lock
xchg
jmp
gs
mov
mov
xlat
xor
insb
in
mov
nop
and
mov
cmpsl
lds
pop
in
les
rcrl
fisubs
mov
dec
into
sbb
sbb
xlat
mov
icebp
pop
lods
mov
aad
cmp
lret
sbb
sahf
scas
push
ljmp
jecxz
xchg
cmp
sbb
mov
adc
push
cwtl
cmpsl
aaa
popa
sbb
mov
mov
adc
xchg
lods
inc
cmp
pop
dec
ss
mov
adc
adc
je
push
rcrb
mov
pushl
xor
cli
or
call
rolb
lds
popa
sbb
nop
subl
jmp
xchg
inc
jg
je
fcoms
jne
push
pop
test
or
lock
sub
cmpsl
add
loopne
ds
jl
pop
adc
testb
xchg
jne
add
leave
inc
mov
imul
out
jo
mov
add
fadds
or
lcall
cmp
sti
jnp
enter
jno
mov
js
jno
insl
and
and
es
xchg
jae
mov
add
pop
fldt
mov
or
mov
int3
js
xor
loopne
jle
out
test
ret
lock
push
push
rclb
repnz
int
ret
in
fimuls
jle
dec
icebp
je
rorb
lahf
jnp,pn
inc
aad
pop
mov
fbstp
or
pop
xchg
in
push
push
mov
sbb
ret
adc
enter
or
sbb
add
cmp
mov
lock
xchg
out
fcomps
xor
push
mov
jns
adc
mov
lods
xchg
or
dec
cmc
in
mov
mov
fldt
jle
cmp
mov
cmp
mov
or
addps
out
adc
in
cmp
sub
jns
sahf
jb
add
stos
std
mov
stc
or
mov
xchg
imul
out
and
frstpm(287
enter
das
ret
or
outsb
mov
les
mov
inc
iret
dec
iret
aad
or
ss
andl
or
jno
mov
jg
xor
ljmp
in
lret
or
adc
cmp
sbb
aas
pxor
mov
jge
xor
cltd
fs
lods
sub
sub
lock
andb
shlb
dec
call
push
mov
in
sub
mov
cmp
mov
jp
dec
into
mov
or
push
sub
lods
push
or
sbb
inc
fucomp
out
mov
test
push
aad
xchg
fildl
sbb
movsl
sbb
cmp
inc
inc
insl
imul
fxch
ljmp
xor
or
pop
cmp
dec
lret
pop
ret
int
jle
adc
mov
xchg
or
dec
inc
mov
hlt
push
and
dec
lcall
pop
idivb
mov
sahf
lahf
das
ret
dec
in
aam
pextrw
adc
stos
xor
jnp
or
dec
sub
xor
rol
push
leave
mov
fdivl
or
insl
mov
cltd
cmp
push
cmp
xchg
js
idivb
mov
mov
cmp
jp
out
mov
movl
out
mov
cld
scas
movsb
fimuls
push
lcall
cs
fsubrp
fsubrl
rolb
stos
stos
sbb
aas
negb
in
test
lret
enter
test
adc
sub
test
dec
fimuls
clc
xchg
inc
ret
push
jns
ljmp
adc
rcll
out
mov
jb
pop
mov
push
xor
or
in
ds
lock
lcall
lret
sub
rcl
je
cmp
adc
addr16
xchg
shll
int
pushf
jne
out
sbb
add
jg
hlt
xor
inc
jbe
or
rcrb
mov
imul
cmp
negb
xchg
xor
pushl
mov
xor
call
call
movl
jmp
xor
cmp
cld
pushl
popf
push
pushl
ret
pushf
push
movl
pusha
pushf
pushf
lea
jmp
pop
aam
jge
adc
ret
and
mov
popf
sub
mov
subb
pop
adc
or
fldenv
sbb
inc
fadd
mov
insl
mov
ret
inc
ja
jbe
sti
xchg
xor
cmpsb
arpl
mov
mov
push
jecxz
adc
jno
js
mov
icebp
fisttpll
xor
cmp
fstpl
xlat
adc
xchg
sbb
bound
ret
ljmp
mov
mov
pop
sbb
lods
sbbl
push
cmpsb
rcrl
dec
xor
lods
cmp
divl
int
iret
pop
inc
leave
sub
orl
fdiv
loop
dec
xlat
pop
sbb
sarb
push
pushf
jge
lea
pop
fsts
xchg
jecxz
pop
xchg
loopne
push
pop
inc
addr16
icebp
dec
ja
xchg
outsl
sub
pop
int
loope
scas
aas
repz
push
mov
popa
cltd
inc
aam
adc
add
insb
lods
cmp
mov
sbb
fcmovne
cmc
push
add
add
ret
pop
xchg
or
mov
lea
ja
loopne
mov
pop
push
xor
jg
leave
imul
popf
in
push
aas
fs
add
cli
push
pop
xlat
rol
rcrl
loope
xchg
inc
push
xor
and
aam
sub
leave
jno
mov
add
jns
pop
mov
cltd
movsb
pop
cmpl
ds
pop
adc
lea
inc
mov
mov
les
jl,pt
in
xchg
fimull
add
add
cmp
push
push
xchg
mov
xor
mov
mov
sub
push
out
sbb
cmp
mov
dec
sub
or
pop
fsubl
lds
sbb
fdivrl
mul
aas
push
cmp
jg
popf
push
cmp
adc
in
sahf
enter
movsb
outsb
arpl
xchg
in
adcb
add
pop
ficomps
lods
push
sbb
adc
fbstp
divb
sbb
popf
sbb
shlb
xor
pushf
stc
push
mov
mov
clc
jo
dec
mov
out
shlb
xchg
inc
cmpsl
movsb
push
jae
add
outsl
clc
or
and
dec
sar
flds
and
outsl
stos
in
or
test
pop
mov
jle
and
stos
xor
mov
mov
and
push
xchg
es
adc
xchg
pop
mov
cmp
xor
imulb
insl
mov
mov
outsb
mov
adc
sbb
pop
mov
cmp
cs
fs
xchg
push
cld
leave
mov
stc
cmpsl
test
fnsave
out
movsl
sub
mov
ja
mov
push
sub
and
dec
into
pushf
xchg
inc
sub
rcrb
mov
cmpsl
ljmp
mov
shlb
add
aam
xor
rcll
sub
lahf
push
cmp
xchg
sbbl
outsb
dec
push
pushf
and
es
cli
inc
push
adc
and
pusha
add
inc
popa
push
outsl
iret
orl
pop
or
mov
adc
rorl
push
mov
rcrl
scas
inc
insl
push
insl
jno
sbb
insb
mov
test
stc
rcrl
scas
es
xchg
add
testb
push
idivl
jne
pusha
out
dec
stos
cli
fnstsw
in
mov
inc
mov
lret
int
inc
outsl
jp
pop
sbb
cmp
shl
jae
cmp
sbbb
fsubrl
rorl
pop
cmc
call
aad
and
sbb
cmc
out
sub
pop
test
cmp
add
cwtl
xor
cwtl
ja
decb
test
jle
sbb
aam
xor
add
in
daa
negl
imul
aam
fs
sahf
je
inc
jmp
inc
ja
shll
test
mov
mov
or
add
pop
inc
push
inc
push
sub
insb
add
vpmulhuw
rcrb
add
aam
and
insl
jbe
loopne
cld
mov
outsl
or
push
scas
repnz
xor
sub
and
stos
das
mov
mov
rolb
inc
shlb
dec
lods
push
ror
pop
mov
dec
das
xor
push
mov
jecxz
dec
mov
sub
cli
in
pop
jmp
cmp
pop
adc
push
jp
in
xchg
mov
push
mov
xor
jae
and
gs
mov
sahf
and
inc
and
imul
inc
sarb
jo
jb
int
insb
out
sub
dec
xor
jbe
test
rcrb
sbb
nop
loop
push
add
es
sbb
push
jecxz
in
mov
jbe,pn
adc
aas
subb
cmp
dec
push
add
ljmp
mov
ja
xchg
negl
or
setnp
ljmp
shlb
xor
pushf
shl
mov
das
out
inc
add
push
in
sti
cli
sub
scas
ds
stc
cs
jnp
call
je
test
mul
addr16
les
mov
pop
pop
inc
adc
cmp
pop
add
ret
stc
pop
xchg
cwtl
bound
insl
pushw
xor
xchg
aas
scas
sub
jo
cld
orb
xlat
ror
mov
aam
inc
lods
and
dec
xchg
cmpsb
sub
jae
jbe
mov
sarb
lds
adc
dec
mov
outsb
add
dec
jae
iretw
jne
iret
mov
push
xchg
and
push
sti
hlt
push
lock
sti
cmp
repz
push
push
dec
out
in
fmul
inc
inc
inc
stos
mov
iret
imul
popf
bound
cld
xorl
int
push
aaa
pcmpgtw
sub
push
mov
fistpl
xor
sub
mov
test
jne
pop
pop
movsb
daa
popa
in
jo
sub
jl
sub
xchg
rclb
mov
sbb
cmp
and
out
and
out
ja
or
scas
inc
popf
hlt
jae
xor
xchg
or
cs
inc
cmc
mov
in
cltd
lods
ret
and
lret
mov
xor
jns
sbb
lret
es
test
dec
jne
and
out
adc
and
push
imull
ror
cmpsl
movsl
insb
jl
dec
push
aaa
or
xor
lahf
loope
cld
inc
in
gs
daa
bound
not
push
insl
jne
mov
in
or
mov
loop
es
mov
setb
pop
mov
pushf
xor
push
jnp
lea
lret
daa
hlt
jge
ret
in
add
pop
fistl
lods
jb
mov
not
je
fildl
inc
mov
ljmp
iret
mov
sub
and
stos
es
jge
inc
rolb
jne
test
jp
loop
movsl
or
xchg
sti
jge
mov
xchg
mov
and
adc
push
cmp
push
rcrl
and
je
inc
ret
cmp
pop
xchg
cmp
pop
fisubs
clc
pop
pop
or
aam
nop
int3
lods
mov
sbb
push
adc
lds
scas
xor
cmc
loopne
pop
and
lret
ret
jb
sbb
push
pop
fcmovu
add
mov
into
mov
mov
pusha
fdecstp
cmp
jmp
pushf
push
call
sbb
data16
push
pop
sbb
mov
inc
mov
es
shlb
inc
pop
push
add
test
and
repnz
push
sbb
pop
inc
inc
dec
stc
sahf
sbb
fnstsw
xchg
add
xchg
jb
mov
xchg
jecxz
faddl
xchg
cli
pop
mov
mov
xor
inc
les
or
lret
addr16
ss
inc
pop
xorl
dec
jo
rolb
adc
int3
data16
imul
jo
das
sbb
dec
enter
xchg
imul
lcall
mov
lods
or
shrl
scas
xor
ja
jb
lds
mov
sbb
jb
mov
dec
xor
lds
add
movsl
sub
xchg
pop
pop
jbe
aas
jns
in
stos
adc
iret
mov
mov
aaa
lds
push
shll
pop
fcoml
jl
lds
insb
repz
inc
pop
rol
or
in
push
inc
mov
adc
push
and
xor
mov
jb
pushf
loop
jo
or
xchg
dec
ret
cmp
jl
mov
push
lock
cmp
add
mov
sbb
mov
nop
cs
bound
mov
test
insl
add
mov
pop
icebp
adc
pop
stos
std
pop
push
jnp
dec
push
mov
mov
pushf
pop
mov
jno
enter
dec
add
pop
loop
repnz
jns
adc
and
shll
jecxz
cmp
clc
das
ja
test
fdivp
imul
lock
mov
sbb
mov
cli
dec
ret
jbe
push
jg
adc
jnp
mov
out
in
pop
xor
dec
cld
and
test
jg
sahf
and
les
adc
xchg
xor
mov
out
les
push
jge
sbb
jne
pusha
mov
jae
sub
xchg
mov
xchg
arpl
adc
cmpl
stos
jnp
rcll
and
cmp
mov
pop
jo
nop
lret
idivb
mov
pop
lods
and
mov
fldenv
xchg
xor
push
stos
stc
xchg
lret
and
sbb
mov
push
sub
cld
xor
jbe
or
adc
mov
sub
pop
sbb
movsb
test
jmpw
push
pushf
cmp
int3
enter
fisttpll
mov
add
fwait
mov
or
inc
data16
fstps
jns
sub
mov
fnstcw
test
sarl
lds
or
pop
cmp
push
or
mov
prefetch
or
sti
enter
idivb
cmpsl
inc
xchg
iret
fs
movb
movl
pushl
push
movl
mov
pusha
mov
mov
lea
jmp
xor
bt
xor
cmc
xor
mov
pushl
popf
movw
pushl
ret
movl
call
xor
call
jmp
xor
push
xor
cld
pushl
popf
push
pushl
pushl
ret
xor
call
pushf
pushf
popl
jmp
add
pop
loope
loopne
inc
addr16
mov
push
cltd
sub
mov
jbe
iret
cmp
repz
add
lcall
sub
pop
out
in
and
js
mov
fimull
dec
imul
popa
loopne
scas
xor
adc
lods
sbb
adc
ja
test
adcb
repz
mov
into
sti
and
cmp
xor
addb
sub
mov
pop
fstp
and
jg
test
adc
fadd
les
das
js
ret
fisubl
adc
xchg
add
into
pop
add
push
std
jl
or
dec
mov
xor
stos
xrelease
cmp
call
xchg
orl
inc
lds
popf
inc
mov
out
imul
cld
sub
inc
cmp
fcoms
je
ljmp
pop
sbb
in
xchg
fcoms
jbe
jbe
jae
pop
into
pop
fistps
xlat
cmp
cld
outsb
js
aam
jge
mov
xor
ret
xor
je
push
dec
testl
xlat
les
pop
or
xchg
jbe
mov
mull
test
pop
mov
es
fidivrl
aas
cmpl
push
out
imul
cmc
inc
mov
rcrb
fisttpl
out
fcmovb
sbb
mov
dec
les
push
loopne
mov
jb
xor
add
ret
enter
sub
fsubs
dec
aaa
pop
clc
jle
sbb
or
sbb
sbb
sbb
pushf
out
incb
in
mov
insb
dec
iret
pop
in
push
xor
es
ds
adc
out
aas
call
sub
cli
mov
and
testb
add
ret
mov
mov
dec
cmp
lods
cmpsl
jp
xchg
sub
in
xchg
mov
push
mov
push
lods
outsb
test
jnp
pop
jp
or
push
pop
jecxz
sar
xor
sti
in
fmull
pushf
sbb
xor
stos
int
cmp
sub
fsubs
pop
dec
fbld
mov
xor
or
fistpl
rcl
in
leave
and
xchg
cmp
lods
xacquire
mov
jl
mov
sub
cmp
mov
jmp
lret
inc
fistps
jns
mov
fwait
mov
mov
js
dec
push
xchg
fldt
inc
in
or
daa
movsl
pop
ja
xchg
out
cmpsl
test
and
add
mov
lods
fucom
rclb
push
jmp
stos
je
orb
push
mov
dec
jle
mov
and
popf
mov
lock
test
orl
test
pop
jecxz
xchg
outsl
dec
pop
and
dec
inc
sub
and
xchg
push
jmp
imul
or
and
mov
add
dec
faddp
and
cmp
or
jmp
adcb
nop
sbb
cwtl
jae
scas
movsb
cmp
mov
jl
insl
loope
imul
or
and
fsubrs
ljmp
xor
movsl
jne
mov
imul
bound
adc
in
adc
pop
stc
jne
xor
icebp
cwtl
aas
in
icebp
sbb
jl
pushl
gs
jecxz
les
mov
or
push
add
or
pop
sbb
dec
push
cld
ljmp
mov
pop
stos
inc
in
cli
xchg
pop
out
mov
out
xor
cs
and
or
sbb
sub
insl
pop
fldcw
insb
loop
ret
add
xor
dec
popa
fadd
fcoms
push
shll
sbb
pushf
lods
push
clc
sbb
loopne
inc
addr16
mov
push
fisubl
mov
xchg
lcall
int3
pushf
dec
cmp
push
xlat
pop
adcb
in
sbbb
add
push
xchg
sub
lret
stos
xor
int3
sub
iret
inc
cmp
ficompl
mov
loopne
cmp
or
pop
hlt
jne
inc
xor
les
mov
out
fmull
or
loop
and
iret
adc
dec
lods
and
sbb
dec
sub
mov
call
adc
sub
imul
lds
incl
or
xchg
add
dec
pop
and
add
ja
out
mov
mov
push
inc
mov
adc
and
and
xchg
fstps
or
xchg
in
xchg
bound
mov
out
in
xchg
push
ljmp
fstpt
mov
popf
add
stos
inc
in
stc
mov
cmp
jns
or
enter
push
ljmp
mov
sbb
ja
pusha
inc
out
mov
cmpsb
popf
enter
jb
lahf
dec
fadd
xchg
sbb
push
cmp
mov
push
cmp
mov
mov
sbb
and
mov
cmp
mov
adc
cld
xchg
or
fldt
lds
pop
xchg
das
sub
bound
test
bound
out
mov
mov
jmp
mov
rclb
mov
mov
mov
int3
incb
lock
dec
aad
mov
fstpt
rol
push
repz
loope
cmc
in
push
notb
adc
mov
cmp
jae
add
dec
push
test
sub
movsb
aad
mov
testl
mov
test
ljmp
jbe
xchg
ret
call
test
je
aam
es
test
and
mov
jno
mov
inc
sahf
sub
mov
fisubrs
pushf
cltd
jl
cld
jg
out
gs
cltd
mov
pop
scas
sub
mov
xchg
mov
and
cmc
mov
imul
pop
scas
bnd
ds
out
add
pusha
imul
repnz
or
and
mov
push
and
ss
xor
movb
jmp
xor
jmp
jbe
xchg
sbb
cld
jp
icebp
mov
or
movsb
movsb
lret
mov
popf
dec
cmc
mov
pop
inc
xor
sub
push
jbe
xchg
sub
pop
test
mov
repnz
iret
js
xchg
and
or
dec
or
stc
sti
ljmp
adc
adc
mov
test
xor
mov
push
push
sub
jo
mov
jp
fucom
or
movsl
sbb
iret
ret
stos
ja
xchg
sub
loopne
pop
add
inc
cmpsb
das
jge
cmc
out
or
cmc
mov
cld
jp
jecxz
mov
insl
icebp
push
push
xlat
pop
in
loop
pop
mov
jnp
mov
fnstcw
mov
sar
loop
cltd
cld
and
add
adc
xor
pop
aas
cli
sbb
mov
outsb
call
sbbl
adc
lods
lcall
cmpb
imul
popa
fldl
jl
cld
orb
jmp
mov
push
fistpl
push
dec
push
inc
imul
or
jnp
stos
popf
sahf
lea
shrl
pushf
inc
mov
popf
jo
dec
sbb
mov
addr16
adc
mov
and
add
movsl
cmc
insl
pop
cli
cmc
add
inc
mov
outsl
repnz
and
xchg
pop
call
add
push
mov
loop
adc
push
inc
ja
test
sahf
out
inc
pop
xchg
sete
jmp
push
jns
scas
xlat
or
cwtl
in
push
outsl
stos
mov
mov
jecxz
inc
in
divb
inc
sub
movsl
rorl
inc
dec
test
lret
mov
mov
into
lret
rorl
lods
and
dec
xchg
and
sahf
or
sub
stc
pushf
jns
mov
pushf
xchg
sbb
adc
in
mov
mov
mov
pop
lahf
xor
popf
nop
and
test
jbe
adc
push
and
and
sahf
pop
mov
dec
xchg
cs
xchg
mov
add
jo
adc
loope
in
sbb
lret
adc
pop
xchg
jbe
fldenv
aam
popf
loopne
fs
mov
sar
cmp
in
jecxz
mov
nop
shrl
rolb
xor
mov
lret
std
stos
pop
fisubrl
xor
rolb
movsl
mov
push
sahf
imul
push
fcompl
jl
xor
pusha
xor
test
jle
xor
in
fnsave
xlat
lret
push
xchg
add
mov
cmp
or
inc
test
rcrl
push
push
dec
mov
divl
inc
dec
call
or
xor
xchg
popa
dec
ds
jge
sbb
lcall
jo
inc
fimuls
xchg
bound
lahf
xorl
idivb
inc
fcoml
jae
in
test
mov
or
or
outsb
push
imul
call
popa
shl
jb
xor
cmp
push
mov
fwait
mov
dec
mov
mov
mov
aaa
or
dec
shrb
leave
push
cmp
sub
js
std
aaa
dec
and
xchg
cwtl
and
jl
inc
push
mov
test
fstpt
rep
test
xor
pushf
fs
xor
mov
mov
jno
pop
in
fistps
or
sub
lret
loopne
sbb
das
repnz
jne
ds
mov
add
and
ficompl
popa
sub
cmpsl
sarl
hlt
aam
stc
adc
xor
and
sub
adc
lcall
leave
pop
adc
in
gs
cmp
xchg
mov
sbb
mov
xor
subb
aam
jg
out
xlat
push
xchg
daa
test
stos
cmc
mov
cmpsb
int
and
repz
ss
rcrl
cmp
cmpsl
movsl
mov
in
adcl
arpl
pop
pop
leave
test
rcrl
mov
or
mov
sub
xor
mov
hlt
lods
adc
aas
inc
mov
lahf
dec
aad
adc
or
rcr
call
pop
jmp
ljmp
adc
test
push
cli
mov
pop
aam
jns
jl
aaa
and
gs
sbb
pop
subl
lret
jb
std
test
arpl
arpl
sbb
pop
int3
pop
mov
mov
rep
adc
mov
cmp
sub
or
loop
add
fs
movsl
xchg
add
daa
push
sar
cmp
dec
fsubl
aad
dec
cltd
ss
push
or
pusha
fistps
scas
in
imul
adc
inc
cmp
fsubrl
arpl
jnp
fstl
mov
in
xchg
inc
cld
pop
movsb
sub
xor
jns
add
cmpsb
xchg
pop
aam
insl
add
and
xchg
adc
pop
jo
sbb
cwtl
sbb
mov
loopew
sahf
sub
sub
orb
faddp
testb
push
out
lea
popf
pop
in
push
jb
stos
push
mov
das
adc
fistps
xchg
aad
out
rclb
repz
xchg
mov
orl
icebp
add
in
cli
mov
add
arpl
sbb
rdpmc
push
add
add
cmp
cmp
pusha
repz
mov
adcb
jle
sbb
mov
lods
lcall
mov
sti
mov
add
nop
outsb
cmc
mov
pop
jl
and
repnz
ss
shlb
cmp
in
pusha
dec
aaa
pop
cmp
push
sbb
push
daa
jle
bnd
pop
repnz
dec
push
imul
mov
mov
pusha
loope
add
dec
jb
imul
pushf
repnz
dec
jecxz
pop
mov
ljmp
inc
repz
data16
push
xchg
sbb
xor
xchg
push
faddl
out
push
add
fwait
mov
ljmp
or
dec
cltd
jns
test
ja
scas
jle
push
xor
out
mov
cltd
fcoms
add
lahf
loope
es
arpl
xchg
idivl
inc
lds
sbb
xor
movsb
and
dec
mov
js
lock
and
push
xchg
es
stc
mov
mov
out
add
jecxz
push
jg
adc
loopne
jae
push
scas
push
jp
xor
ljmp
cld
mov
cwtl
xor
addr16
and
mov
xrelease
jnp
mov
cmp
aad
mov
mov
jp
inc
sar
push
mov
sub
jge
popf
or
and
hlt
lcall
movsb
dec
aam
pop
in
push
popf
pop
lahf
dec
add
cmp
test
fcoml
divb
dec
leave
or
cmp
mov
mov
sbb
push
ret
pushl
add
sub
mov
xor
jmp
push
cltd
js
sbb
mov
cmpsl
pop
es
icebp
clc
xor
inc
mov
stos
jle
sahf
mov
inc
addr16
notb
stos
push
sub
push
dec
mov
mov
das
or
and
ljmp
cmc
dec
in
pop
mov
test
jbe
lds
ds
jg
jecxz
jp
notl
fstpt
mov
add
jbe
xchg
xor
in
xchg
addr16
mov
adc
or
jp
sub
test
cmp
movsl
das
mov
cmp
inc
sub
arpl
nop
out
or
imul
lahf
movsb
push
dec
lcall
xor
mov
idivb
xchg
orl
push
movl
jmp
pushf
popl
cmc
bt
xor
jmp
push
movl
pushf
lea
jmp
pusha
movl
pusha
pushf
movb
lea
jmp
push
pushl
push
call
popa
xor
scas
pop
rcl
adc
or
mov
xchg
dec
out
xor
sub
in
sub
in
cli
jo
mov
gs
fdivl
ret
jb
push
mov
inc
imul
add
shr
adc
add
xor
pop
cmp
fisubl
jmp
lods
faddl
sub
in
imull
inc
bound
repnz
mov
adc
sbb
lock
shr
adc
pop
lock
je
orl
out
pop
in
jl
mov
and
adc
mov
ljmp
outsb
shr
adc
pushf
dec
loop
xor
push
mov
shlb
jo
and
fs
outsb
jmp
jbe
arpl
xor
ljmp
int
sub
in
push
aas
out
and
std
andb
dec
jmp
sub
call
mov
roll
adc
and
cld
jno
btc
lret
sub
add
or
pop
leave
ljmp
xor
xchg
ljmp
and
lea
push
in
je
dec
into
dec
sub
out
cmc
and
mov
pop
mov
test
pusha
add
push
mov
call
ret
in
jno
push
fildll
mov
and
pop
leave
sub
xchg
jbe
inc
icebp
inc
jmp
cmpsb
into
fcompl
orl
mov
jo
out
and
pop
push
push
push
int3
mov
sub
bound
lcall
jecxz
or
ljmp
pop
das
xchg
movsl
mov
mov
mov
mov
lret
std
hlt
outsb
lods
or
add
dec
imul
lcall
iret
addr16
pop
loopne
sbb
movzbl
hlt
bound
adc
int
cmp
lods
xor
mov
aaa
int3
inc
mov
nop
lcall
lcall
add
xor
lahf
xor
or
jmp
jp
xchg
pop
and
pop
out
pop
pop
rcrl
jge
ja
int
and
pop
mov
loopne
adc
outsl
mov
lcallw
jge
cmp
mov
fldl
pop
add
mov
inc
pop
cld
push
push
jmp
stos
out
scas
sbb
push
lret
pushf
insl
push
pop
push
int3
push
mov
inc
pop
mov
movsl
adc
xchg
or
xor
sarb
shlb
jg
dec
loop
mov
mov
enter
cmp
mov
bound
cmpsl
mov
out
or
adc
mov
repnz
inc
aam
stos
xchg
adcl
push
mov
sbb
arpl
in
push
jecxz
out
xchg
cmpl
sbb
mov
inc
add
sbbb
and
inc
loopne
ret
lds
and
sbb
and
jns
test
push
pop
cli
sahf
enter
sub
sub
xor
push
pop
enter
cmp
in
fsubrl
jb
or
lods
push
inc
sbb
insl
pushf
push
adc
sti
jp
dec
or
xor
orb
gs
sbbl
call
dec
jae
fldt
mov
pop
loop
hlt
xchg
int
addb
xor
insl
xor
sub
cmp
pop
in
ret
into
mov
loope
mov
xorl
mov
sbb
loop
push
inc
cwtl
dec
lods
push
inc
pop
mov
jno
fwait
jl
mov
test
mov
xchg
daa
daa
pop
pop
push
sub
popa
inc
pop
into
ds
push
adc
fldcw
mov
stc
rolb
ljmp
cmc
xchg
xor
repnz
mov
jge
push
aas
push
aas
aad
sbb
jge
cmp
or
jmp
lea
pop
lea
jne
sarb
in
pop
or
icebp
fcomps
stc
adc
inc
cmp
arpl
cmp
subps
cmp
adcl
iret
pop
mov
jle
push
clc
mov
cmp
inc
icebp
push
push
push
dec
comiss
or
cltd
call
xchg
jmp
or
sub
test
stos
push
pop
fst
pop
pop
cmpl
in
incl
mov
mov
addb
mov
and
aam
sub
sub
data16
adc
add
adc
movsb
or
jb
mov
mov
add
fidivrl
mov
adc
repz
cmpsb
int
add
push
pop
cld
pop
jb
int3
fisttps
das
or
rorl
sbb
sbbl
jo
popa
pop
ret
mov
aas
sub
adc
dec
adc
cmpsb
jno
push
ds
push
jecxz
cltd
std
frstor
jns
test
dec
in
iret
into
int3
sub
xchg
xchg
movsl
mov
jmp
fstpl
pusha
stos
inc
or
test
push
int3
cli
xchg
pop
addr16
lds
jl
les
xchg
xor
aad
jno
add
push
dec
mov
and
rorl
pop
add
adc
xchg
in
dec
in
js
dec
ljmp
xor
sbb
int
dec
dec
les
loopne
and
pop
pop
in
and
outsb
mov
arpl
and
push
lods
xchg
mov
call
dec
scas
mov
sub
mov
push
insb
pop
sarb
sbb
cmp
lret
or
pop
add
daa
push
lock
add
add
mov
and
jg
int3
xor
imul
xor
adc
and
dec
int
imul
and
pop
mov
push
xor
xchg
pop
addl
push
sbb
loope
mov
loop
shlb
lret
in
add
out
cli
test
les
pop
dec
xor
inc
aas
cmp
aad
and
and
das
icebp
adc
push
stc
pop
aam
shl
or
jge,pn
push
xacquire
aaa
dec
inc
inc
push
xor
adcl
nop
fstps
xor
mov
ret
pop
in
adc
sub
fidivl
dec
lcall
mov
xlat
into
stc
loopne
mov
out
jmp
xor
mov
ror
ss
push
add
fwait
stos
lcall
clc
ret
xlat
mov
mov
pop
mov
lock
daa
pusha
lds
cs
fs
insb
popf
pop
into
pushf
dec
add
icebp
and
xlat
pop
jmp
decl
unpcklps
xchg
mov
stc
or
lret
leave
int3
in
mov
aam
pop
mov
cmp
jo
roll
cmp
push
inc
rcrl
test
movsl
mov
ljmp
call
es
jns,pn
dec
inc
flds
jb
push
mov
xor
sbb
stos
jns
repz
or
mov
lcall
fadd
xor
bound
sbb
fdivrp
adc
xchg
adc
mov
js
not
test
dec
fsubs
xchg
pop
inc
repz
repz
fwait
dec
shll
clc
xchg
jae
pop
ret
adc
loop
js
sub
pop
xlat
fwait
add
fisubrs
mov
dec
sbb
cmp
xchg
and
movl
mov
pushf
pushl
pushl
movl
pushl
push
lea
jmp
xor
bt
call
movl
call
lods
lahf
out
addl
shr
cmc
ds
jge
adc
mov
cmp
or
push
cld
aad
xlat
psubusb
push
mov
pop
frstor
jmp
test
pop
lret
cli
pop
fidivrl
ffree
jno
mov
pop
mov
int
and
mov
xchg
adc
mov
insb
loopne
adcl
out
mov
inc
mov
jae
shlb
and
idiv
and
jmp
scas
inc
lods
inc
in
test
or
dec
das
fwait
notl
jmp
pop
dec
sub
xor
inc
dec
stc
sahf
movsl
sub
int
adc
mov
js
push
jmp
mov
in
neg
pop
popf
je
cmp
lods
lahf
push
inc
jle
cmp
ja
add
cmc
and
inc
mov
inc
sbb
dec
mov
sbb
jnp
mov
in
outsl
addb
mov
sbb
ficoml
push
int3
je
in
gs
clc
inc
cmp
push
ljmp
jnp
ljmp
ficoms
scas
aam
cmpsb
inc
xor
andl
or
jbe
movsb
aas
fsts
scas
sub
sub
adc
mov
jge
sub
jno
lock
movsb
fcompl
jle
mov
les
xchg
xchg
mov
jecxz
xchg
test
subb
cs
inc
dec
pop
sbb
js
loope
jl
push
in
pop
es
lret
cmp
andb
leave
in
adc
inc
and
imul
push
cmp
cmpsl
xor
mov
add
mov
mov
pushf
das
mov
xchg
mov
cmp
push
cs
ja
or
je
mov
dec
inc
out
or
and
adc
imul
idivb
mov
mov
xchg
ss
leave
sbb
enter
adc
sbb
out
rep
xchg
daa
arpl
test
cmpxchg8b
xlat
sub
mov
repnz
into
pusha
rorb
mov
ja
push
xor
or
je
pop
dec
imul
push
adc
loop
inc
sbb
adc
mov
idivb
mov
mov
xor
jmp
movb
jmp
sub
jge
xor
and
rcrb
push
pop
jno
or
stc
test
lcall
mov
pop
xchg
push
inc
call
ljmp
add
or
mov
sbb
ss
xorb
dec
js
pop
mov
in
jp
xor
push
mov
lahf
frstor
push
adc
stos
lods
aad
lea
lds
dec
xorb
xchg
lret
imul
js
jg
pop
loop
and
mov
dec
xor
cmp
sub
or
popf
imul
inc
in
pop
mov
jecxz
ljmp
imul
xchg
cmpsl
movsb
cmpsb
sub
jae
cmp
push
js
cld
jne
pop
and
push
out
dec
pop
movsl
xchg
rcl
adc
lret
adc
decl
sbb
jae
cmp
xor
ffreep
dec
icebp
push
jnp
sbb
add
hlt
sti
mov
arpl
cld
sti
push
scas
popf
arpl
push
jo
sbb
pop
cmp
xor
jb
cmp
std
les
imul
and
inc
mov
dec
jecxz
aad
adc
xchg
daa
ljmp
inc
mov
pop
retw
aad
imul
test
inc
sbb
rcrb
cmp
dec
cwtl
xor
and
dec
xchg
mov
pop
cmpsl
sub
leave
mov
cmp
mov
pop
add
into
imul
xchg
cmp
inc
aad
push
or
gs
cmp
xor
xorl
nop
movsl
sub
pop
mov
ds
lods
daa
icebp
push
jl
das
dec
sub
lods
cld
lcall
cmpsb
es
lret
jecxz
fs
xchg
int3
add
pop
jno
xor
cltd
sub
mov
pop
adc
sub
xor
aam
or
dec
xor
or
adc
mov
test
sarl
cmp
scas
add
sbb
fcmovnb
loope
lock
loope
mov
xor
xchg
xchg
int3
int
add
pushf
sub
lahf
and
cld
ja
jae
andb
rorl
cmp
js
lea
mov
mov
jnp
sub
sub
adc
es
into
les
aad
dec
cmp
in
aad
sahf
sub
sbbb
adc
or
ret
shlb
sub
xchg
add
jl
mov
rolb
mov
mov
sti
lret
jno
add
pop
jp
jg
pop
cmp
repz
out
lcall
mov
push
sbb
int3
cltd
dec
lock
das
loop
dec
data16
repnz
lcall
mov
shll
cmp
push
add
cld
idivb
pop
and
stos
sbb
push
stos
mov
jmp
sub
sbb
shlb
les
jae
cmc
cmp
push
jp
into
cwtl
jg
sbb
sbb
lods
inc
jo
and
inc
xchg
jge
mov
in
jo
call
dec
call
shlb
stos
xchg
sbb
jecxz
jl
jmp
sbb
ret
enter
dec
sbb
lods
jne
adc
popf
addr16
lea
roll
xchg
mov
cmp
bound
aaa
repz
insl
js
ficomps
fiaddl
jb
cmp
popf
fstpl
jb
add
sub
pusha
les
mov
in
ja
in
lock
pusha
cwtl
mov
test
dec
das
xor
insb
pop
jle
xor
add
adc
xor
cmp
popf
add
cmp
or
mov
sub
jmp
pop
xor
cmp
jnp
or
and
int3
jb
mov
aas
fs
jg
iret
popf
xchg
cwtl
xchg
push
arpl
jge
xor
cmp
xor
or
movsb
add
sub
jl
jns
testb
daa
jb
mov
inc
push
in
or
pushf
cmp
popf
push
mov
mov
xor
rcrl
sub
aam
mov
lea
inc
cmp
inc
adc
pop
dec
xchg
ja
aam
sbb
gs
dec
test
inc
test
mov
pop
xchg
lods
ret
inc
inc
add
xor
mov
out
or
sub
sbb
pop
push
sbb
pop
test
and
mov
xchg
test
add
popf
adc
jecxz
jno
mov
lea
wrmsr
stos
test
pop
pop
js
nop
mov
inc
enter
lods
xor
out
mul
pop
jae
jl
fldenv
pop
pop
cmpsb
sarl
jle
stos
push
frstor
sub
push
scas
and
xchg
add
sti
les
add
shlb
imul
fnstcw
or
and
mov
dec
and
add
mov
shlb
sbbl
aaa
je
test
jno
and
fs
mov
fxch
inc
roll
mov
arpl
test
mov
jg
outsl
out
push
les
jge
add
int
lea
sbb
jbe
push
fdivrl
xlat
sub
aad
ret
lcall
xor
lcall
dec
cmp
fstpl
dec
sti
test
sti
mov
inc
dec
push
cmp
adc
xlat
lcall
jae
xchg
rclb
sub
pop
pop
push
pop
mov
std
les
inc
ret
icebp
jnp
sti
dec
sub
push
ret
jno
int
push
push
call
mov
push
jp
iret
jbe
iret
scas
dec
shlb
inc
fildll
xchg
mov
enter
or
inc
jle
push
mov
cmpsl
es
out
out
in
cmp
rcll
mov
jae
inc
scas
int3
push
subb
pop
ret
repnz
push
push
sub
icebp
adc
out
dec
sub
in
mov
outsl
stc
sbbb
out
ja
dec
xor
xchg
and
push
sti
pop
cld
push
cmpl
shl
and
and
and
and
pop
pop
pop
or
das
xor
mov
dec
rcll
lcall
hlt
mov
push
imul
lea
inc
fs
movsb
xchg
inc
jae
lods
jne
dec
subl
jbe
inc
cltd
ficoms
fstp
shr
inc
cli
decl
incb
dec
and
lea
fs
lret
pop
jno
cmp
jbe
dec
xlat
and
xor
and
into
mov
push
rcrb
fstp
push
xchg
cmp
into
inc
and
ficompl
out
pop
jb
fcoml
xchg
movl
and
mov
xchg
cmpsb
xlat
push
arpl
mov
add
insl
dec
push
xchg
test
xchg
or
insb
mov
ja
in
bound
sbb
adc
push
cmp
testl
xchg
pushl
test
dec
xchg
pushl
repnz
icebp
jne
xor
xlat
add
loop
in
jmpw
mov
aas
sub
push
push
imul
stc
dec
cmp
aam
mov
outsl
sar
and
test
addl
jmp
cwtl
shl
mov
es
inc
icebp
mov
scas
aad
xchg
cmp
inc
push
shrl
mov
rolb
push
mov
insl
push
xorb
adcb
xchg
or
push
stos
push
cmp
pop
mov
cwtl
and
hlt
int3
aaa
mov
sub
push
stc
and
jge
out
jmp
int3
test
xchg
mov
arpl
pushf
ss
fbstp
int
jbe
subl
jp
push
insl
idiv
dec
rclb
xchg
pop
mov
sbb
inc
ret
xchg
stos
xchg
pop
cmp
xchg
lea
dec
and
int
cmp
mov
jl
aaa
mov
mov
xor
rorl
jno
cwtl
daa
mov
inc
mov
dec
fidivl
ss
lds
in
xchg
out
inc
jns
pushf
fs
fwait
jg
add
call
jbe
shll
arpl
jecxz
lcall
cmp
addr16
sub
and
movsl
mov
fisubs
jns
mov
or
xor
and
pop
adc
aas
push
mov
dec
xor
and
xlat
xor
into
daa
add
fsts
push
mov
nop
mov
pop
xchg
push
lea
and
in
mov
add
xorb
lds
ljmp
test
mov
loopne
fisttps
pop
lret
mov
lods
dec
dec
jg
adc
outsb
std
xchg
das
xlat
pop
add
adc
sub
ret
lcall
imulb
stc
das
push
pusha
mov
shlb
mov
jl
or
pop
out
outsl
mov
dec
mov
sbbb
cmp
or
pusha
sub
cli
loop
cmp
bnd
sub
into
add
movsl
aad
iret
jg
out
je
pop
sti
xchg
jl
ljmp
dec
mov
ljmp
mov
mov
xchg
mov
insl
hlt
sbb
test
pop
dec
jo
jns
inc
mov
bound
pop
ss
adc
dec
adc
sbb
and
xor
lea
mov
add
lock
mov
inc
dec
xor
pop
sbb
pushf
sub
stos
xchg
mov
pop
sahf
lea
sbb
mov
xchg
jg
or
and
repnz
test
inc
movsb
iret
mov
fs
aaa
in
push
xchg
xchg
xor
out
xchg
sub
xchg
sbb
adc
push
icebp
push
or
jl
scas
xchg
dec
add
sbbl
or
xchg
cmp
add
mov
out
jo
out
scas
ret
mov
imul
adc
cmp
xchg
mov
jnp
mov
or
push
mov
add
lock
addl
mov
aad
sub
push
aam
test
xor
inc
jge
cs
imul
out
mov
mov
xor
and
mov
test
bound
dec
addr16
mov
icebp
sbb
xor
ds
push
cmp
test
jl
popa
sbb
scas
sub
push
adc
enter
sub
sub
cmpsl
out
push
std
cltd
sbb
scas
pop
fs
aam
mov
dec
mov
pop
stos
xor
iret
cmp
rolb
sub
push
or
and
mov
push
iret
add
shll
add
pusha
cmc
imulb
sub
repnz
push
sbb
and
or
adc
jge
call
cltd
stos
cltd
sub
sub
movsb
sub
cli
das
and
xchg
pop
add
mov
cwtl
scas
mov
cmp
add
pop
push
sub
sub
pop
out
inc
xchg
adc
sub
ret
jns
pop
dec
das
int3
les
pushf
push
sbb
test
sbb
popa
rolb
int3
jle
sbb
mov
cs
xor
ret
or
sub
mov
shrb
sahf
cmp
push
mov
lock
loope
sbb
add
or
sahf
sti
jno
jmp
pop
bound
outsl
ljmp
sub
not
mov
sbb
inc
dec
rclb
test
mov
add
movsb
jno
pop
inc
int3
jle
or
add
fcompl
and
push
fcoms
mov
cmpsl
es
in
jno
or
cmp
jle
fcoml
ds
add
push
mov
emms
lods
popf
sub
dec
sub
xchg
decb
shll
and
and
sahf
xorb
and
sbb
in
jmp
popf
sbb
pop
ja
inc
gs
lahf
mov
les
daa
rcr
and
sbb
pushf
out
pop
in
test
or
loop
data16
or
test
mov
hlt
xor
mov
xlat
vdivpd
xor
mov
xchg
cmovg
int
jns
repz
add
or
jle
and
lret
push
into
pushf
popa
mov
cmp
dec
testb
mov
mov
dec
fs
jnp
cwtl
or
xchg
inc
fs
shrl
cwtl
adc
mov
dec
js
imul
xor
mov
scas
loope
je
cmp
adc
mov
das
dec
cmp
fdivl
loope
mov
push
aad
rorb
adc
mov
popa
lods
jg
pop
or
xor
mov
sub
xor
xchg
das
cltd
and
jns
repz
dec
cli
stos
sbb
lret
les
and
das
ss
jno
mov
xchg
shrl
into
mov
sbb
movsb
int3
pop
adc
xchg
push
xchg
jne
icebp
push
pusha
pcmpgtb
and
adc
jecxz
mov
xchg
mov
loope
cmpsb
stos
pop
jb
mov
cld
sub
jecxz
movsb
pop
push
sub
mov
jae
sbb
push
pop
out
int
imulb
push
mull
stos
or
ja
adc
xor
push
inc
mov
and
push
or
dec
out
sbb
mov
arpl
pop
data16
mov
mov
dec
lret
movsl
mov
fidivs
adc
mov
cmp
mov
add
xor
lods
movb
pop
nop
enter
xlat
inc
fnstenv
pop
cmp
leave
call
mov
into
mov
loope
pop
lods
xor
xor
fcomip
lods
je
cmp
insl
mov
out
cmc
cmpsb
and
jmp
in
iret
dec
cmp
push
enter
inc
cltd
or
rclb
sbb
aaa
rolb
adc
out
inc
ss
inc
jae
loope,pt
scas
jle
cmpsb
adc
push
push
sub
xor
lret
inc
jecxz
cmpsl
xor
test
call
out
data16
inc
pop
lea
sbb
pop
xchg
xchg
pop
mov
std
cmp
xchg
stos
sub
mov
sbb
cmpl
mov
cs
fcoms
mov
std
lock
mov
jle
inc
push
adc
dec
xor
adc
sbb
scas
je
aad
inc
mul
push
jl
mov
sbb
cmp
bt
sbbl
ja
add
jb
and
hlt
mov
sub
push
stc
add
sub
std
mov
cmp
push
insl
scas
lods
je
and
xor
rcll
xor
andl
fmull
jne
push
rorb
js
mov
subl
ficompl
repz
or
clc
adc
jmp
call
and
jbe
push
dec
add
cs
pop
jmp
in
out
imul
ret
shlb
jo
sub
push
jbe
inc
pop
fucom
fwait
and
scas
cld
xchg
cmp
push
pop
add
hlt
daa
pushw
aaa
int
pusha
mov
orl
insl
inc
sarl
mov
cmp
push
fs
in
adc
mulb
push
aaa
dec
in
in
lea
add
addr16
fmull
ret
std
movhps
pusha
test
xchg
in
cld
xor
aad
call
je
cli
inc
idiv
movsb
pop
mov
xchg
inc
pushf
dec
outsl
inc
movsb
cmpsb
push
sbb
jg
and
pushf
pop
arpl
aaa
out
fldcw
jno
push
inc
orb
jno
jmp
mov
mov
ljmp
mov
lock
sbb
sub
pop
fsubl
fstps
push
inc
int
ret
and
hlt
rcl
outsl
cmpsl
mov
sbb
mov
sub
xor
pushf
mov
inc
mov
ljmp
xchg
inc
xchg
sbb
out
cmp
xchg
ret
fmulp
inc
inc
lock
xor
dec
icebp
insb
adc
push
push
inc
pop
push
ljmp
mov
pop
test
out
mov
dec
sbb
test
pop
lret
sti
inc
push
cmpsb
mov
xchg
sbb
jae
sub
and
and
scas
out
cmc
daa
sbb
jno
imul
nop
jae
xor
ud0
jne
push
fwait
inc
fldl
aam
sarb
dec
inc
cmc
adc
or
out
shlb
popf
lret
push
in
test
sahf
and
imul
cmp
in
jmp
xor
mov
stos
jo
movsb
and
sub
mov
adc
add
imul
pop
pop
mov
fcompl
lods
mov
test
popf
fwait
out
pushf
and
sbb
fcomps
sbb
mov
lea
adc
jb
in
scas
mov
or
in
jp
and
jnp
inc
leave
inc
add
les
aam
sahf
in
inc
push
push
insb
sbb
pop
sub
out
mov
pop
jge
pushf
lret
pop
xchg
shlb
aas
dec
xlat
sbb
jbe
xchg
test
xchg
adc
aas
inc
call
std
add
int
xchg
aad
dec
aam
insl
pop
cmp
sahf
push
out
jo
add
and
jno
repz
mov
repz
inc
ret
rcll
push
ss
stc
mov
or
xor
loopne
stos
sar
arpl
dec
imul
and
mov
into
popa
xchg
adc
push
ficompl
jo
mov
xorl
sbb
enter
arpl
add
aam
rcrb
push
push
pop
jle
xor
cmc
dec
mov
insb
xor
adc
imul
test
add
add
daa
inc
jns
jnp
mov
loope
push
stc
cld
sub
cld
sub
in
adc
inc
in
movsb
sbb
cli
cmp
test
push
mov
xchg
mov
inc
in
mov
movsb
and
sbbl
pusha
addr16
mov
jne
push
ss
push
aas
into
add
add
add
loope
cmp
sub
and
lret
inc
in
and
cwtl
inc
fs
pop
fadds
add
jno
ret
mov
mov
cmp
jo
mov
xchg
scas
xchg
adc
fbstp
push
lock
inc
iret
jp
enter
xchg
imul
sub
push
bnd
inc
insb
nop
add
dec
lahf
sbb
mov
add
testb
lahf
cmp
xor
or
dec
sahf
daa
addr16
jo
stos
fucomip
add
xchg
stc
mov
jmp
xchg
das
push
je
jnp
inc
fmul
lahf
jne
pushf
jmp
push
sti
jbe
xchg
int
iret
std
cmpsl
mov
out
mov
mov
filds
dec
aad
sub
xchg
adc
pop
ficoms
movsb
clc
add
aad
jle
or
xor
xor
xor
call
cli
sub
pop
jg
lret
lock
mov
loop
fsubl
add
test
adc
les
push
ficomps
lods
xor
cmp
repnz
gs
mov
popf
or
sbb
dec
jns
cmpl
lcall
mov
movsl
in
cmpb
addl
inc
sbb
lret
push
or
xchg
insl
cmp
aam
adcl
icebp
push
popf
xchg
movl
pushf
lea
jmp
xor
cmc
call
pushf
popl
pusha
xor
cmp
cmp
xor
bt
xor
pusha
xor
call
call
push
movl
pushf
lea
jmp
pushf
popl
test
xor
bt
call
movw
movl
mov
pushf
push
mov
lea
jmp
pusha
movl
pushf
push
lea
jmp
nop
arpl
dec
mov
cmp
test
addb
jmp
adc
fdivr
adc
aam
push
sub
xlat
and
xchg
mov
dec
in
out
mov
inc
repz
adc
jge
popf
pop
dec
test
push
jl
add
scas
sbb
pop
jp
add
ffreep
mov
mov
sub
movsl
je
jb
cwtl
popf
out
mov
das
data16
lahf
add
inc
es
and
sub
jmp
cmp
xchg
cmp
das
pop
xchg
gs
jge
cmpsl
adc
shrl
decl
repnz
mov
inc
out
jg
mov
in
movsl
xchg
stos
inc
adc
xchg
leave
mov
outsl
and
cwtl
inc
out
inc
in
outsb
add
dec
ret
sbb
inc
jae,pt
xchg
mov
and
mov
test
call
adc
rorl
jge
jmp
push
js
pop
rolb
enter
adc
fs
jae
xchg
cld
jb
inc
fs
mov
mov
adc
and
iret
cmpsb
mov
push
mov
dec
cmc
je
or
test
inc
mov
imul
sar
ror
pop
cmp
mov
push
push
jl
cmc
push
insl
mov
inc
jg
lret
cmpsl
xchg
add
xchg
xchg
cltd
jmp
jb
jp
dec
insl
dec
jns
pop
cli
and
add
les
gs
sbb
pop
loopne
and
lods
pop
daa
test
rol
pop
addr16
aas
dec
das
std
test
js
in
insb
and
pop
jmp
xor
jge
mov
jg
outsl
stc
test
mov
sub
ja
add
xchg
or
pusha
mov
inc
pop
lea
es
rcrb
lods
es
mov
cld
adc
sahf
gs
xor
pusha
cmp
pop
pop
cmpsb
cmove
fcompl
or
clc
cmp
inc
sarb
fildl
dec
xlat
sub
and
pushf
sbbl
mov
cmp
pusha
je
dec
aam
in
and
pop
enter
cwtl
pop
cmp
cli
jae
addr16
and
jmp
xor
repnz
movsl
dec
stc
pop
dec
pop
rcll
cmp
dec
mov
adc
mov
dec
pop
fcompl
sub
jnp
icebp
and
pop
and
scas
in
in
sub
mov
xchg
pushf
and
addr16
jbe
inc
lret
inc
xlat
dec
push
adc
inc
jnp
lods
mov
orb
js
insl
in
pusha
ret
mov
shlb
ds
std
mov
idivb
rcrl
std
mov
inc
push
cld
call
fsts
sub
pushf
sbb
cmp
pop
imul
mov
cmp
lea
or
push
inc
shl
sbb
xchg
pop
mov
je
and
and
fsubp
in
mov
inc
xchg
adc
das
xlat
jge
fstps
xor
sbb
xchg
es
sub
mov
mov
div
nop
ret
mov
int
xor
pop
leave
xor
scas
cld
flds
dec
jnp
ficompl
xchg
adc
call
mov
stc
out
xor
repz
jo
pop
mov
push
cltd
inc
inc
sub
data16
cld
cmpsb
outsb
dec
test
scas
cmp
cmp
gs
ret
xchg
in
repnz
mov
ret
xchg
jb
cvtps2pd
dec
idiv
inc
les
pushf
jp
jb
arpl
adc
xchg
or
adc
and
lds
ds
push
setge
aam
xchg
hlt
sbb
or
adc
adc
push
mov
cmp
or
cmpsb
ja
lret
idivb
in
push
mov
bound
les
cmp
and
adcl
test
test
xor
xchg
sub
mov
mov
mov
or
pushl
cs
mov
arpl
fs
cwtl
push
mov
push
and
xchg
cmp
sub
in
sbb
xchg
push
dec
decb
sub
into
xchg
and
cwtl
push
mov
jecxz
bound
jl
les
xchg
push
xchg
shll
inc
xor
fcomps
ja
ret
in
fistpl
sub
jae
fnstsw
mov
xlat
sub
jne
fcompl
inc
les
mov
hlt
out
mov
pop
insb
push
add
xchg
push
push
mov
add
lret
pop
test
push
jno
sub
xchg
mov
pop
cmc
test
sti
xchg
mov
mov
add
ret
stos
sub
pop
mov
mov
divl
sub
sbb
imul
cs
cltd
and
push
add
dec
xchg
aam
pop
mov
mov
sub
ja
dec
in
mov
sub
js
xchg
push
add
outsl
cmpsl
push
loopne
sbb
dec
push
in
or
or
mov
sbb
dec
cld
adc
dec
adc
xor
pusha
movb
sub
pop
push
stos
inc
pop
cmpsl
and
lds
jmp
lods
cwtl
shrl
adc
fcomp
gs
jl
int
lahf
xor
jnp
xchg
jge
fldt
pop
jg
xchg
pushf
movsb
pop
insl
aad
inc
lret
and
rcrb
fimull
ds
nop
test
add
inc
lret
enter
clc
dec
cmp
mov
jns
cltd
push
ljmp
or
pop
sbb
loopne
addr16
mov
mov
dec
aam
mov
add
rolb
push
repnz
push
fidivl
testl
inc
cmp
aam
sahf
ret
in
call
add
push
cs
sarb
test
or
adc
dec
jle
scas
pop
adc
outsl
inc
jb
sarl
cli
scas
dec
mov
jno
loopne
loop
in
clc
adc
jle
dec
or
rcll
int
hlt
push
add
fs
jb
js
jecxz
xlat
movsb
mov
xchg
sub
cs
rcrl
mov
xor
xor
insl
lods
mul
loopne
fdivp
sbb
add
push
das
lock
mov
and
lds
xchg
outsl
repnz
add
mov
lcall
push
std
jle
cwtl
sub
xor
fwait
and
leave
mov
dec
sbb
push
push
shrl
mov
and
push
scas
scas
add
push
inc
xor
xchg
fisttps
xor
mov
xor
mov
test
xor
sub
adc
aas
xor
mov
imul
cltd
decl
cmp
jg
add
stos
loop
in
aas
mov
jnp
pushf
adc
lea
xchg
push
sarl
notb
jae
jb
loope
mov
scas
adc
in
repz
mov
inc
adc
push
dec
lret
push
mov
jns
ss
adc
xor
lods
les
jle
clc
sbb
push
loope
pop
sarl
aam
notl
ss
jle
shlb
stos
inc
lret
test
inc
ret
add
lahf
ret
std
cmovbe
daa
mov
cmp
cld
into
retw
stos
pop
adc
or
lds
arpl
add
or
jns
fcmove
or
out
and
insl
lock
xchg
scas
lods
repz
pop
add
inc
jg
inc
and
in
rcll
or
bound
cmp
jmp
fmul
stos
repz
or
ss
fiadds
lret
mov
push
lcall
loope
and
jne
nop
push
sub
xchg
push
fistl
insb
jno
dec
mov
add
mov
fadds
xor
leave
push
fcoml
shr
mov
movsl
push
inc
jnp
lret
push
ret
jmp
cltd
imul
aas
or
pop
stos
int
outsl
insl
mov
dec
dec
incb
outsb
push
xchg
ret
xchg
out
popa
cmpb
iret
pop
movsb
xor
jp
sbb
shrl
loopne
adc
dec
xchg
mov
jle
imul
std
std
movsl
pushf
stc
ret
add
sub
adc
add
push
or
push
or
dec
mov
incb
lea
fsts
jge
dec
cmp
xor
pop
sti
pop
push
pop
xchg
jae
mov
add
mov
mov
cs
andl
lret
jg
leave
shll
cmp
xor
xchg
imul
xchg
pushf
sbb
pop
js
jne
inc
cmpsl
popa
push
pop
aas
sbb
sub
rorb
push
lret
inc
enter
adc
stos
gs
fistps
pop
shr
pop
push
clc
adc
and
aad
or
xchg
cld
add
loopne
fstpl
mov
sbb
outsl
push
lcall
xchg
xchg
xchg
mov
mov
aaa
shll
inc
out
cwtl
fmul
xlat
mov
es
jb
add
dec
data16
scas
mov
mov
notb
rorb
or
cmp
fdivl
mov
loop
lret
mov
dec
jecxz
mov
in
stos
or
xchg
xor
adc
sarl
push
xchg
mov
mov
in
scas
add
lret
cmp
pusha
xorl
cmpsb
ret
adc
sub
mov
push
aaa
push
lahf
pop
rolb
movsb
cltd
fdivs
orb
imul
jecxz
mov
xor
pop
sarl
mov
aam
roll
sti
cmpsb
cmc
mov
sub
add
mov
mov
mov
ret
mov
push
mov
sbb
arpl
arpl
sbb
pop
pop
add
lea
lods
or
sbbl
test
inc
leave
cmp
gs
or
jnp
pop
dec
adc
test
inc
stos
adc
sbb
shl
sbb
pop
out
mov
test
cmpsl
sub
jb
lods
aam
scas
xor
rcrl
add
divl
hlt
mov
inc
mov
out
into
out
push
xchg
cmp
ret
push
cs
hlt
imul
push
out
je
cmp
lods
xlat
mov
in
cli
imul
add
aas
or
mov
ja
push
test
dec
loopne
sub
fcoms
movb
add
shlb
push
xchg
dec
mov
push
fidivrs
jmp
push
sbb
mov
sbb
into
es
mov
dec
test
sub
aas
daa
and
into
jno
leave
sub
int
sub
lret
sub
jo
mov
pop
inc
and
es
aad
mov
push
stc
add
or
ds
shll
sbb
push
call
mov
mov
nop
adc
test
imul
jmp
add
sub
in
or
pusha
sti
xchg
scas
push
ret
fs
loop
mov
jb
cmc
loop
jbe
mov
rclb
xor
mov
aam
jne
das
fimuls
fsubrl
mov
nop
cmp
in
lcall
mov
out
das
sub
xchg
or
sbb
nop
cmp
or
imul
jno
jo
adc
cld
inc
lcall
sahf
xchg
sub
mov
pop
cmp
cs
lods
jmp
push
out
pop
push
sbb
jmp
dec
jo
adc
jmp
sub
dec
das
pop
stos
daa
lret
mov
xor
outsl
add
rcrl
cmp
shl
dec
xlat
mov
adc
in
mov
mov
stos
lods
dec
arpl
scas
mov
es
pop
sub
adc
push
or
sbb
lods
xchg
aaa
je
fcompl
mov
sbb
mov
dec
sbb
cmp
and
xor
pushf
popl
stc
cmp
xor
pushf
xor
test
movw
xor
pushf
xor
clc
xor
stc
xor
movb
xor
cmp
pushf
xorl
clc
stc
pushl
popf
push
pushf
pushl
ret
pusha
pushf
popl
stc
xor
jmp
push
movl
push
call
jp
int3
addr16
lock
shl
popf
jecxz
jne
push
pusha
lods
stc
dec
test
inc
sbb
xchg
test
fsubs
fnstenv
inc
jnp
pop
lods
sub
insb
jle
cmp
or
inc
mov
stos
cli
xchg
mov
icebp
in
inc
mov
or
push
lret
mov
xchg
sarl
pop
pop
add
add
scas
push
sub
sbb
popf
icebp
ja
pop
subl
sub
adc
add
mov
add
adc
fistps
push
and
into
lahf
insl
aaa
pop
dec
idivb
loope
sbb
pushf
pusha
movl
pusha
call
call
push
pushl
pushf
popl
push
jmp
stos
lcall
lods
rcr
cltd
jecxz
ja
sub
adc
movsb
cmp
jg
aaa
rorl
pop
outsl
mov
push
out
push
dec
dec
ret
test
ret
enter
or
cmpb
dec
iret
jnp
xchg
fnsave
xor
ss
incb
push
adc
inc
sub
mov
jl
xorb
sub
insl
push
in
enter
popa
mov
cmp
inc
sub
cmpsb
lock
sbb
iret
add
cmc
pop
adc
sub
loop
ja
sbb
mov
pusha
das
add
pusha
idivb
loopne
or
pop
call
ret
lods
add
mov
inc
pushf
out
xchg
adc
push
js
fwait
lock
inc
push
xchg
mov
js
fdivs
push
repnz
jge
mov
inc
ret
movsl
and
push
daa
shufps
inc
inc
mov
lcall
insb
dec
int
lock
jae
jae
lahf
jnp
mov
out
in
out
or
scas
cmp
cltd
cmpsb
popf
sub
xor
xchg
pushf
mov
addr16
call
push
and
adc
out
addl
mov
pop
or
mull
pushf
fwait
pop
lcall
popa
xor
jecxz
jbe
and
ss
pop
or
jle
movsl
xchg
mov
sbb
cmp
xor
sti
mov
xor
pushf
cmp
xor
cmp
xor
pushf
xorl
push
cmp
xor
stc
cmc
xor
jmp
and
in
iret
pop
inc
xor
lahf
in
adc
loope
js
pop
pushf
jns
in
mov
pop
mov
iret
adc
outsl
fisttpl
ret
ds
mov
cmpl
pop
mov
test
mov
xor
loopne
lods
ss
xchg
clc
arpl
outsb
aad
cwtl
fldcw
call
hlt
aaa
xchg
mov
fcmovnb
push
cmpsl
pop
dec
jg
cmp
hlt
hlt
arpl
mov
push
rcll
scas
xchg
cmpsb
xchg
inc
cmp
mov
iret
adc
mov
push
sbb
sbb
outsl
push
jecxz
insb
jbe
outsl
adc
mov
shlb
sbb
jge
incb
stc
inc
lods
dec
lcall
mov
mov
rcll
mov
xchg
sahf
and
lahf
dec
xor
sub
jmp
out
mov
add
mov
daa
in
jae
sub
mov
mov
shlb
das
add
mov
add
sbb
cwtl
sbb
adc
or
xor
sahf
cmp
das
test
mov
popa
pushf
sub
jle
push
imul
lods
jo
inc
and
jecxz
xchg
adc
add
fidivrs
aam
push
push
idivb
loop
stos
movsb
lea
jne
pusha
movb
movl
mov
pushf
lea
jmp
mov
aad
xor
xchg
xor
rol
jb
mov
cli
nop
enter
lss
std
outsb
into
xor
nop
mov
enter
cmpsb
inc
js
inc
push
cs
loop
icebp
cmp
push
in
testb
std
notl
add
loop
inc
movsb
std
outsb
into
mov
aad
clc
dec
cwtl
mov
jecxz
movsl
mov
push
dec
jmp
add
sahf
fisubrs
mov
mov
in
xor
inc
std
outsb
into
into
jno
jmp
cmpsb
dec
mov
imul
xor
push
lea
adc
andl
ret
cmp
mov
outsb
into
stos
lods
call
adc
popa
pop
out
mov
mov
pushf
xor
xchg
arpl
jp
dec
add
dec
aas
cmc
bound
add
rolb
fwait
pop
mov
inc
xor
mov
mov
pop
jns
xchg
popf
movsb
mov
adc
adc
jne
pushf
xor
sar
icebp
insl
ds
dec
ljmp
push
stos
int
push
sub
lods
negl
int3
mov
rorl
xor
add
ljmp
or
data16
test
aaa
dec
mov
arpl
xor
iret
rorb
test
fiadds
sahf
int3
jb
mov
dec
add
dec
enter
jno
scas
mov
loop
rcll
or
jl
xor
sbb
xlat
inc
fs
lods
sbb
out
add
sbb
es
test
jo
mov
outsl
pop
mov
pop
jle
jbe
or
mov
cmc
aam
in
lds
lahf
sbb
pop
push
sbb
xchg
les
imull
mov
pop
test
add
mov
push
or
mov
sub
xchg
push
and
add
adc
test
ss
inc
dec
das
lods
imul
insb
push
pop
cmp
cltd
leave
into
call
mov
add
xor
aaa
xor
sbb
mov
push
es
push
push
cmpsb
sbb
push
push
push
or
pop
imul
dec
ret
imul
lds
mulb
xchg
jl
push
inc
ljmp
sar
adc
pop
ficompl
negb
hlt
std
push
fstpl
aam
outsb
inc
push
dec
lahf
mov
fwait
sbb
push
sub
shlb
es
sub
add
push
mov
cld
sbb
mov
es
repz
or
sahf
nop
lcall
jge
cld
xlat
add
xlat
fbstp
movsb
dec
pop
push
sbb
mov
testb
int3
pop
inc
sub
int
push
shrb
sbb
jecxz
lods
arpl
adc
cmc
pop
clc
push
mov
mov
add
mov
cli
cmp
fwait
cs
sbb
inc
jbe
addr16
call
daa
sub
xchg
pop
imul
mov
lods
test
xchg
enter
aas
xchg
sbb
dec
or
shr
xchg
dec
fisubrs
in
inc
sub
imul
jnp
test
test
insl
push
mov
jg
insl
rol
push
shl
es
mov
gs
xchg
adc
mov
jmp
popa
inc
int
and
out
stos
or
popa
pop
jnp
or
pushf
loope
lret
push
les
in
mov
sbb
sub
mov
mov
ds
popf
push
cmp
dec
fnstenv
leave
push
das
adc
lahf
and
shl
loope
or
push
pop
xor
js
push
pushf
sbb
aam
in
not
mov
lcall
inc
dec
pop
xchg
sbb
int3
mov
and
ss
pop
mov
int3
lret
mov
lcall
rcr
pop
or
push
lret
adcl
dec
sub
test
cmp
inc
leave
dec
push
cmpsl
das
insl
mulb
mov
jg
jnp
out
daa
jae
ret
arpl
gs
xchg
push
cli
les
dec
push
jle
repnz
mov
mov
adc
jns
lahf
icebp
nop
sbb
ljmp
inc
call
inc
jno
xchg
jne
sahf
sti
in
and
xlat
mov
cmpsb
sub
movsl
ljmp
mov
loop
inc
test
xor
sub
cmp
stos
cmp
int3
push
popl
je
sub
movsl
sti
in
or
sbb
cld
sub
fucomi
fnstcw
into
xor
shll
andl
or
dec
inc
rorl
rclb
sbb
sti
add
arpl
repz
call
incb
sbb
icebp
and
xor
mov
inc
movsl
pop
daa
aaa
outsb
cmp
and
repnz
ss
loope
push
shrl
nop
lcall
out
add
cmp
cld
lret
lret
popa
and
popa
arpl
mov
push
and
xchg
push
movsl
shlb
aaa
mov
jno
orb
pop
out
mov
xchg
adc
jno
lret
cltd
enter
outsb
fstps
subl
mov
je
cld
pop
cmc
and
sub
push
xchg
sbb
ljmp
inc
movsl
cltd
dec
out
push
and
stos
pop
lret
sub
or
mov
ljmp
pop
sbb
mov
mov
or
fnstcw
add
dec
fcoml
mov
dec
jle
fbld
nop
lahf
rcrl
inc
mov
sarb
or
xchg
inc
das
lods
repz
rcr
into
enter
add
scas
sub
stos
sbb
xchg
repz
in
mov
sbb
push
leave
pusha
je
sub
lods
pop
in
lods
pop
and
rcll
adc
jmp
stc
dec
dec
bound
push
mov
iret
xchg
jle
mov
jne
testb
xchg
sbb
mov
jbe
mov
out
sub
inc
es
scas
adc
scas
fxch
push
dec
xorb
push
pop
in
inc
lock
xor
lods
xor
movsb
pop
pop
jbe
mov
adc
mov
roll
lahf
xor
mov
mov
ret
lds
dec
push
bound
out
ja
cmp
test
rcr
sti
repnz
outsl
jno
cmp
or
arpl
dec
test
cmp
jmp
daa
jge
push
out
bound
arpl
ficoms
insl
push
mov
test
popf
dec
and
je
sbb
lock
sbb
ret
pop
shr
jl
and
inc
push
mov
int3
addr16
xor
icebp
adc
dec
les
arpl
fs
loope
cld
stos
std
pop
call
sub
mov
fdivrs
ss
std
js
mov
push
movsb
push
rolb
jne
xor
popf
and
sbb
mov
jge
jns
xchg
xchg
xchg
imul
call
jmp
fneni(8087
xor
xor
mov
add
movb
pop
adc
out
ljmp
lcall
repnz
jb
cmp
ficompl
cmp
imul
leave
pop
loopne
cmpsl
xchg
cld
insl
fbld
shl
jmp
xor
add
enter
fdiv
xchg
pushf
sbbb
xchg
jae
shlb
and
sbb
sub
cmp
sbb
imul
lds
je
test
xchg
pop
mov
push
mov
cwtl
stos
jge
push
jne
jp
scas
es
outsb
fnstenv
mov
mov
pop
shlb
std
and
or
sub
push
xchg
mov
movsl
add
jp
or
lods
test
idivb
aad
test
cltd
in
mov
mov
cwtl
hlt
mov
shlb
or
sub
dec
insb
add
adc
lds
jb
push
pop
in
addr16
sbbl
idivb
aad
inc
rcll
shlb
dec
jns
cltd
ret
inc
addr16
sub
mov
inc
pop
jno
daa
lret
xor
xor
insl
sahf
pop
xor
mov
repz
sarb
cmp
cmp
xor
ret
es
rcll
test
sub
in
mov
mov
stc
xchg
push
idivb
aam
push
sbb
add
and
push
popf
int
pusha
pusha
lea
jmp
pushf
pushf
movl
pushf
pushf
pusha
pushl
movl
pushf
pushf
pushf
pushf
lea
jmp
movl
push
lea
jmp
jmp
inc
xor
sub
add
jle
and
or
xchg
inc
icebp
dec
and
sbb
or
iret
fldenv
cmp
xor
dec
mov
lahf
sub
inc
adc
sti
fs
adc
mov
mov
push
adc
dec
loopne
add
lret
in
dec
push
stos
cmp
jae
xor
bound
adc
ljmp
mov
mov
xchg
scas
xchg
fisubrs
pop
test
aad
mov
mov
mov
push
mov
jg
or
and
xchg
push
jnp
mov
or
xchg
xchg
mov
and
arpl
andl
pop
dec
adc
fs
jecxz
push
jns
lahf
iret
scas
mov
js
jae
jl
arpl
test
sbb
iret
push
stos
test
and
pop
in
sub
sub
sbb
or
cwtl
xlat
out
cmpsl
xchg
scas
and
test
pop
push
jbe
and
lods
pop
mov
out
or
je
cmp
repnz
std
adc
mov
cmp
inc
dec
inc
imul
test
jecxz
mov
imul
repz
xlat
fisubl
imul
adc
pop
ffree
ss
rcll
inc
lret
mov
jnp
andl
xchg
aaa
xchg
stc
xor
loopne
js
lds
scas
out
ja
push
sbb
mov
jbe
and
dec
test
add
subb
pop
idivb
fnstcw
mov
or
adc
adc
frstpm(287
int
cwtl
std
mov
cmp
xchg
jnp
in
sbb
lcall
and
mov
push
push
test
push
pop
xchg
sbb
aad
les
jne
xchg
adc
push
jmp
push
dec
test
cli
jnp
shll
adc
fnsave
movsb
dec
dec
mov
or
xor
mov
ret
out
xchg
lret
fs
insb
mov
idivb
imulb
add
hlt
aas
fistpl
cmp
pop
out
ja
cwtl
outsb
adc
neg
inc
shr
test
idivl
dec
xlat
push
pop
inc
add
mov
out
sti
lcall
inc
push
mov
sub
xorl
adcb
adc
fimuls
push
push
test
and
pop
xor
xlat
aas
les
jae
lret
mov
sbb
add
push
movsb
das
push
loop
dec
lret
push
mov
sub
mov
mov
les
mov
ja
cmc
add
andl
xchg
jno
xor
push
lock
stos
or
push
cwtl
call
inc
sbb
pop
mov
mov
mov
test
push
pop
and
mov
into
cwtl
insb
icebp
idivb
shll
mov
incl
mov
pushl
popf
movl
pushl
ret
test
pop
mov
icebp
or
sub
out
test
dec
stc
pop
test
sub
add
out
jg
hlt
dec
push
fwait
and
mov
pop
mov
and
aaa
int3
in
sbb
jnp
sbb
jl
scas
scas
jecxz
pop
loopne
aas
enter
int3
test
aam
iret
inc
ja
cs
dec
test
mov
sbb
fs
rcrb
test
imul
pop
push
xchg
fbstp
fs
test
inc
push
or
adc
inc
fs
loop
xor
jbe
mov
icebp
dec
les
std
lcall
jae
lods
das
mov
inc
int3
push
mov
je
cmp
movhps
loope
in
shufps
inc
into
push
fisubrs
mov
jbe
and
fidivrs
loopne
call
sub
lret
mov
dec
imul
push
pushf
and
mov
and
xchg
or
sub
or
mov
adc
dec
push
dec
jae
leave
dec
xchg
xor
inc
mov
lock
fcmovbe
ljmp
arpl
add
sub
aaa
pop
rcl
and
out
xchg
or
jno
or
xlat
fwait
or
dec
arpl
popl
loope
leave
sbb
dec
xchg
xlat
pop
pop
lods
sub
jne
fldt
push
addl
jns
imul
dec
sti
nop
mov
push
xchg
inc
mov
jo
aas
sub
xchg
mov
std
dec
ficompl
cmp
out
lcall
aas
scas
lret
pop
popf
ret
out
xor
push
xchg
xor
sub
add
push
or
mov
cltd
les
and
hlt
in
fnstcw
cmp
fcmovnu
mov
lret
movsl
aas
lret
inc
jns
test
mov
mull
adc
xchg
loop
mov
in
jb
lret
push
loop
pop
movsb
inc
rcrb
inc
les
fidivs
sub
and
lds
addr16
dec
mov
push
pop
push
lcall
sub
sub
jo
out
mov
pop
jecxz
outsl
fs
or
xchg
mov
cmp
movsb
or
cltd
insl
mov
jmp
mov
or
push
or
sahf
mov
iret
dec
lret
inc
add
jmp
lret
aaa
scas
gs
aam
lahf
cmp
ret
mov
aam
push
fsubrs
inc
push
adc
jne
jmp
dec
sarl
ds
int
dec
pop
pop
out
loope
or
xor
cmp
jae
dec
and
push
sti
dec
clc
mov
loop
lcall
xchg
mov
mov
repnz
inc
inc
pop
pop
repnz
mov
lret
testl
add
into
aaa
pop
ficompl
aaa
sbb
add
and
inc
jo
fnstenv
ja
stos
add
sahf
sbb
insl
push
mov
jl
in
dec
xor
push
push
xchg
inc
movsl
fwait
jl
test
dec
cs
cmc
xchg
mov
rol
lods
mov
pop
lret
push
out
icebp
xchg
jge
push
sub
cmpsb
sbb
push
or
stos
pusha
in
add
fbstp
mov
fs
xchg
fsubrs
cmpsb
push
pop
inc
int3
jle
sbb
jno
add
lods
cmp
push
add
inc
vpextrw
lds
adc
xchg
lock
cmp
add
sub
rcrl
test
add
icebp
jbe
cmovbe
adc
mov
hlt
cwtl
cwtl
and
loop
mov
in
sarl
adc
add
sub
cwtl
xor
jae
sbb
dec
fsubl
mov
js
sbb
jmp
or
cmp
popf
in
movsl
cmp
int
mov
mov
mov
inc
jbe
cli
mov
and
mov
xorb
fstpt
adcb
jne
cmp
stc
xchg
mov
cmp
cmpsb
idivl
push
loopne
cmpsl
pushf
add
push
nop
inc
stos
cmp
pushf
dec
test
or
adc
lods
pop
aam
ret
int
xchg
cs
pop
or
sub
add
xchg
mov
mov
dec
fidivrl
ss
pop
pop
daa
sti
xlat
subb
hlt
xchg
enter
dec
inc
mov
cwtl
jg
adc
cmpb
idiv
jo
clc
fcomip
jmp
ret
int3
xor
xchg
mov
or
mov
subb
int3
dec
lock
jp
sbb
lret
pop
adc
nop
jg
call
pop
movsb
sahf
cmp
jno
xchg
mov
les
das
mov
xchg
test
adc
jmp
jmp
push
into
mov
mov
xchg
out
sti
dec
ficomps
orl
push
inc
ret
lcall
and
fsts
add
mov
shr
jae
ds
cli
inc
xor
pop
pop
shr
pop
xor
xor
mov
bswap
pop
push
jb
adc
leave
dec
dec
sbb
cltd
fnsetpm(287
int3
push
cltd
js
xor
xchg
and
sbb
rorb
adc
insl
out
and
and
jecxz
jl
leave
jle
mov
imul
fdivl
shrl
xor
daa
mov
xchg
push
test
aaa
mov
push
out
fs
out
into
loope
fisubl
test
jp
pop
mov
in
imul
scas
mov
dec
clc
push
push
cmpsb
push
outsb
scas
das
jne
ljmp
add
mov
clc
sub
inc
push
es
cmp
inc
ja
dec
out
addr16
lea
inc
leave
sub
stos
sbb
dec
inc
fistl
adc
mov
and
out
or
jle
stos
jne
ret
loope
push
fcmovnu
ja
and
rorl
or
dec
or
jb
and
dec
iret
ret
stc
ss
dec
cmp
jmp
pop
cmp
jp
insl
mov
insb
fnstsw
jne
mov
test
add
jmp
push
mov
es
cs
add
stc
jnp
pop
jecxz
add
push
addr16
adc
std
sti
jbe
stos
pushf
jno
push
inc
xor
and
enter
int3
push
lcall
jmp
adc
inc
cltd
cmpl
std
in
push
jae
or
adc
scas
mov
add
add
mov
dec
repnz
add
movsb
cmp
nop
xor
gs
dec
dec
aam
cltd
pop
sub
xchg
mov
add
ss
popf
push
fs
cmpsb
push
out
lcall
nop
mov
out
sbb
pusha
sub
dec
scas
daa
in
xlat
mov
enter
mov
insb
fidivrs
cli
andb
adc
xlat
cmp
xlat
add
sub
mov
insl
mov
dec
mov
xchg
or
jge
push
and
pop
movsl
stc
outsl
jbe
shlb
cmpsb
popf
xor
cmp
fcomps
sub
jg
bound
lcall
daa
imul
cli
inc
push
push
mov
insb
out
rclb
jae
push
aad
incb
aaa
mov
mov
mov
pop
push
inc
sbb
pusha
lea
push
mov
add
xchg
inc
add
push
pop
push
xor
into
test
aam
lret
cmp
aam
sub
pop
jbe
sbb
fs
into
mov
test
and
scas
aam
or
frstor
gs
aad
pop
pushw
clc
cld
dec
lret
sbb
jl
or
mov
inc
xor
or
jne
psubsb
push
js
aaa
sbb
lock
sbb
dec
cmp
je
push
call
cmp
jb
mov
xchg
shll
mov
aaa
push
in
movsl
inc
ja
lock
pop
dec
test
mov
outsl
mov
aaa
sar
inc
xor
push
mov
mov
idivb
enter
into
xor
shlb
ljmp
pop
jnp
mov
std
sahf
push
dec
push
les
fs
mov
std
fnstcw
dec
cwtl
sub
dec
fadds
int3
or
push
cmp
movl
aaa
mov
dec
cld
sbb
pop
out
mov
in
or
xor
je
push
cmp
jge
fadd
or
gs
idivb
lret
xchg
pop
pop
xchg
jns
dec
cs
xor
jge
and
adc
or
mov
fcompp
inc
or
jb
clc
sbb
fildll
adc
mov
roll
mov
push
popf
and
inc
mov
xchg
pusha
or
fldlg2
dec
xchg
sti
sub
pop
or
out
arpl
fildl
cmp
in
jnp
aad
lret
ret
ds
push
mov
repnz
ds
divl
jnp
rcll
outsl
aam
clc
and
imul
mov
stos
fmull
adc
sub
mov
push
movb
mov
or
mov
mov
push
mov
jns
jp
lahf
xchg
scas
out
pusha
add
adc
js
push
add
addr16
and
mov
sbb
cmp
stos
pushl
ja
add
add
xchg
pop
sbb
and
jb
xchg
push
add
aad
movsl
inc
ja
jmp
mov
cwtl
orl
mov
add
and
xor
andl
lret
ret
movsl
push
sti
test
outsl
adc
add
ret
sub
mov
loope
ret
cmp
scas
dec
push
ss
inc
adc
ljmp
xchg
stos
inc
and
xlat
subb
out
pop
aas
enter
aas
test
les
inc
cmpsb
cli
loope
or
js
cmp
pushf
pop
cmp
xchg
push
xchg
push
pop
pop
mov
sbb
mov
dec
mov
lods
push
dec
mov
aad
setnp
test
push
mov
xchg
incb
pshufw
in
inc
pushl
or
fs
inc
xlat
push
movsl
sahf
cs
fwait
mov
lods
cmc
push
push
cmpsb
xor
add
mov
cld
and
mov
push
sbb
rcl
call
inc
lahf
inc
andl
inc
sbb
pop
mov
imulb
mov
das
sub
fstps
insb
data16
push
fwait
cmp
rolb
js
fdivp
pop
jo
adc
scas
pop
out
adc
inc
xor
add
or
or
cmp
push
mov
xchg
dec
pop
sbb
repnz
adc
cmp
out
xchg
gs
in
push
xchg
pop
mov
jle
repnz
stos
add
adc
jmp
sbb
hlt
movsl
xchg
xor
or
pop
mov
and
sub
xchg
push
enter
add
popw
sbb
pop
fimull
sbb
xor
jmp
xor
mov
or
xor
jno
inc
push
outsl
fs
gs
or
mov
sti
leave
jbe
xchg
andl
dec
add
idivb
pushf
or
cmp
into
jl
and
lods
mov
ret
dec
pop
xchg
mov
fildll
or
std
stc
xor
bt
pushl
popf
mov
push
pushl
ret
pusha
pushl
lea
jbe
pusha
movl
pushf
pushl
pushf
movl
mov
movb
mov
movw
lea
jmp
xor
ret
adc
icebp
cmp
sahf
and
dec
xorb
scas
movsl
aas
cmp
add
sub
pushf
cmpsb
scas
mov
pop
xor
sub
aaa
fdivrl
aas
sbb
loopne
dec
les
popf
sbb
movsl
fwait
das
scas
push
imul
imul
in
push
xorb
add
addr16
jle
movsb
cmp
psubb
xchg
sub
movsl
and
aas
mov
out
mov
lds
movsl
sub
cltd
orl
jb
xchg
stos
xor
sbb
out
mov
pop
addr16
popa
in
inc
jbe
stos
cltd
cltd
fimuls
stos
xchg
lock
lret
fiadds
enter
sbb
lahf
mov
gs
push
mov
cmp
inc
cmp
inc
mov
test
push
iret
sub
stos
push
mov
out
jecxz
inc
lret
orl
mov
out
jne
xor
inc
xorb
fiadds
movsl
sub
or
enter
xor
jnp
sub
pushf
icebp
setnp
mov
xorl
dec
mov
stc
in
or
in
stc
push
mov
sbb
jns
push
push
mov
notl
rcr
cmp
mov
cwtl
fnsave
stc
xor
or
insb
push
cmp
popa
outsl
and
dec
inc
or
mov
jg
dec
ret
mov
sarb
cmpsb
mov
jno
xchg
into
inc
xor
xchg
fwait
imul
cmc
xchg
adc
aam
dec
shll
dec
inc
dec
cltd
test
das
mov
inc
xchg
stos
popf
loope
pop
push
scas
pop
jmp
adc
sbb
out
fwait
test
cmpb
ja
clts
test
lods
push
pop
sbb
xchg
xlat
jl
cmpsb
into
xchg
push
sbb
push
push
clc
test
es
inc
cmp
jae
dec
ja
jbe
sbb
leave
imul
pushf
or
mov
jle
movsl
ret
push
pop
fstl
addr16
jnp
jne
fwait
push
xlat
lcall
inc
scas
push
pop
mov
sahf
lea
mov
push
rcrl
jecxz
mov
dec
mov
sbb
pop
push
mov
into
adc
sbb
jle
and
lcall
cmpsl
jno
lods
sbb
filds
mov
push
mov
cli
inc
add
addr16
xor
adc
pusha
dec
jb
mov
aaa
sub
out
adc
shrl
sahf
adc
cmp
push
xchg
fmuls
and
hlt
cmc
mov
pop
idivl
cmc
and
dec
scas
in
push
roll
push
dec
cmp
xchg
cmp
pop
or
mov
mov
aaa
inc
sub
sbb
inc
push
xor
mov
scas
pop
and
jmp
xor
out
orl
arpl
sbbb
jge
inc
cmp
mov
in
xchg
jle
cmpsb
mov
bound
rolb
stos
test
out
pop
daa
mov
dec
push
cltd
stos
inc
sbb
mov
or
aas
add
sub
jl
mov
push
daa
clc
popf
je
adc
scas
sub
cmp
or
leave
pushf
movl
push
call
movl
pushf
movl
pusha
pushf
push
push
lea
jmp
xchg
jnp
push
fcoml
sbb
pop
jp
pop
jb
sbb
pop
xchg
or
out
dec
cli
mov
xchg
mov
pop
jbe
insl
dec
pushf
mov
dec
lret
mov
inc
ljmp
cli
sub
out
add
pop
lret
adc
push
sub
pop
fsubs
xor
inc
xor
dec
or
add
mov
mov
jns
roll
mov
das
adc
cmp
shll
in
cltd
mov
pusha
icebp
cmp
loopne
aam
gs
xor
xor
inc
cmp
cs
jno
clc
imul
inc
es
mov
cmp
and
lds
out
fstpt
js
shll
xchg
mov
mov
mov
jae
dec
stc
xor
imulb
sub
in
push
xor
mov
cmp
add
test
inc
push
mov
pusha
das
mov
mov
je
adc
jmp
push
push
fstpl
stos
sub
and
push
dec
out
jle
mov
movsl
jle
push
sbb
pop
fcoms
popf
inc
fimuls
adc
jp
cmc
fcoml
sbb
mov
mov
cmp
shll
gs
sbb
fs
aas
or
loop
push
into
jae
fadd
pop
fstpl
stos
and
xchg
pop
push
sbb
cmp
inc
rorb
sbb
lods
lods
ljmp
testl
test
jno
jne
movsl
xor
jae
int
pop
das
add
push
jns
or
cmp
dec
es
push
scas
test
xor
jo
fnsave
loope
cmp
cmp
aas
out
jmp
in
cmpsb
inc
jne
mov
daa
jae
dec
in
pushf
leave
mov
cmp
dec
es
hlt
add
sbb
sti
inc
nop
fbstp
cmp
pop
sahf
cs
sub
pop
pop
mov
idivb
ret
sahf
jmp
std
jno
lret
in
push
sbb
movsl
jl
lods
pop
stos
sub
add
dec
inc
outsb
dec
das
loop
fwait
arpl
xor
in
arpl
cmp
push
push
fildll
mov
mov
lret
xchg
and
jnp
xchg
mov
cmp
push
and
rcrl
dec
jg
xor
pusha
call
pushf
popl
clc
bt
xor
cmc
xor
pushl
call
push
daa
mov
jne
push
jne
cmpsb
gs
aaa
sbb
add
aad
jns
sahf
xor
lods
xchg
pop
lcall
lods
popa
sub
int3
imull
xchg
mov
jb
push
lahf
push
loopne
imul
cmc
adc
adc
gs
xor
je
cmp
jbe
scas
cmpsl
jnp
mov
in
mov
lcall
sub
ds
sbb
in
or
push
cmpsb
lds
lods
lcall
movsl
lret
pop
lcall
adc
mull
fs
js
mov
lds
loop
fcmovnu
ja
int
mov
jno
ja
push
lcall
lds
pop
lcall
lcall
jne
dec
rorb
ret
ret
xchg
jne
aam
loop
adc
push
xchg
xchg
xor
cwtl
pushf
daa
aam
pusha
push
dec
test
push
mov
dec
sub
push
lds
mov
sbb
mov
pop
cwtl
test
and
and
je
sahf
fdivl
jns
fs
mov
inc
sub
jns
test
push
ja
or
je
mov
jno
sub
rolb
mov
stc
add
in
jne
cli
xlat
enter
or
inc
adc
imul
repnz
lahf
dec
inc
repz
and
cmpsb
shrb
lret
adc
rcr
mov
fists
mov
xor
mov
mov
xor
fidivrl
xchg
and
arpl
pop
loopne
pop
test
cwtl
sahf
and
dec
test
imul
cmp
fists
in
push
lea
dec
iret
cmp
leave
js
pop
jbe
push
push
aad
outsl
or
dec
xchg
push
int
add
ss
cs
pop
fwait
sub
or
push
out
xchg
add
jg
in
pop
jbe
das
add
divb
inc
lds
mov
outsl
stc
sbb
sahf
divb
jne
xchg
in
inc
xor
push
imul
dec
out
ja
inc
jmp
arpl
inc
xchg
or
push
mov
std
test
movsb
mov
into
dec
mov
lea
ficoms
imul
xor
movb
int3
and
rcr
mov
push
push
out
sub
push
mov
daa
and
xchg
sbb
jae
fistpl
jmp
or
dec
imul
xchg
cmc
jl
jl
pop
xor
das
mov
loop
data16
inc
dec
outsl
mov
mov
loopne
test
out
es
sbb
out
lods
into
xor
add
lret
into
jns
lret
arpl
shlb
leave
arpl
xor
data16
mov
ja
inc
fcoms
mov
sub
arpl
es
mov
mov
add
fwait
iret
fld
dec
icebp
push
decl
lea
sbb
jb
rolb
xchg
shrb
xchg
xchg
stc
leave
pop
mov
mov
lods
out
xlat
loope
mov
xchg
mov
and
push
or
movsb
add
or
adc
ret
dec
mov
rolb
add
in
jo
push
leave
testl
mov
or
cltd
mov
push
sbb
shlb
in
fwait
ljmp
popa
jns
sub
pop
sbb
dec
shlb
cmp
lret
aas
scas
loopne
loope
addr16
or
rcl
mov
inc
outsl
pop
in
repz
in
fstl
jae
add
sbb
stc
xchg
cmp
push
sub
adc
xchg
inc
repnz
adc
xchg
pop
jl
dec
mov
adc
dec
mov
aas
and
jmp
hlt
outsl
push
cmp
or
orl
inc
icebp
ljmp
lods
xor
outsb
sti
mov
sar
in
inc
cs
dec
icebp
cmpsl
xchg
push
mov
adc
xchg
sbb
das
andl
jb
inc
fxch
mov
push
shll
ds
fcomp
cld
inc
mov
add
dec
jecxz
cld
idiv
push
and
xor
dec
mov
fcoms
inc
ret
xor
push
or
pop
test
addr16
pop
repz
out
mov
int
in
xor
pop
mov
enter
or
lcall
adc
ds
add
int3
mov
sub
shl
nop
sub
fistl
sbb
jl
nop
inc
faddl
daa
scas
mov
loop
seta
pop
cmp
out
jmp
cmp
in
sbb
mov
pusha
add
ss
mov
cmp
loop
sub
cmp
and
fisttps
sbb
dec
mov
mov
sbb
jg
sub
push
rorl
mov
pop
lahf
sub
and
xchg
jg
inc
xchg
mov
xchg
cmp
notl
or
ljmp
popa
lahf
sub
stos
pusha
push
pop
inc
lret
popf
fdivp
notl
cltd
mov
iret
lock
lods
mov
test
cwtl
js
incl
outsb
popa
imul
jmp
push
jo
repnz
add
mov
scas
iret
xor
out
dec
int3
dec
xchg
cs
jmp
cltd
and
dec
mov
test
inc
dec
cmpsb
dec
push
ror
sbb
xchg
and
repnz
inc
fcoml
dec
cmc
mov
pop
in
or
adc
jne
testb
xor
push
lcall
xchg
cmpsl
jb
jl
ss
push
das
and
out
jecxz
mov
mov
popf
lock
subl
xor
add
sub
add
adc
lds
sub
jno
jae
outsl
fcom
dec
notl
adc
jmp
xchg
or
je
divl
xor
scas
sub
jns
sub
sub
jo
push
xorb
xchg
sub
rol
xchg
add
sub
cmp
mov
enter
lret
movsb
pusha
cli
xchg
iret
sub
rol
insb
and
xchg
jle
pop
test
xchg
mov
pop
xor
mov
fimuls
inc
jae
push
call
sbb
movb
jo
mov
jns
pop
imul
push
dec
cmp
pop
ret
add
adc
out
in
xchg
push
push
jmp
mov
add
outsb
cmpsb
sahf
jae
sub
enter
scas
sub
or
aam
aam
test
movsb
push
incb
xor
and
enter
fimull
movb
cmc
imul
fcompl
sub
mov
pop
nop
jnp
sub
sbb
aad
push
push
add
aaa
cmpsb
sbb
mov
scas
dec
xor
loop
mov
enter
mov
mov
out
mov
imul
clc
lret
sbb
push
mov
mov
ja
lret
mov
fisubs
mov
sub
ror
pop
popf
and
shr
pop
mov
jmp
aam
cld
dec
mov
adc
cmp
ficoml
push
jbe
jne
sbb
adc
cmc
test
push
mov
imul
imul
int3
ds
push
std
jns
cli
jns
mov
adc
mov
outsl
loope
fisttpl
push
xlat
push
into
push
fsubs
mov
movsl
adc
add
xchg
mov
add
push
sti
xchg
push
add
mov
icebp
loop
lret
dec
cmc
pop
decl
lea
fstpt
mov
jle
testb
test
es
mov
mov
mov
mov
mov
push
sub
dec
dec
dec
sub
pop
insb
pop
fiadds
idivb
pop
add
mov
inc
orl
aas
cmpsl
sub
xchg
xor
mov
rorb
testl
lret
pop
cli
xchg
push
lret
sub
pop
in
movb
dec
dec
aad
sub
shrb
dec
rorl
jb
xor
xor
sbb
xchg
dec
bound
leave
movsb
je
sbb
ret
cmp
xor
jge
pop
fwait
inc
orb
mov
fcmove
adc
pop
idivb
xor
add
pushl
popf
pushf
pushl
ret
and
pop
jmp
nop
mov
leave
jmp
fsubrs
sbb
xchg
in
mov
push
sub
push
mov
ret
ds
mov
add
mov
out
out
pop
dec
jne
jge
push
fistpl
xchg
or
roll
cmpb
popa
aas
adc
pop
push
int3
xor
cmc
sub
push
addr16
aad
jae
mov
movsb
pop
cmp
xchg
xchg
js
and
pusha
mov
lods
repz
stos
sbb
aas
adcl
push
clc
icebp
pop
sti
sbb
sbb
int3
loop
test
jae
sbb
add
in
push
push
loope
fcomp
test
je
xchg
std
outsb
pop
inc
dec
cmp
enter
sub
cltd
sahf
and
push
xor
adc
pop
adc
mov
test
cmc
mov
inc
inc
fnsave
in
test
cmp
ret
rcr
scas
aaa
xor
fwait
fwait
sbb
mov
jg
int3
popa
lea
sub
imul
aam
in
jns
xor
sbb
js
cmp
das
dec
cmp
clc
jb
inc
jl
mov
cmp
dec
ljmp
pop
mov
pop
push
inc
out
sbb
push
push
jbe
hlt
iret
push
nop
and
push
dec
iret
dec
shlb
jns
outsb
hlt
cmp
call
scas
jno
or
sub
pop
mov
mov
fstl
bound
aas
cmp
adc
je
or
sbb
push
lret
test
ret
cmpsl
rcr
sti
dec
enter
pop
push
sub
push
mov
aaa
addl
int3
stos
repz
in
adc
pop
repnz
inc
inc
mov
mov
inc
rorl
shl
mov
sarl
push
pop
repnz
jo
repnz
adcb
push
inc
mov
xor
ror
ja
xchg
cmp
jns
push
repz
pushf
pusha
sub
stos
push
jae
into
pop
mov
into
inc
xchg
mov
adc
jmp
jmp
hlt
cmp
sbb
hlt
lcall
dec
mov
push
xchg
sbb
sti
sbb
inc
faddl
mov
fdivrl
mov
ficompl
dec
xchg
std
imul
push
leave
imul
mov
mov
jecxz,pn
xchg
mov
pushf
fildll
sub
dec
fdivs
xor
ljmp
fadd
rolb
into
jnp
scas
pop
into
loope
lods
cmp
popf
cmp
fstpl
jg
pop
sbb
sbb
testl
insb
fsubrl
dec
jno
nop
imul
sub
iret
sbb
xlat
xor
inc
cmpsl
xchg
push
pop
lea
adc
cmp
aas
sbb
and
aaa
sub
push
test
jns
and
cmc
dec
or
mov
int3
inc
mov
test
enter
out
push
clc
xor
dec
inc
mov
sbb
popa
in
lods
dec
xlat
and
xchg
fcmovu
mov
dec
std
lret
mov
jo
pandn
testl
hlt
and
inc
pushf
lret
rolb
mov
mov
push
idivb
xor
nop
es
pushf
stos
data16
pop
mov
test
negl
decl
iret
insb
mov
inc
loopne
lods
push
jbe,pt
movsl
sub
push
push
xlat
mov
cli
sub
shll
cmp
bnd
mov
or
or
xor
hlt
stos
icebp
frstor
jge
cmp
insl
lahf
cmp
mov
in
pop
loopne
cmp
cli
push
push
arpl
push
pop
out
in
mov
sub
pop
fs
jns
lret
dec
mov
popf
and
pushf
or
imulb
push
stos
aam
pop
testb
xor
cmp
fdivrs
xchg
or
out
push
pop
mov
cltd
jnp
xchg
xor
mov
insl
inc
adc
cmpsl
js
int3
decb
int3
mov
pop
mov
pop
cmp
ret
idivb
xor
jnp
add
iret
mov
cli
incl
xchg
xchg
fldl
push
dec
imul
mov
bound
sub
mov
lods
xor
xor
add
jne
jmp
jmp
lret
fdivrl
sub
daa
adc
int3
bound
mov
pushl
aas
jge
xchg
insl
inc
outsb
xchg
pop
decb
mov
or
sahf
negl
fcom
pop
in
push
jg
push
cli
mov
dec
mov
jg
and
ss
cmpsl
les
mov
dec
add
idivl
or
cli
inc
das
jl
cmp
xchg
insb
and
inc
sub
cld
jmp
sbb
jo
jb
jl
cmp
xor
cmp
shlb
mov
leave
mov
push
rorl
mov
or
aad
push
and
jle
scas
popa
data16
fwait
jns
and
push
or
jmp
add
out
lea
cmpsb
outsl
in
sub
adc
xlat
loop
and
dec
cmp
popf
jle
add
test
insl
mov
adc
jns
and
xchg
insb
addl
jl
pop
mov
xor
subl
dec
cli
int3
pushf
add
dec
in
cmp
mov
pop
aaa
call
adcb
push
shrl
loopne
xchg
lock
aas
paddusb
cmp
movl
jmp
push
pusha
movl
pushf
pusha
pushf
lea
jmp
xor
clc
bt
xor
pushf
xor
test
cmc
xor
test
pusha
xor
mov
xorl
pushf
jmp
call
xchg
pop
cmpsb
clc
dec
mov
sub
daa
and
test
dec
fdivr
sbb
aaa
data16
xor
push
inc
subb
jae
dec
in
aad
sbb
das
fnstsw
repz
fldt
out
or
mull
jl
push
mov
mov
aaa
std
xlat
data16
fstpl
jae
out
mov
and
push
int3
nop
nop
insb
cltd
mov
orl
loopne
or
popa
out
imul
sbb
pop
xchg
xor
loope
cmp
hlt
sub
xchg
icebp
std
ret
xchg
arpl
nop
sub
push
in
insl
pop
cmp
mov
stos
push
jb
mov
pop
test
mov
mov
push
dec
lea
fcomp
pop
in
push
cmpsl
int
dec
cmpsb
sub
mov
test
std
js
cmp
lret
add
insb
in
outsb
rcrb
mov
add
adc
sbb
lods
arpl
aaa
dec
popw
dec
and
push
mov
pop
mov
jmp
add
jle
in
movsb
push
mov
dec
outsl
mov
mov
mov
pop
loope
jl
ds
lods
jb
negb
js
mov
jge
das
sub
jno
je
pop
aam
test
add
hlt
inc
push
mov
mov
xchg
pop
out
xchg
sub
test
lods
and
inc
inc
cmp
mov
mov
test
sahf
jge
cmpsl
sbb
adc
pusha
fstpt
pop
adc
cs
cmpb
std
pushf
lret
ret
dec
mov
sbb
jns
xchg
cmp
push
not
mov
jecxz
cld
mov
gs
popa
adc
repz
mov
jbe
in
sbb
xchg
adc
cwtl
cmp
mov
rol
adc
mov
fs
fwait
popf
cltd
mov
mov
sti
xchg
jmp
lods
out
pop
xchg
pop
fsub
sbb
xor
iret
insl
mov
and
shlb
aaa
jge
clc
push
and
cmpsb
sbb
out
push
fxch
xor
pop
idivl
or
mov
arpl
outsl
jmp
lea
pop
adc
lret
xlat
xor
mov
fisttpll
loope
aaa
add
loope
mov
fwait
sub
in
sbbl
rcl
or
xor
sti
inc
fisubs
enter
sbb
jne
mov
in
mov
daa
push
cltd
pushf
testl
ror
xchg
daa
pushf
pop
push
insb
xchg
add
lock
mov
sub
push
mov
sbb
push
sbb
xor
iret
loopne
test
js
idivb
fcoms
leave
xor
xchg
cmp
fimull
in
fsts
rclb
int3
ja
arpl
push
aad
and
cmpsl
sbb
stc
jmp
jne
mov
ret
jle
repz
iret
xchg
push
out
ss
cli
push
pop
jle
add
cmp
iret
add
test
rcrl
or
pop
add
adc
sbb
jl
xor
adc
dec
push
aad
daa
mov
push
rolb
aam
outsb
and
movb
xor
and
aaa
sbb
fptan
push
notb
fstps
push
imull
add
xor
push
lret
mov
das
cmp
fcompl
movsb
sub
inc
outsb
popa
jne
push
mov
sbb
mov
out
cs
ucomiss
sub
iret
icebp
nop
or
imul
int
push
add
lock
int
jo
outsb
pop
das
movsl
cli
outsb
pop
or
push
xchg
sub
aam
pop
cs
cmp
mov
jg
divb
add
test
cmp
xor
test
pushl
popf
pusha
pushl
ret
call
call
xor
cmp
xor
cmc
xor
stc
call
pushf
movl
pushl
mov
lea
jmp
push
xor
bt
xor
push
cmc
xor
bt
xor
jmp
stc
xor
clc
push
xor
pushf
xorl
call
jmp
pushf
pushf
popl
cmc
xor
cmp
xor
cmp
stc
xor
cmc
pusha
xorl
push
xor
push
xor
clc
stc
xor
cmc
stc
xor
std
std
pushl
popf
push
pushl
ret
mov
sub
lods
scas
popf
clc
enter
inc
icebp
xchg
pop
pop
test
jno
xchg
fisubrs
aad
push
push
js
cwtl
clc
cmpsl
mov
adc
clc
xchg
int
int
shl
adc
sub
pop
test
lods
scas
popf
lods
jno
lods
faddp
add
cmp
and
ljmp
mov
bound
pop
push
cli
loope
xchg
add
es
jbe
mov
popa
add
fmul
outsb
cmpsl
pop
out
orb
bound
pop
ljmp
mov
xchg
je
add
aam
sub
or
mov
add
mov
movsb
inc
enter
push
sahf
loop
sahf
shr
rcl
stc
dec
pop
push
push
sub
ret
aad
fsts
cmp
cli
test
jb
sub
repnz
push
and
add
mov
jl
pop
add
lcall
test
push
rol
add
sub
push
out
sbb
jne
mov
inc
push
insb
ret
xor
mov
cmp
mov
cmp
or
jmp
xchg
push
roll
cpuid
inc
add
sbbl
jle
repnz
jne
adc
addr16
out
cmp
fcomps
lds
sti
les
dec
dec
cltd
jl
mov
negl
cmp
mov
sbb
sarl
push
xchg
int
jecxz
cs
mov
push
jl
xchg
xor
xchg
fs
xchg
sbb
mov
pop
add
add
sti
add
push
jl
in
sbb
push
sbbb
clc
icebp
movsl
movsl
adc
jb
fwait
xor
xchg
lds
push
arpl
cli
fwait
xchg
negb
int3
les
pop
aas
xor
adc
jg
push
push
mov
mov
addr16
stos
out
sbb
mov
xchg
push
mov
push
scas
leave
inc
pop
shlb
loopne
ret
push
push
and
jae
sub
push
into
mov
mov
or
in
xor
je
adc
inc
push
xchg
cmc
adc
cwtl
aaa
xor
lods
sub
stc
sbb
movsl
lods
cwtl
and
push
sbb
loopne
cmp
popf
or
mov
push
ds
jns
cmpsl
dec
dec
sub
mov
adc
inc
out
cmpsb
pcmpeqb
adc
and
inc
fstpt
stos
rcrb
imul
mov
fwait
mov
push
jns
inc
jo
mov
imul
xor
or
xchg
add
cli
adcb
cmp
cmpsl
dec
add
pop
ficoml
int
mov
mov
popl
and
das
jae
and
mov
jg
xchg
inc
ljmp
add
rorb
sti
out
faddl
adc
out
test
pop
cmp
outsb
mov
jp
pop
out
xchg
and
out
jne
sarl
dec
mov
jg
outsl
mull
mov
pop
inc
inc
inc
int3
push
cltd
fs
and
sub
mov
orb
lea
lods
in
shll
and
pop
js
jne
mov
call
outsb
sahf
into
xorl
adc
lea
jne
outsl
add
xor
js
es
add
sub
xchg
adc
fstpt
stc
cmpsl
inc
cmc
andb
adc
xor
push
nop
and
add
cmp
push
stos
test
iret
dec
out
movsb
cmp
adc
xchg
aam
or
shrl
fnstcw
cmp
dec
lds
jle
fistpl
xor
cmp
pushf
test
lds
sbb
mov
divl
push
cwtl
xchg
in
or
shll
sarb
rclb
xchg
loope
and
mov
push
ficoml
int
ja
movsb
xlat
pop
push
stos
xchg
jns
pop
hlt
jbe
inc
shr
add
inc
out
push
test
fs
shlb
fbld
push
outsb
push
mov
jle
push
jp
add
loope
pop
ds
push
mov
pop
pusha
mov
jp
add
dec
aaa
sbb
jl
add
adc
inc
mov
inc
sub
icebp
aad
sub
add
push
jmp
testb
mov
cmp
test
adc
mov
sbb
mov
cld
lea
adc
out
movsl
inc
out
std
mov
leave
std
test
ss
imul
dec
jg
std
inc
adc
xor
jbe
mov
sub
lret
mov
and
add
rorl
mov
jg
cli
lea
ret
imul
rolb
cmp
addr16
ret
cmc
popa
xlat
inc
xor
popf
aas
cmc
mov
insl
push
pushf
pop
fcompl
call
call
add
sub
push
fsubs
xor
and
mov
insl
adc
lods
xlat
sti
xor
jmp
in
adc
xchg
pop
lea
mov
cli
jmp
inc
jno
pop
shlb
sbb
xchg
cli
fistpll
hlt
pcmpeqw
test
bound
pop
out
xor
mov
sbb
pop
cmp
push
and
rorb
sbb
pop
push
mov
push
in
shll
aam
dec
cs
mov
cs
pop
pop
movsl
pop
arpl
pop
ja
xchg
cmp
xchg
xor
push
pop
mov
push
push
js
adc
sbb
insl
xor
fdivr
fisttps
pop
jmp
adc
out
mov
dec
inc
cmp
ja
jg
add
cmp
lea
aad
ds
notb
lcall
lcall
xor
pop
pushf
xor
iret
jno
in
or
imul
pushl
aaa
mov
insl
adc
mov
xchg
hlt
pop
mov
in
adc
insl
sub
pushf
xchg
mov
leave
cmp
mulb
test
arpl
pushf
ret
xor
cmpsl
xchg
test
stc
orb
inc
mov
mov
cmp
lods
xlat
scas
enter
scas
lods
sbb
dec
xchg
es
push
cmp
das
pop
call
loop
int
outsb
fs
mov
or
or
inc
and
loope
sbbl
pop
pop
jecxz
xor
dec
add
clc
xorb
mov
pop
dec
jmp
xor
pop
or
lds
sti
push
dec
clc
pop
scas
inc
cmp
lret
enter
pop
test
push
lds
out
daa
fneni(8087
mov
lret
push
sub
mov
fnstcw
dec
lock
stc
mov
add
fucomip
cmp
pop
filds
dec
jo
mov
or
sbb
mov
out
addr16
mov
xchg
lods
mov
ja
out
xor
mov
push
or
and
xchg
inc
bound
ljmp
dec
std
insl
lret
test
add
xchg
sub
or
sti
jae
dec
adc
inc
fcoml
je
pop
in
adc
xor
cmc
lea
mov
sub
jle
or
fistpll
or
xlat
mov
or
into
mov
mov
pop
subb
imul
or
or
mov
pop
das
std
in
cmp
and
out
push
inc
mov
sbb
in
cmp
sub
or
andb
sub
in
fldcw
jae
repnz
shlb
fldt
iret
rcrb
jbe
outsl
repnz
lods
jge
shrl
movsl
push
call
mov
gs
int
push
out
push
ficoms
push
js
popa
sub
shlb
jmp
add
sub
inc
inc
push
cmpsl
and
cltd
sub
or
loop
imul
movsb
jns
pop
in
mov
movsl
or
fmull
dec
or
fmulp
or
ds
and
mov
push
stos
pushf
xor
movb
test
xor
stc
push
xorl
cmc
cmp
pushl
popf
movw
mov
pushl
ret
push
xor
pushf
pushf
xor
stc
call
or
pop
out
imul
les
push
lock
jae
iret
out
fcoml
loopne
jbe
mov
pushf
popf
mov
cltd
ss
lcall
cltd
sbb
fimuls
cmp
xor
sbb
pop
lcall
mov
lret
leave
sbb
repz
movsb
subb
cltd
sbb
xor
insl
ss
jp
sbb
in
lods
sub
add
incl
xchg
mulb
or
imul
imul
mov
push
fildll
ljmp
cwtl
mov
sbb
aaa
popa
scas
pop
xchg
add
pusha
push
aas
adc
cmp
mov
pop
dec
inc
xor
pop
sbb
jae
push
les
inc
shlb
xchg
push
test
cmp
pop
xchg
fcomip
jmp
mov
and
xchg
or
bound
std
test
push
jg
jo
pop
inc
jecxz
cmp
mov
jne
push
sti
aad
lahf
push
xchg
enter
stos
ja,pn
movsl
jns
mov
stos
pop
xor
lahf
and
push
jl
xchg
push
jbe
pop
jmp
push
icebp
test
call
lds
in
outsb
sub
imull
mov
pushf
xchg
je
lock
aad
cmc
andl
cmp
ret
es
mov
lret
xchg
scas
push
mov
or
cmp
adc
mov
daa
or
loop
ret
out
mov
pop
xor
cmp
into
push
decl
add
cmpsb
jns
sbb
mov
arpl
ror
stos
xlat
pop
insb
mov
andb
pusha
inc
xchg
inc
xor
aam
inc
or
mov
or
jge
xchg
fs
pop
add
stc
in
movsb
push
jo
jmp
in
mov
arpl
pop
test
adc
aas
xchg
sbb
pop
andb
or
mov
xchg
xor
pop
subb
jge
xchg
xchg
outsl
lea
push
xor
or
insb
icebp
jl
inc
outsb
mov
push
jmp
mov
in
and
inc
or
adc
xchg
push
outsl
push
mov
mov
dec
xchg
pop
out
jl
sub
or
mov
pop
dec
mov
mov
dec
xor
mov
add
in
push
lahf
arpl
mov
push
dec
pop
xchg
jg
sub
shll
out
mov
xlat
pop
cmpsb
cmp
lods
jbe
adc
xor
testl
outsl
add
scas
test
jecxz
int3
sub
jp
push
aam
sbb
push
shlb
cmp
call
add
popa
andl
sahf
jmp
pop
jo
ja
in
jge
lahf
lahf
or
add
hlt
mov
mov
jle
fiadds
sbb
jne
sub
lret
mov
adc
addb
imul
iret
aas
jg
ret
xor
jmp
decb
adc
xchg
or
test
movsb
and
sub
addr16
rcrb
jne
minps
lods
repz
sbb
mov
add
mov
cld
imul
xor
cli
jne
push
negl
cmpsb
mov
cmp
sbb
push
rorb
dec
or
ja
adc
fistpll
cltd
xor
aas
jne
pusha
xorb
ja
rol
test
pop
fsub
xor
pop
push
sbb
loop
jo
adc
ja
in
xchg
data16
test
fs
lea
mov
mov
push
mov
lds
pop
rclb
clc
mov
sti
cmp
inc
lock
xchg
lcall
loopne
scas
or
sub
shrl
push
adc
fildll
lock
aad
pop
push
sbb
pop
fnsave
dec
fisubs
inc
sub
lret
cli
andl
fidivrl
test
cmp
jl
outsb
cmp
xchg
js
mov
lret
insl
cmp
lret
pop
mov
sub
adc
mov
dec
pop
xchg
dec
xchg
push
mov
xor
pop
lret
in
push
mov
jne
subl
or
xchg
jle
inc
push
add
ss
and
jmp
mov
std
jp
cmp
test
adc
xchg
mov
ffree
sti
dec
mov
inc
adc
push
outsb
insb
or
add
int
sbb
mov
adc
push
add
push
add
jb
adc
popa
mov
data16
ret
lds
stc
je
push
inc
pop
dec
push
inc
inc
ds
outsl
leave
add
sbb
andb
fs
or
or
or
movups
or
sbb
cmp
adc
cmp
jmp
ds
jle
xor
inc
shll
js
test
jg
cli
lahf
dec
aad
add
daa
cmp
pushf
ljmp
data16
movsb
cld
je
mov
inc
add
outsb
out
xor
hlt
mov
push
pop
add
sbb
movsl
clc
fwait
lahf
or
push
fnstenv
jns
inc
cmc
cmpsl
sar
lds
lods
fwait
xchg
cli
jp
imulb
xlat
mov
dec
icebp
mov
mov
jbe,pn
or
insl
sbb
dec
and
and
dec
dec
xchg
mov
inc
sub
xor
sub
imul
cmp
inc
rcrl
mov
push
xchg
and
nop
xor
out
xchg
ret
mov
push
scas
stos
jg
or
or
mov
lret
pop
hlt
xchg
fistps
gs
pushf
xor
cltd
cwtl
and
xor
cmpsb
mov
sarb
jae
test
mov
push
in
push
and
pusha
pop
mov
lret
and
ficoml
fcom
mov
and
ja
test
mov
or
rcll
or
mov
std
lods
lock
fcmovnb
ret
iretw
push
push
push
and
fisubl
jns
push
inc
popa
xor
cmpsb
loope
aas
fs
jno
push
popf
adc
cmp
aam
cld
enter
clc
shr
into
sbb
pop
or
fnstenv
in
mov
scas
cli
cltd
and
add
stc
jge
mov
int
sub
cmp
ds
cmpsb
fwait
jns
aaa
in
inc
cmp
js
inc
inc
xchg
adc
addr16
sub
adc
lock
icebp
mov
push
dec
lret
data16
and
std
test
pusha
lock
push
cmp
inc
mov
test
out
xchg
xchg
jo
divb
inc
fnsave
xchg
pop
imulb
cmp
jae
pop
outsb
roll
aam
dec
cs
mov
out
mov
lea
movsb
mov
aas
into
sbb
outsb
mov
mov
fisttpl
inc
movsb
dec
shll
call
and
movsl
sub
ficompl
fcmovne
stos
lret
mov
xorl
js
popf
pop
icebp
mov
sub
cmp
inc
sbb
or
cmpsl
dec
xor
jae
mov
and
sub
xlat
mov
jnp
dec
cwtl
xor
jl
fidivrl
lods
sbb
mov
jne
ljmp
stc
je
sub
mov
mov
inc
es
mov
scas
push
mov
push
cmp
sub
mov
divb
xor
mov
rolb
dec
push
es
dec
sbb
daa
or
pusha
fcmovne
mov
xchg
xor
or
mov
add
mov
loope
pop
popf
mov
aam
ja
jge
xchg
popa
or
xchg
sub
push
dec
mov
pop
pushf
and
jae
adc
stos
cli
mov
rolb
inc
jge
mov
int3
add
and
mov
and
mov
xchg
mov
push
popf
cmp
stc
fistpl
xor
xchg
pop
fisttps
jle
dec
scas
add
je
test
ja
in
rcrl
outsl
cmc
xlat
mov
mov
add
loop
lods
inc
into
sbb
push
xchg
mov
cmovb
fstpl
jecxz
das
rclb
and
dec
roll
ret
add
xor
jecxz
lea
pop
jmp
div
push
repnz
lret
mov
fxch
lods
xor
push
fisubl
out
stos
xlat
jmp
or
cmp
jbe
test
jg
pop
inc
es
icebp
scas
gs
sub
mov
lret
clc
sub
mov
stos
scas
lock
mov
int3
sbb
ret
push
pushf
fcomip
xor
xchg
out
sub
int3
lea
jp
addr16
dec
push
dec
or
stos
popa
pop
out
iret
adc
add
inc
rcrb
push
cmp
icebp
cmp
in
or
mov
add
cltd
stos
cltd
rcll
das
fsub
imul
dec
rol
stos
cmp
out
push
cwtl
and
jecxz
ljmp
sub
mov
xor
xorb
lret
xchg
lcall
insb
dec
inc
and
addr16
lret
jne
es
and
arpl
xchg
inc
cmp
xchg
adc
dec
mov
fnstsw
xchg
and
push
cmp
sub
shl
jne
add
repz
out
or
inc
dec
xor
push
fdivrs
out
dec
leave
sbb
sub
out
ja
jl
jbe
testl
hlt
in
and
and
mov
int3
adc
repz
dec
in
sbb
cs
push
dec
cwtl
ljmp
enter
adc
inc
cmpsb
sub
iret
jnp
lods
lahf
nop
push
push
add
xsha1
cmpsb
mov
jmp
adc
mov
jp
xlat
jle
dec
pop
or
xchg
push
mov
and
ret
xor
dec
or
call
cli
mov
imul
std
leave
xchg
pop
sub
or
sahf
sub
stos
pop
mov
xor
inc
or
call
enter
add
lret
insl
fnstenv
jg
das
xchg
sub
xchg
sbb
add
imul
add
push
xchg
jno
adc
jp
pop
in
cmp
ljmp
test
adc
ljmp
pop
loopne
and
addl
outsl
xchg
popf
xchg
mov
push
pop
pop
pop
iret
insl
test
inc
adc
rclb
sub
cmp
movswl
jl
incb
and
mov
daa
enter
repz
add
push
xor
cmc
xorl
stc
clc
xor
clc
pushl
popf
push
pushl
pushl
ret
cmc
xor
clc
xor
bt
pusha
xor
test
xor
bt
call
movl
mov
pushl
pusha
movl
push
pushf
push
pushf
lea
jmp
pusha
push
movl
pushf
call
pushf
cmp
xor
cmc
xorl
cmp
push
xor
pusha
xor
mov
push
xor
movw
xor
pushl
mov
xor
call
xor
mov
cmp
pushl
popf
pushf
pushl
ret
sub
mov
mov
cs
or
orb
pop
mov
icebp
jg
lret
js
insl
xchg
mov
popa
cltd
pop
cltd
lcall
pop
icebp
sbb
inc
hlt
imul
aas
and
sub
jbe
int
hlt
mov
aas
pop
cmpb
movsb
fwait
scas
add
inc
insl
xchg
dec
cld
mov
cmc
sub
sbb
jge
loopne
enter
jp
mov
jae
ficoms
push
clc
mov
push
sbb
insl
xchg
xor
dec
cmp
enter
or
sub
mov
dec
fsubl
add
cmp
sbb
fstpt
loope
mov
int3
adc
xor
ja
cmp
insl
xchg
test
iret
mov
shrl
int
call
sub
outsb
mov
pop
inc
and
sbb
jnp
lcall
add
stc
in
add
loop
fsub
popa
mov
stos
int3
pop
push
dec
mov
scas
stos
jbe
mov
fcompl
cmp
mov
jbe
call
adc
push
mov
ljmp
inc
shlb
ret
jae
dec
pushf
out
dec
and
jecxz
andl
cmp
push
movsl
scas
int3
add
sub
int
iret
popfw
shr
es
out
fidivs
push
xor
test
and
xchg
rolb
jp
mov
outsl
push
jns
mov
clc
jno
aaa
mov
push
push
xor
inc
jns
pmuludq
lea
aad
mov
push
test
jo
loope
push
hlt
movsb
adc
adc
aas
arpl
lods
xor
sbb
mov
inc
out
ljmp
stc
sub
popf
jle
pushf
mov
add
popf
int
das
jae
sub
mov
in
jl
adc
mov
test
movsl
push
xchg
push
dec
sbb
ja
inc
inc
cmc
jo
ja
movsb
sub
cmp
sub
test
jae
mov
mov
dec
adc
das
outsl
add
loope
std
lret
and
cli
test
cmp
add
std
and
mov
jnp
add
push
iret
setns
mov
ljmp
orl
pop
cmc
stos
add
add
leave
push
repz
roll
adcb
lahf
ljmp
xchg
inc
mov
aam
gs
aaa
ja
adc
mov
push
sbb
enter
loop
lret
jns
nop
jge
scas
sbb
rorb
sbb
mov
cli
dec
out
push
gs
sub
lods
stos
ljmp
lretw
sub
out
mov
pop
sbb
adc
mov
cmp
dec
push
mov
mov
cli
leave
scas
mov
test
jae
lahf
inc
inc
clc
cmc
mov
mov
pop
mov
int
or
mov
xchg
mov
or
ds
and
push
sbb
inc
mov
pop
cmp
sbb
xor
ret
cld
lahf
in
xchg
push
inc
sub
cmp
ficoms
cs
jnp
jg
and
insl
cmp
ds
stos
xor
aam
dec
xor
inc
rorl
jne
bswap
add
push
pop
fstpt
mov
adc
mov
ss
fwait
pop
movsb
inc
jp
add
lcall
scas
or
cmpsb
mov
cmp
cmpb
inc
clc
aas
push
add
add
and
push
sbbb
push
divl
popf
adc
fcoms
arpl
cld
mov
scas
fsubs
mov
mov
jmp
mov
jno
flds
pusha
stos
cltd
sub
and
mov
xchg
lret
sub
popf
cmp
popl
stos
cmp
cmp
inc
aaa
insl
movsl
scas
xchg
adc
and
xchg
cmp
cwtl
jo
pop
mov
test
data16
push
xor
mov
gs
mov
push
mov
jmp
fdecstp
cmp
fcomi
mov
aam
pushf
sub
icebp
jle
imul
adc
push
mov
mov
ss
cmp
push
fcompl
add
cmpsb
movsl
pop
lret
or
mov
imul
orl
sub
test
cmp
ret
out
add
repz
cmp
sbb
adc
frstor
loopne
jb
xchg
dec
bnd
stos
ljmp
ret
cmpsl
xacquire
dec
xlat
mov
rclb
cmp
mov
push
std
faddp
mov
lret
adcb
jge
bound
lret
sbb
push
pop
fcomps
mov
and
pop
or
mov
unpckhps
in
push
push
mov
xorl
imulb
dec
rcrb
cld
jmp
lock
lock
jne
test
pop
jp
or
cltd
loope
pop
sarl
icebp
xor
mov
or
outsl
mov
mov
push
fnstsw
mov
lods
adc
lea
pop
mov
mov
ja
xchg
ja
add
and
jb
out
inc
in
sbb
push
nop
jns
dec
sbb
push
inc
xor
push
xor
hlt
mov
and
and
push
orl
loop
cmp
mov
stos
das
sbb
loope
scas
xor
xor
dec
daa
aam
icebp
sbb
xchg
subb
in
hlt
cmpsl
aaa
loopne
add
in
mov
xor
mov
xchg
fdivl
mov
fsubr
mov
add
pop
test
jle
pop
mov
insb
out
xchg
enter
addr16
pop
rorl
jmp
mov
test
bound
push
mov
inc
iret
aas
lock
adcl
arpl
xchg
mov
lea
xorl
out
push
enter
pushf
pop
add
lock
cmp
or
imul
les
xchg
adc
into
shrl
mov
mov
jae
fbld
inc
into
jg
adc
popa
jge
mov
gs
mov
cmp
push
iret
add
mov
sti
icebp
xchg
cmc
lcall
xorl
mov
or
inc
xor
pop
int
jne
incl
ljmp
test
and
mov
adc
push
insl
movsl
ss
inc
mov
cmp
add
xchg
daa
xchg
sub
imul
push
mov
lds
or
out
rclb
jns
sub
dec
mov
push
lods
add
fdiv
je
pop
jns
mov
call
mov
aaa
inc
ljmp
and
add
fs
xchg
call
fildl
aam
stos
rcrl
vmread
pop
testb
loopne
dec
ja
xor
sub
movsb
scas
cmp
std
cmp
test
clc
js
mov
xchg
adc
mov
jge
jecxz
pop
mov
leave
or
iret
dec
lods
gs
push
pop
jl
xchg
xor
lahf
pop
xchg
jno
sub
aam
popf
adc
iret
pop
mov
sub
in
and
in
and
mov
loopne
sbb
lds
outsl
int3
xchg
sub
mov
aam
ds
rolb
add
int3
lock
out
push
or
or
in
clc
fwait
xchg
cli
aad
jns
or
idivb
or
cwtl
jmp
inc
and
iret
arpl
jmp
pushf
jmp
lret
fwait
and
inc
add
shll
jb
or
mov
cmp
mov
or
fwait
dec
in
or
ss
mov
mov
insb
mov
js
add
jne
sbb
cmp
imul
fiaddl
mov
push
dec
movsb
sub
sti
fldt
xchg
shl
stc
gs
mov
loope
sahf
dec
imul
jp
lcall
ljmp
push
cmp
pop
mov
repz
sbb
subb
mov
mov
imul
push
scas
adc
add
cltd
rcrb
nop
fidivs
sti
dec
call
push
mov
iret
push
mov
push
cmpsl
mov
addr16
sub
cmp
xlat
in
xor
gs
cmp
pushf
dec
mov
xor
xor
add
dec
fucomi
imul
mov
xor
scas
insl
push
dec
outsl
clc
cmp
fildl
pop
inc
fidivrs
insl
dec
les
mov
scas
test
sarb
jb
push
lea
dec
xchg
xor
aas
hlt
adc
jbe
dec
mov
aad
test
fsubrs
lret
cmp
leave
fs
aas
lods
notl
insb
dec
jge
jnp
js
add
mov
enter
popl
repnz
popf
pop
mov
mov
adc
dec
fsubl
add
lods
aad
aaa
arpl
sarb
fmulp
dec
cmpsl
out
push
add
cli
pop
mov
adc
cmp
les
inc
xor
xchg
inc
xor
aam
inc
xchg
pop
rcrb
or
aas
sbb
push
jle
sbb
repz
sub
xlat
xor
fwait
inc
fst
clc
dec
std
sti
dec
int
pushf
sub
push
in
xchg
int3
lock
cmp
xor
test
mov
int3
sbb
push
xlat
sub
fidivrs
push
adc
out
jge
pop
mov
imul
push
imul
add
pop
in
testb
movsb
insl
adc
sub
insl
pop
and
jns
adc
lahf
xchg
popf
push
pop
out
sbb
aam
and
inc
in
daa
adc
sbb
out
dec
fwait
xor
into
outsb
push
dec
xchg
inc
xor
or
or
pop
jmp
jl
and
int
xchg
pop
and
shll
pop
cmp
movl
xor
leave
outsb
sbb
push
mov
ss
movsb
cmp
mov
mov
sbb
xlat
fwait
cmc
jle
mov
inc
adc
stos
out
sub
push
and
mov
mov
push
outsb
sub
xor
into
lahf
lahf
outsb
lock
adc
outsb
push
movsb
sub
xchg
int
sti
mov
jmp
aas
ds
aaa
mov
mov
and
dec
nop
push
loopne
and
scas
lds
stos
sahf
or
imul
push
insb
sbb
and
pop
repz
push
insb
stc
push
out
or
dec
sub
sbb
jge
sarb
add
js
sub
push
inc
sbb
insb
sbb
fs
lods
loop
arpl
pop
cmp
inc
push
inc
cs
jl
xchg
dec
or
pop
out
ret
loop
arpl
movsl
inc
or
mov
mov
in
ret
daa
test
std
cmp
iret
push
sub
cmc
mov
xchg
ror
icebp
js
int
lea
fiadds
pushf
mov
mov
pop
push
mov
push
loop
mov
in
mov
sbb
push
add
or
and
sbb
and
add
mov
pop
gs
fisttps
mov
frstor
dec
fistpl
mov
nop
mov
in
fidivs
pop
dec
jge
and
cmpsl
cmpsb
pop
pop
aad
ss
lods
mov
xchg
xor
arpl
sbb
cmp
cmc
pop
roll
xchg
cmc
adc
scas
shlb
incb
adc
mov
push
xchg
loope
inc
call
jo
and
inc
decl
mov
int
dec
sbb
je
jle
mov
pop
inc
into
add
adcb
outsl
into
fs
pop
movsl
xor
scas
out
into
aad
jecxz
mov
mov
jbe
mov
loope
test
das
sbb
sbb
sbb
lcall
call
cmpl
pop
mov
add
add
add
mov
mov
push
je
mov
mov
mov
pop
pop
mov
insl
stc
into
push
and
call
ud1
xchg
enter
lahf
ret
outsb
add
pop
inc
js
divl
mov
xor
add
ja
xor
mov
dec
and
ss
mov
rcrb
stc
mov
iret
pusha
cmpsb
call
push
outsl
sub
xor
inc
push
cmp
inc
andb
push
rcr
fstpl
cmpsb
lret
jle
adc
mov
jbe
rcrl
mov
and
lods
or
push
stos
cmp
pop
shlb
dec
call
pop
mov
cmovae
lock
and
testl
into
push
ds
pop
popa
fwait
leave
cmp
sarl
sbb
and
jnp
mov
pop
mov
arpl
mov
xchg
xchg
cs
jle
pop
paddb
jge
shll
mov
xlat
lahf
xchg
sbb
adc
into
mov
daa
push
enter
ss
inc
add
sub
popf
lea
subb
push
mov
hlt
jl
dec
shl
xor
das
xor
adc
in
pop
stos
cltd
and
test
mov
adc
fs
adcb
in
sbb
sbb
push
enter
or
lods
das
repnz
xchg
cs
mov
mov
repz
gs
and
outsl
js
loopne
cld
pop
pop
xchg
addr16
daa
add
mov
xlat
sub
mov
lds
add
sub
inc
inc
aam
vaddsubps
shll
xchg
popa
daa
hlt
idivb
push
pop
xorl
pmulhw
or
inc
mov
aaa
sarb
jno
stc
daa
mov
int
int3
inc
inc
sbb
mov
outsb
fnstcw
jecxz
cmpsl
dec
imul
pop
cli
daa
sbb
push
jg
adc
sbb
rclb
jns
inc
cmp
dec
mov
lods
fistpll
xor
loope
dec
rclb
add
es
outsl
enter
xor
cmpsl
repnz
dec
xlat
push
jne
and
ficompl
add
icebp
dec
adc
adc
stos
mov
mov
ljmp
dec
pop
adc
test
push
sub
aam
pop
cmp
cmp
lahf
inc
cs
pushf
pushf
popl
test
clc
xor
call
pushf
movl
push
movl
push
movb
lea
jmp
jmp
xorl
stc
xor
bt
movb
xor
clc
xor
movb
clc
pushl
popf
movb
pushl
ret
push
call
pusha
pushl
pushf
popl
movw
xor
clc
xor
jmp
call
movl
jmp
pushf
push
lea
jne
push
pushf
pusha
movl
pusha
lea
jmp
jmp
push
pushf
popl
test
stc
xor
call
movl
pusha
push
lea
jmp
test
pushl
popf
push
pushl
ret
pushf
lea
jb
push
pushf
pushf
push
mov
lea
jmp
push
pushf
pusha
movl
movb
pusha
lea
jmp
jmp
jmp
push
dec
in
dec
xchg
mov
sbb
xchg
nop
mov
mov
aas
xchg
addr16
mov
test
xor
dec
xor
das
inc
cmp
dec
pushf
sub
pop
cwtl
xchg
add
push
mov
or
pop
ja
lret
xchg
data16
imul
repz
andl
cli
sbb
sbb
xor
or
sub
test
jbe
mov
fsubs
sub
jne
jb
xchg
or
scas
icebp
or
push
testb
js
out
and
lock
stos
lret
mov
enter
or
xchg
movb
or
pop
add
daa
lods
mov
addr16
mov
sbb
cs
mov
cmpb
in
push
ret
xor
test
mov
dec
mov
imul
pop
mov
popa
push
dec
shl
cmp
loope
fisubs
in
add
notb
cltd
faddl
lock
jp
adc
cltd
xchg
xlat
aam
test
push
in
xchg
fs
cmp
mov
add
cmp
popa
push
subl
subl
outsl
mov
jle
icebp
daa
es
add
jb
int
es
mov
xor
mov
xor
std
leave
lahf
movb
inc
stc
enter
jb
or
jb
inc
dec
ja
jecxz
sub
lahf
out
decb
mov
test
mov
pop
inc
xchg
pop
daa
or
insb
movsb
pop
cld
ficompl
addr16
jae
pop
fsts
mov
pop
rolb
nop
sub
and
add
sbb
in
xchg
test
icebp
in
pop
pop
lret
inc
lods
mov
jnp
in
cmp
aas
fisttpll
mov
loop
sub
lret
push
shrb
addr16
pusha
pop
dec
mov
cmp
les
sbb
push
lods
in
fwait
cmp
adc
inc
cmp
js
mov
mov
es
mov
cmp
xchg
xor
pop
dec
int3
jecxz
pop
ret
inc
pop
cmpsb
imul
pop
shrb
push
or
icebp
xor
loop
jne
mov
pop
ss
and
xchg
leave
mov
leave
mov
jl
or
sub
aas
add
pop
cltd
js
rcrb
popf
jle
mov
pop
sub
mov
xlat
lcall
test
shlb
stos
not
jno
or
or
mov
jl
mov
outsl
into
stos
arpl
cwtl
and
push
push
adc
je
xor
outsl
inc
mov
shll
int3
hlt
inc
pop
mov
std
or
stos
popf
cmp
push
jne
jno
xor
imul
fwait
mov
loope
mov
add
push
in
jp
hlt
in
sbbb
sub
mov
xor
nop
gs
adc
loopew
lret
xor
outsl
fldcw
mov
and
pusha
jae
cmpb
out
insl
movsl
mov
or
sahf
lret
data16
sub
pop
pop
adc
jb
cmc
pushl
leave
mov
xor
mov
lret
push
sbb
lods
jae
or
and
repz
test
lea
jg
cmp
mov
inc
pop
or
daa
lods
fwait
adc
std
mov
add
and
hlt
dec
sahf
add
in
insl
orps
xlat
or
enter
adcl
pop
xchg
cli
pop
out
or
test
cmp
loope
mov
aad
ss
cmpsl
jae
outsb
add
movl
cmp
sub
mov
popl
je
xchg
mov
mov
add
aaa
sub
cwtl
sbb
test
mov
std
aas
jmp
pop
loope
mov
mov
lcall
repz
push
arpl
mov
inc
fildl
es
dec
pop
cmp
pop
cmp
repz
adc
sbb
stc
repz
out
jge
inc
rcrl
push
adc
jbe
js
out
push
outsl
sub
clc
pop
cli
pop
add
repz
mov
jmp
mov
mul
imul
jge
mov
repnz
fnstcw
jle
out
add
bound
stos
test
js
inc
lret
dec
mov
mov
sbb
shll
pushf
test
das
in
scas
dec
xchg
mov
outsb
mov
and
xchg
jnp
lods
dec
rclb
cwtl
mov
push
test
stos
popa
das
dec
pop
mov
fstpt
iret
leave
mov
sub
stc
mov
jmp
inc
fcmovne
dec
push
xchg
stos
subl
mov
mov
adc
and
inc
test
jae
mov
fdivrl
xchg
pop
and
jns
xor
aaa
cmpsl
or
sbb
cmp
add
shll
inc
lret
dec
and
mov
js
inc
xchg
fstpl
rorb
adc
xor
hlt
icebp
push
insl
scas
gs
sarl
out
adc
jmp
sbb
out
xchg
into
jnp
sub
inc
push
mov
jbe
in
orb
fsubs
add
orb
cltd
or
xchg
add
or
pop
adc
add
xor
and
cwtl
or
add
mov
dec
rcrb
sbb
sbb
in
cmpsb
mov
pop
inc
jge
dec
test
inc
sbbb
cld
aaa
pop
push
xchg
push
xchg
imul
js
dec
xchg
push
nop
mov
pop
ja
inc
sbb
enter
cwtl
push
mov
stos
pop
push
mov
pop
mov
mov
pop
outsb
sbb
cld
out
inc
test
aaa
shl
jbe
lods
jp
mov
divb
jne
lret
dec
sar
ss
call
cmc
pop
jp
mov
push
shlb
movsb
sub
jns
aas
stc
arpl
lcall
loop
xchg
int
adc
add
shl
jo
or
iret
mov
jecxz
cmc
xor
loope
inc
cmp
fwait
loopne
sbb
pop
aad
xor
xchg
jo
das
leave
int3
rol
negb
push
dec
pop
push
jl
or
mov
into
outsl
stos
jbe
dec
mov
jle
loop
jmp
cli
sar
sub
pushl
xor
loopne
dec
aas
ret
mov
pop
imul
sahf
mov
pop
mov
add
aas
push
xor
mov
fistl
mov
jle
inc
int
aad
decl
iret
push
clc
dec
push
rorl
test
push
mul
xorb
mov
dec
xchg
pop
dec
push
add
mov
aad
or
inc
sbb
enter
sti
mov
jl,pt
push
jo
fistpl
jge
std
mov
push
arpl
and
cmp
xchg
sti
mov
rolb
hlt
cmp
dec
ret
sahf
scas
jge
cmp
out
ja
inc
jno
vmwrite
and
jns
mov
xchg
and
iret
xorb
cmpsb
icebp
xchg
lret
mov
clc
push
cld
lods
xlat
kxorb
pop
sub
aam
imul
loopne
push
daa
idivb
int3
mov
or
aaa
dec
pop
icebp
cmp
jge
mov
cmp
aad
orl
pushf
popl
cmc
pusha
xor
movl
test
xor
pusha
jmp
sbb
mov
nop
aad
inc
jno
test
push
js
sub
push
js
jecxz
xor
xchg
out
xchg
mov
push
hlt
adc
idivl
mov
push
push
pop
mov
lods
pop
cmp
mov
test
into
mov
xlat
add
sbb
lods
mov
sarl
outsb
mov
cmc
mov
dec
fcomps
aaa
adc
adc
cli
jp
push
popf
lods
sub
in
in
inc
push
jnp
xor
arpl
inc
sbb
pop
mov
push
pusha
push
cmpsb
mov
mov
and
push
scas
ljmp
pop
fsubl
pushf
mov
in
shl
lods
lret
lret
clc
stos
jno
lret
mov
ss
popa
dec
mov
test
dec
jg
mov
xor
pusha
rclb
and
pop
xchg
cmpsb
lret
inc
or
sbb
insb
xchg
mov
subl
push
inc
xlat
dec
in
push
mov
fnstcw
cmp
cmp
shll
gs
xor
int3
dec
movsb
addr16
xor
inc
fwait
pop
cmp
out
scas
int
adc
push
cmp
stos
shlb
xor
dec
ja
fucomp
pop
fwait
jbe
mov
sub
call
xchg
inc
adc
push
mov
cmp
cmpsb
xor
mov
fcoms
and
sub
ret
sub
ds
cmp
mov
inc
imul
xorps
ljmp
xchg
sub
arpl
fsubrs
jb
cmp
movl
push
mov
nop
adc
mov
jp
cmp
jns
inc
outsl
enter
aam
jl
adc
push
pop
in
jns
pop
jmp
idivb
jp
clc
hlt
cmp
gs
fdivrl
mov
popf
in
cmp
fidivl
jmp
subb
push
cli
inc
push
nop
xor
mov
jg
adcl
insb
xor
pusha
js
adc
add
jle
test
mov
inc
fcoms
movsl
xchg
inc
ss
jne
mov
lods
int3
or
icebp
popf
adc
scas
sub
data16
xchg
lods
cmpsb
inc
xor
inc
fmul
movsl
in
jne
cli
jg
inc
int
lret
insl
out
faddl
lock
add
xor
je
pushf
dec
push
inc
iret
pop
cmpb
jae
cmp
sbb
mov
fchs
xchg
jbe
add
mov
ret
sbb
mov
scas
cmpsl
cmpsb
jnp
iret
sbb
lock
aad
hlt
push
jmp
into
jns
or
adc
and
jecxz
addb
out
mov
daa
push
rcll
out
sbb
dec
fiadds
sbb
xchg
inc
mov
jge
notb
mov
jns
int
push
cmp
mov
outsb
xor
and
popf
sub
daa
xlat
ret
xchg
enter
inc
jl
xor
jg
lahf
aaa
adc
movsb
jb
push
ljmp
idivb
je
pop
pop
pusha
movb
pushf
popl
pushf
bt
xorl
cmp
clc
xor
cmp
jmp
pusha
movl
call
movl
call
push
pushf
movl
call
call
xor
stc
call
pushl
popf
pushf
mov
pushl
ret
jmp
pushf
call
movl
pusha
lea
jmp
xor
pusha
stc
xor
clc
cmc
xor
pusha
xor
clc
test
xorl
test
xor
pushf
cld
pushl
popf
movb
pushf
pushl
ret
pusha
pusha
pushf
popl
pushl
xorl
mov
stc
xor
pushl
clc
xor
bt
xor
jmp
mov
movl
push
pusha
lea
jmp
mov
fnsave
popa
ret
cmp
inc
test
push
jno
and
aam
ret
repz
push
lea
mov
dec
mov
addr16
inc
dec
bound
int
out
leave
stos
mov
pop
xor
and
stos
mov
mov
or
push
popa
std
jg
push
jae
inc
add
cmp
jne
mov
loopne
js
xor
jcxz
loopne
les
fists
or
in
es
fcompl
cmp
cmp
adc
xchg
test
fwait
std
mov
sbb
pop
stc
sbb
icebp
jae
mov
lret
cmp
fisttpl
leave
enter
jmp
sahf
xchg
prefetch
jl
test
xchg
pushf
test
out
cmpsb
mov
pop
sahf
loopne
mov
adcb
and
cld
and
sub
std
and
ds
pop
push
fsubs
jb
ds
push
cwtl
sub
pop
jge
test
repz
sub
push
scas
icebp
subl
int3
insb
lea
mov
mov
inc
fucomip
iret
push
repnz
out
aas
mov
test
pop
mov
push
push
sbb
or
dec
push
cmp
outsl
pop
push
pop
mov
test
jb
lods
lods
das
sub
mov
or
mov
dec
inc
jnp
ss
ss
arpl
test
add
mov
lcall
idivb
jno
adc
in
test
push
xor
clc
bt
xorl
pushf
cmc
xor
pushf
mov
xor
cmp
xor
jmp
cmc
xor
bt
xor
call
dec
push
cmpsl
inc
out
xchg
add
mov
push
pop
push
jo
pop
out
mov
and
sbb
dec
or
inc
rcrb
add
inc
mov
xorl
sbb
je
mov
fnstenv
lock
fdivr
cmp
push
cmp
inc
xor
adc
and
mov
pop
bound
in
in
pop
adc
repz
imulb
ss
xor
insb
cld
or
xor
dec
and
add
jns
loop
mov
xor
fdivr
dec
rolb
jl
add
or
sub
push
leave
inc
mov
repnz
add
mov
dec
shr
push
push
dec
and
cmpsb
cli
cmp
xor
fnstcw
cbtw
xchg
jno
xor
and
mov
mov
mov
adc
jnp
in
dec
adc
push
push
mov
lret
movb
aad
int
xchg
adc
xchg
pop
push
mov
pop
stos
es
xchg
inc
insb
pop
lahf
jg
dec
jb
in
inc
ret
push
stos
xor
inc
aas
sub
lcall
cmpsl
nop
push
xchg
xor
test
inc
and
and
mov
or
aad
movb
jae
mov
sbb
ja
add
mov
pop
ret
popa
cltd
test
push
test
add
push
orb
jmp
or
aam
data16
jb
ficoml
cld
es
dec
fidivrs
push
xor
std
or
inc
inc
dec
add
icebp
sbb
and
cli
pop
repz
push
mov
mov
leave
aam
enter
das
fcoms
mov
sbb
mov
inc
add
inc
jg
outsl
sub
outsb
pop
leave
out
repz
push
fstps
xchg
sbbb
shlb
pop
movsl
test
mov
add
pop
loop
adc
push
movsl
test
ficompl
filds
fdivs
in
sbb
cltd
hlt
mov
cltd
mov
out
add
mov
jnp
data16
dec
je
daa
pop
xchg
sub
jecxz
out
xchg
insb
cmp
or
push
nop
into
pop
iret
pop
add
pop
lods
fucomip
ret
inc
lret
jge
push
cmp
imul
jb
mov
push
cmpsb
rclb
jbe
inc
jg
cwtl
xor
and
and
lret
push
paddsb
ds
out
or
mov
dec
cmpl
cmp
dec
push
cmp
aaa
inc
sub
int3
inc
or
jne
and
mov
hlt
xchg
fiaddl
call
pop
je
imul
js
addr16
or
fstpt
cs
cmpsb
mov
test
jge
mov
jne
push
mov
add
icebp
fisttps
in
ja
dec
iret
adc
mov
daa
loopne
jp
mov
leave
fnsetpm(287
std
mov
dec
fs
lret
mov
sub
push
xor
das
fwait
mov
or
xor
dec
fldt
pop
dec
cmp
add
std
jns
inc
fwait
cmpsb
sub
cmp
jg
movsb
mov
mov
int
in
or
movsl
push
rolb
repnz
jno
cwtl
mov
push
call
add
in
sub
insl
push
xlat
push
xrelease
jl
add
xchg
mov
mov
xchg
leave
jg
xchg
addr16
in
mov
cmp
stos
mov
push
inc
inc
subb
cmp
dec
in
mov
pusha
jg
adc
popa
nop
jb
xor
xor
loope
push
faddp
sub
aam
xchg
repnz
xor
xchg
sub
push
iret
aad
clc
xchg
jle
or
sti
jle
inc
mov
fisttps
mov
xchg
lods
vucomiss
sub
mov
push
sarb
xchg
mov
adc
sub
jbe
cmp
dec
nop
fcomip
push
iret
mov
push
dec
out
sarb
insb
push
scas
pop
std
ret
add
mov
adc
les
cmp
mov
jae
inc
jmp
mov
hlt
sub
mov
pop
xchg
hlt
test
add
adc
push
sarl
mov
clc
idivb
push
and
leave
push
pop
sub
mov
scas
in
jge
pop
roll
pop
pop
dec
sub
push
adc
inc
mov
popf
loop
cmp
ret
dec
cmpsl
dec
shll
lret
add
movlps
push
mov
movsl
jnp
xchg
pop
idivb
cmp
adc
xchg
dec
out
pop
sub
test
pushf
jle
mov
inc
aas
cmp
and
je
fsubrs
xor
test
pop
ds
push
icebp
loopne
inc
adc
cmp
pop
adc
xor
xchg
roll
clc
repnz
icebp
jecxz
loopne
sbb
ficomps
xor
cmpsb
push
pop
inc
int
roll
xchg
push
cmc
arpl
sbb
icebp
xlat
aas
pusha
jmp
and
mov
pushf
mov
pop
popa
jle
pop
sbb
pop
lret
jb
into
aad
les
and
psubq
jne
dec
rclb
fsubrs
xor
and
mov
std
sub
mov
mov
xor
pusha
mov
rclb
mov
push
fmuls
jmp
adc
xchg
arpl
mov
outsb
sbb
faddl
jge
xor
mull
imul
inc
cmp
ja
mov
mov
int
sbb
leave
loope
push
inc
add
dec
ljmp
popa
ljmp
lret
jb
dec
cmp
aad
push
mov
lret
ret
add
outsb
ljmp
cmp
addr16
xchg
dec
in
aam
push
lds
or
add
testl
aas
scas
sbb
inc
mov
dec
jo
cmp
push
or
mov
inc
mov
int
cmp
ljmp
outsl
scas
dec
leave
es
xchg
push
or
pop
jae
jge
dec
jne
inc
mov
jo
das
pusha
jge
imul
cld
lock
add
pop
icebp
fcompl
sbb
sbb
mov
in
mov
fadds
sub
jns
or
imul
xor
jno
push
and
outsb
sbb
pop
inc
aam
jmp
popa
andb
outsb
dec
arpl
rcll
mov
cmp
sbb
lock
shl
jb
mov
mov
scas
das
mov
fs
mov
aad
dec
rcrl
in
sbb
pop
mov
xchg
ds
mov
mull
rclb
and
lcall
clc
dec
int3
or
sbb
jecxz
jno
and
pop
mov
and
daa
xor
sbb
scas
mov
psubq
in
repz
insl
int
into
push
pop
sbb
lret
outsl
dec
ss
cltd
lea
mov
aaa
jne
stos
sbb
cs
mov
fmuls
incb
pop
fwait
out
ljmp
mov
adc
xor
fmull
or
add
divb
loopne
add
and
ljmp
decb
cli
inc
loopne
lods
inc
jne
in
sbb
int
shrb
add
lods
call
lock
lahf
sbb
movsb
ja
cmp
sbbl
ret
cwtl
insb
inc
ljmp
loopne
adc
cmc
push
popf
inc
jg
xchg
jbe
add
add
mov
sub
cmp
test
test
push
dec
pop
xchg
xchg
dec
cltd
jmp
insb
mov
or
push
ret
push
dec
adc
cmc
push
pop
sub
fistpll
sbbl
hlt
arpl
jb
xchg
push
lock
add
or
icebp
cmp
arpl
push
fs
xchg
cmp
or
jp
jge
push
rcrl
sub
and
out
lods
jl
mov
push
mov
dec
lods
xor
mov
add
inc
mov
int
test
jns
push
addl
fmull
inc
inc
lahf
dec
addr16
xor
push
sti
xor
pop
sahf
add
dec
xor
mov
mov
cmc
inc
fisttpl
push
popf
into
mov
lds
xchg
mov
pop
inc
enter
mov
xchg
xchg
test
pop
lods
mov
mov
imul
sub
mov
sub
outsl
mov
int3
ja
mov
loop
sti
jge
lcall
add
movsb
and
lret
push
inc
add
push
mov
sub
mov
xchg
cwtl
mov
adc
lret
push
shll
aad
frstor
and
adc
popf
sbb
rclb
or
jp,pt
and
dec
sub
xor
rdmsr
shll
les
cli
xor
negb
stc
ds
jge
bound
pop
negb
or
push
ljmp
sti
leave
dec
mov
popa
lahf
mov
mov
add
shll
dec
mov
repz
mov
dec
xchg
sub
lock
out
jecxz
pop
or
fnstcw
icebp
mov
and
arpl
jae
dec
outsl
sarb
sbb
sub
in
jmp
sarl
mov
int3
xchg
pop
sub
fwait
mov
xchg
adc
mov
call
mov
popf
je
int3
idivb
push
popl
xchg
fs
testl
in
push
xor
mov
dec
cmpb
gs
inc
mov
cmp
xchg
xor
test
sub
cmp
es
dec
popf
mov
jge
inc
ficompl
pop
adc
fcmovne
pushl
or
test
leave
scas
sub
ljmp
cwtl
js
or
pop
sahf
cmp
lds
inc
and
leave
cmp
scas
or
push
scas
add
jmp
scas
adcb
stos
je
sbb
cmp
xor
call
cmp
push
pusha
mov
outsb
mov
popf
sbb
mov
nop
and
imul
cs
jo
xchg
lods
iret
mov
xchg
pop
xchg
cmpsl
cmp
pusha
rdmsr
adc
pop
adc
int
add
dec
xchg
icebp
sub
sub
fdiv
mov
xor
nop
aad
shlb
xchg
sbb
mov
insb
lods
out
pushf
lcall
inc
test
mov
lods
adc
imul
adc
ficoml
jl
xchg
fldt
push
test
mov
divl
insb
dec
cs
push
std
xchg
sbb
xchg
fsubs
fstpl
lods
jns
outsb
xchg
jae
sqrtps
add
pop
sbb
inc
fsubp
movl
shl
mov
std
sub
xchg
jmp
clc
add
and
jecxz
pop
in
jnp
outsb
cld
dec
jecxz
stos
cmp
int
roll
lret
jne
ds
sbb
mov
pop
int3
jne
cli
repnz
push
scas
dec
imul
mov
mov
mov
and
and
or
jl
leave
ja
xor
ret
mov
iret
scas
sbb
sub
jbe
push
outsb
popa
pop
fists
pop
pop
pop
scas
push
divl
mov
dec
xlat
mov
jge
cs
mov
lods
movsb
xor
pop
sub
and
movsb
xor
xchg
adc
push
push
fildll
notl
mov
outsl
mov
fistl
sub
add
mov
sub
xor
sahf
push
in
test
iret
push
pushf
xor
ljmp
es
push
pop
sub
into
add
cmp
mov
pop
jmp
test
cmpsb
pop
insl
dec
sub
into
mov
mov
mov
scas
sbb
or
xlat
push
ret
out
fistpl
rorl
test
push
xor
fistpl
pop
inc
jns
fcmovb
dec
lock
and
mov
pop
or
test
fistl
lock
push
mov
subl
enter
cmc
jmp
gs
jmp
decl
addr16
lret
dec
sahf
repz
cmp
lret
and
cmpsl
daa
fstps
sbb
inc
ljmp
fdiv
sub
lds
sti
out
pop
jnp
jo
push
sbb
lret
inc
jp
xchg
push
mov
sub
mov
xor
lret
dec
sar
adc
push
aaa
xchg
daa
mov
pop
dec
ljmp
clc
sub
push
clc
cmp
lcall
movsb
jb
cmpsb
enter
shl
leave
xor
push
xlat
fimull
mov
rorb
stc
je
push
mov
add
push
fwait
cltd
test
push
stos
cmp
inc
adc
les
sub
cmpsl
dec
inc
jbe
into
lahf
inc
std
lea
out
sbb
dec
into
fwait
push
jno
test
ret
cld
or
je
xor
repz
in
sub
rorl
and
aad
inc
gs
jns
cmp
test
sti
cmp
pusha
mov
push
pushf
in
leave
mov
add
cwtl
push
mov
jp
inc
in
sbb
call
inc
cs
out
loop
add
push
pusha
lea
mov
sbb
into
pop
cltd
add
stc
jb
das
sub
mov
mov
frstor
cmp
push
aas
insl
rcrb
iret
and
add
xor
pop
push
ljmp
pop
mov
and
ffreep
inc
jecxz
insl
lcall
fwait
sahf
dec
out
or
jno
push
sub
clc
inc
ds
sti
out
ds
fistpll
push
cmpsb
dec
xor
mov
movsl
cmp
inc
ret
aas
and
adc
scas
lock
xor
loop
sbbb
sub
inc
out
mov
mov
fstps
xor
clc
fcomps
jp
ja
mov
mov
sub
pop
mov
cmp
sub
jae
pushf
leave
js
sub
jl
mov
cmp
sub
std
mov
mov
jno
mov
dec
aas
or
imul
test
stc
sbb
push
enter
mov
xlat
mov
dec
mov
fnsave
mov
decb
mov
movsl
sbb
in
test
push
iret
sub
dec
mov
sahf
and
mov
stos
mov
xlat
mov
xchg
mov
mov
sbbl
or
movsb
or
dec
rcrb
cwtl
push
mov
dec
shl
jmp
pop
dec
aam
test
fcomps
xorb
in
push
je
pop
fnsave
dec
jmp
and
adc
inc
xor
mov
loop
stos
sti
mov
popf
xchg
arpl
lods
sti
jnp
push
inc
aaa
sbb
mov
sbb
in
cld
pop
std
fidivrs
inc
pop
jnp
sub
imul
imul
pop
and
jns
jbe
popf
sub
lock
insl
cmpsl
mov
cmp
leave
jle
mov
pop
popf
sbb
les
lock
mov
outsb
mov
xchg
lahf
dec
add
add
movsl
inc
enter
scas
lret
cmp
dec
ret
arpl
lds
ret
lcall
ret
ljmp
cwtl
mov
or
mov
lcall
push
and
sub
in
mov
add
or
adc
ret
add
inc
cmpsb
lock
xchg
stc
popa
shrl
push
out
push
push
mov
lds
es
mov
sub
mov
ljmp
std
js
cwtl
sub
hlt
lock
cmc
xor
xor
call
sbb
fstl
mov
dec
push
pop
jb
sub
lret
sub
pop
lock
mov
mov
jecxz
xlat
cmp
xchg
fldt
jo
mov
xorl
inc
orl
cmp
cmpsb
jnp
int3
pop
mov
adc
inc
push
out
idivl
out
cwtl
push
adc
lahf
subb
mov
jb
cmp
mov
std
adc
add
mov
scas
xchg
or
pop
les
shll
cltd
add
mov
dec
repz
jl
shll
ficoml
js
lds
cmp
mov
push
rorb
ret
dec
addr16
xor
dec
lahf
ss
outsb
js
ljmp
insl
mov
xlat
outsl
add
cs
in
push
add
aaa
mov
dec
xor
cld
mov
in
mov
repz
xchg
pop
pop
hlt
and
or
popf
insb
xorb
jmp
sub
fwait
cwtl
xchg
mov
stos
jl
jo
cmp
lret
jb
in
push
mov
es
or
popf
jno
ss
fwait
jg
subb
mov
push
test
inc
mov
sub
cmp
mov
mov
pop
add
mov
push
insb
push
cmp
cmp
inc
nop
in
jg
loop
and
pop
jo
bsr
add
int3
fs
repnz
xlat
and
or
pusha
test
or
add
fs
into
dec
xor
xor
xorl
call
and
mov
xor
es
testl
loop
das
call
jl
push
rcr
push
push
out
mov
aam
sbb
jne
or
mov
imul
push
xor
push
lahf
subl
lret
je
push
adc
fists
syscall
lock
mov
cmc
rcr
orl
cmp
pop
mov
lahf
mov
mov
and
jb
adc
sub
push
inc
js
out
inc
and
or
pop
sub
mov
add
popf
jno
adc
pushf
or
mov
add
xchg
std
ljmp
idivb
pop
repnz
pusha
movb
movl
push
movl
movb
push
lea
jmp
or
pop
call
add
arpl
dec
in
pushw
cmpsb
ror
stos
push
push
mov
repnz
sti
daa
or
pop
sub
sti
jmp
inc
aad
inc
pop
cwtl
aas
ss
aas
xor
movsb
jbe
jae
call
into
and
cmp
gs
jnp
inc
pushl
mov
xchg
add
cltd
xor
push
fidivs
je
or
in
add
push
sti
mov
adc
mov
and
ret
call
push
jb
xchg
mov
mov
jp
push
jo
movsb
sarb
cs
xchg
jp
sub
shl
call
fidivl
mov
pushf
cmc
xchg
popa
pop
jg
ljmp
jmp
push
push
fcmovu
pop
lahf
out
mov
lcall
insw
cmp
inc
sub
inc
xchg
xor
or
or
dec
add
test
jo
lret
pushf
cmp
add
roll
dec
iret
adc
fisttpll
mov
nop
sahf
ds
jo
scas
cmp
xchg
sbb
pop
enter
mov
dec
xlat
add
mov
lahf
xchg
mov
lods
movzbl
pop
push
jge
scas
inc
pop
dec
mov
pop
lret
add
stc
fwait
daa
stos
icebp
xchg
add
jbe
repz
inc
and
fistpl
shl
dec
inc
ret
jecxz
daa
dec
xchg
fldt
pop
fcomps
mov
jbe
xchg
leave
adc
or
lea
push
filds
xchg
sbb
add
rorl
scas
mov
or
call
icebp
aad
adc
aas
inc
mov
arpl
cmp
dec
push
inc
sarb
mov
xor
mov
test
test
cwtl
cli
mov
lcall
xor
inc
cmp
repnz
xor
pop
pop
xor
add
insb
in
xchg
test
movsl
xor
xchg
xorb
jl
cmp
mov
imul
dec
imul
push
cmp
lcall
mov
mov
hlt
int3
dec
dec
and
les
shrl
or
shrl
call
pop
out
lret
jo
or
mov
dec
loopne
lret
pusha
sbb
pop
cld
cmpsb
sub
in
add
fwait
pusha
inc
lahf
ljmp
jns
enter
pop
pop
loope
mov
dec
subl
sub
lcall
xchg
fs
test
stc
stos
icebp
mov
mov
cwtl
jb
into
lods
int3
stos
aas
mov
in
push
cmc
lahf
roll
xor
cmpsl
out
mov
std
ljmp
mov
flds
sbb
sub
ficoml
pop
pop
dec
pop
ds
stos
add
sbb
aaa
das
cmp
mov
xchg
add
dec
jge
jbe
jb
mov
adc
mov
stc
adc
dec
in
ljmp
jl
bound
lret
pop
fildll
inc
and
aad
test
ss
push
hlt
sub
lret
adc
les
xor
jns
movsb
xchg
lcall
gs
nop
mov
add
inc
xchg
popa
mov
jp
push
lahf
js
iret
cs
stos
cmp
fsubs
mov
add
js
sub
repnz
iret
lds
inc
sub
dec
mov
popa
pop
popf
sbb
push
fmuls
arpl
or
inc
in
movsl
cmpsl
xor
insb
sub
mov
pop
sub
xchg
ss
and
mov
jno
leave
xlat
sub
inc
aam
mov
mov
dec
or
pop
cmp
pop
inc
mov
lahf
mov
cmp
or
lock
pop
nop
inc
mov
dec
xchg
sub
mov
test
pop
out
dec
mov
and
push
or
leave
dec
push
stos
jne
add
xor
cmpsb
sar
fnstcw
jne
rolb
jge
outsb
push
sub
sbb
pushf
les
jnp
rorb
std
jg
insb
movsb
xchg
sub
mov
push
popf
mov
enter
inc
cwtl
dec
mov
stos
cmp
iret
lods
lahf
ret
sub
cmp
lahf
mov
fucomp
repnz
in
pop
jne
and
shl
hlt
sbb
incl
mov
rorl
mov
mov
fcmovbe
cwtl
ficompl
or
fbld
mov
and
sub
out
push
hlt
clc
js
push
loopne
test
rorb
inc
and
fldcw
or
cli
nop
pop
pop
vmaxsd
ja
imul
mov
test
xchg
and
lods
jnp
xchg
out
cmpsb
mov
sbb
mov
and
nop
cmc
xchg
sbb
mov
rcll
fwait
adc
and
sbb
pop
mov
or
pop
mov
xor
xchg
add
in
mov
stc
test
pusha
mov
out
les
or
out
scas
scas
xlat
ret
cmpsl
sbb
sbb
cmpsb
stos
sti
jge
push
xchg
inc
xor
or
fbld
stos
shll
push
sub
gs
add
movsb
push
stos
inc
adc
gs
lcall
sub
mov
add
mov
pop
sti
inc
jbe
sti
cmp
jae
shl
lods
jnp
fisubl
ret
mov
stc
pop
icebp
fimuls
out
mov
xor
scas
testl
sbb
fdivr
cmp
scas
push
cli
xchg
push
aad
int3
mul
sbb
inc
push
push
lret
loop
mov
dec
xchg
xchg
test
xchg
cwtl
sbb
push
ss
sar
add
insl
ss
push
mull
rcll
jne
cmp
inc
cs
rclb
jne
xchg
in
negb
dec
sbb
push
inc
icebp
pop
or
cmovp
loopne
pop
movsl
sub
shrl
xchg
fldenv
push
imul
adc
sbbb
and
jmp
cmp
jge
push
idivl
out
repnz
inc
mov
lret
xorb
xchg
fisttps
rorl
pop
mov
jl
adc
xor
sub
test
xor
xchg
ja
test
pop
sbb
insb
mov
push
and
jno
les
iret
std
lods
add
dec
push
cmpl
fwait
jecxz
mov
push
dec
xor
rol
and
add
in
mov
or
fdivrs
jns
pop
and
data16
sub
lds
mov
aam
pop
int3
cmc
pop
mov
cmp
pop
or
fbld
mov
cmp
neg
popa
lea
xor
push
xchg
cli
in
add
sbb
out
test
dec
in
lahf
pop
in
sub
jmp
adc
lcall
hlt
arpl
mov
jae
shr
cmp
and
fldl
push
mov
push
mov
test
inc
xor
and
inc
out
lock
fmuls
dec
in
xchg
push
pusha
xchg
movsl
aam
add
lock
fld
sub
sarl
adc
outsb
stos
jnp
aad
imul
es
cmp
fmull
mov
out
dec
xor
xor
xchg
mov
adc
xlat
xchg
xchg
or
dec
and
add
rcll
loope
in
jecxz
dec
cmpsb
out
pop
xor
int3
lahf
jno
and
js
xchg
fldenv
outsb
gs
mov
or
jge
mov
fadds
ss
jns
popf
in
adc
ja
clc
fsts
xor
dec
addr16
insl
stc
push
in
cmp
jb
pop
sysexit
pop
jecxz
jno
xor
fwait
dec
aaa
jg
or
add
repnz
and
or
mov
icebp
jne
pushl
roll
cmpsl
iret
repnz
jmp
popa
into
sub
adc
mov
pushf
out
xchg
mov
or
mov
cli
adc
jl
cmpsb
push
dec
lret
dec
rolb
fdivl
adc
scas
out
dec
scas
dec
cld
mov
inc
lret
push
xchg
push
mov
es
movsb
mov
mov
xchg
jb
int
inc
rclb
add
lret
inc
repz
sbb
adc
or
lea
add
inc
inc
xchg
push
pop
repz
or
iret
fnstcw
push
inc
leave
hlt
jbe
inc
sarb
stos
outsb
imul
ficoms
lock
imul
orl
mov
fldenv
lods
hlt
jge
jge
mov
insl
clc
mov
cmpsb
push
xchg
mov
mov
in
mov
and
mov
out
test
pop
mov
mov
mov
adc
push
xlat
pop
jnp,pn
xchg
sub
idivb
mov
into
jp
jge
push
in
decl
adc
das
pop
dec
push
aaa
mov
dec
and
inc
enter
mov
or
repz
std
shll
pop
xchg
jns
adc
push
xchg
pop
ret
ftst
pop
scas
dec
jge
jb
cltd
xchg
sub
and
dec
mov
jno
in
into
dec
jmp
jne
mov
sub
xchg
sti
jae
mov
and
jge
jp,pn
inc
clc
ss
popa
daa
mov
cmp
je
lods
mov
jb
jle
xlat
arpl
outsl
pop
sub
cmp
pop
hlt
adc
scas
out
dec
push
mov
xlat
inc
mov
test
adcb
jle
ljmp
cmpsb
sub
and
cwtl
and
or
mov
mov
add
sbbb
outsl
sti
jle
or
or
mov
imul
push
pop
stos
inc
js
cmc
xchg
dec
mov
adc
out
pop
jns
cli
jg
dec
ss
out
push
jge
aas
add
cltd
and
notl
insb
mov
leave
push
cmpsl
push
cmpsb
adc
inc
scas
mov
fstpt
stc
fcomp
or
lods
ficomps
scas
sbb
out
jp
jl
not
push
hlt
push
jle
subl
mov
mov
sub
push
std
lods
cltd
les
orb
and
mov
subb
push
jbe
mov
push
and
in
shll
mov
inc
insb
jae,pn
pop
nop
mov
stos
dec
mov
sbb
pop
out
in
push
aas
stos
jecxz
sbb
mov
rclb
hlt
ja
dec
test
or
sbb
mov
addr16
insb
mov
xchg
and
sub
mov
mov
cmp
adc
cmp
outsb
push
and
test
cli
rorb
or
scas
aam
test
in
push
mov
push
jno
lcall
idivb
push
insl
mov
in
xor
clc
scas
or
pop
xchg
mov
sub
scas
jle
and
push
or
cwtl
rolb
repz
aad
test
ljmp
push
pop
xchg
lcall
or
xchg
and
sub
or
ljmp
ret
cli
jnp
pop
adc
les
pop
xchg
addr16
and
in
mov
jno
inc
sti
xchg
mov
pop
leave
call
hlt
std
nop
clc
xchg
mov
repz
stc
idivl
sbb
cmpsl
ja
dec
lahf
dec
inc
std
lahf
mov
jno
popf
and
dec
sbb
cwtl
inc
je
or
lods
rcll
lahf
aad
or
mul
sbb
sbb
dec
and
mov
cmp
mov
lcall
dec
xchg
fstps
mov
jecxz
cli
jbe
fldt
jnp
and
rcl
daa
sub
add
sahf
jb
bound
xchg
insl
pop
daa
and
and
mov
or
or
js
add
mov
iret
push
dec
jne
sahf
sub
or
pop
mov
add
orb
mov
sub
aam
pop
xchg
xor
push
adc
int
fsubr
aam
or
mov
sbb
push
add
or
xchg
popa
cli
out
push
dec
cmp
scas
jne
int
jo
arpl
dec
orb
pop
jo
add
or
iret
dec
pop
in
add
out
jne
push
fimull
jbe
fcoml
sti
ret
shrb
in
daa
sbb
jp
cmp
test
pop
neg
push
je
out
cli
xorb
jbe
int
outsb
dec
daa
mov
xor
fidivrl
jmp
xor
or
in
mov
or
iret
pop
dec
dec
and
xchg
ret
lea
push
or
stos
iret
cmp
xchg
iret
cmp
mov
fldt
mov
mov
nop
mov
pop
leave
outsb
arpl
std
out
call
xchg
sub
jbe
xchg
andl
icebp
orl
sbb
dec
test
jg
outsl
dec
and
push
or
mov
cmp
push
xor
xchg
mull
mov
jmp
jl
or
push
idivb
dec
push
sbb
repz
mov
das
test
and
and
add
mov
decl
sbb
or
fdivl
cmp
daa
bound
iret
adc
lret
add
sub
push
repz
sbb
or
cmp
jb
pop
jbe
je
ds
inc
enter
stos
outsl
xlat
ja
push
outsl
xor
push
xor
test
lret
pop
and
xchg
mov
ret
insb
mov
inc
dec
mov
das
sti
jecxz
pop
jecxz
mov
ss
xor
and
sbb
fs
nop
aas
mov
movsb
nop
mov
and
loopnew
mov
je
mov
xchg
insb
xor
std
xchg
xor
xchg
imul
mov
fdivr
arpl
jb
jmp
mov
rolb
call
jbe
cmp
movsb
or
fprem1
outsl
call
mov
xor
jbe
jbe
mov
mov
add
dec
sub
or
dec
loopew
xchg
and
xchg
stos
xchg
and
or
mov
jne
aam
int3
int
xor
lahf
sub
stos
dec
sub
dec
xchg
lret
faddl
push
cmc
icebp
aaa
mov
xor
addb
cmp
or
cmp
popa
push
into
hlt
pop
xchg
push
imul
mov
sbb
clc
stos
jecxz
xchg
es
adc
or
xchg
pop
ds
pop
add
cwtl
repnz
pop
xor
cltd
mov
mov
inc
mov
cwtl
sbb
call
mov
add
inc
in
xchg
pop
cwtl
aam
icebp
jmp
sbb
fsubrs
mov
or
push
in
insb
lods
cmp
pop
push
dec
iret
mov
inc
lds
repz
xchg
leave
in
aad
sub
ja
push
rorl
dec
aad
jae
jge
xchg
jnp
shrb
ss
mov
aaa
in
bnd
adc
sbb
outsl
out
sub
out
xor
mov
jno
push
inc
cmpsl
movd
gs
xchg
xor
lods
push
loop
cltd
jge
popf
stos
daa
mov
repz
sbb
push
cmp
or
cwtl
cmp
inc
sub
mov
scas
ljmp
mov
call
fwait
jne
loop
call
hlt
jmp
in
pop
inc
sub
cli
inc
out
adc
aam
sbb
in
sahf
xchg
xchg
or
mov
cld
jmp
ljmp
dec
sbb
ret
mov
setge
clc
adcb
jl
scas
test
loope
call
and
pop
mov
mov
pop
push
stos
fimull
inc
adc
dec
int
pop
sarl
inc
mov
dec
push
jle
sahf
cs
mov
movsl
fwait
add
inc
cmpsb
jbe
aas
pop
push
cltd
add
pop
or
es
jno
loopne
je
roll
cmp
mov
lcall
ja
in
adc
test
in
add
les
mov
and
pop
mov
dec
test
rcr
adc
mov
push
sub
int3
cltd
sbb
cmp
shrb
sub
xor
mov
jle
or
mov
push
inc
jecxz
dec
test
sbb
adc
mov
lods
dec
ffree
pop
rcr
ret
dec
mov
dec
xchg
and
fwait
not
jo
clc
xchg
add
enter
sbb
popf
int
mov
sbb
inc
and
xor
mov
in
lods
xchg
loopne
xchg
adc
inc
dec
arpl
mov
cmc
inc
ret
into
xlat
mov
pop
push
pop
fistpl
mov
lcall
inc
add
xor
stos
in
push
das
mov
inc
push
decl
pusha
adcl
repz
and
pop
mov
mov
mov
push
mov
movsl
iret
sarl
push
icebp
inc
fdivp
sub
fstl
call
jbe
adc
mov
scas
sub
cwtl
or
dec
pop
out
ja
inc
in
test
mov
push
jns
dec
mov
xchg
pop
mov
pop
stc
push
cmp
dec
mov
adc
mov
decb
and
jbe
ficompl
icebp
int
xchg
repnz
ss
jmp
call
jmp
jmp
pusha
movw
movl
pushf
push
push
pushf
lea
jmp
push
push
jecxz
sub
test
mov
cwtl
test
ljmp
mov
inc
mov
ljmp
imul
jmp
pop
adc
adc
pop
xchg
mov
cmp
pushf
cmp
mov
xchg
lret
adc
call
aam
pop
push
cmp
test
ljmp
rcrl
xor
adcl
insl
adc
call
mov
shlb
inc
jno
ljmp
dec
shlb
dec
dec
inc
repnz
lods
cmp
jmp
sbb
jle
cmp
xlat
orl
movsl
out
aaa
enter
loopne
es
outsb
mov
rorl
pop
cmp
sub
out
fwait
stos
add
pop
out
dec
inc
dec
fstpl
mov
pop
mov
add
sub
sbb
or
mov
cmp
jae
testb
in
subl
add
pop
cwtl
jns
push
push
std
les
mov
add
sub
movsl
addr16
sub
xchg
mov
xor
mov
dec
mov
int
das
adc
push
jle
cltd
inc
fstpl
ss
adc
lahf
int3
fmulp
dec
cmpsl
push
pop
xchg
addb
hlt
daa
out
lret
clc
addr16
add
enter
popf
in
das
daa
pushf
or
push
das
xor
out
mov
cmpsl
lods
lds
inc
xchg
xchg
out
fsubrl
cli
lea
dec
enter
mov
mov
scas
rcrl
ret
mov
mov
xchg
out
push
cwtl
push
or
cli
mov
push
popf
cmp
fisttps
andl
or
outsb
ja
fadd
add
das
xchg
mov
sub
cmp
fnstsw
add
inc
pop
ds
xor
mov
mov
xlat
scas
adc
nop
adc
jne
sub
insl
loop
dec
inc
sbbb
mov
mov
popf
pop
pop
lock
mov
xor
pop
mov
xchg
inc
cmp
fnstcw
jo
inc
cmp
test
aas
lds
call
adc
das
mov
popf
sbb
in
leave
fs
mov
pop
shlb
out
dec
pop
xchg
cmc
shlb
lret
sub
icebp
push
push
aaa
ret
inc
sarb
das
dec
enter
sbb
jo
add
xor
pop
jnp
dec
arpl
adc
dec
mov
push
andl
fmuls
pop
xor
sbb
iret
rorb
inc
and
aad
mov
sarl
xchg
inc
dec
lret
adc
rorb
into
mov
nop
jnp
aas
lock
arpl
inc
repz
or
and
pop
or
fadd
and
mov
fnsave
lods
aad
fcompl
cli
adc
popa
sub
out
enter
cmp
pop
or
dec
aaa
pop
and
push
push
loop
out
aaa
lret
jge
xchg
shll
adc
mov
pop
sub
jp
sbb
dec
pop
jle
clc
std
mov
je
dec
in
std
imulb
insb
dec
loop
mov
add
stos
out
into
out
jb
inc
shll
xchg
roll
dec
inc
push
mov
xchg
cld
les
push
popf
pop
xor
mov
ret
and
inc
ret
popa
out
xchg
mov
popw
and
or
cmp
ljmp
cmp
mov
fistpll
push
mov
and
xlat
pop
mov
pusha
mov
mov
inc
ds
lret
jns
daa
inc
or
cmc
dec
in
gs
sahf
ret
jno
jp
mov
adc
jno
lea
dec
loop
mov
cmpsb
xchg
scas
xchg
cmp
out
push
pusha
inc
mov
rclb
bound
cld
js
push
cmp
cmp
cmpsb
mov
test
outsl
push
sbb
dec
xchg
ds
popl
xchg
out
jmp
mov
rcrl
popf
in
hlt
lds
in
adc
sub
mov
movlps
push
xor
testl
xlat
adc
pand
and
mov
jp
cmpsb
cmpsl
subb
scas
cmp
jmp
aaa
sbb
repnz
push
lret
mov
movsb
jge
or
inc
jno
or
jo
mov
mov
xchg
mov
inc
out
test
xor
sbb
inc
mov
add
mov
mov
mov
mov
enter
pop
rclb
fs
sbb
pop
xchg
xorb
lods
popa
push
jmp
test
rclb
xchg
push
outsl
mov
aad
xor
mov
dec
imul
adcl
insl
sbb
inc
mov
orb
sub
mov
mov
or
mov
xor
inc
mov
and
push
aad
loope
ljmp
sub
cltd
cltd
jb
jge
dec
in
jns
pop
mov
outsb
xchg
mov
repnz
push
inc
rcl
imul
aad
adc
push
add
stc
xchg
jmp
into
sub
add
stos
test
mov
inc
mov
or
mov
pop
xchg
test
stos
hlt
mov
dec
mov
jnp
enter
subl
xor
iret
fildl
and
rolb
xchg
ficoml
rorl
pop
mov
add
sbb
cmp
jg
mov
xchg
jbe
and
iret
pop
outsl
push
aas
scas
fs
push
jecxz
test
frstor
xchg
dec
or
popl
clc
nop
sub
sub
mov
arpl
inc
cmpsl
cmp
xchg
mov
cmpsl
out
subb
sbb
js
movsl
push
fdivrl
cmp
nop
or
inc
mov
adc
mov
shrb
icebp
outsb
mov
cmp
add
data16
aas
test
xlat
pop
cli
test
add
xor
pop
or
xor
inc
inc
mov
lea
mov
or
fcom
pop
movsl
leave
stos
xlat
insl
sub
dec
mov
inc
fs
repnz
sahf
cwtl
xchg
fwait
sub
jp
fiadds
bound
inc
xor
cli
add
test
xchg
dec
nop
es
or
imul
cmpsb
mov
xorl
add
push
cmovg
push
push
or
imul
cmpsb
cmc
mov
repz
dec
adc
inc
and
jl
jno
or
in
add
jmp
sbb
xchg
push
mov
les
repnz
push
cmp
fldenv
shll
dec
adc
lock
cmpb
imul
mov
mov
loope
mov
arpl
lahf
jle
mov
out
dec
sar
mov
fisttpl
test
pop
loope
leave
inc
lea
pushf
sbb
test
xor
call
or
divb
mov
xchg
sbb
jg
mov
inc
xor
loop
test
xor
xor
mov
shlb
cltd
lods
mov
lds
dec
mov
push
out
inc
popa
push
inc
sub
out
sub
jl
sbb
jno
popf
in
jp
scas
out
xchg
insb
ret
xchg
jo
insb
call
jg
cmpsb
cmp
jb
pop
lods
scas
sbb
push
je
cld
jmp
inc
fistps
aaa
cwtl
mov
in
mov
jl
sbbb
stc
cli
jge
pop
fcmovnu
and
cmpsl
arpl
pop
inc
ffree
movsb
sbbb
inc
in
icebp
xor
repz
cs
sub
fidivrl
mov
mov
lods
dec
lds
and
sub
pop
cmp
cs
mov
push
gs
pop
sbb
push
cmp
cmc
je
rolb
sahf
out
pusha
push
in
jb
nop
mov
in
into
adc
lods
add
leave
popf
scas
loopne
xor
xchg
xchg
jecxz
sub
pop
cmovle
push
lods
rcr
or
roll
aam
pop
add
pop
mov
push
out
push
mov
xchg
sub
cmc
cmp
dec
dec
xchg
mov
in
test
inc
mov
lea
mov
sbb
mov
es
test
or
jae
adc
sub
jp
repnz
sti
sub
mov
xor
aas
rorb
inc
add
push
pop
roll
sbb
out
cmp
mov
pop
hlt
push
cmpsb
out
lea
popa
idivl
clc
pop
in
insl
roll
js
sbbb
bnd
out
insb
pop
push
std
fbld
dec
jae
jecxz
leave
adc
and
outsb
hlt
inc
pop
xor
hlt
sub
bound
aaa
mov
inc
mov
inc
sbb
push
add
clc
adc
push
pop
xchg
dec
cmp
jle
xchg
fidivs
out
add
insb
jmp
dec
cs
sub
dec
rcrb
mov
leave
cli
add
bound
mov
push
push
sub
arpl
add
loopne
mov
push
mov
dec
inc
jbe
add
rorl
outsb
add
scas
xchg
inc
lret
cmpsl
pop
mov
pop
pop
push
mov
inc
fstps
cmp
push
dec
inc
in
mov
adc
jae
addr16
cmpl
sub
sahf
rorb
jle
insl
imul
insb
call
pop
outsb
mov
addr16
adc
movsb
mov
jne
push
lcall
negl
mov
pop
cmp
xor
test
fimull
fcmovnu
repnz
dec
out
pop
inc
ret
adc
lea
pushl
lds
sbb
xchg
prefetch
pop
mov
add
inc
insl
adc
jg
pop
fdivs
cmc
xchg
or
inc
cli
in
ja
imul
xchg
dec
xlat
jbe
cmp
std
and
cld
jge
mov
sti
inc
fstps
mov
dec
inc
push
xor
dec
or
test
out
fwait
movsb
fisttpl
jns
fcompl
push
sbbl
loope
sbb
repz
in
dec
int
mov
cltd
sub
xchg
clc
mov
and
dec
jge
xor
int
cs
jns
jg
loope
sbbb
cmp
test
leave
stos
es
call
sub
dec
sahf
enter
add
in
jne
add
loop
insl
mov
push
leave
push
cmp
fbld
pop
mov
push
ss
push
loop
repz
test
push
dec
fiadds
es
jno
push
fwait
xor
sbb
dec
cmpl
push
shlb
int3
dec
nop
pop
cld
pop
movsl
and
test
dec
xchg
ljmp
cmpsl
jl
inc
aas
jmp
xchg
adc
pop
cltd
jg
scas
pop
xor
inc
ret
xor
pusha
add
sbb
movsl
out
jb
pop
xchg
lret
cmp
add
dec
and
add
repz
shll
and
insl
xchg
or
ret
cmpsl
xor
mov
sbbl
fcmove
mov
pop
xor
jne
lcall
and
scas
xor
pop
fdivr
jp
xor
cmp
clc
mov
adc
addl
push
push
sahf
push
data16
inc
ficomps
pop
adc
adc
fidivrl
mov
mov
xor
sub
lahf
jae
icebp
pop
jo
lea
add
sti
lea
pop
sarl
xchg
adc
clc
and
sbb
pop
xchg
test
push
popf
xchg
mov
fs
aam
and
lds
push
imul
out
mov
sti
nop
mov
cmp
stc
data16
mov
out
cmp
call
adc
aad
mov
add
xor
loope
sub
xchg
mov
jmp
cli
mov
push
out
insb
mov
xchg
sbb
shrl
pusha
scas
dec
adc
jb
and
int
jecxz
push
inc
cltd
les
add
xchg
inc
in
ljmp
in
push
cmp
pop
icebp
je
adc
add
inc
jae
sbb
sbb
int3
lret
ja
int3
dec
popf
xor
ror
cmp
imul
mov
mov
push
ja
and
push
xlat
xchg
pop
push
iret
add
fnstenv
mov
sbb
jmp
fistl
lods
cltd
pop
sub
pusha
or
cs
outsl
out
inc
inc
mov
mov
enter
dec
mov
sti
push
mov
jae
push
loopne
mov
pop
shlb
push
mov
outsb
cltd
mov
out
push
push
je
loop
loopne
cld
lahf
xchg
fadds
test
les
xchg
shrl
pop
stos
mov
rorb
cmp
leave
inc
lods
inc
arpl
shr
idivb
loope
test
mov
out
xchg
mov
jg
popf
cmp
pop
in
sub
push
and
xor
add
pop
sub
adc
jno
scas
iret
icebp
adc
movsl
cmp
inc
xchg
scas
adc
test
out
dec
js
xchg
xchg
int3
stc
icebp
inc
or
orl
fs
mov
out
add
sbb
add
and
stos
mov
fldenv
cmc
inc
insl
fwait
enter
sbb
adc
sbb
and
inc
jp
cmpl
cltd
test
inc
loope
stos
mov
cmp
mov
adc
sub
mov
rep
xchg
cltd
mov
pushf
inc
stos
leave
bound
mov
xlat
repz
dec
fadds
and
sbb
xchg
mov
sbb
aaa
daa
jbe
sbb
out
js
push
cmpsb
jge
mov
lret
mull
dec
xor
xchg
dec
sub
arpl
xchg
push
xor
push
andl
shlb
push
xor
mov
xor
mov
sti
pop
es
mov
scas
dec
in
or
sub
dec
mov
sbb
cs
xchg
adc
push
fcomp
insb
jmp
aad
lock
sbb
incb
mov
cmc
stos
cwtl
cmp
jnp
xlat
test
test
cmp
push
xchg
add
cli
xchg
mov
push
into
stos
push
sarl
and
fxch
xor
mov
add
loop
sbb
xchg
sub
push
bound
mov
or
ret
jmp
xchg
fdivl
add
jle
xchg
mov
jl
jno
lods
scas
xorl
push
mov
in
dec
and
cmp
and
and
das
imul
add
das
es
add
fcomi
loopne
sbb
mov
call
andl
js
stos
push
in
fucomip
dec
xchg
dec
repz
dec
ret
sti
mov
dec
filds
cmp
dec
andl
sub
mov
push
jbe
leave
mov
jl
cmp
mov
aad
and
cs
lret
test
int3
in
mov
aam
movsl
or
repnz
sub
or
or
mov
jne
pop
dec
std
inc
dec
aaa
les
fldcw
test
in
test
push
mov
cmpsl
push
lock
sbb
push
pop
bnd
pop
add
aaa
jp
xchg
push
lret
enter
das
push
dec
pop
xchg
dec
add
mov
cmp
imul
jae
dec
fnstcw
mov
in
out
sbb
mov
ja
add
inc
stos
ret
outsb
outsl
lcall
adc
mov
sbb
xorl
inc
xor
pushf
out
jns
pushf
cmpsb
test
test
stos
subb
sbb
das
fwait
mov
mov
aas
call
cmp
pop
popf
ss
enter
add
sub
sbb
stos
in
jbe
or
or
xor
jmp
jmp
mov
idiv
inc
leave
adc
pop
lods
dec
int3
scas
xor
dec
bound
dec
adc
jmp
sbb
fcmove
test
jne
sub
lds
fwait
test
inc
cmp
outsl
loopne
and
lahf
xor
scas
repz
mov
xor
xorb
adc
stc
mov
add
test
fcmovb
enter
push
call
push
xor
pop
mov
orb
roll
icebp
je
pusha
push
sub
and
in
mov
lret
in
iret
mov
inc
adc
and
clc
or
fidivl
pop
leave
mov
sahf
sbb
pop
fcoms
sub
cltd
sbb
dec
push
cmpb
lds
and
insb
popa
in
push
add
out
dec
push
int3
inc
push
insl
cwtl
mov
pop
push
or
sub
test
xchg
popa
inc
stos
pop
cld
xor
imul
add
xchg
pop
sbb
lea
mov
ja
mov
push
lock
es
hlt
pop
aas
push
inc
dec
cs
jmp
das
lods
and
push
pop
das
in
xor
imull
jo
mov
adc
dec
add
add
add
fmul
sub
aas
cmp
out
and
mov
adc
std
dec
sub
daa
mov
cli
ja
add
into
pop
cli
repnz
lcall
pop
dec
andb
in
xchg
fs
pusha
and
push
movsb
jnp
loopne
push
and
cmp
push
rorl
xchg
mov
pop
or
cmp
repz
adc
pop
insl
ljmp
lret
sarl
icebp
jmp
adc
not
das
iret
fidivl
sub
xchg
xchg
mov
decl
push
mov
dec
xor
dec
int
push
sbbl
lret
fistpl
push
rcll
push
lahf
xor
sub
inc
and
pop
mov
sbb
outsl
rol
fistps
or
dec
and
inc
repnz
ja
mov
xchg
cltd
pop
mov
cwtl
pop
add
std
std
out
jp
jae
jae
mov
inc
aad
cltd
iret
fmuls
mov
leave
in
insb
das
adc
cmpl
lahf
and
scas
dec
pop
xor
jmp
stos
cmp
mov
lods
jg
pop
fisubrl
insl
sub
xchg
fadds
stc
xchg
adc
loop
rcr
push
mov
cli
or
mov
jns
sti
jp
decb
mov
outsb
push
shlb
cld
rcr
dec
mov
ret
inc
lcall
decb
xor
fcompl
jb
inc
cld
aam
jmp
fstpl
or
pop
in
in
or
mov
xchg
ret
fbld
mov
xor
xchg
ss
jecxz
jecxz
nop
adc
pop
inc
je
add
push
stos
mov
xor
scas
xor
insb
xor
shlb
lret
adc
sbb
jno
cmp
jns
inc
cmp
cmp
ret
fwait
mov
push
add
pop
cmp
sbb
std
movsl
sub
orb
int3
dec
test
loopne
jne
jmp
lds
sub
dec
mov
repz
lret
jp
add
hlt
jmp
mov
cmp
cmpb
call
adc
arpl
loope
pop
dec
push
cmp
adc
scas
pop
pop
push
mov
cmp
sarl
out
dec
sbbl
inc
gs
cmp
or
mov
repz
scas
push
std
cmpsb
sar
les
jae
mov
or
xchg
mov
cld
loop
pop
repz
adc
mov
mov
xor
inc
ret
ljmp
inc
mov
xlat
sbb
xchg
xchg
adc
jns
lret
fistps
and
adc
dec
pop
mov
popa
test
sbb
mull
test
mov
into
xchg
jae
push
add
and
inc
lods
in
dec
cmc
test
adc
das
sub
rorl
pop
hlt
adc
icebp
push
test
add
test
xchg
daa
test
jno
imul
mov
sub
mov
push
test
sqrtps
cmp
xor
scas
aad
cmp
iret
or
sbb
push
pop
push
xchg
sbb
mov
roll
xchg
pop
lret
xchg
out
push
sub
scas
add
jo
inc
clc
movsb
stc
push
sub
mov
cmc
movsl
popf
bound
sti
lds
outsb
mov
rorl
pop
pop
fadds
pop
pop
jg
xor
js
sbb
int
and
lret
into
fs
out
in
aad
mov
lret
repnz
or
dec
icebp
dec
inc
repz
dec
dec
insl
dec
rcll
xchg
push
mov
sbb
mov
mov
cmp
sub
mov
adc
mov
jl
mov
add
loopne
out
inc
cmc
inc
adc
fwait
lods
jmp
pop
lods
jb
bound
jge
mov
icebp
fistpl
inc
mov
or
lret
movsb
aas
sub
fcmovu
xorb
test
pusha
sub
jle
xchg
or
dec
mov
pop
into
nopl
xlat
inc
movsl
inc
push
fisubs
test
idivb
mov
test
daa
jg
lcall
aas
nop
and
enter
or
int
outsl
cltd
jne
inc
das
cmp
sarb
ds
mov
addb
stos
mov
xchg
mov
jo
dec
mov
inc
insb
lahf
les
add
mulb
clc
cmc
lods
push
dec
xchg
xchg
mov
adc
mov
or
mov
arpl
jne
push
dec
ficoml
adcl
adc
out
push
mov
adc
inc
outsl
and
fmulp
incb
jns
push
jl
fmuls
inc
mov
add
inc
das
fs
cmp
or
loope
hlt
or
inc
or
cmp
scas
or
mov
aas
jns
push
sbb
adc
scas
xchg
outsl
push
test
lahf
mov
pop
mov
gs
out
loopne
sbb
pop
sub
inc
lock
cli
ret
mov
pop
out
fdivr
in
in
mov
sbb
in
fwait
ror
cld
add
inc
imul
imul
adc
ret
cmp
jecxz
inc
jmp
fcmovb
mov
repnz
retw
mov
xor
mov
ljmp
cmpsb
jo
add
stos
xor
ds
jmp
mov
sub
and
or
insb
jmp
cmp
mov
stos
shrb
enter
inc
mov
or
cmp
arpl
leave
jne
popf
loope
add
sub
jmp
push
jns
jecxz
test
cwtl
add
shlb
rcll
repnz
xchg
or
push
jo
pop
adc
xor
xchg
inc
pop
int
mov
push
in
test
adc
add
mov
mov
push
mov
pop
test
data16
fwait
jge
push
into
sarb
xchg
push
ljmp
fisubrl
rclb
lahf
es
das
inc
je
pop
xchg
int
jg
repnz
adc
cmp
lea
pop
leave
cmp
movsl
ret
movsl
dec
mov
xchg
in
ljmp
fadds
fisubrl
push
fcom
sbb
jmp
sub
mov
lock
pop
dec
clc
lock
mov
fstl
js
or
gs
clc
outsb
ljmp
das
push
fisubrl
dec
jns
lret
jnp
pop
imul
adc
mov
jns
js
in
outsb
cmc
inc
fiaddl
insb
pop
jbe
pop
rorl
rcrb
xor
sub
mov
mov
cmp
into
push
fmuls
or
jbe
fcoms
mov
mov
or
mov
sar
mov
and
xchg
cltd
jmp
adc
push
jne
or
add
inc
jbe
and
outsb
sbb
jge
push
in
out
inc
enter
loope
cmp
cmp
inc
lds
mov
jmp
cmc
popa
pusha
inc
push
inc
popa
into
adc
imul
adc
sahf
push
or
mov
aas
xchg
jg
jnp
sub
test
leave
les
xchg
xchg
mov
fnsave
mull
add
shrl
outsl
ja
out
cmpsl
nop
inc
push
in
xor
sbb
test
shrl
xchg
sbb
xchg
or
push
jmp
sti
pop
stos
sbb
jp
clc
bound
sub
daa
stc
fdiv
sbb
fcmovne
mov
push
aad
scas
aad
or
mov
xchg
and
or
iret
mov
es
xor
test
and
fs
test
sub
mov
outsb
ja
clc
cmpsb
imul
movq
mov
add
cmp
or
sbb
rcl
adc
xchg
rcrl
hlt
fdivrs
push
jae
fcoms
mov
or
push
cmp
xchg
mov
jecxz
jae
cmpsb
jns
and
lret
inc
cmpl
insl
fistpll
loop
mov
jns
xchg
cwtl
push
inc
push
jbe
mov
sub
ffreep
adc
fcomp
imul
je
xchg
lret
rcrb
leave
add
jbe
xor
cmpxchg
aas
mov
jmp
repz
int
cmpsl
popl
lcall
pop
lret
lea
pop
hlt
mov
ret
cwtl
push
or
push
sti
aas
nop
mov
jge
pop
andl
lea
idivb
scas
pop
cmpl
rol
in
lret
push
push
or
or
push
mov
adc
cmp
insb
popa
jns
popa
mov
dec
mov
sub
add
sbb
leave
xor
fildll
mov
cs
mov
les
push
push
mov
sub
cmpsb
push
and
out
push
into
call
out
jae
ret
inc
xchg
mov
ljmp
fbstp
cmp
dec
leave
loopne
xor
cli
lcall
pop
push
jmp
test
int
idivb
scas
rcrb
movl
pushf
pusha
movl
mov
pushf
push
mov
lea
jmp
xchg
push
jne
lahf
jbe
into
inc
xor
adc
cmp
mov
std
scas
cmp
andl
cmp
aam
arpl
xchg
dec
loope
or
jmp
mov
leave
jb
adc
xchg
pop
push
sbb
std
addr16
jbe
rorl
xchg
mov
pop
pop
addb
data16
mov
shll
bswap
pop
in
lahf
enter
push
mov
sub
cmpsb
push
dec
je
sub
fs
mov
mov
test
pop
add
ret
pop
out
cmpsb
fildl
jnp
push
ret
pop
inc
xchg
dec
out
adc
xchg
or
pop
loope
call
pop
std
faddp
scas
xor
inc
insl
pusha
mov
jns
mov
xor
outsl
fsts
std
sti
cmc
sub
or
add
int
xlat
pop
inc
mov
push
sahf
push
inc
pop
jmp
data16
ss
mov
add
push
not
push
or
sub
call
cwtl
cmp
les
pop
scas
roll
out
fs
insl
cmc
fcmovnb
mov
jmp
or
into
js
cmp
cmpsb
xor
push
clc
push
add
sbb
adc
ljmp
insb
je
fcoms
pop
add
mov
js
xor
xchg
jmp
fmul
adc
sub
sbb
jl
pop
out
rorl
or
lds
notl
mov
int
loope
ss
dec
div
push
dec
int
push
stos
pop
jp
ja
or
scas
test
lahf
sbb
loopne
sahf
pop
ja
inc
push
xor
mov
loope
cmp
mov
notl
loop
and
sub
test
pop
jns
insb
inc
lods
int
fcoms
xchg
push
cmc
jmp
call
inc
pop
xchg
fidivl
dec
lcall
fmulp
pmullw
loope
sub
ljmp
and
addl
mov
mov
aaa
mov
pop
xor
data16
stc
insb
jo
pop
mov
stos
std
xchg
pop
push
fsubl
stc
fbstp
inc
lds
test
hlt
shrl
mov
and
outsb
mov
xor
jl
lcall
popa
fimuls
xor
insb
jmp
pop
add
or
fmull
push
cmpsl
jmp
push
add
sub
cmp
push
hlt
movsb
lds
arpl
mov
sub
push
idivb
cmp
dec
jbe
scas
ret
pop
cmp
inc
mov
ret
insl
xchg
xchg
mov
mov
test
sbb
pop
daa
dec
arpl
xchg
test
iret
outsl
jo
insb
push
cmc
test
mov
fstps
dec
sbb
cmc
mov
push
and
orb
shl
and
push
sub
test
push
mov
imul
sbb
leave
aaa
movsb
fcoml
add
es
mov
add
jae
sbb
push
lock
xchg
incl
repnz
or
inc
mov
sbb
xchg
and
fadds
mov
push
push
ss
cmp
js
cmc
xor
in
test
cld
xchg
data16
incb
cld
mov
addr16
loopne
imul
inc
fcoml
sbb
mov
clc
testb
stos
dec
lock
jae
das
push
xchg
aaa
inc
fwait
mov
mov
mov
dec
sbb
inc
outsl
sub
add
add
add
inc
sarb
dec
insb
call
push
add
push
pusha
inc
dec
inc
xlat
inc
push
ja
dec
fsubrl
mov
in
cltd
inc
xchg
xor
addr16
outsl
aad
fsubrs
nop
sub
inc
bound
add
xlat
pushf
pop
movsb
in
out
cld
xchg
in
pop
aas
pop
mov
stos
xchg
iret
in
push
add
cmp
jb
lea
decl
rorl
or
in
fwait
orl
orb
popl
je
aaa
dec
clc
movsl
loope
mov
sbb
mov
xchg
leave
repz
pop
fistps
movsb
xchg
out
pushf
addb
mov
pusha
xor
nop
imul
dec
pop
cs
mov
in
jns
loope
mov
dec
sar
adc
stos
xchg
cmp
xchg
xlat
movsb
daa
sbb
jne
enter
std
dec
fimull
in
jb
cmp
adcl
dec
inc
pop
add
sub
xor
movsb
dec
jbe
sbb
add
imul
jle
and
pop
iret
adc
jne
loope
cmpsb
or
adc
in
pop
adc
ss
mov
inc
xchg
jnp
movsb
cs
dec
push
ds
jne
sub
mov
cmpsb
jmp
cmp
or
cld
jge
iret
dec
enter
ljmp
push
push
lock
notb
ds
mov
dec
dec
jb
sub
addr16
sub
jne
cmp
cmp
mov
push
sahf
add
push
pop
add
pop
cltd
pop
adc
cwtl
mov
movsb
rolb
fisubs
sub
les
cs
pushf
mov
mov
cmp
sbb
dec
lret
or
lods
into
stos
and
mov
imul
inc
and
xor
jnp
and
mov
pop
flds
inc
xor
xor
mov
int3
inc
jle
lret
je
ret
shl
insb
jecxz
aam
popf
stc
pop
hlt
insl
jmp
scas
jo,pn
sbb
mov
xlat
add
test
and
ljmp
or
sbb
xor
mov
dec
sar
mov
scas
mov
mov
movsl
es
ljmp
pop
shlb
sbb
inc
push
fwait
and
loope
out
in
cmp
outsb
mov
lcall
mov
and
cmp
shr
sub
dec
mov
adc
iret
out
les
mov
push
cmp
push
stc
jbe
xchg
out
add
jae
aad
lods
sbb
ret
jo
fmul
inc
and
pop
lcall
bsr
cmc
pop
push
push
mov
push
xor
xlat
es
jnp
ficoms
cmpsb
lcall
mov
out
imul
sbb
iret
or
and
lods
sub
in
mov
jne
call
mov
jecxz
enter
aam
out
pop
insb
sub
adc
dec
int
xchg
pop
ljmp
shr
mov
lret
mov
push
push
lahf
lahf
xchg
ja
out
fmul
test
addr16
cmp
inc
dec
lods
leave
inc
mov
fwait
mov
repz
icebp
out
fldcw
lret
mov
push
cmpsb
lcall
pop
andb
fs
mov
inc
mov
mov
dec
cmp
mov
mov
cmc
or
and
shll
mov
xchg
sbb
push
mov
cltd
and
push
scas
mov
mov
add
xchg
inc
scas
sbb
sub
stos
mov
pop
sarl
push
inc
int
xchg
add
mov
std
jp
popf
fbld
scas
inc
leave
pop
mov
push
and
idivb
sub
add
pop
sub
test
cvtps2pd
ja
cmp
testb
push
xchg
fs
ds
xor
shll
sahf
int3
jecxz
push
into
jo
clc
outsb
xchg
cmp
mov
inc
cmp
fsubl
mov
inc
mov
jb
bound
ret
aam
int3
das
dec
and
mov
xor
test
addr16
or
or
arpl
rcrl
sbb
in
pop
dec
imul
and
orb
js
pop
testb
pushf
movb
movl
jmp
cs
xchg
sbb
pusha
lods
add
lock
cltd
out
xchg
in
aaa
mov
ds
xor
sub
fsubs
aaa
xor
xor
pop
in
cli
out
xor
xor
out
mov
aas
insb
mov
xchg
daa
fmulp
jno
mov
xor
mov
sbb
jo
daa
fnstcw
mov
cli
mov
cmpb
sahf
jno
jle
dec
mov
sub
push
nop
stc
sbb
xor
in
lahf
jp
sbb
cmp
mov
xor
jb
sub
pop
push
mov
inc
mov
add
adc
outsb
mov
jae
enter
mov
aad
out
inc
cmpsl
aam
loope
shlb
inc
cmp
dec
popf
nop
ret
outsl
dec
sbb
sbb
in
imul
orl
pop
xchg
gs
into
imul
sbb
jno
dec
into
ja
add
repz
cs
stos
lret
pop
adc
loope
mov
pop
or
test
loop
sbb
shl
pop
scas
rol
in
stos
bound
popa
mov
fnstsw
divl
jl
imul
pop
cmp
mov
subb
pop
xor
jecxz
mov
iret
cmpsb
test
sub
pushf
mov
jno
add
xor
sbb
add
sbb
ja
sub
insb
movsl
cmp
xchg
aam
push
xor
arpl
stc
or
cld
into
sbb
jmp
in
mov
scas
mov
or
push
repz
pop
push
push
scas
pop
iret
and
mov
jecxz
jp
sub
xor
or
imul
int
pop
cmpsl
add
rcrl
adc
cmp
push
push
insl
mov
rcll
pop
jbe
inc
test
xor
leave
mov
mov
xor
mov
cmpb
mov
or
mov
jns
mov
fsubs
addr16
mov
lea
inc
push
xchg
ror
mov
orl
fidivrs
cmp
push
jmp
jecxz
jge
push
inc
lock
xlat
pop
xor
dec
ret
mov
popa
xor
outsb
dec
clc
mov
add
pop
stos
rcrl
or
repnz
andl
pusha
loopne
into
jecxz
sbb
fldcw
xlat
shll
sahf
sub
jae
test
jae
inc
mov
cwtl
icebp
pop
std
sahf
mov
imul
xchg
adcl
add
faddp
aad
repz
mov
mov
mov
pop
lds
jg
movsb
fucom
lds
xchg
dec
std
dec
rcll
mov
stc
inc
mov
outsl
adc
push
stos
inc
loopne
mov
xchg
js
xchg
mov
je
pop
jno
pushf
cmp
inc
inc
mov
dec
shll
das
cmp
iret
push
jo
push
ficoml
add
arpl
sbb
shrl
sarb
and
aad
mov
and
mov
outsl
out
xor
adc
xchg
call
or
add
and
fs
in
cmp
and
shrl
cmp
in
mov
cmp
pop
and
xor
push
adc
test
mov
inc
pop
inc
rorl
into
lret
xor
call
sub
call
roll
loop
push
xchg
mov
pusha
icebp
fwait
mov
or
jo
mov
das
push
jae
xor
xor
xchg
jge
push
jmp
push
sub
mov
vaddsd
insl
push
in
filds
mov
in
xchg
sbb
lcall
fsubs
or
cmp
xchg
sbb
sub
scas
mov
pop
imul
into
or
pop
lods
mov
ret
add
jae
out
inc
stos
lret
mov
sbb
lock
stos
ljmp
les
mov
jecxz
jl
xor
or
aam
and
stc
push
divl
xchg
std
imul
aaa
dec
shl
adc
fisttpll
xlat
loopne
ljmp
mov
mov
pop
out
imul
push
add
pop
aas
shlb
xchg
lcall
mov
fiaddl
aaa
xor
or
pop
add
inc
roll
outsl
cmc
gs
xor
mov
add
sbb
aad
test
cmc
movsb
add
andl
xor
mov
mov
inc
sub
mov
pop
or
nop
jae
push
cmpsl
cmpsb
sub
aad
shrb
jecxz
mov
dec
icebp
call
lock
pop
repz
push
scas
cmp
outsb
out
cmp
inc
mov
xor
pusha
push
push
lods
jns
dec
or
xchg
jo
imull
or
pop
jp
lock
mov
xor
add
movsl
shrb
pop
inc
cli
insb
fimuls
cli
sub
testl
jge
out
mov
pop
pop
mov
ja
sbb
mov
inc
adc
and
ret
mov
shll
pop
icebp
sub
cmp
cmp
add
mov
idivb
lahf
fcoms
cld
xor
cltd
icebp
inc
adc
jns
sub
sar
daa
dec
das
mov
and
mov
mov
jae
cli
mov
lret
and
icebp
lock
jns
dec
sub
pop
jne
cli
stos
xchg
xlat
sbb
push
dec
jmp
add
dec
ror
xchg
rcll
mov
inc
dec
sub
xor
hlt
shrb
mov
imul
lock
fdivrl
inc
addr16
cmp
mov
pop
ret
pop
leave
mov
or
test
gs
adc
jbe
adc
push
stc
push
mov
dec
setne
cli
pop
sti
addl
incl
inc
and
scas
sub
mov
adc
leave
add
loopne
ret
fsubr
clc
mov
xlat
xor
aam
or
and
add
inc
sub
jp
ret
lret
leave
rclb
xchg
cmpb
cmp
aas
jns
push
and
rcrb
scas
jb
ret
sahf
cmpsb
pop
dec
movl
call
jo
sti
dec
cltd
in
inc
pushf
jecxz
jno
pop
mov
dec
mov
push
mov
paddd
rorb
sub
xorl
add
jb
xor
add
movsb
xchg
pop
push
fisubs
je
pop
fistl
mov
jae
mulb
jp
inc
xor
stos
fsubl
roll
cs
jns
mov
mov
xchg
push
out
pop
loop
aaa
jl
scas
push
ss
loope
faddl
sub
daa
test
jb
arpl
adc
daa
rolb
js
ja
jnp
xorl
cli
lods
notl
repnz
sti
lcall
insb
pop
ficoms
cli
test
sub
xchg
mov
and
sub
loope
enter
rcll
stc
xor
dec
mov
xchg
xchg
xor
addr16
ss
sbb
pop
das
cmpsl
and
bnd
out
xor
inc
int3
mov
popl
jp,pn
inc
or
jnp
movsb
ja
jge
dec
mov
int
cmove
add
cmc
pop
repz
xor
dec
pop
call
add
loopne
lcall
jo
mov
inc
pop
xor
push
push
inc
int3
pop
mov
inc
inc
mov
xor
xor
mov
daa
movsb
aad
cwtl
adc
xchg
jg
icebp
and
mov
sub
loope
mov
in
mov
lcall
fsubl
out
les
cli
sbb
jne
adc
or
xor
test
xlat
out
pop
lahf
gs
cmpsb
leave
mov
xchg
cmovbe
add
popf
sti
push
mov
xor
test
mov
dec
mov
in
pop
mov
lret
mov
dec
das
mov
test
cli
sub
jle
push
dec
pop
push
in
mov
ror
ret
pop
data16
es
sbb
and
nop
lods
out
mov
cmpsb
cld
mov
orl
mov
push
mov
gs
mov
lahf
mov
insb
mov
pop
je
cs
stc
orb
rolb
cmp
or
inc
adc
or
fsts
std
cmp
mov
or
in
pop
push
sub
adc
xor
push
cli
xor
out
imul
scas
rcl
or
repnz
cmp
pop
sti
jb
sbb
test
movsl
pop
out
pop
mov
js
inc
inc
xor
scas
inc
inc
adc
inc
cmc
adc
push
jl
in
scas
adc
pop
dec
cmc
mov
push
pushf
inc
in
test
pop
pop
ficompl
mov
addr16
fwait
push
adcb
mov
xchg
jle
xor
test
push
dec
imul
adc
xchg
and
shrl
xlat
arpl
lock
xchg
mov
xlat
faddl
out
aas
rcll
jnp
push
and
leave
insl
sbb
sbb
int3
in
jae
xor
push
xchg
cld
out
shlb
or
shrb
hlt
adc
xor
testl
mov
push
daa
insb
repnz
movsl
adc
or
int3
and
push
cld
jo
and
in
pop
add
vcvtps2dq
xchg
cld
jne
inc
dec
mull
ss
sbb
into
push
push
mov
mov
mov
out
test
pop
mov
shll
es
ret
clc
xor
hlt
loope
rcll
sbb
adc
and
xchg
pop
and
fwait
test
push
add
lea
cmpsl
jns
push
loop
subl
gs
dec
lock
loop
sbb
shl
fidivs
sbb
test
lcall
test
sub
xchg
cmpsb
adc
in
pop
call
mov
enter
inc
imul
sti
push
iret
xchg
lods
out
pop
or
ss
dec
roll
mov
out
pop
jns
stos
cmp
and
xchg
cmpsb
mov
mov
sub
sub
fwait
aaa
imul
mov
clc
movsb
inc
and
stos
add
adc
aaa
mov
mov
cmp
mov
add
cmp
mov
mull
inc
pop
mov
insl
pop
scas
addr16
mov
fisttps
aas
pop
or
pop
in
jl
test
jp
fwait
xchg
cmpsb
loope
pop
jge
or
jg
sbb
mov
jmp
xor
cmp
dec
fstps
cmpsb
shlb
hlt
pop
mov
xlat
js
sti
mov
mov
stos
aam
push
pop
dec
insl
push
jg
dec
fists
out
mov
jl
dec
jp
xchg
das
push
or
cmp
orl
xchg
push
mov
inc
bound
xorl
mov
adc
andb
jbe
push
xchg
std
and
daa
push
dec
gs
xchg
lods
or
cmp
push
jp
sub
jae
cmp
jge
jo
je
mov
mov
lock
popa
pop
mov
or
dec
sub
inc
es
jp
xchg
adc
cmpsb
ret
dec
mov
mov
orl
in
imul
inc
jno
fsubrp
out
jo
mov
inc
or
jb
jl
ret
pop
mov
insl
bound
cli
mov
inc
sar
repz
fsubrp
push
sbb
adc
pop
andb
or
dec
push
lcall
stos
testl
mov
insb
icebp
sub
pop
mov
test
inc
xchg
inc
or
lahf
cmpsb
cmp
inc
inc
les
and
jbe
push
fmuls
cmp
mov
pop
xchg
xchg
loope
pop
loopne
ljmp
xor
lahf
push
lahf
scas
das
mov
inc
xor
int3
push
outsb
mov
inc
inc
xor
push
xor
and
sub
inc
fidivs
fsubrl
js
mov
addr16
mov
jl
inc
jle
je
add
movsb
imul
sahf
xchg
aas
ret
stc
insl
out
das
jno
in
inc
or
pop
fcompl
je
jp
test
jae
add
add
add
add
lock
test
xchg
es
aad
add
adc
fwait
jns
shrb
and
sbb
hlt
js
cld
sub
ret
push
lds
add
shrb
into
jmp
mov
sbb
mov
cmp
lcall
cwtl
dec
shrl
dec
dec
scas
adc
rcrb
xor
test
sub
mov
or
roll
outsb
jmp
jge
mov
adc
lret
sub
push
fwait
icebp
mov
push
lock
popf
mov
adc
fistpl
push
add
xchg
jne
mov
or
test
pop
mov
stc
mov
ds
cwtl
rorl
lcall
movsl
mov
ja
faddp
inc
xchg
pusha
push
pop
or
jne,pt
xchg
pop
push
xchg
push
inc
loop
in
dec
lcall
adc
xchg
sub
push
fsts
dec
dec
cmpsl
mov
test
mov
fsubl
add
sub
stos
sbb
jnp
ficoml
xor
sbb
pop
sub
mov
adc
movsb
mov
out
cmpsb
into
iret
or
ror
sbb
ds
xlat
pop
loop
in
sub
mov
notl
movsl
sbb
and
add
adc
mov
push
xor
mov
sbb
adc
sub
loop
out
loope
fs
insl
mov
jae
push
inc
aam
mov
movsl
push
inc
pop
loope
test
rcrb
dec
xchg
sbb
dec
enter
sbb
pop
dec
rolb
ljmp
inc
pusha
ret
adc
ds
je
inc
insb
sbb
adc
repnz
int3
add
mov
add
xchg
pop
mov
mov
out
or
add
ljmp
xchg
jne
out
inc
int
lcall
xchg
mov
push
cmpsb
pop
cmp
jo
mov
mov
mov
inc
xchg
inc
clc
fisubl
mov
out
push
stc
dec
in
insb
rcl
sub
or
sub
mov
dec
xchg
jl
lds
mov
jecxz
sub
orb
popf
or
pop
in
jl
mov
ret
je
imulb
add
les
and
lcall
pop
or
aam
sub
ds
mov
addr16
cmp
xor
jp
aad
int3
popf
lock
fcomps
mov
jne
xchg
jge
pop
inc
mov
jo
pop
in
lcall
notb
fwait
mov
jns
leave
lods
mov
mov
push
bnd
aaa
mov
push
cli
int
xchg
push
jo
sti
ss
dec
test
mov
xchg
out
adcl
test
in
out
cwtl
mov
adc
ja
loope
mov
repz
xchg
fcmove
adc
cs
fbstp
movsb
push
emms
std
out
pop
adc
cmpsb
fildll
xchg
mov
pop
mov
mov
pop
ficomps
daa
push
xchg
and
and
js
jno
jge
xorb
fdivs
loope
push
push
addb
mov
sbb
and
sarb
cmp
orb
cmp
in
popa
mov
dec
fs
icebp
ret
jo
sub
sbb
mov
sti
ss
aas
dec
jecxz
mov
nop
sbb
cmp
xor
repnz
lahf
popa
pop
and
inc
cli
mov
inc
scas
aad
je
rcrb
es
cli
fists
out
lods
adc
lock
cld
mov
mov
lods
push
mov
ds
dec
sub
cmc
mov
testb
mov
es
cli
lcall
jge
sbb
inc
pop
dec
aad
test
jp
push
mov
mov
jmp
dec
or
mov
mov
mov
add
dec
ljmp
loope
xchg
add
mov
loopne
xchg
and
aad
cmp
imull
add
lods
adc
ds
cmc
jnp
xchg
mov
mov
pop
jne
pushf
adc
test
xchg
push
movsl
jecxz
add
push
aam
div
sub
mov
push
stos
das
pop
out
mov
lods
pop
or
jl
or
pop
cmpsl
add
push
inc
jno
jnp
aaa
orb
jmp
lock
mov
pop
loopne
scas
xor
lock
add
popa
sbb
ss
pop
mov
fists
out
pop
pop
and
out
out
jne
cltd
xor
insb
sub
enter
aad
stos
loope
xchg
mov
push
lods
imul
sbb
jns
mov
js
sbb
bound
xchg
dec
inc
push
xchg
iret
mov
jle
xchg
adcb
lds
pop
cmp
ret
sbb
jo
add
xchg
push
repz
in
mov
xor
clc
jge
inc
enter
push
ds
aas
jb
mov
mov
pop
loope
dec
xor
enter
roll
adc
sti
daa
fwait
or
jp
push
call
xchg
psubd
dec
int
out
pop
xchg
mov
add
repz
je
lret
ds
jmp
into
and
icebp
cmp
jb
in
push
jecxz
cmc
arpl
push
das
aad
push
cmp
cmp
push
pop
inc
fisubs
pop
and
and
xchg
jg
cmpsb
xorl
add
mov
loope
adc
ret
mov
insl
icebp
aam
jle
and
xchg
in
xchg
test
xchg
push
mov
into
push
push
rcl
sbb
sbb
dec
or
mov
adc
sbb
pop
cmp
push
bound
dec
imul
mov
add
dec
pop
scas
lods
mov
movsl
js
and
leave
mov
lea
pushf
movl
call
xor
movb
pushl
popf
push
push
pushl
ret
test
xor
test
clc
xor
call
pushf
xor
jmp
movl
pusha
lea
jmp
adc
pop
test
inc
sti
dec
xchg
fldcw
jg
pop
imul
or
fisttpl
out
jle
jecxz
pop
mov
icebp
fsubrp
fidivl
and
push
aam
mov
lds
fs
push
dec
pop
pop
and
arpl
pop
jle
jb
int3
outsb
std
add
stos
xor
fisubs
adcb
mov
js
cmp
jne
pop
out
cltd
pop
sub
push
das
sub
mov
xchg
les
inc
jne
xor
cmp
in
xor
hlt
push
mov
pushf
inc
push
sbb
popf
xchg
push
int
mov
aam
in
out
stc
xor
pop
ret
icebp
loope
sbb
jg
and
xor
push
xchg
add
ror
test
insl
pushf
inc
cmp
test
imul
rcrb
inc
shrl
nop
jmp
and
mov
mov
inc
out
xor
mov
jb
jb
les
loope
shl
in
or
out
data16
sub
add
xlat
cmp
out
xor
mov
push
jge
arpl
and
sbb
mov
or
cmpsb
cmpsb
fcom
pop
xor
bound
rolb
sbb
aam
gs
cmc
sbb
mov
mov
push
repnz
push
cwtl
mov
lahf
inc
mov
and
ljmp
jae
jno
scas
xor
push
jle
mov
and
push
jl
cmp
outsb
nop
mov
mov
push
rcrl
pop
sub
gs
test
fldenv
mov
in
fcmovb
lds
add
fmuls
xchg
mov
xchg
mov
aaa
mov
xor
jge
rcl
xchg
xchg
add
push
xchg
sub
pop
rolb
imul
dec
insl
push
mov
adc
out
gs
pop
ret
imul
fisubrl
or
jno
leave
jns
pop
addr16
sbb
test
jg
ds
adc
dec
cmp
leave
push
jmp
aad
outsb
mov
pop
scas
add
dec
jns
dec
add
inc
shl
imul
inc
iret
loope
add
cmpsl
pushf
das
add
add
es
xchg
cmp
sbb
or
cmp
push
adcl
cmp
xlat
pusha
gs
cmp
icebp
xchg
mov
fwait
cmp
xchg
xor
sub
nop
aad
adc
cld
pop
outsl
lock
inc
in
ret
stos
xor
push
xchg
inc
in
pushf
xchg
push
mov
inc
test
leave
fwait
and
ret
and
xor
fcompl
popf
arpl
add
jo
dec
push
or
lea
cmp
push
adc
push
lds
xchg
inc
bound
pop
sti
mov
testb
adc
sahf
negl
xor
ret
jge
pop
xchg
add
jp
in
mov
jno
xor
pop
scas
jbe
xchg
or
sbb
repz
sub
xchg
push
push
pop
xchg
xchg
push
out
or
int3
cmp
mov
xor
mov
mov
repz
jg
or
jbe
pushf
mov
jns
das
xchg
fsubl
or
adc
mov
les
in
in
test
mov
repz
jbe
mov
cltd
push
inc
jmp
mov
push
out
jbe
shr
test
ds
rclb
cmp
jns
xchg
ret
adc
loop
cltd
loop
mov
cmp
cwtl
jae
mov
je
rcr
leave
dec
cwtl
or
test
cwtl
mov
lret
xchg
rorl
jmp
cld
jge
xor
dec
pop
mov
sub
sbb
xor
push
inc
xchg
sub
inc
into
scas
das
mov
xchg
in
sbbl
xor
add
ret
and
xlat
enter
mov
push
mov
mov
push
movl
push
lea
jmp
outsl
cmp
loop
insb
xchg
jbe
popa
andb
imul
mov
xchg
cmp
sahf
jg
inc
mov
repnz
mov
mov
mov
repz
test
jbe
lret
jl
jb
xor
insb
push
lods
cmp
popa
andb
push
adc
ret
dec
xor
push
cmc
mov
push
pop
sahf
jg
int3
dec
inc
push
test
jnp
adc
cmp
outsb
fsts
out
andb
pop
dec
cwtl
je
pop
int3
push
adc
mov
enter
and
jns
sahf
jg
inc
and
xor
xor
mov
inc
xchg
lcall
sub
popa
andb
scas
stos
into
int
das
repnz
xor
out
in
aas
les
push
sahf
fildll
cmp
adc
arpl
rcrb
xrelease
fsub
mov
xor
cs
nop
shl
cmpsb
pop
inc
into
push
cmpsb
xchg
and
mov
pop
faddl
repnz
in
push
into
out
and
add
jl
dec
lods
push
push
roll
pop
add
and
or
insl
mov
negl
cmp
icebp
fdivrs
mov
call
popa
out
xor
mov
push
stc
mov
data16
dec
sub
insb
in
icebp
inc
rcrb
mov
ret
dec
and
mov
xchg
leave
mov
and
mov
lea
dec
pop
cmp
pop
jmp
pop
push
rcrl
mov
add
and
mov
cli
pushf
je
jle
decl
push
jge
lret
xor
shrb
xchg
xor
push
jle
push
mov
cld
addb
and
in
adc
lods
loope
scas
js
push
in
jne
dec
rcll
orl
incb
xchg
jle
stos
dec
lcall
pop
mov
pop
pop
fwait
jns
in
repz
push
stos
mov
xchg
jo
inc
push
and
mov
xor
mov
mov
mov
das
stos
cli
xor
and
leave
cmp
lahf
and
dec
jp
add
add
xchg
cmp
jle
mov
in
pop
jo
or
mov
mul
pop
inc
icebp
jecxz
scas
repz
xchg
std
outsb
js
out
addr16
data16
fucomip
xchg
sub
or
loop
and
xchg
mov
std
mov
adc
sarl
xchg
add
adc
pop
or
je
sbb
into
into
cmp
pop
in
push
stc
add
and
push
cmp
in
xlat
addl
jecxz
js
pop
inc
movsl
inc
push
xlat
pop
test
adc
repnz
lea
push
inc
stos
push
loopne
mov
xor
cmp
sub
ret
mov
pop
add
loope
shrl
rclb
sub
xor
mov
xor
xchg
lds
stc
cmp
outsl
outsl
lods
repz
nop
fsubrs
mov
sahf
dec
repz
jmp
faddl
lcall
in
cmpsl
or
and
test
push
jg
mov
push
subl
dec
mov
dec
mov
mov
and
pop
imul
cltd
in
gs
xor
pop
pop
andl
or
es
mov
cld
test
add
cmpsb
xchg
rorl
mov
jne
mov
mov
and
xchg
inc
call
movsb
xor
arpl
push
loope
js
dec
cmp
outsl
pop
fmull
mov
arpl
or
add
push
arpl
or
out
scas
and
in
mul
push
sub
and
or
js
sahf
inc
push
xchg
lret
movb
shrb
xchg
loopne
fstps
movsl
and
je
lods
das
mov
punpckldq
ror
push
lahf
sub
insl
scas
inc
insl
lahf
lret
dec
add
or
imul
fnstcw
or
imul
add
inc
repnz
fdivl
sub
into
shrl
fstl
sub
jbe
push
in
scas
mov
and
add
leave
sbb
insl
sbb
int
cwtl
add
cmp
mov
push
stc
int3
stos
jbe
test
xor
inc
fstl
aad
push
lcall
mov
xlat
fldcw
pop
mov
fiadds
fdiv
sti
sub
insl
pop
cmc
rcrb
cli
notb
mov
dec
into
xchg
and
std
inc
inc
mov
dec
mov
or
int3
lods
sub
and
fmull
jbe
jno
xchg
mov
aas
pop
loope
mov
out
mov
sbb
js
adc
add
inc
push
ret
push
cmp
cmp
clc
fs
mov
scas
test
xchg
lea
shr
push
hlt
in
shrl
sub
mov
inc
popf
lods
loope
std
pop
mov
dec
hlt
pop
sbb
int
pop
xor
push
loope
aas
adcb
jg
lock
xchg
mov
cmpl
xlat
pop
cmpsb
dec
rclb
lcall
xchg
mov
add
inc
inc
push
pop
cmp
ja
lcall
jl
inc
into
inc
ljmp
dec
out
pop
jns
or
into
push
cmp
push
int
adc
loopnew
in
cmp
dec
out
cmpsl
xor
leave
fildll
sub
add
push
and
push
xchg
mov
mov
dec
push
outsl
jmp
mov
testl
or
pop
test
enter
imul
jns
lahf
mov
push
mov
ljmp
sbb
out
sete
test
pop
xchg
push
or
sub
je
outsb
add
or
adc
add
add
test
cmpsb
sub
sub
xchg
orl
jmp
jmp
jg
icebp
cmpsb
mov
mov
cmp
adc
add
aaa
loop
pop
notb
pop
int
pop
push
xchg
jge
pop
dec
inc
test
cmp
hlt
js
dec
sar
mov
mov
pop
jmp
ret
jnp
in
ret
xchg
sub
xor
sahf
push
xchg
sub
int3
inc
scas
int
sub
adc
mov
add
sub
daa
inc
or
mov
dec
jle
dec
out
fwait
push
lods
fsubrl
push
ficoml
fcmovnu
divl
lret
in
mov
adcb
mov
test
mov
ret
scas
decl
sbb
pop
out
pop
xchg
cmp
cmp
sub
dec
mov
xchg
dec
mov
lds
cwtl
and
mov
mov
mov
rclb
xor
clc
cmpsl
mov
cmp
inc
jns
leave
in
out
jp
dec
int3
jnp
adc
sub
xor
cld
dec
inc
xor
aam
subl
in
xchg
test
pop
bnd
dec
outsb
sti
sbb
cmc
mov
outsb
int3
jmp
fbld
push
add
add
in
gs
adc
sbb
pop
fcomip
jecxz
dec
inc
adc
push
das
mov
or
shlb
dec
push
aad
pop
in
mov
dec
mov
sbb
rcr
das
repnz
cs
push
je
imull
dec
in
adc
pusha
fstpl
mov
mov
in
push
add
repz
clc
sbb
test
pusha
or
push
rcrb
mov
dec
out
add
popa
adc
movsb
js
sub
add
adc
lret
pop
and
lds
push
jp
and
lea
gs
test
add
jbe
cmpsl
sar
mov
lea
and
or
insb
mov
cli
inc
int
test
out
cmp
daa
sub
pushf
mov
mov
xlat
mov
addr16
enter
popa
or
jl
cmp
rcl
fisttpl
lock
inc
idivb
andl
iret
jmp
sar
add
subl
out
icebp
aam
lahf
fwait
and
mov
mov
add
pop
iret
movsb
mov
add
roll
pop
lret
push
in
stc
mov
mov
int3
jmp
cmc
loop
mov
js
xchg
lods
movsb
sub
scas
jmp
jl
pushf
adc
push
cltd
pop
lock
xchg
shlb
jo
bound
add
stos
push
cmc
sbb
sbb
sbb
je
mov
push
jno
xlat
cld
es
xor
xor
arpl
xchg
mov
and
movsb
sub
btr
mov
jl
aam
add
adc
fbld
push
rcrb
cmpsl
or
std
mov
xchg
mov
push
pop
push
in
push
pop
insl
ja
cmp
xlat
mov
pop
push
loop
jmp
mov
les
cltd
adc
daa
adc
xlat
fistpll
mov
jg
loope
dec
test
fsubr
jb
xlat
inc
in
sub
int3
inc
cwtl
mov
ss
jg
shll
fwait
jl
dec
mov
lret
pusha
mov
mov
adc
insb
fsubs
adc
push
adc
popf
je
lret
xchg
adc
mov
imul
das
cmp
into
sub
bound
incb
sub
movsb
cmpsl
and
mov
cmp
arpl
fcomps
in
test
rclb
cmp
xchg
adc
fiadds
dec
outsb
push
aam
jne
in
xor
jne
push
gs
jnp
mov
loop
fcoms
test
dec
pop
les
mov
push
xchg
and
mov
mov
or
cmp
push
mov
arpl
je
rorl
mov
add
push
repnz
insb
out
out
lds
test
sub
loope
inc
inc
iret
repnz
data16
bnd
jae
mov
gs
jnp
jns
out
cwtl
mov
mov
fisubl
mov
xor
rorb
loopne
loopne
inc
stos
ljmp
xchg
movzwl
rolb
mov
inc
and
pop
test
addl
aaa
sbb
push
test
push
je
ret
lods
ret
call
mov
ss
add
jo
pusha
inc
js
adc
xchg
popf
out
push
scas
daa
sbb
loopne
ljmp
shrb
lcall
enter
pop
lret
pop
stc
adc
sarl
inc
fiaddl
out
adc
mov
and
mov
sub
nop
xor
mov
sbb
jnp
mulb
push
imul
cmc
xchg
scas
fcmovnb
cmpsl
notb
xchg
mov
mov
and
loop
push
iret
mov
or
lea
std
xor
jbe
clc
out
pop
insb
sbb
gs
or
add
repz
push
push
mov
pop
xchg
outsb
shlb
mov
ficompl
out
push
adc
or
enter
push
out
testl
dec
adc
test
or
ja
push
jp
nop
je
mov
jle
inc
cli
dec
xchg
jle
mov
cld
insl
dec
inc
imul
cmp
jns
cltd
cs
hlt
cwtl
xor
or
divb
pop
jge
insb
in
in
xor
adc
cltd
js
mov
sbb
enter
ja
xchg
lret
shl
push
or
rcrb
mov
arpl
add
pusha
test
jg
or
jle
out
pop
sub
mov
sti
out
cmpsl
adc
in
repz
xlat
iret
arpl
out
xor
fildl
test
pop
pushf
jge
nop
xchg
jae
dec
adc
gs
sbb
jne
jne
roll
test
hlt
push
movsb
mov
adc
and
pushf
orb
int3
outsl
xchg
inc
aad
leave
repz
cmp
shl
push
adcl
sub
ss
insl
push
hlt
jne
sub
imul
sbb
in
jecxz
xor
dec
cwtl
pop
sbbl
and
js
xor
inc
imul
cwtl
mov
std
cmp
dec
enter
adc
xlat
add
push
test
pop
fisubs
inc
pop
lods
cwtl
or
repnz
lcall
add
mov
xor
arpl
or
xchg
mov
sub
cltd
sbb
xor
xchg
add
pushf
add
or
xchg
daa
test
push
out
push
ss
mov
scas
outsl
mov
lods
push
fadd
sub
gs
in
mov
outsb
push
rcrb
pop
incb
clc
add
mov
frstor
incl
mov
je
insb
aad
jns
dec
fimuls
rorl
orb
sbb
test
inc
adcb
cld
jnp
aas
pop
scas
es
insb
or
aad
fs
pushf
movsb
in
dec
dec
push
or
push
rclb
xor
test
test
orl
mov
imul
sbb
rolb
pop
shlb
aaa
adcb
fsubrs
xor
and
call
and
add
xorb
lahf
push
out
cltd
clc
push
pop
fwait
or
bound
add
out
clc
js
push
xorl
idivb
scas
clc
jmp
xor
pushl
pop
mov
mov
cmp
xadd
lods
mov
outsl
out
xor
mov
leave
jnp
dec
inc
xchg
mov
xchg
out
std
adc
push
inc
mov
pop
lods
mov
pop
stos
aas
fs
add
jae
mov
js
popl
jb
fidivrs
cld
xlat
fmul
stc
movsl
push
and
inc
pop
jecxz
mov
xchg
sti
sbb
insb
jecxz
popf
sub
test
mov
cmp
adc
ds
loopne
xorb
ljmp
adc
fucomi
outsl
in
xor
imul
push
test
and
pop
mov
ja
jmp
push
lea
or
and
int3
push
inc
cmpsl
les
or
pop
stc
ljmp
push
xor
test
sub
xor
sub
pop
test
dec
nop
sbb
mov
test
dec
inc
jg
shrl
xchg
mov
push
xchg
jno
stos
pop
sbb
cld
xchg
inc
pop
pusha
jno
rcrb
mov
jmp
inc
shlb
aad
cmp
mov
jnp
adc
or
or
sub
sub
jns
ds
pop
lcall
sbb
dec
push
cld
test
iret
outsl
testb
sub
mov
jecxz
aam
and
and
xchg
mov
and
scas
mov
push
push
aam
mov
aad
xorl
test
hlt
shrl
mov
dec
push
imul
repz
cmp
mov
ret
fs
jno
popa
aaa
xchg
xor
gs
daa
fs
cli
daa
jbe
aad
xchg
or
js
pop
aaa
jge
orl
cmp
popa
sahf
sarb
orb
loope
push
push
loope
pop
test
icebp
add
xchg
lret
enter
cmp
into
shlb
push
cli
mov
sbb
mov
push
cmp
lcall
jno
push
pop
leave
jge
call
outsl
mov
jae
mov
fidivl
mov
mov
loope
jge
ret
outsb
inc
push
or
dec
jns
leave
xchg
mov
fbstp
rorl
or
add
pop
pushf
mov
inc
xor
inc
adc
mov
add
stos
mov
pushf
ljmp
add
addr16
das
pop
sbb
gs
fwait
cmp
lea
orb
mov
outsl
mov
mov
adc
jmp
add
mov
mov
and
adc
clc
loopne
add
aam
or
dec
insb
mov
in
lods
mov
rolb
push
and
mov
cmpsl
add
add
into
jl
dec
jns
lock
xchg
adc
and
and
aad
adc
sti
sub
les
sub
push
xlat
pop
in
rcrl
pop
cmpsl
dec
xor
data16
sarb
cmpsb
dec
lahf
mov
mov
sbb
scas
cmp
dec
or
ret
add
mov
mov
out
sbb
push
lds
icebp
cmp
lods
inc
mov
jp
lahf
enter
and
sbb
lods
cmpsb
sub
clc
lea
pop
ret
cmp
dec
test
repz
sbb
xchg
hlt
jne
ss
cli
test
std
xchg
jp
add
fdiv
jns
ss
call
adc
mov
or
jg
out
dec
dec
mov
lcall
adc
cmp
into
inc
jo
sub
or
xchg
jl
pop
fisubs
insb
add
mov
in
jge
je
jle
sbb
nop
mov
xlat
jae
int
rorl
sbb
int
jmp
inc
push
jle
fldenv
xchg
shl
mov
adc
ljmp
shlb
repz
neg
inc
mov
test
pop
add
mov
sub
iret
adc
sbb
mov
xchg
and
xchg
or
sbb
std
inc
addr16
inc
shld
or
loope
pop
out
add
add
sbb
jns
mov
test
nop
or
insl
mov
xor
jb
lcall
shll
push
push
scas
jge
daa
adc
clc
cli
cltd
jl
aad
jmp
mov
pop
dec
loopne
repz
mov
pop
addl
cmpsb
shrb
xor
aas
andl
arpl
dec
xchg
jns
movsb
pop
cmp
and
fs
pop
out
std
dec
xor
mov
repz
mov
loopne
mov
aaa
mov
push
call
inc
pop
add
add
out
shlb
in
out
es
mov
jge
inc
xchg
stos
addl
mov
movsl
mov
mov
stos
inc
test
stos
decb
mov
test
shll
mov
cmp
pop
in
frstor
clc
fsts
or
in
clc
mov
fbld
insb
lods
mov
mul
add
xchg
test
cli
andb
iret
dec
xor
lret
jns
pop
mulb
mov
cld
popa
div
test
lret
mov
fxch
pop
dec
mov
push
test
mov
inc
sub
test
mov
scas
push
push
mov
movsb
sbb
jle
and
sbb
dec
test
nop
push
daa
stos
fmulp
arpl
sbb
outsl
sarb
repz
mov
ss
lret
adc
pop
in
loop
lods
add
dec
dec
lret
or
xor
jmp
out
push
jns
and
push
push
cmpb
push
sahf
lods
scas
xor
addb
fadds
and
mov
int3
cmpsl
xchg
push
inc
pop
xchg
or
mov
in
out
aad
jmp
pop
jge
xchg
xor
cld
sub
dec
cmp
sbb
jge
out
mov
cmpsb
bound
sub
pop
dec
sti
scas
mov
xchg
push
aad
ret
test
popf
cmp
movl
or
lods
cmp
stos
in
lods
add
clc
cltd
cs
mov
and
roll
xchg
fwait
mov
sbb
mov
cmp
xchg
mov
xor
lods
xor
imul
cli
inc
out
lods
ds
ja
inc
push
push
rolb
push
lods
sbb
imull
push
cld
movsl
cltd
and
push
push
stos
xor
xchg
lcall
fcmovb
push
cld
dec
lock
fldt
add
inc
fstps
bnd
outsl
sub
ret
ffreep
mul
xchg
dec
and
jl
clc
mov
push
cs
incl
cld
sbb
cmp
xchg
xchg
pop
adc
pop
pop
cmp
rclb
cltd
clc
xor
jbe
mov
jp
xor
xor
dec
in
push
adc
daa
jl
push
in
movsb
push
dec
inc
hlt
fildll
xor
mov
loop
inc
mov
xor
dec
scas
sub
adcb
rcrl
cmp
xor
lcall
fidivrl
jae
jecxz
lret
out
mov
mov
roll
ljmp
mov
dec
xor
pop
mov
in
mov
xchg
lret
inc
jns
jo
cmpsl
mov
add
xchg
jmp
shrl
adc
stos
sahf
ficompl
xchg
jne
roll
add
call
push
mov
mov
dec
xchg
sub
push
and
lahf
adc
pop
adc
jmp
test
mov
rep
adc
call
mul
or
adc
jg
test
xchg
arpl
jne
lods
xchg
ret
fists
jne
push
xlat
aad
scas
out
test
lcall
xchg
rolb
cmc
pop
adc
inc
fdivrl
imul
ret
pop
jecxz
ret
out
lods
push
outsl
jl
not
scas
outsl
test
add
fld
jnp
div
xchg
cmp
fimuls
aam
add
jno
stos
loopne
test
test
mov
stc
and
xchg
lock
adc
mov
bound
add
and
in
movsb
test
adc
ja
add
fcmovb
mov
fwait
cmp
jmp
shrb
fsubs
pop
or
mov
sbb
outsb
ja
pop
out
pop
pop
jg
movsb
and
dec
inc
xor
pop
pop
xchg
pop
stos
pop
imul
xor
sub
mov
ret
pop
inc
incl
mov
sub
mov
push
lock
mov
jne
add
and
in
cs
gs
pop
inc
mov
mov
xchg
dec
orl
sbb
sub
xchg
ret
daa
mov
shr
enter
jl
push
and
push
add
mov
cmp
cmp
fistl
pop
ss
aad
push
outsl
mov
nop
shlb
push
mov
dec
jge
jp
inc
adc
in
mov
jnp
es
stc
pop
sti
mov
sbb
xchg
pop
mov
stos
out
adc
mov
in
add
jae
js
inc
lds
xchg
rcrl
mov
xor
mov
out
aad
in
xchg
mov
mov
push
add
loopne
scas
push
ljmp
sbb
jl
cmc
fnsave
cld
push
cld
mov
xchg
mov
inc
jecxz
in
fildll
jbe
cmp
aas
icebp
inc
and
jecxz
repz
inc
jle
repz
out
add
cwtl
ljmp
xor
aaa
lahf
push
cmp
xor
mov
movsb
in
xchg
push
shll
ljmp
sub
dec
xlat
and
xchg
les
fs
addr16
mov
jb
outsl
cmc
or
fstpt
add
loopne
orps
sbb
int3
pop
cmp
insb
lret
clc
sahf
lret
and
lret
aam
pop
fisubs
or
pop
sti
test
out
add
or
add
insb
mov
push
int3
ret
outsb
lret
sarb
jl
push
sbb
mov
scas
pusha
icebp
aas
nop
adc
pop
aad
push
test
push
cld
xorb
inc
and
pop
jb
mov
or
mov
jo
add
pop
into
fadd
inc
out
jo
lret
pop
ret
mov
mov
pop
xchg
cmpsb
int
pusha
cmpsl
aaa
fisttps
xorl
in
jb
xchg
cmp
jl
mov
push
cli
sbb
xchg
pop
push
jmp
xchg
cli
xchg
push
stos
iret
pop
loop
sbb
ss
cmp
movsb
jmp
decl
data16
xor
out
into
out
popa
add
xor
xchg
mov
xchg
mov
fwait
mov
ret
cmp
fnstenv
daa
mov
scas
lods
test
pop
dec
cmp
in
push
and
incl
push
les
mov
mov
pop
dec
scas
sub
das
jmp
jno,pt
bnd
nop
push
icebp
jns
out
cmp
push
xchg
and
mov
bound
hlt
into
mov
addb
mov
insl
idivl
sti
push
xchg
mov
rcrl
inc
and
dec
jae
jae
cmp
sub
cltd
cmp
repz
mov
pop
push
jl
cli
popa
jmp
add
inc
xor
loope
lods
das
mov
mov
pop
cmpb
mov
mov
ret
mov
fistpll
dec
pop
or
jns
push
xchg
movsl
jns
stc
sub
leave
mov
pop
inc
mov
pop
cmc
cli
inc
push
rcrb
jecxz
cmp
into
sub
rcll
jg
fldt
mov
adc
in
andb
int3
inc
pop
push
lods
in
jne
shlb
into
andb
stc
sbb
jle
adc
and
inc
les
pop
jle
fstpl
into
loopne
cltd
fcmovnu
mov
push
in
mull
mov
jge
in
repnz
add
mov
stos
inc
lret
es
insb
xchg
js
pop
repnz
pop
loopne
sahf
sbb
cmpsb
stos
scas
das
and
dec
jb
aam
fmull
movsb
pop
aaa
adc
clc
xor
fldcw
cmp
insl
hlt
loop
sti
sub
and
push
stos
rclb
rcrb
pop
jbe
cmp
push
inc
ljmp
sbb
das
jecxz
mov
shlb
pop
loop
add
mov
dec
mov
inc
mov
mov
push
in
pop
scas
and
ret
stc
xor
inc
jp
mov
pop
mov
shrl
pop
aas
outsb
fcoml
push
pop
sbb
push
scas
pop
in
cmp
xchg
xchg
popf
xchg
push
loopne
test
inc
cmc
inc
aam
cltd
xchg
ds
sbb
adc
pop
je
rol
jae
pop
xchg
dec
dec
ss
jge
fistpll
xchg
loopne
pushf
cs
add
add
int3
out
movsl
test
dec
cmpsl
leave
bound
adc
cli
lock
dec
dec
push
nop
rcll
or
stos
adc
ret
das
shll
icebp
pusha
push
in
mov
adc
cltd
fldenv
push
test
dec
sub
loope
add
inc
xchg
and
adc
and
adc
fstps
cmpsl
cli
cs
or
pop
lock
sbb
mov
inc
push
je
push
in
mov
mov
ljmp
xchg
cmp
mov
mov
add
das
not
sbb
cmp
mov
movsb
in
enter
mov
mov
xchg
jl
call
lcall
daa
test
xchg
sub
add
add
pop
insl
mov
and
int
aas
add
or
mov
and
push
inc
xchg
aas
fdivrs
or
dec
or
inc
ja
fwait
cmpsl
lea
cwtl
push
pushf
int3
mov
insl
mov
shrl
test
inc
test
sbb
fildll
push
xchg
sub
into
scas
xor
rol
inc
jmp
mov
mov
out
or
hlt
test
push
jmp
mov
jmp
pop
mov
out
pop
fldt
ret
outsl
fisubs
push
fistl
jmp
or
aad
jnp
scas
je
sub
inc
in
test
aam
pop
or
xchg
xchg
rolb
imul
notl
lret
jae
adc
shlb
inc
aam
cmpb
decb
and
adcl
out
and
xchg
jge
add
mov
mov
loopne
sub
pop
out
mov
imull
add
adc
lret
mov
mov
mov
int3
lcall
hlt
mov
lahf
repnz
adc
push
sets
adc
aaa
sbb
mov
sub
jmp
outsl
add
mov
int
outsb
out
sbb
cltd
addl
sub
pop
cmc
lret
mov
adc
pusha
lcall
lock
sub
inc
faddl
dec
je
lock
mov
and
sbb
dec
loope
xchg
ret
in
push
or
daa
sarl
push
fistpll
mov
setp
mov
push
ss
xchg
xor
cmpsb
cmc
jge
inc
mov
jmp
xchg
ds
sbb
adc
inc
mov
sahf
cmp
push
lds
test
mov
stos
and
popf
add
inc
add
adc
cs
fidivl
stos
inc
push
repz
imul
lods
sbb
cmp
dec
in
dec
scas
lea
adc
rorl
sbb
pop
out
mov
jae
mov
ds
adc
mov
lods
loope
add
test
inc
fwait
pop
jne
ret
xchg
pop
xor
fsubl
jns
aaa
or
adc
sbb
aad
lea
inc
pop
jmp
mov
lods
in
mov
jmp
sar
in
rcll
and
in
mov
lds
pop
lahf
out
sbb
jge
push
rcrb
pop
xorl
jge
ja
push
adc
ds
in
rcrl
repz
dec
cwtl
sbb
icebp
cmp
pop
pop
inc
imul
stos
xor
pmulhuw
mov
addr16
lods
ffree
and
mov
pop
out
sbb
mov
mov
sbb
push
dec
cmp
xchg
jae
stc
sbb
xor
cmp
decl
mov
pushf
and
cmp
iret
cmp
popf
mov
aaa
sub
mov
rcrl
mov
rcrl
loopne
sub
and
jae
sub
imul
add
jg
push
popf
idivb
in
ds
pusha
pushf
movl
mov
movl
pusha
mov
push
pushf
lea
jmp
call
movl
push
mov
mov
pushl
lea
jmp
jnp
orl
jnp
aaa
aaa
loop
mov
cmpsb
push
inc
xchg
pop
frstor
lret
stos
mov
inc
inc
outsb
data16
adc
pop
xor
cmp
je
ds
icebp
nop
add
push
test
inc
aas
pop
stos
cli
xchg
jnp
sbb
in
sbb
xor
dec
push
mov
mov
test
mov
repz
sub
test
aam
testb
mov
xchg
daa
aam
pop
mov
add
push
jne
push
test
outsb
decl
pop
sbb
jb
repz
inc
shll
ja
xchg
in
nop
jne
lea
test
loopne
mov
mov
test
daa
int3
push
test
cmpsl
pop
push
repz
pop
nop
mov
mov
cmp
or
xchg
orb
je
dec
ret
fstpl
mov
sahf
xorb
add
sub
clc
out
mov
or
lds
and
clc
sub
jge
add
outsb
push
shlb
dec
popf
sub
mov
pop
mov
cmp
push
sub
ret
subb
dec
icebp
sbb
clc
mov
cmp
mov
sbb
out
shlb
or
popf
in
ret
sbb
cs
xor
rolb
xchg
sub
xor
fidivs
jo
cmp
test
pop
xchg
dec
jecxz
aaa
lods
lea
cmp
mov
in
data16
sub
xchg
cmp
popf
scas
jle
sbb
lret
lods
mov
jecxz
out
out
xchg
shl
mov
pushf
inc
les
pop
mov
adc
cwtl
faddl
loope
gs
and
inc
dec
das
lods
dec
leave
pop
aaa
int3
mov
xor
out
insl
pop
js,pt
jno
lods
sarb
mov
jp
mull
mov
cmpb
aam
cmp
aas
cmp
outsl
mov
push
xchg
dec
insl
dec
imul
inc
sbb
push
pop
lahf
mov
fstpl
jmp
or
dec
jbe
xlat
bound
scas
dec
out
jo
insb
lock
push
aam
sbb
cmp
fwait
mov
inc
push
cmpsl
dec
rcll
scas
fldcw
dec
repz
daa
dec
push
cld
mov
cmp
sub
loope
jmp
jb
in
ljmp
js
and
in
bound
or
leave
adc
mov
jnp
shll
ss
xchg
inc
mov
popa
xchg
pop
jbe
xor
test
clc
jb
dec
jnp
xlat
or
inc
insb
ja
or
mov
add
pop
pop
out
dec
aas
dec
inc
inc
mov
outsl
xor
xchg
push
jb
clc
jl
inc
dec
call
or
lret
fnstsw
xor
push
fnstenv
mov
xchg
jge
or
and
lea
lahf
fs
fsubs
imul
loop
mov
call
sbb
in
fdivrp
loope
push
mov
mov
inc
xor
insl
pop
fcmovnb
fidivl
in
sbb
imul
pusha
lock
pusha
xchg
outsb
lret
inc
aad
clc
jne
pop
pop
jecxz
mov
push
sbb
push
frndint
jmp
outsl
outsb
mov
push
pop
mov
pop
fildll
ret
mov
sahf
stc
push
add
test
dec
aas
lcall
cld
sbb
mov
movsl
mov
js
sub
nop
push
sarl
mov
sarb
mov
mov
inc
sub
or
dec
xchg
inc
call
jb
sbb
out
xchg
adc
ret
js
or
jno
scas
cmp
popf
aas
or
repz
mov
inc
mov
lods
mov
push
xchg
xlat
addr16
push
or
add
hlt
jp
in
dec
in
mov
imul
mov
xor
stc
xchg
sbb
mov
imul
aam
sbb
rcr
in
pop
and
les
in
aas
xlat
push
cwtl
cs
int3
insl
fwait
dec
xor
sbb
sbb
ret
mov
and
and
cmp
cmpsl
mov
ret
mov
sahf
std
push
xlat
sbb
and
xchg
test
mov
xchg
outsl
sub
in
sbb
lods
dec
fsubl
mov
inc
mov
fistps
aaa
rorb
outsb
adc
mov
clc
and
push
fsubr
inc
push
out
enter
mov
les
in
cmp
push
add
sub
cmp
inc
mov
int3
sti
sub
inc
and
mov
out
inc
add
lcall
pop
sti
xchg
stos
pushf
pop
mov
ss
cmp
pop
lods
mov
std
and
stos
xchg
in
mov
sub
xchg
adc
pop
jno
mov
xchg
cpuid
icebp
faddl
jp
push
jl
mov
push
jno
jmp
inc
and
push
add
insl
iret
mov
insl
jecxz
sbb
clc
cs
lea
push
dec
loope
xlat
cmc
adc
sub
and
jl
mov
imul
and
cld
out
sbb
mov
xor
adc
mov
aas
test
sub
out
ret
adc
push
xchg
cli
push
mov
xchg
into
fwait
scas
shlb
jae
mov
andl
mov
pop
hlt
jae
inc
sub
dec
cmp
adc
mov
fisubs
call
xchg
outsl
ja
xchg
insb
aaa
xchg
jae
xor
mov
test
rcrb
cmp
adcl
stc
xchg
orb
popl
and
jnp
sbbl
flds
rcll
dec
lods
movntps
nop
out
fdivl
mov
or
insb
jecxz,pn
push
ljmp
xchg
adc
out
mov
cmc
adc
push
add
pop
sbb
adc
int3
pusha
popa
mov
push
cmp
jae
adc
iret
not
scas
mov
cmp
insb
enter
lahf
test
fists
xor
push
adc
pop
jo
es
dec
fld
sbb
mov
mov
and
mov
mov
sbb
cmpsb
icebp
test
push
fstpt
mov
into
out
ror
pushf
cmp
sub
loop
lret
pop
rcrb
or
mov
mov
cmpsl
xor
xor
jge
or
dec
cmc
sub
mov
cltd
pop
mov
ds
or
insb
cs
cmp
int
aas
mov
xor
aad
lahf
sbb
imul
ljmp
or
test
icebp
mov
mov
pop
in
imul
les
add
lret
xorb
das
loop
cmp
mov
stos
imul
or
or
ja
push
sbbl
mov
mov
dec
fdivrs
jbe
pop
mov
clc
out
jne
pop
cmp
jne
data16
adc
pop
sbb
push
lcall
sbb
aad
scas
lcall
sub
das
leave
cmpsb
sbb
lret
xchg
lahf
dec
xor
scas
inc
fsubl
cmp
jns
mov
xor
les
jbe
mov
adc
stc
cltd
pop
movl
mov
adc
lock
ds
test
jnp
test
shll
pop
dec
jne
fwait
inc
pop
pop
pop
test
cld
ds
into
lahf
insb
xor
aaa
sub
idiv
movsb
sti
cmp
inc
and
daa
xor
test
xor
test
cld
pushl
popf
pusha
pushl
ret
push
push
movl
push
lea
jmp
cmc
xor
stc
pushl
xor
pusha
pushf
xor
clc
test
xor
clc
test
xorl
bt
cmp
xor
call
aaa
and
mov
insl
outsb
dec
stc
cmp
ret
push
popa
mov
inc
xchg
out
push
jl
rol
fs
notb
cmp
sbb
cli
cmpsl
sahf
loopne
and
orb
cmp
fwait
pusha
or
pop
mov
mov
or
inc
xor
jmp
xchg
int
inc
inc
xchg
xchg
adc
jnp
push
push
es
cltd
pop
sub
daa
pop
addl
jnp
mov
sbb
pop
popa
mov
pop
lods
inc
adc
popa
xchg
jp
cmp
out
adc
lea
inc
pop
dec
and
pop
daa
cmp
cmp
mov
lds
dec
xchg
push
dec
aam
push
roll
stos
sahf
mov
cmc
adc
idivl
call
add
pop
into
out
insb
call
push
dec
sbb
outsb
dec
sub
mov
stos
xchg
pop
shlb
dec
xchg
mov
sarl
mov
into
and
pop
repnz
sub
aam
sbb
gs
int
cli
xchg
loopne
out
add
mov
test
aam
dec
mov
cmp
push
mov
jne
push
xor
dec
arpl
dec
pop
addr16
jne
jg
add
mov
xor
aam
insl
jnp
lcall
sub
pop
add
jmp
and
sub
xor
xchg
fsts
add
pop
jmp
adc
fistl
mov
out
sti
nop
sub
mov
aam
mov
popa
jg
mov
ja
repnz
inc
jge
int
inc
push
push
jge
lret
mov
ret
outsl
int
inc
cltd
loope
xor
shrb
hlt
inc
mov
xchg
jne
pushf
iret
jle
push
sbb
test
dec
adc
jmp
loope
fdiv
inc
cltd
ficoml
dec
aad
sbb
jne
call
imul
jl
ret
insl
rorl
sbb
out
hlt
mov
mov
sbb
and
sbb
sbb
movsb
out
ljmp
xchg
push
pop
sti
in
push
xor
add
inc
hlt
dec
dec
and
adc
add
dec
xchg
sbb
insl
add
xor
jno
cmp
or
sub
adc
xchg
es
js
int3
jnp
fdivl
rsm
fcmovnb
pop
or
scas
test
push
ret
aas
popf
push
cmpsb
lods
in
clc
lods
inc
adc
andl
adc
sahf
mov
stos
jmp
dec
pop
std
int
insl
inc
adc
int
mov
xorl
stc
xor
stc
xor
push
cmc
xor
cmc
pushf
xor
cld
cld
pushl
popf
movb
pushl
ret
call
fidivrs
inc
ds
pop
or
clc
inc
loope
jne
sbb
cld
enter
mov
movsl
dec
ret
ja
inc
mov
icebp
out
xlat
jb
ret
push
test
xor
mov
daa
push
xchg
lret
push
dec
pop
jnp
cmp
sub
dec
dec
dec
mov
out
mov
dec
xorb
movsl
adc
mov
out
xchg
jne
dec
mov
cs
sbb
mov
clc
lock
or
in
add
aam
xor
sub
pop
cli
jge
inc
int3
loop
push
or
test
daa
mov
dec
shlb
out
xchg
test
adc
sbb
loopne
or
mov
repnz
jb
daa
mov
sti
mov
xchg
push
ret
fcomps
loope
cmp
cli
test
dec
jmp
leave
ret
aaa
mov
pushf
test
scas
push
mov
in
ja
outsl
sub
push
and
rcll
orb
idivb
fcom
push
stc
xor
jmp
movl
call
mov
movb
movl
push
pushl
pushf
push
lea
jmp
movl
movb
push
call
call
call
call
pushf
clc
push
xorl
stc
xor
cmc
bt
xor
bt
xor
jmp
xor
push
xor
mov
xorl
test
cmp
xor
jmp
xor
stc
xor
cmc
xor
push
bt
xor
test
stc
xor
push
xorl
cmp
pushl
popf
pushl
mov
pushl
ret
jmp
movb
pushl
push
movl
push
push
pusha
movb
lea
jmp
test
xor
stc
pushf
xor
cmc
push
xorl
stc
jmp
or
sbb
adc
mov
mov
cmc
outsb
out
inc
sub
mov
scas
jecxz
mov
push
dec
pop
out
pop
cmp
mov
pop
adc
pop
cmp
loop
movsl
xor
mov
jg
xor
jbe
jo
and
mov
addl
jbe
pop
in
jb
lret
es
pop
pop
es
lods
divb
mov
push
xlat
in
push
push
jl
sub
mov
sub
sti
daa
pop
bound
jmp
jno
xchg
mov
cmp
frstor
push
ds
cwtl
aas
sbb
sub
ret
hlt
xor
mov
lds
addb
ljmp
inc
rcll
outsb
sub
in
subb
std
ljmp
push
inc
xchg
jl
mov
xor
and
or
movsb
cmpsl
jo
fnstenv
dec
jmp
jae
not
push
cwtl
imul
stos
inc
sahf
fnsave
cltd
ss
daa
push
or
adc
jecxz
fcmovne
sub
in
cmpsl
sub
or
iret
push
push
push
xor
or
sub
stc
fmull
dec
inc
mov
movsl
xchg
push
int
pop
adc
cmpsb
dec
pop
rorb
lcall
jae
xor
sbb
fbld
dec
iret
or
jae
cmpsb
faddl
lods
sub
dec
loopne
push
aam
push
pusha
pushf
sub
dec
xlat
lods
cld
sbb
xor
add
push
xchg
push
out
fwait
daa
scas
sub
pop
mov
push
mov
out
outsb
mov
cwtl
pop
inc
inc
inc
lods
arpl
lods
push
shlb
xchg
and
cmp
cmp
nop
dec
fbstp
mov
dec
and
or
inc
insb
xchg
test
dec
sub
iret
push
push
cltd
ret
and
test
inc
es
push
mov
push
and
out
inc
cmova
andb
cmp
insb
mov
or
and
rorl
dec
adc
sbb
arpl
jo
cmp
movsb
push
shrl
mov
incl
insb
sbb
pop
out
and
lret
add
push
xlat
add
fwait
sub
jg
push
pop
aam
mov
inc
or
scas
push
sbbl
scas
incl
mov
or
jo
clc
jmp
sub
adc
shlb
in
sub
mov
jmp
push
jns
fdecstp
or
jne
xchg
and
push
jnp
sbb
movsb
jo
nopl
inc
jb
xchg
mov
mov
pop
inc
cmc
popa
xlat
ss
gs
movsl
filds
adc
ret
out
outsb
hlt
xor
adc
lahf
mov
mov
das
and
mov
cmp
pop
subl
stc
jle
ds
imul
ljmp
lret
lock
jl
rclb
adc
das
ret
gs
inc
rol
mov
xchg
sbb
push
in
xor
add
push
rorb
shrl
loop,pt
mov
mov
test
dec
loope
jg
sahf
pop
xor
sub
pusha
cwtl
sub
mov
adc
ss
mov
pop
cmp
or
mov
push
sbb
fcompl
mov
jbe
pop
mov
pop
xchg
xlat
or
sub
fmuls
test
fcomps
jae
pop
outsb
and
push
sub
out
movsl
pop
in
add
lret
jp
mov
pop
mov
mov
ja
xchg
dec
sub
mov
in
xchg
jno
adc
mov
fnsave
adc
lods
popf
ret
test
xor
cli
lret
xor
das
idivb
inc
mov
adc
outsl
cmpsl
addl
shll
jae
add
stc
dec
popf
out
adcb
mov
xor
push
je
sub
cmc
repnz
aad
outsl
fimull
cmp
mov
fistl
jge
jne
mov
jl
out
sub
adc
dec
out
cmp
inc
mov
mov
es
mov
sbb
sub
loopne
mov
push
lcall
jae
iret
cmp
movsb
rolb
xchg
sbb
fdivrs
enter
mov
stos
fwait
xor
cmpsl
jecxz
push
push
and
mov
insl
lahf
fwait
xor
push
lcall
ret
ja
ficoms
sbb
daa
jns
fsubl
cmpsb
lods
mov
xchg
dec
xlat
mov
pushf
xor
rorb
fwait
push
push
fcomp
sub
xlat
dec
xlat
push
rorl
mov
lret
lahf
lret
mov
cmp
fs
call
jp,pn
stc
aad
dec
sbb
dec
inc
out
push
sahf
sub
xchg
pop
and
les
shll
mov
bt
xorl
clc
xor
bt
cmp
xor
pusha
push
xor
pushf
xor
jmp
jmp
pushf
movl
pusha
movw
push
pushf
lea
jmp
stc
xor
jmp
cli
fsubl
mov
mov
xchg
ds
scas
add
repnz
int3
sbb
pop
mov
shl
push
in
stos
sahf
mov
shrl
in
leave
fsts
aaa
test
jae
inc
lahf
clc
enter
add
fwait
mov
popa
dec
fdiv
cltd
stos
ffree
into
push
add
std
ljmp
imul
cli
dec
sub
xchg
lahf
mov
in
push
aas
andb
adc
adc
clc
xor
mov
push
sub
xchg
addr16
cmp
mov
pop
push
pop
mov
subl
loop
bound
pop
dec
xor
lock
jae
inc
les
scas
fs
mov
in
rcl
add
pop
xchg
fwait
test
rclb
inc
repz
fdivl
adc
push
mov
sub
loope
jne
xchg
mov
cmp
data16
sub
pop
js
pop
sub
cmp
ds
xor
dec
fsubl
call
jne
clc
inc
fildll
xor
mov
jg
adc
xchg
push
nop
popf
outsb
daa
mov
gs
cmp
idivb
rorl
jl
popf
out
jl
jbe
arpl
dec
mov
sub
push
and
std
decb
jne
sub
cmp
outsb
gs
imul
cwtl
scas
ret
mov
mov
dec
sbb
add
insb
lock
inc
ret
push
xchg
ret
jecxz
sub
mov
je
dec
mov
lods
mov
hlt
ljmp
iret
jb
mov
dec
test
ja
enter
and
push
cld
sub
insb
test
shl
pushf
push
cmp
jno
add
sub
adc
daa
lock
jnp
sub
in
xor
mov
pop
divb
dec
mulb
mov
lea
cmp
mov
mov
arpl
jp
mov
int
xchg
shrb
stos
outsl
rcll
mov
cmp
jbe
pop
dec
mov
pushf
loope
andl
ret
imul
mov
sub
xor
jge
into
daa
dec
inc
sbb
cmp
aas
and
loopne
mov
outsb
cli
flds
mov
mov
mov
xchg
pop
nop
xchg
movsb
pop
xchg
dec
mov
dec
popf
je
popa
es
leave
out
pop
xchg
aas
leave
out
push
mov
addb
mov
insl
in
or
adc
jge
cmpsl
inc
int3
push
jns
les
arpl
cmpsb
cmpl
in
ficoml
rorl
lahf
xlat
dec
into
cli
jo
add
nop
lret
xor
pop
test
jg
xchg
rsm
stos
out
cmp
jmp
push
xor
in
sub
cld
lahf
pushf
mov
inc
sarb
mov
fld
xor
pop
cwtl
sub
fcmovnbe
das
adc
leave
nop
push
and
mov
push
sub
and
shll
inc
cmp
sub
pop
pop
mov
mov
adcl
ds
test
cmp
sti
in
cmpb
outsb
mov
cli
xorl
xorl
mul
sub
lea
mov
int
mov
mov
sub
push
jo
and
pusha
add
in
aad
repz
cmp
paddb
adc
sbb
mov
push
mov
test
shll
sti
in
mov
mov
xor
insl
clc
test
xor
sbb
xchg
pop
out
adc
mov
mov
pushf
sti
cwtl
das
repnz
xor
sti
in
jg
push
std
add
adc
lret
dec
iret
and
sti
daa
test
aam
fdivrs
jb
cld
add
js
mov
call
pop
loop
or
sbb
push
out
jp
or
js
dec
mov
lds
adc
imul
adc
movnti
lcall
test
jmp
rclb
add
xchg
xchg
mov
jno
mov
mov
sar
mov
mov
mov
lcall
fists
mov
mov
sbb
insl
ret
xor
lds
lods
mov
popa
mov
pop
arpl
or
iret
fnsave
dec
cmp
ljmp
adc
mov
lret
sbb
sahf
mov
mov
or
push
call
stc
push
cltd
lahf
lret
aaa
outsl
pop
cmpsl
outsl
in
inc
and
fisttpll
lock
aas
xor
push
xlat
outsl
xor
sbb
xlat
dec
mov
dec
mov
insl
jmp
stos
sub
rol
test
dec
push
jg
sub
repnz
fs
cwtl
cmp
les
fcompl
add
sti
jns
ds
ret
push
popf
clc
xchg
xlat
sbb
xor
sbb
cltd
sbb
add
fsubr
nop
push
inc
xor
les
xor
add
xor
or
ds
icebp
cmpsb
push
pusha
movsl
fstl
jb
jae
jno
cmc
xchg
inc
ret
imul
mov
sti
pushf
mov
push
aas
lcall
cltd
push
stc
lahf
scas
fimull
inc
pop
cmp
cld
ja
cmp
int3
push
mov
jb
cmp
adc
int
incb
in
roll
add
test
into
jns
out
test
mov
fdivl
leave
fxch
test
dec
ja
pop
add
push
fisttps
pushf
lcall
es
lret
fstpl
pop
int3
ja
pop
push
sub
add
rolb
cmp
jb
or
mov
cmp
das
or
test
icebp
insl
mov
inc
mov
and
das
aad
shll
sbb
cmp
mov
test
movsl
xchg
lea
lahf
imul
cmpsw
stc
test
es
aad
mov
test
add
mov
xor
xchg
sbb
in
out
mov
adc
popf
popa
cmp
jne
mov
out
daa
lcall
xor
xchg
mov
sub
std
dec
or
dec
std
loope
popf
inc
pop
nopl
int
mov
sahf
and
insb
imul
les
js
dec
js
push
arpl
mov
dec
inc
push
ret
pop
pop
xchg
ljmp
or
fstpl
push
dec
sub
fildll
sbb
mov
test
mov
jge
aad
enter
push
scas
cwtl
orb
ret
cmp
sub
adc
scas
dec
mov
pusha
mov
imul
fsubp
cs
in
inc
sbb
scas
jns
les
pop
push
daa
repz
cmpsl
xor
or
push
xor
rolb
fldl
and
mov
daa
sarb
arpl
fbstp
mov
je
shrl
adc
inc
out
pop
mov
mov
pop
jbe
inc
stos
dec
push
xchg
pushf
sti
nop
std
mov
dec
lea
push
inc
inc
adc
xor
lods
daa
movsb
pusha
sub
xor
insl
mov
xor
outsl
sbb
jae
or
sbb
cld
cmpsl
push
fisubrs
roll
xchg
adc
pop
cmp
mov
xchg
popf
cmpsb
popa
fidivs
push
movsb
repnz
mov
pop
mov
ljmp
dec
lret
inc
test
mov
fisubl
clc
stos
adc
andb
jl
dec
and
lds
xchg
aam
lcall
push
xchg
mov
insb
ljmp
cmp
sti
int3
addr16
mov
in
enter
out
mov
cmp
pop
mov
lea
xchg
push
and
sarl
loope
js
ss
sahf
les
loop
push
imul
addl
int3
mov
leave
sarl
aad
fcmove
jo
outsl
push
dec
mov
sbb
cmpsb
das
sub
jbe
mov
or
push
add
imul
repz
repnz
xchg
dec
or
push
aaa
into
sti
in
adc
imul
adc
jb
inc
jl
mov
jnp
dec
loopne
stos
repnz
test
xor
pop
in
mov
jle
lds
or
sbb
popa
mov
in
inc
xor
repnz
jo
aas
xchg
inc
xlat
movl
aas
xchg
push
int
inc
pop
xor
inc
cmc
fiaddl
stos
add
btl
mov
nop
shlb
cmpb
enter
mov
push
inc
xlat
inc
leave
hlt
sub
jle
ret
xchg
mov
push
mov
pushf
or
test
push
jns
inc
in
cmc
fsts
dec
cmpl
sub
shl
shl
les
lods
xchg
mov
scas
les
mov
sbb
lret
lods
xchg
int3
pop
js
adc
mov
test
push
lea
pop
pop
dec
outsl
push
jne
xlat
push
pushf
in
jae
mov
dec
das
lock
sub
pop
stos
andl
and
add
pop
or
int3
adc
loope
jns
daa
sbb
sbb
sbb
push
jb,pt
fs
sti
shrl
jae
mov
cmpl
mov
stos
adc
sbb
fcoms
xchg
sbb
sbb
fildl
xchg
call
pushf
sahf
lock
inc
repz
es
in
mov
aaa
mov
pop
dec
aam
cltd
in
aaa
jle
or
pop
or
dec
cmp
xor
shr
iret
rcrl
push
pop
mov
loope
or
bnd
xor
mov
xchg
mov
ret
cmp
jns
or
or
push
mov
loopne
out
cmp
cmp
mov
or
and
jmp
stc
pop
sti
xchg
ss
dec
dec
or
pushf
daa
add
pop
adc
jmp
jo
and
stos
outsl
lcall
jg
repz
inc
or
scas
stc
jle
negb
dec
pop
push
jns
ror
movsl
jp
sbb
mov
rcrb
enter
pop
in
mov
sub
sbb
shrl
jbe
push
ds
lock
inc
imul
cmp
push
in
xor
or
cld
push
xchg
outsb
aas
adc
scas
jle
sub
test
pushf
dec
loopne
cli
jns
mov
mov
sarb
sub
clc
adc
jb
jmpw
call
push
jmp
psubq
push
push
pop
lods
shl
mov
sub
rcrl
pop
mov
ss
sbb
xor
repz
std
mov
icebp
mov
pop
jp
xor
adc
repz
imul
inc
mov
and
jb
cmp
push
xchg
and
data16
dec
sub
leave
loopne
push
sbb
push
adc
popa
outsl
in
cmpsb
pushf
sarb
loopne
stc
imul
mov
inc
lods
dec
flds
lcall
pop
add
enter
outsl
xchg
loope
or
popa
or
mov
mov
icebp
push
rcll
mov
jp
test
stos
pop
sahf
push
scas
push
sbb
cs
scas
dec
fcompl
or
ret
or
pusha
stc
adc
add
xor
push
add
stos
cs
xor
aaa
mov
cltd
ret
aas
dec
dec
fcomp
xor
pop
push
outsl
xchg
sahf
xchg
test
mov
xchg
or
jg
rolb
movsb
das
xor
mov
arpl
aam
lods
movsl
cmp
mov
and
out
jle
pop
or
cmp
loopne
sbb
jns
mov
out
fcomps
or
dec
out
out
push
xor
out
scas
push
xor
mov
mov
mov
les
stc
xchg
cmp
icebp
ja
xor
loopne
rorb
xor
repnz
sbb
out
ficoms
cltd
out
mov
mov
inc
or
in
xchg
stc
dec
movsl
sbb
stos
stos
cltd
das
popa
add
movsl
mov
bnd
call
loopne
mov
dec
sub
rclb
int3
idivb
sti
and
in
mov
pop
lods
idivl
int3
pusha
out
cmp
jmp
ljmp
cmp
std
xchg
hlt
subb
gs
xor
cmpsb
insb
cmp
sarl
sahf
push
out
sbb
sahf
mov
call
test
push
sbb
mov
ds
pop
xorb
inc
and
stos
idivb
xchg
je
add
fs
jmp
jmp
xorl
call
call
pushf
xor
test
bt
pushl
popf
mov
mov
pushl
ret
pushf
popl
stc
jmp
lea
jae
push
pushf
pushl
lea
jmp
pop
fisubrs
push
jp
fcoms
sub
push
pop
mov
sub
adc
jns
jno
movsl
loop
and
add
shrl
mov
clc
imul
mov
in
push
mov
xor
fisubrl
data16
mov
jae
popf
ja
sub
stos
cs
lahf
sarl
fldcw
ret
daa
inc
pop
cmp
cmc
and
push
lea
nop
addr16
in
enter
adc
outsl
iret
xchg
cld
cwtl
ret
clc
adc
add
pop
loope
pusha
inc
shll
dec
cmpsl
push
fcomp
dec
inc
out
ffreep
pop
pushf
xlat
xchg
add
icebp
push
cld
insb
lcall
mov
in
add
imul
mov
aam
inc
xchg
in
mov
shll
mov
ds
call
call
add
shlb
insl
mov
dec
fwait
repnz
cltd
in
inc
rclb
jmp
icebp
and
das
push
sbb
mov
cmp
pop
sbb
sbb
inc
cld
je
dec
sahf
scas
fsubrl
push
scas
arpl
fs
lret
push
add
aam
stos
and
push
out
fisttpll
pop
cld
sub
pop
gs
fldenv
mov
test
stos
push
std
test
cmpsb
sbb
push
cmp
ret
sbbb
mov
mov
mov
inc
les
push
test
ss
aaa
inc
and
movsl
shrb
adc
sub
idivb
in
cmc
inc
mov
xchg
sbb
jnp
pop
push
add
or
jne
push
sbb
jae
dec
cmp
lcall
sub
cmpsb
es
xchg
mov
in
pop
pop
leave
mov
test
int
lahf
cmp
xor
stc
jl
daa
push
rcll
and
clc
jno
cmpsb
inc
sub
loope
iret
fists
sbb
pop
xlat
sbb
enter
mov
cltd
sub
and
xor
add
sbb
jb
and
nop
sbb
jb
pop
cli
loop
loopnew
fdivs
inc
xchg
sub
add
mov
pop
xchg
icebp
int
push
loopne
loope
test
cmp
arpl
daa
mov
lods
sbb
sbb
loop
mov
inc
inc
xlat
das
add
test
icebp
ljmp
sbb
test
pop
and
push
or
cmp
xchg
dec
xlat
or
mov
in
out
jmp
mov
pop
xor
lds
pop
xlat
faddl
xchg
test
hlt
std
push
hlt
call
mov
mov
pop
js
insl
pop
sbb
add
push
test
aad
xorb
addr16
jmp
mov
sbb
cmpsl
sahf
loopne
and
addb
xchg
popa
dec
dec
sub
cmp
into
lds
inc
loope
lret
in
notl
xchg
mov
imul
jge
dec
sbb
push
gs
sar
jo
dec
xchg
and
xor
mov
cmp
adcl
mov
adc
push
fildll
lret
mov
imul
out
gs
lahf
ret
adc
aad
dec
push
cmp
cli
inc
idivb
cmp
push
lea
cmp
lods
sti
dec
xor
incl
adc
sub
pop
mov
lods
aaa
sub
push
es
lahf
jbe
jo
sarl
clc
negb
pop
xor
xor
xchg
sarb
ds
add
int3
mov
or
loopne
clc
incl
mov
dec
inc
cmp
xor
pushf
stc
pushl
popf
mov
movb
pushl
ret
cmpsb
lahf
out
jp
xor
push
mov
sub
mov
pop
jne
fisubs
leave
repz
out
popf
xor
push
test
mov
adc
cmp
push
adc
xchg
and
bound
mov
lcall
or
mov
add
pop
je
dec
add
pop
fcoms
mov
fdiv
clc
and
push
jmp
out
push
adc
sub
in
jge
fwait
into
hlt
in
mov
xlat
in
into
dec
push
es
push
xchg
lcall
mov
fldl
push
xor
sarb
mov
adc
sbb
ljmp
xchg
pushf
xchg
xor
inc
stc
and
repnz
js
push
fstp
addr16
sub
xchg
popf
fwait
lret
shl
imul
sarb
mov
popa
and
pop
or
jne
dec
iret
xchg
sarb
scas
dec
daa
push
mov
xchg
into
adc
sub
add
sbb
mov
mov
insl
inc
shrl
mov
mov
jg
push
repnz
lahf
pusha
dec
xlat
stc
jl
sti
xor
add
xchg
into
int3
mov
bound
add
fidivl
out
js
xchg
lods
pop
mov
rclb
leave
jo
jge
and
movsl
adc
daa
push
sti
popf
and
cmp
jg
out
xor
outsl
lea
inc
pop
inc
sub
rorl
movsb
popf
fstl
jae
cmp
andb
mov
mov
sbb
mov
loopne
add
adc
cs
out
dec
xor
mov
inc
mov
stos
addb
or
adc
insl
stos
sbbb
cs
mov
push
sub
push
test
rolb
daa
push
or
push
push
cmp
push
pop
jnp
stos
jnp
xor
jp
decb
pop
cld
lret
push
rol
inc
in
jp
push
or
insb
jb
add
rorb
stos
add
add
test
leave
shll
idivb
aas
sub
or
out
lods
cmp
aas
das
outsb
in
inc
rclb
cwtl
insb
dec
aaa
adc
rcll
fwait
adc
mov
xor
lret
test
repz
call
cmp
pop
aaa
jne
jae
jno
inc
fstpl
cli
sahf
scas
test
sti
fsubs
rorb
idivb
fcoms
call
jmp
call
psubw
or
stos
ss
outsl
pop
sbb
mov
pop
stos
cli
dec
movsl
lcall
outsl
push
dec
inc
ja
ja
add
out
out
add
sub
fs
mov
sti
sbb
icebp
lahf
push
cld
push
pop
sub
inc
add
mov
xchg
mov
mov
pushf
fisubl
nop
inc
shlb
adc
sub
in
xchg
mov
je
mov
in
jle
in
sbb
repz
cltd
lret
xchg
aaa
mov
inc
pop
push
pop
in
xor
pop
mov
pop
inc
lds
loope
xor
inc
inc
hlt
xchg
xor
mov
xor
jo
cmpl
enter
fs
inc
adc
enter
loop
stos
jmp
inc
nop
and
js
inc
adc
mov
fsubrs
int3
sub
mov
mov
xchg
mov
jle
aaa
mov
enter
enter
outsb
mov
jo
es
movsb
filds
loope
cltd
js
cld
sub
stc
pop
and
shrl
jb
ficoms
mov
mov
rcrb
adc
into
pop
out
test
cmp
inc
bound
push
aas
enter
js
or
fs
inc
pop
pop
rclb
mov
sti
sbb
mov
mov
fnstenv
sub
rorl
xor
sub
inc
pop
inc
outsb
pop
movsb
xor
mov
adcb
sahf
cmp
decb
add
in
xorb
sub
jge
movsl
insl
nop
jp
dec
jecxz
pusha
icebp
sahf
cld
scas
cmp
test
push
sbb
mov
dec
xchg
and
jbe
push
inc
je
stos
mov
rcrb
mov
dec
pushf
out
or
rol
cmp
push
je
fcmovnu
add
pop
fldt
idivb
cmp
jbe
jmp
pop
mov
pop
in
insl
mov
push
add
jecxz
jp
sbb
or
mov
lret
mov
into
movsb
dec
and
pop
inc
rcrl
and
addr16
xor
sub
xchg
sub
mov
inc
test
push
icebp
push
pop
daa
shll
fwait
mov
lock
ror
sbb
pushf
cmp
jg
jge
lea
push
lret
add
in
push
pop
mov
pusha
xor
fmuls
xor
add
pop
jge
inc
mov
adc
int
push
push
in
add
loop
loop
je
repz
adc
mov
push
sbb
mov
div
ds
add
fs
movsl
xor
mov
push
or
push
scas
or
in
inc
loop
jmp
sub
cmp
push
mov
or
outsb
pop
cmpb
fisubrs
sbb
pslld
negb
popf
xchg
subb
add
fxch
push
push
popf
lret
int3
add
mov
pop
xor
incb
aam
pushf
imul
adc
xlat
jns
arpl
and
mov
clc
xor
jp
push
or
cwtl
xchg
es
cmpl
jno
xor
cld
sub
sbb
rcl
mov
int3
sbbb
xor
lds
mov
cmpsl
xor
and
mov
cs
aaa
cmp
dec
repz
add
fs
out
pop
xchg
inc
mov
or
frstpm(287
movb
insl
pop
enter
xor
sti
mov
jmp
xor
mov
xlat
cmpsl
and
ret
out
adc
xor
jmp
sbb
in
in
cli
add
cld
xor
rcrl
movl
push
lret
push
jle
mov
lods
mov
scas
push
pop
loop
xor
push
cmp
pop
mov
sub
push
cld
ja
iret
pushf
int3
inc
jp
divb
add
jmp
int3
cltd
imul
arpl
mov
sahf
mov
sti
dec
shr
test
mov
clc
xor
mov
cmp
fwait
add
dec
fstps
cmpsl
fcomp
out
mov
inc
xchg
in
fsubrl
mov
test
adc
jae
fists
inc
xor
test
shl
lock
les
and
aam
in
ret
shlb
push
xchg
and
std
je
leave
dec
add
sbbl
xchg
and
inc
cmp
cli
gs
mov
lods
inc
inc
stos
pop
js
dec
fldenv
mov
sub
push
adc
ja
adc
mov
sbb
push
lods
mov
fwait
adc
fisubrl
mov
or
int3
ljmp
cwtl
xchg
dec
pop
inc
das
loop
scas
inc
test
pop
pop
dec
sub
pop
pusha
dec
rcrl
imul
sbb
or
icebp
lds
add
ljmp
stc
jb
xchg
mov
xlat
jns
cmp
adcb
hlt
daa
push
outsl
mov
xchg
roll
call
and
mov
mov
lods
pushf
mov
jecxz
js
xor
adc
add
decl
and
ficompl
mov
push
repnz
rol
and
movsb
mov
sbb
mov
cs
cld
xchg
push
dec
lock
mov
rol
stos
daa
test
sbb
lret
lahf
int3
aad
addr16
sbb
mov
fmuls
in
lahf
mov
addb
call
jg
add
or
sbb
adcb
or
out
mov
xchg
and
inc
out
outsb
cmp
xor
lock
cmp
rorl
pop
sub
ror
xchg
push
loopne
fld
mov
cmpl
fcomip
lret
sahf
jae
and
idivb
xor
xchg
add
and
gs
sahf
pushf
call
pushf
mov
movl
mov
lea
jmp
stc
xor
cmc
pushf
xorl
test
pushf
xor
test
pushl
popf
movb
pushl
ret
mov
cs
sub
leave
cli
adc
mov
jnp
sti
dec
leave
shll
pop
add
dec
and
sbb
movsb
fisttpl
inc
mov
out
jl
jge
mov
loope
movsb
cmpb
sti
mov
push
adc
mov
jecxz
cmp
adc
mov
mov
adc
aas
cwtl
sub
jmp
ficoms
clc
or
daa
push
pop
inc
jnp
lods
test
pushf
gs
pop
das
mov
mov
rolb
lcall
jmp
sub
test
mov
shrl
sbb
pop
xchg
add
adc
or
inc
sti
xchg
out
mov
cli
aad
in
xor
sbb
xor
ret
adc
mov
xor
cmpsl
dec
inc
push
aas
ret
xor
sbbb
mov
jmp
cmp
cmp
mov
adc
jecxz
cli
cli
and
in
loope
pop
movsl
rol
dec
mov
xor
xchg
push
cmp
cmp
xchg
les
xchg
add
cmpsl
sub
idivl
inc
dec
mov
sbb
es
dec
repz
xchg
add
ret
and
test
or
adc
insb
lea
xchg
dec
rcrb
inc
push
out
mov
sub
jmp
pop
jae
push
cmp
push
push
push
sub
icebp
stos
bswap
repz
mov
lea
xchg
call
mov
cmp
in
gs
sub
or
mov
pop
adc
mov
xor
jae
ret
jo
shrl
mov
xor
addr16
adc
push
insl
inc
mov
pop
adc
cmp
mov
sbb
dec
add
nop
arpl
sub
insl
pop
or
arpl
and
ds
roll
mov
loope
mov
mov
push
lock
or
push
sbb
mov
lods
push
mov
xchg
insb
outsl
fisttps
fstpl
adc
xchg
icebp
test
or
push
mov
in
xor
push
fldt
out
repnz
and
cmpsl
das
insl
add
testl
mov
es
mov
lds
xchg
cs
outsl
pop
fs
rolb
inc
cmp
out
ficoml
inc
inc
dec
or
xlat
vpsubq
stos
lret
rolb
incb
dec
xchg
in
insl
xor
lcall
sti
movsb
outsb
mov
xlat
aad
mov
orb
or
push
xor
jae
cli
fbstp
lods
sbb
xchg
call
sbb
fisubs
lods
icebp
jp
mov
cli
xlat
mov
cld
jae
mov
pop
jbe
inc
lahf
pop
or
pop
loopne
pop
push
mov
stos
in
push
or
sub
fsub
jbe
es
sub
in
xor
push
add
repnz
add
add
fsubs
rcll
ror
js
mov
in
push
adc
xchg
bound
mov
outsb
imul
and
data16
jmp
pushf
popl
call
pusha
pusha
jmp
push
pushf
popl
cmp
xor
pusha
xor
jmp
xor
jmp
movsb
popf
notl
sbb
or
movsb
in
cmp
rcrb
lock
lret
mov
dec
ret
xchg
fimuls
xchg
stos
jecxz
cmp
adc
mov
inc
out
adc
movsl
cmp
inc
pop
scas
mov
inc
sbb
sbb
push
cld
inc
jns
mov
jecxz
and
push
loopne
es
dec
jmp
outsl
orl
add
dec
pop
dec
mov
lret
cmp
xor
outsb
leave
or
das
dec
clc
pushf
mov
cmp
in
ffreep
cmp
inc
lret
add
push
push
mov
aad
mov
push
insl
ja
repz
sbb
mov
lods
aam
std
add
clc
lods
test
repz
xor
lods
ss
jo
cwtl
inc
ljmp
jle
int3
testb
or
outsb
sub
stc
mov
and
mov
or
sbb
ss
push
push
pop
test
movsl
cwtl
lahf
daa
jb
nop
xlat
outsl
clc
xchg
mov
mov
dec
popf
mov
nop
aad
popf
adc
xor
outsl
outsb
xchg
test
int
decl
insl
mov
mov
mov
push
adc
movl
jo
jg
daa
imul
insb
sbb
gs
pop
sub
and
mov
in
sbb
push
es
lea
mov
mov
iret
and
ds
pushf
imul
xor
cmc
xor
call
xor
bt
cmc
xor
test
xor
pushf
stc
xor
cmc
xor
bt
pushl
popf
push
push
pushl
ret
pushl
popf
mov
push
pushl
ret
pushf
popl
pushf
xor
bt
clc
xor
stc
xor
test
xor
call
pushf
jmp
sbb
mov
inc
inc
and
or
jae
push
jb
test
fs
xchg
stos
jecxz
sub
repz
add
dec
push
cmp
loop
sbb
clc
and
cmp
fdivrl
pop
aad
arpl
inc
lret
lock
fisubs
sub
pop
mov
mov
fmull
aas
scas
repz
pushf
and
push
das
sub
stc
stos
cmp
imul
xchg
mov
jmp
mov
push
jge
mov
test
orb
lret
jbe
add
shlb
and
fs
or
std
repz
dec
popf
pusha
pop
nop
test
jb
xchg
lret
jnp
mov
or
pop
adc
dec
inc
xor
and
mov
repz
arpl
addr16
mov
push
cmc
cmp
lods
inc
into
push
aas
jmp
adc
testb
mov
or
sbb
and
test
enter
das
aam
dec
push
rorl
sahf
add
xor
jnp
or
mov
dec
add
out
dec
icebp
mov
mov
out
inc
aam
enter
pop
mov
jmp
xchg
ja
mov
imul
frstor
rcll
stos
pop
loop
cmp
mov
and
sbb
scas
div
or
inc
enter
mov
sub
popf
sti
push
pushf
gs
insl
mov
gs
lcall
lods
xor
mov
push
call
popf
imul
sub
test
rorb
pop
mov
lahf
xchg
lods
mov
inc
push
call
cmp
adc
mov
or
pop
jb
mov
call
inc
fcmovnu
mov
cmp
in
popf
mov
das
loopne
out
lds
sbb
adcb
xchg
jmp
mov
mov
jbe
xorb
ret
es
sahf
stc
mov
jne
cwtl
xor
mov
pushf
stc
or
scas
notl
jnp
mov
cmpsl
pop
or
cwtl
sub
ffree
aad
outsl
mov
ffree
mov
xor
or
lcall
ret
fwait
xchg
aas
cmp
xchg
test
or
out
loope
pop
xchg
cmp
push
dec
ds
aas
popa
jp
adc
js
loope
jb
push
lea
outsb
push
ret
pop
push
test
loope
fs
cmc
pop
stos
inc
jle
outsl
test
mov
insl
icebp
xor
cmp
mov
xor
xchg
xchg
cmp
add
push
cli
out
and
dec
add
mov
into
push
clc
dec
andb
dec
or
jmp
cmp
test
add
js
mov
arpl
repnz
mov
mov
scas
hlt
loopne
mov
mov
add
adc
mov
test
adc
push
inc
push
mov
addr16
ljmp
push
outsb
xchg
jg
outsl
jb
xor
test
roll
xchg
add
pop
add
jo
xor
fisttpll
push
push
into
dec
mov
push
jle
push
lahf
cmp
ss
fwait
jl
mov
out
div
xor
popf
add
cmp
xchg
adc
sahf
cmpsl
mov
ficomps
sub
jno
xchg
and
repz
cmpsb
daa
adc
push
xor
jecxz
fwait
inc
cmc
test
or
jne
fwait
mov
add
dec
repnz
lret
dec
out
lahf
inc
nop
mov
out
nop
mov
add
pop
mov
popf
call
gs
sbb
cli
call
ret
xchg
xchg
pushf
mov
sbb
inc
mov
out
jbe
jnp
aad
in
mov
loope
mov
jne
jg
in
lcall
pushf
addb
sbb
cmp
jle
data16
icebp
mov
cmp
cmp
test
adc
ds
std
mov
adc
ret
in
mov
pusha
or
push
fwait
xchg
fldenv
call
test
jbe
xchg
enter
aas
insl
movsl
mov
les
movsl
mov
jge
decb
xlat
imul
popa
daa
jbe
leave
adcl
fidivrs
pop
pop
add
pop
inc
enter
mov
push
mov
or
xchg
data16
jb
cmp
insl
mov
sub
xchg
mov
imul
sbb
shrb
xor
lahf
sbb
enter
fld
dec
mov
dec
add
sbb
ljmp
mov
out
psraw
js
lcall
lds
add
and
sahf
ljmp
add
mov
std
xchg
testl
add
dec
jmp
es
dec
inc
sbb
push
cltd
sub
xchg
lea
sbb
push
daa
jo
rcll
call
in
xor
adc
push
mov
inc
cmpsb
inc
mov
inc
lea
add
adc
dec
iret
js
addr16
jne
push
scas
out
sub
aad
add
xor
mov
nop
cltd
mov
sar
repz
and
out
xor
cmp
or
dec
lret
sar
adc
and
outsl
dec
outsl
fimuls
mov
dec
mov
cmpsb
in
jl
push
xor
mov
stc
sbb
fdivl
xchg
xchg
adc
mov
mov
lea
mov
dec
mov
jbe
loopne
jae
stos
pushf
jne
mov
push
push
add
sbb
nop
incb
mov
jecxz
lods
int3
mov
add
mov
push
fstps
mov
in
or
stc
lock
or
sbb
std
dec
lcall
movsb
and
rcr
lret
fmul
data16
stc
enter
lods
xchg
cmp
cld
cmpsl
and
movsb
cmp
add
and
adc
jno
sbb
xor
jge
popf
es
lds
andb
xchg
sub
sbb
sbb
push
pop
dec
leave
adc
xchg
sub
mov
ja
adc
inc
inc
out
inc
mov
sti
xor
jl
fsincos
xchg
cltd
add
push
pop
lock
dec
in
out
add
bound
xchg
rclb
mov
pop
mov
xor
cmp
inc
negb
shl
fwait
shll
loop
mov
mov
arpl
and
mov
mov
mov
nop
shrb
test
icebp
jle
ds
shll
orl
lock
out
bound
popf
ds
pop
xchg
cli
pop
stos
stos
jns
stos
or
data16
ds
mov
jle
sbb
xchg
cltd
add
les
stos
mul
cld
dec
or
push
sub
in
adc
and
popa
add
adc
mov
or
pop
sbb
data16
lods
push
ret
sahf
ljmp
lret
pop
add
cmp
adc
adc
out
xor
in
sti
call
fsubs
mov
adcb
or
loopne
call
jo
push
add
call
mov
sub
jp
jge
rep
je
mov
inc
or
jp
icebp
imul
push
or
loop
scas
sub
inc
lock
adc
test
mov
movlps
cli
dec
lahf
xchg
mov
xor
add
push
les
add
xor
setle
mov
pop
ss
jb
bound
std
jg
cmc
js
pop
mov
push
mov
movsb
jle
sbb
cltd
aas
arpl
rcr
cmc
cmpsb
xor
cmp
das
movsl
fisttpll
pop
cs
mov
idivb
and
adc
push
fs
test
pushl
popf
pushf
pushf
pushl
ret
push
movb
pushf
popl
test
pusha
xor
cmp
push
xor
push
call
pushf
movl
pushf
popl
pushf
xor
call
movl
pushf
call
pushf
popl
clc
test
xor
cmp
xor
bt
clc
xor
test
pushf
xor
bt
xorl
clc
xor
call
clc
ja
push
rclb
add
and
adc
sti
dec
mov
pop
das
push
jne
xorl
sub
inc
mov
loop
jp
into
mov
das
inc
pusha
ljmp
movsb
int
fwait
or
add
popa
pop
mov
jae
jmp
or
xor
shrb
inc
inc
addr16
pop
addr16
mov
dec
cmp
pop
pop
mov
push
rcrb
rorl
and
loope
xchg
push
xchg
out
push
xor
mov
ret
fcomp
cmc
fisubs
or
inc
repnz
mov
ljmp
pop
sub
fsubrs
gs
int3
out
xor
xchg
mov
js
dec
lret
push
in
je
and
sbb
xchg
dec
call
pop
and
daa
ret
fldcw
mov
cmp
cmpsl
dec
ret
jno
mov
jp
push
outsl
adc
adc
insb
jge
mov
pushf
pop
mov
cmp
push
mov
je
inc
xlat
pop
fisttpl
and
jle
add
push
inc
aam
movswl
ds
test
adc
xor
xchg
cmp
dec
sub
scas
je
mov
lea
cmp
fcomi
sub
mov
jo
ss
test
push
mov
cltd
arpl
arpl
movsl
sub
mov
push
pop
pusha
inc
out
mov
in
jne
sbb
rcl
jnp
in
xchg
cmp
pusha
push
pop
push
leave
push
inc
cmc
mov
gs
je
or
pop
fcoms
inc
sub
loope
sbb
bound
push
movsb
rcl
push
inc
cmpsl
fwait
pop
psubb
sub
jge
imul
xor
mov
mov
pop
das
fimuls
fstps
ret
clc
adc
cli
xor
pop
icebp
rorl
rcl
unpckhps
outsb
outsb
fwait
sbb
iret
xchg
sub
insl
mov
inc
sbb
cltd
push
or
inc
rcr
mov
mov
movsb
imul
scas
cmp
rolb
aam
jo
mov
mov
sti
jge
jl
mov
sub
dec
cmp
cmp
loop
scas
push
rcll
int
aad
sbb
mov
adc
sarb
or
popf
fistps
in
nop
adc
and
pop
lods
inc
lods
xchg
out
add
jp
mov
pop
rolb
ljmp
or
inc
add
pop
movsl
xor
xlat
insb
hlt
inc
lcall
jne
shrb
mov
leave
imul
pop
jmp
xor
out
sahf
cwtl
lds
cmc
xchg
xchg
pop
loop
scas
adc
jmp
aad
push
push
pushf
ja
sahf
call
lods
inc
iret
bound
gs
push
xchg
scas
mov
jbe
shlb
sub
dec
wbinvd
mov
push
in
scas
xchg
pop
mov
cmp
aaa
sub
or
cs
enter
add
and
in
mov
cs
andl
fcomip
or
cmp
pop
pop
pop
andl
dec
idivb
and
addb
jae
pop
subl
sbb
scas
pop
ret
jecxz
hlt
push
pusha
repz
sub
and
std
sbb
or
ds
shlb
into
dec
inc
push
pop
mov
je
inc
aad
mov
sbb
sub
xchg
xchg
xchg
dec
sbb
imull
mov
movsb
mov
fstl
cmp
shlb
and
cmp
adc
or
imul
push
stos
inc
mov
aas
pop
push
pop
push
sub
scas
mov
je
les
lfs
lds
push
jae
add
add
lret
in
add
or
pop
xchg
push
jle
mov
jae
dec
mov
inc
leave
into
sbb
cltd
and
jae
push
pop
mov
dec
push
push
mov
mov
jbe
push
sub
xlat
test
leave
mov
fwait
idivb
and
inc
and
cmp
xor
mov
xor
call
call
pushf
mov
pushf
popl
bt
xor
clc
call
pop
and
jns
lods
test
lea
pop
fidivs
aaa
xchg
mov
jmp
pop
loopne
xchg
ret
cwtl
push
xchg
loopne
cs
cmp
fistpll
mov
adc
pop
cmp
out
fisttpll
or
pop
mov
cld
stos
sti
lods
jae
lret
lock
fildll
adc
jo
stos
add
add
push
push
loope
sbb
orl
lahf
scas
divb
sti
lods
call
pop
movsb
inc
push
inc
push
mov
jge
pushf
shl
loop
cwtl
push
dec
aam
mov
int
loope
cmpsl
xor
lods
cmpsb
and
imul
dec
dec
addr16
pushf
sub
jmp
lods
daa
add
cmp
cwtl
push
xchg
or
jns
bound
out
mov
xorl
jge
mov
lods
add
push
pop
push
inc
sbb
push
dec
mov
jmp
jg
scas
pop
xlat
int3
sub
cmpsl
addb
outsl
xor
movsl
jae
pop
add
int
sbb
jnp
cmp
mov
xor
aam
je
push
idivl
push
inc
push
xchg
or
push
fstpl
fsubl
test
andb
add
fwait
mov
fdivrs
fmull
stos
sub
pop
out
push
insl
mov
sub
test
dec
sbb
in
xor
cmp
mov
add
addr16
or
fnstsw
mov
bound
daa
rolb
dec
out
jg
imul
std
lods
cli
fildl
mull
add
adc
push
mov
and
dec
inc
stos
mov
mov
dec
enter
jb
cmp
lods
dec
enter
dec
stos
pop
mov
xor
insb
fldl
push
dec
mov
add
pop
pushf
aad
mov
test
lock
sub
popf
loope
ljmp
fiaddl
and
xchg
fsubs
xchg
mov
stos
in
bnd
push
rclb
test
int3
test
jl
dec
in
repnz
imul
jns
mov
sahf
adc
out
jp
fwait
aad
add
or
ja
jbe
cmp
pop
sahf
loop
pusha
inc
mov
outsl
cmc
adc
mov
es
mov
jg
test
lods
dec
mov
mov
push
stos
scas
mov
stos
adc
cmpsb
bound
call
loop
mov
test
mov
mov
ljmp
xchg
mov
imul
cmp
js
adcb
and
xchg
repz
jnp
xchg
sbb
push
mov
push
cmp
call
dec
int3
dec
nop
push
or
ja
in
popf
pop
push
xor
push
je
loop
hlt
aas
fldcw
imul
add
jl
test
fadd
fimull
xchg
add
jb
ljmp
out
mov
dec
das
shrl
add
push
push
xlat
adc
in
movsl
xchg
mov
rol
inc
xchg
inc
aam
push
inc
inc
jb
aas
jns
xchg
bound
jnp
mov
imulb
repz
add
outsl
in
adc
and
lret
fldl2e
cltd
ds
pop
in
xchg
sub
ret
jecxz
decl
mov
or
mov
and
pushf
push
sbb
add
lret
dec
xchg
and
xor
std
fdiv
xchg
cmp
sub
and
push
mov
sbb
cmpl
dec
scas
jno
pop
mov
stc
jle
bound
and
lcall
or
cld
or
mull
and
lock
and
out
inc
imull
outsl
idivb
into
pop
movsl
xor
pop
subl
movsb
rcl
xorl
mov
cli
dec
lods
int3
push
movsb
inc
pop
fs
jl
sbb
imul
lahf
decb
into
mov
sub
mov
or
in
or
fisubs
mov
bound
jge
xchg
lea
out
cmp
mov
mov
scas
mov
xchg
ljmp
or
imul
sar
repnz
pushf
pop
int3
inc
out
sbb
dec
mov
cmp
xchg
cltd
xchg
adc
filds
clc
insb
sbb
xchg
jmp
mov
push
not
loope
add
xchg
std
cmpsb
xchg
std
cmpsb
mov
xor
inc
das
dec
jnp
icebp
pop
dec
cmp
sub
mov
enter
cs
cmpsl
lea
push
cld
adc
mov
mov
lds
cmpsb
clc
clc
int3
dec
dec
dec
mov
mov
pop
jnp
xchg
fiaddl
push
or
pop
icebp
xor
fldenv
je
xor
nop
pop
or
repnz
daa
mov
xchg
es
lea
inc
inc
xchg
stos
leave
add
movsl
sub
or
mov
fdivl
cmp
imul
leave
pop
cmp
hlt
jbe
sub
push
movsl
dec
mov
mov
rol
cltd
insb
jne
xchg
dec
cmc
lahf
or
xchg
inc
rcrl
sbb
je
rcrb
loop
adcb
mov
cmpl
rorl
xchg
xchg
nop
cmp
lds
fimuls
add
jecxz
popf
cwtl
pusha
inc
subl
aas
xor
and
adc
xchg
mov
mov
mov
adc
lret
addb
int3
cmpsl
push
dec
rcrl
jnp
negb
cli
loopne
lods
mov
int
dec
out
aaa
bound
and
jo
pusha
mov
movsb
jnp
gs
jb
mov
cld
out
loopne
pop
loope
lods
inc
hlt
xchg
ret
push
std
push
divl
xor
dec
cmp
out
jbe
push
pushf
mov
stos
outsl
into
jbe
mov
sbb
adc
mov
push
mov
cmp
mov
nop
add
push
lret
add
out
and
loopne
lret
ds
sub
lahf
pop
fs
lods
xchg
adc
clc
testb
xchg
adc
pop
sbb
and
sbb
mov
mov
dec
leave
push
stos
outsl
test
push
mov
jbe
out
aad
inc
sarb
das
dec
outsl
fimull
iret
out
inc
test
stos
or
jg
leave
outsb
xchg
cmp
or
aad
inc
push
imul
mov
loopne
test
insl
lret
hlt
insl
cld
pop
xor
inc
mov
cwtl
ret
es
xchg
out
js
negb
pmulhw
adc
shrl
xor
in
xchg
pop
mov
stos
mov
ljmp
mov
mov
pop
ds
lahf
and
je
mul
fldenv
aas
mov
sub
enter
je
mov
cmpsl
sarb
jno
cmpsb
pop
sbb
fldt
cli
scas
ds
pop
sahf
int3
mov
or
dec
in
jnp
packssdw
mov
fisttpl
outsl
inc
imul
enter
ret
adc
outsl
lahf
mov
add
stc
mov
les
sbb
mov
push
fldt
push
in
xor
mov
lcall
fnstenv
mov
add
sbb
shl
add
and
push
addb
sbb
pushf
gs
idivb
sbb
fxch
movl
jmp
xor
mov
test
xor
cmc
jmp
pushf
jmp
call
call
pusha
movl
pushl
mov
push
movl
mov
push
lea
jmp
xor
jmp
pushf
xor
clc
pushl
popf
pusha
pushl
pushl
ret
jmp
lock
hlt
aas
pop
imul
mov
scas
mov
push
pop
setg
loop
xchg
cwtl
fstl
jecxz
sahf
cmc
insl
and
stos
jae
icebp
cmp
mov
lock
and
xchg
cmpsb
xchg
mov
pop
das
mov
ds
loop
and
jnp
fsub
es
add
mov
mov
in
or
xchg
cwtl
fstl
jne
mov
mov
push
cmp
stc
subl
sahf
and
mov
mov
add
in
jle
lret
xchg
cwtl
fstl
dec
js
push
push
or
int3
in
pop
nop
jnp
sarl
mov
and
mov
popf
aad
and
sti
test
cltd
jmp
insb
or
outsb
cwtl
in
inc
js
push
scas
cmp
test
and
fidivrs
pushf
mov
sbb
ret
xchg
repnz
andps
cmp
repz
sti
ja
jge
dec
and
test
leave
popf
mov
int
mov
out
cmp
enter
lcall
sbb
lods
mov
pop
cmpsb
stos
cmc
jno
xor
mov
mov
jae
xor
movsb
add
mov
sbb
pushf
cmp
xor
sub
mov
jle
xor
or
in
xor
shr
mov
mov
popf
data16
popa
fnstenv
xor
int3
ret
and
ja
cmp
mov
adc
stos
fiadds
jmp
push
push
push
xchg
popa
lret
sbb
mov
push
xchg
xor
jne
or
not
add
inc
daa
add
repz
fs
out
mov
push
out
xchg
push
push
inc
stos
ss
pop
inc
mov
jle
imul
hlt
pop
dec
test
mov
into
pushf
loope
mov
lods
or
ss
push
pusha
xlat
xchg
mov
push
fisubrl
xor
xchg
movsb
mov
lods
les
push
stos
push
jge
test
sbb
gs
cmova
fwait
stc
pop
clc
jp
xchg
icebp
call
lods
mov
mov
push
sahf
inc
nop
cmp
add
loopne
repz
push
sub
ja
cltd
cmp
fiadds
shll
xor
xor
movsb
dec
or
leave
cmp
mov
fs
push
push
push
std
push
mov
lods
and
out
inc
and
jle
inc
std
jecxz
mov
idivl
inc
sub
cmc
das
stos
out
cmc
aaa
scas
jae
mov
cmp
loope
jne
xor
fbld
cmp
add
inc
xchg
dec
sarb
int3
lock
mov
and
lds
xchg
aaa
sbb
jae
out
ficomps
stos
push
sub
sub
popf
jbe
jg
adc
rcrb
shlb
mov
clc
dec
dec
jnp
lahf
cmp
cwtl
les
int3
jns
fists
and
fmull
pop
outsb
out
mov
or
inc
sbb
cmp
push
adc
mov
call
call
loopne
sub
push
mov
sbb
push
jecxz
and
mov
mov
outsb
pop
pop
inc
inc
push
fs
or
sub
inc
add
enter
sub
rclb
out
jno
ds
ret
movsl
ret
in
sub
xor
inc
or
test
insb
push
out
pop
jle
pop
pop
mov
mov
bound
aas
inc
scas
lods
shlb
mov
lahf
sbb
mov
les
cli
cmp
or
outsl
jg
faddl
sbb
jge
or
loop
inc
cltd
sub
js
push
push
dec
in
movsb
cmp
jecxz
jb
ffreep
sarb
aad
jmp
inc
rcrb
mov
jmp
pop
test
outsl
popf
mov
popf
inc
les
outsl
fwait
mov
dec
xor
stos
in
cmp
sbb
mov
int
fsts
mov
xor
sbb
mov
je
jae
mov
jge
jl
fs
test
lock
jmp
dec
rorl
ret
aas
xor
xchg
inc
cmpsl
xchg
adc
rcl
daa
mov
andb
pop
test
cli
xlat
push
xchg
lods
cmp
mov
mov
inc
clc
push
push
fbld
test
fisubrs
and
lcall
ljmp
bound
outsl
popf
leave
dec
push
mov
dec
cmp
push
arpl
test
sbb
mov
icebp
dec
popa
xchg
adc
roll
ds
icebp
andb
dec
aam
cmc
out
cmp
nop
inc
pushf
and
fiaddl
xchg
sti
xchg
push
adc
mov
xchg
push
fwait
mov
add
loope
in
mov
popa
cmp
test
sub
sub
dec
pop
or
push
inc
dec
addr16
insl
lods
mov
ret
insb
mov
jo
fbstp
insl
xor
cld
js
jbe
jge
pop
sarl
jg
pop
test
fstl
sbb
xor
or
jae
hlt
mov
scas
repz
sbb
repnz
adc
in
js
ret
sub
cmp
popf
xchg
pop
stos
sub
je
adc
loop
out
mov
mov
insb
out
fnsave
out
ljmp
push
mov
lret
jnp
and
sbb
movsl
icebp
shlb
subl
or
ss
and
mov
cmp
push
iret
dec
xchg
sub
mov
daa
push
sub
dec
call
push
fs
inc
roll
dec
std
fimull
inc
xorb
jge
rcrb
xchg
adc
inc
aas
pop
and
insl
out
inc
mov
dec
arpl
mov
mov
mov
pop
push
orl
in
iret
jge
mov
xchg
xor
xor
lods
stc
mov
rorl
scas
aaa
pop
xchg
xchg
dec
notl
adc
cmpl
mov
push
aad
cltd
adc
test
jae
clc
and
lret
sbb
jno
out
ja
pop
jno
addr16
test
mov
stc
sub
dec
jmp
test
shll
roll
out
and
arpl
lods
sub
enter
pop
data16
cs
xchg
mov
fwait
lea
lea
or
insl
inc
mov
xor
cmp
pop
gs
sub
push
xchg
and
fadd
jmp
jbe
popa
repnz
pushf
jne
and
cmc
lret
inc
jno
sub
mov
das
and
adc
and
lods
fildll
fiadds
pushf
dec
mov
test
aaa
push
insl
stc
fidivrs
ja
imul
xchg
shll
mov
test
js
xchg
into
sar
fs
inc
rol
adc
das
push
in
lods
test
jmp
cwtl
cld
popf
push
jge
xchg
mov
sbbb
cld
cmpsb
mov
or
xchg
es
pop
mov
fmull
arpl
adc
test
jg
bound
dec
mov
std
rcrb
cmpsl
aad
cmp
mov
out
stos
scas
cltd
cmp
mov
add
cwtl
cltd
lods
add
mov
and
pop
loop
aad
into
imul
mov
call
lods
shl
jecxz
movsb
das
mov
sahf
lock
mov
mov
mov
ficomps
jno
adc
aam
add
rorl
mov
les
in
popf
xor
roll
pop
les
imul
push
ficoml
sahf
leave
jmp
jnp
popf
mov
pop
divb
cmp
inc
xor
cmp
or
mov
fnsetpm(287
in
rcrb
clc
xchg
sub
fnstenv
sti
rorb
dec
push
jmp
push
jge
or
repnz
mulb
xor
xorb
subl
ds
cmc
xor
jmp
pushf
call
xor
jmp
push
pushl
pushf
popl
cmp
cmp
xor
clc
xor
pushf
xor
bt
xorl
clc
clc
xor
bt
xor
cmp
pusha
xor
clc
bt
xor
pushf
pushl
popf
pushf
pushf
pushl
ret
jmp
pushf
test
xor
stc
pusha
xorl
pusha
mov
xor
clc
xor
cmp
xor
bt
xor
movb
xor
pushf
call
pushf
clc
xor
cmc
xor
call
call
movsb
vaddsubpd
dec
hlt
inc
mov
fidivs
in
xchg
scas
and
sarl
push
cmp
mov
mov
jge
xor
ret
dec
sbb
pop
and
xchg
fisubrs
sbb
dec
hlt
dec
daa
fnstsw
adc
cmpsb
lods
add
mov
add
dec
jbe
xchg
ss
xor
mov
out
xlat
ret
or
out
jnp
mov
in
setle
xchg
inc
or
insb
add
fnstenv
mov
xorl
pextrw
jae
pop
push
jl
mov
push
mov
jmp
and
rorl
rcrl
sbbl
sbbb
jae
sub
call
hlt
loope
cmc
xchg
jl
adc
mov
dec
rclb
scas
xor
repz
mov
jge
inc
mov
cmp
jnp
cmp
xchg
fadds
icebp
in
punpckhbw
push
addr16
out
pusha
outsl
push
rcrb
sbb
lcall
jnp
pop
pop
mov
jle
inc
cmpb
push
arpl
std
add
aas
dec
mov
stos
es
add
les
lea
pop
nop
adc
les
add
das
jl
popf
in
and
sar
hlt
aaa
aam
inc
mov
cmp
xchg
ds
push
pop
repz
rorl
sbb
mov
fdiv
push
or
sahf
adc
aad
aam
mov
sbb
pusha
rorb
dec
pushf
cmp
mov
jno
jnp
lahf
xor
and
sti
jmp
and
scas
hlt
sbb
imul
pop
jg
movsl
and
es
inc
addr16
cmpb
push
push
cmp
mov
jg
loope
or
xchg
loop
sbb
movsb
sbb
adcb
jg
jecxz
mov
cltd
pushf
xchg
lds
pop
xchg
push
push
in
and
lcall
xchg
or
lods
adc
jg
cmp
out
xchg
shrb
adc
push
cmc
or
fsubl
mov
mov
add
or
add
mov
mov
icebp
cmp
pop
mov
adc
gs
cwtl
and
in
xor
sbb
outsl
push
cmpsl
pminsw
mov
mov
mov
jb
mov
push
iret
test
mov
popl
push
sbb
js
push
out
dec
and
rclb
out
pop
inc
mov
test
pop
imul
sub
loopne
pop
mov
call
xor
lea
fwait
mov
cmp
cmpsl
cmp
mov
fs
lods
into
push
fistpl
mov
xchg
cld
dec
push
shrb
xchg
ljmp
imul
pushl
adc
stos
add
mov
jnp
movsb
bound
fs
int
xchg
and
xlat
repnz
cmp
shlb
lods
iret
mov
xchg
xchg
sbb
sub
aas
stos
push
pusha
stc
out
and
inc
pop
sbb
test
or
pop
push
ret
mov
mov
gs
cwtl
mov
aaa
xchg
pushf
jg
lds
cmp
and
leave
mov
dec
lea
sbb
jle
xchg
jno
jo
xchg
pop
jp
mov
inc
clc
pop
push
sahf
lcall
cld
ljmp
roll
insb
clc
fstps
add
out
icebp
call
or
fstps
aas
mov
jp
inc
ljmp
mov
out
ss
sub
jno
outsl
cmpsl
sahf
test
mov
cwtl
push
mov
fisttps
mov
push
cmp
ljmp
push
mov
aad
sbb
push
arpl
fcompl
jb
std
push
fistpl
cmp
sub
xor
push
ficomps
push
fdivl
hlt
stos
out
mov
push
aam
mov
push
mov
fmuls
ficoml
rclb
repz
cmp
sbb
xchg
or
movsl
or
and
add
lea
jmp
mov
insb
mov
hlt
mov
xchg
push
lea
call
roll
sti
xchg
or
pop
not
mov
in
fbstp
inc
aad
scas
imul
movsb
outsb
or
adc
sti
xchg
push
cmp
xor
mov
int
cs
sbbl
lock
xor
cli
daa
xor
jnp
lret
push
mov
nop
pop
push
ss
rclb
shl
ds
and
pusha
into
mov
push
mov
and
movsl
aam
jns
sub
xchg
sub
inc
notl
loop
negb
dec
xor
jo
dec
pop
jmp
rol
or
pop
push
clc
hlt
rcll
or
clc
mov
jno
pminsw
stc
or
push
in
pop
jl
mov
fs
xchg
imul
mov
cmpsl
sub
gs
mov
xchg
pop
xlat
clc
add
test
cmp
xchg
in
jl
bound
mov
mov
inc
in
xchg
pmaddwd
inc
outsb
test
fmull
xchg
push
jge
pop
lret
cmp
xchg
gs
arpl
aam
iret
mov
pop
dec
and
lods
gs
cli
lods
hlt
or
fs
xchg
xchg
mov
pop
fcomp
testl
das
ret
xor
jb
nop
and
or
push
dec
xorb
clc
inc
fimuls
sbb
xchg
int3
das
fs
int
cmp
lods
dec
lock
in
xchg
sti
xor
mov
bound
add
std
push
in
push
cmp
cmp
or
xor
fcoms
aam
pop
fsts
and
or
dec
add
sub
mul
add
rolb
pop
gs
mov
cs
push
shlb
push
inc
push
cli
xchg
inc
mov
pusha
test
sub
or
xor
mov
push
add
sub
push
stos
push
imul
lahf
fidivs
xchg
sbb
lret
daa
push
nop
inc
mov
cmp
lret
fisubs
inc
jp
frstor
lret
mov
adc
adc
adc
test
inc
or
xchg
jmp
and
cli
jge
ljmp
call
xlat
jb
mov
and
gs
pop
jg
cmpsb
je
sbb
call
fldl
jle
loop
mov
pusha
repnz
into
movsl
adc
loop
in
sti
xlat
fistl
fadd
mov
je
cli
pop
mov
push
inc
lods
push
ljmp
inc
popa
lret
mov
mov
clc
dec
xchg
testl
dec
sub
pusha
or
mov
xchg
and
lods
sub
xor
xchg
aas
out
jecxz
inc
fimull
dec
imul
add
jle
xchg
mov
ret
dec
mov
and
push
aad
test
sbb
xchg
loopne
adc
or
loope
fcoml
shll
ljmp
pop
pusha
aas
mov
cmpsl
xor
adcl
inc
loop
scas
cmp
xor
sarb
in
cmc
aam
out
pop
imul
cmp
inc
pop
roll
out
mov
daa
repnz
pop
or
sti
in
pop
xchg
mov
push
stos
fdivs
subl
push
and
idivb
add
mov
pushf
call
xor
call
pushf
pushf
popl
test
clc
xor
test
xor
jmp
in
loopne
mov
icebp
jne
or
out
cmp
sbb
mov
or
push
push
fs
outsb
xor
and
xchg
lods
xchg
std
repnz
pop
mov
imul
mov
test
sbb
leave
fnsave
imul
aaa
popa
adc
mov
mov
push
out
and
lret
sub
and
dec
xchg
stos
and
leave
adc
inc
mov
ds
mov
dec
loopne
aas
pop
inc
push
ss
sbb
mov
sbb
push
add
mov
pushf
test
push
lea
push
push
mov
bnd
pop
inc
loope
hlt
mov
jae
mov
filds
jae
iret
and
mov
fnstsw
std
rcll
sar
lea
sarl
sub
push
adc
xor
push
and
outsb
idivb
pop
lret
clc
xor
cmc
stc
xor
mov
call
shrb
push
icebp
mov
mov
dec
cmpsb
add
loop
loope
je
inc
in
lret
sbb
xchg
cmp
xchg
int3
jo
xchg
push
mov
push
jb
sbb
jmp
jp
rcrl
jbe
mulb
sub
int
notrack
pop
sub
jecxz
les
xor
mul
push
lea
das
add
pop
sub
popf
les
or
inc
pop
dec
enter
fsubs
fistl
les
out
mov
push
mov
push
repnz
add
inc
push
in
mov
or
mov
push
adc
idivb
push
sub
lds
jge
cmp
popl
stc
xor
jmp
push
mov
xchg
shrb
pop
pop
and
adc
scas
or
pop
push
shrb
call
adc
jae
sbb
mov
aam
loop
xor
in
push
add
xchg
int
arpl
pop
dec
lret
push
lods
sub
jge
cmp
fadds
or
test
loop
popf
and
test
mov
loop
sbb
mov
pop
pop
cmp
aam
sbb
and
in
lahf
jmp
sbbb
rcll
adc
mov
sbb
and
adc
mov
lcall
sub
int
dec
test
jg
xor
and
jl,pn
imul
ret
pop
aad
mov
or
xor
pop
inc
out
iret
adc
icebp
out
inc
enter
stos
loopne
lods
sarb
jae
xchg
fimull
sbb
das
cmpsb
and
mov
insl
jmp
xor
call
cwtl
loope
pop
sbb
aaa
cwtl
dec
adcl
jp
inc
scas
pop
filds
sub
push
loopne
int
into
sahf
and
xor
test
lret
insl
dec
jns
inc
pop
aaa
push
inc
imul
test
lret
aam
adc
dec
negl
inc
ucomiss
loope
mov
lret
insl
mov
or
popa
setne
test
movsl
hlt
mov
imul
call
dec
add
mov
aaa
mov
mov
cld
sti
fistl
xchg
xor
pop
mov
mov
gs
pop
es
jb
rcll
andb
xchg
out
mov
and
adc
out
pop
pop
ljmp
sub
decl
test
out
mov
jno
jg
dec
and
mov
dec
and
pop
inc
or
cld
rol
les
aaa
xchg
sbb
mov
idivb
add
xor
add
inc
test
jmp
jmp
xor
pushf
xor
pusha
push
pushl
popf
mov
pushl
ret
push
push
pusha
movl
push
push
movw
pushf
lea
jmp
clc
xor
cmc
stc
pushl
popf
pushf
pushl
ret
xor
bt
call
pusha
lea
jne
pushf
push
movl
jmp
xor
mov
push
xor
pusha
mov
xor
call
jmp
mov
call
call
cmpsl
imul
lods
ret
enter
and
add
aam
mov
popf
dec
xchg
nop
mov
icebp
rclb
mov
movsb
nop
xlat
pop
out
xchg
mov
pop
xchg
in
ljmp
sbb
sahf
loope
or
outsl
dec
mov
fcomp
fistpll
js
ret
shll
adc
push
xchg
nop
adc
outsl
ljmp
xor
sbb
ss
jnp
lcall
outsl
clc
sub
xor
and
xor
lss
dec
xchg
nop
push
lret
push
scas
xor
js
or
cli
cmp
adc
mov
outsl
outsl
stc
call
and
add
xchg
or
sub
inc
enter
and
or
xchg
and
xorb
mov
mov
out
lods
or
fs
fbld
mov
cmc
jnp
push
cmp
hlt
enter
cmp
inc
std
push
inc
mov
pop
frstor
mov
and
or
xchg
jl
outsb
lcall
nop
and
flds
mov
push
jmp
push
mov
popa
jmp
pop
out
and
jmp
sub
mov
add
out
jg
std
cmp
sarb
mov
leave
imul
xorb
or
mov
jae
fwait
addl
sub
call
push
arpl
inc
inc
fwait
mov
mov
imul
mov
cmp
aam
rolb
loop
scas
inc
ljmp
stos
dec
inc
adc
and
xor
and
iret
adc
adc
imul
jecxz
push
cmp
add
mov
push
xchg
es
testb
mov
push
xor
or
xor
and
outsb
cli
sub
hlt
in
cltd
xor
daa
mov
sub
inc
cmp
inc
loopne
test
jecxz
adc
dec
push
cmp
push
je
mov
dec
dec
add
sbb
test
mull
mov
xor
lret
pop
push
inc
dec
sbb
cld
dec
loope
popf
sub
int3
cmpsl
in
xor
jbe
cs
xchg
fdivs
fisttpl
xchg
xor
pop
xorl
and
repnz
call
or
xchg
movsl
sarl
testl
testl
add
rol
jne
inc
jmp
mov
push
popa
sbb
rclb
fdivl
ljmp
push
notl
insl
xor
push
dec
cmp
mov
out
and
jmp
enter
push
shlb
jo
xor
inc
mov
xchg
push
mov
mov
leave
repz
push
push
inc
into
jmp
inc
pop
or
testl
inc
mov
pop
dec
fisttps
jnp
or
mov
jg
iret
push
pop
mov
dec
push
cmp
jo
adc
adc
dec
les
lock
scas
jp
push
push
movsl
adc
push
xor
xor
xlat
push
cmc
push
jg
ficoms
push
ja
mov
cltd
mov
ja
sbb
xchg
xchg
out
out
imul
jge
sbb
mov
fiadds
out
scas
cmp
and
pusha
jb
loop
movsl
xlat
ja
not
xor
lock
leave
loope
and
mov
mov
jae
ljmp
push
mov
lcall
popf
mov
xor
cwtl
inc
cltd
inc
pusha
cld
lahf
daa
inc
pop
xrelease
push
pop
jecxz
mov
test
iret
dec
xchg
sub
lods
cmp
testb
out
lret
orl
jns
mov
dec
inc
fisttpl
push
out
cmp
ret
int3
in
xchg
jp
incb
adc
movsb
aaa
mov
cltd
les
mov
add
in
insb
leave
mov
and
stc
dec
loope
mov
add
mov
or
dec
test
mov
push
sahf
and
dec
rcl
adc
push
xchg
pop
int3
push
pop
cmp
xchg
lods
push
adc
inc
mov
fsub
out
fistl
mov
cltd
fdivl
xlat
leave
int
jl
es
orb
fidivrl
mov
aam
mov
subb
pop
xor
adc
lret
sti
imul
jecxz
sbb
je
cmp
jle
xchg
ja
jb
lea
loopne
stos
xor
adc
push
add
in
sti
and
int3
mov
mov
push
in
int
addr16
ret
loopne
test
jne
fnstcw
mov
and
xchg
out
jmp
push
enter
xor
icebp
bound
ja
iret
lock
mov
fwait
push
push
mov
add
dec
mov
cli
pop
jns
mov
pop
jp
mov
mov
icebp
inc
sub
push
idivb
adc
push
cwtl
shll
fsubrl
scas
mov
in
pusha
mov
lahf
or
repnz
rorl
out
outsb
rclb
mov
shl
pusha
fstps
sbb
dec
out
ds
movl
mov
xor
pop
out
popf
sbb
adc
fwait
pop
bound
add
data16
pop
mov
pop
stos
fmuls
test
lds
xor
arpl
sub
out
xor
sub
jno
cmp
jae
cmpsb
movsl
mov
mov
rcrl
jmp
sarb
sahf
test
shll
mov
push
sbb
sbb
popa
mov
popf
insb
je
mov
mov
mov
andb
pop
lods
js
add
mov
gs
pop
fstl
stc
bound
xor
adc
push
xor
dec
inc
pop
jae
and
rolb
adc
sub
jne
sbb
imull
pop
mov
sub
in
je
adc
push
jae
fs
pop
cmp
xchg
mov
addl
push
pop
ds
fcomps
push
and
int3
ret
dec
cs
adc
pop
dec
inc
pop
jno
jmp
xor
icebp
jp
scas
das
test
fdiv
and
sub
mov
cwtl
sbb
and
mov
and
jno
repnz
sarb
dec
rclb
adc
pop
pop
pop
lea
cli
jl
mov
loop
mov
mov
jecxz
ficompl
je
out
lods
lret
push
shrb
in
ljmp
xchg
lret
push
pushl
insl
inc
lods
enter
xchg
jge
sbb
pop
sbb
sub
lea
pop
pop
in
cmp
dec
pop
dec
enter
inc
js
sub
and
std
jb
mov
fdivl
in
dec
loop
leave
pop
stos
clc
aaa
stos
inc
adc
les
lcall
test
test
push
jp
pusha
imul
movsl
je
and
hlt
stc
dec
rcrb
movsl
int
cld
push
pop
inc
hlt
cltd
jp
xchg
mov
in
rcll
out
mov
add
adc
int3
fisttpl
and
scas
cmp
outsl
daa
xchg
inc
in
lods
aaa
or
and
add
addr16
les
jle
movsl
out
pusha
pop
xchg
aaa
inc
mov
cwtl
rcr
vsubpd
inc
roll
jmp
std
sti
dec
fisubl
inc
stos
out
aad
or
es
out
push
stos
xor
sbb
push
imul
popf
xchg
xorl
xor
mov
out
jne
fisubl
xchg
fsubl
outsb
movsl
ja
rolb
cmc
sub
addr16
gs
test
xor
dec
sbb
or
test
mov
inc
push
mov
je
or
mov
or
lods
adcl
jp,pt
aam
add
mov
adc
lock
adc
repz
push
mov
scas
icebp
cmpsb
cmp
mov
inc
mov
jge
and
sbbb
scas
cmp
out
sbb
inc
mov
ret
xlat
pop
cli
and
loop
mov
inc
sahf
cmp
jo
sub
popf
push
inc
in
push
xchg
push
mov
jns
fmull
cmpl
lahf
xchg
jnp
xchg
inc
stos
sahf
mov
aam
inc
sbb
lock
or
loopne
movb
mov
add
cmpl
push
cmpb
lea
loope
mov
xor
lock
push
lret
pusha
jae
cltd
mov
mov
sahf
daa
test
pop
pop
lock
in
jne
arpl
and
aad
lahf
jb
jae
xor
test
or
sub
sahf
lret
cmp
pop
mov
xchg
sbb
jecxz
or
lret
dec
jns
mov
inc
cmp
lods
test
cmp
jmp
push
jecxz
add
jmp
sbb
sbb
jbe
xchg
push
daa
mov
daa
scas
mov
jb
stos
mov
add
and
repnz
mov
fiadds
inc
push
jge
dec
shll
cmp
or
add
nop
lock
xor
in
push
push
iret
push
xor
jbe
das
mov
xchg
shl
add
shl
arpl
iret
lods
mov
push
enter
mov
imul
out
push
push
mov
call
test
push
add
sarb
test
movsl
jecxz
or
test
and
ljmp
popf
cvtps2pi
mov
repnz
bnd
xor
iret
mov
add
int3
iret
pop
fcomi
adc
shll
ja
cld
cmp
inc
cmpsb
dec
hlt
jge
inc
or
and
pushf
and
enter
add
testl
repz
jns
iret
or
addr16
sub
lret
mov
xchg
js
js
push
in
or
ljmp
scas
or
inc
jb
rorb
push
mov
adc
lret
out
rclb
jp
add
fldl
pop
lods
or
incl
xchg
xor
xchg
aas
add
push
ud0
inc
out
push
out
scas
and
push
das
mov
sbb
jle
jl
icebp
pop
hlt
pop
mov
popf
or
test
arpl
push
push
enter
jecxz
insl
mov
push
xor
push
inc
mov
pop
ficoml
mov
jmp
mov
jmp
stos
dec
mov
int
lahf
test
test
insb
cltd
mov
js
mov
mov
int3
pop
inc
cs
or
and
add
jg
lock
stos
enter
inc
jge
mov
sti
push
js
arpl
lret
fsubr
pop
push
mov
jp
mov
push
xchg
xlat
dec
out
nop
lds
ja
ljmp
mov
mov
arpl
add
in
pop
mov
push
cmp
lds
js
into
cmp
cli
mov
pop
das
push
mov
inc
jno
inc
cmp
and
in
les
movsw
ret
cwtl
gs
jg
stos
cmpsb
je
cld
pop
inc
push
lock
out
cmp
push
lods
and
or
inc
jle
ljmp
push
add
into
push
mov
xchg
and
jmp
scas
xchg
adc
jne
test
ljmp
jne
inc
sarl
jp
loop
lea
in
clc
pop
fbstp
jnp
loope
aaa
mov
mov
pop
dec
rcrl
and
in
data16
fsubs
or
pushl
push
mov
aaa
les
lahf
mov
inc
aad
fisubl
jmp
push
jge
in
es
je
mov
stc
mov
outsb
mov
push
lock
insb
push
aaa
mov
popf
mov
cld
fcompl
sub
or
test
push
jge
stos
inc
sub
push
adc
fdivrs
pop
inc
dec
sarb
fistps
repz
jno
cmpsb
dec
rcrl
in
fisubl
mov
ja
ljmp
adc
cs
add
adc
repnz
movsb
fwait
test
outsb
inc
les
adc
pop
xor
mov
or
int
shll
call
adc
comiss
jns
fildll
push
cmp
arpl
je
and
jns
fldt
fcompl
fcom
dec
ret
xchg
xor
addb
xor
and
fs
neg
data16
std
add
in
or
cmp
xchg
arpl
mov
jle
jae
loopne
shlb
incl
push
out
subb
jle
pop
loopne
sub
testl
or
test
jno
rorb
xor
loope
mov
adc
xor
mov
adc
mov
inc
nop
insb
push
js
inc
dec
mov
lds
jl
inc
int3
ja
xchg
and
ljmp
cld
aad
jp
lods
pop
mov
cltd
lahf
imul
out
jbe
fstpt
pop
xchg
jecxz,pn
jp
jecxz
out
pop
dec
hlt
outsl
adc
mov
ljmp
adc
xchg
cwtl
cmp
cltd
mov
test
xor
aaa
push
push
movsl
push
cli
cli
mov
jae
xorb
fsubs
push
inc
xchg
gs
inc
ret
inc
jg
add
xchg
push
xchg
cwtl
sub
pop
orb
mov
cmp
adc
imul
out
push
es
mov
idiv
sbb
pushf
lcall
mov
pop
lcall
cmp
mov
mov
jp
ds
movsb
xlat
jo
data16
scas
test
pmuludq
sub
xlat
je
outsl
add
xor
mov
pop
inc
adc
aam
lock
repz
xchg
test
inc
bound
addl
gs
xor
scas
lahf
or
popf
sub
push
pop
inc
ret
insb
bound
ja
mov
icebp
pop
sahf
xchg
fnsave
fstpl
sub
xor
cwtl
adc
or
pop
cmp
stos
inc
and
jne
or
cltd
frstpm(287
sbb
int3
aam
cmc
aam
test
pop
inc
loope
decl
mov
jmp
inc
scas
mov
pushf
sahf
sub
jne
aam
inc
cld
std
insl
mov
cmpb
sbb
cmp
jbe
push
es
or
out
out
pushf
mov
push
push
out
test
stos
push
std
jp
pushf
fldenv
aaa
test
shll
push
xchg
cmp
mov
or
dec
mov
pop
ljmp
cmp
cmpsl
push
dec
mov
push
getsec
mov
or
stc
xchg
push
or
xchg
add
movsb
sarb
pop
sahf
sub
lds
and
pop
cltd
out
xchg
lds
dec
out
xchg
sub
fnstsw
loop
sbb
sti
cmp
push
push
sub
inc
js
enter
int
pushf
xor
in
mov
inc
sbb
ret
xchg
pop
sub
in
idivb
jb
add
pusha
mov
movl
pushf
push
pushf
movl
pushl
pushl
mov
lea
jmp
or
adc
cltd
out
std
test
pop
pop
fldenv
in
mov
mov
cld
lds
ret
push
fstl
je
mov
jne
inc
iret
dec
and
mov
sbbb
imul
sti
inc
cmp
push
fs
fincstp
jle
sub
xchg
insb
es
sub
enter
pop
jecxz
iret
push
cld
xchg
aas
sub
pop
rcrb
jo
sahf
cs
pop
mov
adcl
pop
aad
mov
or
jp
lahf
fs
fdivs
mov
je
enter
mov
ja
fucompp
and
rcrl
xor
jg
pop
incl
xlat
mov
or
or
inc
fcoms
leave
pop
sub
aad
pop
add
push
mov
sahf
lock
xchg
adc
or
stos
das
repnz
or
inc
add
inc
lods
cmpsl
lret
lcall
mov
xchg
mov
repz
pusha
mov
add
hlt
outsl
mov
dec
and
mov
iret
pop
pop
sub
mov
jae
sub
and
fs
iret
sbb
and
cltd
test
push
sarl
dec
test
jp
mov
aaa
sub
mov
clc
xchg
dec
mov
push
xor
test
jle
or
mov
icebp
out
out
push
or
xchg
ret
into
and
cmp
insl
add
lret
lcall
mov
and
push
and
aaa
sub
pop
xor
fldz
adc
popf
mov
call
movb
imul
ss
cmc
bound
js
test
popa
inc
in
xorb
push
mov
pop
arpl
pushf
dec
movsb
push
mov
mov
pop
ret
mov
stc
add
hlt
fisubs
jmp
popa
lret
add
xor
call
adc
je
mov
adc
inc
scas
inc
jle
mov
and
ret
mov
into
mov
or
mov
xor
add
xlat
cmp
in
mov
into
andl
les
leave
sbb
cs
test
mov
mov
xor
mov
dec
xchg
pop
dec
testl
fsub
mov
dec
cwtl
push
jmp
loope
fs
or
jp
xchg
cmp
sub
inc
inc
lcall
pop
out
fxch
cmc
sbb
jp
jg
dec
insl
jae
push
push
xchg
push
cmpsb
xchg
and
scas
mov
xlat
jno
or
xlat
dec
cmp
mov
test
adc
xor
mov
lods
push
xor
inc
orb
imul
jnp
bound
push
sbb
stos
mov
and
or
push
push
inc
push
movq
jmp
jle
jnp
shll
cmp
xchg
lea
jo
add
mov
dec
and
mov
pusha
xor
enter
outsb
push
mov
sub
bt
pushl
popf
push
pushf
pushl
ret
lret
mov
fcmovnu
shll
adc
or
or
cli
dec
shll
aaa
pushf
dec
imul
push
mov
mov
out
dec
data16
add
outsb
adc
cwtl
enter
imul
popa
mov
lods
cwtl
jae
mov
test
movsl
pop
dec
push
dec
push
ds
lcall
add
ljmp
ficompl
rcrb
movsb
and
in
jb
sub
pop
sbb
pushf
mov
xchg
inc
out
inc
push
push
out
gs
mov
scas
cmc
mov
or
xchg
mov
addr16
dec
inc
dec
mov
sub
test
out
ficoml
movsl
jp
mov
loopne
aaa
and
sbb
scas
adcb
cmpsl
jnp
xor
aam
idivb
imul
lea
jmp
and
arpl
in
aad
and
mov
dec
lcall
xchg
int
cs
xchg
sbbb
call
mov
insb
cltd
add
push
leave
xchg
lods
movb
lea
aam
add
and
jl
aad
sbb
push
dec
pop
cmpsl
jmp
add
popf
fstp
rcrb
adc
push
mov
or
sbb
xchg
insb
dec
jb
or
pusha
mov
scas
xchg
pop
nop
enter
mulb
mov
iret
popf
mov
in
mov
lea
stc
xor
arpl
mov
fsubl
dec
jl
mov
or
jnp
lret
mov
std
pusha
rorb
pop
inc
data16
movsb
mov
sub
scas
jae
adc
je
mov
sub
cltd
test
or
adc
arpl
cmp
mov
add
movsl
mov
or
jmp
stos
push
icebp
adc
test
mov
push
ss
adc
mov
sub
fldt
sbb
mov
cld
jl
xor
sub
fnsave
int
aas
mov
lret
or
into
sahf
jae
and
mov
push
sbb
xchg
jb
rcll
sub
loop
sub
add
add
inc
and
idivb
imul
or
orb
and
js
mov
xchg
push
or
scas
lds
add
out
testl
sub
xchg
pop
and
in
dec
repz
jge
ds
xor
je
sbb
push
flds
xchg
push
or
sbb
adc
push
je
cmp
add
pusha
mov
inc
stc
pusha
jp
test
nop
mov
pop
test
mov
or
xchg
cltd
out
mov
sub
scas
sub
das
pop
int3
shrl
xor
and
inc
in
sub
cmpsb
jns
adc
rcrb
imul
jecxz
cmc
pop
lcall
aas
cmp
clc
pushl
popf
mov
push
pushl
ret
pushf
pusha
jmp
pusha
movb
pusha
movl
pushf
mov
movb
movl
push
push
pushl
lea
jmp
xor
call
and
mov
cmp
orb
cwtl
xor
mov
fldl
out
sbb
fisttps
cwtl
or
xlat
dec
sti
imul
mov
mov
sbb
mov
inc
sub
push
mov
mov
adc
push
je
sbb
rolb
ss
shrl
enter
dec
orl
xorl
push
jecxz
dec
repnz
jecxz
fstl
cmp
or
aam
mov
cltd
xchg
mov
push
outsb
mov
ljmp
mov
cmp
mov
mov
call
fcomip
ss
mov
mov
and
sub
int
xorb
out
in
cmp
pop
out
ja
inc
push
les
pop
testb
pop
js
inc
add
jne
sbb
push
push
in
pop
push
dec
jnp
cmp
cmp
ret
scas
sub
sbb
and
call
inc
fs
out
aad
xlat
jo
mov
push
dec
and
cltd
pusha
pop
idiv
stc
lock
mov
imul
loope
jb
adc
fmuls
pop
pop
and
sub
cmp
pop
push
es
cmp
leave
adc
mov
mov
xchg
dec
fdivr
out
jo
stc
cmp
adc
jg
sti
sub
cmp
movsb
pop
xchg
int3
dec
leave
push
mov
hlt
rorl
flds
push
dec
std
aam
fistl
movsl
dec
mov
sti
outsl
or
jecxz
shrl
xchg
cmp
cmpsb
sub
inc
aam
ljmp
push
jns
pop
addr16
mov
clc
test
or
pop
movsb
cmpl
pop
int
test
mov
iret
xor
jae
cmp
fadd
clc
dec
lds
enter
sti
rcrb
and
daa
adc
adc
push
rorb
adc
push
pop
inc
xor
cmp
mov
je
movsb
jmp
repz
push
jecxz
jmp
pop
lcall
push
aad
hlt
das
mov
stc
fisubrl
outsl
jmp
mov
mov
xor
xlat
shll
stc
mov
or
test
cltd
mov
sbb
adc
mov
mov
stos
stos
call
xchg
dec
inc
inc
aas
stos
lret
push
xor
push
mov
and
mov
stos
es
xorl
add
repnz
xor
and
mov
xchg
jecxz
pop
stos
inc
adc
xor
lret
clc
and
and
loopne
lods
shll
pop
sti
inc
fcompl
and
mov
add
push
rorl
add
mov
mov
jno
jae
rol
push
scas
mov
or
or
rcrl
push
jle
cmp
mov
sbb
pop
loope
sti
mov
dec
orps
or
and
xchg
rcl
push
xchg
dec
out
or
clc
test
jb
cmp
inc
xor
pop
xchg
sub
pop
pusha
in
jl
mov
je
test
jl
push
lea
sbbb
leave
fwait
outsl
aas
and
data16
pop
pusha
movl
call
xor
cmc
pushl
popf
pushl
pushl
ret
jmp
mov
push
lret
bound
fbld
jp
sbb
test
and
jg
mov
pop
sbb
cwtl
fcmovnb
imul
push
sub
or
pushf
push
mov
sub
sti
out
imulb
cmpsb
arpl
scas
sbb
mov
mov
stos
cli
call
je
push
dec
aad
inc
sti
data16
xchg
imul
sbb
or
mov
mov
ret
popa
dec
les
push
pop
mov
fwait
pop
add
push
xor
aaa
scas
icebp
cltd
jg
movsl
mov
and
ss
testb
rcl
aaa
dec
shll
xor
pushf
xchg
mov
xor
push
sub
pop
sub
pop
mov
ja
mov
pop
inc
push
nop
jge
and
jge
pop
int
in
or
xchg
xchg
loopne
xchg
sbb
pop
or
xor
bound
les
xor
mov
fdiv
push
add
loopne
jne
pop
lahf
mov
ficoms
cmpsb
inc
jo
sarb
adc
call
sbb
cmc
and
addr16
cmp
repz
pusha
pop
pop
in
movsl
xor
fsubl
jle
in
xlat
sbb
push
mov
dec
pop
cwtl
jb
dec
cmp
call
xor
inc
sbb
out
or
xchg
xchg
fs
xor
jg
pop
xor
cmpsb
data16
aad
sub
orl
mov
inc
nop
adc
call
outsb
les
dec
sub
sbb
pop
test
test
mov
lods
das
push
fistps
pop
add
data16
lahf
inc
and
js
mov
adc
dec
inc
pop
xlat
jl
push
inc
call
or
inc
movsl
idivl
inc
into
xchg
and
mov
dec
xor
pop
inc
dec
jb
es
mov
pop
cmp
lcall
imul
daa
adc
push
add
mov
adc
inc
test
leave
add
mov
pop
jmp
out
push
mov
xchg
dec
je
shll
xlat
and
inc
orb
out
js
inc
rolb
outsl
sub
shll
xchg
mov
xchg
sub
imul
movsl
adc
push
lea
cmp
inc
and
mov
mov
cs
cmpl
push
fstp
das
mov
jle
sub
add
das
sub
lock
xchg
xor
and
aad
loop
adc
adc
cmp
inc
cmp
dec
add
in
clc
jns
lahf
int
mov
gs
scas
xor
sarl
fcom
shl
mov
mov
or
xor
dec
mov
adc
cmp
xchg
sub
add
out
imul
repnz
push
repnz
inc
xchg
shl
gs
cltd
in
and
nop
scas
jg
sahf
into
adc
cld
mov
ret
push
xchg
dec
inc
rclb
aaa
mov
outsb
mov
adc
icebp
xchg
jl
ss
mov
pop
adc
dec
sahf
sti
lock
push
cs
lahf
call
std
xchg
call
xor
dec
dec
sahf
pop
pop
ljmp
sub
dec
adcb
imul
clc
jae
loop
fcompl
jge
rorb
and
outsb
lahf
mov
cmp
daa
push
pop
inc
leave
imul
popf
out
jp
adc
add
push
insb
mov
add
xor
cmp
ss
add
iret
mov
fisubrl
mov
rcrl
adc
mov
pop
jnp
mov
inc
pop
jmp
popf
jno
int
bound
dec
mul
addb
dec
stc
inc
fwait
call
subb
jne
mov
adc
test
ss
xchg
ljmp
cmp
test
mov
pop
mov
idivb
bound
hlt
push
push
sub
push
insb
inc
dec
sub
out
jge
dec
int
cmpsb
mov
rol
testb
jae
or
pop
push
pop
and
jmp
mov
inc
enter
outsb
hlt
ja
sbb
shr
jmp
push
xchg
fs
lahf
push
packssdw
lret
mov
push
daa
mov
mov
add
hlt
add
jbe
vpmaddwd
push
test
jle
or
cmpsb
cmp
push
pop
popa
dec
xlat
push
pop
pop
lea
or
or
popf
addb
push
and
and
shrb
or
mov
adc
pushf
ret
mov
rcrl
cmpsl
xor
fs
pushf
mov
jle
fnstcw
lods
int3
pop
mov
clc
jg
movsl
inc
mov
jo
mov
lret
pop
xor
adc
jecxz
daa
or
sbb
ret
add
js
fwait
sbb
out
test
fldt
inc
sub
xor
cwtl
cwtl
mov
lcall
movsb
int
and
lret
mov
mov
adc
loopne
adc
mov
mov
and
es
xchg
call
inc
jbe
inc
int
cmc
cmp
pop
mov
stos
push
mov
cs
ja
xor
jns
pop
xor
cmp
pop
cmp
addb
or
add
mov
sbb
cmp
inc
int
cmp
cmp
jg
sub
mov
shlb
in
jmp
scas
out
jge
push
xchg
adc
and
and
xchg
push
pop
pop
push
inc
inc
pushf
das
mov
sarl
popf
lock
adc
mov
fists
cmpsl
pushf
pop
or
arpl
sti
shlb
rclb
cmpsb
and
popa
inc
pop
xchg
and
bound
in
inc
xchg
inc
fimuls
cmp
sbb
add
loop
push
popf
je
cmp
in
add
xor
int
addr16
mov
ljmp
sbb
xor
cmp
pusha
and
or
sbb
sbb
adc
inc
adcl
pop
scas
inc
adc
jecxz
repz
inc
sub
lea
inc
mov
ficomps
push
ljmp
mov
call
in
mov
out
pop
and
xchg
mul
gs
jae
mov
jl
es
cmp
ret
cli
imul
xor
fcoms
sub
mov
xorl
leave
xchg
cmp
popa
push
sbb
inc
nop
mov
mov
jp
inc
je
xor
in
fs
sti
add
lea
int
scas
fincstp
cmc
adc
push
lret
push
jne
pop
out
sbb
jmp
sbb
cltd
inc
leave
mov
idivl
aaa
stc
xor
in
fiaddl
push
cld
push
mov
pop
and
xlat
lret
cld
push
push
daa
in
aad
inc
push
bound
push
fcompl
stos
sub
nop
iret
pop
push
or
adcl
stos
mov
mov
lcall
das
jb
xor
fsubl
jle
mov
xchg
enter
xor
pop
inc
mov
xlat
in
pusha
dec
add
xchg
cmp
dec
rol
stos
mov
xor
dec
enter
cmp
aas
dec
loopne
mov
cmpsb
adc
cmc
ja
inc
aam
ret
sbb
daa
push
push
sub
call
test
lds
push
in
and
sub
aaa
imul
inc
push
fisubl
mov
mov
lock
xor
icebp
add
dec
imul
mov
aaa
and
xchg
test
adc
mov
adc
pop
mov
xchg
dec
addr16
std
push
push
xchg
addr16
xchg
std
adc
ds
cs
inc
mov
mov
mov
push
add
mov
pop
fbld
lahf
rol
mov
stos
cli
mov
inc
mov
out
fwait
negb
out
mov
add
call
dec
int3
add
ja
push
test
lret
mov
ljmp
push
sahf
scas
outsb
and
mov
roll
mov
out
aam
shrb
adc
pop
or
jae
xor
add
and
fbld
movsb
xchg
shr
fs
fcompl
lods
cmp
shl
add
mov
add
and
aad
push
fs
aas
mov
lcall
jmp
negb
cli
jne
xchg
and
xorl
and
or
adc
xchg
nop
sbb
fbstp
enter
mov
test
cs
adc
mov
sub
xchg
cmp
ret
ds
push
cmpsl
inc
leave
or
and
in
push
jge
cmpsl
pop
mov
push
xor
lods
xchg
xchg
lret
leave
sbb
popf
xor
sub
or
xchg
lret
subb
imul
insb
sbb
xor
jbe
bound
sub
outsl
pop
js
fstp
xchg
bound
nop
sbb
xor
xchg
sti
rcr
sub
fdiv
nop
inc
dec
int
push
inc
push
xchg
and
and
scas
imul
dec
rcl
sbb
insl
xabort
or
data16
je
pop
fstpt
out
lods
inc
out
push
int3
dec
icebp
xorb
jbe
fisttps
mov
call
aas
fstps
and
fs
adc
popf
test
add
dec
out
inc
or
xchg
pusha
cmc
shll
xchg
aam
adc
cltd
and
cli
and
imul
lahf
adcb
insl
je
popf
or
test
mov
sbb
stos
leave
cmpsl
das
loope
or
and
sub
fdivrs
push
mov
fimull
sub
imul
fstps
push
rcll
popf
stc
loopne
popa
xor
decl
fcmovnb
lds
sub
loopne
jmp
pop
xor
xlat
cmp
in
or
rol
loopne
dec
les
xor
mov
push
out
sahf
xchg
shll
push
inc
addb
and
out
loop
mov
mov
out
lods
pushf
jg
arpl
pushf
xor
xlat
lods
xor
lods
dec
loope
mov
test
sub
loopne
pop
adc
xor
cmp
inc
idivb
daa
sti
pusha
or
dec
mov
sbb
mov
stc
lret
ja
cmpsb
sahf
mov
pop
jne
aad
stos
push
sub
loop
stos
int3
push
fistpl
lods
and
js
mov
cmp
nop
cltd
xchg
fdivrs
sub
adc
hlt
out
push
ret
xor
gs
cmp
mov
rorb
add
scas
fdiv
in
jp
std
xlat
cld
cmpsl
pushf
cmc
lret
movsb
mov
push
inc
xor
lret
dec
int
test
int
mov
imul
insl
jbe
jmp
or
adc
daa
leave
push
mov
xchg
push
adc
jmp
inc
pusha
jmp
adc
jb
mov
add
hlt
cmc
and
adc
call
ljmp
sub
mov
xchg
leave
dec
test
lods
std
cld
loope
or
mov
pxor
gs
jl
or
mov
pusha
lods
fs
pop
out
pop
dec
pushf
mov
lods
dec
lahf
sbb
icebp
aaa
lds
mov
test
cltd
cmp
aam
outsb
push
lret
or
outsl
faddl
jmp
lret
mov
je
ljmp
sbb
add
loope
std
cmp
pop
adc
add
jns
mov
jecxz
cs
in
ror
out
loopne
mov
es
sub
jbe
lds
int3
iret
jnp
and
xchg
sbb
cmp
loope
mov
jbe
orl
rcrl
arpl
cmp
jns
mov
lock
mov
fs
hlt
adc
lret
lock
loop
mov
fnstsw
mov
xchg
mov
fisubrl
movsl
add
add
mov
or
sub
popf
push
pop
repnz
add
rorb
dec
and
sub
xchg
push
out
outsl
scas
cmp
inc
enter
movsb
cmpsl
mov
outsl
jp
and
jb
push
jo
popf
inc
push
jns
adc
sbb
subb
rolb
popf
push
and
test
das
push
idivb
push
xchg
pop
pop
cmp
xor
jmp
push
pushf
pushf
movl
pusha
movb
lea
jmp
push
pushf
pushf
popl
bt
jmp
rorb
pusha
mov
push
stos
testl
lds
xchg
vhaddpd
fs
lods
and
scas
adc
push
repz
pop
push
sti
scas
jae
sub
clc
testb
mov
add
aad
roll
cwtl
jp
cmp
lods
repnz
push
sbbl
jae
loopne
je
daa
gs
ret
pop
fsts
sahf
adc
movsl
sbb
adc
adc
sbb
test
and
in
cwtl
dec
mov
out
xor
roll
add
inc
clc
shll
repz
stc
mov
xchg
sbb
jle
dec
out
mov
aaa
add
out
mov
bound
xlat
sbb
mov
pop
or
jb
xchg
jl
bound
inc
int3
shll
mov
mov
sbb
int
fs
dec
loopne
dec
jno
adc
add
pop
xchg
sbb
mov
pop
or
popa
notl
jo
sbb
cltd
lods
fcom
rol
mov
sub
loop
sahf
sub
nop
popl
leave
cld
shll
cmp
mov
sub
mov
loop
daa
test
jecxz
xchg
cmp
popa
stos
icebp
sub
icebp
in
rorb
lods
inc
iret
adc
sub
push
mov
repz
jg
jle
jmp
jnp
sbb
je
arpl
jle
ret
push
mov
adc
movsl
dec
adc
bound
inc
mov
add
popa
ss
mov
std
jle
jno
mov
ficoml
push
push
and
addr16
stos
les
stc
mov
mov
call
jmp
sub
test
out
cli
les
loop
out
cmp
int
dec
insl
jno
mov
lahf
pop
pop
popf
xchg
fs
push
dec
lds
je
sbb
js
lods
lea
push
add
dec
mov
test
sub
insl
int3
xchg
cmp
insl
jno
sbb
or
je
fst
xor
movsl
hlt
outsb
pop
cmp
mov
idiv
ja
mov
mov
mov
mov
ja
nop
jae
loop
push
movsl
movsb
js
push
jb
mov
lods
xor
xchg
jne
js
cmp
xchg
dec
pop
inc
inc
and
pop
jle
test
add
add
sarb
fstl
or
or
xchg
iret
pop
lds
pusha
out
inc
test
push
mov
push
push
xchg
xchg
js
cmpsb
je
rep
leave
out
rolb
sahf
xor
rclb
sbb
nop
inc
cmc
push
bound
jp
add
push
mov
mov
dec
sti
pop
or
test
xlat
push
jnp
jb
sub
sbb
mov
jo
idivb
xor
mov
pop
daa
sbb
bound
adc
fwait
or
xchg
mov
lret
popa
pop
mov
cmp
ffree
or
jae
mov
fisubrs
aad
fdiv
push
daa
sbb
inc
xor
jo
or
adc
sarl
dec
hlt
mov
xorb
test
lcall
mov
adc
jp
push
ja
stos
sar
orb
in
bound
loope
mov
jl
into
in
pusha
repnz
lods
ss
pop
and
mov
out
mov
jmp
fnstsw
subb
insb
pop
nop
push
sbb
xor
movsl
in
push
inc
or
mov
push
idivb
push
push
lcall
push
test
fmuls
je
add
lea
jmp
call
cmp
xorl
pusha
xor
jmp
pusha
mov
movb
pushf
movl
call
movl
mov
mov
lea
jmp
addr16
lods
ss
xchg
dec
xchg
fldenv
addr16
mov
mov
xchg
dec
cmpsl
repz
jge
aaa
in
cmp
pop
and
pop
movsl
cmp
xor
daa
not
and
jl
push
andb
xchg
lahf
jbe
pop
or
rol
xor
cltd
clc
ss
mov
mov
pop
add
aam
pminub
cmp
fnstcw
les
jb
aas
in
jae
hlt
mov
adc
je
arpl
aad
fistps
mov
push
fisubrl
mov
or
pop
sbb
inc
insb
dec
xchg
mov
imul
jmp
dec
cmc
xchg
js
or
arpl
sub
xchg
push
inc
sarl
insb
addr16
in
scas
jo
add
xlat
es
mul
out
jmp
lcall
setnp
pushf
xor
pop
shlb
cmp
pop
cltd
sub
add
es
ret
call
imul
cmp
sbb
cmp
push
in
xchg
orl
or
mov
cmp
iret
gs
lock
jmp
mov
xchg
rcll
sbb
les
push
pop
arpl
int3
bound
xchg
ret
das
ja
aad
ljmp
ret
cli
adc
outsb
fldl
movsb
sub
in
add
inc
test
mov
pop
popf
sub
mov
mov
bound
pop
scas
je
js
inc
adc
or
lods
adc
dec
loop
icebp
push
mov
fisubl
test
cmp
fdivl
stos
idivb
push
add
enter
mov
xorb
jle
je
adc
pop
pop
lock
scas
pop
or
lods
out
push
stos
push
icebp
push
mov
sub
cmpsb
ror
outsl
pop
testb
jle
mov
ja
std
jle
xchg
mov
addb
andl
push
inc
add
push
test
fcmovnu
das
mov
popa
imul
jno
loop
enter
jmp
xor
push
test
loop
push
dec
loop
mov
adc
in
loope
mov
pop
pop
add
mov
in
jle
push
scas
push
lahf
inc
aaa
lahf
cltd
adc
pop
adc
outsl
xor
cwtl
aas
movsb
cmp
dec
add
xchg
sti
incb
sbb
add
pop
sahf
out
pop
jns
cmpsl
out
inc
int3
adc
aad
xchg
sbbl
push
pop
push
xor
aad
stos
adc
pop
or
or
clc
iret
in
movsb
fcoml
mov
cmp
xor
add
lock
test
divl
fcomip
je
dec
dec
mov
dec
in
pushf
sub
mov
and
jae
orb
jge
sub
mov
dec
jg
into
mov
sub
cmc
outsl
les
lret
lahf
pushf
mov
add
xchg
fnstsw
push
fnstcw
nop
inc
mov
mov
and
jl
xor
movsl
xchg
and
in
inc
loopne
out
das
mov
xchg
inc
cmp
aad
ficomps
sub
add
test
into
fwait
int3
and
inc
or
xor
jp
pop
inc
pop
loop
mov
mov
pop
dec
inc
push
pop
xor
jg
mov
imul
sub
aad
stos
jns
mov
or
add
addr16
in
das
pop
ds
mov
lcall
test
stos
cmp
dec
sub
les
push
idivb
dec
fildl
inc
and
clc
clc
xor
stc
xor
bt
xor
clc
bt
xor
pushf
xorl
bt
test
xor
pusha
call
pushf
jmp
push
adc
jo
ja
int
out
sar
lock
mov
inc
rcrb
lahf
mov
dec
mov
push
ret
cmp
testw
jb
ljmp
iret
adc
push
jge
int
add
stos
cs
insb
dec
xor
pusha
xchg
cmp
mov
lret
mov
jbe
jo
sbb
adc
cmpsl
loopne
or
inc
rcrl
mov
xor
jo
dec
dec
jge
pxor
cltd
cltd
je
mov
repnz
ret
xor
mov
fidivrl
testl
vmovups
dec
int
pop
pop
rcrb
mov
cli
push
jge
fisubrl
int3
lea
outsl
icebp
jp
into
push
mov
lock
jne
xchg
pop
mov
pop
loope
lahf
adc
int
and
loop
pop
shlb
jne
aas
fdivrs
or
push
into
daa
outsb
xchg
jl
das
sbb
xor
jnp
jecxz
adc
mov
enter
test
into
add
mov
in
mov
sti
xor
mov
mov
mov
sub
push
cltd
dec
loop
insb
xor
fsub
xchg
hlt
andb
adc
lret
add
js
adc
movsl
test
push
and
pop
add
push
pop
sub
ds
mov
stos
lea
cmp
jg
pop
out
cmp
xchg
pop
fimull
adc
shl
inc
adc
repnz
call
jnp
test
or
test
loop
dec
imul
mov
aas
pop
popa
shrb
mov
push
in
mov
xchg
loope
adc
xchg
sbb
fadds
sbb
dec
shrl
jge
mov
aam
jge
lahf
cmp
add
inc
ret
les
pop
test
mov
inc
imul
xlat
fcmovb
cld
sub
push
lock
test
jle
stos
jae
inc
fdivrs
ja
stos
and
cmpl
lock
scas
xor
or
in
push
mov
test
lock
push
out
es
pop
mov
sbb
dec
fisttps
add
and
xchg
in
mov
pop
in
roll
mov
ret
icebp
adc
mov
ret
and
mov
dec
mov
push
outsl
mov
jbe
jle
or
xlat
dec
jb
js
sar
cwtl
cmp
inc
fld
xor
icebp
fstps
ja
int
and
aad
jle
sbb
pop
inc
outsl
jp
inc
iret
int3
ss
wrmsr
mov
adcl
imul
lods
xchg
xchg
sbb
fstpt
mov
xlat
imul
je
pop
hlt
out
mov
stos
push
std
shlb
js
inc
iret
clc
xlat
inc
dec
sub
aas
and
jnp
fdivrs
je
pop
mov
push
stc
call
mov
jo
ja
ficoml
xchg
jmp
mov
rclb
mov
pop
aad
sub
repnz
adc
out
sbb
int3
fsubrp
dec
imul
fcom
movsl
ss
cmp
stos
stos
xchg
cs
inc
cmp
push
jae
jle
inc
or
mov
jno
xchg
sub
push
fwait
cmp
movsl
and
bound
adc
test
mov
push
clc
mov
push
push
cmpsl
adc
out
repnz
jp
sti
stos
lret
cwtl
push
pushf
cwtl
scas
ret
mov
cmp
and
bound
dec
test
xchg
mov
rclb
push
into
jo
adcb
cmp
jmp
sub
jnp
sbb
mov
rcll
pushl
mov
out
mov
or
aam
ljmp
inc
mov
push
cmp
gs
xlat
jns
test
ljmp
pop
stos
pop
std
cmp
in
jl
int
mov
inc
clc
cli
inc
sbb
xchg
xchg
fildl
sti
mov
jno
lea
ja
cli
scas
lahf
mov
rcr
cwtl
dec
jge
lock
sbb
stos
xchg
fldt
mov
mov
out
and
add
stc
lcall
int
sbb
add
push
push
insb
sbb
pop
cmpl
mov
insl
add
add
dec
jge
dec
fistpl
leave
sub
arpl
iret
stc
daa
sbb
mov
scas
pop
in
mov
dec
subb
sub
push
pop
out
inc
push
aad
scas
xchg
or
pushf
aad
aam
jmp
shll
in
movsl
mov
mov
pusha
cmp
jmp
mov
fsubl
jmp
cmp
mov
mov
sbb
mov
or
adc
sbb
jbe
jae
mov
push
dec
pop
mov
frstpm(287
enter
mov
pop
scas
or
mov
push
mov
nop
lods
mov
adc
mov
enter
imul
lret
pop
sti
dec
mov
pop
das
xchg
gs
inc
pop
outsb
dec
jo
and
add
mov
outsl
dec
mov
push
das
je
insl
pop
pop
cmp
pop
cld
or
repz
mov
push
insb
test
gs
mov
pushf
mov
mov
cmp
orb
and
scas
push
cmc
mov
cwtl
test
dec
pop
test
test
ds
xchg
or
add
orl
adc
add
add
push
decl
inc
clc
xor
and
inc
mov
xchg
in
movsb
xor
clc
test
pop
xchg
js
mov
shlb
mov
repnz
out
aas
adcb
in
sbb
sbb
fbld
inc
lret
sub
push
cmp
test
gs
das
push
dec
sahf
mov
movsl
leave
test
sub
jbe
test
ljmp
cmp
adc
loopne
lahf
xchg
and
sbb
aad
dec
aad
gs
push
rolb
hlt
sub
mov
cs
and
test
pop
inc
jmp
inc
fnstcw
push
fdivrp
xlat
fwait
subb
cltd
lods
sub
fwait
pop
mov
aaa
scas
stos
fucom
adc
jg
xchg
cmp
mov
leave
outsb
push
repnz
push
push
pop
loop
mov
icebp
ffree
sub
cmp
adc
and
xchg
sti
and
jge
ror
dec
fistps
ljmp
mov
jp
jb
arpl
repz
cmc
sub
fsub
pop
cmc
int3
aaa
int3
out
lea
xchg
pop
js
dec
shrw
xlat
mov
jmp
pop
test
cmp
dec
mov
iret
div
daa
scas
push
sub
push
outsb
incl
loopne
icebp
cmp
mov
out
in
mov
push
jg
daa
mov
cwtl
ret
and
div
sub
leave
adc
xchg
push
pop
inc
dec
lock
ds
rcll
pop
cli
ja
push
ret
scas
aas
aaa
mov
sub
ret
call
das
or
mov
pop
or
incb
sbb
in
pop
stos
dec
xor
ljmpw
subl
sbbl
cmc
pop
divb
aas
fnsave
sti
fisubrl
xchg
adc
andl
hlt
lea
inc
int
out
mov
mov
mov
mov
xor
mov
add
fisubrs
sub
inc
cld
pop
es
ljmp
stc
es
ljmp
ds
or
ret
loop
dec
in
ljmp
add
pop
jg
mov
ret
dec
sub
test
pop
test
adc
pop
pop
ficoml
dec
in
aas
and
cmpsb
aas
int3
sbb
xchg
loope
rol
aam
gs
mov
add
inc
adc
aam
pop
call
rcrl
mov
pop
cs
rcrl
ds
filds
negb
movl
pusha
push
pushf
lea
jmp
dec
adc
call
aaa
loop
jg
push
subl
incb
lods
dec
mov
pop
or
and
out
aas
sbb
nop
cltd
mov
stos
sub
ljmp
pop
pusha
mov
sbbl
xor
push
fisttps
add
sub
push
sbb
lods
or
inc
adc
sbb
hlt
cmpsb
xchg
shll
push
fstps
jl
dec
jmp
ret
or
mul
lea
xchg
dec
sub
subl
stc
enter
outsb
xchg
jecxz
jg
ret
mov
sbbl
or
bound
sarl
test
jecxz
adc
mov
jl
sub
sarb
ds
cmp
lock
pushf
push
pushf
movl
call
xorl
clc
xor
test
stc
xor
jmp
xor
call
call
clc
xor
call
xor
pusha
cmp
xor
push
xor
cmp
clc
xorl
pushf
test
xor
cmp
bt
xor
cmp
cmp
xor
pushf
cmp
xor
cmp
cmp
pushl
popf
mov
mov
pushl
ret
aas
xor
xchg
fwait
std
inc
lcall
idivl
test
xor
fldcw
arpl
subb
mov
js
inc
cmp
mov
std
js
cmp
pop
stos
sarb
jge
push
add
mov
out
nop
jp
jns
xchg
xchg
orb
pop
sbb
cwtl
lret
xchg
incb
jae
in
jl
adc
cli
cmpsl
inc
fldt
cmpsb
jbe
aam
pop
divl
cmp
jb
aad
stos
push
xchg
pop
lods
add
cld
pop
xchg
test
imul
scas
jecxz
jg
cmp
bound
pop
inc
scas
xor
sub
sti
xchg
pop
xchg
arpl
jle
mov
push
movb
loope
push
out
loopne
add
push
out
mov
mov
or
push
push
idivb
inc
popa
lods
test
push
mov
add
pushf
popl
call
pusha
movb
movl
movb
jmp
call
call
sbb
fsubs
insl
mov
dec
popf
out
jg
jo
lods
push
sbbl
mov
pusha
ljmp
fsubrl
clc
jg
lcall
sbb
xchg
je
andb
pushf
test
fiaddl
scas
lods
xor
mov
pop
out
imul
out
push
push
stc
std
inc
clc
nop
imul
inc
aaa
or
lret
stos
popf
inc
xor
jbe
cli
jbe
ds
enter
movaps
xchg
nop
stc
adc
mov
xchg
xor
sbb
mov
mov
or
adc
sbb
lods
sbb
imulb
call
lcall
add
mov
stos
shr
loop
mov
rolb
gs
into
adc
daa
sub
dec
jmp
xchg
inc
ret
pop
test
lcall
cld
or
lods
dec
out
cmp
jg
mov
sub
lret
popf
pop
or
testb
dec
fwait
cs
dec
ficomps
xor
rcrb
and
push
sub
mov
mov
leave
sub
jae
das
cmp
sahf
push
ret
or
mov
pop
sbb
mov
xrelease
sbb
dec
lds
pop
pop
loopne
sub
std
mov
dec
sahf
mov
jb
pop
out
les
in
arpl
push
lret
mov
xchg
fldl
and
in
jge
sub
sbb
adcl
test
cmc
adc
sbb
sub
inc
enter
push
cltd
sahf
cmp
pop
in
es
nop
fildll
jp
adc
icebp
cmp
inc
leave
push
stos
cmp
lock
or
mov
shl
repnz
gs
inc
inc
and
ret
mov
mov
or
pop
outsl
pusha
test
pop
cs
mov
rcrb
ds
filds
divl
inc
rorl
in
cmp
dec
xchg
in
cmp
fidivs
xchg
sub
and
push
or
hlt
mov
mov
inc
dec
jb
gs
mov
sbb
jmp
addr16
mov
stos
inc
les
sbb
ds
lahf
mov
add
std
outsb
xchg
cmp
cmpsl
xor
popl
rolb
loopne
inc
daa
jne
xor
and
in
js
enter
sbb
inc
push
fstpl
sbbb
pop
je
movsb
or
and
movsl
dec
in
scas
insl
mov
sti
inc
test
arpl
cmpsl
mov
sbb
mov
jp
add
mov
cmc
pushf
popa
cmp
mov
mov
fmuls
nopl
scas
push
fmul
jb
or
das
idivl
loop
rcll
stos
mov
fsts
jg
mov
in
fs
add
iret
dec
xchg
daa
dec
push
pop
inc
dec
test
stos
jae
std
aaa
pop
dec
lret
or
enter
jb
push
imulb
fildll
jge
loope
pop
xchg
je
mov
sbb
jmp
ffreep
mov
xchg
pop
pop
out
jno
xor
shll
sub
or
adc
ret
ret
push
xlat
jnp
xlat
outsl
inc
int3
push
cmpsb
clc
jp
sbb
out
and
adc
push
movsl
test
addr16
xor
cmp
lds
and
movsbl
addr16
adc
jbe
mov
cmp
icebp
out
cld
je
imul
xchg
push
jge
call
in
test
dec
inc
addr16
out
cld
xchg
sub
push
dec
mov
addr16
fistl
mov
gs
xchg
inc
stos
pop
lods
sbb
mov
call
jg
arpl
mov
test
xchg
and
xchg
rcl
xlat
imul
jo
push
cltd
mov
iret
add
call
loop
jb
nop
xlat
outsl
icebp
icebp
mov
add
dec
or
cmp
mov
or
bound
xor
add
jns
stos
inc
lea
lock
or
fucomp
adcb
out
adc
testl
or
cmc
inc
dec
xchg
sarl
adc
adc
sub
arpl
nop
cltd
sbb
imul
jae
loop
sbb
push
or
and
or
or
cmc
stos
jae
cli
ud2
stc
cmc
hlt
lcall
jne
xor
aas
cmp
xor
sti
imul
bound
popf
and
fbstp
jne
imul
ja
jne
inc
stos
lods
or
sbb
sbb
push
sub
jmp
jo
mov
fildll
push
hlt
icebp
in
push
std
xchg
das
fcomp
out
push
fisubrs
pop
dec
fs
out
push
lods
jg
cmp
inc
mov
cmp
mov
mov
clc
lock
in
jg
and
inc
pusha
stos
addl
in
inc
mov
out
xchg
imul
jecxz
movsl
in
jnp
add
cmp
mov
dec
sub
cltd
dec
fmulp
adc
mov
cld
sarb
or
or
nop
jp
inc
fsubl
jge
mov
call
test
loop
sub
in
repnz
call
test
dec
nop
js
mov
and
mov
fidivrs
imul
out
and
insl
xchg
inc
inc
jmp
xchg
cmpsb
int
push
aad
push
push
div
aas
mov
mul
insb
jmp
xorl
cmp
mov
xor
jmp
and
call
hlt
ret
and
mov
push
pushf
ljmp
loop
iret
sbb
pop
mov
cmp
or
adc
test
pop
lock
cwtl
xchg
cmp
jnp
les
jmp
lds
popf
and
in
inc
out
ljmp
arpl
and
lret
jg
pop
nop
mov
test
and
inc
test
sti
std
outsb
mov
cltd
fidivl
arpl
jnp
ja
or
fstps
shrl
out
orl
cmp
das
or
cld
push
jmp
leave
dec
push
sbb
imul
mov
int
add
jbe
std
mov
mov
adc
int3
push
cltd
loope
sahf
outsl
loop
es
movsl
movsl
es
jp
cmp
lea
repz
rolb
aas
outsb
sbb
mov
mov
scas
inc
sub
and
xor
outsb
xchg
jbe
cmpsl
nop
inc
xor
test
sarb
jg
daa
call
and
pop
lods
dec
lret
jb
sub
mulb
into
test
push
cmc
inc
hlt
movsb
mov
dec
dec
xor
insl
scas
cmp
loopne
xlat
pop
adc
pushf
gs
loop
in
mov
pushf
les
into
mov
adc
sbb
into
cmc
mov
mov
pop
loop
mov
pop
jp
jl
mov
adc
mov
in
adc
pop
inc
fs
pop
lods
mov
push
push
aas
pop
std
subl
mov
jmp
pop
jle
cmp
dec
xlat
mov
mov
mov
add
cld
adc
dec
outsb
scas
std
add
pop
mov
jl
jns
enter
lret
jb
les
std
repnz
lahf
mov
dec
adc
mov
pop
idivb
mov
test
jae
in
mov
sub
int
jle
xor
loopne
and
das
add
mov
int
pop
lcall
add
dec
adc
and
outsl
push
stc
popf
sbb
add
sbb
mov
inc
in
jg
dec
xor
sbb
fsubl
sub
sahf
and
out
or
adc
xchg
mov
scas
mov
je
int3
mov
jecxz
sub
loopne
ja
push
push
js
fwait
loope
adc
jb
or
jmp
cmp
xchg
xor
dec
adc
orb
lods
daa
and
push
arpl
stos
inc
gs
lret
insl
mov
mov
out
push
aaa
loopne
scas
sub
lfs
jne
cld
outsb
js
add
loop
xchg
pop
rolb
sbb
rcrw
xor
pop
jns
subl
loope
and
scas
test
arpl
arpl
xlat
cld
data16
rcrl
cmpb
fsts
inc
sbbl
mov
mov
je
shlb
adc
or
sub
fsubs
or
inc
or
fimuls
les
xchg
xchg
jb
lret
out
fwait
jb
or
mov
pop
mov
in
fimuls
inc
sahf
testb
xorb
inc
push
inc
mov
test
outsb
repz
addr16
cld
nop
adc
dec
idivb
mov
data16
popl
loopne
xor
mov
sti
lret
dec
xchg
clc
xor
xor
add
pop
ss
mov
into
out
or
cmc
loop
in
jg
ljmp
je
inc
xor
movsl
sub
stc
stos
adc
inc
ret
sbb
pop
ret
es
xor
lods
rorb
cmp
in
lods
push
jecxz
adc
xchg
adc
inc
sbb
lods
cli
dec
rorb
loop
mov
clc
icebp
pop
adc
sbb
lea
pop
mov
inc
mov
cmpl
faddl
testl
sub
std
or
jnp
mov
jb
mov
pop
pop
test
jb
and
mov
in
in
mov
test
ja
sti
push
mov
cmc
adc
xor
cmc
mov
jmp
pop
pusha
test
imul
mov
aaa
mov
enter
cmp
scas
mov
ja
mov
cs
inc
shrl
sub
out
aad
insl
ja
loop
pop
cmp
mov
les
inc
cmc
inc
jnp
hlt
ja
push
into
cld
mov
pop
adc
pop
aam
ret
mov
lock
adc
push
cmpsb
dec
clc
loope
inc
xchg
jecxz
lret
xchg
dec
sbb
adc
mov
inc
xchg
push
mov
lods
inc
jb
xchg
mov
cltd
das
mov
in
sbb
jge
into
js
push
push
sub
cmc
mov
jnp
sub
add
out
xchg
test
push
push
or
mov
mov
jp
test
push
adc
out
scas
fadds
dec
cld
aas
orl
aaa
in
lcall
mov
hlt
fidivl
mov
jle
xchg
adc
arpl
mov
das
and
xchg
adc
out
insb
in
pusha
sbb
mov
arpl
push
mov
adc
xchg
pop
clc
dec
pushf
sbb
jp
aaa
ret
cmpsb
fdivrl
push
mov
jno
int3
adc
scas
xor
push
cmpsb
and
hlt
mov
das
and
dec
fcoml
mov
add
out
test
push
popa
inc
push
pusha
pop
orl
jmp
mov
xchg
and
lock
sbb
shlb
dec
mov
ret
fwait
xor
xchg
or
into
pop
mov
loopne
arpl
lea
lds
add
add
mov
ljmp
pop
repz
add
sahf
cmpsb
out
scas
dec
in
mov
mov
dec
test
cmp
xchg
and
in
add
push
xor
out
lods
scas
cwtl
cmp
orl
mov
in
movsb
cld
mov
sub
push
xchg
mov
cld
cmp
scas
xor
mov
sub
mov
fimuls
add
and
call
imul
inc
xor
or
sbb
repnz
mov
fbstp
mov
jnp
mov
lret
mov
iret
mov
add
iret
int3
rorb
mov
fldl
dec
fisubrl
in
mov
push
fstpl
mov
jns
dec
add
das
test
xor
pusha
in
data16
fsubs
mov
mov
mov
jecxz
pop
fdivr
repnz
mov
sbb
xchg
pusha
stos
push
scas
test
xchg
fs
xlat
fwait
inc
addl
mov
pop
jecxz
cmp
pop
xchg
inc
lods
mov
iret
push
movsl
xchg
adc
sahf
xor
xor
ds
xor
out
pop
sahf
and
jle
jne
sub
repnz
and
cmpsl
mov
clc
fmuls
scas
and
psubusb
add
xor
sbbb
adc
dec
fcoms
pop
and
xchg
add
sar
test
das
das
pushf
out
dec
movsl
pop
xor
test
movsl
aaa
inc
mov
movsb
ror
imul
rcl
jg
sub
test
inc
imul
mov
scas
sub
sti
sti
fwait
inc
incb
scas
mov
aaa
mov
inc
push
push
pop
loop
pushf
pop
testl
divl
cld
jmp
mov
sbb
or
in
lods
arpl
lods
movsl
pop
sbb
mov
cmp
test
push
fbstp
hlt
xor
call
test
icebp
stos
dec
jmp
adc
in
je
ret
or
xchg
popf
popf
jle
es
jle
js
pop
xchg
jge
sahf
push
dec
aas
xor
setle
push
mov
dec
out
mov
ljmp
test
daa
push
movsb
in
test
adc
dec
or
shrb
fbstp
jp
ret
out
hlt
jmp
inc
mov
cwtl
ljmp
push
mov
loopne
pop
aaa
jmp
lahf
sub
clc
enter
xor
jae,pt
ja
lret
pop
dec
sub
lcallw
sub
mov
dec
ss
inc
sahf
pop
fstpt
je
push
ficompl
repz
add
sbb
lret
mov
inc
sub
pushf
lahf
int
pop
jle
cwtl
cld
enter
les
bound
push
mov
dec
test
clc
cmc
mov
clc
insb
or
ret
jno
es
dec
into
adc
popa
mov
lret
push
push
pop
mov
push
push
out
mov
addb
scas
jnp
inc
xor
insb
xchg
ret
lock
cwtd
xchg
dec
mulb
addr16
roll
outsl
xchg
test
and
pop
mov
orb
mov
out
or
movsb
cwtl
mov
aaa
mov
xchg
sbb
push
ror
mov
cld
dec
xchg
insb
dec
jl
push
and
in
shl
push
mov
xor
mov
adc
fcompl
rclb
ficomps
out
stos
flds
dec
inc
sarb
les
push
cwtl
cmp
jmp
sub
jge
shrl
push
mov
and
jno
sub
adc
xor
daa
je
fiaddl
mov
pop
mov
xchg
mov
inc
cld
push
insl
xchg
in
movsb
out
pop
cld
cli
dec
rorb
xchg
mov
sbb
xor
mov
js
push
sub
cmc
push
push
int3
sbb
into
dec
add
sbb
dec
fisttpl
jge
mov
mov
pop
out
jecxz
out
lahf
pop
jns
lcall
ficomps
jbe
cmp
int
adc
pop
push
xchg
sbbl
or
push
dec
mov
and
pusha
xor
xor
jb
lret
movsl
xchg
and
inc
jae
aad
loope
loopnew
pop
xor
push
test
cmp
shrl
cmp
push
icebp
inc
daa
ret
push
sub
xor
aam
inc
mov
add
aad
jecxz
aaa
pushf
ss
les
dec
rcrl
call
or
fisttpll
xor
lods
pop
stos
loop
or
in
cld
nop
or
pop
push
lahf
sbb
and
repz
jmp
adc
mov
ret
ficomps
mov
pop
mov
inc
lds
xchg
pop
jo
icebp
jl
mov
dec
push
push
or
mov
outsb
test
sbb
sbb
jmp
mov
pop
xchg
dec
jge
jle
cmp
adc
mov
push
and
rcrb
aad
xchg
jbe
sub
and
sbb
xor
add
int3
add
std
andl
jo
add
dec
xorb
mov
aam
int3
sub
test
fisttps
push
flds
add
mov
repz
sbb
mov
jne
adcb
lret
push
add
mov
jnp
clc
xchg
in
loope
test
lahf
xchg
movsl
sub
dec
xlat
subb
sbb
insb
push
test
aad
xor
in
ret
inc
fiaddl
push
rorl
push
push
add
aad
jge
mov
pop
in
xchg
dec
jmp
in
adcb
lret
dec
lock
dec
imul
movsl
sahf
negl
and
cmp
cmc
push
cmpsl
cmp
mov
push
ror
sar
sub
int
outsl
pop
cli
mov
in
into
in
push
adc
pop
rclb
das
insb
sti
jle
les
jns
mov
xor
add
add
xor
ljmp
mov
aam
mov
pop
mov
and
sahf
sbb
nop
jle
mov
cmp
dec
stc
or
xchg
mov
int
adc
test
lahf
sti
pop
ds
sub
mov
or
mov
cmp
cmpsl
jl
inc
ror
scas
aaa
mov
cmc
imul
lods
std
mov
loope
inc
and
pop
jecxz
push
add
pop
enter
popf
int
xor
inc
fwait
dec
rclb
scas
popf
rolb
std
jle
fs
test
mov
adc
leave
xchg
mov
scas
fldpi
sbb
push
xchg
sbb
dec
sub
sbb
mov
scas
lea
in
push
sub
mov
out
rorl
inc
lret
out
cs
push
push
rdpmc
add
enter
shrl
push
inc
jge
jge
ret
inc
xchg
rcll
fisttpl
xchg
pop
popa
sub
mov
stc
cmp
pop
ds
adc
pusha
mov
outsb
repnz
xchg
pop
adc
loopne
fs
pop
popf
ja
xchg
nop
and
adc
mov
adc
pop
add
sub
and
xchg
jg
and
jl
rorb
xchg
mov
mov
fs
push
pop
mov
rcrl
cmp
ret
push
mov
add
rcrb
sub
inc
lds
push
or
mov
test
addr16
mov
int
mov
push
mov
push
adc
imul
lods
int
adc
rcll
scas
je
xchg
mov
insb
and
ja
lds
and
enter
inc
adc
in
aaa
sti
test
js
mov
or
xlat
lahf
push
or
mov
adc
adc
sahf
and
clc
jo
hlt
sbb
cmpb
adc
dec
jae
insl
scas
lock
mov
push
sbb
stos
movsb
outsb
out
out
fdivrl
lret
xor
gs
inc
mov
loop
and
cmpsb
mov
test
cmp
sbb
mov
add
pop
or
push
pop
push
mov
mov
pusha
adcl
cmp
imul
sbb
sahf
cmp
lret
lcall
mov
ljmp
cltd
cmp
inc
mov
inc
dec
mov
hlt
adc
or
sub
mov
rep
sub
hlt
cltd
xchg
gs
jle
iret
rcrl
scas
mov
cmp
nop
xchg
adc
imul
int
pop
push
mov
jge
add
push
popa
arpl
jb
sub
xchg
es
faddp
mov
jmp
cmpsl
xchg
sbb
aas
pop
leave
scas
sbb
daa
adc
sub
js
sbb
jg
sbb
fnstenv
push
jle
stos
lods
ja
das
fiadds
das
or
mov
push
mov
dec
out
mul
jle
xchg
pop
and
or
mov
rolb
mov
addr16
lret
mov
cld
xchg
outsl
dec
sbb
mov
pop
sbb
int3
idivb
test
fs
mov
in
int3
add
mov
pop
scas
aas
push
xchg
repnz
rolb
dec
int
add
sahf
pop
jno
or
push
sub
adc
xor
dec
fs
xor
sbbb
aad
jno
mov
or
push
cld
mov
xchg
dec
stos
add
lcall
adc
ret
and
aas
test
fst
add
or
xor
test
and
xor
addb
iret
mov
dec
test
dec
movsb
scas
fidivrl
inc
xor
cld
fbstp
fdivr
loop
or
sub
mov
aad
pop
push
xchg
xor
imul
notl
ss
push
and
fdivr
add
sbb
mov
dec
adc
push
movsb
scas
fiaddl
sbb
cmp
cltd
test
mov
xchg
sub
in
pop
push
and
imul
jle
lods
cmp
lahf
movsb
scas
fidivl
lret
cli
jg
mov
push
lea
outsb
xchg
push
arpl
add
insb
or
adc
push
fisubrs
ss
lods
xchg
jge
xor
out
sahf
xchg
pop
mov
data16
adc
iret
dec
jbe
faddl
sub
decl
shl
jle
sbb
mov
inc
leave
add
or
mov
and
in
pop
mov
popf
cld
cmpsb
lds
sbb
or
sbb
rolb
enter
hlt
aam
test
lahf
cs
adc
movsb
loopne
call
mov
shl
das
pop
mov
mov
into
dec
push
lret
call
or
mov
mov
shll
and
call
loopne
lcall
lock
rorl
and
pop
ret
jae
enter
mov
lahf
loope
test
icebp
jbe
or
cld
xchg
pop
fsubrl
cmpsl
insb
test
push
mov
pusha
cwtl
push
in
cmpsl
xchg
jne
inc
movsb
cmc
jg
dec
mov
mov
into
lods
icebp
shlb
jne
lahf
insl
and
push
icebp
jle
popa
mov
shlb
dec
ss
mov
xlat
jo
stc
daa
loopne
adc
scas
sbb
or
push
cwtl
mov
lods
pop
fisubl
test
test
xchg
cmpb
in
divps
pop
inc
jo
mov
or
bound
or
fwait
or
xor
ljmp
and
cmp
pop
xchg
in
js
mov
fdivs
addr16
pop
or
cmpsb
pop
and
in
xchg
repnz
insb
shl
cmp
nop
shl
mov
fadd
jp
out
fcoml
xchg
ja
lahf
in
inc
pushf
dec
mov
rorb
test
insb
dec
arpl
and
cmp
mov
mov
and
rcll
out
pop
inc
push
in
gs
fldenv
ret
hlt
repnz
bound
test
out
mov
dec
iret
dec
push
les
out
adc
int
test
cltd
mov
cmpsb
pop
pop
push
pop
aam
orb
popa
adc
ffreep
stc
repz
cmp
add
adc
out
scas
push
mov
stos
sbb
rolb
xchg
xlat
inc
jb
sbb
add
cltd
jb
faddl
xchg
popa
sub
rol
mov
push
xor
mov
push
sub
shr
mov
pop
outsb
andb
pop
xorl
jae
dec
mov
mov
das
mov
pushf
faddl
mov
jnp
or
mov
add
mov
fstpt
sub
adc
sbb
outsl
push
roll
push
push
xor
andl
imul
js
xchg
enter
loopne
mov
add
xchg
push
push
movsl
sub
addr16
push
add
pushf
push
mov
cmp
push
pop
mov
shll
daa
sub
add
cmc
ljmp
mov
addr16
loopne
or
mov
aas
cwtl
lret
sbb
pop
loope
subl
in
jmp
inc
mov
lock
pop
cmp
mov
jp
mul
outsl
sbb
repz
mov
xlat
pop
jle
inc
mov
mov
push
mov
nop
fisttpl
std
fdiv
insb
insb
ljmp
andl
and
cmp
insb
pop
outsl
cmpsl
stos
or
jo
aaa
in
xor
or
add
or
ljmp
or
andl
sti
add
cs
and
cld
rorl
inc
into
adc
push
xchg
shlb
es
jnp
dec
jmp
push
lds
mov
sbb
pop
shl
jbe
xor
and
pop
cmp
fidivl
lret
sub
in
sub
orb
sbb
hlt
sbb
loop
add
int
lock
cmp
call
jl
repz
sti
adcb
fimull
in
loop
and
ja
cld
push
adc
lock
movsb
xchg
jecxz
adc
pop
jae
andb
mov
test
aaa
fildl
fidivs
inc
lret
loop
ret
add
cmp
jns
mov
dec
data16
xchg
movsl
ret
xchg
popa
test
scas
jae
adc
stos
jb
sub
out
mov
sub
mov
xor
or
fldt
dec
cltd
js
pushf
adcb
nop
je
add
xchg
aad
rcrl
mov
add
sub
mov
pop
push
or
inc
in
andl
mov
pop
add
aaa
stc
repnz
sub
lock
mov
fcmovu
dec
mov
pop
cmp
pop
or
mov
loopne
sbb
inc
lret
ret
mov
xchg
or
mull
fsts
inc
into
or
jnp
out
dec
jl
cmc
repz
mov
insl
jo
out
fimuls
inc
lret
xchg
int
ror
scas
mov
push
push
out
pushf
inc
loope
inc
roll
pop
xchg
add
and
dec
sbb
testb
add
add
sub
std
mov
mov
push
sub
adc
ds
sub
pop
cmpsb
add
jl
xchg
and
inc
inc
aam
mov
jns
push
lds
push
fmul
dec
test
pop
outsl
ljmp
je
lock
loope
out
add
enter
out
push
push
and
xor
ret
xor
pop
sahf
add
cwtl
add
jno
idivb
mov
stos
xchg
cs
jmp
jns
std
cld
add
lret
and
ret
xchg
subb
sub
cmp
xor
dec
pop
push
inc
out
jecxz
mov
arpl
fwait
mov
lods
out
cmc
lods
sbb
dec
add
adc
cmp
xor
ds
jbe
sqrtps
add
xor
mov
lahf
lock
sub
push
mov
loope
fwait
jmp
adc
xchg
imul
sbb
arpl
out
and
jp
insb
out
mov
loope
imul
xchg
lds
cmpsb
int
pop
fiaddl
icebp
push
sub
cmc
jg
insb
mov
popa
movsl
ja
push
push
inc
inc
sbb
cmp
xor
xchg
pop
lods
push
push
xchg
popl
xor
xor
lea
jl
jns
xchg
or
cmpsb
adc
pop
scas
cli
in
xchg
cmp
movsl
xor
cmpsl
inc
rclb
out
xlat
xor
in
test
pop
movl
aas
addr16
push
imul
ficompl
fmull
hlt
and
fsubrl
push
je
mov
push
or
jns
inc
or
xor
inc
insl
scas
cltd
adc
test
push
jl
mov
insl
outsb
movsb
pop
fsubp
mov
or
clc
cltd
inc
ficoml
aad
cli
stos
jecxz
xchg
mov
mov
dec
movsl
add
mov
test
adc
cs
pusha
cmp
xor
dec
add
pushf
and
data16
bound
mov
adc
repz
arpl
addl
hlt
pushf
pop
push
lret
adc
sub
sub
jnp
sub
or
roll
incb
add
stos
test
inc
clc
sti
out
mov
ret
lods
loopne
pop
fsubl
push
orl
add
lods
pop
pop
mov
addr16
in
lods
pushf
sbb
mov
pop
jnp
inc
jmp
jg
and
movq
je
cmpsb
out
aas
dec
push
jns
push
jp
xchg
rcll
bound
nop
notb
jecxz
or
mov
insl
loopne
dec
shlb
dec
scas
orb
and
and
lock
lret
push
dec
aad
dec
cmp
fsubl
jle
push
mov
add
push
cmp
push
mov
repz
mov
add
adc
sbb
xchg
fwait
jg
lods
lcall
movzbl
data16
add
mov
push
fwait
pop
fcoms
mov
mov
inc
xchg
xor
jg
jmp
stc
jg
imul
in
jecxz
ret
cmpsb
fwait
xchg
lods
xor
test
add
xlat
sbb
push
mov
mov
pop
repz
jecxz
je
mov
mull
and
rorb
cltd
and
sub
and
xchg
arpl
mov
leave
mov
lds
loop
cs
jbe
mov
das
adc
fnsave
mov
pop
cmp
cs
test
shlb
adc
inc
inc
out
pop
mov
pushf
shl
aas
popf
out
and
pop
inc
sti
lcall
iret
bound
movb
movl
pusha
lea
jmp
push
call
xor
call
add
ds
dec
cmp
and
sbb
push
jo
or
mov
dec
in
into
icebp
adc
es
mov
jecxz
icebp
and
adcb
mov
das
flds
jg
call
adc
sub
dec
into
jo
hlt
popf
add
inc
insb
inc
cmp
push
mov
jne
sub
repz
sub
jb
add
cli
pushf
sbb
sub
leave
out
out
movsl
dec
push
jp
pop
ret
mov
xchg
inc
pop
adc
jbe
pop
cmpsl
int
sbb
repnz
cs
xchg
arpl
and
nop
pop
aaa
dec
mov
and
add
xor
push
mov
jl
xor
pop
inc
mov
lahf
ja
jp
ja
sub
xchg
xchg
cmp
loopne
cld
adc
out
mov
lea
hlt
jno
loopne
stc
xor
sbb
inc
mov
pop
xor
test
negb
aad
hlt
inc
fdivs
lahf
call
hlt
or
push
and
xchg
pop
add
rcrl
sub
mov
cmpl
mov
push
mov
out
mov
fwait
xchg
or
adc
mov
add
mov
dec
and
lds
pushf
cs
pusha
movb
pushf
popl
bt
xor
cmc
xor
push
pusha
xor
stc
jmp
xor
clc
xor
pushl
call
jmp
push
movl
pusha
push
pushf
movb
lea
jmp
pushl
call
movl
pushf
movb
pushf
movl
push
pushl
movb
lea
jmp
pop
or
fstpl
push
fists
and
outsb
rclb
into
imul
or
lock
aas
out
or
sbb
push
lahf
pop
in
mov
sbb
ljmp
jmp
sar
ret
sbb
imul
mov
mov
aad
loop
inc
dec
pusha
cmp
adc
mov
roll
pop
adc
pushf
mov
mov
pop
mov
daa
lret
jmp
inc
dec
adc
test
lret
ljmp
les
cwtl
movb
cwtl
mov
pop
cld
lcall
xchg
mov
xchg
push
sbb
sub
sbb
bnd
sub
and
pop
popa
inc
enter
movsl
pop
andb
nop
fistpl
push
mov
jb
sub
decb
out
sbb
sbb
insl
sbb
icebp
out
outsb
mov
cmpb
in
sub
fs
cmpl
jg
imul
mov
insb
in
and
adc
fwait
adc
aas
lds
push
mov
pop
and
and
push
repz
scas
repz
inc
push
data16
and
cmp
xchg
sbb
jecxz
sbb
ljmp
stos
cmp
push
shlb
mov
fldcw
inc
fimull
repz
jmp
sahf
jbe
negl
fistpll
fsubs
mov
push
fsubl
mov
push
fisubrs
sbb
cmp
arpl
repnz
dec
mov
mov
xchg
sbb
xlat
and
neg
pop
mov
mov
push
jl
pop
call
stos
outsl
or
push
pusha
sbb
repz
lahf
jmp
add
fcmovbe
nop
das
push
loopne
xchg
xor
jl
iret
jle
inc
loopne
jg
inc
rcrb
push
fcmovb
push
inc
sub
outsb
out
daa
mov
jo
insl
push
ficoml
cltd
int3
je
ja
loope
lods
test
xchg
pusha
pop
and
push
jl
xlat
or
lea
lods
in
outsb
cmpsl
xor
mov
lahf
mov
rcrl
or
sbb
inc
fdivr
adc
or
adc
pop
pushf
and
dec
pop
push
pusha
jl
inc
icebp
xchg
out
mov
xchg
pop
xchg
adc
mov
jmp
sbb
ja,pt
cmp
cs
adc
addr16
loop
xor
dec
int
ljmp
mov
xchg
mov
push
cmp
jns
jno
pop
notl
jecxz
mov
mov
sub
or
jo
jl
fisubs
divb
xor
lock
test
int3
mov
jg
mov
adc
shr
mov
mov
xchg
rcrl
sub
sbb
cmp
pop
push
in
sbb
daa
or
xor
adc
insb
push
negl
test
fwait
stos
fwait
lret
pop
mov
dec
test
lock
fdivr
cmp
outsb
fcoms
arpl
or
adc
xchg
inc
scas
sub
mov
or
mov
pop
adc
and
jp
sub
imul
cmp
mov
out
outsl
push
dec
xor
adc
inc
test
cmp
pandn
ret
pop
popa
jbe
jno
pop
loop
movsb
and
test
cs
mov
es
dec
mov
das
mov
fsubs
push
test
jl
mov
ss
pop
pop
stos
xor
push
jmp
setl
push
push
mov
pop
sahf
or
leave
jno
in
aam
sbb
aad
les
insl
adc
sar
in
xor
mov
rorl
mov
pop
dec
adc
xchg
es
mov
in
fcmovnb
xlat
pusha
fldt
inc
add
xor
jge
int3
pop
mov
je
test
nop
mov
gs
and
enter
and
cmp
addr16
ss
mov
decl
shlb
inc
inc
mov
xchg
xor
xchg
sbb
fildll
jno
and
mov
and
jge
sub
pop
and
imul
mov
lds
rclb
fadds
sub
leave
mov
setle
lcall
xor
push
mov
lds
scas
pop
pop
or
mov
push
movlps
sbb
cwtl
xchg
push
mov
xchg
leave
inc
cmp
jmp
clc
jle
pop
lret
add
flds
cmp
mov
push
xchg
fidivs
dec
ljmp
or
les
mov
jecxz
add
jmp
sti
sarb
nop
cmp
in
adc
andb
movsb
inc
pop
mov
sti
sbb
jns
negb
repnz
add
adc
and
xor
lahf
cs
stos
cwtl
and
cmp
fcompl
and
push
aas
pop
lock
xchg
loop
mov
insl
imul
ficoms
fs
mov
sahf
sub
push
jbe
fimull
adc
test
std
and
imul
cmp
imul
inc
mov
mov
and
pop
in
mov
enter
jns
lods
test
sar
add
leave
popa
ret
je
dec
xor
mov
push
and
cli
xchg
mov
orb
sahf
pushf
lock
aas
jbe
test
mov
sahf
movsb
gs
lret
in
cmp
icebp
clc
fwait
push
adc
push
cmpsb
std
stos
or
aam
jno
imul
mov
cmp
pop
jno
mov
aas
test
cmp
add
mov
push
jmp
in
adc
outsl
out
ja
fimull
mov
jmp
or
cld
sarl
cs
xor
imul
lahf
jp
lret
lods
mov
stos
es
out
ja
mov
cltd
in
int3
repnz
xchg
aas
push
xor
push
loopne
xchg
xchg
idivl
lret
jb
push
mov
sub
and
dec
ljmp
jbe
adc
outsb
mov
push
or
lahf
jb
push
jp
popf
and
cmp
mov
movsl
repz
hlt
mov
xchg
imul
mov
mov
jnp
pop
xchg
aam
repz
jl
and
adc
mov
lods
add
mov
and
test
push
out
cmc
loope
dec
sti
push
test
lret
pop
iret
iret
push
jo
int3
movsl
out
or
bound
es
out
mov
or
mov
test
std
jmp
sub
add
sub
push
pop
bound
sub
ret
hlt
jmp
ret
mov
xchg
xchg
ljmp
leave
cli
pop
mov
pop
xor
mov
jbe
push
fwait
dec
mov
int
pop
add
and
xchg
push
notb
pop
jle
sub
test
xchg
loope
int3
lahf
jnp
sbb
sub
idivb
xchg
or
pushf
jmp
xor
test
stc
xor
jmp
xor
cmc
pushl
popf
pushf
pushf
pushl
ret
pushf
movb
movl
push
pushf
movb
movl
lea
jmp
cwtl
insl
add
xchg
pop
fstps
mov
call
ljmp
jae
xor
lods
hlt
adc
bound
add
pusha
testl
dec
ret
aas
imul
mov
fstps
lea
or
xchg
pushf
repz
jb
push
dec
ja
bound
lds
popf
and
js
aam
dec
ljmp
pop
fstps
lret
xor
xor
outsl
decb
dec
mov
bound
outsb
scas
sbb
call
jmp
fstps
xsha256
cmpsb
push
xchg
push
es
lret
stos
cmp
dec
rcrl
lock
test
arpl
sbb
lods
and
int3
and
sarl
xor
cmp
insl
xchg
mov
xlat
aas
ret
mov
fistl
pop
xor
out
aam
adc
sti
jmp
add
add
addr16
jl
cmp
subl
inc
dec
cmp
outsb
lea
sti
and
inc
rcll
mov
jns
mov
add
jns
loope
loope
mov
push
stos
es
pop
jg
int3
push
adc
stos
loop
jo
andl
sbb
cld
add
add
xchg
dec
js
inc
cmpsb
inc
adc
or
mov
movsb
pop
pop
call
outsl
idiv
adc
jmp
mov
jmp
fucom
push
add
jae
incl
mov
aaa
mov
sahf
mov
inc
jno
dec
push
inc
jle
adc
mov
inc
sbb
mov
mov
sbb
icebp
stc
push
in
push
add
push
push
int3
push
push
inc
mov
pop
in
lods
ficompl
add
in
pop
cmp
xchg
or
inc
mov
lock
xchg
jp
fadds
lock
sar
scas
dec
setae
daa
lea
mov
lea
push
cmp
push
rcr
fmul
sbb
cs
loopne
xchg
out
push
cmc
jp
test
fistps
test
bound
jg
pop
pusha
lods
inc
mov
or
add
pop
scas
sub
push
pop
into
mov
xor
cmc
push
stos
mov
mov
adc
and
or
repz
mulb
scas
dec
push
es
psubw
orl
dec
loope
ret
and
out
cld
call
pop
icebp
jle
mov
mov
and
jle
insl
notb
insb
negb
cmp
push
ret
sbb
bound
bswap
xchg
adc
rorl
orl
and
out
sub
inc
pusha
out
fbstp
add
jg
adc
into
push
jge
push
mov
mov
mov
and
xor
js
mov
xor
pop
int
fwait
test
fcompl
or
xchg
mov
lock
push
std
xchg
aas
adc
pop
sub
das
cli
test
dec
test
dec
xor
adc
mov
inc
xchg
pop
or
negl
push
mov
and
fcoms
lods
push
push
adc
cmp
sbb
pop
popa
xchg
add
es
dec
and
loopne
lock
cmp
cltd
pop
lret
out
out
or
rcl
sbb
shrb
add
mov
popf
cmc
xor
aaa
push
push
add
scas
cmp
adc
jns
lea
jno
jnp
movaps
enter
mov
sahf
sub
ss
mov
adc
addr16
daa
dec
cmp
jle
adcb
pop
fdivl
pop
cmp
in
inc
jmp
subl
xor
idivb
stos
sbb
xchg
inc
aad
mov
push
daa
or
imul
jb
into
sbb
adc
sub
out
rcrl
inc
pop
xchg
in
lea
xchg
mov
xchg
cmp
mov
or
out
fcmovnu
add
pop
push
in
in
add
in
sbbb
pop
movsl
cmp
mov
bswap
sub
or
or
fisttps
mov
lahf
imul
lock
jp
jg
mov
adc
push
frstor
sub
cmp
xchg
fcoms
jl
and
push
repz
mov
jecxz
xor
stc
imul
or
sbb
idivl
cmp
inc
daa
scas
addr16
and
sbb
xor
insb
lock
test
mov
aam
mov
lret
push
mov
mov
frstor
add
mov
int3
push
jbe
daa
test
lcall
push
xlat
fucomip
inc
push
loopne
icebp
out
cmp
xlat
pop
loopne
mov
push
rolb
push
addr16
call
mov
fwait
adc
xchg
fs
fstps
test
dec
cmp
or
jae
push
dec
xlat
sbb
cld
rcrb
aam
mov
jg
mov
fwait
xchg
pop
xchg
daa
pop
mov
mov
xor
imul
jg
mov
loopne
mov
outsb
cmpsl
das
push
jg
mov
push
adc
fistps
cli
adc
mov
mov
adc
adc
imul
inc
shlb
mov
imul
leave
adc
daa
mov
add
js
ret
pop
stos
dec
jle
in
rol
pushf
int
and
addr16
sbb
lea
mov
pop
rcrl
push
lcall
mov
lods
ret
ss
dec
sub
mov
enter
push
into
int3
and
add
int3
jp
mov
inc
lret
push
js
sbb
dec
add
push
fsubl
loope
push
mov
ljmp
adc
movsl
ret
leave
pop
dec
je
cltd
nop
mov
add
push
loop
add
rolb
dec
in
or
in
jne
sub
mov
stos
dec
sub
insb
xadd
or
std
cmp
xchg
pop
inc
daa
or
pop
xchg
sbb
pop
cmp
adc
push
pop
xchg
xchg
lea
push
in
adc
imul
es
or
aaa
ret
add
fiaddl
sbb
jns
out
in
fdivrl
sub
xchg
stos
xor
mov
jne
add
loope
fistpl
add
test
sub
fcmovnb
dec
mov
loope
mov
cmpsb
jne
roll
lds
inc
cmp
lret
cmp
call
data16
dec
lcall
lret
sub
sub
fcomps
das
in
jno
inc
dec
xor
loope
sub
fcmovnb
cmc
in
sbb
cmc
ljmp
out
mov
and
xchg
sub
jecxz
lcall
xchg
inc
add
pop
inc
dec
iret
sub
test
mov
cmp
filds
sub
roll
gs
rclb
popf
mov
enter
mov
xchg
mov
jecxz
outsl
adc
sarb
lcall
orb
push
lahf
outsb
xchg
imul
ffree
mov
pop
in
cs
dec
xchg
ret
aam
imul
test
inc
jnp
stos
xchg
pop
push
jno
fs
inc
ret
outsb
icebp
mov
aas
rorl
or
mov
xchg
jns
pushf
stos
nop
mov
sub
outsb
sahf
jns
dec
insl
push
cmpsl
ficomps
mov
mov
leave
mov
xor
icebp
insl
pop
dec
insb
dec
lret
xchg
int3
jne
add
and
mov
lds
ret
notl
imul
shlb
shll
or
pushf
push
pushf
popl
clc
xor
call
movl
call
jecxz
push
push
mov
and
jo
jbe
add
ret
or
cltd
lret
into
je
mov
and
sbb
rcl
jne
adc
sahf
xor
and
test
ret
or
add
mov
imul
cmp
jp
ljmp
push
movsb
and
sbb
dec
push
push
in
sar
mov
clc
imul
or
out
clc
sbb
icebp
xor
cwtl
gs
mov
dec
jle
add
jecxz
ret
adc
scas
sarb
insl
fs
push
in
inc
xchg
push
cwtl
adc
fsubl
mov
adc
mov
mov
xchg
int3
aaa
in
push
out
mov
jecxz
out
sbb
xchg
dec
xchg
sub
nop
sbb
xchg
mov
mov
jns
lock
pop
clc
ljmp
adc
and
cmpsb
icebp
jne
dec
cmp
pushaw
shlb
repz
sbb
scas
mov
ja
cmp
hlt
imul
fcmovne
cmp
mov
xchg
mull
adc
sub
popa
int
rcl
sbb
fdivrp
mov
add
divl
int3
pop
inc
test
push
sarb
mov
pop
mov
rcl
pop
cli
pushf
es
jo
in
popa
jp
adc
inc
ljmp
xor
inc
stc
ss
add
out
xor
pop
mov
ret
ja
pop
lds
sub
sub
pop
aad
mov
push
data16
int
daa
mov
xor
pushf
pushf
jne
rcll
jp
mov
pop
pop
mov
js
addr16
out
loope
jbe
sub
dec
fildl
ss
push
mov
push
test
sub
jl
mov
push
test
cwtl
int3
push
sahf
sub
test
mov
xchg
mov
sbb
nop
jo
inc
notb
hlt
inc
repz
int
lock
pushf
or
add
jne
xor
je
pop
lahf
test
sbb
or
cmp
dec
pushf
dec
movnti
jle
mov
or
shll
aad
push
fisttpl
lods
loopne
cwtl
add
sbbl
lret
sbb
iret
outsb
mov
pop
out
fnstcw
pop
loope
movsl
das
rorb
sbb
or
mov
mov
enter
iret
xchg
rcrl
pop
jge
dec
cmp
mov
cmp
gs
mov
sbb
push
pushf
aaa
gs
in
loope
int
rcrl
or
inc
jl
pop
subl
js
rcl
loopne
push
fwait
jbe
xorb
push
jle
jp
jge
enter
mov
dec
and
and
jecxz
data16
pop
pop
or
loope
loope
loope
mov
negb
clc
and
fbld
jge
pop
popf
xchg
aas
fldcw
mov
sbb
sub
adc
xchg
mov
imul
dec
pop
in
outsl
add
sbb
imul
jl
and
lret
adc
cwtl
adc
fs
xchg
mov
addr16
cmp
scas
pop
jno
sub
test
xor
mov
insb
adc
dec
cld
pop
aad
xchg
jle
add
xchg
sub
jle
es
pop
movl
pop
test
idivb
and
cld
nop
sbb
mov
add
push
jbe
or
inc
imul
cmpsb
ret
pop
fucom
lret
pop
std
pop
jns
rep
hlt
sub
mov
shr
pop
push
lahf
lret
fldenv
inc
stos
mov
mov
sti
int3
cwtl
xchg
xor
or
lods
aad
jecxz
or
jp
addb
xor
dec
mov
cmp
in
jp
adc
pusha
idivb
test
or
repz
lret
int
lock
shrl
adc
gs
ds
mov
and
pushf
sbb
or
jo
push
fdivl
xchg
js
xchg
mov
imul
in
xor
cmpsb
sub
jle
add
or
insb
push
sbb
cmp
in
dec
sub
mov
out
js
mov
pop
arpl
push
jbe
movsb
stc
ljmp
int3
ret
into
dec
nop
and
jns
jnp
or
push
aam
test
mov
adc
repz
adc
aam
mov
cwtl
mov
jecxz
adc
enter
cwtl
inc
xchg
and
setnp
push
dec
push
xchg
inc
adc
xor
xchg
mov
inc
jb
pusha
out
jbe
adc
cld
push
jmp
or
xchg
jmp
mov
fwait
out
add
in
not
mov
mov
and
mov
add
push
pop
mov
bound
repz
mov
cmp
add
xrelease
dec
mov
mov
pop
bound
les
lahf
int3
xor
loope
inc
pop
and
push
and
stos
jg
les
inc
and
leave
incl
call
add
adc
cld
mov
dec
rcrb
pop
xor
int3
mov
mov
test
mov
movl
jmp
pusha
movl
pushf
pushf
movl
movb
lea
jmp
jmp
cmp
xor
cmp
xor
cld
pushl
popf
pushf
push
pushl
ret
xor
clc
cmp
xor
clc
xor
stc
pusha
xorl
pushf
pushl
popf
mov
pushl
ret
pusha
pushf
pusha
movl
pushf
movl
pushf
push
lea
jmp
icebp
and
or
loopne
jge
and
push
test
scas
xor
jl
and
aam
fs
ffree
push
pushf
jne
push
and
xchg
rcrl
xchg
or
aas
imul
push
pop
dec
dec
jecxz
lods
cmp
adc
sbb
jns
scas
cmpsb
in
and
vpsubsb
subl
fcoms
dec
adc
jmp
loope
bound
xchg
lods
xor
pop
xchg
lret
xchg
out
or
inc
fstpt
movsl
push
fldcw
mov
inc
rcr
cs
addb
shrl
mov
xchg
imul
add
negl
test
push
sti
sahf
fdiv
xchg
add
sub
std
dec
out
adc
sbb
adc
mov
cmpsl
cli
push
test
dec
fildl
in
push
cmp
pusha
jl
and
ja
and
shll
xchg
and
push
mov
aam
sub
mov
jg
fsubp
mov
and
or
cmp
scas
jl
jge
ds
int
es
cmp
mov
sbb
sarb
std
imul
test
roll
or
jecxz
popa
jo
xor
leave
mov
data16
std
push
sbb
inc
sub
pop
dec
ss
fldl
in
push
cs
je
push
pop
adc
lods
sbb
pop
aam
mov
add
push
test
cs
mov
mov
int
adc
dec
lds
xchg
xchg
mov
in
jecxz
and
inc
jecxz
mov
mov
cmp
das
mov
rolb
mov
mov
jg
cmp
enter
adc
andb
push
xlat
adcb
gs
cmp
loopnew
je,pn
dec
jo
mov
lock
mov
dec
pop
lahf
test
sahf
cmp
mov
or
test
out
and
repnz
xor
loopne
les
and
test
lret
shrl
insb
jle
idivb
lods
mov
stos
js
lret
jle
xchg
xor
inc
adc
std
jmp
jae
xchg
cmpsb
sarb
ja
fcoms
in
jae
jle
inc
mov
int3
jle
inc
pusha
mov
mov
pop
lcall
cmpsb
mov
pop
stos
aas
jl
or
xor
xor
push
orl
movsb
pop
lcall
inc
xchg
insl
cwtl
pushf
xchg
fidivrl
pop
outsb
push
ljmp
sub
adc
and
scas
sbb
xchg
jno
jecxz
orl
daa
out
sbb
test
xor
jge
and
push
nop
pop
fisubs
cs
fimull
mov
cwtl
and
pop
or
mov
dec
jg
push
xor
pop
mov
or
mov
fcoml
push
lods
inc
aaa
pusha
dec
sahf
xor
fimull
fstps
jg
stc
pop
cmpsb
fsubrs
jno
or
test
ja
push
lds
mov
adc
inc
mov
sub
mov
pop
rcl
adc
andl
clc
in
lret
add
inc
and
sub
push
xor
mov
pop
cmpsl
ja
cwtl
sbb
mov
mov
push
mov
sbb
mov
cmp
in
mov
sti
movsb
subb
pop
repnz
xchg
jg
outsb
in
ljmp
sbb
adc
in
jb
test
lods
xchg
jb
push
mov
lods
lods
pushl
mov
insb
dec
inc
sbb
xorl
push
in
punpcklwd
out
mov
add
or
jl
leave
rcll
xchg
pop
dec
pop
jbe
mov
mov
popa
aaa
adc
idivb
cmpl
pushf
popl
pusha
xor
test
call
push
pusha
pushl
lea
jmp
test
xor
stc
push
xor
bt
xor
test
pushl
popf
movw
movb
pushl
ret
xor
stc
xor
cmp
call
call
pop
inc
nop
push
cwtl
fnstenv
inc
fiadds
xor
out
xchg
in
cmp
aam
outsb
popf
fildl
xchg
lea
ds
popa
cli
lret
shlb
mov
shlb
mov
cmc
xchg
adc
add
jno
xchg
or
sti
jge
cltd
inc
fcomps
scas
inc
iret
dec
loope
lahf
sahf
dec
push
shrb
mov
push
mov
test
cmp
pop
adc
push
add
adc
out
sbb
cli
xchg
adc
loopne
push
hlt
in
jne
ret
inc
adcl
popf
mov
mov
lret
or
mov
pusha
inc
adc
jae
pop
push
adcl
jl
sub
add
sub
js
movl
repnz
sbb
leave
sbb
jb
popa
loopne
lds
ds
cld
xchg
in
out
cmp
lret
enter
cmp
repnz
and
or
cwtl
gs
push
mov
js
cltd
and
or
lcall
xchg
cli
mov
adc
mov
faddl
lahf
popf
repz
aas
jecxz
xchg
jo
into
vcvtdq2pd
ss
inc
or
fldcw
jnp
orl
add
add
and
sub
scas
test
pop
inc
jge
jp
les
data16
std
jge
nop
xor
cld
pushl
popf
pushf
movb
pushl
ret
aad
adc
push
xlat
sub
adc
push
data16
dec
ficompl
mov
popf
dec
sbb
xor
inc
aas
pop
leave
add
pop
fidivrl
jno
adc
and
xchg
inc
fisubrl
data16
xor
das
cs
fisubs
or
test
movsb
pusha
mov
int3
mov
xor
mov
dec
xchg
mov
or
mov
mov
mov
cltd
mov
and
je
stc
jb
pop
or
stc
das
addr16
pop
ljmp
pop
in
or
mov
ficoml
negl
fildl
rol
and
sbb
pop
test
int3
pop
jecxz
ret
or
and
inc
push
lock
sub
adc
mov
in
out
mov
add
fcoms
mull
jl
jecxz
sub
imul
jge
cmp
shll
pusha
xor
icebp
ret
cwtl
push
idivb
cld
sbb
fcomps
test
push
repnz
jmp
push
pop
jmp
pushf
call
jmp
jmp
jne
push
push
movl
jmp
pusha
movl
jmp
xorb
lea
lods
aam
or
or
and
scas
sarl
arpl
jle
rclb
adc
lret
std
aad
adc
cmp
mov
or
dec
and
icebp
add
and
jg
jnp
xor
aaa
sarb
dec
lea
lods
shl
cmp
pop
cli
and
dec
rcrl
add
push
inc
jb
pop
rorb
int3
mov
out
movsl
push
push
hlt
lea
push
cmp
mov
dec
jno
cltd
jnp
adc
adc
inc
sub
pop
and
adc
lock
lcall
or
adc
mov
or
mov
jnp
dec
aam
in
jne
cmc
inc
lds
pop
cltd
fsubrl
push
clc
loop
arpl
mov
push
add
push
add
cmc
out
stos
inc
int3
push
fsubrl
int3
push
mov
inc
mov
orl
fs
xor
int
test
cltd
pop
hlt
cwtl
sbb
into
hlt
in
shl
xor
cs
scas
push
xor
xor
cmpsl
jns
stc
lcall
test
loope
in
dec
fwait
sbb
mov
adc
pop
and
lea
mov
or
mov
jae
mov
mov
sub
aam
int3
mov
mov
sub
mov
inc
push
test
jae
ficoml
pop
push
cmpsb
xlat
lret
pop
enter
mov
adc
mov
pop
jmp
and
pop
bnd
jle
addr16
les
add
sub
mov
rclb
pop
ret
js
fdivl
pushf
mov
sub
dec
cmc
outsb
sbb
insb
jg
sub
aad
adcl
std
dec
adc
mov
sub
xchg
mov
mov
lods
xchg
push
shll
jge
fsubrp
pop
and
rcrl
hlt
in
mov
xchg
adc
jmp
xchg
push
push
sub
inc
in
ftst
mov
push
lcall
mov
pop
cmp
pop
mov
mov
mov
fwait
sub
push
dec
lcall
or
push
je
lea
rcrb
fsubrs
enter
pusha
mov
cmpsl
mov
jae
inc
test
insl
mov
push
sub
int3
jmp
cmc
push
xor
cli
cmp
or
enter
icebp
mov
jge
sbb
stos
int3
dec
iret
adc
lret
push
mov
lock
pop
xchg
push
loopne
cmp
enter
lahf
or
adc
ror
or
sub
inc
sub
shlb
femms
xchg
jnp
mov
jl
cmpsb
xchg
add
or
outsb
or
sti
jg
push
dec
loopne
shlb
ret
dec
xchg
inc
push
xor
in
js
jnp
push
cmp
add
xor
mov
mov
cmp
pop
jnp
jbe
dec
mov
rcrl
jne
inc
aad
fcomps
sub
push
test
mov
ljmp
dec
dec
lret
mov
mov
sbb
clc
pop
fs
inc
inc
and
aad
xchg
pushf
mov
cmp
push
add
inc
jmp
addr16
in
loop
push
push
cmp
test
popa
or
cli
inc
or
mov
xchg
push
jp
inc
cmp
inc
mov
in
and
xchg
insl
xchg
lcall
sbb
mov
adc
jmp
in
lcall
lahf
inc
mov
inc
insl
mov
mov
cmp
pop
lock
jmp
fisubrs
jb
stos
scas
mov
jge
dec
loope
in
mov
or
xchg
adc
mov
aad
sbb
mov
xor
sub
ljmp
pop
dec
stc
outsb
lds
pop
jae
xor
ds
es
jl
ret
pop
jge
mov
pop
ds
les
xor
add
out
daa
push
loope
mov
and
inc
insb
cmp
dec
xchg
cmc
xchg
mov
ret
pop
imul
orb
xlat
out
cli
dec
movl
addl
in
dec
inc
int3
shll
adc
repz
xchg
cmp
jg
mov
mov
fadd
daa
inc
sub
dec
sbb
jnp
mov
jbe
pop
sarb
sbb
movsl
ds
push
add
mov
sub
cmp
jne
jb
sbb
ja
pushf
dec
jge
popa
cmpsb
xchg
nop
outsl
dec
mov
shr
daa
addb
ret
mov
xor
mov
jmp
and
in
adc
nop
jle
and
cmc
test
scas
movsl
mov
jae
iret
dec
cltd
xor
sub
insl
clc
dec
dec
into
xchg
fldt
test
pop
xchg
add
out
jge
int3
xchg
mov
jae
aaa
jae
xchg
and
repz
jno
cmp
cmp
cli
mov
js
pop
loop
test
lcall
pusha
hlt
sti
sub
push
sbb
shrd
sarl
popf
cs
test
in
inc
in
popa
mov
ret
sub
repnz
dec
xor
call
sbb
jb
popf
mov
faddl
xchg
nop
lock
mov
cmpsb
popl
push
and
test
xchg
mov
ret
dec
inc
movsl
adc
sbb
cmp
xchg
stos
cmp
dec
faddl
popf
xchg
dec
mov
jg
hlt
leave
or
mov
bound
icebp
mov
cmp
push
xchg
xor
jo
cli
mov
dec
dec
push
cmp
dec
inc
inc
test
push
loop
in
cmpsl
nop
notl
cwtl
int3
rclb
enter
ss
iret
and
nop
sub
pop
stos
push
pop
dec
dec
pop
cmc
pop
repz
jb
add
mov
inc
int3
into
add
pop
cmpsb
sub
add
dec
or
cli
in
jg
es
ja
and
xor
stos
das
mov
es
pushf
mov
fistpl
fistpll
push
pushf
and
xchg
mov
pop
scas
scas
aad
bound
scas
scas
aam
pop
je
in
sub
or
dec
into
add
mov
sahf
cmpsl
mov
out
iret
xor
pushf
inc
test
divb
xchg
leave
pop
jae
lret
adcl
sub
xor
out
adc
xchg
pop
cmp
sti
xor
xchg
cmpsl
xchg
icebp
addb
dec
leave
or
and
test
push
imul
lea
and
jmp
and
mov
or
in
repz
pop
pop
xchg
lds
movsl
test
int
mov
sub
xor
insb
sub
dec
popf
test
ret
push
divb
adc
xchg
repz
cmc
inc
push
pop
call
popf
sbb
and
loop
ficomps
sahf
dec
add
ss
add
fwait
pushf
and
out
in
xchg
ja
cmpsb
xchg
inc
inc
mov
divb
pop
inc
in
icebp
std
rcll
cmp
push
adc
jle
pop
fstps
xchg
pusha
aas
negl
je
scas
xlat
ljmp
aam
lcall
jmp
pushf
xor
test
xor
cmp
cmp
xor
pushf
stc
pushl
popf
movb
pushl
ret
jmp
insl
outsl
rclb
or
pop
pop
adc
sbb
add
dec
xchg
push
call
dec
dec
push
and
mov
leave
les
inc
ret
pop
inc
jno
addl
stos
push
movsl
popa
push
loopne
and
inc
dec
orb
push
mov
aas
aam
das
scas
scas
sub
orl
ret
xchg
xor
inc
sarl
push
ret
or
cld
stos
cmc
jno
dec
sub
or
mov
dec
pop
ret
adc
out
mov
cmpb
sub
ret
xchg
pop
cmp
jecxz
test
or
shll
jge
cmp
jbe,pt
dec
shl
aas
negb
ja
pushf
popl
clc
stc
xorl
bt
xor
clc
xor
cmp
test
xor
cmc
xor
cmp
xor
stc
cmp
xor
cmc
xor
push
clc
pushl
popf
pushf
push
pushl
ret
lods
jge
sbb
add
sub
or
daa
repz
adc
nop
mov
inc
lret
dec
xchg
cmc
xor
inc
lret
jmp
xchg
adc
add
dec
jnp
xlat
lds
mov
inc
outsl
add
xchg
in
mov
repnz
test
out
rcrl
popf
inc
cltd
cmpsb
xchg
cmc
xor
in
dec
xor
popa
int
mov
into
pop
sti
mov
int
jmp
or
stos
push
loope
jmp
cmp
adc
ja
cmc
xor
and
jp
call
mov
inc
mov
mov
inc
outsb
or
adc
mov
pop
cli
dec
movsl
pop
pop
mov
push
in
xlat
mov
add
inc
in
add
fs
cmc
xor
icebp
mov
add
test
sahf
sbb
adc
add
ret
jbe
jg
movsl
jbe
mov
pop
gs
addr16
pop
je
sub
cmpsl
sbb
orb
clc
fcom
xchg
mov
cli
push
std
test
hlt
ret
jo
paddusw
lds
rclb
fwait
pop
mov
push
cmp
mov
mov
inc
add
add
xlat
inc
je
dec
test
int
xlat
sub
cltd
cmpsb
iret
lret
push
gs
daa
je
dec
sbb
sbb
ds
inc
cmp
lea
leave
ret
leave
dec
xchg
aaa
les
lea
mov
std
sub
icebp
fsts
push
outsb
adc
xchg
lsl
in
mov
jno
out
jmp
mov
add
loope
loop
sbb
pop
adc
sub
inc
sub
xchg
jns
push
inc
int
out
xchg
or
pop
dec
rorl
bound
jo
stos
and
dec
aam
stos
into
lods
es
dec
ds
jl
enter
pop
ja
mov
ror
push
xchg
or
loopne
in
stos
mov
daa
into
inc
idivl
sub
pop
xchg
fbstp
cli
push
arpl
push
rorb
push
xlat
jle
lahf
and
call
xor
cld
mov
cld
mov
dec
scas
repnz
aas
xchg
jg
in
add
jp
mov
hlt
mov
stos
and
outsb
mov
mov
nop
jo
call
andl
mov
mov
cs
inc
cmc
or
leave
xchg
aas
inc
mov
mov
cmpsl
cld
xor
decl
add
fisubs
aam
imul
mov
mov
pop
shll
adc
or
repz
jge
pusha
inc
jb
movsb
daa
les
out
push
cli
idivb
cmc
icebp
arpl
lcall
fisubs
lds
mov
xor
test
mov
push
mov
outsl
mov
inc
aam
adc
fldl
adc
mov
sbb
sahf
jge
cwtl
scas
and
push
int3
adc
leave
in
out
push
cmp
test
andl
decb
fiaddl
push
cltd
js
negb
sub
sti
shrb
xchg
test
inc
rcll
stos
addb
stos
pop
in
cmpsl
mov
adc
and
shrl
inc
ret
enter
insl
push
das
push
add
test
inc
clc
scas
jne
stos
sub
jle
sarb
sarl
ret
into
xor
push
xchg
sbb
scas
shlb
clc
and
and
shlb
dec
push
fsubs
dec
mov
stos
ds
xor
lds
ljmp
repz
pop
sbb
sahf
cmpsb
xchg
jmp
rorl
xchg
ret
popf
push
push
add
call
or
cltd
mov
sbb
xlat
dec
inc
jl
leave
mov
shrl
inc
test
out
mov
lea
cmovp
enter
mov
xchg
mov
cmp
shlb
sbb
std
bnd
cmp
inc
rol
lahf
fisubrl
outsb
mov
xor
in
dec
inc
or
xchg
sub
adc
or
cmp
test
jne
cmp
push
pop
fsubp
pop
pop
dec
cmpsb
sar
sub
inc
out
sbb
loope
mov
and
jp
aaa
mov
repnz
adc
rcrl
dec
loope
dec
and
jnp
xchg
mov
xchg
jg
stos
rcrl
mov
adc
push
push
push
mov
pop
add
in
push
test
cmp
adc
push
inc
push
imul
mov
sub
xchg
jecxz
cmpsl
dec
imul
sub
stc
addl
loope
mull
movsb
stos
push
cmp
lods
dec
mov
adc
jne
pop
pop
sbbb
ja
nop
movsl
mov
stos
dec
xor
adc
into
inc
icebp
lods
dec
pop
in
fiadds
aam
jbe
sbb
mov
cltd
pop
cld
bound
jo
cmp
mov
outsl
rolb
lret
fistps
dec
arpl
mov
cmpsl
or
lret
xor
jae
outsl
hlt
inc
call
jge
test
call
xchg
jmp
pop
gs
in
sub
jne
sub
arpl
jge
jle
jnp
xor
pop
pushf
or
mov
and
outsl
pop
push
fs
repnz
adc
jmp
mov
mov
not
pusha
out
jle
inc
mov
fcmovnb
mov
repnz
pop
cli
jecxz
sbb
icebp
adc
mov
push
mov
lock
faddp
pop
jmp
cmp
push
std
mov
into
outsb
test
pop
movsl
or
jno
insb
dec
push
pop
sti
push
add
mov
push
mov
dec
insb
fwait
mov
or
bound
mov
daa
and
jp
mov
lcall
movsl
sub
jecxz
and
mov
roll
outsb
mov
out
rorl
or
adc
jg
push
inc
mov
movsb
sub
data16
insb
mov
lret
inc
ljmp
adc
adc
jg
sti
pop
pop
repnz
push
or
scas
icebp
jle
int
push
std
insb
hlt
stos
jecxz
xchg
dec
nop
iret
arpl
bound
outsl
and
aas
push
loope
mov
pop
icebp
mov
and
hlt
popf
stos
stos
in
rcll
jmp
insb
and
rcll
cwtl
cmp
aad
stc
jg
sbb
out
adc
push
mov
insb
gs
ss
adc
imul
add
push
and
mov
in
add
pop
scas
clc
sub
sbb
mov
outsb
or
add
ja
and
mov
out
lock
divb
pop
inc
ss
mov
mov
xor
idivb
inc
jmp
scas
lods
int
or
lds
mov
inc
cmp
mov
xor
leave
int3
cmpsb
and
jbe
add
dec
sahf
mov
jno
in
subb
fcoms
cld
mov
pushf
daa
fdivp
in
dec
sar
jl
fisubrs
faddl
fidivrl
das
sub
roll
add
sbb
sarb
enter
sub
stc
jge
dec
jg
xlat
int
xchg
ds
inc
ret
xor
sahf
lock
pop
xchg
add
xchg
push
enter
mov
mov
ds
push
jbe
les
aam
pop
add
in
jg
jmp
ja
rcrb
mov
mov
lcall
js
subb
outsb
push
add
dec
mov
dec
sub
mov
rclb
push
fwait
mov
sarl
dec
imul
sarb
shll
call
cltd
jg
jnp
popf
sahf
daa
sub
sti
cmp
mov
xchg
enter
loope
jl
sti
push
aam
daa
sub
fsubrs
mov
pop
sub
out
aas
jmp
add
jnp
stos
rcrl
lret
out
idiv
push
push
mov
pushl
movl
push
jmp
movl
call
jmp
xor
pushf
xor
call
stc
das
jle
push
cmpsb
int
sub
out
sub
loop
xorl
stos
das
push
outsl
std
sub
inc
xor
jle
xchg
sbb
bound
outsl
push
pop
push
leave
imulb
mov
inc
push
jne
test
pop
mov
in
mov
xor
push
jg
mov
cmp
jmp
subl
shl
mov
fcompl
lds
arpl
adc
or
xchg
sub
cmp
inc
outsl
mov
data16
push
in
xor
mov
stos
cltd
data16
ret
popa
dec
in
or
jecxz
xor
xchg
sub
mov
mull
bound
ret
pop
push
xorb
mov
inc
mov
or
fwait
inc
push
xor
sub
clc
rorb
cli
jp
inc
loope
out
mov
clc
jns
pushf
mov
pop
ficomps
push
push
outsb
mov
pop
fdivrp
pop
push
inc
cmpb
mov
sar
sub
js
inc
and
add
cmp
cmp
faddl
or
into
lds
pop
mov
mov
mov
std
ret
cmp
xor
scas
aam
cld
jl
add
pop
jg
subb
dec
xchg
and
xchg
pop
pop
or
inc
sub
fsts
mov
inc
sub
xchg
subb
fwait
jge
fcmovu
and
test
ffreep
mov
and
push
push
test
push
add
pop
sub
fsubs
sub
fwait
adc
mov
inc
inc
sub
jo
aam
cld
mov
lds
xor
stos
mov
pop
rol
mov
jl
or
out
pusha
push
aam
je
dec
xchg
sbb
mov
sbb
mov
test
dec
cwtl
inc
jg
mov
inc
enter
test
xchg
push
mov
pusha
mov
xor
and
inc
sti
loopne
or
adc
iret
jecxz
pmullw
push
dec
aad
call
scas
mov
xorps
fdivs
lods
lea
test
xor
mov
nop
and
adc
enter
aas
test
cli
cmp
sub
ja
cltd
jne
test
out
dec
icebp
push
jnp
pop
in
into
sbb
mov
inc
push
incb
in
aaa
dec
xchg
inc
fmuls
xor
push
fcomi
movl
ljmp
xchg
fbstp
inc
mov
or
mov
cld
xor
pop
or
or
jnp
inc
rol
mov
out
inc
leave
adc
or
testl
test
or
je
dec
fidivrl
iret
scas
mov
jp
mov
mov
bound
cmp
xor
jmp
mov
fidivrs
dec
adc
push
jecxz
dec
ret
movsl
ret
popa
dec
cmpb
jns
mov
movsl
out
and
sbb
es
sbb
push
les
test
and
loope
insb
jle
pop
inc
xchg
or
xchg
mov
xchg
sbb
push
adc
popf
scas
pop
inc
ret
inc
mov
dec
cli
scas
test
lcall
or
aaa
in
int
je
jbe
push
inc
sar
dec
and
xor
or
into
inc
pushf
aaa
push
sub
outsb
loop
lock
sub
icebp
jmp
mov
roll
int
and
push
hlt
sbb
add
shll
add
xor
test
mov
pop
lahf
xchg
dec
cs
push
sub
jmp
std
cmpsb
mov
xor
jmp
notb
fwait
inc
jne
inc
mov
add
push
add
mov
aas
sub
out
lret
fisubs
jno
adc
lcall
push
outsl
iret
lret
into
add
or
das
and
mov
stc
xlat
sbb
jne
inc
mov
lds
cs
and
dec
inc
mov
pop
mov
cmpsl
inc
jns
jo
ss
mov
rcrl
inc
xor
cltd
je
cmp
jg
pop
xchg
mov
xor
cmp
and
and
mov
xor
mov
std
mov
xchg
insl
enter
mov
or
push
mov
push
mov
lret
pop
jg
insb
inc
loope
and
jge
push
lret
jne
xchg
movsl
movsl
jecxz
sub
jg
xchg
scas
pop
aas
popf
lea
sarl
mov
add
out
sbb
pusha
loop
das
pop
dec
in
mov
shlb
fildll
movsb
rorb
or
lock
scas
aam
cmp
mov
sub
jge
dec
sub
mov
nop
adc
mov
out
pusha
in
test
insb
dec
enter
jno
xchg
inc
xor
mov
push
adc
lds
mov
bound
movsb
sbb
ja
push
pushf
sub
lods
lea
mov
inc
mov
jno
stos
add
mov
xor
lea
out
xchg
push
mov
or
or
scas
and
cmp
xlat
sbb
addb
pop
fildll
inc
sbb
xor
test
aaa
mov
jl
in
das
lret
cmp
or
clc
cmp
jo
insb
daa
lods
and
sahf
test
and
sub
sbb
not
push
repz
jge
int3
enter
xor
loope
hlt
inc
add
sub
imul
sub
sub
cmp
scas
pushf
mov
stos
sbb
xchg
mov
lods
adc
lret
jae
or
push
and
or
adc
imulb
movsb
les
adc
sti
mov
int3
dec
shlb
adc
stos
rorb
icebp
mov
xchg
jp
into
outsb
and
fimull
cmpsl
bound
xchg
xchg
push
into
push
insb
adc
add
stos
int
sub
clc
loopne
adc
dec
cld
cmp
inc
sarb
cmp
add
rcl
push
cmp
adc
xor
insl
test
xor
ljmp
mov
and
jg
pop
leave
cmp
imul
cmpl
or
mov
fadd
mov
sbb
xchg
sub
dec
xchg
rclb
sub
xlat
mul
push
enter
adc
sub
fwait
jnp
fisttpl
sbb
push
dec
mov
push
scas
sub
mov
enter
jb
psrlq
push
insl
push
iret
les
push
jge
loope
inc
jno
clc
jne
hlt
test
enter
insb
sbb
add
js
div
inc
into
sbb
pusha
out
rorl
dec
mov
int
lcall
cmp
add
movsl
jmp
loopne
dec
insb
loop
or
repnz
cmpsb
cmc
or
push
sbb
repnz
mov
or
dec
xchg
and
jbe
mov
movsl
mov
dec
sub
inc
jmp
ds
or
jns
dec
add
cltd
pop
int3
cmpsl
jp
cmp
jno
mov
pop
fisubs
cltd
mov
dec
sub
adc
cmp
push
pop
les
aad
xchg
or
xchg
push
lods
jge
jle
call
push
adc
shl
daa
adc
cwtl
aas
dec
sub
push
cmpsl
test
fcoml
mov
jge
int
push
pop
movsl
and
xchg
loopne
arpl
lea
popf
stos
daa
and
mov
aas
or
push
inc
test
mov
lods
inc
push
add
adc
jno
lea
xchg
xchg
pop
mov
xchg
xor
inc
popl
pop
fstps
xor
mov
call
add
push
ficoms
inc
add
outsl
fisttpl
mov
lcall
xor
outsl
adc
cmp
mov
inc
rol
enter
sti
into
mov
mov
adc
aas
loopne
xlat
fcmovnbe
stos
add
and
pusha
mov
cmp
push
cmpsb
movntq
ret
scas
jnp
out
cmpsl
movsb
mov
test
lds
popf
enter
lds
orb
fiaddl
and
cmpb
dec
cwtl
and
xchg
jne
jmp
loopne
push
ret
mov
add
imul
out
fwait
mov
outsl
pop
subl
test
pop
xchg
jne
rorb
pop
pop
add
fdivr
dec
push
arpl
xchg
mov
ja
stos
xor
out
or
or
fs
idiv
inc
rorl
int3
aas
in
pop
lcall
fdivl
rol
mov
lods
xorb
fwait
addr16
cmp
dec
rclb
cmpsb
xor
aaa
insb
mov
cmp
call
jg
sub
jns
movsb
imul
iret
dec
int3
push
mov
mov
lods
loop
cmp
push
add
push
pop
repz
mov
jo
cltd
insb
mov
jbe
mov
fbld
pusha
xor
push
jnp
add
fisttpl
lret
fwait
jle
out
ror
popa
dec
aam
fidivrl
jne
call
inc
lea
lret
leave
mov
mov
popa
out
aaa
testb
jmp
in
jg
sbb
and
xchg
xor
addr16
and
cmp
cmc
stos
pop
addr16
ret
xor
adcb
lea
popa
pop
cmpb
adc
mov
pop
fwait
or
je
sub
inc
outsb
cmp
and
mov
test
xchg
add
xchg
add
jno
xchg
inc
mov
pop
push
jle
in
inc
movsb
mov
adc
rorl
hlt
and
mov
sahf
outsb
inc
dec
inc
popa
dec
shll
subl
jns
fsub
rclb
jno
addr16
fists
or
stc
cmp
int3
sbb
les
test
mov
add
stos
rolb
aam
dec
sub
clc
xor
lcall
test
jns
mov
xor
clc
cltd
mov
xchg
out
pusha
cli
cmp
lahf
and
movsb
sub
insl
je
mov
mov
ds
sbb
lret
repz
mov
shrb
mov
jb
pop
jmp
push
insb
or
xorb
sbb
dec
mov
cltd
adc
lods
mov
test
or
jecxz
sub
adc
and
and
pop
jae
cwtl
pop
fdivs
pop
cwtl
pop
fscale
fdiv
shr
in
data16
mov
mov
cmpsl
loope
iret
aaa
mov
push
mov
pushf
stc
jae
rcl
jae
add
arpl
or
out
movsl
repnz
cmpsb
mov
cld
rcll
cmp
jns
lea
js
int3
mov
pop
les
in
inc
in
out
sbb
int
in
lock
xchg
iret
mov
mov
idivb
pop
xchg
add
add
sub
insb
and
stc
and
xchg
sbb
mov
dec
into
scas
movsl
xlat
loope
inc
in
outsl
jne
or
aaa
fisttps
or
mov
xchg
fnstcw
cs
scas
aam
and
sbb
mov
scas
jp
cwtl
inc
mov
cs
test
and
push
push
xchg
pop
sbb
rcll
cmp
xor
xchg
push
out
ficoml
inc
insl
adc
push
pusha
loopne
mov
lds
jbe
cs
mov
aas
inc
inc
mov
aas
ret
push
push
outsb
lret
movsb
fsubr
int3
test
cmp
enter
mov
or
mov
hlt
inc
aam
enter
test
sarb
dec
or
insl
mov
xchg
inc
gs
dec
es
clc
scas
fs
adc
jl
push
pop
dec
cmp
loope
xor
push
inc
and
pop
pop
dec
push
jmp
dec
int3
fisttpll
xlat
ficompl
push
xchg
and
out
pop
adc
les
push
fcoml
dec
xchg
inc
movsb
inc
fnsave
stos
xchg
ja
ret
sti
stc
inc
neg
fdiv
aas
cmp
mov
push
xor
sarl
mov
fisubrs
enter
lcall
lret
leave
into
jl
mov
cmpsl
addr16
stc
sbb
mov
and
cmp
decb
out
mov
add
adc
in
insb
add
adc
mov
dec
enter
cmp
push
fs
pop
fldenv
lea
xor
jmp
add
dec
scas
outsb
mov
iret
daa
push
cli
pop
xchg
je
lods
fs
push
fisubrs
or
cmp
loopne
mov
lods
aaa
sub
adc
sub
sub
lods
es
push
cld
outsl
push
ja
test
push
pop
daa
xchg
inc
int3
xchg
popl
ret
lahf
cmp
cs
jmp
ret
push
ss
divb
pushf
dec
add
add
pop
sbb
xcrypt-cfb
cmpsl
pusha
adcl
stos
xlat
shrb
rcrb
sub
stc
xchg
cmp
rcr
adc
cwtl
jg
mov
mov
pop
jb
adc
out
cltd
cmc
and
cmp
adc
push
cltd
jns
ror
sbb
popa
jo
int3
sub
cmpsl
sbb
mov
ljmp
fsubr
sbb
fnstcw
lahf
cmp
lret
dec
cmp
add
lods
mov
add
jp
jbe
jp
xor
arpl
dec
cmp
shr
or
xchg
mov
cwtl
sub
out
sub
dec
push
cmp
cmp
jbe
mov
and
enter
test
and
adc
out
shll
adc
imul
xchg
leave
xor
xchg
sbb
and
aaa
adc
sbb
cmp
ret
lods
mov
inc
mov
cmp
jecxz
and
stos
sub
mov
and
cmp
outsl
pop
mov
out
in
mov
or
jecxz
pop
ja
clc
fsts
push
mov
push
add
aas
dec
sub
popa
jecxz
fistl
or
sub
test
cwtl
lret
cmp
stos
in
cmp
or
ljmp
jbe
or
pop
cmp
loop
mov
ljmp
std
rol
xor
popf
mov
shl
bound
pop
fnstenv
mov
lret
xor
mov
test
shr
mov
mov
mov
lahf
sti
stos
cli
out
pop
or
pop
daa
dec
leave
and
cmp
cli
hlt
sbb
add
std
mov
rcll
adc
mov
and
mov
cmc
pushf
sub
lods
mov
out
mov
cmpsb
xor
lret
and
lea
mov
gs
data16
pop
stos
lock
lcall
pop
mov
mov
hlt
fbld
stos
mov
pop
fadd
jb
push
cmp
js
xchg
std
mov
push
cli
jb
sbb
dec
lcall
mov
dec
int
pop
subb
cmpsl
sbb
fisubl
fs
cmpsl
out
in
ljmp
mov
fwait
sbb
cmc
movsb
fcompl
out
mov
jae
add
xor
pop
adc
sbb
daa
sub
push
loope,pt
lret
push
cwtl
pop
dec
sub
js
ficomps
mov
pop
jecxz
xchg
mov
push
push
or
fwait
jne
repnz
popa
pop
jnp
jle
pop
add
lods
pop
out
in
lods
xor
loope
push
jb
xlat
cmp
stos
dec
dec
jae
mov
sub
jb
ja
adc
ret
das
outsl
nop
outsl
call
into
js
jnp
pushf
or
fidivrs
jbe
ret
sbb
divb
mov
inc
mov
adc
mov
pop
icebp
leave
stc
push
pop
data16
lods
rcrl
cmp
mov
mov
or
jge
jp
pop
cmp
int3
xchg
dec
push
test
jp
stc
repnz
sub
mov
xor
daa
stos
jno
arpl
inc
inc
outsb
and
cld
mov
mov
repz
pop
xor
cmp
cmpsl
push
jae
sbb
addr16
adc
outsb
dec
sbb
mov
push
es
int3
gs
and
stc
stos
jmp
and
daa
outsl
jno
sbb
mov
fimull
ret
jo
std
push
xor
push
xor
cmp
xorl
pusha
clc
xor
cld
pushl
popf
movb
pushl
ret
loopne
movsb
xor
lret
mov
and
sbb
into
sbb
mov
or
xchg
movsl
nop
scas
adc
ljmp
and
scas
xor
mov
or
test
and
imul
push
sti
cmpl
fs
fnsave
pop
fsubrs
xchg
sub
ja
sub
pop
or
sbb
jl
shr
repnz
mov
cs
pop
xor
rolb
push
int3
push
jo
lock
adc
dec
inc
aas
test
movsl
pop
lcall
lret
outsb
add
repz
mov
sahf
or
xor
gs
in
lods
mov
mov
lahf
adcl
fucomi
mov
cmp
rcrl
xchg
test
mov
mov
sbb
or
stc
ds
out
sti
sub
push
cmpsl
insb
dec
mov
dec
jp
pushf
loopne
lcall
aas
into
pop
inc
xor
lea
int
dec
std
mov
cli
inc
fsubs
inc
jecxz
mov
fildl
repnz
lock
push
adc
mov
inc
mov
jae
int3
bound
cmc
mov
jmp
sahf
idivb
aam
push
push
push
pusha
pusha
mov
movl
pushf
call
xor
bt
xor
bt
xor
clc
xor
cmc
xor
test
pushl
popf
push
movb
pushl
ret
bt
xorl
call
call
xor
mov
xor
pushf
call
pusha
push
movl
pushl
movb
movl
push
pusha
lea
jmp
call
pushl
popf
pushf
push
pushl
ret
call
xor
jmp
pusha
dec
mov
imul
stos
call
call
push
inc
imul
xchg
sub
stos
pushl
outsb
adc
lods
mov
or
and
mov
push
jnp
xchg
nop
es
inc
out
mov
je
mov
loopne
loope
das
xor
ret
inc
out
mov
mov
pop
pop
lock
scas
inc
jae
mul
pop
leave
imull
ds
test
cmp
mov
push
sub
insl
sahf
movsl
pop
sbb
adc
pop
adc
fisubl
scas
jnp
pop
out
mov
daa
fxch
test
xor
mov
call
pushf
pushf
pushf
popl
mov
xor
clc
xor
bt
xor
cmc
xor
stc
xor
cmp
xor
test
xorl
pusha
call
add
frstor
inc
mov
cmp
sahf
mov
mov
mov
pushf
jo
inc
lret
adc
pop
pushl
pop
cmpsb
lahf
inc
stos
inc
pop
scas
adcb
cwtl
inc
popf
push
loopne
push
mov
pop
add
push
std
jmp
mov
pop
jg
hlt
or
mov
mov
out
or
lcall
adcl
popl
cmc
call
in
inc
xor
shlb
xor
xchg
jo
inc
xchg
in
or
xor
cmpsb
xor
mov
popl
mov
xchg
mov
dec
test
fistpl
mov
xchg
pop
popf
mov
lahf
inc
xor
or
rcr
push
or
add
mov
repz
call
addb
push
sub
push
dec
shl
repz
repnz
push
pop
roll
aas
xor
stos
xor
add
in
mov
inc
or
pop
sub
scas
dec
out
jno
xor
mov
cmc
je
xor
xor
cli
and
faddl
sbb
cmpsb
aas
out
stos
jge
jl
xchg
push
sub
pop
adc
movsl
sarb
push
test
leave
cmp
adc
sbb
je
jmp
sbb
mov
adc
xchg
outsb
iret
pusha
repz
xchg
adc
shrl
std
daa
fisubrl
fwait
shlb
or
shrb
insl
cmp
pop
lods
jge
fsubrl
pop
push
cwtl
jmp
outsb
mov
pop
arpl
push
jns
mov
hlt
imul
inc
in
subb
jnp
jmp
pop
jecxz
and
jg
js
add
xor
jg
test
test
add
in
mov
pushf
xor
ret
out
fimull
pop
xchg
xchg
or
es
push
roll
mov
mov
and
rcrb
ret
mov
inc
out
add
fmuls
ret
loop
mov
sub
push
push
or
adc
int
adc
data16
adc
pop
sbb
sbb
loop
lock
hlt
movsb
in
adc
add
jmp
scas
imulb
lods
cs
sbb
pop
gs
call
push
lea
dec
int
mov
pop
or
stos
ds
decb
lret
jle
xor
js
sahf
sub
mov
imul
or
fs
dec
incb
scas
pusha
adc
daa
mov
and
xor
cmp
jmp
inc
and
jne
shll
mov
lret
rclb
lock
scas
jb
shlb
mov
xor
loope
dec
mov
cmp
ss
pop
lea
mov
cltd
les
mov
mov
popf
cltd
push
mov
cmp
adc
dec
ss
cmp
and
or
jecxz
xchg
aad
shr
in
bound
and
or
insb
push
loop
xor
mov
mov
pop
loopne
dec
stos
xor
stos
stos
adc
pop
outsl
imul
mov
push
cvtps2pi
loop
mov
xor
in
je
pusha
pop
insb
dec
das
loop
inc
daa
mov
push
stc
mov
inc
xor
nop
imul
movsb
inc
push
in
aas
lods
cwtl
xchg
mov
popa
xchg
sub
fs
and
cmp
movsl
imul
sahf
sbb
lock
stos
jmp
jno
push
inc
sub
push
xchg
pop
push
fdivrs
pop
arpl
and
mov
adc
lret
fcoms
pop
mov
xchg
mov
adc
and
loopne
in
xlat
cmpsl
mov
mov
mov
sub
xor
rcll
popa
jmp
push
dec
in
incb
out
fucomip
mov
int
fiadds
cmp
cld
test
xchg
mov
mov
stc
jb
adc
mov
pop
imul
test
xor
ja
mov
stos
push
addr16
lods
shrl
sbb
jnp
call
mov
push
xchg
inc
dec
stos
mov
leave
mov
xchg
decl
or
mov
rcl
cmpsb
push
lock
jecxz
jp
adc
or
mov
out
fwait
in
call
imul
fsubl
xor
adc
fsubrs
imull
loope
inc
into
pop
in
rclb
adc
mov
sub
lods
sbb
mov
cmp
insl
inc
xchg
lret
sti
xchg
add
xor
ja
xor
lea
xor
mov
add
or
xchg
jbe,pn
jb
insl
or
aad
jmp
into
out
shlb
push
psadbw
clc
inc
push
or
pushf
lcall
lock
sbb
aam
rcll
arpl
movsl
adc
adc
and
or
sub
mov
pop
inc
and
aam
sbb
fsubs
cmp
imul
loope
lods
inc
decl
fildl
std
sub
push
roll
adc
push
int
push
push
insb
shll
pop
cmp
shlb
lret
hlt
mov
mov
mov
rol
cmp
daa
jo
daa
das
popa
rcrb
and
mov
mov
xlat
jmp
cs
insb
cwtl
sbb
pop
bound
adc
les
push
adc
loopne
mov
fisubs
sub
mov
ss
mov
xchg
jb
mov
pop
stc
xchg
add
jecxz
iret
xor
test
cmp
int
popf
xchg
ret
add
imul
mov
sti
pop
int3
mov
in
fcoml
jae
in
sbb
mov
dec
xchg
push
out
movsb
lcall
stos
popf
mov
push
push
push
das
stos
jecxz
push
mov
daa
inc
stc
cltd
and
es
shll
ret
ja,pt
add
sub
rcl
test
popf
in
in
popl
cmp
mov
int
pop
cltd
and
lea
test
jno
insb
jne
ss
jecxz
in
imul
lods
mov
push
xor
cmpsl
add
push
pushf
mov
pop
adc
sub
sub
int3
imul
mov
mov
repz
ret
test
sub
xchg
das
loopne
shll
jg
aas
xor
stc
xor
add
das
data16
es
jbe
jg
jbe
in
and
subl
cmp
shll
add
mov
adc
or
sahf
cmp
ret
dec
mov
sub
bound
scas
les
and
mov
inc
ficoml
xchg
push
adc
cwtl
jns
jecxz
movsb
faddl
add
out
pop
stos
and
clc
xor
imul
int3
dec
push
jo
cmpsl
pop
cmp
mov
mov
fcmovb
inc
cwtl
sub
sbbl
or
iret
add
sub
je
iret
in
xchg
jl
stos
incl
add
mov
mov
je
and
xchg
mov
pusha
mov
push
push
mov
scas
push
jae
xor
int
jb
push
ss
xchg
shlb
push
cmpsb
sbb
xchg
test
or
test
into
push
enter
popl
call
pop
and
out
leave
js
sub
jnp
test
nop
cmp
pusha
dec
popa
aam
push
jns
fmulp
fidivl
mov
mov
dec
fsubrl
call
mov
sti
add
fisubl
mov
xchg
push
test
sub
mov
jmp
mov
mov
lcall
mov
cmp
rorl
test
jbe
mov
jbe
shrl
and
fldl
mov
fisubl
mov
les
inc
fidivl
mov
xchg
dec
inc
mov
loope
cmp
aad
and
mov
loopne
jb
cmc
repz
cli
or
out
idivl
dec
loop
loopne
insb
add
cmp
scas
mov
mov
fidivl
mov
leave
jno
sarb
insl
stos
xor
pop
fsts
mov
adc
bound
dec
and
mov
test
mov
ds
mov
cs
fistps
lds
jbe
arpl
xlat
and
loope
jae
cmc
mov
mov
adcb
mov
sarb
mov
pop
aas
xchg
test
xor
push
inc
and
adc
mov
movsb
xchg
or
lock
arpl
movsl
xchg
or
in
mov
and
gs
ficompl
mov
inc
hlt
in
adcl
mov
lea
imul
cltd
cwtl
push
mov
xchg
inc
rcrl
sub
jg
cmp
mov
mov
je
mov
cmpsb
mov
fwait
mov
aaa
jne
cli
and
inc
dec
cmp
sub
loopne
or
aad
and
push
mov
xchg
ja
aam
cli
sbb
int
cli
stc
shlb
sbb
mov
nop
pop
sahf
mov
mov
das
cmp
movsb
dec
xchg
enter
shll
mov
mov
test
sbb
xor
jae
jo
out
cmp
mov
sub
mov
das
in
and
or
add
outsl
adc
sbb
cltd
pop
lcall
test
inc
je
mov
out
rcll
or
mov
punpcklwd
lea
jno
xchg
roll
out
es
fistpll
dec
sar
mov
push
ss
lock
dec
roll
lea
sub
sbb
jl
sub
cmp
or
in
mov
lahf
rol
push
add
stc
mov
sbb
gs
jle
cmp
bound
jge
adc
sub
xchg
and
mov
cmp
popa
mov
cmc
push
outsb
mov
pop
dec
mov
mov
in
push
cmc
imul
sbb
pop
and
inc
repnz
xchg
sarl
daa
movsl
rcr
cmp
pusha
int3
cli
inc
pop
test
mov
loope
mov
or
jle
mov
jne
push
fistpll
or
mov
enter
repnz
lock
mov
pop
dec
cmp
pusha
into
sub
mov
push
aam
ds
addl
add
ljmp
inc
sahf
sub
bound
mov
aam
shrb
push
jp
mov
repnz
pop
add
call
mov
in
jb
mov
xor
and
sbb
xchg
fsts
add
adc
mov
enter
mov
xchg
xor
enter
and
aad
fsincos
jmp
and
jno
shl
adc
mov
mov
lods
cmpsb
cs
add
push
or
jae
adc
test
ss
adc
xchg
and
jnp
lods
loope
jb
dec
addl
push
notl
loop
sbb
sarl
popa
aas
js
or
lret
add
ss
pop
push
lock
mov
movsb
cmpsl
andb
in
arpl
stos
out
shlb
jl
aas
test
rcrl
sub
jnp
imul
mov
fs
in
test
hlt
pushf
jns
pusha
push
scas
sbb
inc
inc
sbb
or
and
mov
mov
mov
and
sbb
mov
mov
xor
push
and
mov
push
add
pop
out
xor
mov
inc
int
xor
dec
lock
dec
hlt
ljmp
sub
sub
and
jne
dec
mov
xchg
rolb
out
sbb
adc
jg
icebp
adc
cld
hlt
ljmp
aas
mov
int
incb
repz
sub
arpl
cmp
insb
fists
fs
gs
sub
shll
int3
mov
adc
xchg
rcr
and
js
or
sbb
gs
sub
xor
call
push
mov
inc
lret
push
scas
cs
dec
jmp
and
cmp
ret
dec
mov
xor
test
add
mulb
std
int
adc
test
jb
push
mov
sbb
push
ja
mov
add
dec
push
and
mov
in
inc
push
push
repnz
repnz
mov
in
neg
pop
cltd
js
outsl
mov
push
mov
mov
test
iret
adc
and
jb
out
jns
mov
notl
lds
addb
pusha
xchg
movb
scas
mov
push
inc
sbb
mov
dec
or
jbe
xchg
and
nop
mov
lock
cwtl
sub
or
xor
sub
je
mov
dec
add
jnp
jl
dec
jg
jns
fists
sti
mov
or
fwait
xor
cld
cmpl
mov
jne
aaa
enter
push
mov
pop
dec
cld
into
add
push
dec
adc
ficomps
inc
test
shl
rcrb
mov
or
fmuls
out
insl
pop
sbb
add
push
mov
inc
insl
fwait
xchg
lock
dec
inc
xor
mov
leave
pop
inc
xor
daa
xor
movsl
dec
mov
mov
adc
aaa
mov
lock
xchg
popl
std
cmpsb
lahf
les
je
or
scas
and
stos
push
insb
push
rcrb
mov
xchg
dec
cmp
add
mov
mov
lock
insl
push
outsl
jecxz
mov
inc
test
cld
rcrb
int3
add
hlt
or
or
into
pop
add
out
aam
add
adc
popf
in
push
lret
orb
shll
push
loopne
mov
or
dec
nop
jo
int
xor
inc
adcl
pop
cmc
push
scas
loopne
rclb
dec
xchg
sar
std
inc
pop
leave
iret
xchg
or
mov
xchg
push
jae
daa
sarb
fisubl
aaa
adc
and
into
inc
sbb
mov
enter
sbb
sbb
fucomip
pop
dec
lea
out
push
xlat
dec
inc
jmp
sete
pop
adcl
adc
inc
mov
add
loop
inc
call
fistpll
jmp
jmp
call
jmp
test
gs
pop
sbb
jp
push
popf
jp
jo
or
inc
mov
or
inc
xor
jnp
aad
xchg
std
mov
add
jecxz
lret
outsb
lea
je
aas
rclb
sub
dec
sbb
sub
mov
ror
add
and
mov
movsl
clc
sub
xchg
repz
movsb
xchg
bound
pushf
mov
ret
rcrl
dec
outsl
push
shll
pop
std
mov
pop
inc
arpl
push
fidivl
fiadds
mov
push
in
mov
mov
outsb
xchg
popa
out
loopne
xchg
adc
sbb
out
sarb
or
push
mov
imul
jne
dec
cwtl
push
je
cltd
push
call
push
movl
push
pushf
pushf
push
movl
pusha
mov
lea
jmp
pushl
popf
pushf
pushl
ret
call
pushl
popf
mov
push
pushl
ret
jmp
pushf
movl
pushf
popl
cmp
cmc
xor
bt
jmp
xor
out
insb
dec
cld
dec
popf
out
jne
and
adc
lret
jnp
cmpsb
mov
inc
in
jle
leave
inc
pop
push
dec
outsl
push
xchg
sbb
ja
sbb
aas
lds
std
aam
pop
dec
mov
cmp
sbb
mov
mov
loop
loop
jmp
sti
test
loop
sbbb
or
pop
mov
sub
push
loop
cwtl
shl
insl
push
and
xchg
pop
dec
pop
cmp
mov
push
addr16
mov
inc
jb
and
data16
mov
xor
lret
sub
rcll
mov
subb
adc
stc
das
sbb
inc
iret
pop
jbe
push
sbb
test
cli
stos
lea
repz
es
adc
lock
sbb
stc
ja
jge
out
mov
repz
xor
adc
scas
jns
sbb
pushf
insb
or
cmp
movl
inc
cli
inc
inc
and
iret
bound
mov
lea
je
push
pushf
pushf
lea
jmp
xor
bt
xor
pusha
bt
xor
stc
call
xor
cmc
xor
clc
xor
cmc
cmp
pushl
popf
push
pushl
ret
push
pusha
lea
jmp
push
mov
movl
pushf
push
push
movl
movb
movb
mov
lea
jmp
jae
pusha
pushf
movl
pusha
movl
pushf
pushf
movl
lea
jmp
xchg
mov
sub
or
ds
push
aam
push
xlat
mov
fs
lret
rcl
mov
pop
dec
vcvtss2si
mov
jnp
mov
sub
jp
dec
xchg
xor
push
test
popf
mov
popf
ss
add
mov
dec
mov
repnz
mov
adc
xor
or
sbb
hlt
xchg
pop
ljmp
pop
cmc
fs
test
lock
shl
sub
and
sub
jbe
fadds
sub
push
dec
cmovne
inc
adc
mov
sbb
sub
dec
mov
sub
aam
inc
xor
stc
pop
xchg
pusha
in
mov
hlt
push
out
mov
xchg
pop
outsb
add
test
mov
mov
test
jp
fdivrs
mov
fimull
fcmovu
jne
stos
fisubrs
inc
mov
ret
cmp
cwtl
push
imul
int3
jle
orb
cmpsb
cmp
mov
mov
pop
mov
mov
test
dec
fists
in
jecxz
mov
inc
sahf
call
pmulhw
inc
cmp
pushw
adc
xchg
sub
hlt
lock
mov
movsl
sbb
or
lds
je
inc
ffree
imul
push
popf
push
ficomps
sbb
xchg
jo
dec
mov
jmp
push
adc
out
cli
jb
mov
stc
movsl
and
hlt
in
mov
adc
lcall
in
bound
int
cltd
cmpsl
ja
mov
and
imul
lcall
jmp
inc
call
stc
fnstsw
fdivp
daa
jbe
int3
pop
notl
dec
sub
stos
inc
mov
notl
mov
push
sub
and
jmp
push
cmp
inc
mov
rcrl
inc
test
int3
shrl
cwtl
pop
cmp
and
js
inc
pusha
fcoml
xor
or
push
pop
inc
testb
push
mov
cli
pop
cmp
cld
out
jecxz
sub
sti
js
pop
dec
repz
test
into
clc
dec
fidivrs
xor
push
or
jle
push
ds
movb
xchg
xor
divb
cli
int
sbb
movsb
mov
jne
add
pop
cmp
div
mov
mov
lret
repz
sahf
jmp
cmpsb
mov
mov
test
idivl
and
push
je
loop
push
fcoml
call
mov
mov
mov
xor
and
inc
test
cmp
out
jl
or
and
out
push
push
cltd
pop
repnz
sub
and
pop
and
xor
mov
push
pusha
or
pop
add
aad
mov
mov
xor
lods
cmp
pop
or
test
xor
roll
jns
adcl
add
xchg
sbb
inc
loope
xorl
ffree
inc
jmp
enter
les
leave
xchg
sbb
insb
popa
in
cs
repz
push
clc
jl
or
xchg
sub
xchg
dec
push
dec
xchg
mov
xor
mov
mov
loope
jg
int3
sbb
pop
je
push
add
cmp
sbb
test
sahf
adc
int
pop
dec
sahf
ds
xchg
repz
xchg
pusha
sub
mov
cmpsl
xchg
or
rorl
mov
jo
fildll
idivb
faddl
sti
pushf
movl
push
pusha
push
pushf
movl
movb
mov
mov
mov
lea
jmp
fmuls
pop
mov
dec
mov
and
mov
in
bound
jle
dec
pop
dec
xchg
add
lods
jge
dec
or
or
mov
mov
push
pop
bnd
push
adc
mov
leave
outsb
arpl
xchg
rolb
dec
pop
ret
pushl
mov
jns
lods
lods
add
lahf
xor
ret
xor
jb
out
inc
or
xor
mov
or
insl
xchg
lods
das
sub
fldcw
shll
add
or
mov
stc
out
js
adc
xchg
pop
fsub
sbb
inc
fdivr
and
stos
inc
jo
std
test
dec
das
lods
dec
leave
pop
sbb
les
sub
pop
cwtl
dec
dec
outsb
push
mov
xchg
push
or
jle
idiv
test
lods
xor
faddp
and
es
push
xchg
pushf
mov
pop
cmp
sub
lcall
xchg
or
dec
add
sar
add
push
loop
xor
and
jns
int3
mov
inc
sbb
mov
adc
sbb
inc
xchg
leave
scas
fdivr
loop
adc
popw
add
dec
enter
lret
pop
add
or
or
stos
mul
push
outsl
in
lret
jno
cmc
add
mov
mov
iret
and
mov
mov
ret
andl
mov
cmp
sti
scas
xor
out
cmpsl
in
push
js
lds
adc
loope
std
inc
fisubl
gs
into
ds
into
icebp
mov
pop
mov
std
test
push
aas
popa
roll
clc
je
xchg
jae
or
sub
inc
cmp
xchg
mov
das
fdecstp
add
aam
xlat
mov
sarl
sub
pop
mov
jns
ljmp
into
jge
xlat
hlt
xchg
jl
or
test
imul
mov
aam
push
insb
push
fstl
mov
dec
mov
jp
cmpsl
repnz
inc
cmp
fyl2x
imul
in
enter
mov
repz
sub
xorb
test
dec
xlat
and
cltd
stc
mov
bound
repnz
pop
xchg
add
mov
mov
std
jns
cmp
mov
mov
icebp
repnz
xchg
enter
mov
int
inc
xchg
push
subb
jno
out
rol
scas
decl
adc
sub
push
and
rolb
pop
sbb
js
inc
iret
xchg
fs
js,pn
dec
outsl
es
inc
jp
rolb
imul
adc
pop
out
sbb
xor
xchg
cmp
sub
in
cmpsl
jbe
shl
jae
lods
sub
or
stos
adc
mov
jns
sbb
stc
jecxz
mov
lcall
cltd
sub
int3
sti
fbld
inc
hlt
push
sti
jle
in
push
insb
lcall
mov
mov
fisubrl
sbb
ja
ss
movsl
cmp
insl
jnp
movsl
mov
xor
mov
pop
mov
es
stos
or
cmpsl
sub
outsl
js
mov
test
int3
leave
cld
jle
push
out
mov
jmp
je
faddl
popa
repnz
push
push
mov
sbb
xchg
adc
hlt
mov
fs
dec
out
decb
inc
lcall
ret
pop
aaa
adc
jecxz
or
lds
mov
movq
xchg
mov
lret
popf
outsl
inc
or
out
push
and
clc
stc
xor
clc
xor
cmc
pusha
xor
stc
xor
clc
pushl
popf
pushl
pushl
ret
pushf
movl
pusha
pushf
movl
push
pushf
pushf
push
lea
jmp
pushl
pushf
lea
jl
push
pusha
pusha
pushf
pushl
lea
jmp
xor
bt
xor
cmc
clc
xor
call
call
insb
xor
dec
jnp
dec
or
divl
out
sahf
push
dec
ja
lods
cmp
pop
subb
mov
mov
ss
sub
mov
xchg
xor
popa
xchg
in
pop
lock
push
cmp
adc
das
leave
jae
jo
sahf
fcomp
mov
mov
int
pop
mov
xchg
push
adc
jmp
mov
es
cmpsb
dec
or
pop
inc
mov
xchg
push
pop
out
jl
and
mov
mov
mov
cmpsb
stos
fisubs
sub
cli
in
out
lret
jp
cmp
cmpsb
dec
or
pop
inc
out
nop
xchg
insb
int
add
xchg
das
mov
test
test
dec
pop
mov
sbb
and
rcll
sahf
or
jg
scas
pushf
sub
push
adc
ret
fistps
dec
or
enter
inc
lea
in
dec
pop
das
inc
xor
mov
fcoms
aad
or
out
push
aad
jno
xchg
xchg
fistps
xchg
in
test
std
fisubrl
and
rolb
push
sub
dec
cmc
and
mov
xchg
push
aad
inc
les
mov
push
fstpt
push
mov
push
mov
adc
cmp
sub
sub
hlt
sbb
fs
mov
test
shrb
inc
cltd
sub
int
subl
cmp
dec
icebp
aas
fsubrl
dec
fisttps
lds
cmp
add
out
sub
stc
mov
loop
and
cltd
pop
sbb
les
aam
ja
and
jecxz
mov
xor
mov
pop
inc
int
shrb
out
xchg
cwtl
sbb
cmp
mov
out
sub
in
loopne
cmp
add
test
int3
in
je
cmp
cmp
add
jl
mov
aaa
or
pop
rorl
jnp
out
push
dec
xor
mov
fisubs
push
es
adc
sub
out
fxch
lds
orb
jecxz
xlat
add
xor
pop
fwait
subb
jo
dec
xor
adc
cld
push
push
add
cli
pop
inc
fwait
in
pop
xor
sub
jo
aas
shrb
pop
sub
scas
pusha
jo
scas
mov
mov
and
test
fs
sbb
mov
inc
in
lock
push
xchg
les
gs
repz
hlt
jbe
mov
add
fdivp
insl
xchg
test
mov
popa
dec
xor
sub
xchg
pop
and
and
pop
push
mov
outsb
addl
xor
mov
outsb
es
ss
push
pop
push
idivl
push
jae
out
pop
jmp
mov
mov
cltd
es
jbe
mov
inc
xchg
enter
das
or
sbb
mov
push
rcr
rorl
popf
daa
mov
cmpsb
add
std
mov
dec
mov
push
aas
and
lret
cmp
and
or
in
enter
repnz
sub
inc
es
clc
out
add
xchg
push
inc
add
sbb
sbb
sbb
dec
lret
stos
jo
pop
leave
mov
test
push
aam
pop
in
in
adcl
rclb
push
mov
outsl
cld
movsb
ss
push
lret
adc
inc
mov
jo
sarl
and
aam
clc
in
test
inc
ss
shlb
flds
pop
xchg
add
add
lcall
dec
mov
in
int
pop
idivb
xchg
sub
mov
shrb
daa
mov
es
int3
jno
mov
push
mov
icebp
push
jnp
dec
adc
mov
daa
outsb
int3
sahf
insl
jo
outsb
jmp
pop
xorl
lea
lahf
sub
push
adc
xor
in
test
jne
lds
jecxz
lret
repnz
sub
sbb
push
lret
sarl
outsl
dec
cs
mov
mov
out
loopne
mov
push
arpl
cmc
jnp
xchg
push
jmp
scas
mov
adc
xchg
pop
loopne
mov
stos
inc
aaa
clc
lock
mov
adc
jmp
repnz
push
fiadds
mov
das
cmp
and
arpl
fwait
mov
mov
loope
mov
pop
or
xchg
lret
cli
cmpsl
jg
xor
ja
rolb
jecxz
insl
movsl
sti
es
testb
push
mov
iret
fistl
lahf
push
mov
repnz
ss
lds
mov
test
xchg
jnp
sahf
mov
jg
mov
pop
pop
adc
mov
inc
dec
add
rorl
xor
adc
push
es
adc
push
mov
jae
leave
scas
das
test
in
push
icebp
rcl
sahf
icebp
ss
push
cld
xlat
clc
or
dec
roll
outsb
shrl
pop
cmp
xchg
sub
lcall
mov
dec
cltd
jge
pop
inc
out
xor
add
jl
inc
cmpsl
sub
bound
pop
push
data16
mov
in
shrb
xchg
out
mov
cld
loop
xor
subb
cmp
aam
testb
and
aas
cmpsl
dec
iret
push
fsub
xor
loopne
loopne
out
repnz
jge
add
mov
fcomps
add
hlt
add
mov
mov
insl
cmc
fs
ror
mov
imul
cmp
xchg
shll
xchg
orl
rcll
stos
fisubs
or
push
xchg
fldenv
loop
je
push
pop
jg
outsl
cmp
nop
jnp
mov
shlb
jle
dec
ret
mov
lret
es
pushl
into
arpl
sub
ret
mov
push
push
clc
xchg
icebp
add
mov
fsub
lds
mov
in
sub
lds
jl
sbb
addr16
sbb
and
rol
cld
xor
xchg
xchg
stos
scas
and
push
imul
lods
test
loop
aad
cmpsb
xchg
fcoml
push
mov
test
lret
mov
mov
inc
shl
cli
out
in
fs
jae
jnp
out
add
push
int
inc
rorb
lea
mov
lcall
aam
jnp
add
sub
aas
into
and
aaa
push
and
sarb
adc
bound
pop
xorl
repnz
jno
xlat
rcr
and
sbb
daa
sbb
inc
xchg
arpl
jb
adc
in
jno
test
loopne
sub
jo
cs
div
mov
push
cli
mov
push
aam
pop
push
pop
scas
fadds
add
adc
mov
push
xor
das
shll
and
fstpl
push
stc
outsb
scas
rorl
decb
pop
cmc
mov
mov
mov
jge
test
mov
test
xchg
pop
lret
sbbb
dec
adc
out
jle
dec
ror
mov
call
out
popa
mulb
shlb
add
xchg
adc
xor
xor
xor
jne
sbb
cmp
adc
xchg
jbe
loop
xchg
stos
in
movsb
stos
mov
out
cmp
shl
cs
jo
sub
sahf
cli
xchg
bound
std
into
mov
idivb
sub
add
cld
fistpll
pushf
lea
jmp
add
dec
loop
push
stos
testb
xor
fldcw
js
sub
test
popf
ret
pusha
ret
shl
sub
js
mov
push
xchg
sub
out
and
les
into
roll
rcpps
jo
or
cmpsb
inc
or
or
and
dec
jns
lret
mov
mov
orl
loopne
in
aaa
lret
aaa
xor
push
aas
shll
out
in
inc
cld
or
test
cwtl
pop
mov
nop
mov
sbb
xor
pop
mov
outsl
or
push
roll
pop
jae
pop
dec
aad
arpl
rorb
neg
or
test
pop
leave
stos
rcll
pushf
ss
jo
lock
push
sbb
ret
lahf
jnp
lret
out
jo
hlt
stc
dec
rcrb
ljmp
sbb
rorb
jne
mov
sbb
mov
cli
fisttps
mov
dec
mov
mov
rolb
mov
or
inc
shlb
and
bnd
dec
aam
xlat
push
and
or
fnstcw
pop
out
rclb
xchg
insb
mov
idivl
ret
dec
xchg
daa
dec
popa
loopne
jno
test
inc
mov
or
ret
dec
dec
decl
neg
mov
loop
js
lods
pop
cmp
bound
jns
push
in
outsb
mov
jbe
sarl
mov
ss
ljmp
imul
mov
sbbb
push
in
dec
test
jp
sbb
pop
or
out
or
and
sbb
repz
movsl
in
cmp
rcl
adc
cmp
into
mov
bound
ss
mov
aas
das
mov
pop
lods
clc
mov
and
and
mov
pop
test
dec
mov
pop
or
push
mov
inc
xchg
sub
lods
stos
push
jmp
lods
ficompl
push
out
pop
or
sti
sub
js
fadds
sbb
dec
mov
ss
cli
xor
jl
in
fwait
outsl
mov
and
and
dec
or
jns
sub
jle
or
nop
test
mov
addb
lret
xchg
pop
xchg
cmp
mov
mov
mov
mov
cmc
jns
add
add
xchg
mov
pusha
adc
enter
add
aad
jbe
jle
sbbl
movsl
sub
adcl
in
fwait
std
xchg
dec
push
push
stos
orb
pop
and
add
mov
dec
push
xchg
xchg
mov
pop
inc
ret
jg
mov
jbe
sub
fstpt
inc
fsubrs
or
dec
lret
out
xor
fwait
jp
fldt
dec
jmp
ja
jnp
sub
push
jecxz
scas
and
dec
lahf
mov
ja
popa
jnp
xorl
mov
push
jl
sahf
lea
adc
mov
aaa
push
subb
mov
pop
ja
mov
inc
jp
sub
pop
sub
lret
xchg
pop
xor
aas
cs
fisubl
push
orl
jl
pop
andb
test
dec
ja
mov
dec
clc
out
inc
incb
imul
cmp
xchg
es
xchg
ja
cmpsl
cmp
leave
rorl
xor
rorl
insb
add
jmp
and
movsb
cmp
out
imul
outsb
ja
popf
cmpsl
out
push
cltd
shl
mov
sbb
nop
lret
jne
lea
inc
mov
adc
adc
add
xchg
sub
mov
les
mov
lret
or
lret
push
fs
or
scas
aam
jo
std
xor
jb
aas
out
aaa
dec
xchg
jne
clc
out
jae
pusha
out
xor
inc
int3
outsb
fprem
js
test
fsubr
or
jle
test
nop
ret
mov
rcll
add
sub
cltd
sahf
icebp
jge
dec
shll
push
xchg
push
je
sbb
dec
les
stos
jmp
repz
fistpl
cmp
cmc
cmc
stc
xchg
push
ret
std
mov
cmpb
mov
adc
inc
incl
push
pop
mov
xor
mov
mov
sub
xor
jecxz
add
in
adc
push
sbb
das
fs
aam
cmp
jg
cmp
or
mov
mov
shrl
sub
xor
jno
fsts
insb
pop
movsl
inc
pop
fcompl
test
loope
push
out
jle
jecxz
jno
xlat
stos
je
mov
push
sbb
push
mov
js
lock
xor
jmp
sub
les
iret
mov
mov
sbb
mov
pop
xor
xlat
pop
push
mov
inc
xor
shlb
bound
int
cmp
jmp
insb
mov
inc
out
xchg
sbb
jns
aam
testl
mov
clc
addr16
outsl
test
out
aad
arpl
jmp
in
in
adc
mov
xchg
mov
jbe
sub
sahf
mov
lret
mulb
adc
mov
iret
or
xchg
jmp
sub
ja
aad
mov
adc
and
mov
frstor
hlt
cwtl
fdivrs
pop
out
test
add
inc
jle
xchg
int3
xor
xchg
dec
inc
int3
pop
mov
jge
inc
es
pushf
xchg
cmp
iret
imul
jle
pusha
sub
mov
insb
push
in
add
sahf
cmp
hlt
jmp
pcmpeqd
add
into
dec
jno
fcomps
sbb
lret
push
xor
mov
cmpb
stos
cmp
jbe
mov
cmp
imul
icebp
cmpsl
insl
ss
push
xchg
or
jl
rorb
sub
scas
aad
xchg
add
mov
pop
jns
jo
idivl
roll
mov
cmc
int
pop
ja
and
sbb
data16
std
call
mov
daa
loopne
jp
xchg
push
and
pop
push
aad
mov
jp
xchg
ljmp
pop
jbe
add
xchg
sbb
addr16
popfw
icebp
sahf
push
std
sti
out
iret
dec
std
sbb
ljmp
loop
cmc
inc
xchg
leave
jae
lret
mov
rorl
pop
push
and
xchg
dec
push
rcll
pushf
repz
cld
dec
flds
sub
je
lret
xchg
inc
xlat
ja
mov
sbb
movsl
push
dec
mov
idivb
lahf
cmp
ficoml
jb
pop
sub
and
push
adc
jae
loope
pop
jp
popf
enter
cwtl
sbb
sub
into
orl
loop
cs
rcrl
imul
imul
scas
dec
cmpl
fnstsw
dec
nop
sbb
outsb
idiv
add
dec
movb
lret
or
ds
outsb
sbb
stos
cmp
inc
xor
sbb
cmpsb
int3
fwait
push
scas
pop
sbb
pop
mov
test
push
scas
out
push
imul
lret
popa
pop
mov
mov
inc
aad
movsb
mov
xlat
xor
mov
into
dec
ss
test
out
pop
adc
jb
xchg
fldt
inc
push
jns
push
or
pop
pop
insl
cmp
xchg
xor
sub
xor
mov
sbb
inc
hlt
mov
xor
sub
out
lods
xlat
ret
jge
pop
adc
add
loopne
ljmp
lods
sahf
test
insl
daa
push
clc
ljmp
enter
std
loop
sti
jae
bswap
jbe
jno
out
mov
xor
mov
mov
imul
les
dec
mov
nop
sbb
and
in
mov
pop
adc
bound
jg
xchg
mov
or
inc
sub
dec
repnz
aaa
push
fstps
mov
clc
out
cmpsl
dec
sbb
sub
lods
sub
in
jnp
imul
mov
jge
orb
dec
lret
imul
xchg
lock
je
xor
add
cmpsl
movsl
xchg
jne
and
sub
repz
jl
lods
xor
daa
mov
rcr
testl
in
neg
mov
push
imul
jle
test
dec
aam
out
ret
out
insl
cmova
and
repnz
cmp
sub
sti
or
push
push
lods
xor
mov
call
enter
and
cmp
push
in
jg
je
in
push
cmc
stos
mov
cltd
ret
ds
cmp
cmc
je
jns
lock
cmp
shll
or
sub
loop
cmp
ljmp
fcompl
clc
and
push
shl
js
sub
loope
mov
push
push
sub
mov
jle
aaa
mov
xor
and
add
les
push
stos
scas
stc
jl
inc
mov
xor
add
lds
and
jge
mov
pop
inc
repnz
or
int
xchg
inc
int
fsubrs
mov
jg
lret
xchg
movsl
nop
lds
icebp
rcrb
mov
push
sbb
movsl
mov
cmp
ret
mov
outsl
jnp
lahf
daa
mov
xchg
adc
mov
jle
into
jle
xchg
stos
divl
call
fcomp
arpl
into
sbb
imul
or
push
rcrb
enter
push
aad
inc
sar
adc
daa
or
out
arpl
push
outsl
pusha
inc
push
jle
loopne
mov
jb
push
scas
xor
idivb
icebp
sub
in
lret
gs
inc
movsb
stc
xor
test
lock
jge
std
pusha
xlat
jle
push
mov
mov
je
and
xor
shll
fldt
fdivrs
lods
xor
test
inc
sarb
xor
mov
xchg
xor
push
inc
movl
aas
dec
icebp
lret
gs
mov
lock
xchg
inc
lret
clc
ja
test
add
pop
jge
dec
pop
test
call
insl
cmp
out
orl
push
or
jp
add
jl
fildl
xor
inc
mov
jp
mov
or
mov
aaa
scas
mov
sub
gs
pop
or
mov
inc
clc
inc
sbb
add
loope
mov
incb
adc
mov
jecxz
stc
jmp
sbb
lods
xor
sub
fstpt
stc
lret
sub
or
inc
xchg
sub
leave
dec
out
push
dec
out
comiss
ds
mov
roll
fsubrl
rolb
js
arpl
out
inc
int
xchg
adc
test
stc
bnd
jns
inc
call
lcall
jb
test
inc
sub
jnp
push
add
ss
or
push
hlt
adc
popf
push
mov
mov
mov
insb
mov
cmp
or
push
pop
or
clc
aad
out
sub
mov
iret
and
in
mov
lds
dec
pop
mov
and
test
out
pop
mov
inc
xchg
and
sub
pop
jle
fdivrl
mov
xchg
fbld
mov
mov
pop
ja
hlt
aas
fisubrs
xor
push
cmp
into
dec
pop
cmpsb
out
mov
jle
jecxz
inc
sub
jecxz
jno
leave
push
jae
cmp
add
mov
fcomps
daa
and
orb
ret
std
aaa
enter
out
fadd
dec
leave
add
push
test
out
shr
inc
or
fisttps
mov
mov
mov
jl
xlat
cmpsb
jno
push
and
xlat
rol
inc
and
xor
or
push
lea
jmp
pusha
xorl
test
jmp
push
movl
call
jmp
pusha
pushf
call
bt
xor
test
xorl
call
pushf
call
ljmp
andb
xor
shrb
ja
or
sarb
push
xor
dec
cld
test
fstps
ret
push
popa
test
mov
mov
std
js
sub
lret
or
sbb
inc
imul
repnz
subb
insl
nop
jp
flds
ja
mov
leave
jb
clc
push
sbb
sarl
js
lea
js
adc
inc
dec
sbb
je
sbb
fwait
push
mov
xchg
cmp
cmp
pop
push
mov
adc
or
fsubrs
fcmovne
mulb
or
mov
dec
or
dec
rcr
mov
sbb
stos
stos
test
in
pushl
dec
jno
mov
jno
adc
jbe
scas
in
into
out
cltd
clc
inc
mov
cmp
inc
lcall
sub
shlb
sarb
mov
mov
enter
push
jne
lods
lods
fmull
sbb
fs
push
push
or
popf
stos
imul
mov
xlat
and
lods
xor
fstpt
mov
add
cmp
loopne
mov
mov
je
fsts
outsl
add
js
divb
jecxz
fistps
stos
mov
and
mov
dec
lgs
sbb
or
sub
pop
test
xor
sub
cmp
mov
aam
cltd
fwait
stos
push
add
and
movsb
out
push
dec
fsubs
fs
or
or
xchg
adc
loope
mov
push
movsb
jno
add
dec
les
fstl
ss
into
ja
repz
jae
push
add
push
aam
lods
cs
add
jmp
add
andl
shll
bound
mov
clc
les
stos
jo
clc
js
aas
sbb
dec
leave
adc
cmpl
fnsave
mov
sbb
cli
or
jb
test
push
jb
rcrl
pop
dec
hlt
mov
cmp
or
loop
mov
fsubl
or
mov
ss
mov
mov
push
or
loop
adc
push
insl
sbb
daa
movb
stos
xchg
pmulhuw
sbb
inc
and
pop
jle
adc
inc
and
andl
and
lea
jmp
push
xchg
out
mov
xor
or
clc
std
inc
jae
in
ficoms
popa
inc
or
inc
inc
and
sarl
cld
and
sub
fcomps
inc
mov
dec
inc
stos
sub
pop
push
mov
call
add
lret
enter
rorb
cmp
cld
test
and
je
xlat
sub
dec
in
sbb
push
xchg
cwtl
ja
icebp
sbb
sbb
jnp
add
inc
jmp
inc
sub
push
push
int
scas
jp
data16
and
jp
and
loop
test
addr16
and
and
dec
xor
bound
adc
out
rcrb
pop
sti
repz
cmp
mov
pop
mov
negl
pop
xchg
push
in
cmp
rolb
jl
jns
je
mov
inc
sbb
ja
test
loopne
pop
roll
jo
dec
sub
or
loop
cmp
push
fwait
xorl
jns
scas
lea
inc
test
mov
adc
jnp
std
sbb
sub
lret
push
fistl
lahf
stos
nop
in
cmpsl
mov
jb
test
pop
inc
das
mov
mov
xchg
jb
data16
test
dec
mov
or
fwait
icebp
xchg
jp
add
lock
dec
xchg
adc
xchg
pop
xchg
jbe
add
xchg
pop
dec
jns
push
pop
iret
push
mov
pop
test
mov
out
mov
dec
jbe
int
scas
test
fbld
inc
push
cli
icebp
xchg
and
scas
test
push
notl
mov
and
dec
repz
mov
in
test
mov
jae
jbe
adc
jge
ss
lds
les
pop
jbe
lock
cmc
sbb
or
out
pusha
add
adc
push
or
mov
xchg
sbb
add
andl
les
testb
push
fcmovnbe
cmp
or
sbb
aas
stos
push
enter
movsb
lock
int
stc
cmp
add
enter
push
pop
dec
test
ss
xor
xor
inc
lods
enter
inc
gs
xchg
mov
xor
pusha
jge
mov
leave
fisttps
jecxz
cld
fwait
xorb
in
aas
ficompl
out
pop
push
xor
loopne
jp
jno
iret
xorl
pop
and
sbb
dec
repnz
jnp
pop
push
xor
bound
js
cmp
jae
mov
fiadds
icebp
xchg
stos
test
cmp
rcl
lods
lret
js
lret
mov
scas
xchg
rolb
fsts
adc
fisubl
jmp
pop
bound
cmp
repnz
add
cwtl
pop
out
mov
jnp
ficompl
xchg
jns
data16
inc
testb
xchg
jle
sub
gs
dec
out
mov
add
sbb
pop
cmp
xor
into
xor
mov
xchg
jp
inc
out
pop
mov
sahf
jmp
addr16
lret
leave
dec
mov
mov
xchg
add
xchg
push
mov
idivb
sbb
movl
jmp
xorl
std
pushl
popf
movb
pushl
ret
and
cwtl
xorb
adc
cld
push
scas
sti
inc
rcrl
dec
jno
jns
repz
xchg
xchg
cmp
mov
push
pusha
lret
test
loope
flds
cmp
aam
jne
or
clc
and
mov
fwait
and
lea
dec
ret
lods
cmpsl
dec
add
or
js
sbb
mov
or
inc
pushf
xchg
cli
test
aaa
jns
jmp
fnstcw
sub
repnz
mov
pop
cmp
js
xor
sub
loope
dec
xchg
pop
mov
test
fwait
repnz
inc
lret
cmp
mov
aad
ret
pop
rcll
nop
cmpl
sbb
loopne
xor
mov
xchg
std
dec
mov
shlb
lods
pop
xchg
in
lret
xchg
sbb
pushf
and
xor
cmovl
loop
lock
xchg
loopne
icebp
ja
fs
outsl
pushf
jb
insl
cmc
jmp
fisubs
lock
imul
mov
ret
fcmove
pop
stc
lock
push
sub
cmp
add
or
test
in
or
enter
xchg
js
mov
dec
pop
fs
jbe
pop
mov
and
out
into
gs
scas
aaa
mov
imul
jl
pushf
cs
pop
hlt
je
inc
mov
into
or
and
jge
cmp
add
ret
frstor
push
lret
push
push
popa
ljmp
jl
push
test
push
or
add
sbb
and
sbb
sarb
out
jmp
loopne
dec
mov
stos
lret
cs
adcb
dec
adc
mov
out
jl
push
das
idivb
sbb
stc
jl
in
jg
inc
push
stos
add
or
sti
dec
fistps
cmp
scas
ss
test
mov
shl
cmc
dec
adc
loope
inc
sbb
sbb
nop
pop
sub
pop
das
add
jle
pop
dec
or
in
dec
ds
inc
les
add
and
ja
test
aas
sbb
in
fnstenv
sbb
add
sahf
jg
pop
cwtl
xchg
mov
ljmp
frndint
push
xorb
sbb
mov
mov
push
lods
fisttpl
xor
xor
ja
pop
jl
push
mov
iret
jmp
lock
add
jns
and
add
mov
pusha
repnz
cld
push
leave
popf
pushf
lret
sub
inc
xor
inc
shl
cmp
xchg
mov
add
add
sbb
mov
sti
std
inc
fdivrl
frndint
push
out
cltd
das
pop
sahf
lds
rcrl
cmp
add
add
imul
repnz
aas
ljmp
mov
mov
dec
ret
and
push
sbb
push
dec
lock
fistps
call
frndint
push
out
incl
and
jo
mov
bound
into
ret
inc
adcl
mov
ds
jnp
xor
xchg
inc
icebp
loopne
das
adc
cmp
nop
shll
jae
fcom
test
push
jmp
cltd
sub
adc
orl
pop
cmpsb
mov
mov
xor
in
mov
int
mov
fsubrs
shll
sbb
repnz
inc
lcall
xor
ficompl
clc
xor
inc
testb
xor
or
add
add
pop
ss
xor
inc
shl
mov
sbb
jns
push
mov
push
cmp
lcall
cltd
push
loopne
dec
ljmp
es
push
fiaddl
lods
pop
jg
pusha
add
mov
sti
mov
sbb
movsb
and
adc
xchg
mov
das
mov
inc
inc
push
dec
cmp
movsb
fiaddl
rcr
das
push
iret
push
popf
xor
cld
add
mov
les
xor
sahf
xchg
sub
mov
jae
ret
xchg
sub
push
mov
jo
jmp
sbb
sub
jno
jb
dec
sbb
enter
ja
or
jnp
add
inc
es
cmpsl
cmp
call
popa
add
and
sub
push
inc
mov
jmp
ret
inc
data16
and
jne
sti
sub
lahf
es
stos
cmp
data16
mov
add
cmp
xchg
cmp
repnz
icebp
loopne
and
loope
xchg
mov
jmp
nop
xlat
scas
dec
mov
add
push
jns
jmp
popa
lret
in
insl
in
das
mov
fisttpll
ljmp
xchg
pushf
pop
loopne
mov
fsubs
cs
inc
dec
cs
jmp
mov
xchg
aas
jmp
jbe
sub
inc
das
xchg
mov
and
gs
nop
scas
push
xchg
jp
mov
dec
test
sbb
int3
pop
add
jmp
cld
adc
or
jmp
mov
rcrb
xor
in
sbb
pop
int3
push
mov
out
mov
insl
pop
and
cmpb
xchg
lret
jp
sti
dec
pop
out
push
mov
xchg
xchg
iret
dec
call
mov
outsl
test
mov
mov
test
std
out
sbb
movsb
mov
mov
arpl
mov
scas
sub
repnz
mov
mov
push
in
out
fstpl
pop
push
cs
adc
test
fimull
mov
add
lret
faddl
fdivrp
adc
and
xchg
cmc
or
test
push
loope
scas
pop
sar
adcl
arpl
inc
dec
ss
call
lahf
xchg
and
jg
fs
in
jmp
cltd
aaa
popa
xchg
pop
cwtl
cld
sbb
int3
subl
cmp
mov
sub
sbb
mov
test
aad
mov
push
inc
iret
cld
pop
inc
dec
cmp
gs
mov
pop
mulb
pop
adc
or
rolb
aaa
mov
mov
scas
icebp
mov
push
jns
ja
lcall
stos
cmp
xor
or
pop
mov
mov
fdivs
cmp
mov
andl
aas
pop
in
mov
das
add
stc
mov
pop
call
int3
pop
inc
int
fdivs
icebp
lods
inc
push
aam
call
ror
mov
fbstp
nop
sub
sti
jmp
pop
jae
gs
push
mov
mov
push
movsl
pop
jmp
xor
push
mov
into
loope
orb
add
and
xchg
into
roll
cltd
cmp
or
sbb
orl
rorl
call
adc
mov
push
cltd
insb
gs
imul
cmp
cmp
test
and
jp
in
addr16
mov
mov
lock
add
addr16
push
daa
cmp
mov
movsl
es
or
mov
jbe
bound
sti
addl
jno
dec
ror
add
jg
adc
das
add
push
sahf
shll
inc
fwait
jae
mov
inc
incb
jbe
cmc
les
pop
lods
inc
ret
add
iret
sahf
out
jne
ljmp
or
and
movsl
hlt
outsl
push
cli
das
add
leave
lcall
icebp
int3
sub
das
roll
adc
mov
sbb
test
cltd
mov
shl
adc
sbb
mov
mov
daa
or
clc
jle
sub
test
sub
push
subl
mov
repnz
cmp
loope
dec
int
fwait
in
xor
lock
push
mov
fildl
in
inc
ja
lret
xor
cmp
repz
loope
mov
hlt
in
cli
add
cmp
arpl
push
les
push
jb
xor
or
nop
cli
pop
aas
cmpsl
lock
push
sbb
icebp
sbb
sbb
adc
lods
push
jns
jge
insb
insl
or
pop
mov
adcb
les
cmp
mov
jmp
xlat
inc
cwtl
ret
loope
sahf
pop
or
sub
pop
xor
inc
mov
dec
les
xchg
sub
out
dec
xlat
fcmovne
test
int3
enter
mov
je
xor
and
fldenv
outsb
fs
push
gs
inc
and
adc
adc
aad
lsl
shr
xlat
fcmovnu
fstpt
or
push
push
ja
push
sub
cmp
push
dec
push
xor
inc
mov
jge
sub
lods
test
xchg
push
push
jmp
fs
xchg
cltd
jg
jo
push
clc
mov
popl
andb
pusha
lods
jns
xchg
adc
icebp
jmp
dec
cmp
stos
xor
add
dec
xchg
leave
and
or
fnstcw
pushf
jb
scas
mov
push
int3
divl
cmp
jp
das
mov
sahf
adcl
daa
mov
out
add
and
mulb
xor
popa
test
xor
aad
mov
movsl
cltd
xchg
add
mov
loop
test
pusha
cwtl
mov
cmc
aaa
ret
add
adc
mov
ret
jp
push
and
pop
jnp
lods
pop
xchg
aad
add
dec
xchg
std
in
fmull
stc
inc
ret
add
fnstsw
inc
lods
fisubs
and
adc
xor
sub
jge
enter
jp,pn
out
inc
aam
push
loope
pop
or
adc
push
out
xchg
pop
shll
jmp
test
orb
and
scas
jp
adc
cld
bound
ljmp
jg
pop
cmpsl
das
js
jge
cmp
std
pop
and
pop
shlb
mov
in
out
mov
jle
hlt
xchg
mov
loop
mul
movsb
mov
pusha
jmp
cmp
shll
and
lret
push
call
mov
test
pop
push
call
inc
sbb
pop
sub
lret
or
adc
es
xrelease
xchg
or
mov
adc
mov
pop
das
add
push
jle
or
repnz
insl
push
sub
mov
cmc
mov
aam
shl
aas
or
or
adc
bswap
adc
add
fildll
or
cmp
push
shrl
fidivs
pop
jb
and
pop
test
cmp
in
mov
inc
fldcw
add
jbe
inc
mov
test
scas
sti
lret
mov
ja
jns
mov
sub
ljmp
insl
icebp
xor
jmp
inc
mov
imul
pop
stc
xor
int3
out
aam
sbb
jl
fs
lea
pusha
xchg
adc
js
scas
lcall
mov
push
enter
or
xchg
ret
add
andb
loope
sub
lods
rolw
cmpsb
push
cwtl
mov
cwtl
imul
aaa
mov
jnp
adc
sbb
ret
adc
cs
cmpsb
sub
pop
sbb
nop
sbb
frstor
dec
into
adc
push
jg
leave
out
shl
jbe
inc
xor
stos
sbb
lds
fsubl
mov
lds
lret
lea
push
test
call
adc
pop
shll
mov
in
jg
pop
loop
sarb
adc
mov
daa
and
fdivrl
cli
jge
or
imul
nop
jge
mulb
dec
rcrl
xor
push
jecxz
loopne
adc
repnz
iret
push
subb
or
push
pop
dec
lcall
scas
push
cwtl
inc
cmp
rorl
rorl
mov
push
jb
incb
jmp
mov
cltd
in
push
dec
aad
and
dec
es
mov
mov
xor
mov
imul
shll
js
aas
pmulhw
push
lahf
xor
pop
pop
les
dec
aad
insb
mov
imul
or
lock
jne
mov
out
jle
in
adc
shl
and
adc
xor
jmp
pop
out
lock
std
sahf
dec
hlt
or
lock
lret
cmc
out
jl
clc
sbb
dec
adc
movsb
js
pminub
jp
xor
call
hlt
jbe
push
xor
call
xor
and
pop
jo
loopne
mov
std
push
das
lret
add
enter
lods
jb
div
inc
leave
add
sub
add
lods
out
loope
mov
push
fistl
cmpsl
sub
dec
fcmovb
inc
loop
lock
rol
fwait
mov
rclb
adc
pop
addl
aaa
jb
iret
in
cmp
lret
sbb
and
mov
shl
push
ucomiss
or
outsb
das
sub
call
loopne
test
clc
jle
aas
push
cli
xor
subl
sub
shrb
jge
xor
shl
dec
ds
leave
push
clc
in
jecxz
jb
sbb
xchg
in
lods
inc
outsb
idivb
push
sbb
xor
fisubrl
aad
das
dec
movsb
or
ja
test
dec
loope
mov
and
xchg
mov
je
hlt
jp
popf
cmp
fistpl
adcb
sbb
jecxz
sub
flds
inc
sbb
push
dec
out
pop
sub
outsb
loop
test
jl
adc
movsb
jg
sbb
leave
je
shlb
shl
sarb
mov
jecxz
sub
dec
lcall
aam
clc
or
add
into
mov
pushf
mov
xorl
std
inc
lods
negb
xor
das
xor
divb
jle
ss
jecxz
lods
bnd
repnz
decl
add
mov
loope
mov
into
sbb
jnp
lcall
dec
jecxz
aaa
ret
pop
jge
push
bound
in
pop
mov
ret
add
xchg
xor
adc
repz
cmp
dec
pop
and
cmp
ljmp
sti
and
mov
repz
xchg
mov
adc
dec
fnstsw
jp
cmc
dec
jge
es
in
cmpsb
push
popa
sbb
test
pop
xchg
dec
rorl
popa
hlt
icebp
mov
mov
jns
lock
sete
push
xorl
push
xlat
repnz
shll
lahf
mov
fildll
mov
sub
bound
jno
inc
insb
cwtl
rol
push
xchg
dec
pop
dec
aam
lret
xchg
test
daa
sti
in
pushf
out
jne
je
ud2
faddl
rorb
or
call
sbb
jns
push
cmp
dec
iret
ljmp
jne
jno
push
fistps
je
push
mov
mov
in
test
inc
decb
dec
ret
add
xchg
mov
mov
pop
mov
mov
mov
mov
addr16
enter
daa
or
movsb
andl
add
jmp
push
or
jns
or
push
sbb
jno
cmp
or
rol
inc
les
sub
cmpsb
cwtl
pushf
mov
sahf
jp
jnp
lods
lret
rorl
pop
sti
sar
sbb
pop
out
push
pop
sti
mov
mov
insl
repz
xor
dec
pop
sbb
xor
sub
xor
mov
mov
mov
sub
xor
mov
test
stc
lds
leave
xchg
add
mov
sbb
pop
dec
jle
mov
cs
data16
pusha
push
xchg
xchg
mov
jle
xchg
mov
push
mov
pop
and
imul
les
mov
push
inc
xor
pop
in
pop
or
sub
adc
cmp
hlt
jnp
push
cmpsb
daa
in
enter
stos
and
mov
jo
mov
inc
mov
testb
imul
pop
pop
cli
fiaddl
out
lods
pop
push
lcall
xchg
dec
rcl
jp
ret
jo
js
shll
mov
lock
stc
xchg
pop
pop
inc
aaa
inc
mul
movl
sti
loopne
aaa
pop
cmp
orb
ficomps
dec
rclb
pop
loope
arpl
outsl
cmp
fwait
cmp
push
repz
xchg
subb
lahf
mov
push
mov
cmpsb
sbb
pop
cmp
sti
jl
dec
icebp
mov
sub
in
mov
ror
jge
cld
dec
or
mov
sub
test
xor
and
nop
push
push
std
sbb
dec
cmp
push
push
sbb
dec
push
insl
test
mov
out
jp
ljmp
adc
icebp
cmp
push
and
sbb
jae
nop
jge
xlat
movsb
into
cld
es
xlat
and
xor
xchg
adc
inc
sar
push
enter
mull
push
loope
dec
ss
in
jnp
or
js
mov
aas
pop
lds
sbb
xchg
dec
insl
adc
int3
or
bound
out
scas
mov
mov
in
jae
cmpsb
jmp
stc
repz
cld
ficoms
add
pop
xor
sub
pop
fstpt
cmp
dec
dec
xor
xor
lds
les
xchg
add
insb
or
jo
les
mov
pop
push
push
les
sbb
movsb
mov
insl
or
sbb
cmp
clc
data16
adc
lds
icebp
mov
cs
inc
lea
xorb
xor
out
ret
or
lret
jecxz
sti
fiadds
cmp
fwait
insb
ja
negb
addr16
fstl
xchg
testb
add
pop
dec
lret
cmp
mov
xchg
jo
cltd
nop
movsl
adc
or
mov
xlat
into
xchg
mov
repz
std
mov
xchg
mov
add
adc
or
lcall
push
fistpl
adc
adc
nop
mov
xor
jns
or
push
sbb
add
adcl
movsb
mov
push
aad
and
mov
iret
aas
jb
jge
rcll
push
xchg
mov
out
das
mov
lods
aam
mov
fimull
mov
xchg
sbb
adc
jns
js
pop
std
in
mov
xchg
adc
scas
mov
fidivrl
cmp
repz
or
out
xor
pusha
lahf
inc
into
out
jle
and
add
js
cmp
cwtl
andb
rolb
in
in
mov
mov
mov
sbb
inc
xor
loopne
cwtl
cld
pop
add
pop
aaa
enter
ret
scas
insb
xchg
shlb
lret
cmp
aad
iret
add
ja
sbb
outsl
sbb
enter
jecxz
sbb
mov
add
cmp
or
jo
test
arpl
pushf
lea
cmp
sbb
fwait
dec
loop
sub
push
mov
js
adc
std
jp
or
fildll
inc
in
mov
std
adc
pop
jmp
jb
inc
cs
add
jno
leave
xchg
add
and
cmp
dec
xor
dec
cmp
add
mov
jno
fs
add
fildll
jp
sub
pop
pop
mov
bound
inc
clc
in
xchg
add
sub
sbb
adc
mov
lea
fstps
push
inc
aaa
push
mov
decb
cwtl
shrl
enter
xor
mov
jg
lock
add
mul
sarb
repz
push
add
arpl
pop
incl
mov
sbb
in
and
mov
mov
push
rcrb
xor
mov
or
in
int
mul
and
xchg
adc
fmull
mov
xor
push
adc
mov
push
or
xor
ret
insl
daa
fwait
repnz
call
call
imul
loopne
cmp
adc
jp
addr16
mov
and
aad
cmp
sub
xor
xor
mov
xor
test
enter
scas
push
push
add
fadd
iret
push
cmp
rorb
mov
cmp
mov
arpl
popa
push
cmp
push
sub
push
fwait
int
sub
xchg
aam
arpl
test
xor
lret
jle
or
adc
mov
add
push
cmc
in
gs
arpl
cmpsl
xchg
pop
or
push
xchg
adc
popa
pop
xchg
loop
nop
pop
sbb
lcall
or
jno
sbb
sbb
ss
addl
stos
lea
xchg
bound
adc
sbb
in
aas
add
imul
adcb
adc
movl
mov
push
pusha
mov
lea
jmp
sub
gs
divl
lods
testl
pop
sub
and
xchg
ja
inc
aas
push
push
je
xchg
sbb
sbb
in
jp
pslld
push
xor
xchg
mov
or
cwtl
sub
pop
and
test
xchg
cld
repnz
repnz
imull
xchg
flds
stos
fnsave
std
add
push
inc
mov
sbb
iret
add
pop
push
sub
mov
mov
xchg
fcoml
xchg
dec
mov
cmp
inc
sti
pop
push
es
jmp
or
push
add
or
nop
mov
insb
dec
stos
sub
clc
cmp
mov
aam
xor
xor
cld
bnd
jl
nop
inc
cmc
mov
aad
fs
mov
and
cmpsl
ljmp
cli
std
jp
xchg
jge
and
inc
movsb
aad
mov
xor
xor
mov
mov
iret
idiv
sti
dec
int3
mov
les
or
xchg
adc
dec
pop
jb
insl
cltd
cld
cmp
cmp
dec
fstps
sub
cld
popa
pushf
lcall
cmp
cwtl
push
mov
aad
cmp
jp
or
aas
xchg
insl
push
stc
pmaxsw
andb
in
jp
fcmovnbe
loope
cmc
dec
call
fildl
add
clc
fcompl
fs
xor
jne
cmp
notl
xor
inc
xchg
inc
sub
add
sub
push
adc
inc
jb
jmp
sub
xor
jecxz
mov
bound
xor
andnps
sub
cmp
push
cmp
fwait
lea
sahf
fwait
ret
xor
ljmp
sti
add
jp
in
movsl
dec
jecxz
js
mov
aaa
push
push
pushf
jne
addr16
jp
sub
or
cld
xchg
add
rcll
imul
add
cwtl
pop
and
shrl
daa
out
and
pop
loopne
sti
rorb
mov
sub
leave
and
add
aam
int
dec
fcmovnbe
stc
cltd
dec
xchg
test
mov
sbb
test
cwtl
shl
jae
xchg
jb
jno
cltd
shll
pop
cmc
or
loop
pop
imul
in
shrl
loopne
repnz
pop
ljmp
pop
mov
imul
rcrb
aas
sub
daa
sbb
mov
mov
inc
adc
pop
xor
outsl
jp
xor
cld
out
pushf
xchg
jmp
pusha
dec
cli
movsb
cld
lret
mov
add
mov
xchg
jg
movsb
and
jno
xor
xlat
sub
aad
push
std
push
sbb
mov
xchg
shrl
adc
jno
push
push
inc
xchg
loopne
add
cmp
mov
mov
xlat
xor
mov
dec
sarl
cmp
into
fdivrs
or
lret
sbb
pop
test
mov
xor
jmp
pop
pop
hlt
xchg
or
sub
adc
mov
arpl
imul
dec
hlt
xorl
inc
mov
mov
scas
and
sti
leave
popf
push
idivb
jge
cmp
jne
sbbl
sub
lret
bound
cmp
rolb
scas
inc
mov
fisubl
jle
mov
cmpsl
movsl
hlt
jne
cmp
cli
idivb
jge
stos
mov
jns
mov
inc
sbb
icebp
fwait
push
xchg
lcall
ja
ljmp
inc
mov
pop
cltd
push
pop
mov
sqrtps
push
dec
lds
mov
fstps
adc
adc
das
fwait
mov
cmp
push
repz
inc
lret
adc
shll
xor
nop
mov
or
test
outsb
add
push
xchg
inc
dec
sub
sbb
pop
fdivs
xor
cli
decb
lret
pop
lret
lds
and
int
sub
push
loopne
push
ja
cmp
xor
ja
dec
aas
daa
sub
popl
pop
mov
lcall
pushf
pop
lea
into
jae
pop
enter
cmpb
shlb
pop
std
js
lods
test
loopne
and
aas
xchg
adc
sub
pop
aas
mov
int
ljmp
add
lock
push
xlat
sbb
popa
lods
sbb
outsl
out
popa
test
pop
or
je
fs
subl
in
push
jnp
or
stos
sti
je
icebp
fcompl
cmp
sub
andb
sub
inc
xchg
inc
xchg
pop
test
push
dec
jecxz
lods
fninit
dec
pop
shrb
inc
sbb
sbb
mov
push
xor
or
adc
inc
aam
das
xchg
daa
push
cmp
divl
aas
jg
sub
mov
sbb
mov
xchg
dec
aad
das
xchg
daa
sbb
jmpw
sbb
push
popf
notl
xlat
ud0
sub
loope
adc
stos
shrl
in
dec
lea
mov
mov
sbb
test
int3
insl
out
xor
or
and
or
test
sub
cmp
jns
inc
orb
push
push
mov
push
pop
add
lock
and
xorl
sahf
out
or
adcb
jecxz
in
pop
adc
xchg
test
jg
pusha
mov
movl
mov
lea
jmp
out
daa
scas
fst
imul
fwait
out
jp
and
xchg
outsl
sbb
sub
dec
push
stc
and
test
movsb
add
out
adc
lds
push
jnp
add
and
ret
rcll
fsubrs
push
leave
shll
dec
pop
outsb
lret
cs
adc
outsb
push
stc
js
repnz
fildl
dec
sarl
stos
pop
jmp
xchg
sbb
fdivrl
dec
shlb
int3
push
movsl
out
push
jg
mov
sbb
and
scas
mov
enter
ljmp
nop
lcall
jl
lret
adc
push
mov
push
shrb
das
cld
pop
push
fsubl
mov
adc
mov
adc
icebp
jno
adc
and
ds
add
outsb
lcall
cmp
pop
xchg
and
cltd
cmp
or
mov
mov
sahf
xor
fistpll
or
jle
sbb
sbb
cmp
adc
sub
mov
pop
add
push
push
mov
insl
push
push
stc
mov
lea
lock
repz
adc
jmp
addb
jge
add
fadd
test
sub
les
mov
or
pop
push
xlat
push
mov
daa
movlps
push
jge
mov
clc
lea
pop
ficoms
cmpsb
sub
adc
mov
jno
dec
jns
mov
fisttps
rolb
sbb
and
adc
pop
dec
sbb
ret
xor
in
idivb
jns
loop
gs
and
sbb
inc
lcall
hlt
loop
rolb
sbb
xchg
int3
int3
repnz
fisubrs
seta
push
hlt
mov
dec
pop
lea
cmp
push
fwait
jne
lods
fdivl
jnp
roll
push
pop
dec
mov
or
popa
sbb
inc
hlt
stos
push
xor
out
mov
outsb
and
mov
out
inc
cld
inc
add
mov
in
in
mov
out
nop
pop
es
lret
inc
lret
idivb
js
gs
push
movsb
xor
mov
repnz
mov
or
mov
mov
sbb
push
add
pop
xor
jae
adc
pop
fbld
cmp
mov
push
push
mov
add
insl
push
adc
loop
add
mov
cmc
adc
divl
ret
out
inc
cmp
add
call
inc
into
aam
sarb
outsb
hlt
fstps
xchg
fstpl
adc
inc
andb
pop
adc
dec
das
lret
push
cmpl
repz
jne
sub
push
stc
mov
mov
jns
fcompl
sahf
pop
dec
adc
mov
jb
mov
movsb
rep
pop
jmp
xchg
sbbl
test
inc
ret
jno
jecxz
jno
lahf
push
pop
mov
fisttps
fmul
int
push
aas
int
cmp
enter
das
fwait
jbe
mov
int
pop
push
xor
iret
or
in
mov
dec
fldenv
and
imul
mov
shrb
mov
pop
mull
ror
push
test
mov
test
aam
pop
scas
cmp
mov
stos
shrb
lret
add
and
std
jmp
lret
push
lds
out
cmpsb
push
loopne
mov
mov
inc
test
jp
int
xchg
cmp
cltd
in
jae
cmp
movsl
jb
test
pusha
adc
inc
loope
push
xchg
insl
cmp
ret
sbb
test
repnz
and
xor
movsb
icebp
jle
sbb
ds
push
stos
aad
imul
incl
lods
mov
jg
inc
cmpsl
sub
push
lret
orl
lcall
sbb
pusha
mov
mov
jge
rorb
xor
sbb
mov
les
inc
js
cmpsb
mov
push
xor
ret
gs
outsb
xchg
cmpb
or
jge
sbb
stos
mov
loope
sahf
ds
and
out
mov
dec
sarl
scas
in
mov
notb
cwtl
mov
push
xchg
test
scas
mov
mov
pop
adc
adc
pop
enter
hlt
repz
jge
scas
hlt
or
clc
xchg
push
hlt
dec
rclb
xor
stos
cmp
cs
mov
test
lea
add
ret
dec
pop
mov
add
lods
sahf
ret
das
orb
jl
icebp
js
pop
cmpsb
rol
push
test
add
mov
iret
xchg
ret
push
mov
cmp
sbb
fimull
or
cmp
mov
push
adc
imul
mov
nop
jmp
test
xor
dec
cs
inc
jp
int3
xchg
cmpsl
and
jge
inc
out
add
push
mov
mov
jmp
mov
outsb
out
loop
cmp
add
ljmp
aad
and
fistl
adc
pop
push
mov
or
arpl
mov
cmpb
sub
mov
iret
popa
sbb
mov
mov
mov
mov
loopnew
cmpsb
cmp
adc
popf
sub
and
push
jo
outsb
mov
ret
and
xchg
outsb
fcmove
sbb
ss
and
fstpl
les
dec
das
mov
add
movsb
and
ret
xchg
cmp
loope
inc
mulb
push
frstor
cmp
adc
arpl
loopne
mov
lods
sub
mov
rolb
inc
jne
jno
nop
mov
sarl
adc
mov
inc
xchg
push
push
sub
rcrl
lcall
outsb
and
or
rclb
xlat
gs
out
cmpsl
sarl
add
fld
mov
into
xlat
pop
sahf
xor
mov
mov
xlat
mov
jecxz
mov
jns
je
dec
cmp
inc
xor
sub
mov
push
inc
shll
lods
fucomip
pop
cwtl
std
adc
sub
std
pushf
xor
insl
adc
orb
mulb
inc
ret
ret
sub
xor
pop
aam
jne
mov
enter
rorl
inc
mov
pop
add
iret
rclb
sub
test
in
cmpsl
das
cltd
add
loopne
dec
aas
in
je
lea
jg
push
mov
or
cmp
lods
pop
push
jp
inc
fsubl
mov
stos
int
pop
push
add
jle
stc
mov
fcom
mov
out
jmp
pop
addr16
loopne
mov
push
subl
psubb
movsb
xchg
fsubs
inc
imul
pop
sbb
mov
bound
dec
cmp
scas
pushf
imul
gs
jmp
out
out
mov
and
sub
aad
jmp
mov
sbb
sarl
lock
rcr
add
push
cmp
push
jmp
push
cmp
lret
jns
sar
test
inc
and
add
sbb
inc
movzbl
mov
mov
inc
pop
xchg
insb
inc
arpl
stos
adc
push
inc
call
inc
push
clc
and
or
mov
lahf
and
clc
fildl
adc
mov
dec
sbb
mov
pop
fcomi
aas
jbe
js
pushf
popl
push
call
in
pop
mov
push
movsl
push
sahf
out
les
cmp
in
test
dec
push
inc
sub
cli
cmp
cmp
movsb
mov
xor
sub
sahf
lea
les
mov
jnp
and
dec
sub
int3
outsb
pop
mov
sub
fdivrl
movsl
add
add
in
pop
pop
xor
into
repnz
mov
cmp
mov
jno
les
pop
in
cld
cvtps2pd
pop
ja
and
dec
mov
test
push
seta
in
arpl
pop
mov
or
repz
xchg
rolb
xchg
cs
jmp
push
ret
mov
cmp
sub
jnp
adc
sbb
mov
cmp
les
pop
sbb
jecxz
mov
add
jecxz
orb
adc
dec
jns
pop
fcoml
push
cli
or
shlb
jecxz
in
scas
xchg
sbb
or
push
icebp
cmpsb
lret
cmpsl
push
clts
inc
sti
lret
popf
push
jecxz
cmc
adc
mov
inc
stos
movl
dec
pop
ds
bt
ss
sub
sahf
sub
cmpsl
stc
hlt
jle
push
aam
in
cmp
or
imul
lods
inc
push
sarl
mov
cmc
xchg
es
push
cwtl
inc
push
xor
mov
mov
stos
mov
into
xlat
pop
xchg
iret
test
pusha
adc
and
sub
add
and
push
popf
popa
lret
mov
mov
xchg
add
dec
lods
inc
inc
and
mov
dec
aam
pop
ljmp
mov
jnp
clc
mov
cmp
jnp
cwtl
dec
push
dec
je
push
enter
xor
lcall
xor
or
out
sub
mov
inc
std
push
add
inc
mov
in
ret
loope
les
stos
inc
cmp
inc
mov
dec
or
jb
ss
frstor
ss
aad
js
cmp
jle
jo
stos
nop
loop
dec
cltd
cltd
hlt
sub
jae
repz
xor
cmp
sub
jns
mov
push
xor
int
aas
xor
mov
lods
mov
mov
mov
and
lea
push
aas
jo
mov
and
pusha
xor
and
fwait
scas
sub
cmpsl
pop
jne
pop
xchg
jl
mov
andl
and
dec
popf
daa
jge
mov
pop
dec
xor
orb
loop
jp
cmp
testb
rcrl
aad
dec
in
aaa
movsb
jmp
sub
and
push
lret
push
dec
jb
or
fdivs
or
sub
loopne
pop
jecxz
gs
push
or
xchg
push
cltd
pop
push
jle
push
xchg
jns
pop
aad
mov
mov
stc
stos
mov
or
pop
sub
pop
or
inc
push
pop
ds
aad
push
in
insb
ret
rcrl
add
sbb
jge
stc
pop
lahf
jns
stos
cmp
aam
mov
int
mov
sbb
cwtl
stos
decl
test
ret
xchg
lods
dec
nop
jb
jne
sub
loop
test
rorb
fld
repz
repz
lcall
push
sub
lock
dec
in
push
pop
imul
clc
push
dec
ja
or
cld
cmp
and
ret
mov
into
cmp
or
je
pop
aad
mov
aaa
enter
sub
cmp
jge
push
push
mov
push
xchg
xchg
mov
jge
aas
jbe
inc
and
jbe
push
lret
outsl
rclb
int
inc
xchg
xchg
nop
in
scas
ds
add
rcr
je
pop
out
lahf
push
stos
into
xor
cld
ja
and
xor
lahf
xchg
mov
shlb
and
mov
sti
push
pop
nop
int3
or
cltd
jp
leave
outsb
in
sbbl
or
pop
push
dec
out
cmpsl
push
mov
jmp
dec
mov
lahf
sbb
shrb
in
jl
add
inc
adc
sahf
aam
insl
pop
out
mov
outsb
rclb
inc
cltd
adc
call
jb
div
jle
and
bound
inc
movsb
jg
push
add
std
js
lds
pop
dec
jle
add
xor
rclb
enter
loope
push
lcall
ret
cwtl
popf
jae
sbb
mov
inc
xchg
rclb
ret
dec
inc
push
mov
sbb
mov
idivb
insl
mov
jp
repnz
xor
pusha
pushl
popf
pushf
pushl
ret
call
call
xorl
mov
clc
xor
pusha
xor
stc
xor
push
xor
cmc
xor
cmp
test
xor
jmp
pushf
pushf
popl
pushf
jmp
pushf
mov
pushf
popl
pushf
call
pusha
pusha
pushf
mov
movl
call
xor
stc
xor
clc
xorl
pushf
xor
call
pushf
push
xor
jmp
push
mov
push
pushf
movl
push
call
xor
stc
xor
std
pushl
popf
pushl
pushl
ret
xor
cmc
clc
xor
call
call
sbb
push
push
andl
add
adc
popf
xchg
inc
cs
scas
idivb
xor
inc
push
inc
js
mov
fstps
outsl
in
pop
insl
call
mov
idiv
cmove
adc
sbb
lods
mov
ljmp
mov
clc
lock
mov
push
inc
js
xor
jo
mov
pop
or
lods
mov
lods
loopne
bound
add
pushf
and
inc
js
pop
or
fsts
imul
dec
push
imul
lods
mov
sbb
inc
and
sub
test
or
or
outsl
test
mov
ljmp
mov
push
inc
js
adc
lret
pop
das
aad
outsb
xchg
mov
xchg
inc
xor
adc
mov
ja
data16
add
mov
xchg
in
mov
aam
gs
push
xchg
mov
test
inc
iret
hlt
aam
dec
xor
push
repnz
adc
xchg
dec
out
int3
cvttps2pi
out
in
mov
xlat
and
lds
jl
jge
sahf
inc
pop
inc
int3
or
and
and
movsb
aas
and
push
jnp
leave
test
bound
jl
loop
cmp
in
insb
push
or
ja
xchg
lret
pusha
inc
mov
lret
jmp
mov
call
mov
mov
cld
mov
lcall
leave
js
jno
and
and
sbb
dec
dec
outsl
fldt
stc
test
inc
rolb
jno
les
mov
scas
and
sbb
pop
mov
pop
mov
cmp
cmp
inc
cmp
arpl
call
pop
dec
lret
gs
adc
clc
xlat
and
leave
insb
fs
push
arpl
lods
pop
test
hlt
fcoms
das
mov
xchg
popf
dec
outsl
xchg
mov
pop
push
push
fimuls
pop
popf
and
or
insl
in
lahf
cwtl
cmp
or
js
shlb
nop
arpl
arpl
and
mov
mov
scas
sbb
pop
jae
aad
dec
and
fists
push
xchg
jp
jle
mov
mov
jnp
xchg
cmp
adc
or
fists
or
ljmp
and
mov
repz
les
jb
mov
cld
sbb
mov
mov
imul
mov
stos
cs
jmp
push
push
daa
lods
jg
popf
pusha
pusha
mov
push
jecxz
mov
or
mov
xor
in
neg
pop
cli
dec
test
rol
mov
movsl
push
loope
inc
mov
scas
in
in
pop
sub
mov
cmp
aad
xchg
std
ljmp
cmp
bound
sub
lahf
jb
sub
add
mov
or
or
add
lret
fnsave
loopne
cmp
pop
xchg
sbb
lock
addl
pop
mov
and
adc
outsl
addl
mov
rolb
ljmp
add
xchg
push
and
sub
aas
or
fisubrl
jbe
xor
and
out
outsb
dec
or
mov
xchg
sub
lock
and
pusha
in
iret
call
int
xchg
xchg
inc
mov
push
dec
inc
sbb
inc
hlt
jmp
frstor
mov
cmpl
test
in
cmp
int
cld
cmp
fcoms
or
aaa
inc
out
sbb
push
in
push
dec
push
add
shr
int
int3
xchg
in
or
xor
dec
mov
mov
xchg
cmp
aam
mov
out
jo
mov
inc
call
sub
inc
mov
cs
mov
cmpsb
movsb
add
ljmp
sbb
imulb
adc
bound
repnz
bound
mov
fbstp
pop
test
xchg
rolb
stos
lcall
jb
xchg
push
dec
aad
dec
jne
shlb
mov
pop
push
enter
loope
inc
mov
inc
leave
jo
in
fwait
loope
shlb
aas
insl
stos
stc
sub
clc
rep
adc
ja
mov
outsl
jl
xor
cmp
outsl
or
jmp
stc
icebp
mov
in
aaa
mov
sbb
xchg
xor
scas
adc
adc
in
fwait
mov
ds
dec
ss
sub
adc
inc
add
std
add
push
rorb
cld
in
lret
clc
jbe
pop
rclb
bound
mov
xchg
fsubrl
sbb
push
enter
add
xchg
dec
popf
nop
mov
jge
adc
mov
pushf
sub
insl
loop
lock
push
xlat
adc
adc
sbb
ja
jo
fldcw
jmp
hlt
dec
xchg
pushf
loop
jl
mull
mov
xor
mov
jb
aam
jb
call
add
xchg
cs
push
std
dec
jp
call
aad
orl
dec
sub
mov
push
movsl
sbb
and
lods
fisttpl
mov
mov
push
test
fidivrl
push
movsb
insb
fnstcw
jo
inc
xchg
inc
add
shl
out
test
add
pop
sbb
fs
and
ljmp
aam
cs
xor
addr16
leave
xchg
dec
cmp
pop
and
mov
lea
icebp
clc
or
in
stc
scas
inc
jmp
jl
add
clc
push
pop
cmp
das
clc
sarb
popf
test
data16
out
adc
jbe
jns
cmp
mov
jns
fcmovbe
push
scas
fsts
js
dec
lahf
mov
not
cmp
lods
out
ljmp
out
movl
push
cmpsb
mov
push
mov
push
aad
jecxz
fadds
jp
movsb
adc
pop
cli
repnz
cmp
ret
adc
mov
mov
scas
pop
mov
mov
mov
add
cmpsb
mov
int3
jbe
nop
enter
pop
mov
mov
and
imul
lds
leave
fsubl
pop
inc
ret
mov
dec
dec
movsl
push
ds
lahf
mov
in
fmulp
xor
adc
dec
lods
xor
xor
clc
jecxz
push
or
pop
push
mov
inc
ret
cld
andl
das
mov
jb
stos
and
outsb
in
sub
push
mov
lds
lds
pop
mov
dec
hlt
jmp
js
mov
insb
mov
insl
mov
and
inc
or
das
sti
cmp
je
or
sub
fcmovbe
fmuls
in
pushf
sub
ret
adc
insl
xor
push
adc
dec
rol
inc
pop
push
mov
jmp
push
jmp
pushf
jb
cmpsl
sub
das
int
and
jl
outsb
cli
jle
sti
movsl
cli
mov
ficomps
lods
xlat
jl
inc
in
mov
xlat
js
push
dec
pop
cmc
jb
xor
sbb
add
or
jg
out
inc
mov
sub
pop
loop
add
sbb
test
push
inc
ja
or
jo
clc
shrl
mov
rcrl
aas
fs
pushf
popl
clc
cmc
xor
clc
xor
pushf
xor
cmp
cmp
xor
bt
xor
stc
bt
xorl
pushf
xor
jmp
pushf
movl
call
movb
movl
pusha
lea
jmp
jmp
sub
das
sub
lret
xor
xchg
sub
je
and
popa
dec
inc
test
adc
cs
insl
push
jne
pop
push
or
mov
idivb
xor
mov
lods
shl
sub
xor
jb
adc
cli
negl
xchg
dec
insb
mov
inc
test
outsb
pop
js
push
pop
imul
sub
sub
stos
dec
dec
adc
testb
inc
dec
fstps
mov
mov
inc
test
aaa
pop
in
sub
adc
mov
pop
aaa
push
sub
nop
mov
xlat
fcmovnu
cs
and
mov
sahf
sbb
lahf
ss
lods
stos
repnz
xchg
inc
test
or
fiadds
aas
add
sti
jl
pop
fcoms
pop
mov
xchg
xor
adc
fiadds
call
es
clc
loope
adc
add
pop
push
add
roll
mov
xor
mov
cmp
test
vprotb
std
lea
lea
lock
hlt
jmp
lahf
dec
rolb
iret
mov
lret
push
lahf
inc
xchg
adc
mov
mov
enter
inc
jae
roll
jo
adc
inc
les
cltd
add
mov
aad
cmp
pop
mov
lea
and
arpl
jne
dec
fcompl
cmp
add
dec
test
rcll
ret
and
jp
rcll
mov
scas
cltd
ret
and
cmp
in
imul
mov
cmp
pushf
jg
lods
fwait
ss
lret
inc
out
ret
cmpsl
push
mov
cwtl
lods
cmp
cmpsb
in
daa
sbb
or
adc
call
fiadds
pop
test
push
cmc
loop
sbb
js
pop
lods
in
int
pop
loop
stos
inc
sub
fmuls
inc
fbld
sub
dec
std
aam
dec
lea
repz
shll
sarb
xchg
mov
mov
fmull
cmpxchg
xlat
inc
mov
and
sbb
test
sbb
sub
vpminuw
enter
movsl
test
push
cmpsb
jb
ja
repz
sahf
into
mov
mov
mov
rcr
mov
pop
leave
in
arpl
sub
mov
sarb
mov
dec
gs
or
add
dec
int
stc
mov
dec
in
cmpsl
inc
daa
jne
aas
sub
push
jno
or
push
insl
add
cmpsb
dec
jo
dec
stc
loopne
roll
xchg
xchg
xchg
cwtl
rolb
fimull
jmp
mov
je
xchg
cmp
or
ds
sti
push
inc
enter
pop
jns
test
fs
inc
dec
ss
push
int
xor
adc
test
jl
adc
sub
rolb
stc
mov
sub
inc
jb
pop
or
xchg
sbb
mov
sbb
stc
enter
jg
jg
dec
xor
ja
cld
mov
stos
sub
lahf
xchg
aam
data16
aaa
lahf
adc
insb
push
xchg
sbb
mov
inc
jbe
jmp
pushf
cmp
sbb
lret
jns
ds
xor
sub
mov
divb
inc
mov
dec
mov
out
mov
sbb
mov
jns
mov
adc
imul
push
xchg
fsts
mov
aad
push
dec
les
or
daa
lds
test
cld
shlb
or
scas
push
dec
mov
icebp
popf
inc
in
push
mov
data16
mov
xchg
cld
pop
daa
xchg
xchg
mov
xchg
sbb
pop
sub
pop
in
jb
mov
stc
in
inc
sub
fildll
lret
es
in
imulb
and
fcoml
push
das
cli
lret
sub
js
sub
stc
idivl
mov
nop
testl
mull
jecxz,pn
mov
add
jl
pop
mov
cmp
insl
pusha
mov
or
je
mov
inc
lea
fidivl
xchg
add
cmp
adc
jo
test
lret
sub
das
fsub
pusha
lods
cmp
inc
roll
sub
cmc
fs
insb
and
push
xor
or
cmpsl
inc
bound
push
ljmp
xchg
adc
enter
jb
mov
sbb
movsb
push
lock
inc
ret
test
enter
out
pop
jmp
jle
ss
stos
bound
add
nop
data16
xchg
inc
imul
push
mov
std
test
bound
test
movsl
sbb
andl
loopne
outsl
add
xchg
cwtl
xchg
fwait
sub
mov
enter
cmpsb
add
sbb
aad
xor
push
xchg
scas
push
hlt
xchg
ss
inc
xchg
inc
popf
cwtl
shrl
add
bound
sahf
pop
jne
mov
mov
mov
and
lahf
sbb
test
push
je
ja
push
js
cmp
sbb
sbb
arpl
lods
in
in
ficoms
xchg
fidivs
repnz
and
sbb
ss
outsl
xchg
lahf
cld
xor
push
dec
lds
xlat
lret
lods
or
push
in
add
imul
mov
fldenv
loopne
lcall
mov
pop
nop
xchg
shr
pop
cli
mov
pop
or
leave
lea
mov
dec
fdivrp
das
cmpsb
fs
fisubrl
aad
lcall
cld
cmp
sti
push
jb
addb
cld
or
mov
mov
jae,pt
jno
into
leave
add
jbe
or
fsubs
out
push
pop
xchg
outsl
dec
divb
aad
mov
jns
mov
test
idivb
out
cmp
jne
lds
cwtl
sbb
mov
push
dec
mov
mov
cwtl
pushf
ret
test
adc
into
cmp
pusha
cli
xchg
add
push
outsl
push
fstps
sbb
sbb
sub
dec
cmp
lar
jmp
pop
mov
out
inc
dec
shll
jecxz
push
push
mov
add
fsts
fiadds
xchg
clc
test
lods
dec
ficompl
mov
dec
gs
pushf
mov
pushf
mov
iret
lock
push
inc
xor
xchg
lods
popf
inc
in
not
scas
mov
sub
add
adc
iret
adc
add
jns
mov
xchg
fcomps
clc
mov
add
pop
adc
or
fsubl
mov
xchg
dec
sub
pop
sub
syscall
das
push
dec
shrl
stos
lahf
not
jbe
xchg
mov
pop
pushf
mov
mov
fcoml
ret
jns
mov
call
mov
ljmp
xchg
fwait
inc
repnz
push
stc
mov
jl
dec
bound
mov
push
pop
cmpsl
das
iret
inc
add
and
jb
lock
aaa
lcall
push
xlat
jns
push
call
pushl
mov
add
push
jns
cmpl
jle
mov
adc
sub
pop
jge
xlat
jmp
sbb
xchg
pop
and
test
loope
mov
lea
jmp
outsl
lock
ja
sub
sub
sub
cmp
mov
arpl
scas
arpl
mov
or
lods
push
jle
hlt
xchg
xchg
mov
js
dec
imul
push
adc
mov
dec
and
lret
in
sbb
or
mov
pop
or
rol
ljmp
mov
cmp
stc
movl
pushf
mov
movw
lea
jmp
add
aaa
lret
mov
mov
sub
pop
push
add
and
pop
cmp
insb
idivb
std
insl
hlt
fisubs
cmp
sbb
xchg
adc
and
and
std
or
cmp
dec
jmp
jmp
push
jmp
iret
cmpsl
into
negb
jb
hlt
stos
cmp
into
shll
cs
cmpsl
cmp
stos
sub
popa
pop
nop
xorl
jmp
jge
call
mov
out
sub
xchg
mov
inc
mov
dec
sar
adc
iret
mov
es
add
sbb
stc
call
dec
inc
sti
add
mov
dec
fcompl
mov
es
dec
orb
test
push
push
push
js
fimull
or
mov
fadds
adc
add
jno
xchg
xchg
sbb
and
cmc
or
arpl
les
repz
gs
push
mov
xchg
xlat
pop
jp
iret
mov
rclb
xor
icebp
mov
idivb
cmp
inc
ror
in
movsl
xchg
fwait
push
fstpl
adc
sub
jmp
lock
jne
test
adc
fs
lret
mov
dec
push
or
shl
cli
fcmovbe
mov
push
fcoms
and
pop
je
loop
stos
roll
xchg
jg
mov
out
and
outsl
sahf
ret
shrl
scas
in
jno
popa
sbb
pop
xlat
cmp
out
and
call
dec
out
xlat
and
frstor
mov
xchg
xchg
ret
cmp
pop
enter
jns
sbb
mov
cmp
out
lcall
ror
sahf
pop
pop
jmp
scas
sub
mov
jnp
enter
push
push
lahf
popf
icebp
ja
inc
jno
mov
stos
loopne
lods
inc
lods
cmp
push
push
test
add
add
sub
mov
fsts
mov
fwait
and
cmp
test
jmp
mov
and
int3
inc
mov
push
or
stc
sub
cmc
mov
cmpb
mov
nop
cmp
rorb
push
rorl
scas
negb
lock
dec
testb
fldt
pushf
or
fs
add
cmp
and
out
fbstp
mov
stos
into
dec
dec
fdivl
in
adc
ss
andb
and
sbb
dec
insl
push
out
sbbb
lret
dec
idivb
pop
sub
fisubrs
jge
cmpl
arpl
add
or
add
arpl
insb
or
cmpl
jmp
jo
jns
and
adc
std
idivb
pop
loopne
or
fucomip
ds
mov
mov
fwait
aas
xor
xchg
xlat
fs
aas
mov
fwait
pop
add
or
adc
outsb
and
dec
mov
fabs
negl
lret
shlb
mov
jne
inc
leave
or
dec
or
inc
lock
cwtl
cmp
cli
sub
test
dec
dec
gs
in
jge
adc
xchg
or
movsb
mov
das
add
fsub
mov
fs
rcll
and
aas
pop
or
xor
pushf
xor
stc
xor
bt
clc
xor
bt
xorl
cmp
mov
xor
jmp
xor
cld
cmc
pushl
popf
mov
movl
pushl
ret
pusha
xlat
and
cmp
adc
in
int3
jnp
and
sbb
stos
decb
push
out
cs
push
je
into
xchg
and
mov
sti
sahf
or
pop
push
dec
ss
fbld
adc
mov
and
scas
mov
jnp
add
ds
xlat
sahf
sbb
lds
push
into
daa
fcompl
movsl
sbb
in
loope
rcl
lea
sub
es
pop
sub
xchg
sbb
adc
jb
mov
lods
gs
add
add
adc
lods
stc
mov
test
sbb
addl
test
test
xor
push
cmpsb
shlb
mov
cmc
xchg
lock
out
cmp
xchg
call
add
dec
idivb
pop
or
bt
xor
call
cmp
xorl
push
xor
cmp
clc
xor
cmp
pushl
popf
mov
pushl
pushl
ret
xor
jmp
call
movw
movl
pushf
mov
lea
jmp
pusha
pushf
movl
push
call
jmp
nop
adc
adc
out
repnz
into
sbb
enter
leave
pop
test
adc
mov
inc
f2xm1
iret
sub
repz
lds
push
xchg
aaa
pop
dec
mov
add
popa
adc
in
repz
sub
inc
xor
mov
jmp
adc
jno
imul
in
xor
adc
in
lret
pop
xor
xchg
and
mov
out
imul
jp
jmp
adc
mov
push
dec
jo
loop
cs
mov
adcl
movsl
in
fldt
jp
scas
cltd
repnz
mov
mov
cltd
sbb
in
or
sahf
lea
adc
adc
movl
jl
flds
ret
loopne
in
fwait
push
pop
out
in
outsl
mov
rol
push
xchg
inc
cmp
and
push
mov
sbbl
jno
popa
push
jge
mov
out
fcmovne
cmp
hlt
pusha
jl
in
or
push
ds
xor
aas
dec
pop
int3
and
bound
lcall
fld
pop
jmp
lds
fcompl
adc
movl
jg
add
cmp
mov
dec
jmp
stos
cmp
jg
out
mov
pop
push
xchg
lock
out
in
cmp
pop
nop
ja
divb
push
lods
fcomi
fildll
mov
mov
or
cli
rclb
push
popl
sub
daa
test
ss
cmp
out
pusha
adc
test
push
ja
cmc
out
scas
adc
stos
out
fcmovnbe
inc
mov
xor
pushf
xlat
imul
cwtl
out
fcomp
add
and
push
or
movsl
xchg
out
jne
inc
es
dec
push
fldenv
movsb
pop
adc
sbb
mov
push
adc
xchg
mov
mov
inc
push
cmpsb
cs
ret
pop
inc
fisubrs
dec
sbbl
dec
adc
scas
aaa
mov
mov
cmpsl
ret
jne
in
inc
mov
outsb
jmp
leave
cwtl
xor
mov
or
cmc
xor
loop
nop
aaa
call
xchg
rorl
test
cmp
jp
dec
loop
or
aam
andb
xchg
xlat
dec
inc
cmc
lahf
aad
int3
test
mov
fs
and
xchg
cmpb
arpl
cmpsb
xchg
adc
mov
adc
ror
aaa
cmpsb
sbb
cmp
fisubrs
cmpsl
jmp
pop
lcall
rcll
cmpsb
pop
adc
inc
jmp
loop
sbbl
ja
adc
imull
scas
sbb
mov
aam
movsb
mov
jmp
xor
ret
out
dec
cmp
jbe
sbbb
dec
cmp
adc
add
add
xchg
ja
insl
add
jne
mov
sbb
sarb
pop
dec
into
jo
bound
add
or
mov
fdivrl
leave
or
iret
xchg
addr16
cmp
mov
icebp
dec
ds
leave
adc
lret
fcmovu
jo
and
jns
je
fcmovnbe
repz
ret
shll
and
mov
mov
filds
aad
mov
jne
jecxz
ja
stos
cmp
aad
mov
pusha
and
jge
push
sbb
inc
call
cmp
dec
movl
ss
das
and
loop
push
jmp
push
cmp
mov
mov
fs
ja
jecxz
push
push
xlat
and
mov
pop
js
jae
int
mov
dec
gs
cmp
push
stos
test
dec
cltd
and
xchg
sub
mov
or
popa
adc
mov
pop
in
lock
aas
ret
or
fwait
pusha
cltd
enter
rolb
insl
scas
lods
stc
mov
and
cld
pop
pusha
push
pop
inc
lds
cmove
jmp
lret
pop
mov
mov
test
das
pop
test
into
or
adc
test
cmp
inc
daa
bound
jp
ret
mov
xchg
adcb
pop
nop
lcall
cs
sbb
push
jmp
lcall
in
jp
dec
jno
lods
aas
jle
arpl
in
pop
add
dec
push
imul
adc
es
xorl
push
aam
sub
sti
test
push
sti
add
xlat
es
sbb
mov
aam
enter
mov
hlt
push
lcall
dec
lods
jmp
lret
mov
enter
cmc
mov
mov
aaa
jb
sub
subb
cltd
cmp
pusha
add
adc
ss
jg
cwtl
popf
shrl
or
iret
imul
loop
xlat
dec
xlat
movsb
imul
aas
pop
and
pushf
lds
dec
fiaddl
and
stos
call
xor
js
xchg
sbb
jbe
inc
fcoms
sbb
cs
nop
inc
popa
and
push
lods
mov
iret
sub
and
outsb
xchg
pop
lahf
arpl
jecxz
sub
clc
add
fistl
lods
jbe
jae
fists
movsl
cmp
mov
xor
cs
sbb
push
and
mov
pop
bnd
aaa
and
ljmp
les
loopne
or
inc
fsubl
daa
fsubrl
adc
push
mov
inc
sub
outsl
sbb
xor
pop
cmc
pusha
push
loop
movsb
lea
in
mov
xchg
lahf
ret
push
add
jle
pop
loope
ss
sub
outsl
clc
cmpb
daa
test
std
mov
iret
mov
loope
mov
out
loopne
push
xor
addl
scas
lahf
frstor
mov
jg
in
out
std
mov
bound
jo
dec
cmp
fwait
ret
out
lds
and
sub
sub
mov
sub
aas
jmp
jno
in
mov
cmpsb
sti
sti
insl
mov
aam
xchg
or
loopne
push
bound
xchg
xchg
push
add
hlt
mull
push
jp
mov
xorb
sbb
mov
sbb
out
xchg
jp
mov
popf
movsb
xchg
sbb
dec
and
xchg
bound
sub
adc
inc
rolb
shll
ds
cs
out
popf
dec
mull
inc
and
xor
sub
jnp
and
or
out
add
test
lods
call
ja
arpl
adc
lods
js
int3
jg
sbb
inc
mul
pop
jo
fdivrl
clc
sub
dec
pop
int3
inc
lret
lret
adc
popf
xchg
addb
sar
sti
lock
sbb
cld
jbe
adc
add
cwtl
pop
scas
push
pop
test
sahf
fiaddl
movsb
push
aad
dec
cmpsb
out
xor
ljmp
iret
mov
ds
popf
jb
sbb
mov
inc
sbb
cltd
jb
idivb
dec
jb
mov
frstor
in
sub
push
xchg
fsubrs
jge
pop
mov
icebp
out
scas
loope
mov
in
lea
sub
or
les
in
lea
fidivrs
into
es
xchg
ret
aaa
shlb
xor
mov
push
push
repnz
aas
dec
call
sar
incl
cmp
mov
xor
clc
clc
xor
test
test
pushl
popf
mov
pushl
ret
dec
inc
xchg
xor
scas
addr16
scas
mov
test
and
sbb
rcll
push
sbb
sti
loopne
and
out
cltd
cltd
inc
adc
or
sub
stc
sbb
call
mov
out
mov
mov
inc
lea
cmp
jp
and
test
dec
out
negl
jo
adc
sub
stc
inc
mov
xor
fwait
subl
mov
pop
lea
pusha
sub
leave
dec
mov
adc
xorb
dec
shlb
mov
dec
add
shrb
cld
or
sti
add
jnp
or
outsl
repz
in
jbe
push
add
jns
xchg
cmp
repz
sbb
test
inc
out
mov
fdiv
mov
nop
xchg
mov
test
xor
and
jbe
sti
or
and
and
cs
jge
dec
es
dec
int
fs
addr16
mov
pop
into
pop
fldenv
inc
xchg
xchg
mov
lea
pushf
stc
in
inc
mov
jl
test
jnp
in
stos
dec
inc
cwtl
pop
loop
cmp
pusha
inc
adc
push
mov
xor
xor
test
loopne
mov
or
in
push
es
xor
outsb
adc
lds
mov
inc
cmp
xor
mov
test
in
js
stos
sub
xchg
loopne
push
push
xor
popf
mov
andl
xlat
pop
mov
pushf
movsb
daa
stc
insl
xchg
jb
mov
sub
push
in
jb
pop
mov
int3
scas
add
inc
and
xchg
xchg
cmc
fs
jge
fcmovnu
dec
repnz
cltd
jno
shl
or
mov
xchg
push
inc
and
adc
and
mov
idivb
dec
nop
pop
bound
push
and
test
js
jo
sbb
in
fs
xchg
sbb
ret
sbb
mov
stos
lahf
pusha
popa
or
pop
adc
xchg
fcomps
jbe
lds
cmpsb
fldt
pushf
pop
dec
push
pusha
notl
cld
lcall
and
subl
xchg
push
popa
outsl
sarl
push
add
ret
inc
inc
mov
sub
ret
sti
cmpsl
sub
lcall
shlb
pop
or
xchg
mov
into
pop
xor
cs
subl
mov
testl
push
add
mov
jne
mov
les
adc
xor
xor
test
fnsave
and
jbe
dec
insl
lea
out
fistpll
rcrl
sub
mov
out
repz
cmp
push
mov
outsb
fdecstp
jl
cmp
mov
mov
lods
fucomp
sub
ret
outsb
lods
sub
jo
mov
aam
xchg
and
daa
test
fnstsw
fstp
dec
mov
push
push
or
sub
dec
std
mov
and
pop
into
push
add
cli
outsb
sbb
and
jmp
push
inc
pop
decb
pop
jmp
adcb
pusha
repnz
xchg
addl
adc
fbld
or
fistps
and
xchg
enter
aaa
int3
push
xchg
ret
lods
scas
mov
sbb
jecxz
mov
sbb
cmp
pop
pop
and
mov
cmpsb
daa
sub
add
push
out
rol
aam
or
loop
ljmp
jle
in
stos
gs
cmpsl
imul
fsubr
int3
add
repnz
or
dec
leave
push
xchg
sbbb
dec
int3
add
rorl
fcmove
mov
mov
arpl
ja
mov
scas
sti
into
shll
pop
out
mov
subl
jo
fiaddl
inc
std
xchg
iret
sarb
lahf
ja
jno
mov
sub
adc
cwtl
sahf
outsl
insb
stos
sbb
push
clc
jnp
jge
lret
push
add
int
leave
xor
jl
cs
scas
inc
lock
xor
popf
push
test
movsl
jl
inc
lret
setg
outsb
or
int
lret
xchg
mov
cmp
cld
test
push
inc
lds
dec
xor
jmp
push
sub
jecxz
dec
imul
popa
mov
cmpsl
in
pop
in
pop
dec
xor
jns
cmp
popf
insb
arpl
inc
sbb
test
dec
popa
out
cmpsl
xor
popa
movsb
mov
pop
adc
out
xchg
js
cmp
mov
popf
dec
ret
mulb
jg
insl
icebp
mov
cld
or
xor
fwait
outsl
fcmovne
mov
pop
cmc
xchg
jo
clc
inc
mov
rcrl
enter
insb
lret
xchg
out
popf
pushf
lea
es
pop
and
and
scas
xor
xchg
fs
mov
jno
shll
fwait
mov
fs
mov
popa
incl
mov
push
adc
rolb
or
jle
pop
das
in
xor
jns
xchg
jno
sub
mov
pop
js
loope
xor
in
dec
clc
adc
ss
and
cld
mov
popf
clc
adc
xor
loopne
cmc
repnz
xchg
xlat
cmp
pop
mov
mov
jnp
jecxz
adc
pop
dec
ja
cmpl
fwait
adc
fadds
push
ficomps
loope
jmp
xor
push
inc
xchg
fwait
es
daa
loope
lds
jp
push
in
jp
dec
loope
cwtl
sub
lods
in
repnz
pop
enter
fistps
movsb
test
fldenv
xchg
jb
jl
or
ljmp
pusha
sbb
ret
push
mov
lret
cmpps
and
ffree
pusha
hlt
and
inc
scas
xor
add
adc
pop
es
or
and
mov
test
jae
out
rcrb
es
inc
aad
nop
sub
push
mov
jno
ror
movsb
int3
clc
and
jg
add
punpcklbw
pusha
lcall
outsl
xchg
imul
movsb
fisubl
push
cmp
insb
gs
mov
and
cmpsl
or
popa
and
xor
cli
sub
mov
je
cli
mov
and
sub
enter
psllq
xchg
lods
pushf
xchg
mov
mov
or
cmp
and
or
sub
das
jae
ja
and
cmp
lods
lea
in
lahf
aam
daa
xchg
call
stos
push
or
pushf
xchg
add
insl
push
inc
movsb
rolb
sbb
ret
in
pop
pop
int3
out
pop
lods
jo
pop
cld
jmp
mulb
nop
aam
dec
outsb
pop
js
xchg
mov
sbb
sarl
sub
orb
mov
inc
cld
call
push
fisubs
cmp
xor
dec
push
popf
sbb
hlt
and
fwait
and
xchg
sbb
sbbl
ret
push
subl
jo
aaa
je
rol
mov
cmpsl
xor
fidivrs
jbe
cmp
jecxz
xor
popf
mov
pop
inc
lret
push
adc
and
mov
or
xchg
add
push
adc
int
stos
in
sahf
shl
adc
push
sub
mov
insb
out
jns
arpl
sbb
enter
ret
pop
cmc
mov
addr16
sti
out
mov
inc
lods
mov
xchg
or
daa
xor
scas
cmpl
dec
push
push
iret
rcl
outsl
ds
je
sub
xlat
inc
sahf
insb
roll
mov
icebp
push
jb
fnstsw
or
xor
ljmp
imul
dec
add
out
adc
ret
ja
inc
ret
xchg
hlt
or
adc
popa
test
mov
es
test
adc
scas
int3
lea
inc
lods
push
inc
mov
sahf
fldt
adc
push
test
cmp
test
lahf
cmp
mov
bound
leave
mov
stos
inc
dec
xchg
fldenv
push
adc
push
loop
dec
or
add
mov
jge
xchg
jecxz
insl
push
bound
lds
or
sub
or
push
cwtl
cmp
test
cmp
fwait
out
and
imul
loopne
inc
xchg
addl
and
xchg
xor
adc
sub
insb
and
ds
push
shll
inc
fbstp
jle
add
push
hlt
xchg
jno
clc
cld
movsb
in
add
outsl
sub
push
int3
scas
test
push
int
fwait
les
int3
and
and
mov
mov
xchg
mov
jae
sbb
and
sti
fs
jne
inc
das
subps
test
fisttpl
xor
sub
stos
inc
sub
push
jle
data16
test
outsb
and
xlat
out
outsl
test
mov
sahf
sub
andb
xchg
cmpsl
xor
fs
imul
adc
fists
xlat
mov
sub
fstl
add
inc
mov
test
adc
mov
adc
add
popa
inc
cld
or
jge
or
xor
or
imul
mov
add
lcall
xor
int
idivb
inc
or
adc
push
push
push
cwtl
fwait
rcr
mov
dec
mov
adc
flds
outsb
mov
add
xchg
pusha
not
pop
daa
icebp
add
repz
mov
inc
es
idiv
jecxz
sub
aad
jno
adc
cmp
cmp
stos
xor
aaa
sbb
jae
xchg
dec
out
imul
fstps
pushf
popa
fldl
negl
lahf
sub
cmc
and
int3
rorb
pop
xor
jne
lds
pusha
lods
adc
mov
sarb
sub
mov
xchg
sbb
xchg
or
jmp
orb
into
setne
jecxz
pop
les
add
ljmp
shl
loope
xor
jo
into
dec
inc
xchg
vorps
imul
sub
cli
pusha
and
cltd
jmp
add
jmp
xor
mov
mov
xlat
pop
lds
das
call
lock
push
ds
sub
or
fs
mov
push
jle
aaa
mov
sbb
push
nop
adc
or
loopne
icebp
outsb
mov
sbb
aad
mov
jp
push
in
xchg
adc
std
fwait
mov
jmp
xor
ret
cs
mov
or
mov
cmpsl
sbb
loope
test
mov
inc
pusha
sahf
mov
fnsave
int3
rcr
mov
xor
adc
std
mov
lods
push
mov
pop
pop
add
push
push
paddd
lcall
push
shr
cli
and
addl
pop
inc
leave
adcb
mov
or
inc
mov
mov
adc
xor
dec
xchg
cwtl
pushf
daa
ret
xchg
cltd
cwtl
jmp
imul
sbb
lea
jnp
dec
cmp
sbb
jle
flds
sub
sahf
or
stos
sub
or
insl
movsb
mov
addps
test
adc
and
enter
scas
mov
int3
sub
jg
filds
aam
das
sbb
mov
rorl
test
pop
jb
dec
hlt
shll
push
repz
mov
sahf
aas
les
and
mov
cmp
incl
xor
in
orl
int3
jo
pop
mov
xchg
addl
aam
jnp
insb
hlt
popf
stos
xchg
add
fimuls
or
jp
mov
adc
cmp
and
and
pusha
adc
sbb
xchg
jge
and
pop
bnd
pop
add
inc
test
dec
xor
add
in
daa
mov
pop
pop
out
in
xchg
jg
cmp
lret
xlat
or
xchg
adc
jb
push
push
sub
imul
mov
shrb
jno
ljmp
movb
lods
hlt
mov
ljmp
inc
int3
and
xor
xor
cmpsl
or
adc
out
xor
xchg
lds
push
fstpl
push
ss
or
mov
testb
mov
or
mov
pop
xor
insl
callw
clc
lcall
test
es
std
fcomip
cwtl
lcall
or
and
add
and
js
mov
ljmp
push
inc
testl
adc
dec
lret
jp
mov
es
or
dec
jp
std
fcomip
in
pop
dec
jbe
cwtl
lods
add
xchg
or
les
jb
jg
and
test
jo
jecxz
xchg
or
sub
lea
das
cs
mov
or
and
sbb
mov
and
sahf
xchg
cmp
jmp
loope
std
aad
push
std
fcomip
sti
mov
out
push
pop
ror
hlt
aad
lahf
and
dec
fstps
inc
sub
popa
test
and
or
jae
sti
mov
es
xchg
sbb
loope
inc
xchg
xor
mov
cmp
sti
mov
xchg
out
mov
xor
jge
jbe
fldcw
adc
popf
mov
fnstsw
clc
and
outsb
in
aaa
iret
dec
xchg
and
out
mov
mov
rorl
insl
push
outsb
sub
push
cmpsb
ficomps
push
lods
pop
in
out
ficomps
mov
hlt
jbe
pusha
fisubs
mov
data16
test
pop
add
mov
std
sub
or
add
sub
mov
out
out
addr16
jmp
pop
xchg
sub
mov
xor
inc
adc
mov
cmpsl
sub
mov
ror
mov
loope
lea
hlt
repnz
mov
sub
enter
ffreep
stos
mov
lcall
ss
jne
adc
dec
subl
mov
adc
bnd
dec
fidivrs
inc
mov
repnz
je
ret
and
lock
mov
fimuls
lock
and
pusha
lret
fsubrs
jb
mov
jo
xor
inc
jb
cmp
repz
pop
dec
inc
into
loope
mov
lds
imul
das
adc
pop
outsl
jo
leave
dec
jge
adc
mov
shl
dec
lods
push
clc
dec
jnp
in
pushf
push
sbb
stos
cmpsl
mov
dec
dec
jbe
cs
frstor
inc
ret
lahf
aam
dec
rcrl
xchg
pop
jns
mov
hlt
push
fnstsw
repnz
adc
mov
mov
adc
inc
repnz
icebp
and
dec
iret
adc
js
movsl
lcall
lds
push
lea
pop
test
push
adc
pop
cld
jge
push
fsubrs
xchg
inc
movsl
pop
jne
shll
jbe
test
mov
stc
xchg
test
fsubs
insl
loope
xchg
push
push
jl
mov
push
in
repnz
lds
mov
add
cs
insl
out
mov
outsb
out
xor
sahf
jg
jae
pop
ret
add
mov
sub
push
aas
test
ret
sbb
push
pop
and
inc
movsb
mov
shlb
push
push
in
imul
icebp
shrb
outsl
mov
in
sub
cli
sub
lcall
and
ffreep
cmp
mov
shll
stos
jle
sub
jmp
mov
mov
sub
or
cwtl
adc
andb
and
push
mov
push
les
dec
loop
push
cmp
push
sbb
int
loope
xchg
addr16
cltd
mov
jo
add
jns
jmp
lahf
in
add
adc
pusha
int3
repz
push
jbe
ja
lods
test
stos
pop
xor
es
movsl
pop
inc
test
xor
xchg
push
and
adc
sbb
jmp
int
mov
adc
dec
out
xchg
cmp
dec
call
sub
or
pushf
scas
rolb
sub
dec
xchg
push
pop
std
dec
sbb
not
mov
out
mov
popa
sub
pop
repz
pushf
xor
adc
lds
and
stc
dec
jmp
mov
cmpsl
jmp
sbb
mov
mov
les
mov
xchg
pop
into
pusha
popa
cwtl
sub
verw
and
sub
fnstsw
in
movsb
adc
pop
inc
dec
hlt
fidivrs
inc
repz
lret
adc
add
lods
pop
jo
insb
mov
aaa
mov
adc
jb
jmp
pop
scas
shll
cld
scas
repnz
push
test
rcrb
adcl
sub
repnz
push
je
cmp
pop
test
jne
xor
xchg
xlat
insl
scas
xchg
popa
adc
push
add
jae
cltd
fidivs
sbb
cltd
jge
popf
stos
daa
cmp
pop
ffreep
jnp
repz
mov
out
xor
subl
cltd
test
dec
push
rclb
daa
dec
xchg
and
xlat
jl
mov
sbb
cmpsb
rorb
xor
ljmp
adc
loop
shrb
mov
jnp
test
outsl
into
inc
movsl
sarl
aam
pop
inc
adc
popa
cli
inc
push
xor
mov
fistpll
cmp
mov
cmpsl
shll
mov
inc
sub
inc
cmp
les
les
test
mov
cmpsl
cwtl
stos
repz
push
fidivl
out
xor
popf
fmuls
mov
lret
push
aam
lods
cld
jge
push
jno
sbb
repnz
push
insb
aaa
mov
rorb
mov
pop
jb
and
paddusw
js
xor
mov
fs
jbe
int
inc
enter
in
imul
jg
cld
push
stc
test
mov
insl
inc
call
aad
sub
clc
jge
out
lods
inc
dec
push
mov
fisubl
gs
pushf
sub
dec
dec
xlat
pop
mov
add
pop
cmp
lret
gs
iret
xchg
pop
jne
lods
movsb
inc
ljmp
sbb
test
lret
push
xchg
and
mov
xor
mov
mov
enter
mov
pop
in
mov
movsl
pop
popf
mov
scas
cs
cmp
xchg
mov
xor
imul
adc
pop
pop
pushf
popf
cmp
xor
push
jl
in
or
mov
cwtl
adc
or
jg
movsl
cmp
int
add
sub
ret
push
ret
mov
push
push
rcrl
lods
pop
xorl
sub
aam
sbb
cli
xor
xchg
mov
push
mov
xchg
xor
pop
jl
xchg
jge
and
or
ja
int3
fisubs
xorl
repz
push
adc
sbb
mov
pop
push
adc
addl
push
and
in
adc
add
ja
js
jns
pusha
cltd
mov
adc
jb
loopne
lods
inc
lcall
and
ljmp
hlt
sbb
push
fcmovnb
in
js
jo
or
lds
fldl
jmp
sti
loopne
insl
out
shlb
xor
hlt
sub
repz
mov
out
inc
pusha
mov
lds
scas
sbb
ds
fsubl
mov
dec
jl
cmp
pop
aas
in
mov
jl
dec
cmp
inc
outsl
cmpsb
lds
push
xchg
sarl
out
es
sub
shlb
jmp
lret
ss
jmp
outsl
je
inc
in
mov
imul
adc
iret
mov
sub
das
or
mov
stos
mov
ret
inc
adc
insl
cmc
pop
push
out
xor
or
scas
jle
adc
lods
jg
idivb
adc
movl
call
xor
jmp
mov
movl
pushf
movl
movw
pushf
lea
jmp
sbb
in
dec
lcall
icebp
jae
jge
into
push
aad
push
movsl
xlat
ret
push
mov
daa
pop
enter
sub
add
xchg
int3
jle
cmp
jmp
scas
int3
lods
push
int3
xchg
and
mov
mov
repnz
scas
mov
push
enter
imulb
enter
xchg
xchg
jmp
outsb
xchg
aam
mov
mov
dec
add
xlat
addb
divl
test
jb
pop
cs
cltd
cmp
mov
ja
js
clc
sub
mov
ja
cmp
stos
push
sbb
int3
xlat
mov
cmc
aam
gs
push
adc
mov
pusha
inc
mov
cmp
fcomps
mov
mov
ja
out
cmp
fidivl
and
dec
call
cmp
push
dec
shlb
fptan
popf
aaa
or
scas
xchg
sbb
orb
sbb
shlb
xchg
jae
xchg
ss
or
cmp
sub
dec
in
mov
mov
mov
xchg
xor
add
ret
rcl
xlat
add
subb
xchg
cmp
mov
xchg
mov
mov
jae
inc
mov
out
jne
movsb
xchg
lret
sub
test
or
ror
mov
cmp
je
xor
movsb
push
sub
dec
pop
sub
mov
out
jp
dec
cltd
and
movsl
clc
jge
inc
jl
enter
cmp
repz
jle
xor
outsl
pop
adc
or
mov
in
inc
sub
push
xor
push
cmp
xor
scas
addr16
mov
xchg
shlb
sarl
std
adc
adc
shlb
ja
movb
lea
push
out
outsb
test
out
das
fmul
aam
cmp
insb
out
cmp
add
outsb
mov
cwtl
test
dec
lea
cwtl
add
xchg
mov
push
or
icebp
inc
fadd
dec
sbb
mov
xchg
sbb
sbb
or
pushl
xor
cmp
cmc
pop
mov
jge
jo
sbb
leave
cmp
iret
jg
dec
bound
xchg
mov
pop
mov
sbb
dec
out
sti
in
mov
adc
push
rol
int3
mov
call
insb
push
loopne
cld
mov
xor
lea
and
jne
scas
cmp
push
xchg
dec
mov
fcoms
bound
pop
inc
pop
jnp
xchg
mov
dec
jno
fdivs
push
dec
adc
int3
or
mov
int
adc
scas
sti
jle
add
pop
loop
in
cmp
pop
lahf
outsl
dec
stc
xchg
mov
jo
cmp
add
mov
in
negb
pop
mulb
scas
push
add
loop
sbb
push
sti
rorb
or
inc
and
dec
incl
adc
pop
mov
arpl
xchg
push
lret
call
adc
push
add
cmp
push
mov
jns
gs
sub
add
cmp
fmul
push
add
ret
inc
lea
push
pop
xor
cs
test
jno
mov
push
std
inc
inc
xchg
push
and
movsl
adc
sbb
int3
dec
pop
jns
cmp
dec
dec
movsb
sub
ljmp
pusha
inc
in
int
mov
cmc
ss
mov
clc
out
test
sbb
popa
loopne
lods
pop
pop
nop
jbe
cmovbe
jnp
pop
ret
mov
push
mov
loope
mov
ret
movsb
sub
jmp
jmp
xchg
fisubrl
sub
xchg
and
push
fdivrs
dec
mov
sbb
cmp
lods
in
clc
inc
aad
sbb
hlt
sbb
dec
popf
mov
mov
mov
cmpl
fdivs
loop
adcl
idivb
arpl
in
aad
shll
leave
sbb
cltd
out
aas
gs
dec
imul
ret
mov
iret
pop
stos
sub
lock
mov
mov
sub
jns
pop
jne
es
into
push
xchg
push
pop
out
jb
dec
subl
scas
push
aaa
dec
mov
es
shll
data16
bound
cld
int3
in
sbb
ret
dec
dec
add
pop
pop
xor
popf
mov
mov
lea
jmp
or
and
xor
push
xor
clc
pushl
popf
pushl
pushl
ret
pushf
movl
pushl
pushf
push
lea
jmp
movl
pusha
call
pusha
jmp
lea
jle
pusha
movl
pusha
push
movb
lea
jmp
call
call
pushf
movb
movl
push
pushf
pushf
mov
lea
jmp
into
cmpsb
clc
dec
lahf
in
cmp
dec
lret
push
fbstp
lds
mov
in
test
adcl
dec
insl
mov
adc
xor
cli
sub
clc
xchg
sbb
es
ja
dec
pop
in
and
push
dec
repnz
icebp
cmp
fnsetpm(287
ret
cmp
imul
cmp
xlat
adc
sti
xchg
add
into
sub
iret
clc
fmull
add
cmp
lahf
push
ljmp
jo
mov
jne
xor
add
dec
insb
lcall
lret
mov
sub
add
jg
mov
ss
push
loope
pop
fistps
fbstp
mov
xchg
sti
scas
mov
shl
cltd
dec
sbb
je
repnz
mov
and
xchg
ficomps
sub
pusha
and
push
sub
pusha
cmpsl
lret
mov
fnstsw
pop
mov
mov
js
inc
dec
xor
ds
sahf
pop
lock
xor
enter
fbstp
mov
outsl
pop
gs
int
fdivr
jno
jne
popf
mov
les
or
push
nop
sub
add
xchg
sub
jge
and
cmp
jno
cmpsb
iret
pop
loopne
sbb
rol
pop
cmp
scas
mov
jmp
ja
jb
repnz
mov
and
add
mov
frstor
and
push
sahf
out
push
push
xchg
cmp
aaa
inc
mov
fwait
adc
xor
push
sahf
pop
xor
and
shlb
xchg
or
xchg
sub
aad
sbb
xor
mov
and
push
rorb
xchg
jl
lods
pop
xor
movsl
lods
push
in
fidivrs
into
mov
push
xlat
push
out
testl
pop
jbe
sub
mov
or
pushf
leave
mov
loopne
aad
das
jae
pop
shl
daa
jecxz
adc
in
jg
inc
aad
push
xchg
cmp
add
aas
ss
clc
pop
js
add
shr
mov
into
xchg
add
sbb
or
mov
mov
ljmp
jmp
fisubs
mov
inc
jns
sub
insl
xchg
add
lahf
imul
mov
add
mov
mov
jno
dec
mov
mov
and
loop
mov
cmp
dec
xor
inc
xor
cmpsl
in
jns
cli
insb
popa
sbb
jecxz
jae
sarb
xchg
loope
dec
xchg
daa
cld
shll
jnp
int
pop
inc
push
jns
push
fdivrl
jb
jmp
lcall
mov
stc
and
jmp
imulb
sbb
icebp
cmp
cmc
and
mov
xchg
loopne
push
out
mov
mov
scas
adc
lret
and
ss
inc
lret
pop
fwait
xchg
jb
push
bound
rorl
insl
add
pop
xor
test
into
jns
jmp
xor
mov
shrl
and
push
sub
andb
jae
jg
lods
aas
hlt
cmp
imul
icebp
cs
js
sbb
lcall
scas
jl
and
mov
in
idivb
ljmp
xor
add
inc
arpl
pushf
push
pushf
lea
jmp
clc
xor
bt
bt
xor
pusha
xorl
call
pushf
cmp
xor
push
pusha
xor
call
cmp
xor
cmc
xor
cmp
stc
xor
cmp
pushl
popf
movb
pushl
ret
pushf
push
pushf
popl
test
xor
clc
xor
cmp
xor
pushf
xorl
pushl
xor
pushf
cmc
xor
pushf
xor
stc
pushf
xor
pushf
pushl
popf
push
mov
pushl
ret
outsl
mov
add
imul
push
pextrw
pop
mov
or
stos
sub
mov
pop
xchg
notb
addr16
pop
sub
sbb
ret
in
repnz
in
fwait
or
add
imul
cli
movsl
pushf
icebp
add
cmpsl
stc
in
sbb
push
jae
fcoml
inc
arpl
fmull
stos
ss
sbb
or
xchg
cmp
test
icebp
cwtl
cmp
pop
sbb
arpl
imul
inc
les
sbb
adc
xchg
pop
stos
push
negl
imul
mov
jl
add
jns
xchg
jge
pop
rorb
shrb
lcall
pop
in
aam
aam
inc
test
xchg
dec
cmp
cmpsl
sub
jle
lods
inc
mov
pop
sarb
and
adcl
jmp
cmp
fwait
or
or
dec
or
ret
adcl
cwtl
adc
push
dec
xchg
push
add
into
mov
sarl
and
stc
sub
iret
stc
and
push
mov
daa
jmp
and
fildl
insl
fs
cltd
pop
mov
ljmp
xchg
mov
sbb
out
pop
xchg
dec
fbstp
or
shll
or
sti
jl
and
shr
lcall
lret
mov
fs
into
ret
enter
mov
inc
leave
push
mov
outsl
pop
loope
addl
and
ficompl
and
adc
sub
mov
scas
xor
mov
movsb
nop
sbb
std
fisubrl
and
jno
jo
inc
jb
fstpl
or
dec
fmul
xchg
adc
lock
mov
stos
pop
or
push
mov
dec
pop
mov
dec
popf
and
jl
push
movsb
cmp
and
into
mov
push
daa
mov
aam
pop
int
pslld
sub
mov
mov
into
mov
or
jo
xchg
fcoml
and
test
xchg
sbb
inc
enter
mov
lahf
out
mov
call
or
push
jmp
inc
in
sbb
push
mov
sbb
mulb
in
adc
andb
pop
scas
ret
pop
cmpl
leave
and
out
adc
lods
pop
xor
sarl
out
adc
mov
jge
add
mov
shl
sar
pop
mov
mov
ljmp
jge
and
fisttpl
xchg
fs
aad
out
fists
adc
mov
ljmp
jae
jae
push
inc
lods
int
aam
mov
push
ret
push
bound
mov
loopne
push
or
subw
lods
and
mov
cmpl
jle
mov
xlat
inc
cmc
adc
ds
sub
jge
scas
cmp
lea
sub
shlb
push
add
xor
ret
lahf
jnp
imul
xchg
pop
xlat
push
insl
push
js
sbb
dec
cltd
cmp
add
pop
ljmp
inc
lock
mov
push
out
or
cmp
fsubp
in
out
jecxz
sub
sbb
cs
sub
adc
lods
add
cmc
in
jns
fcmovb
rcll
pop
cmpsl
pop
sahf
and
lea
cld
iret
bswap
jge
mov
sub
shlb
test
adc
sub
ja
imul
lcall
imul
mov
jnp
fwait
jno
dec
aaa
sahf
mov
lock
ds
cmp
sbb
call
cwtl
orl
and
mov
das
leave
xchg
int
push
xchg
mov
and
in
pop
into
mov
cwtl
inc
popw
dec
mov
adc
lret
int3
and
pop
leave
mov
push
pop
or
enter
xchg
inc
into
shll
lods
cmc
mov
push
jb
sahf
aam
pop
icebp
test
shl
in
bound
test
shrl
dec
cmp
out
fstpl
inc
jo
and
jp
push
lock
cmc
out
subl
fisubs
in
push
inc
xor
or
jno
test
add
or
mov
sub
jl
das
mov
nop
mov
jmp
mov
inc
mov
add
mov
jmp
adc
adc
fidivl
or
cmp
mov
fsubrs
inc
push
pop
or
iret
popf
std
gs
pushf
mov
mov
and
stos
loope
test
sbb
imul
add
dec
shr
sti
mov
inc
inc
mov
jae
jbe
lods
cmpsb
aas
enter
jb
ds
outsl
inc
jo
inc
sbb
stc
add
sbb
aad
dec
dec
mov
mov
stc
cwtl
stos
mov
in
test
mov
aam
jo
push
mov
jae
out
xchg
cmp
cmp
adc
shlb
mov
in
push
xor
cmpsl
iret
mov
mov
push
push
inc
sahf
xchg
iret
arpl
cld
imul
jle
ret
out
je
push
xlat
pop
add
sti
pushf
xchg
adc
nop
stos
stc
jg
ljmp
sbb
movl
daa
test
imul
out
push
jno
xor
lea
or
ja
stc
mov
push
enter
push
call
sub
lds
scas
lcall
xchg
lds
push
ret
jbe
popa
aaa
push
inc
out
mov
inc
pop
fadds
sti
cwtl
ret
push
cmp
lret
push
or
xor
lds
xor
out
sbb
lods
loopne
push
loopne
pusha
inc
cmp
outsl
insl
imul
jg
jmp
shrl
les
enter
std
push
xor
adc
movsl
in
xchg
std
inc
test
lret
call
cld
sbb
pop
pop
sbb
ja
sbb
inc
xor
push
mov
mov
cs
mov
mov
jbe
jl
sub
cli
cmp
push
mov
rclb
dec
mov
mov
es
in
je
dec
nop
and
cmc
inc
fisttps
cmpsb
pop
jg
repnz
fistpll
lock
in
cmpsb
sub
jns
lock
cmp
imul
sbb
xchg
sbb
sub
adc
cmp
cmp
test
scas
iret
test
adc
int3
mov
aad
add
sti
push
and
and
mov
xchg
jmp
in
in
xchg
add
cmp
lock
faddl
imul
push
jecxz
js
push
adc
or
sub
fisubrs
or
fildll
dec
fldt
sar
jne
dec
dec
cld
pop
pop
nop
ss
xchg
pop
out
fbld
mov
andb
sbb
xchg
or
fs
pop
inc
jno
mov
inc
xchg
aaa
les
scas
xor
outsb
jns
jns
fdivrl
movsb
or
jp
pop
in
je
push
push
idivb
xlat
pop
push
pusha
xor
jmp
or
pusha
jne
stos
test
mov
filds
shrb
mov
jb
movsb
jno
loope
cmp
ret
cli
insb
loop
adc
rorl
loopne
pop
push
rclb
aaa
cmp
xorl
in
test
push
pop
mov
mov
adc
sti
ljmp
adc
sub
jg
movsb
jno
je
mov
mov
fldpi
sbb
les
stc
mov
mov
lret
and
rorb
lods
lahf
iret
dec
mov
mov
add
movsb
jno
push
int3
bound
out
fnstenv
fcmove
lock
in
push
add
pop
mov
out
repz
pop
sbbb
lock
mov
movsl
xor
divl
sbb
cmp
jecxz
xchg
bound
ds
jb
addr16
call
mov
stc
cmpsb
xchg
adc
outsl
sti
or
testb
scas
sbb
or
xchg
pop
shlb
lahf
incl
shrb
push
and
pop
sbb
sbbb
insb
xchg
xorb
icebp
test
sbb
imul
inc
mov
jg
icebp
iret
ds
xchg
nop
pop
add
shll
inc
mov
sbb
pop
fldt
xchg
iret
dec
aad
sub
fs
fwait
dec
xor
mov
inc
insl
out
in
cmp
fisttpl
movsw
jno
insl
hlt
popf
stos
daa
outsb
daa
lods
sbb
faddp
inc
mov
jecxz
aam
in
mov
int
cmp
mov
imul
jp
push
cmp
xchg
jo
sub
rclb
mov
icebp
push
add
sbb
cmp
or
and
icebp
out
jno
jnp
popa
inc
ljmp
fcomps
mov
jmp
sub
or
pop
out
adc
aas
jo
mov
or
iret
loop
fbld
fdivrs
push
loope
fcoml
sub
mov
test
stc
in
cwtl
pop
cmp
pop
adc
inc
xchg
add
dec
inc
adc
add
dec
push
cmp
adc
pop
adc
idivb
mov
lahf
out
outsl
mov
imul
pop
or
pop
xchg
push
jnp
mov
adc
xchg
aad
pop
jne,pt
ret
or
mov
sub
stos
push
jle
sahf
cmp
movsl
lcall
mov
pop
mov
push
call
daa
mov
loop
pushl
stc
and
pop
dec
jne
stos
aaa
push
sarb
mov
test
pusha
sub
xor
mov
xlat
mov
popf
cs
lods
fstps
and
or
out
lock
cltd
cmp
inc
pop
fstpl
cmp
xor
sbb
pushf
das
insl
xchg
push
push
mov
dec
cs
adc
mov
cld
jle
inc
fisubrl
loopne
pop
jg
inc
out
add
or
outsb
fcmovnb
xchg
jl
cltd
iret
cmp
pop
mov
mov
cmp
mov
sbb
fbld
test
lods
lea
cmp
push
xor
mov
lcall
or
int
dec
jno
idivb
and
ret
mov
subl
sbb
sbb
lds
push
aas
push
cmp
pusha
pop
pop
mov
mov
adcb
mov
add
jecxz
ret
test
pop
mov
ffreep
loop
out
pop
jnp
sbb
pop
ret
pop
test
adc
xchg
xor
jge
repz
push
fsubl
int3
push
pop
insb
in
xchg
xor
jle
inc
scas
hlt
das
out
loopne
andb
sarb
mov
in
pop
ficomps
cmp
ret
xchg
pop
in
leave
cwtl
cmp
jl
movsl
mov
xor
inc
int
icebp
dec
and
ljmp
sbb
xchg
xor
adc
sarb
rorb
jbe
pusha
call
inc
cltd
mov
mov
sbb
into
cld
repz
in
hlt
adcl
adc
call
add
xor
rcll
into
mov
mov
in
jge
push
dec
or
test
cmp
or
pop
cmc
ja
push
fstpl
popl
jno
xchg
inc
stos
outsl
shrb
shll
mov
jg
ds
test
mov
sahf
mov
int3
sbb
ss
imul
pop
inc
mov
int3
leave
add
pusha
cld
outsb
mov
mov
dec
imul
mov
jbe
psraw
decl
cpuid
sbb
outsb
and
fwait
jp
pushf
in
jg
sbb
inc
jmp
dec
add
fcmovu
sub
mov
sub
add
jg
xchg
push
pop
fisubs
or
mov
cmp
xchg
jmp
adc
cmp
flds
aam
ret
dec
dec
cwtl
push
pop
mulb
hlt
sub
test
shl
jge
mull
shrb
add
jno
das
pop
test
inc
into
push
cmpl
fadds
inc
pop
sbb
pop
nop
inc
add
flds
call
jecxz
mull
dec
xchg
mov
orl
jae
push
inc
jge
sub
stos
xchg
mov
loopne
cli
lods
sarb
fisttps
and
ljmp
and
mov
dec
jmp
push
lds
mov
mov
scas
and
jge
adc
aas
jl
call
pop
js
inc
lea
sahf
sbb
or
ret
fmul
push
add
pushf
xchg
psubw
stos
cmp
int
test
push
xchg
dec
loope
mov
push
divb
sbb
outsl
pop
test
cltd
aaa
mov
mov
call
cmpsl
xchg
in
adc
scas
sbb
jge
pop
xchg
add
mov
pop
sti
jmp
sbb
pusha
sbb
mov
mov
mov
scas
cltd
sub
lcall
push
jmp
ljmp
or
inc
jp
hlt
inc
hlt
inc
loop
adc
and
mov
jne
sub
mov
in
into
inc
mov
xchg
adc
jb
or
mulb
inc
dec
pop
inc
test
in
pop
iret
aaa
push
or
xchg
pop
lahf
add
aas
and
cmpsl
negl
cli
repnz
mov
pop
xor
jo
lea
cmp
mov
fs
jbe
add
ds
arpl
xchg
mov
sbb
out
dec
sub
mov
loope
inc
in
nop
sub
and
push
xor
push
mov
inc
xor
inc
shll
jge
lahf
repz
adc
shll
xor
or
mov
fmuls
sub
test
push
jmp
pop
dec
rorb
sub
stc
inc
cmp
stos
pop
shrl
dec
xchg
xor
mov
push
mov
in
push
cmp
sub
lds
cmp
jp
push
arpl
lods
addr16
into
add
ret
test
cld
xchg
mov
mov
shrl
popa
out
test
xor
test
xor
add
fs
adc
sub
outsb
shrl
das
mov
xor
iret
xchg
std
movsl
cwtl
mov
adc
add
or
sub
mov
inc
imul
pop
fs
jno
push
movsl
xchg
into
roll
cmpsl
pop
mov
lret
mov
inc
int
scas
sub
adc
mov
lcall
pop
pop
sbb
cmp
and
xchg
push
loop
lods
inc
lea
outsl
out
jb
adc
inc
sbb
notl
and
push
out
aas
sub
mov
and
jle
and
dec
mov
push
sti
js
mov
mov
mov
ds
cmpsb
xor
aas
mov
popa
das
sti
rorb
rcr
or
popa
cmpl
out
cmpl
cmp
mov
inc
pop
loopne
in
cli
and
mov
nop
mov
orl
popa
mov
dec
out
xor
aam
jne
xchg
sub
adc
inc
sub
dec
sarb
cmp
lahf
inc
jo
popf
mov
lahf
lods
mov
andb
loopne
pop
lahf
lcall
pop
pushw
dec
mov
sarb
adc
jecxz
mov
push
xchg
ficompl
fdivrl
sub
fidivrl
mov
jnp
clc
loop
jns
xchg
sub
mov
pop
sub
adc
cmp
pop
popf
sub
fmul
jp
ret
mov
push
jmp
ret
jnp
rclb
sbb
push
or
or
fisubrs
jnp
adc
lods
iret
cmc
pushf
popf
pop
repnz
pushf
icebp
add
test
out
inc
aaa
inc
sub
push
mov
fs
add
cmpl
pusha
mov
shl
add
inc
push
xchg
mov
add
cmpsl
lods
xchg
cli
jle
jle
leave
clc
ljmp
and
sub
cmp
jne
lea
out
lret
dec
mov
dec
js
mov
inc
pop
jns
xor
xchg
inc
in
cs
sahf
rcr
stc
icebp
les
xchg
insl
cmp
iret
stos
idivb
or
ret
data16
lcall
movl
movb
movb
lea
jmp
jmp
jmp
push
pushf
popl
bt
xor
clc
xor
stc
xor
clc
test
xor
cmc
xorl
jmp
ret
setno
adc
adc
xor
inc
mov
cmp
call
and
mov
inc
jb
scas
int
out
add
int3
lret
test
js
or
movsb
es
sbb
nop
add
nop
mov
loop
and
movsb
rcrl
int
push
arpl
xchg
mov
dec
bts
loope
mov
dec
inc
cmp
inc
and
jns
jo
test
fs
ret
insb
mov
dec
insl
push
inc
bound
mov
xchg
lods
push
push
and
fs
ficoml
out
cmpsb
jmp
push
sub
mov
jg
cmp
adc
xor
sub
fdivl
or
pop
adc
adcl
flds
inc
sbb
pop
jbe
inc
jl
sub
mov
pop
mov
jle
add
fldl
int3
scas
cmpsb
push
std
inc
pop
ret
clc
push
adc
jmp
mov
sbb
pop
cmp
dec
push
mov
lret
inc
and
lds
nop
cmovne
adc
push
cmp
push
mov
rcrb
mov
cmp
inc
mov
movl
pusha
movl
lea
jmp
movl
pusha
pusha
movw
movl
push
movw
lea
jmp
inc
xor
add
pop
aaa
lds
mov
pop
jb
or
mov
repz
xor
sar
aas
pushf
enter
gs
test
cmpsb
or
mov
add
fwait
shl
pop
repz
fld
dec
jmp
fildll
nop
cmp
add
shlb
lret
cltd
daa
push
repz
jo
aad
cmp
fnstenv
outsb
fstps
jp
dec
ret
xchg
lock
movsl
into
icebp
push
mov
jbe
xchg
aas
js
ja
shll
and
hlt
addb
popa
fisubrs
sarb
pop
dec
out
shlb
ja
aad
jecxz
cltd
cmc
jl
je
popf
and
xlat
push
sub
testl
inc
or
in
shl
sbb
pusha
shr
pop
cs
aad
rol
xchg
imul
cmpsb
imul
psadbw
adc
mov
popl
stc
xor
jmp
push
movl
call
xor
cmp
bt
xor
push
pusha
xor
mov
pushf
xor
jmp
jmp
jmp
pushf
movl
movb
movl
push
push
lea
jmp
push
movl
pusha
mov
push
lea
jmp
push
pushl
movl
mov
movl
push
lea
jmp
pusha
movl
pusha
lea
jmp
pushl
popf
mov
pushl
ret
jne
cmpsb
xor
adc
outsb
mov
inc
mov
sub
mov
push
sbb
pop
jg
incl
ret
push
mov
push
gs
cmp
dec
cmpsb
push
ficompl
inc
scas
es
jne
add
cmp
pop
sbb
adc
inc
shr
out
mov
lods
lahf
jecxz
stos
in
aad
das
sti
imulb
xor
aam
jo
xor
push
hlt
stos
and
push
lds
or
jns
dec
out
ror
pop
and
xor
out
stos
bound
aad
icebp
test
sbb
out
daa
out
mov
shrb
in
jp
add
adc
lret
adc
sub
std
or
andb
pop
adc
mov
xchg
cmp
inc
mov
nop
mov
pop
pop
mov
fistpl
xchg
cmpl
dec
hlt
ljmp
cmp
sbb
lahf
sti
jae
fcomp
mull
dec
sarb
call
popf
jge
push
push
xorl
add
in
or
stos
mov
dec
orl
pop
cmp
cmp
mov
outsb
mov
js
and
icebp
adc
dec
push
popf
cmpsl
or
sub
push
mov
xor
in
push
dec
mov
and
push
xor
pop
sarl
ret
dec
cmp
aaa
and
movsb
cmp
cmc
push
mov
repz
rclb
hlt
adc
cmp
sahf
shrb
sbb
out
inc
lret
or
fildl
ja
mov
les
mov
and
testb
adc
ja
orl
sbb
jmp
insb
jmp
out
or
in
test
push
xor
jge
int3
mov
add
push
push
jmp
lea
pop
push
jb
cld
jl
loopne
clc
mov
cmc
rolb
xor
mov
push
fildll
xlat
xchg
ret
mov
jns
dec
jae
rolb
mov
test
mov
cmp
cld
and
fisttps
and
test
push
jle
int
ret
imul
xchg
cli
mov
popa
loop
mov
lahf
outsl
inc
sbb
jne
cmp
repz
popl
bt
test
xor
cmp
xor
pushf
xor
cmp
xor
test
pusha
xor
test
xor
test
xor
bt
bt
xorl
cmc
pushl
popf
push
pushl
ret
lea
jge
pushf
movl
call
pushf
stc
xor
cmc
jmp
push
jmp
pushf
movl
pushf
pusha
pushf
push
movl
pushl
push
pushl
lea
jmp
xor
cmp
test
xor
jmp
pusha
dec
cltd
xor
adc
push
push
shrl
aam
insl
mov
push
movsl
clc
inc
int
leave
add
sbb
loope
imul
fistpl
mov
add
add
dec
rcr
mov
je
insl
xlat
aam
sbb
in
aam
aad
daa
pop
or
movsl
sub
fwait
jae
dec
cs
cs
mov
mov
rep
and
sbb
cmpsb
sub
in
sar
imul
or
filds
adc
push
pop
push
push
or
scas
mov
ret
leave
xor
fisubrs
jo
in
in
scas
movsl
iret
test
add
imul
push
scas
inc
and
rcll
sub
decb
mov
out
pop
jae
cmc
push
data16
psrlw
add
gs
call
mov
test
inc
aad
icebp
push
lds
sub
fiadds
test
sub
fcompl
and
mov
dec
ss
out
sbb
stos
mov
adc
mov
push
lret
push
inc
mov
xchg
lods
mov
sbb
adc
loop
bound
nop
inc
jg
adc
push
mov
ret
push
movsb
stc
ds
cwtl
mov
mov
adc
xchg
inc
adc
mov
sbb
jne
stos
lock
dec
lods
call
hlt
adc
jge
jbe
push
test
and
jecxz
out
xor
push
rclb
das
in
jg
lcall
or
adc
jb
popf
out
jo
xchg
pop
dec
or
pop
and
or
cs
jp
mov
mov
mov
sub
jno
add
movsl
ja
sbb
mov
pop
xchg
ret
insb
call
and
pop
cmp
dec
mov
cwtl
insl
inc
sbb
inc
xor
leave
clc
cmc
clc
xor
push
xor
test
call
sbb
jmp
in
xchg
aas
stos
pop
xor
imul
or
sbb
loope
sub
movsl
lret
inc
inc
sbb
push
push
sub
aad
cs
ucomiss
shl
fsubrl
mov
je
sbbl
mov
xchg
pop
and
std
fwait
xor
dec
aam
push
ret
movsl
lret
ss
xchg
test
pushf
cmp
in
jo
test
fdivr
jecxz
xor
mull
cmp
sbb
flds
in
mov
testl
dec
inc
sbb
cld
imul
jbe
inc
pop
xor
insb
cltd
xchg
cmp
nop
mov
hlt
lods
inc
lret
dec
jg
jl
inc
jbe
or
lds
movsl
lret
push
push
xchg
and
adc
mov
imul
scas
sub
adc
adc
mov
mov
fxch
sahf
cmpsb
pop
jmp
negb
cmp
icebp
hlt
xor
jne
xchg
dec
dec
sub
pop
and
sahf
outsl
sbb
cmp
sbb
mov
out
popf
sub
add
pop
out
scas
decb
pushf
jbe
mov
fst
adc
xchg
or
xchg
faddl
mov
add
pop
cmp
cmp
dec
shlb
not
mov
cmpsl
es
xchg
out
sub
ret
jmp
mov
mov
xchg
and
pop
cmpsb
sbb
push
test
and
jp
out
adcb
stos
sbb
cmp
add
cmpsb
xchg
subb
jo
adc
test
and
add
jge
test
je
vaddps
and
mov
orb
loop
xor
outsb
inc
cwtl
fistps
icebp
add
cmp
fsubl
or
jo
ja
ret
cmpsl
mov
je
push
int
mov
shll
call
mov
and
push
push
xchg
sbb
arpl
inc
mov
mov
loop
xor
push
sub
or
push
push
fsts
cmp
je
mov
mov
data16
fcompl
xchg
jg
push
fwait
aas
and
dec
aad
popf
mov
xchg
jo
inc
lods
lcall
add
movl
mov
push
addr16
fwait
cltd
add
mov
or
mov
stos
dec
pusha
aam
mov
pusha
int
push
and
jecxz
mov
imul
add
fs
scas
xor
gs
inc
loope
cmp
ffreep
scas
adc
test
sbb
jecxz
dec
orl
sub
lcall
sti
inc
dec
sbb
and
mov
xchg
mov
mov
stos
sbb
xchg
rcrl
shlb
addl
shl
push
add
es
loopne
or
fs
int3
xor
push
popf
sub
xor
ret
out
lock
adc
cmc
jae
xor
adc
cmpsl
mov
scas
shl
sbb
mov
mov
mov
xor
adc
cmp
je
push
jge
xor
or
and
sbb
aas
shll
mov
cmp
jno
popa
loope
std
mov
push
lea
xor
loop
scas
inc
xchg
cmpsl
cmpsb
xor
inc
dec
mov
pop
pushf
and
lret
pop
push
jno
out
orb
adc
movsl
shr
push
xchg
stos
outsl
mov
fisubrl
inc
dec
std
mov
mov
mov
jae
dec
icebp
cmpsl
pop
int3
testb
mov
sahf
out
cltd
and
dec
add
mov
cmp
and
mov
cmp
std
add
loop
bound
pop
daa
pop
mov
imul
rorb
jb
rcrb
jge
mov
push
adc
shr
mov
aas
mov
fidivrs
xor
jecxz
sub
add
negl
test
lock
sbb
notb
xchg
cmpsb
int
cld
scas
and
pop
pushf
ds
xor
sbb
rcll
in
roll
cmp
cmp
mov
incl
cwtl
jbe
repz
into
jbe
push
xchg
cmp
out
jge
adc
jbe
icebp
cmp
bnd
mov
add
sbb
test
or
loop
push
jne
push
mov
jmp
lods
out
pop
add
pop
mov
repnz
fdivs
mov
sbb
rcll
shll
das
mov
pop
enter
enterw
cmc
roll
mov
adc
test
xchg
das
mov
dec
aad
ss
adc
incl
std
cmpsb
pop
cmc
inc
imul
int
cltd
pop
and
repnz
cmpsb
cmpsb
jmp
inc
std
test
bound
inc
outsb
lret
inc
mov
cmp
arpl
stos
or
outsl
pushf
iret
mov
pop
fistps
popf
sbb
repnz
int3
sub
pop
clc
jne
stos
rclb
inc
and
adc
sub
push
push
mov
nop
sidtl
xchg
and
into
adc
pop
or
push
daa
scas
das
out
lret
in
sub
add
sti
in
out
loop
pusha
gs
mov
push
push
mov
xchg
rorl
xor
xor
sub
int
test
sub
dec
mov
sub
pop
shrl
sbb
dec
cmp
fistpl
jns
inc
push
hlt
lcall
jb
cwtl
xchg
and
mov
adc
xchg
lds
xor
mov
pop
adc
jo
cmp
pushf
pop
cmpl
inc
lret
je
movaps
inc
cmpsb
or
daa
and
and
sbb
ljmp
sub
in
push
fs
push
inc
xchg
out
lock
push
mov
mov
xor
pop
ja
dec
cld
sbb
dec
pop
inc
ja
inc
xlat
clc
xor
cwtl
cmp
rcrb
inc
in
and
clc
call
cmpsb
cs
xchg
mov
shlb
nop
jbe
xorb
push
fimuls
mov
mov
in
mov
sub
inc
cmp
repnz
xlat
inc
pop
in
scas
xor
jae
mov
insl
cwtl
sbb
cmp
sbb
test
adc
ja
ljmp
jecxz
test
xor
bound
movsl
mov
mov
pop
add
add
lods
mov
test
imull
sbb
xchg
mov
rcr
fdivp
cli
xchg
jecxz
jno
data16
and
and
mov
loope
clc
aaa
fisttpl
mov
daa
fldt
cmpsb
mov
sbb
stos
repz
mov
mov
pop
int3
jg
test
mov
fsubl
fldcw
daa
jge
mov
fwait
pop
loop
push
stos
cmp
incb
inc
jge
adc
pop
pop
mov
imul
push
push
popf
sbb
sub
fadd
inc
in
outsb
jae
xor
iret
aam
add
ja
pop
lahf
in
mov
pop
adc
mull
add
sbb
fwait
cmc
push
adc
in
xchg
mov
fcomps
mov
or
sbb
rcrb
mov
adc
ret
je
call
push
lods
imul
dec
cmpl
out
mov
int
idivb
sub
fsubrs
jno
sub
mov
mov
pop
test
outsb
xchg
int3
jns
or
je
test
lods
jmp
cmpsb
jns
in
xor
dec
mov
sti
cmpsl
inc
leave
adc
mov
mov
mov
mov
mov
fdivrl
lds
ret
ss
mov
jbe
cmp
stos
push
hlt
int
stos
ss
pop
add
clc
adc
jbe
mov
pop
or
jl
scas
mov
jae
movb
jp
aad
xchg
popa
xor
shll
mov
push
idivb
mov
fcos
ljmp
or
rol
or
imul
outsl
mov
mov
mov
nop
sub
mov
scas
pop
push
test
inc
push
xchg
outsl
pushf
xor
iret
jle
inc
movsb
rcrl
andl
sub
jnp
mov
dec
sbb
cmp
mul
mov
pop
jl
mov
pop
lock
xchg
rcrb
loopne
ja
xchg
cmp
inc
bound
lret
fwait
push
or
mov
idivb
je
or
adc
cmp
pop
pop
pushf
xorl
stc
call
call
insb
cs
lock
mov
xchg
dec
aas
cmp
xor
jns
mov
sbb
lods
xor
ja
int3
js
xchg
add
xor
adc
cli
pushf
inc
out
pop
push
in
xchg
fs
std
ljmp
sub
dec
xor
or
mov
sti
les
sbb
pusha
sbb
int3
js
jnp
in
xchg
gs
filds
lahf
or
int3
add
xchg
mov
int3
pop
cmp
or
xchg
mov
inc
xchg
pop
fbstp
js
mov
std
push
adc
add
sub
pop
loope
sub
xor
shll
shr
jle
nop
cmp
mov
jno
imul
cmpsl
hlt
mov
int3
js
inc
lahf
xor
les
fists
fmuls
ret
js
mov
jecxz
and
sahf
pop
divb
mov
cwtl
outsb
aad
jge
aaa
leave
cs
mov
loope
jmp
and
imul
in
pop
jbe
repz
int
cmp
ret
jl
pop
aam
mov
subl
lret
leave
gs
adc
icebp
push
imul
pop
aam
lods
xor
into
lods
sub
aas
jbe
lods
gs
flds
push
sub
fmuls
cmp
xor
cli
decl
or
rorl
sub
cld
lret
xor
push
mov
leave
xor
or
ja
repz
or
popf
push
inc
jecxz
outsl
jb
lahf
rolb
mov
add
inc
and
mov
sti
inc
mov
ret
xor
aaa
jp
leave
insl
movsb
test
sbb
jo
cmpsl
mov
shrb
int
lahf
xor
push
push
xor
fstpt
mov
and
rclb
repz
sbb
imul
cmp
jge
xor
cmp
rol
mov
daa
movsb
mov
out
addr16
outsl
mov
xchg
dec
into
fstl
and
fcoms
in
lret
das
lret
rclb
push
or
cld
adc
ret
xor
mov
add
xor
mov
dec
fbld
push
ds
inc
pusha
inc
lds
push
dec
sbb
iret
mov
and
push
dec
into
sbb
jmp
xor
adc
jbe
cltd
sub
mov
aad
test
ret
dec
daa
fwait
and
pop
push
lcall
stc
aas
rclb
xorb
sub
test
add
pop
and
std
out
pop
fwait
push
fmull
add
cmp
ret
jno
outsb
push
and
bound
push
and
pusha
sbb
dec
push
sbb
out
mov
add
mov
rcll
enter
sahf
jbe
sbb
testl
xor
icebp
aad
mov
in
xchg
lret
dec
shlb
mov
rcrb
jmp
aas
pop
aad
xchg
sub
push
das
popa
pop
dec
rol
or
push
dec
cs
pop
popf
cmp
ja
push
adc
xchg
sbb
js
sub
mov
mov
push
and
pop
xlat
mov
or
addr16
mov
aad
adc
stos
lret
jnp
fwait
lcallw
mov
xchg
fsubrs
mov
lcall
adc
in
imul
add
outsb
pop
subb
enter
pop
sahf
ss
adc
add
inc
adc
xchg
xchg
sub
popa
notl
js
fs
js
pop
push
inc
sbb
and
adc
or
mov
das
lds
lea
loopne
mov
and
aad
and
nop
mov
mov
mov
xchg
adc
mov
sub
cwtl
jecxz
mov
inc
cmp
retw
out
movzwl
pmaxsw
lock
loopne
mov
cmp
int3
imul
gs
dec
sbb
jl
adc
and
fidivrs
dec
cli
movsb
mov
mov
clc
sarb
cmp
into
add
outsl
sub
jg
mov
add
push
mov
xchg
xchg
adc
xchg
daa
into
call
mov
xor
jb
test
das
mov
or
lea
mov
cmp
ret
pop
stc
enter
jns
inc
cmp
cld
mov
jns
inc
fcompl
decb
repz
neg
insb
dec
movsb
scas
pop
pop
pop
std
mov
jecxz
movsb
ret
leave
jmp
scas
sub
jae
inc
sarb
sub
mov
push
jbe
cld
test
adc
dec
aas
adc
outsl
xor
lods
decl
jnp
push
in
cmp
jno
sub
and
imul
shll
and
dec
mov
wbinvd
jle
sbb
cmc
addr16
lds
dec
push
aas
ret
out
pop
enter
or
mov
out
and
push
and
out
data16
adc
mov
mov
scas
sub
mov
imul
cmp
aas
mov
jle
scas
push
imul
mov
pop
jnp
mov
sbb
add
js
push
sub
and
dec
icebp
cmp
pop
fcmovbe
scas
jg
or
iret
mov
test
push
cld
call
xchg
and
push
inc
dec
cmpsl
test
daa
jl
iret
jg
push
sahf
sub
idivl
cmpl
insl
sbb
test
jg
or
popa
in
int3
mov
rolb
shrl
ficomps
xor
mov
jo
aam
lret
dec
mov
mov
pop
xchg
imul
mov
aad
mov
loop
xchg
shrb
push
insb
push
fmulp
sarl
push
sti
pop
sbb
daa
ljmp
aaa
ret
adc
testb
jae
add
sbb
dec
cmpb
das
mov
mov
xor
cmc
sub
sub
int3
das
dec
loopne
pop
sbb
push
xchg
dec
inc
ret
push
push
mov
fcomi
call
xchg
xchg
fnstsw
cmp
movzwl
leave
arpl
clc
loop
mov
or
push
mov
inc
aaa
mov
rcr
cmpsb
fs
lret
int
dec
repnz
adc
lods
sub
adc
and
repnz
leave
inc
neg
push
loope
loopne
cmpsb
popf
aaa
mov
popa
lea
aaa
testb
push
arpl
js
lret
and
ret
pop
neg
pop
lcall
andb
dec
sub
fwait
xchg
aad
xlat
js
hlt
jecxz
outsb
pop
xchg
data16
inc
mov
xor
dec
xor
push
adc
jecxz
xchg
clc
adc
xchg
pop
in
jb
pop
cmp
dec
dec
lcall
test
mov
pop
lahf
xchg
in
mov
in
xchg
gs
ja
pop
aam
mov
or
test
sbb
sub
mov
or
aam
cmp
lds
jno
push
call
or
add
int3
push
ret
dec
jae
cltd
cmp
icebp
mov
idivb
movw
pushf
pushf
movl
pusha
jmp
pushf
pushf
popl
jmp
pushf
pushf
movl
jmp
pusha
pusha
push
movl
pushl
movl
push
push
movb
movb
lea
jmp
jmp
fistl
and
insl
push
popa
sub
stos
stos
push
into
in
stc
push
adc
dec
loope
jle
xchg
sahf
aad
mov
xchg
ss
in
push
cmp
inc
filds
leave
loopne
dec
xor
sbb
sub
pop
popa
sub
cmc
into
int
lods
ljmp
notb
xchg
scas
push
cmc
pop
sahf
aad
iret
ret
mov
xor
adc
add
mov
mov
popa
sub
fdivrl
movl
pop
js
mov
icebp
xchg
cmp
fistps
mov
xchg
sbbl
mov
ja
negb
sub
enter
scas
into
inc
or
cmp
pop
addb
orb
xchg
push
rclb
movsl
sub
jmp
push
mov
bnd
lcall
dec
dec
popa
sahf
aad
push
inc
stos
mov
pop
pop
out
and
int
xchg
cmp
rorl
sub
std
inc
rcll
and
sbb
test
push
dec
testb
pusha
push
ret
ficompl
sbb
jle
out
sub
out
insl
mov
ret
lock
sub
jnp
add
jp
mov
cmc
jne
pop
cmp
outsb
dec
fistl
push
jge
inc
fnstcw
adc
imul
scas
popa
mov
and
mov
repnz
pop
aam
and
inc
xor
lock
dec
into
dec
int3
pop
lods
sub
pop
lret
clc
and
jo
push
xor
dec
mov
xor
repz
fcompl
dec
rolb
mov
xor
imul
jl
dec
xchg
fldenv
bound
mov
pop
popf
cmp
xchg
mov
test
rcr
bound
inc
dec
movsl
mov
add
les
push
cld
xor
iret
xor
cmpl
mov
call
pop
adc
ret
push
mov
xchg
inc
in
fstpl
dec
push
hlt
rcl
xchg
test
dec
push
fistpl
cmpsb
imul
fstpt
mov
pop
adc
jb
fstps
aaa
mov
rcrl
lods
adc
inc
jp
xchg
jmp
pushf
jle
jne
pushf
fsubrs
leave
pop
xlat
imul
fsub
std
push
add
xor
sbbb
push
std
repz
sahf
sbb
das
xor
add
fiaddl
xchg
pop
loop
push
lods
fdivrp
cmp
sbb
cmp
shll
pushl
jbe
cmpsb
push
jno
aad
into
xorb
ljmp
pop
mov
imul
mov
jge
sub
cmpsl
adc
adc
rorl
icebp
scas
sbb
daa
sub
and
mov
out
pop
fisubrs
movsl
jne
push
inc
xor
mov
push
jecxz
test
hlt
aad
stos
pop
add
sub
dec
mov
pop
stc
andl
and
pushf
stc
in
adc
cli
cmp
and
rclb
movsb
or
mov
dec
mov
push
mov
xchg
rcr
xor
nop
sub
aam
dec
enter
dec
push
pop
push
lret
pop
mov
out
roll
outsl
pop
cmp
lock
mov
lahf
bound
aas
and
xchg
jmp
xchg
stos
pop
add
adc
adc
insb
inc
ja
in
mov
or
mov
loop
pop
dec
xchg
ja
ss
into
cmp
cmp
gs
mov
xlat
ret
and
lahf
sub
movsl
fmulp
aad
sub
movb
inc
lea
lods
pop
sbb
cmp
test
popf
ja
aam
mov
and
or
cmp
xor
pop
les
jno
sbb
jbe
xchg
sbb
adc
xchg
push
jno
movsl
mov
in
aas
pop
or
jo
xchg
jb
testb
inc
cli
das
or
pushl
or
pop
jns
fdivp
in
xchg
sahf
fstps
pop
fstps
divl
mov
mov
cmpsb
push
mov
mov
push
out
pop
lds
daa
jge
push
pushf
jb,pn
dec
aas
push
daa
inc
mov
pop
pop
movsl
and
xlat
pop
icebp
add
cmpsb
loope
xor
or
fcompl
mov
je
jmp
rorl
sub
jae
aas
dec
test
inc
out
xchg
mov
or
mov
push
aas
cmp
sti
mov
sbb
inc
mov
push
loopne
aam
lret
push
fwait
lods
or
addr16
imul
dec
lds
jo
xchg
jno
imul
add
add
shll
lods
andb
movsl
js
shll
xor
mov
test
std
inc
aad
jnp
int
ret
mov
aad
leave
movsb
andb
cwtl
je
xorb
push
inc
or
pop
mov
lods
and
adc
lods
dec
mov
sub
movsb
sbbb
cwtl
sbb
fisubs
pop
push
popf
xor
adc
xchg
or
imul
scas
inc
rcrl
or
lds
imul
mov
lahf
sub
out
inc
cmp
out
sbb
rcr
mov
imul
inc
stc
por
dec
insl
inc
or
mov
arpl
imul
inc
mov
push
jmp
sub
adc
inc
lds
pop
add
push
jl
add
and
jle
jmp
addr16
repz
mov
fnsave
jno
xchg
mov
pop
jg
jb
inc
pop
mov
ror
addb
jl
sub
jae
mov
cwtl
leave
xor
cs
pop
xchg
rcll
mov
push
sub
cli
lret
ljmp
shll
inc
pushf
ret
sbb
iret
inc
out
sbb
loop
xor
jnp
lods
lahf
test
mov
inc
jmp
xor
sti
gs
add
jae
or
aam
mov
insl
push
mov
mov
ja
dec
out
enter
ret
or
daa
pushf
cltd
mov
xchg
jno
sub
mov
cmp
xchg
adc
repnz
pop
sub
imul
or
jmp
mov
inc
rcrb
ret
test
mov
pop
and
push
mov
or
inc
sub
pop
aam
icebp
jge
jbe
push
fistpll
adc
loopne
pop
jge
jecxz
call
in
ds
es
in
cltd
xchg
into
mov
pop
jmp
dec
push
std
cmpsb
dec
push
xor
ja
and
int
push
push
shlb
hlt
mov
pop
stos
fxam
shr
cmp
or
pop
out
sub
pop
cmp
outsb
mov
jl
lods
test
mov
inc
and
popf
push
popa
in
adc
mov
in
sub
push
push
hlt
pop
push
imul
jp
rolb
ljmp
lods
sub
dec
sub
popf
sub
mov
gs
jp
test
rcll
ja
mov
ficompl
xchg
rcrb
test
sarl
nop
mov
mov
pop
cmp
cmc
dec
inc
sarl
push
dec
mov
pop
in
jae
pop
repnz
mov
scas
dec
fnsetpm(287
xor
rcll
push
jle
inc
es
inc
push
lret
int
fidivrl
or
cmpsl
out
fcompl
test
aam
hlt
aaa
lret
push
pop
xlat
push
ja
cmpsl
jp
addr16
push
pop
movsl
rolb
lea
hlt
inc
ret
adc
cmp
mov
jb
outsb
cmp
shll
les
cmp
movsb
push
sti
pushl
cmc
clc
pushl
popf
pushf
pushl
ret
push
mov
jmp
pushf
pusha
movl
push
jmp
pushf
popl
call
pushf
pushf
popl
cmc
jmp
push
pushf
popl
cmp
pusha
xor
call
movl
pushf
pushf
jmp
xor
bt
pushl
popf
pushf
pushl
ret
call
call
pushf
pusha
pushf
popl
call
cld
jg
pop
fistps
jecxz,pn
jnp
sub
push
popa
mov
fildl
xchg
jno
stc
mov
ljmp
mov
push
inc
push
mov
lods
test
cmc
daa
test
lds
icebp
imul
clc
cmp
fcom
push
pop
movsl
sub
jns
push
clc
in
add
in
adc
pop
xchg
push
aam
cld
push
mov
test
fldenv
sbb
or
mov
push
mov
dec
into
loopne
arpl
cmp
mov
fs
cwtl
das
mov
and
stos
xchg
fists
in
and
mov
repz
cli
in
push
and
xchg
pop
mov
dec
jle
outsl
dec
mov
sbb
add
push
mov
xchg
rcrl
stc
and
mov
cmp
lods
dec
enter
packsswb
mov
jmp
pushf
dec
lahf
sub
lock
cmp
lcall
aad
ret
mov
mov
fistpll
scas
es
test
out
lods
push
jmp
lods
pop
push
xor
push
cmc
fcoml
mov
push
or
cmp
inc
insl
add
cltd
jbe
and
stos
xchg
sbb
mov
jl
sbb
dec
pop
lods
idivb
mov
jne
bt
xor
pushf
bt
xor
movl
cmc
xor
std
pushf
pushl
popf
pushl
push
pushl
ret
mov
mov
push
into
cld
mov
aas
xchg
in
jp
pop
sub
std
pusha
jge
adc
leave
testb
test
ret
aam
fmul
push
xlat
or
aad
xchg
movsb
loope
adc
gs
mov
pop
loope
out
cmp
pop
popf
cmp
imul
sbb
cmp
nop
xor
adc
addb
cmp
push
int3
push
mov
mov
rcrb
in
daa
add
and
sub
roll
inc
or
std
rcrb
icebp
mov
push
clc
jmp
je
add
movl
call
xor
movw
movb
xor
call
xor
stc
test
xor
cmc
stc
pushl
popf
movb
pushl
ret
pushf
movl
call
xor
call
call
mov
clc
aam
dec
in
into
aas
lock
repz
mov
xchg
addr16
lret
shl
mov
xchg
ret
aam
xor
mov
sub
popf
xchg
jb
jne
arpl
sub
dec
stc
cmpsl
shr
into
ds
mov
lahf
and
ret
int3
sbb
add
xor
jl
xchg
fcompl
loope
out
test
fldt
jle
cmpsb
clc
push
or
cli
insl
push
aam
fiaddl
pop
dec
adc
ror
ret
loope
jle
in
sbb
mov
mov
js
aam
into
jns,pt
inc
int3
lahf
fiaddl
subl
scas
ja
mov
rclb
sahf
pop
pop
lock
cmp
dec
push
ss
aam
adc
rorl
movsl
inc
shrb
push
mov
in
leave
outsb
add
fcomps
das
add
add
dec
and
pop
inc
mov
clc
fimull
iret
leave
add
arpl
pop
jne
insb
mov
loopne
or
shll
leave
add
xchg
push
add
lds
push
in
iret
je
mov
or
imul
mov
pop
adc
sbb
loop
jns
les
in
dec
mov
push
cmc
xchg
jl
decl
movswl
dec
loopne
das
mov
sub
ds
mov
popf
mov
jne
mov
popf
and
jnp
ficompl
add
xor
sub
repz
subb
sub
inc
lds
in
rcrl
les
leave
shlb
pop
insb
imul
fs
cmpsb
out
mov
adc
enter
aaa
leave
or
adc
sahf
xor
xor
push
mov
mov
xor
inc
lods
out
mov
pop
fnsave
data16
cmpsb
cltd
test
push
rolb
int
js
dec
in
aaa
inc
in
js
test
out
stos
cmpsl
jg
out
jae
inc
mov
cmp
sbb
adc
pop
pop
stos
pop
or
push
aam
rcrb
mov
pop
in
iret
add
cmp
cld
and
ficomps
xchg
xlat
jno
sbbb
fidivl
lret
pop
fildll
jl
pop
in
inc
jmp
add
dec
rclb
xor
adc
addl
addr16
imul
mov
outsb
les
dec
std
lock
int
push
jp
scas
push
push
je
xchg
dec
mov
ljmp
dec
mov
out
push
ficoms
pop
rcl
in
mov
enter
pop
mov
jmp
imul
sub
icebp
hlt
ret
sbb
cmp
outsb
jo
test
mov
mov
lods
cmp
stos
sbb
lods
jb
push
inc
sub
lahf
daa
pop
push
out
fcmovne
push
xchg
in
or
inc
cmp
mov
xchg
xchg
or
jle
movb
popaw
dec
loopne
cwtl
lret
rcrl
push
notl
mov
cmp
cmpsb
outsl
or
mov
or
jb
loop
inc
mov
pop
stc
cltd
cmp
sub
les
insl
push
shrl
mov
movl
jmp
add
push
jbe
add
sarl
outsl
jne
or
ret
push
test
aaa
in
jb
jmp
in
or
addl
rolb
push
add
jecxz
addb
in
jae
push
or
push
icebp
inc
inc
sub
jns
xor
addr16
sbb
test
push
leave
xchg
shrl
sub
sti
add
add
mov
adc
cmp
add
out
sbb
pop
xchg
js
dec
sarb
loop
mov
jl
and
pop
xchg
push
popf
cmp
cmc
loope
aad
push
pop
cmp
push
sti
mov
xchg
jbe
out
add
int
out
cmp
loope
rorl
sub
jns
out
fwait
cs
stc
mov
das
fs
push
adc
cmp
and
add
and
add
outsb
enter
or
adc
adc
or
xchg
xlat
arpl
out
jns
ret
jl
push
xchg
shr
mov
rolb
add
repnz
mov
sub
rolb
rorl
out
xor
cltd
shl
ficompl
push
les
rcl
push
push
daa
and
pop
xchg
ja
jle
adc
push
mov
add
mov
jecxz
adc
into
mov
cmp
in
lret
and
adc
stos
stc
loopne
inc
push
int3
out
add
lea
subl
jl
repz
out
jnp
jle
inc
cwtl
mov
mov
and
sbb
stos
andb
loope
fisubrl
fldcw
cmpb
sbb
out
in
mov
lahf
in
sub
xlat
pop
cld
xchg
or
stc
sbb
int3
mov
xchg
jne
ret
adc
movsb
lods
lret
add
pop
ss
and
xor
aaa
xor
inc
jb
cmp
sbb
rcrb
jnp
in
mov
rolb
xchg
shlb
inc
lret
std
mov
mov
data16
xor
push
lea
insl
sahf
jl
outsb
push
leave
hlt
sub
dec
fiadds
outsb
inc
clc
push
sub
in
aaa
popf
add
mov
cld
push
or
push
fisttpl
pop
or
aaa
lods
cvtps2pd
mov
iret
xchg
mov
fstps
inc
push
mov
and
adc
cld
add
jno
into
jl
aas
pushf
mov
or
ret
sahf
and
jp
dec
dec
mov
add
push
test
pop
mov
mov
mov
pop
ja
stos
fcoms
je
psubsw
push
sti
xorb
lods
mov
stos
jns
aad
mov
das
and
jae
rcrl
dec
sbb
hlt
jecxz
xor
add
or
shrb
cs
aaa
rolb
xchg
push
pop
cmp
jne
insb
push
inc
scas
roll
cmp
dec
enter
sbb
dec
popf
pop
ret
mov
into
add
push
insb
out
mov
add
cmpl
mov
pop
addr16
xor
add
cwtl
add
out
mov
pop
cmp
or
pop
cmp
sbb
cmc
ja
test
push
icebp
daa
and
or
sahf
insb
lahf
in
test
pop
stos
inc
jo
aad
fcmovne
pop
push
xchg
xor
mov
subb
repz
inc
xchg
lods
pop
or
inc
xor
inc
or
jle
movsb
lret
sub
fsubs
adc
pop
add
xor
scas
mov
ficoml
jne
das
repz
aam
push
mov
out
xchg
jns
test
aad
lods
xchg
mov
lea
xlat
fcomp
test
es
popa
push
mov
inc
jp
rolb
push
adc
ficoms
or
scas
cmpsl
outsl
idivl
popf
shrb
loope
mov
dec
inc
push
inc
rcrb
ja
mov
ss
insb
movsl
jno
aam
push
inc
cmp
addb
repnz
loopne
shrl
cmp
jb
lods
dec
fisubl
jmp
inc
in
icebp
clc
or
cmc
cmp
pop
cmpl
sub
dec
int3
xor
inc
push
mov
xchg
pop
stos
inc
loope
jmp
cmp
lret
pop
lock
and
mov
test
movb
pushf
jmp
pushf
pushf
pushf
movl
pushl
movw
jmp
pusha
movl
lea
je
push
pusha
pushf
lea
jmp
pushf
pusha
pusha
movl
pushl
push
call
xor
cmp
clc
xor
clc
xorl
bt
xor
test
test
xor
jmp
call
pushf
movl
jmp
xor
bt
xor
pushf
clc
xor
call
lahf
push
jns
mov
int
in
ficompl
and
sbb
repnz
mov
mov
cmp
fneni(8087
xor
cs
rclb
xchg
pop
jnp
flds
jae
mov
jle
inc
aad
jo
jp
push
fdivl
sub
dec
xor
jp
int3
test
in
movsb
push
push
and
mov
lods
sub
nop
dec
push
popf
jne
roll
xchg
or
and
cli
fwait
pop
outsl
mov
mov
cwtl
lds
out
pop
rcl
adc
insb
add
and
fcompl
repz
xor
fmulp
push
orl
mov
push
add
jnp
mov
xor
shr
and
outsb
shll
in
mov
xchg
bound
and
fiadds
jbe
jge
cmp
adc
in
cs
xor
cmp
popf
and
mov
xlat
mov
pop
sub
xor
adc
ja
sub
mov
sub
pop
das
pop
mov
jb
das
and
adcl
js
test
xor
unpckhps
inc
outsl
movsb
inc
sub
dec
adc
fsubs
mov
inc
mov
mov
lret
clc
mov
push
out
push
inc
aaa
pop
or
xchg
dec
js
jae
aas
lds
bound
dec
icebp
ljmp
ja
mov
mov
push
loopne
push
repz
jbe
flds
or
cmp
xchg
popa
xor
js
cs
in
jns
ret
testb
xor
aas
xchg
push
mov
and
arpl
inc
filds
aad
inc
hlt
mov
jno
rolb
xor
push
div
rorb
mov
shlb
je
hlt
mov
lock
xor
test
mov
nop
mov
inc
insl
dec
lea
sub
mov
pop
int
icebp
or
ret
ds
out
adc
hlt
rcll
dec
or
or
int
sarb
pop
and
cmp
shll
scas
mov
idivb
scas
xor
cli
enter
popa
stos
decl
in
mov
test
test
or
sbb
aam
insb
loop
lret
sarb
aad
into
sti
test
xor
jg
cltd
adc
xchg
sbb
aas
mov
loope
jne
sbb
mov
idivb
or
cmp
mov
xchg
out
decb
push
mov
ret
cmp
mov
mov
mov
sbb
pop
ficompl
or
adc
xchg
addl
xor
sbb
push
sbb
hlt
into
adc
add
out
fwait
or
incb
sbb
inc
pusha
mov
repnz
fdivs
movsb
sbb
into
push
popa
pop
sub
cltd
les
mov
mov
mov
xor
inc
sub
fldcw
rdpmc
bnd
adc
mov
xor
shl
lods
cmp
or
pop
loope
lret
js
loop
xchg
and
lret
outsl
jbe
mov
fimull
cmp
aam
out
mov
sbb
adcl
lds
sti
test
clc
out
in
fistl
cmp
cli
jl
mov
int
mov
fnstenv
and
lret
sbb
movsl
mov
dec
pushf
cmp
je
adc
outsb
mov
test
push
pop
ljmp
popw
cmp
xor
inc
or
jmp
or
orl
pop
clc
int
addr16
adc
aas
rolb
test
jo
cli
fisubrs
into
mov
cmp
popa
pop
xchg
adc
jge
sub
outsb
ljmp
jae
enter
into
daa
ds
mov
ljmp
loope
test
or
es
into
xchg
fwait
inc
pop
and
mov
imul
call
add
push
fdivrl
addr16
int3
mov
and
out
xchg
xor
push
movsl
and
sub
cmp
rorb
nop
inc
mov
push
incb
rolb
jno
mov
xlat
les
les
inc
ret
inc
mov
rorl
fisttps
sbb
mov
sbbb
or
mov
loope
mov
xor
insl
lods
pusha
sahf
movsl
insb
inc
testb
dec
push
add
fcmovne
sub
test
test
std
push
lods
or
and
xchg
inc
iret
push
pushf
cmp
lods
cwtl
push
shrb
mov
and
dec
or
and
adc
pop
imul
pop
mov
mov
lods
mov
js
daa
sahf
mov
mov
mov
xor
and
das
jg
out
sub
gs
push
and
scas
add
daa
mov
call
push
ss
xlat
cltd
or
xchg
es
sbb
lahf
pop
xchg
sbb
cmp
sub
mov
adc
dec
xchg
sub
jbe
jmp
sar
pop
dec
shlb
dec
into
popf
or
lahf
call
arpl
adc
push
cmp
xchg
jns
popf
je
loop
pop
stc
js
inc
int3
jae
insb
xchg
std
out
cmp
mov
adc
xchg
sbb
sbb
ret
inc
dec
cwtl
leave
rcrl
fsubrl
daa
or
jns
jo
mov
ret
jno
inc
sbb
ret
stos
xor
and
cli
sarb
in
enter
shrl
outsb
lods
xchg
xor
aam
push
sub
fadd
push
inc
iret
mov
std
call
adcl
lock
push
xchg
out
sbb
lea
pop
push
mov
repz
add
sahf
add
mov
inc
mov
cld
ljmp
fbld
in
mov
mov
idivb
adc
les
pusha
xor
pushf
clc
xorl
mov
xor
mov
xor
test
cmc
xor
test
xor
pusha
mov
pushl
popf
pushf
pushl
ret
fwait
pusha
cmpsl
cmp
mov
fwait
repz
lods
mov
movsl
sub
shl
add
or
movsb
mov
sub
lea
shrl
push
jmp
aas
fs
fidivl
inc
pop
add
jle
dec
je
vcvttps2dq
mov
gs
stc
jecxz
mov
or
movsb
mov
es
mov
clc
inc
dec
insl
scas
pop
in
pop
ss
cli
pop
inc
xorl
mov
adc
sub
add
aam
pop
pop
outsl
cltd
adc
xorb
add
or
pop
inc
ret
inc
imul
adc
add
inc
lds
push
leave
dec
fsub
sub
or
insl
popf
lock
incb
stos
fcmovne
mov
dec
push
mov
bound
or
orb
sub
sub
cmp
enter
push
or
fsubs
push
rorl
lcall
cmp
ret
inc
rcrl
push
push
loopne
cltd
adc
mov
aam
xor
ja
fwait
pusha
mov
sar
pop
stos
dec
rcll
test
stos
insb
dec
les
out
add
scas
sbbb
scas
or
mov
xor
xchg
ret
or
mov
sub
mov
mov
mov
mov
clc
into
pop
pop
ljmp
rcll
punpcklwd
fdivrl
popa
mov
or
jbe
lods
mov
mov
ja
ljmp
push
cmp
fs
sub
adc
movl
out
pop
or
dec
cmp
test
xchg
and
inc
push
lahf
sahf
jno
outsl
in
jmp
mov
test
add
jns
or
out
add
stos
jmp
rcrb
mov
sub
imul
add
enter
stos
loope
fnsave
enter
dec
bound
enter
push
rorl
cwtl
jmp
xchg
and
hlt
in
inc
in
andb
sub
sub
arpl
xchg
fmuls
xchg
jl
popa
lea
inc
lret
clc
mov
lock
ficoms
cmp
push
xorl
dec
aad
clc
mov
ds
push
dec
mov
jo
insb
pushf
push
jmp
or
and
dec
aas
fnstenv
or
adc
sub
sub
mov
lcall
and
xchg
fs
jl
push
dec
vaddsubps
inc
and
jne
pop
test
pop
lock
push
scas
enter
mov
jge
arpl
xchg
inc
imul
push
lea
cmp
cmpsl
lcall
addr16
leave
in
inc
loope
movsl
xlat
xchg
psrld
add
icebp
lahf
mov
sub
inc
cmp
aaa
sub
and
add
repnz
rorb
sbb
les
xchg
jp
lcall
mov
xor
xor
push
xor
mov
sub
sbbl
cmp
mov
scas
in
jb
movb
icebp
fs
or
and
push
mov
dec
fisubrs
add
mov
pop
into
ljmp
mov
bound
js
and
adc
and
mov
or
add
jl
aaa
cmp
outsb
fwait
mov
push
fcoms
das
mov
adc
das
test
std
enter
scas
sub
inc
jno
in
xor
ljmp
fwait
pop
mov
loopne
mov
adc
add
fcmovb
test
mov
orl
es
mov
jb
pop
loopne
or
addb
and
adc
add
mov
imul
sub
xchg
jp
inc
and
jne
sti
clc
lret
std
and
sti
dec
xor
jg
pop
adc
sub
and
mov
adc
push
aam
mov
mov
mov
sub
ss
test
sti
out
ret
mov
ret
xchg
shll
ret
jecxz
dec
rclb
sbb
fs
btc
sub
leave
cmp
fldl
push
frstor
imul
push
jo
rep
fldl
sub
out
sub
xor
stos
push
in
out
icebp
out
sub
cwtl
jle
int3
cmp
and
outsb
stos
xor
pop
bound
in
mov
imul
insb
sub
loop
push
inc
roll
jge
aad
mov
mov
fisubs
stos
lret
fwait
or
test
add
int
fiaddl
cmp
push
fcmovnb
pop
jecxz
sub
in
jb
out
inc
dec
ss
leave
add
shl
mov
gs
es
and
cmp
movsb
pop
and
test
and
and
add
xchg
jbe
dec
popa
lods
push
lds
mov
sbb
es
lods
addr16
sti
test
pop
jl
pop
add
bound
aam
inc
cmp
in
imul
out
mov
in
std
mov
adc
aaa
dec
lds
or
dec
xchg
or
lds
pop
movsb
sbb
shll
jnp
aas
hlt
and
pop
in
test
and
jg
xlat
sbbl
sbb
mov
popf
stos
xchg
and
mov
call
jl
or
cmp
ljmp
data16
aas
nop
subl
add
int3
cmc
jecxz
adc
mov
adc
push
jecxz
inc
jne
pop
jb
adc
arpl
test
add
call
frstor
lods
sub
ret
mov
int
or
cmc
rolb
dec
in
push
push
jne
in
pop
or
inc
out
in
dec
adc
fadd
stos
adc
repz
cmp
call
jnp
adc
mov
lcall
call
fidivrs
out
mov
out
pushf
adc
dec
rcrl
jge
lahf
mov
and
sbb
mov
xchg
data16
fstl
repz
iret
push
xchg
sub
or
sbb
and
dec
xor
mov
jg
mov
repnz
push
jne
push
ds
je
and
add
fsubrl
inc
inc
dec
cmpsb
mov
pop
sahf
lea
push
testl
xchg
adc
jnp
call
in
sub
push
mov
xchg
jmp
adc
mov
fadd
iret
jp
shr
cs
jbe
sbb
gs
ret
inc
in
insb
add
popa
fldt
mov
or
ds
ja
adc
cmc
xor
in
aam
inc
mov
ljmp
lods
mov
mov
pop
jns
pop
mov
add
cltd
cmp
movsl
pop
fldl2e
sahf
in
pop
lods
or
cs
adc
iret
popa
out
scas
in
dec
out
ficomps
movsl
sub
xchg
cld
add
mov
mov
je
mov
jmp
inc
adc
cmpsb
or
sub
cltd
xchg
ficomps
sub
xchg
repz
push
fs
mov
clc
push
mov
adc
add
push
orl
aad
out
lods
xlat
or
shlb
and
mov
mov
ret
mov
inc
pop
aam
cmpsb
es
xchg
aad
in
orb
test
inc
insl
insb
xchg
mov
mov
sub
out
loop
mov
shl
out
and
out
fiaddl
test
push
in
insb
push
std
xchg
cld
enter
cld
out
mov
icebp
add
js
out
mov
sub
cmp
mov
aad
mov
mov
cmp
shll
push
aaa
jb
je
add
jge,pt
fldt
xor
loopne
stc
test
jbe
ds
ficompl
negb
ret
addb
inc
nop
and
cmp
imul
icebp
sbb
data16
mov
jns
mov
sahf
push
xchg
dec
or
sbb
out
inc
push
xor
ficomps
cwtl
gs
out
sti
xor
adcl
push
ror
sbb
fldenv
outsl
and
push
rcll
dec
lds
add
mov
in
das
data16
xlat
out
cmc
xor
xor
xor
push
xorl
and
iret
push
cli
repnz
shrb
inc
xor
mov
adc
mov
clc
xchg
jnp
jne
jecxz
xchg
scas
inc
pop
int
pop
push
xchg
jecxz
pop
xchg
add
inc
into
scas
pop
adc
lret
and
data16
adc
mov
dec
scas
cmp
into
add
cwtl
cmp
jge
int
cmp
or
scas
jmp
add
test
mov
enter
and
lods
inc
sti
mov
push
out
xor
jae
mov
mov
add
mov
jns
out
add
das
xchg
jle
testl
adc
jecxz
sub
pop
add
push
mov
outsb
rclb
ret
push
lods
sbb
scas
xor
inc
int3
in
cli
insl
bound
sub
cmp
and
xchg
jl
mov
in
push
adc
ja
ja
cli
mov
jp
loope
jg
inc
rcrb
daa
sbb
test
push
js
jecxz
push
pop
and
push
mov
pushf
sahf
lods
xchg
out
data16
cmp
xor
push
lcall
ljmp
mov
push
pop
inc
sarb
xor
scas
rorb
mov
xor
pop
xor
mov
inc
ret
sarl
or
mov
or
xchg
adc
xorl
push
pop
inc
sub
lods
ds
mov
xchg
mov
sbb
ret
dec
adc
imul
cltd
js
mulb
sti
xor
jae
into
dec
cltd
cs
xchg
sbb
pop
dec
call
setle
mov
data16
aad
push
idivb
and
push
movl
pushf
pushf
movl
pusha
push
pushf
movw
lea
jmp
jmp
push
movl
pushf
pushf
movb
pushf
lea
jmp
xchg
nop
aad
loope
xchg
sbb
repz
out
fisubrl
inc
pop
stos
push
subl
jp
xor
xor
ud2
sub
sbb
lods
std
inc
dec
shrb
xchg
jp
lock
fs
mov
cmp
xlat
sbb
push
repz
and
jbe
test
daa
es
movsb
lock
or
pop
pop
jmp
pop
jle
cmp
mov
push
add
sti
in
jg
pusha
aas
scas
iret
push
subb
sbb
idivb
sbb
dec
cmp
ja
shr
jnp
daa
pop
jg
testl
repnz
xlat
sbbb
sbb
push
dec
aas
testb
jbe
pop
loope
cmp
or
ret
dec
ljmp
xchg
gs
mov
in
and
and
cmp
mov
mov
xorl
push
in
xchg
dec
jp
sahf
mov
hlt
jl
dec
js
inc
call
and
daa
popa
xchg
lcall
aam
das
ret
sbb
inc
jle
lods
movsl
data16
cmp
out
and
dec
xchg
push
popa
inc
rolb
add
fmul
xor
sub
lcall
fistps
adc
jecxz
popa
hlt
pusha
mov
jmp
int
aad
rorl
inc
lods
hlt
mov
sbb
jg
sahf
mov
leave
mov
enter
js
hlt
jno
adc
int3
dec
mov
movd
inc
adcb
cmpsb
cltd
nop
leave
push
add
cmp
mov
jb
loope
int
and
mov
repz
cs
and
rcrl
aam
jg
ja,pn
shr
jne
mov
mov
mov
jg
xchg
fdivl
hlt
xchg
push
cwtl
cltd
lcall
nop
and
int3
movsb
jnp
and
mov
ret
sub
push
push
lcall
fwait
push
out
ret
and
inc
inc
scas
sub
pop
push
pop
adc
mov
or
pop
ljmp
movsb
mov
push
ficoms
pop
out
fwait
int3
je
sub
push
repnz
add
daa
pusha
mov
cmpsl
sub
pop
mov
xchg
mov
mov
fisttpll
loope
ljmp
pop
add
movsb
cmc
cmpsl
xchg
mov
or
fistpl
pushf
mov
sub
jnp
sub
pop
in
jne
mov
ljmp
xor
popf
jg
fsubl
imull
cmova
jl
or
xor
and
call
hlt
push
cli
mov
ret
les
inc
leave
sbb
outsb
mov
fnstenv
fsubl
in
inc
inc
push
or
jnp
inc
and
test
gs
loop
call
cmp
add
jl
xchg
fcmovnbe
sbb
cltd
das
data16
push
and
cmc
adc
sbb
add
out
pop
mov
and
dec
in
cmp
mov
movsl
lock
pushf
inc
cmp
cmp
repz
pushf
dec
or
push
test
mov
inc
pop
mov
or
jne
and
dec
sbb
push
and
dec
jg
sbb
and
icebp
insb
das
mov
jo
clc
inc
enter
dec
inc
fs
add
in
cmpsl
inc
int3
xor
imul
fwait
pop
jl
mov
adc
mov
out
data16
loope
pop
sub
adc
lock
cld
sbb
faddl
std
mov
jnp
or
in
int
dec
mov
outsl
mov
dec
popf
adc
xchg
xor
ret
xchg
adc
or
fs
fwait
cltd
sarl
sbbl
fnstsw
push
fdivrp
jbe
andl
idiv
addr16
sbb
pop
fistpl
movsb
push
push
sub
popf
xor
xchg
loope
xor
sub
out
nop
mov
js
mov
xchg
push
dec
jns
movsb
call
add
xor
sbb
fistl
int
pop
leave
mov
push
inc
lea
lret
fcoms
pushl
fstpl
subl
ds
ja
xor
addr16
or
lcall
aas
addr16
shlb
cmpsb
and
lahf
sub
push
xchg
dec
lcall
push
out
or
in
mov
clc
sbb
jg
mov
and
jo
push
aam
push
test
dec
sub
test
and
fs
cmp
cmp
fbstp
test
push
sub
inc
jmp
jns
clc
push
push
pop
dec
jecxz
aad
and
cmc
out
pop
jp
jno
cmp
adc
adc
imul
or
test
js
lret
inc
loope
push
sbb
jb
ffreep
loopnew
mov
jno
in
ljmp
in
xor
adc
aaa
mov
xorl
lock
mov
mov
inc
mov
pop
andl
pop
faddp
dec
mov
or
pop
or
fldcw
and
push
pusha
add
jl
movsl
in
mov
adc
loop
push
in
cwtl
dec
mull
jbe
iret
lds
int
arpl
cmp
jo
xchg
or
bound
lods
lods
pushf
stc
push
notl
push
cltd
adc
popa
xchg
sbbb
gs
dec
shrb
inc
dec
repnz
sbb
sti
adcl
pop
mov
movsl
inc
push
filds
mov
mov
mov
mov
outsb
icebp
xor
lret
fmul
mov
daa
add
xchg
push
or
pusha
lock
push
jmp
hlt
pop
jnp
jle
push
les
mov
repnz
mov
mov
pushf
cmp
sahf
xor
divb
cmc
in
mov
or
and
arpl
aas
mov
mov
pop
hlt
sahf
addr16
adc
outsb
cltd
lds
mov
dec
fcoms
pop
or
sbb
or
pushl
lcall
mov
aad
lds
loope
loope
fnstsw
inc
jae
insb
call
insb
hlt
mov
sbb
sub
mov
aad
cmpsl
inc
sbb
cmp
dec
adc
daa
aas
fstpt
das
push
clc
jle
setno
inc
in
adc
lods
js
xchg
aad
lcall
mov
dec
lret
ja
sub
jnp
add
sbb
sub
add
lea
jle
int
and
mov
cvtpi2ps
int3
sub
sub
cmp
mov
fcomip
and
dec
leave
cmp
outsb
stos
cmp
push
xlat
pop
pop
mov
jl
nop
popa
pop
dec
lods
pop
dec
xchg
or
fstl
add
out
lods
les
mov
cld
loopne
sbb
aad
test
dec
hlt
orl
cmp
xlat
call
dec
jg
setle
mov
sarb
outsl
add
lcall
movsb
pop
out
xchg
lods
out
scas
cmp
mov
ss
int
cmp
cmp
shlb
int3
imul
out
loope
cmp
hlt
jge
push
repz
dec
cmc
and
test
push
rcr
repnz
cli
lods
daa
into
push
xchg
sbb
lret
push
ja
mov
repz
sahf
fstps
lcall
jno
ja
in
mov
in
iret
push
stc
js
std
push
jg
dec
cmp
arpl
push
rcll
cli
or
loopne
cld
add
lcall
scas
and
xchg
decl
ljmp
iret
in
push
and
out
cmc
mov
or
lock
jl
and
test
pop
ja
pop
xchg
hlt
and
cmc
xchg
cld
addr16
mov
add
xor
jne
push
ljmp
movsl
mov
jnp
test
ret
movsb
lods
lcall
mov
add
lods
add
add
ss
dec
mov
das
dec
sub
lods
and
scas
test
outsb
or
or
adc
add
fwait
ds
xor
fldt
xchg
hlt
mov
pop
rcl
sub
shrl
mov
incl
stos
push
push
test
push
fwait
push
push
fldl
out
lcall
sub
aaa
mov
popa
jne
fmuls
sbb
pop
lea
jno
cli
sbbb
cli
in
mov
imul
cmp
add
popf
pop
sti
mov
pop
orl
xor
out
jge
push
sub
js
and
sti
lcall
mov
push
sahf
and
fadds
mov
andb
ja
jae
sub
out
scas
out
pop
xchg
fcomip
imull
add
jmp
test
jle
std
orl
jle
push
icebp
jmp
jecxz
repnz
jg
pop
or
shlb
shrb
or
flds
std
dec
cmpsl
icebp
jmp
jnp
iret
sbb
in
push
mov
inc
xor
jbe
xchg
add
dec
iret
mov
cmp
outsl
xchg
enter
jg
clc
adc
xlat
bound
sti
xor
jbe
ret
xor
mov
mov
test
loop
sbbl
cltd
call
jmp
jb
push
movl
pusha
call
xor
cmc
cld
pushl
popf
movb
mov
pushl
ret
pushf
popl
cmp
xor
pushf
xorl
mov
xor
clc
xor
cmp
pusha
xor
cmc
xor
call
pop
ss
out
xor
jbe
push
enter
add
sbb
addr16
rorl
sar
loop
xor
jns
pushf
ret
fmulp
fcomp
or
jg
fnstenv
pop
xor
cmp
insb
ret
and
mov
pop
mov
push
or
mov
je
pushf
jno
ljmp
pop
push
lea
stos
mov
ss
jp
mov
test
jbe
and
dec
ja
jbe
push
enter
pop
mov
push
mov
or
push
xchg
xor
add
scas
inc
push
fs
and
mov
outsl
mov
enter
inc
inc
in
int3
jg
sbb
ds
mov
jbe
mov
ss
lods
xor
rorl
lahf
fs
lds
mov
sbb
or
or
clc
sub
mov
jmp
sub
xor
adc
xorl
mov
add
test
in
mov
fistpl
sbb
inc
leave
add
inc
mov
dec
push
std
shlb
insl
fnsave
dec
jge
sar
addl
inc
leave
sub
pop
mov
xchg
aas
inc
cmc
cmc
jo
jnp
aaa
dec
inc
insb
inc
or
sbb
fdivrl
in
imul
pop
in
pop
dec
push
dec
lock
and
jp
xchg
popa
stc
jle
dec
test
xchg
dec
inc
lret
nop
call
xchg
pop
mov
jno
repnz
jns
out
mov
or
push
adc
pop
adc
cmpsb
ficoms
jmp
xchg
sbb
cmpsl
enter
sbb
cwtl
mov
lret
repz
jnp
rorb
in
jecxz
jle
int3
cmp
out
leave
daa
pop
jb
push
popf
pop
mov
cmpsl
xchg
and
jae,pt
cmp
sar
idiv
sahf
or
mov
mov
dec
iret
push
xchg
and
test
ljmp
inc
or
clc
lret
in
lods
jns
mov
jge
jl
push
idivb
shlb
test
sbb
inc
rcrb
add
mov
cli
aaa
mov
sarl
xchg
add
jle
pop
lret
inc
mov
jp
push
jmp
in
ret
adc
mov
pop
or
imul
mov
ret
lret
out
sub
cmp
push
push
clc
stc
std
ret
es
test
call
adcl
flds
dec
push
sar
jmp
stos
pop
add
pop
inc
mov
loop
stos
dec
pop
adc
jb
cmpsl
mov
sub
stc
mov
arpl
in
and
pop
dec
scas
push
pop
enter
or
inc
lret
int3
cmp
arpl
push
rolb
mov
daa
push
cmp
pop
shl
and
pop
mov
cmp
mov
outsl
clc
sar
cmc
add
adc
filds
movsl
xlat
lea
test
je
adc
sbb
pop
xor
fdivrl
in
mov
gs
fmul
into
out
lahf
mov
mov
xchg
xchg
pop
iret
repnz
pop
xchg
jle
xor
mov
mov
ret
inc
inc
enter
inc
xor
jno
inc
adc
insl
add
add
shrb
or
testl
cld
dec
js
sbb
mov
inc
xchg
add
mov
les
pop
into
pop
cmpsb
test
aas
push
ja
out
mov
lcall
push
int3
push
loop
cltd
push
pop
mov
lcall
or
roll
sub
dec
inc
shll
mov
out
xchg
inc
in
or
adc
out
lret
leave
dec
shrl
std
outsl
sbb
sahf
xchg
mov
cld
fisubrl
push
jb
cmp
lock
push
mov
fs
jge
inc
pop
int
xor
xor
fs
lcall
cmp
xchg
push
mov
aad
cmpb
in
mov
mov
cmp
jle
aad
jbe
mov
pusha
and
enter
pop
test
inc
xor
sbb
ljmp
push
aad
sub
ret
cmp
int3
int3
jmp
in
xor
fwait
cmp
inc
mov
out
vmovss
aam
mov
ret
sti
xor
push
ljmp
xor
stos
cmp
test
xchg
pop
cmp
xor
dec
out
aad
mov
or
xchg
mov
jo
jp
hlt
inc
ret
cmc
cmpsl
sbb
mov
fyl2x
push
adc
cmp
push
fstpl
pop
test
mov
pop
sub
add
outsb
cmpsl
lods
ljmp
lret
adc
or
xchg
or
sbb
std
jae
adc
mov
or
fwait
test
fsubrp
sbb
adc
in
jb
jl
push
push
out
add
ret
mov
rcr
adc
xchg
cltd
addb
and
popf
dec
mov
cltd
xchg
popa
fistps
mov
cwtl
and
mov
repz
mov
mov
icebp
jbe
jns
pop
cmp
pop
aad
int
push
inc
pop
or
mov
mov
shlb
sub
push
cmpsb
es
push
mov
push
inc
jno
out
pushf
ffree
inc
mov
mov
xchg
sahf
cmpsl
xchg
add
testl
testb
add
lods
in
stc
testl
mov
add
mov
call
leave
out
or
scas
loope
adc
sbb
cltd
and
sti
mov
mov
aas
repnz
sub
imul
cld
subb
jle
lsl
pushf
in
lret
jl
pop
pushf
fsubl
sbb
bnd
or
mov
sbb
fdivr
iret
imul
lods
xchg
pop
adc
and
mov
stos
addr16
out
stos
lret
stos
xorl
inc
outsl
pop
out
jo
ffreep
stos
mov
add
rolb
jbe
inc
js
inc
mov
scas
pop
push
movsb
push
pushf
jp
fcomps
lret
sbb
call
jbe
adc
mov
mov
pop
xchg
popa
pop
and
mov
pop
movsb
push
sub
or
imul
pusha
push
jl
and
lret
sub
adc
stos
jl
std
cltd
mov
sti
stos
sti
jle
cmp
mov
mov
mov
mov
sub
int
lods
pop
leave
stc
mov
rorb
cmp
cmp
js
mov
xchg
in
inc
pop
mov
xchg
test
adc
addl
cmp
mov
push
jae
mov
dec
pop
or
fdivrl
sahf
lahf
xor
pusha
push
mov
pop
test
mov
fildll
jnp
in
ja
stc
xchg
dec
jp
inc
fsubrl
xchg
nop
js
mov
data16
mov
xor
sbbl
mov
jmp
sarb
sub
shrb
in
xchg
lock
std
aas
out
pushf
mov
decl
dec
insl
pop
fistps
pop
mov
data16
jo
icebp
subb
cld
lock
lret
in
add
nop
and
or
stos
fnstsw
enter
pop
jne
inc
orl
mov
add
aaa
sbb
mov
xchg
loopne
push
aas
ret
or
jmp
aad
out
add
cltd
jo
mov
mov
or
inc
push
push
cmpb
outsl
jmp
mov
ss
shr
cli
repz
mov
out
cwtl
jns
adc
in
testb
push
shl
push
jle
pop
adc
or
addl
pop
push
pop
aaa
push
movsb
jl
daa
or
cmp
lret
cmc
fistpll
lods
lods
ljmp
push
insb
mov
dec
cwtl
in
mov
clc
inc
stos
sub
xchg
loope
or
sahf
sub
ret
or
pop
inc
xor
sbb
lds
mov
cmpsl
lds
cli
xchg
lods
xor
lock
pop
mulb
add
add
lock
mov
sbb
mov
jne
xchg
or
movsb
lahf
leave
mov
push
and
push
fadds
jae
cmpsl
out
pop
pop
inc
inc
int
mov
scas
in
andl
pop
mov
dec
vpmadcsswd
in
mul
and
out
je
or
add
push
cmp
mov
fistps
xor
pop
inc
dec
setb
dec
xchg
sub
cld
push
shrb
or
lret
je
jns
inc
adc
add
push
icebp
movsl
xor
fs
xor
push
icebp
mov
mov
lock
inc
and
pop
aas
or
insl
pop
fldt
push
push
push
fsubl
outsb
xor
leave
movsl
jp
adc
jnp
cmp
out
or
pop
stos
ret
sti
inc
insl
xchg
sub
inc
jno
cmp
add
clc
test
inc
call
or
mov
out
lds
sub
icebp
fcomip
iret
sub
inc
sbb
jge
dec
aaa
int3
in
or
cwtl
inc
test
sahf
cltd
mov
and
rol
or
cmpsl
cli
aam
or
dec
std
mov
scas
cwtl
ffree
mov
mov
jmp
sub
sub
ds
jle
sub
hlt
ljmp
cmp
aam
or
push
inc
icebp
push
pop
aaa
sbb
or
ja
inc
aad
xchg
repz
mov
insl
movsl
push
jecxz
cmc
aad
in
jle
addb
dec
int3
push
xchg
mov
cwtl
scas
cmpsb
aam
or
out
lds
dec
jns
movsb
mov
sahf
xchg
je
cwtl
jns
fisubl
xchg
jb
outsl
pop
in
bound
mov
push
dec
sub
out
xor
sub
push
push
mov
popf
dec
push
aad
or
aaa
cmpsb
jb
jnp
fsts
xor
xor
cmp
in
popa
dec
fwait
cltd
imul
xchg
push
ficompl
dec
jns
shll
lcall
xor
fisttpl
jp
inc
cmc
adc
out
xor
push
jne
fs
incb
insl
sbb
vphsubdq
push
int3
inc
mov
roll
out
in
in
shlb
and
into
testb
cld
and
xor
xor
dec
jno
rcrl
aas
shlb
test
or
lods
pop
dec
lret
add
xorb
dec
sub
nop
in
sbb
sbb
or
sbb
xchg
xchg
arpl
pusha
dec
push
dec
add
out
fcomps
sub
sbb
out
lods
inc
subb
sub
in
jmp
sub
test
mov
pop
mov
shrb
int
je
cs
sbb
jo
sub
mov
sbbb
les
and
xchg
push
sbb
scas
js
lret
adc
and
mov
mov
lock
popf
sbb
sbb
jbe
arpl
add
stos
pushf
lock
cmp
fidivs
cli
mov
aaa
fcmovb
aas
push
pop
test
pop
push
jmp
movsb
xor
dec
inc
clc
push
rcl
mov
ret
inc
lahf
inc
divl
sub
out
cmpsl
in
pusha
out
out
inc
aaa
ss
and
push
xchg
scas
dec
out
imul
add
int
ss
aas
cmp
outsl
dec
popa
ret
inc
mov
ret
outsl
xorl
and
jle
aaa
xor
pop
popf
mov
cmp
stc
out
add
sbb
loopne
mov
xchg
add
js
mov
add
add
jnp
fidivrl
repz
clc
jle
mov
add
pop
mov
cmp
fisttps
or
stc
cmp
inc
jno
lea
icebp
sub
nop
xorb
fisubs
or
jmp
inc
jmp
xor
adc
test
test
cmc
loopne
push
aas
and
and
add
and
subb
std
loop
or
and
and
repz
pop
in
lds
cwtl
popf
dec
aaa
mov
push
cmp
shl
inc
fisubs
push
add
jno
popa
std
cmp
data16
inc
xchg
push
and
je
xor
sub
out
dec
out
cmp
repnz
or
jae
adc
inc
sti
push
adc
enter
push
inc
test
cmp
push
push
pop
inc
les
fs
in
dec
jge
in
mov
jns
xor
hlt
and
arpl
mov
dec
cmpsl
jne
into
test
sub
std
jge
leave
stos
inc
sarb
test
sbb
fwait
mov
fcoml
int3
or
jl
jmp
nop
loop
pop
idivb
sar
mov
xchg
inc
stos
ss
stos
rolb
popf
shr
sbb
leave
mov
es
out
mov
pop
setp
sub
pop
or
push
sub
xchg
inc
mov
cmp
ja
sub
pushf
push
stc
test
ret
into
nop
mov
add
fcompl
sbb
cmp
jnp
mov
sub
shrl
ja
mov
jbe
mov
aam
add
sbb
mov
xchg
push
fiaddl
mov
dec
imul
mov
pop
adc
fimull
push
mov
add
scas
lock
test
jae
and
cmc
mov
push
aaa
js
jl
mov
push
xor
int
inc
rclb
xchg
mov
sbb
pop
pop
in
in
loope
mov
test
lods
sbb
lods
js
gs
fstp
and
xor
iret
push
xor
jb
inc
out
js
add
xchg
jns
xchg
mov
adc
add
or
pop
jbe
jne
aaa
mov
dec
dec
aas
xor
bswap
lods
lds
push
arpl
add
cmp
scas
stos
popf
out
mov
push
pop
in
mov
pusha
add
mov
lock
movsb
push
xor
mov
xor
pusha
fldenv
push
call
or
test
mov
fistpl
stos
das
imul
fs
xor
or
mov
testl
fsubs
lea
mov
jne
ret
add
bound
pop
mov
mov
pop
add
rol
insl
pop
xchg
roll
outsl
js
add
jge
loope
sub
lcall
or
sub
xor
in
xchg
test
scas
data16
cwtl
mov
lods
data16
pushf
pop
shl
pop
sbb
dec
jbe
push
test
bndmov
xchg
and
mov
inc
outsb
arpl
mov
and
in
cmp
or
das
fnstenv
mov
pop
popaw
bound
cld
jl
adc
popa
arpl
scas
mov
insl
cmp
fwait
mov
cmp
data16
jns
push
stos
pop
pop
pop
xchg
push
adc
push
and
repnz
push
rcll
and
jecxz
in
sbb
test
bound
fmulp
add
movsb
mov
lret
hlt
hlt
lock
addb
rcrb
adc
cltd
jns
cwtl
mov
sahf
mov
lds
cli
lret
xchg
insl
inc
pop
dec
mov
loop
and
das
mov
pop
xlat
jns
xchg
push
ljmp
negb
or
jae
add
cmp
xor
out
sbb
mov
pop
xchg
inc
dec
xor
push
push
lods
push
xchg
lcall
dec
push
jns
or
cmpsl
mov
pop
mov
in
cld
repz
pop
dec
aaa
inc
sarb
ds
jle
cltd
jb
icebp
cltd
push
jg
mov
in
push
mov
dec
xor
leave
add
insb
mov
mov
xor
sbb
insl
ljmp
push
arpl
xor
fsts
int3
pop
loope
test
mov
les
pop
xchg
xlat
stc
add
dec
in
push
cmpsb
and
sahf
xor
dec
ds
and
jno
lret
les
std
cmc
enter
xchg
xchg
add
movl
sti
icebp
rolb
repz
lds
adc
cli
inc
nop
or
push
xchg
pop
jmp
push
jns
es
adc
fs
xor
mov
xor
jg
aaa
icebp
cmpsl
adc
add
mov
enter
mov
cmp
fwait
je
sbb
pop
cmpsb
or
repnz
shl
orl
sub
bound
cmp
push
inc
cli
jmp
movl
pushf
pushf
movl
mov
mov
pushf
lea
jmp
xorl
bt
call
or
add
in
jge
push
popa
test
ds
in
jne
mov
sbb
cmp
lods
jle
shlb
mov
xchg
data16
push
test
lds
fiaddl
fdivrl
in
xchg
es
jmp
add
aaa
out
repnz
lret
clc
push
outsl
in
push
jle
mov
ss
and
and
mov
sarb
out
out
ret
push
jg
loopne
dec
mov
int
stos
fisubrs
mov
adc
aam
xchg
lret
mov
leave
ret
into
test
push
jmp
xor
enter
inc
xchg
push
mov
jmp
jno
push
pop
aaa
sti
mov
mov
adc
cmp
push
fistpl
xor
movb
xor
call
mov
push
movl
pushf
movl
pusha
movb
pusha
lea
jmp
pushf
popl
push
xor
push
cmp
xor
cmc
xor
cmc
xor
pushf
cmp
xor
pushl
cmc
xor
movb
movb
xorl
pushf
xor
cld
pushl
popf
mov
pushl
ret
push
pushf
popl
clc
pusha
xor
cmp
xor
pushf
bt
xorl
stc
jmp
push
lock
std
std
mov
xchg
outsl
sub
dec
sti
xchg
into
shrb
and
pushf
mov
pop
inc
ss
cmp
pop
jge
jo
in
sbb
jle
push
aam
push
into
add
loopne
and
test
and
movsb
inc
out
adc
xchg
push
mov
bound
enter
fs
jmp
push
fmuls
lock
std
std
mov
xchg
gs
sarb
mov
int3
outsl
sub
mov
pop
pop
ss
xchg
dec
fmull
jb
in
call
inc
aam
pop
movl
clc
lcall
xchg
push
mov
out
add
mov
in
xchg
push
mov
mov
or
les
and
jmp
adc
pop
std
std
mov
xchg
sbb
inc
scas
mov
sub
add
ss
out
pop
fnstsw
fxam
xchg
call
mov
add
in
sub
test
aad
xchg
icebp
rorl
inc
out
adc
xchg
push
cmpsb
mov
out
or
add
lods
push
fmull
lock
std
std
mov
mov
fucom
js
ss
outsl
sbb
mov
pop
or
xor
pusha
das
insb
in
jge
pop
in
mov
mov
add
ljmp
mov
enter
mov
test
aam
xchg
cltd
and
xchg
push
inc
mov
cmpsl
xchg
mov
cwtl
nop
loop
mov
aam
push
lock
std
std
test
xor
push
and
lahf
push
int
aas
or
mov
pop
push
xor
negl
pushf
sub
xor
dec
inc
jbe
jns
pop
pop
les
loop
sub
testl
lods
mov
xchg
in
xchg
push
mov
add
sar
inc
lods
nop
enter
rolb
lock
std
std
mov
xchg
push
mov
ret
jge
shll
iret
std
and
loope
mov
pop
mov
pop
xor
jnp
in
sub
jecxz
cmp
pop
push
iret
add
out
fldcw
adc
test
fstl
add
nop
and
xchg
push
ss
je
push
test
mov
leave
inc
enter
inc
push
lock
std
std
addl
insl
ret
ret
jge
mov
das
pusha
icebp
pushf
mov
pop
push
xlat
pusha
pop
dec
popf
jge
imul
stc
and
aam
push
movb
shll
adc
test
popf
xchg
loope
outsb
pop
add
inc
mov
inc
mov
icebp
popa
test
js
mov
or
fmuls
lock
std
std
mov
gs
xor
test
leave
outsl
mov
mov
pop
scas
ss
mov
cmp
jge
mov
dec
jl
outsb
aam
push
leave
add
out
sub
test
outsb
add
nop
add
mov
ret
in
xchg
push
push
scas
test
mov
push
enter
rorl
lock
std
std
xlat
xchg
arpl
mov
ret
jle
push
sbb
int
lods
sub
pushf
mov
pop
dec
ss
bound
insl
jge
stc
in
sbb
mov
xor
push
pop
rolb
shlb
adc
test
dec
pop
fwait
adc
jmp
inc
data16
in
xchg
push
ss
push
testb
ror
jmp
adc
dec
push
lock
std
std
popl
xchg
pusha
mov
jb
inc
add
xchg
inc
lret
iret
insl
sub
pushf
mov
pop
int3
ss
mov
jbe
in
sub
fs
aam
pop
enter
fldenv
pop
test
add
xchg
icebp
add
mov
xchg
cld
mov
cmpsb
je
or
and
or
push
ret
enter
fisttps
lock
out
fimuls
vandps
add
fsub
push
into
or
movaps
cli
rorb
jb
add
scas
sbb
jge
jno
xchg
inc
insb
je
in
or
mov
xchg
add
mov
jno
lahf
movsb
push
sbb
les
movsb
sub
insl
test
fisttpl
mov
pop
push
jge
inc
scas
cmp
in
test
dec
dec
aad
scas
adc
ret
mov
ss
jmp
icebp
mov
sub
lods
inc
loope
pusha
mov
fists
cmp
roll
out
andb
xlat
xlat
cmp
push
pop
xor
mov
push
bnd
test
nop
ja
dec
xchg
and
mov
mov
and
adc
out
out
sub
push
iret
xchg
adc
jae
sub
sbbb
into
dec
fstl
and
pop
arpl
leave
ficoms
mov
lods
lock
ss
das
and
push
aad
adc
add
xchg
push
lret
neg
cmc
rcll
es
leave
jb
or
movsl
sbb
popf
fs
and
jbe
jl
dec
insb
add
jae
xchg
mov
jecxz
add
mov
les
imul
inc
push
push
pop
in
test
cltd
test
fldt
fidivrl
mov
jg
pop
sbb
jae
inc
lods
mov
push
aad
inc
and
xchg
test
fs
loop
sti
or
repz
lds
xor
ljmp
push
fsub
out
outsb
subb
fwait
enter
push
cmp
xor
dec
mov
add
sub
dec
fists
and
dec
shr
mov
adc
mov
or
into
and
xchg
enter
adc
imul
sub
pop
arpl
ficoms
sub
lods
lock
push
sahf
out
xchg
lret
mov
xor
and
mov
sub
test
ucomiss
jb
add
mov
jae
jge
adc
jno
pop
insb
or
stos
jno
xchg
mov
test
fists
sub
rol
sub
dec
push
and
clc
fcoms
mov
int
stos
out
mov
mov
lods
push
push
in
fnstenv
inc
aad
enter
push
mov
mov
cwtl
fyl2xp1
call
mov
jmp
mov
xor
xchg
or
pop
es
fdivp
out
imul
gs
out
xchg
pop
aaa
test
jge
and
stos
inc
dec
inc
imull
nop
addr16
cwtl
xchg
sub
sub
andl
dec
stos
out
es
lahf
adc
xchg
jb
add
inc
jnp
mov
and
scas
sub
pop
arpl
ficoms
push
lods
jmp
inc
push
mov
or
inc
ljmp
push
lds
mov
sub
mov
xor
stos
sbb
out
mov
dec
push
mov
ja
fldt
cmpsb
je
xchg
mov
fdivs
mov
xchg
call
sub
xchg
lcall
inc
mov
leave
mov
out
sub
adc
cli
inc
movsl
pop
scas
in
dec
ss
xchg
int
inc
aad
shll
pop
fiadds
stc
out
shl
adc
pop
fsubs
in
movsl
and
xor
adc
push
cmp
aad
out
push
clc
rorb
jmp
add
mov
cmp
dec
push
js
xchg
nop
daa
dec
cmp
mov
imul
out
and
pop
rcrb
or
jnp
and
gs
pop
addr16
mov
or
out
lods
lock
adc
call
jne
xor
add
fdivs
push
mov
add
sub
jbe
loopne
jb
or
mov
jae
in
pusha
andl
cvtdq2ps
xchg
add
ljmp
add
xchg
cltd
test
in
push
or
movsb
cltd
pop
mov
mov
fldt
imul
mov
lret
mov
fildll
adc
hlt
inc
mov
cmp
inc
inc
aad
int3
cmc
insb
inc
nop
sub
fimuls
stc
call
pusha
adc
inc
loop
movsb
cwtl
push
xchg
xchg
xor
mov
pop
sub
repnz
imul
cmp
push
cmp
xchg
fistl
mov
mov
nop
testl
icebp
das
mov
repz
xorl
xlat
out
sub
iret
xchg
adc
ret
ficompl
jnp
negl
or
cmpsl
sub
iret
cs
ficoms
cwtl
in
lods
lock
adc
ja
loope
add
push
cmpl
xchg
jns
sub
stc
jb
push
into
movsb
sbb
gs
mov
fcomps
ret
xor
insb
or
scas
jne
xchg
mov
jecxz
add
das
adc
hlt
in
pop
out
inc
or
sub
pop
pop
rorb
sti
fldt
fstl
mov
lahf
imul
adc
sti
inc
stos
fnstsw
xchg
lret
inc
dec
aad
pop
jne
inc
and
dec
fimuls
stc
call
faddp
pop
cmp
out
inc
movsb
xchg
xchg
pusha
mov
out
jo
cmp
fsubl
out
pusha
addb
ss
enter
inc
in
leave
pop
ds
out
in
mov
jecxz
js
mov
nop
addr16
push
xlat
scas
mov
adc
adc
pop
pop
into
sahf
adc
adc
cltd
mov
push
lock
and
and
push
arpl
ficoms
clc
out
lock
es
inc
xor
pop
push
in
cmp
add
es
ret
mov
gs
mov
mov
stc
jb
bswap
stos
sbb
std
push
sbb
insb
or
jne
xchg
mov
cmp
addl
inc
in
sbb
sub
sub
data16
cmpsl
xchg
fwait
push
insl
lret
mov
fisttps
sbb
decl
push
in
cltd
xor
iret
inc
inc
aad
into
xor
mov
fimuls
stc
loope
sti
aad
or
pop
mov
push
repnz
shll
pusha
mov
pop
shrb
and
arpl
fisttpll
sahf
sarb
orl
or
dec
add
js
lea
nop
pop
dec
fcoms
dec
mov
ret
xlat
arpl
mov
es
into
inc
mov
push
movsb
inc
nop
mov
daa
pop
or
int
and
jmp
ficoms
mov
lods
cmpsl
inc
pop
shll
inc
or
out
les
add
imulb
into
inc
loope
mov
movsl
xor
xchg
lods
sbb
mov
into
stos
sbb
mov
xchg
jns
push
ja
push
roll
push
xor
movsb
jne
xchg
mov
pop
imul
addl
out
loopne
ret
add
sub
xchg
lahf
clc
lods
or
mov
lahf
or
push
jb
dec
mov
xor
ret
aad
jecxz
pusha
inc
add
mov
jo
push
orb
mov
and
mov
pop
shrb
filds
out
insb
sbbb
loopne
mov
out
push
xor
mov
jnp
inc
repz
stc
or
addl
addr16
push
outsl
out
mov
xor
push
adc
out
sub
pop
iret
xchg
adc
jae
jmp
fs
lcall
dec
in
ja
fs
sub
leave
ficoms
fsubr
lods
lock
mov
push
mov
xor
inc
fdivs
sub
jecxz
rcr
xchg
out
lahf
test
loopne
jmp
mov
mov
xchg
es
mov
jl
test
jae
xchg
mov
test
jg
add
xor
dec
push
loop
repz
sub
lahf
cltd
test
fldt
shlb
mov
pop
fistl
push
ja
inc
mov
cmp
dec
dec
aad
shlb
loopne
fiadds
stc
call
rolb
aad
lret
shll
mov
pop
nop
int3
cmp
aad
out
popa
cmpb
enter
sahf
push
cmp
xchg
xor
neg
mov
pop
dec
js
es
cmp
and
arpl
ss
out
daa
add
adc
jae
jnp
aam
lahf
pushf
jnp
sbb
push
and
fildll
jmp
ficoms
cmp
lods
lock
push
jno,pn
mov
xchg
ds
fdiv
push
leave
adc
leave
movaps
mov
into
stos
sbb
in
push
imull
test
pop
mov
aad
xchg
add
pop
popl
add
movsb
sub
mov
shrl
stc
pop
rcrl
rorl
mov
mov
xchg
mov
movsb
dec
in
leave
cmp
sahf
dec
inc
aad
or
mov
fiadds
stc
loope
std
push
mov
out
lds
xor
xchg
sub
and
gs
mov
fcmovnu
xchg
into
jne
out
push
xor
shlb
dec
loop
ret
cld
sub
inc
inc
dec
xchg
sub
mov
pop
mov
dec
push
out
sub
pop
enter
xor
fwait
adc
repnz
outsb
test
sub
pop
arpl
ficoms
.byte
.byte
