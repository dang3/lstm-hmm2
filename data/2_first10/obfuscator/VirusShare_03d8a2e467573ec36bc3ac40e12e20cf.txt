dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
adc
in
mov
imulb
mov
jb
bound
shll
push
sbb
test
sub
mov
nop
lahf
les
ja
pop
out
mov
push
inc
stos
or
xchg
ss
in
push
push
jle
pop
cmc
scas
dec
int
out
mov
inc
sub
in
sti
mov
add
imul
xor
pop
pop
or
sub
xchg
mov
sub
cs
cmp
jg
mov
pop
xor
repz
add
imul
popa
xchg
dec
or
into
mov
adc
cmp
dec
popa
mov
test
ds
mov
and
pop
inc
xor
jl
add
loope
lds
iret
pop
sub
or
jp
sbb
dec
sbb
das
adc
add
jle
dec
sbb
notl
fs
xchg
in
mov
ljmp
stc
test
faddp
lret
sahf
inc
inc
xchg
stos
in
scas
inc
cmpsb
pop
ljmp
dec
cwtl
out
xor
mov
xor
mov
push
test
mov
clc
jb
ficompl
outsl
pop
leave
xchg
fimuls
mov
in
sub
enter
push
push
mov
loop
insl
call
mov
xor
cltd
fs
jb
loopne
push
push
mov
aad
push
push
xchg
push
pushf
xchg
jg
je
ja
lret
fimull
aad
lahf
jecxz
xlat
mov
mov
mulb
lock
inc
mov
in
lds
or
inc
pop
push
movsb
jne
jmp
xchg
inc
adc
add
xabort
jg
push
mov
cmp
push
out
xor
add
mov
xchg
loop
lcall
loop
jmp
ss
jae
mov
xor
mov
cltd
lret
xor
or
mov
ret
lods
std
into
cmc
into
cld
jmp
adc
cwtl
xchg
popf
dec
sbb
stc
adc
adc
test
fcoms
dec
loope
pop
ja
sbb
mov
adc
jge
cmp
arpl
xor
cmpsl
xor
pop
mov
sub
push
in
das
lahf
lret
lock
xor
cwtl
popa
sbb
dec
movl
push
mov
lret
lahf
add
mov
in
push
out
mov
mov
push
rorl
fsubrl
add
rolb
shrb
adc
or
mov
jnp
push
bound
lea
dec
andb
pop
scas
or
jg
dec
add
xchg
insl
pop
jp
mov
mov
dec
and
adc
xchg
repnz
lock
push
xor
mov
dec
nop
adc
shll
in
jg
ss
xor
test
dec
xchg
loope
roll
jg
jne
cmp
jo
jno
imul
lcall
sub
or
rolb
ret
mov
outsb
je
imull
test
push
xor
or
lret
push
jns
fstl
mov
add
insl
push
sarl
lds
cmp
les
enter
pop
or
pop
fxch
mov
outsb
cmpsl
in
rorl
inc
push
out
xor
je
dec
or
scas
sar
popa
or
mov
jb
arpl
add
popl
xor
adc
insl
sti
test
mov
inc
call
cmp
jle
popf
push
andl
test
imul
xchg
cmp
sub
push
fisubs
bnd
push
mov
pop
jmp
lock
jnp
pop
sbb
adc
ja
push
flds
mov
xchg
rolb
pop
ret
and
xchg
insl
lods
pop
lods
mov
adc
inc
push
in
pop
dec
pop
xchg
cwtl
hlt
pushf
loope
lret
add
sbb
add
jmp
add
in
inc
pop
mov
shlb
leave
xor
adc
sub
and
jb
nop
imul
nop
cmp
xchg
cmp
outsb
cmp
ss
cmc
enter
in
sbbl
es
fucomip
sar
adc
mov
inc
loop
dec
in
jge
shr
sbb
xchg
cwtl
mov
xchg
xor
mov
xchg
sbb
popa
adc
nop
inc
ret
jbe
out
mov
fcom
call
gs
daa
int
clc
mov
testl
xchg
inc
sbb
cmp
mov
fcom
jmp
pop
jne
sub
or
test
xor
pop
push
lds
add
in
cmp
jecxz
and
xrelease
and
or
adc
into
and
mov
ds
push
cmp
lcall
mov
mov
and
fdivl
sub
test
jge
mov
xorb
enter
pusha
insb
push
mov
lret
mov
aaa
push
add
xchg
ds
stos
cmp
iret
pop
and
fmuls
or
push
adc
cmovbe
jns
leave
cltd
loopne
and
fdivrp
adc
jae
pop
inc
sub
loop
in
decb
jp
mov
enter
into
add
mov
push
jbe
mov
xor
aam
add
mov
mov
ret
or
xor
dec
adc
mov
pusha
dec
stos
push
out
aas
test
jl
lcall
addr16
int3
fwait
pushf
into
data16
popf
lods
std
outsl
in
sbb
mov
mov
mov
out
cmc
pop
sbb
or
or
mov
dec
cmp
jmp
cmp
test
sub
outsb
movsl
adc
inc
push
xchg
or
pop
int
adc
jecxz
jns
test
pop
cltd
push
sbbl
loope
cmp
pushf
rclb
das
mov
cmp
adc
dec
in
and
fsubp
leave
fdivrs
in
movsl
in
mov
test
ror
icebp
in
aaa
push
push
adc
dec
or
mov
push
sub
jge
movsb
mov
fndisi(8087
addl
xor
inc
or
mov
stos
loop
scas
mov
inc
cwtl
xchg
lea
ffree
inc
hlt
clc
xorb
shl
cmc
jo
add
into
jae
popa
inc
mov
sbb
mov
dec
add
outsl
pusha
inc
fnstenv
insb
or
addr16
jmp
out
push
test
sub
add
dec
sbb
mov
fsubrs
adc
test
or
fdivrp
push
sahf
xchg
dec
and
mov
pop
push
jns
out
lret
cmp
test
stos
xchg
aam
xchg
ss
pop
js
jl
add
ret
popa
jl
push
xchg
cmc
mov
mov
imulb
shlb
pop
loop
lea
xchg
es
enter
or
sahf
dec
mov
mov
iret
je
sub
jmp
test
ret
push
and
lret
cmp
jle
jo
jnp
mov
popf
adc
out
shl
cmpsl
les
xor
xlat
in
in
das
add
bound
xor
clc
mov
ret
adc
dec
out
xchg
xorl
sbb
cwtl
mov
mov
pop
dec
xchg
iret
sub
sahf
mov
and
das
test
test
sub
xchg
out
cmp
pop
mov
and
shlb
xor
aaa
mov
xchg
aad
repz
or
sbb
in
jo
sub
fisttps
js
jno
ss
daa
inc
adc
inc
push
cli
movsb
jnp
or
sbb
repz
mov
cmp
lock
in
and
adc
je
xchg
out
push
fs
iret
xchg
lods
sbb
add
dec
jp
cmc
and
mov
or
dec
je
sub
popa
push
sbb
mov
pusha
out
lods
push
dec
mov
fdivrs
and
test
divl
iret
fs
jmp
mov
iret
shl
insb
jbe
sub
or
gs
xchg
mov
leave
mov
xchg
or
ret
and
xchg
data16
push
or
dec
pop
std
add
mov
inc
fwait
hlt
test
scas
pop
pop
loopne
sbb
sub
jae
fsubl
mov
shrl
mov
test
push
cmpsb
movsl
inc
sub
or
push
imul
inc
xchg
jge
dec
dec
mov
inc
jne
fcoml
out
in
bswap
cmpsl
cs
out
sbb
jg
xchg
pop
fsts
adc
das
and
dec
loop
xor
test
test
mov
mov
loope
dec
daa
lods
xor
jae
mov
cmpsl
xchg
insb
xor
js
xor
out
dec
dec
out
cmp
pop
mov
popf
test
push
shr
test
je
leave
stos
cmp
ljmp
mov
fsubrs
lret
and
mov
ret
in
sbb
dec
cmp
cmpb
in
push
jne
xchg
neg
mov
sub
push
movsb
mov
mull
xchg
test
jp
mov
xor
xchg
mov
imul
rclb
inc
daa
xor
push
out
repz
fadd
jno
xor
cmp
test
push
lret
cmp
xor
add
jo
lock
out
push
ja
pop
lods
push
dec
dec
je
sarb
xor
mov
sub
movsb
adc
gs
mov
push
push
bound
pop
add
add
and
jp
outsb
or
jl
push
mov
jecxz
js
mov
mov
call
xor
stc
xor
jmp
xlat
xlat
cwtl
pop
filds
xor
scas
cmp
pop
dec
inc
jnp
and
outsb
xchg
lcall
sbb
xor
int
cltd
mov
xchg
xor
jle
daa
lret
mov
sbb
jb
mov
push
mov
push
lock
push
mov
cwtl
pop
pop
into
and
jl
sbb
cmc
sbb
pop
push
nop
punpcklbw
sbb
adc
testl
pushf
mov
mov
and
movsl
pop
adc
ror
xor
push
mov
out
clc
jmp
add
add
and
jae
sub
xor
mov
inc
fistpl
xor
fsubrs
ret
ret
mov
mov
es
cwtl
rclb
popa
jecxz
lret
adc
mov
xlat
xchg
or
xor
test
jge
pop
pop
fwait
lods
sbb
and
dec
jg
inc
repz
addr16
pop
push
in
stos
add
and
inc
xchg
dec
aaa
cmc
cmp
jo,pn
fdivrl
add
cmp
push
pusha
pushf
addr16
das
cmp
add
outsl
sub
loopne
and
pusha
loope
sbb
jne
adc
sub
xchg
les
push
pop
mov
cmp
jnp
and
std
jo
cmp
inc
and
jae
mov
call
shll
js
pop
and
rclb
dec
pop
ljmp
test
sub
movl
enter
push
mov
sti
int3
cmpsl
add
inc
inc
ficoml
or
mov
fisubrl
jo
sbb
mov
dec
je
mov
jmp
inc
mov
add
inc
cltd
int3
mov
dec
inc
divl
inc
xchg
ja
adc
jae
pop
clc
xchg
ret
jb
ljmp
mov
pop
push
test
sub
and
xchg
pop
imul
scas
lods
rol
in
push
sbb
ret
fnstcw
xchg
imul
cmp
rclb
lock
cmc
cmp
test
pusha
pop
cmp
mov
adc
push
push
sub
pop
ljmp
adcb
cmpsb
dec
cmpsl
dec
mov
xchg
aas
cmp
sub
pop
mov
mov
rorl
cmp
dec
pop
loopne
nop
jp
test
adc
xor
mov
push
out
xchg
xlat
or
xor
ret
sarl
xor
push
jnp
mov
jo
mov
lock
das
jecxz
cmp
mov
jae
addr16
mov
adc
jmp
pop
loop
or
fs
inc
lods
lods
sbb
push
inc
in
mov
fisttpll
sahf
mov
repnz
ljmp
in
repz
cmp
xchg
pop
lods
mov
roll
adc
mov
adc
mov
movsb
inc
testl
jmp
arpl
jo
add
sub
stc
pop
ss
mov
mov
sub
daa
rclb
dec
das
repz
mov
jno
xchg
dec
arpl
jmp
js
jae
xchg
cmp
push
and
pop
cmc
xchg
add
push
pop
jns
popa
xchg
je
mov
and
xchg
dec
cld
mov
sub
xchg
ret
ljmp
push
sub
cwtl
sbb
cmp
cmp
out
jge
and
lahf
and
dec
aad
jne
fcoml
push
sbbl
dec
hlt
add
mov
mov
and
jecxz
mov
dec
out
or
add
dec
lods
cld
jbe
in
push
xchg
jmp
insb
shrb
jne
cmp
add
js
sub
ja
xchg
sub
fwait
xchg
in
inc
lods
insl
fimull
inc
inc
aaa
jp
lret
sbb
cs
pop
xchg
arpl
insl
xor
mov
hlt
inc
cltd
xor
dec
push
sbb
xchg
js
insl
out
sti
mov
push
insb
out
mov
test
arpl
pop
daa
mov
cld
or
or
call
std
push
out
les
insl
jmp
popa
rorl
jl
adc
test
mov
push
mov
pop
mov
test
sub
push
testb
jg
std
das
je
imul
rcrl
push
lds
xchg
mov
fistpl
out
dec
mov
int3
jne
imul
ljmp
aad
ja
inc
ret
mov
fwait
cmp
icebp
call
mov
adc
add
or
pop
dec
scas
push
push
inc
push
sub
fsubr
orl
cmp
inc
in
ja
mov
mov
and
jae
mov
jne
mov
jns
iret
sub
enter
cmc
inc
and
jnp,pt
jbe
or
into
cwtl
or
push
test
xchg
jo
push
inc
loop
fcomps
imul
ret
data16
xchg
mov
mov
fs
push
jle
and
fs
cwtl
test
fiaddl
rclb
clc
ror
lret
sbb
imul
insl
jecxz
inc
dec
mov
repz
rclb
mov
jb
stc
pop
push
ljmp
ja
sbb
dec
icebp
or
pop
mov
xorl
mov
mov
ss
scas
out
fs
imul
enter
fidivs
jae
sbbl
jnp
xor
orb
lret
inc
xchg
mov
iret
test
inc
sub
lods
and
mov
sub
mov
mov
mov
push
cmp
mov
xchg
cmp
rorb
push
dec
call
pop
outsl
pop
sbb
dec
adc
dec
add
and
inc
rcrb
cmp
mov
loopne
fdiv
loopne
xorb
dec
icebp
and
pop
xor
xchg
addr16
mov
dec
sbb
and
add
ja
jns
test
mov
xchg
sbb
pop
arpl
outsb
or
lahf
test
mov
pop
cmp
or
xchg
push
sbb
andb
mov
fildll
scas
mov
rcl
sbb
scas
loop
fistps
or
cli
mov
in
mov
push
sub
outsl
in
sub
sub
cmp
mov
pop
stc
and
out
mov
outsl
pop
fldcw
test
pop
mov
push
jmp
sub
and
test
sbbb
sysenter
and
cltd
int3
out
add
jge
into
cld
mov
dec
cld
orb
repz
cmp
loope
jae
sub
cmpsl
arpl
cmp
mul
xor
ljmp
sti
jge
mov
pop
lods
pop
cmp
push
out
rol
inc
outsl
pusha
sub
cmpsl
push
mov
xchg
shll
cmpb
inc
divl
aas
js
sub
cmc
shlb
iret
adc
jmp
mov
test
ja
fsubp
ss
aaa
and
ret
je
push
rcrl
jmp
mov
sarl
cmc
pop
pop
pop
mov
add
inc
mov
sub
jbe
pop
aam
fwait
inc
and
loope
mov
ds
aam
loopne
bound
call
sete
outsl
bound
je
cmpsb
jmp
sti
mov
lcall
or
xor
jae
mov
dec
or
lock
or
mov
xchg
sbb
lds
lods
out
lret
fstp
repnz
jbe
or
fistpll
mov
cmc
and
pushf
sbb
mov
cmp
mov
scas
and
pop
fcmovbe
push
and
sbb
dec
ljmp
std
ljmp
mov
addr16
decl
lods
pop
adc
out
add
mov
iret
scas
pop
in
imul
cmpsb
scas
paddq
scas
popa
popa
js
jns
lret
add
mov
and
in
lock
lret
lahf
cmpsl
neg
int
adc
fwait
nop
arpl
cmpsl
lods
mov
mov
mov
sub
aaa
cmp
xchg
loopne
dec
jnp
jge
pop
mov
push
pop
stos
sub
movsl
aas
bound
adc
shll
and
aas
mov
fnstsw
lret
xor
inc
lods
out
sub
mov
dec
sub
xor
cli
sbbl
arpl
insb
movsl
jne
jge
cmp
outsl
lret
push
cmp
ret
inc
or
sub
sub
out
pop
cwtl
xchg
add
cld
fldcw
lahf
stc
aam
dec
push
insb
cld
push
mov
push
push
fistpll
sbb
rcrl
push
and
jmp
lret
lcall
cmp
push
sbb
jae
and
pop
pop
test
movsl
or
mov
ficompl
iret
call
push
cli
xchg
pop
jno
mov
mov
rol
out
scas
cmpsb
daa
lcallw
or
mov
loop
and
jae
mov
enter
aas
shrb
clc
xchg
psubw
shufps
mov
or
dec
scas
movl
dec
jl
jg
xchg
pop
testl
sbb
add
aaa
dec
add
sahf
lds
outsb
popf
les
outsb
inc
outsl
sub
in
ficoml
mov
inc
xlat
ret
adc
push
inc
std
dec
in
cs
push
or
sbb
add
push
fs
lret
pop
jne
inc
iret
out
push
mov
inc
jo
fisubrs
lds
insb
mov
incb
xchg
mov
sbb
sarl
test
fisubrs
cmp
mov
add
icebp
jnp
xor
push
adc
pushf
in
jns
add
and
xchg
test
in
inc
mov
or
mov
push
xor
les
fld
cli
pop
call
push
sbb
sub
jl
dec
fcompl
sub
push
xor
pop
pop
xchg
adc
test
negb
outsb
fidivs
sbb
roll
cmp
das
inc
aad
dec
insl
femms
int
and
je
leave
es
ja
aas
nop
repz
bound
xchg
out
xor
cwtl
fnsave
sbb
pop
movsb
mov
cmp
ret
pop
push
xchg
aas
push
jle
test
ret
sub
les
rolb
jae
mov
inc
pop
cmc
pushf
in
pop
orl
add
pop
inc
sbb
push
pushf
jge
mov
cmp
jl
ret
sar
add
rorl
cmp
scas
cmpsb
push
ret
lcall
jno
xorl
add
mov
sti
jl
movsl
leave
imull
pop
mov
add
mov
pop
fistpl
es
dec
ljmp
les
divl
mov
sub
or
aas
pop
ret
lds
testl
or
insl
gs
fsubrp
iret
testb
daa
adc
inc
shlb
inc
and
mov
add
mov
pushf
jle
out
lea
dec
imul
push
in
jae
testb
testb
test
inc
pop
sbb
and
or
shlb
dec
fisttpll
xchg
clc
std
out
xchg
jno
scas
pop
out
shll
clc
mov
pop
ljmp
jo
es
pop
shrl
fdivrs
clc
push
dec
xchg
cmpsl
jp
popf
nop
int
push
adc
or
jbe
cmp
mov
mov
xchg
mov
fcmovne
cltd
fwait
fwait
les
adc
jl
inc
and
fmul
in
add
scas
xchg
xchg
aam
xchg
lcall
jecxz
imul
or
mov
mov
cmpsl
inc
rcrl
iret
sbb
mov
add
movsb
jb
mov
fsubr
mov
jb
fldl
adc
cmpsb
push
sbb
fwait
dec
lahf
insb
in
adc
jo
jmp
mov
fwait
outsl
clc
jge
fs
dec
sub
push
mov
pop
xchg
mov
mov
dec
xchg
gs
gs
lret
and
cmp
bnd
inc
inc
mov
jb
mov
nop
mov
in
mov
mov
mov
sub
jb
cmc
ret
mov
lahf
lret
lock
hlt
and
aam
cmpb
pushf
les
jo
incl
push
dec
arpl
outsb
rcll
mov
push
or
mov
xor
sbb
stos
stos
fmuls
lods
cmp
xor
mov
inc
push
xchg
mov
pop
insb
mov
pop
cmp
scas
dec
sbb
fcomip
inc
jns
fdiv
into
cs
and
aaa
lret
pop
aas
ja
out
sbb
ret
mov
adc
test
mov
int
imul
pop
loopne
mov
inc
call
stos
je
push
and
out
fldenv
push
leave
sbbb
idivl
outsb
rcrl
add
and
jl
pop
jge
mov
fidivs
imul
repz
rcl
out
mov
and
cwtl
mov
cmp
pop
dec
imul
ret
loop
pop
jp
sub
mov
pop
mov
pusha
mov
rcrl
lret
push
outsb
jo
xchg
mov
call
insl
lods
xchg
vmovapd
fsubr
mov
iret
out
cmp
or
loope
js
mov
loopne
pop
shll
mov
and
pop
lds
ret
xchg
pushf
xchg
jns
mov
add
aad
sbb
out
or
dec
pop
mov
andb
mov
or
and
leave
movsl
sub
cli
cli
inc
cmpl
mov
push
inc
dec
rcrb
inc
add
sbb
int
scas
pop
xchg
shl
inc
cmp
push
xchg
push
repnz
jmp
xor
mov
xor
adc
pop
icebp
das
mov
pop
aaa
out
adc
loop
lods
inc
rolb
and
adc
repnz
xlat
rorb
enter
ss
pusha
cltd
sub
cmpsb
js
psllq
inc
mov
xchg
lahf
jae
lods
adc
pop
inc
pushf
rorl
js
pop
adc
pop
mov
rorb
mov
sahf
xchg
dec
out
imul
dec
lret
bound
imulb
xlat
push
movsl
ss
setle
jmp
jne
xchg
pop
fwait
push
jns
pop
aad
mov
dec
aam
add
addr16
inc
mov
aaa
aaa
ds
das
pop
or
ficomps
sbb
dec
imul
shlb
scas
fnsave
loop
inc
xchg
sbb
inc
lea
xor
test
mov
adc
xor
jp
fs
adc
aaa
sub
sbb
xchg
jb
pop
sub
jns
jne
ss
adc
out
xor
dec
out
dec
bound
jg
jg
lds
push
add
and
push
sbb
bound
adc
add
movlps
test
test
sarl
ja
lret
mov
imul
mov
imul
and
dec
mov
adc
div
or
data16
adc
rcl
enter
mov
push
dec
popa
mov
fstpl
mov
push
stos
add
bound
fsubs
nop
pusha
sub
pop
sub
and
stc
pop
inc
mov
inc
into
mov
push
jp
outsl
arpl
into
pop
sub
push
dec
notb
sub
xor
push
pop
xchg
daa
jbe
xchg
addl
popa
add
jge
jecxz
aad
js
test
gs
adc
enter
sub
jle
enter
jne
add
inc
mov
daa
movsb
mov
stc
aaa
push
lods
cli
mov
xchg
mov
pop
push
stos
nop
addr16
sbb
repz
mov
push
fidivrl
jne
or
inc
test
mov
enter
xor
add
shr
ret
inc
dec
jbe
mov
sbb
sub
or
mov
inc
jp
gs
aam
xor
mov
ds
scas
mov
jo
scas
inc
ret
jecxz
sub
mov
adc
sub
lahf
test
mov
into
in
ret
sbb
in
daa
cmp
jp
jb
inc
int3
lret
inc
inc
ret
scas
inc
sbb
push
cmp
out
push
fldenv
cmp
mov
xor
add
or
xchg
mov
js
mov
inc
outsw
lds
lea
push
inc
mov
push
sbb
adc
xor
cmp
mov
iret
sbb
popa
jg
lock
in
push
cmp
dec
mov
sti
sub
outsb
stos
xor
lods
xchg
and
push
in
jle
or
mov
mov
fimull
negb
adc
insl
mov
pop
mov
andl
cmp
mov
add
and
xor
dec
mov
negl
or
clc
mov
sbb
cmp
rolb
lahf
push
sbb
aas
bound
add
rcll
ret
cs
daa
lret
rcll
mov
jno
mov
popa
xchg
pusha
xor
popa
mov
call
leave
mov
adc
xchg
push
pop
jnp
les
in
push
cld
cmpl
push
fstps
ljmp
inc
fs
or
xchg
icebp
mov
je
ds
xchg
adc
dec
imul
xor
cwtl
inc
out
cltd
jb
inc
lds
cmc
jmp
addr16
stc
and
push
popf
stc
push
movsl
test
mov
insl
inc
std
pop
popa
mov
and
or
pushf
pop
cmp
jmp
xor
cltd
leave
and
test
mov
stos
xchg
mov
fistl
stos
into
jge
test
mov
stos
frstor
pop
and
or
insl
mov
fldl
ljmp
sbb
jle
push
nop
call
loopne
mov
and
push
xchg
sbb
sub
aad
mov
mov
or
stos
dec
adc
mov
subl
lods
stc
xor
es
sbb
inc
cmp
daa
pop
data16
je
mov
sti
popf
jnp
jae
lods
ror
dec
add
sarb
ss
mov
and
push
dec
lcall
inc
les
push
aad
mov
and
jg
mov
mov
xchg
fsubs
imul
pop
pop
xchg
dec
mov
mov
inc
xchg
and
xor
lods
shll
mov
jge
jbe
inc
cmp
inc
add
dec
ds
nop
cmpsb
pop
mov
xchg
cwtl
stos
mov
jb
mov
fwait
push
add
and
stos
add
loope
jmp
pusha
and
fsts
add
jne
lea
aas
dec
mov
adc
sub
mov
cmp
sahf
cli
orb
fcomps
cmp
or
cmpsl
adc
sub
sbb
mov
mov
xor
cli
jmp
inc
data16
sti
fdivrl
out
push
jmp
mov
cltd
lods
mov
jns
mov
jmp
popa
xor
jb
push
cmpsl
jl
pop
mov
push
mov
push
mov
notl
mov
adc
leave
jb
leave
xchg
icebp
pop
and
jg
in
sub
iret
mov
jecxz
inc
lock
lds
mov
lahf
in
sub
outsb
test
inc
inc
sbb
sub
jmp
sub
mov
cmp
push
push
fsubs
pop
xchg
push
mov
pushf
out
lods
lds
and
and
push
and
adc
mov
adc
xor
pop
mov
icebp
sub
cvtdq2ps
mov
and
cmp
mov
inc
aad
fsubrs
adc
and
lret
mov
dec
xchg
jmp
sbb
or
test
mov
out
inc
sub
push
jmp
lods
addr16
xchg
add
test
in
add
mov
push
inc
pop
dec
or
sbb
inc
cltd
xlat
adc
mov
out
fisttpl
jmp
jge
add
lock
ret
and
adc
sub
adc
sub
sti
sub
rclb
cmp
cmp
nop
fsubrs
ret
inc
mov
ss
mov
fisttpl
mov
jmp
xorb
int3
inc
jge
inc
adc
loope
push
sbb
inc
cmc
ret
inc
mov
jbe
jmp
cld
fwait
jmp
mov
add
mov
xor
cs
mov
sahf
xor
mov
mov
push
jne
pop
mov
mov
dec
lahf
out
jge
addl
or
push
xchg
movsb
pop
stos
jno
mov
rcll
add
mul
mov
mov
or
jmp
stc
push
add
out
shlb
xchg
cltd
mov
inc
push
rorl
out
and
push
or
sbb
xchg
in
outsl
insb
and
mov
int
xor
mov
pushf
xor
mov
ss
and
js
sub
jnp
mov
adc
aaa
popa
mov
xchg
gs
and
addb
sti
jg
sbb
or
addr16
xchg
ja
sbb
ret
icebp
in
mov
xlat
popa
or
push
dec
repnz
push
ficompl
jns
dec
sbb
cmp
daa
mov
mov
push
xchg
mov
int
or
and
or
sub
cmc
xchg
fildl
out
sbb
inc
mov
push
lret
pop
xacquire
test
pop
scas
nop
ret
scas
dec
xchg
js
or
inc
sahf
cmp
into
loope
mov
mov
xchg
stc
enter
sub
push
pop
hlt
and
test
xchg
adc
lock
jo
mov
mov
leave
push
mov
sbb
lret
in
push
ss
push
add
cmp
cwtl
adc
lret
push
lods
push
scas
loope
mov
movsl
psubsw
mov
lcall
popa
xchg
and
cmp
pop
xor
xchg
sbbl
adc
or
lahf
inc
out
scas
xchg
int
xor
fmull
clc
pop
cmp
or
into
aad
jnp
jge
sbb
ret
mov
xor
lock
xchg
loop
xchg
mov
aas
mov
scas
dec
cmp
fld
in
ret
push
sbb
xor
pop
fdivs
or
push
in
xchg
jbe
xchg
lds
shrl
out
add
cld
test
pusha
or
jmp
or
lods
sub
mov
mov
data16
ja
adc
push
ret
and
movsl
test
inc
scas
pop
movsl
xchg
ja
pushf
xor
pop
ret
aaa
or
ljmp
iret
inc
push
push
xchg
sub
cs
add
jo
pop
push
jle
jno
fcoml
mov
dec
out
push
fwait
push
mov
ret
jge
fimuls
mov
xchg
jns
xchg
mov
sarl
jle
pop
mov
jae
mov
dec
inc
lret
scas
test
scas
jmp
push
test
fisttps
ret
in
and
imul
and
or
push
pop
add
cmp
fistpll
add
imul
pushf
dec
mov
daa
es
jg
push
cwtl
or
mov
clc
movsl
mov
xlat
in
shll
pop
mov
add
mov
and
adcb
mov
pushf
mov
xchg
hlt
lcall
leave
loope
and
shlb
inc
inc
mov
pop
insl
mov
jbe
movsl
popa
push
xchg
mov
in
mov
lret
insl
aam
lock
mov
cmpsb
lahf
out
adc
and
into
loope
imul
xor
jmp
fcompl
inc
jns
xchg
ja
jno
pop
mov
sbb
sub
loop
gs
aam
je
lock
or
and
movb
xchg
inc
aaa
stc
xchg
fsubs
xchg
mov
pop
push
dec
rclb
test
ret
mov
je
nop
mov
mov
lea
pop
adc
inc
add
testl
jecxz
test
and
lods
int3
mov
cmc
scas
pop
cmp
mov
push
pop
movsl
cmc
imul
inc
es
adc
add
fnstcw
sub
cltd
jae
mov
pop
push
jle
push
ja
dec
jge
mov
lret
scas
jmp
mov
inc
fwait
dec
pop
pop
dec
fistpl
push
xor
mov
xor
push
pop
out
xchg
shl
xchg
cmp
lock
mov
das
mov
inc
shll
lds
xor
push
loop
jne
nop
das
orb
adc
arpl
mov
lods
rcll
fwait
inc
mov
in
mov
in
das
adc
dec
cmp
aaa
rcrl
jo
push
ds
push
clc
and
xor
inc
popf
sub
into
ret
iret
pop
popa
ljmp
out
and
xor
clc
jge
push
decb
imul
popf
mov
dec
inc
pop
jle
test
shlb
or
push
stos
xor
xchg
mov
fildll
mov
movsl
ss
hlt
loopne
sub
pusha
dec
mov
mov
sub
pop
out
into
ficoms
xor
lret
sbb
push
gs
clc
xchg
lock
sub
loopne
mov
mov
lods
enter
inc
shll
cmc
mov
add
or
xor
adc
out
in
mov
mov
adc
push
and
jp
das
ret
jo
pusha
push
adc
adc
ljmp
push
push
push
mov
push
mov
insb
xorl
shlb
push
push
pop
sbb
adc
inc
push
mov
cmpsb
add
pop
mov
xor
dec
shlb
push
mov
das
test
jle
call
je
movsb
inc
clc
pop
mov
lret
les
fisubrs
jb
sbb
in
mov
out
lahf
mov
mov
xchg
sti
xchg
xor
adc
lods
cmpsl
lds
push
push
mov
fcmovb
in
movsb
mov
imul
lret
pop
mov
cmp
push
in
jbe
jg
std
add
cmp
flds
sbb
or
cmp
mov
cmp
mov
loope
xor
push
and
loope
sarl
xchg
sbb
mov
jne
xlat
mov
icebp
mov
mov
mov
lds
shrb
pop
jb
adc
sub
lock
xor
in
das
cmpsb
add
xchg
jbe
out
sbb
popf
ficompl
movsl
mov
out
fidivrl
repz
or
ret
cmpsb
fadds
xor
jb
in
loopne
je
std
stc
aam
pop
je
cmp
cltd
js
cmp
in
call
leave
inc
outsl
pop
mov
icebp
out
jl
outsl
xor
inc
lods
int3
cmp
xchg
pusha
pusha
xchg
xor
clc
or
out
jnp
cmp
xchg
int
pop
inc
fists
out
jne
call
sub
push
xchg
imul
jb
cltd
out
adc
xor
pop
sbb
dec
inc
xchg
sub
mov
xor
fs
mov
test
add
jae
xchg
je
push
call
mov
adc
push
mov
mov
loop
cmp
inc
daa
lods
pop
mov
ja
and
cmp
cwtl
pop
xchg
dec
xor
sbb
push
pop
imul
movsl
loop
and
mov
adc
mov
leave
and
xor
shrb
sbb
or
stc
mov
int
iret
xchg
pop
push
ret
jb
arpl
mov
jge
rcrb
xor
dec
mov
movsb
jmp
pop
ljmp
mov
les
daa
loop
lock
fists
shrl
movsl
test
test
add
cmp
and
ljmp
aaa
mov
arpl
daa
and
inc
stc
push
xor
cmpsb
pop
push
testl
xor
scas
clc
xchg
jl
inc
xor
lock
mov
sbb
aam
or
dec
inc
popa
mov
adc
cld
dec
adc
pop
mov
aas
sub
fdivr
es
test
xor
mov
addb
cwtl
jne
out
push
or
cmp
adc
lods
dec
in
pop
imul
push
sti
ss
or
and
xchg
outsb
loopne
les
jo
mov
sbb
inc
mov
lahf
repz
sub
adc
bound
push
xor
mov
adc
test
ljmp
iret
pop
loope
xchg
add
push
and
int3
add
cltd
popa
or
pusha
jge
sub
in
cltd
pop
pop
fcoms
pop
inc
push
repnz
in
cmp
les
popf
notb
out
in
xchg
mov
sub
scas
dec
sti
rclb
jecxz
jb
nop
mov
push
push
mov
stos
stos
lds
loopne
popa
sbb
lret
sub
dec
xchg
mov
sahf
sbb
repnz
je
mov
movsb
shl
insl
jp
mov
and
jno
push
xor
insb
dec
xor
aam
jmp
lock
cld
lds
std
add
dec
push
mov
xor
roll
mov
in
jns
sar
adc
int3
jne
lea
insb
pop
pop
imul
pop
loop
jl
sahf
cld
ror
xchg
sub
jmp
lods
daa
arpl
and
push
pop
xchg
insl
clc
xor
sub
loopne
rorb
inc
xchg
push
jmp
mov
sub
mov
xchg
test
mov
mov
negl
inc
mov
mov
mov
aas
lret
scas
and
jnp
cmp
int
repz
adc
jnp
lock
push
push
insb
jl
xchg
pop
fbstp
enter
add
pushf
mov
ds
int
inc
xor
mov
hlt
xor
add
aas
loop
push
jb
cmp
inc
fstps
add
or
scas
aaa
sub
lcall
test
iret
and
xchg
cmp
movl
xchg
data16
nop
test
dec
in
mov
jbe
pop
ret
add
cmp
stos
push
add
aaa
das
bound
pop
nop
mov
inc
test
das
jp,pt
in
scas
sbb
or
sbb
push
cmpsl
cwtl
dec
xor
adc
js
icebp
inc
inc
test
or
cmc
push
push
or
fmull
subb
icebp
mov
pop
call
add
fsubr
pop
sbb
and
outsb
dec
lret
loopne
mov
insl
test
mov
jno
jmp
sub
mov
push
push
in
cld
or
mov
add
adc
enter
aaa
jmp
stos
cmp
ja
dec
adc
lods
jnp
in
jecxz
std
pop
out
rorb
js
shll
inc
cmc
inc
hlt
lcall
mov
mov
jp
leave
shl
add
sbb
sbb
repz
sbb
test
jl
cmc
xchg
leave
jne
js
pop
fbld
fistpll
pushf
incb
pop
dec
add
rcrl
sbb
lds
adc
mov
sub
jns
jne
mov
lea
rcrl
cwtl
sarl
je
sti
pop
jl
add
pop
push
dec
or
cmc
stos
ret
lds
arpl
push
xor
xor
cs
imul
int3
clc
adc
sbb
add
cld
cmp
adc
cmpsb
adc
lcall
pop
push
movsl
in
sbb
jae
icebp
les
shl
dec
stos
push
jb
cmp
fimuls
pop
cmpsb
repnz
test
cmc
lret
in
idivl
sahf
dec
mov
xchg
shll
jge
xor
shll
aaa
cwtl
aad
push
inc
ljmp
push
ficoms
xchg
xor
sti
enter
cmpsl
pop
cmpsb
pop
mov
aam
cmpl
outsb
in
std
add
stc
xor
aad
add
popa
addb
sub
ficoms
mov
ljmp
mov
mov
das
ret
int
cmp
out
inc
pop
fdivp
mov
dec
mov
inc
fs
sub
sbb
pop
addl
or
test
mov
sub
push
test
lahf
dec
xor
xor
lret
stc
fdivs
sahf
jno
push
mov
cmp
mov
lahf
ja
loope
popa
repnz
cmp
mov
inc
pop
stos
dec
cmp
aas
or
inc
pushf
dec
and
ret
sbb
push
mov
pop
out
jle
icebp
mov
loopne
inc
sub
mov
push
jno
inc
dec
clc
cltd
stc
adc
xchg
cmp
outsl
inc
sbb
or
arpl
fiaddl
mov
fs
out
dec
inc
outsl
jnp
xchg
and
and
shlb
insb
jae
xchg
aad
ret
push
jge
sbb
cld
mov
mov
sbb
add
das
pop
rolb
xorl
inc
jge
testl
jmp
jmp
and
andl
fcos
add
das
rcrl
pusha
push
or
insl
fidivs
movsl
popf
jnp
pop
in
and
sbb
fwait
xchg
xchg
cmp
sahf
xchg
mov
mov
outsl
mov
lret
stc
dec
adc
dec
xchg
imul
std
mov
sub
push
dec
out
shrb
and
cltd
mov
push
and
fsubrs
jae
in
js
and
or
mov
lock
sub
repnz
pop
xor
push
es
add
mov
loopne
adc
xchg
into
fisttps
jp
enter
adc
insb
stos
loope
or
dec
mov
dec
push
fcoms
sub
sahf
pop
pop
testb
mov
inc
call
imul
sarl
int3
inc
push
in
mov
fwait
js
pop
add
or
push
jmp
popa
sbb
mov
sbb
enter
lods
inc
mov
iret
scas
sub
cltd
mov
cmp
sbb
adcb
ss
or
xor
mov
mov
xor
aas
push
push
and
roll
adc
inc
and
jg
mov
mov
push
push
adc
push
cmpsl
push
fucomip
xor
pop
jnp
push
arpl
sbbl
lods
sti
mov
inc
test
pusha
sub
paddd
add
shll
divb
cmp
shrb
in
xor
dec
out
cmp
cs
add
mov
add
inc
pop
mov
pop
enter
loop
dec
ss
dec
lret
outsl
jnp
es
push
adc
and
mov
in
add
aam
orl
sbb
push
arpl
int
test
negb
dec
loopne
or
push
leave
inc
cld
adc
insl
adc
push
push
push
movsb
cmp
mov
aaa
fabs
jmp
push
pop
lahf
jl
mov
mov
mov
xlat
dec
aam
mov
lret
fnstsw
add
dec
push
push
jnp
push
insl
add
test
and
sub
xchg
push
test
pusha
les
push
mov
fpatan
jmp
cs
in
ds
and
loop
xchg
sub
or
cwtl
lock
stos
xchg
popf
sbb
into
ja
mov
std
dec
jo
sbb
roll
inc
mov
int
push
dec
ds
aam
lods
xor
fsubs
pusha
pop
jmp
dec
lahf
cli
jmp
into
pop
sbb
loopne
sbb
xor
ljmp
cmpsb
jno
pop
popf
std
and
pop
cmp
inc
out
shrl
pop
out
pop
lahf
hlt
or
jno
iret
dec
rcrl
lret
mov
mov
dec
push
loop
and
out
in
fldenv
push
sbb
add
cmp
mov
rep
pop
inc
icebp
push
ret
and
pop
jns
orl
xchg
and
inc
xor
stc
lods
bound
rorb
push
repz
xor
dec
adc
in
rcrb
and
pop
ret
sbb
pop
pop
sahf
iret
popa
add
sub
push
mov
mov
test
dec
aam
test
cmpsl
jmp
ret
dec
and
shlb
mov
or
outsl
push
das
mov
adc
cmp
js
movsb
sbb
cli
adc
test
mov
mul
mov
lock
jb
mov
faddp
add
pop
mov
pop
push
xchg
adc
test
mov
pop
arpl
push
int
pop
pop
mov
shlb
outsb
mov
cmpsb
cld
pavgw
inc
cli
mov
pop
mov
jmp
iret
mov
stos
loopne
jae
xchg
repnz
adc
loop
clc
xchg
jmp
int3
inc
inc
out
ficoms
cmc
mov
adc
push
cmp
movsl
mov
loopne
sub
pop
in
fmulp
lcall
xchg
xorb
movb
adc
inc
bound
jle
daa
insb
pop
jo
and
shrb
shl
sbb
add
test
addr16
sub
sbb
inc
das
adc
push
pushf
sbb
lock
dec
mov
and
jne
or
sbb
xchg
push
lods
pop
dec
lods
pop
adc
or
lcall
fists
cmp
pop
call
push
xchg
push
sbb
mov
inc
clc
xchg
xchg
push
add
add
imul
and
xchg
cmp
add
pop
fmull
push
repz
inc
dec
sbb
mov
mov
push
mov
mull
mov
enter
sbb
jg
mov
stc
xor
ds
imull
js
adc
sub
cmp
xchg
mov
mov
shlb
jo
mov
gs
mov
or
push
out
imulb
xor
ret
inc
push
test
repnz
inc
mov
jbe
loop
daa
inc
rclb
xchg
aaa
test
test
sbb
jle
jp
push
out
mov
add
push
sbb
es
mov
pop
sbb
std
xor
cmc
mov
jno
iret
jmp
insl
cmc
mov
jne
popa
sub
jnp
xchg
es
testl
jo
dec
call
scas
mov
icebp
rcr
aas
lds
push
mov
inc
rep
push
js
sbb
xchg
mov
popa
std
into
pop
add
xchg
scas
out
outsb
jg
addr16
sub
out
mov
sbb
mov
ret
dec
fmull
imul
fs
test
iret
dec
mov
dec
push
push
push
ljmp
flds
add
dec
rorb
iret
mov
or
xor
mov
in
mov
xchg
sbb
inc
lcall
jb
jno
out
pop
push
insl
pusha
hlt
sbb
add
ljmp
mov
jl
bound
or
std
sbb
or
lcall
adc
mov
mov
ret
loop
sbb
popa
inc
xlat
std
enter
inc
outsl
pop
sub
fwait
ss
std
push
loope
dec
cltd
je
pop
leave
test
cmp
push
pop
lahf
stos
cmpl
mov
or
es
jns
jnp
sbb
cltd
shr
out
test
xchg
xchg
movl
jb
js
or
dec
or
cmp
cmp
cwtl
push
enter
xchg
aas
push
jl
xor
jae
sbb
loop
jno
xor
scas
and
mov
sub
pop
insb
push
sbb
clc
ds
popf
cmp
stc
mov
pop
rclb
sti
test
in
pop
hlt
xor
xor
xchg
rcll
adc
pop
pop
cmpsl
std
ds
lock
adc
mov
push
push
inc
lret
jle
jnp
test
add
dec
sbb
pop
std
and
inc
jmp
daa
jbe
ljmp
add
add
rorb
adc
mov
xchg
call
mov
xchg
jbe
jp
pop
fbld
test
xor
sub
push
and
fcmove
jmp
push
add
into
mov
fwait
sub
or
popa
xchg
testl
pop
aas
in
push
popa
push
stos
test
xlat
cld
lahf
testb
popa
cmpsb
cld
movsb
imull
xchg
pop
stc
dec
mov
rcll
lds
push
test
xchg
dec
cmc
movsl
out
push
bound
dec
jae
cmp
xchg
sahf
mov
jb
stos
movsbl
imul
dec
xchg
xor
adc
es
push
jl
into
cmp
mov
movsl
nop
fimull
cmp
mov
jmp
xlat
scas
cmc
lret
xchg
adc
inc
xchg
jo
loop
push
lahf
mov
push
lahf
sub
repz
push
or
jecxz
sbb
gs
xchg
scas
sbb
cli
cmp
inc
mov
lcall
push
or
dec
or
mov
or
fwait
cli
xlat
int3
push
int3
repz
cmp
lea
test
mov
enter
dec
sub
mov
and
push
pop
xchg
inc
popa
jno
les
inc
loope
imul
xchg
les
mov
cmp
add
out
xchg
pushw
xchg
dec
adc
subl
mov
push
stc
clc
adc
add
sub
mulb
notl
xchg
aam
cmp
push
push
out
dec
dec
lea
inc
aaa
stc
imul
in
xchg
pop
popa
jl
fistl
jecxz
and
lahf
mov
add
idivl
outsl
jl
xchg
push
out
dec
cmp
vmread
push
sub
mov
arpl
add
in
mov
loope
ret
mov
adc
popl
adc
insl
jle
inc
inc
pop
cmpsl
cli
shlb
mov
push
ja
mov
jno
pop
je
pop
jae
or
out
dec
stos
cmp
xchg
sbb
shrb
cwtl
addr16
addr16
mov
pop
shll
int
jp
adc
add
xchg
jmp
xchg
pop
and
jne
mov
xor
dec
negl
push
test
pushf
mov
sbb
and
xchg
fidivrs
mov
mov
and
and
push
pop
cwtl
bound
mov
ja
mov
and
das
sahf
cmpsb
stos
add
out
testl
add
insb
popf
inc
push
sub
roll
out
jnp
lahf
imul
js
aaa
andl
jne
sub
jmp
sti
neg
push
xor
dec
xlat
test
subb
inc
mov
adc
mov
data16
and
es
int3
and
and
push
aad
repnz
aam
cmp
and
inc
std
adc
mov
sub
xlat
pop
fcomi
jmp
jg
sbb
pop
jecxz
rcrl
sbb
ss
enter
rorl
adc
jmp
mov
push
iret
inc
and
ret
scas
mov
pop
popa
arpl
cmpsb
dec
xlat
fwait
cli
pop
movsb
repnz
outsl
mov
ret
mov
dec
mov
push
leave
movsl
dec
xchg
scas
adc
lock
ret
adc
in
jne
test
shl
lahf
add
add
xchg
test
loop
pop
jmp
in
sub
stos
pop
mov
aaa
stc
ret
dec
dec
sub
das
sub
jo
mov
pusha
mov
ljmp
fcoml
sti
test
lods
bound
nop
sahf
icebp
adc
gs
add
add
adc
mov
pop
lds
cli
fwait
int
push
jle
testl
shll
insb
mov
adc
push
jmp
cmp
jmp
push
rolb
xor
mov
sub
pop
inc
fsubl
pop
pop
hlt
fcmovbe
lods
push
rorl
pop
sarl
in
inc
cwtl
adc
xchg
out
and
xchg
sti
pop
inc
movsl
pushf
mov
cmpsb
repnz
in
mov
adc
orl
jg
lds
aas
or
adc
mov
cmpsb
in
lock
pop
xchg
gs
push
or
mov
or
or
std
cmc
lcall
lcall
lret
popf
pop
aad
xchg
sbb
jge
and
dec
xor
sbb
mov
inc
sbb
xor
sti
and
icebp
or
daa
leave
repnz
aam
fwait
jmp
jl
outsl
adc
jl
idivb
pushf
cld
mov
sbb
mov
and
inc
dec
lods
call
fstpt
push
je
sti
add
xor
scas
ss
lods
jnp
popa
sarl
mov
out
subb
push
push
xchg
pop
jle
mov
add
xorb
lock
cmc
out
inc
adc
scas
inc
movsb
js
adc
arpl
out
loope
int3
push
mov
call
in
push
test
imull
pop
push
or
test
bound
lahf
mov
scas
push
testb
jb
xchg
pop
mov
add
fs
or
and
orl
sarb
lods
fcmovnbe
dec
jp
in
imul
push
sbb
cmp
and
adc
loope
push
adc
fisttpll
sub
fmul
ljmp
cmp
call
mov
repz
nopl
mov
mov
xorb
popa
xchg
jnp
iret
adc
jge
sbb
cmp
and
bound
xor
and
notb
addr16
sub
movsl
aad
xchg
in
add
xor
adc
fidivl
push
lds
mov
adc
in
test
xlat
fucomip
int3
dec
mov
jno
test
adc
inc
mov
inc
jno
arpl
lahf
jae
or
jns
jp
add
xchg
mov
mov
cld
and
jmp
lds
aas
out
jmp
ja
push
cmp
cmpsb
sbb
mov
push
int
dec
jae
and
xchg
inc
mov
ja
popf
adc
jmp
test
aad
or
in
sbb
add
mov
mov
mov
cmp
enter
movsb
push
push
icebp
mov
shrb
push
int
js
enter
pop
jns
mov
inc
les
popa
jne
adc
add
lcall
dec
das
sub
test
push
nop
lret
fsubl
jmp
cli
cwtl
jl
mov
mov
mov
sahf
icebp
divb
data16
and
sub
cmp
shll
test
hlt
jb
ljmp
jno
shlb
je
outsb
stos
pop
lds
push
cmpsb
ljmp
mov
adc
push
xchg
in
and
cwtl
jle
fildl
out
popf
xor
add
xor
jo
jp
inc
or
outsl
add
les
js
dec
js
jb
mov
pop
cmc
pop
dec
or
pop
ret
lcall
enter
fcom
add
xchg
test
stos
cmpsl
and
int3
push
jp
add
outsl
or
sub
mov
add
xor
cmp
or
jns
into
xor
lods
mov
rol
addr16
inc
les
lds
iret
xchg
jo
stc
leave
fimull
dec
test
ds
insb
call
cmp
pop
dec
lret
popa
jge
fistl
sbb
adc
xlat
roll
pop
in
dec
enter
add
mov
xchg
mov
repnz
sub
push
push
insl
popf
psrlw
ret
push
mov
cli
sbb
sub
mov
repnz
mov
scas
mov
inc
pop
push
xchg
cmp
pop
adcl
popa
cs
clc
add
sub
dec
add
fnstenv
daa
idivb
subl
test
sbb
and
dec
xchg
mov
lods
push
xchg
es
test
fwait
pop
mov
push
mov
push
insl
icebp
or
push
dec
mov
push
push
std
cltd
mov
mov
adc
mov
jno,pt
pop
adc
pop
cmp
jmp
jmp
cltd
test
adc
js
clc
aad
mov
xchg
sbb
nop
sub
in
in
test
xchg
push
rclb
mov
xor
mov
push
fistpl
jl
inc
add
pop
xchg
pop
mov
movsl
dec
xchg
push
push
push
jae
subl
mov
mov
cld
out
adc
xlat
mov
mov
dec
mov
jmp
mov
jecxz
push
jbe
push
lea
pop
enter
testb
cld
jge
inc
out
pop
add
nop
popf
shlb
xchg
lcall
int3
outsl
in
mov
pop
mov
pcmpgtw
ss
scas
icebp
xorl
pop
bound
cmp
xor
stos
jb
icebp
clc
imul
rcl
shlb
pop
push
ljmp
sub
jmp
imul
fwait
repz
mov
cmp
jae
js
gs
adc
adc
call
repz
cmpsl
dec
shr
faddl
push
cmp
popa
arpl
inc
cmp
mov
mov
add
rcl
es
ljmp
and
xor
push
aaa
or
xor
je
scas
test
xor
andb
cli
xchg
pop
cwtl
shlb
mov
aam
stos
xchg
cmp
sub
and
popa
in
rcr
jp
inc
cmp
cmp
movsl
lret
jno
cmpsl
mov
shlb
ds
mov
rolb
mov
out
add
jl
adc
stos
push
sbb
cmpsl
push
mov
arpl
shll
dec
or
pop
gs
dec
jo
jl
xchg
or
sub
loopne
adc
adc
daa
adc
cmp
mov
jo
lret
push
shlb
pop
outsl
add
inc
ss
push
testl
dec
movsb
gs
stc
mov
jno
leave
sti
xchg
xchg
inc
adc
dec
and
mov
stos
negl
insl
sub
jb
popa
test
jno
stos
lods
insb
lods
cltd
ljmp
add
mov
adc
iret
imul
inc
fcomps
fadd
fidivrs
push
pusha
lods
fs
cmp
mov
icebp
pop
ja,pt
int3
les
mov
xchg
scas
mov
jle
mov
aam
jge
xchg
nop
xor
add
or
pushf
push
jl
or
jp
mov
sub
fsts
pop
xchg
dec
add
lret
xchg
inc
push
imul
popa
out
xor
dec
lret
jmp
mov
push
les
push
ja
xchg
inc
cmp
addr16
jbe
lock
call
dec
mov
mov
jg
mov
push
fsubs
push
fstpl
pop
dec
dec
sub
jns
enter
jge
cmp
inc
cmp
icebp
mov
rorl
out
xor
loop
icebp
jmp
cmc
loopw
or
dec
lret
cwtl
jo
popf
frstor
cmp
outsl
in
stos
push
gs
add
xchg
push
and
mov
cwtl
popf
mov
xchg
movsl
xchg
xor
test
mov
mov
cli
dec
inc
popf
dec
shll
sub
jbe
mov
mov
jnp,pn
fimull
aad
divl
or
and
mov
rorl
mov
push
jle
add
pop
lods
adc
pop
mov
pop
lahf
mov
testb
sub
pop
xchg
loopne
add
out
dec
mov
inc
in
aaa
stos
mov
pop
jp
lret
cmc
push
pop
fcomps
test
ret
and
adc
loope
sahf
inc
sbb
jb
and
icebp
and
add
lcall
mov
lea
les
lock
inc
mov
inc
xor
add
divb
cmp
jmp
mov
addl
jge
mov
jmp
andl
mov
push
inc
imul
fldt
es
out
mov
or
and
subb
mov
dec
aad
jmp
jecxz
mov
sahf
into
dec
add
mov
adc
ficompl
and
andb
fs
das
jle
xchg
push
sub
div
mov
in
test
push
inc
add
and
faddl
pop
jl
icebp
jecxz
lcall
ja
mov
jb
dec
pop
and
in
fistl
sti
push
or
pop
imul
inc
or
ret
add
mov
cld
aad
dec
jge
out
out
stc
cld
lahf
rorb
gs
int
loope
mov
rcrb
sbb
jmp
jns
movl
outsl
shl
loop
jnp
cmp
xchg
mov
push
rolb
int3
xchg
movsb
xlat
sub
aad
fwait
mov
jae
xchg
out
pop
sbb
xor
sbb
cmp
push
dec
stos
xchg
inc
fisubs
lret
xchg
lds
pop
inc
adc
adc
in
in
jae
add
jg
jmp
or
test
inc
adc
mov
test
pushf
js
fdivs
sbb
lret
dec
sub
clc
cmp
scas
sbb
pop
invd
mov
aaa
aad
jnp
sahf
mov
push
jp
fcoml
lret
sub
and
dec
pop
and
xchg
arpl
insb
push
push
daa
fdiv
mov
call
xchg
inc
cmp
inc
jp
scas
mov
lock
lds
jnp
icebp
mov
shl
cmp
pop
mov
jno
pop
and
inc
fwait
cmpsb
dec
lods
movsb
movsb
ret
stos
mov
mov
lret
pop
jle
xor
les
fcmovnbe
in
lahf
pop
dec
movsb
sub
xchg
insl
leave
lea
popa
lret
test
mov
pop
fldt
subl
btrl
int
and
stc
mov
push
leave
daa
mov
mov
fs
loop
ret
ds
stc
jns
push
jle
mov
pop
push
xlat
sub
mov
inc
out
call
xor
inc
shlb
mov
insb
and
lret
pop
aam
and
das
fdivrs
and
sub
jno
rolb
mov
std
mov
pushf
xchg
fld
les
mov
inc
xchg
mov
int3
fimull
mov
fwait
aam
mov
inc
test
addb
cmpsb
inc
add
int
xor
call
out
push
andb
or
mov
stos
push
fidivrs
fstpl
jmp
mov
lahf
mov
push
push
lods
lahf
fisttpl
sbb
push
sarl
pop
movsl
or
push
in
or
mov
xchg
xchg
adc
or
rcll
inc
dec
outsl
leave
bound
fldcw
and
or
arpl
dec
scas
flds
clc
dec
push
mov
xor
and
and
sbb
jb
xchg
stos
sbb
ja
ljmp
sub
mov
jle
mov
pop
shr
neg
push
xor
mov
sbb
out
hlt
mov
mov
in
pusha
or
shrl
add
inc
xor
inc
xchg
or
push
sti
jp
jo
mov
loop
dec
cmp
outsl
sub
jns
rorb
xchg
jg
int
js
cltd
sbb
jno
fdivrl
fwait
mov
sbb
imul
pop
pop
in
inc
add
cs
mov
ja
sti
xchg
es
icebp
dec
arpl
cmp
in
fwait
out
jmp
stos
jb
hlt
xchg
mov
jmp
jno
push
adc
ror
lds
jle
pop
enter
pop
repnz
sub
inc
dec
jle
loopne
aam
out
inc
ds
add
subl
inc
adc
push
xor
xchg
ljmp
xchg
daa
les
inc
repz
aad
cmp
arpl
fcoms
mov
mov
or
inc
or
repz
out
inc
and
arpl
cmp
cmpsb
enterw
inc
inc
sbb
cli
mov
stos
add
ljmp
icebp
rclb
test
push
and
je
xor
xchg
cli
les
inc
xor
outsb
push
aas
cwtl
dec
push
dec
push
int3
cs
and
lcall
xchg
fidivs
hlt
cmp
xchg
jge
mov
lret
dec
test
jle
mov
pusha
rorb
loop
or
sub
lods
add
std
orl
andb
jecxz
scas
and
int
sahf
push
inc
sbb
mov
push
cmp
scas
jb
psraw
int3
xchg
imul
jns
pop
and
jbe
ja
data16
inc
pop
xchg
xor
in
pop
inc
push
xorl
lahf
sbb
adc
je
insb
add
mov
fidivs
scas
jle
outsl
lret
dec
imul
iret
jle
or
push
xchg
push
sub
xchg
cmp
popa
xchg
and
leave
cmp
or
mov
loope
sbb
dec
add
sbb
push
test
mov
bound
test
sahf
aad
jns
mov
test
das
pop
inc
mov
aaa
cmp
and
mov
test
xor
and
pushf
icebp
xor
cmp
mov
scas
inc
enter
xchg
int
mov
adc
pop
add
out
in
out
or
add
cmp
movsb
insl
add
sbbl
jl
movb
pop
shrl
aam
push
and
in
stos
sbb
std
cmp
or
es
js
push
pop
xchg
cmp
cmpsb
das
inc
stc
cwtl
das
idiv
add
rclb
cmpw
lods
sub
jl
subb
jmp
int3
jmp
sbb
repnz
pop
xor
in
das
pushf
cmpl
movsb
xchg
add
mov
cli
call
stos
rolb
fidivs
inc
sub
or
cmp
push
dec
push
imull
out
adc
rolb
lods
mov
stos
bound
push
out
cmp
call
inc
pop
das
test
lret
adc
fsub
cmp
push
enter
lahf
arpl
lahf
test
cmp
aaa
push
lret
ds
outsb
rcrl
dec
push
repz
das
adc
xor
mov
cmp
into
mov
lds
ror
jle
push
ljmp
bound
movsl
jmp
mov
das
cmp
inc
dec
fsubs
imul
push
mov
pop
test
xor
out
pop
pop
add
inc
ljmp
iret
fdivrl
rorb
inc
xchg
add
jg
cmp
daa
pop
mov
negl
arpl
mov
mov
xchg
sub
addr16
ja
aas
pop
lcall
dec
aam
xchg
push
cs
add
jno
scas
arpl
mov
xor
cmpsl
fsubr
js
xor
or
mov
push
fs
cmp
jb
pop
movl
pop
roll
inc
out
cmp
xor
add
lcall
cmp
stos
pop
movsl
test
cmp
mov
test
add
les
mov
in
dec
sbb
pop
cmp
and
fimull
jo
cmp
sbb
jnp
call
fistpl
pusha
mov
xchg
mov
out
inc
lahf
lods
test
xchg
jge
push
pop
fnstcw
pop
sub
or
rclb
mov
push
scas
and
push
ds
pop
pushf
pop
push
pop
scas
test
ret
xchg
mov
leave
sub
pop
scas
pop
add
xor
or
insl
lea
or
sbb
subl
fildl
repnz
mov
xor
xor
test
imul
insl
stos
out
stos
pushf
adc
aad
pop
js
out
sbb
les
idivl
and
pushf
dec
jmp
mov
loop
repz
push
or
dec
pop
icebp
sub
iret
out
stos
insl
sub
pop
outsl
fs
push
loopne
out
stc
mov
cmp
jp
mov
cmp
arpl
inc
in
mov
imul
orl
arpl
sub
insb
and
inc
add
pop
adc
cmp
mov
leave
je
popf
outsb
lods
outsb
push
bound
ret
xor
jb
cmpsb
cwtl
hlt
mov
incb
push
and
xchg
cli
mov
jge
lock
bound
flds
call
rcll
mulb
stc
addl
pop
loop
mov
xchg
pop
movsb
incb
das
fisttpl
inc
inc
scas
push
jecxz,pn
sbb
sbb
aas
out
cld
sti
sbb
out
push
add
jge
adc
inc
insl
mov
aam
and
popl
aad
pop
dec
jg
sbb
movb
ljmp
mov
or
jo
push
jns
shlb
adc
and
dec
sub
xor
xchg
mov
movsb
push
dec
das
xchg
hlt
add
or
xor
push
mov
imul
and
loope
rolb
mov
popl
cltd
cli
test
cmp
jbe
or
push
insb
pop
ja
inc
jge
out
insb
add
imul
inc
pop
xor
out
and
jnp
pop
inc
push
clc
dec
cs
mov
add
in
mov
mov
mov
add
add
add
daa
arpl
addb
shr
pop
stos
xchg
pop
and
mov
push
popa
mov
sub
or
dec
cmp
shl
popf
inc
fbld
addr16
mov
push
and
shll
repnz
jmp
test
subb
sub
xchg
scas
mov
shll
subb
ficoms
sub
dec
ss
xor
xchg
push
push
xor
fnstcw
gs
dec
jle
adc
push
pop
dec
xor
fbld
xchg
cmpsb
mov
repz
rcrl
lcall
inc
out
and
mov
mov
out
adc
gs
lret
dec
les
jg
or
sub
adc
cmp
lds
mov
cld
scas
cmpsb
and
inc
aam
insl
test
add
nop
add
xor
and
icebp
icebp
sub
pop
add
sub
sarb
pop
jl
les
andb
subb
into
scas
cwtl
cs
lods
aas
inc
stos
shrl
xchg
mov
mov
lret
fs
push
int3
mov
cli
lret
insl
jp
and
add
or
pusha
aad
mov
pop
cltd
push
cmpsl
adc
hlt
dec
dec
mov
cmp
and
inc
mov
aam
fistpl
lock
mov
mov
stos
mov
adc
jg
dec
loope
cmpsb
lcall
cmp
aaa
fidivrl
flds
cltd
fimull
insb
sbb
outsl
cmpsl
int3
repnz
pop
ficomps
mov
mov
test
pushf
mov
and
imul
roll
arpl
xchg
bound
stos
lea
or
pop
cmp
loope
push
or
pushl
test
fwait
xchg
sbb
pop
pop
subb
test
out
or
lods
cmp
repnz
jo
aas
push
or
je
mov
pop
push
not
imul
lret
loopne
and
jle
cs
aam
and
xchg
cmc
aad
popf
lds
inc
push
jle
pop
stos
in
xor
repnz
or
push
fs
ret
push
pop
inc
pusha
lret
cmpsl
cld
or
inc
xor
and
idivl
int
mov
lahf
aam
sub
sbb
xchg
push
cmpsb
fstl
sarl
scas
aas
mov
hlt
push
mov
fmul
incb
addl
dec
mov
loop
dec
call
mov
dec
jb
sub
or
mov
ret
pop
jno
sub
and
hlt
loopne
add
fistpll
cmp
and
dec
xchg
jge
sbb
nop
lods
movsb
mov
nop
push
jge
mov
es
pop
stos
es
add
xor
lods
mov
stc
pusha
arpl
in
mov
xchg
sbb
sti
ret
add
mov
inc
mov
hlt
xor
xchg
cmpsb
adc
add
sbb
orb
add
ds
test
xor
jp
mov
sub
pop
fdivs
pop
mov
mov
shlb
ja
adc
lret
pop
js
cmpsl
andl
add
push
jmp
and
daa
retw
inc
push
movsl
stos
xchg
sbb
int
mov
push
cmp
xor
pop
cwtl
dec
dec
stos
mov
mov
sbbb
pop
pop
pop
push
mov
mulb
xchg
dec
scas
test
adc
cmp
xchg
hlt
xchg
imul
adc
es
mov
and
mov
and
dec
mov
sub
dec
fs
mov
loop
std
sub
xchg
and
adc
jno
je
jbe
adc
inc
shll
add
adc
das
test
fdivrs
cmp
inc
rcll
jno
xor
movsl
mov
inc
lock
loop
sti
sbb
arpl
sbb
dec
cmp
insl
xchg
or
je
adc
jbe
xor
pushf
mov
cmp
push
xchg
dec
and
movsl
shrl
jno
dec
dec
dec
sbbl
gs
retw
cmp
inc
and
jb
fists
xchg
cld
cmp
in
or
mov
sub
mov
ret
pop
stc
cmc
push
jb
inc
xchg
xchg
fs
rolb
lods
nop
mov
mov
or
mov
aas
jp
cmp
push
mov
iret
dec
pop
shrl
dec
add
mov
and
pop
jge
ja
and
insl
sbb
mov
xchg
sbb
cmpsl
rorl
shrl
lods
mov
jo
fsub
dec
or
push
or
test
dec
test
fbstp
and
adc
shlb
push
sbb
jecxz
pop
pop
lea
incb
mul
sarl
ljmp
xchg
lret
or
cld
pop
jne
cwtl
sub
into
movsb
ds
xchg
push
jb
push
mov
scas
adc
push
dec
pusha
clc
cld
cmpsb
jmp
sahf
lods
je
inc
mov
xor
sbb
fcmove
test
sub
popf
pushf
into
sbb
clc
mov
mov
mov
add
or
ret
mov
pop
in
or
hlt
dec
ja
nop
negb
nop
in
outsl
push
sub
in
add
fsubrl
lock
push
mov
test
shr
fists
imulb
aaa
mov
pop
pop
and
jle
test
mov
fwait
ret
mov
call
push
push
sub
mov
jle
es
cmp
shll
mov
xchg
add
xchg
loop
jl
cld
loop
lcall
cmp
push
cmp
inc
cs
cs
adc
and
gs
adc
mov
les
jne
bound
enter
mov
xor
pop
sbb
cmp
fimuls
stc
loope
gs
out
sbb
ret
mov
push
push
jbe
popf
adc
jmp
adc
out
and
cs
cmp
dec
mov
shrb
addr16
xor
test
jmp
inc
sub
adc
into
scas
sub
cltd
and
repz
shlb
jae
inc
mov
jmp
and
icebp
pushf
iret
or
jae
jmp
divb
lock
lock
ss
jne
cmp
sbb
cmp
sbb
mov
sbb
in
btr
dec
xlat
add
sbb
cmp
adcl
sar
movsl
xor
xor
roll
xchg
jmp
out
ftst
std
fnsave
adc
pop
int
push
idivb
lahf
pop
loop
pusha
pop
pushf
xor
dec
mov
popf
lock
arpl
rolb
sbb
iret
rcrl
jg
xor
push
aam
scas
bound
js
aas
xor
cmp
jp
xchg
fwait
or
pop
jb
or
aam
jge
or
in
cmp
fidivrs
push
push
dec
lret
bound
ss
dec
adc
dec
cmp
jge
push
jge
aad
stos
or
pop
xchg
je
jecxz
xchg
inc
shr
mov
out
cmp
dec
mov
ret
lret
inc
jl
xchg
inc
xor
mov
xchg
shll
les
out
fists
int
shlb
mov
std
mov
shl
js
dec
repnz
fcomps
inc
pop
push
jo
push
inc
ret
hlt
mov
pop
sub
add
push
sarb
fdivr
xchg
mov
jmp
adc
push
push
aaa
cmp
mov
mov
dec
lea
outsl
ljmp
xor
popf
es
or
add
ffree
stos
mov
scas
add
mov
xchg
push
jbe
mov
xchg
jmp
test
mov
sbb
int3
in
aam
adc
enter
jmp
inc
sub
pusha
lods
out
xchg
lods
int
push
frstor
loop
add
cmp
imul
bound
sub
pop
dec
repnz
and
movsl
cmp
js
pop
popf
jle
dec
sbb
std
jl
pop
sar
mov
in
das
ds
and
lods
into
fnsave
test
out
inc
cmc
jb
mov
cs
pop
mov
push
mov
mov
xor
lahf
mov
push
or
subb
in
lret
pop
inc
mov
lods
lea
add
inc
pop
cmpsl
xorb
lds
jecxz
pop
pushf
push
inc
pushf
stos
clc
pop
jp
mov
fs
sahf
cmp
mov
push
sbb
jns
mov
shl
inc
fxch
inc
out
ss
sahf
jns
pusha
mov
mov
jle
mov
out
in
xchg
inc
test
enter
inc
sbb
outsl
cmp
jl
daa
or
push
call
cltd
mov
push
jmp
ret
xlat
pop
pop
call
int3
fnstenv
daa
xchg
jb
fsubrl
lahf
movsb
stc
xor
push
test
lods
pop
test
ret
out
or
adc
pop
jae
xchg
xchg
mov
push
inc
mov
mov
int3
dec
jns
push
cmp
push
in
data16
in
mov
mov
shl
pushf
repz
mov
jae
and
mov
fimuls
adcl
cmp
lret
notb
call
xor
int3
inc
mov
lret
jnp
mov
dec
mov
lret
jae
aad
inc
push
ja
lds
mov
push
hlt
lods
pop
pop
lahf
in
cli
mov
inc
pushf
adcl
mov
fbld
imul
stc
mov
dec
push
dec
adc
cmpsl
mov
xor
test
dec
ja
jmp
xor
stos
add
filds
lcall
inc
popa
xchg
lods
or
sbb
jg
adc
fsub
add
bound
xchg
sbb
push
out
cmpxchg
push
mov
cld
sti
xchg
cmpl
or
sub
stc
sbb
cmp
mov
or
aaa
inc
test
pushf
outsb
scas
cmp
std
gs
push
test
inc
add
push
clc
cmp
jae
pop
sbb
mov
enter
in
loopne
hlt
jo
cmp
and
gs
inc
lret
roll
sub
and
sbb
xor
icebp
pop
rcrb
cli
out
push
or
fstpt
fdivrl
ljmp
shrl
jle
fbstp
add
and
cmc
cmpsl
or
stos
adc
mov
mov
cmpsb
lcall
jbe
loope
ret
enter
in
andl
cmp
pushf
mov
fnstsw
fimull
mov
repnz
jle
aas
rorl
mov
xchg
out
lret
mov
lahf
cmp
and
das
adc
pop
or
push
lret
adc
pop
and
in
arpl
ljmp
jl
xchg
add
idivb
push
cmp
pop
les
push
popf
daa
shll
push
xchg
jns
or
xor
popf
aad
movsl
test
xchg
pop
enter
cmp
arpl
pop
cmpsl
sub
inc
sbb
sbb
lret
sbb
pop
xor
aaa
cmp
push
cmpsb
in
inc
pop
add
es
mov
int
iret
stc
adc
cmp
ljmp
pop
dec
sbb
pop
push
or
cs
mov
rcl
je
in
iret
movsb
cmp
cwtl
mov
jl
sbb
fs
bound
push
fistpl
sbb
sub
jp
push
loop
or
sar
in
or
lahf
mov
imul
or
pop
sub
inc
rcrl
insb
add
xor
add
loop
hlt
push
jbe
movsl
sarl
js
add
in
insb
addr16
loop
jae
mov
or
jae
aaa
xor
inc
jecxz
loop
std
arpl
or
or
movsb
les
fstl
pushf
cmpsl
cli
sub
jne
movsb
xor
pop
xchg
aas
cmp
pusha
ficoml
dec
fdivrl
sahf
shrl
pop
insl
sub
mov
mov
dec
mov
in
daa
mov
mov
and
or
sub
add
inc
out
gs
dec
and
cld
ds
sub
fisubl
cs
call
lds
repnz
mov
push
fimuls
loopne
lcall
cmpsl
lea
cmp
aaa
out
mov
sub
pop
add
int
adc
dec
push
xchg
into
cltd
or
mov
cli
xchg
nop
call
ss
lods
scas
in
jbe
push
movsl
mov
daa
cmp
mov
fcmovnb
pop
push
mov
jle
rorb
sub
mov
lcall
jbe
xor
add
cli
shr
fcoml
fildll
sarb
and
mov
out
aas
sub
aad
scas
mov
pop
aaa
movsl
and
ljmp
sbb
fidivs
xorl
in
inc
icebp
xor
jmp
jb
sbb
mov
jne
xchg
pushl
adc
jp
sahf
push
pop
add
sub
adc
add
insl
cmp
leave
cmp
in
sbb
test
sarb
fnstsw
add
add
divl
movsl
xor
add
pusha
adc
jae
xlat
push
cmp
xor
imul
add
jp
xor
shl
mov
stc
mov
add
cmp
movsl
insb
sub
push
pushf
shrb
test
jmp
dec
sti
je
outsl
jg
inc
push
sahf
dec
lea
into
addr16
xor
adc
or
ljmp
xor
in
ja
xchg
aaa
xchg
in
imul
bound
out
mov
outsb
inc
shlb
aaa
inc
lea
gs
aam
lcall
aam
lret
js
les
cld
mov
inc
xor
push
test
mov
mov
addb
mov
lea
add
loopne
lea
pop
insb
clc
hlt
jne
rcrb
mov
cmpb
sbb
add
scas
cmpsb
insb
jg,pn
out
push
adc
aas
cmp
xor
mov
or
cmp
and
outsl
daa
das
and
adc
xor
vpshlq
xchg
lods
pop
inc
sahf
or
adc
sub
scas
aas
das
and
je
mov
inc
or
and
mov
push
mov
and
cld
lods
mov
inc
xlat
xor
cmpl
mov
mov
jg
clc
popf
jb
or
lcall
je
xchg
ss
nop
mov
sub
sti
pop
ja
fstl
mov
dec
cltd
ss
mov
loope
test
pop
call
loope
or
push
jae
gs
addr16
sub
pop
inc
push
dec
mov
or
aaa
mov
les
out
mov
fnstsw
dec
and
fnsave
mov
lret
cwtl
xchg
fists
or
fcomp
mov
fwait
push
xlat
aad
inc
loope
jmp
cmpsl
adc
push
mov
les
push
rcrb
and
mov
mov
xchg
ret
adc
icebp
js
add
mov
call
sbb
inc
dec
jb
push
xchg
pop
cmc
cmp
xor
sbb
rorl
mov
pop
add
dec
xchg
mov
repz
mov
mov
jae
push
jnp
aas
push
pop
popa
or
mov
out
lea
out
mov
mov
cmp
xchg
nop
das
sarl
pushf
cmp
sbb
in
arpl
mov
xchg
push
mov
jae
mov
sub
in
sbb
mov
add
mov
nop
roll
sbb
ret
xchg
mov
pop
sub
insl
lods
push
aam
out
stos
push
jl
mov
add
mov
ret
xchg
or
dec
push
mov
or
data16
sahf
mov
fwait
aad
push
and
je
jo
je
cltd
and
fucomp
sub
sbb
test
pusha
ja
hlt
mov
or
jbe
mov
ljmp
jp
lods
mov
lret
lret
scas
xchg
loopne
mov
lds
sub
mov
lods
mov
xor
or
xchg
or
adc
lahf
test
sbb
jmp
xor
push
add
sbb
adc
test
or
shl
ja
test
insb
std
cltd
sahf
xchg
xor
out
stos
ljmp
and
cmpsb
pop
cmp
or
inc
xor
push
jp
pop
cwtl
aas
mov
loope
mov
pop
pop
bound
addr16
ud1
test
or
outsb
push
mov
cwtl
pop
push
fwait
insb
scas
movsb
or
mov
cwtl
lret
movsl
repnz
or
in
inc
and
cmp
pusha
cwtl
jns
lock
ffreep
and
into
ret
cmc
loope
fisubl
in
xchg
sbb
flds
add
test
or
lds
mov
loop
sbb
sbb
ljmp
sbb
inc
inc
jno
in
rcll
and
xchg
daa
mov
sub
lcall
pop
insb
mov
mov
adc
pop
icebp
and
mov
mov
pop
gs
arpl
mov
push
arpl
adc
enter
popa
mov
jl
mov
lods
sbb
enter
dec
xchg
out
or
insb
stc
mov
mov
scas
sarb
gs
sbb
call
lahf
xor
cmp
sbb
aas
push
in
jg
popf
sahf
or
jle
cmp
lea
ljmp
xor
push
js
mov
insb
push
in
sbb
fcoml
mov
lahf
pop
jo
mov
cmpsl
push
test
adc
daa
lods
mov
jnp
xchg
sarb
pop
mov
ds
jg
sub
popa
inc
xor
filds
push
out
call
dec
stc
mov
jg
lahf
xchg
into
int3
sub
test
cltd
into
int
test
negl
sbb
mulb
imul
xchg
stc
cmc
enter
pop
push
rolb
fimull
sbb
rcrb
cli
mov
not
or
jmp
sbb
jne
ret
aad
inc
add
arpl
stos
fdivrl
xchg
cmpsb
mov
inc
iret
cwtl
xor
pop
push
xchg
mov
in
push
icebp
pop
in
fiadds
fdivl
push
dec
add
stos
out
jae
add
or
sub
shll
in
ret
sub
pop
mov
test
js
hlt
pop
jb
scas
mov
out
inc
jno
in
imul
mov
sub
fdivrl
pop
fadds
push
adcl
and
mov
cs
fimull
mov
and
jns
popf
outsb
jnp
sub
sarb
dec
xchg
rorb
dec
pop
scas
cmp
add
mov
sarb
fidivrs
in
arpl
cmp
and
push
lret
and
lcall
sub
imul
popf
mov
std
roll
lcall
push
push
lock
push
pushf
out
hlt
xlat
jae
das
adc
push
and
scas
mov
hlt
popf
push
sbb
faddl
gs
pop
push
fsts
test
mov
and
ss
push
mov
jb
lea
pusha
mov
mov
cmp
dec
sahf
decl
pop
jle
mov
mov
push
or
sub
sbb
gs
daa
nop
or
ja
sarl
jne
mov
pop
fsubl
push
das
xor
and
mov
shrb
add
xlat
add
loope
lahf
add
adc
xor
stos
pop
sbb
cmp
xor
outsl
shrl
hlt
inc
fs
fwait
lret
xor
imul
testl
es
popa
in
out
mov
out
lret
push
daa
loope
jge
fstps
pushf
pop
and
push
sub
outsb
mov
call
lods
in
sti
cld
iret
ljmp
stos
loopew
fwait
repz
ljmp
and
adc
jecxz
shll
cltd
sub
xor
es
mov
hlt
xchg
icebp
rclb
shl
fildll
mov
nop
or
cli
outsl
stc
mov
push
imul
mov
sbb
pop
mov
or
cmp
dec
cld
and
movsl
or
xchg
mov
mov
dec
mov
sbb
inc
mov
pushf
xor
dec
dec
data16
jae
xor
out
divb
into
mov
in
fwait
out
scas
iret
sub
lds
xor
xchg
push
cli
and
cmp
outsl
scas
or
aaa
mov
mov
xchg
cli
xchg
mov
imul
fidivrl
pop
ljmp
xchg
inc
mov
pusha
mov
sbb
mov
sahf
enter
push
jp
cwtd
pushl
xchg
lret
lods
xor
stos
addl
ror
call
sub
test
movsb
xor
push
icebp
push
sub
mov
adc
sbb
bound
or
das
jnp
adc
shlb
inc
or
cmp
mov
adc
cmp
and
xlat
popa
stos
xor
stc
rcl
add
fsubr
add
addl
cmp
or
mov
mov
cs
and
fimuls
sarb
mov
jmp
jle
cltd
loop
push
or
push
jo
fldt
or
shll
xor
sbb
stc
cmpsb
fcmovu
mov
sbb
xor
push
cs
add
xchg
cmp
or
xchg
cmpsl
fsub
repnz
jle
jge
fildll
push
outsl
loopne
mov
mov
ror
out
mov
sbb
js
add
inc
decb
xchg
rolb
gs
outsb
sub
call
add
push
xchg
dec
fistl
lods
adc
gs
test
cmp
sti
sub
in
aas
and
jle
sbb
repnz
sbb
mov
xchg
dec
out
push
rolb
inc
cli
shlb
inc
inc
or
outsb
mov
je
mov
xor
jne
push
imul
cwtl
lret
flds
je
test
inc
ja
je
int3
inc
cmc
sub
aam
and
xchg
and
fwait
dec
inc
jp
and
dec
and
jb
daa
inc
cmp
lds
dec
popa
jecxz
pop
div
ja
ja
arpl
aad
mov
shrl
mov
push
or
cmp
mov
sbb
inc
dec
jne
add
jl
bound
or
add
sarb
out
in
inc
or
mov
roll
push
jmp
std
lea
fiaddl
icebp
sub
dec
stos
rolb
fnstcw
into
or
sbb
mov
cmpsb
and
sbb
lods
xchg
test
dec
xlat
jno
and
jae
xor
inc
sti
sti
fmul
mov
pusha
dec
pop
insl
pop
loop
hlt
out
pushf
stos
jl
dec
jg
push
or
or
mov
jae
ljmp
rolb
dec
call
rcl
mov
popf
push
push
add
inc
test
stc
sub
sahf
pop
mov
cld
aad
cmpsb
lods
jo
jp
mov
or
jmp
leave
and
or
cmp
lret
mov
cli
ror
mov
inc
int3
fmull
stos
mov
and
out
fnstcw
mov
jae
mov
fiadds
movsl
into
push
dec
out
adc
xor
mov
cli
and
mov
add
push
xor
jmp
scas
cmp
pop
mov
fisttps
test
cmp
push
fsubrs
gs
cwtl
sub
mov
aaa
sub
push
cmp
push
test
add
imul
ja
jl
pop
mov
imul
and
cmp
sbb
decb
sub
jecxz
lret
pop
or
mov
push
or
test
std
add
hlt
pop
jae
xorl
mov
mov
pusha
push
mov
xchg
repnz
push
mov
sarl
or
dec
mov
ss
pop
xor
cmp
mov
test
enter
xor
iret
dec
lcall
or
jmp
popl
stos
and
aam
pop
ret
frstor
mov
jbe
in
loopne
movb
stos
loope
rol
icebp
xchg
xor
sbbl
ret
xor
inc
gs
test
add
add
fs
mov
dec
aaa
jo
push
sub
and
movsl
push
xlat
cmpsl
sarl
aaa
xchg
jp
in
out
in
shlb
and
fldl
imul
sub
ret
mov
test
hlt
lods
sbb
je
icebp
cmp
rolb
imul
jle
sub
inc
lahf
pop
addr16
mov
loop
notb
movsl
popa
das
rcll
test
aad
cli
pop
hlt
sahf
ret
mov
sarb
mov
adc
mov
mov
or
lods
fidivrl
lds
and
ret
dec
push
or
sahf
jecxz
xor
stc
pop
and
and
lcall
in
das
adc
mov
faddl
push
xchg
jae
loopne
pop
scas
js
sub
push
sbb
jp
lea
scas
imul
insb
in
je
sub
mov
sub
aaa
lock
jge
in
enter
mov
sarl
std
lret
aad
aam
xor
inc
mov
fisubrs
jp
mov
xorb
push
test
pusha
jb
lods
sub
mov
or
inc
fsts
and
test
lret
pop
hlt
pop
repnz
in
cmpsb
mov
andb
scas
test
call
cmp
out
cmpsb
jo
inc
into
add
in
and
sub
sub
or
clc
dec
or
adc
push
or
mov
incl
inc
or
xchg
xchg
into
fs
jg
cmp
jecxz
cwtl
or
ret
adc
aam
xchg
mov
push
ret
orl
pop
adc
insl
and
or
and
cmp
or
mov
sub
filds
add
sbbb
adc
movsl
mov
clc
dec
jg
mov
fnstsw
add
adc
mov
xchg
in
add
dec
push
jmp
xchg
fistpl
aam
fcmovb
and
andb
jb
test
cmp
std
imul
lahf
xchg
lods
mov
arpl
mov
movsl
push
insl
sub
mov
and
inc
mov
pop
test
push
dec
ljmp
je
mov
dec
iret
mov
aad
cmpsl
popf
sub
mov
test
stos
mov
mov
sbb
aas
fcoml
jne
pop
or
addr16
sbb
xor
pop
xor
int
enter
xchg
ljmp
jns
mov
ret
cmc
or
jns
adc
lret
push
test
idivb
rorl
cwtl
mov
std
adc
popf
fisttps
jg
push
cmp
ret
cmc
shlb
lea
inc
in
faddp
fldl
cmp
into
mov
push
dec
pop
adc
mov
outsl
add
rcrb
rorb
sbb
xor
xor
es
and
mov
imul
mov
cmpsb
dec
mov
cmp
test
sub
mov
xchg
jno
imull
jb
ror
pop
dec
add
jmp
jecxz
push
jmp
mov
fsubrl
ss
neg
sub
scas
lret
mov
jecxz
jno
lea
add
cmp
fs
xchg
lock
lods
xor
mov
ljmp
jge
xor
fmull
or
aam
jp
push
js
lods
sub
rcr
and
mov
sbb
fmull
or
mov
push
mov
fcomps
mov
cmovp
sub
inc
jno
adc
rcl
lahf
pop
mov
loop
shlb
mov
daa
pop
fdivrl
test
xchg
xchg
xchg
cmpsw
xchg
fxch
lret
roll
add
push
jns
adc
mov
xor
scas
bound
in
cmpsl
xor
mov
loop
or
in
nop
pop
ficoms
roll
mov
dec
inc
pop
and
mov
sti
loopne
dec
adc
sti
cmc
sti
adc
cmp
aam
mov
fwait
inc
aaa
xacquire
push
fwait
or
inc
pop
pop
dec
mov
jnp
fs
mov
into
and
ret
fmul
mov
mov
ret
push
cld
rcl
add
sbb
add
sbb
jmp
ret
iret
das
inc
nop
stc
cmp
pop
pop
dec
xchg
jp
fisubrs
or
out
or
aam
pop
pop
jnp
inc
movsb
lret
sbb
mov
xorb
rcrb
xor
xchg
mov
mov
imul
xchg
lods
pop
lret
stc
lret
loope
into
pusha
inc
cltd
movsl
iret
push
cltd
fs
pop
outsb
pop
cmp
mov
lret
pushf
aad
inc
jecxz
dec
mov
testl
out
addb
mov
and
add
add
xor
bound
xor
mov
lods
outsb
add
test
in
arpl
repz
popf
repz
fcomps
ja
adc
and
out
aas
dec
loop
xor
divl
aad
icebp
cmp
out
aam
cmp
fisubs
add
stos
mov
mov
push
psrld
in
testl
rcr
leave
jl
es
mov
shll
negl
ljmp
jbe
adc
je
outsb
mov
jns
mov
xchg
xchg
ret
faddl
les
xchg
insl
shl
into
hlt
rorb
mov
mov
lret
inc
jae
ffree
and
test
mov
add
out
xchg
fdiv
mov
bound
icebp
stos
into
mov
add
jns
stos
out
imul
cli
mov
mov
fbld
cmp
jl
xor
adc
ds
pop
pusha
scas
sbbl
jecxz
add
data16
mov
call
sarb
or
in
push
sbb
iret
std
rolb
xchg
rolb
pusha
and
mov
lret
jnp
inc
sub
dec
in
insl
ror
add
stos
jne
jle
cmp
or
or
sbb
movsb
in
sbb
inc
xchg
or
xlat
push
lret
sarb
add
pop
and
adc
cmp
or
mov
in
in
flds
dec
jno
out
push
xor
push
mov
divl
dec
pusha
sbb
loop
sahf
add
out
jg
fs
mov
jl
mov
xor
test
adc
add
push
js
fsubrs
out
rcrb
fdivrs
pop
add
jo
lcall
jae
dec
lods
lret
fimull
outsl
dec
inc
std
bound
sub
call
xchg
jb
lods
lock
popa
push
xchg
mov
loop
or
imul
sbb
cmp
test
push
xbegin
imul
rcr
in
rclb
sbb
jecxz
popa
mov
jl
mov
lret
sub
popa
lahf
icebp
test
cwtl
xchg
add
and
mov
imul
adc
jl
aas
enter
and
adc
fisttpll
jne
push
gs
xchg
aad
push
inc
daa
inc
adc
or
scas
hlt
pop
jmp
inc
or
and
xor
or
mov
aas
mov
push
xor
cld
xchg
loop
stos
fistpl
iret
inc
xchg
pop
dec
mov
aam
jecxz
lods
cwtl
inc
clc
sub
pusha
pop
loopne
jae
pop
push
mov
je
and
mov
out
jne
sbb
cltd
scas
push
xor
xchg
dec
ret
mov
sbb
inc
test
mov
xor
arpl
add
test
imul
sbb
or
sbb
pop
out
cli
rolb
cltd
add
and
shrb
push
data16
jle
pop
xor
xchg
lods
insl
add
ret
jno
movsb
fstpt
push
mov
push
test
or
mov
sub
jg
mov
addr16
inc
ss
jbe
aam
js
lahf
mov
cli
mov
jge
mov
mov
enter
int3
cld
pop
jnp
mov
mov
adc
xchg
into
stos
pop
push
fwait
shll
test
or
cmp
loopne
jg
push
aaa
pushf
lock
fistl
movsb
fstpl
cli
ret
jae
cmp
jmp
enter
and
cmpsl
fldl
insb
xor
scas
mov
xchg
test
xor
nop
push
arpl
je,pn
add
mov
sar
push
jbe
sub
insl
dec
sbb
jle
push
add
stos
gs
mov
jg
arpl
daa
sub
xor
neg
js,pn
pop
mov
out
mov
ss
movsl
add
insb
and
fsub
lea
jbe
jno
lock
jg
and
dec
stos
xor
push
jmp
sub
stc
pop
lds
movsl
xchg
cld
push
xchg
or
cmpsb
dec
cld
mov
sti
dec
cmc
cmp
clc
dec
pop
sbb
aaa
xchg
mov
lods
pop
push
popa
jae
pop
sub
sbb
mov
mov
sbb
insl
out
in
sbb
pop
jb
inc
inc
clc
sub
jne
push
outsb
sqrtps
jecxz
cmc
dec
xor
pop
sub
mov
inc
cltd
rcll
cs
cs
jns
push
out
mov
mov
in
addr16
cmp
push
movsb
pushf
pop
cmpsl
push
adc
lret
push
js
fdiv
jmp
lret
pusha
pop
xchg
pop
lods
cmp
movsb
push
popf
cmp
xorb
xchg
cli
cs
dec
lock
pop
inc
jo
daa
pop
stc
daa
xor
ficoms
je
mov
add
int3
stos
mov
push
inc
test
pop
out
divb
mov
mov
out
mov
or
lcall
mov
insl
cmp
pusha
inc
push
bound
shlb
jo
pop
test
sub
movb
loope
mov
outsb
pshufw
bound
jp
mov
mov
mov
mov
pop
iret
xchg
sub
fwait
mov
dec
stos
sub
sub
les
mov
hlt
adc
leave
mov
scas
cld
ljmp
ja
xchg
out
out
das
mov
push
mov
mov
out
jne
push
das
xchg
mov
xor
mov
and
inc
xchg
pop
bound
jno
ficompl
fwait
scas
xchg
push
aam
jle
idivb
push
jb
push
mov
adc
mov
ds
fsub
sbb
cld
cld
stc
cmpsl
ret
in
or
cltd
int
mov
and
rcll
sahf
icebp
jecxz
mov
or
cmc
fidivrl
or
xor
fldl
xchg
xor
in
inc
ficompl
lcall
mov
add
jle
xchg
out
pop
decl
lock
scas
pop
push
js
out
mov
add
dec
aam
mov
roll
in
sbb
negb
or
imul
jbe
fidivrl
adc
or
push
adc
add
add
inc
ss
inc
mov
and
sub
cmp
cs
loopne
inc
out
dec
adc
sbb
aam
pop
mov
lret
mov
stc
inc
js
jg
notb
ljmp
int
fildl
xchg
mov
push
pop
push
adc
aas
gs
sti
cmp
push
push
ja
lds
imul
into
push
stos
push
jno
fstps
pop
xchg
test
loop
fmull
pop
repz
outsb
nop
cmc
pop
outsl
mov
lea
mov
mov
mov
push
jmp
lea
dec
mov
in
lret
adc
sahf
lods
ficoms
aaa
sub
adc
popf
fs
push
push
xor
sub
into
and
xchg
sbb
adcl
cli
xlat
xchg
cli
inc
push
cmp
xlat
lahf
pop
xor
test
xchg
inc
lea
push
mov
dec
sbb
push
test
repz
or
lahf
imul
or
jae
lds
sub
jmp
mov
sbb
fsubs
xor
lods
inc
xchg
push
cli
push
ret
xchg
idivl
addr16
and
push
sti
out
push
sbb
imul
xor
push
mov
jecxz
jg
fnstsw
in
push
movb
jbe
pop
out
pop
fwait
sbb
stos
and
or
in
imul
sarb
ds
mov
sahf
jl
out
push
xor
shl
lcall
add
rol
jg
repnz
addr16
sub
jge
pop
ds
sub
cmp
sbb
stc
sti
lahf
and
pop
and
jns
lret
xchg
rorb
addr16
mov
test
mov
ss
rclb
cld
pop
add
lret
dec
shrb
orb
imul
cmp
mov
inc
add
sbb
mov
mov
mov
aam
out
pop
xchg
xchg
in
push
xchg
bound
into
repnz
ds
cli
fistpll
imul
cmp
pop
aaa
popf
xor
ja
shll
inc
push
cltd
and
bound
xor
sub
movsl
sti
sbb
insb
fcompl
mov
adc
pop
mov
lock
push
push
lcall
xor
pop
mov
test
push
stos
lcall
xchg
pop
mov
cld
mov
push
push
out
mov
push
and
cltd
jno
xchg
jbe
pop
in
adc
jge
out
sbb
pushl
sbb
lea
gs
aad
clc
dec
and
xchg
cmp
out
sbbb
add
xor
xor
adc
rcr
addr16
push
fistpl
jbe
pop
stos
cmp
es
cs
cs
ds
orb
ret
inc
ret
mov
loop
sbb
pop
ljmp
cs
lea
iret
stos
sub
out
mov
arpl
es
sbb
cmp
mov
subb
cli
xor
cld
dec
push
sahf
push
jecxz
push
ret
sbb
sti
mov
and
lahf
cltd
out
adc
sarb
in
pop
mov
repnz
cmp
pop
cmc
mov
xchg
lret
testl
mov
aam
push
mov
aad
loop
xchg
out
inc
cld
fnstenv
cmp
pop
je
mov
pop
lock
jg
fistps
fs
sbbl
cmp
cli
mov
mov
and
xchg
in
adc
loopne
scas
clc
sub
dec
pushf
mov
enter
dec
sub
xchg
pop
push
sahf
outsl
lea
movsl
lds
movsl
xchg
adc
bound
jno
les
in
lret
frstpm(287
sbb
xchg
jle
cwtl
and
inc
xor
add
sti
push
adc
cmp
repnz
pop
adc
repz
lcall
out
dec
sahf
push
mov
fisubl
mov
jmp
push
repnz
sub
mov
repz
fisttps
xchg
repnz
xor
jae
je
jne
addb
sub
or
cmp
and
xlat
xchg
inc
cmpsl
inc
xchg
pop
inc
movsb
mov
std
mov
jecxz
repnz
popf
movsl
jg
sahf
shr
jbe
mov
out
xchg
aad
sbb
clc
push
ret
ja
fisttpll
inc
jbe
mov
aaa
shl
lea
xchg
lods
and
dec
xchg
push
adcb
icebp
push
mov
sbb
call
sahf
pop
add
inc
xor
lret
dec
pop
rolb
jecxz
or
add
jbe
bound
scas
int3
cmp
fs
inc
push
xchg
lret
pop
jge
and
jp
pop
lods
lock
test
movsb
push
fdivrl
rorb
dec
iret
mov
xor
out
xchg
mov
xor
mov
pop
or
mov
shrl
or
push
insb
xchg
or
adc
lods
cmp
popa
inc
in
aas
sbb
addr16
lds
xor
dec
std
sub
les
pop
mov
xor
stos
and
in
dec
sarb
or
jg
mov
push
pshufw
pop
fstpt
movsb
add
fs
addl
add
add
or
ret
xchg
xchg
xchg
cmp
rcl
xchg
xchg
xchg
xchg
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
dec
mov
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
