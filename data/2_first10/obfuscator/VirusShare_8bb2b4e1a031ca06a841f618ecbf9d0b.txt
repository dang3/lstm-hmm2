loopne
incl
add
add
add
add
add
add
pushf
cmpsb
out
mov
adc
out
sub
xchg
rorb
sbb
cmc
or
inc
mov
ja
adc
shll
or
jle
dec
iret
bound
mov
mov
rorl
lret
mov
cmpl
pusha
in
in
adc
add
xchg
add
test
pop
mov
mov
add
add
stos
fisttpll
shl
loop
mov
orl
fisubs
fimull
add
stos
fidivs
push
fucomi
ficoml
cmc
cmp
push
imul
rdmsr
jmp
cmp
jecxz
lea
movsb
mov
sbb
mov
add
test
adc
add
add
mov
xlat
xchg
jg
rol
mov
das
call
cmp
loope
aam
push
mov
aas
add
ret
mov
sbb
popa
dec
inc
sti
add
mov
shl
pop
call
leave
xchg
sbb
sbb
mov
inc
ja
xchg
pop
sbb
pop
xorl
dec
out
xchg
push
jg
sbb
ret
fisttpl
incl
xchg
ljmp
shl
ja
add
leave
add
or
sarl
mov
lea
mov
jae
mov
mov
lock
scas
cmp
mov
movsl
xchg
xchg
std
sarb
add
jno
cmp
popa
mov
mov
dec
mov
jl
fwait
aam
mov
inc
inc
add
xchg
mov
ret
imul
fiaddl
js
aas
add
je
sbb
jb
pushf
out
stos
and
cltd
jl
leave
mov
into
mov
repz
daa
mov
pushf
sbb
imul
lods
jae
into
mov
lods
mov
sbbl
movsb
xchg
mov
mov
cmp
je
lret
pop
ficomps
test
mov
shlb
out
mov
and
xor
and
pusha
test
jnp
xchg
mov
mov
sbb
mov
fwait
aas
jp
js
rclb
subl
dec
aaa
mov
cmp
cmc
sbb
in
movsb
notb
or
mov
fwait
fwait
sub
into
dec
and
xor
fsubl
push
aam
pop
pop
lret
mov
fwait
sbb
cmp
sbb
fwait
xchg
lds
aaa
test
dec
pop
cmp
out
sbb
popa
sbb
je
pop
sbb
cwtl
aaa
arpl
mov
test
pop
sbb
adcb
mov
movsl
mov
cmp
push
jb
mov
pushf
and
mov
mov
pushf
sbb
in
lds
pushf
sbb
pop
and
inc
add
sbb
pushf
std
mov
pushf
inc
rorb
xchg
jmp
inc
jecxz
cmp
xchg
mov
sbb
pushf
and
int3
mov
scas
fsubs
and
push
shrl
sbb
faddp
insl
stc
imul
sbb
aaa
test
add
cmp
pushf
or
out
pop
ficomps
test
mov
movsl
jae
repz
aaa
test
mulb
adc
pushf
sbb
jns
sbb
cmc
inc
pop
mov
jae
sbb
jmp
or
les
out
movsl
mov
mov
call
mov
aad
rcll
jg
sbb
pop
jns
test
sbb
test
sbb
inc
test
aaa
in
pushf
jno
push
sbb
and
sbb
insl
jae
sbb
fdivrl
or
ss
and
cmpsl
push
sub
into
add
test
adc
sbb
sbb
aaa
test
fstpt
pushf
movsb
imul
loop
ret
xchg
fsubrl
and
xchg
and
inc
cvtps2pd
movsb
pop
into
and
cwtl
sbb
js
loop
sub
jnp
aad
fsubl
popa
int3
les
and
ror
movsl
fwait
movsb
aad
lods
and
and
fucomi
jecxz
mov
inc
mov
and
sub
mov
movsb
cmpsb
nop
aad
and
sub
add
cli
cmp
cmp
nop
sbb
les
aaa
pop
movsb
xor
sbb
mov
sbb
test
push
movsb
into
aad
mov
ds
xchg
push
addr16
in
cmp
and
divl
pop
sbb
test
sub
imul
mov
mov
sbb
movsb
jnp
stc
mov
sub
leave
int
fwait
adc
faddl
mov
test
stos
sbb
test
pushf
stc
nop
mov
movsb
jnp
aad
faddl
xor
arpl
push
xchg
push
pushf
sbb
movsb
aad
pop
pushf
sbb
jbe
mov
sbb
cmp
push
cmp
xchg
jnp
dec
pushf
out
mov
test
das
loope
mov
pushf
pop
pushf
sbb
pushf
in
dec
stos
bound
hlt
pushf
sbb
pop
mov
pushf
sbb
mov
shr
xchg
fdivrl
or
cmp
add
and
jge
pushf
sbb
into
fisubs
pushf
sbb
pop
sbb
scas
fisubl
mov
xchg
loope
mov
push
mov
pop
or
in
mov
and
sub
in
movsb
andl
mov
xor
rcrb
lret
jl
sbb
mov
rcrb
xchg
pushf
ds
popf
cmp
in
loopne
xor
mov
fldenv
push
cwtl
xchg
pop
in
fistpl
xchg
mov
push
lret
mov
sub
mov
inc
sub
jl
into
lea
icebp
into
cmc
mov
mov
adc
test
dec
in
lods
cwtl
fdivr
in
xlat
lock
int3
adc
mov
xlat
and
aam
cmp
rcrl
scas
mov
add
inc
cmpsl
iret
sub
mov
jecxz
dec
fbld
mov
test
pushf
in
js
ds
mov
jbe
aad
pop
fldt
cmp
jns
inc
pop
pop
cld
fcmovnb
xor
popf
jns
adc
xor
inc
aam
mov
xchg
mov
adc
test
sbb
lret
and
xchg
pop
adc
jecxz
jbe
lret
push
cld
fcoml
ret
and
pop
aad
xor
jge
and
test
inc
jbe
mov
push
fs
jmp
int3
xor
lea
es
dec
add
add
stos
inc
call
les
subb
fisubrs
jl
shrb
pop
aam
loope
cmp
mov
addl
xlat
pushf
xchg
mov
pop
mov
mov
mov
xchg
add
push
jns
sbb
loop
mov
shrl
pop
lods
sbb
sbb
adcb
jne
negb
xchg
inc
mov
sbb
and
push
pop
movb
stos
inc
in
and
mov
aam
mov
adc
imul
fsubl
mov
lcall
shl
std
jge
and
mov
pop
or
fisubl
lret
loop
xchg
mov
mov
scas
lods
pop
iret
lret
mov
mov
and
shll
stos
nop
aaa
pushf
pop
mov
lods
mov
cmp
cli
jg
and
stos
mov
cmp
repnz
add
inc
sbb
mov
pop
loopne
stos
es
xchg
xor
stc
mov
mov
cmp
loopne
fbld
inc
jg
mov
loopne
addr16
imul
pop
lcall
rol
xor
jle
dec
lret
dec
and
mov
pushf
lods
push
and
xchg
jle
jmp
mov
add
pop
int3
into
adc
inc
mov
mov
outsb
test
in
mov
sahf
arpl
inc
daa
fs
inc
outsb
int
jne
aaa
dec
adc
inc
mov
stos
cmp
mov
adc
dec
jnp
stos
xor
cmp
and
inc
pop
sahf
ret
adc
and
fbstp
lret
fistpll
pusha
mov
xor
cmp
xor
call
xchg
xchg
popa
mov
btc
mov
iret
mov
popa
sarl
movsb
stc
je
hlt
dec
mov
mov
pop
stos
je
bsr
int3
fwait
add
cmp
sbb
sbb
mov
lods
inc
jle
xor
or
nop
gs
cmp
adc
popf
es
in
xor
pop
sub
ljmp
fnstsw
xor
sbb
shrb
mov
js
mov
mov
inc
and
jecxz
and
mov
mov
fisubl
mov
ret
fwait
data16
cwtl
push
imul
fsubrs
push
or
into
pop
dec
iret
add
mov
cmpsl
imul
fldenv
mov
cmp
jnp
inc
jo
cs
in
lods
jp
into
fadd
inc
add
push
ss
popf
adc
popl
call
sti
mov
adc
test
in
inc
mov
xchg
xchg
inc
addl
lds
ljmp
mov
push
adc
jbe
enter
in
inc
mov
sarb
repnz
rol
mov
fiaddl
testb
aam
sahf
and
icebp
loopne
inc
push
paddusb
mov
lods
enter
pop
scas
test
push
shll
cs
dec
jne
popa
push
das
lds
test
es
add
sbb
xor
sahf
mov
int
movsb
add
outsb
ss
fwait
lahf
push
popa
iret
std
pop
out
faddl
test
les
daa
xchg
push
sbb
outsl
iret
fnstcw
rorb
loop
fists
pop
sbb
inc
cmpl
lock
fcmovnbe
mov
adc
adc
js
shll
dec
in
mov
cmp
shll
stos
add
mov
dec
inc
or
ret
sub
jle
cmp
movsb
cmp
mov
inc
dec
mov
aad
pop
add
mov
or
dec
movsl
fdivp
popa
mov
inc
mov
mov
jecxz
and
shlb
pop
xchg
jmp
mov
jg
xor
test
sbb
jno
cwtl
mov
sub
mov
iret
ss
test
mov
ret
daa
test
push
mov
nop
outsl
push
and
inc
scas
and
dec
in
aad
inc
pop
and
dec
jl
mov
insl
xchg
or
jecxz
in
js
stc
idivl
sub
mov
scas
inc
bound
repnz
mov
or
jecxz
les
sub
repnz
lcall
dec
pop
fistl
adc
mov
mov
lahf
jecxz
push
sub
push
fucom
pop
lret
out
mov
sub
or
fisttpll
pop
ficomps
les
cmp
xchg
adc
imul
adc
pop
test
daa
stc
xor
pop
add
in
lcall
cmpl
movsl
int3
and
in
repz
lahf
and
push
pop
ret
cmp
test
arpl
fdivrl
js
notl
sahf
mov
mov
inc
jg
in
iret
xor
ficomps
dec
scas
push
push
fwait
mov
pop
inc
sar
into
and
cld
test
add
jg
imul
mov
into
mov
xchg
aaa
sbb
mov
test
out
frstor
in
mov
mov
inc
sarl
pop
jo
mov
jl
inc
inc
loopne
jo
xor
add
in
push
stos
sahf
sub
sbb
hlt
loop
cltd
lds
test
adc
mov
or
loop
test
dec
push
rcrl
popf
fwait
test
out
popa
les
ret
sbb
cs
mov
mov
stos
shll
movsb
test
insb
xor
outsb
sub
daa
fcoms
push
and
inc
out
sbb
dec
hlt
adc
pusha
adc
daa
popa
ret
jp
scas
aam
jb
mov
pop
sub
jne
pop
les
xchg
out
xchg
jne
or
lock
adc
sahf
push
push
insb
fadd
gs
mov
xor
call
aam
adc
nop
subl
das
int3
sbb
and
idiv
movsb
ret
cmpsb
cli
or
pop
xlat
popf
and
jmp
movsl
sub
ss
divb
mull
jbe
adc
cmpsl
enter
inc
daa
push
mov
repz
inc
call
inc
jbe
into
fstps
pusha
mov
sbb
loop
in
push
imull
cwtl
fsub
ja
xor
je
jp
sahf
push
inc
in
xchg
dec
and
lret
addl
call
mov
dec
sbb
fisubrl
into
jno
repnz
div
and
loope
lods
popa
sub
lods
ror
jecxz
int3
jp
outsb
jp
fdivr
or
fisubl
adc
mov
sti
leave
dec
fimuls
cmp
es
mov
push
bound
or
and
nop
mov
sub
xchg
cmp
scas
xor
or
fistpll
aam
xchg
mov
mov
sbb
test
xor
mov
pop
xchg
and
sbb
lret
hlt
fcompl
cmpsl
popf
xlat
push
enter
mov
and
pop
test
or
lcall
xlat
xchg
test
imul
loop
popf
pop
rcrl
hlt
inc
dec
sub
cmp
popf
cmpsb
andb
cld
push
xchg
and
es
jl
pop
mov
push
or
mov
mov
movsb
add
arpl
test
dec
xor
dec
cmc
push
mov
mov
sbb
lods
orb
and
sbb
xchg
cs
jmp
test
add
orl
aam
aam
leave
push
movsl
iret
xchg
aam
mov
scas
sbb
mov
jnp
clc
popa
mov
jp
pop
pop
fnsave
ret
adc
lahf
jno
mov
adc
dec
jae
popf
cmpsl
adcl
nop
dec
repz
xchg
insl
fwait
nop
lahf
jns
mov
in
push
push
icebp
iret
aam
roll
ret
sub
lods
aam
add
hlt
sahf
jl
sarl
mov
leave
push
movsl
lods
cmpsb
cmp
and
imul
dec
push
inc
mov
pop
push
xor
mov
inc
call
js
stos
insb
ljmp
sbb
mov
test
xchg
outsl
pop
mov
cli
sbb
xor
enter
jl
lock
cmp
dec
lods
fmul
mov
mov
int3
mov
fwait
pushf
test
jne
mov
ja
ljmp
xor
mov
in
lcall
fcmovb
sbb
cmp
shlb
xor
repz
sub
or
cmp
faddl
mov
cmp
dec
aaa
out
movsb
sti
sub
in
or
call
imul
fstps
and
mov
nop
sbb
inc
cmpsb
loope
or
dec
fcos
das
repnz
lret
or
fwait
movl
sbb
movb
les
cmp
loopne
xor
hlt
xor
cwtl
lret
sbb
push
sbb
sub
sti
out
jbe
mov
dec
cli
inc
and
lcall
movsb
xchg
out
cmp
insl
mov
inc
push
pop
sub
adc
pop
loopne
or
shrl
lahf
lock
xchg
xor
sub
xchg
mov
mov
xchg
and
and
mov
jle
pop
add
ljmp
iret
inc
xor
jb
mov
sub
lret
ficoms
jnp
sub
pop
popa
cmpsl
pop
dec
loop
xchg
roll
dec
insb
lcall
pop
jmp
test
or
mov
int3
movsb
cmpsl
mov
call
iret
sub
dec
add
jmp
decl
cmp
jb
insb
mov
fldt
std
rclb
rolb
les
insl
cli
daa
jl
sbb
pop
roll
mov
rcll
nop
fldcw
fildll
or
lret
fiadds
pop
aad
inc
pop
adc
orb
xorb
pushf
sbb
pushf
loopne
mov
pop
je
fsubs
mov
sbb
stos
mov
call
clc
and
mov
lret
inc
hlt
outsl
lret
sti
movzwl
push
movsb
xor
stos
test
inc
mov
cltd
xor
shl
and
jge
lock
insl
ja
mov
xchg
push
outsb
sub
mov
into
pop
lods
xchg
repz
pop
loop
dec
lods
sbb
push
ds
sarb
lcall
subb
and
push
daa
pop
aam
lods
jp
and
inc
mov
arpl
pop
inc
pop
outsl
cli
push
mov
xchg
test
cmpsl
in
mov
inc
bound
sbb
hlt
xchg
stc
in
pop
loope
adc
push
inc
sbb
mov
mov
sbb
rorl
in
jae
jecxz
mov
frstor
sbb
mov
lds
mov
pushf
pop
sub
pop
aam
mov
mov
push
adc
movsb
xlat
outsl
iret
and
popa
xorb
xor
mov
adc
sti
loopne
add
mov
adc
xchg
pop
lock
or
or
pop
outsb
imulb
aaa
les
or
push
mov
popa
aad
mov
sub
popf
mov
daa
mov
popa
and
pushf
adc
sub
dec
sub
lods
sub
out
lret
mov
das
mov
push
mov
dec
test
dec
das
fwait
push
mov
mov
and
inc
mov
nop
mov
into
lcall
in
jg
ja
mov
jne,pt
call
jp
mov
push
jmp
imul
minps
or
das
mov
js
mov
mov
adc
roll
mov
insb
scas
or
mov
mov
rolb
pushf
xor
fcomi
push
cmpsb
push
xor
mov
lahf
xor
inc
loop
loop
sbb
leave
loop
xchg
daa
add
pop
inc
mov
jne
cmc
xor
mov
mov
add
jl
mov
pop
mov
movb
dec
leave
sbb
inc
inc
jp
adc
pop
push
cmp
push
mov
or
outsb
test
inc
test
push
xor
xor
loop
sub
loope
push
xor
add
sbb
mov
fstp
sbb
mov
add
hlt
dec
fidivrs
push
or
mov
xchg
fld
aaa
cmc
or
loop
mov
loopne
xchg
lcall
movsb
and
aam
gs
push
cmpsl
ror
arpl
out
xor
popf
xchg
pusha
test
and
mov
pop
or
cli
mov
and
inc
je
mov
pop
fcmovb
fnstenv
jp
and
int
cmp
jge
sbb
mov
mov
inc
jp
ss
testl
jbe
xor
sub
les
out
cwtl
in
sub
fsubl
subb
mov
pop
jns
fstps
sets
adc
sahf
mov
or
adc
push
jg
pop
lds
add
add
adc
dec
mov
xorb
ljmp
mov
hlt
dec
mov
cmp
fldl
stc
lock
pushf
or
es
xchg
mov
cmp
cmp
mov
xchg
filds
xor
cmp
ss
scas
dec
and
fnstsw
div
pop
inc
adc
into
xor
aad
shlb
push
adc
pop
fsubrp
mov
sbb
ss
lods
cmpsl
jns
enter
out
enter
or
fwait
mov
inc
mov
lea
add
out
in
mov
jecxz
jmp
cmp
push
adc
in
loopne
mov
add
scas
frstor
jp
adc
cmpsb
xor
pop
movsb
leave
lcall
xchg
jo
push
pop
and
lcall
adc
enter
lahf
cmpsb
movsb
jae
mov
lds
mov
scas
pop
int3
add
xchg
and
inc
xchg
push
insb
mov
mov
shlb
out
inc
cli
mov
daa
scas
inc
pop
fimuls
lret
popfw
cmpsb
clc
js
sbb
call
xor
imul
iret
push
mov
frstor
cmp
into
mov
sub
mov
lcall
inc
aam
mul
mov
xor
mov
xchg
add
cs
adc
jo
sbb
mov
sub
and
cmp
inc
xchg
cmpsb
sbb
xor
lahf
xchg
fdivr
mov
test
and
sbb
xor
ds
fsubl
lods
test
cmpsb
int3
inc
pop
clc
movsb
ret
mov
push
cmp
xor
mov
dec
pop
cld
inc
and
xor
fs
lret
mov
xor
iret
and
ret
cmc
jae
mov
ja
xchg
push
adc
mov
push
fisttpll
les
mov
ja
push
stos
xchg
fisttpll
lock
fisubl
xor
fucomip
and
outsb
mulb
dec
add
shlb
les
xchg
shl
fmulp
sar
jo
aad
int
lcall
call
scas
cmpb
jl
and
adc
mov
int3
pop
loope
in
xchg
jo
xor
sub
inc
sub
jno
test
test
inc
jns
js
adc
mov
mov
aam
pop
ret
mov
mov
sbb
addr16
add
cmpsb
push
push
add
leave
fisttps
cmp
scas
mov
lcall
lahf
jl
arpl
scas
mov
push
mov
push
repnz
das
dec
add
cmp
sub
xor
movsb
jp
shll
sbb
xor
mov
leave
testb
xchg
adc
or
icebp
cmp
lds
lds
xor
outsl
inc
inc
sti
cmp
mov
maxps
jo
push
lahf
mov
aaa
test
add
lods
stos
inc
inc
push
ss
test
dec
lods
loop
rcrb
and
mov
jbe
sti
flds
jo
push
cmc
mov
pop
into
jge
add
adcl
into
sub
popa
sahf
inc
mov
mov
int
test
testb
repnz
fmul
mov
pop
add
adc
sub
lahf
popf
jno
dec
xchg
xor
xchg
lret
arpl
pop
and
subl
or
push
inc
repnz
in
xor
jbe
and
int3
push
jecxz
xchg
cli
pop
and
out
inc
psrad
pop
pop
mov
sahf
les
mov
pop
mov
movsb
scas
sbb
adc
mov
out
xchg
mov
imul
loop
cmp
mov
sub
es
iret
mov
mov
push
mov
sbb
lea
rcrl
mov
or
jecxz
sbb
ficompl
cmp
or
cmp
mov
cmpsl
movsb
stos
xor
jo
or
loope
push
pop
cli
sbb
jle
mov
out
ficoms
outsl
fcompl
out
cmpl
inc
jno
dec
or
sbb
arpl
cmp
mov
movsl
ret
push
xchg
push
xlat
inc
das
mov
ret
cmc
push
cwtl
in
push
xor
fcoml
pop
xchg
in
test
out
mov
lea
xor
and
icebp
xor
int3
scas
xor
popf
adcl
aam
sub
js
push
pop
sbbl
orl
fdivl
add
adc
mov
aad
and
aam
scas
and
sub
inc
scas
mov
je
sbb
into
push
ss
iret
scas
pop
adc
inc
popa
push
and
fnstsw
out
stos
cld
sub
insb
and
mov
mul
jns
enter
cmpsb
dec
sbb
in
sahf
jp
mov
ud2
daa
and
les
push
dec
icebp
mov
cmpb
lock
or
sub
cmc
fwait
aam
out
cli
inc
cwtl
push
in
movsl
inc
mov
dec
adc
les
inc
xchg
add
sti
outsl
pop
or
cs
fwait
pushf
lods
xor
sub
cltd
popf
fadds
or
push
inc
outsl
and
xor
mov
push
daa
adc
popf
aas
add
cltd
xor
push
sub
pop
inc
pop
je
mov
cmpsl
jae
push
mov
xor
pop
jne
xchg
es
and
out
xchg
das
jns
cltd
and
aaa
and
pop
fdiv
push
lds
sbb
roll
aam
rcrb
jns
into
loop
sub
sarb
hlt
or
xor
add
movsl
call
setnp
or
fwait
push
mov
pop
sub
pop
ret
add
test
xchg
mov
xor
jl
inc
les
flds
in
ror
add
ret
and
sub
jae
scas
and
and
cmp
inc
fsubl
cltd
xor
push
pop
dec
cli
pop
inc
sbb
aaa
add
mov
jmp
lret
lock
mov
test
jmp
cmpsl
lret
xor
sbb
jmp
xchg
aam
xchg
inc
lret
lods
inc
sti
push
mov
adc
mov
jle
add
jp
push
dec
fdivrs
arpl
mov
rorl
push
xlat
mov
fldenv
pop
popa
clc
xchg
pop
in
adc
and
mov
pop
pop
ficompl
sbb
mov
xchg
push
aad
out
out
jo
push
adc
or
push
mov
lock
mov
rol
jecxz
jp
push
test
jns
push
das
sub
mov
stos
pop
cmp
iret
imul
jns
repz
mov
sbb
sbb
outsl
adc
lahf
pop
push
pop
xlat
js
mov
mov
and
leave
std
aaa
loope
xlat
lea
xor
and
pop
cmp
scas
outsb
push
fistpl
xchg
cs
adc
rcrl
popa
rolb
pop
inc
cmp
xchg
dec
mov
sbb
mov
sar
mov
lds
xchg
es
sbb
fdivrl
test
inc
dec
es
jp
xor
cmp
mov
repz
rcrl
push
push
push
je
fcoml
dec
push
fadds
push
pop
mov
enter
hlt
xor
cmp
mov
sbb
inc
mov
mov
mov
mov
popa
pushf
out
loope
or
xor
sti
push
xor
scas
lahf
sbb
mov
dec
jne
push
mov
inc
or
hlt
aas
mov
cmc
push
sub
sti
clc
rcr
jle
outsl
aaa
jns
inc
jnp
scas
je
fwait
scas
dec
aad
jae
add
leave
mov
lcall
sub
cmpl
jecxz
lods
bound
iret
mov
in
add
dec
cmp
scas
cmp
xchg
mov
aam
inc
cmp
fistpl
ja
aam
xchg
mov
pusha
rclb
dec
jl
and
mov
mov
cmp
nop
xchg
adc
sbbb
cmpsl
jbe
pop
clc
out
sahf
add
mov
sub
test
pop
adc
cmp
ficoms
xor
xchg
loopne
movsb
cmp
popa
xchg
add
jge
in
mov
cmpl
mov
repnz
sbb
or
cmp
cmpsl
fstpl
sti
lds
lods
in
insl
fiadds
icebp
ja
adc
mov
and
cmc
lret
mov
cmpsb
aaa
int
into
push
mov
cmp
add
xor
adc
sbb
insl
lahf
movsl
scas
frstor
and
add
sbb
mov
push
mov
push
inc
std
and
add
ret
pop
aaa
out
mov
cmp
nop
jmp
mov
push
ss
or
xor
push
pushw
mov
je
mov
movsb
mov
adc
pop
fwait
xchg
xchg
fnstenv
sub
test
icebp
enter
dec
out
les
cmp
lea
fbld
push
int
in
dec
mov
jp
add
pop
xchg
sbb
cmp
adc
dec
hlt
xchg
shlb
fldenv
jne
dec
mov
mov
cs
pushf
sahf
rcl
les
lret
jae
cmp
pop
ljmp
xor
jl
push
fisubs
adc
shll
push
xor
cwtl
inc
adc
shll
and
int
cmpsl
xchg
aas
mov
cmp
fcompl
clc
sbb
das
repnz
ret
aad
scas
stos
movsb
js
divb
mov
mov
mov
adc
add
pusha
xor
push
jae
mov
enter
and
pop
and
inc
shl
and
sub
inc
stos
pop
inc
xor
and
iret
insb
aaa
call
lret
mov
xor
std
mov
fwait
add
aaa
push
aas
lock
outsb
lods
iret
mov
mov
jmp
jns
lret
fsubrl
sub
test
mov
and
ficompl
in
popa
inc
xchg
shlb
pop
sbb
sub
xor
push
add
mov
loopne
push
sub
mov
mov
or
inc
inc
aam
xchg
jg
insb
ja
fstpt
mov
aam
xchg
pop
xchg
and
es
xlat
pop
sbbb
loope
cmp
jns
int3
les
xchg
pop
adc
mov
loop
mov
fisubrl
dec
sub
dec
ss
imul
dec
pop
mov
inc
jp
sti
hlt
or
push
sbb
and
shl
push
movsl
rcll
rcll
inc
or
mov
jle
mov
scas
aaa
cmc
sub
xor
fsubrl
in
scas
ja
idivb
pop
jmp
stos
popf
fcomps
out
out
dec
jo
lea
adc
mul
sahf
in
imul
les
ja
mov
xor
push
jmp
mov
pop
jae
inc
mov
enter
movsl
jecxz
pop
fisubl
mov
arpl
xor
inc
add
pop
loope
or
stos
sub
cmc
adc
mov
rcl
imul
and
mov
inc
sub
movsl
ret
xor
mov
mov
jmp
call
xlat
call
data16
cmp
adc
adc
cmpsb
inc
je
rcrb
cmp
pop
mov
and
sarb
and
gs
popf
xchg
cmp
push
and
cmp
incb
cmp
inc
scas
aaa
stc
lds
cmp
sbb
xor
lock
not
movsb
push
les
hlt
stos
sbb
into
fdivl
mov
addb
enter
mov
ror
aad
ja
push
adc
pop
fidivl
mov
and
lods
notb
push
mov
test
imul
and
mov
pslld
in
fidivrl
test
mov
pusha
jp
shrb
test
mov
fstps
loopne
xchg
fidivs
int3
push
mov
nop
and
cmp
cs
mov
cmpsl
js
inc
xchg
rcr
nop
mov
xor
pop
sbb
xor
inc
divb
or
jne
idiv
cmpsb
test
fstpl
sbb
sti
push
test
push
aam
loope
pop
shlb
and
jae
test
int3
mov
mov
test
adc
inc
push
add
int3
lret
sbb
jno
ljmp
mov
inc
lcall
pushf
mov
js
hlt
aam
mov
lea
mov
mov
add
push
add
movsl
xor
xchg
sub
or
and
mov
lret
fisttpll
iret
mov
jp
adc
mov
jecxz
sbb
cmp
mov
pop
sub
shlb
popa
les
outsb
popa
adc
sbb
jb
fnsave
shlb
out
into
lds
jo
iret
xchg
sub
leave
and
push
or
mov
pop
mov
add
mov
in
jecxz
and
mov
nop
outsb
jae
aaa
inc
lea
lret
in
scas
adc
clc
inc
cmp
xor
pop
xor
sbbb
xor
mov
loopne
cli
xorb
sub
mov
mov
das
inc
popf
push
rcrl
xor
adc
jmp
in
cmp
push
addl
mov
ficompl
rol
push
xorb
jecxz
cmp
mov
or
or
icebp
mov
and
nop
mov
dec
jmp
inc
insl
xchg
pop
call
ja
inc
mov
loope
xchg
fsubl
cmp
es
lahf
add
stc
cmp
in
lret
repz
jnp
lds
loop
or
js
or
mov
test
cmp
stc
inc
sbb
addr16
jbe
cli
test
sbb
or
sbb
int3
mov
aas
cs
cs
iret
sti
push
xor
nop
push
jno
pop
inc
cwtl
mov
push
inc
mov
insb
fsubr
fisttpl
cld
xor
je
lods
push
cmp
jbe
sar
adc
stc
push
cli
mov
pop
xorb
pop
fldenv
jp
push
and
xor
data16
sub
mov
push
leave
and
bound
xchg
stos
out
lret
adc
push
mul
pop
shl
aam
pop
lahf
lret
push
sahf
fcoms
inc
sub
in
lds
jb
rcrl
dec
aaa
jae
push
adc
and
xchg
and
cmp
pop
jae
and
inc
aad
push
es
hlt
bound
add
jb
fiaddl
xor
fstpl
lcall
inc
in
pop
jo
jo
mov
adc
xor
sti
push
and
sbb
loopne
pop
scas
ret
aad
sbb
sbb
mov
std
das
lock
cltd
in
push
xor
stc
rcr
push
mov
pop
add
cmpsb
fxch
jecxz
or
push
and
into
imul
mov
das
adc
repnz
xor
lret
jl
inc
stos
cwtl
std
jmp
cli
call
addb
andb
cmp
lret
fisttpl
xor
shlb
lret
cli
mov
push
inc
inc
les
sub
sarl
pop
js
sbb
out
cs
out
mov
or
inc
xchg
jecxz
pop
ror
loopne
rolb
mov
mov
insb
or
mov
addb
adc
or
lahf
pop
inc
add
fwait
xchg
and
xor
stos
outsb
test
inc
fiaddl
cltd
cmpb
sbb
cwtl
dec
mov
popf
xchg
movsl
mull
adc
jbe
je
outsl
cmp
adc
cli
imul
shrl
pand
insb
mov
push
mov
shr
mov
mov
cmc
fmull
jge
into
fdivs
sahf
sub
shrb
dec
sub
andb
xchg
jae
out
xchg
mov
jmp
inc
xchg
ret
test
fwait
cmpsb
mov
mov
push
test
enter
mov
cmp
pop
xchg
lock
dec
fistl
xchg
xchg
dec
sub
mov
ds
xchg
jmp
cmp
rcr
dec
int3
imul
stos
cli
divl
add
scas
rcrb
shrb
lea
mov
das
fidivl
idivb
dec
add
out
inc
imul
lock
push
or
adc
ret
popf
and
sub
fmul
cld
out
adc
lret
ljmp
stos
pop
push
rcrb
sbb
sbb
adc
mov
fwait
and
adc
or
test
cmp
mov
fbld
fwait
add
lcall
stos
push
sti
sbb
sti
shlb
pop
xor
popf
stos
and
push
sbb
lret
pushf
scas
in
xor
fmul
sub
fldt
ficompl
lds
adc
pop
test
lcall
int3
pusha
mov
movsb
decl
cmp
into
fucom
in
add
loope
fld
lock
xor
daa
clc
xchg
aas
xor
shl
inc
int
xor
mov
leave
xor
cmp
or
movsl
sahf
addb
sahf
addb
cmp
add
shlb
jp
or
mov
mov
mov
pop
jmp
cmp
pop
or
jmp
fucomip
dec
cltd
je
sbb
xor
andl
fisubl
sub
ss
dec
jae
mov
in
mov
test
and
sub
pop
pop
mov
outsl
jg
cltd
push
jno
clc
mov
push
sbb
clc
sub
xlat
push
jle
push
enter
icebp
inc
cmp
js
dec
inc
pushf
xor
arpl
scas
fs
pop
add
mov
pushf
cmp
cmp
out
dec
pop
scas
mov
lret
imull
add
mov
inc
mov
push
cmp
inc
mov
insl
lahf
lods
jb
imul
loop
jge
sbbl
aam
mov
aad
jge
xchg
inc
call
dec
or
iret
mov
fucomi
mov
loope
xor
mov
or
sub
test
mov
sbb
sbb
ljmp
cmpsb
inc
jecxz
orl
mov
popf
xchg
mov
inc
daa
jle
xorb
cmp
cld
cmpsl
pusha
dec
in
aad
out
sbb
push
rol
jne
xlat
push
in
aad
mov
inc
inc
xlat
jecxz
insl
xchg
int3
std
sbb
fsubrl
aas
mov
jge
das
and
sub
jne
mov
push
fisubl
and
das
pop
ja
movsl
into
aaa
testb
aaa
fidivrs
cmc
adc
cmp
jle
and
jb
push
cmpsb
mov
insb
jno
cmpsb
inc
leave
cmp
loope
popa
mov
or
dec
sbb
push
push
mov
sub
cmpb
mov
call
cmpsl
sbb
xor
add
push
in
xchg
stos
call
sahf
adc
int3
hlt
add
out
mov
pop
xor
jecxz
sbb
or
ret
xor
adc
push
adc
add
mov
jge
mov
sbb
lea
in
and
out
inc
mov
into
psubw
pop
mov
cmp
xor
pop
push
aad
icebp
cmp
sub
jecxz
jne
jp
daa
sub
ret
add
pop
movsl
sbb
push
lods
or
andb
cmp
aam
incl
adc
sbb
pop
jb
int3
jle
push
rcr
push
aaa
inc
mov
and
outsl
xchg
int3
scas
and
sbb
pushf
in
rcrl
xor
in
das
cmp
dec
cli
orb
push
push
fcomi
lret
shlb
push
mulb
orb
xchg
pop
push
cs
dec
movsb
in
stc
mov
jae
int
add
inc
push
rcll
movb
jae
mov
or
cmp
fyl2x
stos
repnz
xchg
arpl
insb
aam
outsb
mov
lock
jge
sub
iret
sub
adc
pop
popf
lds
mov
les
jo
add
lods
lahf
jbe
scas
fsubr
ret
xor
in
movsl
jmp
mov
jmp
push
sbb
iret
mov
out
mov
or
adc
xchg
shll
sub
stc
in
pop
mov
stos
adc
clc
decb
cmp
cmp
mov
pop
out
mov
sar
mov
int
mov
and
lahf
nop
jae
enter
and
adc
movsl
test
inc
or
xchg
mov
lods
stc
adc
jge
mov
push
stos
lret
in
mov
cld
cmp
lret
mov
mov
enter
mov
daa
push
int
or
pop
notb
adc
mov
pop
int
adc
shll
pop
les
arpl
and
enter
mov
ds
repnz
test
lds
or
outsl
jno
sbb
lock
es
in
adc
shr
push
lret
fsubs
les
in
sub
fs
int
repz
push
loop
fisttpl
adc
push
nop
jno
xor
push
mov
mov
xor
pop
out
iret
out
int3
inc
lods
and
push
fwait
sbb
lahf
jp
pop
jge
pop
pop
inc
shl
mov
mov
sbb
xor
loope
pusha
lahf
sbb
fiaddl
push
aaa
jg
ss
add
sbb
xor
test
jecxz
inc
sarb
mov
fistpl
dec
sbb
out
repnz
mov
adc
lcall
adc
pop
jge
jmp
mov
in
out
push
xor
pushl
movsb
icebp
ja
arpl
scas
inc
mov
cli
enter
sbb
in
push
inc
ljmp
loop
aad
fstpl
sarb
xchg
loope
insl
addr16
out
shll
mov
mov
mov
xor
sahf
testb
mov
and
lcall
sarl
in
lds
jge
test
cmpsb
jmp
or
test
push
mov
test
cwtl
stos
fucomip
icebp
iret
pop
push
out
dec
leave
mov
cld
or
pop
js
cmc
and
mov
jbe
xor
xlat
mov
mov
sbb
sub
xlat
test
mov
mov
iret
mov
xor
jle
movsl
aad
xchg
ret
sbb
mov
mov
shrl
in
scas
mov
cmpsl
sub
mov
mov
les
adc
jecxz,pn
and
mov
dec
adc
add
add
mov
mov
fadds
xchg
insb
xor
test
inc
mov
and
ret
xchg
xchg
dec
and
jb
sub
lock
push
fcmovu
jne
push
outsl
inc
pop
pop
push
outsb
sbb
push
jb
and
repnz
out
add
inc
in
shlb
inc
pop
xor
sbb
or
sub
lret
add
push
push
ds
jp
aad
pop
cmpsb
mov
inc
xor
fnsave
inc
std
jnp
mov
int
mov
mov
fldl
repnz
sbb
dec
pushf
aam
pop
leave
mov
xchg
mov
popf
pop
lcall
into
outsl
insl
xor
jmp
mov
ja
sti
popf
cmpsb
mov
push
and
sub
lds
fadd
jns
es
in
and
lods
xchg
es
seto
icebp
mov
sub
lds
sbb
nop
out
cmp
lret
sub
mov
lods
lahf
mov
in
mov
lea
jmp
scas
test
out
adc
ljmp
in
sti
out
insl
aam
inc
jge
xor
inc
jb
mov
adc
cmc
hlt
ficoml
sub
mov
jmp
xor
push
inc
fcompl
movsb
dec
cmpl
sbbb
mov
ficoml
movsb
fwait
rolb
pop
fists
adc
out
out
mov
inc
loope,pn
xor
xor
notl
rcll
xor
loopne
lret
jmp
movsb
repnz
movsl
pop
ret
mov
inc
outsl
adc
xchg
loopne
xor
mov
cmp
or
je
push
lea
mov
dec
jp
pop
das
cmc
inc
xchg
mov
or
sbb
xorl
hlt
adc
sbb
mov
dec
insb
andl
scas
sbb
lds
lods
mov
mov
out
and
cmpb
xchg
fistps
and
das
fs
push
sub
sub
pushf
push
rorl
insl
stos
dec
add
mov
lahf
nop
pop
mov
pushf
aad
mov
mov
stos
cwtl
xlat
pushf
and
inc
xor
or
mov
loop
les
sbb
movsb
call
rcrb
fistpll
push
cld
sub
nop
cld
inc
or
pop
inc
cltd
fadds
and
xor
push
aam
jp
inc
xchg
lock
mov
stos
fs
jae
pop
push
push
pusha
cmpsb
popf
dec
adc
es
xchg
cld
jge
lods
fiadds
popa
orb
push
push
mov
and
xor
and
pop
xor
shll
mov
and
mov
gs
jl
mov
movsb
push
ss
enter
add
testb
in
mov
loop
add
lea
mov
pusha
jno
fs
pop
cmp
insl
pop
dec
data16
inc
inc
mov
mov
add
aas
or
lods
jae
adc
sub
push
shll
loop
xor
out
mov
inc
repnz
lahf
pop
sahf
repz
pop
dec
adc
jnp
xchg
or
sub
or
or
loope
push
aad
fdivrs
arpl
fldlg2
adc
lods
cmpsl
jae
enter
clc
fdivp
data16
jnp
fadds
dec
and
ret
stc
imul
pop
lds
outsb
mov
fidivl
sbb
clc
pop
loop
test
xchg
xchg
dec
xchg
pop
int3
pop
push
es
aam
shrl
and
xor
pop
mov
aaa
dec
sbb
xchg
outsb
repnz
fidivl
sbb
push
and
mov
scas
shll
fmul
cmp
mov
pushf
fiadds
add
adc
add
int
mov
cmpsl
xchg
stos
fistpll
fwait
roll
jbe
mov
out
sahf
xchg
aas
push
mov
mov
cmp
add
stc
dec
movsb
inc
push
xor
mov
mov
into
and
ret
test
rorl
fistps
int
push
jns
inc
or
or
inc
cmp
cs
xorl
inc
mov
adcb
mov
or
mov
lret
shrl
push
sub
out
dec
pop
in
inc
mov
dec
and
insb
or
scas
and
sti
xlat
movsb
inc
inc
rolb
sub
das
lock
adc
jg
movsb
icebp
es
dec
sub
adc
mov
int
cmp
xor
dec
mov
inc
icebp
jnp
sbb
xor
sub
mov
cmp
dec
jne
cmp
mov
cld
fnsave
addl
test
cmp
push
xor
mov
ss
in
hlt
cs
add
das
cmp
outsl
test
out
popa
and
xorb
daa
cmp
adc
mov
mov
stos
sub
aaa
mov
iret
xlat
stos
cld
pop
xor
cmpsl
jns
mov
sub
push
sub
mov
addl
and
mov
dec
sbb
push
dec
das
sub
xchg
xor
jne
xchg
mov
adc
jne
in
cmp
subb
pop
icebp
inc
add
xor
add
lds
dec
aad
fld
addr16
pop
pusha
mov
and
faddl
sub
jl
push
fdivs
pop
sahf
xorb
and
ficomps
and
dec
jne
xlat
fcmovu
stos
das
test
movsb
bound
and
ja
in
cmc
call
das
xchg
inc
xchg
xor
pop
mov
in
jno
mov
lret
mov
jnp
int
xchg
mov
shrl
subl
out
sub
pop
pop
fnstsw
sbb
mov
mov
popf
add
inc
cmp
xchg
inc
dec
cli
sahf
loope
cmpsl
or
xor
mov
cmpsl
cld
test
data16
add
push
out
and
sarb
push
cmp
out
inc
add
int3
iret
jge
or
xchg
and
pop
or
jecxz
sub
dec
or
inc
or
cmp
sub
pop
mov
fdivrl
movsb
or
fists
fdivrp
or
fmuls
mov
hlt
sbb
or
mov
in
pusha
pop
cmpsb
pop
outsl
xor
cmc
aad
push
aad
add
icebp
ret
fdivs
pop
rcr
and
aam
loop,pt
inc
scas
rcl
mov
in
mov
out
das
cli
faddl
sti
stos
sbb
or
pop
adc
sbb
outsb
enter
cmp
and
adc
mov
or
in
loopne
jp
out
jae
into
popa
out
std
jl
xor
and
jns
fiadds
out
fcoms
cmc
ljmp
lret
adc
inc
cmp
xchg
cld
dec
adc
ret
or
jl
ret
movsb
cltd
popa
lods
mov
mov
xchg
inc
inc
cmp
jecxz
mov
adc
sarl
or
movsl
enter
mov
lods
mull
or
and
es
push
xchg
nop
push
or
cmp
pushf
xlat
pushf
les
cld
das
in
and
xchg
ljmp
insb
dec
inc
sbb
loop
jae
sub
enter
sbb
adc
mov
cmp
test
aam
xchg
loopne
dec
sbb
fadds
clc
cmpsb
mov
mov
das
lret
repnz
jl
pop
out
fdivr
mov
jl
cmp
xor
sahf
xor
jo
sarl
insb
mov
xor
lods
daa
dec
sahf
fstp
push
repnz
imul
push
lds
orl
mov
inc
fwait
pop
ja
sbb
add
in
sub
test
ss
pop
jo
add
jb
push
fucomi
inc
iret
fildl
pop
in
and
cli
add
pop
repnz
aam
cmpb
ret
xor
test
push
mov
jne
and
xor
xchg
pop
ds
dec
xchg
sbb
push
test
cmp
mov
popa
jae
mov
in
iret
insl
adc
es
push
es
jmp
and
xchg
mov
out
ret
sbb
test
xor
es
mov
push
sahf
mov
inc
and
cld
stos
in
stc
lds
out
outsl
jne
adc
inc
cmpsb
xchg
fs
nop
pop
adc
dec
pop
in
mov
xor
movsl
mov
pop
and
mov
adc
lods
insb
nop
push
mov
jmp
rorl
jbe
lds
rcl
das
cmp
mul
subl
push
xchg
test
inc
push
fsubrp
std
jecxz
inc
lahf
scas
cld
pop
inc
mov
sbb
icebp
enter
mov
enter
frstor
clc
shlb
lds
mov
add
sahf
stos
lcall
cli
mov
sahf
lahf
mov
scas
shlb
sub
pop
stos
cs
jecxz
mov
xchg
mov
adcb
in
mov
xor
movsl
mov
into
xchg
dec
sarb
lret
cmp
cwtl
or
ljmp
pop
pop
lret
jb
jle
mov
cs
jg
fwait
add
mov
jecxz
cmpb
pushf
adc
rclb
jae
bound
mov
sub
adcb
cmpsl
push
xor
aad
fstl
popf
pop
sbb
xchg
mov
xor
mov
repz
jp
out
mov
ja
or
out
mov
xchg
mov
add
jns
pop
mov
fbstp
cmp
icebp
pop
cmpsl
mov
in
cltd
test
mov
shll
in
cmp
or
out
into
lods
js
stos
jae
mov
mov
inc
pop
sub
movsl
movsb
fnsave
shrb
ss
ja
pop
push
cmc
inc
shrb
mov
sar
imul
repz
pop
sbb
mov
int3
cwtl
ret
pop
frstor
les
add
clc
sbb
and
push
xchg
std
lds
inc
in
ret
xor
jmp
bnd
call
push
push
mov
mov
int3
ds
flds
lock
lock
mov
pop
subl
sub
sbb
pop
ja
popa
lcall
mov
mov
iret
iret
mov
outsl
jnp
sub
mov
bound
sbb
fs
test
add
pop
aaa
aam
push
mov
stos
mov
adc
mov
popa
jnp
push
sub
mov
sbb
lds
nop
sbb
cmp
movsl
sahf
pop
sti
call
das
cmp
ljmp
adc
cmp
popa
mov
sbb
and
mov
shlb
ja
jo
fsubs
das
repz
stc
mov
jl
sub
jp
fdiv
pop
adc
loop
fmulp
mov
and
stos
pop
push
fldenv
decb
xor
hlt
xor
push
das
cmpsl
mov
aam
loope
mov
xchg
stos
pop
xchg
and
add
outsb
xor
mov
pop
cs
sub
rorb
xchg
xlat
daa
testb
sarb
sbb
lcall
in
ja
xchg
fwait
movsb
enter
ja
and
cmpsl
push
inc
jecxz
testb
xchg
movsl
cld
jmp
aaa
inc
xchg
and
sahf
aas
jae
les
sbb
and
xchg
mov
push
stos
xor
nop
pop
pop
adc
sub
ficoml
mov
mov
orl
test
lds
inc
mov
repnz
add
not
cs
orb
push
push
fistl
loope
out
data16
test
or
cmpsb
je
aam
push
das
mov
xchg
shlb
mov
shlb
mov
push
push
jno
xchg
imul
xchg
sbb
mov
cli
je
push
inc
mov
ret
cmp
add
push
pop
jbe
out
cmp
repz
mov
mov
jg
outsl
aad
mul
stos
and
mov
in
or
sub
mull
sbb
sub
pop
mov
std
stos
dec
cmp
mov
stos
or
aaa
loope
movsl
add
jb
sbb
mov
dec
ds
lea
insl
mov
fdivrl
aaa
cs
adc
jge
outsb
push
pop
adc
inc
cmp
jae
inc
repnz
pop
adc
mov
sbb
cmp
dec
sbb
fcoml
and
fwait
cld
pop
insb
xchg
mov
xchg
jmp
mov
sub
jns
fldl
rcrb
xor
add
xchg
fdivrp
pusha
int3
push
movsb
out
pop
aaa
jnp
icebp
and
xor
loope
fwait
movsb
jns
jae
adc
mov
aas
bound
lcall
cli
jnp
out
mov
mov
push
adc
imul
xor
test
in
subb
adc
or
inc
sbb
in
js
cld
add
xor
jp
fimuls
xor
xor
test
push
mov
push
inc
sbb
mov
lds
mov
mov
movsb
adc
cld
push
popa
std
xchg
sub
movsl
clc
xor
jnp
andb
mov
fnsave
test
push
and
mov
mov
ljmp
mov
mov
ja
push
jge
in
jnp
je
hlt
inc
fcmovu
cmp
inc
or
int3
int
or
je
into
sub
sub
inc
out
mov
lahf
adc
bound
xor
xchg
mov
cmp
adc
or
add
int3
outsb
ljmp
sbb
push
mov
mov
test
stc
mov
pop
cltd
mov
inc
jbe
pop
dec
adcl
stc
fldt
sti
xor
ret
sub
adc
jl
jo
test
adc
pop
loopne
jnp
mov
stos
aam
out
mov
mov
loopne
jnp
stos
fsubl
in
out
int
test
inc
cwtl
sahf
xor
test
and
lret
cs
stos
imul
fisubrs
or
mov
test
inc
push
sahf
imul
fbld
dec
leave
xchg
fbld
push
inc
jb
pop
jne
aaa
inc
adc
lock
lahf
stos
sbb
xlat
mov
jnp
stos
mov
xchg
stos
adc
push
stos
jne
cmc
jmp
call
sahf
fistl
daa
rclb
cmc
ret
pop
pop
cmc
mov
adc
and
fucomip
lret
push
fnstsw
lret
fucomip
cld
loopne
loop
call
jne
aaa
fldenv
adc
ficoml
daa
stos
movsb
out
pop
mov
sub
push
fnstenv
inc
dec
lock
mov
stos
inc
out
cmp
subb
stos
xchg
adc
stos
push
popa
cwtl
bound
inc
add
jg
cld
and
filds
sub
pop
arpl
push
int
jne
cmp
enter
inc
xor
or
adc
fs
jae
push
mov
movsl
hlt
mov
stos
hlt
out
mov
jnp
stos
push
fs
cmp
dec
adc
inc
test
inc
and
aam
mov
lret
fistpll
std
nop
or
or
xorb
mov
adc
sahf
es
inc
pop
icebp
je
bts
mov
jnp
stos
mov
stos
adc
mov
xor
and
sub
mov
jne
cmc
ja
push
sahf
outsl
adc
and
fbld
cs
lret
fildll
gs
mov
add
pop
orl
adc
mov
or
cmpsl
fistps
xor
push
arpl
cmp
rolb
fdivs
jmp
call
pop
loopne
jnp
stos
loopne
loop
call
cwtl
repnz
dec
xchg
sahf
das
adc
movsb
lret
cmp
cmc
push
inc
xor
inc
filds
cmp
fisttps
arpl
inc
lcall
jne
aaa
popa
adc
lock
jg
cld
out
mov
adc
loopne
jnp
stos
sub
pop
aas
xor
push
adc
lahf
test
mov
and
into
shrb
dec
loopne
pop
cmp
sub
das
mov
dec
out
xlat
push
mov
mov
lods
movsb
jecxz
adc
add
and
xchg
mov
int
pop
pop
cmpsl
imul
dec
or
xchg
sbbl
lahf
fmull
jae
and
or
idiv
pop
rcrl
iret
pop
pop
push
nop
sbb
sti
outsb
add
jge
cmp
fistl
and
adc
pop
mov
movsb
popf
push
xor
stos
lahf
fldl
sub
and
pusha
adc
imul
mov
sahf
call
xorl
loopne
lret
jmp
xchg
movsb
inc
and
xsaveopt
pop
dec
enter
aaa
rcll
push
in
test
adc
insl
mov
and
sub
xlat
add
outsb
cmc
int
pop
jge
test
cmp
fsubrl
add
test
or
jae
cmp
adc
mov
push
sub
std
mov
adc
xor
sub
mov
fsubr
enter
pop
stos
sub
dec
fbld
arpl
inc
mov
aaa
and
adc
cmp
lock
cmp
inc
pop
loopne
jnp
stos
adc
stos
mov
test
inc
inc
sahf
imul
outsl
filds
arpl
inc
int
jne
aaa
std
adc
push
inc
js
pop
mov
stos
pop
out
pop
mov
jnp
stos
cmc
fs
aas
out
stos
pushf
adc
cwtl
lcall
addr16
mov
leave
fbld
or
pusha
inc
outsl
int
jne
aaa
pop
adc
lock
mov
mov
mov
push
sti
mov
adcl
xchg
add
daa
arpl
rcrb
movsl
adc
cltd
rcl
movsb
lds
lret
insl
mov
xchg
nop
pop
lock
and
movsl
or
rolb
add
add
sub
mov
dec
imul
fisubrs
and
out
cs
cld
adc
jle
ficompl
loope
lret
es
repz
stc
aad
aam
pop
mov
test
pop
andb
aam
jnp
mov
lret
icebp
in
adc
rclb
and
mov
arpl
ljmp
adc
icebp
mov
scas
adc
mov
or
repz
push
aad
pop
add
mov
push
jae
cmpsb
movsb
daa
jne
call
mov
and
in
sbb
fsubr
mov
adc
mov
or
repz
cld
leave
push
jp
mov
xor
or
repz
nop
sbbl
xor
sub
push
sbb
test
inc
orl
xor
or
sub
aam
xchg
and
scas
test
in
movsb
movsl
mov
xchg
fadds
or
cmc
fildl
jl
outsb
sub
test
insb
mov
push
push
xor
push
pop
mov
xchg
pop
xchg
inc
pop
movsb
pop
stc
sub
xlat
mov
jnp
int3
and
lahf
cmp
dec
lcall
mov
mov
dec
test
and
push
adc
movsl
ret
lret
adc
ret
fwait
orb
cmp
push
outsl
arpl
or
jl
pop
popa
adc
dec
pop
adc
lock
ljmp
mov
test
adc
dec
inc
pop
mov
dec
mov
mov
sub
repnz
enter
cli
call
xchg
fwait
xchg
mov
pcmpgtb
rclb
fwait
clc
or
mov
fisubs
sarb
sbb
enter
movsb
aam
loop
sbb
xor
cmp
dec
lret
fldl
scas
pop
pop
xchg
mov
stos
xor
xchg
rorb
dec
mov
addb
lret
jnp
adc
outsb
std
dec
test
fisubl
push
and
xor
fwait
aas
ja
loop
xchg
bnd
inc
push
rcrb
out
in
pop
iret
lret
dec
cmp
sti
shrb
stc
test
add
outsb
fwait
aam
out
enter
push
jl
and
add
xchg
mov
aad
cmp
js
popf
and
ja
js
mov
jle
repnz
pop
xlat
fnstcw
jge
push
movsb
inc
or
call
jnp
dec
inc
int
and
divb
inc
rclb
dec
push
and
repnz
mov
or
add
std
shll
or
mov
or
xchg
mov
push
sub
pop
ret
movsb
xchg
xor
sub
adc
xchg
int3
jle
fs
mov
xor
or
mov
lea
and
fnsave
cld
add
adc
daa
fcmovu
rclb
push
inc
in
scas
mov
jne
ss
xor
or
scas
cs
or
dec
push
mov
sub
test
inc
inc
out
push
add
xor
or
inc
rorb
or
fs
jns
div
mov
add
sbb
out
loope
mov
fwait
cltd
jbe
pop
fcomp
inc
fistpll
inc
mulb
loope
and
lcall
das
ror
mov
mov
bound
inc
out
inc
inc
scas
jbe
push
mov
and
enter
pop
xchg
pop
rorl
mov
out
inc
add
add
lods
mov
xchg
sub
jnp
das
push
mov
lds
cmp
aad
mov
es
aam
loopne
sbbl
out
fstps
sub
test
xchg
pop
jmp
cli
int
jle
jg
mov
scas
xchg
filds
stc
repz
shlb
sub
cmp
pop
fcoms
sti
fsubs
ljmp
aas
insb
mov
out
sbb
xor
call
adc
movsl
xor
jae
roll
dec
lahf
iret
mov
inc
sub
jge
je
movsb
jns
adc
scas
sub
lahf
sub
and
jbe
xchg
jmp
call
pop
jae
and
test
sub
test
loope
mov
jp
cltd
nop
les
mov
dec
test
cltd
stc
movl
lea
ja
jp
iret
ljmp
mov
shlb
test
ja
outsl
rol
fmuls
xchg
scas
call
insl
out
dec
into
xchg
out
aaa
out
pop
aad
sbb
sahf
jno
aam
xchg
or
pusha
movsl
mov
mov
xor
enter
shlb
mov
dec
movsl
mov
imul
std
ds
stos
xor
loop
add
mov
pop
mov
movsb
dec
xchg
cs
cmp
mov
fisubs
ss
int3
mov
push
iret
add
movsb
adc
jae
repz
mov
movsl
popa
fidivrl
sub
leave
aam
add
adc
sbb
sbb
pop
and
int3
xor
mul
jmp
enter
arpl
mov
out
or
sub
xchg
inc
gs
jg
shlb
xchg
xor
sbb
inc
push
xor
scas
fcomps
jb
stos
rolb
mov
mov
cmp
dec
int3
mov
dec
cmp
adc
daa
or
fmuls
ljmp
mov
jmp
insl
adc
adc
movsl
sbb
mov
mov
sahf
push
cmp
adc
adc
mov
mov
mov
rcl
push
sub
icebp
lods
sti
dec
in
cwtl
fsubrl
popf
arpl
sbb
ret
pop
xchg
das
sbb
std
std
cs
sbb
cmc
add
gs
and
mov
rcrb
xchg
sahf
cs
or
pop
push
ljmp
daa
aaa
test
icebp
sub
aas
cmpsb
pop
hlt
xor
sahf
add
or
mov
cmp
lcall
jl
rorl
fisubl
inc
mov
sub
jle
int3
jo
jae
xchg
cmp
inc
pop
iret
mov
scas
imul
and
test
jbe
lret
stc
and
push
and
push
call
fsub
and
imul
xor
mov
mov
inc
js
iret
jo
lret
rep
lds
movsl
aaa
pop
inc
sti
ss
push
mov
test
test
xor
shl
xor
ss
mov
roll
mov
pop
jmp
mov
popa
adc
repnz
pop
test
rcrb
cltd
and
iret
mov
into
fistpll
xchg
sub
or
mov
jb
pop
hlt
inc
and
shrl
cli
mov
in
xor
sub
hlt
xor
in
lcall
push
sbb
repz
hlt
outsl
imul
push
mov
and
pop
fidivl
mov
adc
jle
scas
fadds
outsb
mov
arpl
stc
and
add
xchg
ljmp
dec
lret
push
in
mov
scas
push
lret
leave
scas
cmp
pop
mov
aaa
insl
outsb
out
sub
inc
and
call
test
mov
ret
popa
mov
pop
jmp
sbb
push
push
pop
jb
push
push
repz
shrl
sub
xchg
xor
adc
nop
lea
je
jb
dec
cmp
pop
jle
push
pop
cmp
call
and
or
pop
push
pusha
loopne
popf
insb
insb
inc
lahf
mov
iret
xor
pop
in
lret
cmpsb
push
dec
jmp
ret
lock
mov
outsl
mov
movsl
jmp
popa
jg
pop
pushf
sbb
inc
jl
cmpsl
in
rcrl
nop
or
cmp
xorl
sub
insl
xor
sbb
cmp
andl
mov
jne
or
mov
test
xlat
scas
std
mov
mov
jb
xlat
inc
hlt
xor
push
cmp
in
movsb
jnp
into
mov
fsubrl
std
je
push
mov
lret
fdivr
loop
mov
mov
sbb
enter
jb
dec
or
sub
fs
cmpsl
pop
clc
or
popa
mov
into
inc
jne
mov
andl
dec
fstl
ficomps
hlt
sti
ds
imul
and
aam
adc
out
adc
jg
mov
and
cmpsb
dec
testl
lods
cmp
test
cmpsb
xor
push
dec
pop
dec
arpl
popa
mov
mov
push
mov
sar
out
push
pop
pop
xchg
testl
pop
mov
xor
and
or
sub
ljmp
adc
and
lods
in
jle
or
aam
xor
push
loop
dec
mov
inc
xchg
mov
cmp
es
jg
sahf
out
std
or
scas
shl
sub
in
mov
popf
xchg
cmp
lds
hlt
inc
jecxz
mov
mov
pop
jmp
pop
jecxz
test
fwait
fwait
aas
inc
and
rorl
andnps
data16
repnz
in
jle
je
iret
mov
mov
movsl
notb
mov
pop
roll
xchg
mov
fildll
fcompl
fsts
sbb
aam
push
pop
dec
rorl
or
lret
mov
test
jo
lods
cmpsb
aaa
adc
scas
std
and
pop
adc
dec
pop
stos
lret
mov
fsubs
sub
mov
sbb
fnstenv
push
push
mov
lea
sub
stc
inc
mov
inc
movsl
jne
sub
add
push
jle
cmpsb
xchg
mov
sbb
mov
rcrl
or
addl
fwait
lods
xor
add
sbb
iret
shrl
stc
sbb
cmc
push
jns
xchg
sub
mov
sbb
popf
mov
or
lahf
cmc
mov
fst
jmp
fdivrs
pop
into
dec
jecxz
pop
subl
cmc
mov
xchg
repnz
inc
idivl
sub
or
fnstcw
pop
aad
fistps
mov
and
push
mov
dec
ja
int3
ljmp
mov
xchg
xor
xchg
pop
std
das
cmpsl
push
sub
cltd
add
xor
pop
inc
pop
shrl
cmpsl
fwait
in
aam
rclb
dec
aad
lret
insb
insb
push
mov
add
sbb
sbb
movsl
dec
stos
sbb
jne
adc
decl
lock
jl
sub
xchg
sahf
inc
fcomi
jno
dec
ret
push
aaa
loope
fwait
and
jl
sub
scas
arpl
mov
mov
sub
std
ljmp
cld
scas
xlat
pop
js
repz
cmp
cli
mov
xchg
call
jge
pop
in
je
xchg
push
je
jl
lods
mov
popa
sbb
lods
jno
jmp
mov
sahf
xor
scas
sbb
sub
sbb
jno
sub
sti
scas
repz
cmp
adc
gs
js
stos
cmc
mov
pop
repnz
mov
fcomi
fsubs
shlb
dec
jbe
hlt
pop
aam
std
xchg
test
ucomiss
xor
icebp
hlt
push
mov
movsb
lods
mov
loop
jae
and
sbb
lds
mov
mov
into
int3
arpl
pop
lds
xor
stc
lods
std
xor
xchg
inc
xchg
mov
stos
adc
xor
lods
loop
imull
sub
js
xchg
xchg
in
dec
das
iret
cmp
movsb
sub
dec
add
rolb
push
gs
sub
cmpsl
out
movsl
pop
xor
lods
jmp
mov
or
jle
add
cltd
test
mov
xchg
xlat
jns
out
pushf
imul
push
mov
mov
jo
sub
or
sbb
jmp
inc
scas
sub
scas
nop
popf
mov
sbb
and
jb
adc
sub
mov
mov
pop
cmp
cmp
addr16
cwtl
imul
lods
mov
inc
aad
xor
scas
repz
cmp
push
push
out
inc
mov
outsb
cs
sub
mov
ja
subl
xlat
jne
dec
scas
scas
mov
jecxz
out
jbe
sbb
sub
mov
fimull
mov
loopne
sbb
add
movsb
push
inc
outsl
popf
rep
adc
stos
sub
push
pop
push
fsub
sbb
lods
inc
shrl
pop
or
sub
lret
pop
or
or
mov
in
stos
jae
xchg
sahf
lcall
leave
aam
mov
pop
pop
clc
mov
ja
jae
cld
mov
inc
ja
in
loop
mov
mov
cmp
jl
loopew
mov
in
pop
daa
sahf
cltd
push
and
cmp
xor
xchg
jmp
jae
pop
stos
mov
cwtl
movsl
dec
adc
pop
iret
lds
lds
push
test
and
je
mov
and
pop
test
xor
jmp
lock
mov
pop
ror
mov
and
fmull
testl
pop
xor
xor
ss
pop
arpl
inc
jae
inc
cld
or
mov
sahf
repz
push
sub
out
outsl
mov
sub
mov
sti
fisttpll
adc
inc
jae
mov
add
cmp
lods
frstor
push
adc
movsl
data16
add
mov
sub
hlt
cmpsl
shlb
scas
push
dec
xor
push
daa
sub
dec
sbb
cmp
pop
mov
fstpt
mov
in
rolb
fsubl
call
int3
push
hlt
jg
or
cmc
xchg
inc
xor
faddl
add
mov
jp
rolb
lret
dec
xchg
mov
push
fcmovne
test
mov
imul
loopne
sti
leave
xchg
rol
xchg
mov
add
insl
push
dec
push
cmp
adc
in
movsl
fistpll
xor
adc
xchg
jecxz
cltd
movsl
sub
es
sub
movsb
pop
pop
rcll
jmp
movsb
sahf
hlt
shll
dec
in
lret
lcall
enter
gs
jmp
leave
je
mov
cld
sbb
xchg
sub
pop
sbb
and
xchg
scas
lret
hlt
orl
dec
hlt
dec
mov
mov
sti
jb
shlb
sbb
mov
jne
in
inc
xor
mov
mov
repnz
sarb
ss
inc
xlat
pop
cmp
shll
jbe
ljmp
or
inc
dec
adc
or
pushf
sub
sub
jno
mul
fcomps
mov
es
sub
scas
mov
popa
addr16
mov
ds
repz
jge
add
movsb
pop
xchg
aas
pop
mov
in
into
lcall
xchg
mov
inc
mov
sbb
ljmp
loop
xchg
iret
mov
sahf
mov
sbb
aas
push
movsl
mov
sub
pop
jge
fcmove
sbb
xorl
mov
shl
scas
dec
sbb
jecxz
adc
cmp
and
outsb
add
mov
aas
dec
cli
data16
mov
cmp
fisubrl
movsb
xchg
push
insb
aam
cmp
iret
inc
mov
pop
cmc
sti
imul
lods
arpl
inc
cmp
faddl
icebp
pop
roll
sbb
aas
ret
das
push
std
xchg
pop
inc
loope
mov
push
inc
repnz
testb
push
incl
inc
dec
pop
iret
push
cs
push
out
frstor
inc
mov
sub
cmpsb
pop
out
mov
push
inc
xlat
push
dec
mov
xchg
hlt
jle
stc
rcrl
jbe
orl
repnz
push
int
cmp
ds
jp
fxch
and
into
xchg
inc
iret
movsb
aaa
inc
fistps
andl
lods
push
push
xchg
lcall
ja
test
insl
nop
aas
mov
mov
pop
out
pinsrw
cli
mov
daa
ljmp
in
test
outsb
mov
aam
add
sbb
xchg
mov
les
repnz
push
cltd
jl
sbb
sub
mov
sub
pop
jmp
fiaddl
imul
inc
fadds
jle
fldcw
mov
sub
jbe
or
sbb
push
stos
mov
mov
int3
shl
pop
loopne
mov
push
orb
inc
aaa
or
decl
pusha
iret
inc
fsubrp
mov
stc
sbb
dec
pop
push
add
idivl
adc
movsb
and
push
lea
pop
push
mov
inc
stos
mov
test
mov
into
and
cmp
jo
aam
xchg
mov
fcompl
dec
mull
in
xchg
data16
int
mov
mov
adc
jno
jle
aaa
in
mov
cmpsb
mov
fdivrl
das
orb
es
arpl
scas
jp
sahf
cmpsb
aad
push
sub
mov
adc
xor
xchg
outsl
repz
repnz
enter
sbb
mov
inc
adc
adcl
mov
into
insb
inc
sahf
shr
nop
xor
add
rcll
or
pusha
je
popf
icebp
mov
dec
dec
xchg
fwait
inc
in
pop
pusha
loop
jae
popf
inc
loopne
sbb
ds
fnsave
shlb
mov
stos
jbe
test
mov
mov
test
fdiv
fldl
pop
lret
pop
pop
stos
jle
adc
std
fdivr
icebp
and
and
xchg
adc
adc
std
lods
jno
cwtl
iret
pop
movsl
test
dec
mov
and
dec
addb
jbe
ss
jno
jbe
mov
add
mov
push
cmp
test
stos
fcompl
mov
insl
jg
jns
icebp
xor
add
sub
lret
data16
mov
cmp
add
mov
pop
mov
popa
cmp
pop
mov
xchg
faddl
adc
xor
xor
inc
pushf
lock
sub
xchg
lock
mov
scas
dec
xchg
lea
mov
stc
fwait
mov
jmp
movsb
movsb
sub
xorb
fwait
xor
aaa
inc
dec
fwait
adc
mov
mov
ficoml
push
testl
fstpl
jb
cmp
dec
outsb
adc
xor
pushf
imul
adc
fdivl
sbb
int3
test
shrb
jno
mov
insl
ja
sbb
sub
sbb
rorb
jecxz
jmp
sbb
stc
mov
roll
lahf
push
cmp
movsl
adc
add
lahf
cmp
jnp
int
mov
std
out
outsb
mov
sub
add
sbb
push
jnp
push
add
or
mov
or
sbb
test
inc
std
mov
push
inc
lret
jge
mov
int3
and
inc
xchg
bts
push
jge
jp
sub
sbbb
or
shrb
jmp
pop
outsl
pop
nop
jae
jmp
mov
insb
mov
inc
cltd
das
sub
mov
scas
dec
xchg
push
cmpsb
das
test
shl
jp
mov
inc
stos
in
popf
popl
sysexit
fxtract
fsts
clc
add
mov
lahf
test
sbb
ret
ss
add
pushf
out
frstor
sbb
jle
or
xor
fisubrs
or
shrb
mov
loope
or
cmpsl
push
bound
pop
add
leave
and
andl
lds
jb
xor
mov
jbe
std
jge
in
test
mov
sti
scas
xchg
cmc
ficompl
mov
pushf
cmp
and
lahf
jg
mov
test
sub
inc
ficoms
cmpsl
inc
mov
pop
loopne
jnp
cmp
mull
cmpsl
mov
cld
pop
cmp
push
fimull
arpl
fstpt
jae
cmp
inc
stos
aam
mov
imul
pop
mov
mov
push
sub
test
pop
jp
xchg
jb
test
test
es
jecxz
cld
stos
loopne
cmpsl
push
pop
and
add
xchg
jb
mov
movsl
push
sub
repz
push
mov
bound
push
ret
mov
and
push
inc
xchg
loopne
jb
dec
sahf
push
test
cmp
loop
xor
iret
jecxz
sarl
mov
outsb
adc
lods
repnz
fucomip
popa
jl
in
xchg
mov
inc
mov
aam
daa
add
pop
sub
faddl
mov
sahf
dec
outsb
mov
dec
scas
xchg
jmp
scas
clc
sub
das
and
in
nop
outsb
dec
repz
ds
fstpt
xchg
ja
push
pushf
pop
lret
lods
orb
nop
mov
fsubrl
pop
lret
jle
or
or
mov
mov
inc
int3
pusha
in
mov
enter
xchg
mov
mov
aam
push
adc
inc
mov
in
add
js
int
xor
cmpsl
lahf
mov
pop
push
push
sbb
in
incb
outsl
test
lret
jmp
mov
fcmovnbe
daa
mov
pusha
add
lcall
outsl
into
or
fmuls
mov
inc
aas
cmp
cmp
or
out
add
inc
fistpll
dec
outsl
push
lret
and
jo
sbb
push
cmp
jae
cmpsl
movsb
push
shl
and
push
aad
popf
fsubp
xchg
ret
inc
ljmp
mov
jnp
loop
xchg
popf
nop
fs
jp
test
push
in
xchg
orl
add
sbb
inc
movsb
xor
fistps
cmc
test
xor
xchg
shll
and
in
aam
out
rcr
mov
push
and
mov
push
sub
ss
nop
rcrb
xchg
ljmp
loopne
ret
and
lods
lock
xchg
dec
dec
push
and
aas
push
sbbb
mov
pop
popf
cmpsl
adc
fcomi
jno
test
clc
pop
stos
into
pop
sub
ss
movb
inc
sub
flds
add
mov
je
xchg
pop
sub
inc
jg
push
xor
nop
ja
add
inc
and
adc
pop
mov
nop
adc
aas
sbb
pop
cltd
rcrb
hlt
mov
sahf
sub
sub
fs
fucomi
add
pop
rcr
aad
xor
pop
jp
clc
adc
pop
sbbl
sahf
jg
ret
and
orb
scas
dec
adc
not
sbb
xor
xor
or
out
and
inc
repz
sbb
lcall
inc
cli
adc
xchg
je
sbbl
sub
push
mov
mov
imul
in
aaa
jbe
cmp
adc
inc
fnsave
out
mov
xchg
mov
test
mov
aad
or
loopne
inc
shrb
mov
adc
adc
mov
cmp
js,pn
cmpsl
mov
cld
cmp
add
dec
jecxz
dec
adc
add
or
scas
inc
jge
hlt
fldlg2
roll
push
pop
pop
inc
push
pop
into
js
or
les
fcom
es
jnp
aam
cmp
fldt
ret
nop
dec
cmp
and
lret
insb
or
push
inc
lds
test
fldt
mov
inc
mov
js
add
mov
fs
data16
movsl
fists
xor
sbb
shlb
mov
into
es
cs
shrl
sarl
int
std
dec
pop
nop
sub
jge
jl
jl
xorl
fiadds
popa
pop
fisubrl
mov
repnz
cmc
push
ror
inc
test
add
pop
inc
mov
sarb
mov
fsubr
adc
pop
push
outsb
pop
sub
mov
neg
stos
jl
inc
xor
xlat
sbb
mov
pop
jo
lahf
pop
ja
push
shll
pop
scas
loopne
movsb
sbb
jle
aas
negl
push
push
inc
or
iret
lods
repnz
push
cmp
outsl
jno
cmp
inc
add
gs
add
inc
sub
out
idivl
int
xchg
fsubl
push
jne
rcrl
cli
mov
je
into
int
mov
sarl
pop
cmp
jns
push
mov
aad
and
or
push
mov
sub
inc
fs
mov
not
mov
xchg
push
imul
leave
jmp
xchg
inc
pop
orb
push
push
data16
scas
xor
push
jne
inc
insb
jb
push
add
pusha
lea
xorl
in
mov
jae
inc
pushf
shl
inc
addr16
jae
sub
or
adc
jnp
lahf
mov
enter
test
mov
lret
in
andl
sbbl
and
push
push
xor
out
push
inc
fldt
xor
int3
sub
pushf
pop
inc
int
inc
xchg
lods
cmp
add
repnz
addl
or
in
inc
in
pop
call
scas
add
push
cwtl
adc
adc
sub
outsb
add
jle
loope
shrl
test
and
out
inc
dec
repnz
mov
mov
jo
iret
loope
mov
dec
in
sub
das
stc
cmp
lods
mov
and
cmp
pop
mov
add
xor
cli
sub
das
js
fnstenv
aaa
daa
jae
lahf
es
pop
mov
cmpsb
movsb
jb
scas
insl
push
aaa
xor
je
int3
inc
mov
xchg
hlt
sarl
paddsw
mov
fdivrl
cli
mov
mov
ds
push
push
or
ja
and
and
sbb
cs
adc
orb
jae
out
bound
fs
push
xchg
mov
shll
and
mov
jp
pop
jle
cmp
scas
rol
into
in
repz
fwait
mov
shrb
xchg
cmp
ror
movsl
movq
xor
pop
cmp
sbb
inc
pop
xchg
test
jle
rol
pop
ds
sbb
fsubp
sub
mov
aam
pop
mov
dec
xor
adc
pop
push
sbb
sub
sub
es
lahf
xlat
inc
outsl
lahf
mov
xchg
fmul
insb
loope
sub
pop
cmp
stos
mov
aad
lods
daa
in
insb
jg
hlt
outsb
je
sub
aam
aam
jp
jmp
mov
mov
or
dec
push
fcoms
jbe
cmp
popf
leave
sarl
push
mov
pop
pop
ljmp
arpl
xor
lds
adc
pop
cltd
fadd
rolb
xchg
sub
and
out
or
lock
add
ret
dec
inc
push
mov
jmp
imul
das
jbe
mov
or
icebp
and
sbb
add
jne
adc
push
add
sub
popf
insl
sub
lds
test
add
push
mov
sub
cmp
mov
stc
xchg
lods
cltd
adc
cmp
xchg
scas
and
fsubp
in
inc
adc
xor
mov
mov
sub
repnz
enter
fsubrl
js
and
cmp
stos
inc
ja
add
sbb
popa
fdiv
sub
push
aam
jl
fimuls
sbbb
es
sbb
adc
push
loopne
fistps
push
or
sti
orl
jno
movsb
fsub
lcall
std
shll
int3
hlt
movsl
mov
movsb
xchg
cwtl
add
arpl
arpl
inc
adcb
adc
es
mov
add
pusha
mov
lcall
sbb
mov
call
jl
mov
pop
out
xor
dec
je
add
in
lods
rclb
pop
bound
test
lahf
iret
and
cltd
fidivl
andl
fisubl
scas
cmp
nop
imul
jp
pop
or
shrb
mov
repnz
sar
cmc
int3
inc
sbb
pop
lods
in
push
insl
sti
ljmp
dec
xor
fnstcw
mov
scas
enter
cli
mov
xchg
lahf
mov
out
decb
mov
and
movsb
jp
xchg
lret
push
pop
adc
cmpsb
popa
jp
xchg
dec
fnsave
aaa
loopne,pt
cwtl
pop
cmp
cld
xchg
mov
fcomi
dec
insl
cmp
jnp
das
leave
mov
sbb
fcmovbe
cli
sbbl
mov
inc
jmp
inc
fidivs
inc
add
fisttpl
dec
loopne
insl
cli
mov
data16
or
rorl
add
adc
jno
movsb
arpl
repz
aad
jecxz
lds
sub
fildl
dec
insb
sbb
mov
repz
adc
cld
pop
dec
push
clc
cmp
and
sub
das
lret
push
adc
and
arpl
cwtl
adc
ja
xor
clc
lcall
lods
in
mov
les
testb
jae
inc
movsl
xchg
notl
sbb
xchg
cmc
cmp
xchg
add
sbb
ffreep
mov
dec
test
cmpsb
inc
pop
sbb
mov
aaa
movsb
sub
popf
push
scas
daa
jmp
cmp
jns
mov
mov
jl
insb
leave
sbb
push
xor
push
sub
rorl
add
pop
jae
lods
mov
and
shr
cs
scas
aad
pushf
icebp
int
stos
xchg
sub
std
jp
test
adc
pop
jbe
enter
jecxz
pop
xor
jbe
mov
mov
fnstcw
lods
mov
out
inc
test
fists
sub
mov
out
add
aad
sub
repz
incb
mov
outsl
test
cli
mov
in
mov
jnp
rcr
pop
cmp
mov
adc
scas
cmp
aaa
cltd
faddl
push
arpl
fsts
mov
mov
lock
or
pop
out
dec
es
jne
pop
inc
ljmp
icebp
mov
lret
mov
ss
xor
pop
and
fs
subb
mov
das
sub
inc
icebp
cltd
mov
mov
repnz
and
rorb
dec
mov
pop
test
das
push
mov
cmp
sahf
push
aam
test
dec
ret
cltd
ljmp
out
jp
sahf
mov
mov
test
shll
and
jbe
jmp
mov
sahf
mov
inc
mov
push
jp
fwait
pop
loope
fcmovb
sbb
lds
xor
or
gs
cld
movsl
adc
pusha
divb
sahf
xor
and
adc
cmp
add
pop
into
enter
popa
mov
mov
ret
ret
aam
jl
cmp
loop
popf
or
rcrl
daa
and
das
sar
xor
mov
adc
and
mov
sbb
or
cmpsb
push
xor
icebp
mov
or
mov
or
clc
add
cmp
ja
push
mov
dec
and
popf
mov
mov
sub
nop
mov
sbb
sbb
sbb
inc
push
clc
repz
loope,pn
sbb
sub
mov
aam
pusha
pushf
shlb
inc
pop
js
int3
pop
fcomps
data16
jge
fs
enter
fmuls
ds
repnz
xor
in
sbb
cmpsl
inc
pop
pushf
cmp
outsl
aas
rcrb
or
ss
jo
scas
mov
sbb
mov
cwtl
dec
dec
adc
fcoml
adc
pop
or
loop
sti
bound
fdivrs
xchg
fcmovbe
lahf
lret
jnp
mov
inc
push
pop
arpl
aam
nop
add
sub
and
shrb
pop
and
aam
mov
adc
jo
std
adc
adcb
popa
daa
scas
cmp
test
mov
xor
hlt
loope
push
pop
push
int
xchg
xor
lods
cli
jnp
ffreep
leave
xor
in
outsb
and
jo
jge
popa
push
sti
jbe
dec
jecxz
add
and
pop
mov
bndstx
xlat
or
inc
cld
adc
mov
enter
in
fbld
xchg
pop
ds
pop
mov
dec
jnp
and
aaa
outsb
mov
mov
or
icebp
mov
aas
mov
cmpsl
bound
in
mov
mov
mov
push
idivl
push
sahf
cwtl
mov
jbe
jns
sarl
jge
xchg
jmp
out
rcrl
test
das
fimuls
inc
and
js
sub
stc
jne
fwait
ss
mov
xor
jo
and
lock
jb
leave
test
cmp
xchg
sti
das
push
add
xchg
or
lcall
jnp
push
or
xor
inc
or
sbb
inc
cld
jno
sub
cmpsl
pop
repnz
insb
cmp
xlat
das
sbb
ljmp
xor
or
mov
lock
xlat
inc
lea
sub
jp
push
lret
xchg
jo
dec
fists
lea
inc
insl
lret
ret
sbb
shrb
shlb
dec
enter
cwtl
push
mov
cld
adc
out
fidivrl
lahf
sub
and
psubsb
xor
loope
jp
cld
or
iret
adc
stos
push
or
pop
dec
add
mov
js
sahf
jnp
or
arpl
ret
adc
jae
fs
stos
clc
fs
stos
andb
rcrb
fs
mov
xchg
call
fs
adc
hlt
xchg
sahf
lret
inc
test
arpl
mulb
icebp
rolb
fs
xchg
sahf
divl
lods
out
and
daa
xchg
rcrb
test
push
out
mov
call
xchg
incl
or
push
add
adc
jne
sub
jb
into
mov
adc
adc
shrb
mov
push
pop
scas
and
mov
add
stos
inc
in
mov
sub
adc
pop
mov
xor
xchg
out
mov
inc
mov
cli
jo
cmp
jl
push
fwait
clc
es
jle
aam
ret
fmull
add
inc
pop
leave
jge
sub
and
push
test
xchg
mov
ret
loopne
add
push
and
adc
pushf
aad
fiadds
xchg
add
xchg
jp
sub
int
fcmovne
jns
pcmpeqw
pop
fmuls
xor
inc
sbb
mov
and
and
mov
pushf
jp
aam
stos
fsubrl
adc
mov
lcall
ret
jge
jns
daa
sbb
les
sti
insl
fcoml
mov
testl
jno
notl
out
sub
insb
xchg
or
jb
adc
jae
shlb
inc
jns
clc
adc
xchg
clc
adc
cmp
cmpsl
cli
adc
in
inc
fsub
mov
xchg
outsb
pop
cmc
outsl
xor
push
daa
adc
and
dec
movsl
outsb
add
andb
and
aaa
out
pop
inc
int3
cwtl
aam
pop
inc
push
mov
fcomps
lret
add
pop
addr16
movsl
dec
std
mov
pop
test
loopne
pop
jl
movsl
loop
lcall
or
fcomp
sub
test
push
test
lahf
lods
out
mov
rclb
movsl
mov
xor
rcrb
mov
pushf
lods
mov
xor
push
pop
push
hlt
mov
and
lcall
inc
sbb
fisubl
and
jae
or
lahf
xor
or
lds
out
and
sub
fiadds
jo
inc
xchg
outsl
sti
sbb
aaa
leave
ss
cmp
dec
sbb
stos
mov
xchg
mov
repz
inc
lds
xor
jle
cmp
iret
cmp
aas
call
movsb
movsb
stos
mov
push
out
jp
repnz
in
ret
sub
faddp
cmp
mov
je
push
xlat
hlt
mov
mov
or
add
xor
push
sub
mov
jmp
dec
cmpsb
or
cli
push
jno
outsb
out
and
pop
mov
out
sbb
das
mov
inc
hlt
sahf
sbb
adc
pop
cmpsl
sbbl
popf
lret
dec
orl
lock
sub
fcomp
stos
and
dec
push
push
pop
test
sahf
pop
pop
or
cli
cmp
cmp
lret
pop
scas
xchg
mov
xor
xchg
fcmovnbe
or
stc
idivl
push
inc
sub
fldl
sahf
fsts
cmp
iret
out
clc
leave
sub
fstp
in
sub
jp
divb
shll
pop
loopne
dec
inc
adc
bound
mov
xor
or
xchg
ja
loope
inc
add
mov
mov
outsb
or
test
adc
cltd
popf
lret
mov
dec
cmp
and
fmuls
pop
ss
adc
jb
mov
shl
clc
imul
jbe
std
je
mov
lods
repnz
ljmp
cmpsl
lret
xor
pop
ret
je
dec
movsb
aad
inc
fisttps
add
les
add
mov
add
es
sub
stc
dec
mov
add
jae
xor
addr16
mov
push
xor
call
shll
pop
dec
pop
jl
pop
sbb
retw
pushf
or
or
mov
pop
jmp
lret
in
jmp
xchg
pop
fstpl
cwtl
loopne
cmp
jnp
call
loopne
inc
pop
mov
arpl
ret
lock
adc
and
test
push
lock
sahf
enter
into
int3
mov
filds
sub
xor
int3
push
mov
test
ret
stc
mov
add
test
lods
and
jne
out
lret
loopew
loop
loopne
test
and
and
lds
push
jb
movsb
pushf
push
hlt
cld
sahf
add
pop
cs
out
negb
in
push
les
push
adc
sub
sahf
xlat
js
pop
sahf
scas
lcall
mov
mov
add
or
pop
enter
je
xor
mov
pop
fmull
push
pop
lahf
mov
hlt
pop
js
mov
sub
jne
mov
push
cmp
jno
or
clc
xor
pop
ret
inc
stos
sub
mov
xchg
xor
clc
cmc
int3
lock
and
push
mov
gs
and
mov
fmulp
out
shlb
jno
pop
ss
sub
rcrb
movsb
lock
movsl
push
cmp
mov
repnz
sub
xchg
popf
sahf
ljmp
negb
mov
sbb
jecxz
icebp
aam
push
lret
jmp
push
test
pop
xor
pop
or
xchg
pop
push
lea
adc
inc
cltd
jb
addr16
movsl
inc
test
ja
and
incb
mov
enter
shrb
xor
xlat
pushf
negl
into
xchg
push
in
adc
repz
popf
pop
repz
inc
test
xchg
jns
mov
aad
jno
or
loopne
sbb
mov
aad
shll
and
xor
xchg
popf
or
mov
or
test
fidivrs
lea
pushf
out
test
mov
je
adc
pop
stos
and
ja
jnp
jne
pop
pop
sub
pop
out
adc
push
or
repz
rolb
push
push
mull
daa
inc
insl
cwtl
lcall
and
adc
pop
inc
test
cltd
imul
push
lret
fmuls
das
and
rclb
rclb
cmc
ss
inc
mov
push
lods
xor
cli
xchg
pusha
arpl
mov
inc
daa
cmp
jbe
jno
pop
xchg
inc
and
mov
pusha
and
mov
inc
add
mov
mov
pop
adc
and
adc
inc
aas
xlat
mov
aas
mov
and
test
js
mov
jg
or
xchg
aad
stos
lahf
cmpsb
add
and
jecxz
fldcw
or
and
push
xor
xlat
sbb
dec
xor
loop
mov
fdivs
cwtl
jno
arpl
lock
outsl
and
hlt
add
cld
sbb
jle
inc
jecxz
subl
adc
push
ja
cmc
xor
ret
push
sbb
jecxz
loop
movsb
add
in
insl
mov
and
fadds
pop
inc
xlat
outsl
inc
mov
push
out
adc
inc
shrl
les
cmp
addr16
cmpsl
lock
mov
inc
mov
push
adc
test
mov
and
sbb
jbe
dec
and
ds
xchg
xor
repz
cmp
loop
jnp
aad
cwtl
pop
mov
pushl
lods
popa
out
ss
mov
jle
adc
dec
xchg
ss
hlt
mov
push
lds
cmpsb
nop
jle
cmp
leave
sub
cmpsl
scas
mov
fs
jle
loope
or
inc
arpl
inc
xor
push
lret
pop
nop
push
sub
add
dec
nop
mov
incl
add
xor
mov
shrl
sbb
inc
jmp
addl
xor
push
fildll
data16
adc
test
dec
sti
iret
addr16
fistps
cmc
aas
aaa
sub
xchg
test
and
scas
ficoml
adc
cmc
daa
adc
sbb
cmpsl
add
out
test
jbe
fcompl
inc
mov
rorb
xchg
push
fwait
sbb
addr16
mov
loop
shlb
dec
subl
movb
push
loop
jo
mov
dec
or
ret
mov
bound
jno
adc
sbb
in
mov
in
jge
jecxz
xchg
and
sub
push
ja
bound
test
adc
pop
mov
hlt
movsl
cmp
sar
inc
sub
pop
shlb
je
leave
stc
sti
mov
cmc
sti
lret
pop
je
jecxz
imul
addb
dec
mov
mulb
adc
test
repnz
lret
fcoms
and
xchg
mov
sub
cltd
mov
sub
mov
mov
push
jl
addb
pop
push
enter
xor
test
jne
push
xor
cmp
movsl
shll
or
neg
mov
jmp
stos
cltd
jp
test
push
ljmp
test
test
mov
test
les
aaa
in
fstl
mov
mov
lret
movsl
lds
push
pop
ret
nop
lret
movsl
mov
mov
out
cmpb
mov
push
jb
mov
mov
int3
and
cs
js
pop
mov
inc
add
mov
xor
mov
pop
or
cltd
pop
xor
scas
adc
inc
mov
adc
stos
jl
jo
push
pop
cmp
or
sti
lret
mov
mov
sahf
sub
inc
or
je
movsl
lret
data16
xor
into
stc
outsl
shlb
movsb
mov
cltd
xor
xchg
ret
sti
aam
test
inc
enter
mov
push
push
sub
mov
and
scas
or
jae
and
movlhps
adc
sbb
mulb
pop
outsl
imul
inc
aam
ss
jb
out
push
sub
sarl
cli
imul
sub
add
jno
cmp
sbb
in
stos
lret
fs
lret
addr16
and
xor
insb
pusha
and
fwait
movsl
lret
lods
dec
call
movsb
xor
cwtl
xor
jp
scas
fldcw
mov
lods
push
jge
ret
scas
fbld
negb
cmc
xlat
std
push
std
sub
test
daa
jns
std
dec
dec
cmp
cmp
nop
cmpsb
sbb
test
sbb
sub
adc
and
mov
mov
xor
xchg
ljmp
cmpsl
fdivs
lock
in
movsl
cmp
fistl
out
add
arpl
push
mov
xchg
addr16
out
xorb
loope
push
jl
ret
mov
push
xchg
lea
mov
scas
pop
imull
add
sub
xchg
mov
jne
xor
fbstp
and
outsl
cwtl
adc
fidivrl
push
cwtl
cmp
add
aam
fiaddl
stc
or
fwait
mov
ret
jmp
sarb
sarb
and
addl
test
sub
pop
aam
test
xor
sti
pop
test
lods
popa
mov
aam
std
fsts
sub
mov
pop
sub
ljmp
mov
adc
cmpsl
xchg
nop
cwtl
fimuls
jp
scas
lret
loop
cld
add
xorb
rorl
pop
loope
fucom
adc
dec
sarl
push
add
jl
mov
aam
dec
aaa
ficoml
mov
sbb
into
xlat
pop
mov
inc
hlt
fimull
mov
push
jl
outsl
imul
repz
sbb
push
jg
fisubrs
mov
pop
mov
dec
xor
movsb
ja
adc
jmp
xor
push
xchg
inc
xchg
xchg
daa
gs
inc
push
mov
adc
cmpsb
out
sub
inc
mov
lret
jp
bound
scas
ljmp
movsl
mov
iret
sub
jl
lock
adc
clc
mov
or
pop
daa
lahf
and
mov
jmp
popf
cmp
add
fs
hlt
shld
sub
pop
pop
ret
dec
xor
ror
fmuls
in
jge
test
sti
pop
and
inc
lods
mov
pop
mov
les
mov
push
subw
xchg
adc
cmp
mov
jmp
mov
push
mov
inc
pop
sbb
and
imul
les
push
inc
mov
lods
inc
cmp
cmpl
jb
inc
loope
adc
mov
mov
mov
inc
lock
jbe
ror
xchg
mov
fimull
outsl
push
mov
or
inc
xchg
jl
ret
mov
mov
inc
out
into
fwait
stos
mov
xlat
lods
push
sbb
aad
mov
push
test
lcall
int
dec
mov
movsb
and
cmc
and
inc
jl
pop
inc
shll
mulb
sbbb
loope
popf
jae
aas
pop
jge
aaa
inc
mov
js
mov
nop
inc
cmp
stos
and
es
push
xchg
xor
js
lods
mov
cmc
push
dec
icebp
pushf
xchg
jbe
hlt
jns
sub
sub
push
lret
fidivl
repnz
sbb
mov
outsb
aad
mov
fisubrs
fwait
or
adc
xlat
outsb
push
or
lods
aam
jp
xchg
mov
cmpsb
sbb
cmp
pusha
inc
mov
negb
ljmp
cmp
mov
mov
mov
xlat
mov
dec
dec
and
push
xchg
fstp
sub
mov
int3
push
xor
call
xlat
push
out
jae
dec
out
idivb
dec
negb
sub
adc
pop
aam
or
loope
outsl
xchg
arpl
and
jno
faddl
mov
fs
dec
movsl
pop
inc
dec
addr16
icebp
adc
pop
jnp
adc
neg
push
mov
repnz
xor
mov
jl
inc
es
xor
out
pop
test
dec
push
clc
outsl
cltd
fs
je
les
cmpsb
imul
cld
or
test
xor
pop
hlt
loope
ficoml
ljmp
push
or
sub
rolb
inc
lahf
or
and
jp
and
jne
add
shlb
in
addr16
mov
mov
scas
or
sub
inc
cltd
mov
cmp
jb
cmpsb
movsl
dec
clc
daa
and
sub
ja
out
stc
lock
jbe
adc
sbb
xchg
scas
lret
jbe
sub
adcb
inc
push
jb
in
lahf
leave
push
xchg
cltd
repnz
mov
test
popf
jnp
repz
arpl
iret
dec
jae
push
push
mov
push
push
fcmovu
pop
sti
loopne
nop
push
sbb
add
mov
jbe
xor
lods
sub
cs
sbb
popf
and
movsl
nop
sbb
or
bound
pop
jg
mov
pop
fstp
jnp
sub
and
pop
mov
push
cmp
xor
push
sti
pop
nop
stos
jae
push
sub
dec
insl
lods
xchg
out
fisubl
mov
insl
sub
cmpsl
cmc
sbb
and
in
xchg
pop
xchg
dec
fistps
cmpsl
mov
adc
das
rol
not
rcrb
inc
jl
sbb
dec
fldcw
mov
mov
fcomi
pusha
add
adc
cmp
push
fwait
xor
xor
mov
xchg
shll
xor
ljmp
jecxz
adc
out
add
cmp
lods
add
jge
cmc
insb
lfs
stos
loope
andb
jp
data16
cmp
inc
cli
mov
mov
stos
decl
mov
stos
xor
mov
adc
lds
xor
loop
std
push
loopne
addr16
inc
les
xchg
mov
shl
jmp
clc
ficoml
les
sbb
ror
mov
ja
loop
rcl
leave
mov
lahf
adc
int
lds
and
sahf
mov
cmp
xchg
lret
adc
inc
andl
popa
rcl
jmp
inc
loope,pt
sub
xchg
xor
dec
into
sbb
jge
inc
sahf
xor
aaa
sub
and
stos
inc
and
inc
mov
cli
ret
pop
jbe
js
bound
mov
mov
rcr
push
addr16
sub
stos
adcl
or
lods
xor
and
fists
in
mov
xchg
sti
push
pop
inc
fucomip
push
fidivl
jnp
mov
xor
pop
mov
ja
adc
xchg
out
sub
ret
insb
xchg
jae
cmpsl
pusha
pop
insl
lcall
inc
cmp
fadds
add
add
ficoml
push
adc
inc
movsl
test
loop
inc
mov
mov
int3
jae
cld
gs
test
pushf
fwait
xor
out
jg
jge
sbb
mov
pop
lret
leave
mov
iret
sub
fstl
aam
jmp
insl
push
sub
pop
pop
inc
loop
push
sahf
and
mov
mov
inc
mov
jns
sbb
sub
push
xorl
movsb
mov
popf
mov
ror
jne
lods
and
daa
jge
push
inc
fidivrs
add
mov
xor
pop
ss
imul
pop
xchg
inc
lahf
jae
aam
outsb
xchg
repnz
xchg
ds
jbe
pop
mov
mov
or
and
out
fldlg2
cmp
mov
lcall
int
jmp
cld
pop
bound
out
lahf
xlat
push
xlat
or
daa
data16
xlat
in
mov
cmp
and
mov
jg
sar
push
ficompl
pop
or
cli
or
sub
pop
lahf
iret
popf
dec
jno
xchg
and
addb
xchg
inc
out
je
pop
gs
rcr
mov
cli
lods
sub
jbe
jg
fistl
movsb
mov
xchg
jne
hlt
repnz
outsb
mov
outsl
dec
cmp
mov
mov
into
push
adc
sbb
add
insb
inc
inc
mov
out
lahf
mov
or
mov
or
mov
jl
inc
push
sub
jnp
sub
enter
jp
push
cli
and
rclb
push
aas
adc
or
repz
push
xor
inc
popa
scas
xchg
xlat
jbe
adc
pop
jmp
fidivl
xor
repz
ljmp
mov
mov
sub
pop
jo
fs
and
jg
shrb
jae
and
inc
jae
add
mov
loope
out
daa
jecxz
mov
scas
xchg
pushf
add
dec
imul
xorl
jbe
fcmovbe
cli
sub
mov
fisttpll
mov
jno
cmc
bndstx
int
mov
lret
addl
mov
pushf
sbb
ret
xorb
loopne
sbb
mov
rcrl
ret
inc
ljmp
sbb
inc
cwtl
xchg
arpl
subb
jno
movsl
dec
inc
mov
dec
pop
repz
cli
mov
mov
pusha
aas
mov
mov
data16
mov
mov
fs
incl
or
dec
jg
jnp
aaa
dec
addb
int3
push
es
sub
and
ljmp
mov
std
push
cmp
mov
scas
add
dec
std
cmp
add
nop
addr16
adc
adc
outsl
loope
adc
pop
inc
loope
sub
mov
or
adc
in
inc
sbb
adc
nop
in
imul
aas
push
jo
jle
xchg
ds
and
ja
loop
loope
cld
in
dec
mov
mov
aas
stos
in
cmpsl
call
rol
inc
xchg
movsl
shlb
jbe
or
iret
and
inc
sub
enter
notl
shlb
insl
adc
test
rorl
out
or
fimull
sub
lret
rcl
and
jbe
jb
sbb
and
cmp
adc
nop
cli
cmp
xchg
and
in
aaa
popa
das
jno
call
cmpsb
jae
fcmovbe
xor
push
mov
inc
je
push
mov
pushw
or
mov
xchg
xor
pop
fistpll
sti
ljmp
adc
inc
sbb
jne
hlt
andb
cli
and
adc
fbstp
call
lret
aas
arpl
jbe
push
mov
cmpsl
inc
sub
jb
call
inc
jae
cmp
movsl
les
mov
into
push
add
scas
xchg
nop
repnz
lea
outsl
mov
fisubl
dec
xor
outsb
and
call
adc
cmc
mov
fisttps
jno
in
out
adcl
ret
lds
xchg
sub
lds
sarb
pop
dec
and
ficomps
leave
inc
push
mov
or
sub
mov
sarl
jbe
cmc
mov
sysenter
and
ret
cmp
xchg
mov
ret
call
sub
sarl
dec
loop
pop
aam
xor
ficomps
inc
enter
aad
cmp
adc
insb
jl
sbbl
js
lahf
or
iret
and
xchg
fdivrs
mov
push
aaa
clc
or
add
mov
pop
neg
xchg
fmuls
inc
jp
mov
push
jg
loope
mov
pop
mov
mov
int
or
add
shlb
iret
incl
jp
shll
pop
sbb
cmpsb
inc
jmp
mov
mov
sahf
pop
cmp
mov
fstp
shlb
inc
sub
jmp
stc
mov
push
into
adc
nop
int3
fnstenv
mov
dec
test
sub
popf
dec
mov
dec
mov
std
sub
dec
sbb
fstl
cwtl
fisubl
push
jns
maxps
sub
cltd
and
shlb
fildll
xlat
cli
add
xchg
inc
xor
push
daa
pushf
mov
dec
lret
mov
and
pop
aam
cmp
mov
mov
fyl2x
or
in
in
lret
pop
xchg
jae
and
fcmovb
xor
testb
dec
sub
jmp
mov
loope
jge
mov
inc
into
insb
add
jns
pop
or
jae
ss
adc
push
and
daa
jns
les
xchg
mov
and
lock
push
pusha
out
loopne
shlb
add
mov
or
jns
sbb
and
lret
fs
push
fdivs
test
jl
and
xchg
mov
pusha
push
fisttpl
push
lahf
fwait
out
pushf
or
lods
movsb
or
sub
js
pop
lret
out
shll
loope
insl
add
xchg
push
sub
repnz
negb
mov
cmp
icebp
lods
hlt
fbstp
mov
add
rcrl
dec
xchg
pop
or
das
lcall
addl
cmpsl
inc
sub
out
mov
repnz
cmpsb
in
mov
mov
sub
loop
hlt
mov
leave
les
stos
addr16
mov
and
inc
adc
movsb
shlb
cmp
mov
lods
mov
psadbw
pop
jb
mov
incb
pop
addr16
xor
je
test
inc
dec
sarl
add
in
incb
mov
jmp
hlt
stos
icebp
es
jmp
xchg
aaa
fwait
adc
jmp
sbb
inc
pop
jl
lds
ret
add
and
mov
stos
les
sub
fistpl
sbb
cmp
fmull
int3
test
sahf
sbb
stos
push
ffreep
or
jmp
lret
lret
inc
stos
mov
cmp
xchg
test
xor
jmp
loop
pop
xchg
cmp
mov
daa
cmp
and
enter
push
lea
les
js
sbb
sub
and
pop
add
adc
ljmp
ret
sarb
mov
sbb
jle
sbbb
push
jo
pop
test
add
mov
pop
fs
xlat
and
jo
loop
xor
cmp
xor
cmp
test
push
cld
cli
sbb
lods
adc
push
sbb
jmp
push
in
jge
lock
lock
call
movsl
shlb
add
cmc
repnz
fldl
lods
sub
test
lcall
out
pop
push
mov
lods
pop
jo
sub
sahf
scas
es
out
or
in
rcrb
mov
lret
jb
ds
jb
pushf
pop
xor
push
mov
jge
and
imul
and
sbb
push
or
xchg
mov
js
movsb
insb
mov
mov
pusha
int
mov
mov
push
cmp
lods
and
test
shr
adc
cmp
iret
push
aas
das
xor
mov
or
rcll
popf
xchg
arpl
fstps
and
mov
or
pop
sub
push
mov
mov
ljmp
rcr
les
pop
pop
rcrl
iret
mov
jge
lods
lds
repz
xor
loop
adc
push
data16
call
test
lahf
cmp
inc
dec
push
movsl
sub
sahf
repz
mov
push
xor
inc
pop
xor
aaa
pusha
roll
push
xor
xchg
and
push
pop
sbb
pop
das
mov
mov
xchg
xlat
rcr
aas
lock
stos
xchg
adc
test
dec
pop
adc
add
and
mov
mov
out
cwtl
std
test
jnp
dec
ret
inc
rcl
mov
in
jl
lods
scas
sbb
sbb
xchg
sbb
fimull
mov
das
aaa
rcl
aaa
in
xor
xchg
ror
jo
shrb
sbb
in
mov
cmc
decb
stos
rcrl
sub
and
cwtl
mov
sti
iret
or
xchg
stc
aam
inc
inc
loopne
js
in
jae
lret
mov
repnz
mov
mov
push
pusha
or
mov
in
mov
loope
scas
int
and
jg
pop
orl
stos
and
cmp
std
dec
and
iret
sub
lds
pusha
cmpb
repnz
rcr
push
out
fstps
lods
insb
mov
pushf
fsubs
movsl
sub
shlb
push
dec
lahf
pop
xchg
or
das
pop
adc
fldt
mov
mov
cld
sbb
mov
push
into
dec
sub
cmp
xchg
mov
inc
mov
nop
enter
jle
jnp
xchg
adc
js
jno
xor
inc
fcoms
fistpll
xor
adc
pushf
adc
inc
pop
leave
xor
lret
fnsave
inc
mov
lods
fcom
push
adc
subl
jb
xchg
pop
std
loope
cmp
les
or
mov
xor
loope
pop
in
sbb
push
pop
mov
inc
dec
adc
dec
lret
std
mov
push
sub
inc
int3
jb
jg
pop
mov
and
rcrb
jp
or
and
nop
dec
xchg
adc
roll
or
jl
fnstsw
fs
mov
addr16
push
test
rep
mov
mov
test
repz
imul
cld
and
ret
pushf
push
xlat
pop
and
or
popa
cmp
jp
xor
nop
jle
aaa
test
xor
ret
jg
jl
divb
jno
lcall
push
subl
cmp
sbb
ret
jae
adc
out
jmp
push
dec
jl
or
mov
bound
sbb
xor
push
fisubl
test
add
add
xlat
cmovg
dec
fbld
mov
lret
inc
mov
xchg
jp
sbb
out
ja
xchg
push
inc
mov
and
clc
push
mov
stc
push
outsl
push
inc
dec
insl
filds
mov
mov
movsb
pop
and
imul
inc
nop
jae
xchg
xor
orb
call
mov
push
xor
xor
das
cmp
sbb
rcr
mov
pop
dec
jno
fidivs
inc
mov
cmp
cmc
stos
pop
and
pop
repnz
jo
pop
mov
cmp
inc
aad
add
lahf
mov
movsl
fsts
cmp
bound
aam
and
push
push
sub
icebp
sti
xchg
and
movsl
ficoms
inc
lret
cmp
or
enter
add
push
cwtl
sti
mov
jb
jnp
adc
loopne
mov
enter
jae
in
and
stos
fcmove
fsubrl
aas
pop
stos
pop
in
insb
fcmovnb
and
xchg
insb
test
mov
iret
hlt
shll
add
test
mov
sbb
popa
rolb
sub
push
cltd
xchg
jp
nop
cmp
mov
add
inc
cmp
pop
cmp
mov
rolb
aad
lret
jno
push
push
sarl
adc
mov
rorl
cld
jno
iret
push
decl
les
ljmp
mov
inc
adc
add
mov
ljmp
pop
push
ret
clc
test
or
sub
daa
leave
xorb
fdivl
cmp
and
jae
and
mov
lock
adc
lret
xlat
inc
push
cmp
mov
leave
les
faddl
jle
or
loope
jg
mov
movsl
add
cli
js
mov
xor
nop
popa
xchg
addr16
jl
add
shll
sbb
xor
popf
sub
dec
jbe
jp
cwtl
fs
push
and
sbb
aas
xlat
loope
ja
loop
lods
andb
mov
add
dec
addr16
push
daa
rolb
cmc
jp
loop
dec
repnz
out
sub
repnz
mov
push
mov
jae
jecxz
push
cmp
push
sbbb
sub
cmp
fs
fstpl
add
movsb
xchg
add
int3
adc
mov
push
push
jp
xchg
xchg
mov
out
jae
mov
mov
mov
sbb
push
leave
sub
xor
es
cmp
adc
sbb
mov
mov
adc
lcall
or
shlb
mov
int
daa
fucomi
ret
inc
loop
inc
fimuls
loopne
xchg
cmp
ja
test
xor
cbtw
jg
lret
leave
sbb
out
sub
mov
sub
inc
mov
cmp
shrl
inc
mov
in
fisttpl
inc
inc
adc
popf
jp
fldl
xchg
jnp
mov
pop
pop
imul
jno
fwait
out
sub
mov
mov
out
cmpb
insl
dec
cmp
outsb
je
in
je
push
xlat
lcall
jmp
xchg
outsb
fiaddl
cmp
xor
mov
orl
sbb
fwait
addr16
cmp
mov
jbe
xchg
jge
pop
jnp
sti
sub
fsubs
adc
dec
dec
ja
adc
ret
xchg
inc
addr16
cmp
bound
mov
movsb
xchg
mov
xchg
fldenv
nop
inc
dec
mov
cmpsb
cmpsl
jp
ljmp
cwtl
inc
push
xchg
xchg
push
adc
mov
movsb
out
sti
mov
cmp
pop
dec
outsl
mov
cmpsl
inc
mov
insb
cmpsb
arpl
ljmp
movsb
cmpsb
rcr
fidivs
adc
mov
test
js
sub
push
pop
out
cwtl
xor
xor
in
cli
mov
repz
call
fisttpll
xchg
cmp
adc
aad
cmp
sub
mov
mov
mov
push
cwtl
jle
pushf
mov
xor
mov
dec
xor
pop
sub
cmp
sub
loope
adc
dec
xor
dec
sub
xor
jp
cmpsb
sub
xor
cld
mov
push
ljmp
push
cltd
cmp
mov
sti
ret
push
arpl
repz
fptan
int3
pop
bnd
sar
push
stos
jno
push
cwtl
jg
jne
cmc
test
sahf
xchg
and
fisttps
stos
filds
or
inc
int
jne
aaa
inc
adc
lock
fwait
into
or
jnp
sahf
pop
lahf
xor
aam
sahf
adc
ss
stos
mov
jecxz
inc
sub
mov
mov
and
in
dec
scas
into
and
pop
lcall
ret
aam
sbb
sbb
in
pushf
xchg
lcall
inc
mov
ret
stc
mov
in
dec
adc
xlat
test
mov
ret
stc
ja
jmp
mov
xor
pushf
mov
inc
pop
push
add
mov
and
jns
jp
insl
xorb
pop
or
inc
imul
mov
xchg
pop
je
fstpt
test
xchg
lahf
movsb
test
mov
test
sbb
jecxz
into
xorl
jmp
stos
or
lock
jb
push
push
mov
pop
mov
mov
into
lcall
sub
shl
scas
add
leave
inc
or
enter
sbb
xchg
js
mov
xor
jmp
popf
out
push
sahf
pop
push
insl
adc
xchg
sbb
mov
movsbl
sbb
dec
pop
cmp
fisttps
jae
incb
add
shlb
out
pop
jle
mov
pop
jmp
add
out
push
data16
clc
pop
xor
mov
pop
mov
cmp
adc
arpl
jae
sbb
mov
cmp
nop
lea
aam
and
aas
mov
repnz
pop
nop
lods
out
xor
xchg
and
xchg
ret
fnstsw
fwait
adc
ret
pop
xor
lds
pop
xchg
into
and
push
jecxz
dec
mov
pop
ret
xchg
push
dec
gs
jge
outsl
dec
dec
adc
loopne
and
int
pushf
xchg
insl
xchg
push
pop
inc
aaa
sbb
sub
mov
aas
and
lods
ja
adc
mov
in
jle
pop
fsubl
cmp
mov
sub
sbb
and
lahf
dec
push
scas
adc
mov
ficompl
xor
fmuls
in
aas
fstpl
ror
scas
ss
js
fstps
mov
call
adc
cltd
sub
mov
and
and
and
decb
icebp
pusha
jo
xor
push
rcrb
adc
dec
xor
mov
testb
add
xor
pushf
mov
push
and
mov
pop
xchg
cmpsl
and
cmp
mov
in
aaa
dec
repnz
call
mov
mov
push
int
out
mov
pop
sub
dec
in
inc
lahf
enter
xchg
or
cmpsl
mov
arpl
jae
sbb
xor
sbb
cs
test
pop
imul
lcall
xchg
add
sub
jb
cmp
add
dec
pop
push
loope
xchg
ret
sbb
daa
in
or
cld
insb
adc
mov
rorl
jae
stc
push
xchg
xchg
insb
stc
fistpll
inc
shll
pusha
insb
push
enter
pop
and
mov
pop
arpl
in
shlb
arpl
divl
add
stos
jmp
filds
mov
xor
jmp
and
flds
frstor
or
sbb
adc
out
fidivrs
dec
mov
jp
and
and
mov
pusha
jge
lret
inc
mov
lods
or
stos
and
fwait
pop
push
mov
jmp
lock
inc
rcl
js
jp
lret
cmp
je
ret
sub
loopne
pop
das
cmp
mov
ret
mov
or
or
and
repnz
xor
or
mov
in
stos
fists
xor
pop
pop
scas
movsl
test
sbb
out
shr
pop
xor
jnp
loopne
inc
jb
push
outsb
add
imul
mov
fsubrl
call
gs
adc
mov
mov
mov
les
pop
nop
mov
mov
adc
shr
inc
jecxz
mov
repz
mov
in
das
call
jbe
lock
pop
and
out
sub
sahf
and
adc
xor
xor
shrb
adc
ret
cmp
pop
in
jle
inc
scas
add
mov
cmp
sbb
nop
cltd
mov
mov
lcall
sbb
or
cmpb
xlat
sbb
fstps
out
ret
push
push
inc
and
sub
mov
and
dec
and
lods
lret
xchg
jo
pop
jb
ss
ljmp
add
in
popa
xor
enter
pop
iret
or
rclb
call
jno
les
aaa
andb
mov
rcll
test
mov
sbb
fmul
or
lret
pop
pop
mov
mov
lods
pop
loop
cmp
movsb
test
dec
xor
mov
clc
and
aaa
cli
jle
ljmp
mov
insb
out
push
aad
call
outsl
jp
cmpsl
push
sbb
shrb
push
push
sbb
ret
pushf
mov
hlt
xor
loope
fnstenv
aam
and
adc
mov
xchg
add
sbb
test
fbstp
loope
stos
lds
les
pushf
mov
add
xor
out
jmp
fcomip
aam
push
mov
and
repnz
inc
scas
mov
scas
jp
lahf
push
out
pop
aam
jecxz
imul
js
and
iret
hlt
mov
mov
scas
sub
ficompl
jno
and
xor
inc
imul
sahf
adc
cmpsb
les
movsl
push
inc
add
cmp
test
mov
mov
mov
scas
jne
push
stc
mov
sarl
add
jle
or
fstp
repz
lds
mov
and
pop
cmc
bnd
add
aad
push
sbb
lods
rolb
test
loope
loopne
out
stos
jg
jns
and
ljmp
push
stos
movsb
ret
iret
int
mov
pusha
jb
add
or
mov
cmp
hlt
pop
fwait
popa
fstpt
in
orl
gs
and
mov
mov
adc
mov
mull
jns
and
stos
mov
test
icebp
push
cmpsl
sbb
iret
push
cmpsl
xchg
adc
jne
subl
test
xor
mov
ficoml
xchg
mov
insl
mov
fimull
test
ss
imul
fidivrl
sbb
sarl
aam
cmp
roll
xchg
out
pop
mov
xchg
into
stc
inc
outsl
add
sbb
or
mov
testb
mov
shll
or
jmp
sub
out
lea
sub
fwait
outsl
cmpsl
fsubp
mov
and
stos
mov
add
xor
mov
dec
push
out
scas
filds
aam
lcall
mov
pop
dec
adc
jne
fnsave
int3
pop
ljmp
loope
mov
movsb
pop
fisubrs
fsub
lret
mov
jge,pt
push
ret
in
push
dec
jo
lock
xor
movsl
xchg
ret
lcall
jp
push
xchg
mov
mov
pop
shrl
mov
push
sub
std
jmp
leave
adc
gs
je
and
inc
fwait
fwait
lods
or
imul
bound
es
jo
and
ds
add
mov
pushf
andl
mov
jecxz
xchg
pusha
leave
repnz
nop
rorb
js
push
jmp
xchg
inc
leave
xchg
mov
test
ret
loope
loopne
sub
dec
int3
rclb
imul
movsb
loopne
or
mov
imul
call
cmpsb
inc
inc
shl
add
and
and
call
and
fistpll
adc
cld
call
inc
xor
cwtl
jne
sub
mov
inc
and
repz
add
dec
int3
ficomps
xchg
js
ss
lds
lret
mov
inc
pop
jo
jbe
in
stos
pusha
fsub
xchg
mov
lahf
ret
fmuls
cmpsl
ficomps
int3
xor
and
and
call
nop
loopne
out
shlb
xor
jecxz
shlb
leave
jns
lret
and
cmpsb
movsl
jmp
aas
xchg
inc
rcrl
push
insl
cmpl
lea
and
push
pop
test
pop
jge
push
shrl
iret
or
inc
sbb
adc
mov
dec
test
movsl
jp
xchg
mov
rorb
jb
icebp
insb
push
cmp
fsubrl
inc
rolb
aas
xchg
jo
and
mov
xor
and
pop
out
and
stos
js
shll
loop
popf
aas
fistpl
sub
outsl
sbb
xor
pop
rcrb
cmc
adcb
enter
jo
jns
xchg
and
arpl
or
sbb
mov
int3
fsubrl
pop
pop
loopne
out
mov
adc
inc
mov
in
fdivp
stos
adc
push
adc
jg
xor
fwait
into
call
xchg
or
fsubl
push
xchg
jbe
jl
jbe
add
pusha
ds
and
enterw
hlt
mov
lret
int3
lret
mov
mov
pop
mov
lods
sbb
enter
xlat
stos
shll
test
testl
mov
inc
sbb
add
gs
inc
test
clc
or
pop
ss
loopne
inc
sub
das
add
cmp
sahf
xchg
cwtl
adc
test
aam
in
sbb
mov
dec
xchg
loopne
pop
lock
fnstcw
bnd
aad
lods
pop
mov
arpl
lods
mov
jp
sub
xchg
test
sarl
jae
in
fildll
jmp
mov
add
push
loop
xchg
jno
xchg
add
ss
pop
sbb
mov
rcl
leave
loope
sbb
sbb
add
shr
pop
and
mov
xor
adc
pushl
ss
movsb
mov
leave
fiaddl
aad
aas
add
fists
test
cmpsl
mov
pop
adc
or
sub
cmp
hlt
mov
pop
mov
iret
lahf
int
leave
pop
push
push
loope
inc
lock
add
mov
add
imul
callw
fbstp
mov
cmpsb
pusha
push
and
out
jns
test
xchg
mov
jbe
xor
mov
pop
out
outsb
ljmp
or
inc
push
fisttps
hlt
cmpsb
testl
jp
imul
insb
int
or
nop
jnp
cmp
jno
push
pop
sti
mov
inc
mov
mov
mov
rcll
loopne
cmpsl
mov
inc
lods
xor
test
cmp
cmp
mov
dec
jmp
or
andl
loope
mov
jp
mov
ds
in
xlat
mov
sub
addb
xchg
bts
cmpb
aaa
fs
and
mov
aaa
jae
fs
out
mov
add
lock
add
lea
sub
movsl
sub
push
xor
inc
mov
and
push
rorl
jae
mov
and
push
add
andb
fsubrs
decl
and
insb
repnz
xlat
insb
stos
cld
lods
mov
xchg
or
insb
mov
scas
outsl
mov
adc
nop
addr16
shlb
mov
pop
stos
call
and
mov
jmp
xor
dec
pop
ret
stos
pop
jae
adc
xor
mov
aas
sbb
movsb
aam
rclb
add
xor
aas
cld
sbb
push
push
push
data16
inc
xchg
mov
enter
test
xor
lret
lcall
call
adc
scas
inc
xchg
push
pop
movsb
sub
in
lret
sub
cmpsb
in
cs
adc
sub
add
das
adc
shll
xor
mull
cmp
lret
leave
or
lea
add
sbb
das
enter
aaa
nop
cmp
movsb
sbb
xlat
lods
je
stos
imul
sub
mov
xlat
xchg
xor
xor
and
lret
adc
cmpsl
lock
scas
shr
inc
lret
cmp
dec
je
aas
cmpsb
adc
icebp
mov
mov
pop
pop
sahf
add
jo
dec
lods
inc
or
push
hlt
and
pop
in
jecxz
movsl
pusha
jecxz
or
sar
imul
inc
out
divb
cmpsb
hlt
cmp
sub
nop
ret
test
pop
adc
dec
test
loop
pop
push
insb
inc
and
imul
fisttpl
in
out
lret
jo
inc
sub
or
add
idiv
jl
xor
adc
dec
cltd
lcall
jecxz
cmp
hlt
ja
cld
div
shlb
popf
pxor
in
sbb
ljmp
aad
stos
iret
mov
xchg
sbb
mov
fisttps
lods
sbb
mov
xchg
aas
fwait
jbe
enter
test
mov
lret
das
lahf
add
dec
sbb
cwtl
js
mov
cmpsl
mov
jns
aad
pop
pop
mov
xchg
adc
lds
outsb
out
outsb
add
pop
int3
and
cltd
pusha
aas
es
inc
jp
push
pop
mov
add
pop
shl
cmp
mov
aad
cmpsl
cmc
outsl
cmp
push
jl
jns
sbb
clc
ds
pop
rorb
add
mov
mov
pop
or
mov
jo
jp
inc
aas
es
das
dec
adc
sbb
adc
je
sbb
and
mov
or
fisubrs
fldl
push
or
out
outsb
nop
jo
mov
std
lcall
std
insl
mov
es
or
mov
out
xor
std
mov
xchg
or
push
lcall
aam
lods
nop
and
xor
xchg
into
pop
imul
mov
sbb
and
mov
push
sub
mov
or
sbb
adc
movsb
and
push
in
adc
fists
or
dec
cli
int3
movsl
into
sub
xor
lods
inc
jecxz
lahf
jae
gs
xlat
lcall
pop
ss
mov
mov
ljmp
popf
cmp
push
aad
xchg
fnstenv
xor
mov
pop
xor
iret
out
sahf
and
fcomi
cmp
pop
in
movsl
loop
leave
test
fisubs
aas
mov
in
jno
in
cmp
add
xor
xchg
out
scas
ror
rorl
mov
xor
push
pop
adc
loope
jns
jb
aaa
in
and
xchg
fisubrl
cltd
mov
daa
gs
push
xchg
fisubrl
push
les
into
insb
jle
outsl
shlb
mov
and
fwait
jbe
mov
es
adc
xchg
add
jne
jae
loop
or
xchg
cmp
pop
or
fstps
mov
mov
je
xor
mov
push
sti
out
sahf
mov
and
add
js
xchg
clc
sbb
adc
xchg
push
cmp
or
subl
jbe
dec
in
mov
fcompl
add
das
jmp
add
gs
fildll
xor
fiaddl
std
pop
inc
xchg
sbb
push
jl
or
xchg
insl
and
dec
lret
inc
aam
dec
out
pop
stos
out
inc
push
pusha
stos
into
stos
push
push
jmp
jecxz
mov
nop
xchg
in
testb
fildll
mov
mov
rolb
popa
fildll
and
pop
dec
imul
dec
sub
js
ret
cmpb
cmc
clc
push
adc
cmp
sar
push
and
stos
sub
hlt
enter
fists
adc
into
and
stc
ficoms
sbb
push
shrl
mov
jo
pop
mov
cmp
stos
mov
test
lods
cmp
add
cmpsb
les
add
adc
mov
into
rcr
ffreep
sbb
rorl
repz
enter
dec
jecxz
pusha
pop
mov
in
sahf
pop
and
pop
mov
or
cmp
push
sbb
ds
insb
pop
mov
icebp
mov
lret
and
int
andl
mov
hlt
xor
or
or
hlt
pop
in
inc
les
jle
test
sbb
dec
movsb
popf
cs
add
add
xchg
sbb
es
roll
inc
xchg
push
fildl
test
les
js
push
mov
pop
movsb
jo
sti
ds
sub
ljmp
adc
add
aaa
gs
fists
dec
test
in
inc
das
ror
or
add
cmp
out
imul
jecxz
cwtl
push
and
clc
test
mov
into
pop
in
mov
jne
jb
cli
push
or
xchg
pushf
add
push
neg
in
les
lock
xchg
ret
lret
xchg
push
scas
jecxz
mov
stos
scas
mov
cld
loope
dec
iret
out
jae
mov
das
out
aam
cmp
addr16
arpl
rcl
sbb
xlat
mov
in
imul
sahf
inc
icebp
mov
jo
rcl
iret
jbe
fidivrs
pop
jl,pt
in
fstpt
into
lea
andl
loope
popf
insb
cmp
mov
dec
jp
sahf
adc
test
sub
pop
dec
adc
cmpsb
aad
ds
imul
scas
int3
fdivrp
dec
xchg
mov
or
and
je
mul
inc
inc
mov
or
jg
sti
ror
test
out
scas
lret
in
xchg
cmc
and
sbb
adc
lods
push
cli
stc
stos
je
test
sub
xchg
push
rorl
jbe
and
stos
scas
push
inc
xor
dec
xchg
cmc
test
lahf
mov
repz
dec
jno
push
aam
lcall
mov
rolb
cmp
inc
xorl
mov
rcrl
stos
jne
enter
dec
fdivr
enter
lret
sub
enter
xor
cmpsl
lock
inc
icebp
scas
inc
dec
dec
pop
mov
filds
lahf
data16
sub
push
inc
mov
fdivrl
repz
mov
lock
pop
or
outsl
sub
add
jne
shl
pop
test
xchg
cmp
lret
dec
xor
jo
xlat
fwait
cmpb
mov
xor
lea
add
mov
insb
push
cld
rcrb
adc
xchg
mov
xchg
div
repz
out
and
xlat
lods
popf
repz
cwtl
mov
cwtl
ds
les
mov
cmc
inc
jb
and
pop
cmp
sahf
ret
push
fwait
cwtl
dec
sahf
adc
fwait
add
mov
push
or
test
add
xlat
hlt
pop
cld
in
ret
mov
cmp
pusha
imul
push
xchg
pop
lsl
test
imull
dec
insl
jns
jecxz
push
pop
push
mov
fcoml
stc
jp
aad
lcall
sbb
insb
ret
mov
sub
je
fcompl
inc
inc
adc
test
mov
pop
ficoms
stos
jbe
or
or
xchg
cmp
xchg
outsl
mov
enter
jbe
sbb
test
xchg
popa
mov
mov
stos
test
aam
outsl
mov
pop
out
jo
inc
fistps
aaa
pop
sbb
aaa
jmp
and
lahf
xor
pop
repnz
cmp
push
js
shlb
xchg
xchg
mov
and
fwait
push
adc
jnp
scas
add
in
fbld
or
fwait
xor
aam
movsl
push
fs
loop
pop
fisttps
out
add
fscale
or
loopne
js
ja
mov
movsl
std
mov
int3
std
xchg
lds
aaa
sbb
fadd
cli
push
xor
xchg
add
in
cld
pop
mov
pop
stos
add
xchg
in
das
pop
js
xor
adc
cli
mov
mov
call
add
lods
push
aaa
into
into
inc
stos
ret
adcb
mov
cltd
and
jne
adc
mov
fidivs
fisttpl
inc
cli
fs
aad
pop
push
arpl
xor
mov
fistl
lret
test
adc
loope
addr16
lods
jge
mov
ret
subb
aas
inc
je
xchg
push
cli
xorl
push
inc
imul
lods
xor
push
add
sub
mov
fdivs
sar
add
sbb
or
and
mov
pusha
pushf
xlat
fildll
not
xor
push
ret
lret
push
and
jecxz
mov
outsl
dec
dec
loopne
test
push
idiv
pop
cmpb
aas
insb
and
jb
jg
dec
out
loop
imul
mov
jle
and
iret
lods
xlat
nop
push
xchg
lahf
pop
mov
data16
inc
out
adc
hlt
sub
add
pop
nop
mov
loopne
into
jp
aad
loop
out
xchg
push
xlat
hlt
call
xor
mov
adc
fdivrl
rcll
push
imul
inc
sbbl
mov
adc
test
call
lcall
outsb
mov
cmp
inc
add
es
adc
inc
loope
xor
mull
lods
mov
pop
lods
popf
lret
dec
test
int3
movsl
mov
adc
mov
sahf
add
jmp
dec
ror
out
jb
inc
xor
jl
adc
and
inc
lcall
jl
push
inc
js
sbb
jae
xchg
testb
push
gs
cmc
cmp
orb
cwtl
or
test
scas
ljmp
rorl
sbb
pusha
mov
jo
cmp
mov
and
jp
ds
inc
adc
mov
ret
std
or
adc
adc
hlt
stos
jno
or
xor
outsb
mov
mov
loope
mov
gs
mov
das
test
pop
xor
repz
xor
dec
aam
iret
movsl
jns
add
mov
and
stos
mov
pop
pop
paddw
jmp
jmp
push
daa
jle
mov
ret
jp
jl
cmp
stc
iret
movsl
je
cwtl
fs
ljmp
jno
ja
dec
enter
sub
pusha
sti
jp
in
fdivrp
ret
movsb
out
aad
movsl
jg
xor
out
scas
add
mov
fwait
hlt
cmp
adc
adc
dec
js
jmp
jne
xchg
repnz
jno
int3
and
sbb
fildl
mov
sub
cmp
fldcw
aad
ds
cmpsl
cmpsl
xor
xor
push
fwait
sub
stos
repz
sub
pop
fdivl
in
xlat
or
and
movsl
mov
and
std
mov
jmp
es
push
out
imull
lret
mov
ret
jmp
lahf
in
out
int
fisubs
sbb
adc
pop
lods
jecxz
dec
adc
add
sub
mov
mov
imul
std
sar
cmc
cmc
xchg
les
leave
dec
sbb
mov
and
push
icebp
into
mov
mov
sub
mov
push
inc
pop
scas
mov
sub
aam
cmp
repz
xchg
cmp
add
mov
and
repnz
lock
adc
test
pop
mov
mov
jns
ret
scas
xchg
int3
mov
or
xchg
das
xlat
jo
cmc
push
xor
loopne,pn
and
and
xor
js
inc
mov
push
and
and
test
fwait
mov
pusha
in
mov
les
mov
aad
mov
xchg
push
cmp
arpl
addr16
lods
rcl
dec
ror
cld
cwtl
in
sub
sub
inc
add
lods
and
aam
mov
popa
mov
decl
pop
stos
mov
xor
xchg
or
and
mov
lahf
cltd
movsb
push
fldl
sub
fildll
or
and
popa
mov
cmpsl
out
adc
ffreep
test
push
call
mov
cs
loop
sub
rcrb
aam
adc
ret
sahf
adc
test
sub
mov
add
add
mov
in
pop
nop
out
or
xor
int
pop
call
lods
add
add
cmpb
jns
inc
jp
cwtl
mov
push
lods
pusha
shlb
fucomip
out
mov
adcl
andl
pop
and
inc
sub
mov
dec
mov
push
test
push
mov
bound
sub
in
subb
movsl
mov
adc
adc
ja
adc
adc
mov
push
and
nop
add
addr16
gs
or
sub
bound
test
mov
je
in
mov
inc
mov
pop
fsubp
adc
add
es
pop
adc
push
or
xor
nop
popf
add
push
ret
add
cmc
popf
das
mov
loopne
xchg
int
fbstp
dec
cli
push
scas
or
inc
sbb
pop
xchg
fcoml
insb
jo
popa
push
js
insb
in
adc
in
lahf
outsb
stos
test
or
into
mov
adc
jo
ljmp
xchg
cmp
lds
and
mov
xor
jnp
or
pop
fldcw
or
flds
sbb
pop
pop
and
sbb
inc
dec
and
push
pop
sbb
mov
out
sub
or
fwait
imul
into
sub
loope
bswap
repz
add
in
pop
dec
push
rcr
and
roll
std
mov
fmuls
and
out
pop
mov
mov
dec
push
push
pop
mov
in
inc
enter
pop
jmp
jecxz
lret
and
lds
mov
stos
sbb
cs
adc
cli
mov
movsb
pop
dec
xor
shl
or
mov
mov
push
repnz
or
sub
enter
subb
inc
sub
int3
dec
imul
pop
inc
hlt
dec
pop
xorb
fldt
pop
pop
xor
cmp
mov
hlt
pushf
iret
bts
lock
sub
xlat
hlt
adc
dec
xchg
pop
test
xor
or
lds
daa
and
rclb
movb
mov
stos
gs
mov
outsl
sbb
hlt
hlt
push
add
dec
push
sub
das
pop
repz
dec
sbb
pop
dec
jl
aad
mov
lcall
sbb
mov
insl
mov
imul
sbbl
inc
mov
pop
or
js
mov
bound
cld
std
dec
push
outsl
mov
adc
enter
pop
push
cld
sbb
aam
xor
cltd
dec
je
bound
pop
mov
sub
xor
jp
dec
pop
leave
aad
hlt
adc
jb
adc
xlat
imul
leave
jecxz
cltd
and
add
mov
push
sbb
push
mov
adc
jl
stos
push
xor
rorl
xchg
push
loop
sub
lret
inc
fcomps
jns
test
fisubrs
xchg
cmc
sarb
push
dec
sub
sub
jmp
sti
stos
inc
pop
adc
jge
dec
inc
and
test
mov
push
sbb
adc
push
sbb
ret
mov
rcrb
and
out
lods
inc
fwait
ds
enter
aas
lcall
dec
ret
pop
lcall
and
popf
xlat
or
cmp
hlt
jae
or
in
ret
jle
push
and
push
lods
add
fwait
pop
leave
lods
cmp
dec
inc
add
mov
mov
and
psubsb
pop
mov
ds
add
adcb
ja
mulb
jno
lret
popa
imul
xor
into
dec
fimull
stos
pop
mov
inc
scas
outsl
andl
sub
bound
faddl
xor
cwtl
call
sbb
pop
sbb
xchg
outsb
add
pop
rolb
popf
xchg
push
outsb
mov
mov
mov
hlt
insb
and
stc
popl
and
jecxz
push
jnp
out
iret
popf
or
or
pop
fisttpl
push
call
ss
popa
call
pop
and
pop
das
bound
or
pusha
repz
hlt
pop
mov
mov
shlb
call
mov
loopne
in
rol
out
insb
mov
add
adc
fcomps
push
jmp
cmp
flds
pusha
test
dec
ret
in
fnstsw
dec
pop
les
inc
data16
pop
je
inc
pusha
ljmp
push
leave
aaa
cmc
movsl
sub
lret
jle
ds
popl
icebp
mov
cli
sbb
rorb
push
jnp
jle
inc
aam
data16
dec
push
dec
mov
pop
xor
mov
sub
fnstcw
cltd
xor
aaa
jg
pusha
pop
mov
lret
mov
ds
push
movl
sbb
dec
and
cmp
fnstenv
movsb
pop
call
lret
xchg
lock
ret
mov
dec
fdivrp
sbb
adc
cwtl
orb
jmp
pusha
mov
adc
nop
dec
dec
sar
fists
lds
call
and
fidivs
aam
and
push
pop
mov
inc
jo
in
aad
jnp
inc
arpl
stos
and
jnp
or
mov
and
vmwrite
mov
lods
les
rol
int
jb
jl
pop
insl
xor
mov
and
dec
pushf
lret
inc
inc
push
mov
xor
scas
fidivs
into
push
mov
bound
lcall
insl
test
jb
lcall
add
mov
jmp
jno
mov
negb
jecxz
popa
xchg
or
ljmp
outsb
jno
cmp
fisubrl
or
aam
movsl
mov
arpl
in
divl
mov
movsl
ljmp
aam
add
add
inc
scas
and
dec
xor
sahf
faddl
xlat
jb
sub
jecxz
jl
bound
daa
mov
xor
out
sbb
notb
iret
fldenv
shrl
fsubl
fs
jae
dec
dec
pusha
adc
les
jl
mov
int3
movsl
dec
jge
and
hlt
data16
dec
popf
xchg
add
mov
std
les
pop
shrb
mov
in
pop
add
and
test
imul
cs
xor
ja
add
dec
push
push
cltd
test
and
and
push
xchg
jle
lods
pop
dec
xor
mov
clc
add
mov
mov
xchg
pusha
xorb
jnp
inc
cli
pop
mov
cmp
inc
fwait
pop
clc
mov
out
fldt
xor
pop
enter
or
shl
aam
lahf
jp
popf
sub
sub
xchg
insb
mov
notl
out
les
add
inc
add
ds
pop
pop
daa
lock
mov
cmc
loope
or
loop
dec
dec
adc
cmpsl
pop
xor
add
sbb
fmuls
lcall
cli
test
mov
add
push
adc
enter
and
mov
lret
add
iret
or
cs
jecxz
mov
outsb
in
and
gs
jecxz
addr16
xchg
and
cli
cli
add
inc
mov
mov
leave
ror
lds
pop
mov
mov
insb
lret
ds
test
fsubrs
mov
fwait
in
and
or
pop
mov
in
mov
loop
pop
setae
inc
cmp
in
xchg
sarl
push
fdivl
and
insb
hlt
mov
xor
add
xlat
out
enter
xor
ror
mov
test
in
or
adc
in
sbb
lret
jl
dec
or
mov
imul
xor
or
or
into
jno
mov
cs
aaa
mov
stc
or
test
std
jae
mov
es
mov
xor
mov
sub
jp
xor
push
xchg
add
pop
and
push
jle
adc
sub
stc
lods
mov
jge
ret
sbb
xor
ror
cmp
xchg
sahf
stos
push
rorb
and
inc
mov
fldl
jge
and
shll
test
movsb
xchg
or
out
fimull
mov
jbe
pop
push
int
jge
add
sub
or
fldt
lock
sbb
lret
sub
push
flds
lock
pop
shl
lds
mov
xchg
jb
cmpsb
push
fmull
sub
sbb
bound
test
pop
mov
pop
in
nop
push
xchg
movsl
add
outsl
mov
popa
pop
pushl
aam
push
adcb
mul
int3
mov
js
adc
aaa
sbb
pop
inc
xor
xor
in
sti
in
insb
mov
out
dec
xchg
pop
ljmp
and
inc
sub
lods
into
mov
int3
insb
out
sti
xor
pop
mov
mov
ds
fstps
je
sahf
movsb
or
jb
push
inc
movzwl
aad
or
and
cmpsb
scas
and
lds
movsb
xchg
nop
cmpb
aas
cmp
fisubl
or
jle
push
inc
aad
repz
stos
stc
int3
shll
push
adc
into
inc
cmp
outsl
jge
lds
dec
hlt
ret
mov
gs
adc
int3
pop
sub
push
repz
cmpsl
fcomp
or
push
sarb
and
inc
xchg
cmpsl
icebp
cmpb
ret
test
push
and
sbb
aad
and
xchg
aam
in
or
xchg
mov
sbb
aad
xchg
cmpsl
adc
jecxz
imul
not
and
pop
sub
or
adc
xor
out
test
push
and
or
push
push
dec
imul
jb
les
es
inc
in
not
xorl
aad
dec
push
test
push
inc
jp
arpl
dec
lcall
cld
adc
add
divl
aad
jge
test
or
fbld
xor
jle
mulb
fidivl
fs
adc
sub
push
loopne
dec
jge
inc
inc
xor
sbb
mov
mov
rcrl
xchg
mov
jae
jmp
fdivl
lods
or
push
in
add
xchg
xor
fistps
ds
or
outsb
xchg
icebp
imul
cli
testb
mov
sub
sbb
xchg
cmp
adc
int3
adc
aam
push
stc
lret
pushf
xchg
dec
sub
mov
jo
xchg
lods
jge
ret
scas
pusha
mov
add
pusha
movsb
xchg
ss
fucompp
xlat
xor
lds
loop
mov
jmp
cmp
lahf
imul
movsb
jl
insl
scas
aaa
and
cwtl
cs
cld
lods
mov
xchg
dec
lcall
mov
adc
enter
call
je
mov
jl
imul
push
test
movsl
cmp
imul
arpl
aam
fsts
pop
mov
mov
shrl
mov
rclb
pop
insl
and
xchg
sbb
add
sub
and
xchg
movb
hlt
je
push
je
mov
cmp
scas
das
adc
mov
xor
mov
enter
popa
add
mov
shlb
dec
movsb
dec
or
add
xchg
push
cmpsb
imul
xor
shlb
and
hlt
test
pop
cmc
adc
or
or
inc
push
fdivrl
nop
xor
or
mov
imul
cmpsl
insl
mov
pop
jl
es
scas
mov
inc
pop
pop
das
aaa
inc
jno
jmp
and
xchg
fldt
les
jle
bound
stos
cmp
int
clc
fisttpll
stc
std
and
push
xlat
fmuls
gs
sbb
arpl
xchg
mov
in
sbb
mov
lock
jne
in
nop
clc
mov
cs
call
add
push
inc
jg
out
or
mov
xor
andl
mov
ss
cmp
loopne
decl
inc
jge
xchg
call
sub
and
push
loop
mov
pop
imul
and
xor
sub
aas
in
cmp
sbb
cmpsb
jbe
add
xchg
dec
orl
mov
inc
adc
fistl
jne
jne
popf
adc
push
mov
rorb
mov
sarb
and
lods
adc
stos
xorl
jae
into
jl
fisubl
push
pusha
add
es
lock
cmp
xor
jge
jg
ret
fwait
sub
sub
imul
adc
dec
neg
rclb
out
into
decl
rcrl
mov
mov
arpl
js
aam
and
or
cld
repnz
repnz
test
pop
outsl
xchg
negb
xor
push
xor
shll
ret
sti
shl
ret
test
jne
mov
lret
movsl
xor
mulb
cmp
fstp
les
mov
pop
cmp
fcmovne
pop
mov
mov
sbb
ja
jno
add
dec
ror
filds
xchg
cli
and
decl
or
inc
rol
lahf
sub
or
call
cmp
cli
cli
rolb
ffreep
movsl
in
lock
adc
jno,pt
outsb
inc
call
jge
jp
xchg
jecxz
mov
aas
mov
sub
stos
fisubl
add
mov
and
adc
daa
inc
fwait
hlt
sti
les
fcomip
movsb
mov
outsl
int
inc
lea
out
mov
pop
mov
jecxz
mov
clc
pop
fcmovnu
rep
aaa
xchg
add
aaa
or
adc
push
push
pop
psrld
jno
and
cwtl
fbld
and
dec
adc
and
and
mov
mov
pop
inc
addb
mov
jae
in
popa
aam
add
aam
sub
xlat
inc
sarb
movsl
fdivs
push
fdivrs
sub
sub
insb
sbb
xor
xor
xor
lods
sub
movsb
outsl
es
cmp
in
lahf
xor
cld
divb
add
outsb
sarb
mov
xor
pop
jle
mov
xchg
mov
mov
jle
inc
lret
xor
sub
and
xor
or
add
sbb
sub
jmp
fsincos
imul
and
pop
sbb
movsb
and
inc
sub
inc
loope
aad
inc
sbb
push
xlat
test
or
movsl
xlat
scas
fwait
xor
push
inc
sbb
cltd
pop
push
sub
movsb
and
or
pop
orb
iret
pop
and
and
cmp
pop
movsb
inc
sub
sahf
outsb
pop
sahf
mov
sub
cmpsl
mov
aad
jno
dec
stc
fldcw
pushf
jge
xor
aam
mov
call
adc
iret
faddl
adc
jmp
and
dec
pushf
sub
mov
adc
or
shll
mov
aad
sub
adc
xchg
mov
dec
subl
call
sahf
sahf
cli
in
sub
xchg
das
sbb
jecxz
jle
inc
xor
and
jecxz
lret
lods
sub
mov
mov
dec
lret
fwait
mov
cli
data16
add
pop
imul
popf
sub
mov
xchg
adc
fists
stc
inc
mov
pop
xchg
jo
sahf
add
xlat
fnstcw
dec
adc
cld
push
or
mov
or
aaa
pop
dec
dec
cmp
cmp
repz
lret
lahf
aaa
mov
or
jno
ret
jmp
scas
pop
mov
mov
repnz
sbb
or
out
jb
inc
dec
int3
aam
aam
mov
mov
xchg
dec
nop
stc
xchg
dec
pusha
hlt
adc
jecxz
and
cwtl
add
or
sub
mov
dec
ffreep
mov
xor
pop
movsb
stos
mov
sub
mov
int
sbbl
push
pop
push
fs
inc
xor
push
mov
inc
daa
imul
or
and
roll
stos
dec
dec
mov
pop
sub
into
je
cmpb
mov
mov
arpl
cmp
call
jbe
and
sahf
sbb
xchg
aad
loope
repnz
in
fidivs
aas
lret
and
dec
inc
pause
jge
mov
out
cld
fucom
jne
fadds
ss
xor
andl
dec
sub
or
and
leave
and
add
sub
push
or
or
push
inc
push
xor
call
xor
call
or
call
mov
inc
dec
add
push
and
sub
push
push
sub
or
xor
push
sub
and
call
sub
lea
xor
or
xor
or
push
xor
push
sub
xor
inc
and
push
push
push
sub
sub
call
and
sub
add
and
mov
and
or
xor
mov
xor
shr
or
add
and
jmp
inc
sub
xor
lods
xor
add
or
dec
xor
xor
or
inc
mov
or
xor
mov
dec
mov
je
sub
and
xor
jmp
mov
inc
add
add
dec
mov
mov
mov
mov
jne
inc
pop
and
and
or
and
add
pop
sub
or
mov
pop
or
or
jmp
