and
stos
add
xor
mov
or
sbb
jb
test
mov
and
xorl
ret
add
and
adc
rcll
roll
add
push
and
sbb
xchg
or
pop
and
test
mov
pusha
pop
push
les
add
loopne
ss
dec
sbb
test
popa
addl
mov
sbb
add
add
add
add
test
and
add
adc
add
or
inc
or
add
sbb
or
and
add
or
mov
adc
add
or
sub
add
mov
loop
add
sbb
add
add
or
test
add
and
and
add
push
and
loopne
sub
cwtl
bound
bound
add
es
inc
mov
and
add
add
or
add
xchg
mov
popw
add
pop
pop
push
inc
or
enter
or
orl
and
add
add
fwait
or
add
add
dec
add
push
sbb
add
jne
add
andb
addb
add
add
push
cwtl
mov
add
pusha
push
cmpl
adc
push
add
inc
inc
add
add
push
cli
and
add
and
add
add
add
add
inc
adc
rcll
mov
pop
pop
lret
add
jne
inc
inc
add
subb
pop
add
popa
dec
add
add
adc
xor
addb
add
inc
mov
or
or
push
add
or
sbb
add
inc
jl
add
inc
add
or
xchg
hlt
andb
and
and
adc
or
push
add
and
push
sqrtps
or
and
bound
popa
and
or
and
adc
add
sub
adc
xchg
push
xchg
add
sub
inc
pusha
fmuls
sbb
and
add
add
push
adc
and
inc
leave
add
pusha
sbb
sbb
rclb
inc
mov
add
add
les
js
pop
inc
add
adc
add
add
nop
inc
dec
test
push
adc
inc
add
adc
cmovo
and
add
adc
popa
mov
addl
add
add
inc
adc
add
adc
add
and
fs
add
mov
and
and
xor
adcb
adcl
inc
cmpsb
mov
pusha
inc
rorb
inc
add
mov
orl
inc
dec
mov
add
adc
pushf
mov
mov
dec
xor
push
add
adc
rorb
or
adc
mov
add
inc
sub
dec
xchg
mov
add
add
adc
sbb
adc
and
add
add
dec
push
add
out
cmp
lock
add
shlb
add
mov
adc
adcb
add
add
and
dec
add
sub
and
and
mov
nop
pop
adcb
sbb
adc
xchg
or
addl
add
inc
nop
out
sub
addb
addb
and
mov
or
or
or
les
roll
xor
inc
addb
push
inc
add
addb
add
add
and
add
mov
add
orb
roll
add
sbb
add
test
sbb
add
adc
movsb
xor
and
push
push
addb
and
or
add
add
push
or
les
add
inc
xor
rolb
movsb
add
rolb
and
jo
and
mov
and
inc
nop
add
or
or
add
and
or
xchg
adc
inc
adc
add
dec
mov
add
add
add
adc
add
test
add
popa
enter
and
or
pusha
mov
push
rolb
jo
push
adc
test
add
sub
jo
pop
sub
add
add
mov
imul
add
adc
or
adc
sbb
addb
add
or
add
test
adc
add
and
mov
pusha
inc
subl
add
add
or
cmovo
orb
add
pop
nop
add
add
pop
cltd
orb
or
mov
add
dec
inc
sbb
xor
adc
fadds
or
or
and
add
push
push
inc
and
addl
inc
inc
push
add
add
xchg
test
and
andb
cmp
sub
add
add
inc
and
or
inc
add
test
push
or
mov
scas
popa
sbb
and
adc
bound
lea
cwtl
dec
data16
adc
add
inc
add
xchg
test
or
or
or
add
inc
and
inc
sub
loopne
add
dec
loope
cmpb
inc
roll
test
push
add
adc
xor
dec
lds
add
test
adc
nop
inc
in
and
rclb
sbb
adc
add
and
inc
dec
test
xor
adc
add
xorb
enter
add
xchg
sbbl
dec
sub
add
addb
or
imul
mov
lds
addl
addb
sbb
inc
pop
inc
mov
xchg
addb
movsb
and
adc
mov
inc
inc
add
add
and
push
xor
nop
nop
pusha
add
enter
pusha
add
mov
xchg
bound
add
pusha
movsb
sub
add
inc
inc
add
xor
add
and
adc
pop
inc
push
and
dec
add
mov
les
test
inc
inc
and
add
xchg
mov
or
adc
test
adc
pusha
inc
add
mov
add
add
add
inc
or
bnd
stc
add
mov
fwait
adc
cwtl
add
dec
xchg
inc
inc
sub
add
inc
mov
xor
add
add
add
pusha
and
dec
add
push
jae
add
and
inc
stc
mov
and
or
mov
or
add
adc
push
addb
and
inc
rolb
xor
adc
sbb
inc
add
push
or
or
and
adc
dec
add
xorb
adc
inc
mov
inc
sbb
mov
adc
inc
inc
and
inc
and
and
push
sub
add
xor
or
add
add
inc
add
rol
adc
xor
push
adc
or
adc
add
sub
or
xchg
add
sub
add
sub
jae
add
subb
dec
add
adc
adc
xor
and
and
adc
and
dec
adc
and
js
mov
adc
test
or
or
inc
adc
pop
nop
adc
ret
and
add
add
sub
add
sbb
dec
or
mov
add
or
adc
sub
inc
rolb
adc
pusha
or
and
mov
adc
add
xor
add
or
stos
xor
sub
roll
lret
and
add
add
inc
mov
add
adc
add
mov
movsb
mov
inc
push
sbb
adc
add
fmul
inc
or
inc
add
or
add
jmp
add
mov
inc
push
and
test
cmp
ret
nop
adc
addb
sbb
adc
mov
add
inc
or
adc
xchg
inc
add
add
or
mov
inc
and
push
xor
mov
shrl
push
mov
add
adc
adc
add
and
insb
shlb
adc
stos
pop
add
inc
or
push
add
add
mov
adc
add
les
andl
ret
inc
adc
inc
dec
add
and
adc
add
add
add
adc
sub
xchg
mov
add
pusha
pusha
sahf
or
or
loopne
inc
inc
add
and
add
sbb
inc
sub
adc
or
add
or
and
js
inc
nop
fwait
xor
adc
or
and
and
add
add
addl
add
adc
add
add
or
xchg
push
add
add
add
add
sub
add
add
lods
or
inc
add
sbb
gs
add
inc
adc
or
mov
push
or
roll
mov
add
addl
add
add
jmp
inc
cmpb
add
dec
and
adc
inc
inc
test
xor
add
and
js
add
and
pusha
add
adcb
addl
add
or
test
add
and
pop
add
loope
add
xorb
or
pusha
xchg
add
adc
push
dec
xor
inc
add
add
shlb
imul
andb
and
sub
add
xor
inc
shll
adc
inc
leave
mov
data16
inc
xor
sub
mov
dec
adc
xorl
sub
dec
push
addb
push
pushf
dec
add
and
inc
andb
or
adc
mov
and
xchg
inc
adc
push
xchg
mov
cmp
add
adc
rcll
sub
mov
dec
movl
inc
inc
inc
and
push
inc
addb
addb
inc
add
push
or
add
cmp
add
add
inc
adc
jo
add
xor
xor
adc
and
adcb
and
add
add
add
movsb
mov
and
inc
add
and
pop
and
and
and
daa
adc
inc
and
or
mov
loopne
add
mov
inc
inc
ret
add
shll
adc
inc
inc
xchg
or
dec
xchg
and
and
inc
movb
add
addb
mov
and
sbb
add
lea
add
xchg
roll
push
addb
cwtl
or
and
and
sbb
adc
cwtl
and
push
sbb
test
add
pushf
or
rolb
or
and
popa
mov
insb
and
orb
or
and
add
rcrb
mov
popa
or
push
add
inc
xor
inc
inc
pop
xor
add
orb
shrb
add
add
or
mov
aam
inc
add
add
shrb
in
or
dec
push
add
add
add
add
inc
inc
arpl
or
ss
mov
pusha
addb
adcb
and
orb
add
mov
addl
adc
test
loope
add
inc
xor
add
xor
adc
adcl
and
or
add
inc
add
xor
and
or
adc
add
add
mov
inc
push
add
inc
push
xor
movsl
add
inc
sbb
adc
add
and
test
addb
and
push
inc
cmp
add
adc
dec
add
add
mov
sbb
add
add
sub
add
adc
add
add
and
add
sbb
and
or
mov
adc
adc
push
orb
and
mov
rclb
add
adc
and
or
or
inc
adc
or
and
and
insb
test
add
and
popa
cwtl
mov
and
add
and
addb
cwtl
add
rclb
adc
push
add
addb
add
xchg
add
adc
dec
fs
test
inc
add
inc
adc
nop
add
add
es
add
mov
add
add
add
mov
inc
sub
into
add
pop
inc
bound
lret
imul
test
adc
and
shrb
xor
loopne
push
xor
add
rolb
add
add
add
adc
add
mov
or
adc
adc
movsb
ret
adcb
and
xchg
xor
and
enter
addb
or
add
xchg
bound
add
jb
push
add
or
add
add
xor
push
rorl
mov
les
add
sbb
add
pop
sub
or
pushf
inc
add
cmp
inc
add
xchg
or
xchg
adc
add
pop
add
orb
inc
mov
adc
call
adc
inc
and
add
inc
and
or
add
mov
inc
and
rcl
inc
add
adc
xor
add
inc
cwtl
mov
mov
addb
inc
add
mov
rolb
add
xor
adc
or
or
inc
adc
or
add
sub
and
orb
xor
mov
addb
dec
jne
and
or
add
adc
popa
and
sub
add
add
je
add
and
mov
add
or
orl
push
inc
add
jno
mov
mov
adc
xorb
inc
pop
add
std
lds
in
push
add
inc
call
sub
inc
addl
loop
dec
rolb
and
test
inc
add
sbb
or
push
inc
mov
ljmp
and
addl
or
dec
pusha
or
add
nop
sub
jno
or
or
add
push
and
or
add
dec
lret
push
or
xor
or
adc
and
add
or
or
add
inc
nop
xchg
rcrb
sbb
in
mov
push
or
leave
xchg
addb
xchg
or
add
stos
add
add
adc
adc
test
mov
scas
daa
lods
and
rclb
mov
sub
mov
push
or
adc
test
or
pop
adc
xor
and
or
and
add
mov
cmp
add
add
add
add
xchg
add
inc
sbb
andb
add
dec
and
and
xor
and
adc
xor
in
push
test
adc
adc
add
inc
pop
sub
or
adc
adc
cmp
or
addb
xchg
in
and
sub
add
push
pop
sub
or
mov
or
add
push
ret
add
pop
jno
xchg
sbb
add
and
orb
lea
push
push
add
mov
add
ficoml
add
add
mov
sbbl
add
and
push
enter
enter
or
and
push
adc
xor
or
or
add
add
pop
adc
or
add
inc
bound
mov
inc
inc
sbb
addl
and
sbb
add
pop
cmp
push
push
shlb
add
add
jp
test
add
loop
and
cmpsb
cwtl
inc
add
or
and
add
adc
sbb
adc
push
mov
inc
sbb
add
pop
mov
add
andb
adc
popa
sbb
and
or
inc
add
inc
andb
add
add
push
mov
sbb
add
add
sbb
adc
subl
or
xchg
add
jl
add
dec
test
jno
or
enter
add
add
inc
push
add
adc
inc
push
test
lods
adc
xor
adc
add
inc
add
add
pop
sub
or
add
rolb
addb
adc
loopne
add
inc
pusha
pusha
add
or
dec
adc
and
mov
sub
adc
adc
and
add
adc
sbbl
sbb
and
pusha
add
inc
add
jecxz
pop
add
test
cwtl
xor
add
add
push
inc
rolb
push
push
rcrb
popa
addb
add
adc
add
subl
inc
adc
pop
and
addb
or
add
and
test
add
movsb
inc
xchg
and
nop
or
add
sbb
add
sbb
addb
add
cmpsb
add
inc
ret
add
add
sub
stos
test
test
mov
or
sub
addb
add
adc
push
jo
cmp
inc
or
jae
mov
add
add
adc
mov
add
or
add
push
mov
pusha
add
fadds
mov
add
and
and
jo
add
adc
push
xor
adc
and
adc
mov
test
add
ret
sbb
inc
test
rolb
cmp
add
test
add
add
je
adc
adc
adc
sbb
or
pusha
add
scas
xchg
inc
and
add
sbbl
inc
adc
xorl
add
add
dec
add
inc
add
orb
add
add
adcb
or
and
add
rolb
jo
adc
adc
or
push
and
sbb
or
add
jno
inc
add
and
or
test
add
adc
sub
push
and
and
sub
and
les
inc
or
and
or
mov
and
add
nop
popa
add
movsb
repnz
add
adc
add
pop
inc
inc
pop
cltd
or
adc
add
add
inc
push
sub
inc
mov
cmp
or
add
add
loope
adc
add
add
and
inc
jnp
inc
push
test
push
loopne
add
movsb
and
enter
pop
inc
addb
add
add
and
add
inc
shlb
dec
add
xchg
cmpsb
rolb
jo
add
push
nop
mov
add
or
xor
add
sbb
add
add
add
enter
ret
cmp
sub
adc
cmp
adcb
cwtl
add
push
xchg
je
add
int3
or
inc
dec
add
lods
bound
ret
and
add
add
or
sub
adc
xor
lea
test
dec
adc
push
inc
stos
test
sub
or
add
or
and
inc
adc
mov
push
add
or
subb
xor
add
add
add
add
mov
inc
inc
add
and
xor
or
adc
add
inc
or
or
xchg
pop
dec
addl
test
pusha
and
stos
and
andb
add
or
sub
inc
and
fwait
mov
and
push
adc
inc
or
dec
nop
sub
add
adc
inc
or
mov
add
add
add
xchg
pusha
sub
add
mov
add
push
test
enter
add
add
pushf
and
and
push
push
add
adc
popf
push
addb
and
sub
add
push
or
or
or
add
adc
dec
mov
add
or
ret
inc
and
addl
add
dec
adc
inc
and
push
inc
inc
add
adc
adc
inc
les
inc
add
add
dec
test
inc
inc
andb
add
pusha
sbb
xchg
sub
and
dec
shlb
push
pusha
add
add
addl
push
add
add
orb
add
sbb
add
or
add
cmp
sub
adcb
mov
add
adc
sbb
xor
or
or
add
and
add
inc
test
mov
push
inc
sub
or
adc
adc
mov
add
add
or
jo
sub
xor
add
add
andb
and
adc
sahf
push
add
adc
inc
inc
add
or
or
nop
mov
push
inc
or
add
adc
sbbb
mov
xor
push
and
add
nop
addb
push
or
popa
sbb
inc
push
adc
or
dec
nop
and
xor
fs
add
add
push
adc
addb
add
adc
pop
arpl
or
push
stos
add
jns
adc
add
add
inc
fsubs
add
add
inc
addb
repnz
add
add
xchg
add
pusha
add
mov
add
inc
adc
add
shll
add
add
nop
adc
adc
mov
or
add
add
add
add
push
pusha
inc
mov
adc
add
inc
and
addb
call
and
lock
add
fs
adc
add
add
mov
add
dec
sbb
inc
adc
sub
or
sbb
int3
and
or
inc
xor
addl
push
mov
cwtl
cltd
loopne
inc
jbe
dec
dec
mov
mov
adc
daa
addb
add
orl
push
add
xchg
adc
inc
add
inc
pop
int3
dec
sbb
add
adc
adc
add
or
inc
add
or
add
add
test
inc
jbe
add
adc
add
add
xchg
fs
adc
rolb
add
adc
dec
inc
push
or
fs
add
push
add
or
rorb
xchg
rorb
rorl
push
mov
cmpb
add
add
xorb
mov
add
push
push
add
adc
pusha
xor
loopne
and
dec
add
inc
sub
lret
sbb
mov
pusha
test
lcall
or
dec
add
aad
adc
push
add
add
and
pop
add
and
add
aam
andb
addl
subb
or
add
add
add
add
and
add
add
adc
push
add
and
or
add
cmpb
les
pusha
and
adc
mov
adc
bound
xchg
add
xchg
mov
or
add
lock
and
add
push
add
add
and
and
sqrtps
add
and
and
xchg
add
xchg
sbb
push
xchg
inc
push
es
xor
add
add
rclb
add
add
add
inc
adc
adc
sub
or
or
mov
xchg
and
addb
jmp
or
push
mov
add
adc
add
add
push
add
or
or
data16
add
inc
mov
add
or
add
and
lret
sub
nop
add
and
and
xchg
ret
add
or
or
add
or
mov
or
nop
sbb
sub
add
add
add
add
add
adc
andb
and
push
inc
addb
and
add
and
adc
or
xor
mov
add
inc
add
sbb
inc
and
cmp
sub
mov
sbb
adc
sbb
add
add
adc
addb
sbb
mov
cmp
add
addb
sub
sbb
mov
sbb
push
subb
add
inc
pusha
or
xor
adc
add
mov
or
push
nop
add
inc
addl
add
inc
into
arpl
sbb
cmp
or
lret
mov
add
into
rorb
push
and
adc
nop
inc
addb
nop
add
sub
add
add
pushf
cwtl
or
inc
and
sub
push
pusha
rcll
gs
orb
push
cwtl
adc
adc
adc
inc
add
xor
adc
inc
mov
or
mov
inc
or
add
push
inc
inc
add
xchg
inc
mov
inc
pop
push
push
addb
adc
and
or
roll
pusha
mov
add
add
popa
add
rorb
add
or
push
inc
add
inc
mov
or
pusha
inc
dec
andb
add
adc
add
andb
inc
or
orb
mov
nop
add
add
add
addb
mov
call
dec
and
arpl
addb
push
adcb
lods
or
add
mov
sub
add
add
or
add
add
add
andl
pop
add
add
rolb
push
mov
orb
nop
orb
inc
inc
mov
add
and
ss
or
or
xor
inc
sbb
inc
add
or
push
dec
push
push
xor
add
push
cltd
rolb
adcl
test
mov
cwtl
xor
inc
pusha
add
add
cmp
adc
xchg
or
inc
or
mov
dec
sub
in
and
mov
and
mov
loop
add
inc
mov
adc
test
add
and
fcoms
sbb
adc
sub
add
rorl
mov
add
inc
add
inc
orb
jno
add
inc
and
add
pusha
adc
les
hlt
add
shl
add
pusha
mov
add
adc
or
inc
dec
jno
add
pusha
sub
adc
add
adc
sbb
inc
sbb
xor
mov
adc
movsb
mov
add
add
mov
inc
adc
or
add
popa
push
sbb
dec
lret
pusha
add
inc
push
bound
test
and
and
add
shrb
shlb
sbb
or
insb
add
add
adc
mov
inc
adc
orb
leave
rclb
add
add
and
or
add
sub
add
sbbb
add
mov
int
mov
and
dec
pop
adc
mov
add
xor
les
xchg
inc
push
mov
or
or
add
and
add
add
inc
add
mov
sbb
or
add
inc
loopne
add
xor
dec
inc
add
inc
add
stos
add
push
and
add
andb
lods
orl
or
or
dec
cmp
adc
push
addb
add
add
or
push
add
test
push
mov
adc
mov
or
inc
mov
add
push
dec
and
add
xor
xchg
sbb
or
inc
add
xor
inc
and
and
and
popa
cmp
xor
add
add
or
inc
mov
or
xor
xor
dec
or
xchg
add
or
cmp
or
xchg
add
movsb
and
add
add
and
xor
add
add
add
inc
mov
and
adc
push
inc
movsb
sbb
dec
pusha
cmp
movsb
int3
test
add
orb
dec
add
push
adc
add
sub
add
inc
or
add
ret
addl
xchg
aad
and
add
andb
add
inc
sbb
add
nop
test
andl
adc
xchg
popa
daa
inc
or
add
add
xor
push
inc
pop
int3
and
mov
and
add
dec
dec
cmp
adc
add
add
xchg
test
add
shlb
or
pop
enter
test
add
xchg
or
inc
push
test
adc
ret
mov
and
adc
rclb
nop
and
and
adc
cmp
insb
pop
add
sbb
add
inc
mov
mov
sbb
test
push
adc
add
mov
rclb
sub
or
adc
add
shlb
add
inc
and
add
xchg
add
inc
add
add
addl
push
xor
pushf
inc
add
push
movsb
inc
inc
push
push
mov
adc
add
or
dec
add
xor
inc
add
add
or
mov
and
orb
shlb
adc
ret
inc
add
bound
add
inc
rorl
add
or
or
sub
cmpsb
add
add
add
jo
and
or
inc
cmpsb
add
stos
and
addb
and
jne
and
add
add
add
or
cmp
or
popa
and
adc
or
mov
enter
add
dec
or
or
inc
xor
add
add
add
xchg
adc
addb
push
add
and
add
or
rclb
add
add
dec
inc
add
add
inc
add
push
mov
and
pop
mov
cwtl
push
dec
pop
rorb
inc
adc
add
dec
dec
push
sub
mov
add
jo
mov
add
jbe
xor
addb
addb
addl
and
add
add
test
rolb
add
add
add
or
inc
add
add
or
or
and
mov
adc
adc
sub
xor
mov
adc
adc
add
or
cmp
push
inc
test
and
add
nop
mov
sbb
inc
movsl
add
add
add
or
mov
add
sbb
addr16
add
add
movsl
adcb
pop
add
rolb
add
add
push
xchg
adc
sub
add
loopne
add
sbb
dec
and
push
adc
push
adc
inc
add
inc
adc
add
mov
add
add
cwtl
add
les
or
or
and
orb
and
test
sbb
and
push
add
les
push
push
add
cwtl
inc
andb
cmp
xor
and
dec
inc
xchg
or
sub
add
add
add
insb
xchg
push
dec
and
add
add
xor
jo
cmp
shlb
push
add
adc
add
add
addb
add
fs
rorb
and
and
or
inc
or
sbb
and
add
add
or
rolb
pop
adc
add
xor
cmp
test
or
mov
cmp
nop
dec
or
xor
add
inc
adc
push
inc
rorb
inc
add
add
push
dec
adc
push
adc
xchg
sbb
adcb
jb
inc
or
xchg
or
jl
xchg
and
xchg
popa
cmpl
add
or
add
movsl
xchg
adcb
test
icebp
adc
adcb
inc
or
push
adc
adc
adc
adcb
mov
add
adc
push
xchg
rclb
sbb
or
inc
daa
andb
bound
and
add
add
or
sub
add
jno
addb
add
adc
jno
pushf
add
or
add
and
adc
adc
adc
addb
add
adc
lock
and
add
or
sub
stos
adc
sbb
sub
add
or
or
les
addb
add
add
add
addb
addb
add
sbb
add
sbb
adc
add
push
add
cmp
inc
add
adc
loop
add
inc
and
add
mov
sub
add
sbb
sub
inc
add
inc
addb
outsb
test
add
add
addb
and
push
dec
add
or
xchg
dec
movl
add
mov
mov
add
adc
inc
xchg
and
popa
add
add
xchg
roll
inc
or
inc
dec
mov
adc
dec
adc
add
add
mov
or
adcb
add
and
inc
inc
mov
mov
inc
xchg
add
adc
add
cmp
adcb
mov
addb
test
add
andl
sbb
andb
inc
sub
sbb
ret
jo
add
and
xor
inc
push
adc
push
add
pop
add
adc
or
add
push
inc
adc
adc
enter
fldenv
or
add
andl
add
xchg
shlb
and
mov
sbbb
add
andb
inc
adcl
add
addb
add
add
xor
cltd
and
sub
add
and
dec
xchg
and
add
jo
dec
and
add
add
inc
nop
adc
or
push
pusha
xor
xchg
add
and
inc
adc
addr16
pop
and
xor
inc
and
test
add
addb
mov
daa
inc
add
inc
inc
test
mov
push
mov
mov
dec
push
dec
andb
mov
arpl
inc
add
sub
push
addb
aam
and
or
add
add
sbb
adc
or
mov
test
pusha
dec
adc
rorb
push
sub
dec
push
add
add
add
xchg
pushf
mov
or
add
inc
pusha
and
and
movsl
sbb
mov
and
adc
mov
adc
push
add
add
fs
sub
inc
adc
and
add
shrb
je
addb
test
addl
add
add
dec
add
xor
sub
push
add
and
sub
dec
inc
inc
add
add
mov
add
mov
adc
add
or
add
adc
or
or
add
loopne
lea
add
adcb
les
or
enter
inc
add
add
adc
dec
inc
push
add
add
add
push
test
or
pop
inc
movsb
push
sbb
add
add
and
inc
pop
call
inc
push
inc
sub
add
nop
and
subb
inc
sbbl
inc
or
nop
add
nop
sub
inc
inc
adc
addb
add
mov
or
sub
inc
xchg
and
or
daa
and
add
or
inc
orb
adc
add
add
add
and
mov
add
les
sub
sbb
add
sbb
add
mov
sbb
add
add
add
inc
dec
inc
dec
add
add
nop
sbb
addb
sub
arpl
xchg
add
adc
inc
mov
add
mov
or
add
sbb
and
add
nop
adc
or
adc
enter
add
or
test
and
inc
daa
mov
addb
mov
add
sub
addb
inc
dec
add
adc
or
add
cmp
or
sub
movl
adcb
adc
mov
xchg
inc
add
inc
mov
rcrb
sub
inc
pop
into
add
pop
or
test
orb
adc
and
add
wbinvd
cwtl
sbbb
add
mov
add
cwtl
add
mov
adc
add
push
adc
adc
je
add
add
addb
dec
mov
or
andb
add
sbb
sbb
bound
inc
xor
or
add
and
add
or
test
sub
dec
or
mov
inc
adc
test
mov
adc
mov
add
or
add
add
add
orl
and
add
add
xchg
rolb
call
xchg
dec
adc
add
dec
add
add
test
and
or
push
or
inc
cwtl
add
rolb
or
add
add
or
or
stos
les
ret
andl
popl
add
sbb
inc
add
inc
adc
mov
cmp
rcr
add
add
ret
pop
orb
jo
sub
adc
add
pusha
push
nop
inc
sbb
bound
subl
or
addl
add
add
add
inc
adc
inc
inc
adc
push
movsb
les
adc
orb
or
sub
orb
addl
xor
pop
add
jo
mov
adc
daa
and
sbb
mov
es
push
inc
adc
adc
mov
dec
loopne
and
subb
es
add
pusha
addb
adc
push
dec
or
adc
and
add
mov
sbb
add
add
test
jo
add
cmp
js
push
lock
push
cwtl
popa
or
sbb
adc
loopne
adc
and
add
or
bound
adc
adc
push
or
nop
dec
leave
add
xor
jb
or
push
add
or
add
dec
inc
addl
xchg
inc
rolb
addb
dec
add
adc
xor
dec
add
push
push
add
xor
fisttpll
dec
addb
or
and
js
inc
xorb
sbb
dec
push
adc
add
adc
and
adc
add
push
lea
jo
addb
inc
add
add
mov
inc
add
mov
and
add
dec
inc
test
add
push
add
push
inc
mov
ret
push
lock
or
add
sbb
add
dec
add
dec
rolb
adc
add
add
add
push
nop
add
xor
addb
xchg
sub
xorb
or
adc
nop
add
xor
or
or
mov
adc
and
test
gs
mov
inc
dec
rolb
inc
and
dec
orb
insb
dec
adc
nop
xchg
add
mov
add
adc
push
rolb
shlb
dec
push
add
add
in
andb
add
add
andb
outsb
rolb
mov
push
popa
addb
mov
add
pusha
shlb
sbb
push
addl
add
or
mov
add
adc
inc
or
add
popf
adc
dec
adc
out
add
test
inc
add
cmpsb
adcb
add
adcl
es
add
xorb
and
add
add
dec
or
popl
or
adc
push
and
mov
add
add
pop
test
add
testb
insb
pop
inc
inc
adc
pop
les
adc
add
add
xchg
push
adc
adc
or
sbb
inc
dec
add
sub
sbb
push
adc
add
add
inc
test
push
js
xorb
add
adc
bound
popa
add
orb
add
add
loope
xor
or
lds
dec
sub
adc
add
andl
or
xchg
addb
bound
add
xor
rclb
movb
movb
inc
push
or
add
inc
and
ljmp
adc
add
add
mov
pusha
add
rcl
or
and
inc
mov
roll
mov
inc
adc
or
add
and
or
adc
dec
push
add
push
mov
pop
add
adc
xchg
and
or
xor
lcall
orl
xor
test
xchg
bound
sahf
add
add
adc
sbbb
test
add
addb
or
add
or
adc
sub
ss
add
xchg
and
inc
add
add
and
and
nop
or
jns
add
mov
or
test
inc
sbb
add
dec
rolb
add
xor
mov
adc
inc
adc
or
sbb
test
mov
or
add
mov
add
sbb
adc
adc
inc
adc
lds
and
or
inc
add
adc
dec
add
and
pop
add
add
add
sub
test
and
orl
add
add
cmpsb
add
xchg
add
add
adc
adc
sbb
es
add
add
and
add
popa
sub
xchg
adcb
push
and
js
inc
sbb
or
pop
add
xchg
add
enter
sbb
pop
pusha
xchg
and
adc
adc
add
nop
adc
or
mov
adcl
inc
and
nop
adc
inc
add
sarb
xorl
or
or
addl
and
adc
inc
and
add
inc
and
or
lea
adc
and
adcb
add
inc
jo
add
xor
adc
add
add
adc
inc
add
pop
inc
andb
push
adc
or
or
mov
cmp
push
and
add
pusha
cmp
adc
xor
add
add
add
inc
inc
gs
adc
add
inc
sbb
add
add
xchg
dec
or
or
ds
add
sub
add
or
add
addb
test
and
and
add
dec
add
inc
dec
mov
add
sub
push
mov
pusha
inc
add
add
add
mov
mov
pop
xor
mov
and
inc
addb
andb
or
addb
int3
adc
inc
xchg
addl
add
sub
inc
or
inc
add
cmp
jno
popa
in
and
add
and
or
sbb
push
inc
xor
add
adc
add
lret
dec
inc
les
add
adc
inc
add
push
adc
nop
inc
and
test
adc
push
mov
test
add
add
inc
or
dec
inc
push
nop
adc
dec
adc
add
test
pop
or
add
ret
les
rorb
adc
add
xchg
dec
adc
sbb
insb
test
xchg
inc
mov
adc
add
inc
xchg
or
push
pusha
and
and
ret
addl
adc
add
add
adc
pusha
mov
adc
or
cmp
mov
dec
cwtl
inc
rclb
sub
stos
shlb
cltd
add
inc
mov
mov
and
push
mov
test
and
add
gs
and
push
or
adc
addb
push
xchg
and
push
add
adc
mov
movsb
sbb
adc
dec
add
shlb
lret
add
inc
inc
and
or
or
add
inc
incl
or
roll
test
inc
and
ret
sub
add
stos
push
inc
add
add
add
sub
add
add
add
add
mov
add
sub
add
sub
dec
sbb
push
mov
sub
cs
addb
xchg
or
and
add
inc
adcb
sub
push
add
add
add
add
inc
push
fs
push
adcb
add
add
or
nop
add
dec
or
or
adc
or
popa
inc
rorb
add
or
cwtl
subb
inc
dec
adc
test
arpl
adc
add
das
rol
add
adc
addb
inc
and
dec
add
push
dec
add
or
dec
adc
mov
add
mov
jl
sbb
dec
add
or
mov
add
add
cmp
add
add
add
and
and
inc
dec
adc
add
dec
xor
stos
or
add
push
push
adcb
inc
adc
mov
sbb
test
sbb
and
add
pusha
or
pop
nop
and
push
inc
sub
or
add
add
push
add
mov
or
popa
adc
dec
push
cmpsb
add
or
call
add
add
pop
xor
inc
or
or
pop
bound
add
add
xchg
sub
ret
mov
dec
aad
dec
inc
inc
and
add
xchg
or
addb
add
test
adc
or
add
and
arpl
add
dec
pop
or
es
add
adc
cwtl
inc
add
and
add
rolb
sub
enter
enter
or
dec
mov
xor
sbb
adc
adc
movl
pop
bound
add
and
add
and
dec
dec
sub
enter
dec
or
and
adc
inc
addl
xor
add
adc
popa
mov
adc
fwait
loopne
push
js
or
push
and
mov
add
dec
mov
mov
or
cmp
inc
add
imul
and
add
cmp
or
and
adc
add
add
inc
sub
add
adc
add
mov
add
add
inc
mov
add
sbb
test
add
adc
test
inc
adc
add
add
inc
sbb
adc
adc
push
adc
and
sbbb
inc
and
xchg
push
dec
roll
sbb
sbb
mov
mov
adc
dec
les
mov
sub
add
inc
add
or
push
add
add
adcb
xor
adc
add
dec
sbb
rolb
add
adc
add
xor
shlb
and
pop
push
adc
inc
add
add
push
push
addl
dec
adc
addb
xchg
addb
rorl
add
inc
push
inc
jo
or
and
xor
push
xchg
leave
add
movlps
movsb
mov
and
sbb
cltd
cmp
inc
add
push
sbb
inc
adc
xchg
sub
sbb
add
add
add
xchg
or
add
inc
add
pop
pushf
sbb
and
test
add
mov
dec
and
scas
adc
and
pop
adc
inc
add
mov
mov
and
adc
xor
enter
add
dec
inc
add
or
adc
or
mov
xor
adc
addb
and
lock
orb
pop
add
inc
add
add
inc
mov
sub
push
nop
add
orl
addl
adcb
and
roll
add
add
adc
and
dec
add
push
and
push
add
xor
xor
cmp
sub
sub
inc
add
inc
call
add
add
sub
add
xchg
add
and
jo
add
add
and
add
push
inc
add
add
and
push
addl
pusha
sbb
nop
inc
inc
and
adc
or
or
add
sbbb
sub
mov
add
movsb
rcr
xor
add
enter
and
inc
adc
fimuls
adc
inc
inc
arpl
add
push
and
mov
inc
xchg
or
add
sub
addb
add
add
adc
add
xchg
add
addb
mov
or
orb
inc
cmp
test
inc
imul
add
sub
add
adc
and
and
xchg
sbb
and
pop
and
add
add
or
or
add
adc
push
and
rorb
orl
sub
inc
xor
or
add
add
push
and
xor
adc
add
and
add
movsb
and
or
inc
add
mov
pop
adcl
add
add
mov
or
or
jns
inc
and
and
adc
add
and
add
or
ret
adc
inc
inc
ret
addl
adc
or
add
test
inc
es
sbb
xchg
add
or
adc
add
xor
and
inc
adc
movb
adc
dec
cmpb
and
inc
add
sbb
jb
sbb
inc
adc
and
sbb
and
orb
inc
add
push
add
or
or
nop
arpl
andb
or
xchg
and
mov
mov
andl
inc
add
xor
sbb
adc
add
mov
or
add
and
xchg
inc
add
add
addb
pop
inc
or
sbbb
and
and
pop
clc
add
sub
add
adc
add
push
add
or
and
add
add
jmp
add
sub
add
and
lds
or
add
add
bound
mov
inc
and
and
dec
dec
inc
or
add
pusha
or
add
mov
mov
add
adcb
and
dec
add
add
adc
les
mov
dec
adc
add
adc
xor
inc
pusha
or
add
inc
add
add
sub
add
jo
mov
ret
jb
mov
xchg
cmp
xor
push
jae
sbb
enter
sbb
push
mov
pop
add
pop
adc
or
roll
add
add
jb
cltd
pushf
rclb
popa
adc
adc
inc
push
add
pusha
addl
test
sub
cwtl
in
data16
sub
xchg
adc
push
and
or
mov
add
inc
and
and
adc
add
mov
sub
sbb
andb
or
add
sbb
add
adc
inc
or
add
mov
dec
inc
orb
adc
adcb
add
adc
add
sub
sub
ret
push
inc
lea
or
inc
or
add
inc
add
adc
inc
inc
add
addb
add
and
pop
adc
or
inc
imul
pop
sub
and
add
andb
push
addl
add
add
pop
xor
les
push
add
add
add
je
addl
test
subl
push
dec
add
add
and
add
add
inc
inc
nop
loopne
mov
add
inc
rclb
inc
add
or
test
push
fs
adc
pop
and
sbbb
add
or
adc
push
sub
add
add
shlb
sub
sub
adc
push
add
push
push
adc
inc
adc
mov
andb
sbb
or
xchg
add
add
loop
loopne
sbb
and
or
adc
dec
add
dec
jno
rcrb
add
or
lds
rorb
push
or
or
or
ret
adcb
or
dec
sbb
enter
aam
mov
inc
inc
cmp
or
aad
adc
sbb
xchg
inc
add
adc
add
inc
add
arpl
add
sub
popa
add
add
add
and
mov
adc
inc
add
lock
add
out
rclb
sub
sbb
inc
sbb
or
or
adc
add
pusha
adc
sbb
es
inc
mov
bound
add
and
and
xchg
test
or
test
add
add
mov
add
sub
pop
rolb
add
add
mov
adc
test
loopne
bound
add
add
add
dec
add
and
inc
add
mov
sbb
inc
pop
mov
and
and
or
add
adc
add
add
sbb
or
inc
push
or
sbb
or
inc
add
add
push
and
rclb
or
or
add
add
mov
les
adc
cwtl
movsl
and
shlb
or
adc
add
jo
add
or
or
add
or
mov
xor
or
and
mov
add
add
add
or
add
pop
pop
dec
orl
add
add
adcb
and
inc
and
sbb
mov
adcb
inc
loopne
inc
add
add
test
orb
leave
mov
orb
add
dec
inc
pop
and
and
imul
add
dec
push
sub
add
sbb
push
mov
inc
adc
add
addb
add
test
inc
enter
mov
push
xchg
push
and
js
inc
adc
subb
add
adc
xor
mov
test
popf
lock
sub
mov
fadds
mov
and
and
dec
mov
sbb
sbb
mov
sub
sbb
addl
and
adc
test
and
mov
inc
add
add
addl
or
sub
add
add
push
adc
adc
push
add
sub
push
mov
add
inc
mov
adc
inc
and
add
add
and
dec
cmp
add
add
inc
adc
and
sbb
ret
or
and
add
add
add
add
jno
add
jb
add
jno
add
jb
add
add
add
jb
add
add
add
add
jo
add
jo
add
add
add
add
add
jo
add
jae
add
jae
add
jno
add
jo
add
add
add
add
add
jb
add
jb
add
jae
add
jb
add
jno
add
add
add
add
add
add
add
jo
add
jae
add
jo
add
add
add
je
add
je
add
jne
add
jne
add
jbe
add
add
add
add
add
add
add
add
je
add
jne
add
add
add
add
add
add
add
add
add
jae
add
je
add
add
add
jae
add
add
add
add
add
add
add
ja
add
ja
add
js
add
js
add
add
add
add
add
add
add
ja
add
add
add
ja
add
jbe
add
ja
add
js
add
add
add
jbe
add
js
add
add
add
js
add
jns
add
js
add
jbe
add
add
add
js
add
add
add
ja
add
add
add
js
add
ja
add
add
add
add
add
jp
add
jp
add
add
add
add
add
jns
add
jp
add
jnp
add
jns
add
add
add
add
add
add
jp
add
jp
add
jp
add
jns
add
add
add
add
add
add
add
jns
add
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
addl
add
addb
adc
add
add
jle
add
jle
add
jg
add
addl
add
add
add
jle
add
jle
add
jge
add
add
add
add
add
add
add
add
add
add
jl
add
jg
add
add
add
test
add
test
add
test
add
addl
inc
test
add
add
test
add
addl
insb
test
add
add
add
test
add
addl
cwtl
test
add
add
add
addb
sbb
add
add
test
add
addb
or
add
add
adc
xchg
xor
inc
adc
xor
or
xchg
add
adc
add
addl
dec
or
adc
add
or
add
inc
mov
adc
or
and
inc
adc
and
nop
inc
addb
sbb
add
adc
add
xchg
add
inc
xor
inc
or
add
add
inc
or
pusha
add
add
add
or
xor
add
add
or
pop
add
addb
add
nop
add
add
add
test
push
popa
sub
inc
test
inc
addb
inc
add
or
sbb
and
or
push
adc
sub
mov
sbbb
add
add
dec
inc
or
add
push
bound
inc
add
add
add
add
add
adc
addb
inc
add
xchg
adc
add
or
push
andb
add
add
shrl
or
dec
and
and
add
adc
add
adc
adc
push
add
add
add
add
and
add
loopne
inc
movb
push
or
test
addb
inc
push
adcb
add
jb
add
add
add
add
add
add
inc
imul
add
add
push
adc
les
add
add
and
inc
test
add
or
add
and
sub
add
orb
add
nop
add
and
or
adc
add
aam
mov
orb
str
and
add
add
push
ret
add
add
adc
add
add
mov
add
inc
or
add
nop
add
add
add
add
add
add
add
add
inc
inc
add
and
inc
add
inc
add
add
or
or
adc
call
or
add
add
inc
add
inc
add
je
inc
xor
adc
add
inc
add
adcb
addl
add
and
addb
movsb
add
add
or
adc
cwtl
mov
add
add
and
dec
adc
inc
xor
add
addb
xor
add
push
adc
orb
and
and
add
sub
and
add
inc
or
push
and
les
mov
and
addl
inc
mov
add
adc
add
andb
sub
and
adc
adc
or
xor
addb
add
test
test
jo
inc
inc
sbb
add
arpl
add
rolb
adc
orb
add
add
pop
add
add
int3
add
inc
add
inc
and
mov
nop
add
and
add
lcall
test
cmp
add
adcb
add
add
dec
adc
add
cmp
andb
and
adc
and
add
sub
movsb
aam
orb
shll
nop
inc
or
and
add
or
pushf
adc
inc
adc
arpl
add
mov
or
and
add
adc
adc
and
test
add
adc
add
add
inc
add
add
add
add
add
add
add
inc
mov
add
inc
add
add
jb
dec
xor
add
adc
add
rolb
and
and
pusha
sub
add
add
add
add
add
and
or
push
rolb
add
and
or
or
mov
addb
push
add
add
add
and
add
inc
nop
and
mov
inc
add
cmp
sbbb
loop
rolb
pusha
and
adcb
sbb
add
sbb
or
push
add
add
inc
dec
adc
sbb
and
inc
inc
add
rol
inc
dec
push
add
or
add
add
add
add
and
inc
rolb
nop
or
dec
inc
int
loopne
and
or
inc
addb
add
pop
mov
and
ret
adc
add
add
gs
or
addb
xchg
addl
and
xchg
and
add
add
or
inc
add
int3
inc
or
rolb
push
add
or
add
add
add
and
adc
inc
add
add
or
add
or
or
adc
add
add
addb
and
xchg
dec
add
test
add
add
pusha
inc
add
mov
enter
movsb
or
add
and
add
inc
push
mov
inc
popa
inc
or
int3
xor
and
or
fadds
and
add
sbb
add
push
add
inc
jae
and
test
mov
xchg
enter
inc
add
add
add
push
xor
add
inc
rolb
ret
add
add
add
add
or
adc
inc
add
add
addl
mov
add
inc
insb
in
adc
or
add
push
cmp
add
add
and
sbbb
add
add
add
add
andb
fadds
add
adcb
in
inc
sub
add
add
inc
adc
sbb
add
push
add
add
and
add
add
and
add
add
push
and
add
add
add
pop
pusha
inc
push
add
add
adc
add
adcb
test
inc
add
sbb
dec
test
add
sub
addb
add
xchg
add
add
addb
adc
cltd
add
push
add
and
add
addb
dec
add
cmpsl
and
add
add
or
test
les
and
inc
add
stos
xor
adc
or
cmpsb
rorl
add
add
sbb
or
inc
add
inc
mov
in
or
adc
add
sub
sbbb
and
adcb
dec
orb
push
add
adc
sbb
xor
xor
mov
lret
add
inc
sbb
adc
add
and
add
sbb
add
sub
and
ss
add
add
mov
adc
add
adc
cmp
xor
mov
inc
andb
add
add
xor
sub
add
inc
push
and
add
adc
add
mov
add
add
inc
mov
orb
ret
dec
push
sbb
and
addl
add
xor
and
adc
or
insb
and
push
inc
mov
adc
and
inc
add
adc
add
test
add
xchg
inc
test
jb
add
sub
rolb
push
inc
and
and
add
subb
andb
bound
popa
add
mov
test
dec
inc
add
add
rclb
or
add
add
add
push
add
sbb
adc
adc
adc
add
add
add
inc
scas
add
addb
add
push
mov
add
and
dec
add
push
lds
addb
add
add
add
mov
and
or
add
xorb
adc
adcl
add
sbb
and
test
sbb
pusha
nop
adc
mov
add
and
push
and
push
addb
add
add
mov
add
adc
xchg
sbb
add
or
addb
or
add
dec
int3
mov
and
adc
add
cmp
xchg
add
jo
add
and
adc
add
rolb
add
add
pop
add
mov
xor
add
adc
inc
inc
add
add
sbbb
addb
adc
int3
inc
or
add
mov
add
inc
add
inc
add
and
and
xor
test
and
test
and
adc
inc
or
add
add
add
add
adc
add
sub
addb
insb
add
or
inc
add
adc
rorb
add
or
addb
adc
sbb
add
mov
add
sub
add
add
add
popa
add
add
mov
nop
add
adc
inc
add
movsb
inc
adc
and
rolb
addb
add
inc
add
add
add
mov
add
mov
test
add
add
adc
or
test
adc
add
inc
jno
sbb
add
nop
or
inc
add
push
or
or
mov
add
or
and
add
add
addb
and
push
dec
add
add
mov
andb
add
xor
enter
or
inc
add
and
nop
inc
or
adc
or
add
pop
addb
add
adc
add
and
add
adc
add
add
xchg
add
add
add
pop
dec
or
and
inc
add
es
add
add
add
jno
add
adc
pusha
adc
or
movsb
mov
and
add
add
inc
addb
and
add
mov
inc
or
add
add
pusha
and
add
les
dec
adcb
inc
add
and
add
orb
add
pusha
dec
sbb
add
push
fadds
addb
add
add
or
add
add
and
add
or
dec
les
push
and
or
or
add
addb
and
or
and
rcll
xor
adc
in
inc
add
and
nop
or
add
add
enter
add
inc
adc
or
add
fs
adc
add
add
mov
bound
add
add
add
test
and
add
push
dec
sub
and
add
push
addl
adc
dec
xor
inc
inc
add
or
add
adc
add
add
inc
add
add
add
and
add
add
add
add
add
and
inc
nop
add
or
push
dec
add
inc
enter
inc
xchg
test
push
add
or
add
add
inc
and
and
adc
pop
or
add
add
or
adc
adc
add
inc
sub
adc
add
push
adc
add
xor
add
pusha
or
push
add
add
xor
inc
add
add
inc
add
and
add
pop
add
and
add
pop
rolb
mov
add
add
adc
or
popa
mov
inc
xchg
add
or
add
add
add
add
add
and
and
or
add
addb
add
dec
add
mov
adc
and
add
or
pusha
and
and
add
or
add
inc
and
add
inc
add
push
inc
and
inc
add
inc
adc
addb
add
add
inc
pop
inc
add
mov
adc
inc
add
rolb
add
add
add
add
inc
inc
add
inc
push
addl
inc
cs
inc
inc
add
add
or
sbb
add
xorb
add
fildl
addb
sub
add
inc
addb
add
inc
sub
addb
add
add
cmpsb
addb
or
add
add
add
pop
dec
lock
adc
mov
bound
add
dec
add
inc
xchg
pop
into
adc
inc
add
adc
or
addl
and
add
add
or
add
inc
add
test
and
add
addb
inc
add
adc
and
add
addl
or
or
inc
push
arpl
and
test
loope
add
add
mov
add
addb
xor
xchg
or
test
lods
int3
adc
add
inc
addb
mov
enter
adc
add
add
adc
sub
xor
add
add
add
add
add
add
addb
or
add
test
add
add
add
sbb
add
or
add
and
inc
or
test
add
arpl
ja
ret
dec
jmp
popf
push
repz
or
scas
jns
xor
in
std
push
hlt
jb
repz
cmp
das
sti
lock
jmp
sti
cmc
repz
xor
hlt
add
xor
incl
movsl
xchg
mov
mov
and
dec
or
jno
inc
cs
movsw
adc
ret
xchg
xor
std
movsl
fndisi(8087
ja
shll
fists
or
loopne
mov
cld
das
cmpsl
adc
movhps
xor
jg
or
imul
mov
not
icebp
mov
int3
cmp
mov
dec
mov
mov
push
dec
dec
jne
or
cmp
push
pop
pop
dec
mov
cmp
mov
je
sub
push
stos
test
dec
mov
mov
icebp
xchg
cmp
mov
dec
mov
cmp
cmp
xor
dec
mov
mov
call
orb
fs
inc
mov
shr
pop
rcl
test
mov
mov
mov
test
xchg
jbe
sarl
fldcw
push
cli
cld
fwait
mov
mov
aaa
add
cmp
mov
mov
orb
jmp
jns
dec
mov
cmp
cmp
sti
mov
not
icebp
pop
lods
cmp
adcb
call
jmp
sub
iret
mov
jge
shll
mov
and
push
scas
orb
jmp
sub
jge
fisttps
jl
mov
or
jge
rcl
sbb
adcb
inc
inc
mov
das
dec
mov
xor
std
mov
scas
mov
xchg
cmpb
dec
mov
arpl
test
mov
out
jg
mov
es
mov
test
jmp
dec
mov
loopne
or
cmp
pop
mul
xchg
lock
rcrl
sbb
aam
and
xchg
scas
cld
mov
ja
rolb
and
adc
shll
ja
and
mov
xchg
scas
adc
ljmp
dec
or
sti
lret
mov
jne
inc
add
mov
movl
pop
mov
ljmp
subl
adcb
jae
lds
mov
ret
inc
jle
das
into
pop
pop
int
lods
gs
mov
xchg
add
push
or
out
int
dec
xorb
dec
or
in
out
outsl
je
mov
sti
mov
outsb
in
mov
push
insb
mov
or
mov
xchg
scas
popa
bound
xor
adc
mov
jnp
dec
or
je
mov
ror
neg
mov
fidivs
dec
aaa
rorl
add
ss
movsb
pop
scas
add
cs
roll
cmp
sti
push
xchg
imul
cld
not
icebp
subb
push
outsb
inc
mov
lea
and
pop
push
inc
cmp
int3
js
push
mov
push
aas
cmp
dec
xor
ret
shlb
icebp
das
adc
sti
fimull
lods
jnp
adc
scas
insl
mov
mov
adc
sti
ret
into
push
ljmp
rcrl
dec
movsb
sti
out
jne
sti
aas
repnz
loop
dec
jae
inc
mov
add
scas
stc
push
cmp
mov
cmp
scas
cmp
lods
jnp
es
push
mov
pop
dec
mov
fisttpl
jge
dec
int
mov
jg
outsl
dec
rcrl
gs
fldcw
dec
jae
push
mov
rclb
cmc
cmp
xchg
mov
scas
leave
aaa
daa
cmp
dec
out
jge
or
cmp
inc
cmc
mov
pop
dec
mov
fisttpl
addl
dec
mov
xchg
sarl
jmp
sbb
lds
push
ss
mov
std
pop
imul
pop
pop
aas
shlb
mov
pop
dec
mov
cmp
mov
cmp
add
out
mov
adc
jg
mov
cltd
or
adc
adcl
jae
arpl
mov
mov
inc
push
rcll
mov
fistps
ret
loop
bound
aad
cmp
xchg
roll
pop
jne
jb
dec
movl
mov
dec
mov
cmp
inc
sarl
mov
add
mov
add
cmp
push
mov
rorb
sub
fwait
add
xor
mov
mov
dec
xchg
pop
add
shl
aam
adc
mov
adc
cmp
and
pop
mov
outsl
nop
sbb
mov
pop
dec
pushf
mov
mov
cli
popa
jno
pmaxsw
mov
jp
xchg
outsb
addr16
and
push
imul
pop
dec
mov
mov
int
lcall
dec
jo
xor
jecxz
push
add
sti
mov
push
mov
push
test
mov
mov
sti
int
cmp
add
loopne
xchg
out
sti
mov
mov
jnp
popf
movsb
sti
inc
int
sbb
xchg
lods
andl
test
cmp
adc
imul
jge
rcl
pop
push
adc
cld
mov
mov
fldl
adc
cmp
sti
dec
int
sbb
pushf
int
pusha
cmp
xor
jb
xor
mov
mov
dec
mov
outsb
xchg
sub
jae
push
sbbb
sbb
push
nop
adcb
jb
rol
cmp
mov
pop
les
jmp
inc
jecxz
test
sub
ljmp
pop
loop
popf
mov
test
cs
xchg
add
into
test
adc
sbb
ret
inc
dec
mov
jle
sub
mov
pop
pushf
cmp
cli
sub
in
cmc
adc
lock
pop
and
sub
cmpsb
iret
orl
jns
out
fucomp
insl
xor
das
pop
mov
mov
dec
lcallw
cmp
and
cmpsl
sub
pop
dec
popf
and
add
mov
ds
lea
dec
es
adc
ret
or
mov
xchg
jne
lea
or
sbb
in
lret
jne
adc
xor
or
shl
push
sbb
mov
push
mov
lea
dec
cltd
push
ret
cmpsl
in
aas
mov
rorl
bound
xor
lock
mov
and
adc
int3
pop
in
push
mov
test
es
pop
filds
sahf
aam
pushf
jp
or
pop
xor
xchg
mov
sub
adc
sub
jne
adc
cmp
mov
gs
sub
out
pop
lret
dec
movl
xchg
inc
icebp
rolb
jnp
adc
fisubl
fnstsw
fcmovbe
adc
jo
test
xchg
pushf
xchg
mov
xorl
and
sub
cmp
jnp
adc
inc
cmc
or
push
pop
xchg
sahf
cmp
into
pop
adc
stos
or
and
call
inc
inc
mov
aas
dec
xchg
add
mov
stc
daa
pop
push
push
cmp
cmp
cmp
push
stos
add
mov
lret
xchg
lret
cmpsl
jl
ljmp
jb
or
mov
xlat
into
xorb
aad
int
sub
in
fwait
outsl
pop
imul
stc
mov
ret
push
cmp
mov
scas
shll
jno
push
clc
adc
jae
xor
mov
or
sub
mov
js
mov
pusha
mov
jnp
lret
inc
adc
add
pop
add
and
sarl
add
loopne
pop
iret
or
and
sub
sub
daa
sbb
push
xchg
inc
aam
pop
ljmp
cmpsl
sbb
in
sti
push
push
popf
dec
add
fdivp
gs
lods
and
add
push
mov
add
dec
stos
daa
pushf
xor
fs
push
mov
pop
xlat
rclb
push
addr16
insb
or
aam
pop
jo
push
fistpll
mov
cmp
clc
arpl
aad
in
ret
lods
fdivl
clc
push
sahf
aas
inc
mov
inc
in
in
imull
sbb
lock
cmp
xor
xor
popf
aas
imul
cmpsl
inc
lret
lret
add
ja
adc
inc
push
int3
mov
pop
jnp
jne
stos
jnp
pop
and
add
mov
mov
xor
fdivrl
rcl
jle
jmp
inc
mov
ja
push
cmp
fwait
in
js
arpl
mov
pop
or
mov
sub
sub
xchg
jge,pn
sti
pop
push
sub
mov
xchg
sub
jmp
jae
lret
ret
inc
mov
int
pusha
rcl
addr16
push
sbb
inc
lods
lods
sub
jnp
dec
xchg
jp
jmp
inc
ret
pause
jg
lods
cwtl
cmp
add
dec
pop
loopne
inc
sub
push
lea
mov
sar
test
xchg
push
push
adc
jne
mov
dec
and
adc
cmp
pop
push
cs
inc
inc
add
mov
mov
sbb
sbb
gs
adc
sarl
out
shlb
ja
inc
test
xor
ja
pusha
or
sar
shrb
dec
stos
jnp
xchg
sbb
ljmp
inc
shrl
mov
inc
pop
push
mov
repz
ds
sub
dec
dec
fstpt
iret
push
shrl
movsl
pop
sbb
mov
cmp
repz
movsb
pushf
cmp
sub
shlb
ds
cld
and
ss
aad
bound
jns
cmp
mov
sti
xchg
inc
xor
and
aaa
fisttps
mov
lds
shlb
dec
inc
push
sti
or
pop
cmp
es
xchg
dec
cmp
pop
loopne
and
lahf
sub
movsb
lods
rorb
xor
xor
mov
mov
hlt
push
cmc
dec
movsb
adcl
mov
mov
aas
cmp
insl
arpl
jbe
std
rorl
cs
xor
mov
cmp
out
pushf
movsl
sbb
or
pop
outsl
test
and
mov
push
enter
dec
cmp
add
or
sbb
xor
and
sub
test
stos
je
jl
rol
scas
adc
pusha
js
mov
test
das
lods
add
cs
xor
pop
dec
aam
fs
addb
out
push
insl
pop
clc
or
into
or
sbb
mov
fwait
xor
sub
pop
xchg
push
jmp
mov
sbb
mov
jnp
sbb
jmp
int3
push
aad
rcl
and
pop
push
jo
sti
mov
dec
sbbb
shlb
lock
sarl
lcall
jae
add
cmc
jp
popa
popf
ljmp
sbb
push
outsl
mov
imul
lahf
decb
repnz
out
sarb
pushf
int
test
adc
fidivrs
jl
rorb
push
mov
sub
jns
subl
inc
jp
sahf
jge
int
iret
inc
shr
push
mov
push
xor
leave
jl
std
rcll
nop
lea
sti
mov
inc
rcrl
mov
pop
push
pop
cmp
mov
mov
push
mov
addb
jnp
adc
mov
cmc
lock
fisttpl
push
dec
pop
dec
roll
int
mov
push
int3
imul
das
jno
int
push
dec
leave
add
cmpsl
int
in
adc
or
insb
push
push
sub
stc
outsb
ds
fstpl
bound
nop
in
jb
sar
arpl
fs
test
movsb
ja
sbb
inc
cmp
lahf
push
pushf
pop
dec
mov
imul
add
arpl
jnp
xchg
add
scas
movsl
sti
jb
mov
cmp
or
xchg
sub
jnp
inc
movsb
adc
into
in
jns
xchg
xor
in
cmpl
pop
mov
mov
cmpsb
mov
cmc
mov
xchg
dec
mov
std
sbb
in
mov
nop
int
jb
fcomps
mov
jnp
push
xorb
sbb
aas
dec
test
imul
fisttpl
push
test
insb
shll
adc
xorb
dec
addr16
leave
sub
inc
out
mov
mov
cmp
bound
not
arpl
inc
sub
cmp
aam
inc
outsl
push
jns
test
aam
insb
sti
mov
dec
xchg
shll
aam
push
dec
mov
push
cmp
lcall
cmp
or
movsb
xor
data16
outsb
or
mov
scas
or
dec
aas
ret
add
add
cmp
enter
adc
jl
push
adc
mov
fucomp
jb
adc
stos
test
jbe
leave
mov
push
and
sub
test
xor
mov
sahf
adc
jno
into
xchg
inc
push
gs
int
adc
movsl
jne
ljmp
jno
push
stc
pop
or
daa
pop
or
sti
jb
dec
scas
mov
jne
push
mov
cmc
lods
out
dec
testl
cs
lods
stc
popf
imul
iret
add
out
int3
and
fs
clc
lods
jb
je
repnz
inc
iret
aas
or
dec
push
or
jae
mov
inc
setae
jb
fwait
push
ds
arpl
jmp
sub
jg
into
xchg
add
jecxz
mov
pop
xor
insb
cs
dec
cmc
jb
adc
inc
inc
xchg
or
arpl
add
mov
push
pop
inc
jg
test
cmpb
mov
and
mov
push
aam
sti
rolb
dec
mov
jl
mov
mov
sub
xchg
and
testl
dec
and
cmp
out
push
mov
push
sbb
js
daa
jmp
cmp
xchg
and
dec
fwait
inc
fldcw
sti
stos
test
insb
enter
pop
or
jg
std
das
repnz
idivb
xor
lahf
mov
pop
and
orl
loope
pop
test
hlt
and
aad
sub
sbb
mov
mov
outsb
sbb
xchg
sti
roll
mov
push
aam
stos
dec
xchg
pop
jbe
mov
adc
sbb
dec
fnsave
outsb
inc
pushf
or
out
sti
xchg
or
xchg
mov
cmp
push
sub
xor
xlat
jno
js
inc
lods
push
insl
inc
adc
frstor
dec
mov
add
dec
lods
cmp
inc
fs
lea
int
add
xchg
sub
mov
cmc
cmp
sbbb
push
ja
push
mov
or
mov
add
add
adc
sti
outsl
push
cmc
mov
mov
jns
sti
test
inc
jns
jge
push
push
adc
mov
sub
mov
movb
subl
add
or
outsb
mov
test
add
pop
xchg
cmp
push
ds
pop
or
lcall
sti
std
ja
mov
fwait
iret
or
xchg
es
enter
dec
and
add
shrb
repz
sbb
out
iret
scas
mov
mov
fisubrs
enter
lods
imul
sbb
ret
push
jnp
rol
lcall
mov
jnp
subl
jmp
adc
lret
in
cmp
leave
xchg
stos
sub
or
dec
test
orl
fdivrs
imul
dec
int
push
sbb
mov
and
cmp
arpl
xchg
jnp
ljmp
pop
cld
jae
test
mov
dec
rcrb
jnp
and
xchg
push
mov
xchg
bound
stos
jnp
xchg
mov
mov
out
ljmp
fadd
fs
add
adc
mov
and
add
das
pop
fisttpl
inc
dec
xchg
repnz
pop
fdiv
mov
sub
push
xchg
jp
push
or
adc
imul
in
dec
add
ja
orb
cld
aad
and
shll
loop,pt
sti
jo
iret
leave
addr16
insb
sbb
int3
and
ja
shll
jge
stos
es
pop
popl
addb
fidivrs
rcl
cmp
mov
xchg
cmp
cmpsl
popf
adc
cmp
lock
out
mov
add
push
lret
jne
push
js
push
fisubrl
hlt
pushf
jnp
lods
xor
sahf
test
adcb
mov
mov
cmp
cld
cmp
dec
icebp
jp
rolb
dec
movsb
icebp
mov
and
cmp
pop
fisubrs
fwait
dec
fidivrs
outsl
hlt
xor
jbe
lds
dec
adc
jp
xorb
cmc
dec
mov
sahf
xchg
ja
shll
repz
fwait
cmp
scas
repnz
push
lret
cld
sbb
pop
add
push
shll
inc
int
into
jge
rcrl
jb
jns
xor
sbb
loopne
pusha
dec
loop
cmpsl
xor
int
ja
mov
insb
mov
lods
shlb
pop
pop
pop
inc
dec
clc
sbb
sti
mov
fdivl
cmp
jl
cld
sbb
scas
fimuls
imul
adc
dec
xor
add
mov
enter
push
mov
inc
roll
sahf
dec
mov
sub
in
icebp
outsl
mov
jp
mov
mov
mov
adc
cltd
in
or
jae
inc
pop
jb
push
sub
imul
roll
xchg
into
or
negl
cmp
lret
movsl
pop
add
mov
mov
inc
dec
sub
adc
mov
stos
jnp
inc
xchg
push
fs
leave
pop
sbb
inc
fsts
cmp
dec
adc
movsb
add
xchg
xor
fwait
add
into
push
sub
sahf
mov
mov
mov
popf
inc
std
xchg
cwtl
and
out
xchg
cltd
jge
jae
pop
icebp
jnp
jecxz
fidivl
fimuls
in
mov
fwait
rol
adc
push
pop
ds
roll
imul
jle
pop
jp
mov
fcmovnbe
pop
mov
dec
mov
cmpsb
roll
sbbb
jge
jne
push
mov
rorb
iret
xchg
cltd
mov
or
xchg
popa
jl
jl
ret
icebp
cmp
push
popf
cmp
cmp
or
xor
jp
add
mov
loop
enter
fnstenv
adc
sub
hlt
mov
rcl
sub
cwtl
sub
mov
call
jnp
pop
and
pop
test
and
sub
sub
mov
pusha
push
test
std
cli
push
out
mov
xor
mov
xor
adc
mov
out
imul
stos
pop
jo
subb
jle
fs
mov
popa
and
repz
xchg
aad
scas
or
mov
xor
mov
pop
inc
popa
dec
test
mov
fisttps
mov
scas
je
pop
jne
sub
inc
ljmp
push
push
cmpsl
xor
int3
pop
hlt
fsubrl
cmp
sbb
dec
not
dec
cmc
push
or
clc
dec
mov
int
cmp
pop
sub
lret
lret
xchg
push
inc
icebp
inc
cwtl
cltd
std
mov
mov
xchg
mov
popa
pop
mov
mov
pop
push
sub
call
xchg
inc
cmpsb
inc
cmpsb
stos
mov
sahf
cld
fwait
sti
xor
mov
mov
dec
jmp
mov
adc
lea
js
or
call
push
lcall
sbb
mov
sbb
xchg
sbb
mov
mov
popa
int
fmull
or
out
push
cmp
jae
mov
inc
cltd
imul
cmp
test
cld
lods
repz
cmp
scas
or
adc
pusha
add
and
mov
push
sahf
loope
je
in
pop
xchg
or
xor
sbb
fstpt
add
out
mov
and
pop
pop
cmp
sahf
int
add
mov
adc
jle
push
mov
jg
scas
sub
mov
dec
cld
int
xchg
xorb
add
mov
dec
dec
or
and
dec
pop
subb
mov
dec
inc
lret
stc
dec
ja
jnp
mov
jno
sahf
jmp
ret
in
cmp
movsb
ret
mov
xchg
adc
xchg
ja
fldenv
jno
std
sti
enter
pop
and
inc
mov
mov
ret
dec
pop
or
push
mov
mov
sti
mov
movsb
pushw
popf
mov
push
or
rorl
jl
mov
sbb
xor
fiaddl
icebp
and
push
in
mov
lds
addr16
lahf
call
jge
push
add
enter
mov
fs
mov
xchg
mov
test
lock
insb
sbb
pop
in
shll
cld
mov
rcrl
sub
and
inc
push
cmp
lret
pop
lahf
xchg
dec
cmp
dec
repz
inc
or
std
jnp
pop
stos
inc
mov
mov
xor
movsb
movsb
int3
cwtl
jnp
and
and
dec
mov
adc
fcmovnb
mov
aam
and
insb
push
pop
or
fldcw
or
adcl
jae
xor
sbb
add
call
rcll
jmp
mov
mov
xor
loope
adc
mov
aam
popa
add
mov
xchg
stos
hlt
insb
insb
push
repz
jnp
push
add
js
leave
mov
ffree
stc
mov
mov
in
fwait
jae
lret
pop
int
or
mov
sbb
or
lock
push
mov
out
cmp
into
xor
push
xor
fwait
mov
fistpl
mov
filds
imul
movsb
and
mov
out
fcmovbe
dec
cmp
shrb
outsl
aam
jge
jno
adc
xchg
outsl
mov
stos
dec
out
std
mov
pop
mov
mov
cmp
pop
orb
jmp
mov
in
cmpsb
jae
in
add
pop
ja
cld
xor
sti
insb
fbld
mov
scas
mov
push
loopne
mov
sbb
inc
cmp
xchg
lret
ds
or
jnp
xchg
insb
cmpsb
leave
ret
mov
or
test
outsl
int3
pop
xor
xchg
sti
in
mov
mov
pop
or
out
int
xchg
fs
xchg
pop
adc
mov
dec
push
pop
jmp
pop
sub
fistpl
outsb
sbb
pop
and
call
jnp
aas
mov
cmpsb
xlat
jns
push
arpl
bound
int3
push
pop
or
xchg
jecxz
mov
test
mov
cld
insl
mov
test
aas
push
insl
push
sahf
in
push
mov
cmp
or
mov
push
lret
or
mov
and
cld
ss
inc
lret
inc
fbld
dec
cli
imul
mov
sbb
cmpsl
inc
xchg
or
rep
pop
test
add
or
xor
or
adc
scas
mov
cltd
lret
xchg
push
sub
push
mov
cmpb
insb
inc
mov
mov
cli
lods
dec
ret
or
out
shlb
xor
mov
imul
popa
mov
sar
addb
test
lahf
fwait
sub
add
loopne
outsb
add
cmpb
lcall
lds
inc
mov
adc
and
jns
cwtl
mov
dec
mov
mov
pop
mov
and
daa
jg
stos
cld
dec
xor
lcall
outsl
mov
test
push
and
testl
pop
test
pop
ds
es
stos
adc
lea
jno
pop
push
into
hlt
adc
dec
loop
cmp
int
sbb
mov
pushf
inc
sti
push
and
cmp
inc
sub
and
pop
push
enter
jl
cmpb
xor
aad
or
les
dec
dec
sub
divl
xchg
sub
and
mov
mov
cmc
sarl
sub
or
arpl
outsb
test
mov
mov
mov
orl
cmp
in
lea
lea
push
faddl
popf
stos
add
bound
fiaddl
repz
int3
xor
mov
or
enter
or
or
fisttpl
and
mov
pop
test
jo
js
pop
push
mov
mov
adc
cmp
fistpll
mov
jnp
and
in
mov
inc
cld
push
push
mov
imul
aas
mov
xor
aaa
inc
aam
fwait
daa
or
or
xchg
and
popf
sbb
pop
insb
sub
xchg
add
and
mov
fmuls
push
push
cmp
mov
cmp
jl
inc
in
aas
mov
or
cmpsl
mov
adc
add
sahf
sti
pcmpeqb
cmp
scas
loopne
mov
loop
xchg
in
dec
or
bound
sbb
fistpl
mov
jl
cmp
pop
lret
insb
aaa
inc
sub
imul
cs
sub
fwait
dec
cmovno
pop
loop
mov
jnp
jae
out
xchg
orb
jns
cwtl
or
push
inc
ret
std
mov
cmp
repnz
add
mov
stc
ja
mov
lcall
adc
sub
dec
mov
jbe
cmc
jmp
lea
inc
jg
xor
dec
cmp
rolb
pop
int3
or
dec
and
cmp
dec
rorb
cmpsl
mov
sti
fmul
or
xor
mov
popf
int
cwtl
fimuls
faddl
xchg
sub
dec
adc
mov
inc
jge
add
or
dec
or
add
dec
push
pop
cmp
push
sti
lcall
aas
adc
push
mov
jecxz
mov
jnp
pop
psrlw
jg
mov
or
cmc
push
jmp
out
adc
and
jmp
cmp
jnp
jmp
clc
enter
jmp
jne
cld
add
and
das
jo
dec
cmp
or
jp
mov
sti
popf
pop
sbb
loopne
adc
sub
cmpb
fcoml
fwait
mov
pop
cmp
push
or
cwtl
jle
push
test
cmp
sbb
cmp
int
fwait
out
jg
aad
jb
lret
lret
mov
cld
fldt
idivl
mov
stc
loope
sti
aad
or
xchg
jl
dec
jmp
inc
sub
mov
hlt
xlat
adc
jl
sahf
das
inc
adcl
scas
std
jne
jp
in
jns,pn
std
popf
insb
or
cmp
lahf
jnp
imul
pop
sarb
cmp
cmp
push
mov
stos
xchg
push
mov
sti
out
jnp
sbb
jnp
in
adc
dec
movsb
mov
andb
ja
adc
out
pop
ds
test
aas
push
les
xchg
and
test
sub
icebp
or
sub
inc
add
jo
test
mov
or
bound
pop
mov
les
dec
dec
into
lea
popl
dec
aam
add
jne
addb
jmp
or
adc
dec
out
or
mov
xchg
add
mov
sub
jg
rorl
mov
int
pop
arpl
vmwrite
adc
into
enter
xor
int3
sbb
fiaddl
xor
fisubs
lea
mov
push
cmp
fcomps
push
loope
cmp
sti
in
and
push
ret
sarl
mov
push
imul
or
fsubrl
gs
popa
dec
pop
stc
xchg
mov
imul
in
mov
push
cmpl
adc
repz
mov
addr16
imul
or
test
fwait
roll
lret
push
push
std
sbb
ja
loopne
rcr
mov
adc
cltd
add
cmp
mov
stc
sti
mov
and
xlat
adc
xchg
mov
pop
int
pushl
xchg
imul
mov
mov
add
ljmp
in
push
mov
or
lock
jp
push
jl
mov
mov
push
mov
aam
mov
sti
lods
pushf
and
cli
mov
mov
shrb
add
or
leave
jb
mov
jmp
int
sbb
subl
aaa
pop
sbb
dec
sbb
ljmp
inc
loope
push
nop
add
cmc
ret
mov
mov
cmpb
ljmp
adc
and
test
mov
pop
pop
ret
rorl
mov
pop
lea
push
mov
inc
cmp
lods
lock
mov
jp
xchg
sbb
push
rolb
sbb
ret
outsb
mov
or
jnp
xchg
subb
test
into
sub
inc
cmp
aam
stos
mov
jo
gs
jp
inc
dec
xchg
fs
aad
mov
mov
cmpsl
outsl
or
ret
sti
das
jae
and
popf
iret
ficompl
sahf
add
inc
sar
mov
testl
fisttpll
out
dec
xchg
sbb
fsubr
mov
mov
arpl
adc
mov
ds
sti
jg
pusha
mov
fdivrs
clc
rorb
adc
jl
cmp
mov
ds
xor
fs
dec
addr16
xchg
shll
ss
mov
push
in
xchg
mov
cwtl
inc
mov
dec
fcmovnbe
pop
cmpsb
or
out
mov
jl
add
mov
repnz
inc
and
cmp
mov
jno
fidivs
out
sub
sub
mov
data16
fbld
or
or
cld
pop
push
faddl
gs
rcrl
mov
mov
or
pop
aaa
ss
cmp
into
mov
scas
aam
ja
imul
push
dec
lock
push
push
jl
mov
repz
arpl
mov
cmp
mov
es
inc
xchg
jmp
dec
scas
jnp
xor
ljmp
add
pop
outsl
in
adc
dec
xchg
sarl
cmp
fs
sub
cmp
xor
push
fcomps
fbstp
dec
sbb
insl
idiv
ja
push
outsl
push
jbe
movsl
rcll
cwtl
sbb
leave
jns
mov
cmp
jb
stc
sbb
dec
movsl
mov
add
addr16
stc
or
cmp
out
adc
outsl
or
jns
push
jne
dec
mov
out
fs
pop
inc
jge
sbb
into
cmp
inc
dec
lods
cltd
pop
or
push
push
in
arpl
divb
mov
arpl
insl
out
add
jmp
add
pop
xchg
mov
push
mull
imul
sub
int
and
test
mov
jl
push
cmp
add
or
imul
jnp
sbb
stos
int
pop
fwait
pop
js
mov
push
mov
dec
movsb
add
pop
rsqrtps
dec
shll
loopne
test
js
mov
shlb
mov
out
cmp
dec
test
cmp
jmp
out
push
jmp
mov
sbb
xchg
or
scas
mov
jmp
mov
push
lret
cld
out
add
push
add
js
lea
push
mov
lods
pop
out
mov
pop
add
dec
cmc
adc
test
out
mov
rcrl
lods
movsb
lods
cmp
add
pop
jns
lock
dec
adc
jmp
outsb
repz
adc
repnz
push
add
lcall
aad
lahf
or
mov
sbb
dec
lcall
test
imul
daa
shrb
mov
ret
pop
sub
push
xchg
lcall
adc
clc
xchg
lock
pop
decb
mov
sbb
or
outsl
mov
lret
mov
shl
xor
testl
push
add
mov
imul
mov
dec
imul
pop
xorl
or
ss
jl
pop
ja
push
mov
cmpsb
mov
xchg
push
shll
fs
xor
mov
dec
xor
jnp
repnz
xchg
sbb
divb
lea
loope
pop
inc
rcrl
into
jo
psubusb
push
mov
enter
fwait
stc
mov
cld
sub
fs
pop
lods
lea
mov
add
fsubl
pop
es
int
iret
jb
aas
negb
outsb
mov
aad
xchg
jnp
jl
or
dec
stc
outsb
pop
inc
add
mov
sar
std
xchg
mov
add
imul
hlt
or
inc
jge
xchg
lcall
data16
cmp
inc
shrl
scas
add
test
rorb
fwait
cld
pop
nop
insb
pusha
adc
mov
jl
mov
sbb
mov
mov
mov
dec
lock
je
mov
dec
cmc
bnd
dec
jl
pushf
mov
popa
push
shlb
push
stos
or
pop
fiaddl
push
inc
push
push
mov
or
adcb
sub
mov
scas
into
cmp
add
push
sub
xchg
cmp
into
outsl
les
jmp
daa
in
idivl
add
scas
cld
mov
xchg
ds
cltd
cmovge
mov
cwtl
subl
jnp
sbb
mov
int3
sbb
pop
mov
push
jno
jno
sahf
scas
dec
inc
push
sbb
sub
shrl
pop
sbb
addl
data16
jnp
pop
ret
pop
xchg
js
into
add
pop
xor
adc
scas
aaa
movsl
sub
add
loopne
dec
out
cmp
pop
adc
lods
stos
pop
dec
or
mov
ljmp
sahf
mov
icebp
fildl
or
sti
mov
stos
xchg
cmp
sahf
inc
stos
ljmp
or
sbb
sti
lods
icebp
jae
lods
jecxz
call
mov
pusha
jno
iret
jge
dec
js
jg
xchg
ret
or
jmp
insb
mov
orb
cmp
bound
and
xchg
lcall
or
pop
repnz
lret
xor
and
mov
dec
mov
mov
es
int
sbb
mov
sbb
inc
mov
cli
push
arpl
or
addl
arpl
or
imul
jecxz
mov
sti
xor
data16
jge
pop
aas
lods
jb
ja
adc
and
mov
aad
nop
push
mov
add
mov
lret
dec
adc
or
cmpsb
sbb
loop
int
mov
mov
cld
adcl
pushf
xlat
lea
jle
sarl
cld
rol
xor
lcall
mov
jno
sbb
sar
mov
call
mov
imul
jnp
out
dec
fistpll
xchg
pop
sbb
seto
dec
push
fwait
or
insb
mov
mov
jno
jg
imul
sbb
or
jnp
mov
dec
mov
clc
xor
sub
inc
jne
and
pop
inc
or
js
mov
enter
xor
imul
arpl
sbb
in
scas
pop
ficoml
test
xchg
rcrb
mov
sbb
in
xor
xlat
das
sbb
pushl
fistpl
jae
sti
shlb
mov
or
jnp
lds
and
faddl
jnp
mov
xor
mov
pop
sub
xchg
scas
dec
fldl
add
inc
ja
int3
in
cmc
mov
insl
sbb
cmp
popa
add
pop
dec
lods
in
pop
adc
xchg
dec
dec
js
dec
stos
or
ss
scas
push
cmp
mov
jb
push
push
xor
fcoml
not
hlt
lcall
js
mov
test
inc
fstp
pop
jnp
lahf
aad
loopne
aaa
loope
inc
mov
outsl
xor
pop
lds
notl
addl
dec
sub
push
sub
inc
mov
jl
lock
sahf
cwtl
sub
add
jbe
ds
jp
jne
scas
hlt
jbe
js
pop
xlat
xor
cmp
mov
push
pop
add
stc
sarb
je
or
test
mov
jge
xchg
sarb
or
adc
xchg
cmp
inc
or
dec
leave
mov
sbb
lods
insb
mov
test
js
sub
nop
or
xchg
push
jl
mov
lods
add
inc
or
mov
pushf
inc
mov
jnp
gs
scas
pop
mov
mov
cmc
imul
dec
shrb
pop
and
add
in
or
mov
add
inc
pop
lret
jl
call
push
popa
test
sub
stos
int
pop
aas
pushf
loop
in
mov
inc
or
dec
scas
filds
int3
jne
arpl
subl
and
lcall
or
dec
inc
mov
cmp
inc
adc
les
mov
push
dec
add
negl
dec
jmp
sbb
icebp
mov
inc
lock
sub
jge
xchg
cld
pop
lret
imul
pop
cmpl
push
dec
mov
adc
cmp
pop
cmpb
int3
lods
and
leave
xchg
stc
cmc
xchg
insb
scas
dec
jns
popa
aam
jb
mov
pop
cs
jb
push
outsl
pop
lret
ret
idivl
std
arpl
imul
dec
cmp
lret
sti
shll
add
inc
jg
mov
into
pop
pop
xchg
add
aas
data16
fs
jl
inc
xchg
insl
stos
cmp
mov
sub
ss
ficoms
or
loop
mov
iret
cwtl
stc
mov
add
popa
js
ret
mov
fs
nop
jnp
mov
sbb
xchg
xlat
xor
mov
inc
idiv
pop
fwait
inc
xchg
push
dec
or
mov
and
push
xchg
cmpsb
adc
icebp
jmp
sti
loope
sahf
ret
scas
push
aaa
inc
pop
rorl
scas
jmp
enter
sub
push
gs
inc
pop
addr16
sub
mov
pop
fistpl
add
cmpb
insl
jno
test
or
or
mov
cs
out
clc
out
daa
cmp
sarb
xchg
adc
adc
sub
pop
and
push
test
sbb
sahf
and
pop
cmp
dec
adc
stos
ljmp
mov
rorb
jl
mov
or
mov
mov
jne
pop
jl
xchg
add
test
test
xor
cmpsl
roll
in
mov
orl
and
mov
mov
mov
fimull
mov
push
int
xchg
pop
push
cmp
lods
jns
insb
stos
pop
int
lcall
cmp
clc
lret
sahf
xor
push
popa
shll
call
xor
std
out
fidivrs
jo
pop
inc
and
sub
icebp
adc
or
cmp
add
ss
std
aam
lcall
pop
cmp
cmp
data16
cmp
inc
sbb
aam
sub
sub
dec
test
enter
sbb
fcoms
aas
or
es
xchg
inc
dec
sbb
xchg
loopne
push
or
pop
inc
loop
sbb
mov
dec
int
out
sub
mov
inc
adc
jo
mov
mov
lods
xchg
mov
adc
mov
mov
jp
jnp
lds
outsl
or
sub
data16
jp
sub
pop
lods
leave
in
xlat
push
mov
jb
cmpsb
pop
mov
sub
scas
arpl
dec
inc
aad
rorb
mov
bound
add
iret
inc
jno
in
jl
dec
xchg
cmp
jno
test
ss
cltd
repz
call
or
xchg
pop
mov
pusha
push
pop
xor
dec
push
jb
or
push
hlt
jge
push
push
orb
xchg
cld
or
cld
and
cmc
cmp
jmp
pusha
sbb
fiaddl
ret
divb
in
pop
mov
jg
xchg
or
std
and
rorl
xorl
pop
movl
les
push
popa
addr16
cs
xchg
orb
jno
mov
test
cmp
lods
daa
cld
pop
pop
xchg
or
inc
js
mov
xchg
jb
fildll
adc
mov
loopne
cld
in
or
leave
mov
repnz
pop
int
xorl
xor
mov
stc
pop
aaa
in
loopne
lock
sub
ds
cld
cltd
pop
push
in
int3
ja
fs
inc
mov
pop
sub
cltd
jae
adc
test
insl
fstpl
push
or
or
rorb
sbb
dec
ret
mov
sub
jnp
pop
jmp
fwait
cmp
adc
sbb
shll
aaa
iret
jae
loope
xchg
cmpl
mov
inc
movsl
clc
in
pop
pop
rcrl
jno
and
mov
fmull
pop
lret
sbb
jg
push
mov
and
add
pop
sbb
xlat
inc
in
and
lahf
mov
ds
inc
jp
adc
jae
inc
and
jg
pop
popl
ljmp
jno
cmpsb
mov
out
icebp
into
and
insb
cmp
sub
jle
sub
sbb
add
cmp
divb
mov
jbe
pop
mov
in
cwtl
push
jbe
loope
mov
lea
xor
push
int
add
adc
cmp
xchg
dec
jne
cmovs
insl
aad
dec
movsl
jo
pop
push
cmp
wrmsr
test
lcall
inc
push
push
test
lods
mov
and
in
sbb
xlat
lock
loopne
and
out
jge
cwtl
cltd
mul
sbbb
or
insl
in
jno
je
jmp
sub
jne
movsb
mov
jno
pop
pop
lcall
addr16
jp
xlat
xor
jnp
or
jp
or
stos
add
aaa
sbb
or
sub
mov
in
movb
jge
stc
mov
pop
mov
adc
shrl
add
push
inc
jne
mov
xchg
cld
into
mov
mov
jmp
pushf
mov
mov
pop
into
je
mov
lcall
push
pop
pop
lahf
dec
sahf
sti
shrb
push
cmp
push
jle
sahf
dec
fstpl
das
jae
sbb
cmp
ss
add
mov
cld
xor
stos
scas
pop
dec
fdivl
dec
std
mov
mov
dec
js
lds
mov
pop
sbb
pop
mov
adc
sti
inc
dec
pop
addb
mov
lret
das
xchg
lret
into
in
jnp
movsl
dec
cmp
test
insl
sarl
mov
daa
push
ljmp
pop
jle
push
sar
adc
cmp
and
jg
sti
sbb
out
cmp
sbb
fistpll
mov
pop
dec
inc
scas
pop
lods
push
lods
movsl
aad
jns
fcoms
mov
sbb
repz
sbb
mov
mov
mov
push
fwait
inc
leave
dec
adc
stos
je
fs
mov
push
inc
imul
loope
xchg
out
arpl
sti
add
sub
fistpl
mov
je
cmp
mov
shll
sbb
call
lods
in
xor
inc
add
inc
into
sti
cmp
or
cmp
aad
pusha
idivl
pop
ss
lahf
pop
pop
test
dec
xor
in
mov
js
sbb
ret
cld
lea
xchg
divl
pop
leave
push
int
fucomp
jno
jns
popa
add
sti
js
int3
xchg
cmp
add
fs
in
int
prefetchw
inc
popf
inc
mov
dec
ss
in
fdivr
rol
cmpsb
aas
cmp
loop
lahf
and
insb
xchg
dec
mov
fsubrl
or
aam
fldcw
cmpsl
int
cld
aas
jb
inc
dec
mov
jmp
push
adc
xor
sti
or
mov
ss
mov
dec
mov
ljmp
push
mov
jns
mov
cmp
je
xchg
mov
mov
xor
add
repnz
jle
mov
jmp
js
dec
cmpsl
jb
sti
ret
test
xchg
insb
adc
mov
cld
ja
jmp
and
jge
fldcw
pop
cmpsb
loop
push
push
jl
cmpsb
push
cmpl
inc
or
ljmp
fwait
mov
stc
push
xchg
mov
andl
or
mov
or
xchg
jae
jle
dec
inc
pop
fs
push
pushl
sti
lods
xchg
pop
push
aaa
or
fcmovbe
lds
or
mov
xor
or
fs
dec
xor
pop
xlat
xor
mov
mov
jnp
cmp
sub
mov
jle
push
test
push
cmp
lea
ret
mov
jg
mov
ret
sbb
or
jecxz
sahf
mov
dec
orb
or
inc
arpl
jecxz
push
jl
loope
mov
xor
icebp
subl
sysenter
sub
xchg
jl
xor
lea
jp
fcoms
call
mov
sti
jae
fsubrp
imul
xchg
push
jne
mov
add
sti
cmp
and
std
xchg
pop
mov
xchg
ljmp
inc
aas
xchg
mov
xor
dec
cmpsl
out
in
movsl
push
lret
lret
cmp
xor
movsl
pop
fmull
stos
cmp
and
cmc
popf
imul
or
jge
jbe
inc
fs
iret
sarb
xchg
fwait
lahf
sbbb
lcall
imul
adc
push
inc
ret
scas
bound
mov
ret
cmp
lods
push
xor
xchg
cld
mov
xchg
bound
jge
ds
scas
mov
les
pushf
sti
leave
inc
dec
dec
pop
cmp
pop
push
dec
in
jnp
rclb
fwait
pop
inc
cld
jae
mov
dec
jnp
jno
push
mov
js
sbb
ss
mov
cmp
fidivrs
insl
aaa
shl
rcl
repz
or
xor
fcmovu
subl
xchg
xchg
mov
jecxz
push
std
int
ja
mov
mov
jne
inc
mov
pop
mov
mov
popf
or
cli
stos
or
mov
daa
lods
jp
dec
jb
dec
xchg
mov
cmp
out
dec
daa
roll
data16
movsl
cmp
mov
jge
fmul
push
dec
jo
add
jno
jp
mov
fwait
clc
movsl
or
incl
dec
in
xor
ds
out
push
aam
and
inc
std
add
imul
les
sbb
pop
std
mov
daa
inc
xchg
fdivrl
in
sti
stos
pop
leave
clc
outsl
mov
jmp
adc
arpl
in
push
dec
sub
mov
out
cmp
sti
pop
mov
push
sbb
xchg
shll
mov
aam
cmp
sub
pop
adc
mov
sbb
fisttpll
rol
or
lea
or
out
je
adc
pop
lods
xor
repz
std
jmp
mov
mov
dec
dec
dec
aaa
dec
jbe
add
mov
ljmp
lods
clc
fiaddl
shrb
daa
dec
cld
or
or
sub
fsubrl
jl
inc
test
dec
dec
les
or
mov
mov
mov
shl
push
sub
iret
xchg
mov
cmp
sub
imul
or
sub
mov
addb
daa
jmp
or
add
mov
pop
cmp
insl
push
or
cwtl
push
or
inc
pop
movsb
and
cmp
push
int
mov
mov
xchg
int3
aaa
inc
ror
jnp
test
roll
daa
mov
push
mov
mov
mov
mov
mov
in
jns
arpl
mov
sub
dec
dec
pop
out
iret
sti
lcall
jecxz
push
clc
sub
lcall
jne
jge
jbe
adc
addb
cld
add
mov
mov
in
pop
push
and
jnp
xor
repz
pop
mov
out
andl
cwtl
sub
push
mov
jne
or
mov
or
push
cli
jnp
sbb
or
rol
sti
inc
mov
in
mov
xchg
xchg
imul
aam
test
stos
xchg
dec
mov
loop
and
lahf
lea
dec
mov
sub
cmc
sub
sbb
pop
aam
daa
cmc
mov
test
arpl
loop
xor
jae
mov
je
dec
xor
pop
jae
cmc
fimuls
mov
je
mov
dec
inc
pop
adc
movsb
push
ret
mov
mulb
aas
pop
mov
push
mov
hlt
out
out
sbb
sub
test
jp
stc
jbe
push
int3
sbb
call
push
mov
or
xor
dec
push
or
mov
in
nop
jnp
lock
or
push
mov
pop
std
push
dec
nop
sbb
jne
cmp
adc
xlat
data16
iret
add
sbb
mov
push
dec
movsb
push
push
push
mov
lret
jnp
bound
loop
xchg
jle
movsb
and
mov
rcrb
mov
cwtl
loopne
jmp
shll
dec
add
cmp
and
fadds
xchg
leave
and
inc
insb
jge
mov
mov
movsb
in
sti
out
int3
out
fwait
cld
cs
out
les
arpl
int
and
push
leave
inc
sahf
adc
push
sahf
in
add
dec
pop
movsb
cmpsb
ffree
add
pop
mov
dec
pop
xchg
sti
cmpsl
push
call
into
xor
out
ljmp
jge
add
dec
inc
jo
and
int
iret
scas
ret
cltd
push
sub
pop
mov
cld
push
imul
cmp
pop
push
insl
lcall
and
or
sbb
lods
addr16
mov
and
pop
jb
std
mov
push
jae
mov
lock
sbb
add
shrb
nop
mov
mov
mov
ja
je
pushf
mov
xor
xlat
popf
sub
call
dec
mov
jmp
or
outsl
xor
mov
lds
inc
cld
inc
cmp
mov
jno
into
cmp
push
cli
pop
lock
out
sti
and
cmp
divb
push
xor
int3
inc
in
or
mov
iret
adc
push
sti
popa
push
cmp
aam
dec
push
out
add
push
xor
sahf
dec
int
mov
cmc
adc
negl
sub
cmp
sti
icebp
mov
dec
popa
xchg
insb
out
das
xchg
adc
fidivs
cmp
mov
stos
adc
movsl
incl
pop
fimull
scas
and
ret
inc
mov
ret
bound
pop
lods
lret
mov
pusha
push
in
cmp
dec
mov
sti
mov
sbbl
mov
loop
pushf
xchg
fs
insl
or
mov
lea
push
js
cltd
cmp
push
sbb
lds
add
push
cmp
push
xchg
mov
push
mov
insb
mov
gs
movsb
adc
inc
jbe
and
xor
dec
pop
xchg
hlt
outsl
xor
dec
cmp
rcrl
pushf
inc
and
bound
orl
pop
pop
cmpsl
jne
aam
add
adc
dec
xor
pop
sub
ror
insl
int
pop
jl
mov
jno
and
movsb
daa
sbb
pop
push
cmp
clc
mov
cmp
int
jle
jno
and
jbe
or
leave
mov
mov
fwait
cmp
fwait
cs
cmc
inc
ja
pop
cltd
pop
stos
rolb
mov
mov
inc
add
sub
bound
or
mov
cmp
test
sbb
sbb
fmul
mov
xchg
inc
adc
or
jae
inc
mov
das
ja
loopne,pt
scas
inc
xlat
jl
test
xchg
std
and
dec
stc
cld
cmp
jmp
clc
insl
int
push
repz
lcall
shrl
test
jecxz
xchg
in
sarb
push
push
mov
jbe
cwtl
pop
ret
notb
stos
int
je
idiv
add
mov
jns
into
popf
ret
or
jo
std
lock
add
mov
sti
popa
testb
add
enter
data16
mov
mov
lods
mov
mov
xchg
pop
sub
adc
or
mov
sti
or
mov
out
cmp
lret
adc
std
jnp
aaa
and
cmp
xor
xchg
jmp
push
lret
inc
or
aas
jb
xor
adc
jns
dec
jns
sbb
jae
inc
out
mov
jbe
dec
mov
and
xchg
in
or
int3
mov
and
out
adc
in
adcl
mov
fwait
popa
inc
pusha
mov
imul
jmp
loope
fs
rclb
int
jo
jnp
mov
adc
shrb
pop
or
pop
movsl
add
dec
push
mov
stc
mov
repz
push
pop
add
arpl
pop
mov
xchg
cli
pop
dec
pop
adc
cld
sti
xchg
das
dec
adc
ljmp
mov
sahf
rcl
mov
xchg
sti
ljmp
pop
pop
mov
lds
inc
and
push
hlt
pop
jmp
loope
aaa
push
fsubrl
pushf
add
jbe
movsl
jge
inc
sti
mov
dec
mov
out
gs
imul
cltd
or
pop
push
mov
sbb
add
sub
mov
jg
jge
enter
lret
jge
xor
sti
jmp
imul
mov
cmpsb
cmc
popa
aas
add
or
cltd
mov
pop
movsl
icebp
addb
cmc
push
outsl
mov
cmp
clc
and
fldl
cmpl
decb
pop
mov
inc
dec
xchg
add
dec
movsb
sbb
xor
and
jb
adc
lods
sub
stc
pop
sub
push
push
mov
aam
cmp
enter
jg
mov
daa
pop
mov
dec
sbb
jmp
push
movsb
insl
mov
push
adc
shll
cwtl
mov
xchg
add
out
movsl
ds
push
in
sub
push
and
rcrl
or
push
test
cmp
mov
insl
cmpsl
mov
imul
lahf
leave
out
add
mov
wrmsr
sub
movsb
sti
loop
pop
xor
mov
push
addr16
pop
negb
or
add
cmp
push
lods
lea
je
adc
xor
sub
mov
cmp
bound
pushl
jmp
in
scas
movsl
cmp
sbb
sbb
adcl
cmp
or
cmp
mov
xchg
dec
inc
cs
jo
lods
add
mov
dec
in
dec
mov
dec
lea
movsl
jne
pop
jno
mov
in
repnz
jo
rcr
adc
jnp
fstpt
dec
test
in
jo
jnp
jge
push
jae
in
data16
push
mov
xor
mov
xchg
cmpsb
es
fs
dec
or
pop
sbb
push
cmc
fs
insl
jo
arpl
cmpw
or
adc
pop
sti
sar
notl
cmp
in
cmp
xchg
test
aad
jp
or
int
imul
or
out
xchg
pop
mov
cmp
insb
aad
sahf
mov
cmp
jb
rcrl
shl
jbe
jmp
mov
repz
inc
jnp
int
pop
inc
rcll
ja
mov
or
push
lods
xchg
dec
jge
inc
pusha
add
jo
lock
pop
outsb
lcall
stos
push
jb
mov
pop
cwtl
std
fwait
je
cmp
dec
cmp
pop
jge
adc
mov
xchg
dec
dec
xchg
daa
xchg
jle
sub
lea
mov
or
orl
mov
lea
lods
negb
and
fdivrs
mov
icebp
dec
and
ret
int3
cmp
or
dec
mov
sbb
jmp
mov
adc
movsb
jle
sarl
imul
jp
int3
mov
push
push
std
sub
shll
icebp
mov
divw
mov
or
int3
xchg
pop
xchg
dec
fiaddl
mov
push
or
jl
sub
inc
push
sar
sbb
xor
iret
hlt
pop
inc
xor
cmp
mov
arpl
mov
cmp
dec
enter
ja
sub
cmp
scas
mov
jae,pn
fmul
into
idiv
ret
pop
inc
ja
pop
cmp
mov
mov
inc
jge
inc
adc
adcl
push
adc
lea
stc
fwait
int
filds
cwtl
mov
lods
push
clc
pop
inc
lahf
inc
sbb
pusha
lods
sub
and
mov
insl
sbb
faddl
jl
mov
rol
insl
dec
add
fwait
insb
nop
lods
lret
je
mov
jge
mov
push
lret
fs
mov
mov
cmp
shr
scas
jnp
shll
jbe
push
rolb
cli
pop
test
fisubl
mov
int3
cmp
cld
leave
lcall
inc
adc
mov
mov
das
and
add
adc
insb
movsl
lret
mov
leave
dec
cli
push
push
call
stos
mov
pop
fistl
scas
ja
jns
sbb
jb
adc
add
sti
out
aas
and
jbe
shrb
out
mov
test
je
sub
mov
lret
aad
pop
fidivrs
aam
pushf
mov
cmp
inc
cmp
inc
movsl
add
xchg
or
bound
stos
cmp
sbb
fwait
jmp
lret
add
xchg
adc
addr16
std
in
testb
jmp
mov
stos
mov
inc
mov
iret
aas
xor
dec
dec
dec
enter
orl
jne
mov
push
outsb
mov
pop
xchg
sti
fmul
pop
sarl
cmp
add
jne
cli
cmp
pop
pop
lahf
lds
or
rorl
dec
shufps
pop
leave
sti
ss
push
mov
push
enter
jae
add
mov
xchg
pop
pop
nop
cltd
cmp
push
mov
inc
mov
mov
out
dec
lret
ret
fidivs
mov
imul
jl
test
jns
dec
push
inc
aas
xor
mov
movsl
mov
in
or
or
addr16
xchg
aaa
bound
xor
ja
push
das
sub
xchg
lea
popf
sbb
scas
xchg
int
test
mov
repz
push
dec
sti
loopne
mov
xor
outsl
adc
icebp
jmp
jecxz
das
dec
out
cltd
lea
push
jl
aam
pop
jl
sbbl
sbb
rcrb
mov
les
pop
mov
das
inc
xchg
mov
jnp
mov
jp
push
imull
and
dec
sahf
push
pop
lods
mov
mov
cld
notb
sub
inc
add
mov
cmp
pushf
sbb
jno
enter
cmp
ss
cmpsb
in
lds
sbb
loopne
sarl
push
sahf
pop
dec
push
les
lret
stos
mov
out
sbb
fmulp
xchg
cmp
out
sti
scas
sub
dec
test
popa
mov
mov
dec
jo
sti
lods
mov
icebp
mov
pop
or
dec
push
pop
lods
outsl
inc
xchg
pop
mov
cmpl
pushf
cmpsb
into
pushf
cmc
mov
mov
mov
paddd
jp
xchg
inc
andl
adc
mov
in
push
mov
sub
and
push
mov
jno
push
sub
jge
cmpb
std
mov
adc
jae
insb
mov
leave
testb
cwtl
mov
mov
inc
sahf
sub
sub
pop
inc
cld
sti
push
lret
pusha
xchg
cmp
sub
cmp
in
push
fs
out
mov
dec
pusha
enter
adc
repz
fdiv
mov
les
inc
push
push
fs
dec
xchg
subb
fcomps
mov
mov
mov
pushf
imul
jl
movsl
pop
sti
or
cmc
jmp
or
arpl
mov
mov
enter
push
std
int3
outsb
pop
outsl
push
push
mov
aad
pushf
cmp
js
stos
fwait
shrb
mull
sub
popl
es
or
mov
rclb
addr16
mov
arpl
call
cmp
mov
pop
or
ret
hlt
cwtl
bound
and
adc
sti
imul
sbb
push
loopne
jge
call
mov
jmp
or
dec
push
sub
ficoms
fisttpl
cmp
test
mov
je
imul
lret
inc
mov
insb
add
out
jge
and
mov
dec
mov
inc
inc
mov
push
cwtl
iret
cltd
sub
mull
outsl
imul
mov
or
add
lock
orb
jl
sbb
sub
or
xchg
mov
adc
pop
decb
jo
std
inc
add
cmp
cmp
cld
faddl
xchg
pop
lret
dec
pop
je
cmc
jnp
add
inc
push
dec
mov
stos
lods
in
mov
adc
mov
pushf
inc
in
test
mov
dec
or
add
lods
inc
ja
std
add
fdivl
test
nop
xchg
cmp
leave
xchg
pop
xchg
xchg
jnp
xchg
in
cmp
roll
sti
pop
popa
xchg
push
push
or
mov
inc
pop
sti
xchg
pop
adc
shll
pop
jne
aam
lods
rorl
enter
xchg
popl
jae
push
xchg
xchg
or
inc
clc
sbb
idivb
jmp
int
sub
pop
lcall
arpl
stc
orl
sbb
fs
cmc
leave
sti
jmp
cmp
xor
jge,pt
mov
popa
and
outsl
ja
ret
data16
sub
adc
mov
xlat
cs
adcb
mov
sub
xchg
lods
dec
lcall
testl
cld
sarl
mov
fnstcw
mov
xchg
sahf
dec
push
dec
imul
adc
cld
int
jnp
or
out
sti
jno
jb
popf
lds
pop
movl
sti
ljmp
mov
dec
push
cmpsb
pop
xchg
cmp
ret
pushf
out
and
mov
and
push
dec
data16
pop
inc
icebp
ds
adc
stos
adc
ja
xor
mov
arpl
mov
dec
jl
ret
fstpt
cmc
mov
jb
inc
popa
imul
sti
or
ret
cmp
adc
xchg
pop
stc
insl
shrb
push
push
dec
adc
mov
sub
sub
push
sub
dec
scas
in
es
hlt
add
imul
ret
mov
in
add
mov
adc
push
int3
fwait
mov
lret
jno
enter
add
test
fstpt
sub
add
faddl
inc
sbb
mov
push
leave
mov
les
aaa
das
incl
loopne
fdivrs
mov
shlb
rcrl
xchg
or
jnp
jbe
mov
lock
adc
cld
inc
sar
cmp
add
sbb
mov
stos
imul
sbb
mov
arpl
jnp
push
fwait
pop
mov
or
add
jge
out
jnp
jnp
les
ja
xchg
subb
into
jle
xor
out
push
mov
lea
push
lods
cmp
lcall
bound
shlb
addl
shr
loope
insl
inc
fcomi
lret
int
jg
add
aas
pop
mov
or
mov
repz
imul
push
sub
cmpsb
lret
test
out
incl
pand
push
or
int
fisubrl
repnz
out
xor
dec
jge
call
jne
adc
leave
rorl
mov
xor
push
mov
mov
lods
xchg
or
dec
xchg
xor
lcall
es
pop
arpl
pop
sub
fwait
cmc
imul
dec
push
adc
rcl
out
xchg
mov
in
adc
mov
push
push
jg
das
sbb
lds
pop
test
pop
fs
mov
mov
enter
mov
push
push
adc
js
push
inc
jge
sub
lcall
ficompl
sbb
data16
rolb
fadds
mov
pop
pop
enter
xchg
cwtl
das
mov
pop
scas
outsb
mov
psubd
dec
mov
fwait
and
sbb
xchg
mov
aaa
test
xchg
iret
imul
push
sub
lea
add
punpckldq
cld
sti
push
mov
mov
lcall
cs
ds
adc
bound
pop
cld
and
jmp
mov
call
dec
adc
or
cmp
int
mov
jl
xchg
cmp
pop
leave
ljmp
pop
dec
aaa
mov
pop
cmp
sub
fstpl
aam
aad
pop
cltd
int
push
sbb
jbe
jmp
in
aaa
adc
mov
or
jp
jg
imul
mov
ret
pop
inc
mov
sbb
add
mov
popa
lea
lods
out
mov
cmp
xchg
movb
mov
xchg
pop
cmp
lock
or
lods
mov
dec
icebp
jno
dec
adc
cmp
mov
cmpsb
xchg
pop
sti
test
mov
imul
dec
jle
cvtdq2ps
vpandn
add
andps
sub
sbb
push
sbb
jecxz
push
pop
leave
imul
ret
jae
subl
fwait
cmp
or
cwtl
sub
sti
dec
sub
nop
mov
sub
jmp
jg
or
inc
mov
cwtl
push
push
aam
cmp
aad
jnp
push
mov
jmp
pushf
lahf
pop
fdiv
xor
flds
mov
pop
or
rcl
sti
jmp
xor
mov
sbb
mov
or
fcmovnb
movsb
jnp
mov
movsb
xlat
sbb
mov
int3
in
into
or
sub
rcll
aam
movsl
pop
mov
mov
ret
jg
insl
pop
mov
add
push
xchg
add
mov
pop
subl
mov
negb
stc
cli
mov
or
or
jecxz
xor
mov
stc
xchg
mov
out
jbe
in
lods
imul
cwtl
pusha
leave
push
cmp
punpcklbw
stos
inc
push
mov
sub
inc
mov
int
pop
imull
mov
pop
loopne
push
fnstsw
jl
stc
cmp
cmpsb
push
xchg
repnz
std
xchg
jns
leave
das
nop
aaa
cmp
pop
scas
cld
add
push
sbb
shll
dec
cli
mov
push
push
jae
popa
add
cs
and
loop
push
sbb
rcl
ret
or
hlt
test
sbb
lcall
inc
xchg
push
aad
out
int
and
jno
test
dec
pop
in
ret
jge
push
push
cmp
mov
mov
cmpb
outsl
or
leave
mov
jo
ja
push
push
fcoml
testl
push
mov
jle
or
adc
mov
dec
or
iret
popl
in
in
sub
in
pusha
and
shll
or
loope
hlt
mov
mov
daa
mov
int
xor
or
xchg
or
cli
or
dec
lcall
test
out
fsub
test
sub
out
sbb
rclb
xchg
cmp
or
pop
and
fdecstp
je
or
push
fldl
lret
out
mov
and
xor
sti
jl
jmp
pop
push
lods
popa
mov
push
xor
sti
pushf
adc
jg
lods
enter
add
lahf
lods
adc
fld
andb
mov
or
sbb
sti
mov
xchg
mov
mov
jo
sbb
mov
lods
jmp
movsl
movb
xor
xorl
std
mov
lock
gs
add
fwait
or
popa
mov
sbb
jmp
jnp
pop
ljmp
push
xor
sub
xchg
fnstcw
das
cld
xchg
add
cmp
and
gs
dec
repnz
in
xchg
jmp
lret
cld
pop
arpl
push
mov
pop
or
sub
sub
mov
jnp
fimull
cmp
xor
inc
xor
and
or
int3
xchg
sarl
xchg
jo
jmp
jp
icebp
mov
nop
jp
imul
ds
lea
shrb
add
pop
adc
cmp
adc
sub
cwtl
insl
push
shll
cli
inc
xor
sub
jmp
pop
cwtl
imull
in
in
mov
xchg
pushl
std
jle
ret
adc
xchg
jnp
mov
pop
cmp
pop
insl
testl
cld
and
push
ret
imul
rcrb
in
jmp
and
dec
lret
lret
push
xchg
sar
imul
sbbl
adc
cmp
pop
jg
cltd
adc
xor
dec
cmp
in
push
adc
jge
iret
clc
xchg
dec
cmp
inc
or
dec
lahf
pop
outsb
mov
xchg
pop
fildll
aad
inc
and
sti
xor
jbe
adc
mov
push
pop
movsl
stos
stos
and
inc
cmp
adc
mov
mov
mov
cmp
sbb
xchg
gs
sti
add
setno
in
xchg
cmp
pop
fwait
sti
outsl
adc
pop
cmp
lock
das
dec
push
jne
xchg
xchg
inc
insl
and
cmpsl
in
jnp
adc
rol
fldl
lods
pop
mov
jl
pop
cmpl
sti
inc
inc
or
mov
bound
shr
loopne
cmpsb
int
add
ret
mov
pop
fsubrs
or
dec
mov
jae
or
pushf
or
jge
adc
ret
jp
adc
cld
pushf
or
mov
xchg
inc
push
mov
pop
js
jl
mov
std
jg
xor
out
push
std
pop
and
aaa
cmp
cmp
mov
cmp
ret
jbe
rcll
or
dec
or
fbstp
mov
sub
shll
dec
call
lret
xor
repz
loopne
sbbl
jp
sti
or
add
inc
pop
test
mov
pop
into
repz
gs
div
mov
mov
in
js
clc
enter
mov
push
ss
leave
lret
fucomip
pop
aaa
xlat
push
cmp
mov
mov
mov
mov
add
pop
lods
out
mov
mov
int
movsb
cmp
setae
outsl
mov
lcallw
cli
ds
out
test
mov
sub
pop
out
push
rclb
cld
addr16
jl
leave
xchg
leave
push
in
lods
add
or
int3
mov
sub
push
clc
add
adc
cmp
cmpxchg
and
sub
pop
or
sahf
int
test
mov
in
mov
fcmovb
jno
pusha
cmp
mov
imul
xchg
fnstenv
dec
enter
cld
inc
or
mov
jb
push
mov
jmp
push
cmpsl
add
scas
or
sub
pop
idivb
cmp
rep
or
lock
das
cltd
inc
push
fcomps
aad
lods
loop
xchg
jae
push
add
lds
mov
push
fsts
push
sbbb
stos
dec
and
ret
jle
movsb
in
std
push
lea
cmpsl
dec
popf
mov
je
mov
in
ja
pusha
les
adc
aad
sub
push
sbb
hlt
clc
push
cli
xchg
adc
adc
push
pop
icebp
in
test
out
mov
rclb
adc
xor
push
dec
push
imul
jae
sti
and
sub
les
push
cmp
push
sbb
mov
sti
and
and
aas
pop
mov
push
inc
and
pop
or
add
out
cmp
psubusb
gs
aaa
cmp
push
in
lret
pop
add
jl
addb
pop
dec
push
push
adc
jns
in
or
pop
mov
mov
stos
aam
lods
aas
push
jnp
inc
add
cld
fcoml
sub
inc
jnp
pop
out
add
push
jecxz
enter
mov
mov
sti
adc
sbb
push
or
mov
cvtps2pi
and
push
clc
sbb
pop
sbb
test
clc
inc
mov
in
push
pop
loop
fwait
or
jnp
jecxz
xchg
mov
ljmp
mov
push
cli
lcall
movsb
insl
in
or
imul
add
sarb
aad
xor
popf
mov
pushf
repnz
out
mov
sbb
sbb
fnstsw
jmp
mov
push
test
mov
mov
xchg
mov
clc
jg
fwait
scas
jo
test
cs
cmp
mov
push
xchg
push
dec
fsubrl
mov
inc
insl
mov
gs
jae
mov
add
addr16
cmp
jg
nop
and
mov
adc
pop
mov
mov
fadds
jle
cmc
cmc
push
mov
into
mov
dec
mov
xor
push
pop
pop
push
mov
dec
mov
or
jnp
cmc
and
cmp
mov
outsb
cld
xor
jnp
rcll
shll
or
mov
sti
das
adc
push
cmc
mov
xorb
sub
mov
xchg
cltd
daa
adc
add
sti
ficoms
cmc
movsl
cs
jae
jecxz
jbe
adc
dec
push
scas
and
pusha
and
or
dec
bound
nop
sub
ds
mov
pop
xchg
aas
aas
in
xorl
or
add
test
jb
test
dec
std
int3
cmp
pop
sbb
into
mov
jo
cwtl
inc
mov
ficoml
mov
out
aam
inc
xchg
int
int3
fldt
fildl
sub
test
lret
pop
adcl
adc
jnp
rcrb
xlat
lret
sbbb
mov
insl
dec
xor
enter
fistpll
loop
fiaddl
cmp
jl
cmp
jmp
cmp
jl
call
sub
insl
jg
or
scas
cmp
pop
lret
sub
push
jge
cmp
aas
sbb
jg
fstl
adc
mov
mov
cmp
pusha
cmpb
call
pop
daa
sahf
mov
adc
imul
adc
jl
imul
shlb
mov
jmp
fsubrl
jae
rcl
int
dec
push
pop
push
cmp
or
push
lock
dec
movsl
cmpsl
push
jbe
addr16
stos
or
pop
mov
adc
sti
add
lret
aam
test
aas
bound
cli
test
xchg
dec
mov
cld
out
cmp
mov
call
cmp
loopne
popf
pusha
push
jle
addr16
pop
inc
mov
dec
xchg
ds
cmp
ss
mov
lods
stos
imul
nop
xor
insb
fsubl
inc
outsb
stos
add
shrb
scas
pop
into
sbb
clc
pop
jl
rorl
dec
lods
push
lods
sti
out
rolb
cmpsb
mov
aam
cmp
sub
jp
mov
out
pop
lea
dec
push
roll
jno
lods
jp
lea
into
into
push
adc
pop
int
adc
push
sarb
push
add
mov
out
cld
inc
xchg
xchg
insl
push
dec
dec
bound
dec
inc
mov
mov
fdivl
or
test
xchg
push
mov
add
sarl
popa
sbb
rorl
mov
mov
sbb
mov
pop
pop
test
imul
xchg
les
push
imul
pop
outsb
or
sbb
lret
fildl
sti
mov
and
cli
push
imul
fdivrl
mov
xchg
jecxz
insb
fdivr
and
or
sahf
sahf
push
sub
sar
sti
jle
scas
push
jp
into
movsb
lahf
lods
mov
jns
les
popf
imul
popf
push
lds
mov
addr16
sbb
mov
mov
jnp
stos
pop
xlat
push
into
jnp
jno
cmp
sti
sub
mov
in
andl
je
negb
jl
testb
dec
pop
adc
xchg
in
test
out
mov
pop
dec
pop
lcall
inc
adc
leave
lock
mov
push
rcrb
mov
mov
jle
into
pop
shll
lods
mov
shl
lock
aas
rcl
mov
inc
cs
mov
std
pop
rol
hlt
adc
and
xor
cmc
xor
pop
cmp
int
test
or
sub
fidivs
out
popf
jnp
stc
ds
mov
jne
and
xchg
imul
addb
lcall
add
xor
sbb
in
push
or
into
inc
sbb
add
mov
idivb
mov
pop
adc
test
das
adc
call
cli
jbe
pop
pop
roll
xchg
lods
or
xchg
ja
movsb
pop
decl
call
jb
xor
pop
adc
or
inc
sti
insb
lret
mov
mov
xor
insb
sbb
icebp
xor
dec
je
shl
mov
leave
mov
sub
and
mov
rcpps
dec
data16
out
cmpb
fwait
mov
in
fstpt
xor
jnp
mov
mov
mov
adc
test
cmp
cmp
insb
lock
es
pop
inc
jb
dec
arpl
shlb
adc
pop
xchg
or
loope
jl
pop
add
cmp
jmp
sub
aaa
jae
or
stc
lea
push
dec
hlt
mov
andl
dec
enter
popf
mov
pop
int
mov
enter
push
xchg
sub
int
pop
roll
clc
xchg
scas
fwait
mov
xlat
add
mov
push
cmc
mov
sub
adc
mov
cltd
popa
jnp
pop
sub
pop
inc
or
push
cld
cmp
addr16
mov
jl
or
push
mov
and
pop
bound
lret
adc
call
jne
clc
cmp
popf
or
jg
pop
dec
gs
ds
jnp
int3
add
push
sbb
mov
sbb
cmp
js
ret
mov
jb
push
pop
sti
inc
dec
xor
xor
and
mov
pusha
or
add
cmp
lahf
enter
cmp
insl
push
mov
sahf
dec
mov
jge
addb
mov
mov
pop
inc
movl
cmpb
or
add
dec
mov
roll
xor
sub
fs
add
roll
movsl
icebp
cmp
aaa
popa
mov
iret
mov
dec
ret
add
cmp
js
pop
rclb
jl
ss
inc
jmp
cs
push
sar
jnp
cmp
push
repnz
or
mov
adc
lock
xlat
adc
bts
xchg
stos
sbb
push
cmp
inc
bound
int
emms
adc
cmp
pop
mov
mov
jne
mov
add
xlat
sub
or
dec
jmp
bound
dec
sbbb
cltd
cmp
pushf
std
mov
or
inc
pop
cmp
out
pop
add
lock
call
push
add
push
mov
sbb
push
push
in
fwait
mov
ljmp
pop
je
cmpsl
stos
ss
cli
int3
shr
mov
dec
mov
mov
in
rcr
imul
lds
fildl
addl
sbb
out
jnp
leave
and
push
and
xchg
jb
push
adc
xchg
imulb
mov
adc
sub
add
xchg
ret
mov
pop
dec
outsl
mov
mov
inc
adc
add
aam
jne
lret
or
cmp
add
je
xchg
loope
out
in
xchg
mov
loope
out
sti
xor
sbb
ja
and
nop
lods
ret
or
mov
in
gs
cmc
testb
mov
push
pop
push
add
imul
sti
jle
cwtl
mov
xor
loopne
das
push
shlb
or
addl
jb
dec
and
sbb
push
cmpsb
dec
jo
shl
fstp
lea
or
sbb
stos
xchg
mov
int
jg
rcrl
push
sbb
mov
pop
iret
scas
jl
sti
aam
pop
push
aas
pop
push
mov
pop
sub
imul
imul
xchg
insb
hlt
push
nop
lea
xchg
or
icebp
mov
sarb
inc
sbb
jg
mov
pop
outsl
insb
dec
pop
pop
lret
shrl
inc
popf
xlat
pop
rorb
sub
bound
mov
cmpsl
ficoml
call
jp
test
adc
xchg
mov
loope
pop
dec
scas
push
cmp
xor
shrb
iret
jo
jno
push
ja
repnz
cmp
mov
fwait
pop
nop
sti
pop
mov
cmp
out
jmp
push
mov
outsb
xchg
shrl
xchg
mov
mov
mov
loop
std
arpl
inc
mov
lret
test
add
orl
aam
pop
fldt
das
ret
mov
mov
dec
xchg
lea
pushf
push
push
or
push
add
das
aad
loopne
inc
mov
repnz
mov
add
fdiv
adc
int
sub
nop
shrb
inc
das
fsub
push
add
jmp
or
xor
orl
jnp
in
cmpl
lret
test
xchg
or
test
sarb
push
rdtscp
add
das
shr
add
jno
ljmp
sbb
sbb
mov
xchg
jo
inc
loop
jl
cmpsl
xchg
mov
stos
sub
mov
xchg
iret
loopne
je
hlt
mov
adc
jnp
scas
pop
stos
leave
adc
cmp
sbbl
jnp
xor
inc
cmp
loopne
sbb
jl
jnp
inc
cli
xlat
adc
adcl
adc
scas
mov
mov
mov
dec
ficomps
mov
outsl
mov
jl
sub
gs
ljmp
loop
dec
shl
fwait
xlat
pop
and
out
xchg
mov
mov
pop
insb
inc
mov
in
push
in
aaa
push
jge
xchg
sbb
test
sub
je
mov
xchg
dec
mov
mull
xor
mov
addl
push
xor
cltd
pop
lock
pop
inc
xchg
jnp
je
cli
cmp
dec
hlt
pop
push
mov
popa
ret
mov
mov
pop
add
jae
negl
jmp
cmp
jo
stos
fstpt
nop
imul
sub
js
imul
cltd
scas
lods
testl
jbe
es
mov
sub
adc
mov
or
xchg
lea
and
rcrl
mov
cmp
sub
cmpsl
dec
cli
lea
test
pop
daa
xchg
sbb
js
nop
add
adc
dec
dec
sahf
jle
lahf
push
cmp
lret
mov
add
call
cmpsb
ficoml
jb
pop
jl
ljmp
mov
add
mov
in
insb
pop
sbb
icebp
jb
mov
jge,pn
pushf
stos
into
pop
inc
dec
xor
lods
mov
or
sbb
fdivrs
ss
cmpsb
cmp
adc
es
xchg
daa
rcl
or
mov
mov
ja
jnp
and
pop
add
into
and
cltd
cmp
cmp
loope
stc
mov
or
mov
xchg
lcall
cmpsb
lods
cmpb
pop
sbb
das
jecxz
fsts
jns
sub
add
jmp
mov
sbb
pushf
cli
pop
scas
jl
xor
popf
es
inc
mov
out
scas
ss
mov
outsb
int3
andl
out
andl
mov
push
fldt
mov
sti
inc
ds
mov
les
std
sti
lds
pop
add
or
xlat
sub
mov
mov
mov
or
jecxz
sub
stos
inc
mov
mov
sub
sub
jae
push
mov
insb
outsl
inc
lahf
ljmp
jmp
data16
rol
mov
inc
dec
adc
mov
shlb
int
jns
add
lahf
mov
jg
xchg
and
dec
push
jge
hlt
rcll
test
push
push
push
pushf
fsubrs
lods
dec
rcrl
sub
in
push
sub
or
xchg
xor
lods
insl
fwait
cmp
stc
and
jmp
push
sbb
sub
and
cmp
in
test
rcr
in
dec
lcall
adc
push
mov
sahf
push
test
jmp
sti
inc
or
push
scas
sub
jnp
lods
fsub
ret
pop
pop
xsave
out
mov
dec
mov
jno
pop
mov
dec
inc
decl
pushf
mov
cmp
insb
repnz
pop
mov
jl
test
rorl
in
add
sbb
dec
cmc
loop
fstpt
pop
mov
push
cs
adcl
mov
nop
and
pop
iret
icebp
mov
push
inc
or
dec
mov
adc
out
xchg
pop
inc
aam
mov
inc
addr16
xor
setns
xchg
fistpl
push
cmp
jns
pop
sub
mov
lods
je
test
jns
mov
sti
scas
clc
scas
push
cmp
cs
ret
mov
mov
loopne
pop
dec
test
push
addr16
xlat
jecxz
mov
in
or
imul
xchg
cwtl
int
mov
daa
ret
enter
cs
and
dec
je
jg
xchg
int
push
mov
jle
call
mov
imul
stc
in
sbb
dec
mov
in
mov
mov
daa
aaa
in
enter
dec
das
ret
mov
jae
dec
mov
ret
add
in
cmp
xor
out
pop
jmp
and
xor
mov
pushf
mov
mov
dec
test
mov
cltd
adc
or
sti
neg
loopne
cli
pop
icebp
inc
cmp
xor
jb
movsb
inc
xor
lds
mov
lds
bound
lcall
mov
repz
mov
fstpl
sub
aam
add
adc
mov
inc
mov
je
mov
bnd
lahf
sub
add
xchg
and
int
into
dec
mov
xor
push
sub
cwtl
sub
mov
mov
jne
cmp
adc
push
or
push
push
pop
clc
dec
xor
loopne
test
mov
add
insb
gs
pop
pushf
or
xchg
in
adc
loope
adc
mov
push
jnp
xchg
pop
int3
data16
rcll
inc
xchg
notb
sbb
shrb
hlt
aas
add
mov
lods
test
mov
dec
sar
ja
shll
pop
movsb
mov
cmp
jns
fdivrl
mov
dec
psubb
mov
psubsb
enter
nop
xor
add
into
test
popa
dec
sti
imul
cmp
call
mov
jnp
sub
ds
stos
outsb
in
stos
addb
sub
sbb
cmpsl
mov
je
or
cltd
push
pushf
add
sub
mov
pop
fwait
pop
jg
mov
stos
mov
jl
xchg
test
adc
adc
mov
pop
nop
je
outsl
into
mov
repz
and
int
jb
sahf
mov
rcrl
insb
repz
push
cmp
adc
repnz
adc
push
pusha
pusha
xchg
mov
arpl
lea
xchg
gs
dec
inc
lds
mov
dec
scas
lds
fcoml
or
insb
adc
dec
adc
sti
pop
sub
sub
mov
lret
mov
aam
jae
dec
mov
popa
adc
push
arpl
or
and
movl
sbb
add
outsl
jmp
mov
sti
push
sti
fcom
adcl
ja
ds
sub
pusha
imul
aad
ds
mov
movsb
dec
or
adc
mov
cli
stos
imul
fildl
mov
sub
fimull
jmp
loop
mov
fistps
or
jb
sub
mov
insl
jnp
je
scas
lds
xchg
lock
push
int3
and
fldpi
fcmovu
or
std
mov
mov
lods
daa
fwait
or
and
out
cmc
mov
push
fistps
ret
cwtl
sbb
add
dec
in
lmsw
aaa
inc
test
push
sbb
push
adc
jo
xor
std
adc
push
dec
sti
dec
fs
add
dec
xor
out
jns
dec
mov
fnstsw
das
push
ret
mov
xor
xlat
out
xor
mov
sbb
or
cmp
int
adc
les
mov
pop
push
mov
lods
movsl
sbb
stos
inc
lahf
dec
or
subl
pusha
adc
nop
cmp
stc
add
jecxz
pop
js
lahf
rcr
cs
sbb
popa
mov
inc
push
add
iret
add
xor
xchg
adc
inc
int
xor
je
in
js
or
jbe
jo
or
icebp
sti
test
scas
fidivs
push
popf
push
addr16
cmpsb
inc
int
clc
mov
aas
mov
inc
add
cmp
add
das
pop
daa
xlat
scas
sub
lods
imul
imul
outsl
push
cmovnp
addr16
ja
xchg
mov
ds
divb
sbb
mov
dec
or
adc
xchg
out
jnp
or
cmp
push
inc
mov
xor
push
out
and
ljmp
pop
dec
mov
and
push
testb
mov
pop
add
pop
sahf
push
inc
pushf
mov
popl
int
scas
push
out
jg
out
xor
jmp
xchg
pop
sbb
mov
dec
pushf
mov
lret
inc
loop
sub
pop
xlat
jmp
push
ret
int
push
stos
add
mov
mov
push
leave
bndstx
pop
sub
xchg
and
push
subl
int3
faddl
shrl
mov
jmp
xchg
mov
push
pop
incb
int
aaa
or
sti
fdivrl
bound
stc
orb
popa
jns
pop
clc
pop
pop
jle
mov
sub
adc
push
cmp
mov
out
ret
push
mov
int
adc
cmp
and
sbbb
sbb
jnp
push
orl
and
sbb
push
dec
dec
mov
and
jae
fnsave
sbb
mov
jg
mov
in
stos
sub
dec
outsb
sbb
int
leave
xchg
cmp
outsl
mov
outsb
xchg
xchg
sti
jecxz
adc
jge
rorb
cmp
ret
mov
or
aad
idivb
mov
popf
mov
cmp
cmp
ds
fildll
aam
aam
mov
imul
orb
rcrl
icebp
xchg
nop
std
into
jle
lea
jp
cli
sti
jecxz
cmp
mov
mov
inc
mov
popa
rorb
push
mov
cmpsb
pop
pop
or
pop
adc
jl
ret
mov
cmp
jp
dec
push
movsl
jnp
aad
mov
mov
inc
push
into
bound
ds
pushl
arpl
test
jmp
mov
in
adc
jb
or
dec
aas
mov
testl
cmp
mov
mov
push
std
jnp
cmp
adc
movsl
clc
cwtl
dec
push
mov
in
cmp
lods
or
push
bound
pop
jge
cwtl
sti
jno
inc
sub
dec
xchg
mov
pop
push
lock
lret
fldt
cmp
lds
inc
test
imull
adc
lret
daa
adc
jb
mov
inc
xor
dec
adcl
xor
xor
mov
push
rclb
xor
push
inc
push
xchg
adc
scas
popa
ret
ljmp
movsl
mov
leave
stos
and
and
push
sub
cmp
adc
rcll
sarb
adc
nop
push
insb
aaa
cli
and
xchg
inc
in
insl
inc
enter
sahf
jg
mov
into
lea
gs
movsb
repz
cwtl
cmp
xchg
in
add
pop
or
cmp
fsubl
clc
inc
clc
das
cmp
inc
and
fiaddl
mov
xchg
sbb
rcl
mov
test
jmp
int
lea
sbb
scas
lods
cmp
inc
cmp
test
test
add
les
and
jmp
in
out
xor
add
rorl
push
sbb
push
jecxz
arpl
push
test
jge
dec
xor
ja
inc
push
or
jnp
loopne,pt
mov
or
fs
adc
sarl
add
out
sub
lds
nop
cwtl
mov
aam
add
push
std
jmp
test
mov
jns
xor
or
or
aam
and
cmp
out
fdivs
push
cwtl
dec
aam
push
fdivl
cmpsb
fmull
mov
add
fsubr
cmp
mov
arpl
mov
test
sbbl
sub
addr16
lea
test
stc
je
mov
js
icebp
adc
jne
inc
mov
fisttps
sbb
inc
mov
pop
mov
leave
jnp
in
cmc
ret
fsincos
aas
iret
cli
lret
xchg
push
test
sbb
dec
pop
sub
cmp
nop
test
cmpsl
stc
push
dec
ficompl
mov
dec
and
mov
or
adc
ds
push
dec
cmp
push
push
push
addr16
mov
pop
lret
mov
push
mov
mov
mov
negb
test
xchg
outsb
or
inc
sbb
cld
movsl
les
add
cmp
pop
inc
in
mov
push
pusha
xor
divl
jne
aam
push
mov
cmp
jge
dec
cmp
scas
inc
punpcklbw
ror
test
jns
nop
mov
addr16
xchg
not
daa
movsb
cwtl
pushf
rorl
fsts
fsubl
std
imul
lods
xorl
add
mov
inc
sbb
scas
cld
inc
aas
mov
subl
bound
sbb
pop
jnp
gs
sahf
inc
xor
dec
mov
dec
rorb
std
sub
lahf
in
fmuls
mov
mov
cld
mov
or
xor
mov
mov
lock
push
loopne
pop
mov
adc
aas
inc
dec
jge
int
aas
stc
or
dec
jge
sub
fildll
sub
jmp
xchg
jno
stos
sti
ret
les
repz
adc
movsl
inc
sub
inc
xor
mov
rclb
adc
mov
lea
fwait
dec
sub
sub
lret
orl
dec
lea
inc
push
sub
sub
stos
sbb
mov
dec
lods
mov
ror
jmp
mov
jbe
test
adc
sbbl
pop
test
adc
and
inc
movsl
mov
lcall
dec
jns
scas
flds
or
shlb
pop
lods
mov
mov
cmp
pop
notl
out
cltd
jnp
dec
mov
fnstsw
roll
cmp
push
lock
jp
stos
fdivs
xchg
xchg
dec
push
dec
rep
or
pop
or
aaa
mov
inc
pop
lcall
inc
test
cmp
mov
pop
cmp
dec
std
sub
mov
xchg
dec
pushl
cmp
aad
xchg
xchg
fistps
fisubl
jp
imul
cmp
stos
and
repz
inc
cmp
popf
mov
sbb
inc
cmpb
fs
adc
jecxz
or
mov
jns
jle
in
nop
adc
xchg
cli
rolb
sbb
adc
jno
pop
pop
xchg
fstpt
mov
cmp
stos
push
mov
sub
pop
bound
mov
jmp
imul
mov
and
pusha
test
std
pop
mov
ljmp
mov
mov
daa
mov
adc
mov
lods
push
lea
xchg
addr16
shll
xor
push
fldl
jl
fs
sti
loope
ds
sbb
dec
jbe
xchg
shrl
punpckhdq
lahf
int
cltd
cmp
xchg
mov
and
addl
sbb
xor
sub
push
add
push
bound
jmp
in
adc
fidivl
popf
pop
test
inc
inc
or
push
or
ficoms
call
xchg
mov
movsb
sub
cmpsl
mov
sub
push
pop
mov
add
sbb
js
add
push
stos
dec
pop
dec
insb
mov
outsb
mov
jae
in
adc
jecxz
mov
xchg
mov
and
nop
sahf
dec
sti
or
push
xor
sbb
mov
or
adcl
cld
push
sbb
jnp
subl
leave
lock
stc
fwait
dec
sti
pop
sbb
adc
push
jl
leave
add
dec
and
mov
jl
outsb
mov
xchg
stc
ret
adc
mov
stc
mov
bound
add
or
xor
and
mov
outsb
movsb
mov
mov
pop
or
lahf
rclb
adc
cmp
and
xor
inc
jae
push
xor
das
xlat
add
loopne
fisubs
int
sbb
and
adc
cmp
dec
dec
ja
lods
in
dec
dec
es
inc
inc
push
and
mov
ret
push
add
dec
mov
add
jns
inc
mov
xor
movsl
mov
push
into
outsb
mov
aad
xor
cmp
pop
ljmp
mov
cmp
cli
xlat
mov
push
or
aas
cs
aas
xchg
mov
outsl
xchg
adc
aam
mov
fistps
ret
jne
test
dec
sub
sti
cmpsb
sarl
or
mov
arpl
std
cmp
mov
sub
dec
dec
xchg
jne
sbb
cmpsl
adcb
pop
add
add
lds
cmc
cmp
lds
cmp
loopne
push
lock
push
mov
xlat
std
hlt
cmp
rorb
xchg
stos
test
adc
std
outsl
push
jecxz
cmpsl
dec
lea
imul
or
and
fimuls
jo
repz
inc
adc
mov
xlat
data16
cmp
shll
sbb
out
jge
outsl
inc
lret
incb
jnp
sahf
mov
sbb
cmp
sbb
pop
dec
fldl
aam
inc
stos
mov
cmc
roll
sbb
nop
push
mov
sub
sti
add
mov
ds
leave
daa
add
mov
addr16
and
inc
sti
push
dec
dec
imul
jge
cmpsb
clc
fs
pop
imul
pop
das
jmp
js
sti
mov
aam
sbb
sti
adc
imul
and
scas
sub
push
dec
scas
je
iret
adc
xlat
sub
dec
cmp
subb
xchg
pop
adc
jnp
inc
or
fcmovne
movsl
clc
mov
sahf
mov
xchg
xor
scas
movsb
imul
arpl
xchg
mov
jl,pt
mov
pop
sub
lcall
setne
je
mov
lock
fisttpl
imul
scas
sbb
int
loop
imul
cmp
fisttps
loop
cmp
jo
xchg
lods
sub
inc
outsb
mov
imul
repz
fcomps
mov
xchg
mov
push
cwtl
repnz
jl
dec
movsb
cmp
cmp
mov
pop
testl
dec
inc
aam
or
push
mov
pop
push
fwait
jnp
pop
sti
std
jno,pt
fstpl
xchg
mov
xchg
mov
dec
cmp
or
lods
pop
jp
arpl
sbb
inc
loope
pop
xchg
inc
pop
and
rcr
inc
pop
or
insl
xor
and
scas
sti
lods
sub
bound
adc
sahf
cmp
dec
std
addb
dec
pushf
ret
js
imul
jge
jecxz
les
mov
jae
push
cwtl
xchg
xor
dec
jbe
jge
es
loopne
jo
or
fldenv
and
dec
fstpt
inc
mov
lcall
call
lahf
pop
enter
out
mov
es
xor
scas
fistpl
cmp
sbb
fxam
push
cld
outsl
xchg
cmp
jne
add
jp
pop
dec
and
jns
jl
dec
fnstsw
mov
jmp
in
mov
ret
or
jns
cmp
push
sbb
jg
cmp
subl
into
test
adc
je
push
jg
pop
pushf
jb
cmc
push
mov
int3
mov
addr16
or
repnz
xchg
mov
inc
push
cmp
aaa
dec
fldl
mov
popf
cmpsb
xor
push
dec
test
mov
sarl
in
push
add
cld
shlb
mov
andb
dec
nop
xor
push
int
jbe
hlt
jg
or
mov
and
mov
dec
push
mov
dec
mov
push
mov
popf
movsb
pop
jmp
jne
jne
jbe
xchg
cwtl
lahf
fstl
leave
mov
mov
mov
mov
push
ficompl
ret
movsl
in
loopne
mov
out
mov
jnp
out
add
lret
daa
or
ret
int
filds
sahf
int3
add
je
mov
xchg
lods
xchg
add
pop
cs
pop
popf
xlat
and
or
jp
mov
inc
dec
scas
lods
int
jae
aam
inc
jle
sub
inc
jbe
inc
popf
dec
sbbb
arpl
fwait
jns
pusha
aaa
and
mov
push
jne
clc
mov
push
out
sbb
mov
rorl
pop
movsl
aaa
adc
inc
pop
scas
jl
ljmp
lea
gs
xor
cmp
sub
and
or
ret
stos
enter
dec
dec
xchg
ret
gs
pop
insl
lcall
adc
adc
test
xchg
or
lret
orl
arpl
bound
pop
pop
mov
addr16
push
fwait
rclb
push
xchg
jnp
adc
out
mov
xor
or
push
nop
add
sarb
dec
xchg
inc
and
ret
pop
movsb
adc
or
test
xchg
pop
or
pop
test
rol
addr16
push
sbb
enter
int
add
cmpsb
or
das
jb
lahf
ret
into
ja
rcrb
fwait
movsb
pop
movsb
sbb
cmp
push
push
test
cmp
dec
mov
pop
jo
or
dec
inc
xchg
push
ret
dec
int3
jnp
sar
in
and
pop
dec
mov
lret
pushf
push
daa
pusha
cmp
inc
dec
hlt
int
sbb
push
ds
out
mov
cmc
jl
fwait
mov
pop
pop
mov
mov
andl
dec
jmp
jmp
mov
lea
mov
cld
ds
hlt
jnp
push
lods
bound
xchg
in
int3
sbb
rcrb
sbb
mov
jns
adc
loopne
divb
pop
test
dec
nop
push
inc
xor
jo
xor
sti
in
stos
loope
je
rcrb
nop
pop
push
int
rcll
push
cld
pushf
adc
ja
adc
cmp
lds
push
testb
xchg
jne
bound
cld
mov
lahf
push
repnz
stos
push
sub
mov
pop
fildll
mov
nop
jmp
add
adc
lock
aas
mov
sub
pusha
cli
aas
jg
xchg
mov
push
xchg
stos
mov
mov
rcrl
xor
arpl
pop
hlt
mov
mov
je
iret
cmpsl
and
sti
imul
out
jp
cld
js
fwait
pop
push
mov
movsl
cmp
and
outsb
mov
cltd
out
mov
dec
gs
cmp
rorl
xchg
xchg
xchg
ja
daa
adc
pop
jae
addb
mov
sbb
mov
mov
mov
push
mov
dec
incb
les
sub
outsb
dec
sti
cmp
xor
popa
jl
lods
aaa
jbe
or
or
repz
dec
sub
pop
pop
cmp
test
mov
inc
stc
int3
adcb
cmp
cmp
orl
push
pop
lret
arpl
loop
shrb
es
lods
sbb
arpl
in
sub
push
test
hlt
mov
or
pop
xchg
jo
pop
orb
cmp
fidivrl
lret
jne,pt
stos
loop
jno
push
xor
push
cmp
or
xlat
cltd
mov
inc
mov
xor
xchg
dec
dec
int
mov
dec
mov
mul
mov
xor
std
or
cld
inc
into
test
add
or
fiadds
in
and
jnp
xchg
mov
outsl
pop
xor
jnp
nop
lea
roll
mov
jmp
push
orb
int3
ret
add
sub
sti
cltd
pop
iret
or
sbb
popf
xor
jns
mov
jg
sub
cld
stos
bound
cmp
das
and
xchg
jnp
mov
or
mov
lea
dec
or
or
mov
mov
mov
mov
dec
sub
fwait
leave
adc
loop
insb
fwait
or
lret
sbb
xchg
jnp
xor
push
rcl
sahf
out
xchg
and
sub
imul
lds
fwait
in
inc
int
pushf
pop
pop
subb
lea
mov
call
jo
ds
in
ds
movsl
push
xlat
test
xchg
rol
pop
jae
adc
and
dec
dec
lret
iret
adc
xchg
cmp
int
fbld
int3
mov
jbe
ds
mov
dec
pop
pop
sub
leave
psubq
xchg
cmp
jl
xor
cmpsb
mov
add
stc
xchg
imul
les
rorb
jl
aas
in
or
aas
jl
wbinvd
fcomi
push
int
leave
pop
cwtl
orb
pop
rol
cmpsb
pop
jp
test
jae
ret
rcll
jge
sti
movsl
std
push
inc
mov
mov
test
jl
adc
ds
rorl
nop
add
repz
dec
in
jmp
fwait
xor
cwtl
xchg
test
cltd
int
or
cmp
sahf
dec
ds
xchg
cwtl
insl
cmpsl
xchg
or
or
jae
call
mov
mov
rorl
jb
fdivr
popa
stos
dec
shl
loope
lods
add
movsl
sub
lods
add
pop
and
mov
dec
mov
fisubrs
inc
sub
jecxz
mov
aad
icebp
and
daa
sbb
jnp
sbb
push
jne
mov
repz
movsl
xor
mov
fistpll
fnsetpm(287
mov
movsl
fxch
pop
test
mulb
xchg
clc
ljmp
sbb
cmpsb
icebp
mov
xchg
mov
dec
sub
sbb
and
mov
data16
dec
sarl
sub
pop
mov
cmp
insl
adc
pop
test
mov
out
xor
cld
ja
rcrl
in
das
jge
clc
jbe
test
add
mov
dec
mov
pop
mov
and
dec
xor
inc
and
add
jno
pop
mov
fists
pop
les
outsb
orl
mov
je
sub
or
aad
out
cmp
int
test
scas
repz
mov
js
jo
scas
sti
scas
call
push
xor
lret
mov
inc
jnp
push
xchg
add
cmpsl
mov
int3
iret
lahf
jb
or
adc
pop
dec
adc
mov
push
mov
push
jl
std
mov
cmp
xchg
or
sub
push
xchg
jecxz
test
jmp
les
ljmp
cmp
test
fwait
inc
lea
in
insb
orl
pop
dec
cmp
popf
mov
stc
inc
lret
aad
jp
add
and
dec
inc
mov
inc
fstpl
mov
cmpsb
movsl
xor
dec
arpl
aas
xchg
dec
xchg
std
in
popa
mov
cmpsl
or
or
push
jne
cmovp
jecxz
iret
or
mov
sub
sbb
mov
scas
mov
popa
pop
je
mov
ss
int3
mov
mov
and
dec
ret
nop
insl
jae
cmpsl
sbb
call
push
in
aas
adc
testl
adc
cmp
push
sbb
cld
scas
jg
sbb
icebp
inc
in
mov
jge
popf
and
scas
daa
jl
dec
add
ret
hlt
call
mov
push
testl
fstps
lods
xchg
stos
mov
sti
mov
jns
and
and
inc
mov
icebp
pop
push
jg
jns
or
push
fcompl
sub
xchg
or
mov
push
push
std
lret
sub
mov
sub
inc
dec
in
pop
jae
stos
push
mov
push
cmpsl
or
or
insl
xchg
mov
sti
push
adcl
mov
gs
sub
mov
jnp
stos
mov
cwtl
push
xor
add
pop
mov
aad
rorb
test
test
pop
xlat
cmp
mov
in
int
mov
jbe
int3
mov
out
jg
cli
test
inc
cmc
xor
xchg
mov
mov
cmp
pop
jp
adc
shll
addr16
ljmp
mov
sub
into
sti
int3
push
xchg
cmp
mov
cmpsl
repnz
push
out
pop
push
mov
push
cmp
or
xchg
add
add
inc
sti
jnp
imul
outsl
js
daa
jmp
test
sti
xchg
adc
dec
xchg
cmp
add
out
aas
ss
pop
loope
xor
sbb
mov
in
xor
xchg
mov
popa
pushl
add
orb
test
aas
repz
jle
in
popa
jl
adc
test
mov
push
sti
call
lock
ds
in
jp
cwtl
dec
mov
add
mov
shr
and
lret
lods
inc
pop
ss
inc
jl
xchg
cltd
iret
xchg
push
and
mov
cwtl
rcl
adc
pop
dec
inc
mov
les
cmp
or
sub
mov
or
push
jne
adc
or
sub
pusha
or
repnz
ljmp
cwtl
add
ss
cmp
rorb
lds
pop
dec
mov
cmpb
in
sbbl
daa
shll
sub
dec
cmpsb
out
aaa
and
lahf
into
push
adc
jmp
mov
fcompl
lods
fadds
or
mov
imul
stos
mov
sti
mov
pop
push
add
sbb
setbe
xchg
repz
sbb
dec
sbb
aam
sarl
jle
test
cwtl
int3
mov
outsb
xor
cs
or
or
into
jl
mov
insb
bnd
test
xchg
mov
cmp
mov
std
sbbl
jb
add
xchg
or
adc
or
xchg
or
cmpsl
or
scas
mov
int3
sti
fs
mov
mov
out
and
mov
push
jl
jge
insl
or
in
sti
jmp
or
cltd
jno
mov
mov
mov
cmpsl
pop
lods
sti
mov
fildl
int
cs
dec
arpl
xchg
xor
add
std
cmpsl
jp
dec
cmp
in
in
push
push
in
push
mov
push
rorb
repz
adc
jno
sti
mov
inc
int
push
enter
mov
fsts
jo
addr16
dec
push
inc
pop
lret
ror
mov
dec
cmp
jle
jp
cltd
repz
int
mov
pop
pop
jle
pop
jg
mov
xchg
xor
jno
push
not
femms
xchg
and
movsb
je
dec
cmp
jo
test
mov
aaa
xchg
jnp
push
stos
add
ja
adc
mov
xlat
adc
jne
lea
fs
dec
std
lahf
inc
push
dec
sti
pop
out
fisttpll
inc
pop
xchg
aas
out
push
les
stos
jns
sti
gs
lret
aas
stos
xchg
mov
or
pop
add
enter
mov
into
mov
mov
dec
fsubrl
test
pop
or
or
ret
xor
dec
pop
cmp
adc
addr16
pop
stc
inc
daa
cmp
das
and
scas
xchg
aaa
jp
jg
or
dec
adc
push
mov
lret
jo
dec
sub
insl
xor
lret
in
fisttpl
cmp
mov
popf
jnp
push
in
xor
mov
mov
fsubrs
inc
ret
push
imul
ret
or
ret
mov
add
faddp
lahf
sti
jp
inc
int
adc
call
xchg
orl
shrb
inc
int
clc
cmc
pop
or
lock
or
jo
mov
inc
inc
or
cmp
xchg
sub
xchg
stos
cmp
imul
push
loope
sub
xor
jae
inc
jle
sub
inc
sti
leave
rclb
and
push
adc
aam
xor
pop
std
ss
mov
jl
stos
inc
inc
cltd
in
lcall
pop
cltd
add
pusha
xchg
into
push
pop
dec
push
lods
icebp
dec
ret
in
stos
xchg
repz
dec
jb
or
pusha
and
mov
hlt
push
xchg
stos
test
sub
push
int
bound
jg
orl
fidivrs
mov
cwtl
sti
loopne
add
loop
mov
in
push
xor
xor
add
and
scas
add
cmp
call
std
and
push
adc
pushl
xor
outsb
or
fmul
mov
loop
cld
pop
xor
mov
xchg
orl
mov
addr16
mov
cmp
xchg
mov
sbbl
cmp
xchg
ds
jne
cltd
pop
mov
sbb
mov
push
jge
cld
andb
or
cld
test
jns
roll
pop
or
or
dec
adc
xchg
ljmp
xchg
cmpsb
mov
int
sub
scas
jnp
movsb
mov
mov
or
sub
mov
mov
movsl
push
ret
aad
fwait
jbe
mov
adc
stos
mov
adc
dec
test
mov
int
cmp
loopne
jnp
lds
popa
shll
test
add
addr16
mov
add
mov
jle
or
push
inc
imul
outsb
cmp
out
movsb
fistps
shl
pop
rol
js
dec
imul
inc
int
cli
aad
dec
std
mov
scas
cmp
in
xrelease
iret
sub
sbb
push
or
lret
pop
incl
pusha
std
push
sti
fsubrl
mov
push
cmpl
aad
fldt
movsl
cmp
cmc
jae
insb
mov
dec
inc
jno
sub
jns
movsl
mov
pop
mov
inc
jae
adc
mov
or
adc
out
cmp
mov
and
mov
cmp
xchg
ljmp
lods
daa
inc
int
scas
cld
push
push
jecxz
push
les
or
aaa
sbb
imul
sub
pop
cmpsb
mov
mov
xchg
adc
loope
pop
dec
rorb
or
dec
lea
xor
pop
out
xor
fwait
sbb
lods
pop
mov
rcrb
jnp
popf
in
cmp
push
dec
outsl
or
inc
push
jmp
inc
mov
call
fcmovnb
rcrl
les
push
sbb
or
push
pop
fs
test
sub
stc
push
lods
add
lret
out
mov
cld
test
mov
mov
jae
and
sub
xchg
nop
or
insb
fdivrs
push
cmc
icebp
lahf
adc
lcall
xchg
das
add
mov
popf
mov
xchg
iret
subl
mov
jno
mov
pop
pop
call
dec
push
jno
add
sbb
mov
rcll
add
or
xchg
lret
or
jo
push
cwtl
insb
pop
sbbb
cltd
sti
popf
insl
adc
cmpsl
into
divl
imul
pop
fildl
cmp
push
add
mov
testl
into
mov
xchg
out
out
cmp
dec
and
xor
jmp
sbb
mov
and
pop
jmp
dec
ret
mov
xchg
sub
sti
add
sbb
int
xlat
rorb
mov
mov
and
icebp
xor
sahf
ljmp
mov
add
test
lods
repz
add
ret
inc
lcall
int
xchg
sbb
mov
dec
in
frstor
push
jnp
adc
jp
addl
sbb
in
mov
movsb
dec
dec
dec
mov
lea
fdivr
pop
mov
xchg
or
cltd
cmp
rorb
dec
dec
mov
inc
lods
sub
add
call
dec
sbb
jl
cli
les
push
inc
rclb
cmp
fiaddl
hlt
push
mov
pop
or
mov
sbbl
mov
jge
adc
dec
js
arpl
insl
fs
dec
mov
push
pushf
add
push
cmpsb
stos
or
call
adc
mov
sub
out
mov
lock
aam
adc
sarl
out
inc
dec
cmp
rorb
jno
adc
jne
and
add
jnp
arpl
movsl
cmp
pop
mov
jg
sub
out
out
lea
invd
sti
jmp
pop
lret
mov
and
loope
push
inc
mov
test
and
pop
mov
jno
rcr
lcall
call
or
mov
std
push
cltd
into
jno
fwait
pop
arpl
call
sahf
pop
push
inc
mov
mov
cltd
cltd
inc
push
or
mov
adc
push
jle
cmp
adc
mov
sbb
ss
or
cltd
xchg
push
out
mov
mov
adc
repz
call
jns
cmp
testb
add
test
add
shll
imul
cmpsb
test
lahf
inc
std
outsb
sub
or
dec
addl
mov
add
push
stos
xchg
push
leave
sub
pop
inc
mov
mov
mov
xchg
mov
std
ret
and
pop
xchg
jmp
push
int3
sbb
dec
pop
fs
mov
setle
js
enter
mov
push
dec
int
push
sti
xor
aam
fwait
clc
mov
int
pop
mov
ret
mov
outsl
push
jo
cmc
repz
dec
xor
mov
mov
sbb
stos
xor
int
push
jp
leave
mov
xchg
fcmovne
pop
sarl
pusha
push
mov
sarb
push
fdivrs
fimuls
cmpsb
popa
lock
add
or
cmc
int
xlat
inc
mov
cmp
adcb
cli
aam
jnp
dec
xchg
pop
cmp
mov
adc
ljmp
icebp
mov
xchg
mov
loope
ja
ljmp
std
mov
sti
loope
xchg
leave
cmp
or
xchg
or
cmp
xchg
sti
mov
inc
push
inc
inc
movsl
sbb
cli
ljmp
pop
sbb
or
aad
outsb
jb
cmc
and
mov
xchg
mov
ljmp
fstpl
mov
repz
sub
movzbl
or
cld
jl
icebp
cmc
push
mov
push
cmp
cmp
mov
cmpsl
clc
xchg
pop
pop
jl
fisubrl
and
enter
out
push
push
add
rcrb
cld
outsb
loopne
mov
aad
jle
cmp
je
add
adc
sti
lahf
or
aad
insl
in
popa
xchg
sub
sti
adc
loop
popa
into
clc
sub
clc
fisubrl
repz
jnp
stos
cmp
rorb
sbb
int
push
jnp
xchg
pop
addr16
enter
divl
test
dec
and
cld
inc
ja
sbb
dec
mov
mov
sub
fcmove
loopne
or
enter
mov
clc
fsincos
test
push
and
dec
testl
cs
decl
inc
lret
insl
imul
stc
call
aaa
cmp
or
or
int
or
add
dec
push
nop
test
or
cltd
testl
mov
jnp
cmpb
lods
icebp
xchg
das
inc
push
xchg
lret
mov
pmaxsw
and
mov
cli
inc
sub
mov
idivl
jne
pop
mov
lods
ficomps
or
mov
mov
rcll
bnd
in
mov
xchg
daa
fimuls
ss
push
movsb
xor
lods
ret
cmp
test
lea
mov
cmc
in
cmpb
sahf
cmp
xchg
mov
xor
les
sbb
lcall
xor
cltd
dec
or
lea
dec
rcrb
or
mov
fsubs
pop
ror
push
aad
popf
mov
or
pop
loopne
mov
je
pusha
dec
insl
push
mov
sti
int3
adc
push
movsl
adcl
iret
fs
prefetch
ds
inc
mov
mov
cli
and
pop
dec
jecxz
or
adc
clc
out
mov
nop
cld
cmc
outsb
icebp
pop
sbb
mov
sti
les
int
jbe
test
ret
subb
mov
mov
mov
out
pop
mov
jo
cld
in
leave
xlat
sub
add
mov
cltd
cmpsl
jle
xchg
add
mov
cmp
out
pushf
inc
push
fsubrs
or
int3
jbe
shlb
cld
sbb
imul
jns
sbb
bound
jl
lahf
mov
jge
push
mov
pop
add
cmpsl
inc
cmpsl
dec
push
adc
popf
in
or
push
jae
jg
jnp
ss
cmp
mov
mov
dec
sbbb
cld
pop
testl
pop
lret
or
and
push
mov
sti
add
mov
sub
aam
xchg
ja
or
mov
jnp
mov
push
mov
xchg
cmp
mull
mov
cmc
dec
loope
std
push
add
ljmp
lret
das
into
int
or
fnsave
test
xor
mov
fdivs
cld
mov
xchg
aaa
or
int3
jnp
mov
or
ljmp
push
int
push
nop
mov
sbb
pop
lods
arpl
mov
xor
aam
xlat
scas
add
mov
or
lods
cmp
and
fsubs
sti
orb
aam
call
lea
sahf
je
ds
nop
cwtl
jecxz
pop
test
test
jne
int3
xchg
stc
pop
outsl
ljmp
popl
cmp
fcmovnu
pop
nop
in
xchg
lea
in
jnp
mov
aaa
cmp
lds
ret
dec
mov
out
adc
ds
pop
sbb
aas
dec
pop
and
pushfw
stos
xchg
aaa
push
adc
push
stos
and
xchg
xchg
jle
into
popl
ds
insl
jmp
mov
and
cmp
mov
pop
pop
dec
dec
jo
enter
xadd
por
jae
int
push
cltd
clc
arpl
jp
das
rcrb
dec
pop
xchg
mov
pop
cmp
add
push
jmp
jne
aas
fwait
cmpl
fwait
outsb
ja
mov
and
cltd
cld
push
mov
and
push
jl
dec
pop
mov
mov
int3
repz
push
es
mov
testl
jg
or
pop
add
int
dec
stos
mov
mov
pop
add
setno
ss
jmp
xlat
cmp
and
pop
iret
push
popa
int3
jns
cld
mov
mov
scas
dec
cmp
outsl
ss
lret
xchg
xor
dec
pop
std
int
shlb
ljmp
aas
daa
cmp
sti
loopne
mov
cld
ret
ljmp
gs
and
push
push
nop
pop
jg
adc
push
cld
arpl
dec
inc
outsl
loope
cmp
fs
pop
into
mov
add
cmp
fdivrl
xor
jnp
popf
ljmp
pop
inc
inc
cmp
enter
hlt
bswap
inc
mov
arpl
sar
pop
int
or
int
push
dec
repz
lahf
mov
mov
jmp
fldl2e
push
cmpsl
cmpl
ds
nop
repnz
mov
fcmovne
in
xchg
jo
mov
int
pop
dec
xchg
aam
jp
add
sbb
xchg
int
pop
sbb
loop
push
xor
push
ds
lock
lret
add
mov
ja
sbb
push
jle
mov
sub
incb
mov
call
orl
sub
sti
xchg
push
cs
jns
sbb
xlat
pop
ret
push
incb
mov
lret
in
lahf
pop
pusha
jne
jg
je
jg
ss
lret
pop
or
add
sbb
imul
push
imulb
dec
jno
stc
lahf
mov
pusha
pop
dec
mov
jl
adc
imul
mov
adc
clc
andb
mov
lods
mov
in
inc
loope
and
and
adc
jnp
sarb
sti
je
imul
cwtl
iret
pop
fs
mov
sub
and
sbb
mov
shl
stos
adc
fwait
xchg
dec
pop
xchg
stos
adc
test
push
lahf
mov
cltd
xorl
fsts
cmovne
push
imul
jbe
jnp
mov
and
pushl
call
inc
outsl
es
dec
insb
cmp
jmp
dec
sub
scas
dec
push
test
cwtl
les
pop
stc
data16
imul
xchg
push
outsb
fmul
jnp
div
mov
xchg
repnz
lea
jnp
mov
and
jge
cmp
xchg
insb
jo
pop
fmull
pop
and
test
test
dec
xchg
call
jl
cmpsl
jnp
cmpb
fdivl
mov
cmp
mov
sarb
cmp
fwait
ds
lret
sarl
dec
adc
ds
or
into
cmp
cmp
inc
cld
push
lret
int3
and
pusha
js
mov
pushl
and
push
je
push
mov
ss
inc
inc
push
inc
in
inc
lods
iret
in
shll
cli
adc
stos
int
pop
ljmp
sti
in
sub
leave
imul
cmpsl
xlat
in
pop
add
xor
xor
push
mov
test
fdivrp
cltd
or
xchg
xor
incb
xchg
outsb
dec
or
sahf
push
cmpb
jnp
cmp
xchg
jl
xorl
enter
fidivl
lea
fs
inc
mov
fucomi
sti
in
rolb
ret
mov
pop
inc
mov
test
pop
mov
and
push
out
pop
hlt
xor
sbb
cmovae
xor
xchg
inc
pop
jnp
sbbl
and
addl
jp
cmpsl
ja
mov
mov
and
pop
insb
push
mov
or
into
std
xchg
mov
shl
call
out
fidivl
pop
sti
mov
jnp
shl
jne
sub
pop
cld
int
jge
or
cmc
hlt
mov
jo
popa
or
sbb
mov
cltd
addr16
inc
fwait
cld
push
inc
dec
test
dec
mov
repz
xor
into
jbe
mov
bound
ret
jmp
sub
jge
mov
jle
xchg
pop
mov
mov
mov
and
jge
push
inc
jp
sbb
idiv
mov
pop
movsb
ffree
je
sbb
xchg
in
sbb
ja
mov
sbb
jge
outsl
jae
subl
repz
lods
outsl
inc
or
jmp
loop
push
and
sarl
dec
lock
xchg
icebp
movsl
xchg
and
sub
dec
inc
sub
sub
shrb
sahf
mov
add
add
inc
subl
orl
pop
out
aas
xchg
mov
movsb
enter
mov
andl
cli
popf
cmc
add
jns
into
mov
push
adc
or
add
pop
lahf
mov
out
enter
jne
and
pop
cmp
jbe
fwait
adc
and
rolb
push
mov
fstpt
addr16
dec
fwait
push
dec
in
cmp
mov
sbb
cmp
repz
pop
inc
aaa
cmp
xchg
adc
xchg
std
push
outsl
xor
dec
sar
lods
mov
inc
pop
or
push
mov
lea
and
in
and
out
stos
popa
test
pushf
push
push
dec
adc
lret
gs
in
mov
add
mov
push
lcall
sbb
dec
mov
pop
cmp
addr16
adc
lea
pop
adc
xchg
xchg
lret
jo
add
mov
pop
xor
jg
nop
jecxz
ret
pop
dec
push
inc
cs
jp
les
push
into
ffreep
cmp
push
sbb
add
lds
iret
mov
scas
mov
push
pop
orb
test
xchg
mov
outsl
or
out
ja
stos
pop
mov
inc
out
push
mov
jg
jle
clc
inc
pushf
mov
nopl
out
cli
fdivl
inc
call
fwait
xchg
hlt
mov
jb
sub
or
jb
sti
stos
std
movsl
adc
pop
cmp
daa
into
mov
jno
pop
xchg
pushf
push
mov
lock
popa
popf
outsb
fdivrs
loopne
jbe
xchg
lret
outsl
popf
pop
aad
sbb
in
insb
mov
jne,pt
aam
inc
pop
sub
mov
inc
or
push
jae
int
inc
jbe
or
insb
and
inc
popl
xchg
stos
cltd
and
xor
jmp
or
loop
mov
jnp
mov
insb
xor
mov
ljmp
push
outsb
push
into
je
push
jl
sti
adc
mov
or
or
mov
xor
rorl
sbb
sub
jnp
daa
jle
xchg
sub
push
ret
add
and
in
scas
jne
das
pop
push
jle
repnz
bound
dec
int3
and
dec
out
lods
inc
or
push
add
dec
roll
cmp
decb
sarb
bound
ret
in
pop
xchg
sbb
rorl
repz
stos
sbbb
mov
xchg
lret
mov
out
inc
cmp
aad
loope
arpl
shlb
aaa
mov
xchg
cwtl
shlw
mov
addr16
cmp
orb
or
cld
insb
test
shll
lcall
jp
movsb
mov
sub
dec
push
sub
in
mov
sti
mov
push
js
movsl
sbb
fmull
das
cmpsl
jbe
test
fwait
mov
mov
lahf
imul
mov
jge
pusha
xor
mov
loop
int
pop
cmp
pushf
or
pop
lcall
dec
mov
pop
fwait
js
test
or
nop
dec
push
add
pop
mov
fidivl
mov
sar
ret
es
into
push
xor
inc
inc
inc
dec
aas
push
sub
mov
out
dec
mov
je
xchg
xor
int
cmp
icebp
cmpsb
loopne
leave
add
cmp
add
mov
jnp
cld
outsl
hlt
xchg
mov
pop
and
repz
cmp
sar
int
push
adc
dec
ficompl
imul
mov
in
int
adc
jp
xchg
xor
sti
jl
xor
mov
sti
lds
mov
add
push
jnp
mov
mov
mov
outsb
popf
cmp
adc
or
pop
and
adc
mov
xchg
aam
cmp
mov
dec
inc
mov
insb
cld
inc
cmpl
stos
mov
add
mov
repz
push
popf
ret
in
cmp
xor
aaa
pop
dec
xor
add
mov
fcmovnb
aam
cmpsl
stos
xchg
jnp
sub
das
jo
test
in
cld
xchg
pop
xor
jae
or
xorb
mov
jmp
gs
adc
fwait
adc
mov
ja
or
push
and
xchg
arpl
cmp
add
jecxz
lret
sbb
inc
pop
mov
fsubs
sti
mov
repz
jno
sbb
test
dec
call
arpl
scas
std
sub
dec
or
sub
add
orl
int
jp
je
adc
and
in
add
jl
les
jb
mov
clc
popf
cmc
jmp
mov
pop
cmp
jnp
loope
push
pop
or
push
nop
or
pop
ljmp
int
insl
cmp
loopne
jne
xchg
cmp
cli
stos
push
add
and
stos
lcall
push
bound
stos
fstpt
dec
jo
movsl
mov
sub
inc
cmp
push
mov
jo
in
sub
flds
mov
loopne
sub
jl
mov
mov
in
ljmp
xchg
gs
aad
cmp
insl
ret
nop
movb
test
mov
xchg
subb
xchg
lahf
stc
xor
xchg
xor
sar
sub
movsl
or
pop
mov
in
arpl
inc
fistpl
jl
mov
fists
mov
aaa
gs
and
push
mov
aam
ficomps
rorl
imul
mov
dec
pop
sahf
or
jnp
push
jecxz
sub
jnp
mov
imul
pop
dec
mov
and
mov
fdivrp
jb
mov
push
aad
sar
lcall
lcall
adcb
mov
iret
jnp
mov
or
mov
filds
mov
out
sub
sbb
cwtl
int
adc
orl
subl
pop
ficoms
outsl
mov
mov
insb
lods
out
cmc
jo
mov
sti
insl
sti
adc
cld
std
outsl
xor
je
lret
pop
add
gs
push
mov
test
dec
adc
jno
cwtl
mov
int
addr16
filds
insl
sti
jmp
jnp
in
rcrl
sti
in
add
push
sbb
outsl
xchg
fsts
dec
sub
cld
cmp
mov
pop
ret
les
repnz
add
jnp
fildl
jno
int
jge
sbb
mov
push
jmp
cmpl
pop
push
mov
pop
ja
fdivrl
inc
inc
enter
or
inc
add
lahf
cld
ror
adc
idivl
aas
scas
mov
das
add
push
mov
jmp
ror
adc
int
and
and
aad
pop
ljmp
adc
cmp
cmpsl
jge
jl
jg
adc
xchg
fnstsw
sbb
jge
dec
sti
cmp
dec
dec
pop
std
jmp
daa
cmp
add
xor
stos
pop
sarl
ficoml
cltd
mov
je
test
xchg
ret
lds
or
push
mov
xchg
jnp
push
xchg
push
cmpsl
mov
and
jnp
cmpl
js
insl
pop
pusha
or
fs
hlt
pop
les
mov
aaa
cmp
pop
sbbb
arpl
ret
clc
adc
push
lods
sti
mov
iret
inc
movq
daa
daa
stc
mov
sti
dec
nop
or
scas
test
inc
jae
loope
xchg
aad
jne
sti
andl
stc
xor
lods
xor
cmp
sbb
imul
nop
out
push
int
push
jns
xchg
mov
or
outsb
cwtl
fs
sbb
adc
je
cwtl
jp
test
fdivr
jmp
mov
pop
out
out
push
xor
adc
xchg
jb
and
sti
push
mov
cmp
nop
xlat
fcmovnbe
or
cmp
sub
icebp
push
or
xchg
ret
jbe
lods
rcrb
cltd
mov
sbb
jmp
inc
sbbl
dec
mov
sar
sarb
inc
cld
inc
jecxz
push
ret
cmpsb
ror
and
test
jecxz
mov
mov
cmp
dec
pop
mov
xchg
into
stos
adc
add
cmp
cmc
push
sbb
jg
mov
mov
push
xchg
loop
push
fisubl
dec
sbb
jbe
fidivrs
std
mov
cltd
lahf
movsl
loopne
dec
insl
push
fmuls
mov
stos
sbb
push
xchg
dec
shlb
mov
jb
xchg
and
cmp
jb
inc
lods
cwtl
fidivrs
dec
in
jnp
xor
inc
jp
mov
les
idivl
test
xchg
mov
xor
jb
inc
stc
fisubrs
call
jno
mov
jmp
enter
andl
jnp
fcompl
mov
nop
mov
mov
xchg
inc
jo
xchg
sbb
push
jp
insl
ljmp
int
dec
jecxz
insb
mov
inc
inc
fidivrs
xchg
int3
dec
dec
in
cmp
push
xchg
fscale
inc
or
lcall
lret
aam
int3
dec
pop
scas
dec
filds
xchg
aad
mov
dec
or
stos
fisubrl
mov
or
into
jnp
fsubl
std
cmp
add
rolb
mov
mov
aas
cmpsb
add
jo
addb
dec
orb
push
push
pop
cmp
push
stos
mov
rolb
leave
jnp
aas
das
cs
cmp
dec
aad
dec
addr16
dec
aam
sbb
jg
or
aam
mov
xlat
jge
xchg
mov
imul
inc
pop
cli
test
dec
fisubrs
leave
repz
lods
lret
push
fwait
loop
jmp
test
dec
mov
jge
cmp
pop
jg
jb
das
or
xor
in
mov
cmp
pop
lret
je
outsl
rcl
or
jnp
call
rol
bound
out
inc
scas
shrl
dec
xor
aaa
test
xchg
das
or
mov
xor
int3
out
dec
lahf
subl
out
mov
arpl
xchg
mov
adc
cmp
sbb
fidivrs
inc
int
and
stos
decb
daa
inc
dec
in
ss
pusha
int
adc
test
push
repz
mov
fnstcw
out
dec
mov
push
andl
inc
dec
dec
aaa
or
cwtl
push
jmp
sbb
jns
mov
ficoml
mov
and
lods
dec
xor
sub
xchg
sub
mov
mov
cmp
test
cmp
xchg
inc
pop
jmp
test
dec
out
adc
add
or
mov
lret
xor
mov
push
out
lods
lcall
fcmovb
gs
mov
test
or
jmp
xchg
cwtl
fistpl
xchg
lret
stos
into
stos
jg
adcl
pop
mov
sub
jae
icebp
sbb
push
repz
mov
sti
ja
xor
adc
jmp
shlb
pusha
shlb
aam
add
sbb
in
add
daa
clc
cmp
mov
leave
in
xchg
jp
rcr
enter
std
dec
stos
sti
cmc
pop
xchg
mov
nop
inc
inc
mov
mov
mov
enter
adc
movsl
fwait
pop
mov
mov
adc
cmp
insl
call
sbb
leave
into
xchg
in
jb
fmull
addl
fadds
adc
icebp
cmp
lea
mov
out
sbb
fdivrs
xor
cmpl
rol
imul
hlt
cli
mov
cmpsl
lods
btc
mov
sti
test
les
cmc
stos
push
popa
dec
fisttpll
scas
ret
insb
adcl
mov
shr
cld
inc
and
mov
push
mov
or
push
add
test
into
aad
lret
je
mov
jge
pop
mov
mov
inc
das
and
cmp
mov
sbb
dec
and
pushl
icebp
dec
mov
add
fdivl
std
inc
lcall
fs
test
xchg
mov
or
mov
sub
movsl
lods
fcoms
push
pop
test
mov
push
cmp
xor
loope
cmp
jno
mov
lret
sub
push
ficoms
and
mov
mov
adc
pop
xlat
sbb
inc
lods
cmp
lods
pop
jg
fcom
jge
shll
mov
xchg
adc
mov
xchg
adc
shl
mov
adc
push
jmp
shlb
test
mov
sub
pop
pop
sbb
into
xchg
popa
dec
dec
mov
xchg
cmp
jb
outsb
sar
femms
sbbl
ret
repz
shrb
mov
mov
gs
adc
fsubr
add
dec
inc
push
test
cmp
cmp
xchg
fcoml
dec
stc
pop
pop
pop
dec
arpl
nop
add
sbb
sti
dec
push
jge
add
or
out
pop
sbb
roll
push
jge
lahf
mov
popa
scas
pop
pop
jg
pop
je
xchg
mov
mov
test
cmp
shll
pusha
mov
std
and
sbb
adc
lcall
testb
mov
or
sar
mov
imul
cmp
inc
jge
test
lock
mov
jmp
mov
psubusw
jbe
pop
xchg
mov
in
pop
dec
test
mov
enter
iret
xchg
ljmp
xor
mov
lea
jbe
outsb
lret
push
cmp
pop
ja
xor
cmpl
mov
imul
cmp
leave
rcrb
pop
and
dec
inc
fbld
cmp
mov
sbb
xchg
push
and
dec
push
add
clc
xor
lods
xorl
jecxz
xchg
sti
pop
pusha
ljmp
cmp
notl
push
xchg
sti
leave
adc
jno
xlat
fdivs
xchg
clc
sub
aad
rcrb
sarl
push
shrb
dec
out
xor
pop
lret
icebp
sti
bound
int
je
xchg
mov
or
or
fcompl
aad
cld
rcrb
mov
bound
pushl
lea
mov
subl
fstp
dec
or
lret
xchg
cmpsl
and
stos
add
add
mov
sbb
or
out
mov
bound
int
adc
ljmp
cmp
adc
mov
dec
cmc
insl
in
jle
addb
dec
dec
xchg
push
or
add
lahf
lods
loop
push
add
je
je
adc
js
popa
cmc
lods
sub
sub
xchg
xchg
imul
dec
je
popf
shlb
jnp
fimull
cmp
mov
cmpxchg8b
push
ljmp
sub
scas
loope
xlat
dec
pop
les
xor
int
fs
adc
jnp
jo
fwait
cmp
cmp
lret
movsb
in
mov
imul
mov
dec
sub
adc
dec
sub
lret
hlt
sbb
ret
dec
popa
iret
hlt
fsubrp
shl
mov
fwait
pop
jb
or
mov
loopne
int
popa
loop
xor
repnz
fcmovbe
gs
aad
inc
movsl
cmp
sub
cltd
mov
jo
stos
stos
jge
mov
nop
pop
add
fwait
xchg
xchg
aad
sbb
dec
insb
test
and
popf
mov
xchg
or
leave
push
out
cld
xchg
jl
pop
cld
mov
and
jnp
sarb
lret
lea
mov
add
stos
sub
jge
jl
cld
fistl
pop
nop
popf
insl
ficoms
in
lret
lea
out
and
pop
push
dec
cli
cli
ror
xchg
mov
push
nop
push
stos
xlat
add
or
push
xor
jnp
sbb
lea
fnstenv
int3
xchg
jnp
inc
outsb
jae
dec
mov
ss
push
es
cmp
sbb
inc
and
fninit
jl
inc
xchg
fisubrs
or
mov
call
add
icebp
mov
in
add
mov
lea
xchg
pop
or
dec
jns
mov
enter
push
cmpsl
jmp
mov
xor
pop
add
repz
mov
std
cmc
mov
pop
sbb
add
shll
cld
jnp
jno
fwait
mov
dec
aad
lods
lea
loope
jnp
ss
mov
subl
orb
nop
xor
mov
arpl
adc
or
cmp
mov
iret
or
in
inc
jae
mov
adc
sti
or
mov
add
lcall
mov
insl
jmp
idiv
fcoml
decb
inc
jmp
xchg
xchg
in
mov
push
jecxz
pusha
dec
dec
out
in
sub
inc
jae
jecxz
test
adc
ss
cmp
iret
lea
lea
mov
cmp
mov
lods
int
std
bound
mov
call
pop
int
not
bound
loope
sub
push
jnp
les
mov
add
pop
ret
imul
sub
sbb
mov
popf
int
dec
pop
mov
mov
loope
or
dec
fmuls
pop
prefetcht1
andl
testb
mov
push
rcll
mov
mov
mov
sbb
outsl
ret
fisubs
add
outsb
push
dec
mov
cmp
mov
aas
pop
xchg
sti
push
cli
mov
dec
leave
aam
scas
iret
mov
push
pop
cmpsl
cmp
or
les
ret
pop
mov
subl
stos
jmp
mov
mov
ss
lds
or
mov
adc
cli
add
and
cmp
inc
in
int3
sbbl
add
out
repnz
cmpb
xchg
pusha
sti
sbb
add
fadd
pop
jne
lds
jge
daa
cmp
dec
aas
cmp
sub
mov
push
sbb
pop
jmp
mov
int
dec
sbb
negl
and
testb
or
jns
adc
jnp
dec
mov
sub
lds
int
add
mov
mov
repz
enter
lods
mov
mov
jg
mov
jnp
pop
fwait
xchg
js
inc
sbbl
or
or
invd
cld
push
in
mov
cmp
cmpsl
mov
push
popa
fwait
lret
sti
cmpsl
push
or
cmp
adc
shrl
enter
lret
xorb
rcrl
lret
ret
add
jmp
xor
xchg
push
xchg
out
mov
xchg
ds
sbb
jl
mov
pop
lods
test
shll
std
or
ljmp
insl
or
rorb
cmp
ffreep
movsl
cwtl
inc
lods
aaa
push
cmp
addr16
cmc
cs
push
inc
pop
sbb
add
xchg
dec
jo
loopne
pop
or
cli
push
ret
insb
shll
rorb
pop
xchg
and
pop
sahf
or
jno
neg
clc
sbb
jnp
out
inc
insb
mov
mov
jg
xor
adc
fcos
xchg
xchg
cmp
cmpsb
sbb
cmp
pop
aas
fldt
pusha
sbb
or
add
or
mov
and
dec
xchg
pop
xchg
call
bound
call
ss
xchg
xchg
bswap
mov
adc
sbb
in
lock
dec
cmp
call
xchg
push
sub
add
cmp
sub
lcall
dec
add
xchg
sti
pop
inc
push
cltd
mov
test
jne
push
cmp
jbe
lret
lods
sbb
repnz
icebp
outsl
addl
mov
aas
fnsave
push
xchg
mov
mov
mov
ficompl
dec
lcall
bound
jne
int3
sti
aam
mov
inc
xor
pusha
or
mov
cmp
stos
add
mov
xchg
and
jl
dec
ljmp
push
mov
lea
cmpsl
jae
aas
inc
sub
jl
inc
dec
adc
icebp
inc
sub
and
add
inc
mov
sahf
pop
hlt
mov
divb
fs
in
test
pop
insb
jnp
mov
mov
lret
pop
cwtl
add
sub
inc
jge
nop
jo
jnp
unpckhps
sarb
or
repz
aaa
rcl
sti
stc
adc
in
mov
rcrb
and
sbb
dec
lds
adc
frstor
mov
sub
imul
mov
xchg
push
mov
rcll
test
sti
insb
std
push
xchg
jne
mov
xor
loopne
jp
rorl
mov
shr
mov
arpl
mov
and
push
lret
dec
inc
mov
adcl
cmp
into
dec
mov
ds
imul
sub
rcrb
test
mov
pop
push
jge
stos
xchg
and
fxch
jmp
scas
cmp
adcl
cmc
rol
jmp
xlat
sbbb
push
jnp
mov
cmpsl
push
xchg
daa
cmp
test
add
iret
insl
push
cmp
nop
xorb
pop
repnz
popa
rolb
mov
cmc
jecxz
es
bnd
mov
jg
fwait
insl
pop
insb
mov
mov
mov
or
repz
leave
or
inc
iret
push
jmp
in
cld
mov
mov
nop
jns
int
push
addr16
jecxz
les
popf
mov
cmp
out
xor
int
xchg
inc
dec
mov
cmp
xchg
into
add
adc
mov
jmp
int3
or
pop
fsincos
movsb
dec
leave
pushl
hlt
testb
mov
jne
cmpsb
mov
into
add
adc
xchg
push
mov
add
bound
std
mov
jp
add
es
ret
and
scas
test
popa
movsl
dec
andb
cmp
cmp
test
out
inc
leave
fcompl
or
push
or
shrb
push
mov
pop
mov
cld
jle
icebp
lea
cwtl
dec
test
dec
inc
int3
or
add
cmp
add
mov
dec
stos
outsl
inc
inc
xchg
push
jae
add
xor
cmpxchg
xchg
ljmp
dec
sbb
rclb
or
sub
pushf
mov
dec
aam
lcall
cmpsl
inc
test
inc
dec
dec
repnz
push
push
jl
mov
pop
push
pusha
jbe
dec
xchg
xor
scas
fdivs
mov
lock
lahf
mov
out
add
add
aam
pop
adc
aaa
adc
mov
lret
fstpt
pop
imul
lock
icebp
loop
pop
inc
inc
pop
sub
test
ds
lea
pop
jnp
jmp
jo
and
cmp
adc
jmp
xchg
sbb
jnp
add
call
lahf
mov
jns
dec
mov
mov
adc
fstpt
push
addr16
mov
push
addr16
aam
ljmp
jbe
loope
sub
mov
xor
jnp
xor
bound
aam
cmc
push
jg
mov
push
cmp
jae
mov
push
push
pop
mov
pusha
push
sahf
int3
mov
daa
pop
lods
insl
inc
wrmsr
std
addl
out
lods
jnp
inc
and
push
int
jle
arpl
mov
xchg
fistpl
fstpt
jo
mov
pop
dec
push
mov
xor
fisttpl
cmc
pop
lods
xor
mov
fwait
xchg
adc
into
pop
jg
push
int3
fwait
or
xor
bswap
pushf
in
cmc
or
xchg
cwtl
sbb
add
mov
mov
push
test
call
loope
ret
inc
xor
add
shr
stos
push
dec
leave
aam
sub
pop
lods
int
push
push
cmp
mov
cmpsb
mov
inc
shl
pusha
dec
sar
repnz
ds
in
sahf
dec
fnsave
in
or
mov
fldt
arpl
jae
mov
das
jbe
mov
jne
inc
test
xchg
repz
and
cmp
xor
add
fcoml
mov
orl
test
sbb
jne
pushf
jp
dec
push
mov
push
lahf
or
outsb
sbb
sahf
push
adc
cmpsl
std
dec
mov
xor
insl
jno
push
mov
mov
and
mov
jns
mov
outsl
jno
adc
insl
imul
push
cmpsb
adc
lods
inc
cmovns
jge
pop
imul
mov
push
xor
in
mov
pop
test
aaa
pop
gs
lcall
ret
iret
imul
cld
xor
xor
and
jl
jl
push
imul
inc
mov
jo
cmpsb
notl
rorl
repz
xchg
in
or
mov
sbb
ljmp
aas
and
jg
cmpsl
sti
cmp
sbb
cmp
xor
sbb
popa
lock
idivb
lret
rcrb
rorb
jge
pop
xchg
rcrl
lods
ss
adc
lahf
jnp
mov
or
cmp
mov
fbstp
lret
jmp
imul
cmp
fistpll
pop
test
js
sbb
or
or
add
outsl
mov
addr16
outsb
pop
add
mov
and
pop
fnstenv
shrl
mov
and
push
pop
shlb
rcrl
orb
push
dec
sbb
dec
bound
decb
adc
push
pop
ret
sti
dec
rolb
xor
mov
mov
lret
repz
mov
sti
mov
aaa
jno
or
mov
sub
pop
out
cmp
dec
fs
lret
and
ret
dec
xchg
xchg
mov
jnp
loopne
sub
pop
xchg
adc
mov
popf
imul
mov
fdiv
out
mov
scas
out
cltd
mov
pop
imul
add
push
shrb
int
aaa
mov
ret
les
dec
cmp
jnp
ret
push
lods
cmp
aad
add
shlb
push
xchg
test
insb
test
xor
push
fs
jne
sti
sbb
lea
adc
pop
cwtl
int
gs
ret
int
out
ja
mov
shl
jne
int3
sti
pop
ret
pop
lds
add
int3
std
dec
adc
clc
in
rcl
sub
addr16
mov
xchg
or
adc
loopne
fwait
test
cmp
add
pusha
lret
cmp
sub
adc
fistps
cmp
icebp
sbb
stos
int3
pop
daa
cli
arpl
movsb
lds
pushf
mov
pop
cmpb
leave
bswap
dec
jnp
mov
mov
fistpll
jne
push
stos
adc
mov
outsl
dec
cmc
sbb
mov
test
mov
rolb
mov
pop
ror
or
int
mov
ja
int3
cmp
jge
sbb
fistpll
int
aas
outsl
xlat
cmp
int
sti
iret
lahf
iret
fwait
mov
in
or
aam
cmp
std
adc
iret
mov
jp
repz
push
iret
imul
mov
push
arpl
pop
int
and
out
jbe
or
mov
leave
jle
divb
aam
lods
shl
inc
mov
insb
inc
jp
adc
sbb
or
mov
fisttpl
in
sub
jnp
jl
cmp
jge
lret
mov
add
data16
in
pop
jp
mov
cmp
cmp
mov
add
fwait
imul
call
mov
sbb
add
icebp
mov
push
movsl
xchg
pop
fnsave
push
adc
xchg
jle
cmp
cmpsl
mov
pop
or
jg
fistl
cmp
imul
mov
fidivrl
mov
sbb
inc
rorb
inc
adc
enter
and
xchg
bound
xor
stos
icebp
icebp
into
test
sub
stos
pushf
mov
dec
rolb
jae
jg
lea
lahf
int
test
sbb
and
xchg
mov
lds
inc
mov
pop
mov
jg
js
aaa
cld
outsb
push
ret
xchg
lret
sbb
sbb
in
jg
lods
dec
aas
je
and
gs
mov
or
mov
sahf
adcl
xlat
adc
les
das
and
fs
mov
pusha
xchg
cmp
std
sbb
add
lods
push
jmp
pop
mov
dec
aas
dec
push
mov
xchg
mov
fucomp
out
inc
xchg
or
fwait
inc
or
test
jl
dec
in
and
add
xchg
push
fwait
aas
inc
mov
dec
and
testb
add
jne
push
sti
fldz
pop
or
loop
cld
insl
es
inc
mov
inc
aaa
stc
push
push
ljmp
sub
lret
cmp
mov
xchg
jns
popf
xor
test
imul
ljmp
sar
cmp
mov
mov
shlb
lods
int
adc
cmp
jecxz
jecxz
popf
mov
mov
cmpsl
in
mov
mov
or
sub
pop
or
jb
rcrb
push
rcrb
sbb
stc
mov
scas
lahf
mov
mov
xor
insl
xor
cmpl
shlb
sbb
rcl
fwait
int
sub
push
sub
sarb
cmp
pop
and
mov
and
aad
pop
mov
push
lds
jge
dec
outsb
fmull
xchg
pusha
out
insb
dec
rorl
push
int
dec
hlt
fucomip
sbb
mov
adc
cmp
mov
mov
or
mov
jle
or
fdivl
or
fsubrl
nop
jmp
or
jne
jecxz
enter
imul
daa
lods
clc
insl
sbb
inc
std
cmp
jo
pop
mov
pop
pop
push
xchg
mov
mov
dec
pushl
xchg
sbb
cmp
les
test
mov
mov
jns
adc
inc
scas
lahf
rcrl
add
popf
dec
inc
stos
jle
xlat
adc
dec
jne
sub
mov
dec
ss
add
fisttps
aaa
gs
rorb
dec
subl
push
xor
mov
sub
and
mov
popf
fs
mov
mov
jns
in
pushf
xchg
or
enter
pop
sub
xorl
push
dec
jae
out
in
xlat
adc
icebp
mov
jns
in
mov
xor
aam
sbb
lahf
cmp
xchg
sbb
clc
cmc
lcall
test
fadds
inc
ljmp
jp
scas
pop
pop
xor
lods
sbbl
nop
mov
into
mov
mov
out
jae
out
or
sbb
scas
dec
jl
addr16
and
pusha
xchg
inc
outsl
or
and
shl
ljmp
sbb
mov
add
cltd
pop
cmp
pop
insb
scas
lods
adc
outsb
outsl
lods
scas
adc
mov
sub
out
stos
or
push
outsl
jne
cwtl
pushf
dec
dec
sub
inc
cmp
pop
popf
frstor
pop
movsl
dec
push
cmp
lds
gs
sti
xchg
mov
pop
inc
fildll
loope
dec
int3
test
stc
cmp
js
shrl
pop
lods
dec
mov
push
mov
arpl
adc
xchg
sti
mov
jbe
hlt
push
js
sub
mov
sbb
lods
cld
push
cwtl
cmp
cltd
cmp
mov
in
inc
lahf
and
add
aaa
popa
sub
push
push
push
jmp
insl
mov
sarl
xchg
insb
mov
or
mov
sub
adc
xchg
sub
leave
mov
popa
pop
movsb
ds
rcll
push
cltd
in
stos
xor
mov
cmp
inc
xor
sbb
cmp
xor
or
stc
imul
pop
cs
cltd
add
jbe
inc
fwait
outsl
inc
imul
andl
lcall
iret
push
andl
rorb
cmpsb
bound
push
repz
sub
rorb
dec
push
xchg
dec
imul
cmc
push
mov
cmp
data16
sbb
mov
int3
push
cmpsb
aam
in
cld
jle
test
mov
pop
call
repz
cmpsb
ret
outsb
mov
dec
mov
or
imul
sti
jb
and
mov
jecxz
pop
mov
inc
inc
cmp
adc
mov
mov
sub
cmp
pop
sub
jle
push
dec
hlt
decb
adc
pop
cmp
sub
lret
and
fwait
lds
icebp
les
mov
mov
ds
stos
mov
dec
xchg
test
in
aas
dec
dec
mov
popa
fcoms
lock
adc
fldt
push
push
call
jmp
adc
adc
push
jb
dec
jbe
mov
mov
ret
test
shlb
jbe
in
sarb
xchg
lock
dec
dec
xor
and
es
mov
in
add
into
cmp
jle
test
sub
mov
icebp
jnp
xor
lret
test
pop
or
mov
jecxz
ror
in
mov
lret
pop
add
sbb
call
arpl
insl
cmpxchg
dec
jno
pop
jns
sbb
mov
adc
inc
decb
inc
sti
imul
cmp
dec
pop
sbb
movsb
lret
cmp
and
push
and
fstl
push
xor
sbbb
lea
data16
inc
mov
xchg
push
stos
popa
adc
push
adc
or
out
pop
dec
jmp
lods
xchg
repnz
lods
test
mov
iret
adc
xlat
les
sar
sti
push
test
pop
les
stos
fimuls
pop
add
sbb
notl
mov
sbb
and
add
lods
sti
dec
jo
mov
sub
nop
shlb
mov
pop
jns
sbb
in
xchg
imul
dec
xchg
mov
fistps
mov
add
or
cmp
mov
push
xchg
ds
dec
inc
jno
in
lods
rorb
push
sbb
popa
adc
inc
dec
sub
jb
sarb
cli
dec
or
andb
mov
mov
adc
andl
dec
jp
fcomp
jl
data16
bound
push
aas
inc
cli
jmp
fimuls
or
repnz
cmp
jnp
sub
mov
orb
dec
std
add
loope
push
sbb
lcall
rclb
cmp
and
jns
mov
cmp
stos
cwtl
sbb
mov
add
pusha
rcr
insl
scas
dec
bound
mov
and
mov
movsb
sbb
in
out
push
bound
pushf
mov
stos
adc
or
jnp
jb
nop
inc
enter
and
mov
mov
in
loope
lret
sub
push
ds
inc
xchg
mov
fwait
push
outsl
xor
orb
jge
cmp
push
xor
lcall
je
cmp
add
sub
and
mov
mov
fcomps
push
ljmp
aam
sbb
dec
xchg
dec
push
sbb
cmp
adc
lods
mov
pop
test
in
in
sbb
dec
xor
nop
loopne
lea
push
sbb
in
pushw
mov
cs
mov
popf
ret
pop
xor
addr16
jp
lods
xlat
mov
sub
inc
cmp
push
out
pop
fsubl
sarb
cmpl
dec
es
sbbb
mov
jnp
inc
popf
jmp
aad
push
daa
punpckhdq
jle,pn
aas
dec
ret
outsb
mov
pop
imul
out
mov
pop
das
push
sti
loope
or
pop
mov
repnz
mov
test
ja
cld
imul
iret
cmp
push
mov
jb
xchg
pop
jecxz
adc
xlat
sti
lret
dec
scas
sub
dec
sub
fwait
cmp
sbb
cltd
or
mov
dec
pushf
dec
cmpl
inc
negb
repz
mov
sub
xlat
ficoml
and
lds
pop
lret
pop
dec
call
rcrb
sti
lds
sub
roll
fdivs
dec
popf
push
sub
pop
mov
movaps
cltd
xlat
mov
push
in
mov
xor
mov
xor
out
jg
mov
pop
sbb
pushf
jecxz
dec
pop
aas
pop
inc
fwait
xor
adc
sbb
mov
stc
mov
fiadds
push
dec
adc
cld
mov
add
add
int
ret
inc
cwtl
jnp
call
mov
cmp
cmp
push
gs
ds
gs
out
ret
arpl
sti
push
pop
int
mov
add
jmp
xor
push
jo
push
or
xchg
sub
sahf
aad
icebp
adc
leave
mov
lahf
sub
jo
jb
lods
xchg
fs
adc
xchg
jae
pop
in
lea
addr16
pusha
add
sub
fldl
in
jne
pop
test
jo
pop
mov
add
lcall
int
inc
dec
jno
stc
test
orb
adc
decb
out
pop
cmp
popf
jecxz
cmp
cmc
in
dec
sub
pop
fwait
jne
aaa
dec
cmp
mov
outsb
pop
sub
scas
and
fistps
push
mov
mov
or
push
lret
and
jecxz
lret
fmul
or
adc
cmp
je
dec
push
movsb
mov
lahf
adc
daa
sub
fisubrl
push
fs
jnp
jno
imul
dec
repnz
daa
inc
sub
and
movsb
into
cmp
push
adc
push
repnz
jg
sub
mov
stc
les
imul
sub
push
cmp
dec
jnp
sbb
out
out
push
mov
mov
icebp
xchg
cli
push
pop
cmp
cmp
scas
xchg
sbb
into
lea
scas
mov
mov
or
aad
and
pop
in
jg
ljmp
ja
lods
sub
sbb
fmul
call
jb
fdivrp
xchg
ja
jae
push
cmp
pop
lcall
inc
xor
cld
pop
ja
mov
xor
cld
sub
fdivrp
cmp
cs
lahf
lret
fidivrs
repnz
sbbb
jnp
sarl
push
dec
inc
addr16
lcall
cmpsb
fsts
call
mov
lret
sub
jge
jnp
xchg
mov
cmp
ljmp
int
lret
inc
pop
mov
icebp
jge
jne
aaa
adc
add
jns
push
jge
pop
mov
shrb
les
dec
int
imul
dec
sbb
int
or
sbb
cld
ret
stos
movsb
xor
fiadds
pop
es
jmp
jecxz
cmp
imul
leave
cwtl
dec
fbstp
xchg
xchg
pop
jge
in
fisttpll
xchg
mov
mov
mov
mov
dec
fiadds
cwtl
je
sbb
jb
shll
push
add
sti
cmpsl
dec
in
aaa
pop
push
xchg
mov
rcll
mov
jecxz
jb
movsb
stos
jns
addr16
loope
out
lcall
pop
adcl
lret
testl
outsb
cld
or
lret
aad
fs
mov
into
mov
push
iret
aas
dec
adc
sbb
sbb
xor
add
dec
xchg
out
sub
dec
clc
jge
and
mov
dec
aaa
cmp
loop
add
pusha
mov
fadd
test
jecxz
dec
xor
out
aaa
pop
dec
lret
pop
dec
adc
insb
das
outsb
add
int
inc
cld
loopne
mov
rorb
fildl
cld
rcrb
fldcw
mov
pop
cmp
out
gs
pop
push
jnp
dec
and
leave
lcall
dec
clc
mov
leave
jnp
imul
inc
xor
movntps
idivl
cmp
mov
imul
std
dec
into
movsb
xchg
sbb
push
dec
je
mov
icebp
or
imul
jg
inc
cld
test
mov
cmpsl
and
sti
pop
test
int3
pop
testl
lcall
push
insb
cmc
clc
cmpb
xchg
fcoms
xor
xlat
jge
dec
push
scas
jnp
fldcw
inc
xchg
inc
pop
jg
repnz
sub
dec
dec
push
lock
std
inc
cmp
lock
nop
cmp
int
sub
aad
mov
leave
and
mov
std
stos
movsl
insb
dec
push
push
imul
cmp
jmp
jne
lcall
repz
pop
repz
xorb
sbb
sub
jl
out
js
mov
sbb
dec
add
call
mov
xlat
jb
sti
jne
sub
mov
cmpsb
xchg
xor
mov
inc
sahf
cs
imul
add
iret
shl
decl
or
mov
int
push
outsl
mov
or
in
xchg
mov
std
mov
push
ds
push
pop
jg
mov
nop
push
mov
call
mov
xlat
lcall
btr
pop
dec
inc
or
cmp
enter
xchg
push
scas
xchg
jmp
mov
imul
adc
adc
outsb
into
idivl
xor
inc
nop
out
out
inc
cvtps2pd
push
push
fnstsw
movsb
mov
leave
mov
lret
mov
out
inc
dec
sbb
cwtl
push
push
add
mov
cmpsb
pop
push
jecxz
mov
cli
adc
adc
jle
mov
mov
xchg
and
in
or
lahf
shll
pop
ja
leave
jnp
into
ja
add
sub
adc
push
testl
test
fisubs
mov
repnz
mov
jg
mov
inc
lods
inc
or
int
arpl
adc
add
orl
popa
add
dec
cmp
icebp
insb
mov
push
ret
adc
dec
and
sub
movsl
sbb
add
mov
sbb
repnz
dec
or
sub
or
mov
adc
dec
and
inc
dec
rorl
idivl
dec
adc
adc
out
or
cltd
xchg
rep
or
pop
push
int
movsb
fwait
mov
add
dec
jne
pop
movsl
sti
and
shlb
dec
inc
push
dec
mov
insl
dec
cmp
int
mov
jmp
adc
jp
lahf
mov
push
jmp
jnp
pop
xor
mov
jo
pop
mov
jmp
clc
add
or
imul
mov
mov
dec
mov
add
and
mov
nop
add
cmp
or
add
inc
sbb
sbb
lods
ja
test
push
cmp
faddl
sbb
aam
cmp
mov
mov
push
push
cmpsb
add
sub
dec
dec
roll
std
mov
into
pop
imulb
jnp
push
hlt
adc
pushf
push
mov
int
xchg
jbe
add
xlat
xchg
xor
and
dec
cltd
dec
gs
inc
dec
in
xchg
push
pop
or
sbb
lahf
je
adc
sbb
iret
in
mov
repz
push
lahf
dec
inc
mov
mov
or
push
fsubrs
mov
cmc
in
imul
push
adc
test
sbb
fmull
adc
mov
jnp
add
mov
mov
jge
pop
xchg
add
dec
aas
dec
fimuls
shrb
dec
push
mov
popf
fst
sti
jge
mov
addr16
adcb
enter
push
mov
data16
and
mov
jbe
rcrb
subl
mov
inc
cmp
imul
bound
add
sbb
stc
ret
outsl
xchg
xor
jnp
inc
or
push
mov
loop
cld
nopl
push
imul
int
xor
jmp
sub
push
or
sbb
int
clc
pop
gs
pusha
outsl
mov
arpl
stos
sti
pushf
out
ret
xchg
pop
jp
mov
xchg
mov
add
mov
mov
das
sbb
jecxz
fsubl
fsubs
sbb
push
and
mov
adc
sbb
push
jg
aad
out
aas
lea
xchg
mov
xchg
ret
mov
jno
shrl
jle
pop
mov
insb
inc
lret
mov
das
cmpsb
dec
cltd
pop
push
sbb
cmpsl
push
lods
mov
into
mov
pop
mul
sti
fildl
cmp
stos
cmp
in
inc
inc
pop
sti
jns
std
ret
xor
adc
shrl
rcrl
xchg
xchg
loopne
das
das
stos
ss
ss
mov
jle
std
loopne
outsb
pop
outsl
int
mov
movl
sbb
pusha
jnp
cli
into
test
sbb
fnstsw
out
jb
fwait
subl
mov
xchg
jl
adc
mov
sub
and
rorl
add
push
mov
xchg
add
cmp
jl
inc
xchg
out
aaa
outsb
nop
lahf
mov
push
mov
jp
mov
push
cmp
dec
and
ss
mov
xor
mov
mov
icebp
pushf
aam
add
jns
adc
xchg
cmp
inc
inc
cmp
jae
dec
ret
scas
jmp
insl
add
fcomip
aas
testb
fldcw
jmp
je
mov
cmp
popf
sbb
orb
sbb
call
push
sub
dec
inc
hlt
mov
jne
sub
mov
jb
mov
mov
mov
dec
pop
adc
add
jne
idivb
iret
arpl
xchg
inc
aam
cmpsl
sub
mov
fbld
mov
dec
jne
mov
pop
ss
int
call
inc
mov
mov
lods
inc
dec
fs
fdivr
cmp
or
add
lods
in
sub
and
cmp
mov
fimull
mov
or
jbe
dec
dec
and
push
mov
aam
scas
add
adc
aad
popf
mov
nop
je
jge
pop
mov
fldenv
lods
dec
aad
cld
adc
push
or
shlb
loop
sti
mov
hlt
mov
lock
scas
sbb
dec
aaa
mov
sarb
aas
dec
mov
mov
lcall
in
mov
mov
or
xor
mov
cmp
test
jle
push
rep
push
or
or
pop
mov
sub
cmpsb
jnp
loope
imul
lods
fwait
adcb
cmp
cmp
arpl
divl
into
jge
push
mov
int3
sti
mov
cmp
cmp
or
mov
stos
pop
bnd
cmc
inc
repz
fistps
call
cmpsb
stc
into
mov
mul
pop
mov
scas
sub
xchg
rcl
orb
add
pop
pop
or
cltd
push
push
movsl
in
add
add
shl
cmp
inc
jns
sti
negl
jns
xchg
mov
jne
jmp
test
and
ljmp
lods
int
push
push
test
in
xor
ret
stos
cltd
sti
out
loopne
push
mov
ret
mov
hlt
call
xchg
mov
pop
dec
into
fsubrs
add
loopne
adc
jnp
xchg
jmp
add
pop
outsb
sbb
xorb
mov
std
rcll
add
out
mov
jnp
stos
xor
dec
dec
mov
or
lea
mov
jnp
mov
enter
and
push
or
push
push
bound
mov
pusha
les
cmp
jmp
out
out
push
xorl
mov
or
jnp
and
sarb
xchg
mov
pusha
add
repnz
test
iret
rcrb
push
leave
cwtl
mov
ja
lods
cld
imul
idiv
cmpsb
and
adc
inc
push
lock
data16
inc
jle
sub
mov
lcall
mov
sbb
lds
xlat
gs
mov
dec
hlt
aad
hlt
mov
mov
iret
adc
mov
int
and
test
popf
dec
jns
cli
insb
cld
hlt
or
xor
jbe
xchg
jnp
imul
mov
pop
push
cmpl
pop
inc
jmp
pusha
pop
je
mov
mov
pushf
dec
outsl
jne
push
or
popa
into
add
cmp
ss
sarb
jmp
push
test
scas
lret
mov
shll
cmp
mov
hlt
add
sahf
lcall
dec
ja
hlt
cmc
push
mov
sbb
cltd
push
mov
sub
or
cld
pop
fwait
aas
mov
repz
sub
or
jae
imul
cwtl
mov
shl
mov
mov
add
es
or
xchg
jp
inc
popf
enter
push
jg
fs
dec
dec
cmpl
mov
and
mov
hlt
jnp
xchg
aam
add
mov
pop
ja
push
popf
xor
sub
rclb
nop
push
sti
call
rorl
dec
dec
mov
shrb
aas
data16
movl
stos
dec
or
push
ror
aam
mov
test
test
lcall
fistpl
push
pop
cwtl
inc
lahf
push
xchg
or
or
sti
adc
inc
cmp
push
adc
push
ret
jnp
arpl
pop
jne
push
add
dec
pop
mov
scas
mov
push
cmp
and
daa
test
or
mov
out
push
aam
int3
jl
jne
mov
roll
pop
mov
icebp
jmp
outsb
cmpsl
pop
dec
push
mov
xlat
aam
dec
sub
xchg
jb
cmp
pop
sbb
insl
mov
ret
dec
push
fldcw
and
inc
mull
add
fcoms
iret
cmp
ljmp
push
lret
cmp
xor
dec
inc
or
inc
out
addr16
inc
add
fistpl
adc
and
sarl
inc
arpl
enter
add
jp
movsb
xor
inc
inc
add
es
or
cmpb
scas
xor
push
fwait
mov
fstl
cli
pop
insl
sbb
lahf
dec
fwait
aam
ret
pop
mov
jb
adc
outsb
inc
cld
dec
fmull
push
push
push
jmp
pop
mov
aas
aam
jg
jne
dec
pushf
xchg
jg
jae
push
add
push
je
bnd
dec
int3
or
insb
arpl
adc
dec
imul
push
ss
frstor
arpl
into
cmp
adc
lea
cld
push
das
lods
mov
dec
mov
jl
std
add
in
rcrb
xchg
or
push
roll
mov
fdivp
js
jle
lock
sbbl
cmp
and
sbb
repnz
push
ljmp
cltd
cmpl
inc
push
popf
adc
rcll
xchg
in
xor
mov
std
outsb
push
mov
mov
cltd
jl
shr
test
shlb
mov
cmp
sbb
mov
setne
cmp
imul
sbb
int
add
push
andl
je
or
pop
xchg
jae
add
adc
adc
lret
mov
add
mov
pop
sub
or
jnp
gs
cmp
mov
cmpb
cmc
sub
mov
xchg
iret
lcall
cmc
and
into
out
pop
scas
mov
add
fistpl
add
cltd
mov
xchg
push
sbb
push
or
sti
add
jae
jnp
mov
test
and
push
cmp
addr16
ret
dec
mov
sbb
inc
jecxz
mov
cltd
push
inc
mov
sbb
bound
sbb
dec
mov
fcoml
mov
add
ljmp
and
int3
aam
xchg
push
vpmaxub
cld
mov
int
inc
dec
imul
jp
out
xchg
sti
pop
adc
cmp
repz
dec
sbb
lahf
bound
in
inc
ret
call
fsubrs
or
and
aad
mov
test
mov
bound
loope
movsb
add
mov
jecxz
sbb
pop
mov
mov
mov
mov
mov
dec
repnz
jle
xchg
out
loop
push
or
jecxz
xchg
orb
lret
ss
test
lods
std
out
mov
mov
adc
jb
mov
jecxz
mov
icebp
mov
idivl
dec
fcoms
dec
mov
ficoms
jl
out
mov
in
mov
adc
mov
xchg
mov
stos
mov
vpsllw
push
and
std
jno
sub
xchg
hlt
mov
mov
push
gs
movsl
xchg
jnp
mov
fs
gs
add
cli
push
add
fldcw
jg
or
xchg
mov
int
shll
leave
imul
xchg
mov
xchg
dec
les
out
push
mov
pop
jl
cmc
mov
push
add
dec
or
xor
pop
vmwrite
enter
or
out
dec
mov
mov
jns
repz
in
mov
and
mov
mov
jno
dec
dec
addl
in
mov
and
dec
dec
jecxz
cld
scas
sti
dec
mov
icebp
jne
xor
pop
gs
pushf
mov
mov
cli
aam
pop
mov
push
push
mov
and
dec
hlt
jmp
or
and
repz
sbb
les
adc
adc
insb
dec
fldcw
cmp
cwtl
pop
add
mov
push
push
jnp
in
xchg
imul
inc
in
into
xchg
or
sub
add
mov
cs
ffreep
jae
or
mov
sti
int3
pop
icebp
js
xor
dec
leave
outsl
add
jno
lcall
push
add
rcrb
mov
xchg
int
xchg
pop
cmp
adc
mov
popl
sarb
lods
mov
mov
mov
orl
das
shlb
insl
cmpsl
fistl
jnp
inc
adc
sar
in
sti
xor
dec
or
pop
lods
mov
dec
pop
and
leave
cmc
mov
push
cwtl
fwait
inc
push
dec
fwait
pop
mov
out
dec
ret
stos
sub
ja
add
inc
sbb
sti
in
nop
inc
inc
data16
adcl
xor
inc
cmp
in
xchg
test
add
popf
pop
push
es
cwtl
jl
arpl
xlat
and
add
adc
xchg
test
ret
push
cmp
jl
into
inc
sub
xchg
leave
sti
push
mov
sahf
cmp
lfs
xor
jl
or
lea
fsubrs
jbe
imul
inc
pop
adc
xor
sbb
pop
mov
into
sti
push
lret
cwtl
pop
cmp
sub
leave
sbb
mov
inc
into
cwtl
repnz
pop
mov
add
sbb
jne
icebp
movsb
rol
iret
sbb
hlt
jae
aas
in
icebp
cltd
popf
sub
push
jb
pushf
xchg
popa
push
dec
int
push
ds
into
lret
fwait
mov
stos
daa
jecxz
xchg
hlt
jnp
jl
sub
cld
add
mov
mov
iret
popa
in
test
xchg
jmp
cmc
mov
jecxz
adc
pop
int
in
loop
mov
cmp
pmulhuw
jp
scas
cmp
clc
sbbb
int
sub
jp
fwait
iret
xchg
sti
fstps
cmp
xor
inc
data16
rolw
mov
jecxz
and
xchg
lods
mov
movsl
ljmp
sti
pop
pop
pop
add
hlt
movsb
xchg
fsubl
jmp
js
add
sbb
cmp
mov
push
mov
cli
inc
sub
test
xchg
test
inc
out
or
xor
ficoml
stos
fstpt
xchg
sub
movsl
out
in
rorb
daa
mov
cmp
and
cmpsb
or
cmp
xchg
ror
pop
in
cmp
or
adc
dec
pop
flds
hlt
cmp
fsts
cld
mov
stos
or
sub
cmp
sub
cs
test
pop
das
inc
pop
fistl
mov
jae
adc
mov
cmp
mov
mov
inc
mov
sbb
push
lods
leave
les
imul
inc
xchg
rorl
aam
xchg
adc
pop
fcompl
test
vcmppd
sbb
add
dec
adc
dec
popf
test
inc
jge
in
ds
sar
outsl
pop
fisubrl
movsb
mov
pop
mov
std
iret
pop
sub
jge
push
push
jo
fistpll
int
cmp
aad
mov
sub
pop
sbbb
ljmp
mov
push
or
test
nop
adc
mov
sub
into
sarb
imulb
out
test
fstp
rolb
loope
outsl
xorl
jnp
lret
daa
iret
sub
lahf
nop
in
dec
or
pushf
sti
fnsave
lods
rolb
sti
pushf
ds
ja
adc
adc
adcl
into
cltd
xchg
jnp
bound
out
lds
adc
xchg
pop
sub
outsl
lods
mov
adc
inc
mov
mov
fldenv
push
dec
add
in
mov
iret
sbb
xchg
xchg
sbb
inc
xchg
cmp
insl
int
inc
sbbl
dec
mov
int3
add
inc
mov
sub
in
xlat
js
mov
lds
jb
push
adc
popf
jae
repz
clc
mov
aas
dec
lea
add
movsb
or
test
lock
cltd
mov
or
inc
fimuls
sbb
fdivr
leave
adc
adc
repnz
js
leave
sahf
int
add
ficomps
xlat
mov
aaa
xchg
jno
hlt
ljmp
mov
mov
or
outsb
cmpsb
sub
lea
addb
jno
test
mov
xor
cmp
lea
and
and
lea
or
mov
sub
loopne
mov
icebp
jne
mov
mov
scas
jmp
je
push
mov
mov
xchg
adc
sti
or
dec
ret
repz
movsb
jbe
cmp
sub
imul
push
dec
push
mov
ffree
lahf
imul
in
cwtl
sbb
cwtl
pop
cmp
mov
jg
mov
cltd
push
stos
or
cmp
mov
cltd
jae
or
add
enter
enter
std
fldl
inc
xchg
ss
or
lock
add
cld
cmp
sub
jns
adc
mov
sub
mov
int
test
inc
loopne
jecxz
or
jbe
test
jnp
sahf
movsl
ja
adc
cmp
sbb
inc
stos
jnp
cmp
or
in
and
adc
movsl
xchg
push
mov
insl
add
cli
rorl
setg
mov
xchg
sbb
or
dec
lds
inc
inc
jle
sub
add
cmp
inc
xchg
ret
adc
xorl
dec
jbe
jmp
fxch
sub
jne
inc
mov
inc
dec
jg
inc
lods
repz
mov
lock
cs
mov
mov
das
test
idivb
xlat
mov
lret
aad
aad
mov
lcall
cmp
cmp
sub
add
loop
lds
dec
imul
adc
or
inc
adc
xor
jns
adc
imul
pop
push
andl
nop
jg
pop
adc
mov
push
and
push
insl
or
imul
pop
jmp
int3
stos
fnstenv
jnp
pop
add
imul
out
sub
or
aas
inc
and
inc
pop
mov
dec
and
mov
sbb
sbbl
jb
jl
sti
aaa
mov
jb
es
add
or
pop
movsb
mov
movsl
orb
gs
lret
out
scas
mov
outsb
jle
dec
inc
aad
sbb
jmp
dec
repnz
aas
push
movsb
xlat
out
sub
loop
pop
mov
mov
or
rorb
push
int3
int3
add
push
add
mov
dec
icebp
mov
test
mov
mov
or
dec
add
push
push
sub
or
push
cmc
int3
idivb
pop
jne
dec
dec
or
dec
pop
pop
adc
lea
les
sbb
js
xchg
sti
mov
mov
in
rcrb
jnp
mov
js
mov
imul
dec
movsl
adc
int
and
inc
addl
imul
cmp
jnp
sahf
mov
mov
pop
cmc
jp
xchg
movsl
fidivrs
dec
mov
stc
adc
shrb
jmp
scas
or
adc
jbe
dec
cli
and
rcll
mov
pushf
imul
sti
mov
or
xchg
mov
sbb
sub
nop
enter
aaa
add
popf
sub
movsb
fdivrs
les
adc
pop
js
cmp
and
adc
mov
add
jnp
push
adc
insl
mov
cmp
inc
and
jnp
jge
fmuls
mov
add
jle
outsb
jl
dec
jecxz
sti
pushf
pop
out
cmp
fstpl
push
adc
fldt
xor
inc
test
pop
test
dec
or
sti
xchg
jae
add
pusha
incl
lods
sub
cs
jbe
and
aaa
inc
lcall
dec
push
cmp
push
mov
xor
nop
stos
addb
cmp
call
sub
insb
xlat
mov
add
sub
aaa
test
shl
inc
rcll
pop
ficoms
shrb
decb
push
jg
push
cli
ja
dec
pushf
sub
and
xchg
dec
mov
leave
pop
cmpsl
sub
je
or
aas
pop
pop
inc
out
jnp
mov
nop
mov
adc
fwait
mov
int
xchg
in
mov
cs
mov
call
rcll
or
push
pop
add
call
insl
mov
test
pusha
pusha
jge
jnp
cli
inc
or
sbb
lds
insl
inc
popf
fwait
dec
adc
loopne
ss
mov
lret
pushf
push
lock
push
jno
fistps
add
imul
pop
xchg
jecxz
shrb
cmpl
out
jae
in
rorb
int
cmpsb
pop
jbe
in
mov
out
sbb
push
lea
push
sbb
je
and
scas
or
subl
shll
fimuls
mov
xchg
pop
movsb
push
sbb
sti
sbb
cmp
dec
and
ret
rorb
jae
mov
fnsave
or
adc
dec
mov
aad
push
dec
int
jnp
gs
mov
mov
test
sti
cmp
stc
leave
add
cmp
sarb
shrl
test
in
insb
lea
stos
xor
cmp
adc
movsl
enter
add
test
in
mov
jge
jecxz
mov
add
test
add
inc
xor
stos
mov
sarb
dec
fildll
pushl
mov
ljmp
imul
pop
loop
inc
or
aas
mov
int3
xlat
add
sbb
int
mov
and
rcl
push
in
and
je
fstl
adc
inc
jnp
scas
subb
les
xchg
and
popa
mov
int
fucomi
and
jmp
jbe
scas
outsb
jae
mov
cmp
mov
mov
push
push
icebp
dec
mov
stc
fwait
addl
dec
rorb
ss
pop
jecxz
jge
sti
pop
xchg
cmp
lret
movsl
mov
push
or
or
add
pop
adc
sbb
sar
adc
and
js
int
into
ja
adc
add
lds
rol
gs
mov
imul
add
cmp
cld
repnz
pushf
loope
insl
or
sti
aam
movsl
ja
sub
push
sarb
arpl
adc
mov
jge
mov
adc
mov
dec
cmp
iret
xchg
sbb
aaa
xchg
mov
pushf
mov
rorb
lods
mov
mov
or
cmp
cmp
dec
test
lea
sti
dec
jne
sbb
mov
or
jno
mov
lret
mov
rcll
sbb
mov
dec
sbb
jnp
adc
jno
test
add
xchg
dec
lahf
sub
imul
das
int
xorb
push
push
mov
out
add
cmpsb
mov
add
aaa
mov
inc
imul
jne
jae
leave
inc
xor
jnp
jb
dec
stc
shll
imul
mov
jbe
adc
ljmp
pop
mov
adc
cmp
sar
mov
cmpsl
les
arpl
or
int
rcrb
mov
lock
adc
or
cld
lea
pushf
mov
inc
mov
dec
xchg
xor
or
clc
arpl
adc
nop
je
lock
pop
popa
mov
mov
push
mov
push
lret
adc
sbb
cli
fldl
xlat
and
daa
inc
sbb
pop
jnp
cmpsl
push
fidivl
dec
loopne
pop
je
xor
mov
mov
jge
cmp
and
mov
xchg
sbb
mov
jbe
js
mov
inc
xor
or
and
or
or
add
push
leave
cltd
test
xlat
push
lahf
mov
lods
lret
les
jns
into
shll
and
lret
jle
push
mov
fwait
in
ja
mov
pushf
adcb
insb
cmp
fsubs
ret
jbe
or
insb
push
testl
xchg
fwait
cli
push
xor
rorl
pop
mov
in
xchg
lret
clc
or
jge
mov
xor
rorb
push
ja
in
pop
pusha
cmpsl
add
mov
dec
std
mov
cmc
ljmp
xchg
sahf
mov
mov
cmc
inc
sbb
push
lea
scas
add
stos
or
jmp
xchg
test
mov
outsl
add
fisubrl
std
jmp
out
jp
int3
adc
gs
or
mov
cmpsw
mov
sahf
xchg
stc
mov
sbb
int
fnstcw
pop
xor
mov
mov
mov
dec
pop
in
scas
and
sti
fildl
loop
ljmp
in
xor
mov
repz
jb
ja
mov
call
imul
ljmp
int
mov
ss
data16
or
cli
pushf
adc
in
movsl
xchg
jnp
stos
or
ljmp
outsb
or
jne
xchg
and
mov
jnp
icebp
cmp
ret
push
inc
shrb
movl
dec
insl
sub
cmc
jecxz
mov
mov
out
icebp
insl
dec
test
bound
mov
mov
insb
push
mov
cmp
pushf
mov
or
pop
sbb
cmp
dec
or
push
aad
push
inc
int
outsl
les
test
sarb
adc
add
xchg
jmp
jl
cs
adc
dec
push
inc
pop
pop
lret
in
and
mov
popf
call
sub
mov
dec
mov
xchg
inc
out
fs
push
arpl
jnp
mov
xchg
push
sbb
mov
push
xchg
push
inc
inc
inc
pop
test
cli
subl
arpl
dec
mov
lods
mov
xor
mov
in
lea
int
jle
push
push
push
xor
pop
or
add
cmp
xor
scas
stos
outsb
lret
lds
rorb
addr16
hlt
testl
nop
mov
push
jmp
rcll
ds
movsl
push
cmp
push
je
mov
pop
inc
mov
add
xchg
add
mov
pop
int
rclb
push
cld
xchg
bound
lahf
test
push
push
nop
inc
add
or
cmpsb
dec
lods
into
sarb
daa
push
ficomps
xchg
stos
mov
inc
add
cli
into
jge
xchg
fstpt
mov
sub
stc
jnp
adc
gs
push
cwtl
sbb
lods
xchg
mov
mov
imulb
into
icebp
or
stos
pop
jbe
iret
cltd
addr16
movhlps
outsl
or
xchg
push
sub
push
fnsave
pop
cmp
inc
fldl
cld
mov
movsl
rol
add
cld
and
hlt
mov
pop
pop
aad
into
insl
sub
push
cmpb
mov
sti
enter
or
loop
scas
xchg
decb
mov
loop
insl
out
jb
sbb
test
cwtl
push
in
aaa
int
orb
fnstenv
inc
jb
adc
pushf
mov
xchg
je
jo
jnp
das
pop
and
dec
lret
push
sarb
lret
imul
mov
mov
lea
into
cmp
mov
lcall
push
sbb
or
and
inc
fs
pop
push
add
sti
jo
jb
gs
mov
leave
pop
sub
popl
in
xchg
not
insl
subl
xor
pop
lcall
xchg
jg
clc
pop
std
xchg
loop
lea
add
cmc
scas
nop
mov
add
xchg
push
sub
inc
push
jmp
lea
outsl
in
dec
shrd
cmp
xchg
dec
in
std
or
xchg
lods
dec
insl
xchg
jp
or
jno
mov
xchg
add
push
mov
sbb
or
mov
das
aas
arpl
pusha
cmp
incb
jl
adc
xlat
int
insb
flds
ljmp
inc
out
mov
push
push
addr16
xchg
sub
lret
std
mov
ret
and
dec
jl
dec
out
aad
aaa
or
stc
rolb
jmp
fstpt
push
repnz
jb
icebp
pop
cltd
in
dec
shrl
cmp
jmp
in
int3
testl
lods
push
push
xchg
adc
mov
or
push
mov
add
push
sbb
pop
push
mov
mov
movsl
or
jge
mov
sbb
xor
int
orb
pop
sbb
rclb
loopne
mov
fs
fmuls
inc
inc
mov
lret
cmpl
sub
pop
shrb
fdivrl
sbb
push
mov
push
js
mov
ljmp
je
lret
jnp
dec
xor
pop
dec
fwait
or
test
pop
aad
in
pop
popa
pop
mov
jg
inc
jl
in
pop
outsb
cwtl
hlt
jnp
setle
jp
lods
push
jecxz
mov
or
outsl
jl
jns
add
rclb
dec
dec
fwait
cmc
or
or
lahf
mov
cmp
adc
xchg
daa
mov
jl
sub
into
xchg
dec
sbb
push
cmp
sub
imul
mov
and
sti
mov
mov
mov
mov
movsl
pop
mov
pop
jecxz
xchg
outsb
add
push
and
push
fiadds
std
inc
sub
incl
xchg
xor
add
dec
push
mov
push
das
aas
mov
stc
hlt
out
jmp
cwtl
dec
sbbl
mov
hlt
push
pop
push
cwtl
xchg
mov
stos
xchg
sbb
aam
sbb
sbbb
dec
mov
dec
iret
jnp
xchg
cld
faddl
jae
lret
fisubrl
or
lret
sarb
cmp
mov
jp
dec
add
movsb
or
mov
and
inc
push
shll
inc
cmp
test
push
lahf
mov
lods
bound
mov
jns
dec
bound
mov
mov
std
xchg
incl
or
mov
dec
adc
jb
xchg
xor
mov
mov
jl
cmp
jecxz
insl
or
mov
jno
sti
add
loopne
jl
pusha
rcr
fsubrs
test
in
mov
shll
mov
xchg
lods
push
cmp
dec
hlt
dec
nop
mov
outsb
mov
iret
test
inc
popa
in
xchg
jae
ror
daa
or
lcall
pop
mov
dec
addr16
push
mov
mov
scas
dec
arpl
es
cltd
fsubrl
test
mov
sarb
mov
mov
testb
sub
mov
xchg
insb
mov
popl
stos
sbb
arpl
jnp
imul
lea
fdivrl
xchg
cmpsl
in
cmp
mov
xchg
cmp
enter
push
je
dec
sub
dec
lods
inc
xor
dec
ljmp
mov
inc
xor
stc
aam
and
cld
mov
adc
clc
mov
jl
fidivrl
adc
in
xchg
sbb
pop
pop
mov
pop
sarb
nop
into
leave
je
mov
push
repz
cmp
mov
insb
cmp
sbb
mov
or
rcll
cmpsl
pusha
xor
aad
ds
mov
call
pushf
cmp
jae
pop
or
insb
cmc
dec
add
outsl
jbe
jne
pop
add
xor
int
push
mov
mov
int3
cmpsl
fdivrs
jl
mov
scas
out
mov
insb
inc
and
or
xchg
ds
mov
sbbb
cmpsb
ja
int
or
or
das
sub
xchg
xchg
jnp
bound
sbb
push
ds
sub
lcall
leave
ret
rcll
into
xor
or
iret
xchg
fstps
dec
stos
pusha
rorb
inc
out
mov
clc
int3
mov
push
movsl
or
jne
std
mov
or
sub
mov
ret
add
ljmp
bound
sub
push
leave
jnp
xchg
and
fcoml
jnp
loopne
ljmp
adc
sahf
dec
sbb
jbe
add
mov
jae
adc
jo
mov
bound
enter
mov
into
xchg
push
and
fucompp
mov
repz
or
sbb
aam
insl
cs
sub
and
cwtl
cmp
out
add
sti
fldt
out
push
inc
inc
cld
sub
and
mov
aam
jno
pop
pmaddwd
or
inc
lret
xchg
addb
sti
jle
stc
cmpsl
inc
push
push
lcall
int3
cmp
lahf
push
repnz
fcoms
xchg
je
sub
sbb
fimull
pusha
add
movsb
push
xor
data16
mov
push
mov
jne
pushf
sti
xor
xchg
pop
outsl
out
mov
stc
fistpll
jb
loopne
fucom
push
xor
add
xor
jnp
test
sub
jno
iret
cmp
jl
lcall
sbb
insb
fimuls
in
mov
cmp
xor
adc
xchg
jnp
jmp
jl
in
sub
xchg
add
movsl
shll
xchg
lea
outsb
mov
imul
std
rcr
fadds
sti
ljmp
pop
mov
xchg
or
adc
dec
pop
push
outsl
or
xchg
cmpsl
add
mov
out
sub
add
xchg
jns
out
inc
sbb
push
cltd
fsts
xor
adc
movsl
ret
sti
popf
cs
mov
scas
add
cmpsb
xchg
sub
dec
push
aas
mov
psubsw
ret
jg
mov
lret
jo
cmpsl
xchg
lahf
sti
mov
test
sub
sti
bswap
dec
clc
cmp
in
or
out
into
jae
cmp
pop
movnti
cmp
xchg
or
jg
mov
sti
fsubrs
mov
aaa
mov
fwait
push
sub
push
rolb
dec
popw
sub
fimuls
mov
lods
sub
mov
or
inc
insl
and
sbb
int
jae
daa
mov
mov
or
inc
pop
adc
std
or
mov
in
stos
pop
mov
xlat
stos
jle
lods
test
out
sbb
adc
nop
xor
jnp
sbb
mov
loopne
and
add
push
mov
jmp
mov
rcll
cmp
fmuls
push
mov
dec
test
jno
popf
in
icebp
jnp
dec
insl
pop
lret
cld
out
movsb
cvtpi2ps
insb
adc
and
rorl
pop
adc
pop
ret
push
ljmp
rcl
mov
mov
pop
xor
push
mov
add
xchg
jnp
sub
add
jmp
rclb
or
jg
cmc
mov
jo
mov
test
add
push
or
js
fidivl
test
mov
daa
negl
dec
mov
xchg
inc
push
pushf
in
cld
and
bound
xorb
jns
mov
push
adc
out
sub
sarb
pop
xchg
rorl
ljmp
es
aas
fdivr
pop
je
btc
sub
inc
xchg
ret
mov
mov
push
jge
adc
xchg
sbb
mov
int3
sbb
cmpsl
imul
dec
loope
mov
mov
xor
ret
and
enter
repnz
jno
xor
xchg
outsl
and
aas
push
mov
or
shr
enter
loope
mov
out
jae
lods
lea
push
cmp
lock
mov
les
sbb
sbb
inc
stos
cld
add
inc
outsb
inc
jl
idiv
ss
jb
inc
cmp
pushf
jnp
push
in
push
lods
arpl
push
inc
data16
or
rcrb
sub
lods
dec
xor
sub
inc
insb
push
mov
jnp
mov
jne
aad
jg
jge
fldenv
ret
stc
pop
jno
out
lock
mov
sbb
mov
test
jge
cmpsb
mov
cmp
mov
inc
xlat
pop
in
push
fisttps
sti
sarb
add
das
and
rcll
add
mov
sub
mov
sub
pop
ret
jmp
pop
dec
cmp
hlt
and
into
cmp
bound
jge
push
xchg
dec
sarb
fstpl
sub
bound
or
lods
mov
push
add
dec
cltd
dec
pop
mov
ror
add
lcall
jno
arpl
push
gs
jnp
or
rcrb
mov
out
lret
add
push
xlat
dec
inc
daa
adc
push
sbb
sbb
cmpsl
or
inc
sub
jnp
test
inc
leave
mov
bnd
iret
xchg
pushf
int
por
fmul
sbb
mov
lods
ja
mov
rcr
pop
cmp
cmc
scas
push
mov
aam
pop
pop
dec
pop
mov
orb
sar
cmp
int
mov
jge
or
in
aas
mov
xchg
and
je
bound
push
sbb
das
ret
shrl
fstpt
rorl
cli
dec
add
shll
mov
dec
mov
inc
lods
cmpsb
dec
mov
sub
cwtl
fists
jecxz
dec
jae
lcall
arpl
in
test
stos
jo
pop
ljmp
and
fcmovnbe
xor
push
mov
test
or
pop
mov
mov
jle
cmpl
movsl
jmp
int
dec
mov
data16
sti
pop
iret
fwait
int3
pop
push
aad
andb
ret
mov
cmpsb
cmp
xchg
ja
jecxz
out
jp
clc
cmc
lret
mov
xchg
sub
add
adc
decl
cmp
mov
push
jo
adc
aam
mov
inc
fstl
dec
aas
dec
cltd
or
mov
psubsb
mov
leave
fdivl
sub
add
outsb
sub
cmp
insl
in
and
je
mov
dec
fistpll
mov
sub
sti
xchg
push
jmp
sub
iret
sub
or
push
mov
mov
push
mov
jge
cmp
in
repz
lds
dec
xchg
xchg
inc
pop
xchg
mov
jne
inc
subl
cmp
jmp
sahf
xor
xlat
mov
outsb
cmp
push
mov
jmp
dec
out
arpl
jg
test
cmpsb
je
mov
mov
xchg
sbb
ret
jl
sub
lahf
adc
or
add
sbb
lds
or
pushf
mov
movsl
shll
shl
or
pop
stos
push
sti
adcb
cmp
out
insb
mov
cld
mov
mov
push
cmp
cmpsb
sti
pushf
out
pop
mov
or
or
jbe
xadd
inc
lods
xchg
sahf
xchg
pop
inc
or
mov
movsb
in
sub
leave
jne
sub
aad
add
jl
sub
enter
out
in
aas
jb
sub
rolb
fdivs
inc
cmp
and
iret
lods
fnstenv
or
sbb
xchg
sbb
mov
dec
in
imul
xchg
aad
ss
fistl
sarb
jno
jl
fidivrl
shr
sbb
loop
fstpl
into
push
mov
push
dec
xor
mov
test
les
mov
lods
jnp
jmp
mov
mov
sub
jle
leave
das
mov
bnd
push
mov
push
fildl
jbe
cmp
jge
xchg
inc
aas
insl
sub
cmc
adc
test
mov
jae
leave
mov
inc
pushf
inc
inc
decb
rolb
jae
mov
adc
jl
pop
cmp
xor
sbb
mov
xchg
or
lods
mov
mov
xlat
push
sub
cmpl
push
and
pop
andl
stos
pop
hlt
jo
mov
into
pusha
xor
shrl
mov
dec
pop
xchg
aaa
mov
int
subb
push
jnp
nop
lods
sub
jge
imul
jnp
push
clc
fstpt
pop
lea
mov
je
cwtl
ja
mov
mov
pop
dec
fnstcw
addr16
jo
bound
scas
roll
inc
rorl
lods
xchg
sti
out
pop
lds
xchg
in
xchg
icebp
data16
adc
cmp
rol
data16
add
leave
xchg
inc
cld
sub
or
adc
int
lret
scas
stos
pop
das
cld
testl
hlt
lea
jb
jge
insl
lcall
sub
sub
add
fsubl
into
xlat
stos
dec
jmp
int3
adc
jne
jnp
es
sarl
movsb
jnp
or
shl
pop
stos
jl
adc
les
pop
test
stos
adc
cmp
mov
sub
dec
pushf
inc
jnp
adc
dec
adc
movsl
mov
dec
push
jb
push
hlt
or
pop
jle
dec
lods
pop
fsts
xor
mov
push
pusha
in
aad
xor
push
cld
adc
dec
mov
mov
sahf
hlt
pop
jne
pop
xor
mov
aad
xchg
bound
pop
dec
fldpi
cmp
mov
in
jg
push
stos
sbb
xchg
sti
mov
loopne
stos
sbb
jnp
add
and
loop
rcll
mov
test
push
xorb
mov
sbb
adc
fwait
pop
daa
xchg
sub
dec
push
or
push
dec
xor
sbb
fistpl
push
mov
inc
in
sti
jne
into
ljmp
lahf
or
xor
nop
mov
imul
lret
in
dec
mov
mov
push
or
add
mov
nop
inc
mov
cmpsb
xchg
jl
rolb
mov
ss
jo
and
inc
or
into
mov
sub
mov
xchg
pop
xchg
fs
pop
jb
mov
sbb
int3
jnp
dec
mov
mov
xchg
xchg
out
pop
and
xchg
xchg
cmc
sti
lods
cmp
sub
add
or
sub
add
cmp
mov
mov
mov
loopne
dec
and
dec
roll
and
imul
xor
mov
jnp
pop
cmpsl
popa
mov
adc
mov
mov
pop
mov
pop
xadd
sti
mov
sar
pop
or
mov
cmc
fs
sub
cmpsb
pop
sub
cmp
xchg
sbb
cmp
repnz
enter
lahf
jp
xchg
xor
cmp
jecxz
push
pop
xchg
or
push
xchg
call
mov
mov
xchg
jo
push
imul
jl
sub
shl
or
mov
bound
je
inc
popa
mov
movsl
movsl
mov
jp
jnp
imul
ds
cmc
mul
xor
sarl
jnp
popf
adc
inc
push
cmpsl
cli
sti
ficoml
jl
outsl
cli
mov
and
mov
mov
imul
lea
jae
ror
int
fs
jmp
psllw
push
and
xlat
add
xlat
ss
or
xor
xchg
inc
fcmovnbe
sarl
xor
je
int
or
mov
je
ret
add
popa
push
imul
and
outsb
loope
cmpsl
sub
int
mov
cmp
leave
sub
push
push
outsb
jo
rcll
test
mov
lahf
push
stc
pop
cli
sar
inc
cmc
dec
js
mov
int3
sbb
xchg
jnp
jmp
or
popa
jg
movsb
jg
inc
inc
push
pusha
imul
test
mov
push
jl
sub
test
mov
or
imul
shl
inc
dec
out
fists
int3
push
out
lea
nop
mov
cld
lcall
loope
outsl
lds
cli
fcmovb
or
sbb
xchg
jbe
popf
jnp
mov
lret
lods
xchg
xchg
orb
xchg
sti
not
sub
xor
aad
loopne
cld
adc
lcall
inc
andnps
push
into
ds
cmp
cmp
fs
imul
sbb
lret
sti
loopne
cmp
jbe
ja
sbb
nop
repz
mov
pop
outsb
adc
xchg
gs
lds
bound
out
or
mov
fimull
lods
pop
inc
add
cmp
mov
cli
daa
rcl
sub
fdivs
xlat
adc
arpl
sbb
jl
mov
mov
mov
jecxz
fldcw
dec
push
sahf
aas
mov
xor
adc
sarl
lret
mov
imull
jae
sbb
ja
sbb
xchg
mov
js
in
push
cli
cmp
das
xor
hlt
in
mov
pushf
imul
cmpsb
xor
jl
sahf
add
pop
lock
mov
out
pop
or
jg
sbb
dec
inc
xchg
mov
imul
out
rcll
loop
dec
hlt
into
addr16
orl
mov
adc
sti
xor
mov
jo
imul
adc
xchg
jle
loope
xor
int3
mov
ljmp
pop
int
inc
imul
fisttps
das
mov
sbb
popf
jns
mov
int3
cmpb
or
xchg
enter
into
insb
fwait
insl
aam
push
dec
pop
jno
cmp
xor
add
sbb
sbb
jmp
xor
test
aaa
fldcw
sub
jnp
mov
sub
insl
nop
jns
mov
push
pop
and
shlb
fdivrs
push
add
mov
insl
sbbl
cmc
mov
js
sub
arpl
or
repz
jnp
adc
xor
xchg
add
test
mov
in
fwait
pop
cs
stos
mov
jnp
cmp
or
call
or
call
mov
sub
ljmp
cmp
adc
xor
xchg
lds
cli
test
jecxz
mov
jmp
std
add
addl
in
adc
orl
imul
sub
mov
mov
jae
mov
loopne
mov
pushf
ja
sbb
pop
and
cmp
jae
dec
adc
mov
jns
dec
mov
mov
loop
cwtl
in
iret
dec
xor
test
rolb
pop
or
mov
insb
push
pushf
push
or
cmp
push
lret
cmpsl
stos
xor
sub
pop
inc
push
cmp
or
mov
ficomps
or
add
sbb
and
xchg
jnp
lahf
insl
mov
stc
or
sbb
int
jle
jmp
sbb
movsl
pop
mov
jno
jmp
jo
pushf
lds
dec
xchg
mov
jnp
inc
fnclex
pop
mov
add
add
cmp
sub
push
push
outsl
testl
inc
mov
dec
inc
inc
add
aad
popf
pop
mov
dec
cld
or
loopne
inc
inc
pop
cltd
inc
xor
jmp
dec
xchg
mov
pop
into
fisubrs
or
dec
in
sub
lea
sub
cs
sarb
inc
rcrb
xchg
xor
xor
mov
das
adc
jnp
nop
push
bound
popf
fisubs
fistps
cltd
leave
xchg
lods
pushf
gs
popf
pop
jle
jno
dec
out
ds
fwait
pushf
mov
test
mov
pop
dec
jg
dec
push
loop
outsb
cmp
sub
fsts
dec
inc
sub
adc
mov
jnp
mov
decb
cmp
stc
shrl
pop
ret
and
stos
push
adc
pop
fdivr
jge
pop
mov
sti
mov
std
jmp
cmp
push
or
jle
mov
test
insl
cld
ret
dec
and
and
jmp
xchg
enter
sbb
rclb
stos
sarb
mov
pop
lcall
mov
lea
fwait
inc
mov
out
dec
cli
jbe
mov
push
xchg
stc
inc
mov
stc
xchg
inc
xchg
lret
pusha
orl
push
daa
ds
xchg
mov
cmp
mov
mov
sbb
mov
cmp
mov
or
ds
lea
dec
ret
mov
push
ficompl
je
ss
sub
ret
adc
xchg
imul
or
imull
mov
mov
testl
data16
rcrb
sub
add
ficoml
fistpl
pop
inc
push
outsb
pop
addl
push
and
xor
add
cwtl
into
inc
ret
sti
adcb
sbb
cs
nop
jl
js
inc
mov
nop
scas
idivl
fs
cmp
adc
int
xchg
les
stos
or
cmp
adc
int
lahf
inc
mov
inc
sti
in
bswap
repz
lea
or
mov
mov
mov
mov
sub
clc
mov
or
ret
cwtl
stos
pop
or
mov
mov
lahf
and
cmp
pop
xchg
data16
push
cmp
inc
sbb
push
pop
dec
pop
cmpsl
jge
int
rcrb
and
mov
leave
push
push
inc
and
or
lods
jbe
sub
pop
das
sbb
movsl
sub
sti
loopne
in
sub
movsb
jnp
mov
cmp
xchg
pop
pop
inc
mov
push
lahf
scas
ds
pushf
mov
adc
jno
int
cmpsl
test
mov
add
push
jb
mov
cltd
insl
int
fs
shl
fldt
or
dec
cmp
inc
jns
add
imul
idivl
and
push
xor
cmp
outsb
dec
mov
adc
push
test
inc
or
jno
push
mov
adc
aaa
aad
inc
mov
mov
xchg
or
jbe
ljmp
imul
fidivs
lcall
mov
xor
xor
sbb
int3
mov
inc
dec
cld
and
pop
mov
enter
sbb
lods
sti
dec
jnp
mov
cmp
cmp
in
add
aad
jle
int3
add
jae
js
push
aaa
adc
jns
jnp
pop
idivl
xor
lahf
pop
enter
jne
repz
mov
outsb
or
stos
push
mov
sub
inc
push
push
mov
cltd
cmp
mov
iret
sbb
gs
xchg
jge
adc
cmp
pop
and
jbe
ror
imul
xchg
iret
jecxz
int
sub
xchg
inc
push
lods
push
fstpt
pop
mov
mov
sarl
lret
dec
filds
rclb
jle
xchg
int3
cs
jnp
test
dec
xchg
lods
sbb
xor
lcall
mov
popa
lret
mov
int3
cmp
jmp
outsl
push
dec
test
mov
rcr
sbb
xchg
cli
or
cmp
hlt
sub
inc
dec
popf
inc
pop
scas
cmpb
or
jo
lock
jnp
fistl
fwait
leave
jae
scas
in
push
int3
cmc
clc
mov
dec
dec
popf
jns
and
leave
cld
fwait
push
test
es
inc
adc
jbe
sbb
pop
and
cmp
dec
push
mov
xchg
push
mov
sbb
jbe
jge
int
cwtl
dec
cwtl
jb
jge
sbb
std
mov
test
cs
gs
shll
sub
xchg
hlt
adc
dec
pushf
cmp
pushf
inc
daa
jo
xor
dec
xchg
mov
pushf
cmp
push
mov
push
sbb
add
cmpsb
bound
or
push
mov
mov
int
loopne
lock
out
pop
popa
mov
cmpb
ret
in
lcall
or
sbb
cmpsl
mov
repz
les
pop
xor
clc
sub
mov
in
icebp
sti
stos
dec
mov
cmp
mov
jge
ljmp
into
pop
es
ret
push
inc
cld
mov
flds
mov
sti
xchg
negb
in
dec
mov
sub
lods
jmp
test
and
sahf
idivb
push
sbb
jnp
jl
push
lcall
and
pop
dec
fstpl
mov
sbb
fdivs
mov
or
mov
xor
add
out
sub
mov
dec
scas
test
inc
cmpsb
mov
inc
cld
repnz
nop
nop
mov
fldt
int
hlt
dec
mov
cmp
xchg
mov
ret
out
cmp
lods
imul
xchg
or
pop
jno
aam
rol
jmp
inc
cmp
sub
enter
jo
inc
outsl
sub
arpl
add
cmp
cmp
dec
dec
and
lcall
dec
xchg
out
adc
adc
jae
leave
jae
jb
call
pop
jbe
sti
rcr
add
movsb
out
jmp
clc
xchg
mov
mov
in
test
fildll
dec
cmp
into
pop
sub
mov
pop
pop
dec
push
cltd
inc
ret
ss
sti
je
xlat
gs
jl
repz
sub
cs
fiaddl
loop
int3
pop
cld
cmp
dec
jne
push
lret
scas
std
sti
jnp
roll
mov
jl
mov
cmp
addb
dec
mov
sti
fwait
xchg
pop
dec
mov
mov
cmc
rcll
mov
leave
push
inc
add
shrl
sbb
in
fistpll
dec
jl
mov
push
insb
cmp
push
cmp
fdiv
jl
sub
cmp
mov
lret
lcall
dec
int3
or
je
or
sbb
and
setns
jmp
orl
jnp
inc
mov
push
add
pop
jle
int
das
shlb
cmpsl
mov
xor
std
push
xor
dec
lret
xor
mov
lcall
sahf
mov
leave
loope
shl
jnp
adc
mov
scas
xchg
xor
dec
loop
xlat
xlat
xchg
adc
adc
dec
sub
lods
std
data16
push
aad
jl
mov
fwait
push
dec
aad
mov
movsb
pop
push
aas
daa
jae
scas
fs
test
stc
pop
lds
sbb
inc
rorl
dec
arpl
stos
mov
stc
mov
int
pop
cmp
daa
mov
mov
pop
sub
ds
jp
add
or
shl
add
outsb
mov
inc
mov
push
sub
inc
js
jns
fbstp
sahf
and
jne
pop
push
cmpb
aam
xor
scas
int3
or
jno
rcrl
gs
lcall
mov
jne
adc
and
push
xchg
sbb
mov
cs
popf
xlat
mov
push
push
jl
pop
test
or
movsb
cmp
lcall
ret
mov
sbb
dec
dec
test
movsb
jg
lock
fiadds
xor
aad
cli
or
xchg
xor
stos
xor
xor
add
add
insb
jp
outsl
mov
dec
ret
jecxz
inc
jp
mov
cmp
push
outsb
adc
roll
pop
add
inc
push
or
inc
jge
adc
push
mov
int
adcb
sbb
mov
loope
pop
mov
out
sahf
fmull
std
ds
inc
mov
mov
cmp
adc
in
inc
push
ja
push
cmp
cmp
add
mov
xor
out
and
adc
jbe
notb
sub
adc
cmp
cmp
xor
dec
mov
or
mov
mov
push
cmp
xchg
mov
push
dec
jecxz
lcall
loop
or
cmp
pop
cwtl
cvtps2pi
push
cmp
std
das
jns
std
adc
rolb
leave
push
shrb
cmp
pushf
fwait
pushl
shl
into
loop
lahf
shll
ds
pop
pop
sub
stos
faddp
rolb
lods
jno
testl
nopl
push
push
mov
mov
jmp
mov
fsubs
xor
lcall
shll
mov
sub
mov
addl
sub
addr16
mov
xchg
lods
lea
cltd
xchg
jnp
sub
dec
fadds
fmuls
inc
dec
cwtl
ja
ljmp
or
cmp
adc
or
push
mov
push
push
dec
push
int3
inc
mov
sbb
push
loopne
rep
dec
lock
jo
addr16
add
add
cwtl
fnstsw
shl
outsl
xor
or
cmp
jne
jp
xlat
dec
or
sbb
mov
cmp
out
or
out
stos
loope
dec
dec
sub
scas
clc
adc
outsl
push
sub
sub
xchg
add
mov
add
icebp
mov
aad
xchg
lds
adc
stos
mov
dec
test
mov
fsts
mov
movsb
or
add
in
add
orb
pop
add
mov
pop
mov
mov
inc
pop
sahf
aam
stc
inc
mov
fdivr
cmp
frstor
sub
pop
mov
in
fidivl
xchg
rcl
lea
into
xor
inc
cld
ficomps
pusha
fnsave
fdivs
mov
lret
push
cwtl
sarl
int
ret
popf
sbb
inc
ss
out
dec
hlt
sub
pusha
and
inc
inc
cmovns
fucomip
out
mov
dec
lds
iret
mov
cmpsb
cltd
add
xchg
adc
test
mov
cmp
cltd
cmpsb
xchg
or
dec
std
push
cmp
push
add
xchg
mov
mov
wbinvd
push
adc
in
outsb
inc
dec
aaa
push
adc
out
ds
stos
or
mov
or
fxch
mov
mov
int3
cmp
lcall
add
and
out
shll
sbb
fcoms
xchg
xor
stos
adc
mov
mov
icebp
push
dec
aas
nop
fs
inc
idivb
sti
jmp
cmp
or
jmp
hlt
mov
negl
jle
push
xor
or
out
cld
mov
xor
mov
jmp
xchg
and
jno
shll
std
cmp
adc
mov
xchg
negb
int
lahf
cmp
mov
sbb
mov
or
mov
pop
push
sub
push
pop
push
jg
into
mov
ret
into
pop
mov
mov
fsubr
rcrl
sbb
xchg
cmp
es
fmul
call
sbb
mov
and
mov
cli
xor
xchg
lods
div
fdiv
test
push
sbb
mov
leave
jae
jle
test
adcb
jne
sbb
cmpsl
mov
push
lcall
in
mov
repz
repz
jge
aas
pop
mov
xor
dec
lods
insl
lods
cs
dec
jecxz
imul
dec
cmp
insl
cmp
sbb
rcll
pop
aam
and
xchg
push
dec
sti
cmpsb
ret
insb
mov
inc
int
lods
scas
std
dec
test
or
aas
jnp
cmovbe
outsb
ss
or
pop
mov
dec
test
xchg
xor
std
pop
xchg
push
pusha
test
fbstp
je
mov
cmpsb
inc
mov
jl
fimull
cmc
mov
adc
xor
cmp
mov
cmpsl
ja
mov
iret
jmp
cmp
fwait
sbb
mov
sub
fdivs
test
adc
adc
inc
xchg
pop
test
mov
test
and
pushf
mov
lds
lcall
push
dec
or
aad
mov
orb
lock
lods
fistl
sub
jl
cmpb
fcmovbe
or
mov
push
test
sti
insb
cwtl
inc
fistpll
cwtl
ja
orb
popa
pop
sbb
repnz
std
mov
adc
add
mov
dec
xchg
mov
scas
repnz
inc
xchg
push
mov
add
jg
into
idivl
pop
int3
lahf
dec
push
pop
sub
aas
lock
iret
mov
subl
lret
lret
jo
fwait
loopne
ds
mov
fmul
adc
adc
mov
push
pop
xorl
std
js
lcall
mov
mov
xlat
loope
xchg
jns
jl
xchg
sti
out
jb
xor
dec
lock
rcrl
xor
nop
sub
sbb
hlt
push
dec
int
xor
sub
mov
rcrb
popf
push
xor
push
jg
mov
jnp
jne
sub
popf
arpl
loopne
pushf
add
std
fcoms
fbstp
cmp
aas
push
jb
lret
sbb
clc
pop
mov
push
mov
aam
mov
mov
leave
vpcmpistrm
addr16
sub
inc
adc
xchg
sti
xor
dec
sar
leave
push
cmp
add
inc
stos
or
xchg
sarb
or
mov
lret
aam
cmc
xchg
push
je
lcall
loope
int
xchg
sbb
movsb
bound
mov
xor
push
jne
xor
outsb
test
mov
jp
stos
fcoml
cli
push
fdivrl
cmp
mov
gs
sub
insl
fldln2
push
ds
fs
ror
mov
insl
jecxz
lret
jl
lret
push
adc
test
inc
jmp
xchg
push
sti
push
adc
push
enter
les
pop
dec
insl
jae
fsubl
xchg
insb
dec
sbb
hlt
int3
cs
fwait
lahf
push
or
in
jo
je
push
aad
fnstenv
cld
les
daa
subl
lcall
or
mov
xlat
cmpsb
dec
daa
fiadds
test
xchg
mov
jne
popf
mov
push
lock
dec
mov
xor
cs
loopne
xor
dec
sub
xlat
push
jg
pop
pop
gs
mov
sarl
loopne
insb
push
loop
mov
add
mov
push
dec
fdiv
into
pusha
xchg
add
mov
jns
mov
push
aam
divb
pmulhw
dec
mov
sub
jnp
pop
adc
pusha
mov
jg
pop
lods
call
je
jno
stc
fstpt
shll
sarl
fwait
imul
jae
push
mov
fcomp
or
std
clc
cmp
cmp
add
cmp
js
lds
push
insl
insb
cmp
sub
mov
imul
pop
xor
and
add
ja
cmp
mov
mov
mov
inc
jecxz
pusha
arpl
mov
stc
sub
mov
aam
jno
loop
sub
test
xor
pop
int3
pushf
pop
cwtl
add
push
ret
popf
sub
sbb
sub
pop
aam
ret
divl
mov
scas
dec
mov
ret
pop
sub
lods
faddl
in
push
cltd
lahf
jae
in
repz
sahf
jmp
popa
inc
push
cmp
xor
adc
xchg
pop
sub
xor
imul
mov
fistpl
adc
push
sahf
sti
shrb
clc
pop
mov
out
jge
cmpsb
call
or
mov
test
idivb
dec
clc
pop
dec
addr16
ss
add
jmp
rolb
xchg
data16
sub
rolb
pop
stos
ja
mov
rorl
xlat
mov
inc
out
sti
xchg
js
cmpsl
mov
test
es
mov
scas
mov
outsl
dec
test
cld
xor
xchg
push
push
xchg
imul
flds
test
sub
lods
insb
pop
pop
outsb
xor
dec
add
add
test
sbb
rorl
inc
popf
mov
xor
fldt
fcmovnbe
arpl
jno
cmpsl
aaa
scas
aam
push
int
xor
faddl
add
xchg
fnstcw
js
cmp
and
cmp
insw
and
dec
mov
ds
xchg
mov
aam
mov
xchg
pop
pop
jns
push
sti
push
jno
test
add
lcall
sti
ret
ja
in
pop
adc
pop
dec
dec
stc
inc
cmp
rcrl
add
fldenv
sub
fldl
test
and
fists
sub
mov
bound
or
les
and
gs
push
sbb
arpl
jnp
fsubs
mov
sarl
cmp
mov
jnp
push
sbb
sbbl
push
mov
arpl
mov
int
pop
dec
pop
clc
subl
nop
sbb
jmp
iret
lcall
sub
jp
sbb
push
xchg
pop
inc
dec
notl
fnstcw
int
rcrl
mov
fdivrs
and
lcall
in
inc
sbb
or
and
push
mov
repnz
pop
negl
dec
adc
fisttpll
nop
cmc
inc
mov
pushf
sub
call
mov
add
mulb
cld
jb
out
arpl
in
pop
add
mov
leave
hlt
andb
insl
lea
pop
pop
bnd
int
repz
sti
rorb
rcrb
cmpsb
or
and
inc
loopne
push
imul
popa
mov
push
dec
adc
cmp
arpl
jp
das
xlat
js
or
int3
mov
ljmp
ds
aam
leave
rorl
cmp
cld
add
cmp
push
mov
dec
adc
fdivrs
dec
imul
fcomip
sub
imul
inc
dec
out
popf
loope
ja
cmpsl
or
idivl
js
sub
inc
add
xor
jbe
dec
repnz
dec
cmp
mov
jns
inc
sti
push
outsl
int3
daa
daa
mov
ljmp
insb
ret
je
lock
mov
jne
decl
jle
mov
dec
mov
dec
cmp
push
mov
sbb
cmp
xchg
sbb
movsl
aad
test
sbb
mov
inc
mov
cld
leave
inc
add
adc
jnp
jecxz
movsl
xlat
push
mov
or
bound
cmp
jno
rcrl
jno
fninit
jb
outsb
fisttps
sbb
jl
cmp
scas
cmpb
pop
insb
cmp
loopne
rolb
test
pop
mov
test
adc
test
push
popa
js
push
jge
aaa
and
push
xchg
push
and
fimull
xchg
lret
or
sub
xchg
mov
xchg
pop
aaa
mov
sbb
imul
cmp
subb
addr16
mov
sbb
add
jmp
mov
cmp
pop
cmp
hlt
dec
adc
add
dec
cwtl
repnz
pop
adc
pop
or
loopne
xchg
sahf
or
push
mov
test
int
lret
pushf
and
cmp
movzbl
mov
push
into
lahf
int
and
push
cld
sbb
mov
jmp
stos
mov
jnp
rcrl
fisubs
adc
cmp
pushf
mov
mov
add
lea
stos
movsl
mov
sti
out
std
jnp
int3
or
mov
jle
lret
add
pop
jne
cmp
sbb
pop
mov
bound
or
jge
arpl
fstps
es
sbb
add
stos
into
adc
iret
pop
cmp
or
fists
ds
aaa
cmp
push
fistl
fmull
movsb
in
outsb
dec
fisubrl
cltd
outsl
mov
dec
dec
lcall
out
add
xlat
jnp
shrb
cmc
push
jge
mov
push
dec
lea
mov
dec
mov
movsl
sbb
fwait
xchg
incl
pop
int
mov
jnp
mov
shll
cmp
pushf
cwtl
jo
es
mov
mov
inc
or
movsb
and
push
dec
cmp
repnz
lods
adc
lcall
mov
pop
cmp
mov
adc
icebp
hlt
mov
sti
adc
xchg
ja
xor
push
clc
push
cltd
in
pop
test
push
cltd
cmp
pushl
inc
scas
std
or
sbb
sub
into
sbb
xchg
cmp
pop
movb
cmp
cmp
test
push
jl
out
and
mov
das
mov
lahf
push
lds
add
cmp
adcl
jne
int
add
insl
insl
lret
aad
sbb
sbb
lea
stos
or
inc
data16
push
xchg
jnp
lahf
das
xor
xor
adc
xchg
adc
cmp
xchg
aam
int3
sti
or
push
mov
loopne
xchg
add
mov
xchg
jne
dec
outsl
dec
sub
pop
int
sub
pusha
fidivrs
imul
cmp
popf
jge
iret
push
push
mov
add
adc
jns
and
scas
push
rcr
cmp
pop
dec
mov
inc
pop
or
faddl
or
fidivs
pop
mov
pop
sbb
sarb
mov
lcall
push
mov
pop
xchg
shlb
or
jmp
popa
inc
daa
std
pop
ds
sub
mov
dec
sub
adc
and
push
xor
dec
cwtl
hlt
pop
lock
ljmp
loopne
subl
movsl
popf
out
fcomi
mov
inc
add
enter
xchg
push
push
mov
je
xor
loope
in
outsb
lea
mov
dec
and
inc
aaa
ret
mov
cmp
insb
mov
movsl
test
popa
ficoms
int
leave
fdivrl
ljmp
insl
add
jg
loop
push
je
jge
fbld
lds
pusha
out
push
dec
lahf
mov
or
xor
int
pop
mov
les
inc
clc
lock
or
push
add
pop
pusha
scas
or
fsub
into
pushf
or
lret
loope
stos
inc
lock
lods
pop
pop
lods
push
mov
movsl
dec
mov
outsl
int3
decb
xchg
aaa
sti
mov
push
pusha
les
xchg
adc
or
cmp
dec
sub
out
out
pop
movsb
push
int
idivb
mov
orl
pop
pop
push
xor
into
cmp
out
shrb
fwait
inc
adc
push
add
sub
jl
push
mov
sti
xchg
outsb
sub
mov
mov
mov
jecxz
xchg
jae
mov
ret
out
add
ret
fs
or
fdiv
push
inc
mov
sbb
lea
in
push
dec
or
aad
or
mov
aas
jl
outsl
adc
out
fsubs
in
or
xchg
stos
cmp
dec
addr16
or
jmp
jbe
xlat
cmp
fcoml
std
jmp
lahf
jo
outsb
jo
mov
and
push
std
rorl
test
mov
sbb
adc
fstpt
pop
out
cmpl
int
and
nop
mov
jecxz
fcompl
sub
or
lock
sub
sub
pushl
xlat
inc
add
cmp
and
pop
int
jne
insl
push
push
inc
lahf
fcomps
cmp
movsb
cmp
adc
jae
push
jnp
mov
insb
mov
or
mov
or
sbb
gs
inc
xor
adc
loopne
dec
mov
ljmp
dec
xchg
or
das
rorl
jecxz
jp
in
fldt
sbb
dec
inc
inc
mov
stos
not
jg
sbb
cmpsl
add
aas
in
sti
test
xchg
cmc
mov
ljmp
fstps
fldpi
aad
jae
nop
cld
mov
pusha
cmp
bnd
add
in
outsl
out
xchg
fcom
out
mov
lcall
mov
movsb
adc
iret
call
int3
es
and
ret
flds
lock
int
lret
mov
enter
test
int3
fcmovne
movsl
push
cmpsl
mov
js
pushf
pushf
out
jl
loope
cmc
ljmp
mov
push
out
out
dec
fnstcw
push
insb
jle
xor
out
push
int
inc
inc
pop
lds
mov
imul
ret
sbb
adc
popa
lds
adc
mov
jp
pop
call
xchg
in
cld
fidivrl
sbb
call
dec
mov
addb
jnp
jns
dec
xchg
or
aam
fwait
mov
sub
xchg
add
out
dec
dec
adc
sahf
fs
test
sbb
jl
ficoml
jmp
mov
dec
pushf
fadd
fwait
mov
sti
and
xchg
dec
lret
mov
pop
outsb
dec
int3
cmp
cs
add
aad
mov
pop
pop
je
xchg
fsubl
sbb
ljmp
push
cmp
fwait
inc
or
lea
fsubrs
pop
jl
or
ja
push
test
add
dec
sub
xor
jecxz
stc
push
addr16
adc
or
and
and
les
mov
pop
mov
xor
pushw
sbb
mov
lea
nop
add
xchg
pop
rcll
or
pop
sub
cltd
push
insl
lds
push
pop
jg
push
or
xor
int
icebp
xor
nop
in
hlt
nop
mov
sub
push
sarb
sbbl
push
repz
mov
mov
mov
iret
xlat
lret
xor
gs
mov
jae
in
mov
loopne
and
inc
mov
pop
xchg
pop
cld
shll
mov
out
addr16
test
xor
jmp
cmpl
cmp
ja
or
mov
jl
cs
jo
cmp
lea
inc
bound
push
jnp
dec
cmpb
aas
cmp
adc
sbb
into
and
jge
and
popf
dec
jl
outsb
outsl
icebp
jae
mov
jne
add
cmp
ss
nop
fnstsw
adc
mov
ds
and
or
sub
test
cmc
idivl
mov
and
jle
mov
sti
cmp
popf
jns
push
shl
faddl
push
fisubrs
push
push
mov
sti
xchg
outsl
andl
enter
out
lret
lds
sub
int3
bound
pop
ds
ljmp
jl
rolb
mov
xor
sub
mov
mov
cmp
inc
js
jnp
dec
in
jg
pop
or
mov
sub
jl
or
dec
add
or
icebp
mov
movsl
jnp
push
jp
mov
out
mov
push
mov
push
or
push
adc
push
jae
dec
cmp
nop
sti
pop
cmc
jo
stc
mov
lret
sbb
jle
cwtl
je
or
jp
sub
aas
dec
mov
cmp
xchg
push
mov
mov
pop
nop
das
mov
jle
and
mov
dec
mov
dec
bswap
sub
mov
push
cwtl
jg
imul
dec
int3
fwait
add
repnz
hlt
gs
dec
shll
adc
loope
mov
push
xchg
xchg
pushf
pop
sub
es
cmp
mov
leave
mulb
test
dec
or
push
xchg
or
cwtl
inc
push
jno
int
lret
movsb
push
inc
loope
cmp
xchg
repz
pop
sbb
mov
push
dec
mov
mov
cmp
mov
fidivrs
mov
std
bt
push
xchg
arpl
sbb
jnp
test
test
or
mov
jl
dec
xor
fdiv
mov
xor
xchg
dec
pop
test
aas
pusha
aad
xorb
ret
or
pusha
int
xchg
push
push
fsubrl
adc
int3
out
jg
jbe
and
xchg
or
inc
shrb
mov
gs
push
sub
cmp
add
orb
add
rol
int3
cld
adc
sbb
iret
xor
divb
mov
push
xor
sub
rolb
cmp
addr16
cli
mov
inc
mov
lock
stos
rcrl
dec
int3
decb
mov
lock
adc
xor
jg
mov
jno
adc
pop
in
adc
cli
inc
adc
and
fmuls
jb
mull
jge
loope
jg
sub
int3
cmp
fildll
rcrl
lds
gs
dec
mov
divl
cmp
push
sub
push
cwtl
movsl
or
or
ds
icebp
or
or
imul
outsl
xorb
mov
outsb
lahf
shrb
loop
sbb
imul
int3
sbb
pop
daa
les
dec
ret
js
pop
mov
jmp
ret
push
pop
mov
aaa
rcl
int
es
sbb
sub
idiv
ja
add
loope
dec
xchg
fnstenv
mov
mov
cmpsb
imulb
dec
jp
lcall
mov
cmp
inc
pop
jg
fsub
sbb
mov
sbb
xor
mov
iret
scas
pushf
mov
adc
cmpsb
push
adc
repnz
mov
cmp
movsl
xor
mov
add
lods
test
cmp
push
ja
mov
arpl
aas
out
imul
dec
mov
outsl
enter
cmpsl
into
xor
sbb
or
popf
cwtl
sahf
pusha
imul
ljmp
jns
jno
mov
adc
dec
pop
jo
sbb
dec
ljmp
aaa
fsin
andnps
jae
repnz
int
cltd
dec
test
clc
mov
lahf
cmp
loope
fisttpl
hlt
je
int
ss
pop
xor
cmp
push
add
icebp
mov
or
fsts
das
popf
jnp
xchg
and
orl
mov
in
stos
shrl
sbb
mov
add
clc
dec
ds
call
mov
gs
std
ja
cltd
stos
popf
loop
jnp
repz
push
inc
lea
cmp
sub
mov
dec
jl
sbb
out
insb
jb
pop
stos
and
inc
push
lea
mov
dec
mov
mov
stc
push
insb
rcl
mov
lea
outsb
dec
push
in
inc
insl
mov
pop
addb
jge
aad
cmp
pop
sbb
sub
sahf
or
push
cltd
jg
and
dec
aaa
push
pop
jle
cmp
jo
sarb
into
jnp
loope
mov
mov
imul
out
xchg
ss
stos
adc
jo
lods
sub
dec
cwtl
dec
or
xor
cmp
outsl
push
fsts
mov
mov
cmpsl
xor
and
ret
mov
mov
mov
jns
dec
mov
sti
or
fwait
cmp
jmp
std
inc
xor
and
out
and
into
jae
mov
dec
test
das
jmp
cmpsl
inc
lcall
ret
addb
rcll
add
dec
mov
jbe
add
bound
dec
jg
std
pop
aam
mov
inc
imul
sarl
int
ja
fnsave
xchg
cmc
jno
shrb
and
jne
repnz
mov
loope
add
pop
inc
call
mov
push
nop
jg
add
or
jle
push
pop
and
push
jae
lds
lahf
sub
ror
sbb
xchg
inc
in
jb
sbb
pop
xor
inc
or
stc
lahf
jnp
ds
push
cmp
imul
and
mov
repz
or
mov
bound
xchg
jb
dec
adc
pusha
lret
mov
rol
or
pushf
mov
sbb
je
cmp
lods
pop
test
mov
aad
int
dec
inc
xchg
pop
cmc
lahf
mov
fsubrl
jno
inc
sub
out
cld
sahf
pop
popf
xchg
out
data16
and
cmp
push
rcl
test
sarb
outsb
pop
in
sbb
inc
mov
rolb
inc
mov
xchg
inc
xchg
movsb
cld
lret
arpl
inc
loop
dec
in
in
pop
mov
xorb
js
loope
inc
mov
or
aad
cmp
mov
add
xchg
xlat
lods
xorl
imull
push
cmp
sbb
xchg
fadds
sbbl
aas
int
inc
inc
ret
fmulp
mov
push
pop
jb
mov
cmpl
sub
xchg
fs
xchg
jnp
addr16
or
mov
fcmovu
sti
pushf
cmp
mov
inc
imul
imul
enter
fildl
mov
jnp
push
cmp
cmp
int3
dec
add
sbb
sti
leave
subl
dec
push
mov
out
les
xchg
xorb
shr
mov
mov
aaa
add
inc
repnz
aad
push
cmp
adc
push
push
jg
mov
lds
jo
inc
andl
insl
pop
mov
xchg
mov
pop
rcrl
cmpl
inc
sahf
dec
sub
push
pop
and
xchg
mov
data16
lods
mov
lds
out
sub
jmp
xchg
mov
jae
push
bound
push
pop
xor
movsb
mov
dec
xlat
and
dec
dec
sbbl
stos
lcall
test
push
add
loope
mov
in
in
movsl
cmp
sub
push
push
mov
dec
or
cli
mov
ja
insb
cmp
jne
jnp
lods
sub
inc
ficompl
mov
cbtw
mov
inc
sub
xchg
enter
addr16
cmpsl
jno
lock
popa
mov
in
jp
ja
jl
pushl
add
outsb
pop
popa
iret
into
mov
cmp
daa
icebp
xorl
dec
jnp
pop
insl
push
pop
or
adc
xchg
test
inc
jge
add
or
into
adc
daa
int
loopne
pop
int
fwait
inc
scas
roll
or
or
aas
mov
jnp
mov
jns
mov
add
mov
int
inc
pop
cwtl
sub
hlt
xor
inc
into
dec
sbb
loopne
and
push
jno
and
pushf
dec
jg
pop
mov
sahf
add
mov
cmp
enter
lcall
add
pop
pop
sbb
shlb
arpl
rcr
ret
movb
dec
fdivl
stos
pushf
xor
fcompl
adc
sub
shll
mov
icebp
cltd
adc
cli
sub
ds
sar
ja
pop
mov
sbb
sub
dec
fcmovnb
jnp
outsl
mov
call
ret
fimuls
mov
cld
add
pop
xor
pop
dec
cmpsb
sbb
fstpl
pop
mov
popf
mov
rolb
jge
mov
cmp
loop
jl
mov
movsl
mov
jo
jge
inc
adc
rcrl
adc
push
sti
jg
xor
mov
push
push
adc
pop
stc
loope
dec
sub
dec
xchg
je
jecxz
test
dec
dec
add
shl
push
or
pop
test
sbb
xor
dec
jl
adc
fwait
or
dec
jg
into
xchg
std
pop
mov
dec
cmp
es
xchg
pushf
pop
fdivl
add
mov
mov
iret
rol
jmp
ror
cs
mov
stos
lcall
dec
shrl
outsb
insl
jp
mov
lcall
add
add
push
sti
xor
cli
pop
fisttps
xor
sarl
dec
pop
test
mov
outsl
cmp
daa
sbb
add
mov
xlat
andb
popa
cld
leave
cmp
arpl
pop
xor
mov
movsb
xchg
jnp
pop
mov
mov
outsl
imul
mov
and
in
pop
cmpsl
cmp
ss
jnp
add
inc
jp
xchg
test
sub
sub
fstl
mov
push
inc
std
jmp
ret
sbb
stos
pop
lcall
cld
lds
mov
sti
xor
sahf
cmp
pop
pop
mov
cmp
jae
fcmovu
xor
cmp
nop
bound
push
sub
fldl
mov
pop
dec
dec
add
adc
mov
inc
hlt
cmp
iret
insb
outsb
inc
popf
xor
mov
mov
es
mov
cmp
int3
mov
push
andl
mov
cmp
leave
stos
add
mov
lahf
sti
out
pop
adc
push
xchg
xor
clc
cmp
pop
sbb
ljmp
xor
roll
inc
pop
cmp
jmp
jb
or
mulb
cmc
loop
test
mov
ds
insl
jle
pop
popa
out
push
and
je
test
pop
dec
outsb
jmp
lds
add
pop
imul
mov
push
cmp
testb
aaa
cld
pop
int
add
stos
and
pop
xchg
aad
imul
lds
and
dec
mov
mov
xchg
aad
jo
imul
scas
push
sti
push
aas
outsl
cli
insl
sub
mov
or
dec
pop
and
push
in
inc
in
xor
and
jns
test
add
popa
fstps
push
in
xchg
stos
cmp
pop
mov
push
push
fldpi
sbbl
cmp
daa
or
popa
rol
dec
ds
cmp
cwtl
add
mul
mov
mov
seta
mov
in
mov
ficompl
lods
push
les
add
cmp
les
xor
dec
mov
inc
adc
jmp
mov
ja
fnsave
mov
into
mov
movsb
scas
xchg
into
or
rclb
sbb
cmp
imul
push
push
gs
mov
outsl
or
push
push
mov
xchg
mov
leave
xchg
cmpl
cltd
mov
cli
push
int
mov
mov
mov
jbe
test
push
test
inc
inc
dec
in
cmp
mov
sbb
iret
or
sbb
jl
and
mov
bound
fwait
ret
xchg
or
stc
adc
pop
cmc
lret
rorb
xor
push
mov
lret
xchg
insl
stc
divb
pop
std
in
xchg
jnp
cmp
int3
inc
ret
adc
ja
lods
mov
subb
stc
jae
loope
pop
cmp
xchg
sub
sti
and
outsl
pop
cmp
aam
fs
insl
mov
jmp
aad
ss
les
push
ds
lea
cmp
hlt
or
xchg
mov
iret
fsubrl
imul
push
out
shl
jns
mov
inc
jns
incl
aaa
mov
inc
pop
or
lret
js
scas
clc
pop
push
or
rcl
cmpsb
inc
mov
pop
or
cmp
inc
dec
insl
mov
jnp
cmpsl
jg
lahf
xchg
in
xchg
mov
xchg
rcll
jge
mov
jp
fadds
dec
int
mov
cmpsl
mov
cli
sahf
cmp
popf
pop
ljmp
adc
insb
xchg
cs
and
aaa
mov
aad
push
inc
xor
dec
lretw
dec
shl
mov
insl
das
sarb
pop
mov
push
ja
ret
push
stc
aaa
and
sahf
dec
addl
xchg
in
jae
imul
out
nop
ret
cmc
sbb
jne
and
mov
cmpsl
fwait
mov
aas
pop
add
ja
mov
mov
std
adc
cwtl
jle
jg
imul
inc
pop
mov
cld
cs
iret
inc
dec
das
leave
jg
call
jns
imul
pop
setbe
ja
cmp
mov
push
mov
int3
xlat
jecxz
cltd
cwtl
aaa
inc
dec
cmp
mov
ljmp
inc
int3
mov
stos
popa
cli
sub
fsubl
fnstsw
pop
sub
dec
mov
adc
into
test
cli
test
xor
pop
outsb
push
mov
ror
aas
stos
call
mov
sti
jb
push
jp
das
xchg
jae
adc
dec
incb
sbb
mov
andnps
mov
ror
add
sub
jno
xlat
dec
test
xchg
and
dec
dec
nop
repz
cltd
call
addr16
inc
adc
mov
jnp
mov
dec
dec
iret
add
mov
pusha
xchg
adc
in
cltd
mov
in
pcmpeqd
subl
mov
fsubrp
dec
dec
sbb
mov
or
sub
jo
bswap
pop
and
or
lods
fisttps
shrl
jns
jnp
lods
xchg
divb
jle
cmp
xlat
arpl
mov
fisttps
in
jns
push
xor
mov
inc
dec
movsl
xor
mov
or
and
dec
sub
pop
push
pop
js
jmp
fucomi
dec
mov
scas
adc
hlt
sti
fcomps
cmpsl
add
or
adc
pop
rorb
outsl
test
cld
inc
and
jp
sbb
notl
lret
aam
xor
cmc
rcrl
filds
mov
inc
ds
or
call
int
sub
jo
iret
inc
push
mov
icebp
bound
sti
jecxz
in
mov
xchg
js
xor
or
leave
pusha
sbb
dec
jo
adc
outsb
aam
jl
push
dec
mov
int
int
dec
je
sub
add
lahf
in
xchg
lods
push
es
rolb
xchg
xchg
mov
or
or
pop
mov
sub
pop
shrl
jle
push
lcall
inc
pop
dec
fnsave
jg
mov
fwait
sub
cmp
or
imulb
dec
pop
xchg
jne
xchg
sti
sbb
insl
jle
xlat
or
sub
xchg
inc
cld
sub
or
cmc
arpl
or
nop
das
cmp
or
xlat
fdivrs
mov
into
mov
or
insl
mov
adcl
xchg
in
je
jl
sahf
cmp
mov
fcmovnbe
stos
rclb
ret
insl
cs
push
push
test
jle
push
mov
jno
xchg
jnp
std
mov
cmp
testb
fldl
movsb
orl
sub
xchg
cmpsl
pop
adc
je
sahf
push
xchg
and
sbb
scas
adc
or
add
into
andl
cld
push
dec
adc
xor
inc
repz
add
scas
jle
decb
xchg
in
push
cmpsb
lods
adc
jp
and
imul
inc
mov
sbb
jl
push
add
rcll
or
icebp
mov
add
imul
inc
mov
push
sub
outsb
mov
loop
jb
and
cmp
dec
lcall
mov
cmp
xchg
fwait
push
cld
mov
adc
inc
dec
mov
popf
cmc
aaa
pop
aas
cmp
repnz
pop
push
fs
or
jb
mov
fcmovu
stc
sti
pop
cmpsb
mov
lods
mov
int
mov
xchg
into
imul
dec
es
mov
cmpl
cmpsl
pop
cmp
scas
add
push
add
cld
cli
lea
push
sbb
enter
sub
pushl
jb
out
icebp
je
stc
jns
push
cwtl
fisubl
insb
in
in
cmpb
pop
je
std
cs
insb
mov
pushf
testb
mov
loop
stos
jnp
mov
repz
ja
cld
adc
xchg
negb
outsb
stos
int3
fwait
inc
pop
aam
fadd
scas
arpl
push
cmp
popf
outsl
add
ljmp
sbb
aas
jne
mov
cld
rclb
int3
imul
xchg
mov
sahf
mov
fildl
jnp
mov
sti
sub
dec
mov
or
or
xchg
push
sub
clc
jnp
jne
sbb
test
mov
and
xchg
mov
bound
push
or
cmp
push
push
inc
sbb
les
jnp
lcall
cmp
inc
lahf
fs
inc
mov
orb
loope
mov
pop
popa
mov
int3
mov
rcll
inc
fimull
xor
and
test
mov
lret
cmp
in
sti
test
std
ss
jg
mov
xlat
idivl
jle
mov
sub
jae
pop
in
inc
scas
fadd
cmp
mov
dec
cmp
into
sub
lods
jnp
flds
or
or
insb
test
xor
pop
dec
aam
popa
test
cmp
pop
adc
insl
ljmp
xchg
insb
pop
das
insb
dec
dec
cld
jno
sbb
inc
jno
xchg
pop
in
mov
pushf
icebp
pop
jge
inc
xchg
xor
cmp
inc
push
mov
repz
imul
mov
adc
jle
inc
mov
mov
inc
sub
pop
mov
xchg
sbb
shrl
je
loop
xchg
repz
mov
notl
push
inc
sub
mov
or
pop
cld
rclb
xchg
fwait
push
aas
setae
je
inc
dec
out
fildll
loopne
mull
mov
xchg
cld
xchg
call
mov
push
scas
ds
sbb
sbb
mov
add
ja
dec
push
rcl
xchg
adc
dec
cmp
aam
xor
xlat
movsb
push
mov
and
adc
add
jno
mov
cmp
mov
push
das
xlat
lahf
xchg
aad
lcall
jo
xchg
xchg
aad
xor
loope
test
mov
inc
pop
insb
pushf
jnp
push
dec
add
outsl
rol
lea
fwait
cld
jle
das
mov
rorl
push
push
movsb
push
loopne
icebp
xchg
adc
mov
push
dec
aad
pop
mov
repnz
and
add
repz
mov
push
leave
pop
mov
stc
xor
iret
sbb
sbb
sti
pushf
int
mov
pop
jge
sub
push
mov
out
mov
mov
pop
or
sub
mov
add
sbb
push
out
ds
cmc
pop
xor
insl
shrl
and
add
adcl
mov
in
pop
jae
cmpb
cmp
stos
lds
inc
lahf
mov
arpl
pushf
dec
dec
in
lods
inc
pusha
and
mov
es
xchg
jge
rorl
sbb
insb
icebp
or
clc
sub
mov
adcl
pop
add
push
inc
dec
mov
cmp
cmp
pop
add
ror
mov
mov
not
xchg
movsb
mov
dec
test
mov
add
cmpsl
jno
movsl
jecxz
andb
cmp
add
cltd
mov
sub
or
xor
dec
into
aaa
jl
lea
aam
scas
push
outsb
push
jle
jbe
sbb
lds
jno
fwait
pop
fs
adc
adc
jb
pop
jmp
testb
xorl
test
addr16
cli
data16
push
jl
leave
and
sub
sti
xchg
data16
inc
pop
mov
lret
mov
jne
orl
lock
or
add
jnp
stos
cmp
jge
push
lods
sub
pop
inc
cmpsl
xor
mov
idivb
xor
pop
dec
sub
fildll
mov
loop
or
das
jnp
outsb
dec
in
mov
mov
ljmp
pop
xor
jo
insb
dec
jg
stos
sbb
inc
mov
cmp
pop
movsb
inc
int
push
leave
mov
push
aas
iret
cld
add
loope
inc
cmp
pop
and
and
inc
pop
cmp
push
fwait
inc
out
adcb
pop
jecxz
jl
cmp
aam
jge
fs
cltd
movb
or
mov
sahf
pop
movsb
nop
cmp
int
popf
push
in
sbb
insl
inc
adc
cmpsb
mov
cmp
inc
nop
fmuls
in
dec
cmp
cld
movsb
add
out
xor
xor
bound
push
outsb
dec
jns
insb
movsl
lret
push
out
sti
sbb
clc
dec
jae
test
mov
nop
push
dec
xchg
jge
xorb
xchg
orl
outsl
in
adcl
sbbl
push
out
mov
fidivs
loop
lcall
jno
and
shlb
mov
imul
xchg
add
jno
cmp
scas
xor
push
fs
pop
adc
pop
xor
dec
ljmp
clc
dec
mov
aad
popa
mov
pmulhuw
sub
jo
test
dec
mov
add
arpl
sub
movsb
daa
ljmp
xchg
adc
dec
leave
mov
adc
aam
sbb
push
jl
xor
sub
inc
aam
inc
movsb
mov
std
ja
cltd
mov
xor
int3
and
movsb
xchg
push
inc
test
jge
add
add
pusha
push
test
inc
into
dec
rcll
dec
jmp
stos
or
push
or
dec
shll
outsl
xor
push
push
loope
cmp
test
sub
fsubrs
cmp
jnp
movsb
cwtl
orl
imul
cmc
or
test
call
lahf
pop
imul
sub
sbb
xchg
hlt
test
or
scas
push
sbb
imul
decl
js
fldcw
mov
js
fs
movl
std
adc
lret
mov
sub
xor
jmp
cmp
inc
hlt
int
mov
jmp
or
loope
ret
loope
jno
ljmp
popf
jnp
lods
xchg
das
cmp
push
jl
pop
mov
mov
push
rorl
mov
es
sub
pop
dec
inc
daa
insb
addr16
dec
insb
dec
fs
aas
pop
inc
int3
out
jne
fnstcw
fstpl
bt
and
inc
inc
cmp
cwtl
mov
push
mov
out
out
push
jne
push
add
mov
cmp
xchg
jmp
je
lods
dec
lahf
mov
sub
cmp
les
jl
lahf
cmp
add
mov
or
sbb
push
add
jae
cld
dec
push
pop
fsub
lret
fs
pop
cld
int
cwtl
popa
mov
jl
add
orb
push
mov
insl
sahf
xchg
dec
sbb
popa
mov
and
jbe
pop
jb
incb
push
dec
add
in
xchg
lret
jmp
aad
sti
xor
mov
inc
leave
std
rcr
add
pop
pop
sub
mov
hlt
clc
mov
mov
mov
in
mov
push
and
or
fimuls
rcrl
pop
inc
inc
adc
mov
pop
lods
dec
fs
mov
jl
jnp
xchg
in
pop
mov
in
or
daa
in
lea
xlat
jo
push
cld
or
push
pop
data16
sbb
jmp
stos
loopne
or
fists
sti
mov
add
dec
ret
fsubl
add
inc
pop
dec
out
inc
mov
jns
sub
cltd
xor
or
mov
or
mov
adc
cmp
jecxz
adc
adc
xchg
pop
rcr
insl
jl
in
fmuls
roll
rorl
cmp
in
testl
jns
mov
xchg
psllw
insl
pop
lahf
arpl
test
xchg
jno
add
add
and
daa
cmp
xor
jle
imul
ret
push
testl
out
mov
sub
subl
ret
cltd
inc
and
jge
aas
js
incb
inc
sbb
sub
and
xlat
mov
mov
int
fwait
jge
mov
adc
fsincos
inc
mov
cltd
mov
adc
aam
mov
mov
mov
push
cltd
mull
test
fnstcw
insb
les
inc
jge
cmp
repnz
aam
scas
pop
cmp
adc
mov
cmpsb
loopne
sbb
sti
fbld
xchg
mov
test
mov
push
adc
fsubr
mov
mov
sub
lret
sub
cmp
stos
stos
orl
sub
mov
aad
test
mov
in
in
jnp
clc
pushf
xor
mov
rol
xlat
test
cmp
add
mov
cmp
and
outsb
mov
es
lods
jmp
inc
jge
push
pop
push
dec
or
add
inc
mov
xor
mov
aam
jp
add
pusha
ds
inc
mov
enter
mov
cli
or
cltd
bound
adc
dec
xor
cmp
jg
lea
sbb
pushf
xchg
fnstsw
push
xor
jns
sti
xor
mov
mov
lea
jnp
sti
in
das
popa
fsubrl
cwtl
fwait
dec
mov
loopw
or
into
addb
lret
sub
in
orb
mov
inc
jae
and
mov
negb
inc
orl
cmp
pop
mov
sbb
loop
shrl
inc
movsl
mov
popf
sub
mov
cmp
subb
cmp
dec
test
push
mov
push
pop
adc
jae
or
fnsave
sub
lea
sbb
mov
pushf
ljmp
push
fnstcw
das
int
rorb
mov
inc
or
gs
cwtl
pop
mov
mov
test
pop
mov
fdivrs
cmc
and
cmp
or
jmp
mov
or
pop
fisubl
outsb
mov
ds
cmp
lock
xor
cmpsl
and
inc
repz
add
jge
adc
add
mov
je
cmp
mov
loopne
mov
das
sub
jl
leave
fs
or
push
push
clc
xchg
pop
dec
inc
sbb
dec
adc
push
mov
pop
orl
pop
sub
ss
mov
sarb
adc
lcall
aas
orb
add
pop
push
decb
add
mov
ss
xchg
cmp
dec
in
mov
mov
icebp
cmp
xor
mov
mov
mov
repnz
sti
lea
mov
mov
push
adc
gs
mov
inc
sti
adc
mov
cmp
fnstcw
jmp
cmpsl
add
out
pop
cmpsl
ret
test
xchg
inc
lock
imul
mov
pop
dec
cmpsb
jle
or
dec
js
pop
fldenv
je
lahf
jmp
add
sbb
shlb
or
fldt
pop
xor
mov
pop
test
and
int
std
jp
jl
xchg
loopne
loop
jl
fadd
jns
sub
fadd
lods
rcll
push
nop
sub
lea
inc
idiv
inc
fdivl
add
fistpl
pop
lahf
sub
cmp
cmp
xchg
imul
adc
dec
lock
add
movsl
mov
aam
push
pusha
int
xlat
fildll
xor
mov
mov
and
or
rcrb
or
pusha
dec
aam
repz
mov
fnstcw
pop
mov
xchg
jl
push
int3
jne
repz
andl
mov
inc
imul
sub
js
adc
ret
adc
enter
sbb
outsl
adc
jl
mov
mov
insb
cwtl
mov
in
outsl
mov
jl
out
xchg
mov
xor
jecxz
xchg
outsb
cltd
ftst
pop
cmp
loop
sti
jge
inc
jecxz
pop
test
mov
rcl
mov
or
dec
rorl
repnz
rorb
sbbb
jns
add
mov
jo
pop
pop
dec
adc
stos
or
pop
mov
and
or
repz
add
cmp
out
roll
mov
xchg
int
and
jo
adc
gs
testl
xchg
mov
cmc
xor
add
jnp
jnp
or
in
or
sub
lods
sti
jmp
aas
jns
jno
popa
mov
or
pop
xor
sbb
mov
hlt
pop
stos
popa
dec
je
jg
mov
lods
mov
mov
cmpsb
nop
pop
fadds
roll
xchg
clc
cmp
scas
pmullw
mov
cmc
mov
ss
or
les
xor
xor
fnstsw
push
sahf
imul
mov
mov
sub
jae
xor
pop
repz
ja
push
jnp
in
iret
test
rcl
addl
inc
push
shlb
inc
fstpt
add
mov
push
outsl
mov
inc
adc
es
movsb
sub
mov
jne
push
daa
sbb
add
push
test
xchg
pop
cmp
mov
mov
cld
rcll
inc
mov
aad
adc
xchg
sbb
in
cmp
frstor
orb
inc
jae
in
lods
push
or
mov
stos
xchg
mov
dec
fbld
sub
dec
dec
mov
rorl
sub
mov
xchg
jne
scas
icebp
mov
orb
cld
int3
adc
scas
das
sbb
popa
and
and
lock
cmp
lahf
sti
mov
clc
mov
mov
shlb
pop
outsb
cmpl
cli
lea
enter
data16
in
addr16
jnp
push
repnz
ret
inc
imul
arpl
inc
pop
aas
push
xor
push
mov
dec
int
int3
addr16
push
xchg
xor
loopne
pop
or
or
fisubrl
mov
inc
lods
into
jnp
cmpsl
xchg
decb
inc
cmpsb
add
insl
cmc
lds
adc
leave
mov
or
insb
lds
and
in
mov
das
stos
push
mov
jle
sarb
jne
cmp
mov
mov
dec
add
mov
outsb
scas
fwait
js
xor
cld
fcompl
mov
push
lds
dec
sub
int
scas
sbb
mov
incl
in
mov
popl
dec
hlt
mov
lahf
xchg
mov
jnp
cmpsb
ret
xor
xchg
nop
cld
repnz
sbb
or
dec
dec
sahf
jns
jae
pop
jno
mov
fwait
xchg
push
dec
lahf
sti
dec
mov
cmpsb
frstor
test
mov
adc
pop
cmp
jmp
js
bound
push
xchg
inc
in
cmp
or
imul
das
mov
xchg
adc
int3
mov
sbb
jle
xor
dec
cltd
clc
xor
lcall
sarb
clc
in
ljmp
fsts
mov
mov
cmc
mov
out
out
cmp
ret
rorl
repz
dec
mov
cmp
scas
mov
push
jne
mov
pop
jl
jb
mov
adc
xchg
mov
mov
pop
push
das
jge
sub
rclb
mov
imul
int
sbb
int
or
add
inc
mov
int
fdivrl
mov
mov
mov
jle
mov
push
adc
por
pop
mov
negb
mov
test
sub
fwait
sti
daa
leave
adc
cmp
ss
push
repz
push
movsb
pop
int
lods
xchg
adc
cmp
aaa
pusha
sbb
pop
std
sti
cmp
mov
inc
inc
lods
cmpb
sbb
add
leave
jg
movsl
inc
add
mov
mov
jno
xorl
cmp
jmp
lds
dec
lret
or
ljmp
fnstsw
jnp
jbe
mov
repnz
mov
daa
les
in
lahf
adc
test
sti
xorb
cld
je
mov
mov
loopne
sbb
cs
cmp
mov
aam
and
inc
mov
outsl
mov
dec
mov
add
jb
pop
push
add
and
rcll
cmpl
js
test
mov
mov
fidivrs
pop
push
mov
out
adc
shl
ret
imul
cmp
imul
cmp
sbb
into
xchg
cwtl
int
cli
jo
out
lcall
imul
lahf
jnp
les
out
inc
pop
mov
and
jl
iret
cltd
sbb
fildl
ret
stos
ja
lahf
cld
imul
sti
nop
mov
mov
enter
shrl
cmp
jmp
or
adc
sti
ja
aas
mov
pop
mov
loope
jnp
fimuls
ficoml
lcall
mov
mov
push
mov
push
jb
jbe
scas
jns
dec
jmp
divl
test
jbe
push
jge
addr16
sbb
shrb
cmpsl
enter
dec
dec
xlat
adc
ret
andl
jmp
js
iret
jle
clc
cmpb
mov
sti
ss
addr16
mov
cld
repz
fucomip
sub
cmp
or
bound
sti
lret
xchg
add
mov
in
int
das
icebp
shrb
cmpl
and
push
xchg
inc
jmp
xchg
ja
add
add
insl
outsl
lods
sarb
mov
sbb
push
xor
jns
inc
je
adc
dec
in
pop
leave
push
fucomp
and
push
test
in
test
and
push
pop
insb
mov
xchg
dec
rcrl
dec
inc
ja
or
or
ret
inc
xlat
ret
sti
fldt
or
mov
les
cmpsl
adc
dec
addb
pop
or
aaa
mov
int
jecxz
xchg
sarb
cs
mov
adc
fidivrs
sbb
xchg
mov
imul
cld
lahf
dec
mov
and
popf
push
mov
lret
dec
dec
lret
xchg
cmp
out
mov
lods
idivl
outsb
dec
scas
das
scas
push
scas
imul
or
xchg
dec
std
pop
leave
stos
addr16
std
out
add
lcall
mov
leave
pop
hlt
dec
mov
shlb
cmp
adc
lods
jnp
shlb
ret
test
xlat
idivb
test
inc
and
or
pop
add
mov
pop
mov
test
jnp
lods
mov
jle
cmp
mov
jne
cmp
jb
jnp
in
mov
testb
ja
pop
out
lods
adc
sub
fnstsw
aad
xor
mov
jae
aas
aaa
adc
loope
hlt
adc
ret
or
data16
les
addb
mov
stos
push
loop
and
or
mov
pusha
mov
mov
aad
jnp
pop
hlt
js
adc
pushl
sub
in
add
sbb
pushf
jge
ljmp
ret
testb
fwait
jnp
dec
pop
jns
scas
or
push
xor
fcomip
cmp
cmp
sahf
das
mov
jae
test
mov
dec
push
xchg
push
xchg
icebp
inc
add
iret
rcrb
jnp
iret
in
mov
xor
xchg
sbb
jae
mov
jnp
pop
gs
mov
insl
and
inc
and
cmp
pusha
nop
aas
mov
test
cmp
mov
cmc
sarb
pop
lock
ret
test
sub
xor
fwait
lcall
sbb
add
jmp
push
mov
lods
je
stos
test
jg
sbb
sub
lahf
xor
xchg
in
orb
das
stos
lea
cmp
repz
adc
dec
int
scas
movsb
stos
adc
cmpsb
mov
dec
pop
test
dec
mov
dec
fdivrl
adc
lea
lret
mov
fnstsw
fmuls
and
adc
testb
jo
xlat
into
push
cli
mov
jle
xor
mov
in
sbb
outsl
dec
lea
out
orl
xchg
push
dec
std
shll
mov
pop
insl
or
mov
fs
jnp
mov
pop
cmp
es
and
loopne
cmp
int3
xor
scas
inc
lods
std
cmp
and
push
xor
jae
sbb
notb
andb
cmpsb
arpl
pop
cmp
jne
mov
loopne
push
test
dec
psubsb
std
or
gs
xchg
mov
mov
test
cmp
shlb
xchg
jp
int
imul
in
jno
jbe
mov
std
int
shrl
loope
sbb
sbb
int
daa
out
repnz
pop
dec
addr16
out
clc
sub
lahf
movsl
cmp
cwtl
sub
push
push
push
rolb
mov
push
mov
mov
scas
lahf
popa
jnp
outsl
and
inc
add
test
int
pop
cmp
ror
sub
in
mov
sti
rorb
shrb
xorb
xor
pause
stc
inc
mov
inc
rolb
int3
pushf
testl
xchg
mov
xchg
adc
orb
rol
pushf
cmp
sub
jnp
inc
xchg
ds
shlb
xchg
data16
shlb
mov
fcmovnb
mov
iret
fwait
dec
sub
loop
xor
jmp
or
cs
in
jne
add
mov
jg
into
lcall
scas
push
loop
popa
ret
sahf
test
xchg
sub
std
mov
sti
setae
add
lds
fs
lahf
repz
enter
rcrl
sahf
stc
mov
shlb
sti
sti
inc
ja
dec
inc
jecxz
mov
push
xchg
ret
out
sti
inc
add
add
bound
andb
fwait
out
cmp
je
mov
ret
mov
aad
cmp
mov
in
adc
inc
cmp
jae
cwtl
test
mov
int
jge
addl
ja
lcall
cmc
test
mov
scas
push
mov
push
sub
dec
lcall
lods
pushf
loope
pop
das
add
and
xor
cmpsb
stos
sbb
jge
add
cwtl
icebp
mov
int
popf
movsb
mov
pop
addr16
or
xor
addr16
repnz
outsb
mull
imul
xchg
push
push
jge
mov
mov
xchg
icebp
ficomps
roll
mov
jecxz
xor
mov
lea
fisttpll
ss
cmp
lds
out
int3
mov
dec
dec
xchg
shrb
scas
push
das
mov
dec
adc
mov
cmpsb
mov
push
mov
aaa
leave
fidivs
rcrl
and
ret
ret
push
jl
dec
xchg
in
out
aaa
push
push
pop
dec
mov
int3
mov
aad
es
enter
inc
dec
test
dec
add
fnsave
mov
push
cltd
jnp
sub
pop
mov
fwait
xchg
pop
cmp
add
aam
cmp
outsl
and
cmp
cmp
lea
xor
adc
xor
inc
mov
adc
in
jl
cmp
mov
clc
fwait
ja
js
imul
int
pusha
cltd
ljmp
cmpsl
sub
mov
fists
push
lea
ljmp
in
pop
cmp
orl
lahf
daa
jbe
inc
test
je
or
mov
jp
fwait
sub
loop
leave
test
sti
inc
imull
jp
scas
inc
push
lret
mov
in
pop
push
cmp
rcrl
jmp
or
cmp
insb
imull
js
jg
lea
jnp
enter
out
add
and
outsl
aaa
cmp
adc
mov
mov
xor
insl
adc
push
push
xchg
mov
pop
dec
and
pop
pusha
jge
rorb
jnp
arpl
cwtl
jle
jnp
xor
xchg
dec
repnz
sahf
or
mov
in
addr16
pop
insb
incl
lahf
or
inc
test
fst
sbb
or
sahf
mov
jns
lcall
cld
xor
repz
mov
sbb
mov
inc
xor
sti
jge
inc
jmp
cmpsb
ss
cmpsl
mov
jo
repz
pop
dec
dec
xchg
inc
xor
mov
orl
add
pop
xchg
pusha
jmp
jno
xor
add
cmp
push
in
mov
pop
test
aam
push
mov
pop
xor
int3
aam
or
fistpll
push
lea
jl
xchg
sbb
nop
repnz
aad
mov
mov
or
cvtps2pd
iret
pop
dec
fs
push
fisubrl
movsl
pop
mov
xchg
xor
push
or
fldcw
test
out
adc
jg
xchg
and
pop
cmpb
iret
mov
fdivr
jb
stc
jnp
push
in
mov
push
daa
cwtl
pop
les
mov
or
imul
mov
dec
and
mov
arpl
jl
adc
mov
aam
mov
decl
shlb
fcmovbe
cmp
add
mov
and
dec
sub
dec
mov
sar
jle
cli
ljmp
mov
mov
arpl
std
and
in
pop
out
insb
sub
mov
push
mov
icebp
loop
or
mov
test
sbb
jle
push
mov
mov
stos
fidivrs
jg
and
stc
into
dec
insl
out
mov
xchg
imul
popa
or
xchg
popl
pusha
add
jl
int3
sbb
cmp
jecxz
or
insb
mov
sbb
inc
scas
jae
or
add
lcall
xchg
int
fimull
mov
adc
aas
or
sahf
orb
int
cmc
in
adc
dec
js
jge
adc
fwait
lods
pop
sub
ret
icebp
push
stc
out
int
mov
hlt
shl
mov
in
adc
dec
in
je
sub
aam
test
sbb
and
jnp
mov
aam
jnp
sbb
add
mov
outsb
cmp
mov
jnp
sahf
jo
mov
daa
inc
addr16
shll
lds
dec
insb
mov
nop
cs
cld
sbb
mov
jbe
mov
pop
push
arpl
icebp
jp
cltd
xchg
jg
scas
jae
sti
fidivrl
pop
scas
outsb
lods
fwait
testb
mov
push
psraw
jnp
push
cmc
or
incl
cmp
test
mov
dec
pop
orl
lret
int
xor
outsl
ljmp
xor
cli
mov
mov
add
rcrb
int3
jl
pop
test
sbbb
std
addr16
mov
lods
mov
xchg
insb
test
in
dec
pop
mov
test
aam
int
or
dec
sarb
add
stos
int
fs
pop
jne
adc
addr16
iret
pop
decb
adc
pushf
arpl
add
outsl
imul
in
pop
jae
jg
xchg
adc
aam
divb
cmp
int3
cmp
xchg
pop
pminub
and
sub
jg
mov
fisttpl
stos
sub
rcr
pop
xchg
gs
add
test
push
sbb
cwtl
jge
xchg
lds
iret
outsl
pop
imul
dec
paddd
imul
push
subl
inc
mov
jl
inc
in
dec
test
stc
scas
sti
imul
sarl
hlt
inc
nop
adc
into
cmpsl
ret
and
cmp
cmp
jbe
jbe
or
aam
mov
add
dec
sub
les
subb
rcrb
dec
aam
movsl
or
dec
sub
cmpl
push
sub
xchg
cmp
pop
jle
lea
push
inc
lds
cld
mov
sbbl
adc
xchg
fists
add
and
dec
pop
jl
sbb
les
mov
shrb
aam
pop
sti
movnti
repnz
jae
adc
cmp
dec
lea
dec
mov
in
jg
insl
xlat
jnp
mov
mov
mov
int
int
mov
xchg
test
mov
hlt
pop
aas
or
aam
jnp
sub
cltd
int
testl
mov
stos
scas
icebp
cld
movsl
cmp
xchg
adc
push
jae
std
cmp
pusha
push
and
sub
push
jnp
cmp
jo
push
dec
xor
dec
je
pop
cld
sub
dec
int
sub
out
dec
inc
mov
inc
jae
lea
inc
rol
mov
mov
rorl
les
add
inc
add
lea
push
add
or
shrb
fbld
pop
mov
mov
pushf
inc
dec
mov
fnstsw
fimuls
test
xor
sub
nop
xor
dec
insl
xchg
xchg
mov
xlat
mov
adc
sbb
adcl
xchg
pop
int
in
loopne
cmp
or
jle
leave
lea
aam
or
cmp
sbb
outsb
adc
or
adc
lea
inc
out
xor
pop
push
pop
pop
jg
jns
xchg
mov
xor
sti
jmp
test
pop
test
je
adc
sbb
lahf
push
cwtl
popa
rolb
cmpsb
mov
shll
xor
cmp
jg
dec
add
es
repz
xchg
imul
cmpsb
sti
xor
sbb
les
gs
imul
sti
cmp
outsb
cmp
or
subb
punpckhdq
pop
in
or
imul
xchg
test
pop
insl
popa
xchg
lcall
jl
xchg
xor
mov
pcmpgtb
rorb
push
xor
ja
scas
cmpsl
cmp
push
bound
fwait
sub
push
xlat
pop
mulb
imul
inc
push
dec
pop
push
imul
sbb
cs
rorl
or
lods
or
js
dec
cmp
mov
mov
cmp
push
mov
ficomps
pop
pop
jge
add
adc
jo
aas
push
sbb
gs
push
lods
push
or
cld
pushf
adc
iret
jnp
in
mov
lods
movsb
pop
cmp
rcl
inc
lret
cld
scas
rol
sahf
dec
jno
mov
fwait
xor
sbb
add
adc
jl
xor
or
fwait
out
and
mov
xchg
out
cmovb
add
sbb
mov
dec
mov
mov
pop
mov
and
add
out
mov
mov
xor
inc
std
pop
sbb
rolb
push
pop
inc
mov
sti
adc
adc
aaa
fadds
bound
call
push
std
or
movsl
push
sub
loop
outsl
int3
imul
pop
pushl
cli
xlat
into
add
stos
push
test
or
push
cmc
test
scas
gs
rcr
arpl
ftst
leave
mov
and
or
faddl
xchg
cs
roll
sbb
push
pop
adc
test
jge
push
cmpsl
lahf
pop
fwait
or
dec
sub
xchg
xor
xor
sub
js
sbb
or
xlat
rclb
ret
inc
insl
sarb
push
roll
pop
loope
mov
or
cwtl
dec
pop
or
push
sarb
lahf
stos
aaa
pop
or
mov
jbe
mov
add
xchg
jecxz
xchg
and
nop
jnp
push
mov
js
mov
out
pop
add
sbb
lods
rorb
shlb
mov
dec
and
shr
and
ret
pop
mov
xchg
outsl
mov
fcmovnb
aad
sahf
push
xchg
dec
push
je
and
insb
mov
mov
cmc
fwait
or
hlt
mov
sbbb
int
test
jne
xchg
xor
addl
test
int
sub
out
cmp
cmp
or
and
mov
jnp
sbb
and
mov
lea
mov
outsl
pushf
sbb
dec
and
sti
out
mov
loopne
cmpsb
and
loopne
jp
fimuls
pop
lea
les
push
std
jecxz
xchg
jl
jno
int
dec
xlat
pop
in
xorl
push
or
xchg
cmc
cmp
dec
addr16
test
dec
xor
jns
js
jecxz
jg
inc
les
inc
mov
mov
gs
cmp
jae
aad
movsl
in
sti
adc
cmp
push
sub
pop
inc
xchg
pop
mov
cld
jns
scas
add
cmp
rcll
std
sbb
or
cmpsl
fucomi
fcoml
cmp
or
test
push
adc
lods
sti
mov
push
ja
lods
roll
xor
push
lret
mov
arpl
imulb
and
sub
popf
sbb
mov
lea
sbb
or
into
mov
jg
dec
inc
mov
xor
jne
and
scas
mov
jnp
jle
mov
cmp
fsubrl
push
rcr
sub
scas
lea
cmp
inc
jns
scas
outsl
test
mov
and
lock
pop
mov
popa
or
push
adc
fcmovnbe
call
inc
arpl
in
add
js
inc
mov
add
fisttpl
jge
fs
or
mov
xchg
or
sub
movsb
or
mov
orb
movsl
or
adc
lret
and
cmpsl
jbe
lods
push
dec
or
pop
popa
into
cmp
and
rorl
cld
cltd
xlat
push
cmp
loopne
add
lcall
mov
lods
cmpl
push
lahf
push
xchg
scas
inc
loop
js
add
adc
add
cmpsl
dec
xchg
jecxz
das
sbb
pop
stos
push
mov
mov
decl
jne
js
inc
jne
pop
pop
sbb
and
imul
stos
xchg
sub
xchg
push
mov
call
pop
test
add
or
pushf
lcall
scas
and
xor
cmp
mov
cli
fdivr
rorb
pop
mov
mov
lret
js
lcall
gs
ds
mov
cmp
arpl
lods
inc
add
fwait
jbe
in
rcll
scas
lahf
jns
std
and
sub
fstps
insl
push
xor
inc
mov
repz
rcr
sarl
insl
adc
mov
jno
mov
dec
or
sbb
ret
aam
cmp
xchg
push
dec
push
jle
pop
or
rcll
lcall
inc
pop
mov
mov
mov
mov
adc
cmpsb
xchg
imulb
jns
xchg
mov
movsl
lods
lods
mov
mov
mov
or
cmp
mov
mov
subb
in
popf
int
aas
adc
data16
push
mov
cld
mov
jmp
pop
lret
bound
add
xchg
inc
stc
outsb
lods
sti
sbb
out
and
bound
jl
cli
das
test
cmp
mov
mov
scas
fwait
cmp
fistpll
fwait
pop
sbb
xlat
jnp
push
jp
mov
jns
inc
jnp
sbb
int
push
test
xor
mov
scas
lock
pop
mov
xor
mov
mov
cli
inc
add
pop
pop
sub
mov
sub
test
pop
test
je
dec
insb
icebp
enter
cmp
test
jbe
fmuls
push
push
out
sti
decl
int
jp
pop
adc
dec
adc
push
rorl
mov
mov
and
mov
js
sbb
jne
sbb
lods
mov
mov
or
sbb
push
push
fwait
gs
int
loopne
lret
cmp
mov
rcll
mov
sub
and
push
sub
cld
popa
dec
xchg
inc
dec
lcall
push
mov
sbb
adc
movsb
dec
adc
inc
rcll
int3
or
addr16
mov
scas
cmp
xchg
shrl
mov
ret
xchg
sub
mov
sbb
push
mov
les
outsl
fsts
mov
pop
jecxz
rolb
ret
int
mov
mov
cwtl
popa
pop
sti
ds
and
xchg
incl
sub
mov
imul
xor
aaa
inc
outsl
dec
int
dec
jl
insl
cltd
rcrl
das
and
imul
cmp
cmpsl
push
je
int
scas
xor
jge
hlt
fwait
mov
testl
jnp
fldenv
jns
pop
js
lds
sub
arpl
dec
test
cmp
aad
cwtl
bound
mov
ret
inc
pop
and
mov
cwtl
adc
sti
pop
mov
stc
jbe
adc
ficoml
cmc
mov
sarb
mov
nop
jnp
ret
mov
shll
daa
add
push
push
mov
dec
imul
popa
push
test
add
dec
call
inc
add
mov
cltd
mov
sti
shrl
mov
dec
ds
push
cmp
aam
xchg
dec
sbb
mov
ficoml
xchg
mov
jns
push
fadds
addb
dec
ds
paddusb
mov
pushf
les
mov
cmc
inc
int
ret
jge
gs
inc
cmp
lahf
cmpsb
rolb
int
push
jae
out
mov
pop
cmp
inc
cmpsb
or
dec
dec
nop
adc
dec
lock
push
inc
cmp
sbb
jge
insl
ret
push
arpl
lret
pop
out
lds
in
push
fdivrs
loopne
loop
addr16
ds
push
ja
lods
fcoms
adc
fisubrs
mov
pop
decb
or
out
mov
jb
push
in
dec
sub
sbb
dec
sar
pop
xor
rorb
test
push
jns
push
ljmp
lea
push
in
lds
stos
test
pop
xchg
mov
or
mov
call
sbb
jge
js
mov
arpl
sbbl
jnp
pop
or
cwtl
push
ret
js
mov
xchg
cmp
lds
jns
cmp
mov
pushf
fistpll
push
jno
insl
xorl
jnp
adc
inc
sub
mov
or
lea
cmpsl
mov
mov
pop
orl
aas
inc
pop
mov
cld
mov
stos
cmp
push
jp
test
inc
mov
and
andl
lods
aas
lods
subb
sbb
dec
jge
pop
movups
push
or
jecxz
jnp
scas
and
dec
sti
mov
inc
test
imul
std
mov
jbe
sbb
rcrb
jbe
scas
enter
or
in
stos
xchg
push
ret
mov
xor
cmpsb
cmpsb
xchg
mov
or
mov
push
pop
or
sbb
fidivrl
pop
and
pop
pop
aad
jge
test
sbb
dec
cmpsb
sbbl
dec
cmp
jo
cltd
sub
push
addr16
inc
test
mov
out
sub
jp
mov
popa
mov
push
inc
lret
sbb
addr16
mov
lahf
mov
iret
scas
out
mov
jle
enter
jns
aas
push
bound
cmp
in
xchg
jl
repz
xlat
xchg
mov
lret
cmpsb
mov
into
ljmp
cmp
les
add
mov
outsb
in
lcall
pop
xchg
adc
ret
das
or
lret
push
int3
aas
stos
or
adc
add
dec
fldenv
push
cmp
std
xchg
mov
out
sti
pusha
hlt
add
ret
addl
fdivl
es
adc
dec
jne
lods
out
mov
or
mov
gs
pop
ja
mov
push
pop
adc
dec
and
pop
inc
or
rcrl
cmp
jmp
sub
push
imul
call
cmp
std
mov
mov
xor
nop
and
arpl
push
lods
repz
xchg
into
cmp
or
xlat
sbb
fwait
icebp
arpl
test
push
sub
pop
ds
lods
sti
cltd
decl
clc
lds
sti
imul
movsl
xchg
inc
mov
mov
jnp
rorb
lods
js
add
sarb
test
adc
imul
push
mov
pushf
test
shr
sbb
aam
insl
adc
cmp
inc
mov
lret
xchg
xor
pop
dec
sub
or
int3
sti
jp,pt
scas
outsl
lret
in
jnp
mov
add
jb
dec
mov
cmp
or
sbb
mov
cs
sbb
mov
jnp
mov
jmp
lcall
aas
sahf
mov
sarl
test
mov
cmc
ffreep
add
mov
lret
mov
push
adc
inc
mov
fmuls
jb
add
and
push
mov
xor
int
roll
mov
mov
imul
cmpb
test
xor
dec
cs
pop
push
cmp
or
cld
in
ss
pop
repz
fsubl
pop
cmp
stc
clc
push
rcll
pop
int3
jb
sbb
pop
js
xchg
inc
mov
jne
ret
arpl
mov
xchg
int
inc
xchg
push
xor
or
pop
in
pop
fldl
add
adc
enter
aam
mov
dec
xchg
std
cmp
mov
mov
lea
clc
xor
sub
les
push
fisttpll
adc
mov
aaa
lret
ret
jae
idiv
pop
popl
cmpb
jge
andb
and
popf
aaa
ficomps
mov
fs
dec
test
adc
or
mov
xchg
jae
fwait
lret
loope
adc
mov
in
rcr
mov
xor
lea
outsl
inc
popf
or
or
dec
and
cmpsl
adc
sub
sub
and
and
sbb
in
jae
pop
repz
or
fildl
cmp
or
ja
mov
or
int
aas
sbb
xchg
dec
in
fdivl
adc
pop
sbb
imul
les
mov
mov
sub
dec
cmpsl
clc
push
xchg
adc
push
sbb
inc
sti
mov
dec
mov
push
sub
ss
xchg
xchg
jnp
shlb
addr16
pusha
mov
pop
mov
outsl
inc
outsl
gs
lds
or
enter
dec
call
cld
adc
sbb
sbb
or
add
inc
push
mov
jno
iret
aaa
aad
dec
fs
lock
add
jb
iret
xchg
pop
out
jmp
mov
daa
xchg
push
jle
add
pop
jl
inc
insl
out
jbe
cmpsb
inc
ljmp
movsl
call
ljmp
insb
and
inc
scas
xor
push
lret
sub
xchg
pop
dec
dec
jno
int3
pop
xchg
cld
xchg
adc
fwait
adc
imul
out
mov
dec
lahf
adc
das
in
movsl
or
xor
mov
cmp
lahf
sub
cmp
ret
xchg
mov
add
lret
sbb
jno
mov
push
out
cmp
adc
fs
pop
mov
pop
test
and
push
sub
mov
lods
fdivr
mov
cmp
xchg
push
leave
gs
push
sti
add
add
jle
test
mov
into
daa
jnp
mov
inc
push
cwtl
int
pop
jns
fstl
cld
mov
push
cmpsb
int
or
stc
into
test
rorb
jae
rcll
insl
dec
add
in
arpl
mov
aas
adcl
mov
sti
clc
mov
or
cld
cmc
sbb
mov
push
mov
stos
xchg
mov
mov
cmpl
in
push
mov
push
add
xchg
xsaveopt
inc
push
xchg
mov
popf
scas
lea
sti
arpl
lock
add
iret
dec
mov
pop
lock
jge
and
push
scas
cmp
jg
inc
lea
out
xor
lcall
call
sub
dec
jnp
dec
ret
pushf
dec
sub
mov
sbbb
test
fisubrl
sbb
pop
push
sti
mov
dec
cmp
sbb
inc
push
jl
loopne
inc
sub
mov
or
jae
inc
test
stos
fs
pop
xchg
dec
sti
inc
xchg
pop
xchg
push
inc
add
lahf
jnp
cmp
dec
pop
sub
lahf
loope
aam
scas
dec
sub
jne
daa
dec
sti
or
leave
jne
stc
xchg
dec
enter
movsl
mov
das
mov
cmp
mov
mov
pushf
mov
jmp
dec
or
enter
popa
or
cmp
adc
bound
mov
out
ljmp
out
adc
addr16
xor
xchg
jg
loop
testb
mov
std
test
repnz
push
lret
pop
ret
sti
or
xchg
cmc
mov
dec
and
push
cmpsb
xchg
dec
dec
jl
xchg
insl
xchg
and
orl
jp
mov
sahf
imul
lcall
mov
pop
test
lret
fcoml
jnp
xchg
adc
sbb
and
call
add
mov
sub
jecxz
sti
les
outsb
cmp
roll
mov
pop
into
xor
fmul
mov
cmp
leave
cmpsb
repnz
test
mov
pop
std
idivl
ret
xchg
mov
ss
aad
int
jnp
or
faddl
mov
jno
lahf
adc
repz
fidivl
inc
bound
mov
iret
sti
cmp
cmp
jp
dec
add
mov
pop
call
dec
sub
vmwrite
lods
imul
pop
xorl
emms
push
aas
lock
inc
cwtl
lods
xchg
xchg
sub
mov
pop
out
xchg
push
push
fcom
les
mov
mov
scas
dec
mov
sub
mov
mov
ret
sti
into
mov
mov
sti
or
out
push
fdivr
sbb
call
pop
and
or
test
inc
mov
pop
rorl
push
repz
in
ror
out
xchg
xor
mov
push
dec
cli
add
rcrl
jb
jb
pop
mov
adc
cmp
xor
inc
adc
jns
insb
lcall
xor
pop
adc
cmc
fs
mov
mov
stos
insl
inc
adc
or
jns
in
movsl
movsb
push
dec
dec
cmpsl
jnp
movsl
push
lods
dec
test
inc
fucomip
xor
outsl
fcompl
and
cmp
xchg
mov
add
mov
es
add
mov
roll
in
xchg
fs
xorl
sbb
icebp
xor
cmp
iret
jg
sarb
scas
in
push
cld
dec
cmc
push
cmc
dec
int
enter
call
inc
mov
bound
pop
dec
out
jg
push
or
push
sti
ja
dec
mov
int
sti
inc
jae
pop
cmp
popf
out
idivl
push
cmp
pop
inc
test
in
add
mov
es
sbb
fnstsw
les
clc
gs
in
pop
je
out
cli
test
mov
aad
sar
lods
int3
jmp
push
pop
pop
mov
push
divl
lods
outsl
xchg
in
mov
mov
faddl
mov
clc
cmp
jmp
cmp
sti
ljmp
xchg
les
movsl
fstps
jle
inc
ret
pop
lcall
andb
mov
inc
push
xchg
in
mov
bnd
dec
shrl
in
iret
add
push
push
pop
lods
mov
jns
mov
data16
pop
mov
fdivl
sbb
mov
mov
cmp
into
aas
pop
mov
ljmp
mov
xchg
push
add
mov
pop
sub
push
inc
aad
add
adc
adc
mov
add
fcoms
repz
xchg
fs
push
xchg
in
ds
sub
addb
stc
outsb
int
and
sub
xchg
inc
jnp
mov
inc
dec
sub
cmp
inc
sbb
shlb
add
test
cmp
push
jae
cltd
insl
mov
imul
jge
imul
xor
js
mov
add
xor
faddl
loop
sbb
pop
xchg
pop
mov
stc
stos
test
mov
stos
dec
add
dec
add
in
lret
movb
cmp
jle
das
push
sub
popf
adc
adc
push
push
pop
scas
movb
cmp
inc
bound
out
mov
jb
jbe
sub
call
add
test
or
mov
loop
or
lds
xchg
gs
sub
cmp
add
ror
xchg
push
inc
push
iret
pop
insl
loop
lods
jb
dec
lea
sub
scas
or
dec
mov
add
inc
push
in
and
js
out
push
call
push
sbb
xchg
xor
sti
mov
ficomps
out
dec
or
sahf
xchg
pop
scas
jno
xchg
rorl
fs
dec
pop
jle
repz
cwtl
out
push
jnp
rcl
jl
fwait
xchg
jmp
cmp
mov
insl
lahf
in
imul
sub
sbb
or
sub
popf
jp
add
pop
mov
int
push
xor
pop
mov
push
std
fldt
clc
sti
sub
pop
aad
mov
jp
mov
xchg
or
cli
xchg
shrb
test
sbb
movsl
mov
adc
test
push
push
sbb
testb
aas
repz
in
fmull
sub
inc
mov
inc
mov
xchg
xchg
sub
inc
aas
ds
or
pop
mov
mov
sti
xchg
pushf
test
int3
push
movsb
mov
sub
int3
sarb
enter
rcll
dec
leave
xor
mov
dec
in
xchg
mov
xchg
mov
ret
repnz
jecxz
adc
push
jmp
loopne
mov
inc
jl
gs
cmp
xor
or
jl
xchg
dec
hlt
jge
push
inc
cmp
add
lea
and
cmp
scas
lcall
pop
stos
push
fucomi
or
cmp
mov
dec
jo
and
sbb
lds
push
cwtl
into
xchg
dec
stos
imul
cmp
insl
mov
xor
push
outsl
sub
shll
sbb
mov
popa
pop
out
jbe
out
push
sbb
inc
and
push
lods
lea
lods
lds
mov
xor
aaa
mov
movsb
cmp
cmp
dec
cltd
add
inc
mov
daa
jb
mov
xchg
add
lds
scas
into
std
es
dec
insl
sub
mov
adc
sti
mov
rcrl
lcall
into
add
std
and
add
test
xchg
mov
je
sbb
jnp
dec
xor
adc
push
pushf
stc
out
mov
popa
hlt
jmp
adc
xchg
sahf
inc
add
outsb
xchg
dec
jecxz
jp
mov
cmp
sub
inc
lcall
inc
cli
jno
push
lcall
enter
imul
fwait
int
adc
cmp
push
jle
add
js
jnp
xchg
scas
cmpl
cmp
clc
dec
mov
sti
je
sahf
xor
rorl
sub
adc
adc
cmc
andb
cltd
lret
xchg
or
mov
mov
daa
hlt
or
jg
ss
pop
jle
cmp
in
or
aam
mov
or
aad
add
out
lods
add
adc
out
jl
pushf
sti
adc
std
mov
xchg
mov
dec
ja
xchg
cwtd
mov
stc
and
fisttpll
sub
sbb
subl
sub
in
push
mov
mov
hlt
mov
stos
imul
imul
inc
xor
ret
cmp
xor
pop
mov
out
jl
mov
scas
mov
dec
lcall
idiv
bts
sub
iret
or
xor
lcall
clc
push
xor
and
push
push
gs
mov
or
fistl
lea
or
add
mov
push
ja
cmp
inc
iret
xchg
mov
dec
stos
sub
movsl
movsb
jno
icebp
int
jb
mov
fiaddl
mov
std
xor
pop
je
or
inc
dec
data16
sbb
jge
leave
insb
cld
jmp
stos
in
test
jle
add
pusha
cltd
aam
adc
mov
sbb
nop
push
lea
xchg
push
jno
push
jle
lahf
sbb
or
pop
lahf
cltd
test
lods
inc
jg
push
das
ja,pt
inc
jb
popf
lods
movsb
bound
movsl
jnp
int
adc
jl
outsb
cmc
out
jbe
sbb
loopne
in
mov
push
jge
out
push
and
cmp
cmp
adc
mov
mov
sbb
fsubrs
push
adc
mov
dec
inc
jns
jg
sub
cmc
jnp
mov
cmpl
aam
cli
cmp
ficomps
push
mov
adc
in
mov
cmc
add
cltd
mov
movsl
jl
lahf
and
test
fwait
sbb
mov
insl
dec
dec
pop
sub
in
inc
inc
pop
adc
mov
aad
daa
inc
ret
daa
cltd
popf
xor
nop
bound
sbb
pop
pop
xchg
cmp
sub
mov
cmp
mov
dec
jno
sbb
inc
mov
in
lea
lods
pop
jecxz
or
push
jno
cmp
pop
mov
imul
sbb
leave
jns
jmp
push
sbb
je
mov
push
lods
lea
adc
cmp
sub
rorb
dec
and
dec
adc
pop
or
dec
into
inc
ret
lcall
aad
je
test
les
lahf
outsb
push
or
jnp
pop
fimull
jl
insl
cmp
jp
mov
lret
mov
push
pop
pop
and
adc
rclb
mov
imul
sub
sahf
call
xchg
lock
aaa
jns
pop
div
mov
pushf
sub
dec
jg
lds
cld
movsl
sar
inc
add
mov
rolb
lods
sbb
xchg
push
cmpb
flds
mov
mov
fs
mov
outsb
cmpsl
sti
push
shlb
and
push
sub
pop
fbstp
js
in
cmp
outsb
mov
xor
xor
out
ficoms
rclb
incl
jnp
jnp
scas
sub
inc
popf
add
test
inc
int
inc
shlb
popf
jge
popf
jge
loope
add
into
xchg
scas
pop
mov
cmc
xchg
dec
dec
mov
cmp
adc
jge
iret
pusha
mov
inc
fsts
daa
sti
sub
jl
shl
cmp
lods
add
es
fcmovnu
sbb
insl
fstpt
cmp
inc
jnp
loope
mov
push
rol
mov
pop
mov
stos
jnp
sub
cld
popa
lds
mov
jns
insb
pushf
mov
cmp
xor
sbb
xchg
fisttps
in
hlt
lret
and
sarb
add
xchg
mov
mov
aam
ficomps
test
mov
jns
popa
out
dec
das
loop
sub
outsb
mov
pushf
inc
mov
mov
aad
xchg
int3
jnp
push
dec
and
fistps
mov
imul
xor
stos
add
pop
dec
mov
nop
mov
imul
scas
and
mov
push
inc
jl
into
insb
xchg
repnz
add
loopne
cmpl
scas
mov
in
xchg
sub
jae
movsl
dec
int
clc
push
mov
fldt
into
push
iret
rclb
mov
fstpl
mov
adc
cmp
pop
or
ja
es
lods
cmpl
int
xor
cmpsb
pop
sarl
pop
xchg
and
out
add
notb
jo
xchg
popa
pop
pop
sbb
fmulp
pop
bound
sbb
stos
adc
fbstp
mov
clc
inc
fwait
xchg
int
mov
inc
cmp
fdivr
xchg
jmp
add
lret
jge
xchg
rcll
xchg
pop
cmp
gs
cmp
sti
fs
int
outsb
mov
mov
mov
and
jno
mov
int3
mov
and
sbb
sbb
jge
or
add
xchg
pop
mov
loopne
pushf
mov
push
mov
add
fwait
pushf
mov
sub
mov
js
in
lea
cmp
ret
add
popf
inc
sbb
in
jns
gs
cltd
ljmp
andl
fistps
rcrl
rclb
add
outsl
out
inc
mov
lret
inc
sbb
mov
ret
cmpsl
mov
outsb
mov
jmp
test
dec
test
int3
push
repz
or
outsb
mov
addb
adc
jl
pop
dec
inc
mov
or
sbb
insl
cmpsb
movb
shlb
and
inc
push
popf
sti
aad
fsubs
xorl
jge
aam
and
pushf
sti
xlat
xchg
inc
and
or
add
rcrb
jnp
shlb
jle
ret
ja
mov
ret
or
stc
repz
ds
or
inc
pop
pushf
fnstenv
xor
ret
add
in
cs
ret
test
ja
dec
std
mov
rolb
jl
adcl
std
mov
ret
xchg
mov
cmp
cmpsl
dec
aaa
adc
divl
dec
mov
and
mov
jg
addl
into
stc
xchg
loope
int3
sbb
sub
in
mov
mov
and
xor
pop
push
mov
adc
sahf
lods
add
jnp
mulb
adc
or
xchg
inc
jmp
popf
mov
dec
jge
add
jne
inc
call
leave
and
pop
adc
mov
mov
or
push
mov
ljmp
sub
adc
test
xorl
jns
cwtl
inc
adc
jg
adc
pop
cli
inc
roll
pop
stos
test
push
mov
mov
pusha
data16
scas
sti
jns
std
fwait
mov
adc
jo
inc
sbb
sub
mov
xchg
or
shrb
out
jne
sti
sar
jg
pop
fisttpll
addr16
add
call
inc
das
cmp
push
cmc
es
inc
sub
pop
lea
jb
cmpl
jge
je
cltd
or
xlat
mov
or
push
ljmp
sbbb
popf
arpl
push
mov
cmp
jge
pusha
and
or
std
cmp
sti
fisttps
and
pop
mov
dec
out
ljmp
mov
xor
or
inc
mov
test
mov
cmpsl
inc
lods
test
push
es
clc
lea
in
inc
daa
mov
push
orl
iret
cmpsb
xor
fstpt
or
inc
fstpl
pop
jo
nop
test
movsb
add
or
xchg
sti
push
xor
mov
or
rorb
sbb
cld
pushf
xchg
mov
push
sbb
lret
push
sbb
mov
cmp
lea
fiadds
cmc
xchg
ds
int
jo
loopne
lahf
xchg
shll
inc
int
mov
lret
jns
lods
adcb
mov
or
lahf
inc
bound
jg
test
addr16
mov
mov
dec
adc
rorl
dec
cmc
pop
ljmp
imul
les
imul
int
cmpsl
in
dec
shrl
sbb
mov
pusha
pop
jae
or
sarb
sti
xor
jl
imul
rcll
rep
adc
pop
jb
lock
mov
jge
mov
dec
test
cmp
fldcw
pop
mov
cmp
sarl
cmpl
sahf
add
mov
sti
sbb
addl
les
inc
les
inc
cmp
je
mov
bound
jbe
push
adc
lea
cmp
outsl
mov
mov
lret
mov
sti
adc
cld
dec
inc
in
jne
inc
testb
adc
stc
or
loope
sbb
aas
lret
sbb
stc
fcoml
roll
xor
xor
mov
out
jb
cmp
scas
adc
nop
ds
or
mov
adc
push
es
lods
adc
inc
pop
in
rclb
mov
mov
mov
popa
push
cltd
or
mov
iret
loop
sahf
mov
xor
sti
pop
xchg
lea
sbb
loope
adc
pop
push
insl
inc
sar
push
dec
jge
ds
dec
sub
inc
test
imul
fldcw
mov
sub
int
mov
inc
in
adc
cmpsb
cmp
hlt
inc
or
inc
xor
or
cmp
loop
dec
pop
popf
inc
lods
in
xor
adc
ds
popf
sbb
xchg
outsb
out
das
inc
or
add
fisubl
cwtl
fdivrl
filds
dec
push
test
sarl
lcall
int
sub
orl
cs
add
xchg
in
or
jl
outsb
jg
add
pop
mov
xor
daa
fwait
aam
xchg
cmp
mov
jecxz
js
add
aam
xchg
test
xor
pop
mov
pusha
adc
ds
test
pop
cmp
pusha
pop
shrl
test
inc
das
fidivs
out
jg
shll
xor
dec
movsl
js
dec
push
call
mov
dec
xchg
lcall
ljmp
push
cmpb
mov
dec
pop
bound
adc
cmp
jl
adc
dec
pop
adc
scas
add
add
ljmp
das
sbb
rorl
cld
outsl
mov
jo
lds
in
add
in
shr
jnp
mov
leave
fucomip
cmpsl
mov
mov
push
dec
dec
inc
popf
xor
inc
lret
pop
pop
mov
mov
xor
lret
inc
shrl
xchg
or
ljmp
mov
jns
iret
shrl
lods
sbb
decl
mov
jecxz
jl
mov
xor
push
push
pop
pop
mov
dec
das
cmp
mov
and
mov
push
mov
cs
lock
or
stos
rcrb
dec
call
jmp
add
dec
scas
bound
shrb
jmp
mov
aam
out
mov
jns
data16
fidivl
add
push
insb
cmc
xchg
addr16
cmpsl
pop
rorb
sbb
cmp
push
push
dec
lods
xchg
xchg
mov
add
fmuls
insb
cmp
aaa
or
mov
pop
pop
test
push
das
popa
xchg
jl
dec
inc
cwtl
mov
outsl
daa
sub
divl
push
int
sti
mov
inc
incl
dec
inc
js
adc
adc
xrstor
pop
inc
pushf
and
add
ret
cmp
pop
dec
pusha
jecxz
dec
mov
push
dec
adc
cwtl
cmp
mov
inc
loope
jge
xchg
add
and
negb
mov
cmp
add
cmp
inc
jle
jne
shlb
cmp
mov
push
adc
cwtl
cmpsb
sbb
mov
xor
mov
cmp
lret
popf
popf
sbb
push
add
test
push
fstpt
xchg
pop
dec
cs
adc
cmp
inc
lock
sbb
fsubrl
and
mov
pop
shll
and
outsl
aas
push
mov
inc
sbbl
std
in
sub
pop
ret
jp
mov
dec
ja
in
add
lds
aad
xchg
hlt
insb
sbb
pop
test
lea
xchg
lods
pop
jbe
shll
dec
aad
add
push
adc
xchg
sub
popf
int
sub
dec
mov
mov
jle
lock
cmp
jnp
fdivrs
out
mov
cmp
xchg
movsb
sub
add
fdivrs
mov
shll
js
insb
repnz
push
xor
xor
xchg
xchg
sub
lret
push
or
push
sub
dec
push
mov
fsubrs
sub
ret
adc
outsb
sbb
push
adc
cmp
shlb
mov
shlb
dec
je
add
mov
dec
pop
pop
inc
xorb
jmp
or
stos
adc
add
fs
leave
pop
cmp
lock
dec
cmpsb
int
cmp
adc
gs
adc
or
cltd
sti
lds
push
das
jbe
xchg
mov
dec
fst
hlt
sbb
sub
xchg
sahf
lods
push
addr16
dec
mov
mov
aad
pop
dec
add
xchg
sbb
sbb
or
nop
inc
cmp
xor
xor
popf
inc
mov
testl
mov
das
jp
mov
pop
push
aas
outsb
jg
jl
cld
cmp
in
push
mov
xchg
push
sti
cmpsb
and
icebp
fs
dec
cltd
aas
ret
insb
add
cmp
scas
out
lods
iret
xor
push
mov
mov
xchg
lret
jae
cmpsl
cmc
in
int
cmp
test
jl
repz
mov
or
into
in
js
frstor
jne
jno
mov
sub
fcmovu
out
add
mov
sub
sti
cmpsb
pusha
mov
mov
push
xchg
cmp
fsubl
mov
mov
mov
rcll
sbb
enter
rcr
cld
jmp
push
ljmp
stos
xchg
fisttpll
and
lds
roll
fnstenv
jecxz
shrb
fwait
cs
push
loope
jp
jge
aad
mov
lods
sbbl
cmpsb
pop
rcrb
int
sbb
jns
add
stos
or
mov
adc
dec
mov
icebp
mov
in
xchg
and
insl
fisttpll
jns
orb
cmp
pop
ficoms
popf
pop
flds
dec
or
inc
pop
or
outsl
xchg
jns
pushf
ja
add
push
and
jmp
aam
fldt
push
mov
loop
push
jae
mov
pop
shl
pop
inc
sti
sti
fmull
mov
push
adc
pusha
add
mov
pop
in
jmp
bound
push
in
push
cmp
or
pop
test
mov
pop
add
sbb
rolb
add
lods
and
pop
lods
mov
fdivs
and
bound
and
jnp
jge
or
rcr
nop
push
inc
pushf
xchg
sti
cmp
shlb
jb
fiadds
cld
sbbb
inc
bound
sub
jno
and
cmp
call
gs
sarl
fcomp
repz
int
mov
xchg
pop
sbb
lahf
or
adc
lods
push
xchg
mov
inc
out
sti
xor
xchg
inc
mov
mov
dec
movsb
inc
cmpsl
sbb
rolb
xor
dec
cmc
mov
outsl
loop
jmp
jge,pn
icebp
fimull
rorl
mov
add
daa
and
pop
scas
add
push
ljmp
orl
popf
or
test
cmp
in
xor
mov
into
xchg
add
inc
mov
sub
sub
test
fwait
int
sub
imul
in
mov
adc
ret
xor
or
mov
sbb
jo
mov
inc
lods
mov
push
jb
xor
xchg
xchg
int3
mov
sarl
push
sub
xor
mov
push
inc
sbb
test
push
orb
pop
jo
ds
inc
insl
adc
pop
pop
arpl
xchg
pop
xchg
dec
jno
add
pop
and
std
movsb
lcall
inc
cmp
jl
mov
mov
popa
notb
and
xchg
pop
push
sahf
movsb
lods
adc
mov
xor
cmp
dec
shl
mov
rorb
xor
cmp
in
orb
sbb
stc
xchg
sbb
pop
mov
mov
sub
cld
cld
add
jge
sub
mov
cmp
inc
icebp
jae
xor
int
std
sbb
ror
pop
in
xor
add
inc
sbbl
nop
dec
or
rcll
stc
cmp
in
incl
add
cmp
rolb
scas
shld
stos
xor
ficompl
ficomps
fistpl
aam
sub
orl
cltd
jno
fdivrl
jmp
ficomps
das
lds
cmp
dec
cld
inc
out
mov
pop
or
mov
lea
fcompl
cmp
scas
mov
int
or
xchg
jnp
jg
and
int3
push
sarl
sti
xchg
add
aas
push
push
mov
outsb
jecxz
in
imul
mov
inc
into
cmp
add
inc
addr16
jae
cmp
roll
pop
int
sahf
jno
cltd
pop
rcrb
or
iret
sub
cmp
orl
sub
cmc
or
cmc
or
cld
pop
lret
lock
into
stos
stos
mov
push
ja
and
in
inc
adc
pop
ss
mov
sub
mov
je
ret
sbbl
in
or
sbb
sbb
pusha
int
mov
aas
fistl
pop
sub
ja
xchg
cld
test
gs
mov
mov
push
adc
jnp
rclb
cmp
fs
mov
or
bound
outsb
add
fdivs
cmp
in
and
lock
jmp
insl
jp
push
mov
dec
cmp
push
lahf
jo
sub
xor
jo
xchg
movsl
jge
dec
cmp
or
dec
sarb
and
jge
jp
mov
mov
fwait
push
cmp
ja
mov
xchg
clc
jnp
xor
test
pop
testl
mov
dec
adc
push
add
fnstsw
sti
stc
jno
inc
adc
enter
addr16
xchg
mov
int3
pop
push
dec
mov
push
push
mov
mov
mov
nop
add
mov
mov
jge
cli
or
addr16
out
ficomps
or
dec
add
ja
popf
cmc
inc
lea
mov
rclb
int
push
adc
add
adc
add
pop
pop
loopne
cmp
xor
rcll
mov
or
movsl
arpl
mov
mov
test
lea
in
cmpb
mov
fsts
imul
push
cmp
in
add
lret
in
aam
push
pop
cmp
lcall
sbbl
push
mov
dec
loope
adc
add
xchg
mov
xchg
cmp
cmpsl
xchg
sub
mov
adc
test
btr
test
inc
test
fstpl
ss
lret
push
lods
shlb
or
cmpsl
lahf
push
cli
push
mov
push
cmp
add
aad
pop
mov
sbb
orb
mov
add
pushf
lret
xor
call
popl
or
ss
movsb
add
jnp
lret
and
imul
lds
testl
cmpb
bound
pop
rorb
test
test
lds
inc
cltd
mov
decb
mov
into
fcom
stos
cmp
xor
lret
xchg
mov
mov
in
jg,pt
addr16
adc
add
push
and
rcll
add
inc
pop
rcrb
lahf
xlat
xchg
out
or
scas
jmp
xchg
repz
or
fisttps
jns
push
sti
lret
clc
push
cmp
ss
enter
adc
mov
jle
pop
es
sub
pop
stos
data16
arpl
shlb
add
xchg
sbb
cs
pushf
in
fstps
orl
mov
cld
jg
popl
pop
in
sbb
push
scas
sub
leave
sahf
mov
sub
lods
push
imul
xor
sbb
int
xchg
mov
xor
inc
mov
xor
dec
xchg
dec
and
into
inc
or
inc
cmp
into
push
enter
ljmp
jmp
iretw
xchg
and
fisttpll
mov
jb
xlat
inc
rorl
lcall
jg
jnp
xchg
rorl
pushf
icebp
cmp
or
inc
cmp
inc
or
stc
jne
enter
mov
in
adc
sub
mov
dec
stos
or
and
xchg
mov
data16
lahf
add
mov
imul
clc
ss
adcl
movsl
lcall
xor
sub
nop
leave
dec
inc
inc
xchg
insl
mov
pop
test
sub
inc
dec
mov
insb
cwtl
cmp
inc
leave
xchg
cltd
inc
aad
xchg
cmpsl
jno
inc
out
mov
jnp
mov
pop
cwtl
sbb
inc
cs
push
aaa
jne
cmp
leave
ja
adc
lcall
test
adc
pop
in
aaa
cmp
lea
push
cmp
inc
je
fcompl
push
adc
sub
out
mov
inc
add
lahf
mov
enter
pop
mov
jno
out
stc
lds
cmp
loope
mov
test
jb
sbbb
pop
and
mov
push
roll
loope
int3
in
fisttpl
push
rclb
es
inc
push
icebp
adc
jecxz
jmp
and
mov
inc
xor
pop
stos
les
out
sbb
jae
push
jge
xor
lods
xchg
jo
dec
ja
jno
repnz
insw
cmp
mov
ds
test
mov
scas
arpl
add
sbb
sti
movsl
movsl
push
sbb
sub
mov
dec
mov
sti
dec
fwait
mov
mov
push
lds
les
andl
stos
sti
add
jmp
push
push
and
cld
mov
push
xchg
push
dec
in
test
pop
fisttpll
inc
or
loope
cmp
mov
cld
jno
shlb
mov
xchg
stos
aaa
ss
jl
cmpb
int
dec
notl
inc
dec
push
mov
hlt
push
fiaddl
ja
xor
sbb
jae
jbe
sub
lock
stos
pop
cmp
jnp
sub
push
cld
adc
stc
not
mov
sub
fs
cmpsl
xlat
jae
daa
xor
imul
mov
sahf
mov
inc
jge
adc
outsb
adc
mov
iret
stc
cli
pop
ffreep
pop
add
xor
mov
or
pop
mov
mov
push
push
xlat
or
pop
mov
adc
sbb
sub
cmp
inc
test
and
mov
cmp
jb
shrb
in
inc
mov
into
and
mov
mov
pop
aas
jbe
mov
pusha
iret
fcmove
mov
cmpl
dec
mov
mov
push
mov
outsb
or
push
add
cmp
or
in
shl
aas
push
cld
push
cmpsl
adc
mov
push
or
mov
imul
xchg
sbb
aam
pop
fs
mov
dec
jl
enter
xchg
dec
cs
repz
push
lret
ret
jmp
aam
addr16
pusha
bound
nop
xor
mov
and
push
pop
loope
cmp
mov
mov
hlt
pop
xchg
xor
das
cwtl
sbb
inc
jmp
scas
outsb
insb
cmpsl
arpl
jnp
mov
inc
ficoml
mov
and
xchg
stos
int3
adc
out
test
xchg
cs
and
adc
in
sub
push
out
out
or
jle
shll
jl
popf
lahf
loop
mov
sbb
sti
mov
leave
data16
rorb
ds
and
int
cmp
sbb
and
icebp
cmp
popa
mov
mov
xor
push
ret
inc
xchg
mov
push
pop
fwait
arpl
dec
pop
mov
iret
test
cmp
insl
addr16
ret
shl
dec
cmpsb
lods
out
push
or
jl
nop
cmp
mov
inc
dec
out
fstps
pcmpgtd
lods
cmp
mov
iret
leave
cmp
mov
andb
cmp
in
shlb
adc
cmpsl
mov
mov
inc
call
movsl
xchg
pop
cmp
mov
lcall
es
mov
xchg
sbb
stos
sbbb
filds
int
lds
jl
push
dec
call
mov
xchg
xchg
cltd
sahf
je
dec
rcr
mov
or
add
xchg
mov
sbb
mov
lret
inc
rcrb
mov
scas
xchg
or
sbb
mov
mov
mov
movsb
sti
push
mov
je
das
ret
mov
sarb
in
insb
hlt
das
mov
ret
push
scas
sub
sbb
cmp
gs
test
pop
push
data16
sti
fwait
or
add
in
lret
xor
dec
push
arpl
sub
xchg
ds
mov
add
imul
xchg
mov
dec
idivl
out
stos
adc
scas
test
sti
shll
sti
addr16
sub
addr16
repnz
imul
enter
lret
cmpsl
or
mov
xchg
cmove
sti
outsl
std
mov
push
es
stos
nop
mov
lret
sub
xor
mov
ret
push
push
cli
inc
jl
mov
pop
or
xor
mov
mov
push
or
shll
out
out
jmp
notb
pop
sahf
jb
inc
cld
mov
in
movsl
test
dec
shll
pop
loopne
mov
or
sbb
std
sti
js
cld
insl
xor
pop
mov
pop
aad
andl
nop
pop
sbb
int
jge,pt
mov
mull
cld
sahf
imulb
xor
pop
mov
movsb
jge
inc
in
xchg
mov
test
cmp
sub
adc
mov
lds
inc
pop
lods
jnp
inc
jno
mov
jb
mov
testb
arpl
cld
repz
jmp
std
data16
mov
jmp
mov
pop
cmc
cmp
sbb
xlat
push
loope
repz
mov
inc
sub
jmp
add
dec
pop
outsb
cmpsb
pop
rorl
sahf
adc
lock
std
or
jge
pop
mov
jne
nop
mov
ds
out
rorl
pop
adc
int3
xchg
sti
lea
push
into
dec
jns
dec
cld
test
or
jne
push
std
notl
test
in
xlat
sbb
pop
sub
int
add
inc
ret
adc
sub
dec
dec
lods
shr
or
and
jp
gs
and
aam
xchg
xchg
pushf
mov
cmp
jae
nop
stos
cmp
pop
test
dec
push
xchg
push
xlat
pusha
out
push
rorb
lahf
shlb
xchg
repz
add
call
jmp
mov
and
pop
movsb
or
mov
cmp
mov
jnp
jmp
fstps
sahf
or
add
and
jg
xchg
xor
mov
cmp
jb
popf
clc
jge
pop
mov
inc
out
faddl
hlt
jns
pop
cmp
fcoml
popa
mov
es
dec
cld
cmc
inc
pop
sbb
or
test
daa
outsb
mov
xchg
pop
imul
mov
mov
cmpsb
stc
xchg
mov
popa
mov
movsl
inc
stos
jnp
sub
push
pop
xchg
dec
int
jg
subb
lea
mov
mov
adc
ficoml
sub
sti
lret
and
ljmp
jb
imul
sbb
enter
cwtl
push
lcall
fadds
mov
popf
movsb
cmp
lods
aam
and
lahf
lea
jge
add
jg
pop
sbb
jl
clc
mov
cmp
mov
cmp
mov
sarl
in
scas
sahf
mov
mov
frstor
int3
push
mov
mov
test
pop
stos
add
scas
aaa
mov
test
repnz
scas
dec
jne
mov
scas
or
fninit
sbb
ja
pop
pop
push
nop
jnp
aad
gs
cmp
pop
push
into
add
cmp
xor
mov
das
add
lret
or
orb
jns
pop
das
sbb
adc
xchg
clc
aaa
mov
jb
xchg
push
or
lahf
notl
cld
pop
std
daa
into
mov
test
ds
push
subl
mov
adc
jae
sbb
add
imul
sub
int
xchg
mov
outsb
push
stos
jae
pusha
std
adc
fwait
outsb
popa
jecxz
dec
dec
data16
out
in
nop
shll
das
mov
std
ret
std
and
sbb
pop
pop
dec
lahf
inc
daa
fstp
inc
out
movsb
adc
pop
sbb
xchg
sub
leave
test
mov
add
xlat
jnp
aaa
jge
mov
stc
jne
add
or
loope
xor
mov
pop
insb
jo
or
inc
cltd
mov
cmpsl
mov
aad
imul
movsb
cmp
inc
pushf
xor
in
scas
cmp
adc
insb
cmpsb
xor
cmp
jecxz
fstl
xchg
aad
jns
fs
mov
aam
pop
inc
mov
into
nopl
jnp
or
dec
movb
xor
pop
orl
inc
fstl
cmp
sbb
enter
xchg
pushl
mull
sbb
in
enter
jl
inc
push
adcl
or
and
push
mov
push
add
ljmp
lret
insb
jne
jns
jge
pop
leave
push
push
jnp
jno
sbb
repz
lods
imull
mov
shlb
jge
incb
and
adc
es
cmp
mov
jno
movsl
fsubp
mov
stos
loope
in
dec
mov
inc
and
inc
xchg
int
popl
push
push
int3
cmp
lret
gs
idiv
pop
dec
lds
repnz
in
das
cmp
dec
test
imul
pop
je
lods
lret
gs
call
cs
jne
mov
push
push
push
dec
repnz
aas
sub
sbb
ficoms
dec
icebp
and
mov
je
sub
inc
sbb
fiaddl
int
mov
cmpsl
or
aad
lods
shrb
popa
call
fnsetpm(287
inc
cmc
jl
popf
sahf
mov
xchg
or
sahf
stc
xchg
iret
inc
in
arpl
aad
mov
mov
pop
scas
mov
mov
mov
and
xchg
dec
popf
sub
adc
je
dec
pop
movsl
mov
popa
out
mov
inc
mov
leave
jecxz
mov
sub
iret
out
idiv
push
xchg
adc
jle
dec
mov
addr16
std
mov
fwait
add
xor
ljmp
jo
add
popa
pop
push
out
mov
arpl
mov
mov
ret
adc
call
jne
imul
inc
ss
jge
dec
mov
lods
sub
or
pop
gs
xor
bound
jle
scas
add
push
insb
cmc
mov
xchg
fidivrs
lea
scas
mov
mulb
das
jb
adc
dec
or
subb
xchg
lods
adc
and
das
cltd
sub
into
mov
add
add
sbb
push
into
inc
jnp
aaa
jg
fistps
ja
dec
outsb
pusha
pop
fists
loopne
xchg
out
xchg
ret
sbb
jp
das
cwtl
and
inc
cmpsl
or
push
xchg
mov
mov
xchg
add
jns
xchg
fmuls
mov
push
leave
bound
pop
push
test
mov
or
adc
mov
scas
jnp
sub
cmp
movsb
xor
arpl
xchg
pop
dec
push
lods
or
mov
dec
pop
pop
sub
ret
pushf
add
xlat
scas
mov
rorl
mov
sub
push
xchg
int
push
out
fs
mov
mov
jnp
xchg
in
fistps
sub
push
repz
aam
xor
sub
adc
in
repz
dec
insl
push
xor
in
fwait
xchg
pushf
pop
outsb
movq
xchg
je
push
fwait
or
dec
dec
fwait
adc
inc
aad
adc
pop
lcall
bound
cld
std
stos
jge
jne
mov
lahf
dec
movb
inc
insb
ret
dec
std
loop
adc
cli
jo
jne
or
data16
mov
dec
add
scas
mov
cmp
push
orb
mov
rcl
mov
in
movsl
pop
mov
or
xchg
out
pop
ja
sbb
dec
jnp
push
xor
int
dec
push
jle
ds
jge
mov
add
jb
xchg
rcll
cmp
fucomip
sbb
xchg
mov
jae
pusha
jp
push
in
push
out
adc
cmp
pop
pop
mov
scas
movsb
aas
push
pop
push
xchg
mov
xorl
adc
jmp
adc
push
dec
lcall
pop
xchg
insb
rclb
int
sti
lret
enter
sub
call
jg
aas
stos
xchg
mov
cmp
pop
aaa
xor
adcb
inc
cmp
test
add
xchg
fwait
push
pop
insb
sti
push
in
sbb
xchg
sub
dec
sub
adc
mov
cmp
int3
sti
mov
int3
movsl
ss
pushl
test
clc
pop
lock
popf
gs
dec
aas
xor
add
sbb
cmp
push
mov
pop
add
or
in
lods
pop
negb
fistl
xor
push
mov
push
or
sti
jge
aaa
push
cmp
jmp
fldcw
add
into
rclb
sbb
push
xor
gs
xorb
in
pop
outsl
mov
sbb
adc
scas
dec
inc
repz
adc
pop
xlat
inc
orl
cltd
stos
xchg
lahf
push
xchg
in
xchg
mov
cltd
mov
clc
or
fbstp
outsb
mov
push
andb
inc
scas
mov
pop
mov
mov
mov
jnp
ds
out
xchg
fwait
rol
fbld
inc
xchg
test
pop
pushf
sub
lea
bnd
jmp
imul
cwtl
fiadds
and
ror
mov
stc
lea
jo
adc
xor
adc
xor
ret
mov
adc
je
mov
pop
je
das
scas
lcall
imul
fwait
pushf
adc
aam
mov
out
dec
sub
push
sarb
fiadds
enter
aas
xchg
dec
lea
and
dec
or
lret
std
sbb
cwtl
loop
adc
mov
or
pop
clc
inc
orl
cmp
adc
jg
pop
out
int
and
movsb
fs
push
pop
movsl
aam
push
les
push
cmpsl
stos
lock
xchg
lds
js
fidivl
jnp
jl
fwait
xchg
jl
mov
cmp
sahf
cli
les
in
clc
pop
pushf
dec
scas
inc
add
cmp
push
adc
test
mov
dec
inc
inc
fnstsw
lods
cmp
shlb
shl
fwait
or
inc
inc
mov
jecxz
arpl
addr16
jecxz
fstpt
mov
rcrl
test
or
sub
enter
int3
movsb
mov
mov
inc
dec
loope
negl
push
inc
cmpl
dec
inc
pop
jne
sahf
dec
cmpsb
bound
mov
cmpsl
ret
outsl
push
imul
adc
sti
ret
dec
cmp
punpckhwd
jbe
stos
aam
test
cltd
fidivrl
jmp
dec
jmp
test
pop
idivl
dec
fwait
dec
lcall
inc
nop
cmp
cmp
aad
arpl
daa
xchg
outsl
xchg
jb
ds
lods
ds
pop
xchg
jb
inc
xchg
ds
jg
adc
mov
add
lods
dec
stos
and
mov
jns
xchg
movsb
inc
mov
int
xchg
sbb
jle
sbb
mov
loopne
sti
or
adc
pop
scas
sub
dec
add
test
cmp
add
push
add
mov
ss
or
mov
testb
js
lock
jno
cwtl
mov
lods
cmpsl
add
inc
xchg
sti
xor
loopne
out
mov
sbb
dec
sbb
jbe
hlt
push
into
data16
out
sub
mov
pop
pushf
and
xlat
jmp
fstl
iret
mov
popa
dec
pop
loope
jnp
pop
add
sar
mov
pop
push
hlt
out
dec
ja
pop
push
pushf
mov
xlat
mov
mov
cmp
push
add
mov
cmc
sti
scas
adc
lods
pop
inc
mov
mov
mov
call
insb
movsl
outsl
inc
adcb
pop
jo
dec
int
and
mov
lea
add
int
test
lods
jnp
and
mov
mov
cld
pusha
pushf
in
lret
insl
int3
idiv
sahf
mov
pop
imul
jl
ret
inc
adc
cmp
fbld
pushf
xlat
lret
mov
dec
into
push
lods
stos
in
dec
cmp
sbb
movsl
sahf
pop
and
sub
cmpsl
aad
enter
or
sub
jnp
or
fwait
mov
xor
js
insb
dec
mov
push
pop
movsl
mov
adc
sbb
sti
data16
jle
and
mov
aad
rorl
jbe,pn
popf
push
dec
dec
lods
and
clc
out
ja
outsb
into
movsb
insl
and
popa
sti
ljmp
mov
pop
sub
es
pop
fistl
adc
cmpsb
pop
cmpsl
ja
push
mov
faddp
ud1
testb
dec
movsl
pop
mov
xchg
xor
push
push
repnz
out
negb
idivb
insl
into
test
adc
cmpsb
scas
pop
push
push
mov
int
icebp
add
cmpsl
jecxz
mov
mov
jno
imul
insl
mov
dec
rcr
sub
movsl
sti
mov
and
or
in
pop
dec
or
into
hlt
leave
jp
out
int3
xchg
mov
jno
pop
pop
mov
push
scas
es
mov
lds
je
lods
movsl
movsl
and
mov
call
cmp
dec
sti
mov
or
popf
mov
dec
sti
mov
fcomps
in
push
adc
mov
mov
mov
leave
push
push
test
in
shll
popf
inc
jns
or
or
fs
in
add
mov
inc
cmp
xor
add
leave
dec
lods
sti
add
loope
dec
out
mov
xor
jb
cltd
xor
jbe
dec
mov
lcall
jmp
adc
adc
xlat
add
gs
inc
movsb
dec
mov
sahf
xorb
inc
push
push
mov
test
jl
ret
xchg
sti
shlb
daa
cmp
pop
pop
inc
addr16
insl
xor
rolb
cmp
push
jo
outsl
inc
jae
sti
out
mov
lcall
jp
sub
jmp
lods
xchg
add
je
inc
mov
outsl
out
pop
inc
jns
je
rcrl
pop
xchg
pop
xlat
mov
test
mov
adc
aas
pop
rorb
inc
cmp
iret
jne
data16
fnstcw
int
repz
pop
mov
cmp
scas
shl
mov
loope
fcompl
dec
xor
adc
cmp
inc
test
int
fildl
ss
fimull
jl
cs
add
jns
add
cmp
jmp
out
adc
cmp
je
iret
inc
pop
mov
pop
lods
aaa
xchg
jb
sub
inc
sbb
lret
add
in
inc
xchg
lods
movsb
push
push
aam
push
add
imul
or
jp
int
adc
out
push
bnd
dec
pop
movsl
xchg
xor
dec
inc
lea
ja
je
add
pop
cli
jnp
dec
test
mov
xor
repz
adc
mov
fmuls
insb
push
shll
ds
in
inc
lock
mov
sbb
adc
xor
push
mov
lds
scas
push
sti
loope
mov
cmp
xchg
cmp
jmp
mov
pop
or
pusha
cmp
hlt
mov
sti
repnz
cmpsb
fnstcw
fsubp
push
ret
ljmp
adc
cmpsb
lret
sti
gs
xchg
into
ds
jg
je
lahf
cmpsl
sub
mov
dec
jp
xchg
nop
adc
stc
pusha
dec
mov
ffree
leave
test
data16
push
insl
or
loop
lds
out
seto
or
sbb
ss
mov
xchg
sub
into
mov
out
pusha
aas
loope
jns
sub
fbstp
xor
or
aas
pop
stos
bswap
imul
add
outsb
xchg
sub
insb
scas
adc
pop
imul
jp
add
sbb
mov
fcomps
cmp
jmp
divl
ret
inc
cld
push
mov
in
or
test
into
inc
xchg
sti
push
adc
mov
cld
add
mov
mov
mov
adc
jns
mov
dec
lea
pop
jmp
insb
cmpsl
repz
scas
sub
push
or
lea
mov
or
xor
lods
jne
sahf
int
inc
xor
or
adcb
or
cmp
cmpsl
xchg
cmp
popl
fnstsw
aad
mov
dec
std
jns
popf
mov
hlt
and
dec
cmp
lock
pop
cmpsb
fwait
and
nop
jecxz
mov
int3
sbb
out
int3
dec
subb
negb
or
xchg
mov
mulb
jg
xchg
mov
xchg
lds
sub
repnz
frstor
mov
pop
cmc
clc
mov
sbbl
ds
and
aaa
test
push
inc
dec
xor
mov
add
add
xchg
rcr
push
inc
mulb
fnstcw
in
ja
add
addb
and
hlt
test
mov
ficomps
jae
push
pop
cmp
mov
mov
pop
aad
adc
fcmovnu
push
daa
in
adc
shrb
xor
mov
or
out
sarl
loope
mov
ja
movsb
xchg
xchg
mov
pop
add
mov
popa
inc
ret
and
cmp
mov
aad
and
fwait
jae
les
roll
xchg
push
ds
mov
mov
and
cld
fwait
in
jnp
cmpsb
cmpb
mov
pop
inc
push
push
stos
aam
jnp
fstl
pop
inc
push
inc
dec
mov
mov
jnp
int3
cmp
add
xor
jbe
lods
cmp
mov
lret
outsl
ds
cmpsl
jb
stos
data16
decl
adc
mov
and
cs
addr16
mov
rorb
push
xor
scas
pop
cmp
add
shrb
and
dec
add
sbb
mov
test
push
icebp
xchg
add
in
xor
shrl
leave
dec
sub
mov
xor
fst
js
mov
aas
loop
cmpsb
jnp
out
cmp
shlb
lcall
inc
sub
or
fmuls
and
mov
mov
cmp
movsb
test
fwait
nop
lock
xchg
mov
daa
cmp
inc
pop
push
std
cmp
jo
jne
fdivrs
insb
clc
inc
out
dec
push
dec
in
pop
inc
das
lret
sub
sbb
pushf
pop
xlat
jae
icebp
fsts
lret
lds
jne
sub
lods
stos
dec
push
shrb
pop
arpl
cld
mov
mov
test
dec
movsb
add
jle
lods
adc
out
jmp
push
or
jmp
and
int3
call
jp
lods
gs
xchg
jae
dec
mov
rorl
or
push
push
mov
add
push
fwait
lock
test
push
outsb
test
ret
adc
pusha
and
sbb
outsb
imul
mov
push
push
xchg
add
add
fisttpll
je
or
cmc
mov
pusha
add
adc
mov
cwtl
fnstsw
add
ret
adc
pop
imul
or
mov
cmc
call
cmp
in
or
pop
mov
sbb
add
ficoms
lret
cmp
daa
ret
adc
cmp
xchg
jl
adc
in
lods
cli
stc
mov
lods
dec
insb
scas
outsl
cmp
adc
mov
or
or
shr
in
and
mov
into
add
outsb
movsb
pop
cltd
sub
add
cmp
repnz
jecxz
xchg
xor
mov
ja
mov
mov
push
fimuls
or
test
pop
into
xor
add
push
mov
cmp
imul
push
or
pop
xchg
xchg
mov
into
inc
ss
pushf
bound
inc
push
pop
pop
imul
and
lods
and
je
dec
and
repnz
cwtl
decb
sarb
cltd
jnp
or
jp
mov
jl
enter
call
rclb
add
cmpsb
cmpl
in
jmp
cs
inc
aas
cmpsl
push
push
cmp
dec
andl
jl
and
mov
lcall
stos
xchg
pusha
sub
inc
lcall
push
inc
mov
rcrl
inc
stc
int3
leave
cmp
rcr
jmp
js
add
aaa
fs
les
cmp
jnp
je
cmpl
inc
icebp
or
inc
xlat
xchg
mov
test
and
mov
mov
mov
popa
in
shr
mov
inc
loopne
jge
enter
push
ss
mov
imul
cmc
cwtl
pop
adc
cmp
jb
lret
and
fdivl
xchg
insl
cmp
dec
xor
fcompl
repnz
fbstp
es
mov
jo
insl
loop
sub
and
sarb
push
xor
lret
or
mov
mov
mov
xchg
insl
add
mov
cmp
sarl
mov
mov
int3
mov
adcb
jg
mov
mov
cmp
cmp
movsb
push
jae
adc
push
jbe
aad
sti
sti
dec
pop
shlb
mov
ror
mov
pop
jge
lcall
fisubrl
pop
jnp
xor
mov
mov
xchg
lea
jo
mov
mov
fwait
mov
imul
fisttps
ljmp
hlt
ret
adc
stos
jno
inc
add
out
inc
into
xchg
test
jbe
in
cmpsb
mov
cwtl
mov
lcall
mov
movsb
pop
sbb
lds
mov
cmp
mov
xlat
sar
cmp
mov
push
ret
clc
add
and
push
dec
pop
ds
xchg
xchg
ds
sub
dec
inc
fdivrs
xor
ss
xchg
pop
mov
xor
and
int
mov
xchg
cmc
add
jg
callw
bound
es
mov
and
or
jnp
cs
inc
addr16
sahf
adc
add
pop
out
sti
popf
jne
hlt
cmp
imul
in
test
test
pop
loope
cmp
mov
mov
dec
fwait
popf
mov
push
mov
or
fdiv
loope
add
inc
sub
xchg
inc
jno
sub
mov
dec
cmp
jl
fdivrl
shl
xchg
cmp
push
cltd
sbb
invd
mov
mov
test
sub
mov
dec
and
repz
repz
movsb
ds
pop
imul
sub
sub
jbe
adc
jl
pop
addr16
xchg
or
sub
stc
lods
adc
jge
jno
mov
jnp
xchg
std
xchg
mov
data16
jne
or
dec
mov
sti
inc
pushf
sub
pop
pop
add
orb
mov
enter
push
stos
add
gs
xchg
outsl
lds
cld
xchg
test
jne
leave
mov
je
ja
cmp
jo
jle
push
mov
aad
sub
ret
je
mov
aas
gs
push
sub
subl
or
pop
popf
fstpt
int
in
inc
mov
test
jo
subl
ret
cmp
or
in
lods
sti
xlat
jg
and
jno
pushf
pop
roll
pop
popf
mov
insl
push
mov
cli
pop
fildl
btc
test
rclb
mov
jns
sarb
mov
xor
mov
jge
cmpsb
mov
std
jge
mov
fildll
push
xchg
dec
dec
jmp
and
mov
sub
decl
jecxz
sbb
jbe
icebp
push
inc
shl
je
pushf
lret
fstl
int
or
jl
insb
mov
sub
lods
sti
jns
xchg
sarb
pop
enter
and
dec
dec
and
jno
cmpsl
jl
negb
push
test
pop
adc
pop
pop
pop
iret
jo
ds
pusha
adc
fdivr
sbb
ss
mov
es
lcall
fdivs
jo
pop
call
rorl
ds
dec
shrb
cltd
jg
in
xchg
jo
jo
fldl
in
push
cs
xchg
into
inc
mov
and
test
lret
pop
mov
jge
cmp
mov
movsl
jg
sub
mov
stos
cwtl
and
negb
pop
cltd
sbb
scas
cmc
in
mov
or
xor
or
out
xchg
xchg
repnz
movsb
mov
stos
or
xor
gs
out
into
popf
cld
xlat
jns
or
mov
or
push
and
gs
hlt
xchg
dec
out
pop
popf
pusha
xchg
push
mov
mull
fwait
aad
gs
fadd
fneni(8087
cmp
fs
insl
cltd
mov
inc
movsb
xchg
push
int
test
pop
sub
ffree
cmpl
sub
adc
lahf
ret
pop
shlb
push
orl
dec
lret
in
stos
in
gs
add
pop
int
and
lret
pop
inc
fisttpl
pushf
dec
cmc
dec
imul
test
or
loop
rorl
mov
push
in
cmpsb
add
popf
outsl
int3
adcl
lods
jbe
rorl
je
adc
sbb
cmp
int3
xorb
in
cmpl
sbb
mov
push
adc
fwait
dec
mov
ja
aaa
repnz
pop
push
mov
or
mov
cmp
mov
cld
fcom
sbb
sbb
mov
add
iret
adc
xchg
std
mov
loop
mov
repz
lods
cmp
cmc
sbb
cld
jp
insb
jg
dec
leave
insb
xchg
or
or
cmp
out
inc
lahf
cwtl
outsl
pop
fbld
adc
lcall
jl
push
aad
mov
lds
pop
pusha
add
insl
lods
enter
cmpb
rcl
xlat
jbe
sub
xchg
scas
hlt
ficomps
cmpsl
mov
push
push
test
imul
mov
jmp
in
or
jb
jno
in
sub
mov
mov
mov
xchg
fs
mov
nop
cld
fs
dec
mov
jne
cmpsb
cmpb
int
les
jae
jl
push
dec
sub
dec
sbb
and
sbb
dec
push
pop
aaa
lahf
xchg
test
mov
test
cmpsl
jnp
shll
mov
mov
mov
jmp
mov
cmp
or
xchg
cmc
nop
mov
int
or
outsl
int
negl
xchg
out
pop
fsubl
rcll
aam
xchg
pushf
stos
jae
insl
cli
dec
xlat
mov
mov
xchg
add
punpckhbw
mov
insl
notl
je
xchg
rolb
iret
mov
add
repz
jecxz
sub
cmp
repnz
dec
or
fdecstp
lret
sti
scas
xchg
jnp
pop
cld
icebp
cmp
addr16
cmpsl
popa
inc
pop
mov
cmp
mov
fiadds
mov
mov
pop
inc
inc
xor
out
jnp
or
sti
cmp
adc
mov
xchg
mov
dec
dec
popf
daa
mov
lods
sbb
mov
jns
outsl
mov
mov
lods
jo
insb
fnstenv
das
shll
es
sub
fsts
dec
lret
mov
aaa
es
pop
shlb
stos
imulb
test
mov
or
cltd
int3
add
dec
xchg
mov
sbb
xchg
xchg
ror
add
and
enter
dec
outsl
ret
xor
out
scas
mov
dec
gs
sbb
lret
pop
in
push
mov
mov
imul
mov
fwait
pusha
ja
ret
xchg
adc
jnp
sub
jle
mov
insl
cwtl
and
sbb
stos
jp
push
fldcw
aas
jge
mov
xchg
into
lahf
xor
les
insb
sbb
mov
inc
int3
jnp
push
jge
mov
lcall
dec
inc
cld
orb
push
notb
jo
mov
mov
insl
dec
jl
jecxz
fiadds
xor
mov
daa
add
dec
mov
sbb
push
in
insb
mov
jge
push
inc
pop
and
jmp
xchg
loop
aaa
push
or
inc
shl
jb
out
or
xchg
fdiv
or
sti
or
arpl
movsl
int
push
push
push
xchg
fs
sahf
movsb
or
pop
push
push
or
and
jnp
pop
insb
vucomisd
mov
test
dec
mov
mov
jmp
insl
int
pop
inc
jb
cmp
mov
aad
mov
mov
hlt
jg
adc
insb
icebp
add
xchg
movsl
dec
dec
cmp
xchg
pushf
lea
movsl
adc
cmp
loope
fs
inc
cmp
jo
leave
inc
les
shlb
push
out
in
sti
add
add
push
sbb
jnp
mov
shrl
rclb
es
dec
aam
push
stc
inc
xor
ljmp
shl
test
aam
leave
xlat
movl
mov
loope
outsl
dec
push
push
jno
cld
jo
mov
aas
mov
add
pop
out
sbb
nop
mov
stos
and
inc
mov
andb
enter
mov
jnp
adc
cwtl
cmp
pop
dec
mov
sbb
mov
sub
lea
jge
imul
dec
jp
ret
loopne
xchg
sub
stc
cltd
sti
cmpb
cmp
nop
add
ret
xchg
sti
rorb
lock
adc
mov
and
xchg
hlt
stos
je
xor
cld
push
mov
inc
incl
lahf
push
into
jnp
aam
pop
mov
cmp
jg
into
test
xor
stc
jge
cmp
xchg
scas
sti
inc
test
dec
mov
push
xor
sbbb
pop
xlat
arpl
cwtl
pop
adc
dec
dec
jp
xor
mov
imul
mov
mov
fwait
mov
xor
sbb
in
dec
dec
aas
adc
call
loope
xchg
lcall
cmpl
mov
dec
movsb
pop
lods
adc
jns
das
pop
inc
adc
push
aam
cmp
lds
xchg
cmc
sti
inc
ficoml
ss
or
out
lret
fstpt
out
push
popa
jmp
test
clc
cmpsb
dec
xchg
jnp
addr16
push
lea
xchg
pop
test
arpl
jle
push
cmpsl
push
cli
xchg
mov
mov
stos
fimuls
sar
or
mov
ret
or
mov
push
test
jnp
lods
sub
mov
xlat
mov
lods
insb
jno
xor
cmp
outsl
rorb
dec
mov
in
pop
int
cmp
mov
sarl
fs
sbb
ja
int
jns
push
stos
cmp
fisttpll
sub
dec
jg
and
shlb
dec
repz
loop
mov
cmp
inc
ret
xor
sub
int
out
fildll
or
imul
adc
dec
xchg
cmpl
pop
pop
dec
pop
sarl
cmpsl
adc
cs
shll
push
adc
ss
jmp
push
aad
mov
jne
sbb
mov
dec
adc
rorb
push
iret
add
scas
add
ljmp
jl
or
je
mov
cld
push
pusha
addl
enterw
jmp
icebp
lods
or
mov
popf
sbb
ds
idivl
stc
ficomps
scas
loop
jo
movsb
sbb
shll
ret
in
inc
iret
sub
or
push
fimuls
push
bound
sbb
jle
pop
outsb
stos
add
push
mov
mov
stc
jnp
ret
ds
sarb
xchg
mov
xlat
jle
sti
pop
dec
inc
jge
pop
jl
inc
push
stc
dec
loop
cmp
ret
mov
fldt
and
push
mov
dec
add
jo
push
pusha
or
sbb
mov
inc
cmp
add
push
in
stos
xor
pusha
cld
ja
cmp
movsb
mov
rolb
jae
or
movsl
pusha
adc
pop
adc
ja,pt
test
mov
sbb
pop
dec
scas
pop
adc
out
cmp
mov
push
jp
ret
or
repz
mov
outsl
mov
mov
xchg
rclb
jmp
mov
mov
inc
std
sub
ds
in
loopne
mov
sub
xor
dec
rolb
outsb
cld
pop
aaa
into
and
sahf
jg
jnp
and
push
lock
inc
sub
mov
add
fstl
jno
lret
sub
inc
push
mul
jg
pop
sbb
loop
int
loope
mov
and
gs
mov
clc
sbb
test
ss
pop
mov
xchg
shr
adc
dec
or
dec
sub
push
cmp
int
xchg
pop
jae
sti
dec
rorl
adc
mov
add
aas
xor
jl
bound
das
jg
call
push
lock
cltd
xlat
int3
enter
mov
ss
or
lods
sti
int
pushl
repnz
mull
rcl
fnstsw
add
sub
mov
out
addr16
mov
dec
and
jne
subb
dec
dec
insl
push
mov
dec
add
add
lahf
cwtl
pop
push
cld
xor
mov
repnz
mov
idivl
mov
cmc
push
roll
push
fcmovu
data16
std
cmp
outsl
xchg
inc
push
adc
adc
in
cld
mov
mov
js
pop
jle
inc
rcrl
push
mov
and
sti
xchg
inc
loope
push
fildll
jne
aaa
out
ret
lea
push
cmp
mov
mov
enter
mov
ret
jge
mov
pushf
daa
cwtl
add
dec
jecxz
lea
int
out
pop
outsb
fsub
sarl
outsb
cs
cmp
adc
pusha
fwait
pop
xchg
ror
popl
loope
pop
mov
mov
xchg
push
mov
repz
cli
lods
int
cmpb
enter
sbb
scas
push
adcb
cwtl
sti
aad
xchg
cmp
xchg
xor
in
dec
pop
mov
int
mov
jge
mov
xchg
lcall
and
mov
or
or
jb
lock
jge
nop
jnp
mov
mov
push
sti
cs
mov
jb
mov
bound
xrelease
sub
sbb
mov
mov
dec
xor
cmpsl
fmul
mov
stc
leave
sarl
xchg
pop
loopne
pop
sbbl
pop
or
xchg
inc
xchg
adc
push
arpl
daa
outsl
cmp
or
jnp
dec
pop
push
aaa
in
mov
dec
sub
pop
cmp
cmp
xor
inc
ret
and
jns
or
jge
xor
xlat
lds
mov
mov
mov
es
or
out
ss
test
repnz
rorb
inc
ds
push
jbe
in
int3
cmpsl
mov
sbb
fwait
or
repz
xlat
cmp
jb
mov
inc
arpl
jnp
mov
cltd
and
mov
mov
mov
fcmove
insl
ss
dec
add
jg
sbb
mov
xchg
mov
mov
out
orb
mov
jmp
js
mov
or
inc
xchg
lock
in
jnp
aad
adc
fmul
adc
sahf
inc
xor
popa
scas
fdivrp
xchg
sbb
add
rcr
scas
pop
and
pop
je
jge
xchg
mov
and
stos
fsubrl
loope
shr
scas
mov
mov
cmp
scas
in
repnz
fwait
add
cwtl
dec
sub
scas
movsb
iret
cmp
mov
les
lea
es
sbb
out
es
test
aaa
jb
xchg
sub
adc
sbb
push
fbld
pop
cmp
or
movsl
adc
movsl
add
dec
dec
nop
jl
leave
repz
mov
mov
js
push
push
dec
stos
jmp
adc
notb
sti
sub
xor
sbbb
push
inc
jns
adc
into
sbb
cli
ret
sbb
and
cmpsl
pop
push
push
mov
cmp
sarb
out
add
mov
ret
dec
iret
dec
sub
adc
sarl
adc
dec
cmp
sbb
rep
js
icebp
add
aaa
data16
rcrb
mov
cltd
ret
dec
dec
mov
ds
mov
sbb
sbb
adcl
add
and
dec
push
frstor
xchg
int
cld
rcl
fwait
push
sti
stos
cltd
dec
or
popf
push
stos
int
jbe
fldcw
jb
push
push
icebp
call
sbb
cmp
xor
jno
dec
int3
hlt
rorb
dec
out
loopne
cmp
sbb
adc
and
inc
jecxz
cwtl
adc
andb
aad
test
insl
lea
int
sbb
into
push
jg
mov
mov
call
or
loopne
pop
cmc
xchg
dec
hlt
cmp
push
and
into
push
pop
jmp
into
lcall
dec
dec
add
adc
adcb
imul
mov
push
aam
movsb
mov
sti
iret
sub
dec
jge
push
dec
mov
mov
mov
pusha
push
xor
std
inc
int
adc
out
shl
cmp
shlb
sti
sub
out
sti
xor
mov
je
add
shr
jmp
popa
in
sti
sti
mov
mov
mov
jle
lahf
xor
mov
sbb
jne
mov
arpl
fidivs
add
inc
and
movsb
or
fs
addl
jg
pop
int3
in
sbb
int
pop
pusha
push
adc
and
sti
shlb
pusha
jno
xchg
mov
or
adc
idivb
dec
pop
mov
stos
ret
test
jp
push
mov
xchg
jge
pop
mov
mov
mov
and
icebp
push
inc
incl
cmp
cmp
mov
jae
jl
test
in
jo
jae
arpl
cld
inc
in
ss
fistpll
cmp
mov
pushw
dec
in
pop
out
sub
push
cmp
push
push
mov
jns
push
rolb
sbb
inc
cs
inc
push
dec
jg
in
xchg
gs
imul
adc
lret
pop
sbb
lods
sbb
test
or
dec
aad
loopne
mov
fsubl
jge
dec
jnp
xor
icebp
scas
stos
sbb
cmpsl
xchg
int
flds
add
dec
add
push
pop
js
lret
popa
or
inc
mov
cmp
cmc
sti
insl
aaa
mov
cmp
adc
inc
jb
mov
and
jno
mov
cmpsb
movsl
mov
inc
dec
push
xchg
shrl
sub
lea
fnstsw
pushf
push
in
outsl
inc
cmp
int3
cld
outsl
scas
test
or
xlat
cmp
daa
and
jno
add
add
add
or
or
imul
pop
push
push
std
movsl
enter
iret
rorl
lods
cmpsl
push
sbb
pushf
mov
arpl
aad
mov
test
dec
inc
dec
push
push
sbb
sub
fidivrs
leave
xchg
lret
dec
sahf
in
push
test
mov
inc
dec
addr16
pop
sub
mov
dec
int3
xor
jg
push
sub
enter
popa
stos
push
inc
sub
aad
pop
orb
enter
int
mov
mov
insb
lods
mov
in
fwait
pop
mov
movl
jno
mov
dec
cmp
pop
mov
and
cld
xlat
shlb
push
mov
imul
or
sar
pop
outsb
adc
imul
mov
adc
sub
popa
ret
mov
inc
pop
int
inc
je
fbld
int
xchg
adc
imul
sahf
js
mov
cmp
and
shlb
push
fstpl
cld
inc
imul
push
push
push
jnp
in
sbb
dec
xchg
inc
sbb
aas
mov
xchg
sarl
sbb
lods
mov
int
or
pushf
mov
movsl
adc
pop
inc
leave
adc
test
or
pop
jge
mov
cmpsl
xor
lcall
adc
pop
push
inc
ret
incb
loope
inc
push
adc
jg
mov
mov
sbb
jnp
pop
inc
mov
fs
sahf
mov
std
out
mov
jo
inc
or
mov
dec
outsb
lods
nop
sub
je
cmpl
loopne
and
cmpxchg
mov
mov
std
mov
mov
icebp
mov
loopne
mov
lcall
aam
pop
xor
jno
mov
pop
and
lret
sarl
insb
fsubl
jecxz
les
movsb
sti
xchg
xchg
cmp
shlb
mov
hlt
fistpl
fs
stos
clc
je
sub
add
cmp
mov
mov
out
or
dec
inc
outsb
mov
dec
fcoml
and
and
hlt
xor
xchg
inc
mov
push
mov
cli
int3
aaa
ret
adc
inc
shrb
loope
ret
push
mov
add
sti
cmp
and
mov
pop
lcall
inc
inc
jl
lret
cmp
pusha
ret
push
sub
cmpsl
pusha
stos
ljmp
popf
xchg
sti
sbb
sarb
mov
adc
jp
and
jle
out
sbb
dec
cwtl
sbbb
cltd
pop
dec
nop
movsl
lods
pop
xchg
aas
or
xchg
xchg
lock
nop
dec
and
pop
and
dec
push
lret
or
inc
je
sarb
insl
xchg
cmp
aam
xor
mov
lds
mov
cwtl
pushf
jne
mov
add
incb
mov
cli
dec
cmp
les
cltd
mov
inc
pop
sbb
fstpl
addr16
xor
js
dec
bound
in
push
hlt
jne
lds
jnp
into
lret
insl
mov
sti
stos
mov
out
or
cmp
inc
sbb
cmp
icebp
push
mov
out
sti
test
mov
mov
out
and
loope
xlat
xlat
mov
mov
rcr
cmp
mov
inc
push
jbe
sti
mov
into
lahf
inc
test
hlt
subl
adc
imul
mov
add
sub
sbb
in
enter
xchg
or
push
pop
push
push
test
fsincos
cmp
xor
sub
jo
repnz
loop
sub
jnp
les
popa
popf
cltd
cmp
testb
xor
addb
stc
mov
arpl
outsl
into
pop
aam
cmp
xchg
lcall
jge
mov
cmpsb
and
mov
fcmovb
addr16
cld
and
mov
jge
inc
mov
pop
push
xchg
lock
pop
addr16
scas
lods
xchg
dec
ret
add
jb
add
or
sbb
xor
push
add
int
or
std
mov
int3
fisttpl
push
jae
ja
jl
push
test
jge
ret
iret
jnp
negl
adc
pop
inc
adc
mov
bound
mov
jnp
je
test
push
iret
pop
fiaddl
jmp
pop
xor
jne
data16
and
lahf
int
jg
imul
ja
rcrb
sahf
mov
xchg
push
mov
ja
sub
ljmp
fwait
lea
and
sarl
cmp
sub
mov
lods
inc
mov
cmp
jne
ds
in
mov
fcom
xchg
sub
in
push
and
fs
movb
lock
enter
imul
dec
in
dec
mov
jns
xchg
or
ret
rorb
dec
leave
mov
dec
push
nop
jne
xor
insb
mov
aas
imul
jnp
sub
adc
lds
bound
orl
cmpsl
and
cli
sub
sub
jnp
icebp
mov
mov
jle
ret
iret
xor
cmp
xchg
scas
or
test
cmp
xchg
push
add
mov
dec
adc
jns
inc
test
push
mov
rcrl
fistl
or
outsb
dec
cwtl
jge
imul
mov
scas
mov
nop
jne
fmull
push
pop
stos
add
scas
aam
or
je
lods
insb
dec
xchg
mov
or
push
sbb
into
jge
icebp
mov
add
pop
dec
mov
pop
mov
or
je
dec
xor
jns
jl
jbe
in
lods
scas
rorb
adc
pop
xchg
push
test
mov
pop
sbb
dec
xor
sbb
dec
jg
notb
push
lahf
std
mov
bound
push
xchg
int
push
cmp
popf
andl
insb
mov
sbb
inc
jge
jecxz
pop
pusha
pop
inc
int
mov
fstl
shrb
nop
sti
loopne
repz
pop
repz
pop
fsubrs
aad
adcb
xchg
push
pop
push
inc
and
mov
cmp
lods
imul
gs
pushl
sub
pop
xchg
pop
inc
cmp
pop
pusha
jle
sbb
mov
lods
mov
movl
xchg
jno
xchg
insl
inc
gs
out
push
inc
add
dec
cmp
inc
loopne
pushf
or
adc
sbb
subl
xchg
cmc
repz
mov
imul
push
push
mov
jnp
push
in
and
mov
pop
jae
inc
or
lea
push
fdivl
and
add
out
rep
and
adc
jmp
or
sbb
call
lods
jne
mov
int
mov
jmp
int
mov
mov
mov
dec
mov
jle
add
dec
daa
scas
sbb
add
inc
loope
sbb
int
push
inc
mov
mov
cmp
mov
bound
js
int3
dec
xchg
enter
xchg
cmp
pushf
pop
dec
cmp
rorb
cmp
cmp
insb
xchg
fcomi
xchg
or
xchg
sub
fldt
insb
add
mov
loopne
pop
rcrb
adc
fwait
inc
nop
and
loope
in
out
lods
in
mov
gs
mov
jb
jo
sub
push
mov
dec
sub
hlt
push
lahf
add
dec
pop
xchg
or
sti
lret
push
pop
pop
cmp
adc
pushf
cs
pushf
inc
lods
push
add
dec
xchg
add
pop
in
push
mov
cld
repz
aaa
das
or
xchg
test
lret
test
mov
outsl
pop
dec
ds
xor
sbb
fwait
adc
xchg
jg
mov
mov
enter
dec
mov
push
cmp
cmp
push
aam
movsb
in
mov
cmp
dec
xor
in
inc
dec
sti
lea
imul
out
push
cwtl
mov
cwtl
repz
push
jo
jne
in
test
faddl
cmp
imul
scas
mov
stos
mov
pop
nop
sbb
sub
cmp
sbb
xor
loop
and
mov
test
sbb
sbb
out
jmp
nop
lock
push
dec
movsl
cli
mov
jecxz
pop
fwait
push
or
push
out
aad
jns
pop
push
mulb
jmp
icebp
arpl
andl
mov
in
jg
out
adc
test
mov
fstpt
pop
lea
xor
into
mov
int
xchg
cs
cwtl
sarl
jp
inc
jnp
ljmp
loopne
adc
xchg
test
adc
outsl
mov
jle
pop
sti
negb
mov
dec
aas
mov
lea
push
movsl
add
mov
lods
orb
inc
inc
jle
mov
jge
xor
cwtl
sbb
adc
dec
jmp
test
sti
xchg
pop
jge
xor
xor
xor
sub
testb
in
xchg
ja
mov
lea
push
fdivs
and
cmp
jbe
stos
sbb
int
cmp
jo
mov
das
xchg
adc
cmp
repz
mov
pop
xor
scas
fwait
mov
aam
push
cltd
mov
orl
adc
insl
xor
adc
xchg
les
dec
dec
mov
stos
mov
addr16
xor
or
popa
pop
aaa
out
lods
rclb
dec
fdiv
dec
aad
popa
and
add
jg
movsl
nop
mov
outsb
or
imul
jge
push
push
mov
into
int
sar
mov
lea
sbb
outsl
ror
jmp
push
int3
sti
fstpl
lock
cmp
and
aam
jle
cmp
sub
ja
add
insb
and
pop
mov
out
movsl
cmp
cs
lods
ret
cmp
outsb
js
cltd
pop
mov
lahf
lahf
cltd
adc
mov
movsl
adc
int3
pop
imul
arpl
outsl
stos
insb
fwait
add
inc
xchg
les
subb
push
movsb
xchg
jecxz
adc
bound
dec
mov
in
test
dec
push
dec
enter
sti
sub
mov
stos
xor
adc
sarb
adc
sub
sbb
aas
mov
dec
push
mov
mov
rorb
mov
xchg
ss
fldt
cmc
into
jb
jns
imul
adc
in
int3
cmp
mov
movl
inc
dec
call
ret
add
push
call
mov
jg
stos
sti
xor
jns
sahf
jl
pop
sbb
pop
mov
iret
mov
int3
jg
loopne
push
jecxz
je
add
lret
pop
std
or
bound
pop
cmp
sbb
pop
fisubrl
dec
dec
rcrl
daa
pop
shl
inc
mov
fbstp
cltd
jnp
mov
hlt
and
pop
push
fisubrl
cwtl
add
sbb
imul
movsb
and
rorl
lock
fninit
jg
std
cmp
sub
stos
jnp
push
out
les
lods
int
mov
jmp
jnp
rclb
pop
push
nop
rorl
jge
andl
cmovle
in
dec
sbb
sti
fldl
std
stos
call
push
cld
in
outsb
lods
xchg
mov
fwait
mov
into
nop
lret
dec
sbb
xchg
sub
or
jbe
es
scas
mov
sub
sub
pushl
xchg
cmpb
loop
inc
lea
cmpsl
lret
push
in
icebp
movsl
jl
cmp
inc
pop
imul
sbb
push
stos
xchg
push
fwait
fs
mov
xor
mov
arpl
adc
or
out
repnz
add
sbb
adc
mov
test
or
xchg
mov
cmp
push
fdivrl
or
lods
mov
rsm
decl
push
mov
sub
cmp
test
jae
jo
fmull
xchg
in
dec
mov
mov
outsl
test
inc
aad
cmp
or
cmp
or
cwtl
pop
les
lds
mov
fs
mov
inc
dec
and
dec
xlat
and
inc
nop
push
adc
cmp
movb
pop
test
das
iret
aas
nop
inc
repz
test
out
lcall
dec
mov
adc
push
rclb
pop
and
in
or
mov
in
rcr
mov
in
fisubl
psraw
sub
mov
mov
add
cmp
mov
les
imul
xor
ror
insb
test
shrl
leave
pop
sbb
les
push
xchg
mov
adc
and
iret
xor
push
movsb
dec
int
mov
mov
xor
movl
lods
push
cld
sub
mov
mov
mov
lret
in
jnp
into
mov
lds
out
lcall
aam
adc
sub
mov
xchg
test
xor
pushf
shll
xchg
sub
testl
lret
jno
addr16
pop
dec
adc
push
rcrl
clc
ljmp
into
clc
and
inc
icebp
xor
into
add
push
pop
lcall
or
mov
sbb
mov
dec
insb
mov
mov
pop
xchg
inc
push
leave
outsl
ds
or
push
lock
je
cmp
or
inc
mov
lret
mov
movsl
pop
inc
repz
inc
jl
into
lock
mov
sub
adc
sub
lock
shlb
cmp
mov
pop
rorb
cmpsb
outsb
jg
push
sub
fmul
in
xchg
mov
xor
add
ds
test
orl
inc
cld
mov
out
jge
sbb
shll
in
das
les
inc
adc
iret
das
ds
inc
push
sbb
xor
subl
pop
push
pop
push
test
clc
rorb
jo
cmc
faddl
pop
xlat
xchg
pushf
cmp
std
cmpsl
das
pop
inc
sarl
mov
lcall
mov
lahf
sub
push
in
pop
mov
xchg
insl
sahf
xlat
mov
gs
scas
pop
test
rcll
jmp
ret
call
dec
js
sbb
pop
mov
mov
jae
jle
pushf
push
sub
insb
int
jmp
inc
dec
adc
notl
cld
cltd
jmp
int
imul
sti
add
pop
push
and
mov
dec
mov
cmp
sbb
movsb
insb
cld
sahf
cmp
in
mov
lods
sbb
xchg
testl
stc
jle
scas
or
sbb
sbb
mov
jnp
dec
leave
cmp
fdivl
rcrb
xchg
js
mov
rorb
aaa
ret
cld
mov
mov
or
aaa
add
popa
sbb
aaa
sbb
or
mov
cmp
or
adc
sub
ds
pop
inc
ror
andl
rcrl
fldenv
push
jb
adc
adc
push
lahf
lods
sbb
mov
or
scas
cmc
xchg
sbb
into
sub
jl
push
inc
cmp
aaa
xor
pop
xchg
xor
repnz
mov
push
es
pop
pop
int
lds
push
sub
mov
add
data16
sub
bound
pusha
cmp
scas
out
fs
or
mov
push
sbbb
out
jg
cmp
int3
daa
icebp
sbb
or
pop
inc
ja
loop
dec
sbb
dec
cwtl
mov
adc
mov
setge
jmp
lea
fildl
test
pop
jo
rcrb
sbb
aas
cltd
pop
adc
sbbl
ljmp
pop
icebp
std
jae
mov
mov
popf
inc
jns
je
rclb
shlb
jne
stos
xor
imul
xor
xchg
lock
dec
scas
cmp
fstl
mov
push
mov
mov
ror
inc
sti
repnz
sub
push
arpl
imul
loope
mov
std
sub
rcr
icebp
fisubrs
and
or
int
fldenv
ss
xchg
add
outsb
adc
int
pop
lret
jg
iret
repnz
cld
scas
fwait
outsl
jb
xchg
mov
test
aad
ss
jecxz
dec
int
data16
push
testb
inc
cmp
arpl
xchg
xchg
fistpll
fs
sbb
mov
xchg
sarl
out
ds
xchg
sbb
dec
jb
jnp
mov
xor
add
daa
mov
adc
dec
nop
aaa
add
inc
push
sti
stos
or
mov
scas
jbe
or
out
int
adc
loop
pop
mov
fwait
mov
mov
das
mov
int
mov
cwtl
das
adc
subb
mov
mov
mov
mov
addr16
adc
jnp
and
cmpb
fadd
ror
jb
popf
dec
cld
or
xchg
sub
pop
dec
shrl
fisttpl
iret
addr16
lds
xchg
negl
sub
mov
mov
dec
aad
xchg
repz
jae
mov
fbstp
dec
sti
xchg
lea
mov
mov
push
cmp
call
and
adcb
mov
xor
aaa
cmpsb
xor
insb
cld
jnp
xchg
pop
sti
mov
xchg
jmp
cmp
push
out
gs
call
insl
ret
lea
outsl
loope
inc
fdivs
inc
enter
xlat
test
xchg
push
lret
xchg
push
mov
add
mov
inc
out
sti
std
das
cmp
dec
push
adc
pop
xor
shll
sti
mov
xchg
cmp
dec
mov
and
push
cmp
jnp
call
or
shrb
and
shll
lods
cli
jnp
je
inc
call
push
clc
orb
jge
push
xchg
movsl
call
into
addr16
mov
stos
mov
bound
mov
rorl
sbb
sbb
jmp
pop
dec
and
mov
rorb
xchg
out
cmp
jecxz
paddb
icebp
and
iret
stc
mov
nop
ffree
mov
jp
ret
jl
arpl
lahf
rcr
mov
or
mov
mov
dec
mov
push
scas
es
dec
push
dec
pop
mov
jg
jle
cmp
movsb
ret
rorl
addr16
out
int
jecxz
jne
std
call
sbb
mov
and
fsubr
mov
mov
push
leave
xor
push
addr16
jae,pt
mov
xchg
rclb
jmp
push
and
daa
daa
mov
mov
and
daa
inc
int
cmp
pushf
std
sbb
xlat
mov
add
out
pop
dec
testb
popa
mov
pop
mov
jb
outsl
mov
sti
dec
outsl
in
jae
mov
fcoms
js
leave
jo
sub
or
cld
enter
lret
pop
fstpt
mov
ljmp
pop
push
sbb
sbb
jecxz
jb
fisttpl
cld
jno
inc
lods
push
and
shl
cmp
and
lock
icebp
mov
pop
pop
push
jae
arpl
lods
insl
pop
imull
lock
add
xchg
or
jle
add
adc
sbb
ret
loop
fsubs
xchg
or
jnp
shlb
mov
push
sbb
cmpsl
add
testl
push
sarl
mov
imul
mov
mov
push
sub
lea
adc
mov
mov
int
push
fidivrl
and
mov
and
jg
push
icebp
inc
inc
jp
imul
incb
imul
adc
mov
add
in
push
icebp
lahf
addr16
lods
or
pop
push
push
pop
mov
adc
jecxz
icebp
cmp
cld
mov
ret
sti
psrlq
push
mov
hlt
int3
hlt
scas
sbb
adc
pop
jmp
in
lock
sub
ja
cmpsl
les
rol
ja
mov
icebp
xor
dec
add
mov
aad
mov
idivb
dec
int
jae
cmp
xchg
adc
sub
cmp
mov
sti
std
add
mov
icebp
push
enter
adc
sti
insl
add
pop
leave
jb
sbb
icebp
fcmovnbe
jne
fxch
jmp
inc
mov
mov
pop
in
xchg
sbb
pop
jb
mov
cltd
add
pop
adc
jmp
mov
sbb
pop
ret
cli
arpl
lock
mov
cvttsd2si
cmc
sub
and
inc
or
jo
ret
push
mov
stos
lea
sbb
jo
xchg
push
dec
stos
jnp
push
sbb
cmp
jno
repnz
mov
add
sbb
sub
test
mov
push
mov
jmp
lcall
push
aam
cmp
outsb
daa
mov
or
stos
mov
dec
movsl
mov
nop
jb
or
pop
pop
cmp
sub
jl
cmp
jne
adc
push
jl
sbbb
shlb
mov
pop
lock
lds
ret
or
jmp
mov
mov
pop
cwtl
or
add
dec
sub
add
push
mov
adc
dec
or
sbb
push
jnp
cmp
push
pop
add
dec
into
sbb
insl
fmull
mov
push
movsl
mov
sahf
dec
adc
out
xor
adc
push
push
adc
int
jle
mov
cmp
jne
and
int
dec
ret
jmp
or
dec
cld
add
sub
mov
std
inc
adc
in
xchg
mov
and
in
lcall
fisttpl
xchg
xor
cmp
xchg
and
cmp
into
in
das
pop
sub
mov
xchg
jl
jmp
mov
sbb
pop
inc
add
sbb
pop
test
sti
cmp
dec
cltd
jnp
dec
and
inc
ror
int
xor
int
pop
inc
shlb
dec
fisubrs
xor
mov
fwait
mov
in
jns
mov
setle
mov
and
dec
rcl
or
fs
mov
push
lret
fwait
jo
jne
aas
push
roll
sahf
sahf
mov
sub
sub
mov
insb
and
sbbl
test
inc
add
jb
mov
sub
xchg
push
insl
push
mov
sbb
dec
xchg
cmp
adc
mov
pop
stos
imul
adc
sub
mov
fnstenv
cltd
outsb
data16
je
adc
pop
cmp
sub
aad
pop
lret
int
pop
ja
ret
in
es
and
xor
push
sbb
pop
push
sbb
pop
lahf
adc
aas
sbb
ds
test
orl
dec
insl
fisubrs
and
mov
popf
cmp
mov
into
jecxz
in
ss
cwtl
popa
cmp
pop
push
or
pop
xchg
sti
jmp
out
aas
dec
or
dec
pop
arpl
int3
sti
xchg
xchg
daa
jne
sahf
bound
and
adc
scas
cmp
aam
scas
lcall
push
fs
sahf
pop
fwait
jae
adc
ret
adc
or
xchg
pop
mov
dec
adc
je
loop
ret
insb
mov
mov
jae
popa
xchg
sti
or
cmpsl
bound
xor
in
cltd
cmp
out
dec
ja
pop
pusha
cmp
cmp
xor
nop
lea
dec
or
fcomip
int3
and
sbb
test
mov
out
cmc
iret
jae
rol
mov
xchg
scas
cld
adc
cld
icebp
and
sub
dec
pop
push
rcrb
lods
and
xorl
sbb
je
inc
dec
stos
push
add
cmp
enter
inc
add
lahf
push
cmp
inc
sub
in
cmpl
xor
mov
lcall
jecxz
mov
jb
sti
stos
mov
jae
cmp
testb
and
mov
bound
ljmp
mov
lock
das
cltd
adc
imul
leave
adc
imul
hlt
cmp
cmpsb
in
dec
popa
lods
jge
int
das
or
xchg
ds
or
adc
shll
imul
and
mov
push
jno
or
adc
scas
mov
aam
scas
call
xchg
cltd
lods
or
into
or
sti
rclb
into
mov
addr16
jne
jbe
or
mov
outsb
push
imul
dec
xor
daa
xchg
repz
repnz
or
cmp
jae
popl
or
mov
fwait
lret
pop
jmp
mov
or
notb
xor
adc
mov
adc
enter
mov
dec
mov
xor
mov
ficompl
ret
add
pop
fsubrs
ljmp
in
inc
cmp
test
push
and
jnp
dec
add
cmpsl
or
or
push
xchg
jp
mov
mov
pop
push
cmpsb
jmp
mov
lds
cmc
push
xchg
dec
mov
in
or
mov
inc
shrb
cld
not
push
or
or
icebp
xor
cmpl
cmp
add
imul
mov
jl
jl
cli
rcrb
hlt
test
in
cpuid
or
cmc
or
mov
or
pusha
outsl
std
sti
push
jbe
cmp
inc
jge
pop
sti
into
pushf
shll
shll
cmp
adc
mov
push
imull
dec
or
jmp
xchg
xlat
sti
rorl
mov
into
rcrb
mov
xchg
cltd
mov
push
lods
sbb
in
jnp
or
mov
ja
sbb
mov
fcompl
insl
jg
rol
call
adc
xchg
fimuls
pop
push
insl
mov
jnp
mov
push
add
fnstsw
jae
jne
cmp
add
and
inc
mov
mov
inc
test
stos
adc
orl
sahf
gs
je
push
add
cmp
addr16
daa
or
arpl
push
pop
sbb
gs
cmp
and
adc
mov
adc
jns
pop
xchg
fwait
enter
pop
xor
lret
jmp
aas
mov
rcrb
add
jbe
sub
fwait
pusha
in
repnz
sub
jo
adc
mov
push
sub
popf
in
loopne
push
jmp
mov
cmp
sbb
or
dec
loopne
lret
jnp
gs
test
lds
xchg
xchg
int
pop
cmc
daa
int3
pop
das
lock
iret
dec
push
addr16
lcall
xchg
mov
jne
loop
mov
cmp
mov
xor
jge
adc
jae
in
sti
loope
in
inc
adc
les
orl
scas
loopne,pt
dec
testl
adc
dec
push
cs
mov
pop
jge
pop
jb
mov
mov
test
push
jl
fcmovbe
add
dec
add
int
rcll
fldenv
dec
dec
stos
push
push
mov
ret
mov
inc
add
adc
inc
cmp
aad
push
add
and
pop
hlt
inc
stos
adc
nop
or
imul
and
iret
test
mov
xor
rclb
push
adc
scas
fidivs
jl
fidivs
push
mov
pop
shll
jl
out
shl
mov
dec
test
ret
decb
mov
cmp
add
or
decb
xchg
mov
test
pop
inc
aaa
or
fldt
push
cmp
push
pop
nop
sti
movsb
mov
cltd
dec
add
nop
xchg
mov
mov
aad
xchg
dec
shrl
ss
jl
xchg
xchg
sbb
lcall
leave
push
enter
lahf
or
test
mull
movb
out
pop
repz
pop
into
lahf
jne
ret
mov
xor
mov
in
imul
insl
pop
rclb
sub
je
cs
jb
and
adc
lret
int
jmp
adc
ja
imul
jae
mov
push
cmp
scas
stos
or
test
iret
or
inc
jnp
js
in
cld
clc
pusha
mov
add
sarl
into
dec
add
into
jbe
or
jl
jnp,pt
sahf
xor
push
hlt
movsb
dec
sub
push
xor
sub
pop
push
daa
cs
mov
cmc
mov
jmp
lea
fwait
data16
sti
ljmp
cmp
stos
cld
jnp
or
push
mov
and
and
or
dec
iret
push
xor
mov
leave
ljmp
xor
or
and
mov
pusha
adcb
fs
test
mov
or
pop
in
push
fdiv
lcall
add
fnstcw
or
es
mov
les
sti
cmp
dec
add
sub
orl
cmp
mov
and
stos
stos
mov
pop
lret
mov
jb
fdivrp
repz
cli
push
repz
shl
mov
lahf
jbe
sbb
add
sub
and
mov
sub
jg
aaa
lea
mov
fnstsw
stos
adc
push
movsb
rolb
lret
pop
imull
xor
int
out
scas
mov
xlat
mov
or
je
sub
mov
inc
jns
mov
data16
sbbl
dec
xor
or
cmp
jmp
push
sahf
lds
loopne
add
sti
cwtl
mov
insl
adc
adc
xchg
xlat
pop
add
sbb
sub
in
int
ljmp
test
cmp
sbb
cmp
or
dec
popf
jl
mov
or
in
jae
add
push
push
js
push
pop
std
cmpl
mov
and
mov
push
repz
jnp
movsb
push
adcl
cmc
inc
mov
imul
iret
lret
imul
pop
cmc
xchg
pop
adc
mov
push
and
mov
mov
jecxz
sti
testb
int3
mov
and
push
mov
xor
cmpsb
jmp
sub
inc
sbb
mov
sub
mov
and
pop
dec
int
rcll
je
push
je
mov
sub
sub
pop
and
data16
pop
pushf
jecxz
add
or
mov
dec
add
adc
lcall
es
sbb
cmp
test
pop
and
ficompl
lock
orl
jmp
adc
js
jb
repnz
sbb
xor
mov
mov
sti
push
add
inc
mov
push
fcoml
aas
cmc
lahf
outsb
icebp
sti
mov
cwtl
std
scas
arpl
and
nop
and
popa
lahf
dec
popl
addr16
mov
das
xor
xorb
rorl
in
and
xor
pop
mov
sub
adc
test
inc
lahf
adc
mov
pop
mov
cmp
fimuls
cmp
mov
xlat
pop
cld
insb
arpl
or
xchg
iret
mov
sti
add
fwait
mov
clc
lds
cltd
xchg
mov
xor
icebp
or
pop
jmp
mov
mov
cmpsb
dec
rolb
adc
sbb
mov
outsl
jecxz
dec
js
shlb
cmp
jne
cmp
mov
xor
pop
outsb
adc
mov
int3
sarb
orl
int3
xchg
sahf
inc
imul
fstpt
shrb
ficompl
cmp
fsubs
shl
xor
nop
jl
push
out
mov
or
cmp
pop
add
gs
mov
mov
nop
push
orl
mov
lret
push
mov
ja
out
rep
idiv
shll
cmp
sbb
and
jge
jns
adc
aas
add
rcll
lea
add
jmp
xor
sub
mov
clc
fsubr
push
cmp
add
imul
adc
addr16
insl
xchg
in
mov
popa
jo
and
and
int3
jp
mov
into
or
add
rcrb
inc
xor
lcall
jbe
push
add
mov
dec
lret
mov
cmp
dec
in
dec
or
pshufw
mov
cld
int3
inc
dec
mov
or
test
xor
sbb
sbb
dec
lcall
mov
ljmp
sti
add
jne
cmp
fdivrl
gs
push
repnz
sar
jb
push
mov
je
add
jecxz
inc
dec
jne
pop
inc
in
adc
ds
pop
cld
outsl
outsb
int
adc
cli
push
repz
cmp
pop
adc
repz
je
xchg
fisttps
mov
jmp
pop
popf
lcall
outsb
adc
jne
sub
cld
ret
xchg
jno
mov
xchg
pop
lret
ja
cld
pop
xchg
shlb
mov
stos
dec
or
dec
cmpsl
mov
cmpl
mov
sub
mov
aas
addr16
fnstcw
cmpb
pushf
enter
adc
mov
jl
fistl
daa
inc
int
inc
aam
mov
ss
inc
mov
popa
int
popf
mov
loope
cmpsl
in
jno
dec
mulb
dec
test
mov
add
pop
mov
add
add
sbb
sbb
add
mov
mov
lcall
jnp
pop
adc
ret
mov
push
xchg
pop
int
or
iret
call
test
mov
sub
ljmp
pop
xor
mov
mov
dec
xchg
push
inc
lea
sbb
push
push
stos
jle
or
dec
xlat
inc
mov
adc
std
dec
mov
ret
mov
push
in
ret
mov
dec
mov
std
xorl
inc
sti
sub
fwait
dec
jge
std
pop
mov
mov
or
inc
data16
push
out
pop
in
aaa
jmp
pop
mov
xor
bound
fmuls
jb
adc
xor
cmp
inc
test
add
cmp
int3
les
icebp
jp
fistl
push
gs
icebp
add
mov
nop
pusha
and
pushf
aam
dec
stos
pop
cmp
and
push
adc
push
jmp
mov
outsb
dec
js
pop
pushf
jg
int
dec
push
mov
mov
push
dec
andl
pop
aas
out
xchg
sti
vpavgb
shlb
jmp
mov
jae
pop
mov
cld
and
aad
mov
adc
lahf
jnp
pop
aaa
jg
test
in
cmp
cmp
je
test
ds
dec
push
shl
mov
jnp
fstl
icebp
dec
and
pop
popf
mov
jg
shll
adc
cmp
icebp
inc
shrl
pop
dec
fdivl
in
mov
shll
sub
push
add
pop
scas
int
add
cmpsb
pop
mov
sub
sti
adc
pop
cltd
cmpsb
sbb
jge
imul
insb
in
adc
adcl
mov
xchg
rorl
mov
pop
inc
and
jnp
jnp
xchg
sbb
fcmovbe
mov
subb
jmp
fiadds
cmpsb
repnz
movsl
arpl
xor
or
enter
mov
jl
outsl
jb
sbb
orl
cli
push
add
inc
stos
add
aaa
fnsave
stos
or
iret
push
cmc
xchg
cmpsl
notl
sub
scas
add
mov
xchg
cmp
add
dec
jns
aam
dec
pusha
pop
mov
in
push
mov
je
jl
pop
iret
out
insl
push
setnp
mov
push
enter
adc
inc
in
cmp
pop
push
je
push
and
push
cld
mov
push
repz
push
dec
sahf
cmp
pusha
cmp
push
xor
inc
int
push
cld
mov
lods
ret
lock
sub
jns
arpl
cmpsb
lret
adc
mov
jl
addr16
xchg
test
mov
pop
imul
sbb
out
repz
jnp
xchg
push
mov
mov
xchg
setns
mov
inc
adc
push
dec
mov
popl
pop
ja
cmc
add
mov
mov
add
sti
cmpb
test
inc
mov
into
dec
push
mov
lret
cwtl
jnp
aad
sub
add
dec
js
mov
dec
push
or
jp
in
adc
js
ficompl
sub
mov
sub
out
inc
jge
or
retw
clc
pmaxsw
and
or
sti
insl
cwtl
stos
cmp
mov
add
shrb
and
lock
fsubrl
cmpl
inc
std
jbe
jae
cmp
xlat
push
pop
insb
enter
jb
fs
mov
mov
jnp
lods
aaa
push
dec
pop
and
sub
pop
test
sub
sub
or
push
std
cmpsl
aad
push
cmp
jmp
enter
and
dec
xchg
jge
shr
jmp
test
or
jl
and
pop
sbb
xchg
ss
sbb
xlat
mov
ja
adc
mov
push
or
fwait
xchg
in
inc
or
dec
cmpl
mov
push
dec
and
pop
mov
test
mov
fwait
or
call
push
adc
jge
or
or
and
js
adc
pushf
movsb
or
push
lock
add
sbb
jg
scas
xchg
jnp
pop
fcompl
dec
clc
or
fsubl
pop
dec
dec
mov
inc
mov
pop
push
push
test
sub
addl
mov
fcomi
fbld
xchg
cli
or
cmpsl
sarb
push
xor
xor
pusha
add
inc
fnsave
shrb
fsubl
call
jle
mov
push
dec
cmpl
dec
fsts
lods
loop
popf
and
dec
data16
mov
lret
mov
test
add
cmp
enter
push
jns
push
test
data16
mov
sub
imul
in
dec
adc
inc
aaa
mov
notb
add
lahf
mov
iret
dec
cmp
mov
xor
pop
mov
push
pop
mov
imul
add
daa
jle
mov
mov
fsub
add
dec
clc
rcrb
out
mov
fsqrt
test
cmp
mov
jnp
sbbb
loope
and
daa
lock
add
lods
cmp
outsb
mov
inc
dec
cltd
insl
mov
or
rorb
cmp
in
int3
lret
aas
mov
or
push
xchg
subb
xchg
inc
mov
popf
push
pop
mov
mov
xor
xchg
lret
xor
aaa
push
repz
test
jbe
sub
imul
fwait
push
pushf
cmp
out
imul
sti
dec
ja
and
lods
addr16
adc
test
mov
adc
mov
mov
push
or
popf
cli
inc
cmp
pop
mov
rcll
fs
dec
adc
xchg
jl
push
push
iret
mov
icebp
dec
aam
orb
addl
xchg
mov
jo
dec
add
clc
xchg
mov
push
int
xor
mov
ja
push
mov
int
fst
int
cmp
call
mov
imul
cmp
jmp
dec
push
xchg
insl
or
push
xchg
stos
or
jne
lret
cmp
imul
fsubl
lea
fwait
and
cmpsl
ja
scas
mov
pop
mov
inc
fsts
ds
stos
jg
mov
and
insl
add
add
mov
pop
int
iret
and
sbb
ss
sti
mov
push
xor
dec
mov
and
ja
scas
gs
mov
inc
fmuls
inc
dec
outsl
mov
dec
mov
push
mull
rcrl
mov
mov
mov
fcomip
push
insb
idivb
sub
pop
popa
test
cmp
imulb
sahf
pop
inc
cld
out
loopne
sub
jle
jecxz
rcl
aad
mov
adc
out
sar
jae
imul
movsb
mov
out
inc
dec
pop
aad
add
fisttpll
mov
cld
and
jne
jg
push
stos
xor
xchg
cmp
adc
cld
xor
aad
and
jno
mov
jl
mov
into
sbb
popaw
lret
lds
inc
xchg
xorb
enter
aam
xchg
test
jle
leave
rolb
sub
pusha
subb
sti
dec
push
mov
fmull
cltd
jmp
push
xchg
mov
jno
cmp
fwait
and
lcall
jge
into
mov
mov
ret
fcomip
lahf
imul
aas
mov
insb
les
jmp
stc
rclb
cmp
jno
pusha
and
sti
xor
add
and
fbstp
das
cltd
add
mov
test
and
or
mov
adc
out
movsl
mov
pop
das
jo
pop
les
adc
test
pop
out
test
ficoml
subb
gs
jnp
xor
int3
adc
insb
aam
jbe
or
jnp
pusha
leave
shll
ss
mov
pop
dec
dec
jmp
mov
add
push
cwtl
outsl
shlb
cmp
sbb
stos
imul
int
fs
rorl
mov
fists
popf
int3
push
sub
add
lods
fcompl
sub
or
in
add
stc
in
pop
pop
mov
push
ss
mov
push
mov
aas
cli
es
cmp
mov
jmp
rorb
repnz
fistpl
add
aad
mov
iret
enter
add
sti
push
cmpsb
out
cmp
xchg
adc
sub
dec
lret
jge
int
js
test
out
cmp
push
aas
xchg
add
adc
test
lret
jl
daa
rclb
xchg
jge
xor
orl
add
popa
in
push
lods
xchg
fucomip
stos
les
iret
jbe
jnp
xchg
inc
das
push
jo
mov
pushf
pop
mov
jbe
in
pop
push
or
push
ljmp
rcl
into
adc
ret
push
int
mov
pop
fwait
xorl
stos
inc
stos
dec
mov
xor
in
cmpl
iret
mov
lret
aad
mov
int
test
sbb
xor
push
push
sbb
lahf
add
mov
jl
mov
or
sbb
aad
imul
mov
insl
and
xchg
cld
inc
add
xchg
aam
das
or
sub
ficompl
sti
fucomi
sub
mov
in
cmp
push
xlat
push
inc
push
xchg
jae
movsl
inc
pusha
nop
mov
ror
mov
add
adc
lahf
sbb
aas
jecxz
shlb
sub
ja
and
xor
xchg
fdivs
sub
shrl
inc
aaa
pushf
sub
dec
repz
cmp
repnz
pusha
movsb
iret
lods
repz
stos
cmc
and
and
outsb
cmp
pop
push
les
mull
fidivl
cmp
pop
mov
sbb
or
incl
scas
sti
imul
std
sahf
orl
mov
rorl
orl
xchg
movsl
mov
jg
add
cmp
lcall
mov
cmpsb
pop
lea
xchg
fwait
and
lods
jl
data16
or
pop
sub
subl
cwtl
add
add
inc
add
dec
arpl
push
and
fistl
mov
dec
mov
push
sub
mov
mov
ret
call
push
ds
popf
stc
jae
sar
pop
out
cmp
lock
sbb
jnp
stos
push
mov
mov
cmp
jg
ja
sub
adc
add
sahf
jl
arpl
or
sbb
dec
sbb
inc
xchg
nop
xor
insl
dec
inc
and
je
std
es
orl
push
loope
mov
ja
mov
cmp
popa
dec
sbbl
test
mov
or
shll
test
data16
int3
mov
add
aas
add
sub
and
or
add
and
xchg
adc
mov
sbb
xlat
int3
adcl
and
fcoml
lret
fimuls
std
pop
lea
pop
xor
mov
inc
xchg
mov
dec
adc
mov
mov
hlt
inc
stc
xchg
jnp
cmc
and
cmp
xchg
andb
push
das
insl
cli
shr
std
inc
popf
inc
lods
pop
les
push
dec
sub
sbb
or
mov
push
mov
or
xchg
lahf
adc
jle
mov
jp
pop
cmpsl
insl
xchg
lcall
push
pop
xchg
jb
dec
pushf
fdivl
pop
xchg
push
popf
sti
lds
scas
scas
sbb
cld
imul
fstl
lods
xor
int
cmpl
lret
mov
cld
outsl
sbb
add
out
adc
dec
push
leave
sbb
daa
cmpsl
adc
fcmovne
in
fcmovb
imull
stos
inc
push
inc
lods
and
hlt
mov
pop
fwait
int3
rcrb
cmp
xchg
mov
sub
fdivp
addb
adc
out
add
push
adc
std
inc
pop
push
add
jns
jbe
jae
pop
mov
fisttpl
leave
addr16
cld
fldcw
fcmovnb
mov
cmp
into
lds
push
test
dec
pop
flds
fwait
push
orb
ljmp
xchg
movsl
mov
dec
fiaddl
lret
mov
push
dec
push
push
inc
adc
dec
lods
insl
dec
dec
imul
push
dec
xor
lods
adc
dec
mov
packsswb
and
and
push
xchg
inc
jnp
mov
cmp
scas
jmp
in
pushf
and
mov
stos
mov
mov
test
int3
add
imul
decl
or
pusha
mov
scas
jmp
cmpsl
in
repz
pop
jg
insl
test
lods
mov
cmp
ja
jl
insb
mov
cmp
mov
mov
popf
adc
mov
scas
and
cmp
mov
nop
orl
nop
sbb
mov
lret
in
jae
jl
inc
orl
jecxz
push
insb
sbb
ret
sbb
and
shll
lret
cs
arpl
repz
dec
out
fwait
cmp
jb
leave
jns
xor
xor
clc
aas
sbbl
adc
adc
repnz
shlb
xor
push
incl
cmpl
inc
int
xchg
es
hlt
add
in
dec
sbb
loope
or
sub
fdivl
pop
xor
inc
dec
push
adc
daa
jbe
es
mov
jge
shrb
jbe
or
imul
jnp
inc
mov
jl
add
fcom
mov
mov
int
mov
xor
sub
imul
xchg
xor
ficomps
icebp
outsb
dec
movl
rcrl
test
rcll
bound
push
xchg
xchg
jnp
outsl
push
push
push
sbb
sti
cld
fidivrl
icebp
mov
mov
jns
jb
add
inc
mov
mov
rcll
jnp
rorl
les
xor
or
sti
imul
xchg
or
cwtl
mov
sti
mov
add
test
lret
and
ror
push
lcall
arpl
mov
cmp
sbb
in
hlt
sti
jne
or
pop
cmp
xlat
shr
push
xlat
dec
and
push
fs
and
fldt
lods
pop
ret
outsl
push
or
jecxz
xchg
mov
pop
mov
sahf
mov
mov
or
mov
arpl
push
adc
adc
fmull
sarl
jle
mov
rep
add
or
movsb
jnp
jecxz
ja
aam
push
aad
adc
pop
mov
jnp
imul
iret
mov
sbb
jg
lock
dec
mov
repnz
in
sbb
cmp
pop
add
mov
sbb
pop
call
loope
std
aaa
mov
push
mull
les
shll
xchg
shld
lds
dec
mov
mov
les
lea
jb
ret
sbb
test
cltd
push
fldl
xor
mov
xchg
fistpll
mov
das
jmp
dec
pop
sbb
mov
cmpsl
xlat
in
outsl
vmwrite
int
sub
lock
xor
mov
mov
out
pop
cld
gs
cli
mov
out
cmpb
ljmp
xchg
mov
out
sbbb
cwtl
sti
shll
mov
cmpsb
popa
push
repz
call
mov
or
je
dec
int3
push
arpl
or
mov
mov
pop
shlb
sbb
or
mov
cmp
sbb
addr16
stos
ds
bound
push
out
cli
or
inc
xchg
popa
lcall
loopne
ret
sub
call
jge
jl
hlt
add
xlat
lock
aad
adcb
cmp
jmp
jns
rol
pop
and
int
push
jae
mov
cwtl
add
mov
jg
xchg
jno
pop
cmpsb
sbb
mov
cmp
ds
add
mov
dec
dec
mov
xorb
fdivrs
sahf
out
sbb
jo
push
xlat
cmp
mov
insl
sbb
repz
inc
std
into
add
rcll
cltd
cli
sbb
cmp
jge
ret
sbb
cmp
push
xorb
mov
mov
cltd
fdivl
pop
int3
sbb
fidivrl
test
cli
add
adc
int
pop
into
cmp
pop
movsl
arpl
xchg
mov
in
lret
add
pop
dec
divl
cmp
sbbb
dec
fcmovnu
cs
sti
int3
in
push
inc
and
ficomps
jl
push
dec
js
dec
inc
lcall
sahf
incb
test
jp
or
xchg
cs
xlat
adcb
push
mov
stc
sbb
mov
cmc
xchg
repz
rcrb
or
pusha
adc
nop
push
mov
mov
mov
mov
dec
data16
in
or
lods
sub
and
ss
mov
or
cmp
push
subl
xlat
repz
mov
xchg
mov
mov
jg
cmc
mov
lcall
jns
popf
sbb
dec
ret
leave
mov
ret
jnp
xchg
jae
mov
mov
sbbb
iret
orl
push
push
fcoml
mov
mov
sub
nop
push
mov
popf
ds
cld
pop
mov
dec
mov
or
add
out
testb
jne
shrl
popf
xchg
test
cmpsb
mov
mulps
js
push
mov
iret
shl
jmp
adc
cmp
js
pop
pop
sbb
imul
pop
jnp
add
cld
mov
add
and
add
stc
mov
mov
mov
add
jbe
jecxz
fisttpl
mov
into
push
mov
inc
fwait
cltd
enter
add
push
imul
test
or
fisttpll
cmp
subl
mov
cmpl
ret
pop
out
mov
push
fisubrl
ficoms
mov
aam
in
fsubp
push
adc
pop
cwtl
in
cmp
fnsave
adc
dec
or
jle
mov
pop
or
shl
cs
mov
inc
inc
pushf
je
stos
xchg
mov
vpunpckhbw
inc
xchg
jnp
rcll
push
mov
dec
jge
sbb
add
int
in
and
dec
scas
xor
pushf
addl
loop
pop
movsb
sar
sub
cmpsl
pop
aad
xchg
push
test
jl
add
dec
dec
push
push
jmp
dec
sbbl
xchg
lea
cwtl
lods
xor
mov
outsb
cmp
push
push
adc
cmp
int
mov
insb
mov
into
shl
mov
gs
test
or
insb
incb
xor
es
pushf
movsl
ficompl
adc
add
lods
sub
dec
or
mov
pushf
cmp
pop
int
inc
js
ja
push
outsl
add
test
sub
lods
mov
inc
jmp
outsb
mov
xor
sub
or
cmp
mov
jbe
add
inc
pushf
or
hlt
test
movsb
test
loopne
add
mov
es
pop
cmpsl
jg
or
xchg
mov
inc
mov
sub
bound
into
test
jae
mov
inc
cmp
push
ss
sbb
cmpsl
push
mov
mov
fwait
in
iret
popa
rorl
xor
xchg
inc
mov
mov
hlt
jp
mov
jl
inc
dec
jnp
push
arpl
xchg
or
testl
cltd
lahf
xlat
out
outsb
pop
add
push
adc
jecxz
cmp
clc
jno
mov
xor
daa
inc
test
jne
mov
cmp
cmp
dec
sub
shl
sbb
jns
xchg
lret
cmp
mov
sub
nop
jp
xchg
sbb
jns
repnz
in
imul
aam
mov
cmp
scas
mov
fisubl
adc
and
imul
aas
mov
fldenv
les
or
pop
and
adc
aas
aaa
outsl
ret
les
pop
sub
push
lods
int
fwait
jmp
pop
or
lods
int3
hlt
inc
mov
jne
jge
fisttpll
subl
pop
sbb
xchg
lahf
mov
loopne
aaa
dec
mov
add
inc
int3
sub
cld
or
jns
push
jmp
dec
shl
cmp
xor
lds
cmc
mov
cmpb
add
mov
imul
inc
push
xchg
dec
leave
lcall
mov
push
cmp
dec
pop
jmp
cmp
movsl
xor
sub
pop
pop
imul
in
daa
add
jno
xchg
adc
sti
mov
adc
adc
and
and
es
int
fldl
cmp
push
sbb
and
or
mov
pop
por
sti
addr16
into
bound
and
xor
mov
add
jl
loope
bnd
cmp
mov
ss
lcall
xor
cmpsb
movsb
add
orl
std
and
mov
roll
cmpsb
mov
cmp
cmpsl
ds
adc
sub
repnz
xchg
pop
loop
dec
ret
sarb
push
add
inc
push
sbb
sbb
sub
inc
aad
and
add
cld
movsb
fistpll
mov
insb
inc
xchg
sbb
sbb
pushl
movsl
cmpsb
sub
testb
les
jnp
inc
mov
dec
mov
outsl
daa
dec
test
inc
pop
mov
push
add
stos
xacquire
sbb
and
sbb
je
ja
imul
sub
jae
sti
ret
xchg
pmuludq
jmp
insb
mov
pop
jne
mov
pop
cmp
or
mov
aaa
mov
jmp
sti
js
mov
mov
leave
mulb
mov
fwait
mov
pop
mov
mov
mov
cmp
popf
jnp
xlat
jae
jne
push
in
sbb
mov
stc
xor
and
xor
stos
movsb
jnp
jle
adc
int3
mov
popf
pushf
sub
mov
mov
insl
adc
push
mov
ljmp
rcll
addb
add
cltd
cmpsl
out
and
dec
test
add
mov
push
fisttpl
mov
mov
mov
push
in
int
adc
and
sti
in
pop
mov
movsl
jge
scas
add
push
cld
rorl
ja
popl
mov
push
ficomps
sub
cmp
fcoml
scas
pop
mov
ret
int
and
leave
movsb
or
push
fidivrl
sti
divl
jmp
push
scas
pop
inc
or
or
into
push
push
pslld
push
ds
lods
orl
fcoms
xchg
popf
stc
mov
repnz
dec
bound
dec
into
movsb
pop
xor
adc
push
aas
std
push
mov
xchg
jae
subb
mov
pop
pop
dec
mov
insb
add
std
push
imul
pop
cmp
adc
fdivl
pop
push
xor
test
aad
xchg
and
adc
jge
push
mov
cmpl
scas
pop
or
pop
lds
stos
sbb
aam
sub
or
xor
lcall
dec
int
arpl
push
int3
xlat
fisttps
pop
jb
jg
cmp
inc
hlt
popa
push
stos
in
gs
sbb
mov
sbb
paddw
mov
stos
cld
lcall
sub
mov
lea
cwtl
lret
cmpsl
dec
lods
xchg
dec
shl
imul
xor
add
int
push
stos
rolb
mov
mov
xor
loopne
std
pop
xor
mov
push
test
ds
sub
jno
adc
xor
mov
std
or
rolb
aas
lcall
pop
mov
lods
fwait
fwait
lret
lods
orb
push
jnp
and
int
cld
mov
xor
mov
push
int
add
jb
mov
test
les
js
add
and
pop
pop
insb
or
sub
jns
out
push
or
push
pop
and
inc
movsb
in
sti
dec
and
mov
pushf
mov
std
popl
add
icebp
mov
adc
rorl
cmp
sbb
insl
arpl
mov
push
fmuls
repnz
push
jmp
cmp
mov
inc
in
stos
mov
inc
jl
jnp
mov
push
sbb
xchg
add
fisttpl
mov
mov
add
sti
adc
pop
push
popa
push
push
subl
and
push
cs
dec
daa
iret
pop
jl
add
xorl
xchg
xor
arpl
pop
in
imul
rol
cmp
sti
in
outsb
sub
cmp
mov
mov
xchg
cmpsb
mov
cwtl
shl
jne
test
sbb
inc
add
mov
pop
testb
xchg
xchg
xor
jp
or
orl
cmp
push
ret
jb
jnp
xchg
jne
or
xor
xchg
fs
shlb
dec
dec
dec
pop
repz
xor
adc
addr16
cld
lahf
mov
dec
jmp
out
sub
cmp
aas
mov
loope
mov
jns
adc
mov
push
rolb
mov
cld
stos
xchg
aad
mov
mov
mov
stc
aas
ljmp
cmp
mov
cmpl
mov
es
sbb
mov
dec
mov
inc
dec
mov
cmpsl
inc
gs
mov
jle
mov
loope
mov
jp
inc
dec
or
sti
sub
mov
xchg
mov
dec
cmp
sti
imul
cmp
inc
adc
xchg
outsl
xlat
pop
push
lods
hlt
dec
dec
int3
cli
inc
push
xor
or
cmpxchg
mov
push
xor
dec
cmpsb
icebp
lret
into
sti
xor
xor
stc
xchg
mov
insl
xlat
dec
arpl
hlt
imul
enter
popf
int
loopne
sti
xchg
jne
mov
nop
adc
inc
pop
test
sarb
jnp
pop
sbb
push
iret
pop
jge
xchg
and
nop
dec
mov
mov
inc
pop
pop
push
push
mov
push
daa
or
xor
fildl
fcomi
mov
inc
stos
or
pop
imulb
inc
jg
inc
pop
in
mov
mov
and
stos
mov
sbb
lcall
ror
jp
xchg
xchg
push
int
rcrl
imul
test
dec
aad
inc
dec
adc
jmp
fnstsw
mov
sbb
imul
xor
cmp
add
dec
fnstsw
out
jl
xor
into
or
cmp
cli
ret
rcr
lods
jae
mov
push
rorb
add
push
fs
adc
dec
fistpl
xchg
push
mov
popa
pushf
adc
in
jl
inc
sbb
insb
mov
jg
jg
movsl
rorl
mov
orb
sub
jno
mov
cmp
xor
mov
xchg
or
mov
aam
lret
jo
les
cmpsl
lahf
push
add
out
nop
add
mov
xor
repz
and
stos
fwait
nop
xor
jle
or
xlat
sbb
jno
or
dec
inc
jp
jno
jmp
sbb
insl
and
cmpsl
mov
sbb
mov
push
mov
fwait
add
ljmp
push
mov
ret
sti
sub
mov
add
rcrb
aad
lock
mov
xor
in
popa
loop
sbb
push
ret
push
jle
scas
insl
cli
xchg
in
sbbl
jecxz
or
xor
sbb
jns
in
arpl
cld
jns
mov
int
rclb
xor
iret
push
sti
insl
pop
jmp
lods
dec
push
and
dec
into
or
mov
adc
cmp
dec
insl
ds
mov
dec
aas
sti
push
std
jnp
mov
repnz
pop
push
js
inc
jb
or
dec
mov
popa
rorb
lea
jo
or
insb
lock
sbb
push
loop
cmp
dec
sub
sahf
inc
pop
dec
btr
iret
test
imul
out
fwait
push
into
add
insb
adc
xchg
sbb
enter
pop
scas
std
orl
add
mov
repnz
push
mov
xchg
jge
xchg
mov
dec
sub
sub
loop
push
jnp
popf
shll
decl
in
cmp
push
dec
pop
mov
mov
lcall
aaa
jbe
ret
pop
jbe
add
xchg
jge,pn
cmp
xor
xor
jno
adc
jne
cmp
push
cmp
call
lock
or
bound
dec
sbbl
sub
sbb
aad
and
jo
sub
aad
dec
mov
leave
fwait
dec
add
ficoms
addr16
repnz
cld
lahf
or
inc
sti
hlt
mov
adc
in
xchg
in
ss
sub
sub
fstpl
mov
jmp
dec
mov
mov
mov
fdivrl
out
jl
subb
data16
sbb
fbstp
pop
das
mov
test
test
adc
stos
pop
jno
ss
fwait
addr16
addb
pushf
jecxz
jmp
pushl
cmp
ja
push
sub
mov
pop
out
mov
mov
dec
sti
push
ret
jmp
std
push
ret
test
pop
or
mov
jno
sub
or
pop
xchg
stos
cld
cltd
and
sub
inc
incl
popa
cmpsl
jmp
in
sbb
imul
mov
inc
cmp
mov
rclb
aaa
push
pop
xchg
fwait
cmp
cmp
mov
scas
and
repnz
cmp
jo
adc
pop
sub
sbb
jl
mov
mov
adc
fdivrl
call
inc
xor
mov
mov
xchg
int
insl
movsl
test
pushf
incl
sti
and
xor
sbb
mov
cmp
fcoms
ret
pop
hlt
add
ret
leave
adc
imul
adc
aad
sub
pop
jae
cwtl
lods
adc
lret
sub
push
das
imul
lret
adc
xor
lcall
popf
ljmp
or
jae
lret
push
cmp
int
fidivrs
imul
js
in
enter
aaa
push
add
pop
mov
mov
xor
ljmp
mov
or
mov
mov
cmp
dec
js
loopne
add
cmpsl
testl
rcll
push
adc
cli
xlat
test
cmpsl
int
inc
xor
push
shrb
rcrb
es
aam
es
lods
jg
push
sbb
adc
inc
into
inc
pop
sub
in
test
js
les
imul
mov
add
cmc
sub
mov
sbb
cmp
jnp
pop
pop
mov
imul
adc
sbb
insb
int
stos
int3
dec
mull
gs
push
pop
aaa
dec
mov
clc
loopne
sti
xor
add
cmpsl
fidivs
jnp
pop
push
add
adc
ja
packssdw
dec
jl
mov
stos
rol
cmpb
jecxz
sbb
stos
dec
jo
pop
leave
push
nop
in
mov
sub
fists
fs
adc
dec
imul
icebp
xchg
jo
stc
or
ja
negl
sbb
push
loopne
sbb
push
loopne
or
mov
mov
les
fmul
vmptrst
lods
xchg
pop
outsl
dec
ss
lds
xchg
mov
je
jnp
inc
negl
in
mov
or
add
adc
divl
xor
stc
rcrl
adc
jns
add
cmp
loope
lea
movl
pop
cmp
cli
cmpsl
loopne
cltd
xlat
mov
ljmp
pop
fiadds
jns
popa
mov
in
clc
cld
dec
int
xchg
push
inc
mov
shrl
and
sbbb
add
cmc
jmp
inc
push
rcrl
insb
cld
xchg
scas
xchg
fcmovb
test
lret
push
dec
cmpsb
xor
jne
aam
in
into
jnp
lsl
mov
adc
mov
test
xor
adc
dec
dec
ficompl
add
and
aas
inc
xchg
ret
mov
dec
iret
and
iret
insl
lock
in
dec
ficomps
stos
pop
mov
scas
stos
lret
cmp
call
popl
mov
pushf
lods
xchg
inc
popa
or
mov
dec
jle
dec
pop
mov
arpl
in
or
push
mov
mov
inc
imul
dec
jne
mov
dec
test
hlt
xchg
jne
out
lret
mov
mov
jg
mov
adc
mov
cld
or
outsl
jmp
ds
int3
mov
inc
mov
inc
popa
xchg
cmpsb
scas
pop
dec
mov
nop
ljmp
dec
dec
mov
jnp
xchg
dec
lods
or
mov
adc
add
insb
stos
sti
arpl
std
nop
cltd
mov
pop
jle
adc
cwtl
push
jl
leave
lret
call
sti
xlat
jp
push
mov
jne
or
imull
push
nop
int
push
jnp
adc
shlb
stos
movsb
test
pusha
cs
mov
or
sbb
adc
push
imul
cmp
and
cmp
fstp
and
push
push
int
movsl
xchg
iret
xchg
add
mov
or
dec
ja
xchg
jnp
jl
xor
jo
sub
mov
leave
jnp
pop
cmc
mov
les
add
jbe
mov
mov
add
dec
mov
gs
or
les
xchg
les
mov
xor
je
jo
loop
sbbl
imul
decb
fwait
sbb
xchg
mov
div
dec
ret
cli
cli
dec
dec
mov
mov
push
loop
popf
inc
mov
ficoms
dec
cmp
in
xchg
rcrb
xrelease
sub
or
dec
inc
jnp
pop
jae
clc
inc
sub
fwait
mov
sub
fcmovne
mov
sub
sti
mov
sub
cmpb
dec
nop
aas
push
mov
pop
cmp
xor
sub
cmc
jns
mov
jle
pushf
jae
dec
mov
pop
dec
mov
pop
inc
jne
imul
mov
xchg
pop
pusha
int
sahf
in
into
adc
lods
lahf
notb
shl
hlt
test
jge
cwtl
cmp
pop
adc
ret
cmpsl
cld
mov
pop
or
lock
push
dec
std
mov
adc
hlt
add
not
lahf
push
mov
lock
mov
int3
push
or
fiadds
dec
cmp
sti
cmp
int3
call
cmp
adc
push
mov
cmp
aam
andps
cld
mov
pause
xchg
jge
dec
in
negl
fdivl
in
dec
ja
push
sbb
hlt
push
jecxz
aas
jo
jns
cmp
xchg
cmp
adc
push
fdiv
ja
push
adc
mov
pop
lods
fwait
xchg
or
mov
cmp
movsl
dec
fs
dec
push
mov
jmp
pop
add
mov
pusha
addb
imul
mov
cmc
aad
xchg
pop
gs
andl
in
ret
mov
jo
jmp
lret
mov
mov
cltd
sbb
xchg
lods
sti
and
dec
fmull
inc
push
pop
fs
pop
mov
sbb
cmp
push
push
sbb
xor
xor
enter
mov
out
sub
jge
in
jle
inc
push
hlt
and
fists
insl
add
mov
and
in
in
loope
stc
pushl
mov
jo
iret
inc
jg
lcall
push
test
adc
pop
lahf
out
aaa
mov
sbb
sub
loop
dec
xchg
out
sbbl
dec
movsb
aad
pop
adc
pop
lds
dec
jecxz
xchg
mov
and
sbb
imul
cmp
pushf
inc
ds
fcoms
cwtl
mov
inc
add
icebp
std
push
loopne
cmp
jb
int3
inc
cmp
popa
dec
out
out
bound
xorb
push
test
xrelease
loop
push
mov
xchg
test
data16
sub
add
mov
mov
mov
sub
dec
pushf
mov
mov
imul
popa
or
or
mov
cmp
mov
js
or
cmp
push
add
sub
test
xor
inc
pop
ds
cld
mov
mov
xor
dec
mov
testb
sbb
cmc
das
dec
pop
rcl
aas
dec
inc
std
cmp
nop
push
les
xchg
add
int3
inc
ror
xchg
jae
add
inc
jecxz
cld
test
adc
mov
shlb
jno
mov
push
jae
popf
xor
iret
xlat
mov
sbb
aaa
and
and
sub
sbb
mov
into
icebp
outsb
sbb
lods
in
pop
pop
push
mov
test
dec
cmp
test
jbe
mov
adc
roll
pop
jno
aaa
jl
fistl
pop
std
push
or
outsl
pushl
gs
xorb
xchg
jg
push
dec
pop
sbb
mov
es
mov
subl
test
orb
push
dec
test
jmp
mov
sti
test
dec
lcall
inc
xchg
jmp
int
in
cld
xor
push
pop
jb
sbb
in
mov
ret
sarb
add
xchg
push
sahf
or
std
sub
push
jl
push
and
inc
rclb
inc
dec
jl
pop
push
xchg
sti
stos
icebp
in
ss
cmp
push
sub
lock
jle
test
mov
sub
pop
dec
cmp
xchg
inc
int
mov
sti
or
mov
ret
dec
ret
push
int
sbb
pushf
jge
scas
decl
cld
push
inc
dec
xchg
jnp
out
test
sbb
dec
sub
lods
mov
call
adc
aaa
sbb
xor
sti
aaa
xchg
pop
scas
fdivrl
add
insb
sti
xchg
or
dec
sarl
imul
add
mov
mov
mov
push
dec
mov
rolb
push
sbb
rcl
or
add
mov
inc
mov
sub
xchg
sub
testl
and
push
sub
insl
aam
jp
sbbl
lea
in
add
aam
in
xchg
jmp
mov
mov
mov
fbstp
inc
cld
iret
lock
cmp
je
dec
pop
pshufw
pop
add
dec
lods
jmp
adc
and
mov
fdivl
pop
mov
lcall
sub
dec
dec
push
xor
mov
mov
scas
sub
ljmp
inc
shl
mov
andl
int
movsb
adc
les
xchg
ret
cmp
leave
in
fs
mov
mov
mov
clc
push
dec
mov
or
testl
lea
cmp
or
inc
inc
shrl
xchg
inc
andl
or
dec
or
and
lcall
sub
outsl
and
push
hlt
sbb
push
mov
lahf
add
mov
push
shlb
push
stos
push
xorl
outsl
scas
stos
lds
sbb
mov
pop
cltd
imul
jnp
xchg
xchg
mov
sub
or
in
scas
das
cmp
test
pop
dec
lods
sbb
fs
inc
inc
mov
mov
sub
aaa
orl
jb
out
int
lods
jnp
cmpsb
sub
mov
xchg
adc
je
loopne
int
adc
jl
or
fneni(8087
mov
cld
push
mov
call
lret
inc
stos
repnz
fdiv
add
push
push
sbb
pushf
jl
lods
into
repnz
cmp
sub
popf
cmp
pop
push
cli
lret
xor
and
mov
mov
mov
gs
je
dec
mov
fsqrt
push
pop
lock
movsl
mov
xorb
pop
mov
mov
adc
das
clc
adc
lret
movsb
out
mov
mov
enter
push
sbb
mov
adc
hlt
xchg
test
mov
jg
loopne
outsl
jle
dec
cmpsl
or
pop
js
popa
divps
pusha
imull
mov
cmc
aad
pop
int
filds
mov
pop
mov
sbb
imull
mov
int
dec
mov
out
cmpsl
scas
mov
xchg
cmc
or
sbb
cmp
mov
int3
fisttps
dec
in
push
or
flds
pop
sahf
iret
mov
sbb
cmp
lods
enter
xchg
jnp
pusha
add
cli
imul
xchg
pusha
pop
mov
shrb
dec
push
jae
arpl
sbb
xchg
int
aam
pop
imul
ss
jne
inc
int
mov
fisttpll
xchg
ffreep
and
nop
mov
test
cmp
mov
xor
add
out
pop
rcll
mov
sub
pop
jmp
jb
jge
pop
shl
jecxz
and
loope,pt
lods
adc
cmp
inc
inc
out
icebp
push
or
pop
mov
jecxz
pop
out
mov
push
mov
cmp
cmp
popa
sahf
xchg
push
mov
sub
push
jp
mov
icebp
mov
lret
lcall
out
test
fstpt
repnz
mov
jl
jbe
addr16
fcompl
mov
mov
sbb
cli
idivb
mov
scas
push
wrmsr
jae
add
stos
push
fwait
and
scas
insb
pop
cltd
push
or
inc
inc
add
push
mov
cld
outsb
fists
lcall
stc
stc
hlt
fnstcw
addl
mov
lahf
lcall
repz
jnp
fstpt
pop
adc
dec
sub
cli
sti
int3
cltd
outsl
mov
jl
adc
push
pushf
cmp
or
push
faddl
pop
insl
and
cmp
das
jnp
or
add
sbb
ret
lahf
jge
mov
cmp
push
sbb
mov
xchg
jmp
jl
and
ret
loopne
pop
test
pop
pop
iret
mov
pop
in
add
cmp
jp
cmpl
and
scas
jnp
xchg
add
mov
pop
sahf
mov
xor
mov
jns
popf
mov
lock
lds
push
iret
cmp
mov
or
cmpsl
sti
das
add
loope
xchg
mul
cmc
inc
adc
adc
xchg
xor
jb
mov
pop
jmp
cmp
jl
repz
bound
jecxz
scas
data16
cli
push
mov
pop
mov
mov
ljmp
sar
imul
dec
push
xchg
filds
mov
xchg
push
fwait
scas
pop
bound
cmp
cld
or
iret
sbb
aas
push
nop
xor
inc
dec
adc
inc
push
test
inc
int
xchg
cwtl
mov
or
ret
pop
pushf
xor
repz
pop
int3
mov
lock
in
arpl
push
je
aam
arpl
mov
xchg
aas
xor
and
push
ret
dec
and
pop
repz
out
push
das
jno
xor
cmp
mov
les
xchg
pop
mov
frndint
aam
aam
sti
cmp
xor
aad
aas
push
lret
dec
jns
xchg
inc
sbb
aam
cmpsl
cwtl
sub
incl
pop
fstpt
mov
cmpsl
pop
sbb
mov
movsb
sbb
lret
les
cld
fs
int3
xchg
xchg
jno
mov
incb
sahf
adc
mov
pop
xor
sbb
sub
stos
add
jecxz
pushf
fwait
call
inc
push
push
add
out
push
dec
sbb
jno
mov
lret
cmp
mov
mov
gs
into
rolb
popf
or
xor
cld
jge
sahf
sti
xchg
cmp
push
ss
fcmovnu
lahf
popa
dec
clc
cmp
fidivrl
dec
bnd
mov
in
fwait
cmpb
movsl
mov
jge
or
and
adc
and
dec
jecxz
into
adc
jb
sahf
or
adc
lret
aas
push
push
std
inc
in
jecxz
push
insb
rorb
out
fwait
pop
scas
sbb
inc
pop
push
xchg
aas
fists
icebp
dec
dec
or
jmp
loope
aam
jmp
sub
shrb
mov
jge
push
sti
dec
xchg
lahf
iret
cmp
pop
fisttpll
stos
push
ljmp
leave
push
rcrb
or
dec
push
pop
push
imul
add
cmp
enter
jecxz
dec
push
xchg
mov
std
pcmpeqw
loopne
aam
je
aad
push
xor
mov
insb
pop
mov
stos
xchg
mov
leave
xchg
cmp
and
stos
adc
or
test
pop
mov
xor
cmpl
push
sub
jns
or
mov
sti
insl
outsl
mov
in
std
mov
call
stos
or
sbb
push
fidivrl
dec
xchg
and
sub
stos
mov
insb
rorl
jecxz
xor
lret
ret
test
fwait
push
ret
or
pusha
mov
pop
jl
stos
ror
test
mov
pop
or
lahf
lods
pop
inc
dec
mov
xor
lret
flds
std
mov
xchg
sub
sub
xorb
cmp
push
cwtl
mov
inc
jle
push
mov
fcmovnbe
push
adc
push
and
push
pop
jge
es
mov
shrb
xchg
jg
iret
inc
hlt
nop
rcrl
pop
dec
dec
cmp
push
xchg
es
cmc
inc
push
cs
outsl
popa
pushf
int
lods
fbld
insb
xchg
xor
mov
gs
cmp
sti
cmp
shlb
fstpt
or
aaa
lahf
sbb
cltd
cwtl
outsl
or
push
outsb
add
jl
or
mov
test
cltd
or
cmp
push
and
hlt
adc
jnp
fmuls
jg
jle
rorl
inc
jne
in
dec
aam
cmp
lret
inc
cmpsb
xor
sahf
dec
adc
xchg
decb
dec
je
movsb
cmp
loopne
lds
sti
pop
xchg
pop
mov
fiadds
ja
jle
xchg
out
dec
mov
das
adc
outsl
sbb
xlat
in
loope
fstl
sbbb
pop
das
pushf
push
out
adc
sbb
lea
pop
dec
jmp
xchg
cld
stos
subb
pop
and
xchg
int3
sahf
test
xchg
dec
mov
rcrl
fwait
xchg
ret
gs
or
jb
dec
fisttps
ret
int3
insl
push
mov
push
int
cld
add
sbb
mov
jnp
and
inc
aas
push
mov
fs
inc
jns
mov
mov
dec
pop
decb
pop
call
push
or
test
divl
mov
aas
cmc
or
mov
cmp
jg
lea
cmpsl
ja
pop
sbb
push
aad
inc
testb
movsl
pop
daa
test
or
imul
in
lea
into
clc
pop
insl
jp
notb
mov
add
jno
scas
mov
mov
imul
cld
fistpll
mov
mulb
fwait
mov
mov
inc
xchg
fwait
xchg
lods
xor
daa
nop
stos
jae
jnp
jge
push
push
loopne
rcl
sbb
pop
rorl
sahf
or
mov
pop
jae
in
pop
xor
lods
les
pop
inc
sbb
rorb
cmp
ret
add
ficomps
cld
pop
fwait
sbb
mov
push
xor
popf
lods
inc
and
mov
pop
push
mov
pop
test
mov
jg
xchg
cmc
jo
adc
repnz
cmpsb
push
rcrb
add
mov
pusha
sub
mov
dec
pusha
sub
ja
mov
notl
mov
jle
mov
xor
imul
mov
or
mov
cld
out
mov
cmp
lret
inc
fdivr
repnz
sete
and
out
or
in
mov
inc
pop
jae
cmpsl
jnp
out
dec
imul
mov
adc
sbb
jae
pop
int3
sbb
mov
mull
add
or
lret
daa
lahf
inc
ja
cmc
sti
mov
in
scas
cmp
add
push
pop
fldt
sbb
push
sub
or
xor
nop
outsb
ficoms
cwtl
in
push
or
in
mov
pop
xchg
or
lods
js
cmp
or
outsb
nop
mov
addr16
mov
ret
dec
mov
test
nop
xor
cmp
and
cmc
outsl
mov
inc
int
call
hlt
push
mov
aad
or
data16
mov
inc
push
fimuls
testl
or
inc
sub
add
lods
xchg
addr16
stos
and
cltd
pop
divl
mov
cmp
sbb
shlb
mov
sub
clc
push
mov
decb
pushf
sbb
xchg
sub
data16
or
je
add
add
lcall
fs
shlb
dec
popa
mov
icebp
leave
lret
sti
outsb
push
and
inc
rorl
fs
ficomps
mov
lcall
jnp
xchg
jne
push
imul
xchg
movsb
jnp
fimull
int
sub
ss
push
mov
filds
sbb
push
adc
dec
inc
jle
rol
xchg
test
jg
outsb
mov
dec
adc
ss
pop
mov
inc
fidivrl
sbb
jnp
pop
adc
rorl
mov
dec
mov
out
rcll
test
cli
insl
stos
jnp
mov
aas
ljmp
and
into
mov
sub
add
sub
xor
sbb
fiadds
into
inc
aas
push
mov
or
jge
push
cwtl
cli
js
subl
roll
or
push
shl
pop
rorl
xor
fdivr
inc
mov
pusha
inc
sub
jmp
int
cmpsl
data16
push
dec
decl
cmp
fwait
cld
aam
push
mov
test
int
gs
mov
push
sbb
adc
je
rcl
jnp
pop
xchg
jle
add
jno
sbb
cwtl
xchg
cs
push
mov
xchg
pop
shlb
mov
push
jne
push
daa
movsl
mov
fsubrl
pusha
mov
jno
push
sub
adc
push
and
adc
mov
arpl
xchg
sub
xchg
ss
pop
ret
inc
aad
mov
or
cltd
xchg
mov
dec
loope
jnp
add
cltd
sub
mov
sub
add
jnp
sahf
push
in
rcr
pop
movsb
pop
cmp
mov
mov
dec
cltd
cwtl
into
ret
scas
cmc
inc
adcb
or
imul
lret
jae
add
or
or
into
xchg
mov
pop
and
aad
pushl
inc
add
jbe
cmp
jo
test
lods
add
scas
roll
jnp
shll
cmpl
mov
sub
push
cmp
mov
jle
mov
cli
sbb
lcall
push
andl
or
arpl
pop
sbb
cmp
xchg
xor
and
mov
mov
in
in
push
pusha
sub
mov
lock
add
rorb
loopne
fistps
rolb
sti
ljmp
pop
leave
imul
fdivrl
or
xchg
stos
xchg
mov
aaa
shrb
lea
pop
loop
pushf
add
dec
or
addr16
add
sahf
sub
mov
outsl
dec
cmp
cld
imul
adc
in
popf
xchg
shlb
dec
call
push
ja
sub
adc
rorl
aam
jnp
aad
les
mov
mov
addr16
push
mov
mov
sahf
rolb
into
pop
aam
mov
loop
aaa
out
cld
pop
xor
int3
sbb
or
add
hlt
push
or
cmp
aaa
aas
out
pop
xor
cmp
adc
adc
lods
pop
or
and
inc
sbb
loop
xor
mov
lea
mov
add
add
push
mov
adc
in
nop
stos
rorb
jbe
dec
cmp
pop
loope
push
insb
stc
stos
sahf
shll
std
and
sub
push
je
fsin
jmp
or
ret
xchg
dec
js
test
cld
mov
int3
mov
fwait
inc
scas
out
repz
sti
std
mov
std
cmc
leave
subb
cld
aad
je
mov
inc
xchg
aaa
pusha
lods
mov
das
mov
or
push
out
push
clc
add
int
jnp
sub
jmp
or
lock
lcall
xchg
pusha
int3
mov
or
outsb
xchg
scas
fwait
testl
add
jnp
mov
stos
cmp
negl
mov
mov
push
cld
jns
std
xor
addr16
mov
pop
adc
repnz
push
or
addr16
push
cld
pop
mov
insl
cld
push
test
sbb
xor
shl
jbe
sti
test
xchg
out
add
cld
push
jno
dec
les
mov
in
mov
pslld
jnp
add
insl
mov
mov
xchg
xchg
int
cmp
mov
loopne
sbb
idiv
rcrl
push
add
shll
icebp
mov
pop
inc
push
int3
and
jae
sub
lcall
jg
mov
inc
cmp
mov
lds
int3
cmp
dec
out
lcall
mov
das
in
notl
mov
lds
and
sub
lds
cld
ss
jae
mov
orb
mov
sti
pop
lods
xchg
data16
mov
andb
test
shl
fdiv
mov
push
mov
enter
push
mov
push
dec
fisubl
std
adc
pop
test
lds
mov
insb
arpl
push
push
xor
inc
int
mov
hlt
xor
cltd
cmp
pop
lret
fs
and
jb
jl
cmp
or
xchg
clc
pop
inc
jo
sbb
cmp
xchg
jle
sbb
cmpb
bound
mov
into
pop
mov
push
pop
adcb
and
or
sub
loope
scas
mov
or
fcmovbe
add
test
mov
clc
or
imul
cmp
imulb
cmp
pop
dec
testl
mov
jnp
adc
mov
xor
sbb
loop
jns
lret
xor
push
jo
lods
dec
loope
add
xchg
or
xlat
int3
jl
nop
pop
mov
insl
push
nop
aas
push
add
movsl
xor
cmpsb
mov
leave
sti
rorl
addr16
jmp
arpl
push
xor
outsl
test
cmp
fwait
dec
xchg
lea
loopne
jle
mov
outsb
in
call
jnp
cld
lret
adc
int
push
stos
dec
sub
flds
dec
lods
popa
cmp
loopne
xor
int
inc
cmp
sbb
sub
test
test
pop
sub
mov
jg
ret
in
int3
mov
mov
cli
stos
cmp
jmp
jmp
mov
sbb
dec
pop
pop
push
push
in
mov
push
jg
inc
xor
mov
daa
adc
jbe
jmp
hlt
pop
insb
dec
push
and
lds
mov
adc
test
lret
lcall
stos
popa
repnz
push
or
inc
mov
push
cmpsl
rorl
bswap
aas
lret
lds
or
mov
add
cmp
dec
fidivs
xchg
mov
test
cwtl
xlat
fsubr
mov
dec
add
mov
inc
sub
inc
pop
or
in
insl
xor
mov
mov
ljmp
sbb
inc
mov
in
or
stos
push
cli
add
adc
les
repnz
mov
pushf
sbb
jp
orb
outsb
fists
fwait
push
pusha
pusha
mov
xor
add
inc
add
sbb
stos
js
inc
push
fistpl
fmul
mov
ret
jae
fsubr
in
ljmp
cld
pop
mov
lds
dec
mov
insl
adc
in
inc
or
jmp
push
inc
or
sub
rcll
stos
stc
mov
sahf
int
and
lret
scas
pop
dec
mov
out
adc
mov
mov
je
jp
cmp
and
test
mov
cmp
jnp
imul
adc
mov
jnp
inc
mov
pop
fwait
addl
ja
sbb
mov
inc
mov
aaa
cmp
dec
push
rcll
rol
xchg
xor
imull
pop
addl
gs
xor
lret
popa
stos
jge
mov
xchg
fnsave
push
fwait
sub
add
mov
pop
adc
sub
cmp
mov
cwtl
sub
out
cmp
pop
gs
dec
xlat
lea
mov
xchg
fwait
test
rcll
or
mov
mov
adc
jg
lcall
jnp
cmp
mov
pop
pop
stc
or
in
pop
mov
xchg
in
int
cmp
xchg
es
fld
data16
and
mov
dec
cmp
fwait
cltd
cmp
adc
xorl
imul
sbb
stc
lods
int
aaa
mov
es
xor
and
mov
dec
and
aad
repz
mov
xchg
push
pop
testb
pop
lea
push
bound
pop
popa
fisttpl
push
stos
sub
dec
cmp
addr16
jno
mov
loopne
or
arpl
jo
aaa
push
xlat
pusha
mov
and
mov
jmp
fmull
outsl
rol
shll
pop
jecxz
scas
data16
dec
jl
shll
mov
daa
jnp
xchg
int
cwtl
pop
sub
test
pushf
int
or
add
in
stos
es
sbb
xor
das
lds
mov
insl
nop
xchg
jnp
sbb
jge
fimuls
or
mov
sub
je
fildl
xchg
sti
push
pop
movsb
clc
ret
push
jg
push
sbb
popf
and
cmp
jbe
fnstsw
xlat
rcrb
je
mov
shl
loopne
push
inc
dec
pop
cs
dec
out
sarb
push
orb
and
and
inc
popa
fiaddl
outsb
mov
pop
jmp
sub
lods
xlat
aaa
lock
test
inc
or
test
push
jno
push
xchg
adc
add
fwait
mov
cltd
addr16
pop
inc
inc
add
andb
adc
loop
inc
popf
mov
sahf
pop
jg
shll
push
xlat
and
insb
cwtl
das
rorl
adc
pop
adc
mov
adc
stos
outsb
pop
lahf
mov
push
push
add
cmp
inc
lods
lcall
adc
jns
imul
add
imul
ss
pop
or
cmp
mov
pop
lods
sti
test
xchg
mov
int
jge
hlt
rcrl
imul
or
sahf
dec
jl
add
les
pop
cld
lret
dec
mov
push
push
pop
pop
dec
add
leave
xchg
mov
push
mov
sahf
shlb
add
pop
adc
hlt
addl
inc
sbbl
mov
pop
and
dec
lcall
jnp,pt
or
or
xchg
pop
daa
push
lea
xor
push
pop
add
mov
inc
xlat
xchg
adc
xchg
flds
sbb
push
leave
fstpt
jb
ds
mov
dec
sub
test
ja
bound
scas
pop
add
popa
test
xchg
int
sub
inc
imul
sbb
jp
dec
mov
rcr
sti
pop
sub
or
rorl
jmp
mov
test
add
add
jnp
cwtl
stos
xor
mov
xorb
orl
enter
clc
mov
int
mov
add
pop
add
in
push
mov
ljmp
xchg
sbb
mov
insb
lahf
fwait
aam
pusha
mov
sti
push
sbb
adc
hlt
and
mov
xor
aam
stos
test
sub
rorb
sub
dec
inc
in
fcmovbe
lock
inc
xor
xchg
lret
cmp
dec
rcrb
sbb
inc
xchg
mov
push
leave
xchg
xor
or
sti
addb
or
cmp
jno
dec
std
mov
jnp
sbb
pop
add
lods
pop
sub
ud1
test
xor
mov
or
add
push
mov
dec
xlat
sti
push
xchg
push
xor
test
flds
push
and
xchg
into
inc
cmp
or
pop
push
pop
lock
dec
dec
inc
lret
jmp
jmp
adc
jae
xor
cld
insl
push
rcrb
xor
insl
adc
push
in
mov
addl
jge
in
cld
sub
in
push
jnp
sbb
jp
int
mov
mov
and
addr16
pop
cwtl
mov
jmp
sahf
and
mov
mov
mov
sub
into
xchg
lret
leave
sub
cmp
call
ret
lahf
xlat
sti
cmpb
and
lds
mov
nop
cwtl
push
adc
sbb
sarl
mov
mov
sub
inc
int
inc
ret
jmp
mov
jg
addr16
call
xchg
mov
jne
xor
ret
pop
sub
ret
shlb
sub
imul
pop
jne
dec
cmpsb
pop
lods
jo,pn
or
lds
test
rcl
popf
pop
dec
or
and
imul
sti
push
jmp
mov
inc
sub
xorb
lcall
dec
and
gs
adc
push
int
pop
cwtl
mov
pushf
pop
rcrl
jge
push
jnp
dec
fldt
pop
cli
mov
adc
xlat
lret
mov
ds
fdivl
xchg
inc
mov
mov
aas
cmp
dec
mov
movsl
out
add
hlt
xchg
sti
mov
pop
stos
ret
je
fstpt
outsb
out
gs
dec
int
or
xchg
inc
jp
mov
inc
rorl
aam
xchg
ss
mov
mov
or
test
jnp
inc
xlat
xchg
fwait
jnp
fldcw
clc
xchg
and
adc
mov
cmpsb
fidivrl
push
jl
or
sub
cld
xor
cwtl
mov
push
int
lea
divb
ja
dec
test
add
cmc
jmp
lock
mov
sti
or
ja
into
mov
mov
cmp
pop
aaa
mov
mov
das
out
xchg
adc
push
dec
pop
ds
test
xor
lock
movd
sbb
in
lahf
push
xchg
mov
mov
dec
mov
push
in
aas
pop
adc
rcll
mov
pop
mov
add
cmp
mov
fists
cltd
fwait
sti
pop
jno
das
leave
xor
xlat
pslld
or
xchg
add
xchg
add
test
nop
int3
xlat
fs
sahf
push
fimuls
sbb
je
mov
jge
fwait
sti
jp
cmpb
adc
clc
xchg
imul
jge
jmp
lea
push
push
sarl
adc
xchg
jb
test
sbb
sti
push
ljmp
pop
or
outsl
stc
ret
js
popf
vpsrad
jae
nop
popa
ds
or
jae
adc
mov
fisttps
mov
cmp
arpl
aas
movsb
pop
in
sub
cmpsl
jae
fistl
fistpl
insb
in
iret
aas
popf
mov
pop
cmp
stc
stos
xchg
ret
imulb
jmp
push
scas
pushf
stos
leave
jp
add
test
push
fsubrl
xchg
pop
adc
sti
inc
subl
stc
sub
jmp
inc
adc
ds
pop
mov
jnp
mov
cmp
cmp
leave
push
jnp
sahf
add
lahf
dec
lret
add
pop
cmp
les
fwait
sahf
cmp
and
fstpt
mov
lock
or
sub
jecxz
adc
dec
popf
or
jnp
and
pop
push
lcall
lods
mov
fdivrp
push
jge
mov
popf
daa
add
js
data16
aam
xor
in
sbb
into
stos
cmp
push
hlt
cmpsl
jns
xlat
adc
movsb
sbb
push
fs
mov
mov
pushf
add
lcall
sub
push
sbb
arpl
lcall
mov
or
pop
pop
jmp
jne
mov
cmp
pushf
cmpsb
push
adc
test
mov
push
xchg
out
dec
push
lcall
loope
sbb
lods
dec
in
or
fbld
push
cmp
gs
aaa
push
test
js
mov
bound
add
lcall
ds
les
bound
cwtl
cmc
cmc
sub
int
xlat
fdivrp
dec
push
or
push
shll
mov
cmpsl
int3
lcall
pop
in
cmp
jnp
and
mov
xchg
enter
gs
fdivrs
shrl
mov
or
xor
xor
and
xor
gs
popf
dec
mov
add
push
test
sbb
pop
int
or
in
adc
xlat
and
aad
cmpsl
add
sarl
lret
fbld
inc
aam
mov
cmp
leave
call
mov
enter
push
repz
cmp
add
sub
mov
push
scas
dec
sub
cmp
and
inc
or
or
pop
push
loop
cmp
imul
mov
jnp
push
xchg
cmp
int
adcl
pop
add
int3
cmc
lcall
jle
hlt
popa
popa
add
or
out
icebp
cmpsb
or
dec
repnz
dec
dec
add
sar
loopne
das
add
mov
adc
adc
push
es
dec
mov
mov
fstpt
adc
and
push
sbb
sbb
pop
and
inc
outsl
mov
out
pop
sub
nop
dec
xchg
inc
pop
cmp
stos
int
push
fists
sub
gs
add
out
cmp
or
testl
lods
mov
popf
cmpsl
cmp
popa
lret
jnp
pop
ror
push
pop
cli
sbb
notb
push
std
scas
lods
xchg
mov
insb
div
test
inc
loop
push
xchg
fcomi
push
xor
stos
cmpl
test
mov
or
cmp
ds
out
cmp
pop
push
cld
xor
jno
push
leave
stc
ss
jp
push
xchg
jae
cwtl
xchg
adc
cmp
mov
mov
mov
pushf
xor
lods
sahf
sub
lds
test
inc
xor
pusha
sbb
push
movsl
out
and
mov
pop
xchg
push
xor
cmp
int3
lds
pop
sub
into
into
test
and
cmpsl
xor
push
ret
dec
or
and
testb
sub
sbb
push
sti
ljmp
leave
shll
pop
mov
testb
fucomp
cmc
int
lret
shl
cmp
pop
cmp
ret
icebp
cmp
push
pusha
iret
jle
dec
jne
mov
adc
jno
fstl
xchg
jnp
jmp
adc
loopne
mov
rolb
add
dec
dec
adc
push
mov
push
mov
push
icebp
insb
popa
lods
addb
mov
adc
gs
enter
mov
movsl
pop
adc
fnstenv
lcall
jg
ss
xlat
push
jns
les
in
fwait
jg
ficomps
cs
movsl
inc
stos
paddd
or
loopne
test
jecxz
dec
ja
push
imulb
push
cs
push
aam
mov
pop
fs
jge
in
inc
cmpsb
mov
js
ss
pop
or
int3
xor
pop
call
vpackssdw
sub
sbb
insb
mov
push
adc
jmp
push
mov
mov
int
fs
jg
xchg
sahf
cmc
xchg
cld
jne
cld
das
or
mov
aas
popa
fnstenv
cmpsl
int
lea
ja
jl
jle
jbe
jmp
jg
stc
popl
jne
daa
movsb
lret
mov
push
cli
dec
sub
xor
add
mov
mov
mov
push
int
mov
leave
jle
add
xchg
adc
mov
fidivrl
fs
imull
jno
call
repz
pop
mov
add
dec
dec
scas
fxch
aas
mov
imul
dec
in
push
insl
fwait
inc
hlt
fisubrl
stos
sarb
sbb
aad
jge
rcll
out
mov
jbe
out
es
mov
mov
push
adc
mov
or
adc
and
jle
push
sub
hlt
iret
fsubl
sub
jecxz
stos
cmp
out
add
xchg
testl
int
movsb
lea
ljmp
mov
out
stos
jecxz
jle
int
cmpl
xlat
adc
push
aas
fwait
sti
mov
out
ret
and
fnstcw
push
les
cmp
add
pop
xchg
dec
loope
addr16
dec
sbb
subl
fwait
mov
in
ja
mov
scas
cmp
xor
jmp
lcall
or
pop
in
add
loopne
inc
nop
or
add
and
jg
adc
inc
mov
aaa
faddl
negl
push
push
pop
mov
aas
lret
xor
dec
pop
in
in
jge
and
fwait
inc
dec
out
xor
leave
mov
dec
sub
in
cltd
mov
loop
orl
ret
mov
push
sbb
jmp
adc
insb
cmpb
dec
and
add
addl
insb
xor
mov
pop
adcl
and
xchg
test
jge
sti
sub
jmp
dec
enter
ret
subl
aad
dec
cmp
sub
cwtl
aam
cltd
fldt
ds
out
shl
add
push
adc
adc
or
dec
pop
dec
or
xchg
jmp
mov
and
stos
push
insl
fstpt
xchg
push
mov
xchg
adc
stc
dec
jge
sub
stos
mov
test
cmp
xchg
sti
cmp
xchg
fidivrl
cmc
movsl
test
or
ret
jmp
pop
rcr
sbb
test
push
inc
mov
int3
mov
dec
push
ja
ret
mov
mov
lods
imul
pop
popf
sbb
or
pop
jo
sub
mov
pop
mov
cmpl
popf
push
dec
push
add
sbb
mov
adc
jnp
fldcw
mov
sbbb
xchg
push
inc
push
jne
or
and
mov
mov
cltd
xchg
jbe,pt
jae
inc
cld
xchg
mov
cmp
jg
fwait
xor
mov
out
mov
cld
cmp
cld
sbb
insl
xor
sti
jo
into
sarb
cmp
insb
mov
pop
fwait
test
jle
orl
insb
adc
and
jbe
call
into
dec
gs
lea
out
ss
jnp
icebp
sahf
cmp
dec
and
pop
std
fnsave
sub
inc
into
test
mov
jmp
ret
mov
sahf
jl
dec
iret
inc
xor
adc
mov
or
dec
jecxz
sbb
lahf
into
inc
cmpsb
into
aad
jmp
dec
or
pop
pop
int3
cmp
ljmp
pop
addr16
data16
adc
mov
fcompl
scas
push
stos
cs
pop
call
sbb
adc
stc
lods
dec
jp
addl
cmp
outsl
or
pop
pop
add
sti
addr16
jg
cmp
mov
in
aad
jo
pop
pop
jmp
adc
jl
mov
mov
push
mov
arpl
unpcklps
xorb
iret
pushf
or
cld
jle
mov
dec
push
shl
fld
jmp
jne
jnp
pop
add
push
in
mov
pop
int
les
mov
or
cmp
lea
int
jno
aam
push
push
jne
jns
mov
shlb
dec
xchg
sbb
sbb
sbb
sbb
mov
pop
jnp
xor
lret
sti
lret
pop
insb
xchg
ja
or
sub
mov
cld
push
scas
mov
cmp
pop
in
hlt
pop
insb
test
repz
xor
xlat
ljmp
dec
jno
movl
jg
outsl
mov
outsb
sbb
stos
out
mov
sarl
cmp
std
hlt
inc
add
xchg
fisttps
ret
dec
faddl
mov
push
push
push
xchg
or
mov
fcompl
pushf
jno
mov
add
loopne
jnp
push
leave
jnp
or
cmp
and
subl
std
dec
cmp
mov
cmpsl
in
iret
sub
lret
mov
jnp
push
and
cmp
fnstcw
push
inc
mov
fdivl
xchg
and
add
pop
ret
or
shll
stos
jnp
dec
iret
scas
leave
out
sub
jmp
jge
inc
mov
fadds
fdivrl
xchg
sti
repnz
out
imulb
rorl
pusha
jnp
lds
mov
int
mov
cmp
xchg
rorl
cmp
popa
xlat
aas
outsl
sbb
add
push
das
jmp
out
fimuls
mov
std
int3
push
js
psrld
and
push
ja
jo
xor
lret
or
in
push
test
dec
push
pop
ja
imul
push
scas
pusha
or
loop
cmp
or
jl
in
sbb
push
movsb
xchg
inc
cmp
mov
mov
xor
xor
pop
stos
jnp
dec
mov
cmp
push
sbb
pop
push
push
sbb
mov
jns
lods
sbbl
cmp
mov
cltd
cmp
or
push
loope
jae
pusha
hlt
sti
jnp
cs
cmp
adc
jb
and
aad
sar
decl
orl
test
mov
testb
iret
mov
data16
je
or
stos
or
cmp
out
cmp
mov
cmp
aas
rcll
movsl
add
test
push
int
xchg
icebp
xchg
adc
pusha
cmc
sti
lahf
push
sub
rcrb
in
insb
int
scas
pop
iret
dec
sub
xchg
push
fldl
or
popf
or
int
hlt
xchg
gs
push
jecxz
or
adc
mov
xchg
call
cld
fwait
mov
dec
stos
xor
or
outsb
daa
jmp
xor
cmp
jecxz
je
mov
xchg
les
pop
movsl
cmp
cld
ud2
mov
pop
data16
dec
jno
gs
int
or
cmp
mov
cmp
ljmp
dec
add
dec
adc
in
cmp
call
dec
pop
ficompl
notb
jno
aaa
adc
aas
adc
sub
and
test
xor
addl
adc
mov
mov
testb
push
pushf
and
xor
mov
ret
test
mov
ljmp
std
cmp
xor
iret
push
fldl
or
dec
add
js
stos
push
mov
adc
dec
or
mov
xchg
cmpsl
fldt
cmp
shlb
pushf
jne
je
leave
sub
push
scas
inc
adc
pop
push
dec
lahf
into
mov
jnp
mov
add
les
sbb
call
adc
push
lods
std
pop
rcrb
adc
mov
dec
adc
mov
push
lcall
push
and
cmp
fwait
push
aas
jl
pop
stos
lods
mov
int
add
scas
or
stc
mov
mov
cmp
das
ret
daa
mov
mov
shll
out
inc
xor
mov
mov
add
repz
xlat
sub
int3
pop
xchg
leave
jg
mov
into
cmp
jbe
icebp
nop
adc
insl
xchg
bound
in
mov
pusha
mov
lods
into
sbb
cs
mov
pop
mov
pop
lds
pushw
push
inc
jo
out
jl
sub
pop
aaa
inc
aad
push
aaa
aad
dec
in
jo
fbstp
mov
aam
or
stos
pop
popa
in
mov
sti
xchg
mov
or
pusha
scas
cwtl
cmp
pop
xchg
inc
rclb
dec
xchg
pop
mov
icebp
dec
pop
mov
cmpsl
push
push
pop
cld
sbbb
in
in
lds
mov
out
jmp
shrb
adc
mov
xorb
adc
movups
jnp
fists
jl
pop
cs
mov
aam
dec
cmp
dec
bound
ficompl
and
outsl
jg
cmp
push
mov
shll
dec
aam
sti
lahf
stos
sub
xchg
movsl
jnp
ss
jne
cwtl
xchg
inc
push
fwait
popl
lods
stos
mov
adc
mov
add
mov
jb
dec
fs
fs
call
sub
fwait
or
aad
lods
mov
rorb
scas
ja
adc
cld
sbb
lods
xchg
test
push
iret
mov
cltd
je
adc
xchg
push
lret
and
imul
xor
es
mov
cld
call
repz
outsl
dec
xchg
cld
dec
and
ret
jne
pop
cld
stos
idivb
orl
or
jae
rorl
inc
xor
dec
loope
sti
cmp
mov
rorb
dec
adc
cmp
push
mov
xlat
shlb
into
mov
or
ljmp
cmp
add
mov
sbb
mov
inc
int
aad
fwait
repnz
fs
mov
out
in
xchg
push
leave
sti
popa
rclb
push
cmc
xor
sbb
mull
aad
sbb
push
mov
dec
arpl
mov
jo
scas
insb
jle
or
test
cld
orl
inc
or
inc
or
push
fwait
xor
pusha
outsb
lods
shll
int
inc
mov
repz
pop
mov
test
xor
iret
dec
icebp
ret
fsubrs
xchg
sub
inc
fcoml
push
enter
add
dec
mov
mov
mov
shrl
lods
mov
cs
push
dec
xor
xchg
cwtl
ret
ja
jmp
mov
or
xchg
cmp
xor
pop
js
scas
jg
xchg
jo
or
test
or
jo
movsb
mov
fistpll
add
cwtl
sti
sub
or
out
ds
cli
cmp
daa
fwait
xchg
cmp
pop
pop
lods
ret
pushf
sbb
pop
jl
push
xor
pop
aaa
lods
pop
incl
add
daa
pushf
lods
lahf
roll
or
out
jge
leave
cmpsl
dec
jb
ss
push
jecxz
or
js
imul
push
adc
jl
dec
into
out
xor
jl
fisttps
mov
fwait
testl
lret
add
push
ret
or
fmulp
xor
or
xlat
mov
adc
in
mov
out
sbb
nop
lds
mov
jl
lahf
push
dec
dec
xor
cmp
xchg
rcrb
inc
loop
pop
push
ljmp
pop
sbb
pop
dec
jbe
jo
xchg
jmp
adc
sub
xchg
or
mov
xor
pop
sub
jno
ja
std
sub
loope
or
imul
leave
mov
test
jo
test
pop
mov
cmp
and
rep
test
les
loop
sbb
fmull
imul
insb
pushf
mov
cmp
inc
andl
cwtl
pop
pop
dec
pop
cmp
and
mov
dec
adc
push
push
ljmp
push
test
push
ljmp
xor
popf
int
jle
cmp
out
or
mov
mov
cmp
ja
outsl
inc
pop
es
iret
cld
jnp
xchg
sbb
xor
leave
lods
scas
insb
cmp
cmp
jmp
in
shll
test
push
fstl
lahf
sbb
loope
jnp
rorl
add
or
add
sbb
jb
cs
xchg
jg
xchg
loopnew
sbb
jmp
das
add
roll
inc
push
jmp
jp
sahf
sub
sub
int
mov
imull
jge
test
pop
dec
bound
dec
xchg
or
daa
xor
movsl
mov
pushf
gs
test
jl
cld
push
mov
ljmp
xor
pcmpeqd
divb
ds
jg
sbb
mov
sub
cmp
mov
mov
rcrb
dec
xchg
aas
push
jns
add
or
pop
nop
inc
into
out
aam
imul
cmpsb
jecxz
mov
insl
insb
sbbl
cmp
dec
lods
inc
or
xchg
or
sbb
mov
lret
add
aad
scas
fistpl
lea
xchg
mov
lds
jnp
xor
pop
mov
fistpll
arpl
nop
ror
aad
add
jmp
xorb
imul
pop
and
movsl
sti
xchg
push
add
lcall
jle
pop
xchg
and
jnp
addb
mov
cld
imul
mov
aad
cmp
fcmovnb
jle
sbb
jg
hlt
lea
movsb
jo
movsb
ds
and
dec
pop
inc
cmp
jg
jge
sub
mov
push
sbb
jne
and
mov
dec
jge
std
rorb
enter
xor
sbb
jo
scas
cli
fists
roll
addb
rorl
or
imul
test
jno
push
lret
in
stos
xchg
add
cmc
shr
adc
mov
fdivrl
inc
mov
xchg
jnp
repnz
cmp
stc
sub
push
int3
xor
cwtl
sarl
addr16
notl
push
jae
imul
cmc
xlat
pushf
mov
lea
xor
lods
shll
push
sub
mov
xchg
jae
add
ret
mov
mov
push
mov
into
sub
pop
lods
scas
and
cmc
dec
pop
sbb
mov
sub
inc
sbb
dec
dec
fcos
pop
jnp
xchg
in
push
lahf
nop
fwait
mov
inc
jl
fsubs
jne
int
inc
into
filds
pop
sub
pop
cmp
std
lahf
dec
lds
jb
pop
inc
pop
sbb
sbb
pop
sub
outsb
stos
push
inc
icebp
int
push
push
das
and
mov
adc
into
aam
jecxz
movsb
fstl
push
push
pop
xor
inc
leave
jp
inc
lods
and
lods
mov
test
xlat
dec
in
or
add
pop
push
mov
dec
adc
push
dec
inc
xchg
dec
and
adc
pushf
pop
inc
push
lahf
ret
lods
fnstsw
enter
dec
fwait
and
mov
jae
or
add
pop
mov
inc
adc
sub
into
jns
xchg
je
js
in
dec
jnp
or
pop
sub
jge
outsb
jge
out
dec
inc
mov
adc
mov
jl
iret
aad
sub
icebp
ret
add
mov
mov
add
push
lods
movsl
or
jge
sbb
lret
jnp
test
mov
mov
xchg
gs
pop
mov
push
pop
jno
ret
sahf
data16
fimull
lret
xchg
add
jge
jnp
push
lds
inc
sbb
xor
mov
dec
sbb
inc
sarb
shll
cmp
test
sbb
add
lret
mov
xor
jo
clc
sbb
cmc
test
loope
fwait
inc
dec
sahf
pop
out
lcall
fcompl
incl
pusha
dec
xchg
int
movsl
mov
mov
mov
xchg
mov
xor
cmp
in
in
inc
jle
int
aas
pmaxub
mov
js
popf
cltd
movsb
xchg
add
scas
or
iret
pop
call
into
dec
test
xchg
ret
pop
dec
xor
or
push
addr16
lods
inc
xor
dec
push
dec
mov
inc
sbb
enter
sbb
push
dec
add
ret
aad
xchg
push
mov
aad
push
mov
and
std
mov
cld
pop
and
test
jnp
nop
fwait
pop
mov
ss
xchg
mov
sub
cmp
add
inc
ja
enter
lret
int
dec
scas
push
cmp
test
das
out
arpl
or
xor
pop
ror
idivl
xchg
int3
mov
lcall
cmp
in
cli
mov
movl
jmp
push
jg
and
hlt
aam
push
push
adc
jne
add
mov
daa
adc
push
lods
iret
push
jge
pop
mov
test
test
and
inc
xor
testl
mov
xor
xor
pop
cld
pop
mov
ds
dec
popa
dec
leave
pop
xor
jl
mov
mov
push
test
cmc
mov
mov
imul
cmp
into
jo
ja
lds
fs
xchg
cwtl
ljmp
sbb
xchg
pop
mov
incl
push
pushf
cmpsb
in
xchg
lret
fisubl
adc
loopne
daa
fs
cmp
jl
sbbb
cwtl
mov
int
pop
jle
mov
cmp
mov
push
push
fs
scas
in
pop
ret
dec
pop
sbb
hlt
xor
push
pop
xchg
cmpsl
or
sbb
cmc
fiadds
lods
in
cmpb
mov
jns
int
dec
sar
jnp
mov
cmpsb
add
and
sahf
cvtps2pi
mov
outsl
inc
xor
adc
push
jmp
xchg
addr16
mov
and
loope
cmp
mov
pop
rcll
ja
jp
sbb
jmp
movhps
int
mov
pop
sub
xchg
int
mov
pushf
insl
stos
subb
mov
jne
jmp
xchg
sbb
ljmp
jl
add
fcmovnbe
fistps
int
out
cld
outsl
jg
aad
inc
popf
in
jecxz
sti
add
addr16
adc
in
pop
mov
hlt
leave
int
push
adc
jnp
popa
sbb
mov
in
imul
xchg
icebp
dec
mov
or
insl
xor
xor
sbb
jmp
enter
scas
inc
hlt
mov
dec
ret
jnp
xchg
sti
aas
cmp
cmp
ret
in
and
dec
lds
jp
mov
and
mov
add
mov
fists
dec
pushf
stos
int
cltd
pop
rorl
sbb
or
aad
cmpl
int
lret
cmpsl
jl
lahf
cmpsb
push
iret
pop
pusha
add
xchg
int
sbb
das
cld
mov
int3
sti
dec
or
pop
mov
stos
in
pop
push
es
dec
lahf
inc
insb
jl
push
cwtl
xor
into
imul
leave
nop
mov
adc
scas
js
movsb
add
bound
mov
ds
xlat
dec
push
cmpb
nop
and
outsl
xchg
push
mov
inc
movsb
push
push
cmp
outsb
clc
mov
push
stos
mov
test
ret
xchg
jns
dec
sub
push
xor
mov
addr16
pop
add
xchg
jns
dec
and
mov
mov
test
ror
jnp
cli
cmp
mov
mov
gs
inc
push
mul
lcall
andb
xchg
or
lcall
sti
repz
lods
ret
daa
add
jae
xchg
xchg
aas
add
int
dec
leave
sbb
adc
jbe
or
pop
push
fbstp
stc
jnp
mov
int3
push
dec
mov
cld
xchg
and
loopne
cmc
jno
jne
sub
shlb
popf
pushf
jp
outsb
or
sbb
mov
aaa
insb
mov
inc
xlat
mov
push
pop
js
fisubrl
push
shlb
cli
push
mov
dec
add
loop
test
push
cmp
pop
add
xorl
rorb
lret
int
gs
adc
mov
scas
push
or
push
std
jp
lahf
out
jge
fsubs
push
mov
jb
inc
imulb
arpl
adc
lds
xor
cmp
imul
or
stos
data16
xor
dec
xorb
and
mov
pop
call
xchg
inc
sbb
jmp
adc
insb
gs
nop
ret
rcll
and
push
shll
das
xor
inc
hlt
add
sti
jne
push
pushf
mov
mov
mov
data16
or
and
lahf
mov
decb
inc
sbb
inc
decl
into
lock
aam
push
in
cmp
mov
jns
test
popf
mov
xchg
or
fcoms
xchg
add
mov
mov
jge
movsb
sti
dec
xorb
sub
or
pop
in
lret
sub
jge
cwtl
and
or
mov
dec
pushf
mov
mov
dec
pusha
mov
sbb
lods
push
pushf
ret
jl
pop
sbb
mov
in
push
test
imul
in
jecxz
fsubrp
cmc
xlat
mov
aad
imul
mov
std
ds
cwtl
jle
inc
addl
lds
imul
mov
xchg
xlat
inc
xchg
mov
lret
dec
in
adc
ret
xor
adc
fistl
dec
and
mov
mov
jbe
mov
rclb
fidivl
adc
into
mov
das
xchg
pop
dec
xor
lock
jne
stos
or
adc
cs
int
popf
call
jecxz
cmp
inc
xchg
insb
or
test
mov
or
push
out
ret
pop
or
jnp
mov
cmp
test
jmp
pop
lahf
in
mov
push
xchg
fimuls
sbb
jnp
jmp
ss
in
js
aaa
jno
lds
and
ret
aaa
sti
add
lock
lret
insl
or
and
adc
fildl
mov
mov
test
push
xchg
jnp
cmp
lahf
inc
xchg
dec
aam
inc
ds
int
fldcw
lods
mov
push
js
mov
dec
mov
rolb
loop
lahf
mov
aaa
icebp
lcall
lahf
inc
test
pop
int
fdiv
jle
int3
pop
push
or
in
mov
jne
stc
les
loopne
outsl
pop
jg
lock
sub
or
and
dec
inc
fs
lcall
pop
jecxz
cmpsl
or
insl
mov
call
adc
outsl
mov
sbb
ljmp
ds
cmp
insb
test
cs
xlat
fmull
sahf
je
nop
xchg
fs
pxor
cmpsb
inc
pop
in
imul
leave
aaa
test
fcomps
sbb
jmp
idivb
rclb
fwait
stos
faddl
xchg
inc
testl
pop
push
jl
inc
mov
adc
pop
js
cmpsb
fildl
dec
dec
adc
jns
mov
test
ret
jnp
cld
out
jae
push
sarb
test
add
movsl
js
cli
jnp
jle
adc
out
inc
add
or
pop
popa
sbb
jmp
fs
jnp
lret
jl
push
or
test
pop
push
push
sub
rcll
inc
daa
add
adc
jnp
rol
push
movsb
cmp
mov
int3
loop
add
out
aaa
dec
es
xchg
jbe
dec
cmp
or
sti
fcmovbe
jmp
inc
cmc
sbb
inc
jae
pop
jno
add
dec
mov
orb
outsb
rcrb
movsl
dec
mov
cmp
xchg
dec
adc
js
test
or
jno
add
ds
ds
adc
add
fldt
push
pushf
and
push
inc
das
cwtl
pop
or
fstl
or
fistpl
mov
mov
rcrl
fbld
mov
mov
push
sub
cli
inc
lods
jae
pusha
mov
xchg
insl
mov
adc
outsl
push
sub
push
adc
xchg
cmp
adc
jo
shlb
xor
dec
loope
sub
jg
cmp
lea
lahf
gs
adc
int
pop
mov
lea
lods
cmpsb
jno
adc
and
dec
fs
xchg
movsb
pushf
aad
ds
sub
fwait
test
xor
dec
nop
mov
mov
cmpsb
xchg
mov
int
push
das
shll
pop
and
pop
inc
out
inc
or
jmp
adc
mov
xor
daa
mov
or
sub
mov
pop
inc
jb
ret
imul
or
cmp
pop
fistl
aaa
add
or
adc
sub
push
out
xchg
insb
push
mov
int
test
repz
cvttps2pi
inc
mov
dec
push
popf
xor
push
jnp
bound
jmp
push
lock
sti
setle
aaa
scas
inc
ret
jp
cmc
add
cmc
iret
std
jp
into
mov
iret
push
lea
popa
adc
les
in
xchg
inc
into
jb
insb
lds
mov
cmp
pop
pushf
mov
add
push
or
push
cld
push
clc
jge
ja
adc
ret
int3
stos
inc
cld
or
stos
inc
loope
lcall
js
clc
daa
mov
into
es
push
xor
mov
dec
into
and
sub
mov
push
pop
sbb
js
xchg
cmp
or
movsb
iret
pop
mov
scas
nop
sbb
ds
gs
and
rcrb
dec
cmc
aad
call
rcrl
sbb
scas
outsl
cmp
fsubr
add
or
dec
mov
dec
jge
adc
inc
scas
lock
cmp
scas
add
xor
push
les
xchg
jnp
pop
adc
lock
jns
xchg
jae
loopne
pop
and
jmp
inc
dec
pop
jb
mov
cmpsb
mov
aam
fwait
mov
adc
add
lret
and
inc
inc
aad
sbb
cmp
into
cltd
push
and
sarb
and
adc
or
dec
aas
testb
ficompl
je
jne
frstor
mov
jmp
lds
das
inc
push
loopne
mov
sub
lods
lea
mov
jnp
xor
push
aaa
push
or
dec
sbb
xor
xorb
inc
cltd
aaa
out
cmp
cli
cmp
fisttpll
cwtl
clc
cmp
sub
fsub
mov
nop
cmp
bound
imul
data16
dec
mov
mov
arpl
jge,pn
sbb
aas
xor
sbb
jb
sbb
int3
xchg
add
lahf
test
dec
test
aas
xor
bound
test
mov
cmp
add
hlt
pop
push
fwait
or
outsb
push
ret
es
aas
cmp
xchg
in
rcl
dec
cli
push
lods
sti
inc
push
cltd
pop
adcl
mov
add
or
xor
xchg
push
adc
inc
iret
jno
fidivrl
mov
fists
dec
movsb
jo
push
popf
cwtl
dec
clc
xchg
pop
js
in
insb
mov
dec
dec
nop
into
in
push
mov
dec
sbb
dec
mov
hlt
inc
mov
in
sbb
cmp
repz
or
cmc
push
pop
nop
adc
mov
sahf
ret
jmp
dec
cmpsl
push
sbb
loope
cmp
inc
lea
dec
femms
mov
mov
xchg
pop
cmp
test
mov
jmp
dec
push
int
pop
ret
push
pushf
in
pop
lea
jl
jne
jl
gs
mov
pop
fsts
fs
loopne
mov
idiv
aas
mov
loope
aam
addr16
adc
std
shlb
gs
push
or
xchg
inc
popa
pushf
inc
outsb
cli
mov
adc
andl
out
add
popa
or
data16
push
in
pop
pop
test
mov
neg
dec
jnp
ret
jnp
mov
dec
mov
jne
popa
cs
les
out
ret
push
inc
add
int
inc
int3
or
lret
xchg
sbb
lea
icebp
sbb
inc
cwtl
or
je
push
adc
pop
mov
jnp
lcall
in
addl
mov
xchg
jnp
rcll
mov
lret
and
pop
cltd
ds
cld
xchg
add
push
arpl
push
int
and
arpl
push
jmp
pusha
std
push
cmp
int
mov
outsl
mov
jns
ja
sub
in
movsl
jnp
sub
xchg
jno
cmc
inc
mov
lock
ja
fwait
cmp
and
ja
jbe
daa
call
dec
push
cmp
inc
pop
je
push
mov
movsl
or
int3
hlt
sbb
mov
out
sahf
fs
cwtl
xchg
or
cmp
movsl
jnp
ffreep
push
cmp
sbb
mov
xchg
sti
hlt
aam
pop
cmp
imul
mov
mov
sti
loopne
aad
lods
xor
pop
or
mov
pop
imul
jnp
insl
dec
mov
pop
jo
movl
push
enter
fisubrl
lret
ds
mov
sbb
lds
out
cmp
cmp
ja
jle
imul
or
outsb
jg
adc
dec
daa
ja
fistps
ss
adc
xchg
pop
shr
lods
sti
enter
mov
mov
xor
and
mov
inc
cmp
sbb
popf
push
cmp
andl
aad
test
pusha
or
int
nop
leave
lods
and
cmp
cld
movsl
pusha
cltd
jo
std
or
sti
and
mov
cmpsl
shrl
bound
lahf
sti
dec
and
pop
inc
shll
test
jp
mov
push
cltd
sahf
movsb
and
push
hlt
pop
sub
mov
out
xchg
pop
push
aad
sbb
push
out
les
jl
scas
mov
add
xchg
mov
xor
jmp
in
pusha
and
mov
add
std
lahf
adcl
daa
xchg
or
mov
shrb
cwtl
fisttps
jbe
in
movsl
jae
mov
loop
insl
push
xlat
add
inc
cmpb
adc
lea
fsubr
shll
rcrb
mov
mov
push
shll
pusha
mov
lea
mov
aaa
inc
push
pop
fs
push
call
int
pop
fcom
sub
data16
mov
lock
es
mov
xor
scas
xchg
lcall
stos
cmp
call
xchg
inc
mov
inc
arpl
fwait
orl
cwtl
push
jp
adc
mov
dec
push
imul
movsl
cmp
test
enter
xchg
xchg
push
mov
int
inc
inc
dec
shlb
mov
shlb
push
out
jnp
sub
lea
dec
fsub
push
jae
rcrl
lcall
fistpll
sahf
mov
dec
sub
inc
pop
ret
icebp
shl
sti
push
fldl
sti
fisttpl
imul
pop
int
push
pop
lret
push
inc
mov
or
shl
xchg
sub
in
sub
push
pop
mov
xchg
jnp
inc
add
outsl
popa
cwtl
jno
dec
ja
inc
pop
nop
iret
and
es
or
xchg
shrl
movsb
into
pop
mov
xor
inc
push
xlat
dec
std
scas
mov
mov
dec
or
push
outsb
out
pop
cwtl
cwtl
shl
dec
sub
inc
mov
cmp
decb
pop
cwtl
pop
jae
adc
push
cmp
sbb
sbb
mov
jmp
push
fcmovb
cmp
fld
pop
adc
inc
stc
push
xor
ds
gs
xchg
inc
xchg
mov
leave
push
sub
aas
imul
shlb
in
cmc
aam
test
sti
test
mov
pop
leave
pop
lahf
pop
std
das
aam
mov
mov
pop
flds
aas
cmp
xor
jp
cmp
cli
ja
inc
inc
and
inc
and
lds
rorl
jecxz
adc
popf
mov
fildl
mov
sub
mov
mov
jecxz
ficoms
sub
xchg
mov
push
xchg
pop
repnz
dec
xchg
jg
aaa
out
mov
rolb
xchg
out
call
mov
mov
clc
stc
popa
mov
cmc
out
fwait
and
adc
pop
int
dec
push
push
dec
cmp
xchg
test
inc
fisttps
enter
pop
fcomps
pop
in
xorl
dec
test
cmp
in
jecxz
rcrl
mov
mov
jno
int
xchg
stos
movsb
ror
aaa
mov
xchg
xchg
ljmp
cmp
loope
cmp
fcmovnbe
out
movsb
cmpsl
mov
push
add
sti
int
dec
xchg
xor
stos
nop
mov
out
dec
cwtl
pop
mov
ja
mov
in
outsl
ficoml
mov
xchg
int3
nop
popl
lea
notl
sbb
or
jae
mov
ja
xlat
sub
cld
sub
mov
imul
js
push
push
add
clc
repnz
in
mov
mov
call
std
push
adc
push
cmp
push
insb
out
jne
sahf
xchg
es
sub
push
mov
inc
lds
daa
sbb
mov
lods
pop
decb
mov
fcomps
lods
rcll
inc
int
popf
cmp
in
sub
dec
xchg
nop
arpl
outsb
push
rcll
cmp
stos
pop
mov
push
hlt
fsubrl
and
pop
aaa
xor
xor
jle
nop
leave
mov
dec
pushf
neg
push
es
mov
out
inc
mov
cmp
sub
dec
sbb
decl
sbb
lcall
mov
jp
inc
mov
mov
leave
leave
stos
jmp
xchg
jbe
xchg
int
pushf
pop
mov
bound
pop
mov
pop
in
pop
shrb
sbb
xchg
aas
mov
sub
jge
das
outsl
test
mov
jnp
mov
sti
ds
cmp
sub
mov
mov
dec
into
dec
mov
cmovb
lods
mov
adc
mov
ret
mov
xor
lret
xor
clc
and
arpl
scas
or
cmp
js
rolb
int
mov
sbbb
pop
add
lret
xchg
sbb
and
shlb
nop
fstpt
add
shlb
dec
aam
xchg
scas
xor
movsl
cmp
lret
ficoml
or
cwtl
jnp
dec
jo
ret
adc
lods
lods
jo
inc
xor
xchg
sti
lods
mov
sahf
movsb
cmpsb
push
xor
sbbb
adc
loop
cs
sbb
jl
les
mov
rorl
mov
ds
add
dec
inc
cld
push
sub
push
adc
pop
and
je
and
dec
pushf
pop
iret
and
or
jl
push
ljmp
scas
xchg
sub
lahf
dec
inc
xchg
in
and
push
lret
pop
add
imul
push
dec
xor
inc
push
lea
and
xchg
xchg
pushf
ja
adc
push
scas
leave
rcrl
add
fdivrs
ret
mov
adc
test
paddusw
imul
jnp
mov
pop
pop
ret
les
mov
fstps
rorl
sub
stos
ja
dec
lock
cmc
rolb
jp
pop
test
mov
gs
mov
inc
into
xchg
nop
movsl
outsb
cmp
jae
pushf
xchg
push
mov
lcall
lcall
rcrb
or
les
mov
shll
pop
popf
pop
mov
rcrb
ret
pop
das
les
inc
insb
popf
inc
pop
ret
clc
sarb
pop
dec
jne
jno
cwtl
and
and
aaa
xchg
pushf
outsl
pop
mov
aas
repnz
dec
leave
xor
repz
pop
xlat
mov
jl
or
rcll
fwait
ror
lods
dec
or
mov
push
jnp
mov
int
pop
xor
push
loopne
push
cld
flds
cld
xchg
fs
rorl
call
pop
test
xchg
xor
js
jnp
mov
fwait
cs
push
sub
or
frstor
push
in
insl
mov
and
daa
daa
std
pop
in
push
in
mov
in
stos
in
stc
nop
cmp
xor
test
gs
fcomip
cltd
rolb
enter
mov
inc
mov
aas
mov
insb
mov
dec
orb
pop
adc
jle
sub
repnz
jl
pop
lds
push
lods
adc
lds
jle
lds
ret
cmp
cmc
lahf
inc
outsl
mov
leave
ds
mov
push
dec
mov
adc
arpl
or
cmpb
jnp
push
sub
mov
popf
scas
add
mov
std
ljmp
fcoms
das
aad
adc
mov
or
rorb
sbb
inc
iret
mov
adc
pop
fisttpll
mov
movsb
push
outsl
push
mov
mov
movsb
int
xor
add
insb
int3
stos
mov
pop
mov
jle
add
into
sbb
push
mov
enter
cmp
je
loop
es
test
cmpl
dec
push
sbb
gs
inc
ret
iret
fldl
fsubrp
orl
out
scas
and
mov
mov
insl
mov
imul
and
or
jnp
mov
adc
cwtl
movsl
fidivs
ret
out
dec
and
lds
out
int
and
sti
inc
push
fidivrl
pop
xchg
mov
insl
ljmp
cmp
push
sub
popf
sti
cmp
sub
loopne
adc
call
dec
mov
ficoms
or
cmp
jae
cmc
imul
pop
test
pop
jl
test
dec
lea
mov
aam
in
rcrl
test
dec
pop
add
das
sbb
ret
xchg
test
xchg
push
pop
insb
sti
test
jmp
sbb
adc
cmp
cmp
mov
push
or
push
ss
mov
or
dec
jle
dec
sub
sbb
inc
jmp
or
in
loope
mov
add
divb
xchg
mov
loopne
cmp
popf
push
mov
lcall
iret
jno
inc
dec
and
data16
fiaddl
lods
push
xchg
mov
mov
int
imul
nopl
sti
or
pop
popa
push
pop
xchg
mov
mov
outsb
enter
mov
jnp
add
push
cmpsl
xor
sbb
pop
xchg
cmpsl
lds
dec
push
adc
cmp
inc
add
mov
bound
xchg
jge
mov
jns
dec
dec
mov
pushf
bound
adc
push
inc
outsl
mov
sub
subl
arpl
std
call
xor
push
pop
aad
adc
insb
pop
scas
shlb
dec
fwait
push
data16
pushf
stos
jne
incl
lods
in
aam
add
add
lcall
inc
or
xchg
push
adc
mov
lock
pop
pushf
push
loope
dec
cmp
push
mov
cltd
lret
mov
cmp
add
adc
adc
push
out
mov
dec
add
repz
stos
mov
ret
mov
and
cmp
or
and
mov
adc
loop
and
rcrb
fistpll
movsb
inc
dec
mov
mov
test
mov
mov
or
js
hlt
out
les
int
xchg
jnp
cmp
jne
mov
addr16
aad
jle
repz
pop
das
push
xor
jecxz
adc
and
imul
mov
fbld
insl
jb
jbe
mov
xchg
aaa
xchg
pop
pop
std
push
mov
inc
xlat
pop
jo
aas
mov
push
and
ljmp
lock
aad
imul
pop
leave
mov
mov
add
subb
jnp
push
sub
insb
mov
adc
pop
dec
test
aam
inc
xchg
xchg
cmp
adc
test
adc
dec
lods
mov
mov
add
js
int3
adc
int3
repz
push
jne
les
rcrb
push
sbbb
lret
jmp
out
ss
cmp
mov
test
lret
sbb
mov
dec
jmp
hlt
sbb
add
inc
int
mov
daa
cmp
bound
movsb
mov
push
ficoms
sbb
jne
sbb
mov
inc
sub
cmp
push
add
sub
cmp
nop
jge
cld
add
mov
scas
inc
nop
mov
jl
dec
movsl
scas
jnp
jecxz
mov
inc
add
aas
test
pushf
mov
rolb
dec
jle
cmp
or
sbb
jl
faddl
sub
push
jbe
mov
xor
ljmp
fldl
mov
push
test
jg
jge
pop
lahf
xchg
mov
jnp
jno
int
and
shlb
xor
jb
inc
sub
dec
fwait
movsl
push
stc
stos
pop
lahf
push
mov
in
std
sub
xchg
mov
mov
add
sbbl
adc
xchg
inc
xchg
mov
loope
test
outsl
sarb
test
push
pop
add
sub
push
lods
add
sbb
nop
lds
std
ret
movsb
sbb
pop
test
jg
adc
into
jo
sub
rol
leave
adc
gs
mov
mov
and
lret
testb
out
sbb
icebp
movsl
mov
add
add
aad
cli
sti
xchg
idivb
aas
lea
pop
std
jnp
push
xor
lea
or
mov
adc
jge
dec
mov
push
jae
cmp
testl
lods
pop
lcall
imul
bound
incl
inc
mov
dec
psrlq
mov
fwait
sbb
push
int3
xchg
repz
mov
ret
push
in
mov
xor
ja
dec
jno
sti
ret
sbb
rcll
fistpl
xor
and
or
mov
lahf
dec
push
push
xor
mov
pop
pop
fildl
mov
xor
mov
mov
daa
mov
imul
ds
inc
add
push
cwtl
lahf
cmc
mov
test
xor
and
mov
adc
cmp
xchg
and
inc
outsb
leave
push
pushf
pop
bound
dec
push
dec
push
inc
inc
adc
lcall
mov
dec
cmp
xor
lret
cmpsb
xchg
mov
pop
ret
int3
fiaddl
outsb
sub
test
jl
shl
dec
xor
pushf
fadd
push
add
je
std
jbe
mov
cld
adc
push
mov
ret
fnstsw
and
subl
imul
lock
xchg
mov
pushf
adc
aad
mov
push
bswap
or
aad
cmp
repnz
lock
cs
cmc
fcomi
xchg
sbb
add
sbb
sahf
in
adc
sub
stc
sbb
sbb
lds
sbb
sahf
lea
ja
jnp
pop
mov
ja
fsubrl
sbb
cmp
ja
in
ret
dec
mov
mov
movsb
fcmovnb
fnstsw
dec
fnstenv
xor
jle
stos
push
mov
mov
adc
ret
sbb
mov
pop
jno
jg
dec
cs
enter
addl
scas
inc
cmp
jne
cmp
lods
push
add
push
add
shl
jmp
lock
pop
das
into
mov
mov
xchg
arpl
in
mov
or
pop
push
dec
and
insb
lcall
sarl
xor
imul
jbe
int
notb
inc
mov
xchg
or
das
push
cmp
push
mov
lcall
jnp
jle
push
mov
jo
sub
mov
fistpll
xlat
mov
imul
test
nop
dec
xor
lods
inc
dec
push
mov
pusha
xlat
mov
rorb
loope
test
test
aam
lods
mov
test
pop
push
inc
mov
cmp
shll
cmp
push
inc
push
insl
xchg
sbb
int
mov
xor
push
push
mov
inc
mov
inc
in
mov
sarl
xchg
imul
nop
int
xchg
xchg
in
xchg
loope
pusha
pop
sti
mov
popl
sub
jge
ds
dec
mov
lahf
jge
adc
jg
push
xorb
sub
sub
ds
push
dec
pushf
scas
jge
mov
sbbl
xor
xor
aas
in
mov
push
inc
add
lods
xchg
adc
orb
adc
stc
push
int
or
les
sub
cmp
push
lods
dec
mov
cmp
repnz
jbe
inc
jo
stos
int
cmpsl
adc
outsl
stos
test
fcmovb
xchg
stos
sub
sbb
ljmp
mov
pop
cmp
das
jp
mov
sub
pop
jne
out
jnp
loopne
or
stc
xchg
sbb
gs
sbb
mov
pop
mov
sbb
in
lahf
inc
js
mov
pusha
push
jle
mov
push
xor
jae
mov
dec
inc
repz
out
ljmp
mov
and
les
mov
lock
bound
into
lea
xchg
xor
sbb
inc
lock
adc
fcoms
lcall
xchg
cmpl
negb
fisttpll
in
push
repnz
cmpsl
mov
mov
rclb
sti
mov
add
cmp
popa
int3
popf
cwtl
hlt
enter
and
xchg
lcall
in
mov
adc
push
add
rorl
lret
inc
test
aas
dec
xor
xchg
sahf
add
lcall
pop
or
inc
and
or
into
xor
add
xor
rorb
mov
xchg
cmp
mov
fstpl
pop
inc
sbb
cmp
fcoms
and
mov
ss
fiaddl
push
movsl
lea
jge
lahf
ss
or
xchg
subl
sub
enter
cmpsb
aam
decl
mov
insb
xchg
dec
mov
dec
nop
cmp
dec
mov
jno
pop
jg
jecxz
xchg
repnz
sub
pop
dec
fwait
xchg
aas
cwtl
in
lahf
and
pop
movsl
dec
insl
sbb
cld
in
inc
stos
test
dec
dec
mulb
inc
or
mov
push
pop
int3
add
push
mov
mov
sub
push
call
push
clc
imul
lahf
out
push
mov
cli
lcall
cli
push
in
ljmp
add
adc
lret
sti
jg
shll
sbb
shll
aaa
xchg
or
popa
sbb
int3
stos
dec
repz
adc
push
neg
pop
or
inc
outsb
cmp
mov
dec
pop
push
push
xor
cmpb
mov
ret
jle
xor
jnp
rcr
and
sti
aad
jmp
adc
push
inc
add
inc
pusha
shrb
mov
dec
insb
mov
ja
ljmp
mov
pop
mov
pop
ja
xchg
mov
cmp
int
dec
nop
imul
mov
mov
int3
shlb
repnz
sbb
fisubrl
out
inc
std
cmp
xchg
stos
cmp
mov
sub
mov
mov
lods
out
xchg
adc
mov
loopne
adc
inc
sbb
ret
sub
decb
aad
push
mov
xor
jmp
lea
or
in
pop
ficompl
cmp
mov
or
divl
scas
pop
mov
sbb
psrld
lret
sarb
xor
lods
pop
mov
popf
xchg
mov
std
out
sbb
mov
iret
adc
std
pop
sub
dec
scas
mov
inc
or
dec
push
cmc
sbb
mov
adc
xchg
xor
fmull
mov
lds
out
insb
dec
sarb
inc
int
repnz
pop
xchg
sarl
sub
cmp
push
cld
jae
sti
jne
sub
mov
cmp
movsl
shll
lret
lods
fdivrs
mov
pop
les
cwtl
addr16
mov
xor
scas
mov
in
aas
dec
clc
pop
pop
lock
xchg
pop
into
sbb
mov
or
fdivrl
jae
rcrb
cmp
pop
and
ds
arpl
push
dec
mov
mov
pop
sbb
lock
insl
ret
push
test
dec
jno
jb
fiaddl
pop
pop
sbb
ret
or
push
inc
or
movsl
ret
fcmovu
dec
rcr
xor
aad
subl
das
cs
push
ljmp
jne
add
sbb
lahf
sbb
cmp
hlt
sti
stc
jp
sbb
jg
xchg
inc
arpl
stc
mov
jg
mov
lahf
mov
adc
fneni(8087
inc
inc
pop
jo
adcl
push
xor
fwait
repz
inc
or
std
pop
movsb
pop
int3
stos
push
mov
xlat
cld
mov
sub
jle
sub
jg
in
jecxz
lock
cld
into
sbb
sub
push
lcall
sbb
xor
jecxz
je
mov
std
ret
add
icebp
or
push
iret
rol
cli
pusha
xchg
mov
add
mov
push
outsb
adc
adc
mov
je
mov
sbb
mov
in
mov
ds
add
pop
aam
js
inc
bound
repnz
sarl
xorb
jecxz
adc
ja
fsubl
jmp
loop
xchg
in
fcmovnbe
outsl
xlat
sub
or
rcrl
mov
scas
dec
xor
test
popa
stos
or
pop
dec
lock
push
cld
mov
jbe
cmp
sbb
fdivrp
stos
or
xchg
sti
jmp
std
adcl
mov
hlt
pop
cmp
jg
in
add
ret
inc
int
mov
popa
or
stc
imul
sub
stos
push
xchg
or
test
adc
insl
mov
push
test
rolw
cmp
sub
seto
int3
xor
mov
testl
mov
jmp
repz
mov
scas
jg
sub
fwait
dec
lret
es
push
add
sti
xor
push
or
push
push
hlt
out
out
out
outsl
shrb
cmp
xchg
nop
lret
xlat
cmp
leave
daa
jae
and
mov
cltd
jmp
cmpsl
mov
rorb
jle
mov
inc
add
scas
jne
imul
xor
mov
xlat
loope
test
inc
mov
or
sti
pop
jnp
jg
je
xor
sub
add
pop
push
mov
sbb
ja
movsl
cmp
cmp
addr16
cwtd
mov
add
rcll
mov
inc
push
mov
sbb
int
jno
xchg
movsb
xchg
pop
mov
xchg
jb
cld
mov
int
push
in
test
mov
mov
fistps
sbb
dec
aas
sti
xchg
hlt
inc
add
xchg
add
cli
test
loop
arpl
add
fwait
stc
sub
cmp
enter
mov
popa
int
rcrl
adc
jae
lods
pop
repnz
mov
lret
mov
repnz
jl
cwtl
in
jnp
mov
dec
xchg
test
xchg
fcmovnb
adc
jnp
pop
mov
dec
sub
mov
cmc
pop
scas
ret
sub
pushf
arpl
popa
fstpl
imull
sub
lea
mov
shr
into
fs
test
add
and
mov
add
int
or
decb
testl
mov
push
lds
and
dec
cmpl
aaa
inc
aas
pop
or
in
loopne
or
iret
or
cmp
stos
cmp
push
mov
sbb
add
cmpsl
cmp
imul
add
xchg
dec
lret
and
mov
pop
cmp
test
push
push
xchg
sti
int3
stc
push
mov
loope
mov
jnp
adc
jl,pt
pop
cmp
daa
xor
es
adc
cmp
mov
out
or
icebp
lods
cmp
imul
ret
lock
mov
int
aam
mov
mov
rcll
mov
dec
dec
mov
pop
ss
test
lea
idiv
ds
iret
mov
popa
lcall
movsl
and
pop
int
mov
sbb
mov
sahf
daa
enter
in
pop
add
jge
xor
lret
pop
fidivrl
inc
sbb
dec
out
notb
jne
xchg
mov
xlat
push
mov
xlat
dec
insb
repnz
add
xor
shrl
movsb
push
jecxz
stc
mov
call
movsl
and
jne
inc
flds
dec
scas
mov
iret
xchg
lea
cmp
cld
adc
and
mov
dec
popf
xchg
js
xchg
adc
sub
mov
or
add
add
nop
call
nop
imul
mov
inc
dec
lods
jo
xor
lret
or
jnp
adc
insb
xchg
je
push
xor
sbb
scas
or
xchg
rcll
outsb
bswap
sti
mov
data16
and
pop
in
mov
pop
push
enter
data16
mov
push
dec
mov
jns
lods
shlb
xchg
add
add
jo
repz
adc
add
stos
dec
push
lea
add
push
fstpl
mov
add
cmp
hlt
xor
pop
sub
cmp
sub
daa
mov
add
into
or
data16
dec
and
popa
sub
icebp
inc
jg
mov
mov
adc
xlat
sbb
test
jge
loope
nop
mov
xchg
and
cmp
sbb
sti
xor
dec
pop
fiadds
pop
add
out
add
add
ds
sub
or
es
js
imulb
in
dec
push
fldl
stos
fs
pop
pusha
jae
test
inc
sub
or
imul
lods
popf
fbld
pop
test
decl
push
add
lret
and
aaa
cmp
je
adc
pop
jg
orl
mov
jg
push
test
andb
jne
or
cmc
loopne
pop
imul
cld
xchg
and
gs
ja
testl
adc
mov
push
mov
mov
mov
and
std
das
das
repz
outsl
shlb
xchg
cltd
and
mov
inc
pop
std
mov
je
mov
hlt
push
int
inc
pusha
push
or
jb
adc
lods
or
dec
test
add
int3
sbb
or
inc
rcll
inc
sub
jnp
push
call
mov
enter
sbb
push
or
xchg
push
mov
lock
adc
add
sti
in
mov
push
or
adc
jecxz
or
enter
mov
roll
or
sbb
sti
mov
cmp
sahf
mov
pop
in
clc
adc
adc
xor
test
and
loope
jmp
in
add
add
mov
arpl
test
maxps
fisubl
and
xchg
add
mov
lea
adc
mov
add
cmp
in
sti
xchg
ljmp
or
jbe
mov
arpl
mov
insb
pop
dec
push
cmp
sbb
gs
nop
sbb
into
or
repz
mov
jl
movsl
daa
sub
repnz
mov
mov
or
cmp
into
xchg
repz
jns
test
adc
mov
outsl
mov
xchg
cmp
xchg
and
gs
xchg
inc
dec
cld
dec
dec
int
push
adc
cs
mov
sti
push
push
xor
data16
insb
cmc
push
ficoml
push
push
sbb
mov
inc
adc
push
mov
jnp
xor
rorl
sbb
icebp
xchg
dec
sbb
incb
adcb
or
add
mov
fsubr
mov
fidivl
mov
rol
mov
das
jle
lret
rcrl
sub
jbe
test
testl
dec
sbb
mov
cmp
icebp
push
pop
in
pop
push
sbb
and
pop
int
mov
stos
fs
outsb
inc
ljmp
sub
pusha
and
insb
xor
jecxz
out
dec
or
mov
inc
or
or
nop
sahf
mov
sub
add
mov
cwtl
sbb
andb
dec
xor
in
orb
inc
push
jb
push
arpl
fisttps
fidivl
or
test
mov
jmp
push
inc
sub
push
mov
mov
shl
push
es
ss
jns
nop
dec
lcall
jns
xor
jo
cmpsl
mov
into
rcr
mov
cmp
or
movsl
inc
ja
inc
into
mov
jnp
mov
pop
pop
aam
shr
fdivl
push
int
mov
jmp
sbb
pop
mov
add
out
cwtl
in
les
jp
cld
aad
push
cmp
lods
add
pop
jno
jmp
cmp
popf
out
add
add
pushf
into
inc
jecxz
mov
pop
and
sbb
lods
inc
mov
jecxz
xor
jno
icebp
jnp
sahf
adc
jl
dec
cmp
and
lahf
jne
pop
adc
push
sbb
mov
jg
dec
pusha
in
xchg
lret
test
stc
sti
mov
jbe
xchg
rcrl
sti
jecxz
rcll
pop
inc
push
inc
mov
cltd
add
push
dec
sbbl
cmpb
push
out
mov
add
in
lea
mov
cld
mov
in
mov
loop
push
clc
inc
jmp
push
mov
mov
out
xchg
lcall
inc
in
sbbl
scas
xor
nop
sahf
or
les
movsb
jl
std
dec
push
jbe,pn
popf
cmpsl
mov
rorb
lea
leave
xlat
xor
das
xor
out
and
outsb
test
xchg
int
inc
or
stos
sub
das
test
jb
mov
xchg
out
mov
xor
xor
xchg
lods
add
or
int
insl
addr16
or
js
jae
and
xchg
push
sbb
int
dec
lock
ljmp
in
jecxz
push
into
push
movsb
mov
jno
cltd
inc
push
int3
jbe
or
int
xor
or
insb
popa
jnp
lea
lods
cmp
outsl
fwait
mov
mov
movsl
mov
idivb
cmp
mov
fwait
nop
shlb
jge
sbb
stos
push
mov
dec
fbstp
xor
stos
ljmp
lret
push
jmp
insb
outsl
pop
or
pop
lods
and
shlb
pusha
mov
pop
scas
icebp
cmp
ret
test
imul
sahf
lahf
mov
mov
hlt
fsubl
repz
mov
sti
or
lods
push
mov
int
int
or
arpl
stos
xchg
and
popa
fsub
xor
or
bound
test
push
push
ds
dec
mov
mov
push
stc
pop
fst
mov
pop
cmp
mov
add
test
push
test
xor
cmp
xor
stos
xchg
jle
pop
cmpsb
in
pop
in
xor
mov
jne
scas
sbb
sbb
rclb
outsb
inc
mov
xor
iret
jp
mov
cmp
repz
dec
daa
jno
pop
movsw
sbb
mov
es
and
adc
add
cwtl
xchg
cld
cmp
adc
jns
pop
test
adc
das
xchg
jo
cmp
mov
int
mov
int3
and
lahf
push
jge
out
aam
dec
jb
xor
mov
mov
push
or
sti
int3
sbb
fildll
cmp
inc
fcoml
jb
sbbl
call
loope
lock
mov
gs
push
xlat
ret
and
add
popa
jns
jle
or
fwait
or
ret
push
int3
cwtl
sti
sar
mov
push
nop
mov
adc
data16
call
adc
push
lock
repz
jp
fcomps
jl
pushf
cmpsl
popa
adc
fwait
popa
sbb
cmpsl
dec
in
leave
movsl
or
jns
xchg
cltd
xchg
jns
dec
inc
int
cld
fbstp
xchg
jnp
adc
push
bound
ss
cmpl
outsb
mov
cld
or
clc
mov
push
into
outsl
adcb
xor
cmpl
sti
jmp
out
xchg
push
jno
movsl
cmp
imul
or
jecxz
sub
adcb
cli
sahf
sti
nop
iret
adc
aam
sub
or
lods
xchg
mov
ret
gs
out
add
test
lea
pop
insb
fisttps
stos
adc
jno
and
adc
aam
push
dec
xchg
repnz
fisttps
js
dec
pushf
inc
mov
xor
push
push
mov
cli
jl
pop
push
std
lods
inc
mov
xchg
push
ss
mov
pushf
jmp
jno
mov
sahf
or
outsb
lods
adc
mov
pop
lret
mov
int
sub
enter
aam
sbb
mov
or
rcrb
push
sub
xor
push
in
mov
adc
ret
rcll
lock
shl
mov
fnstenv
xor
or
mov
cmc
int
cmc
push
sub
stos
dec
clc
add
outsb
test
dec
lea
std
fnstcw
bnd
mov
mov
jbe
mov
push
pop
lea
cmp
jae
jne
out
sbb
or
aam
xor
mov
mov
outsl
or
sbb
fmull
icebp
mov
fbstp
notb
add
add
cmp
push
mov
div
xchg
popf
lds
mov
movsl
insb
aaa
adc
out
fsubrs
jne
jmp
mov
nop
mulb
repnz
lds
popa
xchg
ret
dec
pop
or
rorb
cli
mov
enter
ret
jns
jmp
sub
mov
sbb
mov
mov
jl
xlat
sahf
sti
push
outsb
sbb
dec
pop
andb
out
xchg
lret
mov
mov
or
xor
cmp
lcall
jl
loopne
les
or
repz
lods
sti
mov
xchg
fdivl
mov
jno
and
mov
xor
cmp
sbb
push
xlat
ss
jnp
jbe
in
adc
mov
pop
mov
imul
adc
inc
dec
inc
or
push
shrb
nop
leave
or
push
push
jnp
aas
xchg
sub
mov
pop
into
in
jge
inc
out
mov
notl
xorb
out
ret
mov
dec
xchg
ljmp
out
cmc
xchg
fidivl
push
cwtl
pop
cmpb
cld
add
mov
jmp
mov
inc
jb
dec
popf
loope
lahf
xlat
jne
pop
test
mov
xchg
push
mov
cmp
movsb
mov
xchg
mov
add
push
gs
lods
test
jnp
inc
pop
orb
dec
pop
sbb
es
movsb
mov
push
fisubs
lds
ljmp
pop
adc
leave
push
pop
jnp
or
cmp
add
and
inc
test
cmp
stc
sub
sarb
mov
test
ror
jnp
jecxz
daa
inc
fcomi
cld
pop
iret
add
aas
sub
popf
sti
mov
xchg
aad
sub
sub
jo
add
dec
shlb
dec
mov
and
ret
cmp
lods
mov
cwtl
push
ds
mov
and
sti
imulb
test
movsb
sahf
decl
add
scas
jo
inc
mov
insl
leave
cmp
lcall
xchg
cmp
xchg
ret
cmpsl
out
lds
stc
adc
icebp
cli
pop
test
popa
decl
mov
xlat
fwait
out
pop
adcl
jp
aam
data16
and
lea
mov
scas
or
and
or
fwait
lret
jge
push
lock
jbe
xor
fimull
mov
dec
cmpsb
xchg
or
psrld
cmp
xchg
xchg
std
mov
xor
cmp
lahf
jae
lret
sub
insl
inc
sub
in
adc
insl
test
out
rcll
insb
dec
mov
movsl
fcmovnu
lea
push
rorb
pop
outsb
dec
int3
cmp
and
add
rorl
jne
cmp
dec
dec
movq
aad
or
icebp
fcoml
xchg
pop
ja
jns
sti
pushf
prefetch
ljmp
iret
cmp
mov
cmp
pop
scas
test
sub
ret
scas
sti
ljmp
jns
pushw
and
cmp
xor
orb
mov
dec
sbb
mov
push
jo
je
xchg
stc
arpl
mov
es
pop
mov
add
or
jmp
cmp
stos
loope
pop
adc
sub
jge
stos
sub
addl
dec
add
sub
int
imul
inc
adc
mov
int3
xsha1
cmpsb
dec
jg
ror
aam
pop
cld
jl
lock
and
loope
xchg
mov
dec
and
adc
jbe
and
adcb
push
push
sub
pop
mov
cmpsl
je
gs
mov
call
stos
int3
inc
mov
lcall
xchg
xchg
data16
add
pop
ja
imul
aaa
add
add
dec
add
sub
pop
adc
inc
pop
js
jl
mov
bound
cltd
jnp
push
mov
scas
in
das
adc
imul
jne
adc
cmp
sbb
jo
pop
mov
sti
imul
mov
addr16
movsl
mov
fdivl
mov
sub
iret
lcall
push
ret
cmp
ret
adc
pop
or
sub
cmp
lret
in
push
xchg
push
or
push
jge
call
mov
mov
pop
jo
test
popa
das
mov
std
testb
outsb
adc
cmp
sub
bound
mov
mov
jl
dec
mov
sbbb
arpl
nop
jns
push
cmpsb
stos
lret
xor
mov
inc
sub
out
push
cmpsb
or
xor
rcr
shrl
mov
jae
out
call
hlt
int3
sbb
xchg
add
push
mov
dec
mov
cmp
cltd
icebp
jb
jl
aam
scas
xchg
jnp
les
jne
enter
push
sub
cmc
stc
clc
dec
mov
push
cmp
lock
lret
notb
xlat
jns
cli
xor
in
or
push
mov
int
ljmp
enter
adc
das
rcrb
xchg
mov
roll
lret
in
xchg
push
fiadds
stc
lea
mov
mov
jnp
fcomi
mov
dec
test
ds
xchg
jmp
sti
call
cmc
inc
sub
negb
nop
sbb
mov
push
rol
lret
pop
inc
cmc
jnp
pop
cli
cld
ja
push
into
fistl
lods
in
mov
mov
int
adc
pop
and
pop
hlt
stos
fistpll
mov
int3
add
push
subb
js
das
inc
xchg
or
dec
mov
daa
rolb
jnp
inc
lds
js
or
push
cmp
mov
push
pop
jno
jnp
shr
inc
mov
inc
jg
or
fwait
movsl
add
out
fwait
je
jl
xchg
daa
lods
push
add
mov
sahf
pop
stos
jnp
cmp
fwait
scas
mov
add
pop
aad
ret
ss
adc
shll
xor
lret
jo
sbb
inc
mov
push
xchg
dec
add
cmp
cmp
push
add
push
sbb
daa
mov
inc
insb
outsb
in
mov
shl
jnp
subb
mov
or
pop
sub
xchg
mov
stos
shlb
sti
loop
in
cmp
scas
ret
xorb
popfw
pushf
mov
int3
mov
cmp
in
add
lret
push
lds
fcomps
inc
data16
mov
sbb
outsb
xor
cltd
push
mov
dec
xor
fwait
dec
jae
dec
rolb
fdiv
dec
cmp
bound
cmpb
dec
xchg
sub
movsb
pop
or
in
xchg
stos
mov
addb
mov
and
cmp
dec
imul
imul
lret
push
pop
add
mov
jecxz
movsb
sti
mov
mov
and
mov
ja
dec
call
mov
adc
jl
dec
xchg
sbb
and
inc
rorl
leave
xchg
stos
mov
push
in
cwtl
into
stos
pop
mov
cwtl
mov
cmp
in
jnp
mov
and
out
out
arpl
xchg
sbb
cmpsb
and
pop
fcomps
fistpll
sti
mov
mov
test
mov
jo
jnp
xchg
loope
addr16
mov
cmp
cmp
int3
sti
sbbl
dec
pop
sarl
jp
rclb
test
aad
xor
ret
insb
int
adc
mulb
inc
addl
jne
jnp
or
inc
mov
xchg
scas
or
pop
in
jnp
addb
popa
xchg
decl
and
push
mov
int
mov
mov
pushf
mov
stc
out
push
mov
jg
out
sub
mov
jnp
lods
cmc
sub
out
ja
xor
scas
cmp
adc
notl
push
aam
int3
sti
into
and
sbbl
imul
pushf
ja
push
add
loopne
popa
mov
or
ja,pt
in
imul
adc
xchg
out
xchg
xor
lret
dec
push
test
test
jle
je
lret
jecxz
jge
xor
dec
cmp
nop
decb
push
mov
les
das
dec
jne
cmp
pusha
jns
adc
dec
lea
aad
jns
mov
inc
scas
out
loope
push
xchg
or
lds
or
out
in
and
jg
imul
sahf
int
jle
dec
or
fsubrl
fldcw
insb
jo
hlt
roll
in
jae
mov
cmc
andl
lock
in
dec
and
or
lret
xchg
lcall
mov
aas
mov
lea
es
fisubl
lds
das
jns
aaa
dec
dec
dec
int3
addr16
loope
jo
leave
mov
jmp
jne
push
jge
dec
sbb
daa
in
pop
les
mov
pop
push
movsb
movaps
jl
mov
pop
push
ret
sbb
mov
in
push
push
jmp
fidivrl
sub
ja
int
out
or
lret
or
mov
iret
popf
sti
test
xor
pop
mov
cmpsb
notl
dec
mov
dec
mov
jmp
add
mov
fucomp
cmpsb
stos
jns
inc
fsts
mov
sahf
adc
push
lock
leave
movsl
outsb
fiaddl
lods
inc
lret
rcrb
sub
out
fldt
cmpsb
push
stos
mov
sti
shll
adc
cs
jge
out
jnp
in
leave
jge
mov
mov
ds
lock
addr16
pop
fstps
andl
mov
divl
loop
inc
std
lea
scas
sub
dec
xchg
mov
xor
dec
xlat
push
or
fwait
nop
and
push
les
jge
decl
mov
dec
imul
int
sbb
jns
inc
int
sti
scas
gs
aaa
js
jnp
xchg
jbe
cmp
sub
push
rcl
add
lcall
into
rcrl
dec
sub
sti
add
push
insl
mov
jb
hlt
lret
dec
dec
cmp
jno
in
fs
add
jl
xchg
daa
into
jmp
fcoml
jnp
out
inc
add
es
dec
mov
mov
mov
testl
stc
pusha
cmp
jnp
out
cli
ss
push
xchg
lahf
mov
xchg
mov
jp
sti
pop
jge
fnstsw
jecxz
and
in
sbb
ss
int
mov
push
sub
push
sub
lahf
mov
xchg
rorl
jnp
dec
cli
leave
mov
lds
insl
insl
int
xor
sub
sub
cmp
mov
and
arpl
dec
imul
add
push
inc
imul
and
mov
shll
xchg
jae
jmp
sub
in
inc
aad
sarb
jbe
fcoml
mov
repnz
mov
scas
dec
sarb
and
addb
in
cmp
aam
xchg
pop
lcall
pusha
mov
dec
push
dec
mov
cltd
jb
stos
pop
mov
xchg
mov
push
jnp
jg
xchg
add
bswap
adc
jmp
mov
mov
mov
xchg
inc
jl
adc
cmp
pop
dec
mov
fdiv
int3
and
clc
or
and
mov
daa
push
ret
mov
sbb
xchg
xchg
adc
sub
cpuid
cmc
icebp
cmp
adc
int
lret
dec
jge
test
cmc
enter
pop
jl
mov
push
jnp
fstpt
push
adc
xorl
sub
xchg
ljmp
push
ret
ds
xchg
jge
add
cmp
pop
push
pop
fcompl
jl
into
sbb
sub
mov
or
push
std
ret
scas
jbe
shrb
fstpt
ficomps
adc
xchg
push
mov
mov
adc
nopl
mov
and
std
add
or
cmp
jno
frstor
insl
leave
lcall
sub
xchg
cld
dec
or
hlt
cmp
cmp
mov
pop
aam
xchg
pop
stc
incl
jno
cmp
icebp
int3
repz
sub
xchg
sti
dec
inc
cwtl
add
imul
icebp
pop
add
filds
sahf
sub
or
or
stos
mov
es
les
pop
into
mov
cmp
cltd
popl
out
xchg
cld
mov
or
sti
insl
add
lds
pushf
jnp
add
adc
ret
loop
insb
mov
es
int
dec
mov
fistpll
mov
xor
pop
sub
sti
aad
cmp
hlt
pop
dec
mov
mov
push
sub
pop
rol
je
stc
ret
jo
cmp
sub
stos
dec
or
push
or
xlat
stos
in
arpl
mulb
aas
popf
sahf
mul
into
or
adc
and
pop
in
jnp
jae
pop
dec
sub
sti
push
cmp
mov
xlat
sarl
mov
rcrl
lods
repz
xchg
push
movsl
rcrb
fwait
mov
sbb
fdiv
shrl
cmpb
sti
pop
in
cmpsb
dec
cmp
test
out
jg
inc
arpl
ja
or
xor
xchg
add
repz
lahf
lea
lahf
fmulp
into
adc
cld
repz
mov
and
inc
daa
mov
pop
lret
xor
push
mov
rcll
mov
jnp
inc
outsb
mov
inc
icebp
fimull
xchg
hlt
push
push
popa
out
loopne
xchg
mov
jbe
lret
int
pusha
or
inc
adc
xchg
movsl
pop
loopne
and
or
in
cs
mov
bound
push
pop
fmuls
inc
test
push
lods
fisubrl
mov
scas
jl
or
cmp
adc
int
loopne
mov
int3
lcall
movsl
xchg
xor
leave
push
mov
pushl
and
mov
mov
mov
sarb
mov
pop
xchg
sahf
mov
push
mov
in
cmp
inc
xchg
jbe
mov
mov
and
fidivrs
jp
dec
pop
addr16
repnz
clc
jg
push
mov
cmp
xor
lea
lret
stos
jnp
and
cmp
push
sub
lahf
xor
loop
jne
lahf
mov
or
lret
mov
xchg
jp
aam
lahf
jg
mov
xchg
ficoml
mov
aas
push
mov
dec
push
cmp
das
and
dec
cmp
mov
out
pop
mov
dec
rclb
xchg
mov
xchg
sub
push
xlat
scas
xor
out
pop
add
push
mov
xor
pop
sub
iret
xor
lret
add
pop
les
lock
nop
sti
movsb
aad
int
and
incb
cltd
xchg
inc
into
insl
fwait
jg
add
jmp
fstpt
xchg
pop
lock
nop
cmp
dec
mov
jnp
stc
xor
bound
xchg
fcomi
add
sbb
lods
nop
lea
mov
mov
add
dec
or
ficoms
ficomps
sarl
pop
outsb
pop
popa
and
cmp
push
adc
pop
rcrl
into
loop
imul
pop
push
lds
imul
dec
mov
lds
and
dec
outsl
adc
xchg
cmc
dec
inc
xor
sti
imul
sahf
pop
int
jne
inc
xor
add
iret
mov
mov
lret
mov
and
std
insb
divl
mov
dec
mov
test
outsb
dec
mov
call
insb
cmpb
pop
push
andl
push
xchg
int
mov
in
adc
xor
inc
fdivr
sahf
outsl
or
pop
jl
cmp
xchg
aaa
test
sbb
mov
sub
xchg
or
cld
sbb
push
xlat
scas
cmp
jecxz
fwait
mov
repnz
shlb
arpl
xor
in
mov
mov
mov
aad
jnp
daa
ljmp
pop
jns
pop
dec
xchg
shl
or
push
adc
ret
fwait
sti
xchg
scas
mov
mov
pop
repnz
mov
mov
xchg
jae
xchg
lods
push
mov
cmp
jb
mov
xor
pop
xchg
lods
int
mov
cmpsl
inc
std
cmpsb
jge
dec
mov
mov
push
and
sub
dec
dec
jne
pop
pusha
jle
nop
push
or
and
pushf
jnp
idivb
push
xchg
dec
mov
mov
and
or
add
mov
adc
or
inc
mov
jae
dec
fnsave
cmp
cmp
mov
inc
mov
xor
dec
xor
dec
jl
and
pop
les
jnp
cs
sbb
xor
pop
roll
dec
jge
fstp
xchg
dec
mov
mov
inc
aad
inc
movsl
fmull
cltd
ja
out
dec
loop
mov
lea
adc
cmpsb
xchg
std
je
push
les
jae
in
sub
xchg
inc
aas
pop
adc
cli
std
stos
xchg
lock
cmp
rcrb
pushf
mov
or
enter
shl
jnp
xor
sbb
ficompl
add
aad
fsubrl
pop
xchg
pop
aam
xchg
mov
outsb
add
insb
mov
inc
idivb
std
pushf
pop
mov
mov
xchg
add
sbb
push
sahf
daa
repz
movsb
or
push
add
push
push
pop
cmp
or
and
sub
nop
ss
int
mov
imull
dec
sbb
push
xor
int
sbb
jmp
push
fwait
jmp
cli
in
dec
jle
xor
test
movq
lret
stos
mov
sti
pushf
adc
mov
outsl
nop
mov
push
ja
shr
inc
dec
pop
leave
cltd
in
or
out
fs
lret
mov
sbb
pusha
in
push
inc
iret
test
sahf
lea
fmul
ds
jnp
push
sbb
cmp
xchg
aad
xor
or
push
jne
in
xorb
jecxz
sarl
daa
aam
lods
lock
xchg
sbb
pop
adc
loop
sarl
inc
or
xor
leave
aad
pop
sarl
jno
dec
mov
xor
jmp
mov
dec
popf
jbe
mov
imul
sbb
lea
ss
test
adc
repz
das
push
adc
jl
push
insl
shr
loope
jbe
add
lea
mov
jp
xchg
sbb
mov
sbb
addl
push
push
stc
push
cmc
movsl
sti
fs
push
push
lods
cmp
aas
mov
xchg
ret
loopne
pusha
outsb
xlat
loopne
cmp
or
ret
jmp
mov
test
mov
scas
pop
or
shl
mov
add
mov
aad
jmp
ret
imull
mov
arpl
cld
mov
mov
jmpw
or
xor
cmp
fcom
roll
push
sbb
sub
cmc
sti
mov
pop
xchg
or
rorl
sub
xchg
push
and
jl
pop
lea
mov
test
and
aam
scas
pop
dec
jecxz
mov
lods
test
mov
jno
into
jo
sbb
xlat
xorps
lods
mov
pop
arpl
outsl
pop
fmuls
clc
lret
in
sub
mov
jnp
ret
iret
push
js
push
rclb
dec
mov
xchg
int
adc
sbbl
push
fildll
jmp
xor
in
int
jl
mov
shlb
scas
in
pusha
outsb
scas
dec
sub
ss
and
dec
add
loope
mov
loop
js
mov
mov
scas
or
add
pop
cld
dec
dec
stos
pop
inc
dec
imull
dec
mov
js
sub
loop
sbb
daa
xor
nop
int
lret
sub
loop
out
xor
xor
xchg
int
daa
jmp
popf
adc
andb
jbe
mov
push
dec
pop
pop
push
iret
adc
add
xchg
dec
int
or
lea
lcall
sti
mov
in
enter
xchg
mov
xor
int
adcb
cmp
or
lds
push
mov
mov
or
cmp
bound
fs
test
adc
mov
dec
sbb
push
test
mov
pop
ss
mov
dec
xchg
cmp
rolb
je
jl
lea
xchg
pop
cli
movsb
out
lret
inc
int
pusha
and
ret
or
js
cmp
aas
ret
pop
data16
lea
mov
cmp
in
dec
int
xor
sbb
cmp
lahf
sub
adc
leave
push
cmpsb
inc
cld
cmp
inc
leave
mov
test
jae
lods
mov
sbb
rcr
mov
icebp
sarb
mov
stos
jnp
cmp
shl
add
cmp
iret
xchg
cmp
lea
push
imul
dec
aad
jno
push
ficoml
cmp
jnp
fistps
test
stos
mov
fsubs
je
dec
test
add
inc
imul
add
lods
int
lret
xchg
xchg
insl
add
js
mov
ret
add
loope
sub
outsb
rcrb
cmp
inc
jge
pushl
cmc
push
je
jnp
mov
push
cmp
repnz
int
fildl
scas
or
rorb
pusha
leave
jno
sub
adc
in
sbb
jnp
nop
jle
or
push
xchg
inc
jl
imul
inc
pop
dec
xor
aam
sub
fisttps
pop
int
pop
or
test
inc
dec
pop
push
inc
adc
imul
sbb
jecxz
aad
and
push
cmp
or
aaa
mov
shl
push
subw
mov
inc
into
cmp
lock
daa
sbb
xchg
push
movsb
xchg
xchg
mov
imul
push
std
stc
jae
jnp
xor
ss
dec
scas
push
insl
pop
and
xor
pop
sahf
dec
sbb
push
mov
mov
ljmp
add
call
and
push
push
adc
adc
or
into
movsb
cmp
mov
xchg
jne
fstl
jmp
dec
jecxz
pop
int3
xchg
out
jns
cs
popl
cmp
inc
sub
pop
cmpsl
cmpb
in
int
xor
pop
mov
cmp
enter
lods
xchg
jmp
dec
mov
imul
or
jp
mov
test
and
das
pop
lds
repz
dec
adc
sbb
in
dec
mov
addb
sti
int
sbb
insb
xor
cmp
dec
or
mov
mov
dec
inc
out
int
cmp
and
push
pop
mov
mov
imul
push
loope
mov
mov
stos
push
xlat
jg
push
imul
add
lret
add
mov
xor
gs
inc
jle
cmpl
lret
dec
clc
cmp
adc
xchg
mov
fdivrl
enter
mov
pusha
jg
mov
pop
outsb
rorl
mov
in
or
jns
sahf
ret
nop
fwait
add
add
sahf
sbb
bound
xorl
pop
gs
pop
int
jnp
rcll
lret
mov
mov
ljmp
jle
fcompl
jg
push
rclb
or
loope
push
push
xor
xor
int
test
push
iret
push
or
je
xchg
mov
int
iret
fsts
cmp
aaa
xchg
test
pop
dec
aam
push
xchg
leave
sti
adc
test
int3
dec
cmp
push
les
dec
xchg
fldt
adc
pop
or
sbb
loopne
mov
pop
add
mov
sbb
iret
xchg
std
lds
out
push
lret
mov
add
dec
das
imul
pop
pop
lods
pushf
add
fsubr
and
jmp
rolb
xor
jne
lock
jg
dec
in
dec
cmpsl
in
roll
inc
and
jnp
repz
movsl
mov
pop
clc
insl
rorl
mov
xchg
mov
rol
scas
sbbb
jp
xor
lea
stc
mov
cmpsb
dec
dec
mov
andb
cmp
mov
insl
inc
dec
adc
jbe
xchg
fdivs
mov
mov
in
mov
jb
or
addl
pop
into
inc
roll
imul
xchg
add
scas
inc
movsl
xor
int
or
loop
adc
repz
mov
mov
icebp
inc
loopne
mov
movsb
shr
test
pop
xchg
in
or
add
pop
int
xchg
mov
movsl
test
scas
ss
inc
jl
cmpsb
dec
cmp
mov
xor
fistl
inc
mov
add
in
lock
inc
jne
or
iret
pushf
mov
pop
xlat
sub
into
push
shrd
std
daa
sub
push
and
sub
inc
enter
nop
fucom
xchg
mov
push
jne
popf
xchg
xchg
cmp
insl
xchg
add
icebp
xchg
jnp
add
jae
lret
nop
in
xchg
insl
inc
aam
iret
cmp
loop
xor
fisubs
add
stos
rcr
push
dec
or
xchg
cmp
add
lea
inc
sarl
dec
xchg
test
fldcw
sbb
adc
test
sarb
dec
add
outsl
push
lret
xlat
mov
clc
imul
jle
mov
test
jae
loopne
dec
sub
insl
in
sti
lds
xor
push
imul
pop
subb
lret
fistpll
mov
std
xor
mov
decl
sub
mov
xor
dec
bound
rcrl
dec
jb
inc
shl
loopne
mov
pusha
mov
fsubrp
xchg
mov
push
jnp
std
pop
data16
push
push
or
xor
nop
mov
or
jb
jnp
lods
setne
into
addr16
mov
mov
jo
mov
push
popa
or
icebp
sub
fimull
mov
or
fmuls
pusha
xor
sub
aas
lret
dec
mov
xor
xor
cmp
sbbb
xchg
jo
ficoms
xor
insl
pop
adc
pop
mov
test
xchg
das
push
adc
daa
add
gs
and
lea
adc
jmp
sahf
fistpll
push
pop
ds
adc
xor
das
mov
jl
iret
mov
mov
xchg
imul
dec
rorl
lea
push
pop
loopne
dec
ret
mov
mov
rclb
add
outsb
push
mov
cmp
ret
dec
sti
sahf
add
enter
xor
jnp
pusha
push
sarb
xor
in
adc
dec
ljmp
jno
popa
ret
push
punpcklbw
cmp
sub
lahf
dec
and
orb
or
enter
inc
cmpxchg
jg
lods
popf
arpl
icebp
push
inc
adc
cmp
mov
orl
mov
jbe
stc
iret
je
xor
ret
repz
pop
lods
mov
mov
mov
jnp
imul
xor
push
push
std
fisubl
lods
add
mov
sbb
mov
imul
adc
xorb
lds
cmpsl
out
xchg
sti
xchg
mov
add
xchg
and
mov
mov
pop
sbb
imul
loop
test
adc
hlt
into
lahf
push
add
sahf
mul
dec
fs
or
push
xlat
int3
mov
pop
roll
xchg
jmp
jl
sub
pop
cmp
mov
pusha
push
lds
fisubrl
popf
lahf
cmp
aas
icebp
sti
mov
push
or
xlat
lahf
stos
sti
or
lret
cmp
adc
jecxz
pop
into
add
fnstsw
rcr
shr
stos
mov
dec
aad
sti
movsl
xchg
mov
cwtl
xchg
inc
jnp
inc
jns
pop
mov
jnp
arpl
xchg
data16
inc
pop
insl
lods
or
repz
std
lea
mov
mov
sbb
jo
or
inc
daa
jae
iret
enter
movsl
add
jb
mov
inc
push
push
fwait
cmp
in
sbb
xchg
lea
fwait
sub
ret
movsl
cmpsl
inc
dec
xchg
aaa
inc
dec
sub
and
xchg
push
mov
loope
fstl
pop
jle
mov
mov
je
insl
mov
sbb
xchg
cmp
in
adc
and
push
cmp
shlb
jmp
fmull
test
lods
lds
daa
shrb
and
dec
or
jno
mov
leave
sbb
push
movsl
je
imul
cmpsl
mov
inc
test
mov
mov
dec
fbstp
and
aam
lods
subl
mov
push
cli
cmp
out
xchg
pop
insb
add
sbb
or
jp
js
cmp
arpl
int3
jge
jmp
xor
sub
jbe
mov
cmp
movsb
lret
cmp
sub
mov
lds
dec
daa
aaa
test
and
mov
lret
iret
cmp
mov
ret
mov
insb
sar
test
lret
lret
jnp
jl
inc
dec
push
jno
adc
jns
xchg
mov
pop
pushf
mov
mov
scas
jnp
pop
adc
pop
cmpsl
movsl
shll
aas
push
std
imul
ja
out
mov
mov
push
ja
or
adc
mov
jo
aas
xor
and
test
jge
mov
arpl
js
stos
push
dec
fstps
pop
push
rorb
xor
jbe
or
cmp
arpl
cmc
push
pop
jl
int
add
jnp
stos
mov
pop
pushf
adc
mov
das
sarl
fildl
or
out
inc
push
push
fdivl
pop
mov
push
xchg
push
dec
lcall
mov
xchg
mov
testb
jae
or
xor
dec
inc
out
sti
push
test
ds
inc
mov
lea
mov
mulb
jle
sbb
or
jnp
sub
adc
push
ljmp
test
cmpl
dec
pop
sbb
sbb
adc
out
push
mov
dec
mov
cmpsb
addl
xchg
mov
xor
inc
stos
dec
pop
mov
test
lret
mov
out
pop
xor
xor
jle
mov
sti
in
or
sub
sbb
aad
mov
mov
outsb
sub
push
int3
jnp
push
filds
enter
cltd
in
jl
dec
cmc
mov
push
in
pop
addl
nop
mov
popa
movsl
mov
cltd
mov
ds
iret
lods
sti
jp
pop
rcrl
ret
xchg
addr16
out
add
sti
jae
lcall
outsb
cmpb
test
mov
popf
xor
int
int
ds
sbb
push
lods
iret
sbb
into
orb
or
cmpsl
push
aaa
sub
enter
mov
mov
cld
enter
adc
leave
or
nop
jnp
adc
or
repz
and
leave
adc
repz
aam
or
in
cld
dec
std
and
sbb
mov
std
pop
les
dec
dec
std
pop
js
test
testl
xchg
enter
fldt
repz
jnp
xor
inc
adc
hlt
jnp
xor
cmpsb
cmp
lret
sbb
pop
icebp
or
inc
pop
push
pop
out
jnp
pop
pushf
mov
aad
scas
jo
and
arpl
inc
sbb
insb
sub
roll
add
rorl
mov
fs
subl
xorb
mov
scas
or
mov
lock
fsubs
mov
pop
xchg
in
cmpsb
sti
pop
cmp
mov
movsb
mov
sbb
lcall
arpl
stos
cmpsb
out
mov
mov
sub
sti
jno
mul
cmp
ljmp
xchg
decl
popl
stos
test
push
call
or
add
test
push
sub
add
xchg
mov
fstl
imul
sti
cmc
jo
adc
mov
adc
into
ret
pop
cmpsb
or
push
dec
incb
cmpsl
ljmp
mov
int
mov
test
int3
test
incl
or
pop
xorl
icebp
out
out
dec
cmp
cmp
ret
loope
push
popa
sub
push
add
imul
movsl
xor
add
cld
in
xor
int
fstpt
add
sarl
sub
in
repnz
int
jne
test
mov
imul
arpl
aad
pushl
out
aas
scas
adc
or
ret
cmp
das
adc
jb
or
push
cmp
cli
adc
mov
pop
push
mov
pop
cmp
repnz
inc
xor
jecxz
iret
pushf
fs
lods
cmp
lods
jle
ljmp
xchg
add
mov
or
arpl
mov
mov
mov
dec
clc
roll
sbb
jmp
mov
adc
jnp
je
cltd
and
cmp
aas
shrl
out
push
and
out
lahf
rol
push
dec
imul
orb
out
imul
ficoms
add
cmc
inc
mov
lcall
mov
popa
mov
dec
mov
xchg
std
negl
mov
push
xorl
jno
or
into
adc
xor
in
stc
or
scas
inc
xchg
sbb
pop
or
fnstenv
lahf
cmp
or
lock
sub
mov
push
mov
cmp
sahf
js
lret
dec
or
jnp
insb
xor
jbe
xchg
jg
mov
imul
xchg
jns
pop
sbb
lret
pop
scas
int
lahf
fists
sub
lods
mov
addr16
add
sub
jnp
shlb
mov
imul
notb
add
fldcw
pop
pop
fs
adc
fnstsw
int
fists
cmp
insl
push
fmuls
pop
stc
jle
ds
dec
mov
lea
mov
or
xchg
xchg
or
aaa
pop
rcll
pushf
aam
outsb
jnp
mov
xchg
repnz
imul
sbb
or
or
subl
mov
inc
lea
dec
lahf
shl
sub
mov
mov
lcall
inc
mov
ljmp
mov
xor
movsl
cmpsl
mov
cli
enter
stc
add
in
jecxz
lock
jg
sub
mov
ror
test
pop
mov
dec
sub
std
mov
inc
es
daa
push
cmp
inc
int
aad
inc
mov
push
cmpl
or
in
je
jo
inc
and
shl
lahf
mov
mov
jae
pop
scas
lea
ja
xchg
or
mov
lds
es
jnp
outsb
and
lret
sti
or
add
pop
xorl
iret
adc
pop
dec
jbe
fists
and
scas
inc
popaw
lcall
pop
int3
mov
mov
jp
sbb
jo
mov
movsb
sti
ljmp
xchg
lea
xor
cltd
imul
sbbl
mov
es
mov
rorb
adc
adc
lret
je
xor
rorb
sti
or
js
dec
mov
dec
dec
jl
dec
lahf
cld
jmp
dec
fldl
call
lret
xchg
shlb
ss
cld
push
data16
jo
dec
lods
sar
cmc
pop
mov
mov
cs
mov
pop
mov
mov
sub
or
jle
xlat
sub
add
jp
in
push
inc
or
or
imul
fcom
mov
or
int3
pop
sti
cwtl
std
nopl
pop
jae
test
test
mov
or
xor
daa
push
jae
shlb
lcall
sbb
mov
out
cltd
popf
mov
dec
pop
jns
int3
pop
jo
jbe
cmpsl
xlat
xchg
dec
mov
popf
lods
jo
lahf
lock
js
mov
gs
cmp
leave
dec
cmp
clc
adc
lret
mov
mov
enter
xchg
sti
or
dec
add
lds
or
outsl
pushf
cmpl
xlat
push
lret
inc
movsl
adc
dec
sbb
cld
gs
dec
push
ret
aas
cmp
xchg
jae
js
jmp
and
jbe
sar
pop
bound
mov
dec
inc
mov
ret
push
sbb
xchg
pop
fistl
sub
repz
je
cmpsl
je
insl
inc
pop
repz
outsl
andb
dec
dec
or
mov
lds
jne
cltd
into
rcrl
jnp
push
mov
vmulsd
and
test
sub
aas
inc
out
clc
xchg
out
and
jge
adc
mov
adc
insl
and
out
xchg
in
stos
sbb
fdivrl
pop
dec
xchg
je
orl
fwait
insb
inc
jns
mov
nop
ret
scas
pop
cmp
jmp
mov
mov
shr
test
or
sti
sbb
in
aaa
insb
cmp
fdiv
stos
pop
or
add
inc
call
scas
sbb
out
push
push
mov
int
mov
into
jae
inc
mov
aad
push
jnp
jmp
mov
decb
jno
pop
xchg
ret
cmp
dec
cmpsl
gs
sbb
aas
add
mov
inc
xchg
repnz
mov
pop
mov
mov
adc
into
xchg
sti
dec
xlat
mov
rcr
jnp
jl
jl
fmull
jae
xorl
sbb
sti
sbb
adc
lds
fsub
dec
push
cmp
sbb
inc
mov
or
inc
dec
iret
out
loopew
loope
inc
sub
aas
data16
test
cmpl
add
das
bound
hlt
mov
push
cmp
fwait
push
jae
andl
aaa
imul
xor
sub
mov
leave
xchg
xchg
jmp
cmp
push
aas
fisubrs
popa
ljmp
stc
jg
or
out
sbb
test
popf
mov
or
imul
inc
cmc
imul
lret
xchg
pop
xor
cmc
push
cld
mov
pop
rorl
pop
mov
xor
popf
inc
cmp
lds
push
jecxz
cmp
push
imul
mov
sbbl
inc
inc
jo
sub
mov
fldenv
sub
jae
mov
mov
int
pushf
mov
rol
enter
inc
int
mov
or
dec
cwtl
jno
mov
add
int3
movsl
loopne
cmp
or
pop
xor
jl
mov
xor
mov
push
mov
clc
cmp
sbbl
sahf
movsb
mov
je
pop
sbb
scas
sti
adc
mov
cmp
xchg
or
fimull
mov
pop
or
push
hlt
movsb
flds
sti
mov
mov
xchg
dec
dec
enter
cmp
cmp
movsb
add
gs
cmp
jle
add
dec
les
cmp
subb
add
jl
mov
push
hlt
lcall
in
jp
insb
mov
inc
cmp
popa
sbb
or
mov
pop
push
sarb
in
fistps
mov
push
fbld
enter
ficomps
or
push
push
lret
xor
mov
stos
cmpl
pushf
notl
jmp
sti
or
push
mov
push
inc
cmp
xchg
or
js
lods
mov
lahf
mov
cmp
rol
stos
das
insl
lea
xchg
jmp
cmp
sub
je
mov
dec
cmc
lea
mov
rcll
inc
fistpl
dec
dec
cmp
ret
das
loopne
cmpsb
pop
data16
cmp
push
shrb
scas
lods
mov
xchg
inc
int
mov
sbb
pop
or
cmp
push
out
sti
dec
je
xchg
cmp
dec
or
adc
dec
gs
add
dec
sub
sub
inc
pop
shrl
aas
fisubrl
xor
int
lret
lret
inc
inc
and
mov
jge
push
sub
popa
mov
mov
add
faddp
pusha
add
or
mov
xchg
in
jnp
mov
fldt
adc
adc
mov
push
jl
in
stos
pop
addr16
xlat
imul
popa
int3
pop
jl
nop
jns
jmp
mov
adc
in
dec
adcl
adc
icebp
decl
lret
lods
sbb
ss
push
xchg
imul
and
jns
push
lock
aaa
insl
mov
dec
pop
addr16
sbb
imul
ret
or
pop
lods
add
xchg
stos
dec
xchg
mov
xchg
sti
call
xlat
movsl
xor
xor
mov
jnp
in
bound
xchg
cld
sub
jp
movsb
dec
cmp
push
mov
and
jge
leave
je
stos
data16
or
lods
xchg
into
mov
xor
sub
inc
cld
insl
lock
sbb
imul
and
rorl
mov
addb
or
into
imul
enter
fwait
fs
jbe
mov
push
jae
adc
jle
cmc
xchg
jmp
push
xchg
pop
movsl
cmp
mov
sub
insl
fldt
sti
loop
adc
popf
leave
shll
std
sbb
scas
cmp
cmc
test
test
dec
test
test
popa
adc
popf
pop
mov
jo
cmp
push
arpl
jge
pop
mov
cmpsb
mov
movb
mov
sbb
imul
jg
sbb
sub
mov
xchg
mov
addr16
das
adc
cmp
jbe
mov
nop
jno
in
jecxz
or
xchg
inc
scas
jg
int
pop
daa
pop
ss
lea
aam
inc
repz
mov
mov
inc
or
mov
dec
jbe
xor
fistpl
addr16
int3
cmp
push
mov
ret
out
addl
mov
add
dec
fistl
rol
divl
xchg
jnp
or
imul
lea
dec
inc
cld
subb
xor
jl
adc
loope
push
int3
jmp
addr16
sbb
test
or
cmp
jmp
aaa
adc
inc
xor
iret
mov
mov
add
mov
inc
insl
into
test
cmp
cs
test
sbb
mov
call
cmpsb
or
dec
stos
mov
sub
cs
or
ja
xor
jmp
add
fistl
add
in
in
loope
adc
push
push
xchg
sbb
adc
xchg
pop
pop
sub
in
cmpsl
mov
dec
jns
cmp
loopne
nop
sub
addr16
mov
jb
mov
mov
fldcw
rclb
add
mov
ret
fnstcw
mov
sbb
fsts
lea
fsubrl
ja
sub
cmpsl
lahf
dec
out
enter
cmp
push
fsubr
cmp
gs
sbb
or
add
pop
cmp
cmc
and
push
xchg
and
inc
adc
mov
push
xchg
fcoml
lret
mov
xchg
dec
ror
mov
jle
sbbl
movsb
icebp
push
mov
push
ret
mov
js
and
in
mov
push
sub
mov
in
xor
cwtl
push
push
jo
add
insb
nop
sti
cld
jge
aad
dec
out
or
mov
add
gs
mov
int
cmp
aad
or
xchg
shlb
je
xor
daa
push
mov
push
or
repnz
adc
ja
or
push
mov
xor
mov
int3
pop
cmpsl
add
cmpb
jmp
mov
sbb
jle
out
add
shr
adc
pop
xor
lcall
dec
adc
jae
dec
xchg
or
cltd
sbb
add
movsl
insl
cmp
into
xor
insl
sub
test
insl
int
popf
jmp
cmpsb
mov
dec
imul
jl
ja
mov
ljmp
sarb
push
sarb
cs
sbb
aas
mov
adc
ja
scas
into
sti
inc
or
jle
mov
lret
add
subb
ret
cwtl
jnp
mov
inc
cmp
jns
sub
scas
push
int
les
mov
mov
lahf
cmpsb
push
mov
cmp
xchg
mov
imul
cli
and
adc
xorb
inc
mov
insl
xlat
in
xchg
ljmp
jnp
imul
adc
repz
or
test
mov
pop
xor
orl
cmp
push
or
push
pop
sub
add
xchg
scas
pop
imull
das
movsl
lea
cmpsl
add
loop
jecxz
add
mov
dec
sahf
aaa
sbb
mov
shl
mov
adc
add
add
or
pop
stc
int3
xor
mov
mov
aad
adc
sti
int
xchg
ret
jae
mov
sbb
cmpsb
repz
push
sbb
mov
into
xchg
rcr
add
stc
scas
jg
aad
push
sbb
jle
add
lret
lods
pop
out
int
andb
sahf
sbb
rcr
jle
fdivl
jge
push
adc
movsl
gs
jae
stc
xor
jg
xchg
jnp
or
or
mov
pop
pushf
inc
ret
std
jmp
fs
or
sti
jmp
in
out
popw
push
pop
add
in
dec
lcall
xchg
int3
xchg
cli
in
mov
out
leave
xchg
aas
pop
negl
int3
cltd
outsl
fdivr
push
and
mov
jno
adc
or
sahf
mov
repnz
fildll
fcmovb
dec
or
inc
adc
in
mov
fistl
and
rcrb
fmull
pop
mov
jp
inc
add
mov
adc
les
push
mov
add
xor
cmp
les
in
ret
jg
mov
sarl
sub
mov
movsl
jge
imul
mov
adc
ret
jb
sub
dec
out
cli
or
roll
pop
in
filds
sub
ds
lock
pop
adc
into
mov
jmp
sub
jo
xchg
mov
inc
mov
icebp
cmp
int
into
rol
call
dec
shll
imul
js
arpl
mov
nop
mov
out
pop
sbb
cltd
pop
jns,pn
mov
lahf
in
mov
cmpsl
aas
or
scas
dec
mov
inc
fs
call
into
mov
xor
inc
or
sbb
xchg
outsb
shl
mov
dec
int
sarl
inc
ret
mov
fwait
sbb
stos
mov
ret
hlt
adc
cmp
inc
sub
iret
sbb
mov
cltd
push
xlat
es
sbb
push
mov
inc
mov
sbb
int
std
cmpb
jnp
ja
and
stos
add
filds
jb
add
out
dec
cwtl
sti
lods
movsl
ds
ret
fistpl
pop
cld
std
mov
jnp
push
rorl
in
repnz
or
or
push
sub
lcall
or
orb
jl
lea
pop
rclb
std
mov
mov
sbb
nop
add
out
repz
push
xor
xchg
pop
sub
loope
scas
cmp
std
adc
mov
sbb
scas
aad
ss
aad
inc
lret
push
or
into
push
xor
jnp
jge
test
rcll
stos
push
cltd
sub
and
imul
mov
rcrl
mov
jbe
dec
cwtl
das
add
jp
inc
mov
lds
sahf
mov
ja
cmp
insl
dec
xchg
sub
cwtl
mov
rorl
out
inc
int
jbe
aam
sub
add
icebp
in
and
dec
pop
add
sti
jo
push
loopne
inc
aaa
mov
aad
add
mov
cmp
popf
bound
dec
sbb
je
inc
mov
rcrb
mov
and
mov
pop
test
and
or
dec
mov
mov
lret
test
mov
pop
pop
loop
jno
int3
dec
cmp
add
xchg
insl
adc
mov
test
bound
pushf
int3
adc
mov
and
ret
in
or
ret
std
test
adc
mov
xchg
mov
sti
in
nop
inc
mov
pop
ds
adc
test
cwtl
xor
or
sbb
or
jp
loope
push
dec
hlt
sbb
jg
adc
or
sub
push
pmaddwd
int
and
and
out
stos
xlat
loopne
loope
push
cli
dec
movsb
cmp
cwtl
jle
pop
mov
lret
lds
push
and
testl
inc
inc
pop
or
push
popa
insl
push
pop
mov
call
push
sti
pusha
into
out
inc
loopne
sti
mov
sbbl
sbb
sbb
xchg
adc
lods
cltd
add
cmpb
sti
mov
rolb
shl
outsl
adc
or
mov
pushf
fcmovnbe
adc
hlt
mov
mov
cmpsl
loopne
jnp
or
cmp
rcpps
pop
pop
jnp
push
push
mov
jge
xchg
push
dec
mov
lcall
mov
shrb
dec
jp
lcall
sar
int
dec
sub
dec
daa
push
sub
mov
mov
inc
orl
and
verw
sbb
addr16
pusha
mov
sub
pushf
adc
imul
sub
jo
fs
fldcw
mov
in
pusha
and
pushf
sub
jae
sbb
add
mov
jbe
cmpb
add
pop
or
cld
fisttpl
pop
mov
push
ljmp
jns
in
cwtl
push
pop
mov
add
lcall
pop
cmpsl
shrl
push
lahf
jle
or
mov
data16
fst
xchg
jno
mov
dec
cmpsb
mov
xor
pusha
aaa
pop
or
in
lods
je
outsb
mov
adc
in
or
jae
push
insb
mov
pop
cmpl
and
sar
mov
adc
sbb
inc
jae
roll
mov
jge
pop
or
test
popa
sbb
int3
das
jnp
mov
movsl
cmp
out
mov
insl
mov
popf
add
popf
jg
jg
loope
cmpsl
or
jnp
das
cld
leave
xchg
and
call
pop
mov
data16
lcall
push
adc
pop
mov
push
mov
lock
mov
out
cmpsb
int
imul
mov
insb
or
xor
sbb
and
test
xchg
lods
jnp
jle
adc
fucomi
mov
int
inc
sub
test
cltd
xchg
int
mov
mov
gs
lahf
xchg
icebp
imul
cltd
out
mov
lock
out
xchg
test
scas
aam
mov
leave
imul
adc
sbb
insl
inc
push
xchg
jle
loopne
lcall
cmpsl
adc
mov
xor
mov
inc
cmp
repz
dec
push
pushf
cmp
xchg
dec
jbe
cld
cmp
jl
jmp
fistps
or
out
jnp
ror
jl
mov
outsb
jnp
out
movsl
xlat
shlb
or
inc
lea
lds
xchg
add
sbb
lahf
cmp
or
or
xchg
aaa
mov
dec
jae
xchg
mov
cmp
js
add
jg
std
cwtl
in
out
in
inc
cld
cmpsl
sub
leave
loop
mov
imulb
jnp
or
adc
pop
sbbb
pop
mov
mov
dec
sbb
xor
dec
cld
ds
push
sarb
lods
xchg
push
pop
lock
aas
nop
lret
jbe
and
sbb
jmp
fidivs
dec
fs
jo
mov
push
insb
push
shrl
shrl
jge
shlb
pop
icebp
fstpt
hlt
mov
jl
in
mov
loopne
sahf
jae
or
xchg
dec
int3
scas
jnp
mov
inc
fdivs
dec
jle
xchg
mov
bnd
mov
jbe
cwtl
dec
lea
sbb
insb
add
cmpb
cmp
loop
fs
sub
std
mov
xchg
pop
ret
mov
pop
adc
push
dec
cmp
xchg
pop
push
pop
mov
or
jnp
mov
add
outsl
in
mov
insl
sub
sub
mov
xchg
clc
in
fscale
push
mov
lcall
int
test
pop
or
mov
sbb
or
sub
mov
dec
les
sub
mov
stos
lcall
cmp
push
inc
push
dec
inc
mov
mov
sub
xchg
pusha
sti
mov
js
pusha
insl
dec
cwtl
dec
ja
leave
lea
fwait
jnp
mov
mov
push
jle
mov
into
sti
push
movsl
sub
mov
xor
adc
pop
xchg
inc
sbb
shll
mov
int
loope
xchg
ret
cmc
inc
push
push
xor
pop
inc
xor
jecxz
mov
xor
cmp
out
loopne
mov
push
out
and
cli
pop
pop
out
jbe
arpl
mov
mov
or
fs
movsb
clc
int
aad
inc
aaa
jo
cmp
or
hlt
stc
sub
mov
push
movsl
cmc
or
imul
mov
aam
idivb
xor
dec
mov
push
mov
pop
sbb
rclb
fisttpl
jge
icebp
mov
push
jno
ds
lahf
jno
push
stc
test
push
sbb
popa
dec
sbb
cmp
sti
lock
jbe
inc
adc
jbe
inc
mov
push
scas
push
fs
or
jnp
xchg
lea
aam
xchg
sub
iret
cwtl
icebp
jge
push
xchg
jns
push
out
mov
sub
adc
sti
scas
xchg
inc
xor
xlat
mov
cli
pop
inc
or
mov
xor
dec
movsl
mov
mov
lods
ljmp
mov
lea
decb
mov
pop
xchg
pop
jge
jmp
test
nop
xchg
and
sbb
insb
jno
cmpsl
ljmp
mov
lret
orl
cltd
push
adc
jl
and
ret
dec
inc
scas
cmp
aas
mov
and
adc
sbb
and
lcallw
jp
pop
and
insb
push
scas
fstpt
xorl
pop
sub
lea
aam
fstl
loopne
fwait
cmp
mov
rcl
add
or
and
push
into
rcrb
movsl
and
inc
mov
mov
rolb
sti
outsl
dec
pop
je
leave
mov
or
dec
lods
orb
fldl
jl
loop
cmp
mov
add
dec
jbe
cwtl
test
in
pop
mov
xchg
aam
mov
xchg
cmpsb
sti
sbb
sbb
mov
repz
mov
cld
pusha
pop
push
jl
ret
pop
mov
inc
mov
ss
dec
das
mov
insb
aaa
jno
test
rcr
add
mov
pushl
xor
cs
push
mov
inc
xchg
lock
or
inc
pop
cmp
push
sti
adc
daa
pop
add
iret
cmpsb
dec
mov
jo,pt
or
inc
mov
iret
cmpsl
js
dec
cmp
addr16
int
or
cmp
or
lea
sbb
cmp
cmc
mov
and
aad
adcb
xchg
jno
push
mov
cwtl
call
jnp
mov
in
shrb
rolb
cmp
sub
push
jecxz
xor
out
sbb
mov
dec
pop
adc
jge
sub
cmp
xor
or
cmpsb
jns
pop
mov
aad
pusha
insb
in
fnstsw
std
sub
push
jo
call
jno
jg
pop
lock
cmp
int
rol
cmp
addr16
mov
imul
imul
sub
pop
stos
push
test
adcl
jl
sbb
cmpb
cli
cmp
test
jo
and
mov
aas
or
inc
inc
cmp
sbb
push
lea
mov
mov
addb
cmp
mov
aam
pop
repnz
mov
cmpsb
les
jle
cmpb
and
jo
loop
das
xchg
int
add
jo
mov
fcomps
ljmp
xorl
lods
movsl
push
inc
pop
add
jnp
incl
test
mov
adc
or
insb
mov
cmc
mov
outsl
jo
je
xchg
dec
sbb
dec
fistpll
loopne
insb
cmp
xor
cmp
mov
dec
xchg
mov
xchg
in
inc
xorps
loopne
or
sub
pop
inc
cmp
out
lahf
dec
insl
test
pmulhw
mov
pop
sub
cmp
pop
mov
pop
adc
mov
repnz
jl
pop
js
rorb
test
mov
lock
dec
or
sbb
or
or
jmp
ja
into
xchg
addl
iret
xor
pop
ljmp
pop
inc
movsb
pop
dec
adc
ret
cmpsb
test
out
outsl
pop
mov
data16
jno
test
xor
sti
cmp
mov
xor
cmp
cwtl
sbb
adcb
dec
aaa
enter
lds
leave
cltd
sbb
lods
mov
bound
hlt
mov
push
cmp
cmpsl
mov
pop
lret
xor
nop
inc
mov
mov
aad
jno
or
lods
jnp
mov
fwait
scas
nop
push
mov
xchg
imul
ret
ficompl
fcompl
addr16
cmp
mov
push
mov
inc
jg
mov
bound
add
mov
repnz
cmp
jmp
stc
arpl
or
push
pusha
mov
xlat
inc
mov
addr16
fistl
cmp
push
push
add
mov
sbb
test
out
jae
enter
or
test
cmp
inc
arpl
bound
pushf
enter
ret
sbb
dec
fidivrs
push
lret
rcr
dec
ja
repz
mov
push
push
fwait
mov
sti
pop
lahf
xchg
imul
pop
mov
or
mov
pop
xchg
fcomps
dec
out
xchg
insl
push
mov
sbb
dec
ror
iret
lcall
pop
fisubrl
out
cs
idivb
sbb
ss
rcrl
mov
lcall
xchg
xor
int
adc
mov
fldl
fisttpl
imul
mov
jae
or
xchg
mov
repz
pop
jge
rorl
pop
push
inc
int
shll
mov
out
xchg
mov
fmul
sub
into
lahf
or
imul
out
jae
xor
jo
push
mov
push
push
cld
testb
mov
addr16
int
mov
pop
pop
mov
shll
fcmovne
mov
push
jle
mov
imul
jnp
push
xor
roll
or
xor
cli
aas
or
pusha
add
lahf
or
push
test
std
xor
in
mov
cwtl
jmp
mov
rorb
mov
rorl
lret
ds
lea
movsb
jae
data16
push
loope
xor
ret
and
in
imul
adc
xor
lahf
dec
std
push
pushf
or
enter
mov
int3
aaa
mov
int
arpl
lret
pop
sbb
or
dec
rorb
cmpsl
mov
push
cmpsb
lds
push
mov
add
sbb
mov
xchg
mov
mov
scas
jb
mov
mov
mov
pop
push
pop
push
xchg
mov
and
and
xor
sbb
sub
jno
test
imul
adcb
pop
push
mov
xor
sbb
imul
cmc
aam
mov
aaa
mov
mov
mov
sahf
or
dec
push
cld
mov
dec
and
mov
sbb
xchg
and
jp
inc
divb
inc
push
xchg
test
shr
inc
inc
jp
or
setl
mov
mov
lds
mov
dec
add
cmp
mov
adc
rclb
aad
dec
aas
jbe
jb
mov
mov
pop
mov
ljmp
dec
cmp
outsb
repnz
loope
mov
ja
sti
leave
rcl
jne
idivl
lea
jl
lea
adc
and
sbb
mov
hlt
enter
jnp
aam
mov
into
jmp
int
push
mov
mov
lea
or
dec
cmpsb
sti
dec
mov
pop
cmp
add
jbe
cwtl
out
fdivrl
movsl
imul
push
push
inc
arpl
insl
jo
ret
xor
cmp
or
repz
pushf
sub
inc
lret
ljmp
shll
pushf
mov
aaa
or
sbb
aaa
adc
loopne
or
dec
sub
lahf
inc
dec
mov
inc
clc
inc
sub
ds
mov
cmpsl
sbb
jnp
push
push
cmp
andl
add
fbstp
dec
sub
xchg
or
sbb
lahf
mov
mov
and
gs
jbe
jo
shll
out
dec
push
cmpsl
dec
add
int
sub
push
or
loop
aas
cmp
jae
pop
jo
mov
test
fwait
push
cmp
out
cmpsb
push
mov
dec
pop
sub
jnp
mov
sahf
pop
or
out
ret
mov
add
sbb
roll
pop
dec
jle
mov
mov
push
aad
add
and
pop
cmp
orb
mov
mov
sti
insb
lea
cmp
into
notl
lods
pop
fisttps
mov
dec
maxps
lods
leave
xchg
fs
lods
sti
and
lock
pusha
ja
add
mov
xchg
jmp
lahf
sti
mov
add
sbb
push
pop
les
sub
testl
dec
pop
sub
roll
imul
dec
xor
adc
sti
sti
addb
stc
jne
mov
mov
dec
in
sti
mov
sub
cli
int3
pusha
fmuls
lahf
inc
pop
dec
sub
test
fimull
fcoms
stos
cwtl
mov
pushf
int
popa
ret
dec
fnsave
and
jnp
xchg
int3
mov
xor
std
ret
or
pushf
pop
je
mov
jge
xorb
and
js
xchg
ror
loope
xor
das
xchg
ret
mov
icebp
jnp
shr
adc
xor
dec
adc
sbb
clc
andl
es
or
sbb
mov
shrl
add
mov
imul
xor
lret
sbb
jne
mov
mov
out
sti
push
addl
dec
push
dec
in
jnp
mov
dec
imull
inc
mov
dec
xchg
sbb
sub
xchg
mov
mov
int
decl
mov
inc
lea
lods
pop
jbe
jns
stos
fldt
gs
or
sti
inc
roll
cmp
xchg
dec
mov
imul
rorl
cld
sbb
sub
stc
inc
stos
adc
mov
andl
push
pop
xchg
fs
inc
roll
cmp
jle
stos
addr16
cld
jne
or
fwait
sbb
in
pop
in
aad
add
mov
cmovle
pop
loopne
sti
mov
xchg
lock
push
dec
lahf
lret
leave
mov
jl
jp
and
or
jb
mov
out
cmp
jnp
cmp
iret
inc
add
data16
cmp
in
mov
stos
dec
pusha
aas
xchg
mov
test
adc
insl
out
jnp
repnz
test
dec
or
mov
dec
sub
cmp
in
iret
cld
add
cmp
add
icebp
add
inc
dec
test
icebp
mov
cmp
jns
sbb
jl
or
add
adc
cmpsb
xchg
rolb
addb
cmp
inc
or
test
lods
out
mov
xchg
jnp
aad
jae
mov
fdivrs
or
sbb
lods
jp
lods
cmpsb
xchg
shll
push
mov
dec
mov
xor
add
dec
lcall
rclb
cmp
inc
push
or
mov
and
inc
dec
or
andb
cld
stos
sbbb
xchg
push
call
mov
popf
and
jle
addl
mov
push
ror
and
mov
inc
popf
sub
icebp
adc
call
insl
in
enter
push
shr
movsb
lret
adc
jne
scas
mov
cmp
or
das
leave
movsb
jge
push
int3
xor
lods
jge
insl
mov
cs
std
pop
mov
and
or
bound
or
in
in
sti
mov
pop
cltd
cmpb
mov
mov
loopne
mov
xchg
aaa
nop
int
inc
scas
arpl
sub
or
idivb
pop
jge
cmpsb
add
insl
icebp
pop
cld
jno
xchg
mov
pop
xchg
or
cmp
mov
out
popf
dec
pushf
hlt
jae
int
or
push
and
rcrl
xor
dec
fistpll
lahf
std
fwait
cltd
lret
adc
jecxz
cmp
pushl
cmp
add
ja
mov
fisubl
xor
notb
sub
xchg
pusha
ljmp
push
push
add
jecxz
and
arpl
lret
adc
dec
or
filds
repz
mov
arpl
ret
sti
mov
sub
cmp
xchg
outsb
into
int
pop
in
mov
cmp
shrb
int3
sti
addr16
fs
fsubrl
cltd
sahf
pop
mov
lock
nop
cmpsb
push
dec
cld
pop
icebp
es
scas
xchg
imul
xchg
mov
int
xchg
loop
xchg
les
add
mov
out
cli
mov
lea
or
mov
outsl
js
rcll
subl
dec
repz
ja
inc
and
cmp
cpuid
push
cmp
mov
loope
push
stos
mov
icebp
pop
mov
add
jmp
push
cmp
popf
jecxz
mov
push
rolb
cwtl
cmp
lea
and
dec
mov
push
repnz
test
cmpsl
into
lods
jg
lahf
cld
outsl
into
loopne
sub
mov
add
push
cmp
dec
dec
das
inc
mov
dec
les
inc
fnstsw
xlat
dec
leave
jecxz
pop
lods
cmp
das
mov
testl
rcrl
and
rcll
pop
mov
into
dec
fists
xchg
mov
inc
inc
cld
subl
cmp
or
in
subb
and
jle
stos
out
sub
in
pop
push
enter
inc
mov
mov
pushf
xchg
mov
and
test
les
leave
sub
repz
addr16
push
inc
jbe
push
mov
sti
fistl
popl
or
push
push
loope
repz
jecxz
push
fdivs
mov
repz
mov
ja
adc
cmpsb
ja
hlt
cs
xchg
int
mov
push
inc
pusha
cmp
mov
cmp
aam
sub
xchg
xor
pop
add
jge
jnp
stc
mov
mov
mov
sti
fwait
jb
cmp
pop
inc
pop
adc
cmp
sti
mov
pop
outsl
cmc
or
sbb
cwtl
js
sbb
bound
or
das
jb
mov
inc
int
adc
out
mov
aad
cmp
and
sbb
sub
orb
das
push
enter
add
add
sbb
shl
in
jbe
jge
mov
stos
sub
cmpsb
inc
push
sti
rcrb
jge
shll
cmp
cmp
cltd
aad
rolb
push
lea
dec
cmp
call
push
xchg
sub
orl
lds
negl
add
std
mov
mov
mov
inc
insl
adc
ret
fwait
outsb
data16
jge
push
movsl
lahf
add
add
fwait
les
xchg
int
or
into
sbb
outsl
and
pushf
dec
jns
repnz
js
pop
cmpsb
sar
and
pop
adc
testb
mov
mov
xor
or
mov
xchg
repnz
arpl
mov
jbe
xor
mov
dec
mov
jl
or
ret
mov
dec
pop
int3
jo
stos
test
xor
rcl
sbb
sti
sbb
jb
cltd
loop
mov
sub
icebp
es
mull
shr
test
movsl
std
pop
popa
shl
jnp
into
cltd
and
cld
inc
mov
cmpl
dec
and
cmpl
pop
push
add
in
insl
push
ss
jo
cltd
mov
pop
arpl
dec
ret
push
xlat
adc
cmpb
std
sbb
fsubrs
idiv
hlt
sti
push
out
xchg
lret
cld
pop
fistps
or
fimull
add
and
cmp
push
sub
add
mov
add
jno
or
ret
jnp
jae
xchg
cmp
add
jmp
das
int
pop
int
imul
pusha
or
or
xor
push
push
adc
adc
setbe
hlt
pop
lods
mov
lret
add
jb
aam
fnstenv
inc
je
mov
jne
jge
sbb
stos
ret
mov
fs
and
push
lds
int3
jp
roll
adc
imul
push
jo
int
ds
push
insl
mov
hlt
mov
mov
pop
push
ja
mov
mov
jbe
mov
cmc
ret
loop
pushf
add
fisttpl
push
inc
inc
cmp
xchg
test
dec
or
shrl
fdivrs
push
sbb
outsb
or
or
outsb
pusha
icebp
mov
jl
push
mov
mov
gs
xor
adc
dec
push
sub
fldt
jg
inc
test
and
bsf
insb
cmp
shl
out
std
outsl
insb
mov
cmc
sbb
push
aas
dec
test
and
cmp
in
rcrl
jnp
cmp
clc
or
lret
rcrb
cmp
cmp
in
nop
push
mov
mov
cmp
movsb
in
js
scas
adc
push
std
daa
adc
mov
ret
cmp
and
cmp
sti
mov
into
int
push
mov
xlat
mov
sti
mov
int
adc
cmpsb
out
pop
fs
mov
dec
and
in
ret
fsubp
dec
ja
mov
ja
adc
je
les
pop
incl
into
inc
into
sub
jnp
jns
push
shll
mov
scas
in
insl
lret
shlb
mov
das
enter
std
sbb
std
ficompl
xor
inc
insl
mov
sub
mov
cs
inc
dec
leave
movsl
mov
cltd
fisubrs
sti
push
lcall
push
jbe
xor
adc
push
cmp
std
push
lock
lcall
sti
hlt
aam
out
mov
or
cmp
loope
sbb
loop
dec
arpl
out
gs
cmp
lds
xor
and
lods
fnstsw
fisttpll
push
and
xchg
fdivs
in
mov
hlt
cli
arpl
aam
mov
aam
out
cmp
dec
dec
adc
divb
icebp
iret
sub
pop
rcrl
orb
inc
add
mov
mov
or
jo
sub
sar
mov
inc
inc
or
in
fcmovnb
in
xchg
xor
dec
filds
xor
adc
jnp
lds
ds
and
int
and
add
mov
jo
lcall
cmp
jno
sbb
jl
iret
aas
lds
or
inc
ds
nop
sbb
stos
shll
in
dec
lock
add
inc
and
fcoms
mov
cmp
int3
push
fisubrs
adc
jle
xchg
mov
rorl
mov
imul
jle
xchg
fidivs
inc
mov
in
inc
push
fs
pop
and
mov
sub
xchg
and
push
or
dec
mov
dec
or
jge
test
and
fstpt
pop
mov
mov
mov
jecxz
int3
sub
mov
sbb
mov
fstl
popf
push
dec
test
ret
mov
or
fnsave
hlt
jnp
mov
roll
mov
sahf
add
xchg
or
adc
cwtl
movsb
inc
cmp
mov
push
addr16
add
or
cld
mov
lea
lcall
mov
sbb
or
clc
pop
xchg
subl
or
daa
mov
xchg
pop
push
les
add
xor
paddsw
sub
inc
push
or
pop
loope
movsb
pusha
add
sti
inc
jo
js
jle
xor
sbbl
cmp
dec
cltd
inc
adc
lds
jbe
jge
mov
or
xchg
jbe
pop
int3
mov
and
mov
mov
or
jge
lahf
mov
sub
movb
cmpsb
add
fldcw
jmp
xchg
int3
cmp
int
dec
outsl
pop
mov
shrl
mov
sub
les
pop
into
ret
sbb
inc
jae
ffree
sub
mov
and
mov
out
push
jae
icebp
sbb
inc
and
mov
or
sub
xchg
dec
add
das
cmp
sti
insl
add
mov
aam
sahf
aad
sub
ss
lahf
jle
jae
icebp
inc
enter
stos
push
int3
dec
aad
je
and
jae
sub
negl
mov
push
xor
fmull
cwtl
mov
fxch
ss
jnp
lcall
dec
push
repz
imul
sub
rorb
in
jnp
cmpsl
or
push
xchg
xchg
dec
xchg
clc
nop
add
adc
mov
push
xchg
int
outsl
repz
repz
or
adc
iret
jnp
aad
fwait
lds
cs
xor
pop
fisttpl
push
sub
push
jbe
xchg
lods
sbbl
je
mov
inc
xchg
mov
pop
xchg
mov
adc
shlb
in
pop
loopne
stc
andl
addr16
dec
xor
divb
jb
cmp
decl
jbe
jg
xchg
sub
aaa
pop
cmp
movsb
fmull
xchg
xorl
pop
jg
pop
mov
movsb
insl
pop
ret
mov
arpl
fdivrl
mov
jo
inc
mov
push
sahf
or
loope
stc
repz
fdivrs
bound
repz
rcrl
sub
in
addr16
pmaxub
inc
ja
push
cmpb
leave
pop
inc
mov
ficoms
pop
xchg
mov
leave
sbb
mov
lcall
in
jae
cmpsb
push
test
insl
pop
or
into
cs
popf
mov
push
mov
mov
or
lahf
repz
adc
in
adc
insl
mov
mov
jns
add
int
inc
add
mov
cmc
or
push
jl
shlb
push
or
mov
neg
mov
jge
popa
sarb
mov
or
cmpsb
xchg
int3
dec
int
movb
ljmp
cwtl
rcrl
daa
push
push
jo
arpl
jl
movsl
icebp
push
mov
push
fisubrl
mov
fistpll
and
mov
sahf
out
mov
pop
lcall
dec
dec
imul
inc
cmp
ja
adc
jnp
notl
test
cmp
mov
subl
gs
push
pop
in
push
repnz
xlat
cmp
data16
cmp
movsb
sbb
mov
push
arpl
addr16
rcr
cwtl
add
aam
mov
movups
dec
inc
adc
fwait
ret
imul
int
rcrl
and
das
mov
mov
scas
pop
lock
aas
out
fsubs
cmp
loope
pusha
push
aaa
cmc
outsl
mov
fs
outsb
jb
mov
leave
cmp
aas
movnti
test
or
mov
fnsave
dec
xor
lea
or
inc
pop
call
pop
add
int3
jle
adc
sbb
loope
push
cmp
sti
add
aad
cmc
push
leave
cmp
inc
in
or
pop
pop
xor
lret
sahf
mov
or
add
mov
jmp
jp
pop
jno
mov
mov
sahf
lahf
movsl
mov
jge
and
push
icebp
or
sbb
mov
pop
sub
into
jge
lods
mov
adc
pop
cmp
mov
dec
ret
push
popa
mov
into
or
leave
adc
jle
imul
dec
shrl
jbe
std
cmpsb
mov
inc
mov
ret
enter
leave
jnp
sbb
adc
cmpsb
test
inc
xchg
sti
clc
shl
mov
fistps
inc
inc
adc
sti
imul
ret
ficoms
in
fwait
or
fnsave
cmp
aas
gs
mov
repz
sbb
mov
xor
fs
arpl
push
mov
push
xchg
or
movsl
inc
aas
cmp
pop
and
ret
imul
sbb
push
mov
shll
mov
push
and
mov
cmp
les
dec
rorl
outsb
pop
cmpsl
test
cmpl
adc
or
cmp
lods
mov
lahf
mov
std
cmpsl
addr16
push
or
and
xchg
mov
xorl
iret
stos
add
decb
popa
lods
push
in
fwait
ret
cwtl
iret
cmp
sub
iret
fwait
fs
and
test
inc
cmp
inc
inc
xchg
popf
xchg
sti
outsb
inc
sub
popf
xchg
imul
jns
subb
mov
cmp
fnsave
cmp
mov
jg
punpckldq
cwtl
push
jmp
add
add
cmpsb
sbb
sub
push
mov
roll
call
pop
lcall
nop
pop
cmp
or
data16
sbb
in
and
add
cmp
test
fists
mov
ret
into
jmp
adc
sahf
aas
mov
sbb
inc
leave
adc
mov
in
pop
xchg
lea
inc
test
int3
sbb
sti
ss
or
inc
xor
les
push
push
cmp
sbb
sarl
xor
adc
push
push
dec
adc
fistpl
test
xchg
ja
dec
mov
xchg
fwait
scas
lock
or
cltd
fs
cmp
mov
lcall
cmp
leave
adc
and
push
or
push
cld
rcll
ret
scas
sahf
not
lret
sbb
xchg
outsl
neg
jne
mov
addr16
sub
nop
dec
hlt
sbb
adcb
cmp
adc
jl
cs
fidivrs
dec
cli
mov
jp
add
or
cmpsb
push
int
inc
xchg
inc
dec
cmp
mov
cmp
popa
jns
leave
ret
fs
fs
test
push
dec
ds
lahf
inc
xchg
clc
lahf
out
imul
dec
js
mov
int
fwait
cltd
jle
ljmp
ja
lds
imull
fwait
aad
inc
push
push
mov
ljmp
lea
jno
pusha
adc
or
pop
ds
outsb
lea
xor
mov
push
sub
jl
lock
xlat
lods
add
movsb
pop
mov
fwait
xchg
icebp
sub
lods
mov
add
aad
dec
ret
pop
inc
push
inc
jg
mov
cltd
and
xchg
stos
jo
sbb
pushf
cwtl
jae
xchg
dec
jno
scas
sti
adc
mov
mov
mov
or
clc
xlat
cmp
nop
mov
push
cmc
xor
inc
rcrb
pop
jge
sti
imul
cmp
ret
xchg
int
int
and
popf
mov
ja
and
cmp
jae
push
pushf
inc
push
and
cmp
pusha
lock
mov
xchg
sub
test
rcrb
inc
in
pusha
int3
push
cmp
rcll
adc
adc
test
xlat
sti
sbb
mull
pop
in
push
and
cmp
fistpl
mov
or
mov
shl
sub
cmp
sbb
push
jle
push
push
mov
out
in
jnp
fstpl
scas
fxch
fwait
inc
jnp
int3
imul
dec
ffreep
jl
rorb
xor
lea
popf
dec
add
pop
lret
int
fistl
add
mov
mov
xchg
or
and
inc
or
scas
sti
inc
push
dec
mov
jo
xchg
cmpsb
mov
lds
pop
mov
jo
hlt
stc
int
incb
data16
mov
scas
in
jl
pop
or
and
es
push
sbb
push
pop
inc
js
addl
xchg
decb
mov
ret
lea
stc
mov
or
fiaddl
ss
repz
and
cmp
fs
gs
jno
mov
push
or
std
cmp
jmp
mov
outsl
ret
notb
out
mov
ret
inc
test
add
or
mov
jnp,pt
fs
mov
in
push
sar
icebp
into
mov
ficoms
fs
adc
cmp
test
lret
inc
movsl
mov
inc
cmp
shl
cmp
sub
xor
cli
xchg
inc
scas
arpl
daa
aam
scas
add
inc
aad
dec
ds
lret
imul
add
xor
cmp
lea
cmp
es
push
push
rclb
mov
into
mov
inc
push
rol
aam
leave
mov
sub
pop
lret
cmc
lock
dec
dec
int3
push
jp
jp
stos
mov
movsb
mov
dec
inc
and
or
and
mov
in
pop
in
jle
test
mov
dec
les
dec
wrmsr
inc
and
xchg
test
or
mov
or
ds
in
gs
shll
hlt
cmp
mov
shll
das
enter
jge
inc
push
push
dec
jl
push
or
mov
mov
imul
xor
cltd
mov
iret
xchg
cmp
push
out
aam
hlt
or
mov
push
jns
mov
scas
adc
fcmovnu
inc
jae
add
jle
cmp
icebp
mov
cmp
pop
push
lea
lcall
mov
cmp
xchg
or
xchg
xchg
mov
fists
xorb
mov
ficomps
dec
cmp
cmp
sbb
inc
cmp
sbb
ja
aad
imul
in
outsl
jge
aam
shlb
cmc
sbb
adc
call
cld
notb
mov
nop
mov
push
insl
sahf
jo
sti
dec
xchg
jns
mov
or
daa
and
push
ret
jle
or
sub
cmp
ja
adc
sub
std
mov
inc
inc
adc
jl
pop
jmp
fstpt
insl
inc
lcall
mov
aam
mov
out
jg
lcall
data16
push
es
jmp
mov
loop
pop
dec
icebp
adc
outsb
cld
and
aam
scas
dec
mov
orl
fnstenv
push
popa
add
in
inc
shrb
xor
mov
in
xor
ret
lret
rcrl
jge
ja
jno
outsb
or
std
sahf
sub
scas
icebp
hlt
or
std
xor
and
subl
aad
fistl
cmp
fidivrl
cld
fs
sbb
stc
in
lods
mov
adc
fimull
pop
call
sti
xchg
js
and
mov
inc
cmp
insl
outsl
dec
lea
dec
les
mov
mov
adc
roll
mov
popl
mov
addb
xor
lods
dec
mov
sar
mov
aaa
rcll
mov
inc
pop
in
arpl
xchg
pushf
inc
ret
mov
pop
or
aam
outsb
sbb
pop
sarb
pop
scas
cmp
insl
sub
xchg
mov
aad
call
movsb
adcl
out
ljmp
mov
mov
pop
pop
cmp
cmp
enter
mov
adc
stos
jne
adc
inc
ret
ret
std
inc
movsb
nop
xchg
data16
jmp
sarl
jl
insl
and
imul
aad
out
je
cmp
push
ret
int3
mov
loop
push
enter
push
cmp
shl
add
and
xchg
dec
jge
push
or
add
dec
adc
fisubrs
cmp
nop
lret
andl
dec
ret
adc
ficoml
jb
js
add
inc
cwtl
mov
sub
or
mov
rolb
int
pushf
jbe
add
mov
pop
imul
add
lcall
xor
and
sbb
jle
lret
pop
movsb
or
or
iret
call
push
nop
cmc
jmp
repnz
jl
daa
add
add
ja
mov
iret
pop
adc
mov
pop
fdivrs
xchg
int
add
les
int3
sbb
jp
jecxz
cli
in
push
push
aas
out
cmp
fistps
cmp
ds
lock
lret
push
cmp
test
fisttpl
test
in
test
lahf
dec
lods
dec
sub
leave
test
int
jae
xchg
xchg
cmc
ds
pop
xor
pop
stc
rcr
jnp
mov
js
rclb
xor
rcrb
imul
add
mov
enter
sti
mov
mov
adc
and
or
loop
pushf
rol
mulb
jg
mov
cmp
dec
pop
adc
jne
lcall
mov
scas
xchg
mov
mov
dec
dec
push
push
rolb
popf
jb
pop
pushf
cs
push
addl
popf
fwait
mov
mov
es
sub
mov
xor
cmp
jns
adc
fsubrs
data16
lock
addr16
aam
xchg
cld
inc
mov
test
or
mov
inc
cmpl
leave
sub
push
movsb
lds
adc
sti
jl
or
dec
mov
inc
daa
ret
inc
xchg
inc
cmp
and
fstpt
lods
dec
sub
mov
inc
pop
add
or
push
push
cli
mov
stos
mov
leave
inc
xchg
dec
inc
out
ljmp
lcall
dec
jo
out
sti
fcmovbe
lret
xchg
mov
ret
loope
dec
mov
imul
adc
pop
je
mov
les
pop
dec
dec
inc
std
les
lahf
scas
aam
add
iret
enter
subb
push
fisttpl
jmp
out
leave
imul
popf
pop
js
mov
mov
aad
mov
push
rcrl
lods
icebp
stc
insl
std
imul
scas
popa
pop
cs
adc
cmc
and
dec
jo
xchg
out
test
test
sbb
rorb
xchg
push
out
orl
aam
jo
push
cltd
mov
jbe
fldl
repz
xor
insl
loopne
mov
xchg
xor
in
outsl
mov
pop
inc
cld
mov
sbb
inc
mov
jns
aad
iret
insl
xchg
xlat
dec
dec
xor
push
ljmp
aas
clc
aad
fistl
int
mov
xor
mov
lret
sbb
fildll
add
fidivrs
frstor
pusha
int
popa
adc
push
xor
dec
cmp
add
push
fcmovu
pop
jg
lock
or
mov
adc
xor
pusha
lds
sub
sbb
fdivs
push
mov
inc
jecxz
push
cmc
cmp
xor
cmp
xor
rcrl
dec
or
js
pop
int3
insb
and
outsb
ror
cltd
jo
insl
inc
lret
sti
clc
jbe
in
cmp
out
ficomps
repnz
out
add
arpl
xchg
mov
dec
sti
xor
cmp
xor
add
sub
call
adc
ds
sbb
sahf
xchg
dec
xchg
loopne
mov
cwtl
add
jl
add
outsb
jne
movsb
sbb
stos
cmp
int
int
or
enter
inc
jns
out
ret
shll
xor
xchg
cmp
adc
outsl
and
push
aad
dec
clc
inc
dec
or
push
pop
sarb
inc
mov
jo
inc
jge
jae
movsl
cmp
xchg
add
push
lahf
stos
aad
add
mov
mov
shr
sti
rolb
das
insl
imul
sbb
scas
roll
inc
cld
and
ljmp
jb
mov
adc
ja
xor
aad
mov
pop
dec
pop
adc
fwait
std
cmp
add
aaa
fmull
lds
add
les
mov
jnp
jmp
popa
int3
mov
xor
lahf
or
mov
mov
sub
jnp
pop
xchg
push
push
imul
push
cmpsb
adc
rcll
mov
in
movntps
jae
jle
push
jb
cmp
or
in
cwtl
mov
or
inc
je
sbb
mov
clc
xchg
test
bound
int
dec
int3
in
adc
sbb
or
sbb
sub
mov
pop
xchg
inc
pop
ljmp
adc
sub
test
add
dec
sbb
mov
test
lds
lds
mov
or
add
mov
mov
movsl
lea
stc
mov
rcll
push
fdivr
imul
lret
fisubrl
icebp
je
lret
sbb
mov
xor
nop
or
stos
iret
cmpsb
sub
mov
jno
jne
int
es
jbe
addr16
mov
jp
inc
jg
jl
les
pop
xchg
cmp
and
pop
jmp
mov
dec
mov
pop
xor
into
imul
push
push
dec
movsb
popf
movsl
cld
sbb
add
stos
scas
mov
xor
dec
xor
ret
mov
mov
xchg
dec
es
xchg
push
dec
in
pop
dec
nop
lahf
fisttpll
cmp
mov
repnz
shll
in
rclb
push
add
mov
pusha
xor
pop
pop
inc
xchg
aas
int
add
shll
push
jb
mov
iret
add
mov
mov
jmp
shll
push
xor
pop
sbb
call
or
sti
xorl
cmp
jl
xchg
mov
inc
xchg
jl
add
push
or
adc
cmp
pop
cmp
mov
inc
push
xchg
cwtl
dec
lods
lcall
xchg
and
or
orb
cmpsb
and
add
mov
push
sub
cmp
pop
fistpll
call
test
int
add
adc
mov
enter
mov
xchg
dec
dec
dec
shll
clc
mov
inc
inc
popa
lods
pop
sub
cmp
in
pop
mov
mov
or
pop
jge
jge
jl
outsl
clc
mov
pop
fs
rorl
or
movsl
push
sub
inc
inc
pop
addr16
sahf
mov
jb
cld
adc
cmp
shrl
sti
push
or
mov
or
sarl
sub
pushl
loope
orl
in
mov
pop
or
or
xchg
jnp
loopne
add
jmp
mov
in
in
ret
dec
mov
insl
cmp
fcom
aam
and
ret
mov
cmp
push
push
lods
stos
rcr
es
pop
popa
lret
popa
and
loope
mov
gs
xchg
mov
into
inc
inc
lret
mov
loopne
repz
xor
ljmp
xor
lahf
sbb
insl
sub
repz
add
ss
sub
aad
mov
test
sbb
xor
jecxz
pushf
test
jno
sub
or
shrl
or
sti
je
lods
xor
jge
les
sub
cld
cmc
or
sti
cmp
sub
inc
daa
mov
lcall
fimull
and
rorl
xor
shl
gs
mov
or
lods
test
scas
repnz
sti
les
add
aam
or
bndldx
and
bound
add
add
lds
and
iret
pop
jnp
sub
int
or
aad
push
cmp
and
vphaddudq
push
iret
rsm
mov
xlat
mov
and
push
je
adcb
inc
fstpt
and
loopne
dec
push
sub
xor
dec
and
xchg
mov
scas
pusha
or
mov
test
popf
in
arpl
push
imul
pushf
mov
jg
sbb
mov
fs
dec
mov
jmp
shlb
push
xchg
sti
push
xchg
imul
scas
call
into
lret
cmp
cmp
fwait
inc
sub
cmp
fs
popa
out
lods
es
lds
fwait
iret
mov
lods
jge
leave
mov
push
mov
sub
ret
mov
sti
push
and
xchg
mov
or
push
cli
aam
xchg
push
lods
xchg
xlat
dec
ljmp
jo
or
idivl
stos
jb
aas
add
movl
out
push
sbb
int3
inc
cmp
dec
imul
push
mov
cmpl
sbb
mov
mov
outsb
sub
inc
sbb
stos
jge
rcll
cs
mov
mov
cmp
sub
pop
mov
sbb
fdivrs
lret
shlb
pop
or
push
push
sbb
cmp
rorb
leave
aad
inc
dec
mov
mov
int3
stos
mov
add
cmp
stos
in
lcall
jno
mov
pop
or
cwtl
or
pushf
pop
adc
mov
xchg
icebp
pop
inc
mov
cli
sti
daa
pop
lock
leave
mov
sbb
test
and
ret
cld
mov
pop
or
mov
orl
sbb
jge
add
pop
inc
add
gs
inc
dec
mov
cli
insl
stos
mov
movl
sub
int
aad
cmpsl
cmp
fs
mov
sub
mov
sub
mov
sbb
inc
in
fcmovnbe
mov
sub
dec
lcall
mov
pop
pusha
and
insb
into
js
add
daa
or
rcll
mov
cltd
ss
int3
xchg
arpl
mov
push
xchg
cmp
xchg
lahf
jae
cmp
push
movsl
imul
mov
cli
pop
stos
pushl
ret
dec
fildl
pop
in
ret
adc
nop
jle
dec
push
movsb
testl
out
int
push
bound
xchg
rcl
dec
sti
rorl
not
mov
dec
push
mov
lret
ficoms
cmp
xchg
jnp
iret
inc
gs
cltd
bound
or
xchg
int
cmpl
sub
fs
repnz
mov
cmp
cld
hlt
insl
jno
or
int
rcrl
lock
sbb
lea
dec
insb
or
xchg
dec
fidivrs
fs
jb
xchg
mov
repnz
sti
daa
add
inc
mov
pop
scas
inc
repz
and
insl
fadds
pop
loopne
aas
addr16
repz
xchg
pusha
lods
pop
aad
dec
dec
outsl
mov
lods
dec
mov
lret
std
insl
sbb
nop
dec
jg
mov
or
xchg
mov
insb
push
fiaddl
scas
nop
jnp
subl
dec
sbb
adc
fists
sub
lods
push
jbe
out
test
push
insb
int
jl
jb
cmp
scas
mov
roll
shlb
dec
imul
jle
mov
push
sub
dec
mov
mov
xchg
push
xor
and
aas
leave
ds
xor
xchg
pop
push
sub
adc
je
hlt
ret
jp
pop
test
scas
cmp
push
mov
out
add
nop
jb
xor
test
cwtl
inc
push
push
lahf
je
dec
cmp
adc
cmc
push
or
int
popa
ret
mov
stos
jae
fsubs
adc
mov
mov
pop
jno
dec
out
mov
lds
in
ret
cmpl
push
arpl
pusha
mov
or
gs
int
xor
jo
push
in
mov
add
add
adc
and
stos
mov
add
adc
xchg
ss
call
xchg
mov
push
fistps
dec
dec
mov
in
negb
cmp
jge
sti
dec
outsl
xor
outsb
int
std
xchg
test
sbbl
cwtl
in
adc
je
push
xor
dec
pop
adc
dec
testl
mov
xor
repz
cmpsb
sbb
adc
mov
sub
jae
int
cmp
mov
lea
xchg
jle
ljmp
mov
cmp
push
xorb
xor
ret
mov
test
add
mov
mov
sarb
mov
or
decl
ret
jbe
mov
push
xchg
jge
adc
add
call
mov
mov
movsb
mov
enter
sbb
inc
jo
daa
dec
sarb
and
lea
pushf
xchg
xchg
ss
xlat
imul
add
insb
aaa
inc
in
ja
gs
jae
add
fsubrp
dec
aas
ret
adc
inc
fisttpll
sti
ds
push
inc
mulb
xchg
ja
insl
add
ret
xor
fdivr
jne
mov
adc
mov
iret
cmp
movsb
xchg
arpl
inc
jnp
ret
adcl
dec
adc
push
sti
fistps
std
cmpsl
and
jnp
xchg
xor
sbb
sbb
jne
mov
pop
xchg
stos
push
dec
mov
fsts
pop
sbbl
push
push
dec
or
cmp
loop
xor
sbb
or
in
inc
mov
inc
mov
int3
sbb
pop
sub
xchg
fiadds
xchg
cmp
push
fcmovne
sub
int
or
lods
std
cmpl
xchg
sub
lock
jl
fnsave
mov
inc
adc
addl
fwait
bound
push
sub
and
test
int3
xor
jnp
xchg
cmp
mov
or
push
int3
push
fs
dec
dec
ja
pop
sahf
push
or
arpl
jnp
jb
inc
mov
pop
pop
and
adc
sub
test
movsl
aam
shlb
and
repz
aas
dec
das
inc
mov
out
stc
jae
mov
mov
testb
mov
movntq
rorl
inc
mov
dec
mov
orl
jl
scas
jnp
scas
sahf
pop
inc
jno
fidivrl
in
push
jmp
cmp
pop
int
loope
sub
rolb
sub
sub
jnp
loope
nop
sub
lods
push
lret
cmp
push
jl
in
lods
lds
or
popa
movsl
pop
std
fsubr
lahf
sti
fstps
adc
cmp
add
cmp
pop
repz
test
cmp
movsl
pop
ret
shrb
mov
mov
cmp
add
fstps
mov
fs
ss
or
test
mov
dec
dec
xor
imul
or
and
stos
data16
popf
imul
sub
push
push
dec
dec
pop
pop
stc
shr
mov
cmp
stos
cmp
rolb
icebp
mov
imul
xchg
or
or
adc
push
sbb
xchg
jg
dec
popf
mov
jo
add
ret
dec
int
decb
int
pop
insl
mov
ss
or
add
clc
fcmovnbe
jge
cmp
push
push
jg
rclb
cs
and
pop
sub
inc
mov
nop
test
mov
fidivrl
sub
xor
test
add
mov
or
adc
xor
add
into
cld
pushl
mov
fwait
cmpsb
je
adc
fbstp
nop
mov
mov
push
mov
jae
pop
mov
js
xchg
jp
sbb
ds
dec
inc
fisubrs
in
push
inc
cmc
ret
mov
pusha
or
jae
test
jge
dec
ficompl
add
in
sbb
nop
xor
cli
jnp
push
rol
xor
push
inc
loope
xchg
inc
or
repz
in
pop
mov
incl
pop
adc
mov
std
pop
adc
mov
stos
mov
sbb
push
sbb
and
and
mov
shll
jns
push
inc
or
xor
ror
jno
or
jae
repnz
loop
and
mov
sti
out
adc
ja
stc
jmp
xchg
dec
int
imul
mov
js
gs
fstpt
pushf
aas
lods
xor
int
loope
xchg
adc
pop
mov
std
sub
mov
aam
mov
mov
mov
pop
jnp
push
imul
stos
cmp
pusha
adc
cmp
push
loopne
ljmp
int
cmpsl
jbe
mov
cmpsl
mov
sbb
mov
cld
rcrb
gs
jecxz
in
add
xor
ret
and
push
push
push
or
jne
mov
cmp
pop
insl
push
out
cltd
outsl
dec
in
stos
int3
xchg
out
add
pop
setl
test
xor
mov
jnp
pop
xor
mov
insl
mov
sbb
sbb
push
push
mov
test
pop
jmp
in
stos
jnp
dec
nop
xchg
mov
es
lds
mov
or
cmp
sar
mov
adc
scas
pop
jns
xlat
or
int3
mov
mov
xchg
xchg
or
xchg
fidivrl
inc
pop
push
pop
out
cltd
or
jge
jl
ret
adc
push
je
adc
dec
lahf
repnz
pop
xchg
mov
jge,pt
data16
adc
icebp
mov
xchg
push
dec
aad
lahf
outsb
cmp
cmp
xor
push
adc
insl
pop
xchg
adc
dec
dec
mov
sbb
mov
inc
ds
mov
pop
or
jmp
outsb
ss
adc
ja
gs
jb
xchg
xor
adc
cmp
out
xchg
pop
enterw
into
mov
pop
mov
mov
fldl
jno
mov
mov
test
sub
xchg
or
push
scas
inc
or
mov
jns
adc
call
jbe
fimuls
mov
sahf
fadds
mov
lds
loope
fdivp
lahf
int
lock
repz
fidivrs
or
xchg
jno
bound
sti
int
adc
jns
ret
iret
or
jl
sar
sbb
repz
or
movsb
xchg
jmp
and
outsb
dec
lods
fmuls
xchg
add
jmp
jb
and
pop
test
jmp
mov
fistl
pop
cld
iret
push
jbe
cmp
xchg
sub
cmp
sti
or
jae
lret
mov
gs
push
or
jnp
lds
andl
int3
xor
test
aaa
fisttpl
jge
outsl
rcr
fiaddl
cli
pop
hlt
xchg
cmpsb
ficoml
rorb
repz
movsb
test
data16
mov
mov
in
xor
imul
test
adc
scas
cwtl
mov
push
cmp
sbb
femms
mov
cmp
pop
inc
sbb
mov
cld
out
lock
cmpsl
inc
cmp
imul
int3
jp
insl
mov
int
inc
aas
lret
inc
mov
sub
jmp
sbb
test
jp
and
in
xor
ljmp
xor
push
pusha
mov
xchg
add
cmp
push
dec
dec
orps
push
or
xchg
sti
cltd
fs
in
nop
movsl
mov
popf
mov
test
in
cmpl
and
push
pop
insb
aas
mov
mov
dec
adc
fistpl
jg
mov
sbb
add
lods
push
dec
pop
stc
imul
ds
inc
adc
push
fisubrl
jb
dec
jg
mov
lock
push
outsl
in
add
pop
adc
dec
sub
and
movsl
pop
sbb
and
psubw
js
mov
jae
or
jbe
mov
jnp
jno
or
mov
pop
push
add
dec
mov
jl
and
into
adcl
in
mov
push
aas
insl
cmc
add
jno
movsl
sub
xor
fbld
shlb
mov
pop
ss
xorl
jge
push
xchg
std
xchg
mov
scas
daa
jnp
inc
and
lahf
mov
add
mov
xchg
pop
push
call
xor
repnz
and
lret
scas
loope
aam
inc
xchg
mov
mov
mov
or
scas
mov
and
jne
jl
cwtl
jae
push
add
rcrl
xchg
cmp
loope
dec
je
push
xchg
push
daa
fwait
mov
repz
stos
cmp
inc
orl
xchg
imul
xchg
or
imul
xor
je
push
xlat
and
pop
jae
jle
jmp
xor
cmp
xorl
adc
dec
pushf
popf
leave
push
lcall
mov
les
push
iret
sbb
xchg
enter
shlb
push
mov
lret
jp
push
sahf
sub
je
push
mov
cld
les
adc
jmp
add
cmp
inc
cld
pop
lock
ja
data16
in
add
jle
mov
mov
add
cwtl
outsb
es
dec
inc
stos
pop
lea
or
mov
cmpsb
and
jnp
dec
sub
sti
scas
jns
jle
pop
fs
lods
mov
mov
nop
xor
inc
push
pop
mov
jecxz
or
lcall
lcall
ret
cmp
pop
in
sbb
pop
add
pop
shrl
mov
rolb
jecxz
aad
push
dec
call
sbb
aas
fidivs
xchg
push
dec
sbb
mov
insl
jnp
mov
out
jnp
test
roll
cwtl
mov
mov
arpl
lea
fbld
mov
push
lcall
daa
lods
shlb
cmp
adc
sbb
push
mov
int
es
shll
repz
cmp
in
or
insb
jecxz
xchg
fisttps
jl,pt
nop
and
mov
push
in
lods
movsl
push
add
std
push
pushf
pop
push
in
adc
mov
test
outsl
xor
push
or
aas
lea
push
push
jmp
inc
adc
push
push
cmp
outsb
fnstcw
pusha
int
mov
xchg
ljmp
repz
inc
js,pt
xlat
and
dec
sub
cmp
fsub
pop
pop
or
addr16
push
test
jl
popa
jecxz
out
add
scas
or
es
xchg
into
fstpt
push
jno
mov
test
xchg
push
bound
jnp
fnstsw
std
or
mov
jp
jbe
xchg
scas
int
ds
icebp
stos
rorl
fs
jl
out
movsl
jnp
sub
imul
and
jge
dec
shll
xor
sub
cmp
xor
int3
push
xor
adc
ds
and
insl
stc
lods
adc
icebp
sub
and
fsubrl
stc
fs
cmp
aam
vpsrld
stos
bnd
outsb
test
inc
clc
lods
aad
inc
and
xchg
and
out
jnp
jno
aas
int
std
lahf
pop
jp
inc
pop
lcall
loopne
nop
adc
pop
sub
gs
jecxz
xor
fistl
sbb
xor
faddl
mov
mov
ss
int
test
jmp
mov
add
sbb
sti
and
test
jge
xlat
out
adc
mov
sarl
and
mov
popf
scas
mov
mov
out
jnp
sbbl
outsb
mov
inc
shll
cwtl
and
call
mov
rcrl
mov
ret
and
imulb
pop
int
test
cmp
daa
test
dec
push
inc
lcall
add
inc
pushf
inc
jo
test
cmp
pop
push
aaa
mov
sub
fdivrs
out
daa
push
mov
sbb
mov
leave
inc
push
cltd
data16
ljmp
dec
subl
ror
cmp
jns
scas
pop
sub
mov
mov
aas
jns
xchg
call
iret
dec
mov
dec
cmp
jne
outsb
cltd
mov
pop
int
ret
pop
pop
jae
mov
sub
mov
cmp
jne
mov
dec
outsl
or
push
sub
cmp
testb
pop
cwtl
mov
loope
push
mulb
dec
or
mov
dec
ret
nop
orl
in
adc
dec
rcr
test
sbb
pop
mov
jno
pushf
js
cmp
lret
sbb
js
lahf
fldt
stc
jnp
and
pop
mov
mov
adc
push
mov
fcmovnu
loope
pop
add
sti
xchg
mov
ret
mov
xor
out
jp
fsubrs
xchg
or
mov
call
push
inc
adc
idivb
outsb
rcrb
sti
push
nop
pop
cmp
jno
ja
ja
imul
jno
cmp
std
dec
add
icebp
mov
xchg
arpl
jmp
stos
mov
jnp
fwait
imul
inc
sub
adc
mov
insl
int
xchg
lea
out
lcall
mov
js
cwtl
sti
dec
mov
pop
fcomps
es
stos
imul
mov
fistpll
pop
mov
test
int
mov
cmpsb
les
mov
movsl
mov
dec
cmp
jne
sbb
fs
inc
jnp
ret
lcall
daa
push
movsl
loope
jmp
nop
inc
icebp
or
das
bound
sti
adc
out
ds
cmpsb
addl
hlt
lcall
mov
out
pop
lret
cmpsb
mov
test
or
sti
imul
cwtl
inc
std
stos
loopne
jo
mov
movsl
cmovbe
fbstp
movsl
iret
mov
js
outsb
push
push
jl
mov
pop
push
jnp
hlt
xchg
push
pop
insb
adc
pop
clc
xchg
in
jns
ret
std
add
mull
fdivrl
dec
cs
clc
push
sbb
cmp
sub
inc
push
fcompl
popa
xchg
push
sahf
shlb
outsb
xor
cmp
mov
mov
cmp
cmp
stc
loop
pop
or
push
loop
jbe
movsb
insb
sbb
imul
insl
repz
popf
push
test
outsb
mov
call
mov
mov
cltd
out
cltd
js
leave
mov
lods
add
cld
popa
inc
or
sbb
js
lahf
dec
aaa
adc
mov
xchg
in
xchg
in
fistl
addb
dec
in
dec
jbe
push
or
dec
xor
mov
dec
push
cmp
bound
push
sbbb
pop
add
dec
inc
ds
push
mov
sbb
xchg
sbb
out
add
adc
movb
scas
xlat
pop
repz
shlb
bound
add
call
dec
hlt
xorl
icebp
add
mov
lock
sbb
popf
int
mov
or
sbb
lcall
mov
shll
out
shlb
lds
cmc
pop
pop
or
cmp
sub
scas
and
fildl
inc
cmc
mov
jp
mov
mov
dec
push
sti
js
xchg
xchg
mov
imulb
xchg
and
and
push
fbld
lds
lods
jg
lods
sub
pop
xchg
push
mov
xchg
in
push
inc
lock
mov
or
test
jge
mov
mov
jmp
decl
mov
sti
imul
loope
mov
xchg
push
xchg
xor
movups
dec
fdivrl
xchg
jno
mov
and
inc
push
ja
in
pop
js
fs
inc
pushf
cli
xor
ss
stos
xchg
xor
cmp
push
xchg
mov
xor
inc
gs
lds
adc
fwait
xor
popa
jl
aad
jns
push
push
jnp
mov
push
stos
push
jo
lods
in
push
mov
cwtl
xor
inc
scas
cmpsb
sti
and
fs
loope
xchg
cli
xor
or
xchg
jo
rcl
sbb
in
stos
adc
hlt
mov
orl
xchg
das
sub
cmpsl
or
jae
mov
sbb
pop
idivb
cmc
mov
mov
inc
inc
jp
int
daa
arpl
sbb
ds
sahf
push
xchg
rcrl
aad
nop
fs
andl
inc
dec
sub
dec
mov
int
cmp
jae
rol
out
shl
ss
stos
popa
mov
lds
lock
repz
dec
jo
mov
push
mov
inc
and
jae
dec
or
xchg
mov
push
aam
cld
outsb
push
xchg
int
adcl
dec
sbb
in
dec
call
data16
mov
mov
aam
sahf
loopne
lock
rorl
div
inc
mov
or
inc
inc
or
sub
mov
shr
push
in
leave
cmp
fcmovnbe
xchg
sub
int
mov
jns
insl
or
je
push
or
mov
mov
pop
mov
lahf
adc
sbb
lea
ret
fmulp
mov
inc
in
rorb
jae
cli
sti
sti
js
fsubr
cmp
icebp
shld
push
pop
sbb
mov
jnp
ret
push
ljmp
int
cmpsl
add
and
push
dec
divb
ds
and
mov
mov
dec
mov
cmpsb
sti
shll
sarl
xorb
and
mov
sbb
faddl
sti
push
or
clc
js
es
vpminub
shl
std
imul
cmpsl
mov
jl
mov
mov
xor
inc
mov
inc
mov
aaa
ds
mov
es
cmp
fnstsw
in
jo
jg
mov
xchg
cwtl
loope
sbb
mov
cs
push
clc
jbe
popa
fwait
pop
nop
rcll
pop
insl
mov
or
dec
repz
or
mov
pop
les
cmp
fisubl
mov
sahf
addl
ret
mov
jg
std
lret
jae
and
inc
mov
orl
jmp
mov
add
repnz
inc
outsl
lcall
fimuls
arpl
aas
bound
push
jns
cmp
or
inc
adc
out
lret
cli
shl
jno
int
inc
push
jo
sbb
setb
outsl
arpl
jle
add
shrb
jbe
push
and
jle
aam
cmp
aas
push
mov
mov
je
sbb
mov
or
dec
insb
movsb
out
sub
push
jns
lahf
into
addr16
jmp
lcall
inc
lahf
cld
xchg
sbb
mov
sahf
andl
mov
daa
mov
or
pop
or
mov
xor
lea
jnp
rorb
in
decb
dec
and
xor
dec
inc
xlat
sti
bndstx
pusha
movsl
rol
add
and
fcomps
add
out
add
std
ja
lahf
add
dec
push
sbb
mov
and
add
xchg
cmpsl
and
stos
cmp
or
cwtl
adc
mov
outsl
dec
sub
fdivrp
lds
pop
fstp
lock
jne
xchg
mov
dec
lret
loope
and
in
sub
mov
mov
add
in
jnp
cmpsb
dec
sqrtps
lcall
push
addb
push
jl
mov
outsb
imul
sarl
jle
or
inc
mov
loopne
repz
daa
jg
test
or
xor
jns
test
arpl
lods
sub
xchg
jo
xchg
add
fsubrl
out
cwtl
cmp
lods
lahf
fstpl
insl
push
test
cld
cmp
and
cmp
rclb
mov
push
ror
mov
sub
mov
ret
mov
inc
sub
inc
mov
faddp
pop
push
lds
cmp
mov
mov
mov
mov
mov
int
rclb
sahf
and
xchg
pusha
push
inc
scas
jne
adc
fcom
lods
in
xchg
pop
jae
loopne
out
jp
mov
fistpl
push
push
stc
imul
and
lods
push
cmp
in
xchg
sub
out
jg
lock
hlt
sbb
xchg
or
cmp
movsl
cltd
jp
jnp
adc
or
pop
loope,pn
daa
lds
sahf
sarb
add
loopne
push
mov
pop
fists
mov
cmp
int3
or
mov
jmp
in
loopne
mov
mov
xchg
gs
inc
addr16
jg
fisttps
inc
push
jne
clc
sbb
or
xchg
push
lret
cld
jae
shrb
add
xchg
dec
inc
jp
inc
or
xor
cmp
stc
mov
sbb
mov
or
ljmp
dec
int
mov
loop
add
mov
ja
or
push
out
mov
sub
xchg
fisttpll
cmp
bound
and
fmulp
cltd
mov
in
or
xchg
movsl
leave
mov
push
int
add
pop
push
or
inc
cmp
jnp
or
mov
cmp
push
xchg
aam
pop
pop
fwait
and
xchg
es
int
dec
inc
mov
mov
pop
cmpb
cwtl
pop
mov
mov
mov
cmp
in
inc
adc
and
cmp
ficompl
les
pop
sbb
out
sub
aam
push
push
int
cs
aaa
cltd
or
sbb
jb
jae
fisttpll
inc
cmp
jb
gs
scas
cmp
lds
xchg
dec
sub
addl
test
and
sbb
out
mov
addr16
xor
pop
fwait
push
inc
jnp
shr
cmp
sbb
push
pop
inc
or
jl
in
data16
scas
jnp
mov
addb
jmp
test
lret
popf
xchg
pop
cmpl
movsl
movsb
popf
or
inc
mov
pusha
jg
sub
sbb
jge
bound
inc
inc
pop
repnz
cmp
or
xchg
mov
movsb
mov
jge
sbb
stos
pop
nop
xchg
mov
das
mov
adc
sub
lret
ljmp
stc
sti
roll
mov
stos
push
fisttpl
push
and
inc
adcb
inc
jno
mov
mov
or
push
out
dec
int
lcall
add
jae
cmovs
mov
xchg
jae
jae
dec
xchg
scas
xchg
add
nop
add
xor
mov
pushf
xchg
push
push
out
cmp
stos
cmp
jb
lea
into
cmc
mov
dec
aas
sbb
sub
loope
out
jbe
jnp
adc
jmp
cmpsl
cmp
or
adc
xor
or
inc
add
adc
add
and
std
filds
enter
xchg
lds
mulb
push
addr16
and
in
push
inc
inc
or
fnstsw
scas
shrl
scas
cmp
mov
mov
nop
frstor
aad
std
mov
ret
lds
and
insb
mov
cld
sub
fbstp
add
pop
mov
dec
mov
lea
pusha
or
mov
cmp
scas
inc
adc
mov
hlt
mov
mov
shrl
aam
xchg
or
mov
call
andb
fdivrs
fistps
push
lahf
pusha
and
pop
mov
and
xchg
mov
cmp
push
pushf
push
jge
fimuls
pushf
jo
dec
bound
ja
call
add
popf
les
fcomi
inc
sahf
dec
xor
mov
jae
xlat
clc
or
lret
imul
jecxz
mov
ja
xchg
pop
pop
mov
lcall
inc
jle
sbb
test
or
mov
ja
jle
sub
lods
insb
push
and
test
and
outsb
daa
jg
mov
lret
or
int
imull
sti
xchg
xor
test
lcall
popf
gs
jmp
or
xchg
jno
inc
fwait
push
push
xlat
lcall
cs
inc
cld
aas
cmp
xorl
and
arpl
ret
sbb
xor
inc
dec
stc
fstpt
cmp
mov
mov
pop
sti
add
das
mov
sbb
imul
outsl
mov
pop
repz
inc
jne
mov
jecxz
cmpb
xchg
aas
int
jno
movsb
sub
cmp
or
cmc
out
push
add
out
mov
or
mov
dec
mov
cmp
je
jae
into
dec
orb
iret
pop
sbbb
sti
mov
fadd
jp,pt
sti
sbb
sub
test
lock
pop
lods
test
mov
and
lea
mov
push
test
xchg
imul
inc
ja
pop
pop
pop
imull
fsub
jne
into
mov
xchg
mov
mov
sub
sbb
clc
pop
mov
rorl
cwtl
out
jnp
scas
push
cmp
cmc
neg
mov
dec
inc
sub
fwait
mov
and
or
testb
fisttps
or
test
mov
xor
mov
mov
hlt
mov
lea
outsl
addb
cmc
das
fnstsw
jo
stos
cmp
push
jl
lock
mov
inc
sub
movb
or
test
mov
sarb
sub
or
movsl
insb
sbb
in
xchg
sti
lea
mov
fadd
pop
arpl
fwait
mov
dec
xchg
or
mov
pushf
int
jge
fimuls
dec
cld
outsb
mov
xlat
pusha
pushf
pop
divb
cmpl
sbb
cld
inc
scas
lahf
mov
pop
pop
cmp
repnz
in
or
shl
pop
inc
push
lret
fwait
test
les
sbb
inc
jbe
test
mov
pop
mov
mov
jmp
or
jnp
in
pop
inc
negb
lods
xchg
jo
sub
aam
leave
sub
xchg
pushf
pusha
jnp
neg
add
mov
cmp
gs
mov
cwtl
sti
jae
adc
dec
rorb
sbb
adc
adc
push
or
push
call
test
lcall
push
outsl
mov
mov
jno
int
and
mov
adc
and
and
mov
mov
jmp
dec
or
jnp
xchg
sub
mov
inc
add
dec
mov
sub
jae
pop
push
jmp
inc
rcll
iret
pop
sub
int
xchg
mov
sbb
ds
scas
je
roll
sub
cmp
mov
pop
inc
push
mov
push
xorl
sbb
sbb
cli
dec
xor
adc
xchg
sbb
bound
aaa
jne
sub
xlat
jns
orb
bound
mov
or
mov
ror
stc
arpl
xchg
lahf
jno
xchg
cld
jle
jnp
fldt
lods
jb
inc
fnstsw
notb
stos
sub
pop
fadds
mov
in
lahf
cmp
xchg
add
jnp
add
lea
add
es
adc
sbb
pop
or
roll
roll
dec
imul
int
dec
mov
loope
mov
cmp
dec
and
rorl
iret
cs
insl
cmp
xchg
movl
cltd
lahf
sub
jns
dec
dec
sahf
dec
dec
mov
sti
or
addr16
or
and
xchg
or
jnp
pop
sti
rclb
jae
clc
dec
bound
jno
adc
cmp
out
xchg
cli
into
xorl
sub
cmpsb
fcmovu
mov
std
cmp
cs
dec
repnz
movsb
dec
mov
xchg
xchg
vfrczss
sahf
or
sti
xchg
les
inc
cmp
cmpb
cwtl
sbb
sbb
pop
jns
or
out
cld
stos
cmp
sahf
int
loopne
out
aas
int
cmpsb
push
cmp
mov
sbb
sti
pop
mov
mov
xor
push
es
dec
out
sub
lcall
inc
xor
out
xchg
push
ljmp
mov
jecxz
adc
fiadds
dec
es
push
pusha
mov
dec
jecxz
jns
imul
cmp
ds
movsb
dec
push
pop
or
xor
out
sarb
movsb
dec
lock
xor
jle
stc
lods
int
cmp
arpl
xchg
stc
push
cmp
or
jae
and
jmp
pushf
in
mov
dec
dec
add
jne
sbb
orb
and
ja
push
lds
mov
pop
sbbb
int
fidivrs
or
sbb
jl
insb
aaa
mov
jnp
sbb
mov
pusha
rorb
shlb
sbb
ret
icebp
ja
fxch
std
pop
stc
std
jns
int
xor
lods
adc
out
mov
mov
push
notb
hlt
mov
xor
arpl
aaa
sub
mov
int
xchg
xchg
add
daa
push
cmp
jge
jno
xchg
push
mov
or
pop
and
inc
xchg
inc
aaa
xor
push
mov
pop
pop
mov
inc
ss
std
hlt
lods
mov
mov
cwtl
in
arpl
cs
lods
mov
pcmpeqd
cmp
add
jl
push
dec
daa
rorb
sti
in
scas
insb
pop
mov
gs
or
int
push
mov
rclb
addb
inc
mov
rclb
mov
or
hlt
mov
imul
mov
xchg
fcoms
sbb
imul
cmp
adc
aam
sub
push
pop
daa
std
mov
in
sar
push
jge
stc
or
mov
sbb
sbb
scas
adc
mov
rcrl
sub
jbe
inc
cmpl
mov
xchg
jbe
push
and
mov
fwait
ljmp
ret
dec
shll
insb
cmp
sbb
mov
lcall
repnz
inc
rcl
js
pop
das
lahf
adc
out
lock
cltd
dec
add
sbb
add
std
pop
jno
aaa
and
idiv
inc
sbb
fdivrl
xchg
jns
adc
dec
nop
cmc
ret
loope
je
ja
mov
add
push
jl
jmp
les
jnp
xchg
ljmp
lods
rcr
incl
sarb
cli
inc
xorb
cld
cld
jo
fldl
insl
subl
sbb
cmp
pushf
sub
cmp
loop
sbb
dec
jg
push
hlt
fstps
pcmpeqb
shr
dec
testl
mov
std
mov
cmp
fwait
sarb
add
jge
arpl
sub
mov
aad
jnp
push
xchg
mov
hlt
mov
xchg
and
cmp
cmc
pop
inc
cmpb
pop
iret
stos
xor
ffree
std
pop
dec
aaa
imul
xlat
aas
or
inc
icebp
dec
or
imul
int
dec
jg
fiaddl
jge
insb
push
push
xchg
repnz
insl
int3
add
js
lret
or
add
pop
jo
out
stos
test
outsb
inc
in
jge
xor
mov
enter
adc
push
lods
mov
lret
pop
mov
or
add
mov
orl
add
cs
mov
dec
sub
inc
movsl
or
cmpl
sbb
negb
sbb
out
ret
pop
add
mov
fwait
jp
adc
pop
push
or
xor
sub
sub
mov
sahf
cmp
inc
lret
ret
add
mov
or
jle
scas
jle
fildll
mov
mov
xor
mov
cwtl
mov
aas
xchg
fwait
xor
decb
arpl
add
xchg
imul
xor
pop
lods
push
add
in
lcall
mov
push
in
sbb
es
mov
outsl
pushf
inc
push
cld
xchg
mov
jg
cmpsb
mov
add
into
syscall
leave
xchg
int3
xor
pop
dec
jnp
push
mov
rcll
sti
jae
mov
pop
mov
mov
insb
and
jmp
arpl
cmp
cmpsl
cmp
movsl
fldcw
dec
mov
dec
mov
popa
mov
leave
shrb
adc
pop
jb
xchg
daa
into
lods
add
in
cmp
sbb
sbb
jle
ja
clc
sbb
mov
mov
aad
sbb
sbb
daa
loopne
sbb
fstpl
or
inc
inc
mov
les
bound
xchg
cmp
or
cmp
popa
sti
jmp
dec
inc
rcrb
int3
mov
in
mov
or
or
std
dec
sar
fistpll
into
fdivl
xor
popl
cli
fadds
dec
imul
std
lock
or
sub
enter
je
ret
pop
jnp
xchg
pop
inc
fcomi
push
xor
pop
std
sbb
jmp
enter
ds
sub
and
adc
in
lea
or
mov
mov
lret
mov
out
add
aaa
lock
xchg
dec
sbb
jne
cld
lods
int
movsl
rcrb
sub
xor
mov
ljmp
leave
xor
sbb
xchg
sub
push
stc
xchg
jnp
sub
les
adc
jnp
fsubrl
push
ja
and
mov
mov
and
push
add
sbb
fadd
outsb
jle
and
scas
push
pop
loopne
add
lods
jmp
push
or
pop
fdivl
mov
icebp
pop
lock
arpl
fsubrl
pop
data16
push
mov
aam
pop
loopne
out
jae
xor
lods
jge
pop
bound
test
js
nop
adc
addr16
cmp
xchg
das
cwtl
clc
cli
dec
push
cmp
and
xchg
add
int
cmc
fcoml
and
xchg
mov
cli
rcrl
sub
sbb
jae
push
xchg
dec
sarb
mov
jge
cld
xchg
rcrb
cmp
push
into
mov
test
mov
mov
xor
jae
dec
mov
pop
lea
inc
aad
ljmp
pop
nop
sti
or
sub
lods
xchg
jno
jno
xchg
cmp
pop
push
mov
jnp
pop
mov
mov
xchg
cs
add
mov
enter
orb
lcall
sbbl
lcall
push
jae
and
rorb
xor
mov
fisubs
int3
mov
or
iret
std
popa
aad
or
dec
xchg
mov
leave
sarl
std
dec
jmp
mov
pop
push
scas
cmp
xchg
xchg
and
outsl
sub
add
sarb
jmp
inc
fs
dec
add
lcall
rclb
sbb
gs
xchg
pop
cmc
or
xor
leave
push
push
stos
xchg
imul
inc
cmc
inc
sub
push
movsb
jmp
fsubrs
mov
inc
aas
add
in
mov
loope
negb
sbb
mov
fldl
movsb
xor
clc
lahf
add
lods
xor
pop
push
push
cmp
pop
pop
sti
mov
push
cmp
in
jo
test
aam
pop
mov
jecxz
scas
or
sub
aam
adc
fmuls
and
arpl
scas
mov
cli
arpl
lea
out
mov
xor
inc
daa
pushf
insb
aam
in
jne
pop
test
shlb
pop
push
or
rolb
mov
int3
push
nop
std
gs
ja
push
lods
je
xchg
jo
fwait
addr16
xor
push
shlb
es
imul
cli
les
out
enter
mov
repz
jnp
cmp
push
mov
or
sub
xchg
pop
out
mov
cmp
adc
and
cwtl
jge
dec
cmpsb
mov
jmp
push
push
daa
mov
pop
mov
jp
mov
cmp
and
pop
das
std
inc
push
mov
jbe
das
popf
sub
xorl
dec
xor
addr16
lods
lahf
addb
inc
int
lea
addr16
cmp
insb
out
sbb
lahf
dec
loopew
pop
loop
xchg
inc
mov
xchg
cmpsb
add
in
std
mov
sahf
jmp
aam
mov
mov
fs
cmp
in
mov
outsw
push
push
js
sbb
jp
jmp
clc
or
imul
jnp
or
push
arpl
jecxz
xchg
sti
out
inc
inc
stc
mov
imull
jnp
sub
mov
adc
out
push
or
test
xchg
mov
mov
jnp
mov
mov
dec
cmpsb
stc
jecxz
and
sbb
fidivrl
ret
out
lret
cmp
sub
cmp
mov
int
push
push
mov
bt
dec
add
cs
out
dec
test
push
push
fiaddl
rcll
pop
jo
hlt
mov
int
jecxz
lcall
mov
mov
pop
xor
lock
add
jae
jbe
mov
or
push
push
fistpl
sbb
jecxz
shlb
mov
lods
out
out
loope
lret
and
jmp
inc
fisttpll
jg
cmp
lea
lock
and
lods
aaa
cli
xorb
xchg
je
cltd
repnz
dec
shr
mov
xchg
jo
in
xchg
push
dec
ficomps
and
mov
or
adc
xchg
adc
aaa
nop
sub
clc
adc
in
cltd
ffree
mov
mov
enter
mov
mov
in
adc
sahf
imul
jg
mov
mov
sub
enter
jo
mov
int
mov
pcmpeqb
mov
fwait
cs
lahf
xchg
ret
and
mov
inc
mov
cltd
inc
inc
lock
and
ror
sbb
mov
push
inc
dec
mov
fwait
xlat
dec
and
je
andl
pop
je
jno
imul
or
mov
push
leave
jle
adc
pop
aam
cmp
mov
pop
jbe
mov
sti
je
call
addr16
ja
dec
fwait
push
mov
aam
cli
leave
rorb
push
or
push
data16
aas
sub
mov
fs
xor
frstor
mov
ds
xchg
sarb
push
push
std
inc
jle
xchg
push
add
mov
lea
jl
ret
rcll
lcall
push
rol
leave
sbb
pop
es
adc
cltd
out
sub
or
dec
jp
or
pop
add
jmp
add
es
push
ja
adc
xor
pop
jle
ret
xchg
mov
stos
pop
mov
sti
subb
mov
cmpsl
xchg
xor
arpl
cmp
inc
cmpsb
sti
sbb
cmp
or
cwtl
dec
rol
push
or
pop
ret
jl
lods
jnp
outsb
cmp
add
fsts
mov
pop
in
stc
sub
xchg
sub
or
add
or
cmpsl
into
imul
adc
push
jbe
mov
lcall
jg
mov
imulb
ds
sti
in
stos
jae
xor
fistpl
sbb
iret
lret
jo
xchg
sbb
shlb
in
pop
cmp
pop
and
addr16
cmp
in
dec
sbb
outsl
sbb
cmp
fisubl
xor
les
jae
lahf
mov
cmp
cmp
icebp
in
adc
mov
and
clc
sub
or
push
sbb
inc
sbb
sbb
push
lret
xchg
dec
dec
pusha
pop
scas
cmp
and
and
bt
jae
mov
dec
push
or
sub
dec
data16
mov
aam
je
add
imul
dec
cmp
scas
mov
add
pop
loop
popa
lods
test
dec
gs
mov
inc
push
jmp
dec
dec
pop
rcll
shll
fstpt
movsl
lods
mov
dec
jnp
lahf
leave
mov
cld
test
loop
inc
rcr
sti
mov
adc
addr16
sbb
cmp
mov
sub
mov
sub
push
jl
jmp
inc
jge
pop
int
sub
push
icebp
add
rolb
or
sbb
dec
bnd
mov
dec
jne
sbb
or
sub
xchg
lret
dec
andl
mov
ret
nop
mov
cmc
or
xchg
or
pushf
lods
adc
adc
ret
rsqrtps
cld
loopne
pop
mov
cmpl
fdivr
push
sbb
gs
jge
mov
push
cmp
inc
lods
mov
add
divl
jns
dec
insb
dec
ret
ret
inc
sbb
call
rorl
cwtl
pop
dec
loop
lods
and
jle
gs
cmp
sub
fwait
comiss
pop
ss
test
and
lea
mov
cmp
pop
jge
adc
jno
cmp
gs
imul
cmpsl
sbb
or
dec
in
adc
sub
sbb
inc
test
mov
aad
cwtl
cmc
ljmp
fwait
push
fs
je
rcll
push
in
ret
fidivrl
pop
inc
dec
mov
jne
ret
dec
dec
sarl
add
mov
sub
lea
push
pushf
in
or
inc
fisubrl
js,pt
fwait
or
movsl
push
lds
adc
pop
mov
cmpsl
mov
and
sti
add
mov
and
pop
js
clc
adcb
sbb
insl
mov
into
arpl
jg
insb
test
dec
int
mov
mov
imul
mov
fwait
and
test
push
mov
mov
cmp
rcrl
imul
repz
repz
inc
cmpsl
or
stos
les
mov
pop
pop
xchg
aaa
mov
test
mov
push
test
and
dec
rolb
insl
cmp
andb
xor
sbb
mov
push
popf
sub
dec
and
ret
fisttpl
fistl
pop
mov
jnp
jge
or
sarl
hlt
sub
cmovns
les
jmp
dec
adc
pop
stos
sysexit
xor
in
sub
inc
jl
add
dec
cmp
stc
cltd
push
add
mov
jb
lea
jnp
push
sti
divb
mov
pop
dec
test
inc
mov
iret
int
push
mov
ljmp
out
sahf
scas
int
sub
xchg
push
adc
jbe
scas
cli
pop
std
int
mov
inc
push
pop
pop
jno
dec
movsb
int3
sti
movsl
cmc
jb
icebp
mov
sub
mov
pop
shrl
or
test
mov
mov
dec
dec
jmp
pop
pop
mov
push
push
aas
adc
mov
pop
add
in
pusha
mov
gs
sahf
mov
xchg
or
xor
out
sti
and
arpl
sub
mov
or
es
das
or
push
dec
sub
sbb
or
ljmp
jmp
aas
pop
mov
and
jns,pt
inc
loop
add
inc
xchg
cmpsl
jge
dec
das
loop
lods
sbb
jns
mov
adc
mov
cmp
push
jmp
data16
and
jbe
pop
cmp
fwait
cmp
mov
lret
subb
pop
enter
push
flds
pop
push
sahf
pop
push
push
lock
jg
aas
inc
xor
xchg
popa
cmp
mov
aaa
out
mov
fs
es
mov
int3
cmp
dec
push
cmp
pop
inc
or
dec
or
and
iret
push
mov
dec
xlat
ret
fdivrs
test
mov
std
ds
lods
adcl
pop
lahf
lods
mov
insb
mov
scas
addl
mov
fidivrl
push
inc
inc
and
cmp
dec
data16
test
sub
addr16
dec
or
or
xchg
insl
pop
imul
inc
mov
dec
fldenv
mov
rorl
dec
mov
out
mov
mov
inc
dec
ret
pop
jg
adc
and
inc
sti
mov
pusha
inc
sbb
arpl
sbb
or
test
xor
xchg
subb
push
push
rclb
stos
xchg
pop
popf
jg
xchg
xchg
cs
hlt
sub
int3
lret
inc
adc
icebp
pop
loop
jnp
and
adc
pop
cmp
lods
jae
dec
pop
ljmp
sub
data16
in
shrb
pop
movsb
or
or
mov
outsl
repz
mov
jno
inc
inc
popf
addr16
ds
pop
iret
xchg
insb
add
imul
adc
jl
mov
push
jnp
je
shrb
ds
sub
pop
lea
dec
jmp
xchg
xchg
test
jo
xchg
dec
mov
mov
std
cmp
xchg
popa
mov
jbe
xchg
cmc
jge
or
sbb
cmp
jno
jne
jl
push
popf
cmp
int3
dec
adc
mov
push
cmp
add
xchg
outsb
or
out
daa
dec
out
fnstcw
cmp
xor
lahf
cmp
jnp
mov
int
int3
sub
add
iret
jl
pop
sub
dec
insb
aaa
test
loop
jmp
popf
jnp
imul
push
test
loopne
adc
push
outsl
loopne
or
std
pop
add
xlat
mov
popf
cmpsb
lret
lahf
mov
aas
push
ja
pushl
or
cwtl
add
in
outsb
in
out
lea
mov
in
pop
mov
sub
push
scas
sti
adc
stos
fcom
mov
xor
cmpsl
push
dec
cmp
dec
add
cs
es
xchg
scas
pop
add
mov
shrl
mov
inc
push
jle
mov
dec
gs
ret
icebp
mov
cld
mov
imul
fstl
pop
scas
sub
aam
and
cmpsl
dec
ffreep
imul
movsl
clc
nop
scas
sub
mov
jne
fstl
add
divl
mov
sti
cmp
mov
mov
or
fsubrp
dec
pop
cmp
into
or
xchg
rcll
lock
dec
xor
incb
hlt
les
je
jmp
sbb
mov
or
mov
pusha
mov
sahf
sti
das
pop
cmp
push
and
or
push
and
dec
aas
popl
cmpsb
xrelease
pushf
fists
pop
rcrl
stc
shll
rcrb
inc
cltd
xchg
mov
mov
sti
test
andb
jmp
sti
movsl
mov
inc
cmp
sub
ds
xchg
repz
loop
add
lea
fisttpll
lret
or
and
sahf
xchg
jno
mov
xchg
in
or
push
mov
cli
mov
cmp
lahf
pop
sbb
insb
adc
jg
test
sub
dec
pop
outsl
mov
adc
das
adc
mov
es
dec
sbb
inc
push
mov
in
cwtl
xlat
test
push
cmc
daa
ss
dec
dec
push
movsb
mov
jl
dec
adc
pop
sbb
lret
jl
mov
and
push
dec
xor
mov
adc
cmp
sub
or
lcall
mov
ss
xlat
movsb
jns
dec
inc
and
cmp
std
call
iret
dec
stos
aas
cmp
mov
ss
int
sbb
jecxz
mov
push
int
movsb
xchg
sbb
sbb
std
pop
aaa
in
pop
and
inc
mov
mov
dec
pop
dec
icebp
jnp
ret
push
scas
dec
mov
ret
rorl
adc
mov
test
sbb
jecxz
sbb
or
adc
jg
pop
cmpsb
sti
xor
sbb
cmp
xor
dec
arpl
imul
adc
inc
dec
or
fistpll
mov
add
andl
fnsave
pop
mov
movsl
mov
adc
lret
out
add
stos
xor
mov
lahf
mov
pop
imull
cs
mov
push
dec
cwtl
jge
sub
insl
or
adc
push
or
js
pop
dec
add
add
popf
aas
mov
pop
add
ljmp
fstpt
loop
mov
iret
loop
fcoms
das
rolb
jnp
test
jg
sub
xchg
ret
arpl
push
jl
or
ja
xor
push
pop
jmp
stos
ds
icebp
add
js
mov
jnp
pop
cltd
xchg
and
xchg
int
or
add
mov
cmp
cmp
arpl
pop
or
js
xchg
aas
mov
out
pop
mov
jle
ret
inc
or
cmp
faddl
cltd
xchg
je
add
sub
nop
lea
sbb
pop
shll
dec
sbb
jno,pt
xchg
inc
jnp
xchg
leave
jbe
ljmp
je
rorb
jae
xor
shl
call
add
ret
pop
popl
fsubl
mov
push
scas
fdivs
dec
cmp
loop
rclb
mov
fwait
iret
movl
stos
pop
ja
or
stos
mov
sub
mov
cmp
cwtl
push
sub
sub
in
pushw
into
into
sub
sub
stos
ja
pushf
cmpb
pop
jo
aad
or
dec
out
push
inc
rol
jnp
push
lds
jbe
mov
in
mov
je
hlt
jnp
sbb
stos
dec
sub
add
aad
dec
inc
jnp
sbb
pop
shll
jno,pt
mov
cmp
sbb
mov
popf
gs
dec
out
mov
iret
cmp
sti
imul
xchg
lods
in
and
aas
xchg
mov
cwtl
sbb
add
or
or
pusha
jnp
push
pusha
cmp
int
adc
mov
mov
xlat
arpl
inc
mov
inc
mov
lea
xor
add
xchg
dec
add
or
push
sbb
or
sti
dec
arpl
sahf
cld
dec
jg
ljmp
mov
adc
mov
jmp
inc
mov
ret
mov
fildl
mov
jg
stc
or
mov
xor
jmp
pushf
imul
idivb
insl
lds
popf
rolb
xor
mov
mov
mov
inc
dec
jnp
push
inc
jge
add
push
mov
sbb
insb
sub
cli
fimuls
push
sbb
outsl
xchg
add
mov
sbb
push
fs
aad
shll
dec
inc
loope
jecxz
xchg
xchg
fisttpl
xor
pop
mov
dec
stc
cltd
js
popf
hlt
jnp
shll
jbe
leave
mov
ja
mov
adc
fcoml
cmpl
or
sbb
jp
adc
mov
or
sbbb
pusha
mov
fsubrs
aaa
sbb
mov
hlt
push
add
test
sti
jae
leave
sub
mov
add
add
ret
aas
jbe
ret
roll
cmp
mov
mov
sbb
mov
sahf
adc
arpl
and
push
rorb
and
mov
bound
in
push
pop
cmp
cs
xchg
loope
arpl
shl
pop
add
xor
popa
pop
adc
mov
inc
pop
xchg
in
sahf
and
or
aad
dec
add
jnp
lea
xchg
sub
xor
cmp
sub
lea
das
lods
mov
cwtl
jl
pop
cmpb
sub
repz
mov
imul
jnp
push
xor
lahf
fs
jge,pt
xchg
into
hlt
pop
arpl
jnp
iret
imul
mov
jmp
xchg
xor
scas
in
daa
adc
mov
cld
mov
cmp
sbb
insb
push
mov
add
lods
pop
lret
sub
xchg
xchg
xchg
fcmovne
mov
dec
mov
push
sarl
fstpl
scas
jmp
mov
push
dec
int
incb
inc
ss
sub
inc
shrl
mov
aaa
xchg
test
mov
gs
sub
ja
push
jbe
dec
fidivs
dec
adc
and
imul
inc
mov
dec
sbb
mov
rcrl
ds
dec
sbb
call
pop
mov
ffree
shrb
imul
push
frstor
push
outsl
sbb
xchg
adc
pop
pushl
sub
inc
dec
xchg
jp
adc
sti
jno
sub
cmp
adc
push
out
adc
fildll
aam
cltd
xchg
adc
cwtl
fistl
int
jo
jle
pop
outsb
fisttpll
inc
insl
mov
push
nop
int
dec
pop
outsl
or
clc
out
or
mov
sbb
jnp
cli
adc
mov
adc
movsl
and
jbe
jnp
inc
fistpl
rolb
jno
outsl
add
orb
add
pop
dec
dec
jne
test
bound
cmp
imul
pop
cmp
xchg
lea
mov
inc
cmc
push
seta
xor
fwait
dec
add
jmp
jns
cld
cmpsb
mov
jp
cmp
jmp
insl
sub
sub
cli
add
adc
adc
dec
into
repnz
push
sub
int
and
shll
jmp
sbb
bound
mov
mov
cmp
push
or
sbb
adc
lahf
pushf
mov
stos
pop
popa
lea
add
ret
sti
daa
into
stos
es
lods
push
imul
mov
cmp
pop
rorl
add
sarb
pop
sbb
xchg
pop
add
mov
xchg
or
jnp
fdivp
cmp
dec
loope
imul
insl
or
jo
jnp
jno
call
push
rcl
push
fidivrs
inc
push
nop
std
in
sub
nop
xchg
mov
adc
lea
lret
dec
cltd
movsl
sbb
sbb
xchg
test
push
mov
pusha
jl
mov
sti
dec
int3
lcall
das
inc
pop
xchg
les
outsb
sbb
sti
lret
arpl
cmpsl
dec
add
push
pop
js,pt
or
dec
dec
sqrtps
out
arpl
or
in
faddl
mov
push
mov
pop
push
xlat
mov
mov
inc
in
std
or
shrl
xor
loope
mov
xchg
mov
mov
dec
int
jl
mov
mov
xor
fistpll
mov
xor
test
cwtl
add
cmp
fistps
movsb
lret
nop
inc
fiadds
insb
testb
test
repnz
mov
cmpb
cltd
jecxz
or
adc
pop
bound
fimull
sahf
sbb
movsl
add
cltd
stc
mov
xor
pop
ds
sbb
push
cmp
les
add
repz
xchg
mov
or
cmpsb
movsl
cmc
cmp
aam
clc
shll
xchg
jo
sub
pop
in
pop
fsubs
sarl
jmp
cmpsb
nop
pop
jnp
sub
rorl
int
fst
iret
addr16
je
loop
sar
stc
loope
cmp
jo
aas
scas
or
jp
jp
pop
jge
cmp
flds
fs
xchg
adc
out
addr16
aad
jge
mov
jmp
cld
jmp
push
mov
stc
arpl
nop
add
nop
pushf
sbb
or
xor
pop
jp
push
dec
int3
in
lods
adc
lcall
xchg
jl
popf
and
xchg
or
aad
fwait
adcb
in
or
mov
mov
push
lahf
int3
adc
push
push
jno
bound
pop
loopne
pop
mov
imul
mov
je
add
jge
adc
push
arpl
dec
mov
ret
xor
fwait
cmp
jecxz
mov
je
and
mov
push
sbb
sub
jmp
sti
ret
pop
push
adc
mov
and
cld
dec
adc
inc
int3
es
cmpsl
pop
jmp
mov
xchg
scas
iret
jb
mov
jmp
jg
in
out
sbb
jne
mov
jnp
arpl
mov
cmpsb
test
test
push
in
pop
ljmp
outsb
sub
sub
lds
add
mov
mov
push
fstl
lret
fdivr
xor
sahf
pop
rcl
rorb
add
in
or
push
fistps
popa
or
dec
push
in
push
pusha
jnp
ss
lret
fstps
jmp
or
xchg
std
cmpsw
jnp
jno
jg
xchg
mov
ficoml
bswap
pop
sbb
jb
ficoms
hlt
xor
xchg
fisttpll
pop
mov
int
sbb
leave
mov
and
and
sti
xchg
jbe
push
sub
fwait
dec
enter
pop
aas
lea
jge
pop
jmp
outsl
int
in
subl
cmp
mov
jnp
adcl
loopne
enter
or
pusha
jbe
and
rclb
or
insl
xor
inc
lret
or
es
nop
mov
mov
loope
pusha
data16
cmpsb
stos
fisubrs
andl
fcompl
xorb
dec
jmp
fmuls
scas
int
cmpl
xor
sub
pop
std
jne
sbb
jmp
push
pop
cwtl
or
les
push
xor
idivl
cmp
shlb
daa
pushf
fstpt
lcall
jne
dec
xchg
cmpsb
leave
xchg
jnp
xchg
insb
pop
mov
popa
push
mov
jae
push
or
mov
mov
push
sarl
inc
lods
xchg
cmp
mov
jnp
fcompl
popa
or
enter
idivb
cmp
jecxz
pop
sbb
push
jnp
test
iret
xlat
add
ss
pop
lds
pop
ret
popf
aaa
out
test
dec
sub
jp
lods
es
and
lock
dec
dec
sbb
repz
push
into
seta
ljmp
aaa
les
out
xor
pop
lahf
in
xor
aaa
xor
mov
test
scas
ljmp
cmp
sub
dec
push
loopne
add
mov
insb
imul
mov
mov
cmpsl
mov
jmp
or
mov
sbb
lahf
xlat
ret
dec
iret
and
cli
fcoml
add
nop
pop
out
movsb
cmp
mov
xchg
mov
cmp
xchg
jb
jnp
pop
sub
into
sbb
fisttpll
push
xor
jl
lds
adc
mov
aaa
push
fisttps
lods
mov
dec
int
mov
daa
xor
xchg
aaa
loop
sub
pop
push
aaa
xor
sub
adc
xchg
int
push
sar
dec
andl
lret
xor
dec
dec
xlat
outsl
dec
rclb
jbe
xchg
push
cwtl
adcl
mov
inc
pop
adc
push
outsb
sarl
sbb
xchg
adc
ret
mov
jg
xchg
or
lods
jo
popa
cmp
mov
mov
jl
decl
push
push
add
jnp
cs
cmp
fwait
push
imul
fsubp
dec
enter
adc
push
popa
jmp
gs
rcr
imul
subl
and
ljmp
js
je
and
mov
mov
add
iret
movsl
les
data16
cmp
dec
decb
ds
sub
mov
outsl
test
pop
and
je,pt
imul
shrl
sub
lds
mov
dec
les
mov
subb
les
test
in
test
mov
mov
sub
mov
clc
xchg
loopne
mov
int
sub
scas
push
sub
ja
decl
pop
adc
dec
cmp
mov
out
js
add
pop
mov
sti
pushf
pop
mov
inc
int
xchg
cmp
addr16
ss
dec
or
in
movl
push
inc
lea
inc
sub
inc
pop
inc
ja
cmp
cmpsb
sti
mov
adc
call
inc
cmc
sbb
test
sarl
lea
ds
test
dec
lods
add
adc
addl
and
jnp
push
sub
mov
mulb
icebp
movsl
aad
mov
cmp
nop
faddl
cmpsl
mov
int
or
jnp
enter
sarb
ret
push
and
or
pop
cld
mov
mov
or
cwtl
sub
nop
das
jp
sar
loopne
cltd
rcrb
lret
jb
or
fldt
dec
dec
jp
dec
out
and
adc
mov
dec
ja
gs
push
adc
jae
pop
bound
sub
fwait
cmpl
shlb
pop
xor
mov
arpl
push
ret
cmc
inc
call
push
xor
mov
mov
inc
jns
mov
sbb
insb
inc
iret
lahf
or
push
pushf
lods
mov
jecxz
inc
push
psadbw
movsl
jbe
cmp
xor
mov
sbb
mov
out
pushf
jnp
in
mov
cltd
jmp
imul
sub
out
fwait
popl
int3
stc
sbb
or
mov
inc
pop
enter
testl
and
pop
ret
in
inc
push
jne
pop
mov
push
push
pushf
pop
sbb
pop
int
mov
xchg
xchg
and
inc
movsl
mov
push
outsl
sbb
push
jnp
pop
test
std
aas
ficompl
jbe
popa
dec
mov
inc
adc
jmp
push
xchg
sti
push
lahf
dec
inc
leave
in
push
xchg
mov
mov
xchg
sahf
sti
and
mov
mov
sarl
mov
cmc
insb
jne
sbb
int
mov
mov
lock
xchg
sub
mov
inc
lcall
mov
jle
jo
cmp
rorl
cs
jne
fwait
or
test
out
add
out
std
repnz
xchg
cltd
addr16
or
xor
negb
lock
ds
jle
sbb
enter
ffree
andl
and
ja
mov
aam
mov
imul
mov
xor
sbb
into
xor
int3
fmull
xchg
sbb
mov
sub
pop
sub
lret
and
lret
mov
sbb
or
xor
es
cmp
xor
or
lret
stc
jnp
jno
xchg
lea
jl
cmc
imul
cmp
pushf
ds
lea
fisubrl
jnp
dec
mov
pusha
cmpsb
add
movsb
sti
pop
shl
sbb
pop
cld
sbbl
lods
nop
in
ja
enter
ljmp
ficompl
call
sub
insl
inc
call
shll
jo
cmp
sub
pop
cmp
jge
jmp
insl
mov
icebp
pop
cltd
int
add
or
push
or
push
cmp
sbb
psrad
dec
adc
cmp
jmp
test
or
std
dec
pop
sub
loopne
push
push
and
repz
xchg
mov
stos
mov
or
lock
stos
aaa
insl
or
test
inc
mov
mov
mov
orl
sti
cmp
gs
adcl
lds
ljmp
adc
mov
std
loope
mov
popf
or
sbbb
sti
jl
mov
aaa
push
test
pop
cmp
dec
fistl
lods
imul
pop
fbld
pusha
push
fld
fucomi
sti
lret
mov
das
scas
cmp
push
mov
popf
pop
inc
ret
inc
sub
push
loop
and
push
mov
xor
andb
jl
push
dec
jnp
lds
push
mov
iret
add
mov
lea
notl
pop
push
ret
mov
ret
jl
stos
dec
outsb
cmp
jle
sbb
sti
je,pt
xchg
mov
in
add
dec
dec
lcall
dec
sbb
popf
je
fildl
enter
nop
xchg
call
popf
in
movsb
sub
out
sti
mov
js
ret
data16
ret
in
pop
in
cmp
mov
scas
xor
fwait
pop
mov
sbb
fdivrs
out
ret
cmp
pop
push
lds
cmpsb
pop
std
pop
sbb
das
ds
dec
jbe
jecxz
dec
push
mov
cmpsb
mov
jae
mov
xchg
inc
movl
jp
add
lock
insl
mov
movsl
pop
hlt
push
mov
sbbb
cmp
pop
jl
jge
pushf
dec
mov
adc
jbe
xchg
xlat
jnp
add
fcomps
inc
js
pop
int
pop
push
push
orl
in
mov
lock
hlt
mov
cld
pop
out
push
pop
mov
mov
pop
iret
pushf
push
sbb
fisubrl
sti
mov
mov
inc
clc
adc
js
mov
cmp
push
shrl
insb
pushf
add
cmc
nop
mov
push
std
rcrl
jg
jge
jo
mov
pop
cld
sub
xor
mov
mov
insl
shrl
pop
push
dec
cmp
push
sbb
sbb
jg
in
into
addr16
cmpsl
shll
ds
mov
arpl
repz
xchg
mov
cmc
mov
and
or
fs
roll
adc
into
dec
scas
mov
mov
push
imulb
sbb
popa
adcb
inc
dec
xlat
pop
lds
fstl
xchg
movsb
jae
cmp
call
mov
mov
xchg
lea
les
inc
xorb
dec
and
dec
mov
add
cmpsl
fisubrs
dec
es
shlb
out
dec
dec
sbb
push
or
scas
jnp
das
insl
or
add
or
enter
adcl
ret
sbb
dec
jmp
loopne
xchg
mov
sbb
jns
pop
aad
or
std
mov
dec
adc
notl
lcall
cmp
pop
aas
xchg
jns
int
sbb
lea
sbb
push
cli
mov
jb
cmp
jns
nopl
pop
or
fmuls
and
inc
sub
push
arpl
in
ja
stos
test
std
repz
dec
mov
add
lea
and
lock
push
and
push
inc
or
jge
imull
popf
push
dec
leave
mov
inc
lret
cmp
jl
ret
loopne
inc
and
iret
int
mov
sbb
dec
jb,pn
mov
jmp
pop
add
addr16
add
xor
mov
mov
fwait
dec
mov
jb
data16
xor
cmp
je
pop
mov
sub
das
jp
adc
cmp
or
or
mov
mov
je
sbb
push
xlat
fwait
add
mov
dec
push
mov
pop
mov
push
loope
pop
mov
xchg
pushf
mov
int
jg
push
incl
shrb
push
jmp
inc
popa
bound
jnp
ds
test
out
or
cltd
add
nop
add
dec
rolb
mov
jmp
mov
lret
mov
dec
or
cmpsb
shl
add
call
mov
lret
mov
int
fistpl
push
mov
imul
push
ds
scas
adc
pop
subl
mov
mov
les
fcomip
leave
dec
in
jo
xor
cmp
imul
xchg
shl
sti
cmp
push
jge
fmuls
iret
cld
dec
dec
scas
dec
frstor
mov
sbb
bound
inc
inc
leave
mov
jae
xchg
sub
jnp
mov
mov
hlt
sahf
pop
mov
pop
js
xchg
mov
scas
mov
insl
xchg
dec
arpl
pop
int
std
stc
push
iret
adc
sbb
cmpsl
clc
cmpl
cmp
push
sbb
mov
push
sub
adc
out
mov
lcall
dec
add
pop
cmp
pop
std
jo
xor
adc
push
dec
sti
push
in
pop
pop
lods
mov
and
cmovg
sahf
sbb
or
push
sbb
cmp
test
pop
add
movsb
ret
push
add
int3
mov
pop
out
push
pop
or
int
jecxz
sbb
sbb
sbb
xor
int
mov
nop
sbb
cmp
stc
lret
in
jnp
loopne
push
cmp
outsb
femms
sbb
sub
sub
cltd
mov
out
add
nop
pop
mov
jle
cmp
pushf
jecxz
cltd
pop
inc
fisttpl
lahf
jle
stos
jns
stos
cmp
sub
rorb
mov
sti
fsubs
dec
dec
sbb
or
lds
dec
cld
movsl
sbb
mov
sti
inc
ds
arpl
mov
push
dec
les
scas
aaa
pop
cld
pop
clc
popa
dec
mov
test
mov
inc
setns
ret
scas
pop
std
lret
xor
sbb
loopne
jmp
mov
add
push
pop
les
lea
adc
mov
pop
lods
out
jge,pt
insl
dec
add
cli
xor
pop
gs
inc
std
test
xchg
inc
sub
ffree
pop
out
push
add
lea
stos
mov
jp
les
mov
iret
test
in
mov
imul
aas
nop
sub
pusha
and
or
sbb
adc
mov
imul
pop
fcompl
sti
pop
push
or
mov
arpl
push
je
mov
and
cmp
test
rol
sti
je
lcall
cmp
in
arpl
mov
fisubrl
shrl
cmc
sub
jae
pop
push
dec
pop
mov
stc
xlat
inc
xchg
loop
mov
add
push
inc
cmp
xor
push
push
lods
xchg
aam
pop
nop
jnp
daa
aas
pop
fadds
in
push
sahf
subb
add
cmc
std
nop
andl
dec
dec
dec
mov
rorl
cltd
jne
ret
insb
lods
mov
mov
sub
ret
mov
inc
adc
xchg
fnstcw
mov
xchg
mov
outsb
cmp
cmp
pop
pop
in
and
mov
push
cmp
xor
mov
jns
pop
pop
adc
aaa
flds
mov
mov
insb
pop
pop
jns
pushf
in
popa
mov
fsts
or
inc
sti
in
ja
lea
jns
aam
loopne
lcall
jl
repz
int
xlat
shl
jmp
and
mov
aad
int
mov
push
stos
bswap
cld
add
dec
in
popf
orb
push
jnp
mov
cs
pop
xor
jb
inc
mov
test
cwtl
mov
ljmp
iret
mov
sbb
insb
imul
incl
faddl
jae
xchg
in
pop
out
jae
cli
loopne
push
dec
test
lcall
cmp
lret
sahf
out
aaa
inc
imul
addr16
mov
scas
cmp
add
jne
mov
inc
std
adc
sub
jne
sub
sub
loopne
inc
inc
lea
dec
dec
cmp
fstps
insl
cmpsl
dec
pop
ljmp
mov
jo
mov
stos
adc
pop
adc
outsl
test
pop
pop
xor
push
pop
jae
jl
sbb
insb
mov
imul
add
push
and
mov
pop
push
cmp
loope
in
mov
pop
movsb
and
test
push
mov
cmp
mov
inc
les
inc
mov
jp
scas
stos
sub
xchg
leave
movsl
mov
mov
mov
ja
or
fcoml
sahf
dec
scas
loop
push
imulb
push
push
in
pop
sti
mov
or
pop
insl
std
leave
arpl
mov
int3
cwtl
pop
mov
or
mov
or
jo
push
repnz
xchg
xchg
sti
jg
or
idiv
lret
in
inc
les
sbb
inc
and
xor
xor
and
ret
scas
inc
dec
clc
adc
insl
fmuls
add
push
dec
jnp
mov
hlt
fistl
mov
hlt
inc
push
int
or
jnp
dec
xchg
mov
lea
rcrb
jge
pop
push
fs
dec
daa
negl
push
sub
sbb
mov
dec
pop
add
stc
lea
sub
xor
outsb
and
pop
lods
lahf
fwait
je
dec
sub
xor
xchg
and
and
jg
jnp
mov
or
dec
in
add
pusha
int
jno
push
cltd
fldenv
aad
mov
pop
les
mov
lods
sarl
dec
call
aam
inc
int
push
ds
andl
dec
adc
jp
out
xchg
dec
and
mov
lahf
or
iret
into
movsl
out
dec
xchg
pop
sti
sub
dec
or
mov
jnp
xchg
mov
scas
neg
or
mov
iret
jmp
pop
cmp
xorl
push
test
fldl
sbb
pushf
mov
iret
pop
mov
cmp
ss
cmp
pop
sbb
data16
mov
pop
dec
cmpsl
mov
add
adc
or
inc
inc
mov
jnp
enter
jno
xchg
inc
iret
sbb
popa
loopne
in
push
dec
inc
mov
mov
xor
xor
adc
sub
repz
lret
fdivr
jl
lock
imul
or
mov
push
sti
lret
push
sti
cmc
push
in
cmp
sbb
xchg
push
and
loop
inc
sti
mov
dec
mov
xchg
psubb
insl
mov
mov
jmp
arpl
aam
and
into
xchg
sti
addb
mov
or
dec
inc
adc
std
jecxz
add
mov
mov
pusha
sbb
push
mov
gs
das
rcr
inc
in
jnp
cld
rclb
pop
jno
movsl
dec
rorb
dec
xchg
add
inc
xor
mov
sbb
inc
jmp
mov
fimuls
shr
adc
pop
out
cmp
mov
ret
lods
scas
xchg
repnz
test
rcll
fwait
sti
insw
cmp
jl
mov
sbb
lcall
iret
stos
cmp
pop
addb
adc
test
mov
scas
fimuls
or
int
cwtl
pusha
xor
adc
mov
outsb
pop
lock
mov
leave
movsl
adc
sub
jno
cmc
xchg
sbb
push
push
leave
imul
sti
jbe
mov
fwait
sbb
scas
mov
enter
sub
inc
mov
push
mov
push
or
int
adc
jge
push
cwtl
and
sbb
mov
sbb
mov
jnp
xor
pop
rorl
jp
jb
or
inc
scas
jne
or
lds
mov
push
or
shrl
subl
adc
mov
push
sub
inc
add
mov
mov
lcall
loop
test
dec
mov
lret
cli
hlt
loop
leave
in
stos
shlb
inc
rcrb
pop
fcomps
mov
mov
adc
push
shll
jg
or
or
xchg
call
cmp
bound
enter
imul
subb
xor
stc
mov
rcrl
sti
add
jl
int
inc
pop
mov
jecxz
mov
sub
leave
in
inc
int
sbb
cmp
test
test
les
je
mov
xchg
aas
or
ficomps
outsb
adc
into
mov
mov
pop
inc
dec
xchg
mov
outsb
lcall
pop
call
andb
sbb
jb
push
pusha
ret
pop
popa
xchg
ds
test
adc
pop
int
sub
loope
push
in
pop
das
adc
popa
dec
mov
aad
imul
fwait
or
lret
jecxz
int
fs
xlat
and
pop
dec
popa
mov
add
mov
jo
jle
and
dec
xlat
pop
and
xchg
mov
mov
btc
xchg
pop
add
inc
dec
cltd
loope
xchg
loopne
ja
int3
pusha
stos
dec
add
insb
add
inc
mov
movsb
push
xrelease
inc
movsl
mov
scas
jp
int
addr16
out
dec
jns,pn
xchg
addr16
mov
pop
pusha
or
cmp
mov
pop
push
sbb
mov
xchg
sti
mov
mov
pop
daa
outsl
jo
dec
xor
mov
mov
imul
sub
fwait
lea
jb
cwtl
sti
fwait
out
push
adc
lahf
movl
xlat
add
pop
sub
pusha
adc
push
xchg
ja
inc
mov
adc
cmp
shrb
mov
scas
cld
push
or
sbb
jne
imul
mov
add
xchg
cmp
dec
test
test
and
cs
cmp
inc
mov
jp
add
inc
pop
or
outsl
fnstenv
cmpsl
iret
pop
pop
sub
pop
sbb
jge
jno
jo
test
push
dec
pop
ltr
cmp
sbb
ret
xchg
in
adc
push
mov
hlt
xor
add
nop
or
movsb
pop
cltd
cli
cwtl
jns
pop
mov
push
dec
and
out
insb
in
jo
adc
and
mov
push
call
push
or
les
fsts
cmp
repz
mov
arpl
push
sahf
push
sarl
push
ja
pop
sub
decl
jno
lcall
mov
mov
jns
push
xchg
xchg
mov
repnz
sub
fnstcw
lret
ljmp
mov
dec
or
pop
mov
add
incb
mov
aad
pop
push
adc
jle
push
popl
dec
and
add
mov
xchg
scas
icebp
inc
mov
int3
cmp
imul
mov
popf
sub
and
adc
push
xlat
cltd
inc
arpl
push
in
mov
dec
pop
ror
pop
jg
lods
jbe
mov
dec
push
mov
test
add
filds
dec
sub
in
scas
xor
sti
sbb
adc
test
addr16
adc
mov
pop
jl
sarl
scas
mov
push
dec
mov
cmp
mov
lahf
js
int3
jle
cmp
sub
xor
inc
loop
pop
les
data16
push
jle
fbstp
fwait
cmc
jp
and
jle
gs
pop
loopne
mov
xchg
call
out
int3
jnp
in
mov
push
inc
jbe
adc
std
fwait
mov
jb
aam
cmpb
int3
fidivl
jbe
mov
icebp
dec
jns
mov
sti
ret
and
aas
cmp
mov
jns
sarb
pop
mov
outsb
dec
out
testl
adc
mov
sub
mov
jnp
add
mov
sti
and
adcl
jo
inc
push
dec
mov
into
insl
sub
popf
lods
addl
sbb
insb
std
mov
scas
jl
movl
int
jns
mov
aaa
mov
nop
jnp
shl
lahf
lahf
dec
ret
lds
repz
popa
icebp
mov
ja
jno
sti
int
hlt
sbb
cmp
sbb
frstor
dec
incb
or
mov
mov
mov
ss
cld
data16
xor
popf
add
and
clc
mov
lods
xchg
mov
xlat
push
sub
dec
pop
dec
push
cwtl
xchg
cmp
test
imul
cmp
mov
xchg
fcoms
aam
add
adc
ss
push
scas
adc
cmp
mov
xchg
jg
fnclex
pop
arpl
pop
mov
dec
lods
or
jle
sbb
xchg
rolb
fldl
mov
push
outsl
adc
push
pushf
mov
cmp
das
push
add
orl
dec
mov
pop
xor
stc
test
xchg
pop
das
cmp
ret
cmp
add
dec
adc
add
mov
movsl
std
ds
rcr
std
in
pop
insb
dec
or
aad
mov
imul
mov
mov
stos
pop
pop
and
popf
mov
cmp
test
jl
test
popa
imul
mov
jecxz
cmp
lock
xchg
in
cmp
mov
jns
ljmp
fldl
jnp
mov
mov
insl
adc
lea
push
mov
add
jnp
adc
mov
cmp
mov
mov
sbb
sub
int
xor
cmpsl
in
pop
loope
xor
or
or
dec
push
add
pop
fcoms
sti
pop
ljmp
ret
or
dec
int
enter
aaa
nop
or
push
and
cmp
cld
ljmp
cmp
insl
test
jmp
hlt
sti
mulb
test
inc
or
dec
or
push
xor
mov
rol
jnp
clc
outsb
xor
fidivs
sub
push
inc
cmpl
pop
push
cmp
xchg
push
adc
daa
hlt
sub
sbb
dec
mov
stos
inc
rolb
test
or
xor
dec
jo
lea
push
cmp
mov
leave
popf
pop
xchg
dec
mov
cmp
mov
mov
bound
or
xchg
ret
mov
out
mov
std
inc
repnz
shll
rcrl
sbb
enter
adc
cwtl
int
add
or
add
daa
xor
arpl
not
mov
push
mov
jnp
or
sbb
inc
xchg
jnp
dec
jnp
mov
xchg
mov
inc
gs
jno
fnstenv
mov
daa
push
inc
sub
mov
sub
xor
movsl
push
popf
xchg
sub
dec
xchg
cld
fcmovnbe
mov
ret
jmp
xchg
jl
jnp
adc
or
leave
rolb
mov
push
dec
jp
push
ljmp
adc
stos
sbb
pop
dec
pop
sbb
cmpl
inc
xchg
cmp
push
fxch
mov
push
sbb
lcall
mov
sbb
hlt
outsb
in
mov
rcl
cmp
push
add
test
or
dec
fcmovnbe
es
mov
cmp
int
and
addr16
mov
int
mov
dec
or
das
sbb
arpl
lahf
data16
mov
jne
subb
cmpsb
jnp
jg
push
mov
push
aam
or
cld
cmp
sti
daa
mov
mov
pop
std
movsb
pop
in
cmp
clc
pop
xlat
dec
push
jne
mov
pushf
xchg
lret
out
push
push
jmp
dec
push
notb
adc
rcrl
clc
pop
lock
pushf
adc
rorl
add
mov
and
sbb
pop
repz
mov
pop
stos
movsb
pop
pop
and
or
or
dec
cmp
fimuls
fs
rcrb
xchg
dec
lods
dec
int
dec
lea
shll
loop
inc
repz
test
int
les
movsb
mov
mov
cmp
xor
dec
movsl
xchg
iret
dec
imul
inc
mov
movsl
arpl
data16
int
push
sti
pop
jo
dec
dec
mov
or
or
shlb
xlat
and
mov
pop
adc
shlb
mov
mov
das
insl
std
gs
jg,pt
jle
pop
sbb
add
cltd
mov
cld
add
cmp
scas
xchg
jnp
ficoms
repz
pushf
lods
mov
pop
idivl
mov
add
rol
xchg
push
jns
std
xchg
nop
xchg
add
faddl
mov
push
in
xor
push
ja
dec
xlat
loop
push
push
or
and
or
push
dec
add
mov
lods
jnp
loop
aad
das
lret
pop
fisubrs
mov
or
pop
fstpl
push
test
dec
cwtl
jbe
sbb
xor
sbbb
fcmove
push
mov
loopne
inc
dec
xor
push
stc
xchg
sub
imul
xchg
out
test
add
or
sub
cmp
or
add
lea
and
dec
pop
sahf
dec
add
dec
dec
es
lcall
in
movsl
aas
inc
dec
nop
sub
test
mov
sub
push
add
push
ds
aam
ficomps
insb
sarb
loop
loopne
inc
mov
mov
mov
jl
inc
jno
outsl
mov
scas
sti
arpl
jnp
sub
or
lcall
into
cmp
je
std
xchg
mov
test
jl
push
jecxz
cs
jl
jle
jne
or
mov
sbb
inc
outsl
popf
sti
aas
xchg
inc
mov
shll
lds
scas
dec
arpl
arpl
lcall
ror
xchg
sub
fidivrs
and
out
inc
iret
mov
inc
data16
jecxz
repnz
scas
xchg
jae
adc
rcrl
lea
insl
in
pusha
lcall
xor
insb
leave
rolb
push
xchg
or
movsb
mull
in
stc
rorb
out
clc
cmpsb
sbb
or
xchg
mov
push
lcall
rolb
push
cmp
cmpsl
test
jne
lods
arpl
sbb
ret
pushf
jnp
jns
testl
ret
jo
cmp
jge
jge
movsb
mov
int
adc
dec
xor
pop
mov
mov
or
mov
lea
sbb
xchg
adc
dec
jnp
adc
jle
or
aam
in
mov
dec
test
fsubrl
adc
sti
jns
push
mov
scas
cmp
mov
ud0
inc
inc
or
cmp
loopne
shll
jge
rcll
xor
aas
in
inc
or
or
dec
inc
mov
loopne
cmp
insl
gs
mov
mov
mov
pop
adc
lcall
push
jle
jae
jnp
push
pop
add
in
mov
push
pop
stos
inc
add
aam
xchg
push
sahf
jg
roll
push
mov
test
pop
and
fistpl
cmp
mov
sti
xchg
xor
icebp
ret
sub
loop
dec
xchg
lcall
push
xor
mov
sti
push
stos
dec
adc
into
notb
stos
stc
xchg
pop
jl
insb
pushf
mov
mov
cmp
push
dec
mov
adc
movsb
or
inc
outsl
into
cmpsb
bound
sti
jle
fldl
mov
iret
xor
push
int
negl
xor
dec
int
push
cli
adc
mov
mov
dec
xor
or
push
mov
mov
lods
sti
data16
jle
rcrb
and
hlt
dec
or
sbb
lock
or
mov
cmpl
cmp
cmp
lea
in
mov
cmp
int
xor
dec
xor
lods
mov
packsswb
mov
fcmovnbe
jae
mov
mov
scas
js
add
dec
mov
jge
pop
inc
nop
int
fs
push
adc
jecxz
sub
sti
push
or
rorl
mov
dec
lret
dec
insb
add
scas
loopne
out
mov
pop
mov
scas
shlb
xchg
push
mov
sbb
out
enter
pushf
sbb
daa
mov
jnp
and
mov
cli
fsub
insl
repnz
movb
add
mov
cltd
dec
jae
test
mov
pop
adcb
push
cmpsl
sbb
bound
pop
xchg
or
ljmp
pop
lahf
cmp
add
fisttpl
push
mov
mov
clc
ja
add
int3
lods
call
xlat
dec
lea
jmp
out
ret
push
data16
push
pushf
cmp
fmull
call
cmp
subb
push
mov
mov
pop
sub
sub
les
scas
mov
and
fstpt
cmp
lock
add
jb
mov
stos
enter
push
lock
enter
or
inc
jae
pop
push
jle
or
pop
pop
cmp
jmp
cmc
test
stos
xchg
rcrl
nop
test
push
jge
jbe
inc
xor
inc
jl
cmp
jmp
mov
lods
mov
std
pop
pushf
ljmp
ret
xor
arpl
sbb
push
cmpsl
push
jle
sti
sbb
inc
xchg
stc
dec
mov
jge
adc
aas
jmp
repnz
and
pop
mov
or
add
push
dec
lea
cmc
xor
push
int
add
in
or
push
imul
insl
push
repz
mov
xor
popa
inc
xor
dec
dec
in
in
pop
sub
imul
cmp
dec
test
inc
mov
mov
lahf
mov
lock
lahf
push
sbb
in
dec
cwtl
hlt
sbb
inc
or
insb
push
stc
popf
lods
dec
and
inc
or
cmpsb
aad
adc
push
lret
fldl
fmull
xchg
or
outsl
push
cmp
dec
adc
stc
scas
mov
rorb
dec
rcll
cmpsb
or
push
imul
jnp
pusha
loopne
mov
sub
ret
mov
int
out
test
ret
mov
lret
mov
dec
enter
mov
add
cmp
jae
popl
xor
insl
and
dec
inc
icebp
cmp
int
or
std
jmp
push
mov
pop
xchg
inc
sub
mov
xor
sub
adc
inc
mov
dec
cmpsl
mov
dec
xchg
je
ret
in
mov
mov
fcompl
jnp
loope
ficompl
jb
loope
int
scas
lret
pop
jge
push
jne
fstpt
stc
push
mov
int
inc
xchg
sbb
mov
out
daa
lods
scas
push
aam
cmp
mov
mov
daa
cmp
mov
dec
aaa
or
repz
pop
icebp
test
mov
xchg
xchg
sub
out
and
fidivrs
cmp
mov
outsl
push
push
sti
ljmp
push
imul
or
jp
and
shll
jmp
cmpsl
sbb
inc
cmp
adc
inc
inc
and
mov
xchg
adc
adc
popf
mov
cmpsl
inc
subl
loop
stos
mov
mov
data16
loope
sub
add
pop
imul
mov
aad
imul
and
dec
cld
minps
fadds
add
ljmp
aaa
mov
mov
push
jmp
mov
mov
jno
add
fisttpl
push
in
mov
xchg
sbb
shr
ja
sub
dec
pop
jge
aam
mov
int
pop
xchg
imul
rorl
xlat
and
push
inc
int3
add
lcall
ret
xor
xchg
push
jg
icebp
jmp
jnp
jne
push
xor
adc
mov
int3
sub
negb
pop
dec
cmpsl
dec
cmp
lds
and
sub
inc
gs
pusha
sub
mov
xlat
pop
lea
sub
pop
dec
add
icebp
nop
negl
in
and
adc
ret
aad
or
pop
imul
mov
fildl
xchg
mov
mov
out
addr16
imul
adc
mov
mov
enter
out
sar
sub
sbb
sbb
push
or
pop
xlat
cmp
add
mov
das
out
dec
std
movsl
ja
push
mov
test
fistl
ljmp
lea
add
adc
cmp
push
add
sahf
xor
push
cmc
mov
add
sub
fxch
cmp
inc
and
lahf
and
jl
pop
mov
fistps
mulb
jle
mov
test
pop
outsb
or
xor
addb
lds
imul
add
push
add
int
mov
mov
lock
xorl
enter
push
push
jecxz
mov
lods
je
cmp
aam
xor
pop
push
pop
cmc
test
aas
test
mov
fcoml
mov
daa
movb
loopne
insl
daa
sbb
repnz
out
addb
fstp
xor
jbe
scas
inc
gs
cmp
xchg
mov
adc
pusha
loope
jg
xor
push
and
xchg
stos
sti
out
jg
cmp
mov
daa
pushf
int3
adc
mov
popa
xor
sub
fsubrl
movsb
sti
mov
loope
sbbb
int
aas
into
in
sbb
xor
into
in
inc
fwait
aaa
xchg
cmp
int3
pop
cmpl
movsl
sbb
neg
cmp
ficoms
imul
sub
pop
inc
dec
cltd
or
insb
in
or
mov
dec
int3
popf
jae
mov
clc
mov
std
test
fwait
hlt
sbb
je
je
lea
bound
movsl
cmp
lods
popw
cmp
jns
daa
movsb
sub
sub
push
cmp
xor
sbb
loope
std
mov
bound
out
scas
inc
sbb
inc
das
lock
jno,pn
jnp
mov
mov
lret
leave
out
xchg
push
iret
dec
jmp
and
cmpsl
test
dec
adc
fadds
stc
jo
mov
or
outsl
out
pop
and
mov
mov
xchg
lods
or
imul
std
jnp
cmpsl
imul
icebp
scas
cmp
mov
icebp
xor
cld
inc
inc
push
ficoml
and
cmc
movsb
mov
push
int3
sbb
jno
xlat
insl
subb
mov
inc
adc
cld
sti
rclb
cmp
fldcw
or
pushf
rcrb
xor
adc
push
mov
mov
sti
xchg
or
loope
cli
sbb
dec
adc
test
bound
pop
jl
sbb
jl
pushf
cmp
push
mov
sti
stos
adc
lock
test
movsl
jnp
sarw
jecxz
push
xchg
lahf
jg
push
sti
push
sbb
xor
xor
xchg
xchg
je
mov
fidivrs
insb
push
cmpb
sbb
scas
adc
loope
bound
fiadds
mov
jl
inc
push
rcl
testl
adc
jnp
adc
jbe
jmp
jge
outsl
and
xchg
dec
sarl
mov
lods
mov
jo
icebp
or
out
jno
jnp
outsb
add
out
std
inc
jp
fdivrp
cmc
adc
xchg
mov
push
add
addr16
add
sbb
inc
dec
push
push
dec
dec
jle
pop
test
mov
jno
jnp
loope
mov
shrb
add
test
inc
dec
lods
and
mov
inc
add
cmpsl
add
aas
sbb
push
fwait
rorb
xor
xchg
jnp
xchg
lahf
fildl
dec
cmp
inc
push
xor
sbb
mov
jo
pop
rol
cld
fistpll
mov
and
add
js
xchg
int3
push
dec
mov
subb
jl
stos
int
jmp
push
movsl
dec
mov
cmc
jp
cld
jno
add
out
rorb
sbbl
xorb
or
push
jns
es
gs
jnp
cmp
dec
adc
pop
mov
movsb
inc
sti
adc
mov
ljmp
leave
in
dec
stos
es
xchg
repz
push
iret
std
add
cld
leave
jbe
push
js
sahf
jbe
jns
addb
add
and
and
dec
pop
xchg
imul
sub
jl
sti
jnp
out
mov
hlt
sarb
add
mov
mov
pop
pop
call
std
push
lahf
jp
mov
lahf
adc
inc
cmp
push
pop
jle
out
cmpsl
push
cmp
iret
gs
mov
sbb
aaa
dec
lds
mov
dec
sub
stos
jmp
mov
imul
mov
lcall
out
pop
mov
mov
push
adc
pop
jmp
jo
insl
aas
dec
mov
mov
das
fisubl
or
inc
fistpll
mov
daa
push
cli
sub
das
jge
mull
xor
or
hlt
popf
arpl
outsl
out
sub
sti
pop
cli
gs
sub
sub
or
sbb
lea
sti
pop
and
lcall
adc
mov
jmp
sub
mov
xchg
adc
addl
inc
add
pushf
cmp
nop
fwait
sub
jb
xorb
push
ss
sbb
inc
cltd
into
mov
xchg
dec
fbstp
xchg
add
adc
cli
xchg
scas
mov
pop
mov
outsl
push
test
pushf
std
inc
jg
push
add
popa
inc
test
or
jl
dec
dec
dec
xor
xor
scas
mov
cmp
mov
add
jge
mov
pop
inc
fucom
pop
add
or
sti
lret
out
pushf
sti
das
mov
rorl
add
test
adc
testb
inc
jmp
push
push
mov
ficoml
add
mov
xchg
jae
xor
mov
mov
fdivrl
mov
jg
xor
inc
mov
or
out
mov
int
cmpb
loop
push
adc
xor
xchg
notb
xorb
inc
bound
lds
pop
jnp
in
dec
dec
jbe
adc
dec
cmp
xchg
stos
lahf
push
cmc
int3
jnp
push
adc
mov
cmpsl
pop
sarb
imul
pop
xchg
and
mov
ja
sub
and
mov
fsincos
push
inc
test
cmp
ss
bndstx
add
addl
add
mov
inc
add
outsl
js
and
mov
daa
mov
mov
inc
shrl
daa
push
in
and
stos
dec
pop
adc
dec
mov
dec
fiadds
mov
jbe
out
xorl
pop
inc
mov
jne
xchg
rcrl
imul
dec
nop
loopne
add
inc
cs
scas
mov
add
xchg
cwtl
int
cmpsb
or
mov
jo
in
outsb
mov
aad
mov
adc
fisubl
jmp
notb
mov
add
adc
sbb
sbb
fsubl
insb
outsl
dec
adc
test
ja
or
das
mov
adc
or
lcall
or
push
inc
push
mov
add
dec
mov
adc
mov
pop
or
ret
sarb
testb
dec
std
lock
adc
mov
xchg
jnp
pushf
xchg
jae
pop
mov
stos
pop
push
push
push
je
mov
add
test
dec
jmp
cmp
mov
xor
pop
sbb
stos
aam
add
xlat
xchg
inc
out
or
mov
cwtl
sub
mov
cmp
into
inc
rcll
jmp
and
inc
mov
mov
mov
fdivs
es
push
cwtl
in
add
pop
hlt
movsb
lea
adc
fwait
je
jg
fisttpl
jp
sbbb
dec
mov
dec
jmp
pop
ret
repz
pop
mov
or
mov
mov
adc
insl
sbb
ds
subl
fidivl
inc
inc
pop
ja
mov
mov
sti
fstp
nop
mov
test
jmp
xchg
ds
outsb
roll
fimuls
out
inc
push
sbb
dec
inc
popf
mov
inc
lea
dec
adc
push
rcrb
push
xor
insb
inc
adc
mov
popf
mov
xor
shll
loope
loop
test
ret
pop
fdivr
xchg
jno
xchg
cmp
sbb
mov
xchg
out
jecxz
mov
insb
lea
cmova
fdivl
dec
xchg
lret
mov
or
cltd
jle
jnp
pop
imul
in
jle
mov
mov
sbb
jae
scas
dec
add
xchg
sti
imul
and
jp
sbb
mov
ds
and
xchg
mov
cmp
lahf
mov
mov
or
sub
outsl
std
subl
cwtl
enter
add
push
sub
xor
dec
dec
jno
jmp
dec
in
fnclex
adc
lods
sti
xchg
xchg
int
mov
int
jne
pcmpgtd
insb
adc
jae
std
shrb
aad
fstpt
fidivs
mov
mov
adc
pop
scas
mov
mov
sarl
jne
push
enter
in
add
pop
cmp
ret
xchg
push
aas
int
pop
cmc
jge
cli
cmp
inc
cmp
inc
cs
in
pop
das
dec
aas
cmpsl
or
cli
cmpl
fcompl
aas
add
dec
lds
cs
loope
or
test
lret
dec
test
js
push
int3
inc
loopne
or
mov
loope
inc
pushf
cmp
xchg
cmp
inc
lods
into
fcoml
or
xchg
cld
outsl
fmul
mov
pop
std
dec
add
and
icebp
xchg
pop
mov
xchg
lcall
xchg
notl
je
dec
pop
lods
jecxz
jmp
sti
frstor
sub
fmull
addb
jl
scas
jno
add
xor
mov
mov
iret
pop
pop
cmp
inc
sbb
pop
push
popa
int
mov
popa
push
arpl
push
orb
adc
push
cli
inc
shrl
mov
repnz
sahf
pop
fcoml
dec
nop
xor
push
inc
inc
lods
lods
sti
push
sbb
cmp
rclb
jb
cmpb
lret
jle
inc
jl
cmp
ja
xor
rolb
jge
mov
movsl
dec
jmp
leave
popa
dec
inc
mov
dec
lds
lods
inc
push
fs
popf
mov
outsb
pop
jecxz
xchg
pop
or
daa
and
lods
adc
and
loopne
pop
lea
add
mov
cwtl
andl
movsl
mov
mov
iret
and
xchg
xor
dec
mov
mov
popa
jmp
sub
movsb
pop
adc
mov
push
lods
xchg
aad
js
mov
mov
jnp
xor
daa
aad
mov
ja
test
lods
xor
dec
hlt
xorl
xor
lcall
and
movsb
mov
pusha
lahf
push
and
fsubrl
cld
lods
xchg
fistpl
sub
cld
loopne,pn
movsb
adc
lahf
xlat
or
sub
jo
out
fnsetpm(287
ja
cwtl
jge
rcr
inc
mov
jg
fs
push
cmp
test
out
fistpll
xchg
cmc
cmp
jle
dec
push
jae
push
pushf
pop
push
mov
xchg
jnp
xor
pop
std
test
xchg
mov
mov
mov
mov
imul
popf
sbb
lods
int3
push
inc
mov
or
aaa
imul
gs
pop
insl
adcl
gs
lea
mov
mov
mov
xchg
adc
in
jbe
jmp
idivb
decb
ds
out
sbb
inc
push
fs
dec
and
mov
sub
mov
jno
or
pop
cmp
or
dec
in
call
test
xchg
sbb
xchg
dec
mov
dec
adc
mov
adcb
inc
lods
add
cmp
xorps
loopne
push
add
add
dec
ret
lods
cltd
add
xor
sbb
roll
int
aam
xor
cmpsb
push
shlb
sbb
shrl
cmp
das
into
mov
xor
dec
and
xchg
xlat
push
xor
xchg
or
adc
insl
out
sbb
jb
jb
xor
dec
movsl
and
cmp
dec
movsl
push
cmp
jp
fdiv
int
xchg
xchg
jns
and
mov
loope
shrl
into
imul
mov
push
test
add
pop
adc
mov
xor
shll
jbe
dec
or
mov
scas
push
iret
gs
mov
out
mov
and
shlb
ret
daa
out
clc
fistpl
xor
push
jl
inc
mov
cmp
sub
mov
mov
push
lods
mov
and
sub
dec
je
inc
dec
add
sbb
push
pushf
sti
mov
lcall
lock
jbe
enter
inc
cmp
ss
sbb
dec
jle
stc
rcrb
mov
or
xchg
jns
cld
pop
clc
sub
int3
fsub
mov
mov
adc
and
add
loope
fistl
nop
sti
popf
xchg
nop
inc
pop
rolb
xchg
aaa
das
mov
mov
xchg
add
mov
push
dec
pop
in
sti
cltd
xchg
es
pop
ss
jg
jnp
fiaddl
aas
repz
push
cmp
ds
fs
mov
lock
mov
cs
xchg
cmp
lock
mov
jg
in
mov
and
sub
loop
add
push
fdivrs
cwtl
in
push
inc
xchg
pop
pop
pushf
pop
arpl
pop
inc
in
dec
test
mov
mov
jne
daa
pop
mov
or
push
add
sbb
jmp
mov
addr16
cmp
rorb
lea
mov
mov
dec
rcl
mov
adc
xchg
in
adc
ss
sti
pop
rcr
mov
leave
cmp
pushf
fldt
fbstp
cmc
outsl
jg
lcall
in
mov
cmp
jo
pop
cltd
andb
test
pop
nop
lahf
xor
add
add
jge
and
jecxz
xchg
mov
int3
xor
dec
rclb
xchg
sti
shl
outsb
stos
pushf
aaa
aam
mov
loop
cmp
lea
fnstsw
mov
add
sub
aam
stos
dec
nop
and
push
outsl
out
sbb
das
push
movsb
adcb
pop
out
cld
xchg
ret
enter
push
nop
inc
outsb
dec
cs
arpl
push
mov
mov
aam
sbb
cmc
or
mov
push
dec
push
inc
or
sti
jno
hlt
mov
push
popf
xchg
sahf
lea
jmp
sbb
sti
push
sti
xchg
add
dec
in
outsl
movsl
mov
lock
inc
ret
jmp
fldcw
xor
sbb
pop
stos
ret
fwait
outsl
and
daa
fs
cmp
js
mov
xchg
cwtl
mov
sar
out
dec
out
popa
dec
in
cwtl
sbb
mov
sbb
dec
pop
cmp
push
adc
mov
dec
loope
mov
cmpb
adc
push
mov
subb
fbstp
adc
sub
aam
inc
movsb
sbb
sub
dec
popa
test
sub
pusha
xchg
loope
mov
std
sbb
jnp
rorl
ret
mov
movsb
cmp
adc
mov
jle
inc
cmpsb
sti
cli
pop
psraw
mov
lahf
rorl
cmpsl
mov
rorl
daa
pop
dec
std
sbb
inc
jge
popf
mov
jle
mov
fimull
jecxz
shlb
xchg
test
or
pop
cmp
loope
sbb
dec
outsb
sbb
std
loopne
sub
ficoms
dec
add
sarb
addr16
dec
mov
sub
adc
ficoms
xor
pop
sub
iret
mov
push
cld
lea
scas
inc
mov
or
push
ss
dec
outsl
mov
pop
pop
add
xchg
jnp
adc
pop
jmp
cmp
in
pop
lods
leave
push
mov
mov
cwtl
fdivrp
call
cmpsl
dec
and
je
lock
xor
mov
mov
push
mov
je
enter
cltd
jnp
jl
sahf
cmp
mov
cmpsb
mov
pop
insb
lods
vmulss
mov
loope
fcmovnb
mov
sti
mov
ret
cmp
hlt
scas
imul
jge
sar
inc
pushf
lcall
cmpsl
fwait
xchg
sbb
cld
jne
dec
inc
pop
pop
aad
je
mov
cmpsb
sub
jnp
sub
sbb
lret
sub
mov
mov
sti
aam
fs
mov
or
pop
scas
mov
punpckhdq
mov
mov
scas
lds
inc
hlt
jnp
push
popa
push
mov
fistpll
bound
mov
mov
scas
mov
xor
add
jnp
fsubrl
ret
testb
std
pushf
jnp
dec
out
pop
cmp
sbb
inc
adc
bound
dec
int
xchg
movl
xor
add
mov
xchg
loopne
iret
or
ja
adc
add
ss
push
scas
sbb
pop
das
xchg
adc
cld
sub
cmpsb
xchg
out
jb
int
pop
lods
das
daa
sbb
push
sbb
fcomi
cmpsl
xor
inc
insl
outsl
cld
dec
pop
punpckldq
pop
mov
xor
dec
movsl
sti
pop
jp
out
or
cld
jle
push
andb
cltd
mov
fs
lahf
jnp
sub
push
cmp
inc
inc
out
lock
orb
loop
es
cld
push
jno
aaa
movsl
dec
cmp
mov
cmp
in
mov
fists
push
xlat
mov
sbb
inc
adc
subl
dec
pop
lods
cmpsl
ret
mov
jge
out
xor
sub
bound
push
call
imul
imul
add
movsl
xchg
dec
xchg
in
aas
jns
xchg
movsl
test
pop
sahf
or
xchg
jb
xor
aaa
cli
push
insl
es
pop
add
pop
shll
and
fimuls
jge
mov
sbb
or
or
xchg
int3
xchg
mov
jl
pop
cmpsl
mov
jnp
insl
testb
inc
sub
mov
rcrl
mov
and
sub
jmp
dec
cmp
call
fnstenv
mov
dec
cmpsl
push
cmp
adc
ds
enter
xchg
or
insb
ljmp
aad
repz
in
adc
push
idiv
pop
ret
mov
mov
jge
inc
fwait
push
imul
lcall
jle
lret
xchg
cmp
lret
or
jae
jnp
xor
test
push
fcomps
jnp
ss
cmp
dec
or
lods
adc
add
jb
sbb
cmp
cmp
fisubs
inc
hlt
lret
mov
scas
cmp
add
dec
mov
bound
mov
in
xchg
subl
popf
cltd
lock
daa
sbb
xor
roll
je
and
loope
outsb
sub
mov
sbb
dec
pslld
mov
imul
adc
push
out
enter
adc
jmp
pop
aam
aaa
cmpsl
lcall
insl
pop
xor
sub
jnp
sub
inc
lods
in
pop
lret
mov
enter
out
sti
mov
adc
and
jne
adc
mov
or
das
jg
jmp
enter
mov
pop
movsb
xor
pop
jno
int3
sub
or
stos
mov
fucom
enter
cwtl
ljmp
jnp
ds
shrl
xchg
adc
pop
inc
cmp
mov
insl
lahf
xlat
je
subl
gs
dec
mov
pop
sub
mov
pop
cmp
lret
clc
js
adc
xor
je
and
mov
mov
jns
sbb
sti
sbb
sub
add
sub
xchg
sub
std
shld
adc
push
mov
sub
jnp
fnstsw
jg
and
out
add
icebp
inc
inc
jns
mov
jo
addr16
idiv
inc
gs
clc
lahf
jle
and
add
cwtl
mov
out
or
xor
int3
xchg
pop
or
mov
fsts
cld
imul
jp
and
in
mov
inc
inc
rorl
icebp
fiadds
pushf
test
jl
mov
dec
inc
sub
out
dec
pop
aaa
cmp
xchg
aas
cmp
cmpsb
test
sub
sbb
and
cmc
jg
sarb
ret
mov
aas
fsts
leave
dec
jge
fcoml
fldt
push
int3
xchg
cld
dec
xor
gs
jno
mov
jg
mov
test
imul
addr16
adc
cmp
add
mov
xchg
pop
in
jbe
imul
fadds
in
push
pop
pushf
dec
xor
gs
daa
xchg
incl
xchg
loope
jne
push
std
mov
leave
mov
add
dec
adc
lea
mov
inc
or
into
pushfw
repz
mov
push
dec
in
add
sbb
fwait
dec
int3
mov
adc
xchg
mov
jecxz
test
mov
jnp
outsb
push
xor
mov
hlt
popa
js
int
sub
pop
sub
adc
test
hlt
lea
sbb
dec
in
sub
mov
add
push
or
movsl
adc
pop
out
outsl
dec
aaa
cwtl
ss
adc
lods
push
ret
mov
loope
sbb
test
mov
adc
xchg
sbb
fstl
cmpsl
sub
test
jae
cmpsb
jo
jmp
inc
push
je
dec
test
push
es
cltd
hlt
popf
sti
rcl
fstpl
mov
out
stos
sub
fnstcw
dec
ficoml
adc
fmuls
cmp
xchg
adc
jle
add
sbb
and
int
cmpsb
sbb
cmp
mov
ret
cmp
mov
cmp
mov
cmpb
pop
jg
popf
mov
jecxz
cmp
push
test
and
cmpsl
or
addl
mov
fsubrl
sar
stc
stos
ss
outsb
enter
bound
sbb
push
jno
cmc
cmp
icebp
mov
scas
repnz
jnp
push
mov
adc
in
outsl
rcll
cmp
dec
dec
sub
jge
adc
jg
lcall
jne
ss
sub
sahf
jge
inc
cmpsb
xchg
xchg
push
and
push
jo
xchg
ja
and
mov
mov
add
cmp
adc
js
stos
pop
scas
imul
mov
pop
movsb
in
dec
shr
jecxz
or
cmp
mov
jp
sbb
jecxz
push
xchg
int
stos
into
movsb
pushfw
pop
xchg
sub
fnstsw
das
pandn
into
roll
insl
jne
xchg
add
sub
pop
cmpb
xlat
mov
data16
mov
test
jmp
sub
push
test
mov
out
mov
cmp
roll
cmp
jo
sub
xchg
or
pop
mov
sbb
addr16
pop
test
sub
stc
push
mov
mov
dec
sub
jle
dec
int
dec
push
scas
or
xor
clc
data16
mov
das
mov
mov
lret
arpl
mov
fcom
call
scas
jg
stc
mov
push
dec
or
lods
test
mov
mov
mov
xchg
ljmp
cmp
pop
ds
fstpl
pop
mov
sub
pop
sub
jmp
scas
push
push
xorl
mov
scas
mov
pop
jae
int3
mov
dec
cmp
mov
fwait
lcall
push
jne
xchg
dec
inc
mov
jbe
stos
or
or
adc
out
xor
int
pop
out
push
mov
inc
std
ret
out
xlat
mov
inc
mov
out
push
xor
mov
inc
rorb
pop
std
mov
xchg
lea
outsl
xor
es
int3
dec
jle
push
data16
fsts
inc
push
lea
lret
cld
aad
push
sti
into
pushf
sti
repz
or
sbb
add
enter
out
dec
ljmp
cwtl
fucomp
mov
xchg
into
ss
and
ja
push
jmp
aam
mov
repnz
and
jnp
xchg
adc
js
cld
mov
fildll
or
lcall
test
lret
mov
pop
icebp
dec
sbb
push
mov
add
or
dec
in
in
jnp
sub
lds
inc
out
and
test
std
inc
pop
cmp
mov
fsts
cmp
fstps
cwtl
in
outsb
std
es
jnp
aad
inc
cmp
int
xchg
jge
test
int
sbb
jae
cmp
xchg
sub
rcr
adc
pop
pop
iret
jecxz
add
lock
mov
inc
subb
add
xor
pusha
mov
test
jnp
pop
push
sub
xor
orb
xchg
dec
sbbl
mov
cmp
pop
add
xchg
addr16
push
push
pop
daa
daa
mov
aad
loope
leave
or
mov
or
int
push
inc
jmp
aaa
imul
mov
test
sub
push
out
jne
or
mov
cwtl
push
inc
gs
cld
mov
xchg
ds
xchg
and
jg
adc
sbb
mov
jg
cmpsl
cltd
mov
into
testb
adc
arpl
sbb
mov
push
or
arpl
xor
mov
push
lahf
xorl
push
adc
pushfw
xchg
scas
incl
jb,pt
mov
inc
mov
sti
mov
adc
stc
pusha
nop
mov
or
test
int
pop
fcoml
mov
aaa
pop
mov
push
mov
xchg
mov
pop
pop
outsl
jne
jecxz
dec
add
jmp
stos
adc
test
ja
pop
dec
push
mov
fwait
fwait
hlt
rcrb
xchg
mov
lcall
sbb
sbb
aas
cmp
push
and
dec
push
fwait
loope
lods
int
jnp
movups
pop
nop
or
out
pop
dec
pop
nop
mov
dec
xor
mov
xchg
push
mov
dec
imul
fwait
in
xchg
aas
pop
sbbl
or
sub
adc
mov
dec
in
pop
ret
test
dec
and
push
mov
test
shlb
xchg
pop
push
xchg
xchg
movsl
ret
or
shll
push
ljmp
xlat
xor
lods
cmpsb
pop
jl
aam
hlt
xor
lods
mov
cmp
pop
sbb
pop
jnp
and
cmp
push
xor
jae
jge
pop
call
or
insl
fiadds
pop
pop
jmp
xchg
xlat
push
cmp
into
inc
int
call
push
aas
pusha
dec
popf
inc
add
gs
inc
sbb
iret
cld
mov
jnp
int3
outsb
mov
cmp
add
enter
ja
pop
rcrb
nop
aam
mov
mov
mov
dec
mov
mov
lds
pop
scas
adc
xchg
jg
test
add
outsl
cld
lds
sub
cmp
sub
sub
stc
jle
push
cmp
xchg
cmpsb
das
pop
mov
sub
popf
inc
int
fcoms
mov
xor
into
mov
arpl
into
lods
dec
stos
pusha
push
inc
cmp
push
adc
pop
pop
inc
sub
jl
pop
cmp
ret
movsl
lret
add
mov
xchg
mov
jno
jl
and
out
insl
xchg
ffree
jae
mov
adc
jbe
sub
mov
dec
and
leave
and
rolb
inc
divb
mov
in
mov
lcall
mov
int3
push
pushl
cmc
mov
jp
stc
cwtl
jne
mov
jl
mov
ds
pop
dec
and
in
xchg
and
popf
popa
fmul
push
jne
aad
aam
sbb
insb
pushf
cmp
mov
inc
out
push
and
ficomps
mov
push
decb
cmp
adc
mov
mov
pop
jp
js
out
repz
inc
xchg
mov
aaa
jl
add
sbb
mov
fisubrl
cltd
stos
or
add
mov
add
lods
jnp
add
lcall
xor
in
cmp
in
pop
xchg
repz
aaa
rorw
add
push
sbbb
stos
imul
rolb
sti
rcrb
or
pop
fdivrs
imul
pop
pusha
dec
add
hlt
adc
cmpsb
lock
xchg
cmp
sub
sbb
mov
inc
daa
xchg
imul
sub
int
inc
and
cmp
jno
pop
adc
xchg
xchg
sbb
dec
sbb
out
lret
in
push
sub
fstps
sub
or
mov
and
je
arpl
inc
xlat
jecxz
mov
mov
insl
push
das
fistpll
add
jae
add
enter
testl
xor
pop
test
cmovg
mov
pushl
xor
sub
dec
std
pushf
in
pusha
cmpsl
pop
js
fisttpl
jecxz
int3
pop
int
sbb
jns
xor
adc
cld
popa
push
rcrb
cwtl
jl
in
pop
push
scas
stc
jb
mov
sbb
jl
mov
cmp
aaa
add
cltd
dec
cmpsb
push
pop
ror
sub
mov
and
xchg
cltd
cmp
or
sbb
push
jmp
inc
mov
xchg
fldcw
mov
xchg
add
repnz
mov
sub
daa
ret
arpl
aaa
arpl
lahf
je
stos
sti
add
cli
or
or
mov
sbb
pop
aad
js
dec
mov
mov
insb
pop
in
xlat
xor
push
xchg
out
int
nopl
ljmp
push
pop
pop
mov
fsubs
cmpsb
rcrb
dec
cmp
lock
arpl
cmp
jo
imul
pop
push
rcll
jnp
fcompl
jno
mov
adc
inc
dec
push
stos
loop,pn
dec
inc
sub
decb
insb
sbb
aad
mov
arpl
add
cmp
test
test
push
or
xlat
inc
push
cmp
in
or
mov
sub
call
jno
mov
lret
insl
lock
negb
lea
in
jns
inc
out
sub
clc
dec
mov
int
test
or
mov
pop
dec
fstpt
mov
out
insb
and
mov
dec
mov
push
lds
jle
orl
scas
incl
push
push
in
xchg
hlt
dec
fcoms
lods
insb
ds
or
ret
test
push
push
jno
cmp
aas
in
pushf
mov
imul
sti
pop
andb
xchg
pusha
pop
daa
pop
dec
add
mov
inc
pop
jle
dec
sbb
into
adcb
iret
lcall
push
shr
sbb
or
jno
inc
aam
pop
mov
cmp
inc
sub
or
fstpt
dec
lcall
scas
sbb
mov
cmpsl
mov
incl
int
dec
hlt
xor
pushl
pop
xchg
pop
cmp
movsb
jnp
test
faddl
mov
push
out
mov
mov
xchg
cmp
mov
dec
pop
aad
data16
stos
jo
push
test
inc
jg
aam
sbb
add
xlat
mov
cmpb
dec
push
imul
cmp
inc
fcompl
ja
sahf
fstps
sarb
int
add
fcom
stos
in
or
je
outsb
sbb
jnp
push
bound
movsl
jnp
lea
adc
aas
mov
mov
aam
gs
jo
sti
imul
scas
push
mov
mov
loop
pop
cltd
pushf
jns
int
mov
mov
cmc
scas
lea
dec
mov
call
ret
jnp
ror
adc
xchg
jp
xchg
fiadds
emms
inc
xchg
sbb
cwtl
xlat
and
sbb
push
adc
aam
cs
lods
ja
pop
int
mov
pop
pop
xor
pop
dec
xchg
aad
sbb
es
fldl
mov
mov
pop
into
mov
pop
int3
and
pop
push
xchg
xchg
xlat
jnp
dec
sub
loop
fistps
fdivrl
mov
pop
cltd
pusha
pop
sbb
sbb
push
mov
jle
pop
cmp
aaa
inc
push
fbstp
scas
aad
shl
outsl
adc
jo
xchg
fsubs
testb
shl
imul
mov
addr16
or
pop
mov
sti
push
rcrb
int
xor
adc
push
into
jmp
fldcw
int
mov
push
adc
mov
pop
and
push
shlb
sbbl
jns
shlb
pop
iret
in
idivb
sub
pop
jo
sub
shrl
push
xchg
mov
mov
rcll
insl
jns
or
ret
data16
inc
cltd
jecxz
scas
mov
inc
mov
dec
xor
daa
push
inc
and
notl
or
orb
subl
push
xchg
add
ds
add
aas
add
dec
aaa
pop
add
and
jno
sub
neg
mov
xchg
xchg
mov
into
pop
sbb
insl
jns
lcall
into
xchg
repz
jnp
adc
jg
xor
test
cmp
xlat
push
fwait
pop
fwait
out
fsubrl
xchg
outsl
mov
jge
inc
push
xchg
clc
sub
inc
fcomps
fs
lds
mov
push
imul
mov
test
jle
cmp
mov
mov
cmp
push
jg
fisubrs
mov
push
adc
popf
sbb
pop
cmp
push
cli
mov
and
inc
dec
insb
insl
mov
sub
pop
cli
or
filds
jnp
mov
dec
add
mov
pop
ror
aad
dec
mov
cld
repz
jg
in
sub
dec
insb
test
jno
and
mov
jge
mov
test
mov
das
ficoms
scas
mov
int3
btc
push
push
addl
jl
push
outsb
je
mov
es
sbb
test
xchg
jp
test
std
or
lds
push
sbbb
xchg
sub
lcall
push
stos
gs
xchg
xchg
sub
dec
push
push
into
fidivrl
das
or
xchg
mov
add
stos
repnz
int3
xchg
insl
dec
jo
icebp
dec
popf
lahf
add
dec
adc
paddw
fcomps
movsb
mov
rolb
je
outsl
jno
add
push
mov
rcrl
sbb
xchg
sub
int3
jno
sub
pop
mov
jle
xchg
jnp
pop
out
inc
dec
out
ds
lret
mov
sbb
imul
jb
mov
gs
faddl
pusha
or
pop
loop
xchg
rclb
std
jmp
in
cmp
mov
mov
int3
push
xor
or
push
out
pushf
insl
cmp
adc
insb
fwait
add
adc
stos
sbb
shl
pop
inc
xchg
mov
repnz
push
sbb
mull
adc
cld
add
mov
sbb
scas
loopne
jnp
scas
mov
sub
lahf
repz
jmp
dec
mov
add
adcl
or
pop
jge
cwtl
loop
icebp
jnp
test
and
nop
or
cmpb
or
cwtl
mov
push
pop
push
ret
dec
pop
pop
clc
mov
loope
in
dec
test
imul
and
fnstsw
gs
bound
pop
cli
repnz
or
test
cmp
sar
popa
jp
cmp
push
pusha
sub
outsl
or
in
subl
fdivrl
push
mov
pop
lea
out
fwait
addr16
mov
ss
dec
mov
lret
inc
push
push
mov
test
xchg
adc
mov
lahf
mov
idivl
lahf
xchg
lods
xor
sbb
mov
daa
in
fisubs
mov
ret
fisttpll
int3
frstor
lea
movsb
lods
cmc
lret
ret
mov
or
insl
adc
bound
add
insb
xor
outsb
mov
mov
push
outsl
mov
fdivrl
call
fwait
mov
fmul
push
jnp
repnz
sahf
add
xchg
lea
and
cmp
and
inc
pop
cmpsb
mov
adc
lea
sbb
or
mov
jp
adc
or
pop
mov
push
cld
mov
push
gs
add
or
std
movsl
in
pop
xor
call
lahf
cmp
mov
add
jb
orb
sbb
leave
pop
mov
mov
loopne
dec
push
sub
ljmp
xor
out
pushf
jb
int
pop
hlt
ret
fidivl
cmovnp
push
mov
rcll
shrl
mov
jns
xor
push
test
loop
dec
pop
adc
mov
les
inc
mov
pop
nop
push
mov
mov
and
cltd
shll
insb
cs
cmp
ss
jle
mov
ljmp
dec
pop
or
jae
in
xor
sub
jl
mov
cmp
jge
inc
jge
in
adc
gs
inc
and
mov
sub
daa
mov
and
cmp
add
jno
xchg
mov
push
test
dec
pop
mov
cmp
dec
addl
aam
mov
push
push
addb
push
fwait
cmp
jae
sbb
pop
dec
fdivrp
aad
inc
add
dec
dec
mov
lahf
jne
jbe
or
int
dec
int3
pop
dec
and
imul
cmp
cmp
addr16
orl
jnp
mov
jle
xchg
arpl
sti
in
jns
test
xchg
cld
sti
loope
ja
inc
adc
jmp
xor
cmp
in
jecxz
enter
jnp
mov
xchg
mov
lcall
scas
adc
mul
pop
sbb
test
repz
jns
clc
mov
in
test
fwait
sti
cmpsl
mov
and
pushf
sbb
inc
lahf
lods
mov
clc
fdivs
cmp
rcrl
cmc
xchg
int
sub
xor
iret
xor
shrb
cwtl
fisttps
mov
repnz
xchg
mov
pop
mov
mov
push
mov
sub
sbb
jae
hlt
pop
cli
imul
cmp
pop
cld
scas
subl
sbb
or
pop
xor
clc
mov
mov
call
sti
xchg
inc
xor
pop
push
or
pop
lcall
or
popl
or
out
mov
push
lahf
mov
mov
cmp
xchg
stos
jbe
add
pop
mov
dec
hlt
gs
mov
cmp
jmp
sub
mov
mov
xchg
aam
mov
mov
dec
and
or
xor
mov
pop
test
dec
sbb
arpl
and
out
imul
mov
cmp
cs
mov
jno
sti
stos
dec
cmpsl
push
rcl
ss
xchg
mov
cld
lock
xor
mov
jge
mov
mov
test
xlat
sti
jge
repnz
mov
cmpsb
pushf
shll
mov
arpl
push
xor
jne
adc
lods
nop
mov
hlt
sti
lds
outsb
mov
lds
rorl
lahf
mov
push
iret
dec
pop
push
out
mov
sbbl
or
jl
sub
jnp
in
mov
cmp
inc
push
and
iret
mov
pop
push
std
cs
cmpsl
xor
repz
out
push
mov
add
mov
push
mov
ret
jnp
jmp
dec
sbb
xchg
xor
ja
mov
xor
inc
ss
int
xchg
mov
sbb
fmuls
mov
cwtl
mov
dec
insl
push
sarb
sti
xchg
fsubl
xor
jecxz
insb
cld
insl
int
es
test
mov
dec
aam
lods
dec
dec
jb
sbb
jno
cmp
mov
or
fistpll
scas
cmpsl
adc
mov
and
movsl
sarb
adc
pop
shr
outsl
and
popf
adc
mov
jne
ss
pop
or
cmp
mov
sti
sub
mov
cmc
popa
popf
jecxz
mov
jecxz
cltd
mov
or
push
ss
jl
mov
sub
adc
das
mov
add
mov
stos
andb
cmc
stc
jne
js
push
cmp
pushf
sti
fistpl
cmp
jnp
in
subl
dec
iret
fs
call
push
mov
loopne
sub
add
or
and
fstpt
sub
movsb
mov
fmull
loopne
push
dec
pusha
mov
cmpsl
int
ds
sahf
fcomps
jno
xor
out
jnp
lcall
mov
sbb
repnz
rorb
jg
dec
sbb
imul
mov
mov
mov
dec
aam
dec
sbb
pushf
dec
and
test
and
stos
sbb
cmpsl
mov
js
inc
pop
mov
cli
sti
ret
sbb
imul
sti
jb
dec
cmp
cltd
dec
std
fdivr
lahf
pop
mov
mov
or
or
push
jl
jno
aam
fs
pusha
insb
in
lahf
push
dec
rclb
mov
jge
ljmp
jl
mov
outsb
fsubl
jl
fwait
mov
ret
pushf
mov
enter
int3
add
or
ret
or
in
inc
lods
popf
sbb
sti
xchg
jne
or
pop
test
jp
push
sti
dec
cmp
and
nop
adc
iret
xchg
das
aad
std
push
pop
xchg
dec
jge
mov
jg
mov
sbb
cmc
jge
test
imul
out
lds
xor
xlat
rcr
ret
push
jae
imul
mov
jo
cmp
mov
dec
cwtl
in
mov
cmp
add
setge
in
jb
xchg
movsb
cwtl
outsl
std
push
pop
int
push
cmp
fsts
pop
xchg
mov
adc
pop
dec
or
in
rcl
sbb
dec
pushf
outsb
or
sbb
add
imul
pop
lret
clc
mov
call
outsl
pusha
ret
push
pop
push
loop
imul
fwait
cmpsl
fcmovnbe
xchg
pop
cmp
lret
lret
sti
pop
insl
int
cmp
insb
loop
dec
or
dec
fcompl
test
sbb
jnp
dec
sbb
push
xlat
adc
ficoms
mov
adc
adc
aam
inc
inc
sti
sti
or
popa
mov
pop
push
aad
and
or
inc
cmp
loope
inc
in
pop
push
ret
and
les
test
andb
sub
sbb
rorb
jno
out
mov
jmp
cmc
fwait
sbb
and
shrl
aaa
mov
mov
repz
sub
push
sbb
in
popf
scas
sbb
or
cli
xor
xlat
mov
xchg
mov
xchg
scas
sub
inc
notl
mov
or
out
add
cli
push
mov
push
fdivs
xor
mov
cwtl
lcall
push
outsl
mov
pop
jmp
jbe
pusha
out
jl
stos
push
mov
sub
lahf
das
cmp
out
push
pop
inc
leave
jle
repnz
add
sub
test
sub
mov
mov
pop
and
mov
add
jns
push
fs
lds
imul
scas
loopne
rcl
push
push
dec
jnp
and
sub
adc
cld
sub
fwait
sub
ret
addr16
dec
and
lcall
pop
xor
and
leave
fcmovnu
aas
sub
push
cld
xchg
and
test
jnp
xor
push
mov
and
cmpsb
idivl
pusha
jge
out
pop
cmp
jl
xchg
pop
sti
mov
jmp
loop
add
int
sub
push
mov
inc
xor
rclb
jp
cmp
ja
dec
mov
negl
lahf
dec
push
movsl
jg
lods
xchg
or
inc
push
dec
mov
outsb
dec
xchg
repnz
loopne
leave
ja
or
jns
xchg
icebp
jnp
aas
js
jl
cmp
dec
mov
arpl
lahf
xchg
jnp
inc
inc
xor
rcll
into
dec
adcl
and
xor
fs
inc
icebp
and
lods
mov
minpd
bound
sti
int
xorb
mov
mov
mov
cltd
inc
lods
and
aaa
fxch
jne
mov
mov
cmpsb
or
test
rcrb
scas
stos
hlt
imul
jl
ret
enter
insl
push
cltd
cmpb
or
imul
push
idivb
outsb
xor
mov
and
movsb
lods
jecxz
sti
push
jl
movsb
fsubs
cmp
jl
xor
cmp
fdivrs
inc
movsl
into
xor
int
js
dec
sahf
ret
mul
popl
push
popl
cmp
sub
mov
and
sahf
orb
dec
out
push
sub
rclb
fwait
add
dec
add
sbbb
sahf
enter
notb
gs
loop
test
pusha
lcall
test
inc
pop
jo
test
cmpsl
jnp
scas
inc
xchg
std
push
addl
dec
stos
mov
notb
push
xchg
jne
and
jl
cmp
jg
fsubs
test
orl
ljmp
xchg
pop
es
and
push
fcom
lret
nop
dec
sbb
add
data16
mov
cld
stos
push
jl
ljmp
add
shr
cwtl
ret
push
std
aad
jl
xchg
pop
push
push
mov
sub
loop
or
cmp
insb
xchg
sbb
iret
jnp
subl
sub
xor
loope
mov
inc
xchg
test
fisttpll
jge
xchg
call
mov
jl
stc
pop
loopne
jnp
fldl
mov
cmpsb
jne
dec
fdivrs
cmp
mov
fwait
int
std
cmc
adc
or
orl
cmpsb
mov
out
scas
jnp
js
in
sti
xchg
enter
pop
pop
and
mov
subl
xchg
jl
adc
add
mov
jge
mov
int3
jnp
jne
shlb
or
push
cwtl
insb
popf
fisttpl
cmc
rolb
cld
xlat
and
out
rcll
movsl
mov
fcomip
or
mov
mov
mov
ds
or
xor
push
bound
xchg
je
shll
cmp
mov
test
inc
cwtl
dec
lret
or
pop
mov
and
scas
das
scas
hlt
dec
idiv
loopne
lcall
push
and
pop
xchg
mov
cld
add
jnp
ja
in
bsf
push
lock
cld
in
pop
jo
idiv
push
int3
std
mov
faddl
inc
dec
mov
pop
js
mov
pop
dec
sar
and
jp
xlat
dec
out
lods
jl
movsb
dec
cmp
push
lea
mov
mov
lea
fnstsw
mov
add
cwtl
inc
mov
adc
cmpsl
sub
jae
push
mov
mov
jmp
mov
cmp
or
push
xchg
sub
ror
mov
xchg
arpl
test
cmpl
jae
xchg
cmp
inc
mov
pop
in
fstps
mov
sti
sub
mov
ret
imull
push
mov
jmp
or
dec
adc
call
aas
mov
lahf
stc
jns
cwtl
decl
xor
lahf
rcll
mov
cwtl
sbb
int
pop
pusha
dec
lods
xchg
out
xor
inc
rcl
stos
sub
mov
lods
mov
lret
test
dec
dec
scas
inc
jge
sbb
test
clc
shrl
sub
inc
jle
fstpt
fcompl
adcl
cmp
fdivr
mov
xor
fisttpl
adc
loop
je
mov
imul
inc
ds
test
aas
rolb
sti
jle
inc
xchg
adc
pop
shrl
cmp
jl
scas
ljmp
or
out
aas
incb
shrl
inc
inc
mov
mov
lods
pop
mov
cld
insb
ret
push
pusha
insb
sub
lods
aas
pop
lods
nop
mov
sti
les
pop
and
jne
dec
fildl
lods
xchg
dec
xor
cmp
cmp
aad
push
dec
adc
cs
cmp
sbb
pop
stos
sub
dec
mov
test
insb
inc
movsb
pop
dec
iret
movsl
add
and
sbbb
leave
scas
dec
jbe
cmp
fcom
or
in
dec
dec
lods
das
jne
sbb
inc
mov
inc
xchg
imul
mov
rorb
mov
lea
dec
sahf
add
sahf
adc
mov
inc
fbld
or
mov
sbb
jne
in
loope
mov
cmp
mov
add
xchg
shr
dec
mov
add
xchg
cmp
test
lahf
and
or
mov
nop
mov
daa
psubq
aas
outsl
testb
cltd
lea
mov
push
push
xchg
and
into
xchg
shll
in
or
dec
cmp
movsl
cmpsl
out
or
loopne
add
fcmovnbe
add
fistpll
inc
push
mov
xchg
sbb
xchg
int3
js
inc
lods
out
outsb
xor
pop
mov
movsl
cmpsl
or
inc
shrb
lcall
lret
fdiv
popf
xor
dec
inc
into
aaa
jmp
scas
mov
loop
xchg
mov
dec
xchg
inc
fwait
rclb
xor
test
push
int3
dec
punpckldq
in
insl
pusha
in
jnp
pop
mov
jp
sbb
iret
sahf
int3
xchg
popf
sahf
sbb
popa
push
notl
mov
push
push
popf
fistps
cmp
ds
xor
test
stos
insb
adc
xchg
decb
mov
into
add
xor
int
jmp
or
mov
jp
cmp
out
adc
lds
lcall
test
ficoml
test
xchg
sub
test
lret
stos
dec
mov
lcall
push
pop
xchg
in
xchg
scas
test
lea
push
pop
dec
gs
iret
inc
jbe
ds
push
mov
cmpsb
sti
sub
je
xchg
testb
mov
testb
idivb
push
mov
clc
ljmp
std
bt
jnp
push
les
sub
pushf
popf
jge
inc
cmp
pop
jle
scas
push
mov
scas
ja
int
lock
lods
mov
or
cwtl
dec
pop
cld
loope
pop
jge
imul
adc
nop
dec
mov
mov
orl
jl
mov
outsl
mov
clc
or
mull
stos
xor
fadd
in
test
sbb
cmp
mov
lods
rcrl
arpl
insl
xor
adc
add
lods
sub
jb
xchg
sbb
or
jne
nop
or
mov
cmp
pusha
sbb
testl
dec
cltd
mov
inc
cmc
inc
cmp
mov
jmp
lods
mov
push
sti
jns
adc
pop
shrl
jbe
push
stc
mov
mov
dec
jg
mov
xor
pop
mov
jl
jl
pop
and
movsl
inc
loopne
xor
inc
push
inc
fnstenv
fstpt
sub
inc
sub
nop
imul
fs
in
adc
sti
add
bound
xor
cmp
lret
adc
leave
movb
imul
in
sti
mov
mov
aam
sub
in
pmaxsw
or
xor
dec
test
sti
scas
jnp
lret
lea
flds
mov
push
mov
jmp
jnp
jnp
mov
and
mov
push
ja
and
cmp
sahf
jnp
xor
mov
bound
push
hlt
or
mov
or
fcomip
ret
mov
jg
dec
mov
in
hlt
loope
test
sti
out
ss
outsl
pushf
jge
ret
mov
mov
mov
insb
push
sahf
enter
dec
push
adc
lcall
int
pop
iret
jne
pop
cmpb
outsb
inc
xorb
mov
mov
and
clc
mov
xchg
xchg
dec
dec
jl
repnz
adc
hlt
jno
in
jb
fbld
std
ret
inc
add
ja
enter
out
jmp
mov
loop
fdivrs
jge
fistpll
into
into
test
jle
xorl
push
and
inc
push
stc
cltd
movsb
push
or
mov
int3
rep
sub
and
mov
loope
dec
leave
mov
movsl
incl
lock
jns
pusha
or
imul
mov
popa
lods
fsub
pop
sbb
shl
out
xchg
pop
jnp
inc
jnp
ljmp
mov
fidivrl
cmpsb
data16
xchg
adc
xchg
sub
adc
xchg
xchg
out
cld
leave
sub
fisttpl
jno
insb
pusha
rolb
arpl
inc
pop
movsl
fisttpll
add
sub
push
xor
or
rolb
outsb
and
push
pop
and
add
bound
pop
dec
ret
mov
mov
push
ret
das
lahf
negl
int
call
lods
ret
lods
sub
pushf
int
mov
xchg
jmp
addl
cwtl
lods
mov
leave
cmp
mov
rol
and
jno
jge
nop
mov
cmp
test
test
jmp
sbb
mov
movsb
mov
and
dec
ja
call
xchg
stos
mov
push
mov
dec
fistps
or
dec
into
fsubp
dec
int
in
test
add
add
insl
cmp
out
pop
frstor
std
imul
das
inc
inc
push
sbb
jo
jecxz
hlt
fnstenv
lret
pushf
gs
add
and
aad
pushf
mov
aam
insb
push
int3
jmp
inc
sub
push
dec
fisttpll
sbb
test
jmp
mov
push
mov
jnp
xchg
fisubrs
shrb
adc
mov
mov
xchg
adc
ja
imul
sub
movsb
and
xchg
shrb
inc
push
pop
imul
jne
xchg
mov
or
push
pop
outsl
adc
xor
jnp
jo
dec
mov
mov
xor
push
dec
adc
mov
pop
mov
out
adc
and
cmp
movsl
leave
movsb
nop
stos
sarb
out
dec
sub
mov
push
and
xchg
aaa
ljmp
mov
xchg
or
call
lds
push
inc
sub
cmp
idiv
inc
xor
push
cld
cmp
or
or
adc
in
dec
jge
scas
cltd
xchg
mov
adc
jo
rcll
sti
jno
jmp
mov
pop
outsl
lret
mov
cltd
test
daa
sbb
and
mov
imul
shll
rcrl
lret
lcall
mov
sbb
daa
mov
mov
out
or
jno
fldenv
inc
clc
sti
in
push
aas
pop
mov
addr16
cmpsl
in
dec
dec
xchg
int
push
inc
fwait
xchg
loop
add
pop
adc
mov
xchg
nop
mov
sbb
jmp
lea
icebp
dec
hlt
jnp
push
xor
pop
shrb
xlat
mov
enter
test
out
mov
jecxz
gs
add
in
incl
mov
shlb
inc
hlt
xchg
jg
imul
adc
xchg
xlat
dec
adc
dec
aam
pushf
xchg
jge
popa
sbbl
mov
cmp
jne
popf
adc
dec
mov
mov
dec
push
lds
rolb
push
psrlq
cmc
stos
sahf
or
pop
pop
movsl
in
mov
je
ja
movsb
int
mov
mov
and
or
pop
ja
icebp
ds
jmp
and
popa
shl
in
out
cld
test
insb
inc
pusha
cmpl
lcall
pop
push
out
gs
iret
ret
mov
rorl
pop
icebp
dec
std
arpl
mov
shll
dec
ret
jo
or
dec
jl
out
xchg
sbb
or
inc
jl
sti
or
sbbl
mov
jns
imul
push
inc
jg
mov
add
or
cli
sub
out
jg
pop
lea
and
or
jnp
and
faddp
adc
jns
jl
ret
fsubl
pop
jnp
cmpsb
sbb
mov
jnp
loope
movsl
fistpl
pusha
or
sub
loope
dec
mov
fstpt
and
push
ds
xor
jge
pop
dec
or
push
test
push
hlt
adc
sbb
jb
push
adc
inc
ret
sub
pop
mov
push
and
jl
pusha
clc
cltd
cmp
inc
out
add
jecxz
pop
xor
mov
jge
push
pop
dec
mov
xchg
jo
call
aaa
inc
aas
sub
push
ret
mov
fstl
ja
xchg
dec
cmpsl
shll
sub
jmp
data16
aaa
or
jae
sub
out
inc
outsb
or
arpl
inc
add
or
adc
adc
xchg
jae
repnz
cwtl
popa
js
dec
cltd
mov
pop
dec
movmskps
push
mov
sub
mov
push
int
test
jnp
mov
adc
sbb
ret
jl
mov
es
jg
or
dec
dec
inc
js
insb
aaa
gs
inc
icebp
sub
and
mov
aas
dec
sub
pop
add
jecxz
mov
add
mov
jmp
popf
in
cmp
std
loope
das
lret
jmp
sahf
add
das
mov
sti
fidivs
mov
lret
test
sub
pop
jg
cmp
leave
je
mov
idivb
lock
xor
pop
idivl
test
stos
mov
xchg
int3
or
inc
dec
fwait
mov
xchg
fisubs
add
jecxz
pop
orb
fwait
add
out
sti
movsb
mov
add
pop
das
dec
fwait
add
cmp
xchg
mov
jnp
popf
std
xchg
sub
xchg
or
sub
mov
jmp
or
and
mov
jnp
push
int
inc
dec
or
dec
mov
inc
dec
lret
jnp
pusha
fsubrp
mov
inc
cmp
adc
sub
jle
sar
test
popl
or
stc
lret
into
and
cmpsb
divb
mov
data16
inc
in
aaa
mov
xor
sti
add
add
xchg
dec
mov
mov
xor
dec
test
inc
test
xorb
jp
lods
jecxz
mov
jmp
stos
push
in
int
iret
pop
dec
into
mov
mov
inc
test
jnp
xchg
jne
mov
loopne
jb
or
push
lea
push
dec
stos
xchg
lea
ss
lcall
movsl
fnstsw
push
popa
push
xor
jnp
push
push
cmpsb
or
das
in
das
xor
repz
insl
mov
cmp
and
ds
test
dec
fsts
pop
mov
fildl
pop
cwtl
mov
pop
scas
sbb
aad
jp
in
or
inc
sti
ja
add
insl
int
pushf
jecxz
mov
inc
pop
or
test
mov
push
frstor
out
jo
or
add
jo
mov
sbb
adc
insl
jg
push
into
cmp
inc
sub
push
dec
sbb
dec
push
aas
ja
ja
lods
jbe
aas
pop
or
add
ret
cmc
stos
and
pop
mov
or
gs
decl
test
int
or
cmp
aam
mov
mov
adc
movsl
outsb
pusha
repz
int
pop
mov
pop
mov
pop
stos
es
xor
fwait
sbb
pop
jge
push
imul
stos
test
or
dec
push
xchg
jl
and
push
hlt
out
es
add
lret
xchg
xchg
ret
imul
jns
ret
cld
inc
int
mov
ss
xchg
xchg
and
jae
loope
int3
loop
jnp
mov
xchg
into
sub
cld
sbb
je
mov
sarb
or
mov
dec
dec
cmpsl
push
scas
sub
push
jne
insb
imul
cmp
int3
shll
mov
enter
inc
or
cmp
cmpsb
jle
push
add
mov
movsb
or
inc
or
or
add
insl
pop
sub
mov
int
mov
test
test
cmpsl
and
imul
xor
pop
add
jnp
es
add
pop
call
xchg
pop
int3
cmp
les
cmp
ljmp
pop
ljmp
add
jge
shll
fwait
cmp
testb
ficompl
out
mov
jecxz
adc
and
sti
cmp
add
push
in
sti
stc
loop
mov
fisubl
xchg
xlat
inc
lds
mov
jmp
fdivl
pop
mov
dec
sti
sarb
push
ds
popa
or
nop
sub
sahf
in
cwtl
sti
icebp
out
add
cmp
fdivrs
pop
add
movl
sub
js
or
cmpl
pop
subl
xchg
clc
sti
insb
frndint
fsub
mov
in
and
outsl
add
push
xchg
inc
out
mov
jne
movsb
or
push
xchg
cmp
or
mov
stos
sti
fistps
test
sbb
lea
cmc
shl
cmpb
cwtl
insl
pop
iret
pop
jae
iret
or
popa
push
push
cld
and
pop
jne
mov
jmp
in
das
ja
lods
std
popf
cwtl
cmp
push
into
push
add
fwait
xchg
sub
ss
sub
scas
movlps
jle
mov
paddusb
pop
xor
pop
xor
or
aas
jae
xchg
inc
loopne
and
cmp
jnp
int
adc
mov
fwait
outsl
lahf
sti
xchg
mov
lcall
or
mov
jae
insb
sub
xchg
testl
cmp
nop
cmp
jp
shlb
pop
ror
call
cmp
mov
xor
or
in
ljmp
inc
and
jp
xchg
pusha
pop
mov
or
cwtl
push
out
push
adc
std
cmp
xor
sbb
stos
ss
ds
fisttpll
xchg
icebp
fcoms
pop
dec
pop
test
in
add
add
xor
das
sub
inc
push
mov
stos
in
cmp
or
xor
mov
sub
adc
jecxz
mov
jge
out
inc
xchg
and
roll
cmp
dec
dec
sbb
add
push
push
cli
fs
xor
mov
loop
sub
cld
mov
lock
lods
mov
jnp
xchg
imul
outsl
test
icebp
cmp
fmull
push
mov
adc
mov
test
inc
mov
iret
add
inc
test
mov
jne
cld
ret
popa
call
jecxz
fistpll
lea
xchg
rolb
cmp
es
jnp
addl
icebp
mov
inc
stc
jbe
jnp
aad
loopne
mov
sahf
xchg
aam
ja
pop
int
inc
cmp
insb
mov
add
rcl
in
sti
jnp
sbb
pop
cmp
add
jle
sbb
xchg
sti
jmp
sub
icebp
xor
mov
adc
and
dec
pop
movsl
fstpt
mov
out
cmp
xchg
sbb
adc
and
enter
push
in
mov
fimuls
sbb
hlt
pop
and
out
push
cmp
cs
inc
mov
pop
cmp
outsl
sti
insb
imul
mov
lock
xor
pop
sub
mov
mov
loope
lcall
or
fcmovu
mov
or
fstps
xchg
inc
int
addr16
jl
mov
mov
sti
movsl
lcall
inc
mov
sub
add
jge
sbb
out
cmp
push
rcrl
inc
xchg
or
loop
mov
xchg
out
cli
sub
or
mov
mov
and
add
leave
push
adc
or
loopne
or
cmp
jns
filds
ret
insl
fisttps
pop
jb
add
int
cld
push
mov
inc
cmp
inc
aad
sbb
push
inc
mov
dec
and
lea
cmc
cmp
cmp
pop
add
lcall
ss
dec
mov
inc
mov
pop
jnp
push
std
out
or
and
stos
xchg
insb
dec
xchg
lds
sbb
jbe
jnp
aad
sub
ss
cmp
mov
in
push
dec
jl
popa
and
in
and
jb
popw
jno
jl
add
loope
insl
sti
pop
mov
scas
mov
jg
add
rcl
mov
mov
adc
test
daa
pop
dec
sub
and
push
test
push
dec
pop
sub
insb
push
xchg
push
call
xchg
sahf
loope
pop
mov
ss
jnp
adc
inc
xchg
adc
or
jb
jnp
inc
adc
cmp
lahf
mov
in
sbb
imul
cld
or
push
jnp
inc
lea
xor
mov
in
addr16
sbb
xchg
pop
mov
cmp
jnp
push
lea
xchg
fnsave
insl
mov
js
push
cmp
es
and
int
and
adc
or
jnp
rcrb
subl
and
pop
jp
mov
push
lock
mov
and
js
mov
mov
xchg
xlat
push
add
ret
lret
rcrl
add
xlat
xchg
sti
sub
dec
sbb
or
lcall
psrlq
jo
xchg
fcmovnu
dec
mov
or
movsl
inc
or
cmp
outsb
nop
inc
pop
inc
pushf
cmp
fbld
outsb
mov
push
dec
xchg
inc
int
in
roll
sbb
cmp
jae
leave
and
or
ret
movsb
fwait
jbe
dec
mov
out
fs
outsb
idiv
mov
mov
aas
jge
jne
or
sbb
orb
sub
sub
jmp
ffreep
movsb
pushf
cmp
addl
out
xor
cmc
push
js
or
fisubs
aam
pop
jae
cld
or
mov
jnp
cmp
inc
jae
jo
mov
xchg
cmp
iret
jne
cmpsb
mov
mov
imul
jne
and
jle
mov
incb
lea
aas
mov
in
inc
jne
mov
gs
test
scas
sahf
ret
cmp
push
adc
ds
mov
iret
xor
rorb
mov
jns
adc
add
pop
jp
test
lock
imul
sub
jle
dec
scas
daa
xchg
ret
add
lret
bound
cwtl
inc
mov
lods
std
xchg
jo
scas
out
sbb
mov
dec
mov
mov
jge
gs
sti
mov
mov
repz
lea
pushf
repz
int
or
cmp
xchg
inc
mov
pop
popa
jne
stos
mov
fildl
mov
xlat
lea
dec
incl
jne
lea
push
xchg
fimull
ret
dec
sti
in
xchg
or
sub
mov
dec
mov
imulb
dec
mov
rorb
out
dec
sub
ud1
or
imul
pop
icebp
dec
imul
xchg
ljmp
pop
jp
insl
dec
ds
loopne
test
and
mov
lods
xchg
dec
cmpsl
jnp
lds
inc
das
pop
mov
mov
nop
pop
rorb
xlat
mov
sti
dec
sub
cmovg
mov
sub
loop
pop
dec
and
dec
lahf
mov
adc
jnp
push
cmc
add
add
cmpsl
in
rorl
push
les
or
cmp
loopne
idivb
jg
imul
mov
ss
mov
push
dec
scas
mov
mulb
fsubl
lds
dec
adc
mov
popa
inc
mov
dec
test
cmc
gs
pusha
mov
cmpsl
sub
inc
inc
addl
arpl
add
inc
jg
mov
cwtl
mov
cmp
pusha
cmpsb
fcoms
xor
lahf
and
les
inc
mov
or
mov
rcll
fnstcw
mov
push
jle
push
hlt
mov
mov
add
jle
pop
adc
add
pop
mov
mov
loope
jbe
fnstsw
sbb
stos
adc
int
jmp
mov
mov
lods
jnp
add
mov
pop
cs
adc
jle
sub
mov
les
daa
jns
je
xchg
int
pop
daa
dec
jnp
sahf
and
lret
rorl
xchg
fs
add
arpl
out
inc
insl
inc
mov
es
jmp
pop
dec
popf
mov
pop
int
add
sub
sub
testl
int
aas
jl
ret
mov
dec
dec
jl
in
mov
add
ja
xchg
lock
mov
or
dec
xor
xor
mov
push
repnz
pop
int
xchg
sbb
arpl
cmc
aaa
dec
outsb
cmp
fwait
dec
pop
sub
shrl
test
imul
cmp
xchg
jns
cmp
rclb
int
sbb
rclb
mov
int
es
popf
mov
dec
outsb
xor
cld
push
adcb
or
std
sub
push
cmp
cmp
ja
popf
adc
pop
sub
jno
pop
aam
cmp
in
test
pop
mov
ljmp
pushf
xchg
push
sahf
fadd
cmp
dec
lods
adc
adc
xor
xchg
inc
mov
addb
push
addr16
cmp
lea
rcl
orb
mov
in
outsl
cmp
xor
mov
mov
imul
adc
repz
aaa
sub
cmp
loop
int3
jne
xchg
xchg
ja
and
cld
nop
pop
int
or
mov
inc
stc
adc
lret
mov
arpl
push
int3
mov
repnz
pop
xchg
test
scas
jl
mov
dec
cmp
inc
xor
cmpsl
adc
jle
sti
std
popa
jns
jae
movsb
std
jnp
add
inc
shrb
jno
clc
sbb
lds
add
enter
lea
ficoms
add
mov
inc
jp
or
inc
ret
add
sti
sarl
push
lahf
aas
leave
scas
pop
sbbb
aad
mov
add
roll
push
inc
pop
es
mov
xor
cmp
pop
arpl
and
jmp
bound
xchg
adc
dec
into
fwait
sub
xor
push
adc
jbe
jl
sub
xlat
fstpt
mov
mov
xchg
adc
pop
mov
fiaddl
mov
hlt
mov
jnp
sub
or
stos
cmp
mov
mov
mov
push
mov
jbe
jle
popf
out
xchg
mov
mov
pop
int3
orl
mov
mov
mov
insb
lcall
nop
push
lock
cmpsl
push
mov
int3
repnz
push
les
adc
adc
adc
sbbl
and
mov
nop
push
jmp
or
outsl
movsl
scas
push
add
mov
cld
push
outsb
in
jle
adc
xor
cmp
loopne
stc
test
mov
dec
lods
prefetchwt1
cmpsb
enter
sub
jp
lcall
fnsave
daa
mov
dec
fstenv
lods
int
aas
fcoms
pushf
cmp
jbe
dec
adc
add
push
push
xor
inc
mov
sub
data16
cmp
add
cmp
out
into
test
sub
adc
dec
fdivrl
push
inc
fcomip
add
adc
mov
js
stc
fstpl
loopne
int
imul
push
int
ret
outsl
int
inc
cwtl
add
aaa
adc
insl
adcb
jmp
fistpll
sbb
loope
xchg
pop
les
sub
and
mov
nop
fistpl
ret
les
loop
and
pop
pusha
mov
dec
xchg
insl
xor
ret
or
mov
add
pop
lea
jecxz
cltd
jno
ja
sbb
ljmp
inc
xchg
std
cmc
or
cmpb
jns
xchg
jne
mov
mov
mov
shll
jl
fcoml
mov
or
jge
add
jnp
mov
popf
call
call
dec
xor
mov
sbb
std
or
aam
xchg
ret
je
dec
scas
jae
xchg
fstpt
out
mov
adc
daa
mov
pop
js
xlat
out
dec
sbb
int3
mov
sbb
data16
and
fistpl
sti
push
sub
icebp
dec
cmp
cmp
pusha
bound
jg
xchg
sbb
mov
xor
add
cmpsb
lods
into
sbb
mov
mov
sub
das
faddl
arpl
dec
and
inc
shll
fnstenv
mov
sub
mov
inc
jne
hlt
cmp
je
pop
fdivl
divl
and
sarl
hlt
xor
subb
push
call
ret
shrb
cmova
add
lea
out
ret
mov
cmp
dec
jns
pop
nop
jg
rorl
movsb
scas
lods
jno
js
pushf
stc
imul
add
call
push
subl
xor
rorl
or
pop
int3
js
roll
jl
ret
cmp
or
andl
mov
pop
pop
int
cmp
cmp
xchg
jecxz
imul
orb
lret
sbb
sbb
jnp
aaa
mov
sti
push
or
daa
outsb
add
sbb
stos
xchg
mov
jns
xor
or
sub
mov
lock
fwait
je
lods
adc
ret
xchg
loope
xchg
mov
icebp
lcall
cmpsb
inc
fldenv
sti
pop
sarl
hlt
add
xchg
into
jle
outsb
mov
sub
push
icebp
js
rorb
xchg
xchg
mov
mov
adc
ja
dec
leave
sbb
das
inc
mov
imul
dec
xchg
fdivs
push
or
mov
pop
fsubr
sti
pop
xchg
xchg
adc
fisttps
mov
test
mov
ljmp
xchg
pop
jmp
jne
imul
jno
dec
neg
mov
adc
arpl
or
sub
and
add
int
sbb
insl
cmp
dec
or
mov
ficomps
add
cmp
mov
cs
shl
jl
mov
cmpsl
cli
push
mov
sub
mov
insb
push
jp
xchg
js
lods
mov
pop
sbb
dec
jmp
lock
xor
or
iret
jl
mov
test
movb
sarl
cltd
xchg
into
out
cli
mov
xchg
jb
je
mov
scas
sbb
jne
or
into
add
push
jae
ret
jne
jae
mov
push
pop
pop
add
jns
lret
pushf
sbb
xor
ret
gs
sti
lret
dec
push
nop
dec
jg
or
adc
cmp
test
adc
push
mov
out
pop
xor
fdivrl
subl
and
push
out
jne
dec
cwtl
push
aaa
std
inc
and
or
rcll
jmp
xorb
xchg
jbe
pop
and
dec
xchg
insb
es
mov
xlat
pop
popa
jge
xchg
cmp
std
imul
mov
add
mov
cmp
mov
out
and
xchg
btc
jge
xor
movsl
imul
mov
mov
inc
push
mov
jecxz
pop
cmp
dec
movsb
or
repnz
imul
cmp
inc
stos
cmp
xchg
jg
lea
cmpsb
jae
add
outsb
pop
or
in
xor
pop
gs
cmc
pop
dec
lret
or
ret
jb
stos
mov
mov
cwtl
arpl
ret
add
int
jl
lcall
dec
out
lahf
test
jo
je
sub
pop
test
xorb
test
daa
push
or
jmp
jbe
inc
cmp
push
lods
lods
xchg
push
cmp
roll
dec
popa
jl
pushf
and
or
jl
loop
push
dec
movsl
jnp
stos
nop
adc
mulb
jl
pop
mov
or
cmp
mov
or
lds
jmp
mov
pop
rcr
jns
jne
add
mov
cmpsl
pop
dec
ss
cmp
sbbb
andl
iret
sbb
dec
aam
or
jb
sbb
mov
lods
sub
dec
jmp
pop
rorl
negl
out
aad
mov
das
mov
adc
mov
sub
cli
sbb
addb
insb
xchg
jbe
adc
insl
inc
addr16
mov
into
fwait
push
mov
push
cmp
xchg
lret
stos
test
subb
add
cld
mov
mov
adc
push
into
int3
push
stos
push
repnz
mov
add
push
in
xor
mov
pop
add
mov
cmp
sbb
mov
inc
jne
mov
arpl
push
xchg
fstpt
sbbb
lock
jp
ja
data16
sti
cmpsl
push
movsb
mov
dec
inc
sahf
push
fisubrs
jae
ds
mov
mov
mov
mov
out
fistpll
mov
add
aam
sbb
sub
push
sbb
ss
xchg
bound
das
sbb
dec
add
push
cmc
into
cld
add
aam
test
int
out
mov
insb
mov
or
inc
divb
cmp
dec
icebp
data16
cmp
stc
and
pop
hlt
shll
out
popl
mov
mov
mov
sbb
lods
pusha
mov
adc
add
jnp
mov
lods
cmp
cmp
xor
sub
dec
xchg
or
jmp
inc
mov
inc
add
add
mov
jbe
xchg
andb
dec
test
jnp
push
push
or
mov
outsl
inc
xchg
adc
stos
sbb
pop
repnz
lahf
cwtl
and
jg
rorb
scas
out
lods
and
fisubs
int
push
leave
mov
xchg
nop
mov
mov
sub
loopne
add
adc
data16
sub
adc
cmp
adc
mov
mov
jo
arpl
cmp
out
fwait
int
or
mov
jae
pop
lcall
in
sti
andl
pop
mov
test
and
jo
into
inc
addb
mov
call
mov
es
rsm
cs
das
adc
mov
sbb
adc
or
jmp
jge
cmp
mov
mov
sbbl
fs
popf
jmp
dec
fdecstp
hlt
mov
adc
cwtl
sti
aam
lcall
pop
xor
jae
jmp
inc
mov
mov
inc
out
xchg
xchg
cmp
push
pop
push
int
or
dec
cmp
inc
sbb
mov
dec
jnp
aaa
std
sti
dec
mov
jge
add
test
sbb
sbb
push
dec
leave
stos
xchg
xchg
ljmp
mov
mov
out
sbb
aaa
and
jns
xchg
fcoml
js
mov
jnp
mov
es
dec
jmp
mov
pop
cmc
inc
aaa
xor
pop
or
pop
dec
testb
inc
sbb
insb
xor
ds
int3
inc
inc
aas
adc
mov
cmovae
std
jne
sbb
ds
scas
adc
xchg
cltd
aas
xchg
int3
add
fidivrl
pop
loope
or
lahf
iret
mov
gs
sub
jmp
out
fwait
jnp
adc
pcmpgtb
das
arpl
or
push
mov
movsl
jnp
aad
sarl
loopne
add
sahf
xchg
pop
jmp
inc
decb
push
scas
popf
jge
mov
xorl
test
mov
mov
subl
ret
cmp
pop
mov
shr
in
push
lea
sbb
cmp
push
push
ficoms
in
bound
sahf
jnp
enter
inc
and
daa
xchg
mov
push
and
repnz
imul
inc
jg
sti
jmp
leave
cmpb
pop
and
mov
sub
xchg
cmp
pop
imul
or
incl
jb
jecxz
fwait
jl
push
call
js
hlt
add
imul
test
mov
xchg
jnp
jecxz
mov
enter
outsl
bound
or
out
push
dec
xlat
fwait
fwait
rorl
push
cmovo
in
mov
dec
sub
cmp
rorb
sub
aas
mov
and
dec
xor
out
int3
mov
dec
push
push
mov
sbb
call
push
es
mov
mov
fcoms
mov
lret
adcl
out
mov
sub
sti
mov
cld
add
add
scas
lea
sub
or
xor
dec
shrb
adc
loope
mov
xlat
call
sub
movsl
shl
andb
fmul
fisttps
inc
adc
outsl
popa
add
repnz
js
addr16
ds
xchg
cmc
loope
sbb
mov
jns
inc
cmp
mov
xchg
mov
in
frstor
loopne
rcll
mov
in
jecxz
test
push
fadds
lret
jnp
mov
push
add
mov
lock
xor
jmp
push
pop
int
cmp
enter
push
shl
push
rclb
lock
dec
movsl
cmp
cmp
mov
mov
into
and
fisttpll
loopne
outsl
jge
lret
mov
push
xchg
aas
pop
es
lods
mov
scas
ja
xchg
mov
mov
mov
or
pop
cmp
nop
dec
pop
daa
test
fcoml
jl
aad
idivb
fldl
jecxz
fildll
xor
out
xchg
or
mov
sub
decl
repz
jmp
movsb
icebp
push
int
inc
scas
ret
push
cmp
pop
mov
pusha
aam
xchg
lcall
fidivs
sbb
pop
dec
xor
inc
fsubrs
push
mov
jno
sti
cmp
mov
cmp
inc
ret
mov
movhlps
into
mov
add
sub
dec
pop
pop
bnd
xchg
or
sbb
or
scas
rcll
xlat
sbbl
int
add
jge
mov
mov
lea
mov
std
or
jmp
popf
leave
insl
fwait
push
cmp
sub
mov
rcr
adc
in
outsl
pop
cld
dec
xchg
stos
int
or
xchg
dec
inc
or
add
dec
inc
cmp
testl
sbb
les
pop
push
xor
inc
push
lea
sbb
int
sbb
leave
stos
mov
mov
adc
mov
sub
inc
or
je
mov
push
ds
inc
cmpsl
jmp
or
push
out
inc
test
mov
repz
or
jp
test
cmp
pop
push
push
scas
cmp
or
add
dec
or
outsb
or
dec
pop
push
mov
fdivrp
ret
cmp
loopne
mov
mov
mov
call
pop
test
lret
outsb
add
sbb
loop
mov
popa
aam
movsl
es
sti
movsb
lods
dec
sbb
out
lcall
jmp
mov
and
inc
movsl
push
jno
jno
fcmove
arpl
push
fmul
out
or
movsb
int
lahf
mov
sahf
or
jl
cmpsl
test
mov
sub
jmp
or
mov
lahf
addb
sbb
ja
int
sbb
mov
mov
add
out
sti
shlb
mov
in
cmpsl
addr16
gs
cmp
mov
sub
data16
pop
cmp
jle
fmull
adc
pop
xchg
add
insl
xchg
in
ficoms
pop
sub
gs
rclb
add
dec
jns
jnp
xor
sbb
js
jmp
add
jmp
lret
movsb
or
inc
xor
adc
outsb
xchg
mov
mov
fbstp
cmp
das
pop
leave
dec
aas
ljmp
dec
dec
pop
jge
pinsrw
sub
inc
mov
sbb
int3
push
les
cmp
das
mov
ret
in
push
fldl
mov
xchg
push
dec
fwait
mov
sub
mov
cmc
sti
out
adc
add
mov
mov
dec
dec
cmp
stc
jp
cwtl
or
dec
loopne
call
add
mov
es
stos
or
xchg
dec
outsl
hlt
imul
mov
cmp
fidivs
sbb
shl
sub
test
popf
imul
mov
sbb
xor
cmp
mov
pop
sahf
js
sub
outsl
cltd
inc
mov
cld
jg
loope
mov
rcll
pop
loopne
jg
dec
xor
fwait
dec
cmpsl
sti
loope
cmp
xor
bswap
sub
dec
fimuls
movsb
push
or
jle
adc
and
jnp
in
nop
sbb
mov
popa
lods
and
mov
xchg
ret
in
adc
sti
xor
popl
push
movsl
push
pusha
dec
neg
xchg
dec
xchg
rcr
adc
mov
loopne
mov
ret
push
aam
ss
xor
push
cltd
mov
insb
add
fbstp
adc
loop
outsl
jnp
cld
jno
int
cmovo
cmp
or
inc
std
ret
sub
xchg
test
jae
dec
cs
cmp
or
and
inc
pop
out
jg
adc
cld
shr
enter
repnz
pop
out
dec
xchg
mov
js
bsf
test
sar
je
jecxz
push
ds
es
lock
jns
mov
fwait
dec
mov
loopne
cmp
dec
pop
pop
cmp
jno
lods
sbb
fldl
cmp
int3
fdivl
push
pushf
imul
shll
daa
das
aam
sub
shll
in
push
shrb
test
pop
std
sub
sbb
mov
cmpsb
and
mov
sub
sti
dec
sub
jge
xor
add
sub
or
mov
jmp
ret
push
add
fbld
dec
aad
sti
pop
xchg
decb
repz
inc
roll
xor
or
xor
pop
imul
cmp
adc
ret
xchg
dec
popf
aam
inc
cld
pop
lods
mov
xchg
push
inc
outsl
or
hlt
mov
aaa
mov
fwait
pop
push
iret
push
mov
test
je
or
in
lods
mov
aam
fcomip
int3
ret
jnp
ror
or
psrlq
js
aaa
popf
int
cmp
push
notl
icebp
sub
mov
xchg
dec
jl
xor
mov
imul
dec
pop
out
dec
cmp
and
lods
jg
sbb
int3
out
jl
frstor
sbb
mov
mov
add
jecxz
pop
dec
push
add
cmp
rcrl
push
jge
mov
jo
pop
test
jecxz
mov
xchg
inc
push
arpl
push
nop
jnp
xor
push
mov
loop
or
jnp
cli
mov
mov
mov
add
cltd
loop
cld
insb
or
sub
mov
or
aaa
mov
aaa
push
ffree
xlat
dec
sti
inc
pop
cmc
daa
scas
jp
pop
add
mov
inc
es
fst
int3
clc
mov
mov
fidivrl
ret
and
adc
inc
sti
sub
sub
cmp
jne
push
dec
data16
mov
and
sub
fiadds
pusha
int
adc
cmpsb
inc
mov
xor
xchg
xchg
int
jl
incl
push
push
push
mov
cmp
cs
cmp
xor
mov
jecxz
mov
fldl
xchg
jae
cli
test
push
or
adcl
pop
imul
rclb
out
mov
pop
negb
insl
adc
unpcklps
rcrb
mov
inc
push
xor
sub
seta
enter
bound
leave
push
int3
cmp
xorl
and
xchg
xchg
rcl
push
das
sbb
mov
iret
xor
lahf
out
sbb
aam
mov
cmc
fnstenv
icebp
mov
mov
outsl
lea
mov
shll
test
jno
mov
sbbb
aam
cli
test
cltd
or
and
out
dec
jnp
stos
inc
cmp
or
mov
call
mov
dec
rcll
sub
and
in
dec
mov
mov
inc
adc
popa
cmpsb
movsl
mov
lret
inc
mov
and
fdivl
mulb
push
push
hlt
sub
icebp
or
cmp
pusha
jle
movsl
das
cmpsb
scas
and
std
or
enter
mov
ds
cmc
sti
data16
mov
jns
ror
int
jge
dec
xchg
dec
mov
or
xchg
add
sub
sub
sbb
xchg
test
movsb
mov
add
or
pop
sub
hlt
imul
jnp
es
cmp
push
mov
mov
js
or
lds
das
fsubrl
push
push
push
push
cwtl
ljmp
dec
mov
ret
adc
ret
mov
jnp
in
je
sub
push
scas
push
lods
push
mov
adc
push
inc
lret
aam
and
rcrl
adc
push
cltd
mov
pushl
insl
mov
add
rorb
jbe
and
mov
test
mov
sbb
sbb
sbb
push
movsl
push
and
sahf
dec
inc
cmpb
mov
ja
call
pop
mov
loope
das
adc
push
inc
fs
das
fistl
mov
mov
aas
jne
xor
shll
fadd
adc
mov
jecxz
inc
repnz
cmp
add
push
adc
pop
adc
inc
dec
push
cmp
xchg
jecxz
stos
mov
dec
add
push
rcll
mov
jnp
cmp
les
xor
mov
les
iret
lock
movb
or
stos
pop
stos
xchg
sbb
inc
jge
dec
arpl
xchg
repz
or
xchg
pop
ret
cmp
lds
or
addr16
test
fs
stos
cmp
scas
pop
sub
mov
cwtl
sti
call
cmp
add
jb
cmc
lret
aaa
fisttps
pop
sbb
lods
pop
cmp
nop
push
mov
sahf
push
add
dec
dec
testl
lods
xchg
pop
mov
or
imul
cmp
and
pop
dec
mov
mov
fistpl
xchg
and
inc
into
jns
push
sub
sbb
push
clc
cmp
adc
xor
add
push
adc
sbb
into
cmp
push
in
pop
insb
mov
push
popf
xor
push
outsb
add
jecxz
cmpsl
mov
int3
mov
icebp
leave
lods
inc
adc
test
jb
or
fstpt
paddw
cld
jle
inc
stos
mov
mov
push
xchg
adc
call
fildll
mov
gs
sub
in
jnp,pn
cltd
sub
sbb
jne
outsb
mov
fisttpll
mov
pop
mov
int
mov
adc
pop
add
dec
mov
add
adc
insl
pop
or
jnp
cltd
and
mov
hlt
lods
mov
push
mov
sub
mov
or
das
scas
xchg
cmp
ss
fisubrl
iret
cmp
sub
adc
sub
add
dec
mov
repz
mov
inc
aad
iret
scas
mov
push
scas
arpl
push
adc
gs
popf
mov
cmp
push
es
int
dec
push
mov
jg
ret
mov
inc
int
pusha
xorb
cmp
mov
mov
addr16
in
jge
cmp
adc
cmpsl
stc
je
rolb
mov
add
clc
movups
insl
mov
push
mov
cmp
lahf
rcr
and
push
inc
jle
ljmp
hlt
jnp
std
inc
and
inc
or
and
cmp
pop
or
pop
sbb
imul
dec
cmpl
js
cltd
out
cmp
add
mov
inc
roll
fwait
dec
fnstenv
lods
cwtl
mov
and
mov
push
jp
test
sub
xor
jno
dec
lahf
ljmp
insb
repz
dec
in
pop
dec
xlat
arpl
mov
sub
loopne
rcr
gs
and
adc
push
lods
lcall
orb
dec
std
lahf
out
into
test
inc
xchg
es
xchg
imul
mov
sahf
mov
insl
shl
cmpsl
inc
mov
dec
mov
pop
cmp
shll
lods
into
es
mov
cmp
clc
lahf
and
shlb
or
and
enter
bound
jnp
data16
in
push
mov
imul
pop
mov
jp
jle
sub
adc
std
movsb
imul
out
les
mov
xor
dec
pop
je
loope
lods
outsb
jmp
sbb
pop
adc
push
sub
xlat
aam
stc
into
dec
jle
jle
inc
mov
jns
mov
sarl
pop
lret
fs
insl
cmp
adc
in
push
dec
mov
add
mov
sbbb
pushf
mov
ret
mov
lcall
inc
add
bound
dec
in
or
jp
or
jg
xchg
jne
mov
pop
into
jno
sub
subb
ss
pop
nop
xor
pop
test
dec
pop
xchg
dec
inc
addr16
xchg
inc
lahf
jnp
mov
dec
pop
push
leave
scas
dec
xor
pop
loop
or
imul
mov
cmp
sub
stos
sbb
ds
in
or
ss
test
cmp
mov
nop
dec
dec
and
xchg
cwtl
enter
add
inc
sbb
stos
sbb
dec
test
cmp
je
int
add
sbb
jecxz
into
lods
imul
add
mov
inc
xchg
xlat
jmp
arpl
mov
lods
sub
scas
mov
int
xor
pop
or
out
mov
jnp
and
dec
fwait
negb
pop
test
mov
cmp
dec
xchg
add
pop
ret
pop
pop
jmp
or
jne
cmp
pop
movsl
inc
sbb
sbb
mov
imul
fwait
jle
pop
insb
pop
inc
iret
mov
cmp
sbb
movsl
cmp
push
repnz
pcmpgtw
adc
outsb
lret
es
bound
mov
in
jecxz
in
adc
inc
dec
lahf
in
sbb
add
mov
and
cmp
out
mov
dec
aam
push
icebp
mov
fwait
cmp
dec
mov
out
mov
mov
xchg
in
mov
pop
lret
adc
inc
test
repnz
push
dec
incl
mov
test
leave
and
push
and
mov
rorl
aad
leave
ljmp
aaa
ror
std
mov
cmp
sarl
mov
sbb
mov
popa
sbb
ds
outsl
iret
cmp
xchg
adc
lret
aaa
inc
mov
fdiv
nop
dec
ss
dec
pop
mov
mulb
mov
inc
ja
xchg
hlt
js
sub
lea
and
add
dec
sbb
dec
pop
mov
push
jb
dec
fdivr
int3
mov
xorb
test
cmpsl
dec
aaa
adc
xchg
sub
aam
sti
jnp
movsb
pop
mov
add
add
es
inc
push
inc
gs
add
dec
fstpt
sbb
cmp
aam
fisttpll
negb
les
js
test
sti
enterw
cli
lods
mov
xchg
popf
xor
orb
icebp
ds
out
or
add
xlat
xlat
in
sti
fiadds
fsubrl
mov
inc
pop
in
mov
cmp
hlt
adc
push
jnp
mov
pop
mov
jbe
and
dec
cmp
lcall
imul
sbb
sti
cli
xchg
dec
mov
push
cmp
int3
icebp
cltd
data16
or
mov
jne
pusha
mov
xchg
xchg
pushf
inc
cmp
adc
movsl
and
pushf
mov
fwait
push
xor
xlat
cmp
movsb
js
push
adc
lea
lea
xchg
lahf
push
dec
xchg
xor
iret
adc
pop
mov
sbb
rol
or
lahf
mov
adc
out
sti
sbb
dec
mov
adc
mov
and
dec
sub
pop
dec
pop
xchg
or
outsl
add
ljmp
cmp
cld
xchg
push
lds
cmp
out
cmc
jnp
lds
das
adc
fwait
aad
dec
rcrl
mov
ss
inc
cs
dec
mov
ret
dec
std
jle
mov
or
inc
outsb
leave
push
pop
hlt
push
out
pop
pop
dec
jmp
mov
and
add
imul
imul
push
or
push
in
mov
ja
push
lods
add
adc
dec
data16
cmp
std
xchg
out
jecxz
rcrl
or
repz
repz
adc
inc
or
push
mov
arpl
jo
push
in
aaa
dec
cmpb
cltd
stos
int3
jae
pop
mov
sub
jnp
int3
jp
lods
sbb
and
sbbb
ficompl
ss
int
push
repnz
mov
jge
xlat
inc
sbbl
or
lea
mov
xor
push
xchg
mov
xchg
or
mov
jbe
lods
int
jle
mov
xchg
push
inc
xchg
ss
sbb
cmpsb
les
sarb
xchg
jns
pop
sbb
js
in
jg
add
mov
ja
sbb
fldcw
pop
std
clc
lcall
hlt
inc
sub
sbb
push
cmc
xchg
and
jl
cltd
cmp
mov
fwait
or
sbb
jnp
push
inc
inc
rol
lea
push
shll
cmp
ret
add
adc
xchg
sub
scas
repz
dec
adc
jl
test
sti
or
fdivs
out
mov
push
addl
sbb
mov
cmpl
imul
dec
dec
adc
idivl
into
movsb
sub
xor
xchg
jnp
xchg
add
test
shr
lods
lcall
fsubrl
pop
stos
test
lea
or
popa
jno
cwtl
xor
push
insl
and
add
mov
jg
je
insl
sbb
insl
cltd
jl
xorl
repz
lods
sub
xor
nop
inc
cmpsb
mov
call
xor
xchg
stos
jnp
icebp
xchg
xchg
xor
inc
roll
scas
mov
loopne
or
sti
in
sti
ret
test
dec
sti
mov
adc
adc
cmp
stos
add
in
mulb
mov
cmpsb
ret
bound
sub
pop
lods
movsl
inc
imul
jnp
fbld
cmp
dec
mov
sbb
and
imul
mov
jne
loopne
mov
inc
scas
xor
adc
xor
xchg
cwtl
mov
btc
int3
xchg
sub
jl
int
andb
push
cmp
lret
mov
les
divl
mov
ficoml
sti
adc
inc
decl
xchg
imul
jae
inc
push
pmaxsw
xlat
lret
push
mov
push
in
gs
sbb
shl
or
les
xor
dec
rcrb
pop
fwait
int3
xor
push
inc
inc
rcl
je
push
sub
xchg
es
mov
xchg
cmp
cli
pop
xchg
call
std
popl
leave
cmp
xor
mov
push
sub
or
bound
into
in
es
pcmpgtd
mov
dec
sub
cmpsl
xchg
call
outsl
ret
stos
lock
aaa
shl
sti
sub
mov
sti
dec
ds
je
es
mov
dec
jg
mov
cltd
mov
adc
jns
dec
push
push
fs
push
add
add
or
jbe
insb
pop
std
test
std
jne
fcoml
into
out
cmp
cs
push
xchg
pop
dec
xchg
mov
mov
pop
push
inc
rol
xchg
push
inc
or
inc
in
fistpl
stc
sub
xchg
mov
out
je
xchg
xlat
inc
outsl
mov
cmp
fdivs
cmpb
xchg
daa
ds
xor
movsb
pop
les
or
repnz
stos
add
in
sub
xchg
popf
inc
mov
jle
stos
movsl
int
cmp
xor
aas
cmp
inc
scas
dec
mov
arpl
lahf
jg
xlat
arpl
in
roll
sub
xchg
cmc
and
lods
add
cltd
stc
ljmp
xor
fimuls
insl
xchg
adc
nop
xchg
lcall
fiaddl
scas
cld
repnz
pop
mov
push
mov
bound
push
std
push
imul
push
jno
fists
mov
and
cld
jo
jnp
pop
xor
mov
insl
dec
adc
push
push
icebp
add
jne
push
push
lea
ret
cmp
js
push
shll
cmp
xchg
ret
cmp
dec
jnp
dec
out
jo
mov
add
xchg
mov
int
fwait
xchg
in
ret
addr16
mov
cmpsl
repz
nop
andb
ret
pop
mull
sub
ret
test
pop
xor
jae
mov
sti
or
inc
stos
cmp
orl
icebp
mov
jnp
mov
xchg
inc
gs
bound
cmp
movsb
ja
cld
push
rclb
out
lahf
or
dec
mov
dec
nop
rclb
lea
xchg
sub
fistpl
jecxz
into
pop
mov
sahf
dec
push
xchg
xchg
loop
or
push
jle
dec
fldcw
into
dec
adc
lods
xchg
push
push
sbb
fwait
lcall
sub
rcr
fistl
decb
sbb
in
cs
gs
mov
inc
sbb
or
mov
cmp
subl
mov
xor
jbe
jnp
pop
or
shlb
test
and
push
lcall
inc
pcmpeqd
mov
je
push
pop
sarl
out
xor
cmc
shrb
mov
cmp
lret
insl
subl
add
jae
std
cwtl
jg
xchg
ds
sbb
dec
xchg
sub
pushl
lea
mov
paddw
cmp
mov
icebp
das
push
adc
jg
lea
lret
adcl
dec
adc
fwait
arpl
adc
aam
and
mov
cmp
rclb
repz
imul
and
mov
cld
lds
push
cmp
fdivrp
out
xorb
jno
testb
adc
xchg
adc
push
add
jl
pop
xchg
jae
adc
adc
cmp
xchg
lret
lods
mov
xor
cmp
fsubl
out
outsl
or
inc
push
int
aam
push
dec
xor
fildll
add
mov
xlat
and
dec
andl
ror
repz
loopne
dec
cld
xchg
xchg
shll
jae
loop
sub
pop
push
hlt
cmp
incb
jb
pop
mov
inc
inc
inc
into
sub
pop
ds
and
scas
mov
cmpsl
test
xor
mov
in
pop
pushf
cmp
testl
xchg
stos
sti
cmp
jmp
and
mov
push
and
xchg
mov
sbb
push
mov
out
call
int
pop
pop
push
cmp
mov
xchg
shr
loope
cli
std
xchg
cmc
mov
jmp
leave
ja
pmovmskb
or
in
sbb
into
jb
cmp
sub
je
sbb
ds
fldl
ja
mov
test
cmp
mov
mov
xor
ret
hlt
and
sbb
sbb
in
lret
sbb
scas
mull
xor
rcr
push
dec
mov
push
sbb
jmp
leave
jnp
dec
lcall
sub
cld
mov
dec
mov
int
jae
imul
jmp
and
jnp
jmp
mov
add
push
rcl
add
popf
pop
cld
scas
push
mov
dec
dec
or
dec
or
fwait
sbb
std
jnp
or
into
jmp
iret
negb
inc
push
xor
xchg
ret
dec
ds
outsl
mov
sti
sbbb
xchg
push
movsb
add
aad
loopne
xchg
mov
rcrb
in
mov
fldl
nop
jle
xor
adc
out
inc
cmp
adc
push
iret
imul
mov
ljmp
ss
int3
and
idivb
lcall
mov
pop
je
loope
cli
pop
push
aad
jmp
pop
sbb
shll
leave
mov
xchg
popf
or
dec
push
cmpsl
sti
outsw
cltd
cwtl
cmp
inc
ss
insb
in
and
push
jge
or
and
mov
pop
scas
pop
jmp
cltd
jnp
inc
popf
xor
fwait
les
inc
test
add
add
addr16
sbb
inc
das
shrl
jecxz
mul
loopne
mov
xchg
jecxz
in
fnstenv
lret
mov
sbb
mov
mov
push
dec
lahf
push
push
lods
jnp
shl
push
mov
mov
mov
movsl
jge
mov
das
hlt
lcall
xchg
or
push
std
fcoml
cmc
mov
and
pop
pop
mull
mov
add
push
jl
inc
xorl
popf
or
and
sbb
in
mov
pushf
cli
cli
dec
mov
pop
stos
xchg
lcall
adc
xor
mov
in
or
jg
jo
mov
inc
in
rorl
test
or
mov
out
push
lcall
jg
jns
pop
mov
cmp
inc
sarl
pop
mov
sti
sarb
push
cmp
mov
mov
adc
push
jge
inc
shr
cmpsb
push
jg
in
icebp
push
xor
mov
jnp
jae
jp
sub
pusha
fs
lea
repnz
xchg
call
repnz
stc
arpl
inc
stc
pusha
pop
jb
push
daa
lock
jae
pop
cmovb
adc
sbb
jl
mov
adc
pop
cmp
ret
int
lods
or
add
lret
int
or
jae
cmp
inc
mov
push
mov
sbb
mov
ficoms
fiadds
inc
xor
dec
sbb
fimuls
mov
push
dec
pushf
sbb
jecxz
xchg
into
mov
mov
test
fcom
sti
mov
cmp
mov
pop
insb
jle
and
cmc
popa
mov
mov
stos
jne
stos
lret
lds
adc
xor
aas
je
inc
cmp
mov
pushf
jle
dec
or
push
sub
notl
shll
add
adc
rcll
enter
outsb
xchg
push
push
out
pop
inc
add
xor
cmpl
inc
fnstenv
push
lds
mov
lret
fbld
aad
shl
xchg
cmp
or
inc
notl
push
jns
int
sbb
fistps
mov
fwait
lcall
test
sti
sahf
and
push
je
sbb
adc
push
loop
mov
sbb
pushf
adc
je
shl
repz
sbb
jmp
pusha
pop
addr16
sti
adc
cmp
sbb
psubq
dec
jmp
mov
xchg
pop
dec
adc
push
or
cwtl
sub
xchg
mov
cmpl
or
jnp
mov
dec
mov
jg
cltd
pop
arpl
sub
out
lcall
dec
dec
in
das
pop
ja
sarb
cld
lcall
xchg
jge
xor
fildll
or
in
xchg
pop
xchg
pop
mov
xchg
sbb
xorl
sub
mov
mov
cmp
arpl
cld
in
xchg
adc
and
lock
pushf
fwait
insl
mov
mov
dec
add
push
inc
push
fs
dec
jecxz
or
movsl
sbb
push
lahf
ss
xor
mov
sbb
ljmp
les
sbbl
test
stos
inc
inc
add
out
cmp
leave
jle
loopne
jo
sbb
les
std
inc
outsb
jo
jnp
add
jle
ja
stos
mov
mov
outsb
lret
push
iret
push
jnp
sub
cmp
pop
jle
pop
stc
inc
pop
rcll
jnp
adc
inc
negl
notb
push
out
popl
mov
pop
cwtl
pop
and
xor
aad
add
adc
out
sbb
cltd
xchg
xchg
mov
testb
push
lods
jmp
sti
lea
stos
ffreep
mov
pop
faddl
rclb
or
adc
push
xchg
push
pushf
repnz
sbb
cmp
jecxz
inc
add
mov
mov
jl
lods
lock
xor
and
arpl
daa
xchg
stos
cld
mov
sbb
sti
cmpsb
push
cmp
cmp
mov
aas
aaa
dec
mov
dec
mov
or
fwait
rcrl
stos
cmp
outsl
imul
xor
ret
sub
js
leave
stos
test
and
scas
jnp
jl
push
leave
sub
sahf
sub
into
testl
loop
cwtl
scas
into
or
dec
popf
add
shll
mov
mov
in
bsf
divps
out
repz
add
push
dec
mov
adc
push
sub
movsl
jmp
mov
pop
fwait
pop
adc
sub
icebp
push
pop
lds
inc
cmp
rcrb
jle
mov
daa
mov
mov
mov
cmp
mov
add
dec
mov
into
call
les
fiaddl
popf
xchg
lods
push
ja
cmc
fwait
mov
orl
iret
add
adc
jae
mov
push
push
adcl
mov
mov
mov
pop
mov
movsl
mov
mov
inc
stc
sbb
pop
aad
fcomps
mov
jnp
aas
mov
mov
cmp
xor
add
ljmp
add
mov
jne
icebp
test
sub
jnp
add
lds
fwait
pop
sbb
mov
jnp
sub
inc
add
dec
mov
cli
mov
cmp
sub
movsb
jg
cmp
and
pop
pop
fisttpl
pop
cld
flds
testb
xchg
imul
or
cmc
dec
aaa
daa
lock
mov
pop
xchg
cmp
sbb
pushf
sub
sub
scas
inc
fistl
or
inc
push
push
mov
jnp
inc
mov
lret
in
inc
mov
mov
out
mov
push
pop
shlb
jns
and
push
jno
mov
cmpsl
mov
outsl
xchg
sti
lods
cmc
adc
add
fsts
cmp
jae
hlt
sti
jo
repnz
fnstcw
xchg
xchg
sti
mov
inc
jl
outsb
mov
and
in
push
mov
inc
xorb
adc
test
lods
xor
pop
jp
rolb
out
inc
out
sti
push
mov
mov
and
sarl
xchg
mov
dec
cmc
out
test
cmp
adc
ret
mov
sarb
sti
sub
mov
inc
movsl
shll
sbbl
lods
or
pop
int3
pop
data16
push
mov
mov
adc
mov
or
ret
fnop
shrb
xlat
cmp
adc
imul
int3
cwtl
sarb
std
mov
popa
and
sti
mov
rcl
cmp
mov
dec
gs
dec
aas
xchg
imul
out
movsl
int3
cmp
sbb
scas
mov
jp
or
dec
jo
std
gs
sub
push
fsubl
fmull
in
pop
fildll
inc
mov
lcall
sti
lahf
rclb
cmp
xor
pop
leave
dec
or
lcall
cmp
push
test
pop
xorl
mov
addl
mov
bound
in
sub
cwtl
cmp
mov
mov
jbe
mov
cs
pop
push
xchg
mov
enter
jmp
push
popa
jno
sub
out
sti
movmskps
ret
ret
out
pop
dec
movl
int
adcl
push
mov
imul
mov
dec
rolb
mov
jbe
inc
mov
aad
mov
out
daa
bound
cld
lock
jb
or
dec
sti
add
dec
mov
scas
ss
stos
xchg
das
jmp
add
lahf
jge
rorl
js
loop
lods
lret
pushf
out
in
not
xchg
mov
pop
rcll
jnp
cmp
or
adc
fcomps
addr16
fbstp
jp
adc
jnp
mov
inc
cmpsb
dec
xor
insl
xor
mov
popa
je
and
inc
jo
jnp
arpl
mov
es
adc
jae
clc
xor
cwtl
repz
pop
jne
jge,pt
push
movsl
xchg
and
imul
xchg
jnp
rcll
mov
dec
sub
and
mov
pop
stos
or
sbb
jl
jg
add
cmp
pop
push
loope
fldl2t
add
addr16
inc
or
xchg
xor
lret
je
mov
xchg
imul
rolb
or
pop
neg
add
inc
mov
jmp
push
add
das
mov
testl
inc
jge
xor
pop
xchg
dec
fldl
icebp
lcall
test
xor
bound
mov
in
cmpb
pop
dec
fcompl
sbb
addr16
scas
ja
mov
push
loop
and
mov
pop
push
popa
addr16
fucomp
pop
shll
push
fadds
inc
outsl
and
mov
inc
sub
int
sbb
or
pop
sub
mov
pusha
sub
dec
pop
rol
out
loopne
hlt
sub
int3
std
inc
aaa
or
aad
jne
dec
mov
shr
or
aad
mov
addr16
lods
jnp
addb
mov
stos
push
push
inc
jnp
pushf
jge
out
stos
fldt
subl
test
out
push
fidivrl
mov
mov
jb
mov
iret
cmpsl
adc
stc
jg
pushf
mov
test
mov
cmp
iret
imul
lods
insl
push
dec
jmp
inc
js
mov
das
dec
fucompp
dec
pop
dec
add
sbb
arpl
stos
ds
push
xchg
fistpl
push
int3
cmc
aaa
pop
adc
sahf
jecxz
mov
dec
mov
mov
lahf
outsl
lds
pop
movsb
sbb
dec
js
jnp
dec
insl
inc
sbb
pop
fists
cmp
xchg
aas
lahf
jnp
sbb
bnd
test
lods
stos
add
stos
fidivs
sbb
repz
pop
jg
pop
fwait
in
sub
aad
pop
in
icebp
sbb
js
push
jle
sub
leave
test
xchg
shlb
cmp
cli
jne
arpl
loop
and
pushf
xchg
repz
nop
mov
jnp
rcrb
lea
fistps
pop
insb
js
push
pop
ja
in
lea
fistps
mov
add
dec
mov
xchg
insl
stos
shll
push
jno
rcll
mov
cmp
mov
dec
inc
pop
lret
xor
inc
adc
cmp
mov
arpl
mov
or
iret
add
mov
fiaddl
je
outsl
andl
int
jmp
lret
mov
cwtl
dec
fstpt
cmp
or
sti
xor
push
nop
into
inc
cmp
imul
into
sub
dec
xor
jle
lea
mov
mov
add
test
push
sub
insb
fisttpl
cld
les
js
or
mov
stos
sbb
mov
add
push
xchg
loop
pop
sbbb
mov
jnp
mov
pop
dec
int
cld
push
push
in
leave
pop
adc
arpl
jl
and
into
jl
outsl
into
fdivrp
jmp
lods
dec
add
fdivrl
int
pop
lods
dec
test
push
push
insb
mov
mov
adc
inc
cmp
cmp
inc
push
add
sbb
fistpl
jg
pop
sbbl
push
xchg
imul
ffree
mov
hlt
push
insb
lea
in
cmpl
div
mov
aam
fsincos
int
push
mov
int
test
sahf
lahf
mov
mov
jne
outsb
cmp
into
sahf
mov
adc
sbb
lea
push
test
into
jnp
push
mov
mov
adc
mov
imul
dec
fldl
push
sahf
push
inc
pushf
mov
push
cli
lds
cwtl
cmpsl
jg
or
mov
pop
test
popf
psubq
pop
push
add
scas
jmp
xchg
dec
imul
pop
mov
push
push
insl
lods
nop
clc
dec
int
iret
popa
jecxz
ljmp
push
sbb
daa
addr16
ret
sar
sti
mov
pop
cli
pop
inc
jle
dec
sub
cmpsl
jecxz
out
or
xlat
dec
push
xor
rep
test
inc
jle
ja
dec
int
sarb
data16
inc
push
add
dec
lea
pushf
add
cmp
pop
cmpsl
xor
cmpsb
in
nop
aam
jns
push
inc
sub
xor
cltd
push
cmp
lret
jnp
adc
mov
pop
shll
xlat
outsb
mov
add
mov
pop
lcall
outsl
sbb
loope
cld
pop
cmp
into
mov
fmull
rorb
push
mov
sbb
xlat
repnz
pop
push
add
fwait
xor
mov
outsl
sarb
xchg
pop
and
sbb
xchg
xchg
lds
xchg
push
imul
fdivrl
add
xchg
sbb
cld
jno
mov
pop
orl
mov
mov
lcall
es
add
push
mov
lods
cmp
cmp
cld
mov
xchg
fwait
jae
sub
insl
mov
shlb
dec
in
lret
sub
ds
stc
sbb
sbb
mov
cmpsb
sub
rclb
mov
sti
cmc
or
sbb
sub
lods
mov
sti
pop
add
jl
popf
push
scas
push
fmuls
or
notb
lret
push
mov
or
lods
pop
push
dec
cmpsl
mov
mov
and
sti
cld
mov
sarb
pop
and
out
push
and
int
fmul
jne
cmp
lods
adc
mov
xchg
faddp
or
daa
test
mov
xchg
cltd
adc
scas
faddl
rcl
orl
or
mov
cmp
pop
push
fucomp
sti
jecxz
rorb
mov
adc
mov
cmp
sub
aam
je
cmpl
jmp
scas
rcrb
daa
push
pop
ds
fbld
push
and
cmp
dec
mov
inc
or
xchg
or
or
mov
jns
idiv
test
sub
sub
iret
jns
push
int3
leave
imul
jle
daa
adc
mov
insl
scas
pop
lret
addb
nop
addr16
add
jo
mov
pop
mov
jmp
and
int
gs
adc
sbb
aas
pop
int
ss
or
cld
insb
int3
scas
imulb
mov
outsl
adc
jne
add
lea
in
inc
mov
jle
les
enter
arpl
push
push
mov
mulb
pop
inc
mov
pop
xchg
movsl
jle
fimuls
dec
cmc
adc
pusha
xchg
or
pushf
dec
xlat
jle
lret
jnp
scas
scas
incl
pop
add
sub
fbld
jge
ljmp
cmc
stos
sub
jbe
jae
int
into
cltd
roll
sbb
jecxz
dec
inc
pop
and
and
mov
mov
xor
mov
andl
mov
dec
inc
push
test
mov
mov
fs
add
xor
jg
push
jle
popa
mov
sbb
or
pusha
mov
lea
test
ss
leave
lods
or
idivl
sarb
jle
push
roll
dec
int
sub
loopne
inc
bound
jle
push
idiv
mov
nop
out
add
and
jg
gs
mov
push
jle
int3
cmp
mov
sbb
push
loop
out
jae
dec
aas
in
fmuls
jp
mov
jnp
mov
jbe
lds
dec
pop
cld
sbb
ret
lods
push
dec
cmp
scas
sbb
jle
xor
dec
sub
mov
lea
mov
inc
push
mov
jecxz
jo
ss
xor
or
sbb
sbb
ret
daa
movsb
jg,pn
jno
mov
xchg
fisttps
push
roll
dec
js
jmp
or
stos
xchg
test
mov
subl
sbb
imul
adc
lods
adc
mov
int
jo
pop
add
int
out
jno
push
and
lea
and
lds
mov
popl
outsb
iret
adc
dec
and
jge
pop
nop
add
es
cmc
or
or
or
and
setge
mov
push
fdivrs
or
lret
push
std
pop
cmp
pop
xchg
mov
adc
and
mov
push
adc
or
sbb
sbb
test
les
cmp
nop
test
pop
inc
or
test
cmp
incb
sbb
xchg
cmp
add
push
fstl
arpl
mov
cmp
adc
mov
xor
xchg
add
insl
pop
push
mov
push
insl
ss
pop
sbb
mov
cmp
divl
pop
movsl
xchg
test
fdivr
add
out
dec
mov
lds
fstps
xlat
into
adc
out
fcom
sbb
or
pop
pushf
or
inc
outsb
rsm
mov
int
out
leave
call
add
sub
nop
xor
std
or
mov
xor
mov
mov
mov
mov
pop
dec
xor
mov
loop
scas
sbb
mov
in
cmp
and
pusha
cwtl
movsl
and
lret
ljmp
sub
sbb
cld
jmp
inc
imul
jl
or
cmp
push
dec
mov
jp
jl
push
xlat
mov
jnp
imul
fwait
jnp
shrl
xchg
ds
fstpl
loope
or
cmp
cmpsb
xchg
xchg
dec
ss
xchg
int3
arpl
mov
out
adcl
insl
and
aaa
arpl
push
mov
inc
test
add
xor
cmp
push
mov
cmpsl
jecxz
clc
inc
push
lods
push
cmp
or
dec
mov
out
nop
leave
mov
stos
mov
mov
jl
das
test
pop
mov
push
adcl
insl
mov
fnstsw
dec
rcrb
fmuls
inc
clc
dec
add
rcl
test
mov
jnp
sub
sti
mov
mov
pop
jne
outsb
daa
xlat
mov
mov
les
xor
ficomps
pop
cld
mov
scas
ds
cmp
add
rcrb
jp
sub
cmp
inc
sti
lahf
or
mov
dec
rclb
mov
cli
jp
mov
ret
lcall
movsb
mov
mov
xor
or
stc
add
in
sbb
jl
or
lods
loopne
mov
pop
int3
shrl
pop
push
fwait
ret
inc
dec
pop
sub
xchg
cmp
movsb
adc
orb
cmp
sub
inc
ret
or
mov
rclb
imul
daa
or
mov
pop
ret
cmp
mov
clc
fsubr
cwtl
add
rcrl
xor
test
sub
push
nop
mov
repz
push
xchg
add
jge
cmp
mov
push
cmp
xchg
gs
push
test
sbb
add
push
ss
popf
movsb
mov
adc
cld
test
scas
push
add
xchg
fisttps
jns
inc
xchg
jl
xchg
iret
dec
add
push
adc
push
iret
insl
dec
gs
ds
test
xchg
mov
and
or
outsb
sub
stc
cltd
jno
sti
aas
and
notl
push
call
or
fildll
xchg
dec
in
xchg
dec
cmp
movsl
mov
lahf
rcrb
adc
xlat
or
mov
sub
inc
push
or
ja
dec
sub
xor
stos
mov
jg
sbb
stc
inc
sbb
xchg
adc
rcrl
or
ss
xchg
inc
cmpl
push
push
ja
push
pushf
cmp
fdivrl
daa
push
into
lea
outsl
mov
push
sub
inc
mov
cmc
aad
sbb
mov
xchg
add
fstpt
movsl
mov
fstl
pop
add
push
hlt
add
lods
jl
sub
sahf
cmpl
mov
sahf
xchg
mov
pop
jo
cmpb
xor
jo
jl
iret
sub
add
pushl
xor
int
jnp
cmp
dec
int3
test
push
out
ljmp
mov
int
mov
fwait
stc
cbtw
int
mov
mov
arpl
mov
jp
cmp
or
or
div
or
sbb
push
push
adc
dec
cmp
sti
pushf
pop
aaa
jecxz
sbb
int
int
pop
sbb
jp
sub
jb
inc
xlat
mov
cmpsl
mov
js
and
sbb
push
lret
inc
mov
in
adc
or
sub
dec
xchg
je
dec
ror
pop
shlb
push
mov
stos
inc
jle
pop
or
cmp
sub
in
loopne
cmp
push
inc
sarb
ds
inc
pop
cwtl
dec
mov
cmp
pop
pop
icebp
or
pop
lret
shrl
sub
sbb
inc
cmp
lods
cmc
jbe
jecxz
pop
into
scas
jg
std
aam
ja
rcll
jno
sbb
mov
fmul
cmp
call
adc
push
push
mov
jecxz
lahf
repz
idiv
jb
fisubl
sbb
mov
mov
insl
aas
fdivrs
push
fiadds
mov
ja
and
and
das
jno
sbb
mov
je
sub
and
add
mov
out
in
pop
sub
mov
pop
pop
or
pop
sub
jl
sub
dec
enter
dec
mov
cmp
mov
aam
jg
insb
dec
dec
xlat
add
jle
push
cld
vdivsd
inc
inc
pop
add
fistl
and
iret
xchg
test
nop
dec
mov
xchg
dec
xchg
cli
lods
push
or
add
aad
xor
adc
sti
and
dec
out
icebp
lds
rol
test
dec
dec
xchg
cmpsb
cmp
mov
imul
subb
jmp
push
sbb
cmp
push
jne
int
pop
jecxz
mov
and
adc
and
jnp
sti
sbb
jne
sbb
test
popf
andb
push
movsl
ret
dec
xrelease
popf
test
adc
xchg
sti
popf
jmp
loope
nop
and
iret
outsl
roll
hlt
and
mov
pop
cmpsl
fdivrp
inc
inc
jbe
cmp
and
xchg
push
out
aam
pop
fwait
mov
in
jo
mov
fbld
push
stos
shll
in
push
lods
adc
adc
mov
fsts
mov
scas
lock
icebp
dec
mov
scas
sti
ror
push
jp
push
add
int
push
mov
or
daa
adc
mov
mov
pop
lret
push
pop
jl
bound
mov
push
cs
sbb
fsubl
fdivrs
pop
lea
fstps
mov
sub
outsl
cmp
push
in
mov
sbb
aad
jb
lret
pop
push
out
shlb
jae
cltd
in
mov
cmp
mov
popa
push
sahf
jecxz
aam
add
or
mov
leave
fdivrs
adc
cmpb
adc
imul
add
and
leave
cli
aad
mov
inc
add
in
repnz
inc
inc
jge
sub
adc
sbbl
sub
or
jg
orl
lcall
es
xor
fimuls
in
mov
cmpb
enter
out
push
movsl
or
subb
std
jae
fsubl
cmp
inc
xchg
sbb
sar
add
dec
xor
jbe
mov
adc
push
mov
mov
int3
outsb
push
mov
sahf
mov
out
push
repz
add
inc
fs
in
out
std
movsl
mov
dec
mov
test
push
push
xchg
inc
lods
ljmp
scas
stos
fisttpl
xchg
mov
push
jp
dec
mov
aam
pop
into
aad
and
in
std
sub
jl
xor
mov
jp
das
dec
or
xor
adc
sbb
pop
ss
sub
loope
cmp
leave
jno
pop
mov
in
int
pop
cmp
ja
ret
pop
test
push
in
gs
jnp
jecxz
cmc
insl
out
push
movsl
or
aam
mov
push
cmp
add
push
cmpsb
ja
jb
test
pushf
or
aas
lods
mov
leave
push
add
dec
outsl
cmp
push
ljmp
jge
sub
push
mov
push
lea
mov
repnz
push
shll
int
sahf
xchg
mov
mov
jo
jmp
jb
inc
push
lea
mov
dec
adc
sub
mov
xchg
sti
fbld
jecxz
fidivrs
imulb
les
mov
lret
dec
push
xchg
or
adc
lea
rcrl
or
sub
jb
xchg
stos
mov
nop
mov
outsb
fs
mov
lahf
imul
int
inc
jns
sub
inc
into
push
jns
scas
into
pop
dec
movsb
cltd
lahf
push
mov
pop
mov
inc
lods
mov
cmp
xchg
sub
xchg
pop
or
mov
pop
inc
jmp
in
repz
inc
lods
scas
sti
add
xchg
rorl
mov
dec
clc
mov
ja
daa
outsl
jg
insl
mov
push
cmc
jns
std
cmp
dec
add
cld
or
nop
mov
pop
inc
sarl
stos
xor
push
lods
add
sbb
mov
xor
jl
mov
rcrl
scas
movsb
cld
jnp
out
cwtl
xchg
pusha
cwtl
add
cmpsl
sbb
add
xchg
sbb
pop
loop
lret
mov
data16
sar
mov
sbbl
int3
pusha
mov
int3
ja
pop
or
fsubr
nop
cmp
pop
test
loopne
push
stos
mov
imul
dec
in
cmp
cmpsb
insb
cmp
cmp
xor
out
leave
and
aad
jmp
aaa
mov
sub
in
mov
mov
sub
out
push
aad
insl
pushl
inc
jecxz
jbe
test
cltd
lea
jae
sbb
lock
stc
call
mov
stos
mov
jnp
mov
into
push
in
stos
jecxz
or
testb
or
inc
push
push
inc
adc
push
xor
dec
and
sarb
je
dec
rorl
bound
lods
dec
dec
inc
jle
sahf
or
or
dec
add
hlt
sbb
inc
mov
jne
sub
arpl
ret
addr16
imul
adc
xchg
lret
or
sahf
dec
insl
xlat
ja
dec
lret
aam
mov
hlt
lret
repz
add
mov
mov
inc
pop
dec
pusha
rcrl
fldcw
out
loop
xor
mov
mov
aam
or
test
rcrb
outsl
dec
jl
cs
and
xchg
adc
xchg
or
addl
das
xlat
xchg
ret
dec
xchg
xor
rcr
pop
mov
pop
es
repnz
sti
sbbl
mov
xchg
inc
mov
dec
leave
out
int
and
mov
lea
mov
push
sbb
cmp
aas
dec
subb
xchg
sub
cmc
pop
and
push
iret
push
push
push
int
jg
je
stc
jnp
aaa
inc
sub
fwait
mov
call
loop
adc
push
scas
mov
jp
push
popa
xor
pop
sub
gs
pop
out
push
scas
int
stos
mov
add
shlb
jbe
jae
mov
int
xchg
test
mov
push
int
sahf
sub
pop
cmp
mov
fdivs
mov
or
cmc
pushf
and
or
mov
in
dec
sar
xor
enter
jnp
pusha
cli
repnz
dec
int
inc
out
cmp
push
mov
jae
jno
shl
jb
inc
dec
pop
push
mov
mov
xchg
orb
aaa
fwait
cmp
rcrl
mov
xchg
xchg
imulb
and
icebp
cmp
lods
mov
dec
decl
pop
out
das
jl
leave
dec
ss
mov
lock
mov
jnp
das
cmp
push
imul
mov
xchg
dec
cmp
jb
je
dec
pop
add
shl
add
or
ret
imul
lods
xlat
pop
mov
roll
lahf
sub
cltd
outsb
xor
cmp
sub
imul
mov
lret
push
scas
jb
dec
fistpl
mov
add
and
dec
cmc
jae
dec
xlat
fmull
rorb
jge
sbb
pop
sbb
pop
mov
jge
cltd
arpl
adc
cmpsl
dec
xor
sahf
dec
mov
popf
push
ficomps
sti
shr
adc
mov
dec
pop
sub
in
ret
daa
dec
dec
aam
dec
imul
dec
mov
stc
xchg
in
pushf
lock
jle
jns
loope
jnp
cli
fs
shlb
lds
nop
inc
mov
xchg
icebp
mov
dec
cld
xorl
xor
out
pop
orl
cld
dec
push
mov
pushf
cwtl
sub
adc
repnz
int
xlat
mulb
jb
fwait
and
jmp
push
xchg
pop
repnz
ljmp
jecxz
push
cmp
iret
mov
mov
cmpsl
xchg
cmp
test
fs
xchg
lods
cmp
movntps
or
dec
pushf
stc
jle
rcr
mov
mov
dec
loopne
sbb
xchg
cmp
push
fstl
push
data16
jb
mov
nop
mov
cmpsb
xor
divb
icebp
cmc
mov
xchg
mov
call
pop
mov
test
bnd
xor
mov
cmpsl
jmp
out
lods
mov
cmp
insb
jns
movsb
lods
std
cmp
outsb
es
sub
and
mov
pop
sbbl
sbb
aaa
js
pop
out
add
in
mov
rcrl
int
cmp
test
and
ds
sahf
dec
xchg
mov
outsb
jl
or
push
lret
lahf
mov
pop
mov
xchg
fsubl
clc
cmp
enter
adc
sub
mov
sub
push
imul
mov
jnp
sub
or
mov
cmpsl
xor
push
ret
mov
sub
mov
xorl
adc
xchg
add
pushf
sti
loope,pt
std
mov
pop
jno
cmpsl
cltd
pop
movsl
sti
int3
clc
cld
pop
cmp
jle
lret
pop
inc
adc
ret
add
xlat
nop
sbb
jge
inc
das
xor
cli
add
or
xchg
jcxz
xlat
insl
das
push
add
daa
inc
enter
xlat
outsl
mov
cmp
out
mov
cli
add
xor
in
test
mov
dec
push
inc
sarl
mov
cmp
iret
pushf
insl
push
rdmsr
out
xchg
addl
adc
inc
push
mov
test
pop
jne
inc
mov
cld
pop
jg
mov
push
adc
jge
fnstsw
inc
out
xchg
xor
push
mov
mov
inc
outsl
dec
push
std
icebp
outsl
fnstcw
daa
jbe
dec
and
sub
sahf
pop
sbb
call
lret
mov
sbb
inc
pop
add
pop
mov
or
push
lods
subl
data16
jno
test
mov
dec
jbe
lea
in
lods
fnstcw
push
or
repnz
push
pop
lret
adc
add
pusha
dec
jge
mov
jbe
or
adc
pop
jl
unpckhps
dec
fsubl
fistps
mov
or
cmpsb
xchg
pop
inc
mov
mov
jnp
shrb
mov
xchg
aam
xchg
or
sarl
lds
jnp
mov
flds
adc
in
fwait
sbb
fisubrs
and
mov
in
rcrb
mov
jmp
fwait
or
and
sti
lcall
push
add
js
call
loopne
shrl
jmp
cmpsl
out
sbb
iret
push
in
sub
test
push
fldt
dec
lahf
lcall
push
ret
cld
aam
mov
jae
out
std
jno
or
fistl
sbb
mov
and
sbb
dec
ds
push
mov
push
add
xor
aas
and
jecxz
fadd
test
into
shlb
and
ss
aaa
push
sub
mov
dec
aam
addb
divb
mov
insl
jo
pop
sar
ret
sbb
subb
cs
add
pop
cmp
xor
inc
rcr
outsl
push
test
decl
push
inc
xchg
or
int3
pop
sti
xor
push
js
mov
cmp
insl
and
pushf
fisttpl
inc
mov
shl
aad
ja
shlb
inc
cmp
fstl
das
subl
mov
rcl
fisttpl
jge
push
push
cwtl
or
mov
jno
mov
inc
inc
cmp
mov
int
pop
pop
fwait
int3
inc
xchg
mov
leave
popf
adc
mov
sbb
out
js
je
pop
movl
divl
inc
pop
dec
mov
out
push
sub
push
mov
testb
sub
add
cs
lods
sub
shlb
shrd
dec
or
xchg
insl
sub
cs
xor
mov
rol
push
cmp
dec
fwait
int3
mov
adcl
and
aad
jnp
mull
aam
push
insb
xchg
or
cmp
cwtl
sub
mov
xor
loope
pop
add
in
jge
push
stos
mov
mov
stos
and
push
dec
inc
push
subb
push
rclb
leave
mov
aas
xchg
mov
mov
loopne
insb
mov
xor
xchg
pop
sub
and
shrb
mov
jle
mov
xchg
inc
fisubrl
mov
orb
dec
and
push
add
hlt
lds
dec
sbb
sbb
lret
xlat
adc
cld
test
xor
mov
pushf
dec
fistps
and
mov
jnp
in
adc
test
sub
iret
lds
andb
push
cmp
sbb
fildl
fwait
fwait
fwait
pop
sbb
xchg
pop
rorb
fdivrs
std
inc
xchg
lahf
and
mov
dec
pushf
ja
int
cmpl
sahf
hlt
std
lea
pop
das
mov
cld
xor
cld
sbb
sti
mov
jb
test
pop
rcr
jnp
jne
cmp
push
mov
imull
into
sti
pop
call
mov
lods
xor
xor
int
shlb
scas
fwait
jl
or
sbb
ret
push
mov
in
inc
dec
repnz
insl
dec
sbb
outsl
adc
sti
out
ret
cmp
cmp
sar
mov
iret
sub
fcompl
dec
cmc
enter
push
fs
jnp
hlt
jecxz
jecxz
xor
ds
xchg
leave
inc
jb
data16
lods
lret
ds
int3
fdivl
test
loopne
xchg
imul
jns
ds
lea
lea
xchg
pop
jns
push
les
sub
adc
mov
loope
mull
bound
in
or
jno
mov
cmp
loope
pop
test
or
nop
jns
movsb
leave
sub
adc
cltd
mov
jecxz
or
aas
mov
add
mov
lds
jb
dec
xor
cmp
notb
or
dec
sub
andl
xor
push
js
push
mov
lret
sub
dec
pop
shl
lea
or
stos
je
orb
aad
sti
out
sub
dec
adc
cmovo
lea
push
in
nop
negb
out
fisttpl
lcall
or
adcb
stc
adcl
mov
sub
mov
or
ret
mov
dec
push
and
mov
push
inc
jmp
mov
negl
insl
jo
xchg
fdivp
rcrb
cmpsb
lea
test
dec
jnp
inc
lret
adc
and
test
push
loop
push
mov
mov
movsb
add
cmp
xchg
sti
pusha
iret
sbb
scas
leave
cmp
sub
jmp
and
cwtl
pop
movsl
xchg
push
push
cld
sti
lahf
je
stos
call
icebp
dec
jmp
pop
hlt
in
into
add
mov
adc
int3
or
ljmp
cltd
pop
xchg
int3
aam
mov
aas
test
mov
mov
cmpsl
and
pop
mov
cmp
mov
std
pop
adc
iret
lea
xchg
push
dec
int
inc
roll
inc
popa
mov
mov
hlt
or
pop
xchg
jnp
js
mov
outsb
jno
push
mov
movsb
cld
push
outsl
or
inc
push
cmp
adc
ret
mov
fsubrs
scas
add
mov
inc
or
push
aaa
hlt
lods
pop
jne
add
push
add
scas
fldcw
pop
mov
push
mov
jae
outsb
add
dec
adc
mov
mov
sbb
adc
sbb
test
sahf
mov
pop
or
sub
mov
push
or
add
rcl
xchg
scas
dec
pop
jl
fimuls
int
dec
rcrl
je
jnp
into
lea
es
dec
xor
sti
dec
dec
mov
jl
or
repz
cmp
sbb
jno
pop
ljmp
aam
push
xor
test
scas
cmpsb
ds
mov
cmp
dec
js
ficompl
mov
xchg
sub
test
negl
inc
cltd
es
dec
aam
mov
xor
out
js
pop
negb
fsubs
sahf
aad
mov
arpl
add
out
cmp
scas
or
add
mov
sbb
ljmp
add
aad
xor
aaa
xor
daa
pop
mov
mov
jb
jnp
aad
test
jo
stos
dec
pop
mov
fistl
cmpsb
sbb
pop
sbb
in
mov
adc
mov
pop
mov
and
jl
cmp
test
add
mov
add
insl
push
btc
jp
push
or
cmp
pmulhw
mov
cmp
orb
outsl
or
fidivrs
add
in
add
cmp
insb
das
jnp
sub
push
sub
aas
cmp
mov
add
push
cmp
stos
sbb
inc
aas
push
jne
out
mov
popf
mov
aad
mov
sbb
outsl
in
jbe
adc
pop
mov
mov
lcall
inc
lea
or
addr16
sahf
fbld
jmp
mov
or
hlt
inc
cmc
arpl
aad
sahf
ja
adc
or
addr16
lret
aas
jmp
adc
cmp
pop
inc
mov
add
int
add
bound
mov
sti
pop
push
xor
stc
loop
dec
sbb
jg
adc
movsb
pop
lods
jnp
outsb
jne
adc
jae
loop
dec
cmp
imul
jge
je
stos
inc
inc
movsb
es
sbb
cmp
ja
xchg
mov
mov
add
push
imul
cwtl
push
gs
sbb
int
mov
cmpl
das
push
popa
push
jns
mov
or
inc
negl
bound
std
jnp
loop
mov
ficompl
jne
es
fsubl
icebp
mov
cs
jp
std
sti
lcall
sti
inc
push
push
inc
pop
shlb
xchg
cmp
jnp
jns
xchg
mov
cltd
or
lock
jne
imul
repz
mov
xchg
mov
xchg
pop
and
mov
int
xchg
int
scas
pop
xchg
test
mov
dec
cmp
dec
jmp
cmp
ret
iret
or
andb
dec
cmp
or
mov
pop
aaa
mov
mov
add
dec
shrl
adc
inc
jmp
das
mov
adc
std
lcall
inc
lcall
ficoms
or
jl
int
in
mov
sub
cld
or
pushf
out
xchg
sbb
jle
jmp
push
push
add
jg
inc
out
dec
inc
iret
ja
push
scas
or
imull
out
clc
and
cmp
cltd
gs
cmp
dec
dec
cmp
bound
xor
push
adc
adc
sarl
out
mov
or
sbb
xchg
or
jp
movsb
sbb
stc
call
call
divb
sub
inc
or
xchg
inc
shrl
cmp
mov
ficomps
add
xor
cmpl
cmp
sbb
cmp
sub
out
or
ja
shlb
xchg
jnp
cmpsb
out
xor
dec
test
mov
hlt
es
gs
je
test
inc
xchg
sti
mov
or
jbe
push
ret
pop
in
data16
adc
pop
rclb
jne
sti
aas
ss
adc
dec
mov
push
int
pop
in
jg
mov
clc
test
mov
xor
pop
out
imull
cmp
cmp
push
xor
aas
add
nop
out
pop
mov
mov
dec
and
int
mov
pop
mov
xorl
adc
cmp
mov
add
mov
sbb
lret
cmp
sub
jae
cmp
nop
xor
addr16
es
adc
inc
ror
or
aam
lods
arpl
cwtl
pop
popl
sbb
sub
push
divl
sub
sbb
dec
add
hlt
cmpsb
mov
inc
rolb
inc
add
cmc
stos
dec
push
adc
mov
in
adc
and
xchg
mov
cmp
xchg
pusha
or
imull
jno
int
add
test
fpatan
fs
decl
lret
mov
ret
into
and
orl
sub
incb
sub
mov
or
mov
lods
les
push
lcall
adc
mov
xchg
in
add
aas
out
sub
lea
das
jge
dec
iret
jnp
mov
mov
sarl
movsl
push
xchg
cmp
dec
nop
jne
hlt
xlat
fs
lea
loop
sti
jae
xchg
jl
into
sbb
aad
mov
xchg
sbbb
pop
out
or
jecxz
movsb
push
sub
pop
jge
outsl
cmp
cmc
push
mov
xor
clc
cmp
popf
add
sub
nop
pop
pushl
mov
mov
movsl
inc
shlb
adc
cli
sbb
pop
dec
push
or
jae
inc
fcoms
lea
leave
lods
hlt
sahf
gs
mov
mov
mov
pushf
pushf
dec
aam
push
xor
fwait
mov
jo
in
iret
sti
psllw
les
pop
into
ret
mov
cmpsb
rcrb
pop
jle
and
rcl
shll
insl
pop
fidivrs
in
lahf
aas
pushf
push
aad
testl
jnp
cmpsl
pop
daa
rcll
mov
and
jp
fisttps
xor
lcall
cld
xor
jmp
cmp
push
mov
sub
pop
sti
sub
sbb
adc
mov
out
pop
mov
jge
in
sbb
pop
or
pop
and
push
inc
xchg
bound
fwait
pop
xlat
aam
and
push
std
xchg
push
sbb
jl
aam
push
pop
fnsave
jne
outsl
or
pop
dec
and
add
cmp
fisubrs
popa
sub
pop
adc
jno
shlb
pop
dec
pushl
popf
popf
mov
int3
cli
outsb
xchg
in
or
pop
fs
stos
jnp
gs
out
dec
push
sarb
aad
fldt
into
xchg
sub
push
cmp
sub
dec
mov
xchg
cmp
jmp
fistpl
push
aaa
xor
pop
out
and
mulb
mov
cmp
gs
push
adc
mov
adc
lret
and
mov
sbb
push
cltd
push
push
rcl
xchg
cli
ds
int
pop
dec
aad
mov
inc
mov
and
shlb
push
pop
aaa
bound
or
and
js
sbb
jnp
mov
lods
addr16
jmp
mov
xchg
sbb
cwtl
sti
stos
xchg
xchg
popa
mov
sub
repz
fisttpll
dec
xchg
ja
imul
fs
sbb
cmp
int3
ja
setge
mov
or
lods
mov
fstps
dec
fimuls
adc
jg
inc
or
pop
lahf
sti
jne
mov
jae
fcmovbe
jle
fdivrl
jg
arpl
cli
sarb
ss
dec
dec
cmp
push
mov
or
sti
add
std
mov
in
pop
xor
xor
push
aam
mov
mov
sub
add
sti
insb
mov
mov
aam
mov
loope
lahf
fnstenv
push
cmp
mov
outsb
nop
mov
sub
test
pop
add
push
add
dec
sbb
fdivr
out
push
xor
sbb
mov
cmp
mov
sar
push
sbb
pop
inc
add
xor
cmp
xor
arpl
add
dec
hlt
call
cmp
pop
xor
push
mov
ss
pushf
ficompl
lret
cld
jns
ljmp
pushf
jns
sbb
mov
jne
jg
jge
and
inc
mov
sti
dec
push
adc
call
mov
dec
aas
mov
dec
dec
pop
and
cmp
mull
mov
out
inc
int3
data16
jnp
xchg
lds
cmp
push
fcompl
add
pop
pop
int
fwait
in
sbb
inc
cli
mov
xchg
pop
jg
pop
jb
mov
inc
xchg
mov
scas
push
ret
fdivs
and
out
stc
push
or
sub
mov
or
incb
or
mov
int3
push
push
inc
outsb
xor
cmp
xchg
mov
jne
int3
add
mov
test
enter
push
mov
lods
aas
cmc
test
push
jmp
push
or
adc
jb
mov
scas
fdivrl
add
popf
cmp
mov
add
aaa
hlt
push
pop
xchg
iret
sti
mov
in
lret
sub
jp
sub
or
mov
sbb
pushf
mov
mov
add
sub
cmp
rorb
pop
in
jnp
jnp
push
mov
cmp
xor
shl
jnp
scas
test
mov
cmp
cmp
nopl
xchg
decl
or
lea
push
or
push
pop
cli
ret
pop
pop
fwait
sti
push
sub
xchg
pop
jo
mov
fimuls
mov
leave
int
add
scas
cmp
mov
fstpt
push
dec
cs
sbb
shlb
lds
iret
imul
sahf
aaa
cmpsl
cwtl
add
fistl
loop
lds
or
jmp
lds
outsl
push
jle
jo
pop
dec
mov
lods
sarl
daa
xchg
sti
jp
int3
sbb
xchg
mov
fldt
sbb
test
paddsw
cli
jnp
mov
inc
cmpsb
mov
loopne
lret
push
lcall
outsb
dec
push
sub
imul
data16
mov
fwait
popa
mov
lock
pop
mov
es
rolb
push
mov
iret
shll
or
insl
iret
jns
inc
fwait
push
or
dec
outsb
stos
push
adc
jne
imul
dec
shrl
nopl
data16
adc
dec
mov
xor
movsl
add
sub
lods
sub
mov
xchg
mov
dec
mov
add
sub
sbb
cmpsb
push
movsb
fstpt
repz
cs
inc
ret
mov
mov
stos
jns
out
sahf
int
sub
test
stc
mov
aad
cmp
leave
sti
jp
mov
pop
push
cltd
cld
mov
dec
outsl
bound
mov
cmp
outsl
cld
popf
movsl
mov
out
setae
lods
int
les
add
jnp
in
xchg
pop
testl
add
lods
outsb
inc
cmp
js
mov
lret
dec
jo
aam
push
das
in
xchg
pop
mov
in
fists
imul
and
lea
jge
jbe
fwait
ret
out
push
mov
incl
in
sbb
push
aaa
adc
dec
nop
jmp
mov
xor
add
lods
sarb
fwait
and
mov
jb,pt
lods
push
inc
jns
fisttps
pushf
in
jge
sbb
pop
fs
xchg
jnp
mov
into
pop
test
ror
sbb
jnp
lock
aam
xchg
insb
jno
mov
push
push
int
cmp
xlat
in
or
bound
mov
push
pop
rorb
dec
pushf
add
int
sub
les
arpl
jb
lcall
call
xchg
in
jmp
lock
int3
sub
rolb
pop
xchg
jl
shrb
fldl
addr16
push
mov
inc
xchg
std
jecxz
mov
xlat
sti
sub
jne
jnp
pushf
jg
mov
cmc
xchg
mov
cmp
sub
clc
std
push
sbb
aad
hlt
and
or
sar
out
fstpt
dec
in
daa
xchg
or
into
mov
pop
sub
test
test
outsl
xchg
jbe
jns
cmp
sbb
rorl
nop
aam
adc
ret
out
fiadds
lea
dec
lcall
mov
pop
cmp
in
in
outsl
cmpb
imul
insb
std
fucom
push
jb
push
int3
pop
sbb
cwtl
xchg
roll
mov
loop
jl
popf
xchg
rolb
ds
jne
into
sar
inc
call
jge
push
dec
xchg
ja
pushf
mov
mov
dec
in
imul
xchg
mov
into
mov
das
and
addr16
xchg
adc
jmp
lea
ret
test
ja
int
adc
btc
sahf
mov
sti
push
ss
addr16
std
scas
das
cmpsb
pop
imul
jg
insl
inc
sbb
ret
inc
sub
mov
adc
bound
adc
mov
lahf
mov
mov
sti
fbld
lret
jbe
or
das
pop
lret
xor
aad
aaa
pop
inc
sub
push
cltd
divl
leave
mov
xorl
jle
push
inc
dec
cld
cmp
rorl
xchg
imul
push
lret
fs
enter
scas
push
cld
test
mov
xchg
push
fdivs
jg
and
mov
inc
jnp
mov
sbb
jnp
adc
stos
add
lods
int
add
in
roll
movsl
movsb
cmp
push
cmp
pop
int3
adc
das
mov
mov
or
out
lcall
xchg
mov
mov
sbb
cmp
cld
or
inc
pop
dec
test
pop
enter
enter
orl
mov
cmp
fstp
insl
xchg
test
iret
filds
jnp
imul
adc
and
cmpsl
inc
imul
mov
inc
ffree
sub
mov
rcr
es
fldcw
test
cmp
test
pop
bound
push
dec
rcr
testb
adc
sar
addb
test
rorb
mov
dec
adc
or
jnp
test
mov
xor
add
in
inc
sub
sbb
jg
sub
xor
xlat
std
sub
test
ret
movsl
mov
in
insb
test
into
cmp
adc
cltd
mov
imul
out
pop
push
imul
rcll
jp
fldt
or
jg
adc
and
int
inc
cmp
cmp
fcmove
cmpsl
xchg
sub
insb
adc
in
ror
and
data16
push
in
test
jle
sbb
mov
shl
dec
dec
sbb
dec
xchg
fildll
cs
mov
adc
dec
mov
pop
xor
mov
loop
cmpsb
dec
pop
insl
clc
sub
test
ss
test
outsb
xor
xchg
push
pop
ljmp
gs
ds
adc
mov
lods
lahf
sarl
add
cli
xor
push
stos
dec
dec
mov
ret
inc
mov
ret
add
mov
jne
cs
sbb
lcall
sbb
cwtl
daa
sti
imul
leave
lcall
lret
mov
fiaddl
xchg
icebp
inc
adc
cmp
sbb
sbb
sub
ss
jnp
jge
sbb
mov
loope
pop
mov
xor
inc
fldenv
out
fists
jnp
icebp
movsb
hlt
inc
dec
add
rcrb
mov
sbb
and
pop
jae
jl
cmp
mov
jg
fistpl
lock
sti
inc
and
cmp
lods
or
mov
jge
push
inc
ss
mov
movsl
push
arpl
pushf
add
sub
mov
inc
scas
dec
ror
xor
pop
rcll
push
cmp
xchg
fs
cmc
jmp
and
inc
cmp
xchg
fs
mov
jl
jne
subl
xchg
xchg
push
std
adc
mov
dec
jl
sub
add
mov
cld
inc
mov
jns
sbb
and
jo
dec
mov
xchg
imul
sahf
cmpl
imul
ret
xor
mov
pop
mov
push
aad
xor
jno
mov
jle
rol
xchg
test
lcall
mov
mov
cmp
cmp
aad
inc
pop
lods
push
cwtl
cmp
sti
sti
out
out
cmp
test
hlt
js
jns
inc
or
xchg
ret
pop
cmp
push
ja
out
daa
jns
mov
imul
dec
sbb
dec
adcl
push
mov
cs
sbb
cmpsb
sarb
or
decl
cwtl
pop
xchg
mov
sar
and
lret
jg
mov
or
mov
insb
into
nop
mov
int3
cmp
pop
jae
movsb
or
pop
sub
and
std
pop
inc
jmp
sbb
xchg
inc
pop
inc
dec
idivb
lret
sbb
add
pushl
in
mov
jae
push
inc
sub
sbb
pop
xchg
jle
xchg
xor
pop
mov
or
andb
mov
and
xlat
stc
cmp
and
loope
jg
cmpl
orb
arpl
sbb
enter
jo
add
xchg
rcrl
jnp
inc
add
inc
or
mov
and
jl,pn
mov
push
pop
cmpsb
imul
lea
or
lods
imul
icebp
jle
je
fisubl
mov
push
int
imul
daa
insb
xor
cli
lahf
sbb
sub
adc
cwtl
jnp
sbb
jmp
popa
mov
sbb
xchg
or
or
mov
jno
aas
rclb
jns
add
int
pop
dec
lahf
xor
jp
sub
int
xchg
mov
jnp
mov
push
mov
lahf
ret
mov
xlat
pushf
xchg
je
nop
add
jp
and
fstl
frstor
push
inc
cmp
adc
pop
cwtl
xlat
sahf
and
mov
push
mov
xor
jge
add
cwtl
jp
xchg
mov
mov
sti
cmp
iret
int
test
adc
insl
cmp
mov
aas
cmpsb
push
es
or
and
shlb
mov
cmp
xorb
bound
jmp
cmp
repz
aad
sub
dec
cwtl
pop
jbe
and
sti
sahf
shll
ds
outsb
jno
lods
aas
add
xchg
fstpt
pop
nop
cld
lret
jg
pusha
mov
inc
jmp
adc
pop
mov
fistps
std
fistl
mov
hlt
lock
frstor
and
pop
push
xchg
sahf
sub
add
or
xlat
sub
add
out
cwtl
mov
pop
sti
fs
fcoml
fbld
mov
nop
jge
int
lahf
hlt
xor
ja
fs
sbb
sti
sti
adc
mov
popf
mov
mov
sub
dec
fistpl
lods
sbb
xchg
pusha
test
sahf
or
add
dec
jl
jmp
xlat
imul
fs
pop
jbe
pop
or
not
push
mov
sbb
ret
sub
and
sti
enter
or
jnp
rorl
cmp
inc
aaa
ja
cmp
popf
rorl
mov
sbb
jno
adc
enter
sub
push
stos
cmc
xor
movsb
shll
sti
nop
push
xor
push
xchg
inc
leave
dec
cmp
mov
imul
aaa
pop
xchg
bound
dec
mov
ret
adc
cmp
pop
outsl
outsb
or
push
mov
out
push
jbe
fstpt
xor
xor
mov
orl
jge
stos
sbb
stc
sub
pop
mov
fbstp
mov
sub
sti
popa
xchg
nop
es
mov
test
or
adc
pop
cmp
mov
int
fstpt
int
mov
push
cmp
mov
adc
cmpsb
dec
mov
jo
outsl
mov
jnp
ret
aaa
cmp
rcr
std
arpl
xchg
jnp
dec
xchg
mov
shrl
jp
movsl
fsts
cmp
adc
or
dec
in
movsb
movsb
cli
sbb
lods
adc
pop
xchg
pop
clc
pop
xor
icebp
dec
int
fdivr
shrb
or
mov
ficompl
xchg
shrb
mov
imul
lret
dec
dec
lahf
lea
lahf
or
xchg
mov
dec
sbb
cld
mov
mov
add
xchg
push
mov
xor
mov
push
fs
adcb
jae
push
jbe
sti
call
xchg
mov
std
push
cmp
push
jp
scas
sub
jnp
roll
out
lea
and
out
cltd
es
fidivl
pop
push
and
and
push
cmovno
jnp
fs
mov
pop
cli
cmp
and
push
adc
push
push
cmp
fwait
add
dec
sub
lods
sub
lret
dec
mov
push
mov
cwtl
mov
inc
mov
std
cmpsl
dec
mov
and
mov
stos
pusha
in
dec
fstpt
jp
aas
and
push
pop
int
xorb
popl
xchg
and
add
jbe
add
fsincos
imul
call
mov
hlt
iret
xor
ja
cmc
ret
jns
push
lods
push
aad
rolb
fs
lods
adc
dec
pushf
popf
inc
int
jecxz
mov
push
dec
push
lods
xchg
jne
cli
cmpsl
dec
inc
aas
inc
sbb
mov
push
add
jo
movsl
xor
cmp
std
jnp
push
dec
or
sbb
arpl
mov
and
adc
adc
dec
stos
std
and
jmp
fadds
dec
xchg
out
fistpll
mov
pop
mov
into
mov
je
aas
sub
mov
jp
pop
mov
jg
sbb
mov
sbb
push
jl
outsb
loopne
mov
int3
sub
xchg
call
dec
xchg
aad
dec
into
mov
adc
xchg
or
lods
adc
jl
adc
rcrb
test
mov
xchg
mov
enter
dec
stc
sub
xor
mov
jae
mov
gs
adc
outsb
adc
mov
lahf
ret
mov
out
jns
dec
pop
imul
lret
adc
sahf
push
dec
cmpxchg
leave
test
sahf
mov
test
xlat
jp
dec
xor
cmpsb
test
push
inc
movsl
push
adc
sub
fistpl
pop
lcall
ret
lea
cmp
jmp
cmp
jge
cmp
clc
cmp
arpl
das
xchg
jno
out
dec
sub
jg
fstps
cmp
movsb
and
add
jo
dec
mov
or
sub
ja
in
cld
in
data16
mov
hlt
or
fwait
fs
xor
jge
lock
cmp
fmull
lret
dec
xchg
fildl
mov
or
cmp
idivl
push
and
sbb
movsb
leave
mov
and
xor
lcall
dec
decl
sbb
add
pop
pop
ljmp
xchg
xchg
add
icebp
jo
inc
dec
insl
mov
adc
push
stos
out
sub
lods
insb
les
int3
cmp
ljmp
lea
std
mov
in
xchg
sub
or
jbe
push
xchg
shl
int
bnd
push
mov
xchg
loop
and
pop
neg
xchg
int
pushf
pop
mov
jae
xchg
ljmp
push
gs
xor
jmp
or
xor
outsl
or
aas
jbe
xchg
pop
cwtl
pushf
mov
movsb
mov
ja
add
jo
mov
stc
lods
sbb
pop
push
stc
inc
dec
sbb
xchg
fstpl
lea
aam
adc
or
icebp
clc
movsl
popa
push
mov
mov
adc
inc
iret
dec
bound
pushf
into
imul
add
xchg
stc
or
fsubrl
sub
scas
ficoml
sub
push
and
adc
leave
sbb
repz
lea
xchg
sub
stos
jno
test
xchg
pop
mov
mov
js
push
mov
pop
pusha
cwtl
in
imul
or
push
pop
andb
mov
xor
push
mov
test
insl
daa
scas
mov
jne
dec
insb
or
mov
lcall
fwait
insb
push
iret
test
adc
jnp
lret
hlt
orb
or
mov
out
mov
inc
cld
iret
dec
insb
jo
ds
sbb
arpl
lcall
fwait
or
push
ret
pop
int3
cmp
xchg
sti
mov
cs
mov
imul
call
push
and
push
mov
xorl
lcall
pop
les
mov
incl
inc
dec
cmp
push
sar
test
push
mov
mov
adc
jnp
pop
and
jnp
pop
pop
sub
pop
mov
dec
cld
shll
xor
int
lcall
repz
jl
xchg
fxch
mov
mov
dec
int
and
ret
sub
sbb
andb
rcrb
mov
push
adc
mov
fwait
rclb
adc
push
push
and
fistpll
and
sub
mov
mov
cmp
aad
or
jne
mov
pop
or
nop
inc
inc
jl
xchg
lods
pop
popf
mov
cmp
push
and
add
pop
inc
and
sbb
dec
or
test
shll
push
call
xchg
dec
cwtl
and
cmpsl
inc
cmp
rorl
jg
das
xchg
out
adc
int
notl
push
inc
bound
cmp
pushf
or
push
push
push
ret
lret
sbb
nop
imul
mov
push
mov
nop
or
jp
add
jg
add
mov
mov
pusha
int3
pop
and
mov
stc
cmc
pop
pop
xor
pop
lods
insb
in
sub
fistps
mov
sahf
sub
out
std
dec
xchg
test
cmpsb
jns
sbb
clts
ret
pop
scas
adc
push
mov
popa
mov
ljmp
mov
xor
lods
or
lock
das
xor
inc
add
jp
push
cmp
inc
int
add
pop
cmpsl
cmpsb
dec
sub
jne
mov
testb
cltd
jecxz
sbb
gs
jnp
addl
or
ds
xor
iret
jae
jne
mov
sarl
pop
int
in
add
pop
dec
push
adc
jbe
pop
pushf
push
movsl
add
loope
push
pop
sbbb
mov
sahf
shrb
jle
add
pop
ds
pop
sub
leave
shrb
xchg
dec
pop
nop
inc
fisttpl
sbb
mov
int
cmp
out
or
cmp
adc
sahf
xor
mov
or
loope
pop
pop
cli
fadd
inc
or
mov
mov
scas
mov
pop
push
fisttpl
xor
fistl
aam
sbb
xorl
jge
or
int
enter
xor
mov
xchg
movsb
icebp
flds
add
je
inc
mov
mov
lret
es
xchg
call
jl
les
lcall
dec
dec
scas
sti
aad
mov
add
shll
std
into
in
push
adc
lock
rcr
adc
inc
xchg
popa
insb
xor
xchg
lret
cmpsl
test
xchg
xor
int3
fidivs
cwtl
int3
insb
testl
popa
cmp
pop
xor
rorl
or
lds
adc
inc
pop
idivb
adc
std
mov
stc
mov
pop
mov
adc
roll
inc
mov
ds
mov
dec
push
dec
sbb
loope
mov
or
xchg
fwait
adcl
mov
dec
nop
pop
xchg
lods
dec
adcl
push
mov
dec
jb
mov
add
push
and
cmp
cmp
mov
mov
mov
scas
int
dec
inc
lea
fstpt
mov
vlddqu
in
aam
cmpl
and
and
mov
pop
inc
sbb
sbb
add
jl
jge
rol
lods
mov
adcb
xchg
push
scas
outsl
cmp
fsubp
cmp
inc
cwtl
insl
cs
stos
push
int3
sub
loop
das
outsb
mov
and
gs
mov
sti
pusha
mov
xchg
lret
clc
sahf
aam
mov
pop
mov
sti
insl
lahf
cltd
cld
test
mov
mov
pusha
mov
pusha
adc
cmpsl
dec
out
stos
and
inc
sbb
rolb
aas
push
xchg
mov
les
mov
dec
sub
pop
into
fs
and
rcrl
cmp
aam
or
aad
imul
mov
pop
inc
adc
sub
push
in
cmp
or
sti
xor
or
jmp
into
sub
sub
pop
adc
dec
xchg
push
push
out
adc
lea
jecxz
cwtl
push
rcll
lret
std
xchg
addr16
push
ja
xchg
loope
cs
leave
jns
pop
ds
std
cmp
inc
add
xchg
mov
pop
sti
adc
sub
pusha
sbb
aam
leave
or
cmp
arpl
cmp
loop
inc
mov
lret
movl
push
aaa
rcrl
xchg
mov
dec
jns
or
insb
fidivrl
push
or
xchg
push
cmp
push
push
mov
xchg
ret
jge
ror
adc
in
shll
push
or
loopne
cmpsb
shlb
or
fdivl
mov
add
insb
adc
scas
mov
inc
mov
filds
sbb
lcall
mov
jnp
sbb
notrack
cmp
mov
push
inc
cmpb
pop
inc
add
arpl
xor
idivb
push
dec
clc
mov
push
sarl
mov
outsl
enter
in
pusha
jno
mov
jnp
ret
andl
jmp
mov
scas
and
roll
mov
int
test
lahf
cmp
sbb
outsb
les
push
inc
fnstsw
cltd
push
cwtl
inc
add
cmp
cmp
nop
sbb
and
mov
daa
push
pop
mov
xchg
fdivrl
ror
push
inc
dec
push
inc
mov
mov
mov
test
xchg
mov
rcrb
fs
rcr
inc
cmp
pop
push
orb
loope
add
or
pop
aaa
rorb
pop
enter
cmpsl
adc
jne
cwtl
push
pushf
and
jbe
imul
leave
push
movsl
fcmovnb
and
arpl
pop
cmpsl
mov
int3
hlt
jle
lcall
ja
lods
add
repnz
fucomi
and
dec
mov
xor
fpatan
push
adc
bound
xchg
je
daa
sbb
les
xchg
jnp
test
or
xor
into
shlb
popa
imul
jno
mov
pop
insl
stc
ss
pop
fwait
push
pop
mov
mov
sub
lret
mov
fwait
pop
pushf
sub
mov
lcall
and
out
adcb
std
dec
dec
filds
lods
mov
adc
add
jl
push
pop
into
call
insb
mov
pop
jp
jle
push
xchg
sub
dec
enter
shl
add
inc
sbb
sbb
pop
dec
or
inc
js
xor
adc
mov
mov
add
push
xchg
add
outsl
push
and
mov
js
fs
test
sbb
fisttps
pop
dec
xchg
jbe
jno
dec
orb
pop
stc
pop
int
jmp
and
cmpsb
mov
insl
or
inc
sub
add
jns
sbb
push
push
cmp
cmp
bound
sti
sub
insb
cmp
mov
fsubr
pushf
imulb
jbe
jo
in
pusha
cs
add
hlt
sbb
mov
dec
inc
xchg
mov
add
sbb
mov
popl
mov
xchg
daa
ljmp
jp
int
add
push
rolb
pshufw
sahf
mov
inc
jns
push
cmp
mov
ret
loope
test
pop
pop
shlb
ret
imul
mov
mov
int
dec
stos
pop
xchg
shlb
jl
pop
clc
xchg
dec
popf
cmc
xorl
rcl
loope
push
inc
xchg
mov
pop
sti
fbld
or
pushf
imulb
lret
mov
xor
fstpt
jne
add
stos
sbb
dec
lea
int
xor
mov
mov
mov
daa
jbe
outsb
push
jl
fsts
std
pop
std
cld
jb
outsl
mov
and
aad
push
xchg
imul
xor
out
pop
or
popa
iret
loop
incb
sti
jnp
out
mov
mov
fucomp
outsl
pop
int
cwtl
popf
rol
jnp
shlb
pop
sub
repz
sti
das
imul
inc
xlat
add
mov
test
mov
dec
mov
imul
sbb
pop
sub
jmp
adc
mov
std
sbb
xchg
fucompp
rclb
dec
int3
cmp
cmp
cltd
lret
xor
cli
aaa
mov
hlt
mov
int3
pop
cmp
or
cmp
les
add
xor
xchg
call
test
sti
fisttps
jp
fistl
inc
mov
in
mov
mov
jnp
sti
lea
insl
or
or
in
mov
jbe
lahf
call
mov
sub
mov
mov
cltd
stos
mov
and
sub
sub
sti
inc
dec
cs
fadd
movsl
int
push
push
ljmp
pushf
aaa
js
dec
mov
mov
push
mov
sub
mov
out
outsb
inc
daa
inc
clc
fistpl
jb
and
adc
or
add
jnp
idivb
lods
cmp
into
jbe
sarl
out
dec
push
or
insb
lcall
lock
sti
mov
repz
cld
aam
mov
ud0
jge
jl
das
fwait
cmc
fwait
or
leave
push
out
cmp
cmpsl
or
stos
mov
aas
add
js
push
decl
ret
fwait
popf
dec
shrl
jno
ret
mov
inc
cltd
mov
inc
test
in
loop
or
es
xchg
outsb
xor
das
lods
or
cmp
mov
dec
cmp
jae
adc
cmp
xchg
mov
or
cmp
push
xchg
push
pop
mov
inc
jmp
jnp
lods
sti
loope
das
jl
je
sbb
nop
inc
mov
dec
lods
or
mov
mov
test
jge
push
inc
or
movsb
push
mov
pop
out
test
jnp
into
pop
cli
sbb
add
ds
xor
dec
or
add
data16
repz
hlt
cmp
jbe
cmp
xchg
sub
pop
dec
gs
mov
fwait
push
std
fldl
dec
cld
push
ja
sahf
pop
call
fwait
cmp
pop
rol
cmp
adc
fistpl
jb
pop
dec
lods
lahf
push
mov
subl
es
nop
xchg
lods
mov
push
pop
les
pop
jge
push
sbb
rcl
nop
push
jl
shll
sbb
push
dec
mov
pop
xchg
imul
stos
les
inc
and
in
xchg
cld
sti
inc
test
xchg
sti
xchg
mov
cwtl
mov
cmp
lds
dec
bswap
pop
cmpsl
lea
std
pop
mov
xchg
outsl
mov
aas
sar
test
mov
mov
or
sahf
insl
adc
inc
into
adc
inc
sub
inc
jge
push
mov
ret
dec
pusha
xor
dec
data16
fnstsw
rcr
pop
mov
add
dec
gs
and
outsb
sub
mov
nop
mov
repz
or
movsl
int
inc
push
insl
cmpl
push
ds
sbb
inc
cs
jecxz
and
adc
add
scas
imul
jnp
fld
xchg
mov
mov
xchg
data16
pushf
in
insb
stos
orl
inc
cmp
mov
divb
cmpsl
mov
xorb
adc
jl
int
xor
nop
xchg
je
int3
unpckhps
lods
sti
insb
stc
icebp
sbb
adc
mov
jl
pop
mov
pop
movsl
mov
stos
dec
outsb
xor
loope
or
daa
dec
insl
adc
sub
sub
ret
repz
mov
adc
arpl
dec
xchg
add
pop
pop
and
jb
sarb
mov
pop
adc
gs
fcompl
push
mov
mov
sbb
xchg
xor
push
pushf
mov
sbb
test
call
iret
pop
rcll
fwait
dec
int
push
das
xchg
cltd
xchg
fs
loopne
dec
mov
push
orl
jnp
xchg
testb
sub
cmp
lcall
mov
clc
pop
cmc
fs
ds
push
int3
lahf
jp
jg
or
lea
movsl
or
ret
popf
pop
aad
cwtl
cmp
dec
xchg
xchg
inc
and
cltd
xchg
mov
cld
insb
xchg
sub
pop
ret
dec
lods
mov
xchg
push
add
mov
inc
mov
mov
jg
or
in
fucomp
bound
dec
fidivs
aaa
outsl
addl
lds
xor
cld
dec
or
scas
xchg
out
inc
dec
lods
shlb
push
fwait
cmp
jl
loope
jl
rcll
in
mov
jg
mov
mov
push
inc
sti
rolb
jl
xchg
push
loopne
lods
mov
ljmp
cmp
fldl
mov
ds
push
mov
into
or
fnsave
sub
cmp
push
ret
sti
cmp
pop
test
and
jge
fwait
adc
arpl
xlat
pop
imul
jb
add
xor
xchg
pop
int
mov
js
sub
jge
sub
enter
ret
in
push
cmp
push
stos
inc
cli
daa
inc
addr16
mov
mov
sbb
and
xchg
lcall
sti
dec
push
lods
inc
pop
sub
int
aas
ret
int3
fldl
and
push
sub
jb
movsb
cmp
idiv
sub
fsubs
add
stos
icebp
imul
xchg
stos
adc
adc
or
lcall
cmpsl
cwtl
fwait
mov
fldcw
push
repz
mov
jns
iret
jnp
pusha
rcrb
push
pop
mov
into
lcall
or
push
or
mov
stos
fwait
jp
dec
insb
arpl
rol
mov
jbe
or
hlt
mov
cmpl
sti
pop
pop
mov
inc
jnp
dec
jne
xor
int
fdivl
dec
ss
cmp
cmp
xor
pop
sub
lea
and
fadd
xor
into
xchg
mov
in
ficomps
ret
ret
or
and
or
mov
inc
xor
jecxz
dec
sahf
orb
sub
cmp
xchg
das
roll
sti
xor
dec
lods
xor
in
in
jnp
cmp
sub
mov
pop
adc
add
xor
cmp
pop
lahf
xorl
mov
ds
cmp
fwait
mov
lea
xchg
out
mov
iret
sbb
ficompl
inc
test
nop
jb
or
jne
mov
or
pop
insb
aam
rclb
mov
sub
in
and
out
sti
sbb
imul
subb
jle
rol
test
pop
hlt
arpl
repz
mov
add
push
fidivl
fsubs
movsl
lea
push
xchg
dec
inc
sahf
cmpsb
lret
xchg
adc
mov
dec
movsb
xor
je
adc
mov
pop
in
rolb
push
push
ficoml
movsl
dec
cmp
aaa
dec
inc
loopne
mov
pop
dec
jge
mov
push
jmp
stos
mov
add
xor
data16
lret
adc
jmp
cmc
jnp
repnz
pop
cmp
add
ds
lcall
or
mov
add
mov
shll
or
scas
mov
sub
dec
pop
add
mov
jp
cmpsl
push
mov
stc
sahf
mov
orb
mov
mov
push
cmp
fwait
push
repnz
push
sbb
clc
add
ss
and
movsb
push
clc
js
loope
mov
xchg
mov
pop
movsb
jnp
mov
insl
cmp
sbb
mov
andb
pop
ret
pop
stos
sbb
mov
aad
call
jge
sbb
lahf
filds
mov
fcompl
std
je
dec
adc
pop
fimull
xlat
jge
sti
fists
and
fdivl
add
imul
mov
clc
insb
adc
mov
cltd
sar
movsl
sub
mov
or
push
and
in
cmp
jl
fsubl
sti
dec
xchg
mov
mov
fimuls
inc
loope
cmp
outsl
mov
lahf
sbb
xor
dec
out
jo
int
sub
mov
mov
rcrb
int
push
shll
loope
jnp
xchg
xchg
mov
insb
std
jb
mov
out
stc
or
xlat
mov
pop
fstpt
push
dec
cmp
push
push
lahf
fsubr
cmp
jecxz
xor
xor
push
mov
into
inc
jno
and
orl
xor
adc
movsl
mov
pop
test
mov
sbb
cmpsb
pop
lret
push
and
je
cmp
call
mov
jg
mov
dec
dec
mov
fisubrs
test
lret
incb
jg
pushf
adc
dec
inc
repz
shr
sub
clc
xor
cmc
lods
les
inc
cmp
lods
pop
inc
inc
ret
sti
fwait
mov
xchg
sar
xlat
jp
nop
lea
xchg
rcrb
aaa
std
adc
mov
mov
and
mov
push
jnp
jb
lret
lret
dec
or
testl
jmp
mov
adc
int3
pushf
cmpsl
adc
jne
aas
dec
pop
push
cli
repz
test
xor
shr
nop
add
mov
mov
sub
ffree
and
lahf
incl
and
pushf
and
mov
pop
mov
out
pop
jl
inc
pop
rorb
pop
shll
fs
dec
sub
enter
stos
test
dec
push
movsb
es
in
or
mov
pop
jae
jp
mov
into
sub
fs
push
mov
xor
mov
mov
mov
arpl
xchg
leave
repnz
cmp
mov
fs
jmp
test
outsb
jle
sbb
ret
cmp
push
jl
fidivrl
dec
mov
sti
dec
mov
sahf
jno
loop
add
rorl
icebp
mov
dec
jne
neg
jg
cmp
dec
cmp
mov
add
dec
inc
inc
xchg
pop
out
mov
fwait
mov
leave
test
std
sbb
jge
mov
pusha
adc
dec
test
add
adc
mov
imul
mov
inc
mov
out
pop
jl
mulb
mov
or
pop
stc
inc
pop
xchg
push
lret
push
xchg
mov
adcl
dec
loop
lea
mov
jo
cmp
das
xor
xor
nop
movsb
int3
jecxz
lahf
jae
sarb
dec
fwait
xchg
pop
std
mov
xchg
enter
dec
dec
pop
xchg
sub
lea
mov
test
pop
rclb
mov
cmp
test
cld
mov
fidivl
push
mov
pop
aam
sub
push
sub
int
mov
jb
int3
mov
sub
gs
lods
mov
cmp
mov
addr16
subl
in
jge
xor
jmp
data16
outsl
cmp
shll
pop
jnp
pusha
dec
cmp
dec
loop
mov
stos
or
xchg
push
hlt
ficomps
jnp
sti
fadds
adc
clc
xlat
dec
jg
or
mov
jge
orb
out
nop
mov
cwtl
mov
outsb
js
movb
adc
lahf
sbb
inc
lock
xchg
mov
cmp
jmp
or
imul
dec
add
or
movsl
mov
cmp
add
xchg
int3
arpl
jge
pop
int
sti
pop
repz
jge
xchg
dec
mov
pop
rcll
pop
ret
jbe
dec
xchg
push
push
std
inc
ljmp
insl
mov
movntq
out
push
jns
sahf
push
xchg
add
adc
pop
inc
rcrl
pop
dec
scas
add
les
mov
hlt
popf
ja
int
adc
mov
pop
movsl
jg
or
add
ret
push
push
sbb
mov
je
dec
cs
mov
and
mov
mov
inc
pop
lea
and
push
or
sar
arpl
into
loope
mov
cmp
inc
cmpl
movsl
es
cld
lret
shrl
jne
arpl
rcrl
arpl
and
jle
ds
lods
int
dec
push
pop
ss
lea
xchg
pop
in
sti
pop
jge
mov
xchg
sahf
nop
in
hlt
mov
repz
inc
out
jnp
iret
xor
pop
sbbl
push
jle
fcmovnu
aad
and
gs
bound
mov
arpl
std
jge
dec
loope
imul
sbb
pop
jns
subb
out
mov
daa
mov
sbb
ret
jns
push
gs
lahf
push
movsb
sahf
fldl2t
mov
cmp
out
jnp
jns
inc
mov
rcl
leave
inc
mov
sub
cmp
xchg
fsubrl
or
fisttpl
xlat
mov
out
inc
dec
fmull
fisttpl
mov
mov
push
sub
sub
aad
push
or
std
pop
cmpsl
or
cli
cmpsl
out
rolb
xchg
mov
mov
jnp
shl
jno
add
add
adc
adcl
mov
arpl
xlat
and
sbb
inc
xchg
push
test
movsl
sbb
push
aad
sbb
outsl
dec
rolb
lods
scas
mov
mov
xchg
sti
sahf
lods
insb
mov
cmp
mov
in
xchg
sti
mov
lods
inc
push
and
add
dec
aad
inc
fcomi
pop
call
fidivrl
or
sub
rcr
ss
into
mov
xchg
cli
inc
dec
jb
push
fs
mov
imul
jge
xlat
and
pop
sbb
jle
shll
mov
pop
cld
cs
lock
cmp
popf
cmc
and
mov
add
pop
cmp
scas
cmp
xchg
mov
stos
push
mov
jnp
and
adc
push
out
xor
mov
jge
orl
jp
fcoms
pushf
les
lock
sti
or
fildl
fwait
outsb
xor
dec
dec
cli
push
mov
inc
mov
faddl
jl
cmpsl
jne
mov
xchg
push
or
nop
lods
mov
mov
lret
aad
int
adc
inc
jae
cmp
movsl
jnp
and
pop
int
and
js
jo
shl
pop
mov
int
clc
int3
add
fdivr
inc
push
mov
jg
mov
jl
jp
cmp
or
mov
shll
jmp
test
mov
jge
pop
pop
imul
jne
leave
mov
out
mov
sbb
mov
xlat
jne,pn
mov
jae
add
cmp
pushf
dec
int
add
out
or
inc
lret
add
int
ds
fistps
push
jno
fstpt
xor
ret
ja
and
pop
inc
cmp
pop
les
mov
addb
push
mov
mov
push
xchg
rorl
mov
cmp
sahf
jmp
insb
mov
push
or
sbb
int
xchg
lods
mov
pusha
mov
fdivrl
sbb
jl
xchg
mov
push
cs
pop
sbb
or
push
aas
inc
movsl
or
dec
cmp
add
ds
sbb
notb
or
cmp
adc
xor
popf
sub
mov
mov
imul
pop
dec
loopne
rclb
jl
cmp
mov
inc
ljmp
add
cltd
sub
mov
pop
adc
mov
pushf
lahf
dec
xchg
dec
or
insb
daa
mov
dec
sti
adc
mov
addr16
int
daa
adc
insb
je
jg
jl
rcrb
enter
dec
sbb
rcll
mov
mov
les
lods
scas
repnz
cwtl
adc
mov
mov
add
mov
or
mov
ja
cmp
cmpsl
pop
and
test
push
adc
sti
mov
and
cmp
push
sub
or
fmul
rclb
std
sub
filds
dec
adc
cmp
fwait
adc
push
and
fimull
cmp
rorl
sbb
sbb
dec
int
imul
or
push
scas
sbb
mov
sub
dec
inc
stos
nop
lock
mov
pop
mov
xchg
jns
fists
push
mov
push
jb
mov
cltd
mov
inc
jno
mov
push
shlb
push
xor
nop
lods
sbb
rorb
fwait
mov
pop
or
or
aaa
rcl
xor
jp
cmp
cs
mov
add
je
jns
push
xor
outsl
push
inc
pop
mov
test
int3
test
xchg
sbb
shlb
inc
out
loope
add
cld
pop
loopne
int3
add
ljmp
popa
push
je
mov
xchg
cmpsb
xchg
mov
fs
rclb
xor
stos
mov
dec
dec
addb
ds
push
or
sub
sbb
sbb
data16
push
stos
sahf
mov
stos
dec
cmp
into
in
push
imul
mov
mov
or
fwait
rcll
mov
test
cwtd
sti
fbld
mov
shl
or
dec
fwait
ja
shlb
ja
xor
mov
in
sbb
adc
jnp
popa
fldl
pop
lea
pop
pop
mov
pushf
lods
push
sub
in
rcrb
fbld
mull
scas
fsubl
in
aad
sbb
lcall
fldlg2
and
or
fstpt
fstpt
js
mov
aad
mov
sbb
xchg
sti
jb
lock
leave
or
sub
dec
insb
sbb
mov
jecxz
dec
cmp
jnp
stos
outsl
pop
xchg
cmp
int
pop
dec
or
sub
repnz
lcall
dec
sbb
test
xor
iret
rolb
mov
fucom
stos
jb
sti
jnp
push
das
push
mov
mov
dec
dec
push
mov
or
mov
cs
sti
rorl
mov
mov
xchg
sahf
fwait
inc
sti
popa
cmp
sbb
cmp
inc
jnp
insb
lret
mov
xchg
push
nop
into
mov
sub
adc
inc
jns
add
mov
out
add
bound
cld
jp
adc
je
test
and
or
pop
jl
cs
pop
cmp
dec
lds
mov
pop
jl
fs
cmp
mov
lahf
push
xchg
nop
xchg
mov
sub
xchg
jecxz
sti
nop
sub
jecxz
cld
repz
es
int
xor
jns
xchg
mov
lods
dec
or
imulb
and
cmp
cmp
push
adc
daa
inc
cmpsl
int
ljmp
movsl
js
popf
or
imul
outsl
imul
cmpb
cmc
pusha
or
sbb
jg
adc
lret
pop
jbe
mov
fcompl
add
and
lahf
mov
jo
cwtl
or
sub
and
jo
mov
jg
repnz
mov
das
out
cwtl
ds
aas
cmp
aam
dec
jnp
mov
mov
popa
roll
popf
dec
xchg
scas
in
faddp
fstpt
inc
cmp
mov
jnp
jl
mov
int
std
jl
and
cltd
mov
or
mov
and
push
fsubrp
cmc
aam
xchg
cmp
mov
test
std
mov
dec
adc
pop
cmp
lcall
xchg
pop
sahf
cmp
sub
arpl
fwait
dec
and
test
in
sarb
mov
iret
adc
aaa
aam
xchg
loopne
jnp
jo
mov
aas
xchg
int3
mov
sbb
cld
dec
and
mov
lock
xchg
sbb
out
jbe
mov
dec
or
jns
outsl
rorl
sbb
mov
cmp
jne
decb
cmpl
leave
mov
push
inc
pop
pop
sahf
mov
sbb
movsl
ljmp
cmpsl
lret
jmp
fstl
rolb
or
push
mov
cld
es
data16
sbb
mov
xchg
jo
xchg
cli
in
pop
aas
jl
pavgb
push
or
xchg
insb
std
jecxz
mov
jle
insl
xchg
int3
test
mov
fstps
xchg
jp
cs
popf
mov
push
cmp
adc
stc
bound
arpl
jnp
add
pminub
sub
scas
mov
faddp
push
push
aas
out
or
lret
data16
push
jle
cmpb
add
in
adc
repnz
mov
lods
notb
push
imul
cmp
jnp
mov
cmc
das
cmpsl
jg
arpl
pop
push
xchg
dec
push
add
xchg
and
pop
repz
cmc
inc
lea
rolb
in
scas
jp
dec
int
pop
cmp
cmp
nop
mov
or
int
xchg
lea
pop
mov
or
push
fcoml
jge
mov
out
cmp
dec
pusha
pop
cmp
or
fildll
mov
call
test
cmpsb
loope
imul
xchg
or
test
push
sub
jmp
cmp
xchg
jne
sarb
shrb
sti
cmp
add
test
mov
cmp
cld
xor
sub
lods
inc
outsl
xchg
inc
jae
push
add
pop
xor
lock
or
insl
bound
push
sar
popf
lcall
mov
sbb
mov
jg
cmp
gs
sub
inc
ret
popa
dec
pop
rolb
cmp
xchg
bound
sbb
dec
sbb
lods
mov
mov
adc
add
or
lret
mov
les
and
dec
jge
sti
jle
outsb
sti
mov
arpl
pop
test
mov
mov
es
sub
sbb
shlb
jnp
out
adc
push
xchg
movsb
mov
jmp
push
xchg
cmpsl
insb
mov
add
sub
mov
xchg
imul
fwait
pop
adc
dec
out
jnp
inc
dec
in
pop
scas
mov
int
sbb
cwtl
sbb
mov
repz
jp
lret
xchg
push
clc
cmp
push
xor
push
mov
cmp
add
jp
iret
dec
pusha
cmp
fstpt
out
test
jmp
push
aam
mov
xchg
sti
mulb
xor
out
mov
addr16
jge
push
add
sbb
cmp
cmp
out
mov
mov
xor
mov
pop
lea
cmpsl
push
pop
mov
addb
fildll
es
or
sbbb
add
pop
mov
fcmovne
mov
push
ficoml
imul
pop
xchg
xor
xchg
dec
fcompl
lods
aaa
xor
mov
xchg
jnp
in
aam
test
cmp
sbb
push
lods
jmp
movsl
adc
sbb
mov
push
fldcw
inc
cltd
push
jl
push
xor
push
mov
ror
xchg
int
sbb
adc
mov
scas
jbe
and
call
into
mov
push
out
sbb
mov
in
push
std
jnp
test
pop
jnp
jle
dec
gs
inc
repnz
and
in
shrb
int
inc
cmp
mov
arpl
xchg
mov
mov
pop
add
sub
movsb
popa
and
mov
nop
insl
mov
aaa
pop
xchg
dec
popa
icebp
es
push
dec
int
shll
into
jle
and
or
inc
push
js
dec
mov
cwtl
andl
xlat
lea
insb
sar
or
lods
cmc
push
or
pushf
popa
aaa
xlat
mov
xor
test
sar
xchg
lret
mov
push
jmp
fwait
in
xchg
fsubl
inc
shlb
jp
xchg
repnz
insl
dec
or
and
stc
pop
push
sub
pop
jmp
stc
add
mov
ret
adcl
push
pusha
xor
scas
outsl
ds
cmpl
mov
repz
cli
call
iret
push
cli
sbb
sti
rorl
sbb
ljmp
dec
andb
dec
stos
ja
dec
jge
in
jb
jecxz
je
outsl
repz
aas
push
int
or
mov
mov
cmp
push
or
pushf
mov
test
adc
add
jbe
dec
cmpsb
xchg
push
jns
adc
jbe
aaa
xchg
mov
push
mov
inc
insb
ret
cli
mov
adc
pop
andl
insl
push
loopne
add
push
int
pop
fbstp
pusha
fidivrl
mov
sti
inc
je
jecxz
mov
push
sbb
mov
out
std
outsb
xlat
xchg
inc
dec
dec
pop
jl
jl
adc
jecxz
dec
pop
and
movsb
xlat
dec
cld
mov
mov
into
ljmp
lock
cs
fwait
sti
lods
adc
sub
scas
jnp
jg
and
xor
js
rcll
pop
dec
jnp
out
push
cli
cmc
ljmp
sahf
jno
jnp
mov
decb
call
lret
lcall
xor
movsb
mov
fildl
jb
mov
call
and
dec
out
sti
xchg
push
cmp
fs
sbb
popf
mov
jnp
pop
push
mov
jnp
push
arpl
pop
jl
mov
jecxz
dec
adcb
pop
and
lahf
repnz
push
in
cmp
jbe
push
sub
push
and
fisttpl
cld
adc
pushf
pop
in
aad
mov
push
push
add
fs
shrl
jnp
pop
rcrl
mov
ficomps
adc
std
andl
mov
cmp
push
sbb
inc
xchg
ja
cmpsl
les
cld
sbb
pop
push
cmp
add
inc
outsb
fists
int
pop
dec
stos
xor
xor
and
and
es
mov
aam
sbb
ds
int
mov
cli
lods
in
adc
mov
fcompl
pop
mov
test
neg
repz
or
je
jmp
and
leave
fadd
insl
dec
mov
int
inc
cmp
push
inc
divb
xchg
call
cmc
das
punpcklwd
or
movsl
jns
xchg
aaa
cs
idivb
mov
pop
ds
gs
sub
pop
out
hlt
cmp
xchg
cmp
mov
lock
dec
je
outsb
insb
adc
jno
push
jg
add
outsl
mov
and
std
sub
fists
in
sahf
jne
cmp
sarb
jle
stos
stc
dec
in
out
push
adc
cmp
stos
sbb
lock
mov
in
or
dec
fmull
dec
pop
fs
xor
push
fucom
pusha
ss
or
xor
mov
xor
insb
mov
dec
inc
scas
dec
rol
mov
cmp
and
sub
out
jo
cmp
lret
inc
xchg
lret
sti
hlt
insb
xor
and
nop
leave
fstl
xor
iret
dec
jmp
inc
rorl
push
lahf
dec
shlb
or
adc
clc
pop
lret
cmp
dec
add
pop
movsl
je
fprem
xor
or
icebp
les
fdivp
dec
sub
mov
adc
pop
push
mov
mov
inc
divb
int
adc
mov
psadbw
sbb
je
adc
nop
pop
into
lret
inc
pop
psraw
es
in
mov
mov
nop
hlt
aaa
cmc
pop
jecxz
cmp
add
scas
sarl
cld
movsl
stc
jmp
jnp
stos
and
dec
gs
jmp
jnp
in
pop
cmp
ficoml
pushf
imul
add
rorl
hlt
outsl
movsl
test
lcall
stos
sti
push
or
bound
aam
pushf
dec
cmp
and
mov
pushf
jnp
xchg
or
cmp
pop
decl
dec
fsts
inc
cld
sbb
jo
lods
push
lret
shr
jl
add
test
adc
outsl
shrb
dec
fists
cltd
sti
sti
push
insl
add
addl
jnp
fs
jne
jno
cmpsb
pop
std
js
push
movsb
adc
lcall
dec
mov
aaa
mov
lods
xchg
mov
sti
sti
sbb
xchg
mov
and
fs
xor
push
cmp
pop
push
xorb
pop
sub
shrb
push
subl
dec
inc
mov
shrl
adc
and
add
jne
aam
dec
push
xor
aas
jmp
mov
roll
xor
pop
mov
rcl
inc
jl
test
mov
mov
inc
sub
jmp
aad
arpl
xor
or
lods
addb
mov
cmp
in
add
loopne
pcmpgtw
or
loopne
mov
jecxz
enter
icebp
cmp
dec
enter
add
or
xchg
adc
sbb
xor
fcom
bswap
mov
lcall
rcrl
lret
push
jne
jl
cmp
xor
lea
push
mov
or
or
cmp
fadds
sub
adc
push
in
add
out
jo
movsb
jecxz
cwtl
pop
fucomp
jecxz
push
clc
mov
es
jnp
pop
fs
mov
out
into
push
popf
cmp
scas
pop
jecxz
scas
dec
mov
dec
sub
movsl
push
ljmp
outsl
xor
xchg
adc
cmpsl
or
pop
cmp
sti
mov
aam
cmp
dec
cltd
and
aad
out
aam
mov
lods
mov
jmp
insl
stos
or
pop
and
cmc
mov
inc
aam
xchg
dec
mov
cld
push
mov
cmpsl
ds
mov
cmp
pop
dec
pop
jo
mov
das
into
mov
ret
test
jno
imul
mov
pop
fildll
test
adc
pop
adc
aad
lcall
add
mov
xchg
mov
xor
cmp
add
lea
add
jl
pushf
xchg
xchg
mov
outsb
xchg
test
mov
xor
jmp
pushf
in
or
adc
pop
in
cmp
fcomip
cwtl
dec
test
lret
jnp
roll
dec
adc
inc
mov
sti
iret
into
outsl
in
pop
mov
mov
pop
scas
dec
scas
jbe
push
mov
sarb
sbb
lea
jns
pop
jae
nop
cmp
notb
mov
cmp
mov
int3
aaa
iret
adc
jnp
stos
dec
jle
dec
repz
ret
int
or
ret
mov
pop
inc
inc
cld
add
lret
cli
js
mov
ret
jns
cmp
outsb
mov
pop
into
xchg
scas
dec
out
enter
and
rorl
leave
orb
aas
pop
xchg
push
loope
mov
cmp
sbb
xor
jnp
push
mov
cmp
push
jne
and
inc
mov
push
xor
cmpsl
loopne
popf
adc
sbb
xchg
push
in
or
push
dec
inc
lcall
mov
add
int
lcall
mov
jg
jmp
mov
unpcklps
out
in
sbb
outsl
cld
repnz
dec
mov
pop
or
gs
jns
sar
pop
popf
dec
and
fwait
cmp
addr16
sbb
push
sahf
and
pop
inc
pop
lods
push
jp
imul
cmp
sti
or
and
popf
jnp
lods
movsb
add
sub
mov
bound
call
lret
mov
int
mov
in
fs
fimull
shrb
test
pushf
dec
lcall
cmpsl
ja
mov
pop
sub
mov
jnp
sub
push
jb
das
iret
jbe
adc
sti
lcall
xrelease
xor
sar
daa
sbb
call
popa
movb
mov
push
outsl
mov
pop
into
lcall
xchg
add
xor
pusha
clc
icebp
mov
mov
repz
xchg
xor
cmpsl
and
orl
fwait
roll
fwait
scas
adc
cmpsl
jnp
pop
mov
xor
mov
inc
mov
mov
mov
add
push
nop
jmp
lret
sqrtps
sbb
mov
iret
test
inc
rorb
ret
cmp
fwait
imul
dec
insb
xchg
movsb
or
pop
insl
push
dec
in
out
adc
cmp
idiv
mov
dec
dec
stc
repnz
cmp
clc
test
fadds
fisttps
sar
aas
cli
iret
dec
cmp
cmc
test
jge
fwait
popa
int
insl
test
add
je
ret
mov
push
repnz
and
jmp
loope
sub
int
pop
jnp
dec
pop
dec
pop
aam
and
sti
or
imul
ja
mov
jle
aaa
rcrl
dec
ret
orb
test
arpl
cli
adc
mov
into
mov
mov
aad
repnz
inc
dec
aam
xchg
rorb
or
xchg
xchg
or
andb
mov
lcall
aas
stc
stos
xchg
and
cmp
xchg
cmp
lcall
popa
xor
and
mov
adc
orb
dec
lea
inc
leave
int
ds
mov
sbb
insl
cld
orl
daa
jns
test
lret
inc
jae
lds
inc
cmp
dec
dec
dec
out
pushf
stos
push
xor
dec
mov
ftst
jl
in
sar
sti
jg
jecxz
jns
cmpsb
ljmp
add
sbbl
dec
inc
or
inc
pop
inc
sub
jno,pt
inc
sbb
push
test
xchg
jnp
rcrb
inc
jmp
jne
add
jns
pop
js
mov
adc
jnp
lea
add
and
pop
loopne
scas
jns
sti
sti
ljmp
push
pop
mov
jne
push
es
fisttps
mov
push
fadds
enter
icebp
mov
insl
fidivrl
lea
mov
dec
xchg
sub
bound
push
dec
add
dec
add
pop
push
mov
add
rcl
insl
xchg
mov
arpl
or
and
ja
lock
lret
jae
mov
jecxz
mov
dec
inc
cld
adc
dec
adc
ds
dec
mov
inc
cmp
pop
add
sti
or
cld
pcmpgtb
xor
dec
mov
mov
xchg
pop
dec
int
mov
int
adc
in
mov
pushf
or
testl
mov
mov
cli
shll
jecxz
mov
int
sub
dec
mov
cmpsl
add
jno
mov
mov
loop
pop
jl
outsb
stos
das
or
movsb
shlb
or
into
mov
mov
int
imul
clc
adc
rcll
int
rorb
mov
mov
jle
dec
insb
repnz
xlat
or
jg
cmp
rorb
enter
cltd
jecxz
mov
repnz
mov
ret
adc
xchg
clc
jl
ss
push
sbb
sbb
sbb
pop
pusha
jp
scas
mov
push
ret
xchg
mov
rep
clc
mov
sbb
inc
inc
push
adc
lcall
xor
inc
adc
lods
xchg
in
sahf
adc
or
inc
add
mov
les
lods
leave
mov
dec
and
out
inc
shll
insl
jmp
test
lahf
pop
mov
packssdw
adc
clc
addl
lea
scas
int3
lods
incb
mov
pop
pop
or
imul
inc
imul
fdivr
pop
sbb
rclb
sbb
xchg
or
dec
jmp
fs
sahf
xchg
sti
mov
mov
push
and
and
pushf
or
sar
pop
pop
data16
dec
xchg
xor
or
or
xor
into
mov
sub
jl
jl
aam
test
jae
inc
jno
shlb
aad
xlat
into
stos
icebp
sub
xor
fsubr
pop
add
movsb
add
dec
push
dec
int3
cmp
js
sbb
jne
xor
adc
hlt
ret
mov
addr16
mov
push
les
or
lea
pop
sub
ds
cltd
sbb
sarb
jae
xchg
enter
inc
popf
mov
pop
fisubrl
dec
cld
fcomps
ret
xor
shr
jl
push
fisubrl
mov
imul
push
insb
jne
sbb
imul
inc
jno
sub
lret
inc
pop
cwtl
imul
aad
adc
scas
mov
lret
dec
inc
lods
or
fistpl
into
mov
xchg
sub
jb
inc
xor
push
cltd
pop
adc
xchg
adc
leave
adc
push
into
mov
cmp
js
jne
xchg
gs
mov
mov
adc
jnp
sbb
jno
pop
cmp
std
mov
js
subb
or
aam
repz
adc
xchg
mov
mov
icebp
mov
mov
cmp
cltd
push
insl
fisttpll
es
mov
mov
mov
inc
mov
xchg
cmp
jecxz
dec
xor
leave
jb
or
cmp
or
jle
lods
xor
jge
cmp
push
jge
daa
mov
sbb
fnstcw
push
cmpsl
cmp
cmp
mov
jl
push
jns
pop
adc
mov
sbb
dec
je
ja
dec
ss
fs
mov
pop
stc
xchg
dec
inc
decl
fwait
sbb
add
cltd
mov
cmp
pop
stos
jecxz
ror
jl
pop
pop
cli
addr16
pop
mov
dec
lahf
or
roll
call
mov
je
cmp
pusha
jo
iret
mov
cld
and
adc
push
idiv
data16
dec
cmp
shll
popf
push
xchg
notb
pushf
sub
mov
jno
sbb
jl
shrl
fs
mov
out
pop
jae
repnz
icebp
or
and
out
push
mov
push
cwtl
dec
push
lods
dec
inc
xor
xchg
mov
or
out
mov
inc
lea
xchg
orl
orb
cmp
int
sbb
cmpl
xchg
or
sbb
add
ja
dec
inc
add
fsubr
mov
in
popa
andl
repnz
adc
lret
adc
jge
push
pop
or
xor
add
cwtl
arpl
push
or
das
loopne
jmp
pop
push
or
das
adc
adc
mov
xchg
fistpl
scas
jnp
jmp
cld
fimuls
mov
sub
lahf
je
imul
inc
jnp
cmp
jecxz
jmp
daa
jae,pn
fcompl
arpl
mov
mov
or
push
dec
int
int
mov
outsb
adcw
inc
xchg
in
scas
push
cmp
sbb
mov
mov
jo
popf
out
scas
mov
jge
cmp
jno
lahf
mov
lods
bound
addl
lds
lock
or
sbb
cmpb
in
jnp
gs
cmpsw
sbb
or
xor
enter
or
fdivrs
shl
push
ss
sub
push
mov
incl
adc
xlat
test
sbb
dec
adc
cmp
imul
and
pop
int
leave
lret
loope
mov
cltd
ds
ret
arpl
add
outsl
jecxz
into
add
cmc
cld
out
sahf
in
movb
jl
aam
sbb
cmp
inc
pop
jmp
bound
je
inc
stos
test
push
outsl
gs
shlb
lods
stc
dec
cmpsb
jg
addl
mov
mov
subl
in
aas
dec
pop
adc
push
call
inc
xchg
dec
movsl
mov
push
push
scas
jnp
xchg
push
in
mov
leave
add
ja
subb
xchg
push
ljmp
adc
lea
cmp
dec
sbb
test
dec
or
jne
cltd
lahf
in
cmp
pop
fwait
mov
aaa
xor
mov
xchg
ret
mov
lods
fsubrl
stos
sub
sbb
repnz
inc
push
add
repz
mov
rolb
push
mov
sub
popf
inc
dec
in
icebp
jnp
addr16
repz
cmp
mov
and
xor
sahf
stos
push
add
inc
adc
xor
mov
jb
out
mov
mov
bound
mov
xor
push
mov
fwait
pop
loop
jne
xchg
sti
inc
push
sbb
bnd
push
mov
and
xor
dec
mov
aas
repnz
inc
jnp
push
dec
cmpsl
leave
hlt
rorl
cltd
clc
xor
jecxz
inc
xor
js
pop
push
testb
jae
adc
mov
mov
xchg
dec
das
and
mov
cmp
cwtl
xchg
jne,pt
push
jnp
ljmp
or
add
stc
ret
pop
outsl
inc
jns
std
test
pushl
adc
inc
jle
mov
sti
mov
or
insl
and
fldl
dec
pop
imul
add
mov
push
imul
sub
mov
jbe
imul
sub
sbb
mov
mov
adc
push
xchg
add
lods
jb
jge
cmp
rorl
inc
test
dec
and
mov
in
test
push
or
test
dec
push
ror
movsb
sti
loop
outsl
cmp
test
xor
dec
into
ds
xchg
inc
dec
inc
outsb
aad
enter
push
pop
addb
add
or
lods
mov
je
mov
pop
push
push
add
insl
push
lret
cmpsl
sti
sbb
pop
mov
mov
mov
mov
sti
roll
sbb
sahf
sbb
adc
mov
mov
jl
sti
cmp
jge
call
mov
mov
or
inc
or
jp
cmc
test
filds
aaa
js
push
fs
shrb
push
pop
lds
mov
imul
xchg
sbb
into
popa
aaa
loopne
push
cmp
cwtl
adc
sti
sub
adc
shl
push
push
mov
xchg
movl
adc
cmpsl
sub
cmc
jmp
add
add
mov
inc
leave
inc
idivl
movsb
in
movsb
sbb
test
xor
std
mov
jmp
cmpsb
sti
mov
rorb
ret
mov
test
out
xlat
mov
pop
mov
lret
inc
adc
pop
insb
int
adc
lret
fucomp
out
mov
xor
hlt
and
sti
mov
dec
scas
mov
pop
adc
insl
xchg
mov
scas
xor
jge
aas
mov
lods
repnz
cmp
dec
mov
retw
inc
cmc
jp
mov
in
jge
push
inc
jnp
fisubrs
nop
mov
and
pop
pop
subl
pushf
dec
mov
sbb
test
mov
mov
mov
or
pop
jg
jp
into
or
js
aam
out
sub
or
jecxz
or
pop
jbe
sbb
jge
inc
push
scas
sahf
in
outsl
dec
jbe
into
xlat
xor
lods
cmp
mov
outsl
rorb
push
xchg
cmp
arpl
adcl
dec
test
pop
out
xor
lods
stos
dec
xchg
pushf
scas
ss
in
sti
cltd
rclb
cmp
mov
sahf
ret
test
dec
fistps
cmp
nop
cmp
adc
imul
mov
sar
adc
inc
dec
or
pop
mov
loop
mov
popf
lret
lret
scas
mov
cmp
adc
push
out
add
pop
lods
fs
push
into
fwait
cmp
int
mov
fcmovne
sti
data16
lds
mov
and
aad
mov
addr16
loopne
cmpl
sub
cmpsl
popf
sbb
mov
lret
ret
lds
shrl
mov
int3
add
mov
std
outsl
addl
cmp
imul
inc
popa
mov
imul
insl
js
stc
add
pop
ffree
pop
dec
aas
pop
jl
xor
jecxz
adc
pop
mov
fists
fwait
mov
pusha
incb
test
push
mov
mov
pushf
aas
fcom
cmp
call
inc
xchg
ja
pop
sbb
test
lock
sarb
xchg
xor
mov
shll
dec
sahf
cmp
sti
dec
lods
aad
cmp
push
xchg
xchg
or
pop
mov
and
mov
std
roll
jl
push
fidivl
add
jo
aas
lahf
dec
mov
xchg
mov
into
std
stos
pop
adcl
imul
outsb
cmp
fdiv
jae
out
les
pop
mov
xchg
arpl
xor
stos
jb
inc
into
les
dec
cmp
pop
push
or
cmp
and
fst
jnp
jnp
cltd
cmp
cmovnp
dec
pop
or
dec
lahf
push
gs
or
aaa
pop
inc
inc
cmp
mov
pop
ljmp
cld
add
lds
in
jnp
cmpb
subb
mov
lcall
xorl
cwtl
cmp
test
xlat
imul
or
cmpsb
push
or
xor
push
pop
fisttps
pop
in
or
dec
lock
inc
insb
jp
mov
daa
lret
jb
ret
sar
inc
pushf
adc
mov
pop
cmp
push
mov
pop
sub
mov
dec
mov
int
int
pop
int
push
push
dec
int
leave
lcall
xchg
adc
xchg
xlat
inc
jno
iret
dec
jg
sub
or
aaa
sub
or
cmp
cli
decl
fwait
out
sbb
mov
iret
adc
mov
cmpsb
pop
cld
repnz
cs
pop
ret
cmp
fwait
mov
pop
sti
xor
ret
das
sbb
push
cmpsl
jmp
jp
int
inc
pop
lcall
push
shrl
orb
pop
pop
fistpl
enter
or
cltd
jl
pusha
xchg
dec
mov
mov
or
pop
jl
and
testb
cmp
dec
dec
not
fwait
jmp
or
xor
adc
jnp
mov
sub
insl
std
scas
sub
outsb
iret
jo
mov
xchg
iret
mov
das
jae
inc
adc
fldenv
mov
mov
jae
dec
add
loope
jle
repnz
fistpll
push
mov
mov
sbb
xor
jl
xchg
jns
test
mov
inc
pop
stos
ds
int
les
mov
out
xchg
or
rcll
aas
push
jg
cmc
out
inc
int
mov
es
ror
cmpsb
rol
or
shrb
int3
nop
dec
jae
arpl
lea
inc
lods
lods
fdivrl
sti
inc
ffree
dec
mov
aad
xchg
mov
movsb
xchg
cmpb
dec
or
cmp
ret
les
test
ja
fcomi
shrb
and
and
lret
dec
inc
les
sub
jnp
jae
mov
out
nop
xchg
fcomps
mov
mov
ret
and
in
int
push
mov
cmpsb
jnp
xchg
insl
sub
ficoms
popf
push
in
sub
xlat
and
mov
jecxz
popf
push
clc
repz
push
mov
cld
sbb
mov
jne
xchg
outsl
inc
cmpb
lods
addr16
int3
push
or
jne
add
jnp
test
aaa
mov
fnstsw
icebp
push
adc
lds
mov
movsb
push
aam
clc
or
adc
xor
dec
mov
pop
loopne
and
outsl
cli
inc
jp
repz
sbb
xchg
xlat
mov
jne
or
jge
aas
sub
fldt
cmp
xchg
mov
jne
in
test
cld
or
adc
jbe
adc
dec
sbb
sbb
dec
inc
int
ret
sbb
dec
jne
sub
mov
push
incb
dec
scas
fwait
cmp
insb
flds
or
push
int
movsb
pop
aam
and
mov
dec
cwtl
jle
shr
ljmp
xchg
mov
cmpsb
pop
push
bnd
aam
jnp
call
test
addl
es
cld
shrb
iret
jns
movsl
fmuls
bound
cmp
push
push
add
jmp
xor
les
ret
in
popa
cmp
sbb
adc
fwait
enter
or
xchg
insl
xorl
cmc
sbb
dec
fcmovnbe
mov
imul
sti
mov
jecxz
mov
jns
pop
movb
xchg
dec
add
or
loop
fdivrl
mov
jno
cmc
xor
std
mov
xchg
cld
cmpsb
outsl
or
imul
xchg
xchg
ljmp
imul
out
test
cmp
dec
mov
aas
jle
mov
push
je
xor
leave
stos
movsb
sbb
cmpsb
iret
enter
ss
dec
sahf
xchg
pop
je
and
mov
dec
inc
popa
mov
xor
cld
int3
mov
jnp
loopne
mov
in
jle
lods
inc
and
sti
in
push
push
mov
cmc
int
hlt
add
push
push
fmull
jo
cmp
cmpsb
ret
inc
jmp
or
pop
aad
sbb
mov
imul
inc
jns
call
jle
fucom
inc
movsb
pop
popf
cltd
cmp
jne
out
and
xchg
pusha
hlt
pushf
rcrl
rcl
or
mov
push
or
out
jp
lds
mov
hlt
inc
mov
dec
pop
iret
adc
mov
and
add
pop
movsl
mov
popf
mov
mov
inc
mov
cmp
dec
pushf
outsb
mov
dec
add
cmp
mov
sub
dec
lea
scas
test
movlhps
cmpsl
lahf
pop
xchg
pushf
and
xchg
cltd
pop
jl
xor
insb
mov
hlt
cmp
mov
mov
frstor
xlat
dec
out
jbe
mov
outsl
sub
push
inc
imul
mov
scas
in
sti
lods
mov
ss
cmp
mov
pushl
daa
jb
push
cli
dec
fwait
adc
cmp
push
fisttpl
push
mov
shr
xor
fildl
push
adc
cs
fstps
in
xchg
jo
jno
dec
push
scas
mov
dec
jge
jne
pop
xchg
sub
xorb
insb
mov
mov
sahf
mov
nop
mov
and
mov
mov
cmp
mov
lret
jle
jb
add
incb
ja
fwait
pop
push
mov
ror
nop
xor
dec
jle
cmp
mov
dec
push
mov
jnp
into
and
jp
pusha
push
aaa
test
ret
rorb
pop
xor
push
and
pop
adc
sub
pop
cwtl
mov
test
sbb
mov
xchg
and
inc
jl
scas
push
pmullw
jb
jp
aad
imul
mov
leave
add
jecxz
frstor
int
aas
in
sar
xchg
js
sti
std
jmp
inc
pop
repz
sbb
pop
cltd
jnp
clc
enter
xor
mov
aad
mov
pop
lods
dec
scas
sbbl
xchg
dec
adc
sub
test
or
cmp
lods
cltd
mov
fisttpll
add
and
imul
inc
jnp
pop
or
mov
push
mov
mov
mov
or
add
ret
push
xchg
insb
ret
inc
cmpb
pop
pop
mov
test
cs
xchg
mov
cmp
jle
jl
cmp
dec
push
sbb
mov
xlat
cli
ret
sahf
sub
scas
or
cmp
or
bndstx
ficoms
lods
jmp
sub
jnp
sub
les
or
jl
ja
decb
idivl
lret
xchg
mov
pop
aas
fsubrl
mov
push
pop
bound
adc
jo
sbb
add
lgs
cli
stos
push
inc
jne
jo
std
xlat
jge
rcl
call
dec
test
xchg
daa
mov
mov
cwtl
movsb
inc
ljmp
jb
jb
jmp
sbb
dec
in
std
test
ret
cli
inc
rorb
lcall
sbb
xchg
xchg
loopne,pn
push
fcoms
fldenv
ss
or
lds
sahf
add
jp
mov
push
sbb
xchg
push
xor
jnp
aas
or
mov
push
in
adc
cmpl
or
enter
or
jae
or
inc
repz
pop
xchg
int
loop
or
mov
sbb
mov
cmp
push
test
in
daa
out
push
sub
mov
xchg
xchg
or
popl
loope
mov
aad
or
pop
sahf
mov
mov
push
out
or
cmp
sar
push
pop
adc
add
push
and
push
mov
adc
aam
inc
inc
dec
imul
pop
fstl
jnp
push
dec
xchg
and
lea
xchg
mov
int
cmp
inc
adc
or
xchg
lcall
sbb
and
aaa
xchg
flds
clc
cli
movsb
int
vpcmov
add
iret
cmp
mov
cmc
lret
mov
lods
sbb
leave
or
and
sbb
cmp
inc
sbb
ret
inc
loope
lds
pmulhw
int
xchg
stos
or
sbb
shr
jnp
shrl
fcmovnu
jmp
mov
je
test
jnp
stos
fnstcw
shr
push
fwait
and
sub
or
jecxz
sub
lods
pop
shl
sarl
sub
fsts
dec
fcoml
jl
es
sub
push
inc
cmp
mov
adc
xlat
xchg
mov
xchg
psubq
or
or
js
adc
cmp
inc
sbb
cmp
cmpsb
inc
inc
int
sbb
bound
jne
lea
inc
in
jp
mov
and
push
mov
mov
pushf
sti
push
cmp
ja
cmp
in
insl
aam
iret
xor
loopne
fcom
divl
jg
fnstcw
adc
pavgw
jl
or
popa
aas
add
pusha
mov
inc
shlb
xor
popf
dec
sub
dec
sub
daa
nop
popf
test
cmpb
scas
or
not
xchg
out
jp
gs
negl
outsb
das
adc
adc
or
arpl
mov
xlat
adc
cmp
dec
inc
ja
sbb
mov
inc
cwtl
hlt
cmp
sub
xchg
xchg
pusha
push
xchg
clc
jno
fcmovnu
inc
xchg
sub
mov
xor
cmp
dec
push
mov
mov
in
ffreep
imul
push
in
fistpl
pop
cmp
or
xchg
inc
xlat
leave
fbld
jae
in
push
aas
cltd
lds
ja
icebp
or
lea
xor
pop
push
les
aas
dec
incb
inc
test
lea
adcl
xor
jnp
std
or
dec
add
and
sarl
mov
sub
cmp
popf
or
mov
mov
out
cmc
jg
xchg
in
setns
inc
dec
or
stos
outsb
adc
repnz
xchg
lea
inc
fistl
push
mov
repz
jnp
jno
ja
shlb
pop
jmp
or
mov
dec
mov
add
inc
ret
sbb
push
xchg
int
and
pop
jne
inc
repnz
lods
dec
aam
shll
incb
daa
mov
test
hlt
js
push
cmpsl
movsb
mov
push
mov
insl
push
xchg
jl
push
jl
in
jb
adc
ja
mov
ret
add
movsb
adc
into
pop
dec
stos
push
outsb
std
out
xor
mov
push
adc
lds
fisttps
xchg
pop
pop
int
sbb
int
xchg
push
or
les
cmp
mov
push
dec
out
fldcw
xchg
cli
aas
add
into
inc
daa
iret
iret
mov
sbb
popf
mov
mov
fwait
jno
adc
xor
sbb
lock
lea
adc
jnp
les
sarb
cmp
push
jne
sub
xchg
push
mov
sti
sub
jbe
push
lea
aad
xchg
lahf
mov
int
cmp
mov
int
push
mov
subb
fiadds
int3
xchg
or
imul
std
cmp
mov
mov
test
cwtl
gs
js
test
push
sub
rcr
aaa
psrlw
add
and
fwait
mov
mov
xorb
les
adc
cli
lods
cs
mov
xor
inc
pop
loope
cmp
add
or
or
and
pop
jg
pminub
adc
sbb
call
xchg
sti
adc
cmp
add
dec
mov
pop
lea
inc
into
pop
jb
sub
cmp
outsb
mov
dec
scas
dec
inc
jne
dec
sbb
dec
sub
rcrl
cwtl
mov
dec
sub
imul
xchg
lcall
push
roll
dec
mov
cmpl
cmovne
insb
add
inc
xorl
add
out
mov
jmp
test
push
ret
xlat
mov
popa
xchg
repz
mov
cmp
stos
sbb
ja
out
sub
int3
lcall
iret
daa
popf
ret
in
mov
mov
dec
iret
lock
or
jnp
pop
adc
cmp
or
insb
cmc
scas
scas
push
dec
and
std
push
dec
ljmp
sbb
jecxz
test
jnp
iret
add
arpl
jge
iret
mov
addb
lcall
jmp
xchg
pop
sub
sbb
inc
add
add
or
cld
cli
mov
xchg
cmp
mov
pop
adcb
jbe
cmpxchg
jl
pop
cli
adc
iret
dec
sbb
dec
inc
xlat
sar
rcll
jle
lea
sbb
mov
fwait
cmp
sarl
sbb
fstl
cmc
test
adc
jnp
xchg
xor
jle
pop
les
jnp
iret
scas
adc
mov
add
mov
int
jb
shr
add
or
add
dec
js
ja
push
or
nop
sti
orl
addl
mov
mov
dec
in
and
popa
sahf
or
jmp
call
mov
popa
mov
jns
popl
xchg
or
adcl
popa
lcall
pushf
inc
pop
lea
cmp
movsl
mov
mov
add
mov
mov
icebp
fidivrl
movsb
dec
lods
jp
inc
icebp
xor
mov
adc
test
jnp
pop
xchg
pushf
lods
add
cmp
leave
push
cmp
xchg
ret
inc
int
fbstp
and
add
cmp
mov
test
add
xchg
sub
add
jnp
pusha
rcll
mov
mov
sub
push
cmp
mov
std
lcall
mov
adc
pop
int
sbb
adc
movsl
push
pop
repz
addl
xchg
mov
and
lds
ss
dec
xchg
xchg
xchg
push
cmp
mov
xchg
pop
icebp
lds
es
add
fisubs
xor
push
lods
movsl
cmp
jl
insl
pop
sub
mov
mov
lcall
jo
clc
xor
sub
adc
lods
push
loop
push
adc
lock
lahf
adc
or
dec
mov
push
cld
cmpsb
leave
dec
mov
xchg
repnz
insb
fadds
jecxz
leave
mov
cmpsb
and
cmc
sbb
pushf
lret
out
pop
lea
mov
cltd
sbb
push
and
popf
sbb
inc
pop
adc
mov
std
jne
int
sbb
mov
or
pop
and
push
imul
sti
pop
cmc
xchg
xor
dec
adc
repnz
xor
cld
jbe
lret
and
and
push
pusha
ja
cld
or
add
or
mov
inc
outsl
out
xchg
add
jg
test
decb
jg
adc
cmp
lods
call
imulb
cs
repz
jno
jnp
stos
pop
test
stos
xchg
jmp
aaa
push
aaa
inc
arpl
stos
fs
jl
push
test
pushf
stc
dec
jp
loope
mov
dec
test
mov
cmp
or
outsb
inc
rorl
ljmp
jmp
aaa
lods
roll
cmp
imul
add
mov
jecxz
popf
fbstp
clc
xchg
mov
out
cld
cmp
movsb
cld
jae
outsb
das
pushf
xchg
sub
xchg
lods
or
pop
shr
fstps
and
or
sti
popa
fisttpl
les
and
add
imul
push
add
subl
jge
test
ret
ret
aad
and
popf
jnp
pop
jne
imul
shll
sti
jmp
add
cmp
das
sbb
jns
lods
arpl
dec
pop
push
fsubs
xorb
jle
push
mov
sbb
dec
outsb
pop
xchg
dec
scas
xchg
push
lret
mov
pop
in
rcr
xchg
cmp
nop
inc
ja
or
xor
mov
sbb
mov
icebp
imul
scas
subb
cwtl
std
adc
jp
inc
jl
hlt
push
ljmp
ljmp
imulb
test
sbb
ja
cld
arpl
cs
lock
cmc
and
jbe
mov
fcomi
mov
stos
xorl
sub
lea
jecxz
int
in
into
call
cmp
cli
or
sub
inc
inc
out
xor
cmp
jbe
clc
push
cmpsl
cmp
xor
dec
jl
data16
inc
xchg
inc
test
or
mov
loope
jge
ja
lods
mov
imul
push
or
insb
and
ret
mov
or
push
adc
arpl
les
lods
mov
push
ja
pop
loope
lods
fnstcw
lea
stos
pushf
pop
pop
mov
adc
add
adc
push
or
nop
leave
cmc
or
lock
mov
clc
mov
jnp
incl
cmp
sti
mov
add
push
movsb
scas
push
hlt
mov
inc
mov
xchg
push
lea
gs
outsl
jmp
stos
sti
pop
repnz
pusha
adc
stos
loope
xchg
add
inc
lahf
sbb
mov
or
xlat
call
push
lcall
shl
daa
push
popf
jmp
xchg
dec
je
mov
adcb
dec
scas
imul
xchg
and
dec
sar
jnp
stos
inc
mov
cmc
lahf
jnp
inc
mov
incb
pop
mov
xchg
or
jb
ret
adc
sti
and
xor
rorb
sbb
or
inc
shll
pop
push
mov
lods
mov
lods
test
dec
mov
test
xchg
ret
mov
mov
mov
xor
fwait
pop
repz
mov
push
add
dec
dec
xlat
sub
or
inc
lock
inc
ljmp
cmp
sub
mov
fcos
sbb
or
add
sahf
pop
jbe
mov
aaa
adc
pop
push
xchg
fisttps
sbb
push
fwait
ret
mov
sub
pop
lods
xor
jae
mov
repz
rcll
pop
sahf
nop
sti
lea
test
lret
jg
loopne
ss
loopne
jle
cld
mov
xchg
call
pop
pop
mov
ja
xchg
and
outsb
test
or
lods
dec
xchg
jo,pn
dec
sahf
mov
lods
enter
mov
xor
and
imul
xor
insb
jg
fistpll
pop
xchg
jnp
add
lea
mov
xchg
addr16
push
sbb
out
std
enter
push
or
mov
sbb
mov
xorb
stos
or
jno
push
std
pop
xchg
lods
mov
sbb
dec
jnp
cmp
stos
lea
ret
fidivl
add
aam
pop
sar
cs
lahf
lea
fs
jecxz
test
cld
ds
sbb
scas
cld
mov
popf
cmpb
shr
arpl
fmul
cmp
movsl
push
jl
push
xchg
mov
push
mov
loop
or
sbbb
inc
pop
test
mov
push
in
pop
mov
mov
aas
data16
push
pop
or
jnp
fxch
out
xchg
or
pop
add
cmp
and
pop
push
imul
mov
jnp
adc
xor
sbb
jno
clc
lret
fcomps
push
pop
call
lods
out
dec
stc
fwait
je
inc
inc
sarl
push
xchg
inc
pop
dec
rorb
leave
int3
pusha
cmc
dec
or
imul
aad
imul
std
mov
fmulp
add
adc
aam
jp
sti
xchg
mov
adc
mov
movsl
rcrb
pop
in
xor
xor
mov
lret
mov
test
jl
movsl
or
test
ja
rcr
cmpsl
mov
fcomps
imul
test
movsb
xchg
inc
int
or
add
mov
mov
lret
jae
cmp
lret
insb
mov
inc
jge
idivb
adc
loope
repnz
jg
push
stos
cmpsl
je
je
stos
addr16
sbb
iret
or
and
dec
out
adc
cmp
or
clc
sbb
lods
ja
fisttpl
jge
int
movsb
add
aas
mov
xchg
sbb
push
or
movsb
jnp
push
fldl
out
push
and
dec
or
xlat
push
scas
or
xchg
jmp
stc
lret
or
mov
rcll
mov
and
jnp
in
sahf
jae
jnp
mov
push
out
pop
pop
dec
mov
fmull
popa
dec
sbb
out
andb
in
int
cmp
inc
adc
inc
sub
aad
sub
sti
mov
pop
xchg
mov
push
lods
sbb
ret
pusha
out
push
add
add
mov
dec
or
cmp
lcall
add
mov
mov
push
pop
jecxz
les
ljmp
jno
rcr
push
inc
shlb
add
rclb
jl
or
pusha
inc
scas
fs
pop
mov
xchg
in
cmp
jecxz
scas
data16
dec
xlat
mov
mov
mov
outsl
sbb
fcmove
shrl
pop
outsl
dec
ds
add
or
mov
jne
lcall
jo
jnp
mov
or
ficompl
inc
shlb
dec
xchg
aaa
arpl
cmp
pop
pop
xor
and
rolb
aas
mov
sub
cmpb
dec
inc
sbbl
sti
mov
std
cmp
stos
inc
push
pop
iret
divl
push
test
or
add
push
repnz
jae
in
cld
cld
cld
mov
cmc
inc
jnp
lods
mov
mov
mov
rclb
pop
lcall
cwtl
and
pop
sar
dec
pop
xor
pop
xchg
inc
xor
hlt
sbb
and
je
fildl
push
pop
dec
nop
fisttpl
sub
fs
enter
rcll
and
fdivl
pop
adc
ret
lea
inc
lcall
fcmovnb
xor
xor
and
push
out
adc
sbb
popa
sub
fiaddl
loope
inc
mov
vmwrite
mov
int
pop
int
cmc
push
jmp
lret
out
lea
dec
xchg
mov
mov
push
sub
cmp
outsl
imulb
xchg
or
ss
mov
enter
sub
popa
sar
lds
push
lcall
jge
mov
dec
insb
or
repnz
ljmp
leave
jg
push
push
push
xchg
pop
mov
mov
lods
jl
mov
mov
sti
aas
addr16
mov
rorl
repz
mov
xchg
rcrl
dec
mov
mov
inc
and
cli
mov
stos
mov
adc
lahf
pop
and
jecxz
out
repz
jns
xchg
xchg
sub
and
cmp
add
cmc
mov
int3
sti
repnz
mov
pop
mov
popf
mov
int
cmp
add
out
imul
lahf
stos
pop
adc
cwtl
push
dec
imul
aaa
mov
fsts
pop
cmp
adc
in
pop
mov
imul
ss
nop
add
inc
push
inc
mov
xchg
rcl
sbb
and
outsl
sahf
andb
sub
push
jo
dec
dec
nop
jno
ja
jo
js
aaa
adcl
jnp
jns
ret
xlat
add
xor
pop
sub
inc
jns
adc
pop
push
js
lea
pop
mov
cmp
scas
jnp
xor
data16
mov
jbe
cmp
movsl
add
call
stos
mov
cmp
addl
bound
fistl
dec
rcrl
test
aas
xlat
adc
cld
iret
or
imul
popa
mov
pop
aad
fwait
cmp
xchg
jne
mov
jmp
je
int
int
add
xchg
mov
dec
inc
lds
mov
cmp
mov
jge
out
stos
jecxz
sti
pushf
jp
aad
aam
add
inc
test
mov
dec
lahf
dec
ss
mov
popa
jecxz
outsb
dec
movsl
dec
repz
sub
stos
sbb
fcmovnb
lcall
pushf
mov
and
pop
sbb
scas
lahf
mov
dec
dec
pusha
xorl
outsb
mov
inc
cltd
daa
sbb
mov
adc
mov
fmuls
hlt
sub
int
cmp
mov
lea
fldt
rcll
ret
adc
cs
mov
sbb
cmpb
setbe
movb
cwtl
ret
clc
jge
iret
mov
fadds
jg
inc
dec
xchg
push
pop
cmpsb
fwait
stos
les
push
lret
imul
xchg
add
stc
in
leave
std
jbe
mov
cmp
ret
push
cmp
or
not
in
inc
lret
jle
daa
aad
rclb
lods
mov
pop
xchg
or
aad
dec
jnp
sbb
sbbl
fldcw
mov
fs
arpl
ficoml
mov
adc
xchg
test
stos
push
jle
or
shll
xchg
lods
mov
xlat
stos
cmp
aas
inc
push
pop
aam
aad
inc
scas
fs
dec
dec
or
mov
int3
or
mov
lea
movsb
pop
xor
loope
mov
or
jnp
stos
arpl
mov
adc
insb
push
imul
es
push
and
sub
pop
mov
scas
in
sahf
cmpsb
aam
jnp
push
mov
pop
add
pop
or
ds
std
icebp
test
shrb
in
dec
movsb
xchg
xor
int3
push
and
and
add
xlat
loopne
in
pop
pop
add
int
icebp
sahf
pop
and
int
mov
cwtl
sub
xchg
adc
jp
outsb
pop
pushf
dec
test
cmp
mov
mov
add
cmp
orl
sarl
and
mov
mov
test
adc
sbb
vmread
loopne
mov
cwtl
ss
aas
pop
mov
adc
sbb
mov
mov
faddp
sub
mov
aas
rcrb
gs
push
add
mov
bound
jmp
lock
scas
cmpl
xor
aas
lret
or
jnp
cmc
dec
mov
mul
out
call
pop
int
sub
xchg
add
xlat
push
imull
jge
jmp
popa
les
push
test
int
mov
cmp
mov
cmp
int3
std
add
cmp
cmpsb
ret
ss
out
and
dec
in
sbb
daa
test
aas
push
testb
cld
mov
movsl
out
or
dec
fstps
jnp
adc
leave
inc
rcll
add
outsb
and
cmpsl
jno
dec
and
jno
add
lcall
fisubrs
xchg
dec
lea
cmp
gs
mov
fs
sbb
in
adc
jle
out
aas
push
cmp
arpl
push
jno
cmp
add
in
jge
and
imul
mov
addr16
mov
mov
xor
aam
xor
mov
xor
jnp
jmp
mov
insb
lahf
xchg
pxor
daa
cmp
cld
dec
pop
cmp
cmp
xchg
pop
mov
add
loop
and
cmc
les
je
notl
xchg
pop
jg
imul
sti
out
nop
inc
cmp
test
dec
mov
jae,pn
ja
jo
repz
sbb
imul
cmc
outsl
adc
or
sub
or
cmp
mov
cmp
les
ret
js
in
inc
and
cltd
or
sti
or
xor
sub
gs
cwtl
or
addr16
inc
imul
mov
or
pop
pop
fldenv
push
insl
cwtl
mov
push
fidivrl
loop
adc
dec
xchg
mov
jno
xadd
aad
cmp
orb
cmp
mov
mov
sbb
ss
ds
lds
pop
jle
or
cld
call
jmp
pop
sub
xchg
popf
sbb
jmp
mov
aad
popf
xchg
jae
push
push
push
xchg
addr16
lcall
jb
das
shll
jge
sbb
push
fstpl
push
add
adc
and
jo
xchg
inc
xor
in
shlb
rol
cmp
xchg
sti
cmpb
fidivrs
mov
mov
cmp
into
les
out
add
fs
sti
or
and
mov
pop
mov
pushf
shll
test
ds
xor
xchg
jge
pop
jecxz
andl
mov
jnp
sub
popa
lret
int
lea
xor
lods
mov
loop
divps
mov
jbe
mov
std
xchg
sbb
popf
inc
movsl
lret
inc
call
stos
xchg
cmc
sar
jmp
fistl
fistps
sbb
push
push
lods
cmp
inc
jg
sbb
inc
sbb
enter
daa
xchg
push
cld
gs
mov
xlat
idiv
inc
jnp
jle
jne
inc
mov
clc
sti
pop
adc
xor
mov
pop
cmp
or
cld
pop
fstpt
mov
dec
lds
push
int
mov
and
push
test
inc
xor
shll
lcall
add
inc
mov
jge
mov
or
loopne
int3
or
add
enter
rcll
and
add
fidivrl
ret
push
movsl
xor
out
test
push
or
test
adc
outsb
cmc
insl
out
test
imul
mov
rol
or
push
jb
int
add
inc
mov
stos
test
fcom
pop
inc
out
adc
push
gs
cmp
sbb
arpl
inc
sub
icebp
popa
mov
jae
adc
pop
or
push
out
imul
mov
pop
add
xchg
and
rcrb
mov
mov
mov
mov
fisttpll
hlt
or
sub
pusha
gs
cmp
mov
push
cmp
dec
pushf
or
adc
mov
mov
jnp
ljmp
inc
sub
pushf
mov
or
not
jne
outsl
xor
xlat
jne
std
fldcw
jnp
jecxz
ficomps
jbe
stos
inc
xor
pop
mov
jl
movb
mov
lock
enter
decl
inc
and
xor
leave
inc
pop
xchg
mov
pop
popa
sahf
sti
jp
std
and
fmul
stos
sbb
or
shrb
xchg
jle
dec
xor
cmc
enter
fisttpll
mov
inc
mov
arpl
pop
pushf
mov
or
insl
jp
out
sbb
arpl
pop
xchg
fwait
repz
push
push
add
lea
icebp
aaa
xchg
mov
insl
cltd
sti
cmpl
lods
xchg
jne
pop
mov
gs
sub
or
jae
push
imul
insb
jmp
lods
imul
xor
je
add
cmp
adc
cli
ss
pop
jl
call
mov
and
clts
jmp
loopne
xchg
iret
fnsave
pop
or
jno
pusha
ljmp
dec
dec
mov
int3
mov
cmpsl
mov
sub
lcall
mov
outsl
lods
or
nop
jnp
sub
cltd
test
stc
xchg
mov
int
xchg
clc
sahf
and
bound
mov
int
fstpt
xchg
lea
or
adc
mov
fcompl
dec
xor
xor
lods
call
adc
xor
imul
dec
mov
inc
mov
cld
lds
int3
mov
mov
mov
popa
lods
fsubs
adc
imul
jb
jo
int
sarb
or
adc
cmp
pushf
dec
and
push
jb
stc
or
mov
mov
int
fs
mul
clc
pop
std
adc
in
orb
inc
int
mov
xchg
sbb
jl
mov
lcall
divl
inc
inc
and
out
cld
imul
cmpb
xor
ds
lods
in
std
sbb
pop
xchg
std
and
das
pop
cmp
xchg
xchg
andl
adc
jnp
dec
icebp
sbbb
adc
pop
cld
pushf
sbb
pop
jmp
xchg
push
lods
dec
mov
push
mov
sub
pop
movsb
push
push
fmull
lods
addr16
xlat
add
cmp
aaa
sti
xor
mov
mov
push
mov
jmp
or
fldt
dec
je
and
xor
shll
mov
xchg
jbe
inc
loope
xchg
out
fwait
js
inc
cmpsl
pop
cmp
mov
int
pop
or
xchg
inc
mov
sbb
es
mov
test
jb
repz
jnp
mov
and
ret
mov
nop
inc
push
frstor
outsb
mov
or
dec
or
rcll
cmp
subb
push
adc
icebp
and
mov
sub
inc
adc
faddl
lods
add
dec
cmpsl
lds
sarb
dec
sahf
jo
sbb
inc
das
mov
addr16
push
sbb
sarb
pop
ret
jecxz
stc
out
fisttpll
movsb
add
or
jo
push
pop
mov
outsb
or
cmp
ja
mov
pop
arpl
adc
cmp
adc
aas
xorl
mov
movsl
test
adc
and
arpl
movsb
or
cmpxchg
cmp
popa
jg
fsubrp
faddp
xor
inc
dec
mov
bound
aam
mov
xchg
dec
mov
adc
cmp
aam
adc
dec
cld
jle
add
cli
loopne
bound
ds
test
push
lods
add
cld
testl
fwait
jnp
iret
lret
sbb
mov
rorl
pop
jbe
das
rorb
cmp
jns
out
stos
fwait
inc
je
mov
int3
pop
lock
subb
or
addb
movsb
fdivl
cmpsl
cmp
lods
jae
xchg
xchg
sar
imul
add
cmpsl
in
loope
sarl
jo
popa
aaa
jge
mov
dec
cld
mov
std
aad
mov
jnp
xchg
and
or
fsub
stos
dec
lea
jp
mov
pop
cmp
testl
xor
js
sti
ljmp
cmp
out
push
shrb
dec
add
repz
jno
pusha
jb
inc
jns
mov
stos
mov
lea
pop
ja
mov
ret
insb
xchg
sub
pop
call
lds
lret
ljmp
lods
loope
ss
mov
or
adc
sti
enter
pop
adc
int
inc
std
push
pop
add
mov
push
dec
push
sbb
xchg
pushf
lea
mov
jle
dec
mov
mov
dec
dec
test
dec
xor
mov
push
mov
xchg
dec
xchg
xchg
inc
les
or
je
dec
aaa
lea
inc
xchg
mov
mov
push
test
push
sbb
mov
movsl
jl
sbb
pusha
dec
ja
dec
xchg
cld
dec
or
test
and
into
flds
pop
movsl
xor
jle
loopne
pop
and
or
les
cltd
xchg
mov
ret
fimull
ror
adc
aaa
insl
int
pop
mov
add
je
xlat
mov
xchg
pop
fstpt
sub
sti
stos
test
cmp
mov
stos
add
or
sbb
mov
jmp
iret
test
lret
cmc
mov
or
mov
sub
pop
in
shlb
push
mov
adc
jg
mov
hlt
leave
fwait
pushf
int
sbb
jbe
and
stos
xchg
dec
ss
in
sbb
pop
add
dec
mov
mov
dec
ljmp
xor
mov
jmp
jo
inc
int
es
mov
mov
movsb
jg
jg
jl
xchg
test
out
jecxz
inc
enter
dec
inc
xor
dec
idiv
sub
das
jb
mov
dec
cld
adc
push
or
int
jg
push
outsl
cmp
xchg
add
dec
fwait
fwait
jne
lock
adc
sub
sbb
sbb
xchg
xchg
inc
fstpl
push
or
sub
sti
mulb
or
inc
ss
out
sub
ret
xchg
adcl
push
shl
xchg
inc
fimull
inc
mov
insl
push
push
jnp
addb
push
xor
pop
data16
sub
sbb
add
std
lcall
add
rcrb
and
add
adc
xchg
pushl
add
xor
test
daa
jae
jg
jns
dec
sub
xor
xlat
call
cmp
fisubs
mov
cmpb
lock
push
mov
adc
sbb
lahf
push
mov
cmp
push
call
je
enter
or
sahf
lret
xlat
js
mov
mov
mov
enter
push
and
xchg
out
push
repnz
inc
repnz
sti
push
in
xchg
mov
cmp
cmovge
jo
jl
add
mov
dec
inc
add
mov
ja
lret
jnp
test
add
adc
lods
mov
repnz
lahf
jl
push
pushf
or
push
cmpsl
fcmove
jno
xor
add
mov
test
and
xchg
add
rorb
sarb
sbb
imul
idivl
leave
adc
or
cld
dec
stc
jmp
dec
mov
int
es
andb
pop
mov
hlt
lahf
dec
dec
sub
test
imul
lea
testl
pop
mov
enter
mov
sub
jne
pop
aam
int
xor
jle
icebp
mov
or
sbb
je
out
mov
jne
jb
fldenv
jno
dec
mov
ret
inc
sub
or
outsl
adc
sub
cld
jmp
hlt
or
cmp
test
rcrl
sbb
aam
push
sarb
test
fcoms
xchg
sti
push
fimuls
inc
fcomi
mov
adc
xor
out
xlat
add
jns
fisttps
inc
push
inc
call
sahf
lahf
sti
insb
aaa
adc
scas
lods
mov
shrb
mov
xor
dec
aam
cmp
adc
es
cmp
sti
test
into
lea
fdiv
lods
sub
pop
incl
outsb
and
daa
mov
cmpsl
adc
lret
cmp
faddl
cmp
jge
outsl
or
fwait
adc
xchg
sti
jl
mov
cs
mov
setno
lea
add
lods
sbb
cmp
sub
xor
mov
fdivs
andl
das
mov
lcall
mov
pusha
icebp
rcrb
push
ljmp
stc
pop
inc
orl
rcrb
shlb
in
es
and
sub
shlb
sarb
scas
push
inc
dec
push
icebp
hlt
sti
mov
xchg
mov
fs
xor
inc
mov
cltd
loope
xchg
mov
push
inc
scas
inc
dec
out
aas
sbb
fdiv
push
cli
sbb
jle
mov
stc
lods
inc
lods
xchg
fcmovnu
sti
fmull
mov
jg
push
dec
lahf
stos
insl
or
mov
xlat
imul
inc
cmpsl
icebp
test
lds
cmp
lods
pop
or
testl
sti
fisttpl
sub
sbb
push
outsb
lock
dec
addb
sub
inc
daa
sbb
xor
aam
decb
or
dec
fsts
adc
adc
dec
xchg
cmpsl
call
and
imulb
dec
sub
outsl
fdivp
es
mov
icebp
sub
pop
jo
repz
int
mov
dec
jl
jo
xor
lock
xchg
mov
scas
mov
sub
arpl
mov
cmpsl
dec
mov
jae
jmp
mov
push
xchg
aad
sbb
add
leave
and
mov
sub
push
inc
adc
mov
mov
inc
xlat
idivb
pop
xchg
push
mov
add
jns
push
and
dec
pop
movsl
std
mov
mov
jl
pop
xchg
sub
jae
sbb
lods
popl
jmp
aad
dec
dec
add
aas
aam
lcall
jge
out
in
mov
and
mov
cld
push
lods
add
pushl
iret
push
lcall
xchg
ret
xor
cld
fwait
jo
and
or
notl
mov
adc
and
mov
pop
stc
sbb
fs
xchg
cmp
xor
add
mov
mov
mov
addl
arpl
call
out
rcrl
cld
jne
dec
add
leave
jp
outsl
dec
lret
in
adc
push
stc
mov
fdivrp
pop
loope
ja
aam
fdivs
orl
mov
adc
aam
cld
or
mov
jo
nop
arpl
in
push
fimull
inc
int
cmp
pushf
mov
sbb
xchg
les
pop
loop
lahf
ja
es
xchg
pop
inc
push
sbb
out
push
or
jae
shll
clc
add
mov
out
mov
pop
clc
sahf
out
lea
mov
out
out
mov
hlt
xor
ret
outsl
divb
sbb
pop
push
lds
sub
mov
sbb
mov
push
repnz
popa
clc
fst
and
leave
imul
es
mov
dec
pop
xchg
outsb
mov
in
fsub
scas
divl
popa
fcomp
lret
xor
pop
mov
push
mov
jbe
rcll
jmp
cwtl
sti
arpl
fnsave
fsubr
movsb
sti
xor
jne
int
icebp
out
mov
xor
data16
js
add
ficoms
jle
sarb
pusha
adc
push
adcb
pop
sbb
add
pushf
rcrb
iret
ret
jmp
add
mov
adc
addb
cmp
mov
js
jmp
add
xorb
std
fcmovnb
add
xlat
incl
push
sub
cmp
mov
cmpsb
out
push
cmp
inc
daa
stos
mov
xor
scas
dec
jmp
or
jecxz
and
call
pushf
int
sbb
js
mov
inc
inc
mov
xor
lret
push
out
add
je
outsb
mov
shll
dec
lea
pop
jae
cmp
test
rclb
sub
or
imul
dec
xchg
mov
xlat
jne
pop
cmp
imul
inc
pop
popa
dec
adc
jo
mov
inc
or
lcall
repz
lds
scas
jnp
test
pop
sub
jg
and
insb
in
sbb
push
sub
lahf
leave
mov
rcr
int3
data16
mov
int
jge
dec
xor
lcall
testl
fstpt
outsl
aad
push
out
inc
push
clc
xchg
fdivrl
or
mov
dec
jle
jl
jecxz
sbb
push
hlt
dec
mov
inc
dec
push
mov
add
sbb
repz
fildl
adc
gs
in
out
jne
sub
mov
jnp
pop
push
xchg
andl
fs
fcompl
mov
push
lret
dec
arpl
lahf
out
dec
push
mov
les
mov
fwait
inc
dec
xor
gs
mov
test
add
out
rclb
sub
sbb
sahf
ret
push
shrb
ret
mov
and
jl
pop
sahf
dec
mov
dec
filds
mov
rcll
nop
add
inc
add
rorl
xchg
mov
mov
js
sub
in
stc
in
or
into
test
dec
pop
push
std
jnp
dec
xchg
mov
xor
pop
call
xchg
mov
and
add
jb
add
inc
push
lret
mov
xchg
pop
fdivr
mov
pop
and
cmp
repz
and
sub
int
aas
adc
jmp
sub
arpl
mov
inc
into
sahf
repz
popl
cmpsl
jb
cmp
rol
inc
add
outsb
sub
cmp
out
addl
sub
mov
test
inc
mov
or
cmp
cmp
gs
les
xchg
jnp
popf
fimuls
jnp
ret
mov
test
mov
mov
popf
jl
jb
mov
fstpt
movsb
mov
push
lcall
scas
jmp
adc
sbb
es
cld
and
mov
jmp
lea
xchg
or
mov
out
cmp
stos
jnp
aad
jge
mov
xor
xchg
mov
push
int
jno
out
aas
ficompl
jne
int
fisttpl
and
cmp
xchg
cld
add
dec
bound
jbe
jl
aam
shll
pop
add
je
daa
dec
aam
dec
lea
or
rcrl
xchg
adc
push
cld
mov
xchg
es
dec
jmp
push
push
or
xchg
sti
lods
cmp
mov
inc
or
imul
rolb
stos
jnp
push
std
gs
arpl
cmp
test
fistps
add
sbb
mov
sbb
xor
sbb
or
pop
mov
pushf
into
xchg
sub
adc
pop
cmp
ja
lock
in
arpl
int
test
mov
and
das
mov
jge
jge
frstor
testl
mov
sarb
in
repz
popf
sti
xchg
cs
xorl
sub
rorl
xchg
ret
sti
std
aam
dec
mov
xchg
pop
dec
or
mov
mov
push
inc
adc
insl
rclb
rcll
es
push
imul
push
mov
add
push
mov
out
push
mov
clc
movsb
pop
cmpsl
lea
or
cmp
fwait
jo
lret
and
das
ds
cmc
cs
iret
pop
mov
lea
repz
sub
lret
mov
pusha
push
es
jne
nop
jecxz
fldt
xchg
lods
movsl
xchg
popl
dec
outsb
mov
insl
push
cmpsb
negl
mov
push
test
mov
mov
fwait
sub
leave
mov
inc
cli
loopne
and
jb
and
push
mov
lea
out
push
lea
add
jle
nop
test
out
lret
leave
cmp
cltd
push
ljmp
aam
xor
mov
pop
sbb
pop
int3
pusha
mov
decl
xlat
xor
dec
test
push
ficompl
in
pushf
cmp
sub
jnp
stos
push
add
xor
enter
add
pop
push
mov
pop
fisttps
imul
jae
xchg
xchg
jecxz
xchg
inc
and
jmp
lock
adc
sub
push
xchg
dec
push
insb
jle
mov
sbb
xchg
and
or
out
shll
mov
pop
or
pop
cmp
in
test
pop
or
popa
mov
ja
mov
scas
mov
dec
mov
addr16
sti
mov
xchg
mov
jmp
inc
mov
lds
and
inc
loope
xor
pop
cmp
dec
cmpsl
mov
lods
sahf
movb
sbb
or
fmulp
lods
shlb
add
mov
je
out
rcrb
sti
int
adc
mov
ret
pop
ret
mov
or
jnp
push
mov
push
pop
xchg
aad
push
cmp
std
xchg
jnp
and
push
inc
dec
xchg
dec
xchg
outsl
int3
push
gs
jnp
push
iret
xor
fwait
shrl
or
arpl
jl
mov
ret
adc
cmp
fstp
or
into
jnp
mov
test
test
cmc
outsb
in
or
sar
adc
add
je
int3
add
or
loope
xor
jmp
addr16
push
xchg
mov
mov
daa
xor
adc
fidivrl
or
sub
scas
fldenv
dec
jmp
cld
fistl
in
sti
test
cmp
js
jnp
and
mov
je
add
xlat
sbb
mov
lret
inc
adc
inc
add
mov
addr16
ss
dec
or
test
rorb
xor
mov
mov
jmp
mov
fcoml
add
rorb
or
mov
pop
mov
and
or
scas
or
aad
lret
add
cmpsl
dec
cld
in
rcl
loope
pop
out
test
add
and
cmp
mov
or
aam
add
in
fldt
mov
cmpsl
int
leave
mov
sti
outsb
in
mov
sbb
xor
mov
jnp
or
inc
cmp
mov
xchg
addl
jnp
jp
push
xchg
incb
mov
test
adc
pushf
sbb
inc
stos
jnp
lea
xor
mov
pop
outsb
dec
fwait
popa
mov
adc
mov
mov
jnp
pushf
add
or
adc
push
mov
pop
cmpsb
nop
cmp
cmp
pop
frstor
lret
lods
mov
movsl
ror
sti
inc
add
orb
mov
gs
pop
insl
dec
cmpl
mov
add
add
cmp
cmc
stos
inc
pusha
sub
into
gs
lea
lahf
xchg
xchg
or
and
int
pminsw
ret
in
add
sbb
dec
enter
fistpl
dec
push
cmp
cmpsb
repnz
dec
shll
dec
inc
jo
outsb
insl
mov
sahf
adc
mov
ret
mov
pop
lea
rorb
or
jbe
ffreep
xor
and
sub
jnp
push
shrl
lcall
adc
outsb
mov
stos
dec
xor
cmpsb
mov
xchg
adc
lea
jle
pop
das
pop
sahf
sti
and
mov
ret
movsl
inc
fs
add
xchg
shrb
adc
add
insl
sub
mov
sbb
sub
mov
jmp
std
into
sbb
shll
aam
add
push
cli
gs
mov
lret
ljmp
jge
out
sbb
mov
cmpsl
and
fwait
or
test
pop
sub
mov
rcll
sbb
sbb
insl
fimuls
hlt
push
inc
pop
pop
cmp
or
sti
pop
xor
cs
push
cmpb
int3
fwait
mov
mov
mov
inc
and
fs
mov
jg
scas
jno
inc
sbb
cltd
js
or
xor
mov
xorb
jne
in
pop
adc
incl
std
inc
int
push
cmp
xchg
leave
or
js
loopne
pop
push
mov
icebp
push
sbb
jae
fdivs
bound
or
jae
int
orb
dec
loop
pop
cmp
dec
stc
stc
push
int
add
pop
push
or
pushf
shrb
xchg
push
fwait
or
sti
cwtl
jge
xor
and
push
rol
scas
adc
inc
dec
adc
into
inc
lahf
mov
pop
or
push
jge
ds
inc
pop
add
cmp
shrb
push
sbb
repnz
lcall
dec
imul
sub
mov
sar
pop
adc
out
rorb
jmp
out
or
sub
add
or
pushf
cmp
push
clc
dec
int
je
push
mov
or
adc
mov
dec
test
aad
and
test
fsincos
jns
lods
mov
push
enter
fwait
ja
mov
mov
orb
add
rol
insb
xor
dec
xchg
inc
gs
lods
cmp
cmp
jmp
ljmp
adc
insl
sbb
mov
imul
sub
decb
xor
jecxz
int3
jl
jg
sub
lods
aaa
adc
lahf
scas
cs
push
test
ljmp
jno
or
fs
test
or
clc
enter
xor
pop
push
sub
jle
xchg
daa
mov
or
call
xchg
pop
adc
push
int3
inc
movsl
adc
cmp
sbb
cmp
adc
mov
bound
into
xor
in
rolb
out
push
pop
sbb
fistpl
xchg
jae
outsl
xor
lahf
push
add
daa
sub
sar
jno
in
xchg
cmp
push
dec
out
movsb
mov
int
xor
lods
out
mov
int
loop
bound
cmpsb
xchg
push
dec
aas
mov
mov
cli
dec
cld
or
fwait
shlb
push
sbb
sti
push
push
andl
jmp
mov
outsl
push
fbld
iret
jae
jno
lds
paddsb
shlb
movsb
lret
mov
stos
xchg
insb
addb
push
push
or
pop
int3
jnp
hlt
std
and
stos
stos
pop
mov
adc
inc
sbb
sbb
cmp
mov
stos
nop
fnstenv
lcall
jnp
call
add
outsl
test
xor
cmpsb
dec
aad
mov
insl
adcl
sub
out
mov
js
mov
jg
pop
cmp
lods
ds
mov
mov
cmp
int
rorb
bound
fdivl
pop
jp
inc
test
pop
ljmp
xchg
cmpsb
cmp
push
jl
mov
outsb
jg
push
fwait
cmc
pop
dec
mov
movsb
imul
push
sbb
cmpl
sbb
pop
cltd
dec
ret
jl
repnz
push
xchg
mov
pushf
sbb
jg
ss
cmp
lock
daa
jne
push
out
int
push
outsl
pop
scas
pop
ret
pop
aas
into
or
push
dec
mov
int3
imul
dec
mov
or
xchg
repnz
das
push
fisttps
je
sub
jge
push
xchg
mov
push
lret
push
sbb
or
jnp
into
int3
clc
imul
adc
xor
dec
jae
lea
jo
mov
fldt
inc
sub
sbb
push
dec
xlat
xchg
cmp
sub
pop
pop
out
inc
sbb
pop
mov
test
inc
pop
mov
lret
fwait
rcrb
mov
sub
fs
mov
movsl
inc
cmp
mov
out
rcrb
arpl
dec
mov
mov
cmpsl
mov
xchg
sbbb
insb
mov
test
sub
add
movb
jmp
xor
mov
das
movsl
sbb
or
sti
rorb
dec
push
out
icebp
sti
mov
inc
fcmovnu
inc
cmp
inc
mov
jp
sub
cmp
inc
ret
add
xchg
cli
xchg
hlt
pop
dec
orb
loope
sbb
dec
jbe
mov
push
cmp
xor
test
lods
movsb
lcall
dec
mov
push
push
ja
lea
or
in
jno
dec
mov
mov
xor
js
sahf
sarl
lds
push
cmp
sub
ret
sti
rcll
xchg
test
mov
mov
lret
and
adc
xchg
rclb
sub
dec
push
push
mov
movsl
add
out
push
test
jp
sub
fildll
mov
inc
push
add
ljmp
mov
inc
jnp
test
loope
sub
frndint
adc
scas
imul
sbb
fnsave
mov
jo
ret
sub
or
nop
sub
xor
xchg
jo
or
adc
mov
sti
mov
pop
cmp
adc
jg
pusha
cltd
int
test
push
cmp
stc
fcomps
sbb
mov
fnstenv
jecxz
fcmovnbe
in
mov
les
dec
scas
lcall
stos
popl
xchg
clc
inc
imul
ret
inc
push
dec
les
lcall
shrl
or
cmp
scas
fadds
fcoml
dec
mov
inc
jno
lcall
push
jl
lods
and
add
xchg
mov
scas
jne
ljmp
movsb
ror
dec
loopne
mov
pop
mov
mov
aam
aas
dec
lock
lret
nop
fs
push
or
push
jecxz
sti
jnp
jle
push
push
lds
dec
scas
int3
aaa
aad
sub
pop
dec
cs
mov
test
pop
scas
rorb
shr
test
call
xlat
int3
icebp
sti
xor
nop
ds
mov
push
dec
aaa
adc
xlat
sti
push
xor
cmp
xor
xor
adc
js
and
jg
jle
aas
pop
pop
movsl
sbb
jmp
adc
subb
inc
mov
and
insb
lret
ret
fdivrs
sbb
sti
jnp
popf
daa
dec
cmp
inc
or
jmp
shr
int
mov
movsl
int3
jnp,pn
inc
jno
insb
or
mov
test
ljmp
xor
lods
mov
mov
outsb
and
jg
lods
xor
test
add
sub
mov
lret
jo
shlb
dec
aam
adc
push
fisubrs
cmp
pop
dec
dec
filds
vpshlb
push
int3
sahf
icebp
xchg
jnp
push
sbb
pop
std
adc
lea
rcrl
lcall
pop
ja
sub
cs
int3
jo
mov
inc
dec
and
lret
pusha
stc
cld
int
xchg
inc
outsb
dec
xchg
test
xchg
mov
cmp
inc
jecxz
xlat
xchg
ja
mov
inc
pop
mov
add
stos
xchg
or
daa
aad
les
lds
inc
ffree
incb
lock
cmp
xchg
pop
incb
mov
mov
dec
mov
lods
das
test
xchg
dec
mov
in
xor
fs
lea
repz
inc
and
loop
add
mov
dec
xchg
mov
xor
add
mov
pop
or
jnp
cmp
add
dec
sarl
lea
push
jae
int
enter
mov
mov
jmp
cmp
shl
cld
mov
push
push
rol
push
jg
les
jge
pop
cmp
dec
add
inc
movsl
push
or
repnz
cwtl
xor
add
in
fiadds
and
mov
jnp
rcrl
ret
shlb
aad
fldenv
sti
add
adcb
mov
shll
sti
testl
dec
mov
repz
push
xlat
jnp
push
sbbl
lahf
outsl
cmp
jmp
mov
sub
ficomps
add
xchg
xor
inc
pusha
mov
mov
negl
cmpsb
cmp
lcall
int
icebp
xchg
inc
xchg
lods
stos
add
adc
fstpt
pop
mov
mov
mov
dec
ret
cmp
pop
out
inc
subb
add
xchg
das
or
insl
test
dec
lods
andl
aad
cld
cmpsl
jecxz
sub
or
or
cmpl
sbb
adc
ljmp
ds
mov
adc
test
xchg
cmp
xchg
fcmovne
ret
mov
sahf
movsb
fistpll
or
dec
inc
test
les
std
jmp
lret
scas
pop
mov
sub
adc
mov
push
call
mov
int
mov
push
adc
daa
lret
into
push
add
lcall
ljmp
gs
adc
dec
jne
stos
jbe
outsb
mov
xchg
mov
or
jnp
mov
add
dec
aam
pusha
inc
mov
inc
dec
xchg
subb
adc
ja
cld
loop
rcrb
jge
inc
iret
stos
or
jle
mov
or
lods
mov
sub
insl
or
insl
ja
sub
rorl
popa
dec
or
mov
inc
movsl
loopne
clc
push
mov
andb
add
ret
pusha
mov
outsl
mov
daa
orl
imul
out
fnstsw
inc
xor
nop
mov
mov
leave
pushf
pop
cmp
push
jl
pop
std
adc
sahf
xchg
jnp
pusha
imul
cmpsl
inc
int
dec
lds
js
ja
jb
cmpsl
das
mov
and
or
mov
jae
sub
orb
dec
inc
push
adc
mov
sbb
scas
lock
jge
lea
adc
dec
out
daa
push
int
cmp
stos
mov
cwtl
or
fs
mov
pop
pop
mov
xchg
std
jl
pop
sbb
inc
fnstenv
pop
sub
jnp
shr
jbe
dec
pop
pop
imul
sbb
inc
int
cmp
dec
cwtl
mov
int3
sub
xchg
sbb
or
xchg
adc
rolb
shrl
xchg
push
jmp
mov
mov
fnstenv
inc
xor
lcall
mov
mov
mov
into
in
mov
jp
push
mov
cmpsb
sarl
pop
jp
xor
sti
jne
jl
sti
test
mov
pushf
roll
jg
jns
cmpsl
pop
outsb
mov
push
or
arpl
or
insl
in
push
sti
in
insb
arpl
dec
cmp
xchg
test
pop
rcll
and
lds
pop
int
mov
dec
lds
orb
and
fisubrs
jge
push
and
dec
movsl
fmuls
mov
idivb
movsl
mov
cmp
dec
loop
cwtl
sbb
dec
cwtl
int
movl
int3
and
or
subl
mov
mov
pop
in
sub
clc
movsl
sti
mov
xchg
push
jp
push
rorl
aad
inc
mov
and
not
xchg
int3
mov
setb
cmp
sti
ret
in
xchg
in
pop
pop
add
push
imul
mov
je
pop
cmp
fwait
jae
pop
mov
xchg
jle
mov
add
call
mov
std
inc
icebp
cmc
lret
push
insl
pop
inc
stos
jb
add
xor
test
mov
std
mov
fistl
inc
and
jno
jp
aas
ds
and
rcrl
xor
mov
xchg
mov
mov
adc
lock
mov
imul
int
div
push
fucomi
jns
rorb
jg
cmp
cltd
mov
test
fistps
out
mov
pop
outsb
gs
jmp
xor
pop
push
ret
dec
sahf
in
lods
push
xor
inc
inc
adcb
jns
ss
pop
lods
or
jge
fs
inc
jmp
mov
scas
add
out
fnstcw
xchg
push
mov
mov
rol
push
xchg
xor
jnp
out
popf
adc
push
mov
cld
pop
mov
fnsave
lds
push
mov
inc
vpshufd
mov
fld
add
std
sbb
iret
push
popa
movl
or
adc
pop
push
dec
xor
ss
test
inc
dec
fsubrl
push
cld
jg
sbb
mov
icebp
sub
test
imul
int3
insb
jg
movsl
mov
cmp
clc
pop
inc
push
lods
inc
into
push
push
add
lret
xchg
rcrl
loope
or
sbb
lock
fs
cmpsb
addr16
jne
rcll
inc
mov
and
shlb
fisttpll
push
popf
imul
daa
jo
mov
pop
in
xchg
xchg
dec
movsb
insl
add
jmp
fistpll
jns
add
dec
jmp
jle
jnp
sub
in
int
dec
mov
or
outsb
jmp
cmpsb
mov
aam
insb
mov
or
xchg
xchg
xor
imul
sti
movsb
shlb
and
ds
adc
sub
mov
mov
xor
fwait
decl
iret
call
cld
ds
frstor
fistl
push
pop
xchg
lods
xchg
lret
dec
inc
pop
jl
ret
movsl
dec
cmp
jae
sub
jg
mov
je
jmp
push
int
out
add
cld
mov
jmp
imul
jb
mov
popf
xchg
mov
icebp
jne
in
movsb
inc
jno
enter
add
ficoms
mov
cmp
mov
cmc
xchg
xchg
adc
add
cmp
mov
mov
jge
jl
xor
xor
test
jne
mov
test
or
mov
and
das
enter
iret
sbb
dec
pop
add
and
adc
and
lods
jnp
in
cmp
repz
pop
fisubs
mov
sti
lret
adc
cmp
in
mov
sbb
cltd
jge
add
rolb
lods
movsb
sub
mov
add
cmpsl
cmp
jno
pop
xchg
popa
orb
filds
aam
or
shlb
cmp
sbb
push
mov
cld
test
int3
cmp
mov
mov
sbb
adcb
lret
push
cmp
push
outsb
popf
sbb
jmp
mov
js
mov
jnp
stos
cld
cwtl
jne
sarl
cltd
jb
cwtl
or
jno
sti
ja
dec
or
pushf
sbb
aas
int
xor
adc
sbb
mov
dec
in
sti
movsl
in
xchg
cmp
aam
mov
cltd
enter
add
hlt
and
cmpl
and
das
ret
add
test
subb
jbe
gs
mov
loope
mov
int
xor
lods
fldl
mov
sub
loop
movsb
cmp
dec
xor
pop
push
leave
mov
mov
or
les
adc
addr16
lcall
cs
jp
inc
xchg
jnp
idivb
pop
push
jo
shlb
dec
dec
or
mov
adc
imull
pop
add
jnp
jmp
push
pop
xchg
xchg
mov
mov
lret
and
mov
std
cli
cmp
mov
call
stos
lcall
push
mov
push
repnz
mov
sub
mov
dec
rcrl
jnp
mov
mov
mov
mov
pop
scas
or
and
shl
jnp
and
mov
cli
fstpl
pop
cmp
pop
mov
sbb
std
mov
popl
mov
cld
mov
xchg
lret
fcoml
mov
idivb
dec
dec
sbb
cmp
pushl
or
jns
sub
dec
ja
sbb
adc
loope
ror
sahf
das
or
or
aad
push
insl
aas
xor
call
lods
arpl
mov
jmp
dec
mov
adc
xchg
or
lea
ds
movsb
popf
sti
cmp
pop
les
jge
push
inc
mov
or
dec
loop
or
mov
mov
mov
push
mov
sub
add
daa
jo
pop
push
fisttpll
popf
fistps
test
repz
cmp
lcall
shl
or
cmp
pop
fstps
rorb
xchg
sub
dec
dec
cmpsb
ja
or
mov
ss
add
pop
mov
clc
inc
data16
test
imul
cwtl
or
push
aas
movq
cmpb
lock
and
and
fsubs
xchg
cmc
xor
pop
xchg
jnp
mov
dec
pop
or
shl
mov
jne,pn
xchg
jnp
in
add
fwait
pop
ds
push
mov
dec
mov
imul
dec
cs
stos
gs
leave
xor
sub
pop
mov
repz
jno
sbb
shl
mov
rcrb
movsl
xor
jecxz
fs
loop
mov
imul
sub
mov
or
mov
rcll
nop
cltd
out
dec
dec
fildl
data16
sub
mov
inc
rorb
arpl
mov
add
and
inc
jp
sub
mov
int
bound
ljmp
mov
addb
cltd
sbb
in
je
mov
arpl
pop
sbb
push
dec
sub
fstpt
fidivrl
xchg
xchg
xchg
cmpsb
push
sbb
or
enter
cmpb
lods
mov
std
test
cmp
add
and
sti
lods
push
mov
mov
cmc
xor
xchg
cmp
scas
dec
out
xchg
push
lods
jge
cmp
push
add
xlat
xlat
fwait
mov
cwtl
jle
sbb
mov
adc
mov
arpl
int3
xchg
jmp
mov
lods
dec
in
xchg
pop
inc
sahf
pop
aam
addr16
fsts
ficoml
sbb
mov
xchg
jge
sbb
ds
into
les
arpl
or
or
repz
sbb
decl
jbe
int
xchg
hlt
pop
testl
mov
fcoml
bound
mov
cmp
test
sub
jae
das
shrl
jne
jno
and
push
xchg
inc
and
ja
loopne
insb
push
or
addr16
sub
sti
imull
xchg
push
cmpsb
and
fidivrs
xor
push
xchg
lods
sbb
or
add
data16
inc
xlat
dec
or
add
les
dec
jl
push
dec
dec
lahf
dec
xor
pop
imulb
aad
jo
fwait
mov
push
lock
mov
jp
out
mov
cmp
lahf
sub
sbb
or
jae
pop
mov
adcl
mov
xchg
jl
sbb
add
adc
pop
inc
jge
and
mov
iret
cmp
mov
and
cmpsb
jb
mov
sbb
test
inc
adc
jge
ss
mov
ficompl
fisttpl
inc
rorb
mov
cmp
sti
cmp
mov
frstor
push
movsl
sti
dec
cmp
add
pusha
movsl
inc
mov
xchg
popa
int
filds
cld
pop
daa
cmp
pop
ss
stos
mov
mov
and
adc
push
scas
jnp
xchg
lods
stos
jne
mov
lahf
scas
or
mov
mov
pop
mov
lahf
in
add
sub
xchg
imull
out
cmp
pop
pop
arpl
insb
dec
cmpsl
add
cmp
or
xchg
push
dec
test
fstpt
adc
dec
fldcw
xchg
xchg
movsb
dec
sub
les
cld
mov
pusha
dec
cltd
daa
aaa
jnp
aaa
rorb
jnp
int3
mov
mov
fisubrs
movsb
xchg
lds
dec
adc
and
insl
mov
xor
jns
jnp
jnp
call
rcll
or
push
mov
movsl
je
ds
dec
negl
cwtl
scas
push
int3
mov
insb
mov
loopne
cmp
mov
mov
add
inc
mov
or
mov
mov
jae
emms
insb
sahf
fistl
jno
int
mov
xor
rolb
sbb
fwait
imul
pushf
repz
cld
jne
sub
scas
mov
fwait
push
mov
aas
test
lods
sbb
inc
mov
cli
push
inc
pop
push
incl
push
mov
lea
or
mov
cmc
xlat
sti
iret
mov
shrb
int
cmp
les
xchg
push
cli
ljmp
or
pop
js
inc
in
mov
jl
push
push
xor
sbb
out
fistpl
or
mov
dec
jmp
ds
nop
test
mov
sti
fnstenv
aaa
mov
fildl
aad
aaa
rol
pop
cmp
xchg
mov
movsl
push
mov
xor
add
cmp
sbb
cld
addb
bound
fdivrl
in
add
cwtl
shrl
lock
add
mov
mov
and
icebp
mov
andl
jle
bound
lahf
push
out
or
inc
decl
jg
jno
add
jns
mov
xor
fwait
jl
daa
sub
xor
das
push
jge
imul
mov
xor
inc
jg
push
out
mov
inc
inc
lret
sub
cwtl
ret
lods
sbb
mov
add
js
push
sub
shl
xchg
push
mov
sahf
mov
cmp
lret
lahf
mov
add
aas
mov
pop
mov
add
into
pop
into
mov
repnz
ret
popl
addb
push
cmpsl
mov
mov
sti
dec
lods
cwtl
and
adc
filds
jl
rcrb
cmpl
dec
cwtl
in
int3
mov
movsb
pop
push
cmp
scas
mov
pop
scas
sbb
pop
dec
dec
outsl
rcrb
mov
ret
into
shlb
sbb
cmp
flds
stos
orl
xchg
add
out
mov
cmp
popf
cld
or
mov
pop
int
imul
jnp
aas
fidivs
adcl
lock
pushf
xlat
cmp
adc
nop
jmp
xorb
jnp
setg
ja
outsl
mov
je
push
mov
inc
push
testl
cmp
mov
adc
jle
or
xchg
push
iret
pop
and
das
jmp
andb
jns
pop
mov
adc
popa
testb
xor
sbb
in
iret
das
fnstcw
in
push
jg
mov
mov
dec
sbb
hlt
fwait
add
jno
js
push
or
sti
mov
sbb
jae
adc
scas
xchg
std
ret
sbb
xchg
xor
mov
xchg
dec
orl
js
cmp
int
inc
mov
arpl
jae
xchg
fs
lods
repnz
ret
fwait
mov
jo
push
das
cli
pop
jge
imul
test
rolb
rolb
cmp
add
adc
or
inc
push
xchg
dec
inc
push
sbb
inc
scas
xor
push
push
mov
loop
jbe
or
xlat
iret
fwait
inc
mov
ret
scas
andl
je
cmp
or
fnsave
push
cltd
adc
fiaddl
fs
inc
jg
shll
mov
ret
sti
push
repz
cmp
scas
cmpb
push
notb
mov
mov
cmp
rorb
or
push
cmp
mov
xchg
sbb
pop
push
jnp
or
and
negl
jnp
lods
mov
adc
push
dec
clc
mov
pop
xor
mov
repz
mov
fwait
mov
jg
push
shll
push
sbb
inc
xor
push
data16
lods
pop
fisubrs
jmp
pusha
jnp
daa
nop
ret
inc
push
movsb
mov
test
adc
jg
stc
cmp
fstps
or
aam
push
js
mov
sub
std
pop
push
fdiv
xchg
out
adcb
xchg
cwtl
xchg
out
in
scas
stos
mov
mov
sub
jp
std
pop
test
test
cld
movsl
add
jnp
dec
push
inc
fscale
jb
push
pop
mov
clc
cli
and
cli
jae
cwtl
push
xchg
mov
adc
adc
loopne
in
xchg
xchg
sti
int3
fidivs
lea
push
test
scas
mov
pusha
jne
push
in
js
enter
jae
or
push
lret
dec
sbb
ret
mov
rcr
dec
inc
jbe
jl
imul
lds
and
mov
mov
cmp
pop
cmp
cmp
cs
sbb
inc
fsubrs
xlat
xchg
mov
sub
repz
gs
outsl
inc
jmp
jle
jnp
mov
xchg
xor
scas
addl
mov
icebp
xchg
add
lods
and
mov
xor
or
jo
ljmp
imul
mov
fstpt
dec
loopne
in
mov
mov
lahf
push
wbinvd
sarb
test
insl
sub
fdecstp
lds
or
xchg
lods
loopne
leave
jnp
add
fildl
ret
xchg
mov
icebp
push
xchg
aam
int3
addr16
mov
push
int3
insb
mov
aas
outsl
push
dec
out
sti
fwait
incl
xor
push
insl
mov
or
stos
jnp
mov
fcoml
inc
test
mov
imul
push
das
ja
fistpl
frstor
mov
ja
or
dec
hlt
or
rcrl
sahf
sbb
pop
nop
mov
add
mov
imul
pop
fcoms
mov
push
pushf
cwtl
les
jb
xor
enter
test
into
and
or
jns
jl
push
jb
test
sti
pop
xchg
jne
add
mov
clc
or
lds
inc
push
push
dec
fdivr
pop
movsl
dec
mov
xor
sub
sbb
mov
add
in
mov
ja
and
xchg
cmp
sti
cmp
add
mov
es
aad
in
in
mov
cli
cmp
data16
jnp
fsubrl
jne
cmpb
scas
es
inc
dec
pop
shrl
cmp
or
rcl
sbb
pop
jl
pop
fwait
xchg
add
aam
arpl
xchg
xor
jb
sub
jnp
push
fcoms
xor
mov
les
fbstp
dec
sub
mov
rorl
and
mov
inc
sub
rcrl
into
push
ret
or
adc
into
sarb
sbb
jg
mov
or
cld
sub
popa
aaa
sbb
inc
mov
filds
pop
imul
pop
jl
xchg
sbb
mov
push
imul
inc
test
jmp
inc
int
lea
pop
push
jo
mov
loope
sbb
mov
xchg
lcall
add
sub
or
jne
sarl
aam
out
mov
pop
das
jle
push
mov
jmp
xor
fcomps
mov
sarl
cld
stc
jae
sti
cmp
mov
std
insl
jo
or
mov
adc
pushf
out
pushf
lods
fmuls
adc
test
cmp
ljmp
sti
sub
mov
pop
outsl
push
mov
divl
movsb
ljmp
pop
aaa
cltd
jmp
imul
arpl
fst
ret
pop
loopne
mov
cmp
fstpl
adc
pop
inc
xchg
dec
pop
pop
clc
enter
pop
jae
xchg
mov
or
mov
add
inc
cli
add
cld
adc
movups
add
bound
jge
lahf
mov
mov
dec
lea
cld
in
xchg
mov
push
lock
push
dec
faddl
ja
call
dec
dec
cli
sbb
sub
push
mov
pop
sbb
dec
inc
fsts
je
push
pusha
mov
or
sub
mov
push
stos
jae
daa
repz
adc
jnp
jg
outsb
scas
jnp
mov
jle
xchg
cltd
sub
xor
ret
xchg
jo
xchg
add
inc
sub
sbb
xor
lahf
mov
jecxz
or
mov
mov
scas
pop
cwtl
push
ret
fwait
jnp
add
mov
pop
iret
xor
push
inc
outsb
ljmp
inc
fmul
xchg
mov
cmp
std
or
lock
and
add
loope
dec
inc
xchg
lods
icebp
cmpsl
mov
jle
mov
cld
adc
jge
imul
aas
test
push
cwtl
push
inc
call
push
dec
and
sub
les
movsl
sbb
nop
repz
mov
inc
and
xchg
add
mov
inc
movsb
movsb
jle
mov
sbb
sahf
xor
xchg
xor
xchg
test
popa
inc
aaa
mov
mov
add
outsb
cmp
sbb
std
sahf
in
mov
push
xor
lea
out
inc
add
dec
mov
sbbb
inc
push
icebp
lcall
jge
push
jo
mov
leave
inc
imul
mov
ja
add
dec
add
sti
xor
insb
jg
jp
das
inc
pop
cld
push
dec
lods
imul
mov
aas
mov
cld
out
out
cltd
jne
ffreep
mov
arpl
mov
jg
mov
push
mov
imul
ljmp
std
pop
sub
cmp
push
cmp
ret
cmp
xor
imul
mov
in
cmp
add
loopne
and
lds
sub
sbb
sub
icebp
ret
mov
call
mov
loope
movsl
add
sbb
xchg
mov
orl
jmp
out
xchg
adc
cmp
xchg
movhps
nop
mov
imul
shl
sti
jnp
es
mov
mov
push
dec
add
dec
push
in
pop
cmp
popf
cmp
pop
ja
cli
pop
push
pushl
fistl
dec
int
cli
lods
cmp
pop
fidivrs
stos
pop
sub
sub
mov
scas
or
xlat
dec
cld
xchg
lahf
pusha
cmpsl
jnp
ss
aaa
mov
push
clc
aam
lds
les
dec
sti
or
gs
test
shl
and
outsl
into
dec
push
inc
movntps
cmc
aad
movsb
les
ljmp
dec
mov
orl
push
sbb
pop
in
das
stos
decl
jmp
cld
jl
dec
sub
pop
rcr
sar
addr16
out
push
push
inc
rcl
sbb
dec
sbb
pop
or
mov
jg
mov
jge
pop
in
scas
cltd
ds
sub
mov
cmc
cs
sti
daa
testb
lds
pushf
mov
xchg
lock
adc
fcom
jg
jb
or
loopne
mov
inc
nop
jnp
fwait
inc
add
inc
jae
xchg
or
insb
jmp
ret
jmp
in
or
xor
add
mov
cmp
sub
xor
sbb
mov
inc
adc
pop
mov
lods
sti
aam
mov
jnp
dec
xchg
adc
jbe
mov
inc
inc
sub
test
imul
add
jne
pop
sbb
pop
mov
xchg
pop
jmp
mov
mov
stc
push
outsl
outsl
dec
push
sub
adc
cmp
scas
xlat
xchg
ret
xchg
dec
shll
sbb
lea
in
or
cmc
fadd
pop
mov
push
les
jg
movl
cmp
or
rcll
inc
fcom
es
fnsave
je
hlt
push
in
pop
or
push
jnp,pt
dec
sar
jmp
iret
or
nop
adc
cmp
int
into
shll
in
cmp
adc
scas
pop
popf
inc
fwait
sahf
or
sbb
xchg
shrl
cmp
faddp
jge
std
cld
jg
out
insl
mov
mov
xor
pop
jp
out
add
cmpsl
push
sub
arpl
sub
jnp
dec
jl
dec
cmpsb
or
dec
cmp
sub
out
std
jnp
xchg
dec
sbb
and
sbb
int
dec
pushf
lret
add
cs
push
mov
cmp
ja
dec
inc
clc
xor
jge
fs
cwtl
xchg
mov
inc
lods
test
aam
mov
cmp
push
aas
aas
aad
and
add
inc
es
cltd
sbb
mov
xor
lods
cmp
cmpl
cmpb
add
mov
outsb
lock
add
cld
xor
fdivl
test
jbe
adc
pusha
lods
mov
call
cmp
scas
std
sub
popa
mov
jmp
test
pop
mov
push
roll
sti
shlb
arpl
loope
cmp
mov
addr16
adc
jecxz
pop
and
add
jno
add
sub
movsb
fiadds
inc
cmpsl
clc
cmp
int
cmpsl
fsts
pop
jmp
hlt
mov
jle
sub
add
mov
pop
sahf
mov
add
daa
fistpl
das
and
inc
jp
cltd
cmpsl
add
and
fcompl
cmp
cmp
xchg
adc
xor
xchg
cld
mov
les
ret
lcall
xor
xchg
lcall
clc
mov
sub
iret
mov
mov
lret
adc
pop
ret
cs
aad
int
std
out
inc
push
insl
sub
daa
lcall
inc
inc
push
mov
js
aaa
jno
xchg
jo
int
bound
arpl
pop
stos
inc
repz
scas
dec
sub
mov
and
hlt
adc
xlat
popf
or
pop
xor
mov
prefetch
scas
or
inc
push
sub
int
adc
insl
cmp
xchg
pop
fmul
pop
inc
js
loopne
ret
loop
incb
pop
jle
gs
iret
aaa
fisttpll
push
int
icebp
mov
jns
and
push
test
scas
inc
push
pushf
shlb
mov
shll
pop
movsl
mov
fwait
inc
imul
cltd
mov
call
and
add
sbb
jle
push
lret
push
ror
in
dec
inc
pushf
bts
or
mov
sub
dec
insl
cli
cld
jle
outsl
aam
int3
std
lahf
jns
adc
mov
repz
cld
call
cmc
pop
xchg
cmp
dec
inc
sub
cmp
in
jnp
inc
dec
xor
jp
dec
or
pop
xchg
jo
pop
dec
rcrl
mov
inc
cmp
movb
js
sbb
jnp
jnp
movsb
jnp
dec
mov
sbb
xchg
pop
out
jae
pushf
lret
mov
cmp
popf
xor
leave
cmp
ja
cld
cli
popf
scas
cwtl
pop
aad
and
imul
test
sub
inc
popa
int
xchg
lods
loope
xor
add
lods
rcll
sti
lret
std
cltd
test
bound
cmp
sbb
pushf
fnstsw
cwtl
mov
test
push
cmpsb
cmc
push
mov
mov
xchg
dec
jae
jno
fcoms
das
loopne
mov
out
mov
lcall
push
pushf
mov
loope
mov
pop
rclb
dec
dec
adc
fwait
push
ret
stos
push
icebp
jmp
and
dec
lcall
adc
and
xchg
cld
add
outsb
cltd
add
popf
loop
xor
sub
inc
push
sbb
in
mov
data16
lock
in
dec
in
loopne
mov
out
jg
cmp
xchg
sbb
ds
test
pop
ljmp
fcoms
xchg
adc
and
cmp
mov
jg
ja
mov
shll
or
adc
xor
test
out
mov
jmp
testl
repnz
cmp
adc
xchg
inc
mov
rcl
mov
push
mov
das
cmp
jl
jb
popa
fdivl
mov
sbb
jmp
ljmp
pop
sub
lea
push
test
psubusw
fnstsw
orb
cvtps2pd
sti
dec
repnz
int3
sbb
dec
xor
jg
lcall
fiaddl
add
and
loope
dec
mov
adc
jbe
aad
jg
sbb
and
movsl
movsl
mov
std
lea
add
mov
cmp
outsl
in
add
outsl
inc
inc
inc
mov
repz
rclb
sbb
jns
hlt
pusha
mov
rcr
cs
decl
clc
push
jae
mov
cmp
into
loop
aas
call
lret
cmp
enter
in
cmp
test
in
adc
mov
mov
dec
xchg
daa
pop
sub
xor
lcall
call
int3
jl
lods
jecxz
dec
mov
mov
fldenv
mov
pop
div
lock
mov
xchg
cld
pop
cmp
cs
rcr
xchg
ret
add
repz
xchg
xchg
lea
sbb
mov
andb
sub
and
dec
ss
pushf
push
push
sahf
int
cmp
jno
or
push
ret
out
or
std
pop
xor
call
dec
cmp
cmp
inc
sub
mov
push
cmp
mov
popf
cltd
lea
insb
sub
lea
dec
and
leave
lods
test
cmp
cli
jb
add
jnp
mov
int3
mov
or
and
sti
xor
mov
mov
outsl
les
or
dec
push
lods
xchg
sub
dec
mov
cs
mov
in
out
mov
xchg
roll
pop
testb
aad
leave
fs
mov
jae
pop
je
xor
jmp
pop
sbb
push
mov
scas
mov
lcall
lods
adcb
mov
popf
fdivrl
jge
sti
test
jle
shrb
jge
mov
scas
pop
pop
je
xlat
or
cmpsl
jae
sub
jne
enter
dec
and
sub
inc
scas
adc
jne
cld
jge
icebp
andl
cmc
xor
movsl
or
mov
test
jp
popa
mov
mov
lret
mov
sbbb
push
or
adc
jmp
mov
cld
sti
xor
cmp
adc
lock
cmp
test
das
dec
add
psubq
pop
pop
sub
push
push
inc
fwait
dec
cmp
test
mov
inc
push
ss
mov
lock
negl
cmp
dec
fld
test
mov
push
clc
or
ds
and
push
inc
call
jg
insl
fisttps
fwait
pop
dec
xlat
call
dec
jae
or
cmp
xchg
push
xor
mov
iret
sub
int3
shll
rorl
cmp
fistpl
or
sbb
mov
test
mov
out
pop
outsl
mov
xchg
sub
das
shl
jno
mov
cmpb
cmp
or
jnp
push
les
andb
inc
movsbl
mov
in
inc
int
fs
repnz
xlat
popf
mov
sbb
shrb
cwtl
fisttpll
aas
mov
lds
rcl
les
lea
xchg
aam
hlt
inc
pop
mov
bound
push
sti
in
lea
cmp
mov
sub
mov
add
sub
std
cmp
iret
sti
sub
adc
les
insb
push
das
push
out
pushf
int
sarb
arpl
stc
mov
rorl
xor
mov
rcll
stos
dec
ja
imul
push
out
ficoms
addr16
rorl
pop
mov
mov
jne
or
jl
dec
mov
or
mov
lods
jge
outsb
cmp
jl
gs
push
sub
imul
adc
push
inc
cltd
das
arpl
add
or
push
sub
push
cld
imull
insb
dec
fidivrl
mov
adc
jne
sysexit
fmul
inc
mov
mov
imul
cltd
shll
sub
in
mov
dec
test
dec
andl
leave
or
push
and
sbb
cmp
imul
mov
mov
add
in
adc
cmp
dec
jne
aam
pop
dec
xchg
outsl
enter
or
push
add
mov
push
iret
mov
fcmovnbe
xor
mov
imul
mov
mov
push
and
test
pop
out
int3
sub
push
lods
adc
xor
jp
cli
mov
push
out
lea
and
mov
fs
call
mov
and
fnstcw
loope,pt
ds
inc
shrb
inc
mov
pop
sub
mov
repz
dec
jmp
pop
add
add
ret
jns
iret
lea
dec
cmpsl
int3
sti
mov
lret
es
test
and
pop
xchg
ja
add
test
xchg
insl
lea
sbb
test
sbbb
ds
hlt
nop
push
inc
push
xchg
movsb
sub
mov
jl
mov
fstpt
test
arpl
mov
ds
mov
mov
aas
shl
adc
in
cmp
je
mov
dec
in
adc
push
mov
pushf
in
dec
inc
or
sbb
popl
cmp
push
xchg
jnp
push
mov
xchg
and
in
sti
sbbb
rcl
cmp
and
aad
mov
inc
movsl
int
pop
mov
inc
lret
outsb
xchg
inc
imul
xor
pop
das
push
orb
push
jl
pop
leave
lret
int
gs
xchg
sahf
aas
mov
and
mov
addr16
cmp
mov
cwtl
push
jmp
movsl
xchg
shlb
int
repnz
xchg
sub
mov
into
pop
dec
lea
jnp
push
fwait
jmp
imul
fwait
dec
hlt
fsubrs
add
dec
xchg
mov
loope
jnp
xorb
leave
test
push
cli
adc
or
push
std
xchg
sub
inc
in
rol
int
or
xchg
mov
lea
hlt
push
mov
in
pop
jge
push
cmpsb
mov
dec
fwait
in
jnp
jge
add
xchg
pop
mov
pusha
or
and
pop
mov
fs
test
mov
stc
push
push
sbb
nop
pop
mov
xor
adc
cmpsb
or
lret
xor
jae
adc
arpl
jne
xchg
dec
dec
add
out
pushf
dec
xchg
sahf
cmp
xchg
ret
xlat
jl
pop
mov
shlb
jmp
cs
dec
mov
dec
push
dec
mov
in
cmp
push
ret
daa
in
stc
es
js
adcb
enter
int
mov
or
mov
jbe
pop
jb
cld
push
or
ss
shrl
scas
daa
push
jo
bound
jmp
mov
xchg
jg
dec
push
pop
fnsave
mov
xor
mov
inc
mov
or
dec
xor
cmp
dec
add
mov
push
fsubrl
aam
pop
mov
ret
popl
xchg
xor
mov
push
mov
pop
movsl
mov
xchg
ret
mov
mov
push
aad
sti
call
sbb
mov
loope
xor
out
dec
push
mov
xchg
shll
cmpl
js
mov
pop
push
scas
fistps
jnp
lock
ret
push
mov
and
cld
and
pop
sbb
xchg
ja
dec
scas
je
lods
fnstcw
jae
mov
or
int3
inc
inc
dec
mov
xchg
mov
push
jne
pop
dec
ja
xchg
and
clc
lcall
jne
cwtl
sbb
jno
mov
insb
into
les
cmp
xor
xor
push
adc
lret
add
or
mov
inc
lret
mov
mov
lods
mov
shrb
jnp
lea
dec
dec
or
pop
push
mov
jnp
inc
adc
mov
mov
mov
pop
jp
push
mov
shll
es
clc
or
pop
dec
nop
sti
jns
test
add
nop
js
sti
js
sbb
cmpsb
pop
mov
test
mov
adc
cmp
adc
out
movsl
or
daa
sbb
xchg
jnp
bound
cmpl
push
imul
leave
and
lahf
sbb
dec
sub
xchg
dec
jmp
jle
sub
cmp
cmpsl
inc
cmpb
xchg
pop
push
shl
sbb
ret
adc
mov
in
lcall
inc
js
inc
inc
xor
cli
or
loopne
add
lods
mov
xor
aad
jno
xor
ss
mov
in
into
lret
fiadds
mov
ret
aad
mov
cmp
xchg
and
cmp
xor
jns
and
or
jp
pop
xchg
adc
push
and
iret
test
fstp
test
cmp
jo
aas
shlb
addl
mov
test
int3
mov
or
int3
in
aaa
or
and
lea
pop
mov
ja
jmp
cmp
adc
sarl
ja
cmc
jg
adc
and
mov
imul
jno
lret
mov
aas
lea
lods
inc
cld
insb
sbb
movb
hlt
xchg
push
loopne
xchg
cmp
mov
je
push
xor
mov
movsb
pop
cmp
mov
sbb
lea
iret
add
inc
insb
sbb
cmp
rclb
xor
sbb
mov
xchg
int
fsubrl
clc
jl
loope
outsb
push
or
cltd
inc
hlt
mov
jae
cld
sub
pop
cmp
pop
cld
adcl
stos
adc
cmp
dec
cmpsl
je
jno
xchg
and
mov
dec
jne
pop
inc
lea
xchg
pop
inc
inc
push
aad
jae
out
lds
addr16
and
xchg
mov
in
push
std
sar
adc
insb
mov
mov
int
in
inc
lea
movsl
jnp
and
pop
mov
ss
push
jg
inc
gs
int3
fwait
loope
enter
mov
fsubr
sahf
push
dec
sbb
cmp
ljmp
jge
dec
popf
pop
mov
dec
aas
fdivl
adc
test
js
jb
ss
or
das
jp
or
std
or
lcall
div
in
mov
mov
cld
fadds
shrb
mov
ljmp
sbb
outsl
js
push
dec
outsl
lret
mov
dec
sub
or
js
xor
aad
mov
inc
lods
test
adc
sub
and
cmp
dec
pop
mov
inc
sub
ljmp
xor
sbb
jb
aaa
inc
pushf
jecxz
pop
or
mov
dec
sahf
xor
mov
pop
xchg
cmp
cmpsl
pop
sbb
loop
sbb
adc
pop
lods
xlat
mov
jnp
out
cmp
or
and
and
pop
int3
mov
xor
sub
mov
dec
dec
orb
mov
lods
pop
sti
iret
sbb
xchg
nop
pop
push
sbb
pop
hlt
lock
in
jecxz
pop
sub
lods
imul
push
or
xchg
jne
mov
and
xchg
pop
add
add
bound
mov
subb
nop
pop
lret
xor
mov
cmp
call
xchg
movsl
fnsave
in
fdivl
jnp
dec
cwtl
pop
dec
jbe
pop
fwait
pop
ret
gs
test
aas
mov
ss
or
and
mov
adc
jbe
dec
sbb
aad
xor
fdivrs
out
cmc
xchg
hlt
and
sbb
jae
insb
pop
enter
cs
sti
mov
and
fcomip
xlat
xor
push
popf
inc
push
mov
adc
xchg
dec
lea
mov
popf
rolb
sarb
mov
icebp
fisubrl
add
xchg
mov
in
dec
idivl
into
rorl
pop
push
dec
jae
sub
cmpsl
add
sbb
add
jnp
rcrb
pop
pushf
inc
mov
orb
dec
ljmp
push
pop
rolb
add
xchg
mov
push
int
sti
daa
sahf
pop
sahf
cmp
xorl
dec
dec
mov
push
ds
imul
cmp
dec
adc
insl
or
mov
scas
push
inc
mov
fldt
imul
ret
ja
mov
xchg
lock
mov
jg
pop
cmp
int3
cmp
lods
pop
adc
pop
cmp
push
pop
pop
mov
mov
test
and
lcall
fldl
push
insl
sub
test
test
or
aad
pop
stos
sub
sub
into
in
mov
dec
shll
mov
ret
xchg
mov
jmp
jnp
ja
xchg
cmpsl
test
rcrl
mov
or
scas
movsl
mov
dec
sub
sub
ror
subl
outsl
jg,pt
mov
lahf
gs
scas
mov
inc
xchg
jmp
imul
sub
and
mov
or
jb
leave
cltd
push
call
cmp
pop
xor
or
or
adc
fcmovnbe
mov
les
fstpt
insl
pop
jae
cmc
test
stos
xorl
jl
push
add
xchg
lret
lods
push
adc
push
int
ljmp
rorl
adc
jg
jge
cmp
fs
xchg
jecxz
push
pushf
in
cmp
add
lcall
sbb
push
sbb
sbb
subl
push
lods
in
push
pop
push
push
sbb
movsb
or
mov
test
mov
cwtl
fildl
sub
insl
jo
xchg
gs
or
loopne
mov
xchg
push
and
movsb
and
fsubl
xchg
push
sbb
in
sub
fnstsw
movsl
inc
sub
mov
pop
dec
mov
dec
lock
es
xchg
xor
push
cmp
mov
and
cmp
pop
nop
aas
mul
jnp
movsb
dec
xlat
cmp
cmp
insb
movsb
push
shl
add
loopne
insl
mov
pop
mov
fcoms
inc
sti
sbb
shll
insl
push
sti
pop
scas
add
imul
pop
ret
xchg
ret
pop
or
pop
imul
ficompl
add
xor
andb
popf
adc
adc
or
fwait
fwait
faddl
mov
inc
xchg
mov
jne
test
add
jle
xchg
push
dec
adc
imul
imul
mov
mov
and
mov
xchg
outsb
pop
scas
jno
out
sbb
inc
xor
pop
cltd
roll
sub
out
loopne
stc
xchg
xchg
test
das
into
in
xorb
or
dec
add
jbe
call
cld
insl
out
pop
inc
inc
pop
fildl
or
arpl
das
mov
or
cmp
les
mov
ds
xchg
push
push
leave
lahf
add
jns
jp
insb
add
inc
int3
cltd
outsl
and
dec
insb
xor
cli
test
inc
call
jmp
and
movsl
rcrb
jl
hlt
or
insl
into
xchg
movsl
push
mov
mov
pop
sbb
add
lahf
lods
jns
dec
or
jmp
mov
xchg
push
sbb
cli
mov
or
or
jns
test
std
add
ror
mov
cmpsl
test
sbb
pusha
add
mov
dec
movsb
xchg
jnp
xor
xlat
pop
ds
fstpt
mov
mov
push
mov
pop
push
test
jge
mov
push
mov
lea
sbb
fisubrl
pop
icebp
test
mov
sti
xchg
cmp
and
out
jo
push
add
jo
and
rol
jmp
push
push
xchg
fdivrs
movsb
add
test
je
popa
imul
lret
jl
add
int
adc
push
jnp
jl
ja
fistpl
rorl
mov
arpl
cmpsl
jno
insl
xchg
mov
adc
xor
and
outsb
dec
mov
cmpsl
mov
xchg
into
jge
je
jne
int
cmp
sbb
pop
adc
cmp
push
arpl
adc
xor
dec
jbe
lret
mov
mov
in
das
cmp
bound
jnp
call
fwait
lahf
or
jg
push
jnp
xchg
sahf
sarl
jno
iret
dec
or
add
cmc
xchg
sti
in
dec
add
pop
mov
idivb
mov
pop
in
pushw
xlat
imul
and
out
sbb
push
pandn
lea
sahf
or
fwait
mov
sbb
sbb
xchg
mov
mov
inc
pop
mov
lret
dec
cmp
daa
sbb
dec
in
push
int
push
pop
out
push
dec
push
mov
mov
inc
xchg
fidivl
test
sti
lret
outsb
notb
les
lds
lods
add
mov
push
lret
cmp
cmp
dec
sub
push
cld
lret
je
out
adc
lods
add
imul
jge
sbbb
cld
mov
loope
or
dec
in
dec
cmc
ljmp
mov
pushf
push
loopne
inc
jge
sti
jg
lds
inc
mov
jmp
push
mov
inc
movsb
dec
inc
jns
pop
pop
mov
mov
inc
pop
adc
inc
loope
mov
stos
cmp
lds
mov
dec
in
das
popa
cltd
jo
aas
inc
adc
mov
fiadds
pop
mov
nop
aad
inc
or
lods
push
jge
das
pop
inc
cltd
loop
xor
mov
daa
leave
pop
sub
mov
jb
push
lea
lods
jmp
scas
daa
xor
dec
xchg
mov
leave
cmp
jb
xchg
xor
jge
nop
std
lods
test
cmp
sub
cmp
ja
aas
int3
jnp
test
lret
cmp
mov
cltd
icebp
lea
mov
into
movsl
mov
add
cld
and
push
mov
adc
into
arpl
bound
inc
push
lcall
mov
sti
push
stc
fidivrs
mov
test
or
popf
insl
cmpsl
pop
cmp
int3
jae
adc
dec
jnp
enter
sti
enter
bound
mov
or
loopne
xor
pop
sbb
push
cmp
mov
jg
mov
or
stos
popf
xchg
loop
or
and
jb
xchg
shll
inc
imul
mov
lahf
mov
jecxz
test
pop
and
cli
rcrl
pop
push
or
mov
lea
pop
inc
jnp
outsb
iret
xchg
or
nop
imul
lock
mov
jbe
push
mov
pop
std
lcall
sarl
das
mov
jb
lcall
iret
jnp
enter
sub
call
cmp
rorb
rol
adc
sub
shrb
lcall
mov
cmp
fiaddl
xor
cmc
mov
test
cmpsb
pop
adc
sub
mov
mov
lods
push
imul
cmpsb
or
mov
mov
push
cmp
mov
ror
ja
roll
in
push
stos
sti
mov
sbb
cmp
lds
push
test
xchg
cmp
push
push
js
mov
pop
mov
cs
push
repz
sub
sub
outsl
xchg
jae
pusha
pop
cmp
add
int
pop
sub
in
cltd
test
lea
mov
cmp
scas
out
inc
pop
inc
lahf
aaa
lcall
xor
pop
out
jns
dec
or
mov
xchg
pop
xchg
inc
lret
ret
lods
int
fsubrl
push
test
mov
nop
xor
add
aam
inc
push
in
stos
pushf
mov
cld
pusha
pop
dec
xlat
cmp
xor
push
pusha
inc
add
loope
leave
in
pop
mov
lahf
mov
addr16
pop
xchg
repz
std
mov
sti
hlt
mov
sbb
inc
mov
adc
ficoml
or
xor
aaa
or
jp
push
lds
int
pop
dec
jb
xchg
add
or
xorb
push
int
jns
inc
cltd
fwait
ds
jg
fstps
rorl
fwait
sub
es
dec
pop
push
outsb
lcall
cltd
pop
cmp
test
mov
sbb
xchg
ret
in
pop
inc
and
xchg
cld
inc
test
in
nop
inc
and
cld
xchg
hlt
jnp
clc
test
inc
cmp
mov
aaa
mov
and
mov
adc
icebp
xlat
and
xor
test
add
sub
mov
mov
add
xchg
xlat
sbb
cmpsb
cld
scas
in
daa
pop
addr16
add
mov
inc
or
add
fsubrl
popf
push
pop
ret
cwtl
sbb
xchg
iret
fistpll
cs
jl
cwtl
aas
lods
or
lcall
jnp
pop
test
in
mov
dec
into
mov
incl
les
xchg
dec
mov
cmp
jge
xchg
mov
push
mov
dec
cwtl
pop
inc
sbb
push
dec
xor
ficompl
jge
mov
or
xchg
out
jnp
stos
add
in
cli
or
sarb
out
push
rcr
stos
sub
dec
cmp
xchg
stos
mov
js
shr
jnp
int
cmpl
xor
test
xchg
imul
push
cmpsb
and
fldt
jb
cld
lahf
sti
mov
push
outsb
pop
je
daa
adc
push
sbb
mov
mov
shl
pop
aas
mov
sub
cmp
test
pop
jl
inc
sbb
dec
popa
mov
add
cs
mull
jae
gs
dec
addr16
lea
sbb
mov
xor
pushf
je
cltd
jno
aam
push
sbbl
mov
jl
jp
lcall
mov
xor
cmp
add
push
cld
mov
sarb
add
int3
mov
mov
xor
lods
sti
cmpsb
adc
jge
hlt
push
int3
stos
jb
mov
inc
call
pop
add
insb
mov
lock
mov
test
and
in
mov
sbb
rorl
movsl
movsb
add
push
xchg
mov
cmp
sahf
cmpsl
fwait
data16
cmp
movsl
xchg
xchg
push
mov
jb
divl
popl
mov
xchg
sub
xchg
pop
or
inc
jns
push
jle
dec
or
mov
stos
dec
push
or
dec
in
push
sub
clc
xchg
ret
iret
sbb
dec
popa
mov
inc
decl
shrd
mov
or
mov
pop
lods
movsb
idivl
xchg
sub
xchg
sub
test
xor
cld
sbb
dec
jge
jne
mov
lret
cli
mov
std
cwtl
int3
mov
push
dec
sti
je
mov
jbe
addr16
shlb
pop
popa
mov
pop
shrl
outsb
arpl
mov
repz
push
or
out
outsl
sub
adc
cmp
in
dec
in
cs
pop
mov
insl
sti
jge
xchg
lret
das
shrl
outsl
int
stos
mov
int
push
int
jo
dec
adc
cmpsb
jle
std
not
out
mov
push
lds
imul
sbb
out
lock
add
cmp
or
sbb
adc
xor
jl
cmp
enter
cld
hlt
mov
or
cmc
test
js
aaa
mov
in
cmp
or
std
ljmp
jnp
sbb
mov
pop
pop
rorb
inc
fs
lret
lahf
add
push
dec
pop
lods
test
je
push
ret
mov
sbb
jo
je
mov
lcall
push
popf
sub
mov
lcall
pushf
or
cmp
mov
std
pop
mov
mov
or
jb,pn
push
adc
and
mov
or
push
test
cmpsb
adc
mov
imul
fwait
icebp
add
push
loopne
addl
jmp
jnp
pop
cmp
jno
iret
jb
xchg
outsl
stos
or
mov
fcomip
pusha
dec
ret
mov
mov
data16
adc
je
or
jmp
lods
aam
insb
in
gs
sarl
imul
in
cmpsl
je
mov
dec
inc
jnp
int
push
mov
mov
sub
mov
sbb
sbb
mov
or
mov
sub
push
insb
or
addr16
insb
movsl
jl
cmp
xchg
jle
sbb
vphadduwq
xchg
xor
sbbl
add
jg
test
mov
push
jmp
cmc
cmpsb
mov
xchg
or
rclb
in
mov
lret
cmp
cmp
js
dec
mov
cwtl
jp
inc
jb
cmp
stos
ds
int
movsb
xchg
adc
mov
mov
mov
rclb
cld
push
adc
push
cmp
int
adc
test
push
gs
es
mov
je
stos
pop
iret
mov
and
outsb
hlt
nop
push
dec
fwait
add
pop
xor
dec
ss
ror
dec
cmp
mov
mov
or
in
push
pop
dec
mov
les
test
add
jno
sub
sbb
es
lea
and
shl
jo
mov
cmp
adc
sbb
sti
dec
add
ja
ret
and
inc
aas
es
sub
addr16
pop
cwtl
xor
into
mov
jmp
jae
mov
sbb
scas
in
mov
lock
mov
test
scas
mov
inc
jg
inc
push
int3
ret
int
in
push
pop
or
mov
add
lock
ds
ret
nop
fwait
hlt
or
sub
into
pushf
inc
mov
mov
shrb
or
dec
cmc
xchg
jne
jmp
imul
cmpsl
jnp
dec
or
and
adc
sbb
nop
add
inc
les
movsb
loop
xor
jge
cmp
stos
cmp
or
jecxz
and
sti
inc
xchg
and
cmp
scas
sub
adc
dec
or
mov
mov
addl
pop
das
clc
jne
cmp
pop
mov
push
push
hlt
ljmp
aaa
icebp
add
fwait
xchg
push
xchg
mov
push
inc
popa
add
test
dec
inc
daa
pushf
insl
lea
clc
lea
in
mov
int3
insl
in
cmp
xor
mov
ret
push
lods
pop
mov
int3
mov
inc
cld
pop
sub
in
or
mov
sti
inc
sbb
pop
mov
push
bswap
or
mov
dec
adc
icebp
cmpl
sbb
xor
fmuls
sbb
fs
daa
push
dec
xchg
dec
or
pop
sub
cmpsl
incl
or
stos
addr16
push
loop
cmp
cmpsb
mov
das
dec
pop
xor
loopne
lods
inc
add
dec
lcall
jae
cli
faddl
les
icebp
andb
mov
mov
cltd
fucomp
jne
int
repz
mov
lea
mov
dec
ret
sbb
jnp
add
push
adc
and
cmp
les
add
pushf
mov
fdivrl
xor
daa
jecxz
call
push
lcall
or
pusha
lods
sbb
mov
mov
dec
test
add
dec
xor
push
lds
push
outsb
mov
cmpl
repz
lret
xchg
mov
lret
cmp
stc
mov
hlt
mov
ljmp
pop
mov
mov
push
sti
xor
xchg
jp
adc
jmp
lcall
mov
lret
enter
test
icebp
pop
cmp
mov
xchg
hlt
mov
lcall
lods
xor
push
mov
push
xchg
mov
cmp
pop
rorl
sub
mov
rcrl
xorb
int3
sbb
jge
ret
or
cmp
into
ljmp
sub
inc
in
ss
lods
adcl
lahf
fbstp
xchg
pop
fwait
mov
sti
jl
mov
mov
mov
lds
in
mov
mov
insb
es
push
mov
std
cmpsb
cmp
lods
loope
inc
int
not
enter
jge
dec
mov
push
xchg
ljmp
aaa
dec
push
xchg
sti
and
int3
dec
ja
imul
add
sbb
lods
pop
adc
xchg
push
cmp
in
gs
lds
aam
mov
fs
mov
in
inc
dec
pop
sahf
jbe
dec
cmpsb
sti
cmp
cmp
xchg
data16
test
nop
insb
sub
or
xorb
cmpsb
ds
int
cli
xchg
jge
das
adc
or
jae
or
sti
add
or
xchg
gs
jg
adc
mov
into
loope
mov
adc
mov
loopne
xchg
test
pop
fwait
mov
xchg
mov
cmp
cmp
dec
mov
lahf
in
fsubrs
loope
xor
arpl
xor
mov
and
sbb
div
aaa
fldl
cmp
or
cltd
xchg
repz
js
pop
or
and
or
rorl
into
sub
mov
sub
fadds
fdivrl
es
sub
fidivrs
or
cmp
insb
inc
pop
out
push
pop
fstpt
jo
inc
mov
cwtl
out
cmpsb
in
push
dec
insb
mov
inc
mov
das
fwait
in
mov
mov
xchg
fs
fsubrs
fldcw
incb
mov
addr16
xor
imulb
jae
dec
shl
cmp
xorb
push
data16
movsl
xor
pushf
or
jbe
pop
fstps
mov
or
insb
minps
sbb
cmp
adc
jl
push
stos
dec
mov
insl
outsb
fisttpl
leave
mov
into
daa
lock
dec
nop
es
sub
sub
fnstcw
push
fwait
mov
adc
dec
test
sarl
imul
cmp
pop
scas
in
xor
mov
and
loopne
scas
xor
sub
push
mov
in
push
mov
loopne
inc
sbbb
pop
pop
clc
andb
cmp
insl
das
int3
shll
aas
push
cmp
test
cltd
xchg
push
add
cmp
xchg
test
jbe
rol
testb
shr
lcall
inc
cltd
rcl
jo
mov
or
mov
jge
inc
xchg
sti
xchg
jnp
insl
stos
lret
xor
jnp
xchg
sbb
sbb
stos
push
stos
iret
mov
addr16
sahf
lcall
sbb
add
xchg
in
clc
lcall
dec
in
dec
xchg
or
int
cmp
jnp
das
ja
mov
mov
xchg
int
mov
lret
pop
mov
xchg
sub
lcall
cmc
xchg
cmp
pop
sub
pop
inc
icebp
loope
shrb
push
into
jnp
ss
call
pop
into
mov
sti
andb
inc
jge
insb
mov
enter
mov
dec
imul
test
cmp
push
push
lds
xlat
iret
mov
push
mov
lret
outsb
shll
lahf
mov
xchg
pop
ret
and
arpl
rcrb
dec
int
call
pop
or
jae
sub
into
arpl
jno
jle
scas
jle
nop
cmpsl
repz
pop
sub
stc
xor
sbb
adcl
mov
xchg
jge
add
sbb
std
mov
jmp
inc
pop
loop
scas
dec
or
cmpl
pop
fisubrs
dec
in
or
ds
out
and
and
in
jnp
cmp
jp
test
xor
mov
pop
dec
std
stos
mov
orb
mov
lds
scas
outsl
mov
sbb
mov
aas
xchg
aad
sub
fsubrs
mov
dec
mov
push
xlat
xchg
or
dec
out
mov
jle
adc
gs
test
mov
pop
loopne
jnp
sbb
fdivrs
xchg
sub
addr16
inc
pop
mov
stos
jnp
mov
xor
mov
lret
addb
sub
fisttpl
ret
test
dec
and
rol
or
clc
pop
in
lds
lret
int3
dec
sbb
nop
mov
xchg
loope
pop
mov
jg
aad
push
xchg
push
sar
pop
mov
cmp
adc
mov
mov
mov
cmp
add
stc
fidivrl
imul
jns
pop
push
and
push
adc
mov
lea
xor
mov
push
pop
sahf
fdiv
fwait
sub
std
xor
in
stos
ret
xor
pushf
mov
ja
sar
mov
in
stos
sub
mov
inc
test
pop
sbb
cmpsb
mov
cmp
mov
pop
aas
mov
adc
pop
adc
push
pop
pop
inc
leave
fsubrs
jp
adc
sti
jecxz
icebp
pop
cmp
and
shrb
jbe
std
lahf
or
push
insb
xchg
dec
mov
movsb
mov
sbbl
das
push
lods
rorl
gs
outsb
mov
lea
sub
and
cmp
inc
push
jg
cltd
outsb
pop
pop
cltd
push
rcrb
lea
test
lock
add
test
insl
cmpsl
dec
flds
imul
pop
sahf
sarl
testb
jo
mov
lcall
jne
or
scas
xlat
mov
test
aaa
or
test
inc
imul
aaa
call
add
dec
idivl
sub
pushf
dec
inc
add
fwait
cs
mov
mov
pop
int
js
mov
pop
cmp
int3
mov
cmp
scas
sti
jg
mov
fwait
pop
sbb
mov
dec
sub
pop
and
mov
lahf
shrl
into
adc
mov
fucomip
and
xor
stos
inc
adc
in
sti
int
in
and
loope
cmpsl
mov
lret
and
cmp
inc
and
js
dec
fsubrp
jecxz
add
jge
cmp
sub
mov
mov
xorl
jp
fwait
movsb
mov
mov
and
mov
sbb
rcrl
fstl
add
cmp
pop
xor
and
ja
cmc
scas
stos
repnz
cld
les
icebp
popf
mov
cld
out
int
fs
jne
imul
xchg
ficoml
jg
jae
or
or
je
mov
sub
fildll
mov
push
mov
movsb
pushf
dec
cmp
inc
cmpsb
or
jmp
rorl
cmp
outsb
pop
ja
mov
sbb
int3
or
cmp
lea
idivl
sbb
faddl
cmp
sbb
dec
lock
addb
sub
mov
stos
cmp
aaa
mov
imul
movsl
in
inc
mov
cmp
outsl
sti
aam
lcall
setl
sbb
push
or
or
into
out
add
divl
out
push
mov
pusha
test
mov
into
in
mov
inc
dec
or
mov
lret
stos
jns
lcall
jnp
fistl
arpl
lods
xor
imul
mov
push
inc
xor
leave
adc
xchg
ss
js
jg
outsb
and
lahf
xor
pop
or
add
stos
xor
dec
std
test
pop
dec
dec
popa
mov
jle
mov
lea
std
jo
out
mov
lock
push
sub
mov
stc
jnp
mov
ror
fnsave
lret
sti
int
stos
jae
mov
pop
jmp
mov
bndstx
mov
scas
cld
dec
push
inc
sbb
lret
jecxz
and
movb
std
mov
xor
xchg
arpl
outsl
imul
movsb
sub
ficoms
dec
es
lret
pop
mov
inc
sbb
out
sub
or
or
scas
ret
ja
pop
std
cmp
inc
imul
or
in
stos
mov
sbb
clc
outsb
sbb
xchg
mov
mov
or
arpl
movsl
fidivl
or
popf
sti
imul
outsb
arpl
inc
out
stos
sti
pop
sbb
jo
bound
add
imul
jne
mov
and
fcompl
in
and
lahf
add
cld
add
or
mov
dec
push
push
aaa
fs
lods
sti
ss
andl
scas
iret
hlt
jnp
imul
leave
dec
dec
fiadds
pushf
bound
mov
mov
pop
jge
mov
xlat
stos
andl
push
mov
rcll
mov
xor
lret
movsl
insb
jmp
pop
mov
and
push
hlt
sti
fwait
jg
fistpl
test
cmp
and
movsl
negb
push
or
movsb
pop
test
lods
mov
lret
in
addr16
push
jno
sti
xchg
push
push
dec
test
jl
mov
sahf
xchg
pop
cmp
adc
lcall
int
popa
xor
mov
adc
dec
dec
push
adc
or
sahf
sbb
adc
js
jne
jo
sbb
ds
xchg
push
mov
inc
fstps
cmp
je
and
mov
test
out
lcall
or
dec
nop
js
or
les
mov
push
pusha
mov
nop
ret
mov
decl
pop
jae
ds
fistl
cmpl
fisubs
sahf
jb
movsb
sbb
jl
xor
int
or
stos
mov
inc
jmp
negl
sbb
push
sbb
inc
sub
dec
jns
sub
push
mov
jecxz
andl
aas
mov
cmp
sbb
inc
xlat
ret
push
xchg
adc
ljmp
movsl
inc
ret
fisttpl
dec
pushf
adc
cmp
fldt
or
sbb
test
jbe
mov
icebp
lahf
pop
dec
popa
movb
mov
adc
or
push
lret
push
dec
lods
push
test
add
ret
mov
stc
mov
out
cmc
and
xchg
or
fwait
and
sub
xchg
push
dec
out
or
mov
fwait
cwtl
or
cmp
dec
inc
test
stos
xor
scas
mov
std
jne
xchg
rorl
adc
pop
inc
add
scas
movl
push
pop
imul
and
or
mov
pop
pushf
sub
cltd
lods
pop
int
jge
pushf
in
rcl
jne
iret
jbe
cmpsb
daa
scas
adc
or
add
in
sub
xor
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
sub
push
xor
add
push
push
push
push
push
call
add
call
test
je
cmp
je
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
cmp
je
xor
add
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
mov
push
push
call
add
push
call
add
push
push
call
add
mov
sub
push
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
cmp
je
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
add
call
cmp
jne
xor
call
push
push
call
add
mov
push
push
call
add
push
push
push
call
add
call
add
push
push
push
call
add
test
jne
mov
mov
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
cmp
je
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
sub
push
push
push
push
push
call
add
call
cmp
je
cmp
je
cmp
jne
call
push
push
push
push
call
add
call
push
push
call
add
add
call
cmp
je
push
push
call
add
add
push
call
add
add
push
push
push
call
add
push
push
call
add
add
call
push
push
call
add
push
push
push
call
add
xor
mov
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
call
add
add
push
push
push
call
add
mov
xor
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
call
push
push
call
add
cmp
jne
call
push
push
push
push
call
add
push
push
call
add
push
push
call
add
and
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
call
add
add
push
push
push
push
push
call
add
add
push
call
add
push
call
add
mov
mov
push
push
push
call
add
lea
push
call
xor
push
push
push
call
test
jne
xor
cmp
jne
push
push
push
call
add
push
push
push
push
call
add
xor
mov
mov
add
and
or
and
sub
mov
add
push
call
add
add
push
push
push
call
add
cmp
je
mov
or
push
push
push
call
add
push
push
push
push
call
add
call
xor
add
add
cmp
je
push
push
push
call
add
mov
mov
mov
add
sub
mov
sub
mov
sub
add
and
cmp
je
sub
mov
mov
mov
push
push
push
call
add
push
push
push
push
call
add
add
add
push
push
push
call
add
call
add
push
push
push
push
push
call
add
call
mov
push
push
push
push
call
add
call
cmp
jne
push
push
push
push
push
call
add
and
push
call
add
push
push
push
push
push
call
add
or
push
call
call
push
push
push
push
push
call
add
call
sub
cmp
je
add
cmp
jne
cmp
jne
mov
sub
test
jne
test
je
xor
add
add
mov
add
mov
sub
sub
add
mov
push
push
push
push
call
add
call
sub
mov
sub
mov
add
add
add
sub
test
jne
mov
add
add
push
push
call
add
mov
mov
mov
test
jne
sub
or
add
cmp
je
mov
mov
sub
add
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
or
cmp
jne
mov
test
jne
cmp
jne
add
add
sub
and
mov
and
mov
add
add
or
cmp
jne
cmp
je
mov
mov
sub
cmp
je
mov
sub
mov
or
add
add
sub
sub
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
or
add
mov
sub
cmp
jne
add
mov
mov
cmp
jne
test
jne
test
jne
add
mov
sub
mov
add
and
or
and
and
xor
sub
mov
sub
cmp
je
or
mov
mov
sub
cmp
jne
sub
add
mov
mov
call
push
push
push
call
add
add
mov
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
sub
push
push
call
add
call
sub
push
call
add
push
call
add
push
push
push
call
add
call
mov
add
xor
sub
or
add
or
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
cmp
jne
test
jne
push
push
call
add
mov
cmp
je
push
push
push
push
call
add
test
jne
push
push
push
push
push
call
add
push
push
push
call
add
test
je
mov
sub
push
push
call
add
push
push
push
push
call
add
push
push
call
add
sub
mov
mov
push
push
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
push
push
push
push
push
call
add
add
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
sub
and
mov
push
push
push
push
call
add
add
cmp
je
push
push
push
call
add
mov
sub
push
push
call
add
mov
call
add
push
push
push
push
call
add
test
je
or
add
push
push
push
push
call
add
xor
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
sub
sub
push
push
call
add
xor
call
mov
and
push
call
add
push
push
call
add
add
push
push
call
add
or
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
call
add
cmp
jne
sub
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
push
push
call
add
mov
mov
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
push
call
add
call
push
push
call
add
sub
sub
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
sub
call
sub
add
xor
mov
call
sub
push
push
push
push
call
add
call
sub
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
push
call
add
add
add
call
push
call
add
push
push
push
push
push
call
add
lea
mov
mov
add
or
sub
sub
add
cmp
jne
and
mov
mov
sub
add
and
sub
sub
sub
cmp
je
mov
and
mov
cmp
je
add
mov
mov
add
sub
cmp
je
mov
mov
cmp
jne
mov
add
or
or
and
xor
test
jne
sub
add
test
jne
mov
add
cmp
jne
sub
cmp
je
sub
push
push
call
add
call
mov
push
push
push
call
add
sub
and
push
push
push
call
add
call
sub
mov
sub
push
push
call
add
shr
cmp
je
cmp
jne
cmp
jne
add
cmp
jne
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
sub
or
push
call
add
cmp
jne
mov
sub
mov
sub
sub
sub
call
add
mov
push
push
push
push
push
call
add
push
call
add
mov
cmp
jne
mov
pushl
push
pushl
call
push
push
push
call
add
push
push
push
call
add
addl
push
push
push
call
add
mov
add
call
or
call
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
mov
cmp
jne
push
push
push
push
call
add
add
xor
push
push
push
push
push
call
add
push
push
push
call
add
mov
add
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
add
push
push
push
push
push
call
add
push
call
add
sub
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
sub
push
push
push
push
push
call
add
xor
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
call
push
call
add
push
push
push
call
add
call
push
push
push
push
call
add
push
call
add
add
push
push
push
push
push
call
add
push
push
push
call
add
mov
mov
call
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
call
cmp
je
call
cmp
je
push
push
call
add
xor
mov
push
push
push
call
add
add
push
push
push
call
add
push
push
push
push
push
call
add
call
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
call
add
push
push
push
push
call
add
call
push
push
call
add
push
push
push
push
push
call
add
push
call
add
add
push
push
push
push
call
add
call
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
cmp
jne
push
push
push
call
add
push
push
call
add
mov
push
call
add
mov
sub
sub
push
call
add
call
call
push
call
add
call
sub
push
push
call
add
pop
cmp
jne
mov
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
pop
cmp
jne
push
call
add
push
push
push
push
call
add
pop
sub
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
call
add
push
push
push
push
call
add
push
mov
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
cmp
jne
push
push
call
add
push
call
add
movl
mov
xor
sub
push
call
add
push
push
call
add
sub
push
push
push
push
call
add
cmp
je
mov
push
push
push
call
add
push
call
add
push
push
push
push
call
add
mov
push
call
add
or
push
push
push
call
add
mov
add
xor
sub
or
cmp
je
mov
mov
cmp
jne
mov
add
or
cmp
jne
mov
cmp
jne
mov
add
mov
add
sub
or
and
cmp
jne
mov
and
mov
test
jne
cmp
je
or
or
mov
cmp
je
and
add
mov
cmp
je
mov
and
sub
and
mov
or
sub
sub
cmp
jne
mov
mov
cmp
jne
or
cmp
jne
add
sub
add
mov
mov
cmp
je
add
mov
mov
add
cmp
je
xor
xor
add
add
and
sub
and
test
je
or
mov
mov
cmp
jne
or
mov
add
sub
pushl
push
push
push
push
call
add
push
push
call
add
pop
sub
mov
call
push
call
add
rdtsc
mov
xor
and
mov
add
sub
mov
or
add
cmp
je
add
add
add
cmp
je
push
push
push
push
push
call
add
addl
push
push
call
add
push
call
add
add
cmp
je
mov
test
jne
add
sub
cmp
jne
add
add
mov
or
add
mov
add
xor
or
je
mov
cmp
jne
cmp
jne
and
add
sub
addl
add
lea
xor
and
mov
cmp
je
cmp
jne
add
mov
add
sub
cmp
je
cmp
jne
mov
mov
sub
or
add
sub
inc
mov
sub
mov
mov
sub
add
mov
cmp
je
add
test
jne
sub
sub
mov
xor
add
sub
sub
cmp
jne
and
cmp
jne
add
add
cmp
jne
sub
and
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
add
call
push
call
add
push
push
push
call
add
mov
add
or
or
mov
mov
or
cmp
je
mov
and
sub
mov
sub
sub
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
add
cmp
je
add
cmp
je
test
jne
mov
cmp
je
xor
add
add
sub
add
mov
add
add
xor
sub
cmp
je
sub
mov
mov
and
add
add
add
cmp
je
add
cmp
je
mov
and
cmp
je
mov
test
jne
cmp
je
mov
add
sub
mov
cmp
jne
and
mov
and
sub
or
sub
sub
sub
cmp
jne
mov
cmp
jne
mov
mov
mov
sub
and
sub
and
sub
add
sub
mov
cmp
jne
cmp
je
push
push
push
push
push
call
add
add
call
test
jne
add
push
push
push
call
add
pop
push
push
call
add
push
push
push
push
call
add
pop
mov
and
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
call
add
push
mov
push
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
cmp
jne
mov
cmp
je
and
mov
test
je
mov
mov
test
je
sub
mov
mov
or
cmp
jne
mov
cmp
je
cmp
jne
sub
mov
mov
sub
cmp
je
cmp
jne
add
xor
mov
or
cmp
je
add
sub
mov
test
jne
mov
or
mov
cmp
jne
mov
or
add
test
jne
add
cmp
je
add
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
sub
xor
and
cmp
jne
mov
cmp
je
mov
mov
add
cmp
jne
cmp
jne
mov
sub
mov
cmp
je
add
mov
sub
or
and
mov
add
sub
and
sub
add
sub
mov
and
and
sub
cmpl
je
sub
mov
cmp
je
cmp
je
xor
mov
cmp
je
sub
mov
add
mov
cmp
je
mov
sub
or
cmp
jne
mov
mov
sub
sub
sub
test
je
sub
cmp
je
mov
mov
add
test
jne
mov
mov
cmp
jne
sub
sub
mov
mov
or
sub
test
jne
mov
mov
cmp
jne
sub
mov
cmp
jne
mov
cmp
jne
test
jne
cmp
jne
and
cmp
je
and
xor
mov
add
xor
sub
sub
decl
cmp
jne
cmp
jne
cmp
jne
sub
and
sub
addl
sub
cmp
je
add
add
test
jne
cmp
je
mov
xor
sub
sub
test
je
sub
mov
roll
cmp
je
mov
cmp
je
or
and
cmp
jne
add
sub
cmp
je
cmp
je
and
sub
add
mov
mov
jmp
push
push
push
push
push
call
add
call
mov
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
test
je
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
call
add
pop
push
push
push
push
call
add
pop
mov
push
call
add
pop
call
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
mov
call
call
mov
push
push
push
call
add
sub
sub
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
call
add
add
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
cmp
jne
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
push
push
call
add
call
mov
sub
add
mov
push
push
push
push
call
add
movl
xor
sub
mov
add
push
call
add
mov
xor
and
call
call
add
mov
mov
push
push
push
push
push
call
add
push
call
add
push
push
call
add
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
call
push
call
add
sub
and
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
call
add
call
call
call
push
push
push
call
add
add
push
push
push
push
push
call
add
mov
test
jne
mov
sub
add
sub
or
mov
mov
sub
add
mov
or
sub
sub
sub
cmp
jne
cmp
je
mov
sub
test
je
xor
cmp
jne
and
and
sub
add
sub
mov
add
test
jne
mov
and
sub
or
and
mov
cmp
je
sub
sub
cmp
jne
sub
or
je
add
repnz
push
push
push
push
push
call
add
addl
cmp
je
sub
mov
call
push
push
push
push
push
call
add
jmp
and
push
push
push
push
call
add
mov
cmp
je
or
mov
mov
cmp
jne
and
test
jne
test
je
mov
mov
add
mov
cmp
jne
mov
or
mov
cmp
jne
mov
cmp
je
add
add
mov
test
jne
mov
mov
add
add
add
sub
sub
pop
mov
sub
mov
sub
add
add
cmp
jne
add
cmp
jne
mov
mov
sub
add
add
cmp
je
mov
mov
sub
cmp
jne
mov
mov
sub
or
or
sub
add
add
pop
sub
cmp
jne
test
je
mov
xor
cmp
jne
sub
mov
sub
or
cmp
jne
sub
mov
or
mov
sub
sub
sub
add
add
and
add
sub
add
and
add
pop
cmp
jne
cmp
jne
xor
xor
mov
cmp
je
sub
add
sub
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
mov
sub
mov
push
mov
mov
sub
and
push
cmp
jne
and
xor
cmp
je
and
mov
mov
mov
add
add
add
mov
add
push
add
mov
mov
cmp
je
xor
xor
mov
sub
sub
or
sub
sub
or
add
cmp
je
mov
and
sub
sub
sub
or
xor
sub
sub
mov
xor
or
sub
mov
mov
and
cmp
jne
cmp
jne
mov
cmp
jne
add
sub
mov
mov
add
or
sub
sub
add
cmp
je
sub
cmp
jne
and
cmp
jne
mov
add
xor
sub
sub
and
or
or
add
mov
mov
sub
add
sub
sub
test
je
mov
add
add
cmp
jne
mov
mov
add
sub
pop
add
pop
cmp
jne
and
mov
mov
add
add
test
je
cmp
je
add
add
and
mov
cmp
jne
cmp
je
mov
mov
add
cmp
je
and
cmp
je
add
sub
mov
and
xor
mov
cmp
jne
mov
mov
add
cmp
jne
cmp
jne
cmp
je
add
xor
add
mov
add
mov
add
sub
add
sub
or
pop
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
add
push
xor
or
sub
mov
sub
sub
push
test
je
sub
sub
mov
mov
and
cmp
jne
mov
add
or
test
jne
mov
add
mov
sub
add
cmp
je
sub
mov
or
and
add
sub
test
jne
mov
cmp
je
mov
sub
mov
add
add
add
cmp
je
add
mov
mov
and
sub
sub
add
sub
add
add
mov
test
jne
add
pop
and
mov
mov
add
sub
or
test
je
mov
sub
mov
pop
or
pop
xor
mov
add
add
and
sub
leave
ret
